

====== START ORIO ======

----- begin reading the source file: atax2.src1.c -----
----- finished reading the source file -----

----- begin parsing annotations -----
----- finished parsing annotations -----

----- begin optimizations -----
Search_Space         = 8.234e+13
Number_of_Parameters = 18
Numeric_Parameters   = 13
Binary_Parameters    = 05
['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
[[1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [False, True], [False, True], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 8, 32], [1, 8, 32], [1, 8, 32], [False, True], [False, True], [False, True]]

----- begin empirical tuning for problem size -----
 N = 10000
Parameters: {'ACOPY_x': [0, 2], 'ACOPY_y': [0, 2], 'RT_K': [0, 3], 'T1_I': [0, 7], 'T1_J': [0, 7], 'T1_K': [0, 7], 'U_K': [0, 30], 'U_J': [0, 30], 'U_I': [0, 30], 'U1_I': [0, 30], 'T2_K': [0, 7], 'T2_J': [0, 7], 'T2_I': [0, 7], 'VEC2': [0, 2], 'VEC1': [0, 2], 'RT_I': [0, 3], 'SCR': [0, 2], 'RT_J': [0, 3]}

----- begin random search -----
['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
18
Building seed search space (does not spend evaluations)
Using pre-generated space for this size
Starting DOPT-anova
Step 0
 ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2
Fixed Factors: {}
Full data does not fit on budget
Computing D-Optimal Design
Updating Constraints
Updated Constraint: True and (((T2_I ==1 )or (T2_I %T1_I ==0 ))) and (((T2_J ==1 )or (T2_J %T1_J ==0 ))) and (((T2_K ==1 )or (T2_K %T1_K ==0 ))) and ((RT_I *RT_J +RT_I *RT_K +RT_J *RT_K <=150 )) and (((U_I ==1 )or (U_J ==1 )or (U_K ==1 )))
Computing D-Optimal Design with 36 experiments
Design Formula:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2
Starting "optMonteCarlo" run
       var low high center nLevels round factor   mix
1     T1_I   0    6      0       7     0  FALSE FALSE
2     T1_J   0    6      0       7     0  FALSE FALSE
3     T1_K   0    6      0       7     0  FALSE FALSE
4     T2_I   0    6      0       7     0  FALSE FALSE
5     T2_J   0    6      0       7     0  FALSE FALSE
6     T2_K   0    6      0       7     0  FALSE FALSE
7  ACOPY_x   0    1      0       2     0  FALSE FALSE
8  ACOPY_y   0    1      0       2     0  FALSE FALSE
9     U1_I   0   29      0      30     0  FALSE FALSE
10     U_I   0   29      0      30     0  FALSE FALSE
11     U_J   0   29      0      30     0  FALSE FALSE
12     U_K   0   29      0      30     0  FALSE FALSE
13    RT_I   0    2      0       3     0  FALSE FALSE
14    RT_J   0    2      0       3     0  FALSE FALSE
15    RT_K   0    2      0       3     0  FALSE FALSE
16     SCR   0    1      0       2     0  FALSE FALSE
17    VEC1   0    1      0       2     0  FALSE FALSE
18    VEC2   0    1      0       2     0  FALSE FALSE

   T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
1     5    2    1    4    0    1       0       0    5  17  10   0    2    0
2     3    5    5    4    0    3       0       1    7  19   0  29    0    0
3     5    0    5    6    5    0       0       0    2   0   1   0    0    1
4     6    3    6    4    2    6       1       1   29   0  29  10    0    0
5     1    6    2    3    0    3       0       1   27   0   3   2    1    1
6     0    2    0    6    6    5       0       0   29  26   0  21    0    0
7     1    5    1    6    5    6       0       0   29   4  16   0    0    2
8     2    0    0    2    3    6       1       1    2   0   0  12    0    0
9     0    0    6    4    0    5       0       1   13  12   0  23    0    2
10    1    5    3    5    0    1       1       0   28  28  16   0    0    0
11    0    2    0    2    4    6       1       1    3  21  17   0    0    0
12    5    5    0    4    3    5       0       0    2   0  16  23    0    0
13    6    0    4    6    3    0       1       0   27   0   2   5    0    0
14    1    2    3    0    0    1       0       1   11  22  27   0    0    0
15    2    2    6    4    3    6       0       1    8  21   0  19    0    0
16    2    5    2    0    6    0       0       0    1   1   0   2    0    0
17    6    1    1    0    2    5       1       1    1  27   0  21    0    2
18    5    3    1    6    4    1       0       1   24  16   0  28    2    0
19    5    5    0    5    4    2       1       1   27   1   0  23    0    2
20    0    3    0    0    6    4       1       0    7   0  24  29    0    0
21    5    0    1    6    0    4       1       1   17  20  28   0    1    0
22    1    4    5    6    3    0       1       1   10   0  28  28    0    1
23    0    0    5    6    3    3       1       1    2   0   7  24    2    0
24    3    6    4    1    5    3       1       1    0  28   4   0    0    2
25    0    1    0    0    1    1       0       0   27   0  25  28    1    1
26    6    1    3    0    3    0       0       1   23   3   0  27    0    0
27    0    4    2    5    4    1       1       1    7   7   0   9    0    0
28    5    5    5    0    5    6       1       0   29  10   0  26    1    0
29    5    2    3    4    5    6       0       0   13   1  23   0    0    2
30    0    6    3    0    0    4       1       0    4  20   0  13    0    0
31    1    5    4    1    0    0       0       0   10   0  25  29    1    0
32    0    2    1    1    0    2       0       1   26   0  22   6    1    0
33    1    0    4    0    5    0       1       0   27  25   0   5    1    1
34    2    2    4    0    6    4       1       1   28   0  14  25    0    0
35    5    6    1    4    5    0       0       1   19  29   1   0    0    0
36    3    5    6    3    4    5       1       1   11   7  24   0    2    0
   RT_K SCR VEC1 VEC2
1     0   0    0    1
2     2   1    1    1
3     1   0    1    0
4     1   0    0    1
5     0   1    1    1
6     2   1    1    0
7     0   0    1    1
8     2   0    1    0
9     0   1    1    0
10    1   0    1    0
11    0   0    1    0
12    1   1    1    0
13    0   1    0    0
14    0   1    1    0
15    0   1    0    1
16    2   0    1    1
17    0   0    0    0
18    0   0    0    0
19    0   0    1    1
20    1   1    0    1
21    1   1    1    1
22    1   0    0    1
23    0   0    1    1
24    0   1    1    0
25    0   0    0    0
26    0   1    1    1
27    0   1    0    1
28    0   1    1    0
29    0   1    0    0
30    2   0    0    1
31    0   0    1    0
32    1   1    0    0
33    0   1    1    1
34    2   0    1    1
35    2   0    0    0
36    0   0    0    0

D-Efficiency Approximation: [1] 0.628

Measuring design of size 18
Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Design Line: [5, 2, 1, 4, 0, 1, 0, 0, 5, 17, 10, 0, 2, 0, 0, 0, 0, 1]
Fixed Factors: {}
Testing candidate 1: [5, 2, 1, 4, 0, 1, 0, 0, 5, 17, 10, 0, 2, 0, 0, 0, 0, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	25
        Max loop nest depth: 	6
        Additions: 		4302
        Multiplications: 	1326
        Divisions: 		0
        Logical: 		0
        Reads: 			6883
        Writes: 		752
        Comparisons:		25
        Gotos: 			0
        
digraph CFG {
	190373 [label="190373  register int cbv_2, cbv_3;...",shape=box];
	153 [label="153  int i;...",shape=box];
	153 -> ForLoop332;
	_JOIN_9336 [label="_JOIN_9336None...",shape=box];
	_JOIN_9336 -> _JOIN_9338;
	11199 [label="11199  y[k]=y[k]+A[it*ny+k]*tmp[it];...",shape=box];
	65157 [label="65157  tmp[it]=tmp[it]+A[it*ny+j]*x[j];...",shape=box];
	ForLoop132015 [label="ForLoop132015  for (j=jj; j<=cbv_5; j=j+11) {...",shape=box];
	ForLoop132015 -> 125490;
	ForLoop132015 -> _JOIN_132015;
	133223 [label="133223  int j;...",shape=box];
	_JOIN_3783 [label="_JOIN_3783None...",shape=box];
	ForLoop76848 [label="ForLoop76848  for (j=jj; j<=cbv_1; j=j+11) {...",shape=box];
	ForLoop76848 -> 65157;
	ForLoop76848 -> _JOIN_76848;
	ForLoop133583 [label="ForLoop133583  for (j=cbv_10; j<=cbv_11; j=j+1) ...",shape=box];
	ForLoop133583 -> 133582;
	ForLoop133583 -> _JOIN_133583;
	_JOIN_133657 [label="_JOIN_133657None...",shape=box];
	_JOIN_133657 -> _JOIN_133659;
	ForLoop133585 [label="ForLoop133585  for (jj=0; jj<=ny-1; jj=jj+32) {...",shape=box];
	ForLoop133585 -> 133223;
	ForLoop133585 -> _JOIN_133585;
	ForLoop133092 [label="ForLoop133092  for (k=kk; k<=cbv_8; k=k+1) {...",shape=box];
	ForLoop133092 -> 132648;
	ForLoop133092 -> _JOIN_133092;
	_JOIN_133659 [label="_JOIN_133659None...",shape=box];
	_JOIN_133659 -> _JOIN_3782;
	ForLoop133094 [label="ForLoop133094  for (kk=kkk; kk<=min(ny-1,kkk+48); kk=kk+16) {...",shape=box];
	ForLoop133094 -> 198936;
	ForLoop133094 -> _JOIN_133094;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 153;
	133582 [label="133582  tmp[i]=tmp[i]+A[i*ny+j]*x[j];...",shape=box];
	133582 -> _JOIN_133583;
	_JOIN_132579 [label="_JOIN_132579None...",shape=box];
	_JOIN_132579 -> ForLoop133096;
	132648 [label="132648  y[k]=y[k]+A[i*ny+k]*tmp[i];...",shape=box];
	ForLoop9264 [label="ForLoop9264  for (jj=0; jj<=ny-1; jj=jj+32) {...",shape=box];
	ForLoop9264 -> 46369;
	ForLoop9264 -> _JOIN_9264;
	_JOIN_9338 [label="_JOIN_9338None...",shape=box];
	_JOIN_9338 -> 109167;
	125490 [label="125490  tmp[i]=tmp[i]+A[i*ny+j]*x[j];...",shape=box];
	_JOIN_9335 [label="_JOIN_9335None...",shape=box];
	_JOIN_9335 -> _JOIN_9336;
	_JOIN_9334 [label="_JOIN_9334None...",shape=box];
	_JOIN_9334 -> _JOIN_9335;
	_JOIN_9264 [label="_JOIN_9264None...",shape=box];
	_JOIN_9264 -> ForLoop9336;
	_JOIN_132577 [label="_JOIN_132577None...",shape=box];
	_JOIN_132577 -> _JOIN_132579;
	133263 [label="133263  tmp[i]=tmp[i]+A[i*ny+j]*x[j];...",shape=box];
	_JOIN_3782 [label="_JOIN_3782None...",shape=box];
	_JOIN_3782 -> _JOIN_3783;
	_JOIN_133092 [label="_JOIN_133092None...",shape=box];
	_JOIN_133092 -> _JOIN_133094;
	191263 [label="191263  register int cbv_4;...",shape=box];
	ForLoop133096 [label="ForLoop133096  for (kkk=0; kkk<=ny-1; kkk=kkk+64) {...",shape=box];
	ForLoop133096 -> ForLoop133094;
	ForLoop133096 -> _JOIN_133096;
	_JOIN_401 [label="_JOIN_401None...",shape=box];
	_JOIN_401 -> 7845;
	400 [label="400  y[i]=0.0;...",shape=box];
	400 -> _JOIN_401;
	_JOIN_133098 [label="_JOIN_133098None...",shape=box];
	_JOIN_133098 -> ForLoop133659;
	_JOIN_133094 [label="_JOIN_133094None...",shape=box];
	_JOIN_133094 -> _JOIN_133096;
	_JOIN_133585 [label="_JOIN_133585None...",shape=box];
	_JOIN_133585 -> ForLoop133657;
	285 [label="285  y[i]=0.0;...",shape=box];
	132082 [label="132082  tmp[i]=tmp[i]+A[i*ny+j]*x[j];...",shape=box];
	198410 [label="198410  register int cbv_6, cbv_7;...",shape=box];
	125266 [label="125266  tmp[i]=0;...",shape=box];
	_JOIN_332 [label="_JOIN_332None...",shape=box];
	_JOIN_332 -> ForLoop401;
	ForLoop133656 [label="ForLoop133656  for (kk=kkk; kk<=min(ny-1,kkk+48); kk=kk+16) {...",shape=box];
	ForLoop133656 -> 199399;
	ForLoop133656 -> _JOIN_133656;
	_JOIN_133096 [label="_JOIN_133096None...",shape=box];
	_JOIN_133096 -> _JOIN_133098;
	125433 [label="125433  int j;...",shape=box];
	ForLoop132577 [label="ForLoop132577  for (j=cbv_6; j<=cbv_7; j=j+1) {...",shape=box];
	ForLoop132577 -> 132082;
	ForLoop132577 -> _JOIN_132577;
	ForLoop132579 [label="ForLoop132579  for (jj=0; jj<=ny-1; jj=jj+32) {...",shape=box];
	ForLoop132579 -> 125433;
	ForLoop132579 -> _JOexpected=9369846271501.798828
actual=9369846271501.798828
IN_132579;
	9500 [label="9500  tmp[it]=0;...",shape=box];
	9500 -> ForLoop9264;
	_JOIN_76848 [label="_JOIN_76848None...",shape=box];
	_JOIN_76848 -> 190373;
	46369 [label="46369  int j;...",shape=box];
	ForLoop9338 [label="ForLoop9338  for (it=ii; it<=min(nx-1,ii+255)-31; it=it+32) {...",shape=box];
	ForLoop9338 -> 9500;
	ForLoop9338 -> _JOIN_9338;
	76973 [label="76973  tmp[it]=tmp[it]+A[it*ny+j]*x[j];...",shape=box];
	ForLoop133659 [label="ForLoop133659  for (i=(min(nx-1,ii+255))-(((min(nx-1,ii+255))-(it)+1)%18)+1; i<=min(nx-1,ii+255); i=i+1) {...",shape=box];
	ForLoop133659 -> 133209;
	ForLoop133659 -> _JOIN_133659;
	7845 [label="7845  double x_copy;...",shape=box];
	ForLoop133657 [label="ForLoop133657  for (kkk=0; kkk<=ny-1; kkk=kkk+64) ...",shape=box];
	ForLoop133657 -> ForLoop133656;
	ForLoop133657 -> _JOIN_133657;
	ForLoop77874 [label="ForLoop77874  for (j=cbv_2; j<=cbv_3; j=j+1) {...",shape=box];
	ForLoop77874 -> 76973;
	ForLoop77874 -> _JOIN_77874;
	ForLoop332 [label="ForLoop332  for (i=0; i<=ny-6; i=i+6) {...",shape=box];
	ForLoop332 -> 285;
	ForLoop332 -> _JOIN_332;
	ForLoop9335 [label="ForLoop9335  for (kk=kkk; kk<=min(ny-1,kkk+48); kk=kk+16) {...",shape=box];
	ForLoop9335 -> 191263;
	ForLoop9335 -> _JOIN_9335;
	ForLoop9334 [label="ForLoop9334  for (k=kk; k<=cbv_4; k=k+1) {...",shape=box];
	ForLoop9334 -> 11199;
	ForLoop9334 -> _JOIN_9334;
	199399 [label="199399  register int cbv_12;...",shape=box];
	ForLoop9336 [label="ForLoop9336  for (kkk=0; kkk<=ny-1; kkk=kkk+64) ...",shape=box];
	ForLoop9336 -> ForLoop9335;
	ForLoop9336 -> _JOIN_9336;
	_JOIN_133656 [label="_JOIN_133656None...",shape=box];
	_JOIN_133656 -> _JOIN_133657;
	ForLoop133098 [label="ForLoop133098  for (i=it; i<=min(nx-1,ii+255)-17; i=i+18) {...",shape=box];
	ForLoop133098 -> 125266;
	ForLoop133098 -> _JOIN_133098;
	ForLoop401 [label="ForLoop401  for (i=ny-((ny-(0))%6); i<=ny-1; i=i+1) ...",shape=box];
	ForLoop401 -> 400;
	ForLoop401 -> _JOIN_401;
	_JOIN_133655 [label="_JOIN_133655None...",shape=box];
	_JOIN_133655 -> _JOIN_133656;
	_JOIN_133515 [label="_JOIN_133515None...",shape=box];
	_JOIN_133515 -> 199316;
	198936 [label="198936  register int cbv_8;...",shape=box];
	133209 [label="133209  tmp[i]=0;...",shape=box];
	133209 -> ForLoop133585;
	ForLoop133515 [label="ForLoop133515  for (j=jj; j<=cbv_9; j=j+11) {...",shape=box];
	ForLoop133515 -> 133263;
	ForLoop133515 -> _JOIN_133515;
	ForLoop133655 [label="ForLoop133655  for (k=kk; k<=cbv_12; k=k+1) ...",shape=box];
	ForLoop133655 -> 133654;
	ForLoop133655 -> _JOIN_133655;
	109167 [label="109167  int i;...",shape=box];
	109167 -> ForLoop133098;
	_JOIN_133583 [label="_JOIN_133583None...",shape=box];
	_JOIN_133583 -> _JOIN_133585;
	_JOIN_77874 [label="_JOIN_77874None...",shape=box];
	_JOIN_77874 -> _JOIN_9264;
	_JOIN_132015 [label="_JOIN_132015None...",shape=box];
	_JOIN_132015 -> 198410;
	199316 [label="199316  register int cbv_10, cbv_11;...",shape=box];
	133654 [label="133654  y[k]=y[k]+A[i*ny+k]*tmp[i];...",shape=box];
	133654 -> _JOIN_133655;
	ForLoop3782 [label="ForLoop3782  for (ii=iii; ii<=min(nx-1,iii+256); ii=ii+256) {...",shape=box];
	ForLoop3782 -> ForLoop9338;
	ForLoop3782 -> _JOIN_3782;
	ForLoop3783 [label="ForLoop3783  for (iii=0; iii<=nx-1; iii=iii+512) ...",shape=box];
	ForLoop3783 -> ForLoop3782;
	ForLoop3783 -> _JOIN_3783;

}

 compiling timer:
	gcc -O3 -fopenmp -DDYNAMIC -O0 -c -o timer_cpu.o timer_cpu.c
 building the original code:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -DORIGINAL -o __orio_perftest_original.exe __orio_perftest1.c timer_cpu.o -lm
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest1.exe __orio_perftest1.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest1.exe  
{'[5, 2, 1, 4, 0, 1, 0, 0, 5, 17, 10, 0, 2, 0, 0, 0, 0, 1]' : 0.25752}
{'[5, 2, 1, 4, 0, 1, 0, 0, 5, 17, 10, 0, 2, 0, 0, 0, 0, 1]' : 0.257188}
{'[5, 2, 1, 4, 0, 1, 0, 0, 5, 17, 10, 0, 2, 0, 0, 0, 0, 1]' : 0.257427}
{'[5, 2, 1, 4, 0, 1, 0, 0, 5, 17, 10, 0, 2, 0, 0, 0, 0, 1]' : 0.257314}
{'[5, 2, 1, 4, 0, 1, 0, 0, 5, 17, 10, 0, 2, 0, 0, 0, 0, 1]' : 0.257701}
{'[5, 2, 1, 4, 0, 1, 0, 0, 5, 17, 10, 0, 2, 0, 0, 0, 0, 1]' : 0.257435}
{'[5, 2, 1, 4, 0, 1, 0, 0, 5, 17, 10, 0, 2, 0, 0, 0, 0, 1]' : 0.257462}
{'[5, 2, 1, 4, 0, 1, 0, 0, 5, 17, 10, 0, 2, 0, 0, 0, 0, 1]' : 0.257423}
{'[5, 2, 1, 4, 0, 1, 0, 0, 5, 17, 10, 0, 2, 0, 0, 0, 0, 1]' : 0.257597}
{'[5, 2, 1, 4, 0, 1, 0, 0, 5, 17, 10, 0, 2, 0, 0, 0, 0, 1]' : 0.257234}
{'[5, 2, 1, 4, 0, 1, 0, 0, 5, 17, 10, 0, 2, 0, 0, 0, 0, 1]' : 0.257544}
{'[5, 2, 1, 4, 0, 1, 0, 0, 5, 17, 10, 0, 2, 0, 0, 0, 0, 1]' : 0.257321}
{'[5, 2, 1, 4, 0, 1, 0, 0, 5, 17, 10, 0, 2, 0, 0, 0, 0, 1]' : 0.257395}
{'[5, 2, 1, 4, 0, 1, 0, 0, 5, 17, 10, 0, 2, 0, 0, 0, 0, 1]' : 0.257439}
{'[5, 2, 1, 4, 0, 1, 0, 0, 5, 17, 10, 0, 2, 0, 0, 0, 0, 1]' : 0.257262}
{'[5, 2, 1, 4, 0, 1, 0, 0, 5, 17, 10, 0, 2, 0, 0, 0, 0, 1]' : 0.257233}
{'[5, 2, 1, 4, 0, 1, 0, 0, 5, 17, 10, 0, 2, 0, 0, 0, 0, 1]' : 0.25784}
{'[5, 2, 1, 4, 0, 1, 0, 0, 5, 17, 10, 0, 2, 0, 0, 0, 0, 1]' : 0.257415}
{'[5, 2, 1, 4, 0, 1, 0, 0, 5, 17, 10, 0, 2, 0, 0, 0, 0, 1]' : 0.257154}
{'[5, 2, 1, 4, 0, 1, 0, 0, 5, 17, 10, 0, 2, 0, 0, 0, 0, 1]' : 0.257299}
{'[5, 2, 1, 4, 0, 1, 0, 0, 5, 17, 10, 0, 2, 0, 0, 0, 0, 1]' : 0.257301}
{'[5, 2, 1, 4, 0, 1, 0, 0, 5, 17, 10, 0, 2, 0, 0, 0, 0, 1]' : 0.25735}
{'[5, 2, 1, 4, 0, 1, 0, 0, 5, 17, 10, 0, 2, 0, 0, 0, 0, 1]' : 0.257686}
{'[5, 2, 1, 4, 0, 1, 0, 0, 5, 17, 10, 0, 2, 0, 0, 0, 0, 1]' : 0.257342}
{'[5, 2, 1, 4, 0, 1, 0, 0, 5, 17, 10, 0, 2, 0, 0, 0, 0, 1]' : 0.257764}
{'[5, 2, 1, 4, 0, 1, 0, 0, 5, 17, 10, 0, 2, 0, 0, 0, 0, 1]' : 0.25757}
{'[5, 2, 1, 4, 0, 1, 0, 0, 5, 17, 10, 0, 2, 0, 0, 0, 0, 1]' : 0.257156}
{'[5, 2, 1, 4, 0, 1, 0, 0, 5, 17, 10, 0, 2, 0, 0, 0, 0, 1]' : 0.257376}
{'[5, 2, 1, 4, 0, 1, 0, 0, 5, 17, 10, 0, 2, 0, 0, 0, 0, 1]' : 0.257884}
{'[5, 2, 1, 4, 0, 1, 0, 0, 5, 17, 10, 0, 2, 0, 0, 0, 0, 1]' : 0.25746}

out:
 ["{'[5, 2, 1, 4, 0, 1, 0, 0, 5, 17, 10, 0, 2, 0, 0, 0, 0, 1]' : 0.25752}", "{'[5, 2, 1, 4, 0, 1, 0, 0, 5, 17, 10, 0, 2, 0, 0, 0, 0, 1]' : 0.257188}", "{'[5, 2, 1, 4, 0, 1, 0, 0, 5, 17, 10, 0, 2, 0, 0, 0, 0, 1]' : 0.257427}", "{'[5, 2, 1, 4, 0, 1, 0, 0, 5, 17, 10, 0, 2, 0, 0, 0, 0, 1]' : 0.257314}", "{'[5, 2, 1, 4, 0, 1, 0, 0, 5, 17, 10, 0, 2, 0, 0, 0, 0, 1]' : 0.257701}", "{'[5, 2, 1, 4, 0, 1, 0, 0, 5, 17, 10, 0, 2, 0, 0, 0, 0, 1]' : 0.257435}", "{'[5, 2, 1, 4, 0, 1, 0, 0, 5, 17, 10, 0, 2, 0, 0, 0, 0, 1]' : 0.257462}", "{'[5, 2, 1, 4, 0, 1, 0, 0, 5, 17, 10, 0, 2, 0, 0, 0, 0, 1]' : 0.257423}", "{'[5, 2, 1, 4, 0, 1, 0, 0, 5, 17, 10, 0, 2, 0, 0, 0, 0, 1]' : 0.257597}", "{'[5, 2, 1, 4, 0, 1, 0, 0, 5, 17, 10, 0, 2, 0, 0, 0, 0, 1]' : 0.257234}", "{'[5, 2, 1, 4, 0, 1, 0, 0, 5, 17, 10, 0, 2, 0, 0, 0, 0, 1]' : 0.257544}", "{'[5, 2, 1, 4, 0, 1, 0, 0, 5, 17, 10, 0, 2, 0, 0, 0, 0, 1]' : 0.257321}", "{'[5, 2, 1, 4, 0, 1, 0, 0, 5, 17, 10, 0, 2, 0, 0, 0, 0, 1]' : 0.257395}", "{'[5, 2, 1, 4, 0, 1, 0, 0, 5, 17, 10, 0, 2, 0, 0, 0, 0, 1]' : 0.257439}", "{'[5, 2, 1, 4, 0, 1, 0, 0, 5, 17, 10, 0, 2, 0, 0, 0, 0, 1]' : 0.257262}", "{'[5, 2, 1, 4, 0, 1, 0, 0, 5, 17, 10, 0, 2, 0, 0, 0, 0, 1]' : 0.257233}", "{'[5, 2, 1, 4, 0, 1, 0, 0, 5, 17, 10, 0, 2, 0, 0, 0, 0, 1]' : 0.25784}", "{'[5, 2, 1, 4, 0, 1, 0, 0, 5, 17, 10, 0, 2, 0, 0, 0, 0, 1]' : 0.257415}", "{'[5, 2, 1, 4, 0, 1, 0, 0, 5, 17, 10, 0, 2, 0, 0, 0, 0, 1]' : 0.257154}", "{'[5, 2, 1, 4, 0, 1, 0, 0, 5, 17, 10, 0, 2, 0, 0, 0, 0, 1]' : 0.257299}", "{'[5, 2, 1, 4, 0, 1, 0, 0, 5, 17, 10, 0, 2, 0, 0, 0, 0, 1]' : 0.257301}", "{'[5, 2, 1, 4, 0, 1, 0, 0, 5, 17, 10, 0, 2, 0, 0, 0, 0, 1]' : 0.25735}", "{'[5, 2, 1, 4, 0, 1, 0, 0, 5, 17, 10, 0, 2, 0, 0, 0, 0, 1]' : 0.257686}", "{'[5, 2, 1, 4, 0, 1, 0, 0, 5, 17, 10, 0, 2, 0, 0, 0, 0, 1]' : 0.257342}", "{'[5, 2, 1, 4, 0, 1, 0, 0, 5, 17, 10, 0, 2, 0, 0, 0, 0, 1]' : 0.257764}", "{'[5, 2, 1, 4, 0, 1, 0, 0, 5, 17, 10, 0, 2, 0, 0, 0, 0, 1]' : 0.25757}", "{'[5, 2, 1, 4, 0, 1, 0, 0, 5, 17, 10, 0, 2, 0, 0, 0, 0, 1]' : 0.257156}", "{'[5, 2, 1, 4, 0, 1, 0, 0, 5, 17, 10, 0, 2, 0, 0, 0, 0, 1]' : 0.257376}", "{'[5, 2, 1, 4, 0, 1, 0, 0, 5, 17, 10, 0, 2, 0, 0, 0, 0, 1]' : 0.257884}", "{'[5, 2, 1, 4, 0, 1, 0, 0, 5, 17, 10, 0, 2, 0, 0, 0, 0, 1]' : 0.25746}"]
returning from 'run': {'[5, 2, 1, 4, 0, 1, 0, 0, 5, 17, 10, 0, 2WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = kkk
, 0, 0, 0, 0, 1]': ([0.25752, 0.257188, 0.257427, 0.257314, 0.257701, 0.257435, 0.257462, 0.257423, 0.257597, 0.257234, 0.257544, 0.257321, 0.257395, 0.257439, 0.257262, 0.257233, 0.25784, 0.257415, 0.257154, 0.257299, 0.257301, 0.25735, 0.257686, 0.257342, 0.257764, 0.25757, 0.257156, 0.257376, 0.257884, 0.25746], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.25752, 0.257188, 0.257427, 0.257314, 0.257701, 0.257435, 0.257462, 0.257423, 0.257597, 0.257234, 0.257544, 0.257321, 0.257395, 0.257439, 0.257262, 0.257233, 0.25784, 0.257415, 0.257154, 0.257299, 0.257301, 0.25735, 0.257686, 0.257342, 0.257764, 0.25757, 0.257156, 0.257376, 0.257884, 0.25746], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[5, 2, 1, 4, 0, 1, 0, 0, 5, 17, 10, 0, 2, 0, 0, 0, 0, 1]': ([0.25752, 0.257188, 0.257427, 0.257314, 0.257701, 0.257435, 0.257462, 0.257423, 0.257597, 0.257234, 0.257544, 0.257321, 0.257395, 0.257439, 0.257262, 0.257233, 0.25784, 0.257415, 0.257154, 0.257299, 0.257301, 0.25735, 0.257686, 0.257342, 0.257764, 0.25757, 0.257156, 0.257376, 0.257884, 0.25746], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [3, 5, 5, 4, 0, 3, 0, 1, 7, 19, 0, 29, 0, 0, 2, 1, 1, 1]
Fixed Factors: {}
Testing candidate 2: [3, 5, 5, 4, 0, 3, 0, 1, 7, 19, 0, 29, 0, 0, 2, 1, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	56
        Max loop nest depth: 	5
        Additions: 		3179
        Multiplications: 	1386
        Divisions: 		0
        Logical: 		0
        Reads: 			6140
        Writes: 		1055
        Comparisons:		56
        Gotos: 			0
        
digraph CFG {
	465950 [label="465950  double scv_54, scv_55, scv_56, scv_57, scv_58, scv_59, scv_60, scv_61;...",shape=box];
	_JOIN_366139 [label="_JOIN_366139None...",shape=box];
	_JOIN_366139 -> _JOIN_366141;
	ForLoop392711 [label="ForLoop392711  for (kt=kk; kt<=cbv_4; kt=kt+32) {...",shape=box];
	ForLoop392711 -> 465950;
	ForLoop392711 -> _JOIN_392711;
	_JOIN_392748 [label="_JOIN_392748None...",shape=box];
	_JOIN_392748 -> _JOIN_392749;
	200076 [label="200076  register int cbv_2, cbv_3;...",shape=box];
	365305 [label="365305  double x_copy;...",shape=box];
	392742 [label="392742  for (k=kk; k<=min(ny-1,kk+255); k=k+1) ...",shape=box];
	392742 -> _JOIN_392744;
	_JOIN_391428 [label="_JOIN_391428None...",shape=box];
	_JOIN_391428 -> ForLoop392746;
	_JOIN_391426 [label="_JOIN_391426None...",shape=box];
	_JOIN_391426 -> 463072;
	426064 [label="426064  double scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8, scv_9;...",shape=box];
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 199667;
	ForLoop391426 [label="ForLoop391426  for (kk=0; kk<=ny-1; kk=kk+256) {...",shape=box];
	ForLoop391426 -> 366185;
	ForLoop391426 -> _JOIN_391426;
	463054 [label="463054  double scv_34, scv_35, scv_36, scv_37, scv_38, scv_39, scv_40, scv_41;...",shape=box];
	469846 [label="469846  double scv_86;...",shape=box];
	ForLoop391428 [label="ForLoop391428  for (i=ii; i<=min(nx-1,ii+63)-19; i=i+20) {...",shape=box];
	ForLoop391428 -> 463054;
	ForLoop391428 -> _JOIN_391428;
	503026 [label="503026  register int cbv_1;...",shape=box];
	ForLoop366139 [label="ForLoop366139  for (j=jj; j<=cbv_1; j=j+1) {...",shape=box];
	ForLoop366139 -> 393651;
	ForLoop366139 -> _JOIN_366139;
	ForLoop199963 [label="ForLoop199963  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop199963 -> 199962;
	ForLoop199963 -> _JOIN_199963;
	515832 [label="515832  register int cbv_3;...",shape=box];
	ForLoop392746 [label="ForLoop392746  for (i=(min(nx-1,ii+63))-(((min(nx-1,ii+63))-(ii)+1)%20)+1; i<=min(nx-1,ii+63); i=i+1) {...",shape=box];
	ForLoop392746 -> 469846;
	ForLoop392746 -> _JOIN_392746;
	391578 [label="391578  for (k=kk; k<=min(ny-1,kk+255)expected=9339882853735.613281
actual=9369846271501.798828
; k=k+1) ...",shape=box];
	ForLoop392744 [label="ForLoop392744  for (kk=0; kk<=ny-1; kk=kk+256) {...",shape=box];
	ForLoop392744 -> 391578;
	ForLoop392744 -> _JOIN_392744;
	_JOIN_392746 [label="_JOIN_392746None...",shape=box];
	_JOIN_392746 -> _JOIN_392748;
	_JOIN_392744 [label="_JOIN_392744None...",shape=box];
	_JOIN_392744 -> 469858;
	_JOIN_392749 [label="_JOIN_392749None...",shape=box];
	_JOIN_366141 [label="_JOIN_366141None...",shape=box];
	_JOIN_366141 -> ForLoop391426;
	ForLoop199894 [label="ForLoop199894  for (i=0; i<=cbv_1; i=i+8) {...",shape=box];
	ForLoop199894 -> 199829;
	ForLoop199894 -> _JOIN_199894;
	_JOIN_390804 [label="_JOIN_390804None...",shape=box];
	_JOIN_390804 -> 390835;
	ForLoop392749 [label="ForLoop392749  for (iii=0; iii<=nx-1; iii=iii+512) {...",shape=box];
	ForLoop392749 -> ForLoop392748;
	ForLoop392749 -> _JOIN_392749;
	ForLoop392748 [label="ForLoop392748  for (ii=iii; ii<=min(nx-1,iii+448); ii=ii+64) {...",shape=box];
	ForLoop392748 -> 365338;
	ForLoop392748 -> _JOIN_392748;
	_JOIN_199894 [label="_JOIN_199894None...",shape=box];
	_JOIN_199894 -> 200076;
	_JOIN_391534 [label="_JOIN_391534None...",shape=box];
	_JOIN_391534 -> ForLoop392744;
	463072 [label="463072  tmp[(i+17)]=scv_34;...",shape=box];
	_JOIN_391533 [label="_JOIN_391533None...",shape=box];
	_JOIN_391533 -> _JOIN_391534;
	391532 [label="391532  scv_86=scv_86+A[i*ny+j]*x[j];...",shape=box];
	391532 -> _JOIN_391533;
	365338 [label="365338  int i;...",shape=box];
	365338 -> ForLoop391428;
	366185 [label="366185  for (k=kk; k<=min(ny-1,kk+255); k=k+1) ...",shape=box];
	199829 [label="199829  y[i]=0.0;...",shape=box];
	199962 [label="199962  y[i]=0.0;...",shape=box];
	199962 -> _JOIN_199963;
	_JOIN_199963 [label="_JOIN_199963None...",shape=box];
	_JOIN_199963 -> 365305;
	469858 [label="469858  tmp[i]=scv_86;...",shape=box];
	469858 -> _JOIN_392746;
	ForLoop390804 [label="ForLoop390804  for (kt=kk; kt<=cbv_2; kt=kt+32) {...",shape=box];
	ForLoop390804 -> 426064;
	ForLoop390804 -> _JOIN_390804;
	ForLoop366141 [label="ForLoop366141  for (jj=0; jj<=ny-1; jj=jj+256) {...",shape=box];
	ForLoop366141 -> 503026;
	ForLoop366141 -> _JOIN_366141;
	199667 [label="199667  int i;...",shape=box];
	ForLoop391534 [label="ForLoop391534  for (jj=0; jj<=ny-1; jj=jj+256) {...",shape=box];
	ForLoop391534 -> 515832;
	ForLoop391534 -> _JOIN_391534;
	_JOIN_392711 [label="_JOIN_392711None...",shape=box];
	_JOIN_392711 -> 392742;
	390835 [label="390835  for (k=kk; k<=min(ny-1,kk+255); k=k+1) ...",shape=box];
	ForLoop391533 [label="ForLoop391533  for (j=jj; j<=cbv_3; j=j+1) {...",shape=box];
	ForLoop391533 -> 391532;
	ForLoop391533 -> _JOIN_391533;
	393651 [label="393651  double scv_1;...",shape=box];

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest2.exe __orio_perftest2.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest2.exe  
{'[3, 5, 5, 4, 0, 3, 0, 1, 7, 19, 0, 29, 0, 0, 2, 1, 1, 1]' : 0.126698}
{'[3, 5, 5, 4, 0, 3, 0, 1, 7, 19, 0, 29, 0, 0, 2, 1, 1, 1]' : 0.12642}
{'[3, 5, 5, 4, 0, 3, 0, 1, 7, 19, 0, 29, 0, 0, 2, 1, 1, 1]' : 0.126252}
{'[3, 5, 5, 4, 0, 3, 0, 1, 7, 19, 0, 29, 0, 0, 2, 1, 1, 1]' : 0.126403}
{'[3, 5, 5, 4, 0, 3, 0, 1, 7, 19, 0, 29, 0, 0, 2, 1, 1, 1]' : 0.126246}
{'[3, 5, 5, 4, 0, 3, 0, 1, 7, 19, 0, 29, 0, 0, 2, 1, 1, 1]' : 0.12629}
{'[3, 5, 5, 4, 0, 3, 0, 1, 7, 19, 0, 29, 0, 0, 2, 1, 1, 1]' : 0.12643}
{'[3, 5, 5, 4, 0, 3, 0, 1, 7, 19, 0, 29, 0, 0, 2, 1, 1, 1]' : 0.12624}
{'[3, 5, 5, 4, 0, 3, 0, 1, 7, 19, 0, 29, 0, 0, 2, 1, 1, 1]' : 0.126612}
{'[3, 5, 5, 4, 0, 3, 0, 1, 7, 19, 0, 29, 0, 0, 2, 1, 1, 1]' : 0.126472}
{'[3, 5, 5, 4, 0, 3, 0, 1, 7, 19, 0, 29, 0, 0, 2, 1, 1, 1]' : 0.126388}
{'[3, 5, 5, 4, 0, 3, 0, 1, 7, 19, 0, 29, 0, 0, 2, 1, 1, 1]' : 0.126489}
{'[3, 5, 5, 4, 0, 3, 0, 1, 7, 19, 0, 29, 0, 0, 2, 1, 1, 1]' : 0.126272}
{'[3, 5, 5, 4, 0, 3, 0, 1, 7, 19, 0, 29, 0, 0, 2, 1, 1, 1]' : 0.126328}
{'[3, 5, 5, 4, 0, 3, 0, 1, 7, 19, 0, 29, 0, 0, 2, 1, 1, 1]' : 0.126432}
{'[3, 5, 5, 4, 0, 3, 0, 1, 7, 19, 0, 29, 0, 0, 2, 1, 1, 1]' : 0.126327}
{'[3, 5, 5, 4, 0, 3, 0, 1, 7, 19, 0, 29, 0, 0, 2, 1, 1, 1]' : 0.126342}
{'[3, 5, 5, 4, 0, 3, 0, 1, 7, 19, 0, 29, 0, 0, 2, 1, 1, 1]' : 0.126449}
{'[3, 5, 5, 4, 0, 3, 0, 1, 7, 19, 0, 29, 0, 0, 2, 1, 1, 1]' : 0.126555}
{'[3, 5, 5, 4, 0, 3, 0, 1, 7, 19, 0, 29, 0, 0, 2, 1, 1, 1]' : 0.126561}
{'[3, 5, 5, 4, 0, 3, 0, 1, 7, 19, 0, 29, 0, 0, 2, 1, 1, 1]' : 0.126613}
{'[3, 5, 5, 4, 0, 3, 0, 1, 7, 19, 0, 29, 0, 0, 2, 1, 1, 1]' : 0.126429}
{'[3, 5, 5, 4, 0, 3, 0, 1, 7, 19, 0, 29, 0, 0, 2, 1, 1, 1]' : 0.126439}
{'[3, 5, 5, 4, 0, 3, 0, 1, 7, 19, 0, 29, 0, 0, 2, 1, 1, 1]' : 0.126344}
{'[3, 5, 5, 4, 0, 3, 0, 1, 7, 19, 0, 29, 0, 0, 2, 1, 1, 1]' : 0.126563}
{'[3, 5, 5, 4, 0, 3, 0, 1, 7, 19, 0, 29, 0, 0, 2, 1, 1, 1]' : 0.126478}
{'[3, 5, 5, 4, 0, 3, 0, 1, 7, 19, 0, 29, 0, 0, 2, 1, 1, 1]' : 0.126391}
{'[3, 5, 5, 4, 0, 3, 0, 1, 7, 19, 0, 29, 0, 0, 2, 1, 1, 1]' : 0.1265}
{'[3, 5, 5, 4, 0, 3, 0, 1, 7, 19, 0, 29, 0, 0, 2, 1, 1, 1]' : 0.126366}
{'[3, 5, 5, 4, 0, 3, 0, 1, 7, 19, 0, 29, 0, 0, 2, 1, 1, 1]' : 0.126305}

out:
 ["{'[3, 5, 5, 4, 0, 3, 0, 1, 7, 19, 0, 29, 0, 0, 2, 1, 1, 1]' : 0.126698}", "{'[3, 5, 5, 4, 0, 3, 0, 1, 7, 19, 0, 29, 0, 0, 2, 1, 1, 1]' : 0.12642}", "{'[3, 5, 5, 4, 0, 3, 0, 1, 7, 19, 0, 29, 0, 0, 2, 1, 1, 1]' : 0.126252}", "{'[3, 5, 5, 4, 0, 3, 0, 1, 7, 19, 0, 29, 0, 0, 2, 1, 1, 1]' : 0.126403}", "{'[3, 5, 5, 4, 0, 3, 0, 1, 7, 19, 0, 29, 0, 0, 2, 1, 1, 1]' : 0.126246}", "{'[3, 5, 5, 4, 0, 3, 0, 1, 7, 19, 0, 29, 0, 0, 2, 1, 1, 1]' : 0.12629}", "{'[3, 5, 5, 4, 0, 3, 0, 1, 7, 19, 0, 29, 0, 0, 2, 1, 1, 1]' : 0.12643}", "{'[3, 5, 5, 4, 0, 3, 0, 1, 7, 19, 0, 29, 0, 0, 2, 1, 1, 1]' : 0.12624}", "{'[3, 5, 5, 4, 0, 3, 0, 1, 7, 19, 0, 29, 0, 0, 2, 1, 1, 1]' : 0.126612}", "{'[3, 5, 5, 4, 0, 3, 0, 1, 7, 19, 0, 29, 0, 0, 2, 1, 1, 1]' : 0.126472}", "{'[3, 5, 5, 4, 0, 3, 0, 1, 7, 19, 0, 29, 0, 0, 2, 1, 1, 1]' : 0.126388}", "{'[3, 5, 5, 4, 0, 3, 0, 1, 7, 19, 0, 29, 0, 0, 2, 1, 1, 1]' : 0.126489}", "{'[3, 5, 5, 4, 0, 3, 0, 1, 7, 19, 0, 29, 0, 0, 2, 1, 1, 1]' : 0.126272}", "{'[3, 5, 5, 4, 0, 3, 0, 1, 7, 19, 0, 29, 0, 0, 2, 1, 1, 1]' : 0.126328}", "{'[3, 5, 5, 4, 0, 3, 0, 1, 7, 19, 0, 29, 0, 0, 2, 1, 1, 1]' : 0.126432}", "{'[3, 5, 5, 4, 0, 3, 0, 1, 7, 19, 0, 29, 0, 0, 2, 1, 1, 1]' : 0.126327}", "{'[3, 5, 5, 4, 0, 3, 0, 1, 7, 19, 0, 29, 0, 0, 2, 1, 1, 1]' : 0.126342}", "{'[3, 5, 5, 4, 0, 3, 0, 1, 7, 19, 0, 29, 0, 0, 2, 1, 1, 1]' : 0.126449}", "{'[3, 5, 5, 4, 0, 3, 0, 1, 7, 19, 0, 29, 0, 0, 2, 1, 1, 1]' : 0.126555}", "{'[3, 5, 5, 4, 0, 3, 0, 1, 7, 19, 0, 29, 0, 0, 2, 1, 1, 1]' : 0.126561}", "{'[3, 5, 5, 4, 0, 3, 0, 1, 7, 19, 0, 29, 0, 0, 2, 1, 1, 1]' : 0.126613}", "{'[3, 5, 5, 4, 0, 3, 0, 1, 7, 19, 0, 29, 0, 0, 2, 1, 1, 1]' : 0.126429}", "{'[3, 5, 5, 4, 0, 3, 0, 1, 7, 19, 0, 29, 0, 0, 2, 1, 1, 1]' : 0.126439}", "{'[3, 5, 5, 4, 0, 3, 0, 1, 7, 19, 0, 29, 0, 0, 2, 1, 1, 1]' : 0.126344}", "{'[3, 5, 5, 4, 0, 3, 0, 1, 7, 19, 0, 29, 0, 0, 2, 1, 1, 1]' : 0.126563}", "{'[3, 5, 5, 4, 0, 3, 0, 1, 7, 19, 0, 29, 0, 0, 2, 1, 1, 1]' : 0.126478}", "{'[3, 5, 5, 4, 0, 3, 0, 1, 7, 19, 0, 29, 0, 0, 2, 1, 1, 1]' : 0.126391}", "{'[3, 5, 5, 4, 0, 3, 0, 1, 7, 19, 0, 29, 0, 0, 2, 1, 1, 1]' : 0.1265}", "{'[3, 5, 5, 4, 0, 3, 0, 1, 7, 19, 0, 29, 0, 0, 2, 1, 1, 1]' : 0.126366}", "{'[3, 5, 5, 4, 0, 3, 0, 1, 7, 19, 0, 29, 0, 0, 2, 1, 1, 1]' : 0.126305}"]
returning from 'run': {'[3, 5, 5, 4, 0, 3, 0, 1, 7, 19, 0, 29, 0, 0, 2, 1, 1, 1]': ([0.126698, 0.12642, 0.126252, 0.126403, 0.126246, 0.12629, 0.12643, 0.12624, 0.126612, 0.126472, 0.126388, 0.126489, 0.126272, 0.126328, 0.126432, 0.126327, 0.126342, 0.126449, 0.126555, 0.126561, 0.126613, 0.126429, 0.126439, 0.126344, 0.126563, 0.126478, 0.126391, 0.1265, 0.126366, 0.126305], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.126698, 0.12642, 0.126252, 0.126403, 0.126246, 0.12629, 0.12643, 0.12624, 0.126612, 0.126472, 0.126388, 0.126489, 0.126272, 0.126328, 0.126432, 0.126327, 0.126342, 0.126449, 0.126555, 0.126561, 0.126613, 0.126429, 0.126439, 0.126344, 0.126563, 0.126478, 0.126391, 0.1265, 0.126366, 0.126305], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[3, 5, 5, 4, 0, 3, 0, 1, 7, 19, 0, 29, 0, 0, 2, 1, 1, 1]': ([0.126698, 0.12642, 0.126252, 0.126403, 0.126246, 0.12629, 0.12643, 0.12624, 0.126612, 0.126472, 0.126388, 0.126489, 0.126272, 0.126328, 0.126432, 0.126327, 0.126342, 0.126449, 0.126555, 0.126561, 0.126613, 0.126429, 0.126439, 0.126344, 0.126563, 0.126478, 0.126391, 0.1265, 0.126366, 0.126305], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [5, 0, 5, 6, 5, 0, 0, 0, 2, 0, 1, 0, 0, 1, 1, 0, 1, 0]
Fixed Factors: {}
Testing candidate 3: [5, 0, 5, 6, 5, 0, 0, 0, 2, 0, 1, 0, 0, 1, 1, 0, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		125
        Multiplications: 	40
        Divisions: 		0
        Logical: 		0
        Reads: 			296
        Writes: 		52
        Comparisons:		12
        Gotos: 			0
        
digraph CFG {
	ForLoop517508 [label="ForLoop517508  for (i=0; i<=cbv_1; i=i+3) {...",shape=box];
	ForLoop517508 -> 517488;
	ForLoop517508 -> _JOIN_517508;
	_JOIN_522484 [label="_JOIN_522484None...",shape=box];
	_JOIN_522484 -> _JOIN_520522;
	_JOIN_521158 [label="_JOIN_521158None...",shape=box];
	_JOIN_521158 -> ForLoop522484;
	535135 [label="535135  tmp[i]=tmp[i]+A[i*ny+j]*x[j];...",shape=box];
	524063 [label="524063  double x_copy;...",shape=box];
	_JOIN_520523 [label="_JOIN_520523None...",shape=box];
	_JOIN_520523 -> _JOIN_520524;
	_JOIN_520524 [label="_JOIN_520524None...",shape=box];
	517645 [label="517645  register int cbv_2, cbv_3;...",shape=box];
	517401 [label="517401  int i;...",shape=box];
	ForLoop521158 [label="ForLoop521158  for (jjj=0; jjj<=ny-1; jjj=jjj+1024) {...",shape=box];
	ForLoop521158 -> ForLoop525225;
	ForLoop521158 -> _JOIN_521158;
	535287 [label="535287  tmp[i]=tmp[i]+A[i*ny+j]*x[j];...",shape=box];
	535287 -> _JOIN_535288;
	_JOIN_520522 [label="_JOIN_520522None...",shape=box];
	_JOIN_520522 -> _JOIN_520523;
	_JOIN_525702 [label="_JOIN_525702None...",shape=box];
	_JOIN_525702 -> _JOIN_522484;
	_JOIN_525663 [label="_JOIN_525663None...",shape=box];
	_JOIN_525663 -> ForLoop525702;
	517488 [label="517488  y[i]=0.0;...",shape=box];
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 517401;
	520433 [label="520433  tmp[i]=0;...",shape=box];
	520433 -> ForLoop521158;
	_JOIN_535162 [label="_JOIN_535162None...",shape=box];
	_JOIN_535162 -> ForLoop535288;
	_JOIN_535288 [label="_JOIN_535288None...",shape=box];
	_JOIN_535288 -> _JOIN_521158;
	ForLoop525663 [label="ForLoop525663  for (kt=kk; kt<=min(ny-1,kk+255)-7; kt=kt+8) {...",shape=box];
	ForLoop525663 -> 525727;
	ForLoop525663 -> _JOIN_525663;
	ForLoop525702 [label="ForLoop525702  for (k=kt; k<=min(ny-1,kk+255); k=k+1) ...",shape=box];
	ForLoop525702 -> 525701;
	ForLoop525702 -> _JOIN_525702;
	525727 [label="525727  y[kt]=y[kt]+A[i*ny+kt]*tmp[i];...",shape=box];
	525289 [label="525289  tmp[i]=tmp[i]+A[i*ny+jt]*x[jt];...",shape=box];
	ForLoop535162 [label="ForLoop535162  for (j=jt; j<=min(ny-1,jjj+1023)-1; j=j+2) {...",shape=box];
	ForLoop535162 -> 535135;
	ForLoop535162 -> _JOIN_535162;
	ForLoop520522 [label="ForLoop520522  for (i=ii; i<=min(nx-1,ii+255); i=i+1) {...",shape=box];
	ForLoop520522 -> 520433;
	ForLoop520522 -> _JOIN_520522;
	ForLoop520523 [label="ForLoop520523  for (ii=iii; ii<=min(nx-1,iii+1792); ii=ii+256) ...",shape=box];
	ForLoop520523 -> ForLoop520522;
	ForLoop520523 -> _JOIN_520523;
	ForLoop520524 [label="ForLoop520524  for (iii=0; iii<=nx-1; iii=iii+2048) ...",shape=box];
	ForLoop520524 -> ForLoop520523;
	ForLoop520524 -> _JOIN_520524;
	ForLoop517577 [label="ForLoop517577  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop517577 -> 517576;
	ForLoop517577 -> _JOIN_517577;
	ForLoop525225 [label="ForLoop525225  for (jt=jjj; jt<=min(ny-1,jjj+1023)-7; jt=jt+8) {...",shape=box];
	ForLoop525225 -> 525289;
	ForLoop525225 -> _JOIN_525225;
	525701 [label="5257expected=9369846271501.798828
actual=9369846271501.798828
01  y[k]=y[k]+A[i*ny+k]*tmp[i];...",shape=box];
	525701 -> _JOIN_525702;
	_JOIN_517508 [label="_JOIN_517508None...",shape=box];
	_JOIN_517508 -> 517645;
	534978 [label="534978  int j;...",shape=box];
	534978 -> ForLoop535162;
	517576 [label="517576  y[i]=0.0;...",shape=box];
	517576 -> _JOIN_517577;
	ForLoop522484 [label="ForLoop522484  for (kk=0; kk<=ny-1; kk=kk+256) {...",shape=box];
	ForLoop522484 -> ForLoop525663;
	ForLoop522484 -> _JOIN_522484;
	_JOIN_517577 [label="_JOIN_517577None...",shape=box];
	_JOIN_517577 -> 524063;
	ForLoop535288 [label="ForLoop535288  for (j=(min(ny-1,jjj+1023))-(((min(ny-1,jjj+1023))-(jt)+1)%2)+1; j<=min(ny-1,jjj+1023); j=j+1) ...",shape=box];
	ForLoop535288 -> 535287;
	ForLoop535288 -> _JOIN_535288;
	_JOIN_525225 [label="_JOIN_525225None...",shape=box];
	_JOIN_525225 -> 534978;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest3.exe __orio_perftest3.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest3.exe  
{'[5, 0, 5, 6, 5, 0, 0, 0, 2, 0, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.167351}
{'[5, 0, 5, 6, 5, 0, 0, 0, 2, 0, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.16732}
{'[5, 0, 5, 6, 5, 0, 0, 0, 2, 0, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.167421}
{'[5, 0, 5, 6, 5, 0, 0, 0, 2, 0, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.167516}
{'[5, 0, 5, 6, 5, 0, 0, 0, 2, 0, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.167389}
{'[5, 0, 5, 6, 5, 0, 0, 0, 2, 0, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.167431}
{'[5, 0, 5, 6, 5, 0, 0, 0, 2, 0, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.167372}
{'[5, 0, 5, 6, 5, 0, 0, 0, 2, 0, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.167342}
{'[5, 0, 5, 6, 5, 0, 0, 0, 2, 0, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.168329}
{'[5, 0, 5, 6, 5, 0, 0, 0, 2, 0, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.167436}
{'[5, 0, 5, 6, 5, 0, 0, 0, 2, 0, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.16727}
{'[5, 0, 5, 6, 5, 0, 0, 0, 2, 0, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.16732}
{'[5, 0, 5, 6, 5, 0, 0, 0, 2, 0, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.16729}
{'[5, 0, 5, 6, 5, 0, 0, 0, 2, 0, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.167313}
{'[5, 0, 5, 6, 5, 0, 0, 0, 2, 0, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.167479}
{'[5, 0, 5, 6, 5, 0, 0, 0, 2, 0, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.167351}
{'[5, 0, 5, 6, 5, 0, 0, 0, 2, 0, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.167387}
{'[5, 0, 5, 6, 5, 0, 0, 0, 2, 0, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.167326}
{'[5, 0, 5, 6, 5, 0, 0, 0, 2, 0, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.167409}
{'[5, 0, 5, 6, 5, 0, 0, 0, 2, 0, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.167318}
{'[5, 0, 5, 6, 5, 0, 0, 0, 2, 0, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.168333}
{'[5, 0, 5, 6, 5, 0, 0, 0, 2, 0, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.167375}
{'[5, 0, 5, 6, 5, 0, 0, 0, 2, 0, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.167322}
{'[5, 0, 5, 6, 5, 0, 0, 0, 2, 0, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.167443}
{'[5, 0, 5, 6, 5, 0, 0, 0, 2, 0, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.167351}
{'[5, 0, 5, 6, 5, 0, 0, 0, 2, 0, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.167396}
{'[5, 0, 5, 6, 5, 0, 0, 0, 2, 0, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.167446}
{'[5, 0, 5, 6, 5, 0, 0, 0, 2, 0, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.167496}
{'[5, 0, 5, 6, 5, 0, 0, 0, 2, 0, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.167295}
{'[5, 0, 5, 6, 5, 0, 0, 0, 2, 0, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.167307}

out:
 ["{'[5, 0, 5, 6, 5, 0, 0, 0, 2, 0, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.167351}", "{'[5, 0, 5, 6, 5, 0, 0, 0, 2, 0, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.16732}", "{'[5, 0, 5, 6, 5, 0, 0, 0, 2, 0, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.167421}", "{'[5, 0, 5, 6, 5, 0, 0, 0, 2, 0, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.167516}", "{'[5, 0, 5, 6, 5, 0, 0, 0, 2, 0, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.167389}", "{'[5, 0, 5, 6, 5, 0, 0, 0, 2, 0, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.167431}", "{'[5, 0, 5, 6, 5, 0, 0, 0, 2, 0, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.167372}", "{'[5, 0, 5, 6, 5, 0, 0, 0, 2, 0, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.167342}", "{'[5, 0, 5, 6, 5, 0, 0, 0, 2, 0, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.168329}", "{'[5, 0, 5, 6, 5, 0, 0, 0, 2, 0, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.167436}", "{'[5, 0, 5, 6, 5, 0, 0, 0, 2, 0, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.16727}", "{'[5, 0, 5, 6, 5, 0, 0, 0, 2, 0, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.16732}", "{'[5, 0, 5, 6, 5, 0, 0, 0, 2, 0, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.16729}", "{'[5, 0, 5, 6, 5, 0, 0, 0, 2, 0, 1, 0, 0, 1, 1, 0, 1, 0]' :WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = iii
 0.167313}", "{'[5, 0, 5, 6, 5, 0, 0, 0, 2, 0, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.167479}", "{'[5, 0, 5, 6, 5, 0, 0, 0, 2, 0, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.167351}", "{'[5, 0, 5, 6, 5, 0, 0, 0, 2, 0, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.167387}", "{'[5, 0, 5, 6, 5, 0, 0, 0, 2, 0, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.167326}", "{'[5, 0, 5, 6, 5, 0, 0, 0, 2, 0, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.167409}", "{'[5, 0, 5, 6, 5, 0, 0, 0, 2, 0, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.167318}", "{'[5, 0, 5, 6, 5, 0, 0, 0, 2, 0, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.168333}", "{'[5, 0, 5, 6, 5, 0, 0, 0, 2, 0, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.167375}", "{'[5, 0, 5, 6, 5, 0, 0, 0, 2, 0, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.167322}", "{'[5, 0, 5, 6, 5, 0, 0, 0, 2, 0, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.167443}", "{'[5, 0, 5, 6, 5, 0, 0, 0, 2, 0, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.167351}", "{'[5, 0, 5, 6, 5, 0, 0, 0, 2, 0, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.167396}", "{'[5, 0, 5, 6, 5, 0, 0, 0, 2, 0, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.167446}", "{'[5, 0, 5, 6, 5, 0, 0, 0, 2, 0, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.167496}", "{'[5, 0, 5, 6, 5, 0, 0, 0, 2, 0, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.167295}", "{'[5, 0, 5, 6, 5, 0, 0, 0, 2, 0, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.167307}"]
returning from 'run': {'[5, 0, 5, 6, 5, 0, 0, 0, 2, 0, 1, 0, 0, 1, 1, 0, 1, 0]': ([0.167351, 0.16732, 0.167421, 0.167516, 0.167389, 0.167431, 0.167372, 0.167342, 0.168329, 0.167436, 0.16727, 0.16732, 0.16729, 0.167313, 0.167479, 0.167351, 0.167387, 0.167326, 0.167409, 0.167318, 0.168333, 0.167375, 0.167322, 0.167443, 0.167351, 0.167396, 0.167446, 0.167496, 0.167295, 0.167307], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.167351, 0.16732, 0.167421, 0.167516, 0.167389, 0.167431, 0.167372, 0.167342, 0.168329, 0.167436, 0.16727, 0.16732, 0.16729, 0.167313, 0.167479, 0.167351, 0.167387, 0.167326, 0.167409, 0.167318, 0.168333, 0.167375, 0.167322, 0.167443, 0.167351, 0.167396, 0.167446, 0.167496, 0.167295, 0.167307], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[5, 0, 5, 6, 5, 0, 0, 0, 2, 0, 1, 0, 0, 1, 1, 0, 1, 0]': ([0.167351, 0.16732, 0.167421, 0.167516, 0.167389, 0.167431, 0.167372, 0.167342, 0.168329, 0.167436, 0.16727, 0.16732, 0.16729, 0.167313, 0.167479, 0.167351, 0.167387, 0.167326, 0.167409, 0.167318, 0.168333, 0.167375, 0.167322, 0.167443, 0.167351, 0.167396, 0.167446, 0.167496, 0.167295, 0.167307], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [6, 3, 6, 4, 2, 6, 1, 1, 29, 0, 29, 10, 0, 0, 1, 0, 0, 1]
Fixed Factors: {}
Testing candidate 4: [6, 3, 6, 4, 2, 6, 1, 1, 29, 0, 29, 10, 0, 0, 1, 0, 0, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		287
        Multiplications: 	78
        Divisions: 		0
        Logical: 		0
        Reads: 			618
        Writes: 		106
        Comparisons:		14
        Gotos: 			0
        
digraph CFG {
	_JOIN_539303 [label="_JOIN_539303None...",shape=box];
	_JOIN_539303 -> ForLoop539372;
	_JOIN_550392 [label="_JOIN_550392None...",shape=box];
	_JOIN_550392 -> 546252;
	547850 [label="547850  for (j=jj; j<=min(ny-1,jj+63); j=j+1) ...",shape=box];
	ForLoop560066 [label="ForLoop560066  for (j=cbv_2; j<=cbv_3; j=j+1) ...",shape=box];
	ForLoop560066 -> 560065;
	ForLoop560066 -> _JOIN_560066;
	ForLoop559937 [label="ForLoop559937  for (j=jj; j<=cbv_1; j=j+30) {...",shape=box];
	ForLoop559937 -> 559152;
	ForLoop559937 -> _JOIN_559937;
	ForLoop544563 [label="ForLoop544563  for (kkk=0; kkk<=ny-1; kkk=kkk+2048) ...",shape=box];
	ForLoop544563 -> ForLoop544562;
	ForLoop544563 -> _JOIN_544563;
	ForLoop539372 [label="ForLoop539372  for (i=ny-((ny-(0))%30); i<=ny-1; i=i+1) ...",shape=box];
	ForLoop539372 -> 539371;
	ForLoop539372 -> _JOIN_539372;
	_JOIN_560066 [label="_JOIN_56expected=9369846271501.798828
actual=9369846271501.798828
0066None...",shape=box];
	_JOIN_560066 -> _JOIN_543248;
	_JOIN_559937 [label="_JOIN_559937None...",shape=box];
	_JOIN_559937 -> 566667;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 538548;
	_JOIN_543249 [label="_JOIN_543249None...",shape=box];
	_JOIN_543249 -> ForLoop544563;
	542454 [label="542454  tmp[i]=0;...",shape=box];
	542454 -> ForLoop543249;
	ForLoop543248 [label="ForLoop543248  for (jj=jjj; jj<=min(ny-1,jjj+64); jj=jj+64) {...",shape=box];
	ForLoop543248 -> 547850;
	ForLoop543248 -> _JOIN_543248;
	ForLoop543249 [label="ForLoop543249  for (jjj=0; jjj<=ny-1; jjj=jjj+128) ...",shape=box];
	ForLoop543249 -> ForLoop543248;
	ForLoop543249 -> _JOIN_543249;
	ForLoop550392 [label="ForLoop550392  for (kt=kk; kt<=cbv_4; kt=kt+8) {...",shape=box];
	ForLoop550392 -> 550468;
	ForLoop550392 -> _JOIN_550392;
	_JOIN_542562 [label="_JOIN_542562None...",shape=box];
	_JOIN_542562 -> _JOIN_542563;
	_JOIN_542563 [label="_JOIN_542563None...",shape=box];
	560065 [label="560065  tmp[i]=tmp[i]+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	560065 -> _JOIN_560066;
	566667 [label="566667  register int cbv_2, cbv_3;...",shape=box];
	559152 [label="559152  tmp[i]=tmp[i]+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	539371 [label="539371  y[i]=0.0;...",shape=box];
	539371 -> _JOIN_539372;
	ForLoop544562 [label="ForLoop544562  for (kk=kkk; kk<=min(ny-1,kkk+1536); kk=kk+512) {...",shape=box];
	ForLoop544562 -> 546210;
	ForLoop544562 -> _JOIN_544562;
	539040 [label="539040  y[i]=0.0;...",shape=box];
	_JOIN_543248 [label="_JOIN_543248None...",shape=box];
	_JOIN_543248 -> _JOIN_543249;
	538548 [label="538548  int i;...",shape=box];
	538548 -> ForLoop539303;
	ForLoop542562 [label="ForLoop542562  for (i=ii; i<=min(nx-1,ii+511); i=i+1) {...",shape=box];
	ForLoop542562 -> 542454;
	ForLoop542562 -> _JOIN_542562;
	ForLoop542563 [label="ForLoop542563  for (ii=0; ii<=nx-1; ii=ii+512) ...",shape=box];
	ForLoop542563 -> ForLoop542562;
	ForLoop542563 -> _JOIN_542563;
	546252 [label="546252  for (k=kk; k<=min(ny-1,kk+511); k=k+1) ...",shape=box];
	546252 -> _JOIN_544562;
	ForLoop539303 [label="ForLoop539303  for (i=0; i<=ny-30; i=i+30) {...",shape=box];
	ForLoop539303 -> 539040;
	ForLoop539303 -> _JOIN_539303;
	546210 [label="546210  for (k=kk; k<=min(ny-1,kk+511); k=k+1) ...",shape=box];
	547798 [label="547798  double x_copy[64];...",shape=box];
	_JOIN_544562 [label="_JOIN_544562None...",shape=box];
	_JOIN_544562 -> _JOIN_544563;
	_JOIN_544563 [label="_JOIN_544563None...",shape=box];
	_JOIN_544563 -> _JOIN_542562;
	550468 [label="550468  y_copy[(kt-kk)]=y_copy[(kt-kk)]+A[i*ny+kt]*tmp[i];...",shape=box];
	_JOIN_539372 [label="_JOIN_539372None...",shape=box];
	_JOIN_539372 -> 547798;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest4.exe __orio_perftest4.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest4.exe  
{'[6, 3, 6, 4, 2, 6, 1, 1, 29, 0, 29, 10, 0, 0, 1, 0, 0, 1]' : 0.180651}
{'[6, 3, 6, 4, 2, 6, 1, 1, 29, 0, 29, 10, 0, 0, 1, 0, 0, 1]' : 0.180702}
{'[6, 3, 6, 4, 2, 6, 1, 1, 29, 0, 29, 10, 0, 0, 1, 0, 0, 1]' : 0.180666}
{'[6, 3, 6, 4, 2, 6, 1, 1, 29, 0, 29, 10, 0, 0, 1, 0, 0, 1]' : 0.180727}
{'[6, 3, 6, 4, 2, 6, 1, 1, 29, 0, 29, 10, 0, 0, 1, 0, 0, 1]' : 0.180759}
{'[6, 3, 6, 4, 2, 6, 1, 1, 29, 0, 29, 10, 0, 0, 1, 0, 0, 1]' : 0.180672}
{'[6, 3, 6, 4, 2, 6, 1, 1, 29, 0, 29, 10, 0, 0, 1, 0, 0, 1]' : 0.180493}
{'[6, 3, 6, 4, 2, 6, 1, 1, 29, 0, 29, 10, 0, 0, 1, 0, 0, 1]' : 0.181603}
{'[6, 3, 6, 4, 2, 6, 1, 1, 29, 0, 29, 10, 0, 0, 1, 0, 0, 1]' : 0.180651}
{'[6, 3, 6, 4, 2, 6, 1, 1, 29, 0, 29, 10, 0, 0, 1, 0, 0, 1]' : 0.180678}
{'[6, 3, 6, 4, 2, 6, 1, 1, 29, 0, 29, 10, 0, 0, 1, 0, 0, 1]' : 0.180487}
{'[6, 3, 6, 4, 2, 6, 1, 1, 29, 0, 29, 10, 0, 0, 1, 0, 0, 1]' : 0.180517}
{'[6, 3, 6, 4, 2, 6, 1, 1, 29, 0, 29, 10, 0, 0, 1, 0, 0, 1]' : 0.180791}
{'[6, 3, 6, 4, 2, 6, 1, 1, 29, 0, 29, 10, 0, 0, 1, 0, 0, 1]' : 0.180609}
{'[6, 3, 6, 4, 2, 6, 1, 1, 29, 0, 29, 10, 0, 0, 1, 0, 0, 1]' : 0.180603}
{'[6, 3, 6, 4, 2, 6, 1, 1, 29, 0, 29, 10, 0, 0, 1, 0, 0, 1]' : 0.180611}
{'[6, 3, 6, 4, 2, 6, 1, 1, 29, 0, 29, 10, 0, 0, 1, 0, 0, 1]' : 0.180595}
{'[6, 3, 6, 4, 2, 6, 1, 1, 29, 0, 29, 10, 0, 0, 1, 0, 0, 1]' : 0.180564}
{'[6, 3, 6, 4, 2, 6, 1, 1, 29, 0, 29, 10, 0, 0, 1, 0, 0, 1]' : 0.18167}
{'[6, 3, 6, 4, 2, 6, 1, 1, 29, 0, 29, 10, 0, 0, 1, 0, 0, 1]' : 0.180566}
{'[6, 3, 6, 4, 2, 6, 1, 1, 29, 0, 29, 10, 0, 0, 1, 0, 0, 1]' : 0.180541}
{'[6, 3, 6, 4, 2, 6, 1, 1, 29, 0, 29, 10, 0, 0, 1, 0, 0, 1]' : 0.180658}
{'[6, 3, 6, 4, 2, 6, 1, 1, 29, 0, 29, 10, 0, 0, 1, 0, 0, 1]' : 0.180549}
{'[6, 3, 6, 4, 2, 6, 1, 1, 29, 0, 29, 10, 0, 0, 1, 0, 0, 1]' : 0.180723}
{'[6, 3, 6, 4, 2, 6, 1, 1, 29, 0, 29, 10, 0, 0, 1, 0, 0, 1]' : 0.18083}
{'[6, 3, 6, 4, 2, 6, 1, 1, 29, 0, 29, 10, 0, 0, 1, 0, 0, 1]' : 0.180657}
{'[6, 3, 6, 4, 2, 6, 1, 1, 29, 0, 29, 10, 0, 0, 1, 0, 0, 1]' : 0.180571}
{'[6, 3, 6, 4, 2, 6, 1, 1, 29, 0, 29, 10, 0, 0, 1, 0, 0, 1]' : 0.18068}
{'[6, 3, 6, 4, 2, 6, 1, 1, 29, 0, 29, 10, 0, 0, 1, 0, 0, 1]' : 0.180625}
{'[6, 3, 6, 4, 2, 6, 1, 1, 29, 0, 29, 10, 0, 0, 1, 0, 0, 1]' : 0.181704}

out:
 ["{'[6, 3, 6, 4, 2, 6, 1, 1, 29, 0, 29, 10, 0, 0, 1, 0, 0, 1]' : 0.180651}", "{'[6, 3, 6, 4, 2, 6, 1, 1, 29, 0, 29, 10, 0, 0, 1, 0, 0, 1]' : 0.180702}", "{'[6, 3, 6, 4, 2, 6, 1, 1, 29, 0, 29, 10, 0, 0, 1, 0, 0, 1]' : 0.180666}", "{'[6, 3, 6, 4, 2, 6, 1, 1, 29, 0, 29, 10, 0, 0, 1, 0, 0, 1]' : 0.180727}", "{'[6, 3, 6, 4, 2, 6, 1, 1, 29, 0, 29, 10, 0, 0, 1, 0, 0, 1]' : 0.180759}", "{'[6, 3, 6, 4, 2, 6, 1, 1, 29, 0, 29, 10, 0, 0, 1, 0, 0, 1]' : 0.180672}", "{'[6, 3, 6, 4, 2, 6, 1, 1, 29, 0, 29, 10, 0, 0, 1, 0, 0, 1]' : 0.180493}", "{'[6, 3, 6, 4, 2, 6, 1, 1, 29, 0, 29, 10, 0, 0, 1, 0, 0, 1]' : 0.181603}", "{'[6, 3, 6, 4, 2, 6, 1, 1, 29, 0, 29, 10, 0, 0, 1, 0, 0, 1]' : 0.180651}", "{'[6, 3, 6, 4, 2, 6, 1, 1, 29, 0, 29, 10, 0, 0, 1, 0, 0, 1]' : 0.180678}", "{'[6, 3, 6, 4, 2, 6, 1, 1, 29, 0, 29, 10, 0, 0, 1, 0, 0, 1]' : 0.180487}", "{'[6, 3, 6, 4, 2, 6, 1, 1, 29, 0, 29, 10, 0, 0, 1, 0, 0, 1]' : 0.180517}", "{'[6, 3, 6, 4, 2, 6, 1, 1, 29, 0, 29, 10, 0, 0, 1, 0, 0, 1]' : 0.180791}", "{'[6, 3, 6, 4, 2, 6, 1, 1, 29, 0, 29, 10, 0, 0, 1, 0, 0, 1]' : 0.180609}", "{'[6, 3, 6, 4, 2, 6, 1, 1, 29, 0, 29, 10, 0, 0, 1, 0, 0, 1]' : 0.180603}", "{'[6, 3, 6, 4, 2, 6, 1, 1, 29, 0, 29, 10, 0, 0, 1, 0, 0, 1]' : 0.180611}", "{'[6, 3, 6, 4, 2, 6, 1, 1, 29, 0, 29, 10, 0, 0, 1, 0, 0, 1]' : 0.180595}", "{'[6, 3, 6, 4, 2, 6, 1, 1, 29, 0, 29, 10, 0, 0, 1, 0, 0, 1]' : 0.180564}", "{'[6, 3, 6, 4, 2, 6, 1, 1, 29, 0, 29, 10, 0, 0, 1, 0, 0, 1]' : 0.18167}", "{'[6, 3, 6, 4, 2, 6, 1, 1, 29, 0, 29, 10, 0, 0, 1, 0, 0, 1]' : 0.180566}", "{'[6, 3, 6, 4, 2, 6, 1, 1, 29, 0, 29, 10, 0, 0, 1, 0, 0, 1]' : 0.180541}", "{'[6, 3, 6, 4, 2, 6, 1, 1, 29, 0, 29, 10, 0, 0, 1, 0, 0, 1]' : 0.180658}", "{'[6, 3, 6, 4, 2, 6, 1, 1, 29, 0, 29, 10, 0, 0, 1, 0, 0, 1]' : 0.180549}", "{'[6, 3, 6, 4, 2, 6, 1, 1, 29, 0, 29, 10, 0, 0, 1, 0, 0, 1]' : 0.180723}", "{'[6, 3, 6, 4, 2, 6, 1, 1, 29, 0, 29, 10, 0, 0, 1, 0, 0, 1]' : 0.18083}", "{'[6, 3, 6, 4, 2, 6, 1, 1, 29, 0, 29, 10, 0, 0, 1, 0, 0, 1]' : 0.180657}", "{'[6, 3, 6, 4, 2, 6, 1, 1, 29, 0, 29, 10, 0, 0, 1, 0, 0, 1]' : 0.180571}", "{'[6, 3, 6, 4, 2, 6, 1, 1, 29, 0, 29, 10, 0, 0, 1, 0, 0, 1]' : 0.18068}", "{'[6, 3, 6, 4, 2, 6, 1, 1, 29, 0, 29, 10, 0, 0, 1, 0, 0, 1]' : 0.180625}", "{'[6, 3, 6, 4, 2, 6, 1, 1, 29, 0, 29, 10, 0, 0, 1, 0, 0, 1]' : 0.181704}"]
returning from 'run': {'[6, 3, 6, 4, 2, 6, 1, 1, 29, 0, 29, 10, 0, 0, 1, 0, 0, 1]': ([0.180651, 0.180702, 0.180666, 0.180727, 0.180759, 0.180672, 0.180493, 0.181603, 0.180651, 0.180678, 0.180487, 0.180517, 0.180791, 0.180609, 0.180603, 0.180611, 0.180595, 0.180564, 0.18167, 0.180566, 0.180541, 0.180658, 0.180549, 0.180723, 0.18083, 0.180657, 0.180571, 0.18068, 0.180625, 0.181704], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.180651, 0.180702, 0.180666, 0.180727, 0.180759, 0.180672, 0.180493, 0.181603, 0.180651, 0.180678, 0.180487, 0.180517, 0.180791, 0.180609, 0.180603, 0.180611, 0.180595, 0.180564, 0.18167, 0.180566, 0.180541, 0.180658, 0.180549, 0.180723, 0.18083, 0.180657, 0.180571, 0.18068, 0.180625, 0.181704], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[6, 3, 6, 4, 2, 6, 1, 1, 29, 0, 29, 10, 0, 0, 1, 0, 0, 1]': ([0.180651, 0.180702, 0.180666, 0.180727, 0.180759, 0.180672, 0.180493, 0.181603, 0.180651, 0.180678, 0.180487, 0.180517, 0.180791, 0.180609, 0.180603, 0.180611, 0.180595, 0.180564, 0.18167, 0.180566, 0.180541, 0.180658, 0.180549, 0.180723, 0.18083, 0.180657, 0.180571, 0.18068, 0.180625, 0.181704], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [1, 6, 2, 3, 0, 3, 0, 1, 27, 0, 3, 2, 1, 1, 0, 1, 1, 1]
Fixed Factors: {}
Testing candidate 5: [1, 6, 2, 3, 0, 3, 0, 1, 27, 0, 3, 2, 1, 1, 0, 1, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	26
        Max loop nest depth: 	6
        Additions: 		739
        Multiplications: 	306
        Divisions: 		0
        Logical: 		0
        Reads: 			1541
        Writes: 		304
        Comparisons:		26
        Gotos: 			0
        
digraph CFG {
	ForLoop671699 [label="ForLoop671699  for (kk=kkk; kk<=min(ny-1,kkk+224); kk=kk+32) {...",shape=box];
	ForLoop671699 -> 671478;
	ForLoop671699 -> _JOIN_671699;
	671268 [label="671268  scv_30=scv_30+A[i*ny+j]*x[j];...",shape=box];
	680955 [label="680955  double scv_14, scv_15, scv_16;...",shape=box];
	_JOIN_670964 [label="_JOIN_670964None...",shape=box];
	_JOIN_670964 -> 687500;
	_JOIN_670929 [label="_JOIN_670929None...",shape=box];
	_JOIN_670929 -> 670961;
	_JOIN_670966 [label="_JOIN_670966None...",shape=box];
	_JOIN_670966 -> ForLoop671702;
	_JOIN_671700 [label="_JOIN_671700None...",shape=box];
	_JOIN_671700 -> 690582;
	700561 [label="700561  register int cbv_3, cbv_4;...",shape=box];
	_JOIN_671705 [label="_JOIN_671705None...",shape=box];
	_JOIN_670963 [label="_JOIN_670963None...",shape=box];
	_JOIN_670963 -> _JOIN_670964;
	ForLoop668389 [label="ForLoop668389  for (jt=jj; jt<=cbv_1; jt=jt+8) {...",shape=box];
	ForLoop668389 -> 674715;
	ForLoop668389 -> _JOIN_668389;
	687488 [label="687488  double scv_18, scv_19, scv_20, scv_21, scv_22, scv_23, scv_24, scv_25;...",shape=box];
	689022 [label="689022  double scv_26, scv_27, scv_28;...",shape=box];
	ForLoop671413 [label="ForLoop671413  for (j=cbv_10; j<=cbv_11; j=j+1) {...",shape=box];
	ForLoop671413 -> 671412;
	ForLoop671413 -> _JOIN_671413;
	702025 [label="702025  register int cbv_13, cbv_14;...",shape=box];
	_JOIN_671702 [label="_JOIN_671702None...",shape=box];
	_JOIN_671702 -> _JOIN_671704;
	671043 [label="671043  scv_30=scv_30+A[i*ny+jt]*x[jt];...",shape=box];
	ForLoop670630 [label="ForLoop670630  for (k=kk; k<=cbv_5; k=k+3) {...",shape=box];
	ForLoop670630 -> 680955;
	ForLoop670630 -> _JOIN_670630;
	701333 [label="701333  register int cbv_6, cbv_7;...",shape=box];
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 567218;
	_JOIN_670630 [label="_JOIN_670630None...",shape=box];
	_JOIN_670630 -> 701333;
	ForLoop670964 [label="ForLoop670964  for (kkk=0; kkk<=ny-1; kkk=kkk+256) {...",shape=box];
	ForLoop670964 -> ForLoop670963;
	ForLoop670964 -> _JOIN_670964;
	_JOIN_671345 [label="_JOIN_671345None...",shape=box];
	_JOIN_671345 -> 701757;
	690570 [label="690570  double scv_30;...",shape=box];
	670961 [label="670961  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	670961 -> _JOIN_670963;
	568287 [label="568287  register int cbv_2, cbv_3;...",shape=box];
	ForLoop671700 [label="ForLoop671700  for (kkk=0; kkk<=ny-1; kkk=kkk+256) {...",shape=box];
	ForLoop671700 -> ForLoop671699;
	ForLoop671700 -> _JOIN_671700;
	_JOIN_668389 [label="_JOIN_668389None...",shape=box];
	_JOIN_668389 -> 668390;
	669761 [label="669761  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	ForLoop671705 [label="ForLoop671705  for (iii=0; iii<=nx-1; iii=iii+256) {...",shape=box];
	ForLoop671705 -> ForLoop671704;
	ForLoop671705 -> _JOIN_671705;
	ForLoop671704 [label="ForLoop671704  for (ii=iii; ii<=min(nx-1,iii+240); ii=ii+16) {...",shape=box];
	ForLoop671704 -> ForLoop670966;
	ForLoop671704 -> _JOIN_671704;
	687500 [label="687500  tmp[it]=scv_18;...",shape=box];
	ForLoop671591 [label="ForLoop671591  for (k=kk; k<=cbv_12; k=k+3) {...",shape=box];
	ForLoop671591 -> 689022;
	ForLoop671591 -> _JOIN_671591;
	ForLoop671702 [label="ForLoop671702  for (i=it; i<=min(nx-1,ii+15); i=i+1) {...",shape=box];
	ForLoop671702 -> 690570;
	ForLoop671702 -> _JOIN_671702;
	671228 [label="671228  int j;...",shape=box];
	ForLoop669424 [label="ForLoop669424  for (j=jt; j<=cbv_2; j=j+4) {...",shape=box];
	ForLoop669424 -> 676260;
	ForLoop669424 -> _JOIN_669424;
	681443 [label="681443  double scv_17;...",shape=box];
	671412 [label="671412  scv_30=scv_30+A[i*ny+j]*x[j];...",shape=box];
	671412 -> _JOIN_671413;
	_JOIN_567925 [label="_JOIN_567925None...",shape=box];
	_JOIN_567925 -> 568287;
	_JOIN_669696 [label="_JOIN_669696None...",shape=box];
	_JOIN_669696 -> _JOIN_669699;
	_JOIN_671591 [label="_JOIN_671591None...",shape=box];
	_JOIN_671591 -> 702025;
	_JOIN_671704 [label="_JOIN_671704None...",shape=box];
	_JOIN_671704 -> _JOIN_671705;
	_JOIN_669699 [label="_JOIN_669699None...",shape=box];
	_JOIN_669699 -> ForLoop670964;
	_JOIN_671665 [label="_JOIN_671665None...",shape=box];
	_JOIN_671665 -> 671697;
	676260 [label="676260  double scv_9, scv_10, scv_11, scv_12;...",shape=box];
	_JOIN_669424 [label="_JOIN_669424None...",shape=box];
	_JOIN_669424 -> 700561;
	689173 [label="689173  double scv_29;...",shape=box];
	ForLoop671665 [label="ForLoop671665  for (k=cbv_13; k<=cbv_14; k=k+1) {...",shape=box];
	ForLoop671665 -> 689173;
	ForLoop671665 -> _JOIN_671665;
	701757 [label="701757  register int cbv_10, cbv_11;...",shape=box];
	ForLoop567925 [label="ForLoop567925  for (i=0; i<=cbv_1; i=i+28) {...",shape=box];
	ForLoop567925 -> 567680;
	ForLoop567925 -> _JOIN_567925;
	690582 [label="690582  tmp[i]=scv_30;...",shape=box];
	690582 -> _JOIN_671702;
	ForLoop671227 [label="ForLoop671227  for (jt=jj; jt<=cbv_8; jt=jt+8) {...",shape=box];
	ForLoop671227 -> 671043;
	ForLoop671227 -> _JOIN_671227;
	567680 [label="567680  y[i]=0.0;...",shape=box];
	666176 [label="666176  double x_copy;...",shape=box];
	_JOIN_671227 [label="_JOIN_671227None...",shape=box];
	_JOIN_671227 -> 671228;
	_JOIN_671413 [label="_JOIN_671413None...",shape=box];
	_JOIN_671413 -> _JOIN_671416;
	ForLoop670929 [label="ForLoop670929  for (k=cbv_6; k<=cbv_7; k=k+1) {...",shape=box];
	ForLoop670929 -> 681443;
	ForLoop670929 -> _JOIN_670929;
	676674 [label="676674  double scv_13;...",shape=box];
	_JOIN_671416 [label="_JOIN_671416None...",shape=box];
	_JOIN_671416 -> ForLoop671700;
	699714 [label="699714  register int cbv_1;...",shape=box];
	567218 [label="567218  int i;...",shape=box];
	ForLoop671345 [label="ForLoop671345  for (j=jt; j<=cbv_9; j=j+4) {...",shape=box];
	ForLoop671345 -> 671268;
	ForLoop671345 -> _JOIN_671345;
	_JOIN_671699 [label="_JOIN_671699None...",shape=box];
	_JOIN_671699 -> _JOIN_671700;
	ForLoop671416 [label="ForLoop671416  for (jj=0; jj<=ny-1; jj=jj+512) {...",shape=box];
	ForLoop671416 -> 701569;
	ForLoop671416 -> _JOIN_671416;
	_JOIN_567994 [label="_JOIN_567994None...",shape=box];
	_JOIN_567994 -> 666176;
	ForLoop669699 [label="ForLoop669699  for (jj=0; jj<=ny-1; jj=jj+512) {...",shape=box];
	ForLoop669699 -> 699714;
	ForLoop669699 -> _JOIN_669699;
	ForLoop670966 [label="ForLoop670966  for (it=ii; it<=min(nx-1,ii+15)-7; it=it+8) {...",shape=box];
	ForLoop670966 -> 687488;
	ForLoop670966 -> _JOIN_670966;
	701569 [label="701569  register int cbv_8;...",shape=box];
	671697 [label="671697  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	671697 -> _JOIN_671699;
	ForLoop670963 [label="ForLoop670963  for (kk=kkk; kk<=min(ny-1,kkk+224); kk=kk+32) {...",shape=box];
	ForLoop670963 -> 669761;
	ForLoop670963 -> _JOIN_670963;
	ForLoop567994 [label="ForLoop567994  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop567994 -> 567993;
	ForLoop567994 -> _JOIN_567994;
	671478 [label="671478  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	668390 [label="668390  int j;...",shape=box];
	674715 [label=expected=9369846271501.798828
actual=9369846271501.798828
"674715  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	ForLoop669696 [label="ForLoop669696  for (j=cbv_3; j<=cbv_4; j=j+1) {...",shape=box];
	ForLoop669696 -> 676674;
	ForLoop669696 -> _JOIN_669696;
	567993 [label="567993  y[i]=0.0;...",shape=box];
	567993 -> _JOIN_567994;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest5.exe __orio_perftest5.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest5.exe  
{'[1, 6, 2, 3, 0, 3, 0, 1, 27, 0, 3, 2, 1, 1, 0, 1, 1, 1]' : 0.0872891}
{'[1, 6, 2, 3, 0, 3, 0, 1, 27, 0, 3, 2, 1, 1, 0, 1, 1, 1]' : 0.0869219}
{'[1, 6, 2, 3, 0, 3, 0, 1, 27, 0, 3, 2, 1, 1, 0, 1, 1, 1]' : 0.0869141}
{'[1, 6, 2, 3, 0, 3, 0, 1, 27, 0, 3, 2, 1, 1, 0, 1, 1, 1]' : 0.0868928}
{'[1, 6, 2, 3, 0, 3, 0, 1, 27, 0, 3, 2, 1, 1, 0, 1, 1, 1]' : 0.0868161}
{'[1, 6, 2, 3, 0, 3, 0, 1, 27, 0, 3, 2, 1, 1, 0, 1, 1, 1]' : 0.0869231}
{'[1, 6, 2, 3, 0, 3, 0, 1, 27, 0, 3, 2, 1, 1, 0, 1, 1, 1]' : 0.0868752}
{'[1, 6, 2, 3, 0, 3, 0, 1, 27, 0, 3, 2, 1, 1, 0, 1, 1, 1]' : 0.0869069}
{'[1, 6, 2, 3, 0, 3, 0, 1, 27, 0, 3, 2, 1, 1, 0, 1, 1, 1]' : 0.087285}
{'[1, 6, 2, 3, 0, 3, 0, 1, 27, 0, 3, 2, 1, 1, 0, 1, 1, 1]' : 0.086848}
{'[1, 6, 2, 3, 0, 3, 0, 1, 27, 0, 3, 2, 1, 1, 0, 1, 1, 1]' : 0.0870569}
{'[1, 6, 2, 3, 0, 3, 0, 1, 27, 0, 3, 2, 1, 1, 0, 1, 1, 1]' : 0.0870051}
{'[1, 6, 2, 3, 0, 3, 0, 1, 27, 0, 3, 2, 1, 1, 0, 1, 1, 1]' : 0.0869088}
{'[1, 6, 2, 3, 0, 3, 0, 1, 27, 0, 3, 2, 1, 1, 0, 1, 1, 1]' : 0.0869222}
{'[1, 6, 2, 3, 0, 3, 0, 1, 27, 0, 3, 2, 1, 1, 0, 1, 1, 1]' : 0.0868509}
{'[1, 6, 2, 3, 0, 3, 0, 1, 27, 0, 3, 2, 1, 1, 0, 1, 1, 1]' : 0.0868881}
{'[1, 6, 2, 3, 0, 3, 0, 1, 27, 0, 3, 2, 1, 1, 0, 1, 1, 1]' : 0.086962}
{'[1, 6, 2, 3, 0, 3, 0, 1, 27, 0, 3, 2, 1, 1, 0, 1, 1, 1]' : 0.0868781}
{'[1, 6, 2, 3, 0, 3, 0, 1, 27, 0, 3, 2, 1, 1, 0, 1, 1, 1]' : 0.0868642}
{'[1, 6, 2, 3, 0, 3, 0, 1, 27, 0, 3, 2, 1, 1, 0, 1, 1, 1]' : 0.086879}
{'[1, 6, 2, 3, 0, 3, 0, 1, 27, 0, 3, 2, 1, 1, 0, 1, 1, 1]' : 0.087965}
{'[1, 6, 2, 3, 0, 3, 0, 1, 27, 0, 3, 2, 1, 1, 0, 1, 1, 1]' : 0.0869169}
{'[1, 6, 2, 3, 0, 3, 0, 1, 27, 0, 3, 2, 1, 1, 0, 1, 1, 1]' : 0.0869129}
{'[1, 6, 2, 3, 0, 3, 0, 1, 27, 0, 3, 2, 1, 1, 0, 1, 1, 1]' : 0.086854}
{'[1, 6, 2, 3, 0, 3, 0, 1, 27, 0, 3, 2, 1, 1, 0, 1, 1, 1]' : 0.086843}
{'[1, 6, 2, 3, 0, 3, 0, 1, 27, 0, 3, 2, 1, 1, 0, 1, 1, 1]' : 0.086839}
{'[1, 6, 2, 3, 0, 3, 0, 1, 27, 0, 3, 2, 1, 1, 0, 1, 1, 1]' : 0.0872369}
{'[1, 6, 2, 3, 0, 3, 0, 1, 27, 0, 3, 2, 1, 1, 0, 1, 1, 1]' : 0.086885}
{'[1, 6, 2, 3, 0, 3, 0, 1, 27, 0, 3, 2, 1, 1, 0, 1, 1, 1]' : 0.086767}
{'[1, 6, 2, 3, 0, 3, 0, 1, 27, 0, 3, 2, 1, 1, 0, 1, 1, 1]' : 0.0869281}

out:
 ["{'[1, 6, 2, 3, 0, 3, 0, 1, 27, 0, 3, 2, 1, 1, 0, 1, 1, 1]' : 0.0872891}", "{'[1, 6, 2, 3, 0, 3, 0, 1, 27, 0, 3, 2, 1, 1, 0, 1, 1, 1]' : 0.0869219}", "{'[1, 6, 2, 3, 0, 3, 0, 1, 27, 0, 3, 2, 1, 1, 0, 1, 1, 1]' : 0.0869141}", "{'[1, 6, 2, 3, 0, 3, 0, 1, 27, 0, 3, 2, 1, 1, 0, 1, 1, 1]' : 0.0868928}", "{'[1, 6, 2, 3, 0, 3, 0, 1, 27, 0, 3, 2, 1, 1, 0, 1, 1, 1]' : 0.0868161}", "{'[1, 6, 2, 3, 0, 3, 0, 1, 27, 0, 3, 2, 1, 1, 0, 1, 1, 1]' : 0.0869231}", "{'[1, 6, 2, 3, 0, 3, 0, 1, 27, 0, 3, 2, 1, 1, 0, 1, 1, 1]' : 0.0868752}", "{'[1, 6, 2, 3, 0, 3, 0, 1, 27, 0, 3, 2, 1, 1, 0, 1, 1, 1]' : 0.0869069}", "{'[1, 6, 2, 3, 0, 3, 0, 1, 27, 0, 3, 2, 1, 1, 0, 1, 1, 1]' : 0.087285}", "{'[1, 6, 2, 3, 0, 3, 0, 1, 27, 0, 3, 2, 1, 1, 0, 1, 1, 1]' : 0.086848}", "{'[1, 6, 2, 3, 0, 3, 0, 1, 27, 0, 3, 2, 1, 1, 0, 1, 1, 1]' : 0.0870569}", "{'[1, 6, 2, 3, 0, 3, 0, 1, 27, 0, 3, 2, 1, 1, 0, 1, 1, 1]' : 0.0870051}", "{'[1, 6, 2, 3, 0, 3, 0, 1, 27, 0, 3, 2, 1, 1, 0, 1, 1, 1]' : 0.0869088}", "{'[1, 6, 2, 3, 0, 3, 0, 1, 27, 0, 3, 2, 1, 1, 0, 1, 1, 1]' : 0.0869222}", "{'[1, 6, 2, 3, 0, 3, 0, 1, 27, 0, 3, 2, 1, 1, 0, 1, 1, 1]' : 0.0868509}", "{'[1, 6, 2, 3, 0, 3, 0, 1, 27, 0, 3, 2, 1, 1, 0, 1, 1, 1]' : 0.0868881}", "{'[1, 6, 2, 3, 0, 3, 0, 1, 27, 0, 3, 2, 1, 1, 0, 1, 1, 1]' : 0.086962}", "{'[1, 6, 2, 3, 0, 3, 0, 1, 27, 0, 3, 2, 1, 1, 0, 1, 1, 1]' : 0.0868781}", "{'[1, 6, 2, 3, 0, 3, 0, 1, 27, 0, 3, 2, 1, 1, 0, 1, 1, 1]' : 0.0868642}", "{'[1, 6, 2, 3, 0, 3, 0, 1, 27, 0, 3, 2, 1, 1, 0, 1, 1, 1]' : 0.086879}", "{'[1, 6, 2, 3, 0, 3, 0, 1, 27, 0, 3, 2, 1, 1, 0, 1, 1, 1]' : 0.087965}", "{'[1, 6, 2, 3, 0, 3, 0, 1, 27, 0, 3, 2, 1, 1, 0, 1, 1, 1]' : 0.0869169}", "{'[1, 6, 2, 3, 0, 3, 0, 1, 27, 0, 3, 2, 1, 1, 0, 1, 1, 1]' : 0.0869129}", "{'[1, 6, 2, 3, 0, 3, 0, 1, 27, 0, 3, 2, 1, 1, 0, 1, 1, 1]' : 0.086854}", "{'[1, 6, 2, 3, 0, 3, 0, 1, 27, 0, 3, 2, 1, 1, 0, 1, 1, 1]' : 0.086843}", "{'[1, 6, 2, 3, 0, 3, 0, 1, 27, 0, 3, 2, 1, 1, 0, 1, 1, 1]' : 0.086839}", "{'[1, 6, 2, 3, 0, 3, 0, 1, 27, 0, 3, 2, 1, 1, 0, 1, 1, 1]' : 0.0872369}", "{'[1, 6, 2, 3, 0, 3, 0, 1, 27, 0, 3, 2, 1, 1, 0, 1, 1, 1]' : 0.086885}", "{'[1, 6, 2, 3, 0, 3, 0, 1, 27, 0, 3, 2, 1, 1, 0, 1, 1, 1]' : 0.086767}", "{'[1, 6, 2, 3, 0, 3, 0, 1, 27, 0, 3, 2, 1, 1, 0, 1, 1, 1]' : 0.0869281}"]
returning from 'run': {'[1, 6, 2, 3, 0, 3, 0, 1, 27, 0, 3, 2, 1, 1, 0, 1, 1, 1]': ([0.0872891, 0.0869219, 0.0869141, 0.0868928, 0.0868161, 0.0869231, 0.0868752, 0.0869069, 0.087285, 0.086848, 0.0870569, 0.0870051, 0.0869088, 0.0869222, 0.0868509, 0.0868881, 0.086962, 0.0868781, 0.0868642, 0.086879, 0.087965, 0.0869169, 0.0869129, 0.086854, 0.086843, 0.086839, 0.0872369, 0.086885, 0.086767, 0.0869281], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.0872891, 0.0869219, 0.0869141, 0.0868928, 0.0868161, 0.0869231, 0.0868752, 0.0869069, 0.087285, 0.086848, 0.0870569, 0.0870051, 0.0869088, 0.0869222, 0.0868509, 0.0868881, 0.086962, 0.0868781, 0.0868642, 0.086879, 0.087965, 0.0869169, 0.0869129, 0.086854, 0.086843, 0.086839, 0.0872369, 0.086885, 0.086767, 0.0869281], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[1, 6, 2, 3, 0, 3, 0, 1, 27, 0, 3, 2, 1, 1, 0, 1, 1, 1]': ([0.0872891, 0.0869219, 0.0869141, 0.0868928, 0.0868161, 0.0869231, 0.0868752, 0.0869069, 0.087285, 0.086848, 0.0870569, 0.0870051, 0.0869088, 0.0869222, 0.0868509, 0.0868881, 0.086962, 0.0868781, 0.0868642, 0.086879, 0.087965, 0.0869169, 0.0869129, 0.086854, 0.086843, 0.086839, 0.0872369, 0.086885, 0.086767, 0.0869281], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [0, 2, 0, 6, 6, 5, 0, 0, 29, 26, 0, 21, 0, 0, 2, 1, 1, 0]
Fixed Factors: {}
Testing candidate 6: [0, 2, 0, 6, 6, 5, 0, 0, 29, 26, 0, 21, 0, 0, 2, 1, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	71
        Max loop nest depth: 	5
        Additions: 		7930
        Multiplications: 	3136
        Divisions: 		0
        Logical: 		0
        Reads: 			16093
        Writes: 		3245
        Comparisons:		71
        Gotos: 			0
        
digraph CFG {
	_JOIN_974273 [label="_JOIN_974273None...",shape=box];
	_JOIN_974273 -> 974275;
	_JOIN_966657 [label="_JOIN_966657None...",shape=box];
	_JOIN_966657 -> ForLoop966731;
	1031637 [label="1031637  double scv_103, scv_104, scv_105, scv_106, scv_107, scv_108, scv_109, scv_110;...",shape=box];
	ForLoop967569 [label="ForLoop967569  for (k=(min(ny-1,kkk+1023))-(((min(ny-1,kkk+1023))-(kt)+1)%22)+1; k<=min(ny-1,kkk+1023); k=k+1) {...",shape=box];
	ForLoop967569 -> 1047475;
	ForLoop967569 -> _JOIN_967569;
	1028775 [label="1028775  double scv_79;...",shape=box];
	1033337 [label="1033337  double scv_126, scv_127, scv_128, scv_129, scv_130, scv_131, scv_132, scv_133;...",shape=box];
	_JOIN_971685 [label="_JOIN_971685None...",shape=box];
	_JOIN_971685 -> ForLoop971759;
	965057 [label="965057  int k;...",shape=box];
	965057 -> ForLoop965819;
	ForLoop981087 [label="ForLoop981087  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop981087 -> ForLoop980385;
	ForLoop981087 -> _JOIN_981087;
	ForLoop981084 [label="ForLoop981084  for (k=(min(ny-1,kkk+1023))-(((min(ny-1,kkk+1023))-(kt)+1)%22)+1; k<=min(ny-1,kkk+1023); k=k+1) {...",shape=box];
	ForLoop981084 -> 1175530;
	ForLoop981084 -> _JOIN_981084;
	_JOIN_973361 [label="_JOIN_973361None...",shape=box];
	_JOIN_973361 -> ForLoop973435;
	1055975 [label="1055975  double scv_447;...",shape=box];
	ForLoop981089 [label="ForLoop981089  for (i=(min(nx-1,iii+2047))-(((min(nx-1,iii+2047))-(iii)+1)%27)+1; i<=min(nx-1,iii+2047); i=i+1) {...",shape=box];
	ForLoop981089 -> 1179871;
	ForLoop981089 -> _JOIN_981089;
	ForLoop975949 [label="ForLoop975949  for (k=(min(ny-1,kkk+1023))-(((min(ny-1,kkk+1023))-(kt)+1)%22)+1; k<=min(ny-1,kkk+1023); k=k+1) {...",shape=box];
	ForLoop975949 -> 1064475;
	ForLoop975949 -> _JOIN_975949;
	964219 [label="964219  int k;...",shape=box];
	964219 -> ForLoop964981;
	ForLoop962541 [label="ForLoop962541  for (k=(min(ny-1,kkk+1023))-(((min(ny-1,kkk+1023))-(kt)+1)%22)+1; k<=min(ny-1,kkk+1023); k=k+1) {...",shape=box];
	ForLoop962541 -> 1037275;
	ForLoop962541 -> _JOIN_962541;
	_JOIN_958277 [label="_JOIN_958277None...",shape=box];
	_JOIN_958277 -> ForLoop958351;
	1069575 [label="1069575  double scv_631;...",shape=box];
	_JOIN_979431 [label="_JOIN_979431None...",shape=box];
	_JOIN_979431 -> ForLoop981087;
	1023265 [label="1023265  double scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8, scv_9;...",shape=box];
	ForLoop973361 [label="ForLoop973361  for (k=kt; k<=min(ny-1,kkk+1023)-21; k=k+22) {...",shape=box];
	ForLoop973361 -> 1058837;
	ForLoop973361 -> _JOIN_973361;
	ForLoop957513 [label="ForLoop957513  for (k=(min(ny-1,kkk+1023))-(((min(ny-1,kkk+1023))-(kt)+1)%22)+1; k<=min(ny-1,kkk+1023); k=k+1) {...",shape=box];
	ForLoop957513 -> 1027075;
	ForLoop957513 -> _JOIN_957513;
	1059375 [label="1059375  double scv_493;...",shape=box];
	_JOIN_965893 [label="_JOIN_965893None...",shape=box];
	_JOIN_965893 -> 965895;
	1065637 [label="1065637  double scv_563, scv_564, scv_565, scv_566, scv_567, scv_568, scv_569, scv_570;...",shape=box];
	ForLoop979429 [label="ForLoop979429  for (j=jj; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop979429 -> 979428;
	ForLoop979429 -> _JOIN_979429;
	ForLoop981016 [label="ForLoop981016  for (k=kt; k<=min(ny-1,kkk+1023)-21; k=k+22) {...",shape=box];
	ForLoop981016 -> 1175001;
	ForLoop981016 -> _JOIN_981016;
	ForLoop968407 [label="ForLoop968407  for (k=(min(ny-1,kkk+1023))-(((min(ny-1,kkk+1023))-(kt)+1)%22)+1; k<=min(ny-1,kkk+1023); k=k+1) {...",shape=box];
	ForLoop968407 -> 1049175;
	ForLoop968407 -> _JOIN_968407;
	_JOIN_962541 [label="_JOIN_962541None...",shape=box];
	_JOIN_962541 -> 962543;
	1057675 [label="1057675  double scv_470;...",shape=box];
	ForLoop964143 [label="ForLoop964143  for (k=kt; k<=min(ny-1,kkk+1023)-21; k=k+22) {...",shape=box];
	ForLoop964143 -> 1040137;
	ForLoop964143 -> _JOIN_964143;
	1052575 [label="1052575  double scv_401;...",shape=box];
	ForLoop970083 [label="ForLoop970083  for (k=(min(ny-1,kkk+1023))-(((min(ny-1,kkk+1023))-(kt)+1)%22)+1; k<=min(ny-1,kkk+1023); k=k+1) {...",shape=box];
	ForLoop970083 -> 1052575;
	ForLoop970083 -> _JOIN_970083;
	ForLoop968333 [label="ForLoop968333  for (k=kt; k<=min(ny-1,kkk+1023)-21; k=k+22) {...",shape=box];
	ForLoop968333 -> 1048637;
	ForLoop968333 -> _JOIN_968333;
	1044075 [label="1044075  double scv_286;...",shape=box];
	_JOIN_965055 [label="_JOIN_965055None...",shape=box];
	_JOIN_965055 -> 965057;
	1175530 [label="1175530  double scv_736;...",shape=box];
	ForLoop979304 [label="ForLoop979304  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop979304 -> ForLoop956814;
	ForLoop979304 -> _JOIN_979304;
	973437 [label="973437  int k;...",shape=box];
	973437 -> ForLoop974199;
	972599 [label="972599  int k;...",shape=box];
	972599 -> ForLoop973361;
	_JOIN_971759 [label="_JOIN_971759None...",shape=box];
	_JOIN_971759 -> 971761;
	1058837 [label="1058837  double scv_471, scv_472, scv_473, scv_474, scv_475, scv_476, scv_477, scv_478;...",shape=box];
	ForLoop970009 [label="ForLoop970009  for (k=kt; k<=min(ny-1,kkk+1023)-21; k=k+22) {...",shape=box];
	ForLoop970009 -> 1052037;
	ForLoop970009 -> _JOIN_970009;
	ForLoop970847 [label="ForLoop970847  for (k=kt; k<=min(ny-1,kkk+1023)-21; k=k+22) {...",shape=box];
	ForLoop970847 -> 1053737;
	ForLoop970847 -> _JOIN_970847;
	ForLoop979430 [label="ForLoop979430  for (jj=jjj; jj<=min(ny-1,jjj+2016); jj=jj+32) {...",shape=box];
	ForLoop979430 -> ForLoop979429;
	ForLoop979430 -> _JOIN_979430;
	ForLoop979431 [label="ForLoop979431  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop979431 -> ForLoop979430;
	ForLoop979431 -> _JOIN_979431;
	702816 [label="702816  y[i]=0.0;...",shape=box];
	ForLoop960791 [label="ForLoop960791  for (k=kt; k<=min(ny-1,kkk+1023)-21; k=k+22) {...",shape=box];
	ForLoop960791 -> 1033337;
	ForLoop960791 -> _JOIN_960791;
	1041837 [label="1041837  double scv_241, scv_242, scv_243, scv_244, scv_245, scv_246, scv_247, scv_248;...",shape=box];
	_JOIN_979227 [label="_JOIN_979227None...",shape=box];
	_JOIN_979227 -> ForLoop979301;
	977627 [label="977627  int k;...",shape=box];
	977627 -> ForLoop978389;
	_JOIN_975111 [label="_JOIN_975111None...",shape=box];
	_JOIN_975111 -> 975113;
	ForLoop965893 [label="ForLoop965893  for (k=(min(ny-1,kkk+1023))-(((min(ny-1,kkk+1023))-(kt)+1)%22)+1; k<=min(ny-1,kkk+1023); k=k+1) {...",shape=box];
	ForLoop965893 -> 1044075;
	ForLoop965893 -> _JOIN_965893;
	ForLoop979306 [label="ForLoop979306  for (i=iii; i<=min(nx-1,iii+2047)-26; i=i+27) {...",shape=box];
	ForLoop979306 -> 1169704;
	ForLoop979306 -> _JOIN_979306;
	978465 [label="978465  int k;...",shape=box];
	978465 -> ForLoop979227;
	1035575 [label="1035575  double scv_171;...",shape=box];
	_JOIN_979430 [label="_JOIN_979430None...",shape=box];
	_JOIN_979430 -> _JOIN_979431;
	_JOIN_972597 [label="_JOIN_972597None...",shape=box];
	_JOIN_972597 -> 972599;
	_JOIN_963305 [label="_JOIN_963305None...",shape=box];
	_JOIN_963305 -> ForLoop963379;
	ForLoop977625 [label="ForLoop977625  for (k=(min(ny-1,kkk+1023))-(((min(ny-1,kkk+1023))-(kt)+1)%22)+1; k<=min(ny-1,kkk+1023); k=k+1) {...",shape=box];
	ForLoop977625 -> 1067875;
	ForLoop977625 -> _JOIN_977625;
	1040137 [label="1040137  double scv_218, scv_219, scv_220, scv_221, scv_222, scv_223, scv_224, scv_225;...",shape=box];
	_JOIN_975949 [label="_JOIN_975949None...",shape=box];
	_JOIN_975949 -> 975951;
	ForLoop958277 [label="ForLoop958277  for (k=kt; k<=min(ny-1,kkk+1023)-21; k=k+22) {...",shape=box];
	ForLoop958277 -> 1028237;
	ForLoop958277 -> _JOIN_958277;
	_JOIN_927807 [label="_JOIN_927807None...",shape=box];
	_JOIN_927807 -> _JOIN_927809;
	ForLoop965819 [label="ForLoop965819  for (k=kt; k<=min(ny-1,kkk+1023)-21; k=k+22) {...",shape=box];
	ForLoop965819 -> 1043537;
	ForLoop965819 -> _JOIN_965819;
	_JOIN_972523 [label="_JOIN_972523None...",shape=box];
	_JOIN_972523 -> ForLoop972597;
	963381 [label="963381  int k;...",shape=box];
	963381 -> ForLoop964143;
	980386 [label="980386  int k;...",shape=box];
	980386 -> ForLoop981016;
	962543 [label="962543  int k;...",shape=box];
	962543 -> ForLoop963305;
	_JOIN_927809 [label="_JOIN_927809None...",shape=box];
	_JOIN_927809 -> _JOIN_927811;
	ForLoop960865 [label="ForLoop960865  for (k=(min(ny-1,kkk+1023))-(((min(ny-1,kkk+1023))-(kt)+1)%22)+1; k<=min(ny-1,kkk+1023); k=k+1) {...",shape=box];
	ForLoop960865 -> 1033875;
	ForLoop960865 -> _JOIN_960865;
	_JOIN_980385 [label="_JOIN_980385None...",shape=box];
	_JOIN_980385 -> 980386;
	ForLoop961629 [label="ForLoop961629  for (k=kt; k<=min(ny-1,kkk+1023)-21; k=k+22) {...",shape=box];
	ForLoop961629 -> 1035037;
	ForLoop961629 -> _JOIN_961629;
	ForLoop974273 [label="ForLoop974273  for (k=(min(ny-1,kkk+1023))-(((min(ny-1,kkk+1023))-(kt)+1)%22)+1; k<=min(ny-1,kkk+1023); k=k+1) {...",shape=box];
	ForLoop974273 -> 1061075;
	ForLoop974273 -> _JOIN_974273;
	_JOIN_964981 [label="_JOIN_964981None...",shape=box];
	_JOIN_964981 -> ForLoop965055;
	ForLoop979301 [label="ForLoop979301  for (k=(min(ny-1,kkk+1023))-(((min(ny-1,kkk+1023))-(kt)+1)%22)+1; k<=min(ny-1,kkk+1023); k=k+1) {...",shape=box];
	ForLoop979301 -> 1071275;
	ForLoop979301 -> _JOIN_979301;
	ForLoop971685 [label="ForLoop971685  for (k=kt; k<=min(ny-1,kkk+1023)-21; k=k+22) {...",shape=box];
	ForLoop971685 -> 1055437;
	ForLoop971685 -> _JOIN_971685;
	_JOIN_981016 [label="_JOIN_981016None...",shape=box];
	_JOIN_981016 -> ForLoop981084;
	_JOIN_957513 [label="_JOIN_957513None...",shape=box];
	_JOIN_957513 -> 957515;
	1054275 [label="1054275  double scv_424;...",shape=box];
	ForLoop971759 [label="ForLoop971759  for (k=(min(ny-1,kkk+1023))-(((min(ny-1,kkk+1023))-(kt)+1)%22)+1; k<=min(ny-1,kkk+1023); k=k+1) {...",shape=box];
	ForLoop971759 -> 1055975;
	ForLoop971759 -> _JOIN_971759;
	ForLoop972597 [label="ForLoop972597  for (k=(min(ny-1,kkk+1023))-(((min(ny-1,kkk+1023))-(kt)+1)%22)+1; k<=min(ny-1,kkk+1023); k=k+1) {...",shape=box];
	ForLoop972597 -> 1057675;
	ForLoop972597 -> _JOIN_972597;
	1053737 [label="1053737  double scv_402, scv_403, scv_404, scv_405, scv_406, scv_407, scv_408, scv_409;...",shape=box];
	1062775 [label="1062775  double scv_539;...",shape=box];
	ForLoop961703 [label="ForLoop961703  for (k=(min(ny-1,kkk+1023))-(((min(ny-1,kkk+1023))-(kt)+1)%22)+1; k<=min(ny-1,kkk+1023); k=k+1) {...",shape=box];
	ForLoop961703 -> 1035575;
	ForLoop961703 -> _JOIN_961703;
	_JOIN_969171 [label="_JOIN_969171None...",shape=box];
	_JOIN_969171 -> ForLoop969245;
	ForLoop959953 [label="ForLoop959953  for (k=kt; k<=min(ny-1,kkk+1023)-21; k=k+22) {...",shape=box];
	ForLoop959953 -> 1031637;
	ForLoop959953 -> _JOIN_959953;
	_JOIN_963379 [label="_JOIN_963379None...",shape=box];
	_JOIN_963379 -> 963381;
	1037275 [label="1037275  double scv_194;...",shape=box];
	_JOIN_975875 [label="_JOIN_975875None...",shape=box];
	_JOIN_975875 -> ForLoop975949;
	ForLoop959115 [label="ForLoop959115  for (k=kt; k<=min(ny-1,kkk+1023)-21; k=k+22) {...",shape=box];
	ForLoop959115 -> 1029937;
	ForLoop959115 -> _JOIN_959115;
	_JOIN_979304 [label="_JOIN_979304None...",shape=box];
	_JOIN_979304 -> 1169722;
	_JOIN_927811 [label="_JOIN_927811None...",shape=box];
	_JOIN_927811 -> ForLoop979304;
	_JOIN_969245 [label="_JOIN_969245None...",shape=box];
	_JOIN_969245 -> 969247;
	ForLoop972523 [label="ForLoop972523  for (k=kt; k<=min(ny-1,kkk+1023)-21; k=k+22) {...",shape=box];
	ForLoop972523 -> 1057137;
	ForLoop972523 -> _JOIN_972523;
	_JOIN_981087 [label="_JOIN_981087None...",shape=box];
	_JOIN_981087 -> 1179883;
	_JOIN_981084 [label="_JOIN_981084None...",shape=box];
	_JOIN_981084 -> _JOIN_981087;
	1179871 [label="1179871  double scv_737;...",shape=box];
	1032175 [label="1032175  double scv_125;...",shape=box];
	_JOIN_981089 [label="_JOIN_981089None...",shape=box];
	_JOIN_981089 -> _JOIN_981091;
	1050875 [label="1050875  double scv_378;...",shape=box];
	1045237 [label="1045237  double scv_287, scv_288, scv_289, scv_290, scv_291, scv_292, scv_293, scv_294;...",shape=box];
	975113 [label="975113  int k;...",shape=box];
	975113 -> ForLoop975875;
	_JOIN_967569 [label="_JOIN_967569None...",shape=box];
	_JOIN_967569 -> 967571;
	_JOIN_976713 [label="_JOIN_976713None...",shape=box];
	_JOIN_976713 -> ForLoop976787;
	_JOIN_970847 [label="_JOIN_970847None...",shape=box];
	_JOIN_970847 -> ForLoop970921;
	_JOIN_967495 [label="_JOIN_967495None...",shape=box];
	_JOIN_967495 -> ForLoop967569;
	1169704 [label="1169704  double scv_655, scv_656, scv_657, scv_658, scv_659, scv_660, scv_661, scv_662;...",shape=box];
	_JOIN_957445 [label="_JOIN_957445None...",shape=box];
	_JOIN_957445 -> ForLoop957513;
	1042375 [label="1042375  double scv_263;...",shape=box];
	_JOIN_959953 [label="_JOIN_959953None...",shape=box];
	_JOIN_959953 -> ForLoop960027;
	1175001 [label="1175001  double scv_714, scv_715, scv_716, scv_717, scv_718, scv_719, scv_720, scv_721;...",shape=box];
	1169722 [label="1169722  tmp[(i+20)]=scv_655;...",shape=box];
	_JOIN_960865 [label="_JOIN_960865None...",shape=box];
	_JOIN_960865 -> 960867;
	_JOIN_979429 [label="_JOIN_979429None...",shape=box];
	_JOIN_979429 -> _JOIN_979430;
	1033875 [label="1033875  double scv_148;...",shape=box];
	ForLoop966657 [label="ForLoop966657  for (k=kt; k<=min(ny-1,kkk+1023)-21; k=k+22) {...",shape=box];
	ForLoop966657 -> 1045237;
	ForLoop966657 -> _JOIN_966657;
	ForLoop970921 [label="ForLoop970921  for (k=(min(ny-1,kkk+1023))-(((min(ny-1,kkk+1023))-(kt)+1)%22)+1; k<=min(ny-1,kkk+1023); k=k+1) {...",shape=box];
	ForLoop970921 -> 1054275;
	ForLoop970921 -> _JOIN_970921;
	ForLoop969245 [label="ForLoop969245  for (k=(min(ny-1,kkk+1023))-(((min(ny-1,kkk+1023))-(kt)+1)%22)+1; k<=min(ny-1,kkk+1023); k=k+1) {...",shape=box];
	ForLoop969245 -> 1050875;
	ForLoop969245 -> _JOIN_969245;
	ForLoop956814 [label="ForLoop956814  for (kt=kkk; kt<=min(ny-1,kkk+1023)-31; kt=kt+32) {...",shape=box];
	ForLoop956814 -> 1023265;
	ForLoop956814 -> _JOIN_956814;
	975951 [label="975951  int k;...",shape=box];
	975951 -> ForLoop976713;
	_JOIN_981091 [label="_JOIN_981091None...",shape=box];
	1071275 [label="1071275  double scv_654;...",shape=box];
	703147 [label="703147  y[i]=0.0;...",shape=box];
	703147 -> _JOIN_703148;
	1055437 [label="1055437  double scv_425, scv_426, scv_427, scv_428, scv_429, scv_430, scv_431, scv_432;...",shape=box];
	_JOIN_973435 [label="_JOIN_973435None...",shape=box];
	_JOIN_973435 -> 973437;
	_JOIN_975037 [label="_JOIN_975037None...",shape=box];
	_JOIN_975037 -> ForLoop975111;
	966733 [label="966733  int k;...",shape=box];
	966733 -> ForLoop967495;
	1069037 [label="1069037  double scv_609, scv_610, scv_611, scv_612, scv_613, scv_614, scv_615, scv_616;...",shape=box];
	_JOIN_970009 [label="_JOIN_970009None...",shape=box];
	_JOIN_970009 -> ForLoop970083;
	965895 [label="965895  int k;...",shape=box];
	965895 -> ForLoop966657;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 702324;
	1060537 [label="1060537  double scv_494, scv_495, scv_496, scv_497, scv_498, scv_499, scv_500, scv_501;...",shape=box];
	ForLoop962467 [label="ForLoop962467  for (k=kt; k<=min(ny-1,kkk+1023)-21; k=k+22) {...",shape=box];
	ForLoop962467 -> 1036737;
	ForLoop962467 -> _JOIN_962467;
	926707 [label="926707  double x_copy;...",shape=box];
	969247 [label="969247  int k;...",shape=box];
	969247 -> ForLoop970009;
	1038437 [label="1038437  double scv_195, scv_196, scv_197, scv_198, scv_199, scv_200, scv_201, scv_202;...",shape=box];
	959191 [label="959191  int k;...",shape=box];
	959191 -> ForLoop959953;
	1030475 [label="1030475  double scv_102;...",shape=box];
	_JOIN_979301 [label="_JOIN_979301None...",shape=box];
	_JOIN_979301 -> _JOIN_979304;
	_JOIN_970083 [label="_JOIN_970083None...",shape=box];
	_JOIN_970083 -> 970085;
	ForLoop959189 [label="ForLoop959189  for (k=(min(ny-1,kkk+1023))-(((min(ny-1,kkk+1023))-(kt)+1)%22)+1; k<=min(ny-1,kkk+1023); k=k+1) {...",shape=box];
	ForLoop959189 -> 1030475;
	ForLoop959189 -> _JOIN_959189;
	ForLoop967495 [label="ForLoop967495  for (k=kt; k<=min(ny-1,kkk+1023)-21; k=k+22) {...",shape=box];
	ForLoop967495 -> 1046937;
	ForLoop967495 -> _JOIN_967495;
	_JOIN_966731 [label="_JOIN_966731None...",shape=box];
	_JOIN_966731 -> 966733;
	974275 [label="974275  int k;...",shape=box];
	974275 -> ForLoop975037;
	1061075 [label="1061075  double scv_516;...",shape=box];
	_JOIN_977551 [label="_JOIN_977551None...",shape=box];
	_JOIN_977551 -> ForLoop977625;
	ForLoop958351 [label="ForLoop958351  for (k=(min(ny-1,kkk+1023))-(((min(ny-1,kkk+1023))-(kt)+1)%22)+1; k<=min(ny-1,kkk+1023); k=k+1) {...",shape=box];
	ForLoop958351 -> 1028775;
	ForLoop958351 -> _JOIN_958351;
	_JOIN_976787 [label="_JOIN_976787None...",shape=box];
	_JOIN_976787 -> 976789;
	_JOIN_978389 [label="_JOIN_978389None...",shape=box];
	_JOIN_978389 -> ForLoop978463;
	ForLoop977551 [label="ForLoop977551  for (k=kt; k<=min(ny-1,kkk+1023)-21; k=k+22) {...",shape=box];
	ForLoop977551 -> 1067337;
	ForLoop977551 -> _JOIN_977551;
	ForLoop974199 [label="ForLoop974199  for (k=kt; k<=min(ny-1,kkk+1023)-21; k=k+22) {...",shape=box];
	ForLoop974199 -> 1060537;
	ForLoop974199 -> _JOIN_974199;
	957515 [label="957515  int k;...",shape=box];
	957515 -> ForLoop958277;
	ForLoop978463 [label="ForLoop978463  for (k=(min(ny-1,kkk+1023))-(((min(ny-1,kkk+1023))-(kt)+1)%22)+1; k<=min(ny-1,kkk+1023); k=k+1) {...",shape=box];
	ForLoop978463 -> 1069575;
	ForLoop978463 -> _JOIN_978463;
	960029 [label="960029  int k;...",shape=box];
	960029 -> ForLoop960791;
	_JOIN_962467 [label="_JOIN_962467None...",shape=box];
	_JOIN_962467 -> ForLoop962541;
	971761 [label="971761  int k;...",shape=box];
	971761 -> ForLoop972523;
	ForLoop703079 [label="ForLoop703079  for (i=0; i<=cbv_1; i=i+30) {...",shape=box];
	ForLoop703079 -> 702816;
	ForLoop703079 -> _JOIN_703079;
	ForLoop975875 [label="ForLoop975875  for (k=kt; k<=min(ny-1,kkk+1023)-21; k=k+22) {...",shape=box];
	ForLoop975875 -> 1063937;
	ForLoop975875 -> _JOIN_975875;
	970923 [label="970923  int k;...",shape=box];
	970923 -> ForLoop971685;
	1047475 [label="1047475  double scv_332;...",shape=box];
	ForLoop969171 [label="ForLoop969171  for (k=kt; k<=min(ny-1,kkk+1023)-21; k=k+22) {...",shape=box];
	ForLoop969171 -> 1050337;
	ForLoop969171 -> _JOIN_969171;
	ForLoop975037 [label="ForLoop975037  for (k=kt; k<=min(ny-1,kkk+1023)-21; k=k+22) {...",shape=box];
	ForLoop975037 -> 1062237;
	ForLoop975037 -> _JOIN_975037;
	702324 [label="702324  int i;...",shape=box];
	_JOIN_956814 [label="_JOIN_956814None...",shape=box];
	_JOIN_956814 -> 956815;
	1062237 [label="1062237  double scv_517, scv_518, scv_519, scv_520, scv_521, scv_522, scv_523, scv_524;...",shape=box];
	976789 [label="976789  int k;...",shape=box];
	976789 -> ForLoop977551;
	_JOIN_978463 [label="_JOIN_978463None...",shape=box];
	_JOIN_978463 -> 978465;
	1029937 [label="1029937  double scv_80, scv_81, scv_82, scv_83, scv_84, scv_85, scv_86, scv_87;...",shape=box];
	_JOIN_964143 [label="_JOIN_964143None...",shape=box];
	_JOIN_964143 -> ForLoop964217;
	982308 [label="982308  double scv_1;...",shape=box];
	1026546 [label="1026546  double scv_34, scv_35, scv_36, scv_37, scv_38, scv_39, scv_40, scv_41;...",shape=box];
	968409 [label="968409  int k;...",shape=box];
	968409 -> ForLoop969171;
	ForLoop927811 [label="ForLoop927811  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop927811 -> ForLoop927809;
	ForLoop927811 -> _JOIN_927811;
	ForLoop964981 [label="ForLoop964981  for (k=kt; k<=min(ny-1,kkk+1023)-21; k=k+22) {...",shape=box];
	ForLoop964981 -> 1041837;
	ForLoop964981 -> _JOIN_964981;
	1064475 [label="1064475  double scv_562;...",shape=box];
	ForLoop963379 [label="ForLoop963379  for (k=(min(ny-1,kkk+1023))-(((min(ny-1,kkk+1023))-(kt)+1)%22)+1; k<=min(ny-1,kkk+1023); k=k+1) {...",shape=box];
	ForLoop963379 -> 1038975;
	ForLoop963379 -> _JOIN_963379;
	ForLoop966731 [label="ForLoop966731  for (k=(min(ny-1,kkk+1023))-(((min(ny-1,kkk+1023))-(kt)+1)%22)+1; k<=min(ny-1,kkk+1023); k=k+1) {...",shape=box];
	ForLoop966731 -> 1045775;
	ForLoop966731 -> _JOIN_966731;
	1057137 [label="1057137  double scv_448, scv_449, scv_450, scv_451, scv_452, scv_453, scv_454, scv_455;...",shape=box];
	ForLoop960027 [label="ForLoop960027  for (k=(min(ny-1,kkk+1023))-(((min(ny-1,kkk+1023))-(kt)+1)%22)+1; k<=min(ny-1,kkk+1023); k=k+1) {...",shape=box];
	ForLoop960027 -> 1032175;
	ForLoop960027 -> _JOIN_960027;
	1066175 [label="1066175  double scv_585;...",shape=box];
	1040675 [label="1040675  double scv_240;...",shape=box];
	ForLoop978389 [label="ForLoop978389  for (k=kt; k<=min(ny-1,kkk+1023)-21; k=k+22) {...",shape=box];
	ForLoop978389 -> 1069037;
	ForLoop978389 -> _JOIN_978389;
	961705 [label="961705  int k;...",shape=box];
	961705 -> ForLoop962467;
	1173384 [label="1173384  double scv_682, scv_683, scv_684, scv_685, scv_686, scv_687, scv_688, scv_689;...",shape=box];
	1043537 [label="1043537  double scv_264, scv_265, scv_266, scv_267, scv_268, scv_269, scv_270, scv_271;...",shape=box];
	_JOIN_703148 [label="_JOIN_703148None...",shape=box];
	_JOIN_703148 -> 926707;
	ForLoop976787 [label="ForLoop976787  for (k=(min(ny-1,kkk+1023))-(((min(ny-1,kkk+1023))-(kt)+1)%22)+1; k<=min(ny-1,kkk+1023); k=k+1) {...",shape=box];
	ForLoop976787 -> 1066175;
	ForLoop976787 -> _JOIN_976787;
	_JOIN_959189 [label="_JOIN_959189None...",shape=box];
	_JOIN_959189 -> 959191;
	1067875 [label="1067875  double scv_608;...",shape=box];
	ForLoop973435 [label="ForLoop973435  for (k=(min(ny-1,kkk+1023))-(((min(ny-1,kkk+1023))-(kt)+1)%22)+1; k<=min(ny-1,kkk+1023); k=k+1) {...",shape=box];
	ForLoop973435 -> 1059375;
	ForLoop973435 -> _JOIN_973435;
	1035037 [label="1035037  double scv_149, scv_150, scv_151, scv_152, scv_153, scv_154, scv_155, scv_156;...",shape=box];
	926722 [label="926722  int i;...",shape=box];
	926722 -> ForLoop979306;
	ForLoop703148 [label="ForLoop703148  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop703148 -> 703147;
	ForLoop703148 -> _JOIN_703148;
	_JOIN_965819 [label="_JOIN_965819None...",shape=box];
	_JOIN_965819 -> ForLoop965893;
	ForLoop979227 [label="ForLoop979227  for (k=kt; k<=min(ny-1,kkk+1023)-21; k=k+22) {...",shape=box];
	ForLoop979227 -> 1070737;
	ForLoop979227 -> _JOIN_979227;
	1179883 [label="1179883  tmp[i]=scv_737;...",shape=box];
	1179883 -> _JOIN_981089;
	958353 [label="958353  int k;...",shape=box];
	958353 -> ForLoop959115;
	_JOIN_958351 [label="_JOIN_958351None...",shape=box];
	_JOIN_958351 -> 958353;
	1052037 [label="1052037  double scv_379, scv_380, scv_381, scv_382, scv_383, scv_384, scv_385, scv_386;...",shape=box];
	1028237 [label="1028237  double scv_57, scv_58, scv_59, scv_60, scv_61, scv_62, scv_63, scv_64;...",shape=box];
	ForLoop963305 [label="ForLoop963305  for (k=kt; k<=min(ny-1,kkk+1023)-21; k=k+22) {...",shape=box];
	ForLoop963305 -> 1038437;
	ForLoop963305 -> _JOIN_963305;
	ForLoop927807 [label="ForLoop927807  for (j=jj; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop927807 -> 982308;
	ForLoop927807 -> _JOIN_927807;
	_JOIN_979306 [label="_JOIN_979306None...",shape=box];
	_JOIN_979306 -> ForLoop981089;
	970085 [label="970085  int k;...",shape=box];
	970085 -> ForLoop970847;
	_JOIN_968407 [label="_JOIN_968407None...",shape=box];
	_JOIN_968407 -> 968409;
	1036737 [label="1036737  double scv_172, scv_173, scv_174, scv_175, scv_176, scv_177, scv_178, scv_179;...",shape=box];
	ForLoop927809 [label="ForLoop927809  for (jj=jjj; jj<=min(ny-1,jjj+2016); jj=jj+32) {...",shape=box];
	ForLoop927809 -> ForLoop927807;
	ForLoop927809 -> _JOIN_927809;
	ForLoop964217 [label="ForLoop964217  for (k=(min(ny-1,kkk+1023))-(((min(ny-1,kkk+1023))-(kt)+1)%22)+1; k<=min(ny-1,kkk+1023); k=k+1) {...",shape=box];
	ForLoop964217 -> 1040675;
	ForLoop964217 -> _JOIN_964217;
	1038975 [label="1038975  double scv_217;...",shape=box];
	1049175 [label="1049175  double scv_355;...",shape=box];
	960867 [label="960867  int k;...",shape=box];
	960867 -> ForLoop961629;
	ForLoop976713 [label="ForLoop976713  for (k=kt; k<=min(ny-1,kkk+1023)-21; k=k+22) {...",shape=box];
	ForLoop976713 -> 1065637;
	ForLoop976713 -> _JOIN_976713;
	1048637 [label="1048637  double scv_333, scv_334, scv_335, scv_336, scv_337, scv_338, scv_339, scv_340;...",shape=box];
	1046937 [label="1046937  double scv_310, scv_311, scv_312, scv_313, scv_314, scv_315, scv_316, scv_317;...",shape=box];
	1070737 [label="1070737  double scv_632, scv_633, scv_634, scv_635, scv_636, scv_637, scv_638, scv_639;...",shape=box];
	1067337 [label="1067337  double scv_586, scv_587, scv_588, scv_589, scv_590, scv_591, scv_592, scv_593;...",shape=box];
	ForLoop965055 [label="ForLoop965055  for (k=(min(ny-1,kkk+1023))-(((min(ny-1,kkk+1023))-(kt)+1)%22)+1; k<=min(ny-1,kkk+1023); k=k+1) {...",shape=box];
	ForLoop965055 -> 1042375;
	ForLoop965055 -> _JOIN_965055;
	_JOIN_974199 [label="_JOIN_974199None...",shape=box];
	_JOIN_974199 -> ForLoop974273;
	ForLoop981091 [label="ForLoop981091  for (iii=0; iii<=nx-1; iii=iii+2048) {...",shape=box];
	ForLoop981091 -> 926722;
	ForLoop981091 -> _JOIN_981091;
	1063937 [label="1063937  double scv_540, scv_541, scv_542, scv_543, scv_544, scv_545, scv_546, scv_547;...",shape=box];
	ForLoop975111 [label="ForLoop975111  for (k=(min(ny-1,kkk+1023))-(((min(ny-1,kkk+1023))-(kt)+1)%22)+1; k<=min(ny-1,kkk+1023); k=k+1) {...",shape=box];
	ForLoop975111 -> 1062775;
	ForLoop975111 -> _JOIN_975111;
	ForLoop980385 [label="ForLoop980385  for (kt=kkk; kt<=min(ny-1,kkk+1023)-31; kt=kt+32) {...",shape=box];
	ForLoop980385 -> 1173384;
	ForLoop980385 -> _JOIN_980385;
	_JOIN_977625 [label="_JOIN_977625None...",shape=box];
	_JOIN_977625 -> 977627;
	_JOIN_960027 [label="_JOIN_960027None...",shape=box];
	_JOIN_960027 -> 960029;
	_JOIN_964217 [label="_JOIN_964217None...",shape=box];
	_JOIN_964217 -> 964219;
	_JOIN_959115 [label="_JOIN_959115None...",shape=box];
	_JOIN_959115 -> ForLoop959189;
	1027075 [label="1027075  double scv_56;...",shape=box];
	_JOIN_961703 [label="_JOIN_961703None...",shape=boexpected=9369846271501.798828
actual=9369846271501.798828
x];
	_JOIN_961703 -> 961705;
	_JOIN_960791 [label="_JOIN_960791None...",shape=box];
	_JOIN_960791 -> ForLoop960865;
	_JOIN_970921 [label="_JOIN_970921None...",shape=box];
	_JOIN_970921 -> 970923;
	_JOIN_968333 [label="_JOIN_968333None...",shape=box];
	_JOIN_968333 -> ForLoop968407;
	ForLoop957445 [label="ForLoop957445  for (k=kt; k<=min(ny-1,kkk+1023)-21; k=k+22) {...",shape=box];
	ForLoop957445 -> 1026546;
	ForLoop957445 -> _JOIN_957445;
	967571 [label="967571  int k;...",shape=box];
	967571 -> ForLoop968333;
	703459 [label="703459  register int cbv_2, cbv_3;...",shape=box];
	_JOIN_703079 [label="_JOIN_703079None...",shape=box];
	_JOIN_703079 -> 703459;
	_JOIN_961629 [label="_JOIN_961629None...",shape=box];
	_JOIN_961629 -> ForLoop961703;
	1050337 [label="1050337  double scv_356, scv_357, scv_358, scv_359, scv_360, scv_361, scv_362, scv_363;...",shape=box];
	956815 [label="956815  int k;...",shape=box];
	956815 -> ForLoop957445;
	1045775 [label="1045775  double scv_309;...",shape=box];
	979428 [label="979428  scv_737=scv_737+A[i*ny+j]*x[j];...",shape=box];
	979428 -> _JOIN_979429;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest6.exe __orio_perftest6.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest6.exe  
{'[0, 2, 0, 6, 6, 5, 0, 0, 29, 26, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.137434}
{'[0, 2, 0, 6, 6, 5, 0, 0, 29, 26, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.137298}
{'[0, 2, 0, 6, 6, 5, 0, 0, 29, 26, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.137139}
{'[0, 2, 0, 6, 6, 5, 0, 0, 29, 26, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.137595}
{'[0, 2, 0, 6, 6, 5, 0, 0, 29, 26, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.137245}
{'[0, 2, 0, 6, 6, 5, 0, 0, 29, 26, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.138863}
{'[0, 2, 0, 6, 6, 5, 0, 0, 29, 26, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.137146}
{'[0, 2, 0, 6, 6, 5, 0, 0, 29, 26, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.137236}
{'[0, 2, 0, 6, 6, 5, 0, 0, 29, 26, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.137565}
{'[0, 2, 0, 6, 6, 5, 0, 0, 29, 26, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.137161}
{'[0, 2, 0, 6, 6, 5, 0, 0, 29, 26, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.137259}
{'[0, 2, 0, 6, 6, 5, 0, 0, 29, 26, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.137208}
{'[0, 2, 0, 6, 6, 5, 0, 0, 29, 26, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.137101}
{'[0, 2, 0, 6, 6, 5, 0, 0, 29, 26, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.137208}
{'[0, 2, 0, 6, 6, 5, 0, 0, 29, 26, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.137257}
{'[0, 2, 0, 6, 6, 5, 0, 0, 29, 26, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.137264}
{'[0, 2, 0, 6, 6, 5, 0, 0, 29, 26, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.13717}
{'[0, 2, 0, 6, 6, 5, 0, 0, 29, 26, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.13718}
{'[0, 2, 0, 6, 6, 5, 0, 0, 29, 26, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.137575}
{'[0, 2, 0, 6, 6, 5, 0, 0, 29, 26, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.13759}
{'[0, 2, 0, 6, 6, 5, 0, 0, 29, 26, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.137441}
{'[0, 2, 0, 6, 6, 5, 0, 0, 29, 26, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.137205}
{'[0, 2, 0, 6, 6, 5, 0, 0, 29, 26, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.137135}
{'[0, 2, 0, 6, 6, 5, 0, 0, 29, 26, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.137143}
{'[0, 2, 0, 6, 6, 5, 0, 0, 29, 26, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.1374}
{'[0, 2, 0, 6, 6, 5, 0, 0, 29, 26, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.137446}
{'[0, 2, 0, 6, 6, 5, 0, 0, 29, 26, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.137251}
{'[0, 2, 0, 6, 6, 5, 0, 0, 29, 26, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.137427}
{'[0, 2, 0, 6, 6, 5, 0, 0, 29, 26, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.137299}
{'[0, 2, 0, 6, 6, 5, 0, 0, 29, 26, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.13711}

out:
 ["{'[0, 2, 0, 6, 6, 5, 0, 0, 29, 26, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.137434}", "{'[0, 2, 0, 6, 6, 5, 0, 0, 29, 26, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.137298}", "{'[0, 2, 0, 6, 6, 5, 0, 0, 29, 26, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.137139}", "{'[0, 2, 0, 6, 6, 5, 0, 0, 29, 26, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.137595}", "{'[0, 2, 0, 6, 6, 5, 0, 0, 29, 26, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.137245}", "{'[0, 2, 0, 6, 6, 5, 0, 0, 29, 26, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.138863}", "{'[0, 2, 0, 6, 6, 5, 0, 0, 29, 26, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.137146}", "{'[0, 2, 0, 6, 6, 5, 0, 0, 29, 26, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.137236}", "{'[0, 2, 0, 6, 6, 5, 0, 0, 29, 26, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.137565}", "{'[0, 2, 0, 6, 6, 5, 0, 0, 29, 26, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.137161}", "{'[0, 2, 0, 6, 6, 5, 0, 0, 29, 26, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.137259}", "{'[0, 2, 0, 6, 6, 5, 0, 0, 29, 26, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.137208}", "{'[0, 2, 0, 6, 6, 5, 0, 0, 29, 26, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.137101}", "{'[0, 2, 0, 6, 6, 5, 0, 0, 29, 26, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.137208}", "{'[0, 2, 0, 6, 6, 5, 0, 0, 29, 26, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.137257}", "{'[0, 2, 0, 6, 6, 5, 0, 0, 29, 26, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.137264}", "{'[0, 2, 0, 6, 6, 5, 0, 0, 29, 26, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.13717}", "{'[0, 2, 0, 6, 6, 5, 0, 0, 29, 26, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.13718}", "{'[0, 2, 0, 6, 6, 5, 0, 0, 29, 26, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.137575}", "{'[0, 2, 0, 6, 6, 5, 0, 0, 29, 26, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.13759}", "{'[0, 2, 0, 6, 6, 5, 0, 0, 29, 26, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.137441}", "{'[0, 2, 0, 6, 6, 5, 0, 0, 29, 26, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.137205}", "{'[0, 2, 0, 6, 6, 5, 0, 0, 29, 26, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.137135}", "{'[0, 2, 0, 6, 6, 5, 0, 0, 29, 26, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.137143}", "{'[0, 2, 0, 6, 6, 5, 0, 0, 29, 26, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.1374}", "{'[0, 2, 0, 6, 6, 5, 0, 0, 29, 26, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.137446}", "{'[0, 2, 0, 6, 6, 5, 0, 0, 29, 26, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.137251}", "{'[0, 2, 0, 6, 6, 5, 0, 0, 29, 26, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.137427}", "{'[0, 2, 0, 6, 6, 5, 0, 0, 29, 26, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.137299}", "{'[0, 2, 0, 6, 6, 5, 0, 0, 29, 26, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.13711}"]
returning from 'run': {'[0, 2, 0, 6, 6, 5, 0, 0, 29, 26, 0, 21, 0, 0, 2, 1, 1, 0]': ([0.137434, 0.137298, 0.137139, 0.137595, 0.137245, 0.138863, 0.137146, 0.137236, 0.137565, 0.137161, 0.137259, 0.137208, 0.137101, 0.137208, 0.137257, 0.137264, 0.13717, 0.13718, 0.137575, 0.13759, 0.137441, 0.137205, 0.137135, 0.137143, 0.1374, 0.137446, 0.137251, 0.137427, 0.137299, 0.13711], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.137434, 0.137298, 0.137139, 0.137595, 0.137245, 0.138863, 0.137146, 0.137236, 0.137565, 0.137161, 0.137259, 0.137208, 0.137101, 0.137208, 0.137257, 0.137264, 0.13717, 0.13718, 0.137575, 0.13759, 0.137441, 0.137205, 0.137135, 0.137143, 0.1374, 0.137446, 0.137251, 0.137427, 0.137299, 0.13711], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 0, 6, 6, 5, 0, 0, 29, 26, 0, 21, 0, 0, 2, 1, 1, 0]': ([0.137434, 0.137298, 0.137139, 0.137595, 0.137245, 0.138863, 0.137146, 0.137236, 0.137565, 0.137161, 0.137259, 0.137208, 0.137101, 0.137208, 0.137257, 0.137264, 0.13717, 0.13718, 0.137575, 0.13759, 0.137441, 0.137205, 0.137135, 0.137143, 0.1374, 0.137446, 0.137251, 0.137427, 0.137299, 0.13711], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [1, 5, 1, 6, 5, 6, 0, 0, 29, 4, 16, 0, 0, 2, 0, 0, 1, 1]
Fixed Factors: {}
Testing candidate 7: [1, 5, 1, 6, 5, 6, 0, 0, 29, 4, 16, 0, 0, 2, 0, 0, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	30
        Max loop nest depth: 	6
        Additions: 		1975
        Multiplications: 	612
        Divisions: 		0
        Logical: 		0
        Reads: 			3410
        Writes: 		428
        Comparisons:		30
        Gotos: 			0
        
digraph CFG {
	_JOIN_1290105 [label="_JOIN_1290105None...",shape=box];
	_JOIN_1290105 -> _JOIN_1290107;
	_JOIN_1290107 [label="_JOIN_1290107None...",shape=box];
	_JOIN_1290107 -> _JOIN_1290109;
	1289300 [label="1289300  tmp[(i+4)]=tmp[(i+4)]+A[(i+4)*ny+j]*x[j];...",shape=box];
	_JOIN_1290103 [label="_JOIN_1290103None...",shape=box];
	_JOIN_1290103 -> _JOIN_1290105;
	_JOIN_1290109 [label="_JOIN_1290109None...",shape=box];
	_JOIN_1290109 -> ForLoop1291688;
	_JOIN_1287227 [label="_JOIN_1287227None...",shape=box];
	_JOIN_1287227 -> 1287229;
	ForLoop1291542 [label="ForLoop1291542  for (j=jt; j<=cbv_19; j=j+17) {...",shape=box];
	ForLoop1291542 -> 1291140;
	ForLoop1291542 -> _JOIN_1291542;
	_JOIN_1287901 [label="_JOIN_1287901None...",shape=box];
	_JOIN_1287901 -> 1287903;
	ForLoop1291099 [label="ForLoop1291099  for (jt=jj; jt<=cbv_18; jt=jt+32) {...",shape=box];
	ForLoop1291099 -> 1290291;
	ForLoop1291099 -> _JOIN_1291099;
	1287226 [label="1287226  tmp[i]=tmp[i]+A[i*ny+j]*x[j];...",shape=box];
	1287226 -> _JOIN_1287227;
	1287229 [label="1287229  int j;...",shape=box];
	1286757 [label="1286757  tmp[i]=tmp[i]+A[i*ny+j]*x[j];...",shape=box];
	1321670 [label="1321670  register int cbv_18;...",shape=box];
	_JOIN_1289926 [label="_JOIN_1289926None...",shape=box];
	_JOIN_1289926 -> _JOIN_1289928;
	1319898 [label="1319898  register int cbv_12, cbv_13;...",shape=box];
	1287952 [label="1287952  tmp[(i+2)]=tmp[(i+2)]+A[(i+2)*ny+j]*x[j];...",shape=box];
	_JOIN_1289846 [label="_JOIN_1289846None...",shape=box];
	_JOIN_1289846 -> 1320625;
	_JOIN_1291614 [label="_JOIN_1291614None...",shape=box];
	_JOIN_1291614 -> ForLoop1291686;
	_JOIN_1291613 [label="_JOIN_1291613None...",shape=box];
	_JOIN_1291613 -> _JOIN_1291614;
	_JOIN_1291610 [label="_JOIN_1291610None...",shape=box];
	_JOIN_1291610 -> _JOIN_1291613;
	1318444 [label="1318444  register int cbv_6, cbv_7;...",shape=box];
	1289251 [label="1289251  int j;...",shape=box];
	1226245 [label="1226245  register int cbv_2, cbv_3;...",shape=box];
	1290291 [label="1290291  tmp[i]=tmp[i]+A[i*ny+jt]*x[jt];...",shape=box];
	ForLoop1289926 [label="ForLoop1289926  for (jj=jjj; jj<=min(ny-1,jjj+768); jj=jj+256) {...",shape=box];
	ForLoop1289926 -> 1317185;
	ForLoop1289926 -> _JOIN_1289926;
	ForLoop1289923 [label="ForLoop1289923  for (j=cbv_15; j<=cbv_16; j=j+1) ...",shape=box];
	ForLoop1289923 -> 1289922;
	ForLoop1289923 -> _JOIN_1289923;
	ForLoop1289846 [label="ForLoop1289846  for (j=jt; j<=cbv_14; j=j+17) {...",shape=box];
	ForLoop1289846 -> 1289300;
	ForLoop1289846 -> _JOIN_1289846;
	ForLoop1289928 [label="ForLoop1289928  for (jjj=0; jjj<=ny-1; jjj=jjj+1024) {...",shape=box];
	ForLoop1289928 -> ForLoop1289926;
	ForLoop1289928 -> _JOIN_1289928;
	ForLoop1288498 [label="ForLoop1288498  for (j=jt; j<=cbv_8; j=j+17) {...",shape=box];
	ForLoop1288498 -> 1287952;
	ForLoop1288498 -> _JOIN_1288498;
	ForLoop1291688 [label="ForLoop1291688  for (i=(min(nx-1,ii+15))-(((min(nx-1,ii+15))-(ii)+1)%5)+1; i<=min(nx-1,ii+15); i=i+1) {...",shape=box];
	ForLoop1291688 -> 1290220;
	ForLoop1291688 -> _JOIN_1291688;
	_JOIN_1225865 [label="_JOIN_1225865None...",shape=box];
	_JOIN_1225865 -> 1226245;
	ForLoop1291684 [label="ForLoop1291684  for (k=kk; k<=cbv_22; k=k+1) ...",shape=box];
	ForLoop1291684 -> 1291683;
	ForLoop1291684 -> _JOIN_1291684;
	1281500 [label="1281500  tmp[i]=0;...",shape=box];
	ForLoop1291686 [label="ForLoop1291686  for (kkk=0; kkk<=ny-1; kkk=kkk+2048) ...",shape=box];
	ForLoop1291686 -> ForLoop1291685;
	ForLoop1291686 -> _JOIN_1291686;
	ForLoop1229650 [label="ForLoop1229650  for (iii=0; iii<=nx-1; iii=iii+2048) ...",shape=box];
	ForLoop1229650 -> ForLoop1229649;
	ForLoop1229650 -> _JOIN_1229650;
	1234371 [label="1234371  double x_copy;...",shape=box];
	_JOIN_1291688 [label="_JOIN_1291688None...",shape=box];
	_JOIN_1291688 -> _JOIN_1229649;
	_JOIN_1291684 [label="_JOIN_1291684None...",shape=box];
	_JOIN_1291684 -> _JOIN_1291685;
	_JOIN_1291685 [label="_JOIN_1291685None...",shape=box];
	_JOIN_1291685 -> _JOIN_1291686;
	_JOIN_1291686 [label="_JOIN_1291686None...",shape=box];
	_JOIN_1291686 -> _JOIN_1291688;
	1291100 [label="1291100  int j;...",shape=box];
	1288626 [label="1288626  tmp[(i+3)]=tmp[(i+3)]+A[(i+3)*ny+j]*x[j];...",shape=box];
	_JOIN_1287824 [label="_JOIN_1287824None...",shape=box];
	_JOIN_1287824 -> 1318444;
	ForLoop1229649 [label="ForLoop1229649  for (ii=iii; ii<=min(nx-1,iii+2032); ii=ii+16) {...",shape=box];
	ForLoop1229649 -> 1262909;
	ForLoop1229649 -> _JOIN_1229649;
	1317185 [label="1317185  register int cbv_1;...",shape=box];
	_JOIN_1286716 [label="_JOIN_1286716None...",shape=box];
	_JOIN_1286716 -> 1286717;
	_JOIN_1291542 [label="_JOIN_1291542None...",shape=box];
	_JOIN_1291542 -> 1322202;
	ForLoop1286716 [label="ForLoop1286716  for (jt=jj; jt<=cbv_1; jt=jt+32) {...",shape=box];
	ForLoop1286716 -> 1281607;
	ForLoop1286716 -> _JOIN_1286716;
	ForLoop1290105 [label="ForLoop1290105  for (kk=kkk; kk<=min(ny-1,kkk+2032); kk=kk+16) {...",shape=box];
	ForLoop1290105 -> 1320813;
	ForLoop1290105 -> _JOIN_1290105;
	ForLoop1290107 [label="ForLoop1290107  for (kkk=0; kkk<=ny-1; kkk=kkk+2048) {...",shape=box];
	ForLoop1290107 -> ForLoop1290105;
	ForLoop1290107 -> _JOIN_1290107;
	_JOIN_1291099 [label="_JOIN_1291099None...",shape=box];
	_JOIN_1291099 -> 1291100;
	ForLoop1290103 [label="ForLoop1290103  for (k=kk; k<=cbv_17; k=k+1) {...",shape=box];
	ForLoop1290103 -> 1289997;
	ForLoop1290103 -> _JOIN_1290103;
	ForLoop1290109 [label="ForLoop1290109  for (i=ii; i<=min(nx-1,ii+15)-4; i=i+5) {...",shape=box];
	ForLoop1290109 -> 1281500;
	ForLoop1290109 -> _JOIN_1290109;
	ForLoop1287159 [label="ForLoop1287159  for (j=jt; j<=cbv_2; j=j+17) {...",shape=box];
	ForLoop1287159 -> 1286757;
	ForLoop1287159 -> _JOIN_1287159;
	1289248 [label="1289248  tmp[(i+3)]=tmp[(i+3)]+A[(i+3)*ny+j]*x[j];...",shape=box];
	1289248 -> _JOIN_1289249;
	_JOIN_1289249 [label="_JOIN_1289249None...",shape=box];
	_JOIN_1289249 -> 1289251;
	1286717 [label="1286717  int j;...",shape=box];
	_JOIN_1288498 [label="_JOIN_1288498None...",shape=box];
	_JOIN_1288498 -> 1319171;
	1319171 [label="1319171  register int cbv_9, cbv_10;...",shape=box];
	1320813 [label="1320813  register int cbv_17;...",shape=box];
	ForLoop1225865 [label="ForLoop1225865  for (i=0; i<=cbv_1; i=i+30) {...",shape=box];
	ForLoop1225865 -> 1225602;
	ForLoop1225865 -> _JOIN_1225865;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 1225110;
	ForLoop1287824 [label="ForLoop1287824  for (j=jt; j<=cbv_5; j=j+17) {...",shape=box];
	ForLoop1287824 -> 1287278;
	ForLoop1287824 -> _JOIN_1287824;
	1289922 [label="1289922  tmp[(i+4)]=tmp[(i+4)]+A[(i+4)*ny+j]*x[j];...",shape=box];
	1289922 -> _JOIN_1289923;
	1322202 [label="1322202  register int cbv_20, cbv_21;...",shape=box];
	1322285 [label="1322285  register int cbv_22;...",shape=box];
	ForLoop1291614 [label="ForLoop1291614  for (jjj=0; jjj<=ny-1; jjj=jjj+1024) ...",shape=box];
	ForLoop1291614 -> ForLoop1291613;
	ForLoop1291614 -> _JOIN_1291614;
	ForLoop1291613 [label="ForLoop1291613  for (jj=jjj; jj<=min(ny-1,jjj+768); jj=jj+256) {...",shape=box];
	ForLoop1291613 -> 1321670;
	ForLoop1291613 -> _JOIN_1291613;
	ForLoop1291610 [label="ForLoop1291610  for (j=cbv_20; j<=cbv_21; j=j+1) ...",shape=box];
	ForLoop1291610 -> 1291609;
	ForLoop1291610 -> _JOIN_1291610;
	1262909 [label="1262909  int i;...",shape=box];
	1262909 -> ForLoop1290109;
	ForLoop1289172 [label="ForLoop1289172  for (j=jt; j<=cbv_11; j=j+17) {...",shape=box];
	ForLoop1289172 -> 1288626;
	ForLoop1289172 -> _JOIN_1289172;
	1290220 [label="1290220  tmp[i]=0;...",shape=box];
	1290220 -> ForLoop1291614;
	1291609 [label="1291609  tmp[i]=tmp[i]+A[i*ny+j]*x[j];...",shape=box];
	1291609 -> _JOIN_1291610;
	_JOIN_1289928 [label="_JOIN_1289928None...",shape=box];
	_JOIN_1289928 -> ForLoop1290107;
	1287278 [label="1287278  tmp[(i+1)]=tmp[(i+1)]+A[(i+1)*ny+j]*x[j];...",shape=box];
	_JOIN_1289923 [label="_JOIN_1289923None...",shape=box];
	_JOIN_1289923 -> _JOIN_1289926;
	1289997 [label="1289997  y[k]=y[k]+A[i*ny+k]*tmp[i];...",shape=box];
	1225933 [label="1225933  y[i]=0.0;...",shape=box];
	1225933 -> _JOIN_1225934;
	ForLoop1288575 [label="ForLoop1288575  for (j=cbv_9; j<=cbv_10; j=j+1) ...",shape=box];
	ForLoop1288575 -> 1288574;
	ForLoop1288575 -> _JOIN_1288575;
	ForLoop1289249 [label="ForLoop1289249  for (j=cbv_12; j<=cbv_13; j=j+1) ...",shape=box];
	ForLoop1289249 -> 1289248;
	ForLoop1289249 -> _JOIN_1289249;
	1287900 [label="1287900  tmp[(i+1)]=tmp[(i+1)]+A[(i+1)*ny+j]*x[j];...",shape=box];
	1287900 -> _JOIN_1287901;
	1287903 [label="1287903  int j;...",shape=box];
	_JOIN_1288575 [label="_JOIN_1288575None...",shape=box];
	_JOIN_1288expected=9369846271501.798828
actual=9369846271501.798828
575 -> 1288577;
	_JOIN_1229650 [label="_JOIN_1229650None...",shape=box];
	1225602 [label="1225602  y[i]=0.0;...",shape=box];
	ForLoop1291685 [label="ForLoop1291685  for (kk=kkk; kk<=min(ny-1,kkk+2032); kk=kk+16) {...",shape=box];
	ForLoop1291685 -> 1322285;
	ForLoop1291685 -> _JOIN_1291685;
	1317717 [label="1317717  register int cbv_3, cbv_4;...",shape=box];
	_JOIN_1229649 [label="_JOIN_1229649None...",shape=box];
	_JOIN_1229649 -> _JOIN_1229650;
	1291683 [label="1291683  y[k]=y[k]+A[i*ny+k]*tmp[i];...",shape=box];
	1291683 -> _JOIN_1291684;
	_JOIN_1289172 [label="_JOIN_1289172None...",shape=box];
	_JOIN_1289172 -> 1319898;
	1291140 [label="1291140  tmp[i]=tmp[i]+A[i*ny+j]*x[j];...",shape=box];
	ForLoop1287227 [label="ForLoop1287227  for (j=cbv_3; j<=cbv_4; j=j+1) ...",shape=box];
	ForLoop1287227 -> 1287226;
	ForLoop1287227 -> _JOIN_1287227;
	_JOIN_1225934 [label="_JOIN_1225934None...",shape=box];
	_JOIN_1225934 -> 1234371;
	ForLoop1287901 [label="ForLoop1287901  for (j=cbv_6; j<=cbv_7; j=j+1) ...",shape=box];
	ForLoop1287901 -> 1287900;
	ForLoop1287901 -> _JOIN_1287901;
	ForLoop1225934 [label="ForLoop1225934  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop1225934 -> 1225933;
	ForLoop1225934 -> _JOIN_1225934;
	_JOIN_1287159 [label="_JOIN_1287159None...",shape=box];
	_JOIN_1287159 -> 1317717;
	1288574 [label="1288574  tmp[(i+2)]=tmp[(i+2)]+A[(i+2)*ny+j]*x[j];...",shape=box];
	1288574 -> _JOIN_1288575;
	1281607 [label="1281607  tmp[i]=tmp[i]+A[i*ny+jt]*x[jt];...",shape=box];
	1288577 [label="1288577  int j;...",shape=box];
	1320625 [label="1320625  register int cbv_15, cbv_16;...",shape=box];
	1225110 [label="1225110  int i;...",shape=box];

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest7.exe __orio_perftest7.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest7.exe  
{'[1, 5, 1, 6, 5, 6, 0, 0, 29, 4, 16, 0, 0, 2, 0, 0, 1, 1]' : 0.106323}
{'[1, 5, 1, 6, 5, 6, 0, 0, 29, 4, 16, 0, 0, 2, 0, 0, 1, 1]' : 0.098551}
{'[1, 5, 1, 6, 5, 6, 0, 0, 29, 4, 16, 0, 0, 2, 0, 0, 1, 1]' : 0.0986068}
{'[1, 5, 1, 6, 5, 6, 0, 0, 29, 4, 16, 0, 0, 2, 0, 0, 1, 1]' : 0.0985479}
{'[1, 5, 1, 6, 5, 6, 0, 0, 29, 4, 16, 0, 0, 2, 0, 0, 1, 1]' : 0.0987999}
{'[1, 5, 1, 6, 5, 6, 0, 0, 29, 4, 16, 0, 0, 2, 0, 0, 1, 1]' : 0.098933}
{'[1, 5, 1, 6, 5, 6, 0, 0, 29, 4, 16, 0, 0, 2, 0, 0, 1, 1]' : 0.098752}
{'[1, 5, 1, 6, 5, 6, 0, 0, 29, 4, 16, 0, 0, 2, 0, 0, 1, 1]' : 0.098546}
{'[1, 5, 1, 6, 5, 6, 0, 0, 29, 4, 16, 0, 0, 2, 0, 0, 1, 1]' : 0.0987639}
{'[1, 5, 1, 6, 5, 6, 0, 0, 29, 4, 16, 0, 0, 2, 0, 0, 1, 1]' : 0.0985501}
{'[1, 5, 1, 6, 5, 6, 0, 0, 29, 4, 16, 0, 0, 2, 0, 0, 1, 1]' : 0.0986862}
{'[1, 5, 1, 6, 5, 6, 0, 0, 29, 4, 16, 0, 0, 2, 0, 0, 1, 1]' : 0.0987501}
{'[1, 5, 1, 6, 5, 6, 0, 0, 29, 4, 16, 0, 0, 2, 0, 0, 1, 1]' : 0.098573}
{'[1, 5, 1, 6, 5, 6, 0, 0, 29, 4, 16, 0, 0, 2, 0, 0, 1, 1]' : 0.0986269}
{'[1, 5, 1, 6, 5, 6, 0, 0, 29, 4, 16, 0, 0, 2, 0, 0, 1, 1]' : 0.098635}
{'[1, 5, 1, 6, 5, 6, 0, 0, 29, 4, 16, 0, 0, 2, 0, 0, 1, 1]' : 0.0987351}
{'[1, 5, 1, 6, 5, 6, 0, 0, 29, 4, 16, 0, 0, 2, 0, 0, 1, 1]' : 0.0986009}
{'[1, 5, 1, 6, 5, 6, 0, 0, 29, 4, 16, 0, 0, 2, 0, 0, 1, 1]' : 0.0986521}
{'[1, 5, 1, 6, 5, 6, 0, 0, 29, 4, 16, 0, 0, 2, 0, 0, 1, 1]' : 0.0985911}
{'[1, 5, 1, 6, 5, 6, 0, 0, 29, 4, 16, 0, 0, 2, 0, 0, 1, 1]' : 0.098604}
{'[1, 5, 1, 6, 5, 6, 0, 0, 29, 4, 16, 0, 0, 2, 0, 0, 1, 1]' : 0.098969}
{'[1, 5, 1, 6, 5, 6, 0, 0, 29, 4, 16, 0, 0, 2, 0, 0, 1, 1]' : 0.0986469}
{'[1, 5, 1, 6, 5, 6, 0, 0, 29, 4, 16, 0, 0, 2, 0, 0, 1, 1]' : 0.0985639}
{'[1, 5, 1, 6, 5, 6, 0, 0, 29, 4, 16, 0, 0, 2, 0, 0, 1, 1]' : 0.098635}
{'[1, 5, 1, 6, 5, 6, 0, 0, 29, 4, 16, 0, 0, 2, 0, 0, 1, 1]' : 0.0985458}
{'[1, 5, 1, 6, 5, 6, 0, 0, 29, 4, 16, 0, 0, 2, 0, 0, 1, 1]' : 0.098784}
{'[1, 5, 1, 6, 5, 6, 0, 0, 29, 4, 16, 0, 0, 2, 0, 0, 1, 1]' : 0.098592}
{'[1, 5, 1, 6, 5, 6, 0, 0, 29, 4, 16, 0, 0, 2, 0, 0, 1, 1]' : 0.098609}
{'[1, 5, 1, 6, 5, 6, 0, 0, 29, 4, 16, 0, 0, 2, 0, 0, 1, 1]' : 0.098614}
{'[1, 5, 1, 6, 5, 6, 0, 0, 29, 4, 16, 0, 0, 2, 0, 0, 1, 1]' : 0.098752}

out:
 ["{'[1, 5, 1, 6, 5, 6, 0, 0, 29, 4, 16, 0, 0, 2, 0, 0, 1, 1]' : 0.106323}", "{'[1, 5, 1, 6, 5, 6, 0, 0, 29, 4, 16, 0, 0, 2, 0, 0, 1, 1]' : 0.098551}", "{'[1, 5, 1, 6, 5, 6, 0, 0, 29, 4, 16, 0, 0, 2, 0, 0, 1, 1]' : 0.0986068}", "{'[1, 5, 1, 6, 5, 6, 0, 0, 29, 4, 16, 0, 0, 2, 0, 0, 1, 1]' : 0.0985479}", "{'[1, 5, 1, 6, 5, 6, 0, 0, 29, 4, 16, 0, 0, 2, 0, 0, 1, 1]' : 0.0987999}", "{'[1, 5, 1, 6, 5, 6, 0, 0, 29, 4, 16, 0, 0, 2, 0, 0, 1, 1]' : 0.098933}", "{'[1, 5, 1, 6, 5, 6, 0, 0, 29, 4, 16, 0, 0, 2, 0, 0, 1, 1]' : 0.098752}", "{'[1, 5, 1, 6, 5, 6, 0, 0, 29, 4, 16, 0, 0, 2, 0, 0, 1, 1]' : 0.098546}", "{'[1, 5, 1, 6, 5, 6, 0, 0, 29, 4, 16, 0, 0, 2, 0, 0, 1, 1]' : 0.0987639}", "{'[1, 5, 1, 6, 5, 6, 0, 0, 29, 4, 16, 0, 0, 2, 0, 0, 1, 1]' : 0.0985501}", "{'[1, 5, 1, 6, 5, 6, 0, 0, 29, 4, 16, 0, 0, 2, 0, 0, 1, 1]' : 0.0986862}", "{'[1, 5, 1, 6, 5, 6, 0, 0, 29, 4, 16, 0, 0, 2, 0, 0, 1, 1]' : 0.0987501}", "{'[1, 5, 1, 6, 5, 6, 0, 0, 29, 4, 16, 0, 0, 2, 0, 0, 1, 1]' : 0.098573}", "{'[1, 5, 1, 6, 5, 6, 0, 0, 29, 4, 16, 0, 0, 2, 0, 0, 1, 1]' : 0.0986269}", "{'[1, 5, 1, 6, 5, 6, 0, 0, 29, 4, 16, 0, 0, 2, 0, 0, 1, 1]' : 0.098635}", "{'[1, 5, 1, 6, 5, 6, 0, 0, 29, 4, 16, 0, 0, 2, 0, 0, 1, 1]' : 0.0987351}", "{'[1, 5, 1, 6, 5, 6, 0, 0, 29, 4, 16, 0, 0, 2, 0, 0, 1, 1]' : 0.0986009}", "{'[1, 5, 1, 6, 5, 6, 0, 0, 29, 4, 16, 0, 0, 2, 0, 0, 1, 1]' : 0.0986521}", "{'[1, 5, 1, 6, 5, 6, 0, 0, 29, 4, 16, 0, 0, 2, 0, 0, 1, 1]' : 0.0985911}", "{'[1, 5, 1, 6, 5, 6, 0, 0, 29, 4, 16, 0, 0, 2, 0, 0, 1, 1]' : 0.098604}", "{'[1, 5, 1, 6, 5, 6, 0, 0, 29, 4, 16, 0, 0, 2, 0, 0, 1, 1]' : 0.098969}", "{'[1, 5, 1, 6, 5, 6, 0, 0, 29, 4, 16, 0, 0, 2, 0, 0, 1, 1]' : 0.0986469}", "{'[1, 5, 1, 6, 5, 6, 0, 0, 29, 4, 16, 0, 0, 2, 0, 0, 1, 1]' : 0.0985639}", "{'[1, 5, 1, 6, 5, 6, 0, 0, 29, 4, 16, 0, 0, 2, 0, 0, 1, 1]' : 0.098635}", "{'[1, 5, 1, 6, 5, 6, 0, 0, 29, 4, 16, 0, 0, 2, 0, 0, 1, 1]' : 0.0985458}", "{'[1, 5, 1, 6, 5, 6, 0, 0, 29, 4, 16, 0, 0, 2, 0, 0, 1, 1]' : 0.098784}", "{'[1, 5, 1, 6, 5, 6, 0, 0, 29, 4, 16, 0, 0, 2, 0, 0, 1, 1]' : 0.098592}", "{'[1, 5, 1, 6, 5, 6, 0, 0, 29, 4, 16, 0, 0, 2, 0, 0, 1, 1]' : 0.098609}", "{'[1, 5, 1, 6, 5, 6, 0, 0, 29, 4, 16, 0, 0, 2, 0, 0, 1, 1]' : 0.098614}", "{'[1, 5, 1, 6, 5, 6, 0, 0, 29, 4, 16, 0, 0, 2, 0, 0, 1, 1]' : 0.098752}"]
returning from 'run': {'[1, 5, 1, 6, 5, 6, 0, 0, 29, 4, 16, 0, 0, 2, 0, 0, 1, 1]': ([0.106323, 0.098551, 0.0986068, 0.0985479, 0.0987999, 0.098933, 0.098752, 0.098546, 0.0987639, 0.0985501, 0.0986862, 0.0987501, 0.098573, 0.0986269, 0.098635, 0.0987351, 0.0986009, 0.0986521, 0.0985911, 0.098604, 0.098969, 0.0986469, 0.0985639, 0.098635, 0.0985458, 0.098784, 0.098592, 0.098609, 0.098614, 0.098752], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.106323, 0.098551, 0.0986068, 0.0985479, 0.0987999, 0.098933, 0.098752, 0.098546, 0.0987639, 0.0985501, 0.0986862, 0.0987501, 0.098573, 0.0986269, 0.098635, 0.0987351, 0.0986009, 0.0986521, 0.0985911, 0.098604, 0.098969, 0.0986469, 0.0985639, 0.098635, 0.0985458, 0.098784, 0.098592, 0.098609, 0.098614, 0.098752], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[1, 5, 1, 6, 5, 6, 0, 0, 29, 4, 16, 0, 0, 2, 0, 0, 1, 1]': ([0.106323, 0.098551, 0.0986068, 0.0985479, 0.0987999, 0.098933, 0.098752, 0.098546, 0.0987639, 0.0985501, 0.0986862, 0.0987501, 0.098573, 0.0986269, 0.098635, 0.0987351, 0.0986009, 0.0986521, 0.0985911, 0.098604, 0.098969, 0.0986469, 0.0985639, 0.098635, 0.0985458, 0.098784, 0.098592, 0.098609, 0.098614, 0.098752], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [2, 0, 0, 2, 3, 6, 1, 1, 2, 0, 0, 12, 0, 0, 2, 0, 1, 0]
Fixed Factors: {}
Testing candidate 8: [2, 0, 0, 2, 3, 6, 1, 1, 2, 0, 0, 12, 0, 0, 2, 0, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additioexpected=9339882853735.613281
actual=9369846271501.798828
ns: 		264
        Multiplications: 	66
        Divisions: 		0
        Logical: 		0
        Reads: 			502
        Writes: 		68
        Comparisons:		12
        Gotos: 			0
        
digraph CFG {
	1322582 [label="1322582  int i;...",shape=box];
	_JOIN_1332588 [label="_JOIN_1332588None...",shape=box];
	_JOIN_1332588 -> 1328656;
	ForLoop1322689 [label="ForLoop1322689  for (i=0; i<=cbv_1; i=i+3) {...",shape=box];
	ForLoop1322689 -> 1322669;
	ForLoop1322689 -> _JOIN_1322689;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 1322582;
	1330236 [label="1330236  double x_copy[256];...",shape=box];
	ForLoop1326985 [label="ForLoop1326985  for (kkk=0; kkk<=ny-1; kkk=kkk+2048) {...",shape=box];
	ForLoop1326985 -> 1328614;
	ForLoop1326985 -> _JOIN_1326985;
	_JOIN_1325355 [label="_JOIN_1325355None...",shape=box];
	_JOIN_1322758 [label="_JOIN_1322758None...",shape=box];
	_JOIN_1322758 -> 1330236;
	ForLoop1325882 [label="ForLoop1325882  for (jjj=0; jjj<=ny-1; jjj=jjj+256) {...",shape=box];
	ForLoop1325882 -> 1330288;
	ForLoop1325882 -> _JOIN_1325882;
	1325880 [label="1325880  tmp[i]=tmp[i]+A[i*ny+j]*x_copy[(j-jjj)];...",shape=box];
	1325880 -> _JOIN_1325881;
	ForLoop1325881 [label="ForLoop1325881  for (j=jjj; j<=min(ny-1,jjj+255); j=j+1) ...",shape=box];
	ForLoop1325881 -> 1325880;
	ForLoop1325881 -> _JOIN_1325881;
	_JOIN_1325353 [label="_JOIN_1325353None...",shape=box];
	_JOIN_1325353 -> _JOIN_1325354;
	_JOIN_1325354 [label="_JOIN_1325354None...",shape=box];
	_JOIN_1325354 -> _JOIN_1325355;
	_JOIN_1326985 [label="_JOIN_1326985None...",shape=box];
	_JOIN_1326985 -> _JOIN_1325353;
	1330288 [label="1330288  for (j=jjj; j<=min(ny-1,jjj+255); j=j+1) ...",shape=box];
	1330288 -> ForLoop1325881;
	1328656 [label="1328656  for (k=kkk; k<=min(ny-1,kkk+2047); k=k+1) ...",shape=box];
	1328656 -> _JOIN_1326985;
	ForLoop1322758 [label="ForLoop1322758  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop1322758 -> 1322757;
	ForLoop1322758 -> _JOIN_1322758;
	1322669 [label="1322669  y[i]=0.0;...",shape=box];
	ForLoop1332588 [label="ForLoop1332588  for (kt=kkk; kt<=min(ny-1,kkk+2047)-31; kt=kt+32) {...",shape=box];
	ForLoop1332588 -> 1332664;
	ForLoop1332588 -> _JOIN_1332588;
	1328614 [label="1328614  for (k=kkk; k<=min(ny-1,kkk+2047); k=k+1) ...",shape=box];
	1328614 -> ForLoop1332588;
	_JOIN_1322689 [label="_JOIN_1322689None...",shape=box];
	_JOIN_1322689 -> 1322826;
	1322826 [label="1322826  register int cbv_2, cbv_3;...",shape=box];
	_JOIN_1325882 [label="_JOIN_1325882None...",shape=box];
	_JOIN_1325882 -> ForLoop1326985;
	1332664 [label="1332664  y_copy[(kt-kkk)]=y_copy[(kt-kkk)]+A[i*ny+kt]*tmp[i];...",shape=box];
	1325283 [label="1325283  tmp[i]=0;...",shape=box];
	1325283 -> ForLoop1325882;
	ForLoop1325353 [label="ForLoop1325353  for (i=ii; i<=min(nx-1,ii+31); i=i+1) {...",shape=box];
	ForLoop1325353 -> 1325283;
	ForLoop1325353 -> _JOIN_1325353;
	ForLoop1325354 [label="ForLoop1325354  for (ii=iii; ii<=min(nx-1,iii+96); ii=ii+32) ...",shape=box];
	ForLoop1325354 -> ForLoop1325353;
	ForLoop1325354 -> _JOIN_1325354;
	ForLoop1325355 [label="ForLoop1325355  for (iii=0; iii<=nx-1; iii=iii+128) ...",shape=box];
	ForLoop1325355 -> ForLoop1325354;
	ForLoop1325355 -> _JOIN_1325355;
	1322757 [label="1322757  y[i]=0.0;...",shape=box];
	1322757 -> _JOIN_1322758;
	_JOIN_1325881 [label="_JOIN_1325881None...",shape=box];
	_JOIN_1325881 -> _JOIN_1325882;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest8.exe __orio_perftest8.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest8.exe  
{'[2, 0, 0, 2, 3, 6, 1, 1, 2, 0, 0, 12, 0, 0, 2, 0, 1, 0]' : 0.204497}
{'[2, 0, 0, 2, 3, 6, 1, 1, 2, 0, 0, 12, 0, 0, 2, 0, 1, 0]' : 0.204578}
{'[2, 0, 0, 2, 3, 6, 1, 1, 2, 0, 0, 12, 0, 0, 2, 0, 1, 0]' : 0.20447}
{'[2, 0, 0, 2, 3, 6, 1, 1, 2, 0, 0, 12, 0, 0, 2, 0, 1, 0]' : 0.20472}
{'[2, 0, 0, 2, 3, 6, 1, 1, 2, 0, 0, 12, 0, 0, 2, 0, 1, 0]' : 0.204674}
{'[2, 0, 0, 2, 3, 6, 1, 1, 2, 0, 0, 12, 0, 0, 2, 0, 1, 0]' : 0.204578}
{'[2, 0, 0, 2, 3, 6, 1, 1, 2, 0, 0, 12, 0, 0, 2, 0, 1, 0]' : 0.204464}
{'[2, 0, 0, 2, 3, 6, 1, 1, 2, 0, 0, 12, 0, 0, 2, 0, 1, 0]' : 0.204492}
{'[2, 0, 0, 2, 3, 6, 1, 1, 2, 0, 0, 12, 0, 0, 2, 0, 1, 0]' : 0.20458}
{'[2, 0, 0, 2, 3, 6, 1, 1, 2, 0, 0, 12, 0, 0, 2, 0, 1, 0]' : 0.204477}
{'[2, 0, 0, 2, 3, 6, 1, 1, 2, 0, 0, 12, 0, 0, 2, 0, 1, 0]' : 0.204483}
{'[2, 0, 0, 2, 3, 6, 1, 1, 2, 0, 0, 12, 0, 0, 2, 0, 1, 0]' : 0.204403}
{'[2, 0, 0, 2, 3, 6, 1, 1, 2, 0, 0, 12, 0, 0, 2, 0, 1, 0]' : 0.20474}
{'[2, 0, 0, 2, 3, 6, 1, 1, 2, 0, 0, 12, 0, 0, 2, 0, 1, 0]' : 0.204618}
{'[2, 0, 0, 2, 3, 6, 1, 1, 2, 0, 0, 12, 0, 0, 2, 0, 1, 0]' : 0.204953}
{'[2, 0, 0, 2, 3, 6, 1, 1, 2, 0, 0, 12, 0, 0, 2, 0, 1, 0]' : 0.204597}
{'[2, 0, 0, 2, 3, 6, 1, 1, 2, 0, 0, 12, 0, 0, 2, 0, 1, 0]' : 0.20437}
{'[2, 0, 0, 2, 3, 6, 1, 1, 2, 0, 0, 12, 0, 0, 2, 0, 1, 0]' : 0.204479}
{'[2, 0, 0, 2, 3, 6, 1, 1, 2, 0, 0, 12, 0, 0, 2, 0, 1, 0]' : 0.204755}
{'[2, 0, 0, 2, 3, 6, 1, 1, 2, 0, 0, 12, 0, 0, 2, 0, 1, 0]' : 0.204835}
{'[2, 0, 0, 2, 3, 6, 1, 1, 2, 0, 0, 12, 0, 0, 2, 0, 1, 0]' : 0.204414}
{'[2, 0, 0, 2, 3, 6, 1, 1, 2, 0, 0, 12, 0, 0, 2, 0, 1, 0]' : 0.204427}
{'[2, 0, 0, 2, 3, 6, 1, 1, 2, 0, 0, 12, 0, 0, 2, 0, 1, 0]' : 0.204505}
{'[2, 0, 0, 2, 3, 6, 1, 1, 2, 0, 0, 12, 0, 0, 2, 0, 1, 0]' : 0.204546}
{'[2, 0, 0, 2, 3, 6, 1, 1, 2, 0, 0, 12, 0, 0, 2, 0, 1, 0]' : 0.204628}
{'[2, 0, 0, 2, 3, 6, 1, 1, 2, 0, 0, 12, 0, 0, 2, 0, 1, 0]' : 0.204476}
{'[2, 0, 0, 2, 3, 6, 1, 1, 2, 0, 0, 12, 0, 0, 2, 0, 1, 0]' : 0.204518}
{'[2, 0, 0, 2, 3, 6, 1, 1, 2, 0, 0, 12, 0, 0, 2, 0, 1, 0]' : 0.204366}
{'[2, 0, 0, 2, 3, 6, 1, 1, 2, 0, 0, 12, 0, 0, 2, 0, 1, 0]' : 0.204469}
{'[2, 0, 0, 2, 3, 6, 1, 1, 2, 0, 0, 12, 0, 0, 2, 0, 1, 0]' : 0.204692}

out:
 ["{'[2, 0, 0, 2, 3, 6, 1, 1, 2, 0, 0, 12, 0, 0, 2, 0, 1, 0]' : 0.204497}", "{'[2, 0, 0, 2, 3, 6, 1, 1, 2, 0, 0, 12, 0, 0, 2, 0, 1, 0]' : 0.204578}", "{'[2, 0, 0, 2, 3, 6, 1, 1, 2, 0, 0, 12, 0, 0, 2, 0, 1, 0]' : 0.20447}", "{'[2, 0, 0, 2, 3, 6, 1, 1, 2, 0, 0, 12, 0, 0, 2, 0, 1, 0]' : 0.20472}", "{'[2, 0, 0, 2, 3, 6, 1, 1, 2, 0, 0, 12, 0, 0, 2, 0, 1, 0]' : 0.204674}", "{'[2, 0, 0, 2, 3, 6, 1, 1, 2, 0, 0, 12, 0, 0, 2, 0, 1, 0]' : 0.204578}", "{'[2, 0, 0, 2, 3, 6, 1, 1, 2, 0, 0, 12, 0, 0, 2, 0, 1, 0]' : 0.204464}", "{'[2, 0, 0, 2, 3, 6, 1, 1, 2, 0, 0, 12, 0, 0, 2, 0, 1, 0]' : 0.204492}", "{'[2, 0, 0, 2, 3, 6, 1, 1, 2, 0, 0, 12, 0, 0, 2, 0, 1, 0]' : 0.20458}", "{'[2, 0, 0, 2, 3, 6, 1, 1, 2, 0, 0, 12, 0, 0, 2, 0, 1, 0]' : 0.204477}", "{'[2, 0, 0, 2, 3, 6, 1, 1, 2, 0, 0, 12, 0, 0, 2, 0, 1, 0]' : 0.204483}", "{'[2, 0, 0, 2, 3, 6, 1, 1, 2, 0, 0, 12, 0, 0, 2, 0, 1, 0]' : 0.204403}", "{'[2, 0, 0, 2, 3, 6, 1, 1, 2, 0, 0, 12, 0, 0, 2, 0, 1, 0]' : 0.20474}", "{'[2, 0, 0, 2, 3, 6, 1, 1, 2, 0, 0, 12, 0, 0, 2, 0, 1, 0]' : 0.204618}", "{'[2, 0, 0, 2, 3, 6, 1, 1, 2, 0, 0, 12, 0, 0, 2, 0, 1, 0]' : 0.204953}", "{'[2, 0, 0, 2, 3, 6, 1, 1, 2, 0, 0, 12, 0, 0, 2, 0, 1, 0]' : 0.204597}", "{'[2, 0, 0, 2, 3, 6, 1, 1, 2, 0, 0, 12, 0, 0, 2, 0, 1, 0]' : 0.20437}", "{'[2, 0, 0, 2, 3, 6, 1, 1, 2, 0, 0, 12, 0, 0, 2, 0, 1, 0]' : 0.204479}", "{'[2, 0, 0, 2, 3, 6, 1, 1, 2, 0, 0, 12, 0, 0, 2, 0, 1, 0]' : 0.204755}", "{'[2, 0, 0, 2, 3, 6, 1, 1, 2, 0, 0, 12, 0, 0, 2, 0, 1, 0]' : 0.204835}", "{'[2, 0, 0, 2, 3, 6, 1, 1, 2, 0, 0, 12, 0, 0, 2, 0, 1, 0]' : 0.204414}", "{'[2, 0, 0, 2, 3, 6, 1, 1, 2, 0, 0, 12, 0, 0, 2, 0, 1, 0]' : 0.204427}", "{'[2, 0, 0, 2, 3, 6, 1, 1, 2, 0, 0, 12, 0, 0, 2, 0, 1, 0]' : 0.204505}", "{'[2, 0, 0, 2, 3, 6, 1, 1, 2, 0, 0, 12, 0, 0, 2, 0, 1, 0]' : 0.204546}", "{'[2, 0, 0, 2, 3, 6, 1, 1, 2, 0, 0, 12, 0, 0, 2, 0, 1, 0]' : 0.204628}", "{'[2, 0, 0, 2, 3, 6, 1, 1, 2, 0, 0, 12, 0, 0, 2, 0, 1, 0]' : 0.204476}", "{'[2, 0, 0, 2, 3, 6, 1, 1, 2, 0, 0, 12, 0, 0, 2, 0, 1, 0]' : 0.204518}", "{'[2, 0, 0, 2, 3, 6, 1, 1, 2, 0, 0, 12, 0, 0, 2, 0, 1, 0]' : 0.204366}", "{'[2, 0, 0, 2, 3, 6, 1, 1, 2, 0, 0, 12, 0, 0, 2, 0, 1, 0]' : 0.204469}", "{'[2, 0, 0, 2, 3, 6, 1, 1, 2, 0, 0, 12, 0, 0, 2, 0, 1, 0]' : 0.204692}"]
returning from 'run': {'[2, 0, 0, 2, 3, 6, 1, 1, 2, 0, 0, 12, 0, 0, 2, 0, 1, 0]': ([0.204497, 0.204578, 0.20447, 0.20472, 0.204674, 0.204578, 0.204464, 0.204492, 0.20458, 0.204477, 0.204483, 0.204403, 0.20474, 0.204618, 0.204953, 0.204597, 0.20437, 0.204479, 0.204755, 0.204835, 0.204414, 0.204427, 0.204505, 0.204546, 0.204628, 0.204476, 0.204518, 0.204366, 0.204469, 0.204692], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.204497, 0.204578, 0.20447, 0.20472, 0.204674, 0.204578, 0.204464, 0.204492, 0.20458, 0.204477, 0.204483, 0.204403, 0.20474, 0.204618, 0.204953, 0.204597, 0.20437, 0.204479, 0.204755, 0.204835, 0.204414, 0.204427, 0.204505, 0.204546, 0.204628, 0.204476, 0.204518, 0.204366, 0.204469, 0.204692], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[2, 0, 0, 2, 3, 6, 1, 1, 2, 0, 0, 12, 0, 0, 2, 0, 1, 0]': ([0.204497, 0.204578, 0.20447, 0.20472, 0.204674, 0.204578, 0.204464, 0.204492, 0.20458, 0.204477, 0.204483, 0.204403, 0.20474, 0.204618, 0.204953, 0.204597, 0.20437, 0.204479, 0.204755, 0.204835, 0.204414, 0.204427, 0.204505, 0.204546, 0.204628, 0.204476, 0.204518, 0.204366, 0.204469, 0.204692], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [0, 0, 6, 4, 0, 5, 0, 1, 13, 12, 0, 23, 0, 2, 0, 1, 1, 0]
Fixed Factors: {}
Testing candidate 9: [0, 0, 6, 4, 0, 5, 0, 1, 13, 12, 0, 23, 0, 2, 0, 1, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	67
        Max loop nest depth: 	5
        Additions: 		4854
        Multiplications: 	1596
        Divisions: 		0
        Logical: 		0
        Reads: 			9305
        Writes: 		1752
        Comparisons:		67
        Gotos: 			0
        
digraph CFG {
	_JOIN_1504286 [label="_JOIN_1504286None...",shape=box];
	_JOIN_1504286 -> 1504318;
	1556309 [label="1556309  double scv_282;...",shape=box];
	1549304 [label="1549304  double scv_183, scv_184, scv_185, scv_186, scv_187, scv_188, scv_189, scv_190;...",shape=box];
	ForLoop1506350 [label="ForLoop1506350  for (k=kk; k<=min(ny-1,kk+511)-23; k=k+24) {...",shape=box];
	ForLoop1506350 -> 1547198;
	ForLoop1506350 -> _JOIN_1506350;
	_JOIN_1500149 [label="_JOIN_1500149None...",shape=box];
	_JOIN_1500149 -> ForLoop1513970;
	_JOIN_1511790 [label="_JOIN_1511790None...",shape=box];
	_JOIN_1511790 -> 1511822;
	_JOIN_1513854 [label="_JOIN_1513854None...",shape=box];
	_JOIN_1513854 -> ForLoop1513934;
	ForLoop1507502 [label="ForLoop1507502  for (k=(min(ny-1,kk+511))-(((min(ny-1,kk+511))-(kk)+1)%24)+1; k<=min(ny-1,kk+511); k=k+1) {...",shape=box];
	ForLoop1507502 -> 1549991;
	ForLoop1507502 -> _JOIN_1507502;
	_JOIN_1504206 [label="_JOIN_1504206None...",shape=box];
	_JOIN_1504206 -> ForLoop1504286;
	ForLoop1507422 [label="ForLoop1507422  for (k=kk; k<=min(ny-1,kk+511)-23; k=k+24) {...",shape=box];
	ForLoop1507422 -> 1549304;
	ForLoop1507422 -> _JOIN_1507422;
	1539461 [label="1539461  double scv_82;...",shape=box];
	ForLoop1509646 [label="ForLoop1509646  for (k=(min(ny-1,kk+511))-(((min(ny-1,kk+511))-(kk)+1)%24)+1; k<=min(ny-1,kk+511); k=k+1) {...",shape=box];
	ForLoop1509646 -> 1554203;
	ForLoop1509646 -> _JOIN_1509646;
	_JOIN_1353829 [label="_JOIN_1353829None...",shape=box];
	_JOIN_1353829 -> 1486194;
	1513966 [label="1513966  for (k=kk; k<=min(ny-1,kk+511); k=k+1) ...",shape=box];
	1513966 -> _JOIN_1513968;
	ForLoop1508574 [label="ForLoop1508574  for (k=(min(ny-1,kk+511))-(((min(ny-1,kk+511))-(kk)+1)%24)+1; k<=min(ny-1,kk+511); k=k+1) {...",shape=box];
	ForLoop1508574 -> 1552097;
	ForLoop1508574 -> _JOIN_1508574;
	ForLoop1500149 [label="ForLoop1500149  for (jt=0; jt<=ny-32; jt=jt+32) {...",shape=box];
	ForLoop1500149 -> 1534760;
	ForLoop1500149 -> _JOIN_1500149;
	ForLoop1513854 [label="ForLoop1513854  for (k=kk; k<=min(ny-1,kk+511)-23; k=k+24) {...",shape=box];
	ForLoop1513854 -> 1561940;
	ForLoop1513854 -> _JOIN_1513854;
	1534760 [label="1534760  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	1506462 [label="1506462  for (k=kk; k<=min(ny-1,kk+511); k=k+1) ...",shape=box];
	ForLoop1353829 [label="ForLoop1353829  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop1353829 -> 1353828;
	ForLoop1353829 -> _JOIN_1353829;
	_JOIN_1503214 [label="_JOIN_1503214None...",shape=box];
	_JOIN_1503214 -> 1503246;
	_JOIN_1507422 [label="_JOIN_1507422None...",shape=box];
	_JOIN_1507422 -> ForLoop1507502;
	ForLoop1353760 [label="ForLoop1353760  for (i=0; i<=cbv_1; i=i+14) {...",shape=box];
	ForLoop1353760 -> 1353641;
	ForLoop1353760 -> _JOIN_1353760;
	_JOIN_1508574 [label="_JOIN_1508574None...",shape=box];
	_JOIN_1508574 -> 1508606;
	ForLoop1508494 [label="ForLoop1508494  for (k=kk; k<=min(ny-1,kk+511)-23; k=k+24) {...",shape=box];
	ForLoop1508494 -> 1551410;
	ForLoop1508494 -> _JOIN_1508494;
	_JOIN_1509566 [label="_JOIN_1509566None...",shape=box];
	_JOIN_1509566 -> ForLoop1509646;
	1505390 [label="1505390  for (k=kk; k<=min(ny-1,kk+511); k=k+1) ...",shape=box];
	1633238 [label="1633238  double scv_396;...",shape=box];
	ForLoop1503134 [label="ForLoop1503134  for (k=kk; k<=min(ny-1,kk+511)-23; k=k+24) {...",shape=box];
	ForLoop1503134 -> 1540880;
	ForLoop1503134 -> _JOIN_1503134;
	ForLoop1509566 [label="ForLoop1509566  for (k=kk; k<=min(ny-1,kk+511)-23; k=k+24) {...",shape=box];
	ForLoop1509566 -> 1553516;
	ForLoop1509566 -> _JOIN_1509566;
	_JOIN_1506430 [label="_JOIN_1506430None...",shape=box];
	_JOIN_1506430 -> 1506462;
	1502174 [label="1502174  for (k=kk; k<=min(ny-1,kk+511); k=k+1) ...",shape=box];
	1504318 [label="1504318  for (k=kk; k<=min(ny-1,kk+511); k=k+1) ...",shape=box];
	1543673 [label="1543673  double scv_132;...",shape=box];
	1545779 [label="1545779  double scv_157;...",shape=box];
	ForLoop1510718 [label="ForLoop1510718  for (k=(min(ny-1,kk+511))-(((min(ny-1,kk+511))-(kk)+1)%24)+1; k<=min(ny-1,kk+511); k=k+1) {...",shape=box];
	ForLoop1510718 -> 1556309;
	ForLoop1510718 -> _JOIN_1510718;
	_JOIN_1511710 [label="_JOIN_1511710None...",shape=box];
	_JOIN_1511710 -> ForLoop1511790;
	1628872 [label="1628872  double scv_395;...",shape=box];
	1353389 [label="1353389  int i;...",shape=box];
	1558415 [label="1558415  double scv_307;...",shape=box];
	ForLoop1511790 [label="ForLoop1511790  for (k=(min(ny-1,kk+511))-(((min(ny-1,kk+511))-(kk)+1)%24)+1; k<=min(ny-1,kk+511); k=k+1) {...",shape=box];
	ForLoop1511790 -> 1558415;
	ForLoop1511790 -> _JOIN_1511790;
	1552097 [label="1552097  double scv_232;...",shape=box];
	1536677 [label="1536677  double scv_33, scv_34, scv_35, scv_36, scv_37, scv_38, scv_39, scv_40;...",shape=box];
	1512894 [label="1512894  for (k=kk; k<=min(ny-1,kk+511); k=k+1) ...",shape=box];
	_JOIN_1513972 [label="_JOIN_1513972None...",shape=box];
	_JOIN_1513972 -> ForLoop1515824;
	ForLoop1500996 [label="ForLoop1500996  for (k=kk; k<=min(ny-1,kk+511)-23; k=k+24) {...",shape=box];
	ForLoop1500996 -> 1536677;
	ForLoop1500996 -> _JOIN_1500996;
	ForLoop1514866 [label="ForLoop1514866  for (jt=0; jt<=ny-32; jt=jt+32) {...",shape=box];
	ForLoop1514866 -> 1514058;
	ForLoop1514866 -> _JOIN_1514866;
	1559834 [label="1559834  double scv_308, scv_309, scv_310, scv_311, scv_312, scv_313, scv_314, scv_315;...",shape=box];
	ForLoop1513970 [label="ForLoop1513970  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop1513970 -> ForLoop1513968;
	ForLoop1513970 -> _JOIN_1513970;
	_JOIN_1505358 [label="_JOIN_1505358None...",shape=box];
	_JOIN_1505358 -> 1505390;
	ForLoop1513972 [label="ForLoop1513972  for (i=iii; i<=min(nx-1,iii+511)-12; i=i+13) {...",shape=box];
	ForLoop1513972 -> 1624259;
	ForLoop1513972 -> _JOIN_1513972;
	1561940 [label="1561940  double scv_333, scv_334, scv_335, scv_336, scv_337, scv_338, scv_339, scv_340;...",shape=box];
	_JOIN_1515824 [label="_JOIN_1515824None...",shape=box];
	_JOIN_1515824 -> _JOIN_1515826;
	_JOIN_1515826 [label="_JOIN_1515826None...",shape=box];
	_JOIN_1515821 [label="_JOIN_1515821None...",shape=box];
	_JOIN_1515821 -> _JOIN_1515822;
	_JOIN_1515822 [label="_JOIN_1515822None...",shape=box];
	_JOIN_1515822 -> 1633250;
	1557728 [label="1557728  double scv_283, scv_284, scv_285, scv_286, scv_287, scv_288, scv_289, scv_290;...",shape=box];
	ForLoop1502062 [label="ForLoop1502062  for (k=kk; k<=min(ny-1,kk+511)-23; k=k+24) {...",shape=box];
	ForLoop1502062 -> 1538774;
	ForLoop1502062 -> _JOIN_1502062;
	1511822 [label="1511822  for (k=kk; k<=min(ny-1,kk+511); k=k+1) ...",shape=box];
	ForLoop1502142 [label="ForLoop1502142  for (k=(min(ny-1,kk+511))-(((min(ny-1,kk+511))-(kk)+1)%24)+1; k<=min(ny-1,kk+511); k=k+1) {...",shape=box];
	ForLoop1502142 -> 1539461;
	ForLoop1502142 -> _JOIN_1502142;
	1514928 [label="1514928  for (k=kk; k<=min(ny-1,kk+511); k=k+1) ...",shape=box];
	1540880 [label="1540880  double scv_83, scv_84, scv_85, scv_86, scv_87, scv_88, scv_89, scv_90;...",shape=box];
	1510750 [label="1510750  for (k=kk; k<=min(ny-1,kk+511); k=k+1) ...",shape=box];
	_JOIN_1512862 [label="_JOIN_1512862None...",shape=box];
	_JOIN_1512862 -> 1512894;
	ForLoop1515787 [label="ForLoop1515787  for (k=(min(ny-1,kk+511))-(((min(ny-1,kk+511))-(kk)+1)%24)+1; k<=min(ny-1,kk+511); k=k+1) {...",shape=box];
	ForLoop1515787 -> 1628872;
	ForLoop1515787 -> _JOIN_1515787;
	_JOIN_1513968 [label="_JOIN_1513968None...",shape=box];
	_JOIN_1513968 -> _JOIN_1513970;
	_JOIN_1512782 [label="_JOIN_1512782None...",shape=box];
	_JOIN_1512782 -> ForLoop1512862;
	1555622 [label="1555622  double scv_258, scv_259, scv_260, scv_261, scv_262, scv_263, scv_264, scv_265;...",shape=box];
	ForLoop1506430 [label="ForLoop1506430  for (k=(min(ny-1,kk+511))-(((min(ny-1,kk+511))-(kk)+1)%24)+1; k<=min(ny-1,kk+511); k=k+1) {...",shape=box];
	ForLoop1506430 -> 1547885;
	ForLoop1506430 -> _JOIN_1506430;
	1353641 [label="1353641  y[i]=0.0;...",shape=box];
	ForLoop1511710 [label="ForLoop1511710  for (k=kk; k<=min(ny-1,kk+511)-23; k=k+24) {...",shape=box];
	ForLoop1511710 -> 1557728;
	ForLoop1511710 -> _JOIN_1511710;
	1554203 [label="1554203  double scv_257;...",shape=box];
	1549991 [label="1549991  double scv_207;...",shape=box];
	1515819 [label="1515819  for (k=kk; k<=min(ny-1,kk+511); k=k+1) ...",shape=box];
	1515819 -> _JOIN_1515821;
	1508606 [label="1508606  for (k=kk; k<=min(ny-1,kk+511); k=k+1) ...",shape=box];
	ForLoop1505358 [label="ForLoop1505358  for (k=(min(ny-1,kk+511))-(((min(ny-1,kk+511))-(kk)+1)%24)+1; k<=min(ny-1,kk+511); k=k+1) {...",shape=box];
	ForLoop1505358 -> 1545779;
	ForLoop1505358 -> _JOIN_1505358;
	1624259 [label="1624259  double scv_358, scv_359, scv_360, scv_361, scv_362, scv_363, scv_364, scv_365;...",shape=box];
	1537355 [label="1537355  double scv_57;...",shape=box];
	1553516 [label="1553516  double scv_233, scv_234, scv_235, scv_236, scv_237, scv_238, scv_239, scv_240;...",shape=box];
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 1353389;
	1514058 [label="1514058  scv_396=scv_396+A[i*ny+jt]*x[jt];...",shape=box];
	1542986 [label="1542986  double scv_108, scv_109, scv_110, scv_111, scv_112, scv_113, scv_114, scv_115;...",shape=box];
	_JOIN_1505278 [label="_JOIN_1505278None...",shape=box];
	_JOIN_1505278 -> ForLoop1505358;
	_JOIN_1508494 [label="_JOIN_1508494None...",shape=box];
	_JOIN_1508494 -> ForLoop1508574;
	ForLoop1515824 [label="ForLoop1515824  for (i=(min(nx-1,iii+511))-(((min(nx-1,iii+511))-(iii)+1)%13)+1; i<=min(nx-1,iii+511); i=i+1) {...",shape=box];
	ForLoop1515824 -> 1633238;
	ForLoop1515824 -> _JOIN_1515824;
	ForLoop1515826 [label="ForLoop1515826  for (iii=0; iii<=nx-1; iii=iii+512) {...",shape=box];
	ForLoop1515826 -> 1486209;
	ForLoop1515826 -> _JOIN_1515826;
	ForLoop1515821 [label="ForLoop1515821  for (kk=kkk; kk<=min(ny-1,kkk+512); kk=kk+512) {...",shape=box];
	ForLoop1515821 -> 1514928;
	ForLoop1515821 -> _JOIN_1515821;
	1547885 [label="1547885  double scv_182;...",shape=box];
	ForLoop1515822 [label="ForLoop1515822  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop1515822 -> ForLoop1515821;
	ForLoop1515822 -> _JOIN_1515822;
	_JOIN_1513934 [label="_JOIN_1513934None...",shape=box];
	_JOIN_1513934 -> 1513966;
	1501102 [label="1501102  for (k=kk; k<=min(ny-1,kk+511); k=k+1) ...",shape=box];
	_JOIN_1500996 [label="_JOIN_1500996None...",shape=box];
	_JOIN_1500996 -> ForLoop1501070;
	1503246 [label="1503246  for (k=kk; k<=min(ny-1,kk+511); k=k+1) ...",shape=box];
	_JOIN_1515787 [label="_JOIN_1515787None...",shape=box];
	_JOIN_1515787 -> 1515819;
	ForLoop1512782 [label="ForLoop1512782  for (k=kk; k<=min(ny-1,kk+511)-23; k=k+24) {...",shape=box];
	ForLoop1512782 -> 1559834;
	ForLoop1512782 -> _JOIN_1512782;
	1507534 [label="1507534  for (k=kk; k<=min(ny-1,kk+511); k=k+1) ...",shape=box];
	1562627 [label="1562627  double scv_357;...",shape=box];
	_JOIN_1503134 [label="_JOIN_1503134None...",shape=box];
	_JOIN_1503134 -> ForLoop1503214;
	1500211 [label="1500211  for (k=kk; k<=min(ny-1,kk+511); k=k+1) ...",shape=box];
	1353996 [label="1353996  register int cbv_2, cbv_3;...",shape=box];
	1509678 [label="1509678  for (k=kk; k<=min(ny-1,kk+511); k=k+1) ...",shape=box];
	_JOIN_1513970 [label="_JOIN_1513970None...",shape=box];
	_JOIN_1513970 -> 1624277;
	_JOIN_1510718 [label="_JOIN_1510718None...",shape=box];
	_JOIN_1510718 -> 1510750;
	1624277 [label="1624277  tmp[(i+12)]=scv_358;...",shape=box];
	ForLoop1513968 [label="ForLoop1513968  for (kk=kkk; kk<=min(ny-1,kkk+512); kk=kk+512) {...",shape=box];
	ForLoop1513968 -> 1500211;
	ForLoop1513968 -> _JOIN_1513968;
	_JOIN_1353760 [label="_JOIN_1353760None...",shape=box];
	_JOIN_1353760 -> 1353996;
	1633250 [label="1633250  tmp[i]=scv_396;...",shape=box];
	1633250 -> _JOIN_1515824;
	ForLoop1504206 [label="ForLoop1504206  for (k=kk; k<=min(ny-1,kk+511)-23; k=k+24) {...",shape=box];
	ForLoop1504206 -> 1542986;
	ForLoop1504206 -> _JOIN_1504206;
	1486194 [label="1486194  double x_copy;...",shape=box];
	_JOIN_1507502 [label="_JOIN_1507502None...",shape=box];
	_JOIN_1507502 -> 1507534;
	ForLoop1515713 [label="ForLoop1515713  for (k=kk; k<=min(ny-1,kk+511)-23; k=k+24) {...",shape=box];
	ForLoop1515713 -> 1628194;
	ForLoop1515713 -> _JOIN_1515713;
	1541567 [label="1541567  double scv_107;...",shape=box];
	1538774 [label="1538774  double scv_58, scv_59, scv_60, scv_61, scv_62, scv_63, scv_64, scv_65;...",shape=box];
	_JOIN_1502062 [label="_JOIN_1502062None...",shape=box];
	_JOIN_1502062 -> ForLoop1502142;
	1560521 [label="1560521  double scv_332;...",shape=box];
	_JOIN_1515713 [label="_JOIN_1515713None...",shape=box];
	_JOIN_1515713 -> ForLoop1515787;
	1551410 [label="1551410  double scv_208, scv_209, scv_210, scv_211, scv_212, scv_213, scv_214, scv_215;...",shape=box];
	ForLoop1501070 [label="ForLoop1501070  for (k=(min(ny-1,kk+511))-(((min(ny-1,kk+511))-(kk)+1)%24)+1; k<=min(ny-1,kk+511); k=k+1) {...",shape=box];
	ForLoop1501070 -> 1537355;
	ForLoop1501070 -> _JOIN_1501070;
	ForLoop1503214 [label="ForLoop1503214  for (k=(min(ny-1,kk+511))-(((min(ny-1,kk+511))-(kk)+1)%24)+1; k<=min(ny-1,kk+511); k=k+1) {...",shape=box];
	ForLoop1503214 -> 1541567;
	ForLoop1503214 -> _JOIN_1503214;
	ForLoop1513934 [label="ForLoop1513934  for (k=(min(ny-1,kk+511))-(((min(ny-1,kk+511))-(kk)+1)%24)+1; k<=min(ny-1,kk+511); k=k+1) {...",shape=box];
	ForLoop1513934 -> 1562627;
	ForLoop1513934 -> _JOIN_1513934;
	_JOIN_1501070 [label="_JOIN_1501070None...",shape=box];
	_JOIN_1501070 -> 1501102;
	_JOIN_1509646 [label="_JOIN_1509646None...",shape=box];
	_JOIN_1509646 -> 1509678;
	ForLoop1512862 [label="ForLoop1512862  for (k=(min(ny-1,kk+511))-(((min(ny-1,kk+511))-(kk)+1)%24)+1; k<=min(ny-1,kk+511); k=k+1) {...",shape=box];
	ForLoop1512862 -> 1560521;
	ForLoop1512862 -> _JOIN_1512862;
	_JOIN_1510638 [label="_JOIN_1510638None...",shape=box];
	_JOIN_1510638 -> ForLoop1510718;
	1353828 [label="1353828  y[i]=0.0;...",shape=box];
	1353828 -> _JOIN_1353829;
	_JOIN_1506350 [label="_JOIN_1506350None...",shape=box];
	_JOIN_1506350 -> ForLoop1506430;
	1628194 [label="1628194  double scv_371, scv_372, scv_373, scv_374, scv_375, scv_376, scv_377, scv_378;...",shape=box];
	1547198 [label="1547198  double scv_158, scv_159, scv_160, scv_161, scv_162, scv_163, scv_164, scv_165;...",shape=box];
	1545092 [label="1545092  double scv_133, scv_134, scv_135, scv_136, scv_137, scv_138, scv_139, scv_140;...",shape=box];
	_JOIN_1514866 [label="_JOIN_1514866None...",shape=box];
	_JOIN_1514866 -> ForLoop1515822;
	1486209 [label="1486209  int i;...",shape=box];
	1486209 -> ForLoop1513972;
	ForLoop1505278 [label="ForLoop1505278  for (k=kk; k<=miexpected=0.000000
actual=9369846271501.798828
n(ny-1,kk+511)-23; k=k+24) {...",shape=box];
	ForLoop1505278 -> 1545092;
	ForLoop1505278 -> _JOIN_1505278;
	ForLoop1510638 [label="ForLoop1510638  for (k=kk; k<=min(ny-1,kk+511)-23; k=k+24) {...",shape=box];
	ForLoop1510638 -> 1555622;
	ForLoop1510638 -> _JOIN_1510638;
	ForLoop1504286 [label="ForLoop1504286  for (k=(min(ny-1,kk+511))-(((min(ny-1,kk+511))-(kk)+1)%24)+1; k<=min(ny-1,kk+511); k=k+1) {...",shape=box];
	ForLoop1504286 -> 1543673;
	ForLoop1504286 -> _JOIN_1504286;
	_JOIN_1502142 [label="_JOIN_1502142None...",shape=box];
	_JOIN_1502142 -> 1502174;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest9.exe __orio_perftest9.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest9.exe  
{'[0, 0, 6, 4, 0, 5, 0, 1, 13, 12, 0, 23, 0, 2, 0, 1, 1, 0]' : 0.123491}
{'[0, 0, 6, 4, 0, 5, 0, 1, 13, 12, 0, 23, 0, 2, 0, 1, 1, 0]' : 0.12354}
{'[0, 0, 6, 4, 0, 5, 0, 1, 13, 12, 0, 23, 0, 2, 0, 1, 1, 0]' : 0.123154}
{'[0, 0, 6, 4, 0, 5, 0, 1, 13, 12, 0, 23, 0, 2, 0, 1, 1, 0]' : 0.123232}
{'[0, 0, 6, 4, 0, 5, 0, 1, 13, 12, 0, 23, 0, 2, 0, 1, 1, 0]' : 0.123208}
{'[0, 0, 6, 4, 0, 5, 0, 1, 13, 12, 0, 23, 0, 2, 0, 1, 1, 0]' : 0.123166}
{'[0, 0, 6, 4, 0, 5, 0, 1, 13, 12, 0, 23, 0, 2, 0, 1, 1, 0]' : 0.123123}
{'[0, 0, 6, 4, 0, 5, 0, 1, 13, 12, 0, 23, 0, 2, 0, 1, 1, 0]' : 0.123178}
{'[0, 0, 6, 4, 0, 5, 0, 1, 13, 12, 0, 23, 0, 2, 0, 1, 1, 0]' : 0.12317}
{'[0, 0, 6, 4, 0, 5, 0, 1, 13, 12, 0, 23, 0, 2, 0, 1, 1, 0]' : 0.123211}
{'[0, 0, 6, 4, 0, 5, 0, 1, 13, 12, 0, 23, 0, 2, 0, 1, 1, 0]' : 0.123263}
{'[0, 0, 6, 4, 0, 5, 0, 1, 13, 12, 0, 23, 0, 2, 0, 1, 1, 0]' : 0.123587}
{'[0, 0, 6, 4, 0, 5, 0, 1, 13, 12, 0, 23, 0, 2, 0, 1, 1, 0]' : 0.123167}
{'[0, 0, 6, 4, 0, 5, 0, 1, 13, 12, 0, 23, 0, 2, 0, 1, 1, 0]' : 0.123172}
{'[0, 0, 6, 4, 0, 5, 0, 1, 13, 12, 0, 23, 0, 2, 0, 1, 1, 0]' : 0.123146}
{'[0, 0, 6, 4, 0, 5, 0, 1, 13, 12, 0, 23, 0, 2, 0, 1, 1, 0]' : 0.12336}
{'[0, 0, 6, 4, 0, 5, 0, 1, 13, 12, 0, 23, 0, 2, 0, 1, 1, 0]' : 0.123147}
{'[0, 0, 6, 4, 0, 5, 0, 1, 13, 12, 0, 23, 0, 2, 0, 1, 1, 0]' : 0.123417}
{'[0, 0, 6, 4, 0, 5, 0, 1, 13, 12, 0, 23, 0, 2, 0, 1, 1, 0]' : 0.123142}
{'[0, 0, 6, 4, 0, 5, 0, 1, 13, 12, 0, 23, 0, 2, 0, 1, 1, 0]' : 0.123233}
{'[0, 0, 6, 4, 0, 5, 0, 1, 13, 12, 0, 23, 0, 2, 0, 1, 1, 0]' : 0.123123}
{'[0, 0, 6, 4, 0, 5, 0, 1, 13, 12, 0, 23, 0, 2, 0, 1, 1, 0]' : 0.123179}
{'[0, 0, 6, 4, 0, 5, 0, 1, 13, 12, 0, 23, 0, 2, 0, 1, 1, 0]' : 0.123115}
{'[0, 0, 6, 4, 0, 5, 0, 1, 13, 12, 0, 23, 0, 2, 0, 1, 1, 0]' : 0.123608}
{'[0, 0, 6, 4, 0, 5, 0, 1, 13, 12, 0, 23, 0, 2, 0, 1, 1, 0]' : 0.123163}
{'[0, 0, 6, 4, 0, 5, 0, 1, 13, 12, 0, 23, 0, 2, 0, 1, 1, 0]' : 0.123384}
{'[0, 0, 6, 4, 0, 5, 0, 1, 13, 12, 0, 23, 0, 2, 0, 1, 1, 0]' : 0.123236}
{'[0, 0, 6, 4, 0, 5, 0, 1, 13, 12, 0, 23, 0, 2, 0, 1, 1, 0]' : 0.123188}
{'[0, 0, 6, 4, 0, 5, 0, 1, 13, 12, 0, 23, 0, 2, 0, 1, 1, 0]' : 0.123107}
{'[0, 0, 6, 4, 0, 5, 0, 1, 13, 12, 0, 23, 0, 2, 0, 1, 1, 0]' : 0.123089}

out:
 ["{'[0, 0, 6, 4, 0, 5, 0, 1, 13, 12, 0, 23, 0, 2, 0, 1, 1, 0]' : 0.123491}", "{'[0, 0, 6, 4, 0, 5, 0, 1, 13, 12, 0, 23, 0, 2, 0, 1, 1, 0]' : 0.12354}", "{'[0, 0, 6, 4, 0, 5, 0, 1, 13, 12, 0, 23, 0, 2, 0, 1, 1, 0]' : 0.123154}", "{'[0, 0, 6, 4, 0, 5, 0, 1, 13, 12, 0, 23, 0, 2, 0, 1, 1, 0]' : 0.123232}", "{'[0, 0, 6, 4, 0, 5, 0, 1, 13, 12, 0, 23, 0, 2, 0, 1, 1, 0]' : 0.123208}", "{'[0, 0, 6, 4, 0, 5, 0, 1, 13, 12, 0, 23, 0, 2, 0, 1, 1, 0]' : 0.123166}", "{'[0, 0, 6, 4, 0, 5, 0, 1, 13, 12, 0, 23, 0, 2, 0, 1, 1, 0]' : 0.123123}", "{'[0, 0, 6, 4, 0, 5, 0, 1, 13, 12, 0, 23, 0, 2, 0, 1, 1, 0]' : 0.123178}", "{'[0, 0, 6, 4, 0, 5, 0, 1, 13, 12, 0, 23, 0, 2, 0, 1, 1, 0]' : 0.12317}", "{'[0, 0, 6, 4, 0, 5, 0, 1, 13, 12, 0, 23, 0, 2, 0, 1, 1, 0]' : 0.123211}", "{'[0, 0, 6, 4, 0, 5, 0, 1, 13, 12, 0, 23, 0, 2, 0, 1, 1, 0]' : 0.123263}", "{'[0, 0, 6, 4, 0, 5, 0, 1, 13, 12, 0, 23, 0, 2, 0, 1, 1, 0]' : 0.123587}", "{'[0, 0, 6, 4, 0, 5, 0, 1, 13, 12, 0, 23, 0, 2, 0, 1, 1, 0]' : 0.123167}", "{'[0, 0, 6, 4, 0, 5, 0, 1, 13, 12, 0, 23, 0, 2, 0, 1, 1, 0]' : 0.123172}", "{'[0, 0, 6, 4, 0, 5, 0, 1, 13, 12, 0, 23, 0, 2, 0, 1, 1, 0]' : 0.123146}", "{'[0, 0, 6, 4, 0, 5, 0, 1, 13, 12WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = kkk
, 0, 23, 0, 2, 0, 1, 1, 0]' : 0.12336}", "{'[0, 0, 6, 4, 0, 5, 0, 1, 13, 12, 0, 23, 0, 2, 0, 1, 1, 0]' : 0.123147}", "{'[0, 0, 6, 4, 0, 5, 0, 1, 13, 12, 0, 23, 0, 2, 0, 1, 1, 0]' : 0.123417}", "{'[0, 0, 6, 4, 0, 5, 0, 1, 13, 12, 0, 23, 0, 2, 0, 1, 1, 0]' : 0.123142}", "{'[0, 0, 6, 4, 0, 5, 0, 1, 13, 12, 0, 23, 0, 2, 0, 1, 1, 0]' : 0.123233}", "{'[0, 0, 6, 4, 0, 5, 0, 1, 13, 12, 0, 23, 0, 2, 0, 1, 1, 0]' : 0.123123}", "{'[0, 0, 6, 4, 0, 5, 0, 1, 13, 12, 0, 23, 0, 2, 0, 1, 1, 0]' : 0.123179}", "{'[0, 0, 6, 4, 0, 5, 0, 1, 13, 12, 0, 23, 0, 2, 0, 1, 1, 0]' : 0.123115}", "{'[0, 0, 6, 4, 0, 5, 0, 1, 13, 12, 0, 23, 0, 2, 0, 1, 1, 0]' : 0.123608}", "{'[0, 0, 6, 4, 0, 5, 0, 1, 13, 12, 0, 23, 0, 2, 0, 1, 1, 0]' : 0.123163}", "{'[0, 0, 6, 4, 0, 5, 0, 1, 13, 12, 0, 23, 0, 2, 0, 1, 1, 0]' : 0.123384}", "{'[0, 0, 6, 4, 0, 5, 0, 1, 13, 12, 0, 23, 0, 2, 0, 1, 1, 0]' : 0.123236}", "{'[0, 0, 6, 4, 0, 5, 0, 1, 13, 12, 0, 23, 0, 2, 0, 1, 1, 0]' : 0.123188}", "{'[0, 0, 6, 4, 0, 5, 0, 1, 13, 12, 0, 23, 0, 2, 0, 1, 1, 0]' : 0.123107}", "{'[0, 0, 6, 4, 0, 5, 0, 1, 13, 12, 0, 23, 0, 2, 0, 1, 1, 0]' : 0.123089}"]
returning from 'run': {'[0, 0, 6, 4, 0, 5, 0, 1, 13, 12, 0, 23, 0, 2, 0, 1, 1, 0]': ([0.123491, 0.12354, 0.123154, 0.123232, 0.123208, 0.123166, 0.123123, 0.123178, 0.12317, 0.123211, 0.123263, 0.123587, 0.123167, 0.123172, 0.123146, 0.12336, 0.123147, 0.123417, 0.123142, 0.123233, 0.123123, 0.123179, 0.123115, 0.123608, 0.123163, 0.123384, 0.123236, 0.123188, 0.123107, 0.123089], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.123491, 0.12354, 0.123154, 0.123232, 0.123208, 0.123166, 0.123123, 0.123178, 0.12317, 0.123211, 0.123263, 0.123587, 0.123167, 0.123172, 0.123146, 0.12336, 0.123147, 0.123417, 0.123142, 0.123233, 0.123123, 0.123179, 0.123115, 0.123608, 0.123163, 0.123384, 0.123236, 0.123188, 0.123107, 0.123089], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 6, 4, 0, 5, 0, 1, 13, 12, 0, 23, 0, 2, 0, 1, 1, 0]': ([0.123491, 0.12354, 0.123154, 0.123232, 0.123208, 0.123166, 0.123123, 0.123178, 0.12317, 0.123211, 0.123263, 0.123587, 0.123167, 0.123172, 0.123146, 0.12336, 0.123147, 0.123417, 0.123142, 0.123233, 0.123123, 0.123179, 0.123115, 0.123608, 0.123163, 0.123384, 0.123236, 0.123188, 0.123107, 0.123089], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [1, 5, 3, 5, 0, 1, 1, 0, 28, 28, 16, 0, 0, 0, 1, 0, 1, 0]
Fixed Factors: {}
Testing candidate 10: [1, 5, 3, 5, 0, 1, 1, 0, 28, 28, 16, 0, 0, 0, 1, 0, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	104
        Max loop nest depth: 	5
        Additions: 		6472
        Multiplications: 	1620
        Divisions: 		0
        Logical: 		0
        Reads: 			9756
        Writes: 		1111
        Comparisons:		104
        Gotos: 			0
        
digraph CFG {
	_JOIN_1746131 [label="_JOIN_1746131None...",shape=box];
	_JOIN_1746131 -> ForLoop1746211;
	ForLoop1748440 [label="ForLoop1748440  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jj)+1)%17)+1; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	ForLoop1748440 -> 1748439;
	ForLoop1748440 -> _JOIN_1748440;
	1744014 [label="1744014  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	_JOIN_1760095 [label="_JOIN_1760095None...",shape=box];
	_JOIN_1760095 -> _JOIN_1663398;
	1738123 [label="1738123  tmp[(i+12)]=tmp[(i+12)]+A[(i+12)*ny+j]*x_copy[(j-jj)];...",shape=box];
	1745467 [label="1745467  tmp[(i+21)]=tmp[(i+21)]+A[(i+21)*ny+j]*x_copy[(j-jj)];...",shape=box];
	1745467 -> _JOIN_1745468;
	ForLoop1735809 [label="ForLoop1735809  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jj)+1)%17)+1; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	ForLoop1735809 -> 1735808;
	ForLoop1735809 -> _JOIN_1735809;
	1658892 [label="1658892  int i;...",shape=box];
	ForLoop1729865 [label="ForLoop1729865  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jj)+1)%17)+1; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	ForLoop1729865 -> 1729864;
	ForLoop1729865 -> _JOIN_1729865;
	ForLoop1733500 [label="ForLoop1733500  for (j=jj; j<=min(ny-1,jj+255)-16; j=j+17) {...",shape=box];
	ForLoop1733500 -> 1732922;
	ForLoop1733500 -> _JOIN_1733500;
	_JOIN_1663399 [label="_JOIN_1663399None...",shape=box];
	ForLoop1749846 [label="ForLoop1749846  for (j=jj; j<=min(ny-1,jj+255)-16; j=j+17) {...",shape=box];
	ForLoop1749846 -> 1749268;
	ForLoop1749846 -> _JOIN_1749846;
	_JOIN_1746954 [label="_JOIN_1746954None...",shape=box];
	_JOIN_1746954 -> 1746986;
	1735894 [label="1735894  tmp[(i+9)]=tmp[(i+9)]+A[(i+9)*ny+j]*x_copy[(j-jj)];...",shape=box];
	1730607 [label="1730607  tmp[(i+1)]=tmp[(i+1)]+A[(i+1)*ny+j]*x_copy[(j-jj)];...",shape=box];
	1730607 -> _JOIN_1730608;
	_JOIN_1745468 [label="_JOIN_1745468None...",shape=box];
	_JOIN_1745468 -> 1745500;
	_JOIN_1663398 [label="_JOIN_1663398None...",shape=box];
	_JOIN_1663398 -> _JOIN_1663399;
	1741009 [label="1741009  tmp[(i+15)]=tmp[(i+15)]+A[(i+15)*ny+j]*x_copy[(j-jj)];...",shape=box];
	1741009 -> _JOIN_1741010;
	1732093 [label="1732093  tmp[(i+3)]=tmp[(i+3)]+A[(i+3)*ny+j]*x_copy[(j-jj)];...",shape=box];
	1732093 -> _JOIN_1732094;
	1729360 [label="1729360  tmp[i]=tmp[i]+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop1742496 [label="ForLoop1742496  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jj)+1)%17)+1; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	ForLoop1742496 -> 1742495;
	ForLoop1742496 -> _JOIN_1742496;
	1748439 [label="1748439  tmp[(i+25)]=tmp[(i+25)]+A[(i+25)*ny+j]*x_copy[(j-jj)];...",shape=box];
	1748439 -> _JOIN_1748440;
	_JOIN_1659692 [label="_JOIN_1659692None...",shape=box];
	_JOIN_1659692 -> 1667554;
	ForLoop1734986 [label="ForLoop1734986  for (j=jj; j<=min(ny-1,jj+255)-16; j=j+17) {...",shape=box];
	ForLoop1734986 -> 1734408;
	ForLoop1734986 -> _JOIN_1734986;
	1738813 [label="1738813  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	_JOIN_1737958 [label="_JOIN_1737958None...",shape=box];
	_JOIN_1737958 -> ForLoop1738038;
	ForLoop1733580 [label="ForLoop1733580  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jj)+1)%17)+1; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	ForLoop1733580 -> 1733579;
	ForLoop1733580 -> _JOIN_1733580;
	1743324 [label="1743324  tmp[(i+19)]=tmp[(i+19)]+A[(i+19)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_1759083 [label="_JOIN_1759083None...",shape=box];
	_JOIN_1759083 -> _JOIN_1759085;
	1733665 [label="1733665  tmp[(i+6)]=tmp[(i+6)]+A[(i+6)*ny+j]*x_copy[(j-jj)];...",shape=box];
	1732836 [label="1732836  tmp[(i+4)]=tmp[(i+4)]+A[(i+4)*ny+j]*x_copy[(j-jj)];...",shape=box];
	1732836 -> _JOIN_1732837;
	1659691 [label="1659691  y[i]=0.0;...",shape=box];
	1659691 -> _JOIN_1659692;
	ForLoop1743902 [label="ForLoop1743902  for (j=jj; j<=min(ny-1,jj+255)-16; j=j+17) {...",shape=box];
	ForLoop1743902 -> 1743324;
	ForLoop1743902 -> _JOIN_1743902;
	1735151 [label="1735151  tmp[(i+8)]=tmp[(i+8)]+A[(i+8)*ny+j]*x_copy[(j-jj)];...",shape=box];
	1748525 [label="1748525  tmp[(i+26)]=tmp[(i+26)]+A[(i+26)*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop1737295 [label="ForLoop1737295  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jj)+1)%17)+1; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	ForLoop1737295 -> 1737294;
	ForLoop1737295 -> _JOIN_1737295;
	_JOIN_1739524 [label="_JOIN_1739524None...",shape=box];
	_JOIN_1739524 -> 1739556;
	ForLoop1740930 [label="ForLoop1740930  for (j=jj; j<=min(ny-1,jj+255)-16; j=j+17) {...",shape=box];
	ForLoop1740930 -> 1740352;
	ForLoop1740930 -> _JOIN_1740930;
	ForLoop1746211 [label="ForLoop1746211  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jj)+1)%17)+1; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	ForLoop1746211 -> 1746210;
	ForLoop1746211 -> _JOIN_1746211;
	_JOIN_1747617 [label="_JOIN_1747617None...",shape=box];
	_JOIN_1747617 -> ForLoop1747697;
	1741838 [label="1741838  tmp[(i+17)]=tmp[(i+17)]+A[(i+17)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_1738701 [label="_JOIN_1738701None...",shape=box];
	_JOIN_1738701 -> ForLoop1738781;
	1734322 [label="1734322  tmp[(i+6)]=tmp[(i+6)]+A[(i+6)*ny+j]*x_copy[(j-jj)];...",shape=box];
	1734322 -> _JOIN_1734323;
	1746210 [label="1746210  tmp[(i+22)]=tmp[(i+22)]+A[(i+22)*ny+j]*x_copy[(j-jj)];...",shape=box];
	1746210 -> _JOIN_1746211;
	ForLoop1732094 [label="ForLoop1732094  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jj)+1)%17)+1; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	ForLoop1732094 -> 1732093;
	ForLoop1732094 -> _JOIN_1732094;
	_JOIN_1733500 [label="_JOIN_1733500None...",shape=box];
	_JOIN_1733500 -> ForLoop1733580;
	1743238 [label="1743238  tmp[(i+18)]=tmp[(i+18)]+A[(i+18)*ny+j]*x_copy[(j-jj)];...",shape=box];
	1743238 -> _JOIN_1743239;
	1746296 [label="1746296  tmp[(i+23)]=tmp[(i+23)]+A[(i+23)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_1760091 [label="_JOIN_1760091None...",shape=box];
	_JOIN_1760091 -> _JOIN_1760093;
	_JOIN_1738038 [label="_JOIN_1738038None...",shape=box];
	_JOIN_1738038 -> 1738070;
	_JOIN_1759085 [label="_JOIN_1759085None...",shape=box];
	_JOIN_1759085 -> _JOIN_1759087;
	ForLoop1737958 [label="ForLoop1737958  for (j=jj; j<=min(ny-1,jj+255)-16; j=j+17) {...",shape=box];
	ForLoop1737958 -> 1737380;
	ForLoop1737958 -> _JOIN_1737958;
	ForLoop1759085 [label="ForLoop1759085  for (kk=0; kk<=ny-1; kk=kk+64) {...",shape=box];
	ForLoop1759085 -> ForLoop1758315;
	ForLoop1759085 -> _JOIN_1759085;
	ForLoop1731351 [label="ForLoop1731351  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jj)+1)%17)+1; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	ForLoop1731351 -> 1731350;
	ForLoop1731351 -> _JOIN_1731351;
	_JOIN_1734243 [label="_JOIN_1734243None...",shape=box];
	_JOIN_1734243 -> ForLoop1734323;
	1750725 [label="1750725  y[kt]=y[kt]+A[i*ny+kt]*tmp[i];...",shape=box];
	ForLoop1735729 [label="ForLoop1735729  for (j=jj; j<=min(ny-1,jj+255)-16; j=j+17) {...",shape=box];
	ForLoop1735729 -> 1735151;
	ForLoop1735729 -> _JOIN_1735729;
	1733579 [label="1733579  tmp[(i+5)]=tmp[(i+5)]+A[(i+5)*ny+j]*x_copy[(j-jj)];...",shape=box];
	1733579 -> _JOIN_1733580;
	_JOIN_1732757 [label="_JOIN_1732757None...",shape=box];
	_JOIN_1732757 -> ForLoop1732837;
	ForLoop1738781 [label="ForLoop1738781  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jj)+1)%17)+1; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	ForLoop1738781 -> 1738780;
	ForLoop1738781 -> _JOIN_1738781;
	ForLoop1745388 [label="ForLoop1745388  for (j=jj; j<=min(ny-1,jj+255)-16; j=j+17) {...",shape=box];
	ForLoop1745388 -> 1744810;
	ForLoop1745388 -> _JOIN_1745388;
	1737294 [label="1737294  tmp[(i+10)]=tmp[(i+10)]+A[(i+10)*ny+j]*x_copy[(j-jj)];...",shape=box];
	1737294 -> _JOIN_1737295;
	ForLoop1732014 [label="ForLoop1732014  for (j=jj; j<=min(ny-1,jj+255)-16; j=j+17) {...",shape=box];
	ForLoop1732014 -> 1731436;
	ForLoop1732014 -> _JOIN_1732014;
	ForLoop1759087 [label="ForLoop1759087  for (i=ii; i<=min(nx-1,ii+15)-28; i=i+29) {...",shape=box];
	ForLoop1759087 -> 1729020;
	ForLoop1759087 -> _JOIN_1759087;
	_JOIN_1737295 [label="_JOIN_1737295None...",shape=box];
	_JOIN_1737295 -> 1737327;
	_JOIN_1733580 [label="_JOIN_1733580None...",shape=box];
	_JOIN_1733580 -> 1733612;
	1742581 [label="1742581  tmp[(i+18)]=tmp[(i+18)]+A[(i+18)*ny+j]*x_copy[(j-jj)];...",shape=box];
	1679842 [label="1679842  int i;...",shape=box];
	1679842 -> ForLoop1759087;
	_JOIN_1735066 [label="_JOIN_1735066None...",shape=box];
	_JOIN_1735066 -> 1735098;
	_JOIN_1759720 [label="_JOIN_1759720None...",shape=box];
	_JOIN_1759720 -> ForLoop1759791;
	1745553 [label="1745553  tmp[(i+22)]=tmp[(i+22)]+A[(i+22)*ny+j]*x_copy[(j-jj)];...",shape=box];
	1734408 [label="1734408  tmp[(i+7)]=tmp[(i+7)]+A[(i+7)*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop1736552 [label="ForLoop1736552  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jj)+1)%17)+1; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	ForLoop1736552 -> 1736551;
	ForLoop1736552 -> _JOIN_1736552;
	1759286 [label="1759286  tmp[i]=tmp[i]+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_1749183 [label="_JOIN_1749183None...",shape=box];
	_JOIN_1749183 -> 1749215;
	_JOIN_1737215 [label="_JOIN_1737215None...",shape=box];
	_JOIN_1737215 -> ForLoop1737295;
	ForLoop1738701 [label="ForLoop1738701  for (j=jj; j<=min(ny-1,jj+255)-16; j=j+17) {...",shape=box];
	ForLoop1738701 -> 1738123;
	ForLoop1738701 -> _JOIN_1738701;
	_JOIN_1741010 [label="_JOIN_1741010None...",shape=box];
	_JOIN_1741010 -> 1741042;
	1739609 [label="1739609  tmp[(i+14)]=tmp[(i+14)]+A[(i+14)*ny+j]*x_copy[(j-jj)];...",shape=box];
	1750668 [label="1750668  tmp[(i+28)]=tmp[(i+28)]+A[(i+28)*ny+j]*x_copy[(j-jj)];...",shape=box];
	1750668 -> _JOIN_1750669;
	ForLoop1663399 [label="ForLoop1663399  for (iii=0; iii<=nx-1; iii=iii+1024) ...",shape=box];
	ForLoop1663399 -> ForLoop1663398;
	ForLoop1663399 -> _JOIN_1663399;
	ForLoop1663398 [label="ForLoop1663398  for (ii=iii; ii<=min(nx-1,iii+1008); ii=ii+16) {...",shape=box];
	ForLoop1663398 -> 1679842;
	ForLoop1663398 -> _JOIN_1663398;
	1747039 [label="1747039  tmp[(i+24)]=tmp[(i+24)]+A[(i+24)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_1743159 [label="_JOIN_1743159None...",shape=box];
	_JOIN_1743159 -> ForLoop1743239;
	ForLoop1730608 [label="ForLoop1730608  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jj)+1)%17)+1; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	ForLoop1730608 -> 1730607;
	ForLoop1730608 -> _JOIN_1730608;
	_JOIN_1749846 [label="_JOIN_1749846None...",shape=box];
	_JOIN_1749846 -> ForLoop1749926;
	ForLoop1743159 [label="ForLoop1743159  for (j=jj; j<=min(ny-1,jj+255)-16; j=j+17) {...",shape=box];
	ForLoop1743159 -> 1742581;
	ForLoop1743159 -> _JOIN_1743159;
	1740352 [label="1740352  tmp[(i+15)]=tmp[(i+15)]+A[(i+15)*ny+j]*x_copy[(j-jj)];...",shape=box];
	1759198 [label="1759198  tmp[i]=0;...",shape=box];
	1759198 -> ForLoop1759794;
	ForLoop1745468 [label="ForLoop1745468  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jj)+1)%17)+1; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	ForLoop1745468 -> 1745467;
	ForLoop1745468 -> _JOIN_1745468;
	ForLoop1735066 [label="ForLoop1735066  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jj)+1)%17)+1; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	ForLoop1735066 -> 1735065;
	ForLoop1735066 -> _JOIN_1735066;
	1659369 [label="1659369  y[i]=0.0;...",shape=box];
	_JOIN_1749926 [label="_JOIN_1749926None...",shape=box];
	_JOIN_1749926 -> 1749958;
	1729897 [label="1729897  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	1749182 [label="1749182  tmp[(i+26)]=tmp[(i+26)]+A[(i+26)*ny+j]*x_copy[(j-jj)];...",shape=box];
	1749182 -> _JOIN_1749183;
	_JOIN_1738781 [label="_JOIN_1738781None...",shape=box];
	_JOIN_1738781 -> 1738813;
	ForLoop1741010 [label="ForLoop1741010  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jj)+1)%17)+1; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	ForLoop1741010 -> 1741009;
	ForLoop1741010 -> _JOIN_1741010;
	1732179 [label="1732179  tmp[(i+4)]=tmp[(i+4)]+A[(i+4)*ny+j]*x_copy[(j-jj)];...",shape=box];
	1729950 [label="1729950  tmp[(i+1)]=tmp[(i+1)]+A[(i+1)*ny+j]*x_copy[(j-jj)];...",shape=box];
	1747696 [label="1747696  tmp[(i+24)]=tmp[(i+24)]+A[(i+24)*ny+j]*x_copy[(j-jj)];...",shape=box];
	1747696 -> _JOIN_1747697;
	1738037 [label="1738037  tmp[(i+11)]=tmp[(i+11)]+A[(i+11)*ny+j]*x_copy[(j-jj)];...",shape=box];
	1738037 -> _JOIN_1738038;
	1736584 [label="1736584  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	1741095 [label="1741095  tmp[(i+16)]=tmp[(i+16)]+A[(i+16)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_1748360 [label="_JOIN_1748360None...",shape=box];
	_JOIN_1748360 -> ForLoop1748440;
	_JOIN_1744645 [label="_JOIN_1744645None...",shape=box];
	_JOIN_1744645 -> ForLoop1744725;
	1744724 [label="1744724  tmp[(i+20)]=tmp[(i+20)]+A[(i+20)*ny+j]*x_copy[(j-jj)];...",shape=box];
	1744724 -> _JOIN_1744725;
	_JOIN_1729865 [label="_JOIN_1729865None...",shape=box];
	_JOIN_1729865 -> 1729897;
	ForLoop1743982 [label="ForLoop1743982  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jj)+1)%17)+1; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	ForLoop1743982 -> 1743981;
	ForLoop1743982 -> _JOIN_1743982;
	_JOIN_1736472 [label="_JOIN_1736472None...",shape=box];
	_JOIN_1736472 -> ForLoop1736552;
	ForLoop1760052 [label="ForLoop1760052  for (kt=kk; kt<=min(ny-1,kk+63)-7; kt=kt+8) {...",shape=box];
	ForLoop1760052 -> 1759847;
	ForLoop1760052 -> _JOIN_1760052;
	1737327 [label="1737327  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	ForLoop1749926 [label="ForLoop1749926  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jj)+1)%17)+1; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	ForLoop1749926 -> 1749925;
	ForLoop1749926 -> _JOIN_1749926;
	ForLoop1730528 [label="ForLoop1730528  for (j=jj; j<=min(ny-1,jj+255)-16; j=j+17) {...",shape=box];
	ForLoop1730528 -> 1729950;
	ForLoop1730528 -> _JOIN_1730528;
	_JOIN_1740267 [label="_JOIN_1740267None...",shape=box];
	_JOIN_1740267 -> 1740299;
	1758353 [label="1758353  y[k]=y[k]+A[i*ny+k]*tmp[i];...",shape=box];
	1741752 [label="1741752  tmp[(i+16)]=tmp[(i+16)]+A[(i+16)*ny+j]*x_copy[(j-jj)];...",shape=box];
	1741752 -> _JOIN_1741753;
	1748472 [label="1748472  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	1740299 [label="1740299  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	_JOIN_1732837 [label="_JOIN_1732837None...",shape=box];
	_JOIN_1732837 -> 1732869;
	ForLoop1729794 [label="ForLoop1729794  for (j=jj; j<=min(ny-1,jj+255)-16; j=j+17) {...",shape=box];
	ForLoop1729794 -> 1729360;
	ForLoop1729794 -> _JOIN_1729794;
	1749215 [label="1749215  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	1746986 [label="1746986  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	1731383 [label="1731383  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	1735841 [label="1735841  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	_JOIN_1746211 [label="_JOIN_1746211None...",shape=box];
	_JOIN_1746211 -> 1746243;
	_JOIN_1729794 [label="_JOIN_1729794None...",shape=box];
	_JOIN_1729794 -> ForLoop1729865;
	_JOIN_1734986 [label="_JOIN_1734986None...",shape=box];
	_JOIN_1734986 -> ForLoop1735066;
	1736637 [label="1736637  tmp[(i+10)]=tmp[(i+10)]+A[(i+10)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_1748440 [label="_JOIN_1748440None...",shape=box];
	_JOIN_1748440 -> 1748472;
	1744067 [label="1744067  tmp[(i+20)]=tmp[(i+20)]+A[(i+20)*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop1659623 [label="ForLoop1659623  for (i=0; i<=cbv_1; i=i+29) {...",shape=box];
	ForLoop1659623 -> 1659369;
	ForLoop1659623 -> _JOIN_1659623;
	ForLoop1759794 [label="ForLoop1759794  for (jj=0; jj<=ny-1; jj=jj+256) {...",shape=box];
	ForLoop1759794 -> 1759242;
	ForLoop1759794 -> _JOIN_1759794;
	1733612 [label="1733612  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	ForLoop1759791 [label="ForLoop1759791  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jj)+1)%17)+1; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	ForLoop1759791 -> 1759790;
	ForLoop1759791 -> _JOIN_1759791;
	1742528 [label="1742528  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	1730640 [label="1730640  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	1744757 [label="1744757  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	1732869 [label="1732869  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	_JOIN_1759087 [label="_JOIN_1759087None...",shape=box];
	_JOIN_1759087 -> ForLoop1760095;
	_JOIN_1730528 [label="_JOIN_1730528None...",shape=box];
	_JOIN_1730528 -> ForLoop1730608;
	ForLoop1741753 [label="ForLoop1741753  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jj)+1)%17)+1; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	ForLoop1741753 -> 1741752;
	ForLoop1741753 -> _JOIN_1741753;
	_JOIN_1742416 [label="_JOIN_1742416None...",shape=box];
	_JOIN_1742416 -> ForLoop1742496;
	1667554 [label="1667554  double x_copy[256];...",shape=box];
	ForLoop1760091 [label="ForLoop1760091  for (k=kt; k<=min(ny-1,kk+63); k=k+1) ...",shape=box];
	ForLoop1760091 -> 1760090;
	ForLoop1760091 -> _JOIN_1760091;
	1745500 [label="1745500  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	ForLoop1760095 [label="ForLoop1760095  for (i=(min(nx-1,ii+15))-(((min(nx-1,ii+15))-(ii)+1)%29)+1; i<=min(nx-1,ii+15); i=i+1) {...",shape=box];
	ForLoop1760095 -> 1759198;
	ForLoop1760095 -> _JOIN_1760095;
	1731436 [label="1731436  tmp[(i+3)]=tmp[(i+3)]+A[(i+3)*ny+j]*x_copy[(j-jj)];...",shape=box];
	1740266 [label="1740266  tmp[(i+14)]=tmp[(i+14)]+A[(i+14)*ny+j]*x_copy[(j-jj)];...",shape=box];
	1740266 -> _JOIN_1740267;
	1741042 [label="1741042  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	_JOIN_1747697 [label="_JOIN_1747697None...",shape=box];
	_JOIN_1747697 -> 1747729;
	_JOIN_1731271 [label="_JOIN_1731271None...",shape=box];
	_JOIN_1731271 -> ForLoop1731351;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 1658892;
	ForLoop1759720 [label="ForLoop1759720  for (j=jj; j<=min(ny-1,jj+255)-16; j=j+17) {...",shape=box];
	ForLoop1759720 -> 1759286;
	ForLoop1759720 -> _JOIN_1759720;
	ForLoop1744725 [label="ForLoop1744725  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jj)+1)%17)+1; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	ForLoop1744725 -> 1744724;
	ForLoop1744725 -> _JOIN_1744725;
	_JOIN_1742496 [label="_JOIN_1742496None...",shape=box];
	_JOIN_1742496 -> 1742528;
	_JOIN_1750589 [label="_JOIN_1750589None...",shape=box];
	_JOIN_1750589 -> ForLoop1750669;
	ForLoop1760093 [label="ForLoop1760093  for (kk=0; kk<=ny-1; kk=kk+64) {...",shape=box];
	ForLoop1760093 -> ForLoop1760052;
	ForLoop1760093 -> _JOIN_1760093;
	_JOIN_1741673 [label="_JOIN_1741673None...",shape=box];
	_JOIN_1741673 -> ForLoop1741753;
	ForLoop1746131 [label="ForLoop1746131  for (j=jj; j<=min(ny-1,jj+255)-16; j=j+17) {...",shape=box];
	ForLoop1746131 -> 1745553;
	ForLoop1746131 -> _JOIN_1746131;
	1747729 [label="1747729  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	_JOIN_1745388 [label="_JOIN_1745388None...",shape=box];
	_JOIN_1745388 -> ForLoop1745468;
	_JOIN_1743902 [label="_JOIN_1743902None...",shape=box];
	_JOIN_1743902 -> ForLoop1743982;
	1749268 [label="1749268  tmp[(i+27)]=tmp[(i+27)]+A[(i+27)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_1760052 [label="_JOIN_1760052None...",shape=box];
	_JOIN_1760052 -> ForLoop1760091;
	ForLoop1659692 [label="ForLoop1659692  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop1659692 -> 1659691;
	ForLoop1659692 -> _JOIN_1659692;
	ForLoop1758315 [label="ForLoop1758315  for (kt=kk; kt<=min(ny-1,kk+63)-7; kt=kt+8) {...",shape=box];
	ForLoop1758315 -> 1750725;
	ForLoop1758315 -> _JOIN_1758315;
	1731350 [label="1731350  tmp[(i+2)]=tmp[(i+2)]+A[(i+2)*ny+j]*x_copy[(j-jj)];...",shape=box];
	1731350 -> _JOIN_1731351;
	1738070 [label="1738070  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	1743271 [label="1743271  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	1736551 [label="1736551  tmp[(i+9)]=tmp[(i+9)]+A[(i+9)*ny+j]*x_copy[(j-jj)];...",shape=box];
	1736551 -> _JOIN_1736552;
	ForLoop1742416 [label="ForLoop1742416  for (j=jj; j<=min(ny-1,jj+255)-16; j=j+17) {...",shape=box];
	ForLoop1742416 -> 1741838;
	ForLoop1742416 -> _JOIN_1742416;
	ForLoop1743239 [label="ForLoop1743239  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jj)+1)%17)+1; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	ForLoop1743239 -> 1743238;
	ForLoop1743239 -> _JOIN_1743239;
	1743981 [label="1743981  tmp[(i+19)]=tmp[(i+19)]+A[(i+19)*ny+j]*x_copy[(j-jj)];...",shape=box];
	1743981 -> _JOIN_1743982;
	1742495 [label="1742495  tmp[(i+17)]=tmp[(i+17)]+A[(i+17)*ny+j]*x_copy[(j-jj)];...",shape=box];
	1742495 -> _JOIN_1742496;
	_JOIN_1743239 [label="_JOIN_1743239None...",shape=box];
	_JOIN_1743239 -> 1743271;
	_JOIN_1749103 [label="_JOIN_1749103None...",shape=box];
	_JOIN_1749103 -> ForLoop1749183;
	_JOIN_1740187 [label="_JOIN_1740187None...",shape=box];
	_JOIN_1740187 -> ForLoop1740267;
	_JOIN_1734323 [label="_JOIN_1734323None...",shape=box];
	_JOIN_1734323 -> 1734355;
	_JOIN_1732014 [label="_JOIN_1732014None...",shape=box];
	_JOIN_1732014 -> ForLoop1732094;
	ForLoop1741673 [label="ForLoop1741673  for (j=jj; j<=min(ny-1,jj+255)-16; j=j+17) {...",shape=box];
	ForLoop1741673 -> 1741095;
	ForLoop1741673 -> _JOIN_1741673;
	1732126 [label="1732126  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	ForLoop1732757 [label="ForLoop1732757  for (j=jj; j<=min(ny-1,jj+255)-16; j=j+17) {...",shape=box];
	ForLoop1732757 -> 1732179;
	ForLoop1732757 -> _JOIN_1732757;
	ForLoop1749103 [label="ForLoop1749103  for (j=jj; j<=min(ny-1,jj+255)-16; j=j+17) {...",shape=box];
	ForLoop1749103 -> 1748525;
	ForLoop1749103 -> _JOIN_1749103;
	ForLoop1740267 [label="ForLoop1740267  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jj)+1)%17)+1; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	ForLoop1740267 -> 1740266;
	ForLoop1740267 -> _JOIN_1740267;
	_JOIN_1740930 [label="_JOIN_1740930None...",shape=box];
	_JOIN_1740930 -> ForLoop1741010;
	ForLoop1740187 [label="ForLoop1740187  for (j=jj; j<=min(ny-1,jj+255)-16; j=j+17) {...",shape=box];
	ForLoop1740187 -> 1739609;
	ForLoop1740187 -> _JOIN_1740187;
	1746243 [label="1746243  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	_JOIN_1730608 [label="_JOIN_1730608None...",shape=box];
	_JOIN_1730608 -> 1730640;
	1659994 [label="1659994  register int cbv_2, cbv_3;...",shape=box];
	1734355 [label="1734355  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	_JOIN_1760093 [label="_JOIN_1760093None...",shape=box];
	_JOIN_1760093 -> _JOIN_1760095;
	1735065 [label="1735065  tmp[(i+7)]=tmp[(i+7)]+A[(i+7)*ny+j]*x_copy[(j-jj)];...",shape=box];
	1735065 -> _JOIN_1735066;
	_JOIN_1732094 [label="_JOIN_1732094None...",shape=box];
	_JOIN_1732094 -> 1732126;
	_JOIN_1744725 [label="_JOIN_1744725None...",shape=box];
	_JOIN_1744725 -> 1744757;
	1729864 [label="1729864  tmp[i]=tmp[i]+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	1729864 -> _JOIN_1729865;
	ForLoop1749183 [label="ForLoop1749183  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jj)+1)%17)+1; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	ForLoop1749183 -> 1749182;
	ForLoop1749183 -> _JOIN_1749183;
	1746953 [label="1746953  tmp[(i+23)]=tmp[(i+23)]+A[(i+23)*ny+j]*x_copy[(j-jj)];...",shape=box];
	1746953 -> _JOIN_1746954;
	_JOIN_1659623 [label="_JOIN_1659623None...",shape=box];
	_JOIN_1659623 -> 1659994;
	ForLoop1739524 [label="ForLoop1739524  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jj)+1)%17)+1; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	ForLoop1739524 -> 1739523;
	ForLoop1739524 -> _JOIN_1739524;
	ForLoop1750589 [label="ForLoop1750589  for (j=jj; j<=min(ny-1,jj+255)-16; j=j+17) {...",shape=box];
	ForLoop1750589 -> 1750011;
	ForLoop1750589 -> _JOIN_1750589;
	_JOIN_1739444 [label="_JOIN_1739444None...",shape=box];
	_JOIN_1739444 -> ForLoop1739524;
	1744810 [label="1744810  tmp[(i+21)]=tmp[(i+21)]+A[(i+21)*ny+j]*x_copy[(j-jj)];...",shape=box];
	1759847 [label="1759847  y[kt]=y[kt]+A[i*ny+kt]*tmp[i];...",shape=box];
	_JOIN_1736552 [label="_JOIN_1736552None...",shape=box];
	_JOIN_1736552 -> 1736584;
	ForLoop1747697 [label="ForLoop1747697  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jj)+1)%17)+1; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	ForLoop1747697 -> 1747696;
	ForLoop1747697 -> _JOIN_1747697;
	1735808 [label="1735808  tmp[(i+8)]=tmp[(i+8)]+A[(i+8)*ny+j]*x_copy[(j-jj)];...",shape=box];
	1735808 -> _JOIN_1735809;
	1729020 [label="1729020  tmp[i]=0;...",shape=box];
	1749958 [label="1749958  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	1750011 [label="1750011  tmp[(i+28)]=tmp[(i+28)]+A[(i+28)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_1731351 [label="_JOIN_1731351None...",shape=box];
	_JOIN_1731351 -> 1731383;
	_JOIN_1741753 [label="_JOIN_1741753None...",shape=box];
	_JOIN_1741753 -> 1741785;
	ForLoop1759083 [label="ForLoop1759083  for (k=kt; k<=min(ny-1,kk+63); k=k+1) {...",shape=box];
	ForLoop1759083 -> 1758353;
	ForLoop1759083 -> _JOIN_1759083;
	ForLoop1750669 [label="ForLoop1750669  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jj)+1)%17)+1; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	ForLoop1750669 -> 1750668;
	ForLoop1750669 -> _JOIN_1750669;
	1760090 [label="1760090  y[k]=y[k]+A[i*ny+k]*tmp[i];...",shape=box];
	1760090 -> _JOIN_1760091;
	ForLoop1734323 [label="ForLoop1734323  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jj)+1)%17)+1; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	ForLoop1734323 -> 1734322;
	ForLoop1734323 -> _JOIN_1734323;
	1747782 [label="1747782  tmp[(i+25)]=tmp[(i+25)]+A[(i+25)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_1750669 [label="_JOIN_1750669None...",shape=box];
	_JOIN_1750669 -> _JOIN_1750672;
	_JOIN_1758315 [label="_JOIN_1758315None...",shape=box];
	_JOIN_1758315 -> ForLoop1759083;
	ForLoop1734243 [label="ForLoop1734243  for (j=jj; j<=min(ny-1,jj+255)-16; j=j+17) {...",shape=box];
	ForLoop1734243 -> 1733665;
	ForLoop1734243 -> _JOIN_1734243;
	_JOIN_1759794 [label="_JOIN_1759794None...",shape=box];
	_JOIN_1759794 -> ForLoop1760093;
	1739523 [label="1739523  tmp[(i+13)]=tmp[(i+13)]+A[(i+13)*ny+j]*x_copy[(j-jj)];...",shape=box];
	1739523 -> _JOIN_1739524;
	1759242 [label="1759242  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	_JOIN_1746874 [label="_JOIN_1746874None...",shape=box];
	_JOIN_1746874 -> ForLoop1746954;
	_JOIN_1735729 [label="_JOIN_1735729None...",shape=box];
	_JOIN_1735729 -> ForLoop1735809;
	_JOIN_1759791 [label="_JOIN_1759791None...",shape=box];
	_JOIN_1759791 -> _JOIN_1759794;
	1730693 [label="1730693  tmp[(i+2)]=tmp[(i+2)]+A[(i+2)*ny+j]*x_copy[(j-jj)];...",shape=box];
	1739556 [label="1739556  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	1729316 [label="1729316  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	_JOIN_1743982 [label="_JOIN_1743982None...",shape=box];
	_JOIN_1743982 -> 1744014;
	ForLoop1737215 [label="ForLoop1737215  for (j=jj; j<=min(ny-1,jj+255)-16; j=j+17) {...",shape=box];
	ForLoop1737215 -> 1736637;
	ForLoop1737215 -> _JOIN_1737215;
	1749925 [label="1749925  tmp[(i+27)]=tmp[(i+27)]+A[(i+27)*ny+j]*x_copy[(j-jj)];...",shape=box];
	1749925 -> _JOIN_1749926;
	ForLoop1744645 [label="ForLoop1744645  for (j=jj; j<=min(ny-1,jj+255)-16; j=j+17) {...",shape=box];
	ForLoop1744645 -> 1744067;
	ForLoop1744645 -> _JOIN_1744645;
	1735098 [label="1735098  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	ForLoop1746874 [label="ForLoop1746874  for (j=jj; j<=min(ny-1,jj+255)-16; j=j+17) {...",shape=box];
	ForLoop1746874 -> 1746296;
	ForLoop1746874 -> _JOIN_1746874;
	ForLoop1748360 [label="ForLoop1748360  for (j=jj; j<=min(ny-1,jj+255)-16; j=j+17) {...",shape=box];
	ForLoop1748360 -> 1747782;
	ForLoop1748360 -> _JOIN_1748360;
	ForLoop1732837 [label="ForLoop1732837  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jj)+1)%17)+1; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	ForLoop1732837 -> 1732836;
	ForLoop1732837 -> _JOIN_1732837;
	1738780 [label="1738780  tmp[(i+12)]=tmp[(i+12)]+A[(i+12)*ny+j]*x_copy[(j-jj)];...",shape=box];
	1738780 -> _JOIN_1738781;
	1738866 [label="1738866  tmp[(i+13)]=tmp[(i+13)]+A[(i+13)*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop1731271 [label="ForLoop1731271  for (j=jj; j<=min(ny-1,jj+255)-16; j=j+17) {...",shape=box];
	ForLoop1731271 -> 1730693;
	ForLoop1731271 -> _JOIN_1731271;
	ForLoop1736472 [label="ForLoop1736472  for (j=jj; j<=min(ny-1,jj+255)-16; j=j+17) {...",shape=box];
	ForLoop1736472 -> 1735894;
	ForLoop1736472 -> _JOIN_1736472;
	ForLoop1750672 [label="ForLoop1750672  for (jj=0; jj<=ny-1; jj=jj+256) {...",shape=box];
	ForLoop1750672 -> 1729316;
	ForLoop1750672 -> _JOIN_1750672;
	ForLoop1738038 [label="ForLoop1738038  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jj)+1)%17)+1; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	ForLoop1738038 -> 1738037;
	ForLoop1738038 -> _JOIN_1738038;
	ForLoop1746954 [label="ForLoop1746954  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jj)+1)%17)+1; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	ForLoop1746954 -> 1746953;
	ForLoop1746954 -> _JOIN_1746954;
	_JOIN_1750672 [label="_JOIN_1750672None...",shape=box];
	_JOIN_1750672 -> ForLoop1759085;
	1741785 [label="1741785  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	ForLoop1739444 [label="ForLoop1739444  for (j=jj; j<=min(ny-1,jj+255)-16; j=j+17) {...",shape=box];
	ForLoop1739444 -> 1738866;
	ForLoop1739444 -> _JOIN_1739444;
	ForLoop1747617 [label="ForLoop1747617  for (j=jj; j<=min(ny-1,jj+255)-16; j=j+17) {...",shape=box];
	ForLoop1747617 -> 1747039;
	ForLoop1747617 -> _JOIN_1747617;
	1759790 [label="1759790  tmp[i]=tmp[i]+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	1759790 -> _JOIN_1759791;
	1737380 [label="1737380  tmp[(i+11)]=tmp[(i+11)]+A[(i+11)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_17358expected=9369846271501.798828
actual=9369846271501.798828
09 [label="_JOIN_1735809None...",shape=box];
	_JOIN_1735809 -> 1735841;
	1732922 [label="1732922  tmp[(i+5)]=tmp[(i+5)]+A[(i+5)*ny+j]*x_copy[(j-jj)];...",shape=box];

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest10.exe __orio_perftest10.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest10.exe  
{'[1, 5, 3, 5, 0, 1, 1, 0, 28, 28, 16, 0, 0, 0, 1, 0, 1, 0]' : 0.175358}
{'[1, 5, 3, 5, 0, 1, 1, 0, 28, 28, 16, 0, 0, 0, 1, 0, 1, 0]' : 0.175356}
{'[1, 5, 3, 5, 0, 1, 1, 0, 28, 28, 16, 0, 0, 0, 1, 0, 1, 0]' : 0.178135}
{'[1, 5, 3, 5, 0, 1, 1, 0, 28, 28, 16, 0, 0, 0, 1, 0, 1, 0]' : 0.175424}
{'[1, 5, 3, 5, 0, 1, 1, 0, 28, 28, 16, 0, 0, 0, 1, 0, 1, 0]' : 0.175372}
{'[1, 5, 3, 5, 0, 1, 1, 0, 28, 28, 16, 0, 0, 0, 1, 0, 1, 0]' : 0.175504}
{'[1, 5, 3, 5, 0, 1, 1, 0, 28, 28, 16, 0, 0, 0, 1, 0, 1, 0]' : 0.17527}
{'[1, 5, 3, 5, 0, 1, 1, 0, 28, 28, 16, 0, 0, 0, 1, 0, 1, 0]' : 0.175387}
{'[1, 5, 3, 5, 0, 1, 1, 0, 28, 28, 16, 0, 0, 0, 1, 0, 1, 0]' : 0.175373}
{'[1, 5, 3, 5, 0, 1, 1, 0, 28, 28, 16, 0, 0, 0, 1, 0, 1, 0]' : 0.175393}
{'[1, 5, 3, 5, 0, 1, 1, 0, 28, 28, 16, 0, 0, 0, 1, 0, 1, 0]' : 0.175349}
{'[1, 5, 3, 5, 0, 1, 1, 0, 28, 28, 16, 0, 0, 0, 1, 0, 1, 0]' : 0.17817}
{'[1, 5, 3, 5, 0, 1, 1, 0, 28, 28, 16, 0, 0, 0, 1, 0, 1, 0]' : 0.17537}
{'[1, 5, 3, 5, 0, 1, 1, 0, 28, 28, 16, 0, 0, 0, 1, 0, 1, 0]' : 0.175321}
{'[1, 5, 3, 5, 0, 1, 1, 0, 28, 28, 16, 0, 0, 0, 1, 0, 1, 0]' : 0.175363}
{'[1, 5, 3, 5, 0, 1, 1, 0, 28, 28, 16, 0, 0, 0, 1, 0, 1, 0]' : 0.175426}
{'[1, 5, 3, 5, 0, 1, 1, 0, 28, 28, 16, 0, 0, 0, 1, 0, 1, 0]' : 0.175514}
{'[1, 5, 3, 5, 0, 1, 1, 0, 28, 28, 16, 0, 0, 0, 1, 0, 1, 0]' : 0.175311}
{'[1, 5, 3, 5, 0, 1, 1, 0, 28, 28, 16, 0, 0, 0, 1, 0, 1, 0]' : 0.175321}
{'[1, 5, 3, 5, 0, 1, 1, 0, 28, 28, 16, 0, 0, 0, 1, 0, 1, 0]' : 0.175354}
{'[1, 5, 3, 5, 0, 1, 1, 0, 28, 28, 16, 0, 0, 0, 1, 0, 1, 0]' : 0.178197}
{'[1, 5, 3, 5, 0, 1, 1, 0, 28, 28, 16, 0, 0, 0, 1, 0, 1, 0]' : 0.175388}
{'[1, 5, 3, 5, 0, 1, 1, 0, 28, 28, 16, 0, 0, 0, 1, 0, 1, 0]' : 0.175244}
{'[1, 5, 3, 5, 0, 1, 1, 0, 28, 28, 16, 0, 0, 0, 1, 0, 1, 0]' : 0.175397}
{'[1, 5, 3, 5, 0, 1, 1, 0, 28, 28, 16, 0, 0, 0, 1, 0, 1, 0]' : 0.175331}
{'[1, 5, 3, 5, 0, 1, 1, 0, 28, 28, 16, 0, 0, 0, 1, 0, 1, 0]' : 0.175379}
{'[1, 5, 3, 5, 0, 1, 1, 0, 28, 28, 16, 0, 0, 0, 1, 0, 1, 0]' : 0.175364}
{'[1, 5, 3, 5, 0, 1, 1, 0, 28, 28, 16, 0, 0, 0, 1, 0, 1, 0]' : 0.175356}
{'[1, 5, 3, 5, 0, 1, 1, 0, 28, 28, 16, 0, 0, 0, 1, 0, 1, 0]' : 0.178251}
{'[1, 5, 3, 5, 0, 1, 1, 0, 28, 28, 16, 0, 0, 0, 1, 0, 1, 0]' : 0.175495}

out:
 ["{'[1, 5, 3, 5, 0, 1, 1, 0, 28, 28, 16, 0, 0, 0, 1, 0, 1, 0]' : 0.175358}", "{'[1, 5, 3, 5, 0, 1, 1, 0, 28, 28, 16, 0, 0, 0, 1, 0, 1, 0]' : 0.175356}", "{'[1, 5, 3, 5, 0, 1, 1, 0, 28, 28, 16, 0, 0, 0, 1, 0, 1, 0]' : 0.178135}", "{'[1, 5, 3, 5, 0, 1, 1, 0, 28, 28, 16, 0, 0, 0, 1, 0, 1, 0]' : 0.175424}", "{'[1, 5, 3, 5, 0, 1, 1, 0, 28, 28, 16, 0, 0, 0, 1, 0, 1, 0]' : 0.175372}", "{'[1, 5, 3, 5, 0, 1, 1, 0, 28, 28, 16, 0, 0, 0, 1, 0, 1, 0]' : 0.175504}", "{'[1, 5, 3, 5, 0, 1, 1, 0, 28, 28, 16, 0, 0, 0, 1, 0, 1, 0]' : 0.17527}", "{'[1, 5, 3, 5, 0, 1, 1, 0, 28, 28, 16, 0, 0, 0, 1, 0, 1, 0]' : 0.175387}", "{'[1, 5, 3, 5, 0, 1, 1, 0, 28, 28, 16, 0, 0, 0, 1, 0, 1, 0]' : 0.175373}", "{'[1, 5, 3, 5, 0, 1, 1, 0, 28, 28, 16, 0, 0, 0, 1, 0, 1, 0]' : 0.175393}", "{'[1, 5, 3, 5, 0, 1, 1, 0, 28, 28, 16, 0, 0, 0, 1, 0, 1, 0]' : 0.175349}", "{'[1, 5, 3, 5, 0, 1, 1, 0, 28, 28, 16, 0, 0, 0, 1, 0, 1, 0]' : 0.17817}", "{'[1, 5, 3, 5, 0, 1, 1, 0, 28, 28, 16, 0, 0, 0, 1, 0, 1, 0]' : 0.17537}", "{'[1, 5, 3, 5, 0, 1, 1, 0, 28, 28, 16, 0, 0, 0, 1, 0, 1, 0]' : 0.175321}", "{'[1, 5, 3, 5, 0, 1, 1, 0, 28, 28, 16, 0, 0, 0, 1, 0, 1, 0]' : 0.175363}", "{'[1, 5, 3, 5, 0, 1, 1, 0, 28, 28, 16, 0, 0, 0, 1, 0, 1, 0]' : 0.175426}", "{'[1, 5, 3, 5, 0, 1, 1, 0, 28, 28, 16, 0, 0, 0, 1, 0, 1, 0]' : 0.175514}", "{'[1, 5, 3, 5, 0, 1, 1, 0, 28, 28, 16, 0, 0, 0, 1, 0, 1, 0]' : 0.175311}", "{'[1, 5, 3, 5, 0, 1, 1, 0, 28, 28, 16, 0, 0, 0, 1, 0, 1, 0]' : 0.175321}", "{'[1, 5, 3, 5, 0, 1, 1, 0, 28, 28, 16, 0, 0, 0, 1, 0, 1, 0]' : 0.175354}", "{'[1, 5, 3, 5, 0, 1, 1, 0, 28, 28, 16, 0, 0, 0, 1, 0, 1, 0]' : 0.178197}", "{'[1, 5, 3, 5, 0, 1, 1, 0, 28, 28, 16, 0, 0, 0, 1, 0, 1, 0]' : 0.175388}", "{'[1, 5, 3, 5, 0, 1, 1, 0, 28, 28, 16, 0, 0, 0, 1, 0, 1, 0]' : 0.175244}", "{'[1, 5, 3, 5, 0, 1, 1, 0, 28, 28, 16, 0, 0, 0, 1, 0, 1, 0]' : 0.175397}", "{'[1, 5, 3, 5, 0, 1, 1, 0, 28, 28, 16, 0, 0, 0, 1, 0, 1, 0]' : 0.175331}", "{'[1, 5, 3, 5, 0, 1, 1, 0, 28, 28, 16, 0, 0, 0, 1, 0, 1, 0]' : 0.175379}", "{'[1, 5, 3, 5, 0, 1, 1, 0, 28, 28, 16, 0, 0, 0, 1, 0, 1, 0]' : 0.175364}", "{'[1, 5, 3, 5, 0, 1, 1, 0, 28, 28, 16, 0, 0, 0, 1, 0, 1, 0]' : 0.175356}", "{'[1, 5, 3, 5, 0, 1, 1, 0, 28, 28, 16, 0, 0, 0, 1, 0, 1, 0]' : 0.178251}", "{'[1, 5, 3, 5, 0, 1, 1, 0, 28, 28, 16, 0, 0, 0, 1, 0, 1, 0]' : 0.175495}"]
returning from 'run': {'[1, 5, 3, 5, 0, 1, 1, 0, 28, 28, 16, 0, 0, 0, 1, 0, 1, 0]': ([0.175358, 0.175356, 0.178135, 0.175424, 0.175372, 0.175504, 0.17527, 0.175387, 0.175373, 0.175393, 0.175349, 0.17817, 0.17537, 0.175321, 0.175363, 0.175426, 0.175514, 0.175311, 0.175321, 0.175354, 0.178197, 0.175388, 0.175244, 0.175397, 0.175331, 0.175379, 0.175364, 0.175356, 0.178251, 0.175495], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.175358, 0.175356, 0.178135, 0.175424, 0.175372, 0.175504, 0.17527, 0.175387, 0.175373, 0.175393, 0.175349, 0.17817, 0.17537, 0.175321, 0.175363, 0.175426, 0.175514, 0.175311, 0.175321, 0.175354, 0.178197, 0.175388, 0.175244, 0.175397, 0.175331, 0.175379, 0.175364, 0.175356, 0.178251, 0.175495], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[1, 5, 3, 5, 0, 1, 1, 0, 28, 28, 16, 0, 0, 0, 1, 0, 1, 0]': ([0.175358, 0.175356, 0.178135, 0.175424, 0.175372, 0.175504, 0.17527, 0.175387, 0.175373, 0.175393, 0.175349, 0.17817, 0.17537, 0.175321, 0.175363, 0.175426, 0.175514, 0.175311, 0.175321, 0.175354, 0.178197, 0.175388, 0.175244, 0.175397, 0.175331, 0.175379, 0.175364, 0.175356, 0.178251, 0.175495], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [0, 2, 0, 2, 4, 6, 1, 1, 3, 21, 17, 0, 0, 0, 0, 0, 1, 0]
Fixed Factors: {}
Testing candidate 11: [0, 2, 0, 2, 4, 6, 1, 1, 3, 21, 17, 0, 0, 0, 0, 0, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	128
        Max loop nest depth: 	5
        Additions: 		4137
        Multiplications: 	920
        Divisions: 		0
        Logical: 		0
        Reads: 			6470
        Writes: 		816
        Comparisons:		128
        Gotos: 			0
        
digraph CFG {
	ForLoop1873650 [label="ForLoop1873650  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jj)+1)%18)+1; j<=min(ny-1,jj+31); j=j+1) ...",shape=box];
	ForLoop1873650 -> 1873649;
	ForLoop1873650 -> _JOIN_1873650;
	1875240 [label="1875240  for (j=jj; j<=min(ny-1,jj+31); j=j+1) ...",shape=box];
	1889993 [label="1889993  tmp[i]=tmp[i]+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	1871345 [label="1871345  for (j=jj; j<=min(ny-1,jj+31); j=j+1) ...",shape=box];
	_JOIN_1881440 [label="_JOIN_1881440None...",shape=box];
	_JOIN_1881440 -> 1881472;
	1889121 [label="1889121  for (k=kkk; k<=min(ny-1,kkk+2047); k=k+1) ...",shape=box];
	_JOIN_1875128 [label="_JOIN_1875128None...",shape=box];
	_JOIN_1875128 -> ForLoop1875208;
	ForLoop1886034 [label="ForLoop1886034  for (j=jj; j<=min(ny-1,jj+31)-17; j=j+18) {...",shape=box];
	ForLoop1886034 -> 1885420;
	ForLoop1886034 -> _JOIN_1886034;
	1883030 [label="1883030  for (j=jj; j<=min(ny-1,jj+31); j=j+1) ...",shape=box];
	ForLoop1884476 [label="ForLoop1884476  for (j=jj; j<=min(ny-1,jj+31)-17; j=j+18) {...",shape=box];
	ForLoop1884476 -> 1883862;
	ForLoop1884476 -> _JOIN_1884476;
	1822699 [label="1822699  int i;...",shape=box];
	_JOIN_1879802 [label="_JOIN_1879802None...",shape=box];
	_JOIN_1879802 -> ForLoop1879882;
	ForLoop1822899 [label="ForLoop1822899  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop1822899 -> 1822898;
	ForLoop1822899 -> _JOIN_1822899;
	ForLoop1822830 [label="ForLoop1822830  for (i=0; i<=cbv_1; i=i+4) {...",shape=box];
	ForLoop1822830 -> 1822801;
	ForLoop1822830 -> _JOIN_1822830;
	_JOIN_1889774 [label="_JOIN_1889774None...",shape=box];
	_JOIN_1889774 -> _JOIN_1889776;
	_JOIN_1887675 [label="_JOIN_1887675None...",shape=box];
	_JOIN_1887675 -> _JOIN_1887677;
	_JOIN_1887677 [label="_JOIN_1887677None...",shape=box];
	_JOIN_1887677 -> ForLoop1889774;
	1890573 [label="1890573  for (k=kkk; k<=min(ny-1,kkk+2047); k=k+1) ...",shape=box];
	1890573 -> ForLoop1890618;
	_JOIN_1887672 [label="_JOIN_1887672None...",shape=box];
	_JOIN_1887672 -> _JOIN_1887675;
	_JOIN_1873570 [label="_JOIN_1873570None...",shape=box];
	_JOIN_1873570 -> ForLoop1873650;
	_JOIN_1874429 [label="_JOIN_1874429None...",shape=box];
	_JOIN_1874429 -> 1874461;
	1872956 [label="1872956  tmp[(i+3)]=tmp[(i+3)]+A[(i+3)*ny+j]*x_copy[(j-jj)];...",shape=box];
	1876019 [label="1876019  for (j=jj; j<=min(ny-1,jj+31); j=j+1) ...",shape=box];
	_JOIN_1822830 [label="_JOIN_1822830None...",shape=box];
	_JOIN_1822830 -> 1822976;
	_JOIN_1882219 [label="_JOIN_1882219None...",shape=box];
	_JOIN_1882219 -> 1882251;
	ForLoop1871242 [label="ForLoop1871242  for (j=jj; j<=min(ny-1,jj+31)-17; j=j+18) {...",shape=box];
	ForLoop1871242 -> 1870781;
	ForLoop1871242 -> _JOIN_1871242;
	1877577 [label="1877577  for (j=jj; j<=min(ny-1,jj+31); j=j+1) ...",shape=box];
	ForLoop1879103 [label="ForLoop1879103  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jj)+1)%18)+1; j<=min(ny-1,jj+31); j=j+1) ...",shape=box];
	ForLoop1879103 -> 1879102;
	ForLoop1879103 -> _JOIN_1879103;
	1873649 [label="1873649  tmp[(i+3)]=tmp[(i+3)]+A[(i+3)*ny+j]*x_copy[(j-jj)];...",shape=box];
	1873649 -> _JOIN_1873650;
	_JOIN_1879882 [label="_JOIN_1879882None...",shape=box];
	_JOIN_1879882 -> 1879914;
	_JOIN_1875987 [label="_JOIN_1875987None...",shape=box];
	_JOIN_1875987 -> 1876019;
	1890649 [label="1890649  for (k=kkk; k<=min(ny-1,kkk+2047); k=k+1) ...",shape=box];
	1890649 -> _JOIN_1890651;
	_JOIN_1886034 [label="_JOIN_1886034None...",shape=box];
	_JOIN_1886034 -> ForLoop1886114;
	1879967 [label="1879967  tmp[(i+12)]=tmp[(i+12)]+A[(i+12)*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop1872012 [label="ForLoop1872012  for (j=jj; j<=min(ny-1,jj+31)-17; j=j+18) {...",shape=box];
	ForLoop1872012 -> 1871398;
	ForLoop1872012 -> _JOIN_1872012;
	_JOIN_1884476 [label="_JOIN_1884476None...",shape=box];
	_JOIN_1884476 -> ForLoop1884556;
	_JOIN_1886813 [label="_JOIN_1886813None...",shape=box];
	_JOIN_1886813 -> ForLoop1886893;
	1876765 [label="1876765  tmp[(i+7)]=tmp[(i+7)]+A[(i+7)*ny+j]*x_copy[(j-jj)];...",shape=box];
	1876765 -> _JOIN_1876766;
	ForLoop1872092 [label="ForLoop1872092  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jj)+1)%18)+1; j<=min(ny-1,jj+31); j=j+1) ...",shape=box];
	ForLoop1872092 -> 1872091;
	ForLoop1872092 -> _JOIN_1872092;
	1878323 [label="1878323  tmp[(i+9)]=tmp[(i+9)]+A[(i+9)*ny+j]*x_copy[(j-jj)];...",shape=box];
	1878323 -> _JOIN_1878324;
	_JOIN_1885255 [label="_JOIN_1885255None...",shape=box];
	_JOIN_1885255 -> ForLoop1885335;
	1879881 [label="1879881  tmp[(i+11)]=tmp[(i+11)]+A[(i+11)*ny+j]*x_copy[(j-jj)];...",shape=box];
	1879881 -> _JOIN_1879882;
	ForLoop1889090 [label="ForLoop1889090  for (k=kkk; k<=min(ny-1,kkk+2047); k=k+1) {...",shape=box];
	ForLoop1889090 -> 1888416;
	ForLoop1889090 -> _JOIN_1889090;
	ForLoop1886813 [label="ForLoop1886813  for (j=jj; j<=min(ny-1,jj+31)-17; j=j+18) {...",shape=box];
	ForLoop1886813 -> 1886199;
	ForLoop1886813 -> _JOIN_1886813;
	1886978 [label="1886978  tmp[(i+21)]=tmp[(i+21)]+A[(i+21)*ny+j]*x_copy[(j-jj)];...",shape=box];
	1877544 [label="1877544  tmp[(i+8)]=tmp[(i+8)]+A[(i+8)*ny+j]*x_copy[(j-jj)];...",shape=box];
	1877544 -> _JOIN_1877545;
	1873735 [label="1873735  tmp[(i+4)]=tmp[(i+4)]+A[(i+4)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_1884556 [label="_JOIN_1884556None...",shape=box];
	_JOIN_1884556 -> 1884588;
	1875986 [label="1875986  tmp[(i+6)]=tmp[(i+6)]+A[(i+6)*ny+j]*x_copy[(j-jj)];...",shape=box];
	1875986 -> _JOIN_1875987;
	_JOIN_1883697 [label="_JOIN_1883697None...",shape=box];
	_JOIN_1883697 -> ForLoop1883777;
	_JOIN_1882139 [label="_JOIN_1882139None...",shape=box];
	_JOIN_1882139 -> ForLoop1882219;
	_JOIN_1875907 [label="_JOIN_1875907None...",shape=box];
	_JOIN_1875907 -> ForLoop1875987;
	1878409 [label="1878409  tmp[(i+10)]=tmp[(i+10)]+A[(i+10)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_1882998 [label="_JOIN_1882998None...",shape=box];
	_JOIN_1882998 -> 1883030;
	1887721 [label="1887721  for (k=kkk; k<=min(ny-1,kkk+2047); k=k+1) ...",shape=box];
	1881439 [label="1881439  tmp[(i+13)]=tmp[(i+13)]+A[(i+13)*ny+j]*x_copy[(j-jj)];...",shape=box];
	1881439 -> _JOIN_1881440;
	1885334 [label="1885334  tmp[(i+18)]=tmp[(i+18)]+A[(i+18)*ny+j]*x_copy[(j-jj)];...",shape=box];
	1885334 -> _JOIN_1885335;
	ForLoop1880661 [label="ForLoop1880661  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jj)+1)%18)+1; j<=min(ny-1,jj+31); j=j+1) ...",shape=box];
	ForLoop1880661 -> 1880660;
	ForLoop1880661 -> _JOIN_1880661;
	_JOIN_1871313 [label="_JOIN_1871313None...",shape=box];
	_JOIN_1871313 -> 1871345;
	_JOIN_1887592 [label="_JOIN_1887592None...",shape=box];
	_JOIN_1887592 -> ForLoop1887672;
	ForLoop1889776 [label="ForLoop1889776  for (i=iii; i<=min(nx-1,iii+127)-21; i=i+22) {...",shape=box];
	ForLoop1889776 -> 1870486;
	ForLoop1889776 -> _JOIN_1889776;
	1876798 [label="1876798  for (j=jj; j<=min(ny-1,jj+31); j=j+1) ...",shape=box];
	ForLoop1825133 [label="ForLoop1825133  for (iii=0; iii<=nx-1; iii=iii+128) {...",shape=box];
	ForLoop1825133 -> 1838707;
	ForLoop1825133 -> _JOIN_1825133;
	ForLoop1887672 [label="ForLoop1887672  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jj)+1)%18)+1; j<=min(ny-1,jj+31); j=j+1) ...",shape=box];
	ForLoop1887672 -> 1887671;
	ForLoop1887672 -> _JOIN_1887672;
	1881525 [label="1881525  tmp[(i+14)]=tmp[(i+14)]+A[(i+14)*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop1887675 [label="ForLoop1887675  for (jj=jjj; jj<=min(ny-1,jjj+480); jj=jj+32) {...",shape=box];
	ForLoop1887675 -> 1870737;
	ForLoop1887675 -> _JOIN_1887675;
	_JOIN_1886893 [label="_JOIN_1886893None...",shape=box];
	_JOIN_1886893 -> 1886925;
	ForLoop1887677 [label="ForLoop1887677  for (jjj=0; jjj<=ny-1; jjj=jjj+512) {...",shape=box];
	ForLoop1887677 -> ForLoop1887675;
	ForLoop1887677 -> _JOIN_1887677;
	_JOIN_1880661 [label="_JOIN_1880661None...",shape=box];
	_JOIN_1880661 -> 1880693;
	ForLoop1872871 [label="ForLoop1872871  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jj)+1)%18)+1; j<=min(ny-1,jj+31); j=j+1) ...",shape=box];
	ForLoop1872871 -> 1872870;
	ForLoop1872871 -> _JOIN_1872871;
	1879102 [label="1879102  tmp[(i+10)]=tmp[(i+10)]+A[(i+10)*ny+j]*x_copy[(j-jj)];...",shape=box];
	1879102 -> _JOIN_1879103;
	1889887 [label="1889887  tmp[i]=0;...",shape=box];
	1889887 -> ForLoop1890529;
	1883862 [label="1883862  tmp[(i+17)]=tmp[(i+17)]+A[(i+17)*ny+j]*x_copy[(j-jj)];...",shape=box];
	1822898 [label="1822898  y[i]=0.0;...",shape=box];
	1822898 -> _JOIN_1822899;
	1882218 [label="1882218  tmp[(i+14)]=tmp[(i+14)]+A[(i+14)*ny+j]*x_copy[(j-jj)];...",shape=box];
	1882218 -> _JOIN_1882219;
	1874428 [label="1874428  tmp[(i+4)]=tmp[(i+4)]+A[(i+4)*ny+j]*x_copy[(j-jj)];...",shape=box];
	1874428 -> _JOIN_1874429;
	ForLoop1890454 [label="ForLoop1890454  for (j=jj; j<=min(ny-1,jj+31)-17; j=j+18) {...",shape=box];
	ForLoop1890454 -> 1889993;
	ForLoop1890454 -> _JOIN_1890454;
	ForLoop1890651 [label="ForLoop1890651  for (kkk=0; kkk<=ny-1; kkk=kkk+2048) {...",shape=box];
	ForLoop1890651 -> 1890573;
	ForLoop1890651 -> _JOIN_1890651;
	_JOIN_1878324 [label="_JOIN_1878324None...",shape=box];
	_JOIN_1878324 -> 1878356;
	1872870 [label="1872870  tmp[(i+2)]=tmp[(i+2)]+A[(i+2)*ny+j]*x_copy[(j-jj)];...",shape=box];
	1872870 -> _JOIN_1872871;
	1886199 [label="1886199  tmp[(i+20)]=tmp[(i+20)]+A[(i+20)*ny+j]*x_copy[(j-jj)];...",shape=box];
	1870737 [label="1870737  for (j=jj; j<=min(ny-1,jj+31); j=j+1) ...",shape=box];
	ForLoop1873570 [label="ForLoop1873570  for (j=jj; j<=min(ny-1,jj+31)-17; j=j+18) {...",shape=box];
	ForLoop1873570 -> 1872956;
	ForLoop1873570 -> _JOIN_1873570;
	ForLoop1890618 [label="ForLoop1890618  for (k=kkk; k<=min(ny-1,kkk+2047); k=k+1) ...",shape=box];
	ForLoop1890618 -> 1890617;
	ForLoop1890618 -> _JOIN_1890618;
	1884641 [label="1884641  tmp[(i+18)]=tmp[(i+18)]+A[(i+18)*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop1889774 [label="ForLoop1889774  for (kkk=0; kkk<=ny-1; kkk=kkk+2048) {...",shape=box];
	ForLoop1889774 -> 1887721;
	ForLoop1889774 -> _JOIN_1889774;
	ForLoop1886893 [label="ForLoop1886893  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jj)+1)%18)+1; j<=min(ny-1,jj+31); j=j+1) ...",shape=box];
	ForLoop1886893 -> 1886892;
	ForLoop1886893 -> _JOIN_1886893;
	ForLoop1880581 [label="ForLoop1880581  for (j=jj; j<=min(ny-1,jj+31)-17; j=j+18) {...",shape=box];
	ForLoop1880581 -> 1879967;
	ForLoop1880581 -> _JOIN_1880581;
	1883776 [label="1883776  tmp[(i+16)]=tmp[(i+16)]+A[(i+16)*ny+j]*x_copy[(j-jj)];...",shape=box];
	1883776 -> _JOIN_1883777;
	1879914 [label="1879914  for (j=jj; j<=min(ny-1,jj+31); j=j+1) ...",shape=box];
	ForLoop1871313 [label="ForLoop1871313  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jj)+1)%18)+1; j<=min(ny-1,jj+31); j=j+1) ...",shape=box];
	ForLoop1871313 -> 1871312;
	ForLoop1871313 -> _JOIN_1871313;
	_JOIN_1871242 [label="_JOIN_1871242None...",shape=box];
	_JOIN_1871242 -> ForLoop1871313;
	1886892 [label="1886892  tmp[(i+20)]=tmp[(i+20)]+A[(i+20)*ny+j]*x_copy[(j-jj)];...",shape=box];
	1886892 -> _JOIN_1886893;
	_JOIN_1877545 [label="_JOIN_1877545None...",shape=box];
	_JOIN_1877545 -> 1877577;
	_JOIN_1876766 [label="_JOIN_1876766None...",shape=box];
	_JOIN_1876766 -> 1876798;
	_JOIN_1885335 [label="_JOIN_1885335None...",shape=box];
	_JOIN_1885335 -> 1885367;
	ForLoop1885335 [label="ForLoop1885335  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jj)+1)%18)+1; j<=min(ny-1,jj+31); j=j+1) ...",shape=box];
	ForLoop1885335 -> 1885334;
	ForLoop1885335 -> _JOIN_1885335;
	_JOIN_1890528 [label="_JOIN_1890528None...",shape=box];
	_JOIN_1890528 -> _JOIN_1890529;
	_JOIN_1890529 [label="_JOIN_1890529None...",shape=box];
	_JOIN_1890529 -> ForLoop1890651;
	ForLoop1887592 [label="ForLoop1887592  for (j=jj; j<=min(ny-1,jj+31)-17; j=j+18) {...",shape=box];
	ForLoop1887592 -> 1886978;
	ForLoop1887592 -> _JOIN_1887592;
	1883083 [label="1883083  tmp[(i+16)]=tmp[(i+16)]+A[(i+16)*ny+j]*x_copy[(j-jj)];...",shape=box];
	1887671 [label="1887671  tmp[(i+21)]=tmp[(i+21)]+A[(i+21)*ny+j]*x_copy[(j-jj)];...",shape=box];
	1887671 -> _JOIN_1887672;
	1870486 [label="1870486  tmp[i]=0;...",shape=box];
	_JOIN_1890525 [label="_JOIN_1890525None...",shape=box];
	_JOIN_1890525 -> _JOIN_1890528;
	1875207 [label="1875207  tmp[(i+5)]=tmp[(i+5)]+A[(i+5)*ny+j]*x_copy[(j-jj)];...",shape=box];
	1875207 -> _JOIN_1875208;
	_JOIN_1879023 [label="_JOIN_1879023None...",shape=box];
	_JOIN_1879023 -> ForLoop1879103;
	_JOIN_1875208 [label="_JOIN_1875208None...",shape=box];
	_JOIN_1875208 -> 1875240;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 1822699;
	1875293 [label="1875293  tmp[(i+6)]=tmp[(i+6)]+A[(i+6)*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop1890653 [label="ForLoop1890653  for (i=(min(nx-1,iii+127))-(((min(nx-1,iii+127))-(iii)+1)%22)+1; i<=min(nx-1,iii+127); i=i+1) {...",shape=box];
	ForLoop1890653 -> 1889887;
	ForLoop1890653 -> _JOIN_1890653;
	1880746 [label="1880746  tmp[(i+13)]=tmp[(i+13)]+A[(i+13)*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop1875907 [label="ForLoop1875907  for (j=jj; j<=min(ny-1,jj+31)-17; j=j+18) {...",shape=box];
	ForLoop1875907 -> 1875293;
	ForLoop1875907 -> _JOIN_1875907;
	1838707 [label="1838707  int i;...",shape=box];
	1838707 -> ForLoop1889776;
	_JOIN_1890618 [label="_JOIN_1890618None...",shape=box];
	_JOIN_1890618 -> 1890649;
	_JOIN_1879103 [label="_JOIN_1879103None...",shape=box];
	_JOIN_1879103 -> 1879135;
	ForLoop1881440 [label="ForLoop1881440  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jj)+1)%18)+1; j<=min(ny-1,jj+31); j=j+1) ...",shape=box];
	ForLoop1881440 -> 1881439;
	ForLoop1881440 -> _JOIN_1881440;
	ForLoop1878244 [label="ForLoop1878244  for (j=jj; j<=min(ny-1,jj+31)-17; j=j+18) {...",shape=box];
	ForLoop1878244 -> 1877630;
	ForLoop1878244 -> _JOIN_1878244;
	1876851 [label="1876851  tmp[(i+8)]=tmp[(i+8)]+A[(i+8)*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop1881360 [label="ForLoop1881360  for (j=jj; j<=min(ny-1,jj+31)-17; j=j+18) {...",shape=box];
	ForLoop1881360 -> 1880746;
	ForLoop1881360 -> _JOIN_1881360;
	_JOIN_1874349 [label="_JOIN_1874349None...",shape=box];
	_JOIN_1874349 -> ForLoop1874429;
	1872903 [label="1872903  for (j=jj; j<=min(ny-1,jj+31); j=j+1) ...",shape=box];
	1879188 [label="1879188  tmp[(i+11)]=tmp[(i+11)]+A[(i+11)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_1889776 [label="_JOIN_1889776None...",shape=box];
	_JOIN_1889776 -> ForLoop1890653;
	ForLoop1875987 [label="ForLoop1875987  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jj)+1)%18)+1; j<=min(ny-1,jj+31); j=j+1) ...",shape=box];
	ForLoop1875987 -> 1875986;
	ForLoop1875987 -> _JOIN_1875987;
	1882997 [label="1882997  tmp[(i+15)]=tmp[(i+15)]+A[(i+15)*ny+j]*x_copy[(j-jj)];...",shape=box];
	1882997 -> _JOIN_1882998;
	1880660 [label="1880660  tmp[(i+12)]=tmp[(i+12)]+A[(i+12)*ny+j]*x_copy[(j-jj)];...",shape=box];
	1880660 -> _JOIN_1880661;
	1871398 [label="1871398  tmp[(i+1)]=tmp[(i+1)]+A[(i+1)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_1882918 [label="_JOIN_1882918None...",shape=box];
	_JOIN_1882918 -> ForLoop1882998;
	1877630 [label="1877630  tmp[(i+9)]=tmp[(i+9)]+A[(i+9)*ny+j]*x_copy[(j-jj)];...",shape=box];
	1873682 [label="1873682  for (j=jj; j<=min(ny-1,jj+31); j=j+1) ...",shape=box];
	ForLoop1883697 [label="ForLoop1883697  for (j=jj; j<=min(ny-1,jj+31)-17; j=j+18) {...",shape=box];
	ForLoop1883697 -> 1883083;
	ForLoop1883697 -> _JOIN_1883697;
	ForLoop1879023 [label="ForLoop1879023  for (j=jj; j<=min(ny-1,jj+31)-17; j=j+18) {...",shape=box];
	ForLoop1879023 -> 1878409;
	ForLoop1879023 -> _JOIN_1879023;
	1884555 [label="1884555  tmp[(i+17)]=tmp[(i+17)]+A[(i+17)*ny+j]*x_copy[(j-jj)];...",shape=box];
	1884555 -> _JOIN_1884556;
	1886925 [label="1886925  for (j=jj; j<=min(ny-1,jj+31); j=j+1) ...",shape=box];
	1874514 [label="1874514  tmp[(i+5)]=tmp[(i+5)]+A[(i+5)*ny+j]*x_copy[(j-jj)];...",shape=box];
	1883809 [label="1883809  for (j=jj; j<=min(ny-1,jj+31); j=j+1) ...",shape=box];
	ForLoop1890528 [label="ForLoop1890528  for (jj=jjj; jj<=min(ny-1,jjj+480); jj=jj+32) {...",shape=box];
	ForLoop1890528 -> 1889949;
	ForLoop1890528 -> _JOIN_1890528;
	_JOIN_1872092 [label="_JOIN_1872092None...",shape=box];
	_JOIN_1872092 -> 1872124;
	_JOIN_1889090 [label="_JOIN_1889090None...",shape=box];
	_JOIN_1889090 -> 1889121;
	1822801 [label="1822801  y[i]=0.0;...",shape=box];
	ForLoop1874349 [label="ForLoop1874349  for (j=jj; j<=min(ny-1,jj+31)-17; j=j+18) {...",shape=box];
	ForLoop1874349 -> 1873735;
	ForLoop1874349 -> _JOIN_1874349;
	1872177 [label="1872177  tmp[(i+2)]=tmp[(i+2)]+A[(i+2)*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop1890529 [label="ForLoop1890529  for (jjj=0; jjj<=ny-1; jjj=jjj+512) ...",shape=box];
	ForLoop1890529 -> ForLoop1890528;
	ForLoop1890529 -> _JOIN_1890529;
	_JOIN_1825133 [label="_JOIN_1825133None...",shape=box];
	ForLoop1882918 [label="ForLoop1882918  for (j=jj; j<=min(ny-1,jj+31)-17; j=j+18) {...",shape=box];
	ForLoop1882918 -> 1882304;
	ForLoop1882918 -> _JOIN_1882918;
	_JOIN_1881360 [label="_JOIN_1881360None...",shape=box];
	_JOIN_1881360 -> ForLoop1881440;
	_JOIN_1872012 [label="_JOIN_1872012None...",shape=box];
	_JOIN_1872012 -> ForLoop1872092;
	1884588 [label="1884588  for (j=jj; j<=min(ny-1,jj+31); j=j+1) ...",shape=box];
	1890524 [label="1890524  tmp[i]=tmp[i]+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	1890524 -> _JOIN_1890525;
	_JOIN_1872791 [label="_JOIN_1872791None...",shape=box];
	_JOIN_1872791 -> ForLoop1872871;
	1870781 [label="1870781  tmp[i]=tmp[i]+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	1882251 [label="1882251  for (j=jj; j<=min(ny-1,jj+31); j=j+1) ...",shape=box];
	1879135 [label="1879135  for (j=jj; j<=min(ny-1,jj+31); j=j+1) ...",shape=box];
	1890617 [label="1890617  y_copy[(k-kkk)]=y_copy[(k-kkk)]+A[i*ny+k]*tmp[i];...",shape=box];
	1890617 -> _JOIN_1890618;
	ForLoop1878324 [label="ForLoop1878324  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jj)+1)%18)+1; j<=min(ny-1,jj+31); j=j+1) ...",shape=box];
	ForLoop1878324 -> 1878323;
	ForLoop1878324 -> _JOIN_1878324;
	_JOIN_1890653 [label="_JOIN_1890653None...",shape=box];
	_JOIN_1890653 -> _JOIN_1825133;
	_JOIN_1890651 [label="_JOIN_1890651None...",shape=box];
	_JOIN_1890651 -> _JOIN_1890653;
	ForLoop1875208 [label="ForLoop1875208  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jj)+1)%18)+1; j<=min(ny-1,jj+31); j=j+1) ...",shape=box];
	ForLoop1875208 -> 1875207;
	ForLoop1875208 -> _JOIN_1875208;
	ForLoop1886114 [label="ForLoop1886114  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jj)+1)%18)+1; j<=min(ny-1,jj+31); j=j+1) ...",shape=box];
	ForLoop1886114 -> 1886113;
	ForLoop1886114 -> _JOIN_1886114;
	1885420 [label="1885420  tmp[(i+19)]=tmp[(i+19)]+A[(i+19)*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop1882139 [label="ForLoop1882139  for (j=jj; j<=min(ny-1,jj+31)-17; j=j+18) {...",shape=box];
	ForLoop1882139 -> 1881525;
	ForLoop1882139 -> _JOIN_1882139;
	ForLoop1883777 [label="ForLoop1883777  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jj)+1)%18)+1; j<=min(ny-1,jj+31); j=j+1) ...",shape=box];
	ForLoop1883777 -> 1883776;
	ForLoop1883777 -> _JOIN_1883777;
	1886146 [label="1886146  for (j=jj; j<=min(ny-1,jj+31); j=j+1) ...",shape=box];
	ForLoop1879882 [label="ForLoop1879882  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jj)+1)%18)+1; j<=min(ny-1,jj+31); j=j+1) ...",shape=box];
	ForLoop1879882 -> 1879881;
	ForLoop1879882 -> _JOIN_1879882;
	ForLoop1872791 [label="ForLoop1872791  for (j=jj; j<=min(ny-1,jj+31)-17; j=j+18) {...",shape=box];
	ForLoop1872791 -> 1872177;
	ForLoop1872791 -> _JOIN_1872791;
	_JOIN_1872871 [label="_JOIN_1872871None...",shape=box];
	_JOIN_1872871 -> 1872903;
	_JOIN_1873650 [label="_JOIN_1873650None...",shape=box];
	_JOIN_1873650 -> 1873682;
	1822976 [label="1822976  register int cbv_2, cbv_3;...",shape=box];
	1888416 [label="1888416  y_copy[(k-kkk)]=y_copy[(k-kkk)]+A[i*ny+k]*tmp[i];...",shape=box];
	1889949 [label="1889949  for (j=jj; j<=min(ny-1,jj+31); j=j+1) ...",shape=box];
	1878356 [label="1878356  for (j=jj; j<=min(ny-1,jj+31); j=j+1) ...",shape=box];
	1871312 [label="1871312  tmp[i]=tmp[i]+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	1871312 -> _JOIN_1871313;
	1882304 [label="1882304  tmp[(i+15)]=tmp[(i+15)]+A[(i+15)*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop1879802 [label="ForLoop1879802  for (j=jj; j<=min(ny-1,jj+31)-17; j=j+18) {...",shape=box];
	ForLoop1879802 -> 1879188;
	ForLoop1879802 -> _JOIN_1879802;
	_JOIN_1880581 [label="_JOIN_1880581None...",shape=box];
	_JOIN_1880581 -> ForLoop1880661;
	1881472 [label="1881472  for (j=jj; j<=min(ny-1,jj+31); j=j+1) ...",shape=box];
	1872124 [label="1872124  for (j=jj; j<=min(ny-1,jj+31); j=j+1) ...",shape=box];
	_JOIN_1876686 [label="_JOIN_1876686None...",shape=box];
	_JOIN_1876686 -> ForLoop1876766;
	_JOIN_1886114 [label="_JOIN_1886114None...",shape=box];
	_JOIN_1886114 -> 1886146;
	ForLoop1882998 [label="ForLoop1882998  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jj)+1)%18)+1; j<=min(ny-1,jj+31); j=j+1) ...",shape=box];
	ForLoop1882998 -> 1882997;
	ForLoop1882998 -> _JOIN_1882998;
	ForLoop1885255 [label="ForLoop1885255  for (j=jj; j<=min(ny-1,jj+31)-17; j=j+18) {...",shape=box];
	ForLoop1885255 -> 1884641;
	ForLoop1885255 -> _JOIN_1885255;
	_JOIN_1890454 [label="_JOIN_1890454None...",shape=box];
	_JOIN_1890454 -> ForLoop1890525;
	1874461 [label="1874461  for (j=jj; j<=min(ny-1,jj+31); j=j+1) ...",shape=box];
	1876072 [label="1876072  tmp[(i+7)]=tmp[(i+7)]+A[(i+7)*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop1876766 [label="ForLoop1876766  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jj)+1)%18)+1; j<=min(ny-1,jj+31); j=j+1) ...",shape=box];
	ForLoop1876766 -> 1876765;
	ForLoop1876766 -> _JOIN_1876766;
	1829531 [label="1829531  double x_copy[32];...",shape=box];
	_JOIN_1822899 [label="_JOIN_1822899None...",shape=box];
	_JOIN_1822899 -> 1829531;
	1885367 [label="1885367  for (j=jj; j<=min(ny-1,jj+31); j=j+1) ...",shape=box];
	_JOIN_1878244 [label="_JOIN_1878244None...",shape=box];
	_JOIN_1878244 -> ForLoop1878324;
	1872091 [label="1872091  tmp[(i+1)]=tmp[(i+1)]+A[(i+1)*ny+j]*x_copy[expected=9369846271501.798828
actual=9369846271501.798828
(j-jj)];...",shape=box];
	1872091 -> _JOIN_1872092;
	1880693 [label="1880693  for (j=jj; j<=min(ny-1,jj+31); j=j+1) ...",shape=box];
	_JOIN_1877465 [label="_JOIN_1877465None...",shape=box];
	_JOIN_1877465 -> ForLoop1877545;
	ForLoop1877465 [label="ForLoop1877465  for (j=jj; j<=min(ny-1,jj+31)-17; j=j+18) {...",shape=box];
	ForLoop1877465 -> 1876851;
	ForLoop1877465 -> _JOIN_1877465;
	ForLoop1877545 [label="ForLoop1877545  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jj)+1)%18)+1; j<=min(ny-1,jj+31); j=j+1) ...",shape=box];
	ForLoop1877545 -> 1877544;
	ForLoop1877545 -> _JOIN_1877545;
	ForLoop1882219 [label="ForLoop1882219  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jj)+1)%18)+1; j<=min(ny-1,jj+31); j=j+1) ...",shape=box];
	ForLoop1882219 -> 1882218;
	ForLoop1882219 -> _JOIN_1882219;
	ForLoop1890525 [label="ForLoop1890525  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jj)+1)%18)+1; j<=min(ny-1,jj+31); j=j+1) ...",shape=box];
	ForLoop1890525 -> 1890524;
	ForLoop1890525 -> _JOIN_1890525;
	ForLoop1874429 [label="ForLoop1874429  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jj)+1)%18)+1; j<=min(ny-1,jj+31); j=j+1) ...",shape=box];
	ForLoop1874429 -> 1874428;
	ForLoop1874429 -> _JOIN_1874429;
	1886113 [label="1886113  tmp[(i+19)]=tmp[(i+19)]+A[(i+19)*ny+j]*x_copy[(j-jj)];...",shape=box];
	1886113 -> _JOIN_1886114;
	ForLoop1884556 [label="ForLoop1884556  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jj)+1)%18)+1; j<=min(ny-1,jj+31); j=j+1) ...",shape=box];
	ForLoop1884556 -> 1884555;
	ForLoop1884556 -> _JOIN_1884556;
	ForLoop1875128 [label="ForLoop1875128  for (j=jj; j<=min(ny-1,jj+31)-17; j=j+18) {...",shape=box];
	ForLoop1875128 -> 1874514;
	ForLoop1875128 -> _JOIN_1875128;
	ForLoop1876686 [label="ForLoop1876686  for (j=jj; j<=min(ny-1,jj+31)-17; j=j+18) {...",shape=box];
	ForLoop1876686 -> 1876072;
	ForLoop1876686 -> _JOIN_1876686;
	_JOIN_1883777 [label="_JOIN_1883777None...",shape=box];
	_JOIN_1883777 -> 1883809;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest11.exe __orio_perftest11.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest11.exe  
{'[0, 2, 0, 2, 4, 6, 1, 1, 3, 21, 17, 0, 0, 0, 0, 0, 1, 0]' : 0.176209}
{'[0, 2, 0, 2, 4, 6, 1, 1, 3, 21, 17, 0, 0, 0, 0, 0, 1, 0]' : 0.176154}
{'[0, 2, 0, 2, 4, 6, 1, 1, 3, 21, 17, 0, 0, 0, 0, 0, 1, 0]' : 0.175911}
{'[0, 2, 0, 2, 4, 6, 1, 1, 3, 21, 17, 0, 0, 0, 0, 0, 1, 0]' : 0.176059}
{'[0, 2, 0, 2, 4, 6, 1, 1, 3, 21, 17, 0, 0, 0, 0, 0, 1, 0]' : 0.175966}
{'[0, 2, 0, 2, 4, 6, 1, 1, 3, 21, 17, 0, 0, 0, 0, 0, 1, 0]' : 0.175735}
{'[0, 2, 0, 2, 4, 6, 1, 1, 3, 21, 17, 0, 0, 0, 0, 0, 1, 0]' : 0.17613}
{'[0, 2, 0, 2, 4, 6, 1, 1, 3, 21, 17, 0, 0, 0, 0, 0, 1, 0]' : 0.176072}
{'[0, 2, 0, 2, 4, 6, 1, 1, 3, 21, 17, 0, 0, 0, 0, 0, 1, 0]' : 0.175884}
{'[0, 2, 0, 2, 4, 6, 1, 1, 3, 21, 17, 0, 0, 0, 0, 0, 1, 0]' : 0.176164}
{'[0, 2, 0, 2, 4, 6, 1, 1, 3, 21, 17, 0, 0, 0, 0, 0, 1, 0]' : 0.175868}
{'[0, 2, 0, 2, 4, 6, 1, 1, 3, 21, 17, 0, 0, 0, 0, 0, 1, 0]' : 0.175895}
{'[0, 2, 0, 2, 4, 6, 1, 1, 3, 21, 17, 0, 0, 0, 0, 0, 1, 0]' : 0.176331}
{'[0, 2, 0, 2, 4, 6, 1, 1, 3, 21, 17, 0, 0, 0, 0, 0, 1, 0]' : 0.176012}
{'[0, 2, 0, 2, 4, 6, 1, 1, 3, 21, 17, 0, 0, 0, 0, 0, 1, 0]' : 0.176078}
{'[0, 2, 0, 2, 4, 6, 1, 1, 3, 21, 17, 0, 0, 0, 0, 0, 1, 0]' : 0.176152}
{'[0, 2, 0, 2, 4, 6, 1, 1, 3, 21, 17, 0, 0, 0, 0, 0, 1, 0]' : 0.175998}
{'[0, 2, 0, 2, 4, 6, 1, 1, 3, 21, 17, 0, 0, 0, 0, 0, 1, 0]' : 0.17607}
{'[0, 2, 0, 2, 4, 6, 1, 1, 3, 21, 17, 0, 0, 0, 0, 0, 1, 0]' : 0.176431}
{'[0, 2, 0, 2, 4, 6, 1, 1, 3, 21, 17, 0, 0, 0, 0, 0, 1, 0]' : 0.179429}
{'[0, 2, 0, 2, 4, 6, 1, 1, 3, 21, 17, 0, 0, 0, 0, 0, 1, 0]' : 0.177393}
{'[0, 2, 0, 2, 4, 6, 1, 1, 3, 21, 17, 0, 0, 0, 0, 0, 1, 0]' : 0.176055}
{'[0, 2, 0, 2, 4, 6, 1, 1, 3, 21, 17, 0, 0, 0, 0, 0, 1, 0]' : 0.176682}
{'[0, 2, 0, 2, 4, 6, 1, 1, 3, 21, 17, 0, 0, 0, 0, 0, 1, 0]' : 0.176001}
{'[0, 2, 0, 2, 4, 6, 1, 1, 3, 21, 17, 0, 0, 0, 0, 0, 1, 0]' : 0.176473}
{'[0, 2, 0, 2, 4, 6, 1, 1, 3, 21, 17, 0, 0, 0, 0, 0, 1, 0]' : 0.176185}
{'[0, 2, 0, 2, 4, 6, 1, 1, 3, 21, 17, 0, 0, 0, 0, 0, 1, 0]' : 0.17602}
{'[0, 2, 0, 2, 4, 6, 1, 1, 3, 21, 17, 0, 0, 0, 0, 0, 1, 0]' : 0.176122}
{'[0, 2, 0, 2, 4, 6, 1, 1, 3, 21, 17, 0, 0, 0, 0, 0, 1, 0]' : 0.17609}
{'[0, 2, 0, 2, 4, 6, 1, 1, 3, 21, 17, 0, 0, 0, 0, 0, 1, 0]' : 0.176108}

out:
 ["{'[0, 2, 0, 2, 4, 6, 1, 1, 3, 21, 17, 0, 0, 0, 0, 0, 1, 0]' : 0.176209}", "{'[0, 2, 0, 2, 4, 6, 1, 1, 3, 21, 17, 0, 0, 0, 0, 0, 1, 0]' : 0.176154}", "{'[0, 2, 0, 2, 4, 6, 1, 1, 3, 21, 17, 0, 0, 0, 0, 0, 1, 0]' : 0.175911}", "{'[0, 2, 0, 2, 4, 6, 1, 1, 3, 21, 17, 0, 0, 0, 0, 0, 1, 0]' : 0.176059}", "{'[0, 2, 0, 2, 4, 6, 1, 1, 3, 21, 17, 0, 0, 0, 0, 0, 1, 0]' : 0.175966}", "{'[0, 2, 0, 2, 4, 6, 1, 1, 3, 21, 17, 0, 0, 0, 0, 0, 1, 0]' : 0.175735}", "{'[0, 2, 0, 2, 4, 6, 1, 1, 3, 21, 17, 0, 0, 0, 0, 0, 1, 0]' : 0.17613}", "{'[0, 2, 0, 2, 4, 6, 1, 1, 3, 21, 17, 0, 0, 0, 0, 0, 1, 0]' : 0.176072}", "{'[0, 2, 0, 2, 4, 6, 1, 1, 3, 21, 17, 0, 0, 0, 0, 0, 1, 0]' : 0.175884}", "{'[0, 2, 0, 2, 4, 6, 1, 1, 3, 21, 17, 0, 0, 0, 0, 0, 1, 0]' : 0.176164}", "{'[0, 2, 0, 2, 4, 6, 1, 1, 3, 21, 17, 0, 0, 0, 0, 0, 1, 0]' : 0.175868}", "{'[0, 2, 0, 2, 4, 6, 1, 1, 3, 21, 17, 0, 0, 0, 0, 0, 1, 0]' : 0.175895}", "{'[0, 2, 0, 2, 4, 6, 1, 1, 3, 21, 17, 0, 0, 0, 0, 0, 1, 0]' : 0.176331}", "{'[0, 2, 0, 2, 4, 6, 1, 1, 3, 21, 17, 0, 0, 0, 0, 0, 1, 0]' : 0.176012}", "{'[0, 2, 0, 2, 4, 6, 1, 1, 3, 21, 17, 0, 0, 0, 0, 0, 1, 0]' : 0.176078}", "{'[0, 2, 0, 2, 4, 6, 1, 1, 3, 21, 17, 0, 0, 0, 0, 0, 1, 0]' : 0.176152}", "{'[0, 2, 0, 2, 4, 6, 1, 1, 3, 21, 17, 0, 0, 0, 0, 0, 1, 0]' : 0.175998}", "{'[0, 2, 0, 2, 4, 6, 1, 1, 3, 21, 17, 0, 0, 0, 0, 0, 1, 0]' : 0.17607}", "{'[0, 2, 0, 2, 4, 6, 1, 1, 3, 21, 17, 0, 0, 0, 0, 0, 1, 0]' : 0.176431}", "{'[0, 2, 0, 2, 4, 6, 1, 1, 3, 21, 17, 0, 0, 0, 0, 0, 1, 0]' : 0.179429}", "{'[0, 2, 0, 2, 4, 6, 1, 1, 3, 21, 17, 0, 0, 0, 0, 0, 1, 0]' : 0.177393}", "{'[0, 2, 0, 2, 4, 6, 1, 1, 3, 21, 17, 0, 0, 0, 0, 0, 1, 0]' : 0.176055}", "{'[0, 2, 0, 2, 4, 6, 1, 1, 3, 21, 17, 0, 0, 0, 0, 0, 1, 0]' : 0.176682}", "{'[0, 2, 0, 2, 4, 6, 1, 1, 3, 21, 17, 0, 0, 0, 0, 0, 1, 0]' : 0.176001}", "{'[0, 2, 0, 2, 4, 6, 1, 1, 3, 21, 17, 0, 0, 0, 0, 0, 1, 0]' : 0.176473}", "{'[0, 2, 0, 2, 4, 6, 1, 1, 3, 21, 17, 0, 0, 0, 0, 0, 1, 0]' : 0.176185}", "{'[0, 2, 0, 2, 4, 6, 1, 1, 3, 21, 17, 0, 0, 0, 0, 0, 1, 0]' : 0.17602}", "{'[0, 2, 0, 2, 4, 6, 1, 1, 3, 21, 17, 0, 0, 0, 0, 0, 1, 0]' : 0.176122}", "{'[0, 2, 0, 2, 4, 6, 1, 1, 3, 21, 17, 0, 0, 0, 0, 0, 1, 0]' : 0.17609}", "{'[0, 2, 0, 2, 4, 6, 1, 1, 3, 21, 17, 0, 0, 0, 0, 0, 1, 0]' : 0.176108}"]
returning from 'run': {'[0, 2, 0, 2, 4, 6, 1, 1, 3, 21, 17, 0, 0, 0, 0, 0, 1, 0]': ([0.176209, 0.176154, 0.175911, 0.176059, 0.175966, 0.175735, 0.17613, 0.176072, 0.175884, 0.176164, 0.175868, 0.175895, 0.176331, 0.176012, 0.176078, 0.176152, 0.175998, 0.17607, 0.176431, 0.179429, 0.177393, 0.176055, 0.176682, 0.176001, 0.176473, 0.176185, 0.17602, 0.176122, 0.17609, 0.176108], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.176209, 0.176154, 0.175911, 0.176059, 0.175966, 0.175735, 0.17613, 0.176072, 0.175884, 0.176164, 0.175868, 0.175895, 0.176331, 0.176012, 0.176078, 0.176152, 0.175998, 0.17607, 0.176431, 0.179429, 0.177393, 0.176055, 0.176682, 0.176001, 0.176473, 0.176185, 0.17602, 0.176122, 0.17609, 0.176108], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 0, 2, 4, 6, 1, 1, 3, 21, 17, 0, 0, 0, 0, 0, 1, 0]': ([0.176209, 0.176154, 0.175911, 0.176059, 0.175966, 0.175735, 0.17613, 0.176072, 0.175884, 0.176164, 0.175868, 0.175895, 0.176331, 0.176012, 0.176078, 0.176152, 0.175998, 0.17607, 0.176431, 0.179429, 0.177393, 0.176055, 0.176682, 0.176001, 0.176473, 0.176185, 0.17602, 0.176122, 0.17609, 0.176108], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [5, 5, 0, 4, 3, 5, 0, 0, 2, 0, 16, 23, 0, 0, 1, 1, 1, 0]
Fixed Factors: {}
Testing candidaWARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = jjj
te 12: [5, 5, 0, 4, 3, 5, 0, 0, 2, 0, 16, 23, 0, 0, 1, 1, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		281
        Multiplications: 	102
        Divisions: 		0
        Logical: 		0
        Reads: 			678
        Writes: 		151
        Comparisons:		12
        Gotos: 			0
        
digraph CFG {
	1942738 [label="1942738  tmp[i]=scv_34;...",shape=box];
	1942738 -> _JOIN_1936193;
	_JOIN_1936188 [label="_JOIN_1936188None...",shape=box];
	_JOIN_1936188 -> _JOIN_1936191;
	1911454 [label="1911454  register int cbv_2, cbv_3;...",shape=box];
	1911297 [label="1911297  y[i]=0.0;...",shape=box];
	ForLoop1936193 [label="ForLoop1936193  for (i=ii; i<=min(nx-1,ii+255); i=i+1) {...",shape=box];
	ForLoop1936193 -> 1942726;
	ForLoop1936193 -> _JOIN_1936193;
	ForLoop1936191 [label="ForLoop1936191  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop1936191 -> ForLoop1935433;
	ForLoop1936191 -> _JOIN_1936191;
	ForLoop1911317 [label="ForLoop1911317  for (i=0; i<=cbv_1; i=i+3) {...",shape=box];
	ForLoop1911317 -> 1911297;
	ForLoop1911317 -> _JOIN_1911317;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 1911210;
	ForLoop1936195 [label="ForLoop1936195  for (iii=0; iii<=nx-1; iii=iii+512) {...",shape=box];
	ForLoop1936195 -> ForLoop1936194;
	ForLoop1936195 -> _JOIN_1936195;
	1934593 [label="1934593  double x_copy;...",shape=box];
	_JOIN_1911317 [label="_JOIN_1911317None...",shape=box];
	_JOIN_1911317 -> 1911454;
	1939600 [label="1939600  double scv_33;...",shape=box];
	1935434 [label="1935434  int k;...",shape=box];
	1935434 -> ForLoop1936120;
	_JOIN_1935105 [label="_JOIN_1935105None...",shape=box];
	_JOIN_1935105 -> ForLoop1935173;
	_JOIN_1935433 [label="_JOIN_1935433None...",shape=box];
	_JOIN_1935433 -> 1935434;
	1942726 [label="1942726  double scv_34;...",shape=box];
	ForLoop1936194 [label="ForLoop1936194  for (ii=iii; ii<=min(nx-1,iii+256); ii=ii+256) {...",shape=box];
	ForLoop1936194 -> ForLoop1936193;
	ForLoop1936194 -> _JOIN_1936194;
	1911210 [label="1911210  int i;...",shape=box];
	1937833 [label="1937833  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	_JOIN_1936193 [label="_JOIN_1936193None...",shape=box];
	_JOIN_1936193 -> _JOIN_1936194;
	ForLoop1911386 [label="ForLoop1911386  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop1911386 -> 1911385;
	ForLoop1911386 -> _JOIN_1911386;
	_JOIN_1936191 [label="_JOIN_1936191None...",shape=box];
	_JOIN_1936191 -> 1942738;
	_JOIN_1936194 [label="_JOIN_1936194None...",shape=box];
	_JOIN_1936194 -> _JOIN_1936195;
	_JOIN_1936195 [label="_JOIN_1936195None...",shape=box];
	ForLoop1935175 [label="ForLoop1935175  for (jj=0; jj<=ny-1; jj=jj+256) {...",shape=box];
	ForLoop1935175 -> 1934663;
	ForLoop1935175 -> _JOIN_1935175;
	ForLoop1935173 [label="ForLoop1935173  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jj)+1)%17)+1; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop1935173 -> 1935172;
	ForLoop1935173 -> _JOIN_1935173;
	ForLoop1936188 [label="ForLoop1936188  for (k=(min(ny-1,kkk+1023))-(((min(ny-1,kkk+1023))-(kt)+1)%24)+1; k<=min(ny-1,kkk+1023); k=k+1) {...",shape=box];
	ForLoop1936188 -> 1939600;
	ForLoop1936188 -> _JOIN_1936188;
	1935172 [label="1935172  scv_34=scv_34+A[i*ny+j]*x[j];...",shape=box];
	1935172 -> _JOIN_1935173;
	1911385 [label="1911385  y[i]=0.0;...",shape=box];
	1911385 -> _JOIN_1911386;
	_JOIN_1911386 [label="_JOIN_1911386None...",shape=box];
	_JOIN_1911386 -> 1934593;
	1939029 [label="1939029  double scv_9, scv_10, scv_11, scv_12, scv_13, scv_14, scv_15, scv_16;...",shape=box];
	1934663 [label="1934663  int j;...",shape=box];
	1934663 -> ForLoop1935105;
	_JOIN_1936120 [label="_JOIN_1936120None...",shape=box];
	_JOIN_1936120 -> ForLoop1936188;
	ForLoop1936120 [label="ForLoop1936120  for (k=kt; k<=min(ny-1,kkk+1023)-23; k=k+24) {...",shape=box];
	ForLoop1936120 -> 1939029;
	ForLoop1936120 -> _JOIN_1936120;
	ForLoop1935433 [label="ForLoop1935433  for (kt=kkk; kt<=min(ny-1,kkk+1023)-7; kt=kt+8) {...",shape=box];
	ForLoop1935433 -> 1937833;
	Forexpected=9369846271501.798828
actual=9369846271501.798828
Loop1935433 -> _JOIN_1935433;
	_JOIN_1935175 [label="_JOIN_1935175None...",shape=box];
	_JOIN_1935175 -> ForLoop1936191;
	ForLoop1935105 [label="ForLoop1935105  for (j=jj; j<=min(ny-1,jj+255)-16; j=j+17) {...",shape=box];
	ForLoop1935105 -> 1934703;
	ForLoop1935105 -> _JOIN_1935105;
	1934703 [label="1934703  scv_34=scv_34+A[i*ny+j]*x[j];...",shape=box];
	_JOIN_1935173 [label="_JOIN_1935173None...",shape=box];
	_JOIN_1935173 -> _JOIN_1935175;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest12.exe __orio_perftest12.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest12.exe  
{'[5, 5, 0, 4, 3, 5, 0, 0, 2, 0, 16, 23, 0, 0, 1, 1, 1, 0]' : 0.123448}
{'[5, 5, 0, 4, 3, 5, 0, 0, 2, 0, 16, 23, 0, 0, 1, 1, 1, 0]' : 0.123343}
{'[5, 5, 0, 4, 3, 5, 0, 0, 2, 0, 16, 23, 0, 0, 1, 1, 1, 0]' : 0.123411}
{'[5, 5, 0, 4, 3, 5, 0, 0, 2, 0, 16, 23, 0, 0, 1, 1, 1, 0]' : 0.123582}
{'[5, 5, 0, 4, 3, 5, 0, 0, 2, 0, 16, 23, 0, 0, 1, 1, 1, 0]' : 0.123311}
{'[5, 5, 0, 4, 3, 5, 0, 0, 2, 0, 16, 23, 0, 0, 1, 1, 1, 0]' : 0.12339}
{'[5, 5, 0, 4, 3, 5, 0, 0, 2, 0, 16, 23, 0, 0, 1, 1, 1, 0]' : 0.123646}
{'[5, 5, 0, 4, 3, 5, 0, 0, 2, 0, 16, 23, 0, 0, 1, 1, 1, 0]' : 0.123364}
{'[5, 5, 0, 4, 3, 5, 0, 0, 2, 0, 16, 23, 0, 0, 1, 1, 1, 0]' : 0.123468}
{'[5, 5, 0, 4, 3, 5, 0, 0, 2, 0, 16, 23, 0, 0, 1, 1, 1, 0]' : 0.12335}
{'[5, 5, 0, 4, 3, 5, 0, 0, 2, 0, 16, 23, 0, 0, 1, 1, 1, 0]' : 0.123409}
{'[5, 5, 0, 4, 3, 5, 0, 0, 2, 0, 16, 23, 0, 0, 1, 1, 1, 0]' : 0.123615}
{'[5, 5, 0, 4, 3, 5, 0, 0, 2, 0, 16, 23, 0, 0, 1, 1, 1, 0]' : 0.123394}
{'[5, 5, 0, 4, 3, 5, 0, 0, 2, 0, 16, 23, 0, 0, 1, 1, 1, 0]' : 0.123422}
{'[5, 5, 0, 4, 3, 5, 0, 0, 2, 0, 16, 23, 0, 0, 1, 1, 1, 0]' : 0.123467}
{'[5, 5, 0, 4, 3, 5, 0, 0, 2, 0, 16, 23, 0, 0, 1, 1, 1, 0]' : 0.123397}
{'[5, 5, 0, 4, 3, 5, 0, 0, 2, 0, 16, 23, 0, 0, 1, 1, 1, 0]' : 0.123554}
{'[5, 5, 0, 4, 3, 5, 0, 0, 2, 0, 16, 23, 0, 0, 1, 1, 1, 0]' : 0.123302}
{'[5, 5, 0, 4, 3, 5, 0, 0, 2, 0, 16, 23, 0, 0, 1, 1, 1, 0]' : 0.12367}
{'[5, 5, 0, 4, 3, 5, 0, 0, 2, 0, 16, 23, 0, 0, 1, 1, 1, 0]' : 0.123584}
{'[5, 5, 0, 4, 3, 5, 0, 0, 2, 0, 16, 23, 0, 0, 1, 1, 1, 0]' : 0.123358}
{'[5, 5, 0, 4, 3, 5, 0, 0, 2, 0, 16, 23, 0, 0, 1, 1, 1, 0]' : 0.123429}
{'[5, 5, 0, 4, 3, 5, 0, 0, 2, 0, 16, 23, 0, 0, 1, 1, 1, 0]' : 0.123404}
{'[5, 5, 0, 4, 3, 5, 0, 0, 2, 0, 16, 23, 0, 0, 1, 1, 1, 0]' : 0.12342}
{'[5, 5, 0, 4, 3, 5, 0, 0, 2, 0, 16, 23, 0, 0, 1, 1, 1, 0]' : 0.123474}
{'[5, 5, 0, 4, 3, 5, 0, 0, 2, 0, 16, 23, 0, 0, 1, 1, 1, 0]' : 0.123374}
{'[5, 5, 0, 4, 3, 5, 0, 0, 2, 0, 16, 23, 0, 0, 1, 1, 1, 0]' : 0.123381}
{'[5, 5, 0, 4, 3, 5, 0, 0, 2, 0, 16, 23, 0, 0, 1, 1, 1, 0]' : 0.123531}
{'[5, 5, 0, 4, 3, 5, 0, 0, 2, 0, 16, 23, 0, 0, 1, 1, 1, 0]' : 0.123332}
{'[5, 5, 0, 4, 3, 5, 0, 0, 2, 0, 16, 23, 0, 0, 1, 1, 1, 0]' : 0.123474}

out:
 ["{'[5, 5, 0, 4, 3, 5, 0, 0, 2, 0, 16, 23, 0, 0, 1, 1, 1, 0]' : 0.123448}", "{'[5, 5, 0, 4, 3, 5, 0, 0, 2, 0, 16, 23, 0, 0, 1, 1, 1, 0]' : 0.123343}", "{'[5, 5, 0, 4, 3, 5, 0, 0, 2, 0, 16, 23, 0, 0, 1, 1, 1, 0]' : 0.123411}", "{'[5, 5, 0, 4, 3, 5, 0, 0, 2, 0, 16, 23, 0, 0, 1, 1, 1, 0]' : 0.123582}", "{'[5, 5, 0, 4, 3, 5, 0, 0, 2, 0, 16, 23, 0, 0, 1, 1, 1, 0]' : 0.123311}", "{'[5, 5, 0, 4, 3, 5, 0, 0, 2, 0, 16, 23, 0, 0, 1, 1, 1, 0]' : 0.12339}", "{'[5, 5, 0, 4, 3, 5, 0, 0, 2, 0, 16, 23, 0, 0, 1, 1, 1, 0]' : 0.123646}", "{'[5, 5, 0, 4, 3, 5, 0, 0, 2, 0, 16, 23, 0, 0, 1, 1, 1, 0]' : 0.123364}", "{'[5, 5, 0, 4, 3, 5, 0, 0, 2, 0, 16, 23, 0, 0, 1, 1, 1, 0]' : 0.123468}", "{'[5, 5, 0, 4, 3, 5, 0, 0, 2, 0, 16, 23, 0, 0, 1, 1, 1, 0]' : 0.12335}", "{'[5, 5, 0, 4, 3, 5, 0, 0, 2, 0, 16, 23, 0, 0, 1, 1, 1, 0]' : 0.123409}", "{'[5, 5, 0, 4, 3, 5, 0, 0, 2, 0, 16, 23, 0, 0, 1, 1, 1, 0]' : 0.123615}", "{'[5, 5, 0, 4, 3, 5, 0, 0, 2, 0, 16, 23, 0, 0, 1, 1, 1, 0]' : 0.123394}", "{'[5, 5, 0, 4, 3, 5, 0, 0, 2, 0, 16, 23, 0, 0, 1, 1, 1, 0]' : 0.123422}", "{'[5, 5, 0, 4, 3, 5, 0, 0, 2, 0, 16, 23, 0, 0, 1, 1, 1, 0]' : 0.123467}", "{'[5, 5, 0, 4, 3, 5, 0, 0, 2, 0, 16, 23, 0, 0, 1, 1, 1, 0]' : 0.123397}", "{'[5, 5, 0, 4, 3, 5, 0, 0, 2, 0, 16, 23, 0, 0, 1, 1, 1, 0]' : 0.123554}", "{'[5, 5, 0, 4, 3, 5, 0, 0, 2, 0, 16, 23, 0, 0, 1, 1, 1, 0]' : 0.123302}", "{'[5, 5, 0, 4, 3, 5, 0, 0, 2, 0, 16, 23, 0, 0, 1, 1, 1, 0]' : 0.12367}", "{'[5, 5, 0, 4, 3, 5, 0, 0, 2, 0, 16, 23, 0, 0, 1, 1, 1, 0]' : 0.123584}", "{'[5, 5, 0, 4, 3, 5, 0, 0, 2, 0, 16, 23, 0, 0, 1, 1, 1, 0]' : 0.123358}", "{'[5, 5, 0, 4, 3, 5, 0, 0, 2, 0, 16, 23, 0, 0, 1, 1, 1, 0]' : 0.123429}", "{'[5, 5, 0, 4, 3, 5, 0, 0, 2, 0, 16, 23, 0, 0, 1, 1, 1, 0]' : 0.123404}", "{'[5, 5, 0, 4, 3, 5, 0, 0, 2, 0, 16, 23, 0, 0, 1, 1, 1, 0]' : 0.12342}", "{'[5, 5, 0, 4, 3, 5, 0, 0, 2, 0, 16, 23, 0, 0, 1, 1, 1, 0]' : 0.123474}", "{'[5, 5, 0, 4, 3, 5, 0, 0, 2, 0, 16, 23, 0, 0, 1, 1, 1, 0]' : 0.123374}", "{'[5, 5, 0, 4, 3, 5, 0, 0, 2, 0, 16, 23, 0, 0, 1, 1, 1, 0]' : 0.123381}", "{'[5, 5, 0, 4, 3, 5, 0, 0, 2, 0, 16, 23, 0, 0, 1, 1, 1, 0]' : 0.123531}", "{'[5, 5, 0, 4, 3, 5, 0, 0, 2, 0, 16, 23, 0, 0, 1, 1, 1, 0]' : 0.123332}", "{'[5, 5, 0, 4, 3, 5, 0, 0, 2, 0, 16, 23, 0, 0, 1, 1, 1, 0]' : 0.123474}"]
returning from 'run': {'[5, 5, 0, 4, 3, 5, 0, 0, 2, 0, 16, 23, 0, 0, 1, 1, 1, 0]': ([0.123448, 0.123343, 0.123411, 0.123582, 0.123311, 0.12339, 0.123646, 0.123364, 0.123468, 0.12335, 0.123409, 0.123615, 0.123394, 0.123422, 0.123467, 0.123397, 0.123554, 0.123302, 0.12367, 0.123584, 0.123358, 0.123429, 0.123404, 0.12342, 0.123474, 0.123374, 0.123381, 0.123531, 0.123332, 0.123474], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.123448, 0.123343, 0.123411, 0.123582, 0.123311, 0.12339, 0.123646, 0.123364, 0.123468, 0.12335, 0.123409, 0.123615, 0.123394, 0.123422, 0.123467, 0.123397, 0.123554, 0.123302, 0.12367, 0.123584, 0.123358, 0.123429, 0.123404, 0.12342, 0.123474, 0.123374, 0.123381, 0.123531, 0.123332, 0.123474], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[5, 5, 0, 4, 3, 5, 0, 0, 2, 0, 16, 23, 0, 0, 1, 1, 1, 0]': ([0.123448, 0.123343, 0.123411, 0.123582, 0.123311, 0.12339, 0.123646, 0.123364, 0.123468, 0.12335, 0.123409, 0.123615, 0.123394, 0.123422, 0.123467, 0.123397, 0.123554, 0.123302, 0.12367, 0.123584, 0.123358, 0.123429, 0.123404, 0.12342, 0.123474, 0.123374, 0.123381, 0.123531, 0.123332, 0.123474], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [6, 0, 4, 6, 3, 0, 1, 0, 27, 0, 2, 5, 0, 0, 0, 1, 0, 0]
Fixed Factors: {}
Testing candidate 13: [6, 0, 4, 6, 3, 0, 1, 0, 27, 0, 2, 5, 0, 0, 0, 1, 0, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		127
        Multiplications: 	22
        Divisions: 		0
        Logical: 		0
        Reads: 			281
        Writes: 		82
        Comparisons:		12
        Gotos: 			0
        
digraph CFG {
	1961193 [label="1961193  for (j=jjj; j<=min(ny-1,jjj+255); j=j+1) ...",shape=box];
	1961237 [label="1961237  scv_8=scv_8+A[i*ny+j]*x_copy[(j-jjj)];...",shape=box];
	1946475 [label="1946475  int i;...",shape=box];
	1946475 -> ForLoop1947182;
	_JOIN_1947182 [label="_JOIN_1947182None...",shape=box];
	_JOIN_1947182 -> ForLoop1947251;
	ForLoop1961563 [label="ForLoop1961563  for (k=kk; k<=min(ny-1,kk+127)-5; k=k+6) {...",shape=box];
	ForLoop1961563 -> 1962327;
	ForLoop1961563 -> _JOIN_1961563;
	_JOIN_1961636 [label="_JOIN_1961636None...",shape=box];
	_JOIN_1961636 -> _JOIN_1961637;
	ForLoop1961637 [label="ForLoop1961637  for (iii=0; iii<=nx-1; iii=iii+2048) {...",shape=box];
	ForLoop1961637 -> ForLoop1961636;
	ForLoop1961637 -> _JOIN_1961637;
	ForLoop1961636 [label="ForLoop1961636  for (ii=iii; ii<=min(nx-1,iii+1536); ii=ii+512) {...",shape=box];
	ForLoop1961636 -> ForLoop1961635;
	ForLoop1961636 -> _JOIN_1961636;
	ForLoop1961635 [label="ForLoop1961635  for (i=ii; i<=min(nx-1,ii+511); i=i+1) {...",shape=box];
	ForLoop1961635 -> 1963414;
	ForLoop1961635 -> _JOIN_1961635;
	ForLoop1961633 [label="ForLoop1961633  for (expected=9369846271501.798828
actual=9369846271501.798828
kk=0; kk<=ny-1; kk=kk+128) {...",shape=box];
	ForLoop1961633 -> 1961381;
	ForLoop1961633 -> _JOIN_1961633;
	_JOIN_1961635 [label="_JOIN_1961635None...",shape=box];
	_JOIN_1961635 -> _JOIN_1961636;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 1946475;
	1946937 [label="1946937  y[i]=0.0;...",shape=box];
	ForLoop1961364 [label="ForLoop1961364  for (j=(min(ny-1,jjj+255))-(((min(ny-1,jjj+255))-(jjj)+1)%3)+1; j<=min(ny-1,jjj+255); j=j+1) {...",shape=box];
	ForLoop1961364 -> 1961363;
	ForLoop1961364 -> _JOIN_1961364;
	ForLoop1961367 [label="ForLoop1961367  for (jjj=0; jjj<=ny-1; jjj=jjj+256) {...",shape=box];
	ForLoop1961367 -> 1961193;
	ForLoop1961367 -> _JOIN_1961367;
	ForLoop1947251 [label="ForLoop1947251  for (i=ny-((ny-(0))%28); i<=ny-1; i=i+1) ...",shape=box];
	ForLoop1947251 -> 1947250;
	ForLoop1947251 -> _JOIN_1947251;
	_JOIN_1961637 [label="_JOIN_1961637None...",shape=box];
	ForLoop1961631 [label="ForLoop1961631  for (k=(min(ny-1,kk+127))-(((min(ny-1,kk+127))-(kk)+1)%6)+1; k<=min(ny-1,kk+127); k=k+1) {...",shape=box];
	ForLoop1961631 -> 1962518;
	ForLoop1961631 -> _JOIN_1961631;
	_JOIN_1961364 [label="_JOIN_1961364None...",shape=box];
	_JOIN_1961364 -> _JOIN_1961367;
	_JOIN_1961367 [label="_JOIN_1961367None...",shape=box];
	_JOIN_1961367 -> ForLoop1961633;
	1961093 [label="1961093  double x_copy[256];...",shape=box];
	1961363 [label="1961363  scv_8=scv_8+A[i*ny+j]*x_copy[(j-jjj)];...",shape=box];
	1961363 -> _JOIN_1961364;
	_JOIN_1961563 [label="_JOIN_1961563None...",shape=box];
	_JOIN_1961563 -> ForLoop1961631;
	ForLoop1961293 [label="ForLoop1961293  for (j=jjj; j<=min(ny-1,jjj+255)-2; j=j+3) {...",shape=box];
	ForLoop1961293 -> 1961237;
	ForLoop1961293 -> _JOIN_1961293;
	1962327 [label="1962327  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6;...",shape=box];
	1961381 [label="1961381  int k;...",shape=box];
	1961381 -> ForLoop1961563;
	1963414 [label="1963414  double scv_8;...",shape=box];
	1962518 [label="1962518  double scv_7;...",shape=box];
	_JOIN_1961631 [label="_JOIN_1961631None...",shape=box];
	_JOIN_1961631 -> _JOIN_1961633;
	_JOIN_1961633 [label="_JOIN_1961633None...",shape=box];
	_JOIN_1961633 -> 1963426;
	_JOIN_1947251 [label="_JOIN_1947251None...",shape=box];
	_JOIN_1947251 -> 1961093;
	1963426 [label="1963426  tmp[i]=scv_8;...",shape=box];
	1963426 -> _JOIN_1961635;
	1947250 [label="1947250  y[i]=0.0;...",shape=box];
	1947250 -> _JOIN_1947251;
	_JOIN_1961293 [label="_JOIN_1961293None...",shape=box];
	_JOIN_1961293 -> ForLoop1961364;
	ForLoop1947182 [label="ForLoop1947182  for (i=0; i<=ny-28; i=i+28) {...",shape=box];
	ForLoop1947182 -> 1946937;
	ForLoop1947182 -> _JOIN_1947182;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest13.exe __orio_perftest13.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest13.exe  
{'[6, 0, 4, 6, 3, 0, 1, 0, 27, 0, 2, 5, 0, 0, 0, 1, 0, 0]' : 0.148835}
{'[6, 0, 4, 6, 3, 0, 1, 0, 27, 0, 2, 5, 0, 0, 0, 1, 0, 0]' : 0.1476}
{'[6, 0, 4, 6, 3, 0, 1, 0, 27, 0, 2, 5, 0, 0, 0, 1, 0, 0]' : 0.147729}
{'[6, 0, 4, 6, 3, 0, 1, 0, 27, 0, 2, 5, 0, 0, 0, 1, 0, 0]' : 0.147799}
{'[6, 0, 4, 6, 3, 0, 1, 0, 27, 0, 2, 5, 0, 0, 0, 1, 0, 0]' : 0.147702}
{'[6, 0, 4, 6, 3, 0, 1, 0, 27, 0, 2, 5, 0, 0, 0, 1, 0, 0]' : 0.147594}
{'[6, 0, 4, 6, 3, 0, 1, 0, 27, 0, 2, 5, 0, 0, 0, 1, 0, 0]' : 0.147695}
{'[6, 0, 4, 6, 3, 0, 1, 0, 27, 0, 2, 5, 0, 0, 0, 1, 0, 0]' : 0.147726}
{'[6, 0, 4, 6, 3, 0, 1, 0, 27, 0, 2, 5, 0, 0, 0, 1, 0, 0]' : 0.147635}
{'[6, 0, 4, 6, 3, 0, 1, 0, 27, 0, 2, 5, 0, 0, 0, 1, 0, 0]' : 0.147641}
{'[6, 0, 4, 6, 3, 0, 1, 0, 27, 0, 2, 5, 0, 0, 0, 1, 0, 0]' : 0.147611}
{'[6, 0, 4, 6, 3, 0, 1, 0, 27, 0, 2, 5, 0, 0, 0, 1, 0, 0]' : 0.147624}
{'[6, 0, 4, 6, 3, 0, 1, 0, 27, 0, 2, 5, 0, 0, 0, 1, 0, 0]' : 0.147662}
{'[6, 0, 4, 6, 3, 0, 1, 0, 27, 0, 2, 5, 0, 0, 0, 1, 0, 0]' : 0.147572}
{'[6, 0, 4, 6, 3, 0, 1, 0, 27, 0, 2, 5, 0, 0, 0, 1, 0, 0]' : 0.148786}
{'[6, 0, 4, 6, 3, 0, 1, 0, 27, 0, 2, 5, 0, 0, 0, 1, 0, 0]' : 0.147621}
{'[6, 0, 4, 6, 3, 0, 1, 0, 27, 0, 2, 5, 0, 0, 0, 1, 0, 0]' : 0.147633}
{'[6, 0, 4, 6, 3, 0, 1, 0, 27, 0, 2, 5, 0, 0, 0, 1, 0, 0]' : 0.147657}
{'[6, 0, 4, 6, 3, 0, 1, 0, 27, 0, 2, 5, 0, 0, 0, 1, 0, 0]' : 0.147646}
{'[6, 0, 4, 6, 3, 0, 1, 0, 27, 0, 2, 5, 0, 0, 0, 1, 0, 0]' : 0.147707}
{'[6, 0, 4, 6, 3, 0, 1, 0, 27, 0, 2, 5, 0, 0, 0, 1, 0, 0]' : 0.14771}
{'[6, 0, 4, 6, 3, 0, 1, 0, 27, 0, 2, 5, 0, 0, 0, 1, 0, 0]' : 0.147657}
{'[6, 0, 4, 6, 3, 0, 1, 0, 27, 0, 2, 5, 0, 0, 0, 1, 0, 0]' : 0.147697}
{'[6, 0, 4, 6, 3, 0, 1, 0, 27, 0, 2, 5, 0, 0, 0, 1, 0, 0]' : 0.147602}
{'[6, 0, 4, 6, 3, 0, 1, 0, 27, 0, 2, 5, 0, 0, 0, 1, 0, 0]' : 0.14783}
{'[6, 0, 4, 6, 3, 0, 1, 0, 27, 0, 2, 5, 0, 0, 0, 1, 0, 0]' : 0.147689}
{'[6, 0, 4, 6, 3, 0, 1, 0, 27, 0, 2, 5, 0, 0, 0, 1, 0, 0]' : 0.147624}
{'[6, 0, 4, 6, 3, 0, 1, 0, 27, 0, 2, 5, 0, 0, 0, 1, 0, 0]' : 0.148618}
{'[6, 0, 4, 6, 3, 0, 1, 0, 27, 0, 2, 5, 0, 0, 0, 1, 0, 0]' : 0.147659}
{'[6, 0, 4, 6, 3, 0, 1, 0, 27, 0, 2, 5, 0, 0, 0, 1, 0, 0]' : 0.147612}

out:
 ["{'[6, 0, 4, 6, 3, 0, 1, 0, 27, 0, 2, 5, 0, 0, 0, 1, 0, 0]' : 0.148835}", "{'[6, 0, 4, 6, 3, 0, 1, 0, 27, 0, 2, 5, 0, 0, 0, 1, 0, 0]' : 0.1476}", "{'[6, 0, 4, 6, 3, 0, 1, 0, 27, 0, 2, 5, 0, 0, 0, 1, 0, 0]' : 0.147729}", "{'[6, 0, 4, 6, 3, 0, 1, 0, 27, 0, 2, 5, 0, 0, 0, 1, 0, 0]' : 0.147799}", "{'[6, 0, 4, 6, 3, 0, 1, 0, 27, 0, 2, 5, 0, 0, 0, 1, 0, 0]' : 0.147702}", "{'[6, 0, 4, 6, 3, 0, 1, 0, 27, 0, 2, 5, 0, 0, 0, 1, 0, 0]' : 0.147594}", "{'[6, 0, 4, 6, 3, 0, 1, 0, 27, 0, 2, 5, 0, 0, 0, 1, 0, 0]' : 0.147695}", "{'[6, 0, 4, 6, 3, 0, 1, 0, 27, 0, 2, 5, 0, 0, 0, 1, 0, 0]' : 0.147726}", "{'[6, 0, 4, 6, 3, 0, 1, 0, 27, 0, 2, 5, 0, 0, 0, 1, 0, 0]' : 0.147635}", "{'[6, 0, 4, 6, 3, 0, 1, 0, 27, 0, 2, 5, 0, 0, 0, 1, 0, 0]' : 0.147641}", "{'[6, 0, 4, 6, 3, 0, 1, 0, 27, 0, 2, 5, 0, 0, 0, 1, 0, 0]' : 0.147611}", "{'[6, 0, 4, 6, 3, 0, 1, 0, 27, 0, 2, 5, 0, 0, 0, 1, 0, 0]' : 0.147624}", "{'[6, 0, 4, 6, 3, 0, 1, 0, 27, 0, 2, 5, 0, 0, 0, 1, 0, 0]' : 0.147662}", "{'[6, 0, 4, 6, 3, 0, 1, 0, 27, 0, 2, 5, 0, 0, 0, 1, 0, 0]' : 0.147572}", "{'[6, 0, 4, 6, 3, 0, 1, 0, 27, 0, 2, 5, 0, 0, 0, 1, 0, 0]' : 0.148786}", "{'[6, 0, 4, 6, 3, 0, 1, 0, 27, 0, 2, 5, 0, 0, 0, 1, 0, 0]' : 0.147621}", "{'[6, 0, 4, 6, 3, 0, 1, 0, 27, 0, 2, 5, 0, 0, 0, 1, 0, 0]' : 0.147633}", "{'[6, 0, 4, 6, 3, 0, 1, 0, 27, 0, 2, 5, 0, 0, 0, 1, 0, 0]' : 0.147657}", "{'[6, 0, 4, 6, 3, 0, 1, 0, 27, 0, 2, 5, 0, 0, 0, 1, 0, 0]' : 0.147646}", "{'[6, 0, 4, 6, 3, 0, 1, 0, 27, 0, 2, 5, 0, 0, 0, 1, 0, 0]' : 0.147707}", "{'[6, 0, 4, 6, 3, 0, 1, 0, 27, 0, 2, 5, 0, 0, 0, 1, 0, 0]' : 0.14771}", "{'[6, 0, 4, 6, 3, 0, 1, 0, 27, 0, 2, 5, 0, 0, 0, 1, 0, 0]' : 0.147657}", "{'[6, 0, 4, 6, 3, 0, 1, 0, 27, 0, 2, 5, 0, 0, 0, 1, 0, 0]' : 0.147697}", "{'[6, 0, 4, 6, 3, 0, 1, 0, 27, 0, 2, 5, 0, 0, 0, 1, 0, 0]' : 0.147602}", "{'[6, 0, 4, 6, 3, 0, 1, 0, 27, 0, 2, 5, 0, 0, 0, 1, 0, 0]' : 0.14783}", "{'[6, 0, 4, 6, 3, 0, 1, 0, 27, 0, 2, 5, 0, 0, 0, 1, 0, 0]' : 0.147689}", "{'[6, 0, 4, 6, 3, 0, 1, 0, 27, 0, 2, 5, 0, 0, 0, 1, 0, 0]' : 0.147624}", "{'[6, 0, 4, 6, 3, 0, 1, 0, 27, 0, 2, 5, 0, 0, 0, 1, 0, 0]' : 0.148618}", "{'[6, 0, 4, 6, 3, 0, 1, 0, 27, 0, 2, 5, 0, 0, 0, 1, 0, 0]' : 0.147659}", "{'[6, 0, 4, 6, 3, 0, 1, 0, 27, 0, 2, 5, 0, 0, 0, 1, 0, 0]' : 0.147612}"]
returning from 'run': {'[6, 0, 4, 6, 3, 0, 1, 0, 27, 0, 2, 5, 0, 0, 0, 1, 0, 0]': ([0.148835, 0.1476, 0.147729, 0.147799, 0.147702, 0.147594, 0.147695, 0.147726, 0.147635, 0.147641, 0.147611, 0.147624, 0.147662, 0.147572, 0.148786, 0.147621, 0.147633, 0.147657, 0.147646, 0.147707, 0.14771, 0.147657, 0.147697, 0.147602, 0.14783, 0.147689, 0.147624, 0.148618, 0.147659, 0.147612], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.148835, 0.1476, 0.147729, 0.147799, 0.147702, 0.147594, 0.147695, 0.147726, 0.147635, 0.147641, 0.147611, 0.147624, 0.147662, 0.147572, 0.148786, 0.147621, 0.147633, 0.147657, 0.147646, 0.147707, 0.14771, 0.147657, 0.147697, 0.147602, 0.14783, 0.147689, 0.147624, 0.148618, 0.147659, 0.147612], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
FinWARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = kkk
al perf_costs: {'[6, 0, 4, 6, 3, 0, 1, 0, 27, 0, 2, 5, 0, 0, 0, 1, 0, 0]': ([0.148835, 0.1476, 0.147729, 0.147799, 0.147702, 0.147594, 0.147695, 0.147726, 0.147635, 0.147641, 0.147611, 0.147624, 0.147662, 0.147572, 0.148786, 0.147621, 0.147633, 0.147657, 0.147646, 0.147707, 0.14771, 0.147657, 0.147697, 0.147602, 0.14783, 0.147689, 0.147624, 0.148618, 0.147659, 0.147612], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [1, 2, 3, 0, 0, 1, 0, 1, 11, 22, 27, 0, 0, 0, 0, 1, 1, 0]
Fixed Factors: {}
Testing candidate 14: [1, 2, 3, 0, 0, 1, 0, 1, 11, 22, 27, 0, 0, 0, 0, 1, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	63
        Max loop nest depth: 	4
        Additions: 		3124
        Multiplications: 	1440
        Divisions: 		0
        Logical: 		0
        Reads: 			6053
        Writes: 		1015
        Comparisons:		63
        Gotos: 			0
        
digraph CFG {
	_JOIN_2095829 [label="_JOIN_2095829None...",shape=box];
	_JOIN_2095829 -> _JOIN_2095831;
	_JOIN_2099002 [label="_JOIN_2099002None...",shape=box];
	_JOIN_2099002 -> _JOIN_2099004;
	1965173 [label="1965173  y[i]=0.0;...",shape=box];
	1965173 -> _JOIN_1965174;
	2178109 [label="2178109  double scv_54;...",shape=box];
	ForLoop1965105 [label="ForLoop1965105  for (i=0; i<=cbv_1; i=i+12) {...",shape=box];
	ForLoop1965105 -> 1965004;
	ForLoop1965105 -> _JOIN_1965105;
	_JOIN_2099000 [label="_JOIN_2099000None...",shape=box];
	_JOIN_2099000 -> 2179249;
	_JOIN_1965105 [label="_JOIN_1965105None...",shape=box];
	_JOIN_1965105 -> 1965323;
	ForLoop2095122 [label="ForLoop2095122  for (j=jj; j<=min(ny-1,jj+31)-27; j=j+28) {...",shape=box];
	ForLoop2095122 -> 2128447;
	ForLoop2095122 -> _JOIN_2095122;
	ForLoop2095829 [label="ForLoop2095829  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jj)+1)%28)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop2095829 -> 2130301;
	ForLoop2095829 -> _JOIN_2095829;
	2073311 [label="2073311  int i;...",shape=box];
	2073311 -> ForLoop2098024;
	2073549 [label="2073549  int j;...",shape=box];
	ForLoop2099002 [label="ForLoop2099002  for (i=(min(nx-1,ii+15))-(((min(nx-1,ii+15))-(ii)+1)%23)+1; i<=min(nx-1,ii+15); i=i+1) {...",shape=box];
	ForLoop2099002 -> 2179237;
	ForLoop2099002 -> _JOIN_2099002;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 1964782;
	ForLoop2098808 [label="ForLoop2098808  for (j=jj; j<=min(ny-1,jj+31)-27; j=j+28) {...",shape=box];
	ForLoop2098808 -> 2098131;
	ForLoop2098808 -> _JOIN_2098808;
	2098131 [label="2098131  scv_55=scv_55+A[i*ny+j]*x[j];...",shape=box];
	ForLoop2099004 [label="ForLoop2099004  for (ii=0; ii<=nx-1; ii=ii+16) {...",shape=box];
	ForLoop2099004 -> 2073311;
	ForLoop2099004 -> _JOIN_2099004;
	ForLoop2097307 [label="ForLoop2097307  for (k=kk; k<=min(ny-1,kk+63); k=k+1) {...",shape=box];
	ForLoop2097307 -> 2150658;
	ForLoop2097307 -> _JOIN_2097307;
	ForLoop2099000 [label="ForLoop2099000  for (kk=0; kk<=ny-1; kk=kk+64) {...",shape=box];
	ForLoop2099000 -> 2098922;
	ForLoop2099000 -> _JOIN_2099000;
	2150658 [label="2150658  double scv_30;...",shape=box];
	_JOIN_2098022 [label="_JOIN_2098022None...",shape=box];
	_JOIN_2098022 -> 2174271;
	_JOIN_2098967 [label="_JOIN_2098967None...",shape=box];
	_JOIN_2098967 -> 2098998;
	_JOIN_2098808 [label="_JOIN_2098808None...",shape=box];
	_JOIN_2098808 -> ForLoop2098876;
	2179249 [label="2179249  tmp[i]=scv_55;...",shape=box];
	2179249 -> _JOIN_2099002;
	2128447 [label="2128447  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	ForLoop2098967 [label="ForLoop2098967  for (k=kk; k<=min(ny-1,kk+63); k=k+1) {...",shape=box];
	ForLoop2098967 -> 2178109;
	ForLoop2098967 -> _JOIN_2098967;
	ForLoop2098024 [label="ForLoop2098024  for (i=ii; i<=min(nx-1,ii+15)-22; i=i+23) {...",shape=box];
	ForLoop2098024 -> 2174253;
	ForLoop2098024 -> _JOIN_2098024;
	2095875 [label="2095875  for (k=kk; k<=min(ny-1,kk+63); k=k+1) ...",shape=box];
	ForLoop2098022 [label="ForLoop2098022  for (kk=0; kk<=ny-1; kk=kk+64) {...",shexpected=9369846271501.798828
actual=9369846271501.798828
ape=box];
	ForLoop2098022 -> 2095875;
	ForLoop2098022 -> _JOIN_2098022;
	_JOIN_2099004 [label="_JOIN_2099004None...",shape=box];
	ForLoop1965174 [label="ForLoop1965174  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop1965174 -> 1965173;
	ForLoop1965174 -> _JOIN_1965174;
	_JOIN_2095831 [label="_JOIN_2095831None...",shape=box];
	_JOIN_2095831 -> ForLoop2098022;
	1965004 [label="1965004  y[i]=0.0;...",shape=box];
	_JOIN_2097307 [label="_JOIN_2097307None...",shape=box];
	_JOIN_2097307 -> 2097338;
	_JOIN_1965174 [label="_JOIN_1965174None...",shape=box];
	_JOIN_1965174 -> 2073296;
	ForLoop2095831 [label="ForLoop2095831  for (jj=0; jj<=ny-1; jj=jj+32) {...",shape=box];
	ForLoop2095831 -> 2073549;
	ForLoop2095831 -> _JOIN_2095831;
	1964782 [label="1964782  int i;...",shape=box];
	2098922 [label="2098922  for (k=kk; k<=min(ny-1,kk+63); k=k+1) ...",shape=box];
	2098922 -> ForLoop2098967;
	2130301 [label="2130301  double scv_29;...",shape=box];
	_JOIN_2095122 [label="_JOIN_2095122None...",shape=box];
	_JOIN_2095122 -> ForLoop2095829;
	2097338 [label="2097338  for (k=kk; k<=min(ny-1,kk+63); k=k+1) ...",shape=box];
	2174271 [label="2174271  tmp[(i+20)]=scv_31;...",shape=box];
	ForLoop2098878 [label="ForLoop2098878  for (jj=0; jj<=ny-1; jj=jj+32) {...",shape=box];
	ForLoop2098878 -> 2098091;
	ForLoop2098878 -> _JOIN_2098878;
	2179237 [label="2179237  double scv_55;...",shape=box];
	ForLoop2098876 [label="ForLoop2098876  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jj)+1)%28)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop2098876 -> 2098875;
	ForLoop2098876 -> _JOIN_2098876;
	2098091 [label="2098091  int j;...",shape=box];
	2098091 -> ForLoop2098808;
	2073296 [label="2073296  double x_copy;...",shape=box];
	_JOIN_2098878 [label="_JOIN_2098878None...",shape=box];
	_JOIN_2098878 -> ForLoop2099000;
	2098998 [label="2098998  for (k=kk; k<=min(ny-1,kk+63); k=k+1) ...",shape=box];
	2098998 -> _JOIN_2099000;
	2098875 [label="2098875  scv_55=scv_55+A[i*ny+j]*x[j];...",shape=box];
	2098875 -> _JOIN_2098876;
	_JOIN_2098876 [label="_JOIN_2098876None...",shape=box];
	_JOIN_2098876 -> _JOIN_2098878;
	_JOIN_2098024 [label="_JOIN_2098024None...",shape=box];
	_JOIN_2098024 -> ForLoop2099002;
	1965323 [label="1965323  register int cbv_2, cbv_3;...",shape=box];
	2174253 [label="2174253  double scv_31, scv_32, scv_33, scv_34, scv_35, scv_36, scv_37, scv_38;...",shape=box];

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest14.exe __orio_perftest14.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest14.exe  
{'[1, 2, 3, 0, 0, 1, 0, 1, 11, 22, 27, 0, 0, 0, 0, 1, 1, 0]' : 0.168498}
{'[1, 2, 3, 0, 0, 1, 0, 1, 11, 22, 27, 0, 0, 0, 0, 1, 1, 0]' : 0.168482}
{'[1, 2, 3, 0, 0, 1, 0, 1, 11, 22, 27, 0, 0, 0, 0, 1, 1, 0]' : 0.168524}
{'[1, 2, 3, 0, 0, 1, 0, 1, 11, 22, 27, 0, 0, 0, 0, 1, 1, 0]' : 0.168635}
{'[1, 2, 3, 0, 0, 1, 0, 1, 11, 22, 27, 0, 0, 0, 0, 1, 1, 0]' : 0.168443}
{'[1, 2, 3, 0, 0, 1, 0, 1, 11, 22, 27, 0, 0, 0, 0, 1, 1, 0]' : 0.168505}
{'[1, 2, 3, 0, 0, 1, 0, 1, 11, 22, 27, 0, 0, 0, 0, 1, 1, 0]' : 0.169282}
{'[1, 2, 3, 0, 0, 1, 0, 1, 11, 22, 27, 0, 0, 0, 0, 1, 1, 0]' : 0.16841}
{'[1, 2, 3, 0, 0, 1, 0, 1, 11, 22, 27, 0, 0, 0, 0, 1, 1, 0]' : 0.168372}
{'[1, 2, 3, 0, 0, 1, 0, 1, 11, 22, 27, 0, 0, 0, 0, 1, 1, 0]' : 0.168501}
{'[1, 2, 3, 0, 0, 1, 0, 1, 11, 22, 27, 0, 0, 0, 0, 1, 1, 0]' : 0.168397}
{'[1, 2, 3, 0, 0, 1, 0, 1, 11, 22, 27, 0, 0, 0, 0, 1, 1, 0]' : 0.168647}
{'[1, 2, 3, 0, 0, 1, 0, 1, 11, 22, 27, 0, 0, 0, 0, 1, 1, 0]' : 0.168498}
{'[1, 2, 3, 0, 0, 1, 0, 1, 11, 22, 27, 0, 0, 0, 0, 1, 1, 0]' : 0.168437}
{'[1, 2, 3, 0, 0, 1, 0, 1, 11, 22, 27, 0, 0, 0, 0, 1, 1, 0]' : 0.168506}
{'[1, 2, 3, 0, 0, 1, 0, 1, 11, 22, 27, 0, 0, 0, 0, 1, 1, 0]' : 0.168441}
{'[1, 2, 3, 0, 0, 1, 0, 1, 11, 22, 27, 0, 0, 0, 0, 1, 1, 0]' : 0.16848}
{'[1, 2, 3, 0, 0, 1, 0, 1, 11, 22, 27, 0, 0, 0, 0, 1, 1, 0]' : 0.168543}
{'[1, 2, 3, 0, 0, 1, 0, 1, 11, 22, 27, 0, 0, 0, 0, 1, 1, 0]' : 0.168468}
{'[1, 2, 3, 0, 0, 1, 0, 1, 11, 22, 27, 0, 0, 0, 0, 1, 1, 0]' : 0.16844}
{'[1, 2, 3, 0, 0, 1, 0, 1, 11, 22, 27, 0, 0, 0, 0, 1, 1, 0]' : 0.168594}
{'[1, 2, 3, 0, 0, 1, 0, 1, 11, 22, 27, 0, 0, 0, 0, 1, 1, 0]' : 0.168203}
{'[1, 2, 3, 0, 0, 1, 0, 1, 11, 22, 27, 0, 0, 0, 0, 1, 1, 0]' : 0.168218}
{'[1, 2, 3, 0, 0, 1, 0, 1, 11, 22, 27, 0, 0, 0, 0, 1, 1, 0]' : 0.168497}
{'[1, 2, 3, 0, 0, 1, 0, 1, 11, 22, 27, 0, 0, 0, 0, 1, 1, 0]' : 0.168718}
{'[1, 2, 3, 0, 0, 1, 0, 1, 11, 22, 27, 0, 0, 0, 0, 1, 1, 0]' : 0.168427}
{'[1, 2, 3, 0, 0, 1, 0, 1, 11, 22, 27, 0, 0, 0, 0, 1, 1, 0]' : 0.168539}
{'[1, 2, 3, 0, 0, 1, 0, 1, 11, 22, 27, 0, 0, 0, 0, 1, 1, 0]' : 0.168408}
{'[1, 2, 3, 0, 0, 1, 0, 1, 11, 22, 27, 0, 0, 0, 0, 1, 1, 0]' : 0.168427}
{'[1, 2, 3, 0, 0, 1, 0, 1, 11, 22, 27, 0, 0, 0, 0, 1, 1, 0]' : 0.16875}

out:
 ["{'[1, 2, 3, 0, 0, 1, 0, 1, 11, 22, 27, 0, 0, 0, 0, 1, 1, 0]' : 0.168498}", "{'[1, 2, 3, 0, 0, 1, 0, 1, 11, 22, 27, 0, 0, 0, 0, 1, 1, 0]' : 0.168482}", "{'[1, 2, 3, 0, 0, 1, 0, 1, 11, 22, 27, 0, 0, 0, 0, 1, 1, 0]' : 0.168524}", "{'[1, 2, 3, 0, 0, 1, 0, 1, 11, 22, 27, 0, 0, 0, 0, 1, 1, 0]' : 0.168635}", "{'[1, 2, 3, 0, 0, 1, 0, 1, 11, 22, 27, 0, 0, 0, 0, 1, 1, 0]' : 0.168443}", "{'[1, 2, 3, 0, 0, 1, 0, 1, 11, 22, 27, 0, 0, 0, 0, 1, 1, 0]' : 0.168505}", "{'[1, 2, 3, 0, 0, 1, 0, 1, 11, 22, 27, 0, 0, 0, 0, 1, 1, 0]' : 0.169282}", "{'[1, 2, 3, 0, 0, 1, 0, 1, 11, 22, 27, 0, 0, 0, 0, 1, 1, 0]' : 0.16841}", "{'[1, 2, 3, 0, 0, 1, 0, 1, 11, 22, 27, 0, 0, 0, 0, 1, 1, 0]' : 0.168372}", "{'[1, 2, 3, 0, 0, 1, 0, 1, 11, 22, 27, 0, 0, 0, 0, 1, 1, 0]' : 0.168501}", "{'[1, 2, 3, 0, 0, 1, 0, 1, 11, 22, 27, 0, 0, 0, 0, 1, 1, 0]' : 0.168397}", "{'[1, 2, 3, 0, 0, 1, 0, 1, 11, 22, 27, 0, 0, 0, 0, 1, 1, 0]' : 0.168647}", "{'[1, 2, 3, 0, 0, 1, 0, 1, 11, 22, 27, 0, 0, 0, 0, 1, 1, 0]' : 0.168498}", "{'[1, 2, 3, 0, 0, 1, 0, 1, 11, 22, 27, 0, 0, 0, 0, 1, 1, 0]' : 0.168437}", "{'[1, 2, 3, 0, 0, 1, 0, 1, 11, 22, 27, 0, 0, 0, 0, 1, 1, 0]' : 0.168506}", "{'[1, 2, 3, 0, 0, 1, 0, 1, 11, 22, 27, 0, 0, 0, 0, 1, 1, 0]' : 0.168441}", "{'[1, 2, 3, 0, 0, 1, 0, 1, 11, 22, 27, 0, 0, 0, 0, 1, 1, 0]' : 0.16848}", "{'[1, 2, 3, 0, 0, 1, 0, 1, 11, 22, 27, 0, 0, 0, 0, 1, 1, 0]' : 0.168543}", "{'[1, 2, 3, 0, 0, 1, 0, 1, 11, 22, 27, 0, 0, 0, 0, 1, 1, 0]' : 0.168468}", "{'[1, 2, 3, 0, 0, 1, 0, 1, 11, 22, 27, 0, 0, 0, 0, 1, 1, 0]' : 0.16844}", "{'[1, 2, 3, 0, 0, 1, 0, 1, 11, 22, 27, 0, 0, 0, 0, 1, 1, 0]' : 0.168594}", "{'[1, 2, 3, 0, 0, 1, 0, 1, 11, 22, 27, 0, 0, 0, 0, 1, 1, 0]' : 0.168203}", "{'[1, 2, 3, 0, 0, 1, 0, 1, 11, 22, 27, 0, 0, 0, 0, 1, 1, 0]' : 0.168218}", "{'[1, 2, 3, 0, 0, 1, 0, 1, 11, 22, 27, 0, 0, 0, 0, 1, 1, 0]' : 0.168497}", "{'[1, 2, 3, 0, 0, 1, 0, 1, 11, 22, 27, 0, 0, 0, 0, 1, 1, 0]' : 0.168718}", "{'[1, 2, 3, 0, 0, 1, 0, 1, 11, 22, 27, 0, 0, 0, 0, 1, 1, 0]' : 0.168427}", "{'[1, 2, 3, 0, 0, 1, 0, 1, 11, 22, 27, 0, 0, 0, 0, 1, 1, 0]' : 0.168539}", "{'[1, 2, 3, 0, 0, 1, 0, 1, 11, 22, 27, 0, 0, 0, 0, 1, 1, 0]' : 0.168408}", "{'[1, 2, 3, 0, 0, 1, 0, 1, 11, 22, 27, 0, 0, 0, 0, 1, 1, 0]' : 0.168427}", "{'[1, 2, 3, 0, 0, 1, 0, 1, 11, 22, 27, 0, 0, 0, 0, 1, 1, 0]' : 0.16875}"]
returning from 'run': {'[1, 2, 3, 0, 0, 1, 0, 1, 11, 22, 27, 0, 0, 0, 0, 1, 1, 0]': ([0.168498, 0.168482, 0.168524, 0.168635, 0.168443, 0.168505, 0.169282, 0.16841, 0.168372, 0.168501, 0.168397, 0.168647, 0.168498, 0.168437, 0.168506, 0.168441, 0.16848, 0.168543, 0.168468, 0.16844, 0.168594, 0.168203, 0.168218, 0.168497, 0.168718, 0.168427, 0.168539, 0.168408, 0.168427, 0.16875], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.168498, 0.168482, 0.168524, 0.168635, 0.168443, 0.168505, 0.169282, 0.16841, 0.168372, 0.168501, 0.168397, 0.168647, 0.168498, 0.168437, 0.168506, 0.168441, 0.16848, 0.168543, 0.168468, 0.16844, 0.168594, 0.168203, 0.168218, 0.168497, 0.168718, 0.168427, 0.168539, 0.168408, 0.168427, 0.16875], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[1, 2, 3, 0, 0, 1, 0, 1, 11, 22, 27, 0, 0, 0, 0, 1, 1, 0]': ([0.168498, 0.168482, 0.168524, 0.168635, 0.168443, 0.168505, 0.169282, 0.16841, 0.168372, 0.168501, 0.168397, 0.168647, 0.168498, 0.168437, 0.168506, 0.168441, 0.16848, 0.168543, 0.168468, 0.16844, 0.168594, 0.168203, 0.168218, 0.168497, 0.168718, 0.168427, 0.168539, 0.168408, 0.168427, 0.16875], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [2, 2, 6, 4, 3, 6, 0, 1, 8, 21, 0, 19, 0, 0, 0, 1, 0, 1]
Fixed Factors: {}
Testing candidate 15: [2, 2, 6, 4, 3, 6, 0, 1, 8, 21, 0, 19, 0, 0, 0, 1, 0, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	108
        Max loop nest depth: 	6
        Additions: 		4407
        Multiplications: 	1012
        Divisions: 		0
        Logical: 		0
        Reads: 			8803
        Writes: 		1885
        Comparisons:		108
        Gotos: 			0
        
digraph CFG {
	ForLoop2334682 [label="ForLoop2334682  for (k=cbv_48; k<=cbv_49; k=k+1) {...",shape=box];
	ForLoop2334682 -> 2371655;
	ForLoop2334682 -> _JOIN_2334682;
	2322754 [label="2322754  for (k=kk; k<=min(ny-1,kk+511); k=k+1) ...",shape=box];
	ForLoop2329082 [label="ForLoop2329082  for (k=kk; k<=cbv_29; k=k+20) {...",shape=box];
	ForLoop2329082 -> 2360424;
	ForLoop2329082 -> _JOIN_2329082;
	2366333 [label="2366333  double scv_274;...",shape=box];
	2371068 [label="2371068  double scv_317, scv_318, scv_319, scv_320, scv_321, scv_322, scv_323, scv_324;...",shape=box];
	2336554 [label="2336554  for (k=kk; k<=min(ny-1,kk+511); k=k+1) ...",shape=box];
	ForLoop2337362 [label="ForLoop2337362  for (k=kk; k<=cbv_56; k=k+20) {...",shape=box];
	ForLoop2337362 -> 2376390;
	ForLoop2337362 -> _JOIN_2337362;
	2508754 [label="2508754  register int cbv_1;...",shape=box];
	_JOIN_2338282 [label="_JOIN_2338282None...",shape=box];
	_JOIN_2338282 -> 2528236;
	2359237 [label="2359237  double scv_190;...",shape=box];
	ForLoop2325482 [label="ForLoop2325482  for (k=cbv_18; k<=cbv_19; k=k+1) {...",shape=box];
	ForLoop2325482 -> 2353915;
	ForLoop2325482 -> _JOIN_2325482;
	2526278 [label="2526278  register int cbv_54, cbv_55;...",shape=box];
	_JOIN_2340363 [label="_JOIN_2340363None...",shape=box];
	_JOIN_2340363 -> _JOIN_2340364;
	ForLoop2324562 [label="ForLoop2324562  for (k=cbv_15; k<=cbv_16; k=k+1) {...",shape=box];
	ForLoop2324562 -> 2352141;
	ForLoop2324562 -> _JOIN_2324562;
	_JOIN_2340365 [label="_JOIN_2340365None...",shape=box];
	_JOIN_2340365 -> ForLoop2341193;
	ForLoop2330002 [label="ForLoop2330002  for (k=kk; k<=cbv_32; k=k+20) {...",shape=box];
	ForLoop2330002 -> 2362198;
	ForLoop2330002 -> _JOIN_2330002;
	2524320 [label="2524320  register int cbv_48, cbv_49;...",shape=box];
	ForLoop2341084 [label="ForLoop2341084  for (k=kk; k<=cbv_69; k=k+20) {...",shape=box];
	ForLoop2341084 -> 2457103;
	ForLoop2341084 -> _JOIN_2341084;
	2356876 [label="2356876  double scv_149, scv_150, scv_151, scv_152, scv_153, scv_154, scv_155, scv_156;...",shape=box];
	ForLoop2340240 [label="ForLoop2340240  for (i=ii; i<=min(nx-1,ii+31)-21; i=i+22) {...",shape=box];
	ForLoop2340240 -> 2455012;
	ForLoop2340240 -> _JOIN_2340240;
	2341190 [label="2341190  for (k=kk; k<=min(ny-1,kk+511); k=k+1) ...",shape=box];
	2341190 -> _JOIN_2341192;
	ForLoop2326402 [label="ForLoop2326402  for (k=cbv_21; k<=cbv_22; k=k+1) {...",shape=box];
	ForLoop2326402 -> 2355689;
	ForLoop2326402 -> _JOIN_2326402;
	_JOIN_2327242 [label="_JOIN_2327242None...",shape=box];
	_JOIN_2327242 -> 2516488;
	_JOIN_2321802 [label="_JOIN_2321802None...",shape=box];
	_JOIN_2321802 -> 2321834;
	_JOIN_2327322 [label="_JOIN_2327322None...",shape=box];
	_JOIN_2327322 -> 2327354;
	ForLoop2330082 [label="ForLoop2330082  for (k=cbv_33; k<=cbv_34; k=k+1) {...",shape=box];
	ForLoop2330082 -> 2362785;
	ForLoop2330082 -> _JOIN_2330082;
	2375203 [label="2375203  double scv_379;...",shape=box];
	2355689 [label="2355689  double scv_148;...",shape=box];
	_JOIN_2340238 [label="_JOIN_2340238None...",shape=box];
	_JOIN_2340238 -> 2455030;
	ForLoop2324482 [label="ForLoop2324482  for (k=kk; k<=cbv_14; k=k+20) {...",shape=box];
	ForLoop2324482 -> 2351554;
	ForLoop2324482 -> _JOIN_2324482;
	2529215 [label="2529215  register int cbv_63, cbv_64;...",shape=box];
	2319157 [label="2319157  double x_copy;...",shape=box];
	_JOIN_2330002 [label="_JOIN_2330002None...",shape=box];
	_JOIN_2330002 -> 2519425;
	2361011 [label="2361011  double scv_211;...",shape=box];
	2320914 [label="2320914  for (k=kk; k<=min(ny-1,kk+511); k=k+1) ...",shape=box];
	2348593 [label="2348593  double scv_64;...",shape=box];
	2334714 [label="2334714  for (k=kk; k<=min(ny-1,kk+511); k=k+1) ...",shape=box];
	2455012 [label="2455012  double scv_464, scv_465, scv_466, scv_467, scv_468, scv_469, scv_470, scv_471;...",shape=box];
	2371655 [label="2371655  double scv_337;...",shape=box];
	2331954 [label="2331954  for (k=kk; k<=min(ny-1,kk+511); k=k+1) ...",shape=box];
	2323674 [label="2323674  for (k=kk; k<=min(ny-1,kk+511); k=k+1) ...",shape=box];
	2362198 [label="2362198  double scv_212, scv_213, scv_214, scv_215, scv_216, scv_217, scv_218, scv_219;...",shape=box];
	_JOIN_2324562 [label="_JOIN_2324562None...",shape=box];
	_JOIN_2324562 -> 2324594;
	_JOIN_2341084 [label="_JOIN_2341084None...",shape=box];
	_JOIN_2341084 -> 2531155;
	2519425 [label="2519425  register int cbv_33, cbv_34;...",shape=box];
	_JOIN_2338362 [label="_JOIN_2338362None...",shape=box];
	_JOIN_2338362 -> 2338394;
	_JOIN_2328242 [label="_JOIN_2328242None...",shape=box];
	_JOIN_2328242 -> 2328274;
	_JOIN_2334682 [label="_JOIN_2334682None...",shape=box];
	_JOIN_2334682 -> 2334714;
	2520404 [label="2520404  register int cbv_36, cbv_37;...",shape=box];
	2340362 [label="2340362  scv_507=scv_507+A[i*ny+j]*x[j];...",shape=box];
	2340362 -> _JOIN_2340363;
	2460801 [label="2460801  double scv_507;...",shape=box];
	2350367 [label="2350367  double scv_85;...",shape=box];
	2518446 [label="2518446  register int cbv_30, cbv_31;...",shape=box];
	_JOIN_2323562 [label="_JOIN_2323562None...",shape=box];
	_JOIN_2323562 -> 2512572;
	ForLoop2340365 [label="ForLoop2340365  for (jjj=0; jjj<=ny-1; jjj=jjj+256) {...",shape=box];
	ForLoop2340365 -> ForLoop2340364;
	ForLoop2340365 -> _JOIN_2340365;
	ForLoop2322642 [label="ForLoop2322642  for (k=kk; k<=cbv_8; k=k+20) {...",shape=box];
	ForLoop2322642 -> 2348006;
	ForLoop2322642 -> _JOIN_2322642;
	ForLoop2331922 [label="ForLoop2331922  for (k=cbv_39; k<=cbv_40; k=k+1) {...",shape=box];
	ForLoop2331922 -> 2366333;
	ForLoop2331922 -> _JOIN_2331922;
	_JOIN_2331002 [label="_JOIN_2331002None...",shape=box];
	_JOIN_2331002 -> 2331034;
	2353328 [label="2353328  double scv_107, scv_108, scv_109, scv_110, scv_111, scv_112, scv_113, scv_114;...",shape=box];
	_JOIN_2325482 [label="_JOIN_2325482None...",shape=box];
	_JOIN_2325482 -> 2325514;
	2195853 [label="2195853  y[i]=0.0;...",shape=box];
	2335634 [label="2335634  for (k=kk; k<=min(ny-1,kk+511); k=k+1) ...",shape=box];
	2457103 [label="2457103  double scv_486, scv_487, scv_488, scv_489, scv_490, scv_491, scv_492, scv_493;...",shape=box];
	ForLoop2338362 [label="ForLoop2338362  for (k=cbv_60; k<=cbv_61; k=k+1) {...",shape=box];
	ForLoop2338362 -> 2378751;
	ForLoop2338362 -> _JOIN_2338362;
	_JOIN_2322722 [label="_JOIN_2322722None...",shape=box];
	_JOIN_2322722 -> 2322754;
	ForLoop2339202 [label="ForLoop2339202  for (k=kk; k<=cbv_62; k=k+20) {...",shape=box];
	ForLoop2339202 -> 2379938;
	ForLoop2339202 -> _JOIN_2339202;
	2326434 [label="2326434  for (k=kk; k<=min(ny-1,kk+511); k=k+1) ...",shape=box];
	2380525 [label="2380525  double scv_442;...",shape=box];
	ForLoop2323642 [label="ForLoop2323642  for (k=cbv_12; k<=cbv_13; k=k+1) {...",shape=box];
	ForLoop2323642 -> 2350367;
	ForLoop2323642 -> _JOIN_2323642;
	ForLoop2335602 [label="ForLoop2335602  for (k=cbv_51; k<=cbv_52; k=k+1) {...",shape=box];
	ForLoop2335602 -> 2373429;
	ForLoop2335602 -> _JOIN_2335602;
	ForLoop2195996 [label="ForLoop2195996  for (i=ny-((ny-(0))%9); i<=ny-1; i=i+1) ...",shape=box];
	ForLoop2195996 -> 2195995;
	ForLoop2195996 -> _JOIN_2195996;
	_JOIN_2341192 [label="_JOIN_2341192None...",shape=box];
	_JOIN_2341192 -> _JOIN_2341193;
	_JOIN_2325402 [label="_JOIN_2325402None...",shape=box];
	_JOIN_2325402 -> 2514530;
	_JOIN_2341195 [label="_JOIN_2341195None...",shape=box];
	_JOIN_2341195 -> _JOIN_2341197;
	_JOIN_2341197 [label="_JOIN_2341197None...",shape=box];
	_JOIN_2341197 -> _JOIN_2341198;
	_JOIN_2341193 [label="_JOIN_2341193None...",shape=box];
	_JOIN_2341193 -> 2460813;
	2514530 [label="2514530  register int cbv_18, cbv_19;...",shape=box];
	_JOIN_2341198 [label="_JOIN_2341198None...",shape=box];
	ForLoop2323562 [label="ForLoop2323562  for (k=kk; k<=cbv_11; k=k+20) {...",shape=box];
	ForLoop2323562 -> 2349780;
	ForLoop2323562 -> _JOIN_2323562;
	_JOIN_2337362 [label="_JOIN_2337362None...",shape=box];
	_JOIN_2337362 -> 2527257;
	_JOIN_2340202 [label="_JOIN_2340202None...",shape=box];
	_JOIN_2340202 -> 2340234;
	_JOIN_2340364 [label="_JOIN_2340364None...",shape=box];
	_JOIN_2340364 -> _JOIN_2340365;
	_JOIN_2320087 [label="_JOIN_2320087None...",shape=box];
	_JOIN_2320087 -> _JOIN_2320089;
	_JOIN_2320085 [label="_JOIN_2320085None...",shape=box];
	_JOIN_2320085 -> _JOIN_2320087;
	2324594 [label="2324594  for (k=kk; k<=min(ny-1,kk+511); k=k+1) ...",shape=box];
	2517467 [label="2517467  register int cbv_27, cbv_28;...",shape=box];
	2525299 [label="2525299  register int cbv_51, cbv_52;...",shape=box];
	_JOIN_2320089 [label="_JOIN_2320089None...",shape=box];
	_JOIN_2320089 -> ForLoop2340238;
	2330114 [label="2330114  for (k=kk; k<=min(ny-1,kk+511); k=k+1) ...",shape=box];
	_JOIN_2333762 [label="_JOIN_2333762None...",shape=box];
	_JOIN_2333762 -> 2333794;
	2195995 [label="2195995  y[i]=0.0;...",shape=box];
	2195995 -> _JOIN_2195996;
	2516488 [label="2516488  register int cbv_24, cbv_25;...",shape=box];
	_JOIN_2332762 [label="_JOIN_2332762None...",shape=box];
	_JOIN_2332762 -> 2522362;
	_JOIN_2195927 [label="_JOIN_2195927None...",shape=box];
	_JOIN_2195927 -> ForLoop2195996;
	_JOIN_2339202 [label="_JOIN_2339202None...",shape=box];
	_JOIN_2339202 -> 2529215;
	2367520 [label="2367520  double scv_275, scv_276, scv_277, scv_278, scv_279, scv_280, scv_281, scv_282;...",shape=box];
	2455030 [label="2455030  tmp[(i+20)]=scv_464;...",shape=box];
	2513551 [label="2513551  register int cbv_15, cbv_16;...",shape=box];
	_JOIN_2320808 [label="_JOIN_2320808None...",shape=box];
	_JOIN_2320808 -> 2509635;
	_JOIN_2321722 [label="_JOIN_2321722None...",shape=box];
	_JOIN_2321722 -> 2510614;
	ForLoop2332842 [label="ForLoop2332842  for (k=cbv_42; k<=cbv_43; k=k+1) {...",shape=box];
	ForLoop2332842 -> 2368107;
	ForLoop2332842 -> _JOIN_2332842;
	ForLoop2321722 [label="ForLoop2321722  for (k=kk; k<=cbv_5; k=k+20) {...",shape=box];
	ForLoop2321722 -> 2346232;
	ForLoop2321722 -> _JOIN_2321722;
	_JOIN_2333682 [label="_JOIN_2333682None...",shape=box];
	_JOIN_2333682 -> 2523341;
	_JOIN_2332842 [label="_JOIN_2332842None...",shape=box];
	_JOIN_2332842 -> 2332874;
	ForLoop2341195 [label="ForLoop2341195  for (i=(min(nx-1,ii+31))-(((min(nx-1,ii+31))-(ii)+1)%22)+1; i<=min(nx-1,ii+31); i=i+1) {...",shape=box];
	ForLoop2341195 -> 2460801;
	ForLoop2341195 -> _JOIN_2341195;
	ForLoop2341197 [label="ForLoop2341197  for (ii=iii; ii<=min(nx-1,iii+480); ii=ii+32) {...",shape=box];
	ForLoop2341197 -> 2319190;
	ForLoop2341197 -> _JOIN_2341197;
	_JOIN_2320882 [label="_JOIN_2320882None...",shape=box];
	_JOIN_2320882 -> 2320914;
	_JOIN_2326402 [label="_JOIN_2326402None...",shape=box];
	_JOIN_2326402 -> 2326434;
	ForLoop2327242 [label="ForLoop2327242  for (k=kk; k<=cbv_23; k=k+20) {...",shape=box];
	ForLoop2327242 -> 2356876;
	ForLoop2327242 -> _JOIN_2327242;
	_JOIN_2195996 [label="_JOIN_2195996None...",shape=box];
	_JOIN_2195996 -> 2319157;
	2510614 [label="2510614  register int cbv_6, cbv_7;...",shape=box];
	2378751 [label="2378751  double scv_421;...",shape=box];
	2521383 [label="2521383  register int cbv_39, cbv_40;...",shape=box];
	ForLoop2339282 [label="ForLoop2339282  for (k=cbv_63; k<=cbv_64; k=k+1) {...",shape=box];
	ForLoop2339282 -> 2380525;
	ForLoop2339282 -> _JOIN_2339282;
	2331034 [label="2331034  for (k=kk; k<=min(ny-1,kk+511); k=k+1) ...",shape=box];
	_JOIN_2328162 [label="_JOIN_2328162None...",shape=box];
	_JOIN_2328162 -> 2517467;
	ForLoop2326322 [label="ForLoop2326322  for (k=kk; k<=cbv_20; k=k+20) {...",shape=box];
	ForLoop2326322 -> 2355102;
	ForLoop2326322 -> _JOIN_2326322;
	2512572 [label="2512572  register int cbv_12, cbv_13;...",shape=box];
	2344467 [label="2344467  double scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8, scv_9;...",shape=box];
	_JOIN_2331842 [label="_JOIN_2331842None...",shape=box];
	_JOIN_2331842 -> 2521383;
	2332874 [label="2332874  for (k=kk; k<=min(ny-1,kk+511); k=k+1) ...",shape=box];
	2373429 [label="2373429  double scv_358;...",shape=box];
	ForLoop2330922 [label="ForLoop2330922  for (k=kk; k<=cbv_35; k=k+20) {...",shape=box];
	ForLoop2330922 -> 2363972;
	ForLoop2330922 -> _JOIN_2330922;
	2509635 [label="2509635  register int cbv_3, cbv_4;...",shape=box];
	2369294 [label="2369294  double scv_296, scv_297, scv_298, scv_299, scv_300, scv_301, scv_302, scv_303;...",shape=box];
	_JOIN_2335522 [label="_JOIN_2335522None...",shape=box];
	_JOIN_2335522 -> 2525299;
	2333794 [label="2333794  for (k=kk; k<=min(ny-1,kk+511); k=k+1) ...",shape=box];
	ForLoop2337442 [label="ForLoop2337442  for (k=cbv_57; k<=cbv_58; k=k+1) {...",shape=box];
	ForLoop2337442 -> 2376977;
	ForLoop2337442 -> _JOIN_2337442;
	2337474 [label="2337474  for (k=kk; k<=min(ny-1,kk+511); k=k+1) ...",shape=box];
	ForLoop2335522 [label="ForLoop2335522  for (k=kk; k<=cbv_50; k=k+20) {...",shape=box];
	ForLoop2335522 -> 2372842;
	ForLoop2335522 -> _JOIN_2335522;
	ForLoop2340202 [label="ForLoop2340202  for (k=cbv_66; k<=cbv_67; k=k+1) {...",shape=box];
	ForLoop2340202 -> 2382299;
	ForLoop2340202 -> _JOIN_2340202;
	ForLoop2325402 [label="ForLoop2325402  for (k=kk; k<=cbv_17; k=k+20) {...",shape=box];
	ForLoop2325402 -> 2353328;
	ForLoop2325402 -> _JOIN_2325402;
	2515509 [label="2515509  register int cbv_21, cbv_22;...",shape=box];
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 2195676;
	2369881 [label="2369881  double scv_316;...",shape=box];
	ForLoop2340364 [label="ForLoop2340364  for (jj=jjj; jj<=min(ny-1,jjj+224); jj=jj+32) {...",shape=box];
	ForLoop2340364 -> 2530274;
	ForLoop2340364 -> _JOIN_2340364;
	2353915 [label="2353915  double scv_127;...",shape=box];
	2342190 [label="2342190  double scv_1;...",shape=box];
	ForLoop2340363 [label="ForLoop2340363  for (j=jj; j<=cbv_68; j=j+1) {...",shape=box];
	ForLoop2340363 -> 2340362;
	ForLoop2340363 -> _JOIN_2340363;
	2368107 [label="2368107  double scv_295;...",shape=box];
	2531155 [label="2531155  register int cbv_70, cbv_71;...",shape=box];
	2325514 [label="2325514  for (k=kk; k<=min(ny-1,kk+511); k=k+1) ...",shape=box];
	2358650 [label="2358650  double scv_170, scv_171, scv_172, scv_173, scv_174, scv_175, scv_176, scv_177;...",shape=box];
	_JOIN_2340122 [label="_JOIN_2340122None...",shape=box];
	_JOIN_2340122 -> 2530194;
	ForLoop2320808 [label="ForLoop2320808  for (k=kk; k<=cbv_2; k=k+20) {...",shape=box];
	ForLoop2320808 -> 2344467;
	ForLoop2320808 -> _JOIN_2320808;
	ForLoop2321802 [label="ForLoop2321802  for (k=cbv_6; k<=cbv_7; k=k+1) {...",shape=box];
	ForLoop2321802 -> 2346819;
	ForLoop2321802 -> _JOIN_2321802;
	2321834 [label="2321834  for (k=kk; k<=min(ny-1,kk+511); k=k+1) ...",shape=box];
	2362785 [label="2362785  double scv_232;...",shape=box];
	2528236 [label="2528236  register int cbv_60, cbv_61;...",shape=box];
	2364559 [label="2364559  double scv_253;...",shape=box];
	2522362 [label="2522362  register int cbv_42, cbv_43;...",shape=box];
	ForLoop2320882 [label="ForLoop2320882  for (k=cbv_3; k<=cbv_4; k=k+1) {...",shape=box];
	ForLoop2320882 -> 2345045;
	ForLoop2320882 -> _JOIN_2320882;
	2376977 [label="2376977  double scv_400;...",shape=box];
	_JOIN_2330922 [label="_JOIN_2330922None...",shape=box];
	_JOIN_2330922 -> 2520404;
	2349780 [label="2349780  double scv_65, scv_66, scv_67, scv_68, scv_69, scv_70, scv_71, scv_72;...",shape=box];
	2378164 [label="2378164  double scv_401, scv_402, scv_403, scv_404, scv_405, scv_406, scv_407, scv_408;...",shape=box];
	2382299 [label="2382299  double scv_463;...",shape=box];
	ForLoop2333682 [label="ForLoop2333682  for (k=kk; k<=cbv_44; k=k+20) {...",shape=box];
	ForLoop2333682 -> 2369294;
	ForLoop2333682 -> _JOIN_2333682;
	_JOIN_2340236 [label="_JOIN_2340236None...",shape=box];
	_JOIN_2340236 -> _JOIN_2340238;
	ForLoop2329162 [label="ForLoop2329162  for (k=cbv_30; k<=cbv_31; k=k+1) {...",shape=box];
	ForLoop2329162 -> 2361011;
	ForLoop2329162 -> _JOIN_2329162;
	2340427 [label="2340427  for (k=kk; k<=min(ny-1,kk+511); k=k+1) ...",shape=box];
	2523341 [label="2523341  register int cbv_45, cbv_46;...",shape=box];
	ForLoop2340122 [label="ForLoop2340122  for (k=kk; k<=cbv_65; k=k+20) {...",shape=box];
	ForLoop2340122 -> 2381712;
	ForLoop2340122 -> _JOIN_2340122;
	ForLoop2322722 [label="ForLoop2322722  for (k=cbv_9; k<=cbv_10; k=k+1) {...",shape=box];
	ForLoop2322722 -> 2348593;
	ForLoop2322722 -> _JOIN_2322722;
	_JOIN_2324482 [label="_JOIN_2324482None...",shape=box];
	_JOIN_2324482 -> 2513551;
	ForLoop2341198 [label="ForLoop2341198  for (iii=0; iii<=nx-1; iii=iii+512) {...",shape=box];
	ForLoop2341198 -> ForLoop2341197;
	ForLoop2341198 -> _JOIN_2341198;
	2511593 [label="2511593  register int cbv_9, cbv_10;...",shape=box];
	2319190 [label="2319190  int i;...",shape=box];
	2319190 -> ForLoop2340240;
	2381712 [label="2381712  double scv_443, scv_444, scv_445, scv_446, scv_447, scv_448, scv_449, scv_450;...",shape=box];
	ForLoop2334602 [label="ForLoop2334602  for (k=kk; k<=cbv_47; k=k+20) {...",shape=box];
	ForLoop2334602 -> 2371068;
	ForLoop2334602 -> _JOIN_2334602;
	2346819 [label="2346819  double scv_43;...",shape=box];
	2338394 [label="2338394  for (k=kk; k<=min(ny-1,kk+511); k=k+1) ...",shape=box];
	ForLoop2195927 [label="ForLoop2195927  for (i=0; i<=ny-9; i=i+9) {...",shape=box];
	ForLoop2195927 -> 2195853;
	ForLoop2195927 -> _JOIN_2195927;
	ForLoop2320087 [label="ForLoop2320087  for (jj=jjj; jj<=min(ny-1,jjj+224); jj=jj+32) {...",shape=box];
	ForLoop2320087 -> 2508754;
	ForLoop2320087 -> _JOIN_2320087;
	ForLoop2320085 [label="ForLoop2320085  for (j=jj; j<=cbv_1; j=j+1) {...",shape=box];
	ForLoop2320085 -> 2342190;
	ForLoop2320085 -> _JOIN_2320085;
	2339314 [label="2339314  for (k=kk; k<=min(ny-1,kk+511); k=k+1) ...",shape=box];
	_JOIN_2335602 [label="_JOIN_2335602None...",shape=box];
	_JOIN_2335602 -> 2335634;
	2363972 [label="2363972  double scv_233, scv_234, scv_235, scv_236, scv_237, scv_238, scv_239, scv_240;...",shape=box];
	ForLoop2331002 [label="ForLoop2331002  for (k=cbv_36; k<=cbv_37; k=k+1) {...",shape=box];
	ForLoop2331002 -> 2364559;
	ForLoop2331002 -> _JOIN_2331002;
	_JOIN_2331922 [label="_JOIN_2331922None...",shape=box];
	_JOIN_2331922 -> 2331954;
	ForLoop2320089 [label="ForLoop2320089  for (jjj=0; jjj<=ny-1; jjj=jjj+256) {...",shape=box];
	ForLoop2320089 -> ForLoop2320087;
	ForLoop2320089 -> _JOIN_2320089;
	2348006 [label="2348006  double scv_44, scv_45, scv_46, scv_47, scv_48, scv_49, scv_50, scv_51;...",shape=box];
	2329194 [label="2329194  for (k=kk; k<=min(ny-1,kk+511); k=k+1) ...",shape=box];
	ForLoop2331842 [label="ForLoop2331842  for (k=kk; k<=cbv_38; k=k+20) {...",shape=box];
	ForLoop2331842 -> 2365746;
	ForLoop2331842 -> _JOIN_2331842;
	2346232 [label="2346232  double scv_23, scv_24, scv_25, scv_26, scv_27, scv_28, scv_29, scv_30;...",shape=box];
	2365746 [label="2365746  double scv_254, scv_255, scv_256, scv_257, scv_258, scv_259, scv_260, scv_261;...",shape=box];
	_JOIN_2337442 [label="_JOIN_2337442None...",shape=box];
	_JOIN_2337442 -> 2337474;
	ForLoop2328162 [label="ForLoop2328162  for (k=kk; k<=cbv_26; k=k+20) {...",shape=box];
	ForLoop2328162 -> 2358650;
	ForLoop2328162 -> _JOIN_2328162;
	_JOIN_2322642 [label="_JOIN_2322642None...",shape=box];
	_JOIN_2322642 -> 2511593;
	2379938 [label="2379938  double scv_422, scv_423, scv_424, scv_425, scv_426, scv_427, scv_428, scv_429;...",shape=box];
	ForLoop2328242 [label="ForLoop2328242  for (k=cbv_27; k<=cbv_28; k=k+1) {...",shape=box];
	ForLoop2328242 -> 2359237;
	ForLoop2328242 -> _JOIN_2328242;
	2374616 [label="2374616  double scv_359, scv_360, scv_361, scv_362, scv_363, scv_364, scv_365, scv_366;...",shape=box];
	ForLoop2341193 [label="ForLoop2341193  for (kkk=0; kkk<=ny-1; kkk=kkk+2048) {...",shape=box];
	ForLoop2341193 -> ForLoop2341192;
	ForLoop2341193 -> _JOIN_2341193;
	2327354 [label="2327354  for (k=kk; k<=min(ny-1,kk+511); k=k+1) ...",shape=box];
	ForLoop2336522 [label="ForLoop2336522  for (k=cbv_54; k<=cbv_55; k=k+1) {...",shape=box];
	ForLoop2336522 -> 2375203;
	ForLoop2336522 -> _JOIN_2336522;
	2195676 [label="2195676  int i;...",shape=box];
	2195676 -> ForLoop2195927;
	ForLoop2338282 [label="ForLoop2338282  for (k=kk; k<=cbv_59; k=k+20) {...",shape=box];
	ForLoop2338282 -> 2378164;
	ForLoop2338282 -> _JOIN_2338282;
	_JOIN_2339282 [label="_JOIN_2339282None...",shape=box];
	_JOIN_2339282 -> 2339314;
	2355102 [label="2355102  double scv_128, scv_129, scv_130, scv_131, scv_132, scv_133, scv_134, scv_135;...",shape=box];
	_JOIN_2326322 [label="_JOIN_2326322None...",shape=box];
	_JOIN_2326322 -> 2515509;
	2352141 [label="2352141  double scv_106;...",shape=box];
	2328274 [label="2328274  for (k=kk; k<=min(ny-1,kk+511); k=k+1) ...",shape=box];
	2527257 [label="2527257  register int cbv_57, cbv_58;...",shape=box];
	_JOIN_2329162 [label="_JOIN_2329162None...",shape=box];
	_JOIN_2329162 -> 2329194;
	2457681 [label="2457681  double scv_506;...",shape=box];
	_JOIN_2341158 [label="_JOIN_2341158None...",shape=box];
	_JOIN_2341158 -> 2341190;
	_JOIN_2323642 [label="_JOIN_2323642None...",shape=box];
	_JOIN_2323642 -> 2323674;
	2530274 [label="2530274  register int cbv_68;...",shape=box];
	ForLoop2333762 [label="ForLoop2333762  for (k=cbv_45; k<=cbv_46; k=k+1) {...",shape=box];
	ForLoop2333762 -> 2369881;
	ForLoop2333762 -> _JOIN_2333762;
	ForLoop2341158 [label="ForLoop2341158  for (k=cbv_70; k<=cbv_71; k=k+1) {...",shape=box];
	ForLoop2341158 -> 2457681;
	ForLoop2341158 -> _JOIN_2341158;
	2360424 [label="2360424  double scv_191, scv_192, scv_193, scv_194, scv_195, scv_196, scv_197, scv_198;...",shape=box];
	_JOIN_2330082 [label="_JOIN_2330082None...",shape=box];
	_JOIN_2330082 -> 2330114;
	2460813 [label="2460813  tmp[i]=scv_507;...",shape=box];
	2460813 -> _JOIN_2341195;
	2376390 [label="2376390  double scv_380, scv_381, scv_382, scv_383, scv_384, scv_385, scv_386, scv_387;...",shape=box];
	2345045 [label="2345045  double scv_22;...",shape=box];
	ForLoop2340236 [label="ForLoop2340236  for (kk=kkk; kk<=min(ny-1,kkk+1536); kk=kk+512) {...",shape=box];
	ForLoop2340236 -> 2320151;
	ForLoop2340236 -> _JOIN_2340236;
	_JOIN_2336522 [label="_JOIN_2336522None...",shape=box];
	_JOIN_2336522 -> 2336554;
	ForLoop2340238 [label="ForLoop2340238  for (kkk=0; kkk<=ny-1; kkk=kkk+2048) {...",shape=box];
	ForLoop2340238 -> ForLoop2340236;
	ForLoop2340238 -> _JOIN_2340238;
	2372842 [label="2372842  double scv_338, scv_339, scv_340, scv_341, scv_342, scv_343, scv_344, scv_345;...",shape=box];
	2320151 [label="2320151  for (k=kk; k<=min(ny-1,kk+511); k=k+1) ...",shape=box];
	ForLoop2341192 [label="ForLoop2341192  for (kk=kkk; kk<=min(ny-1,kkk+1536); kk=kk+512) {...",shape=box];
	ForLoop2341192 -> 2340427;
	ForLoop2341192 -> _JOIN_2341192;
	ForLoop2336442 [label="ForLoop2336442  for (k=kk; k<=cbv_53; k=k+20) {...",shape=box];
	ForLoop2336442 -> 2374616;
	ForLoop2336442 -> _JOIN_2336442;
	_JOIN_2336442 [label="_JOIN_2336442None...",shape=box];
	_JOIN_2336442 -> 2526278;
	_JOIN_2329082 [label="_JOIN_2329082None...",shape=box];
	_JOIN_2329082 -> 2518446;
	ForLoop2327322 [label="ForLoop2327322  for (k=cbv_24; k<=cbv_25; k=k+1) {...",shape=box];
	ForLoop2327322 -> 2357463;
	ForLoop2327322 -> _JOIN_2327322;
	_JOIN_2340240 [label="_JOIN_2340240None...",shape=box];
	_JOIN_2340240 -> ForLoop2341195;
	ForLoop2332762 [label="ForLoop2332762  for (k=kk; k<=cbv_41; k=k+20) {...",shape=box];
	ForLoop2332762 -> 2367520;
	ForLoop2332762 -> _JOIN_2332762;
	2340234 [label="2340234  for (k=kk; k<=min(ny-1,kk+511); k=k+1) ...",shape=box];
	2340234 -> _JOIN_2340236;
	2351554 [label="2351554  double scv_86, scv_87, scv_88, scv_89, scv_90, scv_91, scv_92, scv_93;...",shape=box];
	2357463 [label="2357463  double scv_169;...",shape=box];
	2530194 [label="2530194  register int cbv_66, cbv_67;...",shape=box];
	_JOIN_2334602 [label="_JOIN_2334602None...",shape=box];
	_JOIN_2334602 -> 2524320;

}

 building test:
	gcc -O3 expected=9369846271501.798828
actual=9369846271501.798828
-fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest15.exe __orio_perftest15.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest15.exe  
{'[2, 2, 6, 4, 3, 6, 0, 1, 8, 21, 0, 19, 0, 0, 0, 1, 0, 1]' : 0.138572}
{'[2, 2, 6, 4, 3, 6, 0, 1, 8, 21, 0, 19, 0, 0, 0, 1, 0, 1]' : 0.138427}
{'[2, 2, 6, 4, 3, 6, 0, 1, 8, 21, 0, 19, 0, 0, 0, 1, 0, 1]' : 0.138495}
{'[2, 2, 6, 4, 3, 6, 0, 1, 8, 21, 0, 19, 0, 0, 0, 1, 0, 1]' : 0.139283}
{'[2, 2, 6, 4, 3, 6, 0, 1, 8, 21, 0, 19, 0, 0, 0, 1, 0, 1]' : 0.138618}
{'[2, 2, 6, 4, 3, 6, 0, 1, 8, 21, 0, 19, 0, 0, 0, 1, 0, 1]' : 0.138237}
{'[2, 2, 6, 4, 3, 6, 0, 1, 8, 21, 0, 19, 0, 0, 0, 1, 0, 1]' : 0.138189}
{'[2, 2, 6, 4, 3, 6, 0, 1, 8, 21, 0, 19, 0, 0, 0, 1, 0, 1]' : 0.138208}
{'[2, 2, 6, 4, 3, 6, 0, 1, 8, 21, 0, 19, 0, 0, 0, 1, 0, 1]' : 0.138268}
{'[2, 2, 6, 4, 3, 6, 0, 1, 8, 21, 0, 19, 0, 0, 0, 1, 0, 1]' : 0.138211}
{'[2, 2, 6, 4, 3, 6, 0, 1, 8, 21, 0, 19, 0, 0, 0, 1, 0, 1]' : 0.138322}
{'[2, 2, 6, 4, 3, 6, 0, 1, 8, 21, 0, 19, 0, 0, 0, 1, 0, 1]' : 0.138174}
{'[2, 2, 6, 4, 3, 6, 0, 1, 8, 21, 0, 19, 0, 0, 0, 1, 0, 1]' : 0.138495}
{'[2, 2, 6, 4, 3, 6, 0, 1, 8, 21, 0, 19, 0, 0, 0, 1, 0, 1]' : 0.138252}
{'[2, 2, 6, 4, 3, 6, 0, 1, 8, 21, 0, 19, 0, 0, 0, 1, 0, 1]' : 0.138231}
{'[2, 2, 6, 4, 3, 6, 0, 1, 8, 21, 0, 19, 0, 0, 0, 1, 0, 1]' : 0.138371}
{'[2, 2, 6, 4, 3, 6, 0, 1, 8, 21, 0, 19, 0, 0, 0, 1, 0, 1]' : 0.138215}
{'[2, 2, 6, 4, 3, 6, 0, 1, 8, 21, 0, 19, 0, 0, 0, 1, 0, 1]' : 0.139257}
{'[2, 2, 6, 4, 3, 6, 0, 1, 8, 21, 0, 19, 0, 0, 0, 1, 0, 1]' : 0.138283}
{'[2, 2, 6, 4, 3, 6, 0, 1, 8, 21, 0, 19, 0, 0, 0, 1, 0, 1]' : 0.138282}
{'[2, 2, 6, 4, 3, 6, 0, 1, 8, 21, 0, 19, 0, 0, 0, 1, 0, 1]' : 0.138222}
{'[2, 2, 6, 4, 3, 6, 0, 1, 8, 21, 0, 19, 0, 0, 0, 1, 0, 1]' : 0.138214}
{'[2, 2, 6, 4, 3, 6, 0, 1, 8, 21, 0, 19, 0, 0, 0, 1, 0, 1]' : 0.138207}
{'[2, 2, 6, 4, 3, 6, 0, 1, 8, 21, 0, 19, 0, 0, 0, 1, 0, 1]' : 0.138165}
{'[2, 2, 6, 4, 3, 6, 0, 1, 8, 21, 0, 19, 0, 0, 0, 1, 0, 1]' : 0.138228}
{'[2, 2, 6, 4, 3, 6, 0, 1, 8, 21, 0, 19, 0, 0, 0, 1, 0, 1]' : 0.138599}
{'[2, 2, 6, 4, 3, 6, 0, 1, 8, 21, 0, 19, 0, 0, 0, 1, 0, 1]' : 0.138395}
{'[2, 2, 6, 4, 3, 6, 0, 1, 8, 21, 0, 19, 0, 0, 0, 1, 0, 1]' : 0.138291}
{'[2, 2, 6, 4, 3, 6, 0, 1, 8, 21, 0, 19, 0, 0, 0, 1, 0, 1]' : 0.138164}
{'[2, 2, 6, 4, 3, 6, 0, 1, 8, 21, 0, 19, 0, 0, 0, 1, 0, 1]' : 0.138195}

out:
 ["{'[2, 2, 6, 4, 3, 6, 0, 1, 8, 21, 0, 19, 0, 0, 0, 1, 0, 1]' : 0.138572}", "{'[2, 2, 6, 4, 3, 6, 0, 1, 8, 21, 0, 19, 0, 0, 0, 1, 0, 1]' : 0.138427}", "{'[2, 2, 6, 4, 3, 6, 0, 1, 8, 21, 0, 19, 0, 0, 0, 1, 0, 1]' : 0.138495}", "{'[2, 2, 6, 4, 3, 6, 0, 1, 8, 21, 0, 19, 0, 0, 0, 1, 0, 1]' : 0.139283}", "{'[2, 2, 6, 4, 3, 6, 0, 1, 8, 21, 0, 19, 0, 0, 0, 1, 0, 1]' : 0.138618}", "{'[2, 2, 6, 4, 3, 6, 0, 1, 8, 21, 0, 19, 0, 0, 0, 1, 0, 1]' : 0.138237}", "{'[2, 2, 6, 4, 3, 6, 0, 1, 8, 21, 0, 19, 0, 0, 0, 1, 0, 1]' : 0.138189}", "{'[2, 2, 6, 4, 3, 6, 0, 1, 8, 21, 0, 19, 0, 0, 0, 1, 0, 1]' : 0.138208}", "{'[2, 2, 6, 4, 3, 6, 0, 1, 8, 21, 0, 19, 0, 0, 0, 1, 0, 1]' : 0.138268}", "{'[2, 2, 6, 4, 3, 6, 0, 1, 8, 21, 0, 19, 0, 0, 0, 1, 0, 1]' : 0.138211}", "{'[2, 2, 6, 4, 3, 6, 0, 1, 8, 21, 0, 19, 0, 0, 0, 1, 0, 1]' : 0.138322}", "{'[2, 2, 6, 4, 3, 6, 0, 1, 8, 21, 0, 19, 0, 0, 0, 1, 0, 1]' : 0.138174}", "{'[2, 2, 6, 4, 3, 6, 0, 1, 8, 21, 0, 19, 0, 0, 0, 1, 0, 1]' : 0.138495}", "{'[2, 2, 6, 4, 3, 6, 0, 1, 8, 21, 0, 19, 0, 0, 0, 1, 0, 1]' : 0.138252}", "{'[2, 2, 6, 4, 3, 6, 0, 1, 8, 21, 0, 19, 0, 0, 0, 1, 0, 1]' : 0.138231}", "{'[2, 2, 6, 4, 3, 6, 0, 1, 8, 21, 0, 19, 0, 0, 0, 1, 0, 1]' : 0.138371}", "{'[2, 2, 6, 4, 3, 6, 0, 1, 8, 21, 0, 19, 0, 0, 0, 1, 0, 1]' : 0.138215}", "{'[2, 2, 6, 4, 3, 6, 0, 1, 8, 21, 0, 19, 0, 0, 0, 1, 0, 1]' : 0.139257}", "{'[2, 2, 6, 4, 3, 6, 0, 1, 8, 21, 0, 19, 0, 0, 0, 1, 0, 1]' : 0.138283}", "{'[2, 2, 6, 4, 3, 6, 0, 1, 8, 21, 0, 19, 0, 0, 0, 1, 0, 1]' : 0.138282}", "{'[2, 2, 6, 4, 3, 6, 0, 1, 8, 21, 0, 19, 0, 0, 0, 1, 0, 1]' : 0.138222}", "{'[2, 2, 6, 4, 3, 6, 0, 1, 8, 21, 0, 19, 0, 0, 0, 1, 0, 1]' : 0.138214}", "{'[2, 2, 6, 4, 3, 6, 0, 1, 8, 21, 0, 19, 0, 0, 0, 1, 0, 1]' : 0.138207}", "{'[2, 2, 6, 4, 3, 6, 0, 1, 8, 21, 0, 19, 0, 0, 0, 1, 0, 1]' : 0.138165}", "{'[2, 2, 6, 4, 3, 6, 0, 1, 8, 21, 0, 19, 0, 0, 0, 1, 0, 1]' : 0.138228}", "{'[2, 2, 6, 4, 3, 6, 0, 1, 8, 21, 0, 19, 0, 0, 0, 1, 0, 1]' : 0.138599}", "{'[2, 2, 6, 4, 3, 6, 0, 1, 8, 21, 0, 19, 0, 0, 0, 1, 0, 1]' : 0.138395}", "{'[2, 2, 6, 4, 3, 6, 0, 1, 8, 21, 0, 19, 0, 0, 0, 1, 0, 1]' : 0.138291}", "{'[2, 2, 6, 4, 3, 6, 0, 1, 8, 21, 0, 19, 0, 0, 0, 1, 0, 1]' : 0.138164}", "{'[2, 2, 6, 4, 3, 6, 0, 1, 8, 21, 0, 19, 0, 0, 0, 1, 0, 1]' : 0.138195}"]
returning from 'run': {'[2, 2, 6, 4, 3, 6, 0, 1, 8, 21, 0, 19, 0, 0, 0, 1, 0, 1]': ([0.138572, 0.138427, 0.138495, 0.139283, 0.138618, 0.138237, 0.138189, 0.138208, 0.138268, 0.138211, 0.138322, 0.138174, 0.138495, 0.138252, 0.138231, 0.138371, 0.138215, 0.139257, 0.138283, 0.138282, 0.138222, 0.138214, 0.138207, 0.138165, 0.138228, 0.138599, 0.138395, 0.138291, 0.138164, 0.138195], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.138572, 0.138427, 0.138495, 0.139283, 0.138618, 0.138237, 0.138189, 0.138208, 0.138268, 0.138211, 0.138322, 0.138174, 0.138495, 0.138252, 0.138231, 0.138371, 0.138215, 0.139257, 0.138283, 0.138282, 0.138222, 0.138214, 0.138207, 0.138165, 0.138228, 0.138599, 0.138395, 0.138291, 0.138164, 0.138195], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[2, 2, 6, 4, 3, 6, 0, 1, 8, 21, 0, 19, 0, 0, 0, 1, 0, 1]': ([0.138572, 0.138427, 0.138495, 0.139283, 0.138618, 0.138237, 0.138189, 0.138208, 0.138268, 0.138211, 0.138322, 0.138174, 0.138495, 0.138252, 0.138231, 0.138371, 0.138215, 0.139257, 0.138283, 0.138282, 0.138222, 0.138214, 0.138207, 0.138165, 0.138228, 0.138599, 0.138395, 0.138291, 0.138164, 0.138195], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [2, 5, 2, 0, 6, 0, 0, 0, 1, 1, 0, 2, 0, 0, 2, 0, 1, 1]
Fixed Factors: {}
Testing candidate 16: [2, 5, 2, 0, 6, 0, 0, 0, 1, 1, 0, 2, 0, 0, 2, 0, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	5
        Additions: 		697
        Multiplications: 	222
        Divisions: 		0
        Logical: 		0
        Reads: 			1305
        Writes: 		175
        Comparisons:		21
        Gotos: 			0
        
digraph CFG {
	ForLoop2569391 [label="ForLoop2569391  for (k=kt; k<=cbv_11; k=k+3) {...",shape=box];
	ForLoop2569391 -> 2569333;
	ForLoop2569391 -> _JOIN_2569391;
	2531801 [label="2531801  y[i]=0.0;...",shape=box];
	2531801 -> _JOIN_2531802;
	2575481 [label="2575481  register int cbv_4, cbv_5;...",shape=box];
	_JOIN_2565788 [label="_JOIN_2565788None...",shape=box];
	_JOIN_2565788 -> ForLoop2568153;
	_JOIN_2568153 [label="_JOIN_2568153None...",shape=box];
	_JOIN_2568153 -> _JOIN_2568155;
	_JOIN_2568150 [label="_JOIN_2568150None...",shape=box];
	_JOIN_2568150 -> _JOIN_2568153;
	ForLoop2568338 [label="ForLoop2568338  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) ...",shape=box];
	ForLoop2568338 -> ForLoop2568337;
	ForLoop2568338 -> _JOIN_2568338;
	_JOIN_2568337 [label="_JOIN_2568337None...",shape=box];
	_JOIN_2568337 -> _JOIN_2568338;
	_JOIN_2568076 [label="_JOIN_2568076None...",shape=box];
	_JOIN_2568076 -> 2575726;
	ForLoop2569459 [label="ForLoop2569459  for (k=cbv_12; k<=cbv_13; k=k+1) ...",shape=box];
	ForLoop2569459 -> 2569458;
	ForLoop2569459 -> _JOIN_2569459;
	_JOIN_2568338 [label="_JOIN_2568338None...",shape=box];
	_JOIN_2568338 -> ForLoop2569462;
	_JOIN_2565784 [label="_JOIN_2565784None...",shape=box];
	_JOIN_2565784 -> _JOIN_2565786;
	2531861 [label="2531861  register int cbv_2, cbv_3;...",shape=box];
	_JOIN_2565786 [label="_JOIN_2565786None...",shape=box];
	_JOIN_2565786 -> _JOIN_2565788;
	2576947 [label="2576947  register int cbv_12, cbv_13;...",shape=box];
	_JOIN_2569391 [label="_JOIN_2569391None...",shape=box];
	_JOIN_2569391 -> 2576947;
	2568391 [label="2568391  y[kt]=y[kt]+A[i*ny+kt]*tmp[i];...",shape=box];
	_JOIN_2569292 [label="_JOIN_2569292None...",shape=box];
	_JOIN_2569292 -> 2569293;
	2568335 [label="2568335  tmp[i]=tmp[i]+A[i*ny+j]*x[j];...",shape=box];
	2568335 -> _JOIN_2568336;
	ForLoop2569292 [label="ForLoop2569292  for (kt=kk; kt<=cbv_10; kt=kt+32) {...",shape=box];
	ForLoop2569292 -> 2568391;
	ForLoop2569292 -> _JOIN_2569292;
	2569293 [label="2569293  int k;...",shape=box];
	2531722 [label="2531722  y[i]=0.0;...",shape=box];
	2575809 [label="2575809  register int cbv_9;...",shape=box];
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 2531650;
	2576759 [label="2576759  register int cbv_10;...",shape=box];
	2575726 [label="2575726  register int cbv_7, cbv_8;...",shape=box];
	ForLoop2568076 [label="ForLoop2568076  for (k=kt; k<=cbv_6; k=k+3) {...",shape=box];
	ForLoop2568076 -> 2568006;
	ForLoop2568076 -> _JOIN_2568076;
	_JOIN_2569464 [label="_JOIN_2569464None...",shape=box];
	_JOIN_2569464 -> _JOIN_2535075;
	ForLoop2569462 [label="ForLoop2569462  for (kk=0; kk<=ny-1; kk=kk+32) {...",shape=box];
	ForLoop2569462 -> 2576759;
	ForLoop2569462 -> _JOIN_2569462;
	ForLoop2568155 [label="ForLoop2568155  for (i=ii; i<=min(nx-1,ii+31)-1; i=i+2) {...",shape=box];
	ForLoop2568155 -> 2565675;
	ForLoop2568155 -> _JOIN_2568155;
	_JOIN_2567791 [label="_JOIN_2567791None...",shape=box];
	_JOIN_2567791 -> 2567792;
	ForLoop2568153 [label="ForLoop2568153  for (kk=0; kk<=ny-1; kk=kk+32) {...",shape=box];
	ForLoop2568153 -> 2575293;
	ForLoop2568153 -> _JOIN_2568153;
	ForLoop2568150 [label="ForLoop2568150  for (k=cbv_7; k<=cbv_8; k=k+1) ...",shape=box];
	ForLoop2568150 -> 2568149;
	ForLoop2568150 -> _JOIN_2568150;
	ForLoop2531733 [label="ForLoop2531733  for (i=0; i<=cbv_1; i=i+2) {...",shape=box];
	ForLoop2531733 -> 2531722;
	ForLoop2531733 -> _JOIN_2531733;
	2569458 [label="2569458  y[k]=y[k]+A[i*ny+k]*tmp[i];...",shape=box];
	2569458 -> _JOIN_2569459;
	2567960 [label="2567960  int k;...",shape=box];
	2531650 [label="2531650  int i;...",shape=box];
	ForLoop2531802 [label="ForLoop2531802  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop2531802 -> 2531801;
	ForLoop2531802 -> _JOIN_2531802;
	2568006 [label="2568006  y[k]=y[k]+A[(i+1)*ny+k]*tmp[(i+1)];...",shape=box];
	ForLoop2565784 [label="ForLoop2565784  for (j=jj; j<=cbv_1; j=j+1) {...",shape=box];
	ForLoop2565784 -> 2565753;
	ForLoop2565784 -> _JOIN_2565784;
	ForLoop2569464 [label="ForLoop2569464  for (i=(min(nx-1,ii+31))-(((min(nx-1,ii+31))-(ii)+1)%2)+1; i<=min(nx-1,ii+31); i=i+1) {...",shape=box];
	ForLoop2569464 -> 2568266;
	ForLoop2569464 -> _JOIN_2569464;
	ForLoop2565786 [label="ForLoop2565786  for (jj=jjj; jj<=min(ny-1,jjj+1792); jj=jj+256) {...",shape=box];
	ForLoop2565786 -> 2573294;
	ForLoop2565786 -> _JOIN_2565786;
	2567792 [label="2567792  int k;...",shape=box];
	ForLoop2567890 [label="ForLoop2567890  for (k=kt; k<=cbv_3; k=k+3) {...",shape=box];
	ForLoop2567890 -> 2567832;
	ForLoop2567890 -> _JOIN_2567890;
	2573294 [label="2573294  register int cbv_1;...",shape=box];
	2567832 [label="2567832  y[k]=y[k]+A[i*ny+k]*tmp[i];...",shape=box];
	_JOIN_2531733 [label="_JOIN_2531733None...",shape=box];
	_JOIN_2531733 -> 2531861;
	_JOIN_2531802 [label="_JOIN_2531802None...",shape=box];
	_JOIN_2531802 -> 2538322;
	_JOIN_2569462 [label="_JOIN_2569462None...",shape=box];
	_JOIN_2569462 -> _JOIN_2569464;
	ForLoop2535075 [label="ForLoop2535075  for (ii=0; ii<=nx-1; ii=ii+32) {...",shape=box];
	ForLoop2535075 -> 2558457;
	ForLoop2535075 -> _JOIN_2535075;
	ForLoop2565788 [label="ForLoop2565788  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop2565788 -> ForLoop2565786;
	ForLoop2565788 -> _JOIN_2565788;
	_JOIN_2535075 [label="_JOIN_2535075None...",shape=box];
	_JOIN_2568155 [label="_JOIN_2568155None...",shape=box];
	_JOIN_2568155 -> ForLoop2569464;
	2558457 [label="2558457  int i;...",shape=box];
	2558457 -> ForLoop2568155;
	2567957 [label="2567957  y[k]=y[k]+A[i*ny+k]*tmp[i];...",shape=box];
	2567957 -> _JOIN_2567958;
	ForLoop2567958 [label="ForLoop2567958  for (k=cbv_4; k<=cbv_5; k=k+1) ...",shape=box];
	ForLoop2567958 -> 256expected=9369846271501.798828
actual=9369846271501.798828
7957;
	ForLoop2567958 -> _JOIN_2567958;
	2565675 [label="2565675  tmp[i]=0;...",shape=box];
	ForLoop2567791 [label="ForLoop2567791  for (kt=kk; kt<=cbv_2; kt=kt+32) {...",shape=box];
	ForLoop2567791 -> 2565841;
	ForLoop2567791 -> _JOIN_2567791;
	2565841 [label="2565841  y[kt]=y[kt]+A[i*ny+kt]*tmp[i];...",shape=box];
	_JOIN_2567958 [label="_JOIN_2567958None...",shape=box];
	_JOIN_2567958 -> 2567960;
	2568266 [label="2568266  tmp[i]=0;...",shape=box];
	2568266 -> ForLoop2568338;
	_JOIN_2568336 [label="_JOIN_2568336None...",shape=box];
	_JOIN_2568336 -> _JOIN_2568337;
	_JOIN_2567890 [label="_JOIN_2567890None...",shape=box];
	_JOIN_2567890 -> 2575481;
	2568149 [label="2568149  y[k]=y[k]+A[(i+1)*ny+k]*tmp[(i+1)];...",shape=box];
	2568149 -> _JOIN_2568150;
	_JOIN_2569459 [label="_JOIN_2569459None...",shape=box];
	_JOIN_2569459 -> _JOIN_2569462;
	2538322 [label="2538322  double x_copy;...",shape=box];
	2575293 [label="2575293  register int cbv_2;...",shape=box];
	ForLoop2568336 [label="ForLoop2568336  for (j=jj; j<=cbv_9; j=j+1) ...",shape=box];
	ForLoop2568336 -> 2568335;
	ForLoop2568336 -> _JOIN_2568336;
	2565753 [label="2565753  tmp[i]=tmp[i]+A[i*ny+j]*x[j];...",shape=box];
	2569333 [label="2569333  y[k]=y[k]+A[i*ny+k]*tmp[i];...",shape=box];
	ForLoop2568337 [label="ForLoop2568337  for (jj=jjj; jj<=min(ny-1,jjj+1792); jj=jj+256) {...",shape=box];
	ForLoop2568337 -> 2575809;
	ForLoop2568337 -> _JOIN_2568337;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest16.exe __orio_perftest16.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest16.exe  
{'[2, 5, 2, 0, 6, 0, 0, 0, 1, 1, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.113849}
{'[2, 5, 2, 0, 6, 0, 0, 0, 1, 1, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.11366}
{'[2, 5, 2, 0, 6, 0, 0, 0, 1, 1, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.113531}
{'[2, 5, 2, 0, 6, 0, 0, 0, 1, 1, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.113598}
{'[2, 5, 2, 0, 6, 0, 0, 0, 1, 1, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.113534}
{'[2, 5, 2, 0, 6, 0, 0, 0, 1, 1, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.113662}
{'[2, 5, 2, 0, 6, 0, 0, 0, 1, 1, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.113564}
{'[2, 5, 2, 0, 6, 0, 0, 0, 1, 1, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.114599}
{'[2, 5, 2, 0, 6, 0, 0, 0, 1, 1, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.113757}
{'[2, 5, 2, 0, 6, 0, 0, 0, 1, 1, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.113605}
{'[2, 5, 2, 0, 6, 0, 0, 0, 1, 1, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.113545}
{'[2, 5, 2, 0, 6, 0, 0, 0, 1, 1, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.113608}
{'[2, 5, 2, 0, 6, 0, 0, 0, 1, 1, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.113539}
{'[2, 5, 2, 0, 6, 0, 0, 0, 1, 1, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.113539}
{'[2, 5, 2, 0, 6, 0, 0, 0, 1, 1, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.113641}
{'[2, 5, 2, 0, 6, 0, 0, 0, 1, 1, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.113549}
{'[2, 5, 2, 0, 6, 0, 0, 0, 1, 1, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.113695}
{'[2, 5, 2, 0, 6, 0, 0, 0, 1, 1, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.113687}
{'[2, 5, 2, 0, 6, 0, 0, 0, 1, 1, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.113602}
{'[2, 5, 2, 0, 6, 0, 0, 0, 1, 1, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.113563}
{'[2, 5, 2, 0, 6, 0, 0, 0, 1, 1, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.113552}
{'[2, 5, 2, 0, 6, 0, 0, 0, 1, 1, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.113731}
{'[2, 5, 2, 0, 6, 0, 0, 0, 1, 1, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.113599}
{'[2, 5, 2, 0, 6, 0, 0, 0, 1, 1, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.113615}
{'[2, 5, 2, 0, 6, 0, 0, 0, 1, 1, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.113576}
{'[2, 5, 2, 0, 6, 0, 0, 0, 1, 1, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.114577}
{'[2, 5, 2, 0, 6, 0, 0, 0, 1, 1, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.113606}
{'[2, 5, 2, 0, 6, 0, 0, 0, 1, 1, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.113534}
{'[2, 5, 2, 0, 6, 0, 0, 0, 1, 1, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.113502}
{'[2, 5, 2, 0, 6, 0, 0, 0, 1, 1, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.113557}

out:
 ["{'[2, 5, 2, 0, 6, 0, 0, 0, 1, 1, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.113849}", "{'[2, 5, 2, 0, 6, 0, 0, 0, 1, 1, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.11366}", "{'[2, 5, 2, 0, 6, 0, 0, 0, 1, 1, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.113531}", "{'[2, 5, 2, 0, 6, 0, 0, 0, 1, 1, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.113598}", "{'[2, 5, 2, 0, 6, 0, 0, 0, 1, 1, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.113534}", "{'[2, 5, 2, 0, 6, 0, 0, 0, 1, 1, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.113662}", "{'[2, 5, 2, 0, 6, 0, 0, 0, 1, 1, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.113564}", "{'[2, 5, 2, 0, 6, 0, 0, 0, 1, 1, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.114599}", "{'[2, 5, 2, 0, 6, 0, 0, 0, 1, 1, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.113757}", "{'[2, 5, 2, 0, 6, 0, 0, 0, 1, 1, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.113605}", "{'[2, 5, 2, 0, 6, 0, 0, 0, 1, 1, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.113545}", "{'[2, 5, 2, 0, 6, 0, 0, 0, 1, 1, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.113608}", "{'[2, 5, 2, 0, 6, 0, 0, 0, 1, 1, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.113539}", "{'[2, 5, 2, 0, 6, 0, 0, 0, 1, 1, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.113539}", "{'[2, 5, 2, 0, 6, 0, 0, 0, 1, 1, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.113641}", "{'[2, 5, 2, 0, 6, 0, 0, 0, 1, 1, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.113549}", "{'[2, 5, 2, 0, 6, 0, 0, 0, 1, 1, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.113695}", "{'[2, 5, 2, 0, 6, 0, 0, 0, 1, 1, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.113687}", "{'[2, 5, 2, 0, 6, 0, 0, 0, 1, 1, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.113602}", "{'[2, 5, 2, 0, 6, 0, 0, 0, 1, 1, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.113563}", "{'[2, 5, 2, 0, 6, 0, 0, 0, 1, 1, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.113552}", "{'[2, 5, 2, 0, 6, 0, 0, 0, 1, 1, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.113731}", "{'[2, 5, 2, 0, 6, 0, 0, 0, 1, 1, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.113599}", "{'[2, 5, 2, 0, 6, 0, 0, 0, 1, 1, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.113615}", "{'[2, 5, 2, 0, 6, 0, 0, 0, 1, 1, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.113576}", "{'[2, 5, 2, 0, 6, 0, 0, 0, 1, 1, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.114577}", "{'[2, 5, 2, 0, 6, 0, 0, 0, 1, 1, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.113606}", "{'[2, 5, 2, 0, 6, 0, 0, 0, 1, 1, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.113534}", "{'[2, 5, 2, 0, 6, 0, 0, 0, 1, 1, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.113502}", "{'[2, 5, 2, 0, 6, 0, 0, 0, 1, 1, 0, 2, 0, 0, 2, 0, 1, 1]' : 0.113557}"]
returning from 'run': {'[2, 5, 2, 0, 6, 0, 0, 0, 1, 1, 0, 2, 0, 0, 2, 0, 1, 1]': ([0.113849, 0.11366, 0.113531, 0.113598, 0.113534, 0.113662, 0.113564, 0.114599, 0.113757, 0.113605, 0.113545, 0.113608, 0.113539, 0.113539, 0.113641, 0.113549, 0.113695, 0.113687, 0.113602, 0.113563, 0.113552, 0.113731, 0.113599, 0.113615, 0.113576, 0.114577, 0.113606, 0.113534, 0.113502, 0.113557], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.113849, 0.11366, 0.113531, 0.113598, 0.113534, 0.113662, 0.113564, 0.114599, 0.113757, 0.113605, 0.113545, 0.113608, 0.113539, 0.113539, 0.113641, 0.113549, 0.113695, 0.113687, 0.113602, 0.113563, 0.113552, 0.113731, 0.113599, 0.113615, 0.113576, 0.114577, 0.113606, 0.113534, 0.113502, 0.113557], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[2, 5, 2, 0, 6, 0, 0, 0, 1, 1, 0, 2, 0, 0, 2, 0, 1, 1]': ([0.113849, 0.11366, 0.113531, 0.113598, 0.113534, 0.113662, 0.113564, 0.114599, 0.113757, 0.113605, 0.113545, 0.113608, 0.113539, 0.113539, 0.113641, 0.113549, 0.113695, 0.113687, 0.113602, 0.113563, 0.113552, 0.113731, 0.113599, 0.113615, 0.113576, 0.114577, 0.113606, 0.113534, 0.113502, 0.113557], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [6, 1, 1, 0, 2, 5, 1, 1, 1, 27, 0, 21, 0, 2, 0, 0, 0, 0]
Fixed Factors: {}
Testing candidate 17: [6, 1, 1, 0, 2, 5, 1, 1, 1, 27, 0, 21, 0, 2, 0, 0, 0, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	160
        Max loop nest depth: 	5
        Additions: 		13804
        Multiplications: 	3190
        Divisions: 		0
        Logical: 		0
        Reads: 			19939
        Writes: 		2034
        Comparisons:		160
        Gotos: 			0
        
digraph CFG {
	_JOIN_2782108 [label="_JOIN_2782108None...",shape=box];
	_JOIN_2782108 -> ForLoop2783000;
	2765013 [label="2765013  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+11)*ny+k]*tmp[(i+11)];...",shape=box];
	2765013 -> _JOIN_2765014;
	2774973 [label="2774973  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+21)*ny+k]*tmp[(i+21)];...",shape=box];
	2774973 -> _JOIN_2774974;
	2774010 [label="2774010  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	2780982 [label="2780982  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	2780982 -> _JOIN_2780984;
	_JOIN_2782107 [label="_JOIN_2782107None...",shape=box];
	_JOIN_2782107 -> _JOIN_2782108;
	2775969 [label="2775969  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+22)*ny+k]*tmp[(i+22)];...",shape=box];
	2775969 -> _JOIN_2775970;
	ForLoop2756050 [label="ForLoop2756050  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kk)+1)%22)+1; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop2756050 -> 2756049;
	ForLoop2756050 -> _JOIN_2756050;
	2577391 [label="2577391  y[i]=0.0;...",shape=box];
	2577391 -> _JOIN_2577392;
	2780070 [label="2780070  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+27)*ny+k]*tmp[(i+27)];...",shape=box];
	2763138 [label="2763138  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+10)*ny+k]*tmp[(i+10)];...",shape=box];
	2769993 [label="2769993  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+16)*ny+k]*tmp[(i+16)];...",shape=box];
	2769993 -> _JOIN_2769994;
	ForLoop2763938 [label="ForLoop2763938  for (k=kk; k<=min(ny-1,kk+15)-21; k=k+22) {...",shape=box];
	ForLoop2763938 -> 2763138;
	ForLoop2763938 -> _JOIN_2763938;
	2782964 [label="2782964  y_copy[(k-kk)]=y_copy[(k-kk)]+A[i*ny+k]*tmp[i];...",shape=box];
	2782964 -> _JOIN_2782965;
	2781099 [label="2781099  tmp[i]=0;...",shape=box];
	2781099 -> ForLoop2782108;
	2766042 [label="2766042  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	_JOIN_2760034 [label="_JOIN_2760034None...",shape=box];
	_JOIN_2760034 -> 2760066;
	2779074 [label="2779074  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+26)*ny+k]*tmp[(i+26)];...",shape=box];
	2767122 [label="2767122  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+14)*ny+k]*tmp[(i+14)];...",shape=box];
	2762058 [label="2762058  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	_JOIN_2780984 [label="_JOIN_2780984None...",shape=box];
	_JOIN_2780984 -> _JOIN_2780986;
	ForLoop2775970 [label="ForLoop2775970  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kk)+1)%22)+1; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop2775970 -> 2775969;
	ForLoop2775970 -> _JOIN_2775970;
	_JOIN_2577323 [label="_JOIN_2577323None...",shape=box];
	_JOIN_2577323 -> ForLoop2577392;
	ForLoop2771986 [label="ForLoop2771986  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kk)+1)%22)+1; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop2771986 -> 2771985;
	ForLoop2771986 -> _JOIN_2771986;
	2754057 [label="2754057  y_copy[(k-kk)]=y_copy[(k-kk)]+A[i*ny+k]*tmp[i];...",shape=box];
	2754057 -> _JOIN_2754058;
	ForLoop2779954 [label="ForLoop2779954  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kk)+1)%22)+1; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop2779954 -> 2779953;
	ForLoop2779954 -> _JOIN_2779954;
	_JOIN_2779874 [label="_JOIN_2779874None...",shape=box];
	_JOIN_2779874 -> ForLoop2779954;
	2758041 [label="2758041  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+4)*ny+k]*tmp[(i+4)];...",shape=box];
	2758041 -> _JOIN_2758042;
	_JOIN_2770910 [label="_JOIN_2770910None...",shape=box];
	_JOIN_2770910 -> ForLoop2770990;
	_JOIN_2772982 [label="_JOIN_2772982None...",shape=box];
	_JOIN_2772982 -> 2773014;
	2616923 [label="2616923  int i;...",shape=box];
	2616923 -> ForLoop2780988;
	ForLoop2770990 [label="ForLoop2770990  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kk)+1)%22)+1; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop2770990 -> 2770989;
	ForLoop2770990 -> _JOIN_2770990;
	ForLoop2766926 [label="ForLoop2766926  for (k=kk; k<=min(ny-1,kk+15)-21; k=k+22) {...",shape=box];
	ForLoop2766926 -> 2766126;
	ForLoop2766926 -> _JOIN_2766926;
	_JOIN_2769994 [label="_JOIN_2769994None...",shape=box];
	_JOIN_2769994 -> 2770026;
	ForLoop2765930 [label="ForLoop2765930  for (k=kk; k<=min(ny-1,kk+15)-21; k=k+22) {...",shape=box];
	ForLoop2765930 -> 2765130;
	ForLoop2765930 -> _JOIN_2765930;
	_JOIN_2769914 [label="_JOIN_2769914None...",shape=box];
	_JOIN_2769914 -> ForLoop2769994;
	ForLoop2777882 [label="ForLoop2777882  for (k=kk; k<=min(ny-1,kk+15)-21; k=k+22) {...",shape=box];
	ForLoop2777882 -> 2777082;
	ForLoop2777882 -> _JOIN_2777882;
	2760150 [label="2760150  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+7)*ny+k]*tmp[(i+7)];...",shape=box];
	_JOIN_2782105 [label="_JOIN_2782105None...",shape=box];
	_JOIN_2782105 -> _JOIN_2782107;
	ForLoop2764018 [label="ForLoop2764018  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kk)+1)%22)+1; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop2764018 -> 2764017;
	ForLoop2764018 -> _JOIN_2764018;
	_JOIN_2772902 [label="_JOIN_2772902None...",shape=box];
	_JOIN_2772902 -> ForLoop2772982;
	_JOIN_2777882 [label="_JOIN_2777882None...",shape=box];
	_JOIN_2777882 -> ForLoop2777962;
	ForLoop2770910 [label="ForLoop2770910  for (k=kk; k<=min(ny-1,kk+15)-21; k=k+22) {...",shape=box];
	ForLoop2770910 -> 2770110;
	ForLoop2770910 -> _JOIN_2770910;
	2761146 [label="2761146  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+8)*ny+k]*tmp[(i+8)];...",shape=box];
	2764050 [label="2764050  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	2759037 [label="2759037  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+5)*ny+k]*tmp[(i+5)];...",shape=box];
	2759037 -> _JOIN_2759038;
	_JOIN_2775970 [label="_JOIN_2775970None...",shape=box];
	_JOIN_2775970 -> 2776002;
	2775006 [label="2775006  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	_JOIN_2775890 [label="_JOIN_2775890None...",shape=box];
	_JOIN_2775890 -> ForLoop2775970;
	ForLoop2756966 [label="ForLoop2756966  for (k=kk; k<=min(ny-1,kk+15)-21; k=k+22) {...",shape=box];
	ForLoop2756966 -> 2756166;
	ForLoop2756966 -> _JOIN_2756966;
	ForLoop2762942 [label="ForLoop2762942  for (k=kk; k<=min(ny-1,kk+15)-21; k=k+22) {...",shape=box];
	ForLoop2762942 -> 2762142;
	ForLoop2762942 -> _JOIN_2762942;
	2755053 [label="2755053  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+1)*ny+k]*tmp[(i+1)];...",shape=box];
	2755053 -> _JOIN_2755054;
	_JOIN_2766010 [label="_JOIN_2766010None...",shape=box];
	_JOIN_2766010 -> 2766042;
	2756049 [label="2756049  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+2)*ny+k]*tmp[(i+2)];...",shape=box];
	2756049 -> _JOIN_2756050;
	ForLoop2580583 [label="ForLoop2580583  for (ii=0; ii<=nx-1; ii=ii+512) {...",shape=box];
	ForLoop2580583 -> 2616923;
	ForLoop2580583 -> _JOIN_2580583;
	_JOIN_2753197 [label="_JOIN_2753197None...",shape=box];
	_JOIN_2753197 -> _JOIN_2753199;
	2577312 [label="2577312  y[i]=0.0;...",shape=box];
	_JOIN_2754058 [label="_JOIN_2754058None...",shape=box];
	_JOIN_2754058 -> 2754090;
	2764017 [label="2764017  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+10)*ny+k]*tmp[(i+10)];...",shape=box];
	2764017 -> _JOIN_2764018;
	ForLoop2763022 [label="ForLoop2763022  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kk)+1)%22)+1; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop2763022 -> 2763021;
	ForLoop2763022 -> _JOIN_2763022;
	ForLoop2782107 [label="ForLoop2782107  for (jj=jjj; jj<=min(ny-1,jjj+112); jj=jj+16) {...",shape=box];
	ForLoop2782107 -> 2781161;
	ForLoop2782107 -> _JOIN_2782107;
	_JOIN_2580583 [label="_JOIN_2580583None...",shape=box];
	_JOIN_2779954 [label="_JOIN_2779954None...",shape=box];
	_JOIN_2779954 -> 2779986;
	_JOIN_2782999 [label="_JOIN_2782999None...",shape=box];
	_JOIN_2782999 -> _JOIN_2783000;
	_JOIN_2753199 [label="_JOIN_2753199None...",shape=box];
	_JOIN_2753199 -> _JOIN_2753201;
	ForLoop2774894 [label="ForLoop2774894  for (k=kk; k<=min(ny-1,kk+15)-21; k=k+22) {...",shape=box];
	ForLoop2774894 -> 2774094;
	ForLoop2774894 -> _JOIN_2774894;
	2782997 [label="2782997  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	2782997 -> _JOIN_2782999;
	2778957 [label="2778957  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+25)*ny+k]*tmp[(i+25)];...",shape=box];
	2778957 -> _JOIN_2778958;
	ForLoop2757962 [label="ForLoop2757962  for (k=kk; k<=min(ny-1,kk+15)-21; k=k+22) {...",shape=box];
	ForLoop2757962 -> 2757162;
	ForLoop2757962 -> _JOIN_2757962;
	2772102 [label="2772102  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+19)*ny+k]*tmp[(i+19)];...",shape=box];
	ForLoop2782999 [label="ForLoop2782999  for (kk=kkk; kk<=min(ny-1,kkk+1008); kk=kk+16) {...",shape=box];
	ForLoop2782999 -> 2782170;
	ForLoop2782999 -> _JOIN_2782999;
	2776002 [label="2776002  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	_JOIN_2766926 [label="_JOIN_2766926None...",shape=box];
	_JOIN_2766926 -> ForLoop2767006;
	_JOIN_2782965 [label="_JOIN_2782965None...",shape=box];
	_JOIN_2782965 -> 2782997;
	2761062 [label="2761062  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop2779874 [label="ForLoop2779874  for (k=kk; k<=min(ny-1,kk+15)-21; k=k+22) {...",shape=box];
	ForLoop2779874 -> 2779074;
	ForLoop2779874 -> _JOIN_2779874;
	_JOIN_2757046 [label="_JOIN_2757046None...",shape=box];
	_JOIN_2757046 -> 2757078;
	_JOIN_2767006 [label="_JOIN_2767006None...",shape=box];
	_JOIN_2767006 -> 2767038;
	_JOIN_2761946 [label="_JOIN_2761946None...",shape=box];
	_JOIN_2761946 -> ForLoop2762026;
	2763054 [label="2763054  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	2768001 [label="2768001  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+14)*ny+k]*tmp[(i+14)];...",shape=box];
	2768001 -> _JOIN_2768002;
	_JOIN_2760950 [label="_JOIN_2760950None...",shape=box];
	_JOIN_2760950 -> ForLoop2761030;
	_JOIN_2771906 [label="_JOIN_2771906None...",shape=box];
	_JOIN_2771906 -> ForLoop2771986;
	2774094 [label="2774094  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+21)*ny+k]*tmp[(i+21)];...",shape=box];
	_JOIN_2757962 [label="_JOIN_2757962None...",shape=box];
	_JOIN_2757962 -> ForLoop2758042;
	2770989 [label="2770989  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+17)*ny+k]*tmp[(i+17)];...",shape=box];
	2770989 -> _JOIN_2770990;
	ForLoop2767922 [label="ForLoop2767922  for (k=kk; k<=min(ny-1,kk+15)-21; k=k+22) {...",shape=box];
	ForLoop2767922 -> 2767122;
	ForLoop2767922 -> _JOIN_2767922;
	2577240 [label="2577240  int i;...",shape=box];
	2577240 -> ForLoop2577323;
	_JOIN_2753201 [label="_JOIN_2753201None...",shape=box];
	_JOIN_2753201 -> ForLoop2780986;
	ForLoop2766010 [label="ForLoop2766010  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kk)+1)%22)+1; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop2766010 -> 2766009;
	ForLoop2766010 -> _JOIN_2766010;
	ForLoop2782105 [label="ForLoop2782105  for (jt=jj; jt<=min(ny-1,jj+15)-31; jt=jt+32) {...",shape=box];
	ForLoop2782105 -> 2781204;
	ForLoop2782105 -> _JOIN_2782105;
	ForLoop2764934 [label="ForLoop2764934  for (k=kk; k<=min(ny-1,kk+15)-21; k=k+22) {...",shape=box];
	ForLoop2764934 -> 2764134;
	ForLoop2764934 -> _JOIN_2764934;
	ForLoop2768918 [label="ForLoop2768918  for (k=kk; k<=min(ny-1,kk+15)-21; k=k+22) {...",shape=box];
	ForLoop2768918 -> 2768118;
	ForLoop2768918 -> _JOIN_2768918;
	ForLoop2778958 [label="ForLoop2778958  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kk)+1)%22)+1; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop2778958 -> 2778957;
	ForLoop2778958 -> _JOIN_2778958;
	_JOIN_2773978 [label="_JOIN_2773978None...",shape=box];
	_JOIN_2773978 -> 2774010;
	2765046 [label="2765046  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	_JOIN_2763022 [label="_JOIN_2763022None...",shape=box];
	_JOIN_2763022 -> 2763054;
	ForLoop2780870 [label="ForLoop2780870  for (k=kk; k<=min(ny-1,kk+15)-21; k=k+22) {...",shape=box];
	ForLoop2780870 -> 2780070;
	ForLoop2780870 -> _JOIN_2780870;
	_JOIN_2761030 [label="_JOIN_2761030None...",shape=box];
	_JOIN_2761030 -> 2761062;
	2762142 [label="2762142  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+9)*ny+k]*tmp[(i+9)];...",shape=box];
	ForLoop2771906 [label="ForLoop2771906  for (k=kk; k<=min(ny-1,kk+15)-21; k=k+22) {...",shape=box];
	ForLoop2771906 -> 2771106;
	ForLoop2771906 -> _JOIN_2771906;
	ForLoop2782108 [label="ForLoop2782108  for (jjj=0; jjj<=ny-1; jjj=jjj+128) ...",shape=box];
	ForLoop2782108 -> ForLoop2782107;
	ForLoop2782108 -> _JOIN_2782108;
	_JOIN_2756050 [label="_JOIN_2756050None...",shape=box];
	_JOIN_2756050 -> 2756082;
	ForLoop2753984 [label="ForLoop2753984  for (k=kk; k<=min(ny-1,kk+15)-21; k=k+22) {...",shape=box];
	ForLoop2753984 -> 2753310;
	ForLoop2753984 -> _JOIN_2753984;
	ForLoop2755970 [label="ForLoop2755970  for (k=kk; k<=min(ny-1,kk+15)-21; k=k+22) {...",shape=box];
	ForLoop2755970 -> 2755170;
	ForLoop2755970 -> _JOIN_2755970;
	2781204 [label="2781204  tmp[i]=tmp[i]+A[i*ny+jt]*x_copy[(jt-jj)];...",shape=box];
	ForLoop2760950 [label="ForLoop2760950  for (k=kk; k<=min(ny-1,kk+15)-21; k=k+22) {...",shape=box];
	ForLoop2760950 -> 2760150;
	ForLoop2760950 -> _JOIN_2760950;
	ForLoop2772902 [label="ForLoop2772902  for (k=kk; k<=min(ny-1,kk+15)-21; k=k+22) {...",shape=box];
	ForLoop2772902 -> 2772102;
	ForLoop2772902 -> _JOIN_2772902;
	_JOIN_2756966 [label="_JOIN_2756966None...",shape=box];
	_JOIN_2756966 -> ForLoop2757046;
	_JOIN_2768998 [label="_JOIN_2768998None...",shape=box];
	_JOIN_2768998 -> 2769030;
	_JOIN_2767922 [label="_JOIN_2767922None...",shape=box];
	_JOIN_2767922 -> ForLoop2768002;
	2776086 [label="2776086  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+23)*ny+k]*tmp[(i+23)];...",shape=box];
	2759154 [label="2759154  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+6)*ny+k]*tmp[(i+6)];...",shape=box];
	ForLoop2772982 [label="ForLoop2772982  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kk)+1)%22)+1; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop2772982 -> 2772981;
	ForLoop2772982 -> _JOIN_2772982;
	_JOIN_2768918 [label="_JOIN_2768918None...",shape=box];
	_JOIN_2768918 -> ForLoop2768998;
	2779953 [label="2779953  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+26)*ny+k]*tmp[(i+26)];...",shape=box];
	2779953 -> _JOIN_2779954;
	_JOIN_2762942 [label="_JOIN_2762942None...",shape=box];
	_JOIN_2762942 -> ForLoop2763022;
	_JOIN_2778958 [label="_JOIN_2778958None...",shape=box];
	_JOIN_2778958 -> 2778990;
	ForLoop2761946 [label="ForLoop2761946  for (k=kk; k<=min(ny-1,kk+15)-21; k=k+22) {...",shape=box];
	ForLoop2761946 -> 2761146;
	ForLoop2761946 -> _JOIN_2761946;
	2771985 [label="2771985  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+18)*ny+k]*tmp[(i+18)];...",shape=box];
	2771985 -> _JOIN_2771986;
	ForLoop2758042 [label="ForLoop2758042  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kk)+1)%22)+1; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop2758042 -> 2758041;
	ForLoop2758042 -> _JOIN_2758042;
	ForLoop2780950 [label="ForLoop2780950  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kk)+1)%22)+1; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop2780950 -> 2780949;
	ForLoop2780950 -> _JOIN_2780950;
	_JOIN_2778878 [label="_JOIN_2778878None...",shape=box];
	_JOIN_2778878 -> ForLoop2778958;
	_JOIN_2758958 [label="_JOIN_2758958None...",shape=box];
	_JOIN_2758958 -> ForLoop2759038;
	2757162 [label="2757162  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+4)*ny+k]*tmp[(i+4)];...",shape=box];
	2755170 [label="2755170  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+2)*ny+k]*tmp[(i+2)];...",shape=box];
	_JOIN_2780950 [label="_JOIN_2780950None...",shape=box];
	_JOIN_2780950 -> 2780982;
	2758158 [label="2758158  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+5)*ny+k]*tmp[(i+5)];...",shape=box];
	_JOIN_2780870 [label="_JOIN_2780870None...",shape=box];
	_JOIN_2780870 -> ForLoop2780950;
	_JOIN_2780986 [label="_JOIN_2780986None...",shape=box];
	_JOIN_2780986 -> _JOIN_2780988;
	2777961 [label="2777961  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+24)*ny+k]*tmp[(i+24)];...",shape=box];
	2777961 -> _JOIN_2777962;
	ForLoop2783000 [label="ForLoop2783000  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) ...",shape=box];
	ForLoop2783000 -> ForLoop2782999;
	ForLoop2783000 -> _JOIN_2783000;
	ForLoop2783002 [label="ForLoop2783002  for (i=(min(nx-1,ii+511))-(((min(nx-1,ii+511))-(ii)+1)%28)+1; i<=min(nx-1,ii+511); i=i+1) {...",shape=box];
	ForLoop2783002 -> 2781099;
	ForLoop2783002 -> _JOIN_2783002;
	2771022 [label="2771022  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	2773977 [label="2773977  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+20)*ny+k]*tmp[(i+20)];...",shape=box];
	2773977 -> _JOIN_2773978;
	2760066 [label="2760066  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop2782891 [label="ForLoop2782891  for (k=kk; k<=min(ny-1,kk+15)-21; k=k+22) {...",shape=box];
	ForLoop2782891 -> 2782217;
	ForLoop2782891 -> _JOIN_2782891;
	_JOIN_2780988 [label="_JOIN_2780988None...",shape=box];
	_JOIN_2780988 -> ForLoop2783002;
	2720482 [label="2720482  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	2757045 [label="2757045  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+3)*ny+k]*tmp[(i+3)];...",shape=box];
	2757045 -> _JOIN_2757046;
	2754090 [label="2754090  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	2770026 [label="2770026  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 2577240;
	_JOIN_2763938 [label="_JOIN_2763938None...",shape=box];
	_JOIN_2763938 -> ForLoop2764018;
	ForLoop2759954 [label="ForLoop2759954  for (k=kk; k<=min(ny-1,kk+15)-21; k=k+22) {...",shape=box];
	ForLoop2759954 -> 2759154;
	ForLoop2759954 -> _JOIN_2759954;
	ForLoop2773978 [label="ForLoop2773978  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kk)+1)%22)+1; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop2773978 -> 2773977;
	ForLoop2773978 -> _JOIN_2773978;
	ForLoop2774974 [label="ForLoop2774974  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kk)+1)%22)+1; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop2774974 -> 2774973;
	ForLoop2774974 -> _JOIN_2774974;
	ForLoop2767006 [label="ForLoop2767006  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kk)+1)%22)+1; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop2767006 -> 2767005;
	ForLoop2767006 -> _JOIN_2767006;
	2771106 [label="2771106  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+18)*ny+k]*tmp[(i+18)];...",shape=box];
	2775090 [label="2775090  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+22)*ny+k]*tmp[(i+22)];...",shape=box];
	_JOIN_2754974 [label="_JOIN_2754974None...",shape=box];
	_JOIN_2754974 -> ForLoop2755054;
	2767005 [label="2767005  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+13)*ny+k]*tmp[(i+13)];...",shape=box];
	2767005 -> _JOIN_2767006;
	ForLoop2775890 [label="ForLoop2775890  for (k=kk; k<=min(ny-1,kk+15)-21; k=k+22) {...",shape=box];
	ForLoop2775890 -> 2775090;
	ForLoop2775890 -> _JOIN_2775890;
	_JOIN_2768002 [label="_JOIN_2768002None...",shape=box];
	_JOIN_2768002 -> 2768034;
	2766009 [label="2766009  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+12)*ny+k]*tmp[(i+12)];...",shape=box];
	2766009 -> _JOIN_2766010;
	ForLoop2776886 [label="ForLoop2776886  for (k=kk; k<=min(ny-1,kk+15)-21; k=k+22) {...",shape=box];
	ForLoop2776886 -> 2776086;
	ForLoop2776886 -> _JOIN_2776886;
	2767038 [label="2767038  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	_JOIN_2765014 [label="_JOIN_2765014None...",shape=box];
	_JOIN_2765014 -> 2765046;
	_JOIN_2759954 [label="_JOIN_2759954None...",shape=box];
	_JOIN_2759954 -> ForLoop2760034;
	2769114 [label="2769114  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+16)*ny+k]*tmp[(i+16)];...",shape=box];
	2782170 [label="2782170  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop2768998 [label="ForLoop2768998  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kk)+1)%22)+1; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop2768998 -> 2768997;
	ForLoop2768998 -> _JOIN_2768998;
	2756082 [label="2756082  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop2778878 [label="ForLoop2778878  for (k=kk; k<=min(ny-1,kk+15)-21; k=k+22) {...",shape=box];
	ForLoop2778878 -> 2778078;
	ForLoop2778878 -> _JOIN_2778878;
	ForLoop2773898 [label="ForLoop2773898  for (k=kk; k<=min(ny-1,kk+15)-21; k=k+22) {...",shape=box];
	ForLoop2773898 -> 2773098;
	ForLoop2773898 -> _JOIN_2773898;
	ForLoop2762026 [label="ForLoop2762026  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kk)+1)%22)+1; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop2762026 -> 2762025;
	ForLoop2762026 -> _JOIN_2762026;
	_JOIN_2755970 [label="_JOIN_2755970None...",shape=box];
	_JOIN_2755970 -> ForLoop2756050;
	2753263 [label="2753263  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	2776998 [label="2776998  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	2780949 [label="2780949  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+27)*ny+k]*tmp[(i+27)];...",shape=box];
	2780949 -> _JOIN_2780950;
	2757078 [label="2757078  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	2585818 [label="2585818  double x_copy[16];...",shape=box];
	ForLoop2760034 [label="ForLoop2760034  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kk)+1)%22)+1; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop2760034 -> 2760033;
	ForLoop2760034 -> _JOIN_2760034;
	_JOIN_2765930 [label="_JOIN_2765930None...",shape=box];
	_JOIN_2765930 -> ForLoop2766010;
	ForLoop2782965 [label="ForLoop2782965  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kk)+1)%22)+1; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop2782965 -> 2782964;
	ForLoop2782965 -> _JOIN_2782965;
	_JOIN_2777962 [label="_JOIN_2777962None...",shape=box];
	_JOIN_2777962 -> 2777994;
	ForLoop2755054 [label="ForLoop2755054  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kk)+1)%22)+1; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop2755054 -> 2755053;
	ForLoop2755054 -> _JOIN_2755054;
	2756166 [label="2756166  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+3)*ny+k]*tmp[(i+3)];...",shape=box];
	ForLoop2754058 [label="ForLoop2754058  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kk)+1)%22)+1; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop2754058 -> 2754057;
	ForLoop2754058 -> _JOIN_2754058;
	ForLoop2758958 [label="ForLoop2758958  for (k=kk; k<=min(ny-1,kk+15)-21; k=k+22) {...",shape=box];
	ForLoop2758958 -> 2758158;
	ForLoop2758958 -> _JOIN_2758958;
	2768118 [label="2768118  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+15)*ny+k]*tmp[(i+15)];...",shape=box];
	_JOIN_2773898 [label="_JOIN_2773898None...",shape=box];
	_JOIN_2773898 -> ForLoop2773978;
	ForLoop2577323 [label="ForLoop2577323  for (i=0; i<=ny-2; i=i+2) {...",shape=box];
	ForLoop2577323 -> 2577312;
	ForLoop2577323 -> _JOIN_2577323;
	2759070 [label="2759070  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	_JOIN_2782891 [label="_JOIN_2782891None...",shape=box];
	_JOIN_2782891 -> ForLoop2782965;
	ForLoop2769994 [label="ForLoop2769994  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kk)+1)%22)+1; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop2769994 -> 2769993;
	ForLoop2769994 -> _JOIN_2769994;
	_JOIN_2783000 [label="_JOIN_2783000None...",shape=box];
	_JOIN_2783000 -> _JOIN_2783002;
	_JOIN_2783002 [label="_JOIN_2783002None...",shape=box];
	_JOIN_2783002 -> _JOIN_2580583;
	ForLoop2754974 [label="ForLoop2754974  for (k=kk; k<=min(ny-1,kk+15)-21; k=k+22) {...",shape=box];
	ForLoop2754974 -> 2754174;
	ForLoop2754974 -> _JOIN_2754974;
	_JOIN_2577392 [label="_JOIN_2577392None...",shape=box];
	_JOIN_2577392 -> 2585818;
	ForLoop2769914 [label="ForLoop2769914  for (k=kk; k<=min(ny-1,kk+15)-21; k=k+22) {...",shape=box];
	ForLoop2769914 -> 2769114;
	ForLoop2769914 -> _JOIN_2769914;
	ForLoop2761030 [label="ForLoop2761030  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kk)+1)%22)+1; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop2761030 -> 2761029;
	ForLoop2761030 -> _JOIN_2761030;
	2773014 [label="2773014  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	2772018 [label="2772018  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	_JOIN_2776886 [label="_JOIN_2776886None...",shape=box];
	_JOIN_2776886 -> ForLoop2776966;
	2753310 [label="2753310  y_copy[(k-kk)]=y_copy[(k-kk)]+A[i*ny+k]*tmp[i];...",shape=box];
	2778990 [label="2778990  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	2761029 [label="2761029  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+7)*ny+k]*tmp[(i+7)];...",shape=box];
	2761029 -> _JOIN_2761030;
	2765130 [label="2765130  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+12)*ny+k]*tmp[(i+12)];...",shape=box];
	2721362 [label="2721362  tmp[i]=tmp[i]+A[i*ny+jt]*x_copy[(jt-jj)];...",shape=box];
	_JOIN_2774974 [label="_JOIN_2774974None...",shape=box];
	_JOIN_2774974 -> 2775006;
	_JOIN_2776966 [label="_JOIN_2776966None...",shape=box];
	_JOIN_2776966 -> 2776998;
	2754174 [label="2754174  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+1)*ny+k]*tmp[(i+1)];...",shape=box];
	_JOIN_2759038 [label="_JOIN_2759038None...",shape=box];
	_JOIN_2759038 -> 2759070;
	ForLoop2759038 [label="ForLoop2759038  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kk)+1)%22)+1; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop2759038 -> 2759037;
	ForLoop2759038 -> _JOIN_2759038;
	ForLoop2753201 [label="ForLoop2753201  for (jjj=0; jjj<=ny-1; jjj=jjj+128) {...",shape=box];
	ForLoop2753201 -> ForLoop2753199;
	ForLoop2753201 -> _JOIN_2753201;
	2755086 [label="2755086  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop2777962 [label="ForLoop2777962  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kk)+1)%22)+1; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop2777962 -> 2777961;
	ForLoop2777962 -> _JOIN_2777962;
	2768997 [label="2768997  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+15)*ny+k]*tmp[(i+15)];...",shape=box];
	2768997 -> _JOIN_2768998;
	_JOIN_2771986 [label="_JOIN_2771986None...",shape=box];
	_JOIN_2771986 -> 2772018;
	2720177 [label="2720177  tmp[i]=0;...",shape=box];
	2769030 [label="2769030  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	2781161 [label="2781161  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	2781161 -> ForLoop2782105;
	2772981 [label="2772981  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+19)*ny+k]*tmp[(i+19)];...",shape=box];
	2772981 -> _JOIN_2772982;
	_JOIN_2755054 [label="_JOIN_2755054None...",shape=box];
	_JOIN_2755054 -> 2755086;
	ForLoop2577392 [label="ForLoop2577392  for (i=ny-((ny-(0))%2); i<=ny-1; i=i+1) ...",shape=box];
	ForLoop2577392 -> 2577391;
	ForLoop2577392 -> _JOIN_2577392;
	2779986 [label="2779986  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop2776966 [label="ForLoop2776966  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kk)+1)%22)+1; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop2776966 -> 2776965;
	ForLoop2776966 -> _JOIN_2776966;
	_JOIN_2764934 [label="_JOIN_2764934None...",shape=box];
	_JOIN_2764934 -> ForLoop2765014;
	_JOIN_2774894 [label="_JOIN_2774894None...",shape=box];
	_JOIN_2774894 -> ForLoop2774974;
	_JOIN_2770990 [label="_JOIN_2770990None...",shape=box];
	_JOIN_2770990 -> 2771022;
	2782217 [label="2782217  y_copy[(k-kk)]=y_copy[(k-kk)]+A[i*ny+k]*tmp[i];...",shape=box];
	_JOIN_2758042 [label="_JOIN_2758042None...",shape=box];
	_JOIN_2758042 -> 2758074;
	2777082 [label="2777082  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+24)*ny+k]*tmp[(i+24)];...",shape=box];
	2766126 [label="2766126  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+13)*ny+k]*tmp[(i+13)];...",shape=box];
	ForLoop2757046 [label="ForLoop2757046  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kk)+1)%22)+1; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop2757046 -> 2757045;
	ForLoop2757046 -> _JOIN_2757046;
	2762025 [label="2762025  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+8)*ny+k]*tmp[(i+8)];...",shape=box];
	2762025 -> _JOIN_2762026;
	2760033 [label="2760033  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+6)*ny+k]*tmp[(i+6)];...",shape=box];
	2760033 -> _JOIN_2760034;
	ForLoop2768002 [label="ForLoop2768002  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kk)+1)%22)+1; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop2768002 -> 2768001;
	ForLoop2768002 -> _JOIN_2768002;
	2763021 [label="2763021  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+9)*ny+k]*tmp[(i+9)];...",shape=box];
	2763021 -> _JOIN_2763022;
	2770110 [label="2770110  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+17)*ny+k]*tmp[(i+17)];...",shape=box];
	ForLoop2765014 [label="ForLoop2765014  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kk)+1)%22)+1; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop2765014 -> 2765013;
	ForLoop2765014 -> _JOIN_2765014;
	2777994 [label="2777994  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	2776965 [label="2776965  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+23)*ny+k]*tmp[(i+23)];...",shape=box];
	2776965 -> _JOIN_2776966;
	ForLoop2753197 [label="ForLoop2753197  for (jt=jj; jt<=min(ny-1,jj+15)-31; jt=jt+32) {...",shape=box];
	ForLoop2753197 -> 2721362;
	ForLoop2753197 -> _JOIN_2753197;
	_JOIN_2764018 [label="_JOIN_2764018None...",shape=box];
	_JOIN_2764018 -> 2764050;
	ForLoop2753199 [label="ForLoop2753199  for (jj=jjj; jj<=min(ny-1,jjj+112); jj=jj+16) {...",shape=box];
	ForLoop2753199 -> 2720482;
	ForLoop2753199 -> _JOIN_2753199;
	_JOIN_2762026 [label="_JOIN_2762026None...",shape=box];
	_JOIN_2762026 -> 2762058;
	ForLoop2780988 [label="ForLoop2780988  for (i=ii; i<=min(nx-1,ii+511)-27; i=i+28) {...",shape=box];
	ForLoop2780988 -> 2720177;
	ForLoop2780988 -> _JOIN_2780988;
	2758074 [label="2758074  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	2773098 [label="2773098  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+20)*ny+k]*tmp[(i+20)];...",shape=box];
	2778078 [label="2778078  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+25)*ny+k]*tmp[(i+25)];...",shape=box];
	2768034expected=0.000000
actual=9369846271501.798828
 [label="2768034  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	_JOIN_2753984 [label="_JOIN_2753984None...",shape=box];
	_JOIN_2753984 -> ForLoop2754058;
	2764134 [label="2764134  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+11)*ny+k]*tmp[(i+11)];...",shape=box];
	ForLoop2780984 [label="ForLoop2780984  for (kk=kkk; kk<=min(ny-1,kkk+1008); kk=kk+16) {...",shape=box];
	ForLoop2780984 -> 2753263;
	ForLoop2780984 -> _JOIN_2780984;
	ForLoop2780986 [label="ForLoop2780986  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop2780986 -> ForLoop2780984;
	ForLoop2780986 -> _JOIN_2780986;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest17.exe __orio_perftest17.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest17.exe  
{'[6, 1, 1, 0, 2, 5, 1, 1, 1, 27, 0, 21, 0, 2, 0, 0, 0, 0]' : 0.422865}
{'[6, 1, 1, 0, 2, 5, 1, 1, 1, 27, 0, 21, 0, 2, 0, 0, 0, 0]' : 0.423283}
{'[6, 1, 1, 0, 2, 5, 1, 1, 1, 27, 0, 21, 0, 2, 0, 0, 0, 0]' : 0.423975}
{'[6, 1, 1, 0, 2, 5, 1, 1, 1, 27, 0, 21, 0, 2, 0, 0, 0, 0]' : 0.422881}
{'[6, 1, 1, 0, 2, 5, 1, 1, 1, 27, 0, 21, 0, 2, 0, 0, 0, 0]' : 0.423268}
{'[6, 1, 1, 0, 2, 5, 1, 1, 1, 27, 0, 21, 0, 2, 0, 0, 0, 0]' : 0.422692}
{'[6, 1, 1, 0, 2, 5, 1, 1, 1, 27, 0, 21, 0, 2, 0, 0, 0, 0]' : 0.422958}
{'[6, 1, 1, 0, 2, 5, 1, 1, 1, 27, 0, 21, 0, 2, 0, 0, 0, 0]' : 0.423202}
{'[6, 1, 1, 0, 2, 5, 1, 1, 1, 27, 0, 21, 0, 2, 0, 0, 0, 0]' : 0.424006}
{'[6, 1, 1, 0, 2, 5, 1, 1, 1, 27, 0, 21, 0, 2, 0, 0, 0, 0]' : 0.422861}
{'[6, 1, 1, 0, 2, 5, 1, 1, 1, 27, 0, 21, 0, 2, 0, 0, 0, 0]' : 0.422906}
{'[6, 1, 1, 0, 2, 5, 1, 1, 1, 27, 0, 21, 0, 2, 0, 0, 0, 0]' : 0.422992}
{'[6, 1, 1, 0, 2, 5, 1, 1, 1, 27, 0, 21, 0, 2, 0, 0, 0, 0]' : 0.422698}
{'[6, 1, 1, 0, 2, 5, 1, 1, 1, 27, 0, 21, 0, 2, 0, 0, 0, 0]' : 0.422316}
{'[6, 1, 1, 0, 2, 5, 1, 1, 1, 27, 0, 21, 0, 2, 0, 0, 0, 0]' : 0.42287}
{'[6, 1, 1, 0, 2, 5, 1, 1, 1, 27, 0, 21, 0, 2, 0, 0, 0, 0]' : 0.422292}
{'[6, 1, 1, 0, 2, 5, 1, 1, 1, 27, 0, 21, 0, 2, 0, 0, 0, 0]' : 0.423309}
{'[6, 1, 1, 0, 2, 5, 1, 1, 1, 27, 0, 21, 0, 2, 0, 0, 0, 0]' : 0.422452}
{'[6, 1, 1, 0, 2, 5, 1, 1, 1, 27, 0, 21, 0, 2, 0, 0, 0, 0]' : 0.424043}
{'[6, 1, 1, 0, 2, 5, 1, 1, 1, 27, 0, 21, 0, 2, 0, 0, 0, 0]' : 0.423306}
{'[6, 1, 1, 0, 2, 5, 1, 1, 1, 27, 0, 21, 0, 2, 0, 0, 0, 0]' : 0.423105}
{'[6, 1, 1, 0, 2, 5, 1, 1, 1, 27, 0, 21, 0, 2, 0, 0, 0, 0]' : 0.422125}
{'[6, 1, 1, 0, 2, 5, 1, 1, 1, 27, 0, 21, 0, 2, 0, 0, 0, 0]' : 0.423304}
{'[6, 1, 1, 0, 2, 5, 1, 1, 1, 27, 0, 21, 0, 2, 0, 0, 0, 0]' : 0.423219}
{'[6, 1, 1, 0, 2, 5, 1, 1, 1, 27, 0, 21, 0, 2, 0, 0, 0, 0]' : 0.422466}
{'[6, 1, 1, 0, 2, 5, 1, 1, 1, 27, 0, 21, 0, 2, 0, 0, 0, 0]' : 0.42302}
{'[6, 1, 1, 0, 2, 5, 1, 1, 1, 27, 0, 21, 0, 2, 0, 0, 0, 0]' : 0.423869}
{'[6, 1, 1, 0, 2, 5, 1, 1, 1, 27, 0, 21, 0, 2, 0, 0, 0, 0]' : 0.423206}
{'[6, 1, 1, 0, 2, 5, 1, 1, 1, 27, 0, 21, 0, 2, 0, 0, 0, 0]' : 0.423194}
{'[6, 1, 1, 0, 2, 5, 1, 1, 1, 27, 0, 21, 0, 2, 0, 0, 0, 0]' : 0.423031}

out:
 ["{'[6, 1, 1, 0, 2, 5, 1, 1, 1, 27, 0, 21, 0, 2, 0, 0, 0, 0]' : 0.422865}", "{'[6, 1, 1, 0, 2, 5, 1, 1, 1, 27, 0, 21, 0, 2, 0, 0, 0, 0]' : 0.423283}", "{'[6, 1, 1, 0, 2, 5, 1, 1, 1, 27, 0, 21, 0, 2, 0, 0, 0, 0]' : 0.423975}", "{'[6, 1, 1, 0, 2, 5, 1, 1, 1, 27, 0, 21, 0, 2, 0, 0, 0, 0]' : 0.422881}", "{'[6, 1, 1, 0, 2, 5, 1, 1, 1, 27, 0, 21, 0, 2, 0, 0, 0, 0]' : 0.423268}", "{'[6, 1, 1, 0, 2, 5, 1, 1, 1, 27, 0, 21, 0, 2, 0, 0, 0, 0]' : 0.422692}", "{'[6, 1, 1, 0, 2, 5, 1, 1, 1, 27, 0, 21, 0, 2, 0, 0, 0, 0]' : 0.422958}", "{'[6, 1, 1, 0, 2, 5, 1, 1, 1, 27, 0, 21, 0, 2, 0, 0, 0, 0]' : 0.423202}", "{'[6, 1, 1, 0, 2, 5, 1, 1, 1, 27, 0, 21, 0, 2, 0, 0, 0, 0]' : 0.424006}", "{'[6, 1, 1, 0, 2, 5, 1, 1, 1, 27, 0, 21, 0, 2, 0, 0, 0, 0]' : 0.422861}", "{'[6, 1, 1, 0, 2, 5, 1, 1, 1, 27, 0, 21, 0, 2, 0, 0, 0, 0]' : 0.422906}", "{'[6, 1, 1, 0, 2, 5, 1, 1, 1, 27, 0, 21, 0, 2, 0, 0, 0, 0]' : 0.422992}", "{'[6, 1, 1, 0, 2, 5, 1, 1, 1, 27, 0, 21, 0, 2, 0, 0, 0, 0]' : 0.422698}", "{'[6, 1, 1, 0, 2, 5, 1, 1, 1, 27, 0, 21, 0, 2, 0, 0, 0, 0]' : 0.422316}", "{'[6, 1, 1, 0, 2, 5, 1, 1, 1, 27, 0, 21, 0, 2, 0, 0, 0, 0]' : 0.42287}", "{'[6, 1, 1, 0, 2, 5, 1, 1, 1, 27, 0, 21, 0, 2, 0, 0, 0, 0]' : 0.422292}", "{'[6, 1, 1, 0, 2, 5, 1, 1, 1, 27, 0, 21, 0, 2, 0, 0, 0, 0]' : 0.423309}", "{'[6, 1, 1, 0, 2, 5, 1, 1, 1, 27, 0, 21, 0, 2, 0, 0, 0, 0]' : 0.422452}", "{'[6, 1, 1, 0, 2, 5, 1, 1, 1, 27, 0, 21, 0, 2, 0, 0, 0, 0]' : 0.424043}", "{'[6, 1, 1, 0, 2, 5, 1, 1, 1, 27, 0, 21, 0, 2, 0, 0, 0, 0]' : 0.423306}", "{'[6, 1, 1, 0, 2, 5, 1, 1, 1, 27, 0, 21, 0, 2, 0, 0, 0, 0]' : 0.423105}", "{'[6, 1, 1, 0, 2, 5, 1, 1, 1, 27, 0, 21, 0, 2, 0, 0, 0, 0]' : 0.422125}", "{'[6, 1, 1, 0, 2, 5, 1, 1, 1, 27, 0, 21, 0, 2, 0, 0, 0, 0]' : 0.423304}", "{'[6, 1, 1, 0, 2, 5, 1, 1, 1, 27, 0, 21, 0, 2, 0, 0, 0, 0]' : 0.423219}", "{'[6, 1, 1, 0, 2, 5, 1, 1, 1, 27, 0, 21, 0, 2, 0, 0, 0, 0]' : 0.422466}", "{'[6, 1, 1, 0, 2, 5, 1, 1, 1, 27, 0, 21, 0, 2, 0, 0, 0, 0]' : 0.42302}", "{'[6, 1, 1, 0, 2, 5, 1, 1, 1, 27, 0, 21, 0, 2, 0, 0, 0, 0]' : 0.423869}", "{'[6, 1, 1, 0, 2, 5, 1, 1, 1, 27, 0, 21, 0, 2, 0, 0, 0, 0]' : 0.423206}", "{'[6, 1, 1, 0, 2, 5, 1, 1, 1, 27, 0, 21, 0, 2, 0, 0, 0, 0]' : 0.423194}", "{'[6, 1, 1, 0, 2, 5, 1, 1, 1, 27, 0, 21, 0, 2, 0, 0, 0, 0]' : 0.423031}"]
returning from 'run': {'[6, 1, 1, 0, 2, 5, 1, 1, 1, 27, 0, 21, 0, 2, 0, 0, 0, 0]': ([0.422865, 0.423283, 0.423975, 0.422881, 0.423268, 0.422692, 0.422958, 0.423202, 0.424006, 0.422861, 0.422906, 0.422992, 0.422698, 0.422316, 0.42287, 0.422292, 0.423309, 0.422452, 0.424043, 0.423306, 0.423105, 0.422125, 0.423304, 0.423219, 0.422466, 0.42302, 0.423869, 0.423206, 0.423194, 0.423031], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.422865, 0.423283, 0.423975, 0.422881, 0.423268, 0.422692, 0.422958, 0.423202, 0.424006, 0.422861, 0.422906, 0.422992, 0.422698, 0.422316, 0.42287, 0.422292, 0.423309, 0.422452, 0.424043, 0.423306, 0.423105, 0.422125, 0.423304, 0.423219, 0.422466, 0.42302, 0.423869, 0.423206, 0.423194, 0.423031], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[6, 1, 1, 0, 2, 5, 1, 1, 1, 27, 0, 21, 0, 2, 0, 0, 0, 0]': ([0.422865, 0.423283, 0.423975, 0.422881, 0.423268, 0.422692, 0.422958, 0.423202, 0.424006, 0.422861, 0.422906, 0.422992, 0.422698, 0.422316, 0.42287, 0.422292, 0.423309, 0.422452, 0.424043, 0.423306, 0.423105, 0.422125, 0.423304, 0.423219, 0.422466, 0.42302, 0.423869, 0.423206, 0.423194, 0.423031], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [5, 3, 1, 6, 4, 1, 0, 1, 24, 16, 0, 28, 2, 0, 0, 0, 0, 0]
Fixed Factors: {}
Testing candidate 18: [5, 3, 1, 6, 4, 1, 0, 1, 24, 16, 0, 28, 2, 0, 0, 0, 0, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	98
        Max loop nest depth: 	6
        Additions: 		13828
        Multiplications: 	3100
        Divisions: 		0
        Logical: 		0
        Reads: 			19530
        Writes: 		1829
        Comparisons:		98
        Gotos: 			0
        
digraph CFG {
	3179759 [label="3179759  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+15)*ny+k]*tmp[(i+15)];...",shape=box];
	3179759 -> _JOIN_3179760;
	_JOIN_3177156 [label="_JOIN_3177156None...",shape=box];
	_JOIN_3177156 -> ForLoop3177236;
	3163386 [label="3163386  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	_JOIN_3181060 [label="_JOIN_3181060None...",shape=box];
	_JOIN_3181060 -> ForLoop3182361;
	3165994 [label="3165994  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+5)*ny+k]*tmp[(i+5)];...",shape=box];
	3169696 [label="3169696  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	_JOIN_3173450 [label="_JOIN_3173450None...",shape=box];
	_JOIN_3173450 -> 3173482;
	ForLoop3179680 [label="ForLoop3179680  for (k=kk; k<=min(ny-1,kk+15)-28; k=k+29) {...",shape=box];
	ForLoop3179680 -> 3178614;
	ForLoop3179680 -> _JOIN_3179680;
	2968109 [label="2968109  y_copy[(k-kk)]=y_copy[(k-kk)]+A[it*ny+k]*tmp[it];...",shape=box];
	ForLoop2846911 [label="ForLoop2846911  for (i=0; i<=ny-25; i=i+25) {...",shape=box];
	ForLoop2846911 -> 2846693;
	ForLoop2846911 -> _JOIN_2846911;
	_JOIN_3168402 [label="_JOIN_3168402None...",shape=box];
	_JOIN_3168402 -> 3168434;
	3003114 [label="3003114  y_copy[(k-kk)]=y_copy[(k-kk)]+A[it*ny+k]*tmp[it];...",shape=box];
	3177352 [label="3177352  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+14)*ny+k]*tmp[(i+14)];...",shape=box];
	3162208 [label="3162208  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+2)*ny+k]*tmp[(i+2)];...",shape=box];
	_JOIN_3170846 [label="_JOIN_3170846None...",shape=box];
	_JOIN_3170846 -> ForLoop3170926;
	_JOIN_3162012 [label="_JOIN_3162012None...",shape=box];
	_JOIN_3162012 -> ForLoop3162092;
	_JOIN_3160756 [label="_JOIN_3160756None...",shape=box];
	_JOIN_3160756 -> ForLoop3160830;
	ForLoop3002983 [label="ForLoop3002983  for (k=kk; k<=min(ny-1,kk+15)-28; k=k+29) {...",shape=box];
	ForLoop3002983 -> 2968109;
	ForLoop3002983 -> _JOIN_3002983;
	_JOIN_3170926 [label="_JOIN_3170926None...",shape=box];
	_JOIN_3170926 -> 3170958;
	ForLoop2858779 [label="ForLoop2858779  for (it=ii; it<=min(nx-1,ii+255)-31; it=it+32) {...",shape=box];
	ForLoop2858779 -> 2859029;
	ForLoop2858779 -> _JOIN_2858779;
	3162124 [label="3162124  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop2858777 [label="ForLoop2858777  for (kkk=0; kkk<=ny-1; kkk=kkk+64) ...",shape=box];
	ForLoop2858777 -> ForLoop2858776;
	ForLoop2858777 -> _JOIN_2858777;
	ForLoop3177236 [label="ForLoop3177236  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kk)+1)%29)+1; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop3177236 -> 3177235;
	ForLoop3177236 -> _JOIN_3177236;
	3167139 [label="3167139  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+5)*ny+k]*tmp[(i+5)];...",shape=box];
	3167139 -> _JOIN_3167140;
	_JOIN_3178498 [label="_JOIN_3178498None...",shape=box];
	_JOIN_3178498 -> 3178530;
	ForLoop3163354 [label="ForLoop3163354  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kk)+1)%29)+1; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop3163354 -> 3163353;
	ForLoop3163354 -> _JOIN_3163354;
	ForLoop3181242 [label="ForLoop3181242  for (jj=jjj; jj<=min(ny-1,jjj+448); jj=jj+64) ...",shape=box];
	ForLoop3181242 -> ForLoop3181241;
	ForLoop3181242 -> _JOIN_3181242;
	ForLoop3181243 [label="ForLoop3181243  for (jjj=0; jjj<=ny-1; jjj=jjj+512) ...",shape=box];
	ForLoop3181243 -> ForLoop3181242;
	ForLoop3181243 -> _JOIN_3181243;
	_JOIN_3172188 [label="_JOIN_3172188None...",shape=box];
	_JOIN_3172188 -> 3172220;
	_JOIN_3177236 [label="_JOIN_3177236None...",shape=box];
	_JOIN_3177236 -> 3177268;
	_JOIN_3164616 [label="_JOIN_3164616None...",shape=box];
	_JOIN_3164616 -> 3164648;
	ForLoop3169664 [label="ForLoop3169664  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kk)+1)%29)+1; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop3169664 -> 3169663;
	ForLoop3169664 -> _JOIN_3169664;
	ForLoop3160830 [label="ForLoop3160830  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kk)+1)%29)+1; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop3160830 -> 3160829;
	ForLoop3160830 -> _JOIN_3160830;
	3168518 [label="3168518  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+7)*ny+k]*tmp[(i+7)];...",shape=box];
	ForLoop3182359 [label="ForLoop3182359  for (kkk=0; kkk<=ny-1; kkk=kkk+64) ...",shape=box];
	ForLoop3182359 -> ForLoop3182358;
	ForLoop3182359 -> _JOIN_3182359;
	2846693 [label="2846693  y[i]=0.0;...",shape=box];
	3165910 [label="3165910  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	_JOIN_3169664 [label="_JOIN_3169664None...",shape=box];
	_JOIN_3169664 -> 3169696;
	ForLoop3169584 [label="ForLoop3169584  for (k=kk; k<=min(ny-1,kk+15)-28; k=k+29) {...",shape=box];
	ForLoop3169584 -> 3168518;
	ForLoop3169584 -> _JOIN_3169584;
	3159066 [label="3159066  tmp[i]=0;...",shape=box];
	_JOIN_3181056 [label="_JOIN_3181056None...",shape=box];
	_JOIN_3181056 -> _JOIN_3181058;
	ForLoop3174712 [label="ForLoop3174712  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kk)+1)%29)+1; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop3174712 -> 3174711;
	ForLoop3174712 -> _JOIN_3174712;
	3178530 [label="3178530  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	3159811 [label="3159811  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop3164616 [label="ForLoop3164616  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kk)+1)%29)+1; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop3164616 -> 3164615;
	ForLoop3164616 -> _JOIN_3164616;
	ForLoop3181060 [label="ForLoop3181060  for (i=it; i<=min(nx-1,ii+255)-16; i=i+17) {...",shape=box];
	ForLoop3181060 -> 3159066;
	ForLoop3181060 -> _JOIN_3181060;
	_JOIN_2858779 [label="_JOIN_2858779None...",shape=box];
	_JOIN_2858779 -> 3120925;
	_JOIN_2858776 [label="_JOIN_2858776None...",shape=box];
	_JOIN_2858776 -> _JOIN_2858777;
	_JOIN_2858777 [label="_JOIN_2858777None...",shape=box];
	_JOIN_2858777 -> _JOIN_2858779;
	ForLoop3170846 [label="ForLoop3170846  for (k=kk; k<=min(ny-1,kk+15)-28; k=k+29) {...",shape=box];
	ForLoop3170846 -> 3169780;
	ForLoop3170846 -> _JOIN_3170846;
	3176090 [label="3176090  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+13)*ny+k]*tmp[(i+13)];...",shape=box];
	ForLoop3180942 [label="ForLoop3180942  for (k=kk; k<=min(ny-1,kk+15)-28; k=k+29) {...",shape=box];
	ForLoop3180942 -> 3179876;
	ForLoop3180942 -> _JOIN_3180942;
	_JOIN_3182361 [label="_JOIN_3182361None...",shape=box];
	_JOIN_3182361 -> _JOIN_2850361;
	3159279 [label="3159279  tmp[i]=tmp[i]+A[i*ny+j]*x[j];...",shape=box];
	ForLoop3159747 [label="ForLoop3159747  for (jj=jjj; jj<=min(ny-1,jjj+448); jj=jj+64) {...",shape=box];
	ForLoop3159747 -> ForLoop3159745;
	ForLoop3159747 -> _JOIN_3159747;
	ForLoop3159745 [label="ForLoop3159745  for (j=jj; j<=min(ny-1,jj+63); j=j+1) {...",shape=box];
	ForLoop3159745 -> 3159279;
	ForLoop3159745 -> _JOIN_3159745;
	ForLoop3159749 [label="ForLoop3159749  for (jjj=0; jjj<=ny-1; jjj=jjj+512) {...",shape=box];
	ForLoop3159749 -> ForLoop3159747;
	ForLoop3159749 -> _JOIN_3159749;
	3163353 [label="3163353  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+2)*ny+k]*tmp[(i+2)];...",shape=box];
	3163353 -> _JOIN_3163354;
	2859603 [label="2859603  tmp[it]=tmp[it]+A[it*ny+j]*x[j];...",shape=box];
	3181305 [label="3181305  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop3173370 [label="ForLoop3173370  for (k=kk; k<=min(ny-1,kk+15)-28; k=k+29) {...",shape=box];
	ForLoop3173370 -> 3172304;
	ForLoop3173370 -> _JOIN_3173370;
	_JOIN_3168322 [label="_JOIN_3168322None...",shape=box];
	_JOIN_3168322 -> ForLoop3168402;
	3160862 [label="3160862  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	_JOIN_3167140 [label="_JOIN_3167140None...",shape=box];
	_JOIN_3167140 -> 3167172;
	_JOIN_3172108 [label="_JOIN_3172108None...",shape=box];
	_JOIN_3172108 -> ForLoop3172188;
	3169780 [label="3169780  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+8)*ny+k]*tmp[(i+8)];...",shape=box];
	3160946 [label="3160946  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+1)*ny+k]*tmp[(i+1)];...",shape=box];
	ForLoop3175894 [label="ForLoop3175894  for (k=kk; k<=min(ny-1,kk+15)-28; k=k+29) {...",shape=box];
	ForLoop3175894 -> 3174828;
	ForLoop3175894 -> _JOIN_3175894;
	2858698 [label="2858698  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop3165798 [label="ForLoop3165798  for (k=kk; k<=min(ny-1,kk+15)-28; k=k+29) {...",shape=box];
	ForLoop3165798 -> 3164732;
	ForLoop3165798 -> _JOIN_3165798;
	_JOIN_3181058 [label="_JOIN_3181058None...",shape=box];
	_JOIN_3181058 -> _JOIN_3181060;
	ForLoop3165878 [label="ForLoop3165878  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kk)+1)%29)+1; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop3165878 -> 3165877;
	ForLoop3165878 -> _JOIN_3165878;
	3172304 [label="3172304  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+10)*ny+k]*tmp[(i+10)];...",shape=box];
	3169663 [label="3169663  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+7)*ny+k]*tmp[(i+7)];...",shape=box];
	3169663 -> _JOIN_3169664;
	_JOIN_3182359 [label="_JOIN_3182359None...",shape=box];
	_JOIN_3182359 -> _JOIN_3182361;
	3177235 [label="3177235  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+13)*ny+k]*tmp[(i+13)];...",shape=box];
	3177235 -> _JOIN_3177236;
	3163470 [label="3163470  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+3)*ny+k]*tmp[(i+3)];...",shape=box];
	ForLoop3167060 [label="ForLoop3167060  for (k=kk; k<=min(ny-1,kk+15)-28; k=k+29) {...",shape=box];
	ForLoop3167060 -> 3165994;
	ForLoop3167060 -> _JOIN_3167060;
	_JOIN_3165878 [label="_JOIN_3165878None...",shape=box];
	_JOIN_3165878 -> 3165910;
	3168434 [label="3168434  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	3179792 [label="3179792  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	3181240 [label="3181240  tmp[i]=tmp[i]+A[i*ny+j]*x[j];...",shape=box];
	3181240 -> _JOIN_3181241;
	_JOIN_3163274 [label="_JOIN_3163274None...",shape=box];
	_JOIN_3163274 -> ForLoop3163354;
	_JOIN_3182250 [label="_JOIN_3182250None...",shape=box];
	_JOIN_3182250 -> ForLoop3182324;
	ForLoop3167140 [label="ForLoop3167140  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kk)+1)%29)+1; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop3167140 -> 3167139;
	ForLoop3167140 -> _JOIN_3167140;
	3174744 [label="3174744  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	_JOIN_2850361 [label="_JOIN_2850361None...",shape=box];
	_JOIN_2850361 -> _JOIN_2850362;
	_JOIN_2850362 [label="_JOIN_2850362None...",shape=box];
	_JOIN_3173370 [label="_JOIN_3173370None...",shape=box];
	_JOIN_3173370 -> ForLoop3173450;
	3179876 [label="3179876  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+16)*ny+k]*tmp[(i+16)];...",shape=box];
	_JOIN_3004108 [label="_JOIN_3004108None...",shape=box];
	_JOIN_3004108 -> 2858774;
	3162091 [label="3162091  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+1)*ny+k]*tmp[(i+1)];...",shape=box];
	3162091 -> _JOIN_3162092;
	3159858 [label="3159858  y_copy[(k-kk)]=y_copy[(k-kk)]+A[i*ny+k]*tmp[i];...",shape=box];
	3176006 [label="3176006  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop2858636 [label="ForLoop2858636  for (jjj=0; jjj<=ny-1; jjj=jjj+512) ...",shape=box];
	ForLoop2858636 -> ForLoop2858635;
	ForLoop2858636 -> _JOIN_2858636;
	_JOIN_3163354 [label="_JOIN_3163354None...",shape=box];
	_JOIN_3163354 -> 3163386;
	3168401 [label="3168401  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+6)*ny+k]*tmp[(i+6)];...",shape=box];
	3168401 -> _JOIN_3168402;
	2846276 [label="2846276  int i;...",shape=box];
	2846276 -> ForLoop2846911;
	ForLoop3160756 [label="ForLoop3160756  for (k=kk; k<=min(ny-1,kk+15)-28; k=k+29) {...",shape=box];
	ForLoop3160756 -> 3159858;
	ForLoop3160756 -> _JOIN_3160756;
	_JOIN_3180942 [label="_JOIN_3180942None...",shape=box];
	_JOIN_3180942 -> ForLoop3181022;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 2846276;
	ForLoop2850361 [label="ForLoop2850361  for (ii=iii; ii<=min(nx-1,iii+1792); ii=ii+256) {...",shape=box];
	ForLoop2850361 -> ForLoop2858779;
	ForLoop2850361 -> _JOIN_2850361;
	ForLoop2850362 [label="ForLoop2850362  for (iii=0; iii<=nx-1; iii=iii+2048) ...",shape=box];
	ForLoop2850362 -> ForLoop2850361;
	ForLoop2850362 -> _JOIN_2850362;
	_JOIN_3175974 [label="_JOIN_3175974None...",shape=box];
	_JOIN_3175974 -> 3176006;
	ForLoop3182358 [label="ForLoop3182358  for (kk=kkk; kk<=min(ny-1,kkk+48); kk=kk+16) {...",shape=box];
	ForLoop3182358 -> 3181305;
	ForLoop3182358 -> _JOIN_3182358;
	3172220 [label="3172220  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	3164615 [label="3164615  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+3)*ny+k]*tmp[(i+3)];...",shape=box];
	3164615 -> _JOIN_3164616;
	ForLoop2858635 [label="ForLoop2858635  for (jj=jjj; jj<=min(ny-1,jjj+448); jj=jj+64) ...",shape=box];
	ForLoop2858635 -> ForLoop2858634;
	ForLoop2858635 -> _JOIN_2858635;
	ForLoop2858634 [label="ForLoop2858634  for (j=jj; j<=min(ny-1,jj+63); j=j+1) {...",shape=box];
	ForLoop2858634 -> 2859603;
	ForLoop2858634 -> _JOIN_2858634;
	_JOIN_2846911 [label="_JOIN_2846911None...",shape=box];
	_JOIN_2846911 -> ForLoop2846980;
	3120925 [label="3120925  int i;...",shape=box];
	3120925 -> ForLoop3181060;
	_JOIN_3174632 [label="_JOIN_3174632None...",shape=box];
	_JOIN_3174632 -> ForLoop3174712;
	3167172 [label="3167172  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	3171042 [label="3171042  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+9)*ny+k]*tmp[(i+9)];...",shape=box];
	2856369 [label="2856369  double x_copy;...",shape=box];
	3181352 [label="3181352  y_copy[(k-kk)]=y_copy[(k-kk)]+A[i*ny+k]*tmp[i];...",shape=box];
	ForLoop3182250 [label="ForLoop3182250  for (k=kk; k<=min(ny-1,kk+15)-28; k=k+29) {...",shape=box];
	ForLoop3182250 -> 3181352;
	ForLoop3182250 -> _JOIN_3182250;
	ForLoop3168322 [label="ForLoop3168322  for (k=kk; k<=min(ny-1,kk+15)-28; k=k+29) {...",shape=box];
	ForLoop3168322 -> 3167256;
	ForLoop3168322 -> _JOIN_3168322;
	3178614 [label="3178614  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+15)*ny+k]*tmp[(i+15)];...",shape=box];
	ForLoop3182361 [label="ForLoop3182361  for (i=(min(nx-1,ii+255))-(((min(nx-1,ii+255))-(it)+1)%17)+1; i<=min(nx-1,ii+255); i=i+1) {...",shape=box];
	ForLoop3182361 -> 3181171;
	ForLoop3182361 -> _JOIN_3182361;
	ForLoop2858776 [label="ForLoop2858776  for (kk=kkk; kk<=min(ny-1,kkk+48); kk=kk+16) {...",shape=box];
	ForLoop2858776 -> 2858698;
	ForLoop2858776 -> _JOIN_2858776;
	ForLoop3162092 [label="ForLoop3162092  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kk)+1)%29)+1; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop3162092 -> 3162091;
	ForLoop3162092 -> _JOIN_3162092;
	3174711 [label="3174711  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+11)*ny+k]*tmp[(i+11)];...",shape=box];
	3174711 -> _JOIN_3174712;
	_JOIN_2846980 [label="_JOIN_2846980None...",shape=box];
	_JOIN_2846980 -> 2856369;
	_JOIN_3002983 [label="_JOIN_3002983None...",shape=box];
	_JOIN_3002983 -> ForLoop3004108;
	ForLoop3168402 [label="ForLoop3168402  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kk)+1)%29)+1; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop3168402 -> 3168401;
	ForLoop3168402 -> _JOIN_3168402;
	_JOIN_3159747 [label="_JOIN_3159747None...",shape=box];
	_JOIN_3159747 -> _JOIN_3159749;
	_JOIN_3159745 [label="_JOIN_3159745None...",shape=box];
	_JOIN_3159745 -> _JOIN_3159747;
	_JOIN_3160830 [label="_JOIN_3160830None...",shape=box];
	_JOIN_3160830 -> 3160862;
	_JOIN_3179680 [label="_JOIN_3179680None...",shape=box];
	_JOIN_3179680 -> ForLoop3179760;
	3181021 [label="3181021  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+16)*ny+k]*tmp[(i+16)];...",shape=box];
	3181021 -> _JOIN_3181022;
	ForLoop3162012 [label="ForLoop3162012  for (k=kk; k<=min(ny-1,kk+15)-28; k=k+29) {...",shape=box];
	ForLoop3162012 -> 3160946;
	ForLoop3162012 -> _JOIN_3162012;
	_JOIN_3159749 [label="_JOIN_3159749None...",shape=box];
	_JOIN_3159749 -> ForLoop3181058;
	_JOIN_3179760 [label="_JOIN_3179760None...",shape=box];
	_JOIN_3179760 -> 3179792;
	ForLoop3179760 [label="ForLoop3179760  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kk)+1)%29)+1; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop3179760 -> 3179759;
	ForLoop3179760 -> _JOIN_3179760;
	ForLoop3177156 [label="ForLoop3177156  for (k=kk; k<=min(ny-1,kk+15)-28; k=k+29) {...",shape=box];
	ForLoop3177156 -> 3176090;
	ForLoop3177156 -> _JOIN_3177156;
	3174828 [label="3174828  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+12)*ny+k]*tmp[(i+12)];...",shape=box];
	3173566 [label="3173566  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+11)*ny+k]*tmp[(i+11)];...",shape=box];
	3170958 [label="3170958  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	3173449 [label="3173449  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+10)*ny+k]*tmp[(i+10)];...",shape=box];
	3173449 -> _JOIN_3173450;
	_JOIN_3169584 [label="_JOIN_3169584None...",shape=box];
	_JOIN_3169584 -> ForLoop3169664;
	ForLoop3181022 [label="ForLoop3181022  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kk)+1)%29)+1; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop3181022 -> 3181021;
	ForLoop3181022 -> _JOIN_3181022;
	ForLoop3170926 [label="ForLoop3170926  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kk)+1)%29)+1; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop3170926 -> 3170925;
	ForLoop3170926 -> _JOIN_3170926;
	_JOIN_3165798 [label="_JOIN_3165798None...",shape=box];
	_JOIN_3165798 -> ForLoop3165878;
	_JOIN_3182324 [label="_JOIN_3182324None...",shape=box];
	_JOIN_3182324 -> 3182356;
	ForLoop2846980 [label="ForLoop2846980  for (i=ny-((ny-(0))%25); i<=ny-1; i=i+1) ...",shape=box];
	ForLoop2846980 -> 2846979;
	ForLoop2846980 -> _JOIN_2846980;
	_JOIN_3181022 [label="_JOIN_3181022None...",shape=box];
	_JOIN_3181022 -> 3181054;
	3175973 [label="3175973  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+12)*ny+k]*tmp[(i+12)];...",shape=box];
	3175973 -> _JOIN_3175974;
	ForLoop3178498 [label="ForLoop3178498  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kk)+1)%29)+1; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop3178498 -> 3178497;
	ForLoop3178498 -> _JOIN_3178498;
	ForLoop3182324 [label="ForLoop3182324  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kk)+1)%29)+1; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop3182324 -> 3182323;
	ForLoop3182324 -> _JOIN_3182324;
	_JOIN_3181241 [label="_JOIN_3181241None...",shape=box];
	_JOIN_3181241 -> _JOIN_3181242;
	ForLoop3172188 [label="ForLoop3172188  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kk)+1)%29)+1; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop3172188 -> 3172187;
	ForLoop3172188 -> _JOIN_3172188;
	ForLoop3178418 [label="ForLoop3178418  for (k=kk; k<=min(ny-1,kk+15)-28; k=k+29) {...",shape=box];
	ForLoop3178418 -> 3177352;
	ForLoop3178418 -> _JOIN_3178418;
	3181054 [label="3181054  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	3181054 -> _JOIN_3181056;
	3164732 [label="3164732  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+4)*ny+k]*tmp[(i+4)];...",shape=box];
	ForLoop3181241 [label="ForLoop3181241  for (j=jj; j<=min(ny-1,jj+63); j=j+1) ...",shape=box];
	ForLoop3181241 -> 3181240;
	ForLoop3181241 -> _JOIN_3181241;
	3182323 [label="3182323  y_copy[(k-kk)]=y_copy[(k-kk)]+A[i*ny+k]*tmp[i];...",shape=box];
	3182323 -> _JOIN_3182324;
	2858774 [label="2858774  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	2858774 -> _JOIN_2858776;
	ForLoop3181058 [label="ForLoop3181058  for (kkk=0; kkk<=ny-1; kkk=kkk+64) {...",shape=box];
	ForLoop3181058 -> ForLoop3181056;
	ForLoop3181058 -> _JOIN_3181058;
	ForLoop3173450 [label="ForLoop3173450  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kk)+1)%29)+1; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop3173450 -> 3173449;
	ForLoop3173450 -> _JOIN_3173450;
	3178497 [label="3178497  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+14)*ny+k]*tmp[(i+14)];...",shape=box];
	3178497 -> _JOIN_3178498;
	3177268 [label="3177268  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop3175974 [label="ForLoop3175974  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kk)+1)%29)+1; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop3175974 -> 3175973;
	ForLoop3175974 -> _JOIN_3175974;
	ForLoop3181056 [label="ForLoop3181056  for (kk=kkk; kk<=min(ny-1,kkk+48); kk=kk+16) {...",shape=box];
	ForLoop3181056 -> 3159811;
	ForLoop3181056 -> _JOIN_3181056;
	_JOIN_3167060 [label="_JOIN_3167060None...",shape=box];
	_JOIN_3167060 -> ForLoop3167140;
	3172187 [label="3172187  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+9)*ny+k]*tmp[(i+9)];...",shape=box];
	3172187 -> _JOIN_3172188;
	3181171 [label="3181171  tmp[i]=0;...",shape=box];
	3181171 -> ForLoop3181243;
	_JOIN_3162092 [label="_JOIN_3162092None...",shape=box];
	_JOIN_3162092 -> 3162124;
	_JOIN_3178418 [label="_JOIN_3178418None...",shape=box];
	_JOIN_3178418 -> ForLoop3178498;
	_JOIN_3182358 [label="_JOIN_3182358None...",shape=box];
	_JOIN_3182358 -> _JOIN_3182359;
	ForLoop3172108 [label="ForLoop3172108  for (k=kk; k<=min(ny-1,kk+15)-28; k=k+29) {...",shape=box];
	ForLoop3172108 -> 3171042;
	ForLoop3172108 -> _JOIN_3172108;
	3160829 [label="3160829  y_copy[(k-kk)]=y_copy[(k-kk)]+A[i*ny+k]*tmp[i];...",shape=box];
	3160829 -> _JOIN_3160830;
	_JOIN_3181242 [label="_JOIN_3181242None...",shape=box];
	_JOIN_3181242 -> _JOIN_3181243;
	_JOIN_3181243 [label="_JOIN_3181243None...",shape=box];
	_JOIN_3181243 -> ForLoop3182359;
	3173482 [label="3173482  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	3170925 [label="3170925  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+8)*ny+k]*tmp[(i+8)];...",shape=box];
	3170925 -> _JOIN_3170926;
	_JOIN_3164536 [label="_JOIN_3164536None...",shape=box];
	_JOIN_3164536 -> ForLoop3164616;
	2846979 [label="2846979  y[i]=0.0;...",shape=box];
	2846979 -> _JOIN_2846980;
	_JOIN_3174712 [label="_JOIN_3174712None...",shape=box];
	_JOIN_3174712 -> 3174744;
	ForLoop3163274 [label="ForLoop3163274  for (k=kk; k<=min(ny-1,kk+15)-28; k=k+29) {...",shape=box];
	ForLoop3163274 -> 3162208;
	ForLoop3163274 -> _JOIN_3163274;
	Forexpected=9369846271501.798828
actual=9369846271501.798828
Loop3174632 [label="ForLoop3174632  for (k=kk; k<=min(ny-1,kk+15)-28; k=k+29) {...",shape=box];
	ForLoop3174632 -> 3173566;
	ForLoop3174632 -> _JOIN_3174632;
	2859029 [label="2859029  tmp[it]=0;...",shape=box];
	2859029 -> ForLoop2858636;
	ForLoop3004108 [label="ForLoop3004108  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kk)+1)%29)+1; k<=min(ny-1,kk+15); k=k+1) {...",shape=box];
	ForLoop3004108 -> 3003114;
	ForLoop3004108 -> _JOIN_3004108;
	3164648 [label="3164648  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop3164536 [label="ForLoop3164536  for (k=kk; k<=min(ny-1,kk+15)-28; k=k+29) {...",shape=box];
	ForLoop3164536 -> 3163470;
	ForLoop3164536 -> _JOIN_3164536;
	_JOIN_3175894 [label="_JOIN_3175894None...",shape=box];
	_JOIN_3175894 -> ForLoop3175974;
	_JOIN_2858636 [label="_JOIN_2858636None...",shape=box];
	_JOIN_2858636 -> ForLoop2858777;
	_JOIN_2858635 [label="_JOIN_2858635None...",shape=box];
	_JOIN_2858635 -> _JOIN_2858636;
	_JOIN_2858634 [label="_JOIN_2858634None...",shape=box];
	_JOIN_2858634 -> _JOIN_2858635;
	3165877 [label="3165877  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+4)*ny+k]*tmp[(i+4)];...",shape=box];
	3165877 -> _JOIN_3165878;
	3182356 [label="3182356  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	3182356 -> _JOIN_3182358;
	3167256 [label="3167256  y_copy[(k-kk)]=y_copy[(k-kk)]+A[(i+6)*ny+k]*tmp[(i+6)];...",shape=box];

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest18.exe __orio_perftest18.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest18.exe  
{'[5, 3, 1, 6, 4, 1, 0, 1, 24, 16, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.227306}
{'[5, 3, 1, 6, 4, 1, 0, 1, 24, 16, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.225691}
{'[5, 3, 1, 6, 4, 1, 0, 1, 24, 16, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.225991}
{'[5, 3, 1, 6, 4, 1, 0, 1, 24, 16, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.22635}
{'[5, 3, 1, 6, 4, 1, 0, 1, 24, 16, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.226365}
{'[5, 3, 1, 6, 4, 1, 0, 1, 24, 16, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.226632}
{'[5, 3, 1, 6, 4, 1, 0, 1, 24, 16, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.225786}
{'[5, 3, 1, 6, 4, 1, 0, 1, 24, 16, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.226627}
{'[5, 3, 1, 6, 4, 1, 0, 1, 24, 16, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.225996}
{'[5, 3, 1, 6, 4, 1, 0, 1, 24, 16, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.226695}
{'[5, 3, 1, 6, 4, 1, 0, 1, 24, 16, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.226328}
{'[5, 3, 1, 6, 4, 1, 0, 1, 24, 16, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.225843}
{'[5, 3, 1, 6, 4, 1, 0, 1, 24, 16, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.227017}
{'[5, 3, 1, 6, 4, 1, 0, 1, 24, 16, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.225162}
{'[5, 3, 1, 6, 4, 1, 0, 1, 24, 16, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.227628}
{'[5, 3, 1, 6, 4, 1, 0, 1, 24, 16, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.225956}
{'[5, 3, 1, 6, 4, 1, 0, 1, 24, 16, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.22658}
{'[5, 3, 1, 6, 4, 1, 0, 1, 24, 16, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.226494}
{'[5, 3, 1, 6, 4, 1, 0, 1, 24, 16, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.226018}
{'[5, 3, 1, 6, 4, 1, 0, 1, 24, 16, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.226447}
{'[5, 3, 1, 6, 4, 1, 0, 1, 24, 16, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.226174}
{'[5, 3, 1, 6, 4, 1, 0, 1, 24, 16, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.226331}
{'[5, 3, 1, 6, 4, 1, 0, 1, 24, 16, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.22559}
{'[5, 3, 1, 6, 4, 1, 0, 1, 24, 16, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.227118}
{'[5, 3, 1, 6, 4, 1, 0, 1, 24, 16, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.226571}
{'[5, 3, 1, 6, 4, 1, 0, 1, 24, 16, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.226181}
{'[5, 3, 1, 6, 4, 1, 0, 1, 24, 16, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.226087}
{'[5, 3, 1, 6, 4, 1, 0, 1, 24, 16, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.226294}
{'[5, 3, 1, 6, 4, 1, 0, 1, 24, 16, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.226796}
{'[5, 3, 1, 6, 4, 1, 0, 1, 24, 16, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.227027}

out:
 ["{'[5, 3, 1, 6, 4, 1, 0, 1, 24, 16, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.227306}", "{'[5, 3, 1, 6, 4, 1, 0, 1, 24, 16, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.225691}", "{'[5, 3, 1, 6, 4, 1, 0, 1, 24, 16, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.225991}", "{'[5, 3, 1, 6, 4, 1, 0, 1, 24, 16, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.22635}", "{'[5, 3, 1, 6, 4, 1, 0, 1, 24, 16, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.226365}", "{'[5, 3, 1, 6, 4, 1, 0, 1, 24, 16, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.226632}", "{'[5, 3, 1, 6, 4, 1, 0, 1, 24, 16, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.225786}", "{'[5, 3, 1, 6, 4, 1, 0, 1, 24, 16, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.226627}", "{'[5, 3, 1, 6, 4, 1, 0, 1, 24, 16, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.225996}", "{'[5, 3, 1, 6, 4, 1, 0, 1, 24, 16, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.226695}", "{'[5, 3, 1, 6, 4, 1, 0, 1, 24, 16, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.226328}", "{'[5, 3, 1, 6, 4, 1, 0, 1, 24, 16, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.225843}", "{'[5, 3, 1, 6, 4, 1, 0, 1, 24, 16, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.227017}", "{'[5, 3, 1, 6, 4, 1, 0, 1, 24, 16, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.225162}", "{'[5, 3, 1, 6, 4, 1, 0, 1, 24, 16, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.227628}", "{'[5, 3, 1, 6, 4, 1, 0, 1, 24, 16, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.225956}", "{'[5, 3, 1, 6, 4, 1, 0, 1, 24, 16, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.22658}", "{'[5, 3, 1, 6, 4, 1, 0, 1, 24, 16, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.226494}", "{'[5, 3, 1, 6, 4, 1, 0, 1, 24, 16, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.226018}", "{'[5, 3, 1, 6, 4, 1, 0, 1, 24, 16, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.226447}", "{'[5, 3, 1, 6, 4, 1, 0, 1, 24, 16, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.226174}", "{'[5, 3, 1, 6, 4, 1, 0, 1, 24, 16, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.226331}", "{'[5, 3, 1, 6, 4, 1, 0, 1, 24, 16, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.22559}", "{'[5, 3, 1, 6, 4, 1, 0, 1, 24, 16, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.227118}", "{'[5, 3, 1, 6, 4, 1, 0, 1, 24, 16, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.226571}", "{'[5, 3, 1, 6, 4, 1, 0, 1, 24, 16, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.226181}", "{'[5, 3, 1, 6, 4, 1, 0, 1, 24, 16, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.226087}", "{'[5, 3, 1, 6, 4, 1, 0, 1, 24, 16, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.226294}", "{'[5, 3, 1, 6, 4, 1, 0, 1, 24, 16, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.226796}", "{'[5, 3, 1, 6, 4, 1, 0, 1, 24, 16, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.227027}"]
returning from 'run': {'[5, 3, 1, 6, 4, 1, 0, 1, 24, 16, 0, 28, 2, 0, 0, 0, 0, 0]': ([0.227306, 0.225691, 0.225991, 0.22635, 0.226365, 0.226632, 0.225786, 0.226627, 0.225996, 0.226695, 0.226328, 0.225843, 0.227017, 0.225162, 0.227628, 0.225956, 0.22658, 0.226494, 0.226018, 0.226447, 0.226174, 0.226331, 0.22559, 0.227118, 0.226571, 0.226181, 0.226087, 0.226294, 0.226796, 0.227027], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.227306, 0.225691, 0.225991, 0.22635, 0.226365, 0.226632, 0.225786, 0.226627, 0.225996, 0.226695, 0.226328, 0.225843, 0.227017, 0.225162, 0.227628, 0.225956, 0.22658, 0.226494, 0.226018, 0.226447, 0.226174, 0.226331, 0.22559, 0.227118, 0.226571, 0.226181, 0.226087, 0.226294, 0.226796, 0.227027], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[5, 3, 1, 6, 4, 1, 0, 1, 24, 16, 0, 28, 2, 0, 0, 0, 0, 0]': ([0.227306, 0.225691, 0.225991, 0.22635, 0.226365, 0.226632, 0.225786, 0.226627, 0.225996, 0.226695, 0.226328, 0.225843, 0.227017, 0.225162, 0.227628, 0.225956, 0.22658, 0.226494, 0.226018, 0.226447, 0.226174, 0.226331, 0.22559, 0.227118, 0.226571, 0.226181, 0.226087, 0.226294, 0.226796, 0.227027], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [5, 5, 0, 5, 4, 2, 1, 1, 27, 1, 0, 23, 0, 2, 0, 0, 1, 1]
Fixed Factors: {}
Testing candidate 19: [5, 5, 0, 5, 4, 2, 1, 1, 27, 1, 0, 23, 0, 2, 0, 0, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	29
        Max loop nest depth: 	6
        Additions: 		1289
        Multiplications: 	342
        Divisions: 		0
        Logical: 		0
        Reads: 			2300
        Writes: 		284
        Comparisons:		29
        Gotos: 			0
        
digraph CFG {
	ForLoop3361400 [label="ForLoop3361400  for (jjj=0; jjj<=ny-1; jjj=jjj+512) {...",shape=box];
	ForLoop3361400 -> ForLoop3361398;
	ForLoop3361400 -> _JOIN_3361400;
	ForLoop3307628 [label="ForLoop3307628  for (iii=0; iii<=nx-1; iii=iii+1024) ...",shape=box];
	ForLoop3307628 -> ForLoop3307627;
	ForLoop3307628 -> _JOIN_3307628;
	_JOIN_3304211 [label="_JOIN_3304211None...",shape=box];
	_JOIN_3304211 -> 3304573;
	_JOIN_3364528 [label="_JOIN_3364528None...",shape=box];
	_JOIN_3364528 -> _JOIN_3364530;
	ForLoop3363295 [label="ForLoop3363295  for (k=kkk; k<=cbv_5; k=k+24) {...",shape=box];
	ForLoop3363295 -> 3362419;
	ForLoop3363295 -> _JOIN_3363295;
	ForLoop3307627 [label="ForLoop3307627  for (ii=iii; ii<=min(nx-1,iii+768); ii=ii+256) {...",shape=box];
	ForLoop3307627 -> 3347197;
	ForLoop3307627 -> _JOIN_3307627;
	3365433 [label="3365433  y_copy[(k-kkk)]=y_copy[(k-kkk)]+A[i*ny+k]*tmp[i];...",shape=box];
	3365433 -> _JOIN_3365434;
	3362419 [label="3362419  y_copy[(k-kkk)]=y_copy[(k-kkk)]+A[(i+1)*ny+k]*tmp[(i+1)];...",shape=box];
	3362335 [label="3362335  for (k=kkk; k<=min(ny-1,kkk+127); k=k+1) ...",shape=box];
	ForLoop3363375 [label="ForLoop3363375  for (k=cbv_6; k<=cbv_7; k=k+1) ...",shape=box];
	ForLoop3363375 -> 3363374;
	ForLoop3363375 -> _JOIN_3363375;
	ForLoop3364531 [label="ForLoop3364531  for (jjj=0; jjj<=ny-1; jjj=jjj+512) ...",shape=box];
	ForLoop3364531 -> ForLoop3364530;
	ForLoop3364531 -> _JOIN_3364531;
	ForLoop3364530 [label="ForLoop3364530  for (jj=jjj; jj<=min(ny-1,jjj+256); jj=jj+256) {...",shape=box];
	ForLoop3364530 -> 3363584;
	ForLoop3364530 -> _JOIN_3364530;
	ForLoop3304211 [label="ForLoop3304211  for (i=0; i<=cbv_1; i=i+28) {...",shape=box];
	ForLoop3304211 -> 3303966;
	ForLoop3304211 -> _JOIN_3304211;
	3364622 [label="3364622  y_copy[(k-kkk)]=y_copy[(k-kkk)]+A[i*ny+k]*tmp[i];...",shape=box];
	_JOIN_3363411 [label="_JOIN_3363411None...",shape=box];
	_JOIN_3363411 -> ForLoop3365470;
	3304573 [label="3304573  register int cbv_2, cbv_3;...",shape=box];
	ForLoop3365360 [label="ForLoop3365360  for (k=kkk; k<=cbv_9; k=k+24) {...",shape=box];
	ForLoop3365360 -> 3364622;
	ForLoop3365360 -> _JOIN_3365360;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 3303504;
	3347197 [label="3347197  int i;...",shape=box];
	3347197 -> ForLoop3363411;
	ForLoop3361398 [label="ForLoop3361398  for (jj=jjj; jj<=min(ny-1,jjj+256); jj=jj+256) {...",shape=box];
	ForLoop3361398 -> 3359335;
	ForLoop3361398 -> _JOIN_3361398;
	ForLoop3365470 [label="ForLoop3365470  for (i=(min(nx-1,ii+255))-(((min(nx-1,ii+255))-(ii)+1)%2)+1; i<=min(nx-1,ii+255); i=i+1) {...",shape=box];
	ForLoop3365470 -> 3363522;
	ForLoop3365470 -> _JOIN_3365470;
	_JOIN_3361396 [label="_JOIN_3361396None...",shape=box];
	_JOIN_3361396 -> _JOIN_3361398;
	_JOIN_3361398 [label="_JOIN_3361398None...",shape=box];
	_JOIN_3361398 -> _JOIN_3361400;
	3303504 [label="3303504  int i;...",shape=box];
	ForLoop3361396 [label="ForLoop3361396  for (jt=jj; jt<=cbv_1; jt=jt+32) {...",shape=box];
	ForLoop3361396 -> 3359409;
	ForLoop3361396 -> _JOIN_3361396;
	ForLoop3365434 [label="ForLoop3365434  for (k=cbv_10; k<=cbv_11; k=k+1) ...",shape=box];
	ForLoop3365434 -> 3365433;
	ForLoop3365434 -> _JOIN_3365434;
	3362302 [label="3362302  y_copy[(k-kkk)]=y_copy[(k-kkk)]+A[i*ny+k]*tmp[i];...",shape=box];
	3362302 -> _JOIN_3362303;
	3359409 [label="3359409  tmp[i]=tmp[i]+A[i*ny+jt]*x_copy[(jt-jj)];...",shape=box];
	_JOIN_3304280 [label="_JOIN_3304280None...",shape=box];
	_JOIN_3304280 -> 3313536;
	3363627 [label="3363627  tmp[i]=tmp[i]+A[i*ny+jt]*x_copy[(jt-jj)];...",shape=box];
	ForLoop3363409 [label="ForLoop3363409  for (kkk=0; kkk<=ny-1; kkk=kkk+128) {...",shape=box];
	ForLoop3363409 -> 3361444;
	ForLoop3363409 -> _JOIN_3363409;
	3363584 [label="3363584  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	_JOIN_3307628 [label="_JOIN_3307628None...",shape=box];
	_JOIN_3362303 [label="_JOIN_3362303None...",shape=box];
	_JOIN_3362303 -> 3362335;
	_JOIN_3362229 [label="_JOIN_3362229None...",shape=box];
	_JOIN_3362229 -> 3380764;
	3381827 [label="3381827  register int cbv_6, cbv_7;...",shape=box];
	3365466 [label="3365466  for (k=kkk; k<=min(ny-1,kkk+127); k=k+1) ...",shape=box];
	3365466 -> _JOIN_3365468;
	_JOexpected=0.000000
actual=9369846271501.798828
IN_3364531 [label="_JOIN_3364531None...",shape=box];
	_JOIN_3364531 -> ForLoop3365468;
	_JOIN_3364530 [label="_JOIN_3364530None...",shape=box];
	_JOIN_3364530 -> _JOIN_3364531;
	_JOIN_3365360 [label="_JOIN_3365360None...",shape=box];
	_JOIN_3365360 -> 3383695;
	3361491 [label="3361491  y_copy[(k-kkk)]=y_copy[(k-kkk)]+A[i*ny+k]*tmp[i];...",shape=box];
	3313536 [label="3313536  double x_copy[256];...",shape=box];
	ForLoop3362229 [label="ForLoop3362229  for (k=kkk; k<=cbv_2; k=k+24) {...",shape=box];
	ForLoop3362229 -> 3361491;
	ForLoop3362229 -> _JOIN_3362229;
	3303966 [label="3303966  y[i]=0.0;...",shape=box];
	3304279 [label="3304279  y[i]=0.0;...",shape=box];
	3304279 -> _JOIN_3304280;
	_JOIN_3363295 [label="_JOIN_3363295None...",shape=box];
	_JOIN_3363295 -> 3381827;
	ForLoop3362303 [label="ForLoop3362303  for (k=cbv_3; k<=cbv_4; k=k+1) ...",shape=box];
	ForLoop3362303 -> 3362302;
	ForLoop3362303 -> _JOIN_3362303;
	ForLoop3364528 [label="ForLoop3364528  for (jt=jj; jt<=cbv_8; jt=jt+32) {...",shape=box];
	ForLoop3364528 -> 3363627;
	ForLoop3364528 -> _JOIN_3364528;
	3383695 [label="3383695  register int cbv_10, cbv_11;...",shape=box];
	_JOIN_3361400 [label="_JOIN_3361400None...",shape=box];
	_JOIN_3361400 -> ForLoop3363409;
	3363374 [label="3363374  y_copy[(k-kkk)]=y_copy[(k-kkk)]+A[(i+1)*ny+k]*tmp[(i+1)];...",shape=box];
	3363374 -> _JOIN_3363375;
	_JOIN_3307627 [label="_JOIN_3307627None...",shape=box];
	_JOIN_3307627 -> _JOIN_3307628;
	_JOIN_3363375 [label="_JOIN_3363375None...",shape=box];
	_JOIN_3363375 -> 3363407;
	3380764 [label="3380764  register int cbv_3, cbv_4;...",shape=box];
	3364575 [label="3364575  for (k=kkk; k<=min(ny-1,kkk+127); k=k+1) ...",shape=box];
	ForLoop3304280 [label="ForLoop3304280  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop3304280 -> 3304279;
	ForLoop3304280 -> _JOIN_3304280;
	_JOIN_3365468 [label="_JOIN_3365468None...",shape=box];
	_JOIN_3365468 -> _JOIN_3365470;
	ForLoop3365468 [label="ForLoop3365468  for (kkk=0; kkk<=ny-1; kkk=kkk+128) {...",shape=box];
	ForLoop3365468 -> 3364575;
	ForLoop3365468 -> _JOIN_3365468;
	_JOIN_3365434 [label="_JOIN_3365434None...",shape=box];
	_JOIN_3365434 -> 3365466;
	_JOIN_3365470 [label="_JOIN_3365470None...",shape=box];
	_JOIN_3365470 -> _JOIN_3307627;
	_JOIN_3363409 [label="_JOIN_3363409None...",shape=box];
	_JOIN_3363409 -> _JOIN_3363411;
	3359335 [label="3359335  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	3361444 [label="3361444  for (k=kkk; k<=min(ny-1,kkk+127); k=k+1) ...",shape=box];
	3359264 [label="3359264  tmp[i]=0;...",shape=box];
	ForLoop3363411 [label="ForLoop3363411  for (i=ii; i<=min(nx-1,ii+255)-1; i=i+2) {...",shape=box];
	ForLoop3363411 -> 3359264;
	ForLoop3363411 -> _JOIN_3363411;
	3363407 [label="3363407  for (k=kkk; k<=min(ny-1,kkk+127); k=k+1) ...",shape=box];
	3363407 -> _JOIN_3363409;
	3363522 [label="3363522  tmp[i]=0;...",shape=box];
	3363522 -> ForLoop3364531;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest19.exe __orio_perftest19.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest19.exe  
{'[5, 5, 0, 5, 4, 2, 1, 1, 27, 1, 0, 23, 0, 2, 0, 0, 1, 1]' : 0.146743}
{'[5, 5, 0, 5, 4, 2, 1, 1, 27, 1, 0, 23, 0, 2, 0, 0, 1, 1]' : 0.146647}
{'[5, 5, 0, 5, 4, 2, 1, 1, 27, 1, 0, 23, 0, 2, 0, 0, 1, 1]' : 0.146613}
{'[5, 5, 0, 5, 4, 2, 1, 1, 27, 1, 0, 23, 0, 2, 0, 0, 1, 1]' : 0.146608}
{'[5, 5, 0, 5, 4, 2, 1, 1, 27, 1, 0, 23, 0, 2, 0, 0, 1, 1]' : 0.146579}
{'[5, 5, 0, 5, 4, 2, 1, 1, 27, 1, 0, 23, 0, 2, 0, 0, 1, 1]' : 0.147672}
{'[5, 5, 0, 5, 4, 2, 1, 1, 27, 1, 0, 23, 0, 2, 0, 0, 1, 1]' : 0.146807}
{'[5, 5, 0, 5, 4, 2, 1, 1, 27, 1, 0, 23, 0, 2, 0, 0, 1, 1]' : 0.146634}
{'[5, 5, 0, 5, 4, 2, 1, 1, 27, 1, 0, 23, 0, 2, 0, 0, 1, 1]' : 0.146577}
{'[5, 5, 0, 5, 4, 2, 1, 1, 27, 1, 0, 23, 0, 2, 0, 0, 1, 1]' : 0.146814}
{'[5, 5, 0, 5, 4, 2, 1, 1, 27, 1, 0, 23, 0, 2, 0, 0, 1, 1]' : 0.1466}
{'[5, 5, 0, 5, 4, 2, 1, 1, 27, 1, 0, 23, 0, 2, 0, 0, 1, 1]' : 0.146599}
{'[5, 5, 0, 5, 4, 2, 1, 1, 27, 1, 0, 23, 0, 2, 0, 0, 1, 1]' : 0.146771}
{'[5, 5, 0, 5, 4, 2, 1, 1, 27, 1, 0, 23, 0, 2, 0, 0, 1, 1]' : 0.146746}
{'[5, 5, 0, 5, 4, 2, 1, 1, 27, 1, 0, 23, 0, 2, 0, 0, 1, 1]' : 0.146779}
{'[5, 5, 0, 5, 4, 2, 1, 1, 27, 1, 0, 23, 0, 2, 0, 0, 1, 1]' : 0.146587}
{'[5, 5, 0, 5, 4, 2, 1, 1, 27, 1, 0, 23, 0, 2, 0, 0, 1, 1]' : 0.14661}
{'[5, 5, 0, 5, 4, 2, 1, 1, 27, 1, 0, 23, 0, 2, 0, 0, 1, 1]' : 0.146708}
{'[5, 5, 0, 5, 4, 2, 1, 1, 27, 1, 0, 23, 0, 2, 0, 0, 1, 1]' : 0.146605}
{'[5, 5, 0, 5, 4, 2, 1, 1, 27, 1, 0, 23, 0, 2, 0, 0, 1, 1]' : 0.147741}
{'[5, 5, 0, 5, 4, 2, 1, 1, 27, 1, 0, 23, 0, 2, 0, 0, 1, 1]' : 0.146658}
{'[5, 5, 0, 5, 4, 2, 1, 1, 27, 1, 0, 23, 0, 2, 0, 0, 1, 1]' : 0.146599}
{'[5, 5, 0, 5, 4, 2, 1, 1, 27, 1, 0, 23, 0, 2, 0, 0, 1, 1]' : 0.146598}
{'[5, 5, 0, 5, 4, 2, 1, 1, 27, 1, 0, 23, 0, 2, 0, 0, 1, 1]' : 0.146618}
{'[5, 5, 0, 5, 4, 2, 1, 1, 27, 1, 0, 23, 0, 2, 0, 0, 1, 1]' : 0.146626}
{'[5, 5, 0, 5, 4, 2, 1, 1, 27, 1, 0, 23, 0, 2, 0, 0, 1, 1]' : 0.14669}
{'[5, 5, 0, 5, 4, 2, 1, 1, 27, 1, 0, 23, 0, 2, 0, 0, 1, 1]' : 0.146696}
{'[5, 5, 0, 5, 4, 2, 1, 1, 27, 1, 0, 23, 0, 2, 0, 0, 1, 1]' : 0.146725}
{'[5, 5, 0, 5, 4, 2, 1, 1, 27, 1, 0, 23, 0, 2, 0, 0, 1, 1]' : 0.146583}
{'[5, 5, 0, 5, 4, 2, 1, 1, 27, 1, 0, 23, 0, 2, 0, 0, 1, 1]' : 0.146728}

out:
 ["{'[5, 5, 0, 5, 4, 2, 1, 1, 27, 1, 0, 23, 0, 2, 0, 0, 1, 1]' : 0.146743}", "{'[5, 5, 0, 5, 4, 2, 1, 1, 27, 1, 0, 23, 0, 2, 0, 0, 1, 1]' : 0.146647}", "{'[5, 5, 0, 5, 4, 2, 1, 1, 27, 1, 0, 23, 0, 2, 0, 0, 1, 1]' : 0.146613}", "{'[5, 5, 0, 5, 4, 2, 1, 1, 27, 1, 0, 23, 0, 2, 0, 0, 1, 1]' : 0.146608}", "{'[5, 5, 0, 5, 4, 2, 1, 1, 27, 1, 0, 23, 0, 2, 0, 0, 1, 1]' : 0.146579}", "{'[5, 5, 0, 5, 4, 2, 1, 1, 27, 1, 0, 23, 0, 2, 0, 0, 1, 1]' : 0.147672}", "{'[5, 5, 0, 5, 4, 2, 1, 1, 27, 1, 0, 23, 0, 2, 0, 0, 1, 1]' : 0.146807}", "{'[5, 5, 0, 5, 4, 2, 1, 1, 27, 1, 0, 23, 0, 2, 0, 0, 1, 1]' : 0.146634}", "{'[5, 5, 0, 5, 4, 2, 1, 1, 27, 1, 0, 23, 0, 2, 0, 0, 1, 1]' : 0.146577}", "{'[5, 5, 0, 5, 4, 2, 1, 1, 27, 1, 0, 23, 0, 2, 0, 0, 1, 1]' : 0.146814}", "{'[5, 5, 0, 5, 4, 2, 1, 1, 27, 1, 0, 23, 0, 2, 0, 0, 1, 1]' : 0.1466}", "{'[5, 5, 0, 5, 4, 2, 1, 1, 27, 1, 0, 23, 0, 2, 0, 0, 1, 1]' : 0.146599}", "{'[5, 5, 0, 5, 4, 2, 1, 1, 27, 1, 0, 23, 0, 2, 0, 0, 1, 1]' : 0.146771}", "{'[5, 5, 0, 5, 4, 2, 1, 1, 27, 1, 0, 23, 0, 2, 0, 0, 1, 1]' : 0.146746}", "{'[5, 5, 0, 5, 4, 2, 1, 1, 27, 1, 0, 23, 0, 2, 0, 0, 1, 1]' : 0.146779}", "{'[5, 5, 0, 5, 4, 2, 1, 1, 27, 1, 0, 23, 0, 2, 0, 0, 1, 1]' : 0.146587}", "{'[5, 5, 0, 5, 4, 2, 1, 1, 27, 1, 0, 23, 0, 2, 0, 0, 1, 1]' : 0.14661}", "{'[5, 5, 0, 5, 4, 2, 1, 1, 27, 1, 0, 23, 0, 2, 0, 0, 1, 1]' : 0.146708}", "{'[5, 5, 0, 5, 4, 2, 1, 1, 27, 1, 0, 23, 0, 2, 0, 0, 1, 1]' : 0.146605}", "{'[5, 5, 0, 5, 4, 2, 1, 1, 27, 1, 0, 23, 0, 2, 0, 0, 1, 1]' : 0.147741}", "{'[5, 5, 0, 5, 4, 2, 1, 1, 27, 1, 0, 23, 0, 2, 0, 0, 1, 1]' : 0.146658}", "{'[5, 5, 0, 5, 4, 2, 1, 1, 27, 1, 0, 23, 0, 2, 0, 0, 1, 1]' : 0.146599}", "{'[5, 5, 0, 5, 4, 2, 1, 1, 27, 1, 0, 23, 0, 2, 0, 0, 1, 1]' : 0.146598}", "{'[5, 5, 0, 5, 4, 2, 1, 1, 27, 1, 0, 23, 0, 2, 0, 0, 1, 1]' : 0.146618}", "{'[5, 5, 0, 5, 4, 2, 1, 1, 27, 1, 0, 23, 0, 2, 0, 0, 1, 1]' : 0.146626}", "{'[5, 5, 0, 5, 4, 2, 1, 1, 27, 1, 0, 23, 0, 2, 0, 0, 1, 1]' : 0.14669}", "{'[5, 5, 0, 5, 4, 2, 1, 1, 27, 1, 0, 23, 0, 2, 0, 0, 1, 1]' : 0.146696}", "{'[5, 5, 0, 5, 4, 2, 1, 1, 27, 1, 0, 23, 0, 2, 0, 0, 1, 1]' : 0.146725}", "{'[5, 5, 0, 5, 4, 2, 1, 1, 27, 1, 0, 23, 0, 2, 0, 0, 1, 1]' : 0.146583}", "{'[5, 5, 0, 5, 4, 2, 1, 1, 27, 1, 0, 23, 0, 2, 0, 0, 1, 1]' : 0.146728}"]
returning from 'run': {'[5, 5, 0, 5, 4, 2, 1, 1, 27, 1, 0, 23, 0, 2, 0, 0, 1, 1]': ([0.146743, 0.146647, 0.146613, 0.146608, 0.146579, 0.147672, 0.146807, 0.146634, 0.146577, 0.146814, 0.1466, 0.146599, 0.146771, 0.146746, 0.146779, 0.146587, 0.14661, 0.146708, 0.146605, 0.147741, 0.146658, 0.146599, 0.146598, 0.146618, 0.146626, 0.14669, 0.146696, 0.146725, 0.146583, 0.146728], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.146743, 0.146647, 0.146613, 0.146608, 0.146579, 0.147672, 0.146807, 0.146634, 0.146577, 0.146814, 0.1466, 0.146599, 0.146771, 0.146746, 0.146779, 0.146587, 0.14661, 0.146708, 0.146605, 0.147741, 0.146658, 0.146599, 0.146598, 0.146618, 0.146626, 0.14669, 0.146696, 0.146725, 0.146583, 0.146728], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[5, 5, 0, 5, 4, 2, 1, 1, 27, 1, 0, 23, 0, 2, 0, 0, 1, 1]': ([0.146743, 0.146647, 0.146613, 0.146608, 0.146579, 0.147672, 0.146807, 0.146634, 0.146577, 0.146814, 0.1466, 0.146599, 0.146771, 0.146746, 0.146779, 0.146587, 0.14661, 0.146708, 0.146605, 0.147741, 0.146658, 0.146599, 0.146598, 0.146618, 0.146626, 0.14669, 0.146696, 0.146725, 0.146583, 0.146728], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [0, 3, 0, 0, 6, 4, 1, 0, 7, 0, 24, 29, 0, 0, 1, 1, 0, 1]
Fixed Factors: {}
Testing candidate 20: [0, 3, 0, 0, 6, 4, 1, 0, 7, 0, 24, 29, 0, 0, 1, 1, 0, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		375
        Multiplications: 	130
        Divisions: 		0
        Logical: 		0
        Reads: 			869
        Writes: 		187
        Comparisons:		12
        Gotos: 			0
        
digraph CFG {
	_JOIN_3384279 [label="_JOIN_3384279None...",shape=box];
	_JOIN_3384279 -> 3403283;
	ForLoop3405315 [label="ForLoop3405315  for (k=cbv_6; k<=cbv_7; k=k+1) {...",shape=box];
	ForLoop3405315 -> 3410654;
	ForLoop3405315 -> _JOIN_3405315;
	3403409 [label="3403409  scv_40=scv_40+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	3410654 [label="3410654  double scv_39;...",shape=box];
	ForLoop3384210 [label="ForLoop3384210  for (i=0; i<=ny-8; i=i+8) {...",shape=box];
	ForLoop3384210 -> 3384145;
	ForLoop3384210 -> _JOIN_3384210;
	3414515 [label="3414515  double scv_40;...",shape=box];
	ForLoop3384279 [label="ForLoop3384279  for (i=ny-((ny-(0))%8); i<=ny-1; i=i+1) ...",shape=box];
	ForLoop3384279 -> 3384278;
	ForLoop3384279 -> _JOIN_3384279;
	3384278 [label="3384278  y[i]=0.0;...",shape=box];
	3384278 -> _JOIN_3384279;
	ForLoop3405320 [label="ForLoop3405320  for (i=0; i<=nx-1; i=i+1) {...",shape=box];
	ForLoop3405320 -> 3414515;
	ForLoop3405320 -> _JOIN_3405320;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 3383983;
	ForLoop3404059 [label="ForLoop3404059  for (j=jj; j<=cbv_1; j=j+25) {...",shape=box];
	ForLoop3404059 -> 3403409;
	ForLoop3404059 -> _JOIN_3404059;
	ForLoop3404134 [label="ForLoop3404134  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop3404134 -> ForLoop3404133;
	ForLoop3404134 -> _JOIN_3404134;
	ForLoop3404130 [label="ForLoop3404130  for (j=cbv_2; j<=cbv_3; j=j+1) {...",shape=box];
	ForLoop3404130 -> 3404129;
	ForLoop3404130 -> _JOIN_3404130;
	ForLoop3404133 [label="ForLoop3404133  for (jj=jjj; jj<=min(ny-1,jjj+1984); jj=jj+64) {...",shape=box];
	ForLoop3404133 -> 3403365;
	ForLoop3404133 -> _JOIN_3404133;
	3415625 [label="3415625  register int cbv_4;...",shape=box];
	3414527 [label="3414527  tmp[i]=scv_40;...",shape=box];
	3414527 -> _JOIN_3405320;
	_JOIN_3405320 [label="_JOIN_3405320None...",shape=box];
	_JOIN_3405247 [label="_JOIN_3405247None...",shape=box];
	_JOIN_3405247 -> 3416761;
	3384145 [label="3384145  y[i]=0.0;...",shape=box];
	_JOIN_3384210 [label="_JOIN_3384210None...",shape=box];
	_JOIN_3384210 -> ForLoop3384279;
	3403283 [label="3403283  double x_copy[64];...",shape=box];
	3404129 [label="3404129  scv_40=scv_40+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	3404129 -> _JOIN_3404130;
	3383983 [label="3383983  int i;...",shape=box];
	3383983 -> ForLoop3384210;
	ForLoop3405318 [label="ForLoop3405318  for (kkk=0; kkk<=ny-1; kkk=kkk+512) {...",shape=box];
	ForLoop3405318 -> 3415625;
	ForLoop3405318 -> _JOIN_3405318;
	3403365 [label="3403365  for (j=jj; j<=min(ny-1,jj+63); j=j+1) ...",shape=box];
	3404393 [label="3404393  int k;...",shape=box];
	ForLoop3405247 [label="ForLoop3405247  for (k=kt; k<=cbv_5; k=k+30) {...",shape=box];
	ForLoop3405247 -> 3409956;
	ForLoexpected=9369846271501.798828
actual=9369846271501.798828
op3405247 -> _JOIN_3405247;
	3415287 [label="3415287  register int cbv_2, cbv_3;...",shape=box];
	_JOIN_3404134 [label="_JOIN_3404134None...",shape=box];
	_JOIN_3404134 -> ForLoop3405318;
	3409956 [label="3409956  double scv_9, scv_10, scv_11, scv_12, scv_13, scv_14, scv_15, scv_16;...",shape=box];
	_JOIN_3404130 [label="_JOIN_3404130None...",shape=box];
	_JOIN_3404130 -> _JOIN_3404133;
	_JOIN_3404059 [label="_JOIN_3404059None...",shape=box];
	_JOIN_3404059 -> 3415287;
	_JOIN_3404133 [label="_JOIN_3404133None...",shape=box];
	_JOIN_3404133 -> _JOIN_3404134;
	_JOIN_3405315 [label="_JOIN_3405315None...",shape=box];
	_JOIN_3405315 -> _JOIN_3405318;
	3416761 [label="3416761  register int cbv_6, cbv_7;...",shape=box];
	3408502 [label="3408502  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	_JOIN_3404392 [label="_JOIN_3404392None...",shape=box];
	_JOIN_3404392 -> 3404393;
	ForLoop3404392 [label="ForLoop3404392  for (kt=kkk; kt<=cbv_4; kt=kt+8) {...",shape=box];
	ForLoop3404392 -> 3408502;
	ForLoop3404392 -> _JOIN_3404392;
	_JOIN_3405318 [label="_JOIN_3405318None...",shape=box];
	_JOIN_3405318 -> 3414527;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest20.exe __orio_perftest20.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest20.exe  
{'[0, 3, 0, 0, 6, 4, 1, 0, 7, 0, 24, 29, 0, 0, 1, 1, 0, 1]' : 0.138372}
{'[0, 3, 0, 0, 6, 4, 1, 0, 7, 0, 24, 29, 0, 0, 1, 1, 0, 1]' : 0.138284}
{'[0, 3, 0, 0, 6, 4, 1, 0, 7, 0, 24, 29, 0, 0, 1, 1, 0, 1]' : 0.138478}
{'[0, 3, 0, 0, 6, 4, 1, 0, 7, 0, 24, 29, 0, 0, 1, 1, 0, 1]' : 0.138448}
{'[0, 3, 0, 0, 6, 4, 1, 0, 7, 0, 24, 29, 0, 0, 1, 1, 0, 1]' : 0.138182}
{'[0, 3, 0, 0, 6, 4, 1, 0, 7, 0, 24, 29, 0, 0, 1, 1, 0, 1]' : 0.138331}
{'[0, 3, 0, 0, 6, 4, 1, 0, 7, 0, 24, 29, 0, 0, 1, 1, 0, 1]' : 0.138524}
{'[0, 3, 0, 0, 6, 4, 1, 0, 7, 0, 24, 29, 0, 0, 1, 1, 0, 1]' : 0.138332}
{'[0, 3, 0, 0, 6, 4, 1, 0, 7, 0, 24, 29, 0, 0, 1, 1, 0, 1]' : 0.1382}
{'[0, 3, 0, 0, 6, 4, 1, 0, 7, 0, 24, 29, 0, 0, 1, 1, 0, 1]' : 0.138316}
{'[0, 3, 0, 0, 6, 4, 1, 0, 7, 0, 24, 29, 0, 0, 1, 1, 0, 1]' : 0.138323}
{'[0, 3, 0, 0, 6, 4, 1, 0, 7, 0, 24, 29, 0, 0, 1, 1, 0, 1]' : 0.138212}
{'[0, 3, 0, 0, 6, 4, 1, 0, 7, 0, 24, 29, 0, 0, 1, 1, 0, 1]' : 0.138288}
{'[0, 3, 0, 0, 6, 4, 1, 0, 7, 0, 24, 29, 0, 0, 1, 1, 0, 1]' : 0.138532}
{'[0, 3, 0, 0, 6, 4, 1, 0, 7, 0, 24, 29, 0, 0, 1, 1, 0, 1]' : 0.138214}
{'[0, 3, 0, 0, 6, 4, 1, 0, 7, 0, 24, 29, 0, 0, 1, 1, 0, 1]' : 0.13829}
{'[0, 3, 0, 0, 6, 4, 1, 0, 7, 0, 24, 29, 0, 0, 1, 1, 0, 1]' : 0.138369}
{'[0, 3, 0, 0, 6, 4, 1, 0, 7, 0, 24, 29, 0, 0, 1, 1, 0, 1]' : 0.138292}
{'[0, 3, 0, 0, 6, 4, 1, 0, 7, 0, 24, 29, 0, 0, 1, 1, 0, 1]' : 0.138304}
{'[0, 3, 0, 0, 6, 4, 1, 0, 7, 0, 24, 29, 0, 0, 1, 1, 0, 1]' : 0.13825}
{'[0, 3, 0, 0, 6, 4, 1, 0, 7, 0, 24, 29, 0, 0, 1, 1, 0, 1]' : 0.138477}
{'[0, 3, 0, 0, 6, 4, 1, 0, 7, 0, 24, 29, 0, 0, 1, 1, 0, 1]' : 0.138214}
{'[0, 3, 0, 0, 6, 4, 1, 0, 7, 0, 24, 29, 0, 0, 1, 1, 0, 1]' : 0.138509}
{'[0, 3, 0, 0, 6, 4, 1, 0, 7, 0, 24, 29, 0, 0, 1, 1, 0, 1]' : 0.138421}
{'[0, 3, 0, 0, 6, 4, 1, 0, 7, 0, 24, 29, 0, 0, 1, 1, 0, 1]' : 0.138232}
{'[0, 3, 0, 0, 6, 4, 1, 0, 7, 0, 24, 29, 0, 0, 1, 1, 0, 1]' : 0.138343}
{'[0, 3, 0, 0, 6, 4, 1, 0, 7, 0, 24, 29, 0, 0, 1, 1, 0, 1]' : 0.138223}
{'[0, 3, 0, 0, 6, 4, 1, 0, 7, 0, 24, 29, 0, 0, 1, 1, 0, 1]' : 0.138382}
{'[0, 3, 0, 0, 6, 4, 1, 0, 7, 0, 24, 29, 0, 0, 1, 1, 0, 1]' : 0.138305}
{'[0, 3, 0, 0, 6, 4, 1, 0, 7, 0, 24, 29, 0, 0, 1, 1, 0, 1]' : 0.138354}

out:
 ["{'[0, 3, 0, 0, 6, 4, 1, 0, 7, 0, 24, 29, 0, 0, 1, 1, 0, 1]' : 0.138372}", "{'[0, 3, 0, 0, 6, 4, 1, 0, 7, 0, 24, 29, 0, 0, 1, 1, 0, 1]' : 0.138284}", "{'[0, 3, 0, 0, 6, 4, 1, 0, 7, 0, 24, 29, 0, 0, 1, 1, 0, 1]' : 0.138478}", "{'[0, 3, 0, 0, 6, 4, 1, 0, 7, 0, 24, 29, 0, 0, 1, 1, 0, 1]' : 0.138448}", "{'[0, 3, 0, 0, 6, 4, 1, 0, 7, 0, 24, 29, 0, 0, 1, 1, 0, 1]' : 0.138182}", "{'[0, 3, 0, 0, 6, 4, 1, 0, 7, 0, 24, 29, 0, 0, 1, 1, 0, 1]' : 0.138331}", "{'[0, 3, 0, 0, 6, 4, 1, 0, 7, 0, 24, 29, 0, 0, 1, 1, 0, 1]' : 0.138524}", "{'[0, 3, 0, 0, 6, 4, 1, 0, 7, 0, 24, 29, 0, 0, 1, 1, 0, 1]' : 0.138332}", "{'[0, 3, 0, 0, 6, 4, 1, 0, 7, 0, 24, 29, 0, 0, 1, 1, 0, 1]' : 0.1382}", "{'[0, 3, 0, 0, 6, 4, 1, 0, 7, 0, 24, 29, 0, 0, 1, 1, 0, 1]' : 0.138316}", "{'[0, 3, 0, 0, 6, 4, 1, 0, 7, 0, 24, 29, 0, 0, 1, 1, 0, 1]' : 0.138323}", "{'[0, 3, 0, 0, 6, 4, 1, 0, 7, 0, 24, 29, 0, 0, 1, 1, 0, 1]' : 0.138212}", "{'[0, 3, 0, 0, 6, 4, 1, 0, 7, 0, 24, 29, 0, 0, 1, 1, 0, 1]' : 0.138288}", "{'[0, 3, 0, 0, 6, 4, 1, 0, 7, 0, 24, 29, 0, 0, 1, 1, 0, 1]' : 0.138532}", "{'[0, 3, 0, 0, 6, 4, 1, 0, 7, 0, 24, 29, 0, 0, 1, 1, 0, 1]' : 0.138214}", "{'[0, 3, 0, 0, 6, 4, 1, 0, 7, 0, 24, 29, 0, 0, 1, 1, 0, 1]' : 0.13829}", "{'[0, 3, 0, 0, 6, 4, 1, 0, 7, 0, 24, 29, 0, 0, 1, 1, 0, 1]' : 0.138369}", "{'[0, 3, 0, 0, 6, 4, 1, 0, 7, 0, 24, 29, 0, 0, 1, 1, 0, 1]' : 0.138292}", "{'[0, 3, 0, 0, 6, 4, 1, 0, 7, 0, 24, 29, 0, 0, 1, 1, 0, 1]' : 0.138304}", "{'[0, 3, 0, 0, 6, 4, 1, 0, 7, 0, 24, 29, 0, 0, 1, 1, 0, 1]' : 0.13825}", "{'[0, 3, 0, 0, 6, 4, 1, 0, 7, 0, 24, 29, 0, 0, 1, 1, 0, 1]' : 0.138477}", "{'[0, 3, 0, 0, 6, 4, 1, 0, 7, 0, 24, 29, 0, 0, 1, 1, 0, 1]' : 0.138214}", "{'[0, 3, 0, 0, 6, 4, 1, 0, 7, 0, 24, 29, 0, 0, 1, 1, 0, 1]' : 0.138509}", "{'[0, 3, 0, 0, 6, 4, 1, 0, 7, 0, 24, 29, 0, 0, 1, 1, 0, 1]' : 0.138421}", "{'[0, 3, 0, 0, 6, 4, 1, 0, 7, 0, 24, 29, 0, 0, 1, 1, 0, 1]' : 0.138232}", "{'[0, 3, 0, 0, 6, 4, 1, 0, 7, 0, 24, 29, 0, 0, 1, 1, 0, 1]' : 0.138343}", "{'[0, 3, 0, 0, 6, 4, 1, 0, 7, 0, 24, 29, 0, 0, 1, 1, 0, 1]' : 0.138223}", "{'[0, 3, 0, 0, 6, 4, 1, 0, 7, 0, 24, 29, 0, 0, 1, 1, 0, 1]' : 0.138382}", "{'[0, 3, 0, 0, 6, 4, 1, 0, 7, 0, 24, 29, 0, 0, 1, 1, 0, 1]' : 0.138305}", "{'[0, 3, 0, 0, 6, 4, 1, 0, 7, 0, 24, 29, 0, 0, 1, 1, 0, 1]' : 0.138354}"]
returning from 'run': {'[0, 3, 0, 0, 6, 4, 1, 0, 7, 0, 24, 29, 0, 0, 1, 1, 0, 1]': ([0.138372, 0.138284, 0.138478, 0.138448, 0.138182, 0.138331, 0.138524, 0.138332, 0.1382, 0.138316, 0.138323, 0.138212, 0.138288, 0.138532, 0.138214, 0.13829, 0.138369, 0.138292, 0.138304, 0.13825, 0.138477, 0.138214, 0.138509, 0.138421, 0.138232, 0.138343, 0.138223, 0.138382, 0.138305, 0.138354], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.138372, 0.138284, 0.138478, 0.138448, 0.138182, 0.138331, 0.138524, 0.138332, 0.1382, 0.138316, 0.138323, 0.138212, 0.138288, 0.138532, 0.138214, 0.13829, 0.138369, 0.138292, 0.138304, 0.13825, 0.138477, 0.138214, 0.138509, 0.138421, 0.138232, 0.138343, 0.138223, 0.138382, 0.138305, 0.138354], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[0, 3, 0, 0, 6, 4, 1, 0, 7, 0, 24, 29, 0, 0, 1, 1, 0, 1]': ([0.138372, 0.138284, 0.138478, 0.138448, 0.138182, 0.138331, 0.138524, 0.138332, 0.1382, 0.138316, 0.138323, 0.138212, 0.138288, 0.138532, 0.138214, 0.13829, 0.138369, 0.138292, 0.138304, 0.13825, 0.138477, 0.138214, 0.138509, 0.138421, 0.138232, 0.138343, 0.138223, 0.138382, 0.138305, 0.138354], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [5, 0, 1, 6, 0, 4, 1, 1, 17, 20, 28, 0, 1, 0, 1, 1, 1, 1]
Fixed Factors: {}
Testing candidate 21: [5, 0, 1, 6, 0, 4, 1, 1, 17, 20, 28, 0, 1, 0, 1, 1, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	108
        Max loop nest depth: 	6
        Additions: 		5565
        Multiplications: 	2280
        Divisions: 		0
        Logical: 		0
        Reads: 			10247
        Writes: 		1657
        Comparisons:		108
        Gotos: 			0
        
digraph CFG {
	_JOIN_3709484 [label="_JOIN_3709484None...",shape=box];
	_JOIN_3709484 -> 3915884;
	3925148 [label="3925148  register int cbv_54, cbv_55;...",shape=box];
	3722135 [label="3722135  scv_68=scv_68+A[(i+16)*ny+j]*x[j];...",shape=box];
	3722135 -> _JOIN_3722136;
	3924376 [label="3924376  register int cbv_51, cbv_52;...",shape=box];
	3726335 [label="3726335  scv_55=scv_55+A[(i+20)*ny+j]*x[j];...",shape=box];
	3726335 -> _JOIN_3726336;
	ForLoop3709536 [label="ForLoop3709536  for (j=cbv_18; j<=cbv_19; j=j+1) {...",shape=box];
	ForLoop3709536 -> 3709535;
	ForLoop3709536 -> _JOIN_3709536;
	_JOIN_3733251 [label="_JOIN_3733251None...",shape=box];
	_JOIN_3733251 -> 3733282;
	3707438 [label="3707438  int j;...",shape=box];
	_JOIN_3723186 [label="_JOIN_3723186None...",shape=box];
	_JOIN_3723186 -> 3723188;
	3745629 [label="3745629  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	3707435 [label="3707435  scv_70=scv_70+A[(i+2)*ny+j]*x[j];...",shape=box];
	3707435 -> _JOIN_3707436;
	_JOIN_3712634 [label="_JOIN_3712634None...",shape=box];
	_JOIN_3712634 -> 3918200;
	ForLoop3708434 [label="ForLoop3708434  for (j=0; j<=cbv_14; j=j+29) {...",shape=box];
	ForLoop3708434 -> 3707480;
	ForLoop3708434 -> _JOIN_3708434;
	ForLoop3724236 [label="ForLoop3724236  for (j=cbv_60; j<=cbv_61; j=j+1) {...",shape=box];
	ForLoop3724236 -> 3724235;
	ForLoop3724236 -> _JOIN_3724236;
	ForLoop3733251 [label="ForLoop3733251  for (kt=kk; kt<=cbv_68; kt=kt+8) {...",shape=box];
	ForLoop3733251 -> 3804154;
	ForLoop3733251 -> _JOIN_3733251;
	ForLoop3717936 [label="ForLoop3717936  for (j=cbv_42; j<=cbv_43; j=j+1) {...",shape=box];
	ForLoop3717936 -> 3717935;
	ForLoop3717936 -> _JOIN_3717936;
	_JOIN_3723134 [label="_JOIN_3723134None...",shape=box];
	_JOIN_3723134 -> 3925920;
	3724235 [label="3724235  scv_74=scv_74+A[(i+18)*ny+j]*x[j];...",shape=box];
	3724235 -> _JOIN_3724236;
	_JOIN_3711636 [label="_JOIN_3711636None...",shape=box];
	_JOIN_3711636 -> 3711638;
	_JOIN_3718986 [label="_JOIN_3718986None...",shape=box];
	_JOIN_3718986 -> 3718988;
	3417324 [label="3417324  y[i]=0.0;...",shape=box];
	ForLoop3725286 [label="ForLoop3725286  for (j=cbv_63; j<=cbv_64; j=j+1) {...",shape=box];
	ForLoop3725286 -> 3725285;
	ForLoop3725286 -> _JOIN_3725286;
	3713780 [label="3713780  scv_73=scv_73+A[(i+9)*ny+j]*x[j];...",shape=box];
	3704345 [label="3704345  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	3704345 -> _JOIN_3704347;
	3915112 [label="3915112  register int cbv_15, cbv_16;...",shape=box];
	3711635 [label="3711635  scv_64=scv_64+A[(i+6)*ny+j]*x[j];...",shape=box];
	3711635 -> _JOIN_3711636;
	3725285 [label="3725285  scv_67=scv_67+A[(i+19)*ny+j]*x[j];...",shape=box];
	3725285 -> _JOIN_3725286;
	_JOIN_3708434 [label="_JOIN_3708434None...",shape=box];
	_JOIN_3708434 -> 3915112;
	3711638 [label="3711638  int j;...",shape=box];
	_JOIN_3715784 [label="_JOIN_3715784None...",shape=box];
	_JOIN_3715784 -> 3920516;
	ForLoop3722084 [label="ForLoop3722084  for (j=0; j<=cbv_53; j=j+29) {...",shape=box];
	ForLoop3722084 -> 3721130;
	ForLoop3722084 -> _JOIN_3722084;
	ForLoop3723134 [label="ForLoop3723134  for (j=0; j<=cbv_56; j=j+29) {...",shape=box];
	ForLoop3723134 -> 3722180;
	ForLoop3723134 -> _JOIN_3723134;
	ForLoop3718986 [label="ForLoop3718986  for (j=cbv_45; j<=cbv_46; j=j+1) {...",shape=box];
	ForLoop3718986 -> 3718985;
	ForLoop3718986 -> _JOIN_3718986;
	3721088 [label="3721088  int j;...",shape=box];
	3925920 [label="3925920  register int cbv_57, cbv_58;...",shape=box];
	ForLoop3721034 [label="ForLoop3721034  for (j=0; j<=cbv_50; j=j+29) {...",shape=box];
	ForLoop3721034 -> 3720080;
	ForLoop3721034 -> _JOIN_3721034;
	_JOIN_3735096 [label="_JOIN_3735096None...",shape=box];
	_JOIN_3735096 -> 3735127;
	3717935 [label="3717935  scv_56=scv_56+A[(i+12)*ny+j]*x[j];...",shape=box];
	3717935 -> _JOIN_3717936;
	3718988 [label="3718988  int j;...",shape=box];
	ForLoop3713684 [label="ForLoop3713684  for (j=0; j<=cbv_29; j=j+29) {...",shape=box];
	ForLoop3713684 -> 3712730;
	ForLoop3713684 -> _JOIN_3713684;
	3718985 [label="3718985  scv_61=scv_61+A[(i+13)*ny+j]*x[j];...",shape=box];
	3718985 -> _JOIN_3718986;
	3717938 [label="3717938  int j;...",shape=box];
	3705380 [label="3705380  scv_57=scv_57+A[(i+1)*ny+j]*x[j];...",shape=box];
	_JOIN_3719984 [label="_JOIN_3719984None...",shape=box];
	_JOIN_3719984 -> 3923604;
	_JOIN_3713684 [label="_JOIN_3713684None...",shape=box];
	_JOIN_3713684 -> 3918972;
	3843063 [label="3843063  double scv_55, scv_56, scv_57, scv_58, scv_59, scv_60, scv_61, scv_62;...",shape=box];
	ForLoop3714734 [label="ForLoop3714734  for (j=0; j<=cbv_32; j=j+29) {...",shape=box];
	ForLoop3714734 -> 3713780;
	ForLoop3714734 -> _JOIN_3714734;
	3721085 [label="3721085  scv_65=scv_65+A[(i+15)*ny+j]*x[j];...",shape=box];
	3721085 -> _JOIN_3721086;
	ForLoop3726336 [label="ForLoop3726336  for (j=cbv_66; j<=cbv_67; j=j+1) {...",shape=box];
	ForLoop3726336 -> 3726335;
	ForLoop3726336 -> _JOIN_3726336;
	_JOIN_3735136 [label="_JOIN_3735136None...",shape=box];
	3762640 [label="3762640  double scv_39, scv_40, scv_41, scv_42, scv_43, scv_44, scv_45, scv_46;...",shape=box];
	_JOIN_3704350 [label="_JOIN_3704350None...",shape=box];
	_JOIN_3704350 -> 3704351;
	ForLoop3721086 [label="ForLoop3721086  for (j=cbv_51; j<=cbv_52; j=j+1) {...",shape=box];
	ForLoop3721086 -> 3721085;
	ForLoop3721086 -> _JOIN_3721086;
	ForLoop3722136 [label="ForLoop3722136  for (j=cbv_54; j<=cbv_55; j=j+1) {...",shape=box];
	ForLoop3722136 -> 3722135;
	ForLoop3722136 -> _JOIN_3722136;
	ForLoop3733906 [label="ForLoop3733906  for (kkk=0; kkk<=ny-1; kkk=kkk+512) {...",shape=box];
	ForLoop3733906 -> ForLoop3733904;
	ForLoop3733906 -> _JOIN_3733906;
	_JOIN_3706334 [label="_JOIN_3706334None...",shape=box];
	_JOIN_3706334 -> 3913568;
	ForLoop3733904 [label="ForLoop3733904  for (kk=kkk; kk<=min(ny-1,kkk+496); kk=kk+16) {...",shape=box];
	ForLoop3733904 -> 3726399;
	ForLoop3733904 -> _JOIN_3733904;
	ForLoop3705293 [label="ForLoop3705293  for (j=0; j<=cbv_5; j=j+29) {...",shape=box];
	ForLoop3705293 -> 3704591;
	ForLoop3705293 -> _JOIN_3705293;
	ForLoop3733908 [label="ForLoop3733908  for (i=it; i<=min(nx-1,ii+255)-20; i=i+21) {...",shape=box];
	ForLoop3733908 -> 3843063;
	ForLoop3733908 -> _JOIN_3733908;
	_JOIN_3709536 [label="_JOIN_3709536None...",shape=box];
	_JOIN_3709536 -> 3709538;
	_JOIN_3726284 [label="_JOIN_3726284None...",shape=box];
	_JOIN_3726284 -> 3928236;
	3921288 [label="3921288  register int cbv_39, cbv_40;...",shape=box];
	3716930 [label="3716930  scv_56=scv_56+A[(i+12)*ny+j]*x[j];...",shape=box];
	ForLoop3701478 [label="ForLoop3701478  for (j=0; j<=cbv_1; j=j+29) {...",shape=box];
	ForLoop3701478 -> 3745629;
	ForLoop3701478 -> _JOIN_3701478;
	ForLoop3706334 [label="ForLoop3706334  for (j=0; j<=cbv_8; j=j+29) {...",shape=box];
	ForLoop3706334 -> 3705380;
	ForLoop3706334 -> _JOIN_3706334;
	3734739 [label="3734739  scv_84=scv_84+A[i*ny+j]*x[j];...",shape=box];
	3734739 -> _JOIN_3734740;
	_JOIN_3724184 [label="_JOIN_3724184None...",shape=box];
	_JOIN_3724184 -> 3926692;
	3915884 [label="3915884  register int cbv_18, cbv_19;...",shape=box];
	3923604 [label="3923604  register int cbv_48, cbv_49;...",shape=box];
	3720035 [label="3720035  scv_62=scv_62+A[(i+14)*ny+j]*x[j];...",shape=box];
	3720035 -> _JOIN_3720036;
	_JOIN_3710534 [label="_JOIN_3710534None...",shape=box];
	_JOIN_3710534 -> 3916656;
	3717980 [label="3717980  scv_61=scv_61+A[(i+13)*ny+j]*x[j];...",shape=box];
	3916656 [label="3916656  register int cbv_21, cbv_22;...",shape=box];
	3918200 [label="3918200  register int cbv_27, cbv_28;...",shape=box];
	_JOIN_3735130 [label="_JOIN_3735130None...",shape=box];
	_JOIN_3735130 -> 3848930;
	3720038 [label="3720038  int j;...",shape=box];
	_JOIN_3735132 [label="_JOIN_3735132None...",shape=box];
	_JOIN_3735132 -> _JOIN_3735135;
	3917428 [label="3917428  register int cbv_24, cbv_25;...",shape=box];
	3919744 [label="3919744  register int cbv_33, cbv_34;...",shape=box];
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 3417012;
	3722180 [label="3722180  scv_66=scv_66+A[(i+17)*ny+j]*x[j];...",shape=box];
	3723230 [label="3723230  scv_74=scv_74+A[(i+18)*ny+j]*x[j];...",shape=box];
	3693817 [label="3693817  double x_copy;...",shape=box];
	3724238 [label="3724238  int j;...",shape=box];
	3920516 [label="3920516  register int cbv_36, cbv_37;...",shape=box];
	3762652 [label="3762652  tmp[it]=scv_39;...",shape=box];
	_JOIN_3701478 [label="_JOIN_3701478None...",shape=box];
	_JOIN_3701478 -> 3910662;
	3714785 [label="3714785  scv_73=scv_73+A[(i+9)*ny+j]*x[j];...",shape=box];
	3714785 -> _JOIN_3714786;
	_JOIN_3704347 [label="_JOIN_3704347None...",shape=box];
	_JOIN_3704347 -> _JOIN_3704348;
	_JOIN_3721034 [label="_JOIN_3721034None...",shape=box];
	_JOIN_3721034 -> 3924376;
	_JOIN_3704348 [label="_JOIN_3704348None...",shape=box];
	_JOIN_3704348 -> 3762652;
	3846545 [label="3846545  double scv_76, scv_77, scv_78, scv_79, scv_80, scv_81, scv_82, scv_83;...",shape=box];
	3714788 [label="3714788  int j;...",shape=box];
	_JOIN_3724236 [label="_JOIN_3724236None...",shape=box];
	_JOIN_3724236 -> 3724238;
	3932250 [label="3932250  register int cbv_70, cbv_71;...",shape=box];
	3722138 [label="3722138  int j;...",shape=box];
	ForLoop3725234 [label="ForLoop3725234  for (j=0; j<=cbv_62; j=j+29) {...",shape=box];
	ForLoop3725234 -> 3724280;
	ForLoop3725234 -> _JOIN_3725234;
	_JOIN_3717884 [label="_JOIN_3717884None...",shape=box];
	_JOIN_3717884 -> 3922060;
	3715880 [label="3715880  scv_71=scv_71+A[(i+11)*ny+j]*x[j];...",shape=box];
	3721130 [label="3721130  scv_68=scv_68+A[(i+16)*ny+j]*x[j];...",shape=box];
	_JOIN_3735129 [label="_JOIN_3735129None...",shape=box];
	_JOIN_3735129 -> _JOIN_3735130;
	3724280 [label="3724280  scv_67=scv_67+A[(i+19)*ny+j]*x[j];...",shape=box];
	_JOIN_3721086 [label="_JOIN_3721086None...",shape=box];
	_JOIN_3721086 -> 3721088;
	3848918 [label="3848918  double scv_84;...",shape=box];
	_JOIN_3725286 [label="_JOIN_3725286None...",shape=box];
	_JOIN_3725286 -> 3725288;
	3712688 [label="3712688  int j;...",shape=box];
	ForLoop3704348 [label="ForLoop3704348  for (kkk=0; kkk<=ny-1; kkk=kkk+512) {...",shape=box];
	ForLoop3704348 -> ForLoop3704347;
	ForLoop3704348 -> _JOIN_3704348;
	3711680 [label="3711680  scv_63=scv_63+A[(i+7)*ny+j]*x[j];...",shape=box];
	_JOIN_3705336 [label="_JOIN_3705336None...",shape=box];
	_JOIN_3705336 -> 3705338;
	_JOIN_3718934 [label="_JOIN_3718934None...",shape=box];
	_JOIN_3718934 -> 3922832;
	ForLoop3704347 [label="ForLoop3704347  for (kk=kkk; kk<=min(ny-1,kkk+496); kk=kk+16) {...",shape=box];
	ForLoop3704347 -> 3701788;
	ForLoop3704347 -> _JOIN_3704347;
	ForLoop3707436 [label="ForLoop3707436  for (j=cbv_12; j<=cbv_13; j=j+1) {...",shape=box];
	ForLoop3707436 -> 3707435;
	ForLoop3707436 -> _JOIN_3707436;
	3913568 [label="3913568  register int cbv_9, cbv_10;...",shape=box];
	3804154 [label="3804154  double scv_47, scv_48, scv_49, scv_50, scv_51, scv_52, scv_53, scv_54;...",shape=box];
	3918972 [label="3918972  register int cbv_30, cbv_31;...",shape=box];
	3749858 [label="3749858  double scv_31, scv_32, scv_33, scv_34, scv_35, scv_36, scv_37, scv_38;...",shape=box];
	3709580 [label="3709580  scv_69=scv_69+A[(i+5)*ny+j]*x[j];...",shape=box];
	_JOIN_3722084 [label="_JOIN_3722084None...",shape=box];
	_JOIN_3722084 -> 3925148;
	3713735 [label="3713735  scv_75=scv_75+A[(i+8)*ny+j]*x[j];...",shape=box];
	3713735 -> _JOIN_3713736;
	ForLoop3714786 [label="ForLoop3714786  for (j=cbv_33; j<=cbv_34; j=j+1) {...",shape=box];
	ForLoop3714786 -> 3714785;
	ForLoop3714786 -> _JOIN_3714786;
	ForLoop3711584 [label="ForLoop3711584  for (j=0; j<=cbv_23; j=j+29) {...",shape=box];
	ForLoop3711584 -> 3710630;
	ForLoop3711584 -> _JOIN_3711584;
	_JOIN_3705293 [label="_JOIN_3705293None...",shape=box];
	_JOIN_3705293 -> 3912796;
	ForLoop3717884 [label="ForLoop3717884  for (j=0; j<=cbv_41; j=j+29) {...",shape=box];
	ForLoop3717884 -> 3716930;
	ForLoop3717884 -> _JOIN_3717884;
	ForLoop3716886 [label="ForLoop3716886  for (j=cbv_39; j<=cbv_40; j=j+1) {...",shape=box];
	ForLoop3716886 -> 3716885;
	ForLoop3716886 -> _JOIN_3716886;
	_JOIN_3701725 [label="_JOIN_3701725None...",shape=box];
	_JOIN_3701725 -> ForLoop3704348;
	3713738 [label="3713738  int j;...",shape=box];
	ForLoop3719984 [label="ForLoop3719984  for (j=0; j<=cbv_47; j=j+29) {...",shape=box];
	ForLoop3719984 -> 3719030;
	ForLoop3719984 -> _JOIN_3719984;
	3746471 [label="3746471  double scv_30;...",shape=box];
	3926692 [label="3926692  register int cbv_60, cbv_61;...",shape=box];
	3710588 [label="3710588  int j;...",shape=box];
	3734803 [label="3734803  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	3725330 [label="3725330  scv_55=scv_55+A[(i+20)*ny+j]*x[j];...",shape=box];
	3712730 [label="3712730  scv_75=scv_75+A[(i+8)*ny+j]*x[j];...",shape=box];
	3701788 [label="3701788  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	3725288 [label="3725288  int j;...",shape=box];
	3417751 [label="3417751  register int cbv_2, cbv_3;...",shape=box];
	ForLoop3706386 [label="ForLoop3706386  for (j=cbv_9; j<=cbv_10; j=j+1) {...",shape=box];
	ForLoop3706386 -> 3706385;
	ForLoop3706386 -> _JOIN_3706386;
	3710630 [label="3710630  scv_64=scv_64+A[(i+6)*ny+j]*x[j];...",shape=box];
	_JOIN_3417548 [label="_JOIN_3417548None...",shape=box];
	_JOIN_3417548 -> 3693817;
	_JOIN_3733908 [label="_JOIN_3733908None...",shape=box];
	_JOIN_3733908 -> ForLoop3735132;
	ForLoop3715784 [label="ForLoop3715784  for (j=0; j<=cbv_35; j=j+29) {...",shape=box];
	ForLoop3715784 -> 3714830;
	ForLoop3715784 -> _JOIN_3715784;
	ForLoop3704350 [label="ForLoop3704350  for (it=ii; it<=min(nx-1,ii+255)-7; it=it+8) {...",shape=box];
	ForLoop3704350 -> 3762640;
	ForLoop3704350 -> _JOIN_3704350;
	_JOIN_3712686 [label="_JOIN_3712686None...",shape=box];
	_JOIN_3712686 -> 3712688;
	_JOIN_3725234 [label="_JOIN_3725234None...",shape=box];
	_JOIN_3725234 -> 3927464;
	3710585 [label="3710585  scv_69=scv_69+A[(i+5)*ny+j]*x[j];...",shape=box];
	3710585 -> _JOIN_3710586;
	ForLoop3417548 [label="ForLoop3417548  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop3417548 -> 3417547;
	ForLoop3417548 -> _JOIN_3417548;
	_JOIN_3707436 [label="_JOIN_3707436None...",shape=box];
	_JOIN_3707436 -> 3707438;
	3716888 [label="3716888  int j;...",shape=box];
	ForLoop3734697 [label="ForLoop3734697  for (j=0; j<=cbv_69; j=j+29) {...",shape=box];
	ForLoop3734697 -> 3733995;
	ForLoop3734697 -> _JOIN_3734697;
	ForLoop3720036 [label="ForLoop3720036  for (j=cbv_48; j<=cbv_49; j=j+1) {...",shape=box];
	ForLoop3720036 -> 3720035;
	ForLoop3720036 -> _JOIN_3720036;
	_JOIN_3714734 [label="_JOIN_3714734None...",shape=box];
	_JOIN_3714734 -> 3919744;
	ForLoop3712686 [label="ForLoop3712686  for (j=cbv_27; j<=cbv_28; j=j+1) {...",shape=box];
	ForLoop3712686 -> 3712685;
	ForLoop3712686 -> _JOIN_3712686;
	3716885 [label="3716885  scv_71=scv_71+A[(i+11)*ny+j]*x[j];...",shape=box];
	3716885 -> _JOIN_3716886;
	_JOIN_3733906 [label="_JOIN_3733906None...",shape=box];
	_JOIN_3733906 -> 3843081;
	_JOIN_3734740 [label="_JOIN_3734740None...",shape=box];
	_JOIN_3734740 -> ForLoop3735130;
	_JOIN_3734697 [label="_JOIN_3734697None...",shape=box];
	_JOIN_3734697 -> 3932250;
	ForLoop3726284 [label="ForLoop3726284  for (j=0; j<=cbv_65; j=j+29) {...",shape=box];
	ForLoop3726284 -> 3725330;
	ForLoop3726284 -> _JOIN_3726284;
	_JOIN_3733904 [label="_JOIN_3733904None...",shape=box];
	_JOIN_3733904 -> _JOIN_3733906;
	ForLoop3417479 [label="ForLoop3417479  for (i=0; i<=cbv_1; i=i+18) {...",shape=box];
	ForLoop3417479 -> 3417324;
	ForLoop3417479 -> _JOIN_3417479;
	ForLoop3707384 [label="ForLoop3707384  for (j=0; j<=cbv_11; j=j+29) {...",shape=box];
	ForLoop3707384 -> 3706430;
	ForLoop3707384 -> _JOIN_3707384;
	_JOIN_3716886 [label="_JOIN_3716886None...",shape=box];
	_JOIN_3716886 -> 3716888;
	ForLoop3715836 [label="ForLoop3715836  for (j=cbv_36; j<=cbv_37; j=j+1) {...",shape=box];
	ForLoop3715836 -> 3715835;
	ForLoop3715836 -> _JOIN_3715836;
	ForLoop3709484 [label="ForLoop3709484  for (j=0; j<=cbv_17; j=j+29) {...",shape=box];
	ForLoop3709484 -> 3708530;
	ForLoop3709484 -> _JOIN_3709484;
	_JOIN_3717936 [label="_JOIN_3717936None...",shape=box];
	_JOIN_3717936 -> 3717938;
	3735127 [label="3735127  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	3735127 -> _JOIN_3735129;
	ForLoop3712634 [label="ForLoop3712634  for (j=0; j<=cbv_26; j=j+29) {...",shape=box];
	ForLoop3712634 -> 3711680;
	ForLoop3712634 -> _JOIN_3712634;
	_JOIN_3707384 [label="_JOIN_3707384None...",shape=box];
	_JOIN_3707384 -> 3914340;
	ForLoop3723186 [label="ForLoop3723186  for (j=cbv_57; j<=cbv_58; j=j+1) {...",shape=box];
	ForLoop3723186 -> 3723185;
	ForLoop3723186 -> _JOIN_3723186;
	ForLoop3735096 [label="ForLoop3735096  for (kt=kk; kt<=cbv_72; kt=kt+8) {...",shape=box];
	ForLoop3735096 -> 3846545;
	ForLoop3735096 -> _JOIN_3735096;
	ForLoop3701725 [label="ForLoop3701725  for (j=cbv_2; j<=cbv_3; j=j+1) {...",shape=box];
	ForLoop3701725 -> 3746471;
	ForLoop3701725 -> _JOIN_3701725;
	3928236 [label="3928236  register int cbv_66, cbv_67;...",shape=box];
	3720080 [label="3720080  scv_65=scv_65+A[(i+15)*ny+j]*x[j];...",shape=box];
	_JOIN_3704314 [label="_JOIN_3704314None...",shape=box];
	_JOIN_3704314 -> 3704345;
	_JOIN_3710586 [label="_JOIN_3710586None...",shape=box];
	_JOIN_3710586 -> 3710588;
	ForLoop3710534 [label="ForLoop3710534  for (j=0; j<=cbv_20; j=j+29) {...",shape=box];
	ForLoop3710534 -> 3709580;
	ForLoop3710534 -> _JOIN_3710534;
	3417547 [label="3417547  y[i]=0.0;...",shape=box];
	3417547 -> _JOIN_3417548;
	3910662 [label="3910662  register int cbv_2, cbv_3;...",shape=box];
	3719030 [label="3719030  scv_62=scv_62+A[(i+14)*ny+j]*x[j];...",shape=box];
	_JOIN_3716834 [label="_JOIN_3716834None...",shape=box];
	_JOIN_3716834 -> 3921288;
	_JOIN_3715836 [label="_JOIN_3715836None...",shape=box];
	_JOIN_3715836 -> 3715838;
	ForLoop3716834 [label="ForLoop3716834  for (j=0; j<=cbv_38; j=j+29) {...",shape=box];
	ForLoop3716834 -> 3715880;
	ForLoop3716834 -> _JOIN_3716834;
	3912796 [label="3912796  register int cbv_6, cbv_7;...",shape=box];
	ForLoop3718934 [label="ForLoop3718934  for (j=0; j<=cbv_44; j=j+29) {...",shape=box];
	ForLoop3718934 -> 3717980;
	ForLoop3718934 -> _JOIN_3718934;
	3706388 [label="3706388  int j;...",shape=box];
	3922060 [label="3922060  register int cbv_42, cbv_43;...",shape=box];
	_JOIN_3706386 [label="_JOIN_3706386None...",shape=box];
	_JOIN_3706386 -> 3706388;
	ForLoop3735130 [label="ForLoop3735130  for (kkk=0; kkk<=ny-1; kkk=kkk+512) {...",shape=box];
	ForLoop3735130 -> ForLoop3735129;
	ForLoop3735130 -> _JOIN_3735130;
	3706385 [label="3706385  scv_57=scv_57+A[(i+1)*ny+j]*x[j];...",shape=box];
	3706385 -> _JOIN_3706386;
	ForLoop3724184 [label="ForLoop3724184  for (j=0; j<=cbv_59; j=j+29) {...",shape=box];
	ForLoop3724184 -> 3723230;
	ForLoop3724184 -> _JOIN_3724184;
	_JOIN_3708486 [label="_JOIN_3708486None...",shape=box];
	_JOIN_3708486 -> 3708488;
	ForLoop3734740 [label="ForLoop3734740  for (j=cbv_70; j<=cbv_71; j=j+1) {...",shape=box];
	ForLoop3734740 -> 3734739;
	ForLoop3734740 -> _JOIN_3734740;
	ForLoop3710586 [label="ForLoop3710586  for (j=cbv_21; j<=cbv_22; j=j+1) {...",shape=box];
	ForLoop3710586 -> 3710585;
	ForLoop3710586 -> _JOIN_3710586;
	3708530 [label="3708530  scv_72=scv_72+A[(i+4)*ny+j]*x[j];...",shape=box];
	_JOIN_3720036 [label="_JOIN_3720036None...",shape=box];
	_JOIN_3720036 -> 3720038;
	3733282 [label="3733282  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	3726399 [label="3726399  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop3735135 [label="ForLoop3735135  for (ii=iii; ii<=min(nx-1,iii+1792); ii=ii+256) {...",shape=box];
	ForLoop3735135 -> ForLoop3704350;
	ForLoop3735135 -> _JOIN_3735135;
	ForLoop3735129 [label="ForLoop3735129  for (kk=kkk; kk<=min(ny-1,kkk+496); kk=kk+16) {...",shape=box];
	ForLoop3735129 -> 3734803;
	ForLoop3735129 -> _JOIN_3735129;
	3848930 [label="3848930  tmp[i]=scv_84;...",shape=box];
	3848930 -> _JOIN_3735132;
	ForLoop3713736 [label="ForLoop3713736  for (j=cbv_30; j<=cbv_31; j=j+1) {...",shape=box];
	ForLoop3713736 -> 3713735;
	ForLoop3713736 -> _JOIN_3713736;
	3714830 [label="3714830  scv_58=scv_58+A[(i+10)*ny+j]*x[j];...",shape=box];
	3705338 [label="3705338  int j;...",shape=box];
	ForLoop3704314 [label="ForLoop3704314  for (kt=kk; kt<=cbv_4; kt=kt+8) {...",shape=box];
	ForLoop3704314 -> 3749858;
	ForLoop3704314 -> _JOIN_3704314;
	ForLoop3708486 [label="ForLoop3708486  for (j=cbv_15; j<=cbv_16; j=j+1) {...",shape=box];
	ForLoop3708486 -> 3708485;
	ForLoop3708486 -> _JOIN_3708486;
	_JOIN_3713736 [label="_JOIN_3713736None...",shape=box];
	_JOIN_3713736 -> 3713738;
	_JOIN_3726336 [label="_JOIN_3726336None...",shape=box];
	_JOIN_3726336 -> ForLoop3733906;
	3927464 [label="3927464  register int cbv_63, cbv_64;...",shape=box];
	3723188 [label="3723188  int j;...",shape=box];
	3733995 [label="3733995  scv_84=scv_84+A[i*ny+j]*x[j];...",shapexpected=9369846271501.798828
actual=9369846271501.798828
e=box];
	3705335 [label="3705335  scv_60=scv_60+A[i*ny+j]*x[j];...",shape=box];
	3705335 -> _JOIN_3705336;
	ForLoop3705336 [label="ForLoop3705336  for (j=cbv_6; j<=cbv_7; j=j+1) {...",shape=box];
	ForLoop3705336 -> 3705335;
	ForLoop3705336 -> _JOIN_3705336;
	3922832 [label="3922832  register int cbv_45, cbv_46;...",shape=box];
	3709538 [label="3709538  int j;...",shape=box];
	3709535 [label="3709535  scv_72=scv_72+A[(i+4)*ny+j]*x[j];...",shape=box];
	3709535 -> _JOIN_3709536;
	3843081 [label="3843081  tmp[(i+20)]=scv_55;...",shape=box];
	3723185 [label="3723185  scv_66=scv_66+A[(i+17)*ny+j]*x[j];...",shape=box];
	3723185 -> _JOIN_3723186;
	3417012 [label="3417012  int i;...",shape=box];
	3706430 [label="3706430  scv_70=scv_70+A[(i+2)*ny+j]*x[j];...",shape=box];
	3914340 [label="3914340  register int cbv_12, cbv_13;...",shape=box];
	_JOIN_3735135 [label="_JOIN_3735135None...",shape=box];
	_JOIN_3735135 -> _JOIN_3735136;
	_JOIN_3722136 [label="_JOIN_3722136None...",shape=box];
	_JOIN_3722136 -> 3722138;
	3704591 [label="3704591  scv_60=scv_60+A[i*ny+j]*x[j];...",shape=box];
	3712685 [label="3712685  scv_63=scv_63+A[(i+7)*ny+j]*x[j];...",shape=box];
	3712685 -> _JOIN_3712686;
	3704351 [label="3704351  int i;...",shape=box];
	3704351 -> ForLoop3733908;
	3708488 [label="3708488  int j;...",shape=box];
	3715838 [label="3715838  int j;...",shape=box];
	ForLoop3735132 [label="ForLoop3735132  for (i=(min(nx-1,ii+255))-(((min(nx-1,ii+255))-(it)+1)%21)+1; i<=min(nx-1,ii+255); i=i+1) {...",shape=box];
	ForLoop3735132 -> 3848918;
	ForLoop3735132 -> _JOIN_3735132;
	_JOIN_3417479 [label="_JOIN_3417479None...",shape=box];
	_JOIN_3417479 -> 3417751;
	_JOIN_3714786 [label="_JOIN_3714786None...",shape=box];
	_JOIN_3714786 -> 3714788;
	_JOIN_3711584 [label="_JOIN_3711584None...",shape=box];
	_JOIN_3711584 -> 3917428;
	ForLoop3735136 [label="ForLoop3735136  for (iii=0; iii<=nx-1; iii=iii+2048) {...",shape=box];
	ForLoop3735136 -> ForLoop3735135;
	ForLoop3735136 -> _JOIN_3735136;
	3707480 [label="3707480  scv_59=scv_59+A[(i+3)*ny+j]*x[j];...",shape=box];
	ForLoop3711636 [label="ForLoop3711636  for (j=cbv_24; j<=cbv_25; j=j+1) {...",shape=box];
	ForLoop3711636 -> 3711635;
	ForLoop3711636 -> _JOIN_3711636;
	3708485 [label="3708485  scv_59=scv_59+A[(i+3)*ny+j]*x[j];...",shape=box];
	3708485 -> _JOIN_3708486;
	3715835 [label="3715835  scv_58=scv_58+A[(i+10)*ny+j]*x[j];...",shape=box];
	3715835 -> _JOIN_3715836;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest21.exe __orio_perftest21.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest21.exe  
{'[5, 0, 1, 6, 0, 4, 1, 1, 17, 20, 28, 0, 1, 0, 1, 1, 1, 1]' : 0.0905988}
{'[5, 0, 1, 6, 0, 4, 1, 1, 17, 20, 28, 0, 1, 0, 1, 1, 1, 1]' : 0.090282}
{'[5, 0, 1, 6, 0, 4, 1, 1, 17, 20, 28, 0, 1, 0, 1, 1, 1, 1]' : 0.0903931}
{'[5, 0, 1, 6, 0, 4, 1, 1, 17, 20, 28, 0, 1, 0, 1, 1, 1, 1]' : 0.0903411}
{'[5, 0, 1, 6, 0, 4, 1, 1, 17, 20, 28, 0, 1, 0, 1, 1, 1, 1]' : 0.090204}
{'[5, 0, 1, 6, 0, 4, 1, 1, 17, 20, 28, 0, 1, 0, 1, 1, 1, 1]' : 0.0903649}
{'[5, 0, 1, 6, 0, 4, 1, 1, 17, 20, 28, 0, 1, 0, 1, 1, 1, 1]' : 0.0903099}
{'[5, 0, 1, 6, 0, 4, 1, 1, 17, 20, 28, 0, 1, 0, 1, 1, 1, 1]' : 0.0903268}
{'[5, 0, 1, 6, 0, 4, 1, 1, 17, 20, 28, 0, 1, 0, 1, 1, 1, 1]' : 0.0905042}
{'[5, 0, 1, 6, 0, 4, 1, 1, 17, 20, 28, 0, 1, 0, 1, 1, 1, 1]' : 0.09024}
{'[5, 0, 1, 6, 0, 4, 1, 1, 17, 20, 28, 0, 1, 0, 1, 1, 1, 1]' : 0.0902479}
{'[5, 0, 1, 6, 0, 4, 1, 1, 17, 20, 28, 0, 1, 0, 1, 1, 1, 1]' : 0.0902362}
{'[5, 0, 1, 6, 0, 4, 1, 1, 17, 20, 28, 0, 1, 0, 1, 1, 1, 1]' : 0.0903649}
{'[5, 0, 1, 6, 0, 4, 1, 1, 17, 20, 28, 0, 1, 0, 1, 1, 1, 1]' : 0.090297}
{'[5, 0, 1, 6, 0, 4, 1, 1, 17, 20, 28, 0, 1, 0, 1, 1, 1, 1]' : 0.0903971}
{'[5, 0, 1, 6, 0, 4, 1, 1, 17, 20, 28, 0, 1, 0, 1, 1, 1, 1]' : 0.0902789}
{'[5, 0, 1, 6, 0, 4, 1, 1, 17, 20, 28, 0, 1, 0, 1, 1, 1, 1]' : 0.090297}
{'[5, 0, 1, 6, 0, 4, 1, 1, 17, 20, 28, 0, 1, 0, 1, 1, 1, 1]' : 0.0902741}
{'[5, 0, 1, 6, 0, 4, 1, 1, 17, 20, 28, 0, 1, 0, 1, 1, 1, 1]' : 0.09039}
{'[5, 0, 1, 6, 0, 4, 1, 1, 17, 20, 28, 0, 1, 0, 1, 1, 1, 1]' : 0.090251}
{'[5, 0, 1, 6, 0, 4, 1, 1, 17, 20, 28, 0, 1, 0, 1, 1, 1, 1]' : 0.0902982}
{'[5, 0, 1, 6, 0, 4, 1, 1, 17, 20, 28, 0, 1, 0, 1, 1, 1, 1]' : 0.0904288}
{'[5, 0, 1, 6, 0, 4, 1, 1, 17, 20, 28, 0, 1, 0, 1, 1, 1, 1]' : 0.0902472}
{'[5, 0, 1, 6, 0, 4, 1, 1, 17, 20, 28, 0, 1, 0, 1, 1, 1, 1]' : 0.120345}
{'[5, 0, 1, 6, 0, 4, 1, 1, 17, 20, 28, 0, 1, 0, 1, 1, 1, 1]' : 0.107581}
{'[5, 0, 1, 6, 0, 4, 1, 1, 17, 20, 28, 0, 1, 0, 1, 1, 1, 1]' : 0.092401}
{'[5, 0, 1, 6, 0, 4, 1, 1, 17, 20, 28, 0, 1, 0, 1, 1, 1, 1]' : 0.090224}
{'[5, 0, 1, 6, 0, 4, 1, 1, 17, 20, 28, 0, 1, 0, 1, 1, 1, 1]' : 0.090317}
{'[5, 0, 1, 6, 0, 4, 1, 1, 17, 20, 28, 0, 1, 0, 1, 1, 1, 1]' : 0.0902021}
{'[5, 0, 1, 6, 0, 4, 1, 1, 17, 20, 28, 0, 1, 0, 1, 1, 1, 1]' : 0.090265}

out:
 ["{'[5, 0, 1, 6, 0, 4, 1, 1, 17, 20, 28, 0, 1, 0, 1, 1, 1, 1]' : 0.0905988}", "{'[5, 0, 1, 6, 0, 4, 1, 1, 17, 20, 28, 0, 1, 0, 1, 1, 1, 1]' : 0.090282}", "{'[5, 0, 1, 6, 0, 4, 1, 1, 17, 20, 28, 0, 1, 0, 1, 1, 1, 1]' : 0.0903931}", "{'[5, 0, 1, 6, 0, 4, 1, 1, 17, 20, 28, 0, 1, 0, 1, 1, 1, 1]' : 0.0903411}", "{'[5, 0, 1, 6, 0, 4, 1, 1, 17, 20, 28, 0, 1, 0, 1, 1, 1, 1]' : 0.090204}", "{'[5, 0, 1, 6, 0, 4, 1, 1, 17, 20, 28, 0, 1, 0, 1, 1, 1, 1]' : 0.0903649}", "{'[5, 0, 1, 6, 0, 4, 1, 1, 17, 20, 28, 0, 1, 0, 1, 1, 1, 1]' : 0.0903099}", "{'[5, 0, 1, 6, 0, 4, 1, 1, 17, 20, 28, 0, 1, 0, 1, 1, 1, 1]' : 0.0903268}", "{'[5, 0, 1, 6, 0, 4, 1, 1, 17, 20, 28, 0, 1, 0, 1, 1, 1, 1]' : 0.0905042}", "{'[5, 0, 1, 6, 0, 4, 1, 1, 17, 20, 28, 0, 1, 0, 1, 1, 1, 1]' : 0.09024}", "{'[5, 0, 1, 6, 0, 4, 1, 1, 17, 20, 28, 0, 1, 0, 1, 1, 1, 1]' : 0.0902479}", "{'[5, 0, 1, 6, 0, 4, 1, 1, 17, 20, 28, 0, 1, 0, 1, 1, 1, 1]' : 0.0902362}", "{'[5, 0, 1, 6, 0, 4, 1, 1, 17, 20, 28, 0, 1, 0, 1, 1, 1, 1]' : 0.0903649}", "{'[5, 0, 1, 6, 0, 4, 1, 1, 17, 20, 28, 0, 1, 0, 1, 1, 1, 1]' : 0.090297}", "{'[5, 0, 1, 6, 0, 4, 1, 1, 17, 20, 28, 0, 1, 0, 1, 1, 1, 1]' : 0.0903971}", "{'[5, 0, 1, 6, 0, 4, 1, 1, 17, 20, 28, 0, 1, 0, 1, 1, 1, 1]' : 0.0902789}", "{'[5, 0, 1, 6, 0, 4, 1, 1, 17, 20, 28, 0, 1, 0, 1, 1, 1, 1]' : 0.090297}", "{'[5, 0, 1, 6, 0, 4, 1, 1, 17, 20, 28, 0, 1, 0, 1, 1, 1, 1]' : 0.0902741}", "{'[5, 0, 1, 6, 0, 4, 1, 1, 17, 20, 28, 0, 1, 0, 1, 1, 1, 1]' : 0.09039}", "{'[5, 0, 1, 6, 0, 4, 1, 1, 17, 20, 28, 0, 1, 0, 1, 1, 1, 1]' : 0.090251}", "{'[5, 0, 1, 6, 0, 4, 1, 1, 17, 20, 28, 0, 1, 0, 1, 1, 1, 1]' : 0.0902982}", "{'[5, 0, 1, 6, 0, 4, 1, 1, 17, 20, 28, 0, 1, 0, 1, 1, 1, 1]' : 0.0904288}", "{'[5, 0, 1, 6, 0, 4, 1, 1, 17, 20, 28, 0, 1, 0, 1, 1, 1, 1]' : 0.0902472}", "{'[5, 0, 1, 6, 0, 4, 1, 1, 17, 20, 28, 0, 1, 0, 1, 1, 1, 1]' : 0.120345}", "{'[5, 0, 1, 6, 0, 4, 1, 1, 17, 20, 28, 0, 1, 0, 1, 1, 1, 1]' : 0.107581}", "{'[5, 0, 1, 6, 0, 4, 1, 1, 17, 20, 28, 0, 1, 0, 1, 1, 1, 1]' : 0.092401}", "{'[5, 0, 1, 6, 0, 4, 1, 1, 17, 20, 28, 0, 1, 0, 1, 1, 1, 1]' : 0.090224}", "{'[5, 0, 1, 6, 0, 4, 1, 1, 17, 20, 28, 0, 1, 0, 1, 1, 1, 1]' : 0.090317}", "{'[5, 0, 1, 6, 0, 4, 1, 1, 17, 20, 28, 0, 1, 0, 1, 1, 1, 1]' : 0.0902021}", "{'[5, 0, 1, 6, 0, 4, 1, 1, 17, 20, 28, 0, 1, 0, 1, 1, 1, 1]' : 0.090265}"]
returning from 'run': {'[5, 0, 1, 6, 0, 4, 1, 1, 17, 20, 28, 0, 1, 0, 1, 1, 1, 1]': ([0.0905988, 0.090282, 0.0903931, 0.0903411, 0.090204, 0.0903649, 0.0903099, 0.0903268, 0.0905042, 0.09024, 0.0902479, 0.0902362, 0.0903649, 0.090297, 0.0903971, 0.0902789, 0.090297, 0.0902741, 0.09039, 0.090251, 0.0902982, 0.0904288, 0.0902472, 0.120345, 0.107581, 0.092401, 0.090224, 0.090317, 0.0902021, 0.090265], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.0905988, 0.090282, 0.0903931, 0.0903411, 0.090204, 0.0903649, 0.0903099, 0.0903268, 0.0905042, 0.09024, 0.0902479, 0.0902362, 0.0903649, 0.090297, 0.0903971, 0.0902789, 0.090297, 0.0902741, 0.09039, 0.090251, 0.0902982, 0.0904288, 0.0902472, 0.120345, 0.107581, 0.092401, 0.090224, 0.090317, 0.0902021, 0.090265], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[5, 0, 1, 6, 0, 4, 1, 1, 17, 20, 28, 0, 1, 0, 1, 1, 1, 1]': ([0.0905988, 0.090282, 0.0903931, 0.0903411, 0.090204, 0.0903649, 0.0903099, 0.0903268, 0.0905042, 0.09024, 0.0902479, 0.0902362, 0.0903649, 0.090297, 0.0903971, 0.0902789, 0.090297, 0.0902741, 0.09039, 0.090251, 0.0902982, 0.0904288, 0.0902472, 0.120345, 0.107581, 0.092401, 0.090224, 0.090317, 0.0902021, 0.090265], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [1, 4, 5, 6, 3, 0, 1, 1, 10, 0, 28, 28, 0, 1, 1, 0, 0, 1]
Fixed Factors: {}
Testing candidate 22: [1, 4, 5, 6, 3, 0, 1, 1, 10, 0, 28, 28, 0, 1, 1, 0, 0, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	6
        Additions: 		143
        Multiplications: 	32
        Divisions: 		0
        Logical: 		0
        Reads: 			312
        Writes: 		60
        Comparisons:		13
        Gotos: 			0
        
digraph CFG {
	_JOIN_3939252 [label="_JOIN_3939252None...",shape=box];
	_JOIN_3939252 -> _JOIN_3936824;
	3933076 [label="3933076  int i;...",shape=box];
	3933076 -> ForLoop3933375;
	3936716 [label="3936716  tmp[i]=0;...",shape=box];
	3936716 -> ForLoop3937674;
	3941232 [label="3941232  for (k=kk; k<=min(ny-1,kk+255); k=k+1) ...",shape=box];
	3941232 -> _JOIN_3939252;
	ForLoop3936824 [label="ForLoop3936824  for (i=ii; i<=min(nx-1,ii+15); i=i+1) {...",shape=box];
	ForLoop3936824 -> 3936716;
	ForLoop3936824 -> _JOIN_3936824;
	ForLoop3936825 [label="ForLoop3936825  for (ii=iii; ii<=min(nx-1,iii+2032); ii=ii+16) ...",shape=box];
	ForLoop3936825 -> ForLoop3936824;
	ForLoop3936825 -> _JOIN_3936825;
	ForLoop3936826 [label="ForLoop3936826  for (iii=0; iii<=nx-1; iii=iii+2048) ...",shape=box];
	ForLoop3936826 -> ForLoop3936825;
	ForLoop3936826 -> _JOIN_3936826;
	_JOIN_3945581 [label="_JOIN_3945581None...",shape=box];
	_JOIN_3945581 -> _JOIN_3937673;
	3943116 [label="3943116  for (j=jj; j<=min(ny-1,jj+127); j=j+1) ...",shape=box];
	3945651 [label="3945651  tmp[i]=tmp[i]+A[i*ny+jt]*x_copy[(jt-jj)];...",shape=box];
	3946209 [label="3946209  y_copy[(kt-kk)]=y_copy[(kt-kk)]+A[i*ny+kt]*tmp[i];...",shape=box];
	ForLoop3939252 [label="ForLoop3939252  for (kk=0; kk<=ny-1; kk=kk+256) {...",shape=box];
	ForLoop3939252 -> 3941190;
	ForLoop3939252 -> _JOIN_3939252;
	3933443 [label="3933443  y[i]=0.0;...",shape=box];
	3933443 -> _JOIN_3933444;
	_JOIN_3933375 [label="_JOIN_3933375None...",shape=box];
	_JOIN_3933375 -> ForLoop3933444;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 3933076;
	ForLoop3946133 [label="ForLoop3946133  for (kt=kk; kt<=cbv_2; kt=kt+8) {...",shape=box];
	ForLoop3946133 -> 3946209;
	ForLoop3946133 -> _JOIN_3946133;
	_JOIN_3933444 [label="_JOIN_3933444None...",shape=box];
	_JOIN_3933444 -> 3943064;
	3933283 [label="3933283  y[i]=0.0;...",shape=box];
	3941190 [label="3941190  for (k=kk; k<=min(ny-1,kk+255); k=k+1) ...",shape=box];
	_JOIN_3937673 [label="_JOIN_3937673None...",shape=box];
	_JOIN_3937673 -> _JOIN_3937674;
	_JOIN_3937674 [label="_JOIN_3937674None...",shape=box];
	_JOIN_3937674 -> ForLoop3939252;
	3943064 [label="3943064  double x_copy[128];...",shape=box];
	ForLoop3933375 [label="ForLoop3933375  for (i=0; i<=ny-11; i=i+11) {...",shape=box];
	ForLoop3933375 -> 3933283;
	ForLoop3933375 -> _JOIN_3933375;
	_JOIN_3946133 [label="_JOIN_3946133None...",shape=box];
	_JOIN_3946133 -> 3941232;
	ForLoop3937674 [label="ForLoop3937674  for (jjj=0; jjj<=ny-1; jjj=jjj+256) ...",shape=box];
	ForLoop3937674 -> ForLoop3937673;
	ForLoop3937674 -> _JOIN_3937674;
	ForLoop3937673 [label="ForLoop3937673  for (jj=jjj; jj<=min(ny-1,jjj+128); jj=jj+128) {...",shape=box];
	ForLoop3937673 -> 3943116;
	ForLoop3937673 -> _JOIN_3937673;
	_JOIN_3936824 [label="_JOIN_3936824None...",shape=box];
	_JOIN_3936824 -> _JOIN_3936825;
	_JOIN_3936825 [label="_JOIN_3936825None...",shape=box];
	_JOIN_3936825 -> _JOIN_3936826;
	_JOIN_3936826 [label="_JOIN_3936826None...",shape=box];
	ForLoop3945581 [label="ForLoop3945581  for (jt=jj; jt<=cbv_1; jt=jt+8) {...",shape=boxexpected=9369846271501.798828
actual=9369846271501.798828
];
	ForLoop3945581 -> 3945651;
	ForLoop3945581 -> _JOIN_3945581;
	ForLoop3933444 [label="ForLoop3933444  for (i=ny-((ny-(0))%11); i<=ny-1; i=i+1) ...",shape=box];
	ForLoop3933444 -> 3933443;
	ForLoop3933444 -> _JOIN_3933444;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest22.exe __orio_perftest22.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest22.exe  
{'[1, 4, 5, 6, 3, 0, 1, 1, 10, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.173795}
{'[1, 4, 5, 6, 3, 0, 1, 1, 10, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.173802}
{'[1, 4, 5, 6, 3, 0, 1, 1, 10, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.173842}
{'[1, 4, 5, 6, 3, 0, 1, 1, 10, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.173809}
{'[1, 4, 5, 6, 3, 0, 1, 1, 10, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.174772}
{'[1, 4, 5, 6, 3, 0, 1, 1, 10, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.173969}
{'[1, 4, 5, 6, 3, 0, 1, 1, 10, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.17377}
{'[1, 4, 5, 6, 3, 0, 1, 1, 10, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.173732}
{'[1, 4, 5, 6, 3, 0, 1, 1, 10, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.17384}
{'[1, 4, 5, 6, 3, 0, 1, 1, 10, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.173776}
{'[1, 4, 5, 6, 3, 0, 1, 1, 10, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.173928}
{'[1, 4, 5, 6, 3, 0, 1, 1, 10, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.173989}
{'[1, 4, 5, 6, 3, 0, 1, 1, 10, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.173791}
{'[1, 4, 5, 6, 3, 0, 1, 1, 10, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.173745}
{'[1, 4, 5, 6, 3, 0, 1, 1, 10, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.173975}
{'[1, 4, 5, 6, 3, 0, 1, 1, 10, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.173738}
{'[1, 4, 5, 6, 3, 0, 1, 1, 10, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.174793}
{'[1, 4, 5, 6, 3, 0, 1, 1, 10, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.173912}
{'[1, 4, 5, 6, 3, 0, 1, 1, 10, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.17377}
{'[1, 4, 5, 6, 3, 0, 1, 1, 10, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.173753}
{'[1, 4, 5, 6, 3, 0, 1, 1, 10, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.173734}
{'[1, 4, 5, 6, 3, 0, 1, 1, 10, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.1738}
{'[1, 4, 5, 6, 3, 0, 1, 1, 10, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.173782}
{'[1, 4, 5, 6, 3, 0, 1, 1, 10, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.173811}
{'[1, 4, 5, 6, 3, 0, 1, 1, 10, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.17376}
{'[1, 4, 5, 6, 3, 0, 1, 1, 10, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.173842}
{'[1, 4, 5, 6, 3, 0, 1, 1, 10, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.17401}
{'[1, 4, 5, 6, 3, 0, 1, 1, 10, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.174864}
{'[1, 4, 5, 6, 3, 0, 1, 1, 10, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.173896}
{'[1, 4, 5, 6, 3, 0, 1, 1, 10, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.173783}

out:
 ["{'[1, 4, 5, 6, 3, 0, 1, 1, 10, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.173795}", "{'[1, 4, 5, 6, 3, 0, 1, 1, 10, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.173802}", "{'[1, 4, 5, 6, 3, 0, 1, 1, 10, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.173842}", "{'[1, 4, 5, 6, 3, 0, 1, 1, 10, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.173809}", "{'[1, 4, 5, 6, 3, 0, 1, 1, 10, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.174772}", "{'[1, 4, 5, 6, 3, 0, 1, 1, 10, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.173969}", "{'[1, 4, 5, 6, 3, 0, 1, 1, 10, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.17377}", "{'[1, 4, 5, 6, 3, 0, 1, 1, 10, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.173732}", "{'[1, 4, 5, 6, 3, 0, 1, 1, 10, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.17384}", "{'[1, 4, 5, 6, 3, 0, 1, 1, 10, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.173776}", "{'[1, 4, 5, 6, 3, 0, 1, 1, 10, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.173928}", "{'[1, 4, 5, 6, 3, 0, 1, 1, 10, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.173989}", "{'[1, 4, 5, 6, 3, 0, 1, 1, 10, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.173791}", "{'[1, 4, 5, 6, 3, 0, 1, 1, 10, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.173745}", "{'[1, 4, 5, 6, 3, 0, 1, 1, 10, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.173975}", "{'[1, 4, 5, 6, 3, 0, 1, 1, 10, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.173738}", "{'[1, 4, 5, 6, 3, 0, 1, 1, 10, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.174793}", "{'[1, 4, 5, 6, 3, 0, 1, 1, 10, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.173912}", "{'[1, 4, 5, 6, 3, 0, 1, 1, 10, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.17377}", "{'[1, 4, 5, 6, 3, 0, 1, 1, 10, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.17375WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = kkk
3}", "{'[1, 4, 5, 6, 3, 0, 1, 1, 10, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.173734}", "{'[1, 4, 5, 6, 3, 0, 1, 1, 10, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.1738}", "{'[1, 4, 5, 6, 3, 0, 1, 1, 10, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.173782}", "{'[1, 4, 5, 6, 3, 0, 1, 1, 10, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.173811}", "{'[1, 4, 5, 6, 3, 0, 1, 1, 10, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.17376}", "{'[1, 4, 5, 6, 3, 0, 1, 1, 10, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.173842}", "{'[1, 4, 5, 6, 3, 0, 1, 1, 10, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.17401}", "{'[1, 4, 5, 6, 3, 0, 1, 1, 10, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.174864}", "{'[1, 4, 5, 6, 3, 0, 1, 1, 10, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.173896}", "{'[1, 4, 5, 6, 3, 0, 1, 1, 10, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.173783}"]
returning from 'run': {'[1, 4, 5, 6, 3, 0, 1, 1, 10, 0, 28, 28, 0, 1, 1, 0, 0, 1]': ([0.173795, 0.173802, 0.173842, 0.173809, 0.174772, 0.173969, 0.17377, 0.173732, 0.17384, 0.173776, 0.173928, 0.173989, 0.173791, 0.173745, 0.173975, 0.173738, 0.174793, 0.173912, 0.17377, 0.173753, 0.173734, 0.1738, 0.173782, 0.173811, 0.17376, 0.173842, 0.17401, 0.174864, 0.173896, 0.173783], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.173795, 0.173802, 0.173842, 0.173809, 0.174772, 0.173969, 0.17377, 0.173732, 0.17384, 0.173776, 0.173928, 0.173989, 0.173791, 0.173745, 0.173975, 0.173738, 0.174793, 0.173912, 0.17377, 0.173753, 0.173734, 0.1738, 0.173782, 0.173811, 0.17376, 0.173842, 0.17401, 0.174864, 0.173896, 0.173783], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[1, 4, 5, 6, 3, 0, 1, 1, 10, 0, 28, 28, 0, 1, 1, 0, 0, 1]': ([0.173795, 0.173802, 0.173842, 0.173809, 0.174772, 0.173969, 0.17377, 0.173732, 0.17384, 0.173776, 0.173928, 0.173989, 0.173791, 0.173745, 0.173975, 0.173738, 0.174793, 0.173912, 0.17377, 0.173753, 0.173734, 0.1738, 0.173782, 0.173811, 0.17376, 0.173842, 0.17401, 0.174864, 0.173896, 0.173783], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [0, 0, 5, 6, 3, 3, 1, 1, 2, 0, 7, 24, 2, 0, 0, 0, 1, 1]
Fixed Factors: {}
Testing candidate 23: [0, 0, 5, 6, 3, 3, 1, 1, 2, 0, 7, 24, 2, 0, 0, 0, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	23
        Max loop nest depth: 	4
        Additions: 		9724
        Multiplications: 	2310
        Divisions: 		0
        Logical: 		0
        Reads: 			13800
        Writes: 		1228
        Comparisons:		23
        Gotos: 			0
        
digraph CFG {
	_JOIN_4024314 [label="_JOIN_4024314None...",shape=box];
	_JOIN_4024314 -> 4251721;
	4193404 [label="4193404  tmp[i]=tmp[i]+A[i*ny+j]*x_copy[(j-jjj)];...",shape=box];
	_JOIN_4196420 [label="_JOIN_4196420None...",shape=box];
	_JOIN_4196420 -> 4284228;
	_JOIN_3966026 [label="_JOIN_3966026None...",shape=box];
	_JOIN_3966026 -> ForLoop3966148;
	ForLoop4196420 [label="ForLoop4196420  for (k=kk; k<=cbv_10; k=k+25) {...",shape=box];
	ForLoop4196420 -> 4195650;
	ForLoop4196420 -> _JOIN_4196420;
	4251721 [label="4251721  register int cbv_2, cbv_3;...",shape=box];
	3966218 [label="3966218  for (j=jjj; j<=min(ny-1,jjj+255); j=j+1) ...",shape=box];
	_JOIN_3958261 [label="_JOIN_3958261None...",shape=box];
	_JOIN_3958261 -> 3958398;
	_JOIN_4193595 [label="_JOIN_4193595None...",shape=box];
	_JOIN_4193595 -> 4283283;
	4193723 [label="4193723  tmp[i]=tmp[i]+A[i*ny+j]*x_copy[(j-jjj)];...",shape=box];
	4193723 -> _JOIN_4193724;
	ForLoop4119146 [label="ForLoop4119146  for (k=kk; k<=cbv_4; k=k+25) {...",shape=box];
	ForLoop4119146 -> 4089112;
	ForLoop4119146 -> _JOIN_4119146;
	ForLoop4025436 [label="ForLoop4025436  for (j=cbv_2; j<=cbv_3; j=j+1) {...",shape=box];
	ForLoop4025436 -> 4024442;
	ForLoop4025436 -> _JOIN_4025436;
	_JOIN_3966384 [label="_JOIN_3966384None...",shape=box];
	_JOIN_3966384 -> _JOIN_3966386;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 3958154;
	3966174 [label="3966174  tmp[i]=0;...",shape=box];
	3966174 -> ForLoop3966262;
	4196551 [label="4196551  y_copy[(k-kk)]=y_copy[(k-kk)]+A[i*ny+k]*tmp[i];...",shape=box];
	4196551 -> _JOIN_4196552;
	ForLoop4024314 [label="ForLoop4024314  for (j=jjj; j<=cbv_1; j=j+8) {...",shape=box];
	ForLoop4024314 -> 4015319;
	ForLoop4024314 -> _JOIN_4024314;
	ForLoop3966262 [label="ForLoop3966262  for (jjj=0; jjj<=ny-1; jjj=jjj+256) {...",shape=box];
	ForLoop3966262 -> 3966218;
	ForLoop3966262 -> _JOIN_3966262;
	_JOIN_3966150 [label="_JOIN_3966150None...",shape=box];
	_JOIN_3966150 -> ForLoop3966386;
	4119277 [label="4119277  y_copy[(k-kk)]=y_copy[(k-kk)]+A[it*ny+k]*tmp[it];...",shape=box];
	ForLoop4193595 [label="ForLoop4193595  for (j=jjj; j<=cbv_7; j=j+8) {...",shape=box];
	ForLoop4193595 -> 4193404;
	ForLoop4193595 -> _JOIN_4193595;
	3966397 [label="3966397  tmp[it]=0;...",shape=box];
	3966397 -> ForLoop3966026;
	3966070 [label="3966070  for (k=kk; k<=min(ny-1,kk+255); k=k+1) ...",shape=box];
	ForLoop4120271 [label="ForLoop4120271  for (k=cbv_5; k<=cbv_6; k=k+1) {...",shape=box];
	ForLoop4120271 -> 4119277;
	ForLoop4120271 -> _JOIN_4120271;
	ForLoop3966148 [label="ForLoop3966148  for (kk=0; kk<=ny-1; kk=kk+256) {...",shape=box];
	ForLoop3966148 -> 3966070;
	ForLoop3966148 -> _JOIN_3966148;
	3958398 [label="3958398  register int cbv_2, cbv_3;...",shape=box];
	4024442 [label="4024442  tmp[it]=tmp[it]+A[it*ny+j]*x_copy[(j-jjj)];...",shape=box];
	ForLoop3958261 [label="ForLoop3958261  for (i=0; i<=cbv_1; i=i+3) {...",shape=box];
	ForLoop3958261 -> 3958241;
	ForLoop3958261 -> _JOIN_3958261;
	4015319 [label="4015319  tmp[it]=tmp[it]+A[it*ny+j]*x_copy[(j-jjj)];...",shape=box];
	3966146 [label="3966146  for (k=kk; k<=min(ny-1,kk+255); k=k+1) ...",shape=box];
	3966146 -> _JOIN_3966148;
	_JOIN_4119146 [label="_JOIN_4119146None...",shape=box];
	_JOIN_4119146 -> 4282923;
	ForLoop3966026 [label="ForLoop3966026  for (jjj=0; jjj<=ny-1; jjj=jjj+256) {...",shape=box];
	ForLoop3966026 -> 3965982;
	ForLoop3966026 -> _JOIN_3966026;
	ForLoop4193724 [label="ForLoop4193724  for (j=cbv_8; j<=cbv_9; j=j+1) ...",shape=box];
	ForLoop4193724 -> 4193723;
	ForLoop4193724 -> _JOIN_4193724;
	3966306 [label="3966306  for (k=kk; k<=min(ny-1,kk+255); k=k+1) ...",shape=box];
	_JOIN_4196552 [label="_JOIN_4196552None...",shape=box];
	_JOIN_4196552 -> 3966382;
	ForLoop3966384 [label="ForLoop3966384  for (kk=0; kk<=ny-1; kk=kk+256) {...",shape=box];
	ForLoop3966384 -> 3966306;
	ForLoop3966384 -> _JOIN_3966384;
	ForLoop3960417 [label="ForLoop3960417  for (iii=0; iii<=nx-1; iii=iii+2048) {...",shape=box];
	ForLoop3960417 -> ForLoop3966150;
	ForLoop3960417 -> _JOIN_3960417;
	ForLoop3966386 [label="ForLoop3966386  for (i=it; i<=min(nx-1,iii+2047); i=i+1) {...",shape=box];
	ForLoop3966386 -> 3966174;
	ForLoop3966386 -> _JOIN_3966386;
	3964213 [label="3964213  double x_copy[256];...",shape=box];
	4282923 [label="4282923  register int cbv_5, cbv_6;...",shape=box];
	_JOIN_3958330 [label="_JOIN_3958330None...",shape=box];
	_JOIN_3958330 -> 3964213;
	4284228 [label="4284228  register int cbv_11, cbv_12;...",shape=box];
	ForLoop3966150 [label="ForLoop3966150  for (it=iii; it<=min(nx-1,iii+2047)-31; it=it+32) {...",shape=box];
	ForLoop3966150 -> 3966397;
	ForLoop3966150 -> _JOIN_3966150;
	ForLoop4196552 [label="ForLoop4196552  for (k=cbv_11; k<=cbv_12; k=k+1) ...",shape=box];
	ForLoop4196552 -> 4196551;
	ForLoop4196552 -> _JOIN_4196552;
	4195650 [label="4195650  y_copy[(k-kk)]=y_copy[(k-kk)]+A[i*ny+k]*tmp[i];...",shape=box];
	_JOIN_3966386 [label="_JOIN_3966386None...",shape=box];
	_JOIN_3966386 -> _JOIN_3960417;
	_JOIN_3966148 [label="_JOIN_3966148None...",shape=box];
	_JOIN_3966148 -> _JOIN_3966150;
	_JOIN_4120271 [label="_JOIN_4120271None...",shape=box];
	_JOIN_4120271 -> 3966146;
	3966382 [label="3966382  for (k=kk; k<=min(ny-1,kk+255); k=k+1) ...",shape=box];
	3966382 -> _JOIN_3966384;
	4089112 [label="4089112  y_copy[(k-kk)]=y_copy[(k-kk)]+A[it*ny+k]*tmp[it];...",shape=box];
	_JOIN_3960417 [label="_expected=9369846271501.798828
actual=9369846271501.798828
JOIN_3960417None...",shape=box];
	3965982 [label="3965982  for (j=jjj; j<=min(ny-1,jjj+255); j=j+1) ...",shape=box];
	4283283 [label="4283283  register int cbv_8, cbv_9;...",shape=box];
	ForLoop3958330 [label="ForLoop3958330  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop3958330 -> 3958329;
	ForLoop3958330 -> _JOIN_3958330;
	3958241 [label="3958241  y[i]=0.0;...",shape=box];
	_JOIN_4193724 [label="_JOIN_4193724None...",shape=box];
	_JOIN_4193724 -> _JOIN_3966262;
	3958154 [label="3958154  int i;...",shape=box];
	_JOIN_4025436 [label="_JOIN_4025436None...",shape=box];
	_JOIN_4025436 -> _JOIN_3966026;
	_JOIN_3966262 [label="_JOIN_3966262None...",shape=box];
	_JOIN_3966262 -> ForLoop3966384;
	3958329 [label="3958329  y[i]=0.0;...",shape=box];
	3958329 -> _JOIN_3958330;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest23.exe __orio_perftest23.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest23.exe  
{'[0, 0, 5, 6, 3, 3, 1, 1, 2, 0, 7, 24, 2, 0, 0, 0, 1, 1]' : 0.242763}
{'[0, 0, 5, 6, 3, 3, 1, 1, 2, 0, 7, 24, 2, 0, 0, 0, 1, 1]' : 0.242266}
{'[0, 0, 5, 6, 3, 3, 1, 1, 2, 0, 7, 24, 2, 0, 0, 0, 1, 1]' : 0.242287}
{'[0, 0, 5, 6, 3, 3, 1, 1, 2, 0, 7, 24, 2, 0, 0, 0, 1, 1]' : 0.24235}
{'[0, 0, 5, 6, 3, 3, 1, 1, 2, 0, 7, 24, 2, 0, 0, 0, 1, 1]' : 0.242323}
{'[0, 0, 5, 6, 3, 3, 1, 1, 2, 0, 7, 24, 2, 0, 0, 0, 1, 1]' : 0.242369}
{'[0, 0, 5, 6, 3, 3, 1, 1, 2, 0, 7, 24, 2, 0, 0, 0, 1, 1]' : 0.242489}
{'[0, 0, 5, 6, 3, 3, 1, 1, 2, 0, 7, 24, 2, 0, 0, 0, 1, 1]' : 0.242233}
{'[0, 0, 5, 6, 3, 3, 1, 1, 2, 0, 7, 24, 2, 0, 0, 0, 1, 1]' : 0.242308}
{'[0, 0, 5, 6, 3, 3, 1, 1, 2, 0, 7, 24, 2, 0, 0, 0, 1, 1]' : 0.242368}
{'[0, 0, 5, 6, 3, 3, 1, 1, 2, 0, 7, 24, 2, 0, 0, 0, 1, 1]' : 0.242237}
{'[0, 0, 5, 6, 3, 3, 1, 1, 2, 0, 7, 24, 2, 0, 0, 0, 1, 1]' : 0.242212}
{'[0, 0, 5, 6, 3, 3, 1, 1, 2, 0, 7, 24, 2, 0, 0, 0, 1, 1]' : 0.244234}
{'[0, 0, 5, 6, 3, 3, 1, 1, 2, 0, 7, 24, 2, 0, 0, 0, 1, 1]' : 0.242365}
{'[0, 0, 5, 6, 3, 3, 1, 1, 2, 0, 7, 24, 2, 0, 0, 0, 1, 1]' : 0.242053}
{'[0, 0, 5, 6, 3, 3, 1, 1, 2, 0, 7, 24, 2, 0, 0, 0, 1, 1]' : 0.242364}
{'[0, 0, 5, 6, 3, 3, 1, 1, 2, 0, 7, 24, 2, 0, 0, 0, 1, 1]' : 0.242213}
{'[0, 0, 5, 6, 3, 3, 1, 1, 2, 0, 7, 24, 2, 0, 0, 0, 1, 1]' : 0.242175}
{'[0, 0, 5, 6, 3, 3, 1, 1, 2, 0, 7, 24, 2, 0, 0, 0, 1, 1]' : 0.242502}
{'[0, 0, 5, 6, 3, 3, 1, 1, 2, 0, 7, 24, 2, 0, 0, 0, 1, 1]' : 0.242401}
{'[0, 0, 5, 6, 3, 3, 1, 1, 2, 0, 7, 24, 2, 0, 0, 0, 1, 1]' : 0.242228}
{'[0, 0, 5, 6, 3, 3, 1, 1, 2, 0, 7, 24, 2, 0, 0, 0, 1, 1]' : 0.242144}
{'[0, 0, 5, 6, 3, 3, 1, 1, 2, 0, 7, 24, 2, 0, 0, 0, 1, 1]' : 0.24224}
{'[0, 0, 5, 6, 3, 3, 1, 1, 2, 0, 7, 24, 2, 0, 0, 0, 1, 1]' : 0.242382}
{'[0, 0, 5, 6, 3, 3, 1, 1, 2, 0, 7, 24, 2, 0, 0, 0, 1, 1]' : 0.242771}
{'[0, 0, 5, 6, 3, 3, 1, 1, 2, 0, 7, 24, 2, 0, 0, 0, 1, 1]' : 0.242144}
{'[0, 0, 5, 6, 3, 3, 1, 1, 2, 0, 7, 24, 2, 0, 0, 0, 1, 1]' : 0.242118}
{'[0, 0, 5, 6, 3, 3, 1, 1, 2, 0, 7, 24, 2, 0, 0, 0, 1, 1]' : 0.242219}
{'[0, 0, 5, 6, 3, 3, 1, 1, 2, 0, 7, 24, 2, 0, 0, 0, 1, 1]' : 0.242244}
{'[0, 0, 5, 6, 3, 3, 1, 1, 2, 0, 7, 24, 2, 0, 0, 0, 1, 1]' : 0.242235}

out:
 ["{'[0, 0, 5, 6, 3, 3, 1, 1, 2, 0, 7, 24, 2, 0, 0, 0, 1, 1]' : 0.242763}", "{'[0, 0, 5, 6, 3, 3, 1, 1, 2, 0, 7, 24, 2, 0, 0, 0, 1, 1]' : 0.242266}", "{'[0, 0, 5, 6, 3, 3, 1, 1, 2, 0, 7, 24, 2, 0, 0, 0, 1, 1]' : 0.242287}", "{'[0, 0, 5, 6, 3, 3, 1, 1, 2, 0, 7, 24, 2, 0, 0, 0, 1, 1]' : 0.24235}", "{'[0, 0, 5, 6, 3, 3, 1, 1, 2, 0, 7, 24, 2, 0, 0, 0, 1, 1]' : 0.242323}", "{'[0, 0, 5, 6, 3, 3, 1, 1, 2, 0, 7, 24, 2, 0, 0, 0, 1, 1]' : 0.242369}", "{'[0, 0, 5, 6, 3, 3, 1, 1, 2, 0, 7, 24, 2, 0, 0, 0, 1, 1]' : 0.242489}", "{'[0, 0, 5, 6, 3, 3, 1, 1, 2, 0, 7, 24, 2, 0, 0, 0, 1, 1]' : 0.242233}", "{'[0, 0, 5, 6, 3, 3, 1, 1, 2, 0, 7, 24, 2, 0, 0, 0, 1, 1]' : 0.242308}", "{'[0, 0, 5, 6, 3, 3, 1, 1, 2, 0, 7, 24, 2, 0, 0, 0, 1, 1]' : 0.242368}", "{'[0, 0, 5, 6, 3, 3, 1, 1, 2, 0, 7, 24, 2, 0, 0, 0, 1, 1]' : 0.242237}", "{'[0, 0, 5, 6, 3, 3, 1, 1, 2, 0, 7, 24, 2, 0, 0, 0, 1, 1]' : 0.242212}", "{'[0, 0, 5, 6, 3, 3, 1, 1, 2, 0, 7, 24, 2, 0, 0, 0, 1, 1]' : 0.244234}", "{'[0, 0, 5, 6, 3, 3, 1, 1, 2, 0, 7, 24, 2, WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
0, 0, 0, 1, 1]' : 0.242365}", "{'[0, 0, 5, 6, 3, 3, 1, 1, 2, 0, 7, 24, 2, 0, 0, 0, 1, 1]' : 0.242053}", "{'[0, 0, 5, 6, 3, 3, 1, 1, 2, 0, 7, 24, 2, 0, 0, 0, 1, 1]' : 0.242364}", "{'[0, 0, 5, 6, 3, 3, 1, 1, 2, 0, 7, 24, 2, 0, 0, 0, 1, 1]' : 0.242213}", "{'[0, 0, 5, 6, 3, 3, 1, 1, 2, 0, 7, 24, 2, 0, 0, 0, 1, 1]' : 0.242175}", "{'[0, 0, 5, 6, 3, 3, 1, 1, 2, 0, 7, 24, 2, 0, 0, 0, 1, 1]' : 0.242502}", "{'[0, 0, 5, 6, 3, 3, 1, 1, 2, 0, 7, 24, 2, 0, 0, 0, 1, 1]' : 0.242401}", "{'[0, 0, 5, 6, 3, 3, 1, 1, 2, 0, 7, 24, 2, 0, 0, 0, 1, 1]' : 0.242228}", "{'[0, 0, 5, 6, 3, 3, 1, 1, 2, 0, 7, 24, 2, 0, 0, 0, 1, 1]' : 0.242144}", "{'[0, 0, 5, 6, 3, 3, 1, 1, 2, 0, 7, 24, 2, 0, 0, 0, 1, 1]' : 0.24224}", "{'[0, 0, 5, 6, 3, 3, 1, 1, 2, 0, 7, 24, 2, 0, 0, 0, 1, 1]' : 0.242382}", "{'[0, 0, 5, 6, 3, 3, 1, 1, 2, 0, 7, 24, 2, 0, 0, 0, 1, 1]' : 0.242771}", "{'[0, 0, 5, 6, 3, 3, 1, 1, 2, 0, 7, 24, 2, 0, 0, 0, 1, 1]' : 0.242144}", "{'[0, 0, 5, 6, 3, 3, 1, 1, 2, 0, 7, 24, 2, 0, 0, 0, 1, 1]' : 0.242118}", "{'[0, 0, 5, 6, 3, 3, 1, 1, 2, 0, 7, 24, 2, 0, 0, 0, 1, 1]' : 0.242219}", "{'[0, 0, 5, 6, 3, 3, 1, 1, 2, 0, 7, 24, 2, 0, 0, 0, 1, 1]' : 0.242244}", "{'[0, 0, 5, 6, 3, 3, 1, 1, 2, 0, 7, 24, 2, 0, 0, 0, 1, 1]' : 0.242235}"]
returning from 'run': {'[0, 0, 5, 6, 3, 3, 1, 1, 2, 0, 7, 24, 2, 0, 0, 0, 1, 1]': ([0.242763, 0.242266, 0.242287, 0.24235, 0.242323, 0.242369, 0.242489, 0.242233, 0.242308, 0.242368, 0.242237, 0.242212, 0.244234, 0.242365, 0.242053, 0.242364, 0.242213, 0.242175, 0.242502, 0.242401, 0.242228, 0.242144, 0.24224, 0.242382, 0.242771, 0.242144, 0.242118, 0.242219, 0.242244, 0.242235], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.242763, 0.242266, 0.242287, 0.24235, 0.242323, 0.242369, 0.242489, 0.242233, 0.242308, 0.242368, 0.242237, 0.242212, 0.244234, 0.242365, 0.242053, 0.242364, 0.242213, 0.242175, 0.242502, 0.242401, 0.242228, 0.242144, 0.24224, 0.242382, 0.242771, 0.242144, 0.242118, 0.242219, 0.242244, 0.242235], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 5, 6, 3, 3, 1, 1, 2, 0, 7, 24, 2, 0, 0, 0, 1, 1]': ([0.242763, 0.242266, 0.242287, 0.24235, 0.242323, 0.242369, 0.242489, 0.242233, 0.242308, 0.242368, 0.242237, 0.242212, 0.244234, 0.242365, 0.242053, 0.242364, 0.242213, 0.242175, 0.242502, 0.242401, 0.242228, 0.242144, 0.24224, 0.242382, 0.242771, 0.242144, 0.242118, 0.242219, 0.242244, 0.242235], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [3, 6, 4, 1, 5, 3, 1, 1, 0, 28, 4, 0, 0, 2, 0, 1, 1, 0]
Fixed Factors: {}
Testing candidate 24: [3, 6, 4, 1, 5, 3, 1, 1, 0, 28, 4, 0, 0, 2, 0, 1, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	106
        Max loop nest depth: 	5
        Additions: 		4434
        Multiplications: 	1980
        Divisions: 		0
        Logical: 		0
        Reads: 			8536
        Writes: 		1420
        Comparisons:		106
        Gotos: 			0
        
digraph CFG {
	4499302 [label="4499302  for (k=kk; k<=min(ny-1,kk+127); k=k+1) ...",shape=box];
	4499302 -> _JOIN_4499304;
	4499226 [label="4499226  for (k=kk; k<=min(ny-1,kk+127); k=k+1) ...",shape=box];
	4499226 -> ForLoop4499271;
	ForLoop4499163 [label="ForLoop4499163  for (jj=jjj; jj<=min(ny-1,jjj+512); jj=jj+512) {...",shape=box];
	ForLoop4499163 -> 4498217;
	ForLoop4499163 -> _JOIN_4499163;
	_JOIN_4284469 [label="_JOIN_4284469None...",shape=box];
	_JOIN_4284469 -> 4461072;
	4495387 [label="4495387  for (k=kk; k<=min(ny-1,kk+127); k=k+1) ...",shape=box];
	_JOIN_4497197 [label="_JOIN_4497197None...",shape=box];
	_JOIN_4497197 -> 4497228;
	_JOIN_4499305 [label="_JOIN_4499305None...",shape=box];
	_JOIN_4499305 -> 4645265;
	_JOIN_4499304 [label="_JOIN_4499304None...",shape=box];
	_JOIN_4499304 -> _JOIN_4499305;
	4497228 [label="4497228  for (k=kk; k<=min(ny-1,kk+127); k=k+1) ...",shape=box];
	4498217 [label="4498217  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	4498217 -> ForLoop4499161;
	ForLoop4498098 [label="ForLoop4498098  for (kk=kkk; kk<=min(ny-1,kkk+128); kk=kk+128) {...",shape=box];
	ForLoop4498098 -> 4495387;
	ForLoop4498098 -> _JOIN_4498098;
	4284496 [label="4284496  register int cbv_1;...",shape=box];
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 4284496;
	_JOIN_4499309 [label="_JOIN_4499309None...",shape=box];
	_JOIN_4499163 [label="_JOIN_4499163None...",shape=box];
	_JOIN_4499163 -> _JOIN_4499164;
	_JOIN_4499161 [label="_JOIN_4499161None...",shape=box];
	_JOIN_4499161 -> _JOIN_4499163;
	_JOIN_4498098 [label="_JOIN_4498098None...",shape=box];
	_JOIN_4498098 -> _JOIN_4498100;
	_JOIN_4499164 [label="_JOIN_4499164None...",shape=box];
	_JOIN_4499164 -> ForLoop4499305;
	_JOIN_4495321 [label="_JOIN_4495321None...",shape=box];
	_JOIN_4495321 -> _JOIN_4495323;
	ForLoop4497197 [label="ForLoop4497197  for (k=kk; k<=min(ny-1,kk+127); k=k+1) {...",shape=box];
	ForLoop4497197 -> 4601998;
	ForLoop4497197 -> _JOIN_4497197;
	_JOIN_4495323 [label="_JOIN_4495323None...",shape=box];
	_JOIN_4495323 -> _JOIN_4495325;
	_JOIN_4495325 [label="_JOIN_4495325None...",shape=box];
	_JOIN_4495325 -> ForLoop4498100;
	_JOIN_4498102 [label="_JOIN_4498102None...",shape=box];
	_JOIN_4498102 -> ForLoop4499307;
	ForLoop4498102 [label="ForLoop4498102  for (i=ii; i<=min(nx-1,ii+63)-28; i=i+29) {...",shape=box];
	ForLoop4498102 -> 4637705;
	ForLoop4498102 -> _JOIN_4498102;
	ForLoop4498100 [label="ForLoop4498100  for (kkk=0; kkk<=ny-1; kkk=kkk+256) {...",shape=box];
	ForLoop4498100 -> ForLoop4498098;
	ForLoop4498100 -> _JOIN_4498100;
	ForLoop4495321 [label="ForLoop4495321  for (jt=jj; jt<=min(ny-1,jj+511)-31; jt=jt+32) {...",shape=box];
	ForLoop4495321 -> 4543736;
	ForLoop4495321 -> _JOIN_4495321;
	ForLoop4495323 [label="ForLoop4495323  for (jj=jjj; jj<=min(ny-1,jjj+512); jj=jj+512) {...",shape=box];
	ForLoop4495323 -> 4461427;
	ForLoop4495323 -> _JOIN_4495323;
	ForLoop4495325 [label="ForLoop4495325  for (jjj=0; jjj<=ny-1; jjj=jjj+1024) {...",shape=box];
	ForLoop4495325 -> ForLoop4495323;
	ForLoop4495325 -> _JOIN_4495325;
	4645265 [label="4645265  tmp[i]=scv_64;...",shape=box];
	4645265 -> _JOIN_4499307;
	4637723 [label="4637723  tmp[(i+20)]=scv_34;...",shape=box];
	ForLoop4499161 [label="ForLoop4499161  for (jt=jj; jt<=min(ny-1,jj+511)-31; jt=jt+32) {...",shape=box];
	ForLoop4499161 -> 4498260;
	ForLoop4499161 -> _JOIN_4499161;
	ForLoop4499164 [label="ForLoop4499164  for (jjj=0; jjj<=ny-1; jjj=jjj+1024) {...",shape=box];
	ForLoop4499164 -> ForLoop4499163;
	ForLoop4499164 -> _JOIN_4499164;
	ForLoop4499271 [label="ForLoop4499271  for (k=kk; k<=min(ny-1,kk+127); k=k+1) {...",shape=box];
	ForLoop4499271 -> 4643748;
	ForLoop4499271 -> _JOIN_4499271;
	4461072 [label="4461072  double x_copy[512];...",shape=box];
	4498260 [label="4498260  scv_64=scv_64+A[i*ny+jt]*x_copy[(jt-jj)];...",shape=box];
	ForLoop4284469 [label="ForLoop4284469  for (i=0; i<=cbv_1; i++ ) ...",shape=box];
	ForLoop4284469 -> 4284468;
	ForLoop4284469 -> _JOIN_4284469;
	4643748 [label="4643748  double scv_63;...",shape=box];
	4637705 [label="4637705  double scv_34, scv_35, scv_36, scv_37, scv_38, scv_39, scv_40, scv_41;...",shape=box];
	_JOIN_4498100 [label="_JOIN_4498100None...",shape=box];
	_JOIN_4498100 -> 4637723;
	4461087 [label="4461087  int i;...",shape=box];
	4461087 -> ForLoop4498102;
	4461427 [label="4461427  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	4543736 [label="4543736  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	_JOIN_4499271 [label="_JOIN_4499271None...",shape=box];
	_JOIN_4499271 -> 4499302;
	4645253 [label="4645253  double scv_64;...",shape=box];
	ForLoop4499309 [label="ForLoop4499309  for (ii=0; ii<=nx-1; ii=ii+64) {...",shape=box];
	ForLoop4499309 -> 4461087;
	ForLoop4499309 -> _JOIN_4499309;
	_JOIN_4499307 [label="_JOIN_4499307None...",shape=box];
	_JOIN_4499307 -> _JOIN_4499309;
	ForLoop4499305 [label="ForLoop4499305  for (kexpected=0.000000
actual=9369846271501.798828
kk=0; kkk<=ny-1; kkk=kkk+256) {...",shape=box];
	ForLoop4499305 -> ForLoop4499304;
	ForLoop4499305 -> _JOIN_4499305;
	4601998 [label="4601998  double scv_33;...",shape=box];
	ForLoop4499307 [label="ForLoop4499307  for (i=(min(nx-1,ii+63))-(((min(nx-1,ii+63))-(ii)+1)%29)+1; i<=min(nx-1,ii+63); i=i+1) {...",shape=box];
	ForLoop4499307 -> 4645253;
	ForLoop4499307 -> _JOIN_4499307;
	ForLoop4499304 [label="ForLoop4499304  for (kk=kkk; kk<=min(ny-1,kkk+128); kk=kk+128) {...",shape=box];
	ForLoop4499304 -> 4499226;
	ForLoop4499304 -> _JOIN_4499304;
	4284468 [label="4284468  y[i]=0.0;...",shape=box];
	4284468 -> _JOIN_4284469;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest24.exe __orio_perftest24.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest24.exe  
{'[3, 6, 4, 1, 5, 3, 1, 1, 0, 28, 4, 0, 0, 2, 0, 1, 1, 0]' : 0.233087}
{'[3, 6, 4, 1, 5, 3, 1, 1, 0, 28, 4, 0, 0, 2, 0, 1, 1, 0]' : 0.232438}
{'[3, 6, 4, 1, 5, 3, 1, 1, 0, 28, 4, 0, 0, 2, 0, 1, 1, 0]' : 0.232696}
{'[3, 6, 4, 1, 5, 3, 1, 1, 0, 28, 4, 0, 0, 2, 0, 1, 1, 0]' : 0.233934}
{'[3, 6, 4, 1, 5, 3, 1, 1, 0, 28, 4, 0, 0, 2, 0, 1, 1, 0]' : 0.232099}
{'[3, 6, 4, 1, 5, 3, 1, 1, 0, 28, 4, 0, 0, 2, 0, 1, 1, 0]' : 0.232507}
{'[3, 6, 4, 1, 5, 3, 1, 1, 0, 28, 4, 0, 0, 2, 0, 1, 1, 0]' : 0.232249}
{'[3, 6, 4, 1, 5, 3, 1, 1, 0, 28, 4, 0, 0, 2, 0, 1, 1, 0]' : 0.233141}
{'[3, 6, 4, 1, 5, 3, 1, 1, 0, 28, 4, 0, 0, 2, 0, 1, 1, 0]' : 0.233017}
{'[3, 6, 4, 1, 5, 3, 1, 1, 0, 28, 4, 0, 0, 2, 0, 1, 1, 0]' : 0.232428}
{'[3, 6, 4, 1, 5, 3, 1, 1, 0, 28, 4, 0, 0, 2, 0, 1, 1, 0]' : 0.232722}
{'[3, 6, 4, 1, 5, 3, 1, 1, 0, 28, 4, 0, 0, 2, 0, 1, 1, 0]' : 0.233562}
{'[3, 6, 4, 1, 5, 3, 1, 1, 0, 28, 4, 0, 0, 2, 0, 1, 1, 0]' : 0.232582}
{'[3, 6, 4, 1, 5, 3, 1, 1, 0, 28, 4, 0, 0, 2, 0, 1, 1, 0]' : 0.232377}
{'[3, 6, 4, 1, 5, 3, 1, 1, 0, 28, 4, 0, 0, 2, 0, 1, 1, 0]' : 0.232999}
{'[3, 6, 4, 1, 5, 3, 1, 1, 0, 28, 4, 0, 0, 2, 0, 1, 1, 0]' : 0.232813}
{'[3, 6, 4, 1, 5, 3, 1, 1, 0, 28, 4, 0, 0, 2, 0, 1, 1, 0]' : 0.232714}
{'[3, 6, 4, 1, 5, 3, 1, 1, 0, 28, 4, 0, 0, 2, 0, 1, 1, 0]' : 0.232752}
{'[3, 6, 4, 1, 5, 3, 1, 1, 0, 28, 4, 0, 0, 2, 0, 1, 1, 0]' : 0.233273}
{'[3, 6, 4, 1, 5, 3, 1, 1, 0, 28, 4, 0, 0, 2, 0, 1, 1, 0]' : 0.232795}
{'[3, 6, 4, 1, 5, 3, 1, 1, 0, 28, 4, 0, 0, 2, 0, 1, 1, 0]' : 0.233495}
{'[3, 6, 4, 1, 5, 3, 1, 1, 0, 28, 4, 0, 0, 2, 0, 1, 1, 0]' : 0.23257}
{'[3, 6, 4, 1, 5, 3, 1, 1, 0, 28, 4, 0, 0, 2, 0, 1, 1, 0]' : 0.233266}
{'[3, 6, 4, 1, 5, 3, 1, 1, 0, 28, 4, 0, 0, 2, 0, 1, 1, 0]' : 0.23246}
{'[3, 6, 4, 1, 5, 3, 1, 1, 0, 28, 4, 0, 0, 2, 0, 1, 1, 0]' : 0.232934}
{'[3, 6, 4, 1, 5, 3, 1, 1, 0, 28, 4, 0, 0, 2, 0, 1, 1, 0]' : 0.232231}
{'[3, 6, 4, 1, 5, 3, 1, 1, 0, 28, 4, 0, 0, 2, 0, 1, 1, 0]' : 0.232597}
{'[3, 6, 4, 1, 5, 3, 1, 1, 0, 28, 4, 0, 0, 2, 0, 1, 1, 0]' : 0.232823}
{'[3, 6, 4, 1, 5, 3, 1, 1, 0, 28, 4, 0, 0, 2, 0, 1, 1, 0]' : 0.233428}
{'[3, 6, 4, 1, 5, 3, 1, 1, 0, 28, 4, 0, 0, 2, 0, 1, 1, 0]' : 0.232231}

out:
 ["{'[3, 6, 4, 1, 5, 3, 1, 1, 0, 28, 4, 0, 0, 2, 0, 1, 1, 0]' : 0.233087}", "{'[3, 6, 4, 1, 5, 3, 1, 1, 0, 28, 4, 0, 0, 2, 0, 1, 1, 0]' : 0.232438}", "{'[3, 6, 4, 1, 5, 3, 1, 1, 0, 28, 4, 0, 0, 2, 0, 1, 1, 0]' : 0.232696}", "{'[3, 6, 4, 1, 5, 3, 1, 1, 0, 28, 4, 0, 0, 2, 0, 1, 1, 0]' : 0.233934}", "{'[3, 6, 4, 1, 5, 3, 1, 1, 0, 28, 4, 0, 0, 2, 0, 1, 1, 0]' : 0.232099}", "{'[3, 6, 4, 1, 5, 3, 1, 1, 0, 28, 4, 0, 0, 2, 0, 1, 1, 0]' : 0.232507}", "{'[3, 6, 4, 1, 5, 3, 1, 1, 0, 28, 4, 0, 0, 2, 0, 1, 1, 0]' : 0.232249}", "{'[3, 6, 4, 1, 5, 3, 1, 1, 0, 28, 4, 0, 0, 2, 0, 1, 1, 0]' : 0.233141}", "{'[3, 6, 4, 1, 5, 3, 1, 1, 0, 28, 4, 0, 0, 2, 0, 1, 1, 0]' : 0.233017}", "{'[3, 6, 4, 1, 5, 3, 1, 1, 0, 28, 4, 0, 0, 2, 0, 1, 1, 0]' : 0.232428}", "{'[3, 6, 4, 1, 5, 3, 1, 1, 0, 28, 4, 0, 0, 2, 0, 1, 1, 0]' : 0.232722}", "{'[3, 6, 4, 1, 5, 3, 1, 1, 0, 28, 4, 0, 0, 2, 0, 1, 1, 0]' : 0.233562}", "{'[3, 6, 4, 1, 5, 3, 1, 1, 0, 28, 4, 0, 0, 2, 0, 1, 1, 0]' : 0.232582}", "{'[3, 6, 4, 1, 5, 3, 1, 1, 0, 28, 4, 0, 0, 2, 0, 1, 1, 0]' : 0.232377}", "{'[3, 6, 4, 1, 5, 3, 1, 1, 0, 28, 4, 0, 0, 2, 0, 1, 1, 0]' : 0.232999}", "{'[3, 6, 4, 1, 5, 3, 1, 1, 0, 28, 4, 0, 0, 2, 0, 1, 1, 0]' : 0.232813}", "{'[3, 6, 4, 1, 5, 3, 1, 1, 0, 28, 4, 0, 0, 2, 0, 1, 1, 0]' : 0.232714}", "{'[3, 6, 4, 1, 5, 3, 1, 1, 0, 28, 4, 0, 0, 2, 0, 1, 1, 0]' : 0.232752}", "{'[3, 6, 4, 1, 5, 3, 1, 1, 0, 28, 4, 0, 0, 2, 0, 1, 1, 0]' : 0.233273}", "{'[3, 6, 4, 1, 5, 3, 1, 1, 0, 28, 4, 0, 0, 2, 0, 1, 1, 0]' : 0.232795}", "{'[3, 6, 4, 1, 5, 3, 1, 1, 0, 28, 4, 0, 0, 2, 0, 1, 1, 0]' : 0.233495}", "{'[3, 6, 4, 1, 5, 3, 1, 1, 0, 28, 4, 0, 0, 2, 0, 1, 1, 0]' : 0.23257}", "{'[3, 6, 4, 1, 5, 3, 1, 1, 0, 28, 4, 0, 0, 2, 0, 1, 1, 0]' : 0.233266}", "{'[3, 6, 4, 1, 5, 3, 1, 1, 0, 28, 4, 0, 0, 2, 0, 1, 1, 0]' : 0.23246}", "{'[3, 6, 4, 1, 5, 3, 1, 1, 0, 28, 4, 0, 0, 2, 0, 1, 1, 0]' : 0.232934}", "{'[3, 6, 4, 1, 5, 3, 1, 1, 0, 28, 4, 0, 0, 2, 0, 1, 1, 0]' : 0.232231}", "{'[3, 6, 4, 1, 5, 3, 1, 1, 0, 28, 4, 0, 0, 2, 0, 1, 1, 0]' : 0.232597}", "{'[3, 6, 4, 1, 5, 3, 1, 1, 0, 28, 4, 0, 0, 2, 0, 1, 1, 0]' : 0.232823}", "{'[3, 6, 4, 1, 5, 3, 1, 1, 0, 28, 4, 0, 0, 2, 0, 1, 1, 0]' : 0.233428}", "{'[3, 6, 4, 1, 5, 3, 1, 1, 0, 28, 4, 0, 0, 2, 0, 1, 1, 0]' : 0.232231}"]
returning from 'run': {'[3, 6, 4, 1, 5, 3, 1, 1, 0, 28, 4, 0, 0, 2, 0, 1, 1, 0]': ([0.233087, 0.232438, 0.232696, 0.233934, 0.232099, 0.232507, 0.232249, 0.233141, 0.233017, 0.232428, 0.232722, 0.233562, 0.232582, 0.232377, 0.232999, 0.232813, 0.232714, 0.232752, 0.233273, 0.232795, 0.233495, 0.23257, 0.233266, 0.23246, 0.232934, 0.232231, 0.232597, 0.232823, 0.233428, 0.232231], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.233087, 0.232438, 0.232696, 0.233934, 0.232099, 0.232507, 0.232249, 0.233141, 0.233017, 0.232428, 0.232722, 0.233562, 0.232582, 0.232377, 0.232999, 0.232813, 0.232714, 0.232752, 0.233273, 0.232795, 0.233495, 0.23257, 0.233266, 0.23246, 0.232934, 0.232231, 0.232597, 0.232823, 0.233428, 0.232231], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[3, 6, 4, 1, 5, 3, 1, 1, 0, 28, 4, 0, 0, 2, 0, 1, 1, 0]': ([0.233087, 0.232438, 0.232696, 0.233934, 0.232099, 0.232507, 0.232249, 0.233141, 0.233017, 0.232428, 0.232722, 0.233562, 0.232582, 0.232377, 0.232999, 0.232813, 0.232714, 0.232752, 0.233273, 0.232795, 0.233495, 0.23257, 0.233266, 0.23246, 0.232934, 0.232231, 0.232597, 0.232823, 0.233428, 0.232231], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [0, 1, 0, 0, 1, 1, 0, 0, 27, 0, 25, 28, 1, 1, 0, 0, 0, 0]
Fixed Factors: {}
Testing candidate 25: [0, 1, 0, 0, 1, 1, 0, 0, 27, 0, 25, 28, 1, 1, 0, 0, 0, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		3458
        Multiplications: 	1040
        Divisions: 		0
        Logical: 		0
        Reads: 			5337
        Writes: 		572
        Comparisons:		11
        Gotos: 			0
        
digraph CFG {
	ForLoop4768365 [label="ForLoop4768365  for (k=(min(ny-1,kkk+63))-(((min(ny-1,kkk+63))-(kkk)+1)%29)+1; k<=min(ny-1,kkk+63); k=k+1) {...",shape=box];
	ForLoop4768365 -> 4768181;
	ForLoop4768365 -> _JOIN_4768365;
	ForLoop4669241 [label="ForLoop4669241  for (i=ny-((ny-(0))%28); i<=ny-1; i=i+1) ...",shape=box];
	ForLoop4669241 -> 4669240;
	ForLoop4669241 -> _JOIN_4669241;
	_JOIN_4768365 [label="_JOIN_4768365None...",shape=box];
	_JOIN_4768365 -> _JOIN_4674091;
	ForLoop4669172 [label="ForLoop4669172  for (i=0; i<=ny-28; i=i+28) {...",shape=box];
	ForLoop4669172 -> 4668927;
	ForLoop4669172 -> _JOIN_4669172;
	_JOIN_4674573 [label="_JOIN_4674573None...",shape=box];
	_JOIN_4674573 -> 4711621;
	_JOIN_4674037 [label="_JOIN_4674037None...",shape=box];
	_JOIN_4674037 -> _JOIN_4674038;
	_JOIN_4674091 [label="_JOIN_4674091None...",shape=box];
	_JOIN_4674091 -> _JOIN_4674093;
	4722348 [label="4722348  tmp[it]=tmp[it]+A[it*ny+j]*x[j];...",shape=box];
	_JOIN_4674093 [label="_JOIN_4674093None.expected=9369846271501.798828
actual=9369846271501.798828
..",shape=box];
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 4668465;
	ForLoop4729458 [label="ForLoop4729458  for (j=(min(ny-1,jj+15))-(((min(ny-1,jj+15))-(jt)+1)%26)+1; j<=min(ny-1,jj+15); j=j+1) {...",shape=box];
	ForLoop4729458 -> 4729253;
	ForLoop4729458 -> _JOIN_4729458;
	4668927 [label="4668927  y[i]=0.0;...",shape=box];
	_JOIN_4669172 [label="_JOIN_4669172None...",shape=box];
	_JOIN_4669172 -> ForLoop4669241;
	_JOIN_4674038 [label="_JOIN_4674038None...",shape=box];
	_JOIN_4674038 -> ForLoop4674091;
	ForLoop4729128 [label="ForLoop4729128  for (j=jt; j<=min(ny-1,jj+15)-25; j=j+26) {...",shape=box];
	ForLoop4729128 -> 4722348;
	ForLoop4729128 -> _JOIN_4729128;
	4668465 [label="4668465  int i;...",shape=box];
	4668465 -> ForLoop4669172;
	4674250 [label="4674250  tmp[it]=0;...",shape=box];
	4674250 -> ForLoop4674038;
	_JOIN_4729458 [label="_JOIN_4729458None...",shape=box];
	_JOIN_4729458 -> _JOIN_4674037;
	_JOIN_4729128 [label="_JOIN_4729128None...",shape=box];
	_JOIN_4729128 -> ForLoop4729458;
	_JOIN_4768056 [label="_JOIN_4768056None...",shape=box];
	_JOIN_4768056 -> ForLoop4768365;
	4729253 [label="4729253  tmp[it]=tmp[it]+A[it*ny+j]*x[j];...",shape=box];
	ForLoop4768056 [label="ForLoop4768056  for (k=kkk; k<=min(ny-1,kkk+63)-28; k=k+29) {...",shape=box];
	ForLoop4768056 -> 4760424;
	ForLoop4768056 -> _JOIN_4768056;
	4673300 [label="4673300  double x_copy;...",shape=box];
	4760424 [label="4760424  y[k]=y[k]+A[it*ny+k]*tmp[it];...",shape=box];
	4674872 [label="4674872  tmp[it]=tmp[it]+A[it*ny+jt]*x[jt];...",shape=box];
	4711621 [label="4711621  int j;...",shape=box];
	4711621 -> ForLoop4729128;
	ForLoop4674037 [label="ForLoop4674037  for (jj=jjj; jj<=min(ny-1,jjj+48); jj=jj+16) {...",shape=box];
	ForLoop4674037 -> ForLoop4674573;
	ForLoop4674037 -> _JOIN_4674037;
	_JOIN_4669241 [label="_JOIN_4669241None...",shape=box];
	_JOIN_4669241 -> 4673300;
	ForLoop4674038 [label="ForLoop4674038  for (jjj=0; jjj<=ny-1; jjj=jjj+64) ...",shape=box];
	ForLoop4674038 -> ForLoop4674037;
	ForLoop4674038 -> _JOIN_4674038;
	4669240 [label="4669240  y[i]=0.0;...",shape=box];
	4669240 -> _JOIN_4669241;
	4768181 [label="4768181  y[k]=y[k]+A[it*ny+k]*tmp[it];...",shape=box];
	ForLoop4674091 [label="ForLoop4674091  for (kkk=0; kkk<=ny-1; kkk=kkk+64) {...",shape=box];
	ForLoop4674091 -> 4748398;
	ForLoop4674091 -> _JOIN_4674091;
	ForLoop4674573 [label="ForLoop4674573  for (jt=jj; jt<=min(ny-1,jj+15)-7; jt=jt+8) {...",shape=box];
	ForLoop4674573 -> 4674872;
	ForLoop4674573 -> _JOIN_4674573;
	ForLoop4674093 [label="ForLoop4674093  for (it=0; it<=nx-8; it=it+8) {...",shape=box];
	ForLoop4674093 -> 4674250;
	ForLoop4674093 -> _JOIN_4674093;
	4748398 [label="4748398  int k;...",shape=box];
	4748398 -> ForLoop4768056;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest25.exe __orio_perftest25.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest25.exe  
{'[0, 1, 0, 0, 1, 1, 0, 0, 27, 0, 25, 28, 1, 1, 0, 0, 0, 0]' : 0.102392}
{'[0, 1, 0, 0, 1, 1, 0, 0, 27, 0, 25, 28, 1, 1, 0, 0, 0, 0]' : 0.102052}
{'[0, 1, 0, 0, 1, 1, 0, 0, 27, 0, 25, 28, 1, 1, 0, 0, 0, 0]' : 0.102105}
{'[0, 1, 0, 0, 1, 1, 0, 0, 27, 0, 25, 28, 1, 1, 0, 0, 0, 0]' : 0.103058}
{'[0, 1, 0, 0, 1, 1, 0, 0, 27, 0, 25, 28, 1, 1, 0, 0, 0, 0]' : 0.102102}
{'[0, 1, 0, 0, 1, 1, 0, 0, 27, 0, 25, 28, 1, 1, 0, 0, 0, 0]' : 0.102156}
{'[0, 1, 0, 0, 1, 1, 0, 0, 27, 0, 25, 28, 1, 1, 0, 0, 0, 0]' : 0.102092}
{'[0, 1, 0, 0, 1, 1, 0, 0, 27, 0, 25, 28, 1, 1, 0, 0, 0, 0]' : 0.102338}
{'[0, 1, 0, 0, 1, 1, 0, 0, 27, 0, 25, 28, 1, 1, 0, 0, 0, 0]' : 0.102036}
{'[0, 1, 0, 0, 1, 1, 0, 0, 27, 0, 25, 28, 1, 1, 0, 0, 0, 0]' : 0.102073}
{'[0, 1, 0, 0, 1, 1, 0, 0, 27, 0, 25, 28, 1, 1, 0, 0, 0, 0]' : 0.102067}
{'[0, 1, 0, 0, 1, 1, 0, 0, 27, 0, 25, 28, 1, 1, 0, 0, 0, 0]' : 0.101968}
{'[0, 1, 0, 0, 1, 1, 0, 0, 27, 0, 25, 28, 1, 1, 0, 0, 0, 0]' : 0.102033}
{'[0, 1, 0, 0, 1, 1, 0, 0, 27, 0, 25, 28, 1, 1, 0, 0, 0, 0]' : 0.10214}
{'[0, 1, 0, 0, 1, 1, 0, 0, 27, 0, 25, 28, 1, 1, 0, 0, 0, 0]' : 0.102021}
{'[0, 1, 0, 0, 1, 1, 0, 0, 27, 0, 25, 28, 1, 1, 0, 0, 0, 0]' : 0.102094}
{'[0, 1, 0, 0, 1, 1, 0, 0, 27, 0, 25, 28, 1, 1, 0, 0, 0, 0]' : 0.102029}
{'[0, 1, 0, 0, 1, 1, 0, 0, 27, 0, 25, 28, 1, 1, 0, 0, 0, 0]' : 0.102124}
{'[0, 1, 0, 0, 1, 1, 0, 0, 27, 0, 25, 28, 1, 1, 0, 0, 0, 0]' : 0.102053}
{'[0, 1, 0, 0, 1, 1, 0, 0, 27, 0, 25, 28, 1, 1, 0, 0, 0, 0]' : 0.101999}
{'[0, 1, 0, 0, 1, 1, 0, 0, 27, 0, 25, 28, 1, 1, 0, 0, 0, 0]' : 0.102052}
{'[0, 1, 0, 0, 1, 1, 0, 0, 27, 0, 25, 28, 1, 1, 0, 0, 0, 0]' : 0.102059}
{'[0, 1, 0, 0, 1, 1, 0, 0, 27, 0, 25, 28, 1, 1, 0, 0, 0, 0]' : 0.10235}
{'[0, 1, 0, 0, 1, 1, 0, 0, 27, 0, 25, 28, 1, 1, 0, 0, 0, 0]' : 0.10302}
{'[0, 1, 0, 0, 1, 1, 0, 0, 27, 0, 25, 28, 1, 1, 0, 0, 0, 0]' : 0.102297}
{'[0, 1, 0, 0, 1, 1, 0, 0, 27, 0, 25, 28, 1, 1, 0, 0, 0, 0]' : 0.102068}
{'[0, 1, 0, 0, 1, 1, 0, 0, 27, 0, 25, 28, 1, 1, 0, 0, 0, 0]' : 0.102017}
{'[0, 1, 0, 0, 1, 1, 0, 0, 27, 0, 25, 28, 1, 1, 0, 0, 0, 0]' : 0.101986}
{'[0, 1, 0, 0, 1, 1, 0, 0, 27, 0, 25, 28, 1, 1, 0, 0, 0, 0]' : 0.102071}
{'[0, 1, 0, 0, 1, 1, 0, 0, 27, 0, 25, 28, 1, 1, 0, 0, 0, 0]' : 0.102067}

out:
 ["{'[0, 1, 0, 0, 1, 1, 0, 0, 27, 0, 25, 28, 1, 1, 0, 0, 0, 0]' : 0.102392}", "{'[0, 1, 0, 0, 1, 1, 0, 0, 27, 0, 25, 28, 1, 1, 0, 0, 0, 0]' : 0.102052}", "{'[0, 1, 0, 0, 1, 1, 0, 0, 27, 0, 25, 28, 1, 1, 0, 0, 0, 0]' : 0.102105}", "{'[0, 1, 0, 0, 1, 1, 0, 0, 27, 0, 25, 28, 1, 1, 0, 0, 0, 0]' : 0.103058}", "{'[0, 1, 0, 0, 1, 1, 0, 0, 27, 0, 25, 28, 1, 1, 0, 0, 0, 0]' : 0.102102}", "{'[0, 1, 0, 0, 1, 1, 0, 0, 27, 0, 25, 28, 1, 1, 0, 0, 0, 0]' : 0.102156}", "{'[0, 1, 0, 0, 1, 1, 0, 0, 27, 0, 25, 28, 1, 1, 0, 0, 0, 0]' : 0.102092}", "{'[0, 1, 0, 0, 1, 1, 0, 0, 27, 0, 25, 28, 1, 1, 0, 0, 0, 0]' : 0.102338}", "{'[0, 1, 0, 0, 1, 1, 0, 0, 27, 0, 25, 28, 1, 1, 0, 0, 0, 0]' : 0.102036}", "{'[0, 1, 0, 0, 1, 1, 0, 0, 27, 0, 25, 28, 1, 1, 0, 0, 0, 0]' : 0.102073}", "{'[0, 1, 0, 0, 1, 1, 0, 0, 27, 0, 25, 28, 1, 1, 0, 0, 0, 0]' : 0.102067}", "{'[0, 1, 0, 0, 1, 1, 0, 0, 27, 0, 25, 28, 1, 1, 0, 0, 0, 0]' : 0.101968}", "{'[0, 1, 0, 0, 1, 1, 0, 0, 27, 0, 25, 28, 1, 1, 0, 0, 0, 0]' : 0.102033}", "{'[0, 1, 0, 0, 1, 1, 0, 0, 27, 0, 25, 28, 1, 1, 0, 0, 0, 0]' : 0.10214}", "{'[0, 1, 0, 0, 1, 1, 0, 0, 27, 0, 25, 28, 1, 1, 0, 0, 0, 0]' : 0.102021}", "{'[0, 1, 0, 0, 1, 1, 0, 0, 27, 0, 25, 28, 1, 1, 0, 0, 0, 0]' : 0.102094}", "{'[0, 1, 0, 0, 1, 1, 0, 0, 27, 0, 25, 28, 1, 1, 0, 0, 0, 0]' : 0.102029}", "{'[0, 1, 0, 0, 1, 1, 0, 0, 27, 0, 25, 28, 1, 1, 0, 0, 0, 0]' : 0.102124}", "{'[0, 1, 0, 0, 1, 1, 0, 0, 27, 0, 25, 28, 1, 1, 0, 0, 0, 0]' : 0.102053}", "{'[0, 1, 0, 0, 1, 1, 0, 0, 27, 0, 25, 28, 1, 1, 0, 0, 0, 0]' : 0.101999}", "{'[0, 1, 0, 0, 1, 1, 0, 0, 27, 0, 25, 28, 1, 1, 0, 0, 0, 0]' : 0.102052}", "{'[0, 1, 0, 0, 1, 1, 0, 0, 27, 0, 25, 28, 1, 1, 0, 0, 0, 0]' : 0.102059}", "{'[0, 1, 0, 0, 1, 1, 0, 0, 27, 0, 25, 28, 1, 1, 0, 0, 0, 0]' : 0.10235}", "{'[0, 1, 0, 0, 1, 1, 0, 0, 27, 0, 25, 28, 1, 1, 0, 0, 0, 0]' : 0.10302}", "{'[0, 1, 0, 0, 1, 1, 0, 0, 27, 0, 25, 28, 1, 1, 0, 0, 0, 0]' : 0.102297}", "{'[0, 1, 0, 0, 1, 1, 0, 0, 27, 0, 25, 28, 1, 1, 0, 0, 0, 0]' : 0.102068}", "{'[0, 1, 0, 0, 1, 1, 0, 0, 27, 0, 25, 28, 1, 1, 0, 0, 0, 0]' : 0.102017}", "{'[0, 1, 0, 0, 1, 1, 0, 0, 27, 0, 25, 28, 1, 1, 0, 0, 0, 0]' : 0.101986}", "{'[0, 1, 0, 0, 1, 1, 0, 0, 27, 0, 25, 28, 1, 1, 0, 0, 0, 0]' : 0.102071}", "{'[0, 1, 0, 0, 1, 1, 0, 0, 27, 0, 25, 28, 1, 1, 0, 0, 0, 0]' : 0.102067}"]
returning from 'run': {'[0, 1, 0, 0, 1, 1, 0, 0, 27, 0, 25, 28, 1, 1, 0, 0, 0, 0]': ([0.102392, 0.102052, 0.102105, 0.103058, 0.102102, 0.102156, 0.102092, 0.102338, 0.102036, 0.102073, 0.102067, 0.101968, 0.102033, 0.10214, 0.102021, 0.102094, 0.102029, 0.102124, 0.102053, 0.101999, 0.102052, 0.102059, 0.10235, 0.10302, 0.102297, 0.102068, 0.102017, 0.101986, 0.102071, 0.102067], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.102392, 0.102052, 0.102105, 0.103058, 0.102102, 0.102156, 0.102092, 0.102338, 0.102036, 0.102073, 0.102067, 0.101968, 0.102033, 0.10214, 0.102021, 0.102094, 0.102029, 0.102124, 0.102053, 0.101999, 0.102052, 0.102059, 0.10235, 0.10302, 0.102297, 0.102068, 0.102017, 0.101986, 0.102071, 0.102067], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[0, 1, 0, 0, 1, 1, 0, 0, 27, 0, 25, 28, 1, 1, 0, 0, 0, 0]': ([0.102392, 0.102052, 0.102105, 0.103058, 0.102102, 0.102156, 0.102092, 0.102338, 0.102036, 0.102073, 0.102067, 0.101968, 0.102033, 0.10214, 0.102021, 0.102094, 0.102029, 0.102124, 0.102053, 0.101999, 0.102052, 0.102059, 0.10235, 0.10302, 0.102297, 0.102068, 0.102017, 0.101986, 0.102071, 0.102067], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [6, 1, 3, 0, 3, 0, 0, 1, 23, 3, 0, 27, 0, 0, 0, 1, 1, 1]
Fixed Factors: {}
Testing candidate 26: [6, 1, 3, 0, 3, 0, 0, 1, 23, 3, 0, 27, 0, 0, 0, 1, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	33
        Max loop nest depth: 	5
        Additions: 		1279
        Multiplications: 	300
        Divisions: 		0
        Logical: 		0
        Reads: 			2632
        Writes: 		577
        Comparisons:		33
        Gotos: 			0
        
digraph CFG {
	ForLoop4839281 [label="ForLoop4839281  for (jj=jjj; jj<=min(ny-1,jjj+240); jj=jj+16) {...",shape=box];
	ForLoop4839281 -> 4879310;
	ForLoop4839281 -> _JOIN_4839281;
	_JOIN_4834416 [label="_JOIN_4834416None...",shape=box];
	_JOIN_4834416 -> _JOIN_4834418;
	4842991 [label="4842991  double scv_30;...",shape=box];
	_JOIN_4834414 [label="_JOIN_4834414None...",shape=box];
	_JOIN_4834414 -> _JOIN_4834416;
	4836705 [label="4836705  for (k=kk; k<=min(ny-1,kk+63); k=k+1) ...",shape=box];
	ForLoop4839041 [label="ForLoop4839041  for (k=kk; k<=cbv_11; k=k+28) {...",shape=box];
	ForLoop4839041 -> 4849520;
	ForLoop4839041 -> _JOIN_4839041;
	ForLoop4839280 [label="ForLoop4839280  for (j=jj; j<=cbv_14; j=j+1) {...",shape=box];
	ForLoop4839280 -> 4839279;
	ForLoop4839280 -> _JOIN_4839280;
	4794654 [label="4794654  register int cbv_2, cbv_3;...",shape=box];
	4867182 [label="4867182  tmp[i]=scv_151;...",shape=box];
	4867182 -> _JOIN_4840349;
	4877922 [label="4877922  register int cbv_9, cbv_10;...",shape=box];
	4834188 [label="4834188  double x_copy;...",shape=box];
	_JOIN_4794328 [label="_JOIN_4794328None...",shape=box];
	_JOIN_4794328 -> 4794654;
	_JOIN_4834418 [label="_JOIN_4834418None...",shape=box];
	_JOIN_4834418 -> ForLoop4839155;
	_JOIN_4835375 [label="_JOIN_4835375None...",shape=box];
	_JOIN_4835375 -> 4875306;
	ForLoop4839282 [label="ForLoop4839282  for (jjj=0; jjj<=ny-1; jjj=jjj+256) {...",shape=box];
	ForLoop4839282 -> ForLoop4839281;
	ForLoop4839282 -> _JOIN_4839282;
	4861927 [label="4861927  tmp[(i+2)]=scv_118;...",shape=box];
	4794396 [label="4794396  y[i]=0.0;...",shape=box];
	4794396 -> _JOIN_4794397;
	_JOIN_4836593 [label="_JOIN_4836593None...",shape=box];
	_JOIN_4836593 -> 4876614;
	4845430 [label="4845430  double scv_59;...",shape=box];
	4876614 [label="4876614  register int cbv_6, cbv_7;...",shape=box];
	_JOIN_4835449 [label="_JOIN_4835449None...",shape=box];
	_JOIN_4835449 -> 4835481;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 4793717;
	_JOIN_4840349 [label="_JOIN_4840349None...",shape=box];
	_JOIN_4840349 -> _JOIN_4840351;
	ForLoop4835375 [label="ForLoop4835375  for (k=kk; k<=cbv_2; k=k+28) {...",shape=box];
	ForLoop4835375 -> 4842212;
	ForLoop4835375 -> _JOIN_4835375;
	_JOIN_4840351 [label="_JOIN_4840351None...",shape=box];
	4844642 [label="4844642  double scv_31, scv_32, scv_33, scv_34, scv_35, scv_36, scv_37, scv_38;...",shape=box];
	4834462 [label="4834462  for (k=kk; k<=min(ny-1,kk+63); k=k+1) ...",shape=box];
	_JOIN_4839280 [label="_JOIN_4839280None...",shape=box];
	_JOIN_4839280 -> _JOIN_4839281;
	_JOIN_4839282 [label="_JOIN_4839282None...",shape=box];
	_JOIN_4839282 -> ForLoop4840347;
	_JOIN_4840239 [label="_JOIN_4840239None...",shape=box];
	_JOIN_4840239 -> 4880496;
	_JOIN_4839155 [label="_JOIN_4839155None...",shape=box];
	_JOIN_4839155 -> 4861927;
	4880496 [label="4880496  register int cbv_16, cbv_17;...",shape=box];
	4847081 [label="4847081  double scv_60, scv_61, scv_62, scv_63, scv_64, scv_65, scv_66, scv_67;...",shape=box];
	ForLoop4840349 [label="ForLoop4840349  for (i=(min(nx-1,ii+511))-(((min(nx-1,ii+511))-(ii)+1)%4)+1; i<=min(nx-1,ii+511); i=i+1) {...",shape=box];
	ForLoop4840349 -> 4867170;
	ForLoop4840349 -> _JOIN_4840349;
	ForLoop4835449 [label="ForLoop4835449  for (k=cbv_3; k<=cbv_4; k=k+1) {...",shape=box];
	ForLoop4835449 -> 4842991;
	ForLoop4835449 -> _JOIN_4835449;
	4850308 [label="4850308  double scv_117;...",shape=box];
	ForLoop4834418 [label="ForLoop4834418  for (jjj=0; jjj<=ny-1; jjj=jjj+256) {...",shape=box];
	ForLoop4834418 -> ForLoop4834416;
	ForLoop4834418 -> _JOIN_4834418;
	_JOIN_4836673 [label="_JOIN_4836673None...",shape=box];
	_JOIN_4836673 -> 4836705;
	4849520 [label="4849520  double scv_89, scv_90, scv_91, scv_92, scv_93, scv_94, scv_95, scv_96;...",shape=box];
	4861909 [label="4861909  double scv_118, scv_119, scv_120, scv_121;...",shape=box];
	4839279 [label="4839279  scv_151=scv_151+A[i*ny+j]*x[j];...",shape=box];
	4839279 -> _JOIN_4839280;
	_JOIN_4839041 [label="_JOIN_4839041None...",shape=box];
	_JOIN_4839041 -> 4879230;
	4863648 [label="4863648  double scv_122, scv_123, scv_124, scv_125, scv_126, scv_127, scv_128, scv_129;...",shape=box];
	ForLoop4794328 [label="ForLoop4794328  for (i=0; i<=cbv_1; i=i+24) {...",shape=box];
	ForLoop4794328 -> 4794119;
	ForLoop4794328 -> _JOIN_4794328;
	ForLoop4834414 [label="ForLoop4834414  for (j=jj; j<=cbv_1; j=j+1) {...",shape=box];
	ForLoop4834414 -> 4840533;
	ForLoop4834414 -> _JOIN_4834414;
	_JOIN_4840347 [label="_JOIN_4840347None...",shape=box];
	_JOIN_4840347 -> 4867182;
	4864427 [label="4864427  double scv_150;...",shape=box];
	4879310 [label="4879310  register int cbv_14;...",shape=box];
	ForLoop4839155 [label="ForLoop4839155  for (kk=0; kk<=ny-1; kk=kk+64) {...",shape=box];
	ForLoop4839155 -> 4834462;
	ForLoop4839155 -> _JOIN_4839155;
	ForLoop4839157 [label="ForLoop4839157  for (i=ii; i<=min(nx-1,ii+511)-3; i=i+4) {...",shape=box];
	ForLoop4839157 -> 4861909;
	ForLoop4839157 -> _JOIN_4839157;
	4837929 [label="4837929  for (k=kk; k<=min(ny-1,kk+63); k=k+1) ...",shape=box];
	_JOIN_4839281 [label="_JOIN_4839281None...",shape=box];
	_JOIN_4839281 -> _JOIN_4839282;
	4835481 [label="4835481  for (k=kk; k<=min(ny-1,kk+63); k=k+1) ...",shape=box];
	4874120 [label="4874120  register int cbv_1;...",shape=box];
	ForLoop4837897 [label="ForLoop4837897  for (k=cbv_9; k<=cbv_10; k=k+1) {...",shape=box];
	ForLoop4837897 -> 4847869;
	ForLoop4837897 -> _JOIN_4837897;
	4839153 [label="4839153  for (k=kk; k<=min(ny-1,kk+63); k=k+1) ...",shape=box];
	4839153 -> _JOIN_4839155;
	ForLoop4840347 [label="ForLoop4840347  for (kk=0; kk<=ny-1; kk=kk+64) {...",shape=box];
	ForLoop4840347 -> 4839326;
	ForLoop4840347 -> _JOIN_4840347;
	4847869 [label="4847869  double scv_88;...",shape=box];
	_JOIN_4837817 [label="_JOIN_4837817None...",shape=box];
	_JOIN_4837817 -> 4877922;
	4840533 [label="4840533  double scv_1;...",shape=box];
	ForLoop4794397 [label="ForLoop4794397  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop4794397 -> 4794396;
	ForLoop4794397 -> _JOIN_4794397;
	4842212 [label="4842212  double scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8, scv_9;...",shape=box];
	_JOIN_4794397 [label="_JOIN_4794397None...",shape=box];
	_JOIN_4794397 -> 4834188;
	_JOIN_4839157 [label="_JOIN_4839157None...",shape=box];
	_JOIN_4839157 -> ForLoop4840349;
	_JOIN_4837897 [label="_JOIN_4837897None...",shape=box];
	_JOIN_4837897 -> 4837929;
	ForLoop4840351 [label="ForLoop4840351  for (ii=0; ii<=nx-1; ii=ii+512) {...",shape=box];
	ForLoop4840351 -> 4834203;
	ForLoop4840351 -> _JOIN_4840351;
	4839326 [label="4839326  for (k=kk; k<=min(ny-1,kk+63); k=k+1) ...",shape=box];
	4794119 [label="4794119  y[i]=0.0;...",shape=box];
	ForLoop4837817 [label="ForLoop4837817  for (k=kk; k<=cbv_8; k=k+28) {...",shape=box];
	ForLoop4837817 -> 4847081;
	ForLoop4837817 -> _JOIN_4837817;
	ForLoop4840313 [label="ForLoop4840313  for (k=cbv_16; k<=cbv_17; k=k+1) {...",shape=box];
expected=9369846271501.798828
actual=9369846271501.798828
	ForLoop4840313 -> 4864427;
	ForLoop4840313 -> _JOIN_4840313;
	ForLoop4840239 [label="ForLoop4840239  for (k=kk; k<=cbv_15; k=k+28) {...",shape=box];
	ForLoop4840239 -> 4863648;
	ForLoop4840239 -> _JOIN_4840239;
	ForLoop4834416 [label="ForLoop4834416  for (jj=jjj; jj<=min(ny-1,jjj+240); jj=jj+16) {...",shape=box];
	ForLoop4834416 -> 4874120;
	ForLoop4834416 -> _JOIN_4834416;
	4879230 [label="4879230  register int cbv_12, cbv_13;...",shape=box];
	ForLoop4836673 [label="ForLoop4836673  for (k=cbv_6; k<=cbv_7; k=k+1) {...",shape=box];
	ForLoop4836673 -> 4845430;
	ForLoop4836673 -> _JOIN_4836673;
	4834203 [label="4834203  int i;...",shape=box];
	4834203 -> ForLoop4839157;
	4875306 [label="4875306  register int cbv_3, cbv_4;...",shape=box];
	_JOIN_4840313 [label="_JOIN_4840313None...",shape=box];
	_JOIN_4840313 -> 4840345;
	4840345 [label="4840345  for (k=kk; k<=min(ny-1,kk+63); k=k+1) ...",shape=box];
	4840345 -> _JOIN_4840347;
	4793717 [label="4793717  int i;...",shape=box];
	ForLoop4836593 [label="ForLoop4836593  for (k=kk; k<=cbv_5; k=k+28) {...",shape=box];
	ForLoop4836593 -> 4844642;
	ForLoop4836593 -> _JOIN_4836593;
	4867170 [label="4867170  double scv_151;...",shape=box];
	ForLoop4839121 [label="ForLoop4839121  for (k=cbv_12; k<=cbv_13; k=k+1) {...",shape=box];
	ForLoop4839121 -> 4850308;
	ForLoop4839121 -> _JOIN_4839121;
	_JOIN_4839121 [label="_JOIN_4839121None...",shape=box];
	_JOIN_4839121 -> 4839153;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest26.exe __orio_perftest26.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest26.exe  
{'[6, 1, 3, 0, 3, 0, 0, 1, 23, 3, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.131977}
{'[6, 1, 3, 0, 3, 0, 0, 1, 23, 3, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.131476}
{'[6, 1, 3, 0, 3, 0, 0, 1, 23, 3, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.131499}
{'[6, 1, 3, 0, 3, 0, 0, 1, 23, 3, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.131643}
{'[6, 1, 3, 0, 3, 0, 0, 1, 23, 3, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.131517}
{'[6, 1, 3, 0, 3, 0, 0, 1, 23, 3, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.131536}
{'[6, 1, 3, 0, 3, 0, 0, 1, 23, 3, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.131449}
{'[6, 1, 3, 0, 3, 0, 0, 1, 23, 3, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.131486}
{'[6, 1, 3, 0, 3, 0, 0, 1, 23, 3, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.131665}
{'[6, 1, 3, 0, 3, 0, 0, 1, 23, 3, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.131418}
{'[6, 1, 3, 0, 3, 0, 0, 1, 23, 3, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.131601}
{'[6, 1, 3, 0, 3, 0, 0, 1, 23, 3, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.131557}
{'[6, 1, 3, 0, 3, 0, 0, 1, 23, 3, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.131615}
{'[6, 1, 3, 0, 3, 0, 0, 1, 23, 3, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.131495}
{'[6, 1, 3, 0, 3, 0, 0, 1, 23, 3, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.131692}
{'[6, 1, 3, 0, 3, 0, 0, 1, 23, 3, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.131557}
{'[6, 1, 3, 0, 3, 0, 0, 1, 23, 3, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.131595}
{'[6, 1, 3, 0, 3, 0, 0, 1, 23, 3, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.131526}
{'[6, 1, 3, 0, 3, 0, 0, 1, 23, 3, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.131393}
{'[6, 1, 3, 0, 3, 0, 0, 1, 23, 3, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.131492}
{'[6, 1, 3, 0, 3, 0, 0, 1, 23, 3, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.131612}
{'[6, 1, 3, 0, 3, 0, 0, 1, 23, 3, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.131423}
{'[6, 1, 3, 0, 3, 0, 0, 1, 23, 3, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.13147}
{'[6, 1, 3, 0, 3, 0, 0, 1, 23, 3, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.131657}
{'[6, 1, 3, 0, 3, 0, 0, 1, 23, 3, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.131364}
{'[6, 1, 3, 0, 3, 0, 0, 1, 23, 3, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.131629}
{'[6, 1, 3, 0, 3, 0, 0, 1, 23, 3, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.131606}
{'[6, 1, 3, 0, 3, 0, 0, 1, 23, 3, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.131512}
{'[6, 1, 3, 0, 3, 0, 0, 1, 23, 3, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.131497}
{'[6, 1, 3, 0, 3, 0, 0, 1, 23, 3, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.131483}

out:
 ["{'[6, 1, 3, 0, 3, 0, 0, 1, 23, 3, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.131977}", "{'[6, 1, 3, 0, 3, 0, 0, 1, 23, 3, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.131476}", "{'[6, 1, 3, 0, 3, 0, 0, 1, 23, 3, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.131499}", "{'[6, 1, 3, 0, 3, 0, 0, 1, 23, 3, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.131643}", "{'[6, 1, 3, 0, 3, 0, 0, 1, 23, 3, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.131517}", "{'[6, 1, 3, 0, 3, 0, 0, 1, 23, 3, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.131536}", "{'[6, 1, 3, 0, 3, 0, 0, 1, 23, 3, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.131449}", "{'[6, 1, 3, 0, 3, 0, 0, 1, 23, 3, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.131486}", "{'[6, 1, 3, 0, 3, 0, 0, 1, 23, 3, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.131665}", "{'[6, 1, 3, 0, 3, 0, 0, 1, 23, 3, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.131418}", "{'[6, 1, 3, 0, 3, 0, 0, 1, 23, 3, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.131601}", "{'[6, 1, 3, 0, 3, 0, 0, 1, 23, 3, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.131557}", "{'[6, 1, 3, 0, 3, 0, 0, 1, 23, 3, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.131615}", "{'[6, 1, 3, 0, 3, 0, 0, 1, 23, 3, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.131495}", "{'[6, 1, 3, 0, 3, 0, 0, 1, 23, 3, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.131692}", "{'[6, 1, 3, 0, 3, 0, 0, 1, 23, 3, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.131557}", "{'[6, 1, 3, 0, 3, 0, 0, 1, 23, 3, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.131595}", "{'[6, 1, 3, 0, 3, 0, 0, 1, 23, 3, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.131526}", "{'[6, 1, 3, 0, 3, 0, 0, 1, 23, 3, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.131393}", "{'[6, 1, 3, 0, 3, 0, 0, 1, 23, 3, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.131492}", "{'[6, 1, 3, 0, 3, 0, 0, 1, 23, 3, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.131612}", "{'[6, 1, 3, 0, 3, 0, 0, 1, 23, 3, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.131423}", "{'[6, 1, 3, 0, 3, 0, 0, 1, 23, 3, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.13147}", "{'[6, 1, 3, 0, 3, 0, 0, 1, 23, 3, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.131657}", "{'[6, 1, 3, 0, 3, 0, 0, 1, 23, 3, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.131364}", "{'[6, 1, 3, 0, 3, 0, 0, 1, 23, 3, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.131629}", "{'[6, 1, 3, 0, 3, 0, 0, 1, 23, 3, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.131606}", "{'[6, 1, 3, 0, 3, 0, 0, 1, 23, 3, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.131512}", "{'[6, 1, 3, 0, 3, 0, 0, 1, 23, 3, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.131497}", "{'[6, 1, 3, 0, 3, 0, 0, 1, 23, 3, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.131483}"]
returning from 'run': {'[6, 1, 3, 0, 3, 0, 0, 1, 23, 3, 0, 27, 0, 0, 0, 1, 1, 1]': ([0.131977, 0.131476, 0.131499, 0.131643, 0.131517, 0.131536, 0.131449, 0.131486, 0.131665, 0.131418, 0.131601, 0.131557, 0.131615, 0.131495, 0.131692, 0.131557, 0.131595, 0.131526, 0.131393, 0.131492, 0.131612, 0.131423, 0.13147, 0.131657, 0.131364, 0.131629, 0.131606, 0.131512, 0.131497, 0.131483], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.131977, 0.131476, 0.131499, 0.131643, 0.131517, 0.131536, 0.131449, 0.131486, 0.131665, 0.131418, 0.131601, 0.131557, 0.131615, 0.131495, 0.131692, 0.131557, 0.131595, 0.131526, 0.131393, 0.131492, 0.131612, 0.131423, 0.13147, 0.131657, 0.131364, 0.131629, 0.131606, 0.131512, 0.131497, 0.131483], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[6, 1, 3, 0, 3, 0, 0, 1, 23, 3, 0, 27, 0, 0, 0, 1, 1, 1]': ([0.131977, 0.131476, 0.131499, 0.131643, 0.131517, 0.131536, 0.131449, 0.131486, 0.131665, 0.131418, 0.131601, 0.131557, 0.131615, 0.131495, 0.131692, 0.131557, 0.131595, 0.131526, 0.131393, 0.131492, 0.131612, 0.131423, 0.13147, 0.131657, 0.131364, 0.131629, 0.131606, 0.131512, 0.131497, 0.131483], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [0, 4, 2, 5, 4, 1, 1, 1, 7, 7, 0, 9, 0, 0, 0, 1, 0, 1]
Fixed Factors: {}
Testing candidate 27: [0, 4, 2, 5, 4, 1, 1, 1, 7, 7, 0, 9, 0, 0, 0, 1, 0, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	60
        Max loop nest depth: 	5
        Additions: 		1067
        Multiplications: 	216
        Divisions: 		0
        Logical: 		0
        Reads: 			2276
        Writes: 		519
        Comparisons:		60
        Gotos: 			0
        
digraph CFG {
	_JOIN_4920600 [label="_JOIN_4920600None...",shape=box];
	_JOIN_4920600 -> 4920632;
	ForLoop4923878 [label="ForLoop4923878  for (i=iii; i<=min(nx-1,iii+1023)-7; i=i+8) {...",shape=box];
	ForLoop4923878 -> 4949059;
	ForLoop4923878 -> _JOIN_4923878;
	ForLoop4923876 [label="ForLoop4923876  for (kkk=0; kkk<=ny-1; kkk=kkk+64) {...",shape=box];
	ForLoop4923876 -> ForLoop4923874;
	ForLoop4923876 -> _JOIN_4923876;
	ForLoop4922140 [label="ForLoop4922140  for (k=kk; k<=cbv_14; k=k+10) {...",shape=box];
	ForLoop4922140 -> 4930224;
	ForLoop4922140 -> _JOIN_4922140;
	ForLoop4923874 [label="ForLoop4923874  for (kk=kkk; kk<=min(ny-1,kkk+32); kk=kk+32) {...",shape=box];
	ForLoop4923874 -> 4919649;
	ForLoop4923874 -> _JOIN_4923874;
	_JOIN_4922680 [label="_JOIN_4922680None...",shape=box];
	_JOIN_4922680 -> 4961868;
	4921712 [label="4921712  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	ForLoop4920060 [label="ForLoop4920060  for (k=cbv_3; k<=cbv_4; k=k+1) {...",shape=box];
	ForLoop4920060 -> 4926788;
	ForLoop4920060 -> _JOIN_4920060;
	_JOIN_4924037 [label="_JOIN_4924037None...",shape=box];
	_JOIN_4924037 -> _JOIN_4924038;
	4928674 [label="4928674  double scv_34;...",shape=box];
	_JOIN_4924035 [label="_JOIN_4924035None...",shape=box];
	_JOIN_4924035 -> _JOIN_4924037;
	4929281 [label="4929281  double scv_35, scv_36, scv_37, scv_38, scv_39, scv_40, scv_41, scv_42;...",shape=box];
	_JOIN_4924038 [label="_JOIN_4924038None...",shape=box];
	_JOIN_4924038 -> ForLoop4924546;
	4931167 [label="4931167  double scv_57, scv_58, scv_59, scv_60, scv_61, scv_62, scv_63, scv_64;...",shape=box];
	_JOIN_4922140 [label="_JOIN_4922140None...",shape=box];
	_JOIN_4922140 -> 4961300;
	4918933 [label="4918933  double x_copy[128];...",shape=box];
	4930560 [label="4930560  double scv_56;...",shape=box];
	_JOIN_4881030 [label="_JOIN_4881030None...",shape=box];
	_JOIN_4881030 -> ForLoop4881099;
	_JOIN_4919583 [label="_JOIN_4919583None...",shape=box];
	_JOIN_4919583 -> _JOIN_4919585;
	_JOIN_4919587 [label="_JOIN_4919587None...",shape=box];
	_JOIN_4919587 -> ForLoop4923876;
	_JOIN_4919585 [label="_JOIN_4919585None...",shape=box];
	_JOIN_4919585 -> _JOIN_4919587;
	4920092 [label="4920092  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	_JOIN_4919986 [label="_JOIN_4919986None...",shape=box];
	_JOIN_4919986 -> 4959028;
	4932110 [label="4932110  double scv_68, scv_69, scv_70, scv_71, scv_72, scv_73, scv_74, scv_75;...",shape=box];
	_JOIN_4923878 [label="_JOIN_4923878None...",shape=box];
	_JOIN_4923878 -> ForLoop4924548;
	_JOIN_4922760 [label="_JOIN_4922760None...",shape=box];
	_JOIN_4922760 -> 4922792;
	4952340 [label="4952340  tmp[i]=scv_109;...",shape=box];
	4952340 -> _JOIN_4924548;
	_JOIN_4923876 [label="_JOIN_4923876None...",shape=box];
	_JOIN_4923876 -> 4949077;
	ForLoop4923760 [label="ForLoop4923760  for (k=kk; k<=cbv_23; k=k+10) {...",shape=box];
	ForLoop4923760 -> 4933053;
	ForLoop4923760 -> _JOIN_4923760;
	4926461 [label="4926461  double scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8, scv_9;...",shape=box];
	4924939 [label="4924939  double scv_1;...",shape=box];
	4962436 [label="4962436  register int cbv_21, cbv_22;...",shape=box];
	4929617 [label="4929617  double scv_45;...",shape=box];
	_JOIN_4920060 [label="_JOIN_4920060None...",shape=box];
	_JOIN_4920060 -> 4920092;
	4918948 [label="4918948  int i;...",shape=box];
	4918948 -> ForLoop4923878;
	4930224 [label="4930224  double scv_46, scv_47, scv_48, scv_49, scv_50, scv_51, scv_52, scv_53;...",shape=box];
	4921172 [label="4921172  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	ForLoop4922760 [label="ForLoop4922760  for (k=cbv_18; k<=cbv_19; k=k+1) {...",shape=box];
	ForLoop4922760 -> 4931503;
	ForLoop4922760 -> _JOIN_4922760;
	4933053 [label="4933053  double scv_79, scv_80, scv_81, scv_82, scv_83, scv_84, scv_85, scv_86;...",shape=box];
	ForLoop4919587 [label="ForLoop4919587  for (jjj=0; jjj<=ny-1; jjj=jjj+512) {...",shape=box];
	ForLoop4919587 -> ForLoop4919585;
	ForLoop4919587 -> _JOIN_4919587;
	ForLoop4919585 [label="ForLoop4919585  for (jj=jjj; jj<=min(ny-1,jjj+384); jj=jj+128) {...",shape=box];
	ForLoop4919585 -> 4919099;
	ForLoop4919585 -> _JOIN_4919585;
	ForLoop4919583 [label="ForLoop4919583  for (j=jj; j<=cbv_1; j=j+1) {...",shape=box];
	ForLoop4919583 -> 4924939;
	ForLoop4919583 -> _JOIN_4919583;
	ForLoop4921680 [label="ForLoop4921680  for (k=cbv_12; k<=cbv_13; k=k+1) {...",shape=box];
	ForLoop4921680 -> 4929617;
	ForLoop4921680 -> _JOIN_4921680;
	4950377 [label="4950377  double scv_108;...",shape=box];
	4919649 [label="4919649  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	ForLoop4923840 [label="ForLoop4923840  for (k=cbv_24; k<=cbv_25; k=k+1) {...",shape=box];
	ForLoop4923840 -> 4933389;
	ForLoop4923840 -> _JOIN_4923840;
	ForLoop4921600 [label="ForLoop4921600  for (k=kk; k<=cbv_11; k=k+10) {...",shape=box];
	ForLoop4921600 -> 4929281;
	ForLoop4921600 -> _JOIN_4921600;
	4880965 [label="4880965  y[i]=0.0;...",shape=box];
	4927731 [label="4927731  double scv_23;...",shape=box];
	_JOIN_4921140 [label="_JOIN_4921140None...",shape=box];
	_JOIN_4921140 -> 4921172;
	_JOIN_4920520 [label="_JOIN_4920520None...",shape=box];
	_JOIN_4920520 -> 4959596;
	4924100 [label="4924100  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	ForLoop4924550 [label="ForLoop4924550  for (iii=0; iii<=nx-1; iii=iii+1024) {...",shape=box];
	ForLoop4924550 -> 4918948;
	ForLoop4924550 -> _JOIN_4924550;
	_JOIN_4923760 [label="_JOIN_4923760None...",shape=box];
	_JOIN_4923760 -> 4963004;
	4960164 [label="4960164  register int cbv_9, cbv_10;...",shape=box];
	4919099 [label="4919099  for (j=jj; j<=min(ny-1,jj+127); j=j+1) ...",shape=box];
	4959596 [label="4959596  register int cbv_6, cbv_7;...",shape=box];
	_JOIN_4924511 [label="_JOIN_4924511None...",shape=box];
	_JOIN_4924511 -> 4924543;
	4963587 [label="4963587  register int cbv_28, cbv_29;...",shape=box];
	ForLoop4924511 [label="ForLoop4924511  for (k=cbv_28; k<=cbv_29; k=k+1) {...",shape=box];
	ForLoop4924511 -> 4950377;
	ForLoop4924511 -> _JOIN_4924511;
	4933389 [label="4933389  double scv_89;...",shape=box];
	4961300 [label="4961300  register int cbv_15, cbv_16;...",shape=box];
	_JOIN_4921680 [label="_JOIN_4921680None...",shape=box];
	_JOIN_4921680 -> 4921712;
	4952328 [label="4952328  double scv_109;...",shape=box];
	4880803 [label="4880803  int i;...",shape=box];
	4880803 -> ForLoop4881030;
	ForLoop4924548 [label="ForLoop4924548  for (i=(min(nx-1,iii+1023))-(((min(nx-1,iii+1023))-(iii)+1)%8)+1; i<=min(nx-1,iii+1023); i=i+1) {...",shape=box];
	ForLoop4924548 -> 4952328;
	ForLoop4924548 -> _JOIN_4924548;
	ForLoop4924546 [label="ForLoop4924546  for (kkk=0; kkk<=ny-1; kkk=kkk+64) {...",shape=box];
	ForLoop4924546 -> ForLoop4924545;
	ForLoop4924546 -> _JOIN_4924546;
	ForLoop4924545 [label="ForLoop4924545  for (kk=kkk; kk<=min(ny-1,kkk+32); kk=kk+32) {...",shape=box];
	ForLoop4924545 -> 4924100;
	ForLoop4924545 -> _JOIN_4924545;
	_JOIN_4921600 [label="_JOIN_4921600None...",shape=box];
	_JOIN_4921600 -> 4960732;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 4880803;
	4928338 [label="4928338  double scv_24, scv_25, scv_26, scv_27, scv_28, scv_29, scv_30, scv_31;...",shape=box];
	4923993 [label="4923993  for (j=jj; j<=min(ny-1,jj+127); j=j+1) ...",shape=box];
	ForLoop4922220 [label="ForLoop4922220  for (k=cbv_15; k<=cbv_16; k=k+1) {...",shape=box];
	ForLoop4922220 -> 4930560;
	ForLoop4922220 -> _JOIN_4922220;
	4927395 [label="4927395  double scv_13, scv_14, scv_15, scv_16, scv_17, scv_18, scv_19, scv_20;...",shape=box];
	4926788 [label="4926788  double scv_12;...",shape=box];
	ForLoop4921140 [label="ForLoop4921140  for (k=cbv_9; k<=cbv_10; k=k+1) {...",shape=box];
	ForLoop4921140 -> 4928674;
	ForLoop4921140 -> _JOIN_4921140;
	4950050 [label="4950050  double scv_98, scv_99, scv_100, scv_101, scv_102, scv_103, scv_104, scv_105;...",shape=box];
	4949059 [label="4949059  double scv_90, scv_91, scv_92, scv_93, scv_94, scv_95, scv_96, scv_97;...",shape=box];
	_JOIN_4881099 [label="_JOIN_4881099None...",shape=box];
	_JOIN_4881099 -> 4918933;
	ForLoop4921060 [label="ForLoop4921060  for (k=kk; k<=cbv_8; k=k+10) {...",shape=box];
	ForLoop4921060 -> 4928338;
	ForLoop4921060 -> _JOIN_4921060;
	ForLoop4923220 [label="ForLoop4923220  for (k=kk; k<=cbv_20; k=k+10) {...",shape=box];
	ForLoop4923220 -expected=9369846271501.798828
actual=9369846271501.798828
> 4932110;
	ForLoop4923220 -> _JOIN_4923220;
	_JOIN_4924546 [label="_JOIN_4924546None...",shape=box];
	_JOIN_4924546 -> 4952340;
	_JOIN_4924545 [label="_JOIN_4924545None...",shape=box];
	_JOIN_4924545 -> _JOIN_4924546;
	_JOIN_4923220 [label="_JOIN_4923220None...",shape=box];
	_JOIN_4923220 -> 4962436;
	_JOIN_4924548 [label="_JOIN_4924548None...",shape=box];
	_JOIN_4924548 -> _JOIN_4924550;
	4922252 [label="4922252  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	ForLoop4924437 [label="ForLoop4924437  for (k=kk; k<=cbv_27; k=k+10) {...",shape=box];
	ForLoop4924437 -> 4950050;
	ForLoop4924437 -> _JOIN_4924437;
	4931503 [label="4931503  double scv_67;...",shape=box];
	4963004 [label="4963004  register int cbv_24, cbv_25;...",shape=box];
	4961868 [label="4961868  register int cbv_18, cbv_19;...",shape=box];
	ForLoop4919986 [label="ForLoop4919986  for (k=kk; k<=cbv_2; k=k+10) {...",shape=box];
	ForLoop4919986 -> 4926461;
	ForLoop4919986 -> _JOIN_4919986;
	ForLoop4924037 [label="ForLoop4924037  for (jj=jjj; jj<=min(ny-1,jjj+384); jj=jj+128) {...",shape=box];
	ForLoop4924037 -> 4923993;
	ForLoop4924037 -> _JOIN_4924037;
	ForLoop4924035 [label="ForLoop4924035  for (j=jj; j<=cbv_26; j=j+1) {...",shape=box];
	ForLoop4924035 -> 4924034;
	ForLoop4924035 -> _JOIN_4924035;
	ForLoop4881030 [label="ForLoop4881030  for (i=0; i<=ny-8; i=i+8) {...",shape=box];
	ForLoop4881030 -> 4880965;
	ForLoop4881030 -> _JOIN_4881030;
	4924543 [label="4924543  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	4924543 -> _JOIN_4924545;
	ForLoop4924038 [label="ForLoop4924038  for (jjj=0; jjj<=ny-1; jjj=jjj+512) {...",shape=box];
	ForLoop4924038 -> ForLoop4924037;
	ForLoop4924038 -> _JOIN_4924038;
	_JOIN_4923300 [label="_JOIN_4923300None...",shape=box];
	_JOIN_4923300 -> 4923332;
	_JOIN_4922220 [label="_JOIN_4922220None...",shape=box];
	_JOIN_4922220 -> 4922252;
	4881098 [label="4881098  y[i]=0.0;...",shape=box];
	4881098 -> _JOIN_4881099;
	ForLoop4881099 [label="ForLoop4881099  for (i=ny-((ny-(0))%8); i<=ny-1; i=i+1) ...",shape=box];
	ForLoop4881099 -> 4881098;
	ForLoop4881099 -> _JOIN_4881099;
	ForLoop4923300 [label="ForLoop4923300  for (k=cbv_21; k<=cbv_22; k=k+1) {...",shape=box];
	ForLoop4923300 -> 4932446;
	ForLoop4923300 -> _JOIN_4923300;
	4923872 [label="4923872  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	4923872 -> _JOIN_4923874;
	4959028 [label="4959028  register int cbv_3, cbv_4;...",shape=box];
	4924034 [label="4924034  scv_109=scv_109+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	4924034 -> _JOIN_4924035;
	4922792 [label="4922792  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	4949077 [label="4949077  tmp[(i+1)]=scv_90;...",shape=box];
	4932446 [label="4932446  double scv_78;...",shape=box];
	ForLoop4920600 [label="ForLoop4920600  for (k=cbv_6; k<=cbv_7; k=k+1) {...",shape=box];
	ForLoop4920600 -> 4927731;
	ForLoop4920600 -> _JOIN_4920600;
	_JOIN_4924437 [label="_JOIN_4924437None...",shape=box];
	_JOIN_4924437 -> 4963587;
	ForLoop4922680 [label="ForLoop4922680  for (k=kk; k<=cbv_17; k=k+10) {...",shape=box];
	ForLoop4922680 -> 4931167;
	ForLoop4922680 -> _JOIN_4922680;
	ForLoop4920520 [label="ForLoop4920520  for (k=kk; k<=cbv_5; k=k+10) {...",shape=box];
	ForLoop4920520 -> 4927395;
	ForLoop4920520 -> _JOIN_4920520;
	4960732 [label="4960732  register int cbv_12, cbv_13;...",shape=box];
	4920632 [label="4920632  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	_JOIN_4921060 [label="_JOIN_4921060None...",shape=box];
	_JOIN_4921060 -> 4960164;
	_JOIN_4923840 [label="_JOIN_4923840None...",shape=box];
	_JOIN_4923840 -> 4923872;
	_JOIN_4923874 [label="_JOIN_4923874None...",shape=box];
	_JOIN_4923874 -> _JOIN_4923876;
	_JOIN_4924550 [label="_JOIN_4924550None...",shape=box];
	4923332 [label="4923332  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest27.exe __orio_perftest27.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest27.exe  
{'[0, 4, 2, 5, 4, 1, 1, 1, 7, 7, 0, 9, 0, 0, 0, 1, 0, 1]' : 0.178397}
{'[0, 4, 2, 5, 4, 1, 1, 1, 7, 7, 0, 9, 0, 0, 0, 1, 0, 1]' : 0.178217}
{'[0, 4, 2, 5, 4, 1, 1, 1, 7, 7, 0, 9, 0, 0, 0, 1, 0, 1]' : 0.178081}
{'[0, 4, 2, 5, 4, 1, 1, 1, 7, 7, 0, 9, 0, 0, 0, 1, 0, 1]' : 0.178183}
{'[0, 4, 2, 5, 4, 1, 1, 1, 7, 7, 0, 9, 0, 0, 0, 1, 0, 1]' : 0.178048}
{'[0, 4, 2, 5, 4, 1, 1, 1, 7, 7, 0, 9, 0, 0, 0, 1, 0, 1]' : 0.178244}
{'[0, 4, 2, 5, 4, 1, 1, 1, 7, 7, 0, 9, 0, 0, 0, 1, 0, 1]' : 0.178005}
{'[0, 4, 2, 5, 4, 1, 1, 1, 7, 7, 0, 9, 0, 0, 0, 1, 0, 1]' : 0.178058}
{'[0, 4, 2, 5, 4, 1, 1, 1, 7, 7, 0, 9, 0, 0, 0, 1, 0, 1]' : 0.178122}
{'[0, 4, 2, 5, 4, 1, 1, 1, 7, 7, 0, 9, 0, 0, 0, 1, 0, 1]' : 0.178049}
{'[0, 4, 2, 5, 4, 1, 1, 1, 7, 7, 0, 9, 0, 0, 0, 1, 0, 1]' : 0.178126}
{'[0, 4, 2, 5, 4, 1, 1, 1, 7, 7, 0, 9, 0, 0, 0, 1, 0, 1]' : 0.17824}
{'[0, 4, 2, 5, 4, 1, 1, 1, 7, 7, 0, 9, 0, 0, 0, 1, 0, 1]' : 0.178121}
{'[0, 4, 2, 5, 4, 1, 1, 1, 7, 7, 0, 9, 0, 0, 0, 1, 0, 1]' : 0.178059}
{'[0, 4, 2, 5, 4, 1, 1, 1, 7, 7, 0, 9, 0, 0, 0, 1, 0, 1]' : 0.178267}
{'[0, 4, 2, 5, 4, 1, 1, 1, 7, 7, 0, 9, 0, 0, 0, 1, 0, 1]' : 0.177965}
{'[0, 4, 2, 5, 4, 1, 1, 1, 7, 7, 0, 9, 0, 0, 0, 1, 0, 1]' : 0.17819}
{'[0, 4, 2, 5, 4, 1, 1, 1, 7, 7, 0, 9, 0, 0, 0, 1, 0, 1]' : 0.1781}
{'[0, 4, 2, 5, 4, 1, 1, 1, 7, 7, 0, 9, 0, 0, 0, 1, 0, 1]' : 0.178307}
{'[0, 4, 2, 5, 4, 1, 1, 1, 7, 7, 0, 9, 0, 0, 0, 1, 0, 1]' : 0.178276}
{'[0, 4, 2, 5, 4, 1, 1, 1, 7, 7, 0, 9, 0, 0, 0, 1, 0, 1]' : 0.178091}
{'[0, 4, 2, 5, 4, 1, 1, 1, 7, 7, 0, 9, 0, 0, 0, 1, 0, 1]' : 0.178117}
{'[0, 4, 2, 5, 4, 1, 1, 1, 7, 7, 0, 9, 0, 0, 0, 1, 0, 1]' : 0.178249}
{'[0, 4, 2, 5, 4, 1, 1, 1, 7, 7, 0, 9, 0, 0, 0, 1, 0, 1]' : 0.178029}
{'[0, 4, 2, 5, 4, 1, 1, 1, 7, 7, 0, 9, 0, 0, 0, 1, 0, 1]' : 0.178061}
{'[0, 4, 2, 5, 4, 1, 1, 1, 7, 7, 0, 9, 0, 0, 0, 1, 0, 1]' : 0.178061}
{'[0, 4, 2, 5, 4, 1, 1, 1, 7, 7, 0, 9, 0, 0, 0, 1, 0, 1]' : 0.178139}
{'[0, 4, 2, 5, 4, 1, 1, 1, 7, 7, 0, 9, 0, 0, 0, 1, 0, 1]' : 0.178219}
{'[0, 4, 2, 5, 4, 1, 1, 1, 7, 7, 0, 9, 0, 0, 0, 1, 0, 1]' : 0.17817}
{'[0, 4, 2, 5, 4, 1, 1, 1, 7, 7, 0, 9, 0, 0, 0, 1, 0, 1]' : 0.178097}

out:
 ["{'[0, 4, 2, 5, 4, 1, 1, 1, 7, 7, 0, 9, 0, 0, 0, 1, 0, 1]' : 0.178397}", "{'[0, 4, 2, 5, 4, 1, 1, 1, 7, 7, 0, 9, 0, 0, 0, 1, 0, 1]' : 0.178217}", "{'[0, 4, 2, 5, 4, 1, 1, 1, 7, 7, 0, 9, 0, 0, 0, 1, 0, 1]' : 0.178081}", "{'[0, 4, 2, 5, 4, 1, 1, 1, 7, 7, 0, 9, 0, 0, 0, 1, 0, 1]' : 0.178183}", "{'[0, 4, 2, 5, 4, 1, 1, 1, 7, 7, 0, 9, 0, 0, 0, 1, 0, 1]' : 0.178048}", "{'[0, 4, 2, 5, 4, 1, 1, 1, 7, 7, 0, 9, 0, 0, 0, 1, 0, 1]' : 0.178244}", "{'[0, 4, 2, 5, 4, 1, 1, 1, 7, 7, 0, 9, 0, 0, 0, 1, 0, 1]' : 0.178005}", "{'[0, 4, 2, 5, 4, 1, 1, 1, 7, 7, 0, 9, 0, 0, 0, 1, 0, 1]' : 0.178058}", "{'[0, 4, 2, 5, 4, 1, 1, 1, 7, 7, 0, 9, 0, 0, 0, 1, 0, 1]' : 0.178122}", "{'[0, 4, 2, 5, 4, 1, 1, 1, 7, 7, 0, 9, 0, 0, 0, 1, 0, 1]' : 0.178049}", "{'[0, 4, 2, 5, 4, 1, 1, 1, 7, 7, 0, 9, 0, 0, 0, 1, 0, 1]' : 0.178126}", "{'[0, 4, 2, 5, 4, 1, 1, 1, 7, 7, 0, 9, 0, 0, 0, 1, 0, 1]' : 0.17824}", "{'[0, 4, 2, 5, 4, 1, 1, 1, 7, 7, 0, 9, 0, 0, 0, 1, 0, 1]' : 0.178121}", "{'[0, 4, 2, 5, 4, 1, 1, 1, 7, 7, 0, 9, 0, 0, 0, 1, 0, 1]' : 0.178059}", "{'[0, 4, 2, 5, 4, 1, 1, 1, 7, 7, 0, 9, 0, 0, 0, 1, 0, 1]' : 0.178267}", "{'[0, 4, 2, 5, 4, 1, 1, 1, 7, 7, 0, 9, 0, 0, 0, 1, 0, 1]' : 0.177965}", "{'[0, 4, 2, 5, 4, 1, 1, 1, 7, 7, 0, 9, 0, 0, 0, 1, 0, 1]' : 0.17819}", "{'[0, 4, 2, 5, 4, 1, 1, 1, 7, 7, 0, 9, 0, 0, 0, 1, 0, 1]' : 0.1781}", "{'[0, 4, 2, 5, 4, 1, 1, 1, 7, 7, 0, 9, 0, 0, 0, 1, 0, 1]' : 0.178307}", "{'[0, 4, 2, 5, 4, 1, 1, 1, 7, 7, 0, 9, 0, 0, 0, 1, 0, 1]' : 0.178276}", "{'[0, 4, 2, 5, 4, 1, 1, 1, 7, 7, 0, 9, 0, 0, 0, 1, 0, 1]' : 0.178091}", "{'[0, 4, 2, 5, 4, 1, 1, 1, 7, 7, 0, 9, 0, 0, 0, 1, 0, 1]' : 0.178117}", "{'[0, 4, 2, 5, 4, 1, 1, 1, 7, 7, 0, 9, 0, 0, 0, 1, 0, 1]' : 0.178249}", "{'[0, 4, 2, 5, 4, 1, 1, 1, 7, 7, 0, 9, 0, 0, 0, 1, 0, 1]' : 0.178029}", "{'[0, 4, 2, 5, 4, 1, 1, 1, 7, 7, 0, 9, 0, 0, 0, 1, 0, 1]' : 0.178061}", "{'[0, 4, 2, 5, 4, 1, 1, 1, 7, 7, 0, 9, 0, 0, 0, 1, 0, 1]' : 0.178061}", "{'[0, 4, 2, 5, 4, 1, 1, 1, 7, 7, 0, 9, 0, 0, 0, 1, 0, 1]' : 0.178139}", "{'[0, 4, 2, 5, 4, 1, 1, 1, 7, 7, 0, 9, 0, 0, 0, 1, 0, 1]' : 0.178219}", "{'[0, 4, 2, 5, 4, 1, 1, 1, 7, 7, 0, 9, 0, 0, 0, 1, 0, 1]' : 0.17817}", "{'[0, 4, 2, 5, 4, 1, 1, 1, 7, 7, 0, 9, 0, 0, 0, 1, 0, 1]' : 0.178097}"]
returning from 'run': {'[0, 4, 2, 5, 4, 1, 1, 1, 7, 7, 0, 9, 0, 0, 0, 1, 0, 1]': ([0.178397, 0.178217, 0.178081, 0.178183, 0.178048, 0.178244, 0.178005, 0.178058, 0.178122, 0.178049, 0.178126, 0.17824, 0.178121, 0.178059, 0.178267, 0.177965, 0.17819, 0.1781, 0.178307, 0.178276, 0.178091, 0.178117, 0.178249, 0.178029, 0.178061, 0.178061, 0.178139, 0.178219, 0.17817, 0.178097], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.178397, 0.178217, 0.178081, 0.178183, 0.178048, 0.178244, 0.178005, 0.178058, 0.178122, 0.178049, 0.178126, 0.17824, 0.178121, 0.178059, 0.178267, 0.177965, 0.17819, 0.1781, 0.178307, 0.178276, 0.178091, 0.178117, 0.178249, 0.178029, 0.178061, 0.178061, 0.178139, 0.178219, 0.17817, 0.178097], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[0, 4, 2, 5, 4, 1, 1, 1, 7, 7, 0, 9, 0, 0, 0, 1, 0, 1]': ([0.178397, 0.178217, 0.178081, 0.178183, 0.178048, 0.178244, 0.178005, 0.178058, 0.178122, 0.178049, 0.178126, 0.17824, 0.178121, 0.178059, 0.178267, 0.177965, 0.17819, 0.1781, 0.178307, 0.178276, 0.178091, 0.178117, 0.178249, 0.178029, 0.178061, 0.178061, 0.178139, 0.178219, 0.17817, 0.178097], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [5, 5, 5, 0, 5, 6, 1, 0, 29, 10, 0, 26, 1, 0, 0, 1, 1, 0]
Fixed Factors: {}
Testing candidate 28: [5, 5, 5, 0, 5, 6, 1, 0, 29, 10, 0, 26, 1, 0, 0, 1, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	40
        Max loop nest depth: 	5
        Additions: 		2563
        Multiplications: 	1160
        Divisions: 		0
        Logical: 		0
        Reads: 			5120
        Writes: 		930
        Comparisons:		40
        Gotos: 			0
        
digraph CFG {
	5183056 [label="5183056  double scv_105;...",shape=box];
	_JOIN_5096874 [label="_JOIN_5096874None...",shape=box];
	_JOIN_5096874 -> ForLoop5097125;
	5108425 [label="5108425  int k;...",shape=box];
	5108425 -> ForLoop5109195;
	ForLoop5109265 [label="ForLoop5109265  for (kk=kkk; kk<=min(ny-1,kkk+1792); kk=kk+256) {...",shape=box];
	ForLoop5109265 -> 5108425;
	ForLoop5109265 -> _JOIN_5109265;
	ForLoop5108393 [label="ForLoop5108393  for (jjj=0; jjj<=ny-1; jjj=jjj+1024) {...",shape=box];
	ForLoop5108393 -> ForLoop5108392;
	ForLoop5108393 -> _JOIN_5108393;
	5139887 [label="5139887  double scv_38;...",shape=box];
	ForLoop4964694 [label="ForLoop4964694  for (i=0; i<=cbv_1; i=i+30) {...",shape=box];
	ForLoop4964694 -> 4964431;
	ForLoop4964694 -> _JOIN_4964694;
	4965074 [label="4965074  register int cbv_2, cbv_3;...",shape=box];
	ForLoop5109271 [label="ForLoop5109271  for (ii=0; ii<=nx-1; ii=ii+256) {...",shape=box];
	ForLoop5109271 -> ForLoop5097130;
	ForLoop5109271 -> _JOIN_5109271;
	_JOIN_5109263 [label="_JOIN_5109263None...",shape=box];
	_JOIN_5109263 -> _JOIN_5109265;
	5097309 [label="5097309  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	4964762 [label="4964762  y[i]=0.0;...",shape=box];
	4964762 -> _JOIN_4964763;
	ForLoop5109263 [label="ForLoop5109263  for (k=(min(ny-1,kk+255))-(((min(ny-1,kk+255))-(kk)+1)%27)+1; k<=min(ny-1,kk+255); k=k+1) {...",shape=box];
	ForLoop5109263 -> 5183056;
	ForLoop5109263 -> _JOIN_5109263;
	5098018 [label="5098018  int k;...",shape=box];
	5108389 [label="5108389  scv_106=scv_106+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	5108389 -> _JOIN_5108390;
	5186522 [label="5186522  tmp[i]=scv_106;...",shape=box];
	5186522 -> _JOIN_5109268;
	_JOIN_4964694 [label="_JOIN_4964694None...",shape=box];
	_JOIN_4964694 -> 4965074;
	_JOIN_5108233 [label="_JOIN_5108233None...",shape=box];
	_JOIN_5108233 -> ForLoop5109268;
	_JOIN_5097128 [label="_JOIN_5097128None...",shape=box];
	_JOIN_5097128 -> 5138980;
	5089432 [label="5089432  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	5089432 -> ForLoop5089699;
	ForLoop5108392 [label="ForLoop5108392  for (jj=jjj; jj<=min(ny-1,jjj+768); jj=jj+256) {...",shape=box];
	ForLoop5108392 -> 5108348;
	ForLoop5108392 -> _JOIN_5108392;
	_JOIN_5097125 [label="_JOIN_5097125None...",shape=box];
	_JOIN_5097125 -> _JOIN_5097127;
	ForLoop5097130 [label="ForLoop5097130  for (it=ii; it<=min(nx-1,ii+255)-7; it=it+8) {...",shape=box];
	ForLoop5097130 -> 5138968;
	ForLoop5097130 -> _JOIN_5097130;
	ForLoop5108231 [label="ForLoop5108231  for (kkk=0; kkk<=ny-1; kkk=kkk+2048) {...",shape=box];
	ForLoop5108231 -> ForLoop5108229;
	ForLoop5108231 -> _JOIN_5108231;
	_JOIN_5097127 [label="_JOIN_5097127None...",shape=box];
	_JOIN_5097127 -> _JOIN_5097128;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 4963939;
	5154748 [label="5154748  double scv_39, scv_40, scv_41, scv_42, scv_43, scv_44, scv_45, scv_46;...",shape=box];
	_JOIN_4964763 [label="_JOIN_4964763None...",shape=box];
	_JOIN_4964763 -> 5089330;
	ForLoop5109268 [label="ForLoop5109268  for (i=(min(nx-1,ii+255))-(((min(nx-1,ii+255))-(it)+1)%11)+1; i<=min(nx-1,ii+255); i=i+1) {...",shape=box];
	ForLoop5109268 -> 5186510;
	ForLoop5109268 -> _JOIN_5109268;
	ForLoop5109266 [label="ForLoop5109266  for (kkk=0; kkk<=ny-1; kkk=kkk+2048) {...",shape=box];
	ForLoop5109266 -> ForLoop5109265;
	ForLoop5109266 -> _JOIN_5109266;
	ForLoop5107898 [label="ForLoop5107898  for (k=kk; k<=min(ny-1,kk+255)-26; k=k+27) {...",shape=box];
	ForLoop5107898 -> 5154748;
	ForLoop5107898 -> _JOIN_5107898;
	ForLoop5108233 [label="ForLoop5108233  for (i=it; i<=min(nx-1,ii+255)-10; i=i+11) {...",shape=box];
	ForLoop5108233 -> 5180475;
	ForLoop5108233 -> _JOIN_5108233;
	5180475 [label="5180475  double scv_67, scv_68, scv_69, scv_70, scv_71, scv_72, scv_73, scv_74;...",shape=box];
	ForLoop5097982 [label="ForLoop5097982  for (j=jj; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop5097982 -> 5139887;
	ForLoop5097982 -> _JOIN_5097982;
	_JOIN_5107898 [label="_JOIN_5107898None...",shape=box];
	_JOIN_5107898 -> ForLoop5108227;
	_JOIN_5097130 [label="_JOIN_5097130None...",shape=box];
	_JOIN_5097130 -> 5097131;
	5186510 [label="5186510  double scv_106;...",shape=box];
	ForLoop5097984 [label="ForLoop5097984  for (jj=jjj; jj<=min(ny-1,jjj+768); jj=jj+256) {...",shape=box];
	ForLoop5097984 -> 5097309;
	ForLoop5097984 -> _JOIN_5097984;
	5121306 [label="5121306  double scv_29;...",shape=box];
	_JOIN_5109265 [label="_JOIN_5109265None...",shape=box];
	_JOIN_5109265 -> _JOIN_5109266;
	5097131 [label="5097131  int i;...",shape=box];
	5097131 -> ForLoop5108233;
	ForLoop5097986 [label="ForLoop5097986  for (jjj=0; jjj<=ny-1; jjj=jjj+1024) {...",shape=box];
	ForLoop5097986 -> ForLoop5097984;
	ForLoop5097986 -> _JOIN_5097986;
	ForLoop4964763 [label="ForLoop4964763  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop4964763 -> 4964762;
	ForLoop4964763 -> _JOIN_4964763;
	_JOIN_5108390 [label="_JOIN_5108390None...",shape=box];
	_JOIN_5108390 -> _JOIN_5108392;
	_JOIN_5108393 [label="_JOIN_5108393None...",shape=box];
	_JOIN_5108393 -> ForLoop5109266;
	_JOIN_5108392 [label="_JOIN_5108392None...",shape=box];
	_JOIN_5108392 -> _JOIN_5108393;
	ForLoop5096874 [label="ForLoop5096874  for (k=kk; k<=min(ny-1,kk+255)-26; k=k+27) {...",shape=box];
	ForLoop5096874 -> 5120040;
	ForLoop5096874 -> _JOIN_5096874;
	ForLoop5089699 [label="ForLoop5089699  for (j=jj; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop5089699 -> 5109660;
	ForLoop5089699 -> _JOIN_5089699;
	_JOIN_5109268 [label="_JOIN_5109268None...",shape=box];
	_JOIN_5109268 -> _JOIN_5109271;
	5089734 [label="5089734  int k;...",shape=box];
	5089734 -> ForLoop5096874;
	_JOIN_5109266 [label="_JOIN_5109266None...",shape=box];
	_JOIN_5109266 -> 5186522;
	_JOIN_5097982 [label="_JOIN_5097982None...",shape=box];
	_JOIN_5097982 -> _JOIN_5097984;
	5108348 [label="5108348  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	5108348 -> ForLoop5108390;
	_JOIN_5108231 [label="_JOIN_5108231None...",shape=box];
	_JOIN_5108231 -> 5180493;
	_JOIN_5097986 expected=9369846271501.798828
actual=9369846271501.798828
[label="_JOIN_5097986None...",shape=box];
	_JOIN_5097986 -> ForLoop5108231;
	4964431 [label="4964431  y[i]=0.0;...",shape=box];
	_JOIN_5097984 [label="_JOIN_5097984None...",shape=box];
	_JOIN_5097984 -> _JOIN_5097986;
	ForLoop5097128 [label="ForLoop5097128  for (kkk=0; kkk<=ny-1; kkk=kkk+2048) {...",shape=box];
	ForLoop5097128 -> ForLoop5097127;
	ForLoop5097128 -> _JOIN_5097128;
	ForLoop5109195 [label="ForLoop5109195  for (k=kk; k<=min(ny-1,kk+255)-26; k=k+27) {...",shape=box];
	ForLoop5109195 -> 5182421;
	ForLoop5109195 -> _JOIN_5109195;
	5182421 [label="5182421  double scv_78, scv_79, scv_80, scv_81, scv_82, scv_83, scv_84, scv_85;...",shape=box];
	_JOIN_5109271 [label="_JOIN_5109271None...",shape=box];
	ForLoop5097125 [label="ForLoop5097125  for (k=(min(ny-1,kk+255))-(((min(ny-1,kk+255))-(kk)+1)%27)+1; k<=min(ny-1,kk+255); k=k+1) {...",shape=box];
	ForLoop5097125 -> 5121306;
	ForLoop5097125 -> _JOIN_5097125;
	5138968 [label="5138968  double scv_30, scv_31, scv_32, scv_33, scv_34, scv_35, scv_36, scv_37;...",shape=box];
	ForLoop5097127 [label="ForLoop5097127  for (kk=kkk; kk<=min(ny-1,kkk+1792); kk=kk+256) {...",shape=box];
	ForLoop5097127 -> 5089734;
	ForLoop5097127 -> _JOIN_5097127;
	5138980 [label="5138980  tmp[it]=scv_30;...",shape=box];
	_JOIN_5089699 [label="_JOIN_5089699None...",shape=box];
	_JOIN_5089699 -> _JOIN_5089701;
	5120040 [label="5120040  double scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8, scv_9;...",shape=box];
	ForLoop5108229 [label="ForLoop5108229  for (kk=kkk; kk<=min(ny-1,kkk+1792); kk=kk+256) {...",shape=box];
	ForLoop5108229 -> 5098018;
	ForLoop5108229 -> _JOIN_5108229;
	5089330 [label="5089330  double x_copy[256];...",shape=box];
	ForLoop5108227 [label="ForLoop5108227  for (k=(min(ny-1,kk+255))-(((min(ny-1,kk+255))-(kk)+1)%27)+1; k<=min(ny-1,kk+255); k=k+1) {...",shape=box];
	ForLoop5108227 -> 5156284;
	ForLoop5108227 -> _JOIN_5108227;
	_JOIN_5089702 [label="_JOIN_5089702None...",shape=box];
	_JOIN_5089702 -> ForLoop5097128;
	_JOIN_5089701 [label="_JOIN_5089701None...",shape=box];
	_JOIN_5089701 -> _JOIN_5089702;
	5156284 [label="5156284  double scv_66;...",shape=box];
	_JOIN_5108227 [label="_JOIN_5108227None...",shape=box];
	_JOIN_5108227 -> _JOIN_5108229;
	5180493 [label="5180493  tmp[(i+1)]=scv_67;...",shape=box];
	_JOIN_5109195 [label="_JOIN_5109195None...",shape=box];
	_JOIN_5109195 -> ForLoop5109263;
	ForLoop5089702 [label="ForLoop5089702  for (jjj=0; jjj<=ny-1; jjj=jjj+1024) {...",shape=box];
	ForLoop5089702 -> ForLoop5089701;
	ForLoop5089702 -> _JOIN_5089702;
	5109660 [label="5109660  double scv_1;...",shape=box];
	ForLoop5089701 [label="ForLoop5089701  for (jj=jjj; jj<=min(ny-1,jjj+768); jj=jj+256) {...",shape=box];
	ForLoop5089701 -> 5089432;
	ForLoop5089701 -> _JOIN_5089701;
	_JOIN_5108229 [label="_JOIN_5108229None...",shape=box];
	_JOIN_5108229 -> _JOIN_5108231;
	4963939 [label="4963939  int i;...",shape=box];
	ForLoop5108390 [label="ForLoop5108390  for (j=jj; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop5108390 -> 5108389;
	ForLoop5108390 -> _JOIN_5108390;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest28.exe __orio_perftest28.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest28.exe  
{'[5, 5, 5, 0, 5, 6, 1, 0, 29, 10, 0, 26, 1, 0, 0, 1, 1, 0]' : 0.0903871}
{'[5, 5, 5, 0, 5, 6, 1, 0, 29, 10, 0, 26, 1, 0, 0, 1, 1, 0]' : 0.0900459}
{'[5, 5, 5, 0, 5, 6, 1, 0, 29, 10, 0, 26, 1, 0, 0, 1, 1, 0]' : 0.0900309}
{'[5, 5, 5, 0, 5, 6, 1, 0, 29, 10, 0, 26, 1, 0, 0, 1, 1, 0]' : 0.090013}
{'[5, 5, 5, 0, 5, 6, 1, 0, 29, 10, 0, 26, 1, 0, 0, 1, 1, 0]' : 0.0900071}
{'[5, 5, 5, 0, 5, 6, 1, 0, 29, 10, 0, 26, 1, 0, 0, 1, 1, 0]' : 0.0900359}
{'[5, 5, 5, 0, 5, 6, 1, 0, 29, 10, 0, 26, 1, 0, 0, 1, 1, 0]' : 0.090039}
{'[5, 5, 5, 0, 5, 6, 1, 0, 29, 10, 0, 26, 1, 0, 0, 1, 1, 0]' : 0.090049}
{'[5, 5, 5, 0, 5, 6, 1, 0, 29, 10, 0, 26, 1, 0, 0, 1, 1, 0]' : 0.0900741}
{'[5, 5, 5, 0, 5, 6, 1, 0, 29, 10, 0, 26, 1, 0, 0, 1, 1, 0]' : 0.0900159}
{'[5, 5, 5, 0, 5, 6, 1, 0, 29, 10, 0, 26, 1, 0, 0, 1, 1, 0]' : 0.0901649}
{'[5, 5, 5, 0, 5, 6, 1, 0, 29, 10, 0, 26, 1, 0, 0, 1, 1, 0]' : 0.0900619}
{'[5, 5, 5, 0, 5, 6, 1, 0, 29, 10, 0, 26, 1, 0, 0, 1, 1, 0]' : 0.0900021}
{'[5, 5, 5, 0, 5, 6, 1, 0, 29, 10, 0, 26, 1, 0, 0, 1, 1, 0]' : 0.0900729}
{'[5, 5, 5, 0, 5, 6, 1, 0, 29, 10, 0, 26, 1, 0, 0, 1, 1, 0]' : 0.090019}
{'[5, 5, 5, 0, 5, 6, 1, 0, 29, 10, 0, 26, 1, 0, 0, 1, 1, 0]' : 0.0899868}
{'[5, 5, 5, 0, 5, 6, 1, 0, 29, 10, 0, 26, 1, 0, 0, 1, 1, 0]' : 0.0902638}
{'[5, 5, 5, 0, 5, 6, 1, 0, 29, 10, 0, 26, 1, 0, 0, 1, 1, 0]' : 0.090013}
{'[5, 5, 5, 0, 5, 6, 1, 0, 29, 10, 0, 26, 1, 0, 0, 1, 1, 0]' : 0.090008}
{'[5, 5, 5, 0, 5, 6, 1, 0, 29, 10, 0, 26, 1, 0, 0, 1, 1, 0]' : 0.0900731}
{'[5, 5, 5, 0, 5, 6, 1, 0, 29, 10, 0, 26, 1, 0, 0, 1, 1, 0]' : 0.0900829}
{'[5, 5, 5, 0, 5, 6, 1, 0, 29, 10, 0, 26, 1, 0, 0, 1, 1, 0]' : 0.0910401}
{'[5, 5, 5, 0, 5, 6, 1, 0, 29, 10, 0, 26, 1, 0, 0, 1, 1, 0]' : 0.090133}
{'[5, 5, 5, 0, 5, 6, 1, 0, 29, 10, 0, 26, 1, 0, 0, 1, 1, 0]' : 0.0901501}
{'[5, 5, 5, 0, 5, 6, 1, 0, 29, 10, 0, 26, 1, 0, 0, 1, 1, 0]' : 0.0900259}
{'[5, 5, 5, 0, 5, 6, 1, 0, 29, 10, 0, 26, 1, 0, 0, 1, 1, 0]' : 0.0899899}
{'[5, 5, 5, 0, 5, 6, 1, 0, 29, 10, 0, 26, 1, 0, 0, 1, 1, 0]' : 0.090004}
{'[5, 5, 5, 0, 5, 6, 1, 0, 29, 10, 0, 26, 1, 0, 0, 1, 1, 0]' : 0.0899839}
{'[5, 5, 5, 0, 5, 6, 1, 0, 29, 10, 0, 26, 1, 0, 0, 1, 1, 0]' : 0.0899699}
{'[5, 5, 5, 0, 5, 6, 1, 0, 29, 10, 0, 26, 1, 0, 0, 1, 1, 0]' : 0.090003}

out:
 ["{'[5, 5, 5, 0, 5, 6, 1, 0, 29, 10, 0, 26, 1, 0, 0, 1, 1, 0]' : 0.0903871}", "{'[5, 5, 5, 0, 5, 6, 1, 0, 29, 10, 0, 26, 1, 0, 0, 1, 1, 0]' : 0.0900459}", "{'[5, 5, 5, 0, 5, 6, 1, 0, 29, 10, 0, 26, 1, 0, 0, 1, 1, 0]' : 0.0900309}", "{'[5, 5, 5, 0, 5, 6, 1, 0, 29, 10, 0, 26, 1, 0, 0, 1, 1, 0]' : 0.090013}", "{'[5, 5, 5, 0, 5, 6, 1, 0, 29, 10, 0, 26, 1, 0, 0, 1, 1, 0]' : 0.0900071}", "{'[5, 5, 5, 0, 5, 6, 1, 0, 29, 10, 0, 26, 1, 0, 0, 1, 1, 0]' : 0.0900359}", "{'[5, 5, 5, 0, 5, 6, 1, 0, 29, 10, 0, 26, 1, 0, 0, 1, 1, 0]' : 0.090039}", "{'[5, 5, 5, 0, 5, 6, 1, 0, 29, 10, 0, 26, 1, 0, 0, 1, 1, 0]' : 0.090049}", "{'[5, 5, 5, 0, 5, 6, 1, 0, 29, 10, 0, 26, 1, 0, 0, 1, 1, 0]' : 0.0900741}", "{'[5, 5, 5, 0, 5, 6, 1, 0, 29, 10, 0, 26, 1, 0, 0, 1, 1, 0]' : 0.0900159}", "{'[5, 5, 5, 0, 5, 6, 1, 0, 29, 10, 0, 26, 1, 0, 0, 1, 1, 0]' : 0.0901649}", "{'[5, 5, 5, 0, 5, 6, 1, 0, 29, 10, 0, 26, 1, 0, 0, 1, 1, 0]' : 0.0900619}", "{'[5, 5, 5, 0, 5, 6, 1, 0, 29, 10, 0, 26, 1, 0, 0, 1, 1, 0]' : 0.0900021}", "{'[5, 5, 5, 0, 5, 6, 1, 0, 29, 10, 0, 26, 1, 0, 0, 1, 1, 0]' : 0.0900729}", "{'[5, 5, 5, 0, 5, 6, 1, 0, 29, 10, 0, 26, 1, 0, 0, 1, 1, 0]' : 0.090019}", "{'[5, 5, 5, 0, 5, 6, 1, 0, 29, 10, 0, 26, 1, 0, 0, 1, 1, 0]' : 0.0899868}", "{'[5, 5, 5, 0, 5, 6, 1, 0, 29, 10, 0, 26, 1, 0, 0, 1, 1, 0]' : 0.0902638}", "{'[5, 5, 5, 0, 5, 6, 1, 0, 29, 10, 0, 26, 1, 0, 0, 1, 1, 0]' : 0.090013}", "{'[5, 5, 5, 0, 5, 6, 1, 0, 29, 10, 0, 26, 1, 0, 0, 1, 1, 0]' : 0.090008}", "{'[5, 5, 5, 0, 5, 6, 1, 0, 29, 10, 0, 26, 1, 0, 0, 1, 1, 0]' : 0.0900731}", "{'[5, 5, 5, 0, 5, 6, 1, 0, 29, 10, 0, 26, 1, 0, 0, 1, 1, 0]' : 0.0900829}", "{'[5, 5, 5, 0, 5, 6, 1, 0, 29, 10, 0, 26, 1, 0, 0, 1, 1, 0]' : 0.0910401}", "{'[5, 5, 5, 0, 5, 6, 1, 0, 29, 10, 0, 26, 1, 0, 0, 1, 1, 0]' : 0.090133}", "{'[5, 5, 5, 0, 5, 6, 1, 0, 29, 10, 0, 26, 1, 0, 0, 1, 1, 0]' : 0.0901501}", "{'[5, 5, 5, 0, 5, 6, 1, 0, 29, 10, 0, 26, 1, 0, 0, 1, 1, 0]' : 0.0900259}", "{'[5, 5, 5, 0, 5, 6, 1, 0, 29, 10, 0, 26, 1, 0, 0, 1, 1, 0]' : 0.0899899}", "{'[5, 5, 5, 0, 5, 6, 1, 0, 29, 10, 0, 26, 1, 0, 0, 1, 1, 0]' : 0.090004}", "{'[5, 5, 5, 0, 5, 6, 1, 0, 29, 10, 0, 26, 1, 0, 0, 1, 1, 0]' : 0.0899839}", "{'[5, 5, 5, 0, 5, 6, 1, 0, 29, 10, 0, 26, 1, 0, 0, 1, 1, 0]' : 0.0899699}", "{'[5, 5, 5, 0, 5, 6, 1, 0, 29, 10, 0, 26, 1, 0, 0, 1, 1, 0]' : 0.090003}"]
returning from 'run': {'[5, 5, 5, 0, 5, 6, 1, 0, 29, 10, 0, 26, 1, 0, 0, 1, 1, 0]': ([0.0903871, 0.0900459, 0.0900309, 0.090013, 0.0900071, 0.0900359, 0.090039, 0.090049, 0.0900741, 0.0900159, 0.0901649, 0.0900619, 0.0900021, 0.0900729, 0.090019, 0.0899868, 0.0902638, 0.090013, 0.090008, 0.0900731, 0.0900829, 0.0910401, 0.090133, 0.0901501, 0.0900259, 0.0899899, 0.090004, 0.0899839, 0.0899699, 0.090003], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.0903871, 0.0900459, 0.0900309, 0.090013, 0.0900071, 0.0900359, 0.090039, 0.090049, 0.0900741, 0.0900159, 0.0901649, 0.0900619, 0.0900021, 0.0900729, 0.090019, 0.0899868, 0.0902638, 0.090013, 0.090008, 0.0900731, 0.0900829, 0.0910401, 0.090133, 0.0901501, 0.0900259, 0.0899899, 0.090004, 0.0899839, 0.0899699, 0.090003], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[5, 5, 5, 0, 5, 6, 1, 0, 29, 10, 0, 26, 1, 0, 0, 1, 1, 0]': ([0.0903871, 0.0900459, 0.0900309, 0.090013, 0.0900071, 0.0900359, 0.090039, 0.090049, 0.0900741, 0.0900159, 0.0901649, 0.0900619, 0.0900021, 0.0900729, 0.090019, 0.0899868, 0.0902638, 0.090013, 0.090008, 0.0900731, 0.0900829, 0.0910401, 0.090133, 0.0901501, 0.0900259, 0.0899899, 0.090004, 0.0899839, 0.0899699, 0.090003], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [5, 2, 3, 4, 5, 6, 0, 0, 13, 1, 23, 0, 0, 2, 0, 1, 0, 0]
Fixed Factors: {}
Testing candidate 29: [5, 2, 3, 4, 5, 6, 0, 0, 13, 1, 23, 0, 0, 2, 0, 1, 0, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	6
        Additions: 		824
        Multiplications: 	348
        Divisions: 		0
        Logical: 		0
        Reads: 			1656
        Writes: 		282
        Comparisons:		24
        Gotos: 			0
        
digraph CFG {
	ForLoop5271309 [label="ForLoop5271309  for (jjj=0; jjj<=ny-1; jjj=jjj+1024) {...",shape=box];
	ForLoop5271309 -> ForLoop5271308;
	ForLoop5271309 -> _JOIN_5271309;
	_JOIN_5200809 [label="_JOIN_5200809None...",shape=box];
	_JOIN_5200809 -> 5265982;
	ForLoop5271237 [label="ForLoop5271237  for (j=jt; j<=min(ny-1,jj+31)-23; j=j+24) {...",shape=box];
	ForLoop5271237 -> 5270660;
	ForLoop5271237 -> _JOIN_5271237;
	_JOIN_5271305 [label="_JOIN_5271305None...",shape=box];
	_JOIN_5271305 -> _JOIN_5271308;
	5268669 [label="5268669  int j;...",shape=box];
	5268669 -> ForLoop5269502;
	5200369 [label="5200369  int i;...",shape=box];
	5200369 -> ForLoop5200740;
	_JOIN_5271309 [label="_JOIN_5271309None...",shape=box];
	_JOIN_5271309 -> ForLoop5271381;
	_JOIN_5271308 [label="_JOIN_5271308None...",shape=box];
	_JOIN_5271308 -> _JOIN_5271309;
	ForLoop5269683 [label="ForLoop5269683  for (kk=kkk; kk<=min(ny-1,kkk+1984); kk=kk+64) {...",shape=box];
	ForLoop5269683 -> ForLoop5269681;
	ForLoop5269683 -> _JOIN_5269683;
	_JOIN_5269683 [label="_JOIN_5269683None...",shape=box];
	_JOIN_5269683 -> _JOIN_5269685;
	ForLoop5269681 [label="ForLoop5269681  for (k=kk; k<=min(ny-1,kk+63); k=k+1) {...",shape=box];
	ForLoop5269681 -> 5283970;
	ForLoop5269681 -> _JOIN_5269681;
	5293616 [label="5293616  double scv_36;...",shape=box];
	ForLoop5269687 [label="ForLoop5269687  for (i=ii; i<=min(nx-1,ii+255)-1; i=i+2) {...",shape=box];
	ForLoop5269687 -> 5287815;
	ForLoop5269687 -> _JOIN_5269687;
	ForLoop5269685 [label="ForLoop5269685  for (kkk=0; kkk<=ny-1; kkk=kkk+2048) {...",shape=box];
	ForLoop5269685 -> ForLoop5269683;
	ForLoop5269685 -> _JOIN_5269685;
	_JOIN_5271383 [label="_JOIN_5271383None...",shape=box];
	_JOIN_5271383 -> _JOIN_5271385;
	_JOIN_5268667 [label="_JOIN_5268667None...",shape=box];
	_JOIN_5268667 -> 5268669;
	_JOIN_5271381 [label="_JOIN_5271381None...",shape=box];
	_JOIN_5271381 -> 5295484;
	ForLoop5267981 [label="ForLoop5267981  for (jt=jj; jt<=min(ny-1,jj+31)-31; jt=jt+32) {...",shape=box];
	ForLoop5267981 -> 5274146;
	ForLoop5267981 -> _JOIN_5267981;
	ForLoop5268599 [label="ForLoop5268599  for (j=jt; j<=min(ny-1,jj+31)-23; j=j+24) {...",shape=box];
	ForLoop5268599 -> 5268022;
	ForLoop5268599 -> _JOIN_5268599;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 5200369;
	5269811 [label="5269811  scv_37=scv_37+A[i*ny+jt]*x[jt];...",shape=box];
	5267982 [label="5267982  int j;...",shape=box];
	5267982 -> ForLoop5268599;
	ForLoop5269502 [label="ForLoop5269502  for (j=jt; j<=min(ny-1,jj+31)-23; j=j+24) {...",shape=box];
	ForLoop5269502 -> 5268718;
	ForLoop5269502 -> _JOIN_5269502;
	ForLoop5270619 [label="ForLoop5270619  for (jt=jj; jt<=min(ny-1,jj+31)-31; jt=jt+32) {...",shape=box];
	ForLoop5270619 -> 5269811;
	ForLoop5270619 -> _JOIN_5270619;
	ForLoop5271305 [label="ForLoop5271305  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jt)+1)%24)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop5271305 -> 5271304;
	ForLoop5271305 -> _JOIN_5271305;
	5270620 [label="5270620  int j;...",shape=box];
	5270620 -> ForLoop5271237;
	ForLoop5200809 [label="ForLoop5200809  for (i=ny-((ny-(0))%14); i<=ny-1; i=i+1) ...",shape=box];
	ForLoop5200809 -> 5200808;
	ForLoop5200809 -> _JOIN_5200809;
	ForLoop5268667 [label="ForLoop5268667  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jt)+1)%24)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop5268667 -> 5268666;
	ForLoop5268667 -> _JOIN_5268667;
	5270660 [label="5270660  scv_37=scv_37+A[i*ny+j]*x[j];...",shape=box];
	_JOIN_5271380 [label="_JOIN_5271380None...",shape=box];
	_JOIN_5271380 -> _JOIN_5271381;
	ForLoop5271383 [label="ForLoop5271383  for (i=(min(nx-1,ii+255))-(((min(nx-1,ii+255))-(ii)+1)%2)+1; i<=min(nx-1,ii+255); i=i+1) {...",shape=box];
	ForLoop5271383 -> 5295472;
	ForLoop5271383 -> _JOIN_5271383;
	_JOIN_5268599 [label="_JOIN_5268599None...",shape=box];
	_JOIN_5268599 -> ForLoop5268667;
	_JOIN_5271237 [label="_JOIN_5271237None...",shape=box];
	_JOIN_5271237 -> ForLoop5271305;
	5268666 [label="5268666  scv_35=scv_35+A[i*ny+j]*x[j];...",shape=box];
	5268666 -> _JOIN_5268667;
	_JOIN_5269582 [label="_JOIN_5269582None...",shape=box];
	_JOIN_5269582 -> _JOIN_5269584;
	5271304 [label="5271304  scv_37=scv_37+A[i*ny+j]*x[j];...",shape=box];
	5271304 -> _JOIN_5271305;
	_JOIN_5269584 [label="_JOIN_5269584None...",shape=box];
	_JOIN_5269584 -> ForLoop5269685;
	_JOIN_5269685 [label="_JOIN_5269685None...",shape=box];
	_JOIN_5269685 -> 5287833;
	ForLoop5269582 [label="ForLoop5269582  for (jj=jjj; jj<=min(ny-1,jjj+992); jj=jj+32) {...",shape=box];
	ForLoop5269582 -> ForLoop5267981;
	ForLoop5269582 -> _JOIN_5269582;
	_JOIN_5200740 [label="_JOIN_5200740None...",shape=box];
	_JOIN_5200740 -> ForLoop5200809;
	ForLoop5269584 [label="ForLoop5269584  for (jjj=0; jjj<=ny-1; jjj=jjj+1024) {...",shape=box];
	ForLoop5269584 -> ForLoop5269582;
	ForLoop5269584 -> _JOIN_5269584;
	5269578 [label="5269578  scv_34=scv_34+A[(i+1)*ny+j]*x[j];...",shape=box];
	5269578 -> _JOIN_5269579;
	_JOIN_5271385 [label="_JOIN_5271385None...",shape=box];
	_JOIN_5271385 -> _JOIN_5271386;
	5295472 [label="5295472  double scv_37;...",shape=box];
	ForLoop5271308 [label="ForLoop5271308  for (jj=jjj; jj<=min(ny-1,jjj+992); jj=jj+32) {...",shape=box];
	ForLoop5271308 -> ForLoop5270619;
	ForLoop5271308 -> _JOIN_5271308;
	_JOIN_5271379 [label="_JOIN_5271379None...",shape=box];
	_JOIN_5271379 -> _JOIN_5271380;
	5268718 [label="5268718  scv_34=scv_34+A[(i+1)*ny+j]*x[j];...",shape=box];
	_JOIN_5267981 [label="_JOIN_5267981None...",shape=box];
	_JOIN_5267981 -> 5267982;
	_JOIN_5269502 [label="_JOIN_5269502None...",shape=box];
	_JOIN_5269502 -> ForLoop5269579;
	ForLoop5200740 [label="ForLoop5200740  for (i=0; i<=ny-14; i=i+14) {...",shape=box];
	ForLoop5200740 -> 5200621;
	ForLoop5200740 -> _JOIN_5200740;
	5200621 [label="5200621  y[i]=0.0;...",shape=box];
	5200808 [label="5200808  y[i]=0.0;...",shape=box];
	5200808 -> _JOIN_5200809;
	_JOIN_5270619 [label="_JOIN_5270619None...",shape=box];
	_JOIN_5270619 -> 5270620;
	5268022 [label="5268022  scv_35=scv_35+A[i*ny+j]*x[j];...",shape=box];
	5274146 [label="5274146  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	_JOIN_5269681 [label="_JOIN_5269681None...",shape=box];
	_JOIN_5269681 -> _JOIN_5269683;
	ForLoop5271380 [label="ForLoop5271380  for (kk=kkk; kk<=min(ny-1,kkk+1984); kk=kk+64) {...",shape=box];
	ForLoop5271380 -> ForLoop5271379;
	ForLoop5271380 -> _JOIN_5271380;
	_JOIN_5269687 [label="_JOIN_5269687None...",shape=box];
	_JOIN_5269687 -> ForLoopexpected=9369846271501.798828
actual=9369846271501.798828
5271383;
	ForLoop5271386 [label="ForLoop5271386  for (iii=0; iii<=nx-1; iii=iii+512) {...",shape=box];
	ForLoop5271386 -> ForLoop5271385;
	ForLoop5271386 -> _JOIN_5271386;
	ForLoop5271385 [label="ForLoop5271385  for (ii=iii; ii<=min(nx-1,iii+256); ii=ii+256) {...",shape=box];
	ForLoop5271385 -> 5266015;
	ForLoop5271385 -> _JOIN_5271385;
	ForLoop5271381 [label="ForLoop5271381  for (kkk=0; kkk<=ny-1; kkk=kkk+2048) {...",shape=box];
	ForLoop5271381 -> ForLoop5271380;
	ForLoop5271381 -> _JOIN_5271381;
	ForLoop5269579 [label="ForLoop5269579  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jt)+1)%24)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop5269579 -> 5269578;
	ForLoop5269579 -> _JOIN_5269579;
	_JOIN_5271386 [label="_JOIN_5271386None...",shape=box];
	5283970 [label="5283970  double scv_33;...",shape=box];
	5266015 [label="5266015  int i;...",shape=box];
	5266015 -> ForLoop5269687;
	5287833 [label="5287833  tmp[(i+1)]=scv_34;...",shape=box];
	ForLoop5271379 [label="ForLoop5271379  for (k=kk; k<=min(ny-1,kk+63); k=k+1) {...",shape=box];
	ForLoop5271379 -> 5293616;
	ForLoop5271379 -> _JOIN_5271379;
	_JOIN_5269579 [label="_JOIN_5269579None...",shape=box];
	_JOIN_5269579 -> _JOIN_5269582;
	5287815 [label="5287815  double scv_34, scv_35;...",shape=box];
	5295484 [label="5295484  tmp[i]=scv_37;...",shape=box];
	5295484 -> _JOIN_5271383;
	5265982 [label="5265982  double x_copy;...",shape=box];

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest29.exe __orio_perftest29.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest29.exe  
{'[5, 2, 3, 4, 5, 6, 0, 0, 13, 1, 23, 0, 0, 2, 0, 1, 0, 0]' : 0.109044}
{'[5, 2, 3, 4, 5, 6, 0, 0, 13, 1, 23, 0, 0, 2, 0, 1, 0, 0]' : 0.108793}
{'[5, 2, 3, 4, 5, 6, 0, 0, 13, 1, 23, 0, 0, 2, 0, 1, 0, 0]' : 0.108733}
{'[5, 2, 3, 4, 5, 6, 0, 0, 13, 1, 23, 0, 0, 2, 0, 1, 0, 0]' : 0.108807}
{'[5, 2, 3, 4, 5, 6, 0, 0, 13, 1, 23, 0, 0, 2, 0, 1, 0, 0]' : 0.108749}
{'[5, 2, 3, 4, 5, 6, 0, 0, 13, 1, 23, 0, 0, 2, 0, 1, 0, 0]' : 0.108777}
{'[5, 2, 3, 4, 5, 6, 0, 0, 13, 1, 23, 0, 0, 2, 0, 1, 0, 0]' : 0.108804}
{'[5, 2, 3, 4, 5, 6, 0, 0, 13, 1, 23, 0, 0, 2, 0, 1, 0, 0]' : 0.1088}
{'[5, 2, 3, 4, 5, 6, 0, 0, 13, 1, 23, 0, 0, 2, 0, 1, 0, 0]' : 0.108841}
{'[5, 2, 3, 4, 5, 6, 0, 0, 13, 1, 23, 0, 0, 2, 0, 1, 0, 0]' : 0.108807}
{'[5, 2, 3, 4, 5, 6, 0, 0, 13, 1, 23, 0, 0, 2, 0, 1, 0, 0]' : 0.108669}
{'[5, 2, 3, 4, 5, 6, 0, 0, 13, 1, 23, 0, 0, 2, 0, 1, 0, 0]' : 0.108891}
{'[5, 2, 3, 4, 5, 6, 0, 0, 13, 1, 23, 0, 0, 2, 0, 1, 0, 0]' : 0.108953}
{'[5, 2, 3, 4, 5, 6, 0, 0, 13, 1, 23, 0, 0, 2, 0, 1, 0, 0]' : 0.108944}
{'[5, 2, 3, 4, 5, 6, 0, 0, 13, 1, 23, 0, 0, 2, 0, 1, 0, 0]' : 0.108824}
{'[5, 2, 3, 4, 5, 6, 0, 0, 13, 1, 23, 0, 0, 2, 0, 1, 0, 0]' : 0.108752}
{'[5, 2, 3, 4, 5, 6, 0, 0, 13, 1, 23, 0, 0, 2, 0, 1, 0, 0]' : 0.108812}
{'[5, 2, 3, 4, 5, 6, 0, 0, 13, 1, 23, 0, 0, 2, 0, 1, 0, 0]' : 0.108867}
{'[5, 2, 3, 4, 5, 6, 0, 0, 13, 1, 23, 0, 0, 2, 0, 1, 0, 0]' : 0.108784}
{'[5, 2, 3, 4, 5, 6, 0, 0, 13, 1, 23, 0, 0, 2, 0, 1, 0, 0]' : 0.108705}
{'[5, 2, 3, 4, 5, 6, 0, 0, 13, 1, 23, 0, 0, 2, 0, 1, 0, 0]' : 0.108796}
{'[5, 2, 3, 4, 5, 6, 0, 0, 13, 1, 23, 0, 0, 2, 0, 1, 0, 0]' : 0.108761}
{'[5, 2, 3, 4, 5, 6, 0, 0, 13, 1, 23, 0, 0, 2, 0, 1, 0, 0]' : 0.108799}
{'[5, 2, 3, 4, 5, 6, 0, 0, 13, 1, 23, 0, 0, 2, 0, 1, 0, 0]' : 0.108942}
{'[5, 2, 3, 4, 5, 6, 0, 0, 13, 1, 23, 0, 0, 2, 0, 1, 0, 0]' : 0.108717}
{'[5, 2, 3, 4, 5, 6, 0, 0, 13, 1, 23, 0, 0, 2, 0, 1, 0, 0]' : 0.108839}
{'[5, 2, 3, 4, 5, 6, 0, 0, 13, 1, 23, 0, 0, 2, 0, 1, 0, 0]' : 0.10889}
{'[5, 2, 3, 4, 5, 6, 0, 0, 13, 1, 23, 0, 0, 2, 0, 1, 0, 0]' : 0.108924}
{'[5, 2, 3, 4, 5, 6, 0, 0, 13, 1, 23, 0, 0, 2, 0, 1, 0, 0]' : 0.108707}
{'[5, 2, 3, 4, 5, 6, 0, 0, 13, 1, 23, 0, 0, 2, 0, 1, 0, 0]' : 0.108868}

out:
 ["{'[5, 2, 3, 4, 5, 6, 0, 0, 13, 1, 23, 0, 0, 2, 0, 1, 0, 0]' : 0.109044}", "{'[5, 2, 3, 4, 5, 6, 0, 0, 13, 1, 23, 0, 0, 2, 0, 1, 0, 0]' : 0.108793}", "{'[5, 2, 3, 4, 5, 6, 0, 0, 13, 1, 23, 0, 0, 2, 0, 1, 0, 0]' : 0.108733}", "{'[5, 2, 3, 4, 5, 6, 0, 0, 13, 1, 23, 0, 0, 2, 0, 1, 0, 0]' : 0.108807}", "{'[5, 2, 3, 4, 5, 6, 0, 0, 13, 1, 23, 0, 0, 2, 0, 1, 0, 0]' : 0.108749}", "{'[5, 2, 3, 4, 5, 6, 0, 0, 13, 1, 23, 0, 0, 2, 0, 1, 0, 0]' : 0.108777}", "{'[5, 2, 3, 4, 5, 6, 0, 0, 13, 1, 23, 0, 0, 2, 0, 1, 0, 0]' : 0.108804}", "{'[5, 2, 3, 4, 5, 6, 0, 0, 13, 1, 23, 0, 0, 2, 0, 1, 0, 0]' : 0.1088}", "{'[5, 2, 3, 4, 5, 6, 0, 0, 13, 1, 23, 0, 0, 2, 0, 1, 0, 0]' : 0.108841}", "{'[5, 2, 3, 4, 5, 6, 0, 0, 13, 1, 23, 0, 0, 2, 0, 1, 0, 0]' : 0.108807}", "{'[5, 2, 3, 4, 5, 6, 0, 0, 13, 1, 23, 0, 0, 2, 0, 1, 0, 0]' : 0.108669}", "{'[5, 2, 3, 4, 5, 6, 0, 0, 13, 1, 23, 0, 0, 2, 0, 1, 0, 0]' : 0.108891}", "{'[5, 2, 3, 4, 5, 6, 0, 0, 13, 1, 23, 0, 0, 2, 0, 1, 0, 0]' : 0.108953}", "{'[5, 2, 3, 4, 5, 6, 0, 0, 13, 1, 23, 0, 0, 2, 0, 1, 0, 0]' : 0.108944}", "{'[5, 2, 3, 4, 5, 6, 0, 0, 13, 1, 23, 0, 0, 2, 0, 1, 0, 0]' : 0.108824}", "{'[5, 2, 3, 4, 5, 6, 0, 0, 13, 1, 23, 0, 0, 2, 0, 1, 0, 0]' : 0.108752}", "{'[5, 2, 3, 4, 5, 6, 0, 0, 13, 1, 23, 0, 0, 2, 0, 1, 0, 0]' : 0.108812}", "{'[5, 2, 3, 4, 5, 6, 0, 0, 13, 1, 23, 0, 0, 2, 0, 1, 0, 0]' : 0.108867}", "{'[5, 2, 3, 4, 5, 6, 0, 0, 13, 1, 23, 0, 0, 2, 0, 1, 0, 0]' : 0.108784}", "{'[5, 2, 3, 4, 5, 6, 0, 0, 13, 1, 23, 0, 0, 2, 0, 1, 0, 0]' : 0.108705}", "{'[5, 2, 3, 4, 5, 6, 0, 0, 13, 1, 23, 0, 0, 2, 0, 1, 0, 0]' : 0.108796}", "{'[5, 2, 3, 4, 5, 6, 0, 0, 13, 1, 23, 0, 0, 2, 0, 1, 0, 0]' : 0.108761}", "{'[5, 2, 3, 4, 5, 6, 0, 0, 13, 1, 23, 0, 0, 2, 0, 1, 0, 0]' : 0.108799}", "{'[5, 2, 3, 4, 5, 6, 0, 0, 13, 1, 23, 0, 0, 2, 0, 1, 0, 0]' : 0.108942}", "{'[5, 2, 3, 4, 5, 6, 0, 0, 13, 1, 23, 0, 0, 2, 0, 1, 0, 0]' : 0.108717}", "{'[5, 2, 3, 4, 5, 6, 0, 0, 13, 1, 23, 0, 0, 2, 0, 1, 0, 0]' : 0.108839}", "{'[5, 2, 3, 4, 5, 6, 0, 0, 13, 1, 23, 0, 0, 2, 0, 1, 0, 0]' : 0.10889}", "{'[5, 2, 3, 4, 5, 6, 0, 0, 13, 1, 23, 0, 0, 2, 0, 1, 0, 0]' : 0.108924}", "{'[5, 2, 3, 4, 5, 6, 0, 0, 13, 1, 23, 0, 0, 2, 0, 1, 0, 0]' : 0.108707}", "{'[5, 2, 3, 4, 5, 6, 0, 0, 13, 1, 23, 0, 0, 2, 0, 1, 0, 0]' : 0.108868}"]
returning from 'run': {'[5, 2, 3, 4, 5, 6, 0, 0, 13, 1, 23, 0, 0, 2, 0, 1, 0, 0]': ([0.109044, 0.108793, 0.108733, 0.108807, 0.108749, 0.108777, 0.108804, 0.1088, 0.108841, 0.108807, 0.108669, 0.108891, 0.108953, 0.108944, 0.108824, 0.108752, 0.108812, 0.108867, 0.108784, 0.108705, 0.108796, 0.108761, 0.108799, 0.108942, 0.108717, 0.108839, 0.10889, 0.108924, 0.108707, 0.108868], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.109044, 0.108793, 0.108733, 0.108807, 0.108749, 0.108777, 0.108804, 0.1088, 0.108841, 0.108807, 0.108669, 0.108891, 0.108953, 0.108944, 0.108824, 0.108752, 0.108812, 0.108867, 0.108784, 0.108705, 0.108796, 0.108761, 0.108799, 0.108942, 0.108717, 0.108839, 0.10889, 0.108924, 0.108707, 0.108868], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[5, 2, 3, 4, 5, 6, 0, 0, 13, 1, 23, 0, 0, 2, 0, 1, 0, 0]': ([0.109044, 0.108793, 0.108733, 0.108807, 0.108749, 0.108777, 0.108804, 0.1088, 0.108841, 0.108807, 0.108669, 0.108891, 0.108953, 0.108944, 0.108824, 0.108752, 0.108812, 0.108867, 0.108784, 0.108705, 0.108796, 0.108761, 0.108799, 0.108942, 0.108717, 0.108839, 0.10889, 0.108924, 0.108707, 0.108868], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [0, 6, 3, 0, 0, 4, 1, 0, 4, 20, 0, 13, 0, 0, 2, 0, 0, 1]
Fixed Factors: {}
Testing candidate 30: [0, 6, 3, 0, 0, 4, 1, 0, 4, 20, 0, 13, 0, 0, 2, 0, 0, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	80
        Max loop nest depth: 	4
        Additions: 		7484
        Multiplications: 	2112
        Divisions: 		0
        Logical: 		0
        Reads: 			11524
        Writes: 		1336
        Comparisons:		80
        Gotos: 			0
        
digraph CFG {
	5424101 [label="5424101  int k;...",shape=box];
	_JOIN_5420063 [label="_JOIN_5420063None...",shape=box];
	_JOIN_5420063 -> 5456926;
	5429834 [label="5429834  tmp[i]=0;...",shape=box];
	5429834 -> ForLoop5429922;
	_JOIN_5419497 [label="_JOIN_5419497None...",shape=box];
	_JOIN_5419497 -> 5456307;
	5418005 [label="5418005  y[k]=y[k]+A[i*ny+k]*tmp[i];...",shape=box];
	ForLoop5420703 [label="ForLoop5420703  for (k=cbv_16; k<=cbv_17; k=k+1) ...",shape=box];
	ForLoop5420703 -> 5420702;
	ForLoop5420703 -> _JOIN_5420703;
	5421271 [label="5421271  int k;...",shape=box];
	5461878 [label="5461878  register int cbv_37, cbv_38;...",shape=box];
	ForLoop5426363 [label="ForLoop5426363  for (k=cbv_46; k<=cbv_47; k=k+1) ...",shape=box];
	ForLoop5426363 -> 5426362;
	ForLoop5426363 -> _JOIN_5426363;
	5417965 [label="5417965  int k;...",shape=box];
	_JOIN_5422967 [label="_JOIN_5422967None...",shape=box];
	_JOIN_5422967 -> 5422969;
	5419570 [label="5419570  y[k]=y[k]+A[(i+2)*ny+k]*tmp[(i+2)];...",shape=box];
	5419570 -> _JOIN_5419571;
	ForLoop5425723 [label="ForLoop5425723  for (k=kt; k<=cbv_42; k=k+14) {...",shape=box];
	ForLoop5425723 -> 5425279;
	ForLoop5425723 -> _JOIN_5425723;
	_JOIN_5429922 [label="_JOIN_5429922None...",shape=box];
	_JOIN_5429922 -> ForLoop5431373;
	5419573 [label="5419573  int k;...",shape=box];
	5418487 [label="5418487  y[k]=y[k]+A[(i+1)*ny+k]*tmp[(i+1)];...",shape=box];
	ForLoop5430894 [label="ForLoop5430894  for (kt=kk; kt<=cbv_67; kt=kt+32) {...",shape=box];
	ForLoop5430894 -> 5429993;
	ForLoop5430894 -> _JOIN_5430894;
	5304734 [label="5304734  y[i]=0.0;...",shape=box];
	5428675 [label="5428675  y[k]=y[k]+A[(i+19)*ny+k]*tmp[(i+19)];...",shape=box];
	_JOIN_5427987 [label="_JOIN_5427987None...",shape=box];
	_JOIN_5427987 -> 5465592;
	5429241 [label="5429241  y[k]=y[k]+A[(i+20)*ny+k]*tmp[(i+20)];...",shape=box];
	ForLoop5426855 [label="ForLoop5426855  for (k=kt; k<=cbv_48; k=k+14) {...",shape=box];
	ForLoop5426855 -> 5426411;
	ForLoop5426855 -> _JOIN_5426855;
	_JOIN_5421269 [label="_JOIN_5421269None...",shape=box];
	_JOIN_5421269 -> 5421271;
	ForLoop5420063 [label="ForLoop5420063  for (k=kt; k<=cbv_12; k=k+14) {...",shape=box];
	ForLoop5420063 -> 5419619;
	ForLoop5420063 -> _JOIN_5420063;
	ForLoop5421269 [label="ForLoop5421269  for (k=cbv_19; k<=cbv_20; k=k+1) ...",shape=box];
	ForLoop5421269 -> 5421268;
	ForLoop5421269 -> _JOIN_5421269;
	5426928 [label="5426928  y[k]=y[k]+A[(i+15)*ny+k]*tmp[(i+15)];...",shape=box];
	5426928 -> _JOIN_5426929;
	5421317 [label="5421317  y[k]=y[k]+A[(i+6)*ny+k]*tmp[(i+6)];...",shape=box];
	5468981 [label="5468981  register int cbv_69, cbv_70;...",shape=box];
	5427494 [label="5427494  y[k]=y[k]+A[(i+16)*ny+k]*tmp[(i+16)];...",shape=box];
	5427494 -> _JOIN_5427495;
	5430935 [label="5430935  y[k]=y[k]+A[i*ny+k]*tmp[i];...",shape=box];
	5420702 [label="5420702  y[k]=y[k]+A[(i+4)*ny+k]*tmp[(i+4)];...",shape=box];
	5420702 -> _JOIN_5420703;
	_JOIN_5428553 [label="_JOIN_5428553None...",shape=box];
	_JOIN_5428553 -> 5466211;
	5420705 [label="5420705  int k;...",shape=box];
	ForLoop5421195 [label="ForLoop5421195  for (k=kt; k<=cbv_18; k=k+14) {...",shape=box];
	ForLoop5421195 -> 5420751;
	ForLoop5421195 -> _JOIN_5421195;
	5309428 [label="5309428  double x_copy[512];...",shape=box];
	ForLoop5304772 [label="ForLoop5304772  for (i=0; i<=ny-5; i=i+5) {...",shape=box];
	ForLoop5304772 -> 5304734;
	ForLoop5304772 -> _JOIN_5304772;
	5428063 [label="5428063  int k;...",shape=box];
	5428060 [label="5428060  y[k]=y[k]+A[(i+17)*ny+k]*tmp[(i+17)];...",shape=box];
	5428060 -> _JOIN_5428061;
	ForLoop5427987 [label="ForLoop5427987  for (k=kt; k<=cbv_54; k=k+14) {...",shape=box];
	ForLoop5427987 -> 5427543;
	ForLoop5427987 -> _JOIN_5427987;
	_JOIN_5426929 [label="_JOIN_5426929None...",shape=box];
	_JOIN_5426929 -> 5426931;
	_JOIN_5424665 [label="_JOIN_5424665None...",shape=box];
	_JOIN_5424665 -> 5424667;
	5461259 [label="5461259  register int cbv_34, cbv_35;...",shape=box];
	5422969 [label="5422969  int k;...",shape=box];
	_JOIN_5429764 [label="_JOIN_5429764None...",shape=box];
	_JOIN_5429764 -> _JOIN_5429766;
	_JOIN_5428627 [label="_JOIN_5428627None...",shape=box];
	_JOIN_5428627 -> 5428629;
	5422966 [label="5422966  y[k]=y[k]+A[(i+8)*ny+k]*tmp[(i+8)];...",shape=box];
	5422966 -> _JOIN_5422967;
	_JOIN_5431373 [label="_JOIN_5431373None...",shape=box];
	_JOIN_5431373 -> _JOIN_5431375;
	_JOIN_5426363 [label="_JOIN_5426363None...",shape=box];
	_JOIN_5426363 -> 5426365;
	_JOIN_5426289 [label="_JOIN_5426289None...",shape=box];
	_JOIN_5426289 -> 5463735;
	5394118 [label="5394118  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	5419004 [label="5419004  y[k]=y[k]+A[(i+1)*ny+k]*tmp[(i+1)];...",shape=box];
	5419004 -> _JOIN_5419005;
	5425279 [label="5425279  y[k]=y[k]+A[(i+13)*ny+k]*tmp[(i+13)];...",shape=box];
	5419007 [label="5419007  int k;...",shape=box];
	5454573 [label="5454573  register int cbv_2;...",shape=box];
	_JOIN_5419571 [label="_JOIN_5419571None...",shape=box];
	_JOIN_5419571 -> 5419573;
	5457545 [label="5457545  register int cbv_16, cbv_17;...",shape=box];
	5429192 [label="5429192  y[k]=y[k]+A[(i+19)*ny+k]*tmp[(i+19)];...",shape=box];
	5429192 -> _JOIN_5429193;
	_JOIN_5430894 [label="_JOIN_5430894None...",shape=box];
	_JOIN_5430894 -> 5430895;
	ForLoop5428627 [label="ForLoop5428627  for (k=cbv_58; k<=cbv_59; k=k+1) ...",shape=box];
	ForLoop5428627 -> 5428626;
	ForLoop5428627 -> _JOIN_5428627;
	5429919 [label="5429919  tmp[i]=tmp[i]+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	5429919 -> _JOIN_5429920;
	ForLoop5431369 [label="ForLoop5431369  for (k=cbv_69; k<=cbv_70; k=k+1) ...",shape=box];
	ForLoop5431369 -> 5431368;
	ForLoop5431369 -> _JOIN_5431369;
	ForLoop5420629 [label="ForLoop5420629  for (k=kt; k<=cbv_15; k=k+14) {...",shape=box];
	ForLoop5420629 -> 5420185;
	ForLoop5420629 -> _JOIN_5420629;
	ForLoop5431372 [label="ForLoop5431372  for (kk=kkk; kk<=min(ny-1,kkk+448); kk=kk+64) {...",shape=box];
	ForLoop5431372 -> 5468485;
	ForLoop5431372 -> _JOIN_5431372;
	_JOIN_5304772 [label="_JOIN_5304772None...",shape=box];
	_JOIN_5304772 -> ForLoop5304841;
	5393894 [label="5393894  tmp[i]=0;...",shape=box];
	ForLoop5431375 [label="ForLoop5431375  for (i=nx-((nx-(0))%21); i<=nx-1; i=i+1) {...",shape=box];
	ForLoop5431375 -> 5429834;
	ForLoop5431375 -> _JOIN_5431375;
	5304617 [label="5304617  int i;...",shape=box];
	5304617 -> ForLoop5304772;
	5429993 [label="5429993  y[kt]=y[kt]+A[i*ny+kt]*tmp[i];...",shape=box];
	ForLoop5423533 [label="ForLoop5423533  for (k=cbv_31; k<=cbv_32; k=k+1) ...",shape=box];
	ForLoop5423533 -> 5423532;
	ForLoop5423533 -> _JOIN_5423533;
	5431368 [label="5431368  y[k]=y[k]+A[i*ny+k]*tmp[i];...",shape=box];
	5431368 -> _JOIN_5431369;
	5429195 [label="5429195  int k;...",shape=box];
	5304840 [label="5304840  y[i]=0.0;...",shape=box];
	5304840 -> _JOIN_5304841;
	ForLoop5429119 [label="ForLoop5429119  for (k=kt; k<=cbv_60; k=k+14) {...",shape=box];
	ForLoop5429119 -> 5428675;
	ForLoop5429119 -> _JOIN_5429119;
	5429758 [label="5429758  y[k]=y[k]+A[(i+20)*ny+k]*tmp[(i+20)];...",shape=box];
	5429758 -> _JOIN_5429759;
	ForLoop5426929 [label="ForLoop5426929  for (k=cbv_49; k<=cbv_50; k=k+1) ...",shape=box];
	ForLoop5426929 -> 5426928;
	ForLoop5426929 -> _JOIN_5426929;
	_JOIN_5419005 [label="_JOIN_5419005None...",shape=box];
	_JOIN_5419005 -> 5419007;
	5422403 [label="5422403  int k;...",shape=box];
	5422400 [label="5422400  y[k]=y[k]+A[(i+7)*ny+k]*tmp[(i+7)];...",shape=box];
	5422400 -> _JOIN_5422401;
	_JOIN_5427421 [label="_JOIN_5427421None...",shape=box];
	_JOIN_5427421 -> 5464973;
	ForLoop5429193 [label="ForLoop5429193  for (k=cbv_61; k<=cbv_62; k=k+1) ...",shape=box];
	ForLoop5429193 -> 5429192;
	ForLoop5429193 -> _JOIN_5429193;
	5426411 [label="5426411  y[k]=y[k]+A[(i+15)*ny+k]*tmp[(i+15)];...",shape=box];
	ForLoop5419497 [label="ForLoop5419497  for (k=kt; k<=cbv_9; k=k+14) {...",shape=box];
	ForLoop5419497 -> 5419053;
	ForLoop5419497 -> _JOIN_5419497;
	_JOIN_5429920 [label="_JOIN_5429920None...",shape=box];
	_JOIN_5429920 -> _JOIN_5429922;
	_JOIN_5420137 [label="_JOIN_5420137None...",shape=box];
	_JOIN_5420137 -> 5420139;
	5418441 [label="5418441  int k;...",shape=box];
	_JOIN_5425723 [label="_JOIN_5425723None...",shape=box];
	_JOIN_5425723 -> 5463116;
	_JOIN_5395423 [label="_JOIN_5395423None...",shape=box];
	_JOIN_5395423 -> ForLoop5429764;
	_JOIN_5395421 [label="_JOIN_5395421None...",shape=box];
	_JOIN_5395421 -> _JOIN_5395423;
	ForLoop5418439 [label="ForLoop5418439  for (k=cbv_4; k<=cbv_5; k=k+1) ...",shape=box];
	ForLoop5418439 -> 5418438;
	ForLoop5418439 -> _JOIN_5418439;
	ForLoop5422327 [label="ForLoop5422327  for (k=kt; k<=cbv_24; k=k+14) {...",shape=box];
	ForLoop5422327 -> 5421883;
	ForLoop5422327 -> _JOIN_5422327;
	5423015 [label="5423015  y[k]=y[k]+A[(i+9)*ny+k]*tmp[(i+9)];...",shape=box];
	ForLoop5429922 [label="ForLoop5429922  for (jj=0; jj<=ny-1; jj=jj+512) {...",shape=box];
	ForLoop5429922 -> 5429878;
	ForLoop5429922 -> _JOIN_5429922;
	_JOIN_5417964 [label="_JOIN_5417964None...",shape=box];
	_JOIN_5417964 -> 5417965;
	_JOIN_5422401 [label="_JOIN_5422401None...",shape=box];
	_JOIN_5422401 -> 5422403;
	ForLoop5417964 [label="ForLoop5417964  for (kt=kk; kt<=cbv_2; kt=kt+32) {...",shape=box];
	ForLoop5417964 -> 5395494;
	ForLoop5417964 -> _JOIN_5417964;
	_JOIN_5422893 [label="_JOIN_5422893None...",shape=box];
	_JOIN_5422893 -> 5460021;
	5458164 [label="5458164  register int cbv_19, cbv_20;...",shape=box];
	5455688 [label="5455688  register int cbv_7, cbv_8;...",shape=box];
	5466830 [label="5466830  register int cbv_61, cbv_62;...",shape=box];
	_JOIN_5421761 [label="_JOIN_5421761None...",shape=box];
	_JOIN_5421761 -> 5458783;
	5464354 [label="5464354  register int cbv_49, cbv_50;...",shape=box];
	_JOIN_5304841 [label="_JOIN_5304841None...",shape=box];
	_JOIN_5304841 -> 5309428;
	5427543 [label="5427543  y[k]=y[k]+A[(i+17)*ny+k]*tmp[(i+17)];...",shape=box];
	5427497 [label="5427497  int k;...",shape=box];
	_JOIN_5423533 [label="_JOIN_5423533None...",shape=box];
	_JOIN_5423533 -> 5423535;
	_JOIN_5427495 [label="_JOIN_5427495None...",shape=box];
	_JOIN_5427495 -> 5427497;
	_JOIN_5421195 [label="_JOIN_5421195None...",shape=box];
	_JOIN_5421195 -> 5458164;
	ForLoop5422967 [label="ForLoop5422967  for (k=cbv_28; k<=cbv_29; k=k+1) ...",shape=box];
	ForLoop5422967 -> 5422966;
	ForLoop5422967 -> _JOIN_5422967;
	5418438 [label="5418438  y[k]=y[k]+A[i*ny+k]*tmp[i];...",shape=box];
	5418438 -> _JOIN_5418439;
	_JOIN_5424591 [label="_JOIN_5424591None...",shape=box];
	_JOIN_5424591 -> 5461878;
	ForLoop5418931 [label="ForLoop5418931  for (k=kt; k<=cbv_6; k=k+14) {...",shape=box];
	ForLoop5418931 -> 5418487;
	ForLoop5418931 -> _JOIN_5418931;
	ForLoop5395423 [label="ForLoop5395423  for (jj=0; jj<=ny-1; jj=jj+512) {...",shape=box];
	ForLoop5395423 -> 5394118;
	ForLoop5395423 -> _JOIN_5395423;
	ForLoop5395421 [label="ForLoop5395421  for (j=jj; j<=cbv_1; j=j+1) {...",shape=box];
	ForLoop5395421 -> 5394779;
	ForLoop5395421 -> _JOIN_5395421;
	_JOIN_5418439 [label="_JOIN_5418439None...",shape=box];
	_JOIN_5418439 -> 5418441;
	ForLoop5429762 [label="ForLoop5429762  for (kk=kkk; kk<=min(ny-1,kkk+448); kk=kk+64) {...",shape=box];
	ForLoop5429762 -> 5454573;
	ForLoop5429762 -> _JOIN_5429762;
	ForLoop5426289 [label="ForLoop5426289  for (k=kt; k<=cbv_45; k=k+14) {...",shape=box];
	ForLoop5426289 -> 5425845;
	ForLoop5426289 -> _JOIN_5426289;
	ForLoop5429766 [label="ForLoop5429766  for (i=0; i<=nx-21; i=i+21) {...",shape=box];
	ForLoop5429766 -> 5393894;
	ForLoop5429766 -> _JOIN_5429766;
	ForLoop5429764 [label="ForLoop5429764  for (kkk=0; kkk<=ny-1; kkk=kkk+512) {...",shape=box];
	ForLoop5429764 -> ForLoop5429762;
	ForLoop5429764 -> _JOIN_5429764;
	5464973 [label="5464973  register int cbv_52, cbv_53;...",shape=box];
	_JOIN_5426855 [label="_JOIN_5426855None...",shape=box];
	_JOIN_5426855 -> 5464354;
	5426362 [label="5426362  y[k]=y[k]+A[(i+14)*ny+k]*tmp[(i+14)];...",shape=box];
	5426362 -> _JOIN_5426363;
	ForLoop5421835 [label="ForLoop5421835  for (k=cbv_22; k<=cbv_23; k=k+1) ...",shape=box];
	ForLoop5421835 -> 5421834;
	ForLoop5421835 -> _JOIN_5421835;
	5426365 [label="5426365  int k;...",shape=box];
	ForLoop5425797 [label="ForLoop5425797  for (k=cbv_43; k<=cbv_44; k=k+1) ...",shape=box];
	ForLoop5425797 -> 5425796;
	ForLoop5425797 -> _JOIN_5425797;
	5456926 [label="5456926  register int cbv_13, cbv_14;...",shape=box];
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 5304617;
	_JOIN_5420629 [label="_JOIN_5420629None...",shape=box];
	_JOIN_5420629 -> 5457545;
	ForLoop5422893 [label="ForLoop5422893  for (k=kt; k<=cbv_27; k=k+14) {...",shape=box];
	ForLoop5422893 -> 5422449;
	ForLoop5422893 -> _JOIN_5422893;
	ForLoop5419005 [label="ForLoop5419005  for (k=cbv_7; k<=cbv_8; k=k+1) ...",shape=box];
	ForLoop5419005 -> 5419004;
	ForLoop5419005 -> _JOIN_5419005;
	_JOIN_5422327 [label="_JOIN_5422327None...",shape=box];
	_JOIN_5422327 -> 5459402;
	5456307 [label="5456307  register int cbv_10, cbv_11;...",shape=box];
	ForLoop5429920 [label="ForLoop5429920  for (j=jj; j<=cbv_66; j=j+1) ...",shape=box];
	ForLoop5429920 -> 5429919;
	ForLoop5429920 -> _JOIN_5429920;
	5463116 [label="5463116  register int cbv_43, cbv_44;...",shape=box];
	_JOIN_5420703 [label="_JOIN_5420703None...",shape=box];
	_JOIN_5420703 -> 5420705;
	_JOIN_5418931 [label="_JOIN_5418931None...",shape=box];
	_JOIN_5418931 -> 5455688;
	5430895 [label="5430895  int k;...",shape=box];
	_JOIN_5425797 [label="_JOIN_5425797None...",shape=box];
	_JOIN_5425797 -> 5425799;
	5423532 [label="5423532  y[k]=y[k]+A[(i+9)*ny+k]*tmp[(i+9)];...",shape=box];
	5423532 -> _JOIN_5423533;
	5423535 [label="5423535  int k;...",shape=box];
	_JOIN_5429759 [label="_JOIN_5429759None...",shape=box];
	_JOIN_5429759 -> _JOIN_5429762;
	5419053 [label="5419053  y[k]=y[k]+A[(i+2)*ny+k]*tmp[(i+2)];...",shape=box];
	_JOIN_5421835 [label="_JOIN_5421835None...",shape=box];
	_JOIN_5421835 -> 5421837;
	5458783 [label="5458783  register int cbv_22, cbv_23;...",shape=box];
	_JOIN_5429685 [label="_JOIN_5429685None...",shape=box];
	_JOIN_5429685 -> 5467449;
	5425796 [label="5425796  y[k]=y[k]+A[(i+13)*ny+k]*tmp[(i+13)];...",shape=box];
	5425796 -> _JOIN_5425797;
	ForLoop5421761 [label="ForLoop5421761  for (k=kt; k<=cbv_21; k=k+14) {...",shape=box];
	ForLoop5421761 -> 5421317;
	ForLoop5421761 -> _JOIN_5421761;
	ForLoop5427421 [label="ForLoop5427421  for (k=kt; k<=cbv_51; k=k+14) {...",shape=box];
	ForLoop5427421 -> 5426977;
	ForLoop5427421 -> _JOIN_5427421;
	5428626 [label="5428626  y[k]=y[k]+A[(i+18)*ny+k]*tmp[(i+18)];...",shape=box];
	5428626 -> _JOIN_5428627;
	_JOIN_5429119 [label="_JOIN_5429119None...",shape=box];
	_JOIN_5429119 -> 5466830;
	5428629 [label="5428629  int k;...",shape=box];
	5424664 [label="5424664  y[k]=y[k]+A[(i+11)*ny+k]*tmp[(i+11)];...",shape=box];
	5424664 -> _JOIN_5424665;
	5460640 [label="5460640  register int cbv_31, cbv_32;...",shape=box];
	5425799 [label="5425799  int k;...",shape=box];
	5424667 [label="5424667  int k;...",shape=box];
	_JOIN_5429762 [label="_JOIN_5429762None...",shape=box];
	_JOIN_5429762 -> _JOIN_5429764;
	_JOIN_5429766 [label="_JOIN_5429766None...",shape=box];
	_JOIN_5429766 -> ForLoop5431375;
	_JOIN_5425157 [label="_JOIN_5425157None...",shape=box];
	_JOIN_5425157 -> 5462497;
	_JOIN_5424025 [label="_JOIN_5424025None...",shape=box];
	_JOIN_5424025 -> 5461259;
	5421837 [label="5421837  int k;...",shape=box];
	5421834 [label="5421834  y[k]=y[k]+A[(i+6)*ny+k]*tmp[(i+6)];...",shape=box];
	5421834 -> _JOIN_5421835;
	5460021 [label="5460021  register int cbv_28, cbv_29;...",shape=box];
	5428109 [label="5428109  y[k]=y[k]+A[(i+18)*ny+k]*tmp[(i+18)];...",shape=box];
	_JOIN_5431369 [label="_JOIN_5431369None...",shape=box];
	_JOIN_5431369 -> _JOIN_5431372;
	5467449 [label="5467449  register int cbv_64, cbv_65;...",shape=box];
	5424147 [label="5424147  y[k]=y[k]+A[(i+11)*ny+k]*tmp[(i+11)];...",shape=box];
	ForLoop5420137 [label="ForLoop5420137  for (k=cbv_13; k<=cbv_14; k=k+1) ...",shape=box];
	ForLoop5420137 -> 5420136;
	ForLoop5420137 -> _JOIN_5420137;
	ForLoop5429759 [label="ForLoop5429759  for (k=cbv_64; k<=cbv_65; k=k+1) ...",shape=box];
	ForLoop5429759 -> 5429758;
	ForLoop5429759 -> _JOIN_5429759;
	5463735 [label="5463735  register int cbv_46, cbv_47;...",shape=box];
	_JOIN_5423459 [label="_JOIN_5423459None...",shape=box];
	_JOIN_5423459 -> 5460640;
	5429878 [label="5429878  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	5455069 [label="5455069  register int cbv_4, cbv_5;...",shape=box];
	5423581 [label="5423581  y[k]=y[k]+A[(i+10)*ny+k]*tmp[(i+10)];...",shape=box];
	5395494 [label="5395494  y[kt]=y[kt]+A[i*ny+kt]*tmp[i];...",shape=box];
	ForLoop5424025 [label="ForLoop5424025  for (k=kt; k<=cbv_33; k=k+14) {...",shape=box];
	ForLoop5424025 -> 5423581;
	ForLoop5424025 -> _JOIN_5424025;
	5420185 [label="5420185  y[k]=y[k]+A[(i+4)*ny+k]*tmp[(i+4)];...",shape=box];
	5468485 [label="5468485  register int cbv_67;...",shape=box];
	ForLoop5427495 [label="ForLoop5427495  for (k=cbv_52; k<=cbv_53; k=k+1) ...",shape=box];
	ForLoop5427495 -> 5427494;
	ForLoop5427495 -> _JOIN_5427495;
	5425230 [label="5425230  y[k]=y[k]+A[(i+12)*ny+k]*tmp[(i+12)];...",shape=box];
	5425230 -> _JOIN_5425231;
	5420751 [label="5420751  y[k]=y[k]+A[(i+5)*ny+k]*tmp[(i+5)];...",shape=box];
	5425233 [label="5425233  int k;...",shape=box];
	5465592 [label="5465592  register int cbv_55, cbv_56;...",shape=box];
	_JOIN_5424099 [label="_JOIN_5424099None...",shape=box];
	_JOIN_5424099 -> 5424101;
	5459402 [label="5459402  register int cbv_25, cbv_26;...",shape=box];
	5424713 [label="5424713  y[k]=y[k]+A[(i+12)*ny+k]*tmp[(i+12)];...",shape=box];
	5394779 [label="5394779  tmp[i]=tmp[i]+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_5425231 [label="_JOIN_5425231None...",shape=box];
	_JOIN_5425231 -> 5425233;
	_JOIN_5431372 [label="_JOIN_5431372None...",shape=box];
	_JOIN_5431372 -> _JOIN_5431373;
	ForLoop5431373 [label="ForLoop5431373  for (kkk=0; kkk<=ny-1; kkk=kkk+512) ...",shape=box];
	ForLoop5431373 -> ForLoop5431372;
	ForLoop5431373 -> _JOIN_5431373;
	ForLoop5425231 [label="ForLoop5425231  for (k=cbv_40; k<=cbv_41; k=k+1) ...",shape=box];
	ForLoop5425231 -> 5425230;
	ForLoop5425231 -> _JOIN_5425231;
	5421883 [label="5421883  y[k]=y[k]+A[(i+7)*ny+k]*tmp[(i+7)];...",shape=box];
	5424098 [label="5424098  y[k]=y[k]+A[(i+10)*ny+k]*tmp[(i+10)];...",shape=box];
	5424098 -> _JOIN_5424099;
	ForLoop5431301 [label="ForLoop5431301  for (k=kt; k<=cbv_68; k=k+14) {...",shape=box];
	ForLoop5431301 -> 5430935;
	ForLoop5431301 -> _JOIN_5431301;
	ForLoop5419571 [label="ForLoop5419571  for (k=cbv_10; k<=cbv_11; k=k+1) ...",shape=box];
	ForLoop5419571 -> 5419570;
	ForLoop5419571 -> _JOIN_5419571;
	ForLoop5428061 [label="ForLoop5428061  for (k=cbv_55; k<=cbv_56; k=k+1) ...",shape=box];
	ForLoop5428061 -> 5428060;
	ForLoop5428061 -> _JOIN_5428061;
	5420136 [label="5420136  y[k]=y[k]+A[(i+3)*ny+k]*tmp[(i+3)];...",shape=box];
	5420136 -> _JOIN_5420137;
	5420139 [label="5420139  int k;...",shape=box];
	_JOIN_5429193 [label="_JOIN_5429193None...",shape=box];
	_JOIN_5429193 -> 5429195;
	_JOIN_5428061 [label="_JOIN_5428061None...",shape=box];
	_JOIN_5428061 -> 5428063;
	5419619 [label="5419619  y[k]=y[k]+A[(i+3)*ny+k]*tmp[(i+3)];...",shape=box];
	5422449 [label="5422449  y[k]=y[k]+A[(i+8)*ny+k]*tmp[(i+8)];...",shape=box];
	ForLoop5424099 [label="ForLoop5424099  for (k=cbv_34; k<=cbv_35; k=k+1) ...",shape=box];
	ForLoop5424099 -> 5424098;
	ForLoop5424099 -> _JOIN_5424099;
	5466211 [label="5466211  register int cbv_58, cbv_59;...",shape=box];
	5421268 [label="5421268  y[k]=y[k]+A[(i+5)*ny+k]*tmp[(i+5)];...",shape=box];
	5421268 -> _JOIN_5421269;
	ForLoop5425157 [label="ForLoop5425157  for (k=kt; k<=cbv_39; k=k+14) {...",shape=box];
	ForLoop5425157 -> 5424713;
	ForLoop5425157 -> _JOIN_5425157;
	ForLoop5424665 [label="ForLoop5424665  for (k=cbv_37; k<=cbv_38; k=k+1) ...",shape=box];
	ForLoop5424665 -> 5424664;
	ForLoop5424665 -> _JOIN_5424665;
	5462497 [label="5462497  register int cbv_40, cbv_41;...",shape=box];
	ForLoop5422401 [label="ForLoop5422401  for (k=cbv_25; k<=cbv_26; k=k+1) ...",shape=box];
	ForLoop5422401 -> 5422400;
	ForLoop5422401 -> _JOIN_5422401;
	ForLoop5429685 [label="ForLoop5429685  for (k=kt; k<=cbv_63; k=k+14) {...",shape=box];
	ForLoop5429685 -> 5429241;
	ForLoop5429685 -> _JOIN_5429685;
	ForLoop5424591 [label="ForLoop5424591  for (k=kt; k<=cbv_36; k=k+14) {...",shape=box];
	ForLoop5424591 -> 5424147;
	ForLoop5424591 -> _JOIN_5424591;
	ForLoop5423459 [label="ForLoop5423459  for (k=kt; k<=cbv_30; k=k+14) {...",shape=box];
	ForLoop5423459 -> 5423015;
	ForLoop5423459 -> _JOIN_5423459;
	ForLoop5304841 [expected=9369846271501.798828
actual=9369846271501.798828
label="ForLoop5304841  for (i=ny-((ny-(0))%5); i<=ny-1; i=i+1) ...",shape=box];
	ForLoop5304841 -> 5304840;
	ForLoop5304841 -> _JOIN_5304841;
	_JOIN_5431375 [label="_JOIN_5431375None...",shape=box];
	_JOIN_5418371 [label="_JOIN_5418371None...",shape=box];
	_JOIN_5418371 -> 5455069;
	5426931 [label="5426931  int k;...",shape=box];
	ForLoop5418371 [label="ForLoop5418371  for (k=kt; k<=cbv_3; k=k+14) {...",shape=box];
	ForLoop5418371 -> 5418005;
	ForLoop5418371 -> _JOIN_5418371;
	5426977 [label="5426977  y[k]=y[k]+A[(i+16)*ny+k]*tmp[(i+16)];...",shape=box];
	5425845 [label="5425845  y[k]=y[k]+A[(i+14)*ny+k]*tmp[(i+14)];...",shape=box];
	_JOIN_5431301 [label="_JOIN_5431301None...",shape=box];
	_JOIN_5431301 -> 5468981;
	ForLoop5428553 [label="ForLoop5428553  for (k=kt; k<=cbv_57; k=k+14) {...",shape=box];
	ForLoop5428553 -> 5428109;
	ForLoop5428553 -> _JOIN_5428553;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest30.exe __orio_perftest30.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest30.exe  
{'[0, 6, 3, 0, 0, 4, 1, 0, 4, 20, 0, 13, 0, 0, 2, 0, 0, 1]' : 0.149072}
{'[0, 6, 3, 0, 0, 4, 1, 0, 4, 20, 0, 13, 0, 0, 2, 0, 0, 1]' : 0.149607}
{'[0, 6, 3, 0, 0, 4, 1, 0, 4, 20, 0, 13, 0, 0, 2, 0, 0, 1]' : 0.155543}
{'[0, 6, 3, 0, 0, 4, 1, 0, 4, 20, 0, 13, 0, 0, 2, 0, 0, 1]' : 0.148734}
{'[0, 6, 3, 0, 0, 4, 1, 0, 4, 20, 0, 13, 0, 0, 2, 0, 0, 1]' : 0.148586}
{'[0, 6, 3, 0, 0, 4, 1, 0, 4, 20, 0, 13, 0, 0, 2, 0, 0, 1]' : 0.14874}
{'[0, 6, 3, 0, 0, 4, 1, 0, 4, 20, 0, 13, 0, 0, 2, 0, 0, 1]' : 0.148576}
{'[0, 6, 3, 0, 0, 4, 1, 0, 4, 20, 0, 13, 0, 0, 2, 0, 0, 1]' : 0.148802}
{'[0, 6, 3, 0, 0, 4, 1, 0, 4, 20, 0, 13, 0, 0, 2, 0, 0, 1]' : 0.148678}
{'[0, 6, 3, 0, 0, 4, 1, 0, 4, 20, 0, 13, 0, 0, 2, 0, 0, 1]' : 0.148938}
{'[0, 6, 3, 0, 0, 4, 1, 0, 4, 20, 0, 13, 0, 0, 2, 0, 0, 1]' : 0.148647}
{'[0, 6, 3, 0, 0, 4, 1, 0, 4, 20, 0, 13, 0, 0, 2, 0, 0, 1]' : 0.148674}
{'[0, 6, 3, 0, 0, 4, 1, 0, 4, 20, 0, 13, 0, 0, 2, 0, 0, 1]' : 0.155645}
{'[0, 6, 3, 0, 0, 4, 1, 0, 4, 20, 0, 13, 0, 0, 2, 0, 0, 1]' : 0.148708}
{'[0, 6, 3, 0, 0, 4, 1, 0, 4, 20, 0, 13, 0, 0, 2, 0, 0, 1]' : 0.149679}
{'[0, 6, 3, 0, 0, 4, 1, 0, 4, 20, 0, 13, 0, 0, 2, 0, 0, 1]' : 0.148628}
{'[0, 6, 3, 0, 0, 4, 1, 0, 4, 20, 0, 13, 0, 0, 2, 0, 0, 1]' : 0.148567}
{'[0, 6, 3, 0, 0, 4, 1, 0, 4, 20, 0, 13, 0, 0, 2, 0, 0, 1]' : 0.148669}
{'[0, 6, 3, 0, 0, 4, 1, 0, 4, 20, 0, 13, 0, 0, 2, 0, 0, 1]' : 0.148747}
{'[0, 6, 3, 0, 0, 4, 1, 0, 4, 20, 0, 13, 0, 0, 2, 0, 0, 1]' : 0.148653}
{'[0, 6, 3, 0, 0, 4, 1, 0, 4, 20, 0, 13, 0, 0, 2, 0, 0, 1]' : 0.148822}
{'[0, 6, 3, 0, 0, 4, 1, 0, 4, 20, 0, 13, 0, 0, 2, 0, 0, 1]' : 0.148775}
{'[0, 6, 3, 0, 0, 4, 1, 0, 4, 20, 0, 13, 0, 0, 2, 0, 0, 1]' : 0.155458}
{'[0, 6, 3, 0, 0, 4, 1, 0, 4, 20, 0, 13, 0, 0, 2, 0, 0, 1]' : 0.148762}
{'[0, 6, 3, 0, 0, 4, 1, 0, 4, 20, 0, 13, 0, 0, 2, 0, 0, 1]' : 0.148663}
{'[0, 6, 3, 0, 0, 4, 1, 0, 4, 20, 0, 13, 0, 0, 2, 0, 0, 1]' : 0.148687}
{'[0, 6, 3, 0, 0, 4, 1, 0, 4, 20, 0, 13, 0, 0, 2, 0, 0, 1]' : 0.148605}
{'[0, 6, 3, 0, 0, 4, 1, 0, 4, 20, 0, 13, 0, 0, 2, 0, 0, 1]' : 0.148783}
{'[0, 6, 3, 0, 0, 4, 1, 0, 4, 20, 0, 13, 0, 0, 2, 0, 0, 1]' : 0.149861}
{'[0, 6, 3, 0, 0, 4, 1, 0, 4, 20, 0, 13, 0, 0, 2, 0, 0, 1]' : 0.148701}

out:
 ["{'[0, 6, 3, 0, 0, 4, 1, 0, 4, 20, 0, 13, 0, 0, 2, 0, 0, 1]' : 0.149072}", "{'[0, 6, 3, 0, 0, 4, 1, 0, 4, 20, 0, 13, 0, 0, 2, 0, 0, 1]' : 0.149607}", "{'[0, 6, 3, 0, 0, 4, 1, 0, 4, 20, 0, 13, 0, 0, 2, 0, 0, 1]' : 0.155543}", "{'[0, 6, 3, 0, 0, 4, 1, 0, 4, 20, 0, 13, 0, 0, 2, 0, 0, 1]' : 0.148734}", "{'[0, 6, 3, 0, 0, 4, 1, 0, 4, 20, 0, 13, 0, 0, 2, 0, 0, 1]' : 0.148586}", "{'[0, 6, 3, 0, 0, 4, 1, 0, 4, 20, 0, 13, 0, 0, 2, 0, 0, 1]' : 0.14874}", "{'[0, 6, 3, 0, 0, 4, 1, 0, 4, 20, 0, 13, 0, 0, 2, 0, 0, 1]' : 0.148576}", "{'[0, 6, 3, 0, 0, 4, 1, 0, 4, 20, 0, 13, 0, 0, 2, 0, 0, 1]' : 0.148802}", "{'[0, 6, 3, 0, 0, 4, 1, 0, 4, 20, 0, 13, 0, 0, 2, 0, 0, 1]' : 0.148678}", "{'[0, 6, 3, 0, 0, 4, 1, 0, 4, 20, 0, 13, 0, 0, 2, 0, 0, 1]' : 0.148938}", "{'[0, 6, 3, 0, 0, 4, 1, 0, 4, 20, 0, 13, 0, 0, 2, 0, 0, 1]' : 0.148647}", "{'[0, 6, 3, 0, 0, 4, 1, 0, 4, 20, 0, 13, 0, 0, 2, 0, 0, 1]' : 0.148674}", "{'[0, 6, 3, 0, 0, 4, 1, 0, 4, 20, 0, 13, 0, 0, 2, 0, 0, 1]' : 0.155645}", "{'[0, 6, 3, 0, 0, 4, 1, 0, 4, 20, 0, 13, 0, 0, 2, 0, 0, 1]' : 0.148708}", "{'[0, 6, 3, 0, 0, 4, 1, 0, 4, 20, 0, 13, 0, 0, 2, 0, 0, 1]' : 0.149679}", "{'[0, 6, 3, 0, 0, 4, 1, 0, 4, 20, 0, 13, 0, 0, 2, 0, 0, 1]' : 0.148628}", "{'[0, 6, 3, 0, 0, 4, 1, 0, 4, 20, 0, 13, 0, 0, 2, 0, 0, 1]' : 0.148567}", "{'[0, 6, 3, 0, 0, 4, 1, 0, 4, 20, 0, 13, 0, 0, 2, 0, 0, 1]' : 0.148669}", "{'[0, 6, 3, 0, 0, 4, 1, 0, 4, 20, 0, 13, 0, 0, 2, 0, 0, 1]' : 0.148747}", "{'[0, 6, 3, 0, 0, 4, 1, 0, 4, 20, 0, 13, 0, 0, 2, 0, 0, 1]' : 0.148653}", "{'[0, 6, 3, 0, 0, 4, 1, 0, 4, 20, 0, 13, 0, 0, 2, 0, 0, 1]' : 0.148822}", "{'[0, 6, 3, 0, 0, 4, 1, 0, 4, 20, 0, 13, 0, 0, 2, 0, 0, 1]' : 0.148775}", "{'[0, 6, 3, 0, 0, 4, 1, 0, 4, 20, 0, 13, 0, 0, 2, 0, 0, 1]' : 0.155458}", "{'[0, 6, 3, 0, 0, 4, 1, 0, 4, 20, 0, 13, 0, 0, 2, 0, 0, 1]' : 0.148762}", "{'[0, 6, 3, 0, 0, 4, 1, 0, 4, 20, 0, 13, 0, 0, 2, 0, 0, 1]' : 0.148663}", "{'[0, 6, 3, 0, 0, 4, 1, 0, 4, 20, 0, 13, 0, 0, 2, 0, 0, 1]' : 0.148687}", "{'[0, 6, 3, 0, 0, 4, 1, 0, 4, 20, 0, 13, 0, 0, 2, 0, 0, 1]' : 0.148605}", "{'[0, 6, 3, 0, 0, 4, 1, 0, 4, 20, 0, 13, 0, 0, 2, 0, 0, 1]' : 0.148783}", "{'[0, 6, 3, 0, 0, 4, 1, 0, 4, 20, 0, 13, 0, 0, 2, 0, 0, 1]' : 0.149861}", "{'[0, 6, 3, 0, 0, 4, 1, 0, 4, 20, 0, 13, 0, 0, 2, 0, 0, 1]' : 0.148701}"]
returning from 'run': {'[0, 6, 3, 0, 0, 4, 1, 0, 4, 20, 0, 13, 0, 0, 2, 0, 0, 1]': ([0.149072, 0.149607, 0.155543, 0.148734, 0.148586, 0.14874, 0.148576, 0.148802, 0.148678, 0.148938, 0.148647, 0.148674, 0.155645, 0.148708, 0.149679, 0.148628, 0.148567, 0.148669, 0.148747, 0.148653, 0.148822, 0.148775, 0.155458, 0.148762, 0.148663, 0.148687, 0.148605, 0.148783, 0.149861, 0.148701], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.149072, 0.149607, 0.155543, 0.148734, 0.148586, 0.14874, 0.148576, 0.148802, 0.148678, 0.148938, 0.148647, 0.148674, 0.155645, 0.148708, 0.149679, 0.148628, 0.148567, 0.148669, 0.148747, 0.148653, 0.148822, 0.148775, 0.155458, 0.148762, 0.148663, 0.148687, 0.148605, 0.148783, 0.149861, 0.148701], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 3, 0, 0, 4, 1, 0, 4, 20, 0, 13, 0, 0, 2, 0, 0, 1]': ([0.149072, 0.149607, 0.155543, 0.148734, 0.148586, 0.14874, 0.148576, 0.148802, 0.148678, 0.148938, 0.148647, 0.148674, 0.155645, 0.148708, 0.149679, 0.148628, 0.148567, 0.148669, 0.148747, 0.148653, 0.148822, 0.148775, 0.155458, 0.148762, 0.148663, 0.148687, 0.148605, 0.148783, 0.149861, 0.148701], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [1, 5, 4, 1, 0, 0, 0, 0, 10, 0, 25, 29, 1, 0, 0, 0, 1, 0]
Fixed Factors: {}
Testing candidate 31: [1, 5, 4, 1, 0, 0, 0, 0, 10, 0, 25, 29, 1, 0, 0, 0, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	5
        Additions: 		3379
        Multiplications: 	1044
        Divisions: 		0
        Logical: 		0
        Reads: 			5384
        Writes: 		575
        Comparisons:		18
        Gotos: 			0
        
digraph CFG {
	5469459 [label="5469459  int i;...",shape=box];
	5526783 [label="5526783  y[k]=y[k]+A[it*ny+k]*tmp[it];...",shape=box];
	ForLoop5478244 [label="ForLoop5478244  for (jj=0; jj<=ny-1; jj=jj+256) {...",shape=box];
	ForLoop5478244 -> 5488980;
	ForLoop5478244 -> _JOIN_5478244;
	_JOIN_5478297 [label="_JOIN_5478297None...",shape=box];
	_JOIN_5478297 -> _JOIN_5478299;
	_JOIN_5478376 [label="_JOIN_5478376None...",shape=box];
	_JOIN_5478376 -> ForLoop5478429;
	5559701 [label="5559701  tmp[i]=tmp[i]+A[i*ny+j]*x[j];...",shape=box];
	5469826 [label="5469826  y[i]=0.0;...",shape=box];
	5469826 -> _JOIN_5469827;
	5562683 [label="5562683  y[k]=y[k]+A[i*ny+k]*tmp[i];...",shape=box];
	ForLoop5563623 [label="ForLoop5563623  for (k=(min(ny-1,kk+127))-(((min(ny-1,kk+127))-(kk)+1)%30)+1; k<=min(ny-1,kk+127); k=k+1) ...",shape=box];
	ForLoop5563623 -> 5563622;
	ForLoop5563623 -> _JOIN_5563623;
	ForLoop5506487 [label="ForLoop5506487  for (j=jj; j<=min(ny-1,jj+255)-25; j=j+26) {...",shape=box];
	ForLoop5506487 -> 5499707;
	ForLoop5506487 -> _JOIN_5506487;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 5469459;
	5488980 [label="5488980  int j;...",shape=box];
	5488980 -> ForLoop5506487;
	5563622 [label="5563622  y[k]=y[k]+A[i*ny+k]*tmp[i];...",shape=box];
	5563622 -> _JOIN_5563623;
	5469967 [label="5469967  register int cbv_2, cbv_3;...",shape=box];
	5514347 [label="5514347  int k;...",shape=box];
	5514347 -> ForLoop5534681;
	5534806 [label="5534806  y[k]=y[k]+A[it*ny+k]*tmp[it];...",shape=box];
	ForLoop5506817 [label="ForLoop5506817  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jj)+1)%26)+1; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop5506817 -> 5506612;
	ForLoop5506817 -> _JOIN_5506817;
	_JOIN_5506487 [label="_JOIN_5506487None...",shape=box];
	_JOIN_5506487 -> ForLoop5506817;
	5477027 [label="5477027  double x_copy;...",shape=box];
	5506612 [label="5506612  tmp[it]=tmp[it]+A[it*ny+j]*x[j];...",shape=box];
	5561261 [label="5561261  int k;...",shape=box];
	5561261 -> ForLoop5563497;
	_JOIN_5478429 [label="_JOIN_5478429None...",shape=box];
	_JOIN_5478429 -> _JOIN_5478431;
	_JOIN_5473371 [label="_JOIN_5473371None...",shape=box];
	_JOIN_5473371 -> _JOIN_5473372;
	ForLoop5534990 [label="ForLoop5534990  for (k=(min(ny-1,kk+127))-(((min(ny-1,kk+127))-(kk)+1)%30)+1; k<=min(ny-1,kk+127); k=k+1) {...",shape=box];
	ForLoop5534990 -> 5534806;
	ForLoop5534990 -> _JOIN_5534990;
	ForLoop5478429 [label="ForLoop5478429  for (kk=0; kk<=ny-1; kk=kk+128) {...",shape=box];
	ForLoop5478429 -> 5561261;
	ForLoop5478429 -> _JOIN_5478429;
	5478442 [label="5478442  tmp[it]=0;...",shape=box];
	5478442 -> ForLoop5478244;
	5558584 [label="5558584  int j;...",shape=box];
	5558584 -> ForLoop5560328;
	5469666 [label="5469666  y[i]=0.0;...",shape=box];
	5499707 [label="5499707  tmp[it]=tmp[it]+A[it*ny+j]*x[j];...",shape=box];
	_JOIN_5534681 [label="_JOIN_5534681None...",shape=box];
	_JOIN_5534681 -> ForLoop5534990;
	ForLoop5534681 [label="ForLoop5534681  for (k=kk; k<=min(ny-1,kk+127)-29; k=k+30) {...",shape=box];
	ForLoop5534681 -> 5526783;
	ForLoop5534681 -> _JOIN_5534681;
	_JOIN_5473372 [label="_JOIN_5473372None...",shape=box];
	ForLoop5563497 [label="ForLoop5563497  for (k=kk; k<=min(ny-1,kk+127)-29; k=k+30) {...",shape=box];
	ForLoop5563497 -> 5562683;
	ForLoop5563497 -> _JOIN_5563497;
	ForLoop5469758 [label="ForLoop5469758  for (i=0; i<=cbv_1; i=i+11) {...",shape=box];
	ForLoop5469758 -> 5469666;
	ForLoop5469758 -> _JOIN_5469758;
	_JOIN_5560454 [label="_JOIN_5560454None...",shape=box];
	_JOIN_5560454 -> _JOIN_5478376;
	ForLoop5560454 [label="ForLoop5560454  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jj)+1)%26)+1; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	ForLoop5560454 -> 5560453;
	ForLoop5560454 -> _JOIN_5560454;
	ForLoop5478376 [label="ForLoop5478376  for (jj=0; jj<=ny-1; jj=jj+256) {...",shape=box];
	ForLoop5478376 -> 5558584;
	ForLoop5478376 -> _JOIN_5478376;
	_JOIN_5478244 [label="_JOIN_5478244None...",shape=box];
	_JOIN_5478244 -> ForLoop5478297;
	_JOIN_5478431 [label="_JOIN_5478431None...",shape=box];
	_JOIN_5478431 -> _JOIN_5473371;
	ForLoop5478299 [label="ForLoop5478299  for (it=ii; it<=min(nx-1,ii+15)-7; it=it+8) {...",shape=box];
	ForLoop5478299 -> 5478442;
	ForLoop5478299 -> _JOIN_5478299;
	_JOIN_5563497 [label="_JOIN_5563497None...",shape=box];
	_JOIN_5563497 -> ForLoop5563623;
	ForLoop5469827 [label="ForLoop5469827  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop5469827 -> 5469826;
	ForLoop5469827 -> _JOIN_5469827;
	_JOIN_5560328 [label="_JOIN_5560328None...",shape=box];
	_JOIN_5560328 -> ForLoop5560454;
	_JOIN_5534990 [label="_JOIN_5534990None...",shape=box];
	_JOIN_5534990 -> _JOIN_5478297;
	_JOIN_5563623 [label="_JOIN_5563623None...",shape=box];
	_JOIN_5563623 -> _JOIN_5478429;
	Forexpected=9369846271501.798828
actual=9369846271501.798828
Loop5478297 [label="ForLoop5478297  for (kk=0; kk<=ny-1; kk=kk+128) {...",shape=box];
	ForLoop5478297 -> 5514347;
	ForLoop5478297 -> _JOIN_5478297;
	5560453 [label="5560453  tmp[i]=tmp[i]+A[i*ny+j]*x[j];...",shape=box];
	5560453 -> _JOIN_5560454;
	_JOIN_5469758 [label="_JOIN_5469758None...",shape=box];
	_JOIN_5469758 -> 5469967;
	ForLoop5473372 [label="ForLoop5473372  for (iii=0; iii<=nx-1; iii=iii+64) ...",shape=box];
	ForLoop5473372 -> ForLoop5473371;
	ForLoop5473372 -> _JOIN_5473372;
	ForLoop5478431 [label="ForLoop5478431  for (i=it; i<=min(nx-1,ii+15); i=i+1) {...",shape=box];
	ForLoop5478431 -> 5478323;
	ForLoop5478431 -> _JOIN_5478431;
	_JOIN_5469827 [label="_JOIN_5469827None...",shape=box];
	_JOIN_5469827 -> 5477027;
	ForLoop5473371 [label="ForLoop5473371  for (ii=iii; ii<=min(nx-1,iii+48); ii=ii+16) {...",shape=box];
	ForLoop5473371 -> ForLoop5478299;
	ForLoop5473371 -> _JOIN_5473371;
	ForLoop5560328 [label="ForLoop5560328  for (j=jj; j<=min(ny-1,jj+255)-25; j=j+26) {...",shape=box];
	ForLoop5560328 -> 5559701;
	ForLoop5560328 -> _JOIN_5560328;
	5478323 [label="5478323  tmp[i]=0;...",shape=box];
	5478323 -> ForLoop5478376;
	_JOIN_5478299 [label="_JOIN_5478299None...",shape=box];
	_JOIN_5478299 -> ForLoop5478431;
	_JOIN_5506817 [label="_JOIN_5506817None...",shape=box];
	_JOIN_5506817 -> _JOIN_5478244;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest31.exe __orio_perftest31.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest31.exe  
{'[1, 5, 4, 1, 0, 0, 0, 0, 10, 0, 25, 29, 1, 0, 0, 0, 1, 0]' : 0.0999062}
{'[1, 5, 4, 1, 0, 0, 0, 0, 10, 0, 25, 29, 1, 0, 0, 0, 1, 0]' : 0.0996759}
{'[1, 5, 4, 1, 0, 0, 0, 0, 10, 0, 25, 29, 1, 0, 0, 0, 1, 0]' : 0.099807}
{'[1, 5, 4, 1, 0, 0, 0, 0, 10, 0, 25, 29, 1, 0, 0, 0, 1, 0]' : 0.0995879}
{'[1, 5, 4, 1, 0, 0, 0, 0, 10, 0, 25, 29, 1, 0, 0, 0, 1, 0]' : 0.099592}
{'[1, 5, 4, 1, 0, 0, 0, 0, 10, 0, 25, 29, 1, 0, 0, 0, 1, 0]' : 0.099694}
{'[1, 5, 4, 1, 0, 0, 0, 0, 10, 0, 25, 29, 1, 0, 0, 0, 1, 0]' : 0.099643}
{'[1, 5, 4, 1, 0, 0, 0, 0, 10, 0, 25, 29, 1, 0, 0, 0, 1, 0]' : 0.0995591}
{'[1, 5, 4, 1, 0, 0, 0, 0, 10, 0, 25, 29, 1, 0, 0, 0, 1, 0]' : 0.0995839}
{'[1, 5, 4, 1, 0, 0, 0, 0, 10, 0, 25, 29, 1, 0, 0, 0, 1, 0]' : 0.099719}
{'[1, 5, 4, 1, 0, 0, 0, 0, 10, 0, 25, 29, 1, 0, 0, 0, 1, 0]' : 0.099673}
{'[1, 5, 4, 1, 0, 0, 0, 0, 10, 0, 25, 29, 1, 0, 0, 0, 1, 0]' : 0.09955}
{'[1, 5, 4, 1, 0, 0, 0, 0, 10, 0, 25, 29, 1, 0, 0, 0, 1, 0]' : 0.0999451}
{'[1, 5, 4, 1, 0, 0, 0, 0, 10, 0, 25, 29, 1, 0, 0, 0, 1, 0]' : 0.0997589}
{'[1, 5, 4, 1, 0, 0, 0, 0, 10, 0, 25, 29, 1, 0, 0, 0, 1, 0]' : 0.099632}
{'[1, 5, 4, 1, 0, 0, 0, 0, 10, 0, 25, 29, 1, 0, 0, 0, 1, 0]' : 0.0995431}
{'[1, 5, 4, 1, 0, 0, 0, 0, 10, 0, 25, 29, 1, 0, 0, 0, 1, 0]' : 0.0997159}
{'[1, 5, 4, 1, 0, 0, 0, 0, 10, 0, 25, 29, 1, 0, 0, 0, 1, 0]' : 0.099669}
{'[1, 5, 4, 1, 0, 0, 0, 0, 10, 0, 25, 29, 1, 0, 0, 0, 1, 0]' : 0.099648}
{'[1, 5, 4, 1, 0, 0, 0, 0, 10, 0, 25, 29, 1, 0, 0, 0, 1, 0]' : 0.099602}
{'[1, 5, 4, 1, 0, 0, 0, 0, 10, 0, 25, 29, 1, 0, 0, 0, 1, 0]' : 0.099673}
{'[1, 5, 4, 1, 0, 0, 0, 0, 10, 0, 25, 29, 1, 0, 0, 0, 1, 0]' : 0.0996418}
{'[1, 5, 4, 1, 0, 0, 0, 0, 10, 0, 25, 29, 1, 0, 0, 0, 1, 0]' : 0.099596}
{'[1, 5, 4, 1, 0, 0, 0, 0, 10, 0, 25, 29, 1, 0, 0, 0, 1, 0]' : 0.0995202}
{'[1, 5, 4, 1, 0, 0, 0, 0, 10, 0, 25, 29, 1, 0, 0, 0, 1, 0]' : 0.099606}
{'[1, 5, 4, 1, 0, 0, 0, 0, 10, 0, 25, 29, 1, 0, 0, 0, 1, 0]' : 0.0996759}
{'[1, 5, 4, 1, 0, 0, 0, 0, 10, 0, 25, 29, 1, 0, 0, 0, 1, 0]' : 0.0996709}
{'[1, 5, 4, 1, 0, 0, 0, 0, 10, 0, 25, 29, 1, 0, 0, 0, 1, 0]' : 0.099957}
{'[1, 5, 4, 1, 0, 0, 0, 0, 10, 0, 25, 29, 1, 0, 0, 0, 1, 0]' : 0.099592}
{'[1, 5, 4, 1, 0, 0, 0, 0, 10, 0, 25, 29, 1, 0, 0, 0, 1, 0]' : 0.0997119}

out:
 ["{'[1, 5, 4, 1, 0, 0, 0, 0, 10, 0, 25, 29, 1, 0, 0, 0, 1, 0]' : 0.0999062}", "{'[1, 5, 4, 1, 0, 0, 0, 0, 10, 0, 25, 29, 1, 0, 0, 0, 1, 0]' : 0.0996759}", "{'[1, 5, 4, 1, 0, 0, 0, 0, 10, 0, 25, 29, 1, 0, 0, 0, 1, 0]' : 0.099807}", "{'[1, 5, 4, 1, 0, 0, 0, 0, 10, 0, 25, 29, 1, 0, 0, 0, 1, 0]' : 0.0995879}", "{'[1, 5, 4, 1, 0, 0, 0, 0, 10, 0, 25, 29, 1, 0, 0, 0, 1, 0]' : 0.099592}", "{'[1, 5, 4, 1, 0, 0, 0, 0, 10, 0, 25, 29, 1, 0, 0, 0, 1, 0]' : 0.099694}", "{'[1, 5, 4, 1, 0, 0, 0, 0, 10, 0, 25, 29, 1, 0, 0, 0, 1, 0]' : 0.099643}", "{'[1, 5, 4, 1, 0, 0, 0, 0, 10, 0, 25, 29, 1, 0, 0, 0, 1, 0]' : 0.0995591}", "{'[1, 5, 4, 1, 0, 0, 0, 0, 10, 0, 25, 29, 1, 0, 0, 0, 1, 0]' : 0.0995839}", "{'[1, 5, 4, 1, 0, 0, 0, 0, 10, 0, 25, 29, 1, 0, 0, 0, 1, 0]' : 0.099719}", "{'[1, 5, 4, 1, 0, 0, 0, 0, 10, 0, 25, 29, 1, 0, 0, 0, 1, 0]' : 0.099673}", "{'[1, 5, 4, 1, 0, 0, 0, 0, 10, 0, 25, 29, 1, 0, 0, 0, 1, 0]' : 0.09955}", "{'[1, 5, 4, 1, 0, 0, 0, 0, 10, 0, 25, 29, 1, 0, 0, 0, 1, 0]' : 0.0999451}", "{'[1, 5, 4, 1, 0, 0, 0, 0, 10, 0, 25, 29, 1, 0, 0, 0, 1, 0]' : 0.0997589}", "{'[1, 5, 4, 1, 0, 0, 0, 0, 10, 0, 25, 29, 1, 0, 0, 0, 1, 0]' : 0.099632}", "{'[1, 5, 4, 1, 0, 0, 0, 0, 10, 0, 25, 29, 1, 0, 0, 0, 1, 0]' : 0.0995431}", "{'[1, 5, 4, 1, 0, 0, 0, 0, 10, 0, 25, 29, 1, 0, 0, 0, 1, 0]' : 0.0997159}", "{'[1, 5, 4, 1, 0, 0, 0, 0, 10, 0, 25, 29, 1, 0, 0, 0, 1, 0]' : 0.099669}", "{'[1, 5, 4, 1, 0, 0, 0, 0, 10, 0, 25, 29, 1, 0, 0, 0, 1, 0]' : 0.099648}", "{'[1, 5, 4, 1, 0, 0, 0, 0, 10, 0, 25, 29, 1, 0, 0, 0, 1, 0]' : 0.099602}", "{'[1, 5, 4, 1, 0, 0, 0, 0, 10, 0, 25, 29, 1, 0, 0, 0, 1, 0]' : 0.099673}", "{'[1, 5, 4, 1, 0, 0, 0, 0, 10, 0, 25, 29, 1, 0, 0, 0, 1, 0]' : 0.0996418}", "{'[1, 5, 4, 1, 0, 0, 0, 0, 10, 0, 25, 29, 1, 0, 0, 0, 1, 0]' : 0.099596}", "{'[1, 5, 4, 1, 0, 0, 0, 0, 10, 0, 25, 29, 1, 0, 0, 0, 1, 0]' : 0.0995202}", "{'[1, 5, 4, 1, 0, 0, 0, 0, 10, 0, 25, 29, 1, 0, 0, 0, 1, 0]' : 0.099606}", "{'[1, 5, 4, 1, 0, 0, 0, 0, 10, 0, 25, 29, 1, 0, 0, 0, 1, 0]' : 0.0996759}", "{'[1, 5, 4, 1, 0, 0, 0, 0, 10, 0, 25, 29, 1, 0, 0, 0, 1, 0]' : 0.0996709}", "{'[1, 5, 4, 1, 0, 0, 0, 0, 10, 0, 25, 29, 1, 0, 0, 0, 1, 0]' : 0.099957}", "{'[1, 5, 4, 1, 0, 0, 0, 0, 10, 0, 25, 29, 1, 0, 0, 0, 1, 0]' : 0.099592}", "{'[1, 5, 4, 1, 0, 0, 0, 0, 10, 0, 25, 29, 1, 0, 0, 0, 1, 0]' : 0.0997119}"]
returning from 'run': {'[1, 5, 4, 1, 0, 0, 0, 0, 10, 0, 25, 29, 1, 0, 0, 0, 1, 0]': ([0.0999062, 0.0996759, 0.099807, 0.0995879, 0.099592, 0.099694, 0.099643, 0.0995591, 0.0995839, 0.099719, 0.099673, 0.09955, 0.0999451, 0.0997589, 0.099632, 0.0995431, 0.0997159, 0.099669, 0.099648, 0.099602, 0.099673, 0.0996418, 0.099596, 0.0995202, 0.099606, 0.0996759, 0.0996709, 0.099957, 0.099592, 0.0997119], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.0999062, 0.0996759, 0.099807, 0.0995879, 0.099592, 0.099694, 0.099643, 0.0995591, 0.0995839, 0.099719, 0.099673, 0.09955, 0.0999451, 0.0997589, 0.099632, 0.0995431, 0.0997159, 0.099669, 0.099648, 0.099602, 0.099673, 0.0996418, 0.099596, 0.0995202, 0.099606, 0.0996759, 0.0996709, 0.099957, 0.099592, 0.0997119], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[1, 5, 4, 1, 0, 0, 0, 0, 10, 0, 25, 29, 1, 0, 0, 0, 1, 0]': ([0.0999062, 0.0996759, 0.099807, 0.0995879, 0.099592, 0.099694, 0.099643, 0.0995591, 0.0995839, 0.099719, 0.099673, 0.09955, 0.0999451, 0.0997589, 0.099632, 0.0995431, 0.0997159, 0.099669, 0.099648, 0.099602, 0.099673, 0.0996418, 0.099596, 0.0995202, 0.099606, 0.0996759, 0.0996709, 0.099957, 0.099592, 0.0997119], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [0, 2, 1, 1, 0, 2, 0, 1, 26, 0, 22, 6, 1, 0, 1, 1, 0, 0]
Fixed Factors: {}
Testing candidate 32: [0, 2, 1, 1, 0, 2, 0, 1, 26, 0, 22, 6, 1, 0, 1, 1, 0, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	5
        Additions: 		1291
        Multiplications: 	576
        Divisions: 		0
        Logical: 		0
        Reads: 			2515
        Writes: 		438
        Comparisons:		21
        Gotos: 			0
        
digraph CFG {
	5600637 [label="5600637  int i;...",shape=box];
	5600637 -> ForLoop5601320;
	_JOIN_5726647 [label="_JOIN_5726647None...",shape=box];
	_JOIN_5726647 -> _JOIN_5726648;
	ForLoop5722933 [label="ForLoop5722933  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jj)+1)%23)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop5722933 -> 5735738;
	ForLoop5722933 -> _JOIN_5722933;
	5735738 [label="5735738  double scv_24;...",shape=box];
	_JOIN_5601320 [label="_JOIN_5601320None...",shape=box];
	_JOIN_5601320 -> ForLoop5601389;
	5744738 [label="5744738  double scv_25, scv_26, scv_27, scv_28, scv_29, scv_30, scv_31, scv_32;...",shape=box];
	ForLoop5722935 [label="ForLoop5722935  for (jj=0; jj<=ny-1; jj=jj+32) {...",shape=box];
	ForLoop5722935 -> 5716630;
	ForLoop5722935 -> _JOIN_5722935;
	_JOIN_5601389 [label="_JOIN_5601389None...",shape=box];
	_JOIN_5601389 -> 5716576;
	5716576 [label="5716576  double x_copy;...",shape=box];
	ForLoop5726652 [label="ForLoop5726652  for (iii=0; iii<=nx-1; iii=iii+64) {...",shape=box];
	ForLoop5726652 -> ForLoop5725559;
	ForLoop5726652 -> _JOIN_5726652;
	ForLoop5726650 [label="ForLoop5726650  for (i=it; i<=min(nx-1,iii+63); i=i+1) {...",shape=box];
	ForLoop5726650 -> 5761107;
	ForLoop5726650 -> _JOIN_5726650;
	5716630 [label="5716630  int j;...",shape=box];
	5716630 -> ForLoop5722661;
	_JOIN_5726648 [label="_JOIN_5726648None...",shape=box];
	_JOIN_5726648 -> 5761119;
	5601084 [label="5601084  y[i]=0.0;...",shape=box];
	_JOIN_5726614 [label="_JOIN_5726614None...",shape=box];
	_JOIN_5726614 -> 5726645;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 5600637;
	_JOIN_5726189 [label="_JOIN_5726189None...",shape=box];
	_JOIN_5726189 -> ForLoop5726257;
	ForLoop5726257 [label="ForLoop5726257  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jj)+1)%23)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop5726257 -> 5726256;
	ForLoop5726257 -> _JOIN_5726257;
	_JOIN_5725559 [label="_JOIN_5725559None...",shape=box];
	_JOIN_5725559 -> ForLoop5726650;
	_JOIN_5722933 [label="_JOIN_5722933None...",shape=box];
	_JOIN_5722933 -> _JOIN_5722935;
	ForLoop5725523 [label="ForLoop5725523  for (kt=kk; kt<=min(ny-1,kk+15)-7; kt=kt+8) {...",shape=box];
	ForLoop5725523 -> 5744738;
	ForLoop5725523 -> _JOIN_5725523;
	ForLoop5726259 [label="ForLoop5726259  for (jj=0; jj<=ny-1; jj=jj+32) {...",shape=box];
	ForLoop5726259 -> 5725597;
	ForLoop5726259 -> _JOIN_5726259;
	5601388 [label="5601388  y[i]=0.0;...",shape=box];
	5601388 -> _JOIN_5601389;
	5725637 [label="5725637  scv_49=scv_49+A[i*ny+j]*x[j];...",shape=box];
	_JOIN_5722935 [label="_JOIN_5722935None...",shape=box];
	_JOIN_5722935 -> ForLoop5725557;
	5726256 [label="5726256  scv_49=scv_49+A[i*ny+j]*x[j];...",shape=box];
	5726256 -> _JOIN_5726257;
	5756185 [label="5756185  tmp[it]=scv_33;...",shape=box];
	ForLoop5726189 [label="ForLoop5726189  for (j=jj; j<=min(ny-1,jj+31)-22; j=j+23) {...",shape=box];
	ForLoop5726189 -> 5725637;
	ForLoop5726189 -> _JOIN_5726189;
	_JOIN_5725556 [label="_JOIN_5725556None...",shape=box];
	_JOIN_5725556 -> _JOIN_5725557;
	_JOIN_5725557 [label="_JOIN_5725557None...",shape=box];
	_JOIN_5725557 -> 5756185;
	5761107 [label="5761107  double scv_49;...",shape=box];
	_JOIN_5726257 [label="_JOIN_5726257None...",shape=box];
	_JOIN_5726257 -> _JOIN_5726259;
	5725554 [label="5725554  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	5725554 -> _JOIN_5725556;
	5734980 [label="5734980  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	_JOIN_5726259 [label="_JOIN_5726259None...",shape=box];
	_JOIN_5726259 -> ForLoop5726648;
	_JOIN_5726652 [label="_JOIN_5726652None...",shape=box];
	ForLoop5722661 [label="ForLoop5722661  for (j=jj; j<=min(ny-1,jj+31)-22; j=j+23) {...",shape=box];
	ForLoop5722661 -> 5734980;
	ForLoop5722661 -> _JOIN_5722661;
	_JOIN_5726650 [label="_JOIN_5726650None...",shape=box];
	_JOIN_5726650 -> _JOIN_5726652;
	_JOIN_5725523 [label="_JOIN_5725523None...",shape=box];
	_JOIN_5725523 -> 5725554;
	5761119 [label="5761119  tmp[i]=scv_49;...",shape=box];
	5761119 -> _JOIN_5726650;
	5722997 [label="5722997  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	5722997 -> ForLoop5725523;
	5726321 [labelexpected=9369846271501.798828
actual=9369846271501.798828
="5726321  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	5726321 -> ForLoop5726614;
	ForLoop5726648 [label="ForLoop5726648  for (kkk=0; kkk<=ny-1; kkk=kkk+128) {...",shape=box];
	ForLoop5726648 -> ForLoop5726647;
	ForLoop5726648 -> _JOIN_5726648;
	5725597 [label="5725597  int j;...",shape=box];
	5725597 -> ForLoop5726189;
	5756173 [label="5756173  double scv_33, scv_34, scv_35, scv_36, scv_37, scv_38, scv_39, scv_40;...",shape=box];
	ForLoop5601389 [label="ForLoop5601389  for (i=ny-((ny-(0))%27); i<=ny-1; i=i+1) ...",shape=box];
	ForLoop5601389 -> 5601388;
	ForLoop5601389 -> _JOIN_5601389;
	ForLoop5726614 [label="ForLoop5726614  for (kt=kk; kt<=min(ny-1,kk+15)-7; kt=kt+8) {...",shape=box];
	ForLoop5726614 -> 5758867;
	ForLoop5726614 -> _JOIN_5726614;
	ForLoop5726647 [label="ForLoop5726647  for (kk=kkk; kk<=min(ny-1,kkk+112); kk=kk+16) {...",shape=box];
	ForLoop5726647 -> 5726321;
	ForLoop5726647 -> _JOIN_5726647;
	5726645 [label="5726645  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	5726645 -> _JOIN_5726647;
	_JOIN_5722661 [label="_JOIN_5722661None...",shape=box];
	_JOIN_5722661 -> ForLoop5722933;
	ForLoop5725556 [label="ForLoop5725556  for (kk=kkk; kk<=min(ny-1,kkk+112); kk=kk+16) {...",shape=box];
	ForLoop5725556 -> 5722997;
	ForLoop5725556 -> _JOIN_5725556;
	ForLoop5725557 [label="ForLoop5725557  for (kkk=0; kkk<=ny-1; kkk=kkk+128) {...",shape=box];
	ForLoop5725557 -> ForLoop5725556;
	ForLoop5725557 -> _JOIN_5725557;
	ForLoop5725559 [label="ForLoop5725559  for (it=iii; it<=min(nx-1,iii+63)-7; it=it+8) {...",shape=box];
	ForLoop5725559 -> 5756173;
	ForLoop5725559 -> _JOIN_5725559;
	5758867 [label="5758867  double scv_41, scv_42, scv_43, scv_44, scv_45, scv_46, scv_47, scv_48;...",shape=box];
	ForLoop5601320 [label="ForLoop5601320  for (i=0; i<=ny-27; i=i+27) {...",shape=box];
	ForLoop5601320 -> 5601084;
	ForLoop5601320 -> _JOIN_5601320;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest32.exe __orio_perftest32.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest32.exe  
{'[0, 2, 1, 1, 0, 2, 0, 1, 26, 0, 22, 6, 1, 0, 1, 1, 0, 0]' : 0.0884199}
{'[0, 2, 1, 1, 0, 2, 0, 1, 26, 0, 22, 6, 1, 0, 1, 1, 0, 0]' : 0.0880451}
{'[0, 2, 1, 1, 0, 2, 0, 1, 26, 0, 22, 6, 1, 0, 1, 1, 0, 0]' : 0.0882821}
{'[0, 2, 1, 1, 0, 2, 0, 1, 26, 0, 22, 6, 1, 0, 1, 1, 0, 0]' : 0.088264}
{'[0, 2, 1, 1, 0, 2, 0, 1, 26, 0, 22, 6, 1, 0, 1, 1, 0, 0]' : 0.0880079}
{'[0, 2, 1, 1, 0, 2, 0, 1, 26, 0, 22, 6, 1, 0, 1, 1, 0, 0]' : 0.0891471}
{'[0, 2, 1, 1, 0, 2, 0, 1, 26, 0, 22, 6, 1, 0, 1, 1, 0, 0]' : 0.0880411}
{'[0, 2, 1, 1, 0, 2, 0, 1, 26, 0, 22, 6, 1, 0, 1, 1, 0, 0]' : 0.088063}
{'[0, 2, 1, 1, 0, 2, 0, 1, 26, 0, 22, 6, 1, 0, 1, 1, 0, 0]' : 0.088124}
{'[0, 2, 1, 1, 0, 2, 0, 1, 26, 0, 22, 6, 1, 0, 1, 1, 0, 0]' : 0.0879939}
{'[0, 2, 1, 1, 0, 2, 0, 1, 26, 0, 22, 6, 1, 0, 1, 1, 0, 0]' : 0.0880411}
{'[0, 2, 1, 1, 0, 2, 0, 1, 26, 0, 22, 6, 1, 0, 1, 1, 0, 0]' : 0.088043}
{'[0, 2, 1, 1, 0, 2, 0, 1, 26, 0, 22, 6, 1, 0, 1, 1, 0, 0]' : 0.0880508}
{'[0, 2, 1, 1, 0, 2, 0, 1, 26, 0, 22, 6, 1, 0, 1, 1, 0, 0]' : 0.088033}
{'[0, 2, 1, 1, 0, 2, 0, 1, 26, 0, 22, 6, 1, 0, 1, 1, 0, 0]' : 0.0880458}
{'[0, 2, 1, 1, 0, 2, 0, 1, 26, 0, 22, 6, 1, 0, 1, 1, 0, 0]' : 0.0880342}
{'[0, 2, 1, 1, 0, 2, 0, 1, 26, 0, 22, 6, 1, 0, 1, 1, 0, 0]' : 0.0881009}
{'[0, 2, 1, 1, 0, 2, 0, 1, 26, 0, 22, 6, 1, 0, 1, 1, 0, 0]' : 0.0881181}
{'[0, 2, 1, 1, 0, 2, 0, 1, 26, 0, 22, 6, 1, 0, 1, 1, 0, 0]' : 0.0880969}
{'[0, 2, 1, 1, 0, 2, 0, 1, 26, 0, 22, 6, 1, 0, 1, 1, 0, 0]' : 0.0882571}
{'[0, 2, 1, 1, 0, 2, 0, 1, 26, 0, 22, 6, 1, 0, 1, 1, 0, 0]' : 0.0883801}
{'[0, 2, 1, 1, 0, 2, 0, 1, 26, 0, 22, 6, 1, 0, 1, 1, 0, 0]' : 0.088064}
{'[0, 2, 1, 1, 0, 2, 0, 1, 26, 0, 22, 6, 1, 0, 1, 1, 0, 0]' : 0.088058}
{'[0, 2, 1, 1, 0, 2, 0, 1, 26, 0, 22, 6, 1, 0, 1, 1, 0, 0]' : 0.0880258}
{'[0, 2, 1, 1, 0, 2, 0, 1, 26, 0, 22, 6, 1, 0, 1, 1, 0, 0]' : 0.088089}
{'[0, 2, 1, 1, 0, 2, 0, 1, 26, 0, 22, 6, 1, 0, 1, 1, 0, 0]' : 0.088105}
{'[0, 2, 1, 1, 0, 2, 0, 1, 26, 0, 22, 6, 1, 0, 1, 1, 0, 0]' : 0.0880289}
{'[0, 2, 1, 1, 0, 2, 0, 1, 26, 0, 22, 6, 1, 0, 1, 1, 0, 0]' : 0.088021}
{'[0, 2, 1, 1, 0, 2, 0, 1, 26, 0, 22, 6, 1, 0, 1, 1, 0, 0]' : 0.089057}
{'[0, 2, 1, 1, 0, 2, 0, 1, 26, 0, 22, 6, 1, 0, 1, 1, 0, 0]' : 0.0881112}

out:
 ["{'[0, 2, 1, 1, 0, 2, 0, 1, 26, 0, 22, 6, 1, 0, 1, 1, 0, 0]' : 0.0884199}", "{'[0, 2, 1, 1, 0, 2, 0, 1, 26, 0, 22, 6, 1, 0, 1, 1, 0, 0]' : 0.0880451}", "{'[0, 2, 1, 1, 0, 2, 0, 1, 26, 0, 22, 6, 1, 0, 1, 1, 0, 0]' : 0.0882821}", "{'[0, 2, 1, 1, 0, 2, 0, 1, 26, 0, 22, 6, 1, 0, 1, 1, 0, 0]' : 0.088264}", "{'[0, 2, 1, 1, 0, 2, 0, 1, 26, 0, 22, 6, 1, 0, 1, 1, 0, 0]' : 0.0880079}", "{'[0, 2, 1, 1, 0, 2, 0, 1, 26, 0, 22, 6, 1, 0, 1, 1, 0, 0]' : 0.0891471}", "{'[0, 2, 1, 1, 0, 2, 0, 1, 26, 0, 22, 6, 1, 0, 1, 1, 0, 0]' : 0.0880411}", "{'[0, 2, 1, 1, 0, 2, 0, 1, 26, 0, 22, 6, 1, 0, 1, 1, 0, 0]' : 0.088063}", "{'[0, 2, 1, 1, 0, 2, 0, 1, 26, 0, 22, 6, 1, 0, 1, 1, 0, 0]' : 0.088124}", "{'[0, 2, 1, 1, 0, 2, 0, 1, 26, 0, 22, 6, 1, 0, 1, 1, 0, 0]' : 0.0879939}", "{'[0, 2, 1, 1, 0, 2, 0, 1, 26, 0, 22, 6, 1, 0, 1, 1, 0, 0]' : 0.0880411}", "{'[0, 2, 1, 1, 0, 2, 0, 1, 26, 0, 22, 6, 1, 0, 1, 1, 0, 0]' : 0.088043}", "{'[0, 2, 1, 1, 0, 2, 0, 1, 26, 0, 22, 6, 1, 0, 1, 1, 0, 0]' : 0.0880508}", "{'[0, 2, 1, 1, 0, 2, 0, 1, 26, 0, 22, 6, 1, 0, 1, 1, 0, 0]' : 0.088033}", "{'[0, 2, 1, 1, 0, 2, 0, 1, 26, 0, 22, 6, 1, 0, 1, 1, 0, 0]' : 0.0880458}", "{'[0, 2, 1, 1, 0, 2, 0, 1, 26, 0, 22, 6, 1, 0, 1, 1, 0, 0]' : 0.0880342}", "{'[0, 2, 1, 1, 0, 2, 0, 1, 26, 0, 22, 6, 1, 0, 1, 1, 0, 0]' : 0.0881009}", "{'[0, 2, 1, 1, 0, 2, 0, 1, 26, 0, 22, 6, 1, 0, 1, 1, 0, 0]' : 0.0881181}", "{'[0, 2, 1, 1, 0, 2, 0, 1, 26, 0, 22, 6, 1, 0, 1, 1, 0, 0]' : 0.0880969}", "{'[0, 2, 1, 1, 0, 2, 0, 1, 26, 0, 22, 6, 1, 0, 1, 1, 0, 0]' : 0.0882571}", "{'[0, 2, 1, 1, 0, 2, 0, 1, 26, 0, 22, 6, 1, 0, 1, 1, 0, 0]' : 0.0883801}", "{'[0, 2, 1, 1, 0, 2, 0, 1, 26, 0, 22, 6, 1, 0, 1, 1, 0, 0]' : 0.088064}", "{'[0, 2, 1, 1, 0, 2, 0, 1, 26, 0, 22, 6, 1, 0, 1, 1, 0, 0]' : 0.088058}", "{'[0, 2, 1, 1, 0, 2, 0, 1, 26, 0, 22, 6, 1, 0, 1, 1, 0, 0]' : 0.0880258}", "{'[0, 2, 1, 1, 0, 2, 0, 1, 26, 0, 22, 6, 1, 0, 1, 1, 0, 0]' : 0.088089}", "{'[0, 2, 1, 1, 0, 2, 0, 1, 26, 0, 22, 6, 1, 0, 1, 1, 0, 0]' : 0.088105}", "{'[0, 2, 1, 1, 0, 2, 0, 1, 26, 0, 22, 6, 1, 0, 1, 1, 0, 0]' : 0.0880289}", "{'[0, 2, 1, 1, 0, 2, 0, 1, 26, 0, 22, 6, 1, 0, 1, 1, 0, 0]' : 0.088021}", "{'[0, 2, 1, 1, 0, 2, 0, 1, 26, 0, 22, 6, 1, 0, 1, 1, 0, 0]' : 0.089057}", "{'[0, 2, 1, 1, 0, 2, 0, 1, 26, 0, 22, 6, 1, 0, 1, 1, 0, 0]' : 0.0881112}"]
returning from 'run': {'[0, 2, 1, 1, 0, 2, 0, 1, 26, 0, 22, 6, 1, 0, 1, 1, 0, 0]': ([0.0884199, 0.0880451, 0.0882821, 0.088264, 0.0880079, 0.0891471, 0.0880411, 0.088063, 0.088124, 0.0879939, 0.0880411, 0.088043, 0.0880508, 0.088033, 0.0880458, 0.0880342, 0.0881009, 0.0881181, 0.0880969, 0.0882571, 0.0883801, 0.088064, 0.088058, 0.0880258, 0.088089, 0.088105, 0.0880289, 0.088021, 0.089057, 0.0881112], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.0884199, 0.0880451, 0.0882821, 0.088264, 0.0880079, 0.0891471, 0.0880411, 0.088063, 0.088124, 0.0879939, 0.0880411, 0.088043, 0.0880508, 0.088033, 0.0880458, 0.0880342, 0.0881009, 0.0881181, 0.0880969, 0.0882571, 0.0883801, 0.088064, 0.088058, 0.0880258, 0.088089, 0.088105, 0.0880289, 0.088021, 0.089057, 0.0881112], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 1, 1, 0, 2, 0, 1, 26, 0, 22, 6, 1, 0, 1, 1, 0, 0]': ([0.0884199, 0.0880451, 0.0882821, 0.088264, 0.0880079, 0.0891471, 0.0880411, 0.088063, 0.088124, 0.0879939, 0.0880411, 0.088043, 0.0880508, 0.088033, 0.0880458, 0.0880342, 0.0881009, 0.0881181, 0.0880969, 0.0882571, 0.0883801, 0.088064, 0.088058, 0.0880258, 0.088089, 0.088105, 0.0880289, 0.088021, 0.089057, 0.0881112], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [1, 0, 4, 0, 5, 0, 1, 0, 27, 25, 0, 5, 1, 1, 0, 1, 1, 1]
Fixed Factors: {}
Testing candidate 33: [1, 0, 4, 0, 5, 0, 1, 0, 27, 25, 0, 5, 1, 1, 0, 1, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	49
        Max loop nest depth: 	4
        Additions: 		2329
        Multiplications: 	1050
        Divisions: 		0
        Logical: 		0
        Reads: 			4690
        Writes: 		851
        Comparisons:		49
        Gotos: 			0
        
digraph CFG {
	5914034 [label="5914034  int k;...",shape=box];
	5951619 [label="5951619  double scv_32, scv_33, scv_34, scv_35, scv_36, scv_37;...",shape=box];
	5927284 [label="5927284  double scv_16, scv_17, scv_18, scv_19, scv_20, scv_21, scv_22, scv_23;...",shape=box];
	5972305 [label="5972305  tmp[i]=scv_72;...",shape=box];
	5972305 -> _JOIN_5914288;
	_JOIN_5768720 [label="_JOIN_5768720None...",shape=box];
	_JOIN_5768720 -> 5769082;
	5921782 [label="5921782  double scv_9, scv_10, scv_11, scv_12, scv_13, scv_14;...",shape=box];
	_JOIN_5914018 [label="_JOIN_5914018None...",shape=box];
	_JOIN_5914018 -> _JOIN_5914020;
	_JOIN_5913669 [label="_JOIN_5913669None...",shape=box];
	_JOIN_5913669 -> _JOIN_5913671;
	5768788 [label="5768788  y[i]=0.0;...",shape=box];
	5768788 -> _JOIN_5768789;
	5922310 [label="5922310  double scv_15;...",shape=box];
	ForLoop5912950 [label="ForLoop5912950  for (k=kk; k<=cbv_6; k=k+6) {...",shape=box];
	ForLoop5912950 -> 5951619;
	ForLoop5912950 -> _JOIN_5912950;
	ForLoop5914216 [label="ForLoop5914216  for (k=kk; k<=cbv_10; k=k+6) {...",shape=box];
	ForLoop5914216 -> 5971102;
	ForLoop5914216 -> _JOIN_5914216;
	5969070 [label="5969070  tmp[(i+20)]=scv_39;...",shape=box];
	ForLoop5899418 [label="ForLoop5899418  for (k=cbv_3; k<=cbv_4; k=k+1) {...",shape=box];
	ForLoop5899418 -> 5922310;
	ForLoop5899418 -> _JOIN_5899418;
	5769082 [label="5769082  register int cbv_2, cbv_3;...",shape=box];
	5768013 [label="5768013  int i;...",shape=box];
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 5768013;
	_JOIN_5913673 [label="_JOIN_5913673None...",shape=box];
	_JOIN_5913673 -> ForLoop5914288;
	5897613 [label="5897613  int k;...",shape=box];
	_JOIN_5914286 [label="_JOIN_5914286None...",shape=box];
	_JOIN_5914286 -> 5972305;
	5913813 [label="5913813  scv_72=scv_72+A[i*ny+jt]*x_copy[(jt-jjj)];...",shape=box];
	_JOIN_5914020 [label="_JOIN_5914020None...",shape=box];
	_JOIN_5914020 -> ForLoop5914286;
	ForLoop5913669 [label="ForLoop5913669  for (k=cbv_7; k<=cbv_8; k=k+1) {...",shape=box];
	ForLoop5913669 -> 5953011;
	ForLoop5913669 -> _JOIN_5913669;
	5995421 [label="5995421  register int cbv_11, cbv_12;...",shape=box];
	5895263 [label="5895263  for (j=jjj; j<=min(ny-1,jjj+1023); j=j+1) ...",shape=box];
	ForLoop5914288 [label="ForLoop5914288  for (i=(min(nx-1,ii+15))-(((min(nx-1,ii+15))-(it)+1)%26)+1; i<=min(nx-1,ii+15); i=i+1) {...",shape=box];
	ForLoop5914288 -> 5972293;
	ForLoop5914288 -> _JOIN_5914288;
	5969052 [label="5969052  double scv_39, scv_40, scv_41, scv_42, scv_43, scv_44, scv_45, scv_46;...",shape=box];
	ForLoop5899167 [label="ForLoop5899167  for (k=kk; k<=cbv_2; k=k+6) {...",shape=box];
	ForLoop5899167 -> 5921782;
	ForLoop5899167 -> _JOIN_5899167;
	_JOIN_5913671 [label="_JOIN_5913671None...",shape=box];
	_JOIN_5913671 -> 5969070;
	ForLoop5907829 [label="ForLoop5907829  for (jjj=0; jjj<=ny-1; jjj=jjj+1024) {...",shape=box];
	ForLoop5907829 -> 5899718;
	ForLoop5907829 -> _JOIN_5907829;
	ForLoop5768720 [label="ForLoop5768720  for (i=0; i<=cbv_1; i=i+28) {...",shape=box];
	ForLoop5768720 -> 5768475;
	ForLoop5768720 -> _JOIN_5768720;
	_JOIN_5899422 [label="_JOIN_5899422None...",shape=box];
	_JOIN_5899422 -> 5899423;
	_JOIN_5914291 [label="_JOIN_5914291None...",shape=box];
	_JOIN_5899420 [label="_JOIN_5899420None...",shape=box];
	_JOIN_5899420 -> 5927296;
	ForLoop5914286 [label="ForLoop5914286  for (kk=0; kk<=ny-1; kk=kk+128) {...",shape=box];
	ForLoop5914286 -> 5914034;
	ForLoop5914286 -> _JOIN_5914286;
	ForLoop5914284 [label="ForLoop5914284  for (k=cbv_11; k<=cbv_12; k=k+1) {...",shape=box];
	ForLoop5914284 -> 5971293;
	ForLoop5914284 -> _JOIN_5914284;
	ForLoop5897599 [label="ForLoop589expected=9369846271501.798828
actual=9369846271501.798828
7599  for (jjj=0; jjj<=ny-1; jjj=jjj+1024) {...",shape=box];
	ForLoop5897599 -> 5895263;
	ForLoop5897599 -> _JOIN_5897599;
	5913770 [label="5913770  for (j=jjj; j<=min(ny-1,jjj+1023); j=j+1) ...",shape=box];
	5927296 [label="5927296  tmp[it]=scv_16;...",shape=box];
	ForLoop5914020 [label="ForLoop5914020  for (jjj=0; jjj<=ny-1; jjj=jjj+1024) {...",shape=box];
	ForLoop5914020 -> 5913770;
	ForLoop5914020 -> _JOIN_5914020;
	ForLoop5913673 [label="ForLoop5913673  for (i=it; i<=min(nx-1,ii+15)-25; i=i+26) {...",shape=box];
	ForLoop5913673 -> 5969052;
	ForLoop5913673 -> _JOIN_5913673;
	_JOIN_5899167 [label="_JOIN_5899167None...",shape=box];
	_JOIN_5899167 -> 5987273;
	_JOIN_5914216 [label="_JOIN_5914216None...",shape=box];
	_JOIN_5914216 -> 5995421;
	5899718 [label="5899718  for (j=jjj; j<=min(ny-1,jjj+1023); j=j+1) ...",shape=box];
	ForLoop5897597 [label="ForLoop5897597  for (jt=jjj; jt<=cbv_1; jt=jt+8) {...",shape=box];
	ForLoop5897597 -> 5917517;
	ForLoop5897597 -> _JOIN_5897597;
	5994844 [label="5994844  register int cbv_7, cbv_8;...",shape=box];
	_JOIN_5897599 [label="_JOIN_5897599None...",shape=box];
	_JOIN_5897599 -> ForLoop5899420;
	5953011 [label="5953011  double scv_38;...",shape=box];
	5937577 [label="5937577  double scv_24, scv_25, scv_26, scv_27, scv_28, scv_29, scv_30, scv_31;...",shape=box];
	5972293 [label="5972293  double scv_72;...",shape=box];
	5971293 [label="5971293  double scv_71;...",shape=box];
	ForLoop5899422 [label="ForLoop5899422  for (it=ii; it<=min(nx-1,ii+15)-7; it=it+8) {...",shape=box];
	ForLoop5899422 -> 5927284;
	ForLoop5899422 -> _JOIN_5899422;
	5971102 [label="5971102  double scv_65, scv_66, scv_67, scv_68, scv_69, scv_70;...",shape=box];
	ForLoop5899420 [label="ForLoop5899420  for (kk=0; kk<=ny-1; kk=kk+128) {...",shape=box];
	ForLoop5899420 -> 5897613;
	ForLoop5899420 -> _JOIN_5899420;
	ForLoop5768789 [label="ForLoop5768789  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop5768789 -> 5768788;
	ForLoop5768789 -> _JOIN_5768789;
	_JOIN_5897597 [label="_JOIN_5897597None...",shape=box];
	_JOIN_5897597 -> _JOIN_5897599;
	5768475 [label="5768475  y[i]=0.0;...",shape=box];
	ForLoop5913671 [label="ForLoop5913671  for (kk=0; kk<=ny-1; kk=kk+128) {...",shape=box];
	ForLoop5913671 -> 5907843;
	ForLoop5913671 -> _JOIN_5913671;
	5917517 [label="5917517  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	5899423 [label="5899423  int i;...",shape=box];
	5899423 -> ForLoop5913673;
	_JOIN_5907829 [label="_JOIN_5907829None...",shape=box];
	_JOIN_5907829 -> ForLoop5913671;
	_JOIN_5907827 [label="_JOIN_5907827None...",shape=box];
	_JOIN_5907827 -> _JOIN_5907829;
	5907843 [label="5907843  int k;...",shape=box];
	5895179 [label="5895179  double x_copy[1024];...",shape=box];
	5987273 [label="5987273  register int cbv_3, cbv_4;...",shape=box];
	_JOIN_5914284 [label="_JOIN_5914284None...",shape=box];
	_JOIN_5914284 -> _JOIN_5914286;
	_JOIN_5768789 [label="_JOIN_5768789None...",shape=box];
	_JOIN_5768789 -> 5895179;
	_JOIN_5912950 [label="_JOIN_5912950None...",shape=box];
	_JOIN_5912950 -> 5994844;
	ForLoop5914018 [label="ForLoop5914018  for (jt=jjj; jt<=cbv_9; jt=jt+8) {...",shape=box];
	ForLoop5914018 -> 5913813;
	ForLoop5914018 -> _JOIN_5914018;
	ForLoop5914291 [label="ForLoop5914291  for (ii=0; ii<=nx-1; ii=ii+16) {...",shape=box];
	ForLoop5914291 -> ForLoop5899422;
	ForLoop5914291 -> _JOIN_5914291;
	ForLoop5907827 [label="ForLoop5907827  for (jt=jjj; jt<=cbv_5; jt=jt+8) {...",shape=box];
	ForLoop5907827 -> 5937577;
	ForLoop5907827 -> _JOIN_5907827;
	_JOIN_5914288 [label="_JOIN_5914288None...",shape=box];
	_JOIN_5914288 -> _JOIN_5914291;
	_JOIN_5899418 [label="_JOIN_5899418None...",shape=box];
	_JOIN_5899418 -> _JOIN_5899420;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest33.exe __orio_perftest33.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest33.exe  
{'[1, 0, 4, 0, 5, 0, 1, 0, 27, 25, 0, 5, 1, 1, 0, 1, 1, 1]' : 0.082443}
{'[1, 0, 4, 0, 5, 0, 1, 0, 27, 25, 0, 5, 1, 1, 0, 1, 1, 1]' : 0.0820119}
{'[1, 0, 4, 0, 5, 0, 1, 0, 27, 25, 0, 5, 1, 1, 0, 1, 1, 1]' : 0.082211}
{'[1, 0, 4, 0, 5, 0, 1, 0, 27, 25, 0, 5, 1, 1, 0, 1, 1, 1]' : 0.0819931}
{'[1, 0, 4, 0, 5, 0, 1, 0, 27, 25, 0, 5, 1, 1, 0, 1, 1, 1]' : 0.0819499}
{'[1, 0, 4, 0, 5, 0, 1, 0, 27, 25, 0, 5, 1, 1, 0, 1, 1, 1]' : 0.0820901}
{'[1, 0, 4, 0, 5, 0, 1, 0, 27, 25, 0, 5, 1, 1, 0, 1, 1, 1]' : 0.0819719}
{'[1, 0, 4, 0, 5, 0, 1, 0, 27, 25, 0, 5, 1, 1, 0, 1, 1, 1]' : 0.082073}
{'[1, 0, 4, 0, 5, 0, 1, 0, 27, 25, 0, 5, 1, 1, 0, 1, 1, 1]' : 0.0820692}
{'[1, 0, 4, 0, 5, 0, 1, 0, 27, 25, 0, 5, 1, 1, 0, 1, 1, 1]' : 0.0821431}
{'[1, 0, 4, 0, 5, 0, 1, 0, 27, 25, 0, 5, 1, 1, 0, 1, 1, 1]' : 0.081934}
{'[1, 0, 4, 0, 5, 0, 1, 0, 27, 25, 0, 5, 1, 1, 0, 1, 1, 1]' : 0.081929}
{'[1, 0, 4, 0, 5, 0, 1, 0, 27, 25, 0, 5, 1, 1, 0, 1, 1, 1]' : 0.0820901}
{'[1, 0, 4, 0, 5, 0, 1, 0, 27, 25, 0, 5, 1, 1, 0, 1, 1, 1]' : 0.0820348}
{'[1, 0, 4, 0, 5, 0, 1, 0, 27, 25, 0, 5, 1, 1, 0, 1, 1, 1]' : 0.0820489}
{'[1, 0, 4, 0, 5, 0, 1, 0, 27, 25, 0, 5, 1, 1, 0, 1, 1, 1]' : 0.0821362}
{'[1, 0, 4, 0, 5, 0, 1, 0, 27, 25, 0, 5, 1, 1, 0, 1, 1, 1]' : 0.082206}
{'[1, 0, 4, 0, 5, 0, 1, 0, 27, 25, 0, 5, 1, 1, 0, 1, 1, 1]' : 0.0822949}
{'[1, 0, 4, 0, 5, 0, 1, 0, 27, 25, 0, 5, 1, 1, 0, 1, 1, 1]' : 0.082279}
{'[1, 0, 4, 0, 5, 0, 1, 0, 27, 25, 0, 5, 1, 1, 0, 1, 1, 1]' : 0.082293}
{'[1, 0, 4, 0, 5, 0, 1, 0, 27, 25, 0, 5, 1, 1, 0, 1, 1, 1]' : 0.082}
{'[1, 0, 4, 0, 5, 0, 1, 0, 27, 25, 0, 5, 1, 1, 0, 1, 1, 1]' : 0.0820401}
{'[1, 0, 4, 0, 5, 0, 1, 0, 27, 25, 0, 5, 1, 1, 0, 1, 1, 1]' : 0.082093}
{'[1, 0, 4, 0, 5, 0, 1, 0, 27, 25, 0, 5, 1, 1, 0, 1, 1, 1]' : 0.0819631}
{'[1, 0, 4, 0, 5, 0, 1, 0, 27, 25, 0, 5, 1, 1, 0, 1, 1, 1]' : 0.0820971}
{'[1, 0, 4, 0, 5, 0, 1, 0, 27, 25, 0, 5, 1, 1, 0, 1, 1, 1]' : 0.0821199}
{'[1, 0, 4, 0, 5, 0, 1, 0, 27, 25, 0, 5, 1, 1, 0, 1, 1, 1]' : 0.0819399}
{'[1, 0, 4, 0, 5, 0, 1, 0, 27, 25, 0, 5, 1, 1, 0, 1, 1, 1]' : 0.082015}
{'[1, 0, 4, 0, 5, 0, 1, 0, 27, 25, 0, 5, 1, 1, 0, 1, 1, 1]' : 0.08199}
{'[1, 0, 4, 0, 5, 0, 1, 0, 27, 25, 0, 5, 1, 1, 0, 1, 1, 1]' : 0.0820501}

out:
 ["{'[1, 0, 4, 0, 5, 0, 1, 0, 27, 25, 0, 5, 1, 1, 0, 1, 1, 1]' : 0.082443}", "{'[1, 0, 4, 0, 5, 0, 1, 0, 27, 25, 0, 5, 1, 1, 0, 1, 1, 1]' : 0.0820119}", "{'[1, 0, 4, 0, 5, 0, 1, 0, 27, 25, 0, 5, 1, 1, 0, 1, 1, 1]' : 0.082211}", "{'[1, 0, 4, 0, 5, 0, 1, 0, 27, 25, 0, 5, 1, 1, 0, 1, 1, 1]' : 0.0819931}", "{'[1, 0, 4, 0, 5, 0, 1, 0, 27, 25, 0, 5, 1, 1, 0, 1, 1, 1]' : 0.0819499}", "{'[1, 0, 4, 0, 5, 0, 1, 0, 27, 25, 0, 5, 1, 1, 0, 1, 1, 1]' : 0.0820901}", "{'[1, 0, 4, 0, 5, 0, 1, 0, 27, 25, 0, 5, 1, 1, 0, 1, 1, 1]' : 0.0819719}", "{'[1, 0, 4, 0, 5, 0, 1, 0, 27, 25, 0, 5, 1, 1, 0, 1, 1, 1]' : 0.082073}", "{'[1, 0, 4, 0, 5, 0, 1, 0, 27, 25, 0, 5, 1, 1, 0, 1, 1, 1]' : 0.0820692}", "{'[1, 0, 4, 0, 5, 0, 1, 0, 27, 25, 0, 5, 1, 1, 0, 1, 1, 1]' : 0.0821431}", "{'[1, 0, 4, 0, 5, 0, 1, 0, 27, 25, 0, 5, 1, 1, 0, 1, 1, 1]' : 0.081934}", "{'[1, 0, 4, 0, 5, 0, 1, 0, 27, 25, 0, 5, 1, 1, 0, 1, 1, 1]' : 0.081929}", "{'[1, 0, 4, 0, 5, 0, 1, 0, 27, 25, 0, 5, 1, 1, 0, 1, 1, 1]' : 0.0820901}", "{'[1, 0, 4, 0, 5, 0, 1, 0, 27, 25, 0, 5, 1, 1, 0, 1, 1, 1]' : 0.0820348}", "{'[1, 0, 4, 0, 5, 0, 1, 0, 27, 25, 0, 5, 1, 1, 0, 1, 1, 1]' : 0.0820489}", "{'[1, 0, 4, 0, 5, 0, 1, 0, 27, 25, 0, 5, 1, 1, 0, 1, 1, 1]' : 0.0821362}", "{'[1, 0, 4, 0, 5, 0, 1, 0, 27, 25, 0, 5, 1, 1, 0, 1, 1, 1]' : 0.082206}", "{'[1, 0, 4, 0, 5, 0, 1, 0, 27, 25, 0, 5, 1, 1, 0, 1, 1, 1]' : 0.0822949}", "{'[1, 0, 4, 0, 5, 0, 1, 0, 27, 25, 0, 5, 1, 1, 0, 1, 1, 1]' : 0.082279}", "{'[1, 0, 4, 0, 5, 0, 1, 0, 27, 25, 0, 5, 1, 1, 0, 1, 1, 1]' : 0.082293}", "{'[1, 0, 4, 0, 5, 0, 1, 0, 27, 25, 0, 5, 1, 1, 0, 1, 1, 1]' : 0.082}", "{'[1, 0, 4, 0, 5, 0, 1, 0, 27, 25, 0, 5, 1, 1, 0, 1, 1, 1]' : 0.0820401}", "{'[1, 0, 4, 0, 5, 0, 1, 0, 27, 25, 0, 5, 1, 1, 0, 1, 1, 1]' : 0.082093}", "{'[1, 0, 4, 0, 5, 0, 1, 0, 27, 25, 0, 5, 1, 1, 0, 1, 1, 1]' : 0.0819631}", "{'[1, 0, 4, 0, 5, 0, 1, 0, 27, 25, 0, 5, 1, 1, 0, 1, 1, 1]' : 0.0820971}", "{'[1, 0, 4, 0, 5, 0, 1, 0, 27, 25, 0, 5, 1, 1, 0, 1, 1, 1]' : 0.0821199}", "{'[1, 0, 4, 0, 5, 0, 1, 0, 27, 25, 0, 5, 1, 1, 0, 1, 1, 1]' : 0.0819399}", "{'[1, 0, 4, 0, 5, 0, 1, 0, 27, 25, 0, 5, 1, 1, 0, 1, 1, 1]' : 0.082015}", "{'[1, 0, 4, 0, 5, 0, 1, 0, 27, 25, 0, 5, 1, 1, 0, 1, 1, 1]' : 0.08199}", "{'[1, 0, 4, 0, 5, 0, 1, 0, 27, 25, 0, 5, 1, 1, 0, 1, 1, 1]' : 0.0820501}"]
returning from 'run': {'[1, 0, 4, 0, 5, 0, 1, 0, 27, 25, 0, 5, 1, 1, 0, 1, 1, 1]': ([0.082443, 0.0820119, 0.082211, 0.0819931, 0.0819499, 0.0820901, 0.0819719, 0.082073, 0.0820692, 0.0821431, 0.081934, 0.081929, 0.0820901, 0.0820348, 0.0820489, 0.0821362, 0.082206, 0.0822949, 0.082279, 0.082293, 0.082, 0.0820401, 0.082093, 0.0819631, 0.0820971, 0.0821199, 0.0819399, 0.082015, 0.08199, 0.0820501], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.082443, 0.0820119, 0.082211, 0.0819931, 0.0819499, 0.0820901, 0.0819719, 0.082073, 0.0820692, 0.0821431, 0.081934, 0.081929, 0.0820901, 0.0820348, 0.0820489, 0.0821362, 0.082206, 0.0822949, 0.082279, 0.082293, 0.082, 0.0820401, 0.082093, 0.0819631, 0.0820971, 0.0821199, 0.0819399, 0.082015, 0.08199, 0.0820501], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 4, 0, 5, 0, 1, 0, 27, 25, 0, 5, 1, 1, 0, 1, 1, 1]': ([0.082443, 0.0820119, 0.082211, 0.0819931, 0.0819499, 0.0820901, 0.0819719, 0.082073, 0.0820692, 0.0821431, 0.081934, 0.081929, 0.0820901, 0.0820348, 0.0820489, 0.0821362, 0.082206, 0.0822949, 0.082279, 0.082293, 0.082, 0.0820401, 0.082093, 0.0819631, 0.0820971, 0.0821199, 0.0819399, 0.082015, 0.08199, 0.0820501], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [2, 2, 4, 0, 6, 4, 1, 1, 28, 0, 14, 25, 0, 0, 2, 0, 1, 1]
Fixed Factors: {}
Testing candidate 34: [2, 2, 4, 0, 6, 4, 1, 1, 28, 0, 14, 25, 0, 0, 2, 0, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		379
        Multiplications: 	96
        Divisions: 		0
        Logical: 		0
        Reads: 			745
        Writes: 		117
        Comparisons:		14
        Gotos: 			0
        
digraph CFG {
	_JOIN_5996447 [label="_JOIN_5996447None...",shape=box];
	_JOIN_5996447 -> 5996818;
	_JOIN_6000718 [label="_JOIN_6000718None...",shape=box];
	_JOIN_6000718 -> ForLoop6002032;
	5995716 [label="5995716  int i;...",shape=box];
	_JOIN_6000717 [label="_JOIN_6000717None...",shape=box];
	_JOIN_6000717 -> _JOIN_6000718;
	ForLoop6002031 [label="ForLoop6002031  for (kk=kkk; kk<=min(ny-1,kkk+384); kk=kk+128) {...",shape=box];
	ForLoop6002031 -> 6003679;
	ForLoop6002031 -> _JOIN_6002031;
	_JOIN_6002032 [label="_JOIN_6002032None...",shape=box];
	_JOIN_6002032 -> _JOIN_6000031;
	ForLoop6000718 [label="ForLoop6000718  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) ...",shape=box];
	ForLoop6000718 -> ForLoop6000717;
	ForLoop6000718 -> _JOIN_6000718;
	_JOIN_6002031 [label="_JOIN_6002031None...",shape=box];
	_JOIN_6002031 -> _JOIN_6002032;
	ForLoop6029976 [label="ForLoop6029976  for (j=cbv_2; j<=cbv_3; j=j+1) ...",shape=box];
	ForLoop6029976 -> 6029975;
	ForLoop6029976 -> _JOIN_6029976;
	6005319 [label="6005319  for (j=jj; j<=min(ny-1,jj+31); j=j+1) ...",shape=box];
	6003721 [label="6003721  for (k=kk; k<=min(ny-1,kk+127); k=k+1) ...",shape=box];
	6003721 -> _JOIN_6002031;
	ForLoop6000717 [label="ForLoop6000717  for (jj=jjj; jj<=min(ny-1,jjj+2016); jj=jj+32) {...",shape=box];
	ForLoop6000717 -> 6005319;
	ForLoop6000717 -> _JOIN_6000717;
	_JOIN_6029847 [label="_JOIN_6029847None...",shape=box];
	_JOIN_6029847 -> 6038752;
	ForLoop6000031 [label="ForLoop6000031  for (i=ii; i<=min(nx-1,ii+31); i=i+1) {...",shape=box];
	ForLoop6000031 -> 5999923;
	ForLoop6000031 -> _JOIN_6000031;
	ForLoop6000032 [label="ForLoop6000032  for (ii=0; ii<=nx-1; ii=ii+32) ...",shape=box];
	ForLoop6000032 -> ForLoop6000031;
	ForLoop6000032 -> _JOIN_6000032;
	6007937 [label="6007937  y_copy[(kt-kk)]=y_copy[(kt-kk)]+A[i*ny+kt]*tmp[i];...",shape=box];
	5996818 [labexpected=9339882853735.613281
actual=9369846271501.798828
el="5996818  register int cbv_2, cbv_3;...",shape=box];
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 5995716;
	_JOIN_5996516 [label="_JOIN_5996516None...",shape=box];
	_JOIN_5996516 -> 6005267;
	ForLoop5996447 [label="ForLoop5996447  for (i=0; i<=cbv_1; i=i+29) {...",shape=box];
	ForLoop5996447 -> 5996193;
	ForLoop5996447 -> _JOIN_5996447;
	ForLoop6029847 [label="ForLoop6029847  for (j=jj; j<=cbv_1; j=j+15) {...",shape=box];
	ForLoop6029847 -> 6029467;
	ForLoop6029847 -> _JOIN_6029847;
	ForLoop6007861 [label="ForLoop6007861  for (kt=kk; kt<=cbv_4; kt=kt+32) {...",shape=box];
	ForLoop6007861 -> 6007937;
	ForLoop6007861 -> _JOIN_6007861;
	5996515 [label="5996515  y[i]=0.0;...",shape=box];
	5996515 -> _JOIN_5996516;
	_JOIN_6007861 [label="_JOIN_6007861None...",shape=box];
	_JOIN_6007861 -> 6003721;
	ForLoop6002032 [label="ForLoop6002032  for (kkk=0; kkk<=ny-1; kkk=kkk+512) ...",shape=box];
	ForLoop6002032 -> ForLoop6002031;
	ForLoop6002032 -> _JOIN_6002032;
	6029467 [label="6029467  tmp[i]=tmp[i]+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	5999923 [label="5999923  tmp[i]=0;...",shape=box];
	5999923 -> ForLoop6000718;
	6005267 [label="6005267  double x_copy[32];...",shape=box];
	5996193 [label="5996193  y[i]=0.0;...",shape=box];
	_JOIN_6029976 [label="_JOIN_6029976None...",shape=box];
	_JOIN_6029976 -> _JOIN_6000717;
	6003679 [label="6003679  for (k=kk; k<=min(ny-1,kk+127); k=k+1) ...",shape=box];
	ForLoop5996516 [label="ForLoop5996516  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop5996516 -> 5996515;
	ForLoop5996516 -> _JOIN_5996516;
	_JOIN_6000031 [label="_JOIN_6000031None...",shape=box];
	_JOIN_6000031 -> _JOIN_6000032;
	_JOIN_6000032 [label="_JOIN_6000032None...",shape=box];
	6038752 [label="6038752  register int cbv_2, cbv_3;...",shape=box];
	6029975 [label="6029975  tmp[i]=tmp[i]+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	6029975 -> _JOIN_6029976;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest34.exe __orio_perftest34.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest34.exe  
{'[2, 2, 4, 0, 6, 4, 1, 1, 28, 0, 14, 25, 0, 0, 2, 0, 1, 1]' : 0.172541}
{'[2, 2, 4, 0, 6, 4, 1, 1, 28, 0, 14, 25, 0, 0, 2, 0, 1, 1]' : 0.172449}
{'[2, 2, 4, 0, 6, 4, 1, 1, 28, 0, 14, 25, 0, 0, 2, 0, 1, 1]' : 0.172485}
{'[2, 2, 4, 0, 6, 4, 1, 1, 28, 0, 14, 25, 0, 0, 2, 0, 1, 1]' : 0.172554}
{'[2, 2, 4, 0, 6, 4, 1, 1, 28, 0, 14, 25, 0, 0, 2, 0, 1, 1]' : 0.172441}
{'[2, 2, 4, 0, 6, 4, 1, 1, 28, 0, 14, 25, 0, 0, 2, 0, 1, 1]' : 0.172627}
{'[2, 2, 4, 0, 6, 4, 1, 1, 28, 0, 14, 25, 0, 0, 2, 0, 1, 1]' : 0.172437}
{'[2, 2, 4, 0, 6, 4, 1, 1, 28, 0, 14, 25, 0, 0, 2, 0, 1, 1]' : 0.172409}
{'[2, 2, 4, 0, 6, 4, 1, 1, 28, 0, 14, 25, 0, 0, 2, 0, 1, 1]' : 0.172495}
{'[2, 2, 4, 0, 6, 4, 1, 1, 28, 0, 14, 25, 0, 0, 2, 0, 1, 1]' : 0.172716}
{'[2, 2, 4, 0, 6, 4, 1, 1, 28, 0, 14, 25, 0, 0, 2, 0, 1, 1]' : 0.172313}
{'[2, 2, 4, 0, 6, 4, 1, 1, 28, 0, 14, 25, 0, 0, 2, 0, 1, 1]' : 0.172526}
{'[2, 2, 4, 0, 6, 4, 1, 1, 28, 0, 14, 25, 0, 0, 2, 0, 1, 1]' : 0.172612}
{'[2, 2, 4, 0, 6, 4, 1, 1, 28, 0, 14, 25, 0, 0, 2, 0, 1, 1]' : 0.1723}
{'[2, 2, 4, 0, 6, 4, 1, 1, 28, 0, 14, 25, 0, 0, 2, 0, 1, 1]' : 0.172643}
{'[2, 2, 4, 0, 6, 4, 1, 1, 28, 0, 14, 25, 0, 0, 2, 0, 1, 1]' : 0.172503}
{'[2, 2, 4, 0, 6, 4, 1, 1, 28, 0, 14, 25, 0, 0, 2, 0, 1, 1]' : 0.172457}
{'[2, 2, 4, 0, 6, 4, 1, 1, 28, 0, 14, 25, 0, 0, 2, 0, 1, 1]' : 0.172644}
{'[2, 2, 4, 0, 6, 4, 1, 1, 28, 0, 14, 25, 0, 0, 2, 0, 1, 1]' : 0.172337}
{'[2, 2, 4, 0, 6, 4, 1, 1, 28, 0, 14, 25, 0, 0, 2, 0, 1, 1]' : 0.17275}
{'[2, 2, 4, 0, 6, 4, 1, 1, 28, 0, 14, 25, 0, 0, 2, 0, 1, 1]' : 0.172425}
{'[2, 2, 4, 0, 6, 4, 1, 1, 28, 0, 14, 25, 0, 0, 2, 0, 1, 1]' : 0.172473}
{'[2, 2, 4, 0, 6, 4, 1, 1, 28, 0, 14, 25, 0, 0, 2, 0, 1, 1]' : 0.172419}
{'[2, 2, 4, 0, 6, 4, 1, 1, 28, 0, 14, 25, 0, 0, 2, 0, 1, 1]' : 0.17278}
{'[2, 2, 4, 0, 6, 4, 1, 1, 28, 0, 14, 25, 0, 0, 2, 0, 1, 1]' : 0.172609}
{'[2, 2, 4, 0, 6, 4, 1, 1, 28, 0, 14, 25, 0, 0, 2, 0, 1, 1]' : 0.172588}
{'[2, 2, 4, 0, 6, 4, 1, 1, 28, 0, 14, 25, 0, 0, 2, 0, 1, 1]' : 0.172532}
{'[2, 2, 4, 0, 6, 4, 1, 1, 28, 0, 14, 25, 0, 0, 2, 0, 1, 1]' : 0.172456}
{'[2, 2, 4, 0, 6, 4, 1, 1, 28, 0, 14, 25, 0, 0, 2, 0, 1, 1]' : 0.172606}
{'[2, 2, 4, 0, 6, 4, 1, 1, 28, 0, 14, 25, 0, 0, 2, 0, 1, 1]' : 0.172629}

out:
 ["{'[2, 2, 4, 0, 6, 4, 1, 1, 28, 0, 14, 25, 0, 0, 2, 0, 1, 1]' : 0.172541}", "{'[2, 2, 4, 0, 6, 4, 1, 1, 28, 0, 14, 25, 0, 0, 2, 0, 1, 1]' : 0.172449}", "{'[2, 2, 4, 0, 6, 4, 1, 1, 28, 0, 14, 25, 0, 0, 2, 0, 1, 1]' : 0.172485}", "{'[2, 2, 4, 0, 6, 4, 1, 1, 28, 0, 14, 25, 0, 0, 2, 0, 1, 1]' : 0.172554}", "{'[2, 2, 4, 0, 6, 4, 1, 1, 28, 0, 14, 25, 0, 0, 2, 0, 1, 1]' : 0.172441}", "{'[2, 2, 4, 0, 6, 4, 1, 1, 28, 0, 14, 25, 0, 0, 2, 0, 1, 1]' : 0.172627}", "{'[2, 2, 4, 0, 6, 4, 1, 1, 28, 0, 14, 25, 0, 0, 2, 0, 1, 1]' : 0.172437}", "{'[2, 2, 4, 0, 6, 4, 1, 1, 28, 0, 14, 25, 0, 0, 2, 0, 1, 1]' : 0.172409}", "{'[2, 2, 4, 0, 6, 4, 1, 1, 28, 0, 14, 25, 0, 0, 2, 0, 1, 1]' : 0.172495}", "{'[2, 2, 4, 0, 6, 4, 1, 1, 28, 0, 14, 25, 0, 0, 2, 0, 1, 1]' : 0.172716}", "{'[2, 2, 4, 0, 6, 4, 1, 1, 28, 0, 14, 25, 0, 0, 2, 0, 1, 1]' : 0.172313}", "{'[2, 2, 4, 0, 6, 4, 1, 1, 28, 0, 14, 25, 0, 0, 2, 0, 1, 1]' : 0.172526}", "{'[2, 2, 4, 0, 6, 4, 1, 1, 28, 0, 14, 25, 0, 0, 2, 0, 1, 1]' : 0.172612}", "{'[2, 2, 4, 0, 6, 4, 1, 1, 28, 0, 14, 25, 0, 0, 2, 0, 1, 1]' : 0.1723}", "{'[2, 2, 4, 0, 6, 4, 1, 1, 28, 0, 14, 25, 0, 0, 2, 0, 1, 1]' : 0.172643}", "{'[2, 2, 4, 0, 6, 4, 1, 1, 28, 0, 14, 25, 0, 0, 2, 0, 1, 1]' : 0.172503}", "{'[2, 2, 4, 0, 6, 4, 1, 1, 28, 0, 14, 25, 0, 0, 2, 0, 1, 1]' : 0.172457}", "{'[2, 2, 4, 0, 6, 4, 1, 1, 28, 0, 14, 25, 0, 0, 2, 0, 1, 1]' : 0.172644}", "{'[2, 2, 4, 0, 6, 4, 1, 1, 28, 0, 14, 25, 0, 0, 2, 0, 1, 1]' : 0.172337}", "{'[2, 2, 4, 0, 6, 4, 1, 1, 28, 0, 14, 25, 0, 0, 2, 0, 1, 1]' : 0.17275}", "{'[2, 2, 4, 0, 6, 4, 1, 1, 28, 0, 14, 25, 0, 0, 2, 0, 1, 1]' : 0.172425}", "{'[2, 2, 4, 0, 6, 4, 1, 1, 28, 0, 14, 25, 0, 0, 2, 0, 1, 1]' : 0.172473}", "{'[2, 2, 4, 0, 6, 4, 1, 1, 28, 0, 14, 25, 0, 0, 2, 0, 1, 1]' : 0.172419}", "{'[2, 2, 4, 0, 6, 4, 1, 1, 28, 0, 14, 25, 0, 0, 2, 0, 1, 1]' : 0.17278}", "{'[2, 2, 4, 0, 6, 4, 1, 1, 28, 0, 14, 25, 0, 0, 2, 0, 1, 1]' : 0.172609}", "{'[2, 2, 4, 0, 6, 4, 1, 1, 28, 0, 14, 25, 0, 0, 2, 0, 1, 1]' : 0.172588}", "{'[2, 2, 4, 0, 6, 4, 1, 1, 28, 0, 14, 25, 0, 0, 2, 0, 1, 1]' : 0.172532}", "{'[2, 2, 4, 0, 6, 4, 1, 1, 28, 0, 14, 25, 0, 0, 2, 0, 1, 1]' : 0.172456}", "{'[2, 2, 4, 0, 6, 4, 1, 1, 28, 0, 14, 25, 0, 0, 2, 0, 1, 1]' : 0.172606}", "{'[2, 2, 4, 0, 6, 4, 1, 1, 28, 0, 14, 25, 0, 0, 2, 0, 1, 1]' : 0.172629}"]
returning from 'run': {'[2, 2, 4, 0, 6, 4, 1, 1, 28, 0, 14, 25, 0, 0, 2, 0, 1, 1]': ([0.172541, 0.172449, 0.172485, 0.172554, 0.172441, 0.172627, 0.172437, 0.172409, 0.172495, 0.172716, 0.172313, 0.172526, 0.172612, 0.1723, 0.172643, 0.172503, 0.172457, 0.172644, 0.172337, 0.17275, 0.172425, 0.172473, 0.172419, 0.17278, 0.172609, 0.172588, 0.172532, 0.172456, 0.172606, 0.172629], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.172541, 0.172449, 0.172485, 0.172554, 0.172441, 0.172627, 0.172437, 0.172409, 0.172495, 0.172716, 0.172313, 0.172526, 0.172612, 0.1723, 0.172643, 0.172503, 0.172457, 0.172644, 0.172337, 0.17275, 0.172425, 0.172473, 0.172419, 0.17278, 0.172609, 0.172588, 0.172532, 0.172456, 0.172606, 0.172629], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[2, 2, 4, 0, 6, 4, 1, 1, 28, 0, 14, 25, 0, 0, 2, 0, 1, 1]': ([0.172541, 0.172449, 0.172485, 0.172554, 0.172441, 0.172627, 0.172437, 0.172409, 0.172495, 0.172716, 0.172313, 0.172526, 0.172612, 0.1723, 0.172643, 0.172503, 0.172457, 0.172644, 0.172337, 0.17275, 0.172425, 0.172473, 0.172419, 0.17278, 0.172609, 0.172588, 0.172532, 0.172456, 0.172606, 0.172629], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [5, 6, 1, 4, 5, 0, 0, 1, 19, 29, 1, 0, 0, 0, 2, 0, 0, 0]
Fixed Factors: {}
Testing candidate 35: [5, 6, 1, 4, 5, 0, 0, 1, 19, 29, 1, 0, 0, 0, 2, 0, 0, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	80
        Max loop nest depth: 	6
        Additions: 		9594
        Multiplications: 	2170
        Divisions: 		0
        Logical: 		0
        Reads: 			13808
        Writes: 		1359
        Comparisons:		80
        Gotos: 			0
        
digraph CFG {
	ForLoop6197314 [label="ForLoop6197314  for (kt=kk; kt<=min(ny-1,kk+15)-31; kt=kt+32) {...",shape=box];
	ForLoop6197314 -> 6196227;
	ForLoop6197314 -> _JOIN_6197314;
	ForLoop6157849 [label="ForLoop6157849  for (jjj=0; jjj<=ny-1; jjj=jjj+1024) {...",shape=box];
	ForLoop6157849 -> ForLoop6157847;
	ForLoop6157849 -> _JOIN_6157849;
	ForLoop6040659 [label="ForLoop6040659  for (i=0; i<=ny-20; i=i+20) {...",shape=box];
	ForLoop6040659 -> 6040486;
	ForLoop6040659 -> _JOIN_6040659;
	_JOIN_6196136 [label="_JOIN_6196136None...",shape=box];
	_JOIN_6196136 -> _JOIN_6196137;
	ForLoop6156935 [label="ForLoop6156935  for (j=jj; j<=min(ny-1,jj+511)-1; j=j+2) {...",shape=box];
	ForLoop6156935 -> 6155081;
	ForLoop6156935 -> _JOIN_6156935;
	ForLoop6157847 [label="ForLoop6157847  for (jj=jjj; jj<=min(ny-1,jjj+512); jj=jj+512) {...",shape=box];
	ForLoop6157847 -> 6155012;
	ForLoop6157847 -> _JOIN_6157847;
	ForLoop6157845 [label="ForLoop6157845  for (j=(min(ny-1,jj+511))-(((min(ny-1,jj+511))-(jj)+1)%2)+1; j<=min(ny-1,jj+511); j=j+1) {...",shape=box];
	ForLoop6157845 -> 6157002;
	ForLoop6157845 -> _JOIN_6157845;
	_JOIN_6157849 [label="_JOIN_6157849None...",shape=box];
	_JOIN_6157849 -> ForLoop6195854;
	6040144 [label="6040144  int i;...",shape=box];
	6040144 -> ForLoop6040659;
	_JOIN_6196134 [label="_JOIN_6196134None...",shape=box];
	_JOIN_6196134 -> _JOIN_6196136;
	_JOIN_6196137 [label="_JOIN_6196137None...",shape=box];
	_JOIN_6196137 -> ForLoop6197347;
	6040727 [label="6040727  y[i]=0.0;...",shape=box];
	6040727 -> _JOIN_6040728;
	ForLoop6196066 [label="ForLoop6196066  for (j=jj; j<=min(ny-1,jj+511)-1; j=j+2) {...",shape=box];
	ForLoop6196066 -> 6196039;
	ForLoop6196066 -> _JOIN_6196066;
	_JOIN_6197347 [label="_JOIN_6197347None...",shape=box];
	_JOIN_6197347 -> _JOIN_6197349;
	6158838 [label="6158838  y_copy[(kt-kk)]=y_copy[(kt-kk)]+A[i*ny+kt]*tmp[i];...",shape=box];
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 6040144;
	6195999 [label="6195999  int j;...",shape=box];
	6195999 -> ForLoop6196066;
	ForLoop6195854 [label="ForLoop6195854  for (kk=0; kk<=ny-1; kk=kk+16) {...",shape=box];
	ForLoop6195854 -> 6157893;
	ForLoop6195854 -> _JOIN_6195854;
	6155081 [label="6155081  tmp[i]=tmp[i]+A[i*ny+j]*x[j];...",shape=box];
	6196039 [label="6196039  tmp[i]=tmp[i]+A[i*ny+j]*x[j];...",shape=box];
	_JOIN_6156935 [label="_JOIN_6156935None...",shape=box];
	_JOIN_6156935 -> ForLoop6157845;
	_JOIN_6040659 [label="_JOIN_6040659None...",shape=box];
	_JOIN_6040659 -> ForLoop6040728;
	6196133 [label="6196133  tmp[i]=tmp[i]+A[i*ny+j]*x[j];...",shape=box];
	6196133 -> _JOIN_6196134;
	_JOIN_6196066 [label="_JOIN_6196066None...",shape=box];
	_JOIN_6196066 -> ForLoop6196134;
	ForLoop6196137 [label="ForLoop6196137  for (jjj=0; jjj<=ny-1; jjj=jjj+1024) ...",shape=box];
	ForLoop6196137 -> ForLoop6196136;
	ForLoop6196137 -> _JOIN_6196137;
	ForLoop6044110 [label="ForLoop6044110  for (iii=0; iii<=nx-1; iii=iii+512) ...",shape=box];
	ForLoop6044110 -> ForLoop6044109;
	ForLoop6044110 -> _JOIN_6044110;
	6157002 [label="6157002  tmp[i]=tmp[i]+A[i*ny+j]*x[j];...",shape=box];
	ForLoop6194922 [label="ForLoop6194922  for (kt=kk; kt<=min(ny-1,kk+15)-31; kt=kt+32) {...",shape=box];
	ForLoop6194922 -> 6158838;
	ForLoop6194922 -> _JOIN_6194922;
	_JOIN_6044110 [label="_JOIN_6044110None...",shape=box];
	6194953 [label="6194953  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	6197345 [label="6197345  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	6197345 -> _JOIN_6197347;
	ForLoop6197347 [label="ForLoop6197347  for (kk=0; kk<=ny-1; kk=kk+16) {...",shape=box];
	ForLoop6197347 -> 6196181;
	ForLoop6197347 -> _JOIN_6197347;
	_JOIN_6194922 [label="_JOIN_6194922None...",shape=box];
	_Jexpected=0.000000
actual=9369846271501.798828
OIN_6194922 -> 6194953;
	6049515 [label="6049515  double x_copy;...",shape=box];
	_JOIN_6195856 [label="_JOIN_6195856None...",shape=box];
	_JOIN_6195856 -> ForLoop6197349;
	_JOIN_6157847 [label="_JOIN_6157847None...",shape=box];
	_JOIN_6157847 -> _JOIN_6157849;
	ForLoop6040728 [label="ForLoop6040728  for (i=ny-((ny-(0))%20); i<=ny-1; i=i+1) ...",shape=box];
	ForLoop6040728 -> 6040727;
	ForLoop6040728 -> _JOIN_6040728;
	6154719 [label="6154719  tmp[i]=0;...",shape=box];
	_JOIN_6197314 [label="_JOIN_6197314None...",shape=box];
	_JOIN_6197314 -> 6197345;
	_JOIN_6044109 [label="_JOIN_6044109None...",shape=box];
	_JOIN_6044109 -> _JOIN_6044110;
	ForLoop6195856 [label="ForLoop6195856  for (i=ii; i<=min(nx-1,ii+255)-29; i=i+30) {...",shape=box];
	ForLoop6195856 -> 6154719;
	ForLoop6195856 -> _JOIN_6195856;
	6157893 [label="6157893  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	_JOIN_6157845 [label="_JOIN_6157845None...",shape=box];
	_JOIN_6157845 -> _JOIN_6157847;
	6155012 [label="6155012  int j;...",shape=box];
	6040486 [label="6040486  y[i]=0.0;...",shape=box];
	ForLoop6196134 [label="ForLoop6196134  for (j=(min(ny-1,jj+511))-(((min(ny-1,jj+511))-(jj)+1)%2)+1; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	ForLoop6196134 -> 6196133;
	ForLoop6196134 -> _JOIN_6196134;
	_JOIN_6195854 [label="_JOIN_6195854None...",shape=box];
	_JOIN_6195854 -> _JOIN_6195856;
	ForLoop6196136 [label="ForLoop6196136  for (jj=jjj; jj<=min(ny-1,jjj+512); jj=jj+512) {...",shape=box];
	ForLoop6196136 -> 6195999;
	ForLoop6196136 -> _JOIN_6196136;
	_JOIN_6040728 [label="_JOIN_6040728None...",shape=box];
	_JOIN_6040728 -> 6049515;
	ForLoop6197349 [label="ForLoop6197349  for (i=(min(nx-1,ii+255))-(((min(nx-1,ii+255))-(ii)+1)%30)+1; i<=min(nx-1,ii+255); i=i+1) {...",shape=box];
	ForLoop6197349 -> 6195967;
	ForLoop6197349 -> _JOIN_6197349;
	6077948 [label="6077948  int i;...",shape=box];
	6077948 -> ForLoop6195856;
	6196181 [label="6196181  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	6196181 -> ForLoop6197314;
	6196227 [label="6196227  y_copy[(kt-kk)]=y_copy[(kt-kk)]+A[i*ny+kt]*tmp[i];...",shape=box];
	_JOIN_6197349 [label="_JOIN_6197349None...",shape=box];
	_JOIN_6197349 -> _JOIN_6044109;
	6195967 [label="6195967  tmp[i]=0;...",shape=box];
	6195967 -> ForLoop6196137;
	ForLoop6044109 [label="ForLoop6044109  for (ii=iii; ii<=min(nx-1,iii+256); ii=ii+256) {...",shape=box];
	ForLoop6044109 -> 6077948;
	ForLoop6044109 -> _JOIN_6044109;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest35.exe __orio_perftest35.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest35.exe  
{'[5, 6, 1, 4, 5, 0, 0, 1, 19, 29, 1, 0, 0, 0, 2, 0, 0, 0]' : 0.174362}
{'[5, 6, 1, 4, 5, 0, 0, 1, 19, 29, 1, 0, 0, 0, 2, 0, 0, 0]' : 0.174654}
{'[5, 6, 1, 4, 5, 0, 0, 1, 19, 29, 1, 0, 0, 0, 2, 0, 0, 0]' : 0.173951}
{'[5, 6, 1, 4, 5, 0, 0, 1, 19, 29, 1, 0, 0, 0, 2, 0, 0, 0]' : 0.174606}
{'[5, 6, 1, 4, 5, 0, 0, 1, 19, 29, 1, 0, 0, 0, 2, 0, 0, 0]' : 0.174216}
{'[5, 6, 1, 4, 5, 0, 0, 1, 19, 29, 1, 0, 0, 0, 2, 0, 0, 0]' : 0.174225}
{'[5, 6, 1, 4, 5, 0, 0, 1, 19, 29, 1, 0, 0, 0, 2, 0, 0, 0]' : 0.174149}
{'[5, 6, 1, 4, 5, 0, 0, 1, 19, 29, 1, 0, 0, 0, 2, 0, 0, 0]' : 0.174257}
{'[5, 6, 1, 4, 5, 0, 0, 1, 19, 29, 1, 0, 0, 0, 2, 0, 0, 0]' : 0.174351}
{'[5, 6, 1, 4, 5, 0, 0, 1, 19, 29, 1, 0, 0, 0, 2, 0, 0, 0]' : 0.174064}
{'[5, 6, 1, 4, 5, 0, 0, 1, 19, 29, 1, 0, 0, 0, 2, 0, 0, 0]' : 0.174463}
{'[5, 6, 1, 4, 5, 0, 0, 1, 19, 29, 1, 0, 0, 0, 2, 0, 0, 0]' : 0.174023}
{'[5, 6, 1, 4, 5, 0, 0, 1, 19, 29, 1, 0, 0, 0, 2, 0, 0, 0]' : 0.174729}
{'[5, 6, 1, 4, 5, 0, 0, 1, 19, 29, 1, 0, 0, 0, 2, 0, 0, 0]' : 0.174119}
{'[5, 6, 1, 4, 5, 0, 0, 1, 19, 29, 1, 0, 0, 0, 2, 0, 0, 0]' : 0.17412}
{'[5, 6, 1, 4, 5, 0, 0, 1, 19, 29, 1, 0, 0, 0, 2, 0, 0, 0]' : 0.174401}
{'[5, 6, 1, 4, 5, 0, 0, 1, 19, 29, 1, 0, 0, 0, 2, 0, 0, 0]' : 0.174493}
{'[5, 6, 1, 4, 5, 0, 0, 1, 19, 29, 1, 0, 0, 0, 2, 0, 0, 0]' : 0.174471}
{'[5, 6, 1, 4, 5, 0, 0, 1, 19, 29, 1, 0, 0, 0, 2, 0, 0, 0]' : 0.174184}
{'[5, 6, 1, 4, 5, 0, 0, 1, 19, 29, 1, 0, 0, 0, 2, 0, 0, 0]' : 0.174227}
{'[5, 6, 1, 4, 5, 0, 0, 1, 19, 29, 1, 0, 0, 0, 2, 0, 0, 0]' : 0.174131}
{'[5, 6, 1, 4, 5, 0, 0, 1, 19, 29, 1, 0, 0, 0, 2, 0, 0, 0]' : 0.174505}
{'[5, 6, 1, 4, 5, 0, 0, 1, 19, 29, 1, 0, 0, 0, 2, 0, 0, 0]' : 0.174546}
{'[5, 6, 1, 4, 5, 0, 0, 1, 19, 29, 1, 0, 0, 0, 2, 0, 0, 0]' : 0.17421}
{'[5, 6, 1, 4, 5, 0, 0, 1, 19, 29, 1, 0, 0, 0, 2, 0, 0, 0]' : 0.174232}
{'[5, 6, 1, 4, 5, 0, 0, 1, 19, 29, 1, 0, 0, 0, 2, 0, 0, 0]' : 0.1744}
{'[5, 6, 1, 4, 5, 0, 0, 1, 19, 29, 1, 0, 0, 0, 2, 0, 0, 0]' : 0.174778}
{'[5, 6, 1, 4, 5, 0, 0, 1, 19, 29, 1, 0, 0, 0, 2, 0, 0, 0]' : 0.174144}
{'[5, 6, 1, 4, 5, 0, 0, 1, 19, 29, 1, 0, 0, 0, 2, 0, 0, 0]' : 0.174402}
{'[5, 6, 1, 4, 5, 0, 0, 1, 19, 29, 1, 0, 0, 0, 2, 0, 0, 0]' : 0.174276}

out:
 ["{'[5, 6, 1, 4, 5, 0, 0, 1, 19, 29, 1, 0, 0, 0, 2, 0, 0, 0]' : 0.174362}", "{'[5, 6, 1, 4, 5, 0, 0, 1, 19, 29, 1, 0, 0, 0, 2, 0, 0, 0]' : 0.174654}", "{'[5, 6, 1, 4, 5, 0, 0, 1, 19, 29, 1, 0, 0, 0, 2, 0, 0, 0]' : 0.173951}", "{'[5, 6, 1, 4, 5, 0, 0, 1, 19, 29, 1, 0, 0, 0, 2, 0, 0, 0]' : 0.174606}", "{'[5, 6, 1, 4, 5, 0, 0, 1, 19, 29, 1, 0, 0, 0, 2, 0, 0, 0]' : 0.174216}", "{'[5, 6, 1, 4, 5, 0, 0, 1, 19, 29, 1, 0, 0, 0, 2, 0, 0, 0]' : 0.174225}", "{'[5, 6, 1, 4, 5, 0, 0, 1, 19, 29, 1, 0, 0, 0, 2, 0, 0, 0]' : 0.174149}", "{'[5, 6, 1, 4, 5, 0, 0, 1, 19, 29, 1, 0, 0, 0, 2, 0, 0, 0]' : 0.174257}", "{'[5, 6, 1, 4, 5, 0, 0, 1, 19, 29, 1, 0, 0, 0, 2, 0, 0, 0]' : 0.174351}", "{'[5, 6, 1, 4, 5, 0, 0, 1, 19, 29, 1, 0, 0, 0, 2, 0, 0, 0]' : 0.174064}", "{'[5, 6, 1, 4, 5, 0, 0, 1, 19, 29, 1, 0, 0, 0, 2, 0, 0, 0]' : 0.174463}", "{'[5, 6, 1, 4, 5, 0, 0, 1, 19, 29, 1, 0, 0, 0, 2, 0, 0, 0]' : 0.174023}", "{'[5, 6, 1, 4, 5, 0, 0, 1, 19, 29, 1, 0, 0, 0, 2, 0, 0, 0]' : 0.174729}", "{'[5, 6, 1, 4, 5, 0, 0, 1, 19, 29, 1, 0, 0, 0, 2, 0, 0, 0]' : 0.174119}", "{'[5, 6, 1, 4, 5, 0, 0, 1, 19, 29, 1, 0, 0, 0, 2, 0, 0, 0]' : 0.17412}", "{'[5, 6, 1, 4, 5, 0, 0, 1, 19, 29, 1, 0, 0, 0, 2, 0, 0, 0]' : 0.174401}", "{'[5, 6, 1, 4, 5, 0, 0, 1, 19, 29, 1, 0, 0, 0, 2, 0, 0, 0]' : 0.174493}", "{'[5, 6, 1, 4, 5, 0, 0, 1, 19, 29, 1, 0, 0, 0, 2, 0, 0, 0]' : 0.174471}", "{'[5, 6, 1, 4, 5, 0, 0, 1, 19, 29, 1, 0, 0, 0, 2, 0, 0, 0]' : 0.174184}", "{'[5, 6, 1, 4, 5, 0, 0, 1, 19, 29, 1, 0, 0, 0, 2, 0, 0, 0]' : 0.174227}", "{'[5, 6, 1, 4, 5, 0, 0, 1, 19, 29, 1, 0, 0, 0, 2, 0, 0, 0]' : 0.174131}", "{'[5, 6, 1, 4, 5, 0, 0, 1, 19, 29, 1, 0, 0, 0, 2, 0, 0, 0]' : 0.174505}", "{'[5, 6, 1, 4, 5, 0, 0, 1, 19, 29, 1, 0, 0, 0, 2, 0, 0, 0]' : 0.174546}", "{'[5, 6, 1, 4, 5, 0, 0, 1, 19, 29, 1, 0, 0, 0, 2, 0, 0, 0]' : 0.17421}", "{'[5, 6, 1, 4, 5, 0, 0, 1, 19, 29, 1, 0, 0, 0, 2, 0, 0, 0]' : 0.174232}", "{'[5, 6, 1, 4, 5, 0, 0, 1, 19, 29, 1, 0, 0, 0, 2, 0, 0, 0]' : 0.1744}", "{'[5, 6, 1, 4, 5, 0, 0, 1, 19, 29, 1, 0, 0, 0, 2, 0, 0, 0]' : 0.174778}", "{'[5, 6, 1, 4, 5, 0, 0, 1, 19, 29, 1, 0, 0, 0, 2, 0, 0, 0]' : 0.174144}", "{'[5, 6, 1, 4, 5, 0, 0, 1, 19, 29, 1, 0, 0, 0, 2, 0, 0, 0]' : 0.174402}", "{'[5, 6, 1, 4, 5, 0, 0, 1, 19, 29, 1, 0, 0, 0, 2, 0, 0, 0]' : 0.174276}"]
returning from 'run': {'[5, 6, 1, 4, 5, 0, 0, 1, 19, 29, 1, 0, 0, 0, 2, 0, 0, 0]': ([0.174362, 0.174654, 0.173951, 0.174606, 0.174216, 0.174225, 0.174149, 0.174257, 0.174351, 0.174064, 0.174463, 0.174023, 0.174729, 0.174119, 0.17412, 0.174401, 0.174493, 0.174471, 0.174184, 0.174227, 0.174131, 0.174505, 0.174546, 0.17421, 0.174232, 0.1744, 0.174778, 0.174144, 0.174402, 0.174276], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.174362, 0.174654, 0.173951, 0.174606, 0.174216, 0.174225, 0.174149, 0.174257, 0.174351, 0.174064, 0.174463, 0.174023, 0.174729, 0.174119, 0.17412, 0.174401, 0.174493, 0.174471, 0.174184, 0.174227, 0.174131, 0.174505, 0.174546, 0.17421, 0.174232, 0.1744, 0.174778, 0.174144, 0.174402, 0.174276], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[5, 6, 1, 4, 5, 0, 0, 1, 19, 29, 1, 0, 0, 0, 2, 0, 0, 0]': ([0.174362, 0.174654, 0.173951, 0.174606, 0.174216, 0.174225, 0.174149, 0.174257, 0.174351, 0.174064, 0.174463, 0.174023, 0.174729, 0.174119, 0.17412, 0.174401, 0.174493, 0.174471, 0.174184, 0.174227, 0.174131, 0.174505, 0.174546, 0.17421, 0.174232, 0.1744, 0.174778, 0.174144, 0.174402, 0.174276], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [3, 5, 6, 3, 4, 5, 1, 1, 11, 7, 24, 0, 2, 0, 0, 0, 0, 0]
Fixed Factors: {}
Testing candidate 36: [3, 5, 6, 3, 4, 5, 1, 1, 11, 7, 24, 0, 2, 0, 0, 0, 0, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	72
        Max loop nest depth: 	6
        Additions: 		8739
        Multiplications: 	2214
        Divisions: 		0
        Logical: 		0
        Reads: 			12946
        Writes: 		1304
        Comparisons:		72
        Gotos: 			0
        
digraph CFG {
	6548474 [label="6548474  tmp[i]=tmp[i]+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	6548474 -> _JOIN_6548475;
	ForLoop6539441 [label="ForLoop6539441  for (j=jj; j<=min(ny-1,jj+255)-24; j=j+25) {...",shape=box];
	ForLoop6539441 -> 6538791;
	ForLoop6539441 -> _JOIN_6539441;
	6421813 [label="6421813  tmp[it]=tmp[it]+A[it*ny+j]*x_copy[(j-jj)];...",shape=box];
	6296631 [label="6296631  for (k=kk; k<=min(ny-1,kk+511); k=k+1) ...",shape=box];
	6296631 -> _JOIN_6296633;
	_JOIN_6543556 [label="_JOIN_6543556None...",shape=box];
	_JOIN_6543556 -> ForLoop6543636;
	_JOIN_6283204 [label="_JOIN_6283204None...",shape=box];
	_JOIN_6283204 -> 6293483;
	_JOIN_6548622 [label="_JOIN_6548622None...",shape=box];
	_JOIN_6548622 -> _JOIN_6286585;
	6544752 [label="6544752  tmp[(i+6)]=tmp[(i+6)]+A[(i+6)*ny+j]*x_copy[(j-jj)];...",shape=box];
	6538747 [label="6538747  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	6544699 [label="6544699  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	6541606 [label="6541606  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	ForLoop6546734 [label="ForLoop6546734  for (jjj=0; jjj<=ny-1; jjj=jjj+512) {...",shape=box];
	ForLoop6546734 -> ForLoop6546732;
	ForLoop6546734 -> _JOIN_6546734;
	_JOIN_6296600 [label="_JOIN_6296600None...",shape=box];
	_JOIN_6296600 -> 6296631;
	6547314 [label="6547314  for (k=kk; k<=min(ny-1,kk+511); k=k+1) ...",shape=box];
	6538622 [label="6538622  tmp[i]=0;...",shape=box];
	_JOIN_6547533 [label="_JOIN_6547533None...",shape=box];
	_JOIN_6547533 -> _JOIN_6547535;
	ForLoop6283135 [label="ForLoop6283135  for (i=0; i<=ny-12; i=i+12) {...",shape=box];
	ForLoop6283135 -> 6283034;
	ForLoop6283135 -> _JOIN_6283135;
	6539511 [label="6539511  tmp[i]=tmp[i]+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	6539511 -> _JOIN_6539512;
	ForLoop6548479 [label="ForLoop6548479  for (jjj=0; jjj<=ny-1; jjj=jjj+512) ...",shape=box];
	ForLoop6548479 -> ForLoop6548478;
	ForLoop6548479 -> _JOIN_6548479;
	ForLoop6542605 [label="ForLoop6542605  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jj)+1)%25)+1; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	ForLoop6542605 -> 6542604;
	ForLoop6542605 -> _JOIN_6542605;
	6548617 [label="6548617  for (k=kk; k<=min(ny-1,kk+511); k=k+1) ...",shape=box];
	6548617 -> _JOIN_6548619;
	_JOIN_6546649 [label="_JOIN_6546649None...",shape=box];
	_JOIN_6546649 -> ForLoop6546729;
	_JOIN_6548620 [label="_JOIN_6548620None...",shape=box];
	_JOIN_6548620 -> _JOIN_6548622;
	6540542 [label="6540542  tmp[(i+1)]=tmp[(i+1)]+A[(i+1)*ny+j]*x_copy[(j-jj)];...",shape=box];
	6540542 -> _JOIN_6540543;
	ForLoop6539512 [label="ForLoop6539512  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jj)+1)%25)+1; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	ForLoop6539512 -> 6539511;
	ForLoop6539512 -> _JOIN_6539512;
	ForLoop6541494 [label="ForLoop6541494  for (j=jj; j<=min(ny-1,jj+255)-24; j=j+25) {...",shape=box];
	ForLoop6541494 -> 6540628;
	ForLoop6541494 -> _JOIN_6541494;
	6293483 [label="6293483  double x_copy[256];...",shape=box];
	ForLoop6544667 [label="ForLoop6544667  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jj)+1)%25)+1; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	ForLoop6544667 -> 6544666;
	ForLoop6544667 -> _JOIN_6544667;
	6546796 [label="6546796  for (k=kk; k<=min(ny-1,kk+511); k=k+1) ...",shape=box];
	6543668 [label="6543668  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	_JOIN_6547537 [label="_JOIN_6547537None...",shape=box];
	_JOIN_6547537 -> ForLoop6548622;
	_JOIN_6547535 [label="_JOIN_6547535None...",shape=box];
	_JOIN_6547535 -> _JOIN_6547537;
	ForLoop6545618 [label="ForLoop6545618  for (j=jj; j<=min(ny-1,jj+255)-24; j=j+25) {...",shape=box];
	ForLoop6545618 -> 6544752;
	ForLoop6545618 -> _JOIN_6545618;
	_JOIN_6296633 [label="_JOIN_6296633None...",shape=box];
	_JOIN_6296633 -> _JOIN_6296634;
	_JOIN_6548475 [label="_JOIN_6548475None...",shape=box];
	_JOIN_6548475 -> _JOIN_6548478;
	_JOIN_6296636 [label="_JOIN_6296636None...",shape=box];
	_JOIN_6296636 -> 6521982;
	_JOIN_6296634 [label="_JOIN_6296634None...",shape=box];
	_JOIN_6296634 -> _JOIN_6296636;
	_JOIN_6548479 [label="_JOIN_6548479None...",shape=box];
	_JOIN_6548479 -> ForLoop6548620;
	_JOIN_6548478 [label="_JOIN_6548478None...",shape=box];
	_JOIN_6548478 -> _JOIN_6548479;
	6393259 [label="6393259  tmp[it]=tmp[it]+A[it*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop6543636 [label="ForLoop6543636  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jj)+1)%25)+1; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	ForLoop6543636 -> 6543635;
	ForLoop6543636 -> _JOIN_6543636;
	ForLoop6548622 [label="ForLoop6548622  for (i=(min(nx-1,ii+63))-(((min(nx-1,ii+63))-(it)+1)%8)+1; i<=min(nx-1,ii+63); i=i+1) {...",shape=box];
	ForLoop6548622 -> 6547648;
	ForLoop6548622 -> _JOIN_6548622;
	ForLoop6548404 [label="ForLoop6548404  for (j=jj; j<=min(ny-1,jj+255)-24; j=j+25) {...",shape=box];
	ForLoop6548404 -> 6547754;
	ForLoop6548404 -> _JOIN_6548404;
	ForLoop6548620 [label="ForLoop6548620  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) ...",shape=box];
	ForLoop6548620 -> ForLoop6548619;
	ForLoop6548620 -> _JOIN_6548620;
	ForLoop6547283 [label="ForLoop6547283  for (k=kk; k<=min(ny-1,kk+511); k=k+1) {...",shape=box];
	ForLoop6547283 -> 6547057;
	ForLoop6547283 -> _JOIN_6547283;
	6283203 [label="6283203  y[i]=0.0;...",shape=box];
	6283203 -> _JOIN_6283204;
	6546728 [label="6546728  tmp[(i+7)]=tmp[(i+7)]+A[(i+7)*ny+j]*x_copy[(j-jj)];...",shape=box];
	6546728 -> _JOIN_6546729;
	6542637 [label="6542637  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	ForLoop6545698 [label="ForLoop6545698  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jj)+1)%25)+1; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	ForLoop6545698 -> 6545697;
	ForLoop6545698 -> _JOIN_6545698;
	6547057 [label="6547057  y_copy[(k-kk)]=y_copy[(k-kk)]+A[i*ny+k]*tmp[i];...",shape=box];
	ForLoop6296633 [label="ForLoop6296633  for (kk=kkk; kk<=min(ny-1,kkk+512); kk=kk+512) {...",shape=box];
	ForLoop6296633 -> 6296555;
	ForLoop6296633 -> _JOIN_6296633;
	ForLoop6540543 [label="ForLoop6540543  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jj)+1)%25)+1; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	ForLoop6540543 -> 6540542;
	ForLoop6540543 -> _JOIN_6540543;
	ForLoop6296636 [label="ForLoop6296636  for (it=ii; it<=min(nx-1,ii+63)-31; it=it+32) {...",shape=box];
	ForLoop6296636 -> 6296921;
	ForLoop6296636 -> _JOIN_6296636;
	ForLoop6296634 [label="ForLoop6296634  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) ...",shape=box];
	ForLoop6296634 -> ForLoop6296633;
	ForLoop6296634 -> _JOIN_6296634;
	6540628 [label="6540628  tmp[(i+2)]=tmp[(i+2)]+A[(i+2)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_6548404 [label="_JOIN_6548404None...",shape=box];
	_JOIN_6548404 -> ForLoop6548475;
	_JOIN_6539441 [label="_JOIN_6539441None...",shape=box];
	_JOIN_6539441 -> ForLoop6539512;
	6521982 [label="6521982  int i;...",shape=box];
	6521982 -> ForLoop6547537;
	ForLoop6546729 [label="ForLoop6546729  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jj)+1)%25)+1; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	ForLoop6546729 -> 6546728;
	ForLoop6546729 -> _JOIN_6546729;
	6283034 [label="6283034  y[i]=0.0;...",shape=box];
	6547754 [label="6547754  tmp[i]=tmp[i]+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	6299008 [label="6299008  y_copy[(k-kk)]=y_copy[(k-kk)]+A[it*ny+k]*tmp[it];...",shape=box];
	ForLoop6421685 [label="ForLoop6421685  for (j=jj; j<=min(ny-1,jj+255)-24; j=j+25) {...",shape=box];
	ForLoop6421685 -> 6393259;
	ForLoop6421685 -> _JOIN_6421685;
	_JOIN_6296493 [label="_JOIN_6296493None...",shape=box];
	_JOIN_6296493 -> ForLoop6296634;
	_JOIN_6296492 [label="_JOIN_6296492None...",shape=box];
	_JOIN_6296492 -> _JOIN_6296493;
	_JOIN_6542605 [label="_JOIN_6542605None...",shape=box];
	_JOIN_6542605 -> 6542637;
	_JOIN_6539512 [label="_JOIN_6539512None...",shape=box];
	_JOIN_6539512 -> 6539544;
	6538791 [label="6538791  tmp[i]=tmp[i]+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_6541574 [label="_JOIN_6541574None...",shape=box];
	_JOIN_6541574 -> 6541606;
	6539597 [label="6539597  tmp[(i+1)]=tmp[(i+1)]+A[(i+1)*ny+j]*x_copy[(j-jj)];...",shape=box];
	6545783 [label="6545783  tmp[(i+7)]=tmp[(i+7)]+A[(i+7)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_6546732 [label="_JOIN_6546732None...",shape=box];
	_JOIN_6546732 -> _JOIN_6546734;
	6540575 [label="6540575  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 6282812;
	6542690 [label="6542690  tmp[(i+4)]=tmp[(i+4)]+A[(i+4)*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop6543556 [label="ForLoop6543556  for (j=jj; j<=min(ny-1,jj+255)-24; j=j+25) {...",shape=box];
	ForLoop6543556 -> 6542690;
	ForLoop6543556 -> _JOIN_6543556;
	ForLoop6422807 [label="ForLoop6422807  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jj)+1)%25)+1; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop6422807 -> 6421813;
	ForLoop6422807 -> _JOIN_6422807;
	ForLoop6296493 [label="ForLoop6296493  for (jjj=0; jjj<=ny-1; jjj=jjj+512) ...",shape=box];
	ForLoop6296493 -> ForLoop6296492;
	ForLoop6296493 -> _JOIN_6296493;
	ForLoop6296492 [label="ForLoop6296492  for (jj=jjj; jj<=min(ny-1,jjj+256); jj=jj+256) {...",shape=box];
	ForLoop6296492 -> 6296448;
	ForLoop6296492 -> _JOIN_6296492;
	6296448 [label="6296448  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	_JOIN_6283135 [label="_JOIN_6283135None...",shape=box];
	_JOIN_6283135 -> ForLoop6283204;
	6548585 [label="6548585  y_copy[(k-kk)]=y_copy[(k-kk)]+A[i*ny+k]*tmp[i];...",shape=box];
	6548585 -> _JOIN_6548586;
	_JOIN_6540463 [label="_JOIN_6540463None...",shape=box];
	_JOIN_6540463 -> ForLoop6540543;
	_JOIN_6546729 [label="_JOIN_6546729None...",shape=box];
	_JOIN_6546729 -> _JOIN_6546732;
	6548541 [label="6548541  for (k=kk; k<=min(ny-1,kk+511); k=k+1) ...",shape=box];
	6548541 -> ForLoop6548586;
	_JOIN_6286585 [label="_JOIN_6286585None...",shape=box];
	_JOIN_6286585 -> _JOIN_6286586;
	_JOIN_6286586 [label="_JOIN_6286586None...",shape=box];
	ForLoop6546732 [label="ForLoop6546732  for (jj=jjj; jj<=min(ny-1,jjj+256); jj=jj+256) {...",shape=box];
	ForLoop6546732 -> 6538747;
	ForLoop6546732 -> _JOIN_6546732;
	6282812 [label="6282812  int i;...",shape=box];
	6282812 -> ForLoop6283135;
	6542604 [label="6542604  tmp[(i+3)]=tmp[(i+3)]+A[(i+3)*ny+j]*x_copy[(j-jj)];...",shape=box];
	6542604 -> _JOIN_6542605;
	_JOIN_6544667 [label="_JOIN_6544667None...",shape=box];
	_JOIN_6544667 -> 6544699;
	6539544 [label="6539544  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	_JOIN_6422807 [label="_JOIN_6422807None...",shape=box];
	_JOIN_6422807 -> _JOIN_6296492;
	_JOIN_6547283 [label="_JOIN_6547283None...",shape=box];
	_JOIN_6547283 -> 6547314;
	6541659 [label="6541659  tmp[(i+3)]=tmp[(i+3)]+A[(i+3)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_6546734 [label="_JOIN_6546734None...",shape=box];
	_JOIN_6546734 -> ForLoop6547535;
	_JOIN_6545698 [label="_JOIN_6545698None...",shape=box];
	_JOIN_6545698 -> 6545730;
	ForLoop6283204 [label="ForLoop6283204  for (i=ny-((ny-(0))%12); i<=ny-1; i=i+1) ...",shape=box];
	ForLoop6283204 -> 6283203;
	ForLoop6283204 -> _JOIN_6283204;
	_JOIN_6540543 [label="_JOIN_6540543None...",shape=box];
	_JOIN_6540543 -> 6540575;
	_JOIN_6548619 [label="_JOIN_6548619None...",shape=box];
	_JOIN_6548619 -> _JOIN_6548620;
	6545730 [label="6545730  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	_JOIN_6544587 [label="_JOIN_6544587None...",shape=box];
	_JOIN_6544587 -> ForLoop6544667;
	6296555 [label="6296555  for (k=kk; k<=min(ny-1,kk+511); k=k+1) ...",shape=box];
	6296555 -> ForLoop6296600;
	6543635 [label="6543635  tmp[(i+4)]=tmp[(i+4)]+A[(i+4)*ny+j]*x_copy[(j-jj)];...",shape=box];
	6543635 -> _JOIN_6543636;
	_JOIN_6541494 [label="_JOIN_6541494None...",shape=box];
	_JOIN_6541494 -> ForLoop6541574;
	_JOIN_6545618 [label="_JOIN_6545618None...",shape=box];
	_JOIN_6545618 -> ForLoop6545698;
	ForLoop6286586 [label="ForLoop6286586  for (iii=0; iii<=nx-1; iii=iii+256) ...",shape=box];
	ForLoop6286586 -> ForLoop6286585;
	ForLoop6286586 -> _JOIN_6286586;
	6296921 [label="6296921  tmp[it]=0;...",shape=box];
	6296921 -> ForLoop6296493;
	ForLoop6546649 [label="ForLoop6546649  for (j=jj; j<=min(ny-1,jj+255)-24; j=j+25) {...",shape=box];
	ForLoop6546649 -> 6545783;
	ForLoop6546649 -> _JOIN_6546649;
	ForLoop6547537 [label="ForLoop6547537  for (i=it; i<=min(nx-1,ii+63)-7; i=i+8) {...",shape=box];
	ForLoop6547537 -> 6538622;
	ForLoop6547537 -> _JOIN_6547537;
	_JOIN_6548586 [label="_JOIN_6548586None...",shape=box];
	_JOIN_6548586 -> 6548617;
	ForLoop6547535 [label="ForLoop6547535  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop6547535 -> ForLoop6547533;
	ForLoop6547535 -> _JOIN_6547535;
	ForLoop6540463 [label="ForLoop6540463  for (j=jj; j<=min(ny-1,jj+255)-24; j=j+25) {...",shape=box];
	ForLoop6540463 -> 6539597;
	ForLoop6540463 -> _JOIN_6540463;
	ForLoop6547533 [label="ForLoop6547533  for (kk=kkk; kk<=min(ny-1,kkk+512); kk=kk+512) {...",shape=box];
	ForLoop6547533 -> 6546796;
	ForLoop6547533 -> _JOIN_6547533;
	ForLoop6548619 [label="ForLoop6548619  for (kk=kkk; kk<=min(ny-1,kkk+512); kk=kk+512) {...",shape=box];
	ForLoop6548619 -> 6548541;
	ForLoop6548619 -> _JOIN_6548619;
	_JOIN_6421685 [label="_JOIN_6421685None...",shape=box];
	_JOIN_6421685 -> ForLoop6422807;
	ForLoop6548586 [label="ForLoop6548586  for (k=kk; k<=min(ny-1,kk+511); k=k+1) ...",shape=box];
	ForLoop6548586 -> 6548585;
	ForLoop6548586 -> _JOIN_6548586;
	_JOIN_6543636 [label="_JOIN_6543636None...",shape=box];
	_JOIN_6543636 -> 6543668;
	6544666 [label="6544666  tmp[(i+5)]=tmp[(i+5)]+A[(i+5)*ny+j]*x_copy[(j-jj)];...",shape=box];
	6544666 -> _JOIN_6544667;
	6547648 [label="6547648  tmp[i]=0;...",shape=box];
	6547648 -> ForLoop6548479;
	ForLoop6548475 [label="ForLoop6548475  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jj)+1)%25)+1; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	ForLoop6548475 -> 6548474;
	ForLoop6548475 -> _JOIN_6548475;
	6543721 [label="6543721  tmp[(i+5)]=tmp[(i+5)]+A[(i+5)*ny+j]*x_copy[(j-jj)];...",shape=box];
	6547710 [label="6547710  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	ForLoop6544587 [label="ForLoop6544587  for (j=jj; j<=min(ny-1,jj+255)-24; j=j+25) {...",shape=box];
	ForLoop6544587 -> 6543721;
	ForLoop6544587 -> _JOIN_6544587;
	6541573 [label="6541573  tmp[(i+2)]=tmp[(i+2)]+A[(i+2)*ny+j]*x_copy[(j-jj)];...",shape=box];
	6541573 -> _JOIN_6541574;
	ForLoop6548478 [label="ForLoop6548478  for (jj=jjj; jj<=min(ny-1,jjj+256); jj=jj+256) {...",shape=box];
	ForLoop6548478 -> 6547710;
	ForLoop6548478 -> _JOIN_6548478;
	_JOIN_6542525 [label="_JOIN_6542525None...",shape=box];
	_JOIN_6542525 -> ForLoop6542605;
	6545697 [label="6545697  tmp[(i+6)]=tmp[(i+6)]+A[(i+6)*ny+j]*x_copy[(j-jj)];...",shape=box];
	6545697 -> _JOIN_6545698;
	ForLoop6286585 [label="ForLoop6286585  for (ii=iii; ii<=min(nx-1,iii+192); ii=ii+64) {...",shape=box];
	ForLoop6286585 -> ForLoop6296636;
	ForLoop6286585 -> _JOIN_6286585;
	ForLoop6296600 [label="ForLoop6296600  for (k=kk; k<=min(ny-1,kk+511); k=k+1) {...",shape=box];
	ForLoop6296600 -> 6299008;
	ForLoop6296600 -> _JOIN_6296600;
	ForLoop6541574 [label="ForLoop6541574  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jj)+1)%25)+1; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	ForLoop6541574 -> 6541573;
	ForLoop6541574 -> _JOIN_6541574;
	ForLoop6542525 [label="ForLoop6542525  for (j=jj; j<=min(ny-1,jj+255)-24; j=j+25) {...",shape=box];
	ForLoop6542525 -> 6541659;
	ForLoop6542525 -> _JOIN_6542525;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -Dexpected=9369846271501.798828
actual=9369846271501.798828
ORIO_REPS=30 -o __orio_perftest36.exe __orio_perftest36.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest36.exe  
{'[3, 5, 6, 3, 4, 5, 1, 1, 11, 7, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.288414}
{'[3, 5, 6, 3, 4, 5, 1, 1, 11, 7, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.286082}
{'[3, 5, 6, 3, 4, 5, 1, 1, 11, 7, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.286235}
{'[3, 5, 6, 3, 4, 5, 1, 1, 11, 7, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.285813}
{'[3, 5, 6, 3, 4, 5, 1, 1, 11, 7, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.285529}
{'[3, 5, 6, 3, 4, 5, 1, 1, 11, 7, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.288353}
{'[3, 5, 6, 3, 4, 5, 1, 1, 11, 7, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.285682}
{'[3, 5, 6, 3, 4, 5, 1, 1, 11, 7, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.290101}
{'[3, 5, 6, 3, 4, 5, 1, 1, 11, 7, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.287305}
{'[3, 5, 6, 3, 4, 5, 1, 1, 11, 7, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.287471}
{'[3, 5, 6, 3, 4, 5, 1, 1, 11, 7, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.28596}
{'[3, 5, 6, 3, 4, 5, 1, 1, 11, 7, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.286868}
{'[3, 5, 6, 3, 4, 5, 1, 1, 11, 7, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.286647}
{'[3, 5, 6, 3, 4, 5, 1, 1, 11, 7, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.285586}
{'[3, 5, 6, 3, 4, 5, 1, 1, 11, 7, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.303886}
{'[3, 5, 6, 3, 4, 5, 1, 1, 11, 7, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.315041}
{'[3, 5, 6, 3, 4, 5, 1, 1, 11, 7, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.286552}
{'[3, 5, 6, 3, 4, 5, 1, 1, 11, 7, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.286393}
{'[3, 5, 6, 3, 4, 5, 1, 1, 11, 7, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.286269}
{'[3, 5, 6, 3, 4, 5, 1, 1, 11, 7, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.286395}
{'[3, 5, 6, 3, 4, 5, 1, 1, 11, 7, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.28624}
{'[3, 5, 6, 3, 4, 5, 1, 1, 11, 7, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.289549}
{'[3, 5, 6, 3, 4, 5, 1, 1, 11, 7, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.285565}
{'[3, 5, 6, 3, 4, 5, 1, 1, 11, 7, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.287953}
{'[3, 5, 6, 3, 4, 5, 1, 1, 11, 7, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.286027}
{'[3, 5, 6, 3, 4, 5, 1, 1, 11, 7, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.287166}
{'[3, 5, 6, 3, 4, 5, 1, 1, 11, 7, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.286169}
{'[3, 5, 6, 3, 4, 5, 1, 1, 11, 7, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.286868}
{'[3, 5, 6, 3, 4, 5, 1, 1, 11, 7, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.286619}
{'[3, 5, 6, 3, 4, 5, 1, 1, 11, 7, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.285187}

out:
 ["{'[3, 5, 6, 3, 4, 5, 1, 1, 11, 7, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.288414}", "{'[3, 5, 6, 3, 4, 5, 1, 1, 11, 7, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.286082}", "{'[3, 5, 6, 3, 4, 5, 1, 1, 11, 7, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.286235}", "{'[3, 5, 6, 3, 4, 5, 1, 1, 11, 7, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.285813}", "{'[3, 5, 6, 3, 4, 5, 1, 1, 11, 7, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.285529}", "{'[3, 5, 6, 3, 4, 5, 1, 1, 11, 7, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.288353}", "{'[3, 5, 6, 3, 4, 5, 1, 1, 11, 7, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.285682}", "{'[3, 5, 6, 3, 4, 5, 1, 1, 11, 7, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.290101}", "{'[3, 5, 6, 3, 4, 5, 1, 1, 11, 7, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.287305}", "{'[3, 5, 6, 3, 4, 5, 1, 1, 11, 7, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.287471}", "{'[3, 5, 6, 3, 4, 5, 1, 1, 11, 7, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.28596}", "{'[3, 5, 6, 3, 4, 5, 1, 1, 11, 7, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.286868}", "{'[3, 5, 6, 3, 4, 5, 1, 1, 11, 7, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.286647}", "{'[3, 5, 6, 3, 4, 5, 1, 1, 11, 7, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.285586}", "{'[3, 5, 6, 3, 4, 5, 1, 1, 11, 7, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.303886}", "{'[3, 5, 6, 3, 4, 5, 1, 1, 11, 7, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.315041}", "{'[3, 5, 6, 3, 4, 5, 1, 1, 11, 7, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.286552}", "{'[3, 5, 6, 3, 4, 5, 1, 1, 11, 7, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.286393}", "{'[3, 5, 6, 3, 4, 5, 1, 1, 11, 7, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.286269}", "{'[3, 5, 6, 3, 4, 5, 1, 1, 11, 7, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.286395}", "{'[3, 5, 6, 3, 4, 5, 1, 1, 11, 7, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.28624}", "{'[3, 5, 6, 3, 4, 5, 1, 1, 11, 7, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.289549}", "{'[3, 5, 6, 3, 4, 5, 1, 1, 11, 7, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.285565}", "{'[3, 5, 6, 3, 4, 5, 1, 1, 11, 7, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.287953}", "{'[3, 5, 6, 3, 4, 5, 1, 1, 11, 7, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.286027}", "{'[3, 5, 6, 3, 4, 5, 1, 1, 11, 7, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.287166}", "{'[3, 5, 6, 3, 4, 5, 1, 1, 11, 7, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.286169}", "{'[3, 5, 6, 3, 4, 5, 1, 1, 11, 7, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.286868}", "{'[3, 5, 6, 3, 4, 5, 1, 1, 11, 7, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.286619}", "{'[3, 5, 6, 3, 4, 5, 1, 1, 11, 7, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.285187}"]
returning from 'run': {'[3, 5, 6, 3, 4, 5, 1, 1, 11, 7, 24, 0, 2, 0, 0, 0, 0, 0]': ([0.288414, 0.286082, 0.286235, 0.285813, 0.285529, 0.288353, 0.285682, 0.290101, 0.287305, 0.287471, 0.28596, 0.286868, 0.286647, 0.285586, 0.303886, 0.315041, 0.286552, 0.286393, 0.286269, 0.286395, 0.28624, 0.289549, 0.285565, 0.287953, 0.286027, 0.287166, 0.286169, 0.286868, 0.286619, 0.285187], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.288414, 0.286082, 0.286235, 0.285813, 0.285529, 0.288353, 0.285682, 0.290101, 0.287305, 0.287471, 0.28596, 0.286868, 0.286647, 0.285586, 0.303886, 0.315041, 0.286552, 0.286393, 0.286269, 0.286395, 0.28624, 0.289549, 0.285565, 0.287953, 0.286027, 0.287166, 0.286169, 0.286868, 0.286619, 0.285187], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[3, 5, 6, 3, 4, 5, 1, 1, 11, 7, 24, 0, 2, 0, 0, 0, 0, 0]': ([0.288414, 0.286082, 0.286235, 0.285813, 0.285529, 0.288353, 0.285682, 0.290101, 0.287305, 0.287471, 0.28596, 0.286868, 0.286647, 0.285586, 0.303886, 0.315041, 0.286552, 0.286393, 0.286269, 0.286395, 0.28624, 0.289549, 0.285565, 0.287953, 0.286027, 0.287166, 0.286169, 0.286868, 0.286619, 0.285187], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Measurements: [0.2574364, 0.12642113333333332, 0.16743780000000003, 0.18073843333333334, 0.08696784333333335, 0.13734503333333334, 0.0989179866666667, 0.2045601333333333, 0.1232433, 0.17574910000000002, 0.17625590000000005, 0.12344346666666665, 0.14777243333333334, 0.1685096666666667, 0.138369, 0.11367253333333334, 0.42305713333333334, 0.22636936666666668, 0.14673203333333332, 0.13833336666666665, 0.09196360666666668, 0.1739261, 0.24237456666666668, 0.23280733333333328, 0.10216396666666668, 0.13154806666666666, 0.17814293333333334, 0.09009153666666667, 0.10881996666666668, 0.1495003333333333, 0.09967165666666666, 0.08817163333333333, 0.08208367666666666, 0.17252520000000005, 0.17432296666666666, 0.2882641666666667]
   T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
1     5    2    1    4    0    1       0       0    5  17  10   0    2    0
2     3    5    5    4    0    3       0       1    7  19   0  29    0    0
3     5    0    5    6    5    0       0       0    2   0   1   0    0    1
4     6    3    6    4    2    6       1       1   29   0  29  10    0    0
5     1    6    2    3    0    3       0       1   27   0   3   2    1    1
6     0    2    0    6    6    5       0       0   29  26   0  21    0    0
7     1    5    1    6    5    6       0       0   29   4  16   0    0    2
8     2    0    0    2    3    6       1       1    2   0   0  12    0    0
9     0    0    6    4    0    5       0       1   13  12   0  23    0    2
10    1    5    3    5    0    1       1       0   28  28  16   0    0    0
11    0    2    0    2    4    6       1       1    3  21  17   0    0    0
12    5    5    0    4    3    5       0       0    2   0  16  23    0    0
13    6    0    4    6    3    0       1       0   27   0   2   5    0    0
14    1    2    3    0    0    1       0       1   11  22  27   0    0    0
15    2    2    6    4    3    6       0       1    8  21   0  19    0    0
16    2    5    2    0    6    0       0       0    1   1   0   2    0    0
17    6    1    1    0    2    5       1       1    1  27   0  21    0    2
18    5    3    1    6    4    1       0       1   24  16   0  28    2    0
19    5    5    0    5    4    2       1       1   27   1   0  23    0    2
20    0    3    0    0    6    4       1       0    7   0  24  29    0    0
21    5    0    1    6    0    4       1       1   17  20  28   0    1    0
22    1    4    5    6    3    0       1       1   10   0  28  28    0    1
23    0    0    5    6    3    3       1       1    2   0   7  24    2    0
24    3    6    4    1    5    3       1       1    0  28   4   0    0    2
25    0    1    0    0    1    1       0       0   27   0  25  28    1    1
26    6    1    3    0    3    0       0       1   23   3   0  27    0    0
27    0    4    2    5    4    1       1       1    7   7   0   9    0    0
28    5    5    5    0    5    6       1       0   29  10   0  26    1    0
29    5    2    3    4    5    6       0       0   13   1  23   0    0    2
30    0    6    3    0    0    4       1       0    4  20   0  13    0    0
31    1    5    4    1    0    0       0       0   10   0  25  29    1    0
32    0    2    1    1    0    2       0       1   26   0  22   6    1    0
33    1    0    4    0    5    0       1       0   27  25   0   5    1    1
34    2    2    4    0    6    4       1       1   28   0  14  25    0    0
35    5    6    1    4    5    0       0       1   19  29   1   0    0    0
36    3    5    6    3    4    5       1       1   11   7  24   0    2    0
   RT_K SCR VEC1 VEC2  cost_mean
1     0   0    0    1 0.25743640
2     2   1    1    1 0.12642113
3     1   0    1    0 0.16743780
4     1   0    0    1 0.18073843
5     0   1    1    1 0.08696784
6     2   1    1    0 0.13734503
7     0   0    1    1 0.09891799
8     2   0    1    0 0.20456013
9     0   1    1    0 0.12324330
10    1   0    1    0 0.17574910
11    0   0    1    0 0.17625590
12    1   1    1    0 0.12344347
13    0   1    0    0 0.14777243
14    0   1    1    0 0.16850967
15    0   1    0    1 0.13836900
16    2   0    1    1 0.11367253
17    0   0    0    0 0.42305713
18    0   0    0    0 0.22636937
19    0   0    1    1 0.14673203
20    1   1    0    1 0.13833337
21    1   1    1    1 0.09196361
22    1   0    0    1 0.17392610
23    0   0    1    1 0.24237457
24    0   1    1    0 0.23280733
25    0   0    0    0 0.10216397
26    0   1    1    1 0.13154807
27    0   1    0    1 0.17814293
28    0   1    1    0 0.09009154
29    0   1    0    0 0.10881997
30    2   0    0    1 0.14950033
31    0   0    1    0 0.09967166
32    1   1    0    0 0.08817163
33    0   1    1    1 0.08208368
34    2   0    1    1 0.17252520
35    2   0    0    0 0.17432297
36    0   0    0    0 0.28826417

Step Space Names:  [1] "T1_I"    "T1_J"    "T1_K"    "T2_I"    "T2_J"    "T2_K"    "ACOPY_x"
 [8] "ACOPY_y" "U1_I"    "U_I"     "U_J"     "U_K"     "RT_I"    "RT_J"   
[15] "RT_K"    "SCR"     "VEC1"    "VEC2"   

Heteroscedasticity Test p-value: 0.0493716657687
Power Transform Step:
Heteroscedasticity Test p-value: 0.931802400718
Regression Step:            Df Sum Sq Mean Sq F value  Pr(>F)   
T1_I         1  0.783  0.7830   3.277 0.08799 . 
T1_J         1  0.029  0.0290   0.121 0.73170   
T1_K         1  0.031  0.0315   0.132 0.72105   
T2_I         1  0.144  0.1440   0.603 0.44825   
T2_J         1  0.085  0.0847   0.354 0.55945   
T2_K         1  0.023  0.0230   0.096 0.76001   
ACOPY_x      1  1.784  1.7836   7.463 0.01420 * 
ACOPY_y      1  1.464  1.4644   6.128 0.02413 * 
U1_I         1  3.102  3.1017  12.979 0.00220 **
U_I          1  0.526  0.5261   2.201 0.15620   
U_J          1  0.017  0.0166   0.069 0.79528   
U_K          1  0.109  0.1093   0.458 0.50787   
RT_I         1  0.195  0.1951   0.817 0.37883   
RT_J         1  0.001  0.0014   0.006 0.94077   
RT_K         1  0.000  0.0000   0.000 0.99596   
SCR          1  2.572  2.5721  10.763 0.00441 **
VEC1         1  0.591  0.5915   2.475 0.13409   
VEC2         1  0.344  0.3441   1.440 0.24662   
Residuals   17  4.063  0.2390                   
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Predicting Best
IdenWARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = kkk
tical predictions (tol = 1e-5): 1
Getting fixed variables
Fixed Variables: {'U1_I': 25, 'SCR': 1}
Pruning Data
Dimensions of Pruned Data: [1] 6722   18
Pruning Model
Pruned Search Space Size: 18
Best Predicted:       T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
89131    1    6    5    0    0    3       0       0   25   0  22   3    0    0
      RT_K SCR VEC1 VEC2
89131    2   1    1    1

Pruned Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'VEC1', 'VEC2']
Fixed Factors: {'U1_I': 25, 'SCR': 1}
Fixed Factors: {'U1_I': 25, 'SCR': 1}
Length of requested configs: 1
Result was on Database, Returning Now
My perf_costs: {'[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]': ([0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
0.1290727
[1, 6, 5, 0, 0, 3, 0, 0, 25, 0, 22, 3, 0, 0, 2, 1, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		345
        Multiplications: 	122
        Divisions: 		0
        Logical: 		0
        Reads: 			831
        Writes: 		197
        Comparisons:		11
        Gotos: 			0
        
digraph CFG {
	ForLoop6662458 [label="ForLoop6662458  for (kk=0; kk<=ny-1; kk=kk+256) {...",shape=box];
	ForLoop6662458 -> 6674032;
	ForLoop6662458 -> _JOIN_6662458;
	6665569 [label="6665569  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	6674281 [label="6674281  register int cbv_6, cbv_7;...",shape=box];
	_JOIN_6662460 [label="_JOIN_6662460None...",shape=box];
	_JOIN_6662460 -> _JOIN_6662461;
	6662261 [label="6662261  int k;...",shape=box];
	_JOIN_6661236 [label="_JOIN_6661236None...",shape=box];
	_JOIN_6661236 -> 6672851;
	6631454 [label="6631454  register int cbv_2, cbv_3;...",shape=box];
	ForLoop6662455 [label="ForLoop6662455  for (k=cbv_6; k<=cbv_7; k=k+1) {...",shape=box];
	ForLoop6662455 -> 6666561;
	ForLoop6662455 -> _JOIN_6662455;
	ForLoop6661304 [label="ForLoop6661304  for (j=cbv_2; j<=cbv_3; j=j+1) {...",shape=box];
	ForLoop6661304 -> 6661303;
	ForLoop6661304 -> _JOIN_6661304;
	ForLoop6661306 [label="ForLoop6661306  for (jj=0; jj<=ny-1; jj=jj+512) {...",shape=box];
	ForLoop6661306 -> 6660644;
	ForLoop6661306 -> _JOIN_6661306;
	6660684 [label="6660684  scv_38=scv_38+A[i*ny+j]*x[j];...",shape=box];
	_JOIN_6662458 [label="_JOIN_6662458None...",shape=box];
	_JOIN_6662458 -> 6670187;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 6630451;
	6630451 [label="6630451  int i;...",shape=box];
	6674032 [label="6674032  register int cbv_4;...",shape=box];
	ForLoop6631179 [label="ForLoop6631179  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop6631179 -> 6631178;
	ForLoop6631179 -> _JOIN_6631179;
	6660644 [label="6660644  int j;...",shape=box];
	_JOIN_6631179 [label="_JOIN_6631179None...",shape=box];
	_JOIN_6631179 -> 6660592;
	ForLoop6662260 [label="ForLoop6662260  for (kt=kk; kt<=cbv_4; kt=kt+32) {...",shape=box];
	ForLoop6662260 -> 6665569;
	ForLoop6662260 -> _JOIN_6662260;
	6666412 [label="6666412  double scv_33, scv_34, scv_35, scv_36;...",shape=box];
	ForLoop6662460 [label="ForLoop6662460  for (i=ii; i<=min(nx-1,ii+15); i=i+1) {...",shape=box];
	ForLoop6662460 -> 6670175;
	ForLoop6662460 -> _JOIN_6662460;
	_JOIN_6662455 [label="_JOIN_6662455None...",shape=box];
	_JOIN_6662455 -> _JOIN_6662458;
	6670187 [label="6670187  tmp[i]=scv_38;...",shape=box];
	6670187 -> _JOIN_6662460;
	ForLoop6662387 [label="ForLoop6662387  for (k=kt; k<=cbv_5; k=k+4) {...",shape=box];
	ForLoop6662387 -> 6666412;
	ForLoop6662387 -> _JOIN_6662387;
	6666561 [label="6666561  double scv_37;...",expected=9369846271501.798828
actual=9369846271501.798828
shape=box];
	_JOIN_6661304 [label="_JOIN_6661304None...",shape=box];
	_JOIN_6661304 -> _JOIN_6661306;
	_JOIN_6661306 [label="_JOIN_6661306None...",shape=box];
	_JOIN_6661306 -> ForLoop6662458;
	ForLoop6662461 [label="ForLoop6662461  for (ii=0; ii<=nx-1; ii=ii+16) {...",shape=box];
	ForLoop6662461 -> ForLoop6662460;
	ForLoop6662461 -> _JOIN_6662461;
	ForLoop6631110 [label="ForLoop6631110  for (i=0; i<=cbv_1; i=i+26) {...",shape=box];
	ForLoop6631110 -> 6630883;
	ForLoop6631110 -> _JOIN_6631110;
	_JOIN_6631110 [label="_JOIN_6631110None...",shape=box];
	_JOIN_6631110 -> 6631454;
	6672851 [label="6672851  register int cbv_2, cbv_3;...",shape=box];
	6670175 [label="6670175  double scv_38;...",shape=box];
	_JOIN_6662461 [label="_JOIN_6662461None...",shape=box];
	ForLoop6661236 [label="ForLoop6661236  for (j=jj; j<=cbv_1; j=j+23) {...",shape=box];
	ForLoop6661236 -> 6660684;
	ForLoop6661236 -> _JOIN_6661236;
	6661303 [label="6661303  scv_38=scv_38+A[i*ny+j]*x[j];...",shape=box];
	6661303 -> _JOIN_6661304;
	6630883 [label="6630883  y[i]=0.0;...",shape=box];
	_JOIN_6662260 [label="_JOIN_6662260None...",shape=box];
	_JOIN_6662260 -> 6662261;
	6631178 [label="6631178  y[i]=0.0;...",shape=box];
	6631178 -> _JOIN_6631179;
	6660592 [label="6660592  double x_copy;...",shape=box];
	_JOIN_6662387 [label="_JOIN_6662387None...",shape=box];
	_JOIN_6662387 -> 6674281;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest37.exe __orio_perftest37.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest37.exe  
{'[1, 6, 5, 0, 0, 3, 0, 0, 25, 0, 22, 3, 0, 0, 2, 1, 1, 1]' : 0.122042}
{'[1, 6, 5, 0, 0, 3, 0, 0, 25, 0, 22, 3, 0, 0, 2, 1, 1, 1]' : 0.121913}
{'[1, 6, 5, 0, 0, 3, 0, 0, 25, 0, 22, 3, 0, 0, 2, 1, 1, 1]' : 0.122945}
{'[1, 6, 5, 0, 0, 3, 0, 0, 25, 0, 22, 3, 0, 0, 2, 1, 1, 1]' : 0.122052}
{'[1, 6, 5, 0, 0, 3, 0, 0, 25, 0, 22, 3, 0, 0, 2, 1, 1, 1]' : 0.121981}
{'[1, 6, 5, 0, 0, 3, 0, 0, 25, 0, 22, 3, 0, 0, 2, 1, 1, 1]' : 0.121976}
{'[1, 6, 5, 0, 0, 3, 0, 0, 25, 0, 22, 3, 0, 0, 2, 1, 1, 1]' : 0.121918}
{'[1, 6, 5, 0, 0, 3, 0, 0, 25, 0, 22, 3, 0, 0, 2, 1, 1, 1]' : 0.121951}
{'[1, 6, 5, 0, 0, 3, 0, 0, 25, 0, 22, 3, 0, 0, 2, 1, 1, 1]' : 0.121951}
{'[1, 6, 5, 0, 0, 3, 0, 0, 25, 0, 22, 3, 0, 0, 2, 1, 1, 1]' : 0.121889}
{'[1, 6, 5, 0, 0, 3, 0, 0, 25, 0, 22, 3, 0, 0, 2, 1, 1, 1]' : 0.121982}
{'[1, 6, 5, 0, 0, 3, 0, 0, 25, 0, 22, 3, 0, 0, 2, 1, 1, 1]' : 0.121928}
{'[1, 6, 5, 0, 0, 3, 0, 0, 25, 0, 22, 3, 0, 0, 2, 1, 1, 1]' : 0.122249}
{'[1, 6, 5, 0, 0, 3, 0, 0, 25, 0, 22, 3, 0, 0, 2, 1, 1, 1]' : 0.121942}
{'[1, 6, 5, 0, 0, 3, 0, 0, 25, 0, 22, 3, 0, 0, 2, 1, 1, 1]' : 0.121935}
{'[1, 6, 5, 0, 0, 3, 0, 0, 25, 0, 22, 3, 0, 0, 2, 1, 1, 1]' : 0.121934}
{'[1, 6, 5, 0, 0, 3, 0, 0, 25, 0, 22, 3, 0, 0, 2, 1, 1, 1]' : 0.121968}
{'[1, 6, 5, 0, 0, 3, 0, 0, 25, 0, 22, 3, 0, 0, 2, 1, 1, 1]' : 0.121997}
{'[1, 6, 5, 0, 0, 3, 0, 0, 25, 0, 22, 3, 0, 0, 2, 1, 1, 1]' : 0.12299}
{'[1, 6, 5, 0, 0, 3, 0, 0, 25, 0, 22, 3, 0, 0, 2, 1, 1, 1]' : 0.122035}
{'[1, 6, 5, 0, 0, 3, 0, 0, 25, 0, 22, 3, 0, 0, 2, 1, 1, 1]' : 0.122115}
{'[1, 6, 5, 0, 0, 3, 0, 0, 25, 0, 22, 3, 0, 0, 2, 1, 1, 1]' : 0.121912}
{'[1, 6, 5, 0, 0, 3, 0, 0, 25, 0, 22, 3, 0, 0, 2, 1, 1, 1]' : 0.121981}
{'[1, 6, 5, 0, 0, 3, 0, 0, 25, 0, 22, 3, 0, 0, 2, 1, 1, 1]' : 0.121951}
{'[1, 6, 5, 0, 0, 3, 0, 0, 25, 0, 22, 3, 0, 0, 2, 1, 1, 1]' : 0.122233}
{'[1, 6, 5, 0, 0, 3, 0, 0, 25, 0, 22, 3, 0, 0, 2, 1, 1, 1]' : 0.121958}
{'[1, 6, 5, 0, 0, 3, 0, 0, 25, 0, 22, 3, 0, 0, 2, 1, 1, 1]' : 0.122122}
{'[1, 6, 5, 0, 0, 3, 0, 0, 25, 0, 22, 3, 0, 0, 2, 1, 1, 1]' : 0.122028}
{'[1, 6, 5, 0, 0, 3, 0, 0, 25, 0, 22, 3, 0, 0, 2, 1, 1, 1]' : 0.121982}
{'[1, 6, 5, 0, 0, 3, 0, 0, 25, 0, 22, 3, 0, 0, 2, 1, 1, 1]' : 0.121966}

out:
 ["{'[1, 6, 5, 0, 0, 3, 0, 0, 25, 0, 22, 3, 0, 0, 2, 1, 1, 1]' : 0.122042}", "{'[1, 6, 5, 0, 0, 3, 0, 0, 25, 0, 22, 3, 0, 0, 2, 1, 1, 1]' : 0.121913}", "{'[1, 6, 5, 0, 0, 3, 0, 0, 25, 0, 22, 3, 0, 0, 2, 1, 1, 1]' : 0.122945}", "{'[1, 6, 5, 0, 0, 3, 0, 0, 25, 0, 22, 3, 0, 0, 2, 1, 1, 1]' : 0.122052}", "{'[1, 6, 5, 0, 0, 3, 0, 0, 25, 0, 22, 3, 0, 0, 2, 1, 1, 1]' : 0.121981}", "{'[1, 6, 5, 0, 0, 3, 0, 0, 25, 0, 22, 3, 0, 0, 2, 1, 1, 1]' : 0.121976}", "{'[1, 6, 5, 0, 0, 3, 0, 0, 25, 0, 22, 3, 0, 0, 2, 1, 1, 1]' : 0.121918}", "{'[1, 6, 5, 0, 0, 3, 0, 0, 25, 0, 22, 3, 0, 0, 2, 1, 1, 1]' : 0.121951}", "{'[1, 6, 5, 0, 0, 3, 0, 0, 25, 0, 22, 3, 0, 0, 2, 1, 1, 1]' : 0.121951}", "{'[1, 6, 5, 0, 0, 3, 0, 0, 25, 0, 22, 3, 0, 0, 2, 1, 1, 1]' : 0.121889}", "{'[1, 6, 5, 0, 0, 3, 0, 0, 25, 0, 22, 3, 0, 0, 2, 1, 1, 1]' : 0.121982}", "{'[1, 6, 5, 0, 0, 3, 0, 0, 25, 0, 22, 3, 0, 0, 2, 1, 1, 1]' : 0.121928}", "{'[1, 6, 5, 0, 0, 3, 0, 0, 25, 0, 22, 3, 0, 0, 2, 1, 1, 1]' : 0.122249}", "{'[1, 6, 5, 0, 0, 3, 0, 0, 25, 0, 22, 3, 0, 0, 2, 1, 1, 1]' : 0.121942}", "{'[1, 6, 5, 0, 0, 3, 0, 0, 25, 0, 22, 3, 0, 0, 2, 1, 1, 1]' : 0.121935}", "{'[1, 6, 5, 0, 0, 3, 0, 0, 25, 0, 22, 3, 0, 0, 2, 1, 1, 1]' : 0.121934}", "{'[1, 6, 5, 0, 0, 3, 0, 0, 25, 0, 22, 3, 0, 0, 2, 1, 1, 1]' : 0.121968}", "{'[1, 6, 5, 0, 0, 3, 0, 0, 25, 0, 22, 3, 0, 0, 2, 1, 1, 1]' : 0.121997}", "{'[1, 6, 5, 0, 0, 3, 0, 0, 25, 0, 22, 3, 0, 0, 2, 1, 1, 1]' : 0.12299}", "{'[1, 6, 5, 0, 0, 3, 0, 0, 25, 0, 22, 3, 0, 0, 2, 1, 1, 1]' : 0.122035}", "{'[1, 6, 5, 0, 0, 3, 0, 0, 25, 0, 22, 3, 0, 0, 2, 1, 1, 1]' : 0.122115}", "{'[1, 6, 5, 0, 0, 3, 0, 0, 25, 0, 22, 3, 0, 0, 2, 1, 1, 1]' : 0.121912}", "{'[1, 6, 5, 0, 0, 3, 0, 0, 25, 0, 22, 3, 0, 0, 2, 1, 1, 1]' : 0.121981}", "{'[1, 6, 5, 0, 0, 3, 0, 0, 25, 0, 22, 3, 0, 0, 2, 1, 1, 1]' : 0.121951}", "{'[1, 6, 5, 0, 0, 3, 0, 0, 25, 0, 22, 3, 0, 0, 2, 1, 1, 1]' : 0.122233}", "{'[1, 6, 5, 0, 0, 3, 0, 0, 25, 0, 22, 3, 0, 0, 2, 1, 1, 1]' : 0.121958}", "{'[1, 6, 5, 0, 0, 3, 0, 0, 25, 0, 22, 3, 0, 0, 2, 1, 1, 1]' : 0.122122}", "{'[1, 6, 5, 0, 0, 3, 0, 0, 25, 0, 22, 3, 0, 0, 2, 1, 1, 1]' : 0.122028}", "{'[1, 6, 5, 0, 0, 3, 0, 0, 25, 0, 22, 3, 0, 0, 2, 1, 1, 1]' : 0.121982}", "{'[1, 6, 5, 0, 0, 3, 0, 0, 25, 0, 22, 3, 0, 0, 2, 1, 1, 1]' : 0.121966}"]
returning from 'run': {'[1, 6, 5, 0, 0, 3, 0, 0, 25, 0, 22, 3, 0, 0, 2, 1, 1, 1]': ([0.122042, 0.121913, 0.122945, 0.122052, 0.121981, 0.121976, 0.121918, 0.121951, 0.121951, 0.121889, 0.121982, 0.121928, 0.122249, 0.121942, 0.121935, 0.121934, 0.121968, 0.121997, 0.12299, 0.122035, 0.122115, 0.121912, 0.121981, 0.121951, 0.122233, 0.121958, 0.122122, 0.122028, 0.121982, 0.121966], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.122042, 0.121913, 0.122945, 0.122052, 0.121981, 0.121976, 0.121918, 0.121951, 0.121951, 0.121889, 0.121982, 0.121928, 0.122249, 0.121942, 0.121935, 0.121934, 0.121968, 0.121997, 0.12299, 0.122035, 0.122115, 0.121912, 0.121981, 0.121951, 0.122233, 0.121958, 0.122122, 0.122028, 0.121982, 0.121966], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[1, 6, 5, 0, 0, 3, 0, 0, 25, 0, 22, 3, 0, 0, 2, 1, 1, 1]': ([0.122042, 0.121913, 0.122945, 0.122052, 0.121981, 0.121976, 0.121918, 0.121951, 0.121951, 0.121889, 0.121982, 0.121928, 0.122249, 0.121942, 0.121935, 0.121934, 0.121968, 0.121997, 0.12299, 0.122035, 0.122115, 0.121912, 0.121981, 0.121951, 0.122233, 0.121958, 0.122122, 0.122028, 0.121982, 0.121966], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Slowdown: 0.94567531838
Budget: 36/1
Step 1
 ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U_I + U_J + U_K + RT_I + RT_J + RT_K + VEC1 + VEC2
Fixed Factors: {'U1_I': 25, 'SCR': 1}
Full data does not fit on budget
Computing D-Optimal Design
Updating Constraints
Updated Constraint: True and (((T2_I ==1 )or (T2_I %T1_I ==0 ))) and (((T2_J ==1 )or (T2_J %T1_J ==0 ))) and (((T2_K ==1 )or (T2_K %T1_K ==0 ))) and ((RT_I *RT_J +RT_I *RT_K +RT_J *RT_K <=150 )) and (((U_I ==1 )or (U_J ==1 )or (U_K ==1 )))
Computing D-Optimal Design with 32 experiments
Design Formula:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U_I + U_J + U_K + RT_I + RT_J + RT_K + VEC1 + VEC2
Starting "optMonteCarlo" run
       var low high center nLevels round factor   mix
1     T1_I   0    6      0       7     0  FALSE FALSE
2     T1_J   0    6      0       7     0  FALSE FALSE
3     T1_K   0    6      0       7     0  FALSE FALSE
4     T2_I   0    6      0       7     0  FALSE FALSE
5     T2_J   0    6      0       7     0  FALSE FALSE
6     T2_K   0    6      0       7     0  FALSE FALSE
7  ACOPY_x   0    1      0       2     0  FALSE FALSE
8  ACOPY_y   0    1      0       2     0  FALSE FALSE
9      U_I   0   29      0      30     0  FALSE FALSE
10     U_J   0   29      0      30     0  FALSE FALSE
11     U_K   0   29      0      30     0  FALSE FALSE
12    RT_I   0    2      0       3     0  FALSE FALSE
13    RT_J   0    2      0       3     0  FALSE FALSE
14    RT_K   0    2      0       3     0  FALSE FALSE
15    VEC1   0    1      0       2     0  FALSE FALSE
16    VEC2   0    1      0       2     0  FALSE FALSE

   T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U_I U_J U_K RT_I RT_J RT_K
1     5    3    5    0    6    0       1       0  10  26   0    0    0    0
2     5    0    4    6    5    2       1       0   0  28  10    1    0    1
3     4    0    6    4    6    6       1       1  28   2   0    0    0    1
4     0    2    5    0    3    0       0       1   0  10  22    0    2    0
5     0    0    3    4    3    2       0       1   0   8   0    0    0    0
6     0    5    1    5    4    5       0       0   0  17  27    2    0    0
7     5    5    2    0    5    4       1       1  21  27   0    0    0    2
8     4    4    6    0    2    6       0       1   0   4  28    0    0    0
9     2    2    3    5    2    6       0       0  29  26   0    0    0    1
10    6    1    2    4    0    2       1       1   0  24  24    0    0    0
11    3    6    4    5    4    0       0       0   0   2   4    0    0    2
12    5    0    4    6    1    3       1       1  23   0  22    0    1    0
13    6    2    1    6    4    1       1       1   0   3   1    0    0    0
14    2    6    1    3    0    4       1       0   7   0  13    0    0    2
15    5    1    0    0    4    2       0       0  16   0  19    0    2    0
16    4    1    1    6    0    0       0       0  21  19   0    2    0    0
17    2    4    0    2    5    5       1       1   0  16  29    2    0    0
18    0    2    0    0    5    0       1       1  14   0   7    0    1    1
19    0    6    5    4    5    5       1       1  14   4   0    0    2    0
20    1    6    0    5    6    3       1       0  27   0  25    0    0    0
21    5    5    6    3    5    0       0       1  29   0  21    0    0    1
22    6    5    2    0    0    5       1       0   3  18   0    0    1    1
23    0    0    1    5    2    4       1       1  28   0  26    0    0    2
24    6    2    3    5    6    6       0       0   8   0   3    0    1    1
25    4    6    1    3    0    5       0       1  29   4   0    0    2    0
26    0    2    1    2    0    2       0       0   0  29   9    0    0    0
27    3    1    0    0    1    5       1       0   7   6   0    2    0    0
28    2    2    2    1    4    1       1       1  28  29   0    0    2    0
29    3    5    2    0    3    0       0       1  26   0   2    2    0    0
30    1    5    5    6    0    0       1       0   1   0   2    1    1    0
31    5    6    1    5    6    0       0       1   0  22  26    0    1    1
32    1    0    6    1    0    0       1       0  20   0  27    1    0    1
   VEC1 VEC2
1     1    0
2     0    1
3     1    0
4     0    0
5     0    0
6     0    0
7     1    1
8     1    1
9     1    0
10    0    0
11    1    0
12    1    0
13    0    0
14    0    0
15    1    0
16    1    1
17    1    0
18    1    1
19    1    1
20    0    1
21    0    1
22    0    0
23    1    1
24    0    1
25    0    1
26    1    1
27    1    1
28    0    0
29    0    0
30    1    1
31    1    0
32    1    1

D-Efficiency Approximation: [1] 0.592

Measuring design of size 16
Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Design Line: [5, 3, 5, 0, 6, 0, 1, 0, 10, 26, 0, 0, 0, 0, 1, 0]
Fixed Factors: {'U1_I': 25, 'SCR': 1}
Testing candidate 1: [5, 3, 5, 0, 6, 0, 1, 0, 25, 10, 26, 0, 0, 0, 0, 1, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	49
        Max loop nest depth: 	5
        Additions: 		2276
        Multiplications: 	696
        Divisions: 		0
        Logical: 		0
        Reads: 			3707
        Writes: 		528
        Comparisons:		49
        Gotos: 			0
        
digraph CFG {
	ForLoop6675192 [label="ForLoop6675192  for (i=0; i<=cbv_1; i=i+26) {...",shape=box];
	ForLoop6675192 -> 6674965;
	ForLoop6675192 -> _JOIN_6675192;
	6808112 [label="6808112  double scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8, scv_9;...",shape=box];
	_JOIN_6753716 [label="_JOIN_6753716None...",shape=box];
	_JOIN_6753716 -> ForLoop6753787;
	6740504 [label="6740504  int i;...",shape=box];
	6740504 -> ForLoop6752853;
	6674533 [label="6674533  int i;...",shape=box];
	6747048 [label="6747048  for (j=jj; j<=min(ny-1,jj+63); j=j+1) ...",shape=box];
	ForLoop6744730 [label="ForLoop6744730  for (j=jj; j<=min(ny-1,jj+63)-26; j=j+27) {...",shape=box];
	ForLoop6744730 -> 6743792;
	ForLoop6744730 -> _JOIN_6744730;
	6742603 [label="6742603  scv_2=scv_2+A[(i+1)*ny+j]*x_copy[(j-jj)];...",shape=box];
	6742603 -> _JOIN_6742604;
	_JOIN_6748119 [label="_JOIN_6748119None...",shape=box];
	_JOIN_6748119 -> 6748151;
	_JOIN_6675261 [label="_JOIN_6675261None...",shape=box];
	_JOIN_6675261 -> 6740489;
	_JOIN_6753787 [label="_JOIN_6753787None...",shape=box];
	_JOIN_6753787 -> _JOIN_6753790;
	ForLoop6675261 [label="ForLoop6675261  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop6675261 -> 6675260;
	ForLoop6675261 -> _JOIN_6675261;
	ForLoop6747016 [label="ForLoop6747016  for (j=(min(ny-1,jj+63))-(((min(ny-1,jj+63))-(jj)+1)%27)+1; j<=min(ny-1,jj+63); j=j+1) {...",shape=box];
	ForLoop6747016 -> 6747015;
	ForLoop6747016 -> _JOIN_6747016;
	_JOIN_6742524 [label="_JOIN_6742524None...",shape=box];
	_JOIN_6742524 -> ForLoop6742604;
	6751513 [label="6751513  scv_3=scv_3+A[(i+10)*ny+j]*x_copy[(j-jj)];...",shape=box];
	6744895 [label="6744895  scv_10=scv_10+A[(i+4)*ny+j]*x_copy[(j-jj)];...",shape=box];
	6675536 [label="6675536  register int cbv_2, cbv_3;...",shape=box];
	6748204 [label="6748204  scv_6=scv_6+A[(i+7)*ny+j]*x_copy[(j-jj)];...",shape=box];
	6813084 [label="6813084  double scv_14;...",shape=box];
	_JOIN_6750245 [label="_JOIN_6750245None...",shape=box];
	_JOIN_6750245 -> ForLoop6750325;
	ForLoop6742604 [label="ForLoop6742604  for (j=(min(ny-1,jj+63))-(((min(ny-1,jj+63))-(jj)+1)%27)+1; j<=min(ny-1,jj+63); j=j+1) {...",shape=box];
	ForLoop6742604 -> 6742603;
	ForLoop6742604 -> _JOIN_6742604;
	ForLoop6741430 [label="ForLoop6741430  for (j=jj; j<=min(ny-1,jj+63)-26; j=j+27) {...",shape=box];
	ForLoop6741430 -> 6740726;
	ForLoop6741430 -> _JOIN_6741430;
	_JOIN_6744810 [label="_JOIN_6744810None...",shape=box];
	_JOIN_6744810 -> 6744842;
	6743739 [label="6743739  for (j=jj; j<=min(ny-1,jj+63); j=j+1) ...",shape=box];
	_JOIN_6753790 [label="_JOIN_6753790None...",shape=box];
	_JOIN_6753790 -> _JOIN_6753791;
	_JOIN_6753791 [label="_JOIN_6753791None...",shape=box];
	_JOIN_6753791 -> ForLoop6753844;
	ForLoop6742524 [label="ForLoop6742524  for (j=jj; j<=min(ny-1,jj+63)-26; j=j+27) {...",shape=box];
	ForLoop6742524 -> 6741586;
	ForLoop6742524 -> _JOIN_6742524;
	ForLoop6753848 [label="ForLoop6753848  for (ii=0; ii<=nx-1; ii=ii+256) {...",shape=box];
	ForLoop6753848 -> 6740504;
	ForLoop6753848 -> _JOIN_6753848;
	6742636 [label="6742636  for (j=jj; j<=min(ny-1,jj+63); j=j+1) ...",shape=box];
	6812013 [label="6812013  double scv_13;...",shape=box];
	6741500 [label="6741500  scv_5=scv_5+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	6741500 -> _JOIN_6741501;
	6747101 [label="6747101  scv_7=scv_7+A[(i+6)*ny+j]*x_copy[(j-jj)];...",shape=box];
	6744809 [label="6744809  scv_4=scv_4+A[(i+3)*ny+j]*x_copy[(j-jj)];...",shape=box];
	6744809 -> _JOIN_6744810;
	6741586 [label="6741586  scv_2=scv_2+A[(i+1)*ny+j]*x_copy[(j-jj)];...",shape=box];
	6750410 [label="6750410  scv_11=scv_11+A[(i+9)*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop6748119 [label="ForLoop6748119  for (j=(min(ny-1,jj+63))-(((min(ny-1,jj+63))-(jj)+1)%27)+1; j<=min(ny-1,jj+63); j=j+1) {...",shape=box];
	ForLoop6748119 -> 6748118;
	ForLoop6748119 -> _JOIN_6748119;
	_JOIN_6748039 [label="_JOIN_6748039None...",shape=box];
	_JOIN_6748039 -> ForLoop6748119;
	ForLoop6743627 [label="ForLoop6743627  for (j=jj; j<=min(ny-1,jj+63)-26; j=j+27) {...",shape=box];
	ForLoop6743627 -> 6742689;
	ForLoop6743627 -> _JOIN_6743627;
	6750324 [label="6750324  scv_12=scv_12+A[(i+8)*ny+j]*x_copy[(j-jj)];...",shape=box];
	6750324 -> _JOIN_6750325;
	_JOIN_6752849 [label="_JOIN_6752849None...",shape=box];
	_JOIN_6752849 -> _JOIN_6752851;
	6795479 [label="6795479  double scv_1;...",shape=box];
	ForLoop6751428 [label="ForLoop6751428  for (j=(min(ny-1,jj+63))-(((min(ny-1,jj+63))-(jj)+1)%27)+1; j<=min(ny-1,jj+63); j=j+1) {...",shape=box];
	ForLoop6751428 -> 6751427;
	ForLoop6751428 -> _JOIN_6751428;
	ForLoop6753843 [label="ForLoop6753843  for (k=kk; k<=min(ny-1,kk+255); k=k+1) {...",shape=box];
	ForLoop6753843 -> 6812013;
	ForLoop6753843 -> _JOIN_6753843;
	ForLoop6753844 [label="ForLoop6753844  for (kk=0; kk<=ny-1; kk=kk+256) {...",shape=box];
	ForLoop6753844 -> ForLoop6753843;
	ForLoop6753844 -> _JOIN_6753844;
	6748118 [label="6748118  scv_7=scv_7+A[(i+6)*ny+j]*x_copy[(j-jj)];...",shape=box];
	6748118 -> _JOIN_6748119;
	ForLoop6753846 [label="ForLoop6753846  for (i=(min(nx-1,ii+255))-(((min(nx-1,ii+255))-(ii)+1)%11)+1; i<=min(nx-1,ii+255); i=i+1) {...",shape=box];
	ForLoop6753846 -> 6813084;
	ForLoop6753846 -> _JOIN_6753846;
	6740682 [label="6740682  for (j=jj; j<=min(ny-1,jj+63); j=j+1) ...",shape=box];
	6743792 [label="6743792  scv_4=scv_4+A[(i+3)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_6749222 [label="_JOIN_6749222None...",shape=box];
	_JOIN_6749222 -> 6749254;
	6749254 [label="6749254  for (j=jj; j<=min(ny-1,jj+63); j=j+1) ...",shape=box];
	_JOIN_6745913 [label="_JOIN_6745913None...",shape=box];
	_JOIN_6745913 -> 6745945;
	_JOIN_6752851 [label="_JOIN_6752851None...",shape=box];
	_JOIN_6752851 -> 6808130;
	_JOIN_6752853 [label="_JOIN_6752853None...",shape=box];
	_JOIN_6752853 -> ForLoop6753846;
	6749307 [label="6749307  scv_12=scv_12+A[(i+8)*ny+j]*x_copy[(j-jj)];...",shape=box];
	6808130 [label="6808130  tmp[(i+1)]=scv_2;...",shape=box];
	_JOIN_6752451 [label="_JOIN_6752451None...",shape=box];
	_JOIN_6752451 -> ForLoop6752531;
	6751427 [label="6751427  scv_11=scv_11+A[(i+9)*ny+j]*x_copy[(j-jj)];...",shape=box];
	6751427 -> _JOIN_6751428;
	6752968 [label="6752968  for (j=jj; j<=min(ny-1,jj+63); j=j+1) ...",shape=box];
	_JOIN_6675192 [label="_JOIN_6675192None...",shape=box];
	_JOIN_6675192 -> 6675536;
	6813096 [label="6813096  tmp[i]=scv_14;...",shape=box];
	6813096 -> _JOIN_6753846;
	6745945 [label="6745945  for (j=jj; j<=min(ny-1,jj+63); j=j+1) ...",shape=box];
	ForLoop6748039 [label="ForLoop6748039  for (j=jj; j<=min(ny-1,jj+63)-26; j=j+27) {...",shape=box];
	ForLoop6748039 -> 6747101;
	ForLoop6748039 -> _JOIN_6748039;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 6674533;
	_JOIN_6749142 [label="_JOIN_6749142None...",shape=box];
	_JOIN_6749142 -> ForLoop6749222;
	6749221 [label="6749221  scv_6=scv_6+A[(i+7)*ny+j]*x_copy[(j-jj)];...",shape=box];
	6749221 -> _JOIN_6749222;
	6675260 [label="6675260  y[i]=0.0;...",shape=box];
	6675260 -> _JOIN_6675261;
	6748151 [label="6748151  for (j=jj; j<=min(ny-1,jj+63); j=j+1) ...",shape=box];
	6743706 [label="6743706  scv_9=scv_9+A[(i+2)*ny+j]*x_copy[(j-jj)];...",shape=box];
	6743706 -> _JOIN_6743707;
	_JOIN_6753844 [label="_JOIN_6753844None...",shape=box];
	_JOIN_6753844 -> 6813096;
	_JOIN_6753846 [label="_JOIN_6753846None...",shape=box];
	_JOIN_6753846 -> _JOIN_6753848;
	_JOIN_6753843 [label="_JOIN_6753843None...",shape=box];
	_JOIN_6753843 -> _JOIN_6753844;
	_JOIN_6742604 [label="_JOIN_6742604None...",shape=box];
	_JOIN_6742604 -> 6742636;
	ForLoop6753791 [label="ForLoop6753791  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop6753791 -> ForLoop6753790;
	ForLoop6753791 -> _JOIN_6753791;
	_JOIN_6753848 [label="_JOIN_6753848None...",shape=box];
	ForLoop6753790 [label="ForLoop6753790  for (jj=jjj; jj<=min(ny-1,jjj+1984); jj=jj+64) {...",shape=box];
	ForLoop6753790 -> 6752968;
	ForLoop6753790 -> _JOIN_6753790;
	ForLoop6749222 [label="ForLoop6749222  for (j=(min(ny-1,jj+63))-(((min(ny-1,jj+63))-(jj)+1)%27)+1; j<=min(ny-1,jj+63); j=j+1) {...",shape=box];
	ForLoop6749222 -> 6749221;
	ForLoop6749222 -> _JOIN_6749222;
	6747015 [label="6747015  scv_8=scv_8+A[(i+5)*ny+j]*x_copy[(j-jj)];...",shape=box];
	6747015 -> _JOIN_6747016;
	_JOIN_6743707 [label="_JOIN_6743707None...",shape=box];
	_JOIN_6743707 -> 6743739;
	_JOIN_6751428 [label="_JOIN_6751428None...",shape=box];
	_JOIN_6751428 -> 6751460;
	6745912 [label="6745912  scv_10=scv_10+A[(i+4)*ny+j]*x_copy[(j-jj)];...",shape=box];
	6745912 -> _JOIN_6745913;
	ForLoop6752451 [label="ForLoop6752451  for (j=jj; j<=min(ny-1,jj+63)-26; j=j+27) {...",shape=box];
	ForLoop6752451 -> 6751513;
	ForLoop6752451 -> _JOIN_6752451;
	ForLoop6753716 [label="ForLoop6753716  for (j=jj; j<=min(ny-1,jj+63)-26; j=j+27) {...",shape=box];
	ForLoop6753716 -> 6753012;
	ForLoop6753716 -> _JOIN_6753716;
	6745998 [label="6745998  scv_8=scv_8+A[(i+5)*ny+j]*x_copy[(j-jj)];...",shape=box];
	6674965 [label="6674965  y[i]=0.0;...",shape=box];
	ForLoop6750325 [label="ForLoop6750325  for (j=(min(ny-1,jj+63))-(((min(ny-1,jj+63))-(jj)+1)%27)+1; j<=min(ny-1,jj+63); j=j+1) {...",shape=box];
	ForLoop6750325 -> 6750324;
	ForLoop6750325 -> _JOIN_6750325;
	_JOIN_6750325 [label="_JOIN_6750325None...",shape=box];
	_JOIN_6750325 -> 6750357;
	ForLoop6745833 [label="ForLoop6745833  for (j=jj; j<=min(ny-1,jj+63)-26; j=j+27) {...",shape=box];
	ForLoop6745833 -> 6744895;
	ForLoop6745833 -> _JOIN_6745833;
	ForLoop6750245 [label="ForLoop6750245  for (j=jj; j<=min(ny-1,jj+63)-26; j=j+27) {...",shape=box];
	ForLoop6750245 -> 6749307;
	ForLoop6750245 -> _JOIN_6750245;
	_JOIN_6745833 [label="_JOIN_6745833None...",shape=box];
	_JOIN_6745833 -> ForLoop6745913;
	_JOIN_6752536 [label="_JOIN_6752536None...",shape=box];
	_JOIN_6752536 -> ForLoop6752851;
	_JOIN_6752534 [label="_JOIN_6752534None...",shape=box];
	_JOIN_6752534 -> _JOIN_6752536;
	_JOIN_6746936 [label="_JOIN_6746936None...",shape=box];
	_JOIN_6746936 -> ForLoop6747016;
	ForLoop6745913 [label="ForLoop6745913  for (j=(min(ny-1,jj+63))-(((min(ny-1,jj+63))-(jj)+1)%27)+1; j<=min(ny-1,jj+63); j=j+1) {...",shape=box];
	ForLoop6745913 -> 6745912;
	ForLoop6745913 -> _JOIN_6745913;
	_JOIN_6752531 [label="_JOIN_6752531None...",shape=box];
	_JOIN_6752531 -> _JOIN_6752534;
	_JOIN_6741501 [label="_JOIN_6741501None...",shape=box];
	_JOIN_6741501 -> 6741533;
	ForLoop6753787 [label="ForLoop6753787  for (j=(min(ny-1,jj+63))-(((min(ny-1,jj+63))-(jj)+1)%27)+1; j<=min(ny-1,jj+63); j=j+1) {...",shape=box];
	ForLoop6753787 -> 6753786;
	ForLoop6753787 -> _JOIN_6753787;
	6744842 [label="6744842  for (j=jj; j<=min(ny-1,jj+63); j=j+1) ...",shape=box];
	_JOIN_6751348 [label="_JOIN_6751348None...",shape=box];
	_JOIN_6751348 -> ForLoop6751428;
	ForLoop6746936 [label="ForLoop6746936  for (j=jj; j<=min(ny-1,jj+63)-26; j=j+27) {...",shape=box];
	ForLoop6746936 -> 6745998;
	ForLoop6746936 -> _JOIN_6746936;
	6753786 [label="6753786  scv_14=scv_14+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	6753786 -> _JOIN_6753787;
	ForLoop6741501 [label="ForLoop6741501  for (j=(min(ny-1,jj+63))-(((min(ny-1,jj+63))-(jj)+1)%27)+1; j<=min(ny-1,jj+63); j=j+1) {...",shape=box];
	ForLoop6741501 -> 6741500;
	ForLoop6741501 -> _JOIN_6741501;
	ForLoop6752851 [label="ForLoop6752851  for (kk=0; kk<=ny-1; kk=kk+256) {...",shape=box];
	ForLoop6752851 -> ForLoop6752849;
	ForLoop6752851 -> _JOIN_6752851;
	ForLoop6752853 [label="ForLoop6752853  for (i=ii; i<=min(nx-1,ii+255)-10; i=i+11) {...",shape=box];
	ForLoop6752853 -> 6808112;
	ForLoop6752853 -> _JOIN_6752853;
	ForLoop6743707 [label="ForLoop6743707  for (j=(min(ny-1,jj+63))-(((min(ny-1,jj+expected=9369846271501.798828
actual=9369846271501.798828
63))-(jj)+1)%27)+1; j<=min(ny-1,jj+63); j=j+1) {...",shape=box];
	ForLoop6743707 -> 6743706;
	ForLoop6743707 -> _JOIN_6743707;
	_JOIN_6744730 [label="_JOIN_6744730None...",shape=box];
	_JOIN_6744730 -> ForLoop6744810;
	6753012 [label="6753012  scv_14=scv_14+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop6744810 [label="ForLoop6744810  for (j=(min(ny-1,jj+63))-(((min(ny-1,jj+63))-(jj)+1)%27)+1; j<=min(ny-1,jj+63); j=j+1) {...",shape=box];
	ForLoop6744810 -> 6744809;
	ForLoop6744810 -> _JOIN_6744810;
	6741533 [label="6741533  for (j=jj; j<=min(ny-1,jj+63); j=j+1) ...",shape=box];
	6742689 [label="6742689  scv_9=scv_9+A[(i+2)*ny+j]*x_copy[(j-jj)];...",shape=box];
	6740726 [label="6740726  scv_5=scv_5+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_6741430 [label="_JOIN_6741430None...",shape=box];
	_JOIN_6741430 -> ForLoop6741501;
	6752530 [label="6752530  scv_3=scv_3+A[(i+10)*ny+j]*x_copy[(j-jj)];...",shape=box];
	6752530 -> _JOIN_6752531;
	ForLoop6752536 [label="ForLoop6752536  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop6752536 -> ForLoop6752534;
	ForLoop6752536 -> _JOIN_6752536;
	ForLoop6752534 [label="ForLoop6752534  for (jj=jjj; jj<=min(ny-1,jjj+1984); jj=jj+64) {...",shape=box];
	ForLoop6752534 -> 6740682;
	ForLoop6752534 -> _JOIN_6752534;
	ForLoop6752531 [label="ForLoop6752531  for (j=(min(ny-1,jj+63))-(((min(ny-1,jj+63))-(jj)+1)%27)+1; j<=min(ny-1,jj+63); j=j+1) {...",shape=box];
	ForLoop6752531 -> 6752530;
	ForLoop6752531 -> _JOIN_6752531;
	6751460 [label="6751460  for (j=jj; j<=min(ny-1,jj+63); j=j+1) ...",shape=box];
	ForLoop6752849 [label="ForLoop6752849  for (k=kk; k<=min(ny-1,kk+255); k=k+1) {...",shape=box];
	ForLoop6752849 -> 6795479;
	ForLoop6752849 -> _JOIN_6752849;
	6750357 [label="6750357  for (j=jj; j<=min(ny-1,jj+63); j=j+1) ...",shape=box];
	_JOIN_6747016 [label="_JOIN_6747016None...",shape=box];
	_JOIN_6747016 -> 6747048;
	ForLoop6751348 [label="ForLoop6751348  for (j=jj; j<=min(ny-1,jj+63)-26; j=j+27) {...",shape=box];
	ForLoop6751348 -> 6750410;
	ForLoop6751348 -> _JOIN_6751348;
	ForLoop6749142 [label="ForLoop6749142  for (j=jj; j<=min(ny-1,jj+63)-26; j=j+27) {...",shape=box];
	ForLoop6749142 -> 6748204;
	ForLoop6749142 -> _JOIN_6749142;
	6740489 [label="6740489  double x_copy[64];...",shape=box];
	_JOIN_6743627 [label="_JOIN_6743627None...",shape=box];
	_JOIN_6743627 -> ForLoop6743707;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest38.exe __orio_perftest38.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest38.exe  
{'[5, 3, 5, 0, 6, 0, 1, 0, 25, 10, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.143341}
{'[5, 3, 5, 0, 6, 0, 1, 0, 25, 10, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.143298}
{'[5, 3, 5, 0, 6, 0, 1, 0, 25, 10, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.143332}
{'[5, 3, 5, 0, 6, 0, 1, 0, 25, 10, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.143402}
{'[5, 3, 5, 0, 6, 0, 1, 0, 25, 10, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.143351}
{'[5, 3, 5, 0, 6, 0, 1, 0, 25, 10, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.143314}
{'[5, 3, 5, 0, 6, 0, 1, 0, 25, 10, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.143328}
{'[5, 3, 5, 0, 6, 0, 1, 0, 25, 10, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.148944}
{'[5, 3, 5, 0, 6, 0, 1, 0, 25, 10, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.143699}
{'[5, 3, 5, 0, 6, 0, 1, 0, 25, 10, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.14337}
{'[5, 3, 5, 0, 6, 0, 1, 0, 25, 10, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.143436}
{'[5, 3, 5, 0, 6, 0, 1, 0, 25, 10, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.143449}
{'[5, 3, 5, 0, 6, 0, 1, 0, 25, 10, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.143465}
{'[5, 3, 5, 0, 6, 0, 1, 0, 25, 10, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.143374}
{'[5, 3, 5, 0, 6, 0, 1, 0, 25, 10, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.143418}
{'[5, 3, 5, 0, 6, 0, 1, 0, 25, 10, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.143398}
{'[5, 3, 5, 0, 6, 0, 1, 0, 25, 10, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.143386}
{'[5, 3, 5, 0, 6, 0, 1, 0, 25, 10, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.143412}
{'[5, 3, 5, 0, 6, 0, 1, 0, 25, 10, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.149134}
{'[5, 3, 5, 0, 6, 0, 1, 0, 25, 10, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.143381}
{'[5, 3, 5, 0, 6, 0, 1, 0, 25, 10, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.143507}
{'[5, 3, 5, 0, 6, 0, 1, 0, 25, 10, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.143433}
{'[5, 3, 5, 0, 6, 0, 1, 0, 25, 10, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.143461}
{'[5, 3, 5, 0, 6, 0, 1, 0, 25, 10, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.143433}
{'[5, 3, 5, 0, 6, 0, 1, 0, 25, 10, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.14345}
{'[5, 3, 5, 0, 6, 0, 1, 0, 25, 10, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.143569}
{'[5, 3, 5, 0, 6, 0, 1, 0, 25, 10, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.143331}
{'[5, 3, 5, 0, 6, 0, 1, 0, 25, 10, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.143495}
{'[5, 3, 5, 0, 6, 0, 1, 0, 25, 10, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.149069}
{'[5, 3, 5, 0, 6, 0, 1, 0, 25, 10, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.143572}

out:
 ["{'[5, 3, 5, 0, 6, 0, 1, 0, 25, 10, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.143341}", "{'[5, 3, 5, 0, 6, 0, 1, 0, 25, 10, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.143298}", "{'[5, 3, 5, 0, 6, 0, 1, 0, 25, 10, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.143332}", "{'[5, 3, 5, 0, 6, 0, 1, 0, 25, 10, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.143402}", "{'[5, 3, 5, 0, 6, 0, 1, 0, 25, 10, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.143351}", "{'[5, 3, 5, 0, 6, 0, 1, 0, 25, 10, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.143314}", "{'[5, 3, 5, 0, 6, 0, 1, 0, 25, 10, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.143328}", "{'[5, 3, 5, 0, 6, 0, 1, 0, 25, 10, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.148944}", "{'[5, 3, 5, 0, 6, 0, 1, 0, 25, 10, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.143699}", "{'[5, 3, 5, 0, 6, 0, 1, 0, 25, 10, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.14337}", "{'[5, 3, 5, 0, 6, 0, 1, 0, 25, 10, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.143436}", "{'[5, 3, 5, 0, 6, 0, 1, 0, 25, 10, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.143449}", "{'[5, 3, 5, 0, 6, 0, 1, 0, 25, 10, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.143465}", "{'[5, 3, 5, 0, 6, 0, 1, 0, 25, 10, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.143374}", "{'[5, 3, 5, 0, 6, 0, 1, 0, 25, 10, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.143418}", "{'[5, 3, 5, 0, 6, 0, 1, 0, 25, 10, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.143398}", "{'[5, 3, 5, 0, 6, 0, 1, 0, 25, 10, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.143386}", "{'[5, 3, 5, 0, 6, 0, 1, 0, 25, 10, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.143412}", "{'[5, 3, 5, 0, 6, 0, 1, 0, 25, 10, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.149134}", "{'[5, 3, 5, 0, 6, 0, 1, 0, 25, 10, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.143381}", "{'[5, 3, 5, 0, 6, 0, 1, 0, 25, 10, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.143507}", "{'[5, 3, 5, 0, 6, 0, 1, 0, 25, 10, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.143433}", "{'[5, 3, 5, 0, 6, 0, 1, 0, 25, 10, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.143461}", "{'[5, 3, 5, 0, 6, 0, 1, 0, 25, 10, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.143433}", "{'[5, 3, 5, 0, 6, 0, 1, 0, 25, 10, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.14345}", "{'[5, 3, 5, 0, 6, 0, 1, 0, 25, 10, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.143569}", "{'[5, 3, 5, 0, 6, 0, 1, 0, 25, 10, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.143331}", "{'[5, 3, 5, 0, 6, 0, 1, 0, 25, 10, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.143495}", "{'[5, 3, 5, 0, 6, 0, 1, 0, 25, 10, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.149069}", "{'[5, 3, 5, 0, 6, 0, 1, 0, 25, 10, 26, 0, 0, 0, 0, 1, 1, 0]' : 0.143572}"]
returning from 'run': {'[5, 3, 5, 0, 6, 0, 1, 0, 25, 10, 26, 0, 0, 0, 0, 1, 1, 0]': ([0.143341, 0.143298, 0.143332, 0.143402, 0.143351, 0.143314, 0.143328, 0.148944, 0.143699, 0.14337, 0.143436, 0.143449, 0.143465, 0.143374, 0.143418, 0.143398, 0.143386, 0.143412, 0.149134, 0.143381, 0.143507, 0.143433, 0.143461, 0.143433, 0.14345, 0.143569, 0.143331, 0.143495, 0.149069, 0.143572], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.143341, 0.143298, 0.143332, 0.143402, 0.143351, 0.143314, 0.143328, 0.148944, 0.143699, 0.14337, 0.143436, 0.143449, 0.143465, 0.143374, 0.143418, 0.143398, 0.143386, 0.143412, 0.149134, 0.143381, 0.143507, 0.143433, 0.143461, 0.143433, 0.14345, 0.143569, 0.143331, 0.143495, 0.149069, 0.143572], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[5, 3, 5, 0, 6, 0, 1, 0, 25, 10, 26, 0, 0, 0, 0, 1, 1, 0]': ([0.143341, 0.143298, 0.143332, 0.143402, 0.143351, 0.143314, 0.143WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = kkk
328, 0.148944, 0.143699, 0.14337, 0.143436, 0.143449, 0.143465, 0.143374, 0.143418, 0.143398, 0.143386, 0.143412, 0.149134, 0.143381, 0.143507, 0.143433, 0.143461, 0.143433, 0.14345, 0.143569, 0.143331, 0.143495, 0.149069, 0.143572], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [5, 0, 4, 6, 5, 2, 1, 0, 0, 28, 10, 1, 0, 1, 0, 1]
Fixed Factors: {'U1_I': 25, 'SCR': 1}
Testing candidate 2: [5, 0, 4, 6, 5, 2, 1, 0, 25, 0, 28, 10, 1, 0, 1, 1, 0, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	5
        Additions: 		1985
        Multiplications: 	900
        Divisions: 		0
        Logical: 		0
        Reads: 			3876
        Writes: 		667
        Comparisons:		22
        Gotos: 			0
        
digraph CFG {
	_JOIN_6995798 [label="_JOIN_6995798None...",shape=box];
	_JOIN_6995798 -> _JOIN_6995801;
	_JOIN_6995801 [label="_JOIN_6995801None...",shape=box];
	_JOIN_6995801 -> ForLoop6996453;
	7018524 [label="7018524  double scv_31, scv_32, scv_33, scv_34, scv_35, scv_36, scv_37, scv_38;...",shape=box];
	ForLoop6989561 [label="ForLoop6989561  for (jjj=0; jjj<=ny-1; jjj=jjj+1024) {...",shape=box];
	ForLoop6989561 -> 6981180;
	ForLoop6989561 -> _JOIN_6989561;
	ForLoop6995727 [label="ForLoop6995727  for (j=jjj; j<=cbv_8; j=j+29) {...",shape=box];
	ForLoop6995727 -> 6994969;
	ForLoop6995727 -> _JOIN_6995727;
	_JOIN_6996059 [label="_JOIN_6996059None...",shape=box];
	_JOIN_6996059 -> 6996060;
	7008442 [label="7008442  double scv_30;...",shape=box];
	_JOIN_6989262 [label="_JOIN_6989262None...",shape=box];
	_JOIN_6989262 -> 7071108;
	6824612 [label="6824612  y[i]=0.0;...",shape=box];
	6824612 -> _JOIN_6824613;
	6823885 [label="6823885  int i;...",shape=box];
	6823885 -> ForLoop6824544;
	7043026 [label="7043026  double scv_67, scv_68, scv_69, scv_70, scv_71, scv_72, scv_73, scv_74;...",shape=box];
	ForLoop6996458 [label="ForLoop6996458  for (iii=0; iii<=nx-1; iii=iii+2048) {...",shape=box];
	ForLoop6996458 -> ForLoop6996457;
	ForLoop6996458 -> _JOIN_6996458;
	ForLoop6824544 [label="ForLoop6824544  for (i=0; i<=ny-26; i=i+26) {...",shape=box];
	ForLoop6824544 -> 6824317;
	ForLoop6824544 -> _JOIN_6824544;
	ForLoop6996453 [label="ForLoop6996453  for (kk=0; kk<=ny-1; kk=kk+128) {...",shape=box];
	ForLoop6996453 -> 7075747;
	ForLoop6996453 -> _JOIN_6996453;
	ForLoop6996450 [label="ForLoop6996450  for (k=cbv_13; k<=cbv_14; k=k+1) {...",shape=box];
	ForLoop6996450 -> 7043323;
	ForLoop6996450 -> _JOIN_6996450;
	7075747 [label="7075747  register int cbv_11;...",shape=box];
	ForLoop6996457 [label="ForLoop6996457  for (ii=iii; ii<=min(nx-1,iii+1792); ii=ii+256) {...",shape=box];
	ForLoop6996457 -> ForLoop6994857;
	ForLoop6996457 -> _JOIN_6996457;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 6823885;
	_JOIN_6989558 [label="_JOIN_6989558None...",shape=box];
	_JOIN_6989558 -> _JOIN_6989561;
	_JOIN_6994855 [label="_JOIN_6994855None...",shape=box];
	_JOIN_6994855 -> 7038979;
	ForLoop6994852 [label="ForLoop6994852  for (k=cbv_6; k<=cbv_7; k=k+1) {...",shape=box];
	ForLoop6994852 -> 7023449;
	ForLoop6994852 -> _JOIN_6994852;
	_JOIN_6994857 [label="_JOIN_6994857None...",shape=box];
	_JOIN_6994857 -> ForLoop6996455;
	ForLoop6994855 [label="ForLoop6994855  for (kk=0; kk<=ny-1; kk=kk+128) {...",shape=box];
	ForLoop6994855 -> 7072545;
	ForLoop6994855 -> _JOIN_6994855;
	ForLoop6991716 [label="ForLoop6991716  for (kt=kk; kt<=cbv_4; kt=kt+8) {...",shape=box];
	ForLoop6991716 -> 7018524;
	ForLoop6991716 -> _JOIN_6991716;
	ForLoop6994857 [label="ForLoop6994857  for (it=ii; it<=min(nx-1,ii+255)-7; it=it+8) {...",shape=box];
	ForLoop6994857 -> 7038967;
	ForLoop6994857 -> _JOIN_6994857;
	6981180 [label="6981180  for (j=jjj; j<=min(ny-1,jjj+1023); j=j+1) ...",shape=box];
	_JOIN_6824613 [label="_JOIN_6824613None...",shape=box];
	_JOIN_6824613 -> 6981078;
	_JOIN_6996458 [label="_JOIN_6996458None...",shape=box];
	ForLoop6995801 [label="ForLoop6995801  for (jjj=0; jjj<=ny-1; jjj=jjj+1024) {..."expected=9369846271501.798828
actual=9369846271501.798828
,shape=box];
	ForLoop6995801 -> 6994925;
	ForLoop6995801 -> _JOIN_6995801;
	7038979 [label="7038979  tmp[it]=scv_51;...",shape=box];
	6994969 [label="6994969  scv_79=scv_79+A[i*ny+j]*x_copy[(j-jjj)];...",shape=box];
	7075409 [label="7075409  register int cbv_9, cbv_10;...",shape=box];
	6981078 [label="6981078  double x_copy[1024];...",shape=box];
	ForLoop6989558 [label="ForLoop6989558  for (j=cbv_2; j<=cbv_3; j=j+1) {...",shape=box];
	ForLoop6989558 -> 7008442;
	ForLoop6989558 -> _JOIN_6989558;
	7071108 [label="7071108  register int cbv_2, cbv_3;...",shape=box];
	7022745 [label="7022745  double scv_39, scv_40, scv_41, scv_42, scv_43, scv_44, scv_45, scv_46;...",shape=box];
	_JOIN_6824544 [label="_JOIN_6824544None...",shape=box];
	_JOIN_6824544 -> ForLoop6824613;
	ForLoop6996455 [label="ForLoop6996455  for (i=it; i<=min(nx-1,ii+255); i=i+1) {...",shape=box];
	ForLoop6996455 -> 7045905;
	ForLoop6996455 -> _JOIN_6996455;
	ForLoop6995798 [label="ForLoop6995798  for (j=cbv_9; j<=cbv_10; j=j+1) {...",shape=box];
	ForLoop6995798 -> 6995797;
	ForLoop6995798 -> _JOIN_6995798;
	7045917 [label="7045917  tmp[i]=scv_79;...",shape=box];
	7045917 -> _JOIN_6996455;
	_JOIN_6995727 [label="_JOIN_6995727None...",shape=box];
	_JOIN_6995727 -> 7075409;
	_JOIN_6994601 [label="_JOIN_6994601None...",shape=box];
	_JOIN_6994601 -> 7074601;
	7043323 [label="7043323  double scv_78;...",shape=box];
	7074601 [label="7074601  register int cbv_6, cbv_7;...",shape=box];
	ForLoop6824613 [label="ForLoop6824613  for (i=ny-((ny-(0))%26); i<=ny-1; i=i+1) ...",shape=box];
	ForLoop6824613 -> 6824612;
	ForLoop6824613 -> _JOIN_6824613;
	_JOIN_6996453 [label="_JOIN_6996453None...",shape=box];
	_JOIN_6996453 -> 7045917;
	6824317 [label="6824317  y[i]=0.0;...",shape=box];
	7042389 [label="7042389  double scv_59, scv_60, scv_61, scv_62, scv_63, scv_64, scv_65, scv_66;...",shape=box];
	7072545 [label="7072545  register int cbv_4;...",shape=box];
	7045905 [label="7045905  double scv_79;...",shape=box];
	ForLoop6989262 [label="ForLoop6989262  for (j=jjj; j<=cbv_1; j=j+29) {...",shape=box];
	ForLoop6989262 -> 7007489;
	ForLoop6989262 -> _JOIN_6989262;
	_JOIN_6996455 [label="_JOIN_6996455None...",shape=box];
	_JOIN_6996455 -> _JOIN_6996457;
	_JOIN_6989561 [label="_JOIN_6989561None...",shape=box];
	_JOIN_6989561 -> ForLoop6994855;
	ForLoop6994601 [label="ForLoop6994601  for (k=kt; k<=cbv_5; k=k+11) {...",shape=box];
	ForLoop6994601 -> 7022745;
	ForLoop6994601 -> _JOIN_6994601;
	6994925 [label="6994925  for (j=jjj; j<=min(ny-1,jjj+1023); j=j+1) ...",shape=box];
	_JOIN_6996457 [label="_JOIN_6996457None...",shape=box];
	_JOIN_6996457 -> _JOIN_6996458;
	7038967 [label="7038967  double scv_51, scv_52, scv_53, scv_54, scv_55, scv_56, scv_57, scv_58;...",shape=box];
	_JOIN_6994852 [label="_JOIN_6994852None...",shape=box];
	_JOIN_6994852 -> _JOIN_6994855;
	ForLoop6996059 [label="ForLoop6996059  for (kt=kk; kt<=cbv_11; kt=kt+8) {...",shape=box];
	ForLoop6996059 -> 7042389;
	ForLoop6996059 -> _JOIN_6996059;
	7076235 [label="7076235  register int cbv_13, cbv_14;...",shape=box];
	6995797 [label="6995797  scv_79=scv_79+A[i*ny+j]*x_copy[(j-jjj)];...",shape=box];
	6995797 -> _JOIN_6995798;
	_JOIN_6991716 [label="_JOIN_6991716None...",shape=box];
	_JOIN_6991716 -> 6991717;
	6991717 [label="6991717  int k;...",shape=box];
	ForLoop6996382 [label="ForLoop6996382  for (k=kt; k<=cbv_12; k=k+11) {...",shape=box];
	ForLoop6996382 -> 7043026;
	ForLoop6996382 -> _JOIN_6996382;
	_JOIN_6996450 [label="_JOIN_6996450None...",shape=box];
	_JOIN_6996450 -> _JOIN_6996453;
	6996060 [label="6996060  int k;...",shape=box];
	_JOIN_6996382 [label="_JOIN_6996382None...",shape=box];
	_JOIN_6996382 -> 7076235;
	7023449 [label="7023449  double scv_50;...",shape=box];
	7007489 [label="7007489  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest39.exe __orio_perftest39.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest39.exe  
{'[5, 0, 4, 6, 5, 2, 1, 0, 25, 0, 28, 10, 1, 0, 1, 1, 0, 1]' : 0.0817699}
{'[5, 0, 4, 6, 5, 2, 1, 0, 25, 0, 28, 10, 1, 0, 1, 1, 0, 1]' : 0.081569}
{'[5, 0, 4, 6, 5, 2, 1, 0, 25, 0, 28, 10, 1, 0, 1, 1, 0, 1]' : 0.0813551}
{'[5, 0, 4, 6, 5, 2, 1, 0, 25, 0, 28, 10, 1, 0, 1, 1, 0, 1]' : 0.0814478}
{'[5, 0, 4, 6, 5, 2, 1, 0, 25, 0, 28, 10, 1, 0, 1, 1, 0, 1]' : 0.0813441}
{'[5, 0, 4, 6, 5, 2, 1, 0, 25, 0, 28, 10, 1, 0, 1, 1, 0, 1]' : 0.08146}
{'[5, 0, 4, 6, 5, 2, 1, 0, 25, 0, 28, 10, 1, 0, 1, 1, 0, 1]' : 0.0813699}
{'[5, 0, 4, 6, 5, 2, 1, 0, 25, 0, 28, 10, 1, 0, 1, 1, 0, 1]' : 0.0819101}
{'[5, 0, 4, 6, 5, 2, 1, 0, 25, 0, 28, 10, 1, 0, 1, 1, 0, 1]' : 0.0814588}
{'[5, 0, 4, 6, 5, 2, 1, 0, 25, 0, 28, 10, 1, 0, 1, 1, 0, 1]' : 0.0813508}
{'[5, 0, 4, 6, 5, 2, 1, 0, 25, 0, 28, 10, 1, 0, 1, 1, 0, 1]' : 0.0814712}
{'[5, 0, 4, 6, 5, 2, 1, 0, 25, 0, 28, 10, 1, 0, 1, 1, 0, 1]' : 0.0814319}
{'[5, 0, 4, 6, 5, 2, 1, 0, 25, 0, 28, 10, 1, 0, 1, 1, 0, 1]' : 0.0813179}
{'[5, 0, 4, 6, 5, 2, 1, 0, 25, 0, 28, 10, 1, 0, 1, 1, 0, 1]' : 0.0814922}
{'[5, 0, 4, 6, 5, 2, 1, 0, 25, 0, 28, 10, 1, 0, 1, 1, 0, 1]' : 0.081424}
{'[5, 0, 4, 6, 5, 2, 1, 0, 25, 0, 28, 10, 1, 0, 1, 1, 0, 1]' : 0.081425}
{'[5, 0, 4, 6, 5, 2, 1, 0, 25, 0, 28, 10, 1, 0, 1, 1, 0, 1]' : 0.0813529}
{'[5, 0, 4, 6, 5, 2, 1, 0, 25, 0, 28, 10, 1, 0, 1, 1, 0, 1]' : 0.0813551}
{'[5, 0, 4, 6, 5, 2, 1, 0, 25, 0, 28, 10, 1, 0, 1, 1, 0, 1]' : 0.081414}
{'[5, 0, 4, 6, 5, 2, 1, 0, 25, 0, 28, 10, 1, 0, 1, 1, 0, 1]' : 0.081476}
{'[5, 0, 4, 6, 5, 2, 1, 0, 25, 0, 28, 10, 1, 0, 1, 1, 0, 1]' : 0.0814772}
{'[5, 0, 4, 6, 5, 2, 1, 0, 25, 0, 28, 10, 1, 0, 1, 1, 0, 1]' : 0.0813789}
{'[5, 0, 4, 6, 5, 2, 1, 0, 25, 0, 28, 10, 1, 0, 1, 1, 0, 1]' : 0.081357}
{'[5, 0, 4, 6, 5, 2, 1, 0, 25, 0, 28, 10, 1, 0, 1, 1, 0, 1]' : 0.081522}
{'[5, 0, 4, 6, 5, 2, 1, 0, 25, 0, 28, 10, 1, 0, 1, 1, 0, 1]' : 0.0813482}
{'[5, 0, 4, 6, 5, 2, 1, 0, 25, 0, 28, 10, 1, 0, 1, 1, 0, 1]' : 0.0814869}
{'[5, 0, 4, 6, 5, 2, 1, 0, 25, 0, 28, 10, 1, 0, 1, 1, 0, 1]' : 0.081737}
{'[5, 0, 4, 6, 5, 2, 1, 0, 25, 0, 28, 10, 1, 0, 1, 1, 0, 1]' : 0.08144}
{'[5, 0, 4, 6, 5, 2, 1, 0, 25, 0, 28, 10, 1, 0, 1, 1, 0, 1]' : 0.0813949}
{'[5, 0, 4, 6, 5, 2, 1, 0, 25, 0, 28, 10, 1, 0, 1, 1, 0, 1]' : 0.0813141}

out:
 ["{'[5, 0, 4, 6, 5, 2, 1, 0, 25, 0, 28, 10, 1, 0, 1, 1, 0, 1]' : 0.0817699}", "{'[5, 0, 4, 6, 5, 2, 1, 0, 25, 0, 28, 10, 1, 0, 1, 1, 0, 1]' : 0.081569}", "{'[5, 0, 4, 6, 5, 2, 1, 0, 25, 0, 28, 10, 1, 0, 1, 1, 0, 1]' : 0.0813551}", "{'[5, 0, 4, 6, 5, 2, 1, 0, 25, 0, 28, 10, 1, 0, 1, 1, 0, 1]' : 0.0814478}", "{'[5, 0, 4, 6, 5, 2, 1, 0, 25, 0, 28, 10, 1, 0, 1, 1, 0, 1]' : 0.0813441}", "{'[5, 0, 4, 6, 5, 2, 1, 0, 25, 0, 28, 10, 1, 0, 1, 1, 0, 1]' : 0.08146}", "{'[5, 0, 4, 6, 5, 2, 1, 0, 25, 0, 28, 10, 1, 0, 1, 1, 0, 1]' : 0.0813699}", "{'[5, 0, 4, 6, 5, 2, 1, 0, 25, 0, 28, 10, 1, 0, 1, 1, 0, 1]' : 0.0819101}", "{'[5, 0, 4, 6, 5, 2, 1, 0, 25, 0, 28, 10, 1, 0, 1, 1, 0, 1]' : 0.0814588}", "{'[5, 0, 4, 6, 5, 2, 1, 0, 25, 0, 28, 10, 1, 0, 1, 1, 0, 1]' : 0.0813508}", "{'[5, 0, 4, 6, 5, 2, 1, 0, 25, 0, 28, 10, 1, 0, 1, 1, 0, 1]' : 0.0814712}", "{'[5, 0, 4, 6, 5, 2, 1, 0, 25, 0, 28, 10, 1, 0, 1, 1, 0, 1]' : 0.0814319}", "{'[5, 0, 4, 6, 5, 2, 1, 0, 25, 0, 28, 10, 1, 0, 1, 1, 0, 1]' : 0.0813179}", "{'[5, 0, 4, 6, 5, 2, 1, 0, 25, 0, 28, 10, 1, 0, 1, 1, 0, 1]' : 0.0814922}", "{'[5, 0, 4, 6, 5, 2, 1, 0, 25, 0, 28, 10, 1, 0, 1, 1, 0, 1]' : 0.081424}", "{'[5, 0, 4, 6, 5, 2, 1, 0, 25, 0, 28, 10, 1, 0, 1, 1, 0, 1]' : 0.081425}", "{'[5, 0, 4, 6, 5, 2, 1, 0, 25, 0, 28, 10, 1, 0, 1, 1, 0, 1]' : 0.0813529}", "{'[5, 0, 4, 6, 5, 2, 1, 0, 25, 0, 28, 10, 1, 0, 1, 1, 0, 1]' : 0.0813551}", "{'[5, 0, 4, 6, 5, 2, 1, 0, 25, 0, 28, 10, 1, 0, 1, 1, 0, 1]' : 0.081414}", "{'[5, 0, 4, 6, 5, 2, 1, 0, 25, 0, 28, 10, 1, 0, 1, 1, 0, 1]' : 0.081476}", "{'[5, 0, 4, 6, 5, 2, 1, 0, 25, 0, 28, 10, 1, 0, 1, 1, 0, 1]' : 0.0814772}", "{'[5, 0, 4, 6, 5, 2, 1, 0, 25, 0, 28, 10, 1, 0, 1, 1, 0, 1]' : 0.0813789}", "{'[5, 0, 4, 6, 5, 2, 1, 0, 25, 0, 28, 10, 1, 0, 1, 1, 0, 1]' : 0.081357}", "{'[5, 0, 4, 6, 5, 2, 1, 0, 25, 0, 28, 10, 1, 0, 1, 1, 0, 1]' : 0.081522}", "{'[5, 0, 4, 6, 5, 2, 1, 0, 25, 0, 28, 10, 1, 0, 1, 1, 0, 1]' : 0.0813482}", "{'[5, 0, 4, 6, 5, 2, 1, 0, 25, 0, 28, 10, 1, 0, 1, 1, 0, 1]' : 0.0814869}", "{'[5, 0, 4, 6, 5, 2, 1, 0, 25, 0, 28, 10, 1, 0, 1, 1, 0, 1]' : 0.081737}", "{'[5, 0, 4, 6, 5, 2, 1, 0, 25, 0, 28, 10, 1, 0, 1, 1, 0, 1]' : 0.08144}", "{'[5, 0, 4, 6, 5, 2, 1, 0, 25, 0, 28, 10, 1, 0, 1, 1, 0, 1]' : 0.0813949}", "{'[5, 0, 4, 6, 5, 2, 1, 0, 25, 0, 28, 10, 1, 0, 1, 1, 0, 1]' : 0.0813141}"]
returning from 'run': {'[5, 0, 4, 6, 5, 2, 1, 0, 25, 0, 28, 10, 1, 0, 1, 1, 0, 1]': ([0.0817699, 0.081569, 0.0813551, 0.0814478, 0.0813441, 0.08146, 0.0813699, 0.0819101, 0.0814588, 0.0813508, 0.0814712, 0.0814319, 0.0813179, 0.0814922, 0.081424, 0.081425, 0.0813529, 0.0813551, 0.081414, 0.081476, 0.0814772, 0.0813789, 0.081357, 0.081522, 0.0813482, 0.0814869, 0.081737, 0.08144, 0.0813949, 0.0813141], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.0817699, 0.081569, 0.0813551, 0.0814478, 0.0813441, 0.08146, 0.0813699, 0.0819101, 0.0814588, 0.0813508, 0.0814712, 0.0814319, 0.0813179, 0.0814922, 0.081424, 0.081425, 0.0813529, 0.0813551, 0.081414, 0.081476, 0.0814772, 0.0813789, 0.081357, 0.081522, 0.0813482, 0.0814869, 0.081737, 0.08144, 0.0813949, 0.0813141], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[5, 0, 4, 6, 5, 2, 1, 0, 25, 0, 28, 10, 1, 0, 1, 1, 0, 1]': ([0.0817699, 0.081569, 0.0813551, 0.0814478, 0.0813441, 0.08146, 0.0813699, 0.0819101, 0.0814588, 0.0813508, 0.0814712, 0.0814319, 0.0813179, 0.0814922, 0.081424, 0.081425, 0.0813529, 0.0813551, 0.081414, 0.081476, 0.0814772, 0.0813789, 0.081357, 0.081522, 0.0813482, 0.0814869, 0.081737, 0.08144, 0.0813949, 0.0813141], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [4, 0, 6, 4, 6, 6, 1, 1, 28, 2, 0, 0, 0, 1, 1, 0]
Fixed Factors: {'U1_I': 25, 'SCR': 1}
Testing candidate 3: [4, 0, 6, 4, 6, 6, 1, 1, 25, 28, 2, 0, 0, 0, 1, 1, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	164
        Max loop nest depth: 	6
        Additions: 		2537
        Multiplications: 	720
        Divisions: 		0
        Logical: 		0
        Reads: 			4868
        Writes: 		930
        Comparisons:		164
        Gotos: 			0
        
digraph CFG {
	ForLoop7191669 [label="ForLoop7191669  for (j=jjj; j<=min(ny-1,jjj+2047)-2; j=j+3) {...",shape=box];
	ForLoop7191669 -> 7191595;
	ForLoop7191669 -> _JOIN_7191669;
	_JOIN_7189279 [label="_JOIN_7189279None...",shape=box];
	_JOIN_7189279 -> ForLoop7189359;
	ForLoop7191749 [label="ForLoop7191749  for (j=(min(ny-1,jjj+2047))-(((min(ny-1,jjj+2047))-(jjj)+1)%3)+1; j<=min(ny-1,jjj+2047); j=j+1) {...",shape=box];
	ForLoop7191749 -> 7191748;
	ForLoop7191749 -> _JOIN_7191749;
	7186237 [label="7186237  int i;...",shape=box];
	7186237 -> ForLoop7203876;
	_JOIN_7188562 [label="_JOIN_7188562None...",shape=box];
	_JOIN_7188562 -> ForLoop7188642;
	_JOIN_7193103 [label="_JOIN_7193103None...",shape=box];
	_JOIN_7193103 -> ForLoop7193183;
	7189444 [label="7189444  scv_10=scv_10+A[(i+12)*ny+j]*x_copy[(j-jjj)];...",shape=box];
	7188196 [label="7188196  for (j=jjj; j<=min(ny-1,jjj+2047); j=j+1) ...",shape=box];
	7190075 [label="7190075  scv_24=scv_24+A[(i+14)*ny+j]*x_copy[(j-jjj)];...",shape=box];
	7190075 -> _JOIN_7190076;
	ForLoop7192147 [label="ForLoop7192147  for (j=jjj; j<=min(ny-1,jjj+2047)-2; j=j+3) {...",shape=box];
	ForLoop7192147 -> 7192073;
	ForLoop7192147 -> _JOIN_7192147;
	7188402 [label="7188402  scv_18=scv_18+A[(i+7)*ny+j]*x_copy[(j-jjj)];...",shape=box];
	7188402 -> _JOIN_7188403;
	7187718 [label="7187718  for (j=jjj; j<=min(ny-1,jjj+2047); j=j+1) ...",shape=box];
	ForLoop7191988 [label="ForLoop7191988  for (j=(min(ny-1,jjj+2047))-(((min(ny-1,jjj+2047))-(jjj)+1)%3)+1; j<=min(ny-1,jjj+2047); j=j+1) {...",shape=box];
	ForLoop7191988 -> 7191987;
	ForLoop7191988 -> _JOIN_7191988;
	7264604 [label="7264604  double scv_46;...",shape=box];
	7189630 [label="7189630  for (j=jjj; j<=min(ny-1,jjj+2047); j=j+1) ...",shape=box];
	7204209 [label="7204209  for (k=kk; k<=min(ny-1,kk+511); k=k+1) ...",shape=box];
	7204209 -> ForLoop7204502;
	ForLoop7191908 [label="ForLoop7191908  for (j=jjj; j<=min(ny-1,jjj+2047)-2; j=j+3) {...",shape=box];
	ForLoop7191908 -> 7191834;
	ForLoop7191908 -> _JOIN_7191908;
	ForLoop7192705 [label="ForLoop7192705  for (j=(min(ny-1,jjj+2047))-(((min(ny-1,jjj+2047))-(jjj)+1)%3)+1; j<=min(ny-1,jjj+2047); j=j+1) {...",shape=box];
	ForLoop7192705 -> 7192704;
	ForLoop7192705 -> _JOIN_7192705;
	7192943 [label="7192943  scv_22=scv_22+A[(i+26)*ny+j]*x_copy[(j-jjj)];...",shape=box];
	7192943 -> _JOIN_7192944;
	7190639 [label="7190639  scv_37=scv_37+A[(i+17)*ny+j]*x_copy[(j-jjj)];...",shape=box];
	7190553 [label="7190553  scv_29=scv_29+A[(i+16)*ny+j]*x_copy[(j-jjj)];...",shape=box];
	7190553 -> _JOIN_7190554;
	7191303 [label="7191303  for (j=jjj; j<=min(ny-1,jjj+2047); j=j+1) ...",shape=box];
	ForLoop7192386 [label="ForLoop7192386  for (j=jjj; j<=min(ny-1,jjj+2047)-2; j=j+3) {...",shape=box];
	ForLoop7192386 -> 7192312;
	ForLoop7192386 -> _JOIN_7192386;
	_JOIN_7190713 [label="_JOIN_7190713None...",shape=box];
	_JOIN_7190713 -> ForLoop7190793;
	7191117 [label="7191117  scv_13=scv_13+A[(i+19)*ny+j]*x_copy[(j-jjj)];...",shape=box];
	ForLoop7204147 [label="ForLoop7204147  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop7204147 -> 7203973;
	ForLoop7204147 -> _JOIN_7204147;
	7190108 [label="7190108  for (j=jjj; j<=min(ny-1,jjj+2047); j=j+1) ...",shape=box];
	7193487 [label="7193487  for (k=kk; k<=min(ny-1,kk+511); k=k+1) ...",shape=box];
	ForLoop7187447 [label="ForLoop7187447  for (j=(min(ny-1,jjj+2047))-(((min(ny-1,jjj+2047))-(jjj)+1)%3)+1; j<=min(ny-1,jjj+2047); j=j+1) {...",shape=box];
	ForLoop7187447 -> 7187446;
	ForLoop7187447 -> _JOIN_7187447;
	_JOIN_7192864 [label="_JOIN_7192864None...",shape=box];
	_JOIN_7192864 -> ForLoop7192944;
	7191595 [label="7191595  scv_12=scv_12+A[(i+21)*ny+j]*x_copy[(j-jjj)];...",shape=box];
	7189119 [label="7189119  scv_23=scv_23+A[(i+10)*ny+j]*x_copy[(j-jjj)];...",shape=box];
	7189119 -> _JOIN_7189120;
	ForLoop7190076 [label="ForLoop7190076  for (j=(min(ny-1,jjj+2047))-(((min(ny-1,jjj+2047))-(jjj)+1)%3)+1; j<=min(ny-1,jjj+2047); j=j+1) {...",shape=box];
	ForLoop7190076 -> 7190075;
	ForLoop7190076 -> _JOIN_7190076;
	ForLoop7186730 [label="ForLoop7186730  for (j=(min(ny-1,jjj+2047))-(((min(ny-1,jjj+2047))-(jjj)+1)%3)+1; j<=min(ny-1,jjj+2047); j=j+1) {...",shape=box];
	ForLoop7186730 -> 7186729;
	ForLoop7186730 -> _JOIN_7186730;
	_JOIN_7193425 [label="_JOIN_7193425None...",shape=box];
	_JOIN_7193425 -> ForLoop7203874;
	_JOIN_7187686 [label="_JOIN_7187686None...",shape=box];
	_JOIN_7187686 -> 7187718;
	ForLoop7188084 [label="ForLoop7188084  for (j=jjj; j<=min(ny-1,jjj+2047)-2; j=j+3) {...",shape=box];
	ForLoop7188084 -> 7188010;
	ForLoop7188084 -> _JOIN_7188084;
	_JOIN_7190235 [label="_JOIN_7190235None...",shape=box];
	_JOIN_7190235 -> ForLoop7190315;
	ForLoop7186969 [label="ForLoop7186969  for (j=(min(ny-1,jjj+2047))-(((min(ny-1,jjj+2047))-(jjj)+1)%3)+1; j<=min(ny-1,jjj+2047); j=j+1) {...",shape=box];
	ForLoop7186969 -> 7186968;
	ForLoop7186969 -> _JOIN_7186969;
	_JOIN_7187447 [label="_JOIN_7187447None...",shape=box];
	_JOIN_7187447 -> 7187479;
	7192704 [label="7192704  scv_27=scv_27+A[(i+25)*ny+j]*x_copy[(j-jjj)];...",shape=box];
	7192704 -> _JOIN_7192705;
	ForLoop7187208 [label="ForLoop7187208  for (j=(min(ny-1,jjj+2047))-(((min(ny-1,jjj+2047))-(jjj)+1)%3)+1; j<=min(ny-1,jjj+2047); j=j+1) {...",shape=box];
	ForLoop7187208 -> 7187207;
	ForLoop7187208 -> _JOIN_7187208;
	7260891 [label="7260891  double scv_9, scv_10, scv_11, scv_12, scv_13, scv_14, scv_15, scv_16;...",shape=box];
	7262793 [label="7262793  double scv_38, scv_39, scv_40, scv_41, scv_42, scv_43, scv_44, scv_45;...",shape=box];
	_JOIN_7193183 [label="_JOIN_7193183None...",shape=box];
	_JOIN_7193183 -> 7193215;
	7189358 [label="7189358  scv_30=scv_30+A[(i+11)*ny+j]*x_copy[(j-jjj)];...",shape=box];
	7189358 -> _JOIN_7189359;
	_JOIN_7187606 [label="_JOIN_7187606None...",shape=box];
	_JOIN_7187606 -> ForLoop7187686;
	ForLoop7204540 [label="ForLoop7204540  for (ii=iii; ii<=min(nx-1,iii+384); ii=ii+128) {...",shape=box];
	ForLoop7204540 -> 7186237;
	ForLoop7204540 -> _JOIN_7204540;
	_JOIN_7191430 [label="_JOIN_7191430None...",shape=box];
	_JOIN_7191430 -> ForLoop7191510;
	_JOIN_7193422 [label="_JOIN_7193422None...",shape=box];
	_JOIN_7193422 -> _JOIN_7193425;
	ForLoop7188642 [label="ForLoop7188642  for (j=(min(ny-1,jjj+2047))-(((min(ny-1,jjj+2047))-(jjj)+1)%3)+1; j<=min(ny-1,jjj+2047); j=j+1) {...",shape=box];
	ForLoop7188642 -> 7188641;
	ForLoop7188642 -> _JOIN_7188642;
	ForLoop7187128 [label="ForLoop7187128  for (j=jjj; j<=min(ny-1,jjj+2047)-2; j=j+3) {...",shape=box];
	ForLoop7187128 -> 7187054;
	ForLoop7187128 -> _JOIN_7187128;
	7190400 [label="7190400  scv_29=scv_29+A[(i+16)*ny+j]*x_copy[(j-jjj)];...",shape=box];
	7187957 [label="7187957  for (j=jjj; j<=min(ny-1,jjj+2047); j=j+1) ...",shape=box];
	7191270 [label="7191270  scv_13=scv_13+A[(i+19)*ny+j]*x_copy[(j-jjj)];...",shape=box];
	7191270 -> _JOIN_7191271;
	ForLoop7188164 [label="ForLoop7188164  for (j=(min(ny-1,jjj+2047))-(((min(ny-1,jjj+2047))-(jjj)+1)%3)+1; j<=min(ny-1,jjj+2047); j=j+1) {...",shape=box];
	ForLoop7188164 -> 7188163;
	ForLoop7188164 -> _JOIN_7188164;
	_JOIN_7192944 [label="_JOIN_7192944None...",shape=box];
	_JOIN_7192944 -> 7192976;
	7187240 [label="7187240  for (j=jjj; j<=min(ny-1,jjj+2047); j=j+1) ...",shape=box];
	7190792 [label="7190792  scv_37=scv_37+A[(i+17)*ny+j]*x_copy[(j-jjj)];...",shape=box];
	7190792 -> _JOIN_7190793;
	_JOIN_7191191 [label="_JOIN_7191191None...",shape=box];
	_JOIN_7191191 -> ForLoop7191271;
	7193029 [label="7193029  scv_15=scv_15+A[(i+27)*ny+j]*x_copy[(j-jjj)];...",shape=box];
	_JOIN_7191032 [label="_JOIN_7191032None...",shape=box];
	_JOIN_7191032 -> 7191064;
	7191748 [label="7191748  scv_12=scv_12+A[(i+21)*ny+j]*x_copy[(j-jjj)];...",shape=box];
	7191748 -> _JOIN_7191749;
	ForLoop7190474 [label="ForLoop7190474  for (j=jjj; j<=min(ny-1,jjj+2047)-2; j=j+3) {...",shape=box];
	ForLoop7190474 -> 7190400;
	ForLoop7190474 -> _JOIN_7190474;
	_JOIN_7191669 [label="_JOIN_7191669None...",shape=box];
	_JOIN_7191669 -> ForLoop7191749;
	_JOIN_7204073 [label="_JOIN_7204073None...",shape=box];
	_JOIN_7204073 -> ForLoop7204144;
	ForLoop7188881 [label="ForLoop7188881  for (j=(min(ny-1,jjj+2047))-(((min(ny-1,jjj+2047))-(jjj)+1)%3)+1; j<=min(ny-1,jjj+2047); j=j+1) {...",shape=box];
	ForLoop7188881 -> 7188880;
	ForLoop7188881 -> _JOIN_7188881;
	_JOIN_7191988 [label="_JOIN_7191988None...",shape=box];
	_JOIN_7191988 -> 7192020;
	ForLoop7193342 [label="ForLoop7193342  for (j=jjj; j<=min(ny-1,jjj+2047)-2; j=j+3) {...",shape=box];
	ForLoop7193342 -> 7193268;
	ForLoop7193342 -> _JOIN_7193342;
	7192259 [label="7192259  for (j=jjj; j<=min(ny-1,jjj+2047); j=j+1) ...",shape=box];
	7190586 [label="7190586  for (j=jjj; j<=min(ny-1,jjj+2047); j=j+1) ...",shape=box];
	7186559 [label="7186559  for (j=jjj; j<=min(ny-1,jjj+2047); j=j+1) ...",shape=box];
	_JOIN_7077184 [label="_JOIN_7077184None...",shape=box];
	_JOIN_7077184 -> 7077528;
	7186729 [label="7186729  scv_17=scv_17+A[i*ny+j]*x_copy[(j-jjj)];...",shape=box];
	7186729 -> _JOIN_7186730;
	_JOIN_7204541 [label="_JOIN_7204541None...",shape=box];
	7189205 [label="7189205  scv_30=scv_30+A[(i+11)*ny+j]*x_copy[(j-jjj)];...",shape=box];
	ForLoop7192944 [label="ForLoop7192944  for (j=(min(ny-1,jjj+2047))-(((min(ny-1,jjj+2047))-(jjj)+1)%3)+1; j<=min(ny-1,jjj+2047); j=j+1) {...",shape=box];
	ForLoop7192944 -> 7192943;
	ForLoop7192944 -> _JOIN_7192944;
	7187771 [label="7187771  scv_20=scv_20+A[(i+5)*ny+j]*x_copy[(j-jjj)];...",shape=box];
	ForLoop7204144 [label="ForLoop7204144  for (j=(min(ny-1,jjj+2047))-(((min(ny-1,jjj+2047))-(jjj)+1)%3)+1; j<=min(ny-1,jjj+2047); j=j+1) {...",shape=box];
	ForLoop7204144 -> 7204143;
	ForLoop7204144 -> _JOIN_7204144;
	_JOIN_7189996 [label="_JOIN_7189996None...",shape=box];
	_JOIN_7189996 -> ForLoop7190076;
	ForLoop7191271 [label="ForLoop7191271  for (j=(min(ny-1,jjj+2047))-(((min(ny-1,jjj+2047))-(jjj)+1)%3)+1; j<=min(ny-1,jjj+2047); j=j+1) {...",shape=box];
	ForLoop7191271 -> 7191270;
	ForLoop7191271 -> _JOIN_7191271;
	_JOIN_7187367 [label="_JOIN_7187367None...",shape=box];
	_JOIN_7187367 -> ForLoop7187447;
	7230596 [label="7230596  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	ForLoop7204538 [label="ForLoop7204538  for (i=(min(nx-1,ii+127))-(((min(nx-1,ii+127))-(ii)+1)%29)+1; i<=min(nx-1,ii+127); i=i+1) {...",shape=box];
	ForLoop7204538 -> 7264604;
	ForLoop7204538 -> _JOIN_7204538;
	7189836 [label="7189836  scv_11=scv_11+A[(i+13)*ny+j]*x_copy[(j-jjj)];...",shape=box];
	7189836 -> _JOIN_7189837;
	_JOIN_7187208 [label="_JOIN_7187208None...",shape=box];
	_JOIN_7187208 -> 7187240;
	ForLoop7188562 [label="ForLoop7188562  for (j=jjj; j<=min(ny-1,jjj+2047)-2; j=j+3) {...",shape=box];
	ForLoop7188562 -> 7188488;
	ForLoop7188562 -> _JOIN_7188562;
	7191031 [label="7191031  scv_14=scv_14+A[(i+18)*ny+j]*x_copy[(j-jjj)];...",shape=box];
	7191031 -> _JOIN_7191032;
	7260909 [label="7260909  tmp[(i+20)]=scv_9;...",shape=box];
	ForLoop7189279 [label="ForLoop7189279  for (j=jjj; j<=min(ny-1,jjj+2047)-2; j=j+3) {...",shape=box];
	ForLoop7189279 -> 7189205;
	ForLoop7189279 -> _JOIN_7189279;
	ForLoop7188403 [label="ForLoop7188403  for (j=(min(ny-1,jjj+2047))-(((min(ny-1,jjj+2047))-(jjj)+1)%3)+1; j<=min(ny-1,jjj+2047); j=j+1) {...",shape=box];
	ForLoop7188403 -> 7188402;
	ForLoop7188403 -> _JOIN_7188403;
	7192551 [label="7192551  scv_27=scv_27+A[(i+25)*ny+j]*x_copy[(j-jjj)];...",shape=box];
	7187001 [label="7187001  for (j=jjj; j<=min(ny-1,jjj+2047); j=j+1) ...",shape=box];
	ForLoop7077184 [label="ForLoop7077184  for (i=0; i<=cbv_1; i=i+26) {...",shape=box];
	ForLoop7077184 -> 7076957;
	ForLoop7077184 -> _JOIN_7077184;
	_JOIN_7188164 [label="_JOIN_7188164None...",shape=box];
	_JOIN_7188164 -> 7188196;
	7192498 [label="7192498  for (j=jjj; j<=min(ny-1,jjj+2047); j=j+1) ...",shape=box];
	7204533 [label="7204533  for (k=kk; k<=min(ny-1,kk+511); k=k+1) ...",shape=box];
	7204533 -> _JOIN_7204535;
	_JOIN_7191271 [label="_JOIN_7191271None...",shape=box];
	_JOIN_7191271 -> 7191303;
	_JOIN_7204540 [label="_JOIN_7204540None...",shape=box];
	_JOIN_7204540 -> _JOIN_7204541;
	_JOIN_7193342 [label="_JOIN_7193342None...",shape=box];
	_JOIN_7193342 -> ForLoop7193422;
	7189922 [label="7189922  scv_24=scv_24+A[(i+14)*ny+j]*x_copy[(j-jjj)];...",shape=box];
	7188249 [label="7188249  scv_18=scv_18+A[(i+7)*ny+j]*x_copy[(j-jjj)];...",shape=box];
	ForLoop7190793 [label="ForLoop7190793  for (j=(min(ny-1,jjj+2047))-(((min(ny-1,jjj+2047))-(jjj)+1)%3)+1; j<=min(ny-1,jjj+2047); j=j+1) {...",shape=box];
	ForLoop7190793 -> 7190792;
	ForLoop7190793 -> _JOIN_7190793;
	_JOIN_7203876 [label="_JOIN_7203876None...",shape=box];
	_JOIN_7203876 -> ForLoop7204538;
	ForLoop7193103 [label="ForLoop7193103  for (j=jjj; j<=min(ny-1,jjj+2047)-2; j=j+3) {...",shape=box];
	ForLoop7193103 -> 7193029;
	ForLoop7193103 -> _JOIN_7193103;
	_JOIN_7203874 [label="_JOIN_7203874None...",shape=box];
	_JOIN_7203874 -> 7260909;
	_JOIN_7189120 [label="_JOIN_7189120None...",shape=box];
	_JOIN_7189120 -> 7189152;
	_JOIN_7186889 [label="_JOIN_7186889None...",shape=box];
	_JOIN_7186889 -> ForLoop7186969;
	_JOIN_7189598 [label="_JOIN_7189598None...",shape=box];
	_JOIN_7189598 -> 7189630;
	ForLoop7189518 [label="ForLoop7189518  for (j=jjj; j<=min(ny-1,jjj+2047)-2; j=j+3) {...",shape=box];
	ForLoop7189518 -> 7189444;
	ForLoop7189518 -> _JOIN_7189518;
	_JOIN_7189757 [label="_JOIN_7189757None...",shape=box];
	_JOIN_7189757 -> ForLoop7189837;
	_JOIN_7192625 [label="_JOIN_7192625None...",shape=box];
	_JOIN_7192625 -> ForLoop7192705;
	7187479 [label="7187479  for (j=jjj; j<=min(ny-1,jjj+2047); j=j+1) ...",shape=box];
	_JOIN_7186659 [label="_JOIN_7186659None...",shape=box];
	_JOIN_7186659 -> ForLoop7186730;
	_JOIN_7186969 [label="_JOIN_7186969None...",shape=box];
	_JOIN_7186969 -> 7187001;
	ForLoop7190713 [label="ForLoop7190713  for (j=jjj; j<=min(ny-1,jjj+2047)-2; j=j+3) {...",shape=box];
	ForLoop7190713 -> 7190639;
	ForLoop7190713 -> _JOIN_7190713;
	ForLoop7193183 [label="ForLoop7193183  for (j=(min(ny-1,jjj+2047))-(((min(ny-1,jjj+2047))-(jjj)+1)%3)+1; j<=min(ny-1,jjj+2047); j=j+1) {...",shape=box];
	ForLoop7193183 -> 7193182;
	ForLoop7193183 -> _JOIN_7193183;
	_JOIN_7191908 [label="_JOIN_7191908None...",shape=box];
	_JOIN_7191908 -> ForLoop7191988;
	_JOIN_7192705 [label="_JOIN_7192705None...",shape=box];
	_JOIN_7192705 -> 7192737;
	7188163 [label="7188163  scv_19=scv_19+A[(i+6)*ny+j]*x_copy[(j-jjj)];...",shape=box];
	7188163 -> _JOIN_7188164;
	7191509 [label="7191509  scv_9=scv_9+A[(i+20)*ny+j]*x_copy[(j-jjj)];...",shape=box];
	7191509 -> _JOIN_7191510;
	7186815 [label="7186815  scv_34=scv_34+A[(i+1)*ny+j]*x_copy[(j-jjj)];...",shape=box];
	ForLoop7189040 [label="ForLoop7189040  for (j=jjj; j<=min(ny-1,jjj+2047)-2; j=j+3) {...",shape=box];
	ForLoop7189040 -> 7188966;
	ForLoop7189040 -> _JOIN_7189040;
	_JOIN_7189359 [label="_JOIN_7189359None...",shape=box];
	_JOIN_7189359 -> 7189391;
	ForLoop7188801 [label="ForLoop7188801  for (j=jjj; j<=min(ny-1,jjj+2047)-2; j=j+3) {...",shape=box];
	ForLoop7188801 -> 7188727;
	ForLoop7188801 -> _JOIN_7188801;
	_JOIN_7192227 [label="_JOIN_7192227None...",shape=box];
	_JOIN_7192227 -> 7192259;
	_JOIN_7204147 [label="_JOIN_7204147None...",shape=box];
	_JOIN_7204147 -> ForLoop7204536;
	_JOIN_7191510 [label="_JOIN_7191510None...",shape=box];
	_JOIN_7191510 -> 7191542;
	ForLoop7204535 [label="ForLoop7204535  for (kk=kkk; kk<=min(ny-1,kkk+1536); kk=kk+512) {...",shape=box];
	ForLoop7204535 -> 7204209;
	ForLoop7204535 -> _JOIN_7204535;
	ForLoop7189598 [label="ForLoop7189598  for (j=(min(ny-1,jjj+2047))-(((min(ny-1,jjj+2047))-(jjj)+1)%3)+1; j<=min(ny-1,jjj+2047); j=j+1) {...",shape=box];
	ForLoop7189598 -> 7189597;
	ForLoop7189598 -> _JOIN_7189598;
	7191356 [label="7191356  scv_9=scv_9+A[(i+20)*ny+j]*x_copy[(j-jjj)];...",shape=box];
	_JOIN_7203872 [label="_JOIN_7203872None...",shape=box];
	_JOIN_7203872 -> _JOIN_7203874;
	_JOIN_7187845 [label="_JOIN_7187845None...",shape=box];
	_JOIN_7187845 -> ForLoop7187925;
	ForLoop7190554 [label="ForLoop7190554  for (j=(min(ny-1,jjj+2047))-(((min(ny-1,jjj+2047))-(jjj)+1)%3)+1; j<=min(ny-1,jjj+2047); j=j+1) {...",shape=box];
	ForLoop7190554 -> 7190553;
	ForLoop7190554 -> _JOIN_7190554;
	ForLoop7192625 [label="ForLoop7192625  for (j=jjj; j<=min(ny-1,jjj+2047)-2; j=j+3) {...",shape=box];
	ForLoop7192625 -> 7192551;
	ForLoop7192625 -> _JOIN_7192625;
	7192020 [label="7192020  for (j=jjj; j<=min(ny-1,jjj+2047); j=j+1) ...",shape=box];
	_JOIN_7189518 [label="_JOIN_7189518None...",shape=box];
	_JOIN_7189518 -> ForLoop7189598;
	_JOIN_7188403 [label="_JOIN_7188403None...",shape=box];
	_JOIN_7188403 -> 7188435;
	ForLoop7186889 [label="ForLoop7186889  for (j=jjj; j<=min(ny-1,jjj+2047)-2; j=j+3) {...",shape=box];
	ForLoop7186889 -> 7186815;
	ForLoop7186889 -> _JOIN_7186889;
	7192312 [label="7192312  scv_28=scv_28+A[(i+24)*ny+j]*x_copy[(j-jjj)];...",shape=box];
	_JOIN_7190474 [label="_JOIN_7190474None...",shape=box];
	_JOIN_7190474 -> ForLoop7190554;
	ForLoop7204536 [label="ForLoop7204536  for (kkk=0; kkk<=ny-1; kkk=kkk+2048) {...",shape=box];
	ForLoop7204536 -> ForLoop7204535;
	ForLoop7204536 -> _JOIN_7204536;
	_JOIN_7192147 [label="_JOIN_7192147None...",shape=box];
	_JOIN_7192147 -> ForLoop7192227;
	ForLoop7190952 [label="ForLoop7190952  for (j=jjj; j<=min(ny-1,jjj+2047)-2; j=j+3) {...",shape=box];
	ForLoop7190952 -> 7190878;
	ForLoop7190952 -> _JOIN_7190952;
	ForLoop7191191 [label="ForLoop7191191  for (j=jjj; j<=min(ny-1,jjj+2047)-2; j=j+3) {...",shape=box];
	ForLoop7191191 -> 7191117;
	ForLoop7191191 -> _JOIN_7191191;
	ForLoop7189996 [label="ForLoop7189996  for (j=jjj; j<=min(ny-1,jjj+2047)-2; j=j+3) {...",shape=box];
	ForLoop7189996 -> 7189922;
	ForLoop7189996 -> _JOIN_7189996;
	7193215 [label="7193215  for (j=jjj; j<=min(ny-1,jjj+2047); j=j+1) ...",shape=box];
	ForLoop7077253 [label="ForLoop7077253  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop7077253 -> 7077252;
	ForLoop7077253 -> _JOIN_7077253;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 7076525;
	7076525 [label="7076525  int i;...",shape=box];
	7192465 [label="7192465  scv_28=scv_28+A[(i+24)*ny+j]*x_copy[(j-jjj)];...",shape=box];
	7192465 -> _JOIN_7192466;
	7191987 [label="7191987  scv_36=scv_36+A[(i+22)*ny+j]*x_copy[(j-jjj)];...",shape=box];
	7191987 -> _JOIN_7191988;
	7189597 [label="7189597  scv_10=scv_10+A[(i+12)*ny+j]*x_copy[(j-jjj)];...",shape=box];
	7189597 -> _JOIN_7189598;
	7203002 [label="7203002  for (k=kk; k<=min(ny-1,kk+511); k=k+1) ...",shape=box];
	7188010 [label="7188010  scv_19=scv_19+A[(i+6)*ny+j]*x_copy[(j-jjj)];...",shape=box];
	7192737 [label="7192737  for (j=jjj; j<=min(ny-1,jjj+2047); j=j+1) ...",shape=box];
	_JOIN_7191749 [label="_JOIN_7191749None...",shape=box];
	_JOIN_7191749 -> 7191781;
	ForLoop7189359 [label="ForLoop7189359  for (j=(min(ny-1,jjj+2047))-(((min(ny-1,jjj+2047))-(jjj)+1)%3)+1; j<=min(ny-1,jjj+2047); j=j+1) {...",shape=box];
	ForLoop7189359 -> 7189358;
	ForLoop7189359 -> _JOIN_7189359;
	7188913 [label="7188913  for (j=jjj; j<=min(ny-1,jjj+2047); j=j+1) ...",shape=box];
	ForLoop7192227 [label="ForLoop7192227  for (j=(min(ny-1,jjj+2047))-(((min(ny-1,jjj+2047))-(jjj)+1)%3)+1; j<=min(ny-1,jjj+2047); j=j+1) {...",shape=box];
	ForLoop7192227 -> 7192226;
	ForLoop7192227 -> _JOIN_7192227;
	7077528 [label="7077528  register int cbv_2, cbv_3;...",shape=box];
	_JOIN_7189837 [label="_JOIN_7189837None...",shape=box];
	_JOIN_7189837 -> 7189869;
	_JOIN_7192386 [label="_JOIN_7192386None...",shape=box];
	_JOIN_7192386 -> ForLoop7192466;
	ForLoop7190315 [label="ForLoop7190315  for (j=(min(ny-1,jjj+2047))-(((min(ny-1,jjj+2047))-(jjj)+1)%3)+1; j<=min(ny-1,jjj+2047); j=j+1) {...",shape=box];
	ForLoop7190315 -> 7190314;
	ForLoop7190315 -> _JOIN_7190315;
	ForLoop7190235 [label="ForLoop7190235  for (j=jjj; j<=min(ny-1,jjj+2047)-2; j=j+3) {...",shape=box];
	ForLoop7190235 -> 7190161;
	ForLoop7190235 -> _JOIN_7190235;
	7189391 [label="7189391  for (j=jjj; j<=min(ny-1,jjj+2047); j=j+1) ...",shape=box];
	7192226 [label="7192226  scv_35=scv_35+A[(i+23)*ny+j]*x_copy[(j-jjj)];...",shape=box];
	7192226 -> _JOIN_7192227;
	_JOIN_7188642 [label="_JOIN_7188642None...",shape=box];
	_JOIN_7188642 -> 7188674;
	7189152 [label="7189152  for (j=jjj; j<=min(ny-1,jjj+2047); j=j+1) ...",shape=box];
	7187924 [label="7187924  scv_20=scv_20+A[(i+5)*ny+j]*x_copy[(j-jjj)];...",shape=box];
	7187924 -> _JOIN_7187925;
	7187054 [label="7187054  scv_21=scv_21+A[(i+2)*ny+j]*x_copy[(j-jjj)];...",shape=box];
	7193268 [label="7193268  scv_25=scv_25+A[(i+28)*ny+j]*x_copy[(j-jjj)];...",shape=box];
	ForLoop7187367 [label="ForLoop7187367  for (j=jjj; j<=min(ny-1,jjj+2047)-2; j=j+3) {...",shape=box];
	ForLoop7187367 -> 7187293;
	ForLoop7187367 -> _JOIN_7187367;
	_JOIN_7186730 [label="_JOIN_7186730None...",shape=box];
	_JOIN_7186730 -> 7186762;
	ForLoop7203876 [label="ForLoop7203876  for (i=ii; i<=min(nx-1,ii+127)-28; i=i+29) {...",shape=box];
	ForLoop7203876 -> 7260891;
	ForLoop7203876 -> _JOIN_7203876;
	ForLoop7203874 [label="ForLoop7203874  for (kkk=0; kkk<=ny-1; kkk=kkk+2048) {...",shape=box];
	ForLoop7203874 -> ForLoop7203872;
	ForLoop7203874 -> _JOIN_7203874;
	ForLoop7203872 [label="ForLoop7203872  for (kk=kkk; kk<=min(ny-1,kkk+1536); kk=kk+512) {...",shape=box];
	ForLoop7203872 -> 7193487;
	ForLoop7203872 -> _JOIN_7203872;
	_JOIN_7188323 [label="_JOIN_7188323None...",shape=box];
	_JOIN_7188323 -> ForLoop7188403;
	7186204 [label="7186204  double x_copy[2048];...",shape=box];
	7204017 [label="7204017  scv_46=scv_46+A[i*ny+j]*x_copy[(j-jjj)];...",shape=box];
	7193182 [label="7193182  scv_15=scv_15+A[(i+27)*ny+j]*x_copy[(j-jjj)];...",shape=box];
	7193182 -> _JOIN_7193183;
	_JOIN_7204535 [label="_JOIN_7204535None...",shape=box];
	_JOIN_7204535 -> _JOIN_7204536;
	7187293 [label="7187293  scv_16=scv_16+A[(i+3)*ny+j]*x_copy[(j-jjj)];...",shape=box];
	ForLoop7188323 [label="ForLoop7188323  for (j=jjj; j<=min(ny-1,jjj+2047)-2; j=j+3) {...",shape=box];
	ForLoop7188323 -> 7188249;
	ForLoop7188323 -> _JOIN_7188323;
	_JOIN_7188801 [label="_JOIN_7188801None...",shape=box];
	_JOIN_7188801 -> ForLoop7188881;
	7188674 [label="7188674  for (j=jjj; j<=min(ny-1,jjj+2047); j=j+1) ...",shape=box];
	7191834 [label="7191834  scv_36=scv_36+A[(i+22)*ny+j]*x_copy[(j-jjj)];...",shape=box];
	_JOIN_7202971 [label="_JOIN_7202971None...",shape=box];
	_JOIN_7202971 -> 7203002;
	_JOIN_7204538 [label="_JOIN_7204538None...",shape=box];
	_JOIN_7204538 -> _JOIN_7204540;
	7190878 [label="7190878  scv_14=scv_14+A[(i+18)*ny+j]*x_copy[(j-jjj)];...",shape=box];
	7203973 [label="7203973  for (j=jjj; j<=min(ny-1,jjj+2047); j=j+1) ...",shape=box];
	ForLoop7186659 [label="ForLoop7186659  for (j=jjj; j<=min(ny-1,jjj+2047)-2; j=j+3) {...",shape=box];
	ForLoop7186659 -> 7186603;
	ForLoop7186659 -> _JOIN_7186659;
	_JOIN_7189040 [label="_JOIN_7189040None...",shape=box];
	_JOIN_7189040 -> ForLoop7189120;
	7189683 [label="7189683  scv_11=scv_11+A[(i+13)*ny+j]*x_copy[(j-jjj)];...",shape=box];
	_JOIN_7188881 [label="_JOIN_7188881None...",shape=box];
	_JOIN_7188881 -> 7188913;
	7187446 [label="7187446  scv_16=scv_16+A[(i+3)*ny+j]*x_copy[(j-jjj)];...",shape=box];
	7187446 -> _JOIN_7187447;
	7186762 [label="7186762  for (j=jjj; j<=min(ny-1,jjj+2047); j=j+1) ...",shape=box];
	ForLoop7189837 [label="ForLoop7189837  for (j=(min(ny-1,jjj+2047))-(((min(ny-1,jjj+2047))-(jjj)+1)%3)+1; j<=min(ny-1,jjj+2047); j=j+1) {...",shape=box];
	ForLoop7189837 -> 7189836;
	ForLoop7189837 -> _JOIN_7189837;
	7188880 [label="7188880  scv_32=scv_32+A[(i+9)*ny+j]*x_copy[(j-jjj)];...",shape=box];
	7188880 -> _JOIN_7188881;
	ForLoop7187845 [label="ForLoop7187845  for (j=jjj; j<=min(ny-1,jjj+2047)-2; j=j+3) {...",shape=box];
	ForLoop7187845 -> 7187771;
	ForLoop7187845 -> _JOIN_7187845;
	ForLoop7187925 [label="ForLoop7187925  for (j=(min(ny-1,jjj+2047))-(((min(ny-1,jjj+2047))-(jjj)+1)%3)+1; j<=min(ny-1,jjj+2047); j=j+1) {...",shape=box];
	ForLoop7187925 -> 7187924;
	ForLoop7187925 -> _JOIN_7187925;
	7204143 [label="7204143  scv_46=scv_46+A[i*ny+j]*x_copy[(j-jjj)];...",shape=box];
	7204143 -> _JOIN_7204144;
	ForLoop7191510 [label="ForLoop7191510  for (j=(min(ny-1,jjj+2047))-(((min(ny-1,jjj+2047))-(jjj)+1)%3)+1; j<=min(ny-1,jjj+2047); j=j+1) {...",shape=box];
	ForLoop7191510 -> 7191509;
	ForLoop7191510 -> _JOIN_7191510;
	_JOIN_7187925 [label="_JOIN_7187925None...",shape=box];
	_JOIN_7187925 -> 7187957;
	ForLoop7187686 [label="ForLoop7187686  for (j=(min(ny-1,jjj+2047))-(((min(ny-1,jjj+2047))-(jjj)+1)%3)+1; j<=min(ny-1,jjj+2047); j=j+1) {...",shape=box];
	ForLoop7187686 -> 7187685;
	ForLoop7187686 -> _JOIN_7187686;
	ForLoop7202971 [label="ForLoop7202971  for (kt=kk; kt<=min(ny-1,kk+511)-7; kt=kt+8) {...",shape=box];
	ForLoop7202971 -> 7230596;
	ForLoop7202971 -> _JOIN_7202971;
	ForLoop7191430 [label="ForLoop7191430  for (j=jjj; j<=min(ny-1,jjj+2047)-2; j=j+3) {...",shape=box];
	ForLoop7191430 -> 7191356;
	ForLoop7191430 -> _JOIN_7191430;
	7187207 [label="7187207  scv_21=scv_21+A[(i+2)*ny+j]*x_copy[(j-jjj)];...",shape=box];
	7187207 -> _JOIN_7187208;
	7186603 [label="7186603  scv_17=scv_17+A[i*ny+j]*x_copy[(j-jjj)];...",shape=box];
	_JOIN_7187128 [label="_JOIN_7187128None...",shape=box];
	_JOIN_7187128 -> ForLoop7187208;
	7186968 [label="7186968  scv_34=scv_34+A[(i+1)*ny+j]*x_copy[(j-jjj)];...",shape=box];
	7186968 -> _JOIN_7186969;
	7188641 [label="7188641  scv_33=scv_33+A[(i+8)*ny+j]*x_copy[(j-jjj)];...",shape=box];
	7188641 -> _JOIN_7188642;
	7192790 [label="7192790  scv_22=scv_22+A[(i+26)*ny+j]*x_copy[(j-jjj)];...",shape=box];
	7077252 [label="7077252  y[i]=0.0;...",shape=box];
	7077252 -> _JOIN_7077253;
	ForLoop7187606 [label="ForLoop7187606  for (j=jjj; j<=min(ny-1,jjj+2047)-2; j=j+3) {...",shape=box];
	ForLoop7187606 -> 7187532;
	ForLoop7187606 -> _JOIN_7187606;
	_JOIN_7190076 [label="_JOIN_7190076None...",shape=box];
	_JOIN_7190076 -> 7190108;
	_JOIN_7188084 [label="_JOIN_7188084None...",shape=box];
	_JOIN_7188084 -> ForLoop7188164;
	7187685 [label="7187685  scv_31=scv_31+A[(i+4)*ny+j]*x_copy[(j-jjj)];...",shape=box];
	7187685 -> _JOIN_7187686;
	ForLoop7189120 [label="ForLoop7189120  for (j=(min(ny-1,jjj+2047))-(((min(ny-1,jjj+2047))-(jjj)+1)%3)+1; j<=min(ny-1,jjj+2047); j=j+1) {...",shape=box];
	ForLoop7189120 -> 7189119;
	ForLoop7189120 -> _JOIN_7189120;
	ForLoop7204073 [label="ForLoop7204073  fexpected=9369846271501.798828
actual=9369846271501.798828
or (j=jjj; j<=min(ny-1,jjj+2047)-2; j=j+3) {...",shape=box];
	ForLoop7204073 -> 7204017;
	ForLoop7204073 -> _JOIN_7204073;
	ForLoop7204541 [label="ForLoop7204541  for (iii=0; iii<=nx-1; iii=iii+512) {...",shape=box];
	ForLoop7204541 -> ForLoop7204540;
	ForLoop7204541 -> _JOIN_7204541;
	7188488 [label="7188488  scv_33=scv_33+A[(i+8)*ny+j]*x_copy[(j-jjj)];...",shape=box];
	7190161 [label="7190161  scv_26=scv_26+A[(i+15)*ny+j]*x_copy[(j-jjj)];...",shape=box];
	7193421 [label="7193421  scv_25=scv_25+A[(i+28)*ny+j]*x_copy[(j-jjj)];...",shape=box];
	7193421 -> _JOIN_7193422;
	ForLoop7192864 [label="ForLoop7192864  for (j=jjj; j<=min(ny-1,jjj+2047)-2; j=j+3) {...",shape=box];
	ForLoop7192864 -> 7192790;
	ForLoop7192864 -> _JOIN_7192864;
	ForLoop7204502 [label="ForLoop7204502  for (kt=kk; kt<=min(ny-1,kk+511)-7; kt=kt+8) {...",shape=box];
	ForLoop7204502 -> 7262793;
	ForLoop7204502 -> _JOIN_7204502;
	7190825 [label="7190825  for (j=jjj; j<=min(ny-1,jjj+2047); j=j+1) ...",shape=box];
	_JOIN_7204502 [label="_JOIN_7204502None...",shape=box];
	_JOIN_7204502 -> 7204533;
	7187532 [label="7187532  scv_31=scv_31+A[(i+4)*ny+j]*x_copy[(j-jjj)];...",shape=box];
	7191064 [label="7191064  for (j=jjj; j<=min(ny-1,jjj+2047); j=j+1) ...",shape=box];
	_JOIN_7190793 [label="_JOIN_7190793None...",shape=box];
	_JOIN_7190793 -> 7190825;
	7192073 [label="7192073  scv_35=scv_35+A[(i+23)*ny+j]*x_copy[(j-jjj)];...",shape=box];
	ForLoop7192466 [label="ForLoop7192466  for (j=(min(ny-1,jjj+2047))-(((min(ny-1,jjj+2047))-(jjj)+1)%3)+1; j<=min(ny-1,jjj+2047); j=j+1) {...",shape=box];
	ForLoop7192466 -> 7192465;
	ForLoop7192466 -> _JOIN_7192466;
	7264616 [label="7264616  tmp[i]=scv_46;...",shape=box];
	7264616 -> _JOIN_7204538;
	_JOIN_7190315 [label="_JOIN_7190315None...",shape=box];
	_JOIN_7190315 -> 7190347;
	7190314 [label="7190314  scv_26=scv_26+A[(i+15)*ny+j]*x_copy[(j-jjj)];...",shape=box];
	7190314 -> _JOIN_7190315;
	7192976 [label="7192976  for (j=jjj; j<=min(ny-1,jjj+2047); j=j+1) ...",shape=box];
	ForLoop7193425 [label="ForLoop7193425  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop7193425 -> 7186559;
	ForLoop7193425 -> _JOIN_7193425;
	7188727 [label="7188727  scv_32=scv_32+A[(i+9)*ny+j]*x_copy[(j-jjj)];...",shape=box];
	7191781 [label="7191781  for (j=jjj; j<=min(ny-1,jjj+2047); j=j+1) ...",shape=box];
	_JOIN_7077253 [label="_JOIN_7077253None...",shape=box];
	_JOIN_7077253 -> 7186204;
	_JOIN_7190952 [label="_JOIN_7190952None...",shape=box];
	_JOIN_7190952 -> ForLoop7191032;
	ForLoop7193422 [label="ForLoop7193422  for (j=(min(ny-1,jjj+2047))-(((min(ny-1,jjj+2047))-(jjj)+1)%3)+1; j<=min(ny-1,jjj+2047); j=j+1) {...",shape=box];
	ForLoop7193422 -> 7193421;
	ForLoop7193422 -> _JOIN_7193422;
	_JOIN_7204536 [label="_JOIN_7204536None...",shape=box];
	_JOIN_7204536 -> 7264616;
	7188435 [label="7188435  for (j=jjj; j<=min(ny-1,jjj+2047); j=j+1) ...",shape=box];
	7076957 [label="7076957  y[i]=0.0;...",shape=box];
	ForLoop7191032 [label="ForLoop7191032  for (j=(min(ny-1,jjj+2047))-(((min(ny-1,jjj+2047))-(jjj)+1)%3)+1; j<=min(ny-1,jjj+2047); j=j+1) {...",shape=box];
	ForLoop7191032 -> 7191031;
	ForLoop7191032 -> _JOIN_7191032;
	7189869 [label="7189869  for (j=jjj; j<=min(ny-1,jjj+2047); j=j+1) ...",shape=box];
	_JOIN_7192466 [label="_JOIN_7192466None...",shape=box];
	_JOIN_7192466 -> 7192498;
	7188966 [label="7188966  scv_23=scv_23+A[(i+10)*ny+j]*x_copy[(j-jjj)];...",shape=box];
	ForLoop7189757 [label="ForLoop7189757  for (j=jjj; j<=min(ny-1,jjj+2047)-2; j=j+3) {...",shape=box];
	ForLoop7189757 -> 7189683;
	ForLoop7189757 -> _JOIN_7189757;
	_JOIN_7190554 [label="_JOIN_7190554None...",shape=box];
	_JOIN_7190554 -> 7190586;
	7190347 [label="7190347  for (j=jjj; j<=min(ny-1,jjj+2047); j=j+1) ...",shape=box];
	7191542 [label="7191542  for (j=jjj; j<=min(ny-1,jjj+2047); j=j+1) ...",shape=box];
	_JOIN_7204144 [label="_JOIN_7204144None...",shape=box];
	_JOIN_7204144 -> _JOIN_7204147;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest40.exe __orio_perftest40.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest40.exe  
{'[4, 0, 6, 4, 6, 6, 1, 1, 25, 28, 2, 0, 0, 0, 1, 1, 1, 0]' : 0.192369}
{'[4, 0, 6, 4, 6, 6, 1, 1, 25, 28, 2, 0, 0, 0, 1, 1, 1, 0]' : 0.191292}
{'[4, 0, 6, 4, 6, 6, 1, 1, 25, 28, 2, 0, 0, 0, 1, 1, 1, 0]' : 0.191334}
{'[4, 0, 6, 4, 6, 6, 1, 1, 25, 28, 2, 0, 0, 0, 1, 1, 1, 0]' : 0.19119}
{'[4, 0, 6, 4, 6, 6, 1, 1, 25, 28, 2, 0, 0, 0, 1, 1, 1, 0]' : 0.191278}
{'[4, 0, 6, 4, 6, 6, 1, 1, 25, 28, 2, 0, 0, 0, 1, 1, 1, 0]' : 0.191235}
{'[4, 0, 6, 4, 6, 6, 1, 1, 25, 28, 2, 0, 0, 0, 1, 1, 1, 0]' : 0.191222}
{'[4, 0, 6, 4, 6, 6, 1, 1, 25, 28, 2, 0, 0, 0, 1, 1, 1, 0]' : 0.195559}
{'[4, 0, 6, 4, 6, 6, 1, 1, 25, 28, 2, 0, 0, 0, 1, 1, 1, 0]' : 0.191366}
{'[4, 0, 6, 4, 6, 6, 1, 1, 25, 28, 2, 0, 0, 0, 1, 1, 1, 0]' : 0.191196}
{'[4, 0, 6, 4, 6, 6, 1, 1, 25, 28, 2, 0, 0, 0, 1, 1, 1, 0]' : 0.191172}
{'[4, 0, 6, 4, 6, 6, 1, 1, 25, 28, 2, 0, 0, 0, 1, 1, 1, 0]' : 0.191469}
{'[4, 0, 6, 4, 6, 6, 1, 1, 25, 28, 2, 0, 0, 0, 1, 1, 1, 0]' : 0.191287}
{'[4, 0, 6, 4, 6, 6, 1, 1, 25, 28, 2, 0, 0, 0, 1, 1, 1, 0]' : 0.191183}
{'[4, 0, 6, 4, 6, 6, 1, 1, 25, 28, 2, 0, 0, 0, 1, 1, 1, 0]' : 0.191424}
{'[4, 0, 6, 4, 6, 6, 1, 1, 25, 28, 2, 0, 0, 0, 1, 1, 1, 0]' : 0.195537}
{'[4, 0, 6, 4, 6, 6, 1, 1, 25, 28, 2, 0, 0, 0, 1, 1, 1, 0]' : 0.191372}
{'[4, 0, 6, 4, 6, 6, 1, 1, 25, 28, 2, 0, 0, 0, 1, 1, 1, 0]' : 0.191517}
{'[4, 0, 6, 4, 6, 6, 1, 1, 25, 28, 2, 0, 0, 0, 1, 1, 1, 0]' : 0.19133}
{'[4, 0, 6, 4, 6, 6, 1, 1, 25, 28, 2, 0, 0, 0, 1, 1, 1, 0]' : 0.191341}
{'[4, 0, 6, 4, 6, 6, 1, 1, 25, 28, 2, 0, 0, 0, 1, 1, 1, 0]' : 0.191357}
{'[4, 0, 6, 4, 6, 6, 1, 1, 25, 28, 2, 0, 0, 0, 1, 1, 1, 0]' : 0.191198}
{'[4, 0, 6, 4, 6, 6, 1, 1, 25, 28, 2, 0, 0, 0, 1, 1, 1, 0]' : 0.191127}
{'[4, 0, 6, 4, 6, 6, 1, 1, 25, 28, 2, 0, 0, 0, 1, 1, 1, 0]' : 0.191619}
{'[4, 0, 6, 4, 6, 6, 1, 1, 25, 28, 2, 0, 0, 0, 1, 1, 1, 0]' : 0.191229}
{'[4, 0, 6, 4, 6, 6, 1, 1, 25, 28, 2, 0, 0, 0, 1, 1, 1, 0]' : 0.191083}
{'[4, 0, 6, 4, 6, 6, 1, 1, 25, 28, 2, 0, 0, 0, 1, 1, 1, 0]' : 0.191284}
{'[4, 0, 6, 4, 6, 6, 1, 1, 25, 28, 2, 0, 0, 0, 1, 1, 1, 0]' : 0.19118}
{'[4, 0, 6, 4, 6, 6, 1, 1, 25, 28, 2, 0, 0, 0, 1, 1, 1, 0]' : 0.191148}
{'[4, 0, 6, 4, 6, 6, 1, 1, 25, 28, 2, 0, 0, 0, 1, 1, 1, 0]' : 0.191166}

out:
 ["{'[4, 0, 6, 4, 6, 6, 1, 1, 25, 28, 2, 0, 0, 0, 1, 1, 1, 0]' : 0.192369}", "{'[4, 0, 6, 4, 6, 6, 1, 1, 25, 28, 2, 0, 0, 0, 1, 1, 1, 0]' : 0.191292}", "{'[4, 0, 6, 4, 6, 6, 1, 1, 25, 28, 2, 0, 0, 0, 1, 1, 1, 0]' : 0.191334}", "{'[4, 0, 6, 4, 6, 6, 1, 1, 25, 28, 2, 0, 0, 0, 1, 1, 1, 0]' : 0.19119}", "{'[4, 0, 6, 4, 6, 6, 1, 1, 25, 28, 2, 0, 0, 0, 1, 1, 1, 0]' : 0.191278}", "{'[4, 0, 6, 4, 6, 6, 1, 1, 25, 28, 2, 0, 0, 0, 1, 1, 1, 0]' : 0.191235}", "{'[4, 0, 6, 4, 6, 6, 1, 1, 25, 28, 2, 0, 0, 0, 1, 1, 1, 0]' : 0.191222}", "{'[4, 0, 6, 4, 6, 6, 1, 1, 25, 28, 2, 0, 0, 0, 1, 1, 1, 0]' : 0.195559}", "{'[4, 0, 6, 4, 6, 6, 1, 1, 25, 28, 2, 0, 0, 0, 1, 1, 1, 0]' : 0.191366}", "{'[4, 0, 6, 4, 6, 6, 1, 1, 25, 28, 2, 0, 0, 0, 1, 1, 1, 0]' : 0.191196}", "{'[4, 0, 6, 4, 6, 6, 1, 1, 25, 28, 2, 0, 0, 0, 1, 1, 1, 0]' : 0.191172}", "{'[4, 0, 6, 4, 6, 6, 1, 1, 25, 28, 2, 0, 0, 0, 1, 1, 1, 0]' : 0.191469}", "{'[4, 0, 6, 4, 6, 6, 1, 1, 25, 28, 2, 0, 0, 0, 1, 1, 1, 0]' : 0.191287}", "{'[4, 0, 6, 4, 6, 6, 1, 1, 25, 28, 2, 0, 0, 0, 1, 1, 1, 0]' : 0.191183}", "{'[4, 0, 6, 4, 6, 6, 1, 1, 25, 28, 2, 0, 0, 0, 1, 1, 1, 0]' : 0.191424}", "{'[4, 0, 6, 4, 6, 6, 1, 1, 25, 28, 2, 0, 0, 0, 1, 1, 1, 0]' : 0.195537}", "{'[4, 0, 6, 4, 6, 6, 1, 1, 25, 28, 2, 0, 0, 0, 1, 1, 1, 0]' : 0.191372}", "{'[4, 0, 6, 4, 6, 6, 1, 1, 25, 28, 2, 0, 0, 0, 1, 1, 1, 0]' : 0.191517}", "{'[4, 0, 6, 4, 6, 6, 1, 1, 25, 28, 2, 0, 0, 0, 1, 1, 1, 0]' : 0.19133}", "{'[4, 0, 6, 4, 6, 6, 1, 1, 25, 28, 2, 0, 0, 0, 1, 1, 1, 0]' : 0.191341}", "{'[4, 0, 6, 4, 6, 6, 1, 1, 25, 28, 2, 0, 0, 0, 1, 1, 1, 0]' : 0.191357}", "{'[4, 0, 6, 4, 6, 6, 1, 1, 25, 28, 2, 0, 0, 0, 1, 1, 1, 0]' : 0.191198}", "{'[4, 0, 6, 4, 6, 6, 1, 1, 25, 28, 2, 0, 0, 0, 1, 1, 1, 0]' : 0.191127}", "{'[4, 0, 6, 4, 6, 6, 1, 1, 25, 28, 2, 0, 0, 0, 1, 1, 1, 0]' : 0.191619}", "{'[4, 0, 6, 4, 6, 6, 1, 1, 25, 28, 2, 0, 0, 0, 1, 1, 1, 0]' : 0.191229}", "{'[4, 0, 6, 4, 6, 6, 1, 1, 25, 28, 2, 0, 0, 0, 1, 1, 1, 0]' : 0.191083}", "{'[4, 0, 6, 4, 6, 6, 1, 1, 25, 28, 2, 0, 0, 0, 1, 1, 1, 0]' : 0.191284}", "{'[4, 0, 6, 4, 6, 6, 1, 1, 25, 28, 2, 0, 0, 0, 1, 1, 1, 0]' : 0.19118}", "{'[4, 0, 6, 4, 6, 6, 1, 1, 25, 28, 2, 0, 0, 0, 1, 1, 1, 0]' : 0.191148}", "{'[4, 0, 6, 4, 6, 6, 1, 1, 25, 28, 2, 0, 0, 0, 1, 1, 1, 0]' : 0.191166}"]
returning from 'run': {'[4, 0, 6, 4, 6, 6, 1, 1, 25, 28, 2, 0, 0, 0, 1, 1, 1, 0]': ([0.192369, 0.191292, 0.191334, 0.19119, 0.191278, 0.191235, 0.191222, 0.195559, 0.191366, 0.191196, 0.191172, 0.191469, 0.191287, 0.191183, 0.191424, 0.195537, 0.191372, 0.191517, 0.19133, 0.191341, 0.191357, 0.191198, 0.191127, 0.191619, 0.191229, 0.191083, 0.191284, 0.19118, 0.191148, 0.191166], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.192369, 0.191292, 0.191334, 0.19119, 0.191278, 0.191235, 0.191222, 0.195559, 0.191366, 0.191196, 0.191172, 0.191469, 0.191287, 0.191183, 0.191424, 0.195537, 0.191372, 0.191517, 0.19133, 0.191341, 0.191357, 0.191198, 0.191127, 0.191619, 0.191229, 0.191083, 0.191284, 0.19118, 0.191148, 0.191166], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[4, 0, 6, 4, 6, 6, 1, 1, 25, 28, 2, 0, 0, 0, 1, 1, 1, 0]': ([0.192369, 0.191292, 0.191334, 0.19119, 0.191278, 0.191235, 0.191222, 0.195559, 0.191366, 0.191196, 0.191172, 0.191469, 0.191287, 0.191183, 0.191424, 0.195537, 0.191372, 0.191517, 0.19133, 0.191341, 0.191357, 0.191198, 0.191127, 0.191619, 0.191229, 0.191083, 0.191284, 0.19118, 0.191148, 0.191166], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [0, 2, 5, 0, 3, 0, 0, 1, 0, 10, 22, 0, 2, 0, 0, 0]
Fixed Factors: {'U1_I': 25, 'SCR': 1}
Testing candidate 4: [0, 2, 5, 0, 3, 0, 0, 1, 25, 0, 10, 22, 0, 2, 0, 1, 0, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		417
        Multiplications: 	136
        Divisions: 		0
        Logical: 		0
        Reads: 			874
        Writes: 		174
        Comparisons:		13
        Gotos: 			0
        
digraph CFG {
	7292202 [label="7292202  int i;...",shape=box];
	7292202 -> ForLoop7292861;
	_JOIN_7323530 [label="_JOIN_7323530None...",shape=box];
	_JOIN_7323530 -> ForLoop7323604;
	ForLoop7323604 [label="ForLoop7323604  for (k=(min(ny-1,kk+255))-(((min(ny-1,kk+255))-(kk)+1)%23)+1; k<=min(ny-1,kk+255); k=k+1) {...",shape=box];
	ForLoop7323604 -> 7329751;
	ForLoop7323604 -> _JOIN_7323604;
	ForLoop7322661 [label="ForLoop7322661  for (j=jt; j<=min(ny-1,jj+31)-10; j=j+11) {...",shape=box];
	ForLoop7322661 -> 7322409;
	ForLoop7322661 -> _JOIN_7322661;
	_JOIN_7322733 [label="_JOIN_7322733None...",shape=box];
	_JOIN_7322733 -> ForLoop7323638;
	_JOIN_7292930 [label="_JOIN_7292930None...",shape=box];
	_JOIN_7292930 -> 7321469;
	ForLoop7322733 [label="ForLoop7322733  for (jjj=0; jjj<=ny-1; jjj=jjj+256) {...",shape=box];
	ForLoop7322733 -> ForLoop7322732;
	ForLoop7322733 -> _JOIN_7322733;
	ForLoop7322732 [label="ForLoop7322732  for (jj=jjj; jj<=min(ny-1,jjj+224); jj=jj+32) {...",shape=box];
	ForLoop7322732 -> ForLoop7322368;
	ForLoop7322732 -> _JOIN_7322732;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 7292202;
	ForLoop7323640 [label="ForLoop7323640  for (i=0; i<=nx-1; i=i+1) {...",shape=box];
	ForLoop7323640 -> 7333229;
	ForLoop7323640 -> _JOIN_7323640;
	_JOIN_7323604 [label="_JOIN_7323604None...",shape=box];
	_JOIN_7323604 -> 7323636;
	7292634 [label="7292634  y[i]=0.0;...",shape=box];
	7333241 [label="7333241  tmp[i]=scv_25;...",shape=box];
	7333241 -> _JOIN_7323640;
	7333229 [label="7333229  double scv_25;...",shape=box];
	_JOIN_7323640 [label="_JOIN_7323640None...",shape=box];
	7329098 [label="7329098  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	7323636 [label="7323636  expected=9369846271501.798828
actual=9369846271501.798828
for (k=kk; k<=min(ny-1,kk+255); k=k+1) ...",shape=box];
	7323636 -> _JOIN_7323638;
	7322777 [label="7322777  for (k=kk; k<=min(ny-1,kk+255); k=k+1) ...",shape=box];
	ForLoop7322368 [label="ForLoop7322368  for (jt=jj; jt<=min(ny-1,jj+31)-31; jt=jt+32) {...",shape=box];
	ForLoop7322368 -> 7321560;
	ForLoop7322368 -> _JOIN_7322368;
	7329751 [label="7329751  double scv_24;...",shape=box];
	_JOIN_7292861 [label="_JOIN_7292861None...",shape=box];
	_JOIN_7292861 -> ForLoop7292930;
	ForLoop7292861 [label="ForLoop7292861  for (i=0; i<=ny-26; i=i+26) {...",shape=box];
	ForLoop7292861 -> 7292634;
	ForLoop7292861 -> _JOIN_7292861;
	ForLoop7323638 [label="ForLoop7323638  for (kk=0; kk<=ny-1; kk=kk+256) {...",shape=box];
	ForLoop7323638 -> 7322777;
	ForLoop7323638 -> _JOIN_7323638;
	_JOIN_7322732 [label="_JOIN_7322732None...",shape=box];
	_JOIN_7322732 -> _JOIN_7322733;
	_JOIN_7322661 [label="_JOIN_7322661None...",shape=box];
	_JOIN_7322661 -> ForLoop7322729;
	_JOIN_7322729 [label="_JOIN_7322729None...",shape=box];
	_JOIN_7322729 -> _JOIN_7322732;
	_JOIN_7322368 [label="_JOIN_7322368None...",shape=box];
	_JOIN_7322368 -> 7322369;
	7322369 [label="7322369  int j;...",shape=box];
	7322369 -> ForLoop7322661;
	ForLoop7323530 [label="ForLoop7323530  for (k=kk; k<=min(ny-1,kk+255)-22; k=k+23) {...",shape=box];
	ForLoop7323530 -> 7329098;
	ForLoop7323530 -> _JOIN_7323530;
	7292929 [label="7292929  y[i]=0.0;...",shape=box];
	7292929 -> _JOIN_7292930;
	ForLoop7322729 [label="ForLoop7322729  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jt)+1)%11)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop7322729 -> 7322728;
	ForLoop7322729 -> _JOIN_7322729;
	7321560 [label="7321560  scv_25=scv_25+A[i*ny+jt]*x[jt];...",shape=box];
	7322409 [label="7322409  scv_25=scv_25+A[i*ny+j]*x[j];...",shape=box];
	_JOIN_7323638 [label="_JOIN_7323638None...",shape=box];
	_JOIN_7323638 -> 7333241;
	7321469 [label="7321469  double x_copy;...",shape=box];
	7322728 [label="7322728  scv_25=scv_25+A[i*ny+j]*x[j];...",shape=box];
	7322728 -> _JOIN_7322729;
	ForLoop7292930 [label="ForLoop7292930  for (i=ny-((ny-(0))%26); i<=ny-1; i=i+1) ...",shape=box];
	ForLoop7292930 -> 7292929;
	ForLoop7292930 -> _JOIN_7292930;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest41.exe __orio_perftest41.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest41.exe  
{'[0, 2, 5, 0, 3, 0, 0, 1, 25, 0, 10, 22, 0, 2, 0, 1, 0, 0]' : 0.173902}
{'[0, 2, 5, 0, 3, 0, 0, 1, 25, 0, 10, 22, 0, 2, 0, 1, 0, 0]' : 0.173923}
{'[0, 2, 5, 0, 3, 0, 0, 1, 25, 0, 10, 22, 0, 2, 0, 1, 0, 0]' : 0.17395}
{'[0, 2, 5, 0, 3, 0, 0, 1, 25, 0, 10, 22, 0, 2, 0, 1, 0, 0]' : 0.17394}
{'[0, 2, 5, 0, 3, 0, 0, 1, 25, 0, 10, 22, 0, 2, 0, 1, 0, 0]' : 0.173868}
{'[0, 2, 5, 0, 3, 0, 0, 1, 25, 0, 10, 22, 0, 2, 0, 1, 0, 0]' : 0.174062}
{'[0, 2, 5, 0, 3, 0, 0, 1, 25, 0, 10, 22, 0, 2, 0, 1, 0, 0]' : 0.173909}
{'[0, 2, 5, 0, 3, 0, 0, 1, 25, 0, 10, 22, 0, 2, 0, 1, 0, 0]' : 0.173833}
{'[0, 2, 5, 0, 3, 0, 0, 1, 25, 0, 10, 22, 0, 2, 0, 1, 0, 0]' : 0.173902}
{'[0, 2, 5, 0, 3, 0, 0, 1, 25, 0, 10, 22, 0, 2, 0, 1, 0, 0]' : 0.173926}
{'[0, 2, 5, 0, 3, 0, 0, 1, 25, 0, 10, 22, 0, 2, 0, 1, 0, 0]' : 0.174028}
{'[0, 2, 5, 0, 3, 0, 0, 1, 25, 0, 10, 22, 0, 2, 0, 1, 0, 0]' : 0.174044}
{'[0, 2, 5, 0, 3, 0, 0, 1, 25, 0, 10, 22, 0, 2, 0, 1, 0, 0]' : 0.173846}
{'[0, 2, 5, 0, 3, 0, 0, 1, 25, 0, 10, 22, 0, 2, 0, 1, 0, 0]' : 0.173928}
{'[0, 2, 5, 0, 3, 0, 0, 1, 25, 0, 10, 22, 0, 2, 0, 1, 0, 0]' : 0.173973}
{'[0, 2, 5, 0, 3, 0, 0, 1, 25, 0, 10, 22, 0, 2, 0, 1, 0, 0]' : 0.173925}
{'[0, 2, 5, 0, 3, 0, 0, 1, 25, 0, 10, 22, 0, 2, 0, 1, 0, 0]' : 0.173979}
{'[0, 2, 5, 0, 3, 0, 0, 1, 25, 0, 10, 22, 0, 2, 0, 1, 0, 0]' : 0.173959}
{'[0, 2, 5, 0, 3, 0, 0, 1, 25, 0, 10, 22, 0, 2, 0, 1, 0, 0]' : 0.173975}
{'[0, 2, 5, 0, 3, 0, 0, 1, 25, 0, 10, 22, 0, 2, 0, 1, 0, 0]' : 0.174046}
{'[0, 2, 5, 0, 3, 0, 0, 1, 25, 0, 10, 22, 0, 2, 0, 1, 0, 0]' : 0.17398}
{'[0, 2, 5, 0, 3, 0, 0, 1, 25, 0, 10, 22, 0, 2, 0, 1, 0, 0]' : 0.173873}
{'[0, 2, 5, 0, 3, 0, 0, 1, 25, 0, 10, 22, 0, 2, 0, 1, 0, 0]' : 0.17407}
{'[0, 2, 5, 0, 3, 0, 0, 1, 25, 0, 10, 22, 0, 2, 0, 1, 0, 0]' : 0.173774}
{'[0, 2, 5, 0, 3, 0, 0, 1, 25, 0, 10, 22, 0, 2, 0, 1, 0, 0]' : 0.173902}
{'[0, 2, 5, 0, 3, 0, 0, 1, 25, 0, 10, 22, 0, 2, 0, 1, 0, 0]' : 0.173877}
{'[0, 2, 5, 0, 3, 0, 0, 1, 25, 0, 10, 22, 0, 2, 0, 1, 0, 0]' : 0.173897}
{'[0, 2, 5, 0, 3, 0, 0, 1, 25, 0, 10, 22, 0, 2, 0, 1, 0, 0]' : 0.173861}
{'[0, 2, 5, 0, 3, 0, 0, 1, 25, 0, 10, 22, 0, 2, 0, 1, 0, 0]' : 0.174064}
{'[0, 2, 5, 0, 3, 0, 0, 1, 25, 0, 10, 22, 0, 2, 0, 1, 0, 0]' : 0.17396}

out:
 ["{'[0, 2, 5, 0, 3, 0, 0, 1, 25, 0, 10, 22, 0, 2, 0, 1, 0, 0]' : 0.173902}", "{'[0, 2, 5, 0, 3, 0, 0, 1, 25, 0, 10, 22, 0, 2, 0, 1, 0, 0]' : 0.173923}", "{'[0, 2, 5, 0, 3, 0, 0, 1, 25, 0, 10, 22, 0, 2, 0, 1, 0, 0]' : 0.17395}", "{'[0, 2, 5, 0, 3, 0, 0, 1, 25, 0, 10, 22, 0, 2, 0, 1, 0, 0]' : 0.17394}", "{'[0, 2, 5, 0, 3, 0, 0, 1, 25, 0, 10, 22, 0, 2, 0, 1, 0, 0]' : 0.173868}", "{'[0, 2, 5, 0, 3, 0, 0, 1, 25, 0, 10, 22, 0, 2, 0, 1, 0, 0]' : 0.174062}", "{'[0, 2, 5, 0, 3, 0, 0, 1, 25, 0, 10, 22, 0, 2, 0, 1, 0, 0]' : 0.173909}", "{'[0, 2, 5, 0, 3, 0, 0, 1, 25, 0, 10, 22, 0, 2, 0, 1, 0, 0]' : 0.173833}", "{'[0, 2, 5, 0, 3, 0, 0, 1, 25, 0, 10, 22, 0, 2, 0, 1, 0, 0]' : 0.173902}", "{'[0, 2, 5, 0, 3, 0, 0, 1, 25, 0, 10, 22, 0, 2, 0, 1, 0, 0]' : 0.173926}", "{'[0, 2, 5, 0, 3, 0, 0, 1, 25, 0, 10, 22, 0, 2, 0, 1, 0, 0]' : 0.174028}", "{'[0, 2, 5, 0, 3, 0, 0, 1, 25, 0, 10, 22, 0, 2, 0, 1, 0, 0]' : 0.174044}", "{'[0, 2, 5, 0, 3, 0, 0, 1, 25, 0, 10, 22, 0, 2, 0, 1, 0, 0]' : 0.173846}", "{'[0, 2, 5, 0, 3, 0, 0, 1, 25, 0, 10, 22, 0, 2, 0, 1, 0, 0]' : 0.173928}", "{'[0, 2, 5, 0, 3, 0, 0, 1, 25, 0, 10, 22, 0, 2, 0, 1, 0, 0]' : 0.173973}", "{'[0, 2, 5, 0, 3, 0, 0, 1, 25, 0, 10, 22, 0, 2, 0, 1, 0, 0]' : 0.173925}", "{'[0, 2, 5, 0, 3, 0, 0, 1, 25, 0, 10, 22, 0, 2, 0, 1, 0, 0]' : 0.173979}", "{'[0, 2, 5, 0, 3, 0, 0, 1, 25, 0, 10, 22, 0, 2, 0, 1, 0, 0]' : 0.173959}", "{'[0, 2, 5, 0, 3, 0, 0, 1, 25, 0, 10, 22, 0, 2, 0, 1, 0, 0]' : 0.173975}", "{'[0, 2, 5, 0, 3, 0, 0, 1, 25, 0, 10, 22, 0, 2, 0, 1, 0, 0]' : 0.174046}", "{'[0, 2, 5, 0, 3, 0, 0, 1, 25, 0, 10, 22, 0, 2, 0, 1, 0, 0]' : 0.17398}", "{'[0, 2, 5, 0, 3, 0, 0, 1, 25, 0, 10, 22, 0, 2, 0, 1, 0, 0]' : 0.173873}", "{'[0, 2, 5, 0, 3, 0, 0, 1, 25, 0, 10, 22, 0, 2, 0, 1, 0, 0]' : 0.17407}", "{'[0, 2, 5, 0, 3, 0, 0, 1, 25, 0, 10, 22, 0, 2, 0, 1, 0, 0]' : 0.173774}", "{'[0, 2, 5, 0, 3, 0, 0, 1, 25, 0, 10, 22, 0, 2, 0, 1, 0, 0]' : 0.173902}", "{'[0, 2, 5, 0, 3, 0, 0, 1, 25, 0, 10, 22, 0, 2, 0, 1, 0, 0]' : 0.173877}", "{'[0, 2, 5, 0, 3, 0, 0, 1, 25, 0, 10, 22, 0, 2, 0, 1, 0, 0]' : 0.173897}", "{'[0, 2, 5, 0, 3, 0, 0, 1, 25, 0, 10, 22, 0, 2, 0, 1, 0, 0]' : 0.173861}", "{'[0, 2, 5, 0, 3, 0, 0, 1, 25, 0, 10, 22, 0, 2, 0, 1, 0, 0]' : 0.174064}", "{'[0, 2, 5, 0, 3, 0, 0, 1, 25, 0, 10, 22, 0, 2, 0, 1, 0, 0]' : 0.17396}"]
returning from 'run': {'[0, 2, 5, 0, 3, 0, 0, 1, 25, 0, 10, 22, 0, 2, 0, 1, 0, 0]': ([0.173902, 0.173923, 0.17395, 0.17394, 0.173868, 0.174062, 0.173909, 0.173833, 0.173902, 0.173926, 0.174028, 0.174044, 0.173846, 0.173928, 0.173973, 0.173925, 0.173979, 0.173959, 0.173975, 0.174046, 0.17398, 0.173873, 0.17407, 0.173774, 0.173902, 0.173877, 0.173897, 0.173861, 0.174064, 0.17396], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.173902, 0.173923, 0.17395, 0.17394, 0.173868, 0.174062, 0.173909, 0.173833, 0.173902, 0.173926, 0.174028, 0.174044, 0.173846, 0.173928, 0.173973, 0.173925, 0.173979, 0.173959, 0.173975, 0.174046, 0.17398, 0.173873, 0.17407, 0.173774, 0.173902, 0.173877, 0.173897, 0.173861, 0.174064, 0.17396], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 5, 0, 3, 0, 0, 1, 25, 0, 10, 22, 0, 2, 0, 1, 0, 0]': ([0.173902, 0.173923, 0.17395, 0.17394, 0.173868, 0.174062, 0.173909, 0.173833, 0.173902, 0.173926, 0.174028, 0.174044, 0.173846, 0.173928, 0.173973, 0.173925, 0.173979, 0.173959, 0.173975, 0.174046, 0.17398, 0.173873, 0.17407, 0.173774, 0.173902, 0.173877, 0.173897, 0.173861, 0.174064, 0.17396], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [0, 0, 3, 4, 3, 2, 0, 1, 0, 8, 0, 0, 0, 0, 0, 0]
Fixed Factors: {'U1_I': 25, 'SCR': 1}
Testing candidate 5: [0, 0, 3, 4, 3, 2, 0, 1, 25, 0, 8, 0, 0, 0, 0, 1, 0, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		111
        Multiplications: 	22
        Divisions: 		0
        Logical: 		0
        Reads: 			246
        Writes: 		69
        Comparisons:		12
        Gotos: 			0
        
digraph CFG {
	7346922 [label="7346922  scv_2=scv_2+A[i*ny+j]*x[j];...",shape=box];
	7346922 -> _JOIN_7346923;
	ForLoop7346925 [label="ForLoop7346925  for (jjj=0; jjj<=ny-1; jjj=jjj+256) {...",shape=box];
	ForLoop7346925 -> 7346613;
	ForLoop7346925 -> _JOIN_7346925;
	ForLoop7346923 [label="ForLoop7346923  for (j=(min(ny-1,jjj+255))-(((min(ny-1,jjj+255))-(jjj)+1)%9)+1; j<=min(ny-1,jjj+255); j=j+1) {...",shape=box];
	ForLoop7346923 -> 7346922;
	ForLoop7346923 -> _JOIN_7346923;
	_JOIN_7346855 [label="_JOIN_7346855None...",shape=box];
	_JOIN_7346855 -> ForLoop7346923;
	7346987 [label="7346987  for (k=kk; k<=min(ny-1,kk+63); k=k+1) ...",shape=box];
	7346987 -> ForLoop7347032;
	_JOIN_7347032 [label="_JOIN_7347032None...",shape=box];
	_JOIN_7347032 -> 7347063;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 7333555;
	7347063 [label="7347063  for (k=kk; k<=min(ny-1,kk+63); k=k+1) ...",shape=box];
	7347063 -> _JOIN_7347065;
	ForLoop7334283 [label="ForLoop7334283  for (i=ny-((ny-(0))%26); i<=ny-1; i=i+1) ...",shape=box];
	ForLoop7334283 -> 7334282;
	ForLoop7334283 -> _JOIN_7334283;
	7346561 [label="7346561  double x_copy;...",shape=box];
	ForLoop7347032 [label="ForLoop7347032  for (k=kk; k<=min(ny-1,kk+63); k=k+1) {...",shape=box];
	ForLoop7347032 -> 7347878;
	ForLoop7347032 -> _JOIN_7347032;
	_JOIN_7346925 [label="_JOIN_7346925None...",shape=box];
	_JOIN_7346925 -> ForLoop7347066;
	_JOIN_7346923 [label="_JOIN_7346923None...",shape=box];
	_JOIN_7346923 -> _JOIN_7346925;
	7348683 [label="7348683  tmp[i]=scv_2;...",shape=box];
	7348683 -> _JOIN_7347068;
	_JOIN_7347068 [label="_JOIN_7347068None...",shape=box];
	_JOIN_7347068 -> _JOIN_7347069;
	_JOIN_7334283 [label="_JOIN_7334283None...",shape=box];
	_JOIN_7334283 -> 7346561;
	_JOIN_7334214 [label="_JOIN_7334214None...",shape=box];
	_JOIN_7334214 -> ForLoop7334283;
	_JOIN_7347066 [label="_JOIN_7347066None...",shape=box];
	_JOIN_7347066 -> 7348683;
	7347878 [label="7347878  double scv_1;...",shape=box];
	ForLoop7346855 [label="ForLoop7346855  for (j=jjj; j<=min(ny-1,jjj+255)-8; j=j+9) {...",shape=box];
	ForLoop7346855 -> 7346653;
	ForLoop7346855 -> _JOIN_7346855;
	_JOIN_7347069 [label="_JOIN_7347069None...",shape=box];
	_JOIN_7347065 [label="_JOIN_7347065None...",shape=box];
	_JOIN_7347065 -> _JOIN_7347066;
	7333987 [label="7333987  y[i]=0.0;...",shape=box];
	7348671 [label="7348671  double scv_2;...",shape=box];
	7333555 [label="7333555  int i;...",shape=box];
	7333555 -> ForLoop7334214;
	7334282 [label="7334282  y[i]=0.0;...",shape=box];
	7334282 -> _JOIN_7334283;
	7346653 [label="7346653  scv_2=scv_2+A[i*ny+j]*x[j];...",shape=box];
	ForLoop7347068 [label="ForLoop7347068  for (i=iii; i<=min(nx-1,iii+511); i=i+1) {...",shape=box];
	ForLoop7347068 -> 7348671;
	ForLoop7347068 -> _JOIN_7347068;
	ForLoop7347069 [label="ForLoop7347069  for (iii=0; iii<=nx-1; iii=iii+512) {...",shape=box];
	ForLoop7347069 -> ForLoop7347068;
	ForLoop7347069 -> _JOIN_7347069;
	ForLoop7347066 [label="ForLoop7347066  for (kkk=0; kkk<=ny-1; kkk=kkk+128) {...",shape=box];
	ForLoop7347066 -> ForLoop7347065;
	ForLoop7347066 -> _JOIN_7347066;
	7346613 [label="7346613  int j;...",shape=box];
	7346613 -> ForLoop7346855;
	ForLoop7347065 [label="ForLoop7347065  for (kk=kkk; kk<=min(ny-1,kkk+64); kk=kk+64) {...",shape=box];
	ForLoop7347065 -> 7346987;
	ForLoop7347065 -> _JOIN_7347065;
	ForLoop7334214 [label="ForLoop7334214  for (i=0; i<=ny-26;expected=9369846271501.798828
actual=9369846271501.798828
 i=i+26) {...",shape=box];
	ForLoop7334214 -> 7333987;
	ForLoop7334214 -> _JOIN_7334214;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest42.exe __orio_perftest42.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest42.exe  
{'[0, 0, 3, 4, 3, 2, 0, 1, 25, 0, 8, 0, 0, 0, 0, 1, 0, 0]' : 0.170725}
{'[0, 0, 3, 4, 3, 2, 0, 1, 25, 0, 8, 0, 0, 0, 0, 1, 0, 0]' : 0.17075}
{'[0, 0, 3, 4, 3, 2, 0, 1, 25, 0, 8, 0, 0, 0, 0, 1, 0, 0]' : 0.174656}
{'[0, 0, 3, 4, 3, 2, 0, 1, 25, 0, 8, 0, 0, 0, 0, 1, 0, 0]' : 0.170595}
{'[0, 0, 3, 4, 3, 2, 0, 1, 25, 0, 8, 0, 0, 0, 0, 1, 0, 0]' : 0.170694}
{'[0, 0, 3, 4, 3, 2, 0, 1, 25, 0, 8, 0, 0, 0, 0, 1, 0, 0]' : 0.170756}
{'[0, 0, 3, 4, 3, 2, 0, 1, 25, 0, 8, 0, 0, 0, 0, 1, 0, 0]' : 0.170613}
{'[0, 0, 3, 4, 3, 2, 0, 1, 25, 0, 8, 0, 0, 0, 0, 1, 0, 0]' : 0.170597}
{'[0, 0, 3, 4, 3, 2, 0, 1, 25, 0, 8, 0, 0, 0, 0, 1, 0, 0]' : 0.170584}
{'[0, 0, 3, 4, 3, 2, 0, 1, 25, 0, 8, 0, 0, 0, 0, 1, 0, 0]' : 0.170571}
{'[0, 0, 3, 4, 3, 2, 0, 1, 25, 0, 8, 0, 0, 0, 0, 1, 0, 0]' : 0.170743}
{'[0, 0, 3, 4, 3, 2, 0, 1, 25, 0, 8, 0, 0, 0, 0, 1, 0, 0]' : 0.171612}
{'[0, 0, 3, 4, 3, 2, 0, 1, 25, 0, 8, 0, 0, 0, 0, 1, 0, 0]' : 0.170669}
{'[0, 0, 3, 4, 3, 2, 0, 1, 25, 0, 8, 0, 0, 0, 0, 1, 0, 0]' : 0.170627}
{'[0, 0, 3, 4, 3, 2, 0, 1, 25, 0, 8, 0, 0, 0, 0, 1, 0, 0]' : 0.170677}
{'[0, 0, 3, 4, 3, 2, 0, 1, 25, 0, 8, 0, 0, 0, 0, 1, 0, 0]' : 0.170605}
{'[0, 0, 3, 4, 3, 2, 0, 1, 25, 0, 8, 0, 0, 0, 0, 1, 0, 0]' : 0.170662}
{'[0, 0, 3, 4, 3, 2, 0, 1, 25, 0, 8, 0, 0, 0, 0, 1, 0, 0]' : 0.170678}
{'[0, 0, 3, 4, 3, 2, 0, 1, 25, 0, 8, 0, 0, 0, 0, 1, 0, 0]' : 0.170802}
{'[0, 0, 3, 4, 3, 2, 0, 1, 25, 0, 8, 0, 0, 0, 0, 1, 0, 0]' : 0.17078}
{'[0, 0, 3, 4, 3, 2, 0, 1, 25, 0, 8, 0, 0, 0, 0, 1, 0, 0]' : 0.17061}
{'[0, 0, 3, 4, 3, 2, 0, 1, 25, 0, 8, 0, 0, 0, 0, 1, 0, 0]' : 0.170602}
{'[0, 0, 3, 4, 3, 2, 0, 1, 25, 0, 8, 0, 0, 0, 0, 1, 0, 0]' : 0.170575}
{'[0, 0, 3, 4, 3, 2, 0, 1, 25, 0, 8, 0, 0, 0, 0, 1, 0, 0]' : 0.171643}
{'[0, 0, 3, 4, 3, 2, 0, 1, 25, 0, 8, 0, 0, 0, 0, 1, 0, 0]' : 0.170623}
{'[0, 0, 3, 4, 3, 2, 0, 1, 25, 0, 8, 0, 0, 0, 0, 1, 0, 0]' : 0.170626}
{'[0, 0, 3, 4, 3, 2, 0, 1, 25, 0, 8, 0, 0, 0, 0, 1, 0, 0]' : 0.170579}
{'[0, 0, 3, 4, 3, 2, 0, 1, 25, 0, 8, 0, 0, 0, 0, 1, 0, 0]' : 0.17058}
{'[0, 0, 3, 4, 3, 2, 0, 1, 25, 0, 8, 0, 0, 0, 0, 1, 0, 0]' : 0.170732}
{'[0, 0, 3, 4, 3, 2, 0, 1, 25, 0, 8, 0, 0, 0, 0, 1, 0, 0]' : 0.17095}

out:
 ["{'[0, 0, 3, 4, 3, 2, 0, 1, 25, 0, 8, 0, 0, 0, 0, 1, 0, 0]' : 0.170725}", "{'[0, 0, 3, 4, 3, 2, 0, 1, 25, 0, 8, 0, 0, 0, 0, 1, 0, 0]' : 0.17075}", "{'[0, 0, 3, 4, 3, 2, 0, 1, 25, 0, 8, 0, 0, 0, 0, 1, 0, 0]' : 0.174656}", "{'[0, 0, 3, 4, 3, 2, 0, 1, 25, 0, 8, 0, 0, 0, 0, 1, 0, 0]' : 0.170595}", "{'[0, 0, 3, 4, 3, 2, 0, 1, 25, 0, 8, 0, 0, 0, 0, 1, 0, 0]' : 0.170694}", "{'[0, 0, 3, 4, 3, 2, 0, 1, 25, 0, 8, 0, 0, 0, 0, 1, 0, 0]' : 0.170756}", "{'[0, 0, 3, 4, 3, 2, 0, 1, 25, 0, 8, 0, 0, 0, 0, 1, 0, 0]' : 0.170613}", "{'[0, 0, 3, 4, 3, 2, 0, 1, 25, 0, 8, 0, 0, 0, 0, 1, 0, 0]' : 0.170597}", "{'[0, 0, 3, 4, 3, 2, 0, 1, 25, 0, 8, 0, 0, 0, 0, 1, 0, 0]' : 0.170584}", "{'[0, 0, 3, 4, 3, 2, 0, 1, 25, 0, 8, 0, 0, 0, 0, 1, 0, 0]' : 0.170571}", "{'[0, 0, 3, 4, 3, 2, 0, 1, 25, 0, 8, 0, 0, 0, 0, 1, 0, 0]' : 0.170743}", "{'[0, 0, 3, 4, 3, 2, 0, 1, 25, 0, 8, 0, 0, 0, 0, 1, 0, 0]' : 0.171612}", "{'[0, 0, 3, 4, 3, 2, 0, 1, 25, 0, 8, 0, 0, 0, 0, 1, 0, 0]' : 0.170669}", "{'[0, 0, 3, 4, 3, 2, 0, 1, 25, 0, 8, 0, 0, 0, 0, 1, 0, 0]' : 0.170627}", "{'[0, 0, 3, 4, 3, 2, 0, 1, 25, 0, 8, 0, 0, 0, 0, 1, 0, 0]' : 0.170677}", "{'[0, 0, 3, 4, 3, 2, 0, 1, 25, 0, 8, 0, 0, 0, 0, 1, 0, 0]' : 0.170605}", "{'[0, 0, 3, 4, 3, 2, 0, 1, 25, 0, 8, 0, 0, 0, 0, 1, 0, 0]' : 0.170662}", "{'[0, 0, 3, 4, 3, 2, 0, 1, 25, 0, 8, 0, 0, 0, 0, 1, 0, 0]' : 0.170678}", "{'[0, 0, 3, 4, 3, 2, 0, 1, 25, 0, 8, 0, 0, 0, 0, 1, 0, 0]' : 0.170802}", "{'[0, 0, 3, 4, 3, 2, 0, 1, 25, 0, 8, 0, 0, 0, 0, 1, 0, 0]' : 0.17078}", "{'[0, 0, 3, 4, 3, 2, 0, 1, 25, 0, 8, 0, 0, 0, 0, 1, 0, 0]' : 0.17061}", "{'[0, 0, 3, 4, 3, 2, 0, 1, 25, 0, 8, 0, 0, 0, 0, 1, 0, 0]' : 0.170602}", "{'[0, 0, 3, 4, 3, 2, 0, 1, 25, 0, 8, 0, 0, 0, 0, 1, 0, 0]' : 0.170575}", "{'[0, 0, 3, 4, 3, 2, 0, 1, 25, 0, 8, 0, 0, 0, 0, 1, 0, 0]' : 0.171643}", "{'[0, 0, 3, 4, 3, 2, 0, 1, 25, 0, 8, 0, 0, 0, 0, 1, 0, 0]' : 0.170623}", "{'[0, 0, 3, 4, 3, 2, 0, 1, 25, 0, 8, 0, 0, 0, 0, 1, 0, 0]' : 0.170626}", "{'[0, 0, 3, 4, 3, 2, 0, 1, 25, 0, 8, 0, 0, 0, 0, 1, 0, 0]' : 0.170579}", "{'[0, 0, 3, 4, 3, 2, 0, 1, 25, 0, 8, 0, 0, 0, 0, 1, 0, 0]' : 0.17058}", "{'[0, 0, 3, 4, 3, 2, 0, 1, 25, 0, 8, 0, 0, 0, 0, 1, 0, 0]' : 0.170732}", "{'[0, 0, 3, 4, 3, 2, 0, 1, 25, 0, 8, 0, 0, 0, 0, 1, 0, 0]' : 0.17095}"]
returning from 'run': {'[0, 0, 3, 4, 3, 2, 0, 1, 25, 0, 8, 0, 0, 0, 0, 1, 0, 0]': ([0.170725, 0.17075, 0.174656, 0.170595, 0.170694, 0.170756, 0.170613, 0.170597, 0.170584, 0.170571, 0.170743, 0.171612, 0.170669, 0.170627, 0.170677, 0.170605, 0.170662, 0.170678, 0.170802, 0.17078, 0.17061, 0.170602, 0.170575, 0.171643, 0.170623, 0.170626, 0.170579, 0.17058, 0.170732, 0.17095], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.170725, 0.17075, 0.174656, 0.170595, 0.170694, 0.170756, 0.170613, 0.170597, 0.170584, 0.170571, 0.170743, 0.171612, 0.170669, 0.170627, 0.170677, 0.170605, 0.170662, 0.170678, 0.170802, 0.17078, 0.17061, 0.170602, 0.170575, 0.171643, 0.170623, 0.170626, 0.170579, 0.17058, 0.170732, 0.17095], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 3, 4, 3, 2, 0, 1, 25, 0, 8, 0, 0, 0, 0, 1, 0, 0]': ([0.170725, 0.17075, 0.174656, 0.170595, 0.170694, 0.170756, 0.170613, 0.170597, 0.170584, 0.170571, 0.170743, 0.171612, 0.170669, 0.170627, 0.170677, 0.170605, 0.170662, 0.170678, 0.170802, 0.17078, 0.17061, 0.170602, 0.170575, 0.171643, 0.170623, 0.170626, 0.170579, 0.17058, 0.170732, 0.17095], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [0, 5, 1, 5, 4, 5, 0, 0, 0, 17, 27, 2, 0, 0, 0, 0]
Fixed Factors: {'U1_I': 25, 'SCR': 1}
Testing candidate 6: [0, 5, 1, 5, 4, 5, 0, 0, 25, 0, 17, 27, 2, 0, 0, 1, 0, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	5
        Additions: 		6437
        Multiplications: 	3168
        Divisions: 		0
        Logical: 		0
        Reads: 			11917
        Writes: 		1856
        Comparisons:		21
        Gotos: 			0
        
digraph CFG {
	7897246 [label="7897246  double scv_48;...",shape=box];
	7993217 [label="7993217  double scv_110;...",shape=box];
	ForLoop7788377 [label="ForLoop7788377  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jj)+1)%18)+1; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop7788377 -> 7788376;
	ForLoop7788377 -> _JOIN_7788377;
	ForLoop7350110 [label="ForLoop7350110  for (i=ny-((ny-(0))%26); i<=ny-1; i=i+1) ...",shape=box];
	ForLoop7350110 -> 7350109;
	ForLoop7350110 -> _JOIN_7350110;
	ForLoop7788379 [label="ForLoop7788379  for (jj=jjj; jj<=min(ny-1,jjj+256); jj=jj+256) {...",shape=box];
	ForLoop7788379 -> 7787842;
	ForLoop7788379 -> _JOIN_7788379;
	7988565 [label="7988565  double scv_81, scv_82, scv_83, scv_84, scv_85, scv_86, scv_87, scv_88;...",shape=box];
	_JOIN_7788377 [label="_JOIN_7788377None...",shape=box];
	_JOIN_7788377 -> _JOIN_7788379;
	ForLoop7350041 [label="ForLoop7350041  for (i=0; i<=ny-26; i=i+26) {...",shape=box];
	ForLoop7350041 -> 7349814;
	ForLoop7350041 -> _JOIN_7350041;
	ForLoop7786906 [label="ForLoop7786906  for (k=kk; k<=min(ny-1,kk+15)-27; k=k+28) {...",shape=box];
	ForLoop7786906 -> 7893737;
	ForLoop7786906 -> _JOIN_7786906;
	_JOIN_7789285 [label="_JOIN_7789285None...",shape=box];
	7788376 [label="7788376  scv_110=scv_110+A[i*ny+j]*x[j];...",shape=box];
	7788376 -> _JOIN_7788377;
	ForLoop7789285 [label="ForLoop7789285  for (iii=0; iii<=nx-1; iii=iii+1024) {...",shape=box];
	ForLoop7789285 -> ForLoop7787786;
	ForLoop7789285 -> _JOIN_7789285;
	_JOIN_7788379 [label="_JOIN_7788379None...",shape=box];
	_JOIN_7788379 -> _JOIN_7788380;
	7349382 [label="7349382  int i;...",shape=box];
	7349382 -> ForLoop7350041;
	ForLoop7789280 [label="ForLoop7789280  for (kk=kkk; kk<=min(ny-1,kkk+1008); kk=kk+16) {...",shape=box];
	ForLoop7789280 -> 7788412;
	ForLoop7789280 -> _JOIN_7789280;
	ForLoop7789281 [label="ForLoop7789281  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop7789281 -> ForLoop7789280;
	ForLoop7789281 -> _JOIN_7789281;
	_JOIN_7755841 [label="_JOIN_7755841None...",shape=box];
	_JOIN_7755841 -> ForLoop7756809;
	ForLoop7789283 [label="ForLoop7789283  for (i=it; i<=min(nx-1,iii+1023); i=i+1) {...",shape=box];
	ForLoop7789283 -> 7993217;
	ForLoop7789283 -> _JOIN_7789283;
	7350109 [label="7350109  y[i]=0.0;...",shape=box];
	7350109 -> _JOIN_7350110;
	7815651 [label="7815651  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	7787882 [label="7787882  scv_110=scv_110+A[i*ny+j]*x[j];...",shape=box];
	ForLoop7755841 [label="ForLoop7755841  for (j=jj; j<=min(ny-1,jj+255)-17; j=j+18) {...",shape=box];
	ForLoop7755841 -> 7815651;
	ForLoop7755841 -> _JOIN_7755841;
	_JOIN_7789280 [label="_JOIN_7789280None...",shape=box];
	_JOIN_7789280 -> _JOIN_7789281;
	7349814 [label="7349814  y[i]=0.0;...",shape=box];
	_JOIN_7756809 [label="_JOIN_7756809None...",shape=box];
	_JOIN_7756809 -> _JOIN_7756811;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 7349382;
	_JOIN_7350110 [label="_JOIN_7350110None...",shape=box];
	_JOIN_7350110 -> 7736485;
	7817687 [label="7817687  double scv_19;...",shape=box];
	ForLoop7756811 [label="ForLoop7756811  for (jj=jjj; jj<=min(ny-1,jjj+256); jj=jj+256) {...",shape=box];
	ForLoop7756811 -> 7736557;
	ForLoop7756811 -> _JOIN_7756811;
	_JOIN_7787786 [label="_JOIN_7787786None...",shape=box];
	_JOIN_7787786 -> ForLoop7789283;
	ForLoop7756812 [label="ForLoop7756812  for (jjj=0; jjj<=ny-1; jjj=jjj+512) {...",shape=box];
	ForLoop7756812 -> ForLoop7756811;
	ForLoop7756812 -> _JOIN_7756812;
	_JOIN_7787783 [label="_JOIN_7787783None...",shape=box];
	_JOIN_7787783 -> _JOIN_7787784;
	_JOIN_7789283 [label="_JOIN_7789283None...",shape=box];
	_JOIN_7789283 -> _JOIN_7789285;
	_JOIN_7787781 [label="_JOIN_7787781None...",shape=box];
	_JOIN_7787781 -> _JOIN_7787783;
	_JOIN_7788309 [label="_JOIN_7788309None...",shape=box];
	_JOIN_7788309 -> ForLoop7788377;
	_JOIN_7786906 [label="_JOIN_7786906None...",shape=box];
	_JOIN_7786906 -> ForLoop7787781;
	7989221 [label="7989221  double scv_109;...",shape=box];
	7756844 [label="7756844  int k;...",shape=box];
	7756844 -> ForLoop7786906;
	ForLoop7789210 [label="ForLoop7789210  for (k=kk; k<=min(ny-1,kk+15)-27; k=k+28) {...",shape=box];
	ForLoop7789210 -> 7988565;
	ForLoop7789210 -> _JOIN_7789210;
	7893737 [label="7893737  double scv_20, scv_21, scv_22, scv_23, scv_24, scv_25, scv_26, scv_27;...",shape=box];
	_JOIN_7350041 [label="_JOIN_7350041None...",shape=box];
	_JOIN_7350041 -> ForLoop7350110;
	7993229 [label="7993229  tmp[i]=scv_110;...",shape=box];
	7993229 -> _JOIN_7789283;
	7982716 [label="7982716  tmp[(it+21)]=scv_49;...",shape=box];
	7736485 [label="7736485  double x_copy;...",shape=box];
	7787842 [label="7787842  int j;...",shape=box];
	7787842 -> ForLoop7788309;
	ForLoop7788309 [label="ForLoop7788309  for (j=jj; j<=min(ny-1,jj+255)-17; j=j+18) {...",shape=box];
	ForLoop7788309 -> 7787882;
	ForLoop7788309 -> _JOIN_7788309;
	7788412 [label="7788412  int k;...",shape=box];
	7788412 -> ForLoop7789210;
	_JOIN_7787784 [label="_JOIN_7787784None...",shape=box];
	_JOIN_7787784 -> 7982716;
	_JOIN_7756811 [label="_JOIN_7756811None...",shape=box];
	_JOIN_7756811 -> _JOIN_7756812;
	_JOIN_7756812 [label="_JOIN_7756812None...",shape=box];
	_JOIN_7756812 -> ForLoop7787784;
	ForLoop7787783 [label="ForLoop7787783  for (kk=kkk; kk<=min(ny-1,kkk+1008); kk=kk+16) {...",shape=box];
	ForLoop7787783 -> 7756844;
	ForLoop7787783 -> _JOIN_7787783;
	ForLoop7787781 [label="ForLoop7787781  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kk)+1)%28)+1; k<=min(ny-1,kk+15); k=k+1) {...",shape=box];
	ForLoop7787781 -> 7897246;
	ForLoop7787781 -> _JOIN_7787781expected=9369846271501.798828
actual=9369846271501.798828
;
	ForLoop7787786 [label="ForLoop7787786  for (it=iii; it<=min(nx-1,iii+1023)-31; it=it+32) {...",shape=box];
	ForLoop7787786 -> 7982698;
	ForLoop7787786 -> _JOIN_7787786;
	ForLoop7788380 [label="ForLoop7788380  for (jjj=0; jjj<=ny-1; jjj=jjj+512) {...",shape=box];
	ForLoop7788380 -> ForLoop7788379;
	ForLoop7788380 -> _JOIN_7788380;
	ForLoop7787784 [label="ForLoop7787784  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop7787784 -> ForLoop7787783;
	ForLoop7787784 -> _JOIN_7787784;
	7982698 [label="7982698  double scv_49, scv_50, scv_51, scv_52, scv_53, scv_54, scv_55, scv_56;...",shape=box];
	ForLoop7756809 [label="ForLoop7756809  for (j=(min(ny-1,jj+255))-(((min(ny-1,jj+255))-(jj)+1)%18)+1; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop7756809 -> 7817687;
	ForLoop7756809 -> _JOIN_7756809;
	ForLoop7789278 [label="ForLoop7789278  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kk)+1)%28)+1; k<=min(ny-1,kk+15); k=k+1) {...",shape=box];
	ForLoop7789278 -> 7989221;
	ForLoop7789278 -> _JOIN_7789278;
	_JOIN_7789278 [label="_JOIN_7789278None...",shape=box];
	_JOIN_7789278 -> _JOIN_7789280;
	_JOIN_7789210 [label="_JOIN_7789210None...",shape=box];
	_JOIN_7789210 -> ForLoop7789278;
	_JOIN_7789281 [label="_JOIN_7789281None...",shape=box];
	_JOIN_7789281 -> 7993229;
	7736557 [label="7736557  int j;...",shape=box];
	7736557 -> ForLoop7755841;
	_JOIN_7788380 [label="_JOIN_7788380None...",shape=box];
	_JOIN_7788380 -> ForLoop7789281;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest43.exe __orio_perftest43.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest43.exe  
{'[0, 5, 1, 5, 4, 5, 0, 0, 25, 0, 17, 27, 2, 0, 0, 1, 0, 0]' : 0.255477}
{'[0, 5, 1, 5, 4, 5, 0, 0, 25, 0, 17, 27, 2, 0, 0, 1, 0, 0]' : 0.255036}
{'[0, 5, 1, 5, 4, 5, 0, 0, 25, 0, 17, 27, 2, 0, 0, 1, 0, 0]' : 0.255247}
{'[0, 5, 1, 5, 4, 5, 0, 0, 25, 0, 17, 27, 2, 0, 0, 1, 0, 0]' : 0.255411}
{'[0, 5, 1, 5, 4, 5, 0, 0, 25, 0, 17, 27, 2, 0, 0, 1, 0, 0]' : 0.255065}
{'[0, 5, 1, 5, 4, 5, 0, 0, 25, 0, 17, 27, 2, 0, 0, 1, 0, 0]' : 0.255121}
{'[0, 5, 1, 5, 4, 5, 0, 0, 25, 0, 17, 27, 2, 0, 0, 1, 0, 0]' : 0.255073}
{'[0, 5, 1, 5, 4, 5, 0, 0, 25, 0, 17, 27, 2, 0, 0, 1, 0, 0]' : 0.256108}
{'[0, 5, 1, 5, 4, 5, 0, 0, 25, 0, 17, 27, 2, 0, 0, 1, 0, 0]' : 0.255504}
{'[0, 5, 1, 5, 4, 5, 0, 0, 25, 0, 17, 27, 2, 0, 0, 1, 0, 0]' : 0.254956}
{'[0, 5, 1, 5, 4, 5, 0, 0, 25, 0, 17, 27, 2, 0, 0, 1, 0, 0]' : 0.255032}
{'[0, 5, 1, 5, 4, 5, 0, 0, 25, 0, 17, 27, 2, 0, 0, 1, 0, 0]' : 0.255073}
{'[0, 5, 1, 5, 4, 5, 0, 0, 25, 0, 17, 27, 2, 0, 0, 1, 0, 0]' : 0.255047}
{'[0, 5, 1, 5, 4, 5, 0, 0, 25, 0, 17, 27, 2, 0, 0, 1, 0, 0]' : 0.254959}
{'[0, 5, 1, 5, 4, 5, 0, 0, 25, 0, 17, 27, 2, 0, 0, 1, 0, 0]' : 0.256467}
{'[0, 5, 1, 5, 4, 5, 0, 0, 25, 0, 17, 27, 2, 0, 0, 1, 0, 0]' : 0.255262}
{'[0, 5, 1, 5, 4, 5, 0, 0, 25, 0, 17, 27, 2, 0, 0, 1, 0, 0]' : 0.254994}
{'[0, 5, 1, 5, 4, 5, 0, 0, 25, 0, 17, 27, 2, 0, 0, 1, 0, 0]' : 0.255193}
{'[0, 5, 1, 5, 4, 5, 0, 0, 25, 0, 17, 27, 2, 0, 0, 1, 0, 0]' : 0.255107}
{'[0, 5, 1, 5, 4, 5, 0, 0, 25, 0, 17, 27, 2, 0, 0, 1, 0, 0]' : 0.254992}
{'[0, 5, 1, 5, 4, 5, 0, 0, 25, 0, 17, 27, 2, 0, 0, 1, 0, 0]' : 0.255192}
{'[0, 5, 1, 5, 4, 5, 0, 0, 25, 0, 17, 27, 2, 0, 0, 1, 0, 0]' : 0.255232}
{'[0, 5, 1, 5, 4, 5, 0, 0, 25, 0, 17, 27, 2, 0, 0, 1, 0, 0]' : 0.256101}
{'[0, 5, 1, 5, 4, 5, 0, 0, 25, 0, 17, 27, 2, 0, 0, 1, 0, 0]' : 0.255183}
{'[0, 5, 1, 5, 4, 5, 0, 0, 25, 0, 17, 27, 2, 0, 0, 1, 0, 0]' : 0.255103}
{'[0, 5, 1, 5, 4, 5, 0, 0, 25, 0, 17, 27, 2, 0, 0, 1, 0, 0]' : 0.254975}
{'[0, 5, 1, 5, 4, 5, 0, 0, 25, 0, 17, 27, 2, 0, 0, 1, 0, 0]' : 0.255244}
{'[0, 5, 1, 5, 4, 5, 0, 0, 25, 0, 17, 27, 2, 0, 0, 1, 0, 0]' : 0.255065}
{'[0, 5, 1, 5, 4, 5, 0, 0, 25, 0, 17, 27, 2, 0, 0, 1, 0, 0]' : 0.255127}
{'[0, 5, 1, 5, 4, 5, 0, 0, 25, 0, 17, 27, 2, 0, 0, 1, 0, 0]' : 0.25496}

out:
 ["{'[0, 5, 1, 5, 4, 5, 0, 0, 25, 0, 17, 27, 2, 0, 0, 1, 0, 0]' : 0.255477}", "{'[0, 5, 1, 5, 4, 5, 0, 0, 25, 0, 17, 27, 2, 0, 0, 1, 0, 0]' : 0.255036}", "{'[0, 5, 1, 5, 4, 5, 0, 0, 25, 0, 17, 27, 2, 0, 0, 1, 0, 0]' : 0.255247}", "{'[0, 5, 1, 5, 4, 5, 0, 0, 25, 0, 17, 27, 2, 0, 0, 1, 0, 0]' : 0.255411}", "{'[0, 5, 1, 5, 4, 5, 0, 0, 25, 0, 17, 27, 2, 0, 0, 1, 0, 0]' : 0.255065}", "{'[0, 5, 1, 5, 4, 5, 0, 0, 25, 0, 17, 27, 2, 0, 0, 1, 0, 0]' : 0.255121}", "{'[0, 5, 1, 5, 4, 5, 0, 0, 25, 0, 17, 27, 2, 0, 0, 1, 0, 0]' : 0.255073}", "{'[0, 5, 1, 5, 4, 5, 0, 0, 25, 0, 17, 27, 2, 0, 0, 1, 0, 0]' : 0.256108}", "{'[0, 5, 1, 5, 4, 5, 0, 0, 25, 0, 17, 27, 2, 0, 0, 1, 0, 0]' : 0.255504}", "{'[0, 5, 1, 5, 4, 5, 0, 0, 25, 0, 17, 27, 2, 0, 0, 1, 0, 0]' : 0.254956}", "{'[0, 5, 1, 5, 4, 5, 0, 0, 25, 0, 17, 27, 2, 0, 0, 1, 0, 0]' : 0.255032}", "{'[0, 5, 1, 5, 4, 5, 0, 0, 25, 0, 17, 27, 2, 0, 0, 1, 0, 0]' : 0.255073}", "{'[0, 5, 1, 5, 4, 5, 0, 0, 25, 0, 17, 27, 2, 0, 0, 1, 0, 0]' : 0.255047}", "{'[0, 5, 1, 5, 4, 5, 0, 0, 25, 0, 17, 27, 2, 0, 0, 1, 0, 0]' : 0.254959}", "{'[0, 5, 1, 5, 4, 5, 0, 0, 25, 0, 17, 27, 2, 0, 0, 1, 0, 0]' : 0.256467}", "{'[0, 5, 1, 5, 4, 5, 0, 0, 25, 0, 17, 27, 2, 0, 0, 1, 0, 0]' : 0.255262}", "{'[0, 5, 1, 5, 4, 5, 0, 0, 25, 0, 17, 27, 2, 0, 0, 1, 0, 0]' : 0.254994}", "{'[0, 5, 1, 5, 4, 5, 0, 0, 25, 0, 17, 27, 2, 0, 0, 1, 0, 0]' : 0.255193}", "{'[0, 5, 1, 5, 4, 5, 0, 0, 25, 0, 17, 27, 2, 0, 0, 1, 0, 0]' : 0.255107}", "{'[0, 5, 1, 5, 4, 5, 0, 0, 25, 0, 17, 27, 2, 0, 0, 1, 0, 0]' : 0.254992}", "{'[0, 5, 1, 5, 4, 5, 0, 0, 25, 0, 17, 27, 2, 0, 0, 1, 0, 0]' : 0.255192}", "{'[0, 5, 1, 5, 4, 5, 0, 0, 25, 0, 17, 27, 2, 0, 0, 1, 0, 0]' : 0.255232}", "{'[0, 5, 1, 5, 4, 5, 0, 0, 25, 0, 17, 27, 2, 0, 0, 1, 0, 0]' : 0.256101}", "{'[0, 5, 1, 5, 4, 5, 0, 0, 25, 0, 17, 27, 2, 0, 0, 1, 0, 0]' : 0.255183}", "{'[0, 5, 1, 5, 4, 5, 0, 0, 25, 0, 17, 27, 2, 0, 0, 1, 0, 0]' : 0.255103}", "{'[0, 5, 1, 5, 4, 5, 0, 0, 25, 0, 17, 27, 2, 0, 0, 1, 0, 0]' : 0.254975}", "{'[0, 5, 1, 5, 4, 5, 0, 0, 25, 0, 17, 27, 2, 0, 0, 1, 0, 0]' : 0.255244}", "{'[0, 5, 1, 5, 4, 5, 0, 0, 25, 0, 17, 27, 2, 0, 0, 1, 0, 0]' : 0.255065}", "{'[0, 5, 1, 5, 4, 5, 0, 0, 25, 0, 17, 27, 2, 0, 0, 1, 0, 0]' : 0.255127}", "{'[0, 5, 1, 5, 4, 5, 0, 0, 25, 0, 17, 27, 2, 0, 0, 1, 0, 0]' : 0.25496}"]
returning from 'run': {'[0, 5, 1, 5, 4, 5, 0, 0, 25, 0, 17, 27, 2, 0, 0, 1, 0, 0]': ([0.255477, 0.255036, 0.255247, 0.255411, 0.255065, 0.255121, 0.255073, 0.256108, 0.255504, 0.254956, 0.255032, 0.255073, 0.255047, 0.254959, 0.256467, 0.255262, 0.254994, 0.255193, 0.255107, 0.254992, 0.255192, 0.255232, 0.256101, 0.255183, 0.255103, 0.254975, 0.255244, 0.255065, 0.255127, 0.25496], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.255477, 0.255036, 0.255247, 0.255411, 0.255065, 0.255121, 0.255073, 0.256108, 0.255504, 0.254956, 0.255032, 0.255073, 0.255047, 0.254959, 0.256467, 0.255262, 0.254994, 0.255193, 0.255107, 0.254992, 0.255192, 0.255232, 0.256101, 0.255183, 0.255103, 0.254975, 0.255244, 0.255065, 0.255127, 0.25496], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[0, 5, 1, 5, 4, 5, 0, 0, 25, 0, 17, 27, 2, 0, 0, 1, 0, 0]': ([0.255477, 0.255036, 0.255247, 0.255411, 0.255065, 0.255121, 0.255073, 0.256108, 0.255504, 0.254956, 0.255032, 0.255073, 0.255047, 0.254959, 0.256467, 0.255262, 0.254994, 0.255193, 0.255107, 0.254992, 0.255192, 0.255232, 0.256101, 0.255183, 0.255103, 0.254975, 0.255244, 0.255065, 0.255127, 0.25496], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [5, 5, 2, 0, 5, 4, 1, 1, 21, 27, 0, 0, 0, 2, 1, 1]
Fixed Factors: {'U1_I': 25, 'SCR': 1}
Testing candidate 7: [5, 5, 2, 0, 5, 4, 1, 1, 25, 21, 27, 0, 0, 0, 2, 1, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	130
        Max loop nest depth: 	5
        Additions: 		7725
        Multiplications: 	2806
        Divisions: 		0
        Logical: 		0
        Reads: 			13369
        Writes: 		2030
        Comparisons:		130
        Gotos: 			0
        
digraph CFG {
	ForLoop8295659 [label="ForLoop8295659  for (j=jj; j<=cbv_58; j=j+28) {...",shape=box];
	ForLoop8295659 -> 8294685;
	ForLoop8295659 -> _JOIN_8295659;
	_JOIN_8288905 [label="_JOIN_8288905None...",shape=box];
	_JOIN_8288905 -> 8288937;
	8546185 [label="8546185  tmp[i]=scv_87;...",shape=box];
	8546185 -> _JOIN_8328069;
	8294685 [label="8294685  scv_37=scv_37+A[(i+19)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_8291183 [label="_JOIN_8291183None...",shape=box];
	_JOIN_8291183 -> 8291215;
	8295738 [label="8295738  scv_37=scv_37+A[(i+19)*ny+j]*x_copy[(j-jj)];...",shape=box];
	8295738 -> _JOIN_8295739;
	ForLoop8281991 [label="ForLoop8281991  for (j=jj; j<=cbv_22; j=j+28) {...",shape=box];
	ForLoop8281991 -> 8281017;
	ForLoop8281991 -> _JOIN_8281991;
	ForLoop8283130 [label="ForLoop8283130  for (j=jj; j<=cbv_25; j=j+28) {...",shape=box];
	ForLoop8283130 -> 8282156;
	ForLoop8283130 -> _JOIN_8283130;
	_JOIN_8296798 [label="_JOIN_8296798None...",shape=box];
	_JOIN_8296798 -> 8601263;
	ForLoop8326838 [label="ForLoop8326838  for (jjj=0; jjj<=ny-1; jjj=jjj+1024) {...",shape=box];
	ForLoop8326838 -> ForLoop8326837;
	ForLoop8326838 -> _JOIN_8326838;
	_JOIN_8289964 [label="_JOIN_8289964None...",shape=box];
	_JOIN_8289964 -> 8596031;
	8285520 [label="8285520  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	ForLoop8286547 [label="ForLoop8286547  for (j=jj; j<=cbv_34; j=j+28) {...",shape=box];
	ForLoop8286547 -> 8285573;
	ForLoop8286547 -> _JOIN_8286547;
	8287798 [label="8287798  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	ForLoop8326834 [label="ForLoop8326834  for (j=cbv_69; j<=cbv_70; j=j+1) {...",shape=box];
	ForLoop8326834 -> 8326833;
	ForLoop8326834 -> _JOIN_8326834;
	ForLoop8328069 [label="ForLoop8328069  for (i=(min(nx-1,ii+255))-(((min(nx-1,ii+255))-(ii)+1)%22)+1; i<=min(nx-1,ii+255); i=i+1) {...",shape=box];
	ForLoop8328069 -> 8546173;
	ForLoop8328069 -> _JOIN_8328069;
	ForLoop8293461 [label="ForLoop8293461  for (j=cbv_53; j<=cbv_54; j=j+1) {...",shape=box];
	ForLoop8293461 -> 8293460;
	ForLoop8293461 -> _JOIN_8293461;
	ForLoop8325185 [label="ForLoop8325185  for (kt=kk; kt<=cbv_67; kt=kt+32) {...",shape=box];
	ForLoop8325185 -> 8449121;
	ForLoop8325185 -> _JOIN_8325185;
	8296877 [label="8296877  scv_33=scv_33+A[(i+20)*ny+j]*x_copy[(j-jj)];...",shape=box];
	8296877 -> _JOIN_8296878;
	_JOIN_8291103 [label="_JOIN_8291103None...",shape=box];
	_JOIN_8291103 -> 8596903;
	8275322 [label="8275322  scv_44=scv_44+A[(i+2)*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop8277515 [label="ForLoop8277515  for (j=cbv_11; j<=cbv_12; j=j+1) {...",shape=box];
	ForLoop8277515 -> 8277514;
	ForLoop8277515 -> _JOIN_8277515;
	ForLoop8026166 [label="ForLoop8026166  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop8026166 -> 8026165;
	ForLoop8026166 -> _JOIN_8026166;
	_JOIN_8286627 [label="_JOIN_8286627None...",shape=box];
	_JOIN_8286627 -> 8286659;
	ForLoop8289964 [label="ForLoop8289964  for (j=jj; j<=cbv_43; j=j+28) {...",shape=box];
	ForLoop8289964 -> 8288990;
	ForLoop8289964 -> _JOIN_8289964;
	_JOIN_8325185 [label="_JOIN_8325185None...",shape=box];
	_JOIN_8325185 -> 8325216;
	8286659 [label="8286659  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	8284434 [label="8284434  scv_45=scv_45+A[(i+10)*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop8326763 [label="ForLoop8326763  for (j=jj; j<=cbv_68; j=j+28) {...",shape=box];
	ForLoop8326763 -> 8326032;
	ForLoop8326763 -> _JOIN_8326763;
	8325988 [label="8325988  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	8586439 [label="8586439  register int cbv_11, cbv_12;...",shape=box];
	8328064 [label="8328064  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	8328064 -> _JOIN_8328066;
	8591671 [label="8591671  register int cbv_29, cbv_30;...",shape=box];
	8287765 [label="8287765  scv_34=scv_34+A[(i+12)*ny+j]*x_copy[(j-jj)];...",shape=box];
	8287765 -> _JOIN_8287766;
	8025870 [label="8025870  y[i]=0.0;...",shape=box];
	ForLoop8328066 [label="ForLoop8328066  for (kk=kkk; kk<=min(ny-1,kkk+480); kk=kk+32) {...",shape=box];
	ForLoop8328066 -> 8326900;
	ForLoop8328066 -> _JOIN_8328066;
	ForLoop8328067 [label="ForLoop8328067  for (kkk=0; kkk<=ny-1; kkk=kkk+512) {...",shape=box];
	ForLoop8328067 -> ForLoop8328066;
	ForLoop8328067 -> _JOIN_8328067;
	_JOIN_8297937 [label="_JOIN_8297937None...",shape=box];
	_JOIN_8297937 -> 8602135;
	8272960 [label="8272960  double x_copy[256];...",shape=box];
	ForLoop8290044 [label="ForLoop8290044  for (j=cbv_44; j<=cbv_45; j=j+1) {...",shape=box];
	ForLoop8290044 -> 8290043;
	ForLoop8290044 -> _JOIN_8290044;
	8292407 [label="8292407  scv_54=scv_54+A[(i+17)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_8293381 [label="_JOIN_8293381None...",shape=box];
	_JOIN_8293381 -> 8598647;
	8283295 [label="8283295  scv_51=scv_51+A[(i+9)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_8290044 [label="_JOIN_8290044None...",shape=box];
	_JOIN_8290044 -> 8290076;
	8449121 [label="8449121  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	_JOIN_8326838 [label="_JOIN_8326838None...",shape=box];
	_JOIN_8326838 -> ForLoop8328067;
	_JOIN_8276376 [label="_JOIN_8276376None...",shape=box];
	_JOIN_8276376 -> 8276408;
	_JOIN_8026166 [label="_JOIN_8026166None...",shape=box];
	_JOIN_8026166 -> 8272960;
	_JOIN_8294520 [label="_JOIN_8294520None...",shape=box];
	_JOIN_8294520 -> 8599519;
	8326032 [label="8326032  scv_87=scv_87+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	8589927 [label="8589927  register int cbv_23, cbv_24;...",shape=box];
	_JOIN_8326837 [label="_JOIN_8326837None...",shape=box];
	_JOIN_8326837 -> _JOIN_8326838;
	8282103 [label="8282103  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	8532670 [label="8532670  tmp[(i+20)]=scv_33;...",shape=box];
	8298016 [label="8298016  scv_36=scv_36+A[(i+21)*ny+j]*x_copy[(j-jj)];...",shape=box];
	8298016 -> _JOIN_8298017;
	8596903 [label="8596903  register int cbv_47, cbv_48;...",shape=box];
	ForLoop8286627 [label="ForLoop8286627  for (j=cbv_35; j<=cbv_36; j=j+1) {...",shape=box];
	ForLoop8286627 -> 8286626;
	ForLoop8286627 -> _JOIN_8286627;
	8278739 [label="8278739  scv_43=scv_43+A[(i+5)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_8287766 [label="_JOIN_8287766None...",shape=box];
	_JOIN_8287766 -> 8287798;
	_JOIN_8284349 [label="_JOIN_8284349None...",shape=box];
	_JOIN_8284349 -> 8284381;
	ForLoop8275237 [label="ForLoop8275237  for (j=cbv_5; j<=cbv_6; j=j+1) {...",shape=box];
	ForLoop8275237 -> 8275236;
	ForLoop8275237 -> _JOIN_8275237;
	8290076 [label="8290076  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	8274183 [label="8274183  scv_53=scv_53+A[(i+1)*ny+j]*x_copy[(j-jj)];...",shape=box];
	8294632 [label="8294632  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	ForLoop8294600 [label="ForLoop8294600  for (j=cbv_56; j<=cbv_57; j=j+1) {...",shape=box];
	ForLoop8294600 -> 8294599;
	ForLoop8294600 -> _JOIN_8294600;
	8595159 [label="8595159  register int cbv_41, cbv_42;...",shape=box];
	8281017 [label="8281017  scv_41=scv_41+A[(i+7)*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop8328071 [label="ForLoop8328071  for (ii=0; ii<=nx-1; ii=ii+256) {...",shape=box];
	ForLoop8328071 -> 8272975;
	ForLoop8328071 -> _JOIN_8328071;
	8272975 [label="8272975  int i;...",shape=box];
	8272975 -> ForLoop8325873;
	8282070 [label="8282070  scv_41=scv_41+A[(i+7)*ny+j]*x_copy[(j-jj)];...",shape=box];
	8282070 -> _JOIN_8282071;
	8275269 [label="8275269  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	ForLoop8291103 [label="ForLoop8291103  for (j=jj; j<=cbv_46; j=j+28) {...",shape=box];
	ForLoop8291103 -> 8290129;
	ForLoop8291103 -> _JOIN_8291103;
	ForLoop8279713 [label="ForLoop8279713  for (j=jj; j<=cbv_16; j=j+28) {...",shape=box];
	ForLoop8279713 -> 8278739;
	ForLoop8279713 -> _JOIN_8279713;
	_JOIN_8326834 [label="_JOIN_8326834None...",shape=box];
	_JOIN_8326834 -> _JOIN_8326837;
	8589055 [label="8589055  register int cbv_20, cbv_21;...",shape=box];
	8588183 [label="8588183  register int cbv_17, cbv_18;...",shape=box];
	8326900 [label="8326900  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	_JOIN_8277515 [label="_JOIN_8277515None...",shape=box];
	_JOIN_8277515 -> 8277547;
	8283209 [label="8283209  scv_52=scv_52+A[(i+8)*ny+j]*x_copy[(j-jj)];...",shape=box];
	8283209 -> _JOIN_8283210;
	8590799 [label="8590799  register int cbv_26, cbv_27;...",shape=box];
	ForLoop8326837 [label="ForLoop8326837  for (jj=jjj; jj<=min(ny-1,jjj+768); jj=jj+256) {...",shape=box];
	ForLoop8326837 -> 8325988;
	ForLoop8326837 -> _JOIN_8326837;
	ForLoop8291183 [label="ForLoop8291183  for (j=cbv_47; j<=cbv_48; j=j+1) {...",shape=box];
	ForLoop8291183 -> 8291182;
	ForLoop8291183 -> _JOIN_8291183;
	ForLoop8280932 [label="ForLoop8280932  for (j=cbv_20; j<=cbv_21; j=j+1) {...",shape=box];
	ForLoop8280932 -> 8280931;
	ForLoop8280932 -> _JOIN_8280932;
	ForLoop8279793 [label="ForLoop8279793  for (j=cbv_17; j<=cbv_18; j=j+1) {...",shape=box];
	ForLoop8279793 -> 8279792;
	ForLoop8279793 -> _JOIN_8279793;
	ForLoop8277435 [label="ForLoop8277435  for (j=jj; j<=cbv_10; j=j+28) {...",shape=box];
	ForLoop8277435 -> 8276461;
	ForLoop8277435 -> _JOIN_8277435;
	8601263 [label="8601263  register int cbv_62, cbv_63;...",shape=box];
	ForLoop8292242 [label="ForLoop8292242  for (j=jj; j<=cbv_49; j=j+28) {...",shape=box];
	ForLoop8292242 -> 8291268;
	ForLoop8292242 -> _JOIN_8292242;
	ForLoop8284349 [label="ForLoop8284349  for (j=cbv_29; j<=cbv_30; j=j+1) {...",shape=box];
	ForLoop8284349 -> 8284348;
	ForLoop8284349 -> _JOIN_8284349;
	_JOIN_8284269 [label="_JOIN_8284269None...",shape=box];
	_JOIN_8284269 -> 8591671;
	8599519 [label="8599519  register int cbv_56, cbv_57;...",shape=box];
	8286626 [label="8286626  scv_49=scv_49+A[(i+11)*ny+j]*x_copy[(j-jj)];...",shape=box];
	8286626 -> _JOIN_8286627;
	8293460 [label="8293460  scv_54=scv_54+A[(i+17)*ny+j]*x_copy[(j-jj)];...",shape=box];
	8293460 -> _JOIN_8293461;
	8539911 [label="8539911  double scv_55, scv_56, scv_57, scv_58, scv_59, scv_60, scv_61, scv_62;...",shape=box];
	_JOIN_8328071 [label="_JOIN_8328071None...",shape=box];
	ForLoop8296798 [label="ForLoop8296798  for (j=jj; j<=cbv_61; j=j+28) {...",shape=box];
	ForLoop8296798 -> 8295824;
	ForLoop8296798 -> _JOIN_8296798;
	_JOIN_8276296 [label="_JOIN_8276296None...",shape=box];
	_JOIN_8276296 -> 8585567;
	_JOIN_8279793 [label="_JOIN_8279793None...",shape=box];
	_JOIN_8279793 -> 8279825;
	8288990 [label="8288990  scv_46=scv_46+A[(i+14)*ny+j]*x_copy[(j-jj)];...",shape=box];
	8279792 [label="8279792  scv_43=scv_43+A[(i+5)*ny+j]*x_copy[(j-jj)];...",shape=box];
	8279792 -> _JOIN_8279793;
	_JOIN_8328033 [label="_JOIN_8328033None...",shape=box];
	_JOIN_8328033 -> 8328064;
	8276375 [label="8276375  scv_44=scv_44+A[(i+2)*ny+j]*x_copy[(j-jj)];...",shape=box];
	8276375 -> _JOIN_8276376;
	8273252 [label="8273252  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	8026165 [label="8026165  y[i]=0.0;...",shape=box];
	8026165 -> _JOIN_8026166;
	ForLoop8296878 [label="ForLoop8296878  for (j=cbv_62; j<=cbv_63; j=j+1) {...",shape=box];
	ForLoop8296878 -> 8296877;
	ForLoop8296878 -> _JOIN_8296878;
	ForLoop8293381 [label="ForLoop8293381  for (j=jj; j<=cbv_52; j=j+28) {...",shape=box];
	ForLoop8293381 -> 8292407;
	ForLoop8293381 -> _JOIN_8293381;
	8583823 [label="8583823  register int cbv_2, cbv_3;...",shape=box];
	_JOIN_8275157 [label="_JOIN_8275157None...",shape=box];
	_JOIN_8275157 -> 8584695;
	_JOIN_8292242 [label="_JOIN_8292242None...",shape=box];
	_JOIN_8292242 -> 8597775;
	ForLoop8325873 [label="ForLoop8325873  for (i=ii; i<=min(nx-1,ii+255)-21; i=i+22) {...",shape=box];
	ForLoop8325873 -> 8532652;
	ForLoop8325873 -> _JOIN_8325873;
	ForLoop8325871 [label="ForLoop8325871  for (kkk=0; kkk<=ny-1; kkk=kkk+512) {...",shape=box];
	ForLoop8325871 -> ForLoop8325869;
	ForLoop8325871 -> _JOIN_8325871;
	_JOIN_8298022 [label="_JOIN_8298022None...",shape=box];
	_JOIN_8298022 -> ForLoop8325871;
	_JOIN_8298020 [label="_JOIN_8298020None...",shape=box];
	_JOIN_8298020 -> _JOIN_8298022;
	8278653 [label="8278653  scv_50=scv_50+A[(i+4)*ny+j]*x_copy[(j-jj)];...",shape=box];
	8278653 -> _JOIN_8278654;
	_JOIN_8278574 [label="_JOIN_8278574None...",shape=box];
	_JOIN_8278574 -> 8587311;
	_JOIN_8288825 [label="_JOIN_8288825None...",shape=box];
	_JOIN_8288825 -> 8595159;
	_JOIN_8277435 [label="_JOIN_8277435None...",shape=box];
	_JOIN_8277435 -> 8586439;
	8587311 [label="8587311  register int cbv_14, cbv_15;...",shape=box];
	8292321 [label="8292321  scv_48=scv_48+A[(i+16)*ny+j]*x_copy[(j-jj)];...",shape=box];
	8292321 -> _JOIN_8292322;
	_JOIN_8328069 [label="_JOIN_8328069None...",shape=box];
	_JOIN_8328069 -> _JOIN_8328071;
	_JOIN_8328066 [label="_JOIN_8328066None...",shape=box];
	_JOIN_8328066 -> _JOIN_8328067;
	_JOIN_8328067 [label="_JOIN_8328067None...",shape=box];
	_JOIN_8328067 -> 8546185;
	8288904 [label="8288904  scv_35=scv_35+A[(i+13)*ny+j]*x_copy[(j-jj)];...",shape=box];
	8288904 -> _JOIN_8288905;
	8295771 [label="8295771  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	8282156 [label="8282156  scv_52=scv_52+A[(i+8)*ny+j]*x_copy[(j-jj)];...",shape=box];
	8287851 [label="8287851  scv_35=scv_35+A[(i+13)*ny+j]*x_copy[(j-jj)];...",shape=box];
	8597775 [label="8597775  register int cbv_50, cbv_51;...",shape=box];
	8592543 [label="8592543  register int cbv_32, cbv_33;...",shape=box];
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 8025438;
	_JOIN_8278654 [label="_JOIN_8278654None...",shape=box];
	_JOIN_8278654 -> 8278686;
	_JOIN_8326763 [label="_JOIN_8326763None...",shape=box];
	_JOIN_8326763 -> 8616893;
	8280964 [label="8280964  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	_JOIN_8280932 [label="_JOIN_8280932None...",shape=box];
	_JOIN_8280932 -> 8280964;
	8279878 [label="8279878  scv_42=scv_42+A[(i+6)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_8274098 [label="_JOIN_8274098None...",shape=box];
	_JOIN_8274098 -> 8274130;
	8276461 [label="8276461  scv_39=scv_39+A[(i+3)*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop8280852 [label="ForLoop8280852  for (j=jj; j<=cbv_19; j=j+28) {...",shape=box];
	ForLoop8280852 -> 8279878;
	ForLoop8280852 -> _JOIN_8280852;
	_JOIN_8294600 [label="_JOIN_8294600None...",shape=box];
	_JOIN_8294600 -> 8294632;
	_JOIN_8298017 [label="_JOIN_8298017None...",shape=box];
	_JOIN_8298017 -> _JOIN_8298020;
	8290129 [label="8290129  scv_47=scv_47+A[(i+15)*ny+j]*x_copy[(j-jj)];...",shape=box];
	8584695 [label="8584695  register int cbv_5, cbv_6;...",shape=box];
	_JOIN_8279713 [label="_JOIN_8279713None...",shape=box];
	_JOIN_8279713 -> 8588183;
	_JOIN_8295739 [label="_JOIN_8295739None...",shape=box];
	_JOIN_8295739 -> 8295771;
	8294599 [label="8294599  scv_38=scv_38+A[(i+18)*ny+j]*x_copy[(j-jj)];...",shape=box];
	8294599 -> _JOIN_8294600;
	_JOIN_8296878 [label="_JOIN_8296878None...",shape=box];
	_JOIN_8296878 -> 8296910;
	_JOIN_8325871 [label="_JOIN_8325871None...",shape=box];
	_JOIN_8325871 -> 8532670;
	8292354 [label="8292354  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	_JOIN_8283210 [label="_JOIN_8283210None...",shape=box];
	_JOIN_8283210 -> 8283242;
	ForLoop8294520 [label="ForLoop8294520  for (j=jj; j<=cbv_55; j=j+28) {...",shape=box];
	ForLoop8294520 -> 8293546;
	ForLoop8294520 -> _JOIN_8294520;
	8594287 [label="8594287  register int cbv_38, cbv_39;...",shape=box];
	_JOIN_8275237 [label="_JOIN_8275237None...",shape=box];
	_JOIN_8275237 -> 8275269;
	8274130 [label="8274130  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	8585567 [label="8585567  register int cbv_8, cbv_9;...",shape=box];
	ForLoop8288825 [label="ForLoop8288825  for (j=jj; j<=cbv_40; j=j+28) {...",shape=box];
	ForLoop8288825 -> 8287851;
	ForLoop8288825 -> _JOIN_8288825;
	ForLoop8282071 [label="ForLoop8282071  for (j=cbv_23; j<=cbv_24; j=j+1) {...",shape=box];
	ForLoop8282071 -> 8282070;
	ForLoop8282071 -> _JOIN_8282071;
	ForLoop8274098 [label="ForLoop8274098  for (j=cbv_2; j<=cbv_3; j=j+1) {...",shape=box];
	ForLoop8274098 -> 8274097;
	ForLoop8274098 -> _JOIN_8274098;
	_JOIN_8287686 [label="_JOIN_8287686None...",shape=box];
	_JOIN_8287686 -> 8594287;
	_JOIN_8292322 [label="_JOIN_8292322None...",shape=box];
	_JOIN_8292322 -> 8292354;
	8326833 [label="8326833  scv_87=scv_87+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	8326833 -> _JOIN_8326834;
	ForLoop8288905 [label="ForLoop8288905  for (j=cbv_41; j<=cbv_42; j=j+1) {...",shape=box];
	ForLoop8288905 -> 8288904;
	ForLoop8288905 -> _JOIN_8288905;
	_JOIN_8282071 [label="_JOIN_8282071None...",shape=box];
	_JOIN_8282071 -> 8282103;
	ForLoop8325869 [label="ForLoop8325869  for (kk=kkk; kk<=min(ny-1,kkk+480); kk=kk+32) {...",shape=box];
	ForLoop8325869 -> 8298084;
	ForLoop8325869 -> _JOIN_8325869;
	ForLoop8276376 [label="ForLoop8276376  for (j=cbv_8; j<=cbv_9; j=j+1) {...",shape=box];
	ForLoop8276376 -> 8276375;
	ForLoop8276376 -> _JOIN_8276376;
	8277547 [label="8277547  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	8593415 [label="8593415  register int cbv_35, cbv_36;...",shape=box];
	8293493 [label="8293493  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	ForLoop8285488 [label="ForLoop8285488  for (j=cbv_32; j<=cbv_33; j=j+1) {...",shape=box];
	ForLoop8285488 -> 8285487;
	ForLoop8285488 -> _JOIN_8285488;
	8290043 [label="8290043  scv_46=scv_46+A[(i+14)*ny+j]*x_copy[(j-jj)];...",shape=box];
	8290043 -> _JOIN_8290044;
	_JOIN_8325869 [label="_JOIN_8325869None...",shape=box];
	_JOIN_8325869 -> _JOIN_8325871;
	8286712 [label="8286712  scv_34=scv_34+A[(i+12)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_8325873 [label="_JOIN_8325873None...",shape=box];
	_JOIN_8325873 -> ForLoop8328069;
	ForLoop8276296 [label="ForLoop8276296  for (j=jj; j<=cbv_7; j=j+28) {...",shape=box];
	ForLoop8276296 -> 8275322;
	ForLoop8276296 -> _JOIN_8276296;
	8546173 [label="8546173  double scv_87;...",shape=box];
	8283242 [label="8283242  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	_JOIN_8285408 [label="_JOIN_8285408None...",shape=box];
	_JOIN_8285408 -> 8592543;
	ForLoop8292322 [label="ForLoop8292322  for (j=cbv_50; j<=cbv_51; j=j+1) {...",shape=box];
	ForLoop8292322 -> 8292321;
	ForLoop8292322 -> _JOIN_8292322;
	ForLoop8328033 [label="ForLoop8328033  for (kt=kk; kt<=cbv_71; kt=kt+32) {...",shape=box];
	ForLoop8328033 -> 8539911;
	ForLoop8328033 -> _JOIN_8328033;
	ForLoop8026097 [label="ForLoop8026097  for (i=0; i<=cbv_1; i=i+26) {...",shape=box];
	ForLoop8026097 -> 8025870;
	ForLoop8026097 -> _JOIN_8026097;
	8600391 [label="8600391  register int cbv_59, cbv_60;...",shape=box];
	8291215 [label="8291215  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	_JOIN_8026097 [label="_JOIN_8026097None...",shape=box];
	_JOIN_8026097 -> 8026441;
	ForLoop8295739 [label="ForLoop8295739  for (j=cbv_59; j<=cbv_60; j=j+1) {...",shape=box];
	ForLoop8295739 -> 8295738;
	ForLoop8295739 -> _JOIN_8295739;
	8025438 [label="8025438  int i;...",shape=box];
	_JOIN_8280852 [label="_JOIN_8280852None...",shape=box];
	_JOIN_8280852 -> 8589055;
	ForLoop8283210 [label="ForLoop8283210  for (j=cbv_26; j<=cbv_27; j=j+1) {...",shape=box];
	ForLoop8283210 -> 8283209;
	ForLoop8283210 -> _JOIN_8283210;
	8602135 [label="8602135  register int cbv_65, cbv_66;...",shape=box];
	8288937 [label="8288937  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	8276408 [label="8276408  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	8026441 [label="8026441  register int cbv_2, cbv_3;...",shape=box];
	8284381 [label="8284381  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	ForLoop8284269 [label="ForLoop8284269  for (j=jj; j<=cbv_28; j=j+28) {...",shape=box];
	ForLoop8284269 -> 8283295;
	ForLoop8284269 -> _JOIN_8284269;
	ForLoop8298022 [label="ForLoop8298022  for (jjj=0; jjj<=ny-1; jjj=jjj+1024) {...",shape=box];
	ForLoop8298022 -> ForLoop8298020;
	ForLoop8298022 -> _JOIN_8298022;
	_JOIN_8285488 [label="_JOIN_8285488None...",shape=box];
	_JOIN_8285488 -> 8285520;
	ForLoop8278654 [label="ForLoop8278654  for (j=cbv_14; j<=cbv_15; j=j+1) {...",shape=box];
	ForLoop8278654 -> 8278653;
	ForLoop8278654 -> _JOIN_8278654;
	ForLoop8275157 [label="ForLoop8275157  for (j=jj; j<=cbv_4; j=j+28) {...",shape=box];
	ForLoop8275157 -> 8274183;
	ForLoop8275157 -> _JOIN_8275157;
	8284348 [label="8284348  scv_51=scv_51+A[(i+9)*ny+j]*x_copy[(j-jj)];...",shape=box];
	8284348 -> _JOIN_8284349;
	_JOIN_8293461 [label="_JOIN_8293461None...",shape=box];
	_JOIN_8293461 -> 8293493;
	_JOIN_8286547 [label="_JOIN_8286547None...",shape=box];
	_JOIN_8286547 -> 8593415;
	8285573 [label="8285573  scv_49=scv_49+A[(i+11)*ny+j]*x_cexpected=9339882853735.613281
actual=9369846271501.798828
opy[(j-jj)];...",shape=box];
	8293546 [label="8293546  scv_38=scv_38+A[(i+18)*ny+j]*x_copy[(j-jj)];...",shape=box];
	8277514 [label="8277514  scv_39=scv_39+A[(i+3)*ny+j]*x_copy[(j-jj)];...",shape=box];
	8277514 -> _JOIN_8277515;
	_JOIN_8274027 [label="_JOIN_8274027None...",shape=box];
	_JOIN_8274027 -> 8583823;
	8274097 [label="8274097  scv_40=scv_40+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	8274097 -> _JOIN_8274098;
	8596031 [label="8596031  register int cbv_44, cbv_45;...",shape=box];
	8598647 [label="8598647  register int cbv_53, cbv_54;...",shape=box];
	8295824 [label="8295824  scv_33=scv_33+A[(i+20)*ny+j]*x_copy[(j-jj)];...",shape=box];
	8278686 [label="8278686  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	8275236 [label="8275236  scv_53=scv_53+A[(i+1)*ny+j]*x_copy[(j-jj)];...",shape=box];
	8275236 -> _JOIN_8275237;
	8325216 [label="8325216  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	_JOIN_8295659 [label="_JOIN_8295659None...",shape=box];
	_JOIN_8295659 -> 8600391;
	8298084 [label="8298084  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	8296963 [label="8296963  scv_36=scv_36+A[(i+21)*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_8283130 [label="_JOIN_8283130None...",shape=box];
	_JOIN_8283130 -> 8590799;
	8296910 [label="8296910  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	ForLoop8298017 [label="ForLoop8298017  for (j=cbv_65; j<=cbv_66; j=j+1) {...",shape=box];
	ForLoop8298017 -> 8298016;
	ForLoop8298017 -> _JOIN_8298017;
	ForLoop8287686 [label="ForLoop8287686  for (j=jj; j<=cbv_37; j=j+28) {...",shape=box];
	ForLoop8287686 -> 8286712;
	ForLoop8287686 -> _JOIN_8287686;
	ForLoop8278574 [label="ForLoop8278574  for (j=jj; j<=cbv_13; j=j+28) {...",shape=box];
	ForLoop8278574 -> 8277600;
	ForLoop8278574 -> _JOIN_8278574;
	_JOIN_8281991 [label="_JOIN_8281991None...",shape=box];
	_JOIN_8281991 -> 8589927;
	8532652 [label="8532652  double scv_33, scv_34, scv_35, scv_36, scv_37, scv_38, scv_39, scv_40;...",shape=box];
	8291182 [label="8291182  scv_47=scv_47+A[(i+15)*ny+j]*x_copy[(j-jj)];...",shape=box];
	8291182 -> _JOIN_8291183;
	ForLoop8297937 [label="ForLoop8297937  for (j=jj; j<=cbv_64; j=j+28) {...",shape=box];
	ForLoop8297937 -> 8296963;
	ForLoop8297937 -> _JOIN_8297937;
	8291268 [label="8291268  scv_48=scv_48+A[(i+16)*ny+j]*x_copy[(j-jj)];...",shape=box];
	8280931 [label="8280931  scv_42=scv_42+A[(i+6)*ny+j]*x_copy[(j-jj)];...",shape=box];
	8280931 -> _JOIN_8280932;
	ForLoop8285408 [label="ForLoop8285408  for (j=jj; j<=cbv_31; j=j+28) {...",shape=box];
	ForLoop8285408 -> 8284434;
	ForLoop8285408 -> _JOIN_8285408;
	8285487 [label="8285487  scv_45=scv_45+A[(i+10)*ny+j]*x_copy[(j-jj)];...",shape=box];
	8285487 -> _JOIN_8285488;
	ForLoop8274027 [label="ForLoop8274027  for (j=jj; j<=cbv_1; j=j+28) {...",shape=box];
	ForLoop8274027 -> 8273296;
	ForLoop8274027 -> _JOIN_8274027;
	8273296 [label="8273296  scv_40=scv_40+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	8277600 [label="8277600  scv_50=scv_50+A[(i+4)*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop8298020 [label="ForLoop8298020  for (jj=jjj; jj<=min(ny-1,jjj+768); jj=jj+256) {...",shape=box];
	ForLoop8298020 -> 8273252;
	ForLoop8298020 -> _JOIN_8298020;
	ForLoop8287766 [label="ForLoop8287766  for (j=cbv_38; j<=cbv_39; j=j+1) {...",shape=box];
	ForLoop8287766 -> 8287765;
	ForLoop8287766 -> _JOIN_8287766;
	8279825 [label="8279825  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	8616893 [label="8616893  register int cbv_69, cbv_70;...",shape=box];

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest44.exe __orio_perftest44.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest44.exe  
{'[5, 5, 2, 0, 5, 4, 1, 1, 25, 21, 27, 0, 0, 0, 2, 1, 1, 1]' : 0.24538}
{'[5, 5, 2, 0, 5, 4, 1, 1, 25, 21, 27, 0, 0, 0, 2, 1, 1, 1]' : 0.244872}
{'[5, 5, 2, 0, 5, 4, 1, 1, 25, 21, 27, 0, 0, 0, 2, 1, 1, 1]' : 0.245355}
{'[5, 5, 2, 0, 5, 4, 1, 1, 25, 21, 27, 0, 0, 0, 2, 1, 1, 1]' : 0.24491}
{'[5, 5, 2, 0, 5, 4, 1, 1, 25, 21, 27, 0, 0, 0, 2, 1, 1, 1]' : 0.249492}
{'[5, 5, 2, 0, 5, 4, 1, 1, 25, 21, 27, 0, 0, 0, 2, 1, 1, 1]' : 0.244719}
{'[5, 5, 2, 0, 5, 4, 1, 1, 25, 21, 27, 0, 0, 0, 2, 1, 1, 1]' : 0.24529}
{'[5, 5, 2, 0, 5, 4, 1, 1, 25, 21, 27, 0, 0, 0, 2, 1, 1, 1]' : 0.244673}
{'[5, 5, 2, 0, 5, 4, 1, 1, 25, 21, 27, 0, 0, 0, 2, 1, 1, 1]' : 0.244733}
{'[5, 5, 2, 0, 5, 4, 1, 1, 25, 21, 27, 0, 0, 0, 2, 1, 1, 1]' : 0.244691}
{'[5, 5, 2, 0, 5, 4, 1, 1, 25, 21, 27, 0, 0, 0, 2, 1, 1, 1]' : 0.250026}
{'[5, 5, 2, 0, 5, 4, 1, 1, 25, 21, 27, 0, 0, 0, 2, 1, 1, 1]' : 0.244853}
{'[5, 5, 2, 0, 5, 4, 1, 1, 25, 21, 27, 0, 0, 0, 2, 1, 1, 1]' : 0.244679}
{'[5, 5, 2, 0, 5, 4, 1, 1, 25, 21, 27, 0, 0, 0, 2, 1, 1, 1]' : 0.244868}
{'[5, 5, 2, 0, 5, 4, 1, 1, 25, 21, 27, 0, 0, 0, 2, 1, 1, 1]' : 0.244671}
{'[5, 5, 2, 0, 5, 4, 1, 1, 25, 21, 27, 0, 0, 0, 2, 1, 1, 1]' : 0.244944}
{'[5, 5, 2, 0, 5, 4, 1, 1, 25, 21, 27, 0, 0, 0, 2, 1, 1, 1]' : 0.24479}
{'[5, 5, 2, 0, 5, 4, 1, 1, 25, 21, 27, 0, 0, 0, 2, 1, 1, 1]' : 0.249399}
{'[5, 5, 2, 0, 5, 4, 1, 1, 25, 21, 27, 0, 0, 0, 2, 1, 1, 1]' : 0.244952}
{'[5, 5, 2, 0, 5, 4, 1, 1, 25, 21, 27, 0, 0, 0, 2, 1, 1, 1]' : 0.244599}
{'[5, 5, 2, 0, 5, 4, 1, 1, 25, 21, 27, 0, 0, 0, 2, 1, 1, 1]' : 0.244529}
{'[5, 5, 2, 0, 5, 4, 1, 1, 25, 21, 27, 0, 0, 0, 2, 1, 1, 1]' : 0.244555}
{'[5, 5, 2, 0, 5, 4, 1, 1, 25, 21, 27, 0, 0, 0, 2, 1, 1, 1]' : 0.244885}
{'[5, 5, 2, 0, 5, 4, 1, 1, 25, 21, 27, 0, 0, 0, 2, 1, 1, 1]' : 0.249448}
{'[5, 5, 2, 0, 5, 4, 1, 1, 25, 21, 27, 0, 0, 0, 2, 1, 1, 1]' : 0.244579}
{'[5, 5, 2, 0, 5, 4, 1, 1, 25, 21, 27, 0, 0, 0, 2, 1, 1, 1]' : 0.244775}
{'[5, 5, 2, 0, 5, 4, 1, 1, 25, 21, 27, 0, 0, 0, 2, 1, 1, 1]' : 0.244632}
{'[5, 5, 2, 0, 5, 4, 1, 1, 25, 21, 27, 0, 0, 0, 2, 1, 1, 1]' : 0.244607}
{'[5, 5, 2, 0, 5, 4, 1, 1, 25, 21, 27, 0, 0, 0, 2, 1, 1, 1]' : 0.244698}
{'[5, 5, 2, 0, 5, 4, 1, 1, 25, 21, 27, 0, 0, 0, 2, 1, 1, 1]' : 0.249404}

out:
 ["{'[5, 5, 2, 0, 5, 4, 1, 1, 25, 21, 27, 0, 0, 0, 2, 1, 1, 1]' : 0.24538}", "{'[5, 5, 2, 0, 5, 4, 1, 1, 25, 21, 27, 0, 0, 0, 2, 1, 1, 1]' : 0.244872}", "{'[5, 5, 2, 0, 5, 4, 1, 1, 25, 21, 27, 0, 0, 0, 2, 1, 1, 1]' : 0.245355}", "{'[5, 5, 2, 0, 5, 4, 1, 1, 25, 21, 27, 0, 0, 0, 2, 1, 1, 1]' : 0.24491}", "{'[5, 5, 2, 0, 5, 4, 1, 1, 25, 21, 27, 0, 0, 0, 2, 1, 1, 1]' : 0.249492}", "{'[5, 5, 2, 0, 5, 4, 1, 1, 25, 21, 27, 0, 0, 0, 2, 1, 1, 1]' : 0.244719}", "{'[5, 5, 2, 0, 5, 4, 1, 1, 25, 21, 27, 0, 0, 0, 2, 1, 1, 1]' : 0.24529}", "{'[5, 5, 2, 0, 5, 4, 1, 1, 25, 21, 27, 0, 0, 0, 2, 1, 1, 1]' : 0.244673}", "{'[5, 5, 2, 0, 5, 4, 1, 1, 25, 21, 27, 0, 0, 0, 2, 1, 1, 1]' : 0.244733}", "{'[5, 5, 2, 0, 5, 4, 1, 1, 25, 21, 27, 0, 0, 0, 2, 1, 1, 1]' : 0.244691}", "{'[5, 5, 2, 0, 5, 4, 1, 1, 25, 21, 27, 0, 0, 0, 2, 1, 1, 1]' : 0.250026}", "{'[5, 5, 2, 0, 5, 4, 1, 1, 25, 21, 27, 0, 0, 0, 2, 1, 1, 1]' : 0.244853}", "{'[5, 5, 2, 0, 5, 4, 1, 1, 25, 21, 27, 0, 0, 0, 2, 1, 1, 1]' : 0.244679}", "{'[5, 5, 2, 0, 5, 4, 1, 1, 25, 21, 27, 0, 0, 0, 2, 1, 1, 1]' : 0.244868}", "{'[5, 5, 2, 0, 5, 4, 1, 1, 25, 21, 27, 0, 0, 0, 2, 1, 1, 1]' : 0.244671}", "{'[5, 5, 2, 0, 5, 4, 1, 1, 25, 21, 27, 0, 0, 0, 2, 1, 1, 1]' : 0.244944}", "{'[5, 5, 2, 0, 5, 4, 1, 1, 25, 21, 27, 0, 0, 0, 2, 1, 1, 1]' : 0.24479}", "{'[5, 5, 2, 0, 5, 4, 1, 1, 25, 21, 27, 0, 0, 0, 2, 1, 1, 1]' : 0.249399}", "{'[5, 5, 2, 0, 5, 4, 1, 1, 25, 21, 27, 0, 0, 0, 2, 1, 1, 1]' : 0.244952}", "{'[5, 5, 2, 0, 5, 4, 1, 1, 25, 21, 27, 0, 0, 0, 2, 1, 1, 1]' : 0.244599}", "{'[5, 5, 2, 0, 5, 4, 1, 1, 25, 21, 27, 0, 0, 0, 2, 1, 1, 1]' : 0.244529}", "{'[5, 5, 2, 0, 5, 4, 1, 1, 25, 21, 27, 0, 0, 0, 2, 1, 1, 1]' : 0.244555}", "{'[5, 5, 2, 0, 5, 4, 1, 1, 25, 21, 27, 0, 0, 0, 2, 1, 1, 1]' : 0.244885}", "{'[5, 5, 2, 0, 5, 4, 1, 1, 25, 21, 27, 0, 0, 0, 2, 1, 1, 1]' : 0.249448}", "{'[5, 5, 2, 0, 5, 4, 1, 1, 25, 21, 27, 0, 0, 0, 2, 1, 1, 1]' : 0.244579}", "{'[5, 5, 2, 0, 5, 4, 1, 1, 25, 21, 27, 0, 0, 0, 2, 1, 1, 1]' : 0.244775}", "{'[5, 5, 2, 0, 5, 4, 1, 1, 25, 21, 27, 0, 0, 0, 2, 1, 1, 1]' : 0.244632}", "{'[5, 5, 2, 0, 5, 4, 1, 1, 25, 21, 27, 0, 0, 0, 2, 1, 1, 1]' : 0.244607}", "{'[5, 5, 2, 0, 5, 4, 1, 1, 25, 21, 27, 0, 0, 0, 2, 1, 1, 1]' : 0.244698}", "{'[5, 5, 2, 0, 5, 4, 1, 1, 25, 21, 27, 0, 0, 0, 2, 1, 1, 1]' : 0.249404}"]
returning from 'run': {'[5, 5, 2, 0, 5, 4WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = jjj
, 1, 1, 25, 21, 27, 0, 0, 0, 2, 1, 1, 1]': ([0.24538, 0.244872, 0.245355, 0.24491, 0.249492, 0.244719, 0.24529, 0.244673, 0.244733, 0.244691, 0.250026, 0.244853, 0.244679, 0.244868, 0.244671, 0.244944, 0.24479, 0.249399, 0.244952, 0.244599, 0.244529, 0.244555, 0.244885, 0.249448, 0.244579, 0.244775, 0.244632, 0.244607, 0.244698, 0.249404], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.24538, 0.244872, 0.245355, 0.24491, 0.249492, 0.244719, 0.24529, 0.244673, 0.244733, 0.244691, 0.250026, 0.244853, 0.244679, 0.244868, 0.244671, 0.244944, 0.24479, 0.249399, 0.244952, 0.244599, 0.244529, 0.244555, 0.244885, 0.249448, 0.244579, 0.244775, 0.244632, 0.244607, 0.244698, 0.249404], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[5, 5, 2, 0, 5, 4, 1, 1, 25, 21, 27, 0, 0, 0, 2, 1, 1, 1]': ([0.24538, 0.244872, 0.245355, 0.24491, 0.249492, 0.244719, 0.24529, 0.244673, 0.244733, 0.244691, 0.250026, 0.244853, 0.244679, 0.244868, 0.244671, 0.244944, 0.24479, 0.249399, 0.244952, 0.244599, 0.244529, 0.244555, 0.244885, 0.249448, 0.244579, 0.244775, 0.244632, 0.244607, 0.244698, 0.249404], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [4, 4, 6, 0, 2, 6, 0, 1, 0, 4, 28, 0, 0, 0, 1, 1]
Fixed Factors: {'U1_I': 25, 'SCR': 1}
Testing candidate 8: [4, 4, 6, 0, 2, 6, 0, 1, 25, 0, 4, 28, 0, 0, 0, 1, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		308
        Multiplications: 	72
        Divisions: 		0
        Logical: 		0
        Reads: 			678
        Writes: 		163
        Comparisons:		13
        Gotos: 			0
        
digraph CFG {
	_JOIN_8639728 [label="_JOIN_8639728None...",shape=box];
	_JOIN_8639728 -> ForLoop8640844;
	_JOIN_8640846 [label="_JOIN_8640846None...",shape=box];
	_JOIN_8640846 -> _JOIN_8640847;
	ForLoop8639728 [label="ForLoop8639728  for (jj=0; jj<=ny-1; jj=jj+128) {...",shape=box];
	ForLoop8639728 -> 8639516;
	ForLoop8639728 -> _JOIN_8639728;
	8619158 [label="8619158  y[i]=0.0;...",shape=box];
	8642771 [label="8642771  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	ForLoop8639726 [label="ForLoop8639726  for (j=cbv_2; j<=cbv_3; j=j+1) {...",shape=box];
	ForLoop8639726 -> 8639725;
	ForLoop8639726 -> _JOIN_8639726;
	ForLoop8619385 [label="ForLoop8619385  for (i=0; i<=cbv_1; i=i+26) {...",shape=box];
	ForLoop8619385 -> 8619158;
	ForLoop8619385 -> _JOIN_8619385;
	_JOIN_8639726 [label="_JOIN_8639726None...",shape=box];
	_JOIN_8639726 -> _JOIN_8639728;
	8639725 [label="8639725  scv_31=scv_31+A[i*ny+j]*x[j];...",shape=box];
	8639725 -> _JOIN_8639726;
	8639464 [label="8639464  double x_copy;...",shape=box];
	8640841 [label="8640841  for (k=kk; k<=min(ny-1,kk+511); k=k+1) ...",shape=box];
	8640841 -> _JOIN_8640843;
	_JOIN_8619385 [label="_JOIN_8619385None...",shape=box];
	_JOIN_8619385 -> 8619729;
	8649700 [label="8649700  register int cbv_2, cbv_3;...",shape=box];
	_JOIN_8640843 [label="_JOIN_8640843None...",shape=box];
	_JOIN_8640843 -> _JOIN_8640844;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 8618726;
	8647913 [label="8647913  tmp[i]=scv_31;...",shape=box];
	8647913 -> _JOIN_8640846;
	_JOIN_8619454 [label="_JOIN_8619454None...",shape=box];
	_JOIN_8619454 -> 8639464;
	8639556 [label="8639556  scv_31=scv_31+A[i*ny+j]*x[j];...",shape=box];
	_JOIN_8640735 [label="_JOIN_8640735None...",shape=box];
	_JOIN_8640735 -> 8650959;
	8639790 [label="8639790  for (k=kk; k<=min(ny-1,kk+511); k=k+1) ...",shape=box];
	ForLoop8640735 [label="ForLoop8640735  for (k=kk; k<=cbv_4; k=k+29) {...",shape=box];
	ForLoop8640735 -> 8642771;
	ForLoop8640735 -> _JOIN_8640735;
	8643575 [label="8643575  double scv_30;...",shape=box];
	_JOIN_8639658 [labeexpected=9369846271501.798828
actual=9369846271501.798828
l="_JOIN_8639658None...",shape=box];
	_JOIN_8639658 -> 8649700;
	8618726 [label="8618726  int i;...",shape=box];
	8639516 [label="8639516  int j;...",shape=box];
	ForLoop8639658 [label="ForLoop8639658  for (j=jj; j<=cbv_1; j=j+5) {...",shape=box];
	ForLoop8639658 -> 8639556;
	ForLoop8639658 -> _JOIN_8639658;
	8619453 [label="8619453  y[i]=0.0;...",shape=box];
	8619453 -> _JOIN_8619454;
	8650959 [label="8650959  register int cbv_5, cbv_6;...",shape=box];
	ForLoop8640809 [label="ForLoop8640809  for (k=cbv_5; k<=cbv_6; k=k+1) {...",shape=box];
	ForLoop8640809 -> 8643575;
	ForLoop8640809 -> _JOIN_8640809;
	ForLoop8640844 [label="ForLoop8640844  for (kkk=0; kkk<=ny-1; kkk=kkk+2048) {...",shape=box];
	ForLoop8640844 -> ForLoop8640843;
	ForLoop8640844 -> _JOIN_8640844;
	ForLoop8640847 [label="ForLoop8640847  for (ii=0; ii<=nx-1; ii=ii+128) {...",shape=box];
	ForLoop8640847 -> ForLoop8640846;
	ForLoop8640847 -> _JOIN_8640847;
	ForLoop8640846 [label="ForLoop8640846  for (i=ii; i<=min(nx-1,ii+127); i=i+1) {...",shape=box];
	ForLoop8640846 -> 8647901;
	ForLoop8640846 -> _JOIN_8640846;
	ForLoop8640843 [label="ForLoop8640843  for (kk=kkk; kk<=min(ny-1,kkk+1536); kk=kk+512) {...",shape=box];
	ForLoop8640843 -> 8639790;
	ForLoop8640843 -> _JOIN_8640843;
	ForLoop8619454 [label="ForLoop8619454  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop8619454 -> 8619453;
	ForLoop8619454 -> _JOIN_8619454;
	_JOIN_8640809 [label="_JOIN_8640809None...",shape=box];
	_JOIN_8640809 -> 8640841;
	8619729 [label="8619729  register int cbv_2, cbv_3;...",shape=box];
	_JOIN_8640844 [label="_JOIN_8640844None...",shape=box];
	_JOIN_8640844 -> 8647913;
	8647901 [label="8647901  double scv_31;...",shape=box];
	_JOIN_8640847 [label="_JOIN_8640847None...",shape=box];

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest45.exe __orio_perftest45.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest45.exe  
{'[4, 4, 6, 0, 2, 6, 0, 1, 25, 0, 4, 28, 0, 0, 0, 1, 1, 1]' : 0.167745}
{'[4, 4, 6, 0, 2, 6, 0, 1, 25, 0, 4, 28, 0, 0, 0, 1, 1, 1]' : 0.16755}
{'[4, 4, 6, 0, 2, 6, 0, 1, 25, 0, 4, 28, 0, 0, 0, 1, 1, 1]' : 0.167474}
{'[4, 4, 6, 0, 2, 6, 0, 1, 25, 0, 4, 28, 0, 0, 0, 1, 1, 1]' : 0.167451}
{'[4, 4, 6, 0, 2, 6, 0, 1, 25, 0, 4, 28, 0, 0, 0, 1, 1, 1]' : 0.167507}
{'[4, 4, 6, 0, 2, 6, 0, 1, 25, 0, 4, 28, 0, 0, 0, 1, 1, 1]' : 0.167508}
{'[4, 4, 6, 0, 2, 6, 0, 1, 25, 0, 4, 28, 0, 0, 0, 1, 1, 1]' : 0.168467}
{'[4, 4, 6, 0, 2, 6, 0, 1, 25, 0, 4, 28, 0, 0, 0, 1, 1, 1]' : 0.167458}
{'[4, 4, 6, 0, 2, 6, 0, 1, 25, 0, 4, 28, 0, 0, 0, 1, 1, 1]' : 0.167487}
{'[4, 4, 6, 0, 2, 6, 0, 1, 25, 0, 4, 28, 0, 0, 0, 1, 1, 1]' : 0.167573}
{'[4, 4, 6, 0, 2, 6, 0, 1, 25, 0, 4, 28, 0, 0, 0, 1, 1, 1]' : 0.167587}
{'[4, 4, 6, 0, 2, 6, 0, 1, 25, 0, 4, 28, 0, 0, 0, 1, 1, 1]' : 0.167514}
{'[4, 4, 6, 0, 2, 6, 0, 1, 25, 0, 4, 28, 0, 0, 0, 1, 1, 1]' : 0.167551}
{'[4, 4, 6, 0, 2, 6, 0, 1, 25, 0, 4, 28, 0, 0, 0, 1, 1, 1]' : 0.167758}
{'[4, 4, 6, 0, 2, 6, 0, 1, 25, 0, 4, 28, 0, 0, 0, 1, 1, 1]' : 0.167499}
{'[4, 4, 6, 0, 2, 6, 0, 1, 25, 0, 4, 28, 0, 0, 0, 1, 1, 1]' : 0.167465}
{'[4, 4, 6, 0, 2, 6, 0, 1, 25, 0, 4, 28, 0, 0, 0, 1, 1, 1]' : 0.167421}
{'[4, 4, 6, 0, 2, 6, 0, 1, 25, 0, 4, 28, 0, 0, 0, 1, 1, 1]' : 0.168542}
{'[4, 4, 6, 0, 2, 6, 0, 1, 25, 0, 4, 28, 0, 0, 0, 1, 1, 1]' : 0.167611}
{'[4, 4, 6, 0, 2, 6, 0, 1, 25, 0, 4, 28, 0, 0, 0, 1, 1, 1]' : 0.167436}
{'[4, 4, 6, 0, 2, 6, 0, 1, 25, 0, 4, 28, 0, 0, 0, 1, 1, 1]' : 0.167494}
{'[4, 4, 6, 0, 2, 6, 0, 1, 25, 0, 4, 28, 0, 0, 0, 1, 1, 1]' : 0.167449}
{'[4, 4, 6, 0, 2, 6, 0, 1, 25, 0, 4, 28, 0, 0, 0, 1, 1, 1]' : 0.167452}
{'[4, 4, 6, 0, 2, 6, 0, 1, 25, 0, 4, 28, 0, 0, 0, 1, 1, 1]' : 0.167686}
{'[4, 4, 6, 0, 2, 6, 0, 1, 25, 0, 4, 28, 0, 0, 0, 1, 1, 1]' : 0.167538}
{'[4, 4, 6, 0, 2, 6, 0, 1, 25, 0, 4, 28, 0, 0, 0, 1, 1, 1]' : 0.167498}
{'[4, 4, 6, 0, 2, 6, 0, 1, 25, 0, 4, 28, 0, 0, 0, 1, 1, 1]' : 0.16751}
{'[4, 4, 6, 0, 2, 6, 0, 1, 25, 0, 4, 28, 0, 0, 0, 1, 1, 1]' : 0.167589}
{'[4, 4, 6, 0, 2, 6, 0, 1, 25, 0, 4, 28, 0, 0, 0, 1, 1, 1]' : 0.16744}
{'[4, 4, 6, 0, 2, 6, 0, 1, 25, 0, 4, 28, 0, 0, 0, 1, 1, 1]' : 0.16752}

out:
 ["{'[4, 4, 6, 0, 2, 6, 0, 1, 25, 0, 4, 28, 0, 0, 0, 1, 1, 1]' : 0.167745}", "{'[4, 4, 6, 0, 2, 6, 0, 1, 25, 0, 4, 28, 0, 0, 0, 1, 1, 1]' : 0.16755}", "{'[4, 4, 6, 0, 2, 6, 0, 1, 25, 0, 4, 28, 0, 0, 0, 1, 1, 1]' : 0.167474}", "{'[4, 4, 6, 0, 2, 6, 0, 1, 25, 0, 4, 28, 0, 0, 0, 1, 1, 1]' : 0.167451}", "{'[4, 4, 6, 0, 2, 6, 0, 1, 25, 0, 4, 28, 0, 0, 0, 1, 1, 1]' : 0.167507}", "{'[4, 4, 6, 0, 2, 6, 0, 1, 25, 0, 4, 28, 0, 0, 0, 1, 1, 1]' : 0.167508}", "{'[4, 4, 6, 0, 2, 6, 0, 1, 25, 0, 4, 28, 0, 0, 0, 1, 1, 1]' : 0.168467}", "{'[4, 4, 6, 0, 2, 6, 0, 1, 25, 0, 4, 28, 0, 0, 0, 1, 1, 1]' : 0.167458}", "{'[4, 4, 6, 0, 2, 6, 0, 1, 25, 0, 4, 28, 0, 0, 0, 1, 1, 1]' : 0.167487}", "{'[4, 4, 6, 0, 2, 6, 0, 1, 25, 0, 4, 28, 0, 0, 0, 1, 1, 1]' : 0.167573}", "{'[4, 4, 6, 0, 2, 6, 0, 1, 25, 0, 4, 28, 0, 0, 0, 1, 1, 1]' : 0.167587}", "{'[4, 4, 6, 0, 2, 6, 0, 1, 25, 0, 4, 28, 0, 0, 0, 1, 1, 1]' : 0.167514}", "{'[4, 4, 6, 0, 2, 6, 0, 1, 25, 0, 4, 28, 0, 0, 0, 1, 1, 1]' : 0.167551}", "{'[4, 4, 6, 0, 2, 6, 0, 1, 25, 0, 4, 28, 0, 0, 0, 1, 1, 1]' : 0.167758}", "{'[4, 4, 6, 0, 2, 6, 0, 1, 25, 0, 4, 28, 0, 0, 0, 1, 1, 1]' : 0.167499}", "{'[4, 4, 6, 0, 2, 6, 0, 1, 25, 0, 4, 28, 0, 0, 0, 1, 1, 1]' : 0.167465}", "{'[4, 4, 6, 0, 2, 6, 0, 1, 25, 0, 4, 28, 0, 0, 0, 1, 1, 1]' : 0.167421}", "{'[4, 4, 6, 0, 2, 6, 0, 1, 25, 0, 4, 28, 0, 0, 0, 1, 1, 1]' : 0.168542}", "{'[4, 4, 6, 0, 2, 6, 0, 1, 25, 0, 4, 28, 0, 0, 0, 1, 1, 1]' : 0.167611}", "{'[4, 4, 6, 0, 2, 6, 0, 1, 25, 0, 4, 28, 0, 0, 0, 1, 1, 1]' : 0.167436}", "{'[4, 4, 6, 0, 2, 6, 0, 1, 25, 0, 4, 28, 0, 0, 0, 1, 1, 1]' : 0.167494}", "{'[4, 4, 6, 0, 2, 6, 0, 1, 25, 0, 4, 28, 0, 0, 0, 1, 1, 1]' : 0.167449}", "{'[4, 4, 6, 0, 2, 6, 0, 1, 25, 0, 4, 28, 0, 0, 0, 1, 1, 1]' : 0.167452}", "{'[4, 4, 6, 0, 2, 6, 0, 1, 25, 0, 4, 28, 0, 0, 0, 1, 1, 1]' : 0.167686}", "{'[4, 4, 6, 0, 2, 6, 0, 1, 25, 0, 4, 28, 0, 0, 0, 1, 1, 1]' : 0.167538}", "{'[4, 4, 6, 0, 2, 6, 0, 1, 25, 0, 4, 28, 0, 0, 0, 1, 1, 1]' : 0.167498}", "{'[4, 4, 6, 0, 2, 6, 0, 1, 25, 0, 4, 28, 0, 0, 0, 1, 1, 1]' : 0.16751}", "{'[4, 4, 6, 0, 2, 6, 0, 1, 25, 0, 4, 28, 0, 0, 0, 1, 1, 1]' : 0.167589}", "{'[4, 4, 6, 0, 2, 6, 0, 1, 25, 0, 4, 28, 0, 0, 0, 1, 1, 1]' : 0.16744}", "{'[4, 4, 6, 0, 2, 6, 0, 1, 25, 0, 4, 28, 0, 0, 0, 1, 1, 1]' : 0.16752}"]
returning from 'run': {'[4, 4, 6, 0, 2, 6, 0, 1, 25, 0, 4, 28, 0, 0, 0, 1, 1, 1]': ([0.167745, 0.16755, 0.167474, 0.167451, 0.167507, 0.167508, 0.168467, 0.167458, 0.167487, 0.167573, 0.167587, 0.167514, 0.167551, 0.167758, 0.167499, 0.167465, 0.167421, 0.168542, 0.167611, 0.167436, 0.167494, 0.167449, 0.167452, 0.167686, 0.167538, 0.167498, 0.16751, 0.167589, 0.16744, 0.16752], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.167745, 0.16755, 0.167474, 0.167451, 0.167507, 0.167508, 0.168467, 0.167458, 0.167487, 0.167573, 0.167587, 0.167514, 0.167551, 0.167758, 0.167499, 0.167465, 0.167421, 0.168542, 0.167611, 0.167436, 0.167494, 0.167449, 0.167452, 0.167686, 0.167538, 0.167498, 0.16751, 0.167589, 0.16744, 0.16752], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[4, 4, 6, 0, 2, 6, 0, 1, 25, 0, 4, 28, 0, 0, 0, 1, 1, 1]': ([0.167745, 0.16755, 0.167474, 0.167451, 0.167507, 0.167508, 0.168467, 0.167458, 0.167487, 0.167573, 0.167587, 0.167514, 0.167551, 0.167758, 0.167499, 0.167465, 0.167421, 0.168542, 0.167611, 0.167436, 0.167494, 0.167449, 0.167452, 0.167686, 0.167538, 0.167498, 0.16751, 0.167589, 0.16744, 0.16752], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [2, 2, 3, 5, 2, 6, 0, 0, 29, 26, 0, 0, 0, 1, 1, 0]
Fixed Factors: {'U1_I': 25, 'SCR': 1}
Testing candidate 9: [2, 2, 3, 5, 2, 6, 0, 0, 25, 29, 26, 0, 0, 0, 1, 1, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	6
        Additions: 		4647
        Multiplications: 	2294
        Divisions: 		0
        Logical: 		0
        Reads: 			8680
        Writes: 		1378
        Comparisons:		22
        Gotos: 			0
        
digraph CFG {
	_JOIN_8895674 [label="_JOIN_8895674None...",shape=box];
	_JOIN_8895674 -> _JOIN_8895676;
	ForLoop8895674 [label="ForLoop8895674  for (i=(min(nx-1,ii+31))-(((min(nx-1,ii+31))-(ii)+1)%30)+1; i<=min(nx-1,ii+31); i=i+1) {...",shape=box];
	ForLoop8895674 -> 9048383;
	ForLoop8895674 -> _JOIN_8895674;
	8994522 [label="8994522  double scv_29, scv_30, scv_31, scv_32, scv_33, scv_34, scv_35, scv_36;...",shape=box];
	ForLoop8895354 [label="ForLoop8895354  for (jjj=0; jjj<=ny-1; jjj=jjj+128) {...",shape=box];
	ForLoop8895354 -> ForLoop8895353;
	ForLoop8895354 -> _JOIN_8895354;
	8857317 [label="8857317  double x_copy;...",shape=box];
	ForLoop8893706 [label="ForLoop8893706  for (kt=kk; kt<=min(ny-1,kk+63)-7; kt=kt+8) {...",shape=box];
	ForLoop8893706 -> 8994522;
	ForLoop8893706 -> _JOIN_8893706;
	9048383 [label="9048383  double scv_77;...",shape=box];
	_JOIN_8895354 [label="_JOIN_8895354None...",shape=box];
	_JOIN_8895354 -> ForLoop8895672;
	ForLoop8895283 [label="ForLoop8895283  for (j=jj; j<=min(ny-1,jj+31)-26; j=j+27) {...",shape=box];
	ForLoop8895283 -> 8894631;
	ForLoop8895283 -> _JOIN_8895283;
	8857350 [label="8857350  int i;...",shape=box];
	8857350 -> ForLoop8894506;
	_JOIN_8895351 [label="_JOIN_8895351None...",shape=box];
	_JOIN_8895351 -> _JOIN_8895353;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 8651210;
	8894591 [label="8894591  int j;...",shape=box];
	8894591 -> ForLoop8895283;
	8651642 [label="8651642  y[i]=0.0;...",shape=box];
	_JOIN_8895669 [label="_JOIN_8895669None...",shape=box];
	_JOIN_8895669 -> _JOIN_8895671;
	ForLoop8894502 [label="ForLoop8894502  for (kk=kkk; kk<=min(ny-1,kkk+1984); kk=kk+64) {...",shape=box];
	ForLoop8894502 -> ForLoop8893706;
	ForLoop8894502 -> _JOIN_8894502;
	_JOIN_8885781 [label="_JOIN_8885781None...",shape=box];
	_JOIN_8885781 -> ForLoop8894504;
	ForLoop8894500 [label="ForLoop8894500  for (k=kt; k<=min(ny-1,kk+63); k=k+1) {...",shape=box];
	ForLoop8894500 -> 8996235;
	ForLoop8894500 -> _JOIN_8894500;
	ForLoop8894506 [label="ForLoop8894506  for (i=ii; i<=min(nx-1,ii+31)-29; i=i+30) {...",shape=box];
	ForLoop8894506 -> 9040539;
	ForLoop8894506 -> _JOIN_8894506;
	ForLoop8894504 [label="ForLoop8894504  for (kkk=0; kkk<=ny-1; kkk=kkk+2048) {...",shape=box];
	ForLoop8894504 -> ForLoop8894502;
	ForLoop8894504 -> _JOIN_8894504;
	8932755 [label="8932755  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	ForLoop8895630 [label="ForLoop8895630  for (kt=kk; kt<=min(ny-1,kk+63)-7; kt=kt+8) {...",shape=box];
	ForLoop8895630 -> 9046167;
	ForLoop8895630 -> _JOIN_8895630;
	8651210 [label="8651210  int i;...",shape=box];
	ForLoop8895676 [label="ForLoop8895676  for (ii=iii; ii<=min(nx-1,iii+992); ii=ii+32) {...",shape=box];
	ForLoop8895676 -> 8857350;
	ForLoop8895676 -> _JOIN_8895676;
	ForLoop8895677 [label="ForLoop8895677  for (iii=0; iii<=nx-1; iii=iii+1024) {...",shape=box];
	ForLoop8895677 -> ForLoop8895676;
	ForLoop8895677 -> _JOIN_8895677;
	8857669 [label="8857669  int j;...",shape=box];
	_JOIN_8894500 [label="_JOIN_8894500None...",shape=box];
	_JOIN_8894500 -> _JOIN_8894502;
	ForLoop8895672 [label="ForLoop8895672  for (kkk=0; kkk<=ny-1; kkk=kkk+2048) {...",shape=box];
	ForLoop8895672 -> ForLoop8895671;
	ForLoop8895672 -> _JOIN_8895672;
	ForLoop8651938 [label="ForLoop8651938  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop8651938 -> 8651937;
	ForLoop8651938 -> _JOIN_8651938;
	_JOIN_8895283 [label="_JOIN_8895283None...",shape=box];
	_JOIN_8895283 -> ForLoop8895351;
	_JOIN_8885779 [label="_JOIN_8885779None...",shape=box];
	_JOIN_8885779 -> _JOIN_8885781;
	_JOIN_8651869 [label="_JOIN_8651869None...",shape=box];
	_JOIN_8651869 -> 8652213;
	8935038 [label="8935038  double scv_28;...",shape=box];
	ForLoop8885781 [label="ForLoop8885781  for (jjj=0; jjj<=ny-1; jjj=jjj+128) {...",shape=box];
	ForLoop8885781 -> ForLoop8885779;
	ForLoop8885781 -> _JOIN_8885781;
	_expected=9369846271501.798828
actual=9369846271501.798828
JOIN_8893706 [label="_JOIN_8893706None...",shape=box];
	_JOIN_8893706 -> ForLoop8894500;
	8651937 [label="8651937  y[i]=0.0;...",shape=box];
	8651937 -> _JOIN_8651938;
	_JOIN_8885777 [label="_JOIN_8885777None...",shape=box];
	_JOIN_8885777 -> _JOIN_8885779;
	_JOIN_8884867 [label="_JOIN_8884867None...",shape=box];
	_JOIN_8884867 -> ForLoop8885777;
	9046167 [label="9046167  double scv_68, scv_69, scv_70, scv_71, scv_72, scv_73, scv_74, scv_75;...",shape=box];
	9048395 [label="9048395  tmp[i]=scv_77;...",shape=box];
	9048395 -> _JOIN_8895674;
	9040557 [label="9040557  tmp[(i+20)]=scv_38;...",shape=box];
	_JOIN_8894506 [label="_JOIN_8894506None...",shape=box];
	_JOIN_8894506 -> ForLoop8895674;
	_JOIN_8894504 [label="_JOIN_8894504None...",shape=box];
	_JOIN_8894504 -> 9040557;
	_JOIN_8894502 [label="_JOIN_8894502None...",shape=box];
	_JOIN_8894502 -> _JOIN_8894504;
	ForLoop8884867 [label="ForLoop8884867  for (j=jj; j<=min(ny-1,jj+31)-26; j=j+27) {...",shape=box];
	ForLoop8884867 -> 8932755;
	ForLoop8884867 -> _JOIN_8884867;
	9040539 [label="9040539  double scv_38, scv_39, scv_40, scv_41, scv_42, scv_43, scv_44, scv_45;...",shape=box];
	8652213 [label="8652213  register int cbv_2, cbv_3;...",shape=box];
	_JOIN_8895630 [label="_JOIN_8895630None...",shape=box];
	_JOIN_8895630 -> ForLoop8895669;
	ForLoop8885779 [label="ForLoop8885779  for (jj=jjj; jj<=min(ny-1,jjj+96); jj=jj+32) {...",shape=box];
	ForLoop8885779 -> 8857669;
	ForLoop8885779 -> _JOIN_8885779;
	ForLoop8895351 [label="ForLoop8895351  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jj)+1)%27)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop8895351 -> 8895350;
	ForLoop8895351 -> _JOIN_8895351;
	_JOIN_8895677 [label="_JOIN_8895677None...",shape=box];
	ForLoop8895353 [label="ForLoop8895353  for (jj=jjj; jj<=min(ny-1,jjj+96); jj=jj+32) {...",shape=box];
	ForLoop8895353 -> 8894591;
	ForLoop8895353 -> _JOIN_8895353;
	9046371 [label="9046371  double scv_76;...",shape=box];
	_JOIN_8895672 [label="_JOIN_8895672None...",shape=box];
	_JOIN_8895672 -> 9048395;
	ForLoop8885777 [label="ForLoop8885777  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jj)+1)%27)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop8885777 -> 8935038;
	ForLoop8885777 -> _JOIN_8885777;
	_JOIN_8895671 [label="_JOIN_8895671None...",shape=box];
	_JOIN_8895671 -> _JOIN_8895672;
	8894631 [label="8894631  scv_77=scv_77+A[i*ny+j]*x[j];...",shape=box];
	_JOIN_8895676 [label="_JOIN_8895676None...",shape=box];
	_JOIN_8895676 -> _JOIN_8895677;
	_JOIN_8895353 [label="_JOIN_8895353None...",shape=box];
	_JOIN_8895353 -> _JOIN_8895354;
	ForLoop8895669 [label="ForLoop8895669  for (k=kt; k<=min(ny-1,kk+63); k=k+1) {...",shape=box];
	ForLoop8895669 -> 9046371;
	ForLoop8895669 -> _JOIN_8895669;
	8996235 [label="8996235  double scv_37;...",shape=box];
	ForLoop8651869 [label="ForLoop8651869  for (i=0; i<=cbv_1; i=i+26) {...",shape=box];
	ForLoop8651869 -> 8651642;
	ForLoop8651869 -> _JOIN_8651869;
	_JOIN_8651938 [label="_JOIN_8651938None...",shape=box];
	_JOIN_8651938 -> 8857317;
	8895350 [label="8895350  scv_77=scv_77+A[i*ny+j]*x[j];...",shape=box];
	8895350 -> _JOIN_8895351;
	ForLoop8895671 [label="ForLoop8895671  for (kk=kkk; kk<=min(ny-1,kkk+1984); kk=kk+64) {...",shape=box];
	ForLoop8895671 -> ForLoop8895630;
	ForLoop8895671 -> _JOIN_8895671;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest46.exe __orio_perftest46.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest46.exe  
{'[2, 2, 3, 5, 2, 6, 0, 0, 25, 29, 26, 0, 0, 0, 1, 1, 1, 0]' : 0.230636}
{'[2, 2, 3, 5, 2, 6, 0, 0, 25, 29, 26, 0, 0, 0, 1, 1, 1, 0]' : 0.225309}
{'[2, 2, 3, 5, 2, 6, 0, 0, 25, 29, 26, 0, 0, 0, 1, 1, 1, 0]' : 0.225803}
{'[2, 2, 3, 5, 2, 6, 0, 0, 25, 29, 26, 0, 0, 0, 1, 1, 1, 0]' : 0.226108}
{'[2, 2, 3, 5, 2, 6, 0, 0, 25, 29, 26, 0, 0, 0, 1, 1, 1, 0]' : 0.224854}
{'[2, 2, 3, 5, 2, 6, 0, 0, 25, 29, 26, 0, 0, 0, 1, 1, 1, 0]' : 0.225692}
{'[2, 2, 3, 5, 2, 6, 0, 0, 25, 29, 26, 0, 0, 0, 1, 1, 1, 0]' : 0.264516}
{'[2, 2, 3, 5, 2, 6, 0, 0, 25, 29, 26, 0, 0, 0, 1, 1, 1, 0]' : 0.226767}
{'[2, 2, 3, 5, 2, 6, 0, 0, 25, 29, 26, 0, 0, 0, 1, 1, 1, 0]' : 0.225984}
{'[2, 2, 3, 5, 2, 6, 0, 0, 25, 29, 26, 0, 0, 0, 1, 1, 1, 0]' : 0.225003}
{'[2, 2, 3, 5, 2, 6, 0, 0, 25, 29, 26, 0, 0, 0, 1, 1, 1, 0]' : 0.225261}
{'[2, 2, 3, 5, 2, 6, 0, 0, 25, 29, 26, 0, 0, 0, 1, 1, 1, 0]' : 0.225641}
{'[2, 2, 3, 5, 2, 6, 0, 0, 25, 29, 26, 0, 0, 0, 1, 1, 1, 0]' : 0.22559}
{'[2, 2, 3, 5, 2, 6, 0, 0, 25, 29, 26, 0, 0, 0, 1, 1, 1, 0]' : 0.225907}
{'[2, 2, 3, 5, 2, 6, 0, 0, 25, 29, 26, 0, 0, 0, 1, 1, 1, 0]' : 0.225188}
{'[2, 2, 3, 5, 2, 6, 0, 0, 25, 29, 26, 0, 0, 0, 1, 1, 1, 0]' : 0.226092}
{'[2, 2, 3, 5, 2, 6, 0, 0, 25, 29, 26, 0, 0, 0, 1, 1, 1, 0]' : 0.224756}
{'[2, 2, 3, 5, 2, 6, 0, 0, 25, 29, 26, 0, 0, 0, 1, 1, 1, 0]' : 0.225674}
{'[2, 2, 3, 5, 2, 6, 0, 0, 25, 29, 26, 0, 0, 0, 1, 1, 1, 0]' : 0.225368}
{'[2, 2, 3, 5, 2, 6, 0, 0, 25, 29, 26, 0, 0, 0, 1, 1, 1, 0]' : 0.224838}
{'[2, 2, 3, 5, 2, 6, 0, 0, 25, 29, 26, 0, 0, 0, 1, 1, 1, 0]' : 0.225587}
{'[2, 2, 3, 5, 2, 6, 0, 0, 25, 29, 26, 0, 0, 0, 1, 1, 1, 0]' : 0.225356}
{'[2, 2, 3, 5, 2, 6, 0, 0, 25, 29, 26, 0, 0, 0, 1, 1, 1, 0]' : 0.224735}
{'[2, 2, 3, 5, 2, 6, 0, 0, 25, 29, 26, 0, 0, 0, 1, 1, 1, 0]' : 0.225657}
{'[2, 2, 3, 5, 2, 6, 0, 0, 25, 29, 26, 0, 0, 0, 1, 1, 1, 0]' : 0.225498}
{'[2, 2, 3, 5, 2, 6, 0, 0, 25, 29, 26, 0, 0, 0, 1, 1, 1, 0]' : 0.225488}
{'[2, 2, 3, 5, 2, 6, 0, 0, 25, 29, 26, 0, 0, 0, 1, 1, 1, 0]' : 0.227488}
{'[2, 2, 3, 5, 2, 6, 0, 0, 25, 29, 26, 0, 0, 0, 1, 1, 1, 0]' : 0.2259}
{'[2, 2, 3, 5, 2, 6, 0, 0, 25, 29, 26, 0, 0, 0, 1, 1, 1, 0]' : 0.225336}
{'[2, 2, 3, 5, 2, 6, 0, 0, 25, 29, 26, 0, 0, 0, 1, 1, 1, 0]' : 0.225625}

out:
 ["{'[2, 2, 3, 5, 2, 6, 0, 0, 25, 29, 26, 0, 0, 0, 1, 1, 1, 0]' : 0.230636}", "{'[2, 2, 3, 5, 2, 6, 0, 0, 25, 29, 26, 0, 0, 0, 1, 1, 1, 0]' : 0.225309}", "{'[2, 2, 3, 5, 2, 6, 0, 0, 25, 29, 26, 0, 0, 0, 1, 1, 1, 0]' : 0.225803}", "{'[2, 2, 3, 5, 2, 6, 0, 0, 25, 29, 26, 0, 0, 0, 1, 1, 1, 0]' : 0.226108}", "{'[2, 2, 3, 5, 2, 6, 0, 0, 25, 29, 26, 0, 0, 0, 1, 1, 1, 0]' : 0.224854}", "{'[2, 2, 3, 5, 2, 6, 0, 0, 25, 29, 26, 0, 0, 0, 1, 1, 1, 0]' : 0.225692}", "{'[2, 2, 3, 5, 2, 6, 0, 0, 25, 29, 26, 0, 0, 0, 1, 1, 1, 0]' : 0.264516}", "{'[2, 2, 3, 5, 2, 6, 0, 0, 25, 29, 26, 0, 0, 0, 1, 1, 1, 0]' : 0.226767}", "{'[2, 2, 3, 5, 2, 6, 0, 0, 25, 29, 26, 0, 0, 0, 1, 1, 1, 0]' : 0.225984}", "{'[2, 2, 3, 5, 2, 6, 0, 0, 25, 29, 26, 0, 0, 0, 1, 1, 1, 0]' : 0.225003}", "{'[2, 2, 3, 5, 2, 6, 0, 0, 25, 29, 26, 0, 0, 0, 1, 1, 1, 0]' : 0.225261}", "{'[2, 2, 3, 5, 2, 6, 0, 0, 25, 29, 26, 0, 0, 0, 1, 1, 1, 0]' : 0.225641}", "{'[2, 2, 3, 5, 2, 6, 0, 0, 25, 29, 26, 0, 0, 0, 1, 1, 1, 0]' : 0.22559}", "{'[2, 2, 3, 5, 2, 6, 0, 0, 25, 29, 26, 0, 0, 0, 1, 1, 1, 0]' : 0.225907}", "{'[2, 2, 3, 5, 2, 6, 0, 0, 25, 29, 26, 0, 0, 0, 1, 1, 1, 0]' : 0.225188}", "{'[2, 2, 3, 5, 2, 6, 0, 0, 25, 29, 26, 0, 0, 0, 1, 1, 1, 0]' : 0.226092}", "{'[2, 2, 3, 5, 2, 6, 0, 0, 25, 29, 26, 0, 0, 0, 1, 1, 1, 0]' : 0.224756}", "{'[2, 2, 3, 5, 2, 6, 0, 0, 25, 29, 26, 0, 0, 0, 1, 1, 1, 0]' : 0.225674}", "{'[2, 2, 3, 5, 2, 6, 0, 0, 25, 29, 26, 0, 0, 0, 1, 1, 1, 0]' : 0.225368}", "{'[2, 2, 3, 5, 2, 6, 0, 0, 25, 29, 26, 0, 0, 0, 1, 1, 1, 0]' : 0.224838}", "{'[2, 2, 3, 5, 2, 6, 0, 0, 25, 29, 26, 0, 0, 0, 1, 1, 1, 0]' : 0.225587}", "{'[2, 2, 3, 5, 2, 6, 0, 0, 25, 29, 26, 0, 0, 0, 1, 1, 1, 0]' : 0.225356}", "{'[2, 2, 3, 5, 2, 6, 0, 0, 25, 29, 26, 0, 0, 0, 1, 1, 1, 0]' : 0.224735}", "{'[2, 2, 3, 5, 2, 6, 0, 0, 25, 29, 26, 0, 0, 0, 1, 1, 1, 0]' : 0.225657}", "{'[2, 2, 3, 5, 2, 6, 0, 0, 25, 29, 26, 0, 0, 0, 1, 1, 1, 0]' : 0.225498}", "{'[2, 2, 3, 5, 2, 6, 0, 0, 25, 29, 26, 0, 0, 0, 1, 1, 1, 0]' : 0.225488}", "{'[2, 2, 3, 5, 2, 6, 0, 0, 25, 29, 26, 0, 0, 0, 1, 1, 1, 0]' : 0.227488}", "{'[2, 2, 3, 5, 2, 6, 0, 0, 25, 29, 26, 0, 0, 0, 1, 1, 1, 0]' : 0.2259}", "{'[2, 2, 3, 5, 2, 6, 0, 0, 25, 29, 26, 0, 0, 0, 1, 1, 1, 0]' : 0.225336}", "{'[2, 2, 3, 5, 2, 6, 0, 0, 25, 29, 26, 0, 0, 0, 1, 1, 1, 0]' : 0.225625}"]
returning from 'run': {'[2, 2, 3, 5, 2, 6, 0, 0, 25, 29, 26, 0, 0, 0, 1, 1, 1, 0]': ([0.230636, 0.225309, 0.225803, 0.226108, 0.224854, 0.225692, 0.264516, 0.226767, 0.225984, 0.225003, 0.225261, 0.225641, 0.22559, 0.225907, 0.225188, 0.226WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = iii
092, 0.224756, 0.225674, 0.225368, 0.224838, 0.225587, 0.225356, 0.224735, 0.225657, 0.225498, 0.225488, 0.227488, 0.2259, 0.225336, 0.225625], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.230636, 0.225309, 0.225803, 0.226108, 0.224854, 0.225692, 0.264516, 0.226767, 0.225984, 0.225003, 0.225261, 0.225641, 0.22559, 0.225907, 0.225188, 0.226092, 0.224756, 0.225674, 0.225368, 0.224838, 0.225587, 0.225356, 0.224735, 0.225657, 0.225498, 0.225488, 0.227488, 0.2259, 0.225336, 0.225625], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[2, 2, 3, 5, 2, 6, 0, 0, 25, 29, 26, 0, 0, 0, 1, 1, 1, 0]': ([0.230636, 0.225309, 0.225803, 0.226108, 0.224854, 0.225692, 0.264516, 0.226767, 0.225984, 0.225003, 0.225261, 0.225641, 0.22559, 0.225907, 0.225188, 0.226092, 0.224756, 0.225674, 0.225368, 0.224838, 0.225587, 0.225356, 0.224735, 0.225657, 0.225498, 0.225488, 0.227488, 0.2259, 0.225336, 0.225625], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [6, 1, 2, 4, 0, 2, 1, 1, 0, 24, 24, 0, 0, 0, 0, 0]
Fixed Factors: {'U1_I': 25, 'SCR': 1}
Testing candidate 10: [6, 1, 2, 4, 0, 2, 1, 1, 25, 0, 24, 24, 0, 0, 0, 1, 0, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		390
        Multiplications: 	104
        Divisions: 		0
        Logical: 		0
        Reads: 			798
        Writes: 		165
        Comparisons:		14
        Gotos: 			0
        
digraph CFG {
	_JOIN_9120201 [label="_JOIN_9120201None...",shape=box];
	_JOIN_9120201 -> ForLoop9121189;
	9120263 [label="9120263  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	ForLoop9121192 [label="ForLoop9121192  for (ii=0; ii<=nx-1; ii=ii+512) {...",shape=box];
	ForLoop9121192 -> ForLoop9121191;
	ForLoop9121192 -> _JOIN_9121192;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 9095066;
	ForLoop9121191 [label="ForLoop9121191  for (i=ii; i<=min(nx-1,ii+511); i=i+1) {...",shape=box];
	ForLoop9121191 -> 9129550;
	ForLoop9121191 -> _JOIN_9121191;
	_JOIN_9095725 [label="_JOIN_9095725None...",shape=box];
	_JOIN_9095725 -> ForLoop9095794;
	9095066 [label="9095066  int i;...",shape=box];
	9095066 -> ForLoop9095725;
	_JOIN_9121191 [label="_JOIN_9121191None...",shape=box];
	_JOIN_9121191 -> _JOIN_9121192;
	ForLoop9095794 [label="ForLoop9095794  for (i=ny-((ny-(0))%26); i<=ny-1; i=i+1) ...",shape=box];
	ForLoop9095794 -> 9095793;
	ForLoop9095794 -> _JOIN_9095794;
	9119351 [label="9119351  double x_copy[16];...",shape=box];
	9095793 [label="9095793  y[i]=0.0;...",shape=box];
	9095793 -> _JOIN_9095794;
	ForLoop9121080 [label="ForLoop9121080  for (k=kk; k<=min(ny-1,kk+31)-24; k=k+25) {...",shape=box];
	ForLoop9121080 -> 9124414;
	ForLoop9121080 -> _JOIN_9121080;
	_JOIN_9121154 [label="_JOIN_9121154None...",shape=box];
	_JOIN_9121154 -> 9121186;
	9129550 [label="9129550  double scv_27;...",shape=box];
	9095498 [label="9095498  y[i]=0.0;...",shape=box];
	ForLoop9120201 [label="ForLoop9120201  for (jj=0; jj<=ny-1; jj=jj+16) {...",shape=box];
	ForLoop9120201 -> 9119433;
	ForLoop9120201 -> _JOIN_9120201;
	_JOIN_9121189 [label="_JOIN_9121189None...",shape=box];
	_JOIN_9121189 -> 9129562;
	_JOIN_9120127 [label="_JOIN_9120127None...",shape=box];
	_JOIN_9120127 -> ForLoop9120198;
	9125118 [label="9125118  double scv_26;...",shape=box];
	ForLoop9095725 [label="ForLoop9095725  for (i=0; i<=ny-26; i=i+26) {...",shape=box];
	ForLoop9095725 -> 9095498;
	ForLoop9095725 -> _JOIN_9095725;
	ForLoop9121189 [label="ForLoop9121189  for (kkk=0; kkk<=ny-1; kkk=kkk+128) {...",shape=box];
	ForLoop9121189 -> ForLoop9121188;
	ForLoop9121189 -> _JOIN_9121189;
	ForLoop9121188 [label="ForLoop9121188  for (kk=kkk; kk<=min(ny-1,kkk+96); kk=kk+32) {...",shape=box];
	ForLoop912expected=9369846271501.798828
actual=9369846271501.798828
1188 -> 9120263;
	ForLoop9121188 -> _JOIN_9121188;
	ForLoop9120198 [label="ForLoop9120198  for (j=(min(ny-1,jj+15))-(((min(ny-1,jj+15))-(jj)+1)%25)+1; j<=min(ny-1,jj+15); j=j+1) {...",shape=box];
	ForLoop9120198 -> 9120197;
	ForLoop9120198 -> _JOIN_9120198;
	9120197 [label="9120197  scv_27=scv_27+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	9120197 -> _JOIN_9120198;
	_JOIN_9121080 [label="_JOIN_9121080None...",shape=box];
	_JOIN_9121080 -> ForLoop9121154;
	_JOIN_9121188 [label="_JOIN_9121188None...",shape=box];
	_JOIN_9121188 -> _JOIN_9121189;
	9119433 [label="9119433  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	9119477 [label="9119477  scv_27=scv_27+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_9095794 [label="_JOIN_9095794None...",shape=box];
	_JOIN_9095794 -> 9119351;
	_JOIN_9121192 [label="_JOIN_9121192None...",shape=box];
	ForLoop9120127 [label="ForLoop9120127  for (j=jj; j<=min(ny-1,jj+15)-24; j=j+25) {...",shape=box];
	ForLoop9120127 -> 9119477;
	ForLoop9120127 -> _JOIN_9120127;
	9124414 [label="9124414  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	9129562 [label="9129562  tmp[i]=scv_27;...",shape=box];
	9129562 -> _JOIN_9121191;
	9121186 [label="9121186  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	9121186 -> _JOIN_9121188;
	_JOIN_9120198 [label="_JOIN_9120198None...",shape=box];
	_JOIN_9120198 -> _JOIN_9120201;
	ForLoop9121154 [label="ForLoop9121154  for (k=(min(ny-1,kk+31))-(((min(ny-1,kk+31))-(kk)+1)%25)+1; k<=min(ny-1,kk+31); k=k+1) {...",shape=box];
	ForLoop9121154 -> 9125118;
	ForLoop9121154 -> _JOIN_9121154;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest47.exe __orio_perftest47.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest47.exe  
{'[6, 1, 2, 4, 0, 2, 1, 1, 25, 0, 24, 24, 0, 0, 0, 1, 0, 0]' : 0.251336}
{'[6, 1, 2, 4, 0, 2, 1, 1, 25, 0, 24, 24, 0, 0, 0, 1, 0, 0]' : 0.251585}
{'[6, 1, 2, 4, 0, 2, 1, 1, 25, 0, 24, 24, 0, 0, 0, 1, 0, 0]' : 0.25148}
{'[6, 1, 2, 4, 0, 2, 1, 1, 25, 0, 24, 24, 0, 0, 0, 1, 0, 0]' : 0.251541}
{'[6, 1, 2, 4, 0, 2, 1, 1, 25, 0, 24, 24, 0, 0, 0, 1, 0, 0]' : 0.25618}
{'[6, 1, 2, 4, 0, 2, 1, 1, 25, 0, 24, 24, 0, 0, 0, 1, 0, 0]' : 0.251389}
{'[6, 1, 2, 4, 0, 2, 1, 1, 25, 0, 24, 24, 0, 0, 0, 1, 0, 0]' : 0.251346}
{'[6, 1, 2, 4, 0, 2, 1, 1, 25, 0, 24, 24, 0, 0, 0, 1, 0, 0]' : 0.251462}
{'[6, 1, 2, 4, 0, 2, 1, 1, 25, 0, 24, 24, 0, 0, 0, 1, 0, 0]' : 0.251315}
{'[6, 1, 2, 4, 0, 2, 1, 1, 25, 0, 24, 24, 0, 0, 0, 1, 0, 0]' : 0.251587}
{'[6, 1, 2, 4, 0, 2, 1, 1, 25, 0, 24, 24, 0, 0, 0, 1, 0, 0]' : 0.256182}
{'[6, 1, 2, 4, 0, 2, 1, 1, 25, 0, 24, 24, 0, 0, 0, 1, 0, 0]' : 0.251523}
{'[6, 1, 2, 4, 0, 2, 1, 1, 25, 0, 24, 24, 0, 0, 0, 1, 0, 0]' : 0.251309}
{'[6, 1, 2, 4, 0, 2, 1, 1, 25, 0, 24, 24, 0, 0, 0, 1, 0, 0]' : 0.251502}
{'[6, 1, 2, 4, 0, 2, 1, 1, 25, 0, 24, 24, 0, 0, 0, 1, 0, 0]' : 0.251428}
{'[6, 1, 2, 4, 0, 2, 1, 1, 25, 0, 24, 24, 0, 0, 0, 1, 0, 0]' : 0.251405}
{'[6, 1, 2, 4, 0, 2, 1, 1, 25, 0, 24, 24, 0, 0, 0, 1, 0, 0]' : 0.25618}
{'[6, 1, 2, 4, 0, 2, 1, 1, 25, 0, 24, 24, 0, 0, 0, 1, 0, 0]' : 0.251417}
{'[6, 1, 2, 4, 0, 2, 1, 1, 25, 0, 24, 24, 0, 0, 0, 1, 0, 0]' : 0.25142}
{'[6, 1, 2, 4, 0, 2, 1, 1, 25, 0, 24, 24, 0, 0, 0, 1, 0, 0]' : 0.25147}
{'[6, 1, 2, 4, 0, 2, 1, 1, 25, 0, 24, 24, 0, 0, 0, 1, 0, 0]' : 0.251322}
{'[6, 1, 2, 4, 0, 2, 1, 1, 25, 0, 24, 24, 0, 0, 0, 1, 0, 0]' : 0.251298}
{'[6, 1, 2, 4, 0, 2, 1, 1, 25, 0, 24, 24, 0, 0, 0, 1, 0, 0]' : 0.256142}
{'[6, 1, 2, 4, 0, 2, 1, 1, 25, 0, 24, 24, 0, 0, 0, 1, 0, 0]' : 0.251478}
{'[6, 1, 2, 4, 0, 2, 1, 1, 25, 0, 24, 24, 0, 0, 0, 1, 0, 0]' : 0.251412}
{'[6, 1, 2, 4, 0, 2, 1, 1, 25, 0, 24, 24, 0, 0, 0, 1, 0, 0]' : 0.251345}
{'[6, 1, 2, 4, 0, 2, 1, 1, 25, 0, 24, 24, 0, 0, 0, 1, 0, 0]' : 0.25128}
{'[6, 1, 2, 4, 0, 2, 1, 1, 25, 0, 24, 24, 0, 0, 0, 1, 0, 0]' : 0.251459}
{'[6, 1, 2, 4, 0, 2, 1, 1, 25, 0, 24, 24, 0, 0, 0, 1, 0, 0]' : 0.256171}
{'[6, 1, 2, 4, 0, 2, 1, 1, 25, 0, 24, 24, 0, 0, 0, 1, 0, 0]' : 0.251445}

out:
 ["{'[6, 1, 2, 4, 0, 2, 1, 1, 25, 0, 24, 24, 0, 0, 0, 1, 0, 0]' : 0.251336}", "{'[6, 1, 2, 4, 0, 2, 1, 1, 25, 0, 24, 24, 0, 0, 0, WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
1, 0, 0]' : 0.251585}", "{'[6, 1, 2, 4, 0, 2, 1, 1, 25, 0, 24, 24, 0, 0, 0, 1, 0, 0]' : 0.25148}", "{'[6, 1, 2, 4, 0, 2, 1, 1, 25, 0, 24, 24, 0, 0, 0, 1, 0, 0]' : 0.251541}", "{'[6, 1, 2, 4, 0, 2, 1, 1, 25, 0, 24, 24, 0, 0, 0, 1, 0, 0]' : 0.25618}", "{'[6, 1, 2, 4, 0, 2, 1, 1, 25, 0, 24, 24, 0, 0, 0, 1, 0, 0]' : 0.251389}", "{'[6, 1, 2, 4, 0, 2, 1, 1, 25, 0, 24, 24, 0, 0, 0, 1, 0, 0]' : 0.251346}", "{'[6, 1, 2, 4, 0, 2, 1, 1, 25, 0, 24, 24, 0, 0, 0, 1, 0, 0]' : 0.251462}", "{'[6, 1, 2, 4, 0, 2, 1, 1, 25, 0, 24, 24, 0, 0, 0, 1, 0, 0]' : 0.251315}", "{'[6, 1, 2, 4, 0, 2, 1, 1, 25, 0, 24, 24, 0, 0, 0, 1, 0, 0]' : 0.251587}", "{'[6, 1, 2, 4, 0, 2, 1, 1, 25, 0, 24, 24, 0, 0, 0, 1, 0, 0]' : 0.256182}", "{'[6, 1, 2, 4, 0, 2, 1, 1, 25, 0, 24, 24, 0, 0, 0, 1, 0, 0]' : 0.251523}", "{'[6, 1, 2, 4, 0, 2, 1, 1, 25, 0, 24, 24, 0, 0, 0, 1, 0, 0]' : 0.251309}", "{'[6, 1, 2, 4, 0, 2, 1, 1, 25, 0, 24, 24, 0, 0, 0, 1, 0, 0]' : 0.251502}", "{'[6, 1, 2, 4, 0, 2, 1, 1, 25, 0, 24, 24, 0, 0, 0, 1, 0, 0]' : 0.251428}", "{'[6, 1, 2, 4, 0, 2, 1, 1, 25, 0, 24, 24, 0, 0, 0, 1, 0, 0]' : 0.251405}", "{'[6, 1, 2, 4, 0, 2, 1, 1, 25, 0, 24, 24, 0, 0, 0, 1, 0, 0]' : 0.25618}", "{'[6, 1, 2, 4, 0, 2, 1, 1, 25, 0, 24, 24, 0, 0, 0, 1, 0, 0]' : 0.251417}", "{'[6, 1, 2, 4, 0, 2, 1, 1, 25, 0, 24, 24, 0, 0, 0, 1, 0, 0]' : 0.25142}", "{'[6, 1, 2, 4, 0, 2, 1, 1, 25, 0, 24, 24, 0, 0, 0, 1, 0, 0]' : 0.25147}", "{'[6, 1, 2, 4, 0, 2, 1, 1, 25, 0, 24, 24, 0, 0, 0, 1, 0, 0]' : 0.251322}", "{'[6, 1, 2, 4, 0, 2, 1, 1, 25, 0, 24, 24, 0, 0, 0, 1, 0, 0]' : 0.251298}", "{'[6, 1, 2, 4, 0, 2, 1, 1, 25, 0, 24, 24, 0, 0, 0, 1, 0, 0]' : 0.256142}", "{'[6, 1, 2, 4, 0, 2, 1, 1, 25, 0, 24, 24, 0, 0, 0, 1, 0, 0]' : 0.251478}", "{'[6, 1, 2, 4, 0, 2, 1, 1, 25, 0, 24, 24, 0, 0, 0, 1, 0, 0]' : 0.251412}", "{'[6, 1, 2, 4, 0, 2, 1, 1, 25, 0, 24, 24, 0, 0, 0, 1, 0, 0]' : 0.251345}", "{'[6, 1, 2, 4, 0, 2, 1, 1, 25, 0, 24, 24, 0, 0, 0, 1, 0, 0]' : 0.25128}", "{'[6, 1, 2, 4, 0, 2, 1, 1, 25, 0, 24, 24, 0, 0, 0, 1, 0, 0]' : 0.251459}", "{'[6, 1, 2, 4, 0, 2, 1, 1, 25, 0, 24, 24, 0, 0, 0, 1, 0, 0]' : 0.256171}", "{'[6, 1, 2, 4, 0, 2, 1, 1, 25, 0, 24, 24, 0, 0, 0, 1, 0, 0]' : 0.251445}"]
returning from 'run': {'[6, 1, 2, 4, 0, 2, 1, 1, 25, 0, 24, 24, 0, 0, 0, 1, 0, 0]': ([0.251336, 0.251585, 0.25148, 0.251541, 0.25618, 0.251389, 0.251346, 0.251462, 0.251315, 0.251587, 0.256182, 0.251523, 0.251309, 0.251502, 0.251428, 0.251405, 0.25618, 0.251417, 0.25142, 0.25147, 0.251322, 0.251298, 0.256142, 0.251478, 0.251412, 0.251345, 0.25128, 0.251459, 0.256171, 0.251445], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.251336, 0.251585, 0.25148, 0.251541, 0.25618, 0.251389, 0.251346, 0.251462, 0.251315, 0.251587, 0.256182, 0.251523, 0.251309, 0.251502, 0.251428, 0.251405, 0.25618, 0.251417, 0.25142, 0.25147, 0.251322, 0.251298, 0.256142, 0.251478, 0.251412, 0.251345, 0.25128, 0.251459, 0.256171, 0.251445], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[6, 1, 2, 4, 0, 2, 1, 1, 25, 0, 24, 24, 0, 0, 0, 1, 0, 0]': ([0.251336, 0.251585, 0.25148, 0.251541, 0.25618, 0.251389, 0.251346, 0.251462, 0.251315, 0.251587, 0.256182, 0.251523, 0.251309, 0.251502, 0.251428, 0.251405, 0.25618, 0.251417, 0.25142, 0.25147, 0.251322, 0.251298, 0.256142, 0.251478, 0.251412, 0.251345, 0.25128, 0.251459, 0.256171, 0.251445], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [3, 6, 4, 5, 4, 0, 0, 0, 0, 2, 4, 0, 0, 2, 1, 0]
Fixed Factors: {'U1_I': 25, 'SCR': 1}
Testing candidate 11: [3, 6, 4, 5, 4, 0, 0, 0, 25, 0, 2, 4, 0, 0, 2, 1, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		273
        Multiplications: 	84
        Divisions: 		0
        Logical: 		0
        Reads: 			677
        Writes: 		175
        Comparisons:		12
        Gotos: 			0
        
digraph CFG {
	ForLoop9166795 [label="ForLoop9166795  for (k=kt; k<=min(ny-1,kk+127)-4; k=k+5) {...",shape=box];
	ForLoop9166795 -> 9169564;
	ForLoop9166795 -> _JOIN_9166795;
	ForLoop9132473 [label="ForLoop9132473  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop9132473 -> 9132472;
	ForLoop9132473 -> _JOIN_9132473;
	9132748 [label="9132748  register int cbv_2, cbv_3;...",shape=box];
	_JOIN_9132404 [label="_JOIN_9132404None...",shape=box];
	_JOIN_9132404 -> 9132748;
	9169734 [label="9169734  double scv_38;...",shape=box];
	9168678 [label="9168678  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	ForLoop9166869 [label="ForLoop9166869  for (ii=iii; ii<=min(nx-1,iii+960); ii=ii+64) {...",shape=box];
	ForLoop9166869 -> ForLoop9166868;
	ForLoop9166869 -> _JOIN_9166869;
	ForLoop9166868 [label="ForLoop9166868  for (i=ii; i<=min(nx-1,ii+63); i=i+1) {...",shape=box];
	ForLoop9166868 -> 9172920;
	ForLoop9166868 -> _JOIN_9166868;
	ForLoop9166866 [label="ForLoop9166866  for (kk=0; kk<=ny-1; kk=kk+128) {...",shape=box];
	ForLoop9166866 -> ForLoop9166640;
	ForLoop9166866 -> _JOIN_9166866;
	9172920 [label="9172920  double scv_39;...",shape=box];
	ForLoop9166863 [label="ForLoop9166863  for (k=(min(ny-1,kk+127))-(((min(ny-1,kk+127))-(kt)+1)%5)+1; k<=min(ny-1,kk+127); k=k+1) {...",shape=box];
	ForLoop9166863 -> 9169734;
	ForLoop9166863 -> _JOIN_9166863;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 9131745;
	9169564 [label="9169564  double scv_33, scv_34, scv_35, scv_36, scv_37;...",shape=box];
	_JOIN_9165686 [label="_JOIN_9165686None...",shape=box];
	_JOIN_9165686 -> ForLoop9166866;
	_JOIN_9165684 [label="_JOIN_9165684None...",shape=box];
	_JOIN_9165684 -> _JOIN_9165686;
	_JOIN_9166640 [label="_JOIN_9166640None...",shape=box];
	_JOIN_9166640 -> 9166641;
	9165683 [label="9165683  scv_39=scv_39+A[i*ny+j]*x[j];...",shape=box];
	9165683 -> _JOIN_9165684;
	_JOIN_9166870 [label="_JOIN_9166870None...",shape=box];
	ForLoop9165684 [label="ForLoop9165684  for (j=(min(ny-1,jj+511))-(((min(ny-1,jj+511))-(jj)+1)%3)+1; j<=min(ny-1,jj+511); j=j+1) {...",shape=box];
	ForLoop9165684 -> 9165683;
	ForLoop9165684 -> _JOIN_9165684;
	ForLoop9165616 [label="ForLoop9165616  for (j=jj; j<=min(ny-1,jj+511)-2; j=j+3) {...",shape=box];
	ForLoop9165616 -> 9165564;
	ForLoop9165616 -> _JOIN_9165616;
	9165564 [label="9165564  scv_39=scv_39+A[i*ny+j]*x[j];...",shape=box];
	ForLoop9166640 [label="ForLoop9166640  for (kt=kk; kt<=min(ny-1,kk+127)-31; kt=kt+32) {...",shape=box];
	ForLoop9166640 -> 9168678;
	ForLoop9166640 -> _JOIN_9166640;
	ForLoop9132404 [label="ForLoop9132404  for (i=0; i<=cbv_1; i=i+26) {...",shape=box];
	ForLoop9132404 -> 9132177;
	ForLoop9132404 -> _JOIN_9132404;
	9165524 [label="9165524  int j;...",shape=box];
	9165524 -> ForLoop9165616;
	9132177 [label="9132177  y[i]=0.0;...",shape=box];
	_JOIN_9166795 [label="_JOIN_9166795None...",shape=box];
	_JOIN_9166795 -> ForLoop9166863;
	9172932 [label="9172932  tmp[i]=scv_39;...",shape=box];
	9172932 -> _JOIN_9166868;
	ForLoop9165686 [label="ForLoop9165686  for (jj=0; jj<=ny-1; jj=jj+512) {...",shape=box];
	ForLoop9165686 -> 9165524;
	ForLoop9165686 -> _JOIN_9165686;
	_JOIN_9132473 [label="_JOIN_9132473None...",shape=box];
	_JOIN_9132473 -> 9165454;
	ForLoop9166870 [label="ForLoop9166870  for (iii=0; iii<=nx-1; iii=iii+1024) {...",shape=box];
	ForLoop9166870 -> ForLoop9166869;
	ForLoop9166870 -> _JOIN_9166870;
	9131745 [label="9131745  int i;...",shape=box];
	9166641 [label="9166641  int k;...",shape=box];
	9166641 -> ForLoop9166795;
	9165454 [label="9165454  double x_copy;...",shape=box];
	9132472 [label="9132472  y[i]=0.0;...",shape=box];
	9132472 -> _JOIN_9132473;
	_JOIN_9166869 [label="_JOIN_9166869None...",shape=box];
	_JOIN_9166869 -> _JOIN_9166870;
	_JOIN_9166868 [label="_JOIN_9166868None...",shape=box];
	_JOIN_9166868 -> _JOIN_9166869;
	_JOIN_9166863 [label="_JOIN_9166863None...",shape=box];
	_JOIN_9166863 -> _JOIN_9166866;
	_JOIN_9165616 [label="_JOIN_9165616None...",shapeexpected=9369846271501.798828
actual=9369846271501.798828
=box];
	_JOIN_9165616 -> ForLoop9165684;
	_JOIN_9166866 [label="_JOIN_9166866None...",shape=box];
	_JOIN_9166866 -> 9172932;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest48.exe __orio_perftest48.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest48.exe  
{'[3, 6, 4, 5, 4, 0, 0, 0, 25, 0, 2, 4, 0, 0, 2, 1, 1, 0]' : 0.124598}
{'[3, 6, 4, 5, 4, 0, 0, 0, 25, 0, 2, 4, 0, 0, 2, 1, 1, 0]' : 0.124614}
{'[3, 6, 4, 5, 4, 0, 0, 0, 25, 0, 2, 4, 0, 0, 2, 1, 1, 0]' : 0.124536}
{'[3, 6, 4, 5, 4, 0, 0, 0, 25, 0, 2, 4, 0, 0, 2, 1, 1, 0]' : 0.12558}
{'[3, 6, 4, 5, 4, 0, 0, 0, 25, 0, 2, 4, 0, 0, 2, 1, 1, 0]' : 0.124536}
{'[3, 6, 4, 5, 4, 0, 0, 0, 25, 0, 2, 4, 0, 0, 2, 1, 1, 0]' : 0.124681}
{'[3, 6, 4, 5, 4, 0, 0, 0, 25, 0, 2, 4, 0, 0, 2, 1, 1, 0]' : 0.124603}
{'[3, 6, 4, 5, 4, 0, 0, 0, 25, 0, 2, 4, 0, 0, 2, 1, 1, 0]' : 0.12465}
{'[3, 6, 4, 5, 4, 0, 0, 0, 25, 0, 2, 4, 0, 0, 2, 1, 1, 0]' : 0.124639}
{'[3, 6, 4, 5, 4, 0, 0, 0, 25, 0, 2, 4, 0, 0, 2, 1, 1, 0]' : 0.124653}
{'[3, 6, 4, 5, 4, 0, 0, 0, 25, 0, 2, 4, 0, 0, 2, 1, 1, 0]' : 0.124774}
{'[3, 6, 4, 5, 4, 0, 0, 0, 25, 0, 2, 4, 0, 0, 2, 1, 1, 0]' : 0.124695}
{'[3, 6, 4, 5, 4, 0, 0, 0, 25, 0, 2, 4, 0, 0, 2, 1, 1, 0]' : 0.124541}
{'[3, 6, 4, 5, 4, 0, 0, 0, 25, 0, 2, 4, 0, 0, 2, 1, 1, 0]' : 0.124751}
{'[3, 6, 4, 5, 4, 0, 0, 0, 25, 0, 2, 4, 0, 0, 2, 1, 1, 0]' : 0.124601}
{'[3, 6, 4, 5, 4, 0, 0, 0, 25, 0, 2, 4, 0, 0, 2, 1, 1, 0]' : 0.124627}
{'[3, 6, 4, 5, 4, 0, 0, 0, 25, 0, 2, 4, 0, 0, 2, 1, 1, 0]' : 0.124616}
{'[3, 6, 4, 5, 4, 0, 0, 0, 25, 0, 2, 4, 0, 0, 2, 1, 1, 0]' : 0.124642}
{'[3, 6, 4, 5, 4, 0, 0, 0, 25, 0, 2, 4, 0, 0, 2, 1, 1, 0]' : 0.124627}
{'[3, 6, 4, 5, 4, 0, 0, 0, 25, 0, 2, 4, 0, 0, 2, 1, 1, 0]' : 0.124659}
{'[3, 6, 4, 5, 4, 0, 0, 0, 25, 0, 2, 4, 0, 0, 2, 1, 1, 0]' : 0.125565}
{'[3, 6, 4, 5, 4, 0, 0, 0, 25, 0, 2, 4, 0, 0, 2, 1, 1, 0]' : 0.124602}
{'[3, 6, 4, 5, 4, 0, 0, 0, 25, 0, 2, 4, 0, 0, 2, 1, 1, 0]' : 0.124846}
{'[3, 6, 4, 5, 4, 0, 0, 0, 25, 0, 2, 4, 0, 0, 2, 1, 1, 0]' : 0.124602}
{'[3, 6, 4, 5, 4, 0, 0, 0, 25, 0, 2, 4, 0, 0, 2, 1, 1, 0]' : 0.124563}
{'[3, 6, 4, 5, 4, 0, 0, 0, 25, 0, 2, 4, 0, 0, 2, 1, 1, 0]' : 0.124646}
{'[3, 6, 4, 5, 4, 0, 0, 0, 25, 0, 2, 4, 0, 0, 2, 1, 1, 0]' : 0.124631}
{'[3, 6, 4, 5, 4, 0, 0, 0, 25, 0, 2, 4, 0, 0, 2, 1, 1, 0]' : 0.124767}
{'[3, 6, 4, 5, 4, 0, 0, 0, 25, 0, 2, 4, 0, 0, 2, 1, 1, 0]' : 0.124569}
{'[3, 6, 4, 5, 4, 0, 0, 0, 25, 0, 2, 4, 0, 0, 2, 1, 1, 0]' : 0.12458}

out:
 ["{'[3, 6, 4, 5, 4, 0, 0, 0, 25, 0, 2, 4, 0, 0, 2, 1, 1, 0]' : 0.124598}", "{'[3, 6, 4, 5, 4, 0, 0, 0, 25, 0, 2, 4, 0, 0, 2, 1, 1, 0]' : 0.124614}", "{'[3, 6, 4, 5, 4, 0, 0, 0, 25, 0, 2, 4, 0, 0, 2, 1, 1, 0]' : 0.124536}", "{'[3, 6, 4, 5, 4, 0, 0, 0, 25, 0, 2, 4, 0, 0, 2, 1, 1, 0]' : 0.12558}", "{'[3, 6, 4, 5, 4, 0, 0, 0, 25, 0, 2, 4, 0, 0, 2, 1, 1, 0]' : 0.124536}", "{'[3, 6, 4, 5, 4, 0, 0, 0, 25, 0, 2, 4, 0, 0, 2, 1, 1, 0]' : 0.124681}", "{'[3, 6, 4, 5, 4, 0, 0, 0, 25, 0, 2, 4, 0, 0, 2, 1, 1, 0]' : 0.124603}", "{'[3, 6, 4, 5, 4, 0, 0, 0, 25, 0, 2, 4, 0, 0, 2, 1, 1, 0]' : 0.12465}", "{'[3, 6, 4, 5, 4, 0, 0, 0, 25, 0, 2, 4, 0, 0, 2, 1, 1, 0]' : 0.124639}", "{'[3, 6, 4, 5, 4, 0, 0, 0, 25, 0, 2, 4, 0, 0, 2, 1, 1, 0]' : 0.124653}", "{'[3, 6, 4, 5, 4, 0, 0, 0, 25, 0, 2, 4, 0, 0, 2, 1, 1, 0]' : 0.124774}", "{'[3, 6, 4, 5, 4, 0, 0, 0, 25, 0, 2, 4, 0, 0, 2, 1, 1, 0]' : 0.124695}", "{'[3, 6, 4, 5, 4, 0, 0, 0, 25, 0, 2, 4, 0, 0, 2, 1, 1, 0]' : 0.124541}", "{'[3, 6, 4, 5, 4, 0, 0, 0, 25, 0, 2, 4, 0, 0, 2, 1, 1, 0]' : 0.124751}", "{'[3, 6, 4, 5, 4, 0, 0, 0, 25, 0, 2, 4, 0, 0, 2, 1, 1, 0]' : 0.124601}", "{'[3, 6, 4, 5, 4, 0, 0, 0, 25, 0, 2, 4, 0, 0, 2, 1, 1, 0]' : 0.124627}", "{'[3, 6, 4, 5, 4, 0, 0, 0, 25, 0, 2, 4, 0, 0, 2, 1, 1, 0]' : 0.124616}", "{'[3, 6, 4, 5, 4, 0, 0, 0, 25, 0, 2, 4, 0, 0, 2, 1, 1, 0]' : 0.124642}", "{'[3, 6, 4, 5, 4, 0, 0, 0, 25, 0, 2, 4, 0, 0, 2, 1, 1, 0]' : 0.124627}", "{'[3, 6, 4, 5, 4, 0, 0, 0, 25, 0, 2, 4, 0, 0, 2, 1, 1, 0]' : 0.124659}", "{'[3, 6, 4, 5, 4, 0, 0, 0, 25, 0, 2, 4, 0, 0, 2, 1, 1, 0]' : 0.125565}", "{'[3, 6, 4, 5, 4, 0, 0, 0, 25, 0, 2, 4, 0, 0, 2, 1, 1, 0]' : 0.124602}", "{'[3, 6, 4, 5, 4, 0, 0, 0, 25, 0, 2, 4, 0, 0, 2, 1, 1, 0]' : 0.124846}", "{'[3, 6, 4, 5, 4, 0, 0, 0, 25, 0, 2, 4, 0, 0, 2, 1, 1, 0]' : 0.124602}", "{'[3, 6, 4, 5, 4, 0, 0, 0, 25, 0, 2, 4, 0, 0, 2, 1, 1, 0]' : 0.124563}", "{'[3, 6, 4, 5, 4, 0, 0, 0, 25, 0, 2, 4, 0, 0, 2, 1, 1, 0]' : 0.124646}", "{'[3, 6, 4, 5, 4, 0, 0, 0, 25, 0, 2, 4, 0, 0, 2, 1, 1, 0]' : 0.124631}", "{'[3, 6, 4, 5, 4, 0, 0, 0, 25, 0, 2, 4, 0, 0, 2, 1, 1, 0]' : 0.124767}", "{'[3, 6, 4, 5, 4, 0, 0, 0, 25, 0, 2, 4, 0, 0, 2, 1, 1, 0]' : 0.124569}", "{'[3, 6, 4, 5, 4, 0, 0, 0, 25, 0, 2, 4, 0, 0, 2, 1, 1, 0]' : 0.12458}"]
returning from 'run': {'[3, 6, 4, 5, 4, 0, 0, 0, 25, 0, 2, 4, 0, 0, 2, 1, 1, 0]': ([0.124598, 0.124614, 0.124536, 0.12558, 0.124536, 0.124681, 0.124603, 0.12465, 0.124639, 0.124653, 0.124774, 0.124695, 0.124541, 0.124751, 0.124601, 0.124627, 0.124616, 0.124642, 0.124627, 0.124659, 0.125565, 0.124602, 0.124846, 0.124602, 0.124563, 0.124646, 0.124631, 0.124767, 0.124569, 0.12458], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.124598, 0.124614, 0.124536, 0.12558, 0.124536, 0.124681, 0.124603, 0.12465, 0.124639, 0.124653, 0.124774, 0.124695, 0.124541, 0.124751, 0.124601, 0.124627, 0.124616, 0.124642, 0.124627, 0.124659, 0.125565, 0.124602, 0.124846, 0.124602, 0.124563, 0.124646, 0.124631, 0.124767, 0.124569, 0.12458], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[3, 6, 4, 5, 4, 0, 0, 0, 25, 0, 2, 4, 0, 0, 2, 1, 1, 0]': ([0.124598, 0.124614, 0.124536, 0.12558, 0.124536, 0.124681, 0.124603, 0.12465, 0.124639, 0.124653, 0.124774, 0.124695, 0.124541, 0.124751, 0.124601, 0.124627, 0.124616, 0.124642, 0.124627, 0.124659, 0.125565, 0.124602, 0.124846, 0.124602, 0.124563, 0.124646, 0.124631, 0.124767, 0.124569, 0.12458], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [5, 0, 4, 6, 1, 3, 1, 1, 23, 0, 22, 0, 1, 0, 1, 0]
Fixed Factors: {'U1_I': 25, 'SCR': 1}
Testing candidate 12: [5, 0, 4, 6, 1, 3, 1, 1, 25, 23, 0, 22, 0, 1, 0, 1, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	139
        Max loop nest depth: 	6
        Additions: 		6212
        Multiplications: 	1600
        Divisions: 		0
        Logical: 		0
        Reads: 			12123
        Writes: 		2466
        Comparisons:		139
        Gotos: 			0
        
digraph CFG {
	9442400 [label="9442400  double scv_416;...",shape=box];
	_JOIN_9374520 [label="_JOIN_9374520None...",shape=box];
	_JOIN_9374520 -> ForLoop9374600;
	ForLoop9380724 [label="ForLoop9380724  for (k=kk; k<=min(ny-1,kk+127)-22; k=k+23) {...",shape=box];
	ForLoop9380724 -> 9435669;
	ForLoop9380724 -> _JOIN_9380724;
	_JOIN_9372452 [label="_JOIN_9372452None...",shape=box];
	_JOIN_9372452 -> ForLoop9372532;
	9177451 [label="9177451  register int cbv_2, cbv_3;...",shape=box];
	_JOIN_9387008 [label="_JOIN_9387008None...",shape=box];
	_JOIN_9387008 -> 9387040;
	ForLoop9382792 [label="ForLoop9382792  for (k=kk; k<=min(ny-1,kk+127)-22; k=k+23) {...",shape=box];
	ForLoop9382792 -> 9439715;
	ForLoop9382792 -> _JOIN_9382792;
	9558996 [label="9558996  double scv_633;...",shape=box];
	ForLoop9381838 [label="ForLoop9381838  for (k=(min(ny-1,kk+127))-(((min(ny-1,kk+127))-(kk)+1)%23)+1; k<=min(ny-1,kk+127); k=k+1) {...",shape=box];
	ForLoop9381838 -> 9438354;
	ForLoop9381838 -> _JOIN_9381838;
	9391322 [label="9391322  scv_633=scv_633+A[i*ny+jt]*x_copy[(jt-jjj)];...",shape=box];
	ForLoop9372532 [label="ForLoop9372532  for (k=(min(ny-1,kk+127))-(((min(ny-1,kk+127))-(kk)+1)%23)+1; k<=min(ny-1,kk+127); k=k+1) {...",shape=box];
	ForLoop9372532 -> 9420147;
	ForLoop9372532 -> _JOIN_9372532;
	9446446 [label="9446446  double scv_464;...",shape=box];
	9433646 [label="9433646  double scv_297, scv_298, scv_299, scv_300, scv_301, scv_302, scv_303, scv_304;...",shape=box];
	ForLoop9375554 [label="ForLoop9375554  for (k=kk; k<=min(ny-1,kk+127)-22; k=k+23) {...",shape=box];
	ForLoop9375554 -> 9425554;
	ForLoop9375554 -> _JOIN_9375554;
	_JOIN_9391064 [label="_JOIN_9391064None...",shape=box];
	_JOIN_9391064 -> ForLoop9391144;
	9392450 [label="9392450  for (k=kk; k<=min(ny-1,kk+127); k=k+1) ...",shape=box];
	9392450 -> _JOIN_9392452;
	9439715 [label="9439715  double scv_369, scv_370, scv_371, scv_372, scv_373, scv_374, scv_375, scv_376;...",shape=box];
	_JOIN_9382792 [label="_JOIN_9382792None...",shape=box];
	_JOIN_9382792 -> ForLoop9382872;
	9421508 [label="9421508  double scv_153, scv_154, scv_155, scv_156, scv_157, scv_158, scv_159, scv_160;...",shape=box];
	_JOIN_9375554 [label="_JOIN_9375554None...",shape=box];
	_JOIN_9375554 -> ForLoop9375634;
	_JOIN_9392457 [label="_JOIN_9392457None...",shape=box];
	_JOIN_9392457 -> _JOIN_9392458;
	_JOIN_9392455 [label="_JOIN_9392455None...",shape=box];
	_JOIN_9392455 -> _JOIN_9392457;
	_JOIN_9390030 [label="_JOIN_9390030None...",shape=box];
	_JOIN_9390030 -> ForLoop9390110;
	9449830 [label="9449830  double scv_489, scv_490, scv_491, scv_492, scv_493, scv_494, scv_495, scv_496;...",shape=box];
	_JOIN_9392452 [label="_JOIN_9392452None...",shape=box];
	_JOIN_9392452 -> _JOIN_9392453;
	ForLoop9391144 [label="ForLoop9391144  for (k=(min(ny-1,kk+127))-(((min(ny-1,kk+127))-(kk)+1)%23)+1; k<=min(ny-1,kk+127); k=k+1) {...",shape=box];
	ForLoop9391144 -> 9456561;
	ForLoop9391144 -> _JOIN_9391144;
	_JOIN_9368316 [label="_JOIN_9368316None...",shape=box];
	_JOIN_9368316 -> ForLoop9368396;
	9382904 [label="9382904  for (k=kk; k<=min(ny-1,kk+127); k=k+1) ...",shape=box];
	ForLoop9391180 [label="ForLoop9391180  for (kkk=0; kkk<=ny-1; kkk=kkk+256) {...",shape=box];
	ForLoop9391180 -> ForLoop9391178;
	ForLoop9391180 -> _JOIN_9391180;
	ForLoop9391182 [label="ForLoop9391182  for (i=ii; i<=min(nx-1,ii+255)-23; i=i+24) {...",shape=box];
	ForLoop9391182 -> 9551401;
	ForLoop9391182 -> _JOIN_9391182;
	_JOIN_9375634 [label="_JOIN_9375634None...",shape=box];
	_JOIN_9375634 -> 9375666;
	9438354 [label="9438354  double scv_368;...",shape=box];
	9388074 [label="9388074  for (k=kk; k<=min(ny-1,kk+127); k=k+1) ...",shape=box];
	9389108 [label="9389108  for (k=kk; k<=min(ny-1,kk+127); k=k+1) ...",shape=box];
	9431623 [label="9431623  double scv_273, scv_274, scv_275, scv_276, scv_277, scv_278, scv_279, scv_280;...",shape=box];
	9427577 [label="9427577  double scv_225, scv_226, scv_227, scv_228, scv_229, scv_230, scv_231, scv_232;...",shape=box];
	9411393 [label="9411393  double scv_33, scv_34, scv_35, scv_36, scv_37, scv_38, scv_39, scv_40;...",shape=box];
	9436331 [label="9436331  double scv_344;...",shape=box];
	9375666 [label="9375666  for (k=kk; k<=min(ny-1,kk+127); k=k+1) ...",shape=box];
	_JOIN_9381758 [label="_JOIN_9381758None...",shape=box];
	_JOIN_9381758 -> ForLoop9381838;
	_JOIN_9376588 [label="_JOIN_9376588None...",shape=box];
	_JOIN_9376588 -> ForLoop9376668;
	9425554 [label="9425554  double scv_201, scv_202, scv_203, scv_204, scv_205, scv_206, scv_207, scv_208;...",shape=box];
	ForLoop9370464 [label="ForLoop9370464  for (k=(min(ny-1,kk+127))-(((min(ny-1,kk+127))-(kk)+1)%23)+1; k<=min(ny-1,kk+127); k=k+1) {...",shape=box];
	ForLoop9370464 -> 9416101;
	ForLoop9370464 -> _JOIN_9370464;
	ForLoop9377622 [label="ForLoop9377622  for (k=kk; k<=min(ny-1,kk+127)-22; k=k+23) {...",shape=box];
	ForLoop9377622 -> 9429600;
	ForLoop9377622 -> _JOIN_9377622;
	ForLoop9380804 [label="ForLoop9380804  for (k=(min(ny-1,kk+127))-(((min(ny-1,kk+127))-(kk)+1)%23)+1; k<=min(ny-1,kk+127); k=k+1) {...",shape=box];
	ForLoop9380804 -> 9436331;
	ForLoop9380804 -> _JOIN_9380804;
	_JOIN_9378736 [label="_JOIN_9378736None...",shape=box];
	_JOIN_9378736 -> 9378768;
	_JOIN_9386928 [label="_JOIN_9386928None...",shape=box];
	_JOIN_9386928 -> ForLoop9387008;
	ForLoop9368396 [label="ForLoop9368396  for (k=(min(ny-1,kk+127))-(((min(ny-1,kk+127))-(kk)+1)%23)+1; k<=min(ny-1,kk+127); k=k+1) {...",shape=box];
	ForLoop9368396 -> 9412055;
	ForLoop9368396 -> _JOIN_9368396;
	9551401 [label="9551401  double scv_585, scv_586, scv_587, scv_588, scv_589, scv_590, scv_591, scv_592;...",shape=box];
	_JOIN_9389076 [label="_JOIN_9389076None...",shape=box];
	_JOIN_9389076 -> 9389108;
	_JOIN_9366473 [label="_JOIN_9366473None...",shape=box];
	_JOIN_9366473 -> ForLoop9391180;
	_JOIN_9366471 [label="_JOIN_9366471None...",shape=box];
	_JOIN_9366471 -> _JOIN_9366473;
	9455899 [label="9455899  double scv_561, scv_562, scv_563, scv_564, scv_565, scv_566, scv_567, scv_568;...",shape=box];
	9401653 [label="9401653  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	9370496 [label="9370496  for (k=kk; k<=min(ny-1,kk+127); k=k+1) ...",shape=box];
	ForLoop9385894 [label="ForLoop9385894  for (k=kk; k<=min(ny-1,kk+127)-22; k=k+23) {...",shape=box];
	ForLoop9385894 -> 9445784;
	ForLoop9385894 -> _JOIN_9385894;
	9445784 [label="9445784  double scv_441, scv_442, scv_443, scv_444, scv_445, scv_446, scv_447, scv_448;...",shape=box];
	9369462 [label="9369462  for (k=kk; k<=min(ny-1,kk+127); k=k+1) ...",shape=box];
	9551419 [label="9551419  tmp[(i+20)]=scv_585;...",shape=box];
	9559008 [label="9559008  tmp[i]=scv_633;...",shape=box];
	9559008 -> _JOIN_9392455;
	ForLoop9368316 [label="ForLoop9368316  for (k=kk; k<=min(ny-1,kk+127)-22; k=k+23) {...",shape=box];
	ForLoop9368316 -> 9411393;
	ForLoop9368316 -> _JOIN_9368316;
	9454538 [label="9454538  double scv_560;...",shape=box];
	_JOIN_9391180 [label="_JOIN_9391180None...",shape=box];
	_JOIN_9391180 -> 9551419;
	_JOIN_9379770 [label="_JOIN_9379770None...",shape=box];
	_JOIN_9379770 -> 9379802;
	9420147 [label="9420147  double scv_152;...",shape=box];
	ForLoop9366471 [label="ForLoop9366471  for (jt=jjj; jt<=min(ny-1,jjj+63)-7; jt=jt+8) {...",shape=box];
	ForLoop9366471 -> 9401653;
	ForLoop9366471 -> _JOIN_9366471;
	9387040 [label="9387040  for (k=kk; k<=min(ny-1,kk+127); k=k+1) ...",shape=box];
	9383938 [label="9383938  for (k=kk; k<=min(ny-1,kk+127); k=k+1) ...",shape=box];
	_JOIN_9371418 [label="_JOIN_9371418None...",shape=box];
	_JOIN_9371418 -> ForLoop9371498;
	ForLoop9370384 [label="ForLoop9370384  for (k=kk; k<=min(ny-1,kk+127)-22; k=k+23) {...",shape=box];
	ForLoop9370384 -> 9415439;
	ForLoop9370384 -> _JOIN_9370384;
	ForLoop9389076 [label="ForLoop9389076  for (k=(min(ny-1,kk+127))-(((min(ny-1,kk+127))-(kk)+1)%23)+1; k<=min(ny-1,kk+127); k=k+1) {...",shape=box];
	ForLoop9389076 -> 9452515;
	ForLoop9389076 -> _JOIN_9389076;
	9432285 [label="9432285  double scv_296;...",shape=box];
	9358682 [label="9358682  double x_copy[64];...",shape=box];
	9410032 [label="9410032  double scv_32;...",shape=box];
	ForLoop9384940 [label="ForLoop9384940  for (k=(min(ny-1,kk+127))-(((min(ny-1,kk+127))-(kk)+1)%23)+1; k<=min(ny-1,kk+127); k=k+1) {...",shape=box];
	ForLoop9384940 -> 9444423;
	ForLoop9384940 -> _JOIN_9384940;
	ForLoop9369430 [label="ForLoop9369430  for (k=(min(ny-1,kk+127))-(((min(ny-1,kk+127))-(kk)+1)%23)+1; k<=min(ny-1,kk+127); k=k+1) {...",shape=box];
	ForLoop9369430 -> 9414078;
	ForLoop9369430 -> _JOIN_9369430;
	_JOIN_9373566 [label="_JOIN_9373566None...",shape=box];
	_JOIN_9373566 -> 9373598;
	9426216 [label="9426216  double scv_224;...",shape=box];
	9554644 [label="9554644  double scv_609, scv_610, scv_611, scv_612, scv_613, scv_614, scv_615, scv_616;...",shape=box];
	ForLoop9374520 [label="ForLoop9374520  for (k=kk; k<=min(ny-1,kk+127)-22; k=k+23) {...",shape=box];
	ForLoop9374520 -> 9423531;
	ForLoop9374520 -> _JOIN_9374520;
	ForLoop9371418 [label="ForLoop9371418  for (k=kk; k<=min(ny-1,kk+127)-22; k=k+23) {...",shape=box];
	ForLoop9371418 -> 9417462;
	ForLoop9371418 -> _JOIN_9371418;
	_JOIN_9383826 [label="_JOIN_9383826None...",shape=box];
	_JOIN_9383826 -> ForLoop9383906;
	ForLoop9376588 [label="ForLoop9376588  for (k=kk; k<=min(ny-1,kk+127)-22; k=k+23) {...",shape=box];
	ForLoop9376588 -> 9427577;
	ForLoop9376588 -> _JOIN_9376588;
	9415439 [label="9415439  double scv_81, scv_82, scv_83, scv_84, scv_85, scv_86, scv_87, scv_88;...",shape=box];
	_JOIN_9177107 [label="_JOIN_9177107None...",shape=box];
	_JOIN_9177107 -> 9177451;
	_JOIN_9369430 [label="_JOIN_9369430None...",shape=box];
	_JOIN_9369430 -> 9369462;
	ForLoop9177176 [label="ForLoop9177176  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop9177176 -> 9177175;
	ForLoop9177176 -> _JOIN_9177176;
	ForLoop9383826 [label="ForLoop9383826  for (k=kk; k<=min(ny-1,kk+127)-22; k=k+23) {...",shape=box];
	ForLoop9383826 -> 9441738;
	ForLoop9383826 -> _JOIN_9383826;
	ForLoop9379770 [label="ForLoop9379770  for (k=(min(ny-1,kk+127))-(((min(ny-1,kk+127))-(kk)+1)%23)+1; k<=min(ny-1,kk+127); k=k+1) {...",shape=box];
	ForLoop9379770 -> 9434308;
	ForLoop9379770 -> _JOIN_9379770;
	9371530 [label="9371530  for (k=kk; k<=min(ny-1,kk+127); k=k+1) ...",shape=box];
	9416101 [label="9416101  double scv_104;...",shape=box];
	9412055 [label="9412055  double scv_56;...",shape=box];
	9450492 [label="9450492  double scv_512;...",shape=box];
	9381870 [label="9381870  for (k=kk; k<=min(ny-1,kk+127); k=k+1) ...",shape=box];
	ForLoop9391178 [label="ForLoop9391178  for (kk=kkk; kk<=min(ny-1,kkk+128); kk=kk+128) {...",shape=box];
	ForLoop9391178 -> 9366535;
	ForLoop9391178 -> _JOIN_9391178;
	_JOIN_9370464 [label="_JOIN_9370464None...",shape=box];
	_JOIN_9370464 -> 9370496;
	9368428 [label="9368428  for (k=kk; k<=min(ny-1,kk+127); k=k+1) ...",shape=box];
	ForLoop9387008 [label="ForLoop9387008  for (k=(min(ny-1,kk+127))-(((min(ny-1,kk+127))-(kk)+1)%23)+1; k<=min(ny-1,kk+127); k=k+1) {...",shape=box];
	ForLoop9387008 -> 9448469;
	ForLoop9387008 -> _JOIN_9387008;
	_JOIN_9380804 [label="_JOIN_9380804None...",shape=box];
	_JOIN_9380804 -> 9380836;
	9391176 [label="9391176  for (k=kk; k<=min(ny-1,kk+127); k=k+1) ...",shape=box];
	9391176 -> _JOIN_9391178;
	9358992 [label="9358992  for (j=jjj; j<=min(ny-1,jjj+63); j=j+1) ...",shape=box];
	9391279 [label="9391279  for (j=jjj; j<=min(ny-1,jjj+63); j=j+1) ...",shape=box];
	9391279 -> ForLoop9391527;
	_JOIN_9385974 [label="_JOIN_9385974None...",shape=box];
	_JOIN_9385974 -> 9386006;
	ForLoop9392458 [label="ForLoop9392458  for (iii=0; iii<=nx-1; iii=iii+2048) {...",shape=box];
	ForLoop9392458 -> ForLoop9392457;
	ForLoop9392458 -> _JOIN_9392458;
	ForLoop9385974 [label="ForLoop9385974  for (k=(min(ny-1,kk+127))-(((min(ny-1,kk+127))-(kk)+1)%23)+1; k<=min(ny-1,kk+127); k=k+1) {...",shape=box];
	ForLoop9385974 -> 9446446;
	ForLoop9385974 -> _JOIN_9385974;
	_JOIN_9391178 [label="_JOIN_9391178None...",shape=box];
	_JOIN_9391178 -> _JOIN_9391180;
	ForLoop9379690 [label="ForLoop9379690  for (k=kk; k<=min(ny-1,kk+127)-22; k=k+23) {...",shape=box];
	ForLoop9379690 -> 9433646;
	ForLoop9379690 -> _JOIN_9379690;
	9176448 [label="9176448  int i;...",shape=box];
	ForLoop9392452 [label="ForLoop9392452  for (kk=kkk; kk<=min(ny-1,kkk+128); kk=kk+128) {...",shape=box];
	ForLoop9392452 -> 9391591;
	ForLoop9392452 -> _JOIN_9392452;
	9377734 [label="9377734  for (k=kk; k<=min(ny-1,kk+127); k=k+1) ...",shape=box];
	ForLoop9392457 [label="ForLoop9392457  for (ii=iii; ii<=min(nx-1,iii+1792); ii=ii+256) {...",shape=box];
	ForLoop9392457 -> 9358715;
	ForLoop9392457 -> _JOIN_9392457;
	ForLoop9392455 [label="ForLoop9392455  for (i=(min(nx-1,ii+255))-(((min(nx-1,ii+255))-(ii)+1)%24)+1; i<=min(nx-1,ii+255); i=i+1) {...",shape=box];
	ForLoop9392455 -> 9558996;
	ForLoop9392455 -> _JOIN_9392455;
	_JOIN_9391529 [label="_JOIN_9391529None...",shape=box];
	_JOIN_9391529 -> ForLoop9392453;
	_JOIN_9367362 [label="_JOIN_9367362None...",shape=box];
	_JOIN_9367362 -> 9367394;
	ForLoop9177107 [label="ForLoop9177107  for (i=0; i<=cbv_1; i=i+26) {...",shape=box];
	ForLoop9177107 -> 9176880;
	ForLoop9177107 -> _JOIN_9177107;
	9386006 [label="9386006  for (k=kk; k<=min(ny-1,kk+127); k=k+1) ...",shape=box];
	9177175 [label="9177175  y[i]=0.0;...",shape=box];
	9177175 -> _JOIN_9177176;
	_JOIN_9373486 [label="_JOIN_9373486None...",shape=box];
	_JOIN_9373486 -> ForLoop9373566;
	_JOIN_9369350 [label="_JOIN_9369350None...",shape=box];
	_JOIN_9369350 -> ForLoop9369430;
	ForLoop9367288 [label="ForLoop9367288  for (k=kk; k<=min(ny-1,kk+127)-22; k=k+23) {...",shape=box];
	ForLoop9367288 -> 9409379;
	ForLoop9367288 -> _JOIN_9367288;
	9390142 [label="9390142  for (k=kk; k<=min(ny-1,kk+127); k=k+1) ...",shape=box];
	ForLoop9390110 [label="ForLoop9390110  for (k=(min(ny-1,kk+127))-(((min(ny-1,kk+127))-(kk)+1)%23)+1; k<=min(ny-1,kk+127); k=k+1) {...",shape=box];
	ForLoop9390110 -> 9454538;
	ForLoop9390110 -> _JOIN_9390110;
	_JOIN_9367288 [label="_JOIN_9367288None...",shape=box];
	_JOIN_9367288 -> ForLoop9367362;
	_JOIN_9391182 [label="_JOIN_9391182None...",shape=box];
	_JOIN_9391182 -> ForLoop9392455;
	ForLoop9373566 [label="ForLoop9373566  for (k=(min(ny-1,kk+127))-(((min(ny-1,kk+127))-(kk)+1)%23)+1; k<=min(ny-1,kk+127); k=k+1) {...",shape=box];
	ForLoop9373566 -> 9422170;
	ForLoop9373566 -> _JOIN_9373566;
	_JOIN_9390110 [label="_JOIN_9390110None...",shape=box];
	_JOIN_9390110 -> 9390142;
	9555297 [label="9555297  double scv_632;...",shape=box];
	_JOIN_9392458 [label="_JOIN_9392458None...",shape=box];
	ForLoop9369350 [label="ForLoop9369350  for (k=kk; k<=min(ny-1,kk+127)-22; k=k+23) {...",shape=box];
	ForLoop9369350 -> 9413416;
	ForLoop9369350 -> _JOIN_9369350;
	ForLoop9391064 [label="ForLoop9391064  for (k=kk; k<=min(ny-1,kk+127)-22; k=k+23) {...",shape=box];
	ForLoop9391064 -> 9455899;
	ForLoop9391064 -> _JOIN_9391064;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 9176448;
	9451853 [label="9451853  double scv_513, scv_514, scv_515, scv_516, scv_517, scv_518, scv_519, scv_520;...",shape=box];
	9419485 [label="9419485  double scv_129, scv_130, scv_131, scv_132, scv_133, scv_134, scv_135, scv_136;...",shape=box];
	9428239 [label="9428239  double scv_248;...",shape=box];
	_JOIN_9392344 [label="_JOIN_9392344None...",shape=box];
	_JOIN_9392344 -> ForLoop9392418;
	_JOIN_9392418 [label="_JOIN_9392418None...",shape=box];
	_JOIN_9392418 -> 9392450;
	ForLoop9378736 [label="ForLoop9378736  for (k=(min(ny-1,kk+127))-(((min(ny-1,kk+127))-(kk)+1)%23)+1; k<=min(ny-1,kk+127); k=k+1) {...",shape=box];
	ForLoop9378736 -> 9432285;
	ForLoop9378736 -> _JOIN_9378736;
	_JOIN_9388042 [label="_JOIN_9388042None...",shape=box];
	_JOIN_9388042 -> 9388074;
	ForLoop9388996 [label="ForLoop9388996  for (k=kk; k<=min(ny-1,kk+127)-22; k=k+23) {...",shape=box];
	ForLoop9388996 -> 9451853;
	ForLoop9388996 -> _JOIN_9388996;
	ForLoop9382872 [label="ForLoop9382872  for (k=(min(ny-1,kk+127))-(((min(ny-1,kk+127))-(kk)+1)%23)+1; k<=min(ny-1,kk+127); k=k+1) {...",shape=box];
	ForLoop9382872 -> 9440377;
	ForLoop9382872 -> _JOIN_9382872;
	ForLoop9372452 [label="ForLoop9372452  for (k=kk; k<=min(ny-1,kk+127)-22; k=k+23) {...",shape=box];
	ForLoop9372452 -> 9419485;
	ForLoop9372452 -> _JOIN_9372452;
	9418124 [label="9418124  double scv_128;...",shape=box];
	9443761 [label="9443761  double scv_417, scv_418, scv_419, scv_420, scv_421, scv_422, scv_423, scv_424;...",shape=box];
	9372564 [label="9372564  for (k=kk; k<=min(ny-1,kk+127); k=k+1) ...",shape=box];
	_JOIN_9388996 [label="_JOIN_9388996None...",shape=box];
	_JOIN_9388996 -> ForLoop9389076;
	_JOIN_9383906 [label="_JOIN_9383906None...",shape=box];
	_JOIN_9383906 -> 9383938;
	_JOIN_9384940 [label="_JOIN_9384940None...",shape=box];
	_JOIN_9384940 -> 9384972;
	9430262 [label="9430262  double scv_272;...",shape=box];
	9422170 [label="9422170  double scv_176;...",shape=box];
	ForLoop9377702 [label="ForLoop9377702  for (k=(min(ny-1,kk+127))-(((min(ny-1,kk+127))-(kk)+1)%23)+1; k<=min(ny-1,kk+127); k=k+1) {...",shape=box];
	ForLoop9377702 -> 9430262;
	ForLoop9377702 -> _JOIN_9377702;
	9437692 [label="9437692  double scv_345, scv_346, scv_347, scv_348, scv_349, scv_350, scv_351, scv_352;...",shape=box];
	9447807 [label="9447807  double scv_465, scv_466, scv_467, scv_468, scv_469, scv_470, scv_471, scv_472;...",shape=box];
	9444423 [label="9444423  double scv_440;...",shape=box];
	_JOIN_9371498 [label="_JOIN_9371498None...",shape=box];
	_JOIN_9371498 -> 9371530;
	9452515 [label="9452515  double scv_536;...",shape=box];
	_JOIN_9391527 [label="_JOIN_9391527None...",shape=box];
	_JOIN_9391527 -> _JOIN_9391529;
	9378768 [label="9378768  for (k=kk; k<=min(ny-1,kk+127); k=k+1) ...",shape=box];
	9441738 [label="9441738  double scv_393, scv_394, scv_395, scv_396, scv_397, scv_398, scv_399, scv_400;...",shape=box];
	ForLoop9366473 [label="ForLoop9366473  for (jjj=0; jjj<=ny-1; jjj=jjj+64) {...",shape=box];
	ForLoop9366473 -> 9358992;
	ForLoop9366473 -> _JOIN_9366473;
	_JOIN_9376668 [label="_JOIN_9376668None...",shape=box];
	_JOIN_9376668 -> 9376700;
	ForLoop9367362 [label="ForLoop9367362  for (k=(min(ny-1,kk+127))-(((min(ny-1,kk+127))-(kk)+1)%23)+1; k<=min(ny-1,kk+127); k=k+1) {...",shape=box];
	ForLoop9367362 -> 9410032;
	ForLoop9367362 -> _JOIN_9367362;
	ForLoop9392453 [label="ForLoop9392453  for (kkk=0; kkk<=ny-1; kkk=kkk+256) {...",shape=box];
	ForLoop9392453 -> ForLoop9392452;
	ForLoop9392453 -> _JOIN_9392453;
	9176880 [label="9176880  y[i]=0.0;...",shape=box];
	_JOIN_9378656 [label="_JOIN_9378656None...",shape=box];
	_JOIN_9378656 -> ForLoop9378736;
	_JOIN_9379690 [label="_JOIN_9379690None...",shape=box];
	_JOIN_9379690 -> ForLoop9379770;
	9456561 [label="9456561  double scv_584;...",shape=box];
	9409379 [label="9409379  double scv_9, scv_10, scv_11, scv_12, scv_13, scv_14, scv_15, scv_16;...",shape=box];
	ForLoop9392344 [label="ForLoop9392344  for (k=kk; k<=min(ny-1,kk+127)-22; k=k+23) {...",shape=box];
	ForLoop9392344 -> 9554644;
	ForLoop9392344 -> _JOIN_9392344;
	9384972 [label="9384972  for (k=kk; k<=min(ny-1,kk+127); k=k+1) ...",shape=box];
	ForLoop9387962 [label="ForLoop9387962  for (k=kk; k<=min(ny-1,kk+127)-22; k=k+23) {...",shape=box];
	ForLoop9387962 -> 9449830;
	ForLoop9387962 -> _JOIN_9387962;
	_JOIN_9372532 [label="_JOIN_9372532None...",shape=box];
	_JOIN_9372532 -> 9372564;
	_JOIN_9381838 [label="_JOIN_9381838None...",shape=box];
	_JOIN_9381838 -> 9381870;
	9434308 [label="9434308  double scv_320;...",shape=box];
	_JOIN_9380724 [label="_JOIN_9380724None...",shape=box];
	_JOIN_9380724 -> ForLoop9380804;
	9358715 [label="9358715  int i;...",shape=box];
	9358715 -> ForLoop9391182;
	ForLoop9371498 [label="ForLoop9371498  for (k=(min(ny-1,kk+127))-(((min(ny-1,kk+127))-(kk)+1)%23)+1; k<=min(ny-1,kk+127); k=k+1) {...",shape=box];
	ForLoop9371498 -> 9418124;
	ForLoop9371498 -> _JOIN_9371498;
	9373598 [label="9373598  for (k=kk; k<=min(ny-1,kk+127); k=k+1) ...",shape=box];
	_JOIN_9377702 [label="_JOIN_9377702None...",shape=box];
	_JOIN_9377702 -> 9377734;
	_JOIN_9384860 [label="_JOIN_9384860None...",shape=box];
	_JOIN_9384860 -> ForLoop9384940;
	9391591 [label="9391591  for (k=kk; k<=min(ny-1,kk+127); k=k+1) ...",shape=box];
	9453876 [label="9453876  double scv_537, scv_538, scv_539, scv_540, scv_541, scv_542, scv_543, scv_544;...",shape=box];
	_JOIN_9391144 [label="_JOIN_9391144None...",shape=box];
	_JOIN_9391144 -> 9391176;
	ForLoop9386928 [label="ForLoop9386928  for (k=kk; k<=min(ny-1,kk+127)-22; k=k+23) {...",shape=box];
	ForLoop9386928 -> 9447807;
	ForLoop9386928 -> _JOIN_9386928;
	_JOIN_9377622 [label="_JOIN_9377622None...",shape=box];
	_JOIN_9377622 -> ForLoop9377702;
	9417462 [label="9417462  double scv_105, scv_106, scv_107, scv_108, scv_109, scv_110, scv_111, scv_112;...",shape=box];
	_JOIN_9387962 [label="_JOIN_9387962None...",shape=box];
	_JOIN_9387962 -> ForLoop9388042;
	ForLoop9390030 [label="ForLoop9390030  for (k=kk; k<=min(ny-1,kk+127)-22; k=k+23) {...",shape=box];
	ForLoop9390030 -> 9453876;
	ForLoop9390030 -> _JOIN_9390030;
	9423531 [label="9423531  double scv_177, scv_178, scv_179, scv_180, scv_181, scv_182, scv_183, scv_184;...",shape=box];
	_JOIN_9392453 [label="_JOIN_9392453None...",shape=box];
	_JOIN_9392453 -> 9559008;
	_JOIN_9385894 [label="_JOIN_9385894None...",shape=box];
	_JOIN_9385894 -> ForLoop9385974;
	ForLoop9383906 [label="ForLoop9383906  for (k=(min(ny-1,kk+127))-(((min(ny-1,kk+127))-(kk)+1)%23)+1; k<=min(ny-1,kk+127); k=k+1) {...",shape=box];
	ForLoop9383906 -> 9442400;
	ForLoop9383906 -> _JOIN_9383906;
	9414078 [label="9414078  double scv_80;...",shape=box];
	ForLoop9378656 [label="ForLoop9378656  for (k=kk; k<=min(ny-1,kk+127)-22; k=k+23) {...",shape=box];
	ForLoop9378656 -> 9431623;
	ForLoop9378656 -> _JOIN_9378656;
	9367394 [label="9367394  for (k=kk; k<=min(ny-1,kk+127); k=k+1) ...",shape=box];
	9448469 [label="9448469  double scv_488;...",shape=box];
	ForLoop9374600 [label="ForLoop9374600  for (k=(mexpected=9369846271501.798828
actual=9369846271501.798828
in(ny-1,kk+127))-(((min(ny-1,kk+127))-(kk)+1)%23)+1; k<=min(ny-1,kk+127); k=k+1) {...",shape=box];
	ForLoop9374600 -> 9424193;
	ForLoop9374600 -> _JOIN_9374600;
	9380836 [label="9380836  for (k=kk; k<=min(ny-1,kk+127); k=k+1) ...",shape=box];
	ForLoop9373486 [label="ForLoop9373486  for (k=kk; k<=min(ny-1,kk+127)-22; k=k+23) {...",shape=box];
	ForLoop9373486 -> 9421508;
	ForLoop9373486 -> _JOIN_9373486;
	_JOIN_9368396 [label="_JOIN_9368396None...",shape=box];
	_JOIN_9368396 -> 9368428;
	_JOIN_9374600 [label="_JOIN_9374600None...",shape=box];
	_JOIN_9374600 -> 9374632;
	ForLoop9384860 [label="ForLoop9384860  for (k=kk; k<=min(ny-1,kk+127)-22; k=k+23) {...",shape=box];
	ForLoop9384860 -> 9443761;
	ForLoop9384860 -> _JOIN_9384860;
	9424193 [label="9424193  double scv_200;...",shape=box];
	_JOIN_9382872 [label="_JOIN_9382872None...",shape=box];
	_JOIN_9382872 -> 9382904;
	9435669 [label="9435669  double scv_321, scv_322, scv_323, scv_324, scv_325, scv_326, scv_327, scv_328;...",shape=box];
	9429600 [label="9429600  double scv_249, scv_250, scv_251, scv_252, scv_253, scv_254, scv_255, scv_256;...",shape=box];
	9376700 [label="9376700  for (k=kk; k<=min(ny-1,kk+127); k=k+1) ...",shape=box];
	ForLoop9391529 [label="ForLoop9391529  for (jjj=0; jjj<=ny-1; jjj=jjj+64) {...",shape=box];
	ForLoop9391529 -> 9391279;
	ForLoop9391529 -> _JOIN_9391529;
	9374632 [label="9374632  for (k=kk; k<=min(ny-1,kk+127); k=k+1) ...",shape=box];
	ForLoop9376668 [label="ForLoop9376668  for (k=(min(ny-1,kk+127))-(((min(ny-1,kk+127))-(kk)+1)%23)+1; k<=min(ny-1,kk+127); k=k+1) {...",shape=box];
	ForLoop9376668 -> 9428239;
	ForLoop9376668 -> _JOIN_9376668;
	ForLoop9391527 [label="ForLoop9391527  for (jt=jjj; jt<=min(ny-1,jjj+63)-7; jt=jt+8) {...",shape=box];
	ForLoop9391527 -> 9391322;
	ForLoop9391527 -> _JOIN_9391527;
	ForLoop9375634 [label="ForLoop9375634  for (k=(min(ny-1,kk+127))-(((min(ny-1,kk+127))-(kk)+1)%23)+1; k<=min(ny-1,kk+127); k=k+1) {...",shape=box];
	ForLoop9375634 -> 9426216;
	ForLoop9375634 -> _JOIN_9375634;
	9379802 [label="9379802  for (k=kk; k<=min(ny-1,kk+127); k=k+1) ...",shape=box];
	9366535 [label="9366535  for (k=kk; k<=min(ny-1,kk+127); k=k+1) ...",shape=box];
	9440377 [label="9440377  double scv_392;...",shape=box];
	_JOIN_9177176 [label="_JOIN_9177176None...",shape=box];
	_JOIN_9177176 -> 9358682;
	9413416 [label="9413416  double scv_57, scv_58, scv_59, scv_60, scv_61, scv_62, scv_63, scv_64;...",shape=box];
	ForLoop9381758 [label="ForLoop9381758  for (k=kk; k<=min(ny-1,kk+127)-22; k=k+23) {...",shape=box];
	ForLoop9381758 -> 9437692;
	ForLoop9381758 -> _JOIN_9381758;
	ForLoop9392418 [label="ForLoop9392418  for (k=(min(ny-1,kk+127))-(((min(ny-1,kk+127))-(kk)+1)%23)+1; k<=min(ny-1,kk+127); k=k+1) {...",shape=box];
	ForLoop9392418 -> 9555297;
	ForLoop9392418 -> _JOIN_9392418;
	_JOIN_9370384 [label="_JOIN_9370384None...",shape=box];
	_JOIN_9370384 -> ForLoop9370464;
	ForLoop9388042 [label="ForLoop9388042  for (k=(min(ny-1,kk+127))-(((min(ny-1,kk+127))-(kk)+1)%23)+1; k<=min(ny-1,kk+127); k=k+1) {...",shape=box];
	ForLoop9388042 -> 9450492;
	ForLoop9388042 -> _JOIN_9388042;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest49.exe __orio_perftest49.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest49.exe  
{'[5, 0, 4, 6, 1, 3, 1, 1, 25, 23, 0, 22, 0, 1, 0, 1, 1, 0]' : 0.180719}
{'[5, 0, 4, 6, 1, 3, 1, 1, 25, 23, 0, 22, 0, 1, 0, 1, 1, 0]' : 0.180822}
{'[5, 0, 4, 6, 1, 3, 1, 1, 25, 23, 0, 22, 0, 1, 0, 1, 1, 0]' : 0.180671}
{'[5, 0, 4, 6, 1, 3, 1, 1, 25, 23, 0, 22, 0, 1, 0, 1, 1, 0]' : 0.180432}
{'[5, 0, 4, 6, 1, 3, 1, 1, 25, 23, 0, 22, 0, 1, 0, 1, 1, 0]' : 0.180393}
{'[5, 0, 4, 6, 1, 3, 1, 1, 25, 23, 0, 22, 0, 1, 0, 1, 1, 0]' : 0.18029}
{'[5, 0, 4, 6, 1, 3, 1, 1, 25, 23, 0, 22, 0, 1, 0, 1, 1, 0]' : 0.180495}
{'[5, 0, 4, 6, 1, 3, 1, 1, 25, 23, 0, 22, 0, 1, 0, 1, 1, 0]' : 0.180239}
{'[5, 0, 4, 6, 1, 3, 1, 1, 25, 23, 0, 22, 0, 1, 0, 1, 1, 0]' : 0.18043}
{'[5, 0, 4, 6, 1, 3, 1, 1, 25, 23, 0, 22, 0, 1, 0, 1, 1, 0]' : 0.180355}
{'[5, 0, 4, 6, 1, 3, 1, 1, 25, 23, 0, 22, 0, 1, 0, 1, 1, 0]' : 0.180421}
{'[5, 0, 4, 6, 1, 3, 1, 1, 25, 23, 0, 22, 0, 1, 0, 1, 1, 0]' : 0.180642}
{'[5, 0, 4, 6, 1, 3, 1, 1, 25, 23, 0, 22, 0, 1, 0, 1, 1, 0]' : 0.18049}
{'[5, 0, 4, 6, 1, 3, 1, 1, 25, 23, 0, 22, 0, 1, 0, 1, 1, 0]' : 0.180306}
{'[5, 0, 4, 6, 1, 3, 1, 1, 25, 23, 0, 22, 0, 1, 0, 1, 1, 0]' : 0.180371}
{'[5, 0, 4, 6, 1, 3, 1, 1, 25, 23, 0, 22, 0, 1, 0, 1, 1, 0]' : 0.180352}
{'[5, 0, 4, 6, 1, 3, 1, 1, 25, 23, 0, 22, 0, 1, 0, 1, 1, 0]' : 0.180336}
{'[5, 0, 4, 6, 1, 3, 1, 1, 25, 23, 0, 22, 0, 1, 0, 1, 1, 0]' : 0.180287}
{'[5, 0, 4, 6, 1, 3, 1, 1, 25, 23, 0, 22, 0, 1, 0, 1, 1, 0]' : 0.180364}
{'[5, 0, 4, 6, 1, 3, 1, 1, 25, 23, 0, 22, 0, 1, 0, 1, 1, 0]' : 0.180509}
{'[5, 0, 4, 6, 1, 3, 1, 1, 25, 23, 0, 22, 0, 1, 0, 1, 1, 0]' : 0.18041}
{'[5, 0, 4, 6, 1, 3, 1, 1, 25, 23, 0, 22, 0, 1, 0, 1, 1, 0]' : 0.180369}
{'[5, 0, 4, 6, 1, 3, 1, 1, 25, 23, 0, 22, 0, 1, 0, 1, 1, 0]' : 0.180443}
{'[5, 0, 4, 6, 1, 3, 1, 1, 25, 23, 0, 22, 0, 1, 0, 1, 1, 0]' : 0.180492}
{'[5, 0, 4, 6, 1, 3, 1, 1, 25, 23, 0, 22, 0, 1, 0, 1, 1, 0]' : 0.180362}
{'[5, 0, 4, 6, 1, 3, 1, 1, 25, 23, 0, 22, 0, 1, 0, 1, 1, 0]' : 0.180399}
{'[5, 0, 4, 6, 1, 3, 1, 1, 25, 23, 0, 22, 0, 1, 0, 1, 1, 0]' : 0.180366}
{'[5, 0, 4, 6, 1, 3, 1, 1, 25, 23, 0, 22, 0, 1, 0, 1, 1, 0]' : 0.180858}
{'[5, 0, 4, 6, 1, 3, 1, 1, 25, 23, 0, 22, 0, 1, 0, 1, 1, 0]' : 0.180367}
{'[5, 0, 4, 6, 1, 3, 1, 1, 25, 23, 0, 22, 0, 1, 0, 1, 1, 0]' : 0.180487}

out:
 ["{'[5, 0, 4, 6, 1, 3, 1, 1, 25, 23, 0, 22, 0, 1, 0, 1, 1, 0]' : 0.180719}", "{'[5, 0, 4, 6, 1, 3, 1, 1, 25, 23, 0, 22, 0, 1, 0, 1, 1, 0]' : 0.180822}", "{'[5, 0, 4, 6, 1, 3, 1, 1, 25, 23, 0, 22, 0, 1, 0, 1, 1, 0]' : 0.180671}", "{'[5, 0, 4, 6, 1, 3, 1, 1, 25, 23, 0, 22, 0, 1, 0, 1, 1, 0]' : 0.180432}", "{'[5, 0, 4, 6, 1, 3, 1, 1, 25, 23, 0, 22, 0, 1, 0, 1, 1, 0]' : 0.180393}", "{'[5, 0, 4, 6, 1, 3, 1, 1, 25, 23, 0, 22, 0, 1, 0, 1, 1, 0]' : 0.18029}", "{'[5, 0, 4, 6, 1, 3, 1, 1, 25, 23, 0, 22, 0, 1, 0, 1, 1, 0]' : 0.180495}", "{'[5, 0, 4, 6, 1, 3, 1, 1, 25, 23, 0, 22, 0, 1, 0, 1, 1, 0]' : 0.180239}", "{'[5, 0, 4, 6, 1, 3, 1, 1, 25, 23, 0, 22, 0, 1, 0, 1, 1, 0]' : 0.18043}", "{'[5, 0, 4, 6, 1, 3, 1, 1, 25, 23, 0, 22, 0, 1, 0, 1, 1, 0]' : 0.180355}", "{'[5, 0, 4, 6, 1, 3, 1, 1, 25, 23, 0, 22, 0, 1, 0, 1, 1, 0]' : 0.180421}", "{'[5, 0, 4, 6, 1, 3, 1, 1, 25, 23, 0, 22, 0, 1, 0, 1, 1, 0]' : 0.180642}", "{'[5, 0, 4, 6, 1, 3, 1, 1, 25, 23, 0, 22, 0, 1, 0, 1, 1, 0]' : 0.18049}", "{'[5, 0, 4, 6, 1, 3, 1, 1, 25, 23, 0, 22, 0, 1, 0, 1, 1, 0]' : 0.180306}", "{'[5, 0, 4, 6, 1, 3, 1, 1, 25, 23, 0, 22, 0, 1, 0, 1, 1, 0]' : 0.180371}", "{'[5, 0, 4, 6, 1, 3, 1, 1, 25, 23, 0, 22, 0, 1, 0, 1, 1, 0]' : 0.180352}", "{'[5, 0, 4, 6, 1, 3, 1, 1, 25, 23, 0, 22, 0, 1, 0, 1, 1, 0]' : 0.180336}", "{'[5, 0, 4, 6, 1, 3, 1, 1, 25, 23, 0, 22, 0, 1, 0, 1, 1, 0]' : 0.180287}", "{'[5, 0, 4, 6, 1, 3, 1, 1, 25, 23, 0, 22, 0, 1, 0, 1, 1, 0]' : 0.180364}", "{'[5, 0, 4, 6, 1, 3, 1, 1, 25, 23, 0, 22, 0, 1, 0, 1, 1, 0]' : 0.180509}", "{'[5, 0, 4, 6, 1, 3, 1, 1, 25, 23, 0, 22, 0, 1, 0, 1, 1, 0]' : 0.18041}", "{'[5, 0, 4, 6, 1, 3, 1, 1, 25, 23, 0, 22, 0, 1, 0, 1, 1, 0]' : 0.180369}", "{'[5, 0, 4, 6, 1, 3, 1, 1, 25, 23, 0, 22, 0, 1, 0, 1, 1, 0]' : 0.180443}", "{'[5, 0, 4, 6, 1, 3, 1, 1, 25, 23, 0, 22, 0, 1, 0, 1, 1, 0]' : 0.180492}", "{'[5, 0, 4, 6, 1, 3, 1, 1, 25, 23, 0, 22, 0, 1, 0, 1, 1, 0]' : 0.180362}", "{'[5, 0, 4, 6, 1, 3, 1, 1, 25, 23, 0, 22, 0, 1, 0, 1, 1, 0]' : 0.180399}", "{'[5, 0, 4, 6, 1, 3, 1, 1, 25, 23, 0, 22, 0, 1, 0, 1, 1, 0]' : 0.180366}", "{'[5, 0, 4, 6, 1, 3, 1, 1, 25, 23, 0, 22, 0, 1, 0, 1, 1, 0]' : 0.180858}", "{'[5, 0, 4, 6, 1, 3, 1, 1, 25, 23, 0, 22, 0, 1, 0, 1, 1, 0]' : 0.180367}", "{'[5, 0, 4, 6, 1, 3, 1, 1, 25, 23, 0, 22, 0, 1, 0, 1, 1, 0]' : 0.180487}"]
returning from 'run': {'[5, 0, 4, 6, 1, 3, 1, 1, 25, 23, 0, 22, 0, 1, 0, 1, 1, 0]': ([0.180719, 0.180822, 0.180671, 0.180432, 0.180393, 0.18029, 0.180495, 0.180239, 0.18043, 0.180355, 0.180421, 0.180642, 0.18049, 0.180306, 0.180371, 0.180352, 0.180336, 0.180287, 0.180364, 0.180509, 0.18041, 0.180369, 0.180443, 0.180492, 0.180362, 0.180399, 0.180366, 0.180858, 0.180367, 0.180487], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.180719, 0.180822, 0.180671, 0.180432, 0.180393, 0.18029, 0.180495, 0.180239, 0.18043, 0.180355, 0.180421, 0.180642, 0.18049, 0.180306, 0.180371, 0.180352, 0.180336, 0.180287, 0.180364, 0.180509, 0.18041, 0.180369, 0.180443, 0.180492, 0.180362, 0.180399, 0.180366, 0.180858, 0.180367, 0.180487], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[5, 0, 4, 6, 1, 3, 1, 1, 25, 23, 0, 22, 0, 1, 0, 1, 1, 0]': ([0.180719, 0.180822, 0.180671, 0.180432, 0.180393, 0.18029, 0.180495, 0.180239, 0.18043, 0.180355, 0.180421, 0.180642, 0.18049, 0.180306, 0.180371, 0.180352, 0.180336, 0.180287, 0.180364, 0.180509, 0.18041, 0.180369, 0.180443, 0.180492, 0.180362, 0.180399, 0.180366, 0.180858, 0.180367, 0.180487], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [6, 2, 1, 6, 4, 1, 1, 1, 0, 3, 1, 0, 0, 0, 0, 0]
Fixed Factors: {'U1_I': 25, 'SCR': 1}
Testing candidate 13: [6, 2, 1, 6, 4, 1, 1, 1, 25, 0, 3, 1, 0, 0, 0, 1, 0, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	6
        Additions: 		130
        Multiplications: 	16
        Divisions: 		0
        Logical: 		0
        Reads: 			278
        Writes: 		79
        Comparisons:		16
        Gotos: 			0
        
digraph CFG {
	9626294 [label="9626294  y[i]=0.0;...",shape=box];
	9626294 -> _JOIN_9626295;
	9648802 [label="9648802  double scv_1, scv_2;...",shape=box];
	_JOIN_9626295 [label="_JOIN_9626295None...",shape=box];
	_JOIN_9626295 -> 9647359;
	9647521 [label="9647521  scv_4=scv_4+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	9647359 [label="9647359  double x_copy[32];...",shape=box];
	9650044 [label="9650044  double scv_4;...",shape=box];
	_JOIN_9647678 [label="_JOIN_9647678None...",shape=box];
	_JOIN_9647678 -> _JOIN_9647679;
	_JOIN_9647679 [label="_JOIN_9647679None...",shape=box];
	_JOIN_9647679 -> ForLoop9647931;
	ForLoop9647931 [label="ForLoop9647931  for (kkk=0; kkk<=ny-1; kkk=kkk+64) {...",shape=box];
	ForLoop9647931 -> ForLoop9647930;
	ForLoop9647931 -> _JOIN_9647931;
	ForLoop9647930 [label="ForLoop9647930  for (kk=kkk; kk<=min(ny-1,kkk+48); kk=kk+16) {...",shape=box];
	ForLoop9647930 -> 9647741;
	ForLoop9647930 -> _JOIN_9647930;
	ForLoop9647933 [label="ForLoop9647933  for (i=ii; i<=min(nx-1,ii+511); i=i+1) {...",shape=box];
	ForLoop9647933 -> 9650044;
	ForLoop9647933 -> _JOIN_9647933;
	_JOIN_9647675 [label="_JOIN_9647675None...",shape=box];
	_JOIN_9647675 -> _JOIN_9647678;
	ForLoop9647935 [label="ForLoop9647935  for (iii=0; iii<=nx-1; iii=iii+2048) {...",shape=box];
	ForLoop9647935 -> ForLoop9647934;
	ForLoop9647935 -> _JOIN_9647935;
	ForLoop9647934 [label="ForLoop9647934  for (ii=iii; ii<=min(nx-1,iii+1536); ii=ii+512) {...",shape=box];
	ForLoop9647934 -> ForLoop9647933;
	ForLoop9647934 -> _JOIN_9647934;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 9625567;
	9625567 [label="9625567  int i;...",shape=box];
	9625567 -> ForLoop9626226;
	ForLoop9647604 [label="ForLoop9647604  for (j=jj; j<=min(ny-1,jj+31)-3; j=j+4) {...",shape=box];
	ForLoop9647604 -> 9647521;
	ForLoop9647604 -> _JOIN_9647604;
	9625999 [label="9625999  y[i]=0.0;...",shape=box];
	_JOIN_9647822 [label="_JOIN_9647822None...",shape=box];
	_JOIN_9647822 -> ForLoop9647896;
	9647928 [label="9647928  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	9647928 -> _JOIN_9647930;
	9647741 [label="9647741  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	9648928 [label="9648928  double scv_3;...",shape=box];
	9647477 [label="9647477  for (j=jj; j<=min(ny-1,jj+31); j=j+1) ...",shape=box];
	ForLoop9626226 [label="ForLoop9626226  for (i=0; i<=ny-26; i=i+26) {...",shape=box];
	ForLoop9626226 -> 9625999;
	ForLoop9626226 -> _JOIN_9626226;
	_JOIN_9647604 [label="_JOIN_9647604None..expected=9369846271501.798828
actual=9369846271501.798828
.",shape=box];
	_JOIN_9647604 -> ForLoop9647675;
	ForLoop9647896 [label="ForLoop9647896  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kk)+1)%2)+1; k<=min(ny-1,kk+15); k=k+1) {...",shape=box];
	ForLoop9647896 -> 9648928;
	ForLoop9647896 -> _JOIN_9647896;
	9650056 [label="9650056  tmp[i]=scv_4;...",shape=box];
	9650056 -> _JOIN_9647933;
	_JOIN_9647896 [label="_JOIN_9647896None...",shape=box];
	_JOIN_9647896 -> 9647928;
	ForLoop9647822 [label="ForLoop9647822  for (k=kk; k<=min(ny-1,kk+15)-1; k=k+2) {...",shape=box];
	ForLoop9647822 -> 9648802;
	ForLoop9647822 -> _JOIN_9647822;
	9647674 [label="9647674  scv_4=scv_4+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	9647674 -> _JOIN_9647675;
	_JOIN_9647931 [label="_JOIN_9647931None...",shape=box];
	_JOIN_9647931 -> 9650056;
	_JOIN_9647930 [label="_JOIN_9647930None...",shape=box];
	_JOIN_9647930 -> _JOIN_9647931;
	_JOIN_9647933 [label="_JOIN_9647933None...",shape=box];
	_JOIN_9647933 -> _JOIN_9647934;
	ForLoop9647675 [label="ForLoop9647675  for (j=(min(ny-1,jj+31))-(((min(ny-1,jj+31))-(jj)+1)%4)+1; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop9647675 -> 9647674;
	ForLoop9647675 -> _JOIN_9647675;
	_JOIN_9647935 [label="_JOIN_9647935None...",shape=box];
	_JOIN_9647934 [label="_JOIN_9647934None...",shape=box];
	_JOIN_9647934 -> _JOIN_9647935;
	ForLoop9626295 [label="ForLoop9626295  for (i=ny-((ny-(0))%26); i<=ny-1; i=i+1) ...",shape=box];
	ForLoop9626295 -> 9626294;
	ForLoop9626295 -> _JOIN_9626295;
	_JOIN_9626226 [label="_JOIN_9626226None...",shape=box];
	_JOIN_9626226 -> ForLoop9626295;
	ForLoop9647678 [label="ForLoop9647678  for (jj=jjj; jj<=min(ny-1,jjj+480); jj=jj+32) {...",shape=box];
	ForLoop9647678 -> 9647477;
	ForLoop9647678 -> _JOIN_9647678;
	ForLoop9647679 [label="ForLoop9647679  for (jjj=0; jjj<=ny-1; jjj=jjj+512) {...",shape=box];
	ForLoop9647679 -> ForLoop9647678;
	ForLoop9647679 -> _JOIN_9647679;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest50.exe __orio_perftest50.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest50.exe  
{'[6, 2, 1, 6, 4, 1, 1, 1, 25, 0, 3, 1, 0, 0, 0, 1, 0, 0]' : 0.223367}
{'[6, 2, 1, 6, 4, 1, 1, 1, 25, 0, 3, 1, 0, 0, 0, 1, 0, 0]' : 0.223392}
{'[6, 2, 1, 6, 4, 1, 1, 1, 25, 0, 3, 1, 0, 0, 0, 1, 0, 0]' : 0.223844}
{'[6, 2, 1, 6, 4, 1, 1, 1, 25, 0, 3, 1, 0, 0, 0, 1, 0, 0]' : 0.223355}
{'[6, 2, 1, 6, 4, 1, 1, 1, 25, 0, 3, 1, 0, 0, 0, 1, 0, 0]' : 0.223313}
{'[6, 2, 1, 6, 4, 1, 1, 1, 25, 0, 3, 1, 0, 0, 0, 1, 0, 0]' : 0.223288}
{'[6, 2, 1, 6, 4, 1, 1, 1, 25, 0, 3, 1, 0, 0, 0, 1, 0, 0]' : 0.223634}
{'[6, 2, 1, 6, 4, 1, 1, 1, 25, 0, 3, 1, 0, 0, 0, 1, 0, 0]' : 0.22339}
{'[6, 2, 1, 6, 4, 1, 1, 1, 25, 0, 3, 1, 0, 0, 0, 1, 0, 0]' : 0.223328}
{'[6, 2, 1, 6, 4, 1, 1, 1, 25, 0, 3, 1, 0, 0, 0, 1, 0, 0]' : 0.22333}
{'[6, 2, 1, 6, 4, 1, 1, 1, 25, 0, 3, 1, 0, 0, 0, 1, 0, 0]' : 0.223289}
{'[6, 2, 1, 6, 4, 1, 1, 1, 25, 0, 3, 1, 0, 0, 0, 1, 0, 0]' : 0.223628}
{'[6, 2, 1, 6, 4, 1, 1, 1, 25, 0, 3, 1, 0, 0, 0, 1, 0, 0]' : 0.223297}
{'[6, 2, 1, 6, 4, 1, 1, 1, 25, 0, 3, 1, 0, 0, 0, 1, 0, 0]' : 0.22346}
{'[6, 2, 1, 6, 4, 1, 1, 1, 25, 0, 3, 1, 0, 0, 0, 1, 0, 0]' : 0.223313}
{'[6, 2, 1, 6, 4, 1, 1, 1, 25, 0, 3, 1, 0, 0, 0, 1, 0, 0]' : 0.22339}
{'[6, 2, 1, 6, 4, 1, 1, 1, 25, 0, 3, 1, 0, 0, 0, 1, 0, 0]' : 0.223509}
{'[6, 2, 1, 6, 4, 1, 1, 1, 25, 0, 3, 1, 0, 0, 0, 1, 0, 0]' : 0.223282}
{'[6, 2, 1, 6, 4, 1, 1, 1, 25, 0, 3, 1, 0, 0, 0, 1, 0, 0]' : 0.223356}
{'[6, 2, 1, 6, 4, 1, 1, 1, 25, 0, 3, 1, 0, 0, 0, 1, 0, 0]' : 0.223678}
{'[6, 2, 1, 6, 4, 1, 1, 1, 25, 0, 3, 1, 0, 0, 0, 1, 0, 0]' : 0.223891}
{'[6, 2, 1, 6, 4, 1, 1, 1, 25, 0, 3, 1, 0, 0, 0, 1, 0, 0]' : 0.223282}
{'[6, 2, 1, 6, 4, 1, 1, 1, 25, 0, 3, 1, 0, 0, 0, 1, 0, 0]' : 0.223297}
{'[6, 2, 1, 6, 4, 1, 1, 1, 25, 0, 3, 1, 0, 0, 0, 1, 0, 0]' : 0.223267}
{'[6, 2, 1, 6, 4, 1, 1, 1, 25, 0, 3, 1, 0, 0, 0, 1, 0, 0]' : 0.22333}
{'[6, 2, 1, 6, 4, 1, 1, 1, 25, 0, 3, 1, 0, 0, 0, 1, 0, 0]' : 0.223298}
{'[6, 2, 1, 6, 4, 1, 1, 1, 25, 0, 3, 1, 0, 0, 0, 1, 0, 0]' : 0.22343}
{'[6, 2, 1, 6, 4, 1, 1, 1, 25, 0, 3, 1, 0, 0, 0, 1, 0, 0]' : 0.22333}
{'[6, 2, 1, 6, 4, 1, 1, 1, 25, 0, 3, 1, 0, 0, 0, 1, 0, 0]' : 0.223729}
{'[6, 2, 1, 6, 4, 1, 1, 1, 25, 0, 3, 1, 0, 0, 0, 1, 0, 0]' : 0.223366}

out:
 ["{'[6, 2, 1, 6, 4, 1, 1, 1, 25, 0, 3, 1, 0, 0, 0, 1, 0, 0]' : 0.223367}", "{'[6, 2, 1, 6, 4, 1, 1, 1, 25, 0, 3, 1, 0, 0, 0, 1, 0, 0]' : 0.223392}", "{'[6, 2, 1, 6, 4, 1, 1, 1, 25, 0, 3, 1, 0, 0, 0, 1, 0, 0]' : 0.223844}", "{'[6, 2, 1, 6, 4, 1, 1, 1, 25, 0, 3, 1, 0, 0, 0, 1, 0, 0]' : 0.223355}", "{'[6, 2, 1, 6, 4, 1, 1, 1, 25, 0, 3, 1, 0, 0, 0, 1, 0, 0]' : 0.223313}", "{'[6, 2, 1, 6, 4, 1, 1, 1, 25, 0, 3, 1, 0, 0, 0, 1, 0, 0]' : 0.223288}", "{'[6, 2, 1, 6, 4, 1, 1, 1, 25, 0, 3, 1, 0, 0, 0, 1, 0, 0]' : 0.223634}", "{'[6, 2, 1, 6, 4, 1, 1, 1, 25, 0, 3, 1, 0, 0, 0, 1, 0, 0]' : 0.22339}", "{'[6, 2, 1, 6, 4, 1, 1, 1, 25, 0, 3, 1, 0, 0, 0, 1, 0, 0]' : 0.223328}", "{'[6, 2, 1, 6, 4, 1, 1, 1, 25, 0, 3, 1, 0, 0, 0, 1, 0, 0]' : 0.22333}", "{'[6, 2, 1, 6, 4, 1, 1, 1, 25, 0, 3, 1, 0, 0, 0, 1, 0, 0]' : 0.223289}", "{'[6, 2, 1, 6, 4, 1, 1, 1, 25, 0, 3, 1, 0, 0, 0, 1, 0, 0]' : 0.223628}", "{'[6, 2, 1, 6, 4, 1, 1, 1, 25, 0, 3, 1, 0, 0, 0, 1, 0, 0]' : 0.223297}", "{'[6, 2, 1, 6, 4, 1, 1, 1, 25, 0, 3, 1, 0, 0, 0, 1, 0, 0]' : 0.22346}", "{'[6, 2, 1, 6, 4, 1, 1, 1, 25, 0, 3, 1, 0, 0, 0, 1, 0, 0]' : 0.223313}", "{'[6, 2, 1, 6, 4, 1, 1, 1, 25, 0, 3, 1, 0, 0, 0, 1, 0, 0]' : 0.22339}", "{'[6, 2, 1, 6, 4, 1, 1, 1, 25, 0, 3, 1, 0, 0, 0, 1, 0, 0]' : 0.223509}", "{'[6, 2, 1, 6, 4, 1, 1, 1, 25, 0, 3, 1, 0, 0, 0, 1, 0, 0]' : 0.223282}", "{'[6, 2, 1, 6, 4, 1, 1, 1, 25, 0, 3, 1, 0, 0, 0, 1, 0, 0]' : 0.223356}", "{'[6, 2, 1, 6, 4, 1, 1, 1, 25, 0, 3, 1, 0, 0, 0, 1, 0, 0]' : 0.223678}", "{'[6, 2, 1, 6, 4, 1, 1, 1, 25, 0, 3, 1, 0, 0, 0, 1, 0, 0]' : 0.223891}", "{'[6, 2, 1, 6, 4, 1, 1, 1, 25, 0, 3, 1, 0, 0, 0, 1, 0, 0]' : 0.223282}", "{'[6, 2, 1, 6, 4, 1, 1, 1, 25, 0, 3, 1, 0, 0, 0, 1, 0, 0]' : 0.223297}", "{'[6, 2, 1, 6, 4, 1, 1, 1, 25, 0, 3, 1, 0, 0, 0, 1, 0, 0]' : 0.223267}", "{'[6, 2, 1, 6, 4, 1, 1, 1, 25, 0, 3, 1, 0, 0, 0, 1, 0, 0]' : 0.22333}", "{'[6, 2, 1, 6, 4, 1, 1, 1, 25, 0, 3, 1, 0, 0, 0, 1, 0, 0]' : 0.223298}", "{'[6, 2, 1, 6, 4, 1, 1, 1, 25, 0, 3, 1, 0, 0, 0, 1, 0, 0]' : 0.22343}", "{'[6, 2, 1, 6, 4, 1, 1, 1, 25, 0, 3, 1, 0, 0, 0, 1, 0, 0]' : 0.22333}", "{'[6, 2, 1, 6, 4, 1, 1, 1, 25, 0, 3, 1, 0, 0, 0, 1, 0, 0]' : 0.223729}", "{'[6, 2, 1, 6, 4, 1, 1, 1, 25, 0, 3, 1, 0, 0, 0, 1, 0, 0]' : 0.223366}"]
returning from 'run': {'[6, 2, 1, 6, 4, 1, 1, 1, 25, 0, 3, 1, 0, 0, 0, 1, 0, 0]': ([0.223367, 0.223392, 0.223844, 0.223355, 0.223313, 0.223288, 0.223634, 0.22339, 0.223328, 0.22333, 0.223289, 0.223628, 0.223297, 0.22346, 0.223313, 0.22339, 0.223509, 0.223282, 0.223356, 0.223678, 0.223891, 0.223282, 0.223297, 0.223267, 0.22333, 0.223298, 0.22343, 0.22333, 0.223729, 0.223366], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.223367, 0.223392, 0.223844, 0.223355, 0.223313, 0.223288, 0.223634, 0.22339, 0.223328, 0.22333, 0.223289, 0.223628, 0.223297, 0.22346, 0.223313, 0.22339, 0.223509, 0.223282, 0.223356, 0.223678, 0.223891, 0.223282, 0.223297, 0.223267, 0.22333, 0.223298, 0.22343, 0.22333, 0.223729, 0.223366], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[6, 2, 1, 6, 4, 1, 1, 1, 25, 0, 3, 1, 0, 0, 0, 1, 0, 0]': ([0.223367, 0.223392, 0.223844, 0.223355, 0.223313, 0.223288, 0.223634, 0.22339, 0.223328, 0.22333, 0.223289, 0.223628, 0.223297, 0.22346, 0.223313, 0.22339, 0.223509, 0.223282, 0.223356, 0.223678, 0.223891, 0.223282, 0.223297, 0.223267, 0.22333, 0.223298, 0.22343, 0.22333, 0.223729, 0.223366], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [2, 6, 1, 3, 0, 4, 1, 0, 7, 0, 13, 0, 0, 2, 0, 0]
Fixed Factors: {'U1_I': 25, 'SCR': 1}
Testing candidate 14: [2, 6, 1, 3, 0, 4, 1, 0, 25, 7, 0, 13, 0, 0, 2, 1, 0, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	43
        Max loop nest depth: 	6
        Additions: 		2231
        Multiplications: 	864
        Divisions: 		0
        Logical: 		0
        Reads: 			4715
        Writes: 		980
        Comparisons:		43
        Gotos: 			0
        
digraph CFG {
	ForLoop9772148 [label="ForLoop9772148  for (kt=kk; kt<=min(ny-1,kk+15)-31; kt=kt+32) {...",shape=box];
	ForLoop9772148 -> 9790700;
	ForLoop9772148 -> _JOIN_9772148;
	ForLoop9778189 [label="ForLoop9778189  for (iii=0; iii<=nx-1; iii=iii+256) {...",shape=box];
	ForLoop9778189 -> ForLoop9778188;
	ForLoop9778189 -> _JOIN_9778189;
	9762995 [label="9762995  double x_copy[512];...",shape=box];
	_JOIN_9776511 [label="_JOIN_9776511None...",shape=box];
	_JOIN_9776511 -> ForLoop9776585;
	ForLoop9775453 [label="ForLoop9775453  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kt)+1)%14)+1; k<=min(ny-1,kk+15); k=k+1) {...",shape=box];
	ForLoop9775453 -> 9798356;
	ForLoop9775453 -> _JOIN_9775453;
	9774889 [label="9774889  int k;...",shape=box];
	9774889 -> ForLoop9775379;
	ForLoop9776592 [label="ForLoop9776592  for (i=ii; i<=min(nx-1,ii+31)-7; i=i+8) {...",shape=box];
	ForLoop9776592 -> 9837146;
	ForLoop9776592 -> _JOIN_9776592;
	9651429 [label="9651429  int i;...",shape=box];
	9651429 -> ForLoop9652088;
	ForLoop9776731 [label="ForLoop9776731  for (j=jj; j<=min(ny-1,jj+511); j=j+1) {...",shape=box];
	ForLoop9776731 -> 9776730;
	ForLoop9776731 -> _JOIN_9776731;
	ForLoop9776733 [label="ForLoop9776733  for (jj=0; jj<=ny-1; jj=jj+512) {...",shape=box];
	ForLoop9776733 -> 9776689;
	ForLoop9776733 -> _JOIN_9776733;
	ForLoop9778183 [label="ForLoop9778183  for (kk=kkk; kk<=min(ny-1,kkk+496); kk=kk+16) {...",shape=box];
	ForLoop9778183 -> ForLoop9777705;
	ForLoop9778183 -> _JOIN_9778183;
	_JOIN_9774321 [label="_JOIN_9774321None...",shape=box];
	_JOIN_9774321 -> 9774323;
	_JOIN_9778189 [label="_JOIN_9778189None...",shape=box];
	_JOIN_9778188 [label="_JOIN_9778188None...",shape=box];
	_JOIN_9778188 -> _JOIN_9778189;
	ForLoop9776511 [label="ForLoop9776511  for (k=kt; k<=min(ny-1,kk+15)-13; k=k+14) {...",shape=box];
	ForLoop9776511 -> 9800217;
	ForLoop9776511 -> _JOIN_9776511;
	_JOIN_9778183 [label="_JOIN_9778183None...",shape=box];
	_JOIN_9778183 -> _JOIN_9778184;
	9837164 [label="9837164  tmp[(i+1)]=scv_154;...",shape=box];
	9796126 [label="9796126  double scv_93;...",shape=box];
	_JOIN_9778186 [label="_JOIN_9778186None...",shape=box];
	_JOIN_9778186 -> _JOIN_9778188;
	9778578 [label="9778578  double scv_1;...",shape=box];
	9839264 [label="9839264  double scv_162, scv_163, scv_164, scv_165, scv_166, scv_167, scv_168, scv_169;...",shape=box];
	9800586 [label="9800586  double scv_153;...",shape=box];
	9799471 [label="9799471  double scv_138;...",shape=box];
	9763161 [label="9763161  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	ForLoop9773189 [label="ForLoop9773189  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kt)+1)%14)+1; k<=min(ny-1,kk+15); k=k+1) {...",shape=box];
	ForLoop9773189 -> 9793896;
	ForLoop9773189 -> _JOIN_9773189;
	ForLoop9773755 [label="ForLoop9773755  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kt)+1)%14)+1; k<=min(ny-1,kk+15); k=k+1) {...",shape=box];
	ForLoop9773755 -> 9795011;
	ForLoop9773755 -> _JOIN_9773755;
	_JOIN_9772555 [label="_JOIN_9772555None...",shape=box];
	_JOIN_9772555 -> ForLoop9772623;
	_JOIN_9776590 [label="_JOIN_9776590None...",shape=box];
	_JOIN_9776590 -> 9837164;
	_JOIN_9776592 [label="_JOIN_9776592None...",shape=box];
	_JOIN_9776592 -> ForLoop9778186;
	_JOIN_9652088 [label="_JOIN_9652088None...",shape=box];
	_JOIN_9652088 -> ForLoop9652157;
	_JOIN_9773755 [label="_JOIN_9773755None...",shape=box];
	_JOIN_9773755 -> 9773757;
	_JOIN_9774247 [label="_JOIN_9774247None...",shape=box];
	_JOIN_9774247 -> ForLoop9774321;
	9800217 [label="9800217  double scv_139, scv_140, scv_141, scv_142, scv_143, scv_144, scv_145, scv_146;...",shape=box];
	_JOIN_9773681 [label="_JOIN_9773681None...",shape=box];
	_JOIN_9773681 -> ForLoop9773755;
	ForLoop9773681 [label="ForLoop9773681  for (k=kt; k<=min(ny-1,kk+15)-13; k=k+14) {...",shape=box];
	ForLoop9773681 -> 9794642;
	ForLoop9773681 -> _JOIN_9773681;
	9776689 [label="9776689  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	9776689 -> ForLoop9776731;
	ForLoop9774247 [label="ForLoop9774247  for (k=kt; k<=min(ny-1,kk+15)-13; k=k+14) {...",shape=box];
	ForLoop9774247 -> 9795757;
	ForLoop9774247 -> _JOIN_9774247;
	_JOIN_9778112 [label="_JOIN_9778112None...",shape=box];
	_JOIN_9778112 -> ForLoop9778180;
	ForLoop9774321 [label="ForLoop9774321  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kt)+1)%14)+1; k<=min(ny-1,kk+15); k=k+1) {...",shape=box];
	ForLoop9774321 -> 9796126;
	ForLoop9774321 -> _JOIN_9774321;
	ForLoop9773115 [label="ForLoop9773115  for (k=kt; k<=min(ny-1,kk+15)-13; k=k+14) {...",shape=box];
	ForLoop9773115 -> 9793527;
	ForLoop9773115 -> _JOIN_9773115;
	ForLoop9763647 [label="ForLoop9763647  for (jj=0; jj<=ny-1; jj=jj+512) {...",shape=box];
	ForLoop9763647 -> 9763161;
	ForLoop9763647 -> _JOIN_9763647;
	ForLoop9763645 [label="ForLoop9763645  for (j=jj; j<=min(ny-1,jj+511); j=j+1) {...",shape=box];
	ForLoop9763645 -> 9778578;
	ForLoop9763645 -> _JOIN_9763645;
	ForLoop9776590 [label="ForLoop9776590  for (kkk=0; kkk<=ny-1; kkk=kkk+512) {...",shape=box];
	ForLoop9776590 -> ForLoop9776588;
	ForLoop9776590 -> _JOIN_9776590;
	ForLoop9778188 [label="ForLoop9778188  for (ii=iii; ii<=min(nx-1,iii+224); ii=ii+32) {...",shape=box];
	ForLoop9778188 -> 9763028;
	ForLoop9778188 -> _JOIN_9778188;
	9795757 [label="9795757  double scv_79, scv_80, scv_81, scv_82, scv_83, scv_84, scv_85, scv_86;...",shape=box];
	_JOIN_9775945 [label="_JOIN_9775945None...",shape=box];
	_JOIN_9775945 -> ForLoop9776019;
	9794642 [label="9794642  double scv_64, scv_65, scv_66, scv_67, scv_68, scv_69, scv_70, scv_71;...",shape=box];
	ForLoop9778180 [label="ForLoop9778180  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kt)+1)%14)+1; k<=min(ny-1,kk+15); k=k+1) {...",shape=box];
	ForLoop9778180 -> 9840897;
	ForLoop9778180 -> _JOIN_9778180;
	9773191 [label="9773191  int k;...",shape=box];
	9773191 -> ForLoop9773681;
	ForLoop9778184 [label="ForLoop9778184  for (kkk=0; kkk<=ny-1; kkk=kkk+512) {...",shape=box];
	ForLoop9778184 -> ForLoop9778183;
	ForLoop9778184 -> _JOIN_9778184;
	ForLoop9778186 [label="ForLoop9778186  for (i=(min(nx-1,ii+31))-(((min(nx-1,ii+31))-(ii)+1)%8)+1; i<=min(nx-1,ii+31); i=i+1) {...",shape=box];
	ForLoop9778186 -> 9846527;
	ForLoop9778186 -> _JOIN_9778186;
	ForLoop9775379 [label="ForLoop9775379  for (k=kt; k<=min(ny-1,kk+15)-13; k=k+14) {...",shape=box];
	ForLoop9775379 -> 9797987;
	ForLoop9775379 -> _JOIN_9775379;
	9772149 [label="9772149  int k;...",shape=box];
	9772149 -> ForLoop9772555;
	_JOIN_9772623 [label="_JOIN_9772623None...",shape=box];
	_JOIN_9772623 -> 9772625;
	9799102 [label="9799102  double scv_124, scv_125, scv_126, scv_127, scv_128, scv_129, scv_130, scv_131;...",shape=box];
	9652156 [label="9652156  y[i]=0.0;...",shape=box];
	9652156 -> _JOIN_9652157;
	9793896 [label="9793896  double scv_63;...",shape=box];
	9837146 [label="9837146  double scv_154, scv_155, scv_156, scv_157, scv_158, scv_159, scv_160, scv_161;...",shape=box];
	9796872 [label="9796872  double scv_94, scv_95, scv_96, scv_97, scv_98, scv_99, scv_100, scv_101;...",shape=box];
	9840537 [label="9840537  double scv_194, scv_195, scv_196, scv_197, scv_198, scv_199, scv_200, scv_201;...",shape=box];
	ForLoop9774887 [label="ForLoop9774887  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kt)+1)%14)+1; k<=min(ny-1,kk+15); k=k+1) {...",shape=box];
	ForLoop9774887 -> 9797241;
	ForLoop9774887 -> _JOIN_9774887;
	ForLoop9776588 [label="ForLoop9776588  for (kk=kkk; kk<=min(ny-1,kkk+496); kk=kk+16) {...",shape=box];
	ForLoop9776588 -> ForLoop9772148;
	ForLoop9776588 -> _JOIN_9776588;
	_JOIN_9774813 [label="_JOIN_9774813None...",shape=box];
	_JOIN_9774813 -> ForLoop9774887;
	ForLoop9776585 [label="ForLoop9776585  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kt)+1)%14)+1; k<=min(ny-1,kk+15); k=k+1) {...",shape=box];
	ForLoop9776585 -> 9800586;
	ForLoop9776585 -> _JOIN_9776585;
	9792781 [label="9792781  double scv_48;...",shape=box];
	_JOIN_9773189 [label="_JOIN_9773189None...",shape=box];
	_JOIN_9773189 -> 9773191;
	_JOIN_9773115 [label="_JOIN_9773115None...",shape=box];
	_JOIN_9773115 -> ForLoop9773189;
	_JOIN_9774887 [label="_JOIN_9774887None...",shape=box];
	_JOIN_9774887 -> 9774889;
	_JOIN_9777705 [label="_JOIN_9777705None...",shape=box];
	_JOIN_9777705 -> 9777706;
	9840897 [label="9840897  double scv_208;...",shape=box];
	_JOIN_9775379 [label="_JOIN_9775379None...",shape=box];
	_JOIN_9775379 -> ForLoop9775453;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 9651429;
	9776021 [label="9776021  int k;...",shape=box];
	9776021 -> ForLoop9776511;
	9798356 [label="9798356  double scv_123;...",shape=box];
	9774323 [label="9774323  int k;...",shape=box];
	9774323 -> ForLoop9774813;
	9792421 [label="9792421  double scv_34, scv_35, scv_36, scv_37, scv_38, scv_39, scv_40, scv_41;...",shape=box];
	_JOIN_9652157 [label="_JOIN_9652157None...",shape=box];
	_JOIN_9652157 -> 9762995;
	ForLoop9775945 [label="ForLoop9775945  for (k=kt; k<=min(ny-1,kk+15)-13; k=k+14) {...",shape=box];
	ForLoop9775945 -> 9799102;
	ForLoop9775945 -> _JOIN_9775945;
	9651861 [label="9651861  y[i]=0.0;...",shape=box];
	ForLoop9774813 [label="ForLoop9774813  for (k=kt; k<=min(ny-1,kk+15)-13; k=k+14) {...",shape=box];
	ForLoop9774813 -> 9796872;
	ForLoop9774813 -> _JOIN_9774813;
	9797987 [label="9797987  double scv_109, scv_110, scv_111, scv_112, scv_113, scv_114, scv_115, scv_116;...",shape=box];
	_JOIN_9763647 [label="_JOIN_9763647None...",shape=box];
	_JOIN_9763647 -> ForLoop9776590;
	_JOIN_9763645 [label="_JOIN_9763645None...",shape=box];
	_JOIN_9763645 -> _JOIN_9763647;
	ForLoop9777705 [label="ForLoop9777705  for (kt=kk; kt<=min(ny-1,kk+15)-31; kt=kt+32) {...",shape=box];
	ForLoop9777705 -> 9839264;
	ForLoop9777705 -> _JOIN_9777705;
	9775455 [label="9775455  int k;...",shape=box];
	9775455 -> ForLoop9775945;
	9846527 [label="9846527  double scv_209;...",shape=box];
	9777706 [label="9777706  int k;...",shape=box];
	9777706 -> ForLoop9778112;
	_JOIN_9776019 [label="_JOIN_9776019None...",shape=box];
	_JOIN_9776019 -> 9776021;
	ForLoop9772623 [label="ForLoop9772623  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kt)+1)%14)+1; k<=min(ny-1,kk+15); k=k+1) {...",shape=box];
	ForLoop9772623 -> 9792781;
	ForLoop9772623 -> _JOIN_9772623;
	9772625 [label="9772625  int k;...",shape=box];
	9772625 -> ForLoop9773115;
	ForLoop9772555 [label="ForLoop9772555  for (k=kt; k<=min(ny-1,kk+15)-13; k=k+14) {...",shape=box];
	ForLoop9772555 -> 9792421;
	ForLoop9772555 -> _JOIN_9772555;
	9773757 [label="9773757  int k;...",shape=box];
	9773757 -> ForLoop9774247;
	9795011 [label="9795011  double scv_78;...",shape=box];
	9797241 [label="9797241  double scv_108;...",shape=box];
	9776730 [label="9776730  scv_209=scv_209+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	9776730 -> _JOIN_9776731;
	ForLoop9778112 [label="ForLoop9778112  for (k=kt; k<=min(ny-1,kk+15)-13; k=k+14) {...",shape=box];
	ForLoop9778112 -> 9840537;
	ForLoop9778112 -> _JOIN_9778112;
	9846539 [label="9846539  tmp[i]=scv_209;...",shape=box];
	9846539 -> _JOIN_9778186;
	ForLoop9776019 [label="ForLoop9776019  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kt)+1)%14)+1; k<=min(ny-1,kk+15); k=k+1) {...",shape=box];
	ForLoop9776019 -> 9799471;
	ForLoop9776019 -> _JOIN_9776019;
	9790700 [label="9790700  double scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8, scv_9;...",shape=box];
	ForLoop9652157 [label="ForLoop9652157  for (i=ny-((ny-(0))%26); i<=ny-1; i=i+1) ...",shape=box];
	ForLoop9652157 -> 9652156;
	ForLoop9652157 -> _JOIN_9652157;
	_JOIN_9775453 [label="_JOIN_9775453None...",shape=box];
	_JOIN_9775453 -> 9775455;
	9793527 [label="9793527  double scv_49, scv_50, scv_51, scv_52, scv_53, scv_54, scv_55, scv_56;...",shape=box];
	_JOIN_9778180 [label="_JOIN_9778180None...",shape=box];
	_JOIN_9778180 -> _JOIN_9778183;
	_JOIN_9776731 [label="_JOIN_9776731None...",shape=box];
	_JOIN_9776731 -> _JOIN_9776733;
	_JOIN_9776733 [label="_JOIN_9776733None...",shape=box];
	_JOIN_9776733 -> ForLoop9778184;
	_JOIN_9776585 [label="_JOIN_9776585None...",shape=box];
	_JOIN_9776585 -> _JOIN_9776588;
	ForLoop9652088 [lexpected=9369846271501.798828
actual=9369846271501.798828
abel="ForLoop9652088  for (i=0; i<=ny-26; i=i+26) {...",shape=box];
	ForLoop9652088 -> 9651861;
	ForLoop9652088 -> _JOIN_9652088;
	_JOIN_9776588 [label="_JOIN_9776588None...",shape=box];
	_JOIN_9776588 -> _JOIN_9776590;
	_JOIN_9778184 [label="_JOIN_9778184None...",shape=box];
	_JOIN_9778184 -> 9846539;
	9763028 [label="9763028  int i;...",shape=box];
	9763028 -> ForLoop9776592;
	_JOIN_9772148 [label="_JOIN_9772148None...",shape=box];
	_JOIN_9772148 -> 9772149;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest51.exe __orio_perftest51.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest51.exe  
{'[2, 6, 1, 3, 0, 4, 1, 0, 25, 7, 0, 13, 0, 0, 2, 1, 0, 0]' : 0.142999}
{'[2, 6, 1, 3, 0, 4, 1, 0, 25, 7, 0, 13, 0, 0, 2, 1, 0, 0]' : 0.142862}
{'[2, 6, 1, 3, 0, 4, 1, 0, 25, 7, 0, 13, 0, 0, 2, 1, 0, 0]' : 0.142627}
{'[2, 6, 1, 3, 0, 4, 1, 0, 25, 7, 0, 13, 0, 0, 2, 1, 0, 0]' : 0.142752}
{'[2, 6, 1, 3, 0, 4, 1, 0, 25, 7, 0, 13, 0, 0, 2, 1, 0, 0]' : 0.142644}
{'[2, 6, 1, 3, 0, 4, 1, 0, 25, 7, 0, 13, 0, 0, 2, 1, 0, 0]' : 0.142849}
{'[2, 6, 1, 3, 0, 4, 1, 0, 25, 7, 0, 13, 0, 0, 2, 1, 0, 0]' : 0.142704}
{'[2, 6, 1, 3, 0, 4, 1, 0, 25, 7, 0, 13, 0, 0, 2, 1, 0, 0]' : 0.147087}
{'[2, 6, 1, 3, 0, 4, 1, 0, 25, 7, 0, 13, 0, 0, 2, 1, 0, 0]' : 0.142879}
{'[2, 6, 1, 3, 0, 4, 1, 0, 25, 7, 0, 13, 0, 0, 2, 1, 0, 0]' : 0.142614}
{'[2, 6, 1, 3, 0, 4, 1, 0, 25, 7, 0, 13, 0, 0, 2, 1, 0, 0]' : 0.142601}
{'[2, 6, 1, 3, 0, 4, 1, 0, 25, 7, 0, 13, 0, 0, 2, 1, 0, 0]' : 0.142789}
{'[2, 6, 1, 3, 0, 4, 1, 0, 25, 7, 0, 13, 0, 0, 2, 1, 0, 0]' : 0.142752}
{'[2, 6, 1, 3, 0, 4, 1, 0, 25, 7, 0, 13, 0, 0, 2, 1, 0, 0]' : 0.142697}
{'[2, 6, 1, 3, 0, 4, 1, 0, 25, 7, 0, 13, 0, 0, 2, 1, 0, 0]' : 0.142617}
{'[2, 6, 1, 3, 0, 4, 1, 0, 25, 7, 0, 13, 0, 0, 2, 1, 0, 0]' : 0.142879}
{'[2, 6, 1, 3, 0, 4, 1, 0, 25, 7, 0, 13, 0, 0, 2, 1, 0, 0]' : 0.142681}
{'[2, 6, 1, 3, 0, 4, 1, 0, 25, 7, 0, 13, 0, 0, 2, 1, 0, 0]' : 0.142619}
{'[2, 6, 1, 3, 0, 4, 1, 0, 25, 7, 0, 13, 0, 0, 2, 1, 0, 0]' : 0.147115}
{'[2, 6, 1, 3, 0, 4, 1, 0, 25, 7, 0, 13, 0, 0, 2, 1, 0, 0]' : 0.142971}
{'[2, 6, 1, 3, 0, 4, 1, 0, 25, 7, 0, 13, 0, 0, 2, 1, 0, 0]' : 0.142701}
{'[2, 6, 1, 3, 0, 4, 1, 0, 25, 7, 0, 13, 0, 0, 2, 1, 0, 0]' : 0.142681}
{'[2, 6, 1, 3, 0, 4, 1, 0, 25, 7, 0, 13, 0, 0, 2, 1, 0, 0]' : 0.142855}
{'[2, 6, 1, 3, 0, 4, 1, 0, 25, 7, 0, 13, 0, 0, 2, 1, 0, 0]' : 0.142701}
{'[2, 6, 1, 3, 0, 4, 1, 0, 25, 7, 0, 13, 0, 0, 2, 1, 0, 0]' : 0.142661}
{'[2, 6, 1, 3, 0, 4, 1, 0, 25, 7, 0, 13, 0, 0, 2, 1, 0, 0]' : 0.142711}
{'[2, 6, 1, 3, 0, 4, 1, 0, 25, 7, 0, 13, 0, 0, 2, 1, 0, 0]' : 0.142813}
{'[2, 6, 1, 3, 0, 4, 1, 0, 25, 7, 0, 13, 0, 0, 2, 1, 0, 0]' : 0.142652}
{'[2, 6, 1, 3, 0, 4, 1, 0, 25, 7, 0, 13, 0, 0, 2, 1, 0, 0]' : 0.146984}
{'[2, 6, 1, 3, 0, 4, 1, 0, 25, 7, 0, 13, 0, 0, 2, 1, 0, 0]' : 0.142989}

out:
 ["{'[2, 6, 1, 3, 0, 4, 1, 0, 25, 7, 0, 13, 0, 0, 2, 1, 0, 0]' : 0.142999}", "{'[2, 6, 1, 3, 0, 4, 1, 0, 25, 7, 0, 13, 0, 0, 2, 1, 0, 0]' : 0.142862}", "{'[2, 6, 1, 3, 0, 4, 1, 0, 25, 7, 0, 13, 0, 0, 2, 1, 0, 0]' : 0.142627}", "{'[2, 6, 1, 3, 0, 4, 1, 0, 25, 7, 0, 13, 0, 0, 2, 1, 0, 0]' : 0.142752}", "{'[2, 6, 1, 3, 0, 4, 1, 0, 25, 7, 0, 13, 0, 0, 2, 1, 0, 0]' : 0.142644}", "{'[2, 6, 1, 3, 0, 4, 1, 0, 25, 7, 0, 13, 0, 0, 2, 1, 0, 0]' : 0.142849}", "{'[2, 6, 1, 3, 0, 4, 1, 0, 25, 7, 0, 13, 0, 0, 2, 1, 0, 0]' : 0.142704}", "{'[2, 6, 1, 3, 0, 4, 1, 0, 25, 7, 0, 13, 0, 0, 2, 1, 0, 0]' : 0.147087}", "{'[2, 6, 1, 3, 0, 4, 1, 0, 25, 7, 0, 13, 0, 0, 2, 1, 0, 0]' : 0.142879}", "{'[2, 6, 1, 3, 0, 4, 1, 0, 25, 7, 0, 13, 0, 0, 2, 1, 0, 0]' : 0.142614}", "{'[2, 6, 1, 3, 0, 4, 1, 0, 25, 7, 0, 13, 0, 0, 2, 1, 0, 0]' : 0.142601}", "{'[2, 6, 1, 3, 0, 4, 1, 0, 25, 7, 0, 13, 0, 0, 2, 1, 0, 0]' : 0.142789}", "{'[2, 6, 1, 3, 0, 4, 1, 0, 25, 7, 0, 13, 0, 0, 2, 1, 0, 0]' : 0.142752}", "{'[2, 6, 1, 3, 0, 4, 1, 0, 25, 7, 0, 13, 0, 0, 2, 1, 0, 0]' : 0.142697}", "{'[2, 6, 1, 3, 0, 4, 1, 0, 25, 7, 0, 13, 0, 0, 2, 1, 0, 0]' : 0.142617}", "{'[2, 6, 1, 3, 0, 4, 1, 0, 25, 7, 0, 13, 0, 0, 2, 1, 0, 0]' : 0.142879}", "{'[2, 6, 1, 3, 0, 4, 1, 0, 25, 7, 0, 13, 0, 0, 2, 1, 0, 0]' : 0.142681}", "{'[2, 6, 1, 3, 0, 4, 1, 0, 25, 7, 0, 13, 0, 0, 2, 1, 0, 0]' : 0.142619}", "{'[2, 6, 1, 3, 0, 4, 1, 0, 25, 7, 0, 13, 0, 0, 2, 1, 0, 0]' : 0.147115}", "{'[2, 6, 1, 3, 0, 4, 1, 0, 25, 7, 0, 13, 0, 0, 2, 1, 0, 0]' : 0.142971}", "{'[2, 6, 1, 3, 0, 4, 1, 0, 25, 7, 0, 13, 0, 0, 2, 1, 0, 0]' : 0.142701}", "{'[2, 6, 1, 3, 0, 4, 1, 0, 25, 7, 0, 13, 0, 0, 2, 1, 0, 0]' : 0.142681}", "{'[2, 6, 1, 3, 0, 4, 1, 0, 25, 7, 0, 13, 0, 0, 2, 1, 0, 0]' : 0.142855}", "{'[2, 6, 1, 3, 0, 4, 1, 0, 25, 7, 0, 13, 0, 0, 2, 1, 0, 0]' : 0.142701}", "{'[2, 6, 1, 3, 0, 4, 1, 0, 25, 7, 0, 13, 0, 0, 2, 1, 0, 0]' : 0.142661}", "{'[2, 6, 1, 3, 0, 4, 1, 0, 25, 7, 0, 13, 0, 0, 2, 1, 0, 0]' : 0.142711}", "{'[2, 6, 1, 3, 0, 4, 1, 0, 25, 7, 0, 13, 0, 0, 2, 1, 0, 0]' : 0.142813}", "{'[2, 6, 1, 3, 0, 4, 1, 0, 25, 7, 0, 13, 0, 0, 2, 1, 0, 0]' : 0.142652}", "{'[2, 6, 1, 3, 0, 4, 1, 0, 25, 7, 0, 13, 0, 0, 2, 1, 0, 0]' : 0.146984}", "{'[2, 6, 1, 3, 0, 4, 1, 0, 25, 7, 0, 13, 0, 0, 2, 1, 0, 0]' : 0.142989}"]
returning from 'run': {'[2, 6, 1, 3, 0, 4, 1, 0, 25, 7, 0, 13, 0, 0, 2, 1, 0, 0]': ([0.142999, 0.142862, 0.142627, 0.142752, 0.142644, 0.142849, 0.142704, 0.147087, 0.142879, 0.142614, 0.142601, 0.142789, 0.142752, 0.142697, 0.142617, 0.142879, 0.142681, 0.142619, 0.147115, 0.142971, 0.142701, 0.142681, 0.142855, 0.142701, 0.142661, 0.142711, 0.142813, 0.142652, 0.146984, 0.142989], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.142999, 0.142862, 0.142627, 0.142752, 0.142644, 0.142849, 0.142704, 0.147087, 0.142879, 0.142614, 0.142601, 0.142789, 0.142752, 0.142697, 0.142617, 0.142879, 0.142681, 0.142619, 0.147115, 0.142971, 0.142701, 0.142681, 0.142855, 0.142701, 0.142661, 0.142711, 0.142813, 0.142652, 0.146984, 0.142989], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[2, 6, 1, 3, 0, 4, 1, 0, 25, 7, 0, 13, 0, 0, 2, 1, 0, 0]': ([0.142999, 0.142862, 0.142627, 0.142752, 0.142644, 0.142849, 0.142704, 0.147087, 0.142879, 0.142614, 0.142601, 0.142789, 0.142752, 0.142697, 0.142617, 0.142879, 0.142681, 0.142619, 0.147115, 0.142971, 0.142701, 0.142681, 0.142855, 0.142701, 0.142661, 0.142711, 0.142813, 0.142652, 0.146984, 0.142989], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [5, 1, 0, 0, 4, 2, 0, 0, 16, 0, 19, 0, 2, 0, 1, 0]
Fixed Factors: {'U1_I': 25, 'SCR': 1}
Testing candidate 15: [5, 1, 0, 0, 4, 2, 0, 0, 25, 16, 0, 19, 0, 2, 0, 1, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	5
        Additions: 		3988
        Multiplications: 	1944
        Divisions: 		0
        Logical: 		0
        Reads: 			7507
        Writes: 		1211
        Comparisons:		19
        Gotos: 			0
        
digraph CFG {
	_JOIN_10055384 [label="_JOIN_10055384None...",shape=box];
	_JOIN_10055384 -> ForLoop10056042;
	_JOIN_10055383 [label="_JOIN_10055383None...",shape=box];
	_JOIN_10055383 -> _JOIN_10055384;
	_JOIN_10055381 [label="_JOIN_10055381None...",shape=box];
	_JOIN_10055381 -> _JOIN_10055383;
	10130371 [label="10130371  double scv_34, scv_35, scv_36, scv_37, scv_38, scv_39, scv_40, scv_41;...",shape=box];
	9873195 [label="9873195  y[i]=0.0;...",shape=box];
	9873195 -> _JOIN_9873196;
	ForLoop10055342 [label="ForLoop10055342  for (jt=jj; jt<=min(ny-1,jj+15)-31; jt=jt+32) {...",shape=box];
	ForLoop10055342 -> 10054534;
	ForLoop10055342 -> _JOIN_10055342;
	10172620 [label="10172620  double scv_92;...",shape=box];
	_JOIN_9873127 [label="_JOIN_9873127None...",shape=box];
	_JOIN_9873127 -> 9873471;
	10166250 [label="10166250  double scv_55, scv_56, scv_57, scv_58, scv_59, scv_60, scv_61, scv_62;...",shape=box];
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 9872468;
	ForLoop10054410 [label="ForLoop10054410  for (i=ii; i<=min(nx-1,ii+255)-16; i=i+17) {...",shape=box];
	ForLoop10054410 -> 10166250;
	ForLoop10054410 -> _JOIN_10054410;
	ForLoop10055972 [label="ForLoop10055972  for (k=kkk; k<=min(ny-1,kkk+127)-19; k=k+20) {...",shape=box];
	ForLoop10055972 -> 10172133;
	ForLoop10055972 -> _JOIN_10055972;
	ForLoop10042563 [label="ForLoop10042563  for (jj=jjj; jj<=min(ny-1,jjj+496); jj=jj+16) {...",shape=box];
	ForLoop10042563 -> ForLoop10042057;
	ForLoop10042563 -> _JOIN_10042563;
	ForLoop10042561 [label="ForLoop10042561  for (j=jt; j<=min(ny-1,jj+15); j=j+1) {...",shape=box];
	ForLoop10042561 -> 10082402;
	ForLoop10042561 -> _JOIN_10042561;
	ForLoop10055384 [label="ForLoop10055384  for (jjj=0; jjj<=ny-1; jjj=jjj+512) {...",shape=box];
	ForLoop10055384 -> ForLoop10055383;
	ForLoop10055384 -> _JOIN_10055384;
	ForLoop10042565 [label="ForLoop10042565  for (jjj=0; jjj<=ny-1; jjj=jjj+512) {...",shape=box];
	ForLoop10042565 -> ForLoop10042563;
	ForLoop10042565 -> _JOIN_10042565;
	_JOIN_10054408 [label="_JOIN_10054408None...",shape=box];
	_JOIN_10054408 -> 10166268;
	ForLoop9873196 [label="ForLoop9873196  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop9873196 -> 9873195;
	ForLoop9873196 -> _JOIN_9873196;
	9872900 [label="9872900  y[i]=0.0;...",shape=box];
	10023696 [label="10023696  double x_copy;...",shape=box];
	10132075 [label="10132075  double scv_54;...",shape=box];
	_JOIN_10054406 [label="_JOIN_10054406None...",shape=box];
	_JOIN_10054406 -> _JOIN_10054408;
	ForLoop10055383 [label="ForLoop10055383  for (jj=jjj; jj<=min(ny-1,jjj+496); jj=jj+16) {...",shape=box];
	ForLoop10055383 -> ForLoop10055342;
	ForLoop10055383 -> _JOIN_10055383;
	_JOIN_10056046 [label="_JOIN_10056046None...",shape=box];
	10080871 [label="10080871  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	10175261 [label="10175261  double scv_93;...",shape=box];
	10042579 [label="10042579  int k;...",shape=box];
	_JOIN_10042561 [label="_JOIN_10042561None...",shape=box];
	_JOIN_10042561 -> _JOIN_10042563;
	_JOIN_9873196 [label="_JOIN_9873196None...",shape=box];
	_JOIN_9873196 -> 10023696;
	10023711 [label="10023711  int i;...",shape=box];
	10023711 -> ForLoop10054410;
	10172133 [label="10172133  double scv_72, scv_73, scv_74, scv_75, scv_76, scv_77, scv_78, scv_79;...",shape=box];
	10055380 [label="10055380  scv_93=scv_93+A[i*ny+j]*x[j];...",shape=box];
	10055380 -> _JOIN_10055381;
	_JOIN_10056044 [label="_JOIN_10056044None...",shape=box];
	_JOIN_10056044 -> _JOIN_10056046;
	_JOIN_10055972 [label="_JOIN_10055972None...",shape=box];
	_JOIN_10055972 -> ForLoop10056040;
	ForLoop9873127 [label="ForLoop9873127  for (i=0; i<=cbv_1; i=i+26) {...",shape=box];
	ForLoop9873127 -> 9872900;
	ForLoop9873127 -> _JOIN_9873127;
	ForLoop10042057 [label="ForLoop10042057  for (jt=jj; jt<=min(ny-1,jj+15)-31; jt=jt+32) {...",shape=box];
	ForLoop10042057 -> 10080871;
	ForLoop10042057 -> _JOIN_10042057;
	ForLoop10054408 [label="ForLoop10054408  for (kkk=0; kkk<=ny-1; kkk=kkk+128) {...",shape=box];
	ForLoop10054408 -> 10042579;
	ForLoop10054408 -> _JOIN_10054408;
	_JOIN_10054410 [label="_JOIN_10054410None...",shape=box];
	_JOIN_10054410 -> ForLoop10056044;
	ForLoop10054406 [label="ForLoop10054406  for (k=(min(ny-1,kkk+127))-(((min(ny-1,kkk+127))-(kkk)+1)%20)+1; k<=min(ny-1,kkk+127); k=k+1) {...",shape=box];
	ForLoop10054406 -> 10132075;
	ForLoop10054406 -> _JOIN_10054406;
	10055398 [label="10055398  int k;...",shape=box];
	10055398 -> ForLoop10055972;
	ForLoop10053921 [label="ForLoop10053921  for (k=kkk; k<=min(ny-1,kkk+127)-19; k=k+20) {...",shape=box];
	ForLoop10053921 -> 10130371;
	ForLoop10053921 -> _JOIN_10053921;
	_JOIN_10053921 [label="_JOIN_10053921None...",shape=box];
	_JOIN_10053921 -> ForLoop10054406;
	10175273 [label="10175273  tmp[i]=scv_93;...",shape=box];
	10175273 -> _JOIN_10056044;
	_JOIN_10042057 [label="_JOIN_10042057None...",shape=box];
	_JOIN_10042057 -> ForLoop10042561;
	_JOIN_10056042 [label="_JOIN_10056042None...",shape=box];
	_JOIN_10056042 -> 10175273;
	9873471 [label="9873471  register int cbv_2, cbv_3;...",shape=box];
	ForLoop10055381 [label="ForLoop10055381  for (j=jt; j<=min(ny-1,expected=9369846271501.798828
actual=9369846271501.798828
jj+15); j=j+1) {...",shape=box];
	ForLoop10055381 -> 10055380;
	ForLoop10055381 -> _JOIN_10055381;
	_JOIN_10055342 [label="_JOIN_10055342None...",shape=box];
	_JOIN_10055342 -> ForLoop10055381;
	10166268 [label="10166268  tmp[(i+12)]=scv_55;...",shape=box];
	_JOIN_10042565 [label="_JOIN_10042565None...",shape=box];
	_JOIN_10042565 -> ForLoop10054408;
	_JOIN_10042563 [label="_JOIN_10042563None...",shape=box];
	_JOIN_10042563 -> _JOIN_10042565;
	10054534 [label="10054534  scv_93=scv_93+A[i*ny+jt]*x[jt];...",shape=box];
	10082402 [label="10082402  double scv_33;...",shape=box];
	ForLoop10056044 [label="ForLoop10056044  for (i=(min(nx-1,ii+255))-(((min(nx-1,ii+255))-(ii)+1)%17)+1; i<=min(nx-1,ii+255); i=i+1) {...",shape=box];
	ForLoop10056044 -> 10175261;
	ForLoop10056044 -> _JOIN_10056044;
	9872468 [label="9872468  int i;...",shape=box];
	ForLoop10056046 [label="ForLoop10056046  for (ii=0; ii<=nx-1; ii=ii+256) {...",shape=box];
	ForLoop10056046 -> 10023711;
	ForLoop10056046 -> _JOIN_10056046;
	ForLoop10056040 [label="ForLoop10056040  for (k=(min(ny-1,kkk+127))-(((min(ny-1,kkk+127))-(kkk)+1)%20)+1; k<=min(ny-1,kkk+127); k=k+1) {...",shape=box];
	ForLoop10056040 -> 10172620;
	ForLoop10056040 -> _JOIN_10056040;
	_JOIN_10056040 [label="_JOIN_10056040None...",shape=box];
	_JOIN_10056040 -> _JOIN_10056042;
	ForLoop10056042 [label="ForLoop10056042  for (kkk=0; kkk<=ny-1; kkk=kkk+128) {...",shape=box];
	ForLoop10056042 -> 10055398;
	ForLoop10056042 -> _JOIN_10056042;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest52.exe __orio_perftest52.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest52.exe  
{'[5, 1, 0, 0, 4, 2, 0, 0, 25, 16, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.0966821}
{'[5, 1, 0, 0, 4, 2, 0, 0, 25, 16, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.0962949}
{'[5, 1, 0, 0, 4, 2, 0, 0, 25, 16, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.096261}
{'[5, 1, 0, 0, 4, 2, 0, 0, 25, 16, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.096334}
{'[5, 1, 0, 0, 4, 2, 0, 0, 25, 16, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.096251}
{'[5, 1, 0, 0, 4, 2, 0, 0, 25, 16, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.0964129}
{'[5, 1, 0, 0, 4, 2, 0, 0, 25, 16, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.096354}
{'[5, 1, 0, 0, 4, 2, 0, 0, 25, 16, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.09636}
{'[5, 1, 0, 0, 4, 2, 0, 0, 25, 16, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.0962529}
{'[5, 1, 0, 0, 4, 2, 0, 0, 25, 16, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.096307}
{'[5, 1, 0, 0, 4, 2, 0, 0, 25, 16, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.0963161}
{'[5, 1, 0, 0, 4, 2, 0, 0, 25, 16, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.0962899}
{'[5, 1, 0, 0, 4, 2, 0, 0, 25, 16, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.0962989}
{'[5, 1, 0, 0, 4, 2, 0, 0, 25, 16, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.0972991}
{'[5, 1, 0, 0, 4, 2, 0, 0, 25, 16, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.0966721}
{'[5, 1, 0, 0, 4, 2, 0, 0, 25, 16, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.096282}
{'[5, 1, 0, 0, 4, 2, 0, 0, 25, 16, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.0963109}
{'[5, 1, 0, 0, 4, 2, 0, 0, 25, 16, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.096271}
{'[5, 1, 0, 0, 4, 2, 0, 0, 25, 16, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.096328}
{'[5, 1, 0, 0, 4, 2, 0, 0, 25, 16, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.096318}
{'[5, 1, 0, 0, 4, 2, 0, 0, 25, 16, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.0962582}
{'[5, 1, 0, 0, 4, 2, 0, 0, 25, 16, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.096261}
{'[5, 1, 0, 0, 4, 2, 0, 0, 25, 16, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.09624}
{'[5, 1, 0, 0, 4, 2, 0, 0, 25, 16, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.096401}
{'[5, 1, 0, 0, 4, 2, 0, 0, 25, 16, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.0964911}
{'[5, 1, 0, 0, 4, 2, 0, 0, 25, 16, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.0964429}
{'[5, 1, 0, 0, 4, 2, 0, 0, 25, 16, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.0963411}
{'[5, 1, 0, 0, 4, 2, 0, 0, 25, 16, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.0962648}
{'[5, 1, 0, 0, 4, 2, 0, 0, 25, 16, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.0962949}
{'[5, 1, 0, 0, 4, 2, 0, 0, 25, 16, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.0963211}

out:
 ["{'[5, 1, 0, 0, 4, 2, 0, 0, 25, 16, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.0966821}", "{'[5, 1, 0, 0, 4, 2, 0, 0, 25, 16, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.0962949}", "{'[5, 1, 0, 0, 4, 2, 0, 0, 25, 16, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.096261}", "{'[5, 1, 0, 0, 4, 2, 0, 0, 25, 16, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.096334}", "{'[5, 1, 0, 0, 4, 2, 0, 0, 25, 16, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.096251}", "{'[5, 1, 0, 0, 4, 2, 0, 0, 25, 16, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.0964129}", "{'[5, 1, 0, 0, 4, 2, 0, 0, 25, 16, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.096354}", "{'[5, 1, 0, 0, 4, 2, 0, 0, 25, 16, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.09636}", "{'[5, 1, 0, 0, 4, 2, 0, 0, 25, 16, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.0962529}", "{'[5, 1, 0, 0, 4, 2, 0, 0, 25, 16, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.096307}", "{'[5, 1, 0, 0, 4, 2, 0, 0, 25, 16, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.0963161}", "{'[5, 1, 0, 0, 4, 2, 0, 0, 25, 16, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.0962899}", "{'[5, 1, 0, 0, 4, 2, 0, 0, 25, 16, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.0962989}", "{'[5, 1, 0, 0, 4, 2, 0, 0, 25, 16, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.0972991}", "{'[5, 1, 0, 0, 4, 2, 0, 0, 25, 16, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.0966721}", "{'[5, 1, 0, 0, 4, 2, 0, 0, 25, 16, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.096282}", "{'[5, 1, 0, 0, 4, 2, 0, 0, 25, 16, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.0963109}", "{'[5, 1, 0, 0, 4, 2, 0, 0, 25, 16, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.096271}", "{'[5, 1, 0, 0, 4, 2, 0, 0, 25, 16, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.096328}", "{'[5, 1, 0, 0, 4, 2, 0, 0, 25, 16, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.096318}", "{'[5, 1, 0, 0, 4, 2, 0, 0, 25, 16, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.0962582}", "{'[5, 1, 0, 0, 4, 2, 0, 0, 25, 16, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.096261}", "{'[5, 1, 0, 0, 4, 2, 0, 0, 25, 16, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.09624}", "{'[5, 1, 0, 0, 4, 2, 0, 0, 25, 16, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.096401}", "{'[5, 1, 0, 0, 4, 2, 0, 0, 25, 16, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.0964911}", "{'[5, 1, 0, 0, 4, 2, 0, 0, 25, 16, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.0964429}", "{'[5, 1, 0, 0, 4, 2, 0, 0, 25, 16, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.0963411}", "{'[5, 1, 0, 0, 4, 2, 0, 0, 25, 16, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.0962648}", "{'[5, 1, 0, 0, 4, 2, 0, 0, 25, 16, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.0962949}", "{'[5, 1, 0, 0, 4, 2, 0, 0, 25, 16, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.0963211}"]
returning from 'run': {'[5, 1, 0, 0, 4, 2, 0, 0, 25, 16, 0, 19, 0, 2, 0, 1, 1, 0]': ([0.0966821, 0.0962949, 0.096261, 0.096334, 0.096251, 0.0964129, 0.096354, 0.09636, 0.0962529, 0.096307, 0.0963161, 0.0962899, 0.0962989, 0.0972991, 0.0966721, 0.096282, 0.0963109, 0.096271, 0.096328, 0.096318, 0.0962582, 0.096261, 0.09624, 0.096401, 0.0964911, 0.0964429, 0.0963411, 0.0962648, 0.0962949, 0.0963211], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.0966821, 0.0962949, 0.096261, 0.096334, 0.096251, 0.0964129, 0.096354, 0.09636, 0.0962529, 0.096307, 0.0963161, 0.0962899, 0.0962989, 0.0972991, 0.0966721, 0.096282, 0.0963109, 0.096271, 0.096328, 0.096318, 0.0962582, 0.096261, 0.09624, 0.096401, 0.0964911, 0.0964429, 0.0963411, 0.0962648, 0.0962949, 0.0963211], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[5, 1, 0, 0, 4, 2, 0, 0, 25, 16, 0, 19, 0, 2, 0, 1, 1, 0]': ([0.0966821, 0.0962949, 0.096261, 0.096334, 0.096251, 0.0964129, 0.096354, 0.09636, 0.0962529, 0.096307, 0.0963161, 0.0962899, 0.0962989, 0.0972991, 0.0966721, 0.096282, 0.0963109, 0.096271, 0.096328, 0.096318, 0.0962582, 0.096261, 0.09624, 0.096401, 0.0964911, 0.0964429, 0.0963411, 0.0962648, 0.0962949, 0.0963211], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [4, 1, 1, 6, 0, 0, 0, 0, 21, 19, 0, 2, 0, 0, 1, 1]
Fixed Factors: {'U1_I': 25, 'SCR': 1}
Testing candidate 16: [4, 1, 1, 6, 0, 0, 0, 0, 25, 21, 19, 0, 2, 0, 0, 1, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	5
        Additions: 		4896
        Multiplications: 	2420
        Divisions: 		0
        Logical: 		0
        Reads: 			9227
        Writes: 		1478
        Comparisons:		22
        Gotos: 			0
        
digraph CFG {
	10714025 [label="10714025  register int cbv_8;...",shape=box];
	ForLoop10196288 [label="ForLoop10196288  for (i=0; i<=cbv_1; i=i+26) {...",shape=box];
	ForLoop10196288 -> 10196061;
	ForLoop10196288 -> _JOIN_10196288;
	10495771 [label="10495771  int i;...",shape=box];
	10495771 -> ForLoop10511996;
	_JOIN_10493938 [label="_JOIN_10493938None...",shape=box];
	_JOIN_10493938 -> 10704054;
	_JOIN_10511994 [label="_JOIN_10511994None...",shape=box];
	_JOIN_10511994 -> 10638389;
	10512063 [label="10512063  int j;...",shape=box];
	ForLoop10510713 [label="ForLoop10510713  for (j=jj; j<=cbv_5; j=j+20) {...",shape=box];
	ForLoop10510713 -> 10607878;
	ForLoop10510713 -> _JOIN_10510713;
	10704054 [label="10704054  register int cbv_2, cbv_3;...",shape=box];
	ForLoop10511994 [label="ForLoop10511994  for (kk=0; kk<=ny-1; kk=kk+16) {...",shape=box];
	ForLoop10511994 -> 10714025;
	ForLoop10511994 -> _JOIN_10511994;
	10195629 [label="10195629  int i;...",shape=box];
	10623644 [label="10623644  double scv_76;...",shape=box];
	10585789 [label="10585789  double scv_23, scv_24, scv_25, scv_26, scv_27, scv_28, scv_29, scv_30;...",shape=box];
	_JOIN_10512708 [label="_JOIN_10512708None...",shape=box];
	_JOIN_10512708 -> _JOIN_10512709;
	ForLoop10512705 [label="ForLoop10512705  for (i=(min(nx-1,ii+127))-(((min(nx-1,ii+127))-(it)+1)%22)+1; i<=min(nx-1,ii+127); i=i+1) {...",shape=box];
	ForLoop10512705 -> 10642053;
	ForLoop10512705 -> _JOIN_10512705;
	10642065 [label="10642065  tmp[i]=scv_100;...",shape=box];
	10642065 -> _JOIN_10512705;
	10542007 [label="10542007  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	ForLoop10512703 [label="ForLoop10512703  for (kk=0; kk<=ny-1; kk=kk+16) {...",shape=box];
	ForLoop10512703 -> 10714638;
	ForLoop10512703 -> _JOIN_10512703;
	_JOIN_10495770 [label="_JOIN_10495770None...",shape=box];
	_JOIN_10495770 -> 10495771;
	10196356 [label="10196356  y[i]=0.0;...",shape=box];
	10196356 -> _JOIN_10196357;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 10195629;
	10472424 [label="10472424  double x_copy;...",shape=box];
	_JOIN_10196357 [label="_JOIN_10196357None...",shape=box];
	_JOIN_10196357 -> 10472424;
	ForLoop10494908 [label="ForLoop10494908  for (jj=0; jj<=ny-1; jj=jj+16) {...",shape=box];
	ForLoop10494908 -> 10472496;
	ForLoop10494908 -> _JOIN_10494908;
	10713577 [label="10713577  register int cbv_6, cbv_7;...",shape=box];
	ForLoop10512580 [label="ForLoop10512580  for (j=jj; j<=cbv_9; j=j+20) {...",shape=box];
	ForLoop10512580 -> 10512103;
	ForLoop10512580 -> _JOIN_10512580;
	_JOIN_10512709 [label="_JOIN_10512709None...",shape=box];
	10714638 [label="10714638  register int cbv_12;...",shape=box];
	ForLoop10511992 [label="ForLoop10511992  for (k=kk; k<=cbv_8; k=k+1) {...",shape=box];
	ForLoop10511992 -> 10623644;
	ForLoop10511992 -> _JOIN_10511992;
	_JOIN_10510713 [label="_JOIN_10510713None...",shape=box];
	_JOIN_10510713 -> 10713577;
	ForLoop10494906 [label="ForLoop10494906  for (j=cbv_2; j<=cbv_3; j=j+1) {...",shape=box];
	ForLoop10494906 -> 10544127;
	ForLoop10494906 -> _JOIN_10494906;
	ForLoop10511996 [label="ForLoop10511996  for (i=it; i<=min(nx-1,ii+127)-21; i=i+22) {...",shape=box];
	ForLoop10511996 -> 10638371;
	ForLoop10511996 -> _JOIN_10511996;
	ForLoop10495770 [label="ForLoop10495770  for (it=ii; it<=min(nx-1,ii+127)-31; it=it+32) {...",shape=box];
	ForLoop10495770 -> 10585789;
	ForLoop10495770 -> _JOIN_10495770;
	ForLoop10196357 [label="ForLoop10196357  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop10196357 -> 10196356;
	ForLoop10196357 -> _JOIN_10196357;
	10638371 [label="10638371  double scv_77, scv_78, scv_79, scv_80, scv_81, scv_82, scv_83, scv_84;...",shape=box];
	10704672 [label="10704672  register int cbv_4;...",shape=box];
	_JOIN_10512648 [label="_JOIN_10512648None...",shape=box];
	_JOIN_10512648 -> _JOIN_10512650;
	10196061 [label="10196061  y[i]=0.0;...",shape=box];
	_JOIN_10512705 [label="_JOIN_10512705None...",shape=box];
	_JOIN_10512705 -> _JOIN_10512708;
	105126expected=9369846271501.798828
actual=9369846271501.798828
47 [label="10512647  scv_100=scv_100+A[i*ny+j]*x[j];...",shape=box];
	10512647 -> _JOIN_10512648;
	10607878 [label="10607878  double scv_55, scv_56, scv_57, scv_58, scv_59, scv_60, scv_61, scv_62;...",shape=box];
	_JOIN_10512650 [label="_JOIN_10512650None...",shape=box];
	_JOIN_10512650 -> ForLoop10512703;
	10544127 [label="10544127  double scv_21;...",shape=box];
	_JOIN_10494908 [label="_JOIN_10494908None...",shape=box];
	_JOIN_10494908 -> ForLoop10495768;
	10472496 [label="10472496  int j;...",shape=box];
	_JOIN_10512580 [label="_JOIN_10512580None...",shape=box];
	_JOIN_10512580 -> 10714547;
	10496000 [label="10496000  int j;...",shape=box];
	ForLoop10512650 [label="ForLoop10512650  for (jj=0; jj<=ny-1; jj=jj+16) {...",shape=box];
	ForLoop10512650 -> 10512063;
	ForLoop10512650 -> _JOIN_10512650;
	10196632 [label="10196632  register int cbv_2, cbv_3;...",shape=box];
	ForLoop10512708 [label="ForLoop10512708  for (ii=iii; ii<=min(nx-1,iii+1920); ii=ii+128) {...",shape=box];
	ForLoop10512708 -> ForLoop10495770;
	ForLoop10512708 -> _JOIN_10512708;
	ForLoop10512709 [label="ForLoop10512709  for (iii=0; iii<=nx-1; iii=iii+2048) {...",shape=box];
	ForLoop10512709 -> ForLoop10512708;
	ForLoop10512709 -> _JOIN_10512709;
	ForLoop10493938 [label="ForLoop10493938  for (j=jj; j<=cbv_1; j=j+20) {...",shape=box];
	ForLoop10493938 -> 10542007;
	ForLoop10493938 -> _JOIN_10493938;
	_JOIN_10494906 [label="_JOIN_10494906None...",shape=box];
	_JOIN_10494906 -> _JOIN_10494908;
	_JOIN_10512702 [label="_JOIN_10512702None...",shape=box];
	_JOIN_10512702 -> _JOIN_10512703;
	ForLoop10512702 [label="ForLoop10512702  for (k=kk; k<=cbv_12; k=k+1) {...",shape=box];
	ForLoop10512702 -> 10641267;
	ForLoop10512702 -> _JOIN_10512702;
	_JOIN_10511393 [label="_JOIN_10511393None...",shape=box];
	_JOIN_10511393 -> ForLoop10511994;
	10714547 [label="10714547  register int cbv_10, cbv_11;...",shape=box];
	_JOIN_10512703 [label="_JOIN_10512703None...",shape=box];
	_JOIN_10512703 -> 10642065;
	ForLoop10495768 [label="ForLoop10495768  for (kk=0; kk<=ny-1; kk=kk+16) {...",shape=box];
	ForLoop10495768 -> 10704672;
	ForLoop10495768 -> _JOIN_10495768;
	10564762 [label="10564762  double scv_22;...",shape=box];
	ForLoop10512648 [label="ForLoop10512648  for (j=cbv_10; j<=cbv_11; j=j+1) {...",shape=box];
	ForLoop10512648 -> 10512647;
	ForLoop10512648 -> _JOIN_10512648;
	_JOIN_10511391 [label="_JOIN_10511391None...",shape=box];
	_JOIN_10511391 -> _JOIN_10511393;
	10641267 [label="10641267  double scv_99;...",shape=box];
	_JOIN_10511996 [label="_JOIN_10511996None...",shape=box];
	_JOIN_10511996 -> ForLoop10512705;
	ForLoop10495767 [label="ForLoop10495767  for (k=kk; k<=cbv_4; k=k+1) {...",shape=box];
	ForLoop10495767 -> 10564762;
	ForLoop10495767 -> _JOIN_10495767;
	10585807 [label="10585807  tmp[(it+21)]=scv_23;...",shape=box];
	10512103 [label="10512103  scv_100=scv_100+A[i*ny+j]*x[j];...",shape=box];
	_JOIN_10511992 [label="_JOIN_10511992None...",shape=box];
	_JOIN_10511992 -> _JOIN_10511994;
	10638389 [label="10638389  tmp[(i+20)]=scv_77;...",shape=box];
	_JOIN_10196288 [label="_JOIN_10196288None...",shape=box];
	_JOIN_10196288 -> 10196632;
	_JOIN_10495767 [label="_JOIN_10495767None...",shape=box];
	_JOIN_10495767 -> _JOIN_10495768;
	_JOIN_10495768 [label="_JOIN_10495768None...",shape=box];
	_JOIN_10495768 -> 10585807;
	10642053 [label="10642053  double scv_100;...",shape=box];
	ForLoop10511393 [label="ForLoop10511393  for (jj=0; jj<=ny-1; jj=jj+16) {...",shape=box];
	ForLoop10511393 -> 10496000;
	ForLoop10511393 -> _JOIN_10511393;
	10609408 [label="10609408  double scv_75;...",shape=box];
	ForLoop10511391 [label="ForLoop10511391  for (j=cbv_6; j<=cbv_7; j=j+1) {...",shape=box];
	ForLoop10511391 -> 10609408;
	ForLoop10511391 -> _JOIN_10511391;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest53.exe __orio_perftest53.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest53.exe  
{'[4, 1, 1, 6, 0, 0, 0, 0, 25, 21, 19, 0, 2, 0, 0, 1, 1, 1]' : 0.211493}
{'[4, 1, 1, 6, 0, 0, 0, 0, 25, 21, 19, 0, 2, 0, 0, 1, 1, 1]' : 0.21127}
{'[4, 1, 1, 6, 0, 0, 0, 0, 25, 21, 19, 0, 2, 0, 0, 1, 1, 1]' : 0.210858}
{'[4, 1, 1, 6, 0, 0, 0, 0, 25, 21, 19, 0, 2, 0, 0, 1, 1, 1]' : 0.211249}
{'[4, 1, 1, 6, 0, 0, 0, 0, 25, 21, 19, 0, 2, 0, 0, 1, 1, 1]' : 0.211281}
{'[4, 1, 1, 6, 0, 0, 0, 0, 25, 21, 19, 0, 2, 0, 0, 1, 1, 1]' : 0.210901}
{'[4, 1, 1, 6, 0, 0, 0, 0, 25, 21, 19, 0, 2, 0, 0, 1, 1, 1]' : 0.210956}
{'[4, 1, 1, 6, 0, 0, 0, 0, 25, 21, 19, 0, 2, 0, 0, 1, 1, 1]' : 0.210875}
{'[4, 1, 1, 6, 0, 0, 0, 0, 25, 21, 19, 0, 2, 0, 0, 1, 1, 1]' : 0.212201}
{'[4, 1, 1, 6, 0, 0, 0, 0, 25, 21, 19, 0, 2, 0, 0, 1, 1, 1]' : 0.211466}
{'[4, 1, 1, 6, 0, 0, 0, 0, 25, 21, 19, 0, 2, 0, 0, 1, 1, 1]' : 0.211162}
{'[4, 1, 1, 6, 0, 0, 0, 0, 25, 21, 19, 0, 2, 0, 0, 1, 1, 1]' : 0.211456}
{'[4, 1, 1, 6, 0, 0, 0, 0, 25, 21, 19, 0, 2, 0, 0, 1, 1, 1]' : 0.212273}
{'[4, 1, 1, 6, 0, 0, 0, 0, 25, 21, 19, 0, 2, 0, 0, 1, 1, 1]' : 0.212304}
{'[4, 1, 1, 6, 0, 0, 0, 0, 25, 21, 19, 0, 2, 0, 0, 1, 1, 1]' : 0.210904}
{'[4, 1, 1, 6, 0, 0, 0, 0, 25, 21, 19, 0, 2, 0, 0, 1, 1, 1]' : 0.21114}
{'[4, 1, 1, 6, 0, 0, 0, 0, 25, 21, 19, 0, 2, 0, 0, 1, 1, 1]' : 0.21112}
{'[4, 1, 1, 6, 0, 0, 0, 0, 25, 21, 19, 0, 2, 0, 0, 1, 1, 1]' : 0.211831}
{'[4, 1, 1, 6, 0, 0, 0, 0, 25, 21, 19, 0, 2, 0, 0, 1, 1, 1]' : 0.21132}
{'[4, 1, 1, 6, 0, 0, 0, 0, 25, 21, 19, 0, 2, 0, 0, 1, 1, 1]' : 0.210929}
{'[4, 1, 1, 6, 0, 0, 0, 0, 25, 21, 19, 0, 2, 0, 0, 1, 1, 1]' : 0.211267}
{'[4, 1, 1, 6, 0, 0, 0, 0, 25, 21, 19, 0, 2, 0, 0, 1, 1, 1]' : 0.211035}
{'[4, 1, 1, 6, 0, 0, 0, 0, 25, 21, 19, 0, 2, 0, 0, 1, 1, 1]' : 0.211186}
{'[4, 1, 1, 6, 0, 0, 0, 0, 25, 21, 19, 0, 2, 0, 0, 1, 1, 1]' : 0.211579}
{'[4, 1, 1, 6, 0, 0, 0, 0, 25, 21, 19, 0, 2, 0, 0, 1, 1, 1]' : 0.210801}
{'[4, 1, 1, 6, 0, 0, 0, 0, 25, 21, 19, 0, 2, 0, 0, 1, 1, 1]' : 0.211249}
{'[4, 1, 1, 6, 0, 0, 0, 0, 25, 21, 19, 0, 2, 0, 0, 1, 1, 1]' : 0.21081}
{'[4, 1, 1, 6, 0, 0, 0, 0, 25, 21, 19, 0, 2, 0, 0, 1, 1, 1]' : 0.21207}
{'[4, 1, 1, 6, 0, 0, 0, 0, 25, 21, 19, 0, 2, 0, 0, 1, 1, 1]' : 0.211171}
{'[4, 1, 1, 6, 0, 0, 0, 0, 25, 21, 19, 0, 2, 0, 0, 1, 1, 1]' : 0.210693}

out:
 ["{'[4, 1, 1, 6, 0, 0, 0, 0, 25, 21, 19, 0, 2, 0, 0, 1, 1, 1]' : 0.211493}", "{'[4, 1, 1, 6, 0, 0, 0, 0, 25, 21, 19, 0, 2, 0, 0, 1, 1, 1]' : 0.21127}", "{'[4, 1, 1, 6, 0, 0, 0, 0, 25, 21, 19, 0, 2, 0, 0, 1, 1, 1]' : 0.210858}", "{'[4, 1, 1, 6, 0, 0, 0, 0, 25, 21, 19, 0, 2, 0, 0, 1, 1, 1]' : 0.211249}", "{'[4, 1, 1, 6, 0, 0, 0, 0, 25, 21, 19, 0, 2, 0, 0, 1, 1, 1]' : 0.211281}", "{'[4, 1, 1, 6, 0, 0, 0, 0, 25, 21, 19, 0, 2, 0, 0, 1, 1, 1]' : 0.210901}", "{'[4, 1, 1, 6, 0, 0, 0, 0, 25, 21, 19, 0, 2, 0, 0, 1, 1, 1]' : 0.210956}", "{'[4, 1, 1, 6, 0, 0, 0, 0, 25, 21, 19, 0, 2, 0, 0, 1, 1, 1]' : 0.210875}", "{'[4, 1, 1, 6, 0, 0, 0, 0, 25, 21, 19, 0, 2, 0, 0, 1, 1, 1]' : 0.212201}", "{'[4, 1, 1, 6, 0, 0, 0, 0, 25, 21, 19, 0, 2, 0, 0, 1, 1, 1]' : 0.211466}", "{'[4, 1, 1, 6, 0, 0, 0, 0, 25, 21, 19, 0, 2, 0, 0, 1, 1, 1]' : 0.211162}", "{'[4, 1, 1, 6, 0, 0, 0, 0, 25, 21, 19, 0, 2, 0, 0, 1, 1, 1]' : 0.211456}", "{'[4, 1, 1, 6, 0, 0, 0, 0, 25, 21, 19, 0, 2, 0, 0, 1, 1, 1]' : 0.212273}", "{'[4, 1, 1, 6, 0, 0, 0, 0, 25, 21, 19, 0, 2, 0, 0, 1, 1, 1]' : 0.212304}", "{'[4, 1, 1, 6, 0, 0, 0, 0, 25, 21, 19, 0, 2, 0, 0, 1, 1, 1]' : 0.210904}", "{'[4, 1, 1, 6, 0, 0, 0, 0, 25, 21, 19, 0, 2, 0, 0, 1, 1, 1]' : 0.21114}", "{'[4, 1, 1, 6, 0, 0, 0, 0, 25, 21, 19, 0, 2, 0, 0, 1, 1, 1]' : 0.21112}", "{'[4, 1, 1, 6, 0, 0, 0, 0, 25, 21, 19, 0, 2, 0, 0, 1, 1, 1]' : 0.211831}", "{'[4, 1, 1, 6, 0, 0, 0, 0, 25, 21, 19, 0, 2, 0, 0, 1, 1, 1]' : 0.21132}", "{'[4, 1, 1, 6, 0, 0, 0, 0, 25, 21, 19, 0, 2, 0, 0, 1, 1, 1]' : 0.210929}", "{'[4, 1, 1, 6, 0, 0, 0, 0, 25, 21, 19, 0, 2, 0, 0, 1, 1, 1]' : 0.211267}", "{'[4, 1, 1, 6, 0, 0, 0, 0, 25, 21, 19, 0, 2, 0, 0, 1, 1, 1]' : 0.211035}", "{'[4, 1, 1, 6, 0, 0, 0, 0, 25, 21, 19, 0, 2, 0, 0, 1, 1, 1]' : 0.211186}", "{'[4, 1, 1, 6, 0, 0, 0, 0, 25, 21, 19, 0, 2, 0, 0, 1, 1, 1]' : 0.211579}", "{'[4, 1, 1, 6, 0, 0, 0, 0, 25, 21, 19, 0, 2, 0, 0, 1, 1, 1]' : 0.210801}", "{'[4, 1, 1, 6, 0, 0, 0, 0, 25, 21, 19, 0, 2, 0, 0, 1, 1, 1]' : 0.211249}", "{'[4, 1, 1, 6, 0, 0, 0, 0, 25, 21, 19, 0, 2, 0, 0, 1, 1, 1]' : 0.21081}", "{'[4, 1, 1, 6, 0, 0, 0, 0, 25, 21, 19, 0, 2, 0, 0, 1, 1, 1]' : 0.21207}", "{'[4, 1, 1, 6, 0, 0, 0, 0, 25, 21, 19, 0, 2, 0, 0, 1, 1, 1]' : 0.211171}", "{'[4, 1, 1, 6, 0, 0, 0, 0, 25, 21, 19, 0, 2, 0, 0, 1, 1, 1]' : 0.210693}"]
returning from 'run': {'[4, 1, 1, 6, 0, 0, 0, 0, 25, 21, 19, 0, 2, 0, 0, 1, 1, 1]': ([0.211493, 0.21127, 0.210858, 0.211249, 0.211281, 0.210901, 0.210956, 0.210875, 0.212201, 0.211466, 0.211162, 0.211456, 0.212273, 0.212304, 0.210904, 0.21114, 0.21112, 0.211831, 0.21132, 0.210929, 0.211267, 0.211035, 0.211186, 0.211579, 0.210801, 0.211249, 0.21081, 0.21207, 0.211171, 0.210693], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.211493, 0.21127, 0.210858, 0.211249, 0.211281, 0.210901, 0.210956, 0.210875, 0.212201, 0.211466, 0.211162, 0.211456, 0.212273, 0.212304, 0.210904, 0.21114, 0.21112, 0.211831, 0.21132, 0.210929, 0.211267, 0.211035, 0.211186, 0.211579, 0.210801, 0.211249, 0.21081, 0.21207, 0.211171, 0.210693], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[4, 1, 1, 6, 0, 0, 0, 0, 25, 21, 19, 0, 2, 0, 0, 1, 1, 1]': ([0.211493, 0.21127, 0.210858, 0.211249, 0.211281, 0.210901, 0.210956, 0.210875, 0.212201, 0.211466, 0.211162, 0.211456, 0.212273, 0.212304, 0.210904, 0.21114, 0.21112, 0.211831, 0.21132, 0.210929, 0.211267, 0.211035, 0.211186, 0.211579, 0.210801, 0.211249, 0.21081, 0.21207, 0.211171, 0.210693], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [2, 4, 0, 2, 5, 5, 1, 1, 0, 16, 29, 2, 0, 0, 1, 0]
Fixed Factors: {'U1_I': 25, 'SCR': 1}
Testing candidate 17: [2, 4, 0, 2, 5, 5, 1, 1, 25, 0, 16, 29, 2, 0, 0, 1, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	26
        Max loop nest depth: 	6
        Additions: 		6754
        Multiplications: 	3234
        Divisions: 		0
        Logical: 		0
        Reads: 			12399
        Writes: 		1915
        Comparisons:		26
        Gotos: 			0
        
digraph CFG {
	10715333 [label="10715333  y[i]=0.0;...",shape=box];
	ForLoop11210391 [label="ForLoop11210391  for (jjj=0; jjj<=ny-1; jjj=jjj+1024) {...",shape=box];
	ForLoop11210391 -> ForLoop11210390;
	ForLoop11210391 -> _JOIN_11210391;
	ForLoop11210390 [label="ForLoop11210390  for (jj=jjj; jj<=min(ny-1,jjj+896); jj=jj+128) {...",shape=box];
	ForLoop11210390 -> 11189997;
	ForLoop11210390 -> _JOIN_11210390;
	11428368 [label="11428368  tmp[(it+21)]=scv_50;...",shape=box];
	_JOIN_11248233 [label="_JOIN_11248233None...",shape=box];
	_JOIN_11248233 -> ForLoop11248304;
	11435441 [label="11435441  double scv_112;...",shape=box];
	ForLoop11209323 [label="ForLoop11209323  for (j=jj; j<=min(ny-1,jj+127)-16; j=j+17) {...",shape=box];
	ForLoop11209323 -> 11275497;
	ForLoop11209323 -> _JOIN_11209323;
	11438869 [label="11438869  tmp[i]=scv_113;...",shape=box];
	11438869 -> _JOIN_11249439;
	10715628 [label="10715628  y[i]=0.0;...",shape=box];
	10715628 -> _JOIN_10715629;
	11434612 [label="11434612  double scv_82, scv_83, scv_84, scv_85, scv_86, scv_87, scv_88, scv_89;...",shape=box];
	11438857 [label="11438857  double scv_113;...",shape=box];
	ForLoop11249329 [label="ForLoop11249329  for (k=kkk; k<=min(ny-1,kkk+1023)-29; k=k+30) {...",shape=box];
	ForLoop11249329 -> 11434612;
	ForLoop11249329 -> _JOIN_11249329;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 10714901;
	ForLoop11210387 [label="ForLoop11210387  for (j=(min(ny-1,jj+127))-(((min(ny-1,jj+127))-(jj)+1)%17)+1; j<=min(ny-1,jj+127); j=j+1) {...",shape=box];
	ForLoop11210387 -> 11277625;
	ForLoop11210387 -> _JOIN_11210387;
	ForLoop11248307 [label="ForLoop11248307  for (jj=jjj; jj<=min(ny-1,jjj+896); jj=jj+128) {...",shape=box];
	ForLoop11248307 -> 11247755;
	ForLoop11248307 -> _JOIN_11248307;
	_JOIN_11249442 [label="_JOIN_11249442None...",shape=box];
	_JOIN_11247667 [label="_JOIN_11247667None...",shape=box];
	_JOIN_11247667 -> 11428368;
	ForLoop11248304 [label="ForLoop11248304  for (j=(min(ny-1,jj+127))-(((min(ny-1,jj+127))-(jj)+1)%17)+1; j<=min(ny-1,jj+127); j=j+1) {...",shape=box];
	ForLoop11248304 -> 11248303;
	ForLoop11248304 -> _JOIN_11248304;
	_JOIN_11249437 [label="_JOIN_11249437None...",shape=box];
	_JOIN_11249437 -> 11438869;
	_JOIN_11210391 [label="_JOIN_11210391None...",shape=box];
	_JOIN_11210391 -> ForLoop11247667;
	_JOIN_11210390 [label="_JOIN_11210390None...",shape=box];
	_JOIN_11210390 -> _JOIN_11210391;
	_JOIN_11247669 [label="_JOIN_11247669None...",shape=box];
	_JOIN_11247669 -> ForLoop11249439;
	ForLoop11249442 [label="ForLoop11249442  for (iii=0; iii<=nx-1; iii=iii+128) {...",shape=box];
	ForLoop11249442 -> ForLoop11249441;
	ForLoop11249442 -> _JOIN_11249442;
	ForLoop11249441 [label="ForLoop11249441  for (ii=iii; ii<=min(nx-1,iii+96); ii=ii+32) {...",shape=box];
	ForLoop11249441 -> ForLoop11247669;
	ForLoop11249441 -> _JOIN_11249441;
	ForLoop11248308 [label="ForLoop11248308  for (jjj=0; jjj<=ny-1; jjj=jjj+1024) {...",shape=box];
	ForLoop11248308 -> ForLoop11248307;
	ForLoop11248308 -> _JOIN_11248308;
	_JOIN_10715560 [label="_JOIN_10715560None...",shape=box];
	_JOIN_10715560 -> 10715904;
	11248352 [label="11248352  for (k=kkk; k<=min(ny-1,kkk+1023); k=k+1) ...",shape=box];
	ForLoop11247667 [label="ForLoop11247667  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop11247667 -> 11210435;
	ForLoop11247667 -> _JOIN_11247667;
	11277625 [label="11277625  double scv_18;...",shape=box];
	ForLoop11247669 [label="ForLoop11247669  for (it=ii; it<=min(nx-1,ii+31)-31; it=it+32) {...",shape=box];
	ForLoop11247669 -> 11428350;
	ForLoop11247669 -> _JOIN_11247669;
	11249435 [label="11249435  for (k=kkk; k<=min(ny-1,kkk+1023); k=k+1) ...",shape=box];
	11249435 -> _JOIN_11249437;
	11189877 [label="11189877  double x_copy[128];...",shape=box];
	ForLoop11249437 [label="ForLoop11249437  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop11249437 -> 11248352;
	ForLoop11249437 -> _JOIN_11249437;
	11189997 [label="11189997  for (j=jj; j<=min(ny-1,jj+127); j=j+1) ...",shape=box];
	_JOIN_11209323 [label="_JOIN_11209323None...",shape=box];
	_JOIN_11209323 -> ForLoop11210387;
	ForLoop10715629 [label="ForLoop10715629  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop10715629 -> 10715628;
	ForLoop10715629 -> _JOIN_10715629;
	ForLoop11247633 [label="ForLoop11247633  for (k=(min(ny-1,kkk+1023))-(((min(ny-1,kkk+1023))-(kkk)+1)%30)+1; k<=min(ny-1,kkk+1023); k=k+1) {...",shape=box];
	ForLoop11247633 -> 11362857;
	ForLoop11247633 -> _JOIN_11247633;
	11362857 [label="11362857  double scv_49;...",shape=box];
	_JOIN_11249441 [label="_JOIN_11249441None...",shape=box];
	_JOIN_11249441 -> _JOIN_11249442;
	ForLoop10715560 [label="ForLoop10715560  for (i=0; i<=cbv_1; i=i+26) {...",shape=box];
	ForLoop10715560 -> 10715333;
	ForLoop10715560 -> _JOIN_10715560;
	11428350 [label="11428350  double scv_50, scv_51, scv_52, scv_53, scv_54, scv_55, scv_56, scv_57;...",shape=box];
	_JOIN_10715629 [label="_JOIN_10715629None...",shape=box];
	_JOIN_10715629 -> 11189877;
	ForLoop11249439 [label="ForLoop11249439  for (i=it; i<=min(nx-1,ii+31); i=i+1) {...",shape=box];
	ForLoop11249439 -> 11438857;
	ForLoop11249439 -> _JOIN_11249439;
	_JOIN_11247633 [label="_JOIN_11247633None...",shape=box];
	_JOIN_11247633 -> 11247665;
	11358865 [label="11358865  double scv_19, scv_20, scv_21, scv_22, scv_23, scv_24, scv_25, scv_26;...",shape=box];
	11275497 [label="11275497  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	11210435 [label="11210435  for (k=kkk; k<=min(ny-1,kkk+1023); k=k+1) ...",shape=box];
	11248303 [label="11248303  scv_113=scv_113+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	11248303 -> _JOIN_11248304;
	10715904 [label="10715904  register int cbv_2, cbv_3;...",shape=box];
	_JOIN_11246566 [label="_JOIN_11246566None...",shape=box];
	_JOIN_11246566 -> ForLoop11247633;
	ForLoop11248233 [label="ForLoop11248233  for (j=jj; j<=min(ny-1,jj+127)-16; j=j+17) {...",shapeexpected=9369846271501.798828
actual=9369846271501.798828
=box];
	ForLoop11248233 -> 11247799;
	ForLoop11248233 -> _JOIN_11248233;
	_JOIN_11248308 [label="_JOIN_11248308None...",shape=box];
	_JOIN_11248308 -> ForLoop11249437;
	11247665 [label="11247665  for (k=kkk; k<=min(ny-1,kkk+1023); k=k+1) ...",shape=box];
	11247665 -> _JOIN_11247667;
	_JOIN_11248304 [label="_JOIN_11248304None...",shape=box];
	_JOIN_11248304 -> _JOIN_11248307;
	11247755 [label="11247755  for (j=jj; j<=min(ny-1,jj+127); j=j+1) ...",shape=box];
	_JOIN_11210387 [label="_JOIN_11210387None...",shape=box];
	_JOIN_11210387 -> _JOIN_11210390;
	_JOIN_11249329 [label="_JOIN_11249329None...",shape=box];
	_JOIN_11249329 -> ForLoop11249403;
	_JOIN_11248307 [label="_JOIN_11248307None...",shape=box];
	_JOIN_11248307 -> _JOIN_11248308;
	_JOIN_11249403 [label="_JOIN_11249403None...",shape=box];
	_JOIN_11249403 -> 11249435;
	11247799 [label="11247799  scv_113=scv_113+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	_JOIN_11249439 [label="_JOIN_11249439None...",shape=box];
	_JOIN_11249439 -> _JOIN_11249441;
	ForLoop11246566 [label="ForLoop11246566  for (k=kkk; k<=min(ny-1,kkk+1023)-29; k=k+30) {...",shape=box];
	ForLoop11246566 -> 11358865;
	ForLoop11246566 -> _JOIN_11246566;
	ForLoop11249403 [label="ForLoop11249403  for (k=(min(ny-1,kkk+1023))-(((min(ny-1,kkk+1023))-(kkk)+1)%30)+1; k<=min(ny-1,kkk+1023); k=k+1) {...",shape=box];
	ForLoop11249403 -> 11435441;
	ForLoop11249403 -> _JOIN_11249403;
	10714901 [label="10714901  int i;...",shape=box];

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest54.exe __orio_perftest54.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest54.exe  
{'[2, 4, 0, 2, 5, 5, 1, 1, 25, 0, 16, 29, 2, 0, 0, 1, 1, 0]' : 0.243568}
{'[2, 4, 0, 2, 5, 5, 1, 1, 25, 0, 16, 29, 2, 0, 0, 1, 1, 0]' : 0.242554}
{'[2, 4, 0, 2, 5, 5, 1, 1, 25, 0, 16, 29, 2, 0, 0, 1, 1, 0]' : 0.242594}
{'[2, 4, 0, 2, 5, 5, 1, 1, 25, 0, 16, 29, 2, 0, 0, 1, 1, 0]' : 0.242725}
{'[2, 4, 0, 2, 5, 5, 1, 1, 25, 0, 16, 29, 2, 0, 0, 1, 1, 0]' : 0.243113}
{'[2, 4, 0, 2, 5, 5, 1, 1, 25, 0, 16, 29, 2, 0, 0, 1, 1, 0]' : 0.242506}
{'[2, 4, 0, 2, 5, 5, 1, 1, 25, 0, 16, 29, 2, 0, 0, 1, 1, 0]' : 0.242225}
{'[2, 4, 0, 2, 5, 5, 1, 1, 25, 0, 16, 29, 2, 0, 0, 1, 1, 0]' : 0.242635}
{'[2, 4, 0, 2, 5, 5, 1, 1, 25, 0, 16, 29, 2, 0, 0, 1, 1, 0]' : 0.24273}
{'[2, 4, 0, 2, 5, 5, 1, 1, 25, 0, 16, 29, 2, 0, 0, 1, 1, 0]' : 0.243245}
{'[2, 4, 0, 2, 5, 5, 1, 1, 25, 0, 16, 29, 2, 0, 0, 1, 1, 0]' : 0.242448}
{'[2, 4, 0, 2, 5, 5, 1, 1, 25, 0, 16, 29, 2, 0, 0, 1, 1, 0]' : 0.24262}
{'[2, 4, 0, 2, 5, 5, 1, 1, 25, 0, 16, 29, 2, 0, 0, 1, 1, 0]' : 0.242421}
{'[2, 4, 0, 2, 5, 5, 1, 1, 25, 0, 16, 29, 2, 0, 0, 1, 1, 0]' : 0.242824}
{'[2, 4, 0, 2, 5, 5, 1, 1, 25, 0, 16, 29, 2, 0, 0, 1, 1, 0]' : 0.24246}
{'[2, 4, 0, 2, 5, 5, 1, 1, 25, 0, 16, 29, 2, 0, 0, 1, 1, 0]' : 0.243062}
{'[2, 4, 0, 2, 5, 5, 1, 1, 25, 0, 16, 29, 2, 0, 0, 1, 1, 0]' : 0.242069}
{'[2, 4, 0, 2, 5, 5, 1, 1, 25, 0, 16, 29, 2, 0, 0, 1, 1, 0]' : 0.242085}
{'[2, 4, 0, 2, 5, 5, 1, 1, 25, 0, 16, 29, 2, 0, 0, 1, 1, 0]' : 0.242503}
{'[2, 4, 0, 2, 5, 5, 1, 1, 25, 0, 16, 29, 2, 0, 0, 1, 1, 0]' : 0.242769}
{'[2, 4, 0, 2, 5, 5, 1, 1, 25, 0, 16, 29, 2, 0, 0, 1, 1, 0]' : 0.242584}
{'[2, 4, 0, 2, 5, 5, 1, 1, 25, 0, 16, 29, 2, 0, 0, 1, 1, 0]' : 0.242878}
{'[2, 4, 0, 2, 5, 5, 1, 1, 25, 0, 16, 29, 2, 0, 0, 1, 1, 0]' : 0.24251}
{'[2, 4, 0, 2, 5, 5, 1, 1, 25, 0, 16, 29, 2, 0, 0, 1, 1, 0]' : 0.242937}
{'[2, 4, 0, 2, 5, 5, 1, 1, 25, 0, 16, 29, 2, 0, 0, 1, 1, 0]' : 0.243043}
{'[2, 4, 0, 2, 5, 5, 1, 1, 25, 0, 16, 29, 2, 0, 0, 1, 1, 0]' : 0.242724}
{'[2, 4, 0, 2, 5, 5, 1, 1, 25, 0, 16, 29, 2, 0, 0, 1, 1, 0]' : 0.242446}
{'[2, 4, 0, 2, 5, 5, 1, 1, 25, 0, 16, 29, 2, 0, 0, 1, 1, 0]' : 0.242558}
{'[2, 4, 0, 2, 5, 5, 1, 1, 25, 0, 16, 29, 2, 0, 0, 1, 1, 0]' : 0.243209}
{'[2, 4, 0, 2, 5, 5, 1, 1, 25, 0, 16, 29, 2, 0, 0, 1, 1, 0]' : 0.24248}

out:
 ["{'[2, 4, 0, 2, 5, 5, 1, 1, 25, 0, 16, 29, 2, 0, 0, 1, 1, 0]' : 0.243568}", "{'[2, 4, 0, 2, 5, 5, 1, 1, 25, 0, 16, 29, 2, 0, 0, 1, 1, 0]' : 0.242554}", "{'[2, 4, 0, 2, 5, 5, 1, 1, 25, 0, 16, 29, 2, 0, 0, 1, 1, 0]' : 0.242594}", "{'[2, 4, 0, 2, 5, 5, 1, 1, 25, 0, 16, 29, 2, 0, 0, 1, 1, 0]' : 0.242725}", "{'[2, 4, 0, 2, 5, 5, 1, 1, 25, 0, 16, 29, 2, 0, 0, 1, 1, 0]' : 0.243113}", "{'[2, 4, 0, 2, 5, 5, 1, 1, 25, 0, 16, 29, 2, 0, 0, 1, 1, 0]' : 0.242506}", "{'[2, 4, 0, 2, 5, 5, 1, 1, 25, 0, 16, 29, 2, 0, 0, 1, 1, 0]' : 0.242225}", "{'[2, 4, 0, 2, 5, 5, 1, 1, 25, 0, 16, 29, 2, 0, 0, 1, 1, 0]' : 0.242635}", "{'[2, 4, 0, 2, 5, 5, 1, 1, 25, 0, 16, 29, 2, 0, 0, 1, 1, 0]' : 0.24273}", "{'[2, 4, 0, 2, 5, 5, 1, 1, 25, 0, 16, 29, 2, 0, 0, 1, 1, 0]' : 0.243245}", "{'[2, 4, 0, 2, 5, 5, 1, 1, 25, 0, 16, 29, 2, 0, 0, 1, 1, 0]' : 0.242448}", "{'[2, 4, 0, 2, 5, 5, 1, 1, 25, 0, 16, 29, 2, 0, 0, 1, 1, 0]' : 0.24262}", "{'[2, 4, 0, 2, 5, 5, 1, 1, 25, 0, 16, 29, 2, 0, 0, 1, 1, 0]' : 0.242421}", "{'[2, 4, 0, 2, 5, 5, 1, 1, 25, 0, 16, 29, 2, 0, 0, 1, 1, 0]' : 0.242824}", "{'[2, 4, 0, 2, 5, 5, 1, 1, 25, 0, 16, 29, 2, 0, 0, 1, 1, 0]' : 0.24246}", "{'[2, 4, 0, 2, 5, 5, 1, 1, 25, 0, 16, 29, 2, 0, 0, 1, 1, 0]' : 0.243062}", "{'[2, 4, 0, 2, 5, 5, 1, 1, 25, 0, 16, 29, 2, 0, 0, 1, 1, 0]' : 0.242069}", "{'[2, 4, 0, 2, 5, 5, 1, 1, 25, 0, 16, 29, 2, 0, 0, 1, 1, 0]' : 0.242085}", "{'[2, 4, 0, 2, 5, 5, 1, 1, 25, 0, 16, 29, 2, 0, 0, 1, 1, 0]' : 0.242503}", "{'[2, 4, 0, 2, 5, 5, 1, 1, 25, 0, 16, 29, 2, 0, 0, 1, 1, 0]' : 0.242769}", "{'[2, 4, 0, 2, 5, 5, 1, 1, 25, 0, 16, 29, 2, 0, 0, 1, 1, 0]' : 0.242584}", "{'[2, 4, 0, 2, 5, 5, 1, 1, 25, 0, 16, 29, 2, 0, 0, 1, 1, 0]' : 0.242878}", "{'[2, 4, 0, 2, 5, 5, 1, 1, 25, 0, 16, 29, 2, 0, 0, 1, 1, 0]' : 0.24251}", "{'[2, 4, 0, 2, 5, 5, 1, 1, 25, 0, 16, 29, 2, 0, 0, 1, 1, 0]' : 0.242937}", "{'[2, 4, 0, 2, 5, 5, 1, 1, 25, 0, 16, 29, 2, 0, 0, 1, 1, 0]' : 0.243043}", "{'[2, 4, 0, 2, 5, 5, 1, 1, 25, 0, 16, 29, 2, 0, 0, 1, 1, 0]' : 0.242724}", "{'[2, 4, 0, 2, 5, 5, 1, 1, 25, 0, 16, 29, 2, 0, 0, 1, 1, 0]' : 0.242446}", "{'[2, 4, 0, 2, 5, 5, 1, 1, 25, 0, 16, 29, 2, 0, 0, 1, 1, 0]' : 0.242558}", "{'[2, 4, 0, 2, 5, 5, 1, 1, 25, 0, 16, 29, 2, 0, 0, 1, 1, 0]' : 0.243209}", "{'[2, 4, 0, 2, 5, 5, 1, 1, 25, 0, 16, 29, 2, 0, 0, 1, 1, 0]' : 0.24248}"]
returning from 'run': {'[2, 4, 0, 2, 5, 5, 1, 1, 25, 0, 16, 29, 2, 0, 0, 1, 1, 0]': ([0.243568, 0.242554, 0.242594, 0.242725, 0.243113, 0.242506, 0.242225, 0.242635, 0.24273, 0.243245, 0.242448, 0.24262, 0.242421, 0.242824, 0.24246, 0.243062, 0.242069, 0.242085, 0.242503, 0.242769, 0.242584, 0.242878, 0.24251, 0.242937, 0.243043, 0.242724, 0.242446, 0.242558, 0.243209, 0.24248], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.243568, 0.242554, 0.242594, 0.242725, 0.243113, 0.242506, 0.242225, 0.242635, 0.24273, 0.243245, 0.242448, 0.24262, 0.242421, 0.242824, 0.24246, 0.243062, 0.242069, 0.242085, 0.242503, 0.242769, 0.242584, 0.242878, 0.24251, 0.242937, 0.243043, 0.242724, 0.242446, 0.242558, 0.243209, 0.24248], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[2, 4, 0, 2, 5, 5, 1, 1, 25, 0, 16, 29, 2, 0, 0, 1, 1, 0]': ([0.243568, 0.242554, 0.242594, 0.242725, 0.243113, 0.242506, 0.242225, 0.242635, 0.24273, 0.243245, 0.242448, 0.24262, 0.242421, 0.242824, 0.24246, 0.243062, 0.242069, 0.242085, 0.242503, 0.242769, 0.242584, 0.242878, 0.24251, 0.242937, 0.243043, 0.242724, 0.242446, 0.242558, 0.243209, 0.24248], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [0, 2, 0, 0, 5, 0, 1, 1, 14, 0, 7, 0, 1, 1, 1, 1]
Fixed Factors: {'U1_I': 25, 'SCR': 1}
Testing candidate 18: [0, 2, 0, 0, 5, 0, 1, 1, 25, 14, 0, 7, 0, 1, 1, 1, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	28
        Max loop nest depth: 	4
        Additions: 		1171
        Multiplications: 	512
        Divisions: 		0
        Logical: 		0
        Reads: 			2380
        Writes: 		450
        Comparisons:		28
        Gotos: 			0
        
digraph CFG {
	11589020 [label="11589020  register int cbv_4;...",shape=box];
	_JOIN_11549720 [label="_JOIN_11549720None...",shape=box];
	_JOIN_11549720 -> 11588502;
	11582941 [label="11582941  double scv_32, scv_33, scv_34, scv_35, scv_36, scv_37, scv_38, scv_39;...",shape=box];
	11506056 [label="11506056  y[i]=0.0;...",shape=box];
	11506056 -> _JOIN_11506057;
	11559970 [label="11559970  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	11580947 [label="11580947  double scv_17, scv_18, scv_19, scv_20, scv_21, scv_22, scv_23, scv_24;...",shape=box];
	ForLoop11549720 [label="ForLoop11549720  for (jjj=0; jjj<=ny-1; jjj=jjj+1024) {...",shape=box];
	ForLoop11549720 -> ForLoop11549718;
	ForLoop11549720 -> _JOIN_11549720;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 11505329;
	ForLoop11554228 [label="ForLoop11554228  for (kt=0; kt<=cbv_4; kt=kt+8) {...",shape=box];
	ForLoop11554228 -> 11582941;
	ForLoop11554228 -> _JOIN_11554228;
	_JOIN_11554228 [label="_JOIN_11554228None...",shape=box];
	_JOIN_11554228 -> 11583755;
	_JOIN_11505988 [label="_JOIN_11505988None...",shape=box];
	_JOIN_11505988 -> 11506332;
	_JOIN_11506057 [label="_JOIN_11506057None...",shape=box];
	_JOIN_11506057 -> 11544863;
	11573478 [label="11573478  double scv_9, scv_10, scv_11, scv_12, scv_13, scv_14, scv_15, scv_16;...",shape=box];
	ForLoop11553990 [label="ForLoop11553990  for (jjj=0; jjj<=ny-1; jjj=jjj+1024) {...",shape=box];
	ForLoop11553990 -> ForLoop11553989;
	ForLoop11553990 -> _JOIN_11553990;
	ForLoop11553989 [label="ForLoop11553989  for (jj=jjj; jj<=min(ny-1,jjj+992); jj=jj+32) {...",shape=box];
	ForLoop11553989 -> 11553739;
	ForLoop11553989 -> _JOIN_11553989;
	ForLoop11553649 [label="ForLoop11553649  for (i=0; i<=nx-15; i=i+15) {...",shape=box];
	ForLoop11553649 -> 11580947;
	ForLoop11553649 -> _JOIN_11553649;
	11506332 [label="11506332  register int cbv_2, cbv_3;...",shape=box];
	11505761 [label="11505761  y[i]=0.0;...",shape=box];
	ForLoop11553647 [label="ForLoop11553647  for (kt=0; kt<=cbv_2; kt=kt+8) {...",shape=box];
	ForLoop11553647 -> 11573478;
	ForLoop11553647 -> _JOIN_11553647;
	11583755 [label="11583755  tmp[i]=scv_40;...",shape=box];
	11583755 -> _JOIN_11554230;
	ForLoop11553987 [label="ForLoop11553987  for (jt=jj; jt<=cbv_3; jt=jt+8) {...",shape=box];
	ForLoop11553987 -> 11553782;
	ForLoop11553987 -> _JOIN_11553987;
	_JOIN_11549718 [label="_JOIN_11549718None...",shape=box];
	_JOIN_11549718 -> _JOIN_11549720;
	ForLoop11506057 [label="ForLoop11506057  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop11506057 -> 11506056;
	ForLoop11506057 -> _JOIN_11506057;
	_JOIN_11549716 [label="_JOIN_11549716None...",shape=box];
	_JOIN_11549716 -> _JOIN_11549718;
	11588502 [label="11588502  register int cbv_2;...",shape=box];
	ForLoop11549716 [label="ForLoop11549716  for (jt=jj; jt<=cbv_1; jt=jt+8) {...",shape=box];
	ForLoop11549716 -> 11559970;
	ForLoop11549716 -> _JOIN_11549716;
	11553739 [label="11553739  for (j=jj; j<=min(ny-1,jj+31); j=j+1) ...",shape=box];
	_JOIN_11553989 [label="_JOIN_11553989None...",shape=box];
	_JOIN_11553989 -> _JOIN_11553990;
	ForLoop11554230 [label="ForLoop11554230  for (i=nx-((nx-(0))%15); i<=nx-1; i=i+1) {...",shape=box];
	ForLoop11554230 -> 11583743;
	ForLoop11554230 -> _JOIN_11554230;
	11544863 [label="11544863  double x_copy[32];...",shape=box];
	ForLoop11549718 [label="ForLoop11549718  for (jj=jjj; jj<=min(ny-1,jjj+992); jj=jj+32) {...",shape=box];
	ForLoop11549718 -> 11545072;
	ForLoop11549718 -> _JOIN_11549718;
	_JOIN_11553990 [label="_JOIN_11553990None...",shape=box];
	_JOIN_11553990 -> 11589020;
	_JOIN_11553987 [label="_JOIN_11553987None...",shape=box];
	_JOIN_11553987 -> _JOIN_11553989;
	11553782 [label="11553782  scv_40=scv_40+A[i*ny+jt]*x_copy[(jt-jj)];...",shape=box];
	_JOIN_11553649 [label="_JOIN_11553649None...",shape=box];
	_JOIN_11553649 -> ForLoop11554230;
	ForLoop11505988 [label="ForLoop11505988  for (i=0; i<=cbv_1; i=i+26) {...",shape=box];
	ForLoop11505988 -> 11505761;
	ForLoop11505988 -> _JOIN_11505988;
	_JOIN_11554230 [label="_JOIN_11554230None...",shape=box];
	11583743 [label="11583743  double scv_40;...",shapexpected=9369846271501.798828
actual=9369846271501.798828
e=box];
	11505329 [label="11505329  int i;...",shape=box];
	11580965 [label="11580965  tmp[(i+12)]=scv_17;...",shape=box];
	_JOIN_11553647 [label="_JOIN_11553647None...",shape=box];
	_JOIN_11553647 -> 11580965;
	11545072 [label="11545072  for (j=jj; j<=min(ny-1,jj+31); j=j+1) ...",shape=box];

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest55.exe __orio_perftest55.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest55.exe  
{'[0, 2, 0, 0, 5, 0, 1, 1, 25, 14, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.108768}
{'[0, 2, 0, 0, 5, 0, 1, 1, 25, 14, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.108535}
{'[0, 2, 0, 0, 5, 0, 1, 1, 25, 14, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.108509}
{'[0, 2, 0, 0, 5, 0, 1, 1, 25, 14, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.108561}
{'[0, 2, 0, 0, 5, 0, 1, 1, 25, 14, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.108718}
{'[0, 2, 0, 0, 5, 0, 1, 1, 25, 14, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.10869}
{'[0, 2, 0, 0, 5, 0, 1, 1, 25, 14, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.108924}
{'[0, 2, 0, 0, 5, 0, 1, 1, 25, 14, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.108713}
{'[0, 2, 0, 0, 5, 0, 1, 1, 25, 14, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.108441}
{'[0, 2, 0, 0, 5, 0, 1, 1, 25, 14, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.108611}
{'[0, 2, 0, 0, 5, 0, 1, 1, 25, 14, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.108559}
{'[0, 2, 0, 0, 5, 0, 1, 1, 25, 14, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.108569}
{'[0, 2, 0, 0, 5, 0, 1, 1, 25, 14, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.108827}
{'[0, 2, 0, 0, 5, 0, 1, 1, 25, 14, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.108551}
{'[0, 2, 0, 0, 5, 0, 1, 1, 25, 14, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.108608}
{'[0, 2, 0, 0, 5, 0, 1, 1, 25, 14, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.108717}
{'[0, 2, 0, 0, 5, 0, 1, 1, 25, 14, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.108618}
{'[0, 2, 0, 0, 5, 0, 1, 1, 25, 14, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.108584}
{'[0, 2, 0, 0, 5, 0, 1, 1, 25, 14, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.108842}
{'[0, 2, 0, 0, 5, 0, 1, 1, 25, 14, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.108676}
{'[0, 2, 0, 0, 5, 0, 1, 1, 25, 14, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.108711}
{'[0, 2, 0, 0, 5, 0, 1, 1, 25, 14, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.108548}
{'[0, 2, 0, 0, 5, 0, 1, 1, 25, 14, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.108437}
{'[0, 2, 0, 0, 5, 0, 1, 1, 25, 14, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.108787}
{'[0, 2, 0, 0, 5, 0, 1, 1, 25, 14, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.109202}
{'[0, 2, 0, 0, 5, 0, 1, 1, 25, 14, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.108769}
{'[0, 2, 0, 0, 5, 0, 1, 1, 25, 14, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.108693}
{'[0, 2, 0, 0, 5, 0, 1, 1, 25, 14, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.108598}
{'[0, 2, 0, 0, 5, 0, 1, 1, 25, 14, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.10863}
{'[0, 2, 0, 0, 5, 0, 1, 1, 25, 14, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.108534}

out:
 ["{'[0, 2, 0, 0, 5, 0, 1, 1, 25, 14, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.108768}", "{'[0, 2, 0, 0, 5, 0, 1, 1, 25, 14, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.108535}", "{'[0, 2, 0, 0, 5, 0, 1, 1, 25, 14, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.108509}", "{'[0, 2, 0, 0, 5, 0, 1, 1, 25, 14, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.108561}", "{'[0, 2, 0, 0, 5, 0, 1, 1, 25, 14, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.108718}", "{'[0, 2, 0, 0, 5, 0, 1, 1, 25, 14, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.10869}", "{'[0, 2, 0, 0, 5, 0, 1, 1, 25, 14, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.108924}", "{'[0, 2, 0, 0, 5, 0, 1, 1, 25, 14, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.108713}", "{'[0, 2, 0, 0, 5, 0, 1, 1, 25, 14, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.108441}", "{'[0, 2, 0, 0, 5, 0, 1, 1, 25, 14, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.108611}", "{'[0, 2, 0, 0, 5, 0, 1, 1, 25, 14, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.108559}", "{'[0, 2, 0, 0, 5, 0, 1, 1, 25, 14, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.108569}", "{'[0, 2, 0, 0, 5, 0, 1, 1, 25, 14, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.108827}", "{'[0, 2, 0, 0, 5, 0, 1, 1, 25, 14, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.108551}", "{'[0, 2, 0, 0, 5, 0, 1, 1, 25, 14, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.108608}", "{'[0, 2, 0, 0, 5, 0, 1, 1, 25, 14, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.108717}", "{'[0, 2, 0, 0, 5, 0, 1, 1, 25, 14, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.108618}", "{'[0, 2, 0, 0, 5, 0, 1, 1, 25, 14, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.108584}", "{'[0, 2, 0, 0, 5, 0, 1, 1, 25, 14, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.108842}", "{'[0, 2, 0, 0, 5, 0, 1, 1, 25, 14, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.108676}", "{'[0, 2, 0, 0, 5, 0, 1, 1, 25, 14, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.108711}", "{'[0, 2, 0, 0, 5, 0, 1, 1, 25, 14, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.108548}", "{'[0, 2, 0, 0, 5, 0, 1, 1, 25, 14, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.108437}", "{'[0, 2, 0, 0, 5, 0, 1, 1, 25, 14, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.108787}", "{'[0, 2, 0, 0, 5, 0, 1, 1, 25, 14, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.109202}", "{'[0, 2, 0, 0, 5, 0, 1, 1, 25, 14, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.108769}", "{'[0, 2, 0, 0, 5, 0, 1, 1, 25, 14, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.108693}", "{'[0, 2, 0, 0, 5, 0, 1, 1, 25, 14, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.108598}", "{'[0, 2, 0, 0, 5, 0, 1, 1, 25, 14, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.10863}", "{'[0, 2, 0, 0, 5, 0, 1, 1, 25, 14, 0, 7, 0, 1, 1, 1, 1, 1]' : 0.108534}"]
returning from 'run': {'[0, 2, 0, 0, 5, 0, 1, 1, 25, 14, 0, 7, 0, 1, 1, 1, 1, 1]': ([0.108768, 0.108535, 0.108509, 0.108561, 0.108718, 0.10869, 0.108924, 0.108713, 0.108441, 0.108611, 0.108559, 0.108569, 0.108827, 0.108551, 0.108608, 0.108717, 0.108618, 0.108584, 0.108842, 0.108676, 0.108711, 0.108548, 0.108437, 0.108787, 0.109202, 0.108769, 0.108693, 0.108598, 0.10863, 0.108534], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.108768, 0.108535, 0.108509, 0.108561, 0.108718, 0.10869, 0.108924, 0.108713, 0.108441, 0.108611, 0.108559, 0.108569, 0.108827, 0.108551, 0.108608, 0.108717, 0.108618, 0.108584, 0.108842, 0.108676, 0.108711, 0.108548, 0.108437, 0.108787, 0.109202, 0.108769, 0.108693, 0.108598, 0.10863, 0.108534], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 0, 0, 5, 0, 1, 1, 25, 14, 0, 7, 0, 1, 1, 1, 1, 1]': ([0.108768, 0.108535, 0.108509, 0.108561, 0.108718, 0.10869, 0.108924, 0.108713, 0.108441, 0.108611, 0.108559, 0.108569, 0.108827, 0.108551, 0.108608, 0.108717, 0.108618, 0.108584, 0.108842, 0.108676, 0.108711, 0.108548, 0.108437, 0.108787, 0.109202, 0.108769, 0.108693, 0.108598, 0.10863, 0.108534], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [0, 6, 5, 4, 5, 5, 1, 1, 14, 4, 0, 0, 2, 0, 1, 1]
Fixed Factors: {'U1_I': 25, 'SCR': 1}
Testing candidate 19: [0, 6, 5, 4, 5, 5, 1, 1, 25, 14, 4, 0, 0, 2, 0, 1, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	65
        Max loop nest depth: 	5
        Additions: 		2448
        Multiplications: 	1056
        Divisions: 		0
        Logical: 		0
        Reads: 			4771
        Writes: 		824
        Comparisons:		65
        Gotos: 			0
        
digraph CFG {
	11798888 [label="11798888  tmp[i]=scv_50;...",shape=box];
	11798888 -> _JOIN_11720538;
	11798876 [label="11798876  double scv_50;...",shape=box];
	11718893 [label="11718893  for (k=kk; k<=min(ny-1,kk+255); k=k+1) ...",shape=box];
	11700266 [label="11700266  int i;...",shape=box];
	11700266 -> ForLoop11719333;
	_JOIN_11589894 [label="_JOIN_11589894None...",shape=box];
	_JOIN_11589894 -> 11590238;
	ForLoop11589963 [label="ForLoop11589963  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop11589963 -> 11589962;
	ForLoop11589963 -> _JOIN_11589963;
	_JOIN_11718862 [label="_JOIN_11718862None...",shape=box];
	_JOIN_11718862 -> 11718893;
	ForLoop11720392 [label="ForLoop11720392  for (jt=jj; jt<=cbv_3; jt=jt+32) {...",shape=box];
	ForLoop11720392 -> 11719491;
	ForLoop11720392 -> _JOIN_11720392;
	ForLoop11720395 [label="ForLoop11720395  for (jjj=0; jjj<=ny-1; jjj=jjj+1024) {...",shape=box];
	ForLoop11720395 -> ForLoop11720394;
	ForLoop11720395 -> _JOIN_11720395;
	ForLoop11720394 [label="ForLoop11720394  for (jj=jjj; jj<=min(ny-1,jjj+512); jj=jj+512) {...",shape=box];
	ForLoop11720394 -> 11719448;
	ForLoop11720394 -> _JOIN_11720394;
	11743463 [label="11743463  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	_JOIN_11717872 [label="_JOIN_11717872None...",shape=box];
	_JOIN_11717872 -> ForLoop11719331;
	_JOIN_11717870 [label="_JOIN_11717870None...",shape=box];
	_JOIN_11717870 -> _JOIN_11717872;
	11792520 [label="11792520  double scv_34, scv_35, scv_36, scv_37, scv_38, scv_39, scv_40, scv_41;...",shape=box];
	ForLoop11720540 [label="ForLoop11720540  for (iii=0; iii<=nx-1; iii=iii+512) {...",shape=box];
	ForLoop11720540 -> 11700266;
	ForLoop11720540 -> _JOIN_11720540;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 11589235;
	11589667 [label="11589667  y[i]=0.0;...",shape=box];
	_JOIN_11720538 [label="_JOIN_11720538None...",shape=box];
	_JOIN_11720538 -> _JOIN_11720540;
	11717934 [label="11717934  for (k=kk; k<=min(ny-1,kk+255); k=k+1) ...",shape=box];
	ForLoop11717868 [label="ForLoop11717868  for (jt=jj; jt<=cbv_1; jt=jt+32) {...",shape=box];
	ForLoop11717868 -> 11743463;
	ForLoop11717868 -> _JOIN_11717868;
	_JOIN_11720535 [label="_JOIN_11720535None...",shape=box];
	_JOIN_11720535 -> _JOIN_11720536;
	_JOIN_11720536 [label="_JOIN_11720536None...",shape=box];
	_JOIN_11720536 -> 11798888;
	ForLoop11720535 [label="ForLoop11720535  for (kk=kkk; kk<=min(ny-1,kkk+768); kk=kk+256) {...",shape=box];
	ForLoop11720535 -> 11720457;
	ForLoop11720535 -> _JOIN_11720535;
	11797371 [label="11797371  double scv_49;...",shape=box];
	_JOIN_11719329 [label="_JOIN_11719329None...",shape=box];
	_JOIN_11719329 -> _JOIN_11719331;
	ForLoop11719329 [label="ForLoop11719329  for (kk=kkk; kk<=min(ny-1,kkk+768); kk=kk+256) {...",shape=box];
	ForLoop11719329 -> 11717934;
	ForLoop11719329 -> _JOIN_11719329;
	11719491 [label="11719491  scv_50=scv_50+A[i*ny+jt]*x_copy[(jt-jj)];...",shape=box];
	11719448 [label="11719448  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	ForLoop11719333 [label="ForLoop11719333  for (i=iii; i<=min(nx-1,iii+511)-14; i=i+15) {...",shape=box];
	ForLoop11719333 -> 11792520;
	ForLoop11719333 -> _JOIN_11719333;
	ForLoop11719331 [label="ForLoop11719331  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop11719331 -> ForLoop11719329;
	ForLoop11719331 -> _JOIN_11719331;
	11700251 [label="11700251  double x_copy[512];...",shape=box];
	ForLoop11589894 [label="ForLoop11589894  for (i=0; i<=cbv_1; i=i+26) {...",shape=box];
	ForLoop11589894 -> 11589667;
	ForLoop11589894 -> _JOIN_11589894;
	11589235 [label="11589235  int i;...",shape=box];
	ForLoop11720536 [label="ForLoop11720536  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop11720536 -> ForLoop11720535;
	ForLoop11720536 -> _JOIN_11720536;
	11590238 [label="11590238  register int cbv_2, cbv_3;...",shape=box];
	11792538 [label="11792538  tmp[(i+12)]=scv_34;...",shape=box];
	_JOIN_11717868 [label="_JOIN_11717868None...",shape=box];
	_JOIN_11717868 -> _JOIN_11717870;
	11700480 [label="11700480  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	11773893 [label="11773893  double scv_33;...",shape=box];
	_JOIN_11720392 [label="_JOIN_11720392None...",shape=box];
	_JOIN_11720392 -> _JOIN_11720394;
	ForLoop11717872 [label="ForLoop11717872  for (jjj=0; jjj<=ny-1; jjj=jjj+1024) {...",shape=box];
	ForLoop11717872 -> ForLoop11717870;
	ForLoop11717872 -> _JOIN_11717872;
	_JOIN_11720394 [label="_JOIN_11720394None...",shape=box];
	_JOIN_11720394 -> _JOIN_11720395;
	ForLoop11717870 [label="ForLoop11717870  for (jj=jjj; jj<=min(ny-1,jjj+512); jj=jj+512) {...",shape=box];
	ForLoop11717870 -> 11700480;
	ForLoop11717870 -> _JOIN_11717870;
	_JOIN_11720395 [label="_JOIN_11720395None...",shape=box];
	_JOIN_11720395 -> ForLoop11720536;
	11589962 [label="11589962  y[i]=0.0;...",shape=box];
	11589962 -> _JOIN_11589963;
	ForLoop11720538 [label="ForLoop11720538  for (i=(min(nx-1,iii+511))-(((min(nx-1,iii+511))-(iii)+1)%15)+1; i<=min(nx-1,iii+511); i=i+1) {...",shape=box];
	ForLoop11720538 -> 11798876;
	ForLoop11720538 -> _JOIN_11720538;
	_JOIN_11720502 [label="_JOIN_11720502None...",shape=box];
	_JOIN_11720502 -> 11720533;
	ForLoop11718862 [label="ForLoop11718862  for (k=kk; k<=cbv_2; k=k+1) {...",shape=box];
	ForLoop11718862 -> 11773893;
	ForLoop11718862 -> _JOIN_11718862;
expected=0.000000
actual=9369846271501.798828
	ForLoop11720502 [label="ForLoop11720502  for (k=kk; k<=cbv_4; k=k+1) {...",shape=box];
	ForLoop11720502 -> 11797371;
	ForLoop11720502 -> _JOIN_11720502;
	_JOIN_11589963 [label="_JOIN_11589963None...",shape=box];
	_JOIN_11589963 -> 11700251;
	_JOIN_11720540 [label="_JOIN_11720540None...",shape=box];
	11720457 [label="11720457  for (k=kk; k<=min(ny-1,kk+255); k=k+1) ...",shape=box];
	_JOIN_11719333 [label="_JOIN_11719333None...",shape=box];
	_JOIN_11719333 -> ForLoop11720538;
	_JOIN_11719331 [label="_JOIN_11719331None...",shape=box];
	_JOIN_11719331 -> 11792538;
	11720533 [label="11720533  for (k=kk; k<=min(ny-1,kk+255); k=k+1) ...",shape=box];
	11720533 -> _JOIN_11720535;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest56.exe __orio_perftest56.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest56.exe  
{'[0, 6, 5, 4, 5, 5, 1, 1, 25, 14, 4, 0, 0, 2, 0, 1, 1, 1]' : 0.140594}
{'[0, 6, 5, 4, 5, 5, 1, 1, 25, 14, 4, 0, 0, 2, 0, 1, 1, 1]' : 0.140368}
{'[0, 6, 5, 4, 5, 5, 1, 1, 25, 14, 4, 0, 0, 2, 0, 1, 1, 1]' : 0.140191}
{'[0, 6, 5, 4, 5, 5, 1, 1, 25, 14, 4, 0, 0, 2, 0, 1, 1, 1]' : 0.14019}
{'[0, 6, 5, 4, 5, 5, 1, 1, 25, 14, 4, 0, 0, 2, 0, 1, 1, 1]' : 0.140223}
{'[0, 6, 5, 4, 5, 5, 1, 1, 25, 14, 4, 0, 0, 2, 0, 1, 1, 1]' : 0.140353}
{'[0, 6, 5, 4, 5, 5, 1, 1, 25, 14, 4, 0, 0, 2, 0, 1, 1, 1]' : 0.14017}
{'[0, 6, 5, 4, 5, 5, 1, 1, 25, 14, 4, 0, 0, 2, 0, 1, 1, 1]' : 0.140124}
{'[0, 6, 5, 4, 5, 5, 1, 1, 25, 14, 4, 0, 0, 2, 0, 1, 1, 1]' : 0.140165}
{'[0, 6, 5, 4, 5, 5, 1, 1, 25, 14, 4, 0, 0, 2, 0, 1, 1, 1]' : 0.140249}
{'[0, 6, 5, 4, 5, 5, 1, 1, 25, 14, 4, 0, 0, 2, 0, 1, 1, 1]' : 0.140209}
{'[0, 6, 5, 4, 5, 5, 1, 1, 25, 14, 4, 0, 0, 2, 0, 1, 1, 1]' : 0.1402}
{'[0, 6, 5, 4, 5, 5, 1, 1, 25, 14, 4, 0, 0, 2, 0, 1, 1, 1]' : 0.140674}
{'[0, 6, 5, 4, 5, 5, 1, 1, 25, 14, 4, 0, 0, 2, 0, 1, 1, 1]' : 0.140153}
{'[0, 6, 5, 4, 5, 5, 1, 1, 25, 14, 4, 0, 0, 2, 0, 1, 1, 1]' : 0.140188}
{'[0, 6, 5, 4, 5, 5, 1, 1, 25, 14, 4, 0, 0, 2, 0, 1, 1, 1]' : 0.140159}
{'[0, 6, 5, 4, 5, 5, 1, 1, 25, 14, 4, 0, 0, 2, 0, 1, 1, 1]' : 0.140151}
{'[0, 6, 5, 4, 5, 5, 1, 1, 25, 14, 4, 0, 0, 2, 0, 1, 1, 1]' : 0.140326}
{'[0, 6, 5, 4, 5, 5, 1, 1, 25, 14, 4, 0, 0, 2, 0, 1, 1, 1]' : 0.140189}
{'[0, 6, 5, 4, 5, 5, 1, 1, 25, 14, 4, 0, 0, 2, 0, 1, 1, 1]' : 0.140272}
{'[0, 6, 5, 4, 5, 5, 1, 1, 25, 14, 4, 0, 0, 2, 0, 1, 1, 1]' : 0.140167}
{'[0, 6, 5, 4, 5, 5, 1, 1, 25, 14, 4, 0, 0, 2, 0, 1, 1, 1]' : 0.140177}
{'[0, 6, 5, 4, 5, 5, 1, 1, 25, 14, 4, 0, 0, 2, 0, 1, 1, 1]' : 0.140389}
{'[0, 6, 5, 4, 5, 5, 1, 1, 25, 14, 4, 0, 0, 2, 0, 1, 1, 1]' : 0.140168}
{'[0, 6, 5, 4, 5, 5, 1, 1, 25, 14, 4, 0, 0, 2, 0, 1, 1, 1]' : 0.140446}
{'[0, 6, 5, 4, 5, 5, 1, 1, 25, 14, 4, 0, 0, 2, 0, 1, 1, 1]' : 0.140231}
{'[0, 6, 5, 4, 5, 5, 1, 1, 25, 14, 4, 0, 0, 2, 0, 1, 1, 1]' : 0.140145}
{'[0, 6, 5, 4, 5, 5, 1, 1, 25, 14, 4, 0, 0, 2, 0, 1, 1, 1]' : 0.140232}
{'[0, 6, 5, 4, 5, 5, 1, 1, 25, 14, 4, 0, 0, 2, 0, 1, 1, 1]' : 0.140226}
{'[0, 6, 5, 4, 5, 5, 1, 1, 25, 14, 4, 0, 0, 2, 0, 1, 1, 1]' : 0.140195}

out:
 ["{'[0, 6, 5, 4, 5, 5, 1, 1, 25, 14, 4, 0, 0, 2, 0, 1, 1, 1]' : 0.140594}", "{'[0, 6, 5, 4, 5, 5, 1, 1, 25, 14, 4, 0, 0, 2, 0, 1, 1, 1]' : 0.140368}", "{'[0, 6, 5, 4, 5, 5, 1, 1, 25, 14, 4, 0, 0, 2, 0, 1, 1, 1]' : 0.140191}", "{'[0, 6, 5, 4, 5, 5, 1, 1, 25, 14, 4, 0, 0, 2, 0, 1, 1, 1]' : 0.14019}", "{'[0, 6, 5, 4, 5, 5, 1, 1, 25, 14, 4, 0, 0, 2, 0, 1, 1, 1]' : 0.140223}", "{'[0, 6, 5, 4, 5, 5, 1, 1, 25, 14, 4, 0, 0, 2, 0, 1, 1, 1]' : 0.140353}", "{'[0, 6, 5, 4, 5, 5, 1, 1, 25, 14, 4, 0, 0, 2, 0, 1, 1, 1]' : 0.14017}", "{'[0, 6, 5, 4, 5, 5, 1, 1, 25, 14, 4, 0, 0, 2, 0, 1, 1, 1]' : 0.140124}", "{'[0, 6, 5, 4, 5, 5, 1, 1, 25, 14, 4, 0, 0, 2, 0, 1, 1, 1]' : 0.140165}", "{'[0, 6, 5, 4, 5, 5, 1, 1, 25, 14, 4, 0, 0, 2, 0, 1, 1, 1]' : 0.140249}", "{'[0, 6, 5, 4, 5, 5, 1, 1, 25, 14, 4, 0, 0, 2, 0, 1, 1, 1]' : 0.140209}", "{'[0, 6, 5, 4, 5, 5, 1, 1, 25, 14, 4, 0, 0, 2, 0, 1, 1, 1]' : 0.1402}", "{'[0, 6, 5, 4, 5, 5, 1, 1, 25, 14, 4, 0, 0, 2, 0, 1, 1, 1]' : 0.140674}", "{'[0, 6, 5, 4, 5, 5, 1, 1, 25, 14, 4, 0, 0, 2, 0, 1, 1, 1]' : 0.140153}", "{'[0, 6, 5, 4, 5, 5, 1, 1, 25, 14, 4, 0, 0, 2, 0, 1, 1, 1]' : 0.140188}", "{'[0, 6, 5, 4, 5, 5, 1, 1, 25, 14, 4, 0, 0, 2, 0, 1, 1, 1]' : 0.140159}", "{'[0, 6, 5, 4, 5, 5, 1, 1, 25, 14, 4, 0, 0, 2, 0, 1, 1, 1]' : 0.140151}", "{'[0, 6, 5, 4, 5, 5, 1, 1, 25, 14, 4, 0, 0, 2, 0, 1, 1, 1]' : 0.140326}", "{'[0, 6, 5, 4, 5, 5, 1, 1, 25, 14, 4, 0, 0, 2, 0, 1, 1, 1]' : 0.140189}", "{'[0, 6, 5, 4, 5, 5, 1, 1, 25, 14, 4, 0, 0, 2, 0, 1, 1, 1]' : 0.140272}", "{'[0, 6, 5, 4, 5, 5, 1, 1, 25, 14, 4, 0, 0, 2, 0, 1, 1, 1]' : 0.140167}", "{'[0, 6, 5, 4, 5, 5, 1, 1, 25, 14, 4, 0, 0, 2, 0, 1, 1, 1]' : 0.140177}", "{'[0, 6, 5, 4, 5, 5, 1, 1, 25, 14, 4, 0, 0, 2, 0, 1, 1, 1]' : 0.140389}", "{'[0, 6, 5, 4, 5, 5, 1, 1, 25, 14, 4, 0, 0, 2, 0, 1, 1, 1]' : 0.140168}", "{'[0, 6, 5, 4, 5, 5, 1, 1, 25, 14, 4, 0, 0, 2, 0, 1, 1, 1]' : 0.140446}", "{'[0, 6, 5, 4, 5, 5, 1, 1, 25, 14, 4, 0, 0, 2, 0, 1, 1, 1]' : 0.140231}", "{'[0, 6, 5, 4, 5, 5, 1, 1, 25, 14, 4, 0, 0, 2, 0, 1, 1, 1]' : 0.140145}", "{'[0, 6, 5, 4, 5, 5, 1, 1, 25, 14, 4, 0, 0, 2, 0, 1, 1, 1]' : 0.140232}", "{'[0, 6, 5, 4, 5, 5, 1, 1, 25, 14, 4, 0, 0, 2, 0, 1, 1, 1]' : 0.140226}", "{'[0, 6, 5, 4, 5, 5, 1, 1, 25, 14, 4, 0, 0, 2, 0, 1, 1, 1]' : 0.140195}"]
returning from 'run': {'[0, 6, 5, 4, 5, 5, 1, 1, 25, 14, 4, 0, 0, 2, 0, 1, 1, 1]': ([0.140594, 0.140368, 0.140191, 0.14019, 0.140223, 0.140353, 0.14017, 0.140124, 0.140165, 0.140249, 0.140209, 0.1402, 0.140674, 0.140153, 0.140188, 0.140159, 0.140151, 0.140326, 0.140189, 0.140272, 0.140167, 0.140177, 0.140389, 0.140168, 0.140446, 0.140231, 0.140145, 0.140232, 0.140226, 0.140195], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.140594, 0.140368, 0.140191, 0.14019, 0.140223, 0.140353, 0.14017, 0.140124, 0.140165, 0.140249, 0.140209, 0.1402, 0.140674, 0.140153, 0.140188, 0.140159, 0.140151, 0.140326, 0.140189, 0.140272, 0.140167, 0.140177, 0.140389, 0.140168, 0.140446, 0.140231, 0.140145, 0.140232, 0.140226, 0.140195], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 5, 4, 5, 5, 1, 1, 25, 14, 4, 0, 0, 2, 0, 1, 1, 1]': ([0.140594, 0.140368, 0.140191, 0.14019, 0.140223, 0.140353, 0.14017, 0.140124, 0.140165, 0.140249, 0.140209, 0.1402, 0.140674, 0.140153, 0.140188, 0.140159, 0.140151, 0.140326, 0.140189, 0.140272, 0.140167, 0.140177, 0.140389, 0.140168, 0.140446, 0.140231, 0.140145, 0.140232, 0.140226, 0.140195], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [1, 6, 0, 5, 6, 3, 1, 0, 27, 0, 25, 0, 0, 0, 0, 1]
Fixed Factors: {'U1_I': 25, 'SCR': 1}
Testing candidate 20: [1, 6, 0, 5, 6, 3, 1, 0, 25, 27, 0, 25, 0, 0, 0, 1, 0, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	47
        Max loop nest depth: 	6
        Additions: 		3482
        Multiplications: 	1624
        Divisions: 		0
        Logical: 		0
        Reads: 			6761
        Writes: 		1166
        Comparisons:		47
        Gotos: 			0
        
digraph CFG {
	ForLoop12000157 [label="ForLoop12000157  for (k=cbv_3; k<=cbv_4; k=k+1) {...",shape=box];
	ForLoop12000157 -> 12042001;
	ForLoop12000157 -> _JOIN_12000157;
	_JOIN_12000157 [label="_JOIN_12000157None...",shape=box];
	_JOIN_12000157 -> _JOIN_12000159;
	12080932 [label="12080932  double scv_29, scv_30, scv_31, scv_32, scv_33, scv_34, scv_35, scv_36;...",shape=box];
	11972839 [label="11972839  double x_copy[512];...",shape=box];
	ForLoop12000318 [label="ForLoop12000318  for (j=jj; j<=cbv_5; j=j+1) {...",shape=box];
	ForLoop12000318 -> 12000317;
	ForLoop12000318 -> _JOIN_12000318;
	12080950 [label="12080950  tmp[(i+20)]=scv_29;...",shape=box];
	12000317 [label="12000317  scv_84=scv_84+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	12000317 -> _JOIN_12000318;
	ForLoop12000159 [label="ForLoop12000159  for (kkk=0; kkk<=ny-1; kkk=kkk+256) {...",shape=box];
	ForLoop12000159 -> 11974965;
	ForLoop12000159 -> _JOIN_12000159;
	12000335 [label="12000335  int k;...",shape=box];
	11972872 [label="11972872  int i;...",shape=box];
	11972872 -> ForLoop12000161;
	_JOIN_11974947 [label="_JOIN_11974947None...",shape=box];
	_JOIN_11974947 -> _JOIN_11974949;
	_JOIN_11999386 [label="_JOIN_11999386None...",shape=box];
	_JOIN_11999386 -> 12137799;
	11973203 [label="11973203  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	_JOIN_11974949 [label="_JOIN_11974949None...",shape=box];
	_JOIN_11974949 -> _JOIN_11974951;
	12086534 [label="12086534  double scv_84;...",shape=box];
	_JOIN_12000159 [label="_JOIN_12000159None...",shape=box];
	_JOIN_12000159 -> 12080950;
	ForLoop11999386 [label="ForLoop11999386  for (k=kkk; k<=cbv_2; k=k+26) {...",shape=box];
	ForLoop11999386 -> 12039010;
	ForLoop11999386 -> _JOIN_11999386;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 11822329;
	_JOIN_12000318 [label="_JOIN_12000318None...",shape=box];
	_JOIN_12000318 -> _JOIN_12000320;
	ForLoop12001147 [label="ForLoop12001147  for (kkk=0; kkk<=ny-1; kkk=kkk+256) {...",shape=box];
	ForLoop12001147 -> 12000335;
	ForLoop12001147 -> _JOIN_12001147;
	ForLoop12001145 [label="ForLoop12001145  for (k=cbv_7; k<=cbv_8; k=k+1) {...",shape=box];
	ForLoop12001145 -> 12084273;
	ForLoop12001145 -> _JOIN_12001145;
	_JOIN_11823057 [label="_JOIN_11823057None...",shape=box];
	_JOIN_11823057 -> 11972839;
	ForLoop12001149 [label="ForLoop12001149  for (i=(min(nx-1,ii+15))-(((min(nx-1,ii+15))-(ii)+1)%28)+1; i<=min(nx-1,ii+15); i=i+1) {...",shape=box];
	ForLoop12001149 -> 12086534;
	ForLoop12001149 -> _JOIN_12001149;
	11823056 [label="11823056  y[i]=0.0;...",shape=box];
	11823056 -> _JOIN_11823057;
	12084273 [label="12084273  double scv_83;...",shape=box];
	11822329 [label="11822329  int i;...",shape=box];
	11822329 -> ForLoop11822988;
	ForLoop11974947 [label="ForLoop11974947  for (j=jj; j<=cbv_1; j=j+1) {...",shape=box];
	ForLoop11974947 -> 12002501;
	ForLoop11974947 -> _JOIN_11974947;
	12138880 [label="12138880  register int cbv_7, cbv_8;...",shape=box];
	12002501 [label="12002501  double scv_1;...",shape=box];
	11974965 [label="11974965  int k;...",shape=box];
	ForLoop11974949 [label="ForLoop11974949  for (jj=jjj; jj<=min(ny-1,jjj+1536); jj=jj+512) {...",shape=box];
	ForLoop11974949 -> 11973203;
	ForLoop11974949 -> _JOIN_11974949;
	_JOIN_11822988 [label="_JOIN_11822988None...",shape=box];
	_JOIN_11822988 -> ForLoop11823057;
	_JOIN_12001077 [label="_JOIN_12001077None...",shape=box];
	_JOIN_12001077 -> 12138880;
	_JOIN_12001151 [label="_JOIN_12001151None...",shape=box];
	_JOIN_12001151 -> _JOIN_12001152;
	_JOIN_12001152 [label="_JOIN_12001152None...",shape=box];
	ForLoop12000161 [label="ForLoop12000161  for (i=ii; i<=min(nx-1,ii+15)-27; i=i+28) {...",shape=box];
	ForLoop12000161 -> 12080932;
	ForLoop12000161 -> _JOIN_12000161;
	12039010 [label="12039010  double scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8, scv_9;...",shape=box];
	_JOIN_12000320 [label="_JOIN_12000320None...",shape=box];
	_JOIN_12000320 -> _JOIN_12000321;
	_JOIN_12000321 [label="_JOIN_12000321None...",shape=box];
	_JOIN_12000321 -> ForLoop12001147;
	_JOIN_12000161 [label="_JOIN_12000161None...",shape=box];
	_JOIN_12000161 -> ForLoop12001149;
	ForLoop12000320 [label="ForLoop12000320  for (jj=jjj; jj<=min(ny-1,jjj+1536); jj=jj+512) {...",shape=box];
	ForLoop12000320 -> 12000276;
	ForLoop12000320 -> _JOIN_12000320;
	ForLoop12000321 [label="ForLoop12000321  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop12000321 -> ForLoop12000320;
	ForLoop12000321 -> _JOIN_12000321;
	_JOIN_11974951 [label="_JOIN_11974951None...",shape=box];
	_JOIN_11974951 -> ForLoop12000159;
	12083659 [label="12083659  double scv_57, scv_58, scv_59, scv_60, scv_61, scv_62, scv_63, scv_64;...",shape=box];
	ForLoop11822988 [label="ForLoop11822988  for (i=0; i<=ny-26; i=i+26) {...",shape=box];
	ForLoop11822988 -> 11822761;
	ForLoop11822988 -> _JOIN_11822988;
	12137799 [label="12137799  register int cbv_3, cbv_4;...",shape=box];
	11822761 [label="11822761  y[i]=0.0;...",shape=box];
	12086546 [laexpected=9369846271501.798828
actual=9369846271501.798828
bel="12086546  tmp[i]=scv_84;...",shape=box];
	12086546 -> _JOIN_12001149;
	ForLoop12001151 [label="ForLoop12001151  for (ii=iii; ii<=min(nx-1,iii+1008); ii=ii+16) {...",shape=box];
	ForLoop12001151 -> 11972872;
	ForLoop12001151 -> _JOIN_12001151;
	ForLoop12001152 [label="ForLoop12001152  for (iii=0; iii<=nx-1; iii=iii+1024) {...",shape=box];
	ForLoop12001152 -> ForLoop12001151;
	ForLoop12001152 -> _JOIN_12001152;
	ForLoop12001077 [label="ForLoop12001077  for (k=kkk; k<=cbv_6; k=k+26) {...",shape=box];
	ForLoop12001077 -> 12083659;
	ForLoop12001077 -> _JOIN_12001077;
	ForLoop11823057 [label="ForLoop11823057  for (i=ny-((ny-(0))%26); i<=ny-1; i=i+1) ...",shape=box];
	ForLoop11823057 -> 11823056;
	ForLoop11823057 -> _JOIN_11823057;
	12042001 [label="12042001  double scv_28;...",shape=box];
	ForLoop11974951 [label="ForLoop11974951  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop11974951 -> ForLoop11974949;
	ForLoop11974951 -> _JOIN_11974951;
	_JOIN_12001149 [label="_JOIN_12001149None...",shape=box];
	_JOIN_12001149 -> _JOIN_12001151;
	12000276 [label="12000276  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	_JOIN_12001147 [label="_JOIN_12001147None...",shape=box];
	_JOIN_12001147 -> 12086546;
	_JOIN_12001145 [label="_JOIN_12001145None...",shape=box];
	_JOIN_12001145 -> _JOIN_12001147;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest57.exe __orio_perftest57.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest57.exe  
{'[1, 6, 0, 5, 6, 3, 1, 0, 25, 27, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.153196}
{'[1, 6, 0, 5, 6, 3, 1, 0, 25, 27, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.153187}
{'[1, 6, 0, 5, 6, 3, 1, 0, 25, 27, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.153127}
{'[1, 6, 0, 5, 6, 3, 1, 0, 25, 27, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.153218}
{'[1, 6, 0, 5, 6, 3, 1, 0, 25, 27, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.153236}
{'[1, 6, 0, 5, 6, 3, 1, 0, 25, 27, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.153206}
{'[1, 6, 0, 5, 6, 3, 1, 0, 25, 27, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.153111}
{'[1, 6, 0, 5, 6, 3, 1, 0, 25, 27, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.153254}
{'[1, 6, 0, 5, 6, 3, 1, 0, 25, 27, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.153182}
{'[1, 6, 0, 5, 6, 3, 1, 0, 25, 27, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.153148}
{'[1, 6, 0, 5, 6, 3, 1, 0, 25, 27, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.154182}
{'[1, 6, 0, 5, 6, 3, 1, 0, 25, 27, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.153309}
{'[1, 6, 0, 5, 6, 3, 1, 0, 25, 27, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.15322}
{'[1, 6, 0, 5, 6, 3, 1, 0, 25, 27, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.153133}
{'[1, 6, 0, 5, 6, 3, 1, 0, 25, 27, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.153237}
{'[1, 6, 0, 5, 6, 3, 1, 0, 25, 27, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.153132}
{'[1, 6, 0, 5, 6, 3, 1, 0, 25, 27, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.153148}
{'[1, 6, 0, 5, 6, 3, 1, 0, 25, 27, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.153439}
{'[1, 6, 0, 5, 6, 3, 1, 0, 25, 27, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.153313}
{'[1, 6, 0, 5, 6, 3, 1, 0, 25, 27, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.153191}
{'[1, 6, 0, 5, 6, 3, 1, 0, 25, 27, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.153152}
{'[1, 6, 0, 5, 6, 3, 1, 0, 25, 27, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.153118}
{'[1, 6, 0, 5, 6, 3, 1, 0, 25, 27, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.153139}
{'[1, 6, 0, 5, 6, 3, 1, 0, 25, 27, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.154228}
{'[1, 6, 0, 5, 6, 3, 1, 0, 25, 27, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.153225}
{'[1, 6, 0, 5, 6, 3, 1, 0, 25, 27, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.153169}
{'[1, 6, 0, 5, 6, 3, 1, 0, 25, 27, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.153173}
{'[1, 6, 0, 5, 6, 3, 1, 0, 25, 27, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.153285}
{'[1, 6, 0, 5, 6, 3, 1, 0, 25, 27, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.153146}
{'[1, 6, 0, 5, 6, 3, 1, 0, 25, 27, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.153164}

out:
 ["{'[1, 6, 0, 5, 6, 3, 1, 0, 25, 27, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.153196}", "{'[1, 6, 0, 5, 6, 3, 1, 0, 25, 27, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.153187}", "{'[1, 6, 0, 5, 6, 3, 1, 0, 25, 27, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.153127}", "{'[1, 6, 0, 5, 6, 3, 1, 0, 25, 27, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.153218}", "{'[1, 6, 0, 5, 6, 3, 1, 0, 25, 27, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.153236}", "{'[1, 6, 0, 5, 6, 3, WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = iii
1, 0, 25, 27, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.153206}", "{'[1, 6, 0, 5, 6, 3, 1, 0, 25, 27, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.153111}", "{'[1, 6, 0, 5, 6, 3, 1, 0, 25, 27, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.153254}", "{'[1, 6, 0, 5, 6, 3, 1, 0, 25, 27, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.153182}", "{'[1, 6, 0, 5, 6, 3, 1, 0, 25, 27, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.153148}", "{'[1, 6, 0, 5, 6, 3, 1, 0, 25, 27, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.154182}", "{'[1, 6, 0, 5, 6, 3, 1, 0, 25, 27, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.153309}", "{'[1, 6, 0, 5, 6, 3, 1, 0, 25, 27, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.15322}", "{'[1, 6, 0, 5, 6, 3, 1, 0, 25, 27, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.153133}", "{'[1, 6, 0, 5, 6, 3, 1, 0, 25, 27, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.153237}", "{'[1, 6, 0, 5, 6, 3, 1, 0, 25, 27, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.153132}", "{'[1, 6, 0, 5, 6, 3, 1, 0, 25, 27, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.153148}", "{'[1, 6, 0, 5, 6, 3, 1, 0, 25, 27, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.153439}", "{'[1, 6, 0, 5, 6, 3, 1, 0, 25, 27, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.153313}", "{'[1, 6, 0, 5, 6, 3, 1, 0, 25, 27, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.153191}", "{'[1, 6, 0, 5, 6, 3, 1, 0, 25, 27, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.153152}", "{'[1, 6, 0, 5, 6, 3, 1, 0, 25, 27, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.153118}", "{'[1, 6, 0, 5, 6, 3, 1, 0, 25, 27, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.153139}", "{'[1, 6, 0, 5, 6, 3, 1, 0, 25, 27, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.154228}", "{'[1, 6, 0, 5, 6, 3, 1, 0, 25, 27, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.153225}", "{'[1, 6, 0, 5, 6, 3, 1, 0, 25, 27, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.153169}", "{'[1, 6, 0, 5, 6, 3, 1, 0, 25, 27, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.153173}", "{'[1, 6, 0, 5, 6, 3, 1, 0, 25, 27, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.153285}", "{'[1, 6, 0, 5, 6, 3, 1, 0, 25, 27, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.153146}", "{'[1, 6, 0, 5, 6, 3, 1, 0, 25, 27, 0, 25, 0, 0, 0, 1, 0, 1]' : 0.153164}"]
returning from 'run': {'[1, 6, 0, 5, 6, 3, 1, 0, 25, 27, 0, 25, 0, 0, 0, 1, 0, 1]': ([0.153196, 0.153187, 0.153127, 0.153218, 0.153236, 0.153206, 0.153111, 0.153254, 0.153182, 0.153148, 0.154182, 0.153309, 0.15322, 0.153133, 0.153237, 0.153132, 0.153148, 0.153439, 0.153313, 0.153191, 0.153152, 0.153118, 0.153139, 0.154228, 0.153225, 0.153169, 0.153173, 0.153285, 0.153146, 0.153164], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.153196, 0.153187, 0.153127, 0.153218, 0.153236, 0.153206, 0.153111, 0.153254, 0.153182, 0.153148, 0.154182, 0.153309, 0.15322, 0.153133, 0.153237, 0.153132, 0.153148, 0.153439, 0.153313, 0.153191, 0.153152, 0.153118, 0.153139, 0.154228, 0.153225, 0.153169, 0.153173, 0.153285, 0.153146, 0.153164], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[1, 6, 0, 5, 6, 3, 1, 0, 25, 27, 0, 25, 0, 0, 0, 1, 0, 1]': ([0.153196, 0.153187, 0.153127, 0.153218, 0.153236, 0.153206, 0.153111, 0.153254, 0.153182, 0.153148, 0.154182, 0.153309, 0.15322, 0.153133, 0.153237, 0.153132, 0.153148, 0.153439, 0.153313, 0.153191, 0.153152, 0.153118, 0.153139, 0.154228, 0.153225, 0.153169, 0.153173, 0.153285, 0.153146, 0.153164], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [5, 5, 6, 3, 5, 0, 0, 1, 29, 0, 21, 0, 0, 1, 0, 1]
Fixed Factors: {'U1_I': 25, 'SCR': 1}
Testing candidate 21: [5, 5, 6, 3, 5, 0, 0, 1, 25, 29, 0, 21, 0, 0, 1, 1, 0, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	77
        Max loop nest depth: 	5
        Additions: 		1480
        Multiplications: 	558
        Divisions: 		0
        Logical: 		0
        Reads: 			3205
        Writes: 		652
        Comparisons:		77
        Gotos: 			0
        
digraph CFG {
	_JOIN_12215973 [label="_JOIN_12215973None...",shape=box];
	_JOIN_12215973 -> 12248582;
	ForLoop12216098 [label="ForLoop12216098  for (j=jj; j<=cbv_3; j=j+1) {...",shape=box];
	ForLoop12216098 -> 12216097;
	ForLoop12216098 -> _JOIN_12216098;
	_JOIN_12215975 [label="_JOIN_12215975None...",shape=box];
	_JOIN_12215975 -> ForLoop12216472;
	_JOIN_12205184 [label="_JOIN_12205184None...",shape=box];
	_JOIN_12205184 -> ForLoop12215973;
	12260164 [label="12260164  register int cbv_1;...",shape=box];
	_JOIN_12205180 [label="_JOIN_12205180None...",shape=box];
	_JOIN_12205180 -> _JOIN_12205182;
	12203981 [label="12203981  int i;...",shape=box];
	12203981 -> ForLoop12215975;
	_JOIN_12205182 [label="_JOIN_12205182None...",shape=box];
	_JOIN_12205182 -> _JOIN_12205184;
	ForLoop12215975 [label="ForLoop12215975  for (i=ii; i<=min(nx-1,ii+255)-29; i=i+30) {...",shape=box];
	ForLoop12215975 -> 12248564;
	ForLoop12215975 -> _JOIN_12215975;
	ForLoop12205180 [label="ForLoop12205180  for (j=jj; j<=cbv_1; j=j+1) {...",shape=box];
	ForLoop12205180 -> 12217826;
	ForLoop12205180 -> _JOIN_12205180;
	ForLoop12205182 [label="ForLoop12205182  for (jj=jjj; jj<=min(ny-1,jjj+768); jj=jj+256) {...",shape=box];
	ForLoop12205182 -> 12260164;
	ForLoop12205182 -> _JOIN_12205182;
	ForLoop12205184 [label="ForLoop12205184  for (jjj=0; jjj<=ny-1; jjj=jjj+1024) {...",shape=box];
	ForLoop12205184 -> ForLoop12205182;
	ForLoop12205184 -> _JOIN_12205184;
	ForLoop12215973 [label="ForLoop12215973  for (kk=0; kk<=ny-1; kk=kk+512) {...",shape=box];
	ForLoop12215973 -> 12205228;
	ForLoop12215973 -> _JOIN_12215973;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 12139157;
	12264891 [label="12264891  register int cbv_3;...",shape=box];
	_JOIN_12139885 [label="_JOIN_12139885None...",shape=box];
	_JOIN_12139885 -> 12203966;
	12203966 [label="12203966  double x_copy;...",shape=box];
	12248582 [label="12248582  tmp[(i+20)]=scv_10;...",shape=box];
	_JOIN_12216470 [label="_JOIN_12216470None...",shape=box];
	_JOIN_12216470 -> 12251264;
	ForLoop12215041 [label="ForLoop12215041  for (kt=kk; kt<=cbv_2; kt=kt+8) {...",shape=box];
	ForLoop12215041 -> 12231323;
	ForLoop12215041 -> _JOIN_12215041;
	_JOIN_12216472 [label="_JOIN_12216472None...",shape=box];
	_JOIN_12216472 -> _JOIN_12216474;
	12215072 [label="12215072  for (k=kk; k<=min(ny-1,kk+511); k=k+1) ...",shape=box];
	12251264 [label="12251264  tmp[i]=scv_48;...",shape=box];
	12251264 -> _JOIN_12216472;
	12216144 [label="12216144  for (k=kk; k<=min(ny-1,kk+511); k=k+1) ...",shape=box];
	_JOIN_12216437 [label="_JOIN_12216437None...",shape=box];
	_JOIN_12216437 -> 12216468;
	12216468 [label="12216468  for (k=kk; k<=min(ny-1,kk+511); k=k+1) ...",shape=box];
	12216468 -> _JOIN_12216470;
	_JOIN_12216100 [label="_JOIN_12216100None...",shape=box];
	_JOIN_12216100 -> ForLoop12216470;
	_JOIN_12216474 [label="_JOIN_12216474None...",shape=box];
	12139589 [label="12139589  y[i]=0.0;...",shape=box];
	12231323 [label="12231323  double scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8, scv_9;...",shape=box];
	ForLoop12216474 [label="ForLoop12216474  for (ii=0; ii<=nx-1; ii=ii+256) {...",shape=box];
	ForLoop12216474 -> 12203981;
	ForLoop12216474 -> _JOIN_12216474;
	ForLoop12216470 [label="ForLoop12216470  for (kk=0; kk<=ny-1; kk=kk+512) {...",shape=box];
	ForLoop12216470 -> 12216144;
	ForLoop12216470 -> _JOIN_12216470;
	12251252 [label="12251252  double scv_48;...",shape=box];
	ForLoop12216472 [label="ForLoop12216472  for (i=(min(nx-1,ii+255))-(((min(nx-1,ii+255))-(ii)+1)%30)+1; i<=min(nx-1,ii+255); i=i+1) {...",shape=box];
	ForLoop12216472 -> 12251252;
	ForLoop12216472 -> _JOIN_12216472;
	12250057 [label="12250057  double scv_40, scv_41, scv_42, scv_43, scv_44, scv_45, scv_46, scv_47;...",shape=box];
	12139157 [label="12139157  int i;...",shape=box];
	12139157 -> ForLoop12139816;
	12248564 [label="12248564  double scv_10, scv_11, scv_12, scv_13, scv_14, scv_15, scv_16, scv_17;...",shape=box];
	12139884 [label="12139884  y[i]=0.0;...",shape=box];
	12139884 -> _JOIN_12139885;
	12205228 [label="12205228  for (k=kk; k<=min(ny-1,kk+511); k=k+1) ...",shape=box];
	_JOIN_12215041 [label="_JOIN_12215041None...",shape=box];
	_JOIN_12215041 -> 12215072;
	ForLoop12216437 [label="ForLoop12216437  for (kexpected=9369846271501.798828
actual=9369846271501.798828
t=kk; kt<=cbv_4; kt=kt+8) {...",shape=box];
	ForLoop12216437 -> 12250057;
	ForLoop12216437 -> _JOIN_12216437;
	12217826 [label="12217826  double scv_1;...",shape=box];
	ForLoop12216100 [label="ForLoop12216100  for (jjj=0; jjj<=ny-1; jjj=jjj+1024) {...",shape=box];
	ForLoop12216100 -> ForLoop12216099;
	ForLoop12216100 -> _JOIN_12216100;
	_JOIN_12216099 [label="_JOIN_12216099None...",shape=box];
	_JOIN_12216099 -> _JOIN_12216100;
	_JOIN_12216098 [label="_JOIN_12216098None...",shape=box];
	_JOIN_12216098 -> _JOIN_12216099;
	ForLoop12216099 [label="ForLoop12216099  for (jj=jjj; jj<=min(ny-1,jjj+768); jj=jj+256) {...",shape=box];
	ForLoop12216099 -> 12264891;
	ForLoop12216099 -> _JOIN_12216099;
	ForLoop12139885 [label="ForLoop12139885  for (i=ny-((ny-(0))%26); i<=ny-1; i=i+1) ...",shape=box];
	ForLoop12139885 -> 12139884;
	ForLoop12139885 -> _JOIN_12139885;
	ForLoop12139816 [label="ForLoop12139816  for (i=0; i<=ny-26; i=i+26) {...",shape=box];
	ForLoop12139816 -> 12139589;
	ForLoop12139816 -> _JOIN_12139816;
	12216097 [label="12216097  scv_48=scv_48+A[i*ny+j]*x[j];...",shape=box];
	12216097 -> _JOIN_12216098;
	_JOIN_12139816 [label="_JOIN_12139816None...",shape=box];
	_JOIN_12139816 -> ForLoop12139885;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest58.exe __orio_perftest58.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest58.exe  
{'[5, 5, 6, 3, 5, 0, 0, 1, 25, 29, 0, 21, 0, 0, 1, 1, 0, 1]' : 0.164959}
{'[5, 5, 6, 3, 5, 0, 0, 1, 25, 29, 0, 21, 0, 0, 1, 1, 0, 1]' : 0.164479}
{'[5, 5, 6, 3, 5, 0, 0, 1, 25, 29, 0, 21, 0, 0, 1, 1, 0, 1]' : 0.164427}
{'[5, 5, 6, 3, 5, 0, 0, 1, 25, 29, 0, 21, 0, 0, 1, 1, 0, 1]' : 0.165529}
{'[5, 5, 6, 3, 5, 0, 0, 1, 25, 29, 0, 21, 0, 0, 1, 1, 0, 1]' : 0.164374}
{'[5, 5, 6, 3, 5, 0, 0, 1, 25, 29, 0, 21, 0, 0, 1, 1, 0, 1]' : 0.164419}
{'[5, 5, 6, 3, 5, 0, 0, 1, 25, 29, 0, 21, 0, 0, 1, 1, 0, 1]' : 0.164471}
{'[5, 5, 6, 3, 5, 0, 0, 1, 25, 29, 0, 21, 0, 0, 1, 1, 0, 1]' : 0.164474}
{'[5, 5, 6, 3, 5, 0, 0, 1, 25, 29, 0, 21, 0, 0, 1, 1, 0, 1]' : 0.16438}
{'[5, 5, 6, 3, 5, 0, 0, 1, 25, 29, 0, 21, 0, 0, 1, 1, 0, 1]' : 0.164642}
{'[5, 5, 6, 3, 5, 0, 0, 1, 25, 29, 0, 21, 0, 0, 1, 1, 0, 1]' : 0.164921}
{'[5, 5, 6, 3, 5, 0, 0, 1, 25, 29, 0, 21, 0, 0, 1, 1, 0, 1]' : 0.164592}
{'[5, 5, 6, 3, 5, 0, 0, 1, 25, 29, 0, 21, 0, 0, 1, 1, 0, 1]' : 0.164306}
{'[5, 5, 6, 3, 5, 0, 0, 1, 25, 29, 0, 21, 0, 0, 1, 1, 0, 1]' : 0.164596}
{'[5, 5, 6, 3, 5, 0, 0, 1, 25, 29, 0, 21, 0, 0, 1, 1, 0, 1]' : 0.164515}
{'[5, 5, 6, 3, 5, 0, 0, 1, 25, 29, 0, 21, 0, 0, 1, 1, 0, 1]' : 0.16542}
{'[5, 5, 6, 3, 5, 0, 0, 1, 25, 29, 0, 21, 0, 0, 1, 1, 0, 1]' : 0.164496}
{'[5, 5, 6, 3, 5, 0, 0, 1, 25, 29, 0, 21, 0, 0, 1, 1, 0, 1]' : 0.164422}
{'[5, 5, 6, 3, 5, 0, 0, 1, 25, 29, 0, 21, 0, 0, 1, 1, 0, 1]' : 0.164439}
{'[5, 5, 6, 3, 5, 0, 0, 1, 25, 29, 0, 21, 0, 0, 1, 1, 0, 1]' : 0.16471}
{'[5, 5, 6, 3, 5, 0, 0, 1, 25, 29, 0, 21, 0, 0, 1, 1, 0, 1]' : 0.164356}
{'[5, 5, 6, 3, 5, 0, 0, 1, 25, 29, 0, 21, 0, 0, 1, 1, 0, 1]' : 0.164721}
{'[5, 5, 6, 3, 5, 0, 0, 1, 25, 29, 0, 21, 0, 0, 1, 1, 0, 1]' : 0.164608}
{'[5, 5, 6, 3, 5, 0, 0, 1, 25, 29, 0, 21, 0, 0, 1, 1, 0, 1]' : 0.164551}
{'[5, 5, 6, 3, 5, 0, 0, 1, 25, 29, 0, 21, 0, 0, 1, 1, 0, 1]' : 0.164297}
{'[5, 5, 6, 3, 5, 0, 0, 1, 25, 29, 0, 21, 0, 0, 1, 1, 0, 1]' : 0.164708}
{'[5, 5, 6, 3, 5, 0, 0, 1, 25, 29, 0, 21, 0, 0, 1, 1, 0, 1]' : 0.164449}
{'[5, 5, 6, 3, 5, 0, 0, 1, 25, 29, 0, 21, 0, 0, 1, 1, 0, 1]' : 0.165625}
{'[5, 5, 6, 3, 5, 0, 0, 1, 25, 29, 0, 21, 0, 0, 1, 1, 0, 1]' : 0.164979}
{'[5, 5, 6, 3, 5, 0, 0, 1, 25, 29, 0, 21, 0, 0, 1, 1, 0, 1]' : 0.16457}

out:
 ["{'[5, 5, 6, 3, 5, 0, 0, 1, 25, 29, 0, 21, 0, 0, 1, 1, 0, 1]' : 0.164959}", "{'[5, 5, 6, 3, 5, 0, 0, 1, 25, 29, 0, 21, 0, 0, 1, 1, 0, 1]' : 0.164479}", "{'[5, 5, 6, 3, 5, 0, 0, 1, 25, 29, 0, 21, 0, 0, 1, 1, 0, 1]' : 0.164427}", "{'[5, 5, 6, 3, 5, 0, 0, 1, 25, 29, 0, 21, 0, 0, 1, 1, 0, 1]' : 0.165529}", "{'[5, 5, 6, 3, 5, 0, 0, 1, 25, 29, 0, 21, 0, 0, 1, 1, 0, 1]' : 0.164374}", "{'[5, 5, 6, 3, 5, 0, 0, 1, 25, 29, 0, 21, 0, 0, 1, 1, 0, 1]' : 0.164419}", "{'[5, 5, 6, 3, 5, 0, 0, 1, 25, 29, 0, 21, 0, 0, 1, 1, 0, 1]' : 0.164471}", "{'[5, 5, 6, 3, 5, 0, 0, 1, 25, 29, 0, 21, 0, 0, 1, 1, 0, 1]' : 0.164474}", "{'[5, 5, 6, 3, 5, 0, 0, 1, 25, 29, 0, 21, 0, 0, 1, 1, 0, 1]' : 0.16438}", "{'[5, 5, 6, 3, 5, 0, 0, 1, 25, 29, 0, 21, 0, 0, 1, 1, 0, 1]' : 0.164642}", "{'[5, 5, 6, 3, 5, 0, 0, 1, 25, 29, 0, 21, 0, 0, 1, 1, 0, 1]' : 0.164921}", "{'[5, 5, 6, 3, 5, 0, 0, 1, 25, 29, 0, 21, 0, 0, 1, 1, 0, 1]' : 0.164592}", "{'[5, 5, 6, 3, 5, 0, 0, 1, 25, 29, 0, 21, 0, 0, 1, 1, 0, 1]' : 0.164306}", "{'[5, 5, 6, 3, 5, 0, 0, 1, 25, 29, 0, 21, 0, 0, 1, 1, 0, 1]' : 0.164596}", "{'[5, 5, 6, 3, 5, 0, 0, 1, 25, 29, 0, 21, 0, 0, 1, 1, 0, 1]' : 0.164515}", "{'[5, 5, 6, 3, 5, 0, 0, 1, 25, 29, 0, 21, 0, 0, 1, 1, 0, 1]' : 0.16542}", "{'[5, 5, 6, 3, 5, 0, 0, 1, 25, 29, 0, 21, 0, 0, 1, 1, 0, 1]' : 0.164496}", "{'[5, 5, 6, 3, 5, 0, 0, 1, 25, 29, 0, 21, 0, 0, 1, 1, 0, 1]' : 0.164422}", "{'[5, 5, 6, 3, 5, 0, 0, 1, 25, 29, 0, 21, 0, 0, 1, 1, 0, 1]' : 0.164439}", "{'[5, 5, 6, 3, 5, 0, 0, 1, 25, 29, 0, 21, 0, 0, 1, 1, 0, 1]' : 0.16471}", "{'[5, 5, 6, 3, 5, 0, 0, 1, 25, 29, 0, 21, 0, 0, 1, 1, 0, 1]' : 0.164356}", "{'[5, 5, 6, 3, 5, 0, 0, 1, 25, 29, 0, 21, 0, 0, 1, 1, 0, 1]' : 0.164721}", "{'[5, 5, 6, 3, 5, 0, 0, 1, 25, 29, 0, 21, 0, 0, 1, 1, 0, 1]' : 0.164608}", "{'[5, 5, 6, 3, 5, 0, 0, 1, 25, 29, 0, 21, 0, 0, 1, 1, 0, 1]' : 0.164551}", "{'[5, 5, 6, 3, 5, 0, 0, 1, 25, 29, 0, 21, 0, 0, 1, 1, 0, 1]' : 0.164297}", "{'[5, 5, 6, 3, 5, 0, 0, 1, 25, 29, 0, 21, 0, 0, 1, 1, 0, 1]' : 0.164708}", "{'[5, 5, 6, 3, 5, 0, 0, 1, 25, 29, 0, 21, 0, 0, 1, 1, 0, 1]' : 0.164449}", "{'[5, 5, 6, 3, 5, 0, 0, 1, 25, 29, 0, 21, 0, 0, 1, 1, 0, 1]' : 0.165625}", "{'[5, 5, 6, 3, 5, 0, 0, 1, 25, 29, 0, 21, 0, 0, 1, 1, 0, 1]' : 0.164979}", "{'[5, 5, 6, 3, 5, 0, 0, 1, 25, 29, 0, 21, 0, 0, 1, 1, 0, 1]' : 0.16457}"]
returning from 'run': {'[5, 5, 6, 3, 5, 0, 0, 1, 25, 29, 0, 21, 0, 0, 1, 1, 0, 1]': ([0.164959, 0.164479, 0.164427, 0.165529, 0.164374, 0.164419, 0.164471, 0.164474, 0.16438, 0.164642, 0.164921, 0.164592, 0.164306, 0.164596, 0.164515, 0.16542, 0.164496, 0.164422, 0.164439, 0.16471, 0.164356, 0.164721, 0.164608, 0.164551, 0.164297, 0.164708, 0.164449, 0.165625, 0.164979, 0.16457], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.164959, 0.164479, 0.164427, 0.165529, 0.164374, 0.164419, 0.164471, 0.164474, 0.16438, 0.164642, 0.164921, 0.164592, 0.164306, 0.164596, 0.164515, 0.16542, 0.164496, 0.164422, 0.164439, 0.16471, 0.164356, 0.164721, 0.164608, 0.164551, 0.164297, 0.164708, 0.164449, 0.165625, 0.164979, 0.16457], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[5, 5, 6, 3, 5, 0, 0, 1, 25, 29, 0, 21, 0, 0, 1, 1, 0, 1]': ([0.164959, 0.164479, 0.164427, 0.165529, 0.164374, 0.164419, 0.164471, 0.164474, 0.16438, 0.164642, 0.164921, 0.164592, 0.164306, 0.164596, 0.164515, 0.16542, 0.164496, 0.164422, 0.164439, 0.16471, 0.164356, 0.164721, 0.164608, 0.164551, 0.164297, 0.164708, 0.164449, 0.165625, 0.164979, 0.16457], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [6, 5, 2, 0, 0, 5, 1, 0, 3, 18, 0, 0, 1, 1, 0, 0]
Fixed Factors: {'U1_I': 25, 'SCR': 1}
Testing candidate 22: [6, 5, 2, 0, 0, 5, 1, 0, 25, 3, 18, 0, 0, 1, 1, 1, 0, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	5
        Additions: 		461
        Multiplications: 	170
        Divisions: 		0
        Logical: 		0
        Reads: 			1011
        Writes: 		220
        Comparisons:		22
        Gotos: 			0
        
digraph CFG {
	_JOIN_12301380 [label="_JOIN_12301380None...",shape=box];
	_JOIN_12300709 [label="_JOIN_12300709None...",shape=box];
	_JOIN_12300709 -> 12310111;
	_JOIN_12300707 [label="_JOIN_12300707None...",shape=box];
	_JOIN_12300707 -> _JOIN_12300709;
	_JOIN_12300705 [label="_JOIN_12300705None...",shape=box];
	_JOIN_12300705 -> _JOIN_12300707;
	ForLoop12301380 [label="ForLoop12301380  for (ii=0; ii<=nx-1; ii=ii+512) {...",shape=box];
	ForLoop12301380 -> 12298248;
	ForLoop12301380 -> _JOIN_12301380;
	12313015 [label="12313015  double scv_31;...",shape=box];
	ForLoop12266134 [label="ForLoop12266134  for (i=0; i<=ny-26; i=i+26) {...",shape=box];
	ForLoop12266134 -> 12265907;
	ForLoop12266134 -> _JOIN_12266134;
	_JOIN_12301373 [label="_JOIN_12301373None...",shape=box];
	_JOIN_12301373 -> _JOIN_12301375;
	ForLoop12266203 [label="ForLoop12266203  for (i=ny-((ny-(0))%26); i<=ny-1; i=i+1) ...",shape=box];
	ForLoop12266203 -> 12266202;
	ForLoop12266203 -> _JOIN_12266203;
	12305890 [label="12305890  double scv_17;...",shape=box];
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 12265475;
	12265907 [label="12265907  y[i]=0.0;...",shape=box];
	12298233 [label="12298233  double x_copy[256];...",shape=box];
	ForLoop12301376 [label="ForLoop12301376  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop12301376 -> ForLoop12301375;
	ForLoop12301376 -> _JOIN_12301376;
	12302895 [label="12302895  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	ForLoop12301373 [label="ForLoop12301373  for (k=kt; k<=min(ny-1,kk+31); k=k+1) {...",shape=box];
	ForLoop12301373 -> 12311506;
	ForLoop12301373 -> _JOIN_12301373;
	12311302 [label="12311302  double scv_22, scv_23, scv_24, scv_25, scv_26, scv_27, scv_28, scv_29;...",shape=box];
	12300808 [label="12300808  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	12300808 -> ForLoop12301056;
	ForLoop12300707 [label="ForLoop12300707  for (kk=kkk; kk<=min(ny-1,kkk+992); kk=kk+32) {...",shape=box];
	ForLoop12300707 -> ForLoop12300587;
	ForLoop12300707 -> _JOIN_12300707;
	ForLoop12301378 [label="ForLoop12301378  for (i=(min(nx-1,ii+511))-(((min(nx-1,ii+511))-(ii)+1)%4)+1; i<=min(nx-1,ii+511); i=i+1) {...",shape=box];
	ForLoop12301378 -> 12313015;
	ForLoop12301378 -> _JOIN_12301378;
	ForLoop12300705 [label="ForLoop12300705  for (k=kt; k<=min(ny-1,kk+31); k=k+1) {...",shape=box];
	ForLoop12300705 -> 12305890;
	ForLoop12300705 -> _JOIN_12300705;
	ForLoop12299526 [label="ForLoop12299526  for (jj=0; jj<=ny-1; jj=jj+256) {...",shape=box];
	ForLoop12299526 -> 12298345;
	ForLoop12299526 -> _JOIN_12299526;
	ForLoop12299524 [label="ForLoop12299524  for (jt=jj; jt<=min(ny-1,jj+255)-7; jt=jt+8) {...",shape=box];
	ForLoop12299524 -> 12302895;
	ForLoop12299524 -> _JOIN_12299524;
	ForLoop12301334 [label="ForLoop12301334  for (kt=kk; kt<=min(ny-1,kk+31)-7; kt=kt+8) {...",shape=box];
	ForLoop12301334 -> 12311302;
	ForLoop12301334 -> _JOIN_12301334;
	12311506 [label="12311506  double scv_30;...",shape=box];
	ForLoop12301375 [label="ForLoop12301375  for (kk=kkk; kk<=min(ny-1,kkk+992); kk=kk+32) {...",shape=box];
	ForLoop12301375 -> ForLoop12301334;
	ForLoop12301375 -> _JOIN_12301375;
	_JOIN_12300587 [label="_JOIN_12300587None...",shape=box];
	_JOIN_12300587 -> ForLoop12300705;
	ForLoop12301056 [label="ForLoop12301056  for (jt=jj; jt<=min(ny-1,jj+255)-7; jt=jt+8) {...",shape=box];
	ForLoop12301056 -> 12300851;
	ForLoop12301056 -> _JOIN_12301056;
	ForLoop12301058 [label="ForLoop12301058  for (jj=0; jj<=ny-1; jj=jj+256) {...",shape=box];
	ForLoop12301058 -> 12300808;
	ForLoop12301058 -> _JOIN_12301058;
	12313027 [label="12313027  tmp[i]=scv_31;...",shape=box];
	12313027 -> _JOIN_12301378;
	12266202 [label="12266202  y[i]=0.0;...",shape=box];
	12266202 -> _JOIN_12266203;
	ForLoop12300709 [label="ForLoop12300709  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop12300709 -> ForLoop12300707;
	ForLoop12300709 -> _JOIN_12300709;
	_JOIN_12300711 [label="_JOIN_12300711None...",shape=box];
	_JOIN_12300711 -> ForLoop12301378;
	_JOIN_12301058 [label="_JOIN_12301058None...",shape=box];
	_JOIN_12301058 -> ForLoop12301376;
	12305529 [label="12305529  double scv_9, scv_10, scv_11, scv_12, scv_13, scv_14, scv_15, scv_16;...",shape=box];
	12265475 [label="12265475  int i;...",shape=box];
	12265475 -> ForLoop12266134;
	12298345 [label="12298345  for (j=jj; j<=min(ny-1,jjexpected=9369846271501.798828
actual=9369846271501.798828
+255); j=j+1) ...",shape=box];
	_JOIN_12301056 [label="_JOIN_12301056None...",shape=box];
	_JOIN_12301056 -> _JOIN_12301058;
	_JOIN_12266134 [label="_JOIN_12266134None...",shape=box];
	_JOIN_12266134 -> ForLoop12266203;
	12300851 [label="12300851  scv_31=scv_31+A[i*ny+jt]*x_copy[(jt-jj)];...",shape=box];
	_JOIN_12301378 [label="_JOIN_12301378None...",shape=box];
	_JOIN_12301378 -> _JOIN_12301380;
	12310111 [label="12310111  tmp[(i+2)]=scv_18;...",shape=box];
	_JOIN_12301334 [label="_JOIN_12301334None...",shape=box];
	_JOIN_12301334 -> ForLoop12301373;
	ForLoop12300587 [label="ForLoop12300587  for (kt=kk; kt<=min(ny-1,kk+31)-7; kt=kt+8) {...",shape=box];
	ForLoop12300587 -> 12305529;
	ForLoop12300587 -> _JOIN_12300587;
	_JOIN_12301375 [label="_JOIN_12301375None...",shape=box];
	_JOIN_12301375 -> _JOIN_12301376;
	ForLoop12300711 [label="ForLoop12300711  for (i=ii; i<=min(nx-1,ii+511)-3; i=i+4) {...",shape=box];
	ForLoop12300711 -> 12310093;
	ForLoop12300711 -> _JOIN_12300711;
	_JOIN_12301376 [label="_JOIN_12301376None...",shape=box];
	_JOIN_12301376 -> 12313027;
	12298248 [label="12298248  int i;...",shape=box];
	12298248 -> ForLoop12300711;
	_JOIN_12266203 [label="_JOIN_12266203None...",shape=box];
	_JOIN_12266203 -> 12298233;
	_JOIN_12299526 [label="_JOIN_12299526None...",shape=box];
	_JOIN_12299526 -> ForLoop12300709;
	_JOIN_12299524 [label="_JOIN_12299524None...",shape=box];
	_JOIN_12299524 -> _JOIN_12299526;
	12310093 [label="12310093  double scv_18, scv_19, scv_20, scv_21;...",shape=box];

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest59.exe __orio_perftest59.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest59.exe  
{'[6, 5, 2, 0, 0, 5, 1, 0, 25, 3, 18, 0, 0, 1, 1, 1, 0, 0]' : 0.0925832}
{'[6, 5, 2, 0, 0, 5, 1, 0, 25, 3, 18, 0, 0, 1, 1, 1, 0, 0]' : 0.0933828}
{'[6, 5, 2, 0, 0, 5, 1, 0, 25, 3, 18, 0, 0, 1, 1, 1, 0, 0]' : 0.0922959}
{'[6, 5, 2, 0, 0, 5, 1, 0, 25, 3, 18, 0, 0, 1, 1, 1, 0, 0]' : 0.0923669}
{'[6, 5, 2, 0, 0, 5, 1, 0, 25, 3, 18, 0, 0, 1, 1, 1, 0, 0]' : 0.0923371}
{'[6, 5, 2, 0, 0, 5, 1, 0, 25, 3, 18, 0, 0, 1, 1, 1, 0, 0]' : 0.0923829}
{'[6, 5, 2, 0, 0, 5, 1, 0, 25, 3, 18, 0, 0, 1, 1, 1, 0, 0]' : 0.092376}
{'[6, 5, 2, 0, 0, 5, 1, 0, 25, 3, 18, 0, 0, 1, 1, 1, 0, 0]' : 0.0923219}
{'[6, 5, 2, 0, 0, 5, 1, 0, 25, 3, 18, 0, 0, 1, 1, 1, 0, 0]' : 0.092392}
{'[6, 5, 2, 0, 0, 5, 1, 0, 25, 3, 18, 0, 0, 1, 1, 1, 0, 0]' : 0.09236}
{'[6, 5, 2, 0, 0, 5, 1, 0, 25, 3, 18, 0, 0, 1, 1, 1, 0, 0]' : 0.0923131}
{'[6, 5, 2, 0, 0, 5, 1, 0, 25, 3, 18, 0, 0, 1, 1, 1, 0, 0]' : 0.092355}
{'[6, 5, 2, 0, 0, 5, 1, 0, 25, 3, 18, 0, 0, 1, 1, 1, 0, 0]' : 0.0923979}
{'[6, 5, 2, 0, 0, 5, 1, 0, 25, 3, 18, 0, 0, 1, 1, 1, 0, 0]' : 0.0925531}
{'[6, 5, 2, 0, 0, 5, 1, 0, 25, 3, 18, 0, 0, 1, 1, 1, 0, 0]' : 0.0923121}
{'[6, 5, 2, 0, 0, 5, 1, 0, 25, 3, 18, 0, 0, 1, 1, 1, 0, 0]' : 0.0923719}
{'[6, 5, 2, 0, 0, 5, 1, 0, 25, 3, 18, 0, 0, 1, 1, 1, 0, 0]' : 0.0923409}
{'[6, 5, 2, 0, 0, 5, 1, 0, 25, 3, 18, 0, 0, 1, 1, 1, 0, 0]' : 0.0923731}
{'[6, 5, 2, 0, 0, 5, 1, 0, 25, 3, 18, 0, 0, 1, 1, 1, 0, 0]' : 0.09236}
{'[6, 5, 2, 0, 0, 5, 1, 0, 25, 3, 18, 0, 0, 1, 1, 1, 0, 0]' : 0.092365}
{'[6, 5, 2, 0, 0, 5, 1, 0, 25, 3, 18, 0, 0, 1, 1, 1, 0, 0]' : 0.0923679}
{'[6, 5, 2, 0, 0, 5, 1, 0, 25, 3, 18, 0, 0, 1, 1, 1, 0, 0]' : 0.0923531}
{'[6, 5, 2, 0, 0, 5, 1, 0, 25, 3, 18, 0, 0, 1, 1, 1, 0, 0]' : 0.092298}
{'[6, 5, 2, 0, 0, 5, 1, 0, 25, 3, 18, 0, 0, 1, 1, 1, 0, 0]' : 0.0933719}
{'[6, 5, 2, 0, 0, 5, 1, 0, 25, 3, 18, 0, 0, 1, 1, 1, 0, 0]' : 0.0923152}
{'[6, 5, 2, 0, 0, 5, 1, 0, 25, 3, 18, 0, 0, 1, 1, 1, 0, 0]' : 0.092628}
{'[6, 5, 2, 0, 0, 5, 1, 0, 25, 3, 18, 0, 0, 1, 1, 1, 0, 0]' : 0.092351}
{'[6, 5, 2, 0, 0, 5, 1, 0, 25, 3, 18, 0, 0, 1, 1, 1, 0, 0]' : 0.092345}
{'[6, 5, 2, 0, 0, 5, 1, 0, 25, 3, 18, 0, 0, 1, 1, 1, 0, 0]' : 0.0923581}
{'[6, 5, 2, 0, 0, 5, 1, 0, 25, 3, 18, 0, 0, 1, 1, 1, 0, 0]' : 0.092381}

out:
 ["{'[6, 5, 2, 0, 0, 5, 1, 0, 25, 3, 18, 0, 0, 1, 1, 1, 0, 0]' : 0.0925832}", "{'[6, 5, 2, 0, 0, 5, 1, 0, 25, 3, 18, 0, 0, 1, 1, 1, 0, 0]' : 0.0933828}", "{'[6, 5, 2, 0, 0, 5, 1, 0, 25, 3, 18, 0, 0, 1, 1, 1, 0, 0]' : 0.0922959}", "{'[6, 5, 2, 0, 0, 5, 1, 0, 25, 3, 18, 0, 0, 1, 1, 1, 0, 0]' : 0.0923669}", "{'[6, 5, 2, 0, 0, 5, 1, 0, 25, 3, 18, 0, 0, 1, 1, 1, 0, 0]' : 0.0923371}", "{'[6, 5, 2, 0, 0, 5, 1, 0, 25, 3, 18, 0, 0, 1, 1, 1, 0, 0]' : 0.0923829}", "{'[6, 5, 2, 0, 0, 5, 1, 0, 25, 3, 18, 0, 0, 1, 1, 1, 0, 0]' : 0.092376}", "{'[6, 5, 2, 0, 0, 5, 1, 0, 25, 3, 18, 0, 0, 1, 1, 1, 0, 0]' : 0.0923219}", "{'[6, 5, 2, 0, 0, 5, 1, 0, 25, 3, 18, 0, 0, 1, 1, 1, 0, 0]' : 0.092392}", "{'[6, 5, 2, 0, 0, 5, 1, 0, 25, 3, 18, 0, 0, 1, 1, 1, 0, 0]' : 0.09236}", "{'[6, 5, 2, 0, 0, 5, 1, 0, 25, 3, 18, 0, 0, 1, 1, 1, 0, 0]' : 0.0923131}", "{'[6, 5, 2, 0, 0, 5, 1, 0, 25, 3, 18, 0, 0, 1, 1, 1, 0, 0]' : 0.092355}", "{'[6, 5, 2, 0, 0, 5, 1, 0, 25, 3, 18, 0, 0, 1, 1, 1, 0, 0]' : 0.0923979}", "{'[6, 5, 2, 0, 0, 5, 1, 0, 25, 3, 18, 0, 0, 1, 1, 1, 0, 0]' : 0.0925531}", "{'[6, 5, 2, 0, 0, 5, 1, 0, 25, 3, 18, 0, 0, 1, 1, 1, 0, 0]' : 0.0923121}", "{'[6, 5, 2, 0, 0, 5, 1, 0, 25, 3, 18, 0, 0, 1, 1, 1, 0, 0]' : 0.0923719}", "{'[6, 5, 2, 0, 0, 5, 1, 0, 25, 3, 18, 0, 0, 1, 1, 1, 0, 0]' : 0.0923409}", "{'[6, 5, 2, 0, 0, 5, 1, 0, 25, 3, 18, 0, 0, 1, 1, 1, 0, 0]' : 0.0923731}", "{'[6, 5, 2, 0, 0, 5, 1, 0, 25, 3, 18, 0, 0, 1, 1, 1, 0, 0]' : 0.09236}", "{'[6, 5, 2, 0, 0, 5, 1, 0, 25, 3, 18, 0, 0, 1, 1, 1, 0, 0]' : 0.092365}", "{'[6, 5, 2, 0, 0, 5, 1, 0, 25, 3, 18, 0, 0, 1, 1, 1, 0, 0]' : 0.0923679}", "{'[6, 5, 2, 0, 0, 5, 1, 0, 25, 3, 18, 0, 0, 1, 1, 1, 0, 0]' : 0.0923531}", "{'[6, 5, 2, 0, 0, 5, 1, 0, 25, 3, 18, 0, 0, 1, 1, 1, 0, 0]' : 0.092298}", "{'[6, 5, 2, 0, 0, 5, 1, 0, 25, 3, 18, 0, 0, 1, 1, 1, 0, 0]' : 0.0933719}", "{'[6, 5, 2, 0, 0, 5, 1, 0, 25, 3, 18, 0, 0, 1, 1, 1, 0, 0]' : 0.0923152}", "{'[6, 5, 2, 0, 0, 5, 1, 0, 25, 3, 18, 0, 0, 1, 1, 1, 0, 0]' : 0.092628}", "{'[6, 5, 2, 0, 0, 5, 1, 0, 25, 3, 18, 0, 0, 1, 1, 1, 0, 0]' : 0.092351}", "{'[6, 5, 2, 0, 0, 5, 1, 0, 25, 3, 18, 0, 0, 1, 1, 1, 0, 0]' : 0.092345}", "{'[6, 5, 2, 0, 0, 5, 1, 0, 25, 3, 18, 0, 0, 1, 1, 1, 0, 0]' : 0.0923581}", "{'[6, 5, 2, 0, 0, 5, 1, 0, 25, 3, 18, 0, 0, 1, 1, 1, 0, 0]' : 0.092381}"]
returning from 'run': {'[6, 5, 2, 0, 0, 5, 1, 0, 25, 3, 18, 0, 0, 1, 1, 1, 0, 0]': ([0.0925832, 0.0933828, 0.0922959, 0.0923669, 0.0923371, 0.0923829, 0.092376, 0.0923219, 0.092392, 0.09236, 0.0923131, 0.092355, 0.0923979, 0.0925531, 0.0923121, 0.0923719, 0.0923409, 0.0923731, 0.09236, 0.092365, 0.0923679, 0.0923531, 0.092298, 0.0933719, 0.0923152, 0.092628, 0.092351, 0.092345, 0.0923581, 0.092381], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.0925832, 0.0933828, 0.0922959, 0.0923669, 0.0923371, 0.0923829, 0.092376, 0.0923219, 0.092392, 0.09236, 0.0923131, 0.092355, 0.0923979, 0.0925531, 0.0923121, 0.0923719, 0.0923409, 0.0923731, 0.09236, 0.092365, 0.0923679, 0.0923531, 0.092298, 0.0933719, 0.0923152, 0.092628, 0.092351, 0.092345, 0.0923581, 0.092381], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[6, 5, 2, 0, 0, 5, 1, 0, 25, 3, 18, 0, 0, 1, 1, 1, 0, 0]': ([0.0925832, 0.0933828, 0.0922959, 0.0923669, 0.0923371, 0.0923829, 0.092376, 0.0923219, 0.092392, 0.09236, 0.0923131, 0.092355, 0.0923979, 0.0925531, 0.0923121, 0.0923719, 0.0923409, 0.0923731, 0.09236, 0.092365, 0.0923679, 0.0923531, 0.092298, 0.0933719, 0.0923152, 0.092628, 0.092351, 0.092345, 0.0923581, 0.092381], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [0, 0, 1, 5, 2, 4, 1, 1, 28, 0, 26, 0, 0, 2, 1, 1]
Fixed Factors: {'U1_I': 25, 'SCR': 1}
Testing candidate 23: [0, 0, 1, 5, 2, 4, 1, 1, 25, 28, 0, 26, 0, 0, 2, 1, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	105
        Max loop nest depth: 	5
        Additions: 		4582
        Multiplications: 	1980
        Divisions: 		0
        Logical: 		0
        Reads: 			8903
        Writes: 		1543
        Comparisons:		105
        Gotos: 			0
        
digraph CFG {
	ForLoop12544032 [label="ForLoop12544032  for (kt=kk; kt<=cbv_4; kt=kt+32) {...",shape=box];
	ForLoop12544032 -> 12675082;
	ForLoop12544032 -> _JOIN_12544032;
	12593365 [label="12593365  double scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8, scv_9;...",shape=box];
	_JOIN_12505939 [label="_JOIN_12505939None...",shape=box];
	_JOIN_12505939 -> _JOIN_12505941;
	_JOIN_12316514 [label="_JOIN_12316514None...",shape=box];
	_JOIN_12316514 -> 12503795;
	ForLoop12544070 [label="ForLoop12544070  for (iii=0; iii<=nx-1; iii=iii+1024) {...",shape=box];
	ForLoop12544070 -> 12503810;
	ForLoop12544070 -> _JOIN_12544070;
	_JOIN_12541791 [label="_JOIN_12541791None...",shape=box];
	_JOIN_12541791 -> 12541822;
	12316218 [label="12316218  y[i]=0.0;...",shape=box];
	ForLoop12316514 [label="ForLoop12316514  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop12316514 -> 12316513;
	ForLoop12316514 -> _JOIN_12316514;
	12544063 [label="12544063  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	12544063 -> _JOIN_12544065;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 12315786;
	_JOIN_12542835 [label="_JOIN_12542835None...",shape=box];
	_JOIN_12542835 -> _JOIN_12542837;
	_JOIN_12542837 [label="_JOIN_12542837None...",shape=box];
	_JOIN_12542837 -> ForLoop12544066;
	12503810 [label="12503810  int i;...",shape=box];
	12503810 -> ForLoop12542696;
	ForLoop12542837 [label="ForLoop12542837  for (jjj=0; jjj<=ny-1; jjj=jjj+128) {...",shape=box];
	ForLoop12542837 -> 12542793;
	ForLoop12542837 -> _JOIN_12542837;
	ForLoop12541791 [label="ForLoop12541791  for (kt=kk; kt<=cbv_2; kt=kt+32) {...",shape=box];
	ForLoop12541791 -> 12593365;
	ForLoop12541791 -> _JOIN_12541791;
	_JOIN_12544032 [label="_JOIN_12544032None...",shape=box];
	_JOIN_12544032 -> 12544063;
	12315786 [label="12315786  int i;...",shape=box];
	12675082 [label="12675082  double scv_63, scv_64, scv_65, scv_66, scv_67, scv_68, scv_69, scv_70;...",shape=box];
	12503795 [label="12503795  double x_copy[128];...",shape=box];
	12316789 [label="12316789  register int cbv_2, cbv_3;...",shape=box];
	ForLoop12544065 [label="ForLoop12544065  for (kk=kkk; kk<=min(ny-1,kkk+496); kk=kk+16) {...",shape=box];
	ForLoop12544065 -> 12542899;
	ForLoop12544065 -> _JOIN_12544065;
	ForLoop12544066 [label="ForLoop12544066  for (kkk=0; kkk<=ny-1; kkk=kkk+512) {...",shape=box];
	ForLoop12544066 -> ForLoop12544065;
	ForLoop12544066 -> _JOIN_12544066;
	_JOIN_12542694 [label="_JOIN_12542694None...",shape=box];
	_JOIN_12542694 -> 12671677;
	_JOIN_12542696 [label="_JOIN_12542696None...",shape=box];
	_JOIN_12542696 -> ForLoop12544068;
	ForLoop12544068 [label="ForLoop12544068  for (i=(min(nx-1,iii+1023))-(((min(nx-1,iii+1023))-(iii)+1)%29)+1; i<=min(nx-1,iii+1023); i=i+1) {...",shape=box];
	ForLoop12544068 -> 12680519;
	ForLoop12544068 -> _JOIN_12544068;
	ForLoop12505941 [label="ForLoop12505941  for (jjj=0; jjj<=ny-1; jjj=jjj+128) {...",shape=box];
	ForLoop12505941 -> 12504132;
	ForLoop12505941 -> _JOIN_12505941;
	12671659 [label="12671659  double scv_34, scv_35, scv_36, scv_37, scv_38, scv_39, scv_40, scv_41;...",shape=box];
	_JOIN_12505941 [label="_JOIN_12505941None...",shape=box];
	_JOIN_12505941 -> ForLoop12542694;
	_JOIN_12316445 [label="_JOIN_12316445None...",shape=box];
	_JOIN_12316445 -> 12316789;
	_JOIN_12544070 [label="_JOIN_12544070None...",shape=box];
	12680519 [label="12680519  double scv_95;...",shape=box];
	12680531 [label="12680531  tmp[i]=scv_95;...",shape=box];
	12680531 -> _JOIN_12544068;
	12671677 [label="12671677  tmp[(i+20)]=scv_34;...",shape=box];
	12545467 [label="12545467  double scv_1;...",shape=box];
	_JOIN_12542692 [label="_JOIN_12542692None...",shape=box];
	_JOIN_12542692 -> _JOIN_12542694;
	12316513 [label="12316513  y[i]=0.0;...",shape=box];
	12316513 -> _JOIN_12316514;
	12504132 [label="12504132  for (j=jjj; j<=min(ny-1,jjj+127); j=j+1) ...",shape=box];
	ForLoop12542835 [label="ForLoop12542835  for (j=jjj; j<=cbv_3; j=j+1) {...",shape=box];
	ForLoop12542835 -> 12542834;
	ForLoop12542835 -> _JOIN_12542835;
	12541expected=0.000000
actual=9369846271501.798828
822 [label="12541822  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop12316445 [label="ForLoop12316445  for (i=0; i<=cbv_1; i=i+26) {...",shape=box];
	ForLoop12316445 -> 12316218;
	ForLoop12316445 -> _JOIN_12316445;
	12542899 [label="12542899  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	_JOIN_12544065 [label="_JOIN_12544065None...",shape=box];
	_JOIN_12544065 -> _JOIN_12544066;
	_JOIN_12544068 [label="_JOIN_12544068None...",shape=box];
	_JOIN_12544068 -> _JOIN_12544070;
	ForLoop12542694 [label="ForLoop12542694  for (kkk=0; kkk<=ny-1; kkk=kkk+512) {...",shape=box];
	ForLoop12542694 -> ForLoop12542692;
	ForLoop12542694 -> _JOIN_12542694;
	ForLoop12542696 [label="ForLoop12542696  for (i=iii; i<=min(nx-1,iii+1023)-28; i=i+29) {...",shape=box];
	ForLoop12542696 -> 12671659;
	ForLoop12542696 -> _JOIN_12542696;
	ForLoop12542692 [label="ForLoop12542692  for (kk=kkk; kk<=min(ny-1,kkk+496); kk=kk+16) {...",shape=box];
	ForLoop12542692 -> 12506003;
	ForLoop12542692 -> _JOIN_12542692;
	12506003 [label="12506003  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop12505939 [label="ForLoop12505939  for (j=jjj; j<=cbv_1; j=j+1) {...",shape=box];
	ForLoop12505939 -> 12545467;
	ForLoop12505939 -> _JOIN_12505939;
	12542834 [label="12542834  scv_95=scv_95+A[i*ny+j]*x_copy[(j-jjj)];...",shape=box];
	12542834 -> _JOIN_12542835;
	_JOIN_12544066 [label="_JOIN_12544066None...",shape=box];
	_JOIN_12544066 -> 12680531;
	12542793 [label="12542793  for (j=jjj; j<=min(ny-1,jjj+127); j=j+1) ...",shape=box];

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest60.exe __orio_perftest60.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest60.exe  
{'[0, 0, 1, 5, 2, 4, 1, 1, 25, 28, 0, 26, 0, 0, 2, 1, 1, 1]' : 0.161104}
{'[0, 0, 1, 5, 2, 4, 1, 1, 25, 28, 0, 26, 0, 0, 2, 1, 1, 1]' : 0.161108}
{'[0, 0, 1, 5, 2, 4, 1, 1, 25, 28, 0, 26, 0, 0, 2, 1, 1, 1]' : 0.1609}
{'[0, 0, 1, 5, 2, 4, 1, 1, 25, 28, 0, 26, 0, 0, 2, 1, 1, 1]' : 0.160757}
{'[0, 0, 1, 5, 2, 4, 1, 1, 25, 28, 0, 26, 0, 0, 2, 1, 1, 1]' : 0.160764}
{'[0, 0, 1, 5, 2, 4, 1, 1, 25, 28, 0, 26, 0, 0, 2, 1, 1, 1]' : 0.160918}
{'[0, 0, 1, 5, 2, 4, 1, 1, 25, 28, 0, 26, 0, 0, 2, 1, 1, 1]' : 0.160933}
{'[0, 0, 1, 5, 2, 4, 1, 1, 25, 28, 0, 26, 0, 0, 2, 1, 1, 1]' : 0.1608}
{'[0, 0, 1, 5, 2, 4, 1, 1, 25, 28, 0, 26, 0, 0, 2, 1, 1, 1]' : 0.160757}
{'[0, 0, 1, 5, 2, 4, 1, 1, 25, 28, 0, 26, 0, 0, 2, 1, 1, 1]' : 0.160838}
{'[0, 0, 1, 5, 2, 4, 1, 1, 25, 28, 0, 26, 0, 0, 2, 1, 1, 1]' : 0.161048}
{'[0, 0, 1, 5, 2, 4, 1, 1, 25, 28, 0, 26, 0, 0, 2, 1, 1, 1]' : 0.160827}
{'[0, 0, 1, 5, 2, 4, 1, 1, 25, 28, 0, 26, 0, 0, 2, 1, 1, 1]' : 0.160768}
{'[0, 0, 1, 5, 2, 4, 1, 1, 25, 28, 0, 26, 0, 0, 2, 1, 1, 1]' : 0.160991}
{'[0, 0, 1, 5, 2, 4, 1, 1, 25, 28, 0, 26, 0, 0, 2, 1, 1, 1]' : 0.160709}
{'[0, 0, 1, 5, 2, 4, 1, 1, 25, 28, 0, 26, 0, 0, 2, 1, 1, 1]' : 0.160853}
{'[0, 0, 1, 5, 2, 4, 1, 1, 25, 28, 0, 26, 0, 0, 2, 1, 1, 1]' : 0.16079}
{'[0, 0, 1, 5, 2, 4, 1, 1, 25, 28, 0, 26, 0, 0, 2, 1, 1, 1]' : 0.160807}
{'[0, 0, 1, 5, 2, 4, 1, 1, 25, 28, 0, 26, 0, 0, 2, 1, 1, 1]' : 0.160862}
{'[0, 0, 1, 5, 2, 4, 1, 1, 25, 28, 0, 26, 0, 0, 2, 1, 1, 1]' : 0.161008}
{'[0, 0, 1, 5, 2, 4, 1, 1, 25, 28, 0, 26, 0, 0, 2, 1, 1, 1]' : 0.16076}
{'[0, 0, 1, 5, 2, 4, 1, 1, 25, 28, 0, 26, 0, 0, 2, 1, 1, 1]' : 0.160797}
{'[0, 0, 1, 5, 2, 4, 1, 1, 25, 28, 0, 26, 0, 0, 2, 1, 1, 1]' : 0.160907}
{'[0, 0, 1, 5, 2, 4, 1, 1, 25, 28, 0, 26, 0, 0, 2, 1, 1, 1]' : 0.16086}
{'[0, 0, 1, 5, 2, 4, 1, 1, 25, 28, 0, 26, 0, 0, 2, 1, 1, 1]' : 0.160767}
{'[0, 0, 1, 5, 2, 4, 1, 1, 25, 28, 0, 26, 0, 0, 2, 1, 1, 1]' : 0.16084}
{'[0, 0, 1, 5, 2, 4, 1, 1, 25, 28, 0, 26, 0, 0, 2, 1, 1, 1]' : 0.160653}
{'[0, 0, 1, 5, 2, 4, 1, 1, 25, 28, 0, 26, 0, 0, 2, 1, 1, 1]' : 0.160776}
{'[0, 0, 1, 5, 2, 4, 1, 1, 25, 28, 0, 26, 0, 0, 2, 1, 1, 1]' : 0.160774}
{'[0, 0, 1, 5, 2, 4, 1, 1, 25, 28, 0, 26, 0, 0, 2, 1, 1, 1]' : 0.160807}

out:
 ["{'[0, 0, 1, 5, 2, 4, 1, 1, 25, 28, 0, 26, 0, 0, 2, 1, 1, 1]' : 0.161104}", "{'[0, 0, 1, 5, 2, 4, 1, 1, 25, 28, 0, 26, 0, 0, 2, 1, 1, 1]' : 0.161108}", "{'[0, 0, 1, 5, 2, 4, 1, 1, 25, 28, 0, 26, 0, 0, 2, 1, 1, 1]' : 0.1609}", "{'[0, 0, 1, 5, 2, 4, 1, 1, 25, 28, 0, 26, 0, 0, 2, 1, 1, 1]' : 0.160757}", "{'[0, 0, 1, 5, 2, 4, 1, 1, 25, 28, 0, 26, 0, 0, 2, 1, 1, 1]' : 0.160764}", "{'[0, 0, 1, 5, 2, 4, 1, 1, 25, 28, 0, 26, 0, 0, 2, 1, 1, 1]' : 0.160918}", "{'[0, 0, 1, 5, 2, 4, 1, 1, 25, 28, 0, 26, 0, 0, 2, 1, 1, 1]' : 0.160933}", "{'[0, 0, 1, 5, 2, 4, 1, 1, 25, 28, 0, 26, 0, 0, 2, 1, 1, 1]' : 0.1608}", "{'[0, 0, 1, 5, 2, 4, 1, 1, 25, 28, 0, 26, 0, 0, 2, 1, 1, 1]' : 0.160757}", "{'[0, 0, 1, 5, 2, 4, 1, 1, 25, 28, 0, 26, 0, 0, 2, 1, 1, 1]' : 0.160838}", "{'[0, 0, 1, 5, 2, 4, 1, 1, 25, 28, 0, 26, 0, 0, 2, 1, 1, 1]' : 0.161048}", "{'[0, 0, 1, 5, 2, 4, 1, 1, 25, 28, 0, 26, 0, 0, 2, 1, 1, 1]' : 0.160827}", "{'[0, 0, 1, 5, 2, 4, 1, 1, 25, 28, 0, 26, 0, 0, 2, 1, 1, 1]' : 0.160768}", "{'[0, 0, 1, 5, 2, 4, 1, 1, 25, 28, 0, 26, 0, 0, 2, 1, 1, 1]' : 0.160991}", "{'[0, 0, 1, 5, 2, 4, 1, 1, 25, 28, 0, 26, 0, 0, 2, 1, 1, 1]' : 0.160709}", "{'[0, 0, 1, 5, 2, 4, 1, 1, 25, 28, 0, 26, 0, 0, 2, 1, 1, 1]' : 0.160853}", "{'[0, 0, 1, 5, 2, 4, 1, 1, 25, 28, 0, 26, 0, 0, 2, 1, 1, 1]' : 0.16079}", "{'[0, 0, 1, 5, 2, 4, 1, 1, 25, 28, 0, 26, 0, 0, 2, 1, 1, 1]' : 0.160807}", "{'[0, 0, 1, 5, 2, 4, 1, 1, 25, 28, 0, 26, 0, 0, 2, 1, 1, 1]' : 0.160862}", "{'[0, 0, 1, 5, 2, 4, 1, 1, 25, 28, 0, 26, 0, 0, 2, 1, 1, 1]' : 0.161008}", "{'[0, 0, 1, 5, 2, 4, 1, 1, 25, 28, 0, 26, 0, 0, 2, 1, 1, 1]' : 0.16076}", "{'[0, 0, 1, 5, 2, 4, 1, 1, 25, 28, 0, 26, 0, 0, 2, 1, 1, 1]' : 0.160797}", "{'[0, 0, 1, 5, 2, 4, 1, 1, 25, 28, 0, 26, 0, 0, 2, 1, 1, 1]' : 0.160907}", "{'[0, 0, 1, 5, 2, 4, 1, 1, 25, 28, 0, 26, 0, 0, 2, 1, 1, 1]' : 0.16086}", "{'[0, 0, 1, 5, 2, 4, 1, 1, 25, 28, 0, 26, 0, 0, 2, 1, 1, 1]' : 0.160767}", "{'[0, 0, 1, 5, 2, 4, 1, 1, 25, 28, 0, 26, 0, 0, 2, 1, 1, 1]' : 0.16084}", "{'[0, 0, 1, 5, 2, 4, 1, 1, 25, 28, 0, 26, 0, 0, 2, 1, 1, 1]' : 0.160653}", "{'[0, 0, 1, 5, 2, 4, 1, 1, 25, 28, 0, 26, 0, 0, 2, 1, 1, 1]' : 0.160776}", "{'[0, 0, 1, 5, 2, 4, 1, 1, 25, 28, 0, 26, 0, 0, 2, 1, 1, 1]' : 0.160774}", "{'[0, 0, 1, 5, 2, 4, 1, 1, 25, 28, 0, 26, 0, 0, 2, 1, 1, 1]' : 0.160807}"]
returning from 'run': {'[0, 0, 1, 5, 2, 4, 1, 1, 25, 28, 0, 26, 0, 0, 2, 1, 1, 1]': ([0.161104, 0.161108, 0.1609, 0.160757, 0.160764, 0.160918, 0.160933, 0.1608, 0.160757, 0.160838, 0.161048, 0.160827, 0.160768, 0.160991, 0.160709, 0.160853, 0.16079, 0.160807, 0.160862, 0.161008, 0.16076, 0.160797, 0.160907, 0.16086, 0.160767, 0.16084, 0.160653, 0.160776, 0.160774, 0.160807], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.161104, 0.161108, 0.1609, 0.160757, 0.160764, 0.160918, 0.160933, 0.1608, 0.160757, 0.160838, 0.161048, 0.160827, 0.160768, 0.160991, 0.160709, 0.160853, 0.16079, 0.160807, 0.160862, 0.161008, 0.16076, 0.160797, 0.160907, 0.16086, 0.160767, 0.16084, 0.160653, 0.160776, 0.160774, 0.160807], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 1, 5, 2, 4, 1, 1, 25, 28, 0, 26, 0, 0, 2, 1, 1, 1]': ([0.161104, 0.161108, 0.1609, 0.160757, 0.160764, 0.160918, 0.160933, 0.1608, 0.160757, 0.160838, 0.161048, 0.160827, 0.160768, 0.160991, 0.160709, 0.160853, 0.16079, 0.160807, 0.160862, 0.161008, 0.16076, 0.160797, 0.160907, 0.16086, 0.160767, 0.16084, 0.160653, 0.160776, 0.160774, 0.160807], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [6, 2, 3, 5, 6, 6, 0, 0, 8, 0, 3, 0, 1, 1, 0, 1]
Fixed Factors: {'U1_I': 25, 'SCR': 1}
Testing candidate 24: [6, 2, 3, 5, 6, 6, 0, 0, 25, 8, 0, 3, 0, 1, 1, 1, 0, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	40
        Max loop nest depth: 	6
        Additions: 		1159
        Multiplications: 	440
        Divisions: 		0
        Logical: 		0
        Reads: 			2480
        Writes: 		534
        Comparisons:		40
        Gotos: 			0
        
digraph CFG {
	_JOIN_12797168 [label="_JOIN_12797168None...",shape=box];
	_JOIN_12797168 -> _JOIN_12797170;
	12850999 [label="12850999  register int cbv_26, cbv_27;...",shape=box];
	12797448 [label="12797448  int k;...",shape=box];
	12810610 [label="12810610  double scv_28, scv_29, scv_30, scv_31;...",shape=box];
	12810994 [label="12810994  double scv_33, scv_34, scv_35, scv_36;...",shape=box];
	12849217 [label="12849217  register int cbv_8, cbv_9;...",shape=box];
	ForLoop12795684 [label="ForLoop12795684  for (k=cbv_14; k<=cbv_15; k=k+1) {...",shape=box];
	ForLoop12795684 -> 12811152;
	ForLoop12795684 -> _JOIN_12795684;
	12795912 [label="12795912  int k;...",shape=box];
	12847175 [label="12847175  register int cbv_2;...",shape=box];
	ForLoop12795458 [label="ForLoop12795458  for (k=cbv_11; k<=cbv_12; k=k+1) {...",shape=box];
	ForLoop12795458 -> 12810768;
	ForLoop12795458 -> _JOIN_12795458;
	12852131 [label="12852131  register int cbv_35, cbv_36;...",shape=box];
	12848671 [label="12848671  register int cbv_3;...",shape=box];
	12832628 [label="12832628  tmp[i]=scv_85;...",shape=box];
	12832628 -> _JOIN_12797648;
	12850405 [label="12850405  register int cbv_20, cbv_21;...",shape=box];
	ForLoop12796288 [label="ForLoop12796288  for (k=kt; k<=cbv_22; k=k+4) {...",shape=box];
	ForLoop12796288 -> 12812146;
	ForLoop12796288 -> _JOIN_12796288;
	12809851 [label="12809851  double scv_18, scv_19, scv_20, scv_21;...",shape=box];
	ForLoop12796136 [label="ForLoop12796136  for (k=cbv_20; k<=cbv_21; k=k+1) {...",shape=box];
	ForLoop12796136 -> 12811920;
	ForLoop12796136 -> _JOIN_12796136;
	12794812 [label="12794812  int k;...",shape=box];
	12796138 [label="12796138  int k;...",shape=box];
	12795234 [label="12795234  int k;...",shape=box];
	_JOIN_12795384 [label="_JOIN_12795384None...",shape=box];
	_JOIN_12795384 -> 12849514;
	12812530 [label="12812530  double scv_53, scv_54, scv_55, scv_56;...",shape=box];
	ForLoop12795232 [label="ForLoop12795232  for (k=cbv_8; k<=cbv_9; k=k+1) {...",shape=box];
	ForLoop12795232 -> 12810384;
	ForLoop12795232 -> _JOIN_12795232;
	_JOIN_12796821 [label="_JOIN_12796821None...",shape=box];
	_JOIN_12796821 -> ForLoop12797648;
	ForLoop12796514 [label="ForLoop12796514  for (k=kt; k<=cbv_25; k=k+4) {...",shape=box];
	ForLoop12796514 -> 12812530;
	ForLoop12796514 -> _JOIN_12796514;
	_JOIN_12796062 [label="_JOIN_12796062None...",shape=box];
	_JOIN_12796062 -> 12850405;
	12725063 [label="12725063  y[i]=0.0;...",shape=box];
	12848920 [label="12848920  register int cbv_5, cbv_6;...",shape=box];
	12850702 [label="12850702  register int cbv_23, cbv_24;...",shape=box];
	_JOIN_12797447 [label="_JOIN_12797447None...",shape=box];
	_JOIN_12797447 -> 12797448;
	ForLoop12795910 [label="ForLoop12795910  for (k=cbv_17; k<=cbv_18; k=k+1) {...",shape=box];
	ForLoop12795910 -> 12811536;
	ForLoop12795910 -> _JOIN_12795910;
	12830532 [label="12830532  double scv_84;...",shape=box];
	_JOIN_12794811 [label="_JOIN_12794811None...",shape=box];
	_JOIN_12794811 -> 12794812;
	ForLoop12796062 [label="ForLoop12796062  for (k=kt; k<=cbv_19; k=k+4) {...",shape=box];
	ForLoop12796062 -> 12811762;
	ForLoop12796062 -> _JOIN_12796062;
	12851532 [label="12851532  register int cbv_31;...",shape=box];
	ForLoop12797168 [label="ForLoop12797168  for (j=jt; j<=cbv_32; j=j+1) {...",shape=box];
	ForLoop12797168 -> 12797167;
	ForLoop12797168 -> _JOIN_12797168;
	12725358 [label="12725358  y[i]=0.0;...",shape=box];
	12725358 -> _JOIN_12725359;
	12795008 [label="12795008  int k;...",shape=box];
	_JOIN_12796740 [label="_JOIN_12796740None...",shape=box];
	_JOIN_12796740 -> 12851296;
	12796590 [label="12796590  int k;...",shape=box];
	_JOIN_12796817 [label="_JOIN_12796817None...",shape=box];
	_JOIN_12796817 -> _JOIN_12796819;
	_JOIN_12795006 [label="_JOIN_12795006None...",shape=box];
	_JOIN_12795006 -> 12795008;
	_JOIN_12796819 [label="_JOIN_12796819None...",shape=box];
	_JOIN_12796819 -> 12828301;
	_JOIN_12796588 [label="_JOIN_12796588None...",shape=box];
	_JOIN_12796588 -> 12796590;
	_JOIN_12795232 [label="_JOIN_12795232None...",shape=box];
	_JOIN_12795232 -> 12795234;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 12724631;
	ForLoop12795384 [label="ForLoop12795384  for (k=kt; k<=cbv_10; k=k+4) {...",shape=box];
	ForLoop12795384 -> 12810610;
	ForLoop12795384 -> _JOIN_12795384;
	ForLoop12797170 [label="ForLoop12797170  for (jj=jjj; jj<=min(ny-1,jjj+2016); jj=jj+32) {...",shape=box];
	ForLoop12797170 -> 12851532;
	ForLoop12797170 -> _JOIN_12797170;
	ForLoop12797171 [label="ForLoop12797171  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop12797171 -> ForLoop12797170;
	ForLoop12797171 -> _JOIN_12797171;
	ForLoop12796362 [label="ForLoop12796362  for (k=cbv_23; k<=cbv_24; k=k+1) {...",shape=box];
	ForLoop12796362 -> 12812304;
	ForLoop12796362 -> _JOIN_12796362;
	ForLoop12797646 [label="ForLoop12797646  for (kkk=0; kkk<=ny-1; kkk=kkk+2048) {...",shape=box];
	ForLoop12797646 -> ForLoop12797645;
	ForLoop12797646 -> _JOIN_12797646;
	ForLoop12794811 [label="ForLoop12794811  for (kt=kk; kt<=cbv_3; kt=kt+8) {...",shape=box];
	ForLoop12794811 -> 12809387;
	ForLoop12794811 -> _JOIN_12794811;
	_JOIN_12795910 [label="_JOIN_12795910None...",shape=box];
	_JOIN_12795910 -> 12795912;
	_JOIN_12796514 [label="_JOIN_12796514None...",shape=box];
	_JOIN_12796514 -> 12850999;
	12811762 [label="12811762  double scv_43, scv_44, scv_45, scv_46;...",shape=box];
	_JOIN_12796288 [label="_JOIN_12796288None...",shape=box];
	_JOIN_12796288 -> 12850702;
	ForLoop12797645 [label="ForLoop12797645  for (kk=kkk; kk<=min(ny-1,kkk+1984); kk=kk+64) {...",shape=box];
	ForLoop12797645 -> 12851882;
	ForLoop12797645 -> _JOIN_12797645;
	12724631 [label="12724631  int i;...",shape=box];
	12724631 -> ForLoop12725290;
	12812146 [label="12812146  double scv_48, scv_49, scv_50, scv_51;...",shape=box];
	12796945 [label="12796945  scv_85=scv_85+A[i*ny+jt]*x[jt];...",shape=box];
	12801420 [label="12801420  double scv_9;...",shape=box];
	_JOIN_12795158 [label="_JOIN_12795158None...",shape=box];
	_JOIN_12795158 -> 12849217;
	12800916 [label="12800916  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	ForLoop12792154 [label="ForLoop12792154  for (jt=jj; jt<=cbv_1; jt=jt+8) {...",shape=box];
	ForLoop12792154 -> 12800916;
	ForLoop12792154 -> _JOIN_12792154;
	12832616 [label="12832616  double scv_85;...",shape=box];
	ForLoop12795158 [label="ForLoop12795158  for (k=kt; k<=cbv_7; k=k+4) {...",shape=box];
	ForLoop12795158 -> 12810226;
	ForLoop12795158 -> _JOIN_12795158;
	ForLoop12792428 [label="ForLoop12792428  for (jj=jjj; jj<=min(ny-1,jjj+2016); jj=jj+32) {...",shape=box];
	ForLoop12792428 -> 12846987;
	ForLoop12792428 -> _JOIN_12792428;
	ForLoop12796588 [label="ForLoop12796588  for (k=cbv_26; k<=cbv_27; k=k+1) {...",shape=box];
	ForLoop12796588 -> 12812688;
	ForLoop12796588 -> _JOIN_12796588;
	12789639 [label="12789639  double x_copy;...",shape=box];
	ForLoop12796740 [label="ForLoop12796740  for (k=kt; k<=cbv_28; k=k+4) {...",shape=box];
	ForLoop12796740 -> 12812914;
	ForLoop12796740 -> _JOIN_12796740;
	ForLoop12792426 [label="ForLoop12792426  for (j=jt; j<=cbv_2; j=j+1) {...",shape=box];
	ForLoop12792426 -> 12801420;
	ForLoop12792426 -> _JOIN_12792426;
	ForLoop12795836 [label="ForLoop12795836  for (k=kt; k<=cbv_16; k=k+4) {...",shape=box];
	ForLoop12795836 -> 12811378;
	ForLoop12795836 -> _JOIN_12795836;
	12812304 [label="12812304  double scv_52;...",shape=box];
	12796364 [label="12796364  int k;...",shape=box];
	ForLoop12725290 [label="ForLoop12725290  for (i=0; i<=ny-26; i=i+26) {...",shape=box];
	ForLoop12725290 -> 12725063;
	ForLoop12725290 -> _JOIN_12725290;
	12828283 [label="12828283  double scv_63, scv_64, scv_65, scv_66, scv_67, scv_68, scv_69, scv_70;...",shape=box];
	_JOIN_12796136 [label="_JOIN_12796136None...",shape=box];
	_JOIN_12796136 -> 12796138;
	12809387 [label="12809387  double scv_10, scv_11, scv_12, scv_13, scv_14, scv_15, scv_16, scv_17;...",shape=box];
	12811378 [label="12811378  double scv_38, scv_39, scv_40, scv_41;...",shape=box];
	_JOIN_12797648 [label="_JOIN_12797648None...",shape=box];
	_JOIN_12797648 -> _JOIN_12797650;
	12810768 [label="12810768  double scv_32;...",shape=box];
	ForLoop12797574 [label="ForLoop12797574  for (k=kt; k<=cbv_34; k=k+4) {...",shape=box];
	ForLoop12797574 -> 12830383;
	ForLoop12797574 -> _JOIN_12797574;
	_JOIN_12792430 [label="_JOIN_12792430None...",shape=box];
	_JOIN_12792430 -> ForLoop12796819;
	_JOIN_12797645 [label="_JOIN_12797645None...",shape=box];
	_JOIN_12797645 -> _JOIN_12797646;
	_JOIN_12797642 [label="_JOIN_12797642None...",shape=box];
	_JOIN_12797642 -> _JOIN_12797645;
	12789672 [label="12789672  int i;...",shape=box];
	12789672 -> ForLoop12796821;
	ForLoop12725359 [label="ForLoop12725359  for (i=ny-((ny-(0))%26); i<=ny-1; i=i+1) ...",shape=box];
	ForLoop12725359 -> 12725358;
	ForLoop12725359 -> _JOIN_12725359;
	12849811 [label="12849811  register int cbv_14, cbv_15;...",shape=box];
	12810000 [label="12810000  double scv_22;...",shape=box];
	ForLoop12795006 [label="ForLoop12795006  for (k=cbv_5; k<=cbv_6; k=k+1) {...",shape=box];
	ForLoop12795006 -> 12810000;
	ForLoop12795006 -> _JOIN_12795006;
	ForLoop12796814 [label="ForLoop12796814  for (k=cbv_29; k<=cbv_30; k=k+1) {...",shape=box];
	ForLoop12796814 -> 12813072;
	ForLoop12796814 -> _JOIN_12796814;
	ForLoop12796817 [label="ForLoop12796817  for (kk=kkk; kk<=min(ny-1,kkk+1984); kk=kk+64) {...",shape=box];
	ForLoop12796817 -> 12848671;
	ForLoop12796817 -> _JOIN_12796817;
	ForLoop12796819 [label="ForLoop12796819  for (kkk=0; kkk<=ny-1; kkk=kkk+2048) {...",shape=box];
	ForLoop12796819 -> ForLoop12796817;
	ForLoop12796819 -> _JOIN_12796819;
	ForLoop12792430 [label="ForLoop12792430  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop12792430 -> ForLoop12792428;
	ForLoop12792430 -> _JOIN_12792430;
	ForLoop12797447 [label="ForLoop12797447  for (kt=kk; kt<=cbv_33; kt=kt+8) {...",shape=box];
	ForLoop12797447 -> 12830047;
	ForLoop12797447 -> _JOIN_12797447;
	_JOIN_12796362 [label="_JOIN_12796362None...",shape=box];
	_JOIN_12796362 -> 12796364;
	12797167 [label="12797167  scv_85=scv_85+A[i*ny+j]*x[j];...",shape=box];
	12797167 -> _JOIN_12797168;
	_JOIN_12794938 [label="_JOIN_12794938None...",shape=box];
	_JOIN_12794938 -> 12848920;
	12795460 [label="12795460  int k;...",shape=box];
	_JOIN_12792428 [label="_JOIN_12792428None...",shape=box];
	_JOIN_12792428 -> _JOIN_12792430;
	_JOIN_12797651 [label="_JOIN_12797651None...",shape=box];
	_JOIN_12797650 [label="_JOIN_12797650None...",shape=box];
	_JOIN_12797650 -> _JOIN_12797651;
	_JOIN_12792426 [label="_JOIN_12792426None...",shape=box];
	_JOIN_12792426 -> _JOIN_12792428;
	_JOIN_12796814 [label="_JOIN_12796814None...",shape=box];
	_JOIN_12796814 -> _JOIN_12796817;
	ForLoop12796821 [label="ForLoop12796821  for (i=ii; i<=min(nx-1,ii+511)-8; i=i+9) {...",shape=box];
	ForLoop12796821 -> 12828283;
	ForLoop12796821 -> _JOIN_12796821;
	12850108 [label="12850108  register int cbv_17, cbv_18;...",shape=box];
	12830383 [label="12830383  double scv_80, scv_81, scv_82, scv_83;...",shape=box];
	12851296 [label="12851296  register int cbv_29, cbv_30;...",shape=box];
	12851579 [label="12851579  register int cbv_32;...",shape=box];
	ForLoop12797129 [label="ForLoop12797129  for (jt=jj; jt<=cbv_31; jt=jt+8) {...",shape=box];
	ForLoop12797129 -> 12796945;
	ForLoop12797129 -> _JOIN_12797129;
	ForLoop12797651 [label="ForLoop12797651  for (iii=0; iii<=nx-1; iii=iii+1024) {...",shape=box];
	ForLoop12797651 -> ForLoop12797650;
	ForLoop12797651 -> _JOIN_12797651;
	ForLoop12797650 [label="ForLoop12797650  for (ii=iii; ii<=min(nx-1,iii+512); ii=ii+512) {...",shape=box];
	ForLoop12797650 -> 12789672;
	ForLoop12797650 -> _JOIN_12797650;
	_JOIN_12795684 [label="_JOIN_12795684None...",shape=box];
	_JOIN_12795684 -> 12795686;
	12812688 [label="12812688  double scv_57;...",shape=box];
	12830047 [label="12830047  double scv_72, scv_73, scv_74, scv_75, scv_76, scv_77, scv_78, scv_79;...",shape=box];
	_JOIN_12725359 [label="_JOIN_12725359None...",shape=box];
	_JOIN_12725359 -> 12789639;
	_JOIN_12797646 [label="_JOIN_12797646None...",shape=box];
	_JOIN_12797646 -> 12832628;
	12810226 [label="12810226  double scv_23, scv_24, scv_25, scv_26;...",shape=box];
	12811152 [labelexpected=9369846271501.798828
actual=9369846271501.798828
="12811152  double scv_37;...",shape=box];
	12851882 [label="12851882  register int cbv_33;...",shape=box];
	12812914 [label="12812914  double scv_58, scv_59, scv_60, scv_61;...",shape=box];
	_JOIN_12725290 [label="_JOIN_12725290None...",shape=box];
	_JOIN_12725290 -> ForLoop12725359;
	12810384 [label="12810384  double scv_27;...",shape=box];
	_JOIN_12792154 [label="_JOIN_12792154None...",shape=box];
	_JOIN_12792154 -> 12847175;
	ForLoop12794938 [label="ForLoop12794938  for (k=kt; k<=cbv_4; k=k+4) {...",shape=box];
	ForLoop12794938 -> 12809851;
	ForLoop12794938 -> _JOIN_12794938;
	12813072 [label="12813072  double scv_62;...",shape=box];
	12849514 [label="12849514  register int cbv_11, cbv_12;...",shape=box];
	ForLoop12797648 [label="ForLoop12797648  for (i=(min(nx-1,ii+511))-(((min(nx-1,ii+511))-(ii)+1)%9)+1; i<=min(nx-1,ii+511); i=i+1) {...",shape=box];
	ForLoop12797648 -> 12832616;
	ForLoop12797648 -> _JOIN_12797648;
	_JOIN_12797574 [label="_JOIN_12797574None...",shape=box];
	_JOIN_12797574 -> 12852131;
	ForLoop12797642 [label="ForLoop12797642  for (k=cbv_35; k<=cbv_36; k=k+1) {...",shape=box];
	ForLoop12797642 -> 12830532;
	ForLoop12797642 -> _JOIN_12797642;
	_JOIN_12797170 [label="_JOIN_12797170None...",shape=box];
	_JOIN_12797170 -> _JOIN_12797171;
	_JOIN_12797171 [label="_JOIN_12797171None...",shape=box];
	_JOIN_12797171 -> ForLoop12797646;
	_JOIN_12795836 [label="_JOIN_12795836None...",shape=box];
	_JOIN_12795836 -> 12850108;
	_JOIN_12797129 [label="_JOIN_12797129None...",shape=box];
	_JOIN_12797129 -> 12851579;
	12811536 [label="12811536  double scv_42;...",shape=box];
	_JOIN_12795610 [label="_JOIN_12795610None...",shape=box];
	_JOIN_12795610 -> 12849811;
	12795686 [label="12795686  int k;...",shape=box];
	12846987 [label="12846987  register int cbv_1;...",shape=box];
	12828301 [label="12828301  tmp[(i+1)]=scv_63;...",shape=box];
	_JOIN_12795458 [label="_JOIN_12795458None...",shape=box];
	_JOIN_12795458 -> 12795460;
	12811920 [label="12811920  double scv_47;...",shape=box];
	ForLoop12795610 [label="ForLoop12795610  for (k=kt; k<=cbv_13; k=k+4) {...",shape=box];
	ForLoop12795610 -> 12810994;
	ForLoop12795610 -> _JOIN_12795610;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest61.exe __orio_perftest61.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest61.exe  
{'[6, 2, 3, 5, 6, 6, 0, 0, 25, 8, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.0783679}
{'[6, 2, 3, 5, 6, 6, 0, 0, 25, 8, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.0779409}
{'[6, 2, 3, 5, 6, 6, 0, 0, 25, 8, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.077924}
{'[6, 2, 3, 5, 6, 6, 0, 0, 25, 8, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.0779519}
{'[6, 2, 3, 5, 6, 6, 0, 0, 25, 8, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.078408}
{'[6, 2, 3, 5, 6, 6, 0, 0, 25, 8, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.077915}
{'[6, 2, 3, 5, 6, 6, 0, 0, 25, 8, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.0779009}
{'[6, 2, 3, 5, 6, 6, 0, 0, 25, 8, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.0779979}
{'[6, 2, 3, 5, 6, 6, 0, 0, 25, 8, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.0778971}
{'[6, 2, 3, 5, 6, 6, 0, 0, 25, 8, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.0779169}
{'[6, 2, 3, 5, 6, 6, 0, 0, 25, 8, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.0780301}
{'[6, 2, 3, 5, 6, 6, 0, 0, 25, 8, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.0778921}
{'[6, 2, 3, 5, 6, 6, 0, 0, 25, 8, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.077867}
{'[6, 2, 3, 5, 6, 6, 0, 0, 25, 8, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.0778229}
{'[6, 2, 3, 5, 6, 6, 0, 0, 25, 8, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.077836}
{'[6, 2, 3, 5, 6, 6, 0, 0, 25, 8, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.077868}
{'[6, 2, 3, 5, 6, 6, 0, 0, 25, 8, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.0779371}
{'[6, 2, 3, 5, 6, 6, 0, 0, 25, 8, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.0779269}
{'[6, 2, 3, 5, 6, 6, 0, 0, 25, 8, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.0778592}
{'[6, 2, 3, 5, 6, 6, 0, 0, 25, 8, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.0778661}
{'[6, 2, 3, 5, 6, 6, 0, 0, 25, 8, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.078876}
{'[6, 2, 3, 5, 6, 6, 0, 0, 25, 8, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.0778201}
{'[6, 2, 3, 5, 6, 6, 0, 0, 25, 8, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.0780382}
{'[6, 2, 3, 5, 6, 6, 0, 0, 25, 8, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.0783551}
{'[6, 2, 3, 5, 6, 6, 0, 0, 25, 8, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.0778511}
{'[6, 2, 3, 5, 6, 6, 0, 0, 25, 8, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.0778842}
{'[6, 2, 3, 5, 6, 6, 0, 0, 25, 8, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.077888}
{'[6, 2, 3, 5, 6, 6, 0, 0, 25, 8, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.0779281}
{'[6, 2, 3, 5, 6, 6, 0, 0, 25, 8, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.0779209}
{'[6, 2, 3, 5, 6, 6, 0, 0, 25, 8, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.0779202}

out:
 ["{'[6, 2, 3, 5, 6, 6, 0, 0, 25, 8, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.0783679}", "{'[6, 2, 3, 5, 6, 6, 0, 0, 25, 8, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.0779409}", "{'[6, 2, 3, 5, 6, 6, 0, 0, 25, 8, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.077924}", "{'[6, 2, 3, 5, 6, 6, 0, 0, 25, 8, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.0779519}", "{'[6, 2, 3, 5, 6, 6, 0, 0, 25, 8, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.078408}", "{'[6, 2, 3, 5, 6, 6, 0, 0, 25, 8, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.077915}", "{'[6, 2, 3, 5, 6, 6, 0, 0, 25, 8, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.0779009}", "{'[6, 2, 3, 5, 6, 6, 0, 0, 25, 8, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.0779979}", "{'[6, 2, 3, 5, 6, 6, 0, 0, 25, 8, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.0778971}", "{'[6, 2, 3, 5, 6, 6, 0, 0, 25, 8, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.0779169}", "{'[6, 2, 3, 5, 6, 6, 0, 0, 25, 8, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.0780301}", "{'[6, 2, 3, 5, 6, 6, 0, 0, 25, 8, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.0778921}", "{'[6, 2, 3, 5, 6, 6, 0, 0, 25, 8, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.077867}", "{'[6, 2, 3, 5, 6, 6, 0, 0, 25, 8, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.0778229}", "{'[6, 2, 3, 5, 6, 6, 0, 0, 25, 8, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.077836}", "{'[6, 2, 3, 5, 6, 6, 0, 0, 25, 8, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.077868}", "{'[6, 2, 3, 5, 6, 6, 0, 0, 25, 8, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.0779371}", "{'[6, 2, 3, 5, 6, 6, 0, 0, 25, 8, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.0779269}", "{'[6, 2, 3, 5, 6, 6, 0, 0, 25, 8, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.0778592}", "{'[6, 2, 3, 5, 6, 6, 0, 0, 25, 8, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.0778661}", "{'[6, 2, 3, 5, 6, 6, 0, 0, 25, 8, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.078876}", "{'[6, 2, 3, 5, 6, 6, 0, 0, 25, 8, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.0778201}", "{'[6, 2, 3, 5, 6, 6, 0, 0, 25, 8, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.0780382}", "{'[6, 2, 3, 5, 6, 6, 0, 0, 25, 8, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.0783551}", "{'[6, 2, 3, 5, 6, 6, 0, 0, 25, 8, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.0778511}", "{'[6, 2, 3, 5, 6, 6, 0, 0, 25, 8, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.0778842}", "{'[6, 2, 3, 5, 6, 6, 0, 0, 25, 8, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.077888}", "{'[6, 2, 3, 5, 6, 6, 0, 0, 25, 8, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.0779281}", "{'[6, 2, 3, 5, 6, 6, 0, 0, 25, 8, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.0779209}", "{'[6, 2, 3, 5, 6, 6, 0, 0, 25, 8, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.0779202}"]
returning from 'run': {'[6, 2, 3, 5, 6, 6, 0, 0, 25, 8, 0, 3, 0, 1, 1, 1, 0, 1]': ([0.0783679, 0.0779409, 0.077924, 0.0779519, 0.078408, 0.077915, 0.0779009, 0.0779979, 0.0778971, 0.0779169, 0.0780301, 0.0778921, 0.077867, 0.0778229, 0.077836, 0.077868, 0.0779371, 0.0779269, 0.0778592, 0.0778661, 0.078876, 0.0778201, 0.0780382, 0.0783551, 0.0778511, 0.0778842, 0.077888, 0.0779281, 0.0779209, 0.0779202], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.0783679, 0.0779409, 0.077924, 0.0779519, 0.078408, 0.077915, 0.0779009, 0.0779979, 0.0778971, 0.0779169, 0.0780301, 0.0778921, 0.077867, 0.0778229, 0.077836, 0.077868, 0.0779371, 0.0779269, 0.0778592, 0.0778661, 0.078876, 0.0778201, 0.0780382, 0.0783551, 0.0778511, 0.0778842, 0.077888, 0.0779281, 0.0779209, 0.0779202], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[6, 2, 3, 5, 6, 6, 0, 0, 25, 8, 0, 3, 0, 1, 1, 1, 0, 1]': ([0.0783679, 0.0779409, 0.077924, 0.0779519, 0.078408, 0.077915, 0.0779009, 0.0779979, 0.0778971, 0.0779169, 0.0780301, 0.0778921, 0.077867, 0.0778229, 0.077836, 0.077868, 0.0779371, 0.0779269, 0.0778592, 0.0778661, 0.078876, 0.0778201, 0.0780382, 0.0783551, 0.0778511, 0.0778842, 0.077888, 0.0779281, 0.0779209, 0.0779202], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [4, 6, 1, 3, 0, 5, 0, 1, 29, 4, 0, 0, 2, 0, 0, 1]
Fixed Factors: {'U1_I': 25, 'SCR': 1}
Testing candidate 25: [4, 6, 1, 3, 0, 5, 0, 1, 25, 29, 4, 0, 0, 2, 0, 1, 0, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	140
        Max loop nest depth: 	6
        Additions: 		5707
        Multiplications: 	2418
        Divisions: 		0
        Logical: 		0
        Reads: 			10664
        Writes: 		1804
        Comparisons:		140
        Gotos: 			0
        
digraph CFG {
	13272354 [label="13272354  double scv_34, scv_35, scv_36, scv_37, scv_38, scv_39, scv_40, scv_41;...",shape=box];
	ForLoop13129265 [label="ForLoop13129265  for (j=jt; j<=cbv_62; j=j+5) {...",shape=box];
	ForLoop13129265 -> 13129127;
	ForLoop13129265 -> _JOIN_13129265;
	13127265 [label="13127265  scv_36=scv_36+A[(i+13)*ny+j]*x[j];...",shape=box];
	ForLoop13124820 [label="ForLoop13124820  for (j=cbv_12; j<=cbv_13; j=j+1) {...",shape=box];
	ForLoop13124820 -> 13124819;
	ForLoop13124820 -> _JOIN_13124820;
	_JOIN_13128999 [label="_JOIN_13128999None...",shape=box];
	_JOIN_13128999 -> 13360972;
	13356552 [label="13356552  register int cbv_9, cbv_10;...",shape=box];
	_JOIN_13127403 [label="_JOIN_13127403None...",shape=box];
	_JOIN_13127403 -> 13359412;
	ForLoop13128467 [label="ForLoop13128467  for (j=jt; j<=cbv_53; j=j+5) {...",shape=box];
	ForLoop13128467 -> 13128329;
	ForLoop13128467 -> _JOIN_13128467;
	13125617 [label="13125617  scv_44=scv_44+A[(i+6)*ny+j]*x[j];...",shape=box];
	13125617 -> _JOIN_13125618;
	13279587 [label="13279587  tmp[i]=scv_65;...",shape=box];
	13279587 -> _JOIN_13135881;
	_JOIN_13128467 [label="_JOIN_13128467None...",shape=box];
	_JOIN_13128467 -> 13360452;
	13130723 [label="13130723  scv_47=scv_47+A[(i+26)*ny+j]*x[j];...",shape=box];
	13125883 [label="13125883  scv_43=scv_43+A[(i+7)*ny+j]*x[j];...",shape=box];
	13125883 -> _JOIN_13125884;
	ForLoop13125352 [label="ForLoop13125352  for (j=cbv_18; j<=cbv_19; j=j+1) {...",shape=box];
	ForLoop13125352 -> 13125351;
	ForLoop13125352 -> _JOIN_13125352;
	_JOIN_13124211 [label="_JOIN_13124211None...",shape=box];
	_JOIN_13124211 -> 13356292;
	13125088 [label="13125088  int j;...",shape=box];
	ForLoop13125009 [label="ForLoop13125009  for (j=jt; j<=cbv_14; j=j+5) {...",shape=box];
	ForLoop13125009 -> 13124871;
	ForLoop13125009 -> _JOIN_13125009;
	_JOIN_13126948 [label="_JOIN_13126948None...",shape=box];
	_JOIN_13126948 -> 13126950;
	ForLoop13127214 [label="ForLoop13127214  for (j=cbv_39; j<=cbv_40; j=j+1) {...",shape=box];
	ForLoop13127214 -> 13127213;
	ForLoop13127214 -> _JOIN_13127214;
	_JOIN_13126339 [label="_JOIN_13126339None...",shape=box];
	_JOIN_13126339 -> 13358372;
	13127531 [label="13127531  scv_49=scv_49+A[(i+14)*ny+j]*x[j];...",shape=box];
	13127745 [label="13127745  scv_49=scv_49+A[(i+14)*ny+j]*x[j];...",shape=box];
	13127745 -> _JOIN_13127746;
	_JOIN_13131659 [label="_JOIN_13131659None...",shape=box];
	_JOIN_13131659 -> 13363572;
	ForLoop13134610 [label="ForLoop13134610  for (i=ii; i<=min(nx-1,ii+127)-29; i=i+30) {...",shape=box];
	ForLoop13134610 -> 13272354;
	ForLoop13134610 -> _JOIN_13134610;
	_JOIN_13125807 [label="_JOIN_13125807None...",shape=box];
	_JOIN_13125807 -> 13357852;
	ForLoop13126150 [label="ForLoop13126150  for (j=cbv_27; j<=cbv_28; j=j+1) {...",shape=box];
	ForLoop13126150 -> 13126149;
	ForLoop13126150 -> _JOIN_13126150;
	13128014 [label="13128014  int j;...",shape=box];
	ForLoop13129342 [label="ForLoop13129342  for (j=cbv_63; j<=cbv_64; j=j+1) {...",shape=box];
	ForLoop13129342 -> 13129341;
	ForLoop13129342 -> _JOIN_13129342;
	ForLoop13125086 [label="ForLoop13125086  for (j=cbv_15; j<=cbv_16; j=j+1) {...",shape=box];
	ForLoop13125086 -> 13125085;
	ForLoop13125086 -> _JOIN_13125086;
	13134716 [label="13134716  scv_65=scv_65+A[i*ny+jt]*x[jt];...",shape=box];
	13127748 [label="13127748  int j;...",shape=box];
	13363312 [label="13363312  register int cbv_87, cbv_88;...",shape=box];
	13124021 [label="13124021  scv_42=scv_42+A[i*ny+j]*x[j];...",shape=box];
	13124021 -> _JOIN_13124022;
	_JOIN_13130672 [label="_JOIN_13130672None...",shape=box];
	_JOIN_13130672 -> 13130674;
	_JOIN_13125352 [label="_JOIN_13125352None...",shape=box];
	_JOIN_13125352 -> 13125354;
	13361492 [label="13361492  register int cbv_66, cbv_67;...",shape=box];
	_JOIN_13128544 [label="_JOIN_13128544None...",shape=box];
	_JOIN_13128544 -> 13128546;
	_JOIN_13124022 [label="_JOIN_13124022None...",shape=box];
	_JOIN_13124022 -> 13124024;
	_JOIN_13131470 [label="_JOIN_13131470None...",shape=box];
	_JOIN_13131470 -> 13131472;
	13358112 [label="13358112  register int cbv_27, cbv_28;...",shape=box];
	_JOIN_13125884 [label="_JOIN_13125884None...",shape=box];
	_JOIN_13125884 -> 13125886;
	ForLoop13130861 [label="ForLoop13130861  for (j=jt; j<=cbv_80; j=j+5) {...",shape=box];
	ForLoop13130861 -> 13130723;
	ForLoop13130861 -> _JOIN_13130861;
	_JOIN_13124477 [label="_JOIN_13124477None...",shape=box];
	_JOIN_13124477 -> 13356552;
	_JOIN_13123811 [label="_JOIN_13123811None...",shape=box];
	_JOIN_13123811 -> 13123812;
	_JOIN_13125275 [label="_JOIN_13125275None...",shape=box];
	_JOIN_13125275 -> 13357332;
	13126733 [label="13126733  scv_55=scv_55+A[(i+11)*ny+j]*x[j];...",shape=box];
	13124024 [label="13124024  int j;...",shape=box];
	13126201 [label="13126201  scv_57=scv_57+A[(i+9)*ny+j]*x[j];...",shape=box];
	_JOIN_12853242 [label="_JOIN_12853242None...",shape=box];
	_JOIN_12853242 -> 13091254;
	13135565 [label="13135565  scv_65=scv_65+A[i*ny+j]*x[j];...",shape=box];
	_JOIN_13135845 [label="_JOIN_13135845None...",shape=box];
	_JOIN_13135845 -> 13135876;
	ForLoop13134606 [label="ForLoop13134606  for (kk=kkk; kk<=min(ny-1,kkk+1008); kk=kk+16) {...",shape=box];
	ForLoop13134606 -> 13131801;
	ForLoop13134606 -> _JOIN_13134606;
	13279575 [label="13279575  double scv_65;...",shape=box];
	13359932 [label="13359932  register int cbv_48, cbv_49;...",shape=box];
	13131472 [label="13131472  int j;...",shape=box];
	_JOIN_13126416 [label="_JOIN_13126416None...",shape=box];
	_JOIN_13126416 -> 13126418;
	13130937 [label="13130937  scv_47=scv_47+A[(i+26)*ny+j]*x[j];...",shape=box];
	13130937 -> _JOIN_13130938;
	ForLoop13127403 [label="ForLoop13127403  for (j=jt; j<=cbv_41; j=j+5) {...",shape=box];
	ForLoop13127403 -> 13127265;
	ForLoop13127403 -> _JOIN_13127403;
	ForLoop13124288 [label="ForLoop13124288  for (j=cbv_6; j<=cbv_7; j=j+1) {...",shape=box];
	ForLoop13124288 -> 13124287;
	ForLoop13124288 -> _JOIN_13124288;
	13128809 [label="13128809  scv_39=scv_39+A[(i+18)*ny+j]*x[j];...",shape=box];
	13128809 -> _JOIN_13128810;
	ForLoop12853173 [label="ForLoop12853173  for (i=0; i<=ny-26; i=i+26) {...",shape=box];
	ForLoop12853173 -> 12852946;
	ForLoop12853173 -> _JOIN_12853173;
	_JOIN_13127480 [label="_JOIN_13127480None...",shape=box];
	_JOIN_13127480 -> 13127482;
	13131521 [label="13131521  scv_62=scv_62+A[(i+29)*ny+j]*x[j];...",shape=box];
	ForLoop13135884 [label="ForLoop13135884  for (iii=0; iii<=nx-1; iii=iii+256) {...",shape=box];
	ForLoop13135884 -> ForLoop13135883;
	ForLoop13135884 -> _JOIN_13135884;
	ForLoop13135883 [label="ForLoop13135883  for (ii=iii; ii<=min(nx-1,iii+128); ii=ii+128) {...",shape=box];
	ForLoop13135883 -> 13091287;
	ForLoop13135883 -> _JOIN_13135883;
	ForLoop13134608 [label="ForLoop13134608  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop13134608 -> ForLoop13134606;
	ForLoop13134608 -> _JOIN_13134608;
	ForLoop13135881 [label="ForLoop13135881  for (i=(min(nx-1,ii+127))-(((min(nx-1,ii+127))-(ii)+1)%30)+1; i<=min(nx-1,ii+127); i=i+1) {...",shape=box];
	ForLoop13135881 -> 13279575;
	ForLoop13135881 -> _JOIN_13135881;
	13362012 [label="13362012  register int cbv_72, cbv_73;...",shape=box];
	_JOIN_13125086 [label="_JOIN_13125086None...",shape=box];
	_JOIN_13125086 -> 13125088;
	13128280 [label="13128280  int j;...",shape=box];
	13358632 [label="13358632  register int cbv_33, cbv_34;...",shape=box];
	13129659 [label="13129659  scv_61=scv_61+A[(i+22)*ny+j]*x[j];...",shape=box];
	ForLoop13129608 [label="ForLoop13129608  for (j=cbv_66; j<=cbv_67; j=j+1) {...",shape=box];
	ForLoop13129608 -> 13129607;
	ForLoop13129608 -> _JOIN_13129608;
	13360712 [label="13360712  register int cbv_57, cbv_58;...",shape=box];
	13125085 [label="13125085  scv_56=scv_56+A[(i+4)*ny+j]*x[j];...",shape=box];
	13125085 -> _JOIN_13125086;
	ForLoop13126339 [label="ForLoop13126339  for (j=jt; j<=cbv_29; j=j+5) {...",shape=box];
	ForLoop13126339 -> 13126201;
	ForLoop13126339 -> _JOIN_13126339;
	13128329 [label="13128329  scv_63=scv_63+A[(i+17)*ny+j]*x[j];...",shape=box];
	_JOIN_13135883 [label="_JOIN_13135883None...",shape=box];
	_JOIN_13135883 -> _JOIN_13135884;
	_JOIN_13129874 [label="_JOIN_13129874None...",shape=box];
	_JOIN_13129874 -> 13129876;
	ForLoop13127480 [label="ForLoop13127480  for (j=cbv_42; j<=cbv_43; j=j+1) {...",shape=box];
	ForLoop13127480 -> 13127479;
	ForLoop13127480 -> _JOIN_13127480;
	ForLoop13123811 [label="ForLoop13123811  for (jt=jj; jt<=cbv_1; jt=jt+32) {...",shape=box];
	ForLoop13123811 -> 13179832;
	ForLoop13123811 -> _JOIN_13123811;
	_JOIN_13125009 [label="_JOIN_13125009None...",shape=box];
	_JOIN_13125009 -> 13357072;
	13129925 [label="13129925  scv_60=scv_60+A[(i+23)*ny+j]*x[j];...",shape=box];
	13364891 [label="13364891  register int cbv_93;...",shape=box];
	_JOIN_13129342 [label="_JOIN_13129342None...",shape=box];
	_JOIN_13129342 -> 13129344;
	13359152 [label="13359152  register int cbv_39, cbv_40;...",shape=box];
	ForLoop13123954 [label="ForLoop13123954  for (j=jt; j<=cbv_2; j=j+5) {...",shape=box];
	ForLoop13123954 -> 13123852;
	ForLoop13123954 -> _JOIN_13123954;
	13123812 [label="13123812  int j;...",shape=box];
	_JOIN_13134608 [label="_JOIN_13134608None...",shape=box];
	_JOIN_13134608 -> 13272372;
	ForLoop13135879 [label="ForLoop13135879  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop13135879 -> ForLoop13135878;
	ForLoop13135879 -> _JOIN_13135879;
	13278004 [label="13278004  double scv_64;...",shape=box];
	_JOIN_13129265 [label="_JOIN_13129265None...",shape=box];
	_JOIN_13129265 -> 13361232;
	13179832 [label="13179832  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	_JOIN_13126150 [label="_JOIN_13126150None...",shape=box];
	_JOIN_13126150 -> 13126152;
	_JOIN_13134606 [label="_JOIN_13134606None...",shape=box];
	_JOIN_13134606 -> _JOIN_13134608;
	13129127 [label="13129127  scv_34=scv_34+A[(i+20)*ny+j]*x[j];...",shape=box];
	_JOIN_12853173 [label="_JOIN_12853173None...",shape=box];
	_JOIN_12853173 -> ForLoop12853242;
	13125669 [label="13125669  scv_43=scv_43+A[(i+7)*ny+j]*x[j];...",shape=box];
	13124556 [label="13124556  int j;...",shape=box];
	13359412 [label="13359412  register int cbv_42, cbv_43;...",shape=box];
	13124553 [label="13124553  scv_46=scv_46+A[(i+2)*ny+j]*x[j];...",shape=box];
	13124553 -> _JOIN_13124554;
	ForLoop13128278 [label="ForLoop13128278  for (j=cbv_51; j<=cbv_52; j=j+1) {...",shape=box];
	ForLoop13128278 -> 13128277;
	ForLoop13128278 -> _JOIN_13128278;
	_JOIN_13124288 [label="_JOIN_13124288None...",shape=box];
	_JOIN_13124288 -> 13124290;
	13135876 [label="13135876  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	13135876 -> _JOIN_13135878;
	ForLoop13130938 [label="ForLoop13130938  for (j=cbv_81; j<=cbv_82; j=j+1) {...",shape=box];
	ForLoop13130938 -> 13130937;
	ForLoop13130938 -> _JOIN_13130938;
	ForLoop13131470 [label="ForLoop13131470  for (j=cbv_87; j<=cbv_88; j=j+1) {...",shape=box];
	ForLoop13131470 -> 13131469;
	ForLoop13131470 -> _JOIN_13131470;
	13362272 [label="13362272  register int cbv_75, cbv_76;...",shape=box];
	ForLoop13124211 [label="ForLoop13124211  for (j=jt; j<=cbv_5; j=j+5) {...",shape=box];
	ForLoop13124211 -> 13124073;
	ForLoop13124211 -> _JOIN_13124211;
	_JOIN_13129531 [label="_JOIN_13129531None...",shape=box];
	_JOIN_13129531 -> 13361492;
	ForLoop13128999 [label="ForLoop13128999  for (j=jt; j<=cbv_59; j=j+5) {...",shape=box];
	ForLoop13128999 -> 13128861;
	ForLoop13128999 -> _JOIN_13128999;
	ForLoop13129531 [label="ForLoop13129531  for (j=jt; j<=cbv_65; j=j+5) {...",shape=box];
	ForLoop13129531 -> 13129393;
	ForLoop13129531 -> _JOIN_13129531;
	ForLoop13130595 [label="ForLoop13130595  for (j=jt; j<=cbv_77; j=j+5) {...",shape=box];
	ForLoop13130595 -> 13130457;
	ForLoop13130595 -> _JOIN_13130595;
	ForLoop13130140 [label="ForLoop13130140  for (j=cbv_72; j<=cbv_73; j=j+1) {...",shape=box];
	ForLoop13130140 -> 13130139;
	ForLoop13130140 -> _JOIN_13130140;
	13126149 [label="13126149  scv_58=scv_58+A[(i+8)*ny+j]*x[j];...",shape=box];
	13126149 -> _JOIN_13126150;
	13124290 [label="13124290  int j;...",shape=box];
	ForLoop13130063 [label="ForLoop13130063  for (j=jt; j<=cbv_71; j=j+5) {...",shape=box];
	ForLoop13130063 -> 13129925;
	ForLoop13130063 -> _JOIN_13130063;
	13091254 [label="13091254  double x_copy;...",shape=box];
	13126999 [label="13126999  scv_35=scv_35+A[(i+12)*ny+j]*x[j];...",shape=box];
	ForLoop13127669 [label="ForLoop13127669  for (j=jt; j<=cbv_44; j=j+5) {...",shape=box];
	ForLoop13127669 -> 13127531;
	ForLoop13127669 -> _JOIN_13127669;
	ForLoop13127137 [label="ForLoop13127137  for (j=jt; j<=cbv_38; j=j+5) {...",shape=box];
	ForLoop13127137 -> 13126999;
	ForLoop13127137 -> _JOIN_13127137;
	13127797 [label="13127797  scv_51=scv_51+A[(i+15)*ny+j]*x[j];...",shape=box];
	_JOIN_13131736 [label="_JOIN_13131736None...",shape=box];
	_JOIN_13131736 -> _JOIN_13131739;
	13126467 [label="13126467  scv_48=scv_48+A[(i+10)*ny+j]*x[j];...",shape=box];
	13125935 [label="13125935  scv_58=scv_58+A[(i+8)*ny+j]*x[j];...",shape=box];
	_JOIN_13130938 [label="_JOIN_13130938None...",shape=box];
	_JOIN_13130938 -> 13130940;
	ForLoop13124743 [label="ForLoop13124743  for (j=jt; j<=cbv_11; j=j+5) {...",shape=box];
	ForLoop13124743 -> 13124605;
	ForLoop13124743 -> _JOIN_13124743;
	ForLoop13135738 [label="ForLoop13135738  for (jj=0; jj<=ny-1; jj=jj+512) {...",shape=box];
	ForLoop13135738 -> 13364891;
	ForLoop13135738 -> _JOIN_13135738;
	ForLoop13131393 [label="ForLoop13131393  for (j=jt; j<=cbv_86; j=j+5) {...",shape=box];
	ForLoop13131393 -> 13131255;
	ForLoop13131393 -> _JOIN_13131393;
	ForLoop13126416 [label="ForLoop13126416  for (j=cbv_30; j<=cbv_31; j=j+1) {...",shape=box];
	ForLoop13126416 -> 13126415;
	ForLoop13126416 -> _JOIN_13126416;
	13128063 [label="13128063  scv_54=scv_54+A[(i+16)*ny+j]*x[j];...",shape=box];
	_JOIN_13128733 [label="_JOIN_13128733None...",shape=box];
	_JOIN_13128733 -> 13360712;
	_JOIN_13134610 [label="_JOIN_13134610None...",shape=box];
	_JOIN_13134610 -> ForLoop13135881;
	13135800 [label="13135800  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	ForLoop13124554 [label="ForLoop13124554  for (j=cbv_9; j<=cbv_10; j=j+1) {...",shape=box];
	ForLoop13124554 -> 13124553;
	ForLoop13124554 -> _JOIN_13124554;
	13129393 [label="13129393  scv_37=scv_37+A[(i+21)*ny+j]*x[j];...",shape=box];
	ForLoop13125618 [label="ForLoop13125618  for (j=cbv_21; j<=cbv_22; j=j+1) {...",shape=box];
	ForLoop13125618 -> 13125617;
	ForLoop13125618 -> _JOIN_13125618;
	ForLoop13124022 [label="ForLoop13124022  for (j=cbv_3; j<=cbv_4; j=j+1) {...",shape=box];
	ForLoop13124022 -> 13124021;
	ForLoop13124022 -> _JOIN_13124022;
	13124871 [label="13124871  scv_56=scv_56+A[(i+4)*ny+j]*x[j];...",shape=box];
	13361232 [label="13361232  register int cbv_63, cbv_64;...",shape=box];
	13130142 [label="13130142  int j;...",shape=box];
	13130940 [label="13130940  int j;...",shape=box];
	13357072 [label="13357072  register int cbv_15, cbv_16;...",shape=box];
	13272372 [label="13272372  tmp[(i+20)]=scv_34;...",shape=box];
	13355823 [label="13355823  register int cbv_1;...",shape=box];
	_JOIN_13131127 [label="_JOIN_13131127None...",shape=box];
	_JOIN_13131127 -> 13363052;
	_JOIN_13129608 [label="_JOIN_13129608None...",shape=box];
	_JOIN_13129608 -> 13129610;
	13126152 [label="13126152  int j;...",shape=box];
	13124287 [label="13124287  scv_59=scv_59+A[(i+1)*ny+j]*x[j];...",shape=box];
	13124287 -> _JOIN_13124288;
	_JOIN_13135524 [label="_JOIN_13135524None...",shape=box];
	_JOIN_13135524 -> 13135525;
	ForLoop13125807 [label="ForLoop13125807  for (j=jt; j<=cbv_23; j=j+5) {...",shape=box];
	ForLoop13125807 -> 13125669;
	ForLoop13125807 -> _JOIN_13125807;
	13126415 [label="13126415  scv_57=scv_57+A[(i+9)*ny+j]*x[j];...",shape=box];
	13126415 -> _JOIN_13126416;
	12853241 [label="12853241  y[i]=0.0;...",shape=box];
	12853241 -> _JOIN_12853242;
	_JOIN_13126871 [label="_JOIN_13126871None...",shape=box];
	_JOIN_13126871 -> 13358892;
	_JOIN_13135881 [label="_JOIN_13135881None...",shape=box];
	_JOIN_13135881 -> _JOIN_13135883;
	13362792 [label="13362792  register int cbv_81, cbv_82;...",shape=box];
	13128011 [label="13128011  scv_51=scv_51+A[(i+15)*ny+j]*x[j];...",shape=box];
	13128011 -> _JOIN_13128012;
	13127479 [label="13127479  scv_36=scv_36+A[(i+13)*ny+j]*x[j];...",shape=box];
	13127479 -> _JOIN_13127480;
	ForLoop13133674 [label="ForLoop13133674  for (k=kk; k<=cbv_92; k=k+1) {...",shape=box];
	ForLoop13133674 -> 13228486;
	ForLoop13133674 -> _JOIN_13133674;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 12852514;
	_JOIN_13127669 [label="_JOIN_13127669None...",shape=box];
	_JOIN_13127669 -> 13359672;
	13126418 [label="13126418  int j;...",shape=box];
	13129876 [label="13129876  int j;...",shape=box];
	13128595 [label="13128595  scv_39=scv_39+A[(i+18)*ny+j]*x[j];...",shape=box];
	13124073 [label="13124073  scv_59=scv_59+A[(i+1)*ny+j]*x[j];...",shape=box];
	13129873 [label="13129873  scv_61=scv_61+A[(i+22)*ny+j]*x[j];...",shape=box];
	13129873 -> _JOIN_13129874;
	13356292 [label="13356292  register int cbv_6, cbv_7;...",shape=box];
	13360972 [label="13360972  register int cbv_60, cbv_61;...",shape=box];
	ForLoop13135735 [label="ForLoop13135735  for (j=cbv_95; j<=cbv_96; j=j+1) {...",shape=box];
	ForLoop13135735 -> 13135734;
	ForLoop13135735 -> _JOIN_13135735;
	_JOIN_13126073 [label="_JOIN_13126073None...",shape=box];
	_JOIN_13126073 -> 13358112;
	_JOIN_13131739 [label="_JOIN_13131739None...",shape=box];
	_JOIN_13131739 -> ForLoop13134608;
	13357592 [label="13357592  register int cbv_21, cbv_22;...",shape=box];
	ForLoop13130672 [label="ForLoop13130672  for (j=cbv_78; j<=cbv_79; j=j+1) {...",shape=box];
	ForLoop13130672 -> 13130671;
	ForLoop13130672 -> _JOIN_13130672;
	13126681 [label="13126681  scv_48=scv_48+A[(i+10)*ny+j]*x[j];...",shape=box];
	13126681 -> _JOIN_13126682;
	_JOIN_13135878 [label="_JOIN_13135878None...",shape=box];
	_JOIN_13135878 -> _JOIN_13135879;
	13130457 [label="13130457  scv_52=scv_52+A[(i+25)*ny+j]*x[j];...",shape=box];
	13126684 [label="13126684  int j;...",shape=box];
	13129078 [label="13129078  int j;...",shape=box];
	13130989 [label="13130989  scv_40=scv_40+A[(i+27)*ny+j]*x[j];...",shape=box];
	13129075 [label="13129075  scv_38=scv_38+A[(i+19)*ny+j]*x[j];...",shape=box];
	13129075 -> _JOIN_13129076;
	ForLoop13135524 [label="ForLoop13135524  for (jt=jj; jt<=cbv_93; jt=jt+32) {...",shape=box];
	ForLoop13135524 -> 13134716;
	ForLoop13135524 -> _JOIN_13135524;
	13362532 [label="13362532  register int cbv_78, cbv_79;...",shape=box];
	_JOIN_13124554 [label="_JOIN_13124554None...",shape=box];
	_JOIN_13124554 -> 13124556;
	13128277 [label="13128277  scv_54=scv_54+A[(i+16)*ny+j]*x[j];...",shape=box];
	13128277 -> _JOIN_13128278;
	13131735 [label="13131735  scv_62=scv_62+A[(i+29)*ny+j]*x[j];...",shape=box];
	13131735 -> _JOIN_13131736;
	13131203 [label="13131203  scv_40=scv_40+A[(i+27)*ny+j]*x[j];...",shape=box];
	13131203 -> _JOIN_13131204;
	_JOIN_13135735 [label="_JOIN_13135735None...",shape=box];
	_JOIN_13135735 -> _JOIN_13135738;
	_JOIN_13129797 [label="_JOIN_13129797None...",shape=box];
	_JOIN_13129797 -> 13361752;
	13131206 [label="13131206  int j;...",shape=box];
	_JOIN_13135738 [label="_JOIN_13135738None...",shape=box];
	_JOIN_13135738 -> ForLoop13135879;
	_JOIN_13130406 [label="_JOIN_13130406None...",shape=box];
	_JOIN_13130406 -> 13130408;
	13130191 [label="13130191  scv_53=scv_53+A[(i+24)*ny+j]*x[j];...",shape=box];
	ForLoop12853242 [label="ForLoop12853242  for (i=ny-((ny-(0))%26); i<=ny-1; i=i+1) ...",shape=box];
	ForLoop12853242 -> 12853241;
	ForLoop12853242 -> _JOIN_12853242;
	_JOIN_13130140 [label="_JOIN_13130140None...",shape=box];
	_JOIN_13130140 -> 13130142;
	ForLoop13128733 [label="ForLoop13128733  for (j=jt; j<=cbv_56; j=j+5) {...",shape=box];
	ForLoop13128733 -> 13128595;
	ForLoop13128733 -> _JOIN_13128733;
	13124822 [label="13124822  int j;...",shape=box];
	13129607 [label="13129607  scv_37=scv_37+A[(i+21)*ny+j]*x[j];...",shape=box];
	13129607 -> _JOIN_13129608;
	13357852 [label="13357852  register int cbv_24, cbv_25;...",shape=box];
	13356032 [label="13356032  register int cbv_3, cbv_4;...",shape=box];
	13127216 [label="13127216  int j;...",shape=box];
	13125886 [label="13125886  int j;...",shape=box];
	ForLoop13135845 [label="ForLoop13135845  for (k=kk; k<=cbv_97; k=k+1) {...",shape=box];
	ForLoop13135845 -> 13278004;
	ForLoop13135845 -> _JOIN_13135845;
	ForLoop13131739 [label="ForLoop13131739  for (jj=0; jj<=ny-1; jj=jj+512) {...",shape=box];
	ForLoop13131739 -> 13355823;
	ForLoop13131739 -> _JOIN_13131739;
	13129341 [label="13129341  scv_34=scv_34+A[(i+20)*ny+j]*x[j];...",shape=box];
	13129341 -> _JOIN_13129342;
	13124339 [label="13124339  scv_46=scv_46+A[(i+2)*ny+j]*x[j];...",shape=box];
	ForLoop13135878 [label="ForLoop13135878  for (kk=kkk; kk<=min(ny-1,kkk+1008); kk=kk+16) {...",shape=box];
	ForLoop13135878 -> 13135800;
	ForLoop13135878 -> _JOIN_13135878;
	ForLoop13128810 [label="ForLoop13128810  for (j=cbv_57; j<=cbv_58; j=j+1) {...",shape=box];
	ForLoop13128810 -> 13128809;
	ForLoop13128810 -> _JOIN_13128810;
	ForLoop13126948 [label="ForLoop13126948  for (j=cbv_36; j<=cbv_37; j=j+1) {...",shape=box];
	ForLoop13126948 -> 13126947;
	ForLoop13126948 -> _JOIN_13126948;
	ForLoop13124477 [label="ForLoop13124477  for (j=jt; j<=cbv_8; j=j+5) {...",shape=box];
	ForLoop13124477 -> 13124339;
	ForLoop13124477 -> _JOIN_13124477;
	ForLoop13130406 [label="ForLoop13130406  for (j=cbv_75; j<=cbv_76; j=j+1) {...",shape=box];
	ForLoop13130406 -> 13130405;
	ForLoop13130406 -> _JOIN_13130406;
	13125351 [label="13125351  scv_45=scv_45+A[(i+5)*ny+j]*x[j];...",shape=box];
	13125351 -> _JOIN_13125352;
	13125403 [label="13125403  scv_44=scv_44+A[(i+6)*ny+j]*x[j];...",shape=box];
	13125354 [label="13125354  int j;...",shape=box];
	ForLoop13131736 [label="ForLoop13131736  for (j=cbv_90; j<=cbv_91; j=j+1) {...",shape=box];
	ForLoop13131736 -> 13131735;
	ForLoop13131736 -> _JOIN_13131736;
	_JOIN_13135879 [label="_JOIN_13135879None...",shape=box];
	_JOIN_13135879 -> 13279587;
	13130674 [label="13130674  int j;...",shape=box];
	ForLoop13125884 [label="ForLoop13125884  for (j=cbv_24; j<=cbv_25; j=j+1) {...",shape=box];
	ForLoop13125884 -> 13125883;
	ForLoop13125884 -> _JOIN_13125884;
	13130405 [label="13130405  scv_53=scv_53+A[(i+24)*ny+j]*x[j];...",shape=box];
	13130405 -> _JOIN_13130406;
	ForLoop13129797 [label="ForLoop13129797  for (j=jt; j<=cbv_68; j=j+5) {...",shape=box];
	ForLoop13129797 -> 13129659;
	ForLoop13129797 -> _JOIN_13129797;
	13127482 [label="13127482  int j;...",shape=box];
	_JOIN_13130861 [label="_JOIN_13130861None...",shape=box];
	_JOIN_13130861 -> 13362792;
	_JOIN_13125541 [label="_JOIN_13125541None...",shape=box];
	_JOIN_13125541 -> 13357592;
	13129344 [label="13129344  int j;...",shape=box];
	_JOIN_13130063 [label="_JOIN_13130063None...",shape=box];
	_JOIN_13130063 -> 13362012;
	13124819 [label="13124819  scv_41=scv_41+A[(i+3)*ny+j]*x[j];...",shape=box];
	13124819 -> _JOIN_13124820;
	13130671 [label="13130671  scv_52=scv_52+A[(i+25)*ny+j]*x[j];...",shape=box];
	13130671 -> _JOIN_13130672;
	13130139 [label="13130139  scv_60=scv_60+A[(i+23)*ny+j]*x[j];...",shape=box];
	13130139 -> _JOIN_13130140;
	12852514 [label="12852514  int i;...",shape=box];
	12852514 -> ForLoop12853173;
	_JOIN_13127746 [label="_JOIN_13127746None...",shape=box];
	_JOIN_13127746 -> 13127748;
	_JOIN_13125618 [label="_JOIN_13125618None...",shape=box];
	_JOIN_13125618 -> 13125620;
	ForLoop13126605 [label="ForLoop13126605  for (j=jt; j<=cbv_32; j=j+5) {...",shape=box];
	ForLoop13126605 -> 13126467;
	ForLoop13126605 -> _JOIN_13126605;
	_JOIN_13127935 [label="_JOIN_13127935None...",shape=box];
	_JOIN_13127935 -> 13359932;
	13125620 [label="13125620  int j;...",shape=box];
	13129610 [label="13129610  int j;...",shape=box];
	ForLoop13128201 [label="ForLoop13128201  for (j=jt; j<=cbv_50; j=j+5) {...",shape=box];
	ForLoop13128201 -> 13128063;
	ForLoop13128201 -> _JOIN_13128201;
	13360452 [label="13360452  register int cbv_54, cbv_55;...",shape=box];
	13135734 [label="13135734  scv_65=scv_65+A[i*ny+j]*x[j];...",shape=box];
	13135734 -> _JOIN_13135735;
	ForLoop13131659 [label="ForLoop13131659  for (j=jt; j<=cbv_89; j=j+5) {...",shape=box];
	ForLoop13131659 -> 13131521;
	ForLoop13131659 -> _JOIN_13131659;
	_JOIN_13129076 [label="_JOIN_13129076None...",shape=box];
	_JOIN_13129076 -> 13129078;
	13363572 [label="13363572  register int cbv_90, cbv_91;...",shape=box];
	13360192 [label="13360192  register int cbv_51, cbv_52;...",shape=box];
	_JOIN_13126605 [label="_JOIN_13126605None...",shape=box];
	_JOIN_13126605 -> 13358632;
	13123852 [label="13123852  scv_42=scv_42+A[i*ny+j]*x[j];...",shape=box];
	13135525 [label="13135525  int j;...",shape=box];
	_JOIN_13128012 [label="_JOIN_13128012None...",shape=box];
	_JOIN_13128012 -> 13128014;
	_JOIN_13130595 [label="_JOIN_13130595None...",shape=box];
	_JOIN_13130595 -> 13362532;
	13363052 [label="13363052  register int cbv_84, cbv_85;...",shape=box];
	ForLoop13126073 [label="ForLoop13126073  for (j=jt; j<=cbv_26; j=j+5) {...",shape=box];
	ForLoop13126073 -> 13125935;
	ForLoop13126073 -> _JOIN_13126073;
	_JOIN_13123954 [label="_JOIN_13123954None...",shape=box];
	_JOIN_13123954 -> 13356032;
	ForLoop13131127 [label="ForLoop13131127  for (j=jt; j<=cbv_83; j=j+5) {...",shape=box];
	ForLoop13131127 -> 13130989;
	ForLoop13131127 -> _JOIN_13131127;
	13365100 [label="13365100  register int cbv_95, cbv_96;...",shape=box];
	13131801 [label="13131801  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	_JOIN_13135884 [label="_JOIN_13135884None...",shape=box];
	ForLoop13125275 [label="ForLoop13125275  for (j=jt; j<=cbv_17; j=j+5) {...",shape=box];
	ForLoop13125275 -> 13125137;
	ForLoop13125275 -> _JOIN_13125275;
	13126947 [label="13126947  scv_55=scv_55+A[(i+11)*ny+j]*x[j];...",shape=box];
	13126947 -> _JOIN_13126948;
	13361752 [label="13361752  register int cbv_69, cbv_70;...",shape=box];
	ForLoop13126682 [label="ForLoop13126682  for (j=cbv_33; j<=cbv_34; j=j+1) {...",shape=box];
	ForLoop13126682 -> 13126681;
	ForLoop13126682 -> _JOIN_13126682;
	_JOIN_13130329 [label="_JOIN_13130329None...",shape=box];
	_JOIN_13130329 -> 13362272;
	ForLoop13125541 [label="ForLoop13125541  for (j=jt; j<=cbv_20; j=j+5) {...",shape=box];
	ForLoop13125541 -> 13125403;
	ForLoop13125541 -> _JOIN_13125541;
	_JOIN_13126682 [label="_JOIN_13126682None...",shape=box];
	_JOIN_13126682 -> 13126684;
	_JOIN_13124820 [label="_JOIN_13124820None...",shape=box];
	_JOIN_13124820 -> 13124822;
	ForLoop13127935 [label="ForLoop13127935  for (j=jt; j<=cbv_47; j=j+5) {...",shape=box];
	ForLoop13127935 -> 13127797;
	ForLoop13127935 -> _JOIN_13127935;
	_JOIN_13128810 [label="_JOIN_13128810None...",shape=box];
	_JOIN_13128810 -> 13128812;
	13358372 [label="13358372  register int cbv_30, cbv_31;...",shape=box];
	ForLoop13126871 [label="ForLoop13126871  for (j=jt; j<=cbv_35; j=j+5) {...",shape=box];
	ForLoop13126871 -> 13126733;
	ForLoop13126871 -> _JOIN_13126871;
	_JOIN_13133674 [label="_JOIN_13133674None...",shape=box];
	_JOIN_13133674 -> 13133705;
	13128812 [label="13128812  int j;...",shape=box];
	_JOIN_13124743 [label="_JOIN_13124743None...",shape=box];
	_JOIN_13124743 -> 13356812;
	13359672 [label="13359672  register int cbv_45, cbv_46;...",shape=box];
	13133705 [label="13133705  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	13127213 [label="13127213  scv_35=scv_35+A[(i+12)*ny+j]*x[j];...",shape=box];
	13127213 -> _JOIN_13127214;
	_JOIN_13128201 [label="_JOIN_13128201None...",shape=box];
	_JOIN_13128201 -> 13360192;
	13358892 [label="13358892  register int cbv_36, cbv_37;...",shape=box];
	13131469 [label="13131469  scv_50=scv_50+A[(i+28)*ny+j]*x[j];...",shape=box];
	13131469 -> _JOIN_13131470;
	13128543 [label="13128543  scv_63=scv_63+A[(i+17)*ny+j]*x[j];...",shape=box];
	13128543 -> _JOIN_13128544;
	ForLoop13128544 [label="ForLoop13128544  for (j=cbv_54; j<=cbv_55; j=j+1) {...",shape=box];
	ForLoop13128544 -> 13128543;
	ForLoop13128544 ->expected=9369846271501.798828
actual=9369846271501.798828
 _JOIN_13128544;
	_JOIN_13135667 [label="_JOIN_13135667None...",shape=box];
	_JOIN_13135667 -> 13365100;
	13128546 [label="13128546  int j;...",shape=box];
	_JOIN_13131204 [label="_JOIN_13131204None...",shape=box];
	_JOIN_13131204 -> 13131206;
	_JOIN_13127214 [label="_JOIN_13127214None...",shape=box];
	_JOIN_13127214 -> 13127216;
	13131255 [label="13131255  scv_50=scv_50+A[(i+28)*ny+j]*x[j];...",shape=box];
	ForLoop13127746 [label="ForLoop13127746  for (j=cbv_45; j<=cbv_46; j=j+1) {...",shape=box];
	ForLoop13127746 -> 13127745;
	ForLoop13127746 -> _JOIN_13127746;
	13091287 [label="13091287  int i;...",shape=box];
	13091287 -> ForLoop13134610;
	13125137 [label="13125137  scv_45=scv_45+A[(i+5)*ny+j]*x[j];...",shape=box];
	13130408 [label="13130408  int j;...",shape=box];
	ForLoop13129076 [label="ForLoop13129076  for (j=cbv_60; j<=cbv_61; j=j+1) {...",shape=box];
	ForLoop13129076 -> 13129075;
	ForLoop13129076 -> _JOIN_13129076;
	13124605 [label="13124605  scv_41=scv_41+A[(i+3)*ny+j]*x[j];...",shape=box];
	ForLoop13131204 [label="ForLoop13131204  for (j=cbv_84; j<=cbv_85; j=j+1) {...",shape=box];
	ForLoop13131204 -> 13131203;
	ForLoop13131204 -> _JOIN_13131204;
	12852946 [label="12852946  y[i]=0.0;...",shape=box];
	13356812 [label="13356812  register int cbv_12, cbv_13;...",shape=box];
	13126950 [label="13126950  int j;...",shape=box];
	_JOIN_13128278 [label="_JOIN_13128278None...",shape=box];
	_JOIN_13128278 -> 13128280;
	ForLoop13135667 [label="ForLoop13135667  for (j=jt; j<=cbv_94; j=j+5) {...",shape=box];
	ForLoop13135667 -> 13135565;
	ForLoop13135667 -> _JOIN_13135667;
	13128861 [label="13128861  scv_38=scv_38+A[(i+19)*ny+j]*x[j];...",shape=box];
	_JOIN_13131393 [label="_JOIN_13131393None...",shape=box];
	_JOIN_13131393 -> 13363312;
	ForLoop13130329 [label="ForLoop13130329  for (j=jt; j<=cbv_74; j=j+5) {...",shape=box];
	ForLoop13130329 -> 13130191;
	ForLoop13130329 -> _JOIN_13130329;
	_JOIN_13127137 [label="_JOIN_13127137None...",shape=box];
	_JOIN_13127137 -> 13359152;
	ForLoop13128012 [label="ForLoop13128012  for (j=cbv_48; j<=cbv_49; j=j+1) {...",shape=box];
	ForLoop13128012 -> 13128011;
	ForLoop13128012 -> _JOIN_13128012;
	13357332 [label="13357332  register int cbv_18, cbv_19;...",shape=box];
	13228486 [label="13228486  double scv_33;...",shape=box];
	ForLoop13129874 [label="ForLoop13129874  for (j=cbv_69; j<=cbv_70; j=j+1) {...",shape=box];
	ForLoop13129874 -> 13129873;
	ForLoop13129874 -> _JOIN_13129874;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest62.exe __orio_perftest62.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest62.exe  
{'[4, 6, 1, 3, 0, 5, 0, 1, 25, 29, 4, 0, 0, 2, 0, 1, 0, 1]' : 0.32395}
{'[4, 6, 1, 3, 0, 5, 0, 1, 25, 29, 4, 0, 0, 2, 0, 1, 0, 1]' : 0.27071}
{'[4, 6, 1, 3, 0, 5, 0, 1, 25, 29, 4, 0, 0, 2, 0, 1, 0, 1]' : 0.270358}
{'[4, 6, 1, 3, 0, 5, 0, 1, 25, 29, 4, 0, 0, 2, 0, 1, 0, 1]' : 0.27195}
{'[4, 6, 1, 3, 0, 5, 0, 1, 25, 29, 4, 0, 0, 2, 0, 1, 0, 1]' : 0.271384}
{'[4, 6, 1, 3, 0, 5, 0, 1, 25, 29, 4, 0, 0, 2, 0, 1, 0, 1]' : 0.271246}
{'[4, 6, 1, 3, 0, 5, 0, 1, 25, 29, 4, 0, 0, 2, 0, 1, 0, 1]' : 0.270908}
{'[4, 6, 1, 3, 0, 5, 0, 1, 25, 29, 4, 0, 0, 2, 0, 1, 0, 1]' : 0.271114}
{'[4, 6, 1, 3, 0, 5, 0, 1, 25, 29, 4, 0, 0, 2, 0, 1, 0, 1]' : 0.270629}
{'[4, 6, 1, 3, 0, 5, 0, 1, 25, 29, 4, 0, 0, 2, 0, 1, 0, 1]' : 0.270877}
{'[4, 6, 1, 3, 0, 5, 0, 1, 25, 29, 4, 0, 0, 2, 0, 1, 0, 1]' : 0.2714}
{'[4, 6, 1, 3, 0, 5, 0, 1, 25, 29, 4, 0, 0, 2, 0, 1, 0, 1]' : 0.270833}
{'[4, 6, 1, 3, 0, 5, 0, 1, 25, 29, 4, 0, 0, 2, 0, 1, 0, 1]' : 0.275181}
{'[4, 6, 1, 3, 0, 5, 0, 1, 25, 29, 4, 0, 0, 2, 0, 1, 0, 1]' : 0.27146}
{'[4, 6, 1, 3, 0, 5, 0, 1, 25, 29, 4, 0, 0, 2, 0, 1, 0, 1]' : 0.320556}
{'[4, 6, 1, 3, 0, 5, 0, 1, 25, 29, 4, 0, 0, 2, 0, 1, 0, 1]' : 0.275295}
{'[4, 6, 1, 3, 0, 5, 0, 1, 25, 29, 4, 0, 0, 2, 0, 1, 0, 1]' : 0.271825}
{'[4, 6, 1, 3, 0, 5, 0, 1, 25, 29, 4, 0, 0, 2, 0, 1, 0, 1]' : 0.272278}
{'[4, 6, 1, 3, 0, 5, 0, 1, 25, 29, 4, 0, 0, 2, 0, 1, 0, 1]' : 0.272599}
{'[4, 6, 1, 3, 0, 5, 0, 1, 25, 29, 4, 0, 0, 2, 0, 1, 0, 1]' : 0.27288}
{'[4, 6, 1, 3, 0, 5, 0, 1, 25, 29, 4, 0, 0, 2, 0, 1, 0, 1]' : 0.272263}
{'[4, 6, 1, 3, 0, 5, 0, 1, 25, 29, 4, 0, 0, 2, 0, 1, 0, 1]' : 0.273685}
{'[4, 6, 1, 3, 0, 5, 0, 1, 25, 29, 4, 0, 0, 2, 0, 1, 0, 1]' : 0.271101}
{'[4, 6, 1, 3, 0, 5, 0, 1, 25, 29, 4, 0, 0, 2, 0, 1, 0, 1]' : 0.2723}
{'[4, 6, 1, 3, 0, 5, 0, 1, 25, 29, 4, 0, 0, 2, 0, 1, 0, 1]' : 0.271879}
{'[4, 6, 1, 3, 0, 5, 0, 1, 25, 29, 4, 0, 0, 2, 0, 1, 0, 1]' : 0.272145}
{'[4, 6, 1, 3, 0, 5, 0, 1, 25, 29, 4, 0, 0, 2, 0, 1, 0, 1]' : 0.273382}
{'[4, 6, 1, 3, 0, 5, 0, 1, 25, 29, 4, 0, 0, 2, 0, 1, 0, 1]' : 0.27305}
{'[4, 6, 1, 3, 0, 5, 0, 1, 25, 29, 4, 0, 0, 2, 0, 1, 0, 1]' : 0.273092}
{'[4, 6, 1, 3, 0, 5, 0, 1, 25, 29, 4, 0, 0, 2, 0, 1, 0, 1]' : 0.271773}

out:
 ["{'[4, 6, 1, 3, 0, 5, 0, 1, 25, 29, 4, 0, 0, 2, 0, 1, 0, 1]' : 0.32395}", "{'[4, 6, 1, 3, 0, 5, 0, 1, 25, 29, 4, 0, 0, 2, 0, 1, 0, 1]' : 0.27071}", "{'[4, 6, 1, 3, 0, 5, 0, 1, 25, 29, 4, 0, 0, 2, 0, 1, 0, 1]' : 0.270358}", "{'[4, 6, 1, 3, 0, 5, 0, 1, 25, 29, 4, 0, 0, 2, 0, 1, 0, 1]' : 0.27195}", "{'[4, 6, 1, 3, 0, 5, 0, 1, 25, 29, 4, 0, 0, 2, 0, 1, 0, 1]' : 0.271384}", "{'[4, 6, 1, 3, 0, 5, 0, 1, 25, 29, 4, 0, 0, 2, 0, 1, 0, 1]' : 0.271246}", "{'[4, 6, 1, 3, 0, 5, 0, 1, 25, 29, 4, 0, 0, 2, 0, 1, 0, 1]' : 0.270908}", "{'[4, 6, 1, 3, 0, 5, 0, 1, 25, 29, 4, 0, 0, 2, 0, 1, 0, 1]' : 0.271114}", "{'[4, 6, 1, 3, 0, 5, 0, 1, 25, 29, 4, 0, 0, 2, 0, 1, 0, 1]' : 0.270629}", "{'[4, 6, 1, 3, 0, 5, 0, 1, 25, 29, 4, 0, 0, 2, 0, 1, 0, 1]' : 0.270877}", "{'[4, 6, 1, 3, 0, 5, 0, 1, 25, 29, 4, 0, 0, 2, 0, 1, 0, 1]' : 0.2714}", "{'[4, 6, 1, 3, 0, 5, 0, 1, 25, 29, 4, 0, 0, 2, 0, 1, 0, 1]' : 0.270833}", "{'[4, 6, 1, 3, 0, 5, 0, 1, 25, 29, 4, 0, 0, 2, 0, 1, 0, 1]' : 0.275181}", "{'[4, 6, 1, 3, 0, 5, 0, 1, 25, 29, 4, 0, 0, 2, 0, 1, 0, 1]' : 0.27146}", "{'[4, 6, 1, 3, 0, 5, 0, 1, 25, 29, 4, 0, 0, 2, 0, 1, 0, 1]' : 0.320556}", "{'[4, 6, 1, 3, 0, 5, 0, 1, 25, 29, 4, 0, 0, 2, 0, 1, 0, 1]' : 0.275295}", "{'[4, 6, 1, 3, 0, 5, 0, 1, 25, 29, 4, 0, 0, 2, 0, 1, 0, 1]' : 0.271825}", "{'[4, 6, 1, 3, 0, 5, 0, 1, 25, 29, 4, 0, 0, 2, 0, 1, 0, 1]' : 0.272278}", "{'[4, 6, 1, 3, 0, 5, 0, 1, 25, 29, 4, 0, 0, 2, 0, 1, 0, 1]' : 0.272599}", "{'[4, 6, 1, 3, 0, 5, 0, 1, 25, 29, 4, 0, 0, 2, 0, 1, 0, 1]' : 0.27288}", "{'[4, 6, 1, 3, 0, 5, 0, 1, 25, 29, 4, 0, 0, 2, 0, 1, 0, 1]' : 0.272263}", "{'[4, 6, 1, 3, 0, 5, 0, 1, 25, 29, 4, 0, 0, 2, 0, 1, 0, 1]' : 0.273685}", "{'[4, 6, 1, 3, 0, 5, 0, 1, 25, 29, 4, 0, 0, 2, 0, 1, 0, 1]' : 0.271101}", "{'[4, 6, 1, 3, 0, 5, 0, 1, 25, 29, 4, 0, 0, 2, 0, 1, 0, 1]' : 0.2723}", "{'[4, 6, 1, 3, 0, 5, 0, 1, 25, 29, 4, 0, 0, 2, 0, 1, 0, 1]' : 0.271879}", "{'[4, 6, 1, 3, 0, 5, 0, 1, 25, 29, 4, 0, 0, 2, 0, 1, 0, 1]' : 0.272145}", "{'[4, 6, 1, 3, 0, 5, 0, 1, 25, 29, 4, 0, 0, 2, 0, 1, 0, 1]' : 0.273382}", "{'[4, 6, 1, 3, 0, 5, 0, 1, 25, 29, 4, 0, 0, 2, 0, 1, 0, 1]' : 0.27305}", "{'[4, 6, 1, 3, 0, 5, 0, 1, 25, 29, 4, 0, 0, 2, 0, 1, 0, 1]' : 0.273092}", "{'[4, 6, 1, 3, 0, 5, 0, 1, 25, 29, 4, 0, 0, 2, 0, 1, 0, 1]' : 0.271773}"]
returning from 'run': {'[4, 6, 1, 3, 0, 5, 0, 1, 25, 29, 4, 0, 0, 2, 0, 1, 0, 1]': ([0.32395, 0.27071, 0.270358, 0.27195, 0.271384, 0.271246, 0.270908, 0.271114, 0.270629, 0.270877, 0.2714, 0.270833, 0.275181, 0.27146, 0.320556, 0.275295, 0.271825, 0.272278, 0.272599, 0.27288, 0.272263, 0.273685, 0.271101, 0.2723, 0.271879, 0.272145, 0.273382, 0.27305, 0.273092, 0.271773], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.32395, 0.27071, 0.270358, 0.27195, 0.271384, 0.271246, 0.270908, 0.271114, 0.270629, 0.270877, 0.2714, 0.270833, 0.275181, 0.27146, 0.320556, 0.275295, 0.271825, 0.272278, 0.272599, 0.27288, 0.272263, 0.273685, 0.271101, 0.2723, 0.271879, 0.272145, 0.273382, 0.27305, 0.273092, 0.271773], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[4, 6, 1, 3, 0, 5, 0, 1, 25, 29, 4, 0, 0, 2, 0, 1, 0, 1]': ([0.32395, 0.27071, 0.270358, 0.27195, 0.271384, 0.271246, 0.270908, 0.271114, 0.270629, 0.270877, 0.2714, 0.270833, 0.275181, 0.27146, 0.320556, 0.275295, 0.271825, 0.272278, 0.272599, 0.27288, 0.272263, 0.273685, 0.271101, 0.2723, 0.271879, 0.272145, 0.273382, 0.27305, 0.273092, 0.271773], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [0, 2, 1, 2, 0, 2, 0, 0, 0, 29, 9, 0, 0, 0, 1, 1]
Fixed Factors: {'U1_I': 25, 'SCR': 1}
Testing candidate 26: [0, 2, 1, 2, 0, 2, 0, 0, 25, 0, 29, 9, 0, 0, 0, 1, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	5
        Additions: 		245
        Multiplications: 	84
        Divisions: 		0
        Logical: 		0
        Reads: 			547
        Writes: 		125
        Comparisons:		11
        Gotos: 			0
        
digraph CFG {
	13385990 [label="13385990  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	13383032 [label="13383032  scv_12=scv_12+A[i*ny+j]*x[j];...",shape=box];
	13383032 -> _JOIN_13383033;
	13382146 [label="13382146  double x_copy;...",shape=box];
	_JOIN_13383434 [label="_JOIN_13383434None...",shape=box];
	_JOIN_13383434 -> _JOIN_13383435;
	_JOIN_13383431 [label="_JOIN_13383431None...",shape=box];
	_JOIN_13383431 -> _JOIN_13383432;
	13382198 [label="13382198  int j;...",shape=box];
	ForLoop13383035 [label="ForLoop13383035  for (jj=0; jj<=ny-1; jj=jj+32) {...",shape=box];
	ForLoop13383035 -> 13382198;
	ForLoop13383035 -> _JOIN_13383035;
	13383067 [label="13383067  int k;...",shape=box];
	13388604 [label="13388604  tmp[i]=scv_12;...",shape=box];
	13388604 -> _JOIN_13383434;
	ForLoop13383033 [label="ForLoop13383033  for (j=cbv_2; j<=cbv_3; j=j+1) {...",shape=box];
	ForLoop13383033 -> 13383032;
	ForLoop13383033 -> _JOIN_13383033;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 13365741;
	13388592 [label="13388592  double scv_12;...",shape=box];
	_JOIN_13366469 [label="_JOIN_13366469None...",shape=box];
	_JOIN_13366469 -> 13382146;
	ForLoop13366400 [label="ForLoop13366400  for (i=0; i<=cbv_1; i=i+26) {...",shape=box];
	ForLoop13366400 -> 13366173;
	ForLoop13366400 -> _JOIN_13366400;
	_JOIN_13383435 [label="_JOIN_13383435None...",shape=box];
	_JOIN_13366400 [label="_JOIN_13366400None...",shape=box];
	_JOIN_13366400 -> 13366744;
	ForLoop13366469 [label="ForLoop13366469  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop13366469 -> 13366468;
	ForLoop13366469 -> _JOIN_13366469;
	ForLoop13383431 [label="ForLoop13383431  for (kk=kkk; kk<=min(ny-1,kkk+112); kk=kk+16) {...",shape=box];
	ForLoop13383431 -> 13383067;
	ForLoop13383431 -> _JOIN_13383431;
	13366468 [label="13366468  y[i]=0.0;...",shape=box];
	13366468 -> _JOIN_13366469;
	ForLoop13383435 [label="ForLoop13383435  for (iii=0; iii<=nx-1; iii=iii+128) {...",shape=box];
	ForLoop13383435 -> ForLoop13383434;
	ForLoop13383435 -> _JOIN_13383435;
	_JOIN_13382965 [label="_JOIN_13382965None...",shape=box];
	_JOIN_13382965 -> 13390637;
	13382238 [label="13382238  scv_12=scv_12+A[i*ny+j]*x[j];...",shape=box];
	ForLoop13382965 [label="ForLoop13382965  for (j=jj; j<=cbv_1; j=j+30) {...",shape=box];
	ForLoop13382965 -> 13382238;
	ForLoop13382965 -> _JOIN_13382965;
	_JOIN_13383429 [label="_JOIN_13383429None...",shape=box];
	_JOIN_13383429 -> _JOIN_13383431;
	_JOIN_13383033 [label="_JOIN_13383033None...",shape=box];
	_JOIN_13383033 -> _JOIN_13383035;
	_JOIN_13383035 [label="_JOIN_13383035None...",shape=box];
	_JOIN_13383035 -> ForLoop13383432;
	_JOIN_13383432 [label="_JOIN_13383432None...",shape=box];
	_JOIN_13383432 -> 13388604;
	_JOIN_13383361 [label="_JOIN_13383361None...",shape=box];
	_JOIN_13383361 -> 13391124;
	13365741 [label="13365741  int i;...",shape=box];
	ForLoop13383432 [label="ForLoop13383432  for (kkk=0; kkk<=ny-1; kkk=kkk+128) {...",shape=box];
	ForLoop13383432 -> ForLoop13383431;
	ForLoop13383432 -> _JOIN_13383432;
	13391124 [label="13391124  register int cbv_5, cbv_6;...",shape=box];
	13386266 [label="13386266  double scv_11;...",shape=box];
	13366744 [label="13366744  register int cbv_2, cbexpected=9369846271501.798828
actual=9369846271501.798828
v_3;...",shape=box];
	ForLoop13383434 [label="ForLoop13383434  for (i=iii; i<=min(nx-1,iii+127); i=i+1) {...",shape=box];
	ForLoop13383434 -> 13388592;
	ForLoop13383434 -> _JOIN_13383434;
	ForLoop13383361 [label="ForLoop13383361  for (k=kk; k<=cbv_4; k=k+10) {...",shape=box];
	ForLoop13383361 -> 13385990;
	ForLoop13383361 -> _JOIN_13383361;
	13390637 [label="13390637  register int cbv_2, cbv_3;...",shape=box];
	13366173 [label="13366173  y[i]=0.0;...",shape=box];
	ForLoop13383429 [label="ForLoop13383429  for (k=cbv_5; k<=cbv_6; k=k+1) {...",shape=box];
	ForLoop13383429 -> 13386266;
	ForLoop13383429 -> _JOIN_13383429;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest63.exe __orio_perftest63.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest63.exe  
{'[0, 2, 1, 2, 0, 2, 0, 0, 25, 0, 29, 9, 0, 0, 0, 1, 1, 1]' : 0.16312}
{'[0, 2, 1, 2, 0, 2, 0, 0, 25, 0, 29, 9, 0, 0, 0, 1, 1, 1]' : 0.163061}
{'[0, 2, 1, 2, 0, 2, 0, 0, 25, 0, 29, 9, 0, 0, 0, 1, 1, 1]' : 0.163065}
{'[0, 2, 1, 2, 0, 2, 0, 0, 25, 0, 29, 9, 0, 0, 0, 1, 1, 1]' : 0.163153}
{'[0, 2, 1, 2, 0, 2, 0, 0, 25, 0, 29, 9, 0, 0, 0, 1, 1, 1]' : 0.163206}
{'[0, 2, 1, 2, 0, 2, 0, 0, 25, 0, 29, 9, 0, 0, 0, 1, 1, 1]' : 0.16334}
{'[0, 2, 1, 2, 0, 2, 0, 0, 25, 0, 29, 9, 0, 0, 0, 1, 1, 1]' : 0.16325}
{'[0, 2, 1, 2, 0, 2, 0, 0, 25, 0, 29, 9, 0, 0, 0, 1, 1, 1]' : 0.163094}
{'[0, 2, 1, 2, 0, 2, 0, 0, 25, 0, 29, 9, 0, 0, 0, 1, 1, 1]' : 0.16301}
{'[0, 2, 1, 2, 0, 2, 0, 0, 25, 0, 29, 9, 0, 0, 0, 1, 1, 1]' : 0.163346}
{'[0, 2, 1, 2, 0, 2, 0, 0, 25, 0, 29, 9, 0, 0, 0, 1, 1, 1]' : 0.163084}
{'[0, 2, 1, 2, 0, 2, 0, 0, 25, 0, 29, 9, 0, 0, 0, 1, 1, 1]' : 0.163014}
{'[0, 2, 1, 2, 0, 2, 0, 0, 25, 0, 29, 9, 0, 0, 0, 1, 1, 1]' : 0.163096}
{'[0, 2, 1, 2, 0, 2, 0, 0, 25, 0, 29, 9, 0, 0, 0, 1, 1, 1]' : 0.163042}
{'[0, 2, 1, 2, 0, 2, 0, 0, 25, 0, 29, 9, 0, 0, 0, 1, 1, 1]' : 0.16308}
{'[0, 2, 1, 2, 0, 2, 0, 0, 25, 0, 29, 9, 0, 0, 0, 1, 1, 1]' : 0.163398}
{'[0, 2, 1, 2, 0, 2, 0, 0, 25, 0, 29, 9, 0, 0, 0, 1, 1, 1]' : 0.163083}
{'[0, 2, 1, 2, 0, 2, 0, 0, 25, 0, 29, 9, 0, 0, 0, 1, 1, 1]' : 0.163232}
{'[0, 2, 1, 2, 0, 2, 0, 0, 25, 0, 29, 9, 0, 0, 0, 1, 1, 1]' : 0.163053}
{'[0, 2, 1, 2, 0, 2, 0, 0, 25, 0, 29, 9, 0, 0, 0, 1, 1, 1]' : 0.163037}
{'[0, 2, 1, 2, 0, 2, 0, 0, 25, 0, 29, 9, 0, 0, 0, 1, 1, 1]' : 0.163058}
{'[0, 2, 1, 2, 0, 2, 0, 0, 25, 0, 29, 9, 0, 0, 0, 1, 1, 1]' : 0.163295}
{'[0, 2, 1, 2, 0, 2, 0, 0, 25, 0, 29, 9, 0, 0, 0, 1, 1, 1]' : 0.163197}
{'[0, 2, 1, 2, 0, 2, 0, 0, 25, 0, 29, 9, 0, 0, 0, 1, 1, 1]' : 0.163143}
{'[0, 2, 1, 2, 0, 2, 0, 0, 25, 0, 29, 9, 0, 0, 0, 1, 1, 1]' : 0.163285}
{'[0, 2, 1, 2, 0, 2, 0, 0, 25, 0, 29, 9, 0, 0, 0, 1, 1, 1]' : 0.163617}
{'[0, 2, 1, 2, 0, 2, 0, 0, 25, 0, 29, 9, 0, 0, 0, 1, 1, 1]' : 0.163278}
{'[0, 2, 1, 2, 0, 2, 0, 0, 25, 0, 29, 9, 0, 0, 0, 1, 1, 1]' : 0.163147}
{'[0, 2, 1, 2, 0, 2, 0, 0, 25, 0, 29, 9, 0, 0, 0, 1, 1, 1]' : 0.163277}
{'[0, 2, 1, 2, 0, 2, 0, 0, 25, 0, 29, 9, 0, 0, 0, 1, 1, 1]' : 0.163185}

out:
 ["{'[0, 2, 1, 2, 0, 2, 0, 0, 25, 0, 29, 9, 0, 0, 0, 1, 1, 1]' : 0.16312}", "{'[0, 2, 1, 2, 0, 2, 0, 0, 25, 0, 29, 9, 0, 0, 0, 1, 1, 1]' : 0.163061}", "{'[0, 2, 1, 2, 0, 2, 0, 0, 25, 0, 29, 9, 0, 0, 0, 1, 1, 1]' : 0.163065}", "{'[0, 2, 1, 2, 0, 2, 0, 0, 25, 0, 29, 9, 0, 0, 0, 1, 1, 1]' : 0.163153}", "{'[0, 2, 1, 2, 0, 2, 0, 0, 25, 0, 29, 9, 0, 0, 0, 1, 1, 1]' : 0.163206}", "{'[0, 2, 1, 2, 0, 2, 0, 0, 25, 0, 29, 9, 0, 0, 0, 1, 1, 1]' : 0.16334}", "{'[0, 2, 1, 2, 0, 2, 0, 0, 25, 0, 29, 9, 0, 0, 0, 1, 1, 1]' : 0.16325}", "{'[0, 2, 1, 2, 0, 2, 0, 0, 25, 0, 29, 9, 0, 0, 0, 1, 1, 1]' : 0.163094}", "{'[0, 2, 1, 2, 0, 2, 0, 0, 25, 0, 29, 9, 0, 0, 0, 1, 1, 1]' : 0.16301}", "{'[0, 2, 1, 2, 0, 2, 0, 0, 25, 0, 29, 9, 0, 0, 0, 1, 1, 1]' : 0.163346}", "{'[0, 2, 1, 2, 0, 2, 0, 0, 25, 0, 29, 9, 0, 0, 0, 1, 1, 1]' : 0.163084}", "{'[0, 2, 1, 2, 0, 2, 0, 0, 25, 0, 29, 9, 0, 0, 0, 1, 1, 1]' : 0.163014}", "{'[0, 2, 1, 2, 0, 2, 0, 0, 25, 0, 29, 9, 0, 0, 0, 1, 1, 1]' : 0.163096}", "{'[0, 2, 1, 2, 0, 2, 0, 0, 25, 0, 29, 9, 0, 0, 0, 1, 1, 1]' : 0.163042}", "{'[0, 2, 1, 2, 0, 2, 0, 0, 25, 0, 29, 9, 0, 0, 0, 1, 1, 1]' : 0.16308}", "{'[0, 2, 1, 2, 0, 2, 0, 0, 25, 0, 29, 9, 0, 0, 0, 1, 1, 1]' : 0.163398}", "{'[0, 2, 1, 2, 0, 2, 0, 0, 25, 0, 29, 9, 0, 0, 0, 1, 1, 1]' : 0.163083}", "{'[0, 2, 1, 2, 0, 2, 0, 0, 25, 0, 29, 9, 0, 0, 0, 1, 1, 1]' : 0.163232}", "{'[0, 2, 1, 2, 0, 2, 0, 0, 25, 0, 29, 9, 0, 0, 0, 1, 1, 1]' : 0.163053}", "{'[0, 2, 1, 2, 0, 2, 0, 0, 25, 0, 29, 9, 0, 0, 0, 1, 1, 1]' : 0.163037}", "{'[0, 2, 1, 2, 0, 2, 0, 0, 25, 0, 29, 9, 0, 0, 0, 1, 1, 1]' : 0.163058}", "{'[0, 2, 1, 2, 0, 2, 0, 0, 25, 0, 29, 9, 0, 0, 0, 1, 1, 1]' : 0.163295}", "{'[0, 2, 1, 2, 0, 2, 0, 0, 25, 0, 29, 9, 0, 0, 0, 1, 1, 1]' : 0.163197}", "{'[0, 2, 1, 2, 0, 2, 0, 0, 25, 0, 29, 9, 0, 0, 0, 1, 1, 1]' : 0.163143}", "{'[0, 2, 1, 2, 0, 2, 0, 0, 25, 0, 29, 9, 0, 0, 0, 1, 1, 1]' : 0.163285}", "{'[0, 2, 1, 2, 0, 2, 0, 0, 25, 0, 29, 9, 0, 0, 0, 1, 1, 1]' : 0.163617}", "{'[0, 2, 1, 2, 0, 2, 0, 0, 25, 0, 29, 9, 0, 0, 0, 1, 1, 1]' : 0.163278}", "{'[0, 2, 1, 2, 0, 2, 0, 0, 25, 0, 29, 9, 0, 0, 0, 1, 1, 1]' : 0.163147}", "{'[0, 2, 1, 2, 0, 2, 0, 0, 25, 0, 29, 9, 0, 0, 0, 1, 1, 1]' : 0.163277}", "{'[0, 2, 1, 2, 0, 2, 0, 0, 25, 0, 29, 9, 0, 0, 0, 1, 1, 1]' : 0.163185}"]
returning from 'run': {'[0, 2, 1, 2, 0, 2, 0, 0, 25, 0, 29, 9, 0, 0, 0, 1, 1, 1]': ([0.16312, 0.163061, 0.163065, 0.163153, 0.163206, 0.16334, 0.16325, 0.163094, 0.16301, 0.163346, 0.163084, 0.163014, 0.163096, 0.163042, 0.16308, 0.163398, 0.163083, 0.163232, 0.163053, 0.163037, 0.163058, 0.163295, 0.163197, 0.163143, 0.163285, 0.163617, 0.163278, 0.163147, 0.163277, 0.163185], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.16312, 0.163061, 0.163065, 0.163153, 0.163206, 0.16334, 0.16325, 0.163094, 0.16301, 0.163346, 0.163084, 0.163014, 0.163096, 0.163042, 0.16308, 0.163398, 0.163083, 0.163232, 0.163053, 0.163037, 0.163058, 0.163295, 0.163197, 0.163143, 0.163285, 0.163617, 0.163278, 0.163147, 0.163277, 0.163185], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 1, 2, 0, 2, 0, 0, 25, 0, 29, 9, 0, 0, 0, 1, 1, 1]': ([0.16312, 0.163061, 0.163065, 0.163153, 0.163206, 0.16334, 0.16325, 0.163094, 0.16301, 0.163346, 0.163084, 0.163014, 0.163096, 0.163042, 0.16308, 0.163398, 0.163083, 0.163232, 0.163053, 0.163037, 0.163058, 0.163295, 0.163197, 0.163143, 0.163285, 0.163617, 0.163278, 0.163147, 0.163277, 0.163185], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [3, 1, 0, 0, 1, 5, 1, 0, 7, 6, 0, 2, 0, 0, 1, 1]
Fixed Factors: {'U1_I': 25, 'SCR': 1}
Testing candidate 27: [3, 1, 0, 0, 1, 5, 1, 0, 25, 7, 6, 0, 2, 0, 0, 1, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	48
        Max loop nest depth: 	5
        Additions: 		1826
        Multiplications: 	738
        Divisions: 		0
        Logical: 		0
        Reads: 			3573
        Writes: 		644
        Comparisons:		48
        Gotos: 			0
        
digraph CFG {
	_JOIN_13523510 [label="_JOIN_13523510None...",shape=box];
	_JOIN_13523510 -> 13596445;
	13512950 [label="13512950  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	13525207 [label="13525207  scv_47=scv_47+A[(i+6)*ny+j]*x_copy[(j-jj)];...",shape=box];
	13595852 [label="13595852  register int cbv_4;...",shape=box];
	13598611 [label="13598611  register int cbv_29;...",shape=box];
	ForLoop13525425 [label="ForLoop13525425  for (j=jj; j<=cbv_23; j=j+7) {...",shape=box];
	ForLoop13525425 -> 13525207;
	ForLoop13525425 -> _JOIN_13525425;
	_JOIN_13523590 [label="_JOIN_13523590None...",shape=box];
	_JOIN_13523590 -> 13523622;
	13579013 [label="13579013  double scv_43, scv_44, scv_45, scv_46, scv_47, scv_48, scv_49, scv_50;...",shape=box];
	13523675 [label="13523675  scv_49=scv_49+A[(i+2)*ny+j]*x_copy[(j-jj)];...",shape=box];
	13580933 [label="13580933  double scv_52;...",shape=box];
	ForLoop13526128 [label="ForLoop13526128  for (k=kkk; k<=cbv_29; k=k+1) {...",shape=box];
	ForLoop13526128 -> 13575437;
	ForLoop13526128 -> _JOIN_13526128;
	13391806 [label="13391806  y[i]=0.0;...",shape=box];
	13598401 [label="13598401  register int cbv_27, cbv_28;...",shape=box];
	_JOIN_13524276 [label="_JOIN_13524276None...",shape=box];
	_JOIN_13524276 -> 13597097;
	_JOIN_13523207 [label="_JOIN_13523207None...",shape=box];
	_JOIN_13523207 -> 13523239;
	13537323 [label="13537323  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7;...",shape=box];
	13524441 [label="13524441  scv_50=scv_50+A[(i+4)*ny+j]*x_copy[(j-jj)];...",shape=box];
	13523972 [label="13523972  scv_49=scv_49+A[(i+2)*ny+j]*x_copy[(j-jj)];...",shape=box];
	13523972 -> _JOIN_13523973;
	13522972 [label="13522972  scv_45=scv_45+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop13521910 [label="ForLoop13521910  for (j=cbv_2; j<=cbv_3; j=j+1) {...",shape=box];
	ForLoop13521910 -> 13539009;
	ForLoop13521910 -> _JOIN_13521910;
	_JOIN_13525888 [label="_JOIN_13525888None...",shape=box];
	_JOIN_13525888 -> _JOIN_13525891;
	ForLoop13521913 [label="ForLoop13521913  for (jj=jjj; jj<=min(ny-1,jjj+48); jj=jj+16) {...",shape=box];
	ForLoop13521913 -> 13512950;
	ForLoop13521913 -> _JOIN_13521913;
	ForLoop13521914 [label="ForLoop13521914  for (jjj=0; jjj<=ny-1; jjj=jjj+64) {...",shape=box];
	ForLoop13521914 -> ForLoop13521913;
	ForLoop13521914 -> _JOIN_13521914;
	_JOIN_13523136 [label="_JOIN_13523136None...",shape=box];
	_JOIN_13523136 -> 13596119;
	ForLoop13525122 [label="ForLoop13525122  for (j=cbv_21; j<=cbv_22; j=j+1) {...",shape=box];
	ForLoop13525122 -> 13525121;
	ForLoop13525122 -> _JOIN_13525122;
	_JOIN_13392102 [label="_JOIN_13392102None...",shape=box];
	_JOIN_13392102 -> 13512848;
	13525590 [label="13525590  scv_46=scv_46+A[(i+7)*ny+j]*x_copy[(j-jj)];...",shape=box];
	13564120 [label="13564120  tmp[it]=scv_10;...",shape=box];
	ForLoop13524739 [label="ForLoop13524739  for (j=cbv_18; j<=cbv_19; j=j+1) {...",shape=box];
	ForLoop13524739 -> 13524738;
	ForLoop13524739 -> _JOIN_13524739;
	_JOIN_13526585 [label="_JOIN_13526585None...",shape=box];
	_JOIN_13526585 -> _JOIN_13526588;
	_JOIN_13526582 [label="_JOIN_13526582None...",shape=box];
	_JOIN_13526582 -> _JOIN_13526583;
	_JOIN_13526583 [label="_JOIN_13526583None...",shape=box];
	_JOIN_13526583 -> 13580945;
	13391374 [label="13391374  int i;...",shape=box];
	_JOIN_13526588 [label="_JOIN_13526588None...",shape=box];
	_JOIN_13526529 [label="_JOIN_13526529None...",shape=box];
	_JOIN_13526529 -> _JOIN_13526530;
	13525887 [label="13525887  scv_46=scv_46+A[(i+7)*ny+j]*x_copy[(j-jj)];...",shape=box];
	13525887 -> _JOIN_13525888;
	_JOIN_13526526 [label="_JOIN_13526526None...",shape=box];
	_JOIN_13526526 -> _JOIN_13526529;
	_JOIN_13525891 [label="_JOIN_13525891None...",shape=box];
	_JOIN_13525891 -> _JOIN_13525893;
	_JOIN_13525893 [label="_JOIN_13525893None...",shape=box];
	_JOIN_13525893 -> ForLoop13526130;
	13597097 [label="13597097  register int cbv_15, cbv_16;...",shape=box];
	13525504 [label="13525504  scv_47=scv_47+A[(i+6)*ny+j]*x_copy[(j-jj)];...",shape=box];
	13525504 -> _JOIN_13525505;
	13598878 [label="13598878  register int cbv_31, cbv_32;...",shape=box];
	ForLoop13524276 [label="ForLoop13524276  for (j=jj; j<=cbv_14; j=j+7) {...",shape=box];
	ForLoop13524276 -> 13524058;
	ForLoop13524276 -> _JOIN_13524276;
	13579031 [label="13579031  tmp[(i+1)]=scv_43;...",shape=box];
	13598075 [label="13598075  register int cbv_24, cbv_25;...",shape=box];
	13526525 [label="13526525  scv_52=scv_52+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	13526525 -> _JOIN_13526526;
	_JOIN_13521910 [label="_JOIN_13521910None...",shape=box];
	_JOIN_13521910 -> _JOIN_13521913;
	13522777 [label="13522777  int i;...",shape=box];
	13522777 -> ForLoop13526132;
	_JOIN_13521913 [label="_JOIN_13521913None...",shape=box];
	_JOIN_13521913 -> _JOIN_13521914;
	_JOIN_13521914 [label="_JOIN_13521914None...",shape=box];
	_JOIN_13521914 -> ForLoop13522774;
	ForLoop13525505 [label="ForLoop13525505  for (j=cbv_24; j<=cbv_25; j=j+1) {...",shape=box];
	ForLoop13525505 -> 13525504;
	ForLoop13525505 -> _JOIN_13525505;
	13392377 [label="13392377  register int cbv_2, cbv_3;...",shape=box];
	_JOIN_13526455 [label="_JOIN_13526455None...",shape=box];
	_JOIN_13526455 -> 13598878;
	13524058 [label="13524058  scv_44=scv_44+A[(i+3)*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop13523973 [label="ForLoop13523973  for (j=cbv_12; j<=cbv_13; j=j+1) {...",shape=box];
	ForLoop13523973 -> 13523972;
	ForLoop13523973 -> _JOIN_13523973;
	13524355 [label="13524355  scv_44=scv_44+A[(i+3)*ny+j]*x_copy[(j-jj)];...",shape=box];
	13524355 -> _JOIN_13524356;
	ForLoop13392102 [label="ForLoop13392102  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop13392102 -> 13392101;
	ForLoop13392102 -> _JOIN_13392102;
	_JOIN_13526530 [label="_JOIN_13526530None...",shape=box];
	_JOIN_13526530 -> ForLoop13526583;
	13525121 [label="13525121  scv_48=scv_48+A[(i+5)*ny+j]*x_copy[(j-jj)];...",shape=box];
	13525121 -> _JOIN_13525122;
	13595234 [label="13595234  register int cbv_2, cbv_3;...",shape=box];
	ForLoop13523893 [label="ForLoop13523893  for (j=jj; j<=cbv_11; j=j+7) {...",shape=box];
	ForLoop13523893 -> 13523675;
	ForLoop13523893 -> _JOIN_13523893;
	ForLoop13524659 [label="ForLoop13524659  for (j=jj; j<=cbv_17; j=j+7) {...",shape=box];
	ForLoop13524659 -> 13524441;
	ForLoop13524659 -> _JOIN_13524659;
	ForLoop13523590 [label="ForLoop13523590  for (j=cbv_9; j<=cbv_10; j=j+1) {...",shape=box];
	ForLoop13523590 -> 13523589;
	ForLoop13523590 -> _JOIN_13523590;
	ForLoop13526530 [label="ForLoop13526530  for (jjj=0; jjj<=ny-1; jjj=jjj+64) {...",shape=box];
	ForLoop13526530 -> ForLoop13526529;
	ForLoop13526530 -> _JOIN_13526530;
	13598969 [label="13598969  register int cbv_33;...",shape=box];
	13512848 [label="13512848  double x_copy[16];...",shape=box];
	13525537 [label="13525537  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	ForLoop13523510 [label="ForLoop13523510  for (j=jj; j<=cbv_8; j=j+7) {...",shape=box];
	ForLoop13523510 -> 13523292;
	ForLoop13523510 -> _JOIN_13523510;
	_JOIN_13526128 [label="_JOIN_13526128None...",shape=box];
	_JOIN_13526128 -> _JOIN_13526130;
	_JOIN_13524659 [label="_JOIN_13524659None...",shape=box];
	_JOIN_13524659 -> 13597423;
	_JOIN_13523893 [label="_JOIN_13523893None...",shape=box];
	_JOIN_13523893 -> 13596771;
	_JOIN_13525425 [label="_JOIN_13525425None...",shape=box];
	_JOIN_13525425 -> 13598075;
	_JOIN_13520846 [label="_JOIN_13520846None...",shape=box];
	_JOIN_13520846 -> 13595234;
	13524738 [label="13524738  scv_50=scv_50+A[(i+4)*ny+j]*x_copy[(j-jj)];...",shape=box];
	13524738 -> _JOIN_13524739;
	13524388 [label="13524388  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	13522928 [label="13522928  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	ForLoop13522774 [label="ForLoop13522774  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop13522774 -> 13595852;
	ForLoop13522774 -> _JOIN_13522774;
	ForLoop13522776 [label="ForLoop13522776  for (it=ii; it<=min(nx-1,ii+63)-31; it=it+32) {...",shape=box];
	ForLoop13522776 -> 13564108;
	ForLoop13522776 -> _JOIN_13522776;
	ForLoop13523207 [label="ForLoop13523207  for (j=cbv_6; j<=cbv_7; j=j+1) {...",shape=box];
	ForLoop13523207 -> 13523206;
	ForLoop13523207 -> _JOIN_13523207;
	ForLoop13522773 [label="ForLoop13522773  for (k=kkk; k<=cbv_4; k=k+1) {...",shape=box];
	ForLoop13522773 -> 13555077;
	ForLoop13522773 -> _JOIN_13522773;
	13526291 [label="13526291  scv_52=scv_52+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	13525154 [label="13525154  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 13391374;
	_JOIN_13526132 [label="_JOIN_13526132None...",shape=box];
	_JOIN_13526132 -> ForLoop13526585;
	_JOIN_13526130 [label="_JOIN_13526130None...",shape=box];
	_JOIN_13526130 -> 13579031;
	13526247 [label="13526247  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	ForLoop13526526 [label="ForLoop13526526  for (j=cbv_31; j<=cbv_32; j=j+1) {...",shape=box];
	ForLoop13526526 -> 13526525;
	ForLoop13526526 -> _JOIN_13526526;
	ForLoop13524356 [label="ForLoop13524356  for (j=cbv_15; j<=cbv_16; j=j+1) {...",shape=box];
	ForLoop13524356 -> 13524355;
	ForLoop13524356 -> _JOIN_13524356;
	_JOIN_13525122 [label="_JOIN_13525122None...",shape=box];
	_JOIN_13525122 -> 13525154;
	13392101 [label="13392101  y[i]=0.0;...",shape=box];
	13392101 -> _JOIN_13392102;
	13523239 [label="13523239  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	_JOIN_13525042 [label="_JOIN_13525042None...",shape=box];
	_JOIN_13525042 -> 13597749;
	13539009 [label="13539009  double scv_8;...",shape=box];
	13596119 [label="13596119  register int cbv_6, cbv_7;...",shape=box];
	_JOIN_13525808 [label="_JOIN_13525808None...",shape=box];
	_JOIN_13525808 -> 13598401;
	13596445 [label="13596445  register int cbv_9, cbv_10;...",shape=box];
	13597423 [label="13597423  register int cbv_18, cbv_19;...",shape=box];
	13580945 [label="13580945  tmp[i]=scv_52;...",shape=box];
	13580945 -> _JOIN_13526585;
	_JOIN_13523973 [label="_JOIN_13523973None...",shape=box];
	_JOIN_13523973 -> 13524005;
	_JOIN_13524739 [label="_JOIN_13524739None...",shape=box];
	_JOIN_13524739 -> 13524771;
	ForLoop13526529 [label="ForLoop13526529  for (jj=jjj; jj<=min(ny-1,jjj+48); jj=jj+16) {...",shape=box];
	ForLoop13526529 -> 13526247;
	ForLoop13526529 -> _JOIN_13526529;
	13524824 [label="13524824  scv_48=scv_48+A[(i+5)*ny+j]*x_copy[(j-jj)];...",shape=box];
	13523206 [label="13523206  scv_45=scv_45+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	13523206 -> _JOIN_13523207;
	13555077 [label="13555077  double scv_9;...",shape=box];
	13523622 [label="13523622  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	ForLoop13392033 [label="ForLoop13392033  for (i=0; i<=cbv_1; i=i+26) {...",shape=box];
	ForLoop13392033 -> 13391806;
	ForLoop13392033 -> _JOIN_13392033;
	13575437 [label="13575437  double scv_42;...",shape=box];
	13597749 [label="13597749  register int cbv_21, cbv_22;...",shape=box];
	13523292 [label="13523292  scv_43=scv_43+A[(i+1)*ny+j]*x_copy[(j-jj)];...",shape=box];
	ForLoop13525888 [label="ForLoop13525888  for (j=cbv_27; j<=cbv_28; j=j+1) {...",shape=box];
	ForLoop13525888 -> 13525887;
	ForLoop13525888 -> _JOIN_13525888;
	13580402 [label="13580402  double scv_51;...",shape=box];
	_JOIN_13522773 [label="_JOIN_13522773None...",shape=box];
	_JOIN_13522773 -> _JOIN_13522774;
	_JOIN_13522774 [label="_JOIN_13522774None...",shape=box];
	_JOIN_13522774 -> 13564120;
	_JOIN_13522776 [label="_JOIN_13522776None...",shape=box];
	_JOIN_13522776 -> 13522777;
	_JOIN_13392033 [label="_JOIN_13392033None...",shape=box];
	_JOIN_13392033 -> 13392377;
	ForLoop13525891 [label="ForLoop13525891  for (jj=jjj; jj<=min(ny-1,jjj+48); jj=jj+16) {...",shape=box];
	ForLoop13525891 -> 13522928;
	ForLoop13525891 -> _JOIN_13525891;
	ForLoop13526455 [label="ForLoop13526455  for (j=jj; j<=cbv_30; j=j+7) {...",shape=box];
	ForLoop13526455 -> 13526291;
	ForLoop13526455 -> _JOIN_13526455;
	ForLoop13525893 [label="ForLoop13525893  for (jjj=0; jjj<=ny-1; jjj=jjj+64) {...",shape=box];
	ForLoop13525893 -> ForLoop13525891;
	ForLoop13525893 -> _JOIN_13525893;
	_JOIN_13524356 [label="_JOIN_13524356None...",shape=box];
	_JOIN_13524356 -> 13524388;
	ForLoop13526582 [label="ForLoop13526582  for (k=kkk; k<=cbv_33; k=k+1) {...",shape=box];
	ForLoop13526582 -> 13580402;
	ForLoop13526582 -> _JOIN_13526582;
	ForLoop13526583 [label="ForLoop13526583  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop13526583 -> 13598969;
	ForLoop13526583 -> _JOIN_13526583;
	ForLoop13525808 [label="ForLoop13525808  for (j=jj; j<=cbv_26; j=j+7) {...",shape=box];
	ForLoop13525808 -> 13525590;
	ForLoop13525808 -> _JOIN_13525808;
	ForLoop13526585 [label="ForLoop13526585  for (i=(min(nx-1,ii+63))-(((min(nx-1,ii+63))-(it)+1)%8)+1; i<=min(nx-1,ii+63); i=i+1) {...",shape=box];
	ForLoop13526585 -> 13580933;
	ForLoop13526585 -> _JOIN_13526585;
	ForLoop13526588 [label="ForLoop13526588  for (ii=0; ii<=nx-1; ii=ii+64) {...",shape=box];
	ForLoop13526588 -> ForLoop13522776;
	ForLoop13526588 -> _JOIN_13526588;
	13596771 [label="13596771  register int cbv_12, cbv_13;...",shape=box];
	13523589 [label="13523589  scv_43=scv_43+A[(i+1)*ny+j]*x_copy[(j-jj)];...",shape=box];
	13523expected=9369846271501.798828
actual=9369846271501.798828
589 -> _JOIN_13523590;
	ForLoop13526132 [label="ForLoop13526132  for (i=it; i<=min(nx-1,ii+63)-7; i=i+8) {...",shape=box];
	ForLoop13526132 -> 13579013;
	ForLoop13526132 -> _JOIN_13526132;
	ForLoop13526130 [label="ForLoop13526130  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop13526130 -> 13598611;
	ForLoop13526130 -> _JOIN_13526130;
	13564108 [label="13564108  double scv_10, scv_11, scv_12, scv_13, scv_14, scv_15, scv_16, scv_17;...",shape=box];
	_JOIN_13525505 [label="_JOIN_13525505None...",shape=box];
	_JOIN_13525505 -> 13525537;
	13524771 [label="13524771  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	ForLoop13525042 [label="ForLoop13525042  for (j=jj; j<=cbv_20; j=j+7) {...",shape=box];
	ForLoop13525042 -> 13524824;
	ForLoop13525042 -> _JOIN_13525042;
	13524005 [label="13524005  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	ForLoop13523136 [label="ForLoop13523136  for (j=jj; j<=cbv_5; j=j+7) {...",shape=box];
	ForLoop13523136 -> 13522972;
	ForLoop13523136 -> _JOIN_13523136;
	ForLoop13520846 [label="ForLoop13520846  for (j=jj; j<=cbv_1; j=j+7) {...",shape=box];
	ForLoop13520846 -> 13537323;
	ForLoop13520846 -> _JOIN_13520846;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest64.exe __orio_perftest64.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest64.exe  
{'[3, 1, 0, 0, 1, 5, 1, 0, 25, 7, 6, 0, 2, 0, 0, 1, 1, 1]' : 0.265446}
{'[3, 1, 0, 0, 1, 5, 1, 0, 25, 7, 6, 0, 2, 0, 0, 1, 1, 1]' : 0.26494}
{'[3, 1, 0, 0, 1, 5, 1, 0, 25, 7, 6, 0, 2, 0, 0, 1, 1, 1]' : 0.265206}
{'[3, 1, 0, 0, 1, 5, 1, 0, 25, 7, 6, 0, 2, 0, 0, 1, 1, 1]' : 0.265518}
{'[3, 1, 0, 0, 1, 5, 1, 0, 25, 7, 6, 0, 2, 0, 0, 1, 1, 1]' : 0.265181}
{'[3, 1, 0, 0, 1, 5, 1, 0, 25, 7, 6, 0, 2, 0, 0, 1, 1, 1]' : 0.265186}
{'[3, 1, 0, 0, 1, 5, 1, 0, 25, 7, 6, 0, 2, 0, 0, 1, 1, 1]' : 0.2651}
{'[3, 1, 0, 0, 1, 5, 1, 0, 25, 7, 6, 0, 2, 0, 0, 1, 1, 1]' : 0.264933}
{'[3, 1, 0, 0, 1, 5, 1, 0, 25, 7, 6, 0, 2, 0, 0, 1, 1, 1]' : 0.265431}
{'[3, 1, 0, 0, 1, 5, 1, 0, 25, 7, 6, 0, 2, 0, 0, 1, 1, 1]' : 0.265124}
{'[3, 1, 0, 0, 1, 5, 1, 0, 25, 7, 6, 0, 2, 0, 0, 1, 1, 1]' : 0.264898}
{'[3, 1, 0, 0, 1, 5, 1, 0, 25, 7, 6, 0, 2, 0, 0, 1, 1, 1]' : 0.265065}
{'[3, 1, 0, 0, 1, 5, 1, 0, 25, 7, 6, 0, 2, 0, 0, 1, 1, 1]' : 0.265298}
{'[3, 1, 0, 0, 1, 5, 1, 0, 25, 7, 6, 0, 2, 0, 0, 1, 1, 1]' : 0.265446}
{'[3, 1, 0, 0, 1, 5, 1, 0, 25, 7, 6, 0, 2, 0, 0, 1, 1, 1]' : 0.265}
{'[3, 1, 0, 0, 1, 5, 1, 0, 25, 7, 6, 0, 2, 0, 0, 1, 1, 1]' : 0.265247}
{'[3, 1, 0, 0, 1, 5, 1, 0, 25, 7, 6, 0, 2, 0, 0, 1, 1, 1]' : 0.265214}
{'[3, 1, 0, 0, 1, 5, 1, 0, 25, 7, 6, 0, 2, 0, 0, 1, 1, 1]' : 0.265179}
{'[3, 1, 0, 0, 1, 5, 1, 0, 25, 7, 6, 0, 2, 0, 0, 1, 1, 1]' : 0.264987}
{'[3, 1, 0, 0, 1, 5, 1, 0, 25, 7, 6, 0, 2, 0, 0, 1, 1, 1]' : 0.265408}
{'[3, 1, 0, 0, 1, 5, 1, 0, 25, 7, 6, 0, 2, 0, 0, 1, 1, 1]' : 0.265708}
{'[3, 1, 0, 0, 1, 5, 1, 0, 25, 7, 6, 0, 2, 0, 0, 1, 1, 1]' : 0.265105}
{'[3, 1, 0, 0, 1, 5, 1, 0, 25, 7, 6, 0, 2, 0, 0, 1, 1, 1]' : 0.265257}
{'[3, 1, 0, 0, 1, 5, 1, 0, 25, 7, 6, 0, 2, 0, 0, 1, 1, 1]' : 0.265049}
{'[3, 1, 0, 0, 1, 5, 1, 0, 25, 7, 6, 0, 2, 0, 0, 1, 1, 1]' : 0.265188}
{'[3, 1, 0, 0, 1, 5, 1, 0, 25, 7, 6, 0, 2, 0, 0, 1, 1, 1]' : 0.265053}
{'[3, 1, 0, 0, 1, 5, 1, 0, 25, 7, 6, 0, 2, 0, 0, 1, 1, 1]' : 0.26513}
{'[3, 1, 0, 0, 1, 5, 1, 0, 25, 7, 6, 0, 2, 0, 0, 1, 1, 1]' : 0.26503}
{'[3, 1, 0, 0, 1, 5, 1, 0, 25, 7, 6, 0, 2, 0, 0, 1, 1, 1]' : 0.264795}
{'[3, 1, 0, 0, 1, 5, 1, 0, 25, 7, 6, 0, 2, 0, 0, 1, 1, 1]' : 0.264863}

out:
 ["{'[3, 1, 0, 0, 1, 5, 1, 0, 25, 7, 6, 0, 2, 0, 0, 1, 1, 1]' : 0.265446}", "{'[3, 1, 0, 0, 1, 5, 1, 0, 25, 7, 6, 0, 2, 0, 0, 1, 1, 1]' : 0.26494}", "{'[3, 1, 0, 0, 1, 5, 1, 0, 25, 7, 6, 0, 2, 0, 0, 1, 1, 1]' : 0.265206}", "{'[3, 1, 0, 0, 1, 5, 1, 0, 25, 7, 6, 0, 2, 0, 0, 1, 1, 1]' : 0.265518}", "{'[3, 1, 0, 0, 1, 5, 1, 0, 25, 7, 6, 0, 2, 0, 0, 1, 1, 1]' : 0.265181}", "{'[3, 1, 0, 0, 1, 5, 1, 0, 25, 7, 6, 0, 2, 0, 0, 1, 1, 1]' : 0.265186}", "{'[3, 1, 0, 0, 1, 5, 1, 0, 25, 7, 6, 0, 2, 0, 0, 1, 1, 1]' : 0.2651}", "{'[3, 1, 0, 0, 1, 5, 1, 0, 25, 7, 6, 0, 2, 0, 0, 1, 1, 1]' : 0.264933}", "{'[3, 1, 0, 0, 1, 5, 1, 0, 25, 7, 6, 0, 2, 0, 0, 1, 1, 1]' : 0.265431}", "{'[3, 1, 0, 0, 1, 5, 1, 0, 25, 7, 6, 0, 2, 0, 0, 1, 1, 1]' : 0.265124}", "{'[3, 1, 0, 0, 1, 5, 1, 0, 25, 7, 6, 0, 2, 0, 0, 1, 1, 1]' : 0.264898}", "{'[3, 1, 0, 0, 1, 5, 1, 0, 25, 7, 6, 0, 2, 0, 0, 1, 1, 1]' : 0.265065}", "{'[3, 1, 0, 0, 1, 5, 1, 0, 25, 7, 6, 0, 2, 0, 0, 1, 1, 1]' : 0.265298}", "{'[3, 1, 0, 0, 1, 5, 1, 0, 25, 7, 6, 0, 2, 0, 0, 1, 1, 1]' : 0.265446}", "{'[3, 1, 0, 0, 1, 5, 1, 0, 25, 7, 6, 0, 2, 0, 0, 1, 1, 1]' : 0.265}", "{'[3, 1, 0, 0, 1, 5, 1, 0, 25, 7, 6, 0, 2, 0, 0, 1, 1, 1]' : 0.265247}", "{'[3, 1, 0, 0, 1, 5, 1, 0, 25, 7, 6, 0, 2, 0, 0, 1, 1, 1]' : 0.265214}", "{'[3, 1, 0, 0, 1, 5, 1, 0, 25, 7, 6, 0, 2, 0, 0, 1, 1, 1]' : 0.265179}", "{'[3, 1, 0, 0, 1, 5, 1, 0, 25, 7, 6, 0, 2, 0, 0, 1, 1, 1]' : 0.264987}", "{'[3, 1, 0, 0, 1, 5, 1, 0, 25, 7, 6, 0, 2, 0, 0, 1, 1, 1]' : 0.265408}", "{'[3, 1, 0, 0, 1, 5, 1, 0, 25, 7, 6, 0, 2, 0, 0, 1, 1, 1]' : 0.265708}", "{'[3, 1, 0, 0, 1, 5, 1, 0, 25, 7, 6, 0, 2, 0, 0, 1, 1, 1]' : 0.265105}", "{'[3, 1, 0, 0, 1, 5, 1, 0, 25, 7, 6, 0, 2, 0, 0, 1, 1, 1]' : 0.265257}", "{'[3, 1, 0, 0, 1, 5, 1, 0, 25, 7, 6, 0, 2, 0, 0, 1, 1, 1]' : 0.265049}", "{'[3, 1, 0, 0, 1, 5, 1, 0, 25, 7, 6, 0, 2, 0, 0, 1, 1, 1]' : 0.265188}", "{'[3, 1, 0, 0, 1, 5, 1, 0, 25, 7, 6, 0, 2, 0, 0, 1, 1, 1]' : 0.265053}", "{'[3, 1, 0, 0, 1, 5, 1, 0, 25, 7, 6, 0, 2, 0, 0, 1, 1, 1]' : 0.26513}", "{'[3, 1, 0, 0, 1, 5, 1, 0, 25, 7, 6, 0, 2, 0, 0, 1, 1, 1]' : 0.26503}", "{'[3, 1, 0, 0, 1, 5, 1, 0, 25, 7, 6, 0, 2, 0, 0, 1, 1, 1]' : 0.264795}", "{'[3, 1, 0, 0, 1, 5, 1, 0, 25, 7, 6, 0, 2, 0, 0, 1, 1, 1]' : 0.264863}"]
returning from 'run': {'[3, 1, 0, 0, 1, 5, 1, 0, 25, 7, 6, 0, 2, 0, 0, 1, 1, 1]': ([0.265446, 0.26494, 0.265206, 0.265518, 0.265181, 0.265186, 0.2651, 0.264933, 0.265431, 0.265124, 0.264898, 0.265065, 0.265298, 0.265446, 0.265, 0.265247, 0.265214, 0.265179, 0.264987, 0.265408, 0.265708, 0.265105, 0.265257, 0.265049, 0.265188, 0.265053, 0.26513, 0.26503, 0.264795, 0.264863], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.265446, 0.26494, 0.265206, 0.265518, 0.265181, 0.265186, 0.2651, 0.264933, 0.265431, 0.265124, 0.264898, 0.265065, 0.265298, 0.265446, 0.265, 0.265247, 0.265214, 0.265179, 0.264987, 0.265408, 0.265708, 0.265105, 0.265257, 0.265049, 0.265188, 0.265053, 0.26513, 0.26503, 0.264795, 0.264863], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[3, 1, 0, 0, 1, 5, 1, 0, 25, 7, 6, 0, 2, 0, 0, 1, 1, 1]': ([0.265446, 0.26494, 0.265206, 0.265518, 0.265181, 0.265186, 0.2651, 0.264933, 0.265431, 0.265124, 0.264898, 0.265065, 0.265298, 0.265446, 0.265, 0.265247, 0.265214, 0.265179, 0.264987, 0.265408, 0.265708, 0.265105, 0.265257, 0.265049, 0.265188, 0.265053, 0.26513, 0.26503, 0.264795, 0.264863], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [2, 2, 2, 1, 4, 1, 1, 1, 28, 29, 0, 0, 2, 0, 0, 0]
Fixed Factors: {'U1_I': 25, 'SCR': 1}
Testing candidate 28: [2, 2, 2, 1, 4, 1, 1, 1, 25, 28, 29, 0, 0, 2, 0, 1, 0, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	108
        Max loop nest depth: 	6
        Additions: 		4467
        Multiplications: 	1980
        Divisions: 		0
        Logical: 		0
        Reads: 			8600
        Writes: 		1449
        Comparisons:		108
        Gotos: 			0
        
digraph CFG {
	13859183 [label="13859183  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	13859183 -> _JOIN_13859185;
	_JOIN_13859190 [label="_JOIN_13859190None...",shape=box];
	_JOIN_13859190 -> _JOIN_13859191;
	ForLoop13859044 [label="ForLoop13859044  for (jj=jjj; jj<=min(ny-1,jjj+480); jj=jj+32) {...",shape=box];
	ForLoop13859044 -> 13858098;
	ForLoop13859044 -> _JOIN_13859044;
	14003630 [label="14003630  double scv_63;...",shape=box];
	13997605 [label="13997605  tmp[(i+20)]=scv_34;...",shape=box];
	14005147 [label="14005147  tmp[i]=scv_64;...",shape=box];
	14005147 -> _JOIN_13859188;
	ForLoop13859186 [label="ForLoop13859186  for (kkk=0; kkk<=ny-1; kkk=kkk+64) {...",shape=box];
	ForLoop13859186 -> ForLoop13859185;
	ForLoop13859186 -> _JOIN_13859186;
	ForLoop13859185 [label="ForLoop13859185  for (kk=kkk; kk<=min(ny-1,kkk+32); kk=kk+32) {...",shape=box];
	ForLoop13859185 -> 13859107;
	ForLoop13859185 -> _JOIN_13859185;
	_JOIN_13859152 [label="_JOIN_13859152None...",shape=box];
	_JOIN_13859152 -> 13859183;
	ForLoop13859188 [label="ForLoop13859188  for (i=(min(nx-1,ii+31))-(((min(nx-1,ii+31))-(ii)+1)%29)+1; i<=min(nx-1,ii+31); i=i+1) {...",shape=box];
	ForLoop13859188 -> 14005135;
	ForLoop13859188 -> _JOIN_13859188;
	13859107 [label="13859107  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	13859107 -> ForLoop13859152;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 13599308;
	_JOIN_13855204 [label="_JOIN_13855204None...",shape=box];
	_JOIN_13855204 -> _JOIN_13855206;
	ForLoop13857078 [label="ForLoop13857078  for (k=kk; k<=min(ny-1,kk+31); k=k+1) {...",shape=box];
	ForLoop13857078 -> 13961880;
	ForLoop13857078 -> _JOIN_13857078;
	13961880 [label="13961880  double scv_33;...",shape=box];
	13820968 [label="13820968  int i;...",shape=box];
	13820968 -> ForLoop13857983;
	_JOIN_13857979 [label="_JOIN_13857979None...",shape=box];
	_JOIN_13857979 -> _JOIN_13857981;
	_JOIN_13600036 [label="_JOIN_13600036None...",shape=box];
	_JOIN_13600036 -> 13820935;
	_JOIN_13859186 [label="_JOIN_13859186None...",shape=box];
	_JOIN_13859186 -> 14005147;
	_JOIN_13859185 [label="_JOIN_13859185None...",shape=box];
	_JOIN_13859185 -> _JOIN_13859186;
	_JOIN_13855206 [label="_JOIN_13855206None...",shape=box];
	_JOIN_13855206 -> ForLoop13857981;
	_JOIN_13859188 [label="_JOIN_13859188None...",shape=box];
	_JOIN_13859188 -> _JOIN_13859190;
	_JOIN_13855202 [label="_JOIN_13855202None...",shape=box];
	_JOIN_13855202 -> _JOIN_13855204;
	13858098 [label="13858098  for (j=jj; j<=min(ny-1,jj+31); j=j+1) ...",shape=box];
	13858098 -> ForLoop13859042;
	ForLoop13599967 [label="ForLoop13599967  for (i=0; i<=ny-26; i=i+26) {...",shape=box];
	ForLoop13599967 -> 13599740;
	ForLoop13599967 -> _JOIN_13599967;
	13599308 [label="13599308  int i;...",shape=box];
	13599308 -> ForLoop13599967;
	ForLoop13855202 [label="ForLoop13855202  for (jt=jj; jt<=min(ny-1,jj+31)-31; jt=jt+32) {...",shape=box];
	ForLoop13855202 -> 13903618;
	ForLoop13855202 -> _JOIN_13855202;
	ForLoop13859152 [label="ForLoop13859152  for (k=kk; k<=min(ny-1,kk+31); k=k+1) {...",shape=box];
	ForLoop13859152 -> 14003630;
	ForLoop13859152 -> _JOIN_13859152;
	13855268 [label="13855268  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	ForLoop13859190 [label="ForLoop13859190  for (ii=iii; ii<=min(nx-1,iii+32); ii=ii+32) {...",shape=box];
	ForLoop13859190 -> 13820968;
	ForLoop13859190 -> _JOIN_13859190;
	13997587 [label="13997587  double scv_34, scv_35, scv_36, scv_37, scv_38, scv_39, scv_40, scv_41;...",shape=box];
	13903618 [label="13903618  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	ForLoop13857979 [label="ForLoop13857979  for (kk=kkk; kk<=min(ny-1,kkk+32); kk=kk+32) {...",shape=box];
	ForLoop13857979 -> 13855268;
	ForLoop13857979 -> _JOIN_13857979;
	13857109 [label="13857109  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	13858141 [label="13858141  scv_64=scv_64+A[i*ny+jt]*x_copy[(jt-jj)];...",shape=box];
	_JOIN_13859044 [label="_JOIN_13859044None...",shape=box];
	_JOIN_13859044 -> _JOIN_13859045;
	_JOIN_13859045 [label="_JOIN_13859045None...",shape=box];
	_JOIN_13859045 -> ForLoop13859186;
	_JOIN_13859042 [label="_JOIN_13859042None...",shape=box];
	_JOIN_13859042 -> _JOIN_13859044;
	_JOIN_13857983 [label="_JOIN_13857983None...",shape=box];
	_JOIN_13857983 -> ForLoop13859188;
	13821308 [label="13821308  for (j=jj; j<=min(ny-1,jj+31); j=j+1) ...",shape=box];
	_JOIN_13857078 [label="_JOIN_13857078None...",shape=box];
	_JOIN_13857078 -> 13857109;
	13600035 [label="13600035  y[i]=0.0;...",shaexpected=0.000000
actual=9369846271501.798828
pe=box];
	13600035 -> _JOIN_13600036;
	14005135 [label="14005135  double scv_64;...",shape=box];
	ForLoop13859191 [label="ForLoop13859191  for (iii=0; iii<=nx-1; iii=iii+64) {...",shape=box];
	ForLoop13859191 -> ForLoop13859190;
	ForLoop13859191 -> _JOIN_13859191;
	_JOIN_13599967 [label="_JOIN_13599967None...",shape=box];
	_JOIN_13599967 -> ForLoop13600036;
	ForLoop13855204 [label="ForLoop13855204  for (jj=jjj; jj<=min(ny-1,jjj+480); jj=jj+32) {...",shape=box];
	ForLoop13855204 -> 13821308;
	ForLoop13855204 -> _JOIN_13855204;
	ForLoop13600036 [label="ForLoop13600036  for (i=ny-((ny-(0))%26); i<=ny-1; i=i+1) ...",shape=box];
	ForLoop13600036 -> 13600035;
	ForLoop13600036 -> _JOIN_13600036;
	ForLoop13855206 [label="ForLoop13855206  for (jjj=0; jjj<=ny-1; jjj=jjj+512) {...",shape=box];
	ForLoop13855206 -> ForLoop13855204;
	ForLoop13855206 -> _JOIN_13855206;
	13820935 [label="13820935  double x_copy[32];...",shape=box];
	ForLoop13857981 [label="ForLoop13857981  for (kkk=0; kkk<=ny-1; kkk=kkk+64) {...",shape=box];
	ForLoop13857981 -> ForLoop13857979;
	ForLoop13857981 -> _JOIN_13857981;
	_JOIN_13859191 [label="_JOIN_13859191None...",shape=box];
	ForLoop13857983 [label="ForLoop13857983  for (i=ii; i<=min(nx-1,ii+31)-28; i=i+29) {...",shape=box];
	ForLoop13857983 -> 13997587;
	ForLoop13857983 -> _JOIN_13857983;
	_JOIN_13857981 [label="_JOIN_13857981None...",shape=box];
	_JOIN_13857981 -> 13997605;
	13599740 [label="13599740  y[i]=0.0;...",shape=box];
	ForLoop13859045 [label="ForLoop13859045  for (jjj=0; jjj<=ny-1; jjj=jjj+512) {...",shape=box];
	ForLoop13859045 -> ForLoop13859044;
	ForLoop13859045 -> _JOIN_13859045;
	ForLoop13859042 [label="ForLoop13859042  for (jt=jj; jt<=min(ny-1,jj+31)-31; jt=jt+32) {...",shape=box];
	ForLoop13859042 -> 13858141;
	ForLoop13859042 -> _JOIN_13859042;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest65.exe __orio_perftest65.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest65.exe  
{'[2, 2, 2, 1, 4, 1, 1, 1, 25, 28, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.304762}
{'[2, 2, 2, 1, 4, 1, 1, 1, 25, 28, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.303349}
{'[2, 2, 2, 1, 4, 1, 1, 1, 25, 28, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.302818}
{'[2, 2, 2, 1, 4, 1, 1, 1, 25, 28, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.308336}
{'[2, 2, 2, 1, 4, 1, 1, 1, 25, 28, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.30256}
{'[2, 2, 2, 1, 4, 1, 1, 1, 25, 28, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.303367}
{'[2, 2, 2, 1, 4, 1, 1, 1, 25, 28, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.303349}
{'[2, 2, 2, 1, 4, 1, 1, 1, 25, 28, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.304041}
{'[2, 2, 2, 1, 4, 1, 1, 1, 25, 28, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.311399}
{'[2, 2, 2, 1, 4, 1, 1, 1, 25, 28, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.305464}
{'[2, 2, 2, 1, 4, 1, 1, 1, 25, 28, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.305738}
{'[2, 2, 2, 1, 4, 1, 1, 1, 25, 28, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.308771}
{'[2, 2, 2, 1, 4, 1, 1, 1, 25, 28, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.303786}
{'[2, 2, 2, 1, 4, 1, 1, 1, 25, 28, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.308809}
{'[2, 2, 2, 1, 4, 1, 1, 1, 25, 28, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.303865}
{'[2, 2, 2, 1, 4, 1, 1, 1, 25, 28, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.30373}
{'[2, 2, 2, 1, 4, 1, 1, 1, 25, 28, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.303304}
{'[2, 2, 2, 1, 4, 1, 1, 1, 25, 28, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.303205}
{'[2, 2, 2, 1, 4, 1, 1, 1, 25, 28, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.310349}
{'[2, 2, 2, 1, 4, 1, 1, 1, 25, 28, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.303244}
{'[2, 2, 2, 1, 4, 1, 1, 1, 25, 28, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.303691}
{'[2, 2, 2, 1, 4, 1, 1, 1, 25, 28, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.303288}
{'[2, 2, 2, 1, 4, 1, 1, 1, 25, 28, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.303415}
{'[2, 2, 2, 1, 4, 1, 1, 1, 25, 28, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.307757}
{'[2, 2, 2, 1, 4, 1, 1, 1, 25, 28, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.302839}
{'[2, 2, 2, 1, 4, 1, 1, 1, 25, 28, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.303408}
{'[2, 2, 2, 1, 4, 1, 1, 1, 25, 28, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.303505}
{'[2, 2, 2, 1, 4, 1, 1, 1, 25, 28, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.304229}
{'[2, 2, 2, 1, 4, 1, 1, 1, 25, 28, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.309073}
{'[2, 2, 2, 1, 4, 1, 1, 1, 25, 28, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.303048}

out:
 ["{'[2, 2, 2, 1, 4, 1, 1, 1, 25, 28, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.304762}", "{'[2, 2, 2, 1, 4, 1, 1, 1, 25, 28, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.303349}", "{'[2, 2, 2, 1, 4, 1, 1, 1, 25, 28, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.302818}", "{'[2, 2, 2, 1, 4, 1, 1, 1, 25, 28, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.308336}", "{'[2, 2, 2, 1, 4, 1, 1, 1, 25, 28, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.30256}", "{'[2, 2, 2, 1, 4, 1, 1, 1, 25, 28, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.303367}", "{'[2, 2, 2, 1, 4, 1, 1, 1, 25, 28, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.303349}", "{'[2, 2, 2, 1, 4, 1, 1, 1, 25, 28, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.304041}", "{'[2, 2, 2, 1, 4, 1, 1, 1, 25, 28, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.311399}", "{'[2, 2, 2, 1, 4, 1, 1, 1, 25, 28, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.305464}", "{'[2, 2, 2, 1, 4, 1, 1, 1, 25, 28, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.305738}", "{'[2, 2, 2, 1, 4, 1, 1, 1, 25, 28, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.308771}", "{'[2, 2, 2, 1, 4, 1, 1, 1, 25, 28, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.303786}", "{'[2, 2, 2, 1, 4, 1, 1, 1, 25, 28, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.308809}", "{'[2, 2, 2, 1, 4, 1, 1, 1, 25, 28, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.303865}", "{'[2, 2, 2, 1, 4, 1, 1, 1, 25, 28, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.30373}", "{'[2, 2, 2, 1, 4, 1, 1, 1, 25, 28, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.303304}", "{'[2, 2, 2, 1, 4, 1, 1, 1, 25, 28, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.303205}", "{'[2, 2, 2, 1, 4, 1, 1, 1, 25, 28, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.310349}", "{'[2, 2, 2, 1, 4, 1, 1, 1, 25, 28, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.303244}", "{'[2, 2, 2, 1, 4, 1, 1, 1, 25, 28, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.303691}", "{'[2, 2, 2, 1, 4, 1, 1, 1, 25, 28, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.303288}", "{'[2, 2, 2, 1, 4, 1, 1, 1, 25, 28, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.303415}", "{'[2, 2, 2, 1, 4, 1, 1, 1, 25, 28, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.307757}", "{'[2, 2, 2, 1, 4, 1, 1, 1, 25, 28, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.302839}", "{'[2, 2, 2, 1, 4, 1, 1, 1, 25, 28, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.303408}", "{'[2, 2, 2, 1, 4, 1, 1, 1, 25, 28, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.303505}", "{'[2, 2, 2, 1, 4, 1, 1, 1, 25, 28, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.304229}", "{'[2, 2, 2, 1, 4, 1, 1, 1, 25, 28, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.309073}", "{'[2, 2, 2, 1, 4, 1, 1, 1, 25, 28, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.303048}"]
returning from 'run': {'[2, 2, 2, 1, 4, 1, 1, 1, 25, 28, 29, 0, 0, 2, 0, 1, 0, 0]': ([0.304762, 0.303349, 0.302818, 0.308336, 0.30256, 0.303367, 0.303349, 0.304041, 0.311399, 0.305464, 0.305738, 0.308771, 0.303786, 0.308809, 0.303865, 0.30373, 0.303304, 0.303205, 0.310349, 0.303244, 0.303691, 0.303288, 0.303415, 0.307757, 0.302839, 0.303408, 0.303505, 0.304229, 0.309073, 0.303048], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.304762, 0.303349, 0.302818, 0.308336, 0.30256, 0.303367, 0.303349, 0.304041, 0.311399, 0.305464, 0.305738, 0.308771, 0.303786, 0.308809, 0.303865, 0.30373, 0.303304, 0.303205, 0.310349, 0.303244, 0.303691, 0.303288, 0.303415, 0.307757, 0.302839, 0.303408, 0.303505, 0.304229, 0.309073, 0.303048], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[2, 2, 2, 1, 4, 1, 1, 1, 25, 28, 29, 0, 0, 2, 0, 1, 0, 0]': ([0.304762, 0.303349, 0.302818, 0.308336, 0.30256, 0.303367, 0.303349, 0.304041, 0.311399, 0.305464, 0.305738, 0.308771, 0.303786, 0.308809, 0.303865, 0.30373, 0.303304, 0.303205, 0.310349, 0.303244, 0.303691, 0.303288, 0.303415, 0.307757, 0.302839, 0.303408, 0.303505, 0.304229, 0.309073, 0.303048], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [3, 5, 2, 0, 3, 0, 0, 1, 26, 0, 2, 2, 0, 0, 0, 0]
Fixed Factors: {'U1_I': 25, 'SCR': 1}
Testing candidate 29: [3, 5, 2, 0, 3, 0, 0, 1, 25, 26, 0, 2, 2, 0, 0, WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = jjj
1, 0, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	131
        Max loop nest depth: 	4
        Additions: 		2238
        Multiplications: 	600
        Divisions: 		0
        Logical: 		0
        Reads: 			4789
        Writes: 		1030
        Comparisons:		131
        Gotos: 			0
        
digraph CFG {
	14187050 [label="14187050  double scv_39, scv_40, scv_41;...",shape=box];
	_JOIN_14166921 [label="_JOIN_14166921None...",shape=box];
	_JOIN_14166921 -> ForLoop14167001;
	14192616 [label="14192616  double scv_102;...",shape=box];
	ForLoop14052021 [label="ForLoop14052021  for (i=ny-((ny-(0))%26); i<=ny-1; i=i+1) ...",shape=box];
	ForLoop14052021 -> 14052020;
	ForLoop14052021 -> _JOIN_14052021;
	ForLoop14167275 [label="ForLoop14167275  for (k=(min(ny-1,kk+31))-(((min(ny-1,kk+31))-(kk)+1)%3)+1; k<=min(ny-1,kk+31); k=k+1) {...",shape=box];
	ForLoop14167275 -> 14195865;
	ForLoop14167275 -> _JOIN_14167275;
	14188284 [label="14188284  double scv_54;...",shape=box];
	ForLoop14164535 [label="ForLoop14164535  for (k=(min(ny-1,kk+31))-(((min(ny-1,kk+31))-(kk)+1)%3)+1; k<=min(ny-1,kk+31); k=k+1) {...",shape=box];
	ForLoop14164535 -> 14192255;
	ForLoop14164535 -> _JOIN_14164535;
	14189728 [label="14189728  double scv_70;...",shape=box];
	_JOIN_14164809 [label="_JOIN_14164809None...",shape=box];
	_JOIN_14164809 -> 14164841;
	_JOIN_14164455 [label="_JOIN_14164455None...",shape=box];
	_JOIN_14164455 -> ForLoop14164535;
	14189929 [label="14189929  double scv_71, scv_72, scv_73;...",shape=box];
	ForLoop14160973 [label="ForLoop14160973  for (k=(min(ny-1,kk+31))-(((min(ny-1,kk+31))-(kk)+1)%3)+1; k<=min(ny-1,kk+31); k=k+1) {...",shape=box];
	ForLoop14160973 -> 14187562;
	ForLoop14160973 -> _JOIN_14160973;
	ForLoop14163439 [label="ForLoop14163439  for (k=(min(ny-1,kk+31))-(((min(ny-1,kk+31))-(kk)+1)%3)+1; k<=min(ny-1,kk+31); k=k+1) {...",shape=box];
	ForLoop14163439 -> 14190811;
	ForLoop14163439 -> _JOIN_14163439;
	ForLoop14163633 [label="ForLoop14163633  for (k=kk; k<=min(ny-1,kk+31)-2; k=k+3) {...",shape=box];
	ForLoop14163633 -> 14191012;
	ForLoop14163633 -> _JOIN_14163633;
	14186110 [label="14186110  double scv_38;...",shape=box];
	14193900 [label="14193900  double scv_115, scv_116, scv_117;...",shape=box];
	14195143 [label="14195143  double scv_130;...",shape=box];
	_JOIN_14160893 [label="_JOIN_14160893None...",shape=box];
	_JOIN_14160893 -> ForLoop14160973;
	ForLoop14167001 [label="ForLoop14167001  for (k=(min(ny-1,kk+31))-(((min(ny-1,kk+31))-(kk)+1)%3)+1; k<=min(ny-1,kk+31); k=k+1) {...",shape=box];
	ForLoop14167001 -> 14195504;
	ForLoop14167001 -> _JOIN_14167001;
	14196587 [label="14196587  double scv_146;...",shape=box];
	14189006 [label="14189006  double scv_62;...",shape=box];
	14215229 [label="14215229  double scv_174, scv_175, scv_176;...",shape=box];
	14167033 [label="14167033  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	14190651 [label="14190651  double scv_79, scv_80, scv_81;...",shape=box];
	14187201 [label="14187201  double scv_42;...",shape=box];
	_JOIN_14052021 [label="_JOIN_14052021None...",shape=box];
	_JOIN_14052021 -> 14153797;
	14165115 [label="14165115  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	ForLoop14166373 [label="ForLoop14166373  for (k=kk; k<=min(ny-1,kk+31)-2; k=k+3) {...",shape=box];
	ForLoop14166373 -> 14194622;
	ForLoop14166373 -> _JOIN_14166373;
	14194983 [label="14194983  double scv_127, scv_128, scv_129;...",shape=box];
	_JOIN_14168230 [label="_JOIN_14168230None...",shape=box];
	_JOIN_14168230 -> 14216109;
	_JOIN_14167001 [label="_JOIN_14167001None...",shape=box];
	_JOIN_14167001 -> 14167033;
	_JOIN_14168232 [label="_JOIN_14168232None...",shape=box];
	_JOIN_14168232 -> _JOIN_14168235;
	_JOIN_14160699 [label="_JOIN_14160699None...",shape=box];
	_JOIN_14160699 -> 14160731;
	14195865 [label="14195865  double scv_138;...",shape=box];
	ForLoop14166179 [label="ForLoop14166179  for (k=(min(ny-1,kk+31))-(((min(ny-1,kk+31))-(kk)+1)%3)+1; k<=min(ny-1,kk+31); k=k+1) {...",shape=box];
	ForLoop14166179 -> 14194421;
	ForLoop14166179 -> _JOIN_14166179;
	_JOIN_14163713 [label="_JOIN_14163713None...",shape=box];
	_JOIN_14163713 -> 14163745;
	_JOIN_14161989 [label="_JOIN_14161989None...",shape=box];
	_JOIN_14161989 -> ForLoop14162069;
	14165663 [label="14165663  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	14216097 [label="14216097  double scv_178;...",shape=box];
	_JOIN_14164181 [label="_JOIN_14164181None...",shape=box];
	_JOIN_14164181 -> ForLoop14164261;
	_JOIN_14162263 [label="_JOIN_14162263None...",shape=box];
	_JOIN_14162263 -> ForLoop14162343;
	ForLoop14161715 [label="ForLoop14161715  for (k=kk; k<=min(ny-1,kk+31)-2; k=k+3) {...",shape=box];
	ForLoop14161715 -> 14188485;
	ForLoop14161715 -> _JOIN_14161715;
	_JOIN_14166179 [label="_JOIN_14166179None...",shape=box];
	_JOIN_14166179 -> 14166211;
	14052020 [label="14052020  y[i]=0.0;...",shape=box];
	14052020 -> _JOIN_14052021;
	_JOIN_14162069 [label="_JOIN_14162069None...",shape=box];
	_JOIN_14162069 -> 14162101;
	14154834 [label="14154834  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	14166759 [label="14166759  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	ForLoop14160625 [label="ForLoop14160625  for (k=kk; k<=min(ny-1,kk+31)-2; k=k+3) {...",shape=box];
	ForLoop14160625 -> 14187050;
	ForLoop14160625 -> _JOIN_14160625;
	ForLoop14167964 [label="ForLoop14167964  for (j=jj; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop14167964 -> 14167963;
	ForLoop14167964 -> _JOIN_14167964;
	_JOIN_14165825 [label="_JOIN_14165825None...",shape=box];
	_JOIN_14165825 -> ForLoop14165905;
	ForLoop14163359 [label="ForLoop14163359  for (k=kk; k<=min(ny-1,kk+31)-2; k=k+3) {...",shape=box];
	ForLoop14163359 -> 14190651;
	ForLoop14163359 -> _JOIN_14163359;
	ForLoop14162537 [label="ForLoop14162537  for (k=kk; k<=min(ny-1,kk+31)-2; k=k+3) {...",shape=box];
	ForLoop14162537 -> 14189568;
	ForLoop14162537 -> _JOIN_14162537;
	ForLoop14168235 [label="ForLoop14168235  for (ii=0; ii<=nx-1; ii=ii+64) {...",shape=box];
	ForLoop14168235 -> ForLoop14159398;
	ForLoop14168235 -> _JOIN_14168235;
	14188124 [label="14188124  double scv_51, scv_52, scv_53;...",shape=box];
	14187923 [label="14187923  double scv_50;...",shape=box];
	_JOIN_14165357 [label="_JOIN_14165357None...",shape=box];
	_JOIN_14165357 -> 14165389;
	14192095 [label="14192095  double scv_95, scv_96, scv_97;...",shape=box];
	ForLoop14161795 [label="ForLoop14161795  for (k=(min(ny-1,kk+31))-(((min(ny-1,kk+31))-(kk)+1)%3)+1; k<=min(ny-1,kk+31); k=k+1) {...",shape=box];
	ForLoop14161795 -> 14188645;
	ForLoop14161795 -> _JOIN_14161795;
	ForLoop14165551 [label="ForLoop14165551  for (k=kk; k<=min(ny-1,kk+31)-2; k=k+3) {...",shape=box];
	ForLoop14165551 -> 14193539;
	ForLoop14165551 -> _JOIN_14165551;
	14194622 [label="14194622  double scv_123, scv_124, scv_125;...",shape=box];
	ForLoop14162343 [label="ForLoop14162343  for (k=(min(ny-1,kk+31))-(((min(ny-1,kk+31))-(kk)+1)%3)+1; k<=min(ny-1,kk+31); k=k+1) {...",shape=box];
	ForLoop14162343 -> 14189367;
	ForLoop14162343 -> _JOIN_14162343;
	_JOIN_14164261 [label="_JOIN_14164261None...",shape=box];
	_JOIN_14164261 -> 14164293;
	14163745 [label="14163745  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	_JOIN_14160466 [label="_JOIN_14160466None...",shape=box];
	_JOIN_14160466 -> _JOIN_14160468;
	14165389 [label="14165389  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	_JOIN_14163907 [label="_JOIN_14163907None...",shape=box];
	_JOIN_14163907 -> ForLoop14163987;
	14193178 [label="14193178  double scv_107, scv_108, scv_109;...",shape=box];
	_JOIN_14160468 [label="_JOIN_14160468None...",shape=box];
	_JOIN_14160468 -> ForLoop14167857;
	ForLoop14167965 [label="ForLoop14167965  for (jj=0; jj<=ny-1; jj=jj+256) {...",shape=box];
	ForLoop14167965 -> ForLoop14167964;
	ForLoop14167965 -> _JOIN_14167965;
	_JOIN_14161441 [label="_JOIN_14161441None...",shape=box];
	_JOIN_14161441 -> ForLoop14161521;
	_JOIN_14167469 [label="_JOIN_14167469None...",shape=box];
	_JOIN_14167469 -> ForLoop14167549;
	_JOIN_14163165 [label="_JOIN_14163165None...",shape=box];
	_JOIN_14163165 -> 14163197;
	14194060 [label="14194060  double scv_118;...",shape=box];
	14192977 [label="14192977  double scv_106;...",shape=box];
	_JOIN_14165551 [label="_JOIN_14165551None...",shape=box];
	_JOIN_14165551 -> ForLoop14165631;
	14194782 [label="14194782  double scv_126;...",shape=box];
	ForLoop14161989 [label="ForLoop14161989  for (k=kk; k<=min(ny-1,kk+31)-2; k=k+3) {...",shape=box];
	ForLoop14161989 -> 14188846;
	ForLoop14161989 -> _JOIN_14161989;
	_JOIN_14163085 [label="_JOIN_14163085None...",shape=box];
	_JOIN_14163085 -> ForLoop14163165;
	ForLoop14164809 [label="ForLoop14164809  for (k=(min(ny-1,kk+31))-(((min(ny-1,kk+31))-(kk)+1)%3)+1; k<=min(ny-1,kk+31); k=k+1) {...",shape=box];
	ForLoop14164809 -> 14192616;
	ForLoop14164809 -> _JOIN_14164809;
	14167963 [label="14167963  scv_178=scv_178+A[i*ny+j]*x[j];...",shape=box];
	14167963 -> _JOIN_14167964;
	14166211 [label="14166211  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	14191012 [label="14191012  double scv_83, scv_84, scv_85;...",shape=box];
	_JOIN_14166647 [label="_JOIN_14166647None...",shape=box];
	_JOIN_14166647 -> ForLoop14166727;
	14153797 [label="14153797  double x_copy;...",shape=box];
	14167307 [label="14167307  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	ForLoop14163085 [label="ForLoop14163085  for (k=kk; k<=min(ny-1,kk+31)-2; k=k+3) {...",shape=box];
	ForLoop14163085 -> 14190290;
	ForLoop14163085 -> _JOIN_14163085;
	14192456 [label="14192456  double scv_99, scv_100, scv_101;...",shape=box];
	_JOIN_14167823 [label="_JOIN_14167823None...",shape=box];
	_JOIN_14167823 -> 14167855;
	ForLoop14159362 [label="ForLoop14159362  for (k=(min(ny-1,kk+31))-(((min(ny-1,kk+31))-(kk)+1)%3)+1; k<=min(ny-1,kk+31); k=k+1) {...",shape=box];
	ForLoop14159362 -> 14176799;
	ForLoop14159362 -> _JOIN_14159362;
	14195344 [label="14195344  double scv_131, scv_132, scv_133;...",shape=box];
	14215380 [label="14215380  double scv_177;...",shape=box];
	14189207 [label="14189207  double scv_63, scv_64, scv_65;...",shape=box];
	ForLoop14168232 [label="ForLoop14168232  for (i=(min(nx-1,ii+63))-(((min(nx-1,ii+63))-(it)+1)%27)+1; i<=min(nx-1,ii+63); i=i+1) {...",shape=box];
	ForLoop14168232 -> 14216097;
	ForLoop14168232 -> _JOIN_14168232;
	ForLoop14163987 [label="ForLoop14163987  for (k=(min(ny-1,kk+31))-(((min(ny-1,kk+31))-(kk)+1)%3)+1; k<=min(ny-1,kk+31); k=k+1) {...",shape=box];
	ForLoop14163987 -> 14191533;
	ForLoop14163987 -> _JOIN_14163987;
	ForLoop14164181 [label="ForLoop14164181  for (k=kk; k<=min(ny-1,kk+31)-2; k=k+3) {...",shape=box];
	ForLoop14164181 -> 14191734;
	ForLoop14164181 -> _JOIN_14164181;
	14195504 [label="14195504  double scv_134;...",shape=box];
	14164019 [label="14164019  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	14159399 [label="14159399  int i;...",shape=box];
	14159399 -> ForLoop14167859;
	ForLoop14166099 [label="ForLoop14166099  for (k=kk; k<=min(ny-1,kk+31)-2; k=k+3) {...",shape=box];
	ForLoop14166099 -> 14194261;
	ForLoop14166099 -> _JOIN_14166099;
	14161005 [label="14161005  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	14189367 [label="14189367  double scv_66;...",shape=box];
	14190089 [label="14190089  double scv_74;...",shape=box];
	_JOIN_14166727 [label="_JOIN_14166727None...",shape=box];
	_JOIN_14166727 -> 14166759;
	14159394 [label="14159394  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	14159394 -> _JOIN_14159396;
	_JOIN_14166373 [label="_JOIN_14166373None...",shape=box];
	_JOIN_14166373 -> ForLoop14166453;
	14196066 [label="14196066  double scv_139, scv_140, scv_141;...",shape=box];
	14191172 [label="14191172  double scv_86;...",shape=box];
	14193699 [label="14193699  double scv_114;...",shape=box];
	ForLoop14164261 [label="ForLoop14164261  for (k=(min(ny-1,kk+31))-(((min(ny-1,kk+31))-(kk)+1)%3)+1; k<=min(ny-1,kk+31); k=k+1) {...",shape=box];
	ForLoop14164261 -> 14191894;
	ForLoop14164261 -> _JOIN_14164261;
	ForLoop14161441 [label="ForLoop14161441  for (k=kk; k<=min(ny-1,kk+31)-2; k=k+3) {...",shape=box];
	ForLoop14161441 -> 14188124;
	ForLoop14161441 -> _JOIN_14161441;
	_JOIN_14163987 [label="_JOIN_14163987None...",shape=box];
	_JOIN_14163987 -> 14164019;
	_JOIN_14158295 [label="_JOIN_14158295None...",shape=box];
	_JOIN_14158295 -> ForLoop14159362;
	ForLoop14167823 [label="ForLoop14167823  for (k=(min(ny-1,kk+31))-(((min(ny-1,kk+31))-(kk)+1)%3)+1; k<=min(ny-1,kk+31); k=k+1) {...",shape=box];
	ForLoop14167823 -> 14196587;
	ForLoop14167823 -> _JOIN_14167823;
	_JOIN_14163633 [label="_JOIN_14163633None...",shape=box];
	_JOIN_14163633 -> ForLoop14163713;
	14194261 [label="14194261  double scv_119, scv_120, scv_121;...",shape=box];
	_JOIN_14051952 [label="_JOIN_14051952None...",shape=box];
	_JOIN_14051952 -> ForLoop14052021;
	ForLoop14162617 [label="ForLoop14162617  for (k=(min(ny-1,kk+31))-(((min(ny-1,kk+31))-(kk)+1)%3)+1; k<=min(ny-1,kk+31); k=k+1) {...",shape=box];
	ForLoop14162617 -> 14189728;
	ForLoop14162617 -> _JOIN_14162617;
	14175159 [label="14175159  double scv_2, scv_3, scv_4;...",shape=box];
	ForLoop14165277 [label="ForLoop14165277  for (k=kk; k<=min(ny-1,kk+31)-2; k=k+3) {...",shape=box];
	ForLoop14165277 -> 14193178;
	ForLoop14165277 -> _JOIN_14165277;
	14167581 [label="14167581  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	_JOIN_14161167 [label="_JOIN_14161167None...",shape=box];
	_JOIN_14161167 -> ForLoop14161247;
	_JOIN_14167743 [label="_JOIN_14167743None...",shape=box];
	_JOIN_14167743 -> ForLoop14167823;
	_JOIN_14163359 [label="_JOIN_14163359None...",shape=box];
	_JOIN_14163359 -> ForLoop14163439;
	ForLoop14160466 [label="ForLoop14160466  for (j=jj; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop14160466 -> 14186110;
	ForLoop14160466 -> _JOIN_14160466;
	14187763 [label="14187763  double scv_47, scv_48, scv_49;...",shape=box];
	ForLoop14160468 [label="ForLoop14160468  for (jj=0; jj<=ny-1; jj=jj+256) {...",shape=box];
	ForLoop14160468 -> ForLoop14160466;
	ForLoop14160468 -> _JOIN_14160468;
	14176799 [label="14176799  double scv_5;...",shape=box];
	_JOIN_14168196 [label="_JOIN_14168196None...",shape=box];
	_JOIN_14168196 -> 14168228;
	_JOIN_14162617 [label="_JOIN_14162617None...",shape=box];
	_JOIN_14162617 -> 14162649;
	_JOIN_14164729 [label="_JOIN_14164729None...",shape=box];
	_JOIN_14164729 -> ForLoop14164809;
	14051725 [label="14051725  y[i]=0.0;...",shape=box];
	14189568 [label="14189568  double scv_67, scv_68, scv_69;...",shape=box];
	14166485 [label="14166485  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	14192817 [label="14192817  double scv_103, scv_104, scv_105;...",shape=box];
	ForLoop14165905 [label="ForLoop14165905  for (k=(min(ny-1,kk+31))-(((min(ny-1,kk+31))-(kk)+1)%3)+1; k<=min(ny-1,kk+31); k=k+1) {...",shape=box];
	ForLoop14165905 -> 14194060;
	ForLoop14165905 -> _JOIN_14165905;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 14051293;
	14161279 [label="14161279  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	ForLoop14051952 [label="ForLoop14051952  for (i=0; i<=ny-26; i=i+26) {...",shape=box];
	ForLoop14051952 -> 14051725;
	ForLoop14051952 -> _JOIN_14051952;
	ForLoop14165825 [label="ForLoop14165825  for (k=kk; k<=min(ny-1,kk+31)-2; k=k+3) {...",shape=box];
	ForLoop14165825 -> 14193900;
	ForLoop14165825 -> _JOIN_14165825;
	14162101 [label="14162101  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	ForLoop14161167 [label="ForLoop14161167  for (k=kk; k<=min(ny-1,kk+31)-2; k=k+3) {...",shape=box];
	ForLoop14161167 -> 14187763;
	ForLoop14161167 -> _JOIN_14161167;
	14188846 [label="14188846  double scv_59, scv_60, scv_61;...",shape=box];
	_JOIN_14167195 [label="_JOIN_14167195None...",shape=box];
	_JOIN_14167195 -> ForLoop14167275;
	_JOIN_14167965 [label="_JOIN_14167965None...",shape=box];
	_JOIN_14167965 -> ForLoop14168230;
	ForLoop14166921 [label="ForLoop14166921  for (k=kk; k<=min(ny-1,kk+31)-2; k=k+3) {...",shape=box];
	ForLoop14166921 -> 14195344;
	ForLoop14166921 -> _JOIN_14166921;
	_JOIN_14162811 [label="_JOIN_14162811None...",shape=box];
	_JOIN_14162811 -> ForLoop14162891;
	14191373 [label="14191373  double scv_87, scv_88, scv_89;...",shape=box];
	14184108 [label="14184108  tmp[it]=scv_6;...",shape=box];
	ForLoop14159398 [label="ForLoop14159398  for (it=ii; it<=min(nx-1,ii+63)-31; it=it+32) {...",shape=box];
	ForLoop14159398 -> 14184096;
	ForLoop14159398 -> _JOIN_14159398;
	14190811 [label="14190811  double scv_82;...",shape=box];
	14169677 [label="14169677  double scv_1;...",shape=box];
	ForLoop14167549 [label="ForLoop14167549  for (k=(min(ny-1,kk+31))-(((min(ny-1,kk+31))-(kk)+1)%3)+1; k<=min(ny-1,kk+31); k=k+1) {...",shape=box];
	ForLoop14167549 -> 14196226;
	ForLoop14167549 -> _JOIN_14167549;
	ForLoop14163165 [label="ForLoop14163165  for (k=(min(ny-1,kk+31))-(((min(ny-1,kk+31))-(kk)+1)%3)+1; k<=min(ny-1,kk+31); k=k+1) {...",shape=box];
	ForLoop14163165 -> 14190450;
	ForLoop14163165 -> _JOIN_14163165;
	14162375 [label="14162375  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	ForLoop14159396 [label="ForLoop14159396  for (kk=0; kk<=ny-1; kk=kk+32) {...",shape=box];
	ForLoop14159396 -> 14154834;
	ForLoop14159396 -> _JOIN_14159396;
	ForLoop14163907 [label="ForLoop14163907  for (k=kk; k<=min(ny-1,kk+31)-2; k=k+3) {...",shape=box];
	ForLoop14163907 -> 14191373;
	ForLoop14163907 -> _JOIN_14163907;
	_JOIN_14165905 [label="_JOIN_14165905None...",shape=box];
	_JOIN_14165905 -> 14165937;
	14192255 [label="14192255  double scv_98;...",shape=box];
	14187562 [label="14187562  double scv_46;...",shape=box];
	14196226 [label="14196226  double scv_142;...",shape=box];
	ForLoop14160699 [label="ForLoop14160699  for (k=(min(ny-1,kk+31))-(((min(ny-1,kk+31))-(kk)+1)%3)+1; k<=min(ny-1,kk+31); k=k+1) {...",shape=box];
	ForLoop14160699 -> 14187201;
	ForLoop14160699 -> _JOIN_14160699;
	14162649 [label="14162649  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	_JOIN_14162537 [label="_JOIN_14162537None...",shape=box];
	_JOIN_14162537 -> ForLoop14162617;
	14160512 [label="14160512  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	14188645 [label="14188645  double scv_58;...",shape=box];
	_JOIN_14159396 [label="_JOIN_14159396None...",shape=box];
	_JOIN_14159396 -> 14184108;
	14168228 [label="14168228  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	14168228 -> _JOIN_14168230;
	ForLoop14162069 [label="ForLoop14162069  for (k=(min(ny-1,kk+31))-(((min(ny-1,kk+31))-(kk)+1)%3)+1; k<=min(ny-1,kk+31); k=k+1) {...",shape=box];
	ForLoop14162069 -> 14189006;
	ForLoop14162069 -> _JOIN_14162069;
	_JOIN_14162343 [label="_JOIN_14162343None...",shape=box];
	_JOIN_14162343 -> 14162375;
	_JOIN_14159398 [label="_JOIN_14159398None...",shape=box];
	_JOIN_14159398 -> 14159399;
	ForLoop14167743 [label="ForLoop14167743  for (k=kk; k<=min(ny-1,kk+31)-2; k=k+3) {...",shape=box];
	ForLoop14167743 -> 14196427;
	ForLoop14167743 -> _JOIN_14167743;
	14161553 [label="14161553  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	_JOIN_14167859 [label="_JOIN_14167859None...",shape=box];
	_JOIN_14167859 -> ForLoop14168232;
	_JOIN_14161715 [label="_JOIN_14161715None...",shape=box];
	_JOIN_14161715 -> ForLoop14161795;
	14196427 [label="14196427  double scv_143, scv_144, scv_145;...",shape=box];
	_JOIN_14168122 [label="_JOIN_14168122None...",shape=box];
	_JOIN_14168122 -> ForLoop14168196;
	14161827 [label="14161827  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	ForLoop14164455 [label="ForLoop14164455  for (k=kk; k<=min(ny-1,kk+31)-2; k=k+3) {...",shape=box];
	ForLoop14164455 -> 14192095;
	ForLoop14164455 -> _JOIN_14164455;
	_JOIN_14163439 [label="_JOIN_14163439None...",shape=box];
	_JOIN_14163439 -> 14163471;
	14188485 [label="14188485  double scv_55, scv_56, scv_57;...",shape=box];
	ForLoop14164729 [label="ForLoop14164729  for (k=kk; k<=min(ny-1,kk+31)-2; k=k+3) {...",shape=box];
	ForLoop14164729 -> 14192456;
	ForLoop14164729 -> _JOIN_14164729;
	_JOIN_14167964 [label="_JOIN_14167964None...",shape=box];
	_JOIN_14167964 -> _JOIN_14167965;
	ForLoop14166727 [label="ForLoop14166727  for (k=(min(ny-1,kk+31))-(((min(ny-1,kk+31))-(kk)+1)%3)+1; k<=min(ny-1,kk+31); k=k+1) {...",shape=box];
	ForLoop14166727 -> 14195143;
	ForLoop14166727 -> _JOIN_14166727;
	ForLoop14154790 [label="ForLoop14154790  for (jj=0; jj<=ny-1; jj=jj+256) {...",shape=box];
	ForLoop14154790 -> ForLoop14154789;
	ForLoop14154790 -> _JOIN_14154790;
	ForLoop14166647 [label="ForLoop14166647  for (k=kk; k<=min(ny-1,kk+31)-2; k=k+3) {...",shape=box];
	ForLoop14166647 -> 14194983;
	ForLoop14166647 -> _JOIN_14166647;
	14214304 [label="14214304  tmp[(i+20)]=scv_147;...",shape=box];
	ForLoop14163713 [label="ForLoop14163713  for (k=(min(ny-1,kk+31))-(((min(ny-1,kk+31))-(kk)+1)%3)+1; k<=min(ny-1,kk+31); k=k+1) {...",shape=box];
	ForLoop14163713 -> 14191172;
	ForLoop14163713 -> _JOIN_14163713;
	_JOIN_14159362 [label="_JOIN_14159362None...",shape=box];
	_JOIN_14159362 -> 14159394;
	ForLoop14162263 [label="ForLoop14162263  for (k=kk; k<=min(ny-1,kk+31)-2; k=k+3) {...",shape=box];
	ForLoop14162263 -> 14189207;
	ForLoop14162263 -> _JOIN_14162263;
	14195705 [label="14195705  double scv_135, scv_136, scv_137;...",shape=box];
	ForLoop14162811 [label="ForLoop14162811  for (k=kk; k<=min(ny-1,kk+31)-2; k=k+3) {...",shape=box];
	ForLoop14162811 -> 14189929;
	ForLoop14162811 -> _JOIN_14162811;
	_JOIN_14167857 [label="_JOIN_14167857None...",shape=box];
	_JOIN_14167857 -> 14214304;
	ForLoop14167195 [label="ForLoop14167195  for (k=kk; k<=min(ny-1,kk+31)-2; k=k+3) {...",shape=box];
	ForLoop14167195 -> 14195705;
	ForLoop14167195 -> _JOIN_14167195;
	ForLoop14160893 [label="ForLoop14160893  for (k=kk; k<=min(ny-1,kk+31)-2; k=k+3) {...",shape=box];
	ForLoop14160893 -> 14187402;
	ForLoop14160893 -> _JOIN_14160893;
	ForLoop14165003 [label="ForLoop14165003  for (k=kk; k<=min(ny-1,kk+31)-2; k=k+3) {...",shape=box];
	ForLoop14165003 -> 14192817;
	ForLoop14165003 -> _JOIN_14165003;
	_JOIN_14167549 [label="_JOIN_14167549None...",shape=box];
	_JOIN_14167549 -> 14167581;
	ForLoop14166453 [label="ForLoop14166453  for (k=(min(ny-1,kk+31))-(((min(ny-1,kk+31))-(kk)+1)%3)+1; k<=min(ny-1,kk+31); k=k+1) {...",shape=box];
	ForLoop14166453 -> 14194782;
	ForLoop14166453 -> _JOIN_14166453;
	_JOIN_14160625 [label="_JOIN_14160625None...",shape=box];
	_JOIN_14160625 -> ForLoop14160699;
	_JOIN_14161247 [label="_JOIN_14161247None...",shape=box];
	_JOIN_14161247 -> 14161279;
	14193539 [label="14193539  double scv_111, scv_112, scv_113;...",shape=box];
	14216109 [label="14216109  tmp[i]=scv_178;...",shape=box];
	14216109 -> _JOIN_14168232;
	ForLoop14165631 [label="ForLoop14165631  for (k=(min(ny-1,kk+31))-(((min(ny-1,kk+31))-(kk)+1)%3)+1; k<=min(ny-1,kk+31); k=k+1) {...",shape=box];
	ForLoop14165631 -> 14193699;
	ForLoop14165631 -> _JOIN_14165631;
	14184096 [label="14184096  double scv_6, scv_7, scv_8, scv_9, scv_10, scv_11, scv_12, scv_13;...",shape=box];
	_JOIN_14164535 [label="_JOIN_14164535None...",shape=box];
	_JOIN_14164535 -> 14164567;
	14163197 [label="14163197  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	ForLoop14167859 [label="ForLoop14167859  for (i=it; i<=min(nx-1,ii+63)-26; i=i+27) {...",shape=box];
	ForLoop14167859 -> 14214286;
	ForLoop14167859 -> _JOIN_14167859;
	ForLoop14165357 [label="ForLoop14165357  for (k=(min(ny-1,kk+31))-(((min(ny-1,kk+31))-(kk)+1)%3)+1; k<=min(ny-1,kk+31); k=k+1) {...",shape=box];
	ForLoop14165357 -> 14193338;
	ForLoop14165357 -> _JOIN_14165357;
	_JOIN_14154789 [label="_JOIN_14154789None...",shape=box];
	_JOIN_14154789 -> _JOIN_14154790;
	14162923 [label="14162923  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	_JOIN_14160973 [label="_JOIN_14160973None...",shape=box];
	_JOIN_14160973 -> 14161005;
	_JOIN_14165003 [label="_JOIN_14165003None...",shape=box];
	_JOIN_14165003 -> ForLoop14165083;
	14191894 [label="14191894  double scv_94;...",shape=box];
	_JOIN_14161795 [label="_JOIN_14161795None...",shape=box];
	_JOIN_14161795 -> 14161827;
	14164567 [label="14164567  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	ForLoop14167857 [label="ForLoop14167857  for (kk=0; kk<=ny-1; kk=kk+32) {...",shape=box];
	ForLoop14167857 -> 14160512;
	ForLoop14167857 -> _JOIN_14167857;
	_JOIN_14168235 [label="_JOIN_14168235None...",shape=box];
	14193338 [label="14193338  double scv_110;...",shape=box];
	14190290 [label="14190290  double scv_75, scv_76, scv_77;...",shape=box];
	14187402 [label="14187402  double scv_43, scv_44, scv_45;...",shape=box];
	_JOIN_14166453 [label="_JOIN_14166453None...",shape=box];
	_JOIN_expected=9369846271501.798828
actual=9369846271501.798828
14166453 -> 14166485;
	ForLoop14154789 [label="ForLoop14154789  for (j=jj; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop14154789 -> 14169677;
	ForLoop14154789 -> _JOIN_14154789;
	_JOIN_14165083 [label="_JOIN_14165083None...",shape=box];
	_JOIN_14165083 -> 14165115;
	_JOIN_14165277 [label="_JOIN_14165277None...",shape=box];
	_JOIN_14165277 -> ForLoop14165357;
	14168009 [label="14168009  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	ForLoop14161247 [label="ForLoop14161247  for (k=(min(ny-1,kk+31))-(((min(ny-1,kk+31))-(kk)+1)%3)+1; k<=min(ny-1,kk+31); k=k+1) {...",shape=box];
	ForLoop14161247 -> 14187923;
	ForLoop14161247 -> _JOIN_14161247;
	_JOIN_14166099 [label="_JOIN_14166099None...",shape=box];
	_JOIN_14166099 -> ForLoop14166179;
	ForLoop14167469 [label="ForLoop14167469  for (k=kk; k<=min(ny-1,kk+31)-2; k=k+3) {...",shape=box];
	ForLoop14167469 -> 14196066;
	ForLoop14167469 -> _JOIN_14167469;
	_JOIN_14162891 [label="_JOIN_14162891None...",shape=box];
	_JOIN_14162891 -> 14162923;
	_JOIN_14161521 [label="_JOIN_14161521None...",shape=box];
	_JOIN_14161521 -> 14161553;
	ForLoop14168122 [label="ForLoop14168122  for (k=kk; k<=min(ny-1,kk+31)-2; k=k+3) {...",shape=box];
	ForLoop14168122 -> 14215229;
	ForLoop14168122 -> _JOIN_14168122;
	14191533 [label="14191533  double scv_90;...",shape=box];
	14163471 [label="14163471  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	ForLoop14158295 [label="ForLoop14158295  for (k=kk; k<=min(ny-1,kk+31)-2; k=k+3) {...",shape=box];
	ForLoop14158295 -> 14175159;
	ForLoop14158295 -> _JOIN_14158295;
	_JOIN_14165631 [label="_JOIN_14165631None...",shape=box];
	_JOIN_14165631 -> 14165663;
	14164293 [label="14164293  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	14167855 [label="14167855  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	14167855 -> _JOIN_14167857;
	14165937 [label="14165937  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	14190450 [label="14190450  double scv_78;...",shape=box];
	14160731 [label="14160731  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	_JOIN_14167275 [label="_JOIN_14167275None...",shape=box];
	_JOIN_14167275 -> 14167307;
	14051293 [label="14051293  int i;...",shape=box];
	14051293 -> ForLoop14051952;
	_JOIN_14154790 [label="_JOIN_14154790None...",shape=box];
	_JOIN_14154790 -> ForLoop14159396;
	ForLoop14162891 [label="ForLoop14162891  for (k=(min(ny-1,kk+31))-(((min(ny-1,kk+31))-(kk)+1)%3)+1; k<=min(ny-1,kk+31); k=k+1) {...",shape=box];
	ForLoop14162891 -> 14190089;
	ForLoop14162891 -> _JOIN_14162891;
	ForLoop14161521 [label="ForLoop14161521  for (k=(min(ny-1,kk+31))-(((min(ny-1,kk+31))-(kk)+1)%3)+1; k<=min(ny-1,kk+31); k=k+1) {...",shape=box];
	ForLoop14161521 -> 14188284;
	ForLoop14161521 -> _JOIN_14161521;
	14191734 [label="14191734  double scv_91, scv_92, scv_93;...",shape=box];
	ForLoop14165083 [label="ForLoop14165083  for (k=(min(ny-1,kk+31))-(((min(ny-1,kk+31))-(kk)+1)%3)+1; k<=min(ny-1,kk+31); k=k+1) {...",shape=box];
	ForLoop14165083 -> 14192977;
	ForLoop14165083 -> _JOIN_14165083;
	ForLoop14168196 [label="ForLoop14168196  for (k=(min(ny-1,kk+31))-(((min(ny-1,kk+31))-(kk)+1)%3)+1; k<=min(ny-1,kk+31); k=k+1) {...",shape=box];
	ForLoop14168196 -> 14215380;
	ForLoop14168196 -> _JOIN_14168196;
	14164841 [label="14164841  for (k=kk; k<=min(ny-1,kk+31); k=k+1) ...",shape=box];
	14214286 [label="14214286  double scv_147, scv_148, scv_149, scv_150, scv_151, scv_152, scv_153, scv_154;...",shape=box];
	14194421 [label="14194421  double scv_122;...",shape=box];
	ForLoop14168230 [label="ForLoop14168230  for (kk=0; kk<=ny-1; kk=kk+32) {...",shape=box];
	ForLoop14168230 -> 14168009;
	ForLoop14168230 -> _JOIN_14168230;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest66.exe __orio_perftest66.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest66.exe  
{'[3, 5, 2, 0, 3, 0, 0, 1, 25, 26, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.188308}
{'[3, 5, 2, 0, 3, 0, 0, 1, 25, 26, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.187453}
{'[3, 5, 2, 0, 3, 0, 0, 1, 25, 26, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.187284}
{'[3, 5, 2, 0, 3, 0, 0, 1, 25, 26, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.187339}
{'[3, 5, 2, 0, 3, 0, 0, 1, 25, 26, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.187067}
{'[3, 5, 2, 0, 3, 0, 0, 1, 25, 26, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.187561}
{'[3, 5, 2, 0, 3, 0, 0, 1, 25, 26, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.187365}
{'[3, 5, 2, 0, 3, 0, 0, 1, 25, 26, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.187293}
{'[3, 5, 2, 0, 3, 0, 0, 1, 25, 26, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.187555}
{'[3, 5, 2, 0, 3, 0, 0, 1, 25, 26, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.187458}
{'[3, 5, 2, 0, 3, 0, 0, 1, 25, 26, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.18745}
{'[3, 5, 2, 0, 3, 0, 0, 1, 25, 26, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.187037}
{'[3, 5, 2, 0, 3, 0, 0, 1, 25, 26, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.187568}
{'[3, 5, 2, 0, 3, 0, 0, 1, 25, 26, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.187248}
{'[3, 5, 2, 0, 3, 0, 0, 1, 25, 26, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.187358}
{'[3, 5, 2, 0, 3, 0, 0, 1, 25, 26, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.186967}
{'[3, 5, 2, 0, 3, 0, 0, 1, 25, 26, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.187551}
{'[3, 5, 2, 0, 3, 0, 0, 1, 25, 26, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.187647}
{'[3, 5, 2, 0, 3, 0, 0, 1, 25, 26, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.187365}
{'[3, 5, 2, 0, 3, 0, 0, 1, 25, 26, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.187072}
{'[3, 5, 2, 0, 3, 0, 0, 1, 25, 26, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.187684}
{'[3, 5, 2, 0, 3, 0, 0, 1, 25, 26, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.187236}
{'[3, 5, 2, 0, 3, 0, 0, 1, 25, 26, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.187255}
{'[3, 5, 2, 0, 3, 0, 0, 1, 25, 26, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.187352}
{'[3, 5, 2, 0, 3, 0, 0, 1, 25, 26, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.187893}
{'[3, 5, 2, 0, 3, 0, 0, 1, 25, 26, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.187322}
{'[3, 5, 2, 0, 3, 0, 0, 1, 25, 26, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.187482}
{'[3, 5, 2, 0, 3, 0, 0, 1, 25, 26, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.187892}
{'[3, 5, 2, 0, 3, 0, 0, 1, 25, 26, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.187139}
{'[3, 5, 2, 0, 3, 0, 0, 1, 25, 26, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.18705}

out:
 ["{'[3, 5, 2, 0, 3, 0, 0, 1, 25, 26, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.188308}", "{'[3, 5, 2, 0, 3, 0, 0, 1, 25, 26, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.187453}", "{'[3, 5, 2, 0, 3, 0, 0, 1, 25, 26, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.187284}", "{'[3, 5, 2, 0, 3, 0, 0, 1, 25, 26, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.187339}", "{'[3, 5, 2, 0, 3, 0, 0, 1, 25, 26, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.187067}", "{'[3, 5, 2, 0, 3, 0, 0, 1, 25, 26, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.187561}", "{'[3, 5, 2, 0, 3, 0, 0, 1, 25, 26, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.187365}", "{'[3, 5, 2, 0, 3, 0, 0, 1, 25, 26, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.187293}", "{'[3, 5, 2, 0, 3, 0, 0, 1, 25, 26, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.187555}", "{'[3, 5, 2, 0, 3, 0, 0, 1, 25, 26, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.187458}", "{'[3, 5, 2, 0, 3, 0, 0, 1, 25, 26, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.18745}", "{'[3, 5, 2, 0, 3, 0, 0, 1, 25, 26, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.187037}", "{'[3, 5, 2, 0, 3, 0, 0, 1, 25, 26, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.187568}", "{'[3, 5, 2, 0, 3, 0, 0, 1, 25, 26, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.187248}", "{'[3, 5, 2, 0, 3, 0, 0, 1, 25, 26, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.187358}", "{'[3, 5, 2, 0, 3, 0, 0, 1, 25, 26, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.186967}", "{'[3, 5, 2, 0, 3, 0, 0, 1, 25, 26, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.187551}", "{'[3, 5, 2, 0, 3, 0, 0, 1, 25, 26, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.187647}", "{'[3, 5, 2, 0, 3, 0, 0, 1, 25, 26, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.187365}", "{'[3, 5, 2, 0, 3, 0, 0, 1, 25, 26, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.187072}", "{'[3, 5, 2, 0, 3, 0, 0, 1, 25, 26, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.187684}", "{'[3, 5, 2, 0, 3, 0, 0, 1, 25, 26, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.187236}", "{'[3, 5, 2, 0, 3, 0, 0, 1, 25, 26, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.187255}", "{'[3, 5, 2, 0, 3, 0, 0, 1, 25, 26, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.187352}", "{'[3, 5, 2, 0, 3, 0, 0, 1, 25, 26, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.187893}", "{'[3, 5, 2, 0, 3, 0, 0, 1, 25, 26, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.187322}", "{'[3, 5, 2, 0, 3, 0, 0, 1, 25, 26, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.187482}", "{'[3, 5, 2, 0, 3, 0, 0, 1, 25, 26, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.187892}", "{'[3, 5, 2, 0, 3, 0, 0, 1, 25, 26, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.187139}", "{'[3, 5, 2, 0, 3, 0, 0, 1, 25, 26, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.18705}"]
returning from 'run': {'[3, 5, 2, 0, 3, 0, 0, 1, 25, 26, 0, 2, 2, 0, 0, 1, 0, 0]': ([0.188308, 0.187453, 0.187284, 0.187339, 0.187067, 0.187561, 0.187365, 0.187293, 0.187555, 0.187458, 0.18745, 0.187037, 0.187568, 0.187248, 0.187358, 0.186967, 0.187551, 0.187647, 0.187365, 0.187072, 0.187684, 0.187236, 0.187255, 0.187352, 0.187893, 0.187322, 0.187482, 0.187892, 0.187139, 0.18705], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.188308, 0.187453, 0.187284, 0.187339, 0.187067, 0.187561, 0.187365, 0.187293, 0.187555, 0.187458, 0.18745, 0.187037, 0.187568, 0.187248, 0.187358, 0.186967, 0.187551, 0.187647, 0.187365, 0.187072, 0.187684, 0.187236, 0.187255, 0.187352, 0.187893, 0.187322, 0.187482, 0.187892, 0.187139, 0.18705], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[3, 5, 2, 0, 3, 0, 0, 1, 25, 26, 0, 2, 2, 0, 0, 1, 0, 0]': ([0.188308, 0.187453, 0.187284, 0.187339, 0.187067, 0.187561, 0.187365, 0.187293, 0.187555, 0.187458, 0.18745, 0.187037, 0.187568, 0.187248, 0.187358, 0.186967, 0.187551, 0.187647, 0.187365, 0.187072, 0.187684, 0.187236, 0.187255, 0.187352, 0.187893, 0.187322, 0.187482, 0.187892, 0.187139, 0.18705], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [1, 5, 5, 6, 0, 0, 1, 0, 1, 0, 2, 1, 1, 0, 1, 1]
Fixed Factors: {'U1_I': 25, 'SCR': 1}
Testing candidate 30: [1, 5, 5, 6, 0, 0, 1, 0, 25, 1, 0, 2, 1, 1, 0, 1, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	26
        Max loop nest depth: 	5
        Additions: 		677
        Multiplications: 	264
        Divisions: 		0
        Logical: 		0
        Reads: 			1432
        Writes: 		296
        Comparisons:		26
        Gotos: 			0
        
digraph CFG {
	14230363 [label="14230363  y[i]=0.0;...",shape=box];
	14230363 -> _JOIN_14230364;
	_JOIN_14321929 [label="_JOIN_14321929None...",shape=box];
	_JOIN_14321929 -> 14348316;
	ForLoop14322004 [label="ForLoop14322004  for (ii=iii; ii<=min(nx-1,iii+2032); ii=ii+16) {...",shape=box];
	ForLoop14322004 -> ForLoop14320533;
	ForLoop14322004 -> _JOIN_14322004;
	ForLoop14322005 [label="ForLoop14322005  for (iii=0; iii<=nx-1; iii=iii+2048) {...",shape=box];
	ForLoop14322005 -> ForLoop14322004;
	ForLoop14322005 -> _JOIN_14322005;
	14325231 [label="14325231  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	ForLoop14321997 [label="ForLoop14321997  for (k=cbv_11; k<=cbv_12; k=k+1) {...",shape=box];
	ForLoop14321997 -> 14336974;
	ForLoop14321997 -> _JOIN_14321997;
	ForLoop14322001 [label="ForLoop14322001  for (i=(min(nx-1,ii+15))-(((min(nx-1,ii+15))-(it)+1)%2)+1; i<=min(nx-1,ii+15); i=i+1) {...",shape=box];
	ForLoop14322001 -> 14337758;
	ForLoop14322001 -> _JOIN_14322001;
	14334562 [label="14334562  double scv_29, scv_30, scv_31;...",shape=box];
	ForLoop14321371 [label="ForLoop14321371  for (k=kk; k<=cbv_6; k=k+3) {...",shape=box];
	ForLoop14321371 -> 14334562;
	ForLoop14321371 -> _JOIN_14321371;
	_JOIN_14230295 [label="_JOIN_14230295None...",shape=box];
	_JOIN_14230295 -> 14230639;
	14337758 [label="14337758  double scv_39;...",shape=box];
	14321610 [label="14321610  scv_39=scv_39+A[i*ny+jt]*x_copy[(jt-jj)];...",shape=box];
	14321831 [label="14321831  int k;...",shape=box];
	_JOIN_14321164 [label="_JOIN_14321164None...",shape=box];
	_JOIN_14321164 -> ForLoop14321468;
	14230639 [label="14230639  register int cbv_2, cbv_3;...",shape=box];
	14320613 [label="14320613  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	14332574 [label="14332574  double scv_13, scv_14, scv_15, scv_16, scv_17, scv_18, scv_19, scv_20;...",shape=box];
	_JOIN_14321162 [label="_JOIN_14321162None...",shape=box];
	_JOIN_14321162 -> _JOIN_14321164;
	ForLoop14321815 [label="ForLoop14321815  for (jt=jj; jt<=cbv_9; jt=jt+8) {...",shape=box];
	ForLoop14321815 -> 14321610;
	ForLoop14321815 -> _JOIN_14321815;
	14328824 [label="14328824  double scv_12;...",shape=box];
	_JOIN_14321466 [label="_JOIN_14321466None...",shape=box];
	_JOIN_14321466 -> _JOIN_14321468;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 14229636;
	14333627 [label="14333627  double scv_21, scv_22, scv_23, scv_24, scv_25, scv_26, scv_27, scv_28;...",shape=box];
	14317070 [label="14317070  double x_copy[256];...",shape=box];
	ForLoop14320531 [label="ForLoop14320531  for (kk=0; kk<=ny-1; kk=kk+256) {...",shape=box];
	ForLoop14320531 -> 14319522;
	ForLoop14320531 -> _JOIN_14320531;
	_JOIN_14320529 [label="_JOIN_14320529None...",shape=box];
	_JOIN_14320529 -> _JOIN_14320531;
	ForLoop14320533 [label="ForLoop14320533  for (it=ii; it<=min(nx-1,ii+15)-7; it=it+8) {...",shape=box];
	ForLoop14320533 -> 14332574;
	ForLoop14320533 -> _JOIN_14320533;
	ForLoop14319508 [label="ForLoop14319508  for (jj=0; jj<=ny-1; jj=jj+256) {...",shape=box];
	ForLoop14319508 -> 14317172;
	ForLoop14319508 -> _JOIN_14319508;
	_JOIN_14322001 [label="_JOIN_14322001None...",shape=box];
	_JOIN_14322001 -> _JOIN_14322004;
	14335966 [label="14335966  double scv_33, scv_34;...",shape=box];
	_JOIN_14321470 [label="_JOIN_14321470None...",shape=box];
	_JOIN_14321470 -> ForLoop14322001;
	ForLoop14321468 [label="ForLoop14321468  for (kk=0; kk<=ny-1; kk=kk+256) {...",shape=box];
	ForLoop14321468 -> 14321178;
	ForLoop14321468 -> _JOIN_14321468;
	_JOIN_14321997 [label="_JOIN_14321997None...",shape=box];
	_JOIN_14321997 -> _JOIN_14321999;
	ForLoop14230295 [label="ForLoop14230295  for (i=0; i<=cbv_1; i=i+26) {...",shape=box];
	ForLoop14230295 -> 14230068;
	ForLoop14230295 -> _JOIN_14230295;
	_JOIN_14320531 [label="_JOIN_14320531None...",shape=box];
	_JOIN_14320531 -> 14332586;
	ForLoop14321817 [label="ForLoop14321817  for (jj=0; jj<=ny-1; jj=jj+256) {...",shape=box];
	ForLoop14321817 -> 14321567;
	ForLoop14321817 -> _JOIN_14321817;
	14321178 [label="14321178  int k;...",shape=box];
	_JOIN_14322004 [label="_JOIN_14322004None...",shape=box];
	_JOIN_14322004 -> _JOIN_14322005;
	ForLoop14321466 [label="ForLoop14321466  for (k=cbv_7; k<=cbv_8; k=k+1) {...",shape=box];
	ForLoop14321466 -> 14334733;
	ForLoop14321466 -> _JOIN_14321466;
	14332586 [label="14332586  tmp[it]=scv_13;...",shape=box];
	_JOIN_14322005 [label="_JOIN_14322005None...",shape=box];
	14320534 [label="14320534  int i;...",shape=box];
	14320534 -> ForLoop14321470;
	14335984 [label="14335984  tmp[(i+1)]=scv_33;...",shape=box];
	14347841 [label="14347841  register int cbv_7, cbv_8;...",shape=box];
	_JOIN_14319506 [label="_JOIN_14319506None...",shape=box];
	_JOIN_14319506 -> _JOIN_14319508;
	14230068 [label="14230068  y[i]=0.0;...",shape=box];
	14319522 [label="14319522  int k;...",shape=box];
	_JOIN_14321815 [label="_JOIN_14321815None...",shape=box];
	_JOIN_14321815 -> _JOIN_14321817;
	ForLoop14320278 [label="ForLoop14320278  for (k=kk; k<=cbv_2; k=k+3) {...",shape=box];
	ForLoop14320278 -> 14328401;
	ForLoop14320278 -> _JOIN_14320278;
	14334733 [label="14334733  double scv_32;...",shape=box];
	ForLoop14321929 [label="ForLoop14321929  for (k=kk; k<=cbv_10; k=k+3) {...",shape=box];
	ForLoop14321929 -> 14336846;
	ForLoop14321929 -> _JOIN_14321929;
	ForLoop14321999 [label="ForLoop14321999  for (kk=0; kk<=ny-1; kk=kk+256) {...",shape=box];
	ForLoop14321999 -> 14321831;
	ForLoop14321999 -> _JOIN_14321999;
	14317172 [label="14317172  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	_JOIN_14321817 [label="_JOIN_14321817None...",shape=box];
	_JOIN_14321817 -> ForLoop14321999;
	14348316 [label="14348316  register int cbv_11, cbv_12;...",shape=box];
	14336846 [label="14336846  double scv_35, scv_36, scv_37;...",shape=box];
	_JOIN_14321468 [label="_JOIN_14321468None...",shape=box];
	_JOIN_14321468 -> 14335984;
	14336974 [label="14336974  double scv_38;...",shape=box];
	_JOIN_14230364 [label="_JOIN_14230364None...",shape=box];
	_JOIN_14230364 -> 14317070;
	_JOIN_14321371 [lexpected=9369846271501.798828
actual=9369846271501.798828
abel="_JOIN_14321371None...",shape=box];
	_JOIN_14321371 -> 14347841;
	14347125 [label="14347125  register int cbv_3, cbv_4;...",shape=box];
	_JOIN_14320278 [label="_JOIN_14320278None...",shape=box];
	_JOIN_14320278 -> 14347125;
	_JOIN_14321999 [label="_JOIN_14321999None...",shape=box];
	_JOIN_14321999 -> 14337770;
	ForLoop14321162 [label="ForLoop14321162  for (jt=jj; jt<=cbv_5; jt=jt+8) {...",shape=box];
	ForLoop14321162 -> 14333627;
	ForLoop14321162 -> _JOIN_14321162;
	ForLoop14319506 [label="ForLoop14319506  for (jt=jj; jt<=cbv_1; jt=jt+8) {...",shape=box];
	ForLoop14319506 -> 14325231;
	ForLoop14319506 -> _JOIN_14319506;
	ForLoop14321164 [label="ForLoop14321164  for (jj=0; jj<=ny-1; jj=jj+256) {...",shape=box];
	ForLoop14321164 -> 14320613;
	ForLoop14321164 -> _JOIN_14321164;
	ForLoop14320529 [label="ForLoop14320529  for (k=cbv_3; k<=cbv_4; k=k+1) {...",shape=box];
	ForLoop14320529 -> 14328824;
	ForLoop14320529 -> _JOIN_14320529;
	14229636 [label="14229636  int i;...",shape=box];
	_JOIN_14320533 [label="_JOIN_14320533None...",shape=box];
	_JOIN_14320533 -> 14320534;
	14328401 [label="14328401  double scv_9, scv_10, scv_11;...",shape=box];
	ForLoop14321470 [label="ForLoop14321470  for (i=it; i<=min(nx-1,ii+15)-1; i=i+2) {...",shape=box];
	ForLoop14321470 -> 14335966;
	ForLoop14321470 -> _JOIN_14321470;
	ForLoop14230364 [label="ForLoop14230364  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop14230364 -> 14230363;
	ForLoop14230364 -> _JOIN_14230364;
	_JOIN_14319508 [label="_JOIN_14319508None...",shape=box];
	_JOIN_14319508 -> ForLoop14320531;
	14337770 [label="14337770  tmp[i]=scv_39;...",shape=box];
	14337770 -> _JOIN_14322001;
	14321567 [label="14321567  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest67.exe __orio_perftest67.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest67.exe  
{'[1, 5, 5, 6, 0, 0, 1, 0, 25, 1, 0, 2, 1, 1, 0, 1, 1, 1]' : 0.079402}
{'[1, 5, 5, 6, 0, 0, 1, 0, 25, 1, 0, 2, 1, 1, 0, 1, 1, 1]' : 0.0790281}
{'[1, 5, 5, 6, 0, 0, 1, 0, 25, 1, 0, 2, 1, 1, 0, 1, 1, 1]' : 0.0791142}
{'[1, 5, 5, 6, 0, 0, 1, 0, 25, 1, 0, 2, 1, 1, 0, 1, 1, 1]' : 0.0790298}
{'[1, 5, 5, 6, 0, 0, 1, 0, 25, 1, 0, 2, 1, 1, 0, 1, 1, 1]' : 0.07903}
{'[1, 5, 5, 6, 0, 0, 1, 0, 25, 1, 0, 2, 1, 1, 0, 1, 1, 1]' : 0.0789971}
{'[1, 5, 5, 6, 0, 0, 1, 0, 25, 1, 0, 2, 1, 1, 0, 1, 1, 1]' : 0.0790291}
{'[1, 5, 5, 6, 0, 0, 1, 0, 25, 1, 0, 2, 1, 1, 0, 1, 1, 1]' : 0.0790691}
{'[1, 5, 5, 6, 0, 0, 1, 0, 25, 1, 0, 2, 1, 1, 0, 1, 1, 1]' : 0.0789669}
{'[1, 5, 5, 6, 0, 0, 1, 0, 25, 1, 0, 2, 1, 1, 0, 1, 1, 1]' : 0.079}
{'[1, 5, 5, 6, 0, 0, 1, 0, 25, 1, 0, 2, 1, 1, 0, 1, 1, 1]' : 0.0793149}
{'[1, 5, 5, 6, 0, 0, 1, 0, 25, 1, 0, 2, 1, 1, 0, 1, 1, 1]' : 0.079015}
{'[1, 5, 5, 6, 0, 0, 1, 0, 25, 1, 0, 2, 1, 1, 0, 1, 1, 1]' : 0.0790651}
{'[1, 5, 5, 6, 0, 0, 1, 0, 25, 1, 0, 2, 1, 1, 0, 1, 1, 1]' : 0.0790269}
{'[1, 5, 5, 6, 0, 0, 1, 0, 25, 1, 0, 2, 1, 1, 0, 1, 1, 1]' : 0.0790939}
{'[1, 5, 5, 6, 0, 0, 1, 0, 25, 1, 0, 2, 1, 1, 0, 1, 1, 1]' : 0.0791161}
{'[1, 5, 5, 6, 0, 0, 1, 0, 25, 1, 0, 2, 1, 1, 0, 1, 1, 1]' : 0.079123}
{'[1, 5, 5, 6, 0, 0, 1, 0, 25, 1, 0, 2, 1, 1, 0, 1, 1, 1]' : 0.0797629}
{'[1, 5, 5, 6, 0, 0, 1, 0, 25, 1, 0, 2, 1, 1, 0, 1, 1, 1]' : 0.0790181}
{'[1, 5, 5, 6, 0, 0, 1, 0, 25, 1, 0, 2, 1, 1, 0, 1, 1, 1]' : 0.078989}
{'[1, 5, 5, 6, 0, 0, 1, 0, 25, 1, 0, 2, 1, 1, 0, 1, 1, 1]' : 0.0790639}
{'[1, 5, 5, 6, 0, 0, 1, 0, 25, 1, 0, 2, 1, 1, 0, 1, 1, 1]' : 0.07898}
{'[1, 5, 5, 6, 0, 0, 1, 0, 25, 1, 0, 2, 1, 1, 0, 1, 1, 1]' : 0.0791101}
{'[1, 5, 5, 6, 0, 0, 1, 0, 25, 1, 0, 2, 1, 1, 0, 1, 1, 1]' : 0.0792389}
{'[1, 5, 5, 6, 0, 0, 1, 0, 25, 1, 0, 2, 1, 1, 0, 1, 1, 1]' : 0.078944}
{'[1, 5, 5, 6, 0, 0, 1, 0, 25, 1, 0, 2, 1, 1, 0, 1, 1, 1]' : 0.079092}
{'[1, 5, 5, 6, 0, 0, 1, 0, 25, 1, 0, 2, 1, 1, 0, 1, 1, 1]' : 0.0790231}
{'[1, 5, 5, 6, 0, 0, 1, 0, 25, 1, 0, 2, 1, 1, 0, 1, 1, 1]' : 0.0790689}
{'[1, 5, 5, 6, 0, 0, 1, 0, 25, 1, 0, 2, 1, 1, 0, 1, 1, 1]' : 0.0790532}
{'[1, 5, 5, 6, 0, 0, 1, 0, 25, 1, 0, 2, 1, 1, 0, 1, 1, 1]' : 0.079062}

out:
 ["{'[1, 5, 5, 6, 0, 0, 1, 0, 25, 1, 0, 2, 1, 1, 0, 1, 1, 1]' : 0.079402}", "{'[1, 5, 5, 6, 0, 0, 1, 0, 25, 1, 0, 2, 1, 1, 0, 1, 1, 1]' : 0.0790281}", "{'[1, 5, 5, 6, 0, 0, 1, 0, 25, 1, 0, 2, 1, 1, 0, 1, 1, 1]' : 0.0791142}", "{'[1, 5, 5, 6, 0, 0, 1, 0, 25, 1, 0, 2, 1, 1, 0, 1, 1, 1]' : 0.0790298}", "{'[1, 5, 5, 6, 0, 0, 1, 0, 25, 1, 0, 2, 1, 1, 0, 1, 1, 1]' : 0.07903}", "{'[1, 5, 5, 6, 0, 0, 1, 0, 25, 1, 0, 2, 1, 1, 0, 1, 1, 1]' : 0.0789971}", "{'[1, 5, 5, 6, 0, 0, 1, 0, 25, 1, 0, 2, 1, 1, 0, 1, 1, 1]' : 0.0790291}", "{'[1, 5, 5, 6, 0, 0, 1, 0, 25, 1, 0, 2, 1, 1, 0, 1, 1, 1]' : 0.0790691}", "{'[1, 5, 5, 6, 0, 0, 1, 0, 25, 1, 0, 2, 1, 1, 0, 1, 1, 1]' : 0.0789669}", "{'[1, 5, 5, 6, 0, 0, 1, 0, 25, 1, 0, 2, 1, 1, 0, 1, 1, 1]' : 0.079}", "{'[1, 5, 5, 6, 0, 0, 1, 0, 25, 1, 0, 2, 1, 1, 0, 1, 1, 1]' : 0.0793149}", "{'[1, 5, 5, 6, 0, 0, 1, 0, 25, 1, 0, 2, 1, 1, 0, 1, 1, 1]' : 0.079015}", "{'[1, 5, 5, 6, 0, 0, 1, 0, 25, 1, 0, 2, 1, 1, 0, 1, 1, 1]' : 0.0790651}", "{'[1, 5, 5, 6, 0, 0, 1, 0, 25, 1, 0, 2, 1, 1, 0, 1, 1, 1]' : 0.0790269}", "{'[1, 5, 5, 6, 0, 0, 1, 0, 25, 1, 0, 2, 1, 1, 0, 1, 1, 1]' : 0.0790939}", "{'[1, 5, 5, 6, 0, 0, 1, 0, 25, 1, 0, 2, 1, 1, 0, 1, 1, 1]' : 0.0791161}", "{'[1, 5, 5, 6, 0, 0, 1, 0, 25, 1, 0, 2, 1, 1, 0, 1, 1, 1]' : 0.079123}", "{'[1, 5, 5, 6, 0, 0, 1, 0, 25, 1, 0, 2, 1, 1, 0, 1, 1, 1]' : 0.0797629}", "{'[1, 5, 5, 6, 0, 0, 1, 0, 25, 1, 0, 2, 1, 1, 0, 1, 1, 1]' : 0.0790181}", "{'[1, 5, 5, 6, 0, 0, 1, 0, 25, 1, 0, 2, 1, 1, 0, 1, 1, 1]' : 0.078989}", "{'[1, 5, 5, 6, 0, 0, 1, 0, 25, 1, 0, 2, 1, 1, 0, 1, 1, 1]' : 0.0790639}", "{'[1, 5, 5, 6, 0, 0, 1, 0, 25, 1, 0, 2, 1, 1, 0, 1, 1, 1]' : 0.07898}", "{'[1, 5, 5, 6, 0, 0, 1, 0, 25, 1, 0, 2, 1, 1, 0, 1, 1, 1]' : 0.0791101}", "{'[1, 5, 5, 6, 0, 0, 1, 0, 25, 1, 0, 2, 1, 1, 0, 1, 1, 1]' : 0.0792389}", "{'[1, 5, 5, 6, 0, 0, 1, 0, 25, 1, 0, 2, 1, 1, 0, 1, 1, 1]' : 0.078944}", "{'[1, 5, 5, 6, 0, 0, 1, 0, 25, 1, 0, 2, 1, 1, 0, 1, 1, 1]' : 0.079092}", "{'[1, 5, 5, 6, 0, 0, 1, 0, 25, 1, 0, 2, 1, 1, 0, 1, 1, 1]' : 0.0790231}", "{'[1, 5, 5, 6, 0, 0, 1, 0, 25, 1, 0, 2, 1, 1, 0, 1, 1, 1]' : 0.0790689}", "{'[1, 5, 5, 6, 0, 0, 1, 0, 25, 1, 0, 2, 1, 1, 0, 1, 1, 1]' : 0.0790532}", "{'[1, 5, 5, 6, 0, 0, 1, 0, 25, 1, 0, 2, 1, 1, 0, 1, 1, 1]' : 0.079062}"]
returning from 'run': {'[1, 5, 5, 6, 0, 0, 1, 0, 25, 1, 0, 2, 1, 1, 0, 1, 1, 1]': ([0.079402, 0.0790281, 0.0791142, 0.0790298, 0.07903, 0.0789971, 0.0790291, 0.0790691, 0.0789669, 0.079, 0.0793149, 0.079015, 0.0790651, 0.0790269, 0.0790939, 0.0791161, 0.079123, 0.0797629, 0.0790181, 0.078989, 0.0790639, 0.07898, 0.0791101, 0.0792389, 0.078944, 0.079092, 0.0790231, 0.0790689, 0.0790532, 0.079062], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.079402, 0.0790281, 0.0791142, 0.0790298, 0.07903, 0.0789971, 0.0790291, 0.0790691, 0.0789669, 0.079, 0.0793149, 0.079015, 0.0790651, 0.0790269, 0.0790939, 0.0791161, 0.079123, 0.0797629, 0.0790181, 0.078989, 0.0790639, 0.07898, 0.0791101, 0.0792389, 0.078944, 0.079092, 0.0790231, 0.0790689, 0.0790532, 0.079062], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[1, 5, 5, 6, 0, 0, 1, 0, 25, 1, 0, 2, 1, 1, 0, 1, 1, 1]': ([0.079402, 0.0790281, 0.0791142, 0.0790298, 0.07903, 0.0789971, 0.0790291, 0.0790691, 0.0789669, 0.079, 0.0793149, 0.079015, 0.0790651, 0.0790269, 0.0790939, 0.0791161, 0.079123, 0.0797629, 0.0790181, 0.078989, 0.0790639, 0.07898, 0.0791101, 0.0792389, 0.078944, 0.079092, 0.0790231, 0.0790689, 0.0790532, 0.079062], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [5, 6, 1, 5, 6, 0, 0, 1, 0, 22, 26, 0, 1, 1, 1, 0]
Fixed Factors: {'U1_I': 25, 'SCR': 1}
Testing candidate 31: [5, 6, 1, 5, 6, 0, 0, 1, 25, 0, 22, 26, 0, 1, 1, 1, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		254
        Multiplications: 	80
        Divisions: 		0
        Logical: 		0
        Reads: 			547
        Writes: 		119
        Comparisons:		14
        Gotos: 			0
        
digraph CFG {
	ForLoop14381262 [label="ForLoop14381262  for (j=(min(ny-1,jj+511))-(((min(ny-1,jj+511))-(jt)+1)%23)+1; j<=min(ny-1,jj+511); j=j+1) {...",shape=box];
	ForLoop14381262 -> 14381261;
	ForLoop14381262 -> _JOIN_14381262;
	_JOIN_14380601 [label="_JOIN_14380601None...",shape=box];
	_JOIN_14380601 -> 14380602;
	ForLoop14349273 [label="ForLoop14349273  for (i=0; i<=cbv_1; i=i+26) {...",shape=box];
	ForLoop14349273 -> 14349046;
	ForLoop14349273 -> _JOIN_14349273;
	_JOIN_14381636 [label="_JOIN_14381636None...",shape=box];
	_JOIN_14381636 -> 14387247;
	ForLoop14381636 [label="ForLoop14381636  for (kk=0; kk<=ny-1; kk=kk+16) {...",shape=box];
	ForLoop14381636 -> 14381310;
	ForLoop14381636 -> _JOIN_14381636;
	14387247 [label="14387247  tmp[i]=scv_9;...",shape=box];
	14387247 -> _JOIN_14381638;
	14380602 [label="14380602  int j;...",shape=box];
	14380602 -> ForLoop14381194;
	_JOIN_14381265 [label="_JOIN_14381265None...",shape=box];
	_JOIN_14381265 -> _JOIN_14381266;
	_JOIN_14349273 [label="_JOIN_14349273None...",shape=box];
	_JOIN_14349273 -> 14349617;
	14380642 [label="14380642  scv_9=scv_9+A[i*ny+j]*x[j];...",shape=box];
	ForLoop14381640 [label="ForLoop14381640  for (iii=0; iii<=nx-1; iii=iii+1024) {...",shape=box];
	ForLoop14381640 -> ForLoop14381639;
	ForLoop14381640 -> _JOIN_14381640;
	14381634 [label="14381634  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	14381634 -> _JOIN_14381636;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 14348614;
	_JOIN_14381262 [label="_JOIN_14381262None...",shape=box];
	_JOIN_14381262 -> _JOIN_14381265;
	_JOIN_14381266 [label="_JOIN_14381266None...",shape=box];
	_JOIN_14381266 -> ForLoop14381636;
	ForLoop14381603 [label="ForLoop14381603  for (kt=kk; kt<=min(ny-1,kk+15)-7; kt=kt+8) {...",shape=box];
	ForLoop14381603 -> 14385222;
	ForLoop14381603 -> _JOIN_14381603;
	14348614 [label="14348614  int i;...",shape=box];
	14380290 [label="14380290  double x_copy;...",shape=box];
	_JOIN_14381638 [label="_JOIN_14381638None...",shape=box];
	_JOIN_14381638 -> _JOIN_14381639;
	14381261 [label="14381261  scv_9=scv_9+A[i*ny+j]*x[j];...",shape=box];
	14381261 -> _JOIN_14381262;
	ForLoop14381194 [label="ForLoop14381194  for (j=jt; j<=min(ny-1,jj+511)-22; j=j+23) {...",shape=box];
	ForLoop14381194 -> 14380642;
	ForLoop14381194 -> _JOIN_14381194;
	_JOIN_14381639 [label="_JOIN_14381639None...",shape=box];
	_JOIN_14381639 -> _JOIN_14381640;
	14380417 [label="14380417  scv_9=scv_9+A[i*ny+jt]*x[jt];...",shape=box];
	_JOIN_14381640 [label="_JOIN_14381640None...",shape=box];
	ForLoop14349342 [label="ForLoop14349342  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop14349342 -> 14349341;
	ForLoop14349342 -> _JOIN_14349342;
	_JOIN_14381603 [label="_JOIN_14381603None...",shape=box];
	_JOIN_14381603 -> 14381634;
	_JOIN_14381194 [label="_JOIN_14381194None...",shape=box];
	_JOIN_14381194 -> ForLoop14381262;
	ForLoop14381638 [label="ForLoop14381638  for (i=ii; i<=min(nx-1,ii+255); i=i+1) {...",shape=box];
	ForLoop14381638 -> 14387235;
	ForLoop14381638 -> _JOIN_14381638;
	ForLoop14381639 [label="ForLoop14381639  for (ii=iii; ii<=min(nx-1,iii+768); ii=ii+256) {...",shape=box];
	ForLoop14381639 -> ForLoop14381638;
	ForLoop14381639 -> _JOIN_14381639;
	_JOIN_14349342 [label="_JOIN_14349342None...",shape=box];
	_JOIN_14349342 -> 14380290;
	14385222 [label="14385222  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	ForLoop14380601 [label="ForLoop14380601  for (jt=jj; jt<=min(ny-1,jj+511)-7; jt=jt+8) {...",shape=box];
	ForLoop14380601 -> 14380417;
	ForLoop14380601 -> _JOIN_14380601;
	14349617 [label="14349617  register int cbv_2, cbv_3;...",shape=box];
	14387235 [label="14387235  double scv_9;...",shape=box];
	14349046 [label="14349046  y[i]=0.0;...",shape=box];
	ForLoop14381265 [label="ForLoop14381265  for (jj=jjj; jj<=min(ny-1,jjj+1536); jj=jj+512) {...",shape=box];expected=9369846271501.798828
actual=9369846271501.798828

	ForLoop14381265 -> ForLoop14380601;
	ForLoop14381265 -> _JOIN_14381265;
	ForLoop14381266 [label="ForLoop14381266  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop14381266 -> ForLoop14381265;
	ForLoop14381266 -> _JOIN_14381266;
	14381310 [label="14381310  for (k=kk; k<=min(ny-1,kk+15); k=k+1) ...",shape=box];
	14381310 -> ForLoop14381603;
	14349341 [label="14349341  y[i]=0.0;...",shape=box];
	14349341 -> _JOIN_14349342;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest68.exe __orio_perftest68.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest68.exe  
{'[5, 6, 1, 5, 6, 0, 0, 1, 25, 0, 22, 26, 0, 1, 1, 1, 1, 0]' : 0.187479}
{'[5, 6, 1, 5, 6, 0, 0, 1, 25, 0, 22, 26, 0, 1, 1, 1, 1, 0]' : 0.187395}
{'[5, 6, 1, 5, 6, 0, 0, 1, 25, 0, 22, 26, 0, 1, 1, 1, 1, 0]' : 0.187403}
{'[5, 6, 1, 5, 6, 0, 0, 1, 25, 0, 22, 26, 0, 1, 1, 1, 1, 0]' : 0.187475}
{'[5, 6, 1, 5, 6, 0, 0, 1, 25, 0, 22, 26, 0, 1, 1, 1, 1, 0]' : 0.187442}
{'[5, 6, 1, 5, 6, 0, 0, 1, 25, 0, 22, 26, 0, 1, 1, 1, 1, 0]' : 0.187333}
{'[5, 6, 1, 5, 6, 0, 0, 1, 25, 0, 22, 26, 0, 1, 1, 1, 1, 0]' : 0.187381}
{'[5, 6, 1, 5, 6, 0, 0, 1, 25, 0, 22, 26, 0, 1, 1, 1, 1, 0]' : 0.187392}
{'[5, 6, 1, 5, 6, 0, 0, 1, 25, 0, 22, 26, 0, 1, 1, 1, 1, 0]' : 0.187408}
{'[5, 6, 1, 5, 6, 0, 0, 1, 25, 0, 22, 26, 0, 1, 1, 1, 1, 0]' : 0.18751}
{'[5, 6, 1, 5, 6, 0, 0, 1, 25, 0, 22, 26, 0, 1, 1, 1, 1, 0]' : 0.187411}
{'[5, 6, 1, 5, 6, 0, 0, 1, 25, 0, 22, 26, 0, 1, 1, 1, 1, 0]' : 0.187442}
{'[5, 6, 1, 5, 6, 0, 0, 1, 25, 0, 22, 26, 0, 1, 1, 1, 1, 0]' : 0.187472}
{'[5, 6, 1, 5, 6, 0, 0, 1, 25, 0, 22, 26, 0, 1, 1, 1, 1, 0]' : 0.187451}
{'[5, 6, 1, 5, 6, 0, 0, 1, 25, 0, 22, 26, 0, 1, 1, 1, 1, 0]' : 0.187349}
{'[5, 6, 1, 5, 6, 0, 0, 1, 25, 0, 22, 26, 0, 1, 1, 1, 1, 0]' : 0.187287}
{'[5, 6, 1, 5, 6, 0, 0, 1, 25, 0, 22, 26, 0, 1, 1, 1, 1, 0]' : 0.187372}
{'[5, 6, 1, 5, 6, 0, 0, 1, 25, 0, 22, 26, 0, 1, 1, 1, 1, 0]' : 0.187404}
{'[5, 6, 1, 5, 6, 0, 0, 1, 25, 0, 22, 26, 0, 1, 1, 1, 1, 0]' : 0.187388}
{'[5, 6, 1, 5, 6, 0, 0, 1, 25, 0, 22, 26, 0, 1, 1, 1, 1, 0]' : 0.187366}
{'[5, 6, 1, 5, 6, 0, 0, 1, 25, 0, 22, 26, 0, 1, 1, 1, 1, 0]' : 0.187513}
{'[5, 6, 1, 5, 6, 0, 0, 1, 25, 0, 22, 26, 0, 1, 1, 1, 1, 0]' : 0.187373}
{'[5, 6, 1, 5, 6, 0, 0, 1, 25, 0, 22, 26, 0, 1, 1, 1, 1, 0]' : 0.187416}
{'[5, 6, 1, 5, 6, 0, 0, 1, 25, 0, 22, 26, 0, 1, 1, 1, 1, 0]' : 0.187438}
{'[5, 6, 1, 5, 6, 0, 0, 1, 25, 0, 22, 26, 0, 1, 1, 1, 1, 0]' : 0.187371}
{'[5, 6, 1, 5, 6, 0, 0, 1, 25, 0, 22, 26, 0, 1, 1, 1, 1, 0]' : 0.187366}
{'[5, 6, 1, 5, 6, 0, 0, 1, 25, 0, 22, 26, 0, 1, 1, 1, 1, 0]' : 0.187322}
{'[5, 6, 1, 5, 6, 0, 0, 1, 25, 0, 22, 26, 0, 1, 1, 1, 1, 0]' : 0.187509}
{'[5, 6, 1, 5, 6, 0, 0, 1, 25, 0, 22, 26, 0, 1, 1, 1, 1, 0]' : 0.187541}
{'[5, 6, 1, 5, 6, 0, 0, 1, 25, 0, 22, 26, 0, 1, 1, 1, 1, 0]' : 0.187486}

out:
 ["{'[5, 6, 1, 5, 6, 0, 0, 1, 25, 0, 22, 26, 0, 1, 1, 1, 1, 0]' : 0.187479}", "{'[5, 6, 1, 5, 6, 0, 0, 1, 25, 0, 22, 26, 0, 1, 1, 1, 1, 0]' : 0.187395}", "{'[5, 6, 1, 5, 6, 0, 0, 1, 25, 0, 22, 26, 0, 1, 1, 1, 1, 0]' : 0.187403}", "{'[5, 6, 1, 5, 6, 0, 0, 1, 25, 0, 22, 26, 0, 1, 1, 1, 1, 0]' : 0.187475}", "{'[5, 6, 1, 5, 6, 0, 0, 1, 25, 0, 22, 26, 0, 1, 1, 1, 1, 0]' : 0.187442}", "{'[5, 6, 1, 5, 6, 0, 0, 1, 25, 0, 22, 26, 0, 1, 1, 1, 1, 0]' : 0.187333}", "{'[5, 6, 1, 5, 6, 0, 0, 1, 25, 0, 22, 26, 0, 1, 1, 1, 1, 0]' : 0.187381}", "{'[5, 6, 1, 5, 6, 0, 0, 1, 25, 0, 22, 26, 0, 1, 1, 1, 1, 0]' : 0.187392}", "{'[5, 6, 1, 5, 6, 0, 0, 1, 25, 0, 22, 26, 0, 1, 1, 1, 1, 0]' : 0.187408}", "{'[5, 6, 1, 5, 6, 0, 0, 1, 25, 0, 22, 26, 0, 1, 1, 1, 1, 0]' : 0.18751}", "{'[5, 6, 1, 5, 6, 0, 0, 1, 25, 0, 22, 26, 0, 1, 1, 1, 1, 0]' : 0.187411}", "{'[5, 6, 1, 5, 6, 0, 0, 1, 25, 0, 22, 26, 0, 1, 1, 1, 1, 0]' : 0.187442}", "{'[5, 6, 1, 5, 6, 0, 0, 1, 25, 0, 22, 26, 0, 1, 1, 1, 1, 0]' : 0.187472}", "{'[5, 6, 1, 5, 6, 0, 0, 1, 25, 0, 22, 26, 0, 1, 1, 1, 1, 0]' : 0.187451}", "{'[5, 6, 1, 5, 6, 0, 0, 1, 25, 0, 22, 26, 0, 1, 1, 1, 1, 0]' : 0.187349}", "{'[5, 6, 1, 5, 6, 0, 0, 1, 25, 0, 22, 26, 0, 1, 1, 1, 1, 0]' : 0.187287}", "{'[5, 6, 1, 5, 6, 0, 0, 1, 25, 0, 22, 26, 0, 1, 1, 1, 1, 0]' : 0.187372}", "{'[5, 6, 1, 5, 6, 0, 0, 1, 25, 0, 22, 26, 0, 1, 1, 1, 1, 0]' : 0.187404}", "{'[5, 6, 1, 5, 6, 0, 0, 1, 25, 0, 22, 26, 0, 1, 1, 1, 1, 0]' : 0.187388}", "{'[5, 6, 1, 5, 6, 0, 0, 1, 25, 0, 22, 26, 0, 1, 1, 1, 1, 0]' : 0.187366}", "{'[5, 6, 1, 5, 6, 0, 0, 1, 25, 0, 22, 26, 0, 1, 1, 1, 1, 0]' : 0.187513}", "{'[5, 6, 1, 5, 6, 0, 0, 1, 25, 0, 22, 26, 0, 1, 1, 1, 1, 0]' : 0.187373}", "{'[5, 6, 1, 5, 6, 0, 0, 1, 25, 0, 22, 26, 0, 1, 1, 1, 1, 0]' : 0.187416}", "{'[5, 6, 1, 5, 6, 0, 0, 1, 25, 0, 22, 26, 0, 1, 1, 1, 1, 0]' : 0.187438}", "{'[5, 6, 1, 5, 6, 0, 0, 1, 25, 0, 22, 26, 0, 1, 1, 1, 1, 0]' : 0.187371}", "{'[5, 6, 1, 5, 6, 0, 0, 1, 25, 0, 22, 26, 0, 1, 1, 1, 1, 0]' : 0.187366}", "{'[5, 6, 1, 5, 6, 0, 0, 1, 25, 0, 22, 26, 0, 1, 1, 1, 1, 0]' : 0.187322}", "{'[5, 6, 1, 5, 6, 0, 0, 1, 25, 0, 22, 26, 0, 1, 1, 1, 1, 0]' : 0.187509}", "{'[5, 6, 1, 5, 6, 0, 0, 1, 25, 0, 22, 26, 0, 1, 1, 1, 1, 0]' : 0.187541}", "{'[5, 6, 1, 5, 6, 0, 0, 1, 25, 0, 22, 26, 0, 1, 1, 1, 1, 0]' : 0.187486}"]
returning from 'run': {'[5, 6, 1, 5, 6, 0, 0, 1, 25, 0, 22, 26, 0, 1, 1, 1, 1, 0]': ([0.187479, 0.187395, 0.187403, 0.187475, 0.187442, 0.187333, 0.187381, 0.187392, 0.187408, 0.18751, 0.187411, 0.187442, 0.187472, 0.187451, 0.187349, 0.187287, 0.187372, 0.187404, 0.187388, 0.187366, 0.187513, 0.187373, 0.187416, 0.187438, 0.187371, 0.187366, 0.187322, 0.187509, 0.187541, 0.187486], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.187479, 0.187395, 0.187403, 0.187475, 0.187442, 0.187333, 0.187381, 0.187392, 0.187408, 0.18751, 0.187411, 0.187442, 0.187472, 0.187451, 0.187349, 0.187287, 0.187372, 0.187404, 0.187388, 0.187366, 0.187513, 0.187373, 0.187416, 0.187438, 0.187371, 0.187366, 0.187322, 0.187509, 0.187541, 0.187486], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[5, 6, 1, 5, 6, 0, 0, 1, 25, 0, 22, 26, 0, 1, 1, 1, 1, 0]': ([0.187479, 0.187395, 0.187403, 0.187475, 0.187442, 0.187333, 0.187381, 0.187392, 0.187408, 0.18751, 0.187411, 0.187442, 0.187472, 0.187451, 0.187349, 0.187287, 0.187372, 0.187404, 0.187388, 0.187366, 0.187513, 0.187373, 0.187416, 0.187438, 0.187371, 0.187366, 0.187322, 0.187509, 0.187541, 0.187486], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [1, 0, 6, 1, 0, 0, 1, 0, 20, 0, 27, 1, 0, 1, 1, 1]
Fixed Factors: {'U1_I': 25, 'SCR': 1}
Testing candidate 32: [1, 0, 6, 1, 0, 0, 1, 0, 25, 20, 0, 27, 1, 0, 1, 1, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	62
        Max loop nest depth: 	5
        Additions: 		6113
        Multiplications: 	2280
        Divisions: 		0
        Logical: 		0
        Reads: 			13060
        Writes: 		2836
        Comparisons:		62
        Gotos: 			0
        
digraph CFG {
	14731818 [label="14731818  double scv_114, scv_115, scv_116, scv_117, scv_118, scv_119, scv_120, scv_121;...",shape=box];
	14947418 [label="14947418  register int cbv_72;...",shape=box];
	_JOIN_14680817 [label="_JOIN_14680817None...",shape=box];
	_JOIN_14680817 -> 14942293;
	ForLoop14674565 [label="ForLoop14674565  for (k=kt; k<=cbv_38; k=k+28) {...",shape=box];
	ForLoop14674565 -> 14748930;
	ForLoop14674565 -> _JOIN_14674565;
	14684019 [label="14684019  int k;...",shape=box];
	14755347 [label="14755347  double scv_433, scv_434, scv_435, scv_436, scv_437, scv_438, scv_439, scv_440;...",shape=box];
	_JOIN_14668387 [label="_JOIN_14668387None...",shape=box];
	_JOIN_14668387 -> 14668389;
	_JOIN_14670471 [label="_JOIN_14670471None...",shape=box];
	_JOIN_14670471 -> 14670473;
	14943481 [label="14943481  register int cbv_60, cbv_61;...",shape=box];
	ForLoop14672481 [label="ForLoop14672481  for (k=kt; k<=cbv_32; k=k+28) {...",shape=box];
	ForLoop14672481 -> 14744652;
	ForLoop14672481 -> _JOIN_14672481;
	_JOIN_14682975 [label="_JOIN_14682975None...",shape=box];
	_JOIN_14682975 -> 14682977;
	_JOIN_14686279 [label="_JOIN_14686279None...",shape=box];
	_JOIN_14686279 -> 14840046;
	_JOIN_14664151 [label="_JOIN_14664151None...",shape=box];
	_JOIN_14664151 -> 14923285;
	ForLoop14667271 [label="ForLoop14667271  for (k=kt; k<=cbv_17; k=k+28) {...",shape=box];
	ForLoop14667271 -> 14733957;
	ForLoop14667271 -> _JOIN_14667271;
	_JOIN_14679775 [label="_JOIN_14679775None...",shape=box];
	_JOIN_14679775 -> 14941105;
	14741039 [label="14741039  double scv_258;...",shape=box];
	14913609 [label="14913609  register int cbv_2;...",shape=box];
	ForLoop14676723 [label="ForLoop14676723  for (k=cbv_45; k<=cbv_46; k=k+1) {...",shape=box];
	ForLoop14676723 -> 14753873;
	ForLoop14676723 -> _JOIN_14676723;
	ForLoop14676649 [label="ForLoop14676649  for (k=kt; k<=cbv_44; k=k+28) {...",shape=box];
	ForLoop14676649 -> 14753208;
	ForLoop14676649 -> _JOIN_14676649;
	ForLoop14657821 [label="ForLoop14657821  for (j=0; j<=cbv_6; j=j+1) {...",shape=box];
	ForLoop14657821 -> 14718327;
	ForLoop14657821 -> _JOIN_14657821;
	ForLoop14678807 [label="ForLoop14678807  for (k=cbv_51; k<=cbv_52; k=k+1) {...",shape=box];
	ForLoop14678807 -> 14758151;
	ForLoop14678807 -> _JOIN_14678807;
	_JOIN_14674639 [label="_JOIN_14674639None...",shape=box];
	_JOIN_14674639 -> 14674641;
	14736096 [label="14736096  double scv_172, scv_173, scv_174, scv_175, scv_176, scv_177, scv_178, scv_179;...",shape=box];
	14757486 [label="14757486  double scv_462, scv_463, scv_464, scv_465, scv_466, scv_467, scv_468, scv_469;...",shape=box];
	ForLoop14685062 [label="ForLoop14685062  for (kk=0; kk<=ny-1; kk=kk+512) {...",shape=box];
	ForLoop14685062 -> 14922217;
	ForLoop14685062 -> _JOIN_14685062;
	ForLoop14685064 [label="ForLoop14685064  for (i=it; i<=min(nx-1,ii+15)-20; i=i+21) {...",shape=box];
	ForLoop14685064 -> 14833422;
	ForLoop14685064 -> _JOIN_14685064;
	ForLoop14686285 [label="ForLoop14686285  for (iii=0; iii<=nx-1; iii=iii+64) {...",shape=box];
	ForLoop14686285 -> ForLoop14686284;
	ForLoop14686285 -> _JOIN_14686285;
	ForLoop14686284 [label="ForLoop14686284  for (ii=iii; ii<=min(nx-1,iii+48); ii=ii+16) {...",shape=box];
	ForLoop14686284 -> ForLoop14656999;
	ForLoop14686284 -> _JOIN_14686284;
	14745317 [label="14745317  double scv_316;...",shape=box];
	14928037 [label="14928037  register int cbv_21, cbv_22;...",shape=box];
	_JOIN_14686284 [label="_JOIN_14686284None...",shape=box];
	_JOIN_14686284 -> _JOIN_14686285;
	14390790 [label="14390790  y[i]=0.0;...",shape=box];
	14390790 -> _JOIN_14390791;
	14727549 [label="14727549  double scv_56, scv_57, scv_58, scv_59, scv_60, scv_61, scv_62, scv_63;...",shape=box];
	14948486 [label="14948486  register int cbv_74, cbv_75;...",shape=box];
	14929225 [label="14929225  register int cbv_24, cbv_25;...",shape=box];
	_JOIN_14666303 [label="_JOIN_14666303None...",shape=box];
	_JOIN_14666303 -> 14666305;
	ForLoop14683943 [label="ForLoop14683943  for (k=kt; k<=cbv_65; k=k+28) {...",shape=box];
	ForLoop14683943 -> 14768181;
	ForLoop14683943 -> _JOIN_14683943;
	14933977 [label="14933977  register int cbv_36, cbv_37;...",shape=box];
	_JOIN_14672481 [label="_JOIN_14672481None...",shape=box];
	_JOIN_14672481 -> 14932789;
	14753873 [label="14753873  double scv_432;...",shape=box];
	ForLoop14686208 [label="ForLoop14686208  for (k=kt; k<=cbv_73; k=k+28) {...",shape=box];
	ForLoop14686208 -> 14836425;
	ForLoop14686208 -> _JOIN_14686208;
	_JOIN_14686276 [label="_JOIN_14686276None...",shape=box];
	_JOIN_14686276 -> _JOIN_14686279;
	14390495 [label="14390495  y[i]=0.0;...",shape=box];
	14738235 [label="14738235  double scv_201, scv_202, scv_203, scv_204, scv_205, scv_206, scv_207, scv_208;...",shape=box];
	ForLoop14677691 [label="ForLoop14677691  for (k=kt; k<=cbv_47; k=k+28) {...",shape=box];
	ForLoop14677691 -> 14755347;
	ForLoop14677691 -> _JOIN_14677691;
	ForLoop14679849 [label="ForLoop14679849  for (k=cbv_54; k<=cbv_55; k=k+1) {...",shape=box];
	ForLoop14679849 -> 14760290;
	ForLoop14679849 -> _JOIN_14679849;
	14390063 [label="14390063  int i;...",shape=box];
	_JOIN_14664219 [label="_JOIN_14664219None...",shape=box];
	_JOIN_14664219 -> 14664221;
	14669431 [label="14669431  int k;...",shape=box];
	14716927 [label="14716927  double scv_39, scv_40, scv_41, scv_42, scv_43, scv_44, scv_45, scv_46;...",shape=box];
	14930413 [label="14930413  register int cbv_27, cbv_28;...",shape=box];
	ForLoop14682975 [label="ForLoop14682975  for (k=cbv_63; k<=cbv_64; k=k+1) {...",shape=box];
	ForLoop14682975 -> 14766707;
	ForLoop14682975 -> _JOIN_14682975;
	14758151 [label="14758151  double scv_490;...",shape=box];
	_JOIN_14665261 [label="_JOIN_14665261None...",shape=box];
	_JOIN_14665261 -> 14665263;
	_JOIN_14685062 [label="_JOIN_14685062None...",shape=box];
	_JOIN_14685062 -> 14833440;
	_JOIN_14685064 [label="_JOIN_14685064None...",shape=box];
	_JOIN_14685064 -> ForLoop14686281;
	14672557 [label="14672557  int k;...",shape=box];
	14733957 [label="14733957  double scv_143, scv_144, scv_145, scv_146, scv_147, scv_148, scv_149, scv_150;...",shape=box];
	14922217 [label="14922217  register int cbv_7;...",shape=box];
	_JOIN_14669429 [label="_JOIN_14669429None...",shape=box];
	_JOIN_14669429 -> 14669431;
	ForLoop14685059 [label="ForLoop14685059  for (k=cbv_69; k<=cbv_70; k=k+1) {...",shape=box];
	ForLoop14685059 -> 14770985;
	ForLoop14685059 -> _JOIN_14685059;
	ForLoop14665261 [label="ForLoop14665261  for (k=cbv_12; k<=cbv_13; k=k+1) {...",shape=box];
	ForLoop14665261 -> 14730344;
	ForLoop14665261 -> _JOIN_14665261;
	_JOIN_14390791 [label="_JOIN_14390791None...",shape=box];
	_JOIN_14390791 -> 14646885;
	_JOIN_14685409 [label="_JOIN_14685409None...",shape=box];
	_JOIN_14685409 -> 14685410;
	ForLoop14670397 [label="ForLoop14670397  for (k=kt; k<=cbv_26; k=k+28) {...",shape=box];
	ForLoop14670397 -> 14740374;
	ForLoop14670397 -> _JOIN_14670397;
	14749595 [label="14749595  double scv_374;...",shape=box];
	_JOIN_14679849 [label="_JOIN_14679849None...",shape=box];
	_JOIN_14679849 -> 14679851;
	14700047 [label="14700047  double scv_10, scv_11, scv_12, scv_13, scv_14, scv_15, scv_16, scv_17;...",shape=box];
	14918506 [label="14918506  register int cbv_4, cbv_5;...",shape=box];
	14732483 [label="14732483  double scv_142;...",shape=box];
	14742513 [label="14742513  double scv_259, scv_260, scv_261, scv_262, scv_263, scv_264, scv_265, scv_266;...",shape=box];
	14936353 [label="14936353  register int cbv_42, cbv_43;...",shape=box];
	ForLoop14672555 [label="ForLoop14672555  for (k=cbv_33; k<=cbv_34; k=k+1) {...",shape=box];
	ForLoop14672555 -> 14745317;
	ForLoop14672555 -> _JOIN_14672555;
	_JOIN_14686208 [label="_JOIN_14686208None...",shape=box];
	_JOIN_14686208 -> 14948486;
	_JOIN_14656994 [label="_JOIN_14656994None...",shape=box];
	_JOIN_14656994 -> _JOIN_14656997;
	ForLoop14666303 [label="ForLoop14666303  for (k=cbv_15; k<=cbv_16; k=k+1) {...",shape=box];
	ForLoop14666303 -> 14732483;
	ForLoop14666303 -> _JOIN_14666303;
	_JOIN_14657821 [label="_JOIN_14657821None...",shape=box];
	_JOIN_14657821 -> ForLoop14685062;
	_JOIN_14656997 [label="_JOIN_14656997None...",shape=box];
	_JOIN_14656997 -> 14716939;
	14924473 [label="14924473  register int cbv_12, cbv_13;...",shape=box];
	14680893 [label="14680893  int k;...",shape=box];
	14716939 [label="14716939  tmp[it]=scv_39;...",shape=box];
	14657000 [label="14657000  int i;...",shape=box];
	14657000 -> ForLoop14685064;
	_JOIN_14672555 [label="_JOIN_14672555None...",shape=box];
	_JOIN_14672555 -> 14672557;
	_JOIN_14668313 [label="_JOIN_14668313None...",shape=box];
	_JOIN_14668313 -> 14928037;
	_JOIN_14656999 [label="_JOIN_14656999None...",shape=box];
	_JOIN_14656999 -> 14657000;
	14666305 [label="14666305  int k;...",shape=box];
	ForLoop14681859 [label="ForLoop14681859  for (k=kt; k<=cbv_59; k=k+28) {...",shape=box];
	ForLoop14681859 -> 14763903;
	ForLoop14681859 -> _JOIN_14681859;
	_JOIN_14665187 [label="_JOIN_14665187None...",shape=box];
	_JOIN_14665187 -> 14924473;
	14944669 [label="14944669  register int cbv_63, cbv_64;...",shape=box];
	14762429 [label="14762429  double scv_548;...",shape=box];
	_JOIN_14686281 [label="_JOIN_14686281None...",shape=box];
	_JOIN_14686281 -> _JOIN_14686284;
	14679851 [label="14679851  int k;...",shape=box];
	14729679 [label="14729679  double scv_85, scv_86, scv_87, scv_88, scv_89, scv_90, scv_91, scv_92;...",shape=box];
	ForLoop14674639 [label="ForLoop14674639  for (k=cbv_39; k<=cbv_40; k=k+1) {...",shape=box];
	ForLoop14674639 -> 14749595;
	ForLoop14674639 -> _JOIN_14674639;
	_JOIN_14676649 [label="_JOIN_14676649None...",shape=box];
	_JOIN_14676649 -> 14937541;
	14770320 [label="14770320  double scv_636, scv_637, scv_638, scv_639, scv_640, scv_641, scv_642, scv_643;...",shape=box];
	ForLoop14656743 [label="ForLoop14656743  for (k=kt; k<=cbv_3; k=k+28) {...",shape=box];
	ForLoop14656743 -> 14700047;
	ForLoop14656743 -> _JOIN_14656743;
	_JOIN_14677765 [label="_JOIN_14677765None...",shape=box];
	_JOIN_14677765 -> 14677767;
	_JOIN_14647181 [label="_JOIN_14647181None...",shape=box];
	_JOIN_14647181 -> ForLoop14656997;
	ForLoop14684017 [label="ForLoop14684017  for (k=cbv_66; k<=cbv_67; k=k+1) {...",shape=box];
	ForLoop14684017 -> 14768846;
	ForLoop14684017 -> _JOIN_14684017;
	_JOIN_14678733 [label="_JOIN_14678733None...",shape=box];
	_JOIN_14678733 -> 14939917;
	14942293 [label="14942293  register int cbv_57, cbv_58;...",shape=box];
	14701348 [label="14701348  double scv_38;...",shape=box];
	14730344 [label="14730344  double scv_113;...",shape=box];
	14649337 [label="14649337  int k;...",shape=box];
	ForLoop14663352 [label="ForLoop14663352  for (kt=kk; kt<=cbv_7; kt=kt+8) {...",shape=box];
	ForLoop14663352 -> 14725861;
	ForLoop14663352 -> _JOIN_14663352;
	_JOIN_14686285 [label="_JOIN_14686285None...",shape=box];
	ForLoop14686279 [label="ForLoop14686279  for (kk=0; kk<=ny-1; kk=kk+512) {...",shape=box];
	ForLoop14686279 -> 14947418;
	ForLoop14686279 -> _JOIN_14686279;
	14740374 [label="14740374  double scv_230, scv_231, scv_232, scv_233, scv_234, scv_235, scv_236, scv_237;...",shape=box];
	14664221 [label="14664221  int k;...",shape=box];
	14763903 [label="14763903  double scv_549, scv_550, scv_551, scv_552, scv_553, scv_554, scv_555, scv_556;...",shape=box];
	14751734 [label="14751734  double scv_403;...",shape=box];
	14937541 [label="14937541  register int cbv_45, cbv_46;...",shape=box];
	14938729 [label="14938729  register int cbv_48, cbv_49;...",shape=box];
	14923285 [label="14923285  register int cbv_9, cbv_10;...",shape=box];
	14677767 [label="14677767  int k;...",shape=box];
	14744652 [label="14744652  double scv_288, scv_289, scv_290, scv_291, scv_292, scv_293, scv_294, scv_295;...",shape=box];
	14682977 [label="14682977  int k;...",shape=box];
	14945857 [label="14945857  register int cbv_66, cbv_67;...",shape=box];
	_JOIN_14673523 [label="_JOIN_14673523None...",shape=box];
	_JOIN_14673523 -> 14933977;
	ForLoop14664151 [label="ForLoop14664151  for (k=kt; k<=cbv_8; k=k+28) {...",shape=box];
	ForLoop14664151 -> 14727549;
	ForLoop14664151 -> _JOIN_14664151;
	14760290 [label="14760290  double scv_519;...",shape=box];
	ForLoop14647181 [label="ForLoop14647181  for (j=0; j<=cbv_1; j=j+1) {...",shape=box];
	ForLoop14647181 -> 14686642;
	ForLoop14647181 -> _JOIN_14647181;
	14766707 [label="14766707  double scv_606;...",shape=box];
	14738900 [label="14738900  double scv_229;...",shape=box];
	14833440 [label="14833440  tmp[(i+20)]=scv_665;...",shape=box];
	_JOIN_14671439 [label="_JOIN_14671439None...",shape=box];
	_JOIN_14671439 -> 14931601;
	_JOIN_14656743 [label="_JOIN_14656743None...",shape=box];
	_JOIN_14656743 -> 14918506;
	_JOIN_14649336 [label="_JOIN_14649336None...",shape=box];
	_JOIN_14649336 -> 14649337;
	14736761 [label="14736761  double scv_200;...",shape=box];
	ForLoop14668313 [label="ForLoop14668313  for (k=kt; k<=cbv_20; k=k+28) {...",shape=box];
	ForLoop14668313 -> 14736096;
	ForLoop14668313 -> _JOIN_14668313;
	14837081 [label="14837081  double scv_722;...",shape=box];
	14766042 [label="14766042  double scv_578, scv_579, scv_580, scv_581, scv_582, scv_583, scv_584, scv_585;...",shape=box];
	ForLoop14656999 [label="ForLoop14656999  for (it=ii; it<=min(nx-1,ii+15)-7; it=it+8) {...",shape=box];
	ForLoop14656999 -> 14716927;
	ForLoop14656999 -> _JOIN_14656999;
	ForLoop14656994 [label="ForLoop14656994  for (k=cbv_4; k<=cbv_5; k=k+1) {...",shape=box];
	ForLoop14656994 -> 14701348;
	ForLoop14656994 -> _JOIN_14656994;
	14840046 [label="14840046  tmp[i]=scv_723;...",shape=box];
	14840046 -> _JOIN_14686281;
	14671515 [label="14671515  int k;...",shape=box];
	ForLoop14656997 [label="ForLoop14656997  for (kk=0; kk<=ny-1; kk=kk+512) {...",shape=box];
	ForLoop14656997 -> 14913609;
	ForLoop14656997 -> _JOIN_14656997;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 14390063;
	_JOIN_14680891 [label="_JOIN_14680891None...",shape=box];
	_JOIN_14680891 -> 14680893;
	14670473 [label="14670473  int k;...",shape=box];
	14768846 [label="14768846  double scv_635;...",shape=box];
	14665263 [label="14665263  int k;...",shape=box];
	ForLoop14667345 [label="ForLoop14667345  for (k=cbv_18; k<=cbv_19; k=k+1) {...",shape=box];
	ForLoop14667345 -> 14734622;
	ForLoop14667345 -> _JOIN_14667345;
	14770985 [label="14770985  double scv_664;...",shape=box];
	ForLoop14673523 [label="ForLoop14673523  for (k=kt; k<=cbv_35; k=k+28) {...",shape=box];
	ForLoop14673523 -> 14746791;
	ForLoop14673523 -> _JOIN_14673523;
	ForLoop14681933 [label="ForLoop14681933  for (k=cbv_60; k<=cbv_61; k=k+1) {...",shape=box];
	ForLoop14681933 -> 14764568;
	ForLoop14681933 -> _JOIN_14681933;
	ForLoop14686276 [label="ForLoop14686276  for (k=cbv_74; k<=cbv_75; k=k+1) {...",shape=box];
	ForLoop14686276 -> 14837081;
	ForLoop14686276 -> _JOIN_14686276;
	_JOIN_14684985 [label="_JOIN_14684985None...",shape=box];
	_JOIN_14684985 -> 14947045;
	14678809 [label="14678809  int k;...",shape=box];
	_JOIN_14685151 [label="_JOIN_14685151None...",shape=box];
	_JOIN_14685151 -> ForLoop14686279;
	ForLoop14677765 [label="ForLoop14677765  for (k=cbv_48; k<=cbv_49; k=k+1) {...",shape=box];
	ForLoop14677765 -> 14756012;
	ForLoop14677765 -> _JOIN_14677765;
	_JOIN_14684017 [label="_JOIN_14684017None...",shape=box];
	_JOIN_14684017 -> 14684019;
	14681935 [label="14681935  int k;...",shape=box];
	14926849 [label="14926849  register int cbv_18, cbv_19;...",shape=box];
	14734622 [label="14734622  double scv_171;...",shape=box];
	14675683 [label="14675683  int k;...",shape=box];
	_JOIN_14666229 [label="_JOIN_14666229None...",shape=box];
	_JOIN_14666229 -> 14925661;
	14748930 [label="14748930  double scv_346, scv_347, scv_348, scv_349, scv_350, scv_351, scv_352, scv_353;...",shape=box];
	ForLoop14686281 [label="ForLoop14686281  for (i=(min(nx-1,ii+15))-(((min(nx-1,ii+15))-(it)+1)%21)+1; i<=min(nx-1,ii+15); i=i+1) {...",shape=box];
	ForLoop14686281 -> 14840034;
	ForLoop14686281 -> _JOIN_14686281;
	ForLoop14390791 [label="ForLoop14390791  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop14390791 -> 14390790;
	ForLoop14390791 -> _JOIN_14390791;
	14746791 [label="14746791  double scv_317, scv_318, scv_319, scv_320, scv_321, scv_322, scv_323, scv_324;...",shape=box];
	14768181 [label="14768181  double scv_607, scv_608, scv_609, scv_610, scv_611, scv_612, scv_613, scv_614;...",shape=box];
	14836425 [label="14836425  double scv_694, scv_695, scv_696, scv_697, scv_698, scv_699, scv_700, scv_701;...",shape=box];
	_JOIN_14681933 [label="_JOIN_14681933None...",shape=box];
	_JOIN_14681933 -> 14681935;
	ForLoop14649336 [label="ForLoop14649336  for (kt=kk; kt<=cbv_2; kt=kt+8) {...",shape=box];
	ForLoop14649336 -> 14689621;
	ForLoop14649336 -> _JOIN_14649336;
	ForLoop14671439 [label="ForLoop14671439  for (k=kt; k<=cbv_29; k=k+28) {...",shape=box];
	ForLoop14671439 -> 14742513;
	ForLoop14671439 -> _JOIN_14671439;
	ForLoop14671513 [label="ForLoop14671513  for (k=cbv_30; k<=cbv_31; k=k+1) {...",shape=box];
	ForLoop14671513 -> 14743178;
	ForLoop14671513 -> _JOIN_14671513;
	14761764 [label="14761764  double scv_520, scv_521, scv_522, scv_523, scv_524, scv_525, scv_526, scv_527;...",shape=box];
	_JOIN_14675607 [label="_JOIN_14675607None...",shape=box];
	_JOIN_14675607 -> 14936353;
	ForLoop14669355 [label="ForLoop14669355  for (k=kt; k<=cbv_23; k=k+28) {...",shape=box];
	ForLoop14669355 -> 14738235;
	ForLoop14669355 -> _JOIN_14669355;
	_JOIN_14685059 [label="_JOIN_14685059None...",shape=box];
	_JOIN_14685059 -> _JOIN_14685062;
	_JOIN_14676723 [label="_JOIN_14676723None...",shape=box];
	_JOIN_14676723 -> 14676725;
	ForLoop14685409 [label="ForLoop14685409  for (kt=kk; kt<=cbv_72; kt=kt+8) {...",shape=box];
	ForLoop14685409 -> 14835057;
	ForLoop14685409 -> _JOIN_14685409;
	14685410 [label="14685410  int k;...",shape=box];
	14743178 [label="14743178  double scv_287;...",shape=box];
	ForLoop14685151 [label="ForLoop14685151  for (j=0; j<=cbv_71; j=j+1) {...",shape=box];
	ForLoop14685151 -> 14685150;
	ForLoop14685151 -> _JOIN_14685151;
	_JOIN_14675681 [label="_JOIN_14675681None...",shape=box];
	_JOIN_14675681 -> 14675683;
	ForLoop14678733 [label="ForLoop14678733  for (k=kt; k<=cbv_50; k=k+28) {...",shape=box];
	ForLoop14678733 -> 14757486;
	ForLoop14678733 -> _JOIN_14678733;
	14676725 [label="14676725  int k;...",shape=box];
	14939917 [label="14939917  register int cbv_51, cbv_52;...",shape=box];
	ForLoop14673597 [label="ForLoop14673597  for (k=cbv_36; k<=cbv_37; k=k+1) {...",shape=box];
	ForLoop14673597 -> 14747456;
	ForLoop14673597 -> _JOIN_14673597;
	ForLoop14390722 [label="ForLoop14390722  for (i=0; i<=cbv_1; i=i+26) {...",shape=box];
	ForLoop14390722 -> 14390495;
	ForLoop14390722 -> _JOIN_14390722;
	14935165 [label="14935165  register int cbv_39, cbv_40;...",shape=box];
	14728205 [label="14728205  double scv_84;...",shape=box];
	_JOIN_14678807 [label="_JOIN_14678807None...",shape=box];
	_JOIN_14678807 -> 14678809;
	14686642 [label="14686642  double scv_1;...",shape=box];
	ForLoop14675607 [label="ForLoop14675607  for (k=kt; k<=cbv_41; k=k+28) {...",shape=box];
	ForLoop14675607 -> 14751069;
	ForLoop14675607 -> _JOIN_14675607;
	ForLoop14679775 [label="ForLoop14679775  for (k=kt; k<=cbv_53; k=k+28) {...",shape=box];
	ForLoop14679775 -> 14759625;
	ForLoop14679775 -> _JOIN_14679775;
	14764568 [label="14764568  double scv_577;...",shape=box];
	14833422 [label="14833422  double scv_665, scv_666, scv_667, scv_668, scv_669, scv_670, scv_671, scv_672;...",shape=box];
	14931601 [label="14931601  register int cbv_30, cbv_31;...",shape=box];
	_JOIN_14663352 [label="_JOIN_14663352None...",shape=box];
	_JOIN_14663352 -> 14663353;
	14668389 [label="14668389  int k;...",shape=box];
	14674641 [label="14674641  int k;...",shape=box];
	14725861 [label="14725861  double scv_48, scv_49, scv_50, scv_51, scv_52, scv_53, scv_54, scv_55;...",shape=box];
	14932789 [label="14932789  register int cbv_33, cbv_34;...",shape=box];
	_JOIN_14677691 [label="_JOIN_14677691None...",shape=box];
	_JOIN_14677691 -> 14938729;
	14718327 [label="14718327  double scv_47;...",shape=box];
	14646885 [label="14646885  double x_copy;...",shape=box];
	14673599 [label="14673599  int k;...",shape=box];
	14835057 [label="14835057  double scv_686, scv_687, scv_688, scv_689, scv_690, scv_691, scv_692, scv_693;...",shape=box];
	ForLoop14669429 [label="ForLoop14669429  for (k=cbv_24; k<=cbv_25; k=k+1) {...",shape=box];
	ForLoop14669429 -> 14738900;
	ForLoop14669429 -> _JOIN_14669429;
	ForLoop14666229 [label="ForLoop14666229  for (k=kt; k<=cbv_14; k=k+28) {...",shape=box];
	ForLoop14666229 -> 14731818;
	ForLoop14666229 -> _JOIN_14666229;
	14759625 [label="14759625  double scv_491, scv_492, scv_493, scv_494, scv_495, scv_496, scv_497, scv_498;...",shape=box];
	_JOIN_14674565 [label="_JOIN_14674565None...",shape=box];
	_JOIN_14674565 -> 14935165;
	_JOIN_14669355 [label="_JOIN_14669355None...",shape=box];
	_JOIN_14669355 -> 14929225;
	ForLoop14680891 [label="ForLoop14680891  for (k=cbv_57; k<=cbv_58; k=k+1) {...",shape=box];
	ForLoop14680891 -> 14762429;
	ForLoop14680891 -> _JOIN_14680891;
	14391066 [label="14391066  register int cbv_2, cbv_3;...",shape=box];
	_JOIN_14682901 [label="_JOIN_14682901None...",shape=box];
	_JOIN_14682901 -> 14944669;
	ForLoop14668387 [label="ForLoop14668387  for (k=cbv_21; k<=cbv_22; k=k+1) {...",shape=box];
	ForLoop14668387 -> 14736761;
	ForLoop14668387 -> _JOIN_14668387;
	14663353 [label="14663353  int k;...",shape=box];
	ForLoop14682901 [label="ForLoop14682901  for (k=kt; k<=cbv_62; k=k+28) {...",shape=box];
	ForLoop14682901 -> 14766042;expected=9369846271501.798828
actual=9369846271501.798828

	ForLoop14682901 -> _JOIN_14682901;
	ForLoop14684985 [label="ForLoop14684985  for (k=kt; k<=cbv_68; k=k+28) {...",shape=box];
	ForLoop14684985 -> 14770320;
	ForLoop14684985 -> _JOIN_14684985;
	14689621 [label="14689621  double scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8, scv_9;...",shape=box];
	14753208 [label="14753208  double scv_404, scv_405, scv_406, scv_407, scv_408, scv_409, scv_410, scv_411;...",shape=box];
	_JOIN_14667271 [label="_JOIN_14667271None...",shape=box];
	_JOIN_14667271 -> 14926849;
	_JOIN_14673597 [label="_JOIN_14673597None...",shape=box];
	_JOIN_14673597 -> 14673599;
	_JOIN_14671513 [label="_JOIN_14671513None...",shape=box];
	_JOIN_14671513 -> 14671515;
	14925661 [label="14925661  register int cbv_15, cbv_16;...",shape=box];
	_JOIN_14683943 [label="_JOIN_14683943None...",shape=box];
	_JOIN_14683943 -> 14945857;
	_JOIN_14681859 [label="_JOIN_14681859None...",shape=box];
	_JOIN_14681859 -> 14943481;
	14941105 [label="14941105  register int cbv_54, cbv_55;...",shape=box];
	ForLoop14680817 [label="ForLoop14680817  for (k=kt; k<=cbv_56; k=k+28) {...",shape=box];
	ForLoop14680817 -> 14761764;
	ForLoop14680817 -> _JOIN_14680817;
	_JOIN_14390722 [label="_JOIN_14390722None...",shape=box];
	_JOIN_14390722 -> 14391066;
	ForLoop14665187 [label="ForLoop14665187  for (k=kt; k<=cbv_11; k=k+28) {...",shape=box];
	ForLoop14665187 -> 14729679;
	ForLoop14665187 -> _JOIN_14665187;
	_JOIN_14670397 [label="_JOIN_14670397None...",shape=box];
	_JOIN_14670397 -> 14930413;
	14667347 [label="14667347  int k;...",shape=box];
	14840034 [label="14840034  double scv_723;...",shape=box];
	14947045 [label="14947045  register int cbv_69, cbv_70;...",shape=box];
	_JOIN_14667345 [label="_JOIN_14667345None...",shape=box];
	_JOIN_14667345 -> 14667347;
	14747456 [label="14747456  double scv_345;...",shape=box];
	14756012 [label="14756012  double scv_461;...",shape=box];
	ForLoop14670471 [label="ForLoop14670471  for (k=cbv_27; k<=cbv_28; k=k+1) {...",shape=box];
	ForLoop14670471 -> 14741039;
	ForLoop14670471 -> _JOIN_14670471;
	ForLoop14664219 [label="ForLoop14664219  for (k=cbv_9; k<=cbv_10; k=k+1) {...",shape=box];
	ForLoop14664219 -> 14728205;
	ForLoop14664219 -> _JOIN_14664219;
	ForLoop14675681 [label="ForLoop14675681  for (k=cbv_42; k<=cbv_43; k=k+1) {...",shape=box];
	ForLoop14675681 -> 14751734;
	ForLoop14675681 -> _JOIN_14675681;
	14751069 [label="14751069  double scv_375, scv_376, scv_377, scv_378, scv_379, scv_380, scv_381, scv_382;...",shape=box];
	14685150 [label="14685150  scv_723=scv_723+A[i*ny+j]*x[j];...",shape=box];
	14685150 -> _JOIN_14685151;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest69.exe __orio_perftest69.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest69.exe  
{'[1, 0, 6, 1, 0, 0, 1, 0, 25, 20, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0810578}
{'[1, 0, 6, 1, 0, 0, 1, 0, 25, 20, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0806088}
{'[1, 0, 6, 1, 0, 0, 1, 0, 25, 20, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0806942}
{'[1, 0, 6, 1, 0, 0, 1, 0, 25, 20, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.080611}
{'[1, 0, 6, 1, 0, 0, 1, 0, 25, 20, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0806448}
{'[1, 0, 6, 1, 0, 0, 1, 0, 25, 20, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0806382}
{'[1, 0, 6, 1, 0, 0, 1, 0, 25, 20, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0806239}
{'[1, 0, 6, 1, 0, 0, 1, 0, 25, 20, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0806642}
{'[1, 0, 6, 1, 0, 0, 1, 0, 25, 20, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.080605}
{'[1, 0, 6, 1, 0, 0, 1, 0, 25, 20, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0806508}
{'[1, 0, 6, 1, 0, 0, 1, 0, 25, 20, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.080816}
{'[1, 0, 6, 1, 0, 0, 1, 0, 25, 20, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0806861}
{'[1, 0, 6, 1, 0, 0, 1, 0, 25, 20, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.080683}
{'[1, 0, 6, 1, 0, 0, 1, 0, 25, 20, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0807121}
{'[1, 0, 6, 1, 0, 0, 1, 0, 25, 20, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0806398}
{'[1, 0, 6, 1, 0, 0, 1, 0, 25, 20, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0807011}
{'[1, 0, 6, 1, 0, 0, 1, 0, 25, 20, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.080961}
{'[1, 0, 6, 1, 0, 0, 1, 0, 25, 20, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0806279}
{'[1, 0, 6, 1, 0, 0, 1, 0, 25, 20, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0807269}
{'[1, 0, 6, 1, 0, 0, 1, 0, 25, 20, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0806751}
{'[1, 0, 6, 1, 0, 0, 1, 0, 25, 20, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0806589}
{'[1, 0, 6, 1, 0, 0, 1, 0, 25, 20, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0806201}
{'[1, 0, 6, 1, 0, 0, 1, 0, 25, 20, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.080653}
{'[1, 0, 6, 1, 0, 0, 1, 0, 25, 20, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0807211}
{'[1, 0, 6, 1, 0, 0, 1, 0, 25, 20, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0807109}
{'[1, 0, 6, 1, 0, 0, 1, 0, 25, 20, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.080982}
{'[1, 0, 6, 1, 0, 0, 1, 0, 25, 20, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0807352}
{'[1, 0, 6, 1, 0, 0, 1, 0, 25, 20, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.080699}
{'[1, 0, 6, 1, 0, 0, 1, 0, 25, 20, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0806139}
{'[1, 0, 6, 1, 0, 0, 1, 0, 25, 20, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0806561}

out:
 ["{'[1, 0, 6, 1, 0, 0, 1, 0, 25, 20, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0810578}", "{'[1, 0, 6, 1, 0, 0, 1, 0, 25, 20, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0806088}", "{'[1, 0, 6, 1, 0, 0, 1, 0, 25, 20, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0806942}", "{'[1, 0, 6, 1, 0, 0, 1, 0, 25, 20, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.080611}", "{'[1, 0, 6, 1, 0, 0, 1, 0, 25, 20, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0806448}", "{'[1, 0, 6, 1, 0, 0, 1, 0, 25, 20, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0806382}", "{'[1, 0, 6, 1, 0, 0, 1, 0, 25, 20, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0806239}", "{'[1, 0, 6, 1, 0, 0, 1, 0, 25, 20, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0806642}", "{'[1, 0, 6, 1, 0, 0, 1, 0, 25, 20, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.080605}", "{'[1, 0, 6, 1, 0, 0, 1, 0, 25, 20, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0806508}", "{'[1, 0, 6, 1, 0, 0, 1, 0, 25, 20, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.080816}", "{'[1, 0, 6, 1, 0, 0, 1, 0, 25, 20, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0806861}", "{'[1, 0, 6, 1, 0, 0, 1, 0, 25, 20, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.080683}", "{'[1, 0, 6, 1, 0, 0, 1, 0, 25, 20, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0807121}", "{'[1, 0, 6, 1, 0, 0, 1, 0, 25, 20, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0806398}", "{'[1, 0, 6, 1, 0, 0, 1, 0, 25, 20, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0807011}", "{'[1, 0, 6, 1, 0, 0, 1, 0, 25, 20, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.080961}", "{'[1, 0, 6, 1, 0, 0, 1, 0, 25, 20, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0806279}", "{'[1, 0, 6, 1, 0, 0, 1, 0, 25, 20, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0807269}", "{'[1, 0, 6, 1, 0, 0, 1, 0, 25, 20, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0806751}", "{'[1, 0, 6, 1, 0, 0, 1, 0, 25, 20, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0806589}", "{'[1, 0, 6, 1, 0, 0, 1, 0, 25, 20, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0806201}", "{'[1, 0, 6, 1, 0, 0, 1, 0, 25, 20, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.080653}", "{'[1, 0, 6, 1, 0, 0, 1, 0, 25, 20, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0807211}", "{'[1, 0, 6, 1, 0, 0, 1, 0, 25, 20, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0807109}", "{'[1, 0, 6, 1, 0, 0, 1, 0, 25, 20, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.080982}", "{'[1, 0, 6, 1, 0, 0, 1, 0, 25, 20, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0807352}", "{'[1, 0, 6, 1, 0, 0, 1, 0, 25, 20, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.080699}", "{'[1, 0, 6, 1, 0, 0, 1, 0, 25, 20, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0806139}", "{'[1, 0, 6, 1, 0, 0, 1, 0, 25, 20, 0, 27, 1, 0, 1, 1, 1, 1]' : 0.0806561}"]
returning from 'run': {'[1, 0, 6, 1, 0, 0, 1, 0, 25, 20, 0, 27, 1, 0, 1, 1, 1, 1]': ([0.0810578, 0.0806088, 0.0806942, 0.080611, 0.0806448, 0.0806382, 0.0806239, 0.0806642, 0.080605, 0.0806508, 0.080816, 0.0806861, 0.080683, 0.0807121, 0.0806398, 0.0807011, 0.080961, 0.0806279, 0.0807269, 0.0806751, 0.0806589, 0.0806201, 0.080653, 0.0807211, 0.0807109, 0.080982, 0.0807352, 0.080699, 0.0806139, 0.0806561], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.0810578, 0.0806088, 0.0806942, 0.080611, 0.0806448, 0.0806382, 0.0806239, 0.0806642, 0.080605, 0.0806508, 0.080816, 0.0806861, 0.080683, 0.0807121, 0.0806398, 0.0807011, 0.080961, 0.0806279, 0.0807269, 0.0806751, 0.0806589, 0.0806201, 0.080653, 0.0807211, 0.0807109, 0.080982, 0.0807352, 0.080699, 0.0806139, 0.0806561], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 6, 1, 0, 0, 1, 0, 25, 20, 0, 27, 1, 0, 1, 1, 1, 1]': ([0.0810578, 0.0806088, 0.0806942, 0.080611, 0.0806448, 0.0806382, 0.0806239, 0.0806642, 0.080605, 0.0806508, 0.080816, 0.0806861, 0.080683, 0.0807121, 0.0806398, 0.0807011, 0.080961, 0.0806279, 0.0807269, 0.0806751, 0.0806589, 0.0806201, 0.080653, 0.0807211, 0.0807109, 0.080982, 0.0807352, 0.080699, 0.0806139, 0.0806561], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Measurements: [0.14398506666666663, 0.08145506333333333, 0.1916021333333333, 0.17393919999999996, 0.1708638666666667, 0.25524353333333333, 0.24560026666666665, 0.16759266666666664, 0.22705523333333338, 0.25221363333333335, 0.1246998, 0.18044923333333335, 0.22342209999999998, 0.14318286666666663, 0.09637373000000003, 0.21129499999999998, 0.24268416666666667, 0.10866433333333333, 0.1402508, 0.15326560000000006, 0.16464783333333338, 0.09244366666666663, 0.16084943333333335, 0.07798692666666666, 0.27540343333333334, 0.1631748666666667, 0.2651661666666667, 0.3049499666666666, 0.1874083666666667, 0.07909424333333333, 0.18741649999999999, 0.08070259666666667]
   T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U_I U_J U_K RT_I RT_J RT_K
1     5    3    5    0    6    0       1       0  10  26   0    0    0    0
2     5    0    4    6    5    2       1       0   0  28  10    1    0    1
3     4    0    6    4    6    6       1       1  28   2   0    0    0    1
4     0    2    5    0    3    0       0       1   0  10  22    0    2    0
5     0    0    3    4    3    2       0       1   0   8   0    0    0    0
6     0    5    1    5    4    5       0       0   0  17  27    2    0    0
7     5    5    2    0    5    4       1       1  21  27   0    0    0    2
8     4    4    6    0    2    6       0       1   0   4  28    0    0    0
9     2    2    3    5    2    6       0       0  29  26   0    0    0    1
10    6    1    2    4    0    2       1       1   0  24  24    0    0    0
11    3    6    4    5    4    0       0       0   0   2   4    0    0    2
12    5    0    4    6    1    3       1       1  23   0  22    0    1    0
13    6    2    1    6    4    1       1       1   0   3   1    0    0    0
14    2    6    1    3    0    4       1       0   7   0  13    0    0    2
15    5    1    0    0    4    2       0       0  16   0  19    0    2    0
16    4    1    1    6    0    0       0       0  21  19   0    2    0    0
17    2    4    0    2    5    5       1       1   0  16  29    2    0    0
18    0    2    0    0    5    0       1       1  14   0   7    0    1    1
19    0    6    5    4    5    5       1       1  14   4   0    0    2    0
20    1    6    0    5    6    3       1       0  27   0  25    0    0    0
21    5    5    6    3    5    0       0       1  29   0  21    0    0    1
22    6    5    2    0    0    5       1       0   3  18   0    0    1    1
23    0    0    1    5    2    4       1       1  28   0  26    0    0    2
24    6    2    3    5    6    6       0       0   8   0   3    0    1    1
25    4    6    1    3    0    5       0       1  29   4   0    0    2    0
26    0    2    1    2    0    2       0       0   0  29   9    0    0    0
27    3    1    0    0    1    5       1       0   7   6   0    2    0    0
28    2    2    2    1    4    1       1       1  28  29   0    0    2    0
29    3    5    2    0    3    0       0       1  26   0   2    2    0    0
30    1    5    5    6    0    0       1       0   1   0   2    1    1    0
31    5    6    1    5    6    0       0       1   0  22  26    0    1    1
32    1    0    6    1    0    0       1       0  20   0  27    1    0    1
   VEC1 VEC2  cost_mean
1     1    0 0.14398507
2     0    1 0.08145506
3     1    0 0.19160213
4     0    0 0.17393920
5     0    0 0.17086387
6     0    0 0.25524353
7     1    1 0.24560027
8     1    1 0.16759267
9     1    0 0.22705523
10    0    0 0.25221363
11    1    0 0.12469980
12    1    0 0.18044923
13    0    0 0.22342210
14    0    0 0.14318287
15    1    0 0.09637373
16    1    1 0.21129500
17    1    0 0.24268417
18    1    1 0.10866433
19    1    1 0.14025080
20    0    1 0.15326560
21    0    1 0.16464783
22    0    0 0.09244367
23    1    1 0.16084943
24    0    1 0.07798693
25    0    1 0.27540343
26    1    1 0.16317487
27    1    1 0.26516617
28    0    0 0.30494997
29    0    0 0.18740837
30    1    1 0.07909424
31    1    0 0.18741650
32    1    1 0.08070260

Step Space Names:  [1] "T1_I"    "T1_J"    "T1_K"    "T2_I"    "T2_J"    "T2_K"    "ACOPY_x"
 [8] "ACOPY_y" "U1_I"    "U_I"     "U_J"     "U_K"     "RT_I"    "RT_J"   
[15] "RT_K"    "SCR"     "VEC1"    "VEC2"   

Heteroscedasticity Test p-value: 0.39536243525
Regression Step:            Df  Sum Sq  Mean Sq F value  Pr(>F)   
T1_I         1 0.00006 0.000062   0.027 0.87088   
T1_J         1 0.00021 0.000209   0.093 0.76516   
T1_K         1 0.01449 0.014486   6.429 0.02284 * 
T2_I         1 0.00010 0.000098   0.044 0.83756   
T2_J         1 0.00028 0.000277   0.123 0.73090   
T2_K         1 0.00412 0.004125   1.831 0.19608   
ACOPY_x      1 0.00056 0.000562   0.249 0.62473   
ACOPY_y      1 0.02814 0.028140  12.489 0.00301 **
U_I          1 0.00206 0.002059   0.914 0.35427   
U_J          1 0.02306 0.023057  10.233 0.00598 **
U_K          1 0.00015 0.000148   0.066 0.80122   
RT_I         1 0.00829 0.008293   3.681 0.07428 . 
RT_J         1 0.00065 0.000648   0.288 0.59950   
RT_K         1 0.00481 0.004809   2.134 0.16467   
VEC1         1 0.00021 0.000214   0.095 0.76210   
VEC2         1 0.00340 0.003398   1.508 0.23834   
Residuals   15 0.03380 0.002253                   
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Predicting Best
Identical predictions (tol = 1e-5): 1
Getting fixed variables
Fixed Variables: {'ACOPY_y': 0, 'U1_I': 25, 'U_J': 0, 'SCR': 1}
Pruning Data
Dimensions of Pruned Data: [1] 1173   18
Pruning Model
Pruned Search Space Size: 18
Best Predicted:        T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
207276    3    4    4    4    6    0       0       0   25   1   0  27    0    0
       RT_K SCR VEC1 VEC2
207276    2   1    1    1

Pruned Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'U_I', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'VEC1', 'VEC2']
Fixed Factors: {'ACOPY_y': 0, 'U1_I': 25, 'U_J': 0, 'SCR': 1}
Fixed Factors: {'ACOPY_y': 0, 'U1_I': 25, 'U_J': 0, 'SCR': 1}
Length of requested configs: 1
Result was on Database, Returning Now
My perf_costs: {'[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]': ([0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
0.1290727
[3, 4, 4, 4, 6, 0, 0, 0, 25, 1, 0, 27, 0, 0, 2, 1, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	6
        Additions: 		1025
        Multiplications: 	372
        Divisions: 		0
        Logical: 		0
        Reads: 			2477
        Writes: 		585
        Comparisons:		22
        Gotos: 			0
        
digraph CFG {
	15014438 [label="15014438  double x_copy;...",shape=box];
	_JOIN_14949646 [label="_JOIN_14949646None...",shape=box];
	_JOIN_14949646 -> 14949990;
	_JOIN_15019606 [label="_JOIN_15019606None...",shape=box];
	_JOIN_15019606 -> 15019607;
	15027674 [label="15027674  double scv_63, scv_64, scv_65, scv_66, scv_67, scv_68, scv_69, scv_70;...",shape=box];
	15063178 [label="15063178  register int cbv_7, cbv_8;...",shape=box];
	15060922 [label="15060922  register int cbv_2;...",shape=box];
	15064404 [label="15064404  register int cbv_10;...",shape=box];
	15020573 [label="15020573  double scv_1;...",shape=box];
	15040797 [label="15040797  double scv_126, scv_127, scv_128, scv_129, scv_130, scv_131, scv_132, scv_133;...",shape=box];
	15046240 [label="15046240  tmp[i]=scv_155;...",shape=box];
	15046240 -> _JOIN_15020478;
	15061990 [label="15061990  register int cbv_4, cbv_5;...",shape=box];
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 14948987;
	15014471 [label="15014471  int i;...",shape=box];
	15014471 -> ForLoop15018527;
	_JOIN_15014610 [label="_JOIN_15014610None...",shape=box];
	_JOIN_15014610 -> ForLoop15018525;
	_JOIN_15017412 [label="_JOIN_15017412None...",shape=box];
	_JOIN_15017412 -> 15061990;
	15016614 [label="15016614  int k;...",shape=box];
	15059201 [label="15059201  register int cbv_1;...",shape=box];
	ForLoop15018522 [label="ForLoop15018522  for (k=cbv_7; k<=cbv_8; k=k+1) {...",shape=box];
	ForLoop15018522 -> 15028339;
	ForLoop15018522 -> _JOIN_15018522;
	ForLoop15020405 [label="ForLoop15020405  for (k=kt; k<=cbv_11; k=k+28) {...",shape=box];
	ForLoop15020405 -> 15040797;
	ForLoop15020405 -> _JOIN_15020405;
	ForLoop15020480 [label="ForLoop15020480  for (ii=iii; ii<=min(nx-1,iii+448); ii=ii+64) {...",shape=box];
	ForLoop15020480 -> 15014471;
	ForLoop15020480 -> _JOIN_15020480;
	ForLoop15020481 [label="ForLoop15020481  for (iii=0; iii<=nx-1; iii=iii+512) {...",shape=box];
	ForLoop15020481 -> ForLoop15020480;
	ForLoop15020481 -> _JOIN_15020481;
	ForLoop15014610 [label="ForLoop15014610  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop15014610 -> ForLoop15014608;
	ForLoop15014610 -> _JOIN_15014610;
	_JOIN_15018448 [label="_JOIN_15018448None...",shape=box];
	_JOIN_15018448 -> 15063178;
	ForLoop15018525 [label="ForLoop15018525  for (kk=0; kk<=ny-1; kk=kk+128) {...",shape=box];
	ForLoop15018525 -> 15060922;
	ForLoop15018525 -> _JOIN_15018525;
	ForLoop15020473 [label="ForLoop15020473  for (k=cbv_12; k<=cbv_13; k=k+1) {...",shape=box];
	ForLoop15020473 -> 15041453;
	ForLoop15020473 -> _JOIN_15020473;
	ForLoop15018527 [label="ForLoop15018527  for (i=ii; i<=min(nx-1,ii+63)-1; i=i+2) {...",shape=box];
	ForLoop15018527 -> 15037158;
	ForLoop15018527 -> _JOIN_15018527;
	15038922 [label="15038922  double scv_94, scv_95, scv_96, scv_97, scv_98, scv_99, scv_100, scv_101;...",shape=box];
	ForLoop14949646 [label="ForLoop14949646  for (i=0; i<=cbv_1; i=i+26) {...",shape=box];
	ForLoop14949646 -> 14949419;
	ForLoop14949646 -> _JOIN_14949646;
	_JOIN_15018522 [label="_JOIN_15018522None...",shape=box];
	_JOIN_15018522 -> _JOIN_15018525;
	_JOIN_15020478 [label="_JOIN_15020478None...",shape=box];
	_JOIN_15020478 -> _JOIN_15020480;
	15017482 [label="15017482  int k;...",shape=box];
	ForLoop14949715 [label="ForLoop14949715  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop14949715 -> 14949714;
	ForLoop14949715 -> _JOIN_14949715;
	_JOIN_15020476 [label="_JOIN_15020476None...",shape=box];
	_JOIN_15020476 -> 15046240;
	15026200 [label="15026200  double scv_62;...",shape=box];
	14949419 [label="14949419  y[i]=0.0;...",shape=box];
	15065472 [label="15065472  register int cbv_12, cbv_13;...",shape=box];
	_JOIN_15017480 [label="_JOIN_15017480None...",shape=box];
	_JOIN_15017480 -> 15017482;
	ForLoop15018448 [label="ForLoop15018448  for (k=kt; k<=cbv_6; k=k+28) {...",shape=box];
	ForLoop15018448 -> 15027674;
	ForLoop15018448 -> _JOIN_15018448;
	_JOIN_15018525 [label="_JOIN_15018525None...",shape=box];
	_JOIN_15018525 -> 15037176;
	_JOIN_15020473 [label="_JOIN_15020473None...",shape=box];
	_JOIN_15020473 -> _JOIN_15020476;
	_JOIN_15018527 [label="_JOIN_15018527None...",shape=box];
	_JOIN_15018527 -> ForLoop15020478;
	ForLoop15018652 [label="ForLoop15018652  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop15018652 -> ForLoop15018651;
	ForLoop15018652 -> _JOIN_15018652;
	ForLoop15018650 [label="ForLoop15018650  for (j=jj; j<=cbv_9; j=j+1) {...",shape=box];
	ForLoop15018650 -> 15018649;
	ForLoop15018650 -> _JOIN_15018650;
	ForLoop15018651 [label="ForLoop15018651  for (jj=jjj; jj<=min(ny-1,jjj+expected=9369846271501.798828
actual=9369846271501.798828
1920); jj=jj+128) {...",shape=box];
	ForLoop15018651 -> 15063258;
	ForLoop15018651 -> _JOIN_15018651;
	_JOIN_15020481 [label="_JOIN_15020481None...",shape=box];
	15041453 [label="15041453  double scv_154;...",shape=box];
	ForLoop15017412 [label="ForLoop15017412  for (k=kt; k<=cbv_3; k=k+28) {...",shape=box];
	ForLoop15017412 -> 15025544;
	ForLoop15017412 -> _JOIN_15017412;
	15063258 [label="15063258  register int cbv_9;...",shape=box];
	15037176 [label="15037176  tmp[(i+1)]=scv_92;...",shape=box];
	_JOIN_15016613 [label="_JOIN_15016613None...",shape=box];
	_JOIN_15016613 -> 15016614;
	_JOIN_14949715 [label="_JOIN_14949715None...",shape=box];
	_JOIN_14949715 -> 15014438;
	14949714 [label="14949714  y[i]=0.0;...",shape=box];
	14949714 -> _JOIN_14949715;
	_JOIN_15020480 [label="_JOIN_15020480None...",shape=box];
	_JOIN_15020480 -> _JOIN_15020481;
	14949990 [label="14949990  register int cbv_2, cbv_3;...",shape=box];
	15025544 [label="15025544  double scv_34, scv_35, scv_36, scv_37, scv_38, scv_39, scv_40, scv_41;...",shape=box];
	_JOIN_15014606 [label="_JOIN_15014606None...",shape=box];
	_JOIN_15014606 -> _JOIN_15014608;
	_JOIN_15018652 [label="_JOIN_15018652None...",shape=box];
	_JOIN_15018652 -> ForLoop15020476;
	_JOIN_15014608 [label="_JOIN_15014608None...",shape=box];
	_JOIN_15014608 -> _JOIN_15014610;
	_JOIN_15018650 [label="_JOIN_15018650None...",shape=box];
	_JOIN_15018650 -> _JOIN_15018651;
	_JOIN_15018651 [label="_JOIN_15018651None...",shape=box];
	_JOIN_15018651 -> _JOIN_15018652;
	ForLoop15019606 [label="ForLoop15019606  for (kt=kk; kt<=cbv_10; kt=kt+32) {...",shape=box];
	ForLoop15019606 -> 15038922;
	ForLoop15019606 -> _JOIN_15019606;
	14948987 [label="14948987  int i;...",shape=box];
	15028339 [label="15028339  double scv_91;...",shape=box];
	ForLoop15020476 [label="ForLoop15020476  for (kk=0; kk<=ny-1; kk=kk+128) {...",shape=box];
	ForLoop15020476 -> 15064404;
	ForLoop15020476 -> _JOIN_15020476;
	ForLoop15014606 [label="ForLoop15014606  for (j=jj; j<=cbv_1; j=j+1) {...",shape=box];
	ForLoop15014606 -> 15020573;
	ForLoop15014606 -> _JOIN_15014606;
	15018649 [label="15018649  scv_155=scv_155+A[i*ny+j]*x[j];...",shape=box];
	15018649 -> _JOIN_15018650;
	ForLoop15017480 [label="ForLoop15017480  for (k=cbv_4; k<=cbv_5; k=k+1) {...",shape=box];
	ForLoop15017480 -> 15026200;
	ForLoop15017480 -> _JOIN_15017480;
	15019607 [label="15019607  int k;...",shape=box];
	ForLoop15020478 [label="ForLoop15020478  for (i=(min(nx-1,ii+63))-(((min(nx-1,ii+63))-(ii)+1)%2)+1; i<=min(nx-1,ii+63); i=i+1) {...",shape=box];
	ForLoop15020478 -> 15046228;
	ForLoop15020478 -> _JOIN_15020478;
	_JOIN_15020405 [label="_JOIN_15020405None...",shape=box];
	_JOIN_15020405 -> 15065472;
	15037158 [label="15037158  double scv_92, scv_93;...",shape=box];
	ForLoop15016613 [label="ForLoop15016613  for (kt=kk; kt<=cbv_2; kt=kt+32) {...",shape=box];
	ForLoop15016613 -> 15023605;
	ForLoop15016613 -> _JOIN_15016613;
	15046228 [label="15046228  double scv_155;...",shape=box];
	ForLoop15014608 [label="ForLoop15014608  for (jj=jjj; jj<=min(ny-1,jjj+1920); jj=jj+128) {...",shape=box];
	ForLoop15014608 -> 15059201;
	ForLoop15014608 -> _JOIN_15014608;
	15023605 [label="15023605  double scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8, scv_9;...",shape=box];

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest70.exe __orio_perftest70.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest70.exe  
{'[3, 4, 4, 4, 6, 0, 0, 0, 25, 1, 0, 27, 0, 0, 2, 1, 1, 1]' : 0.0844831}
{'[3, 4, 4, 4, 6, 0, 0, 0, 25, 1, 0, 27, 0, 0, 2, 1, 1, 1]' : 0.0840571}
{'[3, 4, 4, 4, 6, 0, 0, 0, 25, 1, 0, 27, 0, 0, 2, 1, 1, 1]' : 0.0840039}
{'[3, 4, 4, 4, 6, 0, 0, 0, 25, 1, 0, 27, 0, 0, 2, 1, 1, 1]' : 0.084059}
{'[3, 4, 4, 4, 6, 0, 0, 0, 25, 1, 0, 27, 0, 0, 2, 1, 1, 1]' : 0.0839581}
{'[3, 4, 4, 4, 6, 0, 0, 0, 25, 1, 0, 27, 0, 0, 2, 1, 1, 1]' : 0.0839982}
{'[3, 4, 4, 4, 6, 0, 0, 0, 25, 1, 0, 27, 0, 0, 2, 1, 1, 1]' : 0.0840271}
{'[3, 4, 4, 4, 6, 0, 0, 0, 25, 1, 0, 27, 0, 0, 2, 1, 1, 1]' : 0.0839751}
{'[3, 4, 4, 4, 6, 0, 0, 0, 25, 1, 0, 27, 0, 0, 2, 1, 1, 1]' : 0.08408}
{'[3, 4, 4, 4, 6, 0, 0, 0, 25, 1, 0, 27, 0, 0, 2, 1, 1, 1]' : 0.0840211}
{'[3, 4, 4, 4, 6, 0, 0, 0, 25, 1, 0, 27, 0, 0, 2, 1, 1, 1]' : 0.0839529}
{'[3, 4, 4, 4, 6, 0, 0, 0, 25, 1, 0, 27, 0, 0, 2, 1, 1, 1]' : 0.084425}
{'[3, 4, 4, 4, 6, 0, 0, 0, 25, 1, 0, 27, 0, 0, 2, 1, 1, 1]' : 0.0840299}
{'[3, 4, 4, 4, 6, 0, 0, 0, 25, 1, 0, 27, 0, 0, 2, 1, 1, 1]' : 0.0840101}
{'[3, 4, 4, 4, 6, 0, 0, 0, 25, 1, 0, 27, 0, 0, 2, 1, 1, 1]' : 0.084048}
{'[3, 4, 4, 4, 6, 0, 0, 0, 25, 1, 0, 27, 0, 0, 2, 1, 1, 1]' : 0.084028}
{'[3, 4, 4, 4, 6, 0, 0, 0, 25, 1, 0, 27, 0, 0, 2, 1, 1, 1]' : 0.0839961}
{'[3, 4, 4, 4, 6, 0, 0, 0, 25, 1, 0, 27, 0, 0, 2, 1, 1, 1]' : 0.083941}
{'[3, 4, 4, 4, 6, 0, 0, 0, 25, 1, 0, 27, 0, 0, 2, 1, 1, 1]' : 0.0839992}
{'[3, 4, 4, 4, 6, 0, 0, 0, 25, 1, 0, 27, 0, 0, 2, 1, 1, 1]' : 0.083957}
{'[3, 4, 4, 4, 6, 0, 0, 0, 25, 1, 0, 27, 0, 0, 2, 1, 1, 1]' : 0.0841339}
{'[3, 4, 4, 4, 6, 0, 0, 0, 25, 1, 0, 27, 0, 0, 2, 1, 1, 1]' : 0.0840001}
{'[3, 4, 4, 4, 6, 0, 0, 0, 25, 1, 0, 27, 0, 0, 2, 1, 1, 1]' : 0.084121}
{'[3, 4, 4, 4, 6, 0, 0, 0, 25, 1, 0, 27, 0, 0, 2, 1, 1, 1]' : 0.0840561}
{'[3, 4, 4, 4, 6, 0, 0, 0, 25, 1, 0, 27, 0, 0, 2, 1, 1, 1]' : 0.084121}
{'[3, 4, 4, 4, 6, 0, 0, 0, 25, 1, 0, 27, 0, 0, 2, 1, 1, 1]' : 0.084059}
{'[3, 4, 4, 4, 6, 0, 0, 0, 25, 1, 0, 27, 0, 0, 2, 1, 1, 1]' : 0.084023}
{'[3, 4, 4, 4, 6, 0, 0, 0, 25, 1, 0, 27, 0, 0, 2, 1, 1, 1]' : 0.0842149}
{'[3, 4, 4, 4, 6, 0, 0, 0, 25, 1, 0, 27, 0, 0, 2, 1, 1, 1]' : 0.0839992}
{'[3, 4, 4, 4, 6, 0, 0, 0, 25, 1, 0, 27, 0, 0, 2, 1, 1, 1]' : 0.0843248}

out:
 ["{'[3, 4, 4, 4, 6, 0, 0, 0, 25, 1, 0, 27, 0, 0, 2, 1, 1, 1]' : 0.0844831}", "{'[3, 4, 4, 4, 6, 0, 0, 0, 25, 1, 0, 27, 0, 0, 2, 1, 1, 1]' : 0.0840571}", "{'[3, 4, 4, 4, 6, 0, 0, 0, 25, 1, 0, 27, 0, 0, 2, 1, 1, 1]' : 0.0840039}", "{'[3, 4, 4, 4, 6, 0, 0, 0, 25, 1, 0, 27, 0, 0, 2, 1, 1, 1]' : 0.084059}", "{'[3, 4, 4, 4, 6, 0, 0, 0, 25, 1, 0, 27, 0, 0, 2, 1, 1, 1]' : 0.0839581}", "{'[3, 4, 4, 4, 6, 0, 0, 0, 25, 1, 0, 27, 0, 0, 2, 1, 1, 1]' : 0.0839982}", "{'[3, 4, 4, 4, 6, 0, 0, 0, 25, 1, 0, 27, 0, 0, 2, 1, 1, 1]' : 0.0840271}", "{'[3, 4, 4, 4, 6, 0, 0, 0, 25, 1, 0, 27, 0, 0, 2, 1, 1, 1]' : 0.0839751}", "{'[3, 4, 4, 4, 6, 0, 0, 0, 25, 1, 0, 27, 0, 0, 2, 1, 1, 1]' : 0.08408}", "{'[3, 4, 4, 4, 6, 0, 0, 0, 25, 1, 0, 27, 0, 0, 2, 1, 1, 1]' : 0.0840211}", "{'[3, 4, 4, 4, 6, 0, 0, 0, 25, 1, 0, 27, 0, 0, 2, 1, 1, 1]' : 0.0839529}", "{'[3, 4, 4, 4, 6, 0, 0, 0, 25, 1, 0, 27, 0, 0, 2, 1, 1, 1]' : 0.084425}", "{'[3, 4, 4, 4, 6, 0, 0, 0, 25, 1, 0, 27, 0, 0, 2, 1, 1, 1]' : 0.0840299}", "{'[3, 4, 4, 4, 6, 0, 0, 0, 25, 1, 0, 27, 0, 0, 2, 1, 1, 1]' : 0.0840101}", "{'[3, 4, 4, 4, 6, 0, 0, 0, 25, 1, 0, 27, 0, 0, 2, 1, 1, 1]' : 0.084048}", "{'[3, 4, 4, 4, 6, 0, 0, 0, 25, 1, 0, 27, 0, 0, 2, 1, 1, 1]' : 0.084028}", "{'[3, 4, 4, 4, 6, 0, 0, 0, 25, 1, 0, 27, 0, 0, 2, 1, 1, 1]' : 0.0839961}", "{'[3, 4, 4, 4, 6, 0, 0, 0, 25, 1, 0, 27, 0, 0, 2, 1, 1, 1]' : 0.083941}", "{'[3, 4, 4, 4, 6, 0, 0, 0, 25, 1, 0, 27, 0, 0, 2, 1, 1, 1]' : 0.0839992}", "{'[3, 4, 4, 4, 6, 0, 0, 0, 25, 1, 0, 27, 0, 0, 2, 1, 1, 1]' : 0.083957}", "{'[3, 4, 4, 4, 6, 0, 0, 0, 25, 1, 0, 27, 0, 0, 2, 1, 1, 1]' : 0.0841339}", "{'[3, 4, 4, 4, 6, 0, 0, 0, 25, 1, 0, 27, 0, 0, 2, 1, 1, 1]' : 0.0840001}", "{'[3, 4, 4, 4, 6, 0, 0, 0, 25, 1, 0, 27, 0, 0, 2, 1, 1, 1]' : 0.084121}", "{'[3, 4, 4, 4, 6, 0, 0, 0, 25, 1, 0, 27, 0, 0, 2, 1, 1, 1]' : 0.0840561}", "{'[3, 4, 4, 4, 6, 0, 0, 0, 25, 1, 0, 27, 0, 0, 2, 1, 1, 1]' : 0.084121}", "{'[3, 4, 4, 4, 6, 0, 0, 0, 25, 1, 0, 27, 0, 0, 2, 1, 1, 1]' : 0.084059}", "{'[3, 4, 4, 4, 6, 0, 0, 0, 25, 1, 0, 27, 0, 0, 2, 1, 1, 1]' : 0.084023}", "{'[3, 4, 4, 4, 6, 0, 0, 0, 25, 1, 0, 27, 0, 0, 2, 1, 1, 1]' : 0.0842149}", "{'[3, 4, 4, 4, 6, 0, 0, 0, 25, 1, 0, 27, 0, 0, 2, 1, 1, 1]' : 0.0839992}", "{'[3, 4, 4, 4, 6, 0, 0, 0, 25, 1, 0, 27, 0, 0, 2, 1, 1, 1]' : 0.0843248}"]
returning from 'run': {'[3, 4, 4, 4, 6, 0, 0, 0, 25, 1, 0, 27, 0, 0, 2, 1, 1, 1]': ([0.0844831, 0.0840571, 0.0840039, 0.084059, 0.0839581, 0.0839982, 0.0840271, 0.0839751, 0.08408, 0.0840211, 0.0839529, 0.084425, 0.0840299, 0.0840101, 0.084048, 0.084028, 0.0839961, 0.083941, 0.0839992, 0.083957, 0.0841339, 0.0840001, 0.084121, 0.0840561, 0.084121, 0.084059, 0.084023, 0.0842149, 0.0839992, 0.0843248], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.0844831, 0.0840571, 0.0840039, 0.084059, 0.0839581, 0.0839982, 0.0840271, 0.0839751, 0.08408, 0.0840211, 0.0839529, 0.084425, 0.0840299, 0.0840101, 0.084048, 0.084028, 0.0839961, 0.083941, 0.0839992, 0.083957, 0.0841339, 0.0840001, 0.084121, 0.0840561, 0.084121, 0.084059, 0.084023, 0.0842149, 0.0839992, 0.0843248], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[3, 4, 4, 4, 6, 0, 0, 0, 25, 1, 0, 27, 0, 0, 2, 1, 1, 1]': ([0.0844831, 0.0840571, 0.0840039, 0.084059, 0.0839581, 0.0839982, 0.0840271, 0.0839751, 0.08408, 0.0840211, 0.0839529, 0.084425, 0.0840299, 0.0840101, 0.084048, 0.084028, 0.0839961, 0.083941, 0.0839992, 0.083957, 0.0841339, 0.0840001, 0.084121, 0.0840561, 0.084121, 0.084059, 0.084023, 0.0842149, 0.0839992, 0.0843248], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Slowdown: 0.651339103208
Budget: 68/1
Step 2
 ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + U_I + U_K + RT_I + RT_J + RT_K + VEC1 + VEC2
Fixed Factors: {'ACOPY_y': 0, 'U1_I': 25, 'U_J': 0, 'SCR': 1}
Full data does not fit on budget
Computing D-Optimal Design
Updating Constraints
Updated Constraint: True and (((T2_I ==1 )or (T2_I %T1_I ==0 ))) and (((T2_J ==1 )or (T2_J %T1_J ==0 ))) and (((T2_K ==1 )or (T2_K %T1_K ==0 ))) and ((RT_I *RT_J +RT_I *RT_K +RT_J *RT_K <=150 )) and (((U_I ==1 )or (U_J ==1 )or (U_K ==1 )))
Computing D-Optimal Design with 28 experiments
Design Formula:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + U_I + U_K + RT_I + RT_J + RT_K + VEC1 + VEC2
Starting "optMonteCarlo" run
       var low high center nLevels round factor   mix
1     T1_I   0    6      0       7     0  FALSE FALSE
2     T1_J   0    6      0       7     0  FALSE FALSE
3     T1_K   0    6      0       7     0  FALSE FALSE
4     T2_I   0    6      0       7     0  FALSE FALSE
5     T2_J   0    6      0       7     0  FALSE FALSE
6     T2_K   0    6      0       7     0  FALSE FALSE
7  ACOPY_x   0    1      0       2     0  FALSE FALSE
8      U_I   0   29      0      30     0  FALSE FALSE
9      U_K   0   29      0      30     0  FALSE FALSE
10    RT_I   0    2      0       3     0  FALSE FALSE
11    RT_J   0    2      0       3     0  FALSE FALSE
12    RT_K   0    2      0       3     0  FALSE FALSE
13    VEC1   0    1      0       2     0  FALSE FALSE
14    VEC2   0    1      0       2     0  FALSE FALSE

   T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x U_I U_K RT_I RT_J RT_K VEC1 VEC2
1     1    4    2    3    6    5       0  28   5    0    2    0    0    1
2     5    1    6    3    4    6       1  21  27    0    2    0    1    1
3     4    1    0    6    2    3       0  12   2    0    0    0    1    1
4     4    4    1    0    0    5       1  24  15    2    0    0    0    1
5     1    3    5    5    0    0       1   3  15    0    0    2    1    1
6     6    0    2    6    4    5       0   0  21    2    0    0    0    0
7     6    2    3    0    4    1       1  12  12    0    0    0    1    0
8     2    6    6    3    0    0       0  24   2    1    0    0    1    1
9     5    6    2    6    6    2       1   8   5    0    2    0    0    0
10    5    1    4    0    5    5       0  14   0    0    0    2    1    0
11    1    5    1    5    6    4       1  26  28    1    1    0    1    0
12    5    0    3    6    2    0       1  27   5    0    0    2    0    0
13    3    0    3    3    1    5       0  29  29    0    2    0    1    0
14    4    6    6    4    4    5       1  26   1    0    0    2    1    1
15    0    3    5    2    2    6       1  29   5    2    0    0    1    0
16    2    5    3    2    0    6       1  25  25    0    0    0    0    0
17    3    6    2    5    0    0       0  27  28    2    0    0    0    1
18    0    2    5    6    5    4       0  17  29    0    0    0    0    1
19    4    1    5    0    5    0       1   0  25    1    1    0    0    1
20    2    0    6    0    3    5       0  16  17    0    0    2    0    1
21    4    6    2    0    6    1       0  19   6    0    1    0    0    0
22    0    0    2    5    6    2       1  16  13    1    0    1    0    1
23    6    5    6    6    3    5       0   2  28    0    1    1    0    1
24    2    6    0    0    0    4       1   2   1    0    1    1    1    1
25    0    3    4    1    0    4       1   2  13    0    2    0    0    0
26    5    6    0    3    4    3       1  23  27    0    0    2    0    0
27    2    0    0    1    1    0       0  28  11    0    1    1    1    1
28    0    6    3    0    6    3       0   1  29    1    0    1    1    0

D-Efficiency Approximation: [1] 0.621

Measuring design of size 14
Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'U_I', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Design Line: [1, 4, 2, 3, 6, 5, 0, 28, 5, 0, 2, 0, 0, 1]
Fixed Factors: {'ACOPY_y': 0, 'U1_I': 25, 'U_J': 0, 'SCR': 1}
Testing candidate 1: [1, 4, 2, 3, 6, 5, 0, 0, 25, 28, 0, 5, 0, 2, 0, 1, 0, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	6
        Additions: 		4857
        Multiplications: 	2400
        Divisions: 		0
        Logical: 		0
        Reads: 			9054
        Writes: 		1432
        Comparisons:		22
        Gotos: 			0
        
digraph CFG {
	_JOIN_15330880 [label="_JOIN_15330880None...",shape=box];
	_JOIN_15330880 -> _JOIN_15330882;
	15331890 [label="15331890  int k;...",shape=box];
	_JOIN_15330882 [label="_JOIN_15330882None...",shape=box];
	_JOIN_15330882 -> 15484622;
	ForLoop15332140 [label="ForLoop15332140  for (k=cbv_9; k<=cbv_10; k=k+1) {...",shape=box];
	ForLoop15332140 -> 15490955;
	ForLoop15332140 -> _JOIN_15332140;
	_JOIN_15330884 [label="_JOIN_15330884None...",shape=box];
	_JOIN_15330884 -> ForLoop15332145;
	15065770 [label="15065770  int i;...",shape=box];
	15065770 -> ForLoop15066429;
	15564755 [label="15564755  register int cbv_9, cbv_10;...",shape=box];
	ForLoop15331855 [label="ForLoop15331855  for (j=jt; j<=cbv_7; j=j+1) {...",shape=box];
	ForLoop15331855 -> 15331854;
	ForLoop15331855 -> _JOIN_15331855;
	15331854 [label="15331854  scv_77=scv_77+A[i*ny+j]*x[j];...",shape=box];
	15331854 -> _JOIN_15331855;
	_JOIN_15332145 [label="_JOIN_15332145None...",shape=box];
	_JOIN_15332145 -> _JOIN_15332147;
	_JOIN_15330878 [label="_JOIN_15330878None...",shape=box];
	_JOIN_15330878 -> _JOIN_15330880;
	_JOIN_15066498 [label="_JOIN_15066498None...",shape=box];
	_JOIN_15066498 -> 15292012;
	ForLoop15331857 [label="ForLoop15331857  for (jj=jjj; jj<=min(ny-1,jjj+1920); jj=jj+128) {...",shape=box];
	ForLoop15331857 -> 15564393;
	ForLoop15331857 -> _JOIN_15331857;
	15490955 [label="15490955  double scv_76;...",shape=box];
	ForLoop15066498 [label="ForLoop15066498  for (i=ny-((ny-(0))%26); i<=ny-1; i=i+1) ...",shape=box];
	ForLoop15066498 -> 15066497;
	ForLoop15066498 -> _JOIN_15066498;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 15065770;
	ForLoop15331858 [label="ForLoop15331858  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop15331858 -> ForLoop15331857;
	ForLoop15331858 -> _JOIN_15331858;
	ForLoop15332148 [label="ForLoop15332148  for (iii=0; iii<=nx-1; iii=iii+256) {...",shape=box];
	ForLoop15332148 -> ForLoop15332147;
	ForLoop15332148 -> _JOIN_15332148;
	15484604 [label="15484604  double scv_41, scv_42, scv_43, scv_44, scv_45, scv_46, scv_47, scv_48;...",shape=box];
	ForLoop15330878 [label="ForLoop15330878  for (k=cbv_4; k<=cbv_5; k=k+1) {...",shape=box];
	ForLoop15330878 -> 15441683;
	ForLoop15330878 -> _JOIN_15330878;
	_JOIN_15332072 [label="_JOIN_15332072None...",shape=box];
	_JOIN_15332072 -> 15564755;
	ForLoop15332143 [label="ForLoop15332143  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop15332143 -> ForLoop15332142;
	ForLoop15332143 -> _JOIN_15332143;
	ForLoop15332142 [label="ForLoop15332142  for (kk=kkk; kk<=min(ny-1,kkk+992); kk=kk+32) {...",shape=box];
	ForLoop15332142 -> 15331890;
	ForLoop15332142 -> _JOIN_15332142;
	15490764 [label="15490764  double scv_70, scv_71, scv_72, scv_73, scv_74, scv_75;...",shape=box];
	ForLoop15332147 [label="ForLoop15332147  for (ii=iii; ii<=min(nx-1,iii+240); ii=ii+16) {...",shape=box];
	ForLoop15332147 -> 15292045;
	ForLoop15332147 -> _JOIN_15332147;
	ForLoop15331816 [label="ForLoop15331816  for (jt=jj; jt<=cbv_6; jt=jt+32) {...",shape=box];
	ForLoop15331816 -> 15331008;
	ForLoop15331816 -> _JOIN_15331816;
	ForLoop15332145 [label="ForLoop15332145  for (i=(min(nx-1,ii+15))-(((min(nx-1,ii+15))-(ii)+1)%29)+1; i<=min(nx-1,ii+15); i=i+1) {...",shape=box];
	ForLoop15332145 -> 15492946;
	ForLoop15332145 -> _JOIN_15332145;
	ForLoop15330081 [label="ForLoop15330081  for (k=kk; k<=cbv_3; k=k+6) {...",shape=box];
	ForLoop15330081 -> 15440147;
	ForLoop15330081 -> _JOIN_15330081;
	ForLoop15324347 [label="ForLoop15324347  for (j=jt; j<=cbv_2; j=j+1) {...",shape=box];
	ForLoop15324347 -> 15377008;
	ForLoop15324347 -> _JOIN_15324347;
	_JOIN_15323495 [label="_JOIN_15323495None...",shape=box];
	_JOIN_15323495 -> 15559702;
	_JOIN_15332140 [label="_JOIN_15332140None...",shape=box];
	_JOIN_15332140 -> _JOIN_15332142;
	15441683 [label="15441683  double scv_40;...",shape=box];
	15559702 [label="15559702  register int cbv_2;...",shape=box];
	15559174 [label="15559174  register int cbv_1;...",shape=box];
	_JOIN_15324351 [label="_JOIN_15324351None...",shape=box];
	_JOIN_15324351 -> ForLoop15330882;
	15292012 [label="15292012  double x_copy;...",shape=box];
	_JOIN_15066429 [label="_JOIN_15066429None...",shape=box];
	_JOIN_15066429 -> ForLoop15066498;
	15066497 [label="15066497  y[i]=0.0;...",shape=box];
	15066497 -> _JOIN_15066498;
	ForLoop15324349 [label="ForLoop15324349  for (jj=jjj; jj<=min(ny-1,jjj+1920); jj=jj+128) {...",shape=box];
	ForLoop15324349 -> 15559174;
	ForLoop15324349 -> _JOIN_15324349;
	15492946 [label="15492946  double scv_77;...",shape=box];
	15564393 [label="15564393  register int cbv_6;...",shape=box];
	15324383 [label="15324383  int k;...",shape=box];
	_JOIN_15330081 [label="_JOIN_15330081None...",shape=box];
	_JOIN_15330081 -> 15563629;
	ForLoop15323495 [label="ForLoop15323495  for (jt=jj; jt<=cbv_1; jt=jt+32) {...",shape=box];
	ForLoop15323495 -> 15374625;
	ForLoop15323495 -> _JOIN_15323495;
	15440147 [label="15440147  double scv_34, scv_35, scv_36, scv_37, scv_38, scv_39;...",shape=box];
	15484622 [label="15484622  tmp[(i+20)]=scv_41;...",shape=box];
	15377008 [label="15377008  double scv_33;...",shape=box];
	15492958 [label="15492958  tmp[i]=scv_77;...",shape=box];
	15492958 -> _JOIN_15332145;
	ForLoop15330884 [label="ForLoop15330884  for (i=ii; i<=min(nx-1,ii+15)-28; i=i+29) {...",shape=box];
	ForLoop15330884 -> 15484604;
	ForLoop15330884 -> _JOIN_15330884;
	_JOIN_15331855 [label="_JOIN_15331855None...",shape=box];
	_JOIN_15331855 -> _JOIN_15331857;
	_JOIN_15331857 [label="_JOIN_15331857None...",shape=box];
	_JOIN_15331857 -> _JOIN_15331858;
	ForLoop15330880 [label="ForLoop15330880  for (kk=kkk; kk<=min(ny-1,kkk+992); kk=kk+32) {...",shape=box];
	ForLoop15330880 -> 15324383;
	ForLoop15330880 -> _JOIN_15330880;
	ForLoop15330882 [label="ForLoop15330882  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop15330882 -> ForLoop15330880;
	ForLoop15330882 -> _JOIN_15330882;
	ForLoop15332072 [label="ForLoop15332072  for (k=kk; k<=cbv_8; k=k+6) {...",shape=box];
	ForLoop15332072 -> 15490764;
	ForLoop15332072 -> _JOIN_15332072;
	15066202 [label="15066202  y[i]=0.0;...",shape=box];
	15331008 [label="15331008  scv_77=scv_77+A[i*ny+jt]*x[jt];...",shape=box];
	_JOIN_15331858 [label="_JOIN_15331858None...",shape=box];
	_JOIN_15331858 -> ForLoop15332143;
	15564440 [label="15564440  register int cbv_7;...",shape=box];
	_JOIN_15332143 [labelexpected=9369846271501.798828
actual=9369846271501.798828
="_JOIN_15332143None...",shape=box];
	_JOIN_15332143 -> 15492958;
	_JOIN_15332142 [label="_JOIN_15332142None...",shape=box];
	_JOIN_15332142 -> _JOIN_15332143;
	15292045 [label="15292045  int i;...",shape=box];
	15292045 -> ForLoop15330884;
	_JOIN_15324349 [label="_JOIN_15324349None...",shape=box];
	_JOIN_15324349 -> _JOIN_15324351;
	_JOIN_15332147 [label="_JOIN_15332147None...",shape=box];
	_JOIN_15332147 -> _JOIN_15332148;
	15374625 [label="15374625  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	_JOIN_15331816 [label="_JOIN_15331816None...",shape=box];
	_JOIN_15331816 -> 15564440;
	ForLoop15324351 [label="ForLoop15324351  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop15324351 -> ForLoop15324349;
	ForLoop15324351 -> _JOIN_15324351;
	ForLoop15066429 [label="ForLoop15066429  for (i=0; i<=ny-26; i=i+26) {...",shape=box];
	ForLoop15066429 -> 15066202;
	ForLoop15066429 -> _JOIN_15066429;
	_JOIN_15332148 [label="_JOIN_15332148None...",shape=box];
	_JOIN_15324347 [label="_JOIN_15324347None...",shape=box];
	_JOIN_15324347 -> _JOIN_15324349;
	15563629 [label="15563629  register int cbv_4, cbv_5;...",shape=box];

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest71.exe __orio_perftest71.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest71.exe  
{'[1, 4, 2, 3, 6, 5, 0, 0, 25, 28, 0, 5, 0, 2, 0, 1, 0, 1]' : 0.136481}
{'[1, 4, 2, 3, 6, 5, 0, 0, 25, 28, 0, 5, 0, 2, 0, 1, 0, 1]' : 0.136503}
{'[1, 4, 2, 3, 6, 5, 0, 0, 25, 28, 0, 5, 0, 2, 0, 1, 0, 1]' : 0.13639}
{'[1, 4, 2, 3, 6, 5, 0, 0, 25, 28, 0, 5, 0, 2, 0, 1, 0, 1]' : 0.136414}
{'[1, 4, 2, 3, 6, 5, 0, 0, 25, 28, 0, 5, 0, 2, 0, 1, 0, 1]' : 0.137375}
{'[1, 4, 2, 3, 6, 5, 0, 0, 25, 28, 0, 5, 0, 2, 0, 1, 0, 1]' : 0.136458}
{'[1, 4, 2, 3, 6, 5, 0, 0, 25, 28, 0, 5, 0, 2, 0, 1, 0, 1]' : 0.136417}
{'[1, 4, 2, 3, 6, 5, 0, 0, 25, 28, 0, 5, 0, 2, 0, 1, 0, 1]' : 0.136603}
{'[1, 4, 2, 3, 6, 5, 0, 0, 25, 28, 0, 5, 0, 2, 0, 1, 0, 1]' : 0.136444}
{'[1, 4, 2, 3, 6, 5, 0, 0, 25, 28, 0, 5, 0, 2, 0, 1, 0, 1]' : 0.136362}
{'[1, 4, 2, 3, 6, 5, 0, 0, 25, 28, 0, 5, 0, 2, 0, 1, 0, 1]' : 0.136437}
{'[1, 4, 2, 3, 6, 5, 0, 0, 25, 28, 0, 5, 0, 2, 0, 1, 0, 1]' : 0.136468}
{'[1, 4, 2, 3, 6, 5, 0, 0, 25, 28, 0, 5, 0, 2, 0, 1, 0, 1]' : 0.136351}
{'[1, 4, 2, 3, 6, 5, 0, 0, 25, 28, 0, 5, 0, 2, 0, 1, 0, 1]' : 0.136533}
{'[1, 4, 2, 3, 6, 5, 0, 0, 25, 28, 0, 5, 0, 2, 0, 1, 0, 1]' : 0.136403}
{'[1, 4, 2, 3, 6, 5, 0, 0, 25, 28, 0, 5, 0, 2, 0, 1, 0, 1]' : 0.136393}
{'[1, 4, 2, 3, 6, 5, 0, 0, 25, 28, 0, 5, 0, 2, 0, 1, 0, 1]' : 0.136444}
{'[1, 4, 2, 3, 6, 5, 0, 0, 25, 28, 0, 5, 0, 2, 0, 1, 0, 1]' : 0.136381}
{'[1, 4, 2, 3, 6, 5, 0, 0, 25, 28, 0, 5, 0, 2, 0, 1, 0, 1]' : 0.137573}
{'[1, 4, 2, 3, 6, 5, 0, 0, 25, 28, 0, 5, 0, 2, 0, 1, 0, 1]' : 0.136445}
{'[1, 4, 2, 3, 6, 5, 0, 0, 25, 28, 0, 5, 0, 2, 0, 1, 0, 1]' : 0.136403}
{'[1, 4, 2, 3, 6, 5, 0, 0, 25, 28, 0, 5, 0, 2, 0, 1, 0, 1]' : 0.136365}
{'[1, 4, 2, 3, 6, 5, 0, 0, 25, 28, 0, 5, 0, 2, 0, 1, 0, 1]' : 0.136432}
{'[1, 4, 2, 3, 6, 5, 0, 0, 25, 28, 0, 5, 0, 2, 0, 1, 0, 1]' : 0.136406}
{'[1, 4, 2, 3, 6, 5, 0, 0, 25, 28, 0, 5, 0, 2, 0, 1, 0, 1]' : 0.136351}
{'[1, 4, 2, 3, 6, 5, 0, 0, 25, 28, 0, 5, 0, 2, 0, 1, 0, 1]' : 0.136519}
{'[1, 4, 2, 3, 6, 5, 0, 0, 25, 28, 0, 5, 0, 2, 0, 1, 0, 1]' : 0.136382}
{'[1, 4, 2, 3, 6, 5, 0, 0, 25, 28, 0, 5, 0, 2, 0, 1, 0, 1]' : 0.136376}
{'[1, 4, 2, 3, 6, 5, 0, 0, 25, 28, 0, 5, 0, 2, 0, 1, 0, 1]' : 0.136393}
{'[1, 4, 2, 3, 6, 5, 0, 0, 25, 28, 0, 5, 0, 2, 0, 1, 0, 1]' : 0.136491}

out:
 ["{'[1, 4, 2, 3, 6, 5, 0, 0, 25, 28, 0, 5, 0, 2, 0, 1, 0, 1]' : 0.136481}", "{'[1, 4, 2, 3, 6, 5, 0, 0, 25, 28, 0, 5, 0, 2, 0, 1, 0, 1]' : 0.136503}", "{'[1, 4, 2, 3, 6, 5, 0, 0, 25, 28, 0, 5, 0, 2, 0, 1, 0, 1]' : 0.13639}", "{'[1, 4, 2, 3, 6, 5, 0, 0, 25, 28, 0, 5, 0, 2, 0, 1, 0, 1]' : 0.136414}", "{'[1, 4, 2, 3, 6, 5, 0, 0, 25, 28, 0, 5, 0, 2, 0, 1, 0, 1]' : 0.137375}", "{'[1, 4, 2, 3, 6, 5, 0, 0, 25, 28, 0, 5, 0, 2, 0, 1, 0, 1]' : 0.136458}", "{'[1, 4, 2, 3, 6, 5, 0, 0, 25, 28, 0, 5, 0, 2, 0, 1, 0, 1]' : 0.136417}", "{'[1, 4, 2, 3, 6, 5, 0, 0, 25, 28, 0, 5, 0, 2, 0, 1, 0, 1]' : 0.WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = iii
136603}", "{'[1, 4, 2, 3, 6, 5, 0, 0, 25, 28, 0, 5, 0, 2, 0, 1, 0, 1]' : 0.136444}", "{'[1, 4, 2, 3, 6, 5, 0, 0, 25, 28, 0, 5, 0, 2, 0, 1, 0, 1]' : 0.136362}", "{'[1, 4, 2, 3, 6, 5, 0, 0, 25, 28, 0, 5, 0, 2, 0, 1, 0, 1]' : 0.136437}", "{'[1, 4, 2, 3, 6, 5, 0, 0, 25, 28, 0, 5, 0, 2, 0, 1, 0, 1]' : 0.136468}", "{'[1, 4, 2, 3, 6, 5, 0, 0, 25, 28, 0, 5, 0, 2, 0, 1, 0, 1]' : 0.136351}", "{'[1, 4, 2, 3, 6, 5, 0, 0, 25, 28, 0, 5, 0, 2, 0, 1, 0, 1]' : 0.136533}", "{'[1, 4, 2, 3, 6, 5, 0, 0, 25, 28, 0, 5, 0, 2, 0, 1, 0, 1]' : 0.136403}", "{'[1, 4, 2, 3, 6, 5, 0, 0, 25, 28, 0, 5, 0, 2, 0, 1, 0, 1]' : 0.136393}", "{'[1, 4, 2, 3, 6, 5, 0, 0, 25, 28, 0, 5, 0, 2, 0, 1, 0, 1]' : 0.136444}", "{'[1, 4, 2, 3, 6, 5, 0, 0, 25, 28, 0, 5, 0, 2, 0, 1, 0, 1]' : 0.136381}", "{'[1, 4, 2, 3, 6, 5, 0, 0, 25, 28, 0, 5, 0, 2, 0, 1, 0, 1]' : 0.137573}", "{'[1, 4, 2, 3, 6, 5, 0, 0, 25, 28, 0, 5, 0, 2, 0, 1, 0, 1]' : 0.136445}", "{'[1, 4, 2, 3, 6, 5, 0, 0, 25, 28, 0, 5, 0, 2, 0, 1, 0, 1]' : 0.136403}", "{'[1, 4, 2, 3, 6, 5, 0, 0, 25, 28, 0, 5, 0, 2, 0, 1, 0, 1]' : 0.136365}", "{'[1, 4, 2, 3, 6, 5, 0, 0, 25, 28, 0, 5, 0, 2, 0, 1, 0, 1]' : 0.136432}", "{'[1, 4, 2, 3, 6, 5, 0, 0, 25, 28, 0, 5, 0, 2, 0, 1, 0, 1]' : 0.136406}", "{'[1, 4, 2, 3, 6, 5, 0, 0, 25, 28, 0, 5, 0, 2, 0, 1, 0, 1]' : 0.136351}", "{'[1, 4, 2, 3, 6, 5, 0, 0, 25, 28, 0, 5, 0, 2, 0, 1, 0, 1]' : 0.136519}", "{'[1, 4, 2, 3, 6, 5, 0, 0, 25, 28, 0, 5, 0, 2, 0, 1, 0, 1]' : 0.136382}", "{'[1, 4, 2, 3, 6, 5, 0, 0, 25, 28, 0, 5, 0, 2, 0, 1, 0, 1]' : 0.136376}", "{'[1, 4, 2, 3, 6, 5, 0, 0, 25, 28, 0, 5, 0, 2, 0, 1, 0, 1]' : 0.136393}", "{'[1, 4, 2, 3, 6, 5, 0, 0, 25, 28, 0, 5, 0, 2, 0, 1, 0, 1]' : 0.136491}"]
returning from 'run': {'[1, 4, 2, 3, 6, 5, 0, 0, 25, 28, 0, 5, 0, 2, 0, 1, 0, 1]': ([0.136481, 0.136503, 0.13639, 0.136414, 0.137375, 0.136458, 0.136417, 0.136603, 0.136444, 0.136362, 0.136437, 0.136468, 0.136351, 0.136533, 0.136403, 0.136393, 0.136444, 0.136381, 0.137573, 0.136445, 0.136403, 0.136365, 0.136432, 0.136406, 0.136351, 0.136519, 0.136382, 0.136376, 0.136393, 0.136491], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.136481, 0.136503, 0.13639, 0.136414, 0.137375, 0.136458, 0.136417, 0.136603, 0.136444, 0.136362, 0.136437, 0.136468, 0.136351, 0.136533, 0.136403, 0.136393, 0.136444, 0.136381, 0.137573, 0.136445, 0.136403, 0.136365, 0.136432, 0.136406, 0.136351, 0.136519, 0.136382, 0.136376, 0.136393, 0.136491], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[1, 4, 2, 3, 6, 5, 0, 0, 25, 28, 0, 5, 0, 2, 0, 1, 0, 1]': ([0.136481, 0.136503, 0.13639, 0.136414, 0.137375, 0.136458, 0.136417, 0.136603, 0.136444, 0.136362, 0.136437, 0.136468, 0.136351, 0.136533, 0.136403, 0.136393, 0.136444, 0.136381, 0.137573, 0.136445, 0.136403, 0.136365, 0.136432, 0.136406, 0.136351, 0.136519, 0.136382, 0.136376, 0.136393, 0.136491], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [5, 1, 6, 3, 4, 6, 1, 21, 27, 0, 2, 0, 1, 1]
Fixed Factors: {'ACOPY_y': 0, 'U1_I': 25, 'U_J': 0, 'SCR': 1}
Testing candidate 2: [5, 1, 6, 3, 4, 6, 1, 0, 25, 21, 0, 27, 0, 2, 0, 1, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	42
        Max loop nest depth: 	5
        Additions: 		5899
        Multiplications: 	2806
        Divisions: 		0
        Logical: 		0
        Reads: 			11007
        Writes: 		1765
        Comparisons:		42
        Gotos: 			0
        
digraph CFG {
	_JOIN_15834948 [label="_JOIN_15834948None...",shape=box];
	_JOIN_15834948 -> _JOIN_15834950;
	ForLoop15834880 [label="ForLoop15834880  for (k=kk; k<=cbv_6; k=k+28) {...",shape=box];
	ForLoop15834880 -> 16018385;
	ForLoop15834880 -> _JOIN_15834880;
	16023504 [label="16023504  double scv_113;...",shape=box];
	_JOIN_15565776 [label="_JOIN_15565776None...",shape=box];
	_JOIN_15565776 -> 15785755;
	_JOIN_15834951 [label="_JOIN_15834951None...",shape=box];
	_JOIN_15834951 -> 16023516;
	ForLoop15832367 [label="ForLoop15832367  for (k=kk; k<=cbv_2; k=k+28) {...",shape=box];
	ForLoop15832367 -> 15940086;
	ForLoop15832367 -> _JOIN_15832367;
	_JOIN_15811688 [label="_JOIN_15811688None...",shape=box];
	_JOIN_15811688 -> _JOIN_15811690;
	15868630 [label="15868630  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	_JOIN_15834955 [label="_JOIN_15834955None...",shape=box];
	_JOIN_15811692 [label="_JOIN_15811692None...",shape=box];
	_JOIN_15811692 -> ForLoop15832986;
	_JOIN_15834953 [label="_JOIN_15834953None...",shape=box];
	_JOIN_15834953 -> _JOIN_15834955;
	ForLoop15834955 [label="ForLoop15834955  for (ii=0; ii<=nx-1; ii=ii+256) {...",shape=box];
	ForLoop15834955 -> 15785770;
	ForLoop15834955 -> _JOIN_15834955;
	ForLoop15834953 [label="ForLoop15834953  for (i=(min(nx-1,ii+255))-(((min(nx-1,ii+255))-(ii)+1)%22)+1; i<=min(nx-1,ii+255); i=i+1) {...",shape=box];
	ForLoop15834953 -> 16023504;
	ForLoop15834953 -> _JOIN_15834953;
	15785755 [label="15785755  double x_copy[16];...",shape=box];
	15785770 [label="15785770  int i;...",shape=box];
	15785770 -> ForLoop15832988;
	ForLoop15834950 [label="ForLoop15834950  for (kk=kkk; kk<=min(ny-1,kkk+1536); kk=kk+512) {...",shape=box];
	ForLoop15834950 -> 15834082;
	ForLoop15834950 -> _JOIN_15834950;
	16019041 [label="16019041  double scv_112;...",shape=box];
	_JOIN_15832982 [label="_JOIN_15832982None...",shape=box];
	_JOIN_15832982 -> _JOIN_15832984;
	ForLoop15834050 [label="ForLoop15834050  for (jjj=0; jjj<=ny-1; jjj=jjj+512) {...",shape=box];
	ForLoop15834050 -> ForLoop15834049;
	ForLoop15834050 -> _JOIN_15834050;
	_JOIN_15834047 [label="_JOIN_15834047None...",shape=box];
	_JOIN_15834047 -> _JOIN_15834049;
	_JOIN_15834049 [label="_JOIN_15834049None...",shape=box];
	_JOIN_15834049 -> _JOIN_15834050;
	16081161 [label="16081161  register int cbv_7, cbv_8;...",shape=box];
	ForLoop15811688 [label="ForLoop15811688  for (jt=jj; jt<=cbv_1; jt=jt+32) {...",shape=box];
	ForLoop15811688 -> 15868630;
	ForLoop15811688 -> _JOIN_15811688;
	16011185 [label="16011185  tmp[(i+20)]=scv_62;...",shape=box];
	ForLoop15565707 [label="ForLoop15565707  for (i=0; i<=cbv_1; i=i+26) {...",shape=box];
	ForLoop15565707 -> 15565480;
	ForLoop15565707 -> _JOIN_15565707;
	15566051 [label="15566051  register int cbv_2, cbv_3;...",shape=box];
	15565480 [label="15565480  y[i]=0.0;...",shape=box];
	15942675 [label="15942675  double scv_61;...",shape=box];
	15940086 [label="15940086  double scv_33, scv_34, scv_35, scv_36, scv_37, scv_38, scv_39, scv_40;...",shape=box];
	_JOIN_15832986 [label="_JOIN_15832986None...",shape=box];
	_JOIN_15832986 -> 16011185;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 15565048;
	_JOIN_15832984 [label="_JOIN_15832984None...",shape=box];
	_JOIN_15832984 -> _JOIN_15832986;
	15565048 [label="15565048  int i;...",shape=box];
	_JOIN_15832988 [label="_JOIN_15832988None...",shape=box];
	_JOIN_15832988 -> ForLoop15834953;
	16023516 [label="16023516  tmp[i]=scv_113;...",shape=box];
	16023516 -> _JOIN_15834953;
	_JOIN_15565707 [label="_JOIN_15565707None...",shape=box];
	_JOIN_15565707 -> 15566051;
	_JOIN_15811690 [label="_JOIN_15811690None...",shape=box];
	_JOIN_15811690 -> _JOIN_15811692;
	16011167 [label="16011167  double scv_62, scv_63, scv_64, scv_65, scv_66, scv_67, scv_68, scv_69;...",shape=box];
	15811724 [label="15811724  int k;...",shape=box];
	_JOIN_15834880 [label="_JOIN_15834880None...",shape=box];
	_JOIN_15834880 -> 16081161;
	ForLoop15832982 [label="ForLoop15832982  for (k=cbv_3; k<=cbv_4; k=k+1) {...",shape=box];
	ForLoop15832982 -> 15942675;
	ForLoop15832982 -> _JOIN_15832982;
	_JOIN_15834050 [label="_JOIN_15834050None...",shape=box];
	_JOIN_15834050 -> ForLoop15834951;
	ForLoop15832986 [label="ForLoop15832986  for (kkk=0; kkk<=ny-1; kkk=kkk+2048) {...",shape=box];
	ForLoop15832986 -> ForLoop15832984;
	ForLoop15832986 -> _JOIN_15832986;
	ForLoop15832984 [label="ForLoop15832984  for (kk=kkk; kk<=min(ny-expected=0.000000
actual=9369846271501.798828
1,kkk+1536); kk=kk+512) {...",shape=box];
	ForLoop15832984 -> 15811724;
	ForLoop15832984 -> _JOIN_15832984;
	ForLoop15832988 [label="ForLoop15832988  for (i=ii; i<=min(nx-1,ii+255)-21; i=i+22) {...",shape=box];
	ForLoop15832988 -> 16011167;
	ForLoop15832988 -> _JOIN_15832988;
	15833103 [label="15833103  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	ForLoop15834047 [label="ForLoop15834047  for (jt=jj; jt<=cbv_5; jt=jt+32) {...",shape=box];
	ForLoop15834047 -> 15833146;
	ForLoop15834047 -> _JOIN_15834047;
	_JOIN_15834950 [label="_JOIN_15834950None...",shape=box];
	_JOIN_15834950 -> _JOIN_15834951;
	ForLoop15811690 [label="ForLoop15811690  for (jj=jjj; jj<=min(ny-1,jjj+496); jj=jj+16) {...",shape=box];
	ForLoop15811690 -> 15786047;
	ForLoop15811690 -> _JOIN_15811690;
	15565775 [label="15565775  y[i]=0.0;...",shape=box];
	15565775 -> _JOIN_15565776;
	ForLoop15565776 [label="ForLoop15565776  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop15565776 -> 15565775;
	ForLoop15565776 -> _JOIN_15565776;
	16079233 [label="16079233  register int cbv_3, cbv_4;...",shape=box];
	ForLoop15834951 [label="ForLoop15834951  for (kkk=0; kkk<=ny-1; kkk=kkk+2048) {...",shape=box];
	ForLoop15834951 -> ForLoop15834950;
	ForLoop15834951 -> _JOIN_15834951;
	ForLoop15811692 [label="ForLoop15811692  for (jjj=0; jjj<=ny-1; jjj=jjj+512) {...",shape=box];
	ForLoop15811692 -> ForLoop15811690;
	ForLoop15811692 -> _JOIN_15811692;
	ForLoop15834049 [label="ForLoop15834049  for (jj=jjj; jj<=min(ny-1,jjj+496); jj=jj+16) {...",shape=box];
	ForLoop15834049 -> 15833103;
	ForLoop15834049 -> _JOIN_15834049;
	15833146 [label="15833146  scv_113=scv_113+A[i*ny+jt]*x_copy[(jt-jj)];...",shape=box];
	15786047 [label="15786047  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	15834082 [label="15834082  int k;...",shape=box];
	ForLoop15834948 [label="ForLoop15834948  for (k=cbv_7; k<=cbv_8; k=k+1) {...",shape=box];
	ForLoop15834948 -> 16019041;
	ForLoop15834948 -> _JOIN_15834948;
	16018385 [label="16018385  double scv_84, scv_85, scv_86, scv_87, scv_88, scv_89, scv_90, scv_91;...",shape=box];
	_JOIN_15832367 [label="_JOIN_15832367None...",shape=box];
	_JOIN_15832367 -> 16079233;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest72.exe __orio_perftest72.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest72.exe  
{'[5, 1, 6, 3, 4, 6, 1, 0, 25, 21, 0, 27, 0, 2, 0, 1, 1, 1]' : 0.0901668}
{'[5, 1, 6, 3, 4, 6, 1, 0, 25, 21, 0, 27, 0, 2, 0, 1, 1, 1]' : 0.0896051}
{'[5, 1, 6, 3, 4, 6, 1, 0, 25, 21, 0, 27, 0, 2, 0, 1, 1, 1]' : 0.0895119}
{'[5, 1, 6, 3, 4, 6, 1, 0, 25, 21, 0, 27, 0, 2, 0, 1, 1, 1]' : 0.097954}
{'[5, 1, 6, 3, 4, 6, 1, 0, 25, 21, 0, 27, 0, 2, 0, 1, 1, 1]' : 0.089855}
{'[5, 1, 6, 3, 4, 6, 1, 0, 25, 21, 0, 27, 0, 2, 0, 1, 1, 1]' : 0.0895641}
{'[5, 1, 6, 3, 4, 6, 1, 0, 25, 21, 0, 27, 0, 2, 0, 1, 1, 1]' : 0.089534}
{'[5, 1, 6, 3, 4, 6, 1, 0, 25, 21, 0, 27, 0, 2, 0, 1, 1, 1]' : 0.0895669}
{'[5, 1, 6, 3, 4, 6, 1, 0, 25, 21, 0, 27, 0, 2, 0, 1, 1, 1]' : 0.089468}
{'[5, 1, 6, 3, 4, 6, 1, 0, 25, 21, 0, 27, 0, 2, 0, 1, 1, 1]' : 0.0895848}
{'[5, 1, 6, 3, 4, 6, 1, 0, 25, 21, 0, 27, 0, 2, 0, 1, 1, 1]' : 0.089633}
{'[5, 1, 6, 3, 4, 6, 1, 0, 25, 21, 0, 27, 0, 2, 0, 1, 1, 1]' : 0.0896192}
{'[5, 1, 6, 3, 4, 6, 1, 0, 25, 21, 0, 27, 0, 2, 0, 1, 1, 1]' : 0.08954}
{'[5, 1, 6, 3, 4, 6, 1, 0, 25, 21, 0, 27, 0, 2, 0, 1, 1, 1]' : 0.089566}
{'[5, 1, 6, 3, 4, 6, 1, 0, 25, 21, 0, 27, 0, 2, 0, 1, 1, 1]' : 0.0896089}
{'[5, 1, 6, 3, 4, 6, 1, 0, 25, 21, 0, 27, 0, 2, 0, 1, 1, 1]' : 0.089566}
{'[5, 1, 6, 3, 4, 6, 1, 0, 25, 21, 0, 27, 0, 2, 0, 1, 1, 1]' : 0.0895751}
{'[5, 1, 6, 3, 4, 6, 1, 0, 25, 21, 0, 27, 0, 2, 0, 1, 1, 1]' : 0.089535}
{'[5, 1, 6, 3, 4, 6, 1, 0, 25, 21, 0, 27, 0, 2, 0, 1, 1, 1]' : 0.089535}
{'[5, 1, 6, 3, 4, 6, 1, 0, 25, 21, 0, 27, 0, 2, 0, 1, 1, 1]' : 0.0894752}
{'[5, 1, 6, 3, 4, 6, 1, 0, 25, 21, 0, 27, 0, 2, 0, 1, 1, 1]' : 0.097857}
{'[5, 1, 6, 3, 4, 6, 1, 0, 25, 21, 0, 27, 0, 2, 0, 1, 1, 1]' : 0.0897322}
{'[5, 1, 6, 3, 4, 6, 1, 0, 25, 21, 0, 27, 0, 2, 0, 1, 1, 1]' : 0.0895379}
{'[5, 1, 6, 3, 4, 6, 1, 0, 25, 21, 0, 27, 0, 2, 0, 1, 1, 1]' : 0.0896151}
{'[5, 1, 6, 3, 4, 6, 1, 0, 25, 21, 0, 27, 0, 2, 0, 1, 1, 1]' : 0.0895929}
{'[5, 1, 6, 3, 4, 6, 1, 0, 25, 21, 0, 27, 0, 2, 0, 1, 1, 1]' : 0.089643}
{'[5, 1, 6, 3, 4, 6, 1, 0, 25, 21, 0, 27, 0, 2, 0, 1, 1, 1]' : 0.0895}
{'[5, 1, 6, 3, 4, 6, 1, 0, 25, 21, 0, 27, 0, 2, 0, 1, 1, 1]' : 0.0895369}
{'[5, 1, 6, 3, 4, 6, 1, 0, 25, 21, 0, 27, 0, 2, 0, 1, 1, 1]' : 0.089555}
{'[5, 1, 6, 3, 4, 6, 1, 0, 25, 21, 0, 27, 0, 2, 0, 1, 1, 1]' : 0.089618}

out:
 ["{'[5, 1, 6, 3, 4, 6, 1, 0, 25, 21, 0, 27, 0, 2, 0, 1, 1, 1]' : 0.0901668}", "{'[5, 1, 6, 3, 4, 6, 1, 0, 25, 21, 0, 27, 0, 2, 0, 1, 1, 1]' : 0.0896051}", "{'[5, 1, 6, 3, 4, 6, 1, 0, 25, 21, 0, 27, 0, 2, 0, 1, 1, 1]' : 0.0895119}", "{'[5, 1, 6, 3, 4, 6, 1, 0, 25, 21, 0, 27, 0, 2, 0, 1, 1, 1]' : 0.097954}", "{'[5, 1, 6, 3, 4, 6, 1, 0, 25, 21, 0, 27, 0, 2, 0, 1, 1, 1]' : 0.089855}", "{'[5, 1, 6, 3, 4, 6, 1, 0, 25, 21, 0, 27, 0, 2, 0, 1, 1, 1]' : 0.0895641}", "{'[5, 1, 6, 3, 4, 6, 1, 0, 25, 21, 0, 27, 0, 2, 0, 1, 1, 1]' : 0.089534}", "{'[5, 1, 6, 3, 4, 6, 1, 0, 25, 21, 0, 27, 0, 2, 0, 1, 1, 1]' : 0.0895669}", "{'[5, 1, 6, 3, 4, 6, 1, 0, 25, 21, 0, 27, 0, 2, 0, 1, 1, 1]' : 0.089468}", "{'[5, 1, 6, 3, 4, 6, 1, 0, 25, 21, 0, 27, 0, 2, 0, 1, 1, 1]' : 0.0895848}", "{'[5, 1, 6, 3, 4, 6, 1, 0, 25, 21, 0, 27, 0, 2, 0, 1, 1, 1]' : 0.089633}", "{'[5, 1, 6, 3, 4, 6, 1, 0, 25, 21, 0, 27, 0, 2, 0, 1, 1, 1]' : 0.0896192}", "{'[5, 1, 6, 3, 4, 6, 1, 0, 25, 21, 0, 27, 0, 2, 0, 1, 1, 1]' : 0.08954}", "{'[5, 1, 6, 3, 4, 6, 1, 0, 25, 21, 0, 27, 0, 2, 0, 1, 1, 1]' : 0.089566}", "{'[5, 1, 6, 3, 4, 6, 1, 0, 25, 21, 0, 27, 0, 2, 0, 1, 1, 1]' : 0.0896089}", "{'[5, 1, 6, 3, 4, 6, 1, 0, 25, 21, 0, 27, 0, 2, 0, 1, 1, 1]' : 0.089566}", "{'[5, 1, 6, 3, 4, 6, 1, 0, 25, 21, 0, 27, 0, 2, 0, 1, 1, 1]' : 0.0895751}", "{'[5, 1, 6, 3, 4, 6, 1, 0, 25, 21, 0, 27, 0, 2, 0, 1, 1, 1]' : 0.089535}", "{'[5, 1, 6, 3, 4, 6, 1, 0, 25, 21, 0, 27, 0, 2, 0, 1, 1, 1]' : 0.089535}", "{'[5, 1, 6, 3, 4, 6, 1, 0, 25, 21, 0, 27, 0, 2, 0, 1, 1, 1]' : 0.0894752}", "{'[5, 1, 6, 3, 4, 6, 1, 0, 25, 21, 0, 27, 0, 2, 0, 1, 1, 1]' : 0.097857}", "{'[5, 1, 6, 3, 4, 6, 1, 0, 25, 21, 0, 27, 0, 2, 0, 1, 1, 1]' : 0.0897322}", "{'[5, 1, 6, 3, 4, 6, 1, 0, 25, 21, 0, 27, 0, 2, 0, 1, 1, 1]' : 0.0895379}", "{'[5, 1, 6, 3, 4, 6, 1, 0, 25, 21, 0, 27, 0, 2, 0, 1, 1, 1]' : 0.0896151}", "{'[5, 1, 6, 3, 4, 6, 1, 0, 25, 21, 0, 27, 0, 2, 0, 1, 1, 1]' : 0.0895929}", "{'[5, 1, 6, 3, 4, 6, 1, 0, 25, 21, 0, 27, 0, 2, 0, 1, 1, 1]' : 0.089643}", "{'[5, 1, 6, 3, 4, 6, 1, 0, 25, 21, 0, 27, 0, 2, 0, 1, 1, 1]' : 0.0895}", "{'[5, 1, 6, 3, 4, 6, 1, 0, 25, 21, 0, 27, 0, 2, 0, 1, 1, 1]' : 0.0895369}", "{'[5, 1, 6, 3, 4, 6, 1, 0, 25, 21, 0, 27, 0, 2, 0, 1, 1, 1]' : 0.089555}", "{'[5, 1, 6, 3, 4, 6, 1, 0, 25, 21, 0, 27, 0, 2, 0, 1, 1, 1]' : 0.089618}"]
returning from 'run': {'[5, 1, 6, 3, 4, 6, 1, 0, 25, 21, 0, 27, 0, 2, 0, 1, 1, 1]': ([0.0901668, 0.0896051, 0.0895119, 0.097954, 0.089855, 0.0895641, 0.089534, 0.0895669, 0.089468, 0.0895848, 0.089633, 0.0896192, 0.08954, 0.089566, 0.0896089, 0.089566, 0.0895751, 0.089535, 0.089535, 0.0894752, 0.097857, 0.0897322, 0.0895379, 0.0896151, 0.0895929, 0.089643, 0.0895, 0.0895369, 0.089555, 0.089618], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.0901668, 0.0896051, 0.0895119, 0.097954, 0.089855, 0.0895641, 0.089534, 0.0895669, 0.089468, 0.0895848, 0.089633, 0.0896192, 0.08954, 0.089566, 0.0896089, 0.089566, 0.0895751, 0.089535, 0.089535, 0.0894752, 0.097857, 0.0897322, 0.0895379, 0.0896151, 0.0895929, 0.089643, 0.0895, 0.0895369, 0.089555, 0.089618], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[5, 1, 6, 3, 4, 6, 1, 0, 25, 21, 0, 27, 0, 2, 0, 1, 1, 1]': ([0.0901668, 0.0896051, 0.0895119, 0.097954, 0.089855, 0.0895641, 0.089534, 0.0895669, 0.089468, 0.0895848, 0.089633, 0.0896192, 0.08954, 0.089566, 0.0896089, 0.089566, 0.0895751, 0.089535, 0.089535, 0.0894752, 0.097857, 0.0897322, 0.0895379, 0.0896151, 0.0895929, 0.089643, 0.0895, 0.0895369, 0.089555, 0.089618], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [4, 1, 0, 6, 2, 3, 0, 12, 2, 0, 0, 0, 1, 1]
Fixed Factors: {'ACOPY_y': 0, 'U1_I': 25, 'U_J': 0, 'SCR': 1}
Testing candidate 3: [4, 1, 0, 6, 2, 3, 0, 0, 25, 12, 0, 2, 0, 0, 0, 1, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	6
        Additions: 		365
        Multiplications: 	140
        Divisions: 		0
        Logical: 		0
        Reads: 			842
        Writes: 		203
        Comparisons:		18
        Gotos: 			0
        
digraph CFG {
	16081442 [label="16081442  int i;...",shape=box];
	16108189 [label="16108189  int i;...",shape=box];
	16108189 -> ForLoop16110383;
	ForLoop16108742 [label="ForLoop16108742  for (j=jj; j<=cbv_1; j=j+1) {...",shape=box];
	ForLoop16108742 -> 16111282;
	ForLoop16108742 -> _JOIN_16108742;
	ForLoop16108744 [label="ForLoop16108744  for (jj=jjj; jj<=min(ny-1,jjj+112); jj=jj+16) {...",shape=box];
	ForLoop16108744 -> 16123261;
	ForLoop16108744 -> _JOIN_16108744;
	ForLoop16108746 [label="ForLoop16108746  for (jjj=0; jjj<=ny-1; jjj=jjj+128) {...",shape=box];
	ForLoop16108746 -> ForLoop16108744;
	ForLoop16108746 -> _JOIN_16108746;
	_JOIN_16108742 [label="_JOIN_16108742None...",shape=box];
	_JOIN_16108742 -> _JOIN_16108744;
	_JOIN_16108744 [label="_JOIN_16108744None...",shape=box];
	_JOIN_16108744 -> _JOIN_16108746;
	16081874 [label="16081874  y[i]=0.0;...",shape=box];
	_JOIN_16108746 [label="_JOIN_16108746None...",shape=box];
	_JOIN_16108746 -> ForLoop16110381;
	16123261 [label="16123261  register int cbv_1;...",shape=box];
	ForLoop16110508 [label="ForLoop16110508  for (jjj=0; jjj<=ny-1; jjj=jjj+128) {...",shape=box];
	ForLoop16110508 -> ForLoop16110507;
	ForLoop16110508 -> _JOIN_16110508;
	16118237 [label="16118237  double scv_19, scv_20, scv_21;...",shape=box];
	ForLoop16110379 [label="ForLoop16110379  for (k=cbv_3; k<=cbv_4; k=k+1) {...",shape=box];
	ForLoop16110379 -> 16114379;
	ForLoop16110379 -> _JOIN_16110379;
	ForLoop16110507 [label="ForLoop16110507  for (jj=jjj; jj<=min(ny-1,jjj+112); jj=jj+16) {...",shape=box];
	ForLoop16110507 -> 16124418;
	ForLoop16110507 -> _JOIN_16110507;
	ForLoop16110695 [label="ForLoop16110695  for (iii=0; iii<=nx-1; iii=iii+2048) {...",shape=box];
	ForLoop16110695 -> ForLoop16110694;
	ForLoop16110695 -> _JOIN_16110695;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 16081442;
	_JOIN_16110620 [label="_JOIN_16110620None...",shape=box];
	_JOIN_16110620 -> 16124631;
	ForLoop16110620 [label="ForLoop16110620  for (k=kkk; k<=cbv_6; k=k+3) {...",shape=box];
	ForLoop16110620 -> 16118237;
	ForLoop16110620 -> _JOIN_16110620;
	ForLoop16110688 [label="ForLoop16110688  for (k=cbv_7; k<=cbv_8; k=k+1) {...",shape=box];
	ForLoop16110688 -> 16118365;
	ForLoop16110688 -> _JOIN_16110688;
	_JOIN_16110379 [label="_JOIN_16110379None...",shape=box];
	_JOIN_16110379 -> _JOIN_16110381;
	16108156 [label="16108156  double x_copy;...",shape=box];
	_JOIN_16082101 [label="_JOIN_16082101None...",shape=box];
	_JOIN_16082101 -> 16082445;
	16110505 [label="16110505  scv_23=scv_23+A[i*ny+j]*x[j];...",shape=box];
	16110505 -> _JOIN_16110506;
	16124418 [label="16124418  register int cbv_5;...",shape=box];
	_JOIN_16110688 [label="_JOIN_16110688None...",shape=box];
	_JOIN_16110688 -> _JOIN_16110690;
	_JOIN_16110508 [label="_JOIN_16110508None...",shape=box];
	_JOIN_16110508 -> ForLoop16110690;
	_JOIN_16110506 [label="_JOIN_16110506None...",shape=box];
	_JOIN_16110506 -> _JOIN_16110507;
	_JOIN_16110507 [label="_JOIN_16110507None...",shape=box];
	_JOIN_16110507 -> _JOIN_16110508;
	ForLoop16082101 [label="ForLoop16082101  for (i=0; i<=cbv_1; i=i+26) {...",shape=box];
	ForLoop16082101 -> 16081874;
	ForLoop16082101 -> _JOIN_16082101;
	16118942 [label="16118942  tmp[i]=scv_23;...",shape=box];
	16118942 -> _JOIN_16110692;
	16082169 [label="16082169  y[i]=0.0;...",shapexpected=9369846271501.798828
actual=9369846271501.798828
e=box];
	16082169 -> _JOIN_16082170;
	16124631 [label="16124631  register int cbv_7, cbv_8;...",shape=box];
	16118365 [label="16118365  double scv_22;...",shape=box];
	_JOIN_16110381 [label="_JOIN_16110381None...",shape=box];
	_JOIN_16110381 -> 16117627;
	16124338 [label="16124338  register int cbv_3, cbv_4;...",shape=box];
	_JOIN_16110383 [label="_JOIN_16110383None...",shape=box];
	_JOIN_16110383 -> ForLoop16110692;
	16117609 [label="16117609  double scv_6, scv_7, scv_8, scv_9, scv_10, scv_11, scv_12, scv_13;...",shape=box];
	_JOIN_16110695 [label="_JOIN_16110695None...",shape=box];
	ForLoop16110506 [label="ForLoop16110506  for (j=jj; j<=cbv_5; j=j+1) {...",shape=box];
	ForLoop16110506 -> 16110505;
	ForLoop16110506 -> _JOIN_16110506;
	ForLoop16082170 [label="ForLoop16082170  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop16082170 -> 16082169;
	ForLoop16082170 -> _JOIN_16082170;
	_JOIN_16109998 [label="_JOIN_16109998None...",shape=box];
	_JOIN_16109998 -> 16124338;
	_JOIN_16110694 [label="_JOIN_16110694None...",shape=box];
	_JOIN_16110694 -> _JOIN_16110695;
	16111282 [label="16111282  double scv_1;...",shape=box];
	ForLoop16110381 [label="ForLoop16110381  for (kkk=0; kkk<=ny-1; kkk=kkk+256) {...",shape=box];
	ForLoop16110381 -> 16108760;
	ForLoop16110381 -> _JOIN_16110381;
	ForLoop16110383 [label="ForLoop16110383  for (i=ii; i<=min(nx-1,ii+127)-12; i=i+13) {...",shape=box];
	ForLoop16110383 -> 16117609;
	ForLoop16110383 -> _JOIN_16110383;
	ForLoop16109998 [label="ForLoop16109998  for (k=kkk; k<=cbv_2; k=k+3) {...",shape=box];
	ForLoop16109998 -> 16113746;
	ForLoop16109998 -> _JOIN_16109998;
	16114379 [label="16114379  double scv_5;...",shape=box];
	16082445 [label="16082445  register int cbv_2, cbv_3;...",shape=box];
	ForLoop16110694 [label="ForLoop16110694  for (ii=iii; ii<=min(nx-1,iii+1920); ii=ii+128) {...",shape=box];
	ForLoop16110694 -> 16108189;
	ForLoop16110694 -> _JOIN_16110694;
	_JOIN_16082170 [label="_JOIN_16082170None...",shape=box];
	_JOIN_16082170 -> 16108156;
	ForLoop16110692 [label="ForLoop16110692  for (i=(min(nx-1,ii+127))-(((min(nx-1,ii+127))-(ii)+1)%13)+1; i<=min(nx-1,ii+127); i=i+1) {...",shape=box];
	ForLoop16110692 -> 16118930;
	ForLoop16110692 -> _JOIN_16110692;
	16108760 [label="16108760  int k;...",shape=box];
	16118930 [label="16118930  double scv_23;...",shape=box];
	16110522 [label="16110522  int k;...",shape=box];
	16113746 [label="16113746  double scv_2, scv_3, scv_4;...",shape=box];
	_JOIN_16110692 [label="_JOIN_16110692None...",shape=box];
	_JOIN_16110692 -> _JOIN_16110694;
	ForLoop16110690 [label="ForLoop16110690  for (kkk=0; kkk<=ny-1; kkk=kkk+256) {...",shape=box];
	ForLoop16110690 -> 16110522;
	ForLoop16110690 -> _JOIN_16110690;
	_JOIN_16110690 [label="_JOIN_16110690None...",shape=box];
	_JOIN_16110690 -> 16118942;
	16117627 [label="16117627  tmp[(i+12)]=scv_6;...",shape=box];

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest73.exe __orio_perftest73.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest73.exe  
{'[4, 1, 0, 6, 2, 3, 0, 0, 25, 12, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.091491}
{'[4, 1, 0, 6, 2, 3, 0, 0, 25, 12, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.09113}
{'[4, 1, 0, 6, 2, 3, 0, 0, 25, 12, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.091146}
{'[4, 1, 0, 6, 2, 3, 0, 0, 25, 12, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.091193}
{'[4, 1, 0, 6, 2, 3, 0, 0, 25, 12, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.0911531}
{'[4, 1, 0, 6, 2, 3, 0, 0, 25, 12, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.0911419}
{'[4, 1, 0, 6, 2, 3, 0, 0, 25, 12, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.0910599}
{'[4, 1, 0, 6, 2, 3, 0, 0, 25, 12, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.0954032}
{'[4, 1, 0, 6, 2, 3, 0, 0, 25, 12, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.091141}
{'[4, 1, 0, 6, 2, 3, 0, 0, 25, 12, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.091181}
{'[4, 1, 0, 6, 2, 3, 0, 0, 25, 12, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.0912049}
{'[4, 1, 0, 6, 2, 3, 0, 0, 25, 12, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.091166}
{'[4, 1, 0, 6, 2, 3, 0, 0, 25, 12, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.091116}
{'[4, 1, 0, 6, 2, 3, 0, 0, 25, 12, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.0910881}
{'[4, 1, 0, 6, 2, 3, 0, 0, 25, 12, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.0910871}
{'[4, 1, 0, 6, 2, 3, 0, 0, 25, 12, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.0910938}
{'[4, 1, 0, 6, 2, 3, 0, 0, 25, 12, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.09114}
{'[4, 1, 0, 6, 2, 3, 0, 0, 25, 12, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.0910859}
{'[4, 1, 0, 6, 2, 3, 0, 0, 25, 12, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.0910921}
{'[4, 1, 0, 6, 2, 3, 0, 0, 25, 12, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.091218}
{'[4, 1, 0, 6, 2, 3, 0, 0, 25, 12, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.0911729}
{'[4, 1, 0, 6, 2, 3, 0, 0, 25, 12, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.0911071}
{'[4, 1, 0, 6, 2, 3, 0, 0, 25, 12, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.0911009}
{'[4, 1, 0, 6, 2, 3, 0, 0, 25, 12, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.0911679}
{'[4, 1, 0, 6, 2, 3, 0, 0, 25, 12, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.0956709}
{'[4, 1, 0, 6, 2, 3, 0, 0, 25, 12, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.091244}
{'[4, 1, 0, 6, 2, 3, 0, 0, 25, 12, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.0911009}
{'[4, 1, 0, 6, 2, 3, 0, 0, 25, 12, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.091162}
{'[4, 1, 0, 6, 2, 3, 0, 0, 25, 12, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.0911319}
{'[4, 1, 0, 6, 2, 3, 0, 0, 25, 12, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.0911531}

out:
 ["{'[4, 1, 0, 6, 2, 3, 0, 0, 25, 12, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.091491}", "{'[4, 1, 0, 6, 2, 3, 0, 0, 25, 12, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.09113}", "{'[4, 1, 0, 6, 2, 3, 0, 0, 25, 12, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.091146}", "{'[4, 1, 0, 6, 2, 3, 0, 0, 25, 12, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.091193}", "{'[4, 1, 0, 6, 2, 3, 0, 0, 25, 12, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.0911531}", "{'[4, 1, 0, 6, 2, 3, 0, 0, 25, 12, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.0911419}", "{'[4, 1, 0, 6, 2, 3, 0, 0, 25, 12, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.0910599}", "{'[4, 1, 0, 6, 2, 3, 0, 0, 25, 12, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.0954032}", "{'[4, 1, 0, 6, 2, 3, 0, 0, 25, 12, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.091141}", "{'[4, 1, 0, 6, 2, 3, 0, 0, 25, 12, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.091181}", "{'[4, 1, 0, 6, 2, 3, 0, 0, 25, 12, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.0912049}", "{'[4, 1, 0, 6, 2, 3, 0, 0, 25, 12, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.091166}", "{'[4, 1, 0, 6, 2, 3, 0, 0, 25, 12, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.091116}", "{'[4, 1, 0, 6, 2, 3, 0, 0, 25, 12, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.0910881}", "{'[4, 1, 0, 6, 2, 3, 0, 0, 25, 12, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.0910871}", "{'[4, 1, 0, 6, 2, 3, 0, 0, 25, 12, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.0910938}", "{'[4, 1, 0, 6, 2, 3, 0, 0, 25, 12, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.09114}", "{'[4, 1, 0, 6, 2, 3, 0, 0, 25, 12, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.0910859}", "{'[4, 1, 0, 6, 2, 3, 0, 0, 25, 12, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.0910921}", "{'[4, 1, 0, 6, 2, 3, 0, 0, 25, 12, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.091218}", "{'[4, 1, 0, 6, 2, 3, 0, 0, 25, 12, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.0911729}", "{'[4, 1, 0, 6, 2, 3, 0, 0, 25, 12, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.0911071}", "{'[4, 1, 0, 6, 2, 3, 0, 0, 25, 12, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.0911009}", "{'[4, 1, 0, 6, 2, 3, 0, 0, 25, 12, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.0911679}", "{'[4, 1, 0, 6, 2, 3, 0, 0, 25, 12, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.0956709}", "{'[4, 1, 0, 6, 2, 3, 0, 0, 25, 12, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.091244}", "{'[4, 1, 0, 6, 2, 3, 0, 0, 25, 12, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.0911009}", "{'[4, 1, 0, 6, 2, 3, 0, 0, 25, 12, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.091162}", "{'[4, 1, 0, 6, 2, 3, 0, 0, 25, 12, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.0911319}", "{'[4, 1, 0, 6, 2, 3, 0, 0, 25, 12, 0, 2, 0, 0, 0, 1, 1, 1]' : 0.0911531}"]
returning from 'run': {'[4, 1, 0, 6, 2, 3, 0, 0, 25, 12, 0, 2, 0, 0, 0, 1, 1, 1]': ([0.091491, 0.09113, 0.091146, 0.091193, 0.0911531, 0.0911419, 0.0910599, 0.0954032, 0.091141, 0.091181, 0.0912049, 0.091166, 0.091116, 0.0910881, 0.0910871, 0.0910938, 0.09114, 0.0910859, 0.0910921, 0.091218, 0.0911729, 0.0911071, 0.0911009, 0.0911679, 0.0956709, 0.091244, 0.0911009, 0.091162, 0.0911319, 0.0911531], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.091491, 0.09113, 0.091146, 0.091193, 0.0911531, 0.0911419, 0.0910599, 0.0954032, 0.091141, 0.091181, 0.0912049, 0.091166, 0.091116, 0.0910881, 0.0910871, 0.0910938, 0.09114, 0.0910859, 0.0910921, 0.091218, 0.0911729, 0.0911071, 0.0911009, 0.0911679, 0.0956709, 0.091244, 0.0911009, 0.091162, 0.0911319, 0.0911531], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[4, 1, 0, 6, 2, 3, 0, 0, 25, 12, 0, 2, 0, 0, 0, 1, 1, 1]': ([0.091491, 0.09113, 0.091146, 0.091193, 0.0911531, 0.0911419, 0.0910599, 0.0954032, 0.091141, 0.091181, 0.0912049, 0.091166, 0.091116, 0.0910881, 0.0910871, 0.0910938, 0.09114, 0.0910859, 0.0910921, 0.091218, 0.0911729, 0.0911071, 0.0911009, 0.0911679, 0.0956709, 0.091244, 0.0911009, 0.091162, 0.0911319, 0.0911531], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [4, 4, 1, 0, 0, 5, 1, 24, 15, 2, 0, 0, 0, 1]
Fixed Factors: {'ACOPY_y': 0, 'U1_I': 25, 'U_J': 0, 'SCR': 1}
Testing candidate 4: [4, 4, 1, 0, 0, 5, 1, 0, 25, 24, 0, 15, 2, 0, 0, 1, 0, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	51
        Max loop nest depth: 	5
        Additions: 		4391
        Multiplications: 	2088
        Divisions: 		0
        Logical: 		0
        Reads: 			8569
        Writes: 		1459
        Comparisons:		51
        Gotos: 			0
        
digraph CFG {
	ForLoop16374002 [label="ForLoop16374002  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop16374002 -> ForLoop16374001;
	ForLoop16374002 -> _JOIN_16374002;
	ForLoop16374001 [label="ForLoop16374001  for (kk=kkk; kk<=min(ny-1,kkk+1008); kk=kk+16) {...",shape=box];
	ForLoop16374001 -> 16356046;
	ForLoop16374001 -> _JOIN_16374001;
	ForLoop16389923 [label="ForLoop16389923  for (k=cbv_7; k<=cbv_8; k=k+1) {...",shape=box];
	ForLoop16389923 -> 16483621;
	ForLoop16389923 -> _JOIN_16389923;
	ForLoop16389230 [label="ForLoop16389230  for (k=kk; k<=cbv_6; k=k+16) {...",shape=box];
	ForLoop16389230 -> 16481586;
	ForLoop16389230 -> _JOIN_16389230;
	ForLoop16373124 [label="ForLoop16373124  for (k=kk; k<=cbv_2; k=k+16) {...",shape=box];
	ForLoop16373124 -> 16416342;
	ForLoop16373124 -> _JOIN_16373124;
	ForLoop16374004 [label="ForLoop16374004  for (it=ii; it<=min(nx-1,ii+127)-31; it=it+32) {...",shape=box];
	ForLoop16374004 -> 16459541;
	ForLoop16374004 -> _JOIN_16374004;
	_JOIN_16389925 [label="_JOIN_16389925None...",shape=box];
	_JOIN_16389925 -> _JOIN_16389927;
	ForLoop16390640 [label="ForLoop16390640  for (ii=0; ii<=nx-1; ii=ii+128) {...",shape=box];
	ForLoop16390640 -> ForLoop16374004;
	ForLoop16390640 -> _JOIN_16390640;
	16564555 [label="16564555  register int cbv_11, cbv_12;...",shape=box];
	_JOIN_16125637 [label="_JOIN_16125637None...",shape=box];
	_JOIN_16125637 -> 16354893;
	ForLoop16125568 [label="ForLoop16125568  for (i=0; i<=ny-26; i=i+26) {...",shape=box];
	ForLoop16125568 -> 16125341;
	ForLoop16125568 -> _JOIN_16125568;
	16390026 [label="16390026  for (j=jj; j<=min(ny-1,jj+127); j=j+1) ...",shape=box];
	ForLoop16375846 [label="ForLoop16375846  for (j=jj; j<=cbv_5; j=j+1) {...",shape=box];
	ForLoop16375846 -> 16461959;
	ForLoop16375846 -> _JOIN_16375846;
	ForLoop16389927 [label="ForLoop16389927  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop16389927 -> ForLoop16389925;
	ForLoop16389927 -> _JOIN_16389927;
	_JOIN_16389230 [label="_JOIN_16389230None...",shape=box];
	_JOIN_16389230 -> 16563816;
	ForLoop16373999 [label="ForLoop16373999  for (k=cbv_3; k<=cbv_4; k=k+1) {...",shape=box];
	ForLoop16373999 -> 16418853;
	ForLoop16373999 -> _JOIN_16373999;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 16124909;
	_JOIN_16389929 [label="_JOIN_16389929None...",shape=box];
	_JOIN_16389929 -> ForLoop16390637;
	16563816 [label="16563816  register int cbv_7, cbv_8;...",shape=box];
	16125341 [label="16125341  y[i]=0.0;...",shape=box];
	_JOIN_16390068 [label="_JOIN_16390068None...",shape=box];
	_JOIN_16390068 -> _JOIN_16390070;
	_JOIN_16375848 [label="_JOIN_16375848None...",shape=box];
	_JOIN_16375848 -> ForLoop16389927;
	16521102 [label="16521102  tmp[i]=scv_111;...",shape=box];
	16521102 -> _JOIN_16390637;
	16516672 [label="16516672  tmp[(i+20)]=scv_69;...",shape=box];
	_JOIN_16390637 [label="_JOIN_16390637None...",shape=box];
	_JOIN_16390637 -> _JOIN_16390640;
	_JOIN_16390640 [label="_JOIN_16390640None...",shape=box];
	_JOIN_16375846 [label="_JOIN_16375846None...",shape=box];
	_JOIN_16375846 -> _JOIN_16375848;
	16459541 [label="16459541  double scv_19, scv_20, scv_21, scv_22, scv_23, scv_24, scv_25, scv_26;...",shape=box];
	16516654 [label="16516654  double scv_69, scv_70, scv_71, scv_72, scv_73, scv_74, scv_75, scv_76;...",shape=box];
	ForLoop16389925 [label="ForLoop16389925  for (kk=kkk; kk<=min(ny-1,kkk+1008); kk=kk+16) {...",shape=box];
	ForLoop16389925 -> 16375880;
	ForLoop16389925 -> _JOIN_16389925;
	16392181 [label="16392181  double scv_1;...",shape=box];
	16459559 [label="16459559  tmp[(it+21)]=scv_19;...",shape=box];
	_JOIN_16374004 [label="_JOIN_16374004None...",shape=box];
	_JOIN_16374004 -> 16374005;
	16521090 [label="16521090  double scv_111;...",shape=box];
	16356046 [label="16356046  int k;...",shape=box];
	_JOIN_16374001 [label="_JOIN_16374001None...",shape=box];
	_JOIN_16374001 -> _JOIN_16374002;
	_JOIN_16390634 [label="_JOIN_16390634None...",shape=box];
	_JOIN_16390634 -> _JOIN_16390635;
	_JOIN_16390635 [label="_JOIN_16390635None...",shape=box];
	_JOIN_16390635 -> 16521102;
	ForLoop16390068 [label="ForLoop16390068  for (j=jj; j<=cbv_9; j=j+1) {...",shape=box];
	ForLoop16390068 -> 16390067;
	ForLoop16390068 -> _JOIN_16390068;
	_JOIN_16374002 [label="_JOIN_16374002None...",shape=box];
	_JOIN_16374002 -> 16459559;
	ForLoop16125637 [label="ForLoop16125637  for (i=ny-((ny-(0))%26); i<=ny-1; i=i+1) ...",shape=box];
	ForLoop16125637 -> 16125636;
	ForLoop16125637 -> _JOIN_16125637;
	16124909 [label="16124909  int i;...",shape=box];
	16124909 -> ForLoop16125568;
	ForLoop16389929 [label="ForLoop16389929  for (i=it; i<=min(nx-1,ii+127)-24; i=i+25) {...",shape=box];
	ForLoop16389929 -> 16516654;
	ForLoop16389929 -> _JOIN_16389929;
	16518850 [label="16518850  double scv_110;...",shape=box];
	ForLoop16390637 [label="ForLoop16390637  for (i=(min(nx-1,ii+127))-(((min(nx-1,ii+127))-(it)+1)%25)+1; i<=min(nx-1,ii+127); i=i+1) {...",shape=box];
	ForLoop16390637 -> 16521090;
	ForLoop16390637 -> _JOIN_16390637;
	ForLoop16390634 [label="ForLoop16390634  for (kk=kkk; kk<=min(ny-1,kkk+1008); kk=kk+16) {...",shape=box];
	ForLoop16390634 -> 16390102;
	ForLoop16390634 -> _JOIN_16390634;
	ForLoop16390635 [label="ForLoop16390635  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop16390635 -> ForLoop16390634;
	ForLoop16390635 -> _JOIN_16390635;
	16375880 [label="16375880  int k;...",shape=box];
	ForLoop16390564 [label="ForLoop16390564  for (k=kk; k<=cbv_10; k=k+16) {...",shape=box];
	ForLoop16390564 -> 16518448;
	ForLoop16390564 -> _JOIN_16390564;
	16461959 [label="16461959  double scv_51;...",shape=box];
	16354893 [label="16354893  double x_copy[128];...",shape=box];
	16418853 [label="16418853  double scv_18;...",shape=box];
	16481586 [label="16481586  double scv_52, scv_53, scv_54, scv_55, scv_56, scv_57, scv_58, scv_59;...",shape=box];
	_JOIN_16390632 [label="_JOIN_16390632None...",shape=box];
	_JOIN_16390632 -> _JOIN_16390634;
	16390067 [label="16390067  scv_111=scv_111+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	16390067 -> _JOIN_16390068;
	16416342 [label="16416342  double scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8, scv_9;...",shape=box];
	_JOIN_16373124 [label="_JOIN_16373124None...",shape=box];
	_JOIN_16373124 -> 16555008;
	16390102 [label="16390102  int k;...",shape=box];
	16518448 [label="16518448  double scv_94, scv_95, scv_96, scv_97, scv_98, scv_99, scv_100, scv_101;...",shape=box];
	_JOIN_16356012 [label="_JOIN_16356012None...",shape=box];
	_JOIN_16356012 -> _JOIN_16356014;
	_JOIN_16356014 [label="_JOIN_16356014None...",shape=box];
	_JOIN_16356014 -> ForLoop16374002;
	_JOIN_16390564 [label="_JOIN_16390564None...",shape=box];
	_JOIN_16390564 -> 16564555;
	16483621 [label="16483621  double scv_6expected=9369846271501.798828
actual=9369846271501.798828
8;...",shape=box];
	ForLoop16356014 [label="ForLoop16356014  for (jj=0; jj<=ny-1; jj=jj+128) {...",shape=box];
	ForLoop16356014 -> 16354977;
	ForLoop16356014 -> _JOIN_16356014;
	16555008 [label="16555008  register int cbv_3, cbv_4;...",shape=box];
	_JOIN_16389927 [label="_JOIN_16389927None...",shape=box];
	_JOIN_16389927 -> 16516672;
	ForLoop16356012 [label="ForLoop16356012  for (j=jj; j<=cbv_1; j=j+1) {...",shape=box];
	ForLoop16356012 -> 16392181;
	ForLoop16356012 -> _JOIN_16356012;
	_JOIN_16389923 [label="_JOIN_16389923None...",shape=box];
	_JOIN_16389923 -> _JOIN_16389925;
	16374005 [label="16374005  int i;...",shape=box];
	16374005 -> ForLoop16389929;
	_JOIN_16390070 [label="_JOIN_16390070None...",shape=box];
	_JOIN_16390070 -> ForLoop16390635;
	ForLoop16390632 [label="ForLoop16390632  for (k=cbv_11; k<=cbv_12; k=k+1) {...",shape=box];
	ForLoop16390632 -> 16518850;
	ForLoop16390632 -> _JOIN_16390632;
	16354977 [label="16354977  for (j=jj; j<=min(ny-1,jj+127); j=j+1) ...",shape=box];
	ForLoop16390070 [label="ForLoop16390070  for (jj=0; jj<=ny-1; jj=jj+128) {...",shape=box];
	ForLoop16390070 -> 16390026;
	ForLoop16390070 -> _JOIN_16390070;
	ForLoop16375848 [label="ForLoop16375848  for (jj=0; jj<=ny-1; jj=jj+128) {...",shape=box];
	ForLoop16375848 -> 16374291;
	ForLoop16375848 -> _JOIN_16375848;
	16374291 [label="16374291  for (j=jj; j<=min(ny-1,jj+127); j=j+1) ...",shape=box];
	_JOIN_16125568 [label="_JOIN_16125568None...",shape=box];
	_JOIN_16125568 -> ForLoop16125637;
	_JOIN_16373999 [label="_JOIN_16373999None...",shape=box];
	_JOIN_16373999 -> _JOIN_16374001;
	16125636 [label="16125636  y[i]=0.0;...",shape=box];
	16125636 -> _JOIN_16125637;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest74.exe __orio_perftest74.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest74.exe  
{'[4, 4, 1, 0, 0, 5, 1, 0, 25, 24, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.20281}
{'[4, 4, 1, 0, 0, 5, 1, 0, 25, 24, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.202309}
{'[4, 4, 1, 0, 0, 5, 1, 0, 25, 24, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.202603}
{'[4, 4, 1, 0, 0, 5, 1, 0, 25, 24, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.202512}
{'[4, 4, 1, 0, 0, 5, 1, 0, 25, 24, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.202237}
{'[4, 4, 1, 0, 0, 5, 1, 0, 25, 24, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.202199}
{'[4, 4, 1, 0, 0, 5, 1, 0, 25, 24, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.20261}
{'[4, 4, 1, 0, 0, 5, 1, 0, 25, 24, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.20243}
{'[4, 4, 1, 0, 0, 5, 1, 0, 25, 24, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.202315}
{'[4, 4, 1, 0, 0, 5, 1, 0, 25, 24, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.202219}
{'[4, 4, 1, 0, 0, 5, 1, 0, 25, 24, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.202139}
{'[4, 4, 1, 0, 0, 5, 1, 0, 25, 24, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.202517}
{'[4, 4, 1, 0, 0, 5, 1, 0, 25, 24, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.202251}
{'[4, 4, 1, 0, 0, 5, 1, 0, 25, 24, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.202306}
{'[4, 4, 1, 0, 0, 5, 1, 0, 25, 24, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.202339}
{'[4, 4, 1, 0, 0, 5, 1, 0, 25, 24, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.202147}
{'[4, 4, 1, 0, 0, 5, 1, 0, 25, 24, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.202375}
{'[4, 4, 1, 0, 0, 5, 1, 0, 25, 24, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.202227}
{'[4, 4, 1, 0, 0, 5, 1, 0, 25, 24, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.202938}
{'[4, 4, 1, 0, 0, 5, 1, 0, 25, 24, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.202249}
{'[4, 4, 1, 0, 0, 5, 1, 0, 25, 24, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.202086}
{'[4, 4, 1, 0, 0, 5, 1, 0, 25, 24, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.202539}
{'[4, 4, 1, 0, 0, 5, 1, 0, 25, 24, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.202421}
{'[4, 4, 1, 0, 0, 5, 1, 0, 25, 24, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.202389}
{'[4, 4, 1, 0, 0, 5, 1, 0, 25, 24, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.202374}
{'[4, 4, 1, 0, 0, 5, 1, 0, 25, 24, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.20244}
{'[4, 4, 1, 0, 0, 5, 1, 0, 25, 24, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.202755}
{'[4, 4, 1, 0, 0, 5, 1, 0, 25, 24, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.202168}
{'[4, 4, 1, 0, 0, 5, 1, 0, 25, 24, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.202542}
{'[4, 4, 1, 0, 0, 5, 1, 0, 25, 24, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.202343}

out:
 ["{'[4, 4, 1, 0, 0, 5, 1, 0, 25, 24, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.20281}", "{'[4, 4, 1, 0, 0, 5, 1, 0, 25, 24, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.202309}", "{'[4, 4, 1, 0, 0, 5, 1, 0, 25, 24, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.202603}", "{'[4, 4, 1, 0, 0, 5, 1, 0, 25, 24, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.202512}", "{'[4, 4, 1, 0, 0, 5, 1, 0, 25, 24, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.202237}", "{'[4, 4, 1, 0, 0, 5, 1, 0, 25, 24, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.202199}", "{'[4, 4, 1, 0, 0, 5, 1, 0, 25, 24, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.20261}", "{'[4, 4, 1, 0, 0, 5, 1, 0, 25, 24, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.20243}", "{'[4, 4, 1, 0, 0, 5, 1, 0, 25, 24, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.202315}", "{'[4, 4, 1, 0, 0, 5, 1, 0, 25, 24, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.202219}", "{'[4, 4, 1, 0, 0, 5, 1, 0, 25, 24, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.202139}", "{'[4, 4, 1, 0, 0, 5, 1, 0, 25, 24, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.202517}", "{'[4, 4, 1, 0, 0, 5, 1, 0, 25, 24, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.202251}", "{'[4, 4, 1, 0, 0, 5, 1, 0, 25, 24, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.202306}", "{'[4, 4, 1, 0, 0, 5, 1, 0, 25, 24, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.202339}", "{'[4, 4, 1, 0, 0, 5, 1, 0, 25, 24, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.202147}", "{'[4, 4, 1, 0, 0, 5, 1, 0, 25, 24, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.202375}", "{'[4, 4, 1, 0, 0, 5, 1, 0, 25, 24, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.202227}", "{'[4, 4, 1, 0, 0, 5, 1, 0, 25, 24, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.202938}", "{'[4, 4, 1, 0, 0, 5, 1, 0, 25, 24, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.202249}", "{'[4, 4, 1, 0, 0, 5, 1, 0, 25, 24, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.202086}", "{'[4, 4, 1, 0, 0, 5, 1, 0, 25, 24, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.202539}", "{'[4, 4, 1, 0, 0, 5, 1, 0, 25, 24, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.202421}", "{'[4, 4, 1, 0, 0, 5, 1, 0, 25, 24, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.202389}", "{'[4, 4, 1, 0, 0, 5, 1, 0, 25, 24, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.202374}", "{'[4, 4, 1, 0, 0, 5, 1, 0, 25, 24, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.20244}", "{'[4, 4, 1, 0, 0, 5, 1, 0, 25, 24, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.202755}", "{'[4, 4, 1, 0, 0, 5, 1, 0, 25, 24, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.202168}", "{'[4, 4, 1, 0, 0, 5, 1, 0, 25, 24, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.202542}", "{'[4, 4, 1, 0, 0, 5, 1, 0, 25, 24, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.202343}"]
returning from 'run': {'[4, 4, 1, 0, 0, 5, 1, 0, 25, 24, 0, 15, 2, 0, 0, 1, 0, 1]': ([0.20281, 0.202309, 0.202603, 0.202512, 0.202237, 0.202199, 0.20261, 0.20243, 0.202315, 0.202219, 0.202139, 0.202517, 0.202251, 0.202306, 0.202339, 0.202147, 0.202375, 0.202227, 0.202938, 0.202249, 0.202086, 0.202539, 0.202421, 0.202389, 0.202374, 0.20244, 0.202755, 0.202168, 0.202542, 0.202343], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.20281, 0.202309, 0.202603, 0.202512, 0.202237, 0.202199, 0.20261, 0.20243, 0.202315, 0.202219, 0.202139, 0.202517, 0.202251, 0.202306, 0.202339, 0.202147, 0.202375, 0.202227, 0.202938, 0.202249, 0.202086, 0.202539, 0.202421, 0.202389, 0.202374, 0.20244, 0.202755, 0.202168, 0.202542, 0.202343], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[4, 4, 1, 0, 0, 5, 1, 0, 25, 24, 0, 15, 2, 0, 0, 1, 0, 1]': ([0.20281, 0.202309, 0.202603, 0.202512, 0.202237, 0.202199, 0.20261, 0.20243, 0.202315, 0.202219, 0.202139, 0.202517, 0.202251, 0.202306, 0.202339, 0.202147, 0.202375, 0.202227, 0.202938, 0.202249, 0.202086, 0.202539, 0.202421, 0.202389, 0.202374, 0.20244, 0.202755, 0.202168, 0.202542, 0.202343], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [1, 3, 5, 5, 0, 0, 1, 3, 15, 0, 0, 2, 1, 1]
Fixed Factors: {'ACOPY_y': 0, 'U1_I': 25, 'U_J': 0, 'SCR': 1}
Testing candidate 5: [1, 3, 5, 5, 0, 0, 1, 0, 25, 3, 0, 15, 0, 0, 2, 1, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	29
        Max loop nest depth: 	5
        Additions: 		1337
        Multiplications: 	500
        Divisions: 		0
        Logical: 		0
        Reads: 			3023
        Writes: 		676
        Comparisons:		29
        Gotos: 			0
        
digraph CFG {
	16639977 [label="16639977  double x_copy[64];...",shape=box];
	_JOIN_16565517 [label="_JOIN_16565517None...",shape=box];
	_JOIN_16565517 -> 16565861;
	_JOIN_16645595 [label="_JOIN_16645595None...",shape=box];
	_JOIN_16645595 -> 16701734;
	16658875 [label="16658875  double scv_68, scv_69, scv_70, scv_71, scv_72, scv_73, scv_74, scv_75;...",shape=box];
	_JOIN_16648571 [label="_JOIN_16648571None...",shape=box];
	_JOIN_16648571 -> 16681369;
	_JOIN_16565586 [label="_JOIN_16565586None...",shape=box];
	_JOIN_16565586 -> 16639977;
	16677034 [label="16677034  double scv_138, scv_139, scv_140, scv_141, scv_142, scv_143, scv_144, scv_145;...",shape=box];
	ForLoop16648568 [label="ForLoop16648568  for (k=cbv_18; k<=cbv_19; k=k+1) {...",shape=box];
	ForLoop16648568 -> 16677436;
	ForLoop16648568 -> _JOIN_16648568;
	16700334 [label="16700334  register int cbv_2;...",shape=box];
	ForLoop16646229 [label="ForLoop16646229  for (k=kt; k<=cbv_9; k=k+16) {...",shape=box];
	ForLoop16646229 -> 16658875;
	ForLoop16646229 -> _JOIN_16646229;
	_JOIN_16645669 [label="_JOIN_16645669None...",shape=box];
	_JOIN_16645669 -> 16645671;
	ForLoop16644504 [label="ForLoop16644504  for (kt=kk; kt<=cbv_2; kt=kt+32) {...",shape=box];
	ForLoop16644504 -> 16654811;
	ForLoop16644504 -> _JOIN_16644504;
	16644505 [label="16644505  int k;...",shape=box];
	16647039 [label="16647039  for (j=jj; j<=min(ny-1,jj+63); j=j+1) ...",shape=box];
	ForLoop16640339 [label="ForLoop16640339  for (j=jj; j<=cbv_1; j=j+1) {...",shape=box];
	ForLoop16640339 -> 16648773;
	ForLoop16640339 -> _JOIN_16640339;
	_JOIN_16646937 [label="_JOIN_16646937None...",shape=box];
	_JOIN_16646937 -> _JOIN_16646940;
	_JOIN_16640339 [label="_JOIN_16640339None...",shape=box];
	_JOIN_16640339 -> _JOIN_16640341;
	16701734 [label="16701734  register int cbv_7, cbv_8;...",shape=box];
	ForLoop16645595 [label="ForLoop16645595  for (k=kt; k<=cbv_6; k=k+16) {...",shape=box];
	ForLoop16645595 -> 16657614;
	ForLoop16645595 -> _JOIN_16645595;
	_JOIN_16648568 [label="_JOIN_16648568None...",shape=box];
	_JOIN_16648568 -> _JOIN_16648571;
	16704447 [label="16704447  register int cbv_16;...",shape=box];
	_JOIN_16646229 [label="_JOIN_16646229None...",shape=box];
	_JOIN_16646229 -> 16702476;
	16675675 [label="16675675  double scv_106, scv_107, scv_108, scv_109, scv_110, scv_111, scv_112, scv_113;...",shape=box];
	_JOIN_16648500 [label="_JOIN_16648500None...",shape=box];
	_JOIN_16648500 -> 16705105;
	ForLoop16565586 [label="ForLoop16565586  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop16565586 -> 16565585;
	ForLoop16565586 -> _JOIN_16565586;
	ForLoop16646863 [label="ForLoop16646863  for (k=kt; k<=cbv_12; k=k+16) {...",shape=box];
	ForLoop16646863 -> 16660136;
	ForLoop16646863 -> _JOIN_16646863;
	16648038 [label="16648038  int k;...",shape=box];
	16645037 [label="16645037  int k;...",shape=box];
	16564858 [label="16564858  int i;...",shape=box];
	ForLoop16646940 [label="ForLoop16646940  for (kk=0; kk<=ny-1; kk=kk+256) {...",shape=box];
	ForLoop16646940 -> 16700334;
	ForLoop16646940 -> _JOIN_16646940;
	ForLoop16646942 [label="ForLoop16646942  for (i=ii; i<=min(nx-1,ii+15)-3; i=i+4) {...",shape=box];
	ForLoop16646942 -> 16673825;
	ForLoop16646942 -> _JOIN_16646942;
	16640107 [label="16640107  for (j=jj; j<=min(ny-1,jj+63); j=j+1) ...",shape=box];
	16647080 [label="16647080  scv_155=scv_155+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	16647080 -> _JOIN_16647081;
	_JOIN_16648573 [label="_JOIN_16648573None...",shape=box];
	_JOIN_16648573 -> _JOIN_16648575;
	ForLoop16565517 [label="ForLoop16565517  for (i=0; i<=cbv_1; i=i+26) {...",shape=box];
	ForLoop16565517 -> 16565290;
	ForLoop16565517 -> _JOIN_16565517;
	16681369 [label="16681369  tmp[i]=scv_155;...",shape=box];
	16681369 -> _JOIN_16648573;
	_JOIN_16648576 [label="_JOIN_16648576None...",shape=box];
	_JOIN_16648575 [label="_JOIN_16648575None...",shape=box];
	_JOIN_16648575 -> _JOIN_16648576;
	_JOIN_16645035 [label="_JOIN_16645035None...",shape=box];
	_JOIN_16645035 -> 16645037;
	16700992 [label="16700992  register int cbv_4, cbv_5;...",shape=box];
	ForLoop16647083 [label="ForLoop16647083  for (jj=0; jj<=ny-1; jj=jj+64) {...",shape=box];
	ForLoop16647083 -> 16647039;
	ForLoop16647083 -> _JOIN_16647083;
	ForLoop16647081 [label="ForLoop16647081  for (j=jj; j<=cbv_15; j=j+1) {...",shape=box];
	ForLoop16647081 -> 16647080;
	ForLoop16647081 -> _JOIN_16647081;
	16658025 [label="16658025  double scv_67;...",shape=box];
	16645671 [label="16645671  int k;...",shape=box];
	ForLoop16648037 [label="ForLoop16648037  for (kt=kk; kt<=cbv_16; kt=kt+32) {...",shape=box];
	ForLoop16648037 -> 16675675;
	ForLoop16648037 -> _JOIN_16648037;
	_JOIN_16646863 [label="_JOIN_16646863None...",shape=box];
	_JOIN_16646863 -> 16703218;
	16659286 [label="16659286  double scv_84;...",shape=box];
	16646305 [label="16646305  int k;...",shape=box];
	16657614 [label="16657614  double scv_51, scv_52, scv_53, scv_54, scv_55, scv_56, scv_57, scv_58;...",shape=box];
	16705105 [label="16705105  register int cbv_18, cbv_19;...",shape=box];
	16660547 [label="16660547  double scv_101;...",shape=box];
	_JOIN_16648037 [label="_JOIN_16648037None...",shape=box];
	_JOIN_16648037 -> 16648038;
	ForLoop16645669 [label="ForLoop16645669  for (k=cbv_7; k<=cbv_8; k=k+1) {...",shape=box];
	ForLoop16645669 -> 16658025;
	ForLoop16645669 -> _JOIN_16645669;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 16564858;
	16673843 [label="16673843  tmp[(i+2)]=scv_102;...",shape=box];
	16660136 [label="16660136  double scv_85, scv_86, scv_87, scv_88, scv_89, scv_90, scv_91, scv_92;...",shape=box];
	ForLoop16640341 [label="ForLoop16640341  for (jj=0; jj<=ny-1; jj=jj+64) {...",shape=box];
	ForLoop16640341 -> 16640107;
	ForLoop16640341 -> _JOIN_16640341;
	16654811 [label="16654811  double scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8, scv_9;...",shape=box];
	ForLoop16646303 [label="ForLoop16646303  for (k=cbv_10; k<=cbv_11; k=k+1) {...",shape=box];
	ForLoop16646303 -> 16659286;
	ForLoop16646303 -> _JOIN_16646303;
	16656764 [label="16656764  double scv_50;...",shape=box];
	_JOIN_16644504 [label="_JOIN_16644504None...",shape=box];
	_JOIN_16644504 -> 16644505;
	16681357 [label="16681357  double scv_155;...",shape=box];
	16565861 [label="16565861  register int cbv_2, cbv_3;...",shape=box];
	_JOIN_16646303 [label="_JOIN_16646303None...",shape=box];
	_JOIN_16646303 -> 16646305;
	ForLoop16644967 [label="ForLoop16644967  for (k=kt; k<=cbv_3; k=k+16) {...",shape=box];
	ForLoop16644967 -> 16656362;
	ForLoop16644967 -> _JOIN_16644967;
	_JOIN_16640341 [label="_JOIN_16640341None...",shape=box];
	_JOIN_16640341 -> ForLoop16646940;
	_JOIN_16646940 [label="_JOIN_16646940None...",shape=box];
	_JOIN_16646940 -> 16673843;
	16673825 [label="16673825  double scv_102, scv_103, scv_104, scv_105;...",shape=box];
	16565585 [label="16565585  y[i]=0.0;...",shape=box];
	16565585 -> _JOIN_16565586;
	ForLoop16648571 [label="ForLoop16648571  for (kk=0; kk<=ny-1; kk=kk+256) {...",shape=box];
	ForLoop16648571 -> 16704447;
	ForLoop16648571 -> _JOIN_16648571;
	_JOIN_16647083 [label="_JOIN_16647083None...",shape=box];
	_JOIN_16647083 -> ForLoop16648571;
	ForLoop16648500 [label="ForLoop16648500  for (k=kt; k<=cbv_17; k=k+16) {...",shape=box];
	ForLoop16648500 -> 16677034;
	ForLoop16648500 -> _JOIN_16648500;
	_JOIN_16647081 [label="_JOIN_16647081None...",shape=box];
	_JOIN_16647081 -> _JOIN_16647083;
	ForLoop16648576 [label="ForLoop16648576  for (iii=0; iii<=nx-1; iii=iii+1024) {...",shape=box];
	ForLoop16648576 -> ForLoop16648575;
	ForLoop16648576 -> _JOIN_16648576;
	ForLoop16645035 [label="ForLoop16645035  for (k=cbv_4; k<=cbv_5; k=k+1) {...",shape=box];
	ForLoop16645035 -> 16656764;
	ForLoop16645035 -> _JOIN_16645035;
	_JOIN_16646942 [label="_JOIN_16646942None...",shape=box];
	_JOIN_16646942 -> ForLoop16648573;
	ForLoop16646937 [label="ForLoop16646937  for (k=cbv_13; k<=cbv_14; k=k+1) {...",shape=box];
	ForLoop16646937 -> 16660547;
	ForLoop16646937 -> _JOIN_16646937;
	16656362 [label="166563expected=9369846271501.798828
actual=9369846271501.798828
62  double scv_34, scv_35, scv_36, scv_37, scv_38, scv_39, scv_40, scv_41;...",shape=box];
	16640010 [label="16640010  int i;...",shape=box];
	16640010 -> ForLoop16646942;
	16648773 [label="16648773  double scv_1;...",shape=box];
	ForLoop16648573 [label="ForLoop16648573  for (i=(min(nx-1,ii+15))-(((min(nx-1,ii+15))-(ii)+1)%4)+1; i<=min(nx-1,ii+15); i=i+1) {...",shape=box];
	ForLoop16648573 -> 16681357;
	ForLoop16648573 -> _JOIN_16648573;
	16677436 [label="16677436  double scv_154;...",shape=box];
	16702476 [label="16702476  register int cbv_10, cbv_11;...",shape=box];
	ForLoop16648575 [label="ForLoop16648575  for (ii=iii; ii<=min(nx-1,iii+1008); ii=ii+16) {...",shape=box];
	ForLoop16648575 -> 16640010;
	ForLoop16648575 -> _JOIN_16648575;
	16703218 [label="16703218  register int cbv_13, cbv_14;...",shape=box];
	16565290 [label="16565290  y[i]=0.0;...",shape=box];
	_JOIN_16644967 [label="_JOIN_16644967None...",shape=box];
	_JOIN_16644967 -> 16700992;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest75.exe __orio_perftest75.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest75.exe  
{'[1, 3, 5, 5, 0, 0, 1, 0, 25, 3, 0, 15, 0, 0, 2, 1, 1, 1]' : 0.0896771}
{'[1, 3, 5, 5, 0, 0, 1, 0, 25, 3, 0, 15, 0, 0, 2, 1, 1, 1]' : 0.089462}
{'[1, 3, 5, 5, 0, 0, 1, 0, 25, 3, 0, 15, 0, 0, 2, 1, 1, 1]' : 0.0895281}
{'[1, 3, 5, 5, 0, 0, 1, 0, 25, 3, 0, 15, 0, 0, 2, 1, 1, 1]' : 0.0894408}
{'[1, 3, 5, 5, 0, 0, 1, 0, 25, 3, 0, 15, 0, 0, 2, 1, 1, 1]' : 0.089746}
{'[1, 3, 5, 5, 0, 0, 1, 0, 25, 3, 0, 15, 0, 0, 2, 1, 1, 1]' : 0.0894141}
{'[1, 3, 5, 5, 0, 0, 1, 0, 25, 3, 0, 15, 0, 0, 2, 1, 1, 1]' : 0.089483}
{'[1, 3, 5, 5, 0, 0, 1, 0, 25, 3, 0, 15, 0, 0, 2, 1, 1, 1]' : 0.089452}
{'[1, 3, 5, 5, 0, 0, 1, 0, 25, 3, 0, 15, 0, 0, 2, 1, 1, 1]' : 0.089514}
{'[1, 3, 5, 5, 0, 0, 1, 0, 25, 3, 0, 15, 0, 0, 2, 1, 1, 1]' : 0.0894191}
{'[1, 3, 5, 5, 0, 0, 1, 0, 25, 3, 0, 15, 0, 0, 2, 1, 1, 1]' : 0.0895772}
{'[1, 3, 5, 5, 0, 0, 1, 0, 25, 3, 0, 15, 0, 0, 2, 1, 1, 1]' : 0.0894849}
{'[1, 3, 5, 5, 0, 0, 1, 0, 25, 3, 0, 15, 0, 0, 2, 1, 1, 1]' : 0.0894239}
{'[1, 3, 5, 5, 0, 0, 1, 0, 25, 3, 0, 15, 0, 0, 2, 1, 1, 1]' : 0.089447}
{'[1, 3, 5, 5, 0, 0, 1, 0, 25, 3, 0, 15, 0, 0, 2, 1, 1, 1]' : 0.0894411}
{'[1, 3, 5, 5, 0, 0, 1, 0, 25, 3, 0, 15, 0, 0, 2, 1, 1, 1]' : 0.089663}
{'[1, 3, 5, 5, 0, 0, 1, 0, 25, 3, 0, 15, 0, 0, 2, 1, 1, 1]' : 0.0893879}
{'[1, 3, 5, 5, 0, 0, 1, 0, 25, 3, 0, 15, 0, 0, 2, 1, 1, 1]' : 0.0894899}
{'[1, 3, 5, 5, 0, 0, 1, 0, 25, 3, 0, 15, 0, 0, 2, 1, 1, 1]' : 0.0896049}
{'[1, 3, 5, 5, 0, 0, 1, 0, 25, 3, 0, 15, 0, 0, 2, 1, 1, 1]' : 0.0895171}
{'[1, 3, 5, 5, 0, 0, 1, 0, 25, 3, 0, 15, 0, 0, 2, 1, 1, 1]' : 0.0894139}
{'[1, 3, 5, 5, 0, 0, 1, 0, 25, 3, 0, 15, 0, 0, 2, 1, 1, 1]' : 0.089422}
{'[1, 3, 5, 5, 0, 0, 1, 0, 25, 3, 0, 15, 0, 0, 2, 1, 1, 1]' : 0.0895281}
{'[1, 3, 5, 5, 0, 0, 1, 0, 25, 3, 0, 15, 0, 0, 2, 1, 1, 1]' : 0.08938}
{'[1, 3, 5, 5, 0, 0, 1, 0, 25, 3, 0, 15, 0, 0, 2, 1, 1, 1]' : 0.089438}
{'[1, 3, 5, 5, 0, 0, 1, 0, 25, 3, 0, 15, 0, 0, 2, 1, 1, 1]' : 0.089432}
{'[1, 3, 5, 5, 0, 0, 1, 0, 25, 3, 0, 15, 0, 0, 2, 1, 1, 1]' : 0.0896139}
{'[1, 3, 5, 5, 0, 0, 1, 0, 25, 3, 0, 15, 0, 0, 2, 1, 1, 1]' : 0.089602}
{'[1, 3, 5, 5, 0, 0, 1, 0, 25, 3, 0, 15, 0, 0, 2, 1, 1, 1]' : 0.0895901}
{'[1, 3, 5, 5, 0, 0, 1, 0, 25, 3, 0, 15, 0, 0, 2, 1, 1, 1]' : 0.089422}

out:
 ["{'[1, 3, 5, 5, 0, 0, 1, 0, 25, 3, 0, 15, 0, 0, 2, 1, 1, 1]' : 0.0896771}", "{'[1, 3, 5, 5, 0, 0, 1, 0, 25, 3, 0, 15, 0, 0, 2, 1, 1, 1]' : 0.089462}", "{'[1, 3, 5, 5, 0, 0, 1, 0, 25, 3, 0, 15, 0, 0, 2, 1, 1, 1]' : 0.0895281}", "{'[1, 3, 5, 5, 0, 0, 1, 0, 25, 3, 0, 15, 0, 0, 2, 1, 1, 1]' : 0.0894408}", "{'[1, 3, 5, 5, 0, 0, 1, 0, 25, 3, 0, 15, 0, 0, 2, 1, 1, 1]' : 0.089746}", "{'[1, 3, 5, 5, 0, 0, 1, 0, 25, 3, 0, 15, 0, 0, 2, 1, 1, 1]' : 0.0894141}", "{'[1, 3, 5, 5, 0, 0, 1, 0, 25, 3, 0, 15, 0, 0, 2, 1, 1, 1]' : 0.089483}", "{'[1, 3, 5, 5, 0, 0, 1, 0, 25, 3, 0, 15, 0, 0, 2, 1, 1, 1]' : 0.089452}", "{'[1, 3, 5, 5, 0, 0, 1, 0, 25, 3, 0, 15, 0, 0, 2, 1, 1, 1]' : 0.089514}", "{'[1, 3, 5, 5, 0, 0, 1, 0, 25, 3, 0, 15, 0, 0, 2, 1, 1, 1]' : 0.0894191}", "{'[1, 3, 5, 5, 0, 0, 1, 0, 25, 3, 0, 15, 0, 0, 2, 1, 1, 1]' : 0.0895772}", "{'[1, 3, 5, 5, 0, 0, 1, 0, 25, 3, 0, 15, 0, 0, 2, 1, 1, 1]' : 0.0894849}", "{'[1, 3, 5, 5, 0, 0, 1, 0, 25, 3, 0, 15, 0, 0, 2, 1, 1, 1]' : 0.0894239}", "{'[1, 3, 5, 5, 0, 0, 1, 0, 25, 3, 0, 15, 0, 0, 2, 1, 1, 1]' : 0.089447}", "{'[1, 3, 5, 5, 0, 0, 1, 0, 25, 3, 0, 15, 0, 0, 2, 1, 1, 1]' : 0.0894411}", "{'[1, 3, 5, 5, 0, 0, 1, 0, 25, 3, 0, 15, 0, 0, 2, 1, 1, 1]' : 0.089663}", "{'[1, 3, 5, 5, 0, 0, 1, 0, 25, 3, 0, 15, 0, 0, 2, 1, 1, 1]' : 0.0893879}", "{'[1, 3, 5, 5, 0, 0, 1, 0, 25, 3, 0, 15, 0, 0, 2, 1, 1, 1]' : 0.0894899}", "{'[1, 3, 5, 5, 0, 0, 1, 0, 25, 3, 0, 15, 0, 0, 2, 1, 1, 1]' : 0.0896049}", "{'[1, 3, 5, 5, 0, 0, 1, 0, 25, 3, 0, 15, 0, 0, 2, 1, 1, 1]' : 0.0895171}", "{'[1, 3, 5, 5, 0, 0, 1, 0, 25, 3, 0, 15, 0, 0, 2, 1, 1, 1]' : 0.0894139}", "{'[1, 3, 5, 5, 0, 0, 1, 0, 25, 3, 0, 15, 0, 0, 2, 1, 1, 1]' : 0.089422}", "{'[1, 3, 5, 5, 0, 0, 1, 0, 25, 3, 0, 15, 0, 0, 2, 1, 1, 1]' : 0.0895281}", "{'[1, 3, 5, 5, 0, 0, 1, 0, 25, 3, 0, 15, 0, 0, 2, 1, 1, 1]' : 0.08938}", "{'[1, 3, 5, 5, 0, 0, 1, 0, 25, 3, 0, 15, 0, 0, 2, 1, 1, 1]' : 0.089438}", "{'[1, 3, 5, 5, 0, 0, 1, 0, 25, 3, 0, 15, 0, 0, 2, 1, 1, 1]' : 0.089432}", "{'[1, 3, 5, 5, 0, 0, 1, 0, 25, 3, 0, 15, 0, 0, 2, 1, 1, 1]' : 0.0896139}", "{'[1, 3, 5, 5, 0, 0, 1, 0, 25, 3, 0, 15, 0, 0, 2, 1, 1, 1]' : 0.089602}", "{'[1, 3, 5, 5, 0, 0, 1, 0, 25, 3, 0, 15, 0, 0, 2, 1, 1, 1]' : 0.0895901}", "{'[1, 3, 5, 5, 0, 0, 1, 0, 25, 3, 0, 15, 0, 0, 2, 1, 1, 1]' : 0.089422}"]
returning from 'run': {'[1, 3, 5, 5, 0, 0, 1, 0, 25, 3, 0, 15, 0, 0, 2, 1, 1, 1]': ([0.0896771, 0.089462, 0.0895281, 0.0894408, 0.089746, 0.0894141, 0.089483, 0.089452, 0.089514, 0.0894191, 0.0895772, 0.0894849, 0.0894239, 0.089447, 0.0894411, 0.089663, 0.0893879, 0.0894899, 0.0896049, 0.0895171, 0.0894139, 0.089422, 0.0895281, 0.08938, 0.089438, 0.089432, 0.0896139, 0.089602, 0.0895901, 0.089422], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.0896771, 0.089462, 0.0895281, 0.0894408, 0.089746, 0.0894141, 0.089483, 0.089452, 0.089514, 0.0894191, 0.0895772, 0.0894849, 0.0894239, 0.089447, 0.0894411, 0.089663, 0.0893879, 0.0894899, 0.0896049, 0.0895171, 0.0894139, 0.089422, 0.0895281, 0.08938, 0.089438, 0.089432, 0.0896139, 0.089602, 0.0895901, 0.089422], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[1, 3, 5, 5, 0, 0, 1, 0, 25, 3, 0, 15, 0, 0, 2, 1, 1, 1]': ([0.0896771, 0.089462, 0.0895281, 0.0894408, 0.089746, 0.0894141, 0.089483, 0.089452, 0.089514, 0.0894191, 0.0895772, 0.0894849, 0.0894239, 0.089447, 0.0894411, 0.089663, 0.0893879, 0.0894899, 0.0896049, 0.0895171, 0.0894139, 0.089422, 0.0895281, 0.08938, 0.089438, 0.089432, 0.0896139, 0.089602, 0.0895901, 0.089422], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [6, 0, 2, 6, 4, 5, 0, 0, 21, 2, 0, 0, 0, 0]
Fixed Factors: {'ACOPY_y': 0, 'U1_I': 25, 'U_J': 0, 'SCR': 1}
Testing candidate 6: [6, 0, 2, 6, 4, 5, 0, 0, 25, 0, 0, 21, 2, 0, 0, 1, 0, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	6
        Additions: 		3263
        Multiplications: 	1584
        Divisions: 		0
        Logical: 		0
        Reads: 			6200
        Writes: 		1016
        Comparisons:		18
        Gotos: 			0
        
digraph CFG {
	17066420 [label="17066420  double scv_57, scv_58, scv_59, scv_60, scv_61, scv_62, scv_63, scv_64;...",shape=box];
	_JOIN_16971067 [label="_JOIN_16971067None...",shape=box];
	_JOIN_16971067 -> _JOIN_16971069;
	16945579 [label="16945579  double x_copy;...",shape=box];
	ForLoop16971879 [label="ForLoop16971879  for (k=(min(ny-1,kk+31))-(((min(ny-1,kk+31))-(kk)+1)%22)+1; k<=min(ny-1,kk+31); k=k+1) {...",shape=box];
	ForLoop16971879 -> 17066949;
	ForLoop16971879 -> _JOIN_16971879;
	_JOIN_16946590 [label="_JOIN_16946590None...",shape=box];
	_JOIN_16946590 -> ForLoop16971070;
	_JOIN_16971148 [label="_JOIN_16971148None...",shape=box];
	_JOIN_16971148 -> _JOIN_16971149;
	_JOIN_16971069 [label="_JOIN_16971069None...",shape=box];
	_JOIN_16971069 -> _JOIN_16971070;
	17009277 [label="17009277  double scv_24;...",shape=box];
	ForLoop16971072 [label="ForLoop16971072  for (it=ii; it<=min(nx-1,ii+511)-31; it=it+32) {...",shape=box];
	ForLoop16971072 -> 17063974;
	ForLoop16971072 -> _JOIN_16971072;
	ForLoop16971070 [label="ForLoop16971070  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop16971070 -> ForLoop16971069;
	ForLoop16971070 -> _JOIN_16971070;
	_JOIN_16970192 [label="_JOIN_16970192None...",shape=box];
	_JOIN_16970192 -> ForLoop16971067;
	16705849 [label="16705849  y[i]=0.0;...",shape=box];
	ForLoop16946590 [label="ForLoop16946590  for (jjj=0; jjj<=ny-1; jjj=jjj+512) {...",shape=box];
	ForLoop16946590 -> ForLoop16946589;
	ForLoop16946590 -> _JOIN_16946590;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 16705417;
	ForLoop16971882 [label="ForLoop16971882  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop16971882 -> ForLoop16971881;
	ForLoop16971882 -> _JOIN_16971882;
	_JOIN_16971879 [label="_JOIN_16971879None...",shape=box];
	_JOIN_16971879 -> _JOIN_16971881;
	ForLoop16971881 [label="ForLoop16971881  for (kk=kkk; kk<=min(ny-1,kkk+992); kk=kk+32) {...",shape=box];
	ForLoop16971881 -> 16971181;
	ForLoop16971881 -> _JOIN_16971881;
	ForLoop16971886 [label="ForLoop16971886  for (ii=iii; ii<=min(nx-1,iii+1536); ii=ii+512) {...",shape=box];
	ForLoop16971886 -> ForLoop16971072;
	ForLoop16971886 -> _JOIN_16971886;
	ForLoop16971887 [label="ForLoop16971887  for (iii=0; iii<=nx-1; iii=iii+2048) {...",shape=box];
	ForLoop16971887 -> ForLoop16971886;
	ForLoop16971887 -> _JOIN_16971887;
	ForLoop16971884 [label="ForLoop16971884  for (i=it; i<=min(nx-1,ii+511); i=i+1) {...",shape=box];
	ForLoop16971884 -> 17069777;
	ForLoop16971884 -> _JOIN_16971884;
	ForLoop16706076 [label="ForLoop16706076  for (i=0; i<=ny-26; i=i+26) {...",shape=box];
	ForLoop16706076 -> 16705849;
	ForLoop16706076 -> _JOIN_16706076;
	ForLoop16706145 [label="ForLoop16706145  for (i=ny-((ny-(0))%26); i<=ny-1; i=i+1) ...",shape=box];
	ForLoop16706145 -> 16706144;
	ForLoop16706145 -> _JOIN_16706145;
	_JOIN_16706076 [label="_JOIN_16706076None...",shape=box];
	_JOIN_16706076 -> ForLoop16706145;
	16973329 [label="16973329  double scv_1;...",shape=box];
	17063992 [label="17063992  tmp[(it+21)]=scv_25;...",shape=box];
	_JOIN_16971811 [label="_JOIN_16971811None...",shape=box];
	_JOIN_16971811 -> ForLoop16971879;
	_JOIN_16971149 [label="_JOIN_16971149None...",shape=box];
	_JOIN_16971149 -> ForLoop16971882;
	16946622 [label="16946622  int k;...",shape=box];
	16946622 -> ForLoop16970192;
	_JOIN_16946589 [label="_JOIN_16946589None...",shape=box];
	_JOIN_16946589 -> _JOIN_16946590;
	_JOIN_16971072 [label="_JOIN_16971072None...",shape=box];
	_JOIN_16971072 -> ForLoop16971884;
	_JOIN_16971070 [label="_JOIN_16971070None...",shape=box];
	_JOIN_16971070 -> 17063992;
	_JOIN_16971884 [label="_JOIN_16971884None...",shape=box];
	_JOIN_16971884 -> _JOIN_16971886;
	17063974 [label="17063974  double scv_25, scv_26, scv_27, scv_28, scv_29, scv_30, scv_31, scv_32;...",shape=box];
	ForLoop16946589 [label="ForLoop16946589  for (j=jjj; j<=min(ny-1,jjj+511); j=j+1) {...",shape=box];
	ForLoop16946589 -> 16973329;
	ForLoop16946589 -> _JOIN_16946589;
	17069777 [label="17069777  double scv_80;...",shape=box];
	ForLoop16971069 [label="ForLoop16971069  for (kk=kkk; kk<=min(ny-1,kkk+992); kk=kk+32) {...",shape=box];
	ForLoop16971069 -> 16946622;
	ForLoop16971069 -> _JOIN_16971069;
	ForLoop16971149 [label="ForLoop16971149  for (jjj=0; jjj<=ny-1; jjj=jjj+512) {...",shape=box];
	ForLoop16971149 -> ForLoop16971148;
	ForLoop16971149 -> _JOIN_16971149;
	ForLoop16971148 [label="ForLoop16971148  for (j=jjj; j<=min(ny-1,jjj+511); j=j+1) {...",shape=box];
	ForLoop16971148 -> 16971147;
	ForLoop16971148 -> _JOIN_16971148;
	_JOIN_16971886 [label="_JOIN_16971886Noneexpected=9369846271501.798828
actual=9369846271501.798828
...",shape=box];
	_JOIN_16971886 -> _JOIN_16971887;
	_JOIN_16971887 [label="_JOIN_16971887None...",shape=box];
	16971181 [label="16971181  int k;...",shape=box];
	16971181 -> ForLoop16971811;
	16706144 [label="16706144  y[i]=0.0;...",shape=box];
	16706144 -> _JOIN_16706145;
	_JOIN_16971882 [label="_JOIN_16971882None...",shape=box];
	_JOIN_16971882 -> 17069789;
	_JOIN_16971881 [label="_JOIN_16971881None...",shape=box];
	_JOIN_16971881 -> _JOIN_16971882;
	17066949 [label="17066949  double scv_79;...",shape=box];
	ForLoop16970192 [label="ForLoop16970192  for (k=kk; k<=min(ny-1,kk+31)-21; k=k+22) {...",shape=box];
	ForLoop16970192 -> 17006267;
	ForLoop16970192 -> _JOIN_16970192;
	16971147 [label="16971147  scv_80=scv_80+A[i*ny+j]*x[j];...",shape=box];
	16971147 -> _JOIN_16971148;
	_JOIN_16706145 [label="_JOIN_16706145None...",shape=box];
	_JOIN_16706145 -> 16945579;
	ForLoop16971067 [label="ForLoop16971067  for (k=(min(ny-1,kk+31))-(((min(ny-1,kk+31))-(kk)+1)%22)+1; k<=min(ny-1,kk+31); k=k+1) {...",shape=box];
	ForLoop16971067 -> 17009277;
	ForLoop16971067 -> _JOIN_16971067;
	17069789 [label="17069789  tmp[i]=scv_80;...",shape=box];
	17069789 -> _JOIN_16971884;
	16705417 [label="16705417  int i;...",shape=box];
	16705417 -> ForLoop16706076;
	17006267 [label="17006267  double scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8, scv_9;...",shape=box];
	ForLoop16971811 [label="ForLoop16971811  for (k=kk; k<=min(ny-1,kk+31)-21; k=k+22) {...",shape=box];
	ForLoop16971811 -> 17066420;
	ForLoop16971811 -> _JOIN_16971811;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest76.exe __orio_perftest76.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest76.exe  
{'[6, 0, 2, 6, 4, 5, 0, 0, 25, 0, 0, 21, 2, 0, 0, 1, 0, 0]' : 0.203538}
{'[6, 0, 2, 6, 4, 5, 0, 0, 25, 0, 0, 21, 2, 0, 0, 1, 0, 0]' : 0.203608}
{'[6, 0, 2, 6, 4, 5, 0, 0, 25, 0, 0, 21, 2, 0, 0, 1, 0, 0]' : 0.203363}
{'[6, 0, 2, 6, 4, 5, 0, 0, 25, 0, 0, 21, 2, 0, 0, 1, 0, 0]' : 0.209759}
{'[6, 0, 2, 6, 4, 5, 0, 0, 25, 0, 0, 21, 2, 0, 0, 1, 0, 0]' : 0.221056}
{'[6, 0, 2, 6, 4, 5, 0, 0, 25, 0, 0, 21, 2, 0, 0, 1, 0, 0]' : 0.2062}
{'[6, 0, 2, 6, 4, 5, 0, 0, 25, 0, 0, 21, 2, 0, 0, 1, 0, 0]' : 0.203194}
{'[6, 0, 2, 6, 4, 5, 0, 0, 25, 0, 0, 21, 2, 0, 0, 1, 0, 0]' : 0.204457}
{'[6, 0, 2, 6, 4, 5, 0, 0, 25, 0, 0, 21, 2, 0, 0, 1, 0, 0]' : 0.203223}
{'[6, 0, 2, 6, 4, 5, 0, 0, 25, 0, 0, 21, 2, 0, 0, 1, 0, 0]' : 0.203306}
{'[6, 0, 2, 6, 4, 5, 0, 0, 25, 0, 0, 21, 2, 0, 0, 1, 0, 0]' : 0.203353}
{'[6, 0, 2, 6, 4, 5, 0, 0, 25, 0, 0, 21, 2, 0, 0, 1, 0, 0]' : 0.203532}
{'[6, 0, 2, 6, 4, 5, 0, 0, 25, 0, 0, 21, 2, 0, 0, 1, 0, 0]' : 0.203275}
{'[6, 0, 2, 6, 4, 5, 0, 0, 25, 0, 0, 21, 2, 0, 0, 1, 0, 0]' : 0.203611}
{'[6, 0, 2, 6, 4, 5, 0, 0, 25, 0, 0, 21, 2, 0, 0, 1, 0, 0]' : 0.203298}
{'[6, 0, 2, 6, 4, 5, 0, 0, 25, 0, 0, 21, 2, 0, 0, 1, 0, 0]' : 0.203301}
{'[6, 0, 2, 6, 4, 5, 0, 0, 25, 0, 0, 21, 2, 0, 0, 1, 0, 0]' : 0.204476}
{'[6, 0, 2, 6, 4, 5, 0, 0, 25, 0, 0, 21, 2, 0, 0, 1, 0, 0]' : 0.203118}
{'[6, 0, 2, 6, 4, 5, 0, 0, 25, 0, 0, 21, 2, 0, 0, 1, 0, 0]' : 0.204755}
{'[6, 0, 2, 6, 4, 5, 0, 0, 25, 0, 0, 21, 2, 0, 0, 1, 0, 0]' : 0.204274}
{'[6, 0, 2, 6, 4, 5, 0, 0, 25, 0, 0, 21, 2, 0, 0, 1, 0, 0]' : 0.204408}
{'[6, 0, 2, 6, 4, 5, 0, 0, 25, 0, 0, 21, 2, 0, 0, 1, 0, 0]' : 0.204192}
{'[6, 0, 2, 6, 4, 5, 0, 0, 25, 0, 0, 21, 2, 0, 0, 1, 0, 0]' : 0.204969}
{'[6, 0, 2, 6, 4, 5, 0, 0, 25, 0, 0, 21, 2, 0, 0, 1, 0, 0]' : 0.204275}
{'[6, 0, 2, 6, 4, 5, 0, 0, 25, 0, 0, 21, 2, 0, 0, 1, 0, 0]' : 0.204368}
{'[6, 0, 2, 6, 4, 5, 0, 0, 25, 0, 0, 21, 2, 0, 0, 1, 0, 0]' : 0.204807}
{'[6, 0, 2, 6, 4, 5, 0, 0, 25, 0, 0, 21, 2, 0, 0, 1, 0, 0]' : 0.205457}
{'[6, 0, 2, 6, 4, 5, 0, 0, 25, 0, 0, 21, 2, 0, 0, 1, 0, 0]' : 0.203478}
{'[6, 0, 2, 6, 4, 5, 0, 0, 25, 0, 0, 21, 2, 0, 0, 1, 0, 0]' : 0.203243}
{'[6, 0, 2, 6, 4, 5, 0, 0, 25, 0, 0, 21, 2, 0, 0, 1, 0, 0]' : 0.203336}

out:
 ["{'[6, 0, 2, 6, 4, 5, 0, 0, 25, 0, 0, 21, 2, 0, 0, 1, 0, 0]' : 0.203538}", "{'[6, 0, 2, 6, 4, 5, 0, 0, 25, 0, 0, 21, 2, 0, 0, 1, 0, 0]' : 0.203608}", "{'[6, 0, 2, 6, 4, 5, 0, 0, 25, 0, 0, 21, 2, 0, 0, 1, 0, 0]' : 0.203363}", "{'[6WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = kkk
, 0, 2, 6, 4, 5, 0, 0, 25, 0, 0, 21, 2, 0, 0, 1, 0, 0]' : 0.209759}", "{'[6, 0, 2, 6, 4, 5, 0, 0, 25, 0, 0, 21, 2, 0, 0, 1, 0, 0]' : 0.221056}", "{'[6, 0, 2, 6, 4, 5, 0, 0, 25, 0, 0, 21, 2, 0, 0, 1, 0, 0]' : 0.2062}", "{'[6, 0, 2, 6, 4, 5, 0, 0, 25, 0, 0, 21, 2, 0, 0, 1, 0, 0]' : 0.203194}", "{'[6, 0, 2, 6, 4, 5, 0, 0, 25, 0, 0, 21, 2, 0, 0, 1, 0, 0]' : 0.204457}", "{'[6, 0, 2, 6, 4, 5, 0, 0, 25, 0, 0, 21, 2, 0, 0, 1, 0, 0]' : 0.203223}", "{'[6, 0, 2, 6, 4, 5, 0, 0, 25, 0, 0, 21, 2, 0, 0, 1, 0, 0]' : 0.203306}", "{'[6, 0, 2, 6, 4, 5, 0, 0, 25, 0, 0, 21, 2, 0, 0, 1, 0, 0]' : 0.203353}", "{'[6, 0, 2, 6, 4, 5, 0, 0, 25, 0, 0, 21, 2, 0, 0, 1, 0, 0]' : 0.203532}", "{'[6, 0, 2, 6, 4, 5, 0, 0, 25, 0, 0, 21, 2, 0, 0, 1, 0, 0]' : 0.203275}", "{'[6, 0, 2, 6, 4, 5, 0, 0, 25, 0, 0, 21, 2, 0, 0, 1, 0, 0]' : 0.203611}", "{'[6, 0, 2, 6, 4, 5, 0, 0, 25, 0, 0, 21, 2, 0, 0, 1, 0, 0]' : 0.203298}", "{'[6, 0, 2, 6, 4, 5, 0, 0, 25, 0, 0, 21, 2, 0, 0, 1, 0, 0]' : 0.203301}", "{'[6, 0, 2, 6, 4, 5, 0, 0, 25, 0, 0, 21, 2, 0, 0, 1, 0, 0]' : 0.204476}", "{'[6, 0, 2, 6, 4, 5, 0, 0, 25, 0, 0, 21, 2, 0, 0, 1, 0, 0]' : 0.203118}", "{'[6, 0, 2, 6, 4, 5, 0, 0, 25, 0, 0, 21, 2, 0, 0, 1, 0, 0]' : 0.204755}", "{'[6, 0, 2, 6, 4, 5, 0, 0, 25, 0, 0, 21, 2, 0, 0, 1, 0, 0]' : 0.204274}", "{'[6, 0, 2, 6, 4, 5, 0, 0, 25, 0, 0, 21, 2, 0, 0, 1, 0, 0]' : 0.204408}", "{'[6, 0, 2, 6, 4, 5, 0, 0, 25, 0, 0, 21, 2, 0, 0, 1, 0, 0]' : 0.204192}", "{'[6, 0, 2, 6, 4, 5, 0, 0, 25, 0, 0, 21, 2, 0, 0, 1, 0, 0]' : 0.204969}", "{'[6, 0, 2, 6, 4, 5, 0, 0, 25, 0, 0, 21, 2, 0, 0, 1, 0, 0]' : 0.204275}", "{'[6, 0, 2, 6, 4, 5, 0, 0, 25, 0, 0, 21, 2, 0, 0, 1, 0, 0]' : 0.204368}", "{'[6, 0, 2, 6, 4, 5, 0, 0, 25, 0, 0, 21, 2, 0, 0, 1, 0, 0]' : 0.204807}", "{'[6, 0, 2, 6, 4, 5, 0, 0, 25, 0, 0, 21, 2, 0, 0, 1, 0, 0]' : 0.205457}", "{'[6, 0, 2, 6, 4, 5, 0, 0, 25, 0, 0, 21, 2, 0, 0, 1, 0, 0]' : 0.203478}", "{'[6, 0, 2, 6, 4, 5, 0, 0, 25, 0, 0, 21, 2, 0, 0, 1, 0, 0]' : 0.203243}", "{'[6, 0, 2, 6, 4, 5, 0, 0, 25, 0, 0, 21, 2, 0, 0, 1, 0, 0]' : 0.203336}"]
returning from 'run': {'[6, 0, 2, 6, 4, 5, 0, 0, 25, 0, 0, 21, 2, 0, 0, 1, 0, 0]': ([0.203538, 0.203608, 0.203363, 0.209759, 0.221056, 0.2062, 0.203194, 0.204457, 0.203223, 0.203306, 0.203353, 0.203532, 0.203275, 0.203611, 0.203298, 0.203301, 0.204476, 0.203118, 0.204755, 0.204274, 0.204408, 0.204192, 0.204969, 0.204275, 0.204368, 0.204807, 0.205457, 0.203478, 0.203243, 0.203336], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.203538, 0.203608, 0.203363, 0.209759, 0.221056, 0.2062, 0.203194, 0.204457, 0.203223, 0.203306, 0.203353, 0.203532, 0.203275, 0.203611, 0.203298, 0.203301, 0.204476, 0.203118, 0.204755, 0.204274, 0.204408, 0.204192, 0.204969, 0.204275, 0.204368, 0.204807, 0.205457, 0.203478, 0.203243, 0.203336], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 2, 6, 4, 5, 0, 0, 25, 0, 0, 21, 2, 0, 0, 1, 0, 0]': ([0.203538, 0.203608, 0.203363, 0.209759, 0.221056, 0.2062, 0.203194, 0.204457, 0.203223, 0.203306, 0.203353, 0.203532, 0.203275, 0.203611, 0.203298, 0.203301, 0.204476, 0.203118, 0.204755, 0.204274, 0.204408, 0.204192, 0.204969, 0.204275, 0.204368, 0.204807, 0.205457, 0.203478, 0.203243, 0.203336], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [6, 2, 3, 0, 4, 1, 1, 12, 12, 0, 0, 0, 1, 0]
Fixed Factors: {'ACOPY_y': 0, 'U1_I': 25, 'U_J': 0, 'SCR': 1}
Testing candidate 7: [6, 2, 3, 0, 4, 1, 1, 0, 25, 12, 0, 12, 0, 0, 0, 1, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	31
        Max loop nest depth: 	5
        Additions: 		1000
        Multiplications: 	420
        Divisions: 		0
        Logical: 		0
        Reads: 			2089
        Writes: 		415
        Comparisons:		31
        Gotos: 			0
        
digraph CFG {
	ForLoop17147770 [label="ForLoop17147770  for (j=jj; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop17147770 -> 17155026;
	ForLoop17147770 -> _JOIN_17147770;
	ForLoop17147772 [label="ForLoop17147772  for (jj=jjj; jj<=min(ny-1,jjj+480); jj=jj+32) {...",shape=box];
	ForLoop17147772 -> 17146971;
	ForLoop17147772 -> _JOIN_17147772;
	ForLoop17103702 [label="ForLoop17103702  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop17103702 -> 17103701;
	ForLoop17103702 -> _JOIN_17103702;
	ForLoop17147774 [label="ForLoop17147774  for (jjj=0; jjj<=ny-1; jjj=jjj+512) {...",shape=box];
	ForLoop17147774 -> ForLoop17147772;
	ForLoop17147774 -> _JOIN_17147774;
	_JOIN_17154397 [label="_JOIN_17154397None...",shape=box];
	_JOIN_17153931 [label="_JOIN_17153931None...",shape=box];
	_JOIN_17153931 -> ForLoop17154393;
	_JOIN_17103702 [label="_JOIN_17103702None...",shape=box];
	_JOIN_17103702 -> 17146760;
	_JOIN_17154393 [label="_JOIN_17154393None...",shape=box];
	_JOIN_17154393 -> 17178391;
	_JOIN_17154391 [label="_JOIN_17154391None...",shape=box];
	_JOIN_17154391 -> _JOIN_17154393;
	_JOIN_17153930 [label="_JOIN_17153930None...",shape=box];
	_JOIN_17153930 -> _JOIN_17153931;
	_JOIN_17153386 [label="_JOIN_17153386None...",shape=box];
	_JOIN_17153386 -> ForLoop17153767;
	17175475 [label="17175475  tmp[(i+12)]=scv_16;...",shape=box];
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 17102974;
	_JOIN_17154395 [label="_JOIN_17154395None...",shape=box];
	_JOIN_17154395 -> _JOIN_17154397;
	17103701 [label="17103701  y[i]=0.0;...",shape=box];
	17103701 -> _JOIN_17103702;
	17102974 [label="17102974  int i;...",shape=box];
	17146775 [label="17146775  int i;...",shape=box];
	17146775 -> ForLoop17153771;
	_JOIN_17154323 [label="_JOIN_17154323None...",shape=box];
	_JOIN_17154323 -> ForLoop17154391;
	ForLoop17153386 [label="ForLoop17153386  for (k=kk; k<=min(ny-1,kk+63)-12; k=k+13) {...",shape=box];
	ForLoop17153386 -> 17164255;
	ForLoop17153386 -> _JOIN_17153386;
	ForLoop17153931 [label="ForLoop17153931  for (jjj=0; jjj<=ny-1; jjj=jjj+512) {...",shape=box];
	ForLoop17153931 -> ForLoop17153930;
	ForLoop17153931 -> _JOIN_17153931;
	ForLoop17153930 [label="ForLoop17153930  for (jj=jjj; jj<=min(ny-1,jjj+480); jj=jj+32) {...",shape=box];
	ForLoop17153930 -> 17153886;
	ForLoop17153930 -> _JOIN_17153930;
	ForLoop17153771 [label="ForLoop17153771  for (i=ii; i<=min(nx-1,ii+511)-12; i=i+13) {...",shape=box];
	ForLoop17153771 -> 17175457;
	ForLoop17153771 -> _JOIN_17153771;
	ForLoop17103633 [label="ForLoop17103633  for (i=0; i<=cbv_1; i=i+26) {...",shape=box];
	ForLoop17103633 -> 17103406;
	ForLoop17103633 -> _JOIN_17103633;
	17153886 [label="17153886  for (j=jj; j<=min(ny-1,jj+31); j=j+1) ...",shape=box];
	17153886 -> ForLoop17153928;
	_JOIN_17153771 [label="_JOIN_17153771None...",shape=box];
	_JOIN_17153771 -> ForLoop17154395;
	ForLoop17153767 [label="ForLoop17153767  for (k=(min(ny-1,kk+63))-(((min(ny-1,kk+63))-(kk)+1)%13)+1; k<=min(ny-1,kk+63); k=k+1) {...",shape=box];
	ForLoop17153767 -> 17165339;
	ForLoop17153767 -> _JOIN_17153767;
	17175457 [label="17175457  double scv_16, scv_17, scv_18, scv_19, scv_20, scv_21, scv_22, scv_23;...",shape=box];
	_JOIN_17153928 [label="_JOIN_17153928None...",shape=box];
	_JOIN_17153928 -> _JOIN_17153930;
	17155026 [label="17155026  double scv_1;...",shape=box];
	ForLoop17154391 [label="ForLoop17154391  for (k=(min(ny-1,kk+63))-(((min(ny-1,kk+63))-(kk)+1)%13)+1; k<=min(ny-1,kk+63); k=k+1) {...",shape=box];
	ForLoop17154391 -> 17177058;
	ForLoop17154391 -> _JOIN_17154391;
	ForLoop17154395 [label="ForLoop17154395  for (i=(min(nx-1,ii+511))-(((min(nx-1,ii+511))-(ii)+1)%13)+1; i<=min(nx-1,ii+511); i=i+1) {...",shape=box];
	ForLoop17154395 -> 17178379;
	ForLoop17154395 -> _JOIN_17154395;
	17147788 [label="17147788  int k;...",shape=box];
	17177058 [label="17177058  double scv_42;...",shape=box];
	17164255 [label="17164255  double scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8, scv_9;...",shape=box];
	ForLoop17154323 [label="ForLoop17154323  for (k=kk; k<=min(ny-1,kk+63)-12; k=k+13) {...",shape=box];
	ForLoop17154323 -expected=9369846271501.798828
actual=9369846271501.798828
> 17176719;
	ForLoop17154323 -> _JOIN_17154323;
	17103406 [label="17103406  y[i]=0.0;...",shape=box];
	_JOIN_17103633 [label="_JOIN_17103633None...",shape=box];
	_JOIN_17103633 -> 17103977;
	ForLoop17153928 [label="ForLoop17153928  for (j=jj; j<=min(ny-1,jj+31); j=j+1) {...",shape=box];
	ForLoop17153928 -> 17153927;
	ForLoop17153928 -> _JOIN_17153928;
	17153945 [label="17153945  int k;...",shape=box];
	17153945 -> ForLoop17154323;
	17103977 [label="17103977  register int cbv_2, cbv_3;...",shape=box];
	17153927 [label="17153927  scv_43=scv_43+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	17153927 -> _JOIN_17153928;
	17146760 [label="17146760  double x_copy[32];...",shape=box];
	17178391 [label="17178391  tmp[i]=scv_43;...",shape=box];
	17178391 -> _JOIN_17154395;
	17178379 [label="17178379  double scv_43;...",shape=box];
	17165339 [label="17165339  double scv_15;...",shape=box];
	17146971 [label="17146971  for (j=jj; j<=min(ny-1,jj+31); j=j+1) ...",shape=box];
	ForLoop17154393 [label="ForLoop17154393  for (kk=0; kk<=ny-1; kk=kk+64) {...",shape=box];
	ForLoop17154393 -> 17153945;
	ForLoop17154393 -> _JOIN_17154393;
	17176719 [label="17176719  double scv_29, scv_30, scv_31, scv_32, scv_33, scv_34, scv_35, scv_36;...",shape=box];
	ForLoop17154397 [label="ForLoop17154397  for (ii=0; ii<=nx-1; ii=ii+512) {...",shape=box];
	ForLoop17154397 -> 17146775;
	ForLoop17154397 -> _JOIN_17154397;
	_JOIN_17153769 [label="_JOIN_17153769None...",shape=box];
	_JOIN_17153769 -> 17175475;
	_JOIN_17147770 [label="_JOIN_17147770None...",shape=box];
	_JOIN_17147770 -> _JOIN_17147772;
	_JOIN_17153767 [label="_JOIN_17153767None...",shape=box];
	_JOIN_17153767 -> _JOIN_17153769;
	_JOIN_17147772 [label="_JOIN_17147772None...",shape=box];
	_JOIN_17147772 -> _JOIN_17147774;
	ForLoop17153769 [label="ForLoop17153769  for (kk=0; kk<=ny-1; kk=kk+64) {...",shape=box];
	ForLoop17153769 -> 17147788;
	ForLoop17153769 -> _JOIN_17153769;
	_JOIN_17147774 [label="_JOIN_17147774None...",shape=box];
	_JOIN_17147774 -> ForLoop17153769;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest77.exe __orio_perftest77.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest77.exe  
{'[6, 2, 3, 0, 4, 1, 1, 0, 25, 12, 0, 12, 0, 0, 0, 1, 1, 0]' : 0.123203}
{'[6, 2, 3, 0, 4, 1, 1, 0, 25, 12, 0, 12, 0, 0, 0, 1, 1, 0]' : 0.129153}
{'[6, 2, 3, 0, 4, 1, 1, 0, 25, 12, 0, 12, 0, 0, 0, 1, 1, 0]' : 0.123261}
{'[6, 2, 3, 0, 4, 1, 1, 0, 25, 12, 0, 12, 0, 0, 0, 1, 1, 0]' : 0.122995}
{'[6, 2, 3, 0, 4, 1, 1, 0, 25, 12, 0, 12, 0, 0, 0, 1, 1, 0]' : 0.122863}
{'[6, 2, 3, 0, 4, 1, 1, 0, 25, 12, 0, 12, 0, 0, 0, 1, 1, 0]' : 0.12306}
{'[6, 2, 3, 0, 4, 1, 1, 0, 25, 12, 0, 12, 0, 0, 0, 1, 1, 0]' : 0.123011}
{'[6, 2, 3, 0, 4, 1, 1, 0, 25, 12, 0, 12, 0, 0, 0, 1, 1, 0]' : 0.123362}
{'[6, 2, 3, 0, 4, 1, 1, 0, 25, 12, 0, 12, 0, 0, 0, 1, 1, 0]' : 0.123154}
{'[6, 2, 3, 0, 4, 1, 1, 0, 25, 12, 0, 12, 0, 0, 0, 1, 1, 0]' : 0.123132}
{'[6, 2, 3, 0, 4, 1, 1, 0, 25, 12, 0, 12, 0, 0, 0, 1, 1, 0]' : 0.123516}
{'[6, 2, 3, 0, 4, 1, 1, 0, 25, 12, 0, 12, 0, 0, 0, 1, 1, 0]' : 0.12362}
{'[6, 2, 3, 0, 4, 1, 1, 0, 25, 12, 0, 12, 0, 0, 0, 1, 1, 0]' : 0.122969}
{'[6, 2, 3, 0, 4, 1, 1, 0, 25, 12, 0, 12, 0, 0, 0, 1, 1, 0]' : 0.123189}
{'[6, 2, 3, 0, 4, 1, 1, 0, 25, 12, 0, 12, 0, 0, 0, 1, 1, 0]' : 0.12872}
{'[6, 2, 3, 0, 4, 1, 1, 0, 25, 12, 0, 12, 0, 0, 0, 1, 1, 0]' : 0.123077}
{'[6, 2, 3, 0, 4, 1, 1, 0, 25, 12, 0, 12, 0, 0, 0, 1, 1, 0]' : 0.122945}
{'[6, 2, 3, 0, 4, 1, 1, 0, 25, 12, 0, 12, 0, 0, 0, 1, 1, 0]' : 0.123219}
{'[6, 2, 3, 0, 4, 1, 1, 0, 25, 12, 0, 12, 0, 0, 0, 1, 1, 0]' : 0.123565}
{'[6, 2, 3, 0, 4, 1, 1, 0, 25, 12, 0, 12, 0, 0, 0, 1, 1, 0]' : 0.123124}
{'[6, 2, 3, 0, 4, 1, 1, 0, 25, 12, 0, 12, 0, 0, 0, 1, 1, 0]' : 0.123028}
{'[6, 2, 3, 0, 4, 1, 1, 0, 25, 12, 0, 12, 0, 0, 0, 1, 1, 0]' : 0.123034}
{'[6, 2, 3, 0, 4, 1, 1, 0, 25, 12, 0, 12, 0, 0, 0, 1, 1, 0]' : 0.122853}
{'[6, 2, 3, 0, 4, 1, 1, 0, 25, 12, 0, 12, 0, 0, 0, 1, 1, 0]' : 0.122881}
{'[6, 2, 3, 0, 4, 1, 1, 0, 25, 12, 0, 12, 0, 0, 0, 1, 1, 0]' : 0.122975}
{'[6, 2, 3, 0, 4, 1, 1, 0, 25, 12, 0, 12, 0, 0, 0, 1, 1, 0]' : 0.122974}
{'[6, 2, 3, 0, 4, 1, 1, 0, 25, 12, 0, 12, 0, 0, 0, 1, 1, 0]' : 0.128523}
{'[6, 2, 3, 0, 4, 1, 1, 0, 25, 12, 0, 12, 0, 0, 0, 1, 1, 0]' : 0.123625}
{'[6, 2, 3, 0, 4, 1, 1, 0, 25, 12, 0, 12, 0, 0, 0, 1, 1, 0]' : 0.123775}
{'[6, 2, 3, 0, 4, 1, 1, 0, 25, 12, 0, 12, 0, 0, 0, 1, 1, 0]' : 0.123103}

out:
 ["{'[6, 2, 3, 0, 4, 1, 1, 0, 25, 12, 0, 12, 0, 0, 0, 1, 1, 0]' : 0.123203}", "{'[6, 2, 3, 0, 4, 1, 1, 0, 25, 12, 0, 12, 0, 0, 0, 1, 1, 0]' : 0.129153}", "{'[6, 2, 3, 0, 4, 1, 1, 0, 25, 12, 0, 12, 0, 0, 0, 1, 1, 0]' : 0.123261}", "{'[6, 2, 3, 0, 4, 1, 1, 0, 25, 12, 0, 12, 0, 0, 0, 1, 1, 0]' : 0.122995}", "{'[6, 2, 3, 0, 4, 1, 1, 0, 25, 12, 0, 12, 0, 0, 0, 1, 1, 0]' : 0.122863}", "{'[6, 2, 3, 0, 4, 1, 1, 0, 25, 12, 0, 12, 0, 0, 0, 1, 1, 0]' : 0.12306}", "{'[6, 2, 3, 0, 4, 1, 1, 0, 25, 12, 0, 12, 0, 0, 0, 1, 1, 0]' : 0.123011}", "{'[6, 2, 3, 0, 4, 1, 1, 0, 25, 12, 0, 12, 0, 0, 0, 1, 1, 0]' : 0.123362}", "{'[6, 2, 3, 0, 4, 1, 1, 0, 25, 12, 0, 12, 0, 0, 0, 1, 1, 0]' : 0.123154}", "{'[6, 2, 3, 0, 4, 1, 1, 0, 25, 12, 0, 12, 0, 0, 0, 1, 1, 0]' : 0.123132}", "{'[6, 2, 3, 0, 4, 1, 1, 0, 25, 12, 0, 12, 0, 0, 0, 1, 1, 0]' : 0.123516}", "{'[6, 2, 3, 0, 4, 1, 1, 0, 25, 12, 0, 12, 0, 0, 0, 1, 1, 0]' : 0.12362}", "{'[6, 2, 3, 0, 4, 1, 1, 0, 25, 12, 0, 12, 0, 0, 0, 1, 1, 0]' : 0.122969}", "{'[6, 2, 3, 0, 4, 1, 1, 0, 25, 12, 0, 12, 0, 0, 0, 1, 1, 0]' : 0.123189}", "{'[6, 2, 3, 0, 4, 1, 1, 0, 25, 12, 0, 12, 0, 0, 0, 1, 1, 0]' : 0.12872}", "{'[6, 2, 3, 0, 4, 1, 1, 0, 25, 12, 0, 12, 0, 0, 0, 1, 1, 0]' : 0.123077}", "{'[6, 2, 3, 0, 4, 1, 1, 0, 25, 12, 0, 12, 0, 0, 0, 1, 1, 0]' : 0.122945}", "{'[6, 2, 3, 0, 4, 1, 1, 0, 25, 12, 0, 12, 0, 0, 0, 1, 1, 0]' : 0.123219}", "{'[6, 2, 3, 0, 4, 1, 1, 0, 25, 12, 0, 12, 0, 0, 0, 1, 1, 0]' : 0.123565}", "{'[6, 2, 3, 0, 4, 1, 1, 0, 25, 12, 0, 12, 0, 0, 0, 1, 1, 0]' : 0.123124}", "{'[6, 2, 3, 0, 4, 1, 1, 0, 25, 12, 0, 12, 0, 0, 0, 1, 1, 0]' : 0.123028}", "{'[6, 2, 3, 0, 4, 1, 1, 0, 25, 12, 0, 12, 0, 0, 0, 1, 1, 0]' : 0.123034}", "{'[6, 2, 3, 0, 4, 1, 1, 0, 25, 12, 0, 12, 0, 0, 0, 1, 1, 0]' : 0.122853}", "{'[6, 2, 3, 0, 4, 1, 1, 0, 25, 12, 0, 12, 0, 0, 0, 1, 1, 0]' : 0.122881}", "{'[6, 2, 3, 0, 4, 1, 1, 0, 25, 12, 0, 12, 0, 0, 0, 1, 1, 0]' : 0.122975}", "{'[6, 2, 3, 0, 4, 1, 1, 0, 25, 12, 0, 12, 0, 0, 0, 1, 1, 0]' : 0.122974}", "{'[6, 2, 3, 0, 4, 1, 1, 0, 25, 12, 0, 12, 0, 0, 0, 1, 1, 0]' : 0.128523}", "{'[6, 2, 3, 0, 4, 1, 1, 0, 25, 12, 0, 12, 0, 0, 0, 1, 1, 0]' : 0.123625}", "{'[6, 2, 3, 0, 4, 1, 1, 0, 25, 12, 0, 12, 0, 0, 0, 1, 1, 0]' : 0.123775}", "{'[6, 2, 3, 0, 4, 1, 1, 0, 25, 12, 0, 12, 0, 0, 0, 1, 1, 0]' : 0.123103}"]
returning from 'run': {'[6, 2, 3, 0, 4, 1, 1, 0, 25, 12, 0, 12, 0, 0, 0, 1, 1, 0]': ([0.123203, 0.129153, 0.123261, 0.122995, 0.122863, 0.12306, 0.123011, 0.123362, 0.123154, 0.123132, 0.123516, 0.12362, 0.122969, 0.123189, 0.12872, 0.123077, 0.122945, 0.123219, 0.123565, 0.123124, 0.123028, 0.123034, 0.122853, 0.122881, 0.122975, 0.122974, 0.128523, 0.123625, 0.123775, 0.123103], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.123203, 0.129153, 0.123261, 0.122995, 0.122863, 0.12306, 0.123011, 0.123362, 0.123154, 0.123132, 0.123516, 0.12362, 0.122969, 0.123189, 0.12872, 0.123077, 0.122945, 0.123219, 0.123565, 0.123124, 0.123028, 0.123034, 0.122853, 0.122881, 0.122975, 0.122974, 0.128523, 0.123625, 0.123775, 0.123103], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[6, 2, 3, 0, 4, 1, 1, 0, 25, 12, 0, 12, 0, 0, 0, 1, 1, 0]': ([0.123203, 0.129153, 0.123261, 0.122995, 0.122863, 0.12306, 0.123011, 0.123362, 0.123154, 0.123132, 0.123516, 0.12362, 0.122969, 0.123189, 0.12872, 0.123077, 0.122945, 0.123219, 0.123565, 0.123124, 0.123028, 0.123034, 0.122853, 0.122881, 0.122975, 0.122974, 0.128523, 0.123625, 0.123775, 0.123103], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [2, 6, 6, 3, 0, 0, 0, 24, 2, 1, 0, 0, 1, 1]
Fixed Factors: {'ACOPY_y': 0, 'U1_I': 25, 'U_J': 0, 'SCR': 1}
Testing candidate 8: [2, 6, 6, 3, 0, 0, 0, 0, 25, 24, 0, 2, 1, 0, 0, 1, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	5
        Additions: 		763
        Multiplications: 	340
        Divisions: 		0
        Logical: 		0
        Reads: 			1738
        Writes: 		377
        Comparisons:		22
        Gotos: 			0
        
digraph CFG {
	_JOIN_17238185 [label="_JOIN_17238185None...",shape=box];
	_JOIN_17238185 -> 17238186;
	17185061 [label="17185061  register int cbv_2, cbv_3;...",shape=box];
	_JOIN_17238181 [label="_JOIN_17238181None...",shape=box];
	_JOIN_17238181 -> _JOIN_17238183;
	17236845 [label="17236845  double x_copy;...",shape=box];
	17244207 [label="17244207  double scv_2, scv_3, scv_4;...",shape=box];
	17242372 [label="17242372  scv_48=scv_48+A[i*ny+j]*x[j];...",shape=box];
	17242372 -> _JOIN_17242373;
	17258952 [label="17258952  tmp[(i+20)]=scv_19;...",shape=box];
	ForLoop17184786 [label="ForLoop17184786  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop17184786 -> 17184785;
	ForLoop17184786 -> _JOIN_17184786;
	17269443 [label="17269443  register int cbv_1;...",shape=box];
	17238186 [label="17238186  int i;...",shape=box];
	17238186 -> ForLoop17242268;
	_JOIN_17242264 [label="_JOIN_17242264None...",shape=box];
	_JOIN_17242264 -> _JOIN_17242266;
	_JOIN_17242266 [label="_JOIN_17242266None...",shape=box];
	_JOIN_17242266 -> 17258952;
	17259932 [label="17259932  double scv_47;...",shape=box];
	_JOIN_17242373 [label="_JOIN_17242373None...",shape=box];
	_JOIN_17242373 -> _JOIN_17242374;
	17272887 [label="17272887  register int cbv_11, cbv_12;...",shape=box];
	ForLoop17242373 [label="ForLoop17242373  for (j=jj; j<=cbv_9; j=j+1) {...",shape=box];
	ForLoop17242373 -> 17242372;
	ForLoop17242373 -> _JOIN_17242373;
	_JOIN_17237160 [label="_JOIN_17237160None...",shape=box];
	_JOIN_17237160 -> ForLoop17238183;
	_JOIN_17242268 [label="_JOIN_17242268None...",shape=box];
	_JOIN_17242268 -> ForLoop17242558;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 17184058;
	17270653 [label="17270653  register int cbv_5;...",shape=box];
	17237174 [label="17237174  int k;...",shape=box];
	_JOIN_17239177 [label="_JOIN_17239177None...",shape=box];
	_JOIN_17239177 -> _JOIN_17239179;
	17251899 [label="17251899  double scv_15, scv_16, scv_17;...",shape=box];
	17259804 [label="17259804  double scv_44, scv_45, scv_46;...",shape=box];
	_JOIN_17238183 [label="_JOIN_17238183None...",shape=box];
	_JOIN_17238183 -> 17246655;
	17246655 [label="17246655  tmp[it]=scv_6;...",shape=box];
	ForLoop17184717 [label="ForLoop17184717  for (i=0; i<=cbv_1; i=i+26) {...",shape=box];
	ForLoop17184717 -> 17184490;
	ForLoop17184717 -> _JOIN_17184717;
	17260489 [label="17260489  tmp[i]=scv_48;...",shape=box];
	17260489 -> _JOIN_17242558;
	_JOIN_17184786 [label="_JOIN_17184786None...",shape=box];
	_JOIN_17184786 -> 17236845;
	ForLoop17242562 [label="ForLoop17242562  for (iii=0; iii<=nx-1; iii=iii+256) {...",shape=box];
	ForLoop17242562 -> ForLoop17242561;
	ForLoop17242562 -> _JOIN_17242562;
	ForLoop17242561 [label="ForLoop17242561  for (ii=iii; ii<=min(nx-1,iii+224); ii=ii+32) {...",shape=box];
	ForLoop17242561 -> ForLoop17238185;
	ForLoop17242561 -> _JOIN_17242561;
	ForLoop17237160 [label="ForLoop17237160  for (jj=0; jj<=ny-1; jj=jj+512) {...",shape=box];
	ForLoop17237160 -> 17269443;
	ForLoop17237160 -> _JOIN_17237160;
	ForLoop17241571 [label="ForLoop17241571  for (k=kk; k<=cbv_6; k=k+3) {...",shape=box];
	ForLoop17241571 -> 17251899;
	ForLoop17241571 -> _JOIN_17241571;
	ForLoop17239177 [label="ForLoop17239177  for (j=jj; j<=cbv_5; j=j+1) {...",shape=box];
	ForLoop17239177 -> 17247964;
	ForLoop17239177 -> _JOIN_17239177;
	ForLoop17242374 [label="ForLoop17242374  for (jj=0; jj<=ny-1; jj=jj+512) {...",shape=box];
	ForLoop17242374 -> 17272674;
	ForLoop17242374 -> _JOIN_17242374;
	17242388 [label="17242388  int k;...",shape=box];
	_JOIN_17242554 [label="_JOIN_17242554None...",shape=box];
	_JOIN_17242554 -> _JOIN_17242556;
	_JOIN_17241571 [label="_JOIN_17241571None...",shape=box];
	_JOIN_17241571 -> 17272594;
	_JOIN_17184717 [label="_JOIN_17184717None...",shape=box];
	_JOIN_17184717 -> 17185061;
	_JOIN_17242558 [label="_JOIN_17242558None...",shape=box];
	_JOIN_17242558 -> _JOIN_17242561;
	ForLoop17239179 [label="ForLoop17239179  for (jj=0; jj<=ny-1; jj=jj+512) {...",shape=box];
	ForLoop17239179 -> 17270653;
	ForLoop17239179 -> _JOIN_17239179;
	_JOIN_17242562 [label="_JOIN_17242562None...",shape=box];
	_JOIN_17242561 [label="_JOIN_17242561None...",shape=box];
	_JOIN_17242561 -> _JOIN_17242562;
	ForLoop17237930 [label="ForLoop17237930  for (k=kk; k<=cbv_2; k=k+3) {...",shape=box];
	ForLoop17237930 -> 17244207;
	ForLoop17237930 -> _JOIN_17237930;
	17260477 [label="17260477  double scv_48;...",shape=box];
	17184490 [label="17184490  y[i]=0.0;...",shape=box];
	17253036 [label="17253036  double scv_18;...",shape=box];
	17272674 [label="17272674  register int cbv_9;...",shape=box];
	ForLoop17238185 [label="ForLoop17238185  for (it=ii; it<=min(nx-1,ii+31)-7; it=it+8) {...",shape=box];
	ForLoop17238185 -> 17246643;
	ForLoop17238185 -> _JOIN_17238185;
	17184058 [label="17184058  int i;...",shape=box];
	ForLoop17238181 [label="ForLoop17238181  for (k=cbv_3; k<=cbv_4; k=k+1) {...",shape=box];
	ForLoop17238181 -> 17244630;
	ForLoop17238181 -> _JOIN_17238181;
	_JOIN_17242374 [label="_JOIN_17242374None...",shape=box];
	_JOIN_17242374 -> ForLoop17242556;
	ForLoop17238183 [label="ForLoop17238183  for (kk=0; kk<=ny-1; kk=kk+512) {...",shape=box];
	ForLoop17238183 -> 17237174;
	ForLoop17238183 -> _JOIN_17238183;
	_JOIN_17242556 [label="_JOIN_17242556None...",shape=box];
	_JOIN_17242556 -> 17260489;
	ForLoop17242486 [label="ForLoop17242486  for (k=kk; k<=cbv_10; k=k+3) {...",shape=box];
	ForLoop17242486 -> 17259804;
	ForLoop17242486 -> _JOIN_17242486;
	ForLoop17242558 [label="ForLoop17242558  for (i=(min(nx-1,ii+31))-(((min(nx-1,ii+31))-(it)+1)%25)+1; i<=min(nx-1,ii+31); i=i+1) {...",shape=box];
	ForLoop17242558 -> 17260477;
	ForLoop17242558 -> _JOIN_17242558;
	17270160 [label="17270160  register int cbv_3, cbv_4;...",shape=box];
	ForLoop17237159 [label="ForLoop17237159  for (j=jj; j<=cbv_1; j=j+1) {...",shape=box];
	ForLoop17237159 -> 17242924;
	ForLoop17237159 -> _JOIN_17237159;
	17247964 [label="17247964  double scv_14;...",shape=box];
	17272594 [label="17272594  register int cbv_7, cbv_8;...",shape=box];
	ForLoop17242554 [label="ForLoop17242554  for (k=cbv_11; k<=cbv_12; k=k+1) {...",shape=box];
	ForLoop17242554 -> 17259932;
	ForLoop17242554 -> _JOIN_17242554;
	_JOIN_17237159 [label="_JOIN_17237159None...",shape=box];
	_JOIN_17237159 -> _JOIN_17237160;
	17246643 [label="17246643  double scv_6, scv_7, scv_8, scv_9, scv_10, scv_11, scv_12, scv_13;...",shape=box];
	_JOIN_17242486 [label="_JOIN_17242486None...",shape=box];
	_JOIN_17242486 -> 17272887;
	17239193 [label="17239193  int k;...",shape=box];
	_JOIN_17237930 [label="_JOIN_17237930None...",shape=box];
	_JOIN_17237930 -> 17270160;
	ForLoop17242556 [label="ForLoop17242556  for (kk=0; kk<=ny-1; kk=kk+512) {...",shape=box];
	ForLoop17242556 -> 17242388;
	ForLoop17242556 -> _JOIN_17242556;
	ForLoop17242268 [label="ForLoop17242268  for (i=it; i<=min(nx-1,ii+31)-24; i=i+25) {...",shape=box];
	ForLoop17242268 -> 17258934;
	ForLoop17242268 -> _JOIN_17242268;
	_JOIN_17239179 [label="_JOIN_17239179None...",shape=box];
	_JOIN_17239179 -> ForLoop17242266;
	ForLoop17242264 [label="ForLoop17242264  for (k=cbv_7; k<=cbv_8; k=k+1) {...",shape=box];
	ForLoop17242264 -> 17253036;
	ForLoop17242264 -> _JOIN_17242264;
	17184785 [label="17184785  y[i]=0.0;...",shape=box];
	17184785 -> _JOIN_17184786;
	ForLoop17242266 [label="ForLoop17242266  for (kk=0; kk<=ny-1; kk=kk+512) {...",shape=box];
	ForLoop17242266 -> 17239193;
	ForLoop17242266 -> _JOIN_17242266;
	17258934 [label="17258934  double scv_19, scv_20, scv_21, scv_22, scv_23, scv_24, scv_25, scv_26;...",shape=box];
	17244630 [label="17244630  double scv_5;...",shape=box];
	17242924 [label="17242924expected=9369846271501.798828
actual=9369846271501.798828
  double scv_1;...",shape=box];

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest78.exe __orio_perftest78.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest78.exe  
{'[2, 6, 6, 3, 0, 0, 0, 0, 25, 24, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.080617}
{'[2, 6, 6, 3, 0, 0, 0, 0, 25, 24, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.0803628}
{'[2, 6, 6, 3, 0, 0, 0, 0, 25, 24, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.0802181}
{'[2, 6, 6, 3, 0, 0, 0, 0, 25, 24, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.080512}
{'[2, 6, 6, 3, 0, 0, 0, 0, 25, 24, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.0802681}
{'[2, 6, 6, 3, 0, 0, 0, 0, 25, 24, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.0802588}
{'[2, 6, 6, 3, 0, 0, 0, 0, 25, 24, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.080611}
{'[2, 6, 6, 3, 0, 0, 0, 0, 25, 24, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.080281}
{'[2, 6, 6, 3, 0, 0, 0, 0, 25, 24, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.080327}
{'[2, 6, 6, 3, 0, 0, 0, 0, 25, 24, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.080399}
{'[2, 6, 6, 3, 0, 0, 0, 0, 25, 24, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.0805871}
{'[2, 6, 6, 3, 0, 0, 0, 0, 25, 24, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.0807071}
{'[2, 6, 6, 3, 0, 0, 0, 0, 25, 24, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.0805881}
{'[2, 6, 6, 3, 0, 0, 0, 0, 25, 24, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.0807021}
{'[2, 6, 6, 3, 0, 0, 0, 0, 25, 24, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.080653}
{'[2, 6, 6, 3, 0, 0, 0, 0, 25, 24, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.0806401}
{'[2, 6, 6, 3, 0, 0, 0, 0, 25, 24, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.080924}
{'[2, 6, 6, 3, 0, 0, 0, 0, 25, 24, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.0806339}
{'[2, 6, 6, 3, 0, 0, 0, 0, 25, 24, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.080723}
{'[2, 6, 6, 3, 0, 0, 0, 0, 25, 24, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.0806792}
{'[2, 6, 6, 3, 0, 0, 0, 0, 25, 24, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.080642}
{'[2, 6, 6, 3, 0, 0, 0, 0, 25, 24, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.0807211}
{'[2, 6, 6, 3, 0, 0, 0, 0, 25, 24, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.0807481}
{'[2, 6, 6, 3, 0, 0, 0, 0, 25, 24, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.0807981}
{'[2, 6, 6, 3, 0, 0, 0, 0, 25, 24, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.080657}
{'[2, 6, 6, 3, 0, 0, 0, 0, 25, 24, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.080914}
{'[2, 6, 6, 3, 0, 0, 0, 0, 25, 24, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.080801}
{'[2, 6, 6, 3, 0, 0, 0, 0, 25, 24, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.080646}
{'[2, 6, 6, 3, 0, 0, 0, 0, 25, 24, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.080894}
{'[2, 6, 6, 3, 0, 0, 0, 0, 25, 24, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.0806122}

out:
 ["{'[2, 6, 6, 3, 0, 0, 0, 0, 25, 24, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.080617}", "{'[2, 6, 6, 3, 0, 0, 0, 0, 25, 24, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.0803628}", "{'[2, 6, 6, 3, 0, 0, 0, 0, 25, 24, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.0802181}", "{'[2, 6, 6, 3, 0, 0, 0, 0, 25, 24, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.080512}", "{'[2, 6, 6, 3, 0, 0, 0, 0, 25, 24, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.0802681}", "{'[2, 6, 6, 3, 0, 0, 0, 0, 25, 24, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.0802588}", "{'[2, 6, 6, 3, 0, 0, 0, 0, 25, 24, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.080611}", "{'[2, 6, 6, 3, 0, 0, 0, 0, 25, 24, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.080281}", "{'[2, 6, 6, 3, 0, 0, 0, 0, 25, 24, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.080327}", "{'[2, 6, 6, 3, 0, 0, 0, 0, 25, 24, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.080399}", "{'[2, 6, 6, 3, 0, 0, 0, 0, 25, 24, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.0805871}", "{'[2, 6, 6, 3, 0, 0, 0, 0, 25, 24, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.0807071}", "{'[2, 6, 6, 3, 0, 0, 0, 0, 25, 24, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.0805881}", "{'[2, 6, 6, 3, 0, 0, 0, 0, 25, 24, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.0807021}", "{'[2, 6, 6, 3, 0, 0, 0, 0, 25, 24, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.080653}", "{'[2, 6, 6, 3, 0, 0, 0, 0, 25, 24, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.0806401}", "{'[2, 6, 6, 3, 0, 0, 0, 0, 25, 24, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.080924}", "{'[2, 6, 6, 3, 0, 0, 0, 0, 25, 24, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.0806339}", "{'[2, 6, 6, 3, 0, 0, 0, 0, 25, 24, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.080723}", "{'[2, 6, 6, 3, 0, 0, 0, 0, 25, 24, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.0806792}", "{'[2, 6, 6, 3, 0, 0, 0, 0, 25, 24, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.080642}", "{'[2, 6, 6, 3, 0, 0, 0, 0, 25, 24, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.0807211}", "{'[2, 6, 6, 3, 0, 0, 0, 0, 25, 24, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.0807481}", "{'[2, 6, 6, 3, 0, 0, 0, 0, 25, 24, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.0807981}", "{'[2, 6, 6, 3, 0, 0, 0, 0, 25, 24, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.080657}", "{'[2, 6, 6, 3, 0, 0, 0, 0, 25, 24, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.080914}", "{'[2, 6, 6, 3, 0, 0, 0, 0, 25, 24, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.080801}", "{'[2, 6, 6, 3, 0, 0, 0, 0, 25, 24, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.080646}", "{'[2, 6, 6, 3, 0, 0, 0, 0, 25, 24, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.080894}", "{'[2, 6, 6, 3, 0, 0, 0, 0, 25, 24, 0, 2, 1, 0, 0, 1, 1, 1]' : 0.0806122}"]
returning from 'run': {'[2, 6, 6, 3, 0, 0, 0, 0, 25, 24, 0, 2, 1, 0, 0, 1, 1, 1]': ([0.080617, 0.0803628, 0.0802181, 0.080512, 0.0802681, 0.0802588, 0.080611, 0.080281, 0.080327, 0.080399, 0.0805871, 0.0807071, 0.0805881, 0.0807021, 0.080653, 0.0806401, 0.080924, 0.0806339, 0.080723, 0.0806792, 0.080642, 0.0807211, 0.0807481, 0.0807981, 0.080657, 0.080914, 0.080801, 0.080646, 0.080894, 0.0806122], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.080617, 0.0803628, 0.0802181, 0.080512, 0.0802681, 0.0802588, 0.080611, 0.080281, 0.080327, 0.080399, 0.0805871, 0.0807071, 0.0805881, 0.0807021, 0.080653, 0.0806401, 0.080924, 0.0806339, 0.080723, 0.0806792, 0.080642, 0.0807211, 0.0807481, 0.0807981, 0.080657, 0.080914, 0.080801, 0.080646, 0.080894, 0.0806122], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[2, 6, 6, 3, 0, 0, 0, 0, 25, 24, 0, 2, 1, 0, 0, 1, 1, 1]': ([0.080617, 0.0803628, 0.0802181, 0.080512, 0.0802681, 0.0802588, 0.080611, 0.080281, 0.080327, 0.080399, 0.0805871, 0.0807071, 0.0805881, 0.0807021, 0.080653, 0.0806401, 0.080924, 0.0806339, 0.080723, 0.0806792, 0.080642, 0.0807211, 0.0807481, 0.0807981, 0.080657, 0.080914, 0.080801, 0.080646, 0.080894, 0.0806122], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [5, 6, 2, 6, 6, 2, 1, 8, 5, 0, 2, 0, 0, 0]
Fixed Factors: {'ACOPY_y': 0, 'U1_I': 25, 'U_J': 0, 'SCR': 1}
Testing candidate 9: [5, 6, 2, 6, 6, 2, 1, 0, 25, 8, 0, 5, 0, 2, 0, 1, 0, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	30
        Max loop nest depth: 	6
        Additions: 		1767
        Multiplications: 	780
        Divisions: 		0
        Logical: 		0
        Reads: 			3390
        Writes: 		577
        Comparisons:		30
        Gotos: 			0
        
digraph CFG {
	17273185 [label="17273185  int i;...",shape=box];
	17273185 -> ForLoop17273844;
	_JOIN_17393841 [label="_JOIN_17393841None...",shape=box];
	_JOIN_17393841 -> _JOIN_17393842;
	_JOIN_17394056 [label="_JOIN_17394056None...",shape=box];
	_JOIN_17394056 -> ForLoop17394124;
	_JOIN_17394132 [label="_JOIN_17394132None...",shape=box];
	_JOIN_17393842 [label="_JOIN_17393842None...",shape=box];
	_JOIN_17393842 -> ForLoop17394127;
	17380229 [label="17380229  int i;...",shape=box];
	17380229 -> ForLoop17392780;
	ForLoop17392774 [label="ForLoop17392774  for (k=(min(ny-1,kk+31))-(((min(ny-1,kk+31))-(kk)+1)%6)+1; k<=min(ny-1,kk+31); k=k+1) {...",shape=box];
	ForLoop17392774 -> 17428917;
	ForLoop17392774 -> _JOIN_17392774;
	17273617 [label="17273617  y[i]=0.0;...",shape=box];
	_JOIN_17392776 [label="_JOIN_17392776None...",shape=box];
	_JOIN_17392776 -> _JOIN_17392778;
	ForLoop17394131 [label="ForLoop17394131  for (ii=iii; ii<=min(nx-1,iii+1792); ii=ii+256) {...",shape=box];
	ForLoop17394131 -> 17380229;
	ForLoop17394131 -> _JOIN_17394131;
	ForLoop17394132 [label="ForLoop17394132  for (iii=0; iii<=nx-1; iii=iii+2048) {...",shape=box];
	ForLoop17394132 -> ForLoop17394131;
	ForLoop17394132 -> _JOIN_17394132;
	ForLoop17392778 [label="ForLoop17392778  for (kkk=0; kkk<=ny-1; kkk=kkk+128) {...",shape=box];
	ForLoop17392778 -> ForLoop17392776;
	ForLoop17392778 -> _JOIN_17392778;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 17273185;
	_JOIN_17394131 [label="_JOIN_17394131None...",shape=box];
	_JOIN_17394131 -> _JOIN_17394132;
	_JOIN_17392497 [label="_JOIN_17392497None...",shape=box];
	_JOIN_17392497 -> ForLoop17392774;
	_JOIN_17273844 [label="_JOIN_17273844None...",shape=box];
	_JOIN_17273844 -> ForLoop17273913;
	17407839 [label="17407839  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	17380389 [label="17380389  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	_JOIN_17392778 [label="_JOIN_17392778None...",shape=box];
	_JOIN_17392778 -> 17442759;
	ForLoop17273844 [label="ForLoop17273844  for (i=0; i<=ny-26; i=i+26) {...",shape=box];
	ForLoop17273844 -> 17273617;
	ForLoop17273844 -> _JOIN_17273844;
	_JOIN_17273913 [label="_JOIN_17273913None...",shape=box];
	_JOIN_17273913 -> 17380196;
	ForLoop17392497 [label="ForLoop17392497  for (k=kk; k<=min(ny-1,kk+31)-5; k=k+6) {...",shape=box];
	ForLoop17392497 -> 17428341;
	ForLoop17392497 -> _JOIN_17392497;
	ForLoop17394126 [label="ForLoop17394126  for (kk=kkk; kk<=min(ny-1,kkk+96); kk=kk+32) {...",shape=box];
	ForLoop17394126 -> 17393874;
	ForLoop17394126 -> _JOIN_17394126;
	17428341 [label="17428341  double scv_33, scv_34, scv_35, scv_36, scv_37, scv_38;...",shape=box];
	17393874 [label="17393874  int k;...",shape=box];
	17393874 -> ForLoop17394056;
	ForLoop17390707 [label="ForLoop17390707  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop17390707 -> ForLoop17390705;
	ForLoop17390707 -> _JOIN_17390707;
	ForLoop17393839 [label="ForLoop17393839  for (jt=jj; jt<=min(ny-1,jj+511)-31; jt=jt+32) {...",shape=box];
	ForLoop17393839 -> 17392938;
	ForLoop17393839 -> _JOIN_17393839;
	ForLoop17390705 [label="ForLoop17390705  for (jj=jjj; jj<=min(ny-1,jjj+1536); jj=jj+512) {...",shape=box];
	ForLoop17390705 -> 17380389;
	ForLoop17390705 -> _JOIN_17390705;
	ForLoop17390703 [label="ForLoop17390703  for (jt=jj; jt<=min(ny-1,jj+511)-31; jt=jt+32) {...",shape=box];
	ForLoop17390703 -> 17407839;
	ForLoop17390703 -> _JOIN_17390703;
	_JOIN_17393839 [label="_JOIN_17393839None...",shape=box];
	_JOIN_17393839 -> _JOIN_17393841;
	17442759 [label="17442759  tmp[(i+1)]=scv_40;...",shape=box];
	17392895 [label="17392895  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	17392895 -> ForLoop17393839;
	_JOIN_17394127 [label="_JOIN_17394127None...",shape=box];
	_JOIN_17394127 -> 17449626;
	_JOIN_17394126 [label="_JOIN_17394126None...",shape=box];
	_JOIN_17394126 -> _JOIN_17394127;
	_JOIN_17394124 [label="_JOIN_17394124None...",shape=box];
	_JOIN_17394124 -> _JOIN_17394126;
	_JOIN_17390703 [label="_JOIN_17390703None...",shape=box];
	_JOIN_17390703 -> _JOIN_17390705;
	17380196 [label="17380196  double x_copy[512];...",shape=box];
	_JOIN_17394129 [label="_JOIN_17394129None...",shape=box];
	_JOIN_17394129 -> _JOIN_17394131;
	_JOIN_17390707 [label="_JOIN_17390707None...",shape=box];
	_JOIN_17390707 -> ForLoop17392778;
	_JOIN_17390705 [label="_JOIN_17390705None...",shape=box];
	_JOIN_17390705 -> _JOIN_17390707;
	ForLoop17394129 [label="ForLoop17394129  for (i=(min(nx-1,ii+255))-(((min(nx-1,ii+255))-(ii)+1)%9)+1; i<=min(nx-1,ii+255); i=i+1) {...",shape=box];
	ForLoop17394129 -> 17449614;
	ForLoop17394129 -> _JOIN_17394129;
	ForLoop17394127 [label="ForLoop17394127  for (kkk=0; kkk<=ny-1; kkk=kkk+128) {...",shape=box];
	ForLoop17394127 -> ForLoop17394126;
	ForLoop17394127 -> _JOIN_17394127;
	ForLoop17392780 [label="ForLoop17392780  for (i=ii; i<=min(nx-1,ii+255)-8; i=i+9) {...",shape=box];
	ForLoop17392780 -> 17442741;
	ForLoop17392780 -> _JOIN_17392780;
	ForLoop17394124 [label="ForLoop17394124  for (k=(min(ny-1,kk+31))-(((min(ny-1,kk+31))-(kk)+1)%6)+1; k<=min(ny-1,kk+31); k=k+1) {...",shape=box];
	ForLoop17394124 -> 17447536;
	ForLoop17394124 -> _JOIN_17394124;
	17273912 [label="17273912  y[i]=0.0;...",shape=box];
	17273912 -> _JOIN_17273913;
	_JOIN_17392774 [label="_JOIN_17392774None...",shape=box];
	_JOIN_17392774 -> _JOIN_17392776;
	ForLoop17393842 [label="ForLoop17393842  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop17393842 -> ForLoop17393expected=0.000000
actual=9369846271501.798828
841;
	ForLoop17393842 -> _JOIN_17393842;
	ForLoop17394056 [label="ForLoop17394056  for (k=kk; k<=min(ny-1,kk+31)-5; k=k+6) {...",shape=box];
	ForLoop17394056 -> 17447345;
	ForLoop17394056 -> _JOIN_17394056;
	17442741 [label="17442741  double scv_40, scv_41, scv_42, scv_43, scv_44, scv_45, scv_46, scv_47;...",shape=box];
	17447536 [label="17447536  double scv_55;...",shape=box];
	ForLoop17392776 [label="ForLoop17392776  for (kk=kkk; kk<=min(ny-1,kkk+96); kk=kk+32) {...",shape=box];
	ForLoop17392776 -> 17390739;
	ForLoop17392776 -> _JOIN_17392776;
	17449626 [label="17449626  tmp[i]=scv_56;...",shape=box];
	17449626 -> _JOIN_17394129;
	17447345 [label="17447345  double scv_49, scv_50, scv_51, scv_52, scv_53, scv_54;...",shape=box];
	ForLoop17393841 [label="ForLoop17393841  for (jj=jjj; jj<=min(ny-1,jjj+1536); jj=jj+512) {...",shape=box];
	ForLoop17393841 -> 17392895;
	ForLoop17393841 -> _JOIN_17393841;
	ForLoop17273913 [label="ForLoop17273913  for (i=ny-((ny-(0))%26); i<=ny-1; i=i+1) ...",shape=box];
	ForLoop17273913 -> 17273912;
	ForLoop17273913 -> _JOIN_17273913;
	17449614 [label="17449614  double scv_56;...",shape=box];
	17428917 [label="17428917  double scv_39;...",shape=box];
	_JOIN_17392780 [label="_JOIN_17392780None...",shape=box];
	_JOIN_17392780 -> ForLoop17394129;
	17392938 [label="17392938  scv_56=scv_56+A[i*ny+jt]*x_copy[(jt-jj)];...",shape=box];
	17390739 [label="17390739  int k;...",shape=box];

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest79.exe __orio_perftest79.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest79.exe  
{'[5, 6, 2, 6, 6, 2, 1, 0, 25, 8, 0, 5, 0, 2, 0, 1, 0, 0]' : 0.103922}
{'[5, 6, 2, 6, 6, 2, 1, 0, 25, 8, 0, 5, 0, 2, 0, 1, 0, 0]' : 0.103704}
{'[5, 6, 2, 6, 6, 2, 1, 0, 25, 8, 0, 5, 0, 2, 0, 1, 0, 0]' : 0.103596}
{'[5, 6, 2, 6, 6, 2, 1, 0, 25, 8, 0, 5, 0, 2, 0, 1, 0, 0]' : 0.103879}
{'[5, 6, 2, 6, 6, 2, 1, 0, 25, 8, 0, 5, 0, 2, 0, 1, 0, 0]' : 0.103539}
{'[5, 6, 2, 6, 6, 2, 1, 0, 25, 8, 0, 5, 0, 2, 0, 1, 0, 0]' : 0.103721}
{'[5, 6, 2, 6, 6, 2, 1, 0, 25, 8, 0, 5, 0, 2, 0, 1, 0, 0]' : 0.103979}
{'[5, 6, 2, 6, 6, 2, 1, 0, 25, 8, 0, 5, 0, 2, 0, 1, 0, 0]' : 0.103741}
{'[5, 6, 2, 6, 6, 2, 1, 0, 25, 8, 0, 5, 0, 2, 0, 1, 0, 0]' : 0.103808}
{'[5, 6, 2, 6, 6, 2, 1, 0, 25, 8, 0, 5, 0, 2, 0, 1, 0, 0]' : 0.103795}
{'[5, 6, 2, 6, 6, 2, 1, 0, 25, 8, 0, 5, 0, 2, 0, 1, 0, 0]' : 0.103597}
{'[5, 6, 2, 6, 6, 2, 1, 0, 25, 8, 0, 5, 0, 2, 0, 1, 0, 0]' : 0.103668}
{'[5, 6, 2, 6, 6, 2, 1, 0, 25, 8, 0, 5, 0, 2, 0, 1, 0, 0]' : 0.103721}
{'[5, 6, 2, 6, 6, 2, 1, 0, 25, 8, 0, 5, 0, 2, 0, 1, 0, 0]' : 0.103842}
{'[5, 6, 2, 6, 6, 2, 1, 0, 25, 8, 0, 5, 0, 2, 0, 1, 0, 0]' : 0.103593}
{'[5, 6, 2, 6, 6, 2, 1, 0, 25, 8, 0, 5, 0, 2, 0, 1, 0, 0]' : 0.103709}
{'[5, 6, 2, 6, 6, 2, 1, 0, 25, 8, 0, 5, 0, 2, 0, 1, 0, 0]' : 0.10362}
{'[5, 6, 2, 6, 6, 2, 1, 0, 25, 8, 0, 5, 0, 2, 0, 1, 0, 0]' : 0.10377}
{'[5, 6, 2, 6, 6, 2, 1, 0, 25, 8, 0, 5, 0, 2, 0, 1, 0, 0]' : 0.103666}
{'[5, 6, 2, 6, 6, 2, 1, 0, 25, 8, 0, 5, 0, 2, 0, 1, 0, 0]' : 0.103739}
{'[5, 6, 2, 6, 6, 2, 1, 0, 25, 8, 0, 5, 0, 2, 0, 1, 0, 0]' : 0.103633}
{'[5, 6, 2, 6, 6, 2, 1, 0, 25, 8, 0, 5, 0, 2, 0, 1, 0, 0]' : 0.103937}
{'[5, 6, 2, 6, 6, 2, 1, 0, 25, 8, 0, 5, 0, 2, 0, 1, 0, 0]' : 0.103594}
{'[5, 6, 2, 6, 6, 2, 1, 0, 25, 8, 0, 5, 0, 2, 0, 1, 0, 0]' : 0.103827}
{'[5, 6, 2, 6, 6, 2, 1, 0, 25, 8, 0, 5, 0, 2, 0, 1, 0, 0]' : 0.103619}
{'[5, 6, 2, 6, 6, 2, 1, 0, 25, 8, 0, 5, 0, 2, 0, 1, 0, 0]' : 0.103859}
{'[5, 6, 2, 6, 6, 2, 1, 0, 25, 8, 0, 5, 0, 2, 0, 1, 0, 0]' : 0.103695}
{'[5, 6, 2, 6, 6, 2, 1, 0, 25, 8, 0, 5, 0, 2, 0, 1, 0, 0]' : 0.103547}
{'[5, 6, 2, 6, 6, 2, 1, 0, 25, 8, 0, 5, 0, 2, 0, 1, 0, 0]' : 0.103735}
{'[5, 6, 2, 6, 6, 2, 1, 0, 25, 8, 0, 5, 0, 2, 0, 1, 0, 0]' : 0.103569}

out:
 ["{'[5, 6, 2, 6, 6, 2, 1, 0, 25, 8, 0, 5, 0, 2, 0, 1, 0, 0]' : 0.103922}", "{'[5, 6, 2, 6, 6, 2, 1, 0, 25, 8, 0, 5, 0, 2, 0, 1, 0, 0]' : 0.103704}", "{'[5, 6, 2, 6, 6, 2, 1, 0, 25, 8, 0, 5, 0, 2, 0, 1, 0, 0]' : 0.103596}", "{'[5, 6, 2, 6, 6, 2, 1, 0, 25, 8, 0, 5, 0, 2, 0, 1, 0, 0]' : 0.103879}", "{'[5, 6, 2, 6, 6, 2, 1, 0, 25, 8, 0, 5, 0, 2, 0, 1, 0, 0]' : 0.103539}", "{'[5, 6, 2, 6, 6, 2, 1, 0, 25, 8, 0, 5, 0, 2, 0, 1, 0, 0]' : 0.103721}", "{'[5, 6, 2, 6, 6, 2, 1, 0, 25, 8, 0, 5, 0, 2, 0, 1, 0, 0]' : 0.103979}", "{'[5, 6, 2, 6, 6, 2, 1, 0, 25, 8, 0, 5, 0, 2, 0, 1, 0, 0]' : 0.103741}", "{'[5, 6, 2, 6, 6, 2, 1, 0, 25, 8, 0, 5, 0, 2, 0, 1, 0, 0]' : 0.103808}", "{'[5, 6, 2, 6, 6, 2, 1, 0, 25, 8, 0, 5, 0, 2, 0, 1, 0, 0]' : 0.103795}", "{'[5, 6, 2, 6, 6, 2, 1, 0, 25, 8, 0, 5, 0, 2, 0, 1, 0, 0]' : 0.103597}", "{'[5, 6, 2, 6, 6, 2, 1, 0, 25, 8, 0, 5, 0, 2, 0, 1, 0, 0]' : 0.103668}", "{'[5, 6, 2, 6, 6, 2, 1, 0, 25, 8, 0, 5, 0, 2, 0, 1, 0, 0]' : 0.103721}", "{'[5, 6, 2, 6, 6, 2, 1, 0, 25, 8, 0, 5, 0, 2, 0, 1, 0, 0]' : 0.103842}", "{'[5, 6, 2, 6, 6, 2, 1, 0, 25, 8, 0, 5, 0, 2, 0, 1, 0, 0]' : 0.103593}", "{'[5, 6, 2, 6, 6, 2, 1, 0, 25, 8, 0, 5, 0, 2, 0, 1, 0, 0]' : 0.103709}", "{'[5, 6, 2, 6, 6, 2, 1, 0, 25, 8, 0, 5, 0, 2, 0, 1, 0, 0]' : 0.10362}", "{'[5, 6, 2, 6, 6, 2, 1, 0, 25, 8, 0, 5, 0, 2, 0, 1, 0, 0]' : 0.10377}", "{'[5, 6, 2, 6, 6, 2, 1, 0, 25, 8, 0, 5, 0, 2, 0, 1, 0, 0]' : 0.103666}", "{'[5, 6, 2, 6, 6, 2, 1, 0, 25, 8, 0, 5, 0, 2, 0, 1, 0, 0]' : 0.103739}", "{'[5, 6, 2, 6, 6, 2, 1, 0, 25, 8, 0, 5, 0, 2, 0, 1, 0, 0]' : 0.103633}", "{'[5, 6, 2, 6, 6, 2, 1, 0, 25, 8, 0, 5, 0, 2, 0, 1, 0, 0]' : 0.103937}", "{'[5, 6, 2, 6, 6, 2, 1, 0, 25, 8, 0, 5, 0, 2, 0, 1, 0, 0]' : 0.103594}", "{'[5, 6, 2, 6, 6, 2, 1, 0, 25, 8, 0, 5, 0, 2, 0, 1, 0, 0]' : 0.103827}", "{'[5, 6, 2, 6, 6, 2, 1, 0, 25, 8, 0, 5, 0, 2, 0, 1, 0, 0]' : 0.103619}", "{'[5, 6, 2, 6, 6, 2, 1, 0, 25, 8, 0, 5, 0, 2, 0, 1, 0, 0]' : 0.103859}", "{'[5, 6, 2, 6, 6, 2, 1, 0, 25, 8, 0, 5, 0, 2, 0, 1, 0, 0]' : 0.103695}", "{'[5, 6, 2, 6, 6, 2, 1, 0, 25, 8, 0, 5, 0, 2, 0, 1, 0, 0]' : 0.103547}", "{'[5, 6, 2, 6, 6, 2, 1, 0, 25, 8, 0, 5, 0, 2, 0, 1, 0, 0]' : 0.103735}", "{'[5, 6, 2, 6, 6, 2, 1, 0, 25, 8, 0, 5, 0, 2, 0, 1, 0, 0]' : 0.103569}"]
returning from 'run': {'[5, 6, 2, 6, 6, 2, 1, 0, 25, 8, 0, 5, 0, 2, 0, 1, 0, 0]': ([0.103922, 0.103704, 0.103596, 0.103879, 0.103539, 0.103721, 0.103979, 0.103741, 0.103808, 0.103795, 0.103597, 0.103668, 0.103721, 0.103842, 0.103593, 0.103709, 0.10362, 0.10377, 0.103666, 0.103739, 0.103633, 0.103937, 0.103594, 0.103827, 0.103619, 0.103859, 0.103695, 0.103547, 0.103735, 0.103569], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.103922, 0.103704, 0.103596, 0.103879, 0.103539, 0.103721, 0.103979, 0.103741, 0.103808, 0.103795, 0.103597, 0.103668, 0.103721, 0.103842, 0.103593, 0.103709, 0.10362, 0.10377, 0.103666, 0.103739, 0.103633, 0.103937, 0.103594, 0.103827, 0.103619, 0.103859, 0.103695, 0.103547, 0.103735, 0.103569], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[5, 6, 2, 6, 6, 2, 1, 0, 25, 8, 0, 5, 0, 2, 0, 1, 0, 0]': ([0.103922, 0.103704, 0.103596, 0.103879, 0.103539, 0.103721, 0.103979, 0.103741, 0.103808, 0.103795, 0.103597, 0.103668, 0.103721, 0.103842, 0.103593, 0.103709, 0.10362, 0.10377, 0.103666, 0.103739, 0.103633, 0.103937, 0.103594, 0.103827, 0.103619, 0.103859, 0.103695, 0.103547, 0.103735, 0.103569], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [5, 1, 4, 0, 5, 5, 0, 14, 0, 0, 0, 2, 1, 0]
Fixed Factors: {'ACOPY_y': 0, 'U1_I': 25, 'U_J': 0, 'SCR': 1}
Testing candidate 10: [5, 1, 4, 0, 5, 5, 0, 0, 25, 14, 0, 0, 0, 0, 2, 1, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	5
        Additions: 		2302
        Multiplications: 	1088
        Divisions: 		0
        Logical: 		0
        Reads: 			4505
        Writes: 		793
        Comparisons:		19
        Gotos: 			0
        
digraph CFG {
	ForLoop17468459 [label="ForLoop17468459  for (i=0; i<=cbv_1; i=i+26) {...",shape=box];
	ForLoop17468459 -> 17468232;
	ForLoop17468459 -> _JOIN_17468459;
	ForLoop17586553 [label="ForLoop17586553  for (kk=kkk; kk<=min(ny-1,kkk+896); kk=kk+128) {...",shape=box];
	ForLoop17586553 -> ForLoop17586512;
	ForLoop17586553 -> _JOIN_17586553;
	ForLoop17586551 [label="ForLoop17586551  for (k=kt; k<=min(ny-1,kk+127); k=k+1) {...",shape=box];
	ForLoop17586551 -> 17652710;
	ForLoop17586551 -> _JOIN_17586551;
	ForLoop17586556 [label="ForLoop17586556  for (i=(min(nx-1,ii+255))-(((min(nx-1,ii+255))-(ii)+1)%15)+1; i<=min(nx-1,ii+255); i=i+1) {...",shape=box];
	ForLoop17586556 -> 17656673;
	ForLoop17586556 -> _JOIN_17586556;
	ForLoop17586554 [label="ForLoop17586554  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop17586554 -> ForLoop17586553;
	ForLoop17586554 -> _JOIN_17586554;
	ForLoop17585005 [label="ForLoop17585005  for (kt=kk; kt<=min(ny-1,kk+127)-31; kt=kt+32) {...",shape=box];
	ForLoop17585005 -> 17609988;
	ForLoop17585005 -> _JOIN_17585005;
	ForLoop17586558 [label="ForLoop17586558  for (ii=0; ii<=nx-1; ii=ii+256) {...",shape=box];
	ForLoop17586558 -> 17568311;
	ForLoop17586558 -> _JOIN_17586558;
	ForLoop17586512 [label="ForLoop17586512  for (kt=kk; kt<=min(ny-1,kk+127)-31; kt=kt+32) {...",shape=box];
	ForLoop17586512 -> 17651999;
	ForLoop17586512 -> _JOIN_17586512;
	17656685 [label="17656685  tmp[i]=scv_83;...",shape=box];
	17656685 -> _JOIN_17586556;
	_JOIN_17585005 [label="_JOIN_17585005None...",shape=box];
	_JOIN_17585005 -> ForLoop17585409;
	_JOIN_17586558 [label="_JOIN_17586558None...",shape=box];
	_JOIN_17585415 [label="_JOIN_17585415None...",shape=box];
	_JOIN_17585415 -> ForLoop17586556;
	_JOIN_17585540 [label="_JOIN_17585540None...",shape=box];
	_JOIN_17585540 -> ForLoop17586554;
	_JOIN_17586553 [label="_JOIN_17586553None...",shape=box];
	_JOIN_17586553 -> _JOIN_17586554;
	17652710 [label="17652710  double scv_82;...",shape=box];
	_JOIN_17586551 [label="_JOIN_17586551None...",shape=box];
	_JOIN_17586551 -> _JOIN_17586553;
	_JOIN_17586556 [label="_JOIN_17586556None...",shape=box];
	_JOIN_17586556 -> _JOIN_17586558;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 17467800;
	_JOIN_17586554 [label="_JOIN_17586554None...",shape=box];
	_JOIN_17586554 -> 17656685;
	_JOIN_17568940 [label="_JOIN_17568940None...",shape=box];
	_JOIN_17568940 -> _JOIN_17568942;
	_JOIN_17586512 [label="_JOIN_17586512None...",shape=box];
	_JOIN_17586512 -> ForLoop17586551;
	ForLoop17585413 [label="ForLoop17585413  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop17585413 -> ForLoop17585411;
	ForLoop17585413 -> _JOIN_17585413;
	_JOIN_17585539 [label="_JOIN_17585539None...",shape=box];
	_JOIN_17585539 -> _JOIN_17585540;
	ForLoop17585411 [label="ForLoop17585411  for (kk=kkk; kk<=min(ny-1,kkk+896); kk=kk+128) {...",shape=box];
	ForLoop17585411 -> ForLoop17585005;
	ForLoop17585411 -> _JOIN_17585411;
	17651999 [label="17651999  double scv_50, scv_51, scv_52, scv_53, scv_54, scv_55, scv_56, scv_57;...",shape=box];
	ForLoop17568942 [label="ForLoop17568942  for (jj=jjj; jj<=min(ny-1,jjj+1008); jj=jj+16) {...",shape=box];
	ForLoop17568942 -> ForLoop17568940;
	ForLoop17568942 -> _JOIN_17568942;
	ForLoop17585415 [label="ForLoop17585415  for (i=ii; i<=min(nx-1,ii+255)-14; i=i+15) {...",shape=box];
	ForLoop17585415 -> 17649575;
	ForLoop17585415 -> _JOIN_17585415;
	17609988 [label="17609988  double scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8, scv_9;...",shape=box];
	ForLoop17468528 [label="ForLoop17468528  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop17468528 -> 17468527;
	ForLoop17468528 -> _JOIN_17468528;
	17468232 [label="17468232  y[i]=0.0;...",shape=box];
	17568311 [label="17568311  int i;...",shape=box];
	17568311 -> ForLoop17585415;
	ForLoop17568944 [label="ForLoop17568944  for (jjj=0; jjj<=ny-1; jjj=jjj+1024) {...",shape=box];
	ForLoop17568944 -> ForLoop17568942;
	ForLoop17568944 -> _JOIN_17568944;
	17585537 [label="17585537  scv_83=scv_83+A[i*ny+j]*x[j];...",shape=box];
	17585537 -> _JOIN_17585538;
	ForLoop17585538 [label="ForLoop17585538  for (j=jj; j<=min(ny-1,jj+15); j=j+1) {...",shape=box];
	ForLoop17585538 -> 17585537;
	ForLoop17585538 -> _JOIN_17585538;
	_JOIN_1746expected=9369846271501.798828
actual=9369846271501.798828
8528 [label="_JOIN_17468528None...",shape=box];
	_JOIN_17468528 -> 17568296;
	17649593 [label="17649593  tmp[(i+12)]=scv_35;...",shape=box];
	17656673 [label="17656673  double scv_83;...",shape=box];
	17649575 [label="17649575  double scv_35, scv_36, scv_37, scv_38, scv_39, scv_40, scv_41, scv_42;...",shape=box];
	17568296 [label="17568296  double x_copy;...",shape=box];
	17612100 [label="17612100  double scv_34;...",shape=box];
	ForLoop17585540 [label="ForLoop17585540  for (jjj=0; jjj<=ny-1; jjj=jjj+1024) {...",shape=box];
	ForLoop17585540 -> ForLoop17585539;
	ForLoop17585540 -> _JOIN_17585540;
	_JOIN_17585538 [label="_JOIN_17585538None...",shape=box];
	_JOIN_17585538 -> _JOIN_17585539;
	_JOIN_17585409 [label="_JOIN_17585409None...",shape=box];
	_JOIN_17585409 -> _JOIN_17585411;
	_JOIN_17468459 [label="_JOIN_17468459None...",shape=box];
	_JOIN_17468459 -> 17468803;
	ForLoop17585409 [label="ForLoop17585409  for (k=kt; k<=min(ny-1,kk+127); k=k+1) {...",shape=box];
	ForLoop17585409 -> 17612100;
	ForLoop17585409 -> _JOIN_17585409;
	17468803 [label="17468803  register int cbv_2, cbv_3;...",shape=box];
	17587235 [label="17587235  double scv_1;...",shape=box];
	ForLoop17585539 [label="ForLoop17585539  for (jj=jjj; jj<=min(ny-1,jjj+1008); jj=jj+16) {...",shape=box];
	ForLoop17585539 -> ForLoop17585538;
	ForLoop17585539 -> _JOIN_17585539;
	ForLoop17568940 [label="ForLoop17568940  for (j=jj; j<=min(ny-1,jj+15); j=j+1) {...",shape=box];
	ForLoop17568940 -> 17587235;
	ForLoop17568940 -> _JOIN_17568940;
	_JOIN_17585413 [label="_JOIN_17585413None...",shape=box];
	_JOIN_17585413 -> 17649593;
	_JOIN_17568942 [label="_JOIN_17568942None...",shape=box];
	_JOIN_17568942 -> _JOIN_17568944;
	_JOIN_17568944 [label="_JOIN_17568944None...",shape=box];
	_JOIN_17568944 -> ForLoop17585413;
	_JOIN_17585411 [label="_JOIN_17585411None...",shape=box];
	_JOIN_17585411 -> _JOIN_17585413;
	17468527 [label="17468527  y[i]=0.0;...",shape=box];
	17468527 -> _JOIN_17468528;
	17467800 [label="17467800  int i;...",shape=box];

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest80.exe __orio_perftest80.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest80.exe  
{'[5, 1, 4, 0, 5, 5, 0, 0, 25, 14, 0, 0, 0, 0, 2, 1, 1, 0]' : 0.106818}
{'[5, 1, 4, 0, 5, 5, 0, 0, 25, 14, 0, 0, 0, 0, 2, 1, 1, 0]' : 0.106273}
{'[5, 1, 4, 0, 5, 5, 0, 0, 25, 14, 0, 0, 0, 0, 2, 1, 1, 0]' : 0.106338}
{'[5, 1, 4, 0, 5, 5, 0, 0, 25, 14, 0, 0, 0, 0, 2, 1, 1, 0]' : 0.106313}
{'[5, 1, 4, 0, 5, 5, 0, 0, 25, 14, 0, 0, 0, 0, 2, 1, 1, 0]' : 0.106475}
{'[5, 1, 4, 0, 5, 5, 0, 0, 25, 14, 0, 0, 0, 0, 2, 1, 1, 0]' : 0.106466}
{'[5, 1, 4, 0, 5, 5, 0, 0, 25, 14, 0, 0, 0, 0, 2, 1, 1, 0]' : 0.106308}
{'[5, 1, 4, 0, 5, 5, 0, 0, 25, 14, 0, 0, 0, 0, 2, 1, 1, 0]' : 0.106318}
{'[5, 1, 4, 0, 5, 5, 0, 0, 25, 14, 0, 0, 0, 0, 2, 1, 1, 0]' : 0.106543}
{'[5, 1, 4, 0, 5, 5, 0, 0, 25, 14, 0, 0, 0, 0, 2, 1, 1, 0]' : 0.106271}
{'[5, 1, 4, 0, 5, 5, 0, 0, 25, 14, 0, 0, 0, 0, 2, 1, 1, 0]' : 0.106525}
{'[5, 1, 4, 0, 5, 5, 0, 0, 25, 14, 0, 0, 0, 0, 2, 1, 1, 0]' : 0.106255}
{'[5, 1, 4, 0, 5, 5, 0, 0, 25, 14, 0, 0, 0, 0, 2, 1, 1, 0]' : 0.106421}
{'[5, 1, 4, 0, 5, 5, 0, 0, 25, 14, 0, 0, 0, 0, 2, 1, 1, 0]' : 0.106418}
{'[5, 1, 4, 0, 5, 5, 0, 0, 25, 14, 0, 0, 0, 0, 2, 1, 1, 0]' : 0.106304}
{'[5, 1, 4, 0, 5, 5, 0, 0, 25, 14, 0, 0, 0, 0, 2, 1, 1, 0]' : 0.106402}
{'[5, 1, 4, 0, 5, 5, 0, 0, 25, 14, 0, 0, 0, 0, 2, 1, 1, 0]' : 0.10635}
{'[5, 1, 4, 0, 5, 5, 0, 0, 25, 14, 0, 0, 0, 0, 2, 1, 1, 0]' : 0.106356}
{'[5, 1, 4, 0, 5, 5, 0, 0, 25, 14, 0, 0, 0, 0, 2, 1, 1, 0]' : 0.106339}
{'[5, 1, 4, 0, 5, 5, 0, 0, 25, 14, 0, 0, 0, 0, 2, 1, 1, 0]' : 0.106538}
{'[5, 1, 4, 0, 5, 5, 0, 0, 25, 14, 0, 0, 0, 0, 2, 1, 1, 0]' : 0.106245}
{'[5, 1, 4, 0, 5, 5, 0, 0, 25, 14, 0, 0, 0, 0, 2, 1, 1, 0]' : 0.106278}
{'[5, 1, 4, 0, 5, 5, 0, 0, 25, 14, 0, 0, 0, 0, 2, 1, 1, 0]' : 0.106429}
{'[5, 1, 4, 0, 5, 5, 0, 0, 25, 14, 0, 0, 0, 0, 2, 1, 1, 0]' : 0.106474}
{'[5, 1, 4, 0, 5, 5, 0, 0, 25, 14, 0, 0, 0, 0, 2, 1, 1, 0]' : 0.106413}
{'[5, 1, 4, 0, 5, 5, 0, 0, 25, 14, 0, 0, 0, 0, 2, 1, 1, 0]' : 0.106368}
{'[5, 1, 4, 0, 5, 5, 0, 0, 25, 14, 0, 0, 0, 0, 2, 1, 1, 0]' : 0.106263}
{'[5, 1, 4, 0, 5, 5, 0, 0, 25, 14, 0, 0, 0, 0, 2, 1, 1, 0]' : 0.106389}
{'[5, 1, 4, 0, 5, 5, 0, 0, 25, 14, 0, 0, 0, 0, 2, 1, 1, 0]' : 0.106274}
{'[5, 1, 4, 0, 5, 5, 0, 0, 25, 14, 0, 0, 0, 0, 2, 1, 1, 0]' : 0.1065}

out:
 ["{'[5, 1, 4, 0, 5, 5, 0, 0, 25, 14, 0, 0, 0, 0, 2, 1, 1, 0]' : 0.106818}", "{'[5, 1, 4, 0, 5, 5, 0, 0, 25, 14, 0, 0, 0, 0, 2, 1, 1, 0]' : 0.106273}", "{'[5, 1, 4, 0, 5, 5, 0, 0, 25, 14, 0, 0, 0, 0, 2, 1, 1, 0]' : 0.106338}", "{'[5, 1, 4, 0, 5, 5, 0, 0, 25, 14, 0, 0, 0, 0, 2, 1, 1, 0]' : 0.106313}", "{'[5, 1, 4, 0, 5, 5, 0, 0, 25, 14, 0, 0, 0, 0, 2, 1, 1, 0]' : 0.106475}", "{'[5, 1, 4, 0, 5, 5, 0, 0, 25, 14, 0, 0, 0, 0, 2, 1, 1, 0]' : 0.106466}", "{'[5, 1, 4, 0, 5, 5, 0, 0, 25, 14, 0, 0, 0, 0, 2, 1, 1, 0]' : 0.106308}", "{'[5, 1, 4, 0, 5, 5, 0, 0, 25, 14, 0, 0, 0, 0, 2, 1, 1, 0]' : 0.106318}", "{'[5, 1, 4, 0, 5, 5, 0, 0, 25, 14, 0, 0, 0, 0, 2, 1, 1, 0]' : 0.106543}", "{'[5, 1, 4, 0, 5, 5, 0, 0, 25, 14, 0, 0, 0, 0, 2, 1, 1, 0]' : 0.106271}", "{'[5, 1, 4, 0, 5, 5, 0, 0, 25, 14, 0, 0, 0, 0, 2, 1, 1, 0]' : 0.106525}", "{'[5, 1, 4, 0, 5, 5, 0, 0, 25, 14, 0, 0, 0, 0, 2, 1, 1, 0]' : 0.106255}", "{'[5, 1, 4, 0, 5, 5, 0, 0, 25, 14, 0, 0, 0, 0, 2, 1, 1, 0]' : 0.106421}", "{'[5, 1, 4, 0, 5, 5, 0, 0, 25, 14, 0, 0, 0, 0, 2, 1, 1, 0]' : 0.106418}", "{'[5, 1, 4, 0, 5, 5, 0, 0, 25, 14, 0, 0, 0, 0, 2, 1, 1, 0]' : 0.106304}", "{'[5, 1, 4, 0, 5, 5, 0, 0, 25, 14, 0, 0, 0, 0, 2, 1, 1, 0]' : 0.106402}", "{'[5, 1, 4, 0, 5, 5, 0, 0, 25, 14, 0, 0, 0, 0, 2, 1, 1, 0]' : 0.10635}", "{'[5, 1, 4, 0, 5, 5, 0, 0, 25, 14, 0, 0, 0, 0, 2, 1, 1, 0]' : 0.106356}", "{'[5, 1, 4, 0, 5, 5, 0, 0, 25, 14, 0, 0, 0, 0, 2, 1, 1, 0]' : 0.106339}", "{'[5, 1, 4, 0, 5, 5, 0, 0, 25, 14, 0, 0, 0, 0, 2, 1, 1, 0]' : 0.106538}", "{'[5, 1, 4, 0, 5, 5, 0, 0, 25, 14, 0, 0, 0, 0, 2, 1, 1, 0]' : 0.106245}", "{'[5, 1, 4, 0, 5, 5, 0, 0, 25, 14, 0, 0, 0, 0, 2, 1, 1, 0]' : 0.106278}", "{'[5, 1, 4, 0, 5, 5, 0, 0, 25, 14, 0, 0, 0, 0, 2, 1, 1, 0]' : 0.106429}", "{'[5, 1, 4, 0, 5, 5, 0, 0, 25, 14, 0, 0, 0, 0, 2, 1, 1, 0]' : 0.106474}", "{'[5, 1, 4, 0, 5, 5, 0, 0, 25, 14, 0, 0, 0, 0, 2, 1, 1, 0]' : 0.106413}", "{'[5, 1, 4, 0, 5, 5, 0, 0, 25, 14, 0, 0, 0, 0, 2, 1, 1, 0]' : 0.106368}", "{'[5, 1, 4, 0, 5, 5, 0, 0, 25, 14, 0, 0, 0, 0, 2, 1, 1, 0]' : 0.106263}", "{'[5, 1, 4, 0, 5, 5, 0, 0, 25, 14, 0, 0, 0, 0, 2, 1, 1, 0]' : 0.106389}", "{'[5, 1, 4, 0, 5, 5, 0, 0, 25, 14, 0, 0, 0, 0, 2, 1, 1, 0]' : 0.106274}", "{'[5, 1, 4, 0, 5, 5, 0, 0, 25, 14, 0, 0, 0, 0, 2, 1, 1, 0]' : 0.1065}"]
returning from 'run': {'[5, 1, 4, 0, 5, 5, 0, 0, 25, 14, 0, 0, 0, 0, 2, 1, 1, 0]': ([0.106818, 0.106273, 0.106338, 0.106313, 0.106475, 0.106466, 0.106308, 0.106318, 0.106543, 0.106271, 0.106525, 0.106255, 0.106421, 0.106418, 0.106304, 0.106402, 0.10635, 0.106356, 0.106339, 0.106538, 0.106245, 0.106278, 0.106429, 0.106474, 0.106413, 0.106368, 0.106263, 0.106389, 0.106274, 0.1065], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.106818, 0.106273, 0.106338, 0.106313, 0.106475, 0.106466, 0.106308, 0.106318, 0.106543, 0.106271, 0.106525, 0.106255, 0.106421, 0.106418, 0.106304, 0.106402, 0.10635, 0.106356, 0.106339, 0.106538, 0.106245, 0.106278, 0.106429, 0.106474, 0.106413, 0.106368, 0.106263, 0.106389, 0.106274, 0.1065], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[5, 1, 4, 0, 5, 5, 0, 0, 25, 14, 0, 0, 0, 0, 2, 1, 1, 0]': ([0.106818, 0.106273, 0.106338, 0.106313, 0.106475, 0.106466, 0.106308, 0.106318, 0.106543, 0.106271, 0.106525, 0.106255, 0.106421, 0.106418, 0.106304, 0.106402, 0.10635, 0.106356, 0.106339, 0.106538, 0.106245, 0.106278, 0.106429, 0.106474, 0.106413, 0.106368, 0.106263, 0.106389, 0.106274, 0.1065], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [1, 5, 1, 5, 6, 4, 1, 26, 28, 1, 1, 0, 1, 0]
Fixed Factors: {'ACOPY_y': 0, 'U1_I': 25, 'U_J': 0, 'SCR': 1}
Testing candidate 11: [1, 5, 1, 5, 6, 4, 1, 0, 25, 26, 0, 28, 1, 1, 0, 1, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	57
        Max loop nest depth: 	6
        Additions: 		5792
        Multiplications: 	2736
        Divisions: 		0
        Logical: 		0
        Reads: 			11045
        Writes: 		1838
        Comparisons:		57
        Gotos: 			0
        
digraph CFG {
	_JOIN_17669543 [label="_JOIN_17669543None...",shape=box];
	_JOIN_17669543 -> 17669887;
	ForLoop18044471 [label="ForLoop18044471  for (k=kk; k<=min(ny-1,kk+15)-28; k=k+29) {...",shape=box];
	ForLoop18044471 -> 18219413;
	ForLoop18044471 -> _JOIN_18044471;
	17997136 [label="17997136  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	17997136 -> ForLoop17999470;
	18219413 [label="18219413  double scv_112, scv_113, scv_114, scv_115, scv_116, scv_117, scv_118, scv_119;...",shape=box];
	ForLoop18043247 [label="ForLoop18043247  for (i=it; i<=min(nx-1,ii+15)-26; i=i+27) {...",shape=box];
	ForLoop18043247 -> 18215399;
	ForLoop18043247 -> _JOIN_18043247;
	18007434 [label="18007434  int i;...",shape=box];
	18007434 -> ForLoop18043247;
	18223965 [label="18223965  double scv_142;...",shape=box];
	ForLoop18007177 [label="ForLoop18007177  for (k=kk; k<=min(ny-1,kk+15)-28; k=k+29) {...",shape=box];
	ForLoop18007177 -> 18062437;
	ForLoop18007177 -> _JOIN_18007177;
	_JOIN_18043613 [label="_JOIN_18043613None...",shape=box];
	_JOIN_18043613 -> ForLoop18044542;
	ForLoop18044541 [label="ForLoop18044541  for (kk=kkk; kk<=min(ny-1,kkk+496); kk=kk+16) {...",shape=box];
	ForLoop18044541 -> 18043645;
	ForLoop18044541 -> _JOIN_18044541;
	ForLoop18042496 [label="ForLoop18042496  for (k=kk; k<=min(ny-1,kk+15)-28; k=k+29) {...",shape=box];
	ForLoop18042496 -> 18145413;
	ForLoop18042496 -> _JOIN_18042496;
	_JOIN_18044471 [label="_JOIN_18044471None...",shape=box];
	_JOIN_18044471 -> ForLoop18044539;
	_JOIN_18042496 [label="_JOIN_18042496None...",shape=box];
	_JOIN_18042496 -> ForLoop18043241;
	17668884 [label="17668884  int i;...",shape=box];
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 17668884;
	_JOIN_18007430 [label="_JOIN_18007430None...",shape=box];
	_JOIN_18007430 -> _JOIN_18007431;
	18043405 [label="18043405  scv_142=scv_142+A[i*ny+jt]*x_copy[(jt-jj)];...",shape=box];
	_JOIN_18043243 [label="_JOIN_18043243None...",shape=box];
	_JOIN_18043243 -> _JOIN_18043245;
	_JOIN_18043610 [label="_JOIN_18043610None...",shape=box];
	_JOIN_18043610 -> _JOIN_18043612;
	18084374 [label="18084374  tmp[it]=scv_39;...",shape=box];
	18215417 [label="18215417  tmp[(i+20)]=scv_85;...",shape=box];
	_JOIN_17999470 [label="_JOIN_17999470None...",shape=box];
	_JOIN_17999470 -> _JOIN_17999472;
	_JOIN_18007433 [label="_JOIN_18007433None...",shape=box];
	_JOIN_18007433 -> 18007434;
	_JOIN_17999472 [label="_JOIN_17999472None...",shape=box];
	_JOIN_17999472 -> _JOIN_17999473;
	_JOIN_17999473 [label="_JOIN_17999473None...",shape=box];
	_JOIN_17999473 -> ForLoop18007431;
	ForLoop18007428 [label="ForLoop18007428  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kk)+1)%29)+1; k<=min(ny-1,kk+15); k=k+1) {...",shape=box];
	ForLoop18007428 -> 18063773;
	ForLoop18007428 -> _JOIN_18007428;
	18062437 [label="18062437  double scv_9, scv_10, scv_11, scv_12, scv_13, scv_14, scv_15, scv_16;...",shape=box];
	_JOIN_17669612 [label="_JOIN_17669612None...",shape=box];
	_JOIN_17669612 -> 17997016;
	_JOIN_18007431 [label="_JOIN_18007431None...",shape=box];
	_JOIN_18007431 -> 18084374;
	_JOIN_18043245 [label="_JOIN_18043245None...",shape=box];
	_JOIN_18043245 -> 18215417;
	ForLoop17999470 [label="ForLoop17999470  for (jt=jj; jt<=min(ny-1,jj+255)-7; jt=jt+8) {...",shape=box];
	ForLoop17999470 -> 18047774;
	ForLoop17999470 -> _JOIN_17999470;
	_JOIN_18043241 [label="_JOIN_18043241None...",shape=box];
	_JOIN_18043241 -> _JOIN_18043243;
	18145413 [label="18145413  double scv_55, scv_56, scv_57, scv_58, scv_59, scv_60, scv_61, scv_62;...",shape=box];
	18043362 [label="18043362  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	18043362 -> ForLoop18043610;
	_JOIN_18044539 [label="_JOIN_18044539None...",shape=box];
	_JOIN_18044539 -> _JOIN_18044541;
	18215399 [label="18215399  double scv_85, scv_86, scv_87, scv_88, scv_89, scv_90, scv_91, scv_92;...",shape=box];
	ForLoop18044542 [label="ForLoop18044542  for (kkk=0; kkk<=ny-1; kkk=kkk+512) {...",shape=box];
	ForLoop18044542 -> ForLoop18044541;
	ForLoop18044542 -> _JOIN_18044542;
	ForLoop18043613 [label="ForLoop18043613  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop18043613 -> ForLoop18043612;
	ForLoop18043613 -> _JOIN_18043613;
	17669611 [label="17669611  y[i]=0.0;...",shape=box];
	17669611 -> _JOIN_17669612;
	_JOIN_18044542 [label="_JOIN_18044542None...",shape=box];
	_JOIN_18044542 -> 18223977;
	ForLoop18044547 [label="ForLoop18044547  for (ii=iii; ii<=min(nx-1,iii+1008); ii=ii+16) {...",shape=box];
	ForLoop18044547 -> ForLoop18007433;
	ForLoop18044547 -> _JOIN_18044547;
	ForLoop18044544 [label="ForLoop18044544  for (i=(min(nx-1,ii+15))-(((min(nx-1,ii+15))-(it)+1)%27)+1; i<=min(nx-1,ii+15); i=i+1) {...",shape=box];
	ForLoop18044544 -> 18223965;
	ForLoop18044544 -> _JOIN_18044544;
	18220090 [label="18220090  double scv_141;...",shape=box];
	ForLoop18016184 [label="ForLoop18016184  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop18016184 -> ForLoop18016182;
	ForLoop18016184 -> _JOIN_18016184;
	ForLoop18044548 [label="ForLoop18044548  for (iii=0; iii<=nx-1; iii=iii+1024) {...",shape=box];
	ForLoop18044548 -> ForLoop18044547;
	ForLoop18044548 -> _JOIN_18044548;
	_JOIN_18043247 [label="_JOIN_18043247None...",shape=box];
	_JOIN_18043247 -> ForLoop18044544;
	ForLoop17669543 [label="ForLoop17669543  for (i=0; i<=cbv_1; i=i+26) {...",shape=box];
	ForLoop17669543 -> 17669316;
	ForLoop17669543 -> _JOIN_17669543;
	ForLoop18016182 [label="ForLoop18016182  for (jj=jjj; jj<=min(ny-1,jjj+1792); jj=jj+256) {...",shape=box];
	ForLoop18016182 -> 18007756;
	ForLoop18016182 -> _JOIN_18016182;
	18047774 [label="18047774  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	ForLoop18043241 [label="ForLoop18043241  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kk)+1)%29)+1; k<=min(ny-1,kk+15); k=k+1) {...",shape=box];
	ForLoop18043241 -> 18148535;
	ForLoop18043241 -> _JOIN_18043241;
	_JOIN_18044544 [label="_JOIN_18044544None...",shape=box];
	_JOIN_18044544 -> _JOIN_18044547;
	ForLoop18043243 [label="ForLoop18043243  for (kk=kkk; kk<=min(ny-1,kkk+496); kk=kk+16) {...",shape=box];
	ForLoop18043243 -> 18016216;
	ForLoop18043243 -> _JOIN_18043243;
	ForLoop17669612 [label="ForLoop17669612  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop17669612 -> 17669611;
	ForLoop17669612 -> _JOIN_17669612;
	ForLoop18043245 [label="ForLoop18043245  for (kkk=0; kkk<=ny-1; kkk=kkk+512) {...",shape=box];
	ForLoop18043245 -> ForLoop18043243;
	ForLoop18043245 -> _JOIN_18043245;
	17999505 [label="17999505  int k;...",shape=box];
	17999505 -> ForLoop18007177;
	18148535 [label="18148535  double scv_84;...",shape=box];
	_JOIN_18043612 [label="_JOIN_18043612None...",shape=box];
	_JOIN_18043612 -> _JOIN_18043613;
	18095223 [label="18095223  double scv_47, scv_48, scv_49, scv_50, scv_51, scv_52, scv_53, scv_54;...",shape=box];
	18016216 [label="18016216  int k;...",shape=box];
	ForLoop18007431 [label="ForLoop18007431  for (kkk=0; kkk<=ny-1; kkk=kkk+512) {...",shape=box];
	ForLoop18007431 -> ForLoop18007430;
	ForLoop18007431 -> _JOIN_18007431;
	_JOIN_18044548 [label="_JOIN_18044548None...",shape=box];
	ForLoop18043612 [label="ForLoop18043612  for (jj=jjj; jj<=min(ny-1,jjj+1792); jj=jj+256) {...",shape=box];
	ForLoop18043612 -> 18043362;
	ForLoop18043612 -> _JOIN_18043612;
	18063773 [label="18063773  double scv_38;...",shape=box];
	ForLoop18043610 [label="ForLoop18043610  for (jt=jj; jt<=min(ny-1,jj+255)-7; jt=jt+8) {...",shape=box];
	ForLoop18043610 -> 18043405;
	ForLoop18043610 -> _JOIN_18043610;
	_JOIN_18044541 [label="_JOIN_18044541None...",shape=box];
	_JOIN_18044541 -> _JOIN_18044542;
	_JOIN_18044547 [label="_JOIN_18044547None...",shape=box];
	_JOIN_1expected=9369846271501.798828
actual=9369846271501.798828
8044547 -> _JOIN_18044548;
	18223977 [label="18223977  tmp[i]=scv_142;...",shape=box];
	18223977 -> _JOIN_18044544;
	_JOIN_18007428 [label="_JOIN_18007428None...",shape=box];
	_JOIN_18007428 -> _JOIN_18007430;
	_JOIN_18007177 [label="_JOIN_18007177None...",shape=box];
	_JOIN_18007177 -> ForLoop18007428;
	ForLoop18044539 [label="ForLoop18044539  for (k=(min(ny-1,kk+15))-(((min(ny-1,kk+15))-(kk)+1)%29)+1; k<=min(ny-1,kk+15); k=k+1) {...",shape=box];
	ForLoop18044539 -> 18220090;
	ForLoop18044539 -> _JOIN_18044539;
	18084362 [label="18084362  double scv_39, scv_40, scv_41, scv_42, scv_43, scv_44, scv_45, scv_46;...",shape=box];
	17669316 [label="17669316  y[i]=0.0;...",shape=box];
	ForLoop18016180 [label="ForLoop18016180  for (jt=jj; jt<=min(ny-1,jj+255)-7; jt=jt+8) {...",shape=box];
	ForLoop18016180 -> 18095223;
	ForLoop18016180 -> _JOIN_18016180;
	18007756 [label="18007756  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	17669887 [label="17669887  register int cbv_2, cbv_3;...",shape=box];
	18043645 [label="18043645  int k;...",shape=box];
	18043645 -> ForLoop18044471;
	ForLoop17999472 [label="ForLoop17999472  for (jj=jjj; jj<=min(ny-1,jjj+1792); jj=jj+256) {...",shape=box];
	ForLoop17999472 -> 17997136;
	ForLoop17999472 -> _JOIN_17999472;
	ForLoop17999473 [label="ForLoop17999473  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop17999473 -> ForLoop17999472;
	ForLoop17999473 -> _JOIN_17999473;
	ForLoop18007433 [label="ForLoop18007433  for (it=ii; it<=min(nx-1,ii+15)-7; it=it+8) {...",shape=box];
	ForLoop18007433 -> 18084362;
	ForLoop18007433 -> _JOIN_18007433;
	_JOIN_18016184 [label="_JOIN_18016184None...",shape=box];
	_JOIN_18016184 -> ForLoop18043245;
	17997016 [label="17997016  double x_copy[256];...",shape=box];
	ForLoop18007430 [label="ForLoop18007430  for (kk=kkk; kk<=min(ny-1,kkk+496); kk=kk+16) {...",shape=box];
	ForLoop18007430 -> 17999505;
	ForLoop18007430 -> _JOIN_18007430;
	_JOIN_18016180 [label="_JOIN_18016180None...",shape=box];
	_JOIN_18016180 -> _JOIN_18016182;
	_JOIN_18016182 [label="_JOIN_18016182None...",shape=box];
	_JOIN_18016182 -> _JOIN_18016184;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest81.exe __orio_perftest81.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest81.exe  
{'[1, 5, 1, 5, 6, 4, 1, 0, 25, 26, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.0927951}
{'[1, 5, 1, 5, 6, 4, 1, 0, 25, 26, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.0922301}
{'[1, 5, 1, 5, 6, 4, 1, 0, 25, 26, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.0921249}
{'[1, 5, 1, 5, 6, 4, 1, 0, 25, 26, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.092103}
{'[1, 5, 1, 5, 6, 4, 1, 0, 25, 26, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.0920439}
{'[1, 5, 1, 5, 6, 4, 1, 0, 25, 26, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.0920811}
{'[1, 5, 1, 5, 6, 4, 1, 0, 25, 26, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.092124}
{'[1, 5, 1, 5, 6, 4, 1, 0, 25, 26, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.092169}
{'[1, 5, 1, 5, 6, 4, 1, 0, 25, 26, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.092169}
{'[1, 5, 1, 5, 6, 4, 1, 0, 25, 26, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.0923741}
{'[1, 5, 1, 5, 6, 4, 1, 0, 25, 26, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.092859}
{'[1, 5, 1, 5, 6, 4, 1, 0, 25, 26, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.092247}
{'[1, 5, 1, 5, 6, 4, 1, 0, 25, 26, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.0922301}
{'[1, 5, 1, 5, 6, 4, 1, 0, 25, 26, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.092283}
{'[1, 5, 1, 5, 6, 4, 1, 0, 25, 26, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.0922101}
{'[1, 5, 1, 5, 6, 4, 1, 0, 25, 26, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.0922151}
{'[1, 5, 1, 5, 6, 4, 1, 0, 25, 26, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.0922151}
{'[1, 5, 1, 5, 6, 4, 1, 0, 25, 26, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.0921469}
{'[1, 5, 1, 5, 6, 4, 1, 0, 25, 26, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.0921841}
{'[1, 5, 1, 5, 6, 4, 1, 0, 25, 26, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.092241}
{'[1, 5, 1, 5, 6, 4, 1, 0, 25, 26, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.092104}
{'[1, 5, 1, 5, 6, 4, 1, 0, 25, 26, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.0921099}
{'[1, 5, 1, 5, 6, 4, 1, 0, 25, 26, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.092201}
{'[1, 5, 1, 5, 6, 4, 1, 0, 25, 26, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.092078}
{'[1, 5, 1, 5, 6, 4, 1, 0, 25, 26, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.092056}
{'[1, 5, 1, 5, 6, 4, 1, 0, 25, 26, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.092108}
{'[1, 5, 1, 5, 6, 4, 1, 0, 25, 26, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.0925539}
{'[1, 5, 1, 5, 6, 4, 1, 0, 25, 26, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.0922532}
{'[1, 5, 1, 5, 6, 4, 1, 0, 25, 26, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.09515}
{'[1, 5, 1, 5, 6, 4, 1, 0, 25, 26, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.0964968}

out:
 ["{'[1, 5, 1, 5, 6, 4, 1, 0, 25, 26, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.0927951}", "{'[1, 5, 1, 5, 6, 4, 1, 0, 25, 26, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.0922301}", "{'[1, 5, 1, 5, 6, 4, 1, 0, 25, 26, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.0921249}", "{'[1, 5, 1, 5, 6, 4, 1, 0, 25, 26, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.092103}", "{'[1, 5, 1, 5, 6, 4, 1, 0, 25, 26, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.0920439}", "{'[1, 5, 1, 5, 6, 4, 1, 0, 25, 26, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.0920811}", "{'[1, 5, 1, 5, 6, 4, 1, 0, 25, 26, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.092124}", "{'[1, 5, 1, 5, 6, 4, 1, 0, 25, 26, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.092169}", "{'[1, 5, 1, 5, 6, 4, 1, 0, 25, 26, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.092169}", "{'[1, 5, 1, 5, 6, 4, 1, 0, 25, 26, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.0923741}", "{'[1, 5, 1, 5, 6, 4, 1, 0, 25, 26, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.092859}", "{'[1, 5, 1, 5, 6, 4, 1, 0, 25, 26, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.092247}", "{'[1, 5, 1, 5, 6, 4, 1, 0, 25, 26, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.0922301}", "{'[1, 5, 1, 5, 6, 4, 1, 0, 25, 26, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.092283}", "{'[1, 5, 1, 5, 6, 4, 1, 0, 25, 26, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.0922101}", "{'[1, 5, 1, 5, 6, 4, 1, 0, 25, 26, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.0922151}", "{'[1, 5, 1, 5, 6, 4, 1, 0, 25, 26, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.0922151}", "{'[1, 5, 1, 5, 6, 4, 1, 0, 25, 26, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.0921469}", "{'[1, 5, 1, 5, 6, 4, 1, 0, 25, 26, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.0921841}", "{'[1, 5, 1, 5, 6, 4, 1, 0, 25, 26, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.092241}", "{'[1, 5, 1, 5, 6, 4, 1, 0, 25, 26, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.092104}", "{'[1, 5, 1, 5, 6, 4, 1, 0, 25, 26, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.0921099}", "{'[1, 5, 1, 5, 6, 4, 1, 0, 25, 26, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.092201}", "{'[1, 5, 1, 5, 6, 4, 1, 0, 25, 26, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.092078}", "{'[1, 5, 1, 5, 6, 4, 1, 0, 25, 26, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.092056}", "{'[1, 5, 1, 5, 6, 4, 1, 0, 25, 26, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.092108}", "{'[1, 5, 1, 5, 6, 4, 1, 0, 25, 26, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.0925539}", "{'[1, 5, 1, 5, 6, 4, 1, 0, 25, 26, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.0922532}", "{'[1, 5, 1, 5, 6, 4, 1, 0, 25, 26, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.09515}", "{'[1, 5, 1, 5, 6, 4, 1, 0, 25, 26, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.0964968}"]
returning from 'run': {'[1, 5, 1, 5, 6, 4, 1, 0, 25, 26, 0, 28, 1, 1, 0, 1, 1, 0]': ([0.0927951, 0.0922301, 0.0921249, 0.092103, 0.0920439, 0.0920811, 0.092124, 0.092169, 0.092169, 0.0923741, 0.092859, 0.092247, 0.0922301, 0.092283, 0.0922101, 0.0922151, 0.0922151, 0.0921469, 0.0921841, 0.092241, 0.092104, 0.0921099, 0.092201, 0.092078, 0.092056, 0.092108, 0.0925539, 0.0922532, 0.09515, 0.0964968], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.0927951, 0.0922301, 0.0921249, 0.092103, 0.0920439, 0.0920811, 0.092124, 0.092169, 0.092169, 0.0923741, 0.092859, 0.092247, 0.0922301, 0.092283, 0.0922101, 0.0922151, 0.0922151, 0.0921469, 0.0921841, 0.092241, 0.092104, 0.0921099, 0.092201, 0.092078, 0.092056, 0.092108, 0.0925539, 0.0922532, 0.09515, 0.0964968], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[1, 5, 1, 5, 6, 4, 1, 0, 25, 26, 0, 28, 1, 1, 0, 1, 1, 0]': ([0.0927951, 0.0922301, 0.0921249, 0.092103, 0.0920439, 0.0920811, 0.092124, 0.092169, 0.092169, 0.0923741, 0.092859, 0.092247, 0.0922301, 0.092283, 0.0922101, 0.0922151, 0.0922151, 0.0921469, 0.0921841, 0.092241, 0.092104, 0.0921099, 0.092201, 0.092078, 0.092056, 0.092108, 0.0925539, 0.0922532, 0.09515, 0.0964968], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [5, 0, 3, 6, 2, 0, 1, 27, 5, 0, 0, 2, 0, 0]
Fixed Factors: {'ACOPY_y': 0, 'U1_I': 25, 'U_J': 0, 'SCR': 1}
Testing candidate 12: [5, 0, 3, 6, 2, 0, 1, 0, 25, 27, 0, 5, 0, 0, 2, 1, 0, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	101
        Max loop nest depth: 	5
        Additions: 		5569
        Multiplications: 	2320
        Divisions: 		0
        Logical: 		0
        Reads: 			10945
        Writes: 		2040
        Comparisons:		101
        Gotos: 			0
        
digraph CFG {
	_JOIN_18547397 [label="_JOIN_18547397None...",shape=box];
	_JOIN_18547397 -> 18547399;
	ForLoop18547694 [label="ForLoop18547694  for (kk=0; kk<=ny-1; kk=kk+64) {...",shape=box];
	ForLoop18547694 -> ForLoop18539502;
	ForLoop18547694 -> _JOIN_18547694;
	18596119 [label="18596119  double scv_41, scv_42, scv_43, scv_44, scv_45, scv_46;...",shape=box];
	ForLoop18547696 [label="ForLoop18547696  for (i=ii; i<=min(nx-1,ii+255)-27; i=i+28) {...",shape=box];
	ForLoop18547696 -> 18675449;
	ForLoop18547696 -> _JOIN_18547696;
	ForLoop18547691 [label="ForLoop18547691  for (k=(min(ny-1,kk+63))-(((min(ny-1,kk+63))-(kt)+1)%6)+1; k<=min(ny-1,kk+63); k=k+1) {...",shape=box];
	ForLoop18547691 -> 18610099;
	ForLoop18547691 -> _JOIN_18547691;
	18609039 [label="18609039  double scv_215;...",shape=box];
	ForLoop18542399 [label="ForLoop18542399  for (k=(min(ny-1,kk+63))-(((min(ny-1,kk+63))-(kt)+1)%6)+1; k<=min(ny-1,kk+63); k=k+1) {...",shape=box];
	ForLoop18542399 -> 18600559;
	ForLoop18542399 -> _JOIN_18542399;
	18547105 [label="18547105  int k;...",shape=box];
	18547105 -> ForLoop18547323;
	ForLoop18542325 [label="ForLoop18542325  for (k=kt; k<=min(ny-1,kk+63)-5; k=k+6) {...",shape=box];
	ForLoop18542325 -> 18600359;
	ForLoop18542325 -> _JOIN_18542325;
	_JOIN_18545633 [label="_JOIN_18545633None...",shape=box];
	_JOIN_18545633 -> 18545635;
	18540637 [label="18540637  int k;...",shape=box];
	18540637 -> ForLoop18540855;
	18507673 [label="18507673  for (j=jjj; j<=min(ny-1,jjj+127); j=j+1) ...",shape=box];
	18601949 [label="18601949  double scv_118, scv_119, scv_120, scv_121, scv_122, scv_123;...",shape=box];
	18602479 [label="18602479  double scv_125, scv_126, scv_127, scv_128, scv_129, scv_130;...",shape=box];
	18550399 [label="18550399  double scv_1;...",shape=box];
	ForLoop18543207 [label="ForLoop18543207  for (k=kt; k<=min(ny-1,kk+63)-5; k=k+6) {...",shape=box];
	ForLoop18543207 -> 18601949;
	ForLoop18543207 -> _JOIN_18543207;
	18539755 [label="18539755  int k;...",shape=box];
	18539755 -> ForLoop18539973;
	_JOIN_18545045 [label="_JOIN_18545045None...",shape=box];
	_JOIN_18545045 -> 18545047;
	_JOIN_18544971 [label="_JOIN_18544971None...",shape=box];
	_JOIN_18544971 -> ForLoop18545045;
	ForLoop18539753 [label="ForLoop18539753  for (k=(min(ny-1,kk+63))-(((min(ny-1,kk+63))-(kt)+1)%6)+1; k<=min(ny-1,kk+63); k=k+1) {...",shape=box];
	ForLoop18539753 -> 18595789;
	ForLoop18539753 -> _JOIN_18539753;
	18683057 [label="18683057  tmp[i]=scv_297;...",shape=box];
	18683057 -> _JOIN_18549047;
	_JOIN_18541443 [label="_JOIN_18541443None...",shape=box];
	_JOIN_18541443 -> ForLoop18541517;
	ForLoop18544089 [label="ForLoop18544089  for (k=kt; k<=min(ny-1,kk+63)-5; k=k+6) {...",shape=box];
	ForLoop18544089 -> 18603539;
	ForLoop18544089 -> _JOIN_18544089;
	ForLoop18546441 [label="ForLoop18546441  for (k=kt; k<=min(ny-1,kk+63)-5; k=k+6) {...",shape=box];
	ForLoop18546441 -> 18607779;
	ForLoop18546441 -> _JOIN_18546441;
	ForLoop18545339 [label="ForLoop18545339  for (k=(min(ny-1,kk+63))-(((min(ny-1,kk+63))-(kt)+1)%6)+1; k<=min(ny-1,kk+63); k=k+1) {...",shape=box];
	ForLoop18545339 -> 18605859;
	ForLoop18545339 -> _JOIN_18545339;
	18606389 [label="18606389  double scv_180;...",shape=box];
	ForLoop18540267 [label="ForLoop18540267  for (k=kt; k<=min(ny-1,kk+63)-5; k=k+6) {...",shape=box];
	ForLoop18540267 -> 18596649;
	ForLoop18540267 -> _JOIN_18540267;
	_JOIN_18548974 [label="_JOIN_18548974None...",shape=box];
	_JOIN_18548974 -> ForLoop18549042;
	ForLoop18548791 [label="ForLoop18548791  for (kt=kk; kt<=min(ny-1,kk+63)-31; kt=kt+32) {...",shape=box];
	ForLoop18548791 -> 18678726;
	ForLoop18548791 -> _JOIN_18548791;
	18598969 [label="18598969  double scv_82;...",shape=box];
	18606919 [label="18606919  double scv_187;...",shape=box];
	_JOIN_18541737 [label="_JOIN_18541737None...",shape=box];
	_JOIN_18541737 -> ForLoop18541811;
	ForLoop18541223 [label="ForLoop18541223  for (k=(min(ny-1,kk+63))-(((min(ny-1,kk+63))-(kt)+1)%6)+1; k<=min(ny-1,kk+63); k=k+1) {...",shape=box];
	ForLoop18541223 -> 18598439;
	ForLoop18541223 -> _JOIN_18541223;
	18602679 [label="18602679  double scv_131;...",shape=box];
	ForLoop18543281 [label="ForLoop18543281  for (k=(min(ny-1,kk+63))-(((min(ny-1,kk+63))-(kt)+1)%6)+1; k<=min(ny-1,kk+63); k=k+1) {...",shape=box];
	ForLoop18543281 -> 18602149;
	ForLoop18543281 -> _JOIN_18543281;
	_JOIN_18546221 [label="_JOIN_18546221None...",shape=box];
	_JOIN_18546221 -> 18546223;
	18604799 [label="18604799  double scv_159;...",shape=box];
	ForLoop18542987 [label="ForLoop18542987  for (k=(min(ny-1,kk+63))-(((min(ny-1,kk+63))-(kt)+1)%6)+1; k<=min(ny-1,kk+63); k=k+1) {...",shape=box];
	ForLoop18542987 -> 18601619;
	ForLoop18542987 -> _JOIN_18542987;
	ForLoop18543869 [label="ForLoop18543869  for (k=(min(ny-1,kk+63))-(((min(ny-1,kk+63))-(kt)+1)%6)+1; k<=min(ny-1,kk+63); k=k+1) {...",shape=box];
	ForLoop18543869 -> 18603209;
	ForLoop18543869 -> _JOIN_18543869;
	18542107 [label="18542107  int k;...",shape=box];
	18542107 -> ForLoop18542325;
	_JOIN_18541149 [label="_JOIN_18541149None...",shape=box];
	_JOIN_18541149 -> ForLoop18541223;
	18598769 [label="18598769  double scv_76, scv_77, scv_78, scv_79, scv_80, scv_81;...",shape=box];
	ForLoop18540855 [label="ForLoop18540855  for (k=kt; k<=min(ny-1,kk+63)-5; k=k+6) {...",shape=box];
	ForLoop18540855 -> 18597709;
	ForLoop18540855 -> _JOIN_18540855;
	18545929 [label="18545929  int k;...",shape=box];
	18545929 -> ForLoop18546147;
	ForLoop18547103 [label="ForLoop18547103  for (k=(min(ny-1,kk+63))-(((min(ny-1,kk+63))-(kt)+1)%6)+1; k<=min(ny-1,kk+63); k=k+1) {...",shape=box];
	ForLoop18547103 -> 18609039;
	ForLoop18547103 -> _JOIN_18547103;
	_JOIN_18545339 [label="_JOIN_18545339None...",shape=box];
	_JOIN_18545339 -> 18545341;
	_JOIN_18509419 [label="_JOIN_18509419None...",shape=box];
	_JOIN_18509419 -> ForLoop18547694;
	ForLoop18542031 [label="ForLoop18542031  for (k=kt; k<=min(ny-1,kk+63)-5; k=k+6) {...",shape=box];
	ForLoop18542031 -> 18599829;
	ForLoop18542031 -> _JOIN_18542031;
	18600889 [label="18600889  double scv_104, scv_105, scv_106, scv_107, scv_108, scv_109;...",shape=box];
	18544165 [label="18544165  int k;...",shape=box];
	18544165 -> ForLoop18544383;
	ForLoop18541149 [label="ForLoop18541149  for (k=kt; k<=min(ny-1,kk+63)-5; k=k+6) {...",shape=box];
	ForLoop18541149 -> 18598239;
	ForLoop18541149 -> _JOIN_18541149;
	_JOIN_18546147 [label="_JOIN_18546147None...",shape=box];
	_JOIN_18546147 -> ForLoop18546221;
	18603209 [label="18603209  double scv_138;...",shape=box];
	18596649 [label="18596649  double scv_48, scv_49, scv_50, scv_51, scv_52, scv_53;...",shape=box];
	_JOIN_18542031 [label="_JOIN_18542031None...",shape=box];
	_JOIN_18542031 -> ForLoop18542105;
	ForLoop18539685 [label="ForLoop18539685  for (k=kt; k<=min(ny-1,kk+63)-5; k=k+6) {...",shape=box];
	ForLoop18539685 -> 18595598;
	ForLoop18539685 -> _JOIN_18539685;
	_JOIN_18542325 [label="_JOIN_18542325None...",shape=box];
	_JOIN_18542325 -> ForLoop18542399;
	ForLoop18547617 [label="ForLoop18547617  for (k=kt; k<=min(ny-1,kk+63)-5; k=k+6) {...",shape=box];
	ForLoop18547617 -> 18609899;
	ForLoop18547617 -> _JOIN_18547617;
	18610099 [label="18610099  double scv_229;...",shape=box];
	_JOIN_18540341 [label="_JOIN_18540341None...",shape=box];
	_JOIN_18540341 -> 18540343;
	18283964 [label="18283964  y[i]=0.0;...",shape=box];
	18600359 [label="18600359  double scv_97, scv_98, scv_99, scv_100, scv_101, scv_102;...",shape=box];
	_JOIN_18540855 [label="_JOIN_18540855None...",shape=box];
	_JOIN_18540855 -> ForLoop18540929;
	18603009 [label="18603009  double scv_132, scv_133, scv_134, scv_135, scv_136, scv_137;...",shape=box];
	ForLoop18541443 [label="ForLoop18541443  for (k=kt; k<=min(ny-1,kk+63)-5; k=k+6) {...",shape=box];
	ForLoop18541443 -> 18598769;
	ForLoop18541443 -> _JOIN_18541443;
	18284259 [label="18284259  y[i]=0.0;...",shape=box];
	18284259 -> _JOIN_18284260;
	18592941 [label="18592941  double scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8, scv_9;...",shape=box];
	ForLoop18547835 [label="ForLoop18547835  for (j=jjj; j<=min(ny-1,jjj+127); j=j+1) {...",shape=box];
	ForLoop18547835 -> 18547834;
	ForLoop18547835 -> _JOIN_18547835;
	ForLoop18540635 [label="ForLoop18540635  for (k=(min(ny-1,kk+63))-(((min(ny-1,kk+63))-(kt)+1)%6)+1; k<=min(ny-1,kk+63); k=k+1) {...",shape=box];
	ForLoop18540635 -> 18597379;
	ForLoop18540635 -> _JOIN_18540635;
	ForLoop18547837 [label="ForLoop18547837  for (jjj=0; jjj<=ny-1; jjj=jjj+128) {...",shape=box];
	ForLoop18547837 -> 18547793;
	ForLoop18547837 -> _JOIN_18547837;
	18605129 [label="18605129  double scv_160, scv_161, scv_162, scv_163, scv_164, scv_165;...",shape=box];
	18546223 [label="18546223  int k;...",shape=box];
	18546223 -> ForLoop18546441;
	_JOIN_18542619 [label="_JOIN_18542619None...",shape=box];
	_JOIN_18542619 -> ForLoop18542693;
	18597909 [label="18597909  double scv_68;...",shape=box];
	_JOIN_18509417 [label="_JOIN_18509417None...",shape=box];
	_JOIN_18509417 -> _JOIN_18509419;
	18507360 [label="18507360  int i;...",shape=box];
	18507360 -> ForLoop18547696;
	_JOIN_18541811 [label="_JOIN_18541811None...",shape=box];
	_JOIN_18541811 -> 18541813;
	_JOIN_18539685 [label="_JOIN_18539685None...",shape=box];
	_JOIN_18539685 -> ForLoop18539753;
	18605859 [label="18605859  double scv_173;...",shape=box];
	_JOIN_18547323 [label="_JOIN_18547323None...",shape=box];
	_JOIN_18547323 -> ForLoop18547397;
	_JOIN_18547694 [label="_JOIN_18547694None...",shape=box];
	_JOIN_18547694 -> 18675467;
	_JOIN_18541223 [label="_JOIN_18541223None...",shape=box];
	_JOIN_18541223 -> 18541225;
	ForLoop18545045 [label="ForLoop18545045  for (k=(min(ny-1,kk+63))-(((min(ny-1,kk+63))-(kt)+1)%6)+1; k<=min(ny-1,kk+63); k=k+1) {...",shape=box];
	ForLoop18545045 -> 18605329;
	ForLoop18545045 -> _JOIN_18545045;
	ForLoop18546221 [label="ForLoop18546221  for (k=(min(ny-1,kk+63))-(((min(ny-1,kk+63))-(kt)+1)%6)+1; k<=min(ny-1,kk+63); k=k+1) {...",shape=box];
	ForLoop18546221 -> 18607449;
	ForLoop18546221 -> _JOIN_18546221;
	_JOIN_18542693 [label="_JOIN_18542693None...",shape=box];
	_JOIN_18542693 -> 18542695;
	_JOIN_18546735 [label="_JOIN_18546735None...",shape=box];
	_JOIN_18546735 -> ForLoop18546809;
	ForLoop18541737 [label="ForLoop18541737  for (k=kt; k<=min(ny-1,kk+63)-5; k=k+6) {...",shape=box];
	ForLoop18541737 -> 18599299;
	ForLoop18541737 -> _JOIN_18541737;
	ForLoop18509417 [label="ForLoop18509417  for (j=jjj; j<=min(ny-1,jjj+127); j=j+1) {...",shape=box];
	ForLoop18509417 -> 18550399;
	ForLoop18509417 -> _JOIN_18509417;
	18543283 [label="18543283  int k;...",shape=box];
	18543283 -> ForLoop18543501;
	ForLoop18509419 [label="ForLoop18509419  for (jjj=0; jjj<=ny-1; jjj=jjj+128) {...",shape=box];
	ForLoop18509419 -> 18507673;
	ForLoop18509419 -> _JOIN_18509419;
	18608309 [label="18608309  double scv_202, scv_203, scv_204, scv_205, scv_206, scv_207;...",shape=box];
	18541519 [label="18541519  int k;...",shape=box];
	18541519 -> ForLoop18541737;
	_JOIN_18549045 [label="_JOIN_18549045None...",shape=box];
	_JOIN_18549045 -> 18683057;
	ForLoop18284260 [label="ForLoop18284260  for (i=ny-((ny-(0))%26); i<=ny-1; i=i+1) ...",shape=box];
	ForLoop18284260 -> 18284259;
	ForLoop18284260 -> _JOIN_18284260;
	18595789 [label="18595789  double scv_40;...",shape=box];
	18540931 [label="18540931  int k;...",shape=box];
	18540931 -> ForLoop18541149;
	18599299 [label="18599299  double scv_83, scv_84, scv_85, scv_86, scv_87, scv_88;...",shape=box];
	_JOIN_18546515 [label="_JOIN_18546515None...",shape=box];
	_JOIN_18546515 -> 18546517;
	ForLoop18541517 [label="ForLoop18541517  for (k=(min(ny-1,kk+63))-(((min(ny-1,kk+63))-(kt)+1)%6)+1; k<=min(ny-1,kk+63); k=k+1) {...",shape=box];
	ForLoop18541517 -> 18598969;
	ForLoop18541517 -> _JOIN_18541517;
	_JOIN_18549042 [label="_JOIN_18549042None...",shape=box];
	_JOIN_18549042 -> _JOIN_18549045;
	ForLoop18546147 [label="ForLoop18546147  for (k=kt; k<=min(ny-1,kk+63)-5; k=k+6) {...",shape=box];
	ForLoop18546147 -> 18607249;
	ForLoop18546147 -> _JOIN_18546147;
	ForLoop18544677 [label="ForLoop18544677  for (k=kt; k<=min(ny-1,kk+63)-5; k=k+6) {...",shape=box];
	ForLoop18544677 -> 18604599;
	ForLoop18544677 -> _JOIN_18544677;
	18601089 [label="18601089  double scv_110;...",shape=box];
	ForLoop18548974 [label="ForLoop18548974  for (k=kt; k<=min(ny-1,kk+63)-5; k=k+6) {...",shape=box];
	ForLoop18548974 -> 18679655;
	ForLoop18548974 -> _JOIN_18548974;
	18607449 [label="18607449  double scv_194;...",shape=box];
	ForLoop18546809 [label="ForLoop18546809  for (k=(min(ny-1,kk+63))-(((min(ny-1,kk+63))-(kt)+1)%6)+1; k<=min(ny-1,kk+63); k=k+1) {...",shape=box];
	ForLoop18546809 -> 18608509;
	ForLoop18546809 -> _JOIN_18546809;
	_JOIN_18545927 [label="_JOIN_18545927None...",shape=box];
	_JOIN_18545927 -> 18545929;
	_JOIN_18542913 [label="_JOIN_18542913None...",shape=box];
	_JOIN_18542913 -> ForLoop18542987;
	18600029 [label="18600029  double scv_96;...",shape=box];
	_JOIN_18544089 [label="_JOIN_18544089None...",shape=box];
	_JOIN_18544089 -> ForLoop18544163;
	ForLoop18544457 [label="ForLoop18544457  for (k=(min(ny-1,kk+63))-(((min(ny-1,kk+63))-(kt)+1)%6)+1; k<=min(ny-1,kk+63); k=k+1) {...",shape=box];
	ForLoop18544457 -> 18604269;
	ForLoop18544457 -> _JOIN_18544457;
	_JOIN_18547029 [label="_JOIN_18547029None...",shape=box];
	_JOIN_18547029 -> ForLoop18547103;
	18546517 [label="18546517  int k;...",shape=box];
	18546517 -> ForLoop18546735;
	18540343 [label="18540343  int k;...",shape=box];
	18540343 -> ForLoop18540561;
	18597179 [label="18597179  double scv_55, scv_56, scv_57, scv_58, scv_59, scv_60;...",shape=box];
	18679655 [label="18679655  double scv_290, scv_291, scv_292, scv_293, scv_294, scv_295;...",shape=box];
	_JOIN_18540635 [label="_JOIN_18540635None...",shape=box];
	_JOIN_18540635 -> 18540637;
	ForLoop18542913 [label="ForLoop18542913  for (k=kt; k<=min(ny-1,kk+63)-5; k=k+6) {...",shape=box];
	ForLoop18542913 -> 18601419;
	ForLoop18542913 -> _JOIN_18542913;
	_JOIN_18539753 [label="_JOIN_18539753None...",shape=box];
	_JOIN_18539753 -> 18539755;
	18603539 [label="18603539  double scv_139, scv_140, scv_141, scv_142, scv_143, scv_144;...",shape=box];
	18541813 [label="18541813  int k;...",shape=box];
	18541813 -> ForLoop18542031;
	18609569 [label="18609569  double scv_222;...",shape=box];
	_JOIN_18547103 [label="_JOIN_18547103None...",shape=box];
	_JOIN_18547103 -> 18547105;
	ForLoop18544751 [label="ForLoop18544751  for (k=(min(ny-1,kk+63))-(((min(ny-1,kk+63))-(kt)+1)%6)+1; k<=min(ny-1,kk+63); k=k+1) {...",shape=box];
	ForLoop18544751 -> 18604799;
	ForLoop18544751 -> _JOIN_18544751;
	18542695 [label="18542695  int k;...",shape=box];
	18542695 -> ForLoop18542913;
	ForLoop18543795 [label="ForLoop18543795  for (k=kt; k<=min(ny-1,kk+63)-5; k=k+6) {...",shape=box];
	ForLoop18543795 -> 18603009;
	ForLoop18543795 -> _JOIN_18543795;
	18683045 [label="18683045  double scv_297;...",shape=box];
	_JOIN_18543281 [label="_JOIN_18543281None...",shape=box];
	_JOIN_18543281 -> 18543283;
	18546811 [label="18546811  int k;...",shape=box];
	18546811 -> ForLoop18547029;
	ForLoop18284191 [label="ForLoop18284191  for (i=0; i<=ny-26; i=i+26) {...",shape=box];
	ForLoop18284191 -> 18283964;
	ForLoop18284191 -> _JOIN_18284191;
	18543871 [label="18543871  int k;...",shape=box];
	18543871 -> ForLoop18544089;
	18283532 [label="18283532  int i;...",shape=box];
	18283532 -> ForLoop18284191;
	_JOIN_18547617 [label="_JOIN_18547617None...",shape=box];
	_JOIN_18547617 -> ForLoop18547691;
	ForLoop18547397 [label="ForLoop18547397  for (k=(min(ny-1,kk+63))-(((min(ny-1,kk+63))-(kt)+1)%6)+1; k<=min(ny-1,kk+63); k=k+1) {...",shape=box];
	ForLoop18547397 -> 18609569;
	ForLoop18547397 -> _JOIN_18547397;
	_JOIN_18546441 [label="_JOIN_18546441None...",shape=box];
	_JOIN_18546441 -> ForLoop18546515;
	ForLoop18543575 [label="ForLoop18543575  for (k=(min(ny-1,kk+63))-(((min(ny-1,kk+63))-(kt)+1)%6)+1; k<=min(ny-1,kk+63); k=k+1) {...",shape=box];
	ForLoop18543575 -> 18602679;
	ForLoop18543575 -> _JOIN_18543575;
	18540049 [label="18540049  int k;...",shape=box];
	18540049 -> ForLoop18540267;
	18542989 [label="18542989  int k;...",shape=box];
	18542989 -> ForLoop18543207;
	18539503 [label="18539503  int k;...",shape=box];
	18539503 -> ForLoop18539685;
	ForLoop18547029 [label="ForLoop18547029  for (k=kt; k<=min(ny-1,kk+63)-5; k=k+6) {...",shape=box];
	ForLoop18547029 -> 18608839;
	ForLoop18547029 -> _JOIN_18547029;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 18283532;
	18679846 [label="18679846  double scv_296;...",shape=box];
	_JOIN_18544677 [label="_JOIN_18544677None...",shape=box];
	_JOIN_18544677 -> ForLoop18544751;
	ForLoop18541811 [label="ForLoop18541811  for (k=(min(ny-1,kk+63))-(((min(ny-1,kk+63))-(kt)+1)%6)+1; k<=min(ny-1,kk+63); k=k+1) {...",shape=box];
	ForLoop18541811 -> 18599499;
	ForLoop18541811 -> _JOIN_18541811;
	18606189 [label="18606189  double scv_174, scv_175, scv_176, scv_177, scv_178, scv_179;...",shape=box];
	18599829 [label="18599829  double scv_90, scv_91, scv_92, scv_93, scv_94, scv_95;...",shape=box];
	_JOIN_18539502 [label="_JOIN_18539502None...",shape=box];
	_JOIN_18539502 -> 18539503;
	18604269 [label="18604269  double scv_152;...",shape=box];
	_JOIN_18542105 [label="_JOIN_18542105None...",shape=box];
	_JOIN_18542105 -> 18542107;
	ForLoop18539502 [label="ForLoop18539502  for (kt=kk; kt<=min(ny-1,kk+63)-31; kt=kt+32) {...",shape=box];
	ForLoop18539502 -> 18592941;
	ForLoop18539502 -> _JOIN_18539502;
	ForLoop18545265 [label="ForLoop18545265  for (k=kt; k<=min(ny-1,kk+63)-5; k=k+6) {...",shape=box];
	ForLoop18545265 -> 18605659;
	ForLoop18545265 -> _JOIN_18545265;
	18601419 [label="18601419  double scv_111, scv_112, scv_113, scv_114, scv_115, scv_116;...",shape=box];
	_JOIN_18540929 [label="_JOIN_18540929None...",shape=box];
	_JOIN_18540929 -> 18540931;
	_JOIN_18549050 [label="_JOIN_18549050None...",shape=box];
	18543577 [label="18543577  int k;...",shape=box];
	18543577 -> ForLoop18543795;
	ForLoop18540341 [label="ForLoop18540341  for (k=(min(ny-1,kk+63))-(((min(ny-1,kk+63))-(kt)+1)%6)+1; k<=min(ny-1,kk+63); k=k+1) {...",shape=box];
	ForLoop18540341 -> 18596849;
	ForLoop18540341 -> _JOIN_18540341;
	18607779 [label="18607779  double scv_195, scv_196, scv_197, scv_198, scv_199, scv_200;...",shape=box];
	18675467 [label="18675467  tmp[(i+20)]=scv_230;...",shape=box];
	ForLoop18549045 [label="ForLoop18549045  for (kk=0; kk<=ny-1; kk=kk+64) {...",shape=box];
	ForLoop18549045 -> ForLoop18548791;
	ForLoop18549045 -> _JOIN_18549045;
	_JOIN_18539973 [label="_JOIN_18539973None...",shape=box];
	_JOIN_18539973 -> ForLoop18540047;
	18596849 [label="18596849  double scv_54;...",shape=box];
	18600559 [label="18600559  double scv_103;...",shape=box];
	ForLoop18540561 [label="ForLoop18540561  for (k=kt; k<=min(ny-1,kk+63)-5; k=k+6) {...",shape=box];
	ForLoop18540561 -> 18597179;
	ForLoop18540561 -> _JOIN_18540561;
	ForLoop18549042 [label="ForLoop18549042  for (k=(min(ny-1,kk+63))-(((min(ny-1,kk+63))-(kt)+1)%6)+1; k<=min(ny-1,kk+63); k=k+1) {...",shape=box];
	ForLoop18549042 -> 18679846;
	ForLoop18549042 -> _JOIN_18549042;
	18597709 [label="18597709  double scv_62, scv_63, scv_64, scv_65, scv_66, scv_67;...",shape=box];
	ForLoop18546735 [label="ForLoop18546735  for (k=kt; k<=min(ny-1,kk+63)-5; k=k+6) {...",shape=box];
	ForLoop18546735 -> 18608309;
	ForLoop18546735 -> _JOIN_18546735;
	_JOIN_18544163 [label="_JOIN_18544163None...",shape=box];
	_JOIN_18544163 -> 18544165;
	_JOIN_18543575 [label="_JOIN_18543575None...",shape=box];
	_JOIN_18543575 -> 18543577;
	_JOIN_18543869 [label="_JOIN_18543869None...",shape=box];
	_JOIN_18543869 -> 18543871;
	_JOIN_18284260 [label="_JOIN_18284260None...",shape=box];
	_JOIN_18284260 -> 18507327;
	18541225 [label="18541225  int k;...",shape=box];
	18541225 -> ForLoop18541443;
	_JOIN_18543207 [label="_JOIN_18543207None...",shape=box];
	_JOIN_18543207 -> ForLoop18543281;
	18545047 [label="18545047  int k;...",shape=box];
	18545047 -> ForLoop18545265;
	18548792 [label="18548792  int k;...",shape=box];
	18548792 -> ForLoop18548974;
	_JOIN_18547691 [label="_JOIN_18547691None...",shape=box];
	_JOIN_18547691 -> _JOIN_18547694;
	18602149 [label="18602149  double scv_124;...",shape=box];
	ForLoop18544163 [label="ForLoop18544163  for (k=(min(ny-1,kk+63))-(((min(ny-1,kk+63))-(kt)+1)%6)+1; k<=min(ny-1,kk+63); k=k+1) {...",shape=box];
	ForLoop18544163 -> 18603739;
	ForLoop18544163 -> _JOIN_18544163;
	18604599 [label="18604599  double scv_153, scv_154, scv_155, scv_156, scv_157, scv_158;...",shape=box];
	_JOIN_18547696 [label="_JOIN_18547696None...",shape=box];
	_JOIN_18547696 -> ForLoop18549047;
	_JOIN_18542987 [label="_JOIN_18542987None...",shape=box];
	_JOIN_18542987 -> 18542989;
	_JOIN_18549049 [label="_JOIN_18549049None...",shape=box];
	_JOIN_18549049 -> _JOIN_18549050;
	ForLoop18540047 [label="ForLoop18540047  for (k=(min(ny-1,kk+63))-(((min(ny-1,kk+63))-(kt)+1)%6)+1; k<=min(ny-1,kk+63); k=k+1) {...",shape=box];
	ForLoop18540047 -> 18596319;
	ForLoop18540047 -> _JOIN_18540047;
	18545635 [label="18545635  int k;...",shape=box];
	18545635 -> ForLoop18545853;
	ForLoop18547323 [label="ForLoop18547323  for (k=kt; k<=min(ny-1,kk+63)-5; k=k+6) {...",shape=box];
	ForLoop18547323 -> 18609369;
	ForLoop18547323 -> _JOIN_18547323;
	_JOIN_18540267 [label="_JOIN_18540267None...",shape=box];
	_JOIN_18540267 -> ForLoop18540341;
	18608509 [label="18608509  double scv_208;...",shape=box];
	_JOIN_18546809 [label="_JOIN_18546809None...",shape=box];
	_JOIN_18546809 -> 18546811;
	_JOIN_18544457 [label="_JOIN_18544457None...",shape=box];
	_JOIN_18544457 -> 18544459;
	ForLoop18549049 [label="ForLoop18549049  for (ii=iii; ii<=min(nx-1,iii+1792); ii=ii+256) {...",shape=box];
	ForLoop18549049 -> 18507360;
	ForLoop18549049 -> _JOIN_18549049;
	ForLoop18549047 [label="ForLoop18549047  for (i=(min(nx-1,ii+255))-(((min(nx-1,ii+255))-(ii)+1)%28)+1; i<=min(nx-1,ii+255); i=i+1) {...",shape=box];
	ForLoop18549047 -> 18683045;
	ForLoop18549047 -> _JOIN_18549047;
	_JOIN_18545265 [label="_JOIN_18545265None...",shape=box];
	_JOIN_18545265 -> ForLoop18545339;
	_JOIN_18549047 [label="_JOIN_18549047None...",shape=box];
	_JOIN_18549047 -> _JOIN_18549049;
	ForLoop18544383 [label="ForLoop18544383  for (k=kt; k<=min(ny-1,kk+63)-5; k=k+6) {...",shape=box];
	ForLoop18544383 -> 18604069;
	ForLoop18544383 -> _JOIN_18544383;
	18607979 [label="18607979  double scv_201;...",shape=box];
	_JOIN_18545559 [label="_JOIN_18545559None...",shape=box];
	_JOIN_18545559 -> ForLoop18545633;
	18598439 [label="18598439  double scv_75;...",shape=box];
	18542401 [label="18542401  int k;...",shape=box];
	18542401 -> ForLoop18542619;
	18605659 [label="18605659  double scv_167, scv_168, scv_169, scv_170, scv_171, scv_172;...",shape=box];
	ForLoop18545633 [label="ForLoop18545633  for (k=(min(ny-1,kk+63))-(((min(ny-1,kk+63))-(kt)+1)%6)+1; k<=min(ny-1,kk+63); k=k+1) {...",shape=box];
	ForLoop18545633 -> 18606389;
	ForLoop18545633 -> _JOIN_18545633;
	18507327 [label="18507327  double x_copy[128];...",shape=box];
	ForLoop18544971 [label="ForLoop18544971  for (k=kt; k<=min(ny-1,kk+63)-5; k=k+6) {...",shape=box];
	ForLoop18544971 -> 18605129;
	ForLoop18544971 -> _JOIN_18544971;
	ForLoop18540929 [label="ForLoop18540929  for (k=(min(ny-1,kk+63))-(((min(ny-1,kk+63))-(kt)+1)%6)+1; k<=min(ny-1,kk+63); k=k+1) {...",shape=box];
	ForLoop18540929 -> 18597909;
	ForLoop18540929 -> _JOIN_18540929;
	18544753 [label="18544753  int k;...",shape=box];
	18544753 -> ForLoop18544971;
	18545341 [label="18545341  int k;...",shape=box];
	18545341 -> ForLoop18545559;
	ForLoop18545927 [label="ForLoop18545927  for (k=(min(ny-1,kk+63))-(((min(ny-1,kk+63))-(kt)+1)%6)+1; k<=min(ny-1,kk+63); k=k+1) {...",shape=box];
	ForLoop18545927 -> 18606919;
	ForLoop18545927 -> _JOIN_18545927;
	ForLoop18542105 [label="ForLoop18542105  for (k=(min(ny-1,kk+63))-(((min(ny-1,kk+63))-(kt)+1)%6)+1; k<=min(ny-1,kk+63); k=k+1) {...",shape=box];
	ForLoop18542105 -> 18600029;
	ForLoop18542105 -> _JOIN_18542105;
	_JOIN_18545853 [label="_JOIN_18545853None...",shape=box];
	_JOIN_18545853 -> ForLoop18545927;
	18595598 [label="18595598  double scv_34, scv_35, scv_36, scv_37, scv_38, scv_39;...",shape=box];
	_JOIN_18544751 [label="_JOIN_18544751None...",shape=box];
	_JOIN_18544751 -> 18544753;
	18608839 [label="18608839  double scv_209, scv_210, scv_211, scv_212, scv_213, scv_214;...",shape=box];
	18606719 [label="18606719  double scv_181, scv_182, scv_183, scv_184, scv_185, scv_186;...",shape=box];
	_JOIN_18542399 [label="_JOIN_18542399None...",shape=box];
	_JOIN_18542399 -> 18542401;
	ForLoop18545559 [label="ForLoop18545559  for (k=kt; k<=min(ny-1,kk+63)-5; k=k+6) {...",shape=box];
	ForLoop18545559 -> 18606189;
	ForLoop18545559 -> _JOIN_18545559;
	18598239 [label="18598239  double scv_69, scv_70, scv_71, scv_72, scv_73, scv_74;...",shape=box];
	_JOIN_18544383 [label="_JOIN_18544383None...",shape=box];
	_JOIN_18544383 -> ForLoop18544457;
	18547793 [label="18547793  for (j=jjj; j<=min(ny-1,jjj+127); j=j+1) ...",shape=box];
	18547793 -> ForLoop18547835;
	18605329 [label="18605329  double scv_166;...",shape=box];
	18675449 [label="18675449  double scv_230, scv_231, scv_232, scv_233, scv_234, scv_235, scv_236, scv_237;...",shape=box];
	18596319 [label="18596319  double scv_47;...",shape=box];
	18544459 [label="18544459  int k;...",shape=box];
	18544459 -> ForLoop18544677;
	_JOIN_18547835 [label="_JOIN_18547835None...",shape=box];
	_JOIN_18547835 -> _JOIN_18547837;
	_JOIN_18547837 [label="_JOIN_18547837None...",shape=box];
	_JOIN_18547837 -> ForLoop18549045;
	ForLoop18545853 [label="ForLoop18545853  for (k=kt; k<=min(ny-1,kk+63)-5; k=k+6) {...",shape=box];
	ForLoop18545853 -> 18606719;
	ForLoop18545853 -> _JOIN_18545853;
	_JOIN_18543501 [label="_JOIN_18543501None...",shape=box];
	_JOIN_18543501 -> ForLoop18543575;
	ForLoop18543501 [label="ForLoop18543501  for (k=kt; k<=min(ny-1,kk+63)-5; k=k+6) {...",shape=box];
	ForLoop18543501 -> 18602479;
	ForLoop18543501 -> _JOIN_18543501;
	ForLoop18549050 [label="ForLoop18549050  for (iii=0; iii<=nx-1; iii=iii+2048) {...",shape=box];
	ForLoop18549050 -> ForLoop18549049;
	ForLoop18549050 -> _JOIN_18549050;
	_JOIN_18284191 [label="_JOIN_18284191None...",shape=box];
	_JOIN_18284191 -> ForLoop18284260;
	_JOIN_18548791 [label="_JOIN_18548791None...",shape=box];
	_JOIN_18548791 -> 18548792;
	_JOIN_18540047 [label="_JOIN_18540047None...",shape=box];
	_JOIN_18540047 -> 18540049;
	ForLoop18542693 [label="ForLoop18542693  for (k=(min(ny-1,kk+63))-(((min(ny-1,kk+63))-(kt)+1)%6)+1; k<=min(ny-1,kk+63); k=k+1) {...",shape=box];
	ForLoop18542693 -> 18601089;
	ForLoop18542693 -> _JOIN_18542693;
	18609369 [label="18609369  double scv_216, scv_217, scv_218, scv_219, scv_220, scv_221;...",shape=box];
	ForLoop18539973 [label="ForLoop18539973  for (k=kt; k<=min(ny-1,kk+63)-5; k=k+6) {...",shape=box];
	ForLoop18539973 -> 18596119;
	ForLoop18539973 -> _JOIN_18539973;
	18547834 [label="18547834  scv_297=scv_297+A[i*ny+j]*x_copy[(j-jjj)];...",shape=box];
	18547834 -> _JOIN_18547835;
	18609899 [label="18609899  double scv_223, scv_224, scv_225, scv_226, scv_227, scv_228;...",shape=box];
	_JOIN_18543795 [label="_JOIN_18543795None...",shape=box];
	_JOIN_18543795 -> ForLoop18543869;
	18601619 [label="18601619  double scv_117;...",shape=box];
	18599499 [label="18599499  double scv_89;...",shape=box];
	ForLoop18542619 [label="ForLoop18542619  for (k=kt; k<=min(ny-1,kk+63)-5; k=k+6) {...",shape=box];
	ForLoop18542619 -> 18600889;
	ForLoop18542619 -> _JOIN_18542619;
	18678726 [label="18678726  double scv_258, scv_259, scv_260, scv_261, scv_262, scv_263, scv_264, scv_265;...",shape=box];
	_JOIN_18540561 [label="_JOIN_18540561None...",shape=box];
	_JOIN_18540561 -> ForLoop18540635;
	ForLoop18546515 [label="ForLoop18546515  for (k=(min(ny-1,kk+63))-(((min(ny-1,kk+63))-(kt)+1)%6)+1; k<=min(ny-1,kk+63); k=k+1) {...",shape=box];
	ForLoop18546515 -> 18607979;
	ForLoop18546515 -> _JOIN_18546515;
	_JOIN_18541517 [label="_JOIN_18541517None...",shape=box];
	_JOIN_1expected=9369846271501.798828
actual=9369846271501.798828
8541517 -> 18541519;
	18607249 [label="18607249  double scv_188, scv_189, scv_190, scv_191, scv_192, scv_193;...",shape=box];
	18547399 [label="18547399  int k;...",shape=box];
	18547399 -> ForLoop18547617;
	18597379 [label="18597379  double scv_61;...",shape=box];
	18604069 [label="18604069  double scv_146, scv_147, scv_148, scv_149, scv_150, scv_151;...",shape=box];
	18603739 [label="18603739  double scv_145;...",shape=box];

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest82.exe __orio_perftest82.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest82.exe  
{'[5, 0, 3, 6, 2, 0, 1, 0, 25, 27, 0, 5, 0, 0, 2, 1, 0, 0]' : 0.176387}
{'[5, 0, 3, 6, 2, 0, 1, 0, 25, 27, 0, 5, 0, 0, 2, 1, 0, 0]' : 0.175209}
{'[5, 0, 3, 6, 2, 0, 1, 0, 25, 27, 0, 5, 0, 0, 2, 1, 0, 0]' : 0.175482}
{'[5, 0, 3, 6, 2, 0, 1, 0, 25, 27, 0, 5, 0, 0, 2, 1, 0, 0]' : 0.17533}
{'[5, 0, 3, 6, 2, 0, 1, 0, 25, 27, 0, 5, 0, 0, 2, 1, 0, 0]' : 0.175553}
{'[5, 0, 3, 6, 2, 0, 1, 0, 25, 27, 0, 5, 0, 0, 2, 1, 0, 0]' : 0.175344}
{'[5, 0, 3, 6, 2, 0, 1, 0, 25, 27, 0, 5, 0, 0, 2, 1, 0, 0]' : 0.176006}
{'[5, 0, 3, 6, 2, 0, 1, 0, 25, 27, 0, 5, 0, 0, 2, 1, 0, 0]' : 0.175104}
{'[5, 0, 3, 6, 2, 0, 1, 0, 25, 27, 0, 5, 0, 0, 2, 1, 0, 0]' : 0.175317}
{'[5, 0, 3, 6, 2, 0, 1, 0, 25, 27, 0, 5, 0, 0, 2, 1, 0, 0]' : 0.175417}
{'[5, 0, 3, 6, 2, 0, 1, 0, 25, 27, 0, 5, 0, 0, 2, 1, 0, 0]' : 0.190353}
{'[5, 0, 3, 6, 2, 0, 1, 0, 25, 27, 0, 5, 0, 0, 2, 1, 0, 0]' : 0.210367}
{'[5, 0, 3, 6, 2, 0, 1, 0, 25, 27, 0, 5, 0, 0, 2, 1, 0, 0]' : 0.174816}
{'[5, 0, 3, 6, 2, 0, 1, 0, 25, 27, 0, 5, 0, 0, 2, 1, 0, 0]' : 0.17485}
{'[5, 0, 3, 6, 2, 0, 1, 0, 25, 27, 0, 5, 0, 0, 2, 1, 0, 0]' : 0.175105}
{'[5, 0, 3, 6, 2, 0, 1, 0, 25, 27, 0, 5, 0, 0, 2, 1, 0, 0]' : 0.174977}
{'[5, 0, 3, 6, 2, 0, 1, 0, 25, 27, 0, 5, 0, 0, 2, 1, 0, 0]' : 0.174916}
{'[5, 0, 3, 6, 2, 0, 1, 0, 25, 27, 0, 5, 0, 0, 2, 1, 0, 0]' : 0.175307}
{'[5, 0, 3, 6, 2, 0, 1, 0, 25, 27, 0, 5, 0, 0, 2, 1, 0, 0]' : 0.174845}
{'[5, 0, 3, 6, 2, 0, 1, 0, 25, 27, 0, 5, 0, 0, 2, 1, 0, 0]' : 0.175144}
{'[5, 0, 3, 6, 2, 0, 1, 0, 25, 27, 0, 5, 0, 0, 2, 1, 0, 0]' : 0.174944}
{'[5, 0, 3, 6, 2, 0, 1, 0, 25, 27, 0, 5, 0, 0, 2, 1, 0, 0]' : 0.175137}
{'[5, 0, 3, 6, 2, 0, 1, 0, 25, 27, 0, 5, 0, 0, 2, 1, 0, 0]' : 0.175103}
{'[5, 0, 3, 6, 2, 0, 1, 0, 25, 27, 0, 5, 0, 0, 2, 1, 0, 0]' : 0.174936}
{'[5, 0, 3, 6, 2, 0, 1, 0, 25, 27, 0, 5, 0, 0, 2, 1, 0, 0]' : 0.17516}
{'[5, 0, 3, 6, 2, 0, 1, 0, 25, 27, 0, 5, 0, 0, 2, 1, 0, 0]' : 0.17501}
{'[5, 0, 3, 6, 2, 0, 1, 0, 25, 27, 0, 5, 0, 0, 2, 1, 0, 0]' : 0.17537}
{'[5, 0, 3, 6, 2, 0, 1, 0, 25, 27, 0, 5, 0, 0, 2, 1, 0, 0]' : 0.175722}
{'[5, 0, 3, 6, 2, 0, 1, 0, 25, 27, 0, 5, 0, 0, 2, 1, 0, 0]' : 0.175202}
{'[5, 0, 3, 6, 2, 0, 1, 0, 25, 27, 0, 5, 0, 0, 2, 1, 0, 0]' : 0.175296}

out:
 ["{'[5, 0, 3, 6, 2, 0, 1, 0, 25, 27, 0, 5, 0, 0, 2, 1, 0, 0]' : 0.176387}", "{'[5, 0, 3, 6, 2, 0, 1, 0, 25, 27, 0, 5, 0, 0, 2, 1, 0, 0]' : 0.175209}", "{'[5, 0, 3, 6, 2, 0, 1, 0, 25, 27, 0, 5, 0, 0, 2, 1, 0, 0]' : 0.175482}", "{'[5, 0, 3, 6, 2, 0, 1, 0, 25, 27, 0, 5, 0, 0, 2, 1, 0, 0]' : 0.17533}", "{'[5, 0, 3, 6, 2, 0, 1, 0, 25, 27, 0, 5, 0, 0, 2, 1, 0, 0]' : 0.175553}", "{'[5, 0, 3, 6, 2, 0, 1, 0, 25, 27, 0, 5, 0, 0, 2, 1, 0, 0]' : 0.175344}", "{'[5, 0, 3, 6, 2, 0, 1, 0, 25, 27, 0, 5, 0, 0, 2, 1, 0, 0]' : 0.176006}", "{'[5, 0, 3, 6, 2, 0, 1, 0, 25, 27, 0, 5, 0, 0, 2, 1, 0, 0]' : 0.175104}", "{'[5, 0, 3, 6, 2, 0, 1, 0, 25, 27, 0, 5, 0, 0, 2, 1, 0, 0]' : 0.175317}", "{'[5, 0, 3, 6, 2, 0, 1, 0, 25, 27, 0, 5, 0, 0, 2, 1, 0, 0]' : 0.175417}", "{'[5, 0, 3, 6, 2, 0, 1, 0, 25, 27, 0, 5, 0, 0, 2, 1, 0, 0]' : 0.190353}", "{'[5, 0, 3, 6, 2, 0, 1, 0, 25, 27, 0, 5, 0, 0, 2, 1, 0, 0]' : 0.210367}", "{'[5, 0, 3, 6, 2, 0, 1, 0, 25, 27, 0, 5, 0, 0, 2, 1, 0, 0]' : 0.174816}", "{'[5, 0, 3, 6, 2, 0, 1, 0, 25, 27, 0, 5, 0, 0, 2, 1, 0, 0]' : 0.17485}", "{'[5, 0, 3, 6, 2, 0, 1, 0, 25, 27, 0, 5, 0, 0, 2, 1, 0, 0]' : 0.175105}", "{'[5, 0, 3, 6, 2, 0, 1, 0, 25, 27, 0, 5, 0, 0, 2, 1, 0, 0]' : 0.174977}", "{'[5, 0, 3, 6, 2, 0, 1, 0, 25, 27, 0, 5, 0, 0, 2, 1, 0, 0]' : 0.174916}", "{'[5, 0, 3, 6, 2, 0, 1, 0, 25, 27, 0, 5, 0, 0, 2, 1, 0, 0]' : 0.175307}", "{'[5, 0, 3, 6, 2, 0, 1, 0, 25, 27, 0, 5, 0, 0, 2, 1, 0, 0]' : 0.174845}", "{'[5, 0, 3, 6, 2, 0, 1, 0, 25, 27, 0, 5, 0, 0, 2, 1, 0, 0]' : 0.175144}", "{'[5, 0, 3, 6, 2, 0, 1, 0, 25, 27, 0, 5, 0, 0, 2, 1, 0, 0]' : 0.174944}", "{'[5, 0, 3, 6, 2, 0, 1, 0, 25, 27, 0, 5, 0, 0, 2, 1, 0, 0]' : 0.175137}", "{'[5, 0, 3, 6, 2, 0, 1, 0, 25, 27, 0, 5, 0, 0, 2, 1, 0, 0]' : 0.175103}", "{'[5, 0, 3, 6, 2, 0, 1, 0, 25, 27, 0, 5, 0, 0, 2, 1, 0, 0]' : 0.174936}", "{'[5, 0, 3, 6, 2, 0, 1, 0, 25, 27, 0, 5, 0, 0, 2, 1, 0, 0]' : 0.17516}", "{'[5, 0, 3, 6, 2, 0, 1, 0, 25, 27, 0, 5, 0, 0, 2, 1, 0, 0]' : 0.17501}", "{'[5, 0, 3, 6, 2, 0, 1, 0, 25, 27, 0, 5, 0, 0, 2, 1, 0, 0]' : 0.17537}", "{'[5, 0, 3, 6, 2, 0, 1, 0, 25, 27, 0, 5, 0, 0, 2, 1, 0, 0]' : 0.175722}", "{'[5, 0, 3, 6, 2, 0, 1, 0, 25, 27, 0, 5, 0, 0, 2, 1, 0, 0]' : 0.175202}", "{'[5, 0, 3, 6, 2, 0, 1, 0, 25, 27, 0, 5, 0, 0, 2, 1, 0, 0]' : 0.175296}"]
returning from 'run': {'[5, 0, 3, 6, 2, 0, 1, 0, 25, 27, 0, 5, 0, 0, 2, 1, 0, 0]': ([0.176387, 0.175209, 0.175482, 0.17533, 0.175553, 0.175344, 0.176006, 0.175104, 0.175317, 0.175417, 0.190353, 0.210367, 0.174816, 0.17485, 0.175105, 0.174977, 0.174916, 0.175307, 0.174845, 0.175144, 0.174944, 0.175137, 0.175103, 0.174936, 0.17516, 0.17501, 0.17537, 0.175722, 0.175202, 0.175296], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.176387, 0.175209, 0.175482, 0.17533, 0.175553, 0.175344, 0.176006, 0.175104, 0.175317, 0.175417, 0.190353, 0.210367, 0.174816, 0.17485, 0.175105, 0.174977, 0.174916, 0.175307, 0.174845, 0.175144, 0.174944, 0.175137, 0.175103, 0.174936, 0.17516, 0.17501, 0.17537, 0.175722, 0.175202, 0.175296], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[5, 0, 3, 6, 2, 0, 1, 0, 25, 27, 0, 5, 0, 0, 2, 1, 0, 0]': ([0.176387, 0.175209, 0.175482, 0.17533, 0.175553, 0.175344, 0.176006, 0.175104, 0.175317, 0.175417, 0.190353, 0.210367, 0.174816, 0.17485, 0.175105, 0.174977, 0.174916, 0.175307, 0.174845, 0.175144, 0.174944, 0.175137, 0.175103, 0.174936, 0.17516, 0.17501, 0.17537, 0.175722, 0.175202, 0.175296], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [3, 0, 3, 3, 1, 5, 0, 29, 29, 0, 2, 0, 1, 0]
Fixed Factors: {'ACOPY_y': 0, 'U1_I': 25, 'U_J': 0, 'SCR': 1}
Testing candidate 13: [3, 0, 3, 3, 1, 5, 0, 0, 25, 29, 0, 29, 0, 2, 0, 1, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	6
        Additions: 		8033
        Multiplications: 	3968
        Divisions: 		0
        Logical: 		0
        Reads: 			14809
        Writes: 		2304
        Comparisons:		20
        Gotos: 			0
        
digraph CFG {
	ForLoop19152558 [label="ForLoop19152558  for (jt=jjj; jt<=min(ny-1,jjj+63)-31; jt=jt+32) {...",shape=box];
	ForLoop19152558 -> 19151750;
	ForLoop19152558 -> _JOIN_19152558;
	ForLoop19153556 [label="ForLoop19153556  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop19153556 -> ForLoop19153555;
	ForLoop19153556 -> _JOIN_19153556;
	ForLoop19153555 [label="ForLoop19153555  for (kk=kkk; kk<=min(ny-1,kkk+960); kk=kk+64) {...",shape=box];
	ForLoop19153555 -> 19152631;
	ForLoop19153555 -> _JOIN_19153555;
	_JOIN_18744247 [label="_JOIN_18744247None...",shape=box];
	_JOIN_18744247 -> 18744591;
	ForLoop19153553 [label="ForLoop19153553  for (k=(min(ny-1,kk+63))-(((min(ny-1,kk+63))-(kk)+1)%30)+1; k<=min(ny-1,kk+63); k=k+1) {...",shape=box];
	ForLoop19153553 -> 19377999;
	ForLoop19153553 -> _JOIN_19153553;
	19199963 [label="19199963  double scv_33;...",shape=box];
	19152631 [label="19152631  int k;...",shape=box];
	19152631 -> ForLoop19153485;
	_JOIN_19151644 [label="_JOIN_19151644None...",shape=box];
	_JOIN_19151644 -> ForLoop19153558;
	19382583 [label="19382583  tmp[i]=scv_126;...",shape=box];
	19382583 -> _JOIN_19153558;
	ForLoop18744316 [label="ForLoop18744316  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop18744316 -> 18744315;
	ForLoop18744316 -> _JOIN_18744316;
	_JOIN_19151640 [label="_JOIN_19151640None...",shape=box];
	_JOIN_19151640 -> _JOIN_19151642;
	_JOIN_19151642 [label="_JOIN_19151642None...",shape=box];
	_JOIN_19151642 -> 19370234;
	_JOIN_19150815 [label="_JOIN_19150815None...",shape=box];
	_JOIN_19150815 -> ForLoop19151638;
	_JOIN_19120550 [label="_JOIN_19120550None...",shape=box];
	_JOIN_19120550 -> _JOIN_19120552;
	_JOIN_19120552 [label="_JOIN_19120552None...",shape=box];
	_JOIN_19120552 -> ForLoop19151642;
	_JOIN_19119669 [label="_JOIN_19119669None...",shape=box];
	_JOIN_19119669 -> ForLoop19120550;
	19087145 [label="19087145  int i;...",shape=box];
	19087145 -> ForLoop19151644;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 18743588;
	19151750 [label="19151750  scv_126=scv_126+A[i*ny+jt]*x[jt];...",shape=box];
	19382571 [label="19382571  double scv_126;...",shape=box];
	ForLoop19152599 [label="ForLoop19152599  for (jjj=0; jjj<=ny-1; jjj=jjj+64) {...",shape=box];
	ForLoop19152599 -> ForLoop19152558;
	ForLoop19152599 -> _JOIN_19152599;
	_JOIN_19153560 [label="_JOIN_19153560None...",shape=box];
	_JOIN_19153560 -> _JOIN_19153561;
	ForLoop19152597 [label="ForLoop19152597  for (j=jt; j<=min(ny-1,jjj+63); j=j+1) {...",shape=box];
	ForLoop19152597 -> 19152596;
	ForLoop19152597 -> _JOIN_19152597;
	_JOIN_19152599 [label="_JOIN_19152599None...",shape=box];
	_JOIN_19152599 -> ForLoop19153556;
	_JOIN_19152597 [label="_JOIN_19152597None...",shape=box];
	_JOIN_19152597 -> _JOIN_19152599;
	ForLoop19151642 [label="ForLoop19151642  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop19151642 -> ForLoop19151640;
	ForLoop19151642 -> _JOIN_19151642;
	_JOIN_19151638 [label="_JOIN_19151638None...",shape=box];
	_JOIN_19151638 -> _JOIN_19151640;
	19120584 [label="19120584  int k;...",shape=box];
	ForLoop19151638 [label="ForLoop19151638  for (k=(min(ny-1,kk+63))-(((min(ny-1,kk+63))-(kk)+1)%30)+1; k<=min(ny-1,kk+63); k=k+1) {...",shape=box];
	ForLoop19151638 -> 19273143;
	ForLoop19151638 -> _JOIN_19151638;
	ForLoop19120550 [label="ForLoop19120550  for (j=jt; j<=min(ny-1,jjj+63); j=j+1) {...",shape=box];
	ForLoop19120550 -> 19199963;
	ForLoop19120550 -> _JOIN_19120550;
	ForLoop19120552 [label="ForLoop19120552  for (jjj=0; jjj<=ny-1; jjj=jjj+64) {...",shape=box];
	ForLoop19120552 -> ForLoop19119669;
	ForLoop19120552 -> _JOIN_19120552;
	ForLoop19153560 [label="ForLoop19153560  for (ii=iii; ii<=min(nx-1,iii+192); ii=ii+64) {...",shape=box];
	ForLoop19153560 -> 19087145;
	ForLoop19153560 -> _JOIN_19153560;
	ForLoop19153561 [label="ForLoop19153561  for (iii=0; iii<=nx-1; iii=iii+256) {...",shape=box];
	ForLoop19153561 -> ForLoop19153560;
	ForLoop19153561 -> _JOIN_19153561;
	_JOIN_19152558 [label="_JOIN_19152558None...",shape=box];
	_JOIN_19152558 -> ForLoop19152597;
	ForLoop19119669 [label="ForLoop19119669  for (jt=jjj; jt<=min(ny-1,jjj+63)-31; jt=jt+32) {...",shape=box];
	ForLoop19119669 -> 19197509;
	ForLoop19119669 -> _JOIN_19119669;
	19377301 [label="19377301  double scv_95, scv_96, scv_97, scv_98, scv_99, scv_100, scv_101, scv_102;...",shape=box];
	_JOIN_19153485 [label="_JOIN_19153485None...",shape=box];
	_JOIN_19153485 -> ForLoop19153553;
	19152596 [label="19152596  scv_126=scv_126+A[i*ny+j]*x[j];...",shape=box];
	19152596 -> _JOIN_19152597;
	19370216 [label="19370216  double scv_65, scv_66, scv_67, scv_68, scv_69, scv_70, scv_71, scv_72;...",shape=box];
	_JOIN_18744316 [label="_JOIN_18744316None...",shape=box];
	_JOIN_18744316 -> 19087112;
	18744591 [label="18744591  register int cbv_2, cbv_3;...",shape=box];
	19087112 [label="19087112  double x_copy;...",shape=box];
	19273143 [label="19273143  double scv_64;...",shape=box];
	19269660 [label="19269660  double scv_34, scv_35, scv_36, scv_37, scv_38, scv_39, scv_40, scv_41;...",shape=box];
	19370234 [label="19370234  tmp[(i+20)]=scv_65;...",shape=box];
	_JOIN_19153561 [label="_JOIN_19153561None...",shape=box];
	ForLoop19153558 [label="Forexpected=9369846271501.798828
actual=9369846271501.798828
Loop19153558  for (i=(min(nx-1,ii+63))-(((min(nx-1,ii+63))-(ii)+1)%30)+1; i<=min(nx-1,ii+63); i=i+1) {...",shape=box];
	ForLoop19153558 -> 19382571;
	ForLoop19153558 -> _JOIN_19153558;
	ForLoop19153485 [label="ForLoop19153485  for (k=kk; k<=min(ny-1,kk+63)-29; k=k+30) {...",shape=box];
	ForLoop19153485 -> 19377301;
	ForLoop19153485 -> _JOIN_19153485;
	_JOIN_19153553 [label="_JOIN_19153553None...",shape=box];
	_JOIN_19153553 -> _JOIN_19153555;
	18744315 [label="18744315  y[i]=0.0;...",shape=box];
	18744315 -> _JOIN_18744316;
	19377999 [label="19377999  double scv_125;...",shape=box];
	_JOIN_19153556 [label="_JOIN_19153556None...",shape=box];
	_JOIN_19153556 -> 19382583;
	_JOIN_19153555 [label="_JOIN_19153555None...",shape=box];
	_JOIN_19153555 -> _JOIN_19153556;
	_JOIN_19153558 [label="_JOIN_19153558None...",shape=box];
	_JOIN_19153558 -> _JOIN_19153560;
	18743588 [label="18743588  int i;...",shape=box];
	18744020 [label="18744020  y[i]=0.0;...",shape=box];
	ForLoop19150815 [label="ForLoop19150815  for (k=kk; k<=min(ny-1,kk+63)-29; k=k+30) {...",shape=box];
	ForLoop19150815 -> 19269660;
	ForLoop19150815 -> _JOIN_19150815;
	ForLoop19151640 [label="ForLoop19151640  for (kk=kkk; kk<=min(ny-1,kkk+960); kk=kk+64) {...",shape=box];
	ForLoop19151640 -> 19120584;
	ForLoop19151640 -> _JOIN_19151640;
	ForLoop18744247 [label="ForLoop18744247  for (i=0; i<=cbv_1; i=i+26) {...",shape=box];
	ForLoop18744247 -> 18744020;
	ForLoop18744247 -> _JOIN_18744247;
	ForLoop19151644 [label="ForLoop19151644  for (i=ii; i<=min(nx-1,ii+63)-29; i=i+30) {...",shape=box];
	ForLoop19151644 -> 19370216;
	ForLoop19151644 -> _JOIN_19151644;
	19197509 [label="19197509  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest83.exe __orio_perftest83.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest83.exe  
{'[3, 0, 3, 3, 1, 5, 0, 0, 25, 29, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.232502}
{'[3, 0, 3, 3, 1, 5, 0, 0, 25, 29, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.23366}
{'[3, 0, 3, 3, 1, 5, 0, 0, 25, 29, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.22914}
{'[3, 0, 3, 3, 1, 5, 0, 0, 25, 29, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.229458}
{'[3, 0, 3, 3, 1, 5, 0, 0, 25, 29, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.229255}
{'[3, 0, 3, 3, 1, 5, 0, 0, 25, 29, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.229631}
{'[3, 0, 3, 3, 1, 5, 0, 0, 25, 29, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.228136}
{'[3, 0, 3, 3, 1, 5, 0, 0, 25, 29, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.23386}
{'[3, 0, 3, 3, 1, 5, 0, 0, 25, 29, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.228552}
{'[3, 0, 3, 3, 1, 5, 0, 0, 25, 29, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.22833}
{'[3, 0, 3, 3, 1, 5, 0, 0, 25, 29, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.228715}
{'[3, 0, 3, 3, 1, 5, 0, 0, 25, 29, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.229291}
{'[3, 0, 3, 3, 1, 5, 0, 0, 25, 29, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.229787}
{'[3, 0, 3, 3, 1, 5, 0, 0, 25, 29, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.229559}
{'[3, 0, 3, 3, 1, 5, 0, 0, 25, 29, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.233098}
{'[3, 0, 3, 3, 1, 5, 0, 0, 25, 29, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.229095}
{'[3, 0, 3, 3, 1, 5, 0, 0, 25, 29, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.229485}
{'[3, 0, 3, 3, 1, 5, 0, 0, 25, 29, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.229116}
{'[3, 0, 3, 3, 1, 5, 0, 0, 25, 29, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.228714}
{'[3, 0, 3, 3, 1, 5, 0, 0, 25, 29, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.228994}
{'[3, 0, 3, 3, 1, 5, 0, 0, 25, 29, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.230581}
{'[3, 0, 3, 3, 1, 5, 0, 0, 25, 29, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.229027}
{'[3, 0, 3, 3, 1, 5, 0, 0, 25, 29, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.229554}
{'[3, 0, 3, 3, 1, 5, 0, 0, 25, 29, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.228948}
{'[3, 0, 3, 3, 1, 5, 0, 0, 25, 29, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.229462}
{'[3, 0, 3, 3, 1, 5, 0, 0, 25, 29, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.229277}
{'[3, 0, 3, 3, 1, 5, 0, 0, 25, 29, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.227902}
{'[3, 0, 3, 3, 1, 5, 0, 0, 25, 29, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.22985}
{'[3, 0, 3, 3, 1, 5, 0, 0, 25, 29, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.229137}
{'[3, 0, 3, 3, 1, 5, 0, 0, 25, 29, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.229325}

ouWARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
t:
 ["{'[3, 0, 3, 3, 1, 5, 0, 0, 25, 29, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.232502}", "{'[3, 0, 3, 3, 1, 5, 0, 0, 25, 29, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.23366}", "{'[3, 0, 3, 3, 1, 5, 0, 0, 25, 29, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.22914}", "{'[3, 0, 3, 3, 1, 5, 0, 0, 25, 29, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.229458}", "{'[3, 0, 3, 3, 1, 5, 0, 0, 25, 29, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.229255}", "{'[3, 0, 3, 3, 1, 5, 0, 0, 25, 29, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.229631}", "{'[3, 0, 3, 3, 1, 5, 0, 0, 25, 29, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.228136}", "{'[3, 0, 3, 3, 1, 5, 0, 0, 25, 29, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.23386}", "{'[3, 0, 3, 3, 1, 5, 0, 0, 25, 29, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.228552}", "{'[3, 0, 3, 3, 1, 5, 0, 0, 25, 29, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.22833}", "{'[3, 0, 3, 3, 1, 5, 0, 0, 25, 29, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.228715}", "{'[3, 0, 3, 3, 1, 5, 0, 0, 25, 29, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.229291}", "{'[3, 0, 3, 3, 1, 5, 0, 0, 25, 29, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.229787}", "{'[3, 0, 3, 3, 1, 5, 0, 0, 25, 29, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.229559}", "{'[3, 0, 3, 3, 1, 5, 0, 0, 25, 29, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.233098}", "{'[3, 0, 3, 3, 1, 5, 0, 0, 25, 29, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.229095}", "{'[3, 0, 3, 3, 1, 5, 0, 0, 25, 29, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.229485}", "{'[3, 0, 3, 3, 1, 5, 0, 0, 25, 29, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.229116}", "{'[3, 0, 3, 3, 1, 5, 0, 0, 25, 29, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.228714}", "{'[3, 0, 3, 3, 1, 5, 0, 0, 25, 29, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.228994}", "{'[3, 0, 3, 3, 1, 5, 0, 0, 25, 29, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.230581}", "{'[3, 0, 3, 3, 1, 5, 0, 0, 25, 29, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.229027}", "{'[3, 0, 3, 3, 1, 5, 0, 0, 25, 29, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.229554}", "{'[3, 0, 3, 3, 1, 5, 0, 0, 25, 29, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.228948}", "{'[3, 0, 3, 3, 1, 5, 0, 0, 25, 29, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.229462}", "{'[3, 0, 3, 3, 1, 5, 0, 0, 25, 29, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.229277}", "{'[3, 0, 3, 3, 1, 5, 0, 0, 25, 29, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.227902}", "{'[3, 0, 3, 3, 1, 5, 0, 0, 25, 29, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.22985}", "{'[3, 0, 3, 3, 1, 5, 0, 0, 25, 29, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.229137}", "{'[3, 0, 3, 3, 1, 5, 0, 0, 25, 29, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.229325}"]
returning from 'run': {'[3, 0, 3, 3, 1, 5, 0, 0, 25, 29, 0, 29, 0, 2, 0, 1, 1, 0]': ([0.232502, 0.23366, 0.22914, 0.229458, 0.229255, 0.229631, 0.228136, 0.23386, 0.228552, 0.22833, 0.228715, 0.229291, 0.229787, 0.229559, 0.233098, 0.229095, 0.229485, 0.229116, 0.228714, 0.228994, 0.230581, 0.229027, 0.229554, 0.228948, 0.229462, 0.229277, 0.227902, 0.22985, 0.229137, 0.229325], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.232502, 0.23366, 0.22914, 0.229458, 0.229255, 0.229631, 0.228136, 0.23386, 0.228552, 0.22833, 0.228715, 0.229291, 0.229787, 0.229559, 0.233098, 0.229095, 0.229485, 0.229116, 0.228714, 0.228994, 0.230581, 0.229027, 0.229554, 0.228948, 0.229462, 0.229277, 0.227902, 0.22985, 0.229137, 0.229325], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[3, 0, 3, 3, 1, 5, 0, 0, 25, 29, 0, 29, 0, 2, 0, 1, 1, 0]': ([0.232502, 0.23366, 0.22914, 0.229458, 0.229255, 0.229631, 0.228136, 0.23386, 0.228552, 0.22833, 0.228715, 0.229291, 0.229787, 0.229559, 0.233098, 0.229095, 0.229485, 0.229116, 0.228714, 0.228994, 0.230581, 0.229027, 0.229554, 0.228948, 0.229462, 0.229277, 0.227902, 0.22985, 0.229137, 0.229325], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [4, 6, 6, 4, 4, 5, 1, 26, 1, 0, 0, 2, 1, 1]
Fixed Factors: {'ACOPY_y': 0, 'U1_I': 25, 'U_J': 0, 'SCR': 1}
Testing candidate 14: [4, 6, 6, 4, 4, 5, 1, 0, 25, 26, 0, 1, 0, 0, 2, 1, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	100
        Max loop nest depth: 	6
        Additions: 		4723
        Multiplications: 	2016
        Divisions: 		0
        Logical: 		0
        Reads: 			9326
        Writes: 		1735
        Comparisons:		100
        Gotos: 			0
        
digraph CFG {
	_JOIN_19704420 [label="_JOIN_19704420None...",shape=box];
	_JOIN_19704420 -> 19918100;
	_JOIN_19706704 [label="_JOIN_19706704None...",shape=box];
	_JOIN_19706704 -> _JOIN_19706705;
	19752634 [label="19752634  double scv_49, scv_50;...",shape=box];
	19703864 [label="19703864  int k;...",shape=box];
	19702284 [label="19702284  int k;...",shape=box];
	_JOIN_19705126 [label="_JOIN_19705126None...",shape=box];
	_JOIN_19705126 -> 19705128;
	_JOIN_19701966 [label="_JOIN_19701966None...",shape=box];
	_JOIN_19701966 -> 19701968;
	19755966 [label="19755966  double scv_91, scv_92;...",shape=box];
	19915424 [label="19915424  register int cbv_28, cbv_29;...",shape=box];
	19756558 [label="19756558  double scv_99;...",shape=box];
	_JOIN_19702598 [label="_JOIN_19702598None...",shape=box];
	_JOIN_19702598 -> 19702600;
	_JOIN_19704020 [label="_JOIN_19704020None...",shape=box];
	_JOIN_19704020 -> 19704022;
	ForLoop19702914 [label="ForLoop19702914  for (k=cbv_34; k<=cbv_35; k=k+1) {...",shape=box];
	ForLoop19702914 -> 19753940;
	ForLoop19702914 -> _JOIN_19702914;
	19913459 [label="19913459  register int cbv_2;...",shape=box];
	ForLoop19704894 [label="ForLoop19704894  for (k=kt; k<=cbv_72; k=k+2) {...",shape=box];
	ForLoop19704894 -> 19756918;
	ForLoop19704894 -> _JOIN_19704894;
	19753110 [label="19753110  double scv_55, scv_56;...",shape=box];
	19837884 [label="19837884  double scv_115, scv_116, scv_117, scv_118, scv_119, scv_120, scv_121, scv_122;...",shape=box];
	ForLoop19702050 [label="ForLoop19702050  for (k=kt; k<=cbv_18; k=k+2) {...",shape=box];
	ForLoop19702050 -> 19752634;
	ForLoop19702050 -> _JOIN_19702050;
	_JOIN_19706705 [label="_JOIN_19706705None...",shape=box];
	_JOIN_19706705 -> 19846199;
	19914755 [label="19914755  register int cbv_19, cbv_20;...",shape=box];
	19756204 [label="19756204  double scv_94, scv_95;...",shape=box];
	_JOIN_19703472 [label="_JOIN_19703472None...",shape=box];
	_JOIN_19703472 -> 19916762;
	19705286 [label="19705286  int k;...",shape=box];
	ForLoop19706562 [label="ForLoop19706562  for (kt=kk; kt<=cbv_85; kt=kt+32) {...",shape=box];
	ForLoop19706562 -> 19840992;
	ForLoop19706562 -> _JOIN_19706562;
	19916985 [label="19916985  register int cbv_49, cbv_50;...",shape=box];
	ForLoop19701892 [label="ForLoop19701892  for (k=kt; k<=cbv_15; k=k+2) {...",shape=box];
	ForLoop19701892 -> 19752396;
	ForLoop19701892 -> _JOIN_19701892;
	19756796 [label="19756796  double scv_102;...",shape=box];
	19752872 [label="19752872  double scv_52, scv_53;...",shape=box];
	19913863 [label="19913863  register int cbv_7, cbv_8;...",shape=box];
	ForLoop19705449 [label="ForLoop19705449  for (i=ii; i<=min(nx-1,ii+127)-26; i=i+27) {...",shape=box];
	ForLoop19705449 -> 19837884;
	ForLoop19705449 -> _JOIN_19705449;
	_JOIN_19704736 [label="_JOIN_19704736None...",shape=box];
	_JOIN_19704736 -> 19918546;
	ForLoop19704262 [label="ForLoop19704262  for (k=kt; k<=cbv_60; k=k+2) {...",shape=box];
	ForLoop19704262 -> 19755966;
	ForLoop19704262 -> _JOIN_19704262;
	19916539 [label="19916539  register int cbv_43, cbv_44;...",shape=box];
	ForLoop19705442 [label="ForLoop19705442  for (k=cbv_82; k<=cbv_83; k=k+1) {...",shape=box];
	ForLoop19705442 -> 19757748;
	ForLoop19705442 -> _JOIN_19705442;
	19917654 [label="19917654  register int cbv_58, cbv_59;...",shape=box];
	ForLoop19705445 [label="ForLoop19705445  for (kk=kkk; kk<=min(ny-1,kkk+512); kk=kk+512) {...",shape=box];
	ForLoop19705445 -> 19913459;
	ForLoop19705445 -> _JOIN_19705445;
	ForLoop19705447 [label="ForLoop19705447  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop19705447 -> ForLoop19705445;
	ForLoop19705447 -> _JOIN_19705447;
	ForLoop19704494 [label="ForLoop19704494  for (k=cbv_64; k<=cbv_65; k=k+1) {...",shape=box];
	ForLoop19704494 -> 19756320;
	ForLoop19704494 -> _JOIN_19704494;
	19757156 [label="19757156  double scv_106, scv_107;...",shape=box];
	19915647 [label="19915647  register int cbv_31, cbv_32;...",shape=box];
	19704022 [label="19704022  int k;...",shape=box];
	_JOIN_19703946 [label="_JOIN_19703946None...",shape=box];
	_JOIN_19703946 -> 19917431;
	_JOIN_19706710 [label="_JOIN_19706710None...",shape=box];
	19752036 [label="19752036  double scv_42;...",shape=box];
	_JOIN_19706562 [label="_JOIN_19706562None...",shape=box];
	_JOIN_19706562 -> 19706563;
	19846187 [label="19846187  double scv_177;...",shape=box];
	19757394 [label="19757394  double scv_109, scv_110;...",shape=box];
	ForLoop19704652 [label="ForLoop19704652  for (k=cbv_67; k<=cbv_68; k=k+1) {...",shape=box];
	ForLoop19704652 -> 19756558;
	ForLoop19704652 -> _JOIN_19704652;
	ForLoop19703314 [label="ForLoop19703314  for (k=kt; k<=cbv_42; k=k+2) {...",shape=box];
	ForLoop19703314 -> 19754538;
	ForLoop19703314 -> _JOIN_19703314;
	19704654 [label="19704654  int k;...",shape=box];
	ForLoop19463194 [label="ForLoop19463194  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop19463194 -> 19463193;
	ForLoop19463194 -> _JOIN_19463194;
	ForLoop19701808 [label="ForLoop19701808  for (k=cbv_13; k<=cbv_14; k=k+1) {...",shape=box];
	ForLoop19701808 -> 19752274;
	ForLoop19701808 -> _JOIN_19701808;
	_JOIN_19463194 [label="_JOIN_19463194None...",shape=box];
	_JOIN_19463194 -> 19670154;
	_JOIN_19705284 [label="_JOIN_19705284None...",shape=box];
	_JOIN_19705284 -> 19705286;
	19703232 [label="19703232  int k;...",shape=box];
	19920667 [label="19920667  register int cbv_85;...",shape=box];
	19704180 [label="19704180  int k;...",shape=box];
	19701196 [label="19701196  int k;...",shape=box];
	_JOIN_19702124 [label="_JOIN_19702124None...",shape=box];
	_JOIN_19702124 -> 19702126;
	ForLoop19702756 [label="ForLoop19702756  for (k=cbv_31; k<=cbv_32; k=k+1) {...",shape=box];
	ForLoop19702756 -> 19753702;
	ForLoop19702756 -> _JOIN_19702756;
	19918769 [label="19918769  register int cbv_73, cbv_74;...",shape=box];
	19753940 [label="19753940  double scv_66;...",shape=box];
	19704812 [label="19704812  int k;...",shape=box];
	19706563 [label="19706563  int k;...",shape=box];
	19704338 [label="19704338  int k;...",shape=box];
	ForLoop19701734 [label="ForLoop19701734  for (k=kt; k<=cbv_12; k=k+2) {...",shape=box];
	ForLoop19701734 -> 19752158;
	ForLoop19701734 -> _JOIN_19701734;
	_JOIN_19704336 [label="_JOIN_19704336None...",shape=box];
	_JOIN_19704336 -> 19704338;
	19752750 [label="19752750  double scv_51;...",shape=box];
	ForLoop19703230 [label="ForLoop19703230  for (k=cbv_40; k<=cbv_41; k=k+1) {...",shape=box];
	ForLoop19703230 -> 19754416;
	ForLoop19703230 -> _JOIN_19703230;
	ForLoop19702524 [label="ForLoop19702524  for (k=kt; k<=cbv_27; k=k+2) {...",shape=box];
	ForLoop19702524 -> 19753348;
	ForLoop19702524 -> _JOIN_19702524;
	_JOIN_19706633 [label="_JOIN_19706633None...",shape=box];
	_JOIN_19706633 -> 19920848;
	19841749 [label="19841749  double scv_174, scv_175;...",shape=box];
	ForLoop19703156 [label="ForLoop19703156  for (k=kt; k<=cbv_39; k=k+2) {...",shape=box];
	ForLoop19703156 -> 19754300;
	ForLoop19703156 -> _JOIN_19703156;
	ForLoop19703546 [label="ForLoop19703546  for (k=cbv_46; k<=cbv_47; k=k+1) {...",shape=box];
	ForLoop19703546 -> 19754892;
	ForLoop19703546 -> _JOIN_19703546;
	19752512 [label="19752512  double scv_48;...",shape=box];
	19670154 [label="19670154  double x_copy[512];...",shape=box];
	ForLoop19705590 [label="ForLoop19705590  for (jj=0; jj<=ny-1; jj=jj+512) {...",shape=box];
	ForLoop19705590 -> 19705546;
	ForLoop19705590 -> _JOIN_19705590;
	ForLoop19703704 [label="ForLoop19703704  for (k=cbv_49; k<=cbv_50; k=k+1) {...",shape=box];
	ForLoop19703704 -> 19755130;
	ForLoop19703704 -> _JOIN_19703704;
	19757034 [label="19757034  double scv_105;...",shape=box];
	_JOIN_19705445 [label="_JOIN_19705445None...",shape=box];
	_JOIN_19705445 -> _JOIN_19705447;
	19753586 [label="19753586  double scv_61, scv_62;...",shape=box];
	ForLoop19704420 [label="ForLoop19704420  for (k=kt; k<=cbv_63; k=k+2) {...",shape=box];
	ForLoop19704420 -> 19756204;
	ForLoop19704420 -> _JOIN_19704420;
	_JOIN_19701334 [label="_JOIN_19701334None...",shape=box];
	_JOIN_19701334 -> 19701336;
	19754416 [label="19754416  double scv_72;...",shape=box];
	_JOIN_19704494 [label="_JOIN_19704494None...",shape=box];
	_JOIN_19704494 -> 19704496;
	19918546 [label="19918546  register int cbv_70, cbv_71;...",shape=box];
	_JOIN_19701195 [label="_JOIN_19701195None...",shape=box];
	_JOIN_19701195 -> 19701196;
	_JOIN_19703072 [label="_JOIN_19703072None...",shape=box];
	_JOIN_19703072 -> 19703074;
	19913640 [label="19913640  register int cbv_4, cbv_5;...",shape=box];
	ForLoop19704736 [label="ForLoop19704736  for (k=kt; k<=cbv_69; k=k+2) {...",shape=box];
	ForLoop19704736 -> 19756680;
	ForLoop19704736 -> _JOIN_19704736;
	19916316 [label="19916316  register int cbv_40, cbv_41;...",shape=box];
	19915870 [label="19915870  register int cbv_34, cbv_35;...",shape=box];
	_JOIN_19704578 [label="_JOIN_19704578None...",shape=box];
	_JOIN_19704578 -> 19918323;
	19916093 [label="19916093  register int cbv_37, cbv_38;...",shape=box];
	ForLoop19702998 [label="ForLoop19702998  for (k=kt; k<=cbv_36; k=k+2) {...",shape=box];
	ForLoop19702998 -> 19754062;
	ForLoop19702998 -> _JOIN_19702998;
	_JOIN_19704652 [label="_JOIN_19704652None...",shape=box];
	_JOIN_19704652 -> 19704654;
	19840992 [label="19840992  double scv_142, scv_143, scv_144, scv_145, scv_146, scv_147, scv_148, scv_149;...",shape=box];
	_JOIN_19703704 [label="_JOIN_19703704None...",shape=box];
	_JOIN_19703704 -> 19703706;
	_JOIN_19706709 [label="_JOIN_19706709None...",shape=box];
	_JOIN_19706709 -> _JOIN_19706710;
	_JOIN_19703630 [label="_JOIN_19703630None...",shape=box];
	_JOIN_19703630 -> 19916985;
	ForLoop19701334 [label="ForLoop19701334  for (k=cbv_4; k<=cbv_5; k=k+1) {...",shape=box];
	ForLoop19701334 -> 19751560;
	ForLoop19701334 -> _JOIN_19701334;
	ForLoop19703630 [label="ForLoop19703630  for (k=kt; k<=cbv_48; k=k+2) {...",shape=box];
	ForLoop19703630 -> 19755014;
	ForLoop19703630 -> _JOIN_19703630;
	_JOIN_19702524 [label="_JOIN_19702524None...",shape=box];
	_JOIN_19702524 -> 19915424;
	_JOIN_19703230 [label="_JOIN_19703230None...",shape=box];
	_JOIN_19703230 -> 19703232;
	19702126 [label="19702126  int k;...",shape=box];
	19756680 [label="19756680  double scv_100, scv_101;...",shape=box];
	19753348 [label="19753348  double scv_58, scv_59;...",shape=box];
	19703706 [label="19703706  int k;...",shape=box];
	_JOIN_19705447 [label="_JOIN_19705447None...",shape=box];
	_JOIN_19705447 -> 19837902;
	19914086 [label="19914086  register int cbv_10, cbv_11;...",shape=box];
	_JOIN_19701418 [label="_JOIN_19701418None...",shape=box];
	_JOIN_19701418 -> 19913863;
	_JOIN_19704894 [label="_JOIN_19704894None...",shape=box];
	_JOIN_19704894 -> 19918769;
	19753226 [label="19753226  double scv_57;...",shape=box];
	19701968 [label="19701968  int k;...",shape=box];
	ForLoop19701195 [label="ForLoop19701195  for (kt=kk; kt<=cbv_2; kt=kt+32) {...",shape=box];
	ForLoop19701195 -> 19749032;
	ForLoop19701195 -> _JOIN_19701195;
	19914978 [label="19914978  register int cbv_22, cbv_23;...",shape=box];
	19749032 [label="19749032  double scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8, scv_9;...",shape=box];
	_JOIN_19705210 [label="_JOIN_19705210None...",shape=box];
	_JOIN_19705210 -> 19919215;
	_JOIN_19704178 [label="_JOIN_19704178None...",shape=box];
	_JOIN_19704178 -> 19704180;
	ForLoop19702124 [label="ForLoop19702124  for (k=cbv_19; k<=cbv_20; k=k+1) {...",shape=box];
	ForLoop19702124 -> 19752750;
	ForLoop19702124 -> _JOIN_19702124;
	19915201 [label="19915201  register int cbv_25, cbv_26;...",shape=box];
	19670491 [label="19670491  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	19754538 [label="19754538  double scv_73, scv_74;...",shape=box];
	_JOIN_19701808 [label="_JOIN_19701808None...",shape=box];
	_JOIN_19701808 -> 19701810;
	_JOIN_19703788 [label="_JOIN_19703788None...",shape=box];
	_JOIN_19703788 -> 19917208;
	19751798 [label="19751798  double scv_39;...",shape=box];
	19756918 [label="19756918  double scv_103, scv_104;...",shape=box];
	ForLoop19704020 [label="ForLoop19704020  for (k=cbv_55; k<=cbv_56; k=k+1) {...",shape=box];
	ForLoop19704020 -> 19755606;
	ForLoop19704020 -> _JOIN_19704020;
	19704496 [label="19704496  int k;...",shape=box];
	_JOIN_19706707 [label="_JOIN_19706707None...",shape=box];
	_JOIN_19706707 -> _JOIN_19706709;
	ForLoop19703788 [label="ForLoop19703788  for (k=kt; k<=cbv_51; k=k+2) {...",shape=box];
	ForLoop19703788 -> 19755252;
	ForLoop19703788 -> _JOIN_19703788;
	19703390 [label="19703390  int k;...",shape=box];
	ForLoop19704336 [label="ForLoop19704336  for (k=cbv_61; k<=cbv_62; k=k+1) {...",shape=box];
	ForLoop19704336 -> 19756082;
	ForLoop19704336 -> _JOIN_19704336;
	_JOIN_19701734 [label="_JOIN_19701734None...",shape=box];
	_JOIN_19701734 -> 19914309;
	_JOIN_19702440 [label="_JOIN_19702440None...",shape=box];
	_JOIN_19702440 -> 19702442;
	19701494 [label="19701494  int k;...",shape=box];
	_JOIN_19701650 [label="_JOIN_19701650None...",shape=box];
	_JOIN_19701650 -> 19701652;
	19919438 [label="19919438  register int cbv_82, cbv_83;...",shape=box];
	19916762 [label="19916762  register int cbv_46, cbv_47;...",shape=box];
	19702916 [label="19702916  int k;...",shape=box];
	ForLoop19706707 [label="ForLoop19706707  for (i=(min(nx-1,ii+127))-(((min(nx-1,ii+127))-(ii)+1)%27)+1; i<=min(nx-1,ii+127); i=i+1) {...",shape=box];
	ForLoop19706707 -> 19846187;
	ForLoop19706707 -> _JOIN_19706707;
	19841856 [label="19841856  double scv_176;...",shape=box];
	19702758 [label="19702758  int k;...",shape=box];
	_JOIN_19702366 [label="_JOIN_19702366None...",shape=box];
	_JOIN_19702366 -> 19915201;
	19754654 [label="19754654  double scv_75;...",shape=box];
	_JOIN_19702914 [label="_JOIN_19702914None...",shape=box];
	_JOIN_19702914 -> 19702916;
	_JOIN_19704968 [label="_JOIN_19704968None...",shape=box];
	_JOIN_19704968 -> 19704970;
	19751560 [label="19751560  double scv_36;...",shape=box];
	19705128 [label="19705128  int k;...",shape=box];
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 19462466;
	ForLoop19704810 [label="ForLoop19704810  for (k=cbv_70; k<=cbv_71; k=k+1) {...",shape=box];
	ForLoop19704810 -> 19756796;
	ForLoop19704810 -> _JOIN_19704810;
	19701810 [label="19701810  int k;...",shape=box];
	19703548 [label="19703548  int k;...",shape=box];
	ForLoop19706633 [label="ForLoop19706633  for (k=kt; k<=cbv_86; k=k+2) {...",shape=box];
	ForLoop19706633 -> 19841749;
	ForLoop19706633 -> _JOIN_19706633;
	19837902 [label="19837902  tmp[(i+20)]=scv_115;...",shape=box];
	19757748 [label="19757748  double scv_114;...",shape=box];
	_JOIN_19701492 [label="_JOIN_19701492None...",shape=box];
	_JOIN_19701492 -> 19701494;
	19701652 [label="19701652  int k;...",shape=box];
	19703074 [label="19703074  int k;...",shape=box];
	19755728 [label="19755728  double scv_88, scv_89;...",shape=box];
	_JOIN_19702050 [label="_JOIN_19702050None...",shape=box];
	_JOIN_19702050 -> 19914755;
	19754776 [label="19754776  double scv_76, scv_77;...",shape=box];
	_JOIN_19701892 [label="_JOIN_19701892None...",shape=box];
	_JOIN_19701892 -> 19914532;
	ForLoop19703388 [label="ForLoop19703388  for (k=cbv_43; k<=cbv_44; k=k+1) {...",shape=box];
	ForLoop19703388 -> 19754654;
	ForLoop19703388 -> _JOIN_19703388;
	19846199 [label="19846199  tmp[i]=scv_177;...",shape=box];
	19846199 -> _JOIN_19706707;
	_JOIN_19705449 [label="_JOIN_19705449None...",shape=box];
	_JOIN_19705449 -> ForLoop19706707;
	19670187 [label="19670187  int i;...",shape=box];
	19670187 -> ForLoop19705449;
	_JOIN_19704104 [label="_JOIN_19704104None...",shape=box];
	_JOIN_19704104 -> 19917654;
	19757510 [label="19757510  double scv_111;...",shape=box];
	_JOIN_19705052 [label="_JOIN_19705052None...",shape=box];
	_JOIN_19705052 -> 19918992;
	_JOIN_19701266 [label="_JOIN_19701266None...",shape=box];
	_JOIN_19701266 -> 19913640;
	ForLoop19705052 [label="ForLoop19705052  for (k=kt; k<=cbv_75; k=k+2) {...",shape=box];
	ForLoop19705052 -> 19757156;
	ForLoop19705052 -> _JOIN_19705052;
	_JOIN_19701576 [label="_JOIN_19701576None...",shape=box];
	_JOIN_19701576 -> 19914086;
	19702600 [label="19702600  int k;...",shape=box];
	19462898 [label="19462898  y[i]=0.0;...",shape=box];
	_JOIN_19703862 [label="_JOIN_19703862None...",shape=box];
	_JOIN_19703862 -> 19703864;
	ForLoop19706709 [label="ForLoop19706709  for (ii=iii; ii<=min(nx-1,iii+384); ii=ii+128) {...",shape=box];
	ForLoop19706709 -> 19670187;
	ForLoop19706709 -> _JOIN_19706709;
	_JOIN_19702682 [label="_JOIN_19702682None...",shape=box];
	_JOIN_19702682 -> 19915647;
	19752274 [label="19752274  double scv_45;...",shape=box];
	ForLoop19705126 [label="ForLoop19705126  for (k=cbv_76; k<=cbv_77; k=k+1) {...",shape=box];
	ForLoop19705126 -> 19757272;
	ForLoop19705126 -> _JOIN_19705126;
	19755606 [label="19755606  double scv_87;...",shape=box];
	_JOIN_19702840 [label="_JOIN_19702840None...",shape=box];
	_JOIN_19702840 -> 19915870;
	_JOIN_19702282 [label="_JOIN_19702282None...",shape=box];
	_JOIN_19702282 -> 19702284;
	19702442 [label="19702442  int k;...",shape=box];
	19756442 [label="19756442  double scv_97, scv_98;...",shape=box];
	19918323 [label="19918323  register int cbv_67, cbv_68;...",shape=box];
	ForLoop19701966 [label="ForLoop19701966  for (k=cbv_16; k<=cbv_17; k=k+1) {...",shape=box];
	ForLoop19701966 -> 19752512;
	ForLoop19701966 -> _JOIN_19701966;
	_JOIN_19705442 [label="_JOIN_19705442None...",shape=box];
	_JOIN_19705442 -> _JOIN_19705445;
	_JOIN_19672172 [label="_JOIN_19672172None...",shape=box];
	_JOIN_19672172 -> _JOIN_19672174;
	_JOIN_19672174 [label="_JOIN_19672174None...",shape=box];
	_JOIN_19672174 -> ForLoop19705447;
	ForLoop19701576 [label="ForLoop19701576  for (k=kt; k<=cbv_9; k=k+2) {...",shape=box];
	ForLoop19701576 -> 19751920;
	ForLoop19701576 -> _JOIN_19701576;
	19751682 [label="19751682  double scv_37, scv_38;...",shape=box];
	_JOIN_19704810 [label="_JOIN_19704810None...",shape=box];
	_JOIN_19704810 -> 19704812;
	19914309 [label="19914309  register int cbv_13, cbv_14;...",shape=box];
	_JOIN_19702208 [label="_JOIN_19702208None...",shape=box];
	_JOIN_19702208 -> 19914978;
	19705587 [label="19705587  scv_177=scv_177+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	19705587 -> _JOIN_19705588;
	_JOIN_19702998 [label="_JOIN_19702998None...",shape=box];
	_JOIN_19702998 -> 19916093;
	_JOIN_19704262 [label="_JOIN_19704262None...",shape=box];
	_JOIN_19704262 -> 19917877;
	ForLoop19463125 [label="ForLoop19463125  for (i=0; i<=cbv_1; i=i+26) {...",shape=box];
	ForLoop19463125 -> 19462898;
	ForLoop19463125 -> _JOIN_19463125;
	ForLoop19705368 [label="ForLoop19705368  for (k=kt; k<=cbv_81; k=k+2) {...",shape=box];
	ForLoop19705368 -> 19757632;
	ForLoop19705368 -> _JOIN_19705368;
	19757632 [label="19757632  double scv_112, scv_113;...",shape=box];
	_JOIN_19702756 [label="_JOIN_19702756None...",shape=box];
	_JOIN_19702756 -> 19702758;
	ForLoop19701492 [label="ForLoop19701492  for (k=cbv_7; k<=cbv_8; k=k+1) {...",shape=box];
	ForLoop19701492 -> 19751798;
	ForLoop19701492 -> _JOIN_19701492;
	19754062 [label="19754062  double scv_67, scv_68;...",shape=box];
	19920848 [label="19920848  register int cbv_87, cbv_88;...",shape=box];
	ForLoop19703472 [label="ForLoop19703472  for (k=kt; k<=cbv_45; k=k+2) {...",shape=box];
	ForLoop19703472 -> 19754776;
	ForLoop19703472 -> _JOIN_19703472;
	19752396 [label="19752396  double scv_46, scv_47;...",shape=box];
	19754892 [label="19754892  double scv_78;...",shape=box];
	_JOIN_19705368 [label="_JOIN_19705368None...",shape=box];
	_JOIN_19705368 -> 19919438;
	ForLoop19701650 [label="ForLoop19701650  for (k=cbv_10; k<=cbv_11; k=k+1) {...",shape=box];
	ForLoop19701650 -> 19752036;
	ForLoop19701650 -> _JOIN_19701650;
	ForLoop19702366 [label="ForLoop19702366  for (k=kt; k<=cbv_24; k=k+2) {...",shape=box];
	ForLoop19702366 -> 19753110;
	ForLoop19702366 -> _JOIN_19702366;
	ForLoop19702208 [label="ForLoop19702208  for (k=kt; k<=cbv_21; k=k+2) {...",shape=box];
	ForLoop19702208 -> 19752872;
	ForLoop19702208 -> _JOIN_19702208;
	_JOIN_19703156 [label="_JOIN_19703156None...",shape=box];
	_JOIN_19703156 -> 19916316;
	ForLoop19703946 [label="ForLoop19703946  for (k=kt; k<=cbv_54; k=k+2) {...",shape=box];
	ForLoop19703946 -> 19755490;
	ForLoop19703946 -> _JOIN_19703946;
	ForLoop19703072 [label="ForLoop19703072  for (k=cbv_37; k<=cbv_38; k=k+1) {...",shape=box];
	ForLoop19703072 -> 19754178;
	ForLoop19703072 -> _JOIN_19703072;
	_JOIN_19463125 [label="_JOIN_19463125None...",shape=box];
	_JOIN_19463125 -> 19463469;
	19755844 [label="19755844  double scv_90;...",shape=box];
	ForLoop19706704 [label="ForLoop19706704  for (kk=kkk; kk<=min(ny-1,kkk+512); kk=kk+512) {...",shape=box];
	ForLoop19706704 -> 19920667;
	ForLoop19706704 -> _JOIN_19706704;
	19753702 [label="19753702  double scv_63;...",shape=box];
	19708011 [label="19708011  double scv_1;...",shape=box];
	ForLoop19706705 [label="ForLoop19706705  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop19706705 -> ForLoop19706704;
	ForLoop19706705 -> _JOIN_19706705;
	19753824 [label="19753824  double scv_64, scv_65;...",shape=box];
	19755490 [label="19755490  double scv_85, scv_86;...",shape=box];
	_JOIN_19703546 [label="_JOIN_19703546None...",shape=box];
	_JOIN_19703546 -> 19703548;
	19917877 [label="19917877  register int cbv_61, cbv_62;...",shape=box];
	19755130 [label="19755130  double scv_81;...",shape=box];
	19462466 [label="19462466  int i;...",shape=box];
	_JOIN_19706701 [label="_JOIN_19706701None...",shape=box];
	_JOIN_19706701 -> _JOIN_19706704;
	ForLoop19702598 [label="ForLoop19702598  for (k=cbv_28; k<=cbv_29; k=k+1) {...",shape=box];
	ForLoop19702598 -> 19753464;
	ForLoop19702598 -> _JOIN_19702598;
	19463469 [label="19463469  register int cbv_2, cbv_3;...",shape=box];
	ForLoop19706710 [label="ForLoop19706710  for (iii=0; iii<=nx-1; iii=iii+512) {...",shape=box];
	ForLoop19706710 -> ForLoop19706709;
	ForLoop19706710 -> _JOIN_19706710;
	_JOIN_19705590 [label="_JOIN_19705590None...",shape=box];
	_JOIN_19705590 -> ForLoop19706705;
	19756320 [label="19756320  double scv_96;...",shape=box];
	ForLoop19672174 [label="ForLoop19672174  for (jj=0; jj<=ny-1; jj=jj+512) {...",shape=box];
	ForLoop19672174 -> 19670491;
	ForLoop19672174 -> _JOIN_19672174;
	19755252 [label="19755252  double scv_82, scv_83;...",shape=box];
	19914532 [label="19914532  register int cbv_16, cbv_17;...",shape=box];
	ForLoop19672172 [label="ForLoop19672172  for (j=jj; j<=cbv_1; j=j+1) {...",shape=box];
	ForLoop19672172 -> 19708011;
	ForLoop19672172 -> _JOIN_19672172;
	19917208 [label="19917208  register int cbv_52, cbv_53;...",shape=box];
	ForLoop19705588 [label="ForLoop19705588  for (j=jj; j<=cbv_84; j=j+1) {...",shape=box];
	ForLoop19705588 -> 19705587;
	ForLoop19705588 -> _JOIN_19705588;
	19755014 [label="19755014  double scv_79, scv_80;...",shape=box];
	ForLoop19702440 [label="ForLoop19702440  for (k=cbv_25; k<=cbv_26; k=k+1) {...",shape=box];
	ForLoop19702440 -> 19753226;
	ForLoop19702440 -> _JOIN_19702440;
	19751920 [label="19751920  double scv_40, scv_41;...",shape=box];
	_JOIN_19703388 [label="_JOIN_19703388None...",shape=box];
	_JOIN_19703388 -> 19703390;
	19752158 [label="19752158  double scv_43, scv_44;...",shape=box];
	ForLoop19702840 [label="ForLoop19702840  for (k=kt; k<=cbv_33; k=k+2) {...",shape=box];
	ForLoop19702840 -> 19753824;
	ForLoop19702840 -> _JOIN_19702840;
	ForLoop19705284 [label="ForLoop19705284  for (k=cbv_79; k<=cbv_80; k=k+1) {...",shape=box];
	ForLoop19705284 -> 19757510;
	ForLoop19705284 -> _JOIN_19705284;
	ForLoop19704178 [label="ForLoop19704178  for (k=cbv_58; k<=cbv_59; k=k+1) {...",shape=box];
	ForLoop19704178 -> 19755844;
	ForLoop19704178 -> _JOIN_19704178;
	19752988 [label="19752988  double scv_54;...",shape=box];
	19757272 [label="19757272  double scv_108;...",shape=box];
	19751453 [label="19751453  double scv_34, scv_35;...",shape=box];
	19918992 [label="19918992  register int cbv_76, cbv_77;...",shape=box];
	ForLoop19704578 [label="ForLoop19704578  for (k=kt; k<=cbv_66; k=k+2) {...",shape=box];
	ForLoop19704578 -> 19756442;
	ForLoop19704578 -> _JOIN_19704578;
	ForLoop19702682 [label="ForLoop19702682  for (k=kt; k<=cbv_30; k=k+2) {...",shape=box];
	ForLoop19702682 -> 19753586;
	ForLoop19702682 -> _JOIN_19702682;
	19463193 [label="19463193  y[i]=0.0;...",shape=box];
	19463193 -> _JOIN_19463194;
	ForLoop19701418 [label="ForLoop19701418  for (k=kt; k<=cbv_6; k=k+2) {...",shape=box];
	ForLoop19701418 -> 197expected=9369846271501.798828
actual=9369846271501.798828
51682;
	ForLoop19701418 -> _JOIN_19701418;
	19755368 [label="19755368  double scv_84;...",shape=box];
	_JOIN_19705588 [label="_JOIN_19705588None...",shape=box];
	_JOIN_19705588 -> _JOIN_19705590;
	19756082 [label="19756082  double scv_93;...",shape=box];
	ForLoop19702282 [label="ForLoop19702282  for (k=cbv_22; k<=cbv_23; k=k+1) {...",shape=box];
	ForLoop19702282 -> 19752988;
	ForLoop19702282 -> _JOIN_19702282;
	ForLoop19703862 [label="ForLoop19703862  for (k=cbv_52; k<=cbv_53; k=k+1) {...",shape=box];
	ForLoop19703862 -> 19755368;
	ForLoop19703862 -> _JOIN_19703862;
	ForLoop19706701 [label="ForLoop19706701  for (k=cbv_87; k<=cbv_88; k=k+1) {...",shape=box];
	ForLoop19706701 -> 19841856;
	ForLoop19706701 -> _JOIN_19706701;
	19917431 [label="19917431  register int cbv_55, cbv_56;...",shape=box];
	_JOIN_19703314 [label="_JOIN_19703314None...",shape=box];
	_JOIN_19703314 -> 19916539;
	19918100 [label="19918100  register int cbv_64, cbv_65;...",shape=box];
	19701336 [label="19701336  int k;...",shape=box];
	19754178 [label="19754178  double scv_69;...",shape=box];
	19705546 [label="19705546  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	ForLoop19704968 [label="ForLoop19704968  for (k=cbv_73; k<=cbv_74; k=k+1) {...",shape=box];
	ForLoop19704968 -> 19757034;
	ForLoop19704968 -> _JOIN_19704968;
	ForLoop19705210 [label="ForLoop19705210  for (k=kt; k<=cbv_78; k=k+2) {...",shape=box];
	ForLoop19705210 -> 19757394;
	ForLoop19705210 -> _JOIN_19705210;
	ForLoop19704104 [label="ForLoop19704104  for (k=kt; k<=cbv_57; k=k+2) {...",shape=box];
	ForLoop19704104 -> 19755728;
	ForLoop19704104 -> _JOIN_19704104;
	19704970 [label="19704970  int k;...",shape=box];
	19754300 [label="19754300  double scv_70, scv_71;...",shape=box];
	19753464 [label="19753464  double scv_60;...",shape=box];
	ForLoop19701266 [label="ForLoop19701266  for (k=kt; k<=cbv_3; k=k+2) {...",shape=box];
	ForLoop19701266 -> 19751453;
	ForLoop19701266 -> _JOIN_19701266;
	19919215 [label="19919215  register int cbv_79, cbv_80;...",shape=box];

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest84.exe __orio_perftest84.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest84.exe  
{'[4, 6, 6, 4, 4, 5, 1, 0, 25, 26, 0, 1, 0, 0, 2, 1, 1, 1]' : 0.151851}
{'[4, 6, 6, 4, 4, 5, 1, 0, 25, 26, 0, 1, 0, 0, 2, 1, 1, 1]' : 0.151389}
{'[4, 6, 6, 4, 4, 5, 1, 0, 25, 26, 0, 1, 0, 0, 2, 1, 1, 1]' : 0.151419}
{'[4, 6, 6, 4, 4, 5, 1, 0, 25, 26, 0, 1, 0, 0, 2, 1, 1, 1]' : 0.151411}
{'[4, 6, 6, 4, 4, 5, 1, 0, 25, 26, 0, 1, 0, 0, 2, 1, 1, 1]' : 0.151275}
{'[4, 6, 6, 4, 4, 5, 1, 0, 25, 26, 0, 1, 0, 0, 2, 1, 1, 1]' : 0.151508}
{'[4, 6, 6, 4, 4, 5, 1, 0, 25, 26, 0, 1, 0, 0, 2, 1, 1, 1]' : 0.151451}
{'[4, 6, 6, 4, 4, 5, 1, 0, 25, 26, 0, 1, 0, 0, 2, 1, 1, 1]' : 0.152342}
{'[4, 6, 6, 4, 4, 5, 1, 0, 25, 26, 0, 1, 0, 0, 2, 1, 1, 1]' : 0.1513}
{'[4, 6, 6, 4, 4, 5, 1, 0, 25, 26, 0, 1, 0, 0, 2, 1, 1, 1]' : 0.151333}
{'[4, 6, 6, 4, 4, 5, 1, 0, 25, 26, 0, 1, 0, 0, 2, 1, 1, 1]' : 0.15148}
{'[4, 6, 6, 4, 4, 5, 1, 0, 25, 26, 0, 1, 0, 0, 2, 1, 1, 1]' : 0.151318}
{'[4, 6, 6, 4, 4, 5, 1, 0, 25, 26, 0, 1, 0, 0, 2, 1, 1, 1]' : 0.151356}
{'[4, 6, 6, 4, 4, 5, 1, 0, 25, 26, 0, 1, 0, 0, 2, 1, 1, 1]' : 0.151371}
{'[4, 6, 6, 4, 4, 5, 1, 0, 25, 26, 0, 1, 0, 0, 2, 1, 1, 1]' : 0.151282}
{'[4, 6, 6, 4, 4, 5, 1, 0, 25, 26, 0, 1, 0, 0, 2, 1, 1, 1]' : 0.151315}
{'[4, 6, 6, 4, 4, 5, 1, 0, 25, 26, 0, 1, 0, 0, 2, 1, 1, 1]' : 0.151315}
{'[4, 6, 6, 4, 4, 5, 1, 0, 25, 26, 0, 1, 0, 0, 2, 1, 1, 1]' : 0.151414}
{'[4, 6, 6, 4, 4, 5, 1, 0, 25, 26, 0, 1, 0, 0, 2, 1, 1, 1]' : 0.151406}
{'[4, 6, 6, 4, 4, 5, 1, 0, 25, 26, 0, 1, 0, 0, 2, 1, 1, 1]' : 0.151607}
{'[4, 6, 6, 4, 4, 5, 1, 0, 25, 26, 0, 1, 0, 0, 2, 1, 1, 1]' : 0.152564}
{'[4, 6, 6, 4, 4, 5, 1, 0, 25, 26, 0, 1, 0, 0, 2, 1, 1, 1]' : 0.151528}
{'[4, 6, 6, 4, 4, 5, 1, 0, 25, 26, 0, 1, 0, 0, 2, 1, 1, 1]' : 0.151325}
{'[4, 6, 6, 4, 4, 5, 1, 0, 25, 26, 0, 1, 0, 0, 2, 1, 1, 1]' : 0.151425}
{'[4, 6, 6, 4, 4, 5, 1, 0, 25, 26, 0, 1, 0, 0, 2, 1, 1, 1]' : 0.151288}
{'[4, 6, 6, 4, 4, 5, 1, 0, 25, 26, 0, 1, 0, 0, 2, 1, 1, 1]' : 0.151362}
{'[4, 6, 6, 4, 4, 5, 1, 0, 25, 26, 0, 1, 0, 0, 2, 1, 1, 1]' : 0.15151}
{'[4, 6, 6, 4, 4, 5, 1, 0, 25, 26, 0, 1, 0, 0, 2, 1, 1, 1]' : 0.151471}
{'[4, 6, 6, 4, 4, 5, 1, 0, 25, 26, 0, 1, 0, 0, 2, 1, 1, 1]' : 0.151386}
{'[4, 6, 6, 4, 4, 5, 1, 0, 25, 26, 0, 1, 0, 0, 2, 1, 1, 1]' : 0.151331}

out:
 ["{'[4, 6, 6, 4, 4, 5, 1, 0, 25, 26, 0, 1, 0, 0, 2, 1, 1, 1]' : 0.151851}", "{'[4, 6, 6, 4, 4, 5, 1, 0, 25, 26, 0, 1, 0, 0, 2, 1, 1, 1]' : 0.151389}", "{'[4, 6, 6, 4, 4, 5, 1, 0, 25, 26, 0, 1, 0, 0, 2, 1, 1, 1]' : 0.151419}", "{'[4, 6, 6, 4, 4, 5, 1, 0, 25, 26, 0, 1, 0, 0, 2, 1, 1, 1]' : 0.151411}", "{'[4, 6, 6, 4, 4, 5, 1, 0, 25, 26, 0, 1, 0, 0, 2, 1, 1, 1]' : 0.151275}", "{'[4, 6, 6, 4, 4, 5, 1, 0, 25, 26, 0, 1, 0, 0, 2, 1, 1, 1]' : 0.151508}", "{'[4, 6, 6, 4, 4, 5, 1, 0, 25, 26, 0, 1, 0, 0, 2, 1, 1, 1]' : 0.151451}", "{'[4, 6, 6, 4, 4, 5, 1, 0, 25, 26, 0, 1, 0, 0, 2, 1, 1, 1]' : 0.152342}", "{'[4, 6, 6, 4, 4, 5, 1, 0, 25, 26, 0, 1, 0, 0, 2, 1, 1, 1]' : 0.1513}", "{'[4, 6, 6, 4, 4, 5, 1, 0, 25, 26, 0, 1, 0, 0, 2, 1, 1, 1]' : 0.151333}", "{'[4, 6, 6, 4, 4, 5, 1, 0, 25, 26, 0, 1, 0, 0, 2, 1, 1, 1]' : 0.15148}", "{'[4, 6, 6, 4, 4, 5, 1, 0, 25, 26, 0, 1, 0, 0, 2, 1, 1, 1]' : 0.151318}", "{'[4, 6, 6, 4, 4, 5, 1, 0, 25, 26, 0, 1, 0, 0, 2, 1, 1, 1]' : 0.151356}", "{'[4, 6, 6, 4, 4, 5, 1, 0, 25, 26, 0, 1, 0, 0, 2, 1, 1, 1]' : 0.151371}", "{'[4, 6, 6, 4, 4, 5, 1, 0, 25, 26, 0, 1, 0, 0, 2, 1, 1, 1]' : 0.151282}", "{'[4, 6, 6, 4, 4, 5, 1, 0, 25, 26, 0, 1, 0, 0, 2, 1, 1, 1]' : 0.151315}", "{'[4, 6, 6, 4, 4, 5, 1, 0, 25, 26, 0, 1, 0, 0, 2, 1, 1, 1]' : 0.151315}", "{'[4, 6, 6, 4, 4, 5, 1, 0, 25, 26, 0, 1, 0, 0, 2, 1, 1, 1]' : 0.151414}", "{'[4, 6, 6, 4, 4, 5, 1, 0, 25, 26, 0, 1, 0, 0, 2, 1, 1, 1]' : 0.151406}", "{'[4, 6, 6, 4, 4, 5, 1, 0, 25, 26, 0, 1, 0, 0, 2, 1, 1, 1]' : 0.151607}", "{'[4, 6, 6, 4, 4, 5, 1, 0, 25, 26, 0, 1, 0, 0, 2, 1, 1, 1]' : 0.152564}", "{'[4, 6, 6, 4, 4, 5, 1, 0, 25, 26, 0, 1, 0, 0, 2, 1, 1, 1]' : 0.151528}", "{'[4, 6, 6, 4, 4, 5, 1, 0, 25, 26, 0, 1, 0, 0, 2, 1, 1, 1]' : 0.151325}", "{'[4, 6, 6, 4, 4, 5, 1, 0, 25, 26, 0, 1, 0, 0, 2, 1, 1, 1]' : 0.151425}", "{'[4, 6, 6, 4, 4, 5, 1, 0, 25, 26, 0, 1, 0, 0, 2, 1, 1, 1]' : 0.151288}", "{'[4, 6, 6, 4, 4, 5, 1, 0, 25, 26, 0, 1, 0, 0, 2, 1, 1, 1]' : 0.151362}", "{'[4, 6, 6, 4, 4, 5, 1, 0, 25, 26, 0, 1, 0, 0, 2, 1, 1, 1]' : 0.15151}", "{'[4, 6, 6, 4, 4, 5, 1, 0, 25, 26, 0, 1, 0, 0, 2, 1, 1, 1]' : 0.151471}", "{'[4, 6, 6, 4, 4, 5, 1, 0, 25, 26, 0, 1, 0, 0, 2, 1, 1, 1]' : 0.151386}", "{'[4, 6, 6, 4, 4, 5, 1, 0, 25, 26, 0, 1, 0, 0, 2, 1, 1, 1]' : 0.151331}"]
returning from 'run': {'[4, 6, 6, 4, 4, 5, 1, 0, 25, 26, 0, 1, 0, 0, 2, 1, 1, 1]': ([0.151851, 0.151389, 0.151419, 0.151411, 0.151275, 0.151508, 0.151451, 0.152342, 0.1513, 0.151333, 0.15148, 0.151318, 0.151356, 0.151371, 0.151282, 0.151315, 0.151315, 0.151414, 0.151406, 0.151607, 0.152564, 0.151528, 0.151325, 0.151425, 0.151288, 0.151362, 0.15151, 0.151471, 0.151386, 0.151331], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.151851, 0.151389, 0.151419, 0.151411, 0.151275, 0.151508, 0.151451, 0.152342, 0.1513, 0.151333, 0.15148, 0.151318, 0.151356, 0.151371, 0.151282, 0.151315, 0.151315, 0.151414, 0.151406, 0.151607, 0.152564, 0.151528, 0.151325, 0.151425, 0.151288, 0.151362, 0.15151, 0.151471, 0.151386, 0.151331], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[4, 6, 6, 4, 4, 5, 1, 0, 25, 26, 0, 1, 0, 0, 2, 1, 1, 1]': ([0.151851, 0.151389, 0.151419, 0.151411, 0.151275, 0.151508, 0.151451, 0.152342, 0.1513, 0.151333, 0.15148, 0.151318, 0.151356, 0.151371, 0.151282, 0.151315, 0.151315, 0.151414, 0.151406, 0.151607, 0.152564, 0.151528, 0.151325, 0.151425, 0.151288, 0.151362, 0.15151, 0.151471, 0.151386, 0.151331], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [0, 3, 5, 2, 2, 6, 1, 29, 5, 2, 0, 0, 1, 0]
Fixed Factors: {'ACOPY_y': 0, 'U1_I': 25, 'U_J': 0, 'SCR': 1}
Testing candidate 15: [0, 3, 5, 2, 2, 6, 1, 0, 25, 29, 0, 5, 2, 0, 0, 1, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	59
        Max loop nest depth: 	5
        Additions: 		2225
        Multiplications: 	1008
        Divisions: 		0
        Logical: 		0
        Reads: 			4707
        Writes: 		886
        Comparisons:		59
        Gotos: 			0
        
digraph CFG {
	20142300 [label="20142300  double scv_49, scv_50, scv_51, scv_52, scv_53, scv_54, scv_55, scv_56;...",shape=box];
	_JOIN_20071138 [label="_JOIN_20071138None...",shape=box];
	_JOIN_20071138 -> _JOIN_20071140;
	_JOIN_20061748 [label="_JOIN_20061748None...",shape=box];
	_JOIN_20061748 -> ForLoop20068916;
	ForLoop20077898 [label="ForLoop20077898  for (i=it; i<=min(nx-1,iii+127)-29; i=i+30) {...",shape=box];
	ForLoop20077898 -> 20142300;
	ForLoop20077898 -> _JOIN_20077898;
	20145033 [label="20145033  double scv_86;...",shape=box];
	_JOIN_20061745 [label="_JOIN_20061745None...",shape=box];
	_JOIN_20061745 -> _JOIN_20061747;
	_JOIN_20061747 [label="_JOIN_20061747None...",shape=box];
	_JOIN_20061747 -> _JOIN_20061748;
	ForLoop20071138 [label="ForLoop20071138  for (j=jj; j<=min(ny-1,jj+63); j=j+1) {...",shape=box];
	ForLoop20071138 -> 20111631;
	ForLoop20071138 -> _JOIN_20071138;
	_JOIN_20077894 [label="_JOIN_20077894None...",shape=box];
	_JOIN_20077894 -> _JOIN_20077896;
	_JOIN_19922055 [label="_JOIN_19922055None...",shape=box];
	_JOIN_19922055 -> 19922399;
	19922399 [label="19922399  register int cbv_2, cbv_3;...",shape=box];
	ForLoop20078055 [label="ForLoop20078055  for (j=jj; j<=min(ny-1,jj+63); j=j+1) {...",shape=box];
	ForLoop20078055 -> 20078054;
	ForLoop20078055 -> _JOIN_20078055;
	ForLoop20077069 [label="ForLoop20077069  for (k=kk; k<=min(ny-1,kk+255)-5; k=k+6) {...",shape=box];
	ForLoop20077069 -> 20123206;
	ForLoop20077069 -> _JOIN_20077069;
	_JOIN_20078340 [label="_JOIN_20078340None...",shape=box];
	_JOIN_20078340 -> _JOIN_20078342;
	ForLoop20068915 [label="ForLoop20068915  for (kk=kkk; kk<=min(ny-1,kkk+1792); kk=kk+256) {...",shape=box];
	ForLoop20068915 -> 20061780;
	ForLoop20068915 -> _JOIN_20068915;
	ForLoop20071142 [label="ForLoop20071142  for (jjj=0; jjj<=ny-1; jjj=jjj+128) {...",shape=box];
	ForLoop20071142 -> ForLoop20071140;
	ForLoop20071142 -> _JOIN_20071142;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 19921396;
	ForLoop20071140 [label="ForLoop20071140  for (jj=jjj; jj<=min(ny-1,jjj+64); jj=jj+64) {...",shape=box];
	ForLoop20071140 -> 20069268;
	ForLoop20071140 -> _JOIN_20071140;
	20145045 [label="20145045  tmp[i]=scv_86;...",shape=box];
	20145045 -> _JOIN_20078345;
	19922123 [label="19922123  y[i]=0.0;...",shape=box];
	19922123 -> _JOIN_19922124;
	20109293 [label="20109293  double scv_9, scv_10, scv_11, scv_12, scv_13, scv_14, scv_15, scv_16;...",shape=box];
	_JOIN_20078348 [label="_JOIN_20078348None...",shape=box];
	_JOIN_20071140 [label="_JOIN_20071140None...",shape=box];
	_JOIN_20071140 -> _JOIN_20071142;
	_JOIN_20078345 [label="_JOIN_20078345None...",shape=box];
	_JOIN_20078345 -> _JOIN_20078348;
	_JOIN_20078342 [label="_JOIN_20078342None...",shape=box];
	_JOIN_20078342 -> _JOIN_20078343;
	_JOIN_20078343 [label="_JOIN_20078343None...",shape=box];
	_JOIN_20078343 -> 20145045;
	ForLoop19922124 [label="ForLoop19922124  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop19922124 -> 19922123;
	ForLoop19922124 -> _JOIN_19922124;
	20078013 [label="20078013  for (j=jj; j<=min(ny-1,jj+63); j=j+1) ...",shape=box];
	20078013 -> ForLoop20078055;
	19921396 [label="19921396  int i;...",shape=box];
	_JOIN_20077069 [label="_JOIN_20077069None...",shape=box];
	_JOIN_20077069 -> ForLoop20077892;
	ForLoop20061748 [label="ForLoop20061748  for (jjj=0; jjj<=ny-1; jjj=jjj+128) {...",shape=box];
	ForLoop20061748 -> ForLoop20061747;
	ForLoop20061748 -> _JOIN_20061748;
	_JOIN_20068038 [label="_JOIN_20068038None...",shape=box];
	_JOIN_20068038 -> ForLoop20068913;
	ForLoop20077896 [label="ForLoop20077896  for (kkk=0; kkk<=ny-1; kkk=kkk+2048) {...",shape=box];
	ForLoop20077896 -> ForLoop20077894;
	ForLoop20077896 -> _JOIN_20077896;
	ForLoop20078272 [label="ForLoop20078272  for (k=kk; k<=min(ny-1,kk+255)-5; k=k+6) {...",shape=box];
	ForLoop20078272 -> 20143665;
	ForLoop20078272 -> _JOIN_20078272;
	ForLoop20061745 [label="ForLoop20061745  for (j=jj; j<=min(ny-1,jj+63); j=j+1) {...",shape=box];
	ForLoop20061745 -> 20079889;
	ForLoop20061745 -> _JOIN_20061745;
	ForLoop20061747 [label="ForLoop20061747  for (jj=jjj; jj<=min(ny-1,jjj+64); jj=jj+64) {...",shape=box];
	ForLoop20061747 -> 20060710;
	ForLoop20061747 -> _JOIN_20061747;
	20143665 [label="20143665  double scv_79, scv_80, scv_81, scv_82, scv_83, scv_84;...",shape=box];
	20109305 [label="20109305  tmp[it]=scv_9;...",shape=box];
	ForLoop20078057 [label="ForLoop20078057  for (jj=jjj; jj<=min(ny-1,jjj+64); jj=jj+64) {...",shape=box];
	ForLoop20078057 -> 20078013;
	ForLoop20078057 -> _JOIN_20078057;
	_JOIN_20068918 [label="_JOIN_20068918None...",shape=box];
	_JOIN_20068918 -> 20068919;
	ForLoop20077894 [label="ForLoop20077894  for (kk=kkk; kk<=min(ny-1,kkk+1792); kk=kk+256) {...",shape=box];
	ForLoop20077894 -> 20071174;
	ForLoop20077894 -> _JOIN_20077894;
	20143856 [label="20143856  double scv_85;...",shape=box];
	20078090 [label="20078090  int k;...",shape=box];
	20078090 -> ForLoop20078272;
	_JOIN_20077898 [label="_JOIN_20077898None...",shape=box];
	_JOIN_20077898 -> ForLoop20078345;
	_JOIN_20068913 [label="_JOIN_20068913None...",shape=box];
	_JOIN_20068913 -> _JOIN_20068915;
	_JOIN_20077892 [label="_JOIN_20077892None...",shape=box];
	_JOIN_20077892 -> _JOIN_20077894;
	20124790 [label="20124790  double scv_48;...",shape=box];
	_JOIN_20068916 [label="_JOIN_20068916None...",shape=box];
	_JOIN_20068916 -> 20109305;
	_JOIN_20071142 [label="_JOIN_20071142None...",shape=box];
	_JOIN_20071142 -> ForLoop20077896;
	ForLoop20078058 [label="ForLoop20078058  for (jjj=0; jjj<=ny-1; jjj=jjj+128) {...",shape=box];
	ForLoop20078058 -> ForLoop20078057;
	ForLoop20078058 -> _JOIN_20078058;
	_JOIN_20068915 [label="_JOIN_20068915None...",shape=box];
	_JOIN_20068915 -> _JOIN_20068916;
	ForLoop20068038 [label="ForLoop20068038  for (k=kk; k<=min(ny-1,kk+255)-5; k=k+6) {...",shape=box];
	ForLoop20068038 -> 20090308;
	ForLoop20068038 -> _JOIN_20068038;
	_JOIN_20077896 [label="_JOIN_20077896None...",shape=box];
	_JOIN_20077896 -> 20142318;
	_JOIN_20078055 [label="_JOIN_20078055None...",shape=box];
	_JOIN_20078055 -> _JOIN_20078057;
	20090308 [label="20090308  double scv_2, scv_3, scv_4, scv_5, scv_6, scv_7;...",shape=box];
	20078054 [label="20078054  scv_86=scv_86+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	20078054 -> _JOIN_20078055;
	20060710 [label="20060710  for (j=jj; j<=min(ny-1,jj+63); j=j+1) ...",shape=box];
	20060710 -> ForLoop20061745;
	ForLoop20078340 [label="ForLoop20078340  for (k=(min(ny-1,kk+255))-(((min(ny-1,kk+255))-(kk)+1)%6)+1; k<=min(ny-1,kk+255); k=k+1) {...",shape=box];
	ForLoop20078340 -> 20143856;
	ForLoop20078340 -> _JOIN_20078340;
	20079889 [label="20079889  double scv_1;...",shape=box];
	ForLoop20077892 [label="ForLoop20077892  for (k=(min(ny-1,kk+255))-(((min(ny-1,kk+255))-(kk)+1)%6)+1; k<=min(ny-1,kk+255); k=k+1) {...",shape=box];
	ForLoop20077892 -> 20124790;
	ForLoop20077892 -> _JOIN_20077892;
	20123206 [label="20123206  double scv_42, scv_43, scv_44, scv_45, scv_46, scv_47;...",shape=box];
	_JOIN_20078058 [label="_JOIN_20078058None...",shape=box];
	_JOIN_20078058 -> ForLoop20078343;
	ForLoop20068918 [label="ForLoop20068918  for (it=iii; it<=min(nx-1,iii+127)-31; it=it+32) {...",shape=box];
	ForLoop20068918 -> 20109293;
	ForLoop20068918 -> _JOIN_20068918;
	_JOIN_19922124 [label="_JOIN_19922124None...",shape=box];
	_JOIN_19922124 -> 20060608;
	20060608 [label="20060608  double x_copy[64];...",shape=box];
	20068919 [label="20068919  int i;...",shape=box];
	20068919 -> ForLoop20077898;
	ForLoop20068913 [label="ForLoop20068913  for (k=(min(ny-1,kk+255))-(((min(ny-1,kk+255))-(kk)+1)%6)+1; k<=min(ny-1,kk+255); k=k+1) {...",shape=box];
	ForLoop20068913 -> 20091988;
	ForLoop20068913 -> _JOIN_20068913;
expected=9369846271501.798828
actual=9369846271501.798828
	20071174 [label="20071174  int k;...",shape=box];
	_JOIN_20078272 [label="_JOIN_20078272None...",shape=box];
	_JOIN_20078272 -> ForLoop20078340;
	ForLoop20068916 [label="ForLoop20068916  for (kkk=0; kkk<=ny-1; kkk=kkk+2048) {...",shape=box];
	ForLoop20068916 -> ForLoop20068915;
	ForLoop20068916 -> _JOIN_20068916;
	ForLoop19922055 [label="ForLoop19922055  for (i=0; i<=cbv_1; i=i+26) {...",shape=box];
	ForLoop19922055 -> 19921828;
	ForLoop19922055 -> _JOIN_19922055;
	_JOIN_20078057 [label="_JOIN_20078057None...",shape=box];
	_JOIN_20078057 -> _JOIN_20078058;
	ForLoop20078348 [label="ForLoop20078348  for (iii=0; iii<=nx-1; iii=iii+128) {...",shape=box];
	ForLoop20078348 -> ForLoop20068918;
	ForLoop20078348 -> _JOIN_20078348;
	20061780 [label="20061780  int k;...",shape=box];
	20061780 -> ForLoop20068038;
	20111631 [label="20111631  double scv_41;...",shape=box];
	20069268 [label="20069268  for (j=jj; j<=min(ny-1,jj+63); j=j+1) ...",shape=box];
	ForLoop20078342 [label="ForLoop20078342  for (kk=kkk; kk<=min(ny-1,kkk+1792); kk=kk+256) {...",shape=box];
	ForLoop20078342 -> 20078090;
	ForLoop20078342 -> _JOIN_20078342;
	ForLoop20078343 [label="ForLoop20078343  for (kkk=0; kkk<=ny-1; kkk=kkk+2048) {...",shape=box];
	ForLoop20078343 -> ForLoop20078342;
	ForLoop20078343 -> _JOIN_20078343;
	19921828 [label="19921828  y[i]=0.0;...",shape=box];
	ForLoop20078345 [label="ForLoop20078345  for (i=(min(nx-1,iii+127))-(((min(nx-1,iii+127))-(it)+1)%30)+1; i<=min(nx-1,iii+127); i=i+1) {...",shape=box];
	ForLoop20078345 -> 20145033;
	ForLoop20078345 -> _JOIN_20078345;
	20091988 [label="20091988  double scv_8;...",shape=box];
	20142318 [label="20142318  tmp[(i+20)]=scv_49;...",shape=box];

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest85.exe __orio_perftest85.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest85.exe  
{'[0, 3, 5, 2, 2, 6, 1, 0, 25, 29, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.203913}
{'[0, 3, 5, 2, 2, 6, 1, 0, 25, 29, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.203463}
{'[0, 3, 5, 2, 2, 6, 1, 0, 25, 29, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.204601}
{'[0, 3, 5, 2, 2, 6, 1, 0, 25, 29, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.203505}
{'[0, 3, 5, 2, 2, 6, 1, 0, 25, 29, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.203344}
{'[0, 3, 5, 2, 2, 6, 1, 0, 25, 29, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.203439}
{'[0, 3, 5, 2, 2, 6, 1, 0, 25, 29, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.203544}
{'[0, 3, 5, 2, 2, 6, 1, 0, 25, 29, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.203301}
{'[0, 3, 5, 2, 2, 6, 1, 0, 25, 29, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.203645}
{'[0, 3, 5, 2, 2, 6, 1, 0, 25, 29, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.203329}
{'[0, 3, 5, 2, 2, 6, 1, 0, 25, 29, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.203809}
{'[0, 3, 5, 2, 2, 6, 1, 0, 25, 29, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.20324}
{'[0, 3, 5, 2, 2, 6, 1, 0, 25, 29, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.204515}
{'[0, 3, 5, 2, 2, 6, 1, 0, 25, 29, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.203643}
{'[0, 3, 5, 2, 2, 6, 1, 0, 25, 29, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.20349}
{'[0, 3, 5, 2, 2, 6, 1, 0, 25, 29, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.203306}
{'[0, 3, 5, 2, 2, 6, 1, 0, 25, 29, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.203527}
{'[0, 3, 5, 2, 2, 6, 1, 0, 25, 29, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.204019}
{'[0, 3, 5, 2, 2, 6, 1, 0, 25, 29, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.203572}
{'[0, 3, 5, 2, 2, 6, 1, 0, 25, 29, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.20329}
{'[0, 3, 5, 2, 2, 6, 1, 0, 25, 29, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.203634}
{'[0, 3, 5, 2, 2, 6, 1, 0, 25, 29, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.20341}
{'[0, 3, 5, 2, 2, 6, 1, 0, 25, 29, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.206135}
{'[0, 3, 5, 2, 2, 6, 1, 0, 25, 29, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.203992}
{'[0, 3, 5, 2, 2, 6, 1, 0, 25, 29, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.20374}
{'[0, 3, 5, 2, 2, 6, 1, 0, 25, 29, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.203613}
{'[0, 3, 5, 2, 2, 6, 1, 0, 25, 29, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.203806}
{'[0, 3, 5, 2, 2, 6, 1, 0, 25, 29, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.203496}
{'[0, 3, 5, 2, 2, 6, 1, 0, 25, 29, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.203807}
{'[0, 3, 5, 2, 2, 6, 1, 0, 25, 29, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.203623}

out:
 ["{'[0, 3, 5, 2, 2, 6, 1, 0, 25, 29, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.203913}", "{'[0, 3, 5, 2, 2, 6, 1, 0, 25, 29, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.203463}", "{'[0, 3, 5, 2, 2, 6, 1, 0, 25, 29, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.204601}", "{'[0, 3, 5, 2, 2, 6, 1, 0, 25, 29, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.203505}", "{'[0, 3, 5, 2, 2, 6, 1, 0, 25, 29, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.203344}", "{'[0, 3, 5, 2, 2, 6, 1, 0, 25, 29, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.203439}", "{'[0, 3, 5, 2, 2, 6, 1, 0, 25, 29, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.203544}", "{'[0, 3, 5, 2, 2, 6, 1, 0, 25, 29, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.203301}", "{'[0, 3, 5, 2, 2, 6, 1, 0, 25, 29, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.203645}", "{'[0, 3, 5, 2, 2, 6, 1, 0, 25, 29, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.203329}", "{'[0, 3, 5, 2, 2, 6, 1, 0, 25, 29, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.203809}", "{'[0, 3, 5, 2, 2, 6, 1, 0, 25, 29, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.20324}", "{'[0, 3, 5, 2, 2, 6, 1, 0, 25, 29, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.204515}", "{'[0, 3, 5, 2, 2, 6, 1, 0, 25, 29, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.203643}", "{'[0, 3, 5, 2, 2, 6, 1, 0, 25, 29, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.20349}", "{'[0, 3, 5, 2, 2, 6, 1, 0, 25, 29, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.203306}", "{'[0, 3, 5, 2, 2, 6, 1, 0, 25, 29, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.203527}", "{'[0, 3, 5, 2, 2, 6, 1, 0, 25, 29, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.204019}", "{'[0, 3, 5, 2, 2, 6, 1, 0, 25, 29, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.203572}", "{'[0, 3, 5, 2, 2, 6, 1, 0, 25, 29, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.20329}", "{'[0, 3, 5, 2, 2, 6, 1, 0, 25, 29, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.203634}", "{'[0, 3, 5, 2, 2, 6, 1, 0, 25, 29, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.20341}", "{'[0, 3, 5, 2, 2, 6, 1, 0, 25, 29, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.206135}", "{'[0, 3, 5, 2, 2, 6, 1, 0, 25, 29, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.203992}", "{'[0, 3, 5, 2, 2, 6, 1, 0, 25, 29, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.20374}", "{'[0, 3, 5, 2, 2, 6, 1, 0, 25, 29, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.203613}", "{'[0, 3, 5, 2, 2, 6, 1, 0, 25, 29, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.203806}", "{'[0, 3, 5, 2, 2, 6, 1, 0, 25, 29, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.203496}", "{'[0, 3, 5, 2, 2, 6, 1, 0, 25, 29, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.203807}", "{'[0, 3, 5, 2, 2, 6, 1, 0, 25, 29, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.203623}"]
returning from 'run': {'[0, 3, 5, 2, 2, 6, 1, 0, 25, 29, 0, 5, 2, 0, 0, 1, 1, 0]': ([0.203913, 0.203463, 0.204601, 0.203505, 0.203344, 0.203439, 0.203544, 0.203301, 0.203645, 0.203329, 0.203809, 0.20324, 0.204515, 0.203643, 0.20349, 0.203306, 0.203527, 0.204019, 0.203572, 0.20329, 0.203634, 0.20341, 0.206135, 0.203992, 0.20374, 0.203613, 0.203806, 0.203496, 0.203807, 0.203623], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.203913, 0.203463, 0.204601, 0.203505, 0.203344, 0.203439, 0.203544, 0.203301, 0.203645, 0.203329, 0.203809, 0.20324, 0.204515, 0.203643, 0.20349, 0.203306, 0.203527, 0.204019, 0.203572, 0.20329, 0.203634, 0.20341, 0.206135, 0.203992, 0.20374, 0.203613, 0.203806, 0.203496, 0.203807, 0.203623], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[0, 3, 5, 2, 2, 6, 1, 0, 25, 29, 0, 5, 2, 0, 0, 1, 1, 0]': ([0.203913, 0.203463, 0.204601, 0.203505, 0.203344, 0.203439, 0.203544, 0.203301, 0.203645, 0.203329, 0.203809, 0.20324, 0.204515, 0.203643, 0.20349, 0.203306, 0.203527, 0.204019, 0.203572, 0.20329, 0.203634, 0.20341, 0.206135, 0.203992, 0.20374, 0.203613, 0.203806, 0.203496, 0.203807, 0.203623], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [2, 5, 3, 2, 0, 6, 1, 25, 25, 0, 0, 0, 0, 0]
Fixed Factors: {'ACOPY_y': 0, 'U1_I': 25, 'U_J': 0, 'SCR': 1}
Testing candidate 16: [2, 5, 3, 2, 0, 6, 1, 0, 25, 25, 0, 25, 0, 0, 0, 1, 0, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	45
        Max loop nest depth: 	6
        Additions: 		3252
        Multiplications: 	1512
        Divisions: 		0
        Logical: 		0
        Reads: 			6315
        Writes: 		1090
        Comparisons:		45
        Gotos: 			0
        
digraph CFG {
	ForLoop20302797 [label="ForLoop20302797  for (j=jj; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop20302797 -> 20328467;
	ForLoop20302797 -> _JOIN_20302797;
	_JOIN_20327213 [label="_JOIN_20327213None...",shape=box];
	_JOIN_20327213 -> _JOIN_20327214;
	ForLoop20327138 [label="ForLoop20327138  for (k=kk; k<=min(ny-1,kk+63)-25; k=k+26) {...",shape=box];
	ForLoop20327138 -> 20419550;
	ForLoop20327138 -> _JOIN_20327138;
	ForLoop20302799 [label="ForLoop20302799  for (jj=0; jj<=ny-1; jj=jj+256) {...",shape=box];
	ForLoop20302799 -> 20301179;
	ForLoop20302799 -> _JOIN_20302799;
	20300851 [label="20300851  double x_copy[256];...",shape=box];
	20363624 [label="20363624  double scv_28;...",shape=box];
	_JOIN_20327214 [label="_JOIN_20327214None...",shape=box];
	_JOIN_20327211 [label="_JOIN_20327211None...",shape=box];
	_JOIN_20327211 -> _JOIN_20327213;
	ForLoop20327213 [label="ForLoop20327213  for (ii=iii; ii<=min(nx-1,iii+96); ii=ii+32) {...",shape=box];
	ForLoop20327213 -> 20300884;
	ForLoop20327213 -> _JOIN_20327213;
	20419550 [label="20419550  double scv_55, scv_56, scv_57, scv_58, scv_59, scv_60, scv_61, scv_62;...",shape=box];
	ForLoop20326364 [label="ForLoop20326364  for (jj=0; jj<=ny-1; jj=jj+256) {...",shape=box];
	ForLoop20326364 -> 20326320;
	ForLoop20326364 -> _JOIN_20326364;
	ForLoop20326362 [label="ForLoop20326362  for (j=jj; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop20326362 -> 20326361;
	ForLoop20326362 -> _JOIN_20326362;
	ForLoop20158337 [label="ForLoop20158337  for (i=0; i<=ny-26; i=i+26) {...",shape=box];
	ForLoop20158337 -> 20158110;
	ForLoop20158337 -> _JOIN_20158337;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 20157678;
	20420164 [label="20420164  double scv_81;...",shape=box];
	ForLoop20326223 [label="ForLoop20326223  for (i=ii; i<=min(nx-1,ii+31)-25; i=i+26) {...",shape=box];
	ForLoop20326223 -> 20417027;
	ForLoop20326223 -> _JOIN_20326223;
	ForLoop20326221 [label="ForLoop20326221  for (kkk=0; kkk<=ny-1; kkk=kkk+2048) {...",shape=box];
	ForLoop20326221 -> ForLoop20326219;
	ForLoop20326221 -> _JOIN_20326221;
	ForLoop20327214 [label="ForLoop20327214  for (iii=0; iii<=nx-1; iii=iii+128) {...",shape=box];
	ForLoop20327214 -> ForLoop20327213;
	ForLoop20327214 -> _JOIN_20327214;
	ForLoop20327211 [label="ForLoop20327211  for (i=(min(nx-1,ii+31))-(((min(nx-1,ii+31))-(ii)+1)%26)+1; i<=min(nx-1,ii+31); i=i+1) {...",shape=box];
	ForLoop20327211 -> 20423490;
	ForLoop20327211 -> _JOIN_20327211;
	_JOIN_20158337 [label="_JOIN_20158337None...",shape=box];
	_JOIN_20158337 -> ForLoop20158406;
	20157678 [label="20157678  int i;...",shape=box];
	20157678 -> ForLoop20158337;
	_JOIN_20326223 [label="_JOIN_20326223None...",shape=box];
	_JOIN_20326223 -> ForLoop20327211;
	20302831 [label="20302831  int k;...",shape=box];
	_JOIN_20326221 [label="_JOIN_20326221None...",shape=box];
	_JOIN_20326221 -> 20417045;
	_JOIN_20326362 [label="_JOIN_20326362None...",shape=box];
	_JOIN_20326362 -> _JOIN_20326364;
	ForLoop20325498 [label="ForLoop20325498  for (k=kk; k<=min(ny-1,kk+63)-25; k=k+26) {...",shape=box];
	ForLoop20325498 -> 20360809;
	ForLoop20325498 -> _JOIN_20325498;
	_JOIN_20327209 [label="_JOIN_20327209None...",shape=box];
	_JOIN_20327209 -> 20423502;
	20360809 [label="20360809  double scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8, scv_9;...",shape=box];
	20158405 [label="20158405  y[i]=0.0;...",shape=box];
	20158405 -> _JOIN_20158406;
	_JOIN_20326364 [label="_JOIN_20326364None...",shape=box];
	_JOIN_20326364 -> ForLoop20327209;
	20328467 [label="20328467  double scv_1;...",shape=box];
	20423502 [label="20423502  tmp[i]=scv_82;...",shape=box];
	20423502 -> _JOIN_20327211;
	20326320 [label="20326320  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	20326320 -> ForLoop20326362;
	ForLoop20327208 [label="ForLoop20327208  for (kk=kkk; kk<=min(ny-1,kkk+1984); kk=kk+64) {...",shape=box];
	ForLoop20327208 -> 20326396;
	ForLoop20327208 -> _JOIN_203272expected=9369846271501.798828
actual=9369846271501.798828
08;
	_JOIN_20327138 [label="_JOIN_20327138None...",shape=box];
	_JOIN_20327138 -> ForLoop20327206;
	20158110 [label="20158110  y[i]=0.0;...",shape=box];
	ForLoop20327209 [label="ForLoop20327209  for (kkk=0; kkk<=ny-1; kkk=kkk+2048) {...",shape=box];
	ForLoop20327209 -> ForLoop20327208;
	ForLoop20327209 -> _JOIN_20327209;
	_JOIN_20302797 [label="_JOIN_20302797None...",shape=box];
	_JOIN_20302797 -> _JOIN_20302799;
	ForLoop20326219 [label="ForLoop20326219  for (kk=kkk; kk<=min(ny-1,kkk+1984); kk=kk+64) {...",shape=box];
	ForLoop20326219 -> 20302831;
	ForLoop20326219 -> _JOIN_20326219;
	_JOIN_20302799 [label="_JOIN_20302799None...",shape=box];
	_JOIN_20302799 -> ForLoop20326221;
	ForLoop20326217 [label="ForLoop20326217  for (k=(min(ny-1,kk+63))-(((min(ny-1,kk+63))-(kk)+1)%26)+1; k<=min(ny-1,kk+63); k=k+1) {...",shape=box];
	ForLoop20326217 -> 20363624;
	ForLoop20326217 -> _JOIN_20326217;
	20417027 [label="20417027  double scv_29, scv_30, scv_31, scv_32, scv_33, scv_34, scv_35, scv_36;...",shape=box];
	_JOIN_20327208 [label="_JOIN_20327208None...",shape=box];
	_JOIN_20327208 -> _JOIN_20327209;
	20326361 [label="20326361  scv_82=scv_82+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	20326361 -> _JOIN_20326362;
	_JOIN_20327206 [label="_JOIN_20327206None...",shape=box];
	_JOIN_20327206 -> _JOIN_20327208;
	20423490 [label="20423490  double scv_82;...",shape=box];
	20417045 [label="20417045  tmp[(i+20)]=scv_29;...",shape=box];
	ForLoop20158406 [label="ForLoop20158406  for (i=ny-((ny-(0))%26); i<=ny-1; i=i+1) ...",shape=box];
	ForLoop20158406 -> 20158405;
	ForLoop20158406 -> _JOIN_20158406;
	ForLoop20327206 [label="ForLoop20327206  for (k=(min(ny-1,kk+63))-(((min(ny-1,kk+63))-(kk)+1)%26)+1; k<=min(ny-1,kk+63); k=k+1) {...",shape=box];
	ForLoop20327206 -> 20420164;
	ForLoop20327206 -> _JOIN_20327206;
	_JOIN_20325498 [label="_JOIN_20325498None...",shape=box];
	_JOIN_20325498 -> ForLoop20326217;
	20300884 [label="20300884  int i;...",shape=box];
	20300884 -> ForLoop20326223;
	_JOIN_20326219 [label="_JOIN_20326219None...",shape=box];
	_JOIN_20326219 -> _JOIN_20326221;
	20301179 [label="20301179  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	20326396 [label="20326396  int k;...",shape=box];
	20326396 -> ForLoop20327138;
	_JOIN_20158406 [label="_JOIN_20158406None...",shape=box];
	_JOIN_20158406 -> 20300851;
	_JOIN_20326217 [label="_JOIN_20326217None...",shape=box];
	_JOIN_20326217 -> _JOIN_20326219;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest86.exe __orio_perftest86.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest86.exe  
{'[2, 5, 3, 2, 0, 6, 1, 0, 25, 25, 0, 25, 0, 0, 0, 1, 0, 0]' : 0.144178}
{'[2, 5, 3, 2, 0, 6, 1, 0, 25, 25, 0, 25, 0, 0, 0, 1, 0, 0]' : 0.143867}
{'[2, 5, 3, 2, 0, 6, 1, 0, 25, 25, 0, 25, 0, 0, 0, 1, 0, 0]' : 0.144937}
{'[2, 5, 3, 2, 0, 6, 1, 0, 25, 25, 0, 25, 0, 0, 0, 1, 0, 0]' : 0.144017}
{'[2, 5, 3, 2, 0, 6, 1, 0, 25, 25, 0, 25, 0, 0, 0, 1, 0, 0]' : 0.143939}
{'[2, 5, 3, 2, 0, 6, 1, 0, 25, 25, 0, 25, 0, 0, 0, 1, 0, 0]' : 0.143812}
{'[2, 5, 3, 2, 0, 6, 1, 0, 25, 25, 0, 25, 0, 0, 0, 1, 0, 0]' : 0.143771}
{'[2, 5, 3, 2, 0, 6, 1, 0, 25, 25, 0, 25, 0, 0, 0, 1, 0, 0]' : 0.143856}
{'[2, 5, 3, 2, 0, 6, 1, 0, 25, 25, 0, 25, 0, 0, 0, 1, 0, 0]' : 0.143822}
{'[2, 5, 3, 2, 0, 6, 1, 0, 25, 25, 0, 25, 0, 0, 0, 1, 0, 0]' : 0.143976}
{'[2, 5, 3, 2, 0, 6, 1, 0, 25, 25, 0, 25, 0, 0, 0, 1, 0, 0]' : 0.143812}
{'[2, 5, 3, 2, 0, 6, 1, 0, 25, 25, 0, 25, 0, 0, 0, 1, 0, 0]' : 0.143844}
{'[2, 5, 3, 2, 0, 6, 1, 0, 25, 25, 0, 25, 0, 0, 0, 1, 0, 0]' : 0.144012}
{'[2, 5, 3, 2, 0, 6, 1, 0, 25, 25, 0, 25, 0, 0, 0, 1, 0, 0]' : 0.143934}
{'[2, 5, 3, 2, 0, 6, 1, 0, 25, 25, 0, 25, 0, 0, 0, 1, 0, 0]' : 0.143976}
{'[2, 5, 3, 2, 0, 6, 1, 0, 25, 25, 0, 25, 0, 0, 0, 1, 0, 0]' : 0.143866}
{'[2, 5, 3, 2, 0, 6, 1, 0, 25, 25, 0, 25, 0, 0, 0, 1, 0, 0]' : 0.144875}
{'[2, 5, 3, 2, 0, 6, 1, 0, 25, 25, 0, 25, 0, 0, 0, 1, 0, 0]' : 0.143938}
{'[2, 5, 3, 2, 0, 6, 1, 0, 25, 25, 0, 25, 0, 0, 0, 1, 0, 0]' : 0.144075}
{'[2, 5, 3, 2, 0, 6, 1, 0, 25, 25, 0, 25, 0, 0, 0, 1, 0, 0]' : 0.143876}
{'[2, 5, 3, 2, 0, 6, 1, 0, 25, 25, 0, 25, 0, 0, 0, 1, 0, 0]' : 0.143885}
{'[2, 5, 3, 2, 0, 6, 1, 0, 25, 25, 0, 25, 0, 0, 0, 1, 0, 0]' : 0.143866}
{'[2, 5, 3, 2, 0, 6, 1, 0, 25, 25, 0, 25, 0, 0, 0, 1, 0, 0]' : 0.143943}
{'[2, 5, 3, 2, 0, 6, 1, 0, 25, 25, 0, 25, 0, 0, 0, 1, 0, 0]' : 0.143935}
{'[2, 5, 3, 2, 0, 6, 1, 0, 25, 25, 0, 25, 0, 0, 0, 1, 0, 0]' : 0.144094}
{'[2, 5, 3, 2, 0, 6, 1, 0, 25, 25, 0, 25, 0, 0, 0, 1, 0, 0]' : 0.143958}
{'[2, 5, 3, 2, 0, 6, 1, 0, 25, 25, 0, 25, 0, 0, 0, 1, 0, 0]' : 0.14385}
{'[2, 5, 3, 2, 0, 6, 1, 0, 25, 25, 0, 25, 0, 0, 0, 1, 0, 0]' : 0.143905}
{'[2, 5, 3, 2, 0, 6, 1, 0, 25, 25, 0, 25, 0, 0, 0, 1, 0, 0]' : 0.143852}
{'[2, 5, 3, 2, 0, 6, 1, 0, 25, 25, 0, 25, 0, 0, 0, 1, 0, 0]' : 0.14385}

out:
 ["{'[2, 5, 3, 2, 0, 6, 1, 0, 25, 25, 0, 25, 0, 0, 0, 1, 0, 0]' : 0.144178}", "{'[2, 5, 3, 2, 0, 6, 1, 0, 25, 25, 0, 25, 0, 0, 0, 1, 0, 0]' : 0.143867}", "{'[2, 5, 3, 2, 0, 6, 1, 0, 25, 25, 0, 25, 0, 0, 0, 1, 0, 0]' : 0.144937}", "{'[2, 5, 3, 2, 0, 6, 1, 0, 25, 25, 0, 25, 0, 0, 0, 1, 0, 0]' : 0.144017}", "{'[2, 5, 3, 2, 0, 6, 1, 0, 25, 25, 0, 25, 0, 0, 0, 1, 0, 0]' : 0.143939}", "{'[2, 5, 3, 2, 0, 6, 1, 0, 25, 25, 0, 25, 0, 0, 0, 1, 0, 0]' : 0.143812}", "{'[2, 5, 3, 2, 0, 6, 1, 0, 25, 25, 0, 25, 0, 0, 0, 1, 0, 0]' : 0.143771}", "{'[2, 5, 3, 2, 0, 6, 1, 0, 25, 25, 0, 25, 0, 0, 0, 1, 0, 0]' : 0.143856}", "{'[2, 5, 3, 2, 0, 6, 1, 0, 25, 25, 0, 25, 0, 0, 0, 1, 0, 0]' : 0.143822}", "{'[2, 5, 3, 2, 0, 6, 1, 0, 25, 25, 0, 25, 0, 0, 0, 1, 0, 0]' : 0.143976}", "{'[2, 5, 3, 2, 0, 6, 1, 0, 25, 25, 0, 25, 0, 0, 0, 1, 0, 0]' : 0.143812}", "{'[2, 5, 3, 2, 0, 6, 1, 0, 25, 25, 0, 25, 0, 0, 0, 1, 0, 0]' : 0.143844}", "{'[2, 5, 3, 2, 0, 6, 1, 0, 25, 25, 0, 25, 0, 0, 0, 1, 0, 0]' : 0.144012}", "{'[2, 5, 3, 2, 0, 6, 1, 0, 25, 25, 0, 25, 0, 0, 0, 1, 0, 0]' : 0.143934}", "{'[2, 5, 3, 2, 0, 6, 1, 0, 25, 25, 0, 25, 0, 0, 0, 1, 0, 0]' : 0.143976}", "{'[2, 5, 3, 2, 0, 6, 1, 0, 25, 25, 0, 25, 0, 0, 0, 1, 0, 0]' : 0.143866}", "{'[2, 5, 3, 2, 0, 6, 1, 0, 25, 25, 0, 25, 0, 0, 0, 1, 0, 0]' : 0.144875}", "{'[2, 5, 3, 2, 0, 6, 1, 0, 25, 25, 0, 25, 0, 0, 0, 1, 0, 0]' : 0.143938}", "{'[2, 5, 3, 2, 0, 6, 1, 0, 25, 25, 0, 25, 0, 0, 0, 1, 0, 0]' : 0.144075}", "{'[2, 5, 3, 2, 0, 6, 1, 0, 25, 25, 0, 25, 0, 0, 0, 1, 0, 0]' : 0.143876}", "{'[2, 5, 3, 2, 0, 6, 1, 0, 25, 25, 0, 25, 0, 0, 0, 1, 0, 0]' : 0.143885}", "{'[2, 5, 3, 2, 0, 6, 1, 0, 25, 25, 0, 25, 0, 0, 0, 1, 0, 0]' : 0.143866}", "{'[2, 5, 3, 2, 0, 6, 1, 0, 25, 25, 0, 25, 0, 0, 0, 1, 0, 0]' : 0.143943}", "{'[2, 5, 3, 2, 0, 6, 1, 0, 25, 25, 0, 25, 0, 0, 0, 1, 0, 0]' : 0.143935}", "{'[2, 5, 3, 2, 0, 6, 1, 0, 25, 25, 0, 25, 0, 0, 0, 1, 0, 0]' : 0.144094}", "{'[2, 5, 3, 2, 0, 6, 1, 0, 25, 25, 0, 25, 0, 0, 0, 1, 0, 0]' : 0.143958}", "{'[2, 5, 3, 2, 0, 6, 1, 0, 25, 25, 0, 25, 0, 0, 0, 1, 0, 0]' : 0.14385}", "{'[2, 5, 3, 2, 0, 6, 1, 0, 25, 25, 0, 25, 0, 0, 0, 1, 0, 0]' : 0.143905}", "{'[2, 5, 3, 2, 0, 6, 1, 0, 25, 25, 0, 25, 0, 0, 0, 1, 0, 0]' : 0.143852}", "{'[2, 5, 3, 2, 0, 6, 1, 0, 25, 25, 0, 25, 0, 0, 0, 1, 0, 0]' : 0.14385}"]
returning from 'run': {'[2, 5, 3, 2, 0, 6, 1, 0, 25, 25, 0, 25, 0, 0, 0, 1, 0, 0]': ([0.144178, 0.143867, 0.144937, 0.144017, 0.143939, 0.143812, 0.143771, 0.143856, 0.143822, 0.143976, 0.143812, 0.143844, 0.144012, 0.143934, 0.143976, 0.143866, 0.144875, 0.143938, 0.144075, 0.143876, 0.143885, 0.143866, 0.143943, 0.143935, 0.144094, 0.143958, 0.14385, 0.143905, 0.143852, 0.14385], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.144178, 0.143867, 0.144937, 0.144017, 0.143939, 0.143812, 0.143771, 0.143856, 0.143822, 0.143976, 0.143812, 0.143844, 0.144012, 0.143934, 0.143976, 0.143866, 0.144875, 0.143938, 0.144075, 0.143876, 0.143885, 0.143866, 0.143943, 0.143935, 0.144094, 0.143958, 0.14385, 0.143905, 0.143852, 0.14385], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[2, 5, 3, 2, 0, 6, 1, 0, 25, 25, 0, 25, 0, 0, 0, 1, 0, 0]': ([0.144178, 0.143867, 0.144937, 0.144017, 0.143939, 0.143812, 0.143771, 0.143856, 0.143822, 0.143976, 0.143812, 0.143844, 0.144012, 0.143934, 0.143976, 0.143866, 0.144875, 0.143938, 0.144075, 0.143876, 0.143885, 0.143866, 0.143943, 0.143935, 0.144094, 0.143958, 0.14385, 0.143905, 0.143852, 0.14385], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [3, 6, 2, 5, 0, 0, 0, 27, 28, 2, 0, 0, 0, 1]
Fixed Factors: {'ACOPY_y': 0, 'U1_I': 25, 'U_J': 0, 'SCR': 1}
Testing candidate 17: [3, 6, 2, 5, 0, 0, 0, 0, 25, 27, 0, 28, 2, 0, 0, 1, 0, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	5
        Additions: 		7698
        Multiplications: 	3782
        Divisions: 		0
        Logical: 		0
        Reads: 			14412
        Writes: 		2308
        Comparisons:		22
        Gotos: 			0
        
digraph CFG {
	ForLoop20921674 [label="ForLoop20921674  for (j=jj; j<=cbv_9; j=j+1) {...",shape=box];
	ForLoop20921674 -> 20921673;
	ForLoop20921674 -> _JOIN_20921674;
	21108072 [label="21108072  double scv_152;...",shape=box];
	_JOIN_20921565 [label="_JOIN_20921565None...",shape=box];
	_JOIN_20921565 -> _JOIN_20921567;
	21225087 [label="21225087  register int cbv_11, cbv_12;...",shape=box];
	20859365 [label="20859365  double x_copy;...",shape=box];
	ForLoop20458150 [label="ForLoop20458150  for (i=ny-((ny-(0))%26); i<=ny-1; i=i+1) ...",shape=box];
	ForLoop20458150 -> 20458149;
	ForLoop20458150 -> _JOIN_20458150;
	20892414 [label="20892414  int i;...",shape=box];
	20892414 -> ForLoop20921569;
	_JOIN_20922587 [label="_JOIN_20922587None...",shape=box];
	_JOIN_20922587 -> _JOIN_20922590;
	20921673 [label="20921673  scv_153=scv_153+A[i*ny+j]*x[j];...",shape=box];
	20921673 -> _JOIN_20921674;
	_JOIN_20922591 [label="_JOIN_20922591None...",shape=box];
	21104601 [label="21104601  double scv_95, scv_96, scv_97, scv_98, scv_99, scv_100, scv_101, scv_102;...",shape=box];
	_JOIN_20922590 [label="_JOIN_20922590None...",shape=box];
	_JOIN_20922590 -> _JOIN_20922591;
	20457854 [label="20457854  y[i]=0.0;...",shape=box];
	21110495 [label="21110495  double scv_153;...",shape=box];
	20457422 [label="20457422  int i;...",shape=box];
	20457422 -> ForLoop20458081;
	_JOIN_20892413 [label="_JOIN_20892413None...",shape=box];
	_JOIN_20892413 -> 20892414;
	20924033 [label="20924033  double scv_1;...",shape=box];
	_JOIN_20892411 [label="_JOIN_20892411None...",shape=box];
	_JOIN_20892411 -> 21018555;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 20457422;
	21021428 [label="21021428  double scv_64;...",shape=box];
	ForLoop20921675 [label="ForLoop20921675  for (jj=0; jj<=ny-1; jj=jj+512) {...",shape=box];
	ForLoop20921675 -> 21223987;
	ForLoop20921675 -> _JOIN_20921675;
	_JOIN_20920794 [label="_JOIN_20920794None...",shape=box];
	_JOIN_20920794 -> 21223907;
	ForLoop20921567 [label="ForLoop20921567  for (kk=0; kk<=ny-1; kk=kk+32) {...",shape=box];
	ForLoop20921567 -> 20893535;
	ForLoop20921567 -> _JOIN_20921567;
	ForLoop20921565 [label="ForLoop20921565  for (k=cbv_7; k<=cbv_8; k=k+1) {...",shape=box];
	ForLoop20921565 -> 21062457;
	ForLoop20921565 -> _JOIN_20921565;
	ForLoop20458081 [label="ForLoop20458081  for (i=0; i<=ny-26; i=i+26) {...",shape=box];
	ForLoop20458081 -> 20457854;
	ForLoop20458081 -> _JOIN_20458081;
	21223907 [label="21223907  register int cbv_7, cbv_8;...",shape=box];
	_JOIN_20921675 [label="_JOIN_20921675None...",shape=box];
	_JOIN_20921675 -> ForLoop20922585;
	_JOIN_20921674 [label="_JOIN_20921674None...",shape=box];
	_JOIN_20921674 -> _JOIN_20921675;
	_JOIN_20893521 [label="_JOIN_20893521None...",shape=box];
	_JOIN_20893521 -> ForLoop20921567;
	ForLoop20893521 [label="ForLoop20893521  for (jj=0; jj<=ny-1; jj=jj+512) {...",shape=box];
	ForLoop20893521 -> 21207525;
	ForLoop20893521 -> _JOIN_20893521;
	21207525 [label="21207525  register int cbv_5;...",shape=box];
	21206981 [label="21206981  register int cbv_3, cbv_4;...",shape=box];
	ForLoop20860376 [label="ForLoop20860376  for (jj=0; jj<=ny-1; jj=jj+512) {...",shape=box];
	ForLoop20860376 -> 21188335;
	ForLoop20860376 -> _JOIN_20860376;
	ForLoop20892413 [label="ForLoop20892413  for (it=ii; it<=min(nx-1,ii+63)-31; it=it+32) {...",shape=box];
	ForLoop20892413 -> 21018537;
	ForLoop20892413 -> _JOIN_20892413;
	ForLoop20860375 [label="ForLoop20860375  for (j=jj; j<=cbv_1; j=j+1) {...",shape=box];
	ForLoop20860375 -> 20924033;
	ForLoop20860375 -> _JOIN_20860375;
	21018555 [label="21018555  tmp[(it+21)]=scv_32;...",shape=box];
	ForLoop20922587 [label="ForLoop20922587  for (i=(min(nx-1,ii+63))-(((min(nx-1,ii+63))-(it)+1)%28)+1; i<=min(nx-1,ii+63); i=i+1) {...",shape=box];
	ForLoop20922587 -> 21110495;
	ForLoop20922587 -> _JOIN_20922587;
	ForLoop20922583 [label="ForLoop20922583  for (k=cbv_11; k<=cbv_12; k=k+1) {...",shape=box];
	ForLoop20922583 -> 21108072;
	ForLoop20922583 -> _JOIN_20922583;
	21018537 [label="21018537  double scv_32, scv_33, scv_34, scv_35, scv_36, scv_37, scv_38, scv_39;...",shape=box];
	20970846 [label="20970846  double scv_31;...",shape=box];
	ForLoop20893519 [label="ForLoop20893519  for (j=jj; j<=cbv_5; j=j+1) {...",shape=box];
	ForLoop20893519 -> 21021428;
	ForLoop20893519 -> _JOIN_20893519;
	21104619 [label="21104619  tmp[(i+20)]=scv_95;...",shape=box];
	21059241 [label="21059241  double scv_65, scv_66, scv_67, scv_68, scv_69, scv_70, scv_71, scv_72;...",shape=box];
	ForLoop20892411 [label="ForLoop20892411  for (kk=0; kk<=ny-1; kk=kk+32) {...",shape=box];
	ForLoop20892411 -> 20860390;
	ForLoop20892411 -> _JOIN_20892411;
	_JOIN_20922515 [label="_JOIN_20922515None...",shape=box];
	_JOIN_20922515 -> 21225087;
	21110507 [label="21110507  tmp[i]=scv_153;...",shape=box];
	21110507 -> _JOIN_20922587;
	_JOIN_20860376 [label="_JOIN_20860376None...",shape=box];
	_JOIN_20860376 -> ForLoop20892411;
	_JOIN_20860375 [label="_JOIN_20860375None...",shape=box];
	_JOIN_20860375 -> _JOIN_20860376;
	_JOIN_20921567 [label="_JOIN_20921567None...",shape=box];
	_JOIN_20921567 -> 21104619;
	_JOIN_20922585 [label="_JOIN_20922585None...",shape=box];
	_JOIN_20922585 -> 21110507;
	_JOIN_20458081 [label="_JOIN_20458081None...",shape=box];
	_JOIN_20458081 -> ForLoop20458150;
	ForLoop20922585 [label="ForLoop20922585  for (kk=0; kk<=ny-1; kk=kk+32) {...",shape=box];
	ForLoop20922585 -> 20921689;
	ForLoop20922585 -> _JOIN_20922585;
	_JOIN_20921569 [label="_JOIN_20921569None...",shape=box];
	_JOIN_20921569 -> ForLoop20922587;
	ForLoop20920794 [label="ForLoop20920794  for (k=kk; k<=cbv_6; k=k+29) {...",shape=box];
	ForLoop20920794 -> 21059241;
	ForLoop20920794 -> _JOIN_20920794;
	20860390 [label="20860390  int k;...",shape=box];
	ForLoop20922515 [label="ForLoop20922515  for (k=kk; k<=cbv_10; k=k+29) {...",shape=box];
	ForLoop20922515 -> 21107395;
	ForLoop20922515 -> _JOIN_20922515;
	20967254 [label="20967254  double scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8, scv_9;...",shape=box];
	_JOIN_20893519 [label="_JOIN_20893519None...",shape=box];
	_JOIN_20893519 -> _JOIN_20893521;
	_JOIN_20892409 [label="_JOIN_20892409None...",shape=box];
	_JOIN_20892409 -> _JOIN_20892411;
	21062457 [label="21062457  double scv_94;...",shape=box];
	20921689 [label="20921689  int k;...",shape=box];
	ForLoop20891534 [label="ForLoop20891534  for (k=kk; k<=cbv_2; k=k+29) {...",shape=box];
	ForLoop20891534 -> 20967254;
	ForLoop20891534 -> _JOIN_20891534;
	20893535 [label="20893535  int k;...",shape=box];
	ForLoop20892409 [label="ForLoop20892409  for (k=cbv_3; k<=cbv_4; k=k+1) {...",shape=box];
	ForLoop20892409 -> 20970846;
	ForLoop20892409 -> _JOIN_20892409;
	_JOIN_20458150 [label="_JOIN_20458150None...",shape=box];
	_JOIN_20458150 -> 20859365;
	20458149 [label="20458149  y[i]=0.0;...",shape=box];
	20458149 -> _JOIN_20458150;
	_JOIN_20922583 [label="_JOIN_20922583None...",shape=box];
	_JOIN_20922583 -> _JOIN_20922585;
	21188335 [label="21188335  register int cbv_1;...",shape=box];
	21107395 [label="21107395  double scv_123, scv_124, scv_125, scv_126, scv_127, scv_128, scv_129, scv_130;...",shape=box];
	21223987 [label="21223987  register int cbv_9;...",shape=box];
	_JOIN_20891534 [label="_JOIN_expected=9369846271501.798828
actual=9369846271501.798828
20891534None...",shape=box];
	_JOIN_20891534 -> 21206981;
	ForLoop20921569 [label="ForLoop20921569  for (i=it; i<=min(nx-1,ii+63)-27; i=i+28) {...",shape=box];
	ForLoop20921569 -> 21104601;
	ForLoop20921569 -> _JOIN_20921569;
	ForLoop20922591 [label="ForLoop20922591  for (iii=0; iii<=nx-1; iii=iii+1024) {...",shape=box];
	ForLoop20922591 -> ForLoop20922590;
	ForLoop20922591 -> _JOIN_20922591;
	ForLoop20922590 [label="ForLoop20922590  for (ii=iii; ii<=min(nx-1,iii+960); ii=ii+64) {...",shape=box];
	ForLoop20922590 -> ForLoop20892413;
	ForLoop20922590 -> _JOIN_20922590;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest87.exe __orio_perftest87.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest87.exe  
{'[3, 6, 2, 5, 0, 0, 0, 0, 25, 27, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.203956}
{'[3, 6, 2, 5, 0, 0, 0, 0, 25, 27, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.203242}
{'[3, 6, 2, 5, 0, 0, 0, 0, 25, 27, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.20298}
{'[3, 6, 2, 5, 0, 0, 0, 0, 25, 27, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.202985}
{'[3, 6, 2, 5, 0, 0, 0, 0, 25, 27, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.203086}
{'[3, 6, 2, 5, 0, 0, 0, 0, 25, 27, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.203557}
{'[3, 6, 2, 5, 0, 0, 0, 0, 25, 27, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.203426}
{'[3, 6, 2, 5, 0, 0, 0, 0, 25, 27, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.203109}
{'[3, 6, 2, 5, 0, 0, 0, 0, 25, 27, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.20319}
{'[3, 6, 2, 5, 0, 0, 0, 0, 25, 27, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.203356}
{'[3, 6, 2, 5, 0, 0, 0, 0, 25, 27, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.203349}
{'[3, 6, 2, 5, 0, 0, 0, 0, 25, 27, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.203535}
{'[3, 6, 2, 5, 0, 0, 0, 0, 25, 27, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.203102}
{'[3, 6, 2, 5, 0, 0, 0, 0, 25, 27, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.203127}
{'[3, 6, 2, 5, 0, 0, 0, 0, 25, 27, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.203612}
{'[3, 6, 2, 5, 0, 0, 0, 0, 25, 27, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.203341}
{'[3, 6, 2, 5, 0, 0, 0, 0, 25, 27, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.203224}
{'[3, 6, 2, 5, 0, 0, 0, 0, 25, 27, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.203182}
{'[3, 6, 2, 5, 0, 0, 0, 0, 25, 27, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.203168}
{'[3, 6, 2, 5, 0, 0, 0, 0, 25, 27, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.203406}
{'[3, 6, 2, 5, 0, 0, 0, 0, 25, 27, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.203133}
{'[3, 6, 2, 5, 0, 0, 0, 0, 25, 27, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.203818}
{'[3, 6, 2, 5, 0, 0, 0, 0, 25, 27, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.203296}
{'[3, 6, 2, 5, 0, 0, 0, 0, 25, 27, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.20338}
{'[3, 6, 2, 5, 0, 0, 0, 0, 25, 27, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.20328}
{'[3, 6, 2, 5, 0, 0, 0, 0, 25, 27, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.203486}
{'[3, 6, 2, 5, 0, 0, 0, 0, 25, 27, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.203651}
{'[3, 6, 2, 5, 0, 0, 0, 0, 25, 27, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.203309}
{'[3, 6, 2, 5, 0, 0, 0, 0, 25, 27, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.203809}
{'[3, 6, 2, 5, 0, 0, 0, 0, 25, 27, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.203564}

out:
 ["{'[3, 6, 2, 5, 0, 0, 0, 0, 25, 27, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.203956}", "{'[3, 6, 2, 5, 0, 0, 0, 0, 25, 27, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.203242}", "{'[3, 6, 2, 5, 0, 0, 0, 0, 25, 27, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.20298}", "{'[3, 6, 2, 5, 0, 0, 0, 0, 25, 27, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.202985}", "{'[3, 6, 2, 5, 0, 0, 0, 0, 25, 27, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.203086}", "{'[3, 6, 2, 5, 0, 0, 0, 0, 25, 27, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.203557}", "{'[3, 6, 2, 5, 0, 0, 0, 0, 25, 27, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.203426}", "{'[3, 6, 2, 5, 0, 0, 0, 0, 25, 27, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.203109}", "{'[3, 6, 2, 5, 0, 0, 0, 0, 25, 27, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.20319}", "{'[3, 6, 2, 5, 0, 0, 0, 0, 25, 27, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.203356}", "{'[3, 6, 2, 5, 0, 0, 0, 0, 25, 27, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.203349}", "{'[3, 6, 2, 5, 0, 0, 0, 0, 25, 27, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.203535}", "{'[3, 6, 2, 5, 0, 0, 0, 0, 25, 27, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.203102}", "{'[3, 6, 2, 5, 0, 0, 0, 0, 25, 27, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.203127}", "{'[3, 6, 2, 5, 0, 0, 0, 0, 25, 27, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.203612}", "{'[3, 6, 2, 5, 0, 0, 0, 0, 25, 27, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.203341}", "{'[3, 6, 2, 5, 0, 0, 0, 0, 25, 27, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.203224}", "{'[3, 6, 2, 5, 0, 0, 0, 0, 25, 27, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.203182}", "{'[3, 6, 2, 5, 0, 0, 0, 0, 25, 27, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.203168}", "{'[3, 6, 2, 5, 0, 0, 0, 0, 25, 27, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.203406}", "{'[3, 6, 2, 5, 0, 0, 0, 0, 25, 27, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.203133}", "{'[3, 6, 2, 5, 0, 0, 0, 0, 25, 27, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.203818}", "{'[3, 6, 2, 5, 0, 0, 0, 0, 25, 27, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.203296}", "{'[3, 6, 2, 5, 0, 0, 0, 0, 25, 27, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.20338}", "{'[3, 6, 2, 5, 0, 0, 0, 0, 25, 27, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.20328}", "{'[3, 6, 2, 5, 0, 0, 0, 0, 25, 27, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.203486}", "{'[3, 6, 2, 5, 0, 0, 0, 0, 25, 27, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.203651}", "{'[3, 6, 2, 5, 0, 0, 0, 0, 25, 27, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.203309}", "{'[3, 6, 2, 5, 0, 0, 0, 0, 25, 27, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.203809}", "{'[3, 6, 2, 5, 0, 0, 0, 0, 25, 27, 0, 28, 2, 0, 0, 1, 0, 1]' : 0.203564}"]
returning from 'run': {'[3, 6, 2, 5, 0, 0, 0, 0, 25, 27, 0, 28, 2, 0, 0, 1, 0, 1]': ([0.203956, 0.203242, 0.20298, 0.202985, 0.203086, 0.203557, 0.203426, 0.203109, 0.20319, 0.203356, 0.203349, 0.203535, 0.203102, 0.203127, 0.203612, 0.203341, 0.203224, 0.203182, 0.203168, 0.203406, 0.203133, 0.203818, 0.203296, 0.20338, 0.20328, 0.203486, 0.203651, 0.203309, 0.203809, 0.203564], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.203956, 0.203242, 0.20298, 0.202985, 0.203086, 0.203557, 0.203426, 0.203109, 0.20319, 0.203356, 0.203349, 0.203535, 0.203102, 0.203127, 0.203612, 0.203341, 0.203224, 0.203182, 0.203168, 0.203406, 0.203133, 0.203818, 0.203296, 0.20338, 0.20328, 0.203486, 0.203651, 0.203309, 0.203809, 0.203564], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[3, 6, 2, 5, 0, 0, 0, 0, 25, 27, 0, 28, 2, 0, 0, 1, 0, 1]': ([0.203956, 0.203242, 0.20298, 0.202985, 0.203086, 0.203557, 0.203426, 0.203109, 0.20319, 0.203356, 0.203349, 0.203535, 0.203102, 0.203127, 0.203612, 0.203341, 0.203224, 0.203182, 0.203168, 0.203406, 0.203133, 0.203818, 0.203296, 0.20338, 0.20328, 0.203486, 0.203651, 0.203309, 0.203809, 0.203564], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [0, 2, 5, 6, 5, 4, 0, 17, 29, 0, 0, 0, 0, 1]
Fixed Factors: {'ACOPY_y': 0, 'U1_I': 25, 'U_J': 0, 'SCR': 1}
Testing candidate 18: [0, 2, 5, 6, 5, 4, 0, 0, 25, 17, 0, 29, 0, 0, 0, 1, 0, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	5
        Additions: 		2569
        Multiplications: 	1216
        Divisions: 		0
        Logical: 		0
        Reads: 			4968
        Writes: 		863
        Comparisons:		19
        Gotos: 			0
        
digraph CFG {
	_JOIN_21338233 [label="_JOIN_21338233None...",shape=box];
	_JOIN_21338233 -> _JOIN_21338235;
	_JOIN_21338360 [label="_JOIN_21338360None...",shape=box];
	_JOIN_21338360 -> _JOIN_21338361;
	21318851 [label="21318851  double x_copy;...",shape=box];
	_JOIN_21338362 [label="_JOIN_21338362None...",shape=box];
	_JOIN_21338362 -> ForLoop21339319;
	ForLoop21339316 [label="ForLoop21339316  for (k=cbv_7; k<=cbv_8; k=k+1) {...",shape=box];
	ForLoop21339316 -> 21413382;
	ForLoop21339316 -> _JOIN_21339316;
	21338359 [label="21338359  scv_82=scv_82+A[i*ny+j]*x[j];...",shape=box];
	21338359 -> _JOIN_21338360;
	_JOIN_21339319 [label="_JOIN_21339319None...",shape=box];
	_JOIN_21339319 -> 21417138;
	_JOIN_21339248 [label="_JOIN_21339248None...",shape=box];
	_JOIN_21339248 -> 21442978;
	ForLoop21226043 [label="ForLoop21226043  for (i=0; i<=ny-26; i=i+26) {...",shape=box];
	ForLoop21226043 -> 21225816;
	ForLoop21226043 -> _JOIN_21226043;
	21441844 [label="21441844  register int cbv_5;...",shape=box];
	_JOIN_21339321 [label="_JOIN_21339321None...",shape=box];
	_JOIN_21339321 -> _JOIN_21339323;
	_JOIN_21319609 [label="_JOIN_21319609None...",shape=box];
	_JOIN_21319609 -> _JOIN_21319611;
	_JOIN_21337720 [label="_JOIN_21337720None...",shape=box];
	_JOIN_21337720 -> 21441764;
	ForLoop21339318 [label="ForLoop21339318  for (kk=kkk; kk<=min(ny-1,kkk+256); kk=kk+256) {...",shape=box];
	ForLoop21339318 -> 21338394;
	ForLoop21339318 -> _JOIN_21339318;
	ForLoop21339319 [label="ForLoop21339319  for (kkk=0; kkk<=ny-1; kkk=kkk+512) {...",shape=box];
	ForLoop21339319 -> ForLoop21339318;
	ForLoop21339319 -> _JOIN_21339319;
	ForLoop21226112 [label="ForLoop21226112  for (i=ny-((ny-(0))%26); i<=ny-1; i=i+1) ...",shape=box];
	ForLoop21226112 -> 21226111;
	ForLoop21226112 -> _JOIN_21226112;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 21225384;
	21225384 [label="21225384  int i;...",shape=box];
	21225384 -> ForLoop21226043;
	ForLoop21338233 [label="ForLoop21338233  for (kk=kkk; kk<=min(ny-1,kkk+256); kk=kk+256) {...",shape=box];
	ForLoop21338233 -> 21319645;
	ForLoop21338233 -> _JOIN_21338233;
	ForLoop21338231 [label="ForLoop21338231  for (k=cbv_3; k<=cbv_4; k=k+1) {...",shape=box];
	ForLoop21338231 -> 21368120;
	ForLoop21338231 -> _JOIN_21338231;
	ForLoop21338237 [label="ForLoop21338237  for (i=iii; i<=min(nx-1,iii+2047)-17; i=i+18) {...",shape=box];
	ForLoop21338237 -> 21410278;
	ForLoop21338237 -> _JOIN_21338237;
	_JOIN_21338361 [label="_JOIN_21338361None...",shape=box];
	_JOIN_21338361 -> _JOIN_21338362;
	ForLoop21338235 [label="ForLoop21338235  for (kkk=0; kkk<=ny-1; kkk=kkk+512) {...",shape=box];
	ForLoop21338235 -> ForLoop21338233;
	ForLoop21338235 -> _JOIN_21338235;
	ForLoop21339248 [label="ForLoop21339248  for (k=kk; k<=cbv_6; k=k+30) {...",shape=box];
	ForLoop21339248 -> 21412684;
	ForLoop21339248 -> _JOIN_21339248;
	ForLoop21337720 [label="ForLoop21337720  for (k=kk; k<=cbv_2; k=k+30) {...",shape=box];
	ForLoop21337720 -> 21365789;
	ForLoop21337720 -> _JOIN_21337720;
	_JOIN_21339316 [label="_JOIN_21339316None...",shape=box];
	_JOIN_21339316 -> _JOIN_21339318;
	_JOIN_21226043 [label="_JOIN_21226043None...",shape=box];
	_JOIN_21226043 -> ForLoop21226112;
	ForLoop21319609 [label="ForLoop21319609  for (j=jj; j<=cbv_1; j=j+1) {...",shape=box];
	ForLoop21319609 -> 21340135;
	ForLoop21319609 -> _JOIN_21319609;
	21226111 [label="21226111  y[i]=0.0;...",shape=box];
	21226111 -> _JOIN_21226112;
	21412684 [label="21412684  double scv_51, scv_52, scv_53, scv_54, scv_55, scv_56, scv_57, scv_58;...",shape=box];
	21318866 [label="21318866  int i;...",shape=box];
	21318866 -> ForLoop21338237;
	21413382 [label="21413382  double scv_81;...",shape=box];
	ForLoop21338361 [label="ForLoop21338361  for (jj=jjj; jj<=min(ny-1,jjj+992); jj=jj+32) {...",shape=box];
	ForLoop21338361 -> 21441844;
	ForLoop21338361 -> _JOIN_21338361;
	ForLoop21338362 [label="ForLoop21338362  for (jjj=0; jjj<=ny-1; jjj=jjj+1024) {...",shape=box];
	ForLoop21338362 -> ForLoop21338361;
	ForLoop21338362 -> _JOIN_21338362;
	21368120 [label="21368120  double scv_32;...",shape=box];
	21442978 [label="21442978  register int cbv_7, cbv_8;...",shape=box];
	21319645 [label="21319645  int k;...",shape=box];
	_JOIN_21338237 [label="_JOIN_21338237None...",shape=box];
	_JOIN_21338237 -> ForLoop21339321;
	21430685 [label="21430685  register int cbv_1;...",shape=box];
	21410278 [label="21410278  double scv_33, scv_34, scv_35, scv_36, scv_37, scv_38, scv_39, scv_40;...",shape=box];
	_JOIN_21339318 [label="_JOIN_21339318None...",shape=box];
	_JOIN_21339318 -> _JOIN_21339319;
	_JOIN_21338231 [label="_JOIN_21338231None...",shape=box];
	_JOIN_21338231 -> _JOIN_21338233;
	ForLoop21339323 [label="ForLoop21339323  for (iii=0; iii<=nx-1; iii=iii+2048) {...",shape=box];
	ForLoop21339323 -> 21318866;
	ForLoop21339323 -> _JOIN_21339323;
	ForLoop21339321 [label="ForLoop21339321  for (i=(min(nx-1,iii+2047))-(((min(nx-1,iii+2047))-(iii)+1)%18)+1; i<=min(nx-1,iii+2047); i=i+1) {...",shape=box];
	ForLoop2expected=9369846271501.798828
actual=9369846271501.798828
1339321 -> 21417126;
	ForLoop21339321 -> _JOIN_21339321;
	_JOIN_21319611 [label="_JOIN_21319611None...",shape=box];
	_JOIN_21319611 -> _JOIN_21319613;
	_JOIN_21319613 [label="_JOIN_21319613None...",shape=box];
	_JOIN_21319613 -> ForLoop21338235;
	21338394 [label="21338394  int k;...",shape=box];
	_JOIN_21339323 [label="_JOIN_21339323None...",shape=box];
	_JOIN_21226112 [label="_JOIN_21226112None...",shape=box];
	_JOIN_21226112 -> 21318851;
	ForLoop21319611 [label="ForLoop21319611  for (jj=jjj; jj<=min(ny-1,jjj+992); jj=jj+32) {...",shape=box];
	ForLoop21319611 -> 21430685;
	ForLoop21319611 -> _JOIN_21319611;
	ForLoop21319613 [label="ForLoop21319613  for (jjj=0; jjj<=ny-1; jjj=jjj+1024) {...",shape=box];
	ForLoop21319613 -> ForLoop21319611;
	ForLoop21319613 -> _JOIN_21319613;
	21417126 [label="21417126  double scv_82;...",shape=box];
	_JOIN_21338235 [label="_JOIN_21338235None...",shape=box];
	_JOIN_21338235 -> 21410296;
	ForLoop21338360 [label="ForLoop21338360  for (j=jj; j<=cbv_5; j=j+1) {...",shape=box];
	ForLoop21338360 -> 21338359;
	ForLoop21338360 -> _JOIN_21338360;
	21225816 [label="21225816  y[i]=0.0;...",shape=box];
	21365789 [label="21365789  double scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8, scv_9;...",shape=box];
	21441764 [label="21441764  register int cbv_3, cbv_4;...",shape=box];
	21410296 [label="21410296  tmp[(i+12)]=scv_33;...",shape=box];
	21417138 [label="21417138  tmp[i]=scv_82;...",shape=box];
	21417138 -> _JOIN_21339321;
	21340135 [label="21340135  double scv_1;...",shape=box];

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest88.exe __orio_perftest88.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest88.exe  
{'[0, 2, 5, 6, 5, 4, 0, 0, 25, 17, 0, 29, 0, 0, 0, 1, 0, 1]' : 0.105817}
{'[0, 2, 5, 6, 5, 4, 0, 0, 25, 17, 0, 29, 0, 0, 0, 1, 0, 1]' : 0.105499}
{'[0, 2, 5, 6, 5, 4, 0, 0, 25, 17, 0, 29, 0, 0, 0, 1, 0, 1]' : 0.105374}
{'[0, 2, 5, 6, 5, 4, 0, 0, 25, 17, 0, 29, 0, 0, 0, 1, 0, 1]' : 0.105369}
{'[0, 2, 5, 6, 5, 4, 0, 0, 25, 17, 0, 29, 0, 0, 0, 1, 0, 1]' : 0.105374}
{'[0, 2, 5, 6, 5, 4, 0, 0, 25, 17, 0, 29, 0, 0, 0, 1, 0, 1]' : 0.10541}
{'[0, 2, 5, 6, 5, 4, 0, 0, 25, 17, 0, 29, 0, 0, 0, 1, 0, 1]' : 0.105361}
{'[0, 2, 5, 6, 5, 4, 0, 0, 25, 17, 0, 29, 0, 0, 0, 1, 0, 1]' : 0.10532}
{'[0, 2, 5, 6, 5, 4, 0, 0, 25, 17, 0, 29, 0, 0, 0, 1, 0, 1]' : 0.1059}
{'[0, 2, 5, 6, 5, 4, 0, 0, 25, 17, 0, 29, 0, 0, 0, 1, 0, 1]' : 0.105332}
{'[0, 2, 5, 6, 5, 4, 0, 0, 25, 17, 0, 29, 0, 0, 0, 1, 0, 1]' : 0.105438}
{'[0, 2, 5, 6, 5, 4, 0, 0, 25, 17, 0, 29, 0, 0, 0, 1, 0, 1]' : 0.105416}
{'[0, 2, 5, 6, 5, 4, 0, 0, 25, 17, 0, 29, 0, 0, 0, 1, 0, 1]' : 0.105715}
{'[0, 2, 5, 6, 5, 4, 0, 0, 25, 17, 0, 29, 0, 0, 0, 1, 0, 1]' : 0.105329}
{'[0, 2, 5, 6, 5, 4, 0, 0, 25, 17, 0, 29, 0, 0, 0, 1, 0, 1]' : 0.105466}
{'[0, 2, 5, 6, 5, 4, 0, 0, 25, 17, 0, 29, 0, 0, 0, 1, 0, 1]' : 0.105346}
{'[0, 2, 5, 6, 5, 4, 0, 0, 25, 17, 0, 29, 0, 0, 0, 1, 0, 1]' : 0.105466}
{'[0, 2, 5, 6, 5, 4, 0, 0, 25, 17, 0, 29, 0, 0, 0, 1, 0, 1]' : 0.105549}
{'[0, 2, 5, 6, 5, 4, 0, 0, 25, 17, 0, 29, 0, 0, 0, 1, 0, 1]' : 0.10545}
{'[0, 2, 5, 6, 5, 4, 0, 0, 25, 17, 0, 29, 0, 0, 0, 1, 0, 1]' : 0.10532}
{'[0, 2, 5, 6, 5, 4, 0, 0, 25, 17, 0, 29, 0, 0, 0, 1, 0, 1]' : 0.105504}
{'[0, 2, 5, 6, 5, 4, 0, 0, 25, 17, 0, 29, 0, 0, 0, 1, 0, 1]' : 0.105305}
{'[0, 2, 5, 6, 5, 4, 0, 0, 25, 17, 0, 29, 0, 0, 0, 1, 0, 1]' : 0.105465}
{'[0, 2, 5, 6, 5, 4, 0, 0, 25, 17, 0, 29, 0, 0, 0, 1, 0, 1]' : 0.105762}
{'[0, 2, 5, 6, 5, 4, 0, 0, 25, 17, 0, 29, 0, 0, 0, 1, 0, 1]' : 0.105402}
{'[0, 2, 5, 6, 5, 4, 0, 0, 25, 17, 0, 29, 0, 0, 0, 1, 0, 1]' : 0.105455}
{'[0, 2, 5, 6, 5, 4, 0, 0, 25, 17, 0, 29, 0, 0, 0, 1, 0, 1]' : 0.105316}
{'[0, 2, 5, 6, 5, 4, 0, 0, 25, 17, 0, 29, 0, 0, 0, 1, 0, 1]' : 0.105626}
{'[0, 2, 5, 6, 5, 4, 0, 0, 25, 17, 0, 29, 0, 0, 0, 1, 0, 1]' : 0.105311}
{'[0, 2, 5, 6, 5, 4, 0, 0, 25, 17, 0, 29, 0, 0, 0, 1, 0, 1]' : 0.105506}

out:
 ["{'[0, 2, 5, 6, 5, 4, 0, 0, 25, 17, 0, 29, 0, 0, 0, 1, 0, 1]' : 0.105817}", "{'[0, 2, 5, 6, 5, 4, 0, 0, 25, 17, 0, 29, 0, 0, 0, 1, 0, 1]' : 0.105499}", "{'[0, 2, 5, 6, 5, 4, 0, 0, 25, 17, 0, 29, 0, 0, 0, 1, 0, 1]' : 0.105374}", "{'[0, 2, 5, 6, 5, 4, 0, 0, 25, 17, 0, 29, 0, 0, 0, 1, 0, 1]' : 0.105369}", "{'[0, 2, 5, 6, 5, 4, 0, 0, 25, 17, 0, 29, 0, 0, 0, 1, 0, 1]' : 0.105374}", "{'[0, 2, 5, 6, 5, 4, 0, 0, 25, 17, 0, 29, 0, 0, 0, 1, 0, 1]' : 0.10541}", "{'[0, 2, 5, 6, 5, 4, 0, 0, 25, 17, 0, 29, 0, 0, 0, 1, 0, 1]' : 0.105361}", "{'[0, 2, 5, 6, 5, 4, 0, 0, 25, 17, 0, 29, 0, 0, 0, 1, 0, 1]' : 0.10532}", "{'[0, 2, 5, 6, 5, 4, 0, 0, 25, 17, 0, 29, 0, 0, 0, 1, 0, 1]' : 0.1059}", "{'[0, 2, 5, 6, 5, 4, 0, 0, 25, 17, 0, 29, 0, 0, 0, 1, 0, 1]' : 0.105332}", "{'[0, 2, 5, 6, 5, 4, 0, 0, 25, 17, 0, 29, 0, 0, 0, 1, 0, 1]' : 0.105438}", "{'[0, 2, 5, 6, 5, 4, 0, 0, 25, 17, 0, 29, 0, 0, 0, 1, 0, 1]' : 0.105416}", "{'[0, 2, 5, 6, 5, 4, 0, 0, 25, 17, 0, 29, 0, 0, 0, 1, 0, 1]' : 0.105715}", "{'[0, 2, 5, 6, 5, 4, 0, 0, 25, 17, 0, 29, 0, 0, 0, 1, 0, 1]' : 0.105329}", "{'[0, 2, 5, 6, 5, 4, 0, 0, 25, 17, 0, 29, 0, 0, 0, 1, 0, 1]' : 0.105466}", "{'[0, 2, 5, 6, 5, 4, 0, 0, 25, 17, 0, 29, 0, 0, 0, 1, 0, 1]' : 0.105346}", "{'[0, 2, 5, 6, 5, 4, 0, 0, 25, 17, 0, 29, 0, 0, 0, 1, 0, 1]' : 0.105466}", "{'[0, 2, 5, 6, 5, 4, 0, 0, 25, 17, 0, 29, 0, 0, 0, 1, 0, 1]' : 0.105549}", "{'[0, 2, 5, 6, 5, 4, 0, 0, 25, 17, 0, 29, 0, 0, 0, 1, 0, 1]' : 0.10545}", "{'[0, 2, 5, 6, 5, 4, 0, 0, 25, 17, 0, 29, 0, 0, 0, 1, 0, 1]' : 0.10532}", "{'[0, 2, 5, 6, 5, 4, 0, 0, 25, 17, 0, 29, 0, 0, 0, 1, 0, 1]' : 0.105504}", "{'[0, 2, 5, 6, 5, 4, 0, 0, 25, 17, 0, 29, 0, 0, 0, 1, 0, 1]' : 0.105305}", "{'[0, 2, 5, 6, 5, 4, 0, 0, 25, 17, 0, 29, 0, 0, 0, 1, 0, 1]' : 0.105465}", "{'[0, 2, 5, 6, 5, 4, 0, 0, 25, 17, 0, 29, 0, 0, 0, 1, 0, 1]' : 0.105762}", "{'[0, 2, 5, 6, 5, 4, 0, 0, 25, 17, 0, 29, 0, 0, 0, 1, 0, 1]' : 0.105402}", "{'[0, 2, 5, 6, 5, 4, 0, 0, 25, 17, 0, 29, 0, 0, 0, 1, 0, 1]' : 0.105455}", "{'[0, 2, 5, 6, 5, 4, 0, 0, 25, 17, 0, 29, 0, 0, 0, 1, 0, 1]' : 0.105316}", "{'[0, 2, 5, 6, 5, 4, 0, 0, 25, 17, 0, 29, 0, 0, 0, 1, 0, 1]' : 0.105626}", "{'[0, 2, 5, 6, 5, 4, 0, 0, 25, 17, 0, 29, 0, 0, 0, 1, 0, 1]' : 0.105311}", "{'[0, 2, 5, 6, 5, 4, 0, 0, 25, 17, 0, 29, 0, 0, 0, 1, 0, 1]' : 0.105506}"]
returning from 'run': {'[0, 2, 5, 6, 5, 4, 0, 0, 25, 17, 0, 29, 0, 0, 0, 1, 0, 1]': ([0.105817, 0.105499, 0.105374, 0.105369, 0.105374, 0.10541, 0.105361, 0.10532, 0.1059, 0.105332, 0.105438, 0.105416, 0.105715, 0.105329, 0.105466, 0.105346, 0.105466, 0.105549, 0.10545, 0.10532, 0.105504, 0.105305, 0.105465, 0.105762, 0.105402, 0.105455, 0.105316, 0.105626, 0.105311, 0.105506], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.105817, 0.105499, 0.105374, 0.105369, 0.105374, 0.10541, 0.105361, 0.10532, 0.1059, 0.105332, 0.105438, 0.105416, 0.105715, 0.105329, 0.105466, 0.105346, 0.105466, 0.105549, 0.10545, 0.10532, 0.105504, 0.105305, 0.105465, 0.105762, 0.105402, 0.105455, 0.105316, 0.105626, 0.105311, 0.105506], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 5, 6, 5, 4, 0, 0, 25, 17, 0, 29, 0, 0, 0, 1, 0, 1]': ([0.105817, 0.105499, 0.105374, 0.105369, 0.105374, 0.10541, 0.105361, 0.10532, 0.1059, 0.105332, 0.105438, 0.105416, 0.105715, 0.105329, 0.105466, 0.105346, 0.105466, 0.105549, 0.10545, 0.10532, 0.105504, 0.105305, 0.105465, 0.105762, 0.105402, 0.105455, 0.105316, 0.105626, 0.105311, 0.105506], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [4, 1, 5, 0, 5, 0, 1, 0, 25, 1, 1, 0, 0, 1]
Fixed Factors: {'ACOPY_y': 0, 'U1_I': 25, 'U_J': 0, 'SCR': 1}
Testing candidate 19: [4, 1, 5, 0, 5, 0, 1, 0, 25, 0, 0, 25, 1, 1, 0, 1, 0, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	5
        Additions: 		1410
        Multiplications: 	630
        Divisions: 		0
        Logical: 		0
        Reads: 			2842
        Writes: 		526
        Comparisons:		19
        Gotos: 			0
        
digraph CFG {
	21620740 [label="21620740  register int cbv_7, cbv_8;...",shape=box];
	_JOIN_21568057 [label="_JOIN_21568057None...",shape=box];
	_JOIN_21568057 -> _JOIN_21568059;
	ForLoop21569226 [label="ForLoop21569226  for (i=it; i<=min(nx-1,ii+127); i=i+1) {...",shape=box];
	ForLoop21569226 -> 21606061;
	ForLoop21569226 -> _JOIN_21569226;
	_JOIN_21568059 [label="_JOIN_21568059None...",shape=box];
	_JOIN_21568059 -> 21600425;
	_JOIN_21568397 [label="_JOIN_21568397None...",shape=box];
	_JOIN_21568397 -> _JOIN_21568398;
	ForLoop21568059 [label="ForLoop21568059  for (kk=0; kk<=ny-1; kk=kk+256) {...",shape=box];
	ForLoop21568059 -> 21560932;
	ForLoop21568059 -> _JOIN_21568059;
	_JOIN_21560915 [label="_JOIN_21560915None...",shape=box];
	_JOIN_21560915 -> _JOIN_21560917;
	_JOIN_21560917 [label="_JOIN_21560917None...",shape=box];
	_JOIN_21560917 -> _JOIN_21560918;
	_JOIN_21569228 [label="_JOIN_21569228None...",shape=box];
	ForLoop21569222 [label="ForLoop21569222  for (k=cbv_7; k<=cbv_8; k=k+1) {...",shape=box];
	ForLoop21569222 -> 21603624;
	ForLoop21569222 -> _JOIN_21569222;
	_JOIN_21443986 [label="_JOIN_21443986None...",shape=box];
	_JOIN_21443986 -> 21558479;
	_JOIN_21560918 [label="_JOIN_21560918None...",shape=box];
	_JOIN_21560918 -> ForLoop21568059;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 21443258;
	21568412 [label="21568412  int k;...",shape=box];
	21560932 [label="21560932  int k;...",shape=box];
	_JOIN_21568398 [label="_JOIN_21568398None...",shape=box];
	_JOIN_21568398 -> ForLoop21569224;
	ForLoop21560915 [label="ForLoop21560915  for (jt=jj; jt<=cbv_1; jt=jt+8) {...",shape=box];
	ForLoop21560915 -> 21572454;
	ForLoop21560915 -> _JOIN_21560915;
	ForLoop21443917 [label="ForLoop21443917  for (i=0; i<=ny-26; i=i+26) {...",shape=box];
	ForLoop21443917 -> 21443690;
	ForLoop21443917 -> _JOIN_21443917;
	ForLoop21560918 [label="ForLoop21560918  for (jjj=0; jjj<=ny-1; jjj=jjj+1024) {...",shape=box];
	ForLoop21560918 -> ForLoop21560917;
	ForLoop21560918 -> _JOIN_21560918;
	21600425 [label="21600425  tmp[it]=scv_36;...",shape=box];
	21558479 [label="21558479  double x_copy[16];...",shape=box];
	ForLoop21568057 [label="ForLoop21568057  for (k=cbv_3; k<=cbv_4; k=k+1) {...",shape=box];
	ForLoop21568057 -> 21587253;
	ForLoop21568057 -> _JOIN_21568057;
	_JOIN_21568395 [label="_JOIN_21568395None...",shape=box];
	_JOIN_21568395 -> _JOIN_21568397;
	_JOIN_21567806 [label="_JOIN_21567806None...",shape=box];
	_JOIN_21567806 -> 21619480;
	21603010 [label="21603010  double scv_44, scv_45, scv_46, scv_47, scv_48, scv_49, scv_50, scv_51;...",shape=box];
	21568190 [label="21568190  scv_71=scv_71+A[i*ny+jt]*x_copy[(jt-jj)];...",shape=box];
	21586022 [label="21586022  double scv_9, scv_10, scv_11, scv_12, scv_13, scv_14, scv_15, scv_16;...",shape=box];
	21603624 [label="21603624  double scv_70;...",shape=box];
	21606073 [label="21606073  tmp[i]=scv_71;...",shape=box];
	21606073 -> _JOIN_21569226;
	21619480 [label="21619480  register int cbv_3, cbv_4;...",shape=box];
	_JOIN_21568061 [label="_JOIN_21568061None...",shape=box];
	_JOIN_21568061 -> ForLoop21569226;
	ForLoop21443986 [label="ForLoop21443986  for (i=ny-((ny-(0))%26); i<=ny-1; i=i+1) ...",shape=box];
	ForLoop21443986 -> 21443985;
	ForLoop21443986 -> _JOIN_21443986;
	21572454 [label="21572454  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	21558581 [label="21558581  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	21587253 [label="21587253  double scv_35;...",shape=box];
	_JOIN_21569226 [label="_JOIN_21569226None...",shape=box];
	_JOIN_21569226 -> _JOIN_21569228;
	ForLoop21569224 [label="ForLoop21569224  for (kk=0; kk<=ny-1; kk=kk+256) {...",shape=box];
	ForLoop21569224 -> 21568412;
	ForLoop21569224 -> _JOIN_21569224;
	21443690 [label="21443690  y[i]=0.0;...",shape=box];
	ForLoop21569228 [label="ForLoop21569228  for (ii=0; ii<=nx-1; ii=ii+128) {...",shape=box];
	ForLoop21569228 -> ForLoop21568061;
	ForLoop21569228 -> _JOIN_21569228;
	ForLoop21568061 [label="ForLoop21568061  for (it=ii; it<=min(nx-1,ii+127)-7; expected=9369846271501.798828
actual=9369846271501.798828
it=it+8) {...",shape=box];
	ForLoop21568061 -> 21600413;
	ForLoop21568061 -> _JOIN_21568061;
	21443258 [label="21443258  int i;...",shape=box];
	21443258 -> ForLoop21443917;
	21600413 [label="21600413  double scv_36, scv_37, scv_38, scv_39, scv_40, scv_41, scv_42, scv_43;...",shape=box];
	_JOIN_21569222 [label="_JOIN_21569222None...",shape=box];
	_JOIN_21569222 -> _JOIN_21569224;
	21568147 [label="21568147  for (j=jj; j<=min(ny-1,jj+15); j=j+1) ...",shape=box];
	21443985 [label="21443985  y[i]=0.0;...",shape=box];
	21443985 -> _JOIN_21443986;
	ForLoop21568397 [label="ForLoop21568397  for (jj=jjj; jj<=min(ny-1,jjj+1008); jj=jj+16) {...",shape=box];
	ForLoop21568397 -> 21568147;
	ForLoop21568397 -> _JOIN_21568397;
	ForLoop21560917 [label="ForLoop21560917  for (jj=jjj; jj<=min(ny-1,jjj+1008); jj=jj+16) {...",shape=box];
	ForLoop21560917 -> 21558581;
	ForLoop21560917 -> _JOIN_21560917;
	21606061 [label="21606061  double scv_71;...",shape=box];
	ForLoop21567806 [label="ForLoop21567806  for (k=kk; k<=cbv_2; k=k+26) {...",shape=box];
	ForLoop21567806 -> 21586022;
	ForLoop21567806 -> _JOIN_21567806;
	ForLoop21569154 [label="ForLoop21569154  for (k=kk; k<=cbv_6; k=k+26) {...",shape=box];
	ForLoop21569154 -> 21603010;
	ForLoop21569154 -> _JOIN_21569154;
	ForLoop21568395 [label="ForLoop21568395  for (jt=jj; jt<=cbv_5; jt=jt+8) {...",shape=box];
	ForLoop21568395 -> 21568190;
	ForLoop21568395 -> _JOIN_21568395;
	ForLoop21568398 [label="ForLoop21568398  for (jjj=0; jjj<=ny-1; jjj=jjj+1024) {...",shape=box];
	ForLoop21568398 -> ForLoop21568397;
	ForLoop21568398 -> _JOIN_21568398;
	_JOIN_21569154 [label="_JOIN_21569154None...",shape=box];
	_JOIN_21569154 -> 21620740;
	_JOIN_21569224 [label="_JOIN_21569224None...",shape=box];
	_JOIN_21569224 -> 21606073;
	_JOIN_21443917 [label="_JOIN_21443917None...",shape=box];
	_JOIN_21443917 -> ForLoop21443986;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest89.exe __orio_perftest89.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest89.exe  
{'[4, 1, 5, 0, 5, 0, 1, 0, 25, 0, 0, 25, 1, 1, 0, 1, 0, 1]' : 0.079149}
{'[4, 1, 5, 0, 5, 0, 1, 0, 25, 0, 0, 25, 1, 1, 0, 1, 0, 1]' : 0.0787308}
{'[4, 1, 5, 0, 5, 0, 1, 0, 25, 0, 0, 25, 1, 1, 0, 1, 0, 1]' : 0.0787399}
{'[4, 1, 5, 0, 5, 0, 1, 0, 25, 0, 0, 25, 1, 1, 0, 1, 0, 1]' : 0.0786619}
{'[4, 1, 5, 0, 5, 0, 1, 0, 25, 0, 0, 25, 1, 1, 0, 1, 0, 1]' : 0.0786331}
{'[4, 1, 5, 0, 5, 0, 1, 0, 25, 0, 0, 25, 1, 1, 0, 1, 0, 1]' : 0.078711}
{'[4, 1, 5, 0, 5, 0, 1, 0, 25, 0, 0, 25, 1, 1, 0, 1, 0, 1]' : 0.0787239}
{'[4, 1, 5, 0, 5, 0, 1, 0, 25, 0, 0, 25, 1, 1, 0, 1, 0, 1]' : 0.078697}
{'[4, 1, 5, 0, 5, 0, 1, 0, 25, 0, 0, 25, 1, 1, 0, 1, 0, 1]' : 0.0786741}
{'[4, 1, 5, 0, 5, 0, 1, 0, 25, 0, 0, 25, 1, 1, 0, 1, 0, 1]' : 0.0787749}
{'[4, 1, 5, 0, 5, 0, 1, 0, 25, 0, 0, 25, 1, 1, 0, 1, 0, 1]' : 0.07862}
{'[4, 1, 5, 0, 5, 0, 1, 0, 25, 0, 0, 25, 1, 1, 0, 1, 0, 1]' : 0.0786202}
{'[4, 1, 5, 0, 5, 0, 1, 0, 25, 0, 0, 25, 1, 1, 0, 1, 0, 1]' : 0.0791569}
{'[4, 1, 5, 0, 5, 0, 1, 0, 25, 0, 0, 25, 1, 1, 0, 1, 0, 1]' : 0.078701}
{'[4, 1, 5, 0, 5, 0, 1, 0, 25, 0, 0, 25, 1, 1, 0, 1, 0, 1]' : 0.0787351}
{'[4, 1, 5, 0, 5, 0, 1, 0, 25, 0, 0, 25, 1, 1, 0, 1, 0, 1]' : 0.0789781}
{'[4, 1, 5, 0, 5, 0, 1, 0, 25, 0, 0, 25, 1, 1, 0, 1, 0, 1]' : 0.078686}
{'[4, 1, 5, 0, 5, 0, 1, 0, 25, 0, 0, 25, 1, 1, 0, 1, 0, 1]' : 0.07863}
{'[4, 1, 5, 0, 5, 0, 1, 0, 25, 0, 0, 25, 1, 1, 0, 1, 0, 1]' : 0.07867}
{'[4, 1, 5, 0, 5, 0, 1, 0, 25, 0, 0, 25, 1, 1, 0, 1, 0, 1]' : 0.0787392}
{'[4, 1, 5, 0, 5, 0, 1, 0, 25, 0, 0, 25, 1, 1, 0, 1, 0, 1]' : 0.078685}
{'[4, 1, 5, 0, 5, 0, 1, 0, 25, 0, 0, 25, 1, 1, 0, 1, 0, 1]' : 0.0786519}
{'[4, 1, 5, 0, 5, 0, 1, 0, 25, 0, 0, 25, 1, 1, 0, 1, 0, 1]' : 0.0787389}
{'[4, 1, 5, 0, 5, 0, 1, 0, 25, 0, 0, 25, 1, 1, 0, 1, 0, 1]' : 0.0786769}
{'[4, 1, 5, 0, 5, 0, 1, 0, 25, 0, 0, 25, 1, 1, 0, 1, 0, 1]' : 0.078681}
{'[4, 1, 5, 0, 5, 0, 1, 0, 25, 0, 0, 25, 1, 1, 0, 1, 0, 1]' : 0.0787041}
{'[4, 1, 5, 0, 5, 0, 1, 0, 25, 0, 0, 25, 1, 1, 0, 1, 0, 1]' : 0.0787179}
{'[4, 1, 5, 0, 5, 0, 1, 0, 25, 0, 0, 25, 1, 1, 0, 1, 0, 1]' : 0.078789}
{'[4, 1, 5, 0, 5, 0, 1, 0, 25, 0, 0, 25, 1, 1, 0, 1, 0, 1]' : 0.0787671}
{'[4, 1, 5, 0, 5, 0, 1, 0, 25, 0, 0, 25, 1, 1, 0, 1, 0, 1]' : 0.0788209}

out:
 ["{'[4, 1, 5, 0, 5, 0, 1, 0, 25, 0, 0, 25, 1, 1, 0, 1, 0, 1]' : 0.079149}", "{'[4, 1, 5, 0, 5, 0, 1, 0, 25, 0, 0, 25, 1, 1, 0, 1, 0, 1]' : 0.0787308}", "{'[4, 1, 5, 0, 5, 0, 1, 0, 25, 0, 0, 25, 1, 1, 0, 1, 0, 1]' : 0.0787399}", "{'[4, 1, 5, 0, 5, 0, 1, 0, 25, 0, 0, 25, 1, 1, 0, 1, 0, 1]' : 0.0786619}", "{'[4, 1, 5, 0, 5, 0, 1, 0, 25, 0, 0, 25, 1, 1, 0, 1, 0, 1]' : 0.0786331}", "{'[4, 1, 5, 0, 5, 0, 1, 0, 25, 0, 0, 25, 1, 1, 0, 1, 0, 1]' : 0.078711}", "{'[4, 1, 5, 0, 5, 0, 1, 0, 25, 0, 0, 25, 1, 1, 0, 1, 0, 1]' : 0.0787239}", "{'[4, 1, 5, 0, 5, 0, 1, 0, 25, 0, 0, 25, 1, 1, 0, 1, 0, 1]' : 0.078697}", "{'[4, 1, 5, 0, 5, 0, 1, 0, 25, 0, 0, 25, 1, 1, 0, 1, 0, 1]' : 0.0786741}", "{'[4, 1, 5, 0, 5, 0, 1, 0, 25, 0, 0, 25, 1, 1, 0, 1, 0, 1]' : 0.0787749}", "{'[4, 1, 5, 0, 5, 0, 1, 0, 25, 0, 0, 25, 1, 1, 0, 1, 0, 1]' : 0.07862}", "{'[4, 1, 5, 0, 5, 0, 1, 0, 25, 0, 0, 25, 1, 1, 0, 1, 0, 1]' : 0.0786202}", "{'[4, 1, 5, 0, 5, 0, 1, 0, 25, 0, 0, 25, 1, 1, 0, 1, 0, 1]' : 0.0791569}", "{'[4, 1, 5, 0, 5, 0, 1, 0, 25, 0, 0, 25, 1, 1, 0, 1, 0, 1]' : 0.078701}", "{'[4, 1, 5, 0, 5, 0, 1, 0, 25, 0, 0, 25, 1, 1, 0, 1, 0, 1]' : 0.0787351}", "{'[4, 1, 5, 0, 5, 0, 1, 0, 25, 0, 0, 25, 1, 1, 0, 1, 0, 1]' : 0.0789781}", "{'[4, 1, 5, 0, 5, 0, 1, 0, 25, 0, 0, 25, 1, 1, 0, 1, 0, 1]' : 0.078686}", "{'[4, 1, 5, 0, 5, 0, 1, 0, 25, 0, 0, 25, 1, 1, 0, 1, 0, 1]' : 0.07863}", "{'[4, 1, 5, 0, 5, 0, 1, 0, 25, 0, 0, 25, 1, 1, 0, 1, 0, 1]' : 0.07867}", "{'[4, 1, 5, 0, 5, 0, 1, 0, 25, 0, 0, 25, 1, 1, 0, 1, 0, 1]' : 0.0787392}", "{'[4, 1, 5, 0, 5, 0, 1, 0, 25, 0, 0, 25, 1, 1, 0, 1, 0, 1]' : 0.078685}", "{'[4, 1, 5, 0, 5, 0, 1, 0, 25, 0, 0, 25, 1, 1, 0, 1, 0, 1]' : 0.0786519}", "{'[4, 1, 5, 0, 5, 0, 1, 0, 25, 0, 0, 25, 1, 1, 0, 1, 0, 1]' : 0.0787389}", "{'[4, 1, 5, 0, 5, 0, 1, 0, 25, 0, 0, 25, 1, 1, 0, 1, 0, 1]' : 0.0786769}", "{'[4, 1, 5, 0, 5, 0, 1, 0, 25, 0, 0, 25, 1, 1, 0, 1, 0, 1]' : 0.078681}", "{'[4, 1, 5, 0, 5, 0, 1, 0, 25, 0, 0, 25, 1, 1, 0, 1, 0, 1]' : 0.0787041}", "{'[4, 1, 5, 0, 5, 0, 1, 0, 25, 0, 0, 25, 1, 1, 0, 1, 0, 1]' : 0.0787179}", "{'[4, 1, 5, 0, 5, 0, 1, 0, 25, 0, 0, 25, 1, 1, 0, 1, 0, 1]' : 0.078789}", "{'[4, 1, 5, 0, 5, 0, 1, 0, 25, 0, 0, 25, 1, 1, 0, 1, 0, 1]' : 0.0787671}", "{'[4, 1, 5, 0, 5, 0, 1, 0, 25, 0, 0, 25, 1, 1, 0, 1, 0, 1]' : 0.0788209}"]
returning from 'run': {'[4, 1, 5, 0, 5, 0, 1, 0, 25, 0, 0, 25, 1, 1, 0, 1, 0, 1]': ([0.079149, 0.0787308, 0.0787399, 0.0786619, 0.0786331, 0.078711, 0.0787239, 0.078697, 0.0786741, 0.0787749, 0.07862, 0.0786202, 0.0791569, 0.078701, 0.0787351, 0.0789781, 0.078686, 0.07863, 0.07867, 0.0787392, 0.078685, 0.0786519, 0.0787389, 0.0786769, 0.078681, 0.0787041, 0.0787179, 0.078789, 0.0787671, 0.0788209], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.079149, 0.0787308, 0.0787399, 0.0786619, 0.0786331, 0.078711, 0.0787239, 0.078697, 0.0786741, 0.0787749, 0.07862, 0.0786202, 0.0791569, 0.078701, 0.0787351, 0.0789781, 0.078686, 0.07863, 0.07867, 0.0787392, 0.078685, 0.0786519, 0.0787389, 0.0786769, 0.078681, 0.0787041, 0.0787179, 0.078789, 0.0787671, 0.0788209], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[4, 1, 5, 0, 5, 0, 1, 0, 25, 0, 0, 25, 1, 1, 0, 1, 0, 1]': ([0.079149, 0.0787308, 0.0787399, 0.0786619, 0.0786331, 0.078711, 0.0787239, 0.078697, 0.0786741, 0.0787749, 0.07862, 0.0786202, 0.0791569, 0.078701, 0.0787351, 0.0789781, 0.078686, 0.07863, 0.07867, 0.0787392, 0.078685, 0.0786519, 0.0787389, 0.0786769, 0.078681, 0.0787041, 0.0787179, 0.078789, 0.0787671, 0.0788209], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [2, 0, 6, 0, 3, 5, 0, 16, 17, 0, 0, 2, 0, 1]
Fixed Factors: {'ACOPY_y': 0, 'U1_I': 25, 'U_J': 0, 'SCR': 1}
Testing candidate 20: [2, 0, 6, 0, 3, 5, 0, 0, 25, 16, 0, 17, 0, 0, 2, 1, 0, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	51
        Max loop nest depth: 	5
        Additions: 		4702
        Multiplications: 	1872
        Divisions: 		0
        Logical: 		0
        Reads: 			9709
        Writes: 		1990
        Comparisons:		51
        Gotos: 			0
        
digraph CFG {
	ForLoop21791552 [label="ForLoop21791552  for (kt=kk; kt<=cbv_2; kt=kt+32) {...",shape=box];
	ForLoop21791552 -> 21831096;
	ForLoop21791552 -> _JOIN_21791552;
	_JOIN_21792071 [label="_JOIN_21792071None...",shape=box];
	_JOIN_21792071 -> 21990126;
	_JOIN_21792767 [label="_JOIN_21792767None...",shape=box];
	_JOIN_21792767 -> 21990943;
	ForLoop21796277 [label="ForLoop21796277  for (k=kt; k<=cbv_21; k=k+18) {...",shape=box];
	ForLoop21796277 -> 21842004;
	ForLoop21796277 -> _JOIN_21796277;
	21999930 [label="21999930  register int cbv_40, cbv_41;...",shape=box];
	ForLoop21805049 [label="ForLoop21805049  for (i=(min(nx-1,ii+31))-(((min(nx-1,ii+31))-(ii)+1)%17)+1; i<=min(nx-1,ii+31); i=i+1) {...",shape=box];
	ForLoop21805049 -> 21951720;
	ForLoop21805049 -> _JOIN_21805049;
	ForLoop21805043 [label="ForLoop21805043  for (k=cbv_57; k<=cbv_58; k=k+1) {...",shape=box];
	ForLoop21805043 -> 21945689;
	ForLoop21805043 -> _JOIN_21805043;
	ForLoop21805046 [label="ForLoop21805046  for (kk=kkk; kk<=min(ny-1,kkk+512); kk=kk+512) {...",shape=box];
	ForLoop21805046 -> 22004424;
	ForLoop21805046 -> _JOIN_21805046;
	ForLoop21805047 [label="ForLoop21805047  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop21805047 -> ForLoop21805046;
	ForLoop21805047 -> _JOIN_21805047;
	21993394 [label="21993394  register int cbv_16, cbv_17;...",shape=box];
	ForLoop21794947 [label="ForLoop21794947  for (k=cbv_16; k<=cbv_17; k=k+1) {...",shape=box];
	ForLoop21794947 -> 21839642;
	ForLoop21794947 -> _JOIN_21794947;
	21992577 [label="21992577  register int cbv_13, cbv_14;...",shape=box];
	21843412 [label="21843412  double scv_167, scv_168, scv_169, scv_170, scv_171, scv_172, scv_173, scv_174;...",shape=box];
	ForLoop21799085 [label="ForLoop21799085  for (k=kt; k<=cbv_33; k=k+18) {...",shape=box];
	ForLoop21799085 -> 21847636;
	ForLoop21799085 -> _JOIN_21799085;
	_JOIN_21805051 [label="_JOIN_21805051None...",shape=box];
	21995028 [label="21995028  register int cbv_22, cbv_23;...",shape=box];
	21996662 [label="21996662  register int cbv_28, cbv_29;...",shape=box];
	_JOIN_21798457 [label="_JOIN_21798457None...",shape=box];
	_JOIN_21798457 -> 21798459;
	21855130 [label="21855130  double scv_337;...",shape=box];
	_JOIN_21804975 [label="_JOIN_21804975None...",shape=box];
	_JOIN_21804975 -> 22005151;
	_JOIN_21792841 [label="_JOIN_21792841None...",shape=box];
	_JOIN_21792841 -> 21792843;
	21849498 [label="21849498  double scv_261;...",shape=box];
	_JOIN_21796277 [label="_JOIN_21796277None...",shape=box];
	_JOIN_21796277 -> 21995028;
	21839188 [label="21839188  double scv_110, scv_111, scv_112, scv_113, scv_114, scv_115, scv_116, scv_117;...",shape=box];
	ForLoop21800563 [label="ForLoop21800563  for (k=cbv_40; k<=cbv_41; k=k+1) {...",shape=box];
	ForLoop21800563 -> 21850906;
	ForLoop21800563 -> _JOIN_21800563;
	21836826 [label="21836826  double scv_90;...",shape=box];
	21804457 [label="21804457  int k;...",shape=box];
	21794949 [label="21794949  int k;...",shape=box];
	21801267 [label="21801267  int k;...",shape=box];
	21797055 [label="21797055  int k;...",shape=box];
	21849044 [label="21849044  double scv_243, scv_244, scv_245, scv_246, scv_247, scv_248, scv_249, scv_250;...",shape=box];
	_JOIN_21795575 [label="_JOIN_21795575None...",shape=box];
	_JOIN_21795575 -> 21994211;
	_JOIN_21804456 [label="_JOIN_21804456None...",shape=box];
	_JOIN_21804456 -> 21804457;
	ForLoop21795649 [label="ForLoop21795649  for (k=cbv_19; k<=cbv_20; k=k+1) {...",shape=box];
	ForLoop21795649 -> 21841050;
	ForLoop21795649 -> _JOIN_21795649;
	_JOIN_21621741 [label="_JOIN_21621741None...",shape=box];
	_JOIN_21621741 -> 21772627;
	_JOIN_21799085 [label="_JOIN_21799085None...",shape=box];
	_JOIN_21799085 -> 21998296;
	21772627 [label="21772627  double x_copy;...",shape=box];
	_JOIN_21799159 [label="_JOIN_21799159None...",shape=box];
	_JOIN_21799159 -> 21799161;
	ForLoop21794171 [label="ForLoop21794171  for (k=kt; k<=cbv_12; k=k+18) {...",shape=box];
	ForLoop21794171 -> 21837780;
	ForLoop21794171 -> _JOIN_21794171;
	ForLoop21793469 [label="ForLoop21793469  for (k=kt; k<=cbv_9; k=k+18) {...",shape=box];
	ForLoop21793469 -> 21836372;
	ForLoop21793469 -> _JOIN_21793469;
	21796353 [label="21796353  int k;...",shape=box];
	21853722 [label="21853722  double scv_318;...",shape=box];
	21945244 [label="21945244  double scv_406, scv_407, scv_408, scv_409, scv_410, scv_411, scv_412, scv_413;...",shape=box];
	21978588 [label="21978588  register int cbv_1;...",shape=box];
	ForLoop21798457 [label="ForLoop21798457  for (k=cbv_31; k<=cbv_32; k=k+1) {...",shape=box];
	ForLoop21798457 -> 21846682;
	ForLoop21798457 -> _JOIN_21798457;
	21990126 [label="21990126  register int cbv_4, cbv_5;...",shape=box];
	21854676 [label="21854676  double scv_319, scv_320, scv_321, scv_322, scv_323, scv_324, scv_325, scv_326;...",shape=box];
	21990943 [label="21990943  register int cbv_7, cbv_8;...",shape=box];
	22001564 [label="22001564  register int cbv_46, cbv_47;...",shape=box];
	ForLoop21773329 [label="ForLoop21773329  for (j=jjj; j<=cbv_1; j=j+1) {...",shape=box];
	ForLoop21773329 -> 21805818;
	ForLoop21773329 -> _JOIN_21773329;
	_JOIN_21803483 [label="_JOIN_21803483None...",shape=box];
	_JOIN_21803483 -> _JOIN_21803484;
	21621013 [label="21621013  int i;...",shape=box];
	21621013 -> ForLoop21621672;
	ForLoop21797053 [label="ForLoop21797053  for (k=cbv_25; k<=cbv_26; k=k+1) {...",shape=box];
	ForLoop21797053 -> 21843866;
	ForLoop21797053 -> _JOIN_21797053;
	21989399 [label="21989399  register int cbv_2;...",shape=box];
	22000747 [label="22000747  register int cbv_43, cbv_44;...",shape=box];
	21791553 [label="21791553  int k;...",shape=box];
	21836372 [label="21836372  double scv_72, scv_73, scv_74, scv_75, scv_76, scv_77, scv_78, scv_79;...",shape=box];
	_JOIN_21797755 [label="_JOIN_21797755None...",shape=box];
	_JOIN_21797755 -> 21797757;
	21843866 [label="21843866  double scv_185;...",shape=box];
	21842458 [label="21842458  double scv_166;...",shape=box];
	_JOIN_21794873 [label="_JOIN_21794873None...",shape=box];
	_JOIN_21794873 -> 21993394;
	_JOIN_21802595 [label="_JOIN_21802595None...",shape=box];
	_JOIN_21802595 -> 22002381;
	_JOIN_21803484 [label="_JOIN_21803484None...",shape=box];
	_JOIN_21803484 -> ForLoop21805047;
	_JOIN_21805047 [label="_JOIN_21805047None...",shape=box];
	_JOIN_21805047 -> 21951732;
	21943799 [label="21943799  double scv_374, scv_375, scv_376, scv_377, scv_378, scv_379, scv_380, scv_381;...",shape=box];
	ForLoop21795575 [label="ForLoop21795575  for (k=kt; k<=cbv_18; k=k+18) {...",shape=box];
	ForLoop21795575 -> 21840596;
	ForLoop21795575 -> _JOIN_21795575;
	_JOIN_21798383 [label="_JOIN_21798383None...",shape=box];
	_JOIN_21798383 -> 21997479;
	_JOIN_21803297 [label="_JOIN_21803297None...",shape=box];
	_JOIN_21803297 -> 22003198;
	_JOIN_21793543 [label="_JOIN_21793543None...",shape=box];
	_JOIN_21793543 -> 21793545;
	21846682 [label="21846682  double scv_223;...",shape=box];
	21847636 [label="21847636  double scv_224, scv_225, scv_226, scv_227, scv_228, scv_229, scv_230, scv_231;...",shape=box];
	21835418 [label="21835418  double scv_71;...",shape=box];
	ForLoop21797681 [label="ForLoop21797681  for (k=kt; k<=cbv_27; k=k+18) {...",shape=box];
	ForLoop21797681 -> 21844820;
	ForLoop21797681 -> _JOIN_21797681;
	21833565 [label="21833565  double scv_34, scv_35, scv_36, scv_37, scv_38, scv_39, scv_40, scv_41;...",shape=box];
	ForLoop21802669 [label="ForLoop21802669  for (k=cbv_49; k<=cbv_50; k=k+1) {...",shape=box];
	ForLoop21802669 -> 21855130;
	ForLoop21802669 -> _JOIN_21802669;
	ForLoop21797755 [label="ForLoop21797755  for (k=cbv_28; k<=cbv_29; k=k+1) {...",shape=box];
	ForLoop21797755 -> 21845274;
	ForLoop21797755 -> _JOIN_21797755;
	ForLoop21792139 [label="ForLoop21792139  for (k=cbv_4; k<=cbv_5; k=k+1) {...",shape=box];
	ForLoop21792139 -> 21834010;
	ForLoop21792139 -> _JOIN_21792139;
	21794247 [label="21794247  int k;...",shape=box];
	_JOIN_21799787 [label="_JOIN_21799787None...",shape=box];
	_JOIN_21799787 -> 21999113;
	21797757 [label="21797757  int k;...",shape=box];
	ForLoop21773331 [label="ForLoop21773331  for (jjj=0; jjj<=ny-1; jjj=jjj+256) {...",shape=box];
	ForLoop21773331 -> 21978588;
	ForLoop21773331 -> _JOIN_21773331;
	21951732 [label="21951732  tmp[i]=scv_425;...",shape=box];
	21951732 -> _JOIN_21805049;
	ForLoop21796979 [label="ForLoop21796979  for (k=kt; k<=cbv_24; k=k+18) {...",shape=box];
	ForLoop21796979 -> 21843412;
	ForLoop21796979 -> _JOIN_21796979;
	ForLoop21792767 [label="ForLoop21792767  for (k=kt; k<=cbv_6; k=k+18) {...",shape=box];
	ForLoop21792767 -> 21834964;
	ForLoop21792767 -> _JOIN_21792767;
	_JOIN_21773331 [label="_JOIN_21773331None...",shape=box];
	_JOIN_21773331 -> ForLoop21803376;
	_JOIN_21803378 [label="_JOIN_21803378None...",shape=box];
	_JOIN_21803378 -> ForLoop21805049;
	_JOIN_21803374 [label="_JOIN_21803374None...",shape=box];
	_JOIN_21803374 -> _JOIN_21803376;
	_JOIN_21803376 [label="_JOIN_21803376None...",shape=box];
	_JOIN_21803376 -> 21941048;
	21805818 [label="21805818  double scv_1;...",shape=box];
	ForLoop21792841 [label="ForLoop21792841  for (k=cbv_7; k<=cbv_8; k=k+1) {...",shape=box];
	ForLoop21792841 -> 21835418;
	ForLoop21792841 -> _JOIN_21792841;
	21850906 [label="21850906  double scv_280;...",shape=box];
	ForLoop21803483 [label="ForLoop21803483  for (j=jjj; j<=cbv_54; j=j+1) {...",shape=box];
	ForLoop21803483 -> 21803482;
	ForLoop21803483 -> _JOIN_21803483;
	22002381 [label="22002381  register int cbv_49, cbv_50;...",shape=box];
	_JOIN_21800489 [label="_JOIN_21800489None...",shape=box];
	_JOIN_21800489 -> 21999930;
	_JOIN_21800563 [label="_JOIN_21800563None...",shape=box];
	_JOIN_21800563 -> 21800565;
	21941048 [label="21941048  tmp[(i+12)]=scv_357;...",shape=box];
	21851860 [label="21851860  double scv_281, scv_282, scv_283, scv_284, scv_285, scv_286, scv_287, scv_288;...",shape=box];
	ForLoop21801967 [label="ForLoop21801967  for (k=cbv_46; k<=cbv_47; k=k+1) {...",shape=box];
	ForLoop21801967 -> 21853722;
	ForLoop21801967 -> _JOIN_21801967;
	ForLoop21803371 [label="ForLoop21803371  for (k=cbv_52; k<=cbv_53; k=k+1) {...",shape=box];
	ForLoop21803371 -> 21856538;
	ForLoop21803371 -> _JOIN_21803371;
	21856084 [label="21856084  double scv_338, scv_339, scv_340, scv_341, scv_342, scv_343, scv_344, scv_345;...",shape=box];
	21834964 [label="21834964  double scv_53, scv_54, scv_55, scv_56, scv_57, scv_58, scv_59, scv_60;...",shape=box];
	ForLoop21803374 [label="ForLoop21803374  for (kk=kkk; kk<=min(ny-1,kkk+512); kk=kk+512) {...",shape=box];
	ForLoop21803374 -> 21989399;
	ForLoop21803374 -> _JOIN_21803374;
	ForLoop21803376 [label="ForLoop21803376  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop21803376 -> ForLoop21803374;
	ForLoop21803376 -> _JOIN_21803376;
	22003198 [label="22003198  register int cbv_52, cbv_53;...",shape=box];
	ForLoop21803378 [label="ForLoop21803378  for (i=ii; i<=min(nx-1,ii+31)-16; i=i+17) {...",shape=box];
	ForLoop21803378 -> 21941030;
	ForLoop21803378 -> _JOIN_21803378;
	ForLoop21801265 [label="ForLoop21801265  for (k=cbv_43; k<=cbv_44; k=k+1) {...",shape=box];
	ForLoop21801265 -> 21852314;
	ForLoop21801265 -> _JOIN_21801265;
	21831096 [label="21831096  double scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8, scv_9;...",shape=box];
	_JOIN_21792139 [label="_JOIN_21792139None...",shape=box];
	_JOIN_21792139 -> 21792141;
	21848090 [label="21848090  double scv_242;...",shape=box];
	ForLoop21800489 [label="ForLoop21800489  for (k=kt; k<=cbv_39; k=k+18) {...",shape=box];
	ForLoop21800489 -> 21850452;
	ForLoop21800489 -> _JOIN_21800489;
	21792141 [label="21792141  int k;...",shape=box];
	21951720 [label="21951720  double scv_425;...",shape=box];
	_JOIN_21791552 [label="_JOIN_21791552None...",shape=box];
	_JOIN_21791552 -> 21791553;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 21621013;
	_JOIN_21799861 [label="_JOIN_21799861None...",shape=box];
	_JOIN_21799861 -> 21799863;
	_JOIN_21797681 [label="_JOIN_21797681None...",shape=box];
	_JOIN_21797681 -> 21996662;
	21840596 [label="21840596  double scv_129, scv_130, scv_131, scv_132, scv_133, scv_134, scv_135, scv_136;...",shape=box];
	_JOIN_21773329 [label="_JOIN_21773329None...",shape=box];
	_JOIN_21773329 -> _JOIN_21773331;
	ForLoop21621741 [label="ForLoop21621741  for (i=ny-((ny-(0))%26); i<=ny-1; i=i+1) ...",shape=box];
	ForLoop21621741 -> 21621740;
	ForLoop21621741 -> _JOIN_21621741;
	_JOIN_21801893 [label="_JOIN_21801893None...",shape=box];
	_JOIN_21801893 -> 22001564;
	22004424 [label="22004424  register int cbv_55;...",shape=box];
	21844820 [label="21844820  double scv_186, scv_187, scv_188, scv_189, scv_190, scv_191, scv_192, scv_193;...",shape=box];
	ForLoop21799159 [label="ForLoop21799159  for (k=cbv_34; k<=cbv_35; k=k+1) {...",shape=box];
	ForLoop21799159 -> 21848090;
	ForLoop21799159 -> _JOIN_21799159;
	_JOIN_21801265 [label="_JOIN_21801265None...",shape=box];
	_JOIN_21801265 -> 21801267;
	21621445 [label="21621445  y[i]=0.0;...",shape=box];
	21793545 [label="21793545  int k;...",shape=box];
	21945689 [label="21945689  double scv_424;...",shape=box];
	21802671 [label="21802671  int k;...",shape=box];
	_JOIN_21794245 [label="_JOIN_21794245None...",shape=box];
	_JOIN_21794245 -> 21794247;
	ForLoop21794873 [label="ForLoop21794873  for (k=kt; k<=cbv_15; k=k+18) {...",shape=box];
	ForLoop21794873 -> 21839188;
	ForLoop21794873 -> _JOIN_21794873;
	21837780 [label="21837780  double scv_91, scv_92, scv_93, scv_94, scv_95, scv_96, scv_97, scv_98;...",shape=box];
	_JOIN_21796979 [label="_JOIN_21796979None...",shape=box];
	_JOIN_21796979 -> 21995845;
	21834010 [label="21834010  double scv_52;...",shape=box];
	ForLoop21793543 [label="ForLoop21793543  for (k=cbv_10; k<=cbv_11; k=k+1) {...",shape=box];
	ForLoop21793543 -> 21836826;
	ForLoop21793543 -> _JOIN_21793543;
	21800565 [label="21800565  int k;...",shape=box];
	22005151 [label="22005151  register int cbv_57, cbv_58;...",shape=box];
	ForLoop21799861 [label="ForLoop21799861  for (k=cbv_37; k<=cbv_38; k=k+1) {...",shape=box];
	ForLoop21799861 -> 21849498;
	ForLoop21799861 -> _JOIN_21799861;
	21850452 [label="21850452  double scv_262, scv_263, scv_264, scv_265, scv_266, scv_267, scv_268, scv_269;...",shape=box];
	_JOIN_21797053 [label="_JOIN_21797053None...",shape=box];
	_JOIN_21797053 -> 21797055;
	_JOIN_21802669 [label="_JOIN_21802669None...",shape=box];
	_JOIN_21802669 -> 21802671;
	ForLoop21804975 [label="ForLoop21804975  for (k=kt; k<=cbv_56; k=k+18) {...",shape=box];
	ForLoop21804975 -> 21945244;
	ForLoop21804975 -> _JOIN_21804975;
	_JOIN_21805049 [label="_JOIN_21805049None...",shape=box];
	_JOIN_21805049 -> _JOIN_21805051;
	21803482 [label="21803482  scv_425=scv_425+A[i*ny+j]*x[j];...",shape=box];
	21803482 -> _JOIN_21803483;
	ForLoop21803484 [label="ForLoop21803484  for (jjj=0; jjj<=ny-1; jjj=jjj+256) {...",shape=box];
	ForLoop21803484 -> 22003278;
	ForLoop21803484 -> _JOIN_21803484;
	21999113 [label="21999113  register int cbv_37, cbv_38;...",shape=box];
	21798459 [label="21798459  int k;...",shape=box];
	_JOIN_21801967 [label="_JOIN_21801967None...",shape=box];
	_JOIN_21801967 -> 21801969;
	21795651 [label="21795651  int k;...",shape=box];
	21799863 [label="21799863  int k;...",shape=box];
	21621740 [label="21621740  y[i]=0.0;...",shape=box];
	21621740 -> _JOIN_21621741;
	_JOIN_21803371 [label="_JOIN_21803371None...",shape=box];
	_JOIN_21803371 -> _JOIN_21803374;
	21997479 [label="21997479  register int cbv_31, cbv_32;...",shape=box];
	ForLoop21804456 [label="ForLoop21804456  for (kt=kk; kt<=cbv_55; kt=kt+32) {...",shape=box];
	ForLoop21804456 -> 21943799;
	ForLoop21804456 -> _JOIN_21804456;
	ForLoop21799787 [label="ForLoop21799787  for (k=kt; k<=cbv_36; k=k+18) {...",shape=box];
	ForLoop21799787 -> 21849044;
	ForLoop21799787 -> _JOIN_21799787;
	_JOIN_21621672 [label="_JOIN_21621672None...",shape=box];
	_JOIN_21621672 -> ForLoop21621741;
	21852314 [label="21852314  double scv_299;...",shape=box];
	21792843 [label="21792843  int expected=9369846271501.798828
actual=9369846271501.798828
k;...",shape=box];
	21841050 [label="21841050  double scv_147;...",shape=box];
	21845274 [label="21845274  double scv_204;...",shape=box];
	21838234 [label="21838234  double scv_109;...",shape=box];
	ForLoop21801191 [label="ForLoop21801191  for (k=kt; k<=cbv_42; k=k+18) {...",shape=box];
	ForLoop21801191 -> 21851860;
	ForLoop21801191 -> _JOIN_21801191;
	ForLoop21802595 [label="ForLoop21802595  for (k=kt; k<=cbv_48; k=k+18) {...",shape=box];
	ForLoop21802595 -> 21854676;
	ForLoop21802595 -> _JOIN_21802595;
	_JOIN_21796351 [label="_JOIN_21796351None...",shape=box];
	_JOIN_21796351 -> 21796353;
	21998296 [label="21998296  register int cbv_34, cbv_35;...",shape=box];
	21853268 [label="21853268  double scv_300, scv_301, scv_302, scv_303, scv_304, scv_305, scv_306, scv_307;...",shape=box];
	21856538 [label="21856538  double scv_356;...",shape=box];
	22003278 [label="22003278  register int cbv_54;...",shape=box];
	21995845 [label="21995845  register int cbv_25, cbv_26;...",shape=box];
	_JOIN_21795649 [label="_JOIN_21795649None...",shape=box];
	_JOIN_21795649 -> 21795651;
	21846228 [label="21846228  double scv_205, scv_206, scv_207, scv_208, scv_209, scv_210, scv_211, scv_212;...",shape=box];
	_JOIN_21794947 [label="_JOIN_21794947None...",shape=box];
	_JOIN_21794947 -> 21794949;
	_JOIN_21794171 [label="_JOIN_21794171None...",shape=box];
	_JOIN_21794171 -> 21992577;
	21941030 [label="21941030  double scv_357, scv_358, scv_359, scv_360, scv_361, scv_362, scv_363, scv_364;...",shape=box];
	ForLoop21792071 [label="ForLoop21792071  for (k=kt; k<=cbv_3; k=k+18) {...",shape=box];
	ForLoop21792071 -> 21833565;
	ForLoop21792071 -> _JOIN_21792071;
	ForLoop21805051 [label="ForLoop21805051  for (ii=0; ii<=nx-1; ii=ii+32) {...",shape=box];
	ForLoop21805051 -> 21772642;
	ForLoop21805051 -> _JOIN_21805051;
	_JOIN_21793469 [label="_JOIN_21793469None...",shape=box];
	_JOIN_21793469 -> 21991760;
	21991760 [label="21991760  register int cbv_10, cbv_11;...",shape=box];
	ForLoop21794245 [label="ForLoop21794245  for (k=cbv_13; k<=cbv_14; k=k+1) {...",shape=box];
	ForLoop21794245 -> 21838234;
	ForLoop21794245 -> _JOIN_21794245;
	21994211 [label="21994211  register int cbv_19, cbv_20;...",shape=box];
	21772642 [label="21772642  int i;...",shape=box];
	21772642 -> ForLoop21803378;
	21801969 [label="21801969  int k;...",shape=box];
	ForLoop21798383 [label="ForLoop21798383  for (k=kt; k<=cbv_30; k=k+18) {...",shape=box];
	ForLoop21798383 -> 21846228;
	ForLoop21798383 -> _JOIN_21798383;
	_JOIN_21805043 [label="_JOIN_21805043None...",shape=box];
	_JOIN_21805043 -> _JOIN_21805046;
	_JOIN_21805046 [label="_JOIN_21805046None...",shape=box];
	_JOIN_21805046 -> _JOIN_21805047;
	21839642 [label="21839642  double scv_128;...",shape=box];
	ForLoop21621672 [label="ForLoop21621672  for (i=0; i<=ny-26; i=i+26) {...",shape=box];
	ForLoop21621672 -> 21621445;
	ForLoop21621672 -> _JOIN_21621672;
	ForLoop21803297 [label="ForLoop21803297  for (k=kt; k<=cbv_51; k=k+18) {...",shape=box];
	ForLoop21803297 -> 21856084;
	ForLoop21803297 -> _JOIN_21803297;
	ForLoop21796351 [label="ForLoop21796351  for (k=cbv_22; k<=cbv_23; k=k+1) {...",shape=box];
	ForLoop21796351 -> 21842458;
	ForLoop21796351 -> _JOIN_21796351;
	_JOIN_21801191 [label="_JOIN_21801191None...",shape=box];
	_JOIN_21801191 -> 22000747;
	21842004 [label="21842004  double scv_148, scv_149, scv_150, scv_151, scv_152, scv_153, scv_154, scv_155;...",shape=box];
	ForLoop21801893 [label="ForLoop21801893  for (k=kt; k<=cbv_45; k=k+18) {...",shape=box];
	ForLoop21801893 -> 21853268;
	ForLoop21801893 -> _JOIN_21801893;
	21799161 [label="21799161  int k;...",shape=box];

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest90.exe __orio_perftest90.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest90.exe  
{'[2, 0, 6, 0, 3, 5, 0, 0, 25, 16, 0, 17, 0, 0, 2, 1, 0, 1]' : 0.116551}
{'[2, 0, 6, 0, 3, 5, 0, 0, 25, 16, 0, 17, 0, 0, 2, 1, 0, 1]' : 0.116205}
{'[2, 0, 6, 0, 3, 5, 0, 0, 25, 16, 0, 17, 0, 0, 2, 1, 0, 1]' : 0.11633}
{'[2, 0, 6, 0, 3, 5, 0, 0, 25, 16, 0, 17, 0, 0, 2, 1, 0, 1]' : 0.116119}
{'[2, 0, 6, 0, 3, 5, 0, 0, 25, 16, 0, 17, 0, 0, 2, 1, 0, 1]' : 0.116165}
{'[2, 0, 6, 0, 3, 5, 0, 0, 25, 16, 0, 17, 0, 0, 2, 1, 0, 1]' : 0.116128}
{'[2, 0, 6, 0, 3, 5, 0, 0, 25, 16, 0, 17, 0, 0, 2, 1, 0, 1]' : 0.116183}
{'[2, 0, 6, 0, 3, 5, 0, 0, 25, 16, 0, 17, 0, 0, 2, 1, 0, 1]' : 0.116183}
{'[2, 0, 6, 0, 3, 5, 0, 0, 25, 16, 0, 17, 0, 0, 2, 1, 0, 1]' : 0.116156}
{'[2, 0, 6, 0, 3, 5, 0, 0, 25, 16, 0, 17, 0, 0, 2, 1, 0, 1]' : 0.116207}
{'[2, 0, 6, 0, 3, 5, 0, 0, 25, 16, 0, 17, 0, 0, 2, 1, 0, 1]' : 0.116141}
{'[2, 0, 6, 0, 3, 5, 0, 0, 25, 16, 0, 17, 0, 0, 2, 1, 0, 1]' : 0.116103}
{'[2, 0, 6, 0, 3, 5, 0, 0, 25, 16, 0, 17, 0, 0, 2, 1, 0, 1]' : 0.116091}
{'[2, 0, 6, 0, 3, 5, 0, 0, 25, 16, 0, 17, 0, 0, 2, 1, 0, 1]' : 0.116113}
{'[2, 0, 6, 0, 3, 5, 0, 0, 25, 16, 0, 17, 0, 0, 2, 1, 0, 1]' : 0.116081}
{'[2, 0, 6, 0, 3, 5, 0, 0, 25, 16, 0, 17, 0, 0, 2, 1, 0, 1]' : 0.1163}
{'[2, 0, 6, 0, 3, 5, 0, 0, 25, 16, 0, 17, 0, 0, 2, 1, 0, 1]' : 0.11604}
{'[2, 0, 6, 0, 3, 5, 0, 0, 25, 16, 0, 17, 0, 0, 2, 1, 0, 1]' : 0.116112}
{'[2, 0, 6, 0, 3, 5, 0, 0, 25, 16, 0, 17, 0, 0, 2, 1, 0, 1]' : 0.116111}
{'[2, 0, 6, 0, 3, 5, 0, 0, 25, 16, 0, 17, 0, 0, 2, 1, 0, 1]' : 0.116125}
{'[2, 0, 6, 0, 3, 5, 0, 0, 25, 16, 0, 17, 0, 0, 2, 1, 0, 1]' : 0.116082}
{'[2, 0, 6, 0, 3, 5, 0, 0, 25, 16, 0, 17, 0, 0, 2, 1, 0, 1]' : 0.116147}
{'[2, 0, 6, 0, 3, 5, 0, 0, 25, 16, 0, 17, 0, 0, 2, 1, 0, 1]' : 0.116098}
{'[2, 0, 6, 0, 3, 5, 0, 0, 25, 16, 0, 17, 0, 0, 2, 1, 0, 1]' : 0.116047}
{'[2, 0, 6, 0, 3, 5, 0, 0, 25, 16, 0, 17, 0, 0, 2, 1, 0, 1]' : 0.116144}
{'[2, 0, 6, 0, 3, 5, 0, 0, 25, 16, 0, 17, 0, 0, 2, 1, 0, 1]' : 0.116138}
{'[2, 0, 6, 0, 3, 5, 0, 0, 25, 16, 0, 17, 0, 0, 2, 1, 0, 1]' : 0.116161}
{'[2, 0, 6, 0, 3, 5, 0, 0, 25, 16, 0, 17, 0, 0, 2, 1, 0, 1]' : 0.116127}
{'[2, 0, 6, 0, 3, 5, 0, 0, 25, 16, 0, 17, 0, 0, 2, 1, 0, 1]' : 0.116338}
{'[2, 0, 6, 0, 3, 5, 0, 0, 25, 16, 0, 17, 0, 0, 2, 1, 0, 1]' : 0.116149}

out:
 ["{'[2, 0, 6, 0, 3, 5, 0, 0, 25, 16, 0, 17, 0, 0, 2, 1, 0, 1]' : 0.116551}", "{'[2, 0, 6, 0, 3, 5, 0, 0, 25, 16, 0, 17, 0, 0, 2, 1, 0, 1]' : 0.116205}", "{'[2, 0, 6, 0, 3, 5, 0, 0, 25, 16, 0, 17, 0, 0, 2, 1, 0, 1]' : 0.11633}", "{'[2, 0, 6, 0, 3, 5, 0, 0, 25, 16, 0, 17, 0, 0, 2, 1, 0, 1]' : 0.116119}", "{'[2, 0, 6, 0, 3, 5, 0, 0, 25, 16, 0, 17, 0, 0, 2, 1, 0, 1]' : 0.116165}", "{'[2, 0, 6, 0, 3, 5, 0, 0, 25, 16, 0, 17, 0, 0, 2, 1, 0, 1]' : 0.116128}", "{'[2, 0, 6, 0, 3, 5, 0, 0, 25, 16, 0, 17, 0, 0, 2, 1, 0, 1]' : 0.116183}", "{'[2, 0, 6, 0, 3, 5, 0, 0, 25, 16, 0, 17, 0, 0, 2, 1, 0, 1]' : 0.116183}", "{'[2, 0, 6, 0, 3, 5, 0, 0, 25, 16, 0, 17, 0, 0, 2, 1, 0, 1]' : 0.116156}", "{'[2, 0, 6, 0, 3, 5, 0, 0, 25, 16, 0, 17, 0, 0, 2, 1, 0, 1]' : 0.116207}", "{'[2, 0, 6, 0, 3, 5, 0, 0, 25, 16, 0, 17, 0, 0, 2, 1, 0, 1]' : 0.116141}", "{'[2, 0, 6, 0, 3, 5, 0, 0, 25, 16, 0, 17, 0, 0, 2, 1, 0, 1]' : 0.116103}", "{'[2, 0, 6, 0, 3, 5, 0, 0, 25, 16, 0, 17, 0, 0, 2, 1, 0, 1]' : 0.116091}", "{'[2, 0, 6, 0, 3, 5, 0, 0, 25, 16, 0, 17, 0, 0, 2, 1, 0, 1]' : 0.116113}", "{'[2, 0, 6, 0, 3, 5, 0, 0, 25, 16, 0, 17, 0, 0, 2, 1, 0, 1]' : 0.116081}", "{'[2, 0, 6, 0, 3, 5, 0, 0, 25, 16, 0, 17, 0, 0, 2, 1, 0, 1]' : 0.1163}", "{'[2, 0, 6, 0, 3, 5, 0, 0, 25, 16, 0, 17, 0, 0, 2, 1, 0, 1]' : 0.11604}", "{'[2, 0, 6, 0, 3, 5, 0, 0, 25, 16, 0, 17, 0, 0, 2, 1, 0, 1]' : 0.116112}", "{'[2, 0, 6, 0, 3, 5, 0, 0, 25, 16, 0, 17, 0, 0, 2, 1, 0, 1]' : 0.116111}", "{'[2, 0, 6, 0, 3, 5, 0, 0, 25, 16, 0, 17, 0, 0, 2, 1, 0, 1]' : 0.116125}", "{'[2, 0, 6, 0, 3, 5, 0, 0, 25, 16, 0, 17, 0, 0, 2, 1, 0, 1]' : 0.116082}", "{'[2, 0, 6, 0, 3, 5, 0, 0, 25, 16, 0, 17, 0, 0, 2, 1, 0, 1]' : 0.116147}", "{'[2, 0, 6, 0, 3, 5, 0, 0, 25, 16, 0, 17, 0, 0, 2, 1, 0, 1]' : 0.116098}", "{'[2, 0, 6, 0, 3, 5, 0, 0, 25, 16, 0, 17, 0, 0, 2, 1, 0, 1]' : 0.116047}", "{'[2, 0, 6, 0, 3, 5, 0, 0, 25, 16, 0, 17, 0, 0, 2, 1, 0, 1]' : 0.116144}", "{'[2, 0, 6, 0, 3, 5, 0, 0, 25, 16, 0, 17, 0, 0, 2, 1, 0, 1]' : 0.116138}", "{'[2, 0, 6, 0, 3, 5, 0, 0, 25, 16, 0, 17, 0, 0, 2, 1, 0, 1]' : 0.116161}", "{'[2, 0, 6, 0, 3, 5, 0, 0, 25, 16, 0, 17, 0, 0, 2, 1, 0, 1]' : 0.116127}", "{'[2, 0, 6, 0, 3, 5, 0, 0, 25, 16, 0, 17, 0, 0, 2, 1, 0, 1]' : 0.116338}", "{'[2, 0, 6, 0, 3, 5, 0, 0, 25, 16, 0, 17, 0, 0, 2, 1, 0, 1]' : 0.116149}"]
returning from 'run': {'[2, 0, 6, 0, 3, 5, 0, 0, 25, 16, 0, 17, 0, 0, 2, 1, 0, 1]': ([0.116551, 0.116205, 0.11633, 0.116119, 0.116165, 0.116128, 0.116183, 0.116183, 0.116156, 0.116207, 0.116141, 0.116103, 0.116091, 0.116113, 0.116081, 0.1163, 0.11604, 0.116112, 0.116111, 0.116125, 0.116082, 0.116147, 0.116098, 0.116047, 0.116144, 0.116138, 0.116161, 0.116127, 0.116338, 0.116149], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.116551, 0.116205, 0.11633, 0.116119, 0.116165, 0.116128, 0.116183, 0.116183, 0.116156, 0.116207, 0.116141, 0.116103, 0.116091, 0.116113, 0.116081, 0.1163, 0.11604, 0.116112, 0.116111, 0.116125, 0.116082, 0.116147, 0.116098, 0.116047, 0.116144, 0.116138, 0.116161, 0.116127, 0.116338, 0.116149], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[2, 0, 6, 0, 3, 5, 0, 0, 25, 16, 0, 17, 0, 0, 2, 1, 0, 1]': ([0.116551, 0.116205, 0.11633, 0.116119, 0.116165, 0.116128, 0.116183, 0.116183, 0.116156, 0.116207, 0.116141, 0.116103, 0.116091, 0.116113, 0.116081, 0.1163, 0.11604, 0.116112, 0.116111, 0.116125, 0.116082, 0.116147, 0.116098, 0.116047, 0.116144, 0.116138, 0.116161, 0.116127, 0.116338, 0.116149], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [4, 6, 2, 0, 6, 1, 0, 19, 6, 0, 1, 0, 0, 0]
Fixed Factors: {'ACOPY_y': 0, 'U1_I': 25, 'U_J': 0, 'SCR': 1}
Testing candidate 21: [4, 6, 2, 0, 6, 1, 0, 0, 25, 19, 0, 6, 0, 1, 0, 1, 0, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	5
        Additions: 		1502
        Multiplications: 	714
        Divisions: 		0
        Logical: 		0
        Reads: 			2979
        Writes: 		530
        Comparisons:		21
        Gotos: 			0
        
digraph CFG {
	ForLoop22082491 [label="ForLoop22082491  for (kkk=0; kkk<=ny-1; kkk=kkk+64) {...",shape=box];
	ForLoop22082491 -> ForLoop22082489;
	ForLoop22082491 -> _JOIN_22082491;
	22109299 [label="22109299  double scv_17;...",shape=box];
	ForLoop22082493 [label="ForLoop22082493  for (i=ii; i<=min(nx-1,ii+127)-19; i=i+20) {...",shape=box];
	ForLoop22082493 -> 22126642;
	ForLoop22082493 -> _JOIN_22082493;
	22128811 [label="22128811  double scv_38, scv_39, scv_40, scv_41, scv_42, scv_43, scv_44;...",shape=box];
	_JOIN_22083155 [label="_JOIN_22083155None...",shape=box];
	_JOIN_22083155 -> _JOIN_22083156;
	22082839 [label="22082839  scv_46=scv_46+A[i*ny+j]*x[j];...",shape=box];
	22082839 -> _JOIN_22082840;
	_JOIN_22082489 [label="_JOIN_22082489None...",shape=box];
	_JOIN_22082489 -> _JOIN_22082491;
	_JOIN_22082487 [label="_JOIN_22082487None...",shape=box];
	_JOIN_22082487 -> _JOIN_22082489;
	ForLoop22081924 [label="ForLoop22081924  for (k=kk; k<=min(ny-1,kk+31)-6; k=k+7) {...",shape=box];
	ForLoop22081924 -> 22108136;
	ForLoop22081924 -> _JOIN_22081924;
	_JOIN_22077293 [label="_JOIN_22077293None...",shape=box];
	_JOIN_22077293 -> ForLoop22082491;
	22082617 [label="22082617  scv_46=scv_46+A[i*ny+jt]*x[jt];...",shape=box];
	_JOIN_22077291 [label="_JOIN_22077291None...",shape=box];
	_JOIN_22077291 -> _JOIN_22077293;
	22091483 [label="22091483  double scv_9;...",shape=box];
	22082875 [label="22082875  int k;...",shape=box];
	22082875 -> ForLoop22083085;
	_JOIN_22083158 [label="_JOIN_22083158None...",shape=box];
	_JOIN_22083158 -> _JOIN_22083160;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 22005595;
	ForLoop22006254 [label="ForLoop22006254  for (i=0; i<=ny-26; i=i+26) {...",shape=box];
	ForLoop22006254 -> 22006027;
	ForLoop22006254 -> _JOIN_22006254;
	ForLoop22077293 [label="ForLoop22077293  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop22077293 -> ForLoop22077291;
	ForLoop22077293 -> _JOIN_22077293;
	ForLoop22083085 [label="ForLoop22083085  for (k=kk; k<=min(ny-1,kk+31)-6; k=k+7) {...",shape=box];
	ForLoop22083085 -> 22128811;
	ForLoop22083085 -> _JOIN_22083085;
	ForLoop22077291 [label="ForLoop22077291  for (jj=jjj; jj<=min(ny-1,jjj+1536); jj=jj+512) {...",shape=box];
	ForLoop22077291 -> ForLoop22076698;
	ForLoop22077291 -> _JOIN_22077291;
	22077325 [label="22077325  int k;...",shape=box];
	22006027 [label="22006027  y[i]=0.0;...",shape=box];
	22071165 [label="22071165  double x_copy;...",shape=box];
	ForLoop22082801 [label="ForLoop22082801  for (jt=jj; jt<=min(ny-1,jj+511)-7; jt=jt+8) {...",shape=box];
	ForLoop22082801 -> 22082617;
	ForLoop22082801 -> _JOIN_22082801;
	22108136 [label="22108136  double scv_10, scv_11, scv_12, scv_13, scv_14, scv_15, scv_16;...",shape=box];
	ForLoop22083158 [label="ForLoop22083158  for (i=(min(nx-1,ii+127))-(((min(nx-1,ii+127))-(ii)+1)%20)+1; i<=min(nx-1,ii+127); i=i+1) {...",shape=box];
	ForLoop22083158 -> 22130498;
	ForLoop22083158 -> _JOIN_22083158;
	22005595 [label="22005595  int i;...",shape=box];
	22005595 -> ForLoop22006254;
	22006322 [label="22006322  y[i]=0.0;...",shape=box];
	22006322 -> _JOIN_22006323;
	ForLoop22082840 [label="ForLoop22082840  for (j=jt; j<=min(ny-1,jj+511); j=j+1) {...",shape=box];
	ForLoop22082840 -> 22082839;
	ForLoop22082840 -> _JOIN_22082840;
	ForLoop22082489 [label="ForLoop22082489  for (kk=kkk; kk<=min(ny-1,kkk+32); kk=kk+32) {...",shape=box];
	ForLoop22082489 -> 22077325;
	ForLoop22082489 -> _JOIN_22082489;
	ForLoop22083153 [label="ForLoop22083153  for (k=(min(ny-1,kk+31))-(((min(ny-1,kk+31))-(kk)+1)%7)+1; k<=min(ny-1,kk+31); k=k+1) {...",shape=box];
	ForLoop22083153 -> 22129023;
	ForLoop22083153 -> _JOIN_22083153;
	ForLoop22082487 [label="ForLoop22082487  for (k=(min(ny-1,kk+31))-(((min(ny-1,kk+31))-(kk)+1)%7)+1; k<=min(ny-1,kk+31); k=k+1) {...",shape=box];
	ForLoop22082487 -> 22109299;
	ForLoop22082487 -> _JOIN_22082487;
	22130498 [label="22130498  double scv_46;...",shape=box];
	ForLoop22083156 [label="ForLoop22083156  for (kkk=0; kkk<=ny-1; kkk=kkk+64) {...",shape=box];
	ForLoop22083156 -> ForLoop22083155;
	ForLoop22083156 -> _JOIN_22083156;
	ForLoop22083155 [label="ForLoop22083155  for (kk=kkk; kk<=min(ny-1,kkk+32); kk=kk+32) {...",shape=box];
	ForLoop22083155 -> 22082875;
	ForLoop22083155 -> _JOIN_22083155;
	22090462 [label="22090462  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	ForLoop22076698 [label="ForLoop22076698  for (jt=jj; jt<=min(ny-1,jj+511)-7; jt=jt+8) {...",shape=box];
	ForLoop22076698 -> 22090462;
	ForLoop22076698 -> _JOIN_22076698;
	22071180 [label="22071180  int i;...",shape=box];
	22071180 -> ForLoop22082493;
	_JOIN_22082842 [label="_JOIN_22082842None...",shape=box];
	_JOIN_22082842 -> _JOIN_22082843;
	_JOIN_22082843 [label="_JOIN_22082843None...",shape=box];
	_JOIN_22082843 -> ForLoop22083156;
	_JOIN_22082840 [label="_JOIN_22082840None...",shape=box];
	_JOIN_22082840 -> _JOIN_22082842;
	_JOIN_22006254 [label="_JOIN_22006254None...",shape=box];
	_JOIN_22006254 -> ForLoop22006323;
	_JOIN_22082491 [label="_JOIN_22082491None...",shape=box];
	_JOIN_22082491 -> 22126660;
	_JOIN_22082493 [label="_JOIN_22082493None...",shape=box];
	_JOIN_22082493 -> ForLoop22083158;
	ForLoop22082842 [label="ForLoop22082842  for (jj=jjj; jj<=min(ny-1,jjj+1536); jj=jj+512) {...",shape=box];
	ForLoop22082842 -> ForLoop22082801;
	ForLoop22082842 -> _JOIN_22082842;
	_JOIN_22006323 [label="_JOIN_22006323None...",shape=box];
	_JOIN_22006323 -> 22071165;
	22130510 [label="22130510  tmp[i]=scv_46;...",shape=box];
	22130510 -> _JOIN_22083158;
	22129023 [label="22129023  double scv_45;...",shape=box];
	_JOIN_22081924 [label="_JOIN_22081924None...",shape=box];
	_JOIN_22081924 -> ForLoop22082487;
	_JOIN_22083160 [label="_JOIN_22083160None...",shape=box];
	_JOIN_22077289 [label="_JOIN_22077289None...",shape=box];
	_JOIN_22077289 -> _JOIN_22077291;
	_JOIN_22083153 [label="_JOIN_22083153None...",shape=box];
	_JOIN_22083153 -> _JOIN_22083155;
	_JOIN_22082801 [label="_JOIN_22082801None...",shape=box];
	_JOIN_22082801 -> ForLoop22082840expected=9369846271501.798828
actual=9369846271501.798828
;
	_JOIN_22076698 [label="_JOIN_22076698None...",shape=box];
	_JOIN_22076698 -> ForLoop22077289;
	ForLoop22077289 [label="ForLoop22077289  for (j=jt; j<=min(ny-1,jj+511); j=j+1) {...",shape=box];
	ForLoop22077289 -> 22091483;
	ForLoop22077289 -> _JOIN_22077289;
	ForLoop22082843 [label="ForLoop22082843  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop22082843 -> ForLoop22082842;
	ForLoop22082843 -> _JOIN_22082843;
	ForLoop22006323 [label="ForLoop22006323  for (i=ny-((ny-(0))%26); i<=ny-1; i=i+1) ...",shape=box];
	ForLoop22006323 -> 22006322;
	ForLoop22006323 -> _JOIN_22006323;
	ForLoop22083160 [label="ForLoop22083160  for (ii=0; ii<=nx-1; ii=ii+128) {...",shape=box];
	ForLoop22083160 -> 22071180;
	ForLoop22083160 -> _JOIN_22083160;
	22126642 [label="22126642  double scv_18, scv_19, scv_20, scv_21, scv_22, scv_23, scv_24, scv_25;...",shape=box];
	_JOIN_22083085 [label="_JOIN_22083085None...",shape=box];
	_JOIN_22083085 -> ForLoop22083153;
	22126660 [label="22126660  tmp[(i+12)]=scv_18;...",shape=box];
	_JOIN_22083156 [label="_JOIN_22083156None...",shape=box];
	_JOIN_22083156 -> 22130510;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest91.exe __orio_perftest91.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest91.exe  
{'[4, 6, 2, 0, 6, 1, 0, 0, 25, 19, 0, 6, 0, 1, 0, 1, 0, 0]' : 0.104437}
{'[4, 6, 2, 0, 6, 1, 0, 0, 25, 19, 0, 6, 0, 1, 0, 1, 0, 0]' : 0.103579}
{'[4, 6, 2, 0, 6, 1, 0, 0, 25, 19, 0, 6, 0, 1, 0, 1, 0, 0]' : 0.103537}
{'[4, 6, 2, 0, 6, 1, 0, 0, 25, 19, 0, 6, 0, 1, 0, 1, 0, 0]' : 0.10346}
{'[4, 6, 2, 0, 6, 1, 0, 0, 25, 19, 0, 6, 0, 1, 0, 1, 0, 0]' : 0.10348}
{'[4, 6, 2, 0, 6, 1, 0, 0, 25, 19, 0, 6, 0, 1, 0, 1, 0, 0]' : 0.103564}
{'[4, 6, 2, 0, 6, 1, 0, 0, 25, 19, 0, 6, 0, 1, 0, 1, 0, 0]' : 0.103559}
{'[4, 6, 2, 0, 6, 1, 0, 0, 25, 19, 0, 6, 0, 1, 0, 1, 0, 0]' : 0.103571}
{'[4, 6, 2, 0, 6, 1, 0, 0, 25, 19, 0, 6, 0, 1, 0, 1, 0, 0]' : 0.103719}
{'[4, 6, 2, 0, 6, 1, 0, 0, 25, 19, 0, 6, 0, 1, 0, 1, 0, 0]' : 0.103507}
{'[4, 6, 2, 0, 6, 1, 0, 0, 25, 19, 0, 6, 0, 1, 0, 1, 0, 0]' : 0.103444}
{'[4, 6, 2, 0, 6, 1, 0, 0, 25, 19, 0, 6, 0, 1, 0, 1, 0, 0]' : 0.103555}
{'[4, 6, 2, 0, 6, 1, 0, 0, 25, 19, 0, 6, 0, 1, 0, 1, 0, 0]' : 0.103561}
{'[4, 6, 2, 0, 6, 1, 0, 0, 25, 19, 0, 6, 0, 1, 0, 1, 0, 0]' : 0.103518}
{'[4, 6, 2, 0, 6, 1, 0, 0, 25, 19, 0, 6, 0, 1, 0, 1, 0, 0]' : 0.103463}
{'[4, 6, 2, 0, 6, 1, 0, 0, 25, 19, 0, 6, 0, 1, 0, 1, 0, 0]' : 0.104761}
{'[4, 6, 2, 0, 6, 1, 0, 0, 25, 19, 0, 6, 0, 1, 0, 1, 0, 0]' : 0.103489}
{'[4, 6, 2, 0, 6, 1, 0, 0, 25, 19, 0, 6, 0, 1, 0, 1, 0, 0]' : 0.103479}
{'[4, 6, 2, 0, 6, 1, 0, 0, 25, 19, 0, 6, 0, 1, 0, 1, 0, 0]' : 0.10359}
{'[4, 6, 2, 0, 6, 1, 0, 0, 25, 19, 0, 6, 0, 1, 0, 1, 0, 0]' : 0.103512}
{'[4, 6, 2, 0, 6, 1, 0, 0, 25, 19, 0, 6, 0, 1, 0, 1, 0, 0]' : 0.10343}
{'[4, 6, 2, 0, 6, 1, 0, 0, 25, 19, 0, 6, 0, 1, 0, 1, 0, 0]' : 0.103508}
{'[4, 6, 2, 0, 6, 1, 0, 0, 25, 19, 0, 6, 0, 1, 0, 1, 0, 0]' : 0.103527}
{'[4, 6, 2, 0, 6, 1, 0, 0, 25, 19, 0, 6, 0, 1, 0, 1, 0, 0]' : 0.103468}
{'[4, 6, 2, 0, 6, 1, 0, 0, 25, 19, 0, 6, 0, 1, 0, 1, 0, 0]' : 0.103559}
{'[4, 6, 2, 0, 6, 1, 0, 0, 25, 19, 0, 6, 0, 1, 0, 1, 0, 0]' : 0.103816}
{'[4, 6, 2, 0, 6, 1, 0, 0, 25, 19, 0, 6, 0, 1, 0, 1, 0, 0]' : 0.103446}
{'[4, 6, 2, 0, 6, 1, 0, 0, 25, 19, 0, 6, 0, 1, 0, 1, 0, 0]' : 0.103499}
{'[4, 6, 2, 0, 6, 1, 0, 0, 25, 19, 0, 6, 0, 1, 0, 1, 0, 0]' : 0.103531}
{'[4, 6, 2, 0, 6, 1, 0, 0, 25, 19, 0, 6, 0, 1, 0, 1, 0, 0]' : 0.103781}

out:
 ["{'[4, 6, 2, 0, 6, 1, 0, 0, 25, 19, 0, 6, 0, 1, 0, 1, 0, 0]' : 0.104437}", "{'[4, 6, 2, 0, 6, 1, 0, 0, 25, 19, 0, 6, 0, 1, 0, 1, 0, 0]' : 0.103579}", "{'[4, 6, 2, 0, 6, 1, 0, 0, 25, 19, 0, 6, 0, 1, 0, 1, 0, 0]' : 0.103537}", "{'[4, 6, 2, 0, 6, 1, 0, 0, 25, 19, 0, 6, 0, 1, 0, 1, 0, 0]' : 0.10346}", "{'[4, 6, 2, 0, 6, 1, 0, 0, 25, 19, 0, 6, 0, 1, 0, 1, 0, 0]' : 0.10348}", "{'[4, 6, 2, 0, 6, 1, 0, 0, 25, 19, 0, 6, 0, 1, 0, 1, 0, 0]' : 0.103564}", "{'[4, 6, 2, 0, 6, 1, 0, 0, 25, 19, 0, 6, 0, 1, 0, 1, 0, 0]' : 0.103559}", "{'[4, 6, 2, 0, 6, 1, 0, 0, 25, 19, 0, 6, 0, 1, 0, 1, 0, 0]' : 0.103571}", "{'[4, 6, 2, 0, 6, 1, 0, 0, 25, 19, 0, 6, 0, 1, 0, 1, 0, 0]' : 0.103719}", "{'[4, 6, 2, 0, 6, 1, 0, 0, 25, 19, 0, 6, 0, 1, 0, 1, 0, 0]' : 0.103507}", "{'[4, 6, 2, 0, 6, 1, 0, 0, 25, 19, 0, 6, 0, 1, 0, 1, 0, 0]' : 0.103444}", "{'[4, 6, 2, 0, 6, 1, 0, 0, 25, 19, 0, 6, 0, 1, 0, 1, 0, 0]' : 0.103555}", "{'[4, 6, 2, 0, 6, 1, 0, 0, 25, 19, 0, 6, 0, 1, 0, 1, 0, 0]' : 0.103561}", "{'[4, 6, 2, 0, 6, 1, 0, 0, 25, 19, 0, 6, 0, 1, 0, 1, 0, 0]' : 0.103518}", "{'[4, 6, 2, 0, 6, 1, 0, 0, 25, 19, 0, 6, 0, 1, 0, 1, 0, 0]' : 0.103463}", "{'[4, 6, 2, 0, 6, 1, 0, 0, 25, 19, 0, 6, 0, 1, 0, 1, 0, 0]' : 0.104761}", "{'[4, 6, 2, 0, 6, 1, 0, 0, 25, 19, 0, 6, 0, 1, 0, 1, 0, 0]' : 0.103489}", "{'[4, 6, 2, 0, 6, 1, 0, 0, 25, 19, 0, 6, 0, 1, 0, 1, 0, 0]' : 0.103479}", "{'[4, 6, 2, 0, 6, 1, 0, 0, 25, 19, 0, 6, 0, 1, 0, 1, 0, 0]' : 0.10359}", "{'[4, 6, 2, 0, 6, 1, 0, 0, 25, 19, 0, 6, 0, 1, 0, 1, 0, 0]' : 0.103512}", "{'[4, 6, 2, 0, 6, 1, 0, 0, 25, 19, 0, 6, 0, 1, 0, 1, 0, 0]' : 0.10343}", "{'[4, 6, 2, 0, 6, 1, 0, 0, 25, 19, 0, 6, 0, 1, 0, 1, 0, 0]' : 0.103508}", "{'[4, 6, 2, 0, 6, 1, 0, 0, 25, 19, 0, 6, 0, 1, 0, 1, 0, 0]' : 0.103527}", "{'[4, 6, 2, 0, 6, 1, 0, 0, 25, 19, 0, 6, 0, 1, 0, 1, 0, 0]' : 0.103468}", "{'[4, 6, 2, 0, 6, 1, 0, 0, 25, 19, 0, 6, 0, 1, 0, 1, 0, 0]' : 0.103559}", "{'[4, 6, 2, 0, 6, 1, 0, 0, 25, 19, 0, 6, 0, 1, 0, 1, 0, 0]' : 0.103816}", "{'[4, 6, 2, 0, 6, 1, 0, 0, 25, 19, 0, 6, 0, 1, 0, 1, 0, 0]' : 0.103446}", "{'[4, 6, 2, 0, 6, 1, 0, 0, 25, 19, 0, 6, 0, 1, 0, 1, 0, 0]' : 0.103499}", "{'[4, 6, 2, 0, 6, 1, 0, 0, 25, 19, 0, 6, 0, 1, 0, 1, 0, 0]' : 0.103531}", "{'[4, 6, 2, 0, 6, 1, 0, 0, 25, 19, 0, 6, 0, 1, 0, 1, 0, 0]' : 0.103781}"]
returning from 'run': {'[4, 6, 2, 0, 6, 1, 0, 0, 25, 19, 0, 6, 0, 1, 0, 1, 0, 0]': ([0.104437, 0.103579, 0.103537, 0.10346, 0.10348, 0.103564, 0.103559, 0.103571, 0.103719, 0.103507, 0.103444, 0.103555, 0.103561, 0.103518, 0.103463, 0.104761, 0.103489, 0.103479, 0.10359, 0.103512, 0.10343, 0.103508, 0.103527, 0.103468, 0.103559, 0.103816, 0.103446, 0.103499, 0.103531, 0.103781], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.104437, 0.103579, 0.103537, 0.10346, 0.10348, 0.103564, 0.103559, 0.103571, 0.103719, 0.103507, 0.103444, 0.103555, 0.103561, 0.103518, 0.103463, 0.104761, 0.103489, 0.103479, 0.10359, 0.103512, 0.10343, 0.103508, 0.103527, 0.103468, 0.103559, 0.103816, 0.103446, 0.103499, 0.103531, 0.103781], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[4, 6, 2, 0, 6, 1, 0, 0, 25, 19, 0, 6, 0, 1, 0, 1, 0, 0]': ([0.104437, 0.103579, 0.103537, 0.10346, 0.10348, 0.103564, 0.103559, 0.103571, 0.103719, 0.103507, 0.103444, 0.103555, 0.103561, 0.103518, 0.103463, 0.104761, 0.103489, 0.103479, 0.10359, 0.103512, 0.10343, 0.103508, 0.103527, 0.103468, 0.103559, 0.103816, 0.103446, 0.103499, 0.103531, 0.103781], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [0, 0, 2, 5, 6, 2, 1, 16, 13, 1, 0, 1, 0, 1]
Fixed Factors: {'ACOPY_y': 0, 'U1_I': 25, 'U_J': 0, 'SCR': 1}
Testing candidate 22: [0, 0, 2, 5, 6, 2, 1, 0, 25, 16, 0, 13, 1, 0, 1, 1, 0, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	78
        Max loop nest depth: 	5
        Additions: 		3381
        Multiplications: 	1248
        Divisions: 		0
        Logical: 		0
        Reads: 			7292
        Writes: 		1580
        Comparisons:		78
        Gotos: 			0
        
digraph CFG {
	22419891 [label="22419891  double scv_314, scv_315, scv_316, scv_317, scv_318, scv_319, scv_320, scv_321;...",shape=box];
	ForLoop22316083 [label="ForLoop22316083  for (k=cbv_39; k<=cbv_40; k=k+1) {...",shape=box];
	ForLoop22316083 -> 22365722;
	ForLoop22316083 -> _JOIN_22316083;
	_JOIN_22320378 [label="_JOIN_22320378None...",shape=box];
	_JOIN_22320378 -> _JOIN_22320381;
	22370182 [label="22370182  double scv_266;...",shape=box];
	ForLoop22298074 [label="ForLoop22298074  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop22298074 -> 22297805;
	ForLoop22298074 -> _JOIN_22298074;
	ForLoop22298072 [label="ForLoop22298072  for (j=jjj; j<=cbv_1; j=j+1) {...",shape=box];
	ForLoop22298072 -> 22320776;
	ForLoop22298072 -> _JOIN_22298072;
	_JOIN_22319625 [label="_JOIN_22319625None...",shape=box];
	_JOIN_22319625 -> _JOIN_22319627;
	ForLoop22310915 [label="ForLoop22310915  for (k=kt; k<=cbv_11; k=k+14) {...",shape=box];
	ForLoop22310915 -> 22355318;
	ForLoop22310915 -> _JOIN_22310915;
	_JOIN_22318347 [label="_JOIN_22318347None...",shape=box];
	_JOIN_22318347 -> 22318349;
	ForLoop22316009 [label="ForLoop22316009  for (k=kt; k<=cbv_38; k=k+14) {...",shape=box];
	ForLoop22316009 -> 22365353;
	ForLoop22316009 -> _JOIN_22316009;
	22355318 [label="22355318  double scv_57, scv_58, scv_59, scv_60, scv_61, scv_62, scv_63, scv_64;...",shape=box];
	_JOIN_22303930 [label="_JOIN_22303930None...",shape=box];
	_JOIN_22303930 -> 22447911;
	22456233 [label="22456233  register int cbv_30, cbv_31;...",shape=box];
	ForLoop22303930 [label="ForLoop22303930  for (k=kt; k<=cbv_3; k=k+14) {...",shape=box];
	ForLoop22303930 -> 22329349;
	ForLoop22303930 -> _JOIN_22303930;
	22312123 [label="22312123  int k;...",shape=box];
	_JOIN_22319903 [label="_JOIN_22319903None...",shape=box];
	_JOIN_22319903 -> 22319904;
	_JOIN_22317707 [label="_JOIN_22317707None...",shape=box];
	_JOIN_22317707 -> 22460241;
	_JOIN_22319484 [label="_JOIN_22319484None...",shape=box];
	_JOIN_22319484 -> 22418656;
	22300248 [label="22300248  int k;...",shape=box];
	ForLoop22318913 [label="ForLoop22318913  for (k=cbv_54; k<=cbv_55; k=k+1) {...",shape=box];
	ForLoop22318913 -> 22371297;
	ForLoop22318913 -> _JOIN_22318913;
	_JOIN_22311555 [label="_JOIN_22311555None...",shape=box];
	_JOIN_22311555 -> 22311557;
	ForLoop22316649 [label="ForLoop22316649  for (k=cbv_42; k<=cbv_43; k=k+1) {...",shape=box];
	ForLoop22316649 -> 22366837;
	ForLoop22316649 -> _JOIN_22316649;
	22418638 [label="22418638  double scv_297, scv_298, scv_299, scv_300, scv_301, scv_302, scv_303, scv_304;...",shape=box];
	22364238 [label="22364238  double scv_177, scv_178, scv_179, scv_180, scv_181, scv_182, scv_183, scv_184;...",shape=box];
	ForLoop22310355 [label="ForLoop22310355  for (k=kt; k<=cbv_8; k=k+14) {...",shape=box];
	ForLoop22310355 -> 22354212;
	ForLoop22310355 -> _JOIN_22310355;
	22453561 [label="22453561  register int cbv_18, cbv_19;...",shape=box];
	_JOIN_22312613 [label="_JOIN_22312613None...",shape=box];
	_JOIN_22312613 -> 22454229;
	_JOIN_22316083 [label="_JOIN_22316083None...",shape=box];
	_JOIN_22316083 -> 22316085;
	_JOIN_22298074 [label="_JOIN_22298074None...",shape=box];
	_JOIN_22298074 -> ForLoop22304185;
	22310991 [label="22310991  int k;...",shape=box];
	_JOIN_22298072 [label="_JOIN_22298072None...",shape=box];
	_JOIN_22298072 -> _JOIN_22298074;
	ForLoop22313253 [label="ForLoop22313253  for (k=cbv_24; k<=cbv_25; k=k+1) {...",shape=box];
	ForLoop22313253 -> 22360147;
	ForLoop22313253 -> _JOIN_22313253;
	_JOIN_22311481 [label="_JOIN_22311481None...",shape=box];
	_JOIN_22311481 -> 22452893;
	ForLoop22314951 [label="ForLoop22314951  for (k=cbv_33; k<=cbv_34; k=k+1) {...",shape=box];
	ForLoop22314951 -> 22363492;
	ForLoop22314951 -> _JOIN_22314951;
	22418656 [label="22418656  tmp[(i+12)]=scv_297;...",shape=box];
	22314387 [label="22314387  int k;...",shape=box];
	22361262 [label="22361262  double scv_146;...",shape=box];
	22423974 [label="22423974  double scv_337;...",shape=box];
	_JOIN_22309948 [label="_JOIN_22309948None...",shape=box];
	_JOIN_22309948 -> 22309949;
	ForLoop22318839 [label="ForLoop22318839  for (k=kt; k<=cbv_53; k=k+14) {...",shape=box];
	ForLoop22318839 -> 22370928;
	ForLoop22318839 -> _JOIN_22318839;
	22365353 [label="22365353  double scv_192, scv_193, scv_194, scv_195, scv_196, scv_197, scv_198, scv_199;...",shape=box];
	ForLoop22300247 [label="ForLoop22300247  for (kt=kk; kt<=cbv_2; kt=kt+8) {...",shape=box];
	ForLoop22300247 -> 22324033;
	ForLoop22300247 -> _JOIN_22300247;
	ForLoop22311481 [label="ForLoop22311481  for (k=kt; k<=cbv_14; k=k+14) {...",shape=box];
	ForLoop22311481 -> 22356433;
	ForLoop22311481 -> _JOIN_22311481;
	ForLoop22313819 [label="ForLoop22313819  for (k=cbv_27; k<=cbv_28; k=k+1) {...",shape=box];
	ForLoop22313819 -> 22361262;
	ForLoop22313819 -> _JOIN_22313819;
	22421017 [label="22421017  double scv_336;...",shape=box];
	22456901 [label="22456901  register int cbv_33, cbv_34;...",shape=box];
	ForLoop22318347 [label="ForLoop22318347  for (k=cbv_51; k<=cbv_52; k=k+1) {...",shape=box];
	ForLoop22318347 -> 22370182;
	ForLoop22318347 -> _JOIN_22318347;
	_JOIN_22315443 [label="_JOIN_22315443None...",shape=box];
	_JOIN_22315443 -> 22457569;
	22363123 [label="22363123  double scv_162, scv_163, scv_164, scv_165, scv_166, scv_167, scv_168, scv_169;...",shape=box];
	22420657 [label="22420657  double scv_322, scv_323, scv_324, scv_325, scv_326, scv_327, scv_328, scv_329;...",shape=box];
	_JOIN_22313745 [label="_JOIN_22313745None...",shape=box];
	_JOIN_22313745 -> 22455565;
	ForLoop22314311 [label="ForLoop22314311  for (k=kt; k<=cbv_29; k=k+14) {...",shape=box];
	ForLoop22314311 -> 22362008;
	ForLoop22314311 -> _JOIN_22314311;
	22369813 [label="22369813  double scv_252, scv_253, scv_254, scv_255, scv_256, scv_257, scv_258, scv_259;...",shape=box];
	22312689 [label="22312689  int k;...",shape=box];
	22297805 [label="22297805  for (j=jjj; j<=min(ny-1,jjj+2047); j=j+1) ...",shape=box];
	22357548 [label="22357548  double scv_87, scv_88, scv_89, scv_90, scv_91, scv_92, scv_93, scv_94;...",shape=box];
	ForLoop22320310 [label="ForLoop22320310  for (k=kt; k<=cbv_61; k=k+14) {...",shape=box];
	ForLoop22320310 -> 22420657;
	ForLoop22320310 -> _JOIN_22320310;
	ForLoop22320378 [label="ForLoop22320378  for (k=cbv_62; k<=cbv_63; k=k+1) {...",shape=box];
	ForLoop22320378 -> 22421017;
	ForLoop22320378 -> _JOIN_22320378;
	ForLoop22320381 [label="ForLoop22320381  for (kk=kkk; kk<=min(ny-1,kkk+96); kk=kk+32) {...",shape=box];
	ForLoop22320381 -> 22462631;
	ForLoop22320381 -> _JOIN_22320381;
	22370928 [label="22370928  double scv_267, scv_268, scv_269, scv_270, scv_271, scv_272, scv_273, scv_274;...",shape=box];
	_JOIN_22314877 [label="_JOIN_22314877None...",shape=box];
	_JOIN_22314877 -> 22456901;
	22360893 [label="22360893  double scv_132, scv_133, scv_134, scv_135, scv_136, scv_137, scv_138, scv_139;...",shape=box];
	ForLoop22139256 [label="ForLoop22139256  for (i=0; i<=ny-26; i=i+26) {...",shape=box];
	ForLoop22139256 -> 22139029;
	ForLoop22139256 -> _JOIN_22139256;
	ForLoop22319625 [label="ForLoop22319625  for (j=jjj; j<=cbv_59; j=j+1) {...",shape=box];
	ForLoop22319625 -> 22319624;
	ForLoop22319625 -> _JOIN_22319625;
	22313821 [label="22313821  int k;...",shape=box];
	22357917 [label="22357917  double scv_101;...",shape=box];
	_JOIN_22317215 [label="_JOIN_22317215None...",shape=box];
	_JOIN_22317215 -> 22317217;
	22320776 [label="22320776  double scv_1;...",shape=box];
	22461577 [label="22461577  register int cbv_54, cbv_55;...",shape=box];
	_JOIN_22300247 [label="_JOIN_22300247None...",shape=box];
	_JOIN_22300247 -> 22300248;
	_JOIN_22320381 [label="_JOIN_22320381None...",shape=box];
	_JOIN_22320381 -> _JOIN_22320382;
	_JOIN_22318839 [label="_JOIN_22318839None...",shape=box];
	_JOIN_22318839 -> 22461577;
	_JOIN_22319405 [label="_JOIN_22319405None...",shape=box];
	_JOIN_22319405 -> 22462245;
	_JOIN_22313819 [label="_JOIN_22313819None...",shape=box];
	_JOIN_22313819 -> 22313821;
	ForLoop22313179 [label="ForLoop22313179  for (k=kt; k<=cbv_23; k=k+14) {...",shape=box];
	ForLoop22313179 -> 22359778;
	ForLoop22313179 -> _JOIN_22313179;
	22450967 [label="22450967  register int cbv_7;...",shape=box];
	ForLoop22319479 [label="ForLoop22319479  for (k=cbv_57; k<=cbv_58; k=k+1) {...",shape=box];
	ForLoop22319479 -> 22372412;
	ForLoop22319479 -> _JOIN_22319479;
	22317783 [label="22317783  int k;...",shape=box];
	22452893 [label="22452893  register int cbv_15, cbv_16;...",shape=box];
	ForLoop22312613 [label="ForLoop22312613  for (k=kt; k<=cbv_20; k=k+14) {...",shape=box];
	ForLoop22312613 -> 22358663;
	ForLoop22312613 -> _JOIN_22312613;
	22359778 [label="22359778  double scv_117, scv_118, scv_119, scv_120, scv_121, scv_122, scv_123, scv_124;...",shape=box];
	22311557 [label="22311557  int k;...",shape=box];
	_JOIN_22305455 [label="_JOIN_22305455None...",shape=box];
	_JOIN_22305455 -> ForLoop22319484;
	22454229 [label="22454229  register int cbv_21, cbv_22;...",shape=box];
	_JOIN_22320310 [label="_JOIN_22320310None...",shape=box];
	_JOIN_22320310 -> 22463221;
	ForLoop22311555 [label="ForLoop22311555  for (k=cbv_15; k<=cbv_16; k=k+1) {...",shape=box];
	ForLoop22311555 -> 22356802;
	ForLoop22311555 -> _JOIN_22311555;
	ForLoop22319903 [label="ForLoop22319903  for (kt=kk; kt<=cbv_60; kt=kt+8) {...",shape=box];
	ForLoop22319903 -> 22419891;
	ForLoop22319903 -> _JOIN_22319903;
	ForLoop22318273 [label="ForLoop22318273  for (k=kt; k<=cbv_50; k=k+14) {...",shape=box];
	ForLoop22318273 -> 22369813;
	ForLoop22318273 -> _JOIN_22318273;
	_JOIN_22313179 [label="_JOIN_22313179None...",shape=box];
	_JOIN_22313179 -> 22454897;
	22369067 [label="22369067  double scv_251;...",shape=box];
	ForLoop22314385 [label="ForLoop22314385  for (k=cbv_30; k<=cbv_31; k=k+1) {...",shape=box];
	ForLoop22314385 -> 22362377;
	ForLoop22314385 -> _JOIN_22314385;
	ForLoop22319482 [label="ForLoop22319482  for (kk=kkk; kk<=min(ny-1,kkk+96); kk=kk+32) {...",shape=box];
	ForLoop22319482 -> 22450967;
	ForLoop22319482 -> _JOIN_22319482;
	ForLoop22312121 [label="ForLoop22312121  for (k=cbv_18; k<=cbv_19; k=k+1) {...",shape=box];
	ForLoop22312121 -> 22357917;
	ForLoop22312121 -> _JOIN_22312121;
	ForLoop22305453 [label="ForLoop22305453  for (j=jjj; j<=cbv_6; j=j+1) {...",shape=box];
	ForLoop22305453 -> 22346075;
	ForLoop22305453 -> _JOIN_22305453;
	ForLoop22305455 [label="ForLoop22305455  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop22305455 -> 22304402;
	ForLoop22305455 -> _JOIN_22305455;
	22463221 [label="22463221  register int cbv_62, cbv_63;...",shape=box];
	_JOIN_22310915 [label="_JOIN_22310915None...",shape=box];
	_JOIN_22310915 -> 22452225;
	22462631 [label="22462631  register int cbv_60;...",shape=box];
	22310425 [label="22310425  int k;...",shape=box];
	_JOIN_22318913 [label="_JOIN_22318913None...",shape=box];
	_JOIN_22318913 -> 22318915;
	22372412 [label="22372412  double scv_296;...",shape=box];
	_JOIN_22319482 [label="_JOIN_22319482None...",shape=box];
	_JOIN_22319482 -> _JOIN_22319484;
	_JOIN_22139325 [label="_JOIN_22139325None...",shape=box];
	_JOIN_22139325 -> 22297721;
	_JOIN_22319486 [label="_JOIN_22319486None...",shape=box];
	_JOIN_22319486 -> ForLoop22320384;
	ForLoop22319486 [label="ForLoop22319486  for (i=it; i<=min(nx-1,iii+1023)-16; i=i+17) {...",shape=box];
	ForLoop22319486 -> 22418638;
	ForLoop22319486 -> _JOIN_22319486;
	22462245 [label="22462245  register int cbv_57, cbv_58;...",shape=box];
	22363492 [label="22363492  double scv_176;...",shape=box];
	22356802 [label="22356802  double scv_86;...",shape=box];
	_JOIN_22314951 [label="_JOIN_22314951None...",shape=box];
	_JOIN_22314951 -> 22314953;
	_JOIN_22314311 [label="_JOIN_22314311None...",shape=box];
	_JOIN_22314311 -> 22456233;
	22368698 [label="22368698  double scv_237, scv_238, scv_239, scv_240, scv_241, scv_242, scv_243, scv_244;...",shape=box];
	22318915 [label="22318915  int k;...",shape=box];
	22451557 [label="22451557  register int cbv_9, cbv_10;...",shape=box];
	22454897 [label="22454897  register int cbv_24, cbv_25;...",shape=box];
	22367952 [label="22367952  double scv_236;...",shape=box];
	22309949 [label="22309949  int k;...",shape=box];
	22330158 [label="22330158  double scv_24;...",shape=box];
	22360147 [label="22360147  double scv_131;...",shape=box];
	22457569 [label="22457569  register int cbv_36, cbv_37;...",shape=box];
	ForLoop22319405 [label="ForLoop22319405  for (k=kt; k<=cbv_56; k=k+14) {...",shape=box];
	ForLoop22319405 -> 22372043;
	ForLoop22319405 -> _JOIN_22319405;
	22362008 [label="22362008  double scv_147, scv_148, scv_149, scv_150, scv_151, scv_152, scv_153, scv_154;...",shape=box];
	22371297 [label="22371297  double scv_281;...",shape=box];
	22344908 [label="22344908  double scv_25, scv_26, scv_27, scv_28, scv_29, scv_30, scv_31, scv_32;...",shape=box];
	ForLoop22316575 [label="ForLoop22316575  for (k=kt; k<=cbv_41; k=k+14) {...",shape=box];
	ForLoop22316575 -> 22366468;
	ForLoop22316575 -> _JOIN_22316575;
	22458905 [label="22458905  register int cbv_42, cbv_43;...",shape=box];
	_JOIN_22314385 [label="_JOIN_22314385None...",shape=box];
	_JOIN_22314385 -> 22314387;
	22324033 [label="22324033  double scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8, scv_9;...",shape=box];
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 22138597;
	_JOIN_22319479 [label="_JOIN_22319479None...",shape=box];
	_JOIN_22319479 -> _JOIN_22319482;
	_JOIN_22304184 [label="_JOIN_22304184None...",shape=box];
	_JOIN_22304184 -> _JOIN_22304185;
	_JOIN_22304185 [label="_JOIN_22304185None...",shape=box];
	_JOIN_22304185 -> 22344920;
	_JOIN_22304187 [label="_JOIN_22304187None...",shape=box];
	_JOIN_22304187 -> 22304188;
	_JOIN_22304181 [label="_JOIN_22304181None...",shape=box];
	_JOIN_22304181 -> _JOIN_22304184;
	ForLoop22319484 [label="ForLoop22319484  for (kkk=0; kkk<=ny-1; kkk=kkk+128) {...",shape=box];
	ForLoop22319484 -> ForLoop22319482;
	ForLoop22319484 -> _JOIN_22319484;
	_JOIN_22310989 [label="_JOIN_22310989None...",shape=box];
	_JOIN_22310989 -> 22310991;
	_JOIN_22316009 [label="_JOIN_22316009None...",shape=box];
	_JOIN_22316009 -> 22458237;
	22313255 [label="22313255  int k;...",shape=box];
	_JOIN_22319627 [label="_JOIN_22319627None...",shape=box];
	_JOIN_22319627 -> ForLoop22320382;
	22304188 [label="22304188  int i;...",shape=box];
	22304188 -> ForLoop22319486;
	22452225 [label="22452225  register int cbv_12, cbv_13;...",shape=box];
	22458237 [label="22458237  register int cbv_39, cbv_40;...",shape=box];
	_JOIN_22305453 [label="_JOIN_22305453None...",shape=box];
	_JOIN_22305453 -> _JOIN_22305455;
	22315519 [label="22315519  int k;...",shape=box];
	ForLoop22312687 [label="ForLoop22312687  for (k=cbv_21; k<=cbv_22; k=k+1) {...",shape=box];
	ForLoop22312687 -> 22359032;
	ForLoop22312687 -> _JOIN_22312687;
	ForLoop22312047 [label="ForLoop22312047  for (k=kt; k<=cbv_17; k=k+14) {...",shape=box];
	ForLoop22312047 -> 22357548;
	ForLoop22312047 -> _JOIN_22312047;
	22139324 [label="22139324  y[i]=0.0;...",shape=box];
	22139324 -> _JOIN_22139325;
	22359032 [label="22359032  double scv_116;...",shape=box];
	_JOIN_22317141 [label="_JOIN_22317141None...",shape=box];
	_JOIN_22317141 -> 22459573;
	22316651 [label="22316651  int k;...",shape=box];
	ForLoop22317141 [label="ForLoop22317141  for (k=kt; k<=cbv_44; k=k+14) {...",shape=box];
	ForLoop22317141 -> 22367583;
	ForLoop22317141 -> _JOIN_22317141;
	22367583 [label="22367583  double scv_222, scv_223, scv_224, scv_225, scv_226, scv_227, scv_228, scv_229;...",shape=box];
	_JOIN_22139256 [label="_JOIN_22139256None...",shape=box];
	_JOIN_22139256 -> ForLoop22139325;
	_JOIN_22320387 [label="_JOIN_22320387None...",shape=box];
	ForLoop22139325 [label="ForLoop22139325  for (i=ny-((ny-(0))%26); i<=ny-1; i=i+1) ...",shape=box];
	ForLoop22139325 -> 22139324;
	ForLoop22139325 -> _JOIN_22139325;
	ForLoop22319627 [label="ForLoop22319627  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop22319627 -> 22319583;
	ForLoop22319627 -> _JOIN_22319627;
	22447911 [label="22447911  register int cbv_4, cbv_5;...",shape=box];
	_JOIN_22315517 [label="_JOIN_22315517None...",shape=box];
	_JOIN_22315517 -> 22315519;
	22355687 [label="22355687  double scv_71;...",shape=box];
	ForLoop22317215 [label="ForLoop22317215  for (k=cbv_45; k<=cbv_46; k=k+1) {...",shape=box];
	ForLoop22317215 -> 22367952;
	ForLoop22317215 -> _JOIN_22317215;
	22362377 [label="22362377  double scv_161;...",shape=box];
	22297721 [label="22297721  double x_copy[2048];...",shape=box];
	ForLoop22320384 [label="ForLoop22320384  for (i=(min(nx-1,iii+1023))-(((min(nx-1,iii+1023))-(it)+1)%17)+1; i<=min(nx-1,iii+1023); i=i+1) {...",shape=box];
	ForLoop22320384 -> 22423974;
	ForLoop22320384 -> _JOIN_22320384;
	ForLoop22310989 [label="ForLoop22310989  for (k=cbv_12; k<=cbv_13; k=k+1) {...",shape=box];
	ForLoop22310989 -> 22355687;
	ForLoop22310989 -> _JOIN_22310989;
	22365722 [label="22365722  double scv_206;...",shape=box];
	ForLoop22320387 [label="ForLoop22320387  for (iii=0; iii<=nx-1; iii=iii+1024) {...",shape=box];
	ForLoop22320387 -> ForLoop22304187;
	ForLoop22320387 -> _JOIN_22320387;
	22318349 [label="22318349  int k;...",shape=box];
	ForLoop22320382 [label="ForLoop22320382  for (kkk=0; kkk<=ny-1; kkk=kkk+128) {...",shape=box];
	ForLoop22320382 -> ForLoop22320381;
	ForLoop22320382 -> _JOIN_22320382;
	22319904 [label="22319904  int k;...",shape=box];
	22354572 [label="22354572  double scv_56;...",shape=box];
	ForLoop22304181 [label="ForLoop22304181  for (k=cbv_4; k<=cbv_5; k=k+1) {...",shape=box];
	ForLoop22304181 -> 22330158;
	ForLoop22304181 -> _JOIN_22304181;
	_JOIN_22317781 [label="_JOIN_22317781None...",shape=box];
	_JOIN_22317781 -> 22317783;
	ForLoop22304184 [label="ForLoop22304184  for (kk=kkk; kk<=min(ny-1,kkk+96); kk=kk+32) {...",shape=box];
	ForLoop22304184 -> 22445354;
	ForLoop22304184 -> _JOIN_22304184;
	ForLoop22304185 [label="ForLoop22304185  for (kkk=0; kkk<=ny-1; kkk=kkk+128) {...",shape=box];
	ForLoop22304185 -> ForLoop22304184;
	ForLoop22304185 -> _JOIN_22304185;
	ForLoop22304187 [label="ForLoop22304187  for (it=iii; it<=min(nx-1,iii+1023)-7; it=it+8) {...",shape=box];
	ForLoop22304187 -> 22344908;
	ForLoop22304187 -> _JOIN_22304187;
	ForLoop22315443 [label="ForLoop22315443  for (k=kt; k<=cbv_35; k=k+14) {...",shape=box];
	ForLoop22315443 -> 22364238;
	ForLoop22315443 -> _JOIN_22315443;
	22319583 [label="22319583  for (j=jjj; j<=min(ny-1,jjj+2047); j=j+1) ...",shape=box];
	22459573 [label="22459573  register int cbv_45, cbv_46;...",shape=box];
	22358663 [label="22358663  double scv_102, scv_103, scv_104, scv_105, scv_106, scv_107, scv_108, scv_109;...",shape=box];
	ForLoop22310423 [label="ForLoop22310423  for (k=cbv_9; k<=cbv_10; k=k+1) {...",shape=box];
	ForLoop22310423 -> 22354572;
	ForLoop22310423 -> _JOIN_22310423;
	22344920 [label="22344920  tmp[it]=scv_25;...",shape=box];
	22366837 [label="22366837  double scv_221;...",shape=box];
	22138597 [label="22138597  int i;...",shape=box];
	22138597 -> ForLoop22139256;
	22329349 [label="22329349  double scv_10, scv_11, scv_12, scv_13, scv_14, scv_15, scv_16, scv_17;...",shape=box];
	22364607 [label="22364607  double scv_191;...",shape=box];
	_JOIN_22316575 [label="_JOIN_22316575None...",shape=box];
	_JOIN_22316575 -> 22458905;
	22353190 [label="22353190  double scv_34, scv_35, scv_36, scv_37, scv_38, scv_39, scv_40, scv_41;...",shape=box];
	ForLoop22313745 [label="ForLoop22313745  for (k=kt; k<=cbv_26; k=k+14) {...",shape=box];
	ForLoop22313745 -> 22360893;
	ForLoop22313745 -> _JOIN_22313745;
	22423986 [label="22423986  tmp[i]=scv_337;...",shape=box];
	22423986 -> _JOIN_22320384;
	22460241 [label="22460241  register int cbv_48, cbv_49;...",shape=box];
	22346075 [label="22346075  double scv_33;...",shape=box];
	22139029 [label="22139029  y[i]=0.0;...",shape=box];
	22319624 [label="22319624  scv_337=scv_337+A[i*ny+j]*x_copy[(j-jjj)];...",shape=box];
	22319624 -> _JOIN_22319625;
	22372043 [label="22372043  double scv_282, scv_283, scv_284, scv_285, scv_286, scv_287, scv_288, scv_289;...",shape=box];
	_JOIN_22313253 [label="_JOIN_22313253None...",shape=box];
	_JOIN_22313253 -> 22313255;
	22356433 [label="22356433  double scv_72, scv_73, scv_74, scv_75, scv_76, scv_77, scv_78, scv_79;...",shape=box];
	_JOIN_22310423 [label="_JOIN_22310423None...",shape=box];
	_JOIN_22310423 -> 22310425;
	ForLoop22317781 [label="ForLoop22317781  for (k=cbv_48; k<=cbv_49; k=k+1) {...",shape=box];
	ForLoop22317781 -> 22369067;
	ForLoop22317781 -> _JOIN_22317781;
	_JOIN_22312047 [label="_JOIN_22312047None...",shape=box];
	_JOIN_22312047 -> 22453561;
	_JOIN_22312121 [label="_JOIN_22312121None...",shape=box];
	_JOIN_22312121 -> 22312123;
	ForLoop22315517 [label="ForLoop22315517  for (k=cbv_36; k<=cbv_37; k=k+1) {...",shape=box];
	ForLoop22315517 -> 22364607;
	ForLoop22315517 -> _JOIN_22315517;
	22314953 [label="22314953  int k;...",shape=box];
	22445354 [label="22445354  registeexpected=9369846271501.798828
actual=9369846271501.798828
r int cbv_2;...",shape=box];
	ForLoop22314877 [label="ForLoop22314877  for (k=kt; k<=cbv_32; k=k+14) {...",shape=box];
	ForLoop22314877 -> 22363123;
	ForLoop22314877 -> _JOIN_22314877;
	22316085 [label="22316085  int k;...",shape=box];
	_JOIN_22320382 [label="_JOIN_22320382None...",shape=box];
	_JOIN_22320382 -> 22423986;
	_JOIN_22320384 [label="_JOIN_22320384None...",shape=box];
	_JOIN_22320384 -> _JOIN_22320387;
	ForLoop22317707 [label="ForLoop22317707  for (k=kt; k<=cbv_47; k=k+14) {...",shape=box];
	ForLoop22317707 -> 22368698;
	ForLoop22317707 -> _JOIN_22317707;
	22304402 [label="22304402  for (j=jjj; j<=min(ny-1,jjj+2047); j=j+1) ...",shape=box];
	22354212 [label="22354212  double scv_42, scv_43, scv_44, scv_45, scv_46, scv_47, scv_48, scv_49;...",shape=box];
	_JOIN_22312687 [label="_JOIN_22312687None...",shape=box];
	_JOIN_22312687 -> 22312689;
	_JOIN_22316649 [label="_JOIN_22316649None...",shape=box];
	_JOIN_22316649 -> 22316651;
	22317217 [label="22317217  int k;...",shape=box];
	22455565 [label="22455565  register int cbv_27, cbv_28;...",shape=box];
	_JOIN_22310355 [label="_JOIN_22310355None...",shape=box];
	_JOIN_22310355 -> 22451557;
	_JOIN_22318273 [label="_JOIN_22318273None...",shape=box];
	_JOIN_22318273 -> 22460909;
	22366468 [label="22366468  double scv_207, scv_208, scv_209, scv_210, scv_211, scv_212, scv_213, scv_214;...",shape=box];
	22460909 [label="22460909  register int cbv_51, cbv_52;...",shape=box];
	ForLoop22309948 [label="ForLoop22309948  for (kt=kk; kt<=cbv_7; kt=kt+8) {...",shape=box];
	ForLoop22309948 -> 22353190;
	ForLoop22309948 -> _JOIN_22309948;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest92.exe __orio_perftest92.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest92.exe  
{'[0, 0, 2, 5, 6, 2, 1, 0, 25, 16, 0, 13, 1, 0, 1, 1, 0, 1]' : 0.0867422}
{'[0, 0, 2, 5, 6, 2, 1, 0, 25, 16, 0, 13, 1, 0, 1, 1, 0, 1]' : 0.0863671}
{'[0, 0, 2, 5, 6, 2, 1, 0, 25, 16, 0, 13, 1, 0, 1, 1, 0, 1]' : 0.0862231}
{'[0, 0, 2, 5, 6, 2, 1, 0, 25, 16, 0, 13, 1, 0, 1, 1, 0, 1]' : 0.0866239}
{'[0, 0, 2, 5, 6, 2, 1, 0, 25, 16, 0, 13, 1, 0, 1, 1, 0, 1]' : 0.0862892}
{'[0, 0, 2, 5, 6, 2, 1, 0, 25, 16, 0, 13, 1, 0, 1, 1, 0, 1]' : 0.0862958}
{'[0, 0, 2, 5, 6, 2, 1, 0, 25, 16, 0, 13, 1, 0, 1, 1, 0, 1]' : 0.0863011}
{'[0, 0, 2, 5, 6, 2, 1, 0, 25, 16, 0, 13, 1, 0, 1, 1, 0, 1]' : 0.086277}
{'[0, 0, 2, 5, 6, 2, 1, 0, 25, 16, 0, 13, 1, 0, 1, 1, 0, 1]' : 0.0862501}
{'[0, 0, 2, 5, 6, 2, 1, 0, 25, 16, 0, 13, 1, 0, 1, 1, 0, 1]' : 0.0862808}
{'[0, 0, 2, 5, 6, 2, 1, 0, 25, 16, 0, 13, 1, 0, 1, 1, 0, 1]' : 0.08637}
{'[0, 0, 2, 5, 6, 2, 1, 0, 25, 16, 0, 13, 1, 0, 1, 1, 0, 1]' : 0.0862601}
{'[0, 0, 2, 5, 6, 2, 1, 0, 25, 16, 0, 13, 1, 0, 1, 1, 0, 1]' : 0.0862811}
{'[0, 0, 2, 5, 6, 2, 1, 0, 25, 16, 0, 13, 1, 0, 1, 1, 0, 1]' : 0.086189}
{'[0, 0, 2, 5, 6, 2, 1, 0, 25, 16, 0, 13, 1, 0, 1, 1, 0, 1]' : 0.0862558}
{'[0, 0, 2, 5, 6, 2, 1, 0, 25, 16, 0, 13, 1, 0, 1, 1, 0, 1]' : 0.0862422}
{'[0, 0, 2, 5, 6, 2, 1, 0, 25, 16, 0, 13, 1, 0, 1, 1, 0, 1]' : 0.0863171}
{'[0, 0, 2, 5, 6, 2, 1, 0, 25, 16, 0, 13, 1, 0, 1, 1, 0, 1]' : 0.086256}
{'[0, 0, 2, 5, 6, 2, 1, 0, 25, 16, 0, 13, 1, 0, 1, 1, 0, 1]' : 0.086282}
{'[0, 0, 2, 5, 6, 2, 1, 0, 25, 16, 0, 13, 1, 0, 1, 1, 0, 1]' : 0.086262}
{'[0, 0, 2, 5, 6, 2, 1, 0, 25, 16, 0, 13, 1, 0, 1, 1, 0, 1]' : 0.0863531}
{'[0, 0, 2, 5, 6, 2, 1, 0, 25, 16, 0, 13, 1, 0, 1, 1, 0, 1]' : 0.087014}
{'[0, 0, 2, 5, 6, 2, 1, 0, 25, 16, 0, 13, 1, 0, 1, 1, 0, 1]' : 0.086277}
{'[0, 0, 2, 5, 6, 2, 1, 0, 25, 16, 0, 13, 1, 0, 1, 1, 0, 1]' : 0.0865209}
{'[0, 0, 2, 5, 6, 2, 1, 0, 25, 16, 0, 13, 1, 0, 1, 1, 0, 1]' : 0.086252}
{'[0, 0, 2, 5, 6, 2, 1, 0, 25, 16, 0, 13, 1, 0, 1, 1, 0, 1]' : 0.0863261}
{'[0, 0, 2, 5, 6, 2, 1, 0, 25, 16, 0, 13, 1, 0, 1, 1, 0, 1]' : 0.0862131}
{'[0, 0, 2, 5, 6, 2, 1, 0, 25, 16, 0, 13, 1, 0, 1, 1, 0, 1]' : 0.0863838}
{'[0, 0, 2, 5, 6, 2, 1, 0, 25, 16, 0, 13, 1, 0, 1, 1, 0, 1]' : 0.086256}
{'[0, 0, 2, 5, 6, 2, 1, 0, 25, 16, 0, 13, 1, 0, 1, 1, 0, 1]' : 0.086329}

out:
 ["{'[0, 0, 2, 5, 6, 2, 1, 0, 25, 16, 0, 13, 1, 0, 1, 1, 0, 1]' : 0.0867422}", "{'[0, 0, 2, 5, 6, 2, 1, 0, 2WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = jjj
5, 16, 0, 13, 1, 0, 1, 1, 0, 1]' : 0.0863671}", "{'[0, 0, 2, 5, 6, 2, 1, 0, 25, 16, 0, 13, 1, 0, 1, 1, 0, 1]' : 0.0862231}", "{'[0, 0, 2, 5, 6, 2, 1, 0, 25, 16, 0, 13, 1, 0, 1, 1, 0, 1]' : 0.0866239}", "{'[0, 0, 2, 5, 6, 2, 1, 0, 25, 16, 0, 13, 1, 0, 1, 1, 0, 1]' : 0.0862892}", "{'[0, 0, 2, 5, 6, 2, 1, 0, 25, 16, 0, 13, 1, 0, 1, 1, 0, 1]' : 0.0862958}", "{'[0, 0, 2, 5, 6, 2, 1, 0, 25, 16, 0, 13, 1, 0, 1, 1, 0, 1]' : 0.0863011}", "{'[0, 0, 2, 5, 6, 2, 1, 0, 25, 16, 0, 13, 1, 0, 1, 1, 0, 1]' : 0.086277}", "{'[0, 0, 2, 5, 6, 2, 1, 0, 25, 16, 0, 13, 1, 0, 1, 1, 0, 1]' : 0.0862501}", "{'[0, 0, 2, 5, 6, 2, 1, 0, 25, 16, 0, 13, 1, 0, 1, 1, 0, 1]' : 0.0862808}", "{'[0, 0, 2, 5, 6, 2, 1, 0, 25, 16, 0, 13, 1, 0, 1, 1, 0, 1]' : 0.08637}", "{'[0, 0, 2, 5, 6, 2, 1, 0, 25, 16, 0, 13, 1, 0, 1, 1, 0, 1]' : 0.0862601}", "{'[0, 0, 2, 5, 6, 2, 1, 0, 25, 16, 0, 13, 1, 0, 1, 1, 0, 1]' : 0.0862811}", "{'[0, 0, 2, 5, 6, 2, 1, 0, 25, 16, 0, 13, 1, 0, 1, 1, 0, 1]' : 0.086189}", "{'[0, 0, 2, 5, 6, 2, 1, 0, 25, 16, 0, 13, 1, 0, 1, 1, 0, 1]' : 0.0862558}", "{'[0, 0, 2, 5, 6, 2, 1, 0, 25, 16, 0, 13, 1, 0, 1, 1, 0, 1]' : 0.0862422}", "{'[0, 0, 2, 5, 6, 2, 1, 0, 25, 16, 0, 13, 1, 0, 1, 1, 0, 1]' : 0.0863171}", "{'[0, 0, 2, 5, 6, 2, 1, 0, 25, 16, 0, 13, 1, 0, 1, 1, 0, 1]' : 0.086256}", "{'[0, 0, 2, 5, 6, 2, 1, 0, 25, 16, 0, 13, 1, 0, 1, 1, 0, 1]' : 0.086282}", "{'[0, 0, 2, 5, 6, 2, 1, 0, 25, 16, 0, 13, 1, 0, 1, 1, 0, 1]' : 0.086262}", "{'[0, 0, 2, 5, 6, 2, 1, 0, 25, 16, 0, 13, 1, 0, 1, 1, 0, 1]' : 0.0863531}", "{'[0, 0, 2, 5, 6, 2, 1, 0, 25, 16, 0, 13, 1, 0, 1, 1, 0, 1]' : 0.087014}", "{'[0, 0, 2, 5, 6, 2, 1, 0, 25, 16, 0, 13, 1, 0, 1, 1, 0, 1]' : 0.086277}", "{'[0, 0, 2, 5, 6, 2, 1, 0, 25, 16, 0, 13, 1, 0, 1, 1, 0, 1]' : 0.0865209}", "{'[0, 0, 2, 5, 6, 2, 1, 0, 25, 16, 0, 13, 1, 0, 1, 1, 0, 1]' : 0.086252}", "{'[0, 0, 2, 5, 6, 2, 1, 0, 25, 16, 0, 13, 1, 0, 1, 1, 0, 1]' : 0.0863261}", "{'[0, 0, 2, 5, 6, 2, 1, 0, 25, 16, 0, 13, 1, 0, 1, 1, 0, 1]' : 0.0862131}", "{'[0, 0, 2, 5, 6, 2, 1, 0, 25, 16, 0, 13, 1, 0, 1, 1, 0, 1]' : 0.0863838}", "{'[0, 0, 2, 5, 6, 2, 1, 0, 25, 16, 0, 13, 1, 0, 1, 1, 0, 1]' : 0.086256}", "{'[0, 0, 2, 5, 6, 2, 1, 0, 25, 16, 0, 13, 1, 0, 1, 1, 0, 1]' : 0.086329}"]
returning from 'run': {'[0, 0, 2, 5, 6, 2, 1, 0, 25, 16, 0, 13, 1, 0, 1, 1, 0, 1]': ([0.0867422, 0.0863671, 0.0862231, 0.0866239, 0.0862892, 0.0862958, 0.0863011, 0.086277, 0.0862501, 0.0862808, 0.08637, 0.0862601, 0.0862811, 0.086189, 0.0862558, 0.0862422, 0.0863171, 0.086256, 0.086282, 0.086262, 0.0863531, 0.087014, 0.086277, 0.0865209, 0.086252, 0.0863261, 0.0862131, 0.0863838, 0.086256, 0.086329], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.0867422, 0.0863671, 0.0862231, 0.0866239, 0.0862892, 0.0862958, 0.0863011, 0.086277, 0.0862501, 0.0862808, 0.08637, 0.0862601, 0.0862811, 0.086189, 0.0862558, 0.0862422, 0.0863171, 0.086256, 0.086282, 0.086262, 0.0863531, 0.087014, 0.086277, 0.0865209, 0.086252, 0.0863261, 0.0862131, 0.0863838, 0.086256, 0.086329], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 2, 5, 6, 2, 1, 0, 25, 16, 0, 13, 1, 0, 1, 1, 0, 1]': ([0.0867422, 0.0863671, 0.0862231, 0.0866239, 0.0862892, 0.0862958, 0.0863011, 0.086277, 0.0862501, 0.0862808, 0.08637, 0.0862601, 0.0862811, 0.086189, 0.0862558, 0.0862422, 0.0863171, 0.086256, 0.086282, 0.086262, 0.0863531, 0.087014, 0.086277, 0.0865209, 0.086252, 0.0863261, 0.0862131, 0.0863838, 0.086256, 0.086329], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [6, 5, 6, 6, 3, 5, 0, 2, 28, 0, 1, 1, 0, 1]
Fixed Factors: {'ACOPY_y': 0, 'U1_I': 25, 'U_J': 0, 'SCR': 1}
Testing candidate 23: [6, 5, 6, 6, 3, 5, 0, 0, 25, 2, 0, 28, 0, 1, 1, 1, 0, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	26
        Max loop nest depth: 	6
        Additions: 		1061
        Multiplications: 	376
        Divisions: 		0
        Logical: 		0
        Reads: 			2476
        Writes: 		578
        Comparisons:		26
        Gotos: 			0
        
digraph CFG {
	_JOIN_22527707 [label="_JOIN_22527707None...",shape=box];
	_JOIN_22527707 -> _JOIN_22527710;
	22533841 [label="22533841  double scv_18, scv_19, scv_20, scv_21, scv_22, scv_23, scv_24, scv_25;...",shape=box];
	_JOIN_22523763 [label="_JOIN_22523763None...",shape=box];
	_JOIN_22523763 -> 22575027;
	22576725 [label="22576725  register int cbv_5, cbv_6;...",shape=box];
	22534518 [label="22534518  double scv_47;...",shape=box];
	22575623 [label="22575623  register int cbv_3;...",shape=box];
	22575027 [label="22575027  register int cbv_2;...",shape=box];
	_JOIN_22529148 [label="_JOIN_22529148None...",shape=box];
	_JOIN_22529148 -> 22580863;
	_JOIN_22526557 [label="_JOIN_22526557None...",shape=box];
	_JOIN_22526557 -> 22577950;
	_JOIN_22529222 [label="_JOIN_22529222None...",shape=box];
	_JOIN_22529222 -> _JOIN_22529224;
	_JOIN_22529220 [label="_JOIN_22529220None...",shape=box];
	_JOIN_22529220 -> 22561411;
	_JOIN_22529224 [label="_JOIN_22529224None...",shape=box];
	_JOIN_22529224 -> _JOIN_22529225;
	_JOIN_22529225 [label="_JOIN_22529225None...",shape=box];
	ForLoop22527633 [label="ForLoop22527633  for (k=kt; k<=cbv_10; k=k+29) {...",shape=box];
	ForLoop22527633 -> 22538256;
	ForLoop22527633 -> _JOIN_22527633;
	ForLoop22525555 [label="ForLoop22525555  for (k=cbv_5; k<=cbv_6; k=k+1) {...",shape=box];
	ForLoop22525555 -> 22534518;
	ForLoop22525555 -> _JOIN_22525555;
	22527820 [label="22527820  scv_149=scv_149+A[i*ny+jt]*x[jt];...",shape=box];
	22579411 [label="22579411  register int cbv_13;...",shape=box];
	22536044 [label="22536044  double scv_48, scv_49, scv_50, scv_51, scv_52, scv_53, scv_54, scv_55;...",shape=box];
	22536730 [label="22536730  double scv_77;...",shape=box];
	22528042 [label="22528042  scv_149=scv_149+A[i*ny+j]*x[j];...",shape=box];
	22528042 -> _JOIN_22528043;
	22528322 [label="22528322  int k;...",shape=box];
	_JOIN_22528004 [label="_JOIN_22528004None...",shape=box];
	_JOIN_22528004 -> 22579458;
	ForLoop22524660 [label="ForLoop22524660  for (kt=kk; kt<=cbv_3; kt=kt+8) {...",shape=box];
	ForLoop22524660 -> 22532398;
	ForLoop22524660 -> _JOIN_22524660;
	22577950 [label="22577950  register int cbv_8, cbv_9;...",shape=box];
	_JOIN_22528321 [label="_JOIN_22528321None...",shape=box];
	_JOIN_22528321 -> 22528322;
	22524661 [label="22524661  int k;...",shape=box];
	22580863 [label="22580863  register int cbv_17, cbv_18;...",shape=box];
	22538256 [label="22538256  double scv_78, scv_79, scv_80, scv_81, scv_82, scv_83, scv_84, scv_85;...",shape=box];
	ForLoop22464358 [label="ForLoop22464358  for (i=0; i<=ny-26; i=i+26) {...",shape=box];
	ForLoop22464358 -> 22464131;
	ForLoop22464358 -> _JOIN_22464358;
	22530510 [label="22530510  double scv_9;...",shape=box];
	_JOIN_22523863 [label="_JOIN_22523863None...",shape=box];
	_JOIN_22523863 -> ForLoop22527712;
	ForLoop22528043 [label="ForLoop22528043  for (j=jt; j<=cbv_14; j=j+1) {...",shape=box];
	ForLoop22528043 -> 22528042;
	ForLoop22528043 -> _JOIN_22528043;
	_JOIN_22523861 [label="_JOIN_22523861None...",shape=box];
	_JOIN_22523861 -> _JOIN_22523863;
	ForLoop22528045 [label="ForLoop22528045  for (jj=0; jj<=ny-1; jj=jj+256) {...",shape=box];
	ForLoop22528045 -> 22579411;
	ForLoop22528045 -> _JOIN_22528045;
	ForLoop22525487 [label="ForLoop22525487  for (k=kt; k<=cbv_4; k=k+29) {...",shape=box];
	ForLoop22525487 -> 22533841;
	ForLoop22525487 -> _JOIN_22525487;
	22538942 [label="22538942  double scv_107;...",shape=box];
	_JOIN_22529219 [label="_JOIN_22529219None...",shape=box];
	_JOIN_22529219 -> _JOIN_22529220;
	22464426 [label="22464426  y[i]=0.0;...",shape=box];
	22464426 -> _JOIN_22464427;
	_JOIN_22529216 [label="_JOIN_22529216None...",shape=box];
	_JOIN_22529216 -> _JOIN_22529219;
	ForLoop22529219 [label="ForLoop22529219  for (kk=kkk; kk<=min(ny-1,kkk+512); kk=kk+512) {...",shape=box];
	ForLoop22529219 -> 22579761;
	ForLoop22529219 -> _JOIN_22529219;
	22522955 [label="22522955  int i;...",shape=box];
	22522955 -> ForLoop22527714;
	ForLoop22529216 [label="ForLoop22529216  for (k=cbv_17; k<=cbv_18; k=k+1) {...",shape=box];
	ForLoop22529216 -> 22556626;
	ForLoop22529216 -> _JOIN_22529216;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 22463699;
	_JOIN_22525487 [label="_JOIN_22525487None...",shape=box];
	_JOIN_22525487 -> 22576725;
	22579175 [label="22579175  register int cbv_11, cbv_12;...",shape=box];
	22574941 [label="22574941  register int cbv_1;...",shape=box];
	22555949 [label="22555949  double scv_119, scv_120, scv_121, scv_122, scv_123, scv_124, scv_125, scv_126;...",shape=box];
	22561411 [label="22561411  tmp[i]=scv_149;...",shape=box];
	22561411 -> _JOIN_22529222;
	22526633 [label="22526633  int k;...",shape=box];
	ForLoop22523763 [label="ForLoop22523763  for (jt=jj; jt<=cbv_1; jt=jt+8) {...",shape=box];
	ForLoop22523763 -> 22530288;
	ForLoop22523763 -> _JOIN_22523763;
	_JOIN_22527633 [label="_JOIN_22527633None...",shape=box];
	_JOIN_22527633 -> 22579175;
	22579458 [label="22579458  register int cbv_14;...",shape=box];
	22522922 [label="22522922  double x_copy;...",shape=box];
	22532398 [label="22532398  double scv_10, scv_11, scv_12, scv_13, scv_14, scv_15, scv_16, scv_17;...",shape=box];
	22464131 [label="22464131  y[i]=0.0;...",shape=box];
	22553302 [label="22553302  double scv_108, scv_109, scv_110;...",shape=box];
	_JOIN_22464358 [label="_JOIN_22464358None...",shape=box];
	_JOIN_22464358 -> ForLoop22464427;
	_JOIN_22525555 [label="_JOIN_22525555None...",shape=box];
	_JOIN_22525555 -> 22525557;
	ForLoop22526631 [label="ForLoop22526631  for (k=cbv_8; k<=cbv_9; k=k+1) {...",shape=box];
	ForLoop22526631 -> 22536730;
	ForLoop22526631 -> _JOIN_22526631;
	_JOIN_22524660 [label="_JOIN_22524660None...",shape=box];
	_JOIN_22524660 -> 22524661;
	22561399 [label="22561399  double scv_149;...",shape=box];
	22463699 [label="22463699  int i;...",shape=box];
	22463699 -> ForLoop22464358;
	22525557 [label="22525557  int k;...",shape=box];
	_JOIN_22526631 [label="_JOIN_22526631None...",shape=box];
	_JOIN_22526631 -> 22526633;
	ForLoop22527707 [label="ForLoop22527707  for (k=cbv_11; k<=cbv_12; k=k+1) {...",shape=box];
	ForLoop22527707 -> 22538942;
	ForLoop22527707 -> _JOIN_22527707;
	ForLoop22526557 [label="ForLoop22526557  for (k=kt; k<=cbv_7; k=k+29) {...",shape=box];
	ForLoop22526557 -> 22536044;
	ForLoop22526557 -> _JOIN_22526557;
	22579761 [label="22579761  register int cbv_15;...",shape=box];
	22530288 [label="22530288  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	_JOIN_22527714 [label="_JOIN_22527714None...",shape=box];
	_JOIN_22527714 -> ForLoop22529222;
	_JOIN_22527710 [label="_JOIN_22527710None...",shape=box];
	_JOIN_22527710 -> _JOIN_22527712;
	_JOIN_22527712 [label="_JOIN_22527712None...",shape=box];
	_JOIN_22527712 -> 22553320;
	ForLoop22529222 [label="ForLoop22529222  for (i=(min(nx-1,ii+511))-(((min(nx-1,ii+511))-(ii)+1)%3)+1; i<=min(nx-1,ii+511); i=i+1) {...",shape=box];
	ForLoop22529222 -> 22561399;
	ForLoop22529222 -> _JOIN_22529222;
	ForLoop22529220 [label="ForLoop22529220  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop22529220 -> ForLoop22529219;
	ForLoop22529220 -> _JOIN_22529220;
	ForLoop22529224 [label="ForLoop22529224  for (ii=iii; ii<=min(nx-1,iii+1536); ii=ii+512) {...",shape=box];
	ForLoop22529224 -> 22522955;
	ForLoop22529224 -> _JOIN_22529224;
	ForLoop22529225 [label="ForLoop22529225  for (iii=0; iii<=nx-1; iii=iii+2048) {...",shape=box];
	ForLoop22529225 -> ForLoop22529224;
	ForLoop22529225 -> _JOIN_22529225;
	ForLoop22527710 [label="ForLoop22527710  for (kk=kkk; kk<=min(ny-1,kkk+512); kk=kk+512) {...",shape=box];
	ForLoop22527710 -> 22575623;
	ForLoop22527710 -> _JOIN_22527710;
	ForLoop22527712 [label="ForLoop22527712  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop22527712 -> ForLoop22527710;
	ForLoop22527712 -> _JOIN_22527712;
	ForLoop22527714 [label="ForLoop22527714  for (i=ii; i<=min(nx-1,ii+511)-2; i=i+3) {...",shape=box];
	ForLoop22527714 -> 22553302;
	expected=9369846271501.798828
actual=9369846271501.798828
ForLoop22527714 -> _JOIN_22527714;
	_JOIN_22528043 [label="_JOIN_22528043None...",shape=box];
	_JOIN_22528043 -> _JOIN_22528045;
	ForLoop22528004 [label="ForLoop22528004  for (jt=jj; jt<=cbv_13; jt=jt+8) {...",shape=box];
	ForLoop22528004 -> 22527820;
	ForLoop22528004 -> _JOIN_22528004;
	ForLoop22523863 [label="ForLoop22523863  for (jj=0; jj<=ny-1; jj=jj+256) {...",shape=box];
	ForLoop22523863 -> 22574941;
	ForLoop22523863 -> _JOIN_22523863;
	22553320 [label="22553320  tmp[(i+2)]=scv_108;...",shape=box];
	ForLoop22523861 [label="ForLoop22523861  for (j=jt; j<=cbv_2; j=j+1) {...",shape=box];
	ForLoop22523861 -> 22530510;
	ForLoop22523861 -> _JOIN_22523861;
	22556626 [label="22556626  double scv_148;...",shape=box];
	ForLoop22528321 [label="ForLoop22528321  for (kt=kk; kt<=cbv_15; kt=kt+8) {...",shape=box];
	ForLoop22528321 -> 22554538;
	ForLoop22528321 -> _JOIN_22528321;
	ForLoop22529148 [label="ForLoop22529148  for (k=kt; k<=cbv_16; k=k+29) {...",shape=box];
	ForLoop22529148 -> 22555949;
	ForLoop22529148 -> _JOIN_22529148;
	22554538 [label="22554538  double scv_111, scv_112, scv_113, scv_114, scv_115, scv_116, scv_117, scv_118;...",shape=box];
	_JOIN_22464427 [label="_JOIN_22464427None...",shape=box];
	_JOIN_22464427 -> 22522922;
	_JOIN_22528045 [label="_JOIN_22528045None...",shape=box];
	_JOIN_22528045 -> ForLoop22529220;
	ForLoop22464427 [label="ForLoop22464427  for (i=ny-((ny-(0))%26); i<=ny-1; i=i+1) ...",shape=box];
	ForLoop22464427 -> 22464426;
	ForLoop22464427 -> _JOIN_22464427;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest93.exe __orio_perftest93.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest93.exe  
{'[6, 5, 6, 6, 3, 5, 0, 0, 25, 2, 0, 28, 0, 1, 1, 1, 0, 1]' : 0.0821331}
{'[6, 5, 6, 6, 3, 5, 0, 0, 25, 2, 0, 28, 0, 1, 1, 1, 0, 1]' : 0.0818629}
{'[6, 5, 6, 6, 3, 5, 0, 0, 25, 2, 0, 28, 0, 1, 1, 1, 0, 1]' : 0.0818031}
{'[6, 5, 6, 6, 3, 5, 0, 0, 25, 2, 0, 28, 0, 1, 1, 1, 0, 1]' : 0.0819209}
{'[6, 5, 6, 6, 3, 5, 0, 0, 25, 2, 0, 28, 0, 1, 1, 1, 0, 1]' : 0.081866}
{'[6, 5, 6, 6, 3, 5, 0, 0, 25, 2, 0, 28, 0, 1, 1, 1, 0, 1]' : 0.081856}
{'[6, 5, 6, 6, 3, 5, 0, 0, 25, 2, 0, 28, 0, 1, 1, 1, 0, 1]' : 0.0818691}
{'[6, 5, 6, 6, 3, 5, 0, 0, 25, 2, 0, 28, 0, 1, 1, 1, 0, 1]' : 0.0819058}
{'[6, 5, 6, 6, 3, 5, 0, 0, 25, 2, 0, 28, 0, 1, 1, 1, 0, 1]' : 0.0817871}
{'[6, 5, 6, 6, 3, 5, 0, 0, 25, 2, 0, 28, 0, 1, 1, 1, 0, 1]' : 0.0819349}
{'[6, 5, 6, 6, 3, 5, 0, 0, 25, 2, 0, 28, 0, 1, 1, 1, 0, 1]' : 0.081809}
{'[6, 5, 6, 6, 3, 5, 0, 0, 25, 2, 0, 28, 0, 1, 1, 1, 0, 1]' : 0.081826}
{'[6, 5, 6, 6, 3, 5, 0, 0, 25, 2, 0, 28, 0, 1, 1, 1, 0, 1]' : 0.0818031}
{'[6, 5, 6, 6, 3, 5, 0, 0, 25, 2, 0, 28, 0, 1, 1, 1, 0, 1]' : 0.0822308}
{'[6, 5, 6, 6, 3, 5, 0, 0, 25, 2, 0, 28, 0, 1, 1, 1, 0, 1]' : 0.0819309}
{'[6, 5, 6, 6, 3, 5, 0, 0, 25, 2, 0, 28, 0, 1, 1, 1, 0, 1]' : 0.0818141}
{'[6, 5, 6, 6, 3, 5, 0, 0, 25, 2, 0, 28, 0, 1, 1, 1, 0, 1]' : 0.081881}
{'[6, 5, 6, 6, 3, 5, 0, 0, 25, 2, 0, 28, 0, 1, 1, 1, 0, 1]' : 0.081872}
{'[6, 5, 6, 6, 3, 5, 0, 0, 25, 2, 0, 28, 0, 1, 1, 1, 0, 1]' : 0.081845}
{'[6, 5, 6, 6, 3, 5, 0, 0, 25, 2, 0, 28, 0, 1, 1, 1, 0, 1]' : 0.0818379}
{'[6, 5, 6, 6, 3, 5, 0, 0, 25, 2, 0, 28, 0, 1, 1, 1, 0, 1]' : 0.0818651}
{'[6, 5, 6, 6, 3, 5, 0, 0, 25, 2, 0, 28, 0, 1, 1, 1, 0, 1]' : 0.08183}
{'[6, 5, 6, 6, 3, 5, 0, 0, 25, 2, 0, 28, 0, 1, 1, 1, 0, 1]' : 0.0818}
{'[6, 5, 6, 6, 3, 5, 0, 0, 25, 2, 0, 28, 0, 1, 1, 1, 0, 1]' : 0.081811}
{'[6, 5, 6, 6, 3, 5, 0, 0, 25, 2, 0, 28, 0, 1, 1, 1, 0, 1]' : 0.0818141}
{'[6, 5, 6, 6, 3, 5, 0, 0, 25, 2, 0, 28, 0, 1, 1, 1, 0, 1]' : 0.08181}
{'[6, 5, 6, 6, 3, 5, 0, 0, 25, 2, 0, 28, 0, 1, 1, 1, 0, 1]' : 0.0818219}
{'[6, 5, 6, 6, 3, 5, 0, 0, 25, 2, 0, 28, 0, 1, 1, 1, 0, 1]' : 0.08179}
{'[6, 5, 6, 6, 3, 5, 0, 0, 25, 2, 0, 28, 0, 1, 1, 1, 0, 1]' : 0.0818989}
{'[6, 5, 6, 6, 3, 5, 0, 0, 25, 2, 0, 28, 0, 1, 1, 1, 0, 1]' : 0.0819101}

out:
 ["{'[6, 5, 6, 6, 3, 5, 0, 0, 25, 2, 0, 28, 0, 1, 1, 1, 0, 1]' : 0.0821331}", "{'[6, 5, 6, 6, 3, 5, 0, 0, 25, 2, 0, 28, 0, 1, 1, 1, 0, 1]' : 0.0818629}", "{'[6, 5, 6, 6, 3, 5, 0, 0, 25, 2, 0, 28, 0, 1, 1, 1, 0, 1]' : 0.0818031}", "{'[6, 5, 6, 6, 3, 5, 0, 0, 25, 2, 0, 28, 0, 1, 1, 1, 0, 1]' : 0.0819209}", "{'[6, 5, 6, 6, 3, 5, 0, 0, 25, 2, 0, 28, 0, 1, 1, 1, 0, 1]' : 0.081866}", "{'[6, 5, 6, 6, 3, 5, 0, 0, 25, 2, 0, 28, 0, 1, 1, 1, 0, 1]' : 0.081856}", "{'[6, 5, 6, 6, 3, 5, 0, 0, 25, 2, 0, 28, 0, 1, 1, 1, 0, 1]' : 0.0818691}", "{'[6, 5, 6, 6, 3, 5, 0, 0, 25, 2, 0, 28, 0, 1, 1, 1, 0, 1]' : 0.0819058}", "{'[6, 5, 6, 6, 3, 5, 0, 0, 25, 2, 0, 28, 0, 1, 1, 1, 0, 1]' : 0.0817871}", "{'[6, 5, 6, 6, 3, 5, 0, 0, 25, 2, 0, 28, 0, 1, 1, 1, 0, 1]' : 0.0819349}", "{'[6, 5, 6, 6, 3, 5, 0, 0, 25, 2, 0, 28, 0, 1, 1, 1, 0, 1]' : 0.081809}", "{'[6, 5, 6, 6, 3, 5, 0, 0, 25, 2, 0, 28, 0, 1, 1, 1, 0, 1]' : 0.081826}", "{'[6, 5, 6, 6, 3, 5, 0, 0, 25, 2, 0, 28, 0, 1, 1, 1, 0, 1]' : 0.0818031}", "{'[6, 5, 6, 6, 3, 5, 0, 0, 25, 2, 0, 28, 0, 1, 1, 1, 0, 1]' : 0.0822308}", "{'[6, 5, 6, 6, 3, 5, 0, 0, 25, 2, 0, 28, 0, 1, 1, 1, 0, 1]' : 0.0819309}", "{'[6, 5, 6, 6, 3, 5, 0, 0, 25, 2, 0, 28, 0, 1, 1, 1, 0, 1]' : 0.0818141}", "{'[6, 5, 6, 6, 3, 5, 0, 0, 25, 2, 0, 28, 0, 1, 1, 1, 0, 1]' : 0.081881}", "{'[6, 5, 6, 6, 3, 5, 0, 0, 25, 2, 0, 28, 0, 1, 1, 1, 0, 1]' : 0.081872}", "{'[6, 5, 6, 6, 3, 5, 0, 0, 25, 2, 0, 28, 0, 1, 1, 1, 0, 1]' : 0.081845}", "{'[6, 5, 6, 6, 3, 5, 0, 0, 25, 2, 0, 28, 0, 1, 1, 1, 0, 1]' : 0.0818379}", "{'[6, 5, 6, 6, 3, 5, 0, 0, 25, 2, 0, 28, 0, 1, 1, 1, 0, 1]' : 0.0818651}", "{'[6, 5, 6, 6, 3, 5, 0, 0, 25, 2, 0, 28, 0, 1, 1, 1, 0, 1]' : 0.08183}", "{'[6, 5, 6, 6, 3, 5, 0, 0, 25, 2, 0, 28, 0, 1, 1, 1, 0, 1]' : 0.0818}", "{'[6, 5, 6, 6, 3, 5, 0, 0, 25, 2, 0, 28, 0, 1, 1, 1, 0, 1]' : 0.081811}", "{'[6, 5, 6, 6, 3, 5, 0, 0, 25, 2, 0, 28, 0, 1, 1, 1, 0, 1]' : 0.0818141}", "{'[6, 5, 6, 6, 3, 5, 0, 0, 25, 2, 0, 28, 0, 1, 1, 1, 0, 1]' : 0.08181}", "{'[6, 5, 6, 6, 3, 5, 0, 0, 25, 2, 0, 28, 0, 1, 1, 1, 0, 1]' : 0.0818219}", "{'[6, 5, 6, 6, 3, 5, 0, 0, 25, 2, 0, 28, 0, 1, 1, 1, 0, 1]' : 0.08179}", "{'[6, 5, 6, 6, 3, 5, 0, 0, 25, 2, 0, 28, 0, 1, 1, 1, 0, 1]' : 0.0818989}", "{'[6, 5, 6, 6, 3, 5, 0, 0, 25, 2, 0, 28, 0, 1, 1, 1, 0, 1]' : 0.0819101}"]
returning from 'run': {'[6, 5, 6, 6, 3, 5, 0, 0, 25, 2, 0, 28, 0, 1, 1, 1, 0, 1]': ([0.0821331, 0.0818629, 0.0818031, 0.0819209, 0.081866, 0.081856, 0.0818691, 0.0819058, 0.0817871, 0.0819349, 0.081809, 0.081826, 0.0818031, 0.0822308, 0.0819309, 0.0818141, 0.081881, 0.081872, 0.081845, 0.0818379, 0.0818651, 0.08183, 0.0818, 0.081811, 0.0818141, 0.08181, 0.0818219, 0.08179, 0.0818989, 0.0819101], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.0821331, 0.0818629, 0.0818031, 0.0819209, 0.081866, 0.081856, 0.0818691, 0.0819058, 0.0817871, 0.0819349, 0.081809, 0.081826, 0.0818031, 0.0822308, 0.0819309, 0.0818141, 0.081881, 0.081872, 0.081845, 0.0818379, 0.0818651, 0.08183, 0.0818, 0.081811, 0.0818141, 0.08181, 0.0818219, 0.08179, 0.0818989, 0.0819101], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[6, 5, 6, 6, 3, 5, 0, 0, 25, 2, 0, 28, 0, 1, 1, 1, 0, 1]': ([0.0821331, 0.0818629, 0.0818031, 0.0819209, 0.081866, 0.081856, 0.0818691, 0.0819058, 0.0817871, 0.0819349, 0.081809, 0.081826, 0.0818031, 0.0822308, 0.0819309, 0.0818141, 0.081881, 0.081872, 0.081845, 0.0818379, 0.0818651, 0.08183, 0.0818, 0.081811, 0.0818141, 0.08181, 0.0818219, 0.08179, 0.0818989, 0.0819101], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [2, 6, 0, 0, 0, 4, 1, 2, 1, 0, 1, 1, 1, 1]
Fixed Factors: {'ACOPY_y': 0, 'U1_I': 25, 'U_J': 0, 'SCR': 1}
Testing candidate 24: [2, 6, 0, 0, 0, 4, 1, 0, 25, 2, 0, 1, 0, 1, 1, 1, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	25
        Max loop nest depth: 	4
        Additions: 		474
        Multiplications: 	152
        Divisions: 		0
        Logical: 		0
        Reads: 			1071
        Writes: 		252
        Comparisons:		25
        Gotos: 			0
        
digraph CFG {
	22582183 [label="22582183  register int cbv_2, cbv_3;...",shape=box];
	_JOIN_22613939 [label="_JOIN_22613939None...",shape=box];
	_JOIN_22613939 -> _JOIN_22613942;
	ForLoop22581839 [label="ForLoop22581839  for (i=0; i<=cbv_1; i=i+26) {...",shape=box];
	ForLoop22581839 -> 22581612;
	ForLoop22581839 -> _JOIN_22581839;
	22612736 [label="22612736  int k;...",shape=box];
	22627966 [label="22627966  register int cbv_2;...",shape=box];
	ForLoop22612806 [label="ForLoop22612806  for (k=kt; k<=cbv_3; k=k+2) {...",shape=box];
	ForLoop22612806 -> 22617366;
	ForLoop22612806 -> _JOIN_22612806;
	22624174 [label="22624174  tmp[i]=scv_40;...",shape=box];
	22624174 -> _JOIN_22613944;
	22581180 [label="22581180  int i;...",shape=box];
	22617595 [label="22617595  double scv_20, scv_21;...",shape=box];
	ForLoop22613800 [label="ForLoop22613800  for (kt=kkk; kt<=cbv_13; kt=kt+8) {...",shape=box];
	ForLoop22613800 -> 22622471;
	ForLoop22613800 -> _JOIN_22613800;
	ForLoop22613942 [label="ForLoop22613942  for (kkk=0; kkk<=ny-1; kkk=kkk+512) {...",shape=box];
	ForLoop22613942 -> 22629158;
	ForLoop22613942 -> _JOIN_22613942;
	22610987 [label="22610987  double x_copy[512];...",shape=box];
	22622721 [label="22622721  double scv_37, scv_38;...",shape=box];
	22629339 [label="22629339  register int cbv_15, cbv_16;...",shape=box];
	ForLoop22613946 [label="ForLoop22613946  for (ii=0; ii<=nx-1; ii=ii+32) {...",shape=box];
	ForLoop22613946 -> 22611002;
	ForLoop22613946 -> _JOIN_22613946;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 22581180;
	ForLoop22613944 [label="ForLoop22613944  for (i=(min(nx-1,ii+31))-(((min(nx-1,ii+31))-(ii)+1)%3)+1; i<=min(nx-1,ii+31); i=i+1) {...",shape=box];
	ForLoop22613944 -> 22624162;
	ForLoop22613944 -> _JOIN_22613944;
	_JOIN_22612874 [label="_JOIN_22612874None...",shape=box];
	_JOIN_22612874 -> 22612876;
	_JOIN_22613542 [label="_JOIN_22613542None...",shape=box];
	_JOIN_22613542 -> ForLoop22613942;
	_JOIN_22613116 [label="_JOIN_22613116None...",shape=box];
	_JOIN_22613116 -> 22628593;
	_JOIN_22613540 [label="_JOIN_22613540None...",shape=box];
	_JOIN_22613540 -> _JOIN_22613542;
	_JOIN_22581908 [label="_JOIN_22581908None...",shape=box];
	_JOIN_22581908 -> 22610987;
	22617949 [label="22617949  double scv_25;...",shape=box];
	22628370 [label="22628370  register int cbv_7, cbv_8;...",shape=box];
	_JOIN_22613032 [label="_JOIN_22613032None...",shape=box];
	_JOIN_22613032 -> 22613034;
	ForLoop22613871 [label="ForLoop22613871  for (k=kt; k<=cbv_14; k=k+2) {...",shape=box];
	ForLoop22613871 -> 22622721;
	ForLoop22613871 -> _JOIN_22613871;
	ForLoop22613195 [label="ForLoop22613195  for (i=ii; i<=min(nx-1,ii+31)-2; i=i+3) {...",shape=box];
	ForLoop22613195 -> 22621301;
	ForLoop22613195 -> _JOIN_22613195;
	ForLoop22612735 [label="ForLoop22612735  for (kt=kkk; kt<=cbv_2; kt=kt+8) {...",shape=box];
	ForLoop22612735 -> 22617084;
	ForLoop22612735 -> _JOIN_22612735;
	ForLoop22613190 [label="ForLoop22613190  for (k=cbv_10; k<=cbv_11; k=k+1) {...",shape=box];
	ForLoop22613190 -> 22617949;
	ForLoop22613190 -> _JOIN_22613190;
	_JOIN_22612735 [label="_JOIN_22612735None...",shape=box];
	_JOIN_22612735 -> 22612736;
	22622471 [label="22622471  double scv_29, scv_30, scv_31, scv_32, scv_33, scv_34, scv_35, scv_36;...",shape=box];
	ForLoop22613193 [label="ForLoop22613193  for (kkk=0; kkk<=ny-1; kkk=kkk+512) {...",shape=box];
	ForLoop22613193 -> 22627966;
	ForLoop22613193 -> _JOIN_22613193;
	_JOIN_22611956 [label="_JOIN_22611956None...",shape=box];
	_JOIN_22611956 -> ForLoop22613193;
	_JOIN_22613942 [label="_JOIN_22613942None...",shape=box];
	_JOIN_22613942 -> 22624174;
	_JOIN_22611954 [label="_JOIN_22611954None...",shape=box];
	_JOIN_22611954 -> _JOIN_22611956;
	_JOIN_22613193 [label="_JOIN_22613193None...",shape=box];
	_JOIN_22613193 -> 22621319;
	22617366 [label="22617366  double scv_17, scv_18;...",shape=box];
	_JOIN_22613195 [label="_JOIN_22613195None...",shape=box];
	_JOIN_22613195 -> ForLoop22613944;
	22621319 [label="22621319  tmp[(i+2)]=scv_26;...",shape=box];
	ForLoop22613542 [label=expected=9369846271501.798828
actual=9369846271501.798828
"ForLoop22613542  for (jj=0; jj<=ny-1; jj=jj+512) {...",shape=box];
	ForLoop22613542 -> 22613292;
	ForLoop22613542 -> _JOIN_22613542;
	22613034 [label="22613034  int k;...",shape=box];
	ForLoop22612874 [label="ForLoop22612874  for (k=cbv_4; k<=cbv_5; k=k+1) {...",shape=box];
	ForLoop22612874 -> 22617473;
	ForLoop22612874 -> _JOIN_22612874;
	ForLoop22581908 [label="ForLoop22581908  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop22581908 -> 22581907;
	ForLoop22581908 -> _JOIN_22581908;
	ForLoop22612958 [label="ForLoop22612958  for (k=kt; k<=cbv_6; k=k+2) {...",shape=box];
	ForLoop22612958 -> 22617595;
	ForLoop22612958 -> _JOIN_22612958;
	ForLoop22613116 [label="ForLoop22613116  for (k=kt; k<=cbv_9; k=k+2) {...",shape=box];
	ForLoop22613116 -> 22617833;
	ForLoop22613116 -> _JOIN_22613116;
	22611090 [label="22611090  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	ForLoop22613032 [label="ForLoop22613032  for (k=cbv_7; k<=cbv_8; k=k+1) {...",shape=box];
	ForLoop22613032 -> 22617711;
	ForLoop22613032 -> _JOIN_22613032;
	_JOIN_22613800 [label="_JOIN_22613800None...",shape=box];
	_JOIN_22613800 -> 22613801;
	_JOIN_22612958 [label="_JOIN_22612958None...",shape=box];
	_JOIN_22612958 -> 22628370;
	ForLoop22611956 [label="ForLoop22611956  for (jj=0; jj<=ny-1; jj=jj+512) {...",shape=box];
	ForLoop22611956 -> 22611090;
	ForLoop22611956 -> _JOIN_22611956;
	_JOIN_22613190 [label="_JOIN_22613190None...",shape=box];
	_JOIN_22613190 -> _JOIN_22613193;
	22615077 [label="22615077  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	22622828 [label="22622828  double scv_39;...",shape=box];
	22624162 [label="22624162  double scv_40;...",shape=box];
	ForLoop22613939 [label="ForLoop22613939  for (k=cbv_15; k<=cbv_16; k=k+1) {...",shape=box];
	ForLoop22613939 -> 22622828;
	ForLoop22613939 -> _JOIN_22613939;
	22629158 [label="22629158  register int cbv_13;...",shape=box];
	22611002 [label="22611002  int i;...",shape=box];
	22611002 -> ForLoop22613195;
	22628593 [label="22628593  register int cbv_10, cbv_11;...",shape=box];
	22617473 [label="22617473  double scv_19;...",shape=box];
	_JOIN_22581839 [label="_JOIN_22581839None...",shape=box];
	_JOIN_22581839 -> 22582183;
	22612876 [label="22612876  int k;...",shape=box];
	22581907 [label="22581907  y[i]=0.0;...",shape=box];
	22581907 -> _JOIN_22581908;
	22617711 [label="22617711  double scv_22;...",shape=box];
	22613292 [label="22613292  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	22617084 [label="22617084  double scv_9, scv_10, scv_11, scv_12, scv_13, scv_14, scv_15, scv_16;...",shape=box];
	22581612 [label="22581612  y[i]=0.0;...",shape=box];
	ForLoop22611954 [label="ForLoop22611954  for (jt=jj; jt<=cbv_1; jt=jt+8) {...",shape=box];
	ForLoop22611954 -> 22615077;
	ForLoop22611954 -> _JOIN_22611954;
	22628147 [label="22628147  register int cbv_4, cbv_5;...",shape=box];
	22613801 [label="22613801  int k;...",shape=box];
	_JOIN_22612806 [label="_JOIN_22612806None...",shape=box];
	_JOIN_22612806 -> 22628147;
	22621301 [label="22621301  double scv_26, scv_27, scv_28;...",shape=box];
	ForLoop22613540 [label="ForLoop22613540  for (jt=jj; jt<=cbv_12; jt=jt+8) {...",shape=box];
	ForLoop22613540 -> 22613335;
	ForLoop22613540 -> _JOIN_22613540;
	22617833 [label="22617833  double scv_23, scv_24;...",shape=box];
	_JOIN_22613871 [label="_JOIN_22613871None...",shape=box];
	_JOIN_22613871 -> 22629339;
	_JOIN_22613944 [label="_JOIN_22613944None...",shape=box];
	_JOIN_22613944 -> _JOIN_22613946;
	_JOIN_22613946 [label="_JOIN_22613946None...",shape=box];
	22613335 [label="22613335  scv_40=scv_40+A[i*ny+jt]*x_copy[(jt-jj)];...",shape=box];

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest94.exe __orio_perftest94.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest94.exe  
{'[2, 6, 0, 0, 0, 4, 1, 0, 25, 2, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.0997319}
{'[2, 6, 0, 0, 0, 4, 1, 0, 25, 2, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.0994329}
{'[2, 6, 0, 0, 0, 4, 1, 0, 25, 2, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.099858}
{'[2, 6, 0, 0, 0, 4, 1, 0, 25, 2, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.0995162}
{'[2, 6, 0, 0, 0, 4, 1, 0, 25, 2, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.0994549}
{'[2, 6, 0, 0, 0, 4, 1, 0, 25, 2, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.099571}
{'[2, 6, 0, 0, 0, 4, 1, 0, 25, 2, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.0995181}
{'[2, 6, 0, 0, 0, 4, 1, 0, 25, 2, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.0996249}
{'[2, 6, 0, 0, 0, 4, 1, 0, 25, 2, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.0995111}
{'[2, 6, 0, 0, 0, 4, 1, 0, 25, 2, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.0994809}
{'[2, 6, 0, 0, 0, 4, 1, 0, 25, 2, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.0994711}
{'[2, 6, 0, 0, 0, 4, 1, 0, 25, 2, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.0994921}
{'[2, 6, 0, 0, 0, 4, 1, 0, 25, 2, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.0995281}
{'[2, 6, 0, 0, 0, 4, 1, 0, 25, 2, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.0994258}
{'[2, 6, 0, 0, 0, 4, 1, 0, 25, 2, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.0995052}
{'[2, 6, 0, 0, 0, 4, 1, 0, 25, 2, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.0994499}
{'[2, 6, 0, 0, 0, 4, 1, 0, 25, 2, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.0995018}
{'[2, 6, 0, 0, 0, 4, 1, 0, 25, 2, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.100964}
{'[2, 6, 0, 0, 0, 4, 1, 0, 25, 2, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.0995891}
{'[2, 6, 0, 0, 0, 4, 1, 0, 25, 2, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.0995059}
{'[2, 6, 0, 0, 0, 4, 1, 0, 25, 2, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.099401}
{'[2, 6, 0, 0, 0, 4, 1, 0, 25, 2, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.0994358}
{'[2, 6, 0, 0, 0, 4, 1, 0, 25, 2, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.0994439}
{'[2, 6, 0, 0, 0, 4, 1, 0, 25, 2, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.0994751}
{'[2, 6, 0, 0, 0, 4, 1, 0, 25, 2, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.099458}
{'[2, 6, 0, 0, 0, 4, 1, 0, 25, 2, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.0995119}
{'[2, 6, 0, 0, 0, 4, 1, 0, 25, 2, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.0995011}
{'[2, 6, 0, 0, 0, 4, 1, 0, 25, 2, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.099577}
{'[2, 6, 0, 0, 0, 4, 1, 0, 25, 2, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.0994461}
{'[2, 6, 0, 0, 0, 4, 1, 0, 25, 2, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.0996771}

out:
 ["{'[2, 6, 0, 0, 0, 4, 1, 0, 25, 2, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.0997319}", "{'[2, 6, 0, 0, 0, 4, 1, 0, 25, 2, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.0994329}", "{'[2, 6, 0, 0, 0, 4, 1, 0, 25, 2, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.099858}", "{'[2, 6, 0, 0, 0, 4, 1, 0, 25, 2, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.0995162}", "{'[2, 6, 0, 0, 0, 4, 1, 0, 25, 2, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.0994549}", "{'[2, 6, 0, 0, 0, 4, 1, 0, 25, 2, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.099571}", "{'[2, 6, 0, 0, 0, 4, 1, 0, 25, 2, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.0995181}", "{'[2, 6, 0, 0, 0, 4, 1, 0, 25, 2, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.0996249}", "{'[2, 6, 0, 0, 0, 4, 1, 0, 25, 2, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.0995111}", "{'[2, 6, 0, 0, 0, 4, 1, 0, 25, 2, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.0994809}", "{'[2, 6, 0, 0, 0, 4, 1, 0, 25, 2, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.0994711}", "{'[2, 6, 0, 0, 0, 4, 1, 0, 25, 2, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.0994921}", "{'[2, 6, 0, 0, 0, 4, 1, 0, 25, 2, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.0995281}", "{'[2, 6, 0, 0, 0, 4, 1, 0, 25, 2, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.0994258}", "{'[2, 6, 0, 0, 0, 4, 1, 0, 25, 2, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.0995052}", "{'[2, 6, 0, 0, 0, 4, 1, 0, 25, 2, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.0994499}", "{'[2, 6, 0, 0, 0, 4, 1, 0, 25, 2, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.0995018}", "{'[2, 6, 0, 0, 0, 4, 1, 0, 25, 2, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.100964}", "{'[2, 6, 0, 0, 0, 4, 1, 0, 25, 2, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.0995891}", "{'[2, 6, 0, 0, 0, 4, 1, 0, 25, 2, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.0995059}", "{'[2, 6, 0, 0, 0, 4, 1, 0, 25, 2, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.099401}", "{'[2, 6, 0, 0, 0, 4, 1, 0, 25, 2, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.0994358}", "{'[2, 6, 0, 0, 0, 4, 1, 0, 25, 2, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.0994439}", "{'[2, 6, 0, 0, 0, 4, 1, 0, 25, 2, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.0994751}", "{'[2, 6, 0, 0, 0, 4, 1, 0, 25, 2, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.099458}", "{'[2, 6, 0, 0, 0, 4, 1, 0, 25, 2, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.0995119}", "{'[2, 6, 0, 0, 0, 4, 1, 0, 25, 2, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.0995011}", "{'[2, 6, 0, 0, 0, 4, 1, 0, 25, 2, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.099577}", "{'[2, 6, 0, 0, 0, 4, 1, 0, 25, 2, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.0994461}", "{'[2, 6, 0, 0, 0, 4, 1, 0, 25, 2, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.0996771}"]
returning from 'run': {'[2, 6, 0, 0, 0, 4, 1, 0, 25, 2, 0, 1, 0, 1, 1, 1, 1, 1]': ([0.0997319, 0.0994329, 0.099858, 0.0995162, 0.0994549, 0.099571, 0.0995181, 0.0996249, 0.0995111, 0.0994809, 0.0994711, 0.0994921, 0.0995281, 0.0994258, 0.0995052, 0.0994499, 0.0995018, 0.100964, 0.0995891, 0.0995059, 0.099401, 0.0994358, 0.0994439, 0.0994751, 0.099458, 0.0995119, 0.0995011, 0.099577, 0.0994461, 0.0996771], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.0997319, 0.0994329, 0.099858, 0.0995162, 0.0994549, 0.099571, 0.0995181, 0.0996249, 0.0995111, 0.0994809, 0.0994711, 0.0994921, 0.0995281, 0.0994258, 0.0995052, 0.0994499, 0.0995018, 0.100964, 0.0995891, 0.0995059, 0.099401, 0.0994358, 0.0994439, 0.0994751, 0.099458, 0.0995119, 0.0995011, 0.099577, 0.0994461, 0.0996771], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[2, 6, 0, 0, 0, 4, 1, 0, 25, 2, 0, 1, 0, 1, 1, 1, 1, 1]': ([0.0997319, 0.0994329, 0.099858, 0.0995162, 0.0994549, 0.099571, 0.0995181, 0.0996249, 0.0995111, 0.0994809, 0.0994711, 0.0994921, 0.0995281, 0.0994258, 0.0995052, 0.0994499, 0.0995018, 0.100964, 0.0995891, 0.0995059, 0.099401, 0.0994358, 0.0994439, 0.0994751, 0.099458, 0.0995119, 0.0995011, 0.099577, 0.0994461, 0.0996771], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [0, 3, 4, 1, 0, 4, 1, 2, 13, 0, 2, 0, 0, 0]
Fixed Factors: {'ACOPY_y': 0, 'U1_I': 25, 'U_J': 0, 'SCR': 1}
Testing candidate 25: [0, 3, 4, 1, 0, 4, 1, 0, 25, 2, 0, 13, 0, 2, 0, 1, 0, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	5
        Additions: 		948
        Multiplications: 	376
        Divisions: 		0
        Logical: 		0
        Reads: 			1937
        Writes: 		365
        Comparisons:		21
        Gotos: 			0
        
digraph CFG {
	ForLoop22687568 [label="ForLoop22687568  for (jt=jj; jt<=min(ny-1,jj+63)-31; jt=jt+32) {...",shape=box];
	ForLoop22687568 -> 22695120;
	ForLoop22687568 -> _JOIN_22687568;
	22695120 [label="22695120  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	_JOIN_22687568 [label="_JOIN_22687568None...",shape=box];
	_JOIN_22687568 -> _JOIN_22687570;
	22714676 [label="22714676  double scv_66;...",shape=box];
	_JOIN_22690554 [label="_JOIN_22690554None...",shape=box];
	_JOIN_22690554 -> ForLoop22690622;
	_JOIN_22689071 [label="_JOIN_22689071None...",shape=box];
	_JOIN_22689071 -> 22707991;
	22711391 [label="22711391  double scv_51, scv_52, scv_53, scv_54, scv_55, scv_56, scv_57, scv_58;...",shape=box];
	22684328 [label="22684328  for (j=jj; j<=min(ny-1,jj+63); j=j+1) ...",shape=box];
	22684240 [label="22684240  int i;...",shape=box];
	22684240 -> ForLoop22689073;
	_JOIN_22690625 [label="_JOIN_22690625None...",shape=box];
	_JOIN_22690625 -> 22714688;
	22684225 [label="22684225  double x_copy[64];...",shape=box];
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 22629638;
	_JOIN_22690622 [label="_JOIN_22690622None...",shape=box];
	_JOIN_22690622 -> _JOIN_22690624;
	ForLoop22689069 [label="ForLoop22689069  for (kk=kkk; kk<=min(ny-1,kkk+384); kk=kk+128) {...",shape=box];
	ForLoop22689069 -> 22687602;
	ForLoop22689069 -> _JOIN_22689069;
	22707991 [label="22707991  tmp[(i+2)]=scv_48;...",shape=box];
	_JOIN_22690627 [label="_JOIN_22690627None...",shape=box];
	_JOIN_22690627 -> _JOIN_22690629;
	22700928 [label="22700928  double scv_47;...",shape=box];
	_JOIN_22690624 [label="_JOIN_22690624None...",shape=box];
	_JOIN_22690624 -> _JOIN_22690625;
	_JOIN_22690629 [label="_JOIN_22690629None...",shape=box];
	ForLoop22689067 [label="ForLoop22689067  for (k=(min(ny-1,kk+127))-(((min(ny-1,kk+127))-(kk)+1)%14)+1; k<=min(ny-1,kk+127); k=k+1) {...",shape=box];
	ForLoop22689067 -> 22700928;
	ForLoop22689067 -> _JOIN_22689067;
	ForLoop22688946 [label="ForLoop22688946  for (k=kk; k<=min(ny-1,kk+127)-13; k=k+14) {...",shape=box];
	ForLoop22688946 -> 22700439;
	ForLoop22688946 -> _JOIN_22688946;
	22711751 [label="22711751  double scv_65;...",shape=box];
	_JOIN_22689073 [label="_JOIN_22689073None...",shape=box];
	_JOIN_22689073 -> ForLoop22690627;
	22629638 [label="22629638  int i;...",shape=box];
	22629638 -> ForLoop22630297;
	22689213 [label="22689213  scv_66=scv_66+A[i*ny+jt]*x_copy[(jt-jj)];...",shape=box];
	_JOIN_22630366 [label="_JOIN_22630366None...",shape=box];
	_JOIN_22630366 -> 22684225;
	ForLoop22630297 [label="ForLoop22630297  for (i=0; i<=ny-26; i=i+26) {...",shape=box];
	ForLoop22630297 -> 22630070;
	ForLoop22630297 -> _JOIN_22630297;
	_JOIN_22690114 [label="_JOIN_22690114None...",shape=box];
	_JOIN_22690114 -> _JOIN_22690116;
	22714688 [label="22714688  tmp[i]=scv_66;...",shape=box];
	22714688 -> _JOIN_22690627;
	_JOIN_22687570 [label="_JOIN_22687570None...",shape=box];
	_JOIN_22687570 -> ForLoop22689071;
	22690148 [label="22690148  int k;...",shape=box];
	22690148 -> ForLoop22690554;
	ForLoop22687570 [label="ForLoop22687570  for (jj=0; jj<=ny-1; jj=jj+64) {...",shape=box];
	ForLoop22687570 -> 22684328;
	ForLoop22687570 -> _JOIN_22687570;
	22700439 [label="22700439  double scv_33, scv_34, scv_35, scv_36, scv_37, scv_38, scv_39, scv_40;...",shape=box];
	_JOIN_22688946 [label="_JOIN_22688946None...",shape=box];
	_JOIN_22688946 -> ForLoop22689067;
	ForLoop22630366 [label="ForLoop22630366  for (i=ny-((ny-(0))%26); i<=ny-1; i=i+1) ...",shape=box];
	ForLoop22630366 -> 22630365;
	ForLoop22630366 -> _JOIN_22630366;
	ForLoop22690624 [label="ForLoop22690624  for (kk=kkk; kk<=min(ny-1,kkk+384); kk=kk+128) {...",shape=box];
	ForLoop22690624 -> 22690148;
	ForLoop22690624 -> _JOIN_22690624;
	_JOIN_22689069 [label="_JOIN_22689069None...",shape=box];
	_JOIN_22689069 -> _JOIN_22689071;
	ForLoop22690554 [label="ForLoop22690554  for (k=kk; k<=min(ny-1,kk+127)-13; k=k+14) {...",shape=box];
	ForLoop22690554 -> 22711391;
	ForLoop22690554 -> _JOIN_22690554;
	ForLoop22690629 [label="ForLoop22690629  for (iii=0; iii<=nx-1; iii=iii+64) {...",shape=box];
	ForLoop22690629 -> 22684240;
	ForLoop22690629 -> _JOIN_22690629;
	ForLoop22690627 [label="ForLoop22690627  for (i=(min(nx-1,iii+63))-(((min(nx-1,iii+63))-(iii)+1)%3)+1; i<=min(nx-1,iii+63); i=i+1) {...",shape=box];
	ForLoop22690627 -> 22714676;
	ForLoop22690627 -> _JOIN_22690627;
	ForLoop22689071 [label="ForLoop22689071  for (kkk=0; kkk<=ny-1; kkk=kkk+512) {...",shape=box];
	ForLoop22689071 -> ForLoop22689069;
	ForLoop22689071 -> _JOIN_22689071;
	ForLoop22690625 [label="ForLoop22690625  for (kkk=0; kkk<=ny-1; kkk=kkk+512) {...",shape=box];
	ForLoop22690625 -> ForLoop22690624;
	ForLoop22690625 -> _JOIN_22690625;
	ForLoop22689073 [label="ForLoop22689073  for (i=iii; i<=min(nx-1,iii+63)-2; i=i+3) {...",shape=box];
	ForLoop22689073 -> 22707973;
	ForLoop22689073 -> _JOIN_22689073;
	_JOIN_22689067 [label="_JOIN_22689067None...",shape=box];
	_JOIN_22689067 -> _JOIN_22689069;
	ForLoop22690622 [label="ForLoop22690622  for (k=(min(ny-1,kk+127))-(((min(ny-1,kk+127))-(kk)+1)%14)+1; k<=min(ny-1,kk+127); k=k+1) {...",shape=box];
	ForLoop22690622 -> 22711751;
	ForLoop22690622 -> _JOIN_22690622;
	_JOIN_22690116 [label="_JOIN_22690116None...",shape=box];
	_JOIN_22690116 -> ForLoop22690625;
	ForLoop22690114 [label="ForLoop22690114  for (jt=jj; jt<=min(ny-1,jj+63)-31; jt=jt+32) {...",shape=box];
	ForLoop22690114 -> 22689213;
	ForLoop22690114 -> _JOIN_22690114;
	22630070 [label="22630070  y[i]=0.0;...",shape=box];
	22630365 [label="22630365  y[i]=0.0;...",shape=box];
	22630365 -> _JOIN_22630366;
	22707973 [label="22707973  double scv_48, scv_49, scv_50;...",shape=box];
	_JOIN_22630297 [label="_JOIN_22630297None...",shape=box];
	_JOIN_22630297 -> ForLoop22630366;
	22687602 [label="22687602  int k;...",shape=box];
	22689170 [label="22689170  for (j=jj; j<=min(ny-1,jj+63); j=j+1) ...",shape=box];
	22689170 -> ForLoop22690114;
	ForLoop22690116 [label="ForLoop22690expected=0.000000
actual=9369846271501.798828
116  for (jj=0; jj<=ny-1; jj=jj+64) {...",shape=box];
	ForLoop22690116 -> 22689170;
	ForLoop22690116 -> _JOIN_22690116;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest95.exe __orio_perftest95.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest95.exe  
{'[0, 3, 4, 1, 0, 4, 1, 0, 25, 2, 0, 13, 0, 2, 0, 1, 0, 0]' : 0.106062}
{'[0, 3, 4, 1, 0, 4, 1, 0, 25, 2, 0, 13, 0, 2, 0, 1, 0, 0]' : 0.105798}
{'[0, 3, 4, 1, 0, 4, 1, 0, 25, 2, 0, 13, 0, 2, 0, 1, 0, 0]' : 0.105775}
{'[0, 3, 4, 1, 0, 4, 1, 0, 25, 2, 0, 13, 0, 2, 0, 1, 0, 0]' : 0.105813}
{'[0, 3, 4, 1, 0, 4, 1, 0, 25, 2, 0, 13, 0, 2, 0, 1, 0, 0]' : 0.105823}
{'[0, 3, 4, 1, 0, 4, 1, 0, 25, 2, 0, 13, 0, 2, 0, 1, 0, 0]' : 0.105805}
{'[0, 3, 4, 1, 0, 4, 1, 0, 25, 2, 0, 13, 0, 2, 0, 1, 0, 0]' : 0.105787}
{'[0, 3, 4, 1, 0, 4, 1, 0, 25, 2, 0, 13, 0, 2, 0, 1, 0, 0]' : 0.106817}
{'[0, 3, 4, 1, 0, 4, 1, 0, 25, 2, 0, 13, 0, 2, 0, 1, 0, 0]' : 0.105766}
{'[0, 3, 4, 1, 0, 4, 1, 0, 25, 2, 0, 13, 0, 2, 0, 1, 0, 0]' : 0.105848}
{'[0, 3, 4, 1, 0, 4, 1, 0, 25, 2, 0, 13, 0, 2, 0, 1, 0, 0]' : 0.105792}
{'[0, 3, 4, 1, 0, 4, 1, 0, 25, 2, 0, 13, 0, 2, 0, 1, 0, 0]' : 0.105777}
{'[0, 3, 4, 1, 0, 4, 1, 0, 25, 2, 0, 13, 0, 2, 0, 1, 0, 0]' : 0.106011}
{'[0, 3, 4, 1, 0, 4, 1, 0, 25, 2, 0, 13, 0, 2, 0, 1, 0, 0]' : 0.105783}
{'[0, 3, 4, 1, 0, 4, 1, 0, 25, 2, 0, 13, 0, 2, 0, 1, 0, 0]' : 0.105798}
{'[0, 3, 4, 1, 0, 4, 1, 0, 25, 2, 0, 13, 0, 2, 0, 1, 0, 0]' : 0.105807}
{'[0, 3, 4, 1, 0, 4, 1, 0, 25, 2, 0, 13, 0, 2, 0, 1, 0, 0]' : 0.105888}
{'[0, 3, 4, 1, 0, 4, 1, 0, 25, 2, 0, 13, 0, 2, 0, 1, 0, 0]' : 0.105813}
{'[0, 3, 4, 1, 0, 4, 1, 0, 25, 2, 0, 13, 0, 2, 0, 1, 0, 0]' : 0.106091}
{'[0, 3, 4, 1, 0, 4, 1, 0, 25, 2, 0, 13, 0, 2, 0, 1, 0, 0]' : 0.105925}
{'[0, 3, 4, 1, 0, 4, 1, 0, 25, 2, 0, 13, 0, 2, 0, 1, 0, 0]' : 0.105782}
{'[0, 3, 4, 1, 0, 4, 1, 0, 25, 2, 0, 13, 0, 2, 0, 1, 0, 0]' : 0.105772}
{'[0, 3, 4, 1, 0, 4, 1, 0, 25, 2, 0, 13, 0, 2, 0, 1, 0, 0]' : 0.105796}
{'[0, 3, 4, 1, 0, 4, 1, 0, 25, 2, 0, 13, 0, 2, 0, 1, 0, 0]' : 0.10582}
{'[0, 3, 4, 1, 0, 4, 1, 0, 25, 2, 0, 13, 0, 2, 0, 1, 0, 0]' : 0.105792}
{'[0, 3, 4, 1, 0, 4, 1, 0, 25, 2, 0, 13, 0, 2, 0, 1, 0, 0]' : 0.105802}
{'[0, 3, 4, 1, 0, 4, 1, 0, 25, 2, 0, 13, 0, 2, 0, 1, 0, 0]' : 0.106811}
{'[0, 3, 4, 1, 0, 4, 1, 0, 25, 2, 0, 13, 0, 2, 0, 1, 0, 0]' : 0.10604}
{'[0, 3, 4, 1, 0, 4, 1, 0, 25, 2, 0, 13, 0, 2, 0, 1, 0, 0]' : 0.105823}
{'[0, 3, 4, 1, 0, 4, 1, 0, 25, 2, 0, 13, 0, 2, 0, 1, 0, 0]' : 0.105783}

out:
 ["{'[0, 3, 4, 1, 0, 4, 1, 0, 25, 2, 0, 13, 0, 2, 0, 1, 0, 0]' : 0.106062}", "{'[0, 3, 4, 1, 0, 4, 1, 0, 25, 2, 0, 13, 0, 2, 0, 1, 0, 0]' : 0.105798}", "{'[0, 3, 4, 1, 0, 4, 1, 0, 25, 2, 0, 13, 0, 2, 0, 1, 0, 0]' : 0.105775}", "{'[0, 3, 4, 1, 0, 4, 1, 0, 25, 2, 0, 13, 0, 2, 0, 1, 0, 0]' : 0.105813}", "{'[0, 3, 4, 1, 0, 4, 1, 0, 25, 2, 0, 13, 0, 2, 0, 1, 0, 0]' : 0.105823}", "{'[0, 3, 4, 1, 0, 4, 1, 0, 25, 2, 0, 13, 0, 2, 0, 1, 0, 0]' : 0.105805}", "{'[0, 3, 4, 1, 0, 4, 1, 0, 25, 2, 0, 13, 0, 2, 0, 1, 0, 0]' : 0.105787}", "{'[0, 3, 4, 1, 0, 4, 1, 0, 25, 2, 0, 13, 0, 2, 0, 1, 0, 0]' : 0.106817}", "{'[0, 3, 4, 1, 0, 4, 1, 0, 25, 2, 0, 13, 0, 2, 0, 1, 0, 0]' : 0.105766}", "{'[0, 3, 4, 1, 0, 4, 1, 0, 25, 2, 0, 13, 0, 2, 0, 1, 0, 0]' : 0.105848}", "{'[0, 3, 4, 1, 0, 4, 1, 0, 25, 2, 0, 13, 0, 2, 0, 1, 0, 0]' : 0.105792}", "{'[0, 3, 4, 1, 0, 4, 1, 0, 25, 2, 0, 13, 0, 2, 0, 1, 0, 0]' : 0.105777}", "{'[0, 3, 4, 1, 0, 4, 1, 0, 25, 2, 0, 13, 0, 2, 0, 1, 0, 0]' : 0.106011}", "{'[0, 3, 4, 1, 0, 4, 1, 0, 25, 2, 0, 13, 0, 2, 0, 1, 0, 0]' : 0.105783}", "{'[0, 3, 4, 1, 0, 4, 1, 0, 25, 2, 0, 13, 0, 2, 0, 1, 0, 0]' : 0.105798}", "{'[0, 3, 4, 1, 0, 4, 1, 0, 25, 2, 0, 13, 0, 2, 0, 1, 0, 0]' : 0.105807}", "{'[0, 3, 4, 1, 0, 4, 1, 0, 25, 2, 0, 13, 0, 2, 0, 1, 0, 0]' : 0.105888}", "{'[0, 3, 4, 1, 0, 4, 1, 0, 25, 2, 0, 13, 0, 2, 0, 1, 0, 0]' : 0.105813}", "{'[0, 3, 4, 1, 0, 4, 1, 0, 25, 2, 0, 13, 0, 2, 0, 1, 0, 0]' : 0.106091}", "{'[0, 3, 4, 1, 0, 4, 1, 0, 25, 2, 0, 13, 0, 2, 0, 1, 0, 0]' : 0.105925}", "{'[0, 3, 4, 1, 0, 4, 1, 0, 25, 2, 0, 13, 0, 2, 0, 1, 0, 0]' : 0.105782}", "{'[0, 3, 4, 1, 0, 4, 1, 0, 25, 2, 0, 13, 0, 2, 0, 1, 0, 0]' : 0.10WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
5772}", "{'[0, 3, 4, 1, 0, 4, 1, 0, 25, 2, 0, 13, 0, 2, 0, 1, 0, 0]' : 0.105796}", "{'[0, 3, 4, 1, 0, 4, 1, 0, 25, 2, 0, 13, 0, 2, 0, 1, 0, 0]' : 0.10582}", "{'[0, 3, 4, 1, 0, 4, 1, 0, 25, 2, 0, 13, 0, 2, 0, 1, 0, 0]' : 0.105792}", "{'[0, 3, 4, 1, 0, 4, 1, 0, 25, 2, 0, 13, 0, 2, 0, 1, 0, 0]' : 0.105802}", "{'[0, 3, 4, 1, 0, 4, 1, 0, 25, 2, 0, 13, 0, 2, 0, 1, 0, 0]' : 0.106811}", "{'[0, 3, 4, 1, 0, 4, 1, 0, 25, 2, 0, 13, 0, 2, 0, 1, 0, 0]' : 0.10604}", "{'[0, 3, 4, 1, 0, 4, 1, 0, 25, 2, 0, 13, 0, 2, 0, 1, 0, 0]' : 0.105823}", "{'[0, 3, 4, 1, 0, 4, 1, 0, 25, 2, 0, 13, 0, 2, 0, 1, 0, 0]' : 0.105783}"]
returning from 'run': {'[0, 3, 4, 1, 0, 4, 1, 0, 25, 2, 0, 13, 0, 2, 0, 1, 0, 0]': ([0.106062, 0.105798, 0.105775, 0.105813, 0.105823, 0.105805, 0.105787, 0.106817, 0.105766, 0.105848, 0.105792, 0.105777, 0.106011, 0.105783, 0.105798, 0.105807, 0.105888, 0.105813, 0.106091, 0.105925, 0.105782, 0.105772, 0.105796, 0.10582, 0.105792, 0.105802, 0.106811, 0.10604, 0.105823, 0.105783], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.106062, 0.105798, 0.105775, 0.105813, 0.105823, 0.105805, 0.105787, 0.106817, 0.105766, 0.105848, 0.105792, 0.105777, 0.106011, 0.105783, 0.105798, 0.105807, 0.105888, 0.105813, 0.106091, 0.105925, 0.105782, 0.105772, 0.105796, 0.10582, 0.105792, 0.105802, 0.106811, 0.10604, 0.105823, 0.105783], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[0, 3, 4, 1, 0, 4, 1, 0, 25, 2, 0, 13, 0, 2, 0, 1, 0, 0]': ([0.106062, 0.105798, 0.105775, 0.105813, 0.105823, 0.105805, 0.105787, 0.106817, 0.105766, 0.105848, 0.105792, 0.105777, 0.106011, 0.105783, 0.105798, 0.105807, 0.105888, 0.105813, 0.106091, 0.105925, 0.105782, 0.105772, 0.105796, 0.10582, 0.105792, 0.105802, 0.106811, 0.10604, 0.105823, 0.105783], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [5, 6, 0, 3, 4, 3, 1, 23, 27, 0, 0, 2, 0, 0]
Fixed Factors: {'ACOPY_y': 0, 'U1_I': 25, 'U_J': 0, 'SCR': 1}
Testing candidate 26: [5, 6, 0, 3, 4, 3, 1, 0, 25, 23, 0, 27, 0, 0, 2, 1, 0, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	88
        Max loop nest depth: 	4
        Additions: 		8070
        Multiplications: 	3100
        Divisions: 		0
        Logical: 		0
        Reads: 			16652
        Writes: 		3432
        Comparisons:		88
        Gotos: 			0
        
digraph CFG {
	ForLoop22995411 [label="ForLoop22995411  for (k=(min(ny-1,kkk+255))-(((min(ny-1,kkk+255))-(kt)+1)%28)+1; k<=min(ny-1,kkk+255); k=k+1) {...",shape=box];
	ForLoop22995411 -> 23087103;
	ForLoop22995411 -> _JOIN_22995411;
	23084299 [label="23084299  double scv_643, scv_644, scv_645, scv_646, scv_647, scv_648, scv_649, scv_650;...",shape=box];
	22944363 [label="22944363  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	22974573 [label="22974573  int k;...",shape=box];
	22974573 -> ForLoop22975539;
	22980825 [label="22980825  int k;...",shape=box];
	22980825 -> ForLoop22981791;
	_JOIN_22720717 [label="_JOIN_22720717None...",shape=box];
	_JOIN_22720717 -> 22944071;
	ForLoop22997553 [label="ForLoop22997553  for (kt=kkk; kt<=min(ny-1,kkk+255)-31; kt=kt+32) {...",shape=box];
	ForLoop22997553 -> 23193164;
	ForLoop22997553 -> _JOIN_22997553;
	23052214 [label="23052214  double scv_208, scv_209, scv_210, scv_211, scv_212, scv_213, scv_214, scv_215;...",shape=box];
	23063574 [label="23063574  double scv_381;...",shape=box];
	23069991 [label="23069991  double scv_468;...",shape=box];
	_JOIN_22945857 [label="_JOIN_22945857None...",shape=box];
	_JOIN_22945857 -> ForLoop22996456;
	ForLoop22972419 [label="ForLoop22972419  for (k=kt; k<=min(ny-1,kkk+255)-27; k=k+28) {...",shape=box];
	ForLoop22972419 -> 23039389;
	ForLoop22972419 -> _JOIN_22972419;
	_JOIN_22945855 [label="_JOIN_22945855None...",shape=box];
	_JOIN_22945855 -> _JOIN_22945857;
	23065713 [label="23065713  double scv_410;...",shape=box];
	23055018 [label="23055018  double scv_265;...",shape=box];
	_JOIN_22993253 [label="_JOIN_22993253None...",shape=box];
	_JOIN_22993253 -> ForLoop22993327;
	23042184 [label="23042184  double scv_91;...",shape=box];
	22720716 [label="22720716  y[i]=0.0;...",shape=box];
	22720716 -> _JOIN_22720717;
	_JOIN_22986033 [label="_JOIN_22986033None...",shape=box];
	_JOIN_22986033 -> 22986035;
	23045797 [label="23045797  double scv_121, scv_122, scv_123, scv_124, scv_125, scv_126, scv_127, scv_128;...",shape=box];
	ForLoop22998420 [label="ForLoop22998420  for (k=(min(ny-1,kkk+255))-(((min(ny-1,kkk+255))-(kt)+1)%28)+1; k<=min(ny-1,kkk+255); k=k+1) {...",shape=box];
	ForLoop22998420 -> 23195695;
	ForLoop22998420 -> _JOIN_22998420;
	22990203 [label="22990203  int k;...",shape=box];
	22990203 -> ForLoop22991169;
	_JOIN_22971620 [label="_JOIN_22971620None...",shape=box];
	_JOIN_22971620 -> 22971621;
	23062909 [label="23062909  double scv_353, scv_354, scv_355, scv_356, scv_357, scv_358, scv_359, scv_360;...",shape=box];
	22996555 [label="22996555  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	22996555 -> ForLoop22996597;
	_JOIN_22996458 [label="_JOIN_22996458None...",shape=box];
	_JOIN_22996458 -> ForLoop22998425;
	23077882 [label="23077882  double scv_556, scv_557, scv_558, scv_559, scv_560, scv_561, scv_562, scv_563;...",shape=box];
	_JOIN_22984917 [label="_JOIN_22984917None...",shape=box];
	_JOIN_22984917 -> ForLoop22984991;
	22993329 [label="22993329  int k;...",shape=box];
	22993329 -> ForLoop22994295;
	23043658 [label="23043658  double scv_92, scv_93, scv_94, scv_95, scv_96, scv_97, scv_98, scv_99;...",shape=box];
	ForLoop22977623 [label="ForLoop22977623  for (k=kt; k<=min(ny-1,kkk+255)-27; k=k+28) {...",shape=box];
	ForLoop22977623 -> 23050075;
	ForLoop22977623 -> _JOIN_22977623;
	ForLoop22720648 [label="ForLoop22720648  for (i=0; i<=ny-26; i=i+26) {...",shape=box];
	ForLoop22720648 -> 22720421;
	ForLoop22720648 -> _JOIN_22720648;
	_JOIN_22980823 [label="_JOIN_22980823None...",shape=box];
	_JOIN_22980823 -> 22980825;
	23084964 [label="23084964  double scv_671;...",shape=box];
	_JOIN_22972487 [label="_JOIN_22972487None...",shape=box];
	_JOIN_22972487 -> 22972489;
	22995413 [label="22995413  int k;...",shape=box];
	22995413 -> ForLoop22996379;
	_JOIN_22998352 [label="_JOIN_22998352None...",shape=box];
	_JOIN_22998352 -> ForLoop22998420;
	_JOIN_22985959 [label="_JOIN_22985959None...",shape=box];
	_JOIN_22985959 -> ForLoop22986033;
	_JOIN_22720648 [label="_JOIN_22720648None...",shape=box];
	_JOIN_22720648 -> ForLoop22720717;
	_JOIN_22975613 [label="_JOIN_22975613None...",shape=box];
	_JOIN_22975613 -> 22975615;
	_JOIN_22983875 [label="_JOIN_22983875None...",shape=box];
	_JOIN_22983875 -> ForLoop22983949;
	23195039 [label="23195039  double scv_786, scv_787, scv_788, scv_789, scv_790, scv_791, scv_792, scv_793;...",shape=box];
	_JOIN_22978665 [label="_JOIN_22978665None...",shape=box];
	_JOIN_22978665 -> ForLoop22978739;
	ForLoop22976581 [label="ForLoop22976581  for (k=kt; k<=min(ny-1,kkk+255)-27; k=k+28) {...",shape=box];
	ForLoop22976581 -> 23047936;
	ForLoop22976581 -> _JOIN_22976581;
	_JOIN_22980749 [label="_JOIN_22980749None...",shape=box];
	_JOIN_22980749 -> ForLoop22980823;
	ForLoop22994369 [label="ForLoop22994369  for (k=(min(ny-1,kkk+255))-(((min(ny-1,kkk+255))-(kt)+1)%28)+1; k<=min(ny-1,kkk+255); k=k+1) {...",shape=box];
	ForLoop22994369 -> 23084964;
	ForLoop22994369 -> _JOIN_22994369;
	ForLoop22978739 [label="ForLoop22978739  for (k=(min(ny-1,kkk+255))-(((min(ny-1,kkk+255))-(kt)+1)%28)+1; k<=min(ny-1,kkk+255); k=k+1) {...",shape=box];
	ForLoop22978739 -> 23052879;
	ForLoop22978739 -> _JOIN_22978739;
	ForLoop22974571 [label="ForLoop22974571  for (k=(min(ny-1,kkk+255))-(((min(ny-1,kkk+255))-(kt)+1)%28)+1; k<=min(ny-1,kkk+255); k=k+1) {...",shape=box];
	ForLoop22974571 -> 23044323;
	ForLoop22974571 -> _JOIN_22974571;
	23052879 [label="23052879  double scv_236;...",shape=box];
	ForLoop22977697 [label="ForLoop22977697  for (k=(min(ny-1,kkk+255))-(((min(ny-1,kkk+255))-(kt)+1)%28)+1; k<=min(ny-1,kkk+255); k=k+1) {...",shape=box];
	ForLoop22977697 -> 23050740;
	ForLoop22977697 -> _JOIN_22977697;
	ForLoop22720717 [label="ForLoop22720717  for (i=ny-((ny-(0))%26); i<=ny-1; i=i+1) ...",shape=box];
	ForLoop22720717 -> 22720716;
	ForLoop22720717 -> _JOIN_22720717;
	ForLoop22990127 [label="ForLoop22990127  for (k=kt; k<=min(ny-1,kkk+255)-27; k=k+28) {...",shape=box];
	ForLoop22990127 -> 23075743;
	ForLoop22990127 -> _JOIN_22990127;
	_JOIN_22991169 [label="_JOIN_22991169None...",shape=box];
	_JOIN_22991169 -> ForLoop22991243;
	ForLoop22989159 [label="ForLoop22989159  for (k=(min(ny-1,kkk+255))-(((min(ny-1,kkk+255))-(kt)+1)%28)+1; k<=min(ny-1,kkk+255); k=k+1) {...",shape=box];
	ForLoop22989159 -> 23074269;
	ForLoop22989159 -> _JOIN_22989159;
	22971621 [label="22971621  int k;...",shape=box];
	22971621 -> ForLoop22972419;
	ForLoop22993253 [label="ForLoop22993253  for (k=kt; k<=min(ny-1,kkk+255)-27; k=k+28) {...",shape=box];
	ForLoop22993253 -> 23082160;
	ForLoop22993253 -> _JOIN_22993253;
	ForLoop22996597 [label="ForLoop22996597  for (j=jj; j<=min(ny-1,jj+511); j=j+1) {...",shape=box];
	ForLoop22996597 -> 22996596;
	ForLoop22996597 -> _JOIN_22996597;
	ForLoop22983875 [label="ForLoop22983875  for (k=kt; k<=min(ny-1,kkk+255)-27; k=k+28) {...",shape=box];
	ForLoop22983875 -> 23062909;
	ForLoop22983875 -> _JOIN_22983875;
	_JOIN_22972419 [label="_JOIN_22972419None...",shape=box];
	_JOIN_22972419 -> ForLoop22972487;
	22997554 [label="22997554  int k;...",shape=box];
	22997554 -> ForLoop22998352;
	ForLoop22987001 [label="ForLoop22987001  for (k=kt; k<=min(ny-1,kkk+255)-27; k=k+28) {...",shape=box];
	ForLoop22987001 -> 23069326;
	ForLoop22987001 -> _JOIN_22987001;
	22999584 [label="22999584  double scv_1;...",shape=box];
	ForLoop22980823 [label="ForLoop22980823  for (k=(min(ny-1,kkk+255))-(((min(ny-1,kkk+255))-(kt)+1)%28)+1; k<=min(ny-1,kkk+255); k=k+1) {...",shape=box];
	ForLoop22980823 -> 23057157;
	ForLoop22980823 -> _JOIN_22980823;
	ForLoop22980749 [label="ForLoop22980749  for (k=kt; k<=min(ny-1,kkk+255)-27; k=k+28) {...",shape=box];
	ForLoop22980749 -> 23056492;
	ForLoop22980749 -> _JOIN_22980749;
	23072130 [label="23072130  double scv_497;...",shape=box];
	23061435 [label="23061435  double scv_352;...",shape=box];
	ForLoop22996458 [label="ForLoop22996458  for (i=ii; i<=min(nx-1,ii+255)-23; i=i+24) {...",shape=box];
	ForLoop22996458 -> 23189604;
	ForLoop22996458 -> _JOIN_22996458;
	ForLoop22996456 [label="ForLoop22996456  for (kkk=0; kkk<=ny-1; kkk=kkk+256) {...",shape=box];
	ForLoop22996456 -> ForLoop22971620;
	ForLoop22996456 -> _JOIN_22996456;
	23087103 [label="23087103  double scv_700;...",shape=box];
	ForLoop22996453 [label="ForLoop22996453  for (k=(min(ny-1,kkk+255))-(((min(ny-1,kkk+255))-(kt)+1)%28)+1; k<=min(ny-1,kkk+255); k=k+1) {...",shape=box];
	ForLoop22996453 -> 23089242;
	ForLoop22996453 -> _JOIN_22996453;
	ForLoop22998425 [label="ForLoop22998425  for (i=(min(nx-1,ii+255))-(((min(nx-1,ii+255))-(ii)+1)%24)+1; i<=min(nx-1,ii+255); i=i+1) {...",shape=box];
	ForLoop22998425 -> 23200484;
	ForLoop22998425 -> _JOIN_22998425;
	ForLoop22998427 [label="ForLoop22998427  for (ii=0; ii<=nx-1; ii=ii+256) {...",shape=box];
	ForLoop22998427 -> 22944086;
	ForLoop22998427 -> _JOIN_22998427;
	_JOIN_22984991 [label="_JOIN_22984991None...",shape=box];
	_JOIN_22984991 -> 22984993;
	22944071 [label="22944071  double x_copy[512];...",shape=box];
	23078547 [label="23078547  double scv_584;...",shape=box];
	_JOIN_22996597 [label="_JOIN_22996597None...",shape=box];
	_JOIN_22996597 -> _JOIN_22996599;
	22987077 [label="22987077  int k;...",shape=box];
	22987077 -> ForLoop22988043;
	ForLoop22991169 [label="ForLoop22991169  for (k=kt; k<=min(ny-1,kkk+255)-27; k=k+28) {...",shape=box];
	ForLoop22991169 -> 23077882;
	ForLoop22991169 -> _JOIN_22991169;
	_JOIN_22988043 [label="_JOIN_22988043None...",shape=box];
	_JOIN_22988043 -> ForLoop22988117;
	ForLoop22985959 [label="ForLoop22985959  for (k=kt; k<=min(ny-1,kkk+255)-27; k=k+28) {...",shape=box];
	ForLoop22985959 -> 23067187;
	ForLoop22985959 -> _JOIN_22985959;
	22988119 [label="22988119  int k;...",shape=box];
	22988119 -> ForLoop22989085;
	_JOIN_22977623 [label="_JOIN_22977623None...",shape=box];
	_JOIN_22977623 -> ForLoop22977697;
	ForLoop22987075 [label="ForLoop22987075  for (k=(min(ny-1,kkk+255))-(((min(ny-1,kkk+255))-(kt)+1)%28)+1; k<=min(ny-1,kkk+255); k=k+1) {...",shape=box];
	ForLoop22987075 -> 23069991;
	ForLoop22987075 -> _JOIN_22987075;
	23047936 [label="23047936  double scv_150, scv_151, scv_152, scv_153, scv_154, scv_155, scv_156, scv_157;...",shape=box];
	23050740 [label="23050740  double scv_207;...",shape=box];
	22720421 [label="22720421  y[i]=0.0;...",shape=box];
	22992287 [label="22992287  int k;...",shape=box];
	22992287 -> ForLoop22993253;
	23069326 [label="23069326  double scv_440, scv_441, scv_442, scv_443, scv_444, scv_445, scv_446, scv_447;...",shape=box];
	23075743 [label="23075743  double scv_527, scv_528, scv_529, scv_530, scv_531, scv_532, scv_533, scv_534;...",shape=box];
	ForLoop22973455 [label="ForLoop22973455  for (k=kt; k<=min(ny-1,kkk+255)-27; k=k+28) {...",shape=box];
	ForLoop22973455 -> 23041519;
	ForLoop22973455 -> _JOIN_22973455;
	23048601 [label="23048601  double scv_178;...",shape=box];
	23065048 [label="23065048  double scv_382, scv_383, scv_384, scv_385, scv_386, scv_387, scv_388, scv_389;...",shape=box];
	23041519 [label="23041519  double scv_63, scv_64, scv_65, scv_66, scv_67, scv_68, scv_69, scv_70;...",shape=box];
	23080021 [label="23080021  double scv_585, scv_586, scv_587, scv_588, scv_589, scv_590, scv_591, scv_592;...",shape=box];
	23074269 [label="23074269  double scv_526;...",shape=box];
	_JOIN_22994369 [label="_JOIN_22994369None...",shape=box];
	_JOIN_22994369 -> 22994371;
	23054353 [label="23054353  double scv_237, scv_238, scv_239, scv_240, scv_241, scv_242, scv_243, scv_244;...",shape=box];
	23076408 [label="23076408  double scv_555;...",shape=box];
	_JOIN_22979781 [label="_JOIN_22979781None...",shape=box];
	_JOIN_22979781 -> 22979783;
	ForLoop22973529 [label="ForLoop22973529  for (k=(min(ny-1,kkk+255))-(((min(ny-1,kkk+255))-(kt)+1)%28)+1; k<=min(ny-1,kkk+255); k=k+1) {...",shape=box];
	ForLoop22973529 -> 23042184;
	ForLoop22973529 -> _JOIN_22973529;
	_JOIN_22975539 [label="_JOIN_22975539None...",shape=box];
	_JOIN_22975539 -> ForLoop22975613;
	_JOIN_22979707 [label="_JOIN_22979707None...",shape=box];
	_JOIN_22979707 -> ForLoop22979781;
	23082160 [label="23082160  double scv_614, scv_615, scv_616, scv_617, scv_618, scv_619, scv_620, scv_621;...",shape=box];
	ForLoop22974497 [label="ForLoop22974497  for (k=kt; k<=min(ny-1,kkk+255)-27; k=k+28) {...",shape=box];
	ForLoop22974497 -> 23043658;
	ForLoop22974497 -> _JOIN_22974497;
	23195695 [label="23195695  double scv_814;...",shape=box];
	23067187 [label="23067187  double scv_411, scv_412, scv_413, scv_414, scv_415, scv_416, scv_417, scv_418;...",shape=box];
	22978741 [label="22978741  int k;...",shape=box];
	22978741 -> ForLoop22979707;
	22944086 [label="22944086  int i;...",shape=box];
	22944086 -> ForLoop22996458;
	22972489 [label="22972489  int k;...",shape=box];
	22972489 -> ForLoop22973455;
	ForLoop22988043 [label="ForLoop22988043  for (k=kt; k<=min(ny-1,kkk+255)-27; k=k+28) {...",shape=box];
	ForLoop22988043 -> 23071465;
	ForLoop22988043 -> _JOIN_22988043;
	ForLoop22945857 [label="ForLoop22945857  for (jj=0; jj<=ny-1; jj=jj+512) {...",shape=box];
	ForLoop22945857 -> 22944363;
	ForLoop22945857 -> _JOIN_22945857;
	ForLoop22945855 [label="ForLoop22945855  for (j=jj; j<=min(ny-1,jj+511); j=j+1) {...",shape=box];
	ForLoop22945855 -> 22999584;
	ForLoop22945855 -> _JOIN_22945855;
	ForLoop22982907 [label="ForLoop22982907  for (k=(min(ny-1,kkk+255))-(((min(ny-1,kkk+255))-(kt)+1)%28)+1; k<=min(ny-1,kkk+255); k=k+1) {...",shape=box];
	ForLoop22982907 -> 23061435;
	ForLoop22982907 -> _JOIN_22982907;
	22991245 [label="22991245  int k;...",shape=box];
	22991245 -> ForLoop22992211;
	23056492 [label="23056492  double scv_266, scv_267, scv_268, scv_269, scv_270, scv_271, scv_272, scv_273;...",shape=box];
	ForLoop22998423 [label="ForLoop22998423  for (kkk=0; kkk<=ny-1; kkk=kkk+256) {...",shape=box];
	ForLoop22998423 -> ForLoop22997553;
	ForLoop22998423 -> _JOIN_22998423;
	_JOIN_22976581 [label="_JOIN_22976581None...",shape=box];
	_JOIN_22976581 -> ForLoop22976655;
	_JOIN_22977697 [label="_JOIN_22977697None...",shape=box];
	_JOIN_22977697 -> 22977699;
	ForLoop22995337 [label="ForLoop22995337  for (k=kt; k<=min(ny-1,kkk+255)-27; k=k+28) {...",shape=box];
	ForLoop22995337 -> 23086438;
	ForLoop22995337 -> _JOIN_22995337;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 22719989;
	22981867 [label="22981867  int k;...",shape=box];
	22981867 -> ForLoop22982833;
	_JOIN_22988117 [label="_JOIN_22988117None...",shape=box];
	_JOIN_22988117 -> 22988119;
	_JOIN_22983949 [label="_JOIN_22983949None...",shape=box];
	_JOIN_22983949 -> 22983951;
	ForLoop22992285 [label="ForLoop22992285  for (k=(min(ny-1,kkk+255))-(((min(ny-1,kkk+255))-(kt)+1)%28)+1; k<=min(ny-1,kkk+255); k=k+1) {...",shape=box];
	ForLoop22992285 -> 23080686;
	ForLoop22992285 -> _JOIN_22992285;
	22977699 [label="22977699  int k;...",shape=box];
	22977699 -> ForLoop22978665;
	23200496 [label="23200496  tmp[i]=scv_815;...",shape=box];
	23200496 -> _JOIN_22998425;
	ForLoop22996599 [label="ForLoop22996599  for (jj=0; jj<=ny-1; jj=jj+512) {...",shape=box];
	ForLoop22996599 -> 22996555;
	ForLoop22996599 -> _JOIN_22996599;
	23189604 [label="23189604  double scv_730, scv_731, scv_732, scv_733, scv_734, scv_735, scv_736, scv_737;...",shape=box];
	_JOIN_22995411 [label="_JOIN_22995411None...",shape=box];
	_JOIN_22995411 -> 22995413;
	22973531 [label="22973531  int k;...",shape=box];
	22973531 -> ForLoop22974497;
	ForLoop22993327 [label="ForLoop22993327  for (k=(min(ny-1,kkk+255))-(((min(ny-1,kkk+255))-(kt)+1)%28)+1; k<=min(ny-1,kkk+255); k=k+1) {...",shape=box];
	ForLoop22993327 -> 23082825;
	ForLoop22993327 -> _JOIN_22993327;
	ForLoop22975539 [label="ForLoop22975539  for (k=kt; k<=min(ny-1,kkk+255)-27; k=k+28) {...",shape=box];
	ForLoop22975539 -> 23045797;
	ForLoop22975539 -> _JOIN_22975539;
	22719989 [label="22719989  int i;...",shape=box];
	22719989 -> ForLoop22720648;
	23088577 [label="23088577  double scv_701, scv_702, scv_703, scv_704, scv_705, scv_706, scv_707, scv_708;...",shape=box];
	_JOIN_22996379 [label="_JOIN_22996379None...",shape=box];
	_JOIN_22996379 -> ForLoop22996453;
	ForLoop22978665 [label="ForLoop22978665  for (k=kt; k<=min(ny-1,kkk+255)-27; k=k+28) {...",shape=box];
	ForLoop22978665 -> 23052214;
	ForLoop22978665 -> _JOIN_22978665;
	23044323 [label="23044323  double scv_120;...",shape=box];
	_JOIN_22974497 [label="_JOIN_22974497None...",shape=box];
	_JOIN_22974497 -> ForLoop22974571;
	22983951 [label="22983951  int k;...",shape=box];
	22983951 -> ForLoop22984917;
	_JOIN_22981865 [label="_JOIN_22981865None...",shape=box];
	_JOIN_22981865 -> 22981867;
	ForLoop22979707 [label="ForLoop22979707  for (k=kt; k<=min(ny-1,kkk+255)-27; k=k+28) {...",shape=box];
	ForLoop22979707 -> 23054353;
	ForLoop22979707 -> _JOIN_22979707;
	_JOIN_22989085 [label="_JOIN_22989085None...",shape=box];
	_JOIN_22989085 -> ForLoop22989159;
	_JOIN_22989159 [label="_JOIN_22989159None...",shape=box];
	_JOIN_22989159 -> 22989161;
	ForLoop22992211 [label="ForLoop22992211  for (k=kt; k<=min(ny-1,kkk+255)-27; k=k+28) {...",shape=box];
	ForLoop22992211 -> 23080021;
	ForLoop22992211 -> _JOIN_22992211;
	ForLoop22991243 [label="ForLoop22991243  for (k=(min(ny-1,kkk+255))-(((min(ny-1,kkk+255))-(kt)+1)%28)+1; k<=min(ny-1,kkk+255); k=k+1) {...",shape=box];
	ForLoop22991243 -> 23078547;
	ForLoop22991243 -> _JOIN_22991243;
	_JOIN_22996456 [label="_JOIN_22996456None...",shape=box];
	_JOIN_22996456 -> 23189622;
	_JOIN_22987001 [label="_JOIN_22987001None...",shape=box];
	_JOIN_22987001 -> ForLoop22987075;
	22986035 [label="22986035  int k;...",shape=box];
	22986035 -> ForLoop22987001;
	ForLoop22976655 [label="ForLoop22976655  for (k=(min(ny-1,kkk+255))-(((min(ny-1,kkk+255))-(kt)+1)%28)+1; k<=min(ny-1,kkk+255); k=k+1) {...",shape=box];
	ForLoop22976655 -> 23048601;
	ForLoop22976655 -> _JOIN_22976655;
	23046462 [label="23046462  double scv_149;...",shape=box];
	23057157 [label="23057157  double scv_294;...",shape=box];
	22984993 [label="22984993  int k;...",shape=box];
	22984993 -> ForLoop22985959;
	_JOIN_22992285 [label="_JOIN_22992285None...",shape=box];
	_JOIN_22992285 -> 22992287;
	23200484 [label="23200484  double scv_815;...",shape=box];
	23040045 [label="23040045  double scv_62;...",shape=box];
	_JOIN_22993327 [label="_JOIN_22993327None...",shape=box];
	_JOIN_22993327 -> 22993329;
	_JOIN_22981791 [label="_JOIN_22981791None...",shape=box];
	_JOIN_22981791 -> ForLoop22981865;
	_JOIN_22982833 [label="_JOIN_22982833None...",shape=box];
	_JOIN_22982833 -> ForLoop22982907;
	22996596 [label="22996596  scv_815=scv_815+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	22996596 -> _JOIN_22996597;
	_JOIN_22973529 [label="_JOIN_22973529None...",shape=box];
	_JOIN_22973529 -> 22973531;
	23059296 [label="23059296  double scv_323;...",shape=box];
	_JOIN_22987075 [label="_JOIN_22987075None...",shape=box];
	_JOIN_22987075 -> 22987077;
	23082825 [label="23082825  double scv_642;...",shape=box];
	22989161 [label="22989161  int k;...",shape=box];
	22989161 -> ForLoop22990127;
	23089242 [label="23089242  double scv_729;...",shape=box];
	_JOIN_22973455 [label="_JOIN_22973455None...",shape=box];
	_JOIN_22973455 -> ForLoop22973529;
	23058631 [label="23058631  double scv_295, scv_296, scv_297, scv_298, scv_299, scv_300, scv_301, scv_302;...",shape=box];
	_JOIN_22976655 [label="_JOIN_22976655None...",shape=box];
	_JOIN_22976655 -> 22976657;
	ForLoop22989085 [label="ForLoop22989085  for (k=kt; k<=min(ny-1,kkk+255)-27; k=k+28) {...",shape=box];
	ForLoop22989085 -> 23073604;
	ForLoop22989085 -> _JOIN_22989085;
	ForLoop22998352 [label="ForLoop22998352  for (k=kt; k<=min(ny-1,kkk+255)-27; k=k+28) {...",shape=box];
	ForLoop22998352 -> 23195039;
	ForLoop22998352 -> _JOIN_22998352;
	23036042 [label="23036042  double scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8, scv_9;...",shape=box];
	23080686 [label="23080686  double scv_613;...",shape=box];
	ForLoop22984917 [label="ForLoop22984917  for (k=kt; k<=min(ny-1,kkk+255)-27; k=k+28) {...",shape=box];
	ForLoop22984917 -> 23065048;
	ForLoop22984917 -> _JOIN_22984917;
	_JOIN_22996453 [label="_JOIN_22996453None...",shape=box];
	_JOIN_22996453 -> _JOIN_22996456;
	23193164 [label="23193164  double scv_754, scv_755, scv_756, scv_757, scv_758, scv_759, scv_760, scv_761;...",shape=box];
	_JOIN_22995337 [label="_JOIN_22995337None...",shape=box];
	_JOIN_22995337 -> ForLoop22995411;
	23039389 [label="23039389  double scv_34, scv_35, scv_36, scv_37, scv_38, scv_39, scv_40, scv_41;...",shape=box];
	_JOIN_22991243 [label="_JOIN_22991243None...",shape=box];
	_JOIN_22991243 -> 22991245;
	22994371 [label="22994371  int k;...",shape=box];
	22994371 -> ForLoop22995337;
	ForLoop22984991 [label="ForLoop22984991  for (k=(min(ny-1,kkk+255))-(((min(ny-1,kkk+255))-(kt)+1)%28)+1; k<=min(ny-1,kkk+255); k=k+1) {...",shape=box];
	ForLoop22984991 -> 23065713;
	ForLoop22984991 -> _JOIN_22984991;
	ForLoop22979781 [label="ForLoop22979781  for (k=(min(ny-1,kkk+255))-(((min(ny-1,kkk+255))-(kt)+1)%28)+1; k<=min(ny-1,kkk+255); k=k+1) {...",shape=box];
	ForLoop22979781 -> 23055018;
	ForLoop22979781 -> _JOIN_22979781;
	_JOIN_22978739 [label="_JOIN_22978739None...",shape=box];
	_JOIN_22978739 -> 22978741;
	ForLoop22972487 [label="ForLoop22972487  for (k=(min(ny-1,kkk+255))-(((min(ny-1,kkk+255))-(kt)+1)%28)+1; k<=min(ny-1,kkk+255); k=k+1) {...",shape=box];
	ForLoop22972487 -> 23040045;
	ForLoop22972487 -> _JOIN_22972487;
	ForLoop22986033 [label="ForLoop22986033  for (k=(min(ny-1,kkk+255))-(((min(ny-1,kkk+255))-(kt)+1)%28)+1; k<=min(ny-1,kkk+255); k=k+1) {...",shape=box];
	ForLoop22986033 -> 23067852;
	ForLoop22986033 -> _JOIN_22986033;
	ForLoop22988117 [label="ForLoop22988117  for (k=(min(ny-1,kkk+255))-(((min(ny-1,kkk+255))-(kt)+1)%28)+1; k<=min(ny-1,kkk+255); k=k+1) {...",shape=box];
	ForLoop22988117 -> 23072130;
	ForLoop22988117 -> _JOIN_22988117;
	_JOIN_22996599 [label="_JOIN_22996599None...",shape=box];
	_JOIN_22996599 -> ForLoop22998423;
	23073604 [label="23073604  double scv_498expected=9369846271501.798828
actual=9369846271501.798828
, scv_499, scv_500, scv_501, scv_502, scv_503, scv_504, scv_505;...",shape=box];
	22979783 [label="22979783  int k;...",shape=box];
	22979783 -> ForLoop22980749;
	_JOIN_22994295 [label="_JOIN_22994295None...",shape=box];
	_JOIN_22994295 -> ForLoop22994369;
	_JOIN_22992211 [label="_JOIN_22992211None...",shape=box];
	_JOIN_22992211 -> ForLoop22992285;
	_JOIN_22982907 [label="_JOIN_22982907None...",shape=box];
	_JOIN_22982907 -> 22982909;
	ForLoop22994295 [label="ForLoop22994295  for (k=kt; k<=min(ny-1,kkk+255)-27; k=k+28) {...",shape=box];
	ForLoop22994295 -> 23084299;
	ForLoop22994295 -> _JOIN_22994295;
	_JOIN_22974571 [label="_JOIN_22974571None...",shape=box];
	_JOIN_22974571 -> 22974573;
	ForLoop22983949 [label="ForLoop22983949  for (k=(min(ny-1,kkk+255))-(((min(ny-1,kkk+255))-(kt)+1)%28)+1; k<=min(ny-1,kkk+255); k=k+1) {...",shape=box];
	ForLoop22983949 -> 23063574;
	ForLoop22983949 -> _JOIN_22983949;
	23071465 [label="23071465  double scv_469, scv_470, scv_471, scv_472, scv_473, scv_474, scv_475, scv_476;...",shape=box];
	23067852 [label="23067852  double scv_439;...",shape=box];
	22982909 [label="22982909  int k;...",shape=box];
	22982909 -> ForLoop22983875;
	23050075 [label="23050075  double scv_179, scv_180, scv_181, scv_182, scv_183, scv_184, scv_185, scv_186;...",shape=box];
	_JOIN_22990201 [label="_JOIN_22990201None...",shape=box];
	_JOIN_22990201 -> 22990203;
	ForLoop22981865 [label="ForLoop22981865  for (k=(min(ny-1,kkk+255))-(((min(ny-1,kkk+255))-(kt)+1)%28)+1; k<=min(ny-1,kkk+255); k=k+1) {...",shape=box];
	ForLoop22981865 -> 23059296;
	ForLoop22981865 -> _JOIN_22981865;
	ForLoop22971620 [label="ForLoop22971620  for (kt=kkk; kt<=min(ny-1,kkk+255)-31; kt=kt+32) {...",shape=box];
	ForLoop22971620 -> 23036042;
	ForLoop22971620 -> _JOIN_22971620;
	23189622 [label="23189622  tmp[(i+20)]=scv_730;...",shape=box];
	23086438 [label="23086438  double scv_672, scv_673, scv_674, scv_675, scv_676, scv_677, scv_678, scv_679;...",shape=box];
	22975615 [label="22975615  int k;...",shape=box];
	22975615 -> ForLoop22976581;
	ForLoop22996379 [label="ForLoop22996379  for (k=kt; k<=min(ny-1,kkk+255)-27; k=k+28) {...",shape=box];
	ForLoop22996379 -> 23088577;
	ForLoop22996379 -> _JOIN_22996379;
	_JOIN_22990127 [label="_JOIN_22990127None...",shape=box];
	_JOIN_22990127 -> ForLoop22990201;
	ForLoop22990201 [label="ForLoop22990201  for (k=(min(ny-1,kkk+255))-(((min(ny-1,kkk+255))-(kt)+1)%28)+1; k<=min(ny-1,kkk+255); k=k+1) {...",shape=box];
	ForLoop22990201 -> 23076408;
	ForLoop22990201 -> _JOIN_22990201;
	_JOIN_22998420 [label="_JOIN_22998420None...",shape=box];
	_JOIN_22998420 -> _JOIN_22998423;
	23060770 [label="23060770  double scv_324, scv_325, scv_326, scv_327, scv_328, scv_329, scv_330, scv_331;...",shape=box];
	_JOIN_22998423 [label="_JOIN_22998423None...",shape=box];
	_JOIN_22998423 -> 23200496;
	ForLoop22981791 [label="ForLoop22981791  for (k=kt; k<=min(ny-1,kkk+255)-27; k=k+28) {...",shape=box];
	ForLoop22981791 -> 23058631;
	ForLoop22981791 -> _JOIN_22981791;
	_JOIN_22997553 [label="_JOIN_22997553None...",shape=box];
	_JOIN_22997553 -> 22997554;
	_JOIN_22998427 [label="_JOIN_22998427None...",shape=box];
	ForLoop22975613 [label="ForLoop22975613  for (k=(min(ny-1,kkk+255))-(((min(ny-1,kkk+255))-(kt)+1)%28)+1; k<=min(ny-1,kkk+255); k=k+1) {...",shape=box];
	ForLoop22975613 -> 23046462;
	ForLoop22975613 -> _JOIN_22975613;
	_JOIN_22998425 [label="_JOIN_22998425None...",shape=box];
	_JOIN_22998425 -> _JOIN_22998427;
	ForLoop22982833 [label="ForLoop22982833  for (k=kt; k<=min(ny-1,kkk+255)-27; k=k+28) {...",shape=box];
	ForLoop22982833 -> 23060770;
	ForLoop22982833 -> _JOIN_22982833;
	22976657 [label="22976657  int k;...",shape=box];
	22976657 -> ForLoop22977623;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest96.exe __orio_perftest96.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest96.exe  
{'[5, 6, 0, 3, 4, 3, 1, 0, 25, 23, 0, 27, 0, 0, 2, 1, 0, 0]' : 0.142247}
{'[5, 6, 0, 3, 4, 3, 1, 0, 25, 23, 0, 27, 0, 0, 2, 1, 0, 0]' : 0.14181}
{'[5, 6, 0, 3, 4, 3, 1, 0, 25, 23, 0, 27, 0, 0, 2, 1, 0, 0]' : 0.141716}
{'[5, 6, 0, 3, 4, 3, 1, 0, 25, 23, 0, 27, 0, 0, 2, 1, 0, 0]' : 0.141676}
{'[5, 6, 0, 3, 4, 3, 1, 0, 25, 23, 0, 27, 0, 0, 2, 1, 0, 0]' : 0.141685}
{'[5, 6, 0, 3, 4, 3, 1, 0, 25, 23, 0, 27, 0, 0, 2, 1, 0, 0]' : 0.141692}
{'[5, 6, 0, 3, 4, 3, 1, 0, 25, 23, 0, 27, 0, 0, 2, 1, 0, 0]' : 0.1417}
{'[5, 6, 0, 3, 4, 3, 1, 0, 25, 23, 0, 27, 0, 0, 2, 1, 0, 0]' : 0.141748}
{'[5, 6, 0, 3, 4, 3, 1, 0, 25, 23, 0, 27, 0, 0, 2, 1, 0, 0]' : 0.141744}
{'[5, 6, 0, 3, 4, 3, 1, 0, 25, 23, 0, 27, 0, 0, 2, 1, 0, 0]' : 0.14274}
{'[5, 6, 0, 3, 4, 3, 1, 0, 25, 23, 0, 27, 0, 0, 2, 1, 0, 0]' : 0.141695}
{'[5, 6, 0, 3, 4, 3, 1, 0, 25, 23, 0, 27, 0, 0, 2, 1, 0, 0]' : 0.142073}
{'[5, 6, 0, 3, 4, 3, 1, 0, 25, 23, 0, 27, 0, 0, 2, 1, 0, 0]' : 0.141699}
{'[5, 6, 0, 3, 4, 3, 1, 0, 25, 23, 0, 27, 0, 0, 2, 1, 0, 0]' : 0.141715}
{'[5, 6, 0, 3, 4, 3, 1, 0, 25, 23, 0, 27, 0, 0, 2, 1, 0, 0]' : 0.141628}
{'[5, 6, 0, 3, 4, 3, 1, 0, 25, 23, 0, 27, 0, 0, 2, 1, 0, 0]' : 0.1416}
{'[5, 6, 0, 3, 4, 3, 1, 0, 25, 23, 0, 27, 0, 0, 2, 1, 0, 0]' : 0.141774}
{'[5, 6, 0, 3, 4, 3, 1, 0, 25, 23, 0, 27, 0, 0, 2, 1, 0, 0]' : 0.142038}
{'[5, 6, 0, 3, 4, 3, 1, 0, 25, 23, 0, 27, 0, 0, 2, 1, 0, 0]' : 0.141998}
{'[5, 6, 0, 3, 4, 3, 1, 0, 25, 23, 0, 27, 0, 0, 2, 1, 0, 0]' : 0.142102}
{'[5, 6, 0, 3, 4, 3, 1, 0, 25, 23, 0, 27, 0, 0, 2, 1, 0, 0]' : 0.142036}
{'[5, 6, 0, 3, 4, 3, 1, 0, 25, 23, 0, 27, 0, 0, 2, 1, 0, 0]' : 0.142152}
{'[5, 6, 0, 3, 4, 3, 1, 0, 25, 23, 0, 27, 0, 0, 2, 1, 0, 0]' : 0.142005}
{'[5, 6, 0, 3, 4, 3, 1, 0, 25, 23, 0, 27, 0, 0, 2, 1, 0, 0]' : 0.141981}
{'[5, 6, 0, 3, 4, 3, 1, 0, 25, 23, 0, 27, 0, 0, 2, 1, 0, 0]' : 0.142967}
{'[5, 6, 0, 3, 4, 3, 1, 0, 25, 23, 0, 27, 0, 0, 2, 1, 0, 0]' : 0.141976}
{'[5, 6, 0, 3, 4, 3, 1, 0, 25, 23, 0, 27, 0, 0, 2, 1, 0, 0]' : 0.142045}
{'[5, 6, 0, 3, 4, 3, 1, 0, 25, 23, 0, 27, 0, 0, 2, 1, 0, 0]' : 0.142028}
{'[5, 6, 0, 3, 4, 3, 1, 0, 25, 23, 0, 27, 0, 0, 2, 1, 0, 0]' : 0.141973}
{'[5, 6, 0, 3, 4, 3, 1, 0, 25, 23, 0, 27, 0, 0, 2, 1, 0, 0]' : 0.142013}

out:
 ["{'[5, 6, 0, 3, 4, 3, 1, 0, 25, 23, 0, 27, 0, 0, 2, 1, 0, 0]' : 0.142247}", "{'[5, 6, 0, 3, 4, 3, 1, 0, 25, 23, 0, 27, 0, 0, 2, 1, 0, 0]' : 0.14181}", "{'[5, 6, 0, 3, 4, 3, 1, 0, 25, 23, 0, 27, 0, 0, 2, 1, 0, 0]' : 0.141716}", "{'[5, 6, 0, 3, 4, 3, 1, 0, 25, 23, 0, 27, 0, 0, 2, 1, 0, 0]' : 0.141676}", "{'[5, 6, 0, 3, 4, 3, 1, 0, 25, 23, 0, 27, 0, 0, 2, 1, 0, 0]' : 0.141685}", "{'[5, 6, 0, 3, 4, 3, 1, 0, 25, 23, 0, 27, 0, 0, 2, 1, 0, 0]' : 0.141692}", "{'[5, 6, 0, 3, 4, 3, 1, 0, 25, 23, 0, 27, 0, 0, 2, 1, 0, 0]' : 0.1417}", "{'[5, 6, 0, 3, 4, 3, 1, 0, 25, 23, 0, 27, 0, 0, 2, 1, 0, 0]' : 0.141748}", "{'[5, 6, 0, 3, 4, 3, 1, 0, 25, 23, 0, 27, 0, 0, 2, 1, 0, 0]' : 0.141744}", "{'[5, 6, 0, 3, 4, 3, 1, 0, 25, 23, 0, 27, 0, 0, 2, 1, 0, 0]' : 0.14274}", "{'[5, 6, 0, 3, 4, 3, 1, 0, 25, 23, 0, 27, 0, 0, 2, 1, 0, 0]' : 0.141695}", "{'[5, 6, 0, 3, 4, 3, 1, 0, 25, 23, 0, 27, 0, 0, 2, 1, 0, 0]' : 0.142073}", "{'[5, 6, 0, 3, 4, 3, 1, 0, 25, 23, 0, 27, 0, 0, 2, 1, 0, 0]' : 0.141699}", "{'[5, 6, 0, 3, 4, 3, 1, 0, 25, 23, 0, 27, 0, 0, 2, 1, 0, 0]' : 0.141715}", "{'[5, 6, 0, 3, 4, 3, 1, 0, 25, 23, 0, 27, 0, 0, 2, 1, 0, 0]' : 0.141628}", "{'[5, 6, 0, 3, 4, 3, 1, 0, 25, 23, 0, 27, 0, 0, 2, 1, 0, 0]' : 0.1416}", "{'[5, 6, 0, 3, 4, 3, 1, 0, 25, 23, 0, 27, 0, 0, 2, 1, 0, 0]' : 0.141774}", "{'[5, 6, 0, 3, 4, 3, 1, 0, 25, 23, 0, 27, 0, 0, 2, 1, 0, 0]' : 0.142038}", "{'[5, 6, 0, 3, 4, 3, 1, 0, 25, 23, 0, 27, 0, 0, 2, 1, 0, 0]' : 0.141998}", "{'[5, 6, 0, 3, 4, 3, 1, 0, 25, 23, 0, 27, 0, 0, 2, 1, 0, 0]' : 0.142102}", "{'[5, 6, 0, 3, 4, 3, 1, 0, 25, 23, 0, 27, 0, 0, 2, 1, 0, 0]' : 0.142036}", "{'[5, 6, 0, 3, 4, 3, 1, 0, 25, 23, 0, 27, 0, 0, 2, 1, 0, 0]' : 0.142152}", "{'[5, 6, 0, 3, 4, 3, 1, 0, 25, 23, 0, 27, 0, 0, 2, 1, 0, 0]' : 0.142005}", "{'[5, 6, 0, 3, 4, 3, 1, 0, 25, 23, 0, 27, 0, 0, 2, 1, 0, 0]' : 0.141981}", "{'[5, 6, 0, 3, 4, 3, 1, 0, 25, 23, 0, 27, 0, 0, 2, 1, 0, 0]' : 0.142967}", "{'[5, 6, 0, 3, 4, 3, 1, 0, 25, 23, 0, 27, 0, 0, 2, 1, 0, 0]' : 0.141976}", "{'[5, 6, 0, 3, 4, 3, 1, 0, 25, 23, 0, 27, 0, 0, 2, 1, 0, 0]' : 0.142045}", "{'[5, 6, 0, 3, 4, 3, 1, 0, 25, 23, 0, 27, 0, 0, 2, 1, 0, 0]' : 0.142028}", "{'[5, 6, 0, 3, 4, 3, 1, 0, 25, 23, 0, 27, 0, 0, 2, 1, 0, 0]' : 0.141973}", "{'[5, 6, 0, 3, 4, 3, 1, 0, 25, 23, 0, 27, 0, 0, 2, 1, 0, 0]' : 0.142013}"]
returning from 'run': {'[5, 6, 0, 3, 4, 3, 1, 0, 25, 23, 0, 27, 0, 0, 2, 1, 0, 0]': ([0.142247, 0.14181, 0.141716, 0.141676, 0.141685, 0.141692, 0.1417, 0.141748, 0.141744, 0.14274, 0.141695, 0.142073, 0.141699, 0.141715, 0.141628, 0.1416, 0.141774, 0.142038, 0.141998, 0.142102, 0.142036, 0.142152, 0.142005, 0.141981, 0.142967, 0.141976, 0.142045, 0.142028, 0.141973, 0.142013], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.142247, 0.14181, 0.141716, 0.141676, 0.141685, 0.141692, 0.1417, 0.141748, 0.141744, 0.14274, 0.141695, 0.142073, 0.141699, 0.141715, 0.141628, 0.1416, 0.141774, 0.142038, 0.141998, 0.142102, 0.142036, 0.142152, 0.142005, 0.141981, 0.142967, 0.141976, 0.142045, 0.142028, 0.141973, 0.142013], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[5, 6, 0, 3, 4, 3, 1, 0, 25, 23, 0, 27, 0, 0, 2, 1, 0, 0]': ([0.142247, 0.14181, 0.141716, 0.141676, 0.141685, 0.141692, 0.1417, 0.141748, 0.141744, 0.14274, 0.141695, 0.142073, 0.141699, 0.141715, 0.141628, 0.1416, 0.141774, 0.142038, 0.141998, 0.142102, 0.142036, 0.142152, 0.142005, 0.141981, 0.142967, 0.141976, 0.142045, 0.142028, 0.141973, 0.142013], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [2, 0, 0, 1, 1, 0, 0, 28, 11, 0, 1, 1, 1, 1]
Fixed Factors: {'ACOPY_y': 0, 'U1_I': 25, 'U_J': 0, 'SCR': 1}
Testing candidate 27: [2, 0, 0, 1, 1, 0, 0, 0, 25, 28, 0, 11, 0, 1, 1, 1, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		2089
        Multiplications: 	1020
        Divisions: 		0
        Logical: 		0
        Reads: 			4074
        Writes: 		705
        Comparisons:		14
        Gotos: 			0
        
digraph CFG {
	23434279 [label="23434279  register int cbv_1;...",shape=box];
	_JOIN_23248033 [label="_JOIN_23248033None...",shape=box];
	_JOIN_23248033 -> 23344266;
	ForLoop23352283 [label="ForLoop23352283  for (jt=jjj; jt<=cbv_1; jt=jt+8) {...",shape=box];
	ForLoop23352283 -> 23371941;
	ForLoop23352283 -> _JOIN_23352283;
	23405287 [label="23405287  double scv_18, scv_19, scv_20, scv_21, scv_22, scv_23, scv_24, scv_25;...",shape=box];
	23361090 [label="23361090  scv_55=scv_55+A[i*ny+j]*x[j];...",shape=box];
	23361090 -> _JOIN_23361091;
	23373385 [label="23373385  double scv_9;...",shape=box];
	_JOIN_23353135 [label="_JOIN_23353135None...",shape=box];
	_JOIN_23353135 -> _JOIN_23353137;
	_JOIN_23353137 [label="_JOIN_23353137None...",shape=box];
	_JOIN_23353137 -> 23439296;
	23248032 [label="23248032  y[i]=0.0;...",shape=box];
	23248032 -> _JOIN_23248033;
	_JOIN_23360762 [label="_JOIN_23360762None...",shape=box];
	_JOIN_23360762 -> ForLoop23361333;
	_JOIN_23360760 [label="_JOIN_23360760None...",shape=box];
	_JOIN_23360760 -> 23405305;
	_JOIN_23361052 [label="_JOIN_23361052None...",shape=box];
	_JOIN_23361052 -> 23439539;
	23247305 [label="23247305  int i;...",shape=box];
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 23247305;
	23439296 [label="23439296  register int cbv_3;...",shape=box];
	23247737 [label="23247737  y[i]=0.0;...",shape=box];
	ForLoop23353135 [label="ForLoop23353135  for (j=jt; j<=cbv_2; j=j+1) {...",shape=box];
	ForLoop23353135 -> 23373385;
	ForLoop23353135 -> _JOIN_23353135;
	23408429 [label="23408429  tmp[i]=scv_55;...",shape=box];
	23408429 -> _JOIN_23361333;
	ForLoop23353137 [label="ForLoop23353137  for (jjj=0; jjj<=ny-1; jjj=jjj+64) {...",shape=box];
	ForLoop23353137 -> 23434279;
	ForLoop23353137 -> _JOIN_23353137;
	23439835 [label="23439835  register int cbv_6;...",shape=box];
	23434807 [label="23434807  regiexpected=9369846271501.798828
actual=9369846271501.798828
ster int cbv_2;...",shape=box];
	23360868 [label="23360868  scv_55=scv_55+A[i*ny+jt]*x[jt];...",shape=box];
	23407625 [label="23407625  double scv_47, scv_48, scv_49, scv_50, scv_51, scv_52, scv_53, scv_54;...",shape=box];
	_JOIN_23361336 [label="_JOIN_23361336None...",shape=box];
	23344299 [label="23344299  int i;...",shape=box];
	23344299 -> ForLoop23360762;
	ForLoop23248033 [label="ForLoop23248033  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop23248033 -> 23248032;
	ForLoop23248033 -> _JOIN_23248033;
	23371941 [label="23371941  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	23391282 [label="23391282  double scv_10, scv_11, scv_12, scv_13, scv_14, scv_15, scv_16, scv_17;...",shape=box];
	_JOIN_23352283 [label="_JOIN_23352283None...",shape=box];
	_JOIN_23352283 -> 23434807;
	23439539 [label="23439539  register int cbv_5;...",shape=box];
	ForLoop23361093 [label="ForLoop23361093  for (jjj=0; jjj<=ny-1; jjj=jjj+64) {...",shape=box];
	ForLoop23361093 -> 23439492;
	ForLoop23361093 -> _JOIN_23361093;
	_JOIN_23247964 [label="_JOIN_23247964None...",shape=box];
	_JOIN_23247964 -> 23248308;
	23248308 [label="23248308  register int cbv_2, cbv_3;...",shape=box];
	ForLoop23247964 [label="ForLoop23247964  for (i=0; i<=cbv_1; i=i+26) {...",shape=box];
	ForLoop23247964 -> 23247737;
	ForLoop23247964 -> _JOIN_23247964;
	_JOIN_23361335 [label="_JOIN_23361335None...",shape=box];
	_JOIN_23361335 -> _JOIN_23361336;
	_JOIN_23361333 [label="_JOIN_23361333None...",shape=box];
	_JOIN_23361333 -> _JOIN_23361335;
	23408417 [label="23408417  double scv_55;...",shape=box];
	_JOIN_23361331 [label="_JOIN_23361331None...",shape=box];
	_JOIN_23361331 -> 23408429;
	23344266 [label="23344266  double x_copy;...",shape=box];
	ForLoop23361052 [label="ForLoop23361052  for (jt=jjj; jt<=cbv_4; jt=jt+8) {...",shape=box];
	ForLoop23361052 -> 23360868;
	ForLoop23361052 -> _JOIN_23361052;
	_JOIN_23361093 [label="_JOIN_23361093None...",shape=box];
	_JOIN_23361093 -> 23439835;
	_JOIN_23361091 [label="_JOIN_23361091None...",shape=box];
	_JOIN_23361091 -> _JOIN_23361093;
	ForLoop23361336 [label="ForLoop23361336  for (iii=0; iii<=nx-1; iii=iii+64) {...",shape=box];
	ForLoop23361336 -> ForLoop23361335;
	ForLoop23361336 -> _JOIN_23361336;
	ForLoop23361335 [label="ForLoop23361335  for (ii=iii; ii<=min(nx-1,iii+32); ii=ii+32) {...",shape=box];
	ForLoop23361335 -> 23344299;
	ForLoop23361335 -> _JOIN_23361335;
	ForLoop23361333 [label="ForLoop23361333  for (i=(min(nx-1,ii+31))-(((min(nx-1,ii+31))-(ii)+1)%29)+1; i<=min(nx-1,ii+31); i=i+1) {...",shape=box];
	ForLoop23361333 -> 23408417;
	ForLoop23361333 -> _JOIN_23361333;
	ForLoop23360762 [label="ForLoop23360762  for (i=ii; i<=min(nx-1,ii+31)-28; i=i+29) {...",shape=box];
	ForLoop23360762 -> 23405287;
	ForLoop23360762 -> _JOIN_23360762;
	ForLoop23361331 [label="ForLoop23361331  for (kt=0; kt<=cbv_6; kt=kt+8) {...",shape=box];
	ForLoop23361331 -> 23407625;
	ForLoop23361331 -> _JOIN_23361331;
	ForLoop23360760 [label="ForLoop23360760  for (kt=0; kt<=cbv_3; kt=kt+8) {...",shape=box];
	ForLoop23360760 -> 23391282;
	ForLoop23360760 -> _JOIN_23360760;
	23405305 [label="23405305  tmp[(i+20)]=scv_18;...",shape=box];
	ForLoop23361091 [label="ForLoop23361091  for (j=jt; j<=cbv_5; j=j+1) {...",shape=box];
	ForLoop23361091 -> 23361090;
	ForLoop23361091 -> _JOIN_23361091;
	23439492 [label="23439492  register int cbv_4;...",shape=box];

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest97.exe __orio_perftest97.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest97.exe  
{'[2, 0, 0, 1, 1, 0, 0, 0, 25, 28, 0, 11, 0, 1, 1, 1, 1, 1]' : 0.184734}
{'[2, 0, 0, 1, 1, 0, 0, 0, 25, 28, 0, 11, 0, 1, 1, 1, 1, 1]' : 0.184362}
{'[2, 0, 0, 1, 1, 0, 0, 0, 25, 28, 0, 11, 0, 1, 1, 1, 1, 1]' : 0.184615}
{'[2, 0, 0, 1, 1, 0, 0, 0, 25, 28, 0, 11, 0, 1, 1, 1, 1, 1]' : 0.184411}
{'[2, 0, 0, 1, 1, 0, 0, 0, 25, 28, 0, 11, 0, 1, 1, 1, 1, 1]' : 0.184402}
{'[2, 0, 0, 1, 1, 0, 0, 0, 25, 28, 0, 11, 0, 1, 1, 1, 1, 1]' : 0.184588}
{'[2, 0, 0, 1, 1, 0, 0, 0, 25, 28, 0, 11, 0, 1, 1, 1, 1, 1]' : 0.184223}
{'[2, 0, 0, 1, 1, 0, 0, 0, 25, 28, 0, 11, 0, 1, 1, 1, 1, 1]' : 0.185102}
{'[2, 0, 0, 1, 1, 0, 0, 0, 25, 28, 0, 11, 0, 1, 1, 1, 1, 1]' : 0.185344}
{'[2, 0, 0, 1, 1, 0, 0, 0, 25, 28, 0, 11, 0, 1, 1, 1, 1, 1]' : 0.184456}
{'[2, 0, 0, 1, 1, 0, 0, 0, 25, 28, 0, 11, 0, 1, 1, 1, 1, 1]' : 0.184464}
{'[2, 0, 0, 1, 1, 0, 0, 0, 25, 28, 0, 11, 0, 1, 1, 1, 1, 1]' : 0.184049}
{'[2, 0, 0, 1, 1, 0, 0, 0, 25, 28, 0, 11, 0, 1, 1, 1, 1, 1]' : 0.184629}
{'[2, 0, 0, 1, 1, 0, 0, 0, 25, 28, 0, 11, 0, 1, 1, 1, 1, 1]' : 0.184633}
{'[2, 0, 0, 1, 1, 0, 0, 0, 25, 28, 0, 11, 0, 1, 1, 1, 1, 1]' : 0.18452}
{'[2, 0, 0, 1, 1, 0, 0, 0, 25, 28, 0, 11, 0, 1, 1, 1, 1, 1]' : 0.184332}
{'[2, 0, 0, 1, 1, 0, 0, 0, 25, 28, 0, 11, 0, 1, 1, 1, 1, 1]' : 0.183855}
{'[2, 0, 0, 1, 1, 0, 0, 0, 25, 28, 0, 11, 0, 1, 1, 1, 1, 1]' : 0.184409}
{'[2, 0, 0, 1, 1, 0, 0, 0, 25, 28, 0, 11, 0, 1, 1, 1, 1, 1]' : 0.184652}
{'[2, 0, 0, 1, 1, 0, 0, 0, 25, 28, 0, 11, 0, 1, 1, 1, 1, 1]' : 0.184939}
{'[2, 0, 0, 1, 1, 0, 0, 0, 25, 28, 0, 11, 0, 1, 1, 1, 1, 1]' : 0.184342}
{'[2, 0, 0, 1, 1, 0, 0, 0, 25, 28, 0, 11, 0, 1, 1, 1, 1, 1]' : 0.183884}
{'[2, 0, 0, 1, 1, 0, 0, 0, 25, 28, 0, 11, 0, 1, 1, 1, 1, 1]' : 0.184261}
{'[2, 0, 0, 1, 1, 0, 0, 0, 25, 28, 0, 11, 0, 1, 1, 1, 1, 1]' : 0.184842}
{'[2, 0, 0, 1, 1, 0, 0, 0, 25, 28, 0, 11, 0, 1, 1, 1, 1, 1]' : 0.184461}
{'[2, 0, 0, 1, 1, 0, 0, 0, 25, 28, 0, 11, 0, 1, 1, 1, 1, 1]' : 0.18401}
{'[2, 0, 0, 1, 1, 0, 0, 0, 25, 28, 0, 11, 0, 1, 1, 1, 1, 1]' : 0.184475}
{'[2, 0, 0, 1, 1, 0, 0, 0, 25, 28, 0, 11, 0, 1, 1, 1, 1, 1]' : 0.184904}
{'[2, 0, 0, 1, 1, 0, 0, 0, 25, 28, 0, 11, 0, 1, 1, 1, 1, 1]' : 0.184527}
{'[2, 0, 0, 1, 1, 0, 0, 0, 25, 28, 0, 11, 0, 1, 1, 1, 1, 1]' : 0.184811}

out:
 ["{'[2, 0, 0, 1, 1, 0, 0, 0, 25, 28, 0, 11, 0, 1, 1, 1, 1, 1]' : 0.184734}", "{'[2, 0, 0, 1, 1, 0, 0, 0, 25, 28, 0, 11, 0, 1, 1, 1, 1, 1]' : 0.184362}", "{'[2, 0, 0, 1, 1, 0, 0, 0, 25, 28, 0, 11, 0, 1, 1, 1, 1, 1]' : 0.184615}", "{'[2, 0, 0, 1, 1, 0, 0, 0, 25, 28, 0, 11, 0, 1, 1, 1, 1, 1]' : 0.184411}", "{'[2, 0, 0, 1, 1, 0, 0, 0, 25, 28, 0, 11, 0, 1, 1, 1, 1, 1]' : 0.184402}", "{'[2, 0, 0, 1, 1, 0, 0, 0, 25, 28, 0, 11, 0, 1, 1, 1, 1, 1]' : 0.184588}", "{'[2, 0, 0, 1, 1, 0, 0, 0, 25, 28, 0, 11, 0, 1, 1, 1, 1, 1]' : 0.184223}", "{'[2, 0, 0, 1, 1, 0, 0, 0, 25, 28, 0, 11, 0, 1, 1, 1, 1, 1]' : 0.185102}", "{'[2, 0, 0, 1, 1, 0, 0, 0, 25, 28, 0, 11, 0, 1, 1, 1, 1, 1]' : 0.185344}", "{'[2, 0, 0, 1, 1, 0, 0, 0, 25, 28, 0, 11, 0, 1, 1, 1, 1, 1]' : 0.184456}", "{'[2, 0, 0, 1, 1, 0, 0, 0, 25, 28, 0, 11, 0, 1, 1, 1, 1, 1]' : 0.184464}", "{'[2, 0, 0, 1, 1, 0, 0, 0, 25, 28, 0, 11, 0, 1, 1, 1, 1, 1]' : 0.184049}", "{'[2, 0, 0, 1, 1, 0, 0, 0, 25, 28, 0, 11, 0, 1, 1, 1, 1, 1]' : 0.184629}", "{'[2, 0, 0, 1, 1, 0, 0, 0, 25, 28, 0, 11, 0, 1, 1, 1, 1, 1]' : 0.184633}", "{'[2, 0, 0, 1, 1, 0, 0, 0, 25, 28, 0, 11, 0, 1, 1, 1, 1, 1]' : 0.18452}", "{'[2, 0, 0, 1, 1, 0, 0, 0, 25, 28, 0, 11, 0, 1, 1, 1, 1, 1]' : 0.184332}", "{'[2, 0, 0, 1, 1, 0, 0, 0, 25, 28, 0, 11, 0, 1, 1, 1, 1, 1]' : 0.183855}", "{'[2, 0, 0, 1, 1, 0, 0, 0, 25, 28, 0, 11, 0, 1, 1, 1, 1, 1]' : 0.184409}", "{'[2, 0, 0, 1, 1, 0, 0, 0, 25, 28, 0, 11, 0, 1, 1, 1, 1, 1]' : 0.184652}", "{'[2, 0, 0, 1, 1, 0, 0, 0, 25, 28, 0, 11, 0, 1, 1, 1, 1, 1]' : 0.184939}", "{'[2, 0, 0, 1, 1, 0, 0, 0, 25, 28, 0, 11, 0, 1, 1, 1, 1, 1]' : 0.184342}", "{'[2, 0, 0, 1, 1, 0, 0, 0, 25, 28, 0, 11, 0, 1, 1, 1, 1, 1]' : 0.183884}", "{'[2, 0, 0, 1, 1, 0, 0, 0, 25, 28, 0, 11, 0, 1, 1, 1, 1, 1]' : 0.184261}", "{'[2, 0, 0, 1, 1, 0, 0, 0, 25, 28, 0, 11, 0, 1, 1, 1, 1, 1]' : 0.184842}", "{'[2, 0, 0, 1, 1, 0, 0, 0, 25, 28, 0, 11, 0, 1, 1, 1, 1, 1]' : 0.184461}", "{'[2, 0, 0, 1, 1, 0, 0, 0, 25, 28, 0, 11, 0, 1, 1, 1, 1, 1]' : 0.18401}", "{'[2, 0, 0, 1, 1, 0, 0, 0, 25, 28, 0, 11, 0, 1, 1, 1, 1, 1]' : 0.184475}", "{'[2, 0, 0, 1, 1, 0, 0, 0, 25, 28, 0, 11, 0, 1, 1, 1, 1, 1]' : 0.184904}", "{'[2, 0, 0, 1, 1, 0, 0, 0, 25, 28, 0, 11, 0, 1, 1, 1, 1, 1]' : 0.184527}", "{'[2, 0, 0, 1, 1, 0, 0, 0, 25, 28, 0, 11, 0, 1, 1, 1, 1, 1]' : 0.184811}"]
returning from 'run': {'[2, 0, 0, 1, 1, 0, 0, 0, 25, 28, 0, 11, 0, 1, 1, 1, 1, 1]': ([0.184734, 0.184362, 0.184615, 0.184411, 0.184402, 0.184588, 0.184223, 0.185102, 0.185344, 0.184456, 0.184464, 0.184049, 0.184629, 0.184633, 0.18452, 0.184332, 0.183855, 0.184409, 0.184652, 0.184939, 0.184342, 0.183884, 0.184261, 0.184842, 0.184461, 0.18401, 0.184475, 0.184904, 0.184527, 0.184811], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.184734, 0.184362, 0.184615, 0.184411, 0.184402, 0.184588, 0.184223, 0.185102, 0.185344, 0.184456, 0.184464, 0.184049, 0.184629, 0.184633, 0.18452, 0.184332, 0.183855, 0.184409, 0.184652, 0.184939, 0.184342, 0.183884, 0.184261, 0.184842, 0.184461, 0.18401, 0.184475, 0.184904, 0.184527, 0.184811], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[2, 0, 0, 1, 1, 0, 0, 0, 25, 28, 0, 11, 0, 1, 1, 1, 1, 1]': ([0.184734, 0.184362, 0.184615, 0.184411, 0.184402, 0.184588, 0.184223, 0.185102, 0.185344, 0.184456, 0.184464, 0.184049, 0.184629, 0.184633, 0.18452, 0.184332, 0.183855, 0.184409, 0.184652, 0.184939, 0.184342, 0.183884, 0.184261, 0.184842, 0.184461, 0.18401, 0.184475, 0.184904, 0.184527, 0.184811], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [0, 6, 3, 0, 6, 3, 0, 1, 29, 1, 0, 1, 1, 0]
Fixed Factors: {'ACOPY_y': 0, 'U1_I': 25, 'U_J': 0, 'SCR': 1}
Testing candidate 28: [0, 6, 3, 0, 6, 3, 0, 0, 25, 1, 0, 29, 1, 0, 1, 1, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		1361
        Multiplications: 	640
        Divisions: 		0
        Logical: 		0
        Reads: 			2659
        Writes: 		468
        Comparisons:		11
        Gotos: 			0
        
digraph CFG {
	_JOIN_23540596 [label="_JOIN_23540596None...",shape=box];
	_JOIN_23540596 -> 23540597;
	_JOIN_23440789 [label="_JOIN_23440789None...",shape=box];
	_JOIN_23440789 -> 23538127;
	ForLoop23538423 [label="ForLoop23538423  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop23538423 -> ForLoop23538422;
	ForLoop23538423 -> _JOIN_23538423;
	ForLoop23538422 [label="ForLoop23538422  for (jj=jjj; jj<=min(ny-1,jjj+1536); jj=jj+512) {...",shape=box];
	ForLoop23538422 -> ForLoop23538421;
	ForLoop23538422 -> _JOIN_23538422;
	ForLoop23538421 [label="ForLoop23538421  for (j=jj; j<=min(ny-1,jj+511); j=j+1) {...",shape=box];
	ForLoop23538421 -> 23549154;
	ForLoop23538421 -> _JOIN_23538421;
	ForLoop23548792 [label="ForLoop23548792  for (it=0; it<=nx-8; it=it+8) {...",shape=box];
	ForLoop23548792 -> 23589694;
	ForLoop23548792 -> _JOIN_23548792;
	ForLoop23548790 [label="ForLoop23548790  for (kkk=0; kkk<=ny-1; kkk=kkk+256) {...",shape=box];
	ForLoop23548790 -> ForLoop23548789;
	ForLoop23548790 -> _JOIN_23548790;
	_JOIN_23548789 [label="_JOIN_23548789None...",shape=box];
	_JOIN_23548789 -> _JOIN_23548790;
	23441064 [label="23441064  register int cbv_2, cbv_3;...",shape=box];
	_JOIN_23538422 [label="_JOIN_23538422None...",shape=box];
	_JOIN_23538422 -> _JOIN_23538423;
	_JOIN_23538421 [label="_JOIN_23538421None...",shape=box];
	_JOIN_23538421 -> _JOIN_23538422;
	23440061 [label="23440061  int i;...",shape=box];
	_JOIN_23548786 [label="_JOIN_23548786None...",shape=box];
	_JOIN_23548786 -> _JOIN_23548789;
	23565167 [label="23565167  double scv_40;...",shape=box];
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 23440061;
	ForLoop23440789 [label="ForLoop23440789  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop23440789 -> 23440788;
	ForLoop23440789 -> _JOIN_23440789;
	23589706 [label="23589706  tmp[it]=scv_41;...",shape=box];
	23440493 [label="23440493  y[i]=0.0;...",shape=box];
	_JOIN_23548535 [label="_JOIN_23548535None...",shape=box];
	_JOIN_23548535 -> ForLoop23548786;
	23549154 [label="23549154  double scv_1;...",shape=box];
	23538127 [label="23538127  double x_copy;...",shape=box];
	23540597 [label="2354059expected=9369846271501.798828
actual=9369846271501.798828
7  int k;...",shape=box];
	23540597 -> ForLoop23548535;
	23589694 [label="23589694  double scv_41, scv_42, scv_43, scv_44, scv_45, scv_46, scv_47, scv_48;...",shape=box];
	_JOIN_23538423 [label="_JOIN_23538423None...",shape=box];
	_JOIN_23538423 -> ForLoop23548790;
	ForLoop23440720 [label="ForLoop23440720  for (i=0; i<=cbv_1; i=i+26) {...",shape=box];
	ForLoop23440720 -> 23440493;
	ForLoop23440720 -> _JOIN_23440720;
	23563796 [label="23563796  double scv_10, scv_11, scv_12, scv_13, scv_14, scv_15, scv_16, scv_17;...",shape=box];
	23440788 [label="23440788  y[i]=0.0;...",shape=box];
	23440788 -> _JOIN_23440789;
	23552640 [label="23552640  double scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8, scv_9;...",shape=box];
	_JOIN_23440720 [label="_JOIN_23440720None...",shape=box];
	_JOIN_23440720 -> 23441064;
	ForLoop23548535 [label="ForLoop23548535  for (k=kt; k<=min(ny-1,kk+63)-29; k=k+30) {...",shape=box];
	ForLoop23548535 -> 23563796;
	ForLoop23548535 -> _JOIN_23548535;
	ForLoop23548789 [label="ForLoop23548789  for (kk=kkk; kk<=min(ny-1,kkk+192); kk=kk+64) {...",shape=box];
	ForLoop23548789 -> ForLoop23540596;
	ForLoop23548789 -> _JOIN_23548789;
	_JOIN_23548790 [label="_JOIN_23548790None...",shape=box];
	_JOIN_23548790 -> 23589706;
	ForLoop23548786 [label="ForLoop23548786  for (k=(min(ny-1,kk+63))-(((min(ny-1,kk+63))-(kt)+1)%30)+1; k<=min(ny-1,kk+63); k=k+1) {...",shape=box];
	ForLoop23548786 -> 23565167;
	ForLoop23548786 -> _JOIN_23548786;
	ForLoop23540596 [label="ForLoop23540596  for (kt=kk; kt<=min(ny-1,kk+63)-7; kt=kt+8) {...",shape=box];
	ForLoop23540596 -> 23552640;
	ForLoop23540596 -> _JOIN_23540596;
	_JOIN_23548792 [label="_JOIN_23548792None...",shape=box];

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest98.exe __orio_perftest98.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest98.exe  
{'[0, 6, 3, 0, 6, 3, 0, 0, 25, 1, 0, 29, 1, 0, 1, 1, 1, 0]' : 0.0819499}
{'[0, 6, 3, 0, 6, 3, 0, 0, 25, 1, 0, 29, 1, 0, 1, 1, 1, 0]' : 0.081686}
{'[0, 6, 3, 0, 6, 3, 0, 0, 25, 1, 0, 29, 1, 0, 1, 1, 1, 0]' : 0.0815811}
{'[0, 6, 3, 0, 6, 3, 0, 0, 25, 1, 0, 29, 1, 0, 1, 1, 1, 0]' : 0.0816219}
{'[0, 6, 3, 0, 6, 3, 0, 0, 25, 1, 0, 29, 1, 0, 1, 1, 1, 0]' : 0.0816689}
{'[0, 6, 3, 0, 6, 3, 0, 0, 25, 1, 0, 29, 1, 0, 1, 1, 1, 0]' : 0.0817292}
{'[0, 6, 3, 0, 6, 3, 0, 0, 25, 1, 0, 29, 1, 0, 1, 1, 1, 0]' : 0.0815859}
{'[0, 6, 3, 0, 6, 3, 0, 0, 25, 1, 0, 29, 1, 0, 1, 1, 1, 0]' : 0.0815952}
{'[0, 6, 3, 0, 6, 3, 0, 0, 25, 1, 0, 29, 1, 0, 1, 1, 1, 0]' : 0.0822818}
{'[0, 6, 3, 0, 6, 3, 0, 0, 25, 1, 0, 29, 1, 0, 1, 1, 1, 0]' : 0.0816278}
{'[0, 6, 3, 0, 6, 3, 0, 0, 25, 1, 0, 29, 1, 0, 1, 1, 1, 0]' : 0.081578}
{'[0, 6, 3, 0, 6, 3, 0, 0, 25, 1, 0, 29, 1, 0, 1, 1, 1, 0]' : 0.0815902}
{'[0, 6, 3, 0, 6, 3, 0, 0, 25, 1, 0, 29, 1, 0, 1, 1, 1, 0]' : 0.0816081}
{'[0, 6, 3, 0, 6, 3, 0, 0, 25, 1, 0, 29, 1, 0, 1, 1, 1, 0]' : 0.081636}
{'[0, 6, 3, 0, 6, 3, 0, 0, 25, 1, 0, 29, 1, 0, 1, 1, 1, 0]' : 0.081696}
{'[0, 6, 3, 0, 6, 3, 0, 0, 25, 1, 0, 29, 1, 0, 1, 1, 1, 0]' : 0.0816329}
{'[0, 6, 3, 0, 6, 3, 0, 0, 25, 1, 0, 29, 1, 0, 1, 1, 1, 0]' : 0.081661}
{'[0, 6, 3, 0, 6, 3, 0, 0, 25, 1, 0, 29, 1, 0, 1, 1, 1, 0]' : 0.082628}
{'[0, 6, 3, 0, 6, 3, 0, 0, 25, 1, 0, 29, 1, 0, 1, 1, 1, 0]' : 0.0815961}
{'[0, 6, 3, 0, 6, 3, 0, 0, 25, 1, 0, 29, 1, 0, 1, 1, 1, 0]' : 0.0816541}
{'[0, 6, 3, 0, 6, 3, 0, 0, 25, 1, 0, 29, 1, 0, 1, 1, 1, 0]' : 0.0816329}
{'[0, 6, 3, 0, 6, 3, 0, 0, 25, 1, 0, 29, 1, 0, 1, 1, 1, 0]' : 0.0815842}
{'[0, 6, 3, 0, 6, 3, 0, 0, 25, 1, 0, 29, 1, 0, 1, 1, 1, 0]' : 0.081656}
{'[0, 6, 3, 0, 6, 3, 0, 0, 25, 1, 0, 29, 1, 0, 1, 1, 1, 0]' : 0.0815539}
{'[0, 6, 3, 0, 6, 3, 0, 0, 25, 1, 0, 29, 1, 0, 1, 1, 1, 0]' : 0.08165}
{'[0, 6, 3, 0, 6, 3, 0, 0, 25, 1, 0, 29, 1, 0, 1, 1, 1, 0]' : 0.08167}
{'[0, 6, 3, 0, 6, 3, 0, 0, 25, 1, 0, 29, 1, 0, 1, 1, 1, 0]' : 0.0816231}
{'[0, 6, 3, 0, 6, 3, 0, 0, 25, 1, 0, 29, 1, 0, 1, 1, 1, 0]' : 0.0820129}
{'[0, 6, 3, 0, 6, 3, 0, 0, 25, 1, 0, 29, 1, 0, 1, 1, 1, 0]' : 0.0815589}
{'[0, 6, 3, 0, 6, 3, 0, 0, 25, 1, 0, 29, 1, 0, 1, 1, 1, 0]' : 0.081697}

out:
 ["{'[0, 6, 3, 0, 6, 3, 0, 0, 25, 1, 0, 29, 1, 0, 1, 1, 1, 0]' : 0.0819499}", "{'[0, 6, 3, 0, 6, 3, 0, 0, 25, 1, 0, 29, 1, 0, 1, 1, 1, 0]' : 0.081686}", "{'[0, 6, 3, 0, 6, 3, 0, 0, 25, 1, 0, 29, 1, 0, 1, 1, 1, 0]' : 0.0815811}", "{'[0, 6, 3, 0, 6, 3, 0, 0, 25, 1, 0, 29, 1, 0, 1, 1, 1, 0]' : 0.0816219}", "{'[0, 6, 3, 0, 6, 3, 0, 0, 25, 1, 0, 29, 1, 0, 1, 1, 1, 0]' : 0.0816689}", "{'[0, 6, 3, 0, 6, 3, 0, 0, 25, 1, 0, 29, 1, 0, 1, 1, 1, 0]' : 0.0817292}", "{'[0, 6, 3, 0, 6, 3, 0, 0, 25, 1, 0, 29, 1, 0, 1, 1, 1, 0]' : 0.0815859}", "{'[0, 6, 3, 0, 6, 3, 0, 0, 25, 1, 0, 29, 1, 0, 1, 1, 1, 0]' : 0.0815952}", "{'[0, 6, 3, 0, 6, 3, 0, 0, 25, 1, 0, 29, 1, 0, 1, 1, 1, 0]' : 0.0822818}", "{'[0, 6, 3, 0, 6, 3, 0, 0, 25, 1, 0, 29, 1, 0, 1, 1, 1, 0]' : 0.0816278}", "{'[0, 6, 3, 0, 6, 3, 0, 0, 25, 1, 0, 29, 1, 0, 1, 1, 1, 0]' : 0.081578}", "{'[0, 6, 3, 0, 6, 3, 0, 0, 25, 1, 0, 29, 1, 0, 1, 1, 1, 0]' : 0.0815902}", "{'[0, 6, 3, 0, 6, 3, 0, 0, 25, 1, 0, 29, 1, 0, 1, 1, 1, 0]' : 0.0816081}", "{'[0, 6, 3, 0, 6, 3, 0, 0, 25, 1, 0, 29, 1, 0, 1, 1, 1, 0]' : 0.081636}", "{'[0, 6, 3, 0, 6, 3, 0, 0, 25, 1, 0, 29, 1, 0, 1, 1, 1, 0]' : 0.081696}", "{'[0, 6, 3, 0, 6, 3, 0, 0, 25, 1, 0, 29, 1, 0, 1, 1, 1, 0]' : 0.0816329}", "{'[0, 6, 3, 0, 6, 3, 0, 0, 25, 1, 0, 29, 1, 0, 1, 1, 1, 0]' : 0.081661}", "{'[0, 6, 3, 0, 6, 3, 0, 0, 25, 1, 0, 29, 1, 0, 1, 1, 1, 0]' : 0.082628}", "{'[0, 6, 3, 0, 6, 3, 0, 0, 25, 1, 0, 29, 1, 0, 1, 1, 1, 0]' : 0.0815961}", "{'[0, 6, 3, 0, 6, 3, 0, 0, 25, 1, 0, 29, 1, 0, 1, 1, 1, 0]' : 0.0816541}", "{'[0, 6, 3, 0, 6, 3, 0, 0, 25, 1, 0, 29, 1, 0, 1, 1, 1, 0]' : 0.0816329}", "{'[0, 6, 3, 0, 6, 3, 0, 0, 25, 1, 0, 29, 1, 0, 1, 1, 1, 0]' : 0.0815842}", "{'[0, 6, 3, 0, 6, 3, 0, 0, 25, 1, 0, 29, 1, 0, 1, 1, 1, 0]' : 0.081656}", "{'[0, 6, 3, 0, 6, 3, 0, 0, 25, 1, 0, 29, 1, 0, 1, 1, 1, 0]' : 0.0815539}", "{'[0, 6, 3, 0, 6, 3, 0, 0, 25, 1, 0, 29, 1, 0, 1, 1, 1, 0]' : 0.08165}", "{'[0, 6, 3, 0, 6, 3, 0, 0, 25, 1, 0, 29, 1, 0, 1, 1, 1, 0]' : 0.08167}", "{'[0, 6, 3, 0, 6, 3, 0, 0, 25, 1, 0, 29, 1, 0, 1, 1, 1, 0]' : 0.0816231}", "{'[0, 6, 3, 0, 6, 3, 0, 0, 25, 1, 0, 29, 1, 0, 1, 1, 1, 0]' : 0.0820129}", "{'[0, 6, 3, 0, 6, 3, 0, 0, 25, 1, 0, 29, 1, 0, 1, 1, 1, 0]' : 0.0815589}", "{'[0, 6, 3, 0, 6, 3, 0, 0, 25, 1, 0, 29, 1, 0, 1, 1, 1, 0]' : 0.081697}"]
returning from 'run': {'[0, 6, 3, 0, 6, 3, 0, 0, 25, 1, 0, 29, 1, 0, 1, 1, 1, 0]': ([0.0819499, 0.081686, 0.0815811, 0.0816219, 0.0816689, 0.0817292, 0.0815859, 0.0815952, 0.0822818, 0.0816278, 0.081578, 0.0815902, 0.0816081, 0.081636, 0.081696, 0.0816329, 0.081661, 0.082628, 0.0815961, 0.0816541, 0.0816329, 0.0815842, 0.081656, 0.0815539, 0.08165, 0.08167, 0.0816231, 0.0820129, 0.0815589, 0.081697], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.0819499, 0.081686, 0.0815811, 0.0816219, 0.0816689, 0.0817292, 0.0815859, 0.0815952, 0.0822818, 0.0816278, 0.081578, 0.0815902, 0.0816081, 0.081636, 0.081696, 0.0816329, 0.081661, 0.082628, 0.0815961, 0.0816541, 0.0816329, 0.0815842, 0.081656, 0.0815539, 0.08165, 0.08167, 0.0816231, 0.0820129, 0.0815589, 0.081697], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 3, 0, 6, 3, 0, 0, 25, 1, 0, 29, 1, 0, 1, 1, 1, 0]': ([0.0819499, 0.081686, 0.0815811, 0.0816219, 0.0816689, 0.0817292, 0.0815859, 0.0815952, 0.0822818, 0.0816278, 0.081578, 0.0815902, 0.0816081, 0.081636, 0.081696, 0.0816329, 0.081661, 0.082628, 0.0815961, 0.0816541, 0.0816329, 0.0815842, 0.081656, 0.0815539, 0.08165, 0.08167, 0.0816231, 0.0820129, 0.0815589, 0.081697], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Measurements: [0.13649976666666666, 0.09015506666666667, 0.09144478666666668, 0.20239296666666667, 0.08950050333333333, 0.20470766666666665, 0.12373030000000002, 0.08060419666666666, 0.1037208, 0.10638879999999999, 0.09247188, 0.17692363333333333, 0.22971470000000002, 0.15147776666666662, 0.20372503333333336, 0.14398403333333334, 0.2033553, 0.10546343333333333, 0.07874216, 0.11616249999999997, 0.10361166666666666, 0.08634302000000002, 0.08187132666666666, 0.09956866333333332, 0.10590666666666668, 0.14194186666666667, 0.1845078666666667, 0.08170823333333334]
   T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x U_I U_K RT_I RT_J RT_K VEC1 VEC2
1     1    4    2    3    6    5       0  28   5    0    2    0    0    1
2     5    1    6    3    4    6       1  21  27    0    2    0    1    1
3     4    1    0    6    2    3       0  12   2    0    0    0    1    1
4     4    4    1    0    0    5       1  24  15    2    0    0    0    1
5     1    3    5    5    0    0       1   3  15    0    0    2    1    1
6     6    0    2    6    4    5       0   0  21    2    0    0    0    0
7     6    2    3    0    4    1       1  12  12    0    0    0    1    0
8     2    6    6    3    0    0       0  24   2    1    0    0    1    1
9     5    6    2    6    6    2       1   8   5    0    2    0    0    0
10    5    1    4    0    5    5       0  14   0    0    0    2    1    0
11    1    5    1    5    6    4       1  26  28    1    1    0    1    0
12    5    0    3    6    2    0       1  27   5    0    0    2    0    0
13    3    0    3    3    1    5       0  29  29    0    2    0    1    0
14    4    6    6    4    4    5       1  26   1    0    0    2    1    1
15    0    3    5    2    2    6       1  29   5    2    0    0    1    0
16    2    5    3    2    0    6       1  25  25    0    0    0    0    0
17    3    6    2    5    0    0       0  27  28    2    0    0    0    1
18    0    2    5    6    5    4       0  17  29    0    0    0    0    1
19    4    1    5    0    5    0       1   0  25    1    1    0    0    1
20    2    0    6    0    3    5       0  16  17    0    0    2    0    1
21    4    6    2    0    6    1       0  19   6    0    1    0    0    0
22    0    0    2    5    6    2       1  16  13    1    0    1    0    1
23    6    5    6    6    3    5       0   2  28    0    1    1    0    1
24    2    6    0    0    0    4       1   2   1    0    1    1    1    1
25    0    3    4    1    0    4       1   2  13    0    2    0    0    0
26    5    6    0    3    4    3       1  23  27    0    0    2    0    0
27    2    0    0    1    1    0       0  28  11    0    1    1    1    1
28    0    6    3    0    6    3       0   1  29    1    0    1    1    0
    cost_mean
1  0.13649977
2  0.09015507
3  0.09144479
4  0.20239297
5  0.08950050
6  0.20470767
7  0.12373030
8  0.08060420
9  0.10372080
10 0.10638880
11 0.09247188
12 0.17692363
13 0.22971470
14 0.15147777
15 0.20372503
16 0.14398403
17 0.20335530
18 0.10546343
19 0.07874216
20 0.11616250
21 0.10361167
22 0.08634302
23 0.08187133
24 0.09956866
25 0.10590667
26 0.14194187
27 0.18450787
28 0.08170823

Step Space Names:  [1] "T1_I"    "T1_J"    "T1_K"    "T2_I"    "T2_J"    "T2_K"    "ACOPY_x"
 [8] "ACOPY_y" "U1_I"    "U_I"     "U_J"     "U_K"     "RT_I"    "RT_J"   
[15] "RT_K"    "SCR"     "VEC1"    "VEC2"   

Heteroscedasticity Test p-value: 0.663578077043
Regression Step:            Df   Sum Sq  Mean Sq F value Pr(>F)   
T1_I         1 0.001039 0.001039   0.955 0.3462   
T1_J         1 0.002086 0.002086   1.917 0.1895   
T1_K         1 0.004056 0.004056   3.728 0.0756 . 
T2_I         1 0.000021 0.000021   0.020 0.8908   
T2_J         1 0.009080 0.009080   8.346 0.0127 * 
T2_K         1 0.003477 0.003477   3.196 0.0971 . 
ACOPY_x      1 0.000471 0.000471   0.433 0.5221   
U_I          1 0.012010 0.012010  11.039 0.0055 **
U_K          1 0.000719 0.000719   0.661 0.4308   
RT_I         1 0.006826 0.006826   6.274 0.0263 * 
RT_J         1 0.000228 0.000228   0.210 0.6545   
RT_K         1 0.001228 0.001228   1.129 0.3074   
VEC1         1 0.000623 0.000623   0.572 0.4628   
VEC2         1 0.003597 0.003597   3.306 0.0921 . 
Residuals   13 0.014143 0.001088                  
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Predicting Best
Identical predictions (tol = 1e-5): 1
Getting fixed variables
Fixed Variables: {'ACOPY_y': 0, 'U_J': 0, 'U_I': 1, 'T2_J': 6, 'U1_I': 25, 'SCR': 1}
Pruning Data
Dimensions of Pruned Data: [1]  7 18
Pruning Model
Pruned Search Space Size: 18
Best Predicted:        T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
264632    1    6    2    3    6    1       1       0   25   1   0  18    0    0
       RT_K SCR VEC1 VEC2
264632    0   1    0    1

Pruned Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_K', 'ACOPY_x', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'VEC1', 'VEC2']
Fixed Factors: {'ACOPY_y': 0, 'U_J': 0, 'U_I': 1, 'T2_J': 6, 'U1_I': 25, 'SCR': 1}
Fixed Factors: {'ACOPY_y': 0, 'U_J': 0, 'U_I': 1, 'T2_J': 6, 'U1_I': 25, 'SCR': 1}
Length of requested configs: 1
Result was on Database, Returning Now
My perf_costs: {'[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]': ([0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
0.1290727
[1, 6, 2, 3, 6, 1, 1, 0, 25, 1, 0, 18, 0, 0, 0, 1, 0, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	23
        Max loop nest depth: 	6
        Additions: 		400
        Multiplications: 	126
        Divisions: 		0
        Logical: 		0
        Reads: 			954
        Writes: 		237
        Comparisons:		23
        Gotos: 			0
        
digraph CFG {
	ForLoop23624556 [label="ForLoop23624556  for (i=(min(nx-1,ii+15))-(((min(nx-1,ii+15))-(ii)+1)%2)+1; i<=min(nx-1,ii+15); i=i+1) {...",shape=box];
	ForLoop23624556 -> 23635461;
	ForLoop23624556 -> _JOIN_23624556;
	ForLoop23624554 [label="ForLoop23624554  for (kkk=0; kkk<=ny-1; kkk=kkk+64) {...",shape=box];
	ForLoop23624554 -> ForLoop23624553;
	ForLoop23624554 -> _JOIN_23624554;
	ForLoop23624553 [label="ForLoop23624553  for (kk=kkk; kk<=min(ny-1,kkk+32); kk=kk+32) {...",shape=box];
	ForLoop23624553 -> 23623937;
	ForLoop23624553 -> _JOIN_23624553;
	ForLoop23624551 [label="ForLoop23624551  for (k=cbv_7; k<=cbv_8; k=k+1) {...",shape=box];
	ForLoop23624551 -> 23632874;
	ForLoop23624551 -> _JOIN_23624551;
	_JOIN_23624551 [label="_JOIN_23624551None...",shape=box];
	_JOIN_23624551 -> _JOIN_23624553;
	ForLoop23624559 [label="ForLoop23624559  for (iii=0; iii<=nx-1; iii=iii+256) {...",shape=box];
	ForLoop23624559 -> ForLoop23624558;
	ForLoop23624559 -> _JOIN_23624559;
	ForLoop23624558 [label="ForLoop23624558  for (ii=iii; ii<=min(nx-1,iii+240); ii=ii+16) {...",shape=box];
	ForLoop23624558 -> 23622220;
	ForLoop23624558 -> _JOIN_23624558;
	_JOIN_23623905 [label="_JOIN_23623905None...",shape=box];
	_JOIN_23623905 -> ForLoop23624554;
	_JOIN_23623739 [label="_JOIN_23623739None...",shape=box];
	_JOIN_23623739 -> _JOIN_23623741;
	_JOIN_23624559 [label="_JOIN_23624559None...",shape=box];
	_JOIN_23624554 [label="_JOIN_23624554None...",shape=box];
	_JOIN_23624554 -> 23635473;
	_JOIN_23591026 [label="_JOIN_23591026None...",shape=box];
	_JOIN_23591026 -> ForLoop23591095;
	_JOIN_23623745 [label="_JOIN_23623745None...",shape=box];
	_JOIN_23623745 -> ForLoop23624556;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 23590367;
	23623937 [label="23623937  int k;...",shape=box];
	ForLoop23624483 [label="ForLoop23624483  for (k=kk; k<=cbv_6; k=k+19) {...",shape=box];
	ForLoop23624483 -> 23632408;
	ForLoop23624483 -> _JOIN_23624483;
	ForLoop23623644 [label="ForLoop23623644  for (k=kk; k<=cbv_2; k=k+19) {...",shape=box];
	ForLoop23623644 -> 23626668;
	ForLoop23623644 -> _JOIN_23623644;
	_JOIN_23624558 [label="_JOIN_23624558None...",shape=box];
	_JOIN_23624558 -> _JOIN_23624559;
	23635461 [label="23635461  double scv_44;...",shape=box];
	ForLoop23591095 [label="ForLoop23591095  for (i=ny-((ny-(0))%26); i<=ny-1; i=i+1) ...",shape=box];
	ForLoop23591095 -> 23591094;
	ForLoop23591095 -> _JOIN_23591095;
	_JOIN_23624553 [label="_JOIN_23624553None...",shape=box];
	_JOIN_23624553 -> _JOIN_23624554;
	23622459 [label="23622459  int k;...",shape=box];
	ForLoop23623745 [label="ForLoop23623745  for (i=ii; i<=min(nx-1,ii+15)-1; i=i+2) {...",shape=box];
	ForLoop23623745 -> 23631273;
	ForLoop23623745 -> _JOIN_23623745;
	23591094 [label="23591094  y[i]=0.0;...",shape=box];
	23591094 -> _JOIN_23591095;
	ForLoop23623743 [label="ForLoop23623743  for (kkk=0; kkk<=ny-1; kkk=kkk+64) {...",shape=box];
	ForLoop23623743 -> ForLoop23623741;
	ForLoop23623743 -> _JOIN_23623743;
	_JOIN_23624556 [label="_JOIN_23624556None...",shape=box];
	_JOIN_23624556 -> _JOIN_23624558;
	ForLoop23623741 [label="ForLoop23623741  for (kk=kkk; kk<=min(ny-1,kkk+32); kk=kk+32) {...",shape=box];
	ForLoop23623741 -> 23622459;
	ForLoop23623741 -> _JOIN_23623741;
	23631273 [label="23631273  double scv_22, scv_23;...",shape=box];
	23622220 [label="23622220  int i;...",shape=box];
	23622220 -> ForLoop23623745;
	23632874 [label="23632874  double scv_43;...",shape=box];
	_JOIN_23623741 [label="_JOIN_23623741None...",shape=box];
	_JOIN_23623741 -> _JOIN_23623743;
	_JOIN_23622425 [label="_JOIN_23622425None...",shape=box];
	_JOIN_23622425 -> _JOIN_23622427;
	ForLoop23623904 [label="ForLoop23623904  for (jj=jjj; jj<=min(ny-1,jjj+1536); jj=jj+512) {...",shape=box];
	ForLoop23623904 -> 23623860;
	ForLoop23623904 -> _JOIN_23623904;
	_JOIN_23622427 [label="_JOIN_23622427None...",shape=box];
	_JOIN_23622427 -> ForLoop23623743;
	23622187 [label="23622187  double x_copy[512];...",shape=box];
	_JOIN_23622423 [label="_JOIN_23622423None...",shape=box];
	_JOIN_23622423 -> _JOIN_23622425;
	ForLoop23623902 [label="ForLoop23623902  for (j=jj; j<=cbv_5; j=j+1) {...",shape=box];
	ForLoop23623902 -> 23623901;
	ForLoop23623902 -> _JOIN_23623902;
	ForLoop23591026 [label="ForLoop23591026  for (i=0; i<=ny-26; i=i+26) {...",shape=box];
	ForLoop23591026 -> 23590799;
	ForLoop23591026 -> _JOIN_23591026;
	_JOIN_23624483 [label="_JOIN_23624483None...",shape=box];
	_JOIN_23624483 -> 23642205;
	23590367 [label="23590367  int i;...",shape=box];
	23590367 -> ForLoop23591026;
	23623860 [label="23623860  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	23641363 [label="23641363  register int cbv_3, cbv_4;...",shape=box];
	23631291 [label="23631291  tmp[(i+1)]=scv_22;...",shape=box];
	23623901 [label="23623901  scv_44=scv_44+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	23623901 -> _JOIN_23623902;
	ForLoop23623905 [label="ForLoop23623905  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop23623905 -> ForLoop23623904;
	ForLoop23623905 -> _JOIN_23623905;
	23590799 [label="23590799  y[i]=0.0;...",shape=box];
	ForLoop23623739 [label="ForLoop23623739  for (k=cbv_3; k<=cbv_4; k=k+1) {...",shape=box];
	ForLoop23623739 -> 23627209;
	ForLoop23623739 -> _JOIN_23623739;
	ForLoop23622425 [label="ForLoop23622425  for (jj=jjj; jj<=min(ny-1,jjj+1536); jj=jj+512) {...",shape=box];
	ForLoop23622425 -> 23622317;
	ForLoop23622425 -> _JOIN_23622425;
	_JOIN_23623904 [label="_JOIN_23623904None...",shape=box];
	_JOIN_23623904 -> _JOIN_23623905;
	ForLoop23622427 [label="ForLoop23622427  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop23622427 -> ForLoop23622425;
	ForLoop23622427 -> _JOIN_23622427;
	23626668 [label="23626668  double scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8, scv_9;...",shape=box];
	_JOIN_23623743 [label="_JOIN_23623743None...",shape=box];
	_JOIN_23623743 -> 23631291;
	23624660 [label="23624660  double scv_1;...",shape=box];
	ForLoop23622423 [label="ForLoop23622423  for (j=jj; j<=cbv_1; j=j+1) {...",shape=box];
	ForLoop23622423 -> 23624660;
	ForLoop23622423 -> _JOIN_23622423;
	_JOIN_23623902 [label="_JOIN_23623902None...",shape=box];
	_JOIN_23623902 -> _JOIN_23623904;
	23635473 [label="23635473  tmp[i]=scv_44;...",shape=box];
	23635473 -> _JOIN_23624556;
	_JOIN_23623644 [label="_JOIN_23623644None...",shape=box];
	_JOIN_23623644 -> 23641363;
	_JOIN_23591095 [label="_JOIN_23591095None...",shape=box];
	_JOIN_23591095 -> 23622187;
	23622317 [label="23expected=9369846271501.798828
actual=9369846271501.798828
622317  for (j=jj; j<=min(ny-1,jj+511); j=j+1) ...",shape=box];
	23627209 [label="23627209  double scv_21;...",shape=box];
	23642205 [label="23642205  register int cbv_7, cbv_8;...",shape=box];
	23632408 [label="23632408  double scv_24, scv_25, scv_26, scv_27, scv_28, scv_29, scv_30, scv_31;...",shape=box];

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest99.exe __orio_perftest99.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest99.exe  
{'[1, 6, 2, 3, 6, 1, 1, 0, 25, 1, 0, 18, 0, 0, 0, 1, 0, 1]' : 0.137254}
{'[1, 6, 2, 3, 6, 1, 1, 0, 25, 1, 0, 18, 0, 0, 0, 1, 0, 1]' : 0.137118}
{'[1, 6, 2, 3, 6, 1, 1, 0, 25, 1, 0, 18, 0, 0, 0, 1, 0, 1]' : 0.137326}
{'[1, 6, 2, 3, 6, 1, 1, 0, 25, 1, 0, 18, 0, 0, 0, 1, 0, 1]' : 0.137227}
{'[1, 6, 2, 3, 6, 1, 1, 0, 25, 1, 0, 18, 0, 0, 0, 1, 0, 1]' : 0.13712}
{'[1, 6, 2, 3, 6, 1, 1, 0, 25, 1, 0, 18, 0, 0, 0, 1, 0, 1]' : 0.13725}
{'[1, 6, 2, 3, 6, 1, 1, 0, 25, 1, 0, 18, 0, 0, 0, 1, 0, 1]' : 0.1371}
{'[1, 6, 2, 3, 6, 1, 1, 0, 25, 1, 0, 18, 0, 0, 0, 1, 0, 1]' : 0.137121}
{'[1, 6, 2, 3, 6, 1, 1, 0, 25, 1, 0, 18, 0, 0, 0, 1, 0, 1]' : 0.13736}
{'[1, 6, 2, 3, 6, 1, 1, 0, 25, 1, 0, 18, 0, 0, 0, 1, 0, 1]' : 0.137228}
{'[1, 6, 2, 3, 6, 1, 1, 0, 25, 1, 0, 18, 0, 0, 0, 1, 0, 1]' : 0.139394}
{'[1, 6, 2, 3, 6, 1, 1, 0, 25, 1, 0, 18, 0, 0, 0, 1, 0, 1]' : 0.137123}
{'[1, 6, 2, 3, 6, 1, 1, 0, 25, 1, 0, 18, 0, 0, 0, 1, 0, 1]' : 0.137111}
{'[1, 6, 2, 3, 6, 1, 1, 0, 25, 1, 0, 18, 0, 0, 0, 1, 0, 1]' : 0.137141}
{'[1, 6, 2, 3, 6, 1, 1, 0, 25, 1, 0, 18, 0, 0, 0, 1, 0, 1]' : 0.13713}
{'[1, 6, 2, 3, 6, 1, 1, 0, 25, 1, 0, 18, 0, 0, 0, 1, 0, 1]' : 0.137062}
{'[1, 6, 2, 3, 6, 1, 1, 0, 25, 1, 0, 18, 0, 0, 0, 1, 0, 1]' : 0.137096}
{'[1, 6, 2, 3, 6, 1, 1, 0, 25, 1, 0, 18, 0, 0, 0, 1, 0, 1]' : 0.137148}
{'[1, 6, 2, 3, 6, 1, 1, 0, 25, 1, 0, 18, 0, 0, 0, 1, 0, 1]' : 0.137143}
{'[1, 6, 2, 3, 6, 1, 1, 0, 25, 1, 0, 18, 0, 0, 0, 1, 0, 1]' : 0.137291}
{'[1, 6, 2, 3, 6, 1, 1, 0, 25, 1, 0, 18, 0, 0, 0, 1, 0, 1]' : 0.137144}
{'[1, 6, 2, 3, 6, 1, 1, 0, 25, 1, 0, 18, 0, 0, 0, 1, 0, 1]' : 0.137112}
{'[1, 6, 2, 3, 6, 1, 1, 0, 25, 1, 0, 18, 0, 0, 0, 1, 0, 1]' : 0.137105}
{'[1, 6, 2, 3, 6, 1, 1, 0, 25, 1, 0, 18, 0, 0, 0, 1, 0, 1]' : 0.137118}
{'[1, 6, 2, 3, 6, 1, 1, 0, 25, 1, 0, 18, 0, 0, 0, 1, 0, 1]' : 0.137114}
{'[1, 6, 2, 3, 6, 1, 1, 0, 25, 1, 0, 18, 0, 0, 0, 1, 0, 1]' : 0.138111}
{'[1, 6, 2, 3, 6, 1, 1, 0, 25, 1, 0, 18, 0, 0, 0, 1, 0, 1]' : 0.13712}
{'[1, 6, 2, 3, 6, 1, 1, 0, 25, 1, 0, 18, 0, 0, 0, 1, 0, 1]' : 0.137131}
{'[1, 6, 2, 3, 6, 1, 1, 0, 25, 1, 0, 18, 0, 0, 0, 1, 0, 1]' : 0.137085}
{'[1, 6, 2, 3, 6, 1, 1, 0, 25, 1, 0, 18, 0, 0, 0, 1, 0, 1]' : 0.137077}

out:
 ["{'[1, 6, 2, 3, 6, 1, 1, 0, 25, 1, 0, 18, 0, 0, 0, 1, 0, 1]' : 0.137254}", "{'[1, 6, 2, 3, 6, 1, 1, 0, 25, 1, 0, 18, 0, 0, 0, 1, 0, 1]' : 0.137118}", "{'[1, 6, 2, 3, 6, 1, 1, 0, 25, 1, 0, 18, 0, 0, 0, 1, 0, 1]' : 0.137326}", "{'[1, 6, 2, 3, 6, 1, 1, 0, 25, 1, 0, 18, 0, 0, 0, 1, 0, 1]' : 0.137227}", "{'[1, 6, 2, 3, 6, 1, 1, 0, 25, 1, 0, 18, 0, 0, 0, 1, 0, 1]' : 0.13712}", "{'[1, 6, 2, 3, 6, 1, 1, 0, 25, 1, 0, 18, 0, 0, 0, 1, 0, 1]' : 0.13725}", "{'[1, 6, 2, 3, 6, 1, 1, 0, 25, 1, 0, 18, 0, 0, 0, 1, 0, 1]' : 0.1371}", "{'[1, 6, 2, 3, 6, 1, 1, 0, 25, 1, 0, 18, 0, 0, 0, 1, 0, 1]' : 0.137121}", "{'[1, 6, 2, 3, 6, 1, 1, 0, 25, 1, 0, 18, 0, 0, 0, 1, 0, 1]' : 0.13736}", "{'[1, 6, 2, 3, 6, 1, 1, 0, 25, 1, 0, 18, 0, 0, 0, 1, 0, 1]' : 0.137228}", "{'[1, 6, 2, 3, 6, 1, 1, 0, 25, 1, 0, 18, 0, 0, 0, 1, 0, 1]' : 0.139394}", "{'[1, 6, 2, 3, 6, 1, 1, 0, 25, 1, 0, 18, 0, 0, 0, 1, 0, 1]' : 0.137123}", "{'[1, 6, 2, 3, 6, 1, 1, 0, 25, 1, 0, 18, 0, 0, 0, 1, 0, 1]' : 0.137111}", "{'[1, 6, 2, 3, 6, 1, 1, 0, 25, 1, 0, 18, 0, 0, 0, 1, 0, 1]' : 0.137141}", "{'[1, 6, 2, 3, 6, 1, 1, 0, 25, 1, 0, 18, 0, 0, 0, 1, 0, 1]' : 0.13713}", "{'[1, 6, 2, 3, 6, 1, 1, 0, 25, 1, 0, 18, 0, 0, 0, 1, 0, 1]' : 0.137062}", "{'[1, 6, 2, 3, 6, 1, 1, 0, 25, 1, 0, 18, 0, 0, 0, 1, 0, 1]' : 0.137096}", "{'[1, 6, 2, 3, 6, 1, 1, 0, 25, 1, 0, 18, 0, 0, 0, 1, 0, 1]' : 0.137148}", "{'[1, 6, 2, 3, 6, 1, 1, 0, 25, 1, 0, 18, 0, 0, 0, 1, 0, 1]' : 0.137143}", "{'[1, 6, 2, 3, 6, 1, 1, 0, 25, 1, 0, 1WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = kkk
8, 0, 0, 0, 1, 0, 1]' : 0.137291}", "{'[1, 6, 2, 3, 6, 1, 1, 0, 25, 1, 0, 18, 0, 0, 0, 1, 0, 1]' : 0.137144}", "{'[1, 6, 2, 3, 6, 1, 1, 0, 25, 1, 0, 18, 0, 0, 0, 1, 0, 1]' : 0.137112}", "{'[1, 6, 2, 3, 6, 1, 1, 0, 25, 1, 0, 18, 0, 0, 0, 1, 0, 1]' : 0.137105}", "{'[1, 6, 2, 3, 6, 1, 1, 0, 25, 1, 0, 18, 0, 0, 0, 1, 0, 1]' : 0.137118}", "{'[1, 6, 2, 3, 6, 1, 1, 0, 25, 1, 0, 18, 0, 0, 0, 1, 0, 1]' : 0.137114}", "{'[1, 6, 2, 3, 6, 1, 1, 0, 25, 1, 0, 18, 0, 0, 0, 1, 0, 1]' : 0.138111}", "{'[1, 6, 2, 3, 6, 1, 1, 0, 25, 1, 0, 18, 0, 0, 0, 1, 0, 1]' : 0.13712}", "{'[1, 6, 2, 3, 6, 1, 1, 0, 25, 1, 0, 18, 0, 0, 0, 1, 0, 1]' : 0.137131}", "{'[1, 6, 2, 3, 6, 1, 1, 0, 25, 1, 0, 18, 0, 0, 0, 1, 0, 1]' : 0.137085}", "{'[1, 6, 2, 3, 6, 1, 1, 0, 25, 1, 0, 18, 0, 0, 0, 1, 0, 1]' : 0.137077}"]
returning from 'run': {'[1, 6, 2, 3, 6, 1, 1, 0, 25, 1, 0, 18, 0, 0, 0, 1, 0, 1]': ([0.137254, 0.137118, 0.137326, 0.137227, 0.13712, 0.13725, 0.1371, 0.137121, 0.13736, 0.137228, 0.139394, 0.137123, 0.137111, 0.137141, 0.13713, 0.137062, 0.137096, 0.137148, 0.137143, 0.137291, 0.137144, 0.137112, 0.137105, 0.137118, 0.137114, 0.138111, 0.13712, 0.137131, 0.137085, 0.137077], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.137254, 0.137118, 0.137326, 0.137227, 0.13712, 0.13725, 0.1371, 0.137121, 0.13736, 0.137228, 0.139394, 0.137123, 0.137111, 0.137141, 0.13713, 0.137062, 0.137096, 0.137148, 0.137143, 0.137291, 0.137144, 0.137112, 0.137105, 0.137118, 0.137114, 0.138111, 0.13712, 0.137131, 0.137085, 0.137077], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[1, 6, 2, 3, 6, 1, 1, 0, 25, 1, 0, 18, 0, 0, 0, 1, 0, 1]': ([0.137254, 0.137118, 0.137326, 0.137227, 0.13712, 0.13725, 0.1371, 0.137121, 0.13736, 0.137228, 0.139394, 0.137123, 0.137111, 0.137141, 0.13713, 0.137062, 0.137096, 0.137148, 0.137143, 0.137291, 0.137144, 0.137112, 0.137105, 0.137118, 0.137114, 0.138111, 0.13712, 0.137131, 0.137085, 0.137077], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Slowdown: 1.06344718906
Budget: 96/1
Step 3
 ~ T1_I + T1_J + T1_K + T2_I + T2_K + ACOPY_x + U_K + RT_I + RT_J + RT_K + VEC1 + VEC2
Fixed Factors: {'ACOPY_y': 0, 'U_J': 0, 'U_I': 1, 'T2_J': 6, 'U1_I': 25, 'SCR': 1}
Full data fits on budget, or too few data points for a D-Optimal design. Picking best value.
Measuring design of size 18
Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Design Line: [2, 4, 5, 2, 6, 3, 1, 0, 25, 1, 0, 24, 0, 2, 0, 1, 0, 1]
Fixed Factors: {'ACOPY_y': 0, 'U_J': 0, 'U_I': 1, 'T2_J': 6, 'U1_I': 25, 'SCR': 1}
Testing candidate 1: [2, 4, 5, 2, 6, 3, 1, 0, 25, 1, 0, 24, 0, 2, 0, 1, 0, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	6
        Additions: 		914
        Multiplications: 	348
        Divisions: 		0
        Logical: 		0
        Reads: 			1975
        Writes: 		399
        Comparisons:		21
        Gotos: 			0
        
digraph CFG {
	23733690 [label="23733690  tmp[(i+1)]=scv_59;...",shape=box];
	ForLoop23643147 [label="ForLoop23643147  for (i=0; i<=ny-26; i=i+26) {...",shape=box];
	ForLoop23643147 -> 23642920;
	ForLoop23643147 -> _JOIN_23643147;
	23755282 [label="23755282  register int cbv_3, cbv_4;...",shape=box];
	23712289 [label="23712289  int i;...",shape=box];
	23712289 -> ForLoop23716121;
	_JOIN_23643216 [label="_JOIN_23643216None...",shape=box];
	_JOIN_23643216 -> 23712256;
	23712386 [label="23712386  for (j=jj; j<=min(ny-1,jj+127); j=j+1) ...",shape=box];
	23733672 [label="23733672  double scv_59, scv_60;...",shape=box];
	_JOIN_23714449 [label="_JOIN_23714449None...",shape=box];
	_JOIN_23714449 -> _JOIN_23714451;
	ForLoop23717180 [label="ForLoop23717180  for (jt=jj; jt<=cbv_5; jt=jt+32) {...",shape=box];
	ForLoop23717180 -> 23716279;
	ForLoop23717180 -> _JOIN_23717180;
	23642920 [label="23642920  y[i]=0.0;...",shape=box];
	_JOIN_23716022 [label="_JOIN_23716022None...",shape=box];
	_JOIN_23716022 -> 23755282;
	ForLoop23716022 [label="ForLoop23716022  for (k=kk; k<=cbv_2; k=k+25) {...",shape=box];
	ForLoop23716022 -> 23727650;
	ForLoop23716022 -> _JOIN_23716022;
	23728330 [label="23728330  double scv_58;...",shape=box];
	ForLoop23716121 [label="ForLoop23716121  for (i=ii; i<=min(nx-1,ii+31)-1; i=i+2) {...",shape=box];
	ForLoop23716121 -> 23733672;
	ForLoop23716121 -> _JOIN_23716121;
	ForLoop23717983 [label="ForLoop23717983  for (i=(min(nx-1,ii+31))-(((min(nx-1,ii+31))-(ii)+1)%2)+1; i<=min(nx-1,ii+31); i=i+1) {...",shape=box];
	ForLoop23717983 -> 23742176;
	ForLoop23717983 -> _JOIN_23717983;
	_JOIN_23714447 [label="_JOIN_23714447None...",shape=box];
	_JOIN_23714447 -> _JOIN_23714449;
	_JOIN_23717983 [label="_JOIN_23717983None...",shape=box];
	_JOIN_23717983 -> _JOIN_23717985;
	23742188 [label="23742188  tmp[i]=scv_87;...",shape=box];
	23742188 -> _JOIN_23717983;
	23712256 [label="23712256  double x_copy[128];...",shape=box];
	23738493 [label="23738493  double scv_61, scv_62, scv_63, scv_64, scv_65, scv_66, scv_67, scv_68;...",shape=box];
	ForLoop23716119 [label="ForLoop23716119  for (kk=0; kk<=ny-1; kk=kk+256) {...",shape=box];
	ForLoop23716119 -> 23714465;
	ForLoop23716119 -> _JOIN_23716119;
	23720941 [label="23720941  double scv_1, scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8;...",shape=box];
	_JOIN_23717979 [label="_JOIN_23717979None...",shape=box];
	_JOIN_23717979 -> _JOIN_23717981;
	ForLoop23643216 [label="ForLoop23643216  for (i=ny-((ny-(0))%26); i<=ny-1; i=i+1) ...",shape=box];
	ForLoop23643216 -> 23643215;
	ForLoop23643216 -> _JOIN_23643216;
	ForLoop23714451 [label="ForLoop23714451  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop23714451 -> ForLoop23714449;
	ForLoop23714451 -> _JOIN_23714451;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 23642488;
	_JOIN_23716117 [label="_JOIN_23716117None...",shape=box];
	_JOIN_23716117 -> _JOIN_23716119;
	23717197 [label="23717197  int k;...",shape=box];
	23727650 [label="23727650  double scv_33, scv_34, scv_35, scv_36, scv_37, scv_38, scv_39, scv_40;...",shape=box];
	_JOIN_23717180 [label="_JOIN_23717180None...",shape=box];
	_JOIN_23717180 -> _JOIN_23717182;
	_JOIN_23717183 [label="_JOIN_23717183None...",shape=box];
	_JOIN_23717183 -> ForLoop23717981;
	_JOIN_23717182 [label="_JOIN_23717182None...",shape=box];
	_JOIN_23717182 -> _JOIN_23717183;
	_JOIN_23643147 [label="_JOIN_23643147None...",shape=box];
	_JOIN_23643147 -> ForLoop23643216;
	_JOIN_23716121 [label="_JOIN_23716121None...",shape=box];
	_JOIN_23716121 -> ForLoop23717983;
	ForLoop23716117 [label="ForLoop23716117  for (k=cbv_3; k<=cbv_4; k=k+1) {...",shape=box];
	ForLoop23716117 -> 23728330;
	ForLoop23716117 -> _JOIN_23716117;
	23643215 [label="23643215  y[i]=0.0;...",shape=box];
	23643215 -> _JOIN_23643216;
	_JOIN_23716119 [label="_JOIN_23716119None...",shape=box];
	_JOIN_23716119 -> 23733690;
	23742176 [label="23742176  double scv_87;...",shape=box];
	23714465 [label="23714465  int k;...",shape=box];
	_JOIN_23714451 [label="_JOIN_23714451None...",shape=box];
	_JOIN_23714451 -> ForLoop23716119;
	ForLoop23717985 [label="ForLoop23717985  for (ii=iii; ii<=min(nx-1,iii+96); ii=ii+32) {...",shape=box];
	ForLoop23717985 -> 23712289;
	ForLoop23717985 -> _JOIN_23717985;
	ForLoop23717986 [label="ForLoop23717986  for (iii=0; iii<=nx-1; iii=iii+128) {...",shape=box];
	ForLoop23717986 -> ForLoop23717985;
	ForLoop23717986 -> _JOIN_23717986;
	_JOIN_23717981 [label="_JOIN_23717981None...",shape=box];
	_JOIN_23717981 -> 23742188;
	23642488 [label="23642488  int i;...",shape=box];
	23642488 -> ForLoop23643147;
	23716236 [label="23716236  for (j=jj; j<=min(ny-1,jj+127expected=0.000000
actual=9369846271501.798828
); j=j+1) ...",shape=box];
	_JOIN_23717911 [label="_JOIN_23717911None...",shape=box];
	_JOIN_23717911 -> 23757108;
	ForLoop23717183 [label="ForLoop23717183  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop23717183 -> ForLoop23717182;
	ForLoop23717183 -> _JOIN_23717183;
	ForLoop23717979 [label="ForLoop23717979  for (k=cbv_7; k<=cbv_8; k=k+1) {...",shape=box];
	ForLoop23717979 -> 23739086;
	ForLoop23717979 -> _JOIN_23717979;
	ForLoop23714447 [label="ForLoop23714447  for (jt=jj; jt<=cbv_1; jt=jt+32) {...",shape=box];
	ForLoop23714447 -> 23720941;
	ForLoop23714447 -> _JOIN_23714447;
	ForLoop23717182 [label="ForLoop23717182  for (jj=jjj; jj<=min(ny-1,jjj+1920); jj=jj+128) {...",shape=box];
	ForLoop23717182 -> 23716236;
	ForLoop23717182 -> _JOIN_23717182;
	ForLoop23717981 [label="ForLoop23717981  for (kk=0; kk<=ny-1; kk=kk+256) {...",shape=box];
	ForLoop23717981 -> 23717197;
	ForLoop23717981 -> _JOIN_23717981;
	23739086 [label="23739086  double scv_86;...",shape=box];
	_JOIN_23717985 [label="_JOIN_23717985None...",shape=box];
	_JOIN_23717985 -> _JOIN_23717986;
	23716279 [label="23716279  scv_87=scv_87+A[i*ny+jt]*x_copy[(jt-jj)];...",shape=box];
	_JOIN_23717986 [label="_JOIN_23717986None...",shape=box];
	ForLoop23714449 [label="ForLoop23714449  for (jj=jjj; jj<=min(ny-1,jjj+1920); jj=jj+128) {...",shape=box];
	ForLoop23714449 -> 23712386;
	ForLoop23714449 -> _JOIN_23714449;
	23757108 [label="23757108  register int cbv_7, cbv_8;...",shape=box];
	ForLoop23717911 [label="ForLoop23717911  for (k=kk; k<=cbv_6; k=k+25) {...",shape=box];
	ForLoop23717911 -> 23738493;
	ForLoop23717911 -> _JOIN_23717911;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest100.exe __orio_perftest100.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest100.exe  
{'[2, 4, 5, 2, 6, 3, 1, 0, 25, 1, 0, 24, 0, 2, 0, 1, 0, 1]' : 0.108532}
{'[2, 4, 5, 2, 6, 3, 1, 0, 25, 1, 0, 24, 0, 2, 0, 1, 0, 1]' : 0.108389}
{'[2, 4, 5, 2, 6, 3, 1, 0, 25, 1, 0, 24, 0, 2, 0, 1, 0, 1]' : 0.108415}
{'[2, 4, 5, 2, 6, 3, 1, 0, 25, 1, 0, 24, 0, 2, 0, 1, 0, 1]' : 0.108383}
{'[2, 4, 5, 2, 6, 3, 1, 0, 25, 1, 0, 24, 0, 2, 0, 1, 0, 1]' : 0.10832}
{'[2, 4, 5, 2, 6, 3, 1, 0, 25, 1, 0, 24, 0, 2, 0, 1, 0, 1]' : 0.108347}
{'[2, 4, 5, 2, 6, 3, 1, 0, 25, 1, 0, 24, 0, 2, 0, 1, 0, 1]' : 0.108341}
{'[2, 4, 5, 2, 6, 3, 1, 0, 25, 1, 0, 24, 0, 2, 0, 1, 0, 1]' : 0.108528}
{'[2, 4, 5, 2, 6, 3, 1, 0, 25, 1, 0, 24, 0, 2, 0, 1, 0, 1]' : 0.108506}
{'[2, 4, 5, 2, 6, 3, 1, 0, 25, 1, 0, 24, 0, 2, 0, 1, 0, 1]' : 0.108644}
{'[2, 4, 5, 2, 6, 3, 1, 0, 25, 1, 0, 24, 0, 2, 0, 1, 0, 1]' : 0.108456}
{'[2, 4, 5, 2, 6, 3, 1, 0, 25, 1, 0, 24, 0, 2, 0, 1, 0, 1]' : 0.108386}
{'[2, 4, 5, 2, 6, 3, 1, 0, 25, 1, 0, 24, 0, 2, 0, 1, 0, 1]' : 0.10836}
{'[2, 4, 5, 2, 6, 3, 1, 0, 25, 1, 0, 24, 0, 2, 0, 1, 0, 1]' : 0.108356}
{'[2, 4, 5, 2, 6, 3, 1, 0, 25, 1, 0, 24, 0, 2, 0, 1, 0, 1]' : 0.108339}
{'[2, 4, 5, 2, 6, 3, 1, 0, 25, 1, 0, 24, 0, 2, 0, 1, 0, 1]' : 0.108378}
{'[2, 4, 5, 2, 6, 3, 1, 0, 25, 1, 0, 24, 0, 2, 0, 1, 0, 1]' : 0.108346}
{'[2, 4, 5, 2, 6, 3, 1, 0, 25, 1, 0, 24, 0, 2, 0, 1, 0, 1]' : 0.108395}
{'[2, 4, 5, 2, 6, 3, 1, 0, 25, 1, 0, 24, 0, 2, 0, 1, 0, 1]' : 0.10838}
{'[2, 4, 5, 2, 6, 3, 1, 0, 25, 1, 0, 24, 0, 2, 0, 1, 0, 1]' : 0.108326}
{'[2, 4, 5, 2, 6, 3, 1, 0, 25, 1, 0, 24, 0, 2, 0, 1, 0, 1]' : 0.108431}
{'[2, 4, 5, 2, 6, 3, 1, 0, 25, 1, 0, 24, 0, 2, 0, 1, 0, 1]' : 0.10848}
{'[2, 4, 5, 2, 6, 3, 1, 0, 25, 1, 0, 24, 0, 2, 0, 1, 0, 1]' : 0.108349}
{'[2, 4, 5, 2, 6, 3, 1, 0, 25, 1, 0, 24, 0, 2, 0, 1, 0, 1]' : 0.108315}
{'[2, 4, 5, 2, 6, 3, 1, 0, 25, 1, 0, 24, 0, 2, 0, 1, 0, 1]' : 0.108428}
{'[2, 4, 5, 2, 6, 3, 1, 0, 25, 1, 0, 24, 0, 2, 0, 1, 0, 1]' : 0.108372}
{'[2, 4, 5, 2, 6, 3, 1, 0, 25, 1, 0, 24, 0, 2, 0, 1, 0, 1]' : 0.108315}
{'[2, 4, 5, 2, 6, 3, 1, 0, 25, 1, 0, 24, 0, 2, 0, 1, 0, 1]' : 0.108837}
{'[2, 4, 5, 2, 6, 3, 1, 0, 25, 1, 0, 24, 0, 2, 0, 1, 0, 1]' : 0.108315}
{'[2, 4, 5, 2, 6, 3, 1, 0, 25, 1, 0, 24, 0, 2, 0, 1, 0, 1]' : 0.108363}

out:
 ["{'[2, 4, 5, 2, 6, 3, 1, 0, 25, 1, 0, 24, 0, 2, 0, 1, 0, 1]' : 0.108532}", "{'[2, 4, 5, 2, 6, 3, 1, 0, 25, 1, 0, 24, 0, 2, 0, 1, 0, 1]' : 0.108389}", "{'[2, 4, 5, 2, 6, 3, 1, 0, 25, 1, 0, 24, 0, 2, 0, 1, 0, 1]' : 0.108415}", "{'[2, 4, 5, 2, 6, 3, 1, 0, 25, 1, 0, 24, 0, 2, 0, 1, 0, 1]' : 0.108383}", "{'[2, 4, 5, 2, 6, 3, 1, 0, 25, 1, 0, 24, 0, 2, 0, 1, 0, 1]' : 0.10832}", "{'[2, 4, 5, 2, 6, 3, 1, 0, 25, 1, 0, 24, 0, 2, 0, 1, 0, 1]' : 0.108347}", "{'[2, 4, 5, 2, 6, 3, 1, 0, 25, 1, 0, 24, 0, 2, 0, 1, 0, 1]' : 0.108341}", "{'[2, 4, 5, 2, 6, 3, 1, 0, 25, 1, 0, 24, 0, 2, 0, 1, 0, 1]' : 0.108528}", "{'[2, 4, 5, 2, 6, 3, 1, 0, 25, 1, 0, 24, 0, 2, 0, 1, 0, 1]' : 0.108506}", "{'[2, 4, 5, 2, 6, 3, 1, 0, 25, 1, 0, 24, 0, 2, 0, 1, 0, 1]' : 0.108644}", "{'[2, 4, 5, 2, 6, 3, 1, 0, 25, 1, 0, 24, 0, 2, 0, 1, 0, 1]' : 0.108456}", "{'[2, 4, 5, 2, 6, 3, 1, 0, 25, 1, 0, 24, 0, 2, 0, 1, 0, 1]' : 0.108386}", "{'[2, 4, 5, 2, 6, 3, 1, 0, 25, 1, 0, 24, 0, 2, 0, 1, 0, 1]' : 0.10836}", "{'[2, 4, 5, 2, 6, 3, 1, 0, 25, 1, 0, 24, 0, 2, 0, 1, 0, 1]' : 0.108356}", "{'[2, 4, 5, 2, 6, 3, 1, 0, 25, 1, 0, 24, 0, 2, 0, 1, 0, 1]' : 0.108339}", "{'[2, 4, 5, 2, 6, 3, 1, 0, 25, 1, 0, 24, 0, 2, 0, 1, 0, 1]' : 0.108378}", "{'[2, 4, 5, 2, 6, 3, 1, 0, 25, 1, 0, 24, 0, 2, 0, 1, 0, 1]' : 0.108346}", "{'[2, 4, 5, 2, 6, 3, 1, 0, 25, 1, 0, 24, 0, 2, 0, 1, 0, 1]' : 0.108395}", "{'[2, 4, 5, 2, 6, 3, 1, 0, 25, 1, 0, 24, 0, 2, 0, 1, 0, 1]' : 0.10838}", "{'[2, 4, 5, 2, 6, 3, 1, 0, 25, 1, 0, 24, 0, 2, 0, 1, 0, 1]' : 0.108326}", "{'[2, 4, 5, 2, 6, 3, 1, 0, 25, 1, 0, 24, 0, 2, 0, 1, 0, 1]' : 0.108431}", "{'[2, 4, 5, 2, 6, 3, 1, 0, 25, 1, 0, 24, 0, 2, 0, 1, 0, 1]' : 0.10848}", "{'[2, 4, 5, 2, 6, 3, 1, 0, 25, 1, 0, 24, 0, 2, 0, 1, 0, 1]' : 0.108349}", "{'[2, 4, 5, 2, 6, 3, 1, 0, 25, 1, 0, 24, 0, 2, 0, 1, 0, 1]' : 0.108315}", "{'[2, 4, 5, 2, 6, 3, 1, 0, 25, 1, 0, 24, 0, 2, 0, 1, 0, 1]' : 0.108428}", "{'[2, 4, 5, 2, 6, 3, 1, 0, 25, 1, 0, 24, 0, 2, 0, 1, 0, 1]' : 0.108372}", "{'[2, 4, 5, 2, 6, 3, 1, 0, 25, 1, 0, 24, 0, 2, 0, 1, 0, 1]' : 0.108315}", "{'[2, 4, 5, 2, 6, 3, 1, 0, 25, 1, 0, 24, 0, 2, 0, 1, 0, 1]' : 0.108837}", "{'[2, 4, 5, 2, 6, 3, 1, 0, 25, 1, 0, 24, 0, 2, 0, 1, 0, 1]' : 0.108315}", "{'[2, 4, 5, 2, 6, 3, 1, 0, 25, 1, 0, 24, 0, 2, 0, 1, 0, 1]' : 0.108363}"]
returning from 'run': {'[2, 4, 5, 2, 6, 3, 1, 0, 25, 1, 0, 24, 0, 2, 0, 1, 0, 1]': ([0.108532, 0.108389, 0.108415, 0.108383, 0.10832, 0.108347, 0.108341, 0.108528, 0.108506, 0.108644, 0.108456, 0.108386, 0.10836, 0.108356, 0.108339, 0.108378, 0.108346, 0.108395, 0.10838, 0.108326, 0.108431, 0.10848, 0.108349, 0.108315, 0.108428, 0.108372, 0.108315, 0.108837, 0.108315, 0.108363], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.108532, 0.108389, 0.108415, 0.108383, 0.10832, 0.108347, 0.108341, 0.108528, 0.108506, 0.108644, 0.108456, 0.108386, 0.10836, 0.108356, 0.108339, 0.108378, 0.108346, 0.108395, 0.10838, 0.108326, 0.108431, 0.10848, 0.108349, 0.108315, 0.108428, 0.108372, 0.108315, 0.108837, 0.108315, 0.108363], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[2, 4, 5, 2, 6, 3, 1, 0, 25, 1, 0, 24, 0, 2, 0, 1, 0, 1]': ([0.108532, 0.108389, 0.108415, 0.108383, 0.10832, 0.108347, 0.108341, 0.108528, 0.108506, 0.108644, 0.108456, 0.108386, 0.10836, 0.108356, 0.108339, 0.108378, 0.108346, 0.108395, 0.10838, 0.108326, 0.108431, 0.10848, 0.108349, 0.108315, 0.108428, 0.108372, 0.108315, 0.108837, 0.108315, 0.108363], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [2, 1, 2, 1, 6, 3, 0, 0, 25, 1, 0, 14, 0, 0, 2, 1, 1, 0]
Fixed Factors: {'ACOPY_y': 0, 'U_J': 0, 'U_I': 1, 'T2_J': 6, 'U1_I': 25, 'SCR': 1}
Testing candidate 2: [2, 1, 2, 1, 6, 3, 0, 0, 25, 1, 0, 14, 0, 0, 2, 1, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	6
        Additions: 		823
        Multiplications: 	294
        Divisions: 		0
        Logical: 		0
        Reads: 			1958
        Writes: 		459
        Comparisons:		24
        Gotos: 			0
        
digraph CFG {
	ForLoop23822589 [label="ForLoop23822589  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop23822589 -> ForLoop23822587;
	ForLoop23822589 -> _JOIN_23822589;
	_JOIN_23827329 [label="_JOIN_23827329None...",shape=box];
	23825115 [label="23825115  int k;...",shape=box];
	23825115 -> ForLoop23825639;
	_JOIN_23825045 [label="_JOIN_23825045None...",shape=box];
	_JOIN_23825045 -> ForLoop23825113;
	_JOIN_23827323 [label="_JOIN_23827323None...",shape=box];
	_JOIN_23827323 -> _JOIN_23827324;
	ForLoop23826817 [label="ForLoop23826817  for (kt=kk; kt<=min(ny-1,kk+31)-31; kt=kt+32) {...",shape=box];
	ForLoop23826817 -> 23845279;
	ForLoop23826817 -> _JOIN_23826817;
	_JOIN_23827320 [label="_JOIN_23827320None...",shape=box];
	_JOIN_23827320 -> _JOIN_23827323;
	ForLoop23822585 [label="ForLoop23822585  for (j=jj; j<=min(ny-1,jj+15); j=j+1) {...",shape=box];
	ForLoop23822585 -> 23827421;
	ForLoop23822585 -> _JOIN_23822585;
	ForLoop23822587 [label="ForLoop23822587  for (jj=jjj; jj<=min(ny-1,jjj+2032); jj=jj+16) {...",shape=box];
	ForLoop23822587 -> ForLoop23822585;
	ForLoop23822587 -> _JOIN_23822587;
	_JOIN_23822589 [label="_JOIN_23822589None...",shape=box];
	_JOIN_23822589 -> ForLoop23825718;
	23833012 [label="23833012  double scv_50, scv_51, scv_52, scv_53, scv_54, scv_55, scv_56, scv_57;...",shape=box];
	_JOIN_23827328 [label="_JOIN_23827328None...",shape=box];
	_JOIN_23827328 -> _JOIN_23827329;
	23845279 [label="23845279  double scv_68, scv_69, scv_70, scv_71, scv_72, scv_73, scv_74, scv_75;...",shape=box];
	23758112 [label="23758112  y[i]=0.0;...",shape=box];
	23758112 -> _JOIN_23758113;
	23832214 [label="23832214  double scv_49;...",shape=box];
	23843541 [label="23843541  double scv_66, scv_67;...",shape=box];
	_JOIN_23758044 [label="_JOIN_23758044None...",shape=box];
	_JOIN_23758044 -> 23758388;
	_JOIN_23822585 [label="_JOIN_23822585None...",shape=box];
	_JOIN_23822585 -> _JOIN_23822587;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 23757385;
	_JOIN_23822587 [label="_JOIN_23822587None...",shape=box];
	_JOIN_23822587 -> _JOIN_23822589;
	ForLoop23825843 [label="ForLoop23825843  for (j=jj; j<=min(ny-1,jj+15); j=j+1) {...",shape=box];
	ForLoop23825843 -> 23825842;
	ForLoop23825843 -> _JOIN_23825843;
	ForLoop23825844 [label="ForLoop23825844  for (jj=jjj; jj<=min(ny-1,jjj+2032); jj=jj+16) {...",shape=box];
	ForLoop23825844 -> ForLoop23825843;
	ForLoop23825844 -> _JOIN_23825844;
	ForLoop23825720 [label="ForLoop23825720  for (i=ii; i<=min(nx-1,ii+31)-1; i=i+2) {...",shape=box];
	ForLoop23825720 -> 23843541;
	ForLoop23825720 -> _JOIN_23825720;
	23831833 [label="23831833  double scv_34, scv_35, scv_36, scv_37, scv_38, scv_39, scv_40, scv_41;...",shape=box];
	ForLoop23825045 [label="ForLoop23825045  for (k=kt; k<=min(ny-1,kk+31)-14; k=k+15) {...",shape=box];
	ForLoop23825045 -> 23831833;
	ForLoop23825045 -> _JOIN_23825045;
	ForLoop23758044 [label="ForLoop23758044  for (i=0; i<=cbv_1; i=i+26) {...",shape=box];
	ForLoop23758044 -> 23757817;
	ForLoop23758044 -> _JOIN_23758044;
	_JOIN_23827324 [label="_JOIN_23827324None...",shape=box];
	_JOIN_23827324 -> 23852712;
	23757817 [label="23757817  y[i]=0.0;...",shape=box];
	_JOIN_23827252 [label="_JOIN_23827252None...",shape=box];
	_JOIN_23827252 -> ForLoop23827320;
	ForLoop23827324 [label="ForLoop23827324  for (kkk=0; kkk<=ny-1; kkk=kkk+256) {...",shape=box];
	ForLoop23827324 -> ForLoop23827323;
	ForLoop23827324 -> _JOIN_23827324;
	23852712 [label="23852712  tmp[i]=scv_116;...",shape=box];
	23852712 -> _JOIN_23827326;
	_JOIN_23825720 [label="_JOIN_23825720None...",shape=box];
	_JOIN_23825720 -> ForLoop23827326;
	23824611 [label="23824611  int k;...",shape=box];
	23824611 -> ForLoop23825045;
	ForLoop23758113 [label="ForLoop23758113  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop23758113 -> 23758112;
	ForLoop23758113 -> _JOIN_23758113;
	_JOIN_23826817 [label="_JOIN_23826817None...",shape=box];
	_JOIN_23826817 -> 23826818;
	23846976 [label="23846976  double scv_115;...",shape=box];
	23846595 [label="23846595  double scv_100, scv_101, scv_102, scv_103, scv_104, scv_105, scv_106, scv_107;...",shape=box];
	23822450 [label="23822450  int i;...",shape=box];
	23822450 -> ForLoop23825720;
	ForLoop23825639 [label="ForLoop23825639  for (k=kt; k<=min(ny-1,kk+31)-14; k=k+15) {...",shape=box];
	ForLoop23825639 -> 23833012;
	ForLoop23825639 -> _JOIN_23825639;
	_JOIN_23824610 [label="_JOIN_23824610None...",shape=box];
	_JOIN_23824610 -> 23824611;
	_JOIN_23825113 [label="_JOIN_23825113None...",shape=box];
	_JOIN_23825113 -> 23825115;
	ForLoop23827329 [label="ForLoop23827329  for (iii=0; iii<=nx-1; iii=iii+64) {...",shape=box];
	ForLoop23827329 -> ForLoop23827328;
	ForLoop23827329 -> _JOIN_23827329;
	ForLoop23827328 [label="ForLoop23827328  for (ii=iii; ii<=min(nx-1,iii+32); ii=ii+32) {...",shape=box];
	ForLoop23827328 -> 23822450;
	ForLoop23827328 -> _JOIN_23827328;
	_JOIN_23758113 [label="_JOIN_23758113None...",shape=box];
	_JOIN_23758113 -> 23822417;
	23758388 [label="23758388  register int cbv_2, cbv_3;...",shape=box];
	_JOIN_23825843 [label="_JOIN_23825843None...",shape=box];
	_JOIN_23825843 -> _JOIN_23825844;
	ForLoop23827323 [label="ForLoop23827323  for (kk=kkk; kk<=min(ny-1,kkk+224); kk=kk+32) {...",shape=box];
	ForLoop23827323 -> ForLoop23826817;
	ForLoop23827323 -> _JOIN_23827323;
	23822417 [label="23822417  double x_copy;...",shape=box];
	ForLoop23827320 [label="ForLoop23827320  for (k=(min(ny-1,kk+31))-(((min(ny-1,kk+31))-(kt)+1)%15)+1; k<=min(ny-1,kk+31); k=k+1) {...",shape=box];
	ForLoop23827320 -> 23846976;
	ForLoop23827320 -> _JOIN_23827320;
	ForLoop23827326 [label="ForLoop23827326  for (i=(min(nx-1,ii+31))-(((min(nx-1,ii+31))-(ii)+1)%2)+1; i<=min(nx-1,ii+31); i=i+1) {...",shape=box];
	ForLoop23827326 -> 23852700;
	ForLoop23827326 -> _JOIN_23827326;
	23757385 [label="23757385  int i;...",shape=box];
	ForLoop23825845 [label="ForLoop23825845  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop23825845 -> ForLoop23825844;
	ForLoop23825845 -> _JOIN_23825845;
	ForLoop23825718 [label="ForLoop23825718  for (kkk=0; kkk<=ny-1; kkk=kkk+256) {...",shape=box];
	ForLoop23825718 -> ForLoop23825716;
	ForLoop23825718 -> _JOIN_23825718;
	ForLoop23827252 [label="ForLoop23827252  for (k=kt; k<=min(ny-1,kk+31)-14; k=k+15) {...",shape=box];
	ForLoop23827252 -> 23846595;
	ForLoop23827252 -> _JOIN_23827252;
	23830453 [label="23830453  double scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8, scv_9;...",shape=box];
	23827421 [label="23827421  double scv_1;...",shape=box];
	23826818 [label="23826818  int k;...",shape=box];
	23826818 -> ForLoop23827252;
	ForLoop23825713 [label="ForLoop23825713  for (k=(min(ny-1,kk+31))-(((min(ny-1,kk+31))-(kt)+1)%15)+1; k<=min(ny-1,kk+31); k=k+1) {...",shape=box];
	ForLoop23825713 -> 23833402;
	ForLoop23825713 -> _JOIN_23825713;
	_JOIN_23825844 [label="_JOIN_23825844None...",shape=box];
	_JOIN_23825844 -> _JOIN_23825845;
	_JOIN_23825845 [label="_JOIN_23825845None...",shape=box];
	_JOIN_23825845 -> ForLoop23827324;
	ForLoop23825716 [label="ForLoop23825716  for (kk=kkk; kk<=min(ny-1,kkk+224); kk=kk+32) {...",shape=box];
	ForLoop23825716 -> ForLoop23824610;
	ForLoop23825716 -> _JOIN_23825716;
	23843559 [label="23843559  tmp[(i+1)]=scv_66;...",shape=box];
	23852700 [label="23852700  double scv_116;...",shape=box];
	_JOIN_23825639 [label="_JOIN_23825639None...",shape=box];
	_JOIN_23825639 -> ForLoop23825713;
	_JOIN_23825718 [label="_JOIN_23825718None...",shape=box];
	_JOIN_23825718 -> 23843559;
	ForLoop23824610 [label="ForLoop23824610  for (kt=kk; kt<=min(ny-1,kk+31)-31; kt=kt+32) {...",shape=box];
	ForLoop23824610 -> 23830453;
	ForLoop23824610 -> _JOIN_23824610;
	_JOIN_23827326 [label="_JOIN_23827326None...",shape=box];
	_JOIN_23827326 -> _JOIN_23827328;
	ForLoop23825113 [label="ForLoop23825113  for (k=(min(ny-1,kk+31))-(((min(ny-1,kk+31))-(kt)+1)%15)+1; k<=min(ny-1,kk+31); k=k+1) {...",shape=box];
	ForLoop23825113 -> 23832214;
	ForLoop23825113 -> _JOIN_23825113;
	_JOIN_23825716 [label="_JOIN_23825716None...",shape=box];
	_JOIN_23825716 -> _JOIN_23825718;expected=9369846271501.798828
actual=9369846271501.798828

	_JOIN_23825713 [label="_JOIN_23825713None...",shape=box];
	_JOIN_23825713 -> _JOIN_23825716;
	23825842 [label="23825842  scv_116=scv_116+A[i*ny+j]*x[j];...",shape=box];
	23825842 -> _JOIN_23825843;
	23833402 [label="23833402  double scv_65;...",shape=box];

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest101.exe __orio_perftest101.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest101.exe  
{'[2, 1, 2, 1, 6, 3, 0, 0, 25, 1, 0, 14, 0, 0, 2, 1, 1, 0]' : 0.0906758}
{'[2, 1, 2, 1, 6, 3, 0, 0, 25, 1, 0, 14, 0, 0, 2, 1, 1, 0]' : 0.0903442}
{'[2, 1, 2, 1, 6, 3, 0, 0, 25, 1, 0, 14, 0, 0, 2, 1, 1, 0]' : 0.0902791}
{'[2, 1, 2, 1, 6, 3, 0, 0, 25, 1, 0, 14, 0, 0, 2, 1, 1, 0]' : 0.0903778}
{'[2, 1, 2, 1, 6, 3, 0, 0, 25, 1, 0, 14, 0, 0, 2, 1, 1, 0]' : 0.0903342}
{'[2, 1, 2, 1, 6, 3, 0, 0, 25, 1, 0, 14, 0, 0, 2, 1, 1, 0]' : 0.0903351}
{'[2, 1, 2, 1, 6, 3, 0, 0, 25, 1, 0, 14, 0, 0, 2, 1, 1, 0]' : 0.090436}
{'[2, 1, 2, 1, 6, 3, 0, 0, 25, 1, 0, 14, 0, 0, 2, 1, 1, 0]' : 0.090384}
{'[2, 1, 2, 1, 6, 3, 0, 0, 25, 1, 0, 14, 0, 0, 2, 1, 1, 0]' : 0.090348}
{'[2, 1, 2, 1, 6, 3, 0, 0, 25, 1, 0, 14, 0, 0, 2, 1, 1, 0]' : 0.090493}
{'[2, 1, 2, 1, 6, 3, 0, 0, 25, 1, 0, 14, 0, 0, 2, 1, 1, 0]' : 0.090322}
{'[2, 1, 2, 1, 6, 3, 0, 0, 25, 1, 0, 14, 0, 0, 2, 1, 1, 0]' : 0.0904121}
{'[2, 1, 2, 1, 6, 3, 0, 0, 25, 1, 0, 14, 0, 0, 2, 1, 1, 0]' : 0.090313}
{'[2, 1, 2, 1, 6, 3, 0, 0, 25, 1, 0, 14, 0, 0, 2, 1, 1, 0]' : 0.0903521}
{'[2, 1, 2, 1, 6, 3, 0, 0, 25, 1, 0, 14, 0, 0, 2, 1, 1, 0]' : 0.0903978}
{'[2, 1, 2, 1, 6, 3, 0, 0, 25, 1, 0, 14, 0, 0, 2, 1, 1, 0]' : 0.0903502}
{'[2, 1, 2, 1, 6, 3, 0, 0, 25, 1, 0, 14, 0, 0, 2, 1, 1, 0]' : 0.0906498}
{'[2, 1, 2, 1, 6, 3, 0, 0, 25, 1, 0, 14, 0, 0, 2, 1, 1, 0]' : 0.0913761}
{'[2, 1, 2, 1, 6, 3, 0, 0, 25, 1, 0, 14, 0, 0, 2, 1, 1, 0]' : 0.090312}
{'[2, 1, 2, 1, 6, 3, 0, 0, 25, 1, 0, 14, 0, 0, 2, 1, 1, 0]' : 0.090348}
{'[2, 1, 2, 1, 6, 3, 0, 0, 25, 1, 0, 14, 0, 0, 2, 1, 1, 0]' : 0.090379}
{'[2, 1, 2, 1, 6, 3, 0, 0, 25, 1, 0, 14, 0, 0, 2, 1, 1, 0]' : 0.0903568}
{'[2, 1, 2, 1, 6, 3, 0, 0, 25, 1, 0, 14, 0, 0, 2, 1, 1, 0]' : 0.0903232}
{'[2, 1, 2, 1, 6, 3, 0, 0, 25, 1, 0, 14, 0, 0, 2, 1, 1, 0]' : 0.0902901}
{'[2, 1, 2, 1, 6, 3, 0, 0, 25, 1, 0, 14, 0, 0, 2, 1, 1, 0]' : 0.090322}
{'[2, 1, 2, 1, 6, 3, 0, 0, 25, 1, 0, 14, 0, 0, 2, 1, 1, 0]' : 0.0903671}
{'[2, 1, 2, 1, 6, 3, 0, 0, 25, 1, 0, 14, 0, 0, 2, 1, 1, 0]' : 0.090363}
{'[2, 1, 2, 1, 6, 3, 0, 0, 25, 1, 0, 14, 0, 0, 2, 1, 1, 0]' : 0.0903759}
{'[2, 1, 2, 1, 6, 3, 0, 0, 25, 1, 0, 14, 0, 0, 2, 1, 1, 0]' : 0.0904222}
{'[2, 1, 2, 1, 6, 3, 0, 0, 25, 1, 0, 14, 0, 0, 2, 1, 1, 0]' : 0.0903678}

out:
 ["{'[2, 1, 2, 1, 6, 3, 0, 0, 25, 1, 0, 14, 0, 0, 2, 1, 1, 0]' : 0.0906758}", "{'[2, 1, 2, 1, 6, 3, 0, 0, 25, 1, 0, 14, 0, 0, 2, 1, 1, 0]' : 0.0903442}", "{'[2, 1, 2, 1, 6, 3, 0, 0, 25, 1, 0, 14, 0, 0, 2, 1, 1, 0]' : 0.0902791}", "{'[2, 1, 2, 1, 6, 3, 0, 0, 25, 1, 0, 14, 0, 0, 2, 1, 1, 0]' : 0.0903778}", "{'[2, 1, 2, 1, 6, 3, 0, 0, 25, 1, 0, 14, 0, 0, 2, 1, 1, 0]' : 0.0903342}", "{'[2, 1, 2, 1, 6, 3, 0, 0, 25, 1, 0, 14, 0, 0, 2, 1, 1, 0]' : 0.0903351}", "{'[2, 1, 2, 1, 6, 3, 0, 0, 25, 1, 0, 14, 0, 0, 2, 1, 1, 0]' : 0.090436}", "{'[2, 1, 2, 1, 6, 3, 0, 0, 25, 1, 0, 14, 0, 0, 2, 1, 1, 0]' : 0.090384}", "{'[2, 1, 2, 1, 6, 3, 0, 0, 25, 1, 0, 14, 0, 0, 2, 1, 1, 0]' : 0.090348}", "{'[2, 1, 2, 1, 6, 3, 0, 0, 25, 1, 0, 14, 0, 0, 2, 1, 1, 0]' : 0.090493}", "{'[2, 1, 2, 1, 6, 3, 0, 0, 25, 1, 0, 14, 0, 0, 2, 1, 1, 0]' : 0.090322}", "{'[2, 1, 2, 1, 6, 3, 0, 0, 25, 1, 0, 14, 0, 0, 2, 1, 1, 0]' : 0.0904121}", "{'[2, 1, 2, 1, 6, 3, 0, 0, 25, 1, 0, 14, 0, 0, 2, 1, 1, 0]' : 0.090313}", "{'[2, 1, 2, 1, 6, 3, 0, 0, 25, 1, 0, 14, 0, 0, 2, 1, 1, 0]' : 0.0903521}", "{'[2, 1, 2, 1, 6, 3, 0, 0, 25, 1, 0, 14, 0, 0, 2, 1, 1, 0]' : 0.0903978}", "{'[2, 1, 2, 1, 6, 3, 0, 0, 25, 1, 0, 14, 0, 0, 2, 1, 1, 0]' : 0.0903502}", "{'[2, 1, 2, 1, 6, 3, 0, 0, 25, 1, 0, 14, 0, 0, 2, 1, 1, 0]' : 0.0906498}", "{'[2, 1, 2, 1, 6, 3, 0, 0, 25, 1, 0, 14, 0, 0, 2, 1, 1, 0]' : 0.0913761}", "{'[2, 1, 2, 1, 6, 3, 0, 0, 25, 1, 0, 14, 0, 0, 2, 1, 1, 0]' : 0.090312}", "{'[2, 1, 2, 1, 6, 3, 0, 0, 25, 1, 0, 14, 0, 0, 2, 1, 1, 0]' : 0.090348}", "{'[2, 1, 2, 1, 6, 3, 0, 0, 25, 1, 0, 14, 0, 0, 2, 1, 1, 0]' : 0.090379}", "{'[2, 1, 2, 1, 6, 3, 0, 0, 25, 1, 0, 14, 0, 0, 2, 1, 1, 0]' : 0.0903568}", "{'[2, 1, 2, 1, 6, 3, 0, 0, 25, 1, 0, 14, 0, 0, 2, 1, 1, 0]' : 0.0903232}", "{'[2, 1, 2, 1, 6, 3, 0, 0, 25, 1, 0, 14, 0, 0, 2, 1, 1, 0]' : 0.0902901}", "{'[2, 1, 2, 1, 6, 3, 0, 0, 25, 1, 0, 14, 0, 0, 2, 1, 1, 0]' : 0.090322}", "{'[2, 1, 2, 1, 6, 3, 0, 0, 25, 1, 0, 14, 0, 0, 2, 1, 1, 0]' : 0.0903671}", "{'[2, 1, 2, 1, 6, 3, 0, 0, 25, 1, 0, 14, 0, 0, 2, 1, 1, 0]' : 0.090363}", "{'[2, 1, 2, 1, 6, 3, 0, 0, 25, 1, 0, 14, 0, 0, 2, 1, 1, 0]' : 0.0903759}", "{'[2, 1, 2, 1, 6, 3, 0, 0, 25, 1, 0, 14, 0, 0, 2, 1, 1, 0]' : 0.0904222}", "{'[2, 1, 2, 1, 6, 3, 0, 0, 25, 1, 0, 14, 0, 0, 2, 1, 1, 0]' : 0.0903678}"]
returning from 'run': {'[2, 1, 2, 1, 6, 3, 0, 0, 25, 1, 0, 14, 0, 0, 2, 1, 1, 0]': ([0.0906758, 0.0903442, 0.0902791, 0.0903778, 0.0903342, 0.0903351, 0.090436, 0.090384, 0.090348, 0.090493, 0.090322, 0.0904121, 0.090313, 0.0903521, 0.0903978, 0.0903502, 0.0906498, 0.0913761, 0.090312, 0.090348, 0.090379, 0.0903568, 0.0903232, 0.0902901, 0.090322, 0.0903671, 0.090363, 0.0903759, 0.0904222, 0.0903678], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.0906758, 0.0903442, 0.0902791, 0.0903778, 0.0903342, 0.0903351, 0.090436, 0.090384, 0.090348, 0.090493, 0.090322, 0.0904121, 0.090313, 0.0903521, 0.0903978, 0.0903502, 0.0906498, 0.0913761, 0.090312, 0.090348, 0.090379, 0.0903568, 0.0903232, 0.0902901, 0.090322, 0.0903671, 0.090363, 0.0903759, 0.0904222, 0.0903678], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[2, 1, 2, 1, 6, 3, 0, 0, 25, 1, 0, 14, 0, 0, 2, 1, 1, 0]': ([0.0906758, 0.0903442, 0.0902791, 0.0903778, 0.0903342, 0.0903351, 0.090436, 0.090384, 0.090348, 0.090493, 0.090322, 0.0904121, 0.090313, 0.0903521, 0.0903978, 0.0903502, 0.0906498, 0.0913761, 0.090312, 0.090348, 0.090379, 0.0903568, 0.0903232, 0.0902901, 0.090322, 0.0903671, 0.090363, 0.0903759, 0.0904222, 0.0903678], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [3, 1, 5, 6, 6, 6, 0, 0, 25, 1, 0, 0, 1, 0, 1, 1, 1, 1]
Fixed Factors: {'ACOPY_y': 0, 'U_J': 0, 'U_I': 1, 'T2_J': 6, 'U1_I': 25, 'SCR': 1}
Testing candidate 3: [3, 1, 5, 6, 6, 6, 0, 0, 25, 1, 0, 0, 1, 0, 1, 1, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	28
        Max loop nest depth: 	6
        Additions: 		552
        Multiplications: 	220
        Divisions: 		0
        Logical: 		0
        Reads: 			1271
        Writes: 		287
        Comparisons:		28
        Gotos: 			0
        
digraph CFG {
	_JOIN_23960734 [label="_JOIN_23960734None...",shape=box];
	_JOIN_23960734 -> ForLoop23961179;
	_JOIN_23960732 [label="_JOIN_23960732None...",shape=box];
	_JOIN_23960732 -> 23975086;
	_JOIN_23960730 [label="_JOIN_23960730None...",shape=box];
	_JOIN_23960730 -> _JOIN_23960732;
	23965031 [label="23965031  double scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8, scv_9;...",shape=box];
	_JOIN_23961135 [label="_JOIN_23961135None...",shape=box];
	_JOIN_23961135 -> 23986252;
	_JOIN_23863921 [label="_JOIN_23863921None...",shape=box];
	_JOIN_23863921 -> 23957255;
	23975068 [label="23975068  double scv_29, scv_30;...",shape=box];
	23986194 [label="23986194  register int cbv_8;...",shape=box];
	_JOIN_23960728 [label="_JOIN_23960728None...",shape=box];
	_JOIN_23960728 -> _JOIN_23960730;
	ForLoop23960127 [label="ForLoop23960127  for (jj=jjj; jj<=min(ny-1,jjj+2032); jj=jj+16) {...",shape=box];
	ForLoop23960127 -> 23985325;
	ForLoop23960127 -> _JOIN_23960127;
	ForLoop23960125 [label="ForLoop23960125  for (j=jj; j<=cbv_4; j=j+1) {...",shape=box];
	ForLoop23960125 -> 23971995;
	ForLoop23960125 -> _JOIN_23960125;
	23961545 [label="23961545  double scv_1;...",shape=box];
	ForLoop23960129 [label="ForLoop23960129  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop23960129 -> ForLoop23960127;
	ForLoop23960129 -> _JOIN_23960129;
	_JOIN_23960127 [label="_JOIN_23960127None...",shape=box];
	_JOIN_23960127 -> _JOIN_23960129;
	_JOIN_23960125 [label="_JOIN_23960125None...",shape=box];
	_JOIN_23960125 -> _JOIN_23960127;
	ForLoop23961135 [label="ForLoop23961135  for (kt=kk; kt<=cbv_8; kt=kt+8) {...",shape=box];
	ForLoop23961135 -> 23975648;
	ForLoop23961135 -> _JOIN_23961135;
	_JOIN_23863852 [label="_JOIN_23863852None...",shape=box];
	_JOIN_23863852 -> 23864196;
	_JOIN_23960129 [label="_JOIN_23960129None...",shape=box];
	_JOIN_23960129 -> ForLoop23960732;
	23985891 [label="23985891  register int cbv_7;...",shape=box];
	ForLoop23960662 [label="ForLoop23960662  for (kt=kk; kt<=cbv_5; kt=kt+8) {...",shape=box];
	ForLoop23960662 -> 23972891;
	ForLoop23960662 -> _JOIN_23960662;
	23985258 [label="23985258  register int cbv_3;...",shape=box];
	23977154 [label="23977154  tmp[i]=scv_40;...",shape=box];
	23977154 -> _JOIN_23961179;
	23971669 [label="23971669  double scv_11, scv_12, scv_13, scv_14, scv_15, scv_16, scv_17, scv_18;...",shape=box];
	ForLoop23863852 [label="ForLoop23863852  for (i=0; i<=cbv_1; i=i+26) {...",shape=box];
	ForLoop23863852 -> 23863625;
	ForLoop23863852 -> _JOIN_23863852;
	_JOIN_23960859 [label="_JOIN_23960859None...",shape=box];
	_JOIN_23960859 -> ForLoop23961177;
	23975852 [label="23975852  double scv_39;...",shape=box];
	23985081 [label="23985081  register int cbv_2;...",shape=box];
	23985771 [label="23985771  register int cbv_5;...",shape=box];
	23977142 [label="23977142  double scv_40;...",shape=box];
	ForLoop23961182 [label="ForLoop23961182  for (ii=iii; ii<=min(nx-1,iii+1984); ii=ii+64) {...",shape=box];
	ForLoop23961182 -> ForLoop23959989;
	ForLoop23961182 -> _JOIN_23961182;
	ForLoop23961183 [label="ForLoop23961183  for (iii=0; iii<=nx-1; iii=iii+2048) {...",shape=box];
	ForLoop23961183 -> ForLoop23961182;
	ForLoop23961183 -> _JOIN_23961183;
	_JOIN_23961179 [label="_JOIN_23961179None...",shape=box];
	_JOIN_23961179 -> _JOIN_23961182;
	_JOIN_23961177 [label="_JOIN_23961177None...",shape=box];
	_JOIN_23961177 -> 23977154;
	_JOIN_23961176 [label="_JOIN_23961176None...",shape=box];
	_JOIN_23961176 -> _JOIN_23961177;
	_JOIN_23961174 [label="_JOIN_23961174None...",shape=box];
	_JOIN_23961174 -> _JOIN_23961176;
	ForLoop23863921 [label="ForLoop23863921  for (i=cbv_2; i<=cbv_3; i=i+1) ...",shape=box];
	ForLoop23863921 -> 23863920;
	ForLoop23863921 -> _JOIN_23863921;
	23971681 [label="23971681  tmp[it]=scv_11;...",shape=box];
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 23863193;
	ForLoop23960728 [label="ForLoop23960728  for (k=kt; k<=cbv_6; k=k+1) {...",shape=box];
	ForLoop23960728 -> 23973148;
	ForLoop23960728 -> _JOIN_23960728;
	23864196 [label="23864196  register int cbv_2, cbv_3;...",shape=box];
	23972891 [label="23972891  double scv_20, scv_21, scv_22, scv_23, scv_24, scv_25, scv_26, scv_27;...",shape=box];
	ForLoop23959987 [label="ForLoop23959987  for (kkk=0; kkk<=ny-1; kkk=kkk+2048) {...",shape=box];
	ForLoop23959987 -> ForLoop23959986;
	ForLoop23959987 -> _JOIN_23959987;
	ForLoop23959986 [label="ForLoop23959986  for (kk=kkk; kk<=min(ny-1,kkk+1792); kk=kk+256) {...",shape=box];
	ForLoop23959986 -> 23985081;
	ForLoop23959986 -> _JOIN_23959986;
	ForLoop23959989 [label="ForLoop23959989  for (it=ii; it<=min(nx-1,ii+63)-7; it=it+8) {...",shape=box];
	ForLoop23959989 -> 23971669;
	ForLoop23959989 -> _JOIN_23959989;
	23960856 [label="23960856  scv_40=scv_40+A[i*ny+j]*x[j];...",shape=box];
	23960856 -> _JOIN_23960857;
	ForLoop23959984 [label="ForLoop23959984  for (k=kt; k<=cbv_3; k=k+1) {...",shape=box];
	ForLoop23959984 -> 23965600;
	ForLoop23959984 -> _JOIN_23959984;
	_JOIN_23961182 [label="_JOIN_23961182None...",shape=box];
	_JOIN_23961182 -> _JOIN_23961183;
	_JOIN_23960662 [label="_JOIN_23960662None...",shape=box];
	_JOIN_23960662 -> 23985846;
	23863193 [label="23863193  int i;...",shape=box];
	23975086 [label="23975086  tmp[(i+1)]=scv_29;...",shape=box];
	23983679 [label="23983679  register int cbv_1;...",shape=box];
	23957255 [label="23957255  double x_copy;...",shape=box];
	ForLoop23960734 [label="ForLoop23960734  for (i=it; i<=min(nx-1,ii+63)-1; i=i+2) {...",shape=box];
	ForLoop23960734 -> 23975068;
	ForLoop23960734 -> _JOIN_23960734;
	ForLoop23960732 [label="ForLoop23960732  for (kkk=0; kkk<=ny-1; kkk=kkk+2048) {...",shape=box];
	ForLoop23960732 -> ForLoop23960730;
	ForLoop23960732 -> _JOIN_23960732;
	ForLoop23960730 [label="ForLoop23960730  for (kk=kkk; kk<=min(ny-1,kkk+1792); kk=kk+256) {...",shape=box];
	ForLoop23960730 -> 23985771;
	ForLoop23960730 -> _JOIN_23960730;
	_JOIN_23957589 [label="_JOIN_23957589None...",shape=box];
	_JOIN_23957589 -> ForLoop23959987;
	_JOIN_23957588 [label="_JOIN_23957588None...",shape=box];
	_JOIN_23957588 -> _JOIN_23957589;
	ForLoop23961179 [label="ForLoop23961179  for (i=(min(nx-1,ii+63))-(((min(nx-1,ii+63))-(it)+1)%2)+1; i<=min(nx-1,ii+63); i=i+1) {...",shape=box];
	ForLoop23961179 -> 23977142;
	ForLoop23961179 -> _JOIN_23961179;
	ForLoop23961177 [label="ForLoop23961177  for (kkk=0; kkk<=ny-1; kkk=kkk+2048) {...",shape=box];
	ForLoop23961177 -> ForLoop23961176;
	ForLoop23961177 -> _JOIN_23961177;
	ForLoop23961176 [label="ForLoop23961176  for (kk=kkk; kk<=min(ny-1,kkk+1792); kk=kk+256) {...",shape=box];
	ForLoop23961176 -> 23986194;
	ForLoop23961176 -> _JOIN_23961176;
	ForLoop23961174 [label="ForLoop23961174  for (k=kt; k<=cbv_9; k=k+1) {...",shape=box];
	ForLoop23961174 -> 23975852;
	ForLoop23961174 -> _JOIN_23961174;
	_JOIN_23957587 [label="_JOIN_23957587None...",shape=box];
	_JOIN_23957587 -> _JOIN_23957588;
	23965600 [label="23965600  double scv_10;...",shape=box];
	_JOIN_23959762 [label="_JOIN_23959762None...",shape=box];
	_JOIN_23959762 -> 23985258;
	23985325 [label="23985325  register int cbv_4;...",shape=box];
	23959990 [label="23959990  int i;...",shape=box];
	23959990 -> ForLoop23960734;
	_JOIN_23960858 [label="_JOIN_23960858None...",shape=box];
	_JOIN_23960858 -> _JOIN_23960859;
	_JOIN_23960857 [label="_JOIN_23960857None...",shape=box];
	_JOIN_23960857 -> _JOIN_23960858;
	23985846 [label="23985846  register int cbv_6;...",shape=box];
	23971995 [label="23971995  double scv_19;...",shape=box];
	_JOIN_23961183 [label="_JOIN_23961183None...",shape=box];
	ForLoop23959762 [label="ForLoop23959762  for (kt=kk; kt<=cbv_2; kt=kt+8) {...",shape=box];
	ForLoop23959762 -> 23965031;
	ForLoop23959762 -> _JOIN_23959762;
	23986252 [label="23986252  register int cbv_9;...",shape=box];
	23973148 [label="23973148  double scv_28;...",shape=box];
	ForLoop23957587 [label="ForLoop23957587  for (j=jj; j<=cbv_1; j=j+1) {...",shape=box];
	ForLoop23957587 -> 23961545;
	ForLoop23957587 -> _JOIN_23957587;
	23863625 [label="23863625  y[i]=0.0;...",shape=box];
	23863920 [label="23863920  y[i]=0.0;...",shape=box];
	23863920 -> _JOIN_23863921;
	_JOIN_23959989 [label="_JOIN_23959989None...",shape=box];
	_JOIN_23959989 -> 23959990;
	_JOIN_23959984 [label="_JOIN_23959984None...",shape=box];
	_JOIN_23959984 -> _JOIN_23959986;
	_JOIN_23959987 [label="_JOIN_23959987None...",shape=box];
	_JOIN_23959987 -> 23971681;
	_JOIN_23959986 [label="_JOIN_23959986None...",shape=box];
	_JOIN_23959986 -> _JOIN_23959987;
	23975648 [label="23975648  double scv_31, scv_32, scv_33, scv_34, scv_35, scv_36, scv_37, scv_38;...",shape=box];
	ForLoop23960859 [label="ForLoop23960859  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop23960859 -> ForLoop23960858;
	ForLoop23960859 -> _JOIN_23960859;
	ForLoop23960858 [label="ForLoop23960858  for (jj=jjj; jj<=min(ny-1,jjj+2032); jj=jj+16) {...",shape=box];
	ForLoop23960858 -> 23985891;
	ForLoop23960858 -> _JOIN_23960858;
	ForLoop23960857 [label="ForLoop23960857  for (j=jj; j<=cbv_7; j=j+1) {...",shape=box];
	ForLoop23960857 -> 23960856;
	ForLoop23960857 -> _JOIN_23960857;
	ForLoop23957589 [label="ForLoop23957589  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop23957589 -> ForLoop23957588;
	ForLoop23957589 -> _JOIN_23957589;
	ForLoop23957588 [label="ForLoop23957588  for (jj=jjj; jj<expected=9369846271501.798828
actual=9369846271501.798828
=min(ny-1,jjj+2032); jj=jj+16) {...",shape=box];
	ForLoop23957588 -> 23983679;
	ForLoop23957588 -> _JOIN_23957588;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest102.exe __orio_perftest102.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest102.exe  
{'[3, 1, 5, 6, 6, 6, 0, 0, 25, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.080893}
{'[3, 1, 5, 6, 6, 6, 0, 0, 25, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0805342}
{'[3, 1, 5, 6, 6, 6, 0, 0, 25, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.080493}
{'[3, 1, 5, 6, 6, 6, 0, 0, 25, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0805659}
{'[3, 1, 5, 6, 6, 6, 0, 0, 25, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.080512}
{'[3, 1, 5, 6, 6, 6, 0, 0, 25, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.080482}
{'[3, 1, 5, 6, 6, 6, 0, 0, 25, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0804811}
{'[3, 1, 5, 6, 6, 6, 0, 0, 25, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0804501}
{'[3, 1, 5, 6, 6, 6, 0, 0, 25, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.080466}
{'[3, 1, 5, 6, 6, 6, 0, 0, 25, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.080548}
{'[3, 1, 5, 6, 6, 6, 0, 0, 25, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.080483}
{'[3, 1, 5, 6, 6, 6, 0, 0, 25, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0805559}
{'[3, 1, 5, 6, 6, 6, 0, 0, 25, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0814741}
{'[3, 1, 5, 6, 6, 6, 0, 0, 25, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.080442}
{'[3, 1, 5, 6, 6, 6, 0, 0, 25, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0806279}
{'[3, 1, 5, 6, 6, 6, 0, 0, 25, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0805459}
{'[3, 1, 5, 6, 6, 6, 0, 0, 25, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.080528}
{'[3, 1, 5, 6, 6, 6, 0, 0, 25, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0808041}
{'[3, 1, 5, 6, 6, 6, 0, 0, 25, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.080446}
{'[3, 1, 5, 6, 6, 6, 0, 0, 25, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0804701}
{'[3, 1, 5, 6, 6, 6, 0, 0, 25, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0805709}
{'[3, 1, 5, 6, 6, 6, 0, 0, 25, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0804861}
{'[3, 1, 5, 6, 6, 6, 0, 0, 25, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0805471}
{'[3, 1, 5, 6, 6, 6, 0, 0, 25, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0805521}
{'[3, 1, 5, 6, 6, 6, 0, 0, 25, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0805919}
{'[3, 1, 5, 6, 6, 6, 0, 0, 25, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0805521}
{'[3, 1, 5, 6, 6, 6, 0, 0, 25, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.080514}
{'[3, 1, 5, 6, 6, 6, 0, 0, 25, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0805519}
{'[3, 1, 5, 6, 6, 6, 0, 0, 25, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.080471}
{'[3, 1, 5, 6, 6, 6, 0, 0, 25, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0805271}

out:
 ["{'[3, 1, 5, 6, 6, 6, 0, 0, 25, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.080893}", "{'[3, 1, 5, 6, 6, 6, 0, 0, 25, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0805342}", "{'[3, 1, 5, 6, 6, 6, 0, 0, 25, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.080493}", "{'[3, 1, 5, 6, 6, 6, 0, 0, 25, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0805659}", "{'[3, 1, 5, 6, 6, 6, 0, 0, 25, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.080512}", "{'[3, 1, 5, 6, 6, 6, 0, 0, 25, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.080482}", "{'[3, 1, 5, 6, 6, 6, 0, 0, 25, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0804811}", "{'[3, 1, 5, 6, 6, 6, 0, 0, 25, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0804501}", "{'[3, 1, 5, 6, 6, 6, 0, 0, 25, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.080466}", "{'[3, 1, 5, 6, 6, 6, 0, 0, 25, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.080548}", "{'[3, 1, 5, 6, 6, 6, 0, 0, 25, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.080483}", "{'[3, 1, 5, 6, 6, 6, 0, 0, 25, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0805559}", "{'[3, 1, 5, 6, 6, 6, 0, 0, 25, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0814741}", "{'[3, 1, 5, 6, 6, 6, 0, 0, 25, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.080442}", "{'[3, 1, 5, 6, 6, 6, 0, 0, 25, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0806279}", "{'[3, 1, 5, 6, 6, 6, 0, 0, 25, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0805459}", "{'[3, 1, 5, 6, 6, 6, 0, 0, 25, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.080528}", "{'[3, 1, 5, 6, 6, 6, 0, 0, 25, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0808041}", "{'[3, 1, 5, 6, 6, 6, 0, 0, 25, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.080446}", "{'[3, 1, 5, 6, 6, 6, 0, 0, 25, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0804701}", "{'[3, 1, 5, 6, 6, 6, 0, 0, 25, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0805709}", "{'[3, 1, 5, 6, 6, 6, 0, 0, 25, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0804861}", "{'[3, 1, 5, 6, 6, 6, 0, 0, 25, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0805471}", "{'[3, 1, 5, 6, 6, 6, 0, 0, 25, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0805521}", "{'[3, 1, 5, 6, 6, 6, 0, 0, 25, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0805919}", "{'[3, 1, 5, 6, 6, 6, 0, 0, 25, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0805521}", "{'[3, 1, 5, 6, 6, 6, 0, 0, 25, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.080514}", "{'[3, 1, 5, 6, 6, 6, 0, 0, 25, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0805519}", "{'[3, 1, 5, 6, 6, 6, 0, 0, 25, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.080471}", "{'[3, 1, 5, 6, 6, 6, 0, 0, 25, 1, 0, 0, 1, 0, 1, 1, 1, 1]' : 0.0805271}"]
returning from 'run': {'[3, 1, 5, 6, 6, 6, 0, 0, 25, 1, 0, 0, 1, 0, 1, 1, 1, 1]': ([0.080893, 0.0805342, 0.080493, 0.0805659, 0.080512, 0.080482, 0.0804811, 0.0804501, 0.080466, 0.080548, 0.080483, 0.0805559, 0.0814741, 0.080442, 0.0806279, 0.0805459, 0.080528, 0.0808041, 0.080446, 0.0804701, 0.0805709, 0.0804861, 0.0805471, 0.0805521, 0.0805919, 0.0805521, 0.080514, 0.0805519, 0.080471, 0.0805271], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.080893, 0.0805342, 0.080493, 0.0805659, 0.080512, 0.080482, 0.0804811, 0.0804501, 0.080466, 0.080548, 0.080483, 0.0805559, 0.0814741, 0.080442, 0.0806279, 0.0805459, 0.080528, 0.0808041, 0.080446, 0.0804701, 0.0805709, 0.0804861, 0.0805471, 0.0805521, 0.0805919, 0.0805521, 0.080514, 0.0805519, 0.080471, 0.0805271], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[3, 1, 5, 6, 6, 6, 0, 0, 25, 1, 0, 0, 1, 0, 1, 1, 1, 1]': ([0.080893, 0.0805342, 0.080493, 0.0805659, 0.080512, 0.080482, 0.0804811, 0.0804501, 0.080466, 0.080548, 0.080483, 0.0805559, 0.0814741, 0.080442, 0.0806279, 0.0805459, 0.080528, 0.0808041, 0.080446, 0.0804701, 0.0805709, 0.0804861, 0.0805471, 0.0805521, 0.0805919, 0.0805521, 0.080514, 0.0805519, 0.080471, 0.0805271], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [3, 4, 4, 4, 6, 0, 0, 0, 25, 1, 0, 27, 0, 0, 2, 1, 1, 1]
Fixed Factors: {'ACOPY_y': 0, 'U_J': 0, 'U_I': 1, 'T2_J': 6, 'U1_I': 25, 'SCR': 1}
Testing candidate 4: [3, 4, 4, 4, 6, 0, 0, 0, 25, 1, 0, 27, 0, 0, 2, 1, 1, 1]
Length of requested configs: 1
Result was on Database, Returning Now
My perf_costs: {'[3, 4, 4, 4, 6, 0, 0, 0, 25, 1, 0, 27, 0, 0, 2, 1, 1, 1]': ([0.08407009666666669, 0.08407009666666669, 0.08407009666666669, 0.08407009666666669, 0.08407009666666669, 0.08407009666666669, 0.08407009666666669, 0.08407009666666669, 0.08407009666666669, 0.08407009666666669, 0.08407009666666669, 0.08407009666666669, 0.08407009666666669, 0.08407009666666669, 0.08407009666666669, 0.08407009666666669, 0.08407009666666669, 0.08407009666666669, 0.08407009666666669, 0.08407009666666669, 0.08407009666666669, 0.08407009666666669, 0.08407009666666669, 0.08407009666666669, 0.08407009666666669, 0.08407009666666669, 0.08407009666666669, 0.08407009666666669, 0.08407009666666669, 0.08407009666666669], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [2, 4, 0, 5, 6, 5, 0, 0, 25, 1, 0, 13, 2, 0, 0, 1, 0, 1]
Fixed Factors: {'ACOPY_y': 0, 'U_J': 0, 'U_I': 1, 'T2_J': 6, 'U1_I': 25, 'SCR': 1}
Testing candidate 5: [2, 4, 0, 5, 6, 5, 0, 0, 25, 1, 0, 13, 2, 0, 0, 1, 0, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	25
        Max loop nest depth: 	6
        Additions: 		2364
        Multiplications: 	1120
        Divisions: 		0
        Logical: 		0
        Reads: 			4664
        Writes: 		815
        Comparisons:		25
        Gotos: 			0
        
digraph CFG {
	24173218 [label="24173218  double scv_1;...",shape=box];
	ForLoop24171280 [label="ForLoop24171280  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop24171280 -> ForLoop24171279;
	ForLoop24171280 -> _JOIN_24171280;
	ForLoop24170167 [label="ForLoop24170167  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop24170167 -> ForLoop24170165;
	ForLoop24170167 -> _JOIN_24170167;
	_JOIN_24169148 [label="_JOIN_24169148None...",shape=box];
	_JOIN_24169148 -> 24264123;
	_JOIN_24171153 [label="_JOIN_24171153None...",shape=box];
	_JOIN_24171153 -> 24227172;
	ForLoop24154220 [label="ForLoop24154220  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop24154220 -> ForLoop24154219;
	ForLoop24154220 -> _JOIN_24154220;
	24265174 [label="24265174  register int cbv_9;...",shape=box];
	24265094 [label="24265094  register int cbv_7, cbv_8;...",shape=box];
	24225066 [label="24225066  double scv_64;...",shape=box];
	ForLoop24171279 [label="ForLoop24171279  for (jj=jjj; jj<=min(ny-1,jjj+1920); jj=jj+128) {...",shape=box];
	ForLoop24171279 -> 24265174;
	ForLoop24171279 -> _JOIN_24171279;
	_JOIN_24171278 [label="_JOIN_24171278None...",shape=box];
	_JOIN_24171278 -> _JOIN_24171279;
	24195318 [label="24195318  double scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8, scv_9;...",shape=box];
	ForLoop24171770 [label="ForLoop24171770  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop24171770 -> 24171294;
	ForLoop24171770 -> _JOIN_24171770;
	24228350 [label="24228350  double scv_81;...",shape=box];
	24229709 [label="24229709  double scv_82;...",shape=box];
	ForLoop24169148 [label="ForLoop24169148  for (k=kkk; k<=cbv_2; k=k+14) {...",shape=box];
	ForLoop24169148 -> 24195318;
	ForLoop24169148 -> _JOIN_24169148;
	24197663 [label="24197663  double scv_16;...",shape=box];
	_JOIN_24171776 [label="_JOIN_24171776None...",shape=box];
	_JOIN_24170165 [label="_JOIN_24170165None...",shape=box];
	_JOIN_24170165 -> _JOIN_24170167;
	_JOIN_24170163 [label="_JOIN_24170163None...",shape=box];
	_JOIN_24170163 -> _JOIN_24170165;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 23986533;
	_JOIN_24171768 [label="_JOIN_24171768None...",shape=box];
	_JOIN_24171768 -> _JOIN_24171770;
	24227990 [label="24227990  double scv_67, scv_68, scv_69, scv_70, scv_71, scv_72, scv_73, scv_74;...",shape=box];
	_JOIN_24171700 [label="_JOIN_24171700None...",shape=box];
	_JOIN_24171700 -> 24265762;
	_JOIN_24170023 [label="_JOIN_24170023None...",shape=box];
	_JOIN_24170023 -> _JOIN_24170025;
	_JOIN_24170025 [label="_JOIN_24170025None...",shape=box];
	_JOIN_24170025 -> 24221988;
	ForLoop24171278 [label="ForLoop24171278  for (j=jj; j<=cbv_9; j=j+1) {...",shape=box];
	ForLoop24171278 -> 24171277;
	ForLoop24171278 -> _JOIN_24171278;
	_JOIN_24170027 [label="_JOIN_24170027None...",shape=box];
	_JOIN_24170027 -> 24170028;
	_JOIN_24154219 [label="_JOIN_24154219None...",shape=box];
	_JOIN_24154219 -> _JOIN_24154220;
	_JOIN_24154218 [label="_JOIN_24154218None...",shape=box];
	_JOIN_24154218 -> _JOIN_24154219;
	24170181 [label="24170181  int k;...",shape=box];
	24170028 [label="24170028  int i;...",shape=box];
	24170028 -> ForLoop24171155;
	23987260 [label="23987260  y[i]=0.0;...",shape=box];
	23987260 -> _JOIN_23987261;
	24221988 [label="24221988  tmp[(it+21)]=scv_17;...",shape=box];
	ForLoop24171768 [label="ForLoop24171768  for (k=cbv_11; k<=cbv_12; k=k+1) {...",shape=box];
	ForLoop24171768 -> 24228350;
	ForLoop24171768 -> _JOIN_24171768;
	24265762 [label="24265762  register int cbv_11, cbv_12;...",shape=box];
	_JOIN_24170167 [label="_JOIN_24170167None...",shape=box];
	_JOIN_24170167 -> ForLoop24171153;
	_JOIN_23987261 [label="_JOIN_23987261None...",shape=box];
	_JOIN_23987261 -> 24153190;
	24171294 [label="24171294  int k;...",shape=box];
	ForLoop24171772 [label="ForLoop24171772  for (i=(min(nx-1,ii+31))-(((min(nx-1,ii+31))-(it)+1)%2)+1; i<=min(nx-1,ii+31); i=i+1) {...",shape=box];
	ForLoop24171772 -> 24229709;
	ForLoop24171772 -> _JOIN_24171772;
	_JOIN_24171151 [label="_JOIN_24171151None...",shape=box];
	_JOIN_24171151 -> _JOIN_24171153;
	_JOIN_23987192 [label="_JOIN_23987192None...",shape=box];
	_JOIN_23987192 -> ForLoop23987261;
	ForLoop24171776 [label="ForLoop24171776  for (iii=0; iii<=nx-1; iii=iii+1024) {...",shape=box];
	ForLoop24171776 -> ForLoop24171775;
	ForLoop24171776 -> _JOIN_24171776;
	ForLoop24171775 [label="ForLoop24171775  for (ii=iii; ii<=min(nx-1,iii+992); ii=ii+32) {...",shape=box];
	ForLoop24171775 -> ForLoop24170027;
	ForLoop24171775 -> _JOIN_24171775;
	24154234 [label="24154234  int k;...",shape=box];
	_JOIN_24171155 [label="_JOIN_24171155None...",shape=box];
	_JOIN_24171155 -> ForLoop24171772;
	24223211 [label="24223211  double scv_49;...",shape=box];
	ForLoop24154219 [label="ForLoop24154219  for (jj=jjj; jj<=min(ny-1,jjj+1920); jj=jj+128) {...",shape=box];
	ForLoop24154219 -> 24254824;
	ForLoop24154219 -> _JOIN_24154219;
	ForLoop24154218 [label="ForLoop24154218  for (j=jj; j<=cbv_1; j=j+1) {...",shape=box];
	ForLoop24154218 -> 24173218;
	ForLoop24154218 -> _JOIN_24154218;
	ForLoop24170165 [label="ForLoop24170165  for (jj=jjj; jj<=min(ny-1,jjj+1920); jj=jj+128) {...",shape=box];
	ForLoop24170165 -> 24264225;
	ForLoop24170165 -> _JOIN_24170165;
	ForLoop23987261 [label="ForLoop23987261  for (i=ny-((ny-(0))%26); i<=ny-1; i=i+1) ...",shape=box];
	ForLoop23987261 -> 23987260;
	ForLoop23987261 -> _JOIN_23987261;
	24221970 [label="24221970  double scv_17, scv_18, scv_19, scv_20, scv_21, scv_22, scv_23, scv_24;...",shape=box];
	ForLoop24170163 [label="ForLoop24170163  for (j=jj; j<=cbv_5; j=j+1) {...",shape=box];
	ForLoop24170163 -> 24223211;
	ForLoop24170163 -> _JOIN_24170163;
	24171277 [label="24171277  scv_82=scv_82+A[i*ny+j]*x[j];...",shape=box];
	24171277 -> _JOIN_24171278;
	_JOIN_24171280 [label="_JOIN_24171280None...",shape=box];
	_JOIN_24171280 -> ForLoop24171770;
	_JOIN_24171770 [label="_JOIN_24171770None...",shape=box];
	_JOIN_24171770 -> 24229721;
	_JOIN_24154220 [label="_JOIN_24154220None...",shape=box];
	_JOIN_24154220 -> ForLoop24170025;
	ForLoop23987192 [label="ForLoop23987192  for (i=0; i<=ny-26; i=i+26) {...",shape=box];
	ForLoop23987192 -> 23986965;
	ForLoop23987192 -> _JOIN_23987192;
	ForLoop24170025 [label="ForLoop24170025  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop24170025 -> 24154234;
	ForLoop24170025 -> _JOIN_24170025;
	_JOIN_24171775 [label="_JOIN_24171775None...",shape=box];
	_JOIN_24171775 -> _JOIN_24171776;
	ForLoop24170027 [label="ForLoop24170027  for (it=ii; it<=min(nx-1,ii+31)-31; it=it+32) {...",shape=box];
	ForLoop24170027 -> 24221970;
	ForLoop24170027 -> _JOIN_24170027;
	_JOIN_24171056 [label="_JOIN_24171056None...",shape=box];
	_JOIN_24171056 -> 24265094;
	_JOIN_24171772 [label="_JOIN_24171772None...",shape=box];
	_JOIN_24171772 -> _JOIN_24171775;
	24264123 [label="24264123  register int cbv_3, cbv_4;...",shape=box];
	ForLoop24170023 [label="ForLoop24170023  for (k=cbv_3; k<=cbv_4; k=k+1) {...",shape=box];
	ForLoop24170023 -> 24197663;
	ForLoop24170023 -> _JOIN_24170023;
	ForLoop24171700 [label="ForLoop24171700  for (k=kkk; k<=cbv_10; k=k+14) {...",shape=box];
	ForLoop24171700 -> 24227990;
	ForLoop24171700 -> _JOIN_24171700;
	24227154 [label="24227154  double scv_65, scv_66;...",shape=box];
	24153190 [label="24153190  double x_copy;...",shape=box];
	ForLoop24171056 [label="ForLoop24171056  for (k=kkk; k<=cbv_6; k=k+14) {...",shape=box];
	ForLoop24171056 -> 24224641;
	ForLoop24171056 -> _JOIN_24171056;
	23986965 [label="23986965  y[i]=0.0;...",shape=box];
	24229721 [label="24229721  tmp[i]=scv_82;...",shape=box];
	24229721 -> _JOIN_24171772;
	_JOIN_24171279 [label="_JOIN_24171279None...",shape=box];
	_JOIN_24171279 -> _JOIN_24171280;
	24227172 [label="24227172  tmp[(i+1)]=scv_65;...",shape=box];
	23986533 [label="23986533  int i;...",shape=box];
	23986533 -> ForLoop23987192;
	24224641 [label="24224641  double scv_50, scv_51, scv_52, scv_53, scv_54, scv_55, scv_56, scv_57;...",shape=box];
	ForLoop24171155 [label="ForLoop24171155  for (i=it; i<=min(nx-1,ii+31)-1; i=i+2) {...",shape=box];
	ForLoop24171155 -> 24227154;
	ForLoop24171155 -> _JOIN_24171155;
	24254824 [label="24254824  register int cbv_1;...",shape=box];
	ForLoop24171153 [label="ForLoop24171153  for (kkk=0; kkk<=ny-1; kkk=kkk+1024) {...",shape=box];
	ForLoop24171153 -> 24170181;
	ForLoop24171153 -> _JOIN_241expected=9369846271501.798828
actual=9369846271501.798828
71153;
	ForLoop24171151 [label="ForLoop24171151  for (k=cbv_7; k<=cbv_8; k=k+1) {...",shape=box];
	ForLoop24171151 -> 24225066;
	ForLoop24171151 -> _JOIN_24171151;
	24264225 [label="24264225  register int cbv_5;...",shape=box];

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest103.exe __orio_perftest103.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest103.exe  
{'[2, 4, 0, 5, 6, 5, 0, 0, 25, 1, 0, 13, 2, 0, 0, 1, 0, 1]' : 0.209655}
{'[2, 4, 0, 5, 6, 5, 0, 0, 25, 1, 0, 13, 2, 0, 0, 1, 0, 1]' : 0.20937}
{'[2, 4, 0, 5, 6, 5, 0, 0, 25, 1, 0, 13, 2, 0, 0, 1, 0, 1]' : 0.209092}
{'[2, 4, 0, 5, 6, 5, 0, 0, 25, 1, 0, 13, 2, 0, 0, 1, 0, 1]' : 0.20944}
{'[2, 4, 0, 5, 6, 5, 0, 0, 25, 1, 0, 13, 2, 0, 0, 1, 0, 1]' : 0.208812}
{'[2, 4, 0, 5, 6, 5, 0, 0, 25, 1, 0, 13, 2, 0, 0, 1, 0, 1]' : 0.209152}
{'[2, 4, 0, 5, 6, 5, 0, 0, 25, 1, 0, 13, 2, 0, 0, 1, 0, 1]' : 0.209131}
{'[2, 4, 0, 5, 6, 5, 0, 0, 25, 1, 0, 13, 2, 0, 0, 1, 0, 1]' : 0.208723}
{'[2, 4, 0, 5, 6, 5, 0, 0, 25, 1, 0, 13, 2, 0, 0, 1, 0, 1]' : 0.208994}
{'[2, 4, 0, 5, 6, 5, 0, 0, 25, 1, 0, 13, 2, 0, 0, 1, 0, 1]' : 0.209564}
{'[2, 4, 0, 5, 6, 5, 0, 0, 25, 1, 0, 13, 2, 0, 0, 1, 0, 1]' : 0.208997}
{'[2, 4, 0, 5, 6, 5, 0, 0, 25, 1, 0, 13, 2, 0, 0, 1, 0, 1]' : 0.20942}
{'[2, 4, 0, 5, 6, 5, 0, 0, 25, 1, 0, 13, 2, 0, 0, 1, 0, 1]' : 0.208987}
{'[2, 4, 0, 5, 6, 5, 0, 0, 25, 1, 0, 13, 2, 0, 0, 1, 0, 1]' : 0.208874}
{'[2, 4, 0, 5, 6, 5, 0, 0, 25, 1, 0, 13, 2, 0, 0, 1, 0, 1]' : 0.209423}
{'[2, 4, 0, 5, 6, 5, 0, 0, 25, 1, 0, 13, 2, 0, 0, 1, 0, 1]' : 0.208926}
{'[2, 4, 0, 5, 6, 5, 0, 0, 25, 1, 0, 13, 2, 0, 0, 1, 0, 1]' : 0.208927}
{'[2, 4, 0, 5, 6, 5, 0, 0, 25, 1, 0, 13, 2, 0, 0, 1, 0, 1]' : 0.209417}
{'[2, 4, 0, 5, 6, 5, 0, 0, 25, 1, 0, 13, 2, 0, 0, 1, 0, 1]' : 0.208935}
{'[2, 4, 0, 5, 6, 5, 0, 0, 25, 1, 0, 13, 2, 0, 0, 1, 0, 1]' : 0.209229}
{'[2, 4, 0, 5, 6, 5, 0, 0, 25, 1, 0, 13, 2, 0, 0, 1, 0, 1]' : 0.209324}
{'[2, 4, 0, 5, 6, 5, 0, 0, 25, 1, 0, 13, 2, 0, 0, 1, 0, 1]' : 0.209283}
{'[2, 4, 0, 5, 6, 5, 0, 0, 25, 1, 0, 13, 2, 0, 0, 1, 0, 1]' : 0.209157}
{'[2, 4, 0, 5, 6, 5, 0, 0, 25, 1, 0, 13, 2, 0, 0, 1, 0, 1]' : 0.209554}
{'[2, 4, 0, 5, 6, 5, 0, 0, 25, 1, 0, 13, 2, 0, 0, 1, 0, 1]' : 0.209276}
{'[2, 4, 0, 5, 6, 5, 0, 0, 25, 1, 0, 13, 2, 0, 0, 1, 0, 1]' : 0.209423}
{'[2, 4, 0, 5, 6, 5, 0, 0, 25, 1, 0, 13, 2, 0, 0, 1, 0, 1]' : 0.209023}
{'[2, 4, 0, 5, 6, 5, 0, 0, 25, 1, 0, 13, 2, 0, 0, 1, 0, 1]' : 0.209413}
{'[2, 4, 0, 5, 6, 5, 0, 0, 25, 1, 0, 13, 2, 0, 0, 1, 0, 1]' : 0.209028}
{'[2, 4, 0, 5, 6, 5, 0, 0, 25, 1, 0, 13, 2, 0, 0, 1, 0, 1]' : 0.209179}

out:
 ["{'[2, 4, 0, 5, 6, 5, 0, 0, 25, 1, 0, 13, 2, 0, 0, 1, 0, 1]' : 0.209655}", "{'[2, 4, 0, 5, 6, 5, 0, 0, 25, 1, 0, 13, 2, 0, 0, 1, 0, 1]' : 0.20937}", "{'[2, 4, 0, 5, 6, 5, 0, 0, 25, 1, 0, 13, 2, 0, 0, 1, 0, 1]' : 0.209092}", "{'[2, 4, 0, 5, 6, 5, 0, 0, 25, 1, 0, 13, 2, 0, 0, 1, 0, 1]' : 0.20944}", "{'[2, 4, 0, 5, 6, 5, 0, 0, 25, 1, 0, 13, 2, 0, 0, 1, 0, 1]' : 0.208812}", "{'[2, 4, 0, 5, 6, 5, 0, 0, 25, 1, 0, 13, 2, 0, 0, 1, 0, 1]' : 0.209152}", "{'[2, 4, 0, 5, 6, 5, 0, 0, 25, 1, 0, 13, 2, 0, 0, 1, 0, 1]' : 0.209131}", "{'[2, 4, 0, 5, 6, 5, 0, 0, 25, 1, 0, 13, 2, 0, 0, 1, 0, 1]' : 0.208723}", "{'[2, 4, 0, 5, 6, 5, 0, 0, 25, 1, 0, 13, 2, 0, 0, 1, 0, 1]' : 0.208994}", "{'[2, 4, 0, 5, 6, 5, 0, 0, 25, 1, 0, 13, 2, 0, 0, 1, 0, 1]' : 0.209564}", "{'[2, 4, 0, 5, 6, 5, 0, 0, 25, 1, 0, 13, 2, 0, 0, 1, 0, 1]' : 0.208997}", "{'[2, 4, 0, 5, 6, 5, 0, 0, 25, 1, 0, 13, 2, 0, 0, 1, 0, 1]' : 0.20942}", "{'[2, 4, 0, 5, 6, 5, 0, 0, 25, 1, 0, 13, 2, 0, 0, 1, 0, 1]' : 0.208987}", "{'[2, 4, 0, 5, 6, 5, 0, 0, 25, 1, 0, 13, 2, 0, 0, 1, 0, 1]' : 0.208874}", "{'[2, 4, 0, 5, 6, 5, 0, 0, 25, 1, 0, 13, 2, 0, 0, 1, 0, 1]' : 0.209423}", "{'[2, 4, 0, 5, 6, 5, 0, 0, 25, 1, 0, 13, 2, 0, 0, 1, 0, 1]' : 0.208926}", "{'[2, 4, 0, 5, 6, 5, 0, 0, 25, 1, 0, 13, 2, 0, 0, 1, 0, 1]' : 0.208927}", "{'[2, 4, 0, 5, 6, 5, 0, 0, 25, 1, 0, 13, 2, 0, 0, 1, 0, 1]' : 0.209417}", "{'[2, 4, 0, 5, 6, 5, 0, 0, 25, 1, 0, 13, 2, 0, 0, 1, 0, 1]' : 0.208935}", "{'[2, 4, 0, 5, 6, 5, 0, 0, 25, 1, 0, 13, 2, 0, 0, 1, 0, 1]' : 0.209229}", "{'[2, 4, 0, 5, 6, 5, 0, 0, 25, 1, WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = kkk
0, 13, 2, 0, 0, 1, 0, 1]' : 0.209324}", "{'[2, 4, 0, 5, 6, 5, 0, 0, 25, 1, 0, 13, 2, 0, 0, 1, 0, 1]' : 0.209283}", "{'[2, 4, 0, 5, 6, 5, 0, 0, 25, 1, 0, 13, 2, 0, 0, 1, 0, 1]' : 0.209157}", "{'[2, 4, 0, 5, 6, 5, 0, 0, 25, 1, 0, 13, 2, 0, 0, 1, 0, 1]' : 0.209554}", "{'[2, 4, 0, 5, 6, 5, 0, 0, 25, 1, 0, 13, 2, 0, 0, 1, 0, 1]' : 0.209276}", "{'[2, 4, 0, 5, 6, 5, 0, 0, 25, 1, 0, 13, 2, 0, 0, 1, 0, 1]' : 0.209423}", "{'[2, 4, 0, 5, 6, 5, 0, 0, 25, 1, 0, 13, 2, 0, 0, 1, 0, 1]' : 0.209023}", "{'[2, 4, 0, 5, 6, 5, 0, 0, 25, 1, 0, 13, 2, 0, 0, 1, 0, 1]' : 0.209413}", "{'[2, 4, 0, 5, 6, 5, 0, 0, 25, 1, 0, 13, 2, 0, 0, 1, 0, 1]' : 0.209028}", "{'[2, 4, 0, 5, 6, 5, 0, 0, 25, 1, 0, 13, 2, 0, 0, 1, 0, 1]' : 0.209179}"]
returning from 'run': {'[2, 4, 0, 5, 6, 5, 0, 0, 25, 1, 0, 13, 2, 0, 0, 1, 0, 1]': ([0.209655, 0.20937, 0.209092, 0.20944, 0.208812, 0.209152, 0.209131, 0.208723, 0.208994, 0.209564, 0.208997, 0.20942, 0.208987, 0.208874, 0.209423, 0.208926, 0.208927, 0.209417, 0.208935, 0.209229, 0.209324, 0.209283, 0.209157, 0.209554, 0.209276, 0.209423, 0.209023, 0.209413, 0.209028, 0.209179], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.209655, 0.20937, 0.209092, 0.20944, 0.208812, 0.209152, 0.209131, 0.208723, 0.208994, 0.209564, 0.208997, 0.20942, 0.208987, 0.208874, 0.209423, 0.208926, 0.208927, 0.209417, 0.208935, 0.209229, 0.209324, 0.209283, 0.209157, 0.209554, 0.209276, 0.209423, 0.209023, 0.209413, 0.209028, 0.209179], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[2, 4, 0, 5, 6, 5, 0, 0, 25, 1, 0, 13, 2, 0, 0, 1, 0, 1]': ([0.209655, 0.20937, 0.209092, 0.20944, 0.208812, 0.209152, 0.209131, 0.208723, 0.208994, 0.209564, 0.208997, 0.20942, 0.208987, 0.208874, 0.209423, 0.208926, 0.208927, 0.209417, 0.208935, 0.209229, 0.209324, 0.209283, 0.209157, 0.209554, 0.209276, 0.209423, 0.209023, 0.209413, 0.209028, 0.209179], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [4, 5, 3, 5, 6, 1, 1, 0, 25, 1, 0, 17, 0, 0, 1, 1, 0, 0]
Fixed Factors: {'ACOPY_y': 0, 'U_J': 0, 'U_I': 1, 'T2_J': 6, 'U1_I': 25, 'SCR': 1}
Testing candidate 6: [4, 5, 3, 5, 6, 1, 1, 0, 25, 1, 0, 17, 0, 0, 1, 1, 0, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	25
        Max loop nest depth: 	6
        Additions: 		543
        Multiplications: 	168
        Divisions: 		0
        Logical: 		0
        Reads: 			1301
        Writes: 		320
        Comparisons:		25
        Gotos: 			0
        
digraph CFG {
	ForLoop24305035 [label="ForLoop24305035  for (i=ii; i<=min(nx-1,ii+127)-1; i=i+2) {...",shape=box];
	ForLoop24305035 -> 24314419;
	ForLoop24305035 -> _JOIN_24305035;
	24314419 [label="24314419  double scv_48, scv_49;...",shape=box];
	24302986 [label="24302986  double x_copy[256];...",shape=box];
	24308577 [label="24308577  double scv_28;...",shape=box];
	ForLoop24305030 [label="ForLoop24305030  for (k=(min(ny-1,kk+63))-(((min(ny-1,kk+63))-(kt)+1)%18)+1; k<=min(ny-1,kk+63); k=k+1) {...",shape=box];
	ForLoop24305030 -> 24309985;
	ForLoop24305030 -> _JOIN_24305030;
	ForLoop24305033 [label="ForLoop24305033  for (kk=0; kk<=ny-1; kk=kk+64) {...",shape=box];
	ForLoop24305033 -> ForLoop24303741;
	ForLoop24305033 -> _JOIN_24305033;
	24309531 [label="24309531  double scv_29, scv_30, scv_31, scv_32, scv_33, scv_34, scv_35, scv_36;...",shape=box];
	_JOIN_24305195 [label="_JOIN_24305195None...",shape=box];
	_JOIN_24305195 -> ForLoop24306043;
	ForLoop24304328 [label="ForLoop24304328  for (k=(min(ny-1,kk+63))-(((min(ny-1,kk+63))-(kt)+1)%18)+1; k<=min(ny-1,kk+63); k=k+1) {...",shape=box];
	ForLoop24304328 -> 24308577;
	ForLoop24304328 -> _JOIN_24304328;
	ForLoop24304260 [label="ForLoop24304260  for (k=kt; k<=min(ny-1,kk+63)-17; k=k+18) {...",shape=box];
	ForLoop24304260 -> 24308132;
	ForLoop24304260 -> _JOIN_24304260;
	24306149 [label="24306149  double scv_1;...",shape=box];
	_JOIN_24304956 [label="_JOIN_24304956None...",shape=box];
	_JOIN_24304956 -> ForLoop24305030;
	_JOIN_24305035 [label="_JOIN_24305035None...",shape=box];
	_JOIN_24305035 -> ForLoop24306045;
	24309985 [label="24309985  double scv_47;...",shape=box];
	_JOIN_24304260 [label="_JOIN_24304260None...",shape=box];
	_JOIN_24304260 -> ForLoop24304328;
	24314437 [label="24314437  tmp[(i+1)]=scv_48;...",shape=box];
	24307178 [label="24307178  double scv_2, scv_3, scv_4, scv_5, scv_6, scv_7, scv_8, scv_9;...",shape=box];
	_JOIN_24305033 [label="_JOIN_24305033None...",shape=box];
	_JOIN_24305033 -> 24314437;
	24303019 [label="24303019  int i;...",shape=box];
	24303019 -> ForLoop24305035;
	_TOP_ [label="_TOP_None...",shape=box];
	_TOP_ -> 24266068;
	_JOIN_24305192 [label="_JOIN_24305192None...",shape=box];
	_JOIN_24305192 -> _JOIN_24305194;
	_JOIN_24306040 [label="_JOIN_24306040None...",shape=box];
	_JOIN_24306040 -> _JOIN_24306043;
	_JOIN_24266727 [label="_JOIN_24266727None...",shape=box];
	_JOIN_24266727 -> ForLoop24266796;
	24303742 [label="24303742  int k;...",shape=box];
	24303742 -> ForLoop24304260;
	ForLoop24305192 [label="ForLoop24305192  for (j=jj; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop24305192 -> 24305191;
	ForLoop24305192 -> _JOIN_24305192;
	_JOIN_24305194 [label="_JOIN_24305194None...",shape=box];
	_JOIN_24305194 -> _JOIN_24305195;
	24308132 [label="24308132  double scv_10, scv_11, scv_12, scv_13, scv_14, scv_15, scv_16, scv_17;...",shape=box];
	_JOIN_24303226 [label="_JOIN_24303226None...",shape=box];
	_JOIN_24303226 -> ForLoop24305033;
	24316492 [label="24316492  double scv_76;...",shape=box];
	_JOIN_24303224 [label="_JOIN_24303224None...",shape=box];
	_JOIN_24303224 -> _JOIN_24303226;
	_JOIN_24303222 [label="_JOIN_24303222None...",shape=box];
	_JOIN_24303222 -> _JOIN_24303224;
	24315109 [label="24315109  double scv_50, scv_51, scv_52, scv_53, scv_54, scv_55, scv_56, scv_57;...",shape=box];
	ForLoop24306048 [label="ForLoop24306048  for (iii=0; iii<=nx-1; iii=iii+1024) {...",shape=box];
	ForLoop24306048 -> ForLoop24306047;
	ForLoop24306048 -> _JOIN_24306048;
	ForLoop24306040 [label="ForLoop24306040  for (k=(min(ny-1,kk+63))-(((min(ny-1,kk+63))-(kt)+1)%18)+1; k<=min(ny-1,kk+63); k=k+1) {...",shape=box];
	ForLoop24306040 -> 24316492;
	ForLoop24306040 -> _JOIN_24306040;
	24266068 [label="24266068  int i;...",shape=box];
	24266068 -> ForLoop24266727;
	ForLoop24306043 [label="ForLoop24306043  for (kk=0; kk<=ny-1; kk=kk+64) {...",shape=box];
	ForLoop24306043 -> ForLoop24305453;
	ForLoop24306043 -> _JOIN_24306043;
	ForLoop24306045 [label="ForLoop24306045  for (i=(min(nx-1,ii+127))-(((min(nx-1,ii+127))-(ii)+1)%2)+1; i<=min(nx-1,ii+127); i=i+1) {...",shape=box];
	ForLoop24306045 -> 24318797;
	ForLoop24306045 -> _JOIN_24306045;
	ForLoop24306047 [label="ForLoop24306047  for (ii=iii; ii<=min(nx-1,iii+896); ii=ii+128) {...",shape=box];
	ForLoop24306047 -> 24303019;
	ForLoop24306047 -> _JOIN_24306047;
	24266795 [label="24266795  y[i]=0.0;...",shape=box];
	24266795 -> _JOIN_24266796;
	ForLoop24303741 [label="ForLoop24303741  for (kt=kk; kt<=min(ny-1,kk+63)-7; kt=kt+8) {...",shape=box];
	ForLoop24303741 -> 24307178;
	ForLoop24303741 -> _JOIN_24303741;
	ForLoop24266727 [label="ForLoop24266727  for (i=0; i<=ny-26; i=i+26) {...",shape=box];
	ForLoop24266727 -> 24266500;
	ForLoop24266727 -> _JOIN_24266727;
	24316047 [label="24316047  double scv_58, scv_59, scv_60, scv_61, scv_62, scv_63, scv_64, scv_65;...",shape=box];
	_JOIN_24306048 [label="_JOIN_24306048None...",shape=box];
	ForLoop24305194 [label="ForLoop24305194  for (jj=jjj; jj<=min(ny-1,jjj+1792); jj=jj+256) {...",shape=box];
	ForLoop24305194 -> 24305150;
	ForLoop24305194 -> _JOIN_24305194;
	24305191 [label="24305191  scv_77=scv_77+A[i*ny+j]*x_copy[(j-jj)];...",shape=box];
	24305191 -> _JOIN_24305192;
	24318797 [label="24318797  double scv_77;...",shape=box];
	ForLoop24305195 [label="ForLoop24305195  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	Fexpected=9369846271501.798828
actual=9369846271501.798828
orLoop24305195 -> ForLoop24305194;
	ForLoop24305195 -> _JOIN_24305195;
	24318809 [label="24318809  tmp[i]=scv_77;...",shape=box];
	24318809 -> _JOIN_24306045;
	_JOIN_24303741 [label="_JOIN_24303741None...",shape=box];
	_JOIN_24303741 -> 24303742;
	_JOIN_24306045 [label="_JOIN_24306045None...",shape=box];
	_JOIN_24306045 -> _JOIN_24306047;
	_JOIN_24305453 [label="_JOIN_24305453None...",shape=box];
	_JOIN_24305453 -> 24305454;
	_JOIN_24304328 [label="_JOIN_24304328None...",shape=box];
	_JOIN_24304328 -> 24304330;
	ForLoop24303226 [label="ForLoop24303226  for (jjj=0; jjj<=ny-1; jjj=jjj+2048) {...",shape=box];
	ForLoop24303226 -> ForLoop24303224;
	ForLoop24303226 -> _JOIN_24303226;
	ForLoop24303224 [label="ForLoop24303224  for (jj=jjj; jj<=min(ny-1,jjj+1792); jj=jj+256) {...",shape=box];
	ForLoop24303224 -> 24303116;
	ForLoop24303224 -> _JOIN_24303224;
	ForLoop24303222 [label="ForLoop24303222  for (j=jj; j<=min(ny-1,jj+255); j=j+1) {...",shape=box];
	ForLoop24303222 -> 24306149;
	ForLoop24303222 -> _JOIN_24303222;
	_JOIN_24306047 [label="_JOIN_24306047None...",shape=box];
	_JOIN_24306047 -> _JOIN_24306048;
	24305454 [label="24305454  int k;...",shape=box];
	24305454 -> ForLoop24305972;
	24304330 [label="24304330  int k;...",shape=box];
	24304330 -> ForLoop24304956;
	24305150 [label="24305150  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	24305150 -> ForLoop24305192;
	_JOIN_24306043 [label="_JOIN_24306043None...",shape=box];
	_JOIN_24306043 -> 24318809;
	24303116 [label="24303116  for (j=jj; j<=min(ny-1,jj+255); j=j+1) ...",shape=box];
	ForLoop24305972 [label="ForLoop24305972  for (k=kt; k<=min(ny-1,kk+63)-17; k=k+18) {...",shape=box];
	ForLoop24305972 -> 24316047;
	ForLoop24305972 -> _JOIN_24305972;
	ForLoop24266796 [label="ForLoop24266796  for (i=ny-((ny-(0))%26); i<=ny-1; i=i+1) ...",shape=box];
	ForLoop24266796 -> 24266795;
	ForLoop24266796 -> _JOIN_24266796;
	ForLoop24304956 [label="ForLoop24304956  for (k=kt; k<=min(ny-1,kk+63)-17; k=k+18) {...",shape=box];
	ForLoop24304956 -> 24309531;
	ForLoop24304956 -> _JOIN_24304956;
	_JOIN_24305972 [label="_JOIN_24305972None...",shape=box];
	_JOIN_24305972 -> ForLoop24306040;
	ForLoop24305453 [label="ForLoop24305453  for (kt=kk; kt<=min(ny-1,kk+63)-7; kt=kt+8) {...",shape=box];
	ForLoop24305453 -> 24315109;
	ForLoop24305453 -> _JOIN_24305453;
	24266500 [label="24266500  y[i]=0.0;...",shape=box];
	_JOIN_24266796 [label="_JOIN_24266796None...",shape=box];
	_JOIN_24266796 -> 24302986;
	_JOIN_24305030 [label="_JOIN_24305030None...",shape=box];
	_JOIN_24305030 -> _JOIN_24305033;

}

 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest104.exe __orio_perftest104.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest104.exe  
{'[4, 5, 3, 5, 6, 1, 1, 0, 25, 1, 0, 17, 0, 0, 1, 1, 0, 0]' : 0.109179}
{'[4, 5, 3, 5, 6, 1, 1, 0, 25, 1, 0, 17, 0, 0, 1, 1, 0, 0]' : 0.104715}
{'[4, 5, 3, 5, 6, 1, 1, 0, 25, 1, 0, 17, 0, 0, 1, 1, 0, 0]' : 0.104683}
{'[4, 5, 3, 5, 6, 1, 1, 0, 25, 1, 0, 17, 0, 0, 1, 1, 0, 0]' : 0.104605}
{'[4, 5, 3, 5, 6, 1, 1, 0, 25, 1, 0, 17, 0, 0, 1, 1, 0, 0]' : 0.104648}
{'[4, 5, 3, 5, 6, 1, 1, 0, 25, 1, 0, 17, 0, 0, 1, 1, 0, 0]' : 0.104577}
{'[4, 5, 3, 5, 6, 1, 1, 0, 25, 1, 0, 17, 0, 0, 1, 1, 0, 0]' : 0.104608}
{'[4, 5, 3, 5, 6, 1, 1, 0, 25, 1, 0, 17, 0, 0, 1, 1, 0, 0]' : 0.104639}
{'[4, 5, 3, 5, 6, 1, 1, 0, 25, 1, 0, 17, 0, 0, 1, 1, 0, 0]' : 0.104673}
{'[4, 5, 3, 5, 6, 1, 1, 0, 25, 1, 0, 17, 0, 0, 1, 1, 0, 0]' : 0.104588}
{'[4, 5, 3, 5, 6, 1, 1, 0, 25, 1, 0, 17, 0, 0, 1, 1, 0, 0]' : 0.104739}
{'[4, 5, 3, 5, 6, 1, 1, 0, 25, 1, 0, 17, 0, 0, 1, 1, 0, 0]' : 0.10459}
{'[4, 5, 3, 5, 6, 1, 1, 0, 25, 1, 0, 17, 0, 0, 1, 1, 0, 0]' : 0.104665}
{'[4, 5, 3, 5, 6, 1, 1, 0, 25, 1, 0, 17, 0, 0, 1, 1, 0, 0]' : 0.104659}
{'[4, 5, 3, 5, 6, 1, 1, 0, 25, 1, 0, 17, 0, 0, 1, 1, 0, 0]' : 0.104624}
{'[4, 5, 3, 5, 6, 1, 1, 0, 25, 1, 0, 17, 0, 0, 1, 1, 0, 0]' : 0.108884}
{'[4, 5, 3, 5, 6, 1, 1, 0, 25, 1, 0, 17, 0, 0, 1, 1, 0, 0]' : 0.104651}
{'[4, 5, 3, 5, 6, 1, 1, 0, 25, 1, 0, 17, 0, 0, 1, 1, 0, 0]' : 0.104681}
{'[4, 5, 3, 5, 6, 1, 1, 0, 25, 1, 0, 17, 0, 0, 1, 1, 0, 0]' : 0.104634}
{'[4, 5, 3, 5, 6, 1, 1, 0, 25, 1, 0, 17, 0, 0, 1, 1, 0, 0]' : 0.104705}
{'[4, 5, 3, 5, 6, 1, 1, 0, 25, 1, 0, 17, 0, 0, 1, 1, 0, 0]' : 0.104585}
{'[4, 5, 3, 5, 6, 1, 1, 0, 25, 1, 0, 17, 0, 0, 1, 1, 0, 0]' : 0.104627}
{'[4, 5, 3, 5, 6, 1, 1, 0, 25, 1, 0, 17, 0, 0, 1, 1, 0, 0]' : 0.104601}
{'[4, 5, 3, 5, 6, 1, 1, 0, 25, 1, 0, 17, 0, 0, 1, 1, 0, 0]' : 0.104584}
{'[4, 5, 3, 5, 6, 1, 1, 0, 25, 1, 0, 17, 0, 0, 1, 1, 0, 0]' : 0.104574}
{'[4, 5, 3, 5, 6, 1, 1, 0, 25, 1, 0, 17, 0, 0, 1, 1, 0, 0]' : 0.104613}
{'[4, 5, 3, 5, 6, 1, 1, 0, 25, 1, 0, 17, 0, 0, 1, 1, 0, 0]' : 0.104567}
{'[4, 5, 3, 5, 6, 1, 1, 0, 25, 1, 0, 17, 0, 0, 1, 1, 0, 0]' : 0.104704}
{'[4, 5, 3, 5, 6, 1, 1, 0, 25, 1, 0, 17, 0, 0, 1, 1, 0, 0]' : 0.104633}
{'[4, 5, 3, 5, 6, 1, 1, 0, 25, 1, 0, 17, 0, 0, 1, 1, 0, 0]' : 0.108934}

out:
 ["{'[4, 5, 3, 5, 6, 1, 1, 0, 25, 1, 0, 17, 0, 0, 1, 1, 0, 0]' : 0.109179}", "{'[4, 5, 3, 5, 6, 1, 1, 0, 25, 1, 0, 17, 0, 0, 1, 1, 0, 0]' : 0.104715}", "{'[4, 5, 3, 5, 6, 1, 1, 0, 25, 1, 0, 17, 0, 0, 1, 1, 0, 0]' : 0.104683}", "{'[4, 5, 3, 5, 6, 1, 1, 0, 25, 1, 0, 17, 0, 0, 1, 1, 0, 0]' : 0.104605}", "{'[4, 5, 3, 5, 6, 1, 1, 0, 25, 1, 0, 17, 0, 0, 1, 1, 0, 0]' : 0.104648}", "{'[4, 5, 3, 5, 6, 1, 1, 0, 25, 1, 0, 17, 0, 0, 1, 1, 0, 0]' : 0.104577}", "{'[4, 5, 3, 5, 6, 1, 1, 0, 25, 1, 0, 17, 0, 0, 1, 1, 0, 0]' : 0.104608}", "{'[4, 5, 3, 5, 6, 1, 1, 0, 25, 1, 0, 17, 0, 0, 1, 1, 0, 0]' : 0.104639}", "{'[4, 5, 3, 5, 6, 1, 1, 0, 25, 1, 0, 17, 0, 0, 1, 1, 0, 0]' : 0.104673}", "{'[4, 5, 3, 5, 6, 1, 1, 0, 25, 1, 0, 17, 0, 0, 1, 1, 0, 0]' : 0.104588}", "{'[4, 5, 3, 5, 6, 1, 1, 0, 25, 1, 0, 17, 0, 0, 1, 1, 0, 0]' : 0.104739}", "{'[4, 5, 3, 5, 6, 1, 1, 0, 25, 1, 0, 17, 0, 0, 1, 1, 0, 0]' : 0.10459}", "{'[4, 5, 3, 5, 6, 1, 1, 0, 25, 1, 0, 17, 0, 0, 1, 1, 0, 0]' : 0.104665}", "{'[4, 5, 3, 5, 6, 1, 1, 0, 25, 1, 0, 17, 0, 0, 1, 1, 0, 0]' : 0.104659}", "{'[4, 5, 3, 5, 6, 1, 1, 0, 25, 1, 0, 17, 0, 0, 1, 1, 0, 0]' : 0.104624}", "{'[4, 5, 3, 5, 6, 1, 1, 0, 25, 1, 0, 17, 0, 0, 1, 1, 0, 0]' : 0.108884}", "{'[4, 5, 3, 5, 6, 1, 1, 0, 25, 1, 0, 17, 0, 0, 1, 1, 0, 0]' : 0.104651}", "{'[4, 5, 3, 5, 6, 1, 1, 0, 25, 1, 0, 17, 0, 0, 1, 1, 0, 0]' : 0.104681}", "{'[4, 5, 3, 5, 6, 1, 1, 0, 25, 1, 0, 17, 0, 0, 1, 1, 0, 0]' : 0.104634}", "{'[4, 5, 3, 5, 6, 1, 1, 0, 25, 1, 0, 17, 0, 0, 1, 1, 0, 0]' : 0.104705}", "{'[4, 5, 3, 5, 6, 1, 1, 0, 25, 1, 0, 17, 0, 0, 1, 1, 0, 0]' : 0.104585}", "{'[4, 5, 3, 5, 6, 1, 1, 0, 25, 1, 0, 17, 0, 0, 1, 1, 0, 0]' : 0.104627}", "{'[4, 5, 3, 5, 6, 1, 1, 0, 25, 1, 0, 17, 0, 0, 1, 1, 0, 0]' : 0.104601}", "{'[4, 5, 3, 5, 6, 1, 1, 0, 25, 1, 0, 17, 0, 0, 1, 1, 0, 0]' : 0.104584}", "{'[4, 5, 3, 5, 6, 1, 1, 0, 25, 1, 0, 17, 0, 0, 1, 1, 0, 0]' : 0.104574}", "{'[4, 5, 3, 5, 6, 1, 1, 0, 25, 1, 0, 17, 0, 0, 1, 1, 0, 0]' : 0.104613}", "{'[4, 5, 3, 5, 6, 1, 1, 0, 25, 1, 0, 17, 0, 0, 1, 1, 0, 0]' : 0.104567}", "{'[4, 5, 3, 5, 6, 1, 1, 0, 25, 1, 0, 17, 0, 0, 1, 1, 0, 0]' : 0.104704}", "{'[4, 5, 3, 5, 6, 1, 1, 0, 25, 1, 0, 17, 0, 0, 1, 1, 0, 0]' : 0.104633}", "{'[4, 5, 3, 5, 6, 1, 1, 0, 25, 1, 0, 17, 0, 0, 1, 1, 0, 0]' : 0.108934}"]
returning from 'run': {'[4, 5, 3, 5, 6, 1, 1, 0, 25, 1, 0, 17, 0, 0, 1, 1, 0, 0]': ([0.109179, 0.104715, 0.104683, 0.104605, 0.104648, 0.104577, 0.104608, 0.104639, 0.104673, 0.104588, 0.104739, 0.10459, 0.104665, 0.104659, 0.104624, 0.108884, 0.104651, 0.104681, 0.104634, 0.104705, 0.104585, 0.104627, 0.104601, 0.104584, 0.104574, 0.104613, 0.104567, 0.104704, 0.104633, 0.108934], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
[([0.109179, 0.104715, 0.104683, 0.104605, 0.104648, 0.104577, 0.104608, 0.104639, 0.104673, 0.104588, 0.104739, 0.10459, 0.104665, 0.104659, 0.104624, 0.108884, 0.104651, 0.104681, 0.104634, 0.104705, 0.104585, 0.104627, 0.104601, 0.104584, 0.104574, 0.104613, 0.104567, 0.104704, 0.104633, 0.108934], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])]
Stored as a sucessful configuration
Final perf_costs: {'[4, 5, 3, 5, 6, 1, 1, 0, 25, 1, 0, 17, 0, 0, 1, 1, 0, 0]': ([0.109179, 0.104715, 0.104683, 0.104605, 0.104648, 0.104577, 0.104608, 0.104639, 0.104673, 0.104588, 0.104739, 0.10459, 0.104665, 0.104659, 0.104624, 0.108884, 0.104651, 0.104681, 0.104634, 0.104705, 0.104585, 0.104627, 0.104601, 0.104584, 0.104574, 0.104613, 0.104567, 0.104704, 0.104633, 0.108934], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Initial Design Line: [1, 6, 2, 3, 6, 1, 1, 0, 25, 1, 0, 18, 0, 0, 0, 1, 0, 1]
Fixed Factors: {'ACOPY_y': 0, 'U_J': 0, 'U_I': 1, 'T2_J': 6, 'U1_I': 25, 'SCR': 1}
Testing candidate 7: [1, 6, 2, 3, 6, 1, 1, 0, 25, 1, 0, 18, 0, 0, 0, 1, 0, 1]
Length of requested configs: 1
Result was on Database, Returning Now
My perf_costs: {'[1, 6, 2, 3, 6, 1, 1, 0, 25, 1, 0, 18, 0, 0, 0, 1, 0, 1]': ([0.13726199999999997, 0.13726199999999997, 0.13726199999999997, 0.13726199999999997, 0.13726199999999997, 0.13726199999999997, 0.13726199999999997, 0.13726199999999997, 0.13726199999999997, 0.13726199999999997, 0.13726199999999997, 0.13726199999999997, 0.13726199999999997, 0.13726199999999997, 0.13726199999999997, 0.13726199999999997, 0.13726199999999997, 0.13726199999999997, 0.13726199999999997, 0.13726199999999997, 0.13726199999999997, 0.13726199999999997, 0.13726199999999997, 0.13726199999999997, 0.13726199999999997, 0.13726199999999997, 0.13726199999999997, 0.13726199999999997, 0.13726199999999997, 0.13726199999999997], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Measurements: [0.10841106666666668, 0.09041358000000001, 0.08057221666666667, 0.0840700966666667, 0.20919093333333333, 0.10507230000000001, 0.1372619999999999]
       T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
19635     2    4    5    2    6    3       1       0   25   1   0  24    0    2
155615    2    1    2    1    6    3       0       0   25   1   0  14    0    0
198721    3    1    5    6    6    6       0       0   25   1   0   0    1    0
207276    3    4    4    4    6    0       0       0   25   1   0  27    0    0
229265    2    4    0    5    6    5       0       0   25   1   0  13    2    0
260351    4    5    3    5    6    1       1       0   25   1   0  17    0    0
264632    1    6    2    3    6    1       1       0   25   1   0  18    0    0
       RT_K SCR VEC1 VEC2  cost_mean
19635     0   1    0    1 0.10841107
155615    2   1    1    0 0.09041358
198721    1   1    1    1 0.08057222
207276    2   1    1    1 0.08407010
229265    0   1    0    1 0.20919093
260351    1   1    0    0 0.10507230
264632    0   1    0    1 0.13726200

Pruned Search Space Size: 0
Best Predicted:        T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
198721    3    1    5    6    6    6       0       0   25   1   0   0    1    0
       RT_K SCR VEC1 VEC2  cost_mean
198721    1   1    1    1 0.08057222

Pruned Factors: []
Fixed Factors: {'ACOPY_y': 0, 'U_J': 0, 'U_I': 1, 'T2_J': 6, 'U1_I': 25, 'SCR': 1}
Fixed Factors: {'ACOPY_y': 0, 'U_J': 0, 'U_I': 1, 'T2_J': 6, 'U1_I': 25, 'SCR': 1}
Length of requested configs: 1
Result was on Database, Returning Now
My perf_costs: {'[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]': ([0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727, 0.1290727], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
0.1290727
[3, 1, 5, 6, 6, 6, 0, 0, 25, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0]
Length of requested configs: 1
Result was on Database, Returning Now
My perf_costs: {'[3, 1, 5, 6, 6, 6, 0, 0, 25, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0]': ([0.08057221666666667, 0.08057221666666667, 0.08057221666666667, 0.08057221666666667, 0.08057221666666667, 0.08057221666666667, 0.08057221666666667, 0.08057221666666667, 0.08057221666666667, 0.08057221666666667, 0.08057221666666667, 0.08057221666666667, 0.08057221666666667, 0.08057221666666667, 0.08057221666666667, 0.08057221666666667, 0.08057221666666667, 0.08057221666666667, 0.08057221666666667, 0.08057221666666667, 0.08057221666666667, 0.08057221666666667, 0.08057221666666667, 0.08057221666666667, 0.08057221666666667, 0.08057221666666667, 0.08057221666666667, 0.08057221666666667, 0.08057221666666667, 0.08057221666666667], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Slowdown: 0.62423902705
Budget: 103/1
Step 4
