
====== START ORIO ======

----- begin reading the source file: atax2.src1.c -----
----- finished reading the source file -----

----- begin parsing annotations -----
----- finished parsing annotations -----

----- begin optimizations -----
Search_Space         = 8.234e+13
Number_of_Parameters = 18
Numeric_Parameters   = 13
Binary_Parameters    = 05
['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
[[1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [False, True], [False, True], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 8, 32], [1, 8, 32], [1, 8, 32], [False, True], [False, True], [False, True]]

----- begin empirical tuning for problem size -----
 N = 10000
Parameters: {'ACOPY_x': [0, 2], 'ACOPY_y': [0, 2], 'RT_K': [0, 3], 'T1_I': [0, 7], 'T1_J': [0, 7], 'T1_K': [0, 7], 'U_K': [0, 30], 'U_J': [0, 30], 'U_I': [0, 30], 'U1_I': [0, 30], 'T2_K': [0, 7], 'T2_J': [0, 7], 'T2_I': [0, 7], 'VEC2': [0, 2], 'VEC1': [0, 2], 'RT_I': [0, 3], 'SCR': [0, 2], 'RT_J': [0, 3]}
Parameter Range Values: {'ACOPY_x': [False, True], 'ACOPY_y': [False, True], 'RT_K': [1, 8, 32], 'T1_I': [1, 16, 32, 64, 128, 256, 512], 'T1_J': [1, 16, 32, 64, 128, 256, 512], 'T1_K': [1, 16, 32, 64, 128, 256, 512], 'U_K': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_J': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U1_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'T2_K': [1, 64, 128, 256, 512, 1024, 2048], 'T2_J': [1, 64, 128, 256, 512, 1024, 2048], 'T2_I': [1, 64, 128, 256, 512, 1024, 2048], 'VEC2': [False, True], 'VEC1': [False, True], 'RT_I': [1, 8, 32], 'SCR': [False, True], 'RT_J': [1, 8, 32]}

----- begin random search -----
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Inverse Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Starting DOPT-anova
Step 0
Generating valid search space of size 4600 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Valid coordinates: 920
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Valid coordinates: 1840
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Tested coordinates: 110000
Valid coordinates: 2760
Tested coordinates: 120000
Tested coordinates: 130000
Tested coordinates: 140000
Tested coordinates: 150000
Valid coordinates: 3680
Tested coordinates: 160000
Tested coordinates: 170000
Tested coordinates: 180000
Tested coordinates: 190000
Valid coordinates: 4600
Valid/Tested configurations: 4600/193036
Generated Search Space:
NULL
Clean Info:
Removed Factors: character(0)

Removed Inverse Factors: [1] "ACOPY_x" "ACOPY_y" "SCR"     "VEC1"    "VEC2"   

New Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
New Inverse Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
New Fixed Factors: {}
Full Model:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Fixed Factors: {}
Computing D-Optimal Design
Computing D-Optimal Design with 46 experiments
Design Formula:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Starting "optFederov" run
Using Search Space:
NULL
Data Dimensions: [1] 4600   18

     T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
84      6    5    0    0    0    6       0       1   15   0  13  25    0    1
434     5    0    2    3    1    6       0       1    9  14   0   5    1    1
487     4    3    0    4    6    1       1       1    0   0   9   7    0    1
514     6    6    1    0    0    3       0       0   17   8  11   0    1    1
573     0    0    1    5    5    0       0       1   18   2   7   0    0    0
639     0    3    6    0    0    6       0       1   21   0  26  26    2    0
666     2    6    1    1    0    1       1       1   11  20   0  25    2    0
705     6    1    2    6    4    1       1       0   29   2   0   0    0    0
853     3    5    0    0    3    1       0       1    0   4   0  29    0    0
1005    0    5    0    3    6    1       1       0    0  15   0   1    2    0
1229    4    3    2    2    6    6       0       0    0  13   0  20    0    2
1234    5    2    1    6    5    0       1       0   27   0   5  11    2    0
1297    1    0    1    1    6    0       0       1   16   0  17  28    0    0
1488    0    4    0    4    6    5       0       0   27  29   0  26    0    1
1564    4    6    1    6    4    6       0       0    0   1   7   0    0    1
1577    2    4    2    0    4    0       1       0   19   7  23   0    0    2
1642    1    5    3    3    3    2       1       1   29   0   0   0    0    2
1679    6    4    5    6    4    0       0       1    2  15   0  28    0    0
1705    6    0    6    0    6    5       0       0   24   0  19  28    0    1
1716    0    6    6    0    5    0       1       0    3  25   0  14    0    0
1787    6    0    4    6    0    6       1       0   22   0   2  28    0    0
1944    5    6    0    6    0    6       1       1   10   9   0  16    1    0
2071    4    5    6    0    0    0       0       1   28  15   0   0    1    0
2271    0    2    2    0    3    1       0       1   28  14  13   0    1    0
2276    2    4    0    0    5    1       1       1   14   0   4  21    0    2
2327    5    1    3    6    3    5       1       1   25  29   0   6    0    2
2330    0    1    4    2    3    5       1       1    1   1   0   8    0    2
2405    2    2    1    4    1    6       0       1    9   0  25   5    0    0
2459    2    0    0    4    4    6       0       1    2  23   0  23    2    0
2494    0    3    0    4    0    0       0       0    5  13  24   0    0    2
2634    4    3    0    2    6    0       1       1    3  29  29   0    1    1
3047    1    3    2    3    6    6       1       1   17  28   1   0    0    0
3151    6    3    0    5    1    6       1       1    1   4  29   0    0    0
3388    1    3    6    3    0    6       0       1   13   0   0   0    1    0
3789    1    0    6    1    3    0       0       0   18   0  14   3    0    0
3818    1    3    6    4    0    6       0       0    3  29  18   0    0    0
3860    5    1    1    0    4    0       1       1   28  18   0  21    0    0
3926    2    0    3    5    0    0       1       1    0   0  28   9    0    1
3946    3    4    2    6    4    4       0       0    5   0  27   5    0    0
4206    0    4    2    0    2    0       1       0    3   0   0  11    1    0
4319    0    3    0    2    2    4       0       0   29   0   4  26    1    1
4346    2    6    0    6    6    6       1       0   23   4   9   0    1    0
4368    4    6    6    2    6    4       0       1   24   0  29   5    0    1
4449    5    0    0    5    0    1       0       0    2   0  26  25    0    1
4470    2    5    5    6    3    3       1       1   27   0  28  29    1    0
4501    1    3    3    6    6    3       0       1    6   5   0  25    0    1
     RT_K SCR VEC1 VEC2
84      1   1    1    0
434     0   0    0    1
487     1   1    1    1
514     0   0    1    0
573     2   1    1    0
639     0   0    0    1
666     0   1    0    1
705     1   0    0    0
853     2   0    1    1
1005    0   0    1    0
1229    0   1    1    0
1234    0   0    1    1
1297    1   0    0    0
1488    1   0    0    1
1564    1   1    1    1
1577    0   0    1    1
1642    0   1    0    1
1679    1   0    0    0
1705    1   0    1    1
1716    0   1    0    0
1787    2   1    1    1
1944    1   0    0    1
2071    0   1    0    1
2271    0   1    0    1
2276    0   0    0    1
2327    0   0    1    0
2330    0   1    0    1
2405    0   0    1    1
2459    0   1    0    0
2494    0   0    0    1
2634    0   1    0    0
3047    0   0    1    1
3151    0   1    0    0
3388    1   0    1    1
3789    1   1    1    0
3818    2   0    1    1
3860    2   1    1    1
3926    0   0    0    0
3946    2   1    0    0
4206    1   0    1    0
4319    0   0    0    0
4346    1   1    0    1
4368    0   0    0    0
4449    0   1    1    1
4470    1   1    1    0
4501    0   1    0    0

D-Efficiency Approximation: [1] 0.368

Measuring design of size 46
Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		202
        Multiplications: 	62
        Divisions: 		0
        Logical: 		0
        Reads: 			441
        Writes: 		96
        Comparisons:		12
        Gotos: 			0
        
 building the original code:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -DORIGINAL -o __orio_perftest_original.exe __orio_perftest1.c timer_cpu.o -lm
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest1.exe __orio_perftest1.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest1.exe  
Program Test Output: 
{'[6, 5, 0, 0, 0, 6, 0, 1, 15, 0, 13, 25, 0, 1, 1, 1, 1, 0]' : 0.236477}
{'[6, 5, 0, 0, 0, 6, 0, 1, 15, 0, 13, 25, 0, 1, 1, 1, 1, 0]' : 0.236453}
{'[6, 5, 0, 0, 0, 6, 0, 1, 15, 0, 13, 25, 0, 1, 1, 1, 1, 0]' : 0.219347}
{'[6, 5, 0, 0, 0, 6, 0, 1, 15, 0, 13, 25, 0, 1, 1, 1, 1, 0]' : 0.205406}
{'[6, 5, 0, 0, 0, 6, 0, 1, 15, 0, 13, 25, 0, 1, 1, 1, 1, 0]' : 0.209736}
{'[6, 5, 0, 0, 0, 6, 0, 1, 15, 0, 13, 25, 0, 1, 1, 1, 1, 0]' : 0.208441}
{'[6, 5, 0, 0, 0, 6, 0, 1, 15, 0, 13, 25, 0, 1, 1, 1, 1, 0]' : 0.204671}
{'[6, 5, 0, 0, 0, 6, 0, 1, 15, 0, 13, 25, 0, 1, 1, 1, 1, 0]' : 0.202621}
{'[6, 5, 0, 0, 0, 6, 0, 1, 15, 0, 13, 25, 0, 1, 1, 1, 1, 0]' : 0.201724}
{'[6, 5, 0, 0, 0, 6, 0, 1, 15, 0, 13, 25, 0, 1, 1, 1, 1, 0]' : 0.209792}
{'[6, 5, 0, 0, 0, 6, 0, 1, 15, 0, 13, 25, 0, 1, 1, 1, 1, 0]' : 0.207536}
{'[6, 5, 0, 0, 0, 6, 0, 1, 15, 0, 13, 25, 0, 1, 1, 1, 1, 0]' : 0.204228}
{'[6, 5, 0, 0, 0, 6, 0, 1, 15, 0, 13, 25, 0, 1, 1, 1, 1, 0]' : 0.203998}
{'[6, 5, 0, 0, 0, 6, 0, 1, 15, 0, 13, 25, 0, 1, 1, 1, 1, 0]' : 0.207305}
{'[6, 5, 0, 0, 0, 6, 0, 1, 15, 0, 13, 25, 0, 1, 1, 1, 1, 0]' : 0.209806}
{'[6, 5, 0, 0, 0, 6, 0, 1, 15, 0, 13, 25, 0, 1, 1, 1, 1, 0]' : 0.206706}
{'[6, 5, 0, 0, 0, 6, 0, 1, 15, 0, 13, 25, 0, 1, 1, 1, 1, 0]' : 0.208444}
{'[6, 5, 0, 0, 0, 6, 0, 1, 15, 0, 13, 25, 0, 1, 1, 1, 1, 0]' : 0.204047}
{'[6, 5, 0, 0, 0, 6, 0, 1, 15, 0, 13, 25, 0, 1, 1, 1, 1, 0]' : 0.208081}
{'[6, 5, 0, 0, 0, 6, 0, 1, 15, 0, 13, 25, 0, 1, 1, 1, 1, 0]' : 0.209104}
{'[6, 5, 0, 0, 0, 6, 0, 1, 15, 0, 13, 25, 0, 1, 1, 1, 1, 0]' : 0.204818}
{'[6, 5, 0, 0, 0, 6, 0, 1, 15, 0, 13, 25, 0, 1, 1, 1, 1, 0]' : 0.204407}
{'[6, 5, 0, 0, 0, 6, 0, 1, 15, 0, 13, 25, 0, 1, 1, 1, 1, 0]' : 0.203945}
{'[6, 5, 0, 0, 0, 6, 0, 1, 15, 0, 13, 25, 0, 1, 1, 1, 1, 0]' : 0.209107}
{'[6, 5, 0, 0, 0, 6, 0, 1, 15, 0, 13, 25, 0, 1, 1, 1, 1, 0]' : 0.208166}
{'[6, 5, 0, 0, 0, 6, 0, 1, 15, 0, 13, 25, 0, 1, 1, 1, 1, 0]' : 0.206646}
{'[6, 5, 0, 0, 0, 6, 0, 1, 15, 0, 13, 25, 0, 1, 1, 1, 1, 0]' : 0.209792}
{'[6, 5, 0, 0, 0, 6, 0, 1, 15, 0, 13, 25, 0, 1, 1, 1, 1, 0]' : 0.205011}
{'[6, 5, 0, 0, 0, 6, 0, 1, 15, 0, 13, 25, 0, 1, 1, 1, 1, 0]' : 0.209846}
{'[6, 5, 0, 0, 0, 6, 0, 1, 15, 0, 13, 25, 0, 1, 1, 1, 1, 0]' : 0.20955}

out:
 ["{'[6, 5, 0, 0, 0, 6, 0, 1, 15, 0, 13, 25, 0, 1, 1, 1, 1, 0]' : 0.236477}", "{'[6, 5, 0, 0, 0, 6, 0, 1, 15, 0, 13, 25, 0, 1, 1, 1, 1, 0]' : 0.236453}", "{'[6, 5, 0, 0, 0, 6, 0, 1, 15, 0, 13, 25, 0, 1, 1, 1, 1, 0]' : 0.219347}", "{'[6, 5, 0, 0, 0, 6, 0, 1, 15, 0, 13, 25, 0, 1, 1, 1, 1, 0]' : 0.205406}", "{'[6, 5, 0, 0, 0, 6, 0, 1, 15, 0, 13, 25, 0, 1, 1, 1, 1, 0]' : 0.209736}", "{'[6, 5, 0, 0, 0, 6, 0, 1, 15, 0, 13, 25, 0, 1, 1, 1, 1, 0]' : 0.208441}", "{'[6, 5, 0, 0, 0, 6, 0, 1, 15, 0, 13, 25, 0, 1, 1, 1, 1, 0]' : 0.204671}", "{'[6, 5, 0, 0, 0, 6, 0, 1, 15, 0, 13, 25, 0, 1, 1, 1, 1, 0]' : 0.202621}", "{'[6, 5, 0, 0, 0, 6, 0, 1, 15, 0, 13, 25, 0, 1, 1, 1, 1, 0]' : 0.201724}", "{'[6, 5, 0, 0, 0, 6, 0, 1, 15, 0, 13, 25, 0, 1, 1, 1, 1, 0]' : 0.209792}", "{'[6, 5, 0, 0, 0, 6, 0, 1, 15, 0, 13, 25, 0, 1, 1, 1, 1, 0]' : 0.207536}", "{'[6, 5, 0, 0, 0, 6, 0, 1, 15, 0, 13, 25, 0, 1, 1, 1, 1, 0]' : 0.204228}", "{'[6, 5, 0, 0, 0, 6, 0, 1, 15, 0, 13, 25, 0, 1, 1, 1, 1, 0]' : 0.203998}", "{'[6, 5, 0, 0, 0, 6, 0, 1, 15, 0, 13, 25, 0, 1, 1, 1, 1, 0]' : 0.207305}", "{'[6, 5, 0, 0, 0, 6, 0, 1, 15, 0, 13, 25, 0, 1, 1, 1, 1, 0]' : 0.209806}", "{'[6, 5, 0, 0, 0, 6, 0, 1, 15, 0, 13, 25, 0, 1, 1, 1, 1, 0]' : 0.206706}", "{'[6, 5, 0, 0, 0, 6, 0, 1, 15, 0, 13, 25, 0, 1, 1, 1, 1, 0]' : 0.208444}", "{'[6, 5, 0, 0, 0, 6, 0, 1, 15, 0, 13, 25, 0, 1, 1, 1, 1, 0]' : 0.204047}", "{'[6, 5, 0, 0, 0, 6, 0, 1, 15, 0, 13, 25, 0, 1, 1, 1, 1, 0]' : 0.208081}", "{'[6, 5, 0, 0, 0, 6, 0, 1, 15, 0, 13, 25, 0, 1, 1, 1, 1, 0]' : 0.209104}", "{'[6, 5, 0, 0, 0, 6, 0, 1, 15, 0, 13, 25, 0, 1, 1, 1, 1, 0]' : 0.204818}", "{'[6, 5, 0, 0, 0, 6, 0, 1, 15, 0, 13, 25, 0, 1, 1, 1, 1, 0]' : 0.204407}", "{'[6, 5, 0, 0, 0, 6, 0, 1, 15, 0, 13, 25, 0, 1, 1, 1, 1, 0]' : 0.203945}", "{'[6, 5, 0, 0, 0, 6, 0, 1, 15, 0, 13, 25, 0, 1, 1, 1, 1, 0]' : 0.209107}", "{'[6, 5, 0, 0, 0, 6, 0, 1, 15, 0, 13, 25, 0, 1, 1, 1, 1, 0]' : 0.208166}", "{'[6, 5, 0, 0, 0, 6, 0, 1, 15, 0, 13, 25, 0, 1, 1, 1, 1, 0]' : 0.206646}", "{'[6, 5, 0, 0, 0, 6, 0, 1, 15, 0, 13, 25, 0, 1, 1, 1, 1, 0]' : 0.209792}", "{'[6, 5, 0, 0, 0, 6, 0, 1, 15, 0, 13, 25, 0, 1, 1, 1, 1, 0]' : 0.205011}", "{'[6, 5, 0, 0, 0, 6, 0, 1, 15, 0, 13, 25, 0, 1, 1, 1, 1, 0]' : 0.209846}", "{'[6, 5, 0, 0, 0, 6, 0, 1, 15, 0, 13, 25, 0, 1, 1, 1, 1, 0]' : 0.20955}"]
returning from 'run': {'[6, 5, 0, 0, 0, 6, 0, 1, 15, 0, 13, 25, 0, 1, 1, 1, 1, 0]': ([0.236477, 0.236453, 0.219347, 0.205406, 0.209736, 0.208441, 0.204671, 0.202621, 0.201724, 0.209792, 0.207536, 0.204228, 0.203998, 0.207305, 0.209806, 0.206706, 0.208444, 0.204047, 0.208081, 0.209104, 0.204818, 0.204407, 0.203945, 0.209107, 0.208166, 0.206646, 0.209792, 0.205011, 0.209846, 0.20955], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 5, 0, 0, 0, 6, 0, 1, 15, 0, 13, 25, 0, 1, 1, 1, 1, 0]': ([0.236477, 0.236453, 0.219347, 0.205406, 0.209736, 0.208441, 0.204671, 0.202621, 0.201724, 0.209792, 0.207536, 0.204228, 0.203998, 0.207305, 0.209806, 0.206706, 0.208444, 0.204047, 0.208081, 0.209104, 0.204818, 0.204407, 0.203945, 0.209107, 0.208166, 0.206646, 0.209792, 0.205011, 0.209846, 0.20955], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = iii
Code stats:
        Number of loops: 	89
        Max loop nest depth: 	5
        Additions: 		3163
        Multiplications: 	768
        Divisions: 		0
        Logical: 		0
        Reads: 			5195
        Writes: 		681
        Comparisons:		89
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest2.exe __orio_perftest2.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest2.exe  
Program Test Output: 
{'[5, 0, 2, 3, 1, 6, 0, 1, 9, 14, 0, 5, 1, 1, 0, 0, 0, 1]' : 0.100282}
{'[5, 0, 2, 3, 1, 6, 0, 1, 9, 14, 0, 5, 1, 1, 0, 0, 0, 1]' : 0.0981388}
{'[5, 0, 2, 3, 1, 6, 0, 1, 9, 14, 0, 5, 1, 1, 0, 0, 0, 1]' : 0.0981629}
{'[5, 0, 2, 3, 1, 6, 0, 1, 9, 14, 0, 5, 1, 1, 0, 0, 0, 1]' : 0.0978918}
{'[5, 0, 2, 3, 1, 6, 0, 1, 9, 14, 0, 5, 1, 1, 0, 0, 0, 1]' : 0.0980461}
{'[5, 0, 2, 3, 1, 6, 0, 1, 9, 14, 0, 5, 1, 1, 0, 0, 0, 1]' : 0.10018}
{'[5, 0, 2, 3, 1, 6, 0, 1, 9, 14, 0, 5, 1, 1, 0, 0, 0, 1]' : 0.0980082}
{'[5, 0, 2, 3, 1, 6, 0, 1, 9, 14, 0, 5, 1, 1, 0, 0, 0, 1]' : 0.0981669}
{'[5, 0, 2, 3, 1, 6, 0, 1, 9, 14, 0, 5, 1, 1, 0, 0, 0, 1]' : 0.0994492}
{'[5, 0, 2, 3, 1, 6, 0, 1, 9, 14, 0, 5, 1, 1, 0, 0, 0, 1]' : 0.0976679}
{'[5, 0, 2, 3, 1, 6, 0, 1, 9, 14, 0, 5, 1, 1, 0, 0, 0, 1]' : 0.0998158}
{'[5, 0, 2, 3, 1, 6, 0, 1, 9, 14, 0, 5, 1, 1, 0, 0, 0, 1]' : 0.0988111}
{'[5, 0, 2, 3, 1, 6, 0, 1, 9, 14, 0, 5, 1, 1, 0, 0, 0, 1]' : 0.0980899}
{'[5, 0, 2, 3, 1, 6, 0, 1, 9, 14, 0, 5, 1, 1, 0, 0, 0, 1]' : 0.098062}
{'[5, 0, 2, 3, 1, 6, 0, 1, 9, 14, 0, 5, 1, 1, 0, 0, 0, 1]' : 0.097945}
{'[5, 0, 2, 3, 1, 6, 0, 1, 9, 14, 0, 5, 1, 1, 0, 0, 0, 1]' : 0.100043}
{'[5, 0, 2, 3, 1, 6, 0, 1, 9, 14, 0, 5, 1, 1, 0, 0, 0, 1]' : 0.098151}
{'[5, 0, 2, 3, 1, 6, 0, 1, 9, 14, 0, 5, 1, 1, 0, 0, 0, 1]' : 0.098058}
{'[5, 0, 2, 3, 1, 6, 0, 1, 9, 14, 0, 5, 1, 1, 0, 0, 0, 1]' : 0.0989249}
{'[5, 0, 2, 3, 1, 6, 0, 1, 9, 14, 0, 5, 1, 1, 0, 0, 0, 1]' : 0.098228}
{'[5, 0, 2, 3, 1, 6, 0, 1, 9, 14, 0, 5, 1, 1, 0, 0, 0, 1]' : 0.0981851}
{'[5, 0, 2, 3, 1, 6, 0, 1, 9, 14, 0, 5, 1, 1, 0, 0, 0, 1]' : 0.0957861}
{'[5, 0, 2, 3, 1, 6, 0, 1, 9, 14, 0, 5, 1, 1, 0, 0, 0, 1]' : 0.095305}
{'[5, 0, 2, 3, 1, 6, 0, 1, 9, 14, 0, 5, 1, 1, 0, 0, 0, 1]' : 0.0954819}
{'[5, 0, 2, 3, 1, 6, 0, 1, 9, 14, 0, 5, 1, 1, 0, 0, 0, 1]' : 0.0956149}
{'[5, 0, 2, 3, 1, 6, 0, 1, 9, 14, 0, 5, 1, 1, 0, 0, 0, 1]' : 0.0970268}
{'[5, 0, 2, 3, 1, 6, 0, 1, 9, 14, 0, 5, 1, 1, 0, 0, 0, 1]' : 0.0981779}
{'[5, 0, 2, 3, 1, 6, 0, 1, 9, 14, 0, 5, 1, 1, 0, 0, 0, 1]' : 0.0978229}
{'[5, 0, 2, 3, 1, 6, 0, 1, 9, 14, 0, 5, 1, 1, 0, 0, 0, 1]' : 0.097656}
{'[5, 0, 2, 3, 1, 6, 0, 1, 9, 14, 0, 5, 1, 1, 0, 0, 0, 1]' : 0.0963209}

out:
 ["{'[5, 0, 2, 3, 1, 6, 0, 1, 9, 14, 0, 5, 1, 1, 0, 0, 0, 1]' : 0.100282}", "{'[5, 0, 2, 3, 1, 6, 0, 1, 9, 14, 0, 5, 1, 1, 0, 0, 0, 1]' : 0.0981388}", "{'[5, 0, 2, 3, 1, 6, 0, 1, 9, 14, 0, 5, 1, 1, 0, 0, 0, 1]' : 0.0981629}", "{'[5, 0, 2, 3, 1, 6, 0, 1, 9, 14, 0, 5, 1, 1, 0, 0, 0, 1]' : 0.0978918}", "{'[5, 0, 2, 3, 1, 6, 0, 1, 9, 14, 0, 5, 1, 1, 0, 0, 0, 1]' : 0.0980461}", "{'[5, 0, 2, 3, 1, 6, 0, 1, 9, 14, 0, 5, 1, 1, 0, 0, 0, 1]' : 0.10018}", "{'[5, 0, 2, 3, 1, 6, 0, 1, 9, 14, 0, 5, 1, 1, 0, 0, 0, 1]' : 0.0980082}", "{'[5, 0, 2, 3, 1, 6, 0, 1, 9, 14, 0, 5, 1, 1, 0, 0, 0, 1]' : 0.0981669}", "{'[5, 0, 2, 3, 1, 6, 0, 1, 9, 14, 0, 5, 1, 1, 0, 0, 0, 1]' : 0.0994492}", "{'[5, 0, 2, 3, 1, 6, 0, 1, 9, 14, 0, 5, 1, 1, 0, 0, 0, 1]' : 0.0976679}", "{'[5, 0, 2, 3, 1, 6, 0, 1, 9, 14, 0, 5, 1, 1, 0, 0, 0, 1]' : 0.0998158}", "{'[5, 0, 2, 3, 1, 6, 0, 1, 9, 14, 0, 5, 1, 1, 0, 0, 0, 1]' : 0.0988111}", "{'[5, 0, 2, 3, 1, 6, 0, 1, 9, 14, 0, 5, 1, 1, 0, 0, 0, 1]' : 0.0980899}", "{'[5, 0, 2, 3, 1, 6, 0, 1, 9, 14, 0, 5, 1, 1, 0, 0, 0, 1]' : 0.098062}", "{'[5, 0, 2, 3, 1, 6, 0, 1, 9, 14, 0, 5, 1, 1, 0, 0, 0, 1]' : 0.097945}", "{'[5, 0, 2, 3, 1, 6, 0, 1, 9, 14, 0, 5, 1, 1, 0, 0, 0, 1]' : 0.100043}", "{'[5, 0, 2, 3, 1, 6, 0, 1, 9, 14, 0, 5, 1, 1, 0, 0, 0, 1]' : 0.098151}", "{'[5, 0, 2, 3, 1, 6, 0, 1, 9, 14, 0, 5, 1, 1, 0, 0, 0, 1]' : 0.098058}", "{'[5, 0, 2, 3, 1, 6, 0, 1, 9, 14, 0, 5, 1, 1, 0, 0, 0, 1]' : 0.0989249}", "{'[5, 0, 2, 3, 1, 6, 0, 1, 9, 14, 0, 5, 1, 1, 0, 0, 0, 1]' : 0.098228}", "{'[5, 0, 2, 3, 1, 6, 0, 1, 9, 14, 0, 5, 1, 1, 0, 0, 0, 1]' : 0.0981851}", "{'[5, 0, 2, 3, 1, 6, 0, 1, 9, 14, 0, 5, 1, 1, 0, 0, 0, 1]' : 0.0957861}", "{'[5, 0, 2, 3, 1, 6, 0, 1, 9, 14, 0, 5, 1, 1, 0, 0, 0, 1]' : 0.095305}", "{'[5, 0, 2, 3, 1, 6, 0, 1, 9, 14, 0, 5, 1, 1, 0, 0, 0, 1]' : 0.0954819}", "{'[5, 0, 2, 3, 1, 6, 0, 1, 9, 14, 0, 5, 1, 1, 0, 0, 0, 1]' : 0.0956149}", "{'[5, 0, 2, 3, 1, 6, 0, 1, 9, 14, 0, 5, 1, 1, 0, 0, 0, 1]' : 0.0970268}", "{'[5, 0, 2, 3, 1, 6, 0, 1, 9, 14, 0, 5, 1, 1, 0, 0, 0, 1]' : 0.0981779}", "{'[5, 0, 2, 3, 1, 6, 0, 1, 9, 14, 0, 5, 1, 1, 0, 0, 0, 1]' : 0.0978229}", "{'[5, 0, 2, 3, 1, 6, 0, 1, 9, 14, 0, 5, 1, 1, 0, 0, 0, 1]' : 0.097656}", "{'[5, 0, 2, 3, 1, 6, 0, 1, 9, 14, 0, 5, 1, 1, 0, 0, 0, 1]' : 0.0963209}"]
returning from 'run': {'[5, 0, 2, 3, 1, 6, 0, 1, 9, 14, 0, 5, 1, 1, 0, 0, 0, 1]': ([0.100282, 0.0981388, 0.0981629, 0.0978918, 0.0980461, 0.10018, 0.0980082, 0.0981669, 0.0994492, 0.0976679, 0.0998158, 0.0988111, 0.0980899, 0.098062, 0.097945, 0.100043, 0.098151, 0.098058, 0.0989249, 0.098228, 0.0981851, 0.0957861, 0.095305, 0.0954819, 0.0956149, 0.0970268, 0.0981779, 0.0978229, 0.097656, 0.0963209], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 0, 2, 3, 1, 6, 0, 1, 9, 14, 0, 5, 1, 1, 0, 0, 0, 1]': ([0.100282, 0.0981388, 0.0981629, 0.0978918, 0.0980461, 0.10018, 0.0980082, 0.0981669, 0.0994492, 0.0976679, 0.0998158, 0.0988111, 0.0980899, 0.098062, 0.097945, 0.100043, 0.098151, 0.098058, 0.0989249, 0.098228, 0.0981851, 0.0957861, 0.095305, 0.0954819, 0.0956149, 0.0970268, 0.0981779, 0.0978229, 0.097656, 0.0963209], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	6
        Additions: 		128
        Multiplications: 	32
        Divisions: 		0
        Logical: 		0
        Reads: 			298
        Writes: 		66
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest3.exe __orio_perftest3.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest3.exe  
Program Test Output: 
{'[4, 3, 0, 4, 6, 1, 1, 1, 0, 0, 9, 7, 0, 1, 1, 1, 1, 1]' : 0.236061}
{'[4, 3, 0, 4, 6, 1, 1, 1, 0, 0, 9, 7, 0, 1, 1, 1, 1, 1]' : 0.23607}
{'[4, 3, 0, 4, 6, 1, 1, 1, 0, 0, 9, 7, 0, 1, 1, 1, 1, 1]' : 0.234244}
{'[4, 3, 0, 4, 6, 1, 1, 1, 0, 0, 9, 7, 0, 1, 1, 1, 1, 1]' : 0.204022}
{'[4, 3, 0, 4, 6, 1, 1, 1, 0, 0, 9, 7, 0, 1, 1, 1, 1, 1]' : 0.203721}
{'[4, 3, 0, 4, 6, 1, 1, 1, 0, 0, 9, 7, 0, 1, 1, 1, 1, 1]' : 0.201386}
{'[4, 3, 0, 4, 6, 1, 1, 1, 0, 0, 9, 7, 0, 1, 1, 1, 1, 1]' : 0.209738}
{'[4, 3, 0, 4, 6, 1, 1, 1, 0, 0, 9, 7, 0, 1, 1, 1, 1, 1]' : 0.203997}
{'[4, 3, 0, 4, 6, 1, 1, 1, 0, 0, 9, 7, 0, 1, 1, 1, 1, 1]' : 0.208833}
{'[4, 3, 0, 4, 6, 1, 1, 1, 0, 0, 9, 7, 0, 1, 1, 1, 1, 1]' : 0.209232}
{'[4, 3, 0, 4, 6, 1, 1, 1, 0, 0, 9, 7, 0, 1, 1, 1, 1, 1]' : 0.206219}
{'[4, 3, 0, 4, 6, 1, 1, 1, 0, 0, 9, 7, 0, 1, 1, 1, 1, 1]' : 0.202896}
{'[4, 3, 0, 4, 6, 1, 1, 1, 0, 0, 9, 7, 0, 1, 1, 1, 1, 1]' : 0.199637}
{'[4, 3, 0, 4, 6, 1, 1, 1, 0, 0, 9, 7, 0, 1, 1, 1, 1, 1]' : 0.208741}
{'[4, 3, 0, 4, 6, 1, 1, 1, 0, 0, 9, 7, 0, 1, 1, 1, 1, 1]' : 0.202959}
{'[4, 3, 0, 4, 6, 1, 1, 1, 0, 0, 9, 7, 0, 1, 1, 1, 1, 1]' : 0.203583}
{'[4, 3, 0, 4, 6, 1, 1, 1, 0, 0, 9, 7, 0, 1, 1, 1, 1, 1]' : 0.203752}
{'[4, 3, 0, 4, 6, 1, 1, 1, 0, 0, 9, 7, 0, 1, 1, 1, 1, 1]' : 0.204259}
{'[4, 3, 0, 4, 6, 1, 1, 1, 0, 0, 9, 7, 0, 1, 1, 1, 1, 1]' : 0.20384}
{'[4, 3, 0, 4, 6, 1, 1, 1, 0, 0, 9, 7, 0, 1, 1, 1, 1, 1]' : 0.203764}
{'[4, 3, 0, 4, 6, 1, 1, 1, 0, 0, 9, 7, 0, 1, 1, 1, 1, 1]' : 0.203732}
{'[4, 3, 0, 4, 6, 1, 1, 1, 0, 0, 9, 7, 0, 1, 1, 1, 1, 1]' : 0.209481}
{'[4, 3, 0, 4, 6, 1, 1, 1, 0, 0, 9, 7, 0, 1, 1, 1, 1, 1]' : 0.204001}
{'[4, 3, 0, 4, 6, 1, 1, 1, 0, 0, 9, 7, 0, 1, 1, 1, 1, 1]' : 0.204559}
{'[4, 3, 0, 4, 6, 1, 1, 1, 0, 0, 9, 7, 0, 1, 1, 1, 1, 1]' : 0.203859}
{'[4, 3, 0, 4, 6, 1, 1, 1, 0, 0, 9, 7, 0, 1, 1, 1, 1, 1]' : 0.203753}
{'[4, 3, 0, 4, 6, 1, 1, 1, 0, 0, 9, 7, 0, 1, 1, 1, 1, 1]' : 0.203937}
{'[4, 3, 0, 4, 6, 1, 1, 1, 0, 0, 9, 7, 0, 1, 1, 1, 1, 1]' : 0.203877}
{'[4, 3, 0, 4, 6, 1, 1, 1, 0, 0, 9, 7, 0, 1, 1, 1, 1, 1]' : 0.20969}
{'[4, 3, 0, 4, 6, 1, 1, 1, 0, 0, 9, 7, 0, 1, 1, 1, 1, 1]' : 0.2029}

out:
 ["{'[4, 3, 0, 4, 6, 1, 1, 1, 0, 0, 9, 7, 0, 1, 1, 1, 1, 1]' : 0.236061}", "{'[4, 3, 0, 4, 6, 1, 1, 1, 0, 0, 9, 7, 0, 1, 1, 1, 1, 1]' : 0.23607}", "{'[4, 3, 0, 4, 6, 1, 1, 1, 0, 0, 9, 7, 0, 1, 1, 1, 1, 1]' : 0.234244}", "{'[4, 3, 0, 4, 6, 1, 1, 1, 0, 0, 9, 7, 0, 1, 1, 1, 1, 1]' : 0.204022}", "{'[4, 3, 0, 4, 6, 1, 1, 1, 0, 0, 9, 7, 0, 1, 1, 1, 1, 1]' : 0.203721}", "{'[4, 3, 0, 4, 6, 1, 1, 1, 0, 0, 9, 7, 0, 1, 1, 1, 1, 1]' : 0.201386}", "{'[4, 3, 0, 4, 6, 1, 1, 1, 0, 0, 9, 7, 0, 1, 1, 1, 1, 1]' : 0.209738}", "{'[4, 3, 0, 4, 6, 1, 1, 1, 0, 0, 9, 7, 0, 1, 1, 1, 1, 1]' : 0.203997}", "{'[4, 3, 0, 4, 6, 1, 1, 1, 0, 0, 9, 7, 0, 1, 1, 1, 1, 1]' : 0.208833}", "{'[4, 3, 0, 4, 6, 1, 1, 1, 0, 0, 9, 7, 0, 1, 1, 1, 1, 1]' : 0.209232}", "{'[4, 3, 0, 4, 6, 1, 1, 1, 0, 0, 9, 7, 0, 1, 1, 1, 1, 1]' : 0.206219}", "{'[4, 3, 0, 4, 6, 1, 1, 1, 0, 0, 9, 7, 0, 1, 1, 1, 1, 1]' : 0.202896}", "{'[4, 3, 0, 4, 6, 1, 1, 1, 0, 0, 9, 7, 0, 1, 1, 1, 1, 1]' : 0.199637}", "{'[4, 3, 0, 4, 6, 1, 1, 1, 0, 0, 9, 7, 0, 1, 1, 1, 1, 1]' : 0.208741}", "{'[4, 3, 0, 4, 6, 1, 1, 1, 0, 0, 9, 7, 0, 1, 1, 1, 1, 1]' : 0.202959}", "{'[4, 3, 0, 4, 6, 1, 1, 1, 0, 0, 9, 7, 0, 1, 1, 1, 1, 1]' : 0.203583}", "{'[4, 3, 0, 4, 6, 1, 1, 1, 0, 0, 9, 7, 0, 1, 1, 1, 1, 1]' : 0.203752}", "{'[4, 3, 0, 4, 6, 1, 1, 1, 0, 0, 9, 7, 0, 1, 1, 1, 1, 1]' : 0.204259}", "{'[4, 3, 0, 4, 6, 1, 1, 1, 0, 0, 9, 7, 0, 1, 1, 1, 1, 1]' : 0.20384}", "{'[4, 3, 0, 4, 6, 1, 1, 1, 0, 0, 9, 7, 0, 1, 1, 1, 1, 1]' : 0.203764}", "{'[4, 3, 0, 4, 6, 1, 1, 1, 0, 0, 9, 7, 0, 1, 1, 1, 1, 1]' : 0.203732}", "{'[4, 3, 0, 4, 6, 1, 1, 1, 0, 0, 9, 7, 0, 1, 1, 1, 1, 1]' : 0.209481}", "{'[4, 3, 0, 4, 6, 1, 1, 1, 0, 0, 9, 7, 0, 1, 1, 1, 1, 1]' : 0.204001}", "{'[4, 3, 0, 4, 6, 1, 1, 1, 0, 0, 9, 7, 0, 1, 1, 1, 1, 1]' : 0.204559}", "{'[4, 3, 0, 4, 6, 1, 1, 1, 0, 0, 9, 7, 0, 1, 1, 1, 1, 1]' : 0.203859}", "{'[4, 3, 0, 4, 6, 1, 1, 1, 0, 0, 9, 7, 0, 1, 1, 1, 1, 1]' : 0.203753}", "{'[4, 3, 0, 4, 6, 1, 1, 1, 0, 0, 9, 7, 0, 1, 1, 1, 1, 1]' : 0.203937}", "{'[4, 3, 0, 4, 6, 1, 1, 1, 0, 0, 9, 7, 0, 1, 1, 1, 1, 1]' : 0.203877}", "{'[4, 3, 0, 4, 6, 1, 1, 1, 0, 0, 9, 7, 0, 1, 1, 1, 1, 1]' : 0.20969}", "{'[4, 3, 0, 4, 6, 1, 1, 1, 0, 0, 9, 7, 0, 1, 1, 1, 1, 1]' : 0.2029}"]
returning from 'run': {'[4, 3, 0, 4, 6, 1, 1, 1, 0, 0, 9, 7, 0, 1, 1, 1, 1, 1]': ([0.236061, 0.23607, 0.234244, 0.204022, 0.203721, 0.201386, 0.209738, 0.203997, 0.208833, 0.209232, 0.206219, 0.202896, 0.199637, 0.208741, 0.202959, 0.203583, 0.203752, 0.204259, 0.20384, 0.203764, 0.203732, 0.209481, 0.204001, 0.204559, 0.203859, 0.203753, 0.203937, 0.203877, 0.20969, 0.2029], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 3, 0, 4, 6, 1, 1, 1, 0, 0, 9, 7, 0, 1, 1, 1, 1, 1]': ([0.236061, 0.23607, 0.234244, 0.204022, 0.203721, 0.201386, 0.209738, 0.203997, 0.208833, 0.209232, 0.206219, 0.202896, 0.199637, 0.208741, 0.202959, 0.203583, 0.203752, 0.204259, 0.20384, 0.203764, 0.203732, 0.209481, 0.204001, 0.204559, 0.203859, 0.203753, 0.203937, 0.203877, 0.20969, 0.2029], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	43
        Max loop nest depth: 	5
        Additions: 		2687
        Multiplications: 	792
        Divisions: 		0
        Logical: 		0
        Reads: 			4359
        Writes: 		515
        Comparisons:		43
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest4.exe __orio_perftest4.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest4.exe  
Program Test Output: 
{'[6, 6, 1, 0, 0, 3, 0, 0, 17, 8, 11, 0, 1, 1, 0, 0, 1, 0]' : 0.134844}
{'[6, 6, 1, 0, 0, 3, 0, 0, 17, 8, 11, 0, 1, 1, 0, 0, 1, 0]' : 0.134869}
{'[6, 6, 1, 0, 0, 3, 0, 0, 17, 8, 11, 0, 1, 1, 0, 0, 1, 0]' : 0.134667}
{'[6, 6, 1, 0, 0, 3, 0, 0, 17, 8, 11, 0, 1, 1, 0, 0, 1, 0]' : 0.134789}
{'[6, 6, 1, 0, 0, 3, 0, 0, 17, 8, 11, 0, 1, 1, 0, 0, 1, 0]' : 0.125869}
{'[6, 6, 1, 0, 0, 3, 0, 0, 17, 8, 11, 0, 1, 1, 0, 0, 1, 0]' : 0.118239}
{'[6, 6, 1, 0, 0, 3, 0, 0, 17, 8, 11, 0, 1, 1, 0, 0, 1, 0]' : 0.118141}
{'[6, 6, 1, 0, 0, 3, 0, 0, 17, 8, 11, 0, 1, 1, 0, 0, 1, 0]' : 0.1181}
{'[6, 6, 1, 0, 0, 3, 0, 0, 17, 8, 11, 0, 1, 1, 0, 0, 1, 0]' : 0.118412}
{'[6, 6, 1, 0, 0, 3, 0, 0, 17, 8, 11, 0, 1, 1, 0, 0, 1, 0]' : 0.118821}
{'[6, 6, 1, 0, 0, 3, 0, 0, 17, 8, 11, 0, 1, 1, 0, 0, 1, 0]' : 0.118179}
{'[6, 6, 1, 0, 0, 3, 0, 0, 17, 8, 11, 0, 1, 1, 0, 0, 1, 0]' : 0.118071}
{'[6, 6, 1, 0, 0, 3, 0, 0, 17, 8, 11, 0, 1, 1, 0, 0, 1, 0]' : 0.118299}
{'[6, 6, 1, 0, 0, 3, 0, 0, 17, 8, 11, 0, 1, 1, 0, 0, 1, 0]' : 0.118226}
{'[6, 6, 1, 0, 0, 3, 0, 0, 17, 8, 11, 0, 1, 1, 0, 0, 1, 0]' : 0.118113}
{'[6, 6, 1, 0, 0, 3, 0, 0, 17, 8, 11, 0, 1, 1, 0, 0, 1, 0]' : 0.118763}
{'[6, 6, 1, 0, 0, 3, 0, 0, 17, 8, 11, 0, 1, 1, 0, 0, 1, 0]' : 0.1213}
{'[6, 6, 1, 0, 0, 3, 0, 0, 17, 8, 11, 0, 1, 1, 0, 0, 1, 0]' : 0.120956}
{'[6, 6, 1, 0, 0, 3, 0, 0, 17, 8, 11, 0, 1, 1, 0, 0, 1, 0]' : 0.120943}
{'[6, 6, 1, 0, 0, 3, 0, 0, 17, 8, 11, 0, 1, 1, 0, 0, 1, 0]' : 0.120969}
{'[6, 6, 1, 0, 0, 3, 0, 0, 17, 8, 11, 0, 1, 1, 0, 0, 1, 0]' : 0.121352}
{'[6, 6, 1, 0, 0, 3, 0, 0, 17, 8, 11, 0, 1, 1, 0, 0, 1, 0]' : 0.12102}
{'[6, 6, 1, 0, 0, 3, 0, 0, 17, 8, 11, 0, 1, 1, 0, 0, 1, 0]' : 0.118782}
{'[6, 6, 1, 0, 0, 3, 0, 0, 17, 8, 11, 0, 1, 1, 0, 0, 1, 0]' : 0.117924}
{'[6, 6, 1, 0, 0, 3, 0, 0, 17, 8, 11, 0, 1, 1, 0, 0, 1, 0]' : 0.1199}
{'[6, 6, 1, 0, 0, 3, 0, 0, 17, 8, 11, 0, 1, 1, 0, 0, 1, 0]' : 0.12095}
{'[6, 6, 1, 0, 0, 3, 0, 0, 17, 8, 11, 0, 1, 1, 0, 0, 1, 0]' : 0.120986}
{'[6, 6, 1, 0, 0, 3, 0, 0, 17, 8, 11, 0, 1, 1, 0, 0, 1, 0]' : 0.120809}
{'[6, 6, 1, 0, 0, 3, 0, 0, 17, 8, 11, 0, 1, 1, 0, 0, 1, 0]' : 0.121321}
{'[6, 6, 1, 0, 0, 3, 0, 0, 17, 8, 11, 0, 1, 1, 0, 0, 1, 0]' : 0.121031}

out:
 ["{'[6, 6, 1, 0, 0, 3, 0, 0, 17, 8, 11, 0, 1, 1, 0, 0, 1, 0]' : 0.134844}", "{'[6, 6, 1, 0, 0, 3, 0, 0, 17, 8, 11, 0, 1, 1, 0, 0, 1, 0]' : 0.134869}", "{'[6, 6, 1, 0, 0, 3, 0, 0, 17, 8, 11, 0, 1, 1, 0, 0, 1, 0]' : 0.134667}", "{'[6, 6, 1, 0, 0, 3, 0, 0, 17, 8, 11, 0, 1, 1, 0, 0, 1, 0]' : 0.134789}", "{'[6, 6, 1, 0, 0, 3, 0, 0, 17, 8, 11, 0, 1, 1, 0, 0, 1, 0]' : 0.125869}", "{'[6, 6, 1, 0, 0, 3, 0, 0, 17, 8, 11, 0, 1, 1, 0, 0, 1, 0]' : 0.118239}", "{'[6, 6, 1, 0, 0, 3, 0, 0, 17, 8, 11, 0, 1, 1, 0, 0, 1, 0]' : 0.118141}", "{'[6, 6, 1, 0, 0, 3, 0, 0, 17, 8, 11, 0, 1, 1, 0, 0, 1, 0]' : 0.1181}", "{'[6, 6, 1, 0, 0, 3, 0, 0, 17, 8, 11, 0, 1, 1, 0, 0, 1, 0]' : 0.118412}", "{'[6, 6, 1, 0, 0, 3, 0, 0, 17, 8, 11, 0, 1, 1, 0, 0, 1, 0]' : 0.118821}", "{'[6, 6, 1, 0, 0, 3, 0, 0, 17, 8, 11, 0, 1, 1, 0, 0, 1, 0]' : 0.118179}", "{'[6, 6, 1, 0, 0, 3, 0, 0, 17, 8, 11, 0, 1, 1, 0, 0, 1, 0]' : 0.118071}", "{'[6, 6, 1, 0, 0, 3, 0, 0, 17, 8, 11, 0, 1, 1, 0, 0, 1, 0]' : 0.118299}", "{'[6, 6, 1, 0, 0, 3, 0, 0, 17, 8, 11, 0, 1, 1, 0, 0, 1, 0]' : 0.118226}", "{'[6, 6, 1, 0, 0, 3, 0, 0, 17, 8, 11, 0, 1, 1, 0, 0, 1, 0]' : 0.118113}", "{'[6, 6, 1, 0, 0, 3, 0, 0, 17, 8, 11, 0, 1, 1, 0, 0, 1, 0]' : 0.118763}", "{'[6, 6, 1, 0, 0, 3, 0, 0, 17, 8, 11, 0, 1, 1, 0, 0, 1, 0]' : 0.1213}", "{'[6, 6, 1, 0, 0, 3, 0, 0, 17, 8, 11, 0, 1, 1, 0, 0, 1, 0]' : 0.120956}", "{'[6, 6, 1, 0, 0, 3, 0, 0, 17, 8, 11, 0, 1, 1, 0, 0, 1, 0]' : 0.120943}", "{'[6, 6, 1, 0, 0, 3, 0, 0, 17, 8, 11, 0, 1, 1, 0, 0, 1, 0]' : 0.120969}", "{'[6, 6, 1, 0, 0, 3, 0, 0, 17, 8, 11, 0, 1, 1, 0, 0, 1, 0]' : 0.121352}", "{'[6, 6, 1, 0, 0, 3, 0, 0, 17, 8, 11, 0, 1, 1, 0, 0, 1, 0]' : 0.12102}", "{'[6, 6, 1, 0, 0, 3, 0, 0, 17, 8, 11, 0, 1, 1, 0, 0, 1, 0]' : 0.118782}", "{'[6, 6, 1, 0, 0, 3, 0, 0, 17, 8, 11, 0, 1, 1, 0, 0, 1, 0]' : 0.117924}", "{'[6, 6, 1, 0, 0, 3, 0, 0, 17, 8, 11, 0, 1, 1, 0, 0, 1, 0]' : 0.1199}", "{'[6, 6, 1, 0, 0, 3, 0, 0, 17, 8, 11, 0, 1, 1, 0, 0, 1, 0]' : 0.12095}", "{'[6, 6, 1, 0, 0, 3, 0, 0, 17, 8, 11, 0, 1, 1, 0, 0, 1, 0]' : 0.120986}", "{'[6, 6, 1, 0, 0, 3, 0, 0, 17, 8, 11, 0, 1, 1, 0, 0, 1, 0]' : 0.120809}", "{'[6, 6, 1, 0, 0, 3, 0, 0, 17, 8, 11, 0, 1, 1, 0, 0, 1, 0]' : 0.121321}", "{'[6, 6, 1, 0, 0, 3, 0, 0, 17, 8, 11, 0, 1, 1, 0, 0, 1, 0]' : 0.121031}"]
returning from 'run': {'[6, 6, 1, 0, 0, 3, 0, 0, 17, 8, 11, 0, 1, 1, 0, 0, 1, 0]': ([0.134844, 0.134869, 0.134667, 0.134789, 0.125869, 0.118239, 0.118141, 0.1181, 0.118412, 0.118821, 0.118179, 0.118071, 0.118299, 0.118226, 0.118113, 0.118763, 0.1213, 0.120956, 0.120943, 0.120969, 0.121352, 0.12102, 0.118782, 0.117924, 0.1199, 0.12095, 0.120986, 0.120809, 0.121321, 0.121031], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 1, 0, 0, 3, 0, 0, 17, 8, 11, 0, 1, 1, 0, 0, 1, 0]': ([0.134844, 0.134869, 0.134667, 0.134789, 0.125869, 0.118239, 0.118141, 0.1181, 0.118412, 0.118821, 0.118179, 0.118071, 0.118299, 0.118226, 0.118113, 0.118763, 0.1213, 0.120956, 0.120943, 0.120969, 0.121352, 0.12102, 0.118782, 0.117924, 0.1199, 0.12095, 0.120986, 0.120809, 0.121321, 0.121031], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	23
        Max loop nest depth: 	4
        Additions: 		955
        Multiplications: 	328
        Divisions: 		0
        Logical: 		0
        Reads: 			1971
        Writes: 		390
        Comparisons:		23
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest5.exe __orio_perftest5.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest5.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest5.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest5.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest5.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		13953
        Multiplications: 	3584
        Divisions: 		0
        Logical: 		0
        Reads: 			19866
        Writes: 		1848
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest6.exe __orio_perftest6.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest6.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest6.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest6.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest6.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	134
        Max loop nest depth: 	6
        Additions: 		9016
        Multiplications: 	3024
        Divisions: 		0
        Logical: 		0
        Reads: 			17442
        Writes: 		3309
        Comparisons:		134
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest7.exe __orio_perftest7.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest7.exe  
Program Test Output: 
{'[2, 6, 1, 1, 0, 1, 1, 1, 11, 20, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.164426}
{'[2, 6, 1, 1, 0, 1, 1, 1, 11, 20, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.164073}
{'[2, 6, 1, 1, 0, 1, 1, 1, 11, 20, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.164267}
{'[2, 6, 1, 1, 0, 1, 1, 1, 11, 20, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.157643}
{'[2, 6, 1, 1, 0, 1, 1, 1, 11, 20, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.1476}
{'[2, 6, 1, 1, 0, 1, 1, 1, 11, 20, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.148177}
{'[2, 6, 1, 1, 0, 1, 1, 1, 11, 20, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.14843}
{'[2, 6, 1, 1, 0, 1, 1, 1, 11, 20, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.147511}
{'[2, 6, 1, 1, 0, 1, 1, 1, 11, 20, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.148059}
{'[2, 6, 1, 1, 0, 1, 1, 1, 11, 20, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.14872}
{'[2, 6, 1, 1, 0, 1, 1, 1, 11, 20, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.149471}
{'[2, 6, 1, 1, 0, 1, 1, 1, 11, 20, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.148487}
{'[2, 6, 1, 1, 0, 1, 1, 1, 11, 20, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.147411}
{'[2, 6, 1, 1, 0, 1, 1, 1, 11, 20, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.149022}
{'[2, 6, 1, 1, 0, 1, 1, 1, 11, 20, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.14879}
{'[2, 6, 1, 1, 0, 1, 1, 1, 11, 20, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.14886}
{'[2, 6, 1, 1, 0, 1, 1, 1, 11, 20, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.150057}
{'[2, 6, 1, 1, 0, 1, 1, 1, 11, 20, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.148445}
{'[2, 6, 1, 1, 0, 1, 1, 1, 11, 20, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.148372}
{'[2, 6, 1, 1, 0, 1, 1, 1, 11, 20, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.149329}
{'[2, 6, 1, 1, 0, 1, 1, 1, 11, 20, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.150008}
{'[2, 6, 1, 1, 0, 1, 1, 1, 11, 20, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.148997}
{'[2, 6, 1, 1, 0, 1, 1, 1, 11, 20, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.148643}
{'[2, 6, 1, 1, 0, 1, 1, 1, 11, 20, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.148816}
{'[2, 6, 1, 1, 0, 1, 1, 1, 11, 20, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.148577}
{'[2, 6, 1, 1, 0, 1, 1, 1, 11, 20, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.148737}
{'[2, 6, 1, 1, 0, 1, 1, 1, 11, 20, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.14846}
{'[2, 6, 1, 1, 0, 1, 1, 1, 11, 20, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.148454}
{'[2, 6, 1, 1, 0, 1, 1, 1, 11, 20, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.150001}
{'[2, 6, 1, 1, 0, 1, 1, 1, 11, 20, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.151487}

out:
 ["{'[2, 6, 1, 1, 0, 1, 1, 1, 11, 20, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.164426}", "{'[2, 6, 1, 1, 0, 1, 1, 1, 11, 20, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.164073}", "{'[2, 6, 1, 1, 0, 1, 1, 1, 11, 20, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.164267}", "{'[2, 6, 1, 1, 0, 1, 1, 1, 11, 20, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.157643}", "{'[2, 6, 1, 1, 0, 1, 1, 1, 11, 20, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.1476}", "{'[2, 6, 1, 1, 0, 1, 1, 1, 11, 20, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.148177}", "{'[2, 6, 1, 1, 0, 1, 1, 1, 11, 20, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.14843}", "{'[2, 6, 1, 1, 0, 1, 1, 1, 11, 20, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.147511}", "{'[2, 6, 1, 1, 0, 1, 1, 1, 11, 20, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.148059}", "{'[2, 6, 1, 1, 0, 1, 1, 1, 11, 20, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.14872}", "{'[2, 6, 1, 1, 0, 1, 1, 1, 11, 20, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.149471}", "{'[2, 6, 1, 1, 0, 1, 1, 1, 11, 20, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.148487}", "{'[2, 6, 1, 1, 0, 1, 1, 1, 11, 20, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.147411}", "{'[2, 6, 1, 1, 0, 1, 1, 1, 11, 20, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.149022}", "{'[2, 6, 1, 1, 0, 1, 1, 1, 11, 20, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.14879}", "{'[2, 6, 1, 1, 0, 1, 1, 1, 11, 20, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.14886}", "{'[2, 6, 1, 1, 0, 1, 1, 1, 11, 20, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.150057}", "{'[2, 6, 1, 1, 0, 1, 1, 1, 11, 20, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.148445}", "{'[2, 6, 1, 1, 0, 1, 1, 1, 11, 20, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.148372}", "{'[2, 6, 1, 1, 0, 1, 1, 1, 11, 20, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.149329}", "{'[2, 6, 1, 1, 0, 1, 1, 1, 11, 20, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.150008}", "{'[2, 6, 1, 1, 0, 1, 1, 1, 11, 20, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.148997}", "{'[2, 6, 1, 1, 0, 1, 1, 1, 11, 20, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.148643}", "{'[2, 6, 1, 1, 0, 1, 1, 1, 11, 20, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.148816}", "{'[2, 6, 1, 1, 0, 1, 1, 1, 11, 20, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.148577}", "{'[2, 6, 1, 1, 0, 1, 1, 1, 11, 20, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.148737}", "{'[2, 6, 1, 1, 0, 1, 1, 1, 11, 20, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.14846}", "{'[2, 6, 1, 1, 0, 1, 1, 1, 11, 20, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.148454}", "{'[2, 6, 1, 1, 0, 1, 1, 1, 11, 20, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.150001}", "{'[2, 6, 1, 1, 0, 1, 1, 1, 11, 20, 0, 25, 2, 0, 0, 1, 0, 1]' : 0.151487}"]
returning from 'run': {'[2, 6, 1, 1, 0, 1, 1, 1, 11, 20, 0, 25, 2, 0, 0, 1, 0, 1]': ([0.164426, 0.164073, 0.164267, 0.157643, 0.1476, 0.148177, 0.14843, 0.147511, 0.148059, 0.14872, 0.149471, 0.148487, 0.147411, 0.149022, 0.14879, 0.14886, 0.150057, 0.148445, 0.148372, 0.149329, 0.150008, 0.148997, 0.148643, 0.148816, 0.148577, 0.148737, 0.14846, 0.148454, 0.150001, 0.151487], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 6, 1, 1, 0, 1, 1, 1, 11, 20, 0, 25, 2, 0, 0, 1, 0, 1]': ([0.164426, 0.164073, 0.164267, 0.157643, 0.1476, 0.148177, 0.14843, 0.147511, 0.148059, 0.14872, 0.149471, 0.148487, 0.147411, 0.149022, 0.14879, 0.14886, 0.150057, 0.148445, 0.148372, 0.149329, 0.150008, 0.148997, 0.148643, 0.148816, 0.148577, 0.148737, 0.14846, 0.148454, 0.150001, 0.151487], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	6
        Additions: 		325
        Multiplications: 	80
        Divisions: 		0
        Logical: 		0
        Reads: 			654
        Writes: 		127
        Comparisons:		24
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest8.exe __orio_perftest8.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest8.exe  
Program Test Output: 
{'[6, 1, 2, 6, 4, 1, 1, 0, 29, 2, 0, 0, 0, 0, 1, 0, 0, 0]' : 0.158962}
{'[6, 1, 2, 6, 4, 1, 1, 0, 29, 2, 0, 0, 0, 0, 1, 0, 0, 0]' : 0.159203}
{'[6, 1, 2, 6, 4, 1, 1, 0, 29, 2, 0, 0, 0, 0, 1, 0, 0, 0]' : 0.158364}
{'[6, 1, 2, 6, 4, 1, 1, 0, 29, 2, 0, 0, 0, 0, 1, 0, 0, 0]' : 0.15456}
{'[6, 1, 2, 6, 4, 1, 1, 0, 29, 2, 0, 0, 0, 0, 1, 0, 0, 0]' : 0.154709}
{'[6, 1, 2, 6, 4, 1, 1, 0, 29, 2, 0, 0, 0, 0, 1, 0, 0, 0]' : 0.15485}
{'[6, 1, 2, 6, 4, 1, 1, 0, 29, 2, 0, 0, 0, 0, 1, 0, 0, 0]' : 0.158863}
{'[6, 1, 2, 6, 4, 1, 1, 0, 29, 2, 0, 0, 0, 0, 1, 0, 0, 0]' : 0.159152}
{'[6, 1, 2, 6, 4, 1, 1, 0, 29, 2, 0, 0, 0, 0, 1, 0, 0, 0]' : 0.159417}
{'[6, 1, 2, 6, 4, 1, 1, 0, 29, 2, 0, 0, 0, 0, 1, 0, 0, 0]' : 0.159183}
{'[6, 1, 2, 6, 4, 1, 1, 0, 29, 2, 0, 0, 0, 0, 1, 0, 0, 0]' : 0.15765}
{'[6, 1, 2, 6, 4, 1, 1, 0, 29, 2, 0, 0, 0, 0, 1, 0, 0, 0]' : 0.154549}
{'[6, 1, 2, 6, 4, 1, 1, 0, 29, 2, 0, 0, 0, 0, 1, 0, 0, 0]' : 0.157591}
{'[6, 1, 2, 6, 4, 1, 1, 0, 29, 2, 0, 0, 0, 0, 1, 0, 0, 0]' : 0.159093}
{'[6, 1, 2, 6, 4, 1, 1, 0, 29, 2, 0, 0, 0, 0, 1, 0, 0, 0]' : 0.159139}
{'[6, 1, 2, 6, 4, 1, 1, 0, 29, 2, 0, 0, 0, 0, 1, 0, 0, 0]' : 0.159085}
{'[6, 1, 2, 6, 4, 1, 1, 0, 29, 2, 0, 0, 0, 0, 1, 0, 0, 0]' : 0.159061}
{'[6, 1, 2, 6, 4, 1, 1, 0, 29, 2, 0, 0, 0, 0, 1, 0, 0, 0]' : 0.159226}
{'[6, 1, 2, 6, 4, 1, 1, 0, 29, 2, 0, 0, 0, 0, 1, 0, 0, 0]' : 0.159107}
{'[6, 1, 2, 6, 4, 1, 1, 0, 29, 2, 0, 0, 0, 0, 1, 0, 0, 0]' : 0.159091}
{'[6, 1, 2, 6, 4, 1, 1, 0, 29, 2, 0, 0, 0, 0, 1, 0, 0, 0]' : 0.15609}
{'[6, 1, 2, 6, 4, 1, 1, 0, 29, 2, 0, 0, 0, 0, 1, 0, 0, 0]' : 0.155309}
{'[6, 1, 2, 6, 4, 1, 1, 0, 29, 2, 0, 0, 0, 0, 1, 0, 0, 0]' : 0.159275}
{'[6, 1, 2, 6, 4, 1, 1, 0, 29, 2, 0, 0, 0, 0, 1, 0, 0, 0]' : 0.159117}
{'[6, 1, 2, 6, 4, 1, 1, 0, 29, 2, 0, 0, 0, 0, 1, 0, 0, 0]' : 0.157039}
{'[6, 1, 2, 6, 4, 1, 1, 0, 29, 2, 0, 0, 0, 0, 1, 0, 0, 0]' : 0.159121}
{'[6, 1, 2, 6, 4, 1, 1, 0, 29, 2, 0, 0, 0, 0, 1, 0, 0, 0]' : 0.159066}
{'[6, 1, 2, 6, 4, 1, 1, 0, 29, 2, 0, 0, 0, 0, 1, 0, 0, 0]' : 0.15894}
{'[6, 1, 2, 6, 4, 1, 1, 0, 29, 2, 0, 0, 0, 0, 1, 0, 0, 0]' : 0.159062}
{'[6, 1, 2, 6, 4, 1, 1, 0, 29, 2, 0, 0, 0, 0, 1, 0, 0, 0]' : 0.159153}

out:
 ["{'[6, 1, 2, 6, 4, 1, 1, 0, 29, 2, 0, 0, 0, 0, 1, 0, 0, 0]' : 0.158962}", "{'[6, 1, 2, 6, 4, 1, 1, 0, 29, 2, 0, 0, 0, 0, 1, 0, 0, 0]' : 0.159203}", "{'[6, 1, 2, 6, 4, 1, 1, 0, 29, 2, 0, 0, 0, 0, 1, 0, 0, 0]' : 0.158364}", "{'[6, 1, 2, 6, 4, 1, 1, 0, 29, 2, 0, 0, 0, 0, 1, 0, 0, 0]' : 0.15456}", "{'[6, 1, 2, 6, 4, 1, 1, 0, 29, 2, 0, 0, 0, 0, 1, 0, 0, 0]' : 0.154709}", "{'[6, 1, 2, 6, 4, 1, 1, 0, 29, 2, 0, 0, 0, 0, 1, 0, 0, 0]' : 0.15485}", "{'[6, 1, 2, 6, 4, 1, 1, 0, 29, 2, 0, 0, 0, 0, 1, 0, 0, 0]' : 0.158863}", "{'[6, 1, 2, 6, 4, 1, 1, 0, 29, 2, 0, 0, 0, 0, 1, 0, 0, 0]' : 0.159152}", "{'[6, 1, 2, 6, 4, 1, 1, 0, 29, 2, 0, 0, 0, 0, 1, 0, 0, 0]' : 0.159417}", "{'[6, 1, 2, 6, 4, 1, 1, 0, 29, 2, 0, 0, 0, 0, 1, 0, 0, 0]' : 0.159183}", "{'[6, 1, 2, 6, 4, 1, 1, 0, 29, 2, 0, 0, 0, 0, 1, 0, 0, 0]' : 0.15765}", "{'[6, 1, 2, 6, 4, 1, 1, 0, 29, 2, 0, 0, 0, 0, 1, 0, 0, 0]' : 0.154549}", "{'[6, 1, 2, 6, 4, 1, 1, 0, 29, 2, 0, 0, 0, 0, 1, 0, 0, 0]' : 0.157591}", "{'[6, 1, 2, 6, 4, 1, 1, 0, 29, 2, 0, 0, 0, 0, 1, 0, 0, 0]' : 0.159093}", "{'[6, 1, 2, 6, 4, 1, 1, 0, 29, 2, 0, 0, 0, 0, 1, 0, 0, 0]' : 0.159139}", "{'[6, 1, 2, 6, 4, 1, 1, 0, 29, 2, 0, 0, 0, 0, 1, 0, 0, 0]' : 0.159085}", "{'[6, 1, 2, 6, 4, 1, 1, 0, 29, 2, 0, 0, 0, 0, 1, 0, 0, 0]' : 0.159061}", "{'[6, 1, 2, 6, 4, 1, 1, 0, 29, 2, 0, 0, 0, 0, 1, 0, 0, 0]' : 0.159226}", "{'[6, 1, 2, 6, 4, 1, 1, 0, 29, 2, 0, 0, 0, 0, 1, 0, 0, 0]' : 0.159107}", "{'[6, 1, 2, 6, 4, 1, 1, 0, 29, 2, 0, 0, 0, 0, 1, 0, 0, 0]' : 0.159091}", "{'[6, 1, 2, 6, 4, 1, 1, 0, 29, 2, 0, 0, 0, 0, 1, 0, 0, 0]' : 0.15609}", "{'[6, 1, 2, 6, 4, 1, 1, 0, 29, 2, 0, 0, 0, 0, 1, 0, 0, 0]' : 0.155309}", "{'[6, 1, 2, 6, 4, 1, 1, 0, 29, 2, 0, 0, 0, 0, 1, 0, 0, 0]' : 0.159275}", "{'[6, 1, 2, 6, 4, 1, 1, 0, 29, 2, 0, 0, 0, 0, 1, 0, 0, 0]' : 0.159117}", "{'[6, 1, 2, 6, 4, 1, 1, 0, 29, 2, 0, 0, 0, 0, 1, 0, 0, 0]' : 0.157039}", "{'[6, 1, 2, 6, 4, 1, 1, 0, 29, 2, 0, 0, 0, 0, 1, 0, 0, 0]' : 0.159121}", "{'[6, 1, 2, 6, 4, 1, 1, 0, 29, 2, 0, 0, 0, 0, 1, 0, 0, 0]' : 0.159066}", "{'[6, 1, 2, 6, 4, 1, 1, 0, 29, 2, 0, 0, 0, 0, 1, 0, 0, 0]' : 0.15894}", "{'[6, 1, 2, 6, 4, 1, 1, 0, 29, 2, 0, 0, 0, 0, 1, 0, 0, 0]' : 0.159062}", "{'[6, 1, 2, 6, 4, 1, 1, 0, 29, 2, 0, 0, 0, 0, 1, 0, 0, 0]' : 0.159153}"]
returning from 'run': {'[6, 1, 2, 6, 4, 1, 1, 0, 29, 2, 0, 0, 0, 0, 1, 0, 0, 0]': ([0.158962, 0.159203, 0.158364, 0.15456, 0.154709, 0.15485, 0.158863, 0.159152, 0.159417, 0.159183, 0.15765, 0.154549, 0.157591, 0.159093, 0.159139, 0.159085, 0.159061, 0.159226, 0.159107, 0.159091, 0.15609, 0.155309, 0.159275, 0.159117, 0.157039, 0.159121, 0.159066, 0.15894, 0.159062, 0.159153], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 1, 2, 6, 4, 1, 1, 0, 29, 2, 0, 0, 0, 0, 1, 0, 0, 0]': ([0.158962, 0.159203, 0.158364, 0.15456, 0.154709, 0.15485, 0.158863, 0.159152, 0.159417, 0.159183, 0.15765, 0.154549, 0.157591, 0.159093, 0.159139, 0.159085, 0.159061, 0.159226, 0.159107, 0.159091, 0.15609, 0.155309, 0.159275, 0.159117, 0.157039, 0.159121, 0.159066, 0.15894, 0.159062, 0.159153], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = jjj
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	4
        Additions: 		1700
        Multiplications: 	396
        Divisions: 		0
        Logical: 		0
        Reads: 			2608
        Writes: 		270
        Comparisons:		24
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest9.exe __orio_perftest9.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest9.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest9.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest9.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest9.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	41
        Max loop nest depth: 	5
        Additions: 		1191
        Multiplications: 	392
        Divisions: 		0
        Logical: 		0
        Reads: 			2426
        Writes: 		316
        Comparisons:		41
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest10.exe __orio_perftest10.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest10.exe  
Program Test Output: 
{'[0, 5, 0, 3, 6, 1, 1, 0, 0, 15, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.228147}
{'[0, 5, 0, 3, 6, 1, 1, 0, 0, 15, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.217087}
{'[0, 5, 0, 3, 6, 1, 1, 0, 0, 15, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.1984}
{'[0, 5, 0, 3, 6, 1, 1, 0, 0, 15, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.198088}
{'[0, 5, 0, 3, 6, 1, 1, 0, 0, 15, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.198215}
{'[0, 5, 0, 3, 6, 1, 1, 0, 0, 15, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.197759}
{'[0, 5, 0, 3, 6, 1, 1, 0, 0, 15, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.198312}
{'[0, 5, 0, 3, 6, 1, 1, 0, 0, 15, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.197949}
{'[0, 5, 0, 3, 6, 1, 1, 0, 0, 15, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.198005}
{'[0, 5, 0, 3, 6, 1, 1, 0, 0, 15, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.197913}
{'[0, 5, 0, 3, 6, 1, 1, 0, 0, 15, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.197433}
{'[0, 5, 0, 3, 6, 1, 1, 0, 0, 15, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.197402}
{'[0, 5, 0, 3, 6, 1, 1, 0, 0, 15, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.198176}
{'[0, 5, 0, 3, 6, 1, 1, 0, 0, 15, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.197744}
{'[0, 5, 0, 3, 6, 1, 1, 0, 0, 15, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.198024}
{'[0, 5, 0, 3, 6, 1, 1, 0, 0, 15, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.197729}
{'[0, 5, 0, 3, 6, 1, 1, 0, 0, 15, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.197692}
{'[0, 5, 0, 3, 6, 1, 1, 0, 0, 15, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.197855}
{'[0, 5, 0, 3, 6, 1, 1, 0, 0, 15, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.198152}
{'[0, 5, 0, 3, 6, 1, 1, 0, 0, 15, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.197677}
{'[0, 5, 0, 3, 6, 1, 1, 0, 0, 15, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.197707}
{'[0, 5, 0, 3, 6, 1, 1, 0, 0, 15, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.197508}
{'[0, 5, 0, 3, 6, 1, 1, 0, 0, 15, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.197776}
{'[0, 5, 0, 3, 6, 1, 1, 0, 0, 15, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.197795}
{'[0, 5, 0, 3, 6, 1, 1, 0, 0, 15, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.197989}
{'[0, 5, 0, 3, 6, 1, 1, 0, 0, 15, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.197687}
{'[0, 5, 0, 3, 6, 1, 1, 0, 0, 15, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.198482}
{'[0, 5, 0, 3, 6, 1, 1, 0, 0, 15, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.198348}
{'[0, 5, 0, 3, 6, 1, 1, 0, 0, 15, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.197676}
{'[0, 5, 0, 3, 6, 1, 1, 0, 0, 15, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.197933}

out:
 ["{'[0, 5, 0, 3, 6, 1, 1, 0, 0, 15, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.228147}", "{'[0, 5, 0, 3, 6, 1, 1, 0, 0, 15, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.217087}", "{'[0, 5, 0, 3, 6, 1, 1, 0, 0, 15, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.1984}", "{'[0, 5, 0, 3, 6, 1, 1, 0, 0, 15, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.198088}", "{'[0, 5, 0, 3, 6, 1, 1, 0, 0, 15, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.198215}", "{'[0, 5, 0, 3, 6, 1, 1, 0, 0, 15, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.197759}", "{'[0, 5, 0, 3, 6, 1, 1, 0, 0, 15, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.198312}", "{'[0, 5, 0, 3, 6, 1, 1, 0, 0, 15, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.197949}", "{'[0, 5, 0, 3, 6, 1, 1, 0, 0, 15, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.198005}", "{'[0, 5, 0, 3, 6, 1, 1, 0, 0, 15, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.197913}", "{'[0, 5, 0, 3, 6, 1, 1, 0, 0, 15, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.197433}", "{'[0, 5, 0, 3, 6, 1, 1, 0, 0, 15, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.197402}", "{'[0, 5, 0, 3, 6, 1, 1, 0, 0, 15, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.198176}", "{'[0, 5, 0, 3, 6, 1, 1, 0, 0, 15, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.197744}", "{'[0, 5, 0, 3, 6, 1, 1, 0, 0, 15, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.198024}", "{'[0, 5, 0, 3, 6, 1, 1, 0, 0, 15, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.197729}", "{'[0, 5, 0, 3, 6, 1, 1, 0, 0, 15, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.197692}", "{'[0, 5, 0, 3, 6, 1, 1, 0, 0, 15, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.197855}", "{'[0, 5, 0, 3, 6, 1, 1, 0, 0, 15, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.198152}", "{'[0, 5, 0, 3, 6, 1, 1, 0, 0, 15, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.197677}", "{'[0, 5, 0, 3, 6, 1, 1, 0, 0, 15, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.197707}", "{'[0, 5, 0, 3, 6, 1, 1, 0, 0, 15, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.197508}", "{'[0, 5, 0, 3, 6, 1, 1, 0, 0, 15, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.197776}", "{'[0, 5, 0, 3, 6, 1, 1, 0, 0, 15, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.197795}", "{'[0, 5, 0, 3, 6, 1, 1, 0, 0, 15, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.197989}", "{'[0, 5, 0, 3, 6, 1, 1, 0, 0, 15, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.197687}", "{'[0, 5, 0, 3, 6, 1, 1, 0, 0, 15, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.198482}", "{'[0, 5, 0, 3, 6, 1, 1, 0, 0, 15, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.198348}", "{'[0, 5, 0, 3, 6, 1, 1, 0, 0, 15, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.197676}", "{'[0, 5, 0, 3, 6, 1, 1, 0, 0, 15, 0, 1, 2, 0, 0, 0, 1, 0]' : 0.197933}"]
returning from 'run': {'[0, 5, 0, 3, 6, 1, 1, 0, 0, 15, 0, 1, 2, 0, 0, 0, 1, 0]': ([0.228147, 0.217087, 0.1984, 0.198088, 0.198215, 0.197759, 0.198312, 0.197949, 0.198005, 0.197913, 0.197433, 0.197402, 0.198176, 0.197744, 0.198024, 0.197729, 0.197692, 0.197855, 0.198152, 0.197677, 0.197707, 0.197508, 0.197776, 0.197795, 0.197989, 0.197687, 0.198482, 0.198348, 0.197676, 0.197933], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 5, 0, 3, 6, 1, 1, 0, 0, 15, 0, 1, 2, 0, 0, 0, 1, 0]': ([0.228147, 0.217087, 0.1984, 0.198088, 0.198215, 0.197759, 0.198312, 0.197949, 0.198005, 0.197913, 0.197433, 0.197402, 0.198176, 0.197744, 0.198024, 0.197729, 0.197692, 0.197855, 0.198152, 0.197677, 0.197707, 0.197508, 0.197776, 0.197795, 0.197989, 0.197687, 0.198482, 0.198348, 0.197676, 0.197933], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = iii
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	5
        Additions: 		3384
        Multiplications: 	1650
        Divisions: 		0
        Logical: 		0
        Reads: 			6420
        Writes: 		1033
        Comparisons:		20
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest11.exe __orio_perftest11.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest11.exe  
Program Test Output: 
{'[4, 3, 2, 2, 6, 6, 0, 0, 0, 13, 0, 20, 0, 2, 0, 1, 1, 0]' : 0.133225}
{'[4, 3, 2, 2, 6, 6, 0, 0, 0, 13, 0, 20, 0, 2, 0, 1, 1, 0]' : 0.133147}
{'[4, 3, 2, 2, 6, 6, 0, 0, 0, 13, 0, 20, 0, 2, 0, 1, 1, 0]' : 0.131435}
{'[4, 3, 2, 2, 6, 6, 0, 0, 0, 13, 0, 20, 0, 2, 0, 1, 1, 0]' : 0.133101}
{'[4, 3, 2, 2, 6, 6, 0, 0, 0, 13, 0, 20, 0, 2, 0, 1, 1, 0]' : 0.133191}
{'[4, 3, 2, 2, 6, 6, 0, 0, 0, 13, 0, 20, 0, 2, 0, 1, 1, 0]' : 0.133044}
{'[4, 3, 2, 2, 6, 6, 0, 0, 0, 13, 0, 20, 0, 2, 0, 1, 1, 0]' : 0.131661}
{'[4, 3, 2, 2, 6, 6, 0, 0, 0, 13, 0, 20, 0, 2, 0, 1, 1, 0]' : 0.129981}
{'[4, 3, 2, 2, 6, 6, 0, 0, 0, 13, 0, 20, 0, 2, 0, 1, 1, 0]' : 0.130011}
{'[4, 3, 2, 2, 6, 6, 0, 0, 0, 13, 0, 20, 0, 2, 0, 1, 1, 0]' : 0.130014}
{'[4, 3, 2, 2, 6, 6, 0, 0, 0, 13, 0, 20, 0, 2, 0, 1, 1, 0]' : 0.129977}
{'[4, 3, 2, 2, 6, 6, 0, 0, 0, 13, 0, 20, 0, 2, 0, 1, 1, 0]' : 0.130042}
{'[4, 3, 2, 2, 6, 6, 0, 0, 0, 13, 0, 20, 0, 2, 0, 1, 1, 0]' : 0.129865}
{'[4, 3, 2, 2, 6, 6, 0, 0, 0, 13, 0, 20, 0, 2, 0, 1, 1, 0]' : 0.130048}
{'[4, 3, 2, 2, 6, 6, 0, 0, 0, 13, 0, 20, 0, 2, 0, 1, 1, 0]' : 0.130007}
{'[4, 3, 2, 2, 6, 6, 0, 0, 0, 13, 0, 20, 0, 2, 0, 1, 1, 0]' : 0.129744}
{'[4, 3, 2, 2, 6, 6, 0, 0, 0, 13, 0, 20, 0, 2, 0, 1, 1, 0]' : 0.129813}
{'[4, 3, 2, 2, 6, 6, 0, 0, 0, 13, 0, 20, 0, 2, 0, 1, 1, 0]' : 0.129945}
{'[4, 3, 2, 2, 6, 6, 0, 0, 0, 13, 0, 20, 0, 2, 0, 1, 1, 0]' : 0.129887}
{'[4, 3, 2, 2, 6, 6, 0, 0, 0, 13, 0, 20, 0, 2, 0, 1, 1, 0]' : 0.129742}
{'[4, 3, 2, 2, 6, 6, 0, 0, 0, 13, 0, 20, 0, 2, 0, 1, 1, 0]' : 0.12981}
{'[4, 3, 2, 2, 6, 6, 0, 0, 0, 13, 0, 20, 0, 2, 0, 1, 1, 0]' : 0.130138}
{'[4, 3, 2, 2, 6, 6, 0, 0, 0, 13, 0, 20, 0, 2, 0, 1, 1, 0]' : 0.12977}
{'[4, 3, 2, 2, 6, 6, 0, 0, 0, 13, 0, 20, 0, 2, 0, 1, 1, 0]' : 0.129778}
{'[4, 3, 2, 2, 6, 6, 0, 0, 0, 13, 0, 20, 0, 2, 0, 1, 1, 0]' : 0.129739}
{'[4, 3, 2, 2, 6, 6, 0, 0, 0, 13, 0, 20, 0, 2, 0, 1, 1, 0]' : 0.129844}
{'[4, 3, 2, 2, 6, 6, 0, 0, 0, 13, 0, 20, 0, 2, 0, 1, 1, 0]' : 0.12977}
{'[4, 3, 2, 2, 6, 6, 0, 0, 0, 13, 0, 20, 0, 2, 0, 1, 1, 0]' : 0.129846}
{'[4, 3, 2, 2, 6, 6, 0, 0, 0, 13, 0, 20, 0, 2, 0, 1, 1, 0]' : 0.129796}
{'[4, 3, 2, 2, 6, 6, 0, 0, 0, 13, 0, 20, 0, 2, 0, 1, 1, 0]' : 0.129815}

out:
 ["{'[4, 3, 2, 2, 6, 6, 0, 0, 0, 13, 0, 20, 0, 2, 0, 1, 1, 0]' : 0.133225}", "{'[4, 3, 2, 2, 6, 6, 0, 0, 0, 13, 0, 20, 0, 2, 0, 1, 1, 0]' : 0.133147}", "{'[4, 3, 2, 2, 6, 6, 0, 0, 0, 13, 0, 20, 0, 2, 0, 1, 1, 0]' : 0.131435}", "{'[4, 3, 2, 2, 6, 6, 0, 0, 0, 13, 0, 20, 0, 2, 0, 1, 1, 0]' : 0.133101}", "{'[4, 3, 2, 2, 6, 6, 0, 0, 0, 13, 0, 20, 0, 2, 0, 1, 1, 0]' : 0.133191}", "{'[4, 3, 2, 2, 6, 6, 0, 0, 0, 13, 0, 20, 0, 2, 0, 1, 1, 0]' : 0.133044}", "{'[4, 3, 2, 2, 6, 6, 0, 0, 0, 13, 0, 20, 0, 2, 0, 1, 1, 0]' : 0.131661}", "{'[4, 3, 2, 2, 6, 6, 0, 0, 0, 13, 0, 20, 0, 2, 0, 1, 1, 0]' : 0.129981}", "{'[4, 3, 2, 2, 6, 6, 0, 0, 0, 13, 0, 20, 0, 2, 0, 1, 1, 0]' : 0.130011}", "{'[4, 3, 2, 2, 6, 6, 0, 0, 0, 13, 0, 20, 0, 2, 0, 1, 1, 0]' : 0.130014}", "{'[4, 3, 2, 2, 6, 6, 0, 0, 0, 13, 0, 20, 0, 2, 0, 1, 1, 0]' : 0.129977}", "{'[4, 3, 2, 2, 6, 6, 0, 0, 0, 13, 0, 20, 0, 2, 0, 1, 1, 0]' : 0.130042}", "{'[4, 3, 2, 2, 6, 6, 0, 0, 0, 13, 0, 20, 0, 2, 0, 1, 1, 0]' : 0.129865}", "{'[4, 3, 2, 2, 6, 6, 0, 0, 0, 13, 0, 20, 0, 2, 0, 1, 1, 0]' : 0.130048}", "{'[4, 3, 2, 2, 6, 6, 0, 0, 0, 13, 0, 20, 0, 2, 0, 1, 1, 0]' : 0.130007}", "{'[4, 3, 2, 2, 6, 6, 0, 0, 0, 13, 0, 20, 0, 2, 0, 1, 1, 0]' : 0.129744}", "{'[4, 3, 2, 2, 6, 6, 0, 0, 0, 13, 0, 20, 0, 2, 0, 1, 1, 0]' : 0.129813}", "{'[4, 3, 2, 2, 6, 6, 0, 0, 0, 13, 0, 20, 0, 2, 0, 1, 1, 0]' : 0.129945}", "{'[4, 3, 2, 2, 6, 6, 0, 0, 0, 13, 0, 20, 0, 2, 0, 1, 1, 0]' : 0.129887}", "{'[4, 3, 2, 2, 6, 6, 0, 0, 0, 13, 0, 20, 0, 2, 0, 1, 1, 0]' : 0.129742}", "{'[4, 3, 2, 2, 6, 6, 0, 0, 0, 13, 0, 20, 0, 2, 0, 1, 1, 0]' : 0.12981}", "{'[4, 3, 2, 2, 6, 6, 0, 0, 0, 13, 0, 20, 0, 2, 0, 1, 1, 0]' : 0.130138}", "{'[4, 3, 2, 2, 6, 6, 0, 0, 0, 13, 0, 20, 0, 2, 0, 1, 1, 0]' : 0.12977}", "{'[4, 3, 2, 2, 6, 6, 0, 0, 0, 13, 0, 20, 0, 2, 0, 1, 1, 0]' : 0.129778}", "{'[4, 3, 2, 2, 6, 6, 0, 0, 0, 13, 0, 20, 0, 2, 0, 1, 1, 0]' : 0.129739}", "{'[4, 3, 2, 2, 6, 6, 0, 0, 0, 13, 0, 20, 0, 2, 0, 1, 1, 0]' : 0.129844}", "{'[4, 3, 2, 2, 6, 6, 0, 0, 0, 13, 0, 20, 0, 2, 0, 1, 1, 0]' : 0.12977}", "{'[4, 3, 2, 2, 6, 6, 0, 0, 0, 13, 0, 20, 0, 2, 0, 1, 1, 0]' : 0.129846}", "{'[4, 3, 2, 2, 6, 6, 0, 0, 0, 13, 0, 20, 0, 2, 0, 1, 1, 0]' : 0.129796}", "{'[4, 3, 2, 2, 6, 6, 0, 0, 0, 13, 0, 20, 0, 2, 0, 1, 1, 0]' : 0.129815}"]
returning from 'run': {'[4, 3, 2, 2, 6, 6, 0, 0, 0, 13, 0, 20, 0, 2, 0, 1, 1, 0]': ([0.133225, 0.133147, 0.131435, 0.133101, 0.133191, 0.133044, 0.131661, 0.129981, 0.130011, 0.130014, 0.129977, 0.130042, 0.129865, 0.130048, 0.130007, 0.129744, 0.129813, 0.129945, 0.129887, 0.129742, 0.12981, 0.130138, 0.12977, 0.129778, 0.129739, 0.129844, 0.12977, 0.129846, 0.129796, 0.129815], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 3, 2, 2, 6, 6, 0, 0, 0, 13, 0, 20, 0, 2, 0, 1, 1, 0]': ([0.133225, 0.133147, 0.131435, 0.133101, 0.133191, 0.133044, 0.131661, 0.129981, 0.130011, 0.130014, 0.129977, 0.130042, 0.129865, 0.130048, 0.130007, 0.129744, 0.129813, 0.129945, 0.129887, 0.129742, 0.12981, 0.130138, 0.12977, 0.129778, 0.129739, 0.129844, 0.12977, 0.129846, 0.129796, 0.129815], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	6
        Additions: 		4559
        Multiplications: 	1320
        Divisions: 		0
        Logical: 		0
        Reads: 			7091
        Writes: 		752
        Comparisons:		22
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest12.exe __orio_perftest12.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest12.exe  
Program Test Output: 
{'[5, 2, 1, 6, 5, 0, 1, 0, 27, 0, 5, 11, 2, 0, 0, 0, 1, 1]' : 0.301814}
{'[5, 2, 1, 6, 5, 0, 1, 0, 27, 0, 5, 11, 2, 0, 0, 0, 1, 1]' : 0.300767}
{'[5, 2, 1, 6, 5, 0, 1, 0, 27, 0, 5, 11, 2, 0, 0, 0, 1, 1]' : 0.28108}
{'[5, 2, 1, 6, 5, 0, 1, 0, 27, 0, 5, 11, 2, 0, 0, 0, 1, 1]' : 0.274539}
{'[5, 2, 1, 6, 5, 0, 1, 0, 27, 0, 5, 11, 2, 0, 0, 0, 1, 1]' : 0.275339}
{'[5, 2, 1, 6, 5, 0, 1, 0, 27, 0, 5, 11, 2, 0, 0, 0, 1, 1]' : 0.275554}
{'[5, 2, 1, 6, 5, 0, 1, 0, 27, 0, 5, 11, 2, 0, 0, 0, 1, 1]' : 0.272976}
{'[5, 2, 1, 6, 5, 0, 1, 0, 27, 0, 5, 11, 2, 0, 0, 0, 1, 1]' : 0.277037}
{'[5, 2, 1, 6, 5, 0, 1, 0, 27, 0, 5, 11, 2, 0, 0, 0, 1, 1]' : 0.271018}
{'[5, 2, 1, 6, 5, 0, 1, 0, 27, 0, 5, 11, 2, 0, 0, 0, 1, 1]' : 0.273699}
{'[5, 2, 1, 6, 5, 0, 1, 0, 27, 0, 5, 11, 2, 0, 0, 0, 1, 1]' : 0.27216}
{'[5, 2, 1, 6, 5, 0, 1, 0, 27, 0, 5, 11, 2, 0, 0, 0, 1, 1]' : 0.274265}
{'[5, 2, 1, 6, 5, 0, 1, 0, 27, 0, 5, 11, 2, 0, 0, 0, 1, 1]' : 0.268909}
{'[5, 2, 1, 6, 5, 0, 1, 0, 27, 0, 5, 11, 2, 0, 0, 0, 1, 1]' : 0.275634}
{'[5, 2, 1, 6, 5, 0, 1, 0, 27, 0, 5, 11, 2, 0, 0, 0, 1, 1]' : 0.275304}
{'[5, 2, 1, 6, 5, 0, 1, 0, 27, 0, 5, 11, 2, 0, 0, 0, 1, 1]' : 0.276823}
{'[5, 2, 1, 6, 5, 0, 1, 0, 27, 0, 5, 11, 2, 0, 0, 0, 1, 1]' : 0.275544}
{'[5, 2, 1, 6, 5, 0, 1, 0, 27, 0, 5, 11, 2, 0, 0, 0, 1, 1]' : 0.275463}
{'[5, 2, 1, 6, 5, 0, 1, 0, 27, 0, 5, 11, 2, 0, 0, 0, 1, 1]' : 0.276882}
{'[5, 2, 1, 6, 5, 0, 1, 0, 27, 0, 5, 11, 2, 0, 0, 0, 1, 1]' : 0.274635}
{'[5, 2, 1, 6, 5, 0, 1, 0, 27, 0, 5, 11, 2, 0, 0, 0, 1, 1]' : 0.27177}
{'[5, 2, 1, 6, 5, 0, 1, 0, 27, 0, 5, 11, 2, 0, 0, 0, 1, 1]' : 0.271826}
{'[5, 2, 1, 6, 5, 0, 1, 0, 27, 0, 5, 11, 2, 0, 0, 0, 1, 1]' : 0.277597}
{'[5, 2, 1, 6, 5, 0, 1, 0, 27, 0, 5, 11, 2, 0, 0, 0, 1, 1]' : 0.271499}
{'[5, 2, 1, 6, 5, 0, 1, 0, 27, 0, 5, 11, 2, 0, 0, 0, 1, 1]' : 0.268539}
{'[5, 2, 1, 6, 5, 0, 1, 0, 27, 0, 5, 11, 2, 0, 0, 0, 1, 1]' : 0.275482}
{'[5, 2, 1, 6, 5, 0, 1, 0, 27, 0, 5, 11, 2, 0, 0, 0, 1, 1]' : 0.275331}
{'[5, 2, 1, 6, 5, 0, 1, 0, 27, 0, 5, 11, 2, 0, 0, 0, 1, 1]' : 0.27254}
{'[5, 2, 1, 6, 5, 0, 1, 0, 27, 0, 5, 11, 2, 0, 0, 0, 1, 1]' : 0.266978}
{'[5, 2, 1, 6, 5, 0, 1, 0, 27, 0, 5, 11, 2, 0, 0, 0, 1, 1]' : 0.274875}

out:
 ["{'[5, 2, 1, 6, 5, 0, 1, 0, 27, 0, 5, 11, 2, 0, 0, 0, 1, 1]' : 0.301814}", "{'[5, 2, 1, 6, 5, 0, 1, 0, 27, 0, 5, 11, 2, 0, 0, 0, 1, 1]' : 0.300767}", "{'[5, 2, 1, 6, 5, 0, 1, 0, 27, 0, 5, 11, 2, 0, 0, 0, 1, 1]' : 0.28108}", "{'[5, 2, 1, 6, 5, 0, 1, 0, 27, 0, 5, 11, 2, 0, 0, 0, 1, 1]' : 0.274539}", "{'[5, 2, 1, 6, 5, 0, 1, 0, 27, 0, 5, 11, 2, 0, 0, 0, 1, 1]' : 0.275339}", "{'[5, 2, 1, 6, 5, 0, 1, 0, 27, 0, 5, 11, 2, 0, 0, 0, 1, 1]' : 0.275554}", "{'[5, 2, 1, 6, 5, 0, 1, 0, 27, 0, 5, 11, 2, 0, 0, 0, 1, 1]' : 0.272976}", "{'[5, 2, 1, 6, 5, 0, 1, 0, 27, 0, 5, 11, 2, 0, 0, 0, 1, 1]' : 0.277037}", "{'[5, 2, 1, 6, 5, 0, 1, 0, 27, 0, 5, 11, 2, 0, 0, 0, 1, 1]' : 0.271018}", "{'[5, 2, 1, 6, 5, 0, 1, 0, 27, 0, 5, 11, 2, 0, 0, 0, 1, 1]' : 0.273699}", "{'[5, 2, 1, 6, 5, 0, 1, 0, 27, 0, 5, 11, 2, 0, 0, 0, 1, 1]' : 0.27216}", "{'[5, 2, 1, 6, 5, 0, 1, 0, 27, 0, 5, 11, 2, 0, 0, 0, 1, 1]' : 0.274265}", "{'[5, 2, 1, 6, 5, 0, 1, 0, 27, 0, 5, 11, 2, 0, 0, 0, 1, 1]' : 0.268909}", "{'[5, 2, 1, 6, 5, 0, 1, 0, 27, 0, 5, 11, 2, 0, 0, 0, 1, 1]' : 0.275634}", "{'[5, 2, 1, 6, 5, 0, 1, 0, 27, 0, 5, 11, 2, 0, 0, 0, 1, 1]' : 0.275304}", "{'[5, 2, 1, 6, 5, 0, 1, 0, 27, 0, 5, 11, 2, 0, 0, 0, 1, 1]' : 0.276823}", "{'[5, 2, 1, 6, 5, 0, 1, 0, 27, 0, 5, 11, 2, 0, 0, 0, 1, 1]' : 0.275544}", "{'[5, 2, 1, 6, 5, 0, 1, 0, 27, 0, 5, 11, 2, 0, 0, 0, 1, 1]' : 0.275463}", "{'[5, 2, 1, 6, 5, 0, 1, 0, 27, 0, 5, 11, 2, 0, 0, 0, 1, 1]' : 0.276882}", "{'[5, 2, 1, 6, 5, 0, 1, 0, 27, 0, 5, 11, 2, 0, 0, 0, 1, 1]' : 0.274635}", "{'[5, 2, 1, 6, 5, 0, 1, 0, 27, 0, 5, 11, 2, 0, 0, 0, 1, 1]' : 0.27177}", "{'[5, 2, 1, 6, 5, 0, 1, 0, 27, 0, 5, 11, 2, 0, 0, 0, 1, 1]' : 0.271826}", "{'[5, 2, 1, 6, 5, 0, 1, 0, 27, 0, 5, 11, 2, 0, 0, 0, 1, 1]' : 0.277597}", "{'[5, 2, 1, 6, 5, 0, 1, 0, 27, 0, 5, 11, 2, 0, 0, 0, 1, 1]' : 0.271499}", "{'[5, 2, 1, 6, 5, 0, 1, 0, 27, 0, 5, 11, 2, 0, 0, 0, 1, 1]' : 0.268539}", "{'[5, 2, 1, 6, 5, 0, 1, 0, 27, 0, 5, 11, 2, 0, 0, 0, 1, 1]' : 0.275482}", "{'[5, 2, 1, 6, 5, 0, 1, 0, 27, 0, 5, 11, 2, 0, 0, 0, 1, 1]' : 0.275331}", "{'[5, 2, 1, 6, 5, 0, 1, 0, 27, 0, 5, 11, 2, 0, 0, 0, 1, 1]' : 0.27254}", "{'[5, 2, 1, 6, 5, 0, 1, 0, 27, 0, 5, 11, 2, 0, 0, 0, 1, 1]' : 0.266978}", "{'[5, 2, 1, 6, 5, 0, 1, 0, 27, 0, 5, 11, 2, 0, 0, 0, 1, 1]' : 0.274875}"]
returning from 'run': {'[5, 2, 1, 6, 5, 0, 1, 0, 27, 0, 5, 11, 2, 0, 0, 0, 1, 1]': ([0.301814, 0.300767, 0.28108, 0.274539, 0.275339, 0.275554, 0.272976, 0.277037, 0.271018, 0.273699, 0.27216, 0.274265, 0.268909, 0.275634, 0.275304, 0.276823, 0.275544, 0.275463, 0.276882, 0.274635, 0.27177, 0.271826, 0.277597, 0.271499, 0.268539, 0.275482, 0.275331, 0.27254, 0.266978, 0.274875], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 2, 1, 6, 5, 0, 1, 0, 27, 0, 5, 11, 2, 0, 0, 0, 1, 1]': ([0.301814, 0.300767, 0.28108, 0.274539, 0.275339, 0.275554, 0.272976, 0.277037, 0.271018, 0.273699, 0.27216, 0.274265, 0.268909, 0.275634, 0.275304, 0.276823, 0.275544, 0.275463, 0.276882, 0.274635, 0.27177, 0.271826, 0.277597, 0.271499, 0.268539, 0.275482, 0.275331, 0.27254, 0.266978, 0.274875], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		188
        Multiplications: 	54
        Divisions: 		0
        Logical: 		0
        Reads: 			414
        Writes: 		72
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest13.exe __orio_perftest13.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest13.exe  
Program Test Output: 
{'[1, 0, 1, 1, 6, 0, 0, 1, 16, 0, 17, 28, 0, 0, 1, 0, 0, 0]' : 0.276099}
{'[1, 0, 1, 1, 6, 0, 0, 1, 16, 0, 17, 28, 0, 0, 1, 0, 0, 0]' : 0.275911}
{'[1, 0, 1, 1, 6, 0, 0, 1, 16, 0, 17, 28, 0, 0, 1, 0, 0, 0]' : 0.249065}
{'[1, 0, 1, 1, 6, 0, 0, 1, 16, 0, 17, 28, 0, 0, 1, 0, 0, 0]' : 0.240428}
{'[1, 0, 1, 1, 6, 0, 0, 1, 16, 0, 17, 28, 0, 0, 1, 0, 0, 0]' : 0.240964}
{'[1, 0, 1, 1, 6, 0, 0, 1, 16, 0, 17, 28, 0, 0, 1, 0, 0, 0]' : 0.238672}
{'[1, 0, 1, 1, 6, 0, 0, 1, 16, 0, 17, 28, 0, 0, 1, 0, 0, 0]' : 0.24493}
{'[1, 0, 1, 1, 6, 0, 0, 1, 16, 0, 17, 28, 0, 0, 1, 0, 0, 0]' : 0.240508}
{'[1, 0, 1, 1, 6, 0, 0, 1, 16, 0, 17, 28, 0, 0, 1, 0, 0, 0]' : 0.244693}
{'[1, 0, 1, 1, 6, 0, 0, 1, 16, 0, 17, 28, 0, 0, 1, 0, 0, 0]' : 0.23883}
{'[1, 0, 1, 1, 6, 0, 0, 1, 16, 0, 17, 28, 0, 0, 1, 0, 0, 0]' : 0.242445}
{'[1, 0, 1, 1, 6, 0, 0, 1, 16, 0, 17, 28, 0, 0, 1, 0, 0, 0]' : 0.238087}
{'[1, 0, 1, 1, 6, 0, 0, 1, 16, 0, 17, 28, 0, 0, 1, 0, 0, 0]' : 0.24372}
{'[1, 0, 1, 1, 6, 0, 0, 1, 16, 0, 17, 28, 0, 0, 1, 0, 0, 0]' : 0.232827}
{'[1, 0, 1, 1, 6, 0, 0, 1, 16, 0, 17, 28, 0, 0, 1, 0, 0, 0]' : 0.238235}
{'[1, 0, 1, 1, 6, 0, 0, 1, 16, 0, 17, 28, 0, 0, 1, 0, 0, 0]' : 0.241428}
{'[1, 0, 1, 1, 6, 0, 0, 1, 16, 0, 17, 28, 0, 0, 1, 0, 0, 0]' : 0.2426}
{'[1, 0, 1, 1, 6, 0, 0, 1, 16, 0, 17, 28, 0, 0, 1, 0, 0, 0]' : 0.242313}
{'[1, 0, 1, 1, 6, 0, 0, 1, 16, 0, 17, 28, 0, 0, 1, 0, 0, 0]' : 0.242148}
{'[1, 0, 1, 1, 6, 0, 0, 1, 16, 0, 17, 28, 0, 0, 1, 0, 0, 0]' : 0.243257}
{'[1, 0, 1, 1, 6, 0, 0, 1, 16, 0, 17, 28, 0, 0, 1, 0, 0, 0]' : 0.241744}
{'[1, 0, 1, 1, 6, 0, 0, 1, 16, 0, 17, 28, 0, 0, 1, 0, 0, 0]' : 0.243656}
{'[1, 0, 1, 1, 6, 0, 0, 1, 16, 0, 17, 28, 0, 0, 1, 0, 0, 0]' : 0.240794}
{'[1, 0, 1, 1, 6, 0, 0, 1, 16, 0, 17, 28, 0, 0, 1, 0, 0, 0]' : 0.233557}
{'[1, 0, 1, 1, 6, 0, 0, 1, 16, 0, 17, 28, 0, 0, 1, 0, 0, 0]' : 0.233753}
{'[1, 0, 1, 1, 6, 0, 0, 1, 16, 0, 17, 28, 0, 0, 1, 0, 0, 0]' : 0.233383}
{'[1, 0, 1, 1, 6, 0, 0, 1, 16, 0, 17, 28, 0, 0, 1, 0, 0, 0]' : 0.233623}
{'[1, 0, 1, 1, 6, 0, 0, 1, 16, 0, 17, 28, 0, 0, 1, 0, 0, 0]' : 0.243271}
{'[1, 0, 1, 1, 6, 0, 0, 1, 16, 0, 17, 28, 0, 0, 1, 0, 0, 0]' : 0.239073}
{'[1, 0, 1, 1, 6, 0, 0, 1, 16, 0, 17, 28, 0, 0, 1, 0, 0, 0]' : 0.244857}

out:
 ["{'[1, 0, 1, 1, 6, 0, 0, 1, 16, 0, 17, 28, 0, 0, 1, 0, 0, 0]' : 0.276099}", "{'[1, 0, 1, 1, 6, 0, 0, 1, 16, 0, 17, 28, 0, 0, 1, 0, 0, 0]' : 0.275911}", "{'[1, 0, 1, 1, 6, 0, 0, 1, 16, 0, 17, 28, 0, 0, 1, 0, 0, 0]' : 0.249065}", "{'[1, 0, 1, 1, 6, 0, 0, 1, 16, 0, 17, 28, 0, 0, 1, 0, 0, 0]' : 0.240428}", "{'[1, 0, 1, 1, 6, 0, 0, 1, 16, 0, 17, 28, 0, 0, 1, 0, 0, 0]' : 0.240964}", "{'[1, 0, 1, 1, 6, 0, 0, 1, 16, 0, 17, 28, 0, 0, 1, 0, 0, 0]' : 0.238672}", "{'[1, 0, 1, 1, 6, 0, 0, 1, 16, 0, 17, 28, 0, 0, 1, 0, 0, 0]' : 0.24493}", "{'[1, 0, 1, 1, 6, 0, 0, 1, 16, 0, 17, 28, 0, 0, 1, 0, 0, 0]' : 0.240508}", "{'[1, 0, 1, 1, 6, 0, 0, 1, 16, 0, 17, 28, 0, 0, 1, 0, 0, 0]' : 0.244693}", "{'[1, 0, 1, 1, 6, 0, 0, 1, 16, 0, 17, 28, 0, 0, 1, 0, 0, 0]' : 0.23883}", "{'[1, 0, 1, 1, 6, 0, 0, 1, 16, 0, 17, 28, 0, 0, 1, 0, 0, 0]' : 0.242445}", "{'[1, 0, 1, 1, 6, 0, 0, 1, 16, 0, 17, 28, 0, 0, 1, 0, 0, 0]' : 0.238087}", "{'[1, 0, 1, 1, 6, 0, 0, 1, 16, 0, 17, 28, 0, 0, 1, 0, 0, 0]' : 0.24372}", "{'[1, 0, 1, 1, 6, 0, 0, 1, 16, 0, 17, 28, 0, 0, 1, 0, 0, 0]' : 0.232827}", "{'[1, 0, 1, 1, 6, 0, 0, 1, 16, 0, 17, 28, 0, 0, 1, 0, 0, 0]' : 0.238235}", "{'[1, 0, 1, 1, 6, 0, 0, 1, 16, 0, 17, 28, 0, 0, 1, 0, 0, 0]' : 0.241428}", "{'[1, 0, 1, 1, 6, 0, 0, 1, 16, 0, 17, 28, 0, 0, 1, 0, 0, 0]' : 0.2426}", "{'[1, 0, 1, 1, 6, 0, 0, 1, 16, 0, 17, 28, 0, 0, 1, 0, 0, 0]' : 0.242313}", "{'[1, 0, 1, 1, 6, 0, 0, 1, 16, 0, 17, 28, 0, 0, 1, 0, 0, 0]' : 0.242148}", "{'[1, 0, 1, 1, 6, 0, 0, 1, 16, 0, 17, 28, 0, 0, 1, 0, 0, 0]' : 0.243257}", "{'[1, 0, 1, 1, 6, 0, 0, 1, 16, 0, 17, 28, 0, 0, 1, 0, 0, 0]' : 0.241744}", "{'[1, 0, 1, 1, 6, 0, 0, 1, 16, 0, 17, 28, 0, 0, 1, 0, 0, 0]' : 0.243656}", "{'[1, 0, 1, 1, 6, 0, 0, 1, 16, 0, 17, 28, 0, 0, 1, 0, 0, 0]' : 0.240794}", "{'[1, 0, 1, 1, 6, 0, 0, 1, 16, 0, 17, 28, 0, 0, 1, 0, 0, 0]' : 0.233557}", "{'[1, 0, 1, 1, 6, 0, 0, 1, 16, 0, 17, 28, 0, 0, 1, 0, 0, 0]' : 0.233753}", "{'[1, 0, 1, 1, 6, 0, 0, 1, 16, 0, 17, 28, 0, 0, 1, 0, 0, 0]' : 0.233383}", "{'[1, 0, 1, 1, 6, 0, 0, 1, 16, 0, 17, 28, 0, 0, 1, 0, 0, 0]' : 0.233623}", "{'[1, 0, 1, 1, 6, 0, 0, 1, 16, 0, 17, 28, 0, 0, 1, 0, 0, 0]' : 0.243271}", "{'[1, 0, 1, 1, 6, 0, 0, 1, 16, 0, 17, 28, 0, 0, 1, 0, 0, 0]' : 0.239073}", "{'[1, 0, 1, 1, 6, 0, 0, 1, 16, 0, 17, 28, 0, 0, 1, 0, 0, 0]' : 0.244857}"]
returning from 'run': {'[1, 0, 1, 1, 6, 0, 0, 1, 16, 0, 17, 28, 0, 0, 1, 0, 0, 0]': ([0.276099, 0.275911, 0.249065, 0.240428, 0.240964, 0.238672, 0.24493, 0.240508, 0.244693, 0.23883, 0.242445, 0.238087, 0.24372, 0.232827, 0.238235, 0.241428, 0.2426, 0.242313, 0.242148, 0.243257, 0.241744, 0.243656, 0.240794, 0.233557, 0.233753, 0.233383, 0.233623, 0.243271, 0.239073, 0.244857], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 1, 1, 6, 0, 0, 1, 16, 0, 17, 28, 0, 0, 1, 0, 0, 0]': ([0.276099, 0.275911, 0.249065, 0.240428, 0.240964, 0.238672, 0.24493, 0.240508, 0.244693, 0.23883, 0.242445, 0.238087, 0.24372, 0.232827, 0.238235, 0.241428, 0.2426, 0.242313, 0.242148, 0.243257, 0.241744, 0.243656, 0.240794, 0.233557, 0.233753, 0.233383, 0.233623, 0.243271, 0.239073, 0.244857], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	79
        Max loop nest depth: 	5
        Additions: 		9777
        Multiplications: 	2790
        Divisions: 		0
        Logical: 		0
        Reads: 			14937
        Writes: 		1712
        Comparisons:		79
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest14.exe __orio_perftest14.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest14.exe  
Program Test Output: 
{'[0, 4, 0, 4, 6, 5, 0, 0, 27, 29, 0, 26, 0, 1, 1, 0, 0, 1]' : 0.214136}
{'[0, 4, 0, 4, 6, 5, 0, 0, 27, 29, 0, 26, 0, 1, 1, 0, 0, 1]' : 0.21234}
{'[0, 4, 0, 4, 6, 5, 0, 0, 27, 29, 0, 26, 0, 1, 1, 0, 0, 1]' : 0.199151}
{'[0, 4, 0, 4, 6, 5, 0, 0, 27, 29, 0, 26, 0, 1, 1, 0, 0, 1]' : 0.195685}
{'[0, 4, 0, 4, 6, 5, 0, 0, 27, 29, 0, 26, 0, 1, 1, 0, 0, 1]' : 0.191116}
{'[0, 4, 0, 4, 6, 5, 0, 0, 27, 29, 0, 26, 0, 1, 1, 0, 0, 1]' : 0.197912}
{'[0, 4, 0, 4, 6, 5, 0, 0, 27, 29, 0, 26, 0, 1, 1, 0, 0, 1]' : 0.194605}
{'[0, 4, 0, 4, 6, 5, 0, 0, 27, 29, 0, 26, 0, 1, 1, 0, 0, 1]' : 0.195525}
{'[0, 4, 0, 4, 6, 5, 0, 0, 27, 29, 0, 26, 0, 1, 1, 0, 0, 1]' : 0.196558}
{'[0, 4, 0, 4, 6, 5, 0, 0, 27, 29, 0, 26, 0, 1, 1, 0, 0, 1]' : 0.197967}
{'[0, 4, 0, 4, 6, 5, 0, 0, 27, 29, 0, 26, 0, 1, 1, 0, 0, 1]' : 0.194524}
{'[0, 4, 0, 4, 6, 5, 0, 0, 27, 29, 0, 26, 0, 1, 1, 0, 0, 1]' : 0.194832}
{'[0, 4, 0, 4, 6, 5, 0, 0, 27, 29, 0, 26, 0, 1, 1, 0, 0, 1]' : 0.194028}
{'[0, 4, 0, 4, 6, 5, 0, 0, 27, 29, 0, 26, 0, 1, 1, 0, 0, 1]' : 0.19527}
{'[0, 4, 0, 4, 6, 5, 0, 0, 27, 29, 0, 26, 0, 1, 1, 0, 0, 1]' : 0.195248}
{'[0, 4, 0, 4, 6, 5, 0, 0, 27, 29, 0, 26, 0, 1, 1, 0, 0, 1]' : 0.194776}
{'[0, 4, 0, 4, 6, 5, 0, 0, 27, 29, 0, 26, 0, 1, 1, 0, 0, 1]' : 0.192108}
{'[0, 4, 0, 4, 6, 5, 0, 0, 27, 29, 0, 26, 0, 1, 1, 0, 0, 1]' : 0.197855}
{'[0, 4, 0, 4, 6, 5, 0, 0, 27, 29, 0, 26, 0, 1, 1, 0, 0, 1]' : 0.193985}
{'[0, 4, 0, 4, 6, 5, 0, 0, 27, 29, 0, 26, 0, 1, 1, 0, 0, 1]' : 0.192331}
{'[0, 4, 0, 4, 6, 5, 0, 0, 27, 29, 0, 26, 0, 1, 1, 0, 0, 1]' : 0.198942}
{'[0, 4, 0, 4, 6, 5, 0, 0, 27, 29, 0, 26, 0, 1, 1, 0, 0, 1]' : 0.19353}
{'[0, 4, 0, 4, 6, 5, 0, 0, 27, 29, 0, 26, 0, 1, 1, 0, 0, 1]' : 0.194343}
{'[0, 4, 0, 4, 6, 5, 0, 0, 27, 29, 0, 26, 0, 1, 1, 0, 0, 1]' : 0.193618}
{'[0, 4, 0, 4, 6, 5, 0, 0, 27, 29, 0, 26, 0, 1, 1, 0, 0, 1]' : 0.197424}
{'[0, 4, 0, 4, 6, 5, 0, 0, 27, 29, 0, 26, 0, 1, 1, 0, 0, 1]' : 0.198166}
{'[0, 4, 0, 4, 6, 5, 0, 0, 27, 29, 0, 26, 0, 1, 1, 0, 0, 1]' : 0.19288}
{'[0, 4, 0, 4, 6, 5, 0, 0, 27, 29, 0, 26, 0, 1, 1, 0, 0, 1]' : 0.194635}
{'[0, 4, 0, 4, 6, 5, 0, 0, 27, 29, 0, 26, 0, 1, 1, 0, 0, 1]' : 0.192606}
{'[0, 4, 0, 4, 6, 5, 0, 0, 27, 29, 0, 26, 0, 1, 1, 0, 0, 1]' : 0.19655}

out:
 ["{'[0, 4, 0, 4, 6, 5, 0, 0, 27, 29, 0, 26, 0, 1, 1, 0, 0, 1]' : 0.214136}", "{'[0, 4, 0, 4, 6, 5, 0, 0, 27, 29, 0, 26, 0, 1, 1, 0, 0, 1]' : 0.21234}", "{'[0, 4, 0, 4, 6, 5, 0, 0, 27, 29, 0, 26, 0, 1, 1, 0, 0, 1]' : 0.199151}", "{'[0, 4, 0, 4, 6, 5, 0, 0, 27, 29, 0, 26, 0, 1, 1, 0, 0, 1]' : 0.195685}", "{'[0, 4, 0, 4, 6, 5, 0, 0, 27, 29, 0, 26, 0, 1, 1, 0, 0, 1]' : 0.191116}", "{'[0, 4, 0, 4, 6, 5, 0, 0, 27, 29, 0, 26, 0, 1, 1, 0, 0, 1]' : 0.197912}", "{'[0, 4, 0, 4, 6, 5, 0, 0, 27, 29, 0, 26, 0, 1, 1, 0, 0, 1]' : 0.194605}", "{'[0, 4, 0, 4, 6, 5, 0, 0, 27, 29, 0, 26, 0, 1, 1, 0, 0, 1]' : 0.195525}", "{'[0, 4, 0, 4, 6, 5, 0, 0, 27, 29, 0, 26, 0, 1, 1, 0, 0, 1]' : 0.196558}", "{'[0, 4, 0, 4, 6, 5, 0, 0, 27, 29, 0, 26, 0, 1, 1, 0, 0, 1]' : 0.197967}", "{'[0, 4, 0, 4, 6, 5, 0, 0, 27, 29, 0, 26, 0, 1, 1, 0, 0, 1]' : 0.194524}", "{'[0, 4, 0, 4, 6, 5, 0, 0, 27, 29, 0, 26, 0, 1, 1, 0, 0, 1]' : 0.194832}", "{'[0, 4, 0, 4, 6, 5, 0, 0, 27, 29, 0, 26, 0, 1, 1, 0, 0, 1]' : 0.194028}", "{'[0, 4, 0, 4, 6, 5, 0, 0, 27, 29, 0, 26, 0, 1, 1, 0, 0, 1]' : 0.19527}", "{'[0, 4, 0, 4, 6, 5, 0, 0, 27, 29, 0, 26, 0, 1, 1, 0, 0, 1]' : 0.195248}", "{'[0, 4, 0, 4, 6, 5, 0, 0, 27, 29, 0, 26, 0, 1, 1, 0, 0, 1]' : 0.194776}", "{'[0, 4, 0, 4, 6, 5, 0, 0, 27, 29, 0, 26, 0, 1, 1, 0, 0, 1]' : 0.192108}", "{'[0, 4, 0, 4, 6, 5, 0, 0, 27, 29, 0, 26, 0, 1, 1, 0, 0, 1]' : 0.197855}", "{'[0, 4, 0, 4, 6, 5, 0, 0, 27, 29, 0, 26, 0, 1, 1, 0, 0, 1]' : 0.193985}", "{'[0, 4, 0, 4, 6, 5, 0, 0, 27, 29, 0, 26, 0, 1, 1, 0, 0, 1]' : 0.192331}", "{'[0, 4, 0, 4, 6, 5, 0, 0, 27, 29, 0, 26, 0, 1, 1, 0, 0, 1]' : 0.198942}", "{'[0, 4, 0, 4, 6, 5, 0, 0, 27, 29, 0, 26, 0, 1, 1, 0, 0, 1]' : 0.19353}", "{'[0, 4, 0, 4, 6, 5, 0, 0, 27, 29, 0, 26, 0, 1, 1, 0, 0, 1]' : 0.194343}", "{'[0, 4, 0, 4, 6, 5, 0, 0, 27, 29, 0, 26, 0, 1, 1, 0, 0, 1]' : 0.193618}", "{'[0, 4, 0, 4, 6, 5, 0, 0, 27, 29, 0, 26, 0, 1, 1, 0, 0, 1]' : 0.197424}", "{'[0, 4, 0, 4, 6, 5, 0, 0, 27, 29, 0, 26, 0, 1, 1, 0, 0, 1]' : 0.198166}", "{'[0, 4, 0, 4, 6, 5, 0, 0, 27, 29, 0, 26, 0, 1, 1, 0, 0, 1]' : 0.19288}", "{'[0, 4, 0, 4, 6, 5, 0, 0, 27, 29, 0, 26, 0, 1, 1, 0, 0, 1]' : 0.194635}", "{'[0, 4, 0, 4, 6, 5, 0, 0, 27, 29, 0, 26, 0, 1, 1, 0, 0, 1]' : 0.192606}", "{'[0, 4, 0, 4, 6, 5, 0, 0, 27, 29, 0, 26, 0, 1, 1, 0, 0, 1]' : 0.19655}"]
returning from 'run': {'[0, 4, 0, 4, 6, 5, 0, 0, 27, 29, 0, 26, 0, 1, 1, 0, 0, 1]': ([0.214136, 0.21234, 0.199151, 0.195685, 0.191116, 0.197912, 0.194605, 0.195525, 0.196558, 0.197967, 0.194524, 0.194832, 0.194028, 0.19527, 0.195248, 0.194776, 0.192108, 0.197855, 0.193985, 0.192331, 0.198942, 0.19353, 0.194343, 0.193618, 0.197424, 0.198166, 0.19288, 0.194635, 0.192606, 0.19655], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 4, 0, 4, 6, 5, 0, 0, 27, 29, 0, 26, 0, 1, 1, 0, 0, 1]': ([0.214136, 0.21234, 0.199151, 0.195685, 0.191116, 0.197912, 0.194605, 0.195525, 0.196558, 0.197967, 0.194524, 0.194832, 0.194028, 0.19527, 0.195248, 0.194776, 0.192108, 0.197855, 0.193985, 0.192331, 0.198942, 0.19353, 0.194343, 0.193618, 0.197424, 0.198166, 0.19288, 0.194635, 0.192606, 0.19655], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	23
        Max loop nest depth: 	6
        Additions: 		417
        Multiplications: 	156
        Divisions: 		0
        Logical: 		0
        Reads: 			933
        Writes: 		194
        Comparisons:		23
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest15.exe __orio_perftest15.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest15.exe  
Program Test Output: 
{'[4, 6, 1, 6, 4, 6, 0, 0, 0, 1, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.111444}
{'[4, 6, 1, 6, 4, 6, 0, 0, 0, 1, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.11173}
{'[4, 6, 1, 6, 4, 6, 0, 0, 0, 1, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.111563}
{'[4, 6, 1, 6, 4, 6, 0, 0, 0, 1, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.11163}
{'[4, 6, 1, 6, 4, 6, 0, 0, 0, 1, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.111591}
{'[4, 6, 1, 6, 4, 6, 0, 0, 0, 1, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.111514}
{'[4, 6, 1, 6, 4, 6, 0, 0, 0, 1, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.111579}
{'[4, 6, 1, 6, 4, 6, 0, 0, 0, 1, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.11186}
{'[4, 6, 1, 6, 4, 6, 0, 0, 0, 1, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.108805}
{'[4, 6, 1, 6, 4, 6, 0, 0, 0, 1, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.111245}
{'[4, 6, 1, 6, 4, 6, 0, 0, 0, 1, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.11149}
{'[4, 6, 1, 6, 4, 6, 0, 0, 0, 1, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.11156}
{'[4, 6, 1, 6, 4, 6, 0, 0, 0, 1, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.111568}
{'[4, 6, 1, 6, 4, 6, 0, 0, 0, 1, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.111747}
{'[4, 6, 1, 6, 4, 6, 0, 0, 0, 1, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.111689}
{'[4, 6, 1, 6, 4, 6, 0, 0, 0, 1, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.111488}
{'[4, 6, 1, 6, 4, 6, 0, 0, 0, 1, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.111622}
{'[4, 6, 1, 6, 4, 6, 0, 0, 0, 1, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.111774}
{'[4, 6, 1, 6, 4, 6, 0, 0, 0, 1, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.112117}
{'[4, 6, 1, 6, 4, 6, 0, 0, 0, 1, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.111493}
{'[4, 6, 1, 6, 4, 6, 0, 0, 0, 1, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.111627}
{'[4, 6, 1, 6, 4, 6, 0, 0, 0, 1, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.110482}
{'[4, 6, 1, 6, 4, 6, 0, 0, 0, 1, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.109712}
{'[4, 6, 1, 6, 4, 6, 0, 0, 0, 1, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.11149}
{'[4, 6, 1, 6, 4, 6, 0, 0, 0, 1, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.111493}
{'[4, 6, 1, 6, 4, 6, 0, 0, 0, 1, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.111679}
{'[4, 6, 1, 6, 4, 6, 0, 0, 0, 1, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.111566}
{'[4, 6, 1, 6, 4, 6, 0, 0, 0, 1, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.111675}
{'[4, 6, 1, 6, 4, 6, 0, 0, 0, 1, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.111496}
{'[4, 6, 1, 6, 4, 6, 0, 0, 0, 1, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.111464}

out:
 ["{'[4, 6, 1, 6, 4, 6, 0, 0, 0, 1, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.111444}", "{'[4, 6, 1, 6, 4, 6, 0, 0, 0, 1, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.11173}", "{'[4, 6, 1, 6, 4, 6, 0, 0, 0, 1, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.111563}", "{'[4, 6, 1, 6, 4, 6, 0, 0, 0, 1, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.11163}", "{'[4, 6, 1, 6, 4, 6, 0, 0, 0, 1, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.111591}", "{'[4, 6, 1, 6, 4, 6, 0, 0, 0, 1, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.111514}", "{'[4, 6, 1, 6, 4, 6, 0, 0, 0, 1, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.111579}", "{'[4, 6, 1, 6, 4, 6, 0, 0, 0, 1, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.11186}", "{'[4, 6, 1, 6, 4, 6, 0, 0, 0, 1, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.108805}", "{'[4, 6, 1, 6, 4, 6, 0, 0, 0, 1, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.111245}", "{'[4, 6, 1, 6, 4, 6, 0, 0, 0, 1, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.11149}", "{'[4, 6, 1, 6, 4, 6, 0, 0, 0, 1, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.11156}", "{'[4, 6, 1, 6, 4, 6, 0, 0, 0, 1, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.111568}", "{'[4, 6, 1, 6, 4, 6, 0, 0, 0, 1, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.111747}", "{'[4, 6, 1, 6, 4, 6, 0, 0, 0, 1, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.111689}", "{'[4, 6, 1, 6, 4, 6, 0, 0, 0, 1, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.111488}", "{'[4, 6, 1, 6, 4, 6, 0, 0, 0, 1, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.111622}", "{'[4, 6, 1, 6, 4, 6, 0, 0, 0, 1, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.111774}", "{'[4, 6, 1, 6, 4, 6, 0, 0, 0, 1, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.112117}", "{'[4, 6, 1, 6, 4, 6, 0, 0, 0, 1, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.111493}", "{'[4, 6, 1, 6, 4, 6, 0, 0, 0, 1, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.111627}", "{'[4, 6, 1, 6, 4, 6, 0, 0, 0, 1, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.110482}", "{'[4, 6, 1, 6, 4, 6, 0, 0, 0, 1, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.109712}", "{'[4, 6, 1, 6, 4, 6, 0, 0, 0, 1, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.11149}", "{'[4, 6, 1, 6, 4, 6, 0, 0, 0, 1, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.111493}", "{'[4, 6, 1, 6, 4, 6, 0, 0, 0, 1, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.111679}", "{'[4, 6, 1, 6, 4, 6, 0, 0, 0, 1, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.111566}", "{'[4, 6, 1, 6, 4, 6, 0, 0, 0, 1, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.111675}", "{'[4, 6, 1, 6, 4, 6, 0, 0, 0, 1, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.111496}", "{'[4, 6, 1, 6, 4, 6, 0, 0, 0, 1, 7, 0, 0, 1, 1, 1, 1, 1]' : 0.111464}"]
returning from 'run': {'[4, 6, 1, 6, 4, 6, 0, 0, 0, 1, 7, 0, 0, 1, 1, 1, 1, 1]': ([0.111444, 0.11173, 0.111563, 0.11163, 0.111591, 0.111514, 0.111579, 0.11186, 0.108805, 0.111245, 0.11149, 0.11156, 0.111568, 0.111747, 0.111689, 0.111488, 0.111622, 0.111774, 0.112117, 0.111493, 0.111627, 0.110482, 0.109712, 0.11149, 0.111493, 0.111679, 0.111566, 0.111675, 0.111496, 0.111464], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 6, 1, 6, 4, 6, 0, 0, 0, 1, 7, 0, 0, 1, 1, 1, 1, 1]': ([0.111444, 0.11173, 0.111563, 0.11163, 0.111591, 0.111514, 0.111579, 0.11186, 0.108805, 0.111245, 0.11149, 0.11156, 0.111568, 0.111747, 0.111689, 0.111488, 0.111622, 0.111774, 0.112117, 0.111493, 0.111627, 0.110482, 0.109712, 0.11149, 0.111493, 0.111679, 0.111566, 0.111675, 0.111496, 0.111464], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	5
        Additions: 		2241
        Multiplications: 	594
        Divisions: 		0
        Logical: 		0
        Reads: 			3537
        Writes: 		391
        Comparisons:		24
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest16.exe __orio_perftest16.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest16.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest16.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest16.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest16.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = jjj
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	6
        Additions: 		232
        Multiplications: 	66
        Divisions: 		0
        Logical: 		0
        Reads: 			474
        Writes: 		100
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest17.exe __orio_perftest17.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest17.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest17.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest17.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest17.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	50
        Max loop nest depth: 	6
        Additions: 		1429
        Multiplications: 	306
        Divisions: 		0
        Logical: 		0
        Reads: 			2356
        Writes: 		308
        Comparisons:		50
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest18.exe __orio_perftest18.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest18.exe  
Program Test Output: 
{'[6, 4, 5, 6, 4, 0, 0, 1, 2, 15, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.196194}
{'[6, 4, 5, 6, 4, 0, 0, 1, 2, 15, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.192318}
{'[6, 4, 5, 6, 4, 0, 0, 1, 2, 15, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.166969}
{'[6, 4, 5, 6, 4, 0, 0, 1, 2, 15, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.166859}
{'[6, 4, 5, 6, 4, 0, 0, 1, 2, 15, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.166981}
{'[6, 4, 5, 6, 4, 0, 0, 1, 2, 15, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.167071}
{'[6, 4, 5, 6, 4, 0, 0, 1, 2, 15, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.167383}
{'[6, 4, 5, 6, 4, 0, 0, 1, 2, 15, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.166808}
{'[6, 4, 5, 6, 4, 0, 0, 1, 2, 15, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.166964}
{'[6, 4, 5, 6, 4, 0, 0, 1, 2, 15, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.166937}
{'[6, 4, 5, 6, 4, 0, 0, 1, 2, 15, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.167113}
{'[6, 4, 5, 6, 4, 0, 0, 1, 2, 15, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.166669}
{'[6, 4, 5, 6, 4, 0, 0, 1, 2, 15, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.166782}
{'[6, 4, 5, 6, 4, 0, 0, 1, 2, 15, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.167064}
{'[6, 4, 5, 6, 4, 0, 0, 1, 2, 15, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.167079}
{'[6, 4, 5, 6, 4, 0, 0, 1, 2, 15, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.166774}
{'[6, 4, 5, 6, 4, 0, 0, 1, 2, 15, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.166729}
{'[6, 4, 5, 6, 4, 0, 0, 1, 2, 15, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.166913}
{'[6, 4, 5, 6, 4, 0, 0, 1, 2, 15, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.167208}
{'[6, 4, 5, 6, 4, 0, 0, 1, 2, 15, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.166761}
{'[6, 4, 5, 6, 4, 0, 0, 1, 2, 15, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.166803}
{'[6, 4, 5, 6, 4, 0, 0, 1, 2, 15, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.1669}
{'[6, 4, 5, 6, 4, 0, 0, 1, 2, 15, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.1672}
{'[6, 4, 5, 6, 4, 0, 0, 1, 2, 15, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.166795}
{'[6, 4, 5, 6, 4, 0, 0, 1, 2, 15, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.166826}
{'[6, 4, 5, 6, 4, 0, 0, 1, 2, 15, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.166879}
{'[6, 4, 5, 6, 4, 0, 0, 1, 2, 15, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.166778}
{'[6, 4, 5, 6, 4, 0, 0, 1, 2, 15, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.166797}
{'[6, 4, 5, 6, 4, 0, 0, 1, 2, 15, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.166758}
{'[6, 4, 5, 6, 4, 0, 0, 1, 2, 15, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.166967}

out:
 ["{'[6, 4, 5, 6, 4, 0, 0, 1, 2, 15, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.196194}", "{'[6, 4, 5, 6, 4, 0, 0, 1, 2, 15, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.192318}", "{'[6, 4, 5, 6, 4, 0, 0, 1, 2, 15, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.166969}", "{'[6, 4, 5, 6, 4, 0, 0, 1, 2, 15, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.166859}", "{'[6, 4, 5, 6, 4, 0, 0, 1, 2, 15, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.166981}", "{'[6, 4, 5, 6, 4, 0, 0, 1, 2, 15, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.167071}", "{'[6, 4, 5, 6, 4, 0, 0, 1, 2, 15, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.167383}", "{'[6, 4, 5, 6, 4, 0, 0, 1, 2, 15, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.166808}", "{'[6, 4, 5, 6, 4, 0, 0, 1, 2, 15, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.166964}", "{'[6, 4, 5, 6, 4, 0, 0, 1, 2, 15, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.166937}", "{'[6, 4, 5, 6, 4, 0, 0, 1, 2, 15, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.167113}", "{'[6, 4, 5, 6, 4, 0, 0, 1, 2, 15, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.166669}", "{'[6, 4, 5, 6, 4, 0, 0, 1, 2, 15, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.166782}", "{'[6, 4, 5, 6, 4, 0, 0, 1, 2, 15, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.167064}", "{'[6, 4, 5, 6, 4, 0, 0, 1, 2, 15, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.167079}", "{'[6, 4, 5, 6, 4, 0, 0, 1, 2, 15, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.166774}", "{'[6, 4, 5, 6, 4, 0, 0, 1, 2, 15, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.166729}", "{'[6, 4, 5, 6, 4, 0, 0, 1, 2, 15, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.166913}", "{'[6, 4, 5, 6, 4, 0, 0, 1, 2, 15, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.167208}", "{'[6, 4, 5, 6, 4, 0, 0, 1, 2, 15, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.166761}", "{'[6, 4, 5, 6, 4, 0, 0, 1, 2, 15, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.166803}", "{'[6, 4, 5, 6, 4, 0, 0, 1, 2, 15, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.1669}", "{'[6, 4, 5, 6, 4, 0, 0, 1, 2, 15, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.1672}", "{'[6, 4, 5, 6, 4, 0, 0, 1, 2, 15, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.166795}", "{'[6, 4, 5, 6, 4, 0, 0, 1, 2, 15, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.166826}", "{'[6, 4, 5, 6, 4, 0, 0, 1, 2, 15, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.166879}", "{'[6, 4, 5, 6, 4, 0, 0, 1, 2, 15, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.166778}", "{'[6, 4, 5, 6, 4, 0, 0, 1, 2, 15, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.166797}", "{'[6, 4, 5, 6, 4, 0, 0, 1, 2, 15, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.166758}", "{'[6, 4, 5, 6, 4, 0, 0, 1, 2, 15, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.166967}"]
returning from 'run': {'[6, 4, 5, 6, 4, 0, 0, 1, 2, 15, 0, 28, 0, 0, 1, 0, 0, 0]': ([0.196194, 0.192318, 0.166969, 0.166859, 0.166981, 0.167071, 0.167383, 0.166808, 0.166964, 0.166937, 0.167113, 0.166669, 0.166782, 0.167064, 0.167079, 0.166774, 0.166729, 0.166913, 0.167208, 0.166761, 0.166803, 0.1669, 0.1672, 0.166795, 0.166826, 0.166879, 0.166778, 0.166797, 0.166758, 0.166967], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 4, 5, 6, 4, 0, 0, 1, 2, 15, 0, 28, 0, 0, 1, 0, 0, 0]': ([0.196194, 0.192318, 0.166969, 0.166859, 0.166981, 0.167071, 0.167383, 0.166808, 0.166964, 0.166937, 0.167113, 0.166669, 0.166782, 0.167064, 0.167079, 0.166774, 0.166729, 0.166913, 0.167208, 0.166761, 0.166803, 0.1669, 0.1672, 0.166795, 0.166826, 0.166879, 0.166778, 0.166797, 0.166758, 0.166967], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		374
        Multiplications: 	134
        Divisions: 		0
        Logical: 		0
        Reads: 			837
        Writes: 		131
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest19.exe __orio_perftest19.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest19.exe  
Program Test Output: 
{'[6, 0, 6, 0, 6, 5, 0, 0, 24, 0, 19, 28, 0, 1, 1, 0, 1, 1]' : 0.213587}
{'[6, 0, 6, 0, 6, 5, 0, 0, 24, 0, 19, 28, 0, 1, 1, 0, 1, 1]' : 0.213416}
{'[6, 0, 6, 0, 6, 5, 0, 0, 24, 0, 19, 28, 0, 1, 1, 0, 1, 1]' : 0.194832}
{'[6, 0, 6, 0, 6, 5, 0, 0, 24, 0, 19, 28, 0, 1, 1, 0, 1, 1]' : 0.179605}
{'[6, 0, 6, 0, 6, 5, 0, 0, 24, 0, 19, 28, 0, 1, 1, 0, 1, 1]' : 0.184131}
{'[6, 0, 6, 0, 6, 5, 0, 0, 24, 0, 19, 28, 0, 1, 1, 0, 1, 1]' : 0.181648}
{'[6, 0, 6, 0, 6, 5, 0, 0, 24, 0, 19, 28, 0, 1, 1, 0, 1, 1]' : 0.178757}
{'[6, 0, 6, 0, 6, 5, 0, 0, 24, 0, 19, 28, 0, 1, 1, 0, 1, 1]' : 0.178472}
{'[6, 0, 6, 0, 6, 5, 0, 0, 24, 0, 19, 28, 0, 1, 1, 0, 1, 1]' : 0.179342}
{'[6, 0, 6, 0, 6, 5, 0, 0, 24, 0, 19, 28, 0, 1, 1, 0, 1, 1]' : 0.178864}
{'[6, 0, 6, 0, 6, 5, 0, 0, 24, 0, 19, 28, 0, 1, 1, 0, 1, 1]' : 0.178507}
{'[6, 0, 6, 0, 6, 5, 0, 0, 24, 0, 19, 28, 0, 1, 1, 0, 1, 1]' : 0.181515}
{'[6, 0, 6, 0, 6, 5, 0, 0, 24, 0, 19, 28, 0, 1, 1, 0, 1, 1]' : 0.184122}
{'[6, 0, 6, 0, 6, 5, 0, 0, 24, 0, 19, 28, 0, 1, 1, 0, 1, 1]' : 0.184261}
{'[6, 0, 6, 0, 6, 5, 0, 0, 24, 0, 19, 28, 0, 1, 1, 0, 1, 1]' : 0.185486}
{'[6, 0, 6, 0, 6, 5, 0, 0, 24, 0, 19, 28, 0, 1, 1, 0, 1, 1]' : 0.184354}
{'[6, 0, 6, 0, 6, 5, 0, 0, 24, 0, 19, 28, 0, 1, 1, 0, 1, 1]' : 0.184264}
{'[6, 0, 6, 0, 6, 5, 0, 0, 24, 0, 19, 28, 0, 1, 1, 0, 1, 1]' : 0.184149}
{'[6, 0, 6, 0, 6, 5, 0, 0, 24, 0, 19, 28, 0, 1, 1, 0, 1, 1]' : 0.184394}
{'[6, 0, 6, 0, 6, 5, 0, 0, 24, 0, 19, 28, 0, 1, 1, 0, 1, 1]' : 0.186226}
{'[6, 0, 6, 0, 6, 5, 0, 0, 24, 0, 19, 28, 0, 1, 1, 0, 1, 1]' : 0.189594}
{'[6, 0, 6, 0, 6, 5, 0, 0, 24, 0, 19, 28, 0, 1, 1, 0, 1, 1]' : 0.185092}
{'[6, 0, 6, 0, 6, 5, 0, 0, 24, 0, 19, 28, 0, 1, 1, 0, 1, 1]' : 0.185834}
{'[6, 0, 6, 0, 6, 5, 0, 0, 24, 0, 19, 28, 0, 1, 1, 0, 1, 1]' : 0.184196}
{'[6, 0, 6, 0, 6, 5, 0, 0, 24, 0, 19, 28, 0, 1, 1, 0, 1, 1]' : 0.184214}
{'[6, 0, 6, 0, 6, 5, 0, 0, 24, 0, 19, 28, 0, 1, 1, 0, 1, 1]' : 0.184195}
{'[6, 0, 6, 0, 6, 5, 0, 0, 24, 0, 19, 28, 0, 1, 1, 0, 1, 1]' : 0.182896}
{'[6, 0, 6, 0, 6, 5, 0, 0, 24, 0, 19, 28, 0, 1, 1, 0, 1, 1]' : 0.180275}
{'[6, 0, 6, 0, 6, 5, 0, 0, 24, 0, 19, 28, 0, 1, 1, 0, 1, 1]' : 0.184127}
{'[6, 0, 6, 0, 6, 5, 0, 0, 24, 0, 19, 28, 0, 1, 1, 0, 1, 1]' : 0.184387}

out:
 ["{'[6, 0, 6, 0, 6, 5, 0, 0, 24, 0, 19, 28, 0, 1, 1, 0, 1, 1]' : 0.213587}", "{'[6, 0, 6, 0, 6, 5, 0, 0, 24, 0, 19, 28, 0, 1, 1, 0, 1, 1]' : 0.213416}", "{'[6, 0, 6, 0, 6, 5, 0, 0, 24, 0, 19, 28, 0, 1, 1, 0, 1, 1]' : 0.194832}", "{'[6, 0, 6, 0, 6, 5, 0, 0, 24, 0, 19, 28, 0, 1, 1, 0, 1, 1]' : 0.179605}", "{'[6, 0, 6, 0, 6, 5, 0, 0, 24, 0, 19, 28, 0, 1, 1, 0, 1, 1]' : 0.184131}", "{'[6, 0, 6, 0, 6, 5, 0, 0, 24, 0, 19, 28, 0, 1, 1, 0, 1, 1]' : 0.181648}", "{'[6, 0, 6, 0, 6, 5, 0, 0, 24, 0, 19, 28, 0, 1, 1, 0, 1, 1]' : 0.178757}", "{'[6, 0, 6, 0, 6, 5, 0, 0, 24, 0, 19, 28, 0, 1, 1, 0, 1, 1]' : 0.178472}", "{'[6, 0, 6, 0, 6, 5, 0, 0, 24, 0, 19, 28, 0, 1, 1, 0, 1, 1]' : 0.179342}", "{'[6, 0, 6, 0, 6, 5, 0, 0, 24, 0, 19, 28, 0, 1, 1, 0, 1, 1]' : 0.178864}", "{'[6, 0, 6, 0, 6, 5, 0, 0, 24, 0, 19, 28, 0, 1, 1, 0, 1, 1]' : 0.178507}", "{'[6, 0, 6, 0, 6, 5, 0, 0, 24, 0, 19, 28, 0, 1, 1, 0, 1, 1]' : 0.181515}", "{'[6, 0, 6, 0, 6, 5, 0, 0, 24, 0, 19, 28, 0, 1, 1, 0, 1, 1]' : 0.184122}", "{'[6, 0, 6, 0, 6, 5, 0, 0, 24, 0, 19, 28, 0, 1, 1, 0, 1, 1]' : 0.184261}", "{'[6, 0, 6, 0, 6, 5, 0, 0, 24, 0, 19, 28, 0, 1, 1, 0, 1, 1]' : 0.185486}", "{'[6, 0, 6, 0, 6, 5, 0, 0, 24, 0, 19, 28, 0, 1, 1, 0, 1, 1]' : 0.184354}", "{'[6, 0, 6, 0, 6, 5, 0, 0, 24, 0, 19, 28, 0, 1, 1, 0, 1, 1]' : 0.184264}", "{'[6, 0, 6, 0, 6, 5, 0, 0, 24, 0, 19, 28, 0, 1, 1, 0, 1, 1]' : 0.184149}", "{'[6, 0, 6, 0, 6, 5, 0, 0, 24, 0, 19, 28, 0, 1, 1, 0, 1, 1]' : 0.184394}", "{'[6, 0, 6, 0, 6, 5, 0, 0, 24, 0, 19, 28, 0, 1, 1, 0, 1, 1]' : 0.186226}", "{'[6, 0, 6, 0, 6, 5, 0, 0, 24, 0, 19, 28, 0, 1, 1, 0, 1, 1]' : 0.189594}", "{'[6, 0, 6, 0, 6, 5, 0, 0, 24, 0, 19, 28, 0, 1, 1, 0, 1, 1]' : 0.185092}", "{'[6, 0, 6, 0, 6, 5, 0, 0, 24, 0, 19, 28, 0, 1, 1, 0, 1, 1]' : 0.185834}", "{'[6, 0, 6, 0, 6, 5, 0, 0, 24, 0, 19, 28, 0, 1, 1, 0, 1, 1]' : 0.184196}", "{'[6, 0, 6, 0, 6, 5, 0, 0, 24, 0, 19, 28, 0, 1, 1, 0, 1, 1]' : 0.184214}", "{'[6, 0, 6, 0, 6, 5, 0, 0, 24, 0, 19, 28, 0, 1, 1, 0, 1, 1]' : 0.184195}", "{'[6, 0, 6, 0, 6, 5, 0, 0, 24, 0, 19, 28, 0, 1, 1, 0, 1, 1]' : 0.182896}", "{'[6, 0, 6, 0, 6, 5, 0, 0, 24, 0, 19, 28, 0, 1, 1, 0, 1, 1]' : 0.180275}", "{'[6, 0, 6, 0, 6, 5, 0, 0, 24, 0, 19, 28, 0, 1, 1, 0, 1, 1]' : 0.184127}", "{'[6, 0, 6, 0, 6, 5, 0, 0, 24, 0, 19, 28, 0, 1, 1, 0, 1, 1]' : 0.184387}"]
returning from 'run': {'[6, 0, 6, 0, 6, 5, 0, 0, 24, 0, 19, 28, 0, 1, 1, 0, 1, 1]': ([0.213587, 0.213416, 0.194832, 0.179605, 0.184131, 0.181648, 0.178757, 0.178472, 0.179342, 0.178864, 0.178507, 0.181515, 0.184122, 0.184261, 0.185486, 0.184354, 0.184264, 0.184149, 0.184394, 0.186226, 0.189594, 0.185092, 0.185834, 0.184196, 0.184214, 0.184195, 0.182896, 0.180275, 0.184127, 0.184387], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 6, 0, 6, 5, 0, 0, 24, 0, 19, 28, 0, 1, 1, 0, 1, 1]': ([0.213587, 0.213416, 0.194832, 0.179605, 0.184131, 0.181648, 0.178757, 0.178472, 0.179342, 0.178864, 0.178507, 0.181515, 0.184122, 0.184261, 0.185486, 0.184354, 0.184264, 0.184149, 0.184394, 0.186226, 0.189594, 0.185092, 0.185834, 0.184196, 0.184214, 0.184195, 0.182896, 0.180275, 0.184127, 0.184387], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	43
        Max loop nest depth: 	4
        Additions: 		2006
        Multiplications: 	918
        Divisions: 		0
        Logical: 		0
        Reads: 			4042
        Writes: 		723
        Comparisons:		43
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest20.exe __orio_perftest20.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest20.exe  
Program Test Output: 
{'[0, 6, 6, 0, 5, 0, 1, 0, 3, 25, 0, 14, 0, 0, 0, 1, 0, 0]' : 0.148135}
{'[0, 6, 6, 0, 5, 0, 1, 0, 3, 25, 0, 14, 0, 0, 0, 1, 0, 0]' : 0.154574}
{'[0, 6, 6, 0, 5, 0, 1, 0, 3, 25, 0, 14, 0, 0, 0, 1, 0, 0]' : 0.154505}
{'[0, 6, 6, 0, 5, 0, 1, 0, 3, 25, 0, 14, 0, 0, 0, 1, 0, 0]' : 0.15306}
{'[0, 6, 6, 0, 5, 0, 1, 0, 3, 25, 0, 14, 0, 0, 0, 1, 0, 0]' : 0.154425}
{'[0, 6, 6, 0, 5, 0, 1, 0, 3, 25, 0, 14, 0, 0, 0, 1, 0, 0]' : 0.154777}
{'[0, 6, 6, 0, 5, 0, 1, 0, 3, 25, 0, 14, 0, 0, 0, 1, 0, 0]' : 0.152609}
{'[0, 6, 6, 0, 5, 0, 1, 0, 3, 25, 0, 14, 0, 0, 0, 1, 0, 0]' : 0.151637}
{'[0, 6, 6, 0, 5, 0, 1, 0, 3, 25, 0, 14, 0, 0, 0, 1, 0, 0]' : 0.152133}
{'[0, 6, 6, 0, 5, 0, 1, 0, 3, 25, 0, 14, 0, 0, 0, 1, 0, 0]' : 0.152012}
{'[0, 6, 6, 0, 5, 0, 1, 0, 3, 25, 0, 14, 0, 0, 0, 1, 0, 0]' : 0.151864}
{'[0, 6, 6, 0, 5, 0, 1, 0, 3, 25, 0, 14, 0, 0, 0, 1, 0, 0]' : 0.151574}
{'[0, 6, 6, 0, 5, 0, 1, 0, 3, 25, 0, 14, 0, 0, 0, 1, 0, 0]' : 0.151451}
{'[0, 6, 6, 0, 5, 0, 1, 0, 3, 25, 0, 14, 0, 0, 0, 1, 0, 0]' : 0.15133}
{'[0, 6, 6, 0, 5, 0, 1, 0, 3, 25, 0, 14, 0, 0, 0, 1, 0, 0]' : 0.151469}
{'[0, 6, 6, 0, 5, 0, 1, 0, 3, 25, 0, 14, 0, 0, 0, 1, 0, 0]' : 0.154709}
{'[0, 6, 6, 0, 5, 0, 1, 0, 3, 25, 0, 14, 0, 0, 0, 1, 0, 0]' : 0.155182}
{'[0, 6, 6, 0, 5, 0, 1, 0, 3, 25, 0, 14, 0, 0, 0, 1, 0, 0]' : 0.155358}
{'[0, 6, 6, 0, 5, 0, 1, 0, 3, 25, 0, 14, 0, 0, 0, 1, 0, 0]' : 0.15487}
{'[0, 6, 6, 0, 5, 0, 1, 0, 3, 25, 0, 14, 0, 0, 0, 1, 0, 0]' : 0.154912}
{'[0, 6, 6, 0, 5, 0, 1, 0, 3, 25, 0, 14, 0, 0, 0, 1, 0, 0]' : 0.154059}
{'[0, 6, 6, 0, 5, 0, 1, 0, 3, 25, 0, 14, 0, 0, 0, 1, 0, 0]' : 0.154764}
{'[0, 6, 6, 0, 5, 0, 1, 0, 3, 25, 0, 14, 0, 0, 0, 1, 0, 0]' : 0.155093}
{'[0, 6, 6, 0, 5, 0, 1, 0, 3, 25, 0, 14, 0, 0, 0, 1, 0, 0]' : 0.154945}
{'[0, 6, 6, 0, 5, 0, 1, 0, 3, 25, 0, 14, 0, 0, 0, 1, 0, 0]' : 0.154742}
{'[0, 6, 6, 0, 5, 0, 1, 0, 3, 25, 0, 14, 0, 0, 0, 1, 0, 0]' : 0.152276}
{'[0, 6, 6, 0, 5, 0, 1, 0, 3, 25, 0, 14, 0, 0, 0, 1, 0, 0]' : 0.151465}
{'[0, 6, 6, 0, 5, 0, 1, 0, 3, 25, 0, 14, 0, 0, 0, 1, 0, 0]' : 0.152021}
{'[0, 6, 6, 0, 5, 0, 1, 0, 3, 25, 0, 14, 0, 0, 0, 1, 0, 0]' : 0.151415}
{'[0, 6, 6, 0, 5, 0, 1, 0, 3, 25, 0, 14, 0, 0, 0, 1, 0, 0]' : 0.151484}

out:
 ["{'[0, 6, 6, 0, 5, 0, 1, 0, 3, 25, 0, 14, 0, 0, 0, 1, 0, 0]' : 0.148135}", "{'[0, 6, 6, 0, 5, 0, 1, 0, 3, 25, 0, 14, 0, 0, 0, 1, 0, 0]' : 0.154574}", "{'[0, 6, 6, 0, 5, 0, 1, 0, 3, 25, 0, 14, 0, 0, 0, 1, 0, 0]' : 0.154505}", "{'[0, 6, 6, 0, 5, 0, 1, 0, 3, 25, 0, 14, 0, 0, 0, 1, 0, 0]' : 0.15306}", "{'[0, 6, 6, 0, 5, 0, 1, 0, 3, 25, 0, 14, 0, 0, 0, 1, 0, 0]' : 0.154425}", "{'[0, 6, 6, 0, 5, 0, 1, 0, 3, 25, 0, 14, 0, 0, 0, 1, 0, 0]' : 0.154777}", "{'[0, 6, 6, 0, 5, 0, 1, 0, 3, 25, 0, 14, 0, 0, 0, 1, 0, 0]' : 0.152609}", "{'[0, 6, 6, 0, 5, 0, 1, 0, 3, 25, 0, 14, 0, 0, 0, 1, 0, 0]' : 0.151637}", "{'[0, 6, 6, 0, 5, 0, 1, 0, 3, 25, 0, 14, 0, 0, 0, 1, 0, 0]' : 0.152133}", "{'[0, 6, 6, 0, 5, 0, 1, 0, 3, 25, 0, 14, 0, 0, 0, 1, 0, 0]' : 0.152012}", "{'[0, 6, 6, 0, 5, 0, 1, 0, 3, 25, 0, 14, 0, 0, 0, 1, 0, 0]' : 0.151864}", "{'[0, 6, 6, 0, 5, 0, 1, 0, 3, 25, 0, 14, 0, 0, 0, 1, 0, 0]' : 0.151574}", "{'[0, 6, 6, 0, 5, 0, 1, 0, 3, 25, 0, 14, 0, 0, 0, 1, 0, 0]' : 0.151451}", "{'[0, 6, 6, 0, 5, 0, 1, 0, 3, 25, 0, 14, 0, 0, 0, 1, 0, 0]' : 0.15133}", "{'[0, 6, 6, 0, 5, 0, 1, 0, 3, 25, 0, 14, 0, 0, 0, 1, 0, 0]' : 0.151469}", "{'[0, 6, 6, 0, 5, 0, 1, 0, 3, 25, 0, 14, 0, 0, 0, 1, 0, 0]' : 0.154709}", "{'[0, 6, 6, 0, 5, 0, 1, 0, 3, 25, 0, 14, 0, 0, 0, 1, 0, 0]' : 0.155182}", "{'[0, 6, 6, 0, 5, 0, 1, 0, 3, 25, 0, 14, 0, 0, 0, 1, 0, 0]' : 0.155358}", "{'[0, 6, 6, 0, 5, 0, 1, 0, 3, 25, 0, 14, 0, 0, 0, 1, 0, 0]' : 0.15487}", "{'[0, 6, 6, 0, 5, 0, 1, 0, 3, 25, 0, 14, 0, 0, 0, 1, 0, 0]' : 0.154912}", "{'[0, 6, 6, 0, 5, 0, 1, 0, 3, 25, 0, 14, 0, 0, 0, 1, 0, 0]' : 0.154059}", "{'[0, 6, 6, 0, 5, 0, 1, 0, 3, 25, 0, 14, 0, 0, 0, 1, 0, 0]' : 0.154764}", "{'[0, 6, 6, 0, 5, 0, 1, 0, 3, 25, 0, 14, 0, 0, 0, 1, 0, 0]' : 0.155093}", "{'[0, 6, 6, 0, 5, 0, 1, 0, 3, 25, 0, 14, 0, 0, 0, 1, 0, 0]' : 0.154945}", "{'[0, 6, 6, 0, 5, 0, 1, 0, 3, 25, 0, 14, 0, 0, 0, 1, 0, 0]' : 0.154742}", "{'[0, 6, 6, 0, 5, 0, 1, 0, 3, 25, 0, 14, 0, 0, 0, 1, 0, 0]' : 0.152276}", "{'[0, 6, 6, 0, 5, 0, 1, 0, 3, 25, 0, 14, 0, 0, 0, 1, 0, 0]' : 0.151465}", "{'[0, 6, 6, 0, 5, 0, 1, 0, 3, 25, 0, 14, 0, 0, 0, 1, 0, 0]' : 0.152021}", "{'[0, 6, 6, 0, 5, 0, 1, 0, 3, 25, 0, 14, 0, 0, 0, 1, 0, 0]' : 0.151415}", "{'[0, 6, 6, 0, 5, 0, 1, 0, 3, 25, 0, 14, 0, 0, 0, 1, 0, 0]' : 0.151484}"]
returning from 'run': {'[0, 6, 6, 0, 5, 0, 1, 0, 3, 25, 0, 14, 0, 0, 0, 1, 0, 0]': ([0.148135, 0.154574, 0.154505, 0.15306, 0.154425, 0.154777, 0.152609, 0.151637, 0.152133, 0.152012, 0.151864, 0.151574, 0.151451, 0.15133, 0.151469, 0.154709, 0.155182, 0.155358, 0.15487, 0.154912, 0.154059, 0.154764, 0.155093, 0.154945, 0.154742, 0.152276, 0.151465, 0.152021, 0.151415, 0.151484], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 6, 0, 5, 0, 1, 0, 3, 25, 0, 14, 0, 0, 0, 1, 0, 0]': ([0.148135, 0.154574, 0.154505, 0.15306, 0.154425, 0.154777, 0.152609, 0.151637, 0.152133, 0.152012, 0.151864, 0.151574, 0.151451, 0.15133, 0.151469, 0.154709, 0.155182, 0.155358, 0.15487, 0.154912, 0.154059, 0.154764, 0.155093, 0.154945, 0.154742, 0.152276, 0.151465, 0.152021, 0.151415, 0.151484], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	6
        Additions: 		382
        Multiplications: 	132
        Divisions: 		0
        Logical: 		0
        Reads: 			993
        Writes: 		251
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest21.exe __orio_perftest21.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest21.exe  
Program Test Output: 
{'[6, 0, 4, 6, 0, 6, 1, 0, 22, 0, 2, 28, 0, 0, 2, 1, 1, 1]' : 0.156031}
{'[6, 0, 4, 6, 0, 6, 1, 0, 22, 0, 2, 28, 0, 0, 2, 1, 1, 1]' : 0.159355}
{'[6, 0, 4, 6, 0, 6, 1, 0, 22, 0, 2, 28, 0, 0, 2, 1, 1, 1]' : 0.156352}
{'[6, 0, 4, 6, 0, 6, 1, 0, 22, 0, 2, 28, 0, 0, 2, 1, 1, 1]' : 0.155709}
{'[6, 0, 4, 6, 0, 6, 1, 0, 22, 0, 2, 28, 0, 0, 2, 1, 1, 1]' : 0.156145}
{'[6, 0, 4, 6, 0, 6, 1, 0, 22, 0, 2, 28, 0, 0, 2, 1, 1, 1]' : 0.155872}
{'[6, 0, 4, 6, 0, 6, 1, 0, 22, 0, 2, 28, 0, 0, 2, 1, 1, 1]' : 0.156403}
{'[6, 0, 4, 6, 0, 6, 1, 0, 22, 0, 2, 28, 0, 0, 2, 1, 1, 1]' : 0.155888}
{'[6, 0, 4, 6, 0, 6, 1, 0, 22, 0, 2, 28, 0, 0, 2, 1, 1, 1]' : 0.158382}
{'[6, 0, 4, 6, 0, 6, 1, 0, 22, 0, 2, 28, 0, 0, 2, 1, 1, 1]' : 0.159002}
{'[6, 0, 4, 6, 0, 6, 1, 0, 22, 0, 2, 28, 0, 0, 2, 1, 1, 1]' : 0.150897}
{'[6, 0, 4, 6, 0, 6, 1, 0, 22, 0, 2, 28, 0, 0, 2, 1, 1, 1]' : 0.153069}
{'[6, 0, 4, 6, 0, 6, 1, 0, 22, 0, 2, 28, 0, 0, 2, 1, 1, 1]' : 0.155706}
{'[6, 0, 4, 6, 0, 6, 1, 0, 22, 0, 2, 28, 0, 0, 2, 1, 1, 1]' : 0.155799}
{'[6, 0, 4, 6, 0, 6, 1, 0, 22, 0, 2, 28, 0, 0, 2, 1, 1, 1]' : 0.156506}
{'[6, 0, 4, 6, 0, 6, 1, 0, 22, 0, 2, 28, 0, 0, 2, 1, 1, 1]' : 0.158519}
{'[6, 0, 4, 6, 0, 6, 1, 0, 22, 0, 2, 28, 0, 0, 2, 1, 1, 1]' : 0.155818}
{'[6, 0, 4, 6, 0, 6, 1, 0, 22, 0, 2, 28, 0, 0, 2, 1, 1, 1]' : 0.155749}
{'[6, 0, 4, 6, 0, 6, 1, 0, 22, 0, 2, 28, 0, 0, 2, 1, 1, 1]' : 0.156025}
{'[6, 0, 4, 6, 0, 6, 1, 0, 22, 0, 2, 28, 0, 0, 2, 1, 1, 1]' : 0.155666}
{'[6, 0, 4, 6, 0, 6, 1, 0, 22, 0, 2, 28, 0, 0, 2, 1, 1, 1]' : 0.155874}
{'[6, 0, 4, 6, 0, 6, 1, 0, 22, 0, 2, 28, 0, 0, 2, 1, 1, 1]' : 0.155972}
{'[6, 0, 4, 6, 0, 6, 1, 0, 22, 0, 2, 28, 0, 0, 2, 1, 1, 1]' : 0.155635}
{'[6, 0, 4, 6, 0, 6, 1, 0, 22, 0, 2, 28, 0, 0, 2, 1, 1, 1]' : 0.155707}
{'[6, 0, 4, 6, 0, 6, 1, 0, 22, 0, 2, 28, 0, 0, 2, 1, 1, 1]' : 0.15793}
{'[6, 0, 4, 6, 0, 6, 1, 0, 22, 0, 2, 28, 0, 0, 2, 1, 1, 1]' : 0.156771}
{'[6, 0, 4, 6, 0, 6, 1, 0, 22, 0, 2, 28, 0, 0, 2, 1, 1, 1]' : 0.155996}
{'[6, 0, 4, 6, 0, 6, 1, 0, 22, 0, 2, 28, 0, 0, 2, 1, 1, 1]' : 0.15727}
{'[6, 0, 4, 6, 0, 6, 1, 0, 22, 0, 2, 28, 0, 0, 2, 1, 1, 1]' : 0.155995}
{'[6, 0, 4, 6, 0, 6, 1, 0, 22, 0, 2, 28, 0, 0, 2, 1, 1, 1]' : 0.155893}

out:
 ["{'[6, 0, 4, 6, 0, 6, 1, 0, 22, 0, 2, 28, 0, 0, 2, 1, 1, 1]' : 0.156031}", "{'[6, 0, 4, 6, 0, 6, 1, 0, 22, 0, 2, 28, 0, 0, 2, 1, 1, 1]' : 0.159355}", "{'[6, 0, 4, 6, 0, 6, 1, 0, 22, 0, 2, 28, 0, 0, 2, 1, 1, 1]' : 0.156352}", "{'[6, 0, 4, 6, 0, 6, 1, 0, 22, 0, 2, 28, 0, 0, 2, 1, 1, 1]' : 0.155709}", "{'[6, 0, 4, 6, 0, 6, 1, 0, 22, 0, 2, 28, 0, 0, 2, 1, 1, 1]' : 0.156145}", "{'[6, 0, 4, 6, 0, 6, 1, 0, 22, 0, 2, 28, 0, 0, 2, 1, 1, 1]' : 0.155872}", "{'[6, 0, 4, 6, 0, 6, 1, 0, 22, 0, 2, 28, 0, 0, 2, 1, 1, 1]' : 0.156403}", "{'[6, 0, 4, 6, 0, 6, 1, 0, 22, 0, 2, 28, 0, 0, 2, 1, 1, 1]' : 0.155888}", "{'[6, 0, 4, 6, 0, 6, 1, 0, 22, 0, 2, 28, 0, 0, 2, 1, 1, 1]' : 0.158382}", "{'[6, 0, 4, 6, 0, 6, 1, 0, 22, 0, 2, 28, 0, 0, 2, 1, 1, 1]' : 0.159002}", "{'[6, 0, 4, 6, 0, 6, 1, 0, 22, 0, 2, 28, 0, 0, 2, 1, 1, 1]' : 0.150897}", "{'[6, 0, 4, 6, 0, 6, 1, 0, 22, 0, 2, 28, 0, 0, 2, 1, 1, 1]' : 0.153069}", "{'[6, 0, 4, 6, 0, 6, 1, 0, 22, 0, 2, 28, 0, 0, 2, 1, 1, 1]' : 0.155706}", "{'[6, 0, 4, 6, 0, 6, 1, 0, 22, 0, 2, 28, 0, 0, 2, 1, 1, 1]' : 0.155799}", "{'[6, 0, 4, 6, 0, 6, 1, 0, 22, 0, 2, 28, 0, 0, 2, 1, 1, 1]' : 0.156506}", "{'[6, 0, 4, 6, 0, 6, 1, 0, 22, 0, 2, 28, 0, 0, 2, 1, 1, 1]' : 0.158519}", "{'[6, 0, 4, 6, 0, 6, 1, 0, 22, 0, 2, 28, 0, 0, 2, 1, 1, 1]' : 0.155818}", "{'[6, 0, 4, 6, 0, 6, 1, 0, 22, 0, 2, 28, 0, 0, 2, 1, 1, 1]' : 0.155749}", "{'[6, 0, 4, 6, 0, 6, 1, 0, 22, 0, 2, 28, 0, 0, 2, 1, 1, 1]' : 0.156025}", "{'[6, 0, 4, 6, 0, 6, 1, 0, 22, 0, 2, 28, 0, 0, 2, 1, 1, 1]' : 0.155666}", "{'[6, 0, 4, 6, 0, 6, 1, 0, 22, 0, 2, 28, 0, 0, 2, 1, 1, 1]' : 0.155874}", "{'[6, 0, 4, 6, 0, 6, 1, 0, 22, 0, 2, 28, 0, 0, 2, 1, 1, 1]' : 0.155972}", "{'[6, 0, 4, 6, 0, 6, 1, 0, 22, 0, 2, 28, 0, 0, 2, 1, 1, 1]' : 0.155635}", "{'[6, 0, 4, 6, 0, 6, 1, 0, 22, 0, 2, 28, 0, 0, 2, 1, 1, 1]' : 0.155707}", "{'[6, 0, 4, 6, 0, 6, 1, 0, 22, 0, 2, 28, 0, 0, 2, 1, 1, 1]' : 0.15793}", "{'[6, 0, 4, 6, 0, 6, 1, 0, 22, 0, 2, 28, 0, 0, 2, 1, 1, 1]' : 0.156771}", "{'[6, 0, 4, 6, 0, 6, 1, 0, 22, 0, 2, 28, 0, 0, 2, 1, 1, 1]' : 0.155996}", "{'[6, 0, 4, 6, 0, 6, 1, 0, 22, 0, 2, 28, 0, 0, 2, 1, 1, 1]' : 0.15727}", "{'[6, 0, 4, 6, 0, 6, 1, 0, 22, 0, 2, 28, 0, 0, 2, 1, 1, 1]' : 0.155995}", "{'[6, 0, 4, 6, 0, 6, 1, 0, 22, 0, 2, 28, 0, 0, 2, 1, 1, 1]' : 0.155893}"]
returning from 'run': {'[6, 0, 4, 6, 0, 6, 1, 0, 22, 0, 2, 28, 0, 0, 2, 1, 1, 1]': ([0.156031, 0.159355, 0.156352, 0.155709, 0.156145, 0.155872, 0.156403, 0.155888, 0.158382, 0.159002, 0.150897, 0.153069, 0.155706, 0.155799, 0.156506, 0.158519, 0.155818, 0.155749, 0.156025, 0.155666, 0.155874, 0.155972, 0.155635, 0.155707, 0.15793, 0.156771, 0.155996, 0.15727, 0.155995, 0.155893], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 4, 6, 0, 6, 1, 0, 22, 0, 2, 28, 0, 0, 2, 1, 1, 1]': ([0.156031, 0.159355, 0.156352, 0.155709, 0.156145, 0.155872, 0.156403, 0.155888, 0.158382, 0.159002, 0.150897, 0.153069, 0.155706, 0.155799, 0.156506, 0.158519, 0.155818, 0.155749, 0.156025, 0.155666, 0.155874, 0.155972, 0.155635, 0.155707, 0.15793, 0.156771, 0.155996, 0.15727, 0.155995, 0.155893], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	55
        Max loop nest depth: 	5
        Additions: 		1596
        Multiplications: 	342
        Divisions: 		0
        Logical: 		0
        Reads: 			2646
        Writes: 		347
        Comparisons:		55
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest22.exe __orio_perftest22.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest22.exe  
Program Test Output: 
{'[5, 6, 0, 6, 0, 6, 1, 1, 10, 9, 0, 16, 1, 0, 1, 0, 0, 1]' : 0.123352}
{'[5, 6, 0, 6, 0, 6, 1, 1, 10, 9, 0, 16, 1, 0, 1, 0, 0, 1]' : 0.123345}
{'[5, 6, 0, 6, 0, 6, 1, 1, 10, 9, 0, 16, 1, 0, 1, 0, 0, 1]' : 0.123291}
{'[5, 6, 0, 6, 0, 6, 1, 1, 10, 9, 0, 16, 1, 0, 1, 0, 0, 1]' : 0.123256}
{'[5, 6, 0, 6, 0, 6, 1, 1, 10, 9, 0, 16, 1, 0, 1, 0, 0, 1]' : 0.123324}
{'[5, 6, 0, 6, 0, 6, 1, 1, 10, 9, 0, 16, 1, 0, 1, 0, 0, 1]' : 0.123397}
{'[5, 6, 0, 6, 0, 6, 1, 1, 10, 9, 0, 16, 1, 0, 1, 0, 0, 1]' : 0.123587}
{'[5, 6, 0, 6, 0, 6, 1, 1, 10, 9, 0, 16, 1, 0, 1, 0, 0, 1]' : 0.123338}
{'[5, 6, 0, 6, 0, 6, 1, 1, 10, 9, 0, 16, 1, 0, 1, 0, 0, 1]' : 0.123684}
{'[5, 6, 0, 6, 0, 6, 1, 1, 10, 9, 0, 16, 1, 0, 1, 0, 0, 1]' : 0.123272}
{'[5, 6, 0, 6, 0, 6, 1, 1, 10, 9, 0, 16, 1, 0, 1, 0, 0, 1]' : 0.123274}
{'[5, 6, 0, 6, 0, 6, 1, 1, 10, 9, 0, 16, 1, 0, 1, 0, 0, 1]' : 0.123278}
{'[5, 6, 0, 6, 0, 6, 1, 1, 10, 9, 0, 16, 1, 0, 1, 0, 0, 1]' : 0.123275}
{'[5, 6, 0, 6, 0, 6, 1, 1, 10, 9, 0, 16, 1, 0, 1, 0, 0, 1]' : 0.123398}
{'[5, 6, 0, 6, 0, 6, 1, 1, 10, 9, 0, 16, 1, 0, 1, 0, 0, 1]' : 0.123324}
{'[5, 6, 0, 6, 0, 6, 1, 1, 10, 9, 0, 16, 1, 0, 1, 0, 0, 1]' : 0.123274}
{'[5, 6, 0, 6, 0, 6, 1, 1, 10, 9, 0, 16, 1, 0, 1, 0, 0, 1]' : 0.123266}
{'[5, 6, 0, 6, 0, 6, 1, 1, 10, 9, 0, 16, 1, 0, 1, 0, 0, 1]' : 0.121637}
{'[5, 6, 0, 6, 0, 6, 1, 1, 10, 9, 0, 16, 1, 0, 1, 0, 0, 1]' : 0.120388}
{'[5, 6, 0, 6, 0, 6, 1, 1, 10, 9, 0, 16, 1, 0, 1, 0, 0, 1]' : 0.120201}
{'[5, 6, 0, 6, 0, 6, 1, 1, 10, 9, 0, 16, 1, 0, 1, 0, 0, 1]' : 0.121146}
{'[5, 6, 0, 6, 0, 6, 1, 1, 10, 9, 0, 16, 1, 0, 1, 0, 0, 1]' : 0.120535}
{'[5, 6, 0, 6, 0, 6, 1, 1, 10, 9, 0, 16, 1, 0, 1, 0, 0, 1]' : 0.120566}
{'[5, 6, 0, 6, 0, 6, 1, 1, 10, 9, 0, 16, 1, 0, 1, 0, 0, 1]' : 0.122954}
{'[5, 6, 0, 6, 0, 6, 1, 1, 10, 9, 0, 16, 1, 0, 1, 0, 0, 1]' : 0.122968}
{'[5, 6, 0, 6, 0, 6, 1, 1, 10, 9, 0, 16, 1, 0, 1, 0, 0, 1]' : 0.122978}
{'[5, 6, 0, 6, 0, 6, 1, 1, 10, 9, 0, 16, 1, 0, 1, 0, 0, 1]' : 0.122707}
{'[5, 6, 0, 6, 0, 6, 1, 1, 10, 9, 0, 16, 1, 0, 1, 0, 0, 1]' : 0.122926}
{'[5, 6, 0, 6, 0, 6, 1, 1, 10, 9, 0, 16, 1, 0, 1, 0, 0, 1]' : 0.12286}
{'[5, 6, 0, 6, 0, 6, 1, 1, 10, 9, 0, 16, 1, 0, 1, 0, 0, 1]' : 0.12285}

out:
 ["{'[5, 6, 0, 6, 0, 6, 1, 1, 10, 9, 0, 16, 1, 0, 1, 0, 0, 1]' : 0.123352}", "{'[5, 6, 0, 6, 0, 6, 1, 1, 10, 9, 0, 16, 1, 0, 1, 0, 0, 1]' : 0.123345}", "{'[5, 6, 0, 6, 0, 6, 1, 1, 10, 9, 0, 16, 1, 0, 1, 0, 0, 1]' : 0.123291}", "{'[5, 6, 0, 6, 0, 6, 1, 1, 10, 9, 0, 16, 1, 0, 1, 0, 0, 1]' : 0.123256}", "{'[5, 6, 0, 6, 0, 6, 1, 1, 10, 9, 0, 16, 1, 0, 1, 0, 0, 1]' : 0.123324}", "{'[5, 6, 0, 6, 0, 6, 1, 1, 10, 9, 0, 16, 1, 0, 1, 0, 0, 1]' : 0.123397}", "{'[5, 6, 0, 6, 0, 6, 1, 1, 10, 9, 0, 16, 1, 0, 1, 0, 0, 1]' : 0.123587}", "{'[5, 6, 0, 6, 0, 6, 1, 1, 10, 9, 0, 16, 1, 0, 1, 0, 0, 1]' : 0.123338}", "{'[5, 6, 0, 6, 0, 6, 1, 1, 10, 9, 0, 16, 1, 0, 1, 0, 0, 1]' : 0.123684}", "{'[5, 6, 0, 6, 0, 6, 1, 1, 10, 9, 0, 16, 1, 0, 1, 0, 0, 1]' : 0.123272}", "{'[5, 6, 0, 6, 0, 6, 1, 1, 10, 9, 0, 16, 1, 0, 1, 0, 0, 1]' : 0.123274}", "{'[5, 6, 0, 6, 0, 6, 1, 1, 10, 9, 0, 16, 1, 0, 1, 0, 0, 1]' : 0.123278}", "{'[5, 6, 0, 6, 0, 6, 1, 1, 10, 9, 0, 16, 1, 0, 1, 0, 0, 1]' : 0.123275}", "{'[5, 6, 0, 6, 0, 6, 1, 1, 10, 9, 0, 16, 1, 0, 1, 0, 0, 1]' : 0.123398}", "{'[5, 6, 0, 6, 0, 6, 1, 1, 10, 9, 0, 16, 1, 0, 1, 0, 0, 1]' : 0.123324}", "{'[5, 6, 0, 6, 0, 6, 1, 1, 10, 9, 0, 16, 1, 0, 1, 0, 0, 1]' : 0.123274}", "{'[5, 6, 0, 6, 0, 6, 1, 1, 10, 9, 0, 16, 1, 0, 1, 0, 0, 1]' : 0.123266}", "{'[5, 6, 0, 6, 0, 6, 1, 1, 10, 9, 0, 16, 1, 0, 1, 0, 0, 1]' : 0.121637}", "{'[5, 6, 0, 6, 0, 6, 1, 1, 10, 9, 0, 16, 1, 0, 1, 0, 0, 1]' : 0.120388}", "{'[5, 6, 0, 6, 0, 6, 1, 1, 10, 9, 0, 16, 1, 0, 1, 0, 0, 1]' : 0.120201}", "{'[5, 6, 0, 6, 0, 6, 1, 1, 10, 9, 0, 16, 1, 0, 1, 0, 0, 1]' : 0.121146}", "{'[5, 6, 0, 6, 0, 6, 1, 1, 10, 9, 0, 16, 1, 0, 1, 0, 0, 1]' : 0.120535}", "{'[5, 6, 0, 6, 0, 6, 1, 1, 10, 9, 0, 16, 1, 0, 1, 0, 0, 1]' : 0.120566}", "{'[5, 6, 0, 6, 0, 6, 1, 1, 10, 9, 0, 16, 1, 0, 1, 0, 0, 1]' : 0.122954}", "{'[5, 6, 0, 6, 0, 6, 1, 1, 10, 9, 0, 16, 1, 0, 1, 0, 0, 1]' : 0.122968}", "{'[5, 6, 0, 6, 0, 6, 1, 1, 10, 9, 0, 16, 1, 0, 1, 0, 0, 1]' : 0.122978}", "{'[5, 6, 0, 6, 0, 6, 1, 1, 10, 9, 0, 16, 1, 0, 1, 0, 0, 1]' : 0.122707}", "{'[5, 6, 0, 6, 0, 6, 1, 1, 10, 9, 0, 16, 1, 0, 1, 0, 0, 1]' : 0.122926}", "{'[5, 6, 0, 6, 0, 6, 1, 1, 10, 9, 0, 16, 1, 0, 1, 0, 0, 1]' : 0.12286}", "{'[5, 6, 0, 6, 0, 6, 1, 1, 10, 9, 0, 16, 1, 0, 1, 0, 0, 1]' : 0.12285}"]
returning from 'run': {'[5, 6, 0, 6, 0, 6, 1, 1, 10, 9, 0, 16, 1, 0, 1, 0, 0, 1]': ([0.123352, 0.123345, 0.123291, 0.123256, 0.123324, 0.123397, 0.123587, 0.123338, 0.123684, 0.123272, 0.123274, 0.123278, 0.123275, 0.123398, 0.123324, 0.123274, 0.123266, 0.121637, 0.120388, 0.120201, 0.121146, 0.120535, 0.120566, 0.122954, 0.122968, 0.122978, 0.122707, 0.122926, 0.12286, 0.12285], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 6, 0, 6, 0, 6, 1, 1, 10, 9, 0, 16, 1, 0, 1, 0, 0, 1]': ([0.123352, 0.123345, 0.123291, 0.123256, 0.123324, 0.123397, 0.123587, 0.123338, 0.123684, 0.123272, 0.123274, 0.123278, 0.123275, 0.123398, 0.123324, 0.123274, 0.123266, 0.121637, 0.120388, 0.120201, 0.121146, 0.120535, 0.120566, 0.122954, 0.122968, 0.122978, 0.122707, 0.122926, 0.12286, 0.12285], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	54
        Max loop nest depth: 	4
        Additions: 		425
        Multiplications: 	100
        Divisions: 		0
        Logical: 		0
        Reads: 			1167
        Writes: 		306
        Comparisons:		54
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest23.exe __orio_perftest23.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest23.exe  
Program Test Output: 
{'[4, 5, 6, 0, 0, 0, 0, 1, 28, 15, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.12085}
{'[4, 5, 6, 0, 0, 0, 0, 1, 28, 15, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.120219}
{'[4, 5, 6, 0, 0, 0, 0, 1, 28, 15, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.108997}
{'[4, 5, 6, 0, 0, 0, 0, 1, 28, 15, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.105412}
{'[4, 5, 6, 0, 0, 0, 0, 1, 28, 15, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.105338}
{'[4, 5, 6, 0, 0, 0, 0, 1, 28, 15, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.105686}
{'[4, 5, 6, 0, 0, 0, 0, 1, 28, 15, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.105404}
{'[4, 5, 6, 0, 0, 0, 0, 1, 28, 15, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.105383}
{'[4, 5, 6, 0, 0, 0, 0, 1, 28, 15, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.105664}
{'[4, 5, 6, 0, 0, 0, 0, 1, 28, 15, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.105413}
{'[4, 5, 6, 0, 0, 0, 0, 1, 28, 15, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.105418}
{'[4, 5, 6, 0, 0, 0, 0, 1, 28, 15, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.105791}
{'[4, 5, 6, 0, 0, 0, 0, 1, 28, 15, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.106153}
{'[4, 5, 6, 0, 0, 0, 0, 1, 28, 15, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.105876}
{'[4, 5, 6, 0, 0, 0, 0, 1, 28, 15, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.105846}
{'[4, 5, 6, 0, 0, 0, 0, 1, 28, 15, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.105883}
{'[4, 5, 6, 0, 0, 0, 0, 1, 28, 15, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.106219}
{'[4, 5, 6, 0, 0, 0, 0, 1, 28, 15, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.105931}
{'[4, 5, 6, 0, 0, 0, 0, 1, 28, 15, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.105956}
{'[4, 5, 6, 0, 0, 0, 0, 1, 28, 15, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.105552}
{'[4, 5, 6, 0, 0, 0, 0, 1, 28, 15, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.105434}
{'[4, 5, 6, 0, 0, 0, 0, 1, 28, 15, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.105438}
{'[4, 5, 6, 0, 0, 0, 0, 1, 28, 15, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.105361}
{'[4, 5, 6, 0, 0, 0, 0, 1, 28, 15, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.105426}
{'[4, 5, 6, 0, 0, 0, 0, 1, 28, 15, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.105462}
{'[4, 5, 6, 0, 0, 0, 0, 1, 28, 15, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.105433}
{'[4, 5, 6, 0, 0, 0, 0, 1, 28, 15, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.105406}
{'[4, 5, 6, 0, 0, 0, 0, 1, 28, 15, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.105404}
{'[4, 5, 6, 0, 0, 0, 0, 1, 28, 15, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.105349}
{'[4, 5, 6, 0, 0, 0, 0, 1, 28, 15, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.105385}

out:
 ["{'[4, 5, 6, 0, 0, 0, 0, 1, 28, 15, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.12085}", "{'[4, 5, 6, 0, 0, 0, 0, 1, 28, 15, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.120219}", "{'[4, 5, 6, 0, 0, 0, 0, 1, 28, 15, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.108997}", "{'[4, 5, 6, 0, 0, 0, 0, 1, 28, 15, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.105412}", "{'[4, 5, 6, 0, 0, 0, 0, 1, 28, 15, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.105338}", "{'[4, 5, 6, 0, 0, 0, 0, 1, 28, 15, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.105686}", "{'[4, 5, 6, 0, 0, 0, 0, 1, 28, 15, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.105404}", "{'[4, 5, 6, 0, 0, 0, 0, 1, 28, 15, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.105383}", "{'[4, 5, 6, 0, 0, 0, 0, 1, 28, 15, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.105664}", "{'[4, 5, 6, 0, 0, 0, 0, 1, 28, 15, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.105413}", "{'[4, 5, 6, 0, 0, 0, 0, 1, 28, 15, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.105418}", "{'[4, 5, 6, 0, 0, 0, 0, 1, 28, 15, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.105791}", "{'[4, 5, 6, 0, 0, 0, 0, 1, 28, 15, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.106153}", "{'[4, 5, 6, 0, 0, 0, 0, 1, 28, 15, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.105876}", "{'[4, 5, 6, 0, 0, 0, 0, 1, 28, 15, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.105846}", "{'[4, 5, 6, 0, 0, 0, 0, 1, 28, 15, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.105883}", "{'[4, 5, 6, 0, 0, 0, 0, 1, 28, 15, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.106219}", "{'[4, 5, 6, 0, 0, 0, 0, 1, 28, 15, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.105931}", "{'[4, 5, 6, 0, 0, 0, 0, 1, 28, 15, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.105956}", "{'[4, 5, 6, 0, 0, 0, 0, 1, 28, 15, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.105552}", "{'[4, 5, 6, 0, 0, 0, 0, 1, 28, 15, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.105434}", "{'[4, 5, 6, 0, 0, 0, 0, 1, 28, 15, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.105438}", "{'[4, 5, 6, 0, 0, 0, 0, 1, 28, 15, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.105361}", "{'[4, 5, 6, 0, 0, 0, 0, 1, 28, 15, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.105426}", "{'[4, 5, 6, 0, 0, 0, 0, 1, 28, 15, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.105462}", "{'[4, 5, 6, 0, 0, 0, 0, 1, 28, 15, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.105433}", "{'[4, 5, 6, 0, 0, 0, 0, 1, 28, 15, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.105406}", "{'[4, 5, 6, 0, 0, 0, 0, 1, 28, 15, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.105404}", "{'[4, 5, 6, 0, 0, 0, 0, 1, 28, 15, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.105349}", "{'[4, 5, 6, 0, 0, 0, 0, 1, 28, 15, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.105385}"]
returning from 'run': {'[4, 5, 6, 0, 0, 0, 0, 1, 28, 15, 0, 0, 1, 0, 0, 1, 0, 1]': ([0.12085, 0.120219, 0.108997, 0.105412, 0.105338, 0.105686, 0.105404, 0.105383, 0.105664, 0.105413, 0.105418, 0.105791, 0.106153, 0.105876, 0.105846, 0.105883, 0.106219, 0.105931, 0.105956, 0.105552, 0.105434, 0.105438, 0.105361, 0.105426, 0.105462, 0.105433, 0.105406, 0.105404, 0.105349, 0.105385], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 5, 6, 0, 0, 0, 0, 1, 28, 15, 0, 0, 1, 0, 0, 1, 0, 1]': ([0.12085, 0.120219, 0.108997, 0.105412, 0.105338, 0.105686, 0.105404, 0.105383, 0.105664, 0.105413, 0.105418, 0.105791, 0.106153, 0.105876, 0.105846, 0.105883, 0.106219, 0.105931, 0.105956, 0.105552, 0.105434, 0.105438, 0.105361, 0.105426, 0.105462, 0.105433, 0.105406, 0.105404, 0.105349, 0.105385], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		575
        Multiplications: 	256
        Divisions: 		0
        Logical: 		0
        Reads: 			1156
        Writes: 		222
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest24.exe __orio_perftest24.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest24.exe  
Program Test Output: 
{'[0, 2, 2, 0, 3, 1, 0, 1, 28, 14, 13, 0, 1, 0, 0, 1, 0, 1]' : 0.118912}
{'[0, 2, 2, 0, 3, 1, 0, 1, 28, 14, 13, 0, 1, 0, 0, 1, 0, 1]' : 0.11889}
{'[0, 2, 2, 0, 3, 1, 0, 1, 28, 14, 13, 0, 1, 0, 0, 1, 0, 1]' : 0.110192}
{'[0, 2, 2, 0, 3, 1, 0, 1, 28, 14, 13, 0, 1, 0, 0, 1, 0, 1]' : 0.10053}
{'[0, 2, 2, 0, 3, 1, 0, 1, 28, 14, 13, 0, 1, 0, 0, 1, 0, 1]' : 0.100477}
{'[0, 2, 2, 0, 3, 1, 0, 1, 28, 14, 13, 0, 1, 0, 0, 1, 0, 1]' : 0.100459}
{'[0, 2, 2, 0, 3, 1, 0, 1, 28, 14, 13, 0, 1, 0, 0, 1, 0, 1]' : 0.100449}
{'[0, 2, 2, 0, 3, 1, 0, 1, 28, 14, 13, 0, 1, 0, 0, 1, 0, 1]' : 0.100494}
{'[0, 2, 2, 0, 3, 1, 0, 1, 28, 14, 13, 0, 1, 0, 0, 1, 0, 1]' : 0.100445}
{'[0, 2, 2, 0, 3, 1, 0, 1, 28, 14, 13, 0, 1, 0, 0, 1, 0, 1]' : 0.100547}
{'[0, 2, 2, 0, 3, 1, 0, 1, 28, 14, 13, 0, 1, 0, 0, 1, 0, 1]' : 0.100389}
{'[0, 2, 2, 0, 3, 1, 0, 1, 28, 14, 13, 0, 1, 0, 0, 1, 0, 1]' : 0.100505}
{'[0, 2, 2, 0, 3, 1, 0, 1, 28, 14, 13, 0, 1, 0, 0, 1, 0, 1]' : 0.100558}
{'[0, 2, 2, 0, 3, 1, 0, 1, 28, 14, 13, 0, 1, 0, 0, 1, 0, 1]' : 0.100637}
{'[0, 2, 2, 0, 3, 1, 0, 1, 28, 14, 13, 0, 1, 0, 0, 1, 0, 1]' : 0.100753}
{'[0, 2, 2, 0, 3, 1, 0, 1, 28, 14, 13, 0, 1, 0, 0, 1, 0, 1]' : 0.100526}
{'[0, 2, 2, 0, 3, 1, 0, 1, 28, 14, 13, 0, 1, 0, 0, 1, 0, 1]' : 0.100453}
{'[0, 2, 2, 0, 3, 1, 0, 1, 28, 14, 13, 0, 1, 0, 0, 1, 0, 1]' : 0.10047}
{'[0, 2, 2, 0, 3, 1, 0, 1, 28, 14, 13, 0, 1, 0, 0, 1, 0, 1]' : 0.100643}
{'[0, 2, 2, 0, 3, 1, 0, 1, 28, 14, 13, 0, 1, 0, 0, 1, 0, 1]' : 0.100504}
{'[0, 2, 2, 0, 3, 1, 0, 1, 28, 14, 13, 0, 1, 0, 0, 1, 0, 1]' : 0.100485}
{'[0, 2, 2, 0, 3, 1, 0, 1, 28, 14, 13, 0, 1, 0, 0, 1, 0, 1]' : 0.100511}
{'[0, 2, 2, 0, 3, 1, 0, 1, 28, 14, 13, 0, 1, 0, 0, 1, 0, 1]' : 0.100452}
{'[0, 2, 2, 0, 3, 1, 0, 1, 28, 14, 13, 0, 1, 0, 0, 1, 0, 1]' : 0.100463}
{'[0, 2, 2, 0, 3, 1, 0, 1, 28, 14, 13, 0, 1, 0, 0, 1, 0, 1]' : 0.100407}
{'[0, 2, 2, 0, 3, 1, 0, 1, 28, 14, 13, 0, 1, 0, 0, 1, 0, 1]' : 0.10046}
{'[0, 2, 2, 0, 3, 1, 0, 1, 28, 14, 13, 0, 1, 0, 0, 1, 0, 1]' : 0.100496}
{'[0, 2, 2, 0, 3, 1, 0, 1, 28, 14, 13, 0, 1, 0, 0, 1, 0, 1]' : 0.100567}
{'[0, 2, 2, 0, 3, 1, 0, 1, 28, 14, 13, 0, 1, 0, 0, 1, 0, 1]' : 0.100422}
{'[0, 2, 2, 0, 3, 1, 0, 1, 28, 14, 13, 0, 1, 0, 0, 1, 0, 1]' : 0.100511}

out:
 ["{'[0, 2, 2, 0, 3, 1, 0, 1, 28, 14, 13, 0, 1, 0, 0, 1, 0, 1]' : 0.118912}", "{'[0, 2, 2, 0, 3, 1, 0, 1, 28, 14, 13, 0, 1, 0, 0, 1, 0, 1]' : 0.11889}", "{'[0, 2, 2, 0, 3, 1, 0, 1, 28, 14, 13, 0, 1, 0, 0, 1, 0, 1]' : 0.110192}", "{'[0, 2, 2, 0, 3, 1, 0, 1, 28, 14, 13, 0, 1, 0, 0, 1, 0, 1]' : 0.10053}", "{'[0, 2, 2, 0, 3, 1, 0, 1, 28, 14, 13, 0, 1, 0, 0, 1, 0, 1]' : 0.100477}", "{'[0, 2, 2, 0, 3, 1, 0, 1, 28, 14, 13, 0, 1, 0, 0, 1, 0, 1]' : 0.100459}", "{'[0, 2, 2, 0, 3, 1, 0, 1, 28, 14, 13, 0, 1, 0, 0, 1, 0, 1]' : 0.100449}", "{'[0, 2, 2, 0, 3, 1, 0, 1, 28, 14, 13, 0, 1, 0, 0, 1, 0, 1]' : 0.100494}", "{'[0, 2, 2, 0, 3, 1, 0, 1, 28, 14, 13, 0, 1, 0, 0, 1, 0, 1]' : 0.100445}", "{'[0, 2, 2, 0, 3, 1, 0, 1, 28, 14, 13, 0, 1, 0, 0, 1, 0, 1]' : 0.100547}", "{'[0, 2, 2, 0, 3, 1, 0, 1, 28, 14, 13, 0, 1, 0, 0, 1, 0, 1]' : 0.100389}", "{'[0, 2, 2, 0, 3, 1, 0, 1, 28, 14, 13, 0, 1, 0, 0, 1, 0, 1]' : 0.100505}", "{'[0, 2, 2, 0, 3, 1, 0, 1, 28, 14, 13, 0, 1, 0, 0, 1, 0, 1]' : 0.100558}", "{'[0, 2, 2, 0, 3, 1, 0, 1, 28, 14, 13, 0, 1, 0, 0, 1, 0, 1]' : 0.100637}", "{'[0, 2, 2, 0, 3, 1, 0, 1, 28, 14, 13, 0, 1, 0, 0, 1, 0, 1]' : 0.100753}", "{'[0, 2, 2, 0, 3, 1, 0, 1, 28, 14, 13, 0, 1, 0, 0, 1, 0, 1]' : 0.100526}", "{'[0, 2, 2, 0, 3, 1, 0, 1, 28, 14, 13, 0, 1, 0, 0, 1, 0, 1]' : 0.100453}", "{'[0, 2, 2, 0, 3, 1, 0, 1, 28, 14, 13, 0, 1, 0, 0, 1, 0, 1]' : 0.10047}", "{'[0, 2, 2, 0, 3, 1, 0, 1, 28, 14, 13, 0, 1, 0, 0, 1, 0, 1]' : 0.100643}", "{'[0, 2, 2, 0, 3, 1, 0, 1, 28, 14, 13, 0, 1, 0, 0, 1, 0, 1]' : 0.100504}", "{'[0, 2, 2, 0, 3, 1, 0, 1, 28, 14, 13, 0, 1, 0, 0, 1, 0, 1]' : 0.100485}", "{'[0, 2, 2, 0, 3, 1, 0, 1, 28, 14, 13, 0, 1, 0, 0, 1, 0, 1]' : 0.100511}", "{'[0, 2, 2, 0, 3, 1, 0, 1, 28, 14, 13, 0, 1, 0, 0, 1, 0, 1]' : 0.100452}", "{'[0, 2, 2, 0, 3, 1, 0, 1, 28, 14, 13, 0, 1, 0, 0, 1, 0, 1]' : 0.100463}", "{'[0, 2, 2, 0, 3, 1, 0, 1, 28, 14, 13, 0, 1, 0, 0, 1, 0, 1]' : 0.100407}", "{'[0, 2, 2, 0, 3, 1, 0, 1, 28, 14, 13, 0, 1, 0, 0, 1, 0, 1]' : 0.10046}", "{'[0, 2, 2, 0, 3, 1, 0, 1, 28, 14, 13, 0, 1, 0, 0, 1, 0, 1]' : 0.100496}", "{'[0, 2, 2, 0, 3, 1, 0, 1, 28, 14, 13, 0, 1, 0, 0, 1, 0, 1]' : 0.100567}", "{'[0, 2, 2, 0, 3, 1, 0, 1, 28, 14, 13, 0, 1, 0, 0, 1, 0, 1]' : 0.100422}", "{'[0, 2, 2, 0, 3, 1, 0, 1, 28, 14, 13, 0, 1, 0, 0, 1, 0, 1]' : 0.100511}"]
returning from 'run': {'[0, 2, 2, 0, 3, 1, 0, 1, 28, 14, 13, 0, 1, 0, 0, 1, 0, 1]': ([0.118912, 0.11889, 0.110192, 0.10053, 0.100477, 0.100459, 0.100449, 0.100494, 0.100445, 0.100547, 0.100389, 0.100505, 0.100558, 0.100637, 0.100753, 0.100526, 0.100453, 0.10047, 0.100643, 0.100504, 0.100485, 0.100511, 0.100452, 0.100463, 0.100407, 0.10046, 0.100496, 0.100567, 0.100422, 0.100511], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 2, 0, 3, 1, 0, 1, 28, 14, 13, 0, 1, 0, 0, 1, 0, 1]': ([0.118912, 0.11889, 0.110192, 0.10053, 0.100477, 0.100459, 0.100449, 0.100494, 0.100445, 0.100547, 0.100389, 0.100505, 0.100558, 0.100637, 0.100753, 0.100526, 0.100453, 0.10047, 0.100643, 0.100504, 0.100485, 0.100511, 0.100452, 0.100463, 0.100407, 0.10046, 0.100496, 0.100567, 0.100422, 0.100511], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		378
        Multiplications: 	110
        Divisions: 		0
        Logical: 		0
        Reads: 			772
        Writes: 		105
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest25.exe __orio_perftest25.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest25.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest25.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest25.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest25.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	171
        Max loop nest depth: 	6
        Additions: 		10674
        Multiplications: 	2480
        Divisions: 		0
        Logical: 		0
        Reads: 			15788
        Writes: 		1736
        Comparisons:		171
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest26.exe __orio_perftest26.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest26.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest26.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest26.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest26.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	30
        Max loop nest depth: 	5
        Additions: 		785
        Multiplications: 	252
        Divisions: 		0
        Logical: 		0
        Reads: 			1622
        Writes: 		310
        Comparisons:		30
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest27.exe __orio_perftest27.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest27.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest27.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest27.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest27.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	6
        Additions: 		221
        Multiplications: 	68
        Divisions: 		0
        Logical: 		0
        Reads: 			511
        Writes: 		87
        Comparisons:		15
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest28.exe __orio_perftest28.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest28.exe  
Program Test Output: 
{'[2, 2, 1, 4, 1, 6, 0, 1, 9, 0, 25, 5, 0, 0, 0, 0, 1, 1]' : 0.332517}
{'[2, 2, 1, 4, 1, 6, 0, 1, 9, 0, 25, 5, 0, 0, 0, 0, 1, 1]' : 0.306546}
{'[2, 2, 1, 4, 1, 6, 0, 1, 9, 0, 25, 5, 0, 0, 0, 0, 1, 1]' : 0.294685}
{'[2, 2, 1, 4, 1, 6, 0, 1, 9, 0, 25, 5, 0, 0, 0, 0, 1, 1]' : 0.285564}
{'[2, 2, 1, 4, 1, 6, 0, 1, 9, 0, 25, 5, 0, 0, 0, 0, 1, 1]' : 0.276727}
{'[2, 2, 1, 4, 1, 6, 0, 1, 9, 0, 25, 5, 0, 0, 0, 0, 1, 1]' : 0.292233}
{'[2, 2, 1, 4, 1, 6, 0, 1, 9, 0, 25, 5, 0, 0, 0, 0, 1, 1]' : 0.289826}
{'[2, 2, 1, 4, 1, 6, 0, 1, 9, 0, 25, 5, 0, 0, 0, 0, 1, 1]' : 0.27669}
{'[2, 2, 1, 4, 1, 6, 0, 1, 9, 0, 25, 5, 0, 0, 0, 0, 1, 1]' : 0.288993}
{'[2, 2, 1, 4, 1, 6, 0, 1, 9, 0, 25, 5, 0, 0, 0, 0, 1, 1]' : 0.294782}
{'[2, 2, 1, 4, 1, 6, 0, 1, 9, 0, 25, 5, 0, 0, 0, 0, 1, 1]' : 0.294886}
{'[2, 2, 1, 4, 1, 6, 0, 1, 9, 0, 25, 5, 0, 0, 0, 0, 1, 1]' : 0.292898}
{'[2, 2, 1, 4, 1, 6, 0, 1, 9, 0, 25, 5, 0, 0, 0, 0, 1, 1]' : 0.289467}
{'[2, 2, 1, 4, 1, 6, 0, 1, 9, 0, 25, 5, 0, 0, 0, 0, 1, 1]' : 0.282362}
{'[2, 2, 1, 4, 1, 6, 0, 1, 9, 0, 25, 5, 0, 0, 0, 0, 1, 1]' : 0.277911}
{'[2, 2, 1, 4, 1, 6, 0, 1, 9, 0, 25, 5, 0, 0, 0, 0, 1, 1]' : 0.28064}
{'[2, 2, 1, 4, 1, 6, 0, 1, 9, 0, 25, 5, 0, 0, 0, 0, 1, 1]' : 0.285946}
{'[2, 2, 1, 4, 1, 6, 0, 1, 9, 0, 25, 5, 0, 0, 0, 0, 1, 1]' : 0.291912}
{'[2, 2, 1, 4, 1, 6, 0, 1, 9, 0, 25, 5, 0, 0, 0, 0, 1, 1]' : 0.290575}
{'[2, 2, 1, 4, 1, 6, 0, 1, 9, 0, 25, 5, 0, 0, 0, 0, 1, 1]' : 0.294585}
{'[2, 2, 1, 4, 1, 6, 0, 1, 9, 0, 25, 5, 0, 0, 0, 0, 1, 1]' : 0.2908}
{'[2, 2, 1, 4, 1, 6, 0, 1, 9, 0, 25, 5, 0, 0, 0, 0, 1, 1]' : 0.294284}
{'[2, 2, 1, 4, 1, 6, 0, 1, 9, 0, 25, 5, 0, 0, 0, 0, 1, 1]' : 0.290803}
{'[2, 2, 1, 4, 1, 6, 0, 1, 9, 0, 25, 5, 0, 0, 0, 0, 1, 1]' : 0.2948}
{'[2, 2, 1, 4, 1, 6, 0, 1, 9, 0, 25, 5, 0, 0, 0, 0, 1, 1]' : 0.294762}
{'[2, 2, 1, 4, 1, 6, 0, 1, 9, 0, 25, 5, 0, 0, 0, 0, 1, 1]' : 0.289253}
{'[2, 2, 1, 4, 1, 6, 0, 1, 9, 0, 25, 5, 0, 0, 0, 0, 1, 1]' : 0.294938}
{'[2, 2, 1, 4, 1, 6, 0, 1, 9, 0, 25, 5, 0, 0, 0, 0, 1, 1]' : 0.294802}
{'[2, 2, 1, 4, 1, 6, 0, 1, 9, 0, 25, 5, 0, 0, 0, 0, 1, 1]' : 0.29483}
{'[2, 2, 1, 4, 1, 6, 0, 1, 9, 0, 25, 5, 0, 0, 0, 0, 1, 1]' : 0.294956}

out:
 ["{'[2, 2, 1, 4, 1, 6, 0, 1, 9, 0, 25, 5, 0, 0, 0, 0, 1, 1]' : 0.332517}", "{'[2, 2, 1, 4, 1, 6, 0, 1, 9, 0, 25, 5, 0, 0, 0, 0, 1, 1]' : 0.306546}", "{'[2, 2, 1, 4, 1, 6, 0, 1, 9, 0, 25, 5, 0, 0, 0, 0, 1, 1]' : 0.294685}", "{'[2, 2, 1, 4, 1, 6, 0, 1, 9, 0, 25, 5, 0, 0, 0, 0, 1, 1]' : 0.285564}", "{'[2, 2, 1, 4, 1, 6, 0, 1, 9, 0, 25, 5, 0, 0, 0, 0, 1, 1]' : 0.276727}", "{'[2, 2, 1, 4, 1, 6, 0, 1, 9, 0, 25, 5, 0, 0, 0, 0, 1, 1]' : 0.292233}", "{'[2, 2, 1, 4, 1, 6, 0, 1, 9, 0, 25, 5, 0, 0, 0, 0, 1, 1]' : 0.289826}", "{'[2, 2, 1, 4, 1, 6, 0, 1, 9, 0, 25, 5, 0, 0, 0, 0, 1, 1]' : 0.27669}", "{'[2, 2, 1, 4, 1, 6, 0, 1, 9, 0, 25, 5, 0, 0, 0, 0, 1, 1]' : 0.288993}", "{'[2, 2, 1, 4, 1, 6, 0, 1, 9, 0, 25, 5, 0, 0, 0, 0, 1, 1]' : 0.294782}", "{'[2, 2, 1, 4, 1, 6, 0, 1, 9, 0, 25, 5, 0, 0, 0, 0, 1, 1]' : 0.294886}", "{'[2, 2, 1, 4, 1, 6, 0, 1, 9, 0, 25, 5, 0, 0, 0, 0, 1, 1]' : 0.292898}", "{'[2, 2, 1, 4, 1, 6, 0, 1, 9, 0, 25, 5, 0, 0, 0, 0, 1, 1]' : 0.289467}", "{'[2, 2, 1, 4, 1, 6, 0, 1, 9, 0, 25, 5, 0, 0, 0, 0, 1, 1]' : 0.282362}", "{'[2, 2, 1, 4, 1, 6, 0, 1, 9, 0, 25, 5, 0, 0, 0, 0, 1, 1]' : 0.277911}", "{'[2, 2, 1, 4, 1, 6, 0, 1, 9, 0, 25, 5, 0, 0, 0, 0, 1, 1]' : 0.28064}", "{'[2, 2, 1, 4, 1, 6, 0, 1, 9, 0, 25, 5, 0, 0, 0, 0, 1, 1]' : 0.285946}", "{'[2, 2, 1, 4, 1, 6, 0, 1, 9, 0, 25, 5, 0, 0, 0, 0, 1, 1]' : 0.291912}", "{'[2, 2, 1, 4, 1, 6, 0, 1, 9, 0, 25, 5, 0, 0, 0, 0, 1, 1]' : 0.290575}", "{'[2, 2, 1, 4, 1, 6, 0, 1, 9, 0, 25, 5, 0, 0, 0, 0, 1, 1]' : 0.294585}", "{'[2, 2, 1, 4, 1, 6, 0, 1, 9, 0, 25, 5, 0, 0, 0, 0, 1, 1]' : 0.2908}", "{'[2, 2, 1, 4, 1, 6, 0, 1, 9, 0, 25, 5, 0, 0, 0, 0, 1, 1]' : 0.294284}", "{'[2, 2, 1, 4, 1, 6, 0, 1, 9, 0, 25, 5, 0, 0, 0, 0, 1, 1]' : 0.290803}", "{'[2, 2, 1, 4, 1, 6, 0, 1, 9, 0, 25, 5, 0, 0, 0, 0, 1, 1]' : 0.2948}", "{'[2, 2, 1, 4, 1, 6, 0, 1, 9, 0, 25, 5, 0, 0, 0, 0, 1, 1]' : 0.294762}", "{'[2, 2, 1, 4, 1, 6, 0, 1, 9, 0, 25, 5, 0, 0, 0, 0, 1, 1]' : 0.289253}", "{'[2, 2, 1, 4, 1, 6, 0, 1, 9, 0, 25, 5, 0, 0, 0, 0, 1, 1]' : 0.294938}", "{'[2, 2, 1, 4, 1, 6, 0, 1, 9, 0, 25, 5, 0, 0, 0, 0, 1, 1]' : 0.294802}", "{'[2, 2, 1, 4, 1, 6, 0, 1, 9, 0, 25, 5, 0, 0, 0, 0, 1, 1]' : 0.29483}", "{'[2, 2, 1, 4, 1, 6, 0, 1, 9, 0, 25, 5, 0, 0, 0, 0, 1, 1]' : 0.294956}"]
returning from 'run': {'[2, 2, 1, 4, 1, 6, 0, 1, 9, 0, 25, 5, 0, 0, 0, 0, 1, 1]': ([0.332517, 0.306546, 0.294685, 0.285564, 0.276727, 0.292233, 0.289826, 0.27669, 0.288993, 0.294782, 0.294886, 0.292898, 0.289467, 0.282362, 0.277911, 0.28064, 0.285946, 0.291912, 0.290575, 0.294585, 0.2908, 0.294284, 0.290803, 0.2948, 0.294762, 0.289253, 0.294938, 0.294802, 0.29483, 0.294956], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 2, 1, 4, 1, 6, 0, 1, 9, 0, 25, 5, 0, 0, 0, 0, 1, 1]': ([0.332517, 0.306546, 0.294685, 0.285564, 0.276727, 0.292233, 0.289826, 0.27669, 0.288993, 0.294782, 0.294886, 0.292898, 0.289467, 0.282362, 0.277911, 0.28064, 0.285946, 0.291912, 0.290575, 0.294585, 0.2908, 0.294284, 0.290803, 0.2948, 0.294762, 0.289253, 0.294938, 0.294802, 0.29483, 0.294956], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	120
        Max loop nest depth: 	5
        Additions: 		8962
        Multiplications: 	2964
        Divisions: 		0
        Logical: 		0
        Reads: 			17149
        Writes: 		3220
        Comparisons:		120
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest29.exe __orio_perftest29.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest29.exe  
Program Test Output: 
{'[2, 0, 0, 4, 4, 6, 0, 1, 2, 23, 0, 23, 2, 0, 0, 1, 0, 0]' : 0.176398}
{'[2, 0, 0, 4, 4, 6, 0, 1, 2, 23, 0, 23, 2, 0, 0, 1, 0, 0]' : 0.177814}
{'[2, 0, 0, 4, 4, 6, 0, 1, 2, 23, 0, 23, 2, 0, 0, 1, 0, 0]' : 0.178782}
{'[2, 0, 0, 4, 4, 6, 0, 1, 2, 23, 0, 23, 2, 0, 0, 1, 0, 0]' : 0.177842}
{'[2, 0, 0, 4, 4, 6, 0, 1, 2, 23, 0, 23, 2, 0, 0, 1, 0, 0]' : 0.178113}
{'[2, 0, 0, 4, 4, 6, 0, 1, 2, 23, 0, 23, 2, 0, 0, 1, 0, 0]' : 0.178936}
{'[2, 0, 0, 4, 4, 6, 0, 1, 2, 23, 0, 23, 2, 0, 0, 1, 0, 0]' : 0.179569}
{'[2, 0, 0, 4, 4, 6, 0, 1, 2, 23, 0, 23, 2, 0, 0, 1, 0, 0]' : 0.179879}
{'[2, 0, 0, 4, 4, 6, 0, 1, 2, 23, 0, 23, 2, 0, 0, 1, 0, 0]' : 0.179152}
{'[2, 0, 0, 4, 4, 6, 0, 1, 2, 23, 0, 23, 2, 0, 0, 1, 0, 0]' : 0.176604}
{'[2, 0, 0, 4, 4, 6, 0, 1, 2, 23, 0, 23, 2, 0, 0, 1, 0, 0]' : 0.179293}
{'[2, 0, 0, 4, 4, 6, 0, 1, 2, 23, 0, 23, 2, 0, 0, 1, 0, 0]' : 0.179071}
{'[2, 0, 0, 4, 4, 6, 0, 1, 2, 23, 0, 23, 2, 0, 0, 1, 0, 0]' : 0.176676}
{'[2, 0, 0, 4, 4, 6, 0, 1, 2, 23, 0, 23, 2, 0, 0, 1, 0, 0]' : 0.175759}
{'[2, 0, 0, 4, 4, 6, 0, 1, 2, 23, 0, 23, 2, 0, 0, 1, 0, 0]' : 0.17583}
{'[2, 0, 0, 4, 4, 6, 0, 1, 2, 23, 0, 23, 2, 0, 0, 1, 0, 0]' : 0.17729}
{'[2, 0, 0, 4, 4, 6, 0, 1, 2, 23, 0, 23, 2, 0, 0, 1, 0, 0]' : 0.17883}
{'[2, 0, 0, 4, 4, 6, 0, 1, 2, 23, 0, 23, 2, 0, 0, 1, 0, 0]' : 0.179567}
{'[2, 0, 0, 4, 4, 6, 0, 1, 2, 23, 0, 23, 2, 0, 0, 1, 0, 0]' : 0.180452}
{'[2, 0, 0, 4, 4, 6, 0, 1, 2, 23, 0, 23, 2, 0, 0, 1, 0, 0]' : 0.179255}
{'[2, 0, 0, 4, 4, 6, 0, 1, 2, 23, 0, 23, 2, 0, 0, 1, 0, 0]' : 0.178082}
{'[2, 0, 0, 4, 4, 6, 0, 1, 2, 23, 0, 23, 2, 0, 0, 1, 0, 0]' : 0.178769}
{'[2, 0, 0, 4, 4, 6, 0, 1, 2, 23, 0, 23, 2, 0, 0, 1, 0, 0]' : 0.178189}
{'[2, 0, 0, 4, 4, 6, 0, 1, 2, 23, 0, 23, 2, 0, 0, 1, 0, 0]' : 0.175772}
{'[2, 0, 0, 4, 4, 6, 0, 1, 2, 23, 0, 23, 2, 0, 0, 1, 0, 0]' : 0.176261}
{'[2, 0, 0, 4, 4, 6, 0, 1, 2, 23, 0, 23, 2, 0, 0, 1, 0, 0]' : 0.175746}
{'[2, 0, 0, 4, 4, 6, 0, 1, 2, 23, 0, 23, 2, 0, 0, 1, 0, 0]' : 0.175978}
{'[2, 0, 0, 4, 4, 6, 0, 1, 2, 23, 0, 23, 2, 0, 0, 1, 0, 0]' : 0.178324}
{'[2, 0, 0, 4, 4, 6, 0, 1, 2, 23, 0, 23, 2, 0, 0, 1, 0, 0]' : 0.179357}
{'[2, 0, 0, 4, 4, 6, 0, 1, 2, 23, 0, 23, 2, 0, 0, 1, 0, 0]' : 0.176286}

out:
 ["{'[2, 0, 0, 4, 4, 6, 0, 1, 2, 23, 0, 23, 2, 0, 0, 1, 0, 0]' : 0.176398}", "{'[2, 0, 0, 4, 4, 6, 0, 1, 2, 23, 0, 23, 2, 0, 0, 1, 0, 0]' : 0.177814}", "{'[2, 0, 0, 4, 4, 6, 0, 1, 2, 23, 0, 23, 2, 0, 0, 1, 0, 0]' : 0.178782}", "{'[2, 0, 0, 4, 4, 6, 0, 1, 2, 23, 0, 23, 2, 0, 0, 1, 0, 0]' : 0.177842}", "{'[2, 0, 0, 4, 4, 6, 0, 1, 2, 23, 0, 23, 2, 0, 0, 1, 0, 0]' : 0.178113}", "{'[2, 0, 0, 4, 4, 6, 0, 1, 2, 23, 0, 23, 2, 0, 0, 1, 0, 0]' : 0.178936}", "{'[2, 0, 0, 4, 4, 6, 0, 1, 2, 23, 0, 23, 2, 0, 0, 1, 0, 0]' : 0.179569}", "{'[2, 0, 0, 4, 4, 6, 0, 1, 2, 23, 0, 23, 2, 0, 0, 1, 0, 0]' : 0.179879}", "{'[2, 0, 0, 4, 4, 6, 0, 1, 2, 23, 0, 23, 2, 0, 0, 1, 0, 0]' : 0.179152}", "{'[2, 0, 0, 4, 4, 6, 0, 1, 2, 23, 0, 23, 2, 0, 0, 1, 0, 0]' : 0.176604}", "{'[2, 0, 0, 4, 4, 6, 0, 1, 2, 23, 0, 23, 2, 0, 0, 1, 0, 0]' : 0.179293}", "{'[2, 0, 0, 4, 4, 6, 0, 1, 2, 23, 0, 23, 2, 0, 0, 1, 0, 0]' : 0.179071}", "{'[2, 0, 0, 4, 4, 6, 0, 1, 2, 23, 0, 23, 2, 0, 0, 1, 0, 0]' : 0.176676}", "{'[2, 0, 0, 4, 4, 6, 0, 1, 2, 23, 0, 23, 2, 0, 0, 1, 0, 0]' : 0.175759}", "{'[2, 0, 0, 4, 4, 6, 0, 1, 2, 23, 0, 23, 2, 0, 0, 1, 0, 0]' : 0.17583}", "{'[2, 0, 0, 4, 4, 6, 0, 1, 2, 23, 0, 23, 2, 0, 0, 1, 0, 0]' : 0.17729}", "{'[2, 0, 0, 4, 4, 6, 0, 1, 2, 23, 0, 23, 2, 0, 0, 1, 0, 0]' : 0.17883}", "{'[2, 0, 0, 4, 4, 6, 0, 1, 2, 23, 0, 23, 2, 0, 0, 1, 0, 0]' : 0.179567}", "{'[2, 0, 0, 4, 4, 6, 0, 1, 2, 23, 0, 23, 2, 0, 0, 1, 0, 0]' : 0.180452}", "{'[2, 0, 0, 4, 4, 6, 0, 1, 2, 23, 0, 23, 2, 0, 0, 1, 0, 0]' : 0.179255}", "{'[2, 0, 0, 4, 4, 6, 0, 1, 2, 23, 0, 23, 2, 0, 0, 1, 0, 0]' : 0.178082}", "{'[2, 0, 0, 4, 4, 6, 0, 1, 2, 23, 0, 23, 2, 0, 0, 1, 0, 0]' : 0.178769}", "{'[2, 0, 0, 4, 4, 6, 0, 1, 2, 23, 0, 23, 2, 0, 0, 1, 0, 0]' : 0.178189}", "{'[2, 0, 0, 4, 4, 6, 0, 1, 2, 23, 0, 23, 2, 0, 0, 1, 0, 0]' : 0.175772}", "{'[2, 0, 0, 4, 4, 6, 0, 1, 2, 23, 0, 23, 2, 0, 0, 1, 0, 0]' : 0.176261}", "{'[2, 0, 0, 4, 4, 6, 0, 1, 2, 23, 0, 23, 2, 0, 0, 1, 0, 0]' : 0.175746}", "{'[2, 0, 0, 4, 4, 6, 0, 1, 2, 23, 0, 23, 2, 0, 0, 1, 0, 0]' : 0.175978}", "{'[2, 0, 0, 4, 4, 6, 0, 1, 2, 23, 0, 23, 2, 0, 0, 1, 0, 0]' : 0.178324}", "{'[2, 0, 0, 4, 4, 6, 0, 1, 2, 23, 0, 23, 2, 0, 0, 1, 0, 0]' : 0.179357}", "{'[2, 0, 0, 4, 4, 6, 0, 1, 2, 23, 0, 23, 2, 0, 0, 1, 0, 0]' : 0.176286}"]
returning from 'run': {'[2, 0, 0, 4, 4, 6, 0, 1, 2, 23, 0, 23, 2, 0, 0, 1, 0, 0]': ([0.176398, 0.177814, 0.178782, 0.177842, 0.178113, 0.178936, 0.179569, 0.179879, 0.179152, 0.176604, 0.179293, 0.179071, 0.176676, 0.175759, 0.17583, 0.17729, 0.17883, 0.179567, 0.180452, 0.179255, 0.178082, 0.178769, 0.178189, 0.175772, 0.176261, 0.175746, 0.175978, 0.178324, 0.179357, 0.176286], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 0, 0, 4, 4, 6, 0, 1, 2, 23, 0, 23, 2, 0, 0, 1, 0, 0]': ([0.176398, 0.177814, 0.178782, 0.177842, 0.178113, 0.178936, 0.179569, 0.179879, 0.179152, 0.176604, 0.179293, 0.179071, 0.176676, 0.175759, 0.17583, 0.17729, 0.17883, 0.179567, 0.180452, 0.179255, 0.178082, 0.178769, 0.178189, 0.175772, 0.176261, 0.175746, 0.175978, 0.178324, 0.179357, 0.176286], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	41
        Max loop nest depth: 	4
        Additions: 		6007
        Multiplications: 	1770
        Divisions: 		0
        Logical: 		0
        Reads: 			9331
        Writes: 		1038
        Comparisons:		41
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest30.exe __orio_perftest30.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest30.exe  
Program Test Output: 
{'[0, 3, 0, 4, 0, 0, 0, 0, 5, 13, 24, 0, 0, 2, 0, 0, 0, 1]' : 0.157879}
{'[0, 3, 0, 4, 0, 0, 0, 0, 5, 13, 24, 0, 0, 2, 0, 0, 0, 1]' : 0.157674}
{'[0, 3, 0, 4, 0, 0, 0, 0, 5, 13, 24, 0, 0, 2, 0, 0, 0, 1]' : 0.157762}
{'[0, 3, 0, 4, 0, 0, 0, 0, 5, 13, 24, 0, 0, 2, 0, 0, 0, 1]' : 0.149384}
{'[0, 3, 0, 4, 0, 0, 0, 0, 5, 13, 24, 0, 0, 2, 0, 0, 0, 1]' : 0.13771}
{'[0, 3, 0, 4, 0, 0, 0, 0, 5, 13, 24, 0, 0, 2, 0, 0, 0, 1]' : 0.135796}
{'[0, 3, 0, 4, 0, 0, 0, 0, 5, 13, 24, 0, 0, 2, 0, 0, 0, 1]' : 0.134982}
{'[0, 3, 0, 4, 0, 0, 0, 0, 5, 13, 24, 0, 0, 2, 0, 0, 0, 1]' : 0.137966}
{'[0, 3, 0, 4, 0, 0, 0, 0, 5, 13, 24, 0, 0, 2, 0, 0, 0, 1]' : 0.138703}
{'[0, 3, 0, 4, 0, 0, 0, 0, 5, 13, 24, 0, 0, 2, 0, 0, 0, 1]' : 0.137949}
{'[0, 3, 0, 4, 0, 0, 0, 0, 5, 13, 24, 0, 0, 2, 0, 0, 0, 1]' : 0.136969}
{'[0, 3, 0, 4, 0, 0, 0, 0, 5, 13, 24, 0, 0, 2, 0, 0, 0, 1]' : 0.138745}
{'[0, 3, 0, 4, 0, 0, 0, 0, 5, 13, 24, 0, 0, 2, 0, 0, 0, 1]' : 0.141419}
{'[0, 3, 0, 4, 0, 0, 0, 0, 5, 13, 24, 0, 0, 2, 0, 0, 0, 1]' : 0.137111}
{'[0, 3, 0, 4, 0, 0, 0, 0, 5, 13, 24, 0, 0, 2, 0, 0, 0, 1]' : 0.135878}
{'[0, 3, 0, 4, 0, 0, 0, 0, 5, 13, 24, 0, 0, 2, 0, 0, 0, 1]' : 0.134782}
{'[0, 3, 0, 4, 0, 0, 0, 0, 5, 13, 24, 0, 0, 2, 0, 0, 0, 1]' : 0.135052}
{'[0, 3, 0, 4, 0, 0, 0, 0, 5, 13, 24, 0, 0, 2, 0, 0, 0, 1]' : 0.136029}
{'[0, 3, 0, 4, 0, 0, 0, 0, 5, 13, 24, 0, 0, 2, 0, 0, 0, 1]' : 0.138663}
{'[0, 3, 0, 4, 0, 0, 0, 0, 5, 13, 24, 0, 0, 2, 0, 0, 0, 1]' : 0.141095}
{'[0, 3, 0, 4, 0, 0, 0, 0, 5, 13, 24, 0, 0, 2, 0, 0, 0, 1]' : 0.13812}
{'[0, 3, 0, 4, 0, 0, 0, 0, 5, 13, 24, 0, 0, 2, 0, 0, 0, 1]' : 0.135658}
{'[0, 3, 0, 4, 0, 0, 0, 0, 5, 13, 24, 0, 0, 2, 0, 0, 0, 1]' : 0.134747}
{'[0, 3, 0, 4, 0, 0, 0, 0, 5, 13, 24, 0, 0, 2, 0, 0, 0, 1]' : 0.13459}
{'[0, 3, 0, 4, 0, 0, 0, 0, 5, 13, 24, 0, 0, 2, 0, 0, 0, 1]' : 0.134548}
{'[0, 3, 0, 4, 0, 0, 0, 0, 5, 13, 24, 0, 0, 2, 0, 0, 0, 1]' : 0.138731}
{'[0, 3, 0, 4, 0, 0, 0, 0, 5, 13, 24, 0, 0, 2, 0, 0, 0, 1]' : 0.138726}
{'[0, 3, 0, 4, 0, 0, 0, 0, 5, 13, 24, 0, 0, 2, 0, 0, 0, 1]' : 0.138977}
{'[0, 3, 0, 4, 0, 0, 0, 0, 5, 13, 24, 0, 0, 2, 0, 0, 0, 1]' : 0.13894}
{'[0, 3, 0, 4, 0, 0, 0, 0, 5, 13, 24, 0, 0, 2, 0, 0, 0, 1]' : 0.138544}

out:
 ["{'[0, 3, 0, 4, 0, 0, 0, 0, 5, 13, 24, 0, 0, 2, 0, 0, 0, 1]' : 0.157879}", "{'[0, 3, 0, 4, 0, 0, 0, 0, 5, 13, 24, 0, 0, 2, 0, 0, 0, 1]' : 0.157674}", "{'[0, 3, 0, 4, 0, 0, 0, 0, 5, 13, 24, 0, 0, 2, 0, 0, 0, 1]' : 0.157762}", "{'[0, 3, 0, 4, 0, 0, 0, 0, 5, 13, 24, 0, 0, 2, 0, 0, 0, 1]' : 0.149384}", "{'[0, 3, 0, 4, 0, 0, 0, 0, 5, 13, 24, 0, 0, 2, 0, 0, 0, 1]' : 0.13771}", "{'[0, 3, 0, 4, 0, 0, 0, 0, 5, 13, 24, 0, 0, 2, 0, 0, 0, 1]' : 0.135796}", "{'[0, 3, 0, 4, 0, 0, 0, 0, 5, 13, 24, 0, 0, 2, 0, 0, 0, 1]' : 0.134982}", "{'[0, 3, 0, 4, 0, 0, 0, 0, 5, 13, 24, 0, 0, 2, 0, 0, 0, 1]' : 0.137966}", "{'[0, 3, 0, 4, 0, 0, 0, 0, 5, 13, 24, 0, 0, 2, 0, 0, 0, 1]' : 0.138703}", "{'[0, 3, 0, 4, 0, 0, 0, 0, 5, 13, 24, 0, 0, 2, 0, 0, 0, 1]' : 0.137949}", "{'[0, 3, 0, 4, 0, 0, 0, 0, 5, 13, 24, 0, 0, 2, 0, 0, 0, 1]' : 0.136969}", "{'[0, 3, 0, 4, 0, 0, 0, 0, 5, 13, 24, 0, 0, 2, 0, 0, 0, 1]' : 0.138745}", "{'[0, 3, 0, 4, 0, 0, 0, 0, 5, 13, 24, 0, 0, 2, 0, 0, 0, 1]' : 0.141419}", "{'[0, 3, 0, 4, 0, 0, 0, 0, 5, 13, 24, 0, 0, 2, 0, 0, 0, 1]' : 0.137111}", "{'[0, 3, 0, 4, 0, 0, 0, 0, 5, 13, 24, 0, 0, 2, 0, 0, 0, 1]' : 0.135878}", "{'[0, 3, 0, 4, 0, 0, 0, 0, 5, 13, 24, 0, 0, 2, 0, 0, 0, 1]' : 0.134782}", "{'[0, 3, 0, 4, 0, 0, 0, 0, 5, 13, 24, 0, 0, 2, 0, 0, 0, 1]' : 0.135052}", "{'[0, 3, 0, 4, 0, 0, 0, 0, 5, 13, 24, 0, 0, 2, 0, 0, 0, 1]' : 0.136029}", "{'[0, 3, 0, 4, 0, 0, 0, 0, 5, 13, 24, 0, 0, 2, 0, 0, 0, 1]' : 0.138663}", "{'[0, 3, 0, 4, 0, 0, 0, 0, 5, 13, 24, 0, 0, 2, 0, 0, 0, 1]' : 0.141095}", "{'[0, 3, 0, 4, 0, 0, 0, 0, 5, 13, 24, 0, 0, 2, 0, 0, 0, 1]' : 0.13812}", "{'[0, 3, 0, 4, 0, 0, 0, 0, 5, 13, 24, 0, 0, 2, 0, 0, 0, 1]' : 0.135658}", "{'[0, 3, 0, 4, 0, 0, 0, 0, 5, 13, 24, 0, 0, 2, 0, 0, 0, 1]' : 0.134747}", "{'[0, 3, 0, 4, 0, 0, 0, 0, 5, 13, 24, 0, 0, 2, 0, 0, 0, 1]' : 0.13459}", "{'[0, 3, 0, 4, 0, 0, 0, 0, 5, 13, 24, 0, 0, 2, 0, 0, 0, 1]' : 0.134548}", "{'[0, 3, 0, 4, 0, 0, 0, 0, 5, 13, 24, 0, 0, 2, 0, 0, 0, 1]' : 0.138731}", "{'[0, 3, 0, 4, 0, 0, 0, 0, 5, 13, 24, 0, 0, 2, 0, 0, 0, 1]' : 0.138726}", "{'[0, 3, 0, 4, 0, 0, 0, 0, 5, 13, 24, 0, 0, 2, 0, 0, 0, 1]' : 0.138977}", "{'[0, 3, 0, 4, 0, 0, 0, 0, 5, 13, 24, 0, 0, 2, 0, 0, 0, 1]' : 0.13894}", "{'[0, 3, 0, 4, 0, 0, 0, 0, 5, 13, 24, 0, 0, 2, 0, 0, 0, 1]' : 0.138544}"]
returning from 'run': {'[0, 3, 0, 4, 0, 0, 0, 0, 5, 13, 24, 0, 0, 2, 0, 0, 0, 1]': ([0.157879, 0.157674, 0.157762, 0.149384, 0.13771, 0.135796, 0.134982, 0.137966, 0.138703, 0.137949, 0.136969, 0.138745, 0.141419, 0.137111, 0.135878, 0.134782, 0.135052, 0.136029, 0.138663, 0.141095, 0.13812, 0.135658, 0.134747, 0.13459, 0.134548, 0.138731, 0.138726, 0.138977, 0.13894, 0.138544], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 3, 0, 4, 0, 0, 0, 0, 5, 13, 24, 0, 0, 2, 0, 0, 0, 1]': ([0.157879, 0.157674, 0.157762, 0.149384, 0.13771, 0.135796, 0.134982, 0.137966, 0.138703, 0.137949, 0.136969, 0.138745, 0.141419, 0.137111, 0.135878, 0.134782, 0.135052, 0.136029, 0.138663, 0.141095, 0.13812, 0.135658, 0.134747, 0.13459, 0.134548, 0.138731, 0.138726, 0.138977, 0.13894, 0.138544], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = iii
Code stats:
        Number of loops: 	50
        Max loop nest depth: 	5
        Additions: 		1609
        Multiplications: 	702
        Divisions: 		0
        Logical: 		0
        Reads: 			3329
        Writes: 		620
        Comparisons:		50
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest31.exe __orio_perftest31.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest31.exe  
Program Test Output: 
{'[4, 3, 0, 2, 6, 0, 1, 1, 3, 29, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.0886431}
{'[4, 3, 0, 2, 6, 0, 1, 1, 3, 29, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.088187}
{'[4, 3, 0, 2, 6, 0, 1, 1, 3, 29, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.088068}
{'[4, 3, 0, 2, 6, 0, 1, 1, 3, 29, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.0883448}
{'[4, 3, 0, 2, 6, 0, 1, 1, 3, 29, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.087301}
{'[4, 3, 0, 2, 6, 0, 1, 1, 3, 29, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.0869181}
{'[4, 3, 0, 2, 6, 0, 1, 1, 3, 29, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.0858111}
{'[4, 3, 0, 2, 6, 0, 1, 1, 3, 29, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.0858622}
{'[4, 3, 0, 2, 6, 0, 1, 1, 3, 29, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.0857511}
{'[4, 3, 0, 2, 6, 0, 1, 1, 3, 29, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.0858331}
{'[4, 3, 0, 2, 6, 0, 1, 1, 3, 29, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.086653}
{'[4, 3, 0, 2, 6, 0, 1, 1, 3, 29, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.087873}
{'[4, 3, 0, 2, 6, 0, 1, 1, 3, 29, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.088119}
{'[4, 3, 0, 2, 6, 0, 1, 1, 3, 29, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.088171}
{'[4, 3, 0, 2, 6, 0, 1, 1, 3, 29, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.0881011}
{'[4, 3, 0, 2, 6, 0, 1, 1, 3, 29, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.088192}
{'[4, 3, 0, 2, 6, 0, 1, 1, 3, 29, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.0883298}
{'[4, 3, 0, 2, 6, 0, 1, 1, 3, 29, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.0880909}
{'[4, 3, 0, 2, 6, 0, 1, 1, 3, 29, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.086858}
{'[4, 3, 0, 2, 6, 0, 1, 1, 3, 29, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.0858221}
{'[4, 3, 0, 2, 6, 0, 1, 1, 3, 29, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.0857589}
{'[4, 3, 0, 2, 6, 0, 1, 1, 3, 29, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.0858619}
{'[4, 3, 0, 2, 6, 0, 1, 1, 3, 29, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.0874979}
{'[4, 3, 0, 2, 6, 0, 1, 1, 3, 29, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.0886531}
{'[4, 3, 0, 2, 6, 0, 1, 1, 3, 29, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.0884051}
{'[4, 3, 0, 2, 6, 0, 1, 1, 3, 29, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.0885329}
{'[4, 3, 0, 2, 6, 0, 1, 1, 3, 29, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.0884211}
{'[4, 3, 0, 2, 6, 0, 1, 1, 3, 29, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.088948}
{'[4, 3, 0, 2, 6, 0, 1, 1, 3, 29, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.0879939}
{'[4, 3, 0, 2, 6, 0, 1, 1, 3, 29, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.088166}

out:
 ["{'[4, 3, 0, 2, 6, 0, 1, 1, 3, 29, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.0886431}", "{'[4, 3, 0, 2, 6, 0, 1, 1, 3, 29, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.088187}", "{'[4, 3, 0, 2, 6, 0, 1, 1, 3, 29, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.088068}", "{'[4, 3, 0, 2, 6, 0, 1, 1, 3, 29, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.0883448}", "{'[4, 3, 0, 2, 6, 0, 1, 1, 3, 29, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.087301}", "{'[4, 3, 0, 2, 6, 0, 1, 1, 3, 29, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.0869181}", "{'[4, 3, 0, 2, 6, 0, 1, 1, 3, 29, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.0858111}", "{'[4, 3, 0, 2, 6, 0, 1, 1, 3, 29, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.0858622}", "{'[4, 3, 0, 2, 6, 0, 1, 1, 3, 29, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.0857511}", "{'[4, 3, 0, 2, 6, 0, 1, 1, 3, 29, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.0858331}", "{'[4, 3, 0, 2, 6, 0, 1, 1, 3, 29, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.086653}", "{'[4, 3, 0, 2, 6, 0, 1, 1, 3, 29, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.087873}", "{'[4, 3, 0, 2, 6, 0, 1, 1, 3, 29, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.088119}", "{'[4, 3, 0, 2, 6, 0, 1, 1, 3, 29, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.088171}", "{'[4, 3, 0, 2, 6, 0, 1, 1, 3, 29, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.0881011}", "{'[4, 3, 0, 2, 6, 0, 1, 1, 3, 29, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.088192}", "{'[4, 3, 0, 2, 6, 0, 1, 1, 3, 29, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.0883298}", "{'[4, 3, 0, 2, 6, 0, 1, 1, 3, 29, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.0880909}", "{'[4, 3, 0, 2, 6, 0, 1, 1, 3, 29, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.086858}", "{'[4, 3, 0, 2, 6, 0, 1, 1, 3, 29, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.0858221}", "{'[4, 3, 0, 2, 6, 0, 1, 1, 3, 29, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.0857589}", "{'[4, 3, 0, 2, 6, 0, 1, 1, 3, 29, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.0858619}", "{'[4, 3, 0, 2, 6, 0, 1, 1, 3, 29, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.0874979}", "{'[4, 3, 0, 2, 6, 0, 1, 1, 3, 29, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.0886531}", "{'[4, 3, 0, 2, 6, 0, 1, 1, 3, 29, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.0884051}", "{'[4, 3, 0, 2, 6, 0, 1, 1, 3, 29, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.0885329}", "{'[4, 3, 0, 2, 6, 0, 1, 1, 3, 29, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.0884211}", "{'[4, 3, 0, 2, 6, 0, 1, 1, 3, 29, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.088948}", "{'[4, 3, 0, 2, 6, 0, 1, 1, 3, 29, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.0879939}", "{'[4, 3, 0, 2, 6, 0, 1, 1, 3, 29, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.088166}"]
returning from 'run': {'[4, 3, 0, 2, 6, 0, 1, 1, 3, 29, 29, 0, 1, 1, 0, 1, 0, 0]': ([0.0886431, 0.088187, 0.088068, 0.0883448, 0.087301, 0.0869181, 0.0858111, 0.0858622, 0.0857511, 0.0858331, 0.086653, 0.087873, 0.088119, 0.088171, 0.0881011, 0.088192, 0.0883298, 0.0880909, 0.086858, 0.0858221, 0.0857589, 0.0858619, 0.0874979, 0.0886531, 0.0884051, 0.0885329, 0.0884211, 0.088948, 0.0879939, 0.088166], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 3, 0, 2, 6, 0, 1, 1, 3, 29, 29, 0, 1, 1, 0, 1, 0, 0]': ([0.0886431, 0.088187, 0.088068, 0.0883448, 0.087301, 0.0869181, 0.0858111, 0.0858622, 0.0857511, 0.0858331, 0.086653, 0.087873, 0.088119, 0.088171, 0.0881011, 0.088192, 0.0883298, 0.0880909, 0.086858, 0.0858221, 0.0857589, 0.0858619, 0.0874979, 0.0886531, 0.0884051, 0.0885329, 0.0884211, 0.088948, 0.0879939, 0.088166], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	166
        Max loop nest depth: 	6
        Additions: 		1697
        Multiplications: 	240
        Divisions: 		0
        Logical: 		0
        Reads: 			3362
        Writes: 		686
        Comparisons:		166
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest32.exe __orio_perftest32.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest32.exe  
Program Test Output: 
{'[1, 3, 2, 3, 6, 6, 1, 1, 17, 28, 1, 0, 0, 0, 0, 0, 1, 1]' : 0.233584}
{'[1, 3, 2, 3, 6, 6, 1, 1, 17, 28, 1, 0, 0, 0, 0, 0, 1, 1]' : 0.237255}
{'[1, 3, 2, 3, 6, 6, 1, 1, 17, 28, 1, 0, 0, 0, 0, 0, 1, 1]' : 0.239735}
{'[1, 3, 2, 3, 6, 6, 1, 1, 17, 28, 1, 0, 0, 0, 0, 0, 1, 1]' : 0.239738}
{'[1, 3, 2, 3, 6, 6, 1, 1, 17, 28, 1, 0, 0, 0, 0, 0, 1, 1]' : 0.239687}
{'[1, 3, 2, 3, 6, 6, 1, 1, 17, 28, 1, 0, 0, 0, 0, 0, 1, 1]' : 0.239701}
{'[1, 3, 2, 3, 6, 6, 1, 1, 17, 28, 1, 0, 0, 0, 0, 0, 1, 1]' : 0.239619}
{'[1, 3, 2, 3, 6, 6, 1, 1, 17, 28, 1, 0, 0, 0, 0, 0, 1, 1]' : 0.23491}
{'[1, 3, 2, 3, 6, 6, 1, 1, 17, 28, 1, 0, 0, 0, 0, 0, 1, 1]' : 0.237936}
{'[1, 3, 2, 3, 6, 6, 1, 1, 17, 28, 1, 0, 0, 0, 0, 0, 1, 1]' : 0.240328}
{'[1, 3, 2, 3, 6, 6, 1, 1, 17, 28, 1, 0, 0, 0, 0, 0, 1, 1]' : 0.239631}
{'[1, 3, 2, 3, 6, 6, 1, 1, 17, 28, 1, 0, 0, 0, 0, 0, 1, 1]' : 0.232026}
{'[1, 3, 2, 3, 6, 6, 1, 1, 17, 28, 1, 0, 0, 0, 0, 0, 1, 1]' : 0.225876}
{'[1, 3, 2, 3, 6, 6, 1, 1, 17, 28, 1, 0, 0, 0, 0, 0, 1, 1]' : 0.226062}
{'[1, 3, 2, 3, 6, 6, 1, 1, 17, 28, 1, 0, 0, 0, 0, 0, 1, 1]' : 0.233118}
{'[1, 3, 2, 3, 6, 6, 1, 1, 17, 28, 1, 0, 0, 0, 0, 0, 1, 1]' : 0.233455}
{'[1, 3, 2, 3, 6, 6, 1, 1, 17, 28, 1, 0, 0, 0, 0, 0, 1, 1]' : 0.238475}
{'[1, 3, 2, 3, 6, 6, 1, 1, 17, 28, 1, 0, 0, 0, 0, 0, 1, 1]' : 0.239776}
{'[1, 3, 2, 3, 6, 6, 1, 1, 17, 28, 1, 0, 0, 0, 0, 0, 1, 1]' : 0.235547}
{'[1, 3, 2, 3, 6, 6, 1, 1, 17, 28, 1, 0, 0, 0, 0, 0, 1, 1]' : 0.233171}
{'[1, 3, 2, 3, 6, 6, 1, 1, 17, 28, 1, 0, 0, 0, 0, 0, 1, 1]' : 0.233719}
{'[1, 3, 2, 3, 6, 6, 1, 1, 17, 28, 1, 0, 0, 0, 0, 0, 1, 1]' : 0.233208}
{'[1, 3, 2, 3, 6, 6, 1, 1, 17, 28, 1, 0, 0, 0, 0, 0, 1, 1]' : 0.23615}
{'[1, 3, 2, 3, 6, 6, 1, 1, 17, 28, 1, 0, 0, 0, 0, 0, 1, 1]' : 0.23966}
{'[1, 3, 2, 3, 6, 6, 1, 1, 17, 28, 1, 0, 0, 0, 0, 0, 1, 1]' : 0.238574}
{'[1, 3, 2, 3, 6, 6, 1, 1, 17, 28, 1, 0, 0, 0, 0, 0, 1, 1]' : 0.233436}
{'[1, 3, 2, 3, 6, 6, 1, 1, 17, 28, 1, 0, 0, 0, 0, 0, 1, 1]' : 0.234816}
{'[1, 3, 2, 3, 6, 6, 1, 1, 17, 28, 1, 0, 0, 0, 0, 0, 1, 1]' : 0.239633}
{'[1, 3, 2, 3, 6, 6, 1, 1, 17, 28, 1, 0, 0, 0, 0, 0, 1, 1]' : 0.235618}
{'[1, 3, 2, 3, 6, 6, 1, 1, 17, 28, 1, 0, 0, 0, 0, 0, 1, 1]' : 0.233444}

out:
 ["{'[1, 3, 2, 3, 6, 6, 1, 1, 17, 28, 1, 0, 0, 0, 0, 0, 1, 1]' : 0.233584}", "{'[1, 3, 2, 3, 6, 6, 1, 1, 17, 28, 1, 0, 0, 0, 0, 0, 1, 1]' : 0.237255}", "{'[1, 3, 2, 3, 6, 6, 1, 1, 17, 28, 1, 0, 0, 0, 0, 0, 1, 1]' : 0.239735}", "{'[1, 3, 2, 3, 6, 6, 1, 1, 17, 28, 1, 0, 0, 0, 0, 0, 1, 1]' : 0.239738}", "{'[1, 3, 2, 3, 6, 6, 1, 1, 17, 28, 1, 0, 0, 0, 0, 0, 1, 1]' : 0.239687}", "{'[1, 3, 2, 3, 6, 6, 1, 1, 17, 28, 1, 0, 0, 0, 0, 0, 1, 1]' : 0.239701}", "{'[1, 3, 2, 3, 6, 6, 1, 1, 17, 28, 1, 0, 0, 0, 0, 0, 1, 1]' : 0.239619}", "{'[1, 3, 2, 3, 6, 6, 1, 1, 17, 28, 1, 0, 0, 0, 0, 0, 1, 1]' : 0.23491}", "{'[1, 3, 2, 3, 6, 6, 1, 1, 17, 28, 1, 0, 0, 0, 0, 0, 1, 1]' : 0.237936}", "{'[1, 3, 2, 3, 6, 6, 1, 1, 17, 28, 1, 0, 0, 0, 0, 0, 1, 1]' : 0.240328}", "{'[1, 3, 2, 3, 6, 6, 1, 1, 17, 28, 1, 0, 0, 0, 0, 0, 1, 1]' : 0.239631}", "{'[1, 3, 2, 3, 6, 6, 1, 1, 17, 28, 1, 0, 0, 0, 0, 0, 1, 1]' : 0.232026}", "{'[1, 3, 2, 3, 6, 6, 1, 1, 17, 28, 1, 0, 0, 0, 0, 0, 1, 1]' : 0.225876}", "{'[1, 3, 2, 3, 6, 6, 1, 1, 17, 28, 1, 0, 0, 0, 0, 0, 1, 1]' : 0.226062}", "{'[1, 3, 2, 3, 6, 6, 1, 1, 17, 28, 1, 0, 0, 0, 0, 0, 1, 1]' : 0.233118}", "{'[1, 3, 2, 3, 6, 6, 1, 1, 17, 28, 1, 0, 0, 0, 0, 0, 1, 1]' : 0.233455}", "{'[1, 3, 2, 3, 6, 6, 1, 1, 17, 28, 1, 0, 0, 0, 0, 0, 1, 1]' : 0.238475}", "{'[1, 3, 2, 3, 6, 6, 1, 1, 17, 28, 1, 0, 0, 0, 0, 0, 1, 1]' : 0.239776}", "{'[1, 3, 2, 3, 6, 6, 1, 1, 17, 28, 1, 0, 0, 0, 0, 0, 1, 1]' : 0.235547}", "{'[1, 3, 2, 3, 6, 6, 1, 1, 17, 28, 1, 0, 0, 0, 0, 0, 1, 1]' : 0.233171}", "{'[1, 3, 2, 3, 6, 6, 1, 1, 17, 28, 1, 0, 0, 0, 0, 0, 1, 1]' : 0.233719}", "{'[1, 3, 2, 3, 6, 6, 1, 1, 17, 28, 1, 0, 0, 0, 0, 0, 1, 1]' : 0.233208}", "{'[1, 3, 2, 3, 6, 6, 1, 1, 17, 28, 1, 0, 0, 0, 0, 0, 1, 1]' : 0.23615}", "{'[1, 3, 2, 3, 6, 6, 1, 1, 17, 28, 1, 0, 0, 0, 0, 0, 1, 1]' : 0.23966}", "{'[1, 3, 2, 3, 6, 6, 1, 1, 17, 28, 1, 0, 0, 0, 0, 0, 1, 1]' : 0.238574}", "{'[1, 3, 2, 3, 6, 6, 1, 1, 17, 28, 1, 0, 0, 0, 0, 0, 1, 1]' : 0.233436}", "{'[1, 3, 2, 3, 6, 6, 1, 1, 17, 28, 1, 0, 0, 0, 0, 0, 1, 1]' : 0.234816}", "{'[1, 3, 2, 3, 6, 6, 1, 1, 17, 28, 1, 0, 0, 0, 0, 0, 1, 1]' : 0.239633}", "{'[1, 3, 2, 3, 6, 6, 1, 1, 17, 28, 1, 0, 0, 0, 0, 0, 1, 1]' : 0.235618}", "{'[1, 3, 2, 3, 6, 6, 1, 1, 17, 28, 1, 0, 0, 0, 0, 0, 1, 1]' : 0.233444}"]
returning from 'run': {'[1, 3, 2, 3, 6, 6, 1, 1, 17, 28, 1, 0, 0, 0, 0, 0, 1, 1]': ([0.233584, 0.237255, 0.239735, 0.239738, 0.239687, 0.239701, 0.239619, 0.23491, 0.237936, 0.240328, 0.239631, 0.232026, 0.225876, 0.226062, 0.233118, 0.233455, 0.238475, 0.239776, 0.235547, 0.233171, 0.233719, 0.233208, 0.23615, 0.23966, 0.238574, 0.233436, 0.234816, 0.239633, 0.235618, 0.233444], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 3, 2, 3, 6, 6, 1, 1, 17, 28, 1, 0, 0, 0, 0, 0, 1, 1]': ([0.233584, 0.237255, 0.239735, 0.239738, 0.239687, 0.239701, 0.239619, 0.23491, 0.237936, 0.240328, 0.239631, 0.232026, 0.225876, 0.226062, 0.233118, 0.233455, 0.238475, 0.239776, 0.235547, 0.233171, 0.233719, 0.233208, 0.23615, 0.23966, 0.238574, 0.233436, 0.234816, 0.239633, 0.235618, 0.233444], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	42
        Max loop nest depth: 	5
        Additions: 		1269
        Multiplications: 	384
        Divisions: 		0
        Logical: 		0
        Reads: 			2180
        Writes: 		319
        Comparisons:		42
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest33.exe __orio_perftest33.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest33.exe  
Program Test Output: 
{'[6, 3, 0, 5, 1, 6, 1, 1, 1, 4, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.24043}
{'[6, 3, 0, 5, 1, 6, 1, 1, 1, 4, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.235097}
{'[6, 3, 0, 5, 1, 6, 1, 1, 1, 4, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.209736}
{'[6, 3, 0, 5, 1, 6, 1, 1, 1, 4, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.208363}
{'[6, 3, 0, 5, 1, 6, 1, 1, 1, 4, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.208317}
{'[6, 3, 0, 5, 1, 6, 1, 1, 1, 4, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.208323}
{'[6, 3, 0, 5, 1, 6, 1, 1, 1, 4, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.208151}
{'[6, 3, 0, 5, 1, 6, 1, 1, 1, 4, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.208933}
{'[6, 3, 0, 5, 1, 6, 1, 1, 1, 4, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.201759}
{'[6, 3, 0, 5, 1, 6, 1, 1, 1, 4, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.202411}
{'[6, 3, 0, 5, 1, 6, 1, 1, 1, 4, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.208382}
{'[6, 3, 0, 5, 1, 6, 1, 1, 1, 4, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.208337}
{'[6, 3, 0, 5, 1, 6, 1, 1, 1, 4, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.212379}
{'[6, 3, 0, 5, 1, 6, 1, 1, 1, 4, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.202082}
{'[6, 3, 0, 5, 1, 6, 1, 1, 1, 4, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.2035}
{'[6, 3, 0, 5, 1, 6, 1, 1, 1, 4, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.208153}
{'[6, 3, 0, 5, 1, 6, 1, 1, 1, 4, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.20817}
{'[6, 3, 0, 5, 1, 6, 1, 1, 1, 4, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.211139}
{'[6, 3, 0, 5, 1, 6, 1, 1, 1, 4, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.208411}
{'[6, 3, 0, 5, 1, 6, 1, 1, 1, 4, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.208212}
{'[6, 3, 0, 5, 1, 6, 1, 1, 1, 4, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.208001}
{'[6, 3, 0, 5, 1, 6, 1, 1, 1, 4, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.208874}
{'[6, 3, 0, 5, 1, 6, 1, 1, 1, 4, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.214127}
{'[6, 3, 0, 5, 1, 6, 1, 1, 1, 4, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.211849}
{'[6, 3, 0, 5, 1, 6, 1, 1, 1, 4, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.208763}
{'[6, 3, 0, 5, 1, 6, 1, 1, 1, 4, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.208158}
{'[6, 3, 0, 5, 1, 6, 1, 1, 1, 4, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.208365}
{'[6, 3, 0, 5, 1, 6, 1, 1, 1, 4, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.208202}
{'[6, 3, 0, 5, 1, 6, 1, 1, 1, 4, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.210833}
{'[6, 3, 0, 5, 1, 6, 1, 1, 1, 4, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.20946}

out:
 ["{'[6, 3, 0, 5, 1, 6, 1, 1, 1, 4, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.24043}", "{'[6, 3, 0, 5, 1, 6, 1, 1, 1, 4, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.235097}", "{'[6, 3, 0, 5, 1, 6, 1, 1, 1, 4, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.209736}", "{'[6, 3, 0, 5, 1, 6, 1, 1, 1, 4, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.208363}", "{'[6, 3, 0, 5, 1, 6, 1, 1, 1, 4, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.208317}", "{'[6, 3, 0, 5, 1, 6, 1, 1, 1, 4, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.208323}", "{'[6, 3, 0, 5, 1, 6, 1, 1, 1, 4, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.208151}", "{'[6, 3, 0, 5, 1, 6, 1, 1, 1, 4, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.208933}", "{'[6, 3, 0, 5, 1, 6, 1, 1, 1, 4, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.201759}", "{'[6, 3, 0, 5, 1, 6, 1, 1, 1, 4, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.202411}", "{'[6, 3, 0, 5, 1, 6, 1, 1, 1, 4, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.208382}", "{'[6, 3, 0, 5, 1, 6, 1, 1, 1, 4, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.208337}", "{'[6, 3, 0, 5, 1, 6, 1, 1, 1, 4, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.212379}", "{'[6, 3, 0, 5, 1, 6, 1, 1, 1, 4, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.202082}", "{'[6, 3, 0, 5, 1, 6, 1, 1, 1, 4, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.2035}", "{'[6, 3, 0, 5, 1, 6, 1, 1, 1, 4, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.208153}", "{'[6, 3, 0, 5, 1, 6, 1, 1, 1, 4, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.20817}", "{'[6, 3, 0, 5, 1, 6, 1, 1, 1, 4, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.211139}", "{'[6, 3, 0, 5, 1, 6, 1, 1, 1, 4, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.208411}", "{'[6, 3, 0, 5, 1, 6, 1, 1, 1, 4, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.208212}", "{'[6, 3, 0, 5, 1, 6, 1, 1, 1, 4, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.208001}", "{'[6, 3, 0, 5, 1, 6, 1, 1, 1, 4, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.208874}", "{'[6, 3, 0, 5, 1, 6, 1, 1, 1, 4, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.214127}", "{'[6, 3, 0, 5, 1, 6, 1, 1, 1, 4, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.211849}", "{'[6, 3, 0, 5, 1, 6, 1, 1, 1, 4, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.208763}", "{'[6, 3, 0, 5, 1, 6, 1, 1, 1, 4, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.208158}", "{'[6, 3, 0, 5, 1, 6, 1, 1, 1, 4, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.208365}", "{'[6, 3, 0, 5, 1, 6, 1, 1, 1, 4, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.208202}", "{'[6, 3, 0, 5, 1, 6, 1, 1, 1, 4, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.210833}", "{'[6, 3, 0, 5, 1, 6, 1, 1, 1, 4, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.20946}"]
returning from 'run': {'[6, 3, 0, 5, 1, 6, 1, 1, 1, 4, 29, 0, 0, 0, 0, 1, 0, 0]': ([0.24043, 0.235097, 0.209736, 0.208363, 0.208317, 0.208323, 0.208151, 0.208933, 0.201759, 0.202411, 0.208382, 0.208337, 0.212379, 0.202082, 0.2035, 0.208153, 0.20817, 0.211139, 0.208411, 0.208212, 0.208001, 0.208874, 0.214127, 0.211849, 0.208763, 0.208158, 0.208365, 0.208202, 0.210833, 0.20946], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 3, 0, 5, 1, 6, 1, 1, 1, 4, 29, 0, 0, 0, 0, 1, 0, 0]': ([0.24043, 0.235097, 0.209736, 0.208363, 0.208317, 0.208323, 0.208151, 0.208933, 0.201759, 0.202411, 0.208382, 0.208337, 0.212379, 0.202082, 0.2035, 0.208153, 0.20817, 0.211139, 0.208411, 0.208212, 0.208001, 0.208874, 0.214127, 0.211849, 0.208763, 0.208158, 0.208365, 0.208202, 0.210833, 0.20946], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	6
        Additions: 		704
        Multiplications: 	162
        Divisions: 		0
        Logical: 		0
        Reads: 			1150
        Writes: 		149
        Comparisons:		20
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest34.exe __orio_perftest34.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest34.exe  
Program Test Output: 
{'[1, 3, 6, 3, 0, 6, 0, 1, 13, 0, 0, 0, 1, 0, 1, 0, 1, 1]' : 0.110601}
{'[1, 3, 6, 3, 0, 6, 0, 1, 13, 0, 0, 0, 1, 0, 1, 0, 1, 1]' : 0.109605}
{'[1, 3, 6, 3, 0, 6, 0, 1, 13, 0, 0, 0, 1, 0, 1, 0, 1, 1]' : 0.109489}
{'[1, 3, 6, 3, 0, 6, 0, 1, 13, 0, 0, 0, 1, 0, 1, 0, 1, 1]' : 0.109576}
{'[1, 3, 6, 3, 0, 6, 0, 1, 13, 0, 0, 0, 1, 0, 1, 0, 1, 1]' : 0.109328}
{'[1, 3, 6, 3, 0, 6, 0, 1, 13, 0, 0, 0, 1, 0, 1, 0, 1, 1]' : 0.109329}
{'[1, 3, 6, 3, 0, 6, 0, 1, 13, 0, 0, 0, 1, 0, 1, 0, 1, 1]' : 0.109316}
{'[1, 3, 6, 3, 0, 6, 0, 1, 13, 0, 0, 0, 1, 0, 1, 0, 1, 1]' : 0.109432}
{'[1, 3, 6, 3, 0, 6, 0, 1, 13, 0, 0, 0, 1, 0, 1, 0, 1, 1]' : 0.109465}
{'[1, 3, 6, 3, 0, 6, 0, 1, 13, 0, 0, 0, 1, 0, 1, 0, 1, 1]' : 0.109333}
{'[1, 3, 6, 3, 0, 6, 0, 1, 13, 0, 0, 0, 1, 0, 1, 0, 1, 1]' : 0.108966}
{'[1, 3, 6, 3, 0, 6, 0, 1, 13, 0, 0, 0, 1, 0, 1, 0, 1, 1]' : 0.107033}
{'[1, 3, 6, 3, 0, 6, 0, 1, 13, 0, 0, 0, 1, 0, 1, 0, 1, 1]' : 0.107672}
{'[1, 3, 6, 3, 0, 6, 0, 1, 13, 0, 0, 0, 1, 0, 1, 0, 1, 1]' : 0.109318}
{'[1, 3, 6, 3, 0, 6, 0, 1, 13, 0, 0, 0, 1, 0, 1, 0, 1, 1]' : 0.110305}
{'[1, 3, 6, 3, 0, 6, 0, 1, 13, 0, 0, 0, 1, 0, 1, 0, 1, 1]' : 0.109286}
{'[1, 3, 6, 3, 0, 6, 0, 1, 13, 0, 0, 0, 1, 0, 1, 0, 1, 1]' : 0.109331}
{'[1, 3, 6, 3, 0, 6, 0, 1, 13, 0, 0, 0, 1, 0, 1, 0, 1, 1]' : 0.109584}
{'[1, 3, 6, 3, 0, 6, 0, 1, 13, 0, 0, 0, 1, 0, 1, 0, 1, 1]' : 0.109232}
{'[1, 3, 6, 3, 0, 6, 0, 1, 13, 0, 0, 0, 1, 0, 1, 0, 1, 1]' : 0.109259}
{'[1, 3, 6, 3, 0, 6, 0, 1, 13, 0, 0, 0, 1, 0, 1, 0, 1, 1]' : 0.109749}
{'[1, 3, 6, 3, 0, 6, 0, 1, 13, 0, 0, 0, 1, 0, 1, 0, 1, 1]' : 0.109746}
{'[1, 3, 6, 3, 0, 6, 0, 1, 13, 0, 0, 0, 1, 0, 1, 0, 1, 1]' : 0.109253}
{'[1, 3, 6, 3, 0, 6, 0, 1, 13, 0, 0, 0, 1, 0, 1, 0, 1, 1]' : 0.109353}
{'[1, 3, 6, 3, 0, 6, 0, 1, 13, 0, 0, 0, 1, 0, 1, 0, 1, 1]' : 0.109352}
{'[1, 3, 6, 3, 0, 6, 0, 1, 13, 0, 0, 0, 1, 0, 1, 0, 1, 1]' : 0.109411}
{'[1, 3, 6, 3, 0, 6, 0, 1, 13, 0, 0, 0, 1, 0, 1, 0, 1, 1]' : 0.109327}
{'[1, 3, 6, 3, 0, 6, 0, 1, 13, 0, 0, 0, 1, 0, 1, 0, 1, 1]' : 0.110076}
{'[1, 3, 6, 3, 0, 6, 0, 1, 13, 0, 0, 0, 1, 0, 1, 0, 1, 1]' : 0.109674}
{'[1, 3, 6, 3, 0, 6, 0, 1, 13, 0, 0, 0, 1, 0, 1, 0, 1, 1]' : 0.109566}

out:
 ["{'[1, 3, 6, 3, 0, 6, 0, 1, 13, 0, 0, 0, 1, 0, 1, 0, 1, 1]' : 0.110601}", "{'[1, 3, 6, 3, 0, 6, 0, 1, 13, 0, 0, 0, 1, 0, 1, 0, 1, 1]' : 0.109605}", "{'[1, 3, 6, 3, 0, 6, 0, 1, 13, 0, 0, 0, 1, 0, 1, 0, 1, 1]' : 0.109489}", "{'[1, 3, 6, 3, 0, 6, 0, 1, 13, 0, 0, 0, 1, 0, 1, 0, 1, 1]' : 0.109576}", "{'[1, 3, 6, 3, 0, 6, 0, 1, 13, 0, 0, 0, 1, 0, 1, 0, 1, 1]' : 0.109328}", "{'[1, 3, 6, 3, 0, 6, 0, 1, 13, 0, 0, 0, 1, 0, 1, 0, 1, 1]' : 0.109329}", "{'[1, 3, 6, 3, 0, 6, 0, 1, 13, 0, 0, 0, 1, 0, 1, 0, 1, 1]' : 0.109316}", "{'[1, 3, 6, 3, 0, 6, 0, 1, 13, 0, 0, 0, 1, 0, 1, 0, 1, 1]' : 0.109432}", "{'[1, 3, 6, 3, 0, 6, 0, 1, 13, 0, 0, 0, 1, 0, 1, 0, 1, 1]' : 0.109465}", "{'[1, 3, 6, 3, 0, 6, 0, 1, 13, 0, 0, 0, 1, 0, 1, 0, 1, 1]' : 0.109333}", "{'[1, 3, 6, 3, 0, 6, 0, 1, 13, 0, 0, 0, 1, 0, 1, 0, 1, 1]' : 0.108966}", "{'[1, 3, 6, 3, 0, 6, 0, 1, 13, 0, 0, 0, 1, 0, 1, 0, 1, 1]' : 0.107033}", "{'[1, 3, 6, 3, 0, 6, 0, 1, 13, 0, 0, 0, 1, 0, 1, 0, 1, 1]' : 0.107672}", "{'[1, 3, 6, 3, 0, 6, 0, 1, 13, 0, 0, 0, 1, 0, 1, 0, 1, 1]' : 0.109318}", "{'[1, 3, 6, 3, 0, 6, 0, 1, 13, 0, 0, 0, 1, 0, 1, 0, 1, 1]' : 0.110305}", "{'[1, 3, 6, 3, 0, 6, 0, 1, 13, 0, 0, 0, 1, 0, 1, 0, 1, 1]' : 0.109286}", "{'[1, 3, 6, 3, 0, 6, 0, 1, 13, 0, 0, 0, 1, 0, 1, 0, 1, 1]' : 0.109331}", "{'[1, 3, 6, 3, 0, 6, 0, 1, 13, 0, 0, 0, 1, 0, 1, 0, 1, 1]' : 0.109584}", "{'[1, 3, 6, 3, 0, 6, 0, 1, 13, 0, 0, 0, 1, 0, 1, 0, 1, 1]' : 0.109232}", "{'[1, 3, 6, 3, 0, 6, 0, 1, 13, 0, 0, 0, 1, 0, 1, 0, 1, 1]' : 0.109259}", "{'[1, 3, 6, 3, 0, 6, 0, 1, 13, 0, 0, 0, 1, 0, 1, 0, 1, 1]' : 0.109749}", "{'[1, 3, 6, 3, 0, 6, 0, 1, 13, 0, 0, 0, 1, 0, 1, 0, 1, 1]' : 0.109746}", "{'[1, 3, 6, 3, 0, 6, 0, 1, 13, 0, 0, 0, 1, 0, 1, 0, 1, 1]' : 0.109253}", "{'[1, 3, 6, 3, 0, 6, 0, 1, 13, 0, 0, 0, 1, 0, 1, 0, 1, 1]' : 0.109353}", "{'[1, 3, 6, 3, 0, 6, 0, 1, 13, 0, 0, 0, 1, 0, 1, 0, 1, 1]' : 0.109352}", "{'[1, 3, 6, 3, 0, 6, 0, 1, 13, 0, 0, 0, 1, 0, 1, 0, 1, 1]' : 0.109411}", "{'[1, 3, 6, 3, 0, 6, 0, 1, 13, 0, 0, 0, 1, 0, 1, 0, 1, 1]' : 0.109327}", "{'[1, 3, 6, 3, 0, 6, 0, 1, 13, 0, 0, 0, 1, 0, 1, 0, 1, 1]' : 0.110076}", "{'[1, 3, 6, 3, 0, 6, 0, 1, 13, 0, 0, 0, 1, 0, 1, 0, 1, 1]' : 0.109674}", "{'[1, 3, 6, 3, 0, 6, 0, 1, 13, 0, 0, 0, 1, 0, 1, 0, 1, 1]' : 0.109566}"]
returning from 'run': {'[1, 3, 6, 3, 0, 6, 0, 1, 13, 0, 0, 0, 1, 0, 1, 0, 1, 1]': ([0.110601, 0.109605, 0.109489, 0.109576, 0.109328, 0.109329, 0.109316, 0.109432, 0.109465, 0.109333, 0.108966, 0.107033, 0.107672, 0.109318, 0.110305, 0.109286, 0.109331, 0.109584, 0.109232, 0.109259, 0.109749, 0.109746, 0.109253, 0.109353, 0.109352, 0.109411, 0.109327, 0.110076, 0.109674, 0.109566], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 3, 6, 3, 0, 6, 0, 1, 13, 0, 0, 0, 1, 0, 1, 0, 1, 1]': ([0.110601, 0.109605, 0.109489, 0.109576, 0.109328, 0.109329, 0.109316, 0.109432, 0.109465, 0.109333, 0.108966, 0.107033, 0.107672, 0.109318, 0.110305, 0.109286, 0.109331, 0.109584, 0.109232, 0.109259, 0.109749, 0.109746, 0.109253, 0.109353, 0.109352, 0.109411, 0.109327, 0.110076, 0.109674, 0.109566], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		189
        Multiplications: 	58
        Divisions: 		0
        Logical: 		0
        Reads: 			434
        Writes: 		105
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest35.exe __orio_perftest35.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest35.exe  
Program Test Output: 
{'[1, 0, 6, 1, 3, 0, 0, 0, 18, 0, 14, 3, 0, 0, 1, 1, 1, 0]' : 0.178574}
{'[1, 0, 6, 1, 3, 0, 0, 0, 18, 0, 14, 3, 0, 0, 1, 1, 1, 0]' : 0.17824}
{'[1, 0, 6, 1, 3, 0, 0, 0, 18, 0, 14, 3, 0, 0, 1, 1, 1, 0]' : 0.17851}
{'[1, 0, 6, 1, 3, 0, 0, 0, 18, 0, 14, 3, 0, 0, 1, 1, 1, 0]' : 0.163206}
{'[1, 0, 6, 1, 3, 0, 0, 0, 18, 0, 14, 3, 0, 0, 1, 1, 1, 0]' : 0.154946}
{'[1, 0, 6, 1, 3, 0, 0, 0, 18, 0, 14, 3, 0, 0, 1, 1, 1, 0]' : 0.155086}
{'[1, 0, 6, 1, 3, 0, 0, 0, 18, 0, 14, 3, 0, 0, 1, 1, 1, 0]' : 0.154834}
{'[1, 0, 6, 1, 3, 0, 0, 0, 18, 0, 14, 3, 0, 0, 1, 1, 1, 0]' : 0.154414}
{'[1, 0, 6, 1, 3, 0, 0, 0, 18, 0, 14, 3, 0, 0, 1, 1, 1, 0]' : 0.152597}
{'[1, 0, 6, 1, 3, 0, 0, 0, 18, 0, 14, 3, 0, 0, 1, 1, 1, 0]' : 0.15018}
{'[1, 0, 6, 1, 3, 0, 0, 0, 18, 0, 14, 3, 0, 0, 1, 1, 1, 0]' : 0.149999}
{'[1, 0, 6, 1, 3, 0, 0, 0, 18, 0, 14, 3, 0, 0, 1, 1, 1, 0]' : 0.154788}
{'[1, 0, 6, 1, 3, 0, 0, 0, 18, 0, 14, 3, 0, 0, 1, 1, 1, 0]' : 0.155051}
{'[1, 0, 6, 1, 3, 0, 0, 0, 18, 0, 14, 3, 0, 0, 1, 1, 1, 0]' : 0.154762}
{'[1, 0, 6, 1, 3, 0, 0, 0, 18, 0, 14, 3, 0, 0, 1, 1, 1, 0]' : 0.154855}
{'[1, 0, 6, 1, 3, 0, 0, 0, 18, 0, 14, 3, 0, 0, 1, 1, 1, 0]' : 0.155354}
{'[1, 0, 6, 1, 3, 0, 0, 0, 18, 0, 14, 3, 0, 0, 1, 1, 1, 0]' : 0.154987}
{'[1, 0, 6, 1, 3, 0, 0, 0, 18, 0, 14, 3, 0, 0, 1, 1, 1, 0]' : 0.155114}
{'[1, 0, 6, 1, 3, 0, 0, 0, 18, 0, 14, 3, 0, 0, 1, 1, 1, 0]' : 0.155566}
{'[1, 0, 6, 1, 3, 0, 0, 0, 18, 0, 14, 3, 0, 0, 1, 1, 1, 0]' : 0.155157}
{'[1, 0, 6, 1, 3, 0, 0, 0, 18, 0, 14, 3, 0, 0, 1, 1, 1, 0]' : 0.15489}
{'[1, 0, 6, 1, 3, 0, 0, 0, 18, 0, 14, 3, 0, 0, 1, 1, 1, 0]' : 0.154914}
{'[1, 0, 6, 1, 3, 0, 0, 0, 18, 0, 14, 3, 0, 0, 1, 1, 1, 0]' : 0.154887}
{'[1, 0, 6, 1, 3, 0, 0, 0, 18, 0, 14, 3, 0, 0, 1, 1, 1, 0]' : 0.155066}
{'[1, 0, 6, 1, 3, 0, 0, 0, 18, 0, 14, 3, 0, 0, 1, 1, 1, 0]' : 0.154973}
{'[1, 0, 6, 1, 3, 0, 0, 0, 18, 0, 14, 3, 0, 0, 1, 1, 1, 0]' : 0.154979}
{'[1, 0, 6, 1, 3, 0, 0, 0, 18, 0, 14, 3, 0, 0, 1, 1, 1, 0]' : 0.15477}
{'[1, 0, 6, 1, 3, 0, 0, 0, 18, 0, 14, 3, 0, 0, 1, 1, 1, 0]' : 0.151213}
{'[1, 0, 6, 1, 3, 0, 0, 0, 18, 0, 14, 3, 0, 0, 1, 1, 1, 0]' : 0.150753}
{'[1, 0, 6, 1, 3, 0, 0, 0, 18, 0, 14, 3, 0, 0, 1, 1, 1, 0]' : 0.150234}

out:
 ["{'[1, 0, 6, 1, 3, 0, 0, 0, 18, 0, 14, 3, 0, 0, 1, 1, 1, 0]' : 0.178574}", "{'[1, 0, 6, 1, 3, 0, 0, 0, 18, 0, 14, 3, 0, 0, 1, 1, 1, 0]' : 0.17824}", "{'[1, 0, 6, 1, 3, 0, 0, 0, 18, 0, 14, 3, 0, 0, 1, 1, 1, 0]' : 0.17851}", "{'[1, 0, 6, 1, 3, 0, 0, 0, 18, 0, 14, 3, 0, 0, 1, 1, 1, 0]' : 0.163206}", "{'[1, 0, 6, 1, 3, 0, 0, 0, 18, 0, 14, 3, 0, 0, 1, 1, 1, 0]' : 0.154946}", "{'[1, 0, 6, 1, 3, 0, 0, 0, 18, 0, 14, 3, 0, 0, 1, 1, 1, 0]' : 0.155086}", "{'[1, 0, 6, 1, 3, 0, 0, 0, 18, 0, 14, 3, 0, 0, 1, 1, 1, 0]' : 0.154834}", "{'[1, 0, 6, 1, 3, 0, 0, 0, 18, 0, 14, 3, 0, 0, 1, 1, 1, 0]' : 0.154414}", "{'[1, 0, 6, 1, 3, 0, 0, 0, 18, 0, 14, 3, 0, 0, 1, 1, 1, 0]' : 0.152597}", "{'[1, 0, 6, 1, 3, 0, 0, 0, 18, 0, 14, 3, 0, 0, 1, 1, 1, 0]' : 0.15018}", "{'[1, 0, 6, 1, 3, 0, 0, 0, 18, 0, 14, 3, 0, 0, 1, 1, 1, 0]' : 0.149999}", "{'[1, 0, 6, 1, 3, 0, 0, 0, 18, 0, 14, 3, 0, 0, 1, 1, 1, 0]' : 0.154788}", "{'[1, 0, 6, 1, 3, 0, 0, 0, 18, 0, 14, 3, 0, 0, 1, 1, 1, 0]' : 0.155051}", "{'[1, 0, 6, 1, 3, 0, 0, 0, 18, 0, 14, 3, 0, 0, 1, 1, 1, 0]' : 0.154762}", "{'[1, 0, 6, 1, 3, 0, 0, 0, 18, 0, 14, 3, 0, 0, 1, 1, 1, 0]' : 0.154855}", "{'[1, 0, 6, 1, 3, 0, 0, 0, 18, 0, 14, 3, 0, 0, 1, 1, 1, 0]' : 0.155354}", "{'[1, 0, 6, 1, 3, 0, 0, 0, 18, 0, 14, 3, 0, 0, 1, 1, 1, 0]' : 0.154987}", "{'[1, 0, 6, 1, 3, 0, 0, 0, 18, 0, 14, 3, 0, 0, 1, 1, 1, 0]' : 0.155114}", "{'[1, 0, 6, 1, 3, 0, 0, 0, 18, 0, 14, 3, 0, 0, 1, 1, 1, 0]' : 0.155566}", "{'[1, 0, 6, 1, 3, 0, 0, 0, 18, 0, 14, 3, 0, 0, 1, 1, 1, 0]' : 0.155157}", "{'[1, 0, 6, 1, 3, 0, 0, 0, 18, 0, 14, 3, 0, 0, 1, 1, 1, 0]' : 0.15489}", "{'[1, 0, 6, 1, 3, 0, 0, 0, 18, 0, 14, 3, 0, 0, 1, 1, 1, 0]' : 0.154914}", "{'[1, 0, 6, 1, 3, 0, 0, 0, 18, 0, 14, 3, 0, 0, 1, 1, 1, 0]' : 0.154887}", "{'[1, 0, 6, 1, 3, 0, 0, 0, 18, 0, 14, 3, 0, 0, 1, 1, 1, 0]' : 0.155066}", "{'[1, 0, 6, 1, 3, 0, 0, 0, 18, 0, 14, 3, 0, 0, 1, 1, 1, 0]' : 0.154973}", "{'[1, 0, 6, 1, 3, 0, 0, 0, 18, 0, 14, 3, 0, 0, 1, 1, 1, 0]' : 0.154979}", "{'[1, 0, 6, 1, 3, 0, 0, 0, 18, 0, 14, 3, 0, 0, 1, 1, 1, 0]' : 0.15477}", "{'[1, 0, 6, 1, 3, 0, 0, 0, 18, 0, 14, 3, 0, 0, 1, 1, 1, 0]' : 0.151213}", "{'[1, 0, 6, 1, 3, 0, 0, 0, 18, 0, 14, 3, 0, 0, 1, 1, 1, 0]' : 0.150753}", "{'[1, 0, 6, 1, 3, 0, 0, 0, 18, 0, 14, 3, 0, 0, 1, 1, 1, 0]' : 0.150234}"]
returning from 'run': {'[1, 0, 6, 1, 3, 0, 0, 0, 18, 0, 14, 3, 0, 0, 1, 1, 1, 0]': ([0.178574, 0.17824, 0.17851, 0.163206, 0.154946, 0.155086, 0.154834, 0.154414, 0.152597, 0.15018, 0.149999, 0.154788, 0.155051, 0.154762, 0.154855, 0.155354, 0.154987, 0.155114, 0.155566, 0.155157, 0.15489, 0.154914, 0.154887, 0.155066, 0.154973, 0.154979, 0.15477, 0.151213, 0.150753, 0.150234], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 6, 1, 3, 0, 0, 0, 18, 0, 14, 3, 0, 0, 1, 1, 1, 0]': ([0.178574, 0.17824, 0.17851, 0.163206, 0.154946, 0.155086, 0.154834, 0.154414, 0.152597, 0.15018, 0.149999, 0.154788, 0.155051, 0.154762, 0.154855, 0.155354, 0.154987, 0.155114, 0.155566, 0.155157, 0.15489, 0.154914, 0.154887, 0.155066, 0.154973, 0.154979, 0.15477, 0.151213, 0.150753, 0.150234], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	6
        Additions: 		11059
        Multiplications: 	3286
        Divisions: 		0
        Logical: 		0
        Reads: 			16668
        Writes: 		1732
        Comparisons:		20
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest36.exe __orio_perftest36.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest36.exe  
Program Test Output: 
{'[1, 3, 6, 4, 0, 6, 0, 0, 3, 29, 18, 0, 0, 0, 2, 0, 1, 1]' : 0.184915}
{'[1, 3, 6, 4, 0, 6, 0, 0, 3, 29, 18, 0, 0, 0, 2, 0, 1, 1]' : 0.184611}
{'[1, 3, 6, 4, 0, 6, 0, 0, 3, 29, 18, 0, 0, 0, 2, 0, 1, 1]' : 0.184295}
{'[1, 3, 6, 4, 0, 6, 0, 0, 3, 29, 18, 0, 0, 0, 2, 0, 1, 1]' : 0.184574}
{'[1, 3, 6, 4, 0, 6, 0, 0, 3, 29, 18, 0, 0, 0, 2, 0, 1, 1]' : 0.184604}
{'[1, 3, 6, 4, 0, 6, 0, 0, 3, 29, 18, 0, 0, 0, 2, 0, 1, 1]' : 0.184391}
{'[1, 3, 6, 4, 0, 6, 0, 0, 3, 29, 18, 0, 0, 0, 2, 0, 1, 1]' : 0.184429}
{'[1, 3, 6, 4, 0, 6, 0, 0, 3, 29, 18, 0, 0, 0, 2, 0, 1, 1]' : 0.184737}
{'[1, 3, 6, 4, 0, 6, 0, 0, 3, 29, 18, 0, 0, 0, 2, 0, 1, 1]' : 0.184595}
{'[1, 3, 6, 4, 0, 6, 0, 0, 3, 29, 18, 0, 0, 0, 2, 0, 1, 1]' : 0.18294}
{'[1, 3, 6, 4, 0, 6, 0, 0, 3, 29, 18, 0, 0, 0, 2, 0, 1, 1]' : 0.184444}
{'[1, 3, 6, 4, 0, 6, 0, 0, 3, 29, 18, 0, 0, 0, 2, 0, 1, 1]' : 0.18463}
{'[1, 3, 6, 4, 0, 6, 0, 0, 3, 29, 18, 0, 0, 0, 2, 0, 1, 1]' : 0.184451}
{'[1, 3, 6, 4, 0, 6, 0, 0, 3, 29, 18, 0, 0, 0, 2, 0, 1, 1]' : 0.184424}
{'[1, 3, 6, 4, 0, 6, 0, 0, 3, 29, 18, 0, 0, 0, 2, 0, 1, 1]' : 0.1844}
{'[1, 3, 6, 4, 0, 6, 0, 0, 3, 29, 18, 0, 0, 0, 2, 0, 1, 1]' : 0.184596}
{'[1, 3, 6, 4, 0, 6, 0, 0, 3, 29, 18, 0, 0, 0, 2, 0, 1, 1]' : 0.184645}
{'[1, 3, 6, 4, 0, 6, 0, 0, 3, 29, 18, 0, 0, 0, 2, 0, 1, 1]' : 0.185011}
{'[1, 3, 6, 4, 0, 6, 0, 0, 3, 29, 18, 0, 0, 0, 2, 0, 1, 1]' : 0.184346}
{'[1, 3, 6, 4, 0, 6, 0, 0, 3, 29, 18, 0, 0, 0, 2, 0, 1, 1]' : 0.184543}
{'[1, 3, 6, 4, 0, 6, 0, 0, 3, 29, 18, 0, 0, 0, 2, 0, 1, 1]' : 0.18451}
{'[1, 3, 6, 4, 0, 6, 0, 0, 3, 29, 18, 0, 0, 0, 2, 0, 1, 1]' : 0.184583}
{'[1, 3, 6, 4, 0, 6, 0, 0, 3, 29, 18, 0, 0, 0, 2, 0, 1, 1]' : 0.184545}
{'[1, 3, 6, 4, 0, 6, 0, 0, 3, 29, 18, 0, 0, 0, 2, 0, 1, 1]' : 0.184621}
{'[1, 3, 6, 4, 0, 6, 0, 0, 3, 29, 18, 0, 0, 0, 2, 0, 1, 1]' : 0.184338}
{'[1, 3, 6, 4, 0, 6, 0, 0, 3, 29, 18, 0, 0, 0, 2, 0, 1, 1]' : 0.185216}
{'[1, 3, 6, 4, 0, 6, 0, 0, 3, 29, 18, 0, 0, 0, 2, 0, 1, 1]' : 0.184492}
{'[1, 3, 6, 4, 0, 6, 0, 0, 3, 29, 18, 0, 0, 0, 2, 0, 1, 1]' : 0.184558}
{'[1, 3, 6, 4, 0, 6, 0, 0, 3, 29, 18, 0, 0, 0, 2, 0, 1, 1]' : 0.184785}
{'[1, 3, 6, 4, 0, 6, 0, 0, 3, 29, 18, 0, 0, 0, 2, 0, 1, 1]' : 0.184402}

out:
 ["{'[1, 3, 6, 4, 0, 6, 0, 0, 3, 29, 18, 0, 0, 0, 2, 0, 1, 1]' : 0.184915}", "{'[1, 3, 6, 4, 0, 6, 0, 0, 3, 29, 18, 0, 0, 0, 2, 0, 1, 1]' : 0.184611}", "{'[1, 3, 6, 4, 0, 6, 0, 0, 3, 29, 18, 0, 0, 0, 2, 0, 1, 1]' : 0.184295}", "{'[1, 3, 6, 4, 0, 6, 0, 0, 3, 29, 18, 0, 0, 0, 2, 0, 1, 1]' : 0.184574}", "{'[1, 3, 6, 4, 0, 6, 0, 0, 3, 29, 18, 0, 0, 0, 2, 0, 1, 1]' : 0.184604}", "{'[1, 3, 6, 4, 0, 6, 0, 0, 3, 29, 18, 0, 0, 0, 2, 0, 1, 1]' : 0.184391}", "{'[1, 3, 6, 4, 0, 6, 0, 0, 3, 29, 18, 0, 0, 0, 2, 0, 1, 1]' : 0.184429}", "{'[1, 3, 6, 4, 0, 6, 0, 0, 3, 29, 18, 0, 0, 0, 2, 0, 1, 1]' : 0.184737}", "{'[1, 3, 6, 4, 0, 6, 0, 0, 3, 29, 18, 0, 0, 0, 2, 0, 1, 1]' : 0.184595}", "{'[1, 3, 6, 4, 0, 6, 0, 0, 3, 29, 18, 0, 0, 0, 2, 0, 1, 1]' : 0.18294}", "{'[1, 3, 6, 4, 0, 6, 0, 0, 3, 29, 18, 0, 0, 0, 2, 0, 1, 1]' : 0.184444}", "{'[1, 3, 6, 4, 0, 6, 0, 0, 3, 29, 18, 0, 0, 0, 2, 0, 1, 1]' : 0.18463}", "{'[1, 3, 6, 4, 0, 6, 0, 0, 3, 29, 18, 0, 0, 0, 2, 0, 1, 1]' : 0.184451}", "{'[1, 3, 6, 4, 0, 6, 0, 0, 3, 29, 18, 0, 0, 0, 2, 0, 1, 1]' : 0.184424}", "{'[1, 3, 6, 4, 0, 6, 0, 0, 3, 29, 18, 0, 0, 0, 2, 0, 1, 1]' : 0.1844}", "{'[1, 3, 6, 4, 0, 6, 0, 0, 3, 29, 18, 0, 0, 0, 2, 0, 1, 1]' : 0.184596}", "{'[1, 3, 6, 4, 0, 6, 0, 0, 3, 29, 18, 0, 0, 0, 2, 0, 1, 1]' : 0.184645}", "{'[1, 3, 6, 4, 0, 6, 0, 0, 3, 29, 18, 0, 0, 0, 2, 0, 1, 1]' : 0.185011}", "{'[1, 3, 6, 4, 0, 6, 0, 0, 3, 29, 18, 0, 0, 0, 2, 0, 1, 1]' : 0.184346}", "{'[1, 3, 6, 4, 0, 6, 0, 0, 3, 29, 18, 0, 0, 0, 2, 0, 1, 1]' : 0.184543}", "{'[1, 3, 6, 4, 0, 6, 0, 0, 3, 29, 18, 0, 0, 0, 2, 0, 1, 1]' : 0.18451}", "{'[1, 3, 6, 4, 0, 6, 0, 0, 3, 29, 18, 0, 0, 0, 2, 0, 1, 1]' : 0.184583}", "{'[1, 3, 6, 4, 0, 6, 0, 0, 3, 29, 18, 0, 0, 0, 2, 0, 1, 1]' : 0.184545}", "{'[1, 3, 6, 4, 0, 6, 0, 0, 3, 29, 18, 0, 0, 0, 2, 0, 1, 1]' : 0.184621}", "{'[1, 3, 6, 4, 0, 6, 0, 0, 3, 29, 18, 0, 0, 0, 2, 0, 1, 1]' : 0.184338}", "{'[1, 3, 6, 4, 0, 6, 0, 0, 3, 29, 18, 0, 0, 0, 2, 0, 1, 1]' : 0.185216}", "{'[1, 3, 6, 4, 0, 6, 0, 0, 3, 29, 18, 0, 0, 0, 2, 0, 1, 1]' : 0.184492}", "{'[1, 3, 6, 4, 0, 6, 0, 0, 3, 29, 18, 0, 0, 0, 2, 0, 1, 1]' : 0.184558}", "{'[1, 3, 6, 4, 0, 6, 0, 0, 3, 29, 18, 0, 0, 0, 2, 0, 1, 1]' : 0.184785}", "{'[1, 3, 6, 4, 0, 6, 0, 0, 3, 29, 18, 0, 0, 0, 2, 0, 1, 1]' : 0.184402}"]
returning from 'run': {'[1, 3, 6, 4, 0, 6, 0, 0, 3, 29, 18, 0, 0, 0, 2, 0, 1, 1]': ([0.184915, 0.184611, 0.184295, 0.184574, 0.184604, 0.184391, 0.184429, 0.184737, 0.184595, 0.18294, 0.184444, 0.18463, 0.184451, 0.184424, 0.1844, 0.184596, 0.184645, 0.185011, 0.184346, 0.184543, 0.18451, 0.184583, 0.184545, 0.184621, 0.184338, 0.185216, 0.184492, 0.184558, 0.184785, 0.184402], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 3, 6, 4, 0, 6, 0, 0, 3, 29, 18, 0, 0, 0, 2, 0, 1, 1]': ([0.184915, 0.184611, 0.184295, 0.184574, 0.184604, 0.184391, 0.184429, 0.184737, 0.184595, 0.18294, 0.184444, 0.18463, 0.184451, 0.184424, 0.1844, 0.184596, 0.184645, 0.185011, 0.184346, 0.184543, 0.18451, 0.184583, 0.184545, 0.184621, 0.184338, 0.185216, 0.184492, 0.184558, 0.184785, 0.184402], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	75
        Max loop nest depth: 	5
        Additions: 		3145
        Multiplications: 	1320
        Divisions: 		0
        Logical: 		0
        Reads: 			6169
        Writes: 		1096
        Comparisons:		75
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest37.exe __orio_perftest37.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest37.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest37.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest37.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest37.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	5
        Additions: 		139
        Multiplications: 	38
        Divisions: 		0
        Logical: 		0
        Reads: 			292
        Writes: 		43
        Comparisons:		10
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest38.exe __orio_perftest38.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest38.exe  
Program Test Output: 
{'[2, 0, 3, 5, 0, 0, 1, 1, 0, 0, 28, 9, 0, 1, 0, 0, 0, 0]' : 0.273994}
{'[2, 0, 3, 5, 0, 0, 1, 1, 0, 0, 28, 9, 0, 1, 0, 0, 0, 0]' : 0.273676}
{'[2, 0, 3, 5, 0, 0, 1, 1, 0, 0, 28, 9, 0, 1, 0, 0, 0, 0]' : 0.251526}
{'[2, 0, 3, 5, 0, 0, 1, 1, 0, 0, 28, 9, 0, 1, 0, 0, 0, 0]' : 0.235682}
{'[2, 0, 3, 5, 0, 0, 1, 1, 0, 0, 28, 9, 0, 1, 0, 0, 0, 0]' : 0.236041}
{'[2, 0, 3, 5, 0, 0, 1, 1, 0, 0, 28, 9, 0, 1, 0, 0, 0, 0]' : 0.235596}
{'[2, 0, 3, 5, 0, 0, 1, 1, 0, 0, 28, 9, 0, 1, 0, 0, 0, 0]' : 0.235635}
{'[2, 0, 3, 5, 0, 0, 1, 1, 0, 0, 28, 9, 0, 1, 0, 0, 0, 0]' : 0.236437}
{'[2, 0, 3, 5, 0, 0, 1, 1, 0, 0, 28, 9, 0, 1, 0, 0, 0, 0]' : 0.235588}
{'[2, 0, 3, 5, 0, 0, 1, 1, 0, 0, 28, 9, 0, 1, 0, 0, 0, 0]' : 0.236087}
{'[2, 0, 3, 5, 0, 0, 1, 1, 0, 0, 28, 9, 0, 1, 0, 0, 0, 0]' : 0.235885}
{'[2, 0, 3, 5, 0, 0, 1, 1, 0, 0, 28, 9, 0, 1, 0, 0, 0, 0]' : 0.235696}
{'[2, 0, 3, 5, 0, 0, 1, 1, 0, 0, 28, 9, 0, 1, 0, 0, 0, 0]' : 0.235819}
{'[2, 0, 3, 5, 0, 0, 1, 1, 0, 0, 28, 9, 0, 1, 0, 0, 0, 0]' : 0.234006}
{'[2, 0, 3, 5, 0, 0, 1, 1, 0, 0, 28, 9, 0, 1, 0, 0, 0, 0]' : 0.235963}
{'[2, 0, 3, 5, 0, 0, 1, 1, 0, 0, 28, 9, 0, 1, 0, 0, 0, 0]' : 0.235706}
{'[2, 0, 3, 5, 0, 0, 1, 1, 0, 0, 28, 9, 0, 1, 0, 0, 0, 0]' : 0.235908}
{'[2, 0, 3, 5, 0, 0, 1, 1, 0, 0, 28, 9, 0, 1, 0, 0, 0, 0]' : 0.235798}
{'[2, 0, 3, 5, 0, 0, 1, 1, 0, 0, 28, 9, 0, 1, 0, 0, 0, 0]' : 0.235327}
{'[2, 0, 3, 5, 0, 0, 1, 1, 0, 0, 28, 9, 0, 1, 0, 0, 0, 0]' : 0.228276}
{'[2, 0, 3, 5, 0, 0, 1, 1, 0, 0, 28, 9, 0, 1, 0, 0, 0, 0]' : 0.235524}
{'[2, 0, 3, 5, 0, 0, 1, 1, 0, 0, 28, 9, 0, 1, 0, 0, 0, 0]' : 0.235728}
{'[2, 0, 3, 5, 0, 0, 1, 1, 0, 0, 28, 9, 0, 1, 0, 0, 0, 0]' : 0.233834}
{'[2, 0, 3, 5, 0, 0, 1, 1, 0, 0, 28, 9, 0, 1, 0, 0, 0, 0]' : 0.236102}
{'[2, 0, 3, 5, 0, 0, 1, 1, 0, 0, 28, 9, 0, 1, 0, 0, 0, 0]' : 0.235845}
{'[2, 0, 3, 5, 0, 0, 1, 1, 0, 0, 28, 9, 0, 1, 0, 0, 0, 0]' : 0.235681}
{'[2, 0, 3, 5, 0, 0, 1, 1, 0, 0, 28, 9, 0, 1, 0, 0, 0, 0]' : 0.236266}
{'[2, 0, 3, 5, 0, 0, 1, 1, 0, 0, 28, 9, 0, 1, 0, 0, 0, 0]' : 0.235986}
{'[2, 0, 3, 5, 0, 0, 1, 1, 0, 0, 28, 9, 0, 1, 0, 0, 0, 0]' : 0.235799}
{'[2, 0, 3, 5, 0, 0, 1, 1, 0, 0, 28, 9, 0, 1, 0, 0, 0, 0]' : 0.23586}

out:
 ["{'[2, 0, 3, 5, 0, 0, 1, 1, 0, 0, 28, 9, 0, 1, 0, 0, 0, 0]' : 0.273994}", "{'[2, 0, 3, 5, 0, 0, 1, 1, 0, 0, 28, 9, 0, 1, 0, 0, 0, 0]' : 0.273676}", "{'[2, 0, 3, 5, 0, 0, 1, 1, 0, 0, 28, 9, 0, 1, 0, 0, 0, 0]' : 0.251526}", "{'[2, 0, 3, 5, 0, 0, 1, 1, 0, 0, 28, 9, 0, 1, 0, 0, 0, 0]' : 0.235682}", "{'[2, 0, 3, 5, 0, 0, 1, 1, 0, 0, 28, 9, 0, 1, 0, 0, 0, 0]' : 0.236041}", "{'[2, 0, 3, 5, 0, 0, 1, 1, 0, 0, 28, 9, 0, 1, 0, 0, 0, 0]' : 0.235596}", "{'[2, 0, 3, 5, 0, 0, 1, 1, 0, 0, 28, 9, 0, 1, 0, 0, 0, 0]' : 0.235635}", "{'[2, 0, 3, 5, 0, 0, 1, 1, 0, 0, 28, 9, 0, 1, 0, 0, 0, 0]' : 0.236437}", "{'[2, 0, 3, 5, 0, 0, 1, 1, 0, 0, 28, 9, 0, 1, 0, 0, 0, 0]' : 0.235588}", "{'[2, 0, 3, 5, 0, 0, 1, 1, 0, 0, 28, 9, 0, 1, 0, 0, 0, 0]' : 0.236087}", "{'[2, 0, 3, 5, 0, 0, 1, 1, 0, 0, 28, 9, 0, 1, 0, 0, 0, 0]' : 0.235885}", "{'[2, 0, 3, 5, 0, 0, 1, 1, 0, 0, 28, 9, 0, 1, 0, 0, 0, 0]' : 0.235696}", "{'[2, 0, 3, 5, 0, 0, 1, 1, 0, 0, 28, 9, 0, 1, 0, 0, 0, 0]' : 0.235819}", "{'[2, 0, 3, 5, 0, 0, 1, 1, 0, 0, 28, 9, 0, 1, 0, 0, 0, 0]' : 0.234006}", "{'[2, 0, 3, 5, 0, 0, 1, 1, 0, 0, 28, 9, 0, 1, 0, 0, 0, 0]' : 0.235963}", "{'[2, 0, 3, 5, 0, 0, 1, 1, 0, 0, 28, 9, 0, 1, 0, 0, 0, 0]' : 0.235706}", "{'[2, 0, 3, 5, 0, 0, 1, 1, 0, 0, 28, 9, 0, 1, 0, 0, 0, 0]' : 0.235908}", "{'[2, 0, 3, 5, 0, 0, 1, 1, 0, 0, 28, 9, 0, 1, 0, 0, 0, 0]' : 0.235798}", "{'[2, 0, 3, 5, 0, 0, 1, 1, 0, 0, 28, 9, 0, 1, 0, 0, 0, 0]' : 0.235327}", "{'[2, 0, 3, 5, 0, 0, 1, 1, 0, 0, 28, 9, 0, 1, 0, 0, 0, 0]' : 0.228276}", "{'[2, 0, 3, 5, 0, 0, 1, 1, 0, 0, 28, 9, 0, 1, 0, 0, 0, 0]' : 0.235524}", "{'[2, 0, 3, 5, 0, 0, 1, 1, 0, 0, 28, 9, 0, 1, 0, 0, 0, 0]' : 0.235728}", "{'[2, 0, 3, 5, 0, 0, 1, 1, 0, 0, 28, 9, 0, 1, 0, 0, 0, 0]' : 0.233834}", "{'[2, 0, 3, 5, 0, 0, 1, 1, 0, 0, 28, 9, 0, 1, 0, 0, 0, 0]' : 0.236102}", "{'[2, 0, 3, 5, 0, 0, 1, 1, 0, 0, 28, 9, 0, 1, 0, 0, 0, 0]' : 0.235845}", "{'[2, 0, 3, 5, 0, 0, 1, 1, 0, 0, 28, 9, 0, 1, 0, 0, 0, 0]' : 0.235681}", "{'[2, 0, 3, 5, 0, 0, 1, 1, 0, 0, 28, 9, 0, 1, 0, 0, 0, 0]' : 0.236266}", "{'[2, 0, 3, 5, 0, 0, 1, 1, 0, 0, 28, 9, 0, 1, 0, 0, 0, 0]' : 0.235986}", "{'[2, 0, 3, 5, 0, 0, 1, 1, 0, 0, 28, 9, 0, 1, 0, 0, 0, 0]' : 0.235799}", "{'[2, 0, 3, 5, 0, 0, 1, 1, 0, 0, 28, 9, 0, 1, 0, 0, 0, 0]' : 0.23586}"]
returning from 'run': {'[2, 0, 3, 5, 0, 0, 1, 1, 0, 0, 28, 9, 0, 1, 0, 0, 0, 0]': ([0.273994, 0.273676, 0.251526, 0.235682, 0.236041, 0.235596, 0.235635, 0.236437, 0.235588, 0.236087, 0.235885, 0.235696, 0.235819, 0.234006, 0.235963, 0.235706, 0.235908, 0.235798, 0.235327, 0.228276, 0.235524, 0.235728, 0.233834, 0.236102, 0.235845, 0.235681, 0.236266, 0.235986, 0.235799, 0.23586], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 0, 3, 5, 0, 0, 1, 1, 0, 0, 28, 9, 0, 1, 0, 0, 0, 0]': ([0.273994, 0.273676, 0.251526, 0.235682, 0.236041, 0.235596, 0.235635, 0.236437, 0.235588, 0.236087, 0.235885, 0.235696, 0.235819, 0.234006, 0.235963, 0.235706, 0.235908, 0.235798, 0.235327, 0.228276, 0.235524, 0.235728, 0.233834, 0.236102, 0.235845, 0.235681, 0.236266, 0.235986, 0.235799, 0.23586], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		364
        Multiplications: 	136
        Divisions: 		0
        Logical: 		0
        Reads: 			858
        Writes: 		184
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest39.exe __orio_perftest39.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest39.exe  
Program Test Output: 
{'[3, 4, 2, 6, 4, 4, 0, 0, 5, 0, 27, 5, 0, 0, 2, 1, 0, 0]' : 0.184713}
{'[3, 4, 2, 6, 4, 4, 0, 0, 5, 0, 27, 5, 0, 0, 2, 1, 0, 0]' : 0.184565}
{'[3, 4, 2, 6, 4, 4, 0, 0, 5, 0, 27, 5, 0, 0, 2, 1, 0, 0]' : 0.184548}
{'[3, 4, 2, 6, 4, 4, 0, 0, 5, 0, 27, 5, 0, 0, 2, 1, 0, 0]' : 0.170163}
{'[3, 4, 2, 6, 4, 4, 0, 0, 5, 0, 27, 5, 0, 0, 2, 1, 0, 0]' : 0.159251}
{'[3, 4, 2, 6, 4, 4, 0, 0, 5, 0, 27, 5, 0, 0, 2, 1, 0, 0]' : 0.157302}
{'[3, 4, 2, 6, 4, 4, 0, 0, 5, 0, 27, 5, 0, 0, 2, 1, 0, 0]' : 0.155054}
{'[3, 4, 2, 6, 4, 4, 0, 0, 5, 0, 27, 5, 0, 0, 2, 1, 0, 0]' : 0.155687}
{'[3, 4, 2, 6, 4, 4, 0, 0, 5, 0, 27, 5, 0, 0, 2, 1, 0, 0]' : 0.159208}
{'[3, 4, 2, 6, 4, 4, 0, 0, 5, 0, 27, 5, 0, 0, 2, 1, 0, 0]' : 0.159217}
{'[3, 4, 2, 6, 4, 4, 0, 0, 5, 0, 27, 5, 0, 0, 2, 1, 0, 0]' : 0.159331}
{'[3, 4, 2, 6, 4, 4, 0, 0, 5, 0, 27, 5, 0, 0, 2, 1, 0, 0]' : 0.159944}
{'[3, 4, 2, 6, 4, 4, 0, 0, 5, 0, 27, 5, 0, 0, 2, 1, 0, 0]' : 0.159388}
{'[3, 4, 2, 6, 4, 4, 0, 0, 5, 0, 27, 5, 0, 0, 2, 1, 0, 0]' : 0.158135}
{'[3, 4, 2, 6, 4, 4, 0, 0, 5, 0, 27, 5, 0, 0, 2, 1, 0, 0]' : 0.158743}
{'[3, 4, 2, 6, 4, 4, 0, 0, 5, 0, 27, 5, 0, 0, 2, 1, 0, 0]' : 0.159234}
{'[3, 4, 2, 6, 4, 4, 0, 0, 5, 0, 27, 5, 0, 0, 2, 1, 0, 0]' : 0.159626}
{'[3, 4, 2, 6, 4, 4, 0, 0, 5, 0, 27, 5, 0, 0, 2, 1, 0, 0]' : 0.159314}
{'[3, 4, 2, 6, 4, 4, 0, 0, 5, 0, 27, 5, 0, 0, 2, 1, 0, 0]' : 0.159253}
{'[3, 4, 2, 6, 4, 4, 0, 0, 5, 0, 27, 5, 0, 0, 2, 1, 0, 0]' : 0.159534}
{'[3, 4, 2, 6, 4, 4, 0, 0, 5, 0, 27, 5, 0, 0, 2, 1, 0, 0]' : 0.159479}
{'[3, 4, 2, 6, 4, 4, 0, 0, 5, 0, 27, 5, 0, 0, 2, 1, 0, 0]' : 0.159845}
{'[3, 4, 2, 6, 4, 4, 0, 0, 5, 0, 27, 5, 0, 0, 2, 1, 0, 0]' : 0.159304}
{'[3, 4, 2, 6, 4, 4, 0, 0, 5, 0, 27, 5, 0, 0, 2, 1, 0, 0]' : 0.15934}
{'[3, 4, 2, 6, 4, 4, 0, 0, 5, 0, 27, 5, 0, 0, 2, 1, 0, 0]' : 0.159413}
{'[3, 4, 2, 6, 4, 4, 0, 0, 5, 0, 27, 5, 0, 0, 2, 1, 0, 0]' : 0.159237}
{'[3, 4, 2, 6, 4, 4, 0, 0, 5, 0, 27, 5, 0, 0, 2, 1, 0, 0]' : 0.157946}
{'[3, 4, 2, 6, 4, 4, 0, 0, 5, 0, 27, 5, 0, 0, 2, 1, 0, 0]' : 0.159328}
{'[3, 4, 2, 6, 4, 4, 0, 0, 5, 0, 27, 5, 0, 0, 2, 1, 0, 0]' : 0.159246}
{'[3, 4, 2, 6, 4, 4, 0, 0, 5, 0, 27, 5, 0, 0, 2, 1, 0, 0]' : 0.159543}

out:
 ["{'[3, 4, 2, 6, 4, 4, 0, 0, 5, 0, 27, 5, 0, 0, 2, 1, 0, 0]' : 0.184713}", "{'[3, 4, 2, 6, 4, 4, 0, 0, 5, 0, 27, 5, 0, 0, 2, 1, 0, 0]' : 0.184565}", "{'[3, 4, 2, 6, 4, 4, 0, 0, 5, 0, 27, 5, 0, 0, 2, 1, 0, 0]' : 0.184548}", "{'[3, 4, 2, 6, 4, 4, 0, 0, 5, 0, 27, 5, 0, 0, 2, 1, 0, 0]' : 0.170163}", "{'[3, 4, 2, 6, 4, 4, 0, 0, 5, 0, 27, 5, 0, 0, 2, 1, 0, 0]' : 0.159251}", "{'[3, 4, 2, 6, 4, 4, 0, 0, 5, 0, 27, 5, 0, 0, 2, 1, 0, 0]' : 0.157302}", "{'[3, 4, 2, 6, 4, 4, 0, 0, 5, 0, 27, 5, 0, 0, 2, 1, 0, 0]' : 0.155054}", "{'[3, 4, 2, 6, 4, 4, 0, 0, 5, 0, 27, 5, 0, 0, 2, 1, 0, 0]' : 0.155687}", "{'[3, 4, 2, 6, 4, 4, 0, 0, 5, 0, 27, 5, 0, 0, 2, 1, 0, 0]' : 0.159208}", "{'[3, 4, 2, 6, 4, 4, 0, 0, 5, 0, 27, 5, 0, 0, 2, 1, 0, 0]' : 0.159217}", "{'[3, 4, 2, 6, 4, 4, 0, 0, 5, 0, 27, 5, 0, 0, 2, 1, 0, 0]' : 0.159331}", "{'[3, 4, 2, 6, 4, 4, 0, 0, 5, 0, 27, 5, 0, 0, 2, 1, 0, 0]' : 0.159944}", "{'[3, 4, 2, 6, 4, 4, 0, 0, 5, 0, 27, 5, 0, 0, 2, 1, 0, 0]' : 0.159388}", "{'[3, 4, 2, 6, 4, 4, 0, 0, 5, 0, 27, 5, 0, 0, 2, 1, 0, 0]' : 0.158135}", "{'[3, 4, 2, 6, 4, 4, 0, 0, 5, 0, 27, 5, 0, 0, 2, 1, 0, 0]' : 0.158743}", "{'[3, 4, 2, 6, 4, 4, 0, 0, 5, 0, 27, 5, 0, 0, 2, 1, 0, 0]' : 0.159234}", "{'[3, 4, 2, 6, 4, 4, 0, 0, 5, 0, 27, 5, 0, 0, 2, 1, 0, 0]' : 0.159626}", "{'[3, 4, 2, 6, 4, 4, 0, 0, 5, 0, 27, 5, 0, 0, 2, 1, 0, 0]' : 0.159314}", "{'[3, 4, 2, 6, 4, 4, 0, 0, 5, 0, 27, 5, 0, 0, 2, 1, 0, 0]' : 0.159253}", "{'[3, 4, 2, 6, 4, 4, 0, 0, 5, 0, 27, 5, 0, 0, 2, 1, 0, 0]' : 0.159534}", "{'[3, 4, 2, 6, 4, 4, 0, 0, 5, 0, 27, 5, 0, 0, 2, 1, 0, 0]' : 0.159479}", "{'[3, 4, 2, 6, 4, 4, 0, 0, 5, 0, 27, 5, 0, 0, 2, 1, 0, 0]' : 0.159845}", "{'[3, 4, 2, 6, 4, 4, 0, 0, 5, 0, 27, 5, 0, 0, 2, 1, 0, 0]' : 0.159304}", "{'[3, 4, 2, 6, 4, 4, 0, 0, 5, 0, 27, 5, 0, 0, 2, 1, 0, 0]' : 0.15934}", "{'[3, 4, 2, 6, 4, 4, 0, 0, 5, 0, 27, 5, 0, 0, 2, 1, 0, 0]' : 0.159413}", "{'[3, 4, 2, 6, 4, 4, 0, 0, 5, 0, 27, 5, 0, 0, 2, 1, 0, 0]' : 0.159237}", "{'[3, 4, 2, 6, 4, 4, 0, 0, 5, 0, 27, 5, 0, 0, 2, 1, 0, 0]' : 0.157946}", "{'[3, 4, 2, 6, 4, 4, 0, 0, 5, 0, 27, 5, 0, 0, 2, 1, 0, 0]' : 0.159328}", "{'[3, 4, 2, 6, 4, 4, 0, 0, 5, 0, 27, 5, 0, 0, 2, 1, 0, 0]' : 0.159246}", "{'[3, 4, 2, 6, 4, 4, 0, 0, 5, 0, 27, 5, 0, 0, 2, 1, 0, 0]' : 0.159543}"]
returning from 'run': {'[3, 4, 2, 6, 4, 4, 0, 0, 5, 0, 27, 5, 0, 0, 2, 1, 0, 0]': ([0.184713, 0.184565, 0.184548, 0.170163, 0.159251, 0.157302, 0.155054, 0.155687, 0.159208, 0.159217, 0.159331, 0.159944, 0.159388, 0.158135, 0.158743, 0.159234, 0.159626, 0.159314, 0.159253, 0.159534, 0.159479, 0.159845, 0.159304, 0.15934, 0.159413, 0.159237, 0.157946, 0.159328, 0.159246, 0.159543], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 4, 2, 6, 4, 4, 0, 0, 5, 0, 27, 5, 0, 0, 2, 1, 0, 0]': ([0.184713, 0.184565, 0.184548, 0.170163, 0.159251, 0.157302, 0.155054, 0.155687, 0.159208, 0.159217, 0.159331, 0.159944, 0.159388, 0.158135, 0.158743, 0.159234, 0.159626, 0.159314, 0.159253, 0.159534, 0.159479, 0.159845, 0.159304, 0.15934, 0.159413, 0.159237, 0.157946, 0.159328, 0.159246, 0.159543], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = jjj
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	3
        Additions: 		1150
        Multiplications: 	352
        Divisions: 		0
        Logical: 		0
        Reads: 			1857
        Writes: 		206
        Comparisons:		10
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest40.exe __orio_perftest40.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest40.exe  
Program Test Output: 
{'[0, 4, 2, 0, 2, 0, 1, 0, 3, 0, 0, 11, 1, 0, 1, 0, 1, 0]' : 0.129564}
{'[0, 4, 2, 0, 2, 0, 1, 0, 3, 0, 0, 11, 1, 0, 1, 0, 1, 0]' : 0.130543}
{'[0, 4, 2, 0, 2, 0, 1, 0, 3, 0, 0, 11, 1, 0, 1, 0, 1, 0]' : 0.125752}
{'[0, 4, 2, 0, 2, 0, 1, 0, 3, 0, 0, 11, 1, 0, 1, 0, 1, 0]' : 0.112384}
{'[0, 4, 2, 0, 2, 0, 1, 0, 3, 0, 0, 11, 1, 0, 1, 0, 1, 0]' : 0.112407}
{'[0, 4, 2, 0, 2, 0, 1, 0, 3, 0, 0, 11, 1, 0, 1, 0, 1, 0]' : 0.112593}
{'[0, 4, 2, 0, 2, 0, 1, 0, 3, 0, 0, 11, 1, 0, 1, 0, 1, 0]' : 0.112329}
{'[0, 4, 2, 0, 2, 0, 1, 0, 3, 0, 0, 11, 1, 0, 1, 0, 1, 0]' : 0.112543}
{'[0, 4, 2, 0, 2, 0, 1, 0, 3, 0, 0, 11, 1, 0, 1, 0, 1, 0]' : 0.112362}
{'[0, 4, 2, 0, 2, 0, 1, 0, 3, 0, 0, 11, 1, 0, 1, 0, 1, 0]' : 0.112522}
{'[0, 4, 2, 0, 2, 0, 1, 0, 3, 0, 0, 11, 1, 0, 1, 0, 1, 0]' : 0.112264}
{'[0, 4, 2, 0, 2, 0, 1, 0, 3, 0, 0, 11, 1, 0, 1, 0, 1, 0]' : 0.112409}
{'[0, 4, 2, 0, 2, 0, 1, 0, 3, 0, 0, 11, 1, 0, 1, 0, 1, 0]' : 0.112358}
{'[0, 4, 2, 0, 2, 0, 1, 0, 3, 0, 0, 11, 1, 0, 1, 0, 1, 0]' : 0.112774}
{'[0, 4, 2, 0, 2, 0, 1, 0, 3, 0, 0, 11, 1, 0, 1, 0, 1, 0]' : 0.112177}
{'[0, 4, 2, 0, 2, 0, 1, 0, 3, 0, 0, 11, 1, 0, 1, 0, 1, 0]' : 0.112708}
{'[0, 4, 2, 0, 2, 0, 1, 0, 3, 0, 0, 11, 1, 0, 1, 0, 1, 0]' : 0.112269}
{'[0, 4, 2, 0, 2, 0, 1, 0, 3, 0, 0, 11, 1, 0, 1, 0, 1, 0]' : 0.112412}
{'[0, 4, 2, 0, 2, 0, 1, 0, 3, 0, 0, 11, 1, 0, 1, 0, 1, 0]' : 0.11209}
{'[0, 4, 2, 0, 2, 0, 1, 0, 3, 0, 0, 11, 1, 0, 1, 0, 1, 0]' : 0.112388}
{'[0, 4, 2, 0, 2, 0, 1, 0, 3, 0, 0, 11, 1, 0, 1, 0, 1, 0]' : 0.112313}
{'[0, 4, 2, 0, 2, 0, 1, 0, 3, 0, 0, 11, 1, 0, 1, 0, 1, 0]' : 0.112462}
{'[0, 4, 2, 0, 2, 0, 1, 0, 3, 0, 0, 11, 1, 0, 1, 0, 1, 0]' : 0.112177}
{'[0, 4, 2, 0, 2, 0, 1, 0, 3, 0, 0, 11, 1, 0, 1, 0, 1, 0]' : 0.112389}
{'[0, 4, 2, 0, 2, 0, 1, 0, 3, 0, 0, 11, 1, 0, 1, 0, 1, 0]' : 0.112232}
{'[0, 4, 2, 0, 2, 0, 1, 0, 3, 0, 0, 11, 1, 0, 1, 0, 1, 0]' : 0.112367}
{'[0, 4, 2, 0, 2, 0, 1, 0, 3, 0, 0, 11, 1, 0, 1, 0, 1, 0]' : 0.112052}
{'[0, 4, 2, 0, 2, 0, 1, 0, 3, 0, 0, 11, 1, 0, 1, 0, 1, 0]' : 0.112335}
{'[0, 4, 2, 0, 2, 0, 1, 0, 3, 0, 0, 11, 1, 0, 1, 0, 1, 0]' : 0.113178}
{'[0, 4, 2, 0, 2, 0, 1, 0, 3, 0, 0, 11, 1, 0, 1, 0, 1, 0]' : 0.11261}

out:
 ["{'[0, 4, 2, 0, 2, 0, 1, 0, 3, 0, 0, 11, 1, 0, 1, 0, 1, 0]' : 0.129564}", "{'[0, 4, 2, 0, 2, 0, 1, 0, 3, 0, 0, 11, 1, 0, 1, 0, 1, 0]' : 0.130543}", "{'[0, 4, 2, 0, 2, 0, 1, 0, 3, 0, 0, 11, 1, 0, 1, 0, 1, 0]' : 0.125752}", "{'[0, 4, 2, 0, 2, 0, 1, 0, 3, 0, 0, 11, 1, 0, 1, 0, 1, 0]' : 0.112384}", "{'[0, 4, 2, 0, 2, 0, 1, 0, 3, 0, 0, 11, 1, 0, 1, 0, 1, 0]' : 0.112407}", "{'[0, 4, 2, 0, 2, 0, 1, 0, 3, 0, 0, 11, 1, 0, 1, 0, 1, 0]' : 0.112593}", "{'[0, 4, 2, 0, 2, 0, 1, 0, 3, 0, 0, 11, 1, 0, 1, 0, 1, 0]' : 0.112329}", "{'[0, 4, 2, 0, 2, 0, 1, 0, 3, 0, 0, 11, 1, 0, 1, 0, 1, 0]' : 0.112543}", "{'[0, 4, 2, 0, 2, 0, 1, 0, 3, 0, 0, 11, 1, 0, 1, 0, 1, 0]' : 0.112362}", "{'[0, 4, 2, 0, 2, 0, 1, 0, 3, 0, 0, 11, 1, 0, 1, 0, 1, 0]' : 0.112522}", "{'[0, 4, 2, 0, 2, 0, 1, 0, 3, 0, 0, 11, 1, 0, 1, 0, 1, 0]' : 0.112264}", "{'[0, 4, 2, 0, 2, 0, 1, 0, 3, 0, 0, 11, 1, 0, 1, 0, 1, 0]' : 0.112409}", "{'[0, 4, 2, 0, 2, 0, 1, 0, 3, 0, 0, 11, 1, 0, 1, 0, 1, 0]' : 0.112358}", "{'[0, 4, 2, 0, 2, 0, 1, 0, 3, 0, 0, 11, 1, 0, 1, 0, 1, 0]' : 0.112774}", "{'[0, 4, 2, 0, 2, 0, 1, 0, 3, 0, 0, 11, 1, 0, 1, 0, 1, 0]' : 0.112177}", "{'[0, 4, 2, 0, 2, 0, 1, 0, 3, 0, 0, 11, 1, 0, 1, 0, 1, 0]' : 0.112708}", "{'[0, 4, 2, 0, 2, 0, 1, 0, 3, 0, 0, 11, 1, 0, 1, 0, 1, 0]' : 0.112269}", "{'[0, 4, 2, 0, 2, 0, 1, 0, 3, 0, 0, 11, 1, 0, 1, 0, 1, 0]' : 0.112412}", "{'[0, 4, 2, 0, 2, 0, 1, 0, 3, 0, 0, 11, 1, 0, 1, 0, 1, 0]' : 0.11209}", "{'[0, 4, 2, 0, 2, 0, 1, 0, 3, 0, 0, 11, 1, 0, 1, 0, 1, 0]' : 0.112388}", "{'[0, 4, 2, 0, 2, 0, 1, 0, 3, 0, 0, 11, 1, 0, 1, 0, 1, 0]' : 0.112313}", "{'[0, 4, 2, 0, 2, 0, 1, 0, 3, 0, 0, 11, 1, 0, 1, 0, 1, 0]' : 0.112462}", "{'[0, 4, 2, 0, 2, 0, 1, 0, 3, 0, 0, 11, 1, 0, 1, 0, 1, 0]' : 0.112177}", "{'[0, 4, 2, 0, 2, 0, 1, 0, 3, 0, 0, 11, 1, 0, 1, 0, 1, 0]' : 0.112389}", "{'[0, 4, 2, 0, 2, 0, 1, 0, 3, 0, 0, 11, 1, 0, 1, 0, 1, 0]' : 0.112232}", "{'[0, 4, 2, 0, 2, 0, 1, 0, 3, 0, 0, 11, 1, 0, 1, 0, 1, 0]' : 0.112367}", "{'[0, 4, 2, 0, 2, 0, 1, 0, 3, 0, 0, 11, 1, 0, 1, 0, 1, 0]' : 0.112052}", "{'[0, 4, 2, 0, 2, 0, 1, 0, 3, 0, 0, 11, 1, 0, 1, 0, 1, 0]' : 0.112335}", "{'[0, 4, 2, 0, 2, 0, 1, 0, 3, 0, 0, 11, 1, 0, 1, 0, 1, 0]' : 0.113178}", "{'[0, 4, 2, 0, 2, 0, 1, 0, 3, 0, 0, 11, 1, 0, 1, 0, 1, 0]' : 0.11261}"]
returning from 'run': {'[0, 4, 2, 0, 2, 0, 1, 0, 3, 0, 0, 11, 1, 0, 1, 0, 1, 0]': ([0.129564, 0.130543, 0.125752, 0.112384, 0.112407, 0.112593, 0.112329, 0.112543, 0.112362, 0.112522, 0.112264, 0.112409, 0.112358, 0.112774, 0.112177, 0.112708, 0.112269, 0.112412, 0.11209, 0.112388, 0.112313, 0.112462, 0.112177, 0.112389, 0.112232, 0.112367, 0.112052, 0.112335, 0.113178, 0.11261], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 4, 2, 0, 2, 0, 1, 0, 3, 0, 0, 11, 1, 0, 1, 0, 1, 0]': ([0.129564, 0.130543, 0.125752, 0.112384, 0.112407, 0.112593, 0.112329, 0.112543, 0.112362, 0.112522, 0.112264, 0.112409, 0.112358, 0.112774, 0.112177, 0.112708, 0.112269, 0.112412, 0.11209, 0.112388, 0.112313, 0.112462, 0.112177, 0.112389, 0.112232, 0.112367, 0.112052, 0.112335, 0.113178, 0.11261], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	5
        Additions: 		2473
        Multiplications: 	756
        Divisions: 		0
        Logical: 		0
        Reads: 			3997
        Writes: 		453
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest41.exe __orio_perftest41.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest41.exe  
Program Test Output: 
{'[0, 3, 0, 2, 2, 4, 0, 0, 29, 0, 4, 26, 1, 1, 0, 0, 0, 0]' : 0.112378}
{'[0, 3, 0, 2, 2, 4, 0, 0, 29, 0, 4, 26, 1, 1, 0, 0, 0, 0]' : 0.113479}
{'[0, 3, 0, 2, 2, 4, 0, 0, 29, 0, 4, 26, 1, 1, 0, 0, 0, 0]' : 0.115106}
{'[0, 3, 0, 2, 2, 4, 0, 0, 29, 0, 4, 26, 1, 1, 0, 0, 0, 0]' : 0.115497}
{'[0, 3, 0, 2, 2, 4, 0, 0, 29, 0, 4, 26, 1, 1, 0, 0, 0, 0]' : 0.114945}
{'[0, 3, 0, 2, 2, 4, 0, 0, 29, 0, 4, 26, 1, 1, 0, 0, 0, 0]' : 0.110737}
{'[0, 3, 0, 2, 2, 4, 0, 0, 29, 0, 4, 26, 1, 1, 0, 0, 0, 0]' : 0.11211}
{'[0, 3, 0, 2, 2, 4, 0, 0, 29, 0, 4, 26, 1, 1, 0, 0, 0, 0]' : 0.112254}
{'[0, 3, 0, 2, 2, 4, 0, 0, 29, 0, 4, 26, 1, 1, 0, 0, 0, 0]' : 0.112242}
{'[0, 3, 0, 2, 2, 4, 0, 0, 29, 0, 4, 26, 1, 1, 0, 0, 0, 0]' : 0.112165}
{'[0, 3, 0, 2, 2, 4, 0, 0, 29, 0, 4, 26, 1, 1, 0, 0, 0, 0]' : 0.114967}
{'[0, 3, 0, 2, 2, 4, 0, 0, 29, 0, 4, 26, 1, 1, 0, 0, 0, 0]' : 0.112377}
{'[0, 3, 0, 2, 2, 4, 0, 0, 29, 0, 4, 26, 1, 1, 0, 0, 0, 0]' : 0.112322}
{'[0, 3, 0, 2, 2, 4, 0, 0, 29, 0, 4, 26, 1, 1, 0, 0, 0, 0]' : 0.109156}
{'[0, 3, 0, 2, 2, 4, 0, 0, 29, 0, 4, 26, 1, 1, 0, 0, 0, 0]' : 0.111122}
{'[0, 3, 0, 2, 2, 4, 0, 0, 29, 0, 4, 26, 1, 1, 0, 0, 0, 0]' : 0.112354}
{'[0, 3, 0, 2, 2, 4, 0, 0, 29, 0, 4, 26, 1, 1, 0, 0, 0, 0]' : 0.112875}
{'[0, 3, 0, 2, 2, 4, 0, 0, 29, 0, 4, 26, 1, 1, 0, 0, 0, 0]' : 0.111106}
{'[0, 3, 0, 2, 2, 4, 0, 0, 29, 0, 4, 26, 1, 1, 0, 0, 0, 0]' : 0.109103}
{'[0, 3, 0, 2, 2, 4, 0, 0, 29, 0, 4, 26, 1, 1, 0, 0, 0, 0]' : 0.112435}
{'[0, 3, 0, 2, 2, 4, 0, 0, 29, 0, 4, 26, 1, 1, 0, 0, 0, 0]' : 0.112412}
{'[0, 3, 0, 2, 2, 4, 0, 0, 29, 0, 4, 26, 1, 1, 0, 0, 0, 0]' : 0.112106}
{'[0, 3, 0, 2, 2, 4, 0, 0, 29, 0, 4, 26, 1, 1, 0, 0, 0, 0]' : 0.109848}
{'[0, 3, 0, 2, 2, 4, 0, 0, 29, 0, 4, 26, 1, 1, 0, 0, 0, 0]' : 0.110893}
{'[0, 3, 0, 2, 2, 4, 0, 0, 29, 0, 4, 26, 1, 1, 0, 0, 0, 0]' : 0.112425}
{'[0, 3, 0, 2, 2, 4, 0, 0, 29, 0, 4, 26, 1, 1, 0, 0, 0, 0]' : 0.112084}
{'[0, 3, 0, 2, 2, 4, 0, 0, 29, 0, 4, 26, 1, 1, 0, 0, 0, 0]' : 0.111696}
{'[0, 3, 0, 2, 2, 4, 0, 0, 29, 0, 4, 26, 1, 1, 0, 0, 0, 0]' : 0.109377}
{'[0, 3, 0, 2, 2, 4, 0, 0, 29, 0, 4, 26, 1, 1, 0, 0, 0, 0]' : 0.112246}
{'[0, 3, 0, 2, 2, 4, 0, 0, 29, 0, 4, 26, 1, 1, 0, 0, 0, 0]' : 0.112246}

out:
 ["{'[0, 3, 0, 2, 2, 4, 0, 0, 29, 0, 4, 26, 1, 1, 0, 0, 0, 0]' : 0.112378}", "{'[0, 3, 0, 2, 2, 4, 0, 0, 29, 0, 4, 26, 1, 1, 0, 0, 0, 0]' : 0.113479}", "{'[0, 3, 0, 2, 2, 4, 0, 0, 29, 0, 4, 26, 1, 1, 0, 0, 0, 0]' : 0.115106}", "{'[0, 3, 0, 2, 2, 4, 0, 0, 29, 0, 4, 26, 1, 1, 0, 0, 0, 0]' : 0.115497}", "{'[0, 3, 0, 2, 2, 4, 0, 0, 29, 0, 4, 26, 1, 1, 0, 0, 0, 0]' : 0.114945}", "{'[0, 3, 0, 2, 2, 4, 0, 0, 29, 0, 4, 26, 1, 1, 0, 0, 0, 0]' : 0.110737}", "{'[0, 3, 0, 2, 2, 4, 0, 0, 29, 0, 4, 26, 1, 1, 0, 0, 0, 0]' : 0.11211}", "{'[0, 3, 0, 2, 2, 4, 0, 0, 29, 0, 4, 26, 1, 1, 0, 0, 0, 0]' : 0.112254}", "{'[0, 3, 0, 2, 2, 4, 0, 0, 29, 0, 4, 26, 1, 1, 0, 0, 0, 0]' : 0.112242}", "{'[0, 3, 0, 2, 2, 4, 0, 0, 29, 0, 4, 26, 1, 1, 0, 0, 0, 0]' : 0.112165}", "{'[0, 3, 0, 2, 2, 4, 0, 0, 29, 0, 4, 26, 1, 1, 0, 0, 0, 0]' : 0.114967}", "{'[0, 3, 0, 2, 2, 4, 0, 0, 29, 0, 4, 26, 1, 1, 0, 0, 0, 0]' : 0.112377}", "{'[0, 3, 0, 2, 2, 4, 0, 0, 29, 0, 4, 26, 1, 1, 0, 0, 0, 0]' : 0.112322}", "{'[0, 3, 0, 2, 2, 4, 0, 0, 29, 0, 4, 26, 1, 1, 0, 0, 0, 0]' : 0.109156}", "{'[0, 3, 0, 2, 2, 4, 0, 0, 29, 0, 4, 26, 1, 1, 0, 0, 0, 0]' : 0.111122}", "{'[0, 3, 0, 2, 2, 4, 0, 0, 29, 0, 4, 26, 1, 1, 0, 0, 0, 0]' : 0.112354}", "{'[0, 3, 0, 2, 2, 4, 0, 0, 29, 0, 4, 26, 1, 1, 0, 0, 0, 0]' : 0.112875}", "{'[0, 3, 0, 2, 2, 4, 0, 0, 29, 0, 4, 26, 1, 1, 0, 0, 0, 0]' : 0.111106}", "{'[0, 3, 0, 2, 2, 4, 0, 0, 29, 0, 4, 26, 1, 1, 0, 0, 0, 0]' : 0.109103}", "{'[0, 3, 0, 2, 2, 4, 0, 0, 29, 0, 4, 26, 1, 1, 0, 0, 0, 0]' : 0.112435}", "{'[0, 3, 0, 2, 2, 4, 0, 0, 29, 0, 4, 26, 1, 1, 0, 0, 0, 0]' : 0.112412}", "{'[0, 3, 0, 2, 2, 4, 0, 0, 29, 0, 4, 26, 1, 1, 0, 0, 0, 0]' : 0.112106}", "{'[0, 3, 0, 2, 2, 4, 0, 0, 29, 0, 4, 26, 1, 1, 0, 0, 0, 0]' : 0.109848}", "{'[0, 3, 0, 2, 2, 4, 0, 0, 29, 0, 4, 26, 1, 1, 0, 0, 0, 0]' : 0.110893}", "{'[0, 3, 0, 2, 2, 4, 0, 0, 29, 0, 4, 26, 1, 1, 0, 0, 0, 0]' : 0.112425}", "{'[0, 3, 0, 2, 2, 4, 0, 0, 29, 0, 4, 26, 1, 1, 0, 0, 0, 0]' : 0.112084}", "{'[0, 3, 0, 2, 2, 4, 0, 0, 29, 0, 4, 26, 1, 1, 0, 0, 0, 0]' : 0.111696}", "{'[0, 3, 0, 2, 2, 4, 0, 0, 29, 0, 4, 26, 1, 1, 0, 0, 0, 0]' : 0.109377}", "{'[0, 3, 0, 2, 2, 4, 0, 0, 29, 0, 4, 26, 1, 1, 0, 0, 0, 0]' : 0.112246}", "{'[0, 3, 0, 2, 2, 4, 0, 0, 29, 0, 4, 26, 1, 1, 0, 0, 0, 0]' : 0.112246}"]
returning from 'run': {'[0, 3, 0, 2, 2, 4, 0, 0, 29, 0, 4, 26, 1, 1, 0, 0, 0, 0]': ([0.112378, 0.113479, 0.115106, 0.115497, 0.114945, 0.110737, 0.11211, 0.112254, 0.112242, 0.112165, 0.114967, 0.112377, 0.112322, 0.109156, 0.111122, 0.112354, 0.112875, 0.111106, 0.109103, 0.112435, 0.112412, 0.112106, 0.109848, 0.110893, 0.112425, 0.112084, 0.111696, 0.109377, 0.112246, 0.112246], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 3, 0, 2, 2, 4, 0, 0, 29, 0, 4, 26, 1, 1, 0, 0, 0, 0]': ([0.112378, 0.113479, 0.115106, 0.115497, 0.114945, 0.110737, 0.11211, 0.112254, 0.112242, 0.112165, 0.114967, 0.112377, 0.112322, 0.109156, 0.111122, 0.112354, 0.112875, 0.111106, 0.109103, 0.112435, 0.112412, 0.112106, 0.109848, 0.110893, 0.112425, 0.112084, 0.111696, 0.109377, 0.112246, 0.112246], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	43
        Max loop nest depth: 	6
        Additions: 		1445
        Multiplications: 	560
        Divisions: 		0
        Logical: 		0
        Reads: 			2845
        Writes: 		525
        Comparisons:		43
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest42.exe __orio_perftest42.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest42.exe  
Program Test Output: 
{'[2, 6, 0, 6, 6, 6, 1, 0, 23, 4, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.0946219}
{'[2, 6, 0, 6, 6, 6, 1, 0, 23, 4, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.0944901}
{'[2, 6, 0, 6, 6, 6, 1, 0, 23, 4, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.094779}
{'[2, 6, 0, 6, 6, 6, 1, 0, 23, 4, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.0945451}
{'[2, 6, 0, 6, 6, 6, 1, 0, 23, 4, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.094007}
{'[2, 6, 0, 6, 6, 6, 1, 0, 23, 4, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.0922201}
{'[2, 6, 0, 6, 6, 6, 1, 0, 23, 4, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.0922501}
{'[2, 6, 0, 6, 6, 6, 1, 0, 23, 4, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.0923901}
{'[2, 6, 0, 6, 6, 6, 1, 0, 23, 4, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.0953441}
{'[2, 6, 0, 6, 6, 6, 1, 0, 23, 4, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.0946112}
{'[2, 6, 0, 6, 6, 6, 1, 0, 23, 4, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.094821}
{'[2, 6, 0, 6, 6, 6, 1, 0, 23, 4, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.0941689}
{'[2, 6, 0, 6, 6, 6, 1, 0, 23, 4, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.0924361}
{'[2, 6, 0, 6, 6, 6, 1, 0, 23, 4, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.0954342}
{'[2, 6, 0, 6, 6, 6, 1, 0, 23, 4, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.0965569}
{'[2, 6, 0, 6, 6, 6, 1, 0, 23, 4, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.0964961}
{'[2, 6, 0, 6, 6, 6, 1, 0, 23, 4, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.0961461}
{'[2, 6, 0, 6, 6, 6, 1, 0, 23, 4, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.0946891}
{'[2, 6, 0, 6, 6, 6, 1, 0, 23, 4, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.0955069}
{'[2, 6, 0, 6, 6, 6, 1, 0, 23, 4, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.0964069}
{'[2, 6, 0, 6, 6, 6, 1, 0, 23, 4, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.094532}
{'[2, 6, 0, 6, 6, 6, 1, 0, 23, 4, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.0945361}
{'[2, 6, 0, 6, 6, 6, 1, 0, 23, 4, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.094532}
{'[2, 6, 0, 6, 6, 6, 1, 0, 23, 4, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.0948651}
{'[2, 6, 0, 6, 6, 6, 1, 0, 23, 4, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.0944989}
{'[2, 6, 0, 6, 6, 6, 1, 0, 23, 4, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.0925689}
{'[2, 6, 0, 6, 6, 6, 1, 0, 23, 4, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.09273}
{'[2, 6, 0, 6, 6, 6, 1, 0, 23, 4, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.0935349}
{'[2, 6, 0, 6, 6, 6, 1, 0, 23, 4, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.0923851}
{'[2, 6, 0, 6, 6, 6, 1, 0, 23, 4, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.0959661}

out:
 ["{'[2, 6, 0, 6, 6, 6, 1, 0, 23, 4, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.0946219}", "{'[2, 6, 0, 6, 6, 6, 1, 0, 23, 4, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.0944901}", "{'[2, 6, 0, 6, 6, 6, 1, 0, 23, 4, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.094779}", "{'[2, 6, 0, 6, 6, 6, 1, 0, 23, 4, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.0945451}", "{'[2, 6, 0, 6, 6, 6, 1, 0, 23, 4, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.094007}", "{'[2, 6, 0, 6, 6, 6, 1, 0, 23, 4, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.0922201}", "{'[2, 6, 0, 6, 6, 6, 1, 0, 23, 4, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.0922501}", "{'[2, 6, 0, 6, 6, 6, 1, 0, 23, 4, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.0923901}", "{'[2, 6, 0, 6, 6, 6, 1, 0, 23, 4, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.0953441}", "{'[2, 6, 0, 6, 6, 6, 1, 0, 23, 4, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.0946112}", "{'[2, 6, 0, 6, 6, 6, 1, 0, 23, 4, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.094821}", "{'[2, 6, 0, 6, 6, 6, 1, 0, 23, 4, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.0941689}", "{'[2, 6, 0, 6, 6, 6, 1, 0, 23, 4, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.0924361}", "{'[2, 6, 0, 6, 6, 6, 1, 0, 23, 4, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.0954342}", "{'[2, 6, 0, 6, 6, 6, 1, 0, 23, 4, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.0965569}", "{'[2, 6, 0, 6, 6, 6, 1, 0, 23, 4, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.0964961}", "{'[2, 6, 0, 6, 6, 6, 1, 0, 23, 4, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.0961461}", "{'[2, 6, 0, 6, 6, 6, 1, 0, 23, 4, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.0946891}", "{'[2, 6, 0, 6, 6, 6, 1, 0, 23, 4, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.0955069}", "{'[2, 6, 0, 6, 6, 6, 1, 0, 23, 4, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.0964069}", "{'[2, 6, 0, 6, 6, 6, 1, 0, 23, 4, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.094532}", "{'[2, 6, 0, 6, 6, 6, 1, 0, 23, 4, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.0945361}", "{'[2, 6, 0, 6, 6, 6, 1, 0, 23, 4, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.094532}", "{'[2, 6, 0, 6, 6, 6, 1, 0, 23, 4, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.0948651}", "{'[2, 6, 0, 6, 6, 6, 1, 0, 23, 4, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.0944989}", "{'[2, 6, 0, 6, 6, 6, 1, 0, 23, 4, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.0925689}", "{'[2, 6, 0, 6, 6, 6, 1, 0, 23, 4, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.09273}", "{'[2, 6, 0, 6, 6, 6, 1, 0, 23, 4, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.0935349}", "{'[2, 6, 0, 6, 6, 6, 1, 0, 23, 4, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.0923851}", "{'[2, 6, 0, 6, 6, 6, 1, 0, 23, 4, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.0959661}"]
returning from 'run': {'[2, 6, 0, 6, 6, 6, 1, 0, 23, 4, 9, 0, 1, 0, 1, 1, 0, 1]': ([0.0946219, 0.0944901, 0.094779, 0.0945451, 0.094007, 0.0922201, 0.0922501, 0.0923901, 0.0953441, 0.0946112, 0.094821, 0.0941689, 0.0924361, 0.0954342, 0.0965569, 0.0964961, 0.0961461, 0.0946891, 0.0955069, 0.0964069, 0.094532, 0.0945361, 0.094532, 0.0948651, 0.0944989, 0.0925689, 0.09273, 0.0935349, 0.0923851, 0.0959661], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 6, 0, 6, 6, 6, 1, 0, 23, 4, 9, 0, 1, 0, 1, 1, 0, 1]': ([0.0946219, 0.0944901, 0.094779, 0.0945451, 0.094007, 0.0922201, 0.0922501, 0.0923901, 0.0953441, 0.0946112, 0.094821, 0.0941689, 0.0924361, 0.0954342, 0.0965569, 0.0964961, 0.0961461, 0.0946891, 0.0955069, 0.0964069, 0.094532, 0.0945361, 0.094532, 0.0948651, 0.0944989, 0.0925689, 0.09273, 0.0935349, 0.0923851, 0.0959661], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		280
        Multiplications: 	92
        Divisions: 		0
        Logical: 		0
        Reads: 			636
        Writes: 		103
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest43.exe __orio_perftest43.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest43.exe  
Program Test Output: 
{'[4, 6, 6, 2, 6, 4, 0, 1, 24, 0, 29, 5, 0, 1, 0, 0, 0, 0]' : 0.283756}
{'[4, 6, 6, 2, 6, 4, 0, 1, 24, 0, 29, 5, 0, 1, 0, 0, 0, 0]' : 0.283418}
{'[4, 6, 6, 2, 6, 4, 0, 1, 24, 0, 29, 5, 0, 1, 0, 0, 0, 0]' : 0.25983}
{'[4, 6, 6, 2, 6, 4, 0, 1, 24, 0, 29, 5, 0, 1, 0, 0, 0, 0]' : 0.24493}
{'[4, 6, 6, 2, 6, 4, 0, 1, 24, 0, 29, 5, 0, 1, 0, 0, 0, 0]' : 0.251489}
{'[4, 6, 6, 2, 6, 4, 0, 1, 24, 0, 29, 5, 0, 1, 0, 0, 0, 0]' : 0.247561}
{'[4, 6, 6, 2, 6, 4, 0, 1, 24, 0, 29, 5, 0, 1, 0, 0, 0, 0]' : 0.24429}
{'[4, 6, 6, 2, 6, 4, 0, 1, 24, 0, 29, 5, 0, 1, 0, 0, 0, 0]' : 0.244831}
{'[4, 6, 6, 2, 6, 4, 0, 1, 24, 0, 29, 5, 0, 1, 0, 0, 0, 0]' : 0.251215}
{'[4, 6, 6, 2, 6, 4, 0, 1, 24, 0, 29, 5, 0, 1, 0, 0, 0, 0]' : 0.247455}
{'[4, 6, 6, 2, 6, 4, 0, 1, 24, 0, 29, 5, 0, 1, 0, 0, 0, 0]' : 0.250241}
{'[4, 6, 6, 2, 6, 4, 0, 1, 24, 0, 29, 5, 0, 1, 0, 0, 0, 0]' : 0.245931}
{'[4, 6, 6, 2, 6, 4, 0, 1, 24, 0, 29, 5, 0, 1, 0, 0, 0, 0]' : 0.243552}
{'[4, 6, 6, 2, 6, 4, 0, 1, 24, 0, 29, 5, 0, 1, 0, 0, 0, 0]' : 0.244852}
{'[4, 6, 6, 2, 6, 4, 0, 1, 24, 0, 29, 5, 0, 1, 0, 0, 0, 0]' : 0.250669}
{'[4, 6, 6, 2, 6, 4, 0, 1, 24, 0, 29, 5, 0, 1, 0, 0, 0, 0]' : 0.252067}
{'[4, 6, 6, 2, 6, 4, 0, 1, 24, 0, 29, 5, 0, 1, 0, 0, 0, 0]' : 0.246623}
{'[4, 6, 6, 2, 6, 4, 0, 1, 24, 0, 29, 5, 0, 1, 0, 0, 0, 0]' : 0.239898}
{'[4, 6, 6, 2, 6, 4, 0, 1, 24, 0, 29, 5, 0, 1, 0, 0, 0, 0]' : 0.242851}
{'[4, 6, 6, 2, 6, 4, 0, 1, 24, 0, 29, 5, 0, 1, 0, 0, 0, 0]' : 0.248099}
{'[4, 6, 6, 2, 6, 4, 0, 1, 24, 0, 29, 5, 0, 1, 0, 0, 0, 0]' : 0.252083}
{'[4, 6, 6, 2, 6, 4, 0, 1, 24, 0, 29, 5, 0, 1, 0, 0, 0, 0]' : 0.245869}
{'[4, 6, 6, 2, 6, 4, 0, 1, 24, 0, 29, 5, 0, 1, 0, 0, 0, 0]' : 0.242439}
{'[4, 6, 6, 2, 6, 4, 0, 1, 24, 0, 29, 5, 0, 1, 0, 0, 0, 0]' : 0.244749}
{'[4, 6, 6, 2, 6, 4, 0, 1, 24, 0, 29, 5, 0, 1, 0, 0, 0, 0]' : 0.242206}
{'[4, 6, 6, 2, 6, 4, 0, 1, 24, 0, 29, 5, 0, 1, 0, 0, 0, 0]' : 0.240961}
{'[4, 6, 6, 2, 6, 4, 0, 1, 24, 0, 29, 5, 0, 1, 0, 0, 0, 0]' : 0.245588}
{'[4, 6, 6, 2, 6, 4, 0, 1, 24, 0, 29, 5, 0, 1, 0, 0, 0, 0]' : 0.252267}
{'[4, 6, 6, 2, 6, 4, 0, 1, 24, 0, 29, 5, 0, 1, 0, 0, 0, 0]' : 0.252024}
{'[4, 6, 6, 2, 6, 4, 0, 1, 24, 0, 29, 5, 0, 1, 0, 0, 0, 0]' : 0.251978}

out:
 ["{'[4, 6, 6, 2, 6, 4, 0, 1, 24, 0, 29, 5, 0, 1, 0, 0, 0, 0]' : 0.283756}", "{'[4, 6, 6, 2, 6, 4, 0, 1, 24, 0, 29, 5, 0, 1, 0, 0, 0, 0]' : 0.283418}", "{'[4, 6, 6, 2, 6, 4, 0, 1, 24, 0, 29, 5, 0, 1, 0, 0, 0, 0]' : 0.25983}", "{'[4, 6, 6, 2, 6, 4, 0, 1, 24, 0, 29, 5, 0, 1, 0, 0, 0, 0]' : 0.24493}", "{'[4, 6, 6, 2, 6, 4, 0, 1, 24, 0, 29, 5, 0, 1, 0, 0, 0, 0]' : 0.251489}", "{'[4, 6, 6, 2, 6, 4, 0, 1, 24, 0, 29, 5, 0, 1, 0, 0, 0, 0]' : 0.247561}", "{'[4, 6, 6, 2, 6, 4, 0, 1, 24, 0, 29, 5, 0, 1, 0, 0, 0, 0]' : 0.24429}", "{'[4, 6, 6, 2, 6, 4, 0, 1, 24, 0, 29, 5, 0, 1, 0, 0, 0, 0]' : 0.244831}", "{'[4, 6, 6, 2, 6, 4, 0, 1, 24, 0, 29, 5, 0, 1, 0, 0, 0, 0]' : 0.251215}", "{'[4, 6, 6, 2, 6, 4, 0, 1, 24, 0, 29, 5, 0, 1, 0, 0, 0, 0]' : 0.247455}", "{'[4, 6, 6, 2, 6, 4, 0, 1, 24, 0, 29, 5, 0, 1, 0, 0, 0, 0]' : 0.250241}", "{'[4, 6, 6, 2, 6, 4, 0, 1, 24, 0, 29, 5, 0, 1, 0, 0, 0, 0]' : 0.245931}", "{'[4, 6, 6, 2, 6, 4, 0, 1, 24, 0, 29, 5, 0, 1, 0, 0, 0, 0]' : 0.243552}", "{'[4, 6, 6, 2, 6, 4, 0, 1, 24, 0, 29, 5, 0, 1, 0, 0, 0, 0]' : 0.244852}", "{'[4, 6, 6, 2, 6, 4, 0, 1, 24, 0, 29, 5, 0, 1, 0, 0, 0, 0]' : 0.250669}", "{'[4, 6, 6, 2, 6, 4, 0, 1, 24, 0, 29, 5, 0, 1, 0, 0, 0, 0]' : 0.252067}", "{'[4, 6, 6, 2, 6, 4, 0, 1, 24, 0, 29, 5, 0, 1, 0, 0, 0, 0]' : 0.246623}", "{'[4, 6, 6, 2, 6, 4, 0, 1, 24, 0, 29, 5, 0, 1, 0, 0, 0, 0]' : 0.239898}", "{'[4, 6, 6, 2, 6, 4, 0, 1, 24, 0, 29, 5, 0, 1, 0, 0, 0, 0]' : 0.242851}", "{'[4, 6, 6, 2, 6, 4, 0, 1, 24, 0, 29, 5, 0, 1, 0, 0, 0, 0]' : 0.248099}", "{'[4, 6, 6, 2, 6, 4, 0, 1, 24, 0, 29, 5, 0, 1, 0, 0, 0, 0]' : 0.252083}", "{'[4, 6, 6, 2, 6, 4, 0, 1, 24, 0, 29, 5, 0, 1, 0, 0, 0, 0]' : 0.245869}", "{'[4, 6, 6, 2, 6, 4, 0, 1, 24, 0, 29, 5, 0, 1, 0, 0, 0, 0]' : 0.242439}", "{'[4, 6, 6, 2, 6, 4, 0, 1, 24, 0, 29, 5, 0, 1, 0, 0, 0, 0]' : 0.244749}", "{'[4, 6, 6, 2, 6, 4, 0, 1, 24, 0, 29, 5, 0, 1, 0, 0, 0, 0]' : 0.242206}", "{'[4, 6, 6, 2, 6, 4, 0, 1, 24, 0, 29, 5, 0, 1, 0, 0, 0, 0]' : 0.240961}", "{'[4, 6, 6, 2, 6, 4, 0, 1, 24, 0, 29, 5, 0, 1, 0, 0, 0, 0]' : 0.245588}", "{'[4, 6, 6, 2, 6, 4, 0, 1, 24, 0, 29, 5, 0, 1, 0, 0, 0, 0]' : 0.252267}", "{'[4, 6, 6, 2, 6, 4, 0, 1, 24, 0, 29, 5, 0, 1, 0, 0, 0, 0]' : 0.252024}", "{'[4, 6, 6, 2, 6, 4, 0, 1, 24, 0, 29, 5, 0, 1, 0, 0, 0, 0]' : 0.251978}"]
returning from 'run': {'[4, 6, 6, 2, 6, 4, 0, 1, 24, 0, 29, 5, 0, 1, 0, 0, 0, 0]': ([0.283756, 0.283418, 0.25983, 0.24493, 0.251489, 0.247561, 0.24429, 0.244831, 0.251215, 0.247455, 0.250241, 0.245931, 0.243552, 0.244852, 0.250669, 0.252067, 0.246623, 0.239898, 0.242851, 0.248099, 0.252083, 0.245869, 0.242439, 0.244749, 0.242206, 0.240961, 0.245588, 0.252267, 0.252024, 0.251978], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 6, 6, 2, 6, 4, 0, 1, 24, 0, 29, 5, 0, 1, 0, 0, 0, 0]': ([0.283756, 0.283418, 0.25983, 0.24493, 0.251489, 0.247561, 0.24429, 0.244831, 0.251215, 0.247455, 0.250241, 0.245931, 0.243552, 0.244852, 0.250669, 0.252067, 0.246623, 0.239898, 0.242851, 0.248099, 0.252083, 0.245869, 0.242439, 0.244749, 0.242206, 0.240961, 0.245588, 0.252267, 0.252024, 0.251978], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	5
        Additions: 		196
        Multiplications: 	70
        Divisions: 		0
        Logical: 		0
        Reads: 			503
        Writes: 		121
        Comparisons:		9
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest44.exe __orio_perftest44.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest44.exe  
Program Test Output: 
{'[5, 0, 0, 5, 0, 1, 0, 0, 2, 0, 26, 25, 0, 1, 0, 1, 1, 1]' : 0.184178}
{'[5, 0, 0, 5, 0, 1, 0, 0, 2, 0, 26, 25, 0, 1, 0, 1, 1, 1]' : 0.184078}
{'[5, 0, 0, 5, 0, 1, 0, 0, 2, 0, 26, 25, 0, 1, 0, 1, 1, 1]' : 0.183988}
{'[5, 0, 0, 5, 0, 1, 0, 0, 2, 0, 26, 25, 0, 1, 0, 1, 1, 1]' : 0.169124}
{'[5, 0, 0, 5, 0, 1, 0, 0, 2, 0, 26, 25, 0, 1, 0, 1, 1, 1]' : 0.15853}
{'[5, 0, 0, 5, 0, 1, 0, 0, 2, 0, 26, 25, 0, 1, 0, 1, 1, 1]' : 0.15908}
{'[5, 0, 0, 5, 0, 1, 0, 0, 2, 0, 26, 25, 0, 1, 0, 1, 1, 1]' : 0.159027}
{'[5, 0, 0, 5, 0, 1, 0, 0, 2, 0, 26, 25, 0, 1, 0, 1, 1, 1]' : 0.160078}
{'[5, 0, 0, 5, 0, 1, 0, 0, 2, 0, 26, 25, 0, 1, 0, 1, 1, 1]' : 0.156437}
{'[5, 0, 0, 5, 0, 1, 0, 0, 2, 0, 26, 25, 0, 1, 0, 1, 1, 1]' : 0.155518}
{'[5, 0, 0, 5, 0, 1, 0, 0, 2, 0, 26, 25, 0, 1, 0, 1, 1, 1]' : 0.160303}
{'[5, 0, 0, 5, 0, 1, 0, 0, 2, 0, 26, 25, 0, 1, 0, 1, 1, 1]' : 0.161997}
{'[5, 0, 0, 5, 0, 1, 0, 0, 2, 0, 26, 25, 0, 1, 0, 1, 1, 1]' : 0.15912}
{'[5, 0, 0, 5, 0, 1, 0, 0, 2, 0, 26, 25, 0, 1, 0, 1, 1, 1]' : 0.159103}
{'[5, 0, 0, 5, 0, 1, 0, 0, 2, 0, 26, 25, 0, 1, 0, 1, 1, 1]' : 0.161727}
{'[5, 0, 0, 5, 0, 1, 0, 0, 2, 0, 26, 25, 0, 1, 0, 1, 1, 1]' : 0.160635}
{'[5, 0, 0, 5, 0, 1, 0, 0, 2, 0, 26, 25, 0, 1, 0, 1, 1, 1]' : 0.157971}
{'[5, 0, 0, 5, 0, 1, 0, 0, 2, 0, 26, 25, 0, 1, 0, 1, 1, 1]' : 0.159078}
{'[5, 0, 0, 5, 0, 1, 0, 0, 2, 0, 26, 25, 0, 1, 0, 1, 1, 1]' : 0.160401}
{'[5, 0, 0, 5, 0, 1, 0, 0, 2, 0, 26, 25, 0, 1, 0, 1, 1, 1]' : 0.159277}
{'[5, 0, 0, 5, 0, 1, 0, 0, 2, 0, 26, 25, 0, 1, 0, 1, 1, 1]' : 0.163864}
{'[5, 0, 0, 5, 0, 1, 0, 0, 2, 0, 26, 25, 0, 1, 0, 1, 1, 1]' : 0.158749}
{'[5, 0, 0, 5, 0, 1, 0, 0, 2, 0, 26, 25, 0, 1, 0, 1, 1, 1]' : 0.15516}
{'[5, 0, 0, 5, 0, 1, 0, 0, 2, 0, 26, 25, 0, 1, 0, 1, 1, 1]' : 0.159649}
{'[5, 0, 0, 5, 0, 1, 0, 0, 2, 0, 26, 25, 0, 1, 0, 1, 1, 1]' : 0.159061}
{'[5, 0, 0, 5, 0, 1, 0, 0, 2, 0, 26, 25, 0, 1, 0, 1, 1, 1]' : 0.159168}
{'[5, 0, 0, 5, 0, 1, 0, 0, 2, 0, 26, 25, 0, 1, 0, 1, 1, 1]' : 0.160434}
{'[5, 0, 0, 5, 0, 1, 0, 0, 2, 0, 26, 25, 0, 1, 0, 1, 1, 1]' : 0.159798}
{'[5, 0, 0, 5, 0, 1, 0, 0, 2, 0, 26, 25, 0, 1, 0, 1, 1, 1]' : 0.156553}
{'[5, 0, 0, 5, 0, 1, 0, 0, 2, 0, 26, 25, 0, 1, 0, 1, 1, 1]' : 0.160756}

out:
 ["{'[5, 0, 0, 5, 0, 1, 0, 0, 2, 0, 26, 25, 0, 1, 0, 1, 1, 1]' : 0.184178}", "{'[5, 0, 0, 5, 0, 1, 0, 0, 2, 0, 26, 25, 0, 1, 0, 1, 1, 1]' : 0.184078}", "{'[5, 0, 0, 5, 0, 1, 0, 0, 2, 0, 26, 25, 0, 1, 0, 1, 1, 1]' : 0.183988}", "{'[5, 0, 0, 5, 0, 1, 0, 0, 2, 0, 26, 25, 0, 1, 0, 1, 1, 1]' : 0.169124}", "{'[5, 0, 0, 5, 0, 1, 0, 0, 2, 0, 26, 25, 0, 1, 0, 1, 1, 1]' : 0.15853}", "{'[5, 0, 0, 5, 0, 1, 0, 0, 2, 0, 26, 25, 0, 1, 0, 1, 1, 1]' : 0.15908}", "{'[5, 0, 0, 5, 0, 1, 0, 0, 2, 0, 26, 25, 0, 1, 0, 1, 1, 1]' : 0.159027}", "{'[5, 0, 0, 5, 0, 1, 0, 0, 2, 0, 26, 25, 0, 1, 0, 1, 1, 1]' : 0.160078}", "{'[5, 0, 0, 5, 0, 1, 0, 0, 2, 0, 26, 25, 0, 1, 0, 1, 1, 1]' : 0.156437}", "{'[5, 0, 0, 5, 0, 1, 0, 0, 2, 0, 26, 25, 0, 1, 0, 1, 1, 1]' : 0.155518}", "{'[5, 0, 0, 5, 0, 1, 0, 0, 2, 0, 26, 25, 0, 1, 0, 1, 1, 1]' : 0.160303}", "{'[5, 0, 0, 5, 0, 1, 0, 0, 2, 0, 26, 25, 0, 1, 0, 1, 1, 1]' : 0.161997}", "{'[5, 0, 0, 5, 0, 1, 0, 0, 2, 0, 26, 25, 0, 1, 0, 1, 1, 1]' : 0.15912}", "{'[5, 0, 0, 5, 0, 1, 0, 0, 2, 0, 26, 25, 0, 1, 0, 1, 1, 1]' : 0.159103}", "{'[5, 0, 0, 5, 0, 1, 0, 0, 2, 0, 26, 25, 0, 1, 0, 1, 1, 1]' : 0.161727}", "{'[5, 0, 0, 5, 0, 1, 0, 0, 2, 0, 26, 25, 0, 1, 0, 1, 1, 1]' : 0.160635}", "{'[5, 0, 0, 5, 0, 1, 0, 0, 2, 0, 26, 25, 0, 1, 0, 1, 1, 1]' : 0.157971}", "{'[5, 0, 0, 5, 0, 1, 0, 0, 2, 0, 26, 25, 0, 1, 0, 1, 1, 1]' : 0.159078}", "{'[5, 0, 0, 5, 0, 1, 0, 0, 2, 0, 26, 25, 0, 1, 0, 1, 1, 1]' : 0.160401}", "{'[5, 0, 0, 5, 0, 1, 0, 0, 2, 0, 26, 25, 0, 1, 0, 1, 1, 1]' : 0.159277}", "{'[5, 0, 0, 5, 0, 1, 0, 0, 2, 0, 26, 25, 0, 1, 0, 1, 1, 1]' : 0.163864}", "{'[5, 0, 0, 5, 0, 1, 0, 0, 2, 0, 26, 25, 0, 1, 0, 1, 1, 1]' : 0.158749}", "{'[5, 0, 0, 5, 0, 1, 0, 0, 2, 0, 26, 25, 0, 1, 0, 1, 1, 1]' : 0.15516}", "{'[5, 0, 0, 5, 0, 1, 0, 0, 2, 0, 26, 25, 0, 1, 0, 1, 1, 1]' : 0.159649}", "{'[5, 0, 0, 5, 0, 1, 0, 0, 2, 0, 26, 25, 0, 1, 0, 1, 1, 1]' : 0.159061}", "{'[5, 0, 0, 5, 0, 1, 0, 0, 2, 0, 26, 25, 0, 1, 0, 1, 1, 1]' : 0.159168}", "{'[5, 0, 0, 5, 0, 1, 0, 0, 2, 0, 26, 25, 0, 1, 0, 1, 1, 1]' : 0.160434}", "{'[5, 0, 0, 5, 0, 1, 0, 0, 2, 0, 26, 25, 0, 1, 0, 1, 1, 1]' : 0.159798}", "{'[5, 0, 0, 5, 0, 1, 0, 0, 2, 0, 26, 25, 0, 1, 0, 1, 1, 1]' : 0.156553}", "{'[5, 0, 0, 5, 0, 1, 0, 0, 2, 0, 26, 25, 0, 1, 0, 1, 1, 1]' : 0.160756}"]
returning from 'run': {'[5, 0, 0, 5, 0, 1, 0, 0, 2, 0, 26, 25, 0, 1, 0, 1, 1, 1]': ([0.184178, 0.184078, 0.183988, 0.169124, 0.15853, 0.15908, 0.159027, 0.160078, 0.156437, 0.155518, 0.160303, 0.161997, 0.15912, 0.159103, 0.161727, 0.160635, 0.157971, 0.159078, 0.160401, 0.159277, 0.163864, 0.158749, 0.15516, 0.159649, 0.159061, 0.159168, 0.160434, 0.159798, 0.156553, 0.160756], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 0, 0, 5, 0, 1, 0, 0, 2, 0, 26, 25, 0, 1, 0, 1, 1, 1]': ([0.184178, 0.184078, 0.183988, 0.169124, 0.15853, 0.15908, 0.159027, 0.160078, 0.156437, 0.155518, 0.160303, 0.161997, 0.15912, 0.159103, 0.161727, 0.160635, 0.157971, 0.159078, 0.160401, 0.159277, 0.163864, 0.158749, 0.15516, 0.159649, 0.159061, 0.159168, 0.160434, 0.159798, 0.156553, 0.160756], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = jjj
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = kkk
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	5
        Additions: 		1573
        Multiplications: 	684
        Divisions: 		0
        Logical: 		0
        Reads: 			3002
        Writes: 		506
        Comparisons:		22
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest45.exe __orio_perftest45.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest45.exe  
Program Test Output: 
{'[2, 5, 5, 6, 3, 3, 1, 1, 27, 0, 28, 29, 1, 0, 1, 1, 1, 0]' : 0.109366}
{'[2, 5, 5, 6, 3, 3, 1, 1, 27, 0, 28, 29, 1, 0, 1, 1, 1, 0]' : 0.107925}
{'[2, 5, 5, 6, 3, 3, 1, 1, 27, 0, 28, 29, 1, 0, 1, 1, 1, 0]' : 0.106475}
{'[2, 5, 5, 6, 3, 3, 1, 1, 27, 0, 28, 29, 1, 0, 1, 1, 1, 0]' : 0.10898}
{'[2, 5, 5, 6, 3, 3, 1, 1, 27, 0, 28, 29, 1, 0, 1, 1, 1, 0]' : 0.109281}
{'[2, 5, 5, 6, 3, 3, 1, 1, 27, 0, 28, 29, 1, 0, 1, 1, 1, 0]' : 0.109394}
{'[2, 5, 5, 6, 3, 3, 1, 1, 27, 0, 28, 29, 1, 0, 1, 1, 1, 0]' : 0.10808}
{'[2, 5, 5, 6, 3, 3, 1, 1, 27, 0, 28, 29, 1, 0, 1, 1, 1, 0]' : 0.106359}
{'[2, 5, 5, 6, 3, 3, 1, 1, 27, 0, 28, 29, 1, 0, 1, 1, 1, 0]' : 0.106964}
{'[2, 5, 5, 6, 3, 3, 1, 1, 27, 0, 28, 29, 1, 0, 1, 1, 1, 0]' : 0.103636}
{'[2, 5, 5, 6, 3, 3, 1, 1, 27, 0, 28, 29, 1, 0, 1, 1, 1, 0]' : 0.103582}
{'[2, 5, 5, 6, 3, 3, 1, 1, 27, 0, 28, 29, 1, 0, 1, 1, 1, 0]' : 0.103634}
{'[2, 5, 5, 6, 3, 3, 1, 1, 27, 0, 28, 29, 1, 0, 1, 1, 1, 0]' : 0.106533}
{'[2, 5, 5, 6, 3, 3, 1, 1, 27, 0, 28, 29, 1, 0, 1, 1, 1, 0]' : 0.109641}
{'[2, 5, 5, 6, 3, 3, 1, 1, 27, 0, 28, 29, 1, 0, 1, 1, 1, 0]' : 0.109616}
{'[2, 5, 5, 6, 3, 3, 1, 1, 27, 0, 28, 29, 1, 0, 1, 1, 1, 0]' : 0.109836}
{'[2, 5, 5, 6, 3, 3, 1, 1, 27, 0, 28, 29, 1, 0, 1, 1, 1, 0]' : 0.10962}
{'[2, 5, 5, 6, 3, 3, 1, 1, 27, 0, 28, 29, 1, 0, 1, 1, 1, 0]' : 0.109632}
{'[2, 5, 5, 6, 3, 3, 1, 1, 27, 0, 28, 29, 1, 0, 1, 1, 1, 0]' : 0.109569}
{'[2, 5, 5, 6, 3, 3, 1, 1, 27, 0, 28, 29, 1, 0, 1, 1, 1, 0]' : 0.109665}
{'[2, 5, 5, 6, 3, 3, 1, 1, 27, 0, 28, 29, 1, 0, 1, 1, 1, 0]' : 0.109321}
{'[2, 5, 5, 6, 3, 3, 1, 1, 27, 0, 28, 29, 1, 0, 1, 1, 1, 0]' : 0.107275}
{'[2, 5, 5, 6, 3, 3, 1, 1, 27, 0, 28, 29, 1, 0, 1, 1, 1, 0]' : 0.106789}
{'[2, 5, 5, 6, 3, 3, 1, 1, 27, 0, 28, 29, 1, 0, 1, 1, 1, 0]' : 0.106662}
{'[2, 5, 5, 6, 3, 3, 1, 1, 27, 0, 28, 29, 1, 0, 1, 1, 1, 0]' : 0.106731}
{'[2, 5, 5, 6, 3, 3, 1, 1, 27, 0, 28, 29, 1, 0, 1, 1, 1, 0]' : 0.106748}
{'[2, 5, 5, 6, 3, 3, 1, 1, 27, 0, 28, 29, 1, 0, 1, 1, 1, 0]' : 0.106821}
{'[2, 5, 5, 6, 3, 3, 1, 1, 27, 0, 28, 29, 1, 0, 1, 1, 1, 0]' : 0.106789}
{'[2, 5, 5, 6, 3, 3, 1, 1, 27, 0, 28, 29, 1, 0, 1, 1, 1, 0]' : 0.106928}
{'[2, 5, 5, 6, 3, 3, 1, 1, 27, 0, 28, 29, 1, 0, 1, 1, 1, 0]' : 0.106937}

out:
 ["{'[2, 5, 5, 6, 3, 3, 1, 1, 27, 0, 28, 29, 1, 0, 1, 1, 1, 0]' : 0.109366}", "{'[2, 5, 5, 6, 3, 3, 1, 1, 27, 0, 28, 29, 1, 0, 1, 1, 1, 0]' : 0.107925}", "{'[2, 5, 5, 6, 3, 3, 1, 1, 27, 0, 28, 29, 1, 0, 1, 1, 1, 0]' : 0.106475}", "{'[2, 5, 5, 6, 3, 3, 1, 1, 27, 0, 28, 29, 1, 0, 1, 1, 1, 0]' : 0.10898}", "{'[2, 5, 5, 6, 3, 3, 1, 1, 27, 0, 28, 29, 1, 0, 1, 1, 1, 0]' : 0.109281}", "{'[2, 5, 5, 6, 3, 3, 1, 1, 27, 0, 28, 29, 1, 0, 1, 1, 1, 0]' : 0.109394}", "{'[2, 5, 5, 6, 3, 3, 1, 1, 27, 0, 28, 29, 1, 0, 1, 1, 1, 0]' : 0.10808}", "{'[2, 5, 5, 6, 3, 3, 1, 1, 27, 0, 28, 29, 1, 0, 1, 1, 1, 0]' : 0.106359}", "{'[2, 5, 5, 6, 3, 3, 1, 1, 27, 0, 28, 29, 1, 0, 1, 1, 1, 0]' : 0.106964}", "{'[2, 5, 5, 6, 3, 3, 1, 1, 27, 0, 28, 29, 1, 0, 1, 1, 1, 0]' : 0.103636}", "{'[2, 5, 5, 6, 3, 3, 1, 1, 27, 0, 28, 29, 1, 0, 1, 1, 1, 0]' : 0.103582}", "{'[2, 5, 5, 6, 3, 3, 1, 1, 27, 0, 28, 29, 1, 0, 1, 1, 1, 0]' : 0.103634}", "{'[2, 5, 5, 6, 3, 3, 1, 1, 27, 0, 28, 29, 1, 0, 1, 1, 1, 0]' : 0.106533}", "{'[2, 5, 5, 6, 3, 3, 1, 1, 27, 0, 28, 29, 1, 0, 1, 1, 1, 0]' : 0.109641}", "{'[2, 5, 5, 6, 3, 3, 1, 1, 27, 0, 28, 29, 1, 0, 1, 1, 1, 0]' : 0.109616}", "{'[2, 5, 5, 6, 3, 3, 1, 1, 27, 0, 28, 29, 1, 0, 1, 1, 1, 0]' : 0.109836}", "{'[2, 5, 5, 6, 3, 3, 1, 1, 27, 0, 28, 29, 1, 0, 1, 1, 1, 0]' : 0.10962}", "{'[2, 5, 5, 6, 3, 3, 1, 1, 27, 0, 28, 29, 1, 0, 1, 1, 1, 0]' : 0.109632}", "{'[2, 5, 5, 6, 3, 3, 1, 1, 27, 0, 28, 29, 1, 0, 1, 1, 1, 0]' : 0.109569}", "{'[2, 5, 5, 6, 3, 3, 1, 1, 27, 0, 28, 29, 1, 0, 1, 1, 1, 0]' : 0.109665}", "{'[2, 5, 5, 6, 3, 3, 1, 1, 27, 0, 28, 29, 1, 0, 1, 1, 1, 0]' : 0.109321}", "{'[2, 5, 5, 6, 3, 3, 1, 1, 27, 0, 28, 29, 1, 0, 1, 1, 1, 0]' : 0.107275}", "{'[2, 5, 5, 6, 3, 3, 1, 1, 27, 0, 28, 29, 1, 0, 1, 1, 1, 0]' : 0.106789}", "{'[2, 5, 5, 6, 3, 3, 1, 1, 27, 0, 28, 29, 1, 0, 1, 1, 1, 0]' : 0.106662}", "{'[2, 5, 5, 6, 3, 3, 1, 1, 27, 0, 28, 29, 1, 0, 1, 1, 1, 0]' : 0.106731}", "{'[2, 5, 5, 6, 3, 3, 1, 1, 27, 0, 28, 29, 1, 0, 1, 1, 1, 0]' : 0.106748}", "{'[2, 5, 5, 6, 3, 3, 1, 1, 27, 0, 28, 29, 1, 0, 1, 1, 1, 0]' : 0.106821}", "{'[2, 5, 5, 6, 3, 3, 1, 1, 27, 0, 28, 29, 1, 0, 1, 1, 1, 0]' : 0.106789}", "{'[2, 5, 5, 6, 3, 3, 1, 1, 27, 0, 28, 29, 1, 0, 1, 1, 1, 0]' : 0.106928}", "{'[2, 5, 5, 6, 3, 3, 1, 1, 27, 0, 28, 29, 1, 0, 1, 1, 1, 0]' : 0.106937}"]
returning from 'run': {'[2, 5, 5, 6, 3, 3, 1, 1, 27, 0, 28, 29, 1, 0, 1, 1, 1, 0]': ([0.109366, 0.107925, 0.106475, 0.10898, 0.109281, 0.109394, 0.10808, 0.106359, 0.106964, 0.103636, 0.103582, 0.103634, 0.106533, 0.109641, 0.109616, 0.109836, 0.10962, 0.109632, 0.109569, 0.109665, 0.109321, 0.107275, 0.106789, 0.106662, 0.106731, 0.106748, 0.106821, 0.106789, 0.106928, 0.106937], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 5, 5, 6, 3, 3, 1, 1, 27, 0, 28, 29, 1, 0, 1, 1, 1, 0]': ([0.109366, 0.107925, 0.106475, 0.10898, 0.109281, 0.109394, 0.10808, 0.106359, 0.106964, 0.103636, 0.103582, 0.103634, 0.106533, 0.109641, 0.109616, 0.109836, 0.10962, 0.109632, 0.109569, 0.109665, 0.109321, 0.107275, 0.106789, 0.106662, 0.106731, 0.106748, 0.106821, 0.106789, 0.106928, 0.106937], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	46
        Max loop nest depth: 	6
        Additions: 		1896
        Multiplications: 	504
        Divisions: 		0
        Logical: 		0
        Reads: 			3789
        Writes: 		774
        Comparisons:		46
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest46.exe __orio_perftest46.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest46.exe  
Program Test Output: 
{'[1, 3, 3, 6, 6, 3, 0, 1, 6, 5, 0, 25, 0, 1, 0, 1, 0, 0]' : 0.197125}
{'[1, 3, 3, 6, 6, 3, 0, 1, 6, 5, 0, 25, 0, 1, 0, 1, 0, 0]' : 0.197768}
{'[1, 3, 3, 6, 6, 3, 0, 1, 6, 5, 0, 25, 0, 1, 0, 1, 0, 0]' : 0.170461}
{'[1, 3, 3, 6, 6, 3, 0, 1, 6, 5, 0, 25, 0, 1, 0, 1, 0, 0]' : 0.170661}
{'[1, 3, 3, 6, 6, 3, 0, 1, 6, 5, 0, 25, 0, 1, 0, 1, 0, 0]' : 0.170591}
{'[1, 3, 3, 6, 6, 3, 0, 1, 6, 5, 0, 25, 0, 1, 0, 1, 0, 0]' : 0.170686}
{'[1, 3, 3, 6, 6, 3, 0, 1, 6, 5, 0, 25, 0, 1, 0, 1, 0, 0]' : 0.170903}
{'[1, 3, 3, 6, 6, 3, 0, 1, 6, 5, 0, 25, 0, 1, 0, 1, 0, 0]' : 0.171427}
{'[1, 3, 3, 6, 6, 3, 0, 1, 6, 5, 0, 25, 0, 1, 0, 1, 0, 0]' : 0.171264}
{'[1, 3, 3, 6, 6, 3, 0, 1, 6, 5, 0, 25, 0, 1, 0, 1, 0, 0]' : 0.167192}
{'[1, 3, 3, 6, 6, 3, 0, 1, 6, 5, 0, 25, 0, 1, 0, 1, 0, 0]' : 0.165836}
{'[1, 3, 3, 6, 6, 3, 0, 1, 6, 5, 0, 25, 0, 1, 0, 1, 0, 0]' : 0.16682}
{'[1, 3, 3, 6, 6, 3, 0, 1, 6, 5, 0, 25, 0, 1, 0, 1, 0, 0]' : 0.170996}
{'[1, 3, 3, 6, 6, 3, 0, 1, 6, 5, 0, 25, 0, 1, 0, 1, 0, 0]' : 0.171379}
{'[1, 3, 3, 6, 6, 3, 0, 1, 6, 5, 0, 25, 0, 1, 0, 1, 0, 0]' : 0.171098}
{'[1, 3, 3, 6, 6, 3, 0, 1, 6, 5, 0, 25, 0, 1, 0, 1, 0, 0]' : 0.170579}
{'[1, 3, 3, 6, 6, 3, 0, 1, 6, 5, 0, 25, 0, 1, 0, 1, 0, 0]' : 0.170837}
{'[1, 3, 3, 6, 6, 3, 0, 1, 6, 5, 0, 25, 0, 1, 0, 1, 0, 0]' : 0.170835}
{'[1, 3, 3, 6, 6, 3, 0, 1, 6, 5, 0, 25, 0, 1, 0, 1, 0, 0]' : 0.167126}
{'[1, 3, 3, 6, 6, 3, 0, 1, 6, 5, 0, 25, 0, 1, 0, 1, 0, 0]' : 0.166174}
{'[1, 3, 3, 6, 6, 3, 0, 1, 6, 5, 0, 25, 0, 1, 0, 1, 0, 0]' : 0.167372}
{'[1, 3, 3, 6, 6, 3, 0, 1, 6, 5, 0, 25, 0, 1, 0, 1, 0, 0]' : 0.170669}
{'[1, 3, 3, 6, 6, 3, 0, 1, 6, 5, 0, 25, 0, 1, 0, 1, 0, 0]' : 0.170572}
{'[1, 3, 3, 6, 6, 3, 0, 1, 6, 5, 0, 25, 0, 1, 0, 1, 0, 0]' : 0.171256}
{'[1, 3, 3, 6, 6, 3, 0, 1, 6, 5, 0, 25, 0, 1, 0, 1, 0, 0]' : 0.171214}
{'[1, 3, 3, 6, 6, 3, 0, 1, 6, 5, 0, 25, 0, 1, 0, 1, 0, 0]' : 0.174317}
{'[1, 3, 3, 6, 6, 3, 0, 1, 6, 5, 0, 25, 0, 1, 0, 1, 0, 0]' : 0.173625}
{'[1, 3, 3, 6, 6, 3, 0, 1, 6, 5, 0, 25, 0, 1, 0, 1, 0, 0]' : 0.165707}
{'[1, 3, 3, 6, 6, 3, 0, 1, 6, 5, 0, 25, 0, 1, 0, 1, 0, 0]' : 0.165854}
{'[1, 3, 3, 6, 6, 3, 0, 1, 6, 5, 0, 25, 0, 1, 0, 1, 0, 0]' : 0.17044}

out:
 ["{'[1, 3, 3, 6, 6, 3, 0, 1, 6, 5, 0, 25, 0, 1, 0, 1, 0, 0]' : 0.197125}", "{'[1, 3, 3, 6, 6, 3, 0, 1, 6, 5, 0, 25, 0, 1, 0, 1, 0, 0]' : 0.197768}", "{'[1, 3, 3, 6, 6, 3, 0, 1, 6, 5, 0, 25, 0, 1, 0, 1, 0, 0]' : 0.170461}", "{'[1, 3, 3, 6, 6, 3, 0, 1, 6, 5, 0, 25, 0, 1, 0, 1, 0, 0]' : 0.170661}", "{'[1, 3, 3, 6, 6, 3, 0, 1, 6, 5, 0, 25, 0, 1, 0, 1, 0, 0]' : 0.170591}", "{'[1, 3, 3, 6, 6, 3, 0, 1, 6, 5, 0, 25, 0, 1, 0, 1, 0, 0]' : 0.170686}", "{'[1, 3, 3, 6, 6, 3, 0, 1, 6, 5, 0, 25, 0, 1, 0, 1, 0, 0]' : 0.170903}", "{'[1, 3, 3, 6, 6, 3, 0, 1, 6, 5, 0, 25, 0, 1, 0, 1, 0, 0]' : 0.171427}", "{'[1, 3, 3, 6, 6, 3, 0, 1, 6, 5, 0, 25, 0, 1, 0, 1, 0, 0]' : 0.171264}", "{'[1, 3, 3, 6, 6, 3, 0, 1, 6, 5, 0, 25, 0, 1, 0, 1, 0, 0]' : 0.167192}", "{'[1, 3, 3, 6, 6, 3, 0, 1, 6, 5, 0, 25, 0, 1, 0, 1, 0, 0]' : 0.165836}", "{'[1, 3, 3, 6, 6, 3, 0, 1, 6, 5, 0, 25, 0, 1, 0, 1, 0, 0]' : 0.16682}", "{'[1, 3, 3, 6, 6, 3, 0, 1, 6, 5, 0, 25, 0, 1, 0, 1, 0, 0]' : 0.170996}", "{'[1, 3, 3, 6, 6, 3, 0, 1, 6, 5, 0, 25, 0, 1, 0, 1, 0, 0]' : 0.171379}", "{'[1, 3, 3, 6, 6, 3, 0, 1, 6, 5, 0, 25, 0, 1, 0, 1, 0, 0]' : 0.171098}", "{'[1, 3, 3, 6, 6, 3, 0, 1, 6, 5, 0, 25, 0, 1, 0, 1, 0, 0]' : 0.170579}", "{'[1, 3, 3, 6, 6, 3, 0, 1, 6, 5, 0, 25, 0, 1, 0, 1, 0, 0]' : 0.170837}", "{'[1, 3, 3, 6, 6, 3, 0, 1, 6, 5, 0, 25, 0, 1, 0, 1, 0, 0]' : 0.170835}", "{'[1, 3, 3, 6, 6, 3, 0, 1, 6, 5, 0, 25, 0, 1, 0, 1, 0, 0]' : 0.167126}", "{'[1, 3, 3, 6, 6, 3, 0, 1, 6, 5, 0, 25, 0, 1, 0, 1, 0, 0]' : 0.166174}", "{'[1, 3, 3, 6, 6, 3, 0, 1, 6, 5, 0, 25, 0, 1, 0, 1, 0, 0]' : 0.167372}", "{'[1, 3, 3, 6, 6, 3, 0, 1, 6, 5, 0, 25, 0, 1, 0, 1, 0, 0]' : 0.170669}", "{'[1, 3, 3, 6, 6, 3, 0, 1, 6, 5, 0, 25, 0, 1, 0, 1, 0, 0]' : 0.170572}", "{'[1, 3, 3, 6, 6, 3, 0, 1, 6, 5, 0, 25, 0, 1, 0, 1, 0, 0]' : 0.171256}", "{'[1, 3, 3, 6, 6, 3, 0, 1, 6, 5, 0, 25, 0, 1, 0, 1, 0, 0]' : 0.171214}", "{'[1, 3, 3, 6, 6, 3, 0, 1, 6, 5, 0, 25, 0, 1, 0, 1, 0, 0]' : 0.174317}", "{'[1, 3, 3, 6, 6, 3, 0, 1, 6, 5, 0, 25, 0, 1, 0, 1, 0, 0]' : 0.173625}", "{'[1, 3, 3, 6, 6, 3, 0, 1, 6, 5, 0, 25, 0, 1, 0, 1, 0, 0]' : 0.165707}", "{'[1, 3, 3, 6, 6, 3, 0, 1, 6, 5, 0, 25, 0, 1, 0, 1, 0, 0]' : 0.165854}", "{'[1, 3, 3, 6, 6, 3, 0, 1, 6, 5, 0, 25, 0, 1, 0, 1, 0, 0]' : 0.17044}"]
returning from 'run': {'[1, 3, 3, 6, 6, 3, 0, 1, 6, 5, 0, 25, 0, 1, 0, 1, 0, 0]': ([0.197125, 0.197768, 0.170461, 0.170661, 0.170591, 0.170686, 0.170903, 0.171427, 0.171264, 0.167192, 0.165836, 0.16682, 0.170996, 0.171379, 0.171098, 0.170579, 0.170837, 0.170835, 0.167126, 0.166174, 0.167372, 0.170669, 0.170572, 0.171256, 0.171214, 0.174317, 0.173625, 0.165707, 0.165854, 0.17044], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 3, 3, 6, 6, 3, 0, 1, 6, 5, 0, 25, 0, 1, 0, 1, 0, 0]': ([0.197125, 0.197768, 0.170461, 0.170661, 0.170591, 0.170686, 0.170903, 0.171427, 0.171264, 0.167192, 0.165836, 0.16682, 0.170996, 0.171379, 0.171098, 0.170579, 0.170837, 0.170835, 0.167126, 0.166174, 0.167372, 0.170669, 0.170572, 0.171256, 0.171214, 0.174317, 0.173625, 0.165707, 0.165854, 0.17044], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Complete design, with measurements:
     T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
84      6    5    0    0    0    6       0       1   15   0  13  25    0    1
434     5    0    2    3    1    6       0       1    9  14   0   5    1    1
487     4    3    0    4    6    1       1       1    0   0   9   7    0    1
514     6    6    1    0    0    3       0       0   17   8  11   0    1    1
666     2    6    1    1    0    1       1       1   11  20   0  25    2    0
705     6    1    2    6    4    1       1       0   29   2   0   0    0    0
1005    0    5    0    3    6    1       1       0    0  15   0   1    2    0
1229    4    3    2    2    6    6       0       0    0  13   0  20    0    2
1234    5    2    1    6    5    0       1       0   27   0   5  11    2    0
1297    1    0    1    1    6    0       0       1   16   0  17  28    0    0
1488    0    4    0    4    6    5       0       0   27  29   0  26    0    1
1564    4    6    1    6    4    6       0       0    0   1   7   0    0    1
1679    6    4    5    6    4    0       0       1    2  15   0  28    0    0
1705    6    0    6    0    6    5       0       0   24   0  19  28    0    1
1716    0    6    6    0    5    0       1       0    3  25   0  14    0    0
1787    6    0    4    6    0    6       1       0   22   0   2  28    0    0
1944    5    6    0    6    0    6       1       1   10   9   0  16    1    0
2071    4    5    6    0    0    0       0       1   28  15   0   0    1    0
2271    0    2    2    0    3    1       0       1   28  14  13   0    1    0
2405    2    2    1    4    1    6       0       1    9   0  25   5    0    0
2459    2    0    0    4    4    6       0       1    2  23   0  23    2    0
2494    0    3    0    4    0    0       0       0    5  13  24   0    0    2
2634    4    3    0    2    6    0       1       1    3  29  29   0    1    1
3047    1    3    2    3    6    6       1       1   17  28   1   0    0    0
3151    6    3    0    5    1    6       1       1    1   4  29   0    0    0
3388    1    3    6    3    0    6       0       1   13   0   0   0    1    0
3789    1    0    6    1    3    0       0       0   18   0  14   3    0    0
3818    1    3    6    4    0    6       0       0    3  29  18   0    0    0
3926    2    0    3    5    0    0       1       1    0   0  28   9    0    1
3946    3    4    2    6    4    4       0       0    5   0  27   5    0    0
4206    0    4    2    0    2    0       1       0    3   0   0  11    1    0
4319    0    3    0    2    2    4       0       0   29   0   4  26    1    1
4346    2    6    0    6    6    6       1       0   23   4   9   0    1    0
4368    4    6    6    2    6    4       0       1   24   0  29   5    0    1
4449    5    0    0    5    0    1       0       0    2   0  26  25    0    1
4470    2    5    5    6    3    3       1       1   27   0  28  29    1    0
4501    1    3    3    6    6    3       0       1    6   5   0  25    0    1
     RT_K SCR VEC1 VEC2  cost_mean
84      1   1    1    0 0.20917370
434     0   0    0    1 0.09798333
487     1   1    1    1 0.20789143
514     0   0    1    0 0.12182150
666     0   1    0    1 0.15064433
705     1   0    0    0 0.15810090
1005    0   0    1    0 0.19955533
1229    0   1    1    0 0.13053953
1234    0   0    1    1 0.27586263
1297    1   0    0    0 0.24282903
1488    1   0    0    1 0.19642153
1564    1   1    1    1 0.11140643
1679    1   0    0    0 0.16874263
1705    1   0    1    1 0.18549140
1716    0   1    0    0 0.15309500
1787    2   1    1    1 0.15619787
1944    1   0    0    1 0.12272170
2071    0   1    0    1 0.10670297
2271    0   1    0    1 0.10205357
2405    0   0    1    1 0.29179910
2459    0   1    0    0 0.17792920
2494    0   0    0    1 0.13977097
2634    0   1    0    0 0.08750561
3047    0   0    1    1 0.23592960
3151    0   1    0    0 0.21023057
3388    1   0    1    1 0.10936557
3789    1   1    1    0 0.15676330
3818    2   0    1    1 0.18452103
3926    0   0    0    0 0.23850903
3946    2   1    0    0 0.16182970
4206    1   0    1    0 0.11403210
4319    0   0    0    0 0.11213543
4346    1   1    0    1 0.09440233
4368    0   0    0    0 0.24979073
4449    0   1    1    1 0.16209473
4470    1   1    1    0 0.10762630
4501    0   1    0    0 0.17169280

Heteroscedasticity Test p-value: 0.75323725178
Regression Step:                Df   Sum Sq  Mean Sq F value   Pr(>F)    
T1_I             1 0.000195 0.000195   0.587 0.478223    
T1_J             1 0.006065 0.006065  18.281 0.007896 ** 
T1_K             1 0.000356 0.000356   1.073 0.347652    
T2_I             1 0.000864 0.000864   2.604 0.167533    
T2_J             1 0.004346 0.004346  13.100 0.015229 *  
T2_K             1 0.000008 0.000008   0.025 0.880786    
ACOPY_x          1 0.000159 0.000159   0.479 0.519850    
ACOPY_y          1 0.003308 0.003308   9.972 0.025155 *  
U1_I             1 0.000131 0.000131   0.396 0.556937    
U_I              1 0.002144 0.002144   6.463 0.051749 .  
U_J              1 0.003588 0.003588  10.814 0.021750 *  
U_K              1 0.000592 0.000592   1.784 0.239191    
RT_I             1 0.002937 0.002937   8.853 0.030964 *  
RT_J             1 0.004772 0.004772  14.384 0.012724 *  
RT_K             1 0.007290 0.007290  21.973 0.005397 ** 
SCR              1 0.016350 0.016350  49.284 0.000905 ***
VEC1             1 0.006309 0.006309  19.016 0.007285 ** 
VEC2             1 0.000416 0.000416   1.254 0.313659    
I(1/(1 + T1_I))  1 0.001748 0.001748   5.268 0.070187 .  
I(1/(1 + T1_J))  1 0.000165 0.000165   0.498 0.511945    
I(1/(1 + T1_K))  1 0.000500 0.000500   1.508 0.274133    
I(1/(1 + T2_I))  1 0.000063 0.000063   0.189 0.681662    
I(1/(1 + T2_J))  1 0.005008 0.005008  15.094 0.011582 *  
I(1/(1 + T2_K))  1 0.000448 0.000448   1.351 0.297625    
I(1/(1 + U1_I))  1 0.002317 0.002317   6.983 0.045836 *  
I(1/(1 + U_I))   1 0.005316 0.005316  16.024 0.010293 *  
I(1/(1 + U_J))   1 0.000426 0.000426   1.285 0.308321    
I(1/(1 + U_K))   1 0.010256 0.010256  30.916 0.002588 ** 
I(1/(1 + RT_I))  1 0.016162 0.016162  48.717 0.000929 ***
I(1/(1 + RT_J))  1 0.000422 0.000422   1.273 0.310361    
I(1/(1 + RT_K))  1 0.000303 0.000303   0.912 0.383388    
Residuals        5 0.001659 0.000332                     
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Predicting Best
Generating valid search space of size 4600 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Valid coordinates: 920
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Valid coordinates: 1840
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Tested coordinates: 110000
Valid coordinates: 2760
Tested coordinates: 120000
Tested coordinates: 130000
Tested coordinates: 140000
Valid coordinates: 3680
Tested coordinates: 150000
Tested coordinates: 160000
Tested coordinates: 170000
Tested coordinates: 180000
Valid coordinates: 4600
Valid/Tested configurations: 4600/188943
Generated Search Space:
NULL
Identical predictions (tol = 1e-5): 1
Getting Best from Design
Response: ['cost_mean']
Design Names:  [1] "T1_I"      "T1_J"      "T1_K"      "T2_I"      "T2_J"      "T2_K"     
 [7] "ACOPY_x"   "ACOPY_y"   "U1_I"      "U_I"       "U_J"       "U_K"      
[13] "RT_I"      "RT_J"      "RT_K"      "SCR"       "VEC1"      "VEC2"     
[19] "cost_mean"

Design Response:       cost_mean
84   0.20917370
434  0.09798333
487  0.20789143
514  0.12182150
666  0.15064433
705  0.15810090
1005 0.19955533
1229 0.13053953
1234 0.27586263
1297 0.24282903
1488 0.19642153
1564 0.11140643
1679 0.16874263
1705 0.18549140
1716 0.15309500
1787 0.15619787
1944 0.12272170
2071 0.10670297
2271 0.10205357
2405 0.29179910
2459 0.17792920
2494 0.13977097
2634 0.08750561
3047 0.23592960
3151 0.21023057
3388 0.10936557
3789 0.15676330
3818 0.18452103
3926 0.23850903
3946 0.16182970
4206 0.11403210
4319 0.11213543
4346 0.09440233
4368 0.24979073
4449 0.16209473
4470 0.10762630
4501 0.17169280

Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Getting fixed variables
Pruning Model
Best Predicted:      T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
1780    6    6    3    4    4    3       1       0    5   0   1   0    1    1
     RT_K SCR VEC1 VEC2
1780    0   1    0    0

Best From Design: [4, 3, 0, 2, 6, 0, 1, 1, 3, 29, 29, 0, 1, 1, 0, 1, 0, 0]
Pruned Factors: ['T1_I', 'T1_K', 'T2_I', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_J', 'U_K', 'RT_J', 'VEC2']
Fixed Factors: {'RT_K': 0, 'RT_I': 1, 'T1_J': 6, 'U_I': 0, 'T2_J': 4, 'VEC1': 0, 'SCR': 1}
Length of requested configs: 1
Result was on Database, Returning Now
Starting Point (-O3):
0.16283083333333334
Predicted Best Point:
[6, 6, 3, 4, 4, 3, 1, 0, 5, 0, 1, 0, 1, 1, 0, 1, 0, 0]
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	17
        Max loop nest depth: 	5
        Additions: 		389
        Multiplications: 	162
        Divisions: 		0
        Logical: 		0
        Reads: 			814
        Writes: 		156
        Comparisons:		17
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest47.exe __orio_perftest47.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest47.exe  
Program Test Output: 
{'[6, 6, 3, 4, 4, 3, 1, 0, 5, 0, 1, 0, 1, 1, 0, 1, 0, 0]' : 0.118451}
{'[6, 6, 3, 4, 4, 3, 1, 0, 5, 0, 1, 0, 1, 1, 0, 1, 0, 0]' : 0.118337}
{'[6, 6, 3, 4, 4, 3, 1, 0, 5, 0, 1, 0, 1, 1, 0, 1, 0, 0]' : 0.110409}
{'[6, 6, 3, 4, 4, 3, 1, 0, 5, 0, 1, 0, 1, 1, 0, 1, 0, 0]' : 0.101135}
{'[6, 6, 3, 4, 4, 3, 1, 0, 5, 0, 1, 0, 1, 1, 0, 1, 0, 0]' : 0.101251}
{'[6, 6, 3, 4, 4, 3, 1, 0, 5, 0, 1, 0, 1, 1, 0, 1, 0, 0]' : 0.10109}
{'[6, 6, 3, 4, 4, 3, 1, 0, 5, 0, 1, 0, 1, 1, 0, 1, 0, 0]' : 0.101287}
{'[6, 6, 3, 4, 4, 3, 1, 0, 5, 0, 1, 0, 1, 1, 0, 1, 0, 0]' : 0.101098}
{'[6, 6, 3, 4, 4, 3, 1, 0, 5, 0, 1, 0, 1, 1, 0, 1, 0, 0]' : 0.101298}
{'[6, 6, 3, 4, 4, 3, 1, 0, 5, 0, 1, 0, 1, 1, 0, 1, 0, 0]' : 0.101134}
{'[6, 6, 3, 4, 4, 3, 1, 0, 5, 0, 1, 0, 1, 1, 0, 1, 0, 0]' : 0.101332}
{'[6, 6, 3, 4, 4, 3, 1, 0, 5, 0, 1, 0, 1, 1, 0, 1, 0, 0]' : 0.101124}
{'[6, 6, 3, 4, 4, 3, 1, 0, 5, 0, 1, 0, 1, 1, 0, 1, 0, 0]' : 0.101171}
{'[6, 6, 3, 4, 4, 3, 1, 0, 5, 0, 1, 0, 1, 1, 0, 1, 0, 0]' : 0.101174}
{'[6, 6, 3, 4, 4, 3, 1, 0, 5, 0, 1, 0, 1, 1, 0, 1, 0, 0]' : 0.101151}
{'[6, 6, 3, 4, 4, 3, 1, 0, 5, 0, 1, 0, 1, 1, 0, 1, 0, 0]' : 0.101183}
{'[6, 6, 3, 4, 4, 3, 1, 0, 5, 0, 1, 0, 1, 1, 0, 1, 0, 0]' : 0.101102}
{'[6, 6, 3, 4, 4, 3, 1, 0, 5, 0, 1, 0, 1, 1, 0, 1, 0, 0]' : 0.101072}
{'[6, 6, 3, 4, 4, 3, 1, 0, 5, 0, 1, 0, 1, 1, 0, 1, 0, 0]' : 0.101054}
{'[6, 6, 3, 4, 4, 3, 1, 0, 5, 0, 1, 0, 1, 1, 0, 1, 0, 0]' : 0.101114}
{'[6, 6, 3, 4, 4, 3, 1, 0, 5, 0, 1, 0, 1, 1, 0, 1, 0, 0]' : 0.101088}
{'[6, 6, 3, 4, 4, 3, 1, 0, 5, 0, 1, 0, 1, 1, 0, 1, 0, 0]' : 0.101216}
{'[6, 6, 3, 4, 4, 3, 1, 0, 5, 0, 1, 0, 1, 1, 0, 1, 0, 0]' : 0.101257}
{'[6, 6, 3, 4, 4, 3, 1, 0, 5, 0, 1, 0, 1, 1, 0, 1, 0, 0]' : 0.101241}
{'[6, 6, 3, 4, 4, 3, 1, 0, 5, 0, 1, 0, 1, 1, 0, 1, 0, 0]' : 0.101654}
{'[6, 6, 3, 4, 4, 3, 1, 0, 5, 0, 1, 0, 1, 1, 0, 1, 0, 0]' : 0.101285}
{'[6, 6, 3, 4, 4, 3, 1, 0, 5, 0, 1, 0, 1, 1, 0, 1, 0, 0]' : 0.101148}
{'[6, 6, 3, 4, 4, 3, 1, 0, 5, 0, 1, 0, 1, 1, 0, 1, 0, 0]' : 0.10105}
{'[6, 6, 3, 4, 4, 3, 1, 0, 5, 0, 1, 0, 1, 1, 0, 1, 0, 0]' : 0.101025}
{'[6, 6, 3, 4, 4, 3, 1, 0, 5, 0, 1, 0, 1, 1, 0, 1, 0, 0]' : 0.101189}

out:
 ["{'[6, 6, 3, 4, 4, 3, 1, 0, 5, 0, 1, 0, 1, 1, 0, 1, 0, 0]' : 0.118451}", "{'[6, 6, 3, 4, 4, 3, 1, 0, 5, 0, 1, 0, 1, 1, 0, 1, 0, 0]' : 0.118337}", "{'[6, 6, 3, 4, 4, 3, 1, 0, 5, 0, 1, 0, 1, 1, 0, 1, 0, 0]' : 0.110409}", "{'[6, 6, 3, 4, 4, 3, 1, 0, 5, 0, 1, 0, 1, 1, 0, 1, 0, 0]' : 0.101135}", "{'[6, 6, 3, 4, 4, 3, 1, 0, 5, 0, 1, 0, 1, 1, 0, 1, 0, 0]' : 0.101251}", "{'[6, 6, 3, 4, 4, 3, 1, 0, 5, 0, 1, 0, 1, 1, 0, 1, 0, 0]' : 0.10109}", "{'[6, 6, 3, 4, 4, 3, 1, 0, 5, 0, 1, 0, 1, 1, 0, 1, 0, 0]' : 0.101287}", "{'[6, 6, 3, 4, 4, 3, 1, 0, 5, 0, 1, 0, 1, 1, 0, 1, 0, 0]' : 0.101098}", "{'[6, 6, 3, 4, 4, 3, 1, 0, 5, 0, 1, 0, 1, 1, 0, 1, 0, 0]' : 0.101298}", "{'[6, 6, 3, 4, 4, 3, 1, 0, 5, 0, 1, 0, 1, 1, 0, 1, 0, 0]' : 0.101134}", "{'[6, 6, 3, 4, 4, 3, 1, 0, 5, 0, 1, 0, 1, 1, 0, 1, 0, 0]' : 0.101332}", "{'[6, 6, 3, 4, 4, 3, 1, 0, 5, 0, 1, 0, 1, 1, 0, 1, 0, 0]' : 0.101124}", "{'[6, 6, 3, 4, 4, 3, 1, 0, 5, 0, 1, 0, 1, 1, 0, 1, 0, 0]' : 0.101171}", "{'[6, 6, 3, 4, 4, 3, 1, 0, 5, 0, 1, 0, 1, 1, 0, 1, 0, 0]' : 0.101174}", "{'[6, 6, 3, 4, 4, 3, 1, 0, 5, 0, 1, 0, 1, 1, 0, 1, 0, 0]' : 0.101151}", "{'[6, 6, 3, 4, 4, 3, 1, 0, 5, 0, 1, 0, 1, 1, 0, 1, 0, 0]' : 0.101183}", "{'[6, 6, 3, 4, 4, 3, 1, 0, 5, 0, 1, 0, 1, 1, 0, 1, 0, 0]' : 0.101102}", "{'[6, 6, 3, 4, 4, 3, 1, 0, 5, 0, 1, 0, 1, 1, 0, 1, 0, 0]' : 0.101072}", "{'[6, 6, 3, 4, 4, 3, 1, 0, 5, 0, 1, 0, 1, 1, 0, 1, 0, 0]' : 0.101054}", "{'[6, 6, 3, 4, 4, 3, 1, 0, 5, 0, 1, 0, 1, 1, 0, 1, 0, 0]' : 0.101114}", "{'[6, 6, 3, 4, 4, 3, 1, 0, 5, 0, 1, 0, 1, 1, 0, 1, 0, 0]' : 0.101088}", "{'[6, 6, 3, 4, 4, 3, 1, 0, 5, 0, 1, 0, 1, 1, 0, 1, 0, 0]' : 0.101216}", "{'[6, 6, 3, 4, 4, 3, 1, 0, 5, 0, 1, 0, 1, 1, 0, 1, 0, 0]' : 0.101257}", "{'[6, 6, 3, 4, 4, 3, 1, 0, 5, 0, 1, 0, 1, 1, 0, 1, 0, 0]' : 0.101241}", "{'[6, 6, 3, 4, 4, 3, 1, 0, 5, 0, 1, 0, 1, 1, 0, 1, 0, 0]' : 0.101654}", "{'[6, 6, 3, 4, 4, 3, 1, 0, 5, 0, 1, 0, 1, 1, 0, 1, 0, 0]' : 0.101285}", "{'[6, 6, 3, 4, 4, 3, 1, 0, 5, 0, 1, 0, 1, 1, 0, 1, 0, 0]' : 0.101148}", "{'[6, 6, 3, 4, 4, 3, 1, 0, 5, 0, 1, 0, 1, 1, 0, 1, 0, 0]' : 0.10105}", "{'[6, 6, 3, 4, 4, 3, 1, 0, 5, 0, 1, 0, 1, 1, 0, 1, 0, 0]' : 0.101025}", "{'[6, 6, 3, 4, 4, 3, 1, 0, 5, 0, 1, 0, 1, 1, 0, 1, 0, 0]' : 0.101189}"]
returning from 'run': {'[6, 6, 3, 4, 4, 3, 1, 0, 5, 0, 1, 0, 1, 1, 0, 1, 0, 0]': ([0.118451, 0.118337, 0.110409, 0.101135, 0.101251, 0.10109, 0.101287, 0.101098, 0.101298, 0.101134, 0.101332, 0.101124, 0.101171, 0.101174, 0.101151, 0.101183, 0.101102, 0.101072, 0.101054, 0.101114, 0.101088, 0.101216, 0.101257, 0.101241, 0.101654, 0.101285, 0.101148, 0.10105, 0.101025, 0.101189], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 3, 4, 4, 3, 1, 0, 5, 0, 1, 0, 1, 1, 0, 1, 0, 0]': ([0.118451, 0.118337, 0.110409, 0.101135, 0.101251, 0.10109, 0.101287, 0.101098, 0.101298, 0.101134, 0.101332, 0.101124, 0.101171, 0.101174, 0.101151, 0.101183, 0.101102, 0.101072, 0.101054, 0.101114, 0.101088, 0.101216, 0.101257, 0.101241, 0.101654, 0.101285, 0.101148, 0.10105, 0.101025, 0.101189], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Design Best Point:
[4, 3, 0, 2, 6, 0, 1, 1, 3, 29, 29, 0, 1, 1, 0, 1, 0, 0]
Length of requested configs: 1
Result was on Database, Returning Now
Fixed Factors: {'RT_K': 0, 'RT_I': 1, 'T1_J': 6, 'U_I': 0, 'T2_J': 4, 'VEC1': 0, 'SCR': 1}
Slowdown (Design Best): 0.5374019457821769
Slowdown (Predicted Best): 0.6303310695660628
Budget: 37/180
Updating Global Best: 0.0875056066666667
Current Best Point: 
[4, 3, 0, 2, 6, 0, 1, 1, 3, 29, 29, 0, 1, 1, 0, 1, 0, 0]
Step 1
Generating valid search space of size 2800 (does not spend evaluations)
Valid coordinates: 560
Valid coordinates: 1120
Valid coordinates: 1680
Valid coordinates: 2240
Valid coordinates: 2800
Valid/Tested configurations: 2800/5447
Generated Search Space:
NULL
Clean Info:
Removed Factors: character(0)

Removed Inverse Factors: [1] "ACOPY_x" "ACOPY_y" "RT_J"    "VEC2"   

New Factors: ['T1_I', 'T1_K', 'T2_I', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_J', 'U_K', 'RT_J', 'VEC2']
New Inverse Factors: ['T1_I', 'T1_K', 'T2_I', 'T2_K', 'U1_I', 'U_J', 'U_K']
New Fixed Factors: {'RT_K': 0, 'RT_I': 1, 'T1_J': 6, 'U_I': 0, 'T2_J': 4, 'VEC1': 0, 'SCR': 1}
Full Model:  ~ T1_I + T1_K + T2_I + T2_K + ACOPY_x + ACOPY_y + U1_I + U_J + U_K + RT_J + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K))
Fixed Factors: {'RT_K': 0, 'RT_I': 1, 'T1_J': 6, 'U_I': 0, 'T2_J': 4, 'VEC1': 0, 'SCR': 1}
Computing D-Optimal Design
Computing D-Optimal Design with 28 experiments
Design Formula:  ~ T1_I + T1_K + T2_I + T2_K + ACOPY_x + ACOPY_y + U1_I + U_J + U_K + RT_J + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K))
Starting "optFederov" run
Using Search Space:
NULL
Data Dimensions: [1] 2800   11

     T1_I T1_K T2_I T2_K ACOPY_x ACOPY_y U1_I U_J U_K RT_J VEC2
15      6    0    6    1       0       1    7  25  13    0    1
88      0    6    0    4       1       0   28   6  28    1    0
186     6    3    4    0       1       0    0  12  28    1    1
400     6    0    0    0       0       1   28   5  25    0    0
633     1    6    2    0       1       1   27  29  27    1    1
894     4    5    0    4       0       0    0  29  22    1    1
938     6    6    5    6       0       0   17   0  29    0    1
1086    0    1    6    6       0       1   22   0  29    1    1
1100    1    4    6    3       1       0   14   4   0    0    1
1278    0    6    1    5       1       1    4  29  20    0    0
1285    0    5    4    0       0       0    0  10   0    0    0
1449    1    0    6    5       1       0    1   7  21    1    0
1593    4    6    6    0       1       0    5   6   7    1    0
1611    6    0    0    5       1       0    9  25   0    1    0
1662    1    0    1    2       0       0   29  25   5    1    1
1663    0    2    0    0       0       0    9  27   9    0    1
1798    0    0    0    2       1       1   11   0   0    1    1
1821    3    5    0    0       0       0    4   0  28    0    0
1961    6    2    0    2       0       1    8   4  26    1    1
2002    0    0    3    6       1       0   26   9  18    0    1
2075    3    2    1    6       0       1   15   3   0    1    0
2119    0    1    1    2       0       0    8   7  29    0    1
2237    2    1    0    6       0       0   29  29  24    0    0
2284    1    6    2    4       0       1    0   8   2    0    0
2297    3    1    1    2       1       0    3   0  29    1    0
2338    6    2    5    1       1       0   29   0   4    1    0
2657    2    2    0    5       1       1    0   9   2    0    1
2722    3    1    6    1       1       1    0  29  29    0    0

D-Efficiency Approximation: [1] 0.498

Measuring design of size 28
Current Design Names: ['T1_I', 'T1_K', 'T2_I', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_J', 'U_K', 'RT_J', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	5
        Additions: 		1682
        Multiplications: 	756
        Divisions: 		0
        Logical: 		0
        Reads: 			3270
        Writes: 		554
        Comparisons:		22
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest48.exe __orio_perftest48.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest48.exe  
Program Test Output: 
{'[6, 6, 0, 6, 4, 1, 0, 1, 7, 0, 25, 13, 1, 0, 0, 1, 0, 1]' : 0.110807}
{'[6, 6, 0, 6, 4, 1, 0, 1, 7, 0, 25, 13, 1, 0, 0, 1, 0, 1]' : 0.110792}
{'[6, 6, 0, 6, 4, 1, 0, 1, 7, 0, 25, 13, 1, 0, 0, 1, 0, 1]' : 0.110728}
{'[6, 6, 0, 6, 4, 1, 0, 1, 7, 0, 25, 13, 1, 0, 0, 1, 0, 1]' : 0.098603}
{'[6, 6, 0, 6, 4, 1, 0, 1, 7, 0, 25, 13, 1, 0, 0, 1, 0, 1]' : 0.094835}
{'[6, 6, 0, 6, 4, 1, 0, 1, 7, 0, 25, 13, 1, 0, 0, 1, 0, 1]' : 0.0949419}
{'[6, 6, 0, 6, 4, 1, 0, 1, 7, 0, 25, 13, 1, 0, 0, 1, 0, 1]' : 0.094866}
{'[6, 6, 0, 6, 4, 1, 0, 1, 7, 0, 25, 13, 1, 0, 0, 1, 0, 1]' : 0.0948482}
{'[6, 6, 0, 6, 4, 1, 0, 1, 7, 0, 25, 13, 1, 0, 0, 1, 0, 1]' : 0.094841}
{'[6, 6, 0, 6, 4, 1, 0, 1, 7, 0, 25, 13, 1, 0, 0, 1, 0, 1]' : 0.0952621}
{'[6, 6, 0, 6, 4, 1, 0, 1, 7, 0, 25, 13, 1, 0, 0, 1, 0, 1]' : 0.094919}
{'[6, 6, 0, 6, 4, 1, 0, 1, 7, 0, 25, 13, 1, 0, 0, 1, 0, 1]' : 0.0948472}
{'[6, 6, 0, 6, 4, 1, 0, 1, 7, 0, 25, 13, 1, 0, 0, 1, 0, 1]' : 0.0949321}
{'[6, 6, 0, 6, 4, 1, 0, 1, 7, 0, 25, 13, 1, 0, 0, 1, 0, 1]' : 0.0949562}
{'[6, 6, 0, 6, 4, 1, 0, 1, 7, 0, 25, 13, 1, 0, 0, 1, 0, 1]' : 0.0952351}
{'[6, 6, 0, 6, 4, 1, 0, 1, 7, 0, 25, 13, 1, 0, 0, 1, 0, 1]' : 0.0948551}
{'[6, 6, 0, 6, 4, 1, 0, 1, 7, 0, 25, 13, 1, 0, 0, 1, 0, 1]' : 0.0948858}
{'[6, 6, 0, 6, 4, 1, 0, 1, 7, 0, 25, 13, 1, 0, 0, 1, 0, 1]' : 0.0951271}
{'[6, 6, 0, 6, 4, 1, 0, 1, 7, 0, 25, 13, 1, 0, 0, 1, 0, 1]' : 0.095063}
{'[6, 6, 0, 6, 4, 1, 0, 1, 7, 0, 25, 13, 1, 0, 0, 1, 0, 1]' : 0.095145}
{'[6, 6, 0, 6, 4, 1, 0, 1, 7, 0, 25, 13, 1, 0, 0, 1, 0, 1]' : 0.0950072}
{'[6, 6, 0, 6, 4, 1, 0, 1, 7, 0, 25, 13, 1, 0, 0, 1, 0, 1]' : 0.0949242}
{'[6, 6, 0, 6, 4, 1, 0, 1, 7, 0, 25, 13, 1, 0, 0, 1, 0, 1]' : 0.094882}
{'[6, 6, 0, 6, 4, 1, 0, 1, 7, 0, 25, 13, 1, 0, 0, 1, 0, 1]' : 0.094923}
{'[6, 6, 0, 6, 4, 1, 0, 1, 7, 0, 25, 13, 1, 0, 0, 1, 0, 1]' : 0.094934}
{'[6, 6, 0, 6, 4, 1, 0, 1, 7, 0, 25, 13, 1, 0, 0, 1, 0, 1]' : 0.0948839}
{'[6, 6, 0, 6, 4, 1, 0, 1, 7, 0, 25, 13, 1, 0, 0, 1, 0, 1]' : 0.0948892}
{'[6, 6, 0, 6, 4, 1, 0, 1, 7, 0, 25, 13, 1, 0, 0, 1, 0, 1]' : 0.0948839}
{'[6, 6, 0, 6, 4, 1, 0, 1, 7, 0, 25, 13, 1, 0, 0, 1, 0, 1]' : 0.0949202}
{'[6, 6, 0, 6, 4, 1, 0, 1, 7, 0, 25, 13, 1, 0, 0, 1, 0, 1]' : 0.0949121}

out:
 ["{'[6, 6, 0, 6, 4, 1, 0, 1, 7, 0, 25, 13, 1, 0, 0, 1, 0, 1]' : 0.110807}", "{'[6, 6, 0, 6, 4, 1, 0, 1, 7, 0, 25, 13, 1, 0, 0, 1, 0, 1]' : 0.110792}", "{'[6, 6, 0, 6, 4, 1, 0, 1, 7, 0, 25, 13, 1, 0, 0, 1, 0, 1]' : 0.110728}", "{'[6, 6, 0, 6, 4, 1, 0, 1, 7, 0, 25, 13, 1, 0, 0, 1, 0, 1]' : 0.098603}", "{'[6, 6, 0, 6, 4, 1, 0, 1, 7, 0, 25, 13, 1, 0, 0, 1, 0, 1]' : 0.094835}", "{'[6, 6, 0, 6, 4, 1, 0, 1, 7, 0, 25, 13, 1, 0, 0, 1, 0, 1]' : 0.0949419}", "{'[6, 6, 0, 6, 4, 1, 0, 1, 7, 0, 25, 13, 1, 0, 0, 1, 0, 1]' : 0.094866}", "{'[6, 6, 0, 6, 4, 1, 0, 1, 7, 0, 25, 13, 1, 0, 0, 1, 0, 1]' : 0.0948482}", "{'[6, 6, 0, 6, 4, 1, 0, 1, 7, 0, 25, 13, 1, 0, 0, 1, 0, 1]' : 0.094841}", "{'[6, 6, 0, 6, 4, 1, 0, 1, 7, 0, 25, 13, 1, 0, 0, 1, 0, 1]' : 0.0952621}", "{'[6, 6, 0, 6, 4, 1, 0, 1, 7, 0, 25, 13, 1, 0, 0, 1, 0, 1]' : 0.094919}", "{'[6, 6, 0, 6, 4, 1, 0, 1, 7, 0, 25, 13, 1, 0, 0, 1, 0, 1]' : 0.0948472}", "{'[6, 6, 0, 6, 4, 1, 0, 1, 7, 0, 25, 13, 1, 0, 0, 1, 0, 1]' : 0.0949321}", "{'[6, 6, 0, 6, 4, 1, 0, 1, 7, 0, 25, 13, 1, 0, 0, 1, 0, 1]' : 0.0949562}", "{'[6, 6, 0, 6, 4, 1, 0, 1, 7, 0, 25, 13, 1, 0, 0, 1, 0, 1]' : 0.0952351}", "{'[6, 6, 0, 6, 4, 1, 0, 1, 7, 0, 25, 13, 1, 0, 0, 1, 0, 1]' : 0.0948551}", "{'[6, 6, 0, 6, 4, 1, 0, 1, 7, 0, 25, 13, 1, 0, 0, 1, 0, 1]' : 0.0948858}", "{'[6, 6, 0, 6, 4, 1, 0, 1, 7, 0, 25, 13, 1, 0, 0, 1, 0, 1]' : 0.0951271}", "{'[6, 6, 0, 6, 4, 1, 0, 1, 7, 0, 25, 13, 1, 0, 0, 1, 0, 1]' : 0.095063}", "{'[6, 6, 0, 6, 4, 1, 0, 1, 7, 0, 25, 13, 1, 0, 0, 1, 0, 1]' : 0.095145}", "{'[6, 6, 0, 6, 4, 1, 0, 1, 7, 0, 25, 13, 1, 0, 0, 1, 0, 1]' : 0.0950072}", "{'[6, 6, 0, 6, 4, 1, 0, 1, 7, 0, 25, 13, 1, 0, 0, 1, 0, 1]' : 0.0949242}", "{'[6, 6, 0, 6, 4, 1, 0, 1, 7, 0, 25, 13, 1, 0, 0, 1, 0, 1]' : 0.094882}", "{'[6, 6, 0, 6, 4, 1, 0, 1, 7, 0, 25, 13, 1, 0, 0, 1, 0, 1]' : 0.094923}", "{'[6, 6, 0, 6, 4, 1, 0, 1, 7, 0, 25, 13, 1, 0, 0, 1, 0, 1]' : 0.094934}", "{'[6, 6, 0, 6, 4, 1, 0, 1, 7, 0, 25, 13, 1, 0, 0, 1, 0, 1]' : 0.0948839}", "{'[6, 6, 0, 6, 4, 1, 0, 1, 7, 0, 25, 13, 1, 0, 0, 1, 0, 1]' : 0.0948892}", "{'[6, 6, 0, 6, 4, 1, 0, 1, 7, 0, 25, 13, 1, 0, 0, 1, 0, 1]' : 0.0948839}", "{'[6, 6, 0, 6, 4, 1, 0, 1, 7, 0, 25, 13, 1, 0, 0, 1, 0, 1]' : 0.0949202}", "{'[6, 6, 0, 6, 4, 1, 0, 1, 7, 0, 25, 13, 1, 0, 0, 1, 0, 1]' : 0.0949121}"]
returning from 'run': {'[6, 6, 0, 6, 4, 1, 0, 1, 7, 0, 25, 13, 1, 0, 0, 1, 0, 1]': ([0.110807, 0.110792, 0.110728, 0.098603, 0.094835, 0.0949419, 0.094866, 0.0948482, 0.094841, 0.0952621, 0.094919, 0.0948472, 0.0949321, 0.0949562, 0.0952351, 0.0948551, 0.0948858, 0.0951271, 0.095063, 0.095145, 0.0950072, 0.0949242, 0.094882, 0.094923, 0.094934, 0.0948839, 0.0948892, 0.0948839, 0.0949202, 0.0949121], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 0, 6, 4, 1, 0, 1, 7, 0, 25, 13, 1, 0, 0, 1, 0, 1]': ([0.110807, 0.110792, 0.110728, 0.098603, 0.094835, 0.0949419, 0.094866, 0.0948482, 0.094841, 0.0952621, 0.094919, 0.0948472, 0.0949321, 0.0949562, 0.0952351, 0.0948551, 0.0948858, 0.0951271, 0.095063, 0.095145, 0.0950072, 0.0949242, 0.094882, 0.094923, 0.094934, 0.0948839, 0.0948892, 0.0948839, 0.0949202, 0.0949121], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	3
        Additions: 		1304
        Multiplications: 	608
        Divisions: 		0
        Logical: 		0
        Reads: 			2513
        Writes: 		438
        Comparisons:		9
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest49.exe __orio_perftest49.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest49.exe  
Program Test Output: 
{'[0, 6, 6, 0, 4, 4, 1, 0, 28, 0, 6, 28, 1, 1, 0, 1, 0, 0]' : 0.109083}
{'[0, 6, 6, 0, 4, 4, 1, 0, 28, 0, 6, 28, 1, 1, 0, 1, 0, 0]' : 0.10901}
{'[0, 6, 6, 0, 4, 4, 1, 0, 28, 0, 6, 28, 1, 1, 0, 1, 0, 0]' : 0.10893}
{'[0, 6, 6, 0, 4, 4, 1, 0, 28, 0, 6, 28, 1, 1, 0, 1, 0, 0]' : 0.109015}
{'[0, 6, 6, 0, 4, 4, 1, 0, 28, 0, 6, 28, 1, 1, 0, 1, 0, 0]' : 0.108995}
{'[0, 6, 6, 0, 4, 4, 1, 0, 28, 0, 6, 28, 1, 1, 0, 1, 0, 0]' : 0.108923}
{'[0, 6, 6, 0, 4, 4, 1, 0, 28, 0, 6, 28, 1, 1, 0, 1, 0, 0]' : 0.108908}
{'[0, 6, 6, 0, 4, 4, 1, 0, 28, 0, 6, 28, 1, 1, 0, 1, 0, 0]' : 0.109416}
{'[0, 6, 6, 0, 4, 4, 1, 0, 28, 0, 6, 28, 1, 1, 0, 1, 0, 0]' : 0.106546}
{'[0, 6, 6, 0, 4, 4, 1, 0, 28, 0, 6, 28, 1, 1, 0, 1, 0, 0]' : 0.106509}
{'[0, 6, 6, 0, 4, 4, 1, 0, 28, 0, 6, 28, 1, 1, 0, 1, 0, 0]' : 0.109285}
{'[0, 6, 6, 0, 4, 4, 1, 0, 28, 0, 6, 28, 1, 1, 0, 1, 0, 0]' : 0.109298}
{'[0, 6, 6, 0, 4, 4, 1, 0, 28, 0, 6, 28, 1, 1, 0, 1, 0, 0]' : 0.109299}
{'[0, 6, 6, 0, 4, 4, 1, 0, 28, 0, 6, 28, 1, 1, 0, 1, 0, 0]' : 0.109171}
{'[0, 6, 6, 0, 4, 4, 1, 0, 28, 0, 6, 28, 1, 1, 0, 1, 0, 0]' : 0.108964}
{'[0, 6, 6, 0, 4, 4, 1, 0, 28, 0, 6, 28, 1, 1, 0, 1, 0, 0]' : 0.108921}
{'[0, 6, 6, 0, 4, 4, 1, 0, 28, 0, 6, 28, 1, 1, 0, 1, 0, 0]' : 0.108946}
{'[0, 6, 6, 0, 4, 4, 1, 0, 28, 0, 6, 28, 1, 1, 0, 1, 0, 0]' : 0.109052}
{'[0, 6, 6, 0, 4, 4, 1, 0, 28, 0, 6, 28, 1, 1, 0, 1, 0, 0]' : 0.10897}
{'[0, 6, 6, 0, 4, 4, 1, 0, 28, 0, 6, 28, 1, 1, 0, 1, 0, 0]' : 0.108926}
{'[0, 6, 6, 0, 4, 4, 1, 0, 28, 0, 6, 28, 1, 1, 0, 1, 0, 0]' : 0.109024}
{'[0, 6, 6, 0, 4, 4, 1, 0, 28, 0, 6, 28, 1, 1, 0, 1, 0, 0]' : 0.109049}
{'[0, 6, 6, 0, 4, 4, 1, 0, 28, 0, 6, 28, 1, 1, 0, 1, 0, 0]' : 0.106363}
{'[0, 6, 6, 0, 4, 4, 1, 0, 28, 0, 6, 28, 1, 1, 0, 1, 0, 0]' : 0.106678}
{'[0, 6, 6, 0, 4, 4, 1, 0, 28, 0, 6, 28, 1, 1, 0, 1, 0, 0]' : 0.10614}
{'[0, 6, 6, 0, 4, 4, 1, 0, 28, 0, 6, 28, 1, 1, 0, 1, 0, 0]' : 0.106565}
{'[0, 6, 6, 0, 4, 4, 1, 0, 28, 0, 6, 28, 1, 1, 0, 1, 0, 0]' : 0.106287}
{'[0, 6, 6, 0, 4, 4, 1, 0, 28, 0, 6, 28, 1, 1, 0, 1, 0, 0]' : 0.108335}
{'[0, 6, 6, 0, 4, 4, 1, 0, 28, 0, 6, 28, 1, 1, 0, 1, 0, 0]' : 0.108983}
{'[0, 6, 6, 0, 4, 4, 1, 0, 28, 0, 6, 28, 1, 1, 0, 1, 0, 0]' : 0.108991}

out:
 ["{'[0, 6, 6, 0, 4, 4, 1, 0, 28, 0, 6, 28, 1, 1, 0, 1, 0, 0]' : 0.109083}", "{'[0, 6, 6, 0, 4, 4, 1, 0, 28, 0, 6, 28, 1, 1, 0, 1, 0, 0]' : 0.10901}", "{'[0, 6, 6, 0, 4, 4, 1, 0, 28, 0, 6, 28, 1, 1, 0, 1, 0, 0]' : 0.10893}", "{'[0, 6, 6, 0, 4, 4, 1, 0, 28, 0, 6, 28, 1, 1, 0, 1, 0, 0]' : 0.109015}", "{'[0, 6, 6, 0, 4, 4, 1, 0, 28, 0, 6, 28, 1, 1, 0, 1, 0, 0]' : 0.108995}", "{'[0, 6, 6, 0, 4, 4, 1, 0, 28, 0, 6, 28, 1, 1, 0, 1, 0, 0]' : 0.108923}", "{'[0, 6, 6, 0, 4, 4, 1, 0, 28, 0, 6, 28, 1, 1, 0, 1, 0, 0]' : 0.108908}", "{'[0, 6, 6, 0, 4, 4, 1, 0, 28, 0, 6, 28, 1, 1, 0, 1, 0, 0]' : 0.109416}", "{'[0, 6, 6, 0, 4, 4, 1, 0, 28, 0, 6, 28, 1, 1, 0, 1, 0, 0]' : 0.106546}", "{'[0, 6, 6, 0, 4, 4, 1, 0, 28, 0, 6, 28, 1, 1, 0, 1, 0, 0]' : 0.106509}", "{'[0, 6, 6, 0, 4, 4, 1, 0, 28, 0, 6, 28, 1, 1, 0, 1, 0, 0]' : 0.109285}", "{'[0, 6, 6, 0, 4, 4, 1, 0, 28, 0, 6, 28, 1, 1, 0, 1, 0, 0]' : 0.109298}", "{'[0, 6, 6, 0, 4, 4, 1, 0, 28, 0, 6, 28, 1, 1, 0, 1, 0, 0]' : 0.109299}", "{'[0, 6, 6, 0, 4, 4, 1, 0, 28, 0, 6, 28, 1, 1, 0, 1, 0, 0]' : 0.109171}", "{'[0, 6, 6, 0, 4, 4, 1, 0, 28, 0, 6, 28, 1, 1, 0, 1, 0, 0]' : 0.108964}", "{'[0, 6, 6, 0, 4, 4, 1, 0, 28, 0, 6, 28, 1, 1, 0, 1, 0, 0]' : 0.108921}", "{'[0, 6, 6, 0, 4, 4, 1, 0, 28, 0, 6, 28, 1, 1, 0, 1, 0, 0]' : 0.108946}", "{'[0, 6, 6, 0, 4, 4, 1, 0, 28, 0, 6, 28, 1, 1, 0, 1, 0, 0]' : 0.109052}", "{'[0, 6, 6, 0, 4, 4, 1, 0, 28, 0, 6, 28, 1, 1, 0, 1, 0, 0]' : 0.10897}", "{'[0, 6, 6, 0, 4, 4, 1, 0, 28, 0, 6, 28, 1, 1, 0, 1, 0, 0]' : 0.108926}", "{'[0, 6, 6, 0, 4, 4, 1, 0, 28, 0, 6, 28, 1, 1, 0, 1, 0, 0]' : 0.109024}", "{'[0, 6, 6, 0, 4, 4, 1, 0, 28, 0, 6, 28, 1, 1, 0, 1, 0, 0]' : 0.109049}", "{'[0, 6, 6, 0, 4, 4, 1, 0, 28, 0, 6, 28, 1, 1, 0, 1, 0, 0]' : 0.106363}", "{'[0, 6, 6, 0, 4, 4, 1, 0, 28, 0, 6, 28, 1, 1, 0, 1, 0, 0]' : 0.106678}", "{'[0, 6, 6, 0, 4, 4, 1, 0, 28, 0, 6, 28, 1, 1, 0, 1, 0, 0]' : 0.10614}", "{'[0, 6, 6, 0, 4, 4, 1, 0, 28, 0, 6, 28, 1, 1, 0, 1, 0, 0]' : 0.106565}", "{'[0, 6, 6, 0, 4, 4, 1, 0, 28, 0, 6, 28, 1, 1, 0, 1, 0, 0]' : 0.106287}", "{'[0, 6, 6, 0, 4, 4, 1, 0, 28, 0, 6, 28, 1, 1, 0, 1, 0, 0]' : 0.108335}", "{'[0, 6, 6, 0, 4, 4, 1, 0, 28, 0, 6, 28, 1, 1, 0, 1, 0, 0]' : 0.108983}", "{'[0, 6, 6, 0, 4, 4, 1, 0, 28, 0, 6, 28, 1, 1, 0, 1, 0, 0]' : 0.108991}"]
returning from 'run': {'[0, 6, 6, 0, 4, 4, 1, 0, 28, 0, 6, 28, 1, 1, 0, 1, 0, 0]': ([0.109083, 0.10901, 0.10893, 0.109015, 0.108995, 0.108923, 0.108908, 0.109416, 0.106546, 0.106509, 0.109285, 0.109298, 0.109299, 0.109171, 0.108964, 0.108921, 0.108946, 0.109052, 0.10897, 0.108926, 0.109024, 0.109049, 0.106363, 0.106678, 0.10614, 0.106565, 0.106287, 0.108335, 0.108983, 0.108991], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 6, 0, 4, 4, 1, 0, 28, 0, 6, 28, 1, 1, 0, 1, 0, 0]': ([0.109083, 0.10901, 0.10893, 0.109015, 0.108995, 0.108923, 0.108908, 0.109416, 0.106546, 0.106509, 0.109285, 0.109298, 0.109299, 0.109171, 0.108964, 0.108921, 0.108946, 0.109052, 0.10897, 0.108926, 0.109024, 0.109049, 0.106363, 0.106678, 0.10614, 0.106565, 0.106287, 0.108335, 0.108983, 0.108991], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	4
        Additions: 		1488
        Multiplications: 	684
        Divisions: 		0
        Logical: 		0
        Reads: 			2994
        Writes: 		533
        Comparisons:		16
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest50.exe __orio_perftest50.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest50.exe  
Program Test Output: 
{'[6, 6, 3, 4, 4, 0, 1, 0, 0, 0, 12, 28, 1, 1, 0, 1, 0, 1]' : 0.100216}
{'[6, 6, 3, 4, 4, 0, 1, 0, 0, 0, 12, 28, 1, 1, 0, 1, 0, 1]' : 0.10048}
{'[6, 6, 3, 4, 4, 0, 1, 0, 0, 0, 12, 28, 1, 1, 0, 1, 0, 1]' : 0.100447}
{'[6, 6, 3, 4, 4, 0, 1, 0, 0, 0, 12, 28, 1, 1, 0, 1, 0, 1]' : 0.100422}
{'[6, 6, 3, 4, 4, 0, 1, 0, 0, 0, 12, 28, 1, 1, 0, 1, 0, 1]' : 0.0997889}
{'[6, 6, 3, 4, 4, 0, 1, 0, 0, 0, 12, 28, 1, 1, 0, 1, 0, 1]' : 0.098475}
{'[6, 6, 3, 4, 4, 0, 1, 0, 0, 0, 12, 28, 1, 1, 0, 1, 0, 1]' : 0.0982871}
{'[6, 6, 3, 4, 4, 0, 1, 0, 0, 0, 12, 28, 1, 1, 0, 1, 0, 1]' : 0.0982132}
{'[6, 6, 3, 4, 4, 0, 1, 0, 0, 0, 12, 28, 1, 1, 0, 1, 0, 1]' : 0.0980899}
{'[6, 6, 3, 4, 4, 0, 1, 0, 0, 0, 12, 28, 1, 1, 0, 1, 0, 1]' : 0.098186}
{'[6, 6, 3, 4, 4, 0, 1, 0, 0, 0, 12, 28, 1, 1, 0, 1, 0, 1]' : 0.098557}
{'[6, 6, 3, 4, 4, 0, 1, 0, 0, 0, 12, 28, 1, 1, 0, 1, 0, 1]' : 0.0981269}
{'[6, 6, 3, 4, 4, 0, 1, 0, 0, 0, 12, 28, 1, 1, 0, 1, 0, 1]' : 0.0981688}
{'[6, 6, 3, 4, 4, 0, 1, 0, 0, 0, 12, 28, 1, 1, 0, 1, 0, 1]' : 0.0981369}
{'[6, 6, 3, 4, 4, 0, 1, 0, 0, 0, 12, 28, 1, 1, 0, 1, 0, 1]' : 0.0980899}
{'[6, 6, 3, 4, 4, 0, 1, 0, 0, 0, 12, 28, 1, 1, 0, 1, 0, 1]' : 0.0991549}
{'[6, 6, 3, 4, 4, 0, 1, 0, 0, 0, 12, 28, 1, 1, 0, 1, 0, 1]' : 0.0983009}
{'[6, 6, 3, 4, 4, 0, 1, 0, 0, 0, 12, 28, 1, 1, 0, 1, 0, 1]' : 0.0982709}
{'[6, 6, 3, 4, 4, 0, 1, 0, 0, 0, 12, 28, 1, 1, 0, 1, 0, 1]' : 0.0981078}
{'[6, 6, 3, 4, 4, 0, 1, 0, 0, 0, 12, 28, 1, 1, 0, 1, 0, 1]' : 0.098244}
{'[6, 6, 3, 4, 4, 0, 1, 0, 0, 0, 12, 28, 1, 1, 0, 1, 0, 1]' : 0.0985758}
{'[6, 6, 3, 4, 4, 0, 1, 0, 0, 0, 12, 28, 1, 1, 0, 1, 0, 1]' : 0.0981441}
{'[6, 6, 3, 4, 4, 0, 1, 0, 0, 0, 12, 28, 1, 1, 0, 1, 0, 1]' : 0.0981681}
{'[6, 6, 3, 4, 4, 0, 1, 0, 0, 0, 12, 28, 1, 1, 0, 1, 0, 1]' : 0.0980082}
{'[6, 6, 3, 4, 4, 0, 1, 0, 0, 0, 12, 28, 1, 1, 0, 1, 0, 1]' : 0.098191}
{'[6, 6, 3, 4, 4, 0, 1, 0, 0, 0, 12, 28, 1, 1, 0, 1, 0, 1]' : 0.0987082}
{'[6, 6, 3, 4, 4, 0, 1, 0, 0, 0, 12, 28, 1, 1, 0, 1, 0, 1]' : 0.100403}
{'[6, 6, 3, 4, 4, 0, 1, 0, 0, 0, 12, 28, 1, 1, 0, 1, 0, 1]' : 0.100443}
{'[6, 6, 3, 4, 4, 0, 1, 0, 0, 0, 12, 28, 1, 1, 0, 1, 0, 1]' : 0.10065}
{'[6, 6, 3, 4, 4, 0, 1, 0, 0, 0, 12, 28, 1, 1, 0, 1, 0, 1]' : 0.100419}

out:
 ["{'[6, 6, 3, 4, 4, 0, 1, 0, 0, 0, 12, 28, 1, 1, 0, 1, 0, 1]' : 0.100216}", "{'[6, 6, 3, 4, 4, 0, 1, 0, 0, 0, 12, 28, 1, 1, 0, 1, 0, 1]' : 0.10048}", "{'[6, 6, 3, 4, 4, 0, 1, 0, 0, 0, 12, 28, 1, 1, 0, 1, 0, 1]' : 0.100447}", "{'[6, 6, 3, 4, 4, 0, 1, 0, 0, 0, 12, 28, 1, 1, 0, 1, 0, 1]' : 0.100422}", "{'[6, 6, 3, 4, 4, 0, 1, 0, 0, 0, 12, 28, 1, 1, 0, 1, 0, 1]' : 0.0997889}", "{'[6, 6, 3, 4, 4, 0, 1, 0, 0, 0, 12, 28, 1, 1, 0, 1, 0, 1]' : 0.098475}", "{'[6, 6, 3, 4, 4, 0, 1, 0, 0, 0, 12, 28, 1, 1, 0, 1, 0, 1]' : 0.0982871}", "{'[6, 6, 3, 4, 4, 0, 1, 0, 0, 0, 12, 28, 1, 1, 0, 1, 0, 1]' : 0.0982132}", "{'[6, 6, 3, 4, 4, 0, 1, 0, 0, 0, 12, 28, 1, 1, 0, 1, 0, 1]' : 0.0980899}", "{'[6, 6, 3, 4, 4, 0, 1, 0, 0, 0, 12, 28, 1, 1, 0, 1, 0, 1]' : 0.098186}", "{'[6, 6, 3, 4, 4, 0, 1, 0, 0, 0, 12, 28, 1, 1, 0, 1, 0, 1]' : 0.098557}", "{'[6, 6, 3, 4, 4, 0, 1, 0, 0, 0, 12, 28, 1, 1, 0, 1, 0, 1]' : 0.0981269}", "{'[6, 6, 3, 4, 4, 0, 1, 0, 0, 0, 12, 28, 1, 1, 0, 1, 0, 1]' : 0.0981688}", "{'[6, 6, 3, 4, 4, 0, 1, 0, 0, 0, 12, 28, 1, 1, 0, 1, 0, 1]' : 0.0981369}", "{'[6, 6, 3, 4, 4, 0, 1, 0, 0, 0, 12, 28, 1, 1, 0, 1, 0, 1]' : 0.0980899}", "{'[6, 6, 3, 4, 4, 0, 1, 0, 0, 0, 12, 28, 1, 1, 0, 1, 0, 1]' : 0.0991549}", "{'[6, 6, 3, 4, 4, 0, 1, 0, 0, 0, 12, 28, 1, 1, 0, 1, 0, 1]' : 0.0983009}", "{'[6, 6, 3, 4, 4, 0, 1, 0, 0, 0, 12, 28, 1, 1, 0, 1, 0, 1]' : 0.0982709}", "{'[6, 6, 3, 4, 4, 0, 1, 0, 0, 0, 12, 28, 1, 1, 0, 1, 0, 1]' : 0.0981078}", "{'[6, 6, 3, 4, 4, 0, 1, 0, 0, 0, 12, 28, 1, 1, 0, 1, 0, 1]' : 0.098244}", "{'[6, 6, 3, 4, 4, 0, 1, 0, 0, 0, 12, 28, 1, 1, 0, 1, 0, 1]' : 0.0985758}", "{'[6, 6, 3, 4, 4, 0, 1, 0, 0, 0, 12, 28, 1, 1, 0, 1, 0, 1]' : 0.0981441}", "{'[6, 6, 3, 4, 4, 0, 1, 0, 0, 0, 12, 28, 1, 1, 0, 1, 0, 1]' : 0.0981681}", "{'[6, 6, 3, 4, 4, 0, 1, 0, 0, 0, 12, 28, 1, 1, 0, 1, 0, 1]' : 0.0980082}", "{'[6, 6, 3, 4, 4, 0, 1, 0, 0, 0, 12, 28, 1, 1, 0, 1, 0, 1]' : 0.098191}", "{'[6, 6, 3, 4, 4, 0, 1, 0, 0, 0, 12, 28, 1, 1, 0, 1, 0, 1]' : 0.0987082}", "{'[6, 6, 3, 4, 4, 0, 1, 0, 0, 0, 12, 28, 1, 1, 0, 1, 0, 1]' : 0.100403}", "{'[6, 6, 3, 4, 4, 0, 1, 0, 0, 0, 12, 28, 1, 1, 0, 1, 0, 1]' : 0.100443}", "{'[6, 6, 3, 4, 4, 0, 1, 0, 0, 0, 12, 28, 1, 1, 0, 1, 0, 1]' : 0.10065}", "{'[6, 6, 3, 4, 4, 0, 1, 0, 0, 0, 12, 28, 1, 1, 0, 1, 0, 1]' : 0.100419}"]
returning from 'run': {'[6, 6, 3, 4, 4, 0, 1, 0, 0, 0, 12, 28, 1, 1, 0, 1, 0, 1]': ([0.100216, 0.10048, 0.100447, 0.100422, 0.0997889, 0.098475, 0.0982871, 0.0982132, 0.0980899, 0.098186, 0.098557, 0.0981269, 0.0981688, 0.0981369, 0.0980899, 0.0991549, 0.0983009, 0.0982709, 0.0981078, 0.098244, 0.0985758, 0.0981441, 0.0981681, 0.0980082, 0.098191, 0.0987082, 0.100403, 0.100443, 0.10065, 0.100419], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 3, 4, 4, 0, 1, 0, 0, 0, 12, 28, 1, 1, 0, 1, 0, 1]': ([0.100216, 0.10048, 0.100447, 0.100422, 0.0997889, 0.098475, 0.0982871, 0.0982132, 0.0980899, 0.098186, 0.098557, 0.0981269, 0.0981688, 0.0981369, 0.0980899, 0.0991549, 0.0983009, 0.0982709, 0.0981078, 0.098244, 0.0985758, 0.0981441, 0.0981681, 0.0980082, 0.098191, 0.0987082, 0.100403, 0.100443, 0.10065, 0.100419], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		1338
        Multiplications: 	612
        Divisions: 		0
        Logical: 		0
        Reads: 			2711
        Writes: 		501
        Comparisons:		15
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest51.exe __orio_perftest51.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest51.exe  
Program Test Output: 
{'[6, 6, 0, 0, 4, 0, 0, 1, 28, 0, 5, 25, 1, 0, 0, 1, 0, 0]' : 0.104826}
{'[6, 6, 0, 0, 4, 0, 0, 1, 28, 0, 5, 25, 1, 0, 0, 1, 0, 0]' : 0.104687}
{'[6, 6, 0, 0, 4, 0, 0, 1, 28, 0, 5, 25, 1, 0, 0, 1, 0, 0]' : 0.104888}
{'[6, 6, 0, 0, 4, 0, 0, 1, 28, 0, 5, 25, 1, 0, 0, 1, 0, 0]' : 0.105166}
{'[6, 6, 0, 0, 4, 0, 0, 1, 28, 0, 5, 25, 1, 0, 0, 1, 0, 0]' : 0.10458}
{'[6, 6, 0, 0, 4, 0, 0, 1, 28, 0, 5, 25, 1, 0, 0, 1, 0, 0]' : 0.103951}
{'[6, 6, 0, 0, 4, 0, 0, 1, 28, 0, 5, 25, 1, 0, 0, 1, 0, 0]' : 0.0962379}
{'[6, 6, 0, 0, 4, 0, 0, 1, 28, 0, 5, 25, 1, 0, 0, 1, 0, 0]' : 0.0960579}
{'[6, 6, 0, 0, 4, 0, 0, 1, 28, 0, 5, 25, 1, 0, 0, 1, 0, 0]' : 0.0962012}
{'[6, 6, 0, 0, 4, 0, 0, 1, 28, 0, 5, 25, 1, 0, 0, 1, 0, 0]' : 0.0960929}
{'[6, 6, 0, 0, 4, 0, 0, 1, 28, 0, 5, 25, 1, 0, 0, 1, 0, 0]' : 0.0960271}
{'[6, 6, 0, 0, 4, 0, 0, 1, 28, 0, 5, 25, 1, 0, 0, 1, 0, 0]' : 0.0960081}
{'[6, 6, 0, 0, 4, 0, 0, 1, 28, 0, 5, 25, 1, 0, 0, 1, 0, 0]' : 0.0960159}
{'[6, 6, 0, 0, 4, 0, 0, 1, 28, 0, 5, 25, 1, 0, 0, 1, 0, 0]' : 0.0959201}
{'[6, 6, 0, 0, 4, 0, 0, 1, 28, 0, 5, 25, 1, 0, 0, 1, 0, 0]' : 0.0946312}
{'[6, 6, 0, 0, 4, 0, 0, 1, 28, 0, 5, 25, 1, 0, 0, 1, 0, 0]' : 0.0943801}
{'[6, 6, 0, 0, 4, 0, 0, 1, 28, 0, 5, 25, 1, 0, 0, 1, 0, 0]' : 0.094198}
{'[6, 6, 0, 0, 4, 0, 0, 1, 28, 0, 5, 25, 1, 0, 0, 1, 0, 0]' : 0.0942171}
{'[6, 6, 0, 0, 4, 0, 0, 1, 28, 0, 5, 25, 1, 0, 0, 1, 0, 0]' : 0.094311}
{'[6, 6, 0, 0, 4, 0, 0, 1, 28, 0, 5, 25, 1, 0, 0, 1, 0, 0]' : 0.093611}
{'[6, 6, 0, 0, 4, 0, 0, 1, 28, 0, 5, 25, 1, 0, 0, 1, 0, 0]' : 0.0921152}
{'[6, 6, 0, 0, 4, 0, 0, 1, 28, 0, 5, 25, 1, 0, 0, 1, 0, 0]' : 0.0922661}
{'[6, 6, 0, 0, 4, 0, 0, 1, 28, 0, 5, 25, 1, 0, 0, 1, 0, 0]' : 0.0923021}
{'[6, 6, 0, 0, 4, 0, 0, 1, 28, 0, 5, 25, 1, 0, 0, 1, 0, 0]' : 0.09233}
{'[6, 6, 0, 0, 4, 0, 0, 1, 28, 0, 5, 25, 1, 0, 0, 1, 0, 0]' : 0.095109}
{'[6, 6, 0, 0, 4, 0, 0, 1, 28, 0, 5, 25, 1, 0, 0, 1, 0, 0]' : 0.0960741}
{'[6, 6, 0, 0, 4, 0, 0, 1, 28, 0, 5, 25, 1, 0, 0, 1, 0, 0]' : 0.096189}
{'[6, 6, 0, 0, 4, 0, 0, 1, 28, 0, 5, 25, 1, 0, 0, 1, 0, 0]' : 0.0958979}
{'[6, 6, 0, 0, 4, 0, 0, 1, 28, 0, 5, 25, 1, 0, 0, 1, 0, 0]' : 0.0959928}
{'[6, 6, 0, 0, 4, 0, 0, 1, 28, 0, 5, 25, 1, 0, 0, 1, 0, 0]' : 0.0953021}

out:
 ["{'[6, 6, 0, 0, 4, 0, 0, 1, 28, 0, 5, 25, 1, 0, 0, 1, 0, 0]' : 0.104826}", "{'[6, 6, 0, 0, 4, 0, 0, 1, 28, 0, 5, 25, 1, 0, 0, 1, 0, 0]' : 0.104687}", "{'[6, 6, 0, 0, 4, 0, 0, 1, 28, 0, 5, 25, 1, 0, 0, 1, 0, 0]' : 0.104888}", "{'[6, 6, 0, 0, 4, 0, 0, 1, 28, 0, 5, 25, 1, 0, 0, 1, 0, 0]' : 0.105166}", "{'[6, 6, 0, 0, 4, 0, 0, 1, 28, 0, 5, 25, 1, 0, 0, 1, 0, 0]' : 0.10458}", "{'[6, 6, 0, 0, 4, 0, 0, 1, 28, 0, 5, 25, 1, 0, 0, 1, 0, 0]' : 0.103951}", "{'[6, 6, 0, 0, 4, 0, 0, 1, 28, 0, 5, 25, 1, 0, 0, 1, 0, 0]' : 0.0962379}", "{'[6, 6, 0, 0, 4, 0, 0, 1, 28, 0, 5, 25, 1, 0, 0, 1, 0, 0]' : 0.0960579}", "{'[6, 6, 0, 0, 4, 0, 0, 1, 28, 0, 5, 25, 1, 0, 0, 1, 0, 0]' : 0.0962012}", "{'[6, 6, 0, 0, 4, 0, 0, 1, 28, 0, 5, 25, 1, 0, 0, 1, 0, 0]' : 0.0960929}", "{'[6, 6, 0, 0, 4, 0, 0, 1, 28, 0, 5, 25, 1, 0, 0, 1, 0, 0]' : 0.0960271}", "{'[6, 6, 0, 0, 4, 0, 0, 1, 28, 0, 5, 25, 1, 0, 0, 1, 0, 0]' : 0.0960081}", "{'[6, 6, 0, 0, 4, 0, 0, 1, 28, 0, 5, 25, 1, 0, 0, 1, 0, 0]' : 0.0960159}", "{'[6, 6, 0, 0, 4, 0, 0, 1, 28, 0, 5, 25, 1, 0, 0, 1, 0, 0]' : 0.0959201}", "{'[6, 6, 0, 0, 4, 0, 0, 1, 28, 0, 5, 25, 1, 0, 0, 1, 0, 0]' : 0.0946312}", "{'[6, 6, 0, 0, 4, 0, 0, 1, 28, 0, 5, 25, 1, 0, 0, 1, 0, 0]' : 0.0943801}", "{'[6, 6, 0, 0, 4, 0, 0, 1, 28, 0, 5, 25, 1, 0, 0, 1, 0, 0]' : 0.094198}", "{'[6, 6, 0, 0, 4, 0, 0, 1, 28, 0, 5, 25, 1, 0, 0, 1, 0, 0]' : 0.0942171}", "{'[6, 6, 0, 0, 4, 0, 0, 1, 28, 0, 5, 25, 1, 0, 0, 1, 0, 0]' : 0.094311}", "{'[6, 6, 0, 0, 4, 0, 0, 1, 28, 0, 5, 25, 1, 0, 0, 1, 0, 0]' : 0.093611}", "{'[6, 6, 0, 0, 4, 0, 0, 1, 28, 0, 5, 25, 1, 0, 0, 1, 0, 0]' : 0.0921152}", "{'[6, 6, 0, 0, 4, 0, 0, 1, 28, 0, 5, 25, 1, 0, 0, 1, 0, 0]' : 0.0922661}", "{'[6, 6, 0, 0, 4, 0, 0, 1, 28, 0, 5, 25, 1, 0, 0, 1, 0, 0]' : 0.0923021}", "{'[6, 6, 0, 0, 4, 0, 0, 1, 28, 0, 5, 25, 1, 0, 0, 1, 0, 0]' : 0.09233}", "{'[6, 6, 0, 0, 4, 0, 0, 1, 28, 0, 5, 25, 1, 0, 0, 1, 0, 0]' : 0.095109}", "{'[6, 6, 0, 0, 4, 0, 0, 1, 28, 0, 5, 25, 1, 0, 0, 1, 0, 0]' : 0.0960741}", "{'[6, 6, 0, 0, 4, 0, 0, 1, 28, 0, 5, 25, 1, 0, 0, 1, 0, 0]' : 0.096189}", "{'[6, 6, 0, 0, 4, 0, 0, 1, 28, 0, 5, 25, 1, 0, 0, 1, 0, 0]' : 0.0958979}", "{'[6, 6, 0, 0, 4, 0, 0, 1, 28, 0, 5, 25, 1, 0, 0, 1, 0, 0]' : 0.0959928}", "{'[6, 6, 0, 0, 4, 0, 0, 1, 28, 0, 5, 25, 1, 0, 0, 1, 0, 0]' : 0.0953021}"]
returning from 'run': {'[6, 6, 0, 0, 4, 0, 0, 1, 28, 0, 5, 25, 1, 0, 0, 1, 0, 0]': ([0.104826, 0.104687, 0.104888, 0.105166, 0.10458, 0.103951, 0.0962379, 0.0960579, 0.0962012, 0.0960929, 0.0960271, 0.0960081, 0.0960159, 0.0959201, 0.0946312, 0.0943801, 0.094198, 0.0942171, 0.094311, 0.093611, 0.0921152, 0.0922661, 0.0923021, 0.09233, 0.095109, 0.0960741, 0.096189, 0.0958979, 0.0959928, 0.0953021], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 0, 0, 4, 0, 0, 1, 28, 0, 5, 25, 1, 0, 0, 1, 0, 0]': ([0.104826, 0.104687, 0.104888, 0.105166, 0.10458, 0.103951, 0.0962379, 0.0960579, 0.0962012, 0.0960929, 0.0960271, 0.0960081, 0.0960159, 0.0959201, 0.0946312, 0.0943801, 0.094198, 0.0942171, 0.094311, 0.093611, 0.0921152, 0.0922661, 0.0923021, 0.09233, 0.095109, 0.0960741, 0.096189, 0.0958979, 0.0959928, 0.0953021], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	5
        Additions: 		1617
        Multiplications: 	666
        Divisions: 		0
        Logical: 		0
        Reads: 			3153
        Writes: 		564
        Comparisons:		22
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest52.exe __orio_perftest52.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest52.exe  
Program Test Output: 
{'[1, 6, 6, 2, 4, 0, 1, 1, 27, 0, 29, 27, 1, 1, 0, 1, 0, 1]' : 0.108699}
{'[1, 6, 6, 2, 4, 0, 1, 1, 27, 0, 29, 27, 1, 1, 0, 1, 0, 1]' : 0.108555}
{'[1, 6, 6, 2, 4, 0, 1, 1, 27, 0, 29, 27, 1, 1, 0, 1, 0, 1]' : 0.108553}
{'[1, 6, 6, 2, 4, 0, 1, 1, 27, 0, 29, 27, 1, 1, 0, 1, 0, 1]' : 0.108517}
{'[1, 6, 6, 2, 4, 0, 1, 1, 27, 0, 29, 27, 1, 1, 0, 1, 0, 1]' : 0.108501}
{'[1, 6, 6, 2, 4, 0, 1, 1, 27, 0, 29, 27, 1, 1, 0, 1, 0, 1]' : 0.10812}
{'[1, 6, 6, 2, 4, 0, 1, 1, 27, 0, 29, 27, 1, 1, 0, 1, 0, 1]' : 0.0955031}
{'[1, 6, 6, 2, 4, 0, 1, 1, 27, 0, 29, 27, 1, 1, 0, 1, 0, 1]' : 0.0934181}
{'[1, 6, 6, 2, 4, 0, 1, 1, 27, 0, 29, 27, 1, 1, 0, 1, 0, 1]' : 0.0935171}
{'[1, 6, 6, 2, 4, 0, 1, 1, 27, 0, 29, 27, 1, 1, 0, 1, 0, 1]' : 0.0968001}
{'[1, 6, 6, 2, 4, 0, 1, 1, 27, 0, 29, 27, 1, 1, 0, 1, 0, 1]' : 0.098022}
{'[1, 6, 6, 2, 4, 0, 1, 1, 27, 0, 29, 27, 1, 1, 0, 1, 0, 1]' : 0.0957479}
{'[1, 6, 6, 2, 4, 0, 1, 1, 27, 0, 29, 27, 1, 1, 0, 1, 0, 1]' : 0.0934429}
{'[1, 6, 6, 2, 4, 0, 1, 1, 27, 0, 29, 27, 1, 1, 0, 1, 0, 1]' : 0.0935171}
{'[1, 6, 6, 2, 4, 0, 1, 1, 27, 0, 29, 27, 1, 1, 0, 1, 0, 1]' : 0.0954239}
{'[1, 6, 6, 2, 4, 0, 1, 1, 27, 0, 29, 27, 1, 1, 0, 1, 0, 1]' : 0.0965192}
{'[1, 6, 6, 2, 4, 0, 1, 1, 27, 0, 29, 27, 1, 1, 0, 1, 0, 1]' : 0.0940111}
{'[1, 6, 6, 2, 4, 0, 1, 1, 27, 0, 29, 27, 1, 1, 0, 1, 0, 1]' : 0.0938089}
{'[1, 6, 6, 2, 4, 0, 1, 1, 27, 0, 29, 27, 1, 1, 0, 1, 0, 1]' : 0.0935478}
{'[1, 6, 6, 2, 4, 0, 1, 1, 27, 0, 29, 27, 1, 1, 0, 1, 0, 1]' : 0.09477}
{'[1, 6, 6, 2, 4, 0, 1, 1, 27, 0, 29, 27, 1, 1, 0, 1, 0, 1]' : 0.096386}
{'[1, 6, 6, 2, 4, 0, 1, 1, 27, 0, 29, 27, 1, 1, 0, 1, 0, 1]' : 0.0980179}
{'[1, 6, 6, 2, 4, 0, 1, 1, 27, 0, 29, 27, 1, 1, 0, 1, 0, 1]' : 0.0959189}
{'[1, 6, 6, 2, 4, 0, 1, 1, 27, 0, 29, 27, 1, 1, 0, 1, 0, 1]' : 0.095834}
{'[1, 6, 6, 2, 4, 0, 1, 1, 27, 0, 29, 27, 1, 1, 0, 1, 0, 1]' : 0.096514}
{'[1, 6, 6, 2, 4, 0, 1, 1, 27, 0, 29, 27, 1, 1, 0, 1, 0, 1]' : 0.0980489}
{'[1, 6, 6, 2, 4, 0, 1, 1, 27, 0, 29, 27, 1, 1, 0, 1, 0, 1]' : 0.097949}
{'[1, 6, 6, 2, 4, 0, 1, 1, 27, 0, 29, 27, 1, 1, 0, 1, 0, 1]' : 0.0980859}
{'[1, 6, 6, 2, 4, 0, 1, 1, 27, 0, 29, 27, 1, 1, 0, 1, 0, 1]' : 0.0974009}
{'[1, 6, 6, 2, 4, 0, 1, 1, 27, 0, 29, 27, 1, 1, 0, 1, 0, 1]' : 0.093775}

out:
 ["{'[1, 6, 6, 2, 4, 0, 1, 1, 27, 0, 29, 27, 1, 1, 0, 1, 0, 1]' : 0.108699}", "{'[1, 6, 6, 2, 4, 0, 1, 1, 27, 0, 29, 27, 1, 1, 0, 1, 0, 1]' : 0.108555}", "{'[1, 6, 6, 2, 4, 0, 1, 1, 27, 0, 29, 27, 1, 1, 0, 1, 0, 1]' : 0.108553}", "{'[1, 6, 6, 2, 4, 0, 1, 1, 27, 0, 29, 27, 1, 1, 0, 1, 0, 1]' : 0.108517}", "{'[1, 6, 6, 2, 4, 0, 1, 1, 27, 0, 29, 27, 1, 1, 0, 1, 0, 1]' : 0.108501}", "{'[1, 6, 6, 2, 4, 0, 1, 1, 27, 0, 29, 27, 1, 1, 0, 1, 0, 1]' : 0.10812}", "{'[1, 6, 6, 2, 4, 0, 1, 1, 27, 0, 29, 27, 1, 1, 0, 1, 0, 1]' : 0.0955031}", "{'[1, 6, 6, 2, 4, 0, 1, 1, 27, 0, 29, 27, 1, 1, 0, 1, 0, 1]' : 0.0934181}", "{'[1, 6, 6, 2, 4, 0, 1, 1, 27, 0, 29, 27, 1, 1, 0, 1, 0, 1]' : 0.0935171}", "{'[1, 6, 6, 2, 4, 0, 1, 1, 27, 0, 29, 27, 1, 1, 0, 1, 0, 1]' : 0.0968001}", "{'[1, 6, 6, 2, 4, 0, 1, 1, 27, 0, 29, 27, 1, 1, 0, 1, 0, 1]' : 0.098022}", "{'[1, 6, 6, 2, 4, 0, 1, 1, 27, 0, 29, 27, 1, 1, 0, 1, 0, 1]' : 0.0957479}", "{'[1, 6, 6, 2, 4, 0, 1, 1, 27, 0, 29, 27, 1, 1, 0, 1, 0, 1]' : 0.0934429}", "{'[1, 6, 6, 2, 4, 0, 1, 1, 27, 0, 29, 27, 1, 1, 0, 1, 0, 1]' : 0.0935171}", "{'[1, 6, 6, 2, 4, 0, 1, 1, 27, 0, 29, 27, 1, 1, 0, 1, 0, 1]' : 0.0954239}", "{'[1, 6, 6, 2, 4, 0, 1, 1, 27, 0, 29, 27, 1, 1, 0, 1, 0, 1]' : 0.0965192}", "{'[1, 6, 6, 2, 4, 0, 1, 1, 27, 0, 29, 27, 1, 1, 0, 1, 0, 1]' : 0.0940111}", "{'[1, 6, 6, 2, 4, 0, 1, 1, 27, 0, 29, 27, 1, 1, 0, 1, 0, 1]' : 0.0938089}", "{'[1, 6, 6, 2, 4, 0, 1, 1, 27, 0, 29, 27, 1, 1, 0, 1, 0, 1]' : 0.0935478}", "{'[1, 6, 6, 2, 4, 0, 1, 1, 27, 0, 29, 27, 1, 1, 0, 1, 0, 1]' : 0.09477}", "{'[1, 6, 6, 2, 4, 0, 1, 1, 27, 0, 29, 27, 1, 1, 0, 1, 0, 1]' : 0.096386}", "{'[1, 6, 6, 2, 4, 0, 1, 1, 27, 0, 29, 27, 1, 1, 0, 1, 0, 1]' : 0.0980179}", "{'[1, 6, 6, 2, 4, 0, 1, 1, 27, 0, 29, 27, 1, 1, 0, 1, 0, 1]' : 0.0959189}", "{'[1, 6, 6, 2, 4, 0, 1, 1, 27, 0, 29, 27, 1, 1, 0, 1, 0, 1]' : 0.095834}", "{'[1, 6, 6, 2, 4, 0, 1, 1, 27, 0, 29, 27, 1, 1, 0, 1, 0, 1]' : 0.096514}", "{'[1, 6, 6, 2, 4, 0, 1, 1, 27, 0, 29, 27, 1, 1, 0, 1, 0, 1]' : 0.0980489}", "{'[1, 6, 6, 2, 4, 0, 1, 1, 27, 0, 29, 27, 1, 1, 0, 1, 0, 1]' : 0.097949}", "{'[1, 6, 6, 2, 4, 0, 1, 1, 27, 0, 29, 27, 1, 1, 0, 1, 0, 1]' : 0.0980859}", "{'[1, 6, 6, 2, 4, 0, 1, 1, 27, 0, 29, 27, 1, 1, 0, 1, 0, 1]' : 0.0974009}", "{'[1, 6, 6, 2, 4, 0, 1, 1, 27, 0, 29, 27, 1, 1, 0, 1, 0, 1]' : 0.093775}"]
returning from 'run': {'[1, 6, 6, 2, 4, 0, 1, 1, 27, 0, 29, 27, 1, 1, 0, 1, 0, 1]': ([0.108699, 0.108555, 0.108553, 0.108517, 0.108501, 0.10812, 0.0955031, 0.0934181, 0.0935171, 0.0968001, 0.098022, 0.0957479, 0.0934429, 0.0935171, 0.0954239, 0.0965192, 0.0940111, 0.0938089, 0.0935478, 0.09477, 0.096386, 0.0980179, 0.0959189, 0.095834, 0.096514, 0.0980489, 0.097949, 0.0980859, 0.0974009, 0.093775], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 6, 6, 2, 4, 0, 1, 1, 27, 0, 29, 27, 1, 1, 0, 1, 0, 1]': ([0.108699, 0.108555, 0.108553, 0.108517, 0.108501, 0.10812, 0.0955031, 0.0934181, 0.0935171, 0.0968001, 0.098022, 0.0957479, 0.0934429, 0.0935171, 0.0954239, 0.0965192, 0.0940111, 0.0938089, 0.0935478, 0.09477, 0.096386, 0.0980179, 0.0959189, 0.095834, 0.096514, 0.0980489, 0.097949, 0.0980859, 0.0974009, 0.093775], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	5
        Additions: 		2368
        Multiplications: 	1134
        Divisions: 		0
        Logical: 		0
        Reads: 			4643
        Writes: 		777
        Comparisons:		20
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest53.exe __orio_perftest53.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest53.exe  
Program Test Output: 
{'[4, 6, 5, 0, 4, 4, 0, 0, 0, 0, 29, 22, 1, 1, 0, 1, 0, 1]' : 0.0939839}
{'[4, 6, 5, 0, 4, 4, 0, 0, 0, 0, 29, 22, 1, 1, 0, 1, 0, 1]' : 0.0958421}
{'[4, 6, 5, 0, 4, 4, 0, 0, 0, 0, 29, 22, 1, 1, 0, 1, 0, 1]' : 0.093945}
{'[4, 6, 5, 0, 4, 4, 0, 0, 0, 0, 29, 22, 1, 1, 0, 1, 0, 1]' : 0.0935678}
{'[4, 6, 5, 0, 4, 4, 0, 0, 0, 0, 29, 22, 1, 1, 0, 1, 0, 1]' : 0.0934939}
{'[4, 6, 5, 0, 4, 4, 0, 0, 0, 0, 29, 22, 1, 1, 0, 1, 0, 1]' : 0.093713}
{'[4, 6, 5, 0, 4, 4, 0, 0, 0, 0, 29, 22, 1, 1, 0, 1, 0, 1]' : 0.0954461}
{'[4, 6, 5, 0, 4, 4, 0, 0, 0, 0, 29, 22, 1, 1, 0, 1, 0, 1]' : 0.0957711}
{'[4, 6, 5, 0, 4, 4, 0, 0, 0, 0, 29, 22, 1, 1, 0, 1, 0, 1]' : 0.0957551}
{'[4, 6, 5, 0, 4, 4, 0, 0, 0, 0, 29, 22, 1, 1, 0, 1, 0, 1]' : 0.0933921}
{'[4, 6, 5, 0, 4, 4, 0, 0, 0, 0, 29, 22, 1, 1, 0, 1, 0, 1]' : 0.0935969}
{'[4, 6, 5, 0, 4, 4, 0, 0, 0, 0, 29, 22, 1, 1, 0, 1, 0, 1]' : 0.0954049}
{'[4, 6, 5, 0, 4, 4, 0, 0, 0, 0, 29, 22, 1, 1, 0, 1, 0, 1]' : 0.096056}
{'[4, 6, 5, 0, 4, 4, 0, 0, 0, 0, 29, 22, 1, 1, 0, 1, 0, 1]' : 0.0946369}
{'[4, 6, 5, 0, 4, 4, 0, 0, 0, 0, 29, 22, 1, 1, 0, 1, 0, 1]' : 0.0933559}
{'[4, 6, 5, 0, 4, 4, 0, 0, 0, 0, 29, 22, 1, 1, 0, 1, 0, 1]' : 0.0935669}
{'[4, 6, 5, 0, 4, 4, 0, 0, 0, 0, 29, 22, 1, 1, 0, 1, 0, 1]' : 0.0943441}
{'[4, 6, 5, 0, 4, 4, 0, 0, 0, 0, 29, 22, 1, 1, 0, 1, 0, 1]' : 0.0958221}
{'[4, 6, 5, 0, 4, 4, 0, 0, 0, 0, 29, 22, 1, 1, 0, 1, 0, 1]' : 0.0946641}
{'[4, 6, 5, 0, 4, 4, 0, 0, 0, 0, 29, 22, 1, 1, 0, 1, 0, 1]' : 0.093251}
{'[4, 6, 5, 0, 4, 4, 0, 0, 0, 0, 29, 22, 1, 1, 0, 1, 0, 1]' : 0.0934761}
{'[4, 6, 5, 0, 4, 4, 0, 0, 0, 0, 29, 22, 1, 1, 0, 1, 0, 1]' : 0.0933371}
{'[4, 6, 5, 0, 4, 4, 0, 0, 0, 0, 29, 22, 1, 1, 0, 1, 0, 1]' : 0.0982091}
{'[4, 6, 5, 0, 4, 4, 0, 0, 0, 0, 29, 22, 1, 1, 0, 1, 0, 1]' : 0.098496}
{'[4, 6, 5, 0, 4, 4, 0, 0, 0, 0, 29, 22, 1, 1, 0, 1, 0, 1]' : 0.097115}
{'[4, 6, 5, 0, 4, 4, 0, 0, 0, 0, 29, 22, 1, 1, 0, 1, 0, 1]' : 0.095866}
{'[4, 6, 5, 0, 4, 4, 0, 0, 0, 0, 29, 22, 1, 1, 0, 1, 0, 1]' : 0.095506}
{'[4, 6, 5, 0, 4, 4, 0, 0, 0, 0, 29, 22, 1, 1, 0, 1, 0, 1]' : 0.096786}
{'[4, 6, 5, 0, 4, 4, 0, 0, 0, 0, 29, 22, 1, 1, 0, 1, 0, 1]' : 0.096786}
{'[4, 6, 5, 0, 4, 4, 0, 0, 0, 0, 29, 22, 1, 1, 0, 1, 0, 1]' : 0.0940039}

out:
 ["{'[4, 6, 5, 0, 4, 4, 0, 0, 0, 0, 29, 22, 1, 1, 0, 1, 0, 1]' : 0.0939839}", "{'[4, 6, 5, 0, 4, 4, 0, 0, 0, 0, 29, 22, 1, 1, 0, 1, 0, 1]' : 0.0958421}", "{'[4, 6, 5, 0, 4, 4, 0, 0, 0, 0, 29, 22, 1, 1, 0, 1, 0, 1]' : 0.093945}", "{'[4, 6, 5, 0, 4, 4, 0, 0, 0, 0, 29, 22, 1, 1, 0, 1, 0, 1]' : 0.0935678}", "{'[4, 6, 5, 0, 4, 4, 0, 0, 0, 0, 29, 22, 1, 1, 0, 1, 0, 1]' : 0.0934939}", "{'[4, 6, 5, 0, 4, 4, 0, 0, 0, 0, 29, 22, 1, 1, 0, 1, 0, 1]' : 0.093713}", "{'[4, 6, 5, 0, 4, 4, 0, 0, 0, 0, 29, 22, 1, 1, 0, 1, 0, 1]' : 0.0954461}", "{'[4, 6, 5, 0, 4, 4, 0, 0, 0, 0, 29, 22, 1, 1, 0, 1, 0, 1]' : 0.0957711}", "{'[4, 6, 5, 0, 4, 4, 0, 0, 0, 0, 29, 22, 1, 1, 0, 1, 0, 1]' : 0.0957551}", "{'[4, 6, 5, 0, 4, 4, 0, 0, 0, 0, 29, 22, 1, 1, 0, 1, 0, 1]' : 0.0933921}", "{'[4, 6, 5, 0, 4, 4, 0, 0, 0, 0, 29, 22, 1, 1, 0, 1, 0, 1]' : 0.0935969}", "{'[4, 6, 5, 0, 4, 4, 0, 0, 0, 0, 29, 22, 1, 1, 0, 1, 0, 1]' : 0.0954049}", "{'[4, 6, 5, 0, 4, 4, 0, 0, 0, 0, 29, 22, 1, 1, 0, 1, 0, 1]' : 0.096056}", "{'[4, 6, 5, 0, 4, 4, 0, 0, 0, 0, 29, 22, 1, 1, 0, 1, 0, 1]' : 0.0946369}", "{'[4, 6, 5, 0, 4, 4, 0, 0, 0, 0, 29, 22, 1, 1, 0, 1, 0, 1]' : 0.0933559}", "{'[4, 6, 5, 0, 4, 4, 0, 0, 0, 0, 29, 22, 1, 1, 0, 1, 0, 1]' : 0.0935669}", "{'[4, 6, 5, 0, 4, 4, 0, 0, 0, 0, 29, 22, 1, 1, 0, 1, 0, 1]' : 0.0943441}", "{'[4, 6, 5, 0, 4, 4, 0, 0, 0, 0, 29, 22, 1, 1, 0, 1, 0, 1]' : 0.0958221}", "{'[4, 6, 5, 0, 4, 4, 0, 0, 0, 0, 29, 22, 1, 1, 0, 1, 0, 1]' : 0.0946641}", "{'[4, 6, 5, 0, 4, 4, 0, 0, 0, 0, 29, 22, 1, 1, 0, 1, 0, 1]' : 0.093251}", "{'[4, 6, 5, 0, 4, 4, 0, 0, 0, 0, 29, 22, 1, 1, 0, 1, 0, 1]' : 0.0934761}", "{'[4, 6, 5, 0, 4, 4, 0, 0, 0, 0, 29, 22, 1, 1, 0, 1, 0, 1]' : 0.0933371}", "{'[4, 6, 5, 0, 4, 4, 0, 0, 0, 0, 29, 22, 1, 1, 0, 1, 0, 1]' : 0.0982091}", "{'[4, 6, 5, 0, 4, 4, 0, 0, 0, 0, 29, 22, 1, 1, 0, 1, 0, 1]' : 0.098496}", "{'[4, 6, 5, 0, 4, 4, 0, 0, 0, 0, 29, 22, 1, 1, 0, 1, 0, 1]' : 0.097115}", "{'[4, 6, 5, 0, 4, 4, 0, 0, 0, 0, 29, 22, 1, 1, 0, 1, 0, 1]' : 0.095866}", "{'[4, 6, 5, 0, 4, 4, 0, 0, 0, 0, 29, 22, 1, 1, 0, 1, 0, 1]' : 0.095506}", "{'[4, 6, 5, 0, 4, 4, 0, 0, 0, 0, 29, 22, 1, 1, 0, 1, 0, 1]' : 0.096786}", "{'[4, 6, 5, 0, 4, 4, 0, 0, 0, 0, 29, 22, 1, 1, 0, 1, 0, 1]' : 0.096786}", "{'[4, 6, 5, 0, 4, 4, 0, 0, 0, 0, 29, 22, 1, 1, 0, 1, 0, 1]' : 0.0940039}"]
returning from 'run': {'[4, 6, 5, 0, 4, 4, 0, 0, 0, 0, 29, 22, 1, 1, 0, 1, 0, 1]': ([0.0939839, 0.0958421, 0.093945, 0.0935678, 0.0934939, 0.093713, 0.0954461, 0.0957711, 0.0957551, 0.0933921, 0.0935969, 0.0954049, 0.096056, 0.0946369, 0.0933559, 0.0935669, 0.0943441, 0.0958221, 0.0946641, 0.093251, 0.0934761, 0.0933371, 0.0982091, 0.098496, 0.097115, 0.095866, 0.095506, 0.096786, 0.096786, 0.0940039], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 6, 5, 0, 4, 4, 0, 0, 0, 0, 29, 22, 1, 1, 0, 1, 0, 1]': ([0.0939839, 0.0958421, 0.093945, 0.0935678, 0.0934939, 0.093713, 0.0954461, 0.0957711, 0.0957551, 0.0933921, 0.0935969, 0.0954049, 0.096056, 0.0946369, 0.0933559, 0.0935669, 0.0943441, 0.0958221, 0.0946641, 0.093251, 0.0934761, 0.0933371, 0.0982091, 0.098496, 0.097115, 0.095866, 0.095506, 0.096786, 0.096786, 0.0940039], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	6
        Additions: 		1279
        Multiplications: 	576
        Divisions: 		0
        Logical: 		0
        Reads: 			2624
        Writes: 		496
        Comparisons:		18
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest54.exe __orio_perftest54.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest54.exe  
Program Test Output: 
{'[6, 6, 6, 5, 4, 6, 0, 0, 17, 0, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.0918238}
{'[6, 6, 6, 5, 4, 6, 0, 0, 17, 0, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.0917728}
{'[6, 6, 6, 5, 4, 6, 0, 0, 17, 0, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.091634}
{'[6, 6, 6, 5, 4, 6, 0, 0, 17, 0, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.0926061}
{'[6, 6, 6, 5, 4, 6, 0, 0, 17, 0, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.093729}
{'[6, 6, 6, 5, 4, 6, 0, 0, 17, 0, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.0941792}
{'[6, 6, 6, 5, 4, 6, 0, 0, 17, 0, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.095329}
{'[6, 6, 6, 5, 4, 6, 0, 0, 17, 0, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.095727}
{'[6, 6, 6, 5, 4, 6, 0, 0, 17, 0, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.0955431}
{'[6, 6, 6, 5, 4, 6, 0, 0, 17, 0, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.0922329}
{'[6, 6, 6, 5, 4, 6, 0, 0, 17, 0, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.091712}
{'[6, 6, 6, 5, 4, 6, 0, 0, 17, 0, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.0927279}
{'[6, 6, 6, 5, 4, 6, 0, 0, 17, 0, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.0917411}
{'[6, 6, 6, 5, 4, 6, 0, 0, 17, 0, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.0916719}
{'[6, 6, 6, 5, 4, 6, 0, 0, 17, 0, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.092299}
{'[6, 6, 6, 5, 4, 6, 0, 0, 17, 0, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.091625}
{'[6, 6, 6, 5, 4, 6, 0, 0, 17, 0, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.0917099}
{'[6, 6, 6, 5, 4, 6, 0, 0, 17, 0, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.0926802}
{'[6, 6, 6, 5, 4, 6, 0, 0, 17, 0, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.092859}
{'[6, 6, 6, 5, 4, 6, 0, 0, 17, 0, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.0928059}
{'[6, 6, 6, 5, 4, 6, 0, 0, 17, 0, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.0958769}
{'[6, 6, 6, 5, 4, 6, 0, 0, 17, 0, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.0955939}
{'[6, 6, 6, 5, 4, 6, 0, 0, 17, 0, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.0957041}
{'[6, 6, 6, 5, 4, 6, 0, 0, 17, 0, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.0942369}
{'[6, 6, 6, 5, 4, 6, 0, 0, 17, 0, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.0937459}
{'[6, 6, 6, 5, 4, 6, 0, 0, 17, 0, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.0940528}
{'[6, 6, 6, 5, 4, 6, 0, 0, 17, 0, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.093838}
{'[6, 6, 6, 5, 4, 6, 0, 0, 17, 0, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.094377}
{'[6, 6, 6, 5, 4, 6, 0, 0, 17, 0, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.0937412}
{'[6, 6, 6, 5, 4, 6, 0, 0, 17, 0, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.09377}

out:
 ["{'[6, 6, 6, 5, 4, 6, 0, 0, 17, 0, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.0918238}", "{'[6, 6, 6, 5, 4, 6, 0, 0, 17, 0, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.0917728}", "{'[6, 6, 6, 5, 4, 6, 0, 0, 17, 0, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.091634}", "{'[6, 6, 6, 5, 4, 6, 0, 0, 17, 0, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.0926061}", "{'[6, 6, 6, 5, 4, 6, 0, 0, 17, 0, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.093729}", "{'[6, 6, 6, 5, 4, 6, 0, 0, 17, 0, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.0941792}", "{'[6, 6, 6, 5, 4, 6, 0, 0, 17, 0, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.095329}", "{'[6, 6, 6, 5, 4, 6, 0, 0, 17, 0, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.095727}", "{'[6, 6, 6, 5, 4, 6, 0, 0, 17, 0, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.0955431}", "{'[6, 6, 6, 5, 4, 6, 0, 0, 17, 0, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.0922329}", "{'[6, 6, 6, 5, 4, 6, 0, 0, 17, 0, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.091712}", "{'[6, 6, 6, 5, 4, 6, 0, 0, 17, 0, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.0927279}", "{'[6, 6, 6, 5, 4, 6, 0, 0, 17, 0, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.0917411}", "{'[6, 6, 6, 5, 4, 6, 0, 0, 17, 0, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.0916719}", "{'[6, 6, 6, 5, 4, 6, 0, 0, 17, 0, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.092299}", "{'[6, 6, 6, 5, 4, 6, 0, 0, 17, 0, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.091625}", "{'[6, 6, 6, 5, 4, 6, 0, 0, 17, 0, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.0917099}", "{'[6, 6, 6, 5, 4, 6, 0, 0, 17, 0, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.0926802}", "{'[6, 6, 6, 5, 4, 6, 0, 0, 17, 0, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.092859}", "{'[6, 6, 6, 5, 4, 6, 0, 0, 17, 0, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.0928059}", "{'[6, 6, 6, 5, 4, 6, 0, 0, 17, 0, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.0958769}", "{'[6, 6, 6, 5, 4, 6, 0, 0, 17, 0, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.0955939}", "{'[6, 6, 6, 5, 4, 6, 0, 0, 17, 0, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.0957041}", "{'[6, 6, 6, 5, 4, 6, 0, 0, 17, 0, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.0942369}", "{'[6, 6, 6, 5, 4, 6, 0, 0, 17, 0, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.0937459}", "{'[6, 6, 6, 5, 4, 6, 0, 0, 17, 0, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.0940528}", "{'[6, 6, 6, 5, 4, 6, 0, 0, 17, 0, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.093838}", "{'[6, 6, 6, 5, 4, 6, 0, 0, 17, 0, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.094377}", "{'[6, 6, 6, 5, 4, 6, 0, 0, 17, 0, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.0937412}", "{'[6, 6, 6, 5, 4, 6, 0, 0, 17, 0, 0, 29, 1, 0, 0, 1, 0, 1]' : 0.09377}"]
returning from 'run': {'[6, 6, 6, 5, 4, 6, 0, 0, 17, 0, 0, 29, 1, 0, 0, 1, 0, 1]': ([0.0918238, 0.0917728, 0.091634, 0.0926061, 0.093729, 0.0941792, 0.095329, 0.095727, 0.0955431, 0.0922329, 0.091712, 0.0927279, 0.0917411, 0.0916719, 0.092299, 0.091625, 0.0917099, 0.0926802, 0.092859, 0.0928059, 0.0958769, 0.0955939, 0.0957041, 0.0942369, 0.0937459, 0.0940528, 0.093838, 0.094377, 0.0937412, 0.09377], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 6, 5, 4, 6, 0, 0, 17, 0, 0, 29, 1, 0, 0, 1, 0, 1]': ([0.0918238, 0.0917728, 0.091634, 0.0926061, 0.093729, 0.0941792, 0.095329, 0.095727, 0.0955431, 0.0922329, 0.091712, 0.0927279, 0.0917411, 0.0916719, 0.092299, 0.091625, 0.0917099, 0.0926802, 0.092859, 0.0928059, 0.0958769, 0.0955939, 0.0957041, 0.0942369, 0.0937459, 0.0940528, 0.093838, 0.094377, 0.0937412, 0.09377], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	23
        Max loop nest depth: 	5
        Additions: 		1706
        Multiplications: 	720
        Divisions: 		0
        Logical: 		0
        Reads: 			3353
        Writes: 		597
        Comparisons:		23
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest55.exe __orio_perftest55.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest55.exe  
Program Test Output: 
{'[0, 6, 1, 6, 4, 6, 0, 1, 22, 0, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.117889}
{'[0, 6, 1, 6, 4, 6, 0, 1, 22, 0, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.117816}
{'[0, 6, 1, 6, 4, 6, 0, 1, 22, 0, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.11784}
{'[0, 6, 1, 6, 4, 6, 0, 1, 22, 0, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.117315}
{'[0, 6, 1, 6, 4, 6, 0, 1, 22, 0, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.107054}
{'[0, 6, 1, 6, 4, 6, 0, 1, 22, 0, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.10624}
{'[0, 6, 1, 6, 4, 6, 0, 1, 22, 0, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.106222}
{'[0, 6, 1, 6, 4, 6, 0, 1, 22, 0, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.104405}
{'[0, 6, 1, 6, 4, 6, 0, 1, 22, 0, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.104301}
{'[0, 6, 1, 6, 4, 6, 0, 1, 22, 0, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.10455}
{'[0, 6, 1, 6, 4, 6, 0, 1, 22, 0, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.104246}
{'[0, 6, 1, 6, 4, 6, 0, 1, 22, 0, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.104809}
{'[0, 6, 1, 6, 4, 6, 0, 1, 22, 0, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.106347}
{'[0, 6, 1, 6, 4, 6, 0, 1, 22, 0, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.104211}
{'[0, 6, 1, 6, 4, 6, 0, 1, 22, 0, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.104373}
{'[0, 6, 1, 6, 4, 6, 0, 1, 22, 0, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.102859}
{'[0, 6, 1, 6, 4, 6, 0, 1, 22, 0, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.102743}
{'[0, 6, 1, 6, 4, 6, 0, 1, 22, 0, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.104164}
{'[0, 6, 1, 6, 4, 6, 0, 1, 22, 0, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.104238}
{'[0, 6, 1, 6, 4, 6, 0, 1, 22, 0, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.104965}
{'[0, 6, 1, 6, 4, 6, 0, 1, 22, 0, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.104314}
{'[0, 6, 1, 6, 4, 6, 0, 1, 22, 0, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.104918}
{'[0, 6, 1, 6, 4, 6, 0, 1, 22, 0, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.104271}
{'[0, 6, 1, 6, 4, 6, 0, 1, 22, 0, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.104258}
{'[0, 6, 1, 6, 4, 6, 0, 1, 22, 0, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.104279}
{'[0, 6, 1, 6, 4, 6, 0, 1, 22, 0, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.104337}
{'[0, 6, 1, 6, 4, 6, 0, 1, 22, 0, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.106192}
{'[0, 6, 1, 6, 4, 6, 0, 1, 22, 0, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.106782}
{'[0, 6, 1, 6, 4, 6, 0, 1, 22, 0, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.10693}
{'[0, 6, 1, 6, 4, 6, 0, 1, 22, 0, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.106703}

out:
 ["{'[0, 6, 1, 6, 4, 6, 0, 1, 22, 0, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.117889}", "{'[0, 6, 1, 6, 4, 6, 0, 1, 22, 0, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.117816}", "{'[0, 6, 1, 6, 4, 6, 0, 1, 22, 0, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.11784}", "{'[0, 6, 1, 6, 4, 6, 0, 1, 22, 0, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.117315}", "{'[0, 6, 1, 6, 4, 6, 0, 1, 22, 0, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.107054}", "{'[0, 6, 1, 6, 4, 6, 0, 1, 22, 0, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.10624}", "{'[0, 6, 1, 6, 4, 6, 0, 1, 22, 0, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.106222}", "{'[0, 6, 1, 6, 4, 6, 0, 1, 22, 0, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.104405}", "{'[0, 6, 1, 6, 4, 6, 0, 1, 22, 0, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.104301}", "{'[0, 6, 1, 6, 4, 6, 0, 1, 22, 0, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.10455}", "{'[0, 6, 1, 6, 4, 6, 0, 1, 22, 0, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.104246}", "{'[0, 6, 1, 6, 4, 6, 0, 1, 22, 0, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.104809}", "{'[0, 6, 1, 6, 4, 6, 0, 1, 22, 0, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.106347}", "{'[0, 6, 1, 6, 4, 6, 0, 1, 22, 0, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.104211}", "{'[0, 6, 1, 6, 4, 6, 0, 1, 22, 0, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.104373}", "{'[0, 6, 1, 6, 4, 6, 0, 1, 22, 0, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.102859}", "{'[0, 6, 1, 6, 4, 6, 0, 1, 22, 0, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.102743}", "{'[0, 6, 1, 6, 4, 6, 0, 1, 22, 0, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.104164}", "{'[0, 6, 1, 6, 4, 6, 0, 1, 22, 0, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.104238}", "{'[0, 6, 1, 6, 4, 6, 0, 1, 22, 0, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.104965}", "{'[0, 6, 1, 6, 4, 6, 0, 1, 22, 0, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.104314}", "{'[0, 6, 1, 6, 4, 6, 0, 1, 22, 0, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.104918}", "{'[0, 6, 1, 6, 4, 6, 0, 1, 22, 0, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.104271}", "{'[0, 6, 1, 6, 4, 6, 0, 1, 22, 0, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.104258}", "{'[0, 6, 1, 6, 4, 6, 0, 1, 22, 0, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.104279}", "{'[0, 6, 1, 6, 4, 6, 0, 1, 22, 0, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.104337}", "{'[0, 6, 1, 6, 4, 6, 0, 1, 22, 0, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.106192}", "{'[0, 6, 1, 6, 4, 6, 0, 1, 22, 0, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.106782}", "{'[0, 6, 1, 6, 4, 6, 0, 1, 22, 0, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.10693}", "{'[0, 6, 1, 6, 4, 6, 0, 1, 22, 0, 0, 29, 1, 1, 0, 1, 0, 1]' : 0.106703}"]
returning from 'run': {'[0, 6, 1, 6, 4, 6, 0, 1, 22, 0, 0, 29, 1, 1, 0, 1, 0, 1]': ([0.117889, 0.117816, 0.11784, 0.117315, 0.107054, 0.10624, 0.106222, 0.104405, 0.104301, 0.10455, 0.104246, 0.104809, 0.106347, 0.104211, 0.104373, 0.102859, 0.102743, 0.104164, 0.104238, 0.104965, 0.104314, 0.104918, 0.104271, 0.104258, 0.104279, 0.104337, 0.106192, 0.106782, 0.10693, 0.106703], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 1, 6, 4, 6, 0, 1, 22, 0, 0, 29, 1, 1, 0, 1, 0, 1]': ([0.117889, 0.117816, 0.11784, 0.117315, 0.107054, 0.10624, 0.106222, 0.104405, 0.104301, 0.10455, 0.104246, 0.104809, 0.106347, 0.104211, 0.104373, 0.102859, 0.102743, 0.104164, 0.104238, 0.104965, 0.104314, 0.104918, 0.104271, 0.104258, 0.104279, 0.104337, 0.106192, 0.106782, 0.10693, 0.106703], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	6
        Additions: 		338
        Multiplications: 	126
        Divisions: 		0
        Logical: 		0
        Reads: 			739
        Writes: 		159
        Comparisons:		20
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest56.exe __orio_perftest56.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest56.exe  
Program Test Output: 
{'[1, 6, 4, 6, 4, 3, 1, 0, 14, 0, 4, 0, 1, 0, 0, 1, 0, 1]' : 0.118335}
{'[1, 6, 4, 6, 4, 3, 1, 0, 14, 0, 4, 0, 1, 0, 0, 1, 0, 1]' : 0.11845}
{'[1, 6, 4, 6, 4, 3, 1, 0, 14, 0, 4, 0, 1, 0, 0, 1, 0, 1]' : 0.11815}
{'[1, 6, 4, 6, 4, 3, 1, 0, 14, 0, 4, 0, 1, 0, 0, 1, 0, 1]' : 0.118297}
{'[1, 6, 4, 6, 4, 3, 1, 0, 14, 0, 4, 0, 1, 0, 0, 1, 0, 1]' : 0.117893}
{'[1, 6, 4, 6, 4, 3, 1, 0, 14, 0, 4, 0, 1, 0, 0, 1, 0, 1]' : 0.119244}
{'[1, 6, 4, 6, 4, 3, 1, 0, 14, 0, 4, 0, 1, 0, 0, 1, 0, 1]' : 0.118296}
{'[1, 6, 4, 6, 4, 3, 1, 0, 14, 0, 4, 0, 1, 0, 0, 1, 0, 1]' : 0.117743}
{'[1, 6, 4, 6, 4, 3, 1, 0, 14, 0, 4, 0, 1, 0, 0, 1, 0, 1]' : 0.117815}
{'[1, 6, 4, 6, 4, 3, 1, 0, 14, 0, 4, 0, 1, 0, 0, 1, 0, 1]' : 0.10966}
{'[1, 6, 4, 6, 4, 3, 1, 0, 14, 0, 4, 0, 1, 0, 0, 1, 0, 1]' : 0.101353}
{'[1, 6, 4, 6, 4, 3, 1, 0, 14, 0, 4, 0, 1, 0, 0, 1, 0, 1]' : 0.103546}
{'[1, 6, 4, 6, 4, 3, 1, 0, 14, 0, 4, 0, 1, 0, 0, 1, 0, 1]' : 0.103446}
{'[1, 6, 4, 6, 4, 3, 1, 0, 14, 0, 4, 0, 1, 0, 0, 1, 0, 1]' : 0.1049}
{'[1, 6, 4, 6, 4, 3, 1, 0, 14, 0, 4, 0, 1, 0, 0, 1, 0, 1]' : 0.102834}
{'[1, 6, 4, 6, 4, 3, 1, 0, 14, 0, 4, 0, 1, 0, 0, 1, 0, 1]' : 0.101653}
{'[1, 6, 4, 6, 4, 3, 1, 0, 14, 0, 4, 0, 1, 0, 0, 1, 0, 1]' : 0.105402}
{'[1, 6, 4, 6, 4, 3, 1, 0, 14, 0, 4, 0, 1, 0, 0, 1, 0, 1]' : 0.103312}
{'[1, 6, 4, 6, 4, 3, 1, 0, 14, 0, 4, 0, 1, 0, 0, 1, 0, 1]' : 0.103433}
{'[1, 6, 4, 6, 4, 3, 1, 0, 14, 0, 4, 0, 1, 0, 0, 1, 0, 1]' : 0.103461}
{'[1, 6, 4, 6, 4, 3, 1, 0, 14, 0, 4, 0, 1, 0, 0, 1, 0, 1]' : 0.103694}
{'[1, 6, 4, 6, 4, 3, 1, 0, 14, 0, 4, 0, 1, 0, 0, 1, 0, 1]' : 0.103543}
{'[1, 6, 4, 6, 4, 3, 1, 0, 14, 0, 4, 0, 1, 0, 0, 1, 0, 1]' : 0.102633}
{'[1, 6, 4, 6, 4, 3, 1, 0, 14, 0, 4, 0, 1, 0, 0, 1, 0, 1]' : 0.101179}
{'[1, 6, 4, 6, 4, 3, 1, 0, 14, 0, 4, 0, 1, 0, 0, 1, 0, 1]' : 0.101134}
{'[1, 6, 4, 6, 4, 3, 1, 0, 14, 0, 4, 0, 1, 0, 0, 1, 0, 1]' : 0.102374}
{'[1, 6, 4, 6, 4, 3, 1, 0, 14, 0, 4, 0, 1, 0, 0, 1, 0, 1]' : 0.103687}
{'[1, 6, 4, 6, 4, 3, 1, 0, 14, 0, 4, 0, 1, 0, 0, 1, 0, 1]' : 0.103715}
{'[1, 6, 4, 6, 4, 3, 1, 0, 14, 0, 4, 0, 1, 0, 0, 1, 0, 1]' : 0.104691}
{'[1, 6, 4, 6, 4, 3, 1, 0, 14, 0, 4, 0, 1, 0, 0, 1, 0, 1]' : 0.103389}

out:
 ["{'[1, 6, 4, 6, 4, 3, 1, 0, 14, 0, 4, 0, 1, 0, 0, 1, 0, 1]' : 0.118335}", "{'[1, 6, 4, 6, 4, 3, 1, 0, 14, 0, 4, 0, 1, 0, 0, 1, 0, 1]' : 0.11845}", "{'[1, 6, 4, 6, 4, 3, 1, 0, 14, 0, 4, 0, 1, 0, 0, 1, 0, 1]' : 0.11815}", "{'[1, 6, 4, 6, 4, 3, 1, 0, 14, 0, 4, 0, 1, 0, 0, 1, 0, 1]' : 0.118297}", "{'[1, 6, 4, 6, 4, 3, 1, 0, 14, 0, 4, 0, 1, 0, 0, 1, 0, 1]' : 0.117893}", "{'[1, 6, 4, 6, 4, 3, 1, 0, 14, 0, 4, 0, 1, 0, 0, 1, 0, 1]' : 0.119244}", "{'[1, 6, 4, 6, 4, 3, 1, 0, 14, 0, 4, 0, 1, 0, 0, 1, 0, 1]' : 0.118296}", "{'[1, 6, 4, 6, 4, 3, 1, 0, 14, 0, 4, 0, 1, 0, 0, 1, 0, 1]' : 0.117743}", "{'[1, 6, 4, 6, 4, 3, 1, 0, 14, 0, 4, 0, 1, 0, 0, 1, 0, 1]' : 0.117815}", "{'[1, 6, 4, 6, 4, 3, 1, 0, 14, 0, 4, 0, 1, 0, 0, 1, 0, 1]' : 0.10966}", "{'[1, 6, 4, 6, 4, 3, 1, 0, 14, 0, 4, 0, 1, 0, 0, 1, 0, 1]' : 0.101353}", "{'[1, 6, 4, 6, 4, 3, 1, 0, 14, 0, 4, 0, 1, 0, 0, 1, 0, 1]' : 0.103546}", "{'[1, 6, 4, 6, 4, 3, 1, 0, 14, 0, 4, 0, 1, 0, 0, 1, 0, 1]' : 0.103446}", "{'[1, 6, 4, 6, 4, 3, 1, 0, 14, 0, 4, 0, 1, 0, 0, 1, 0, 1]' : 0.1049}", "{'[1, 6, 4, 6, 4, 3, 1, 0, 14, 0, 4, 0, 1, 0, 0, 1, 0, 1]' : 0.102834}", "{'[1, 6, 4, 6, 4, 3, 1, 0, 14, 0, 4, 0, 1, 0, 0, 1, 0, 1]' : 0.101653}", "{'[1, 6, 4, 6, 4, 3, 1, 0, 14, 0, 4, 0, 1, 0, 0, 1, 0, 1]' : 0.105402}", "{'[1, 6, 4, 6, 4, 3, 1, 0, 14, 0, 4, 0, 1, 0, 0, 1, 0, 1]' : 0.103312}", "{'[1, 6, 4, 6, 4, 3, 1, 0, 14, 0, 4, 0, 1, 0, 0, 1, 0, 1]' : 0.103433}", "{'[1, 6, 4, 6, 4, 3, 1, 0, 14, 0, 4, 0, 1, 0, 0, 1, 0, 1]' : 0.103461}", "{'[1, 6, 4, 6, 4, 3, 1, 0, 14, 0, 4, 0, 1, 0, 0, 1, 0, 1]' : 0.103694}", "{'[1, 6, 4, 6, 4, 3, 1, 0, 14, 0, 4, 0, 1, 0, 0, 1, 0, 1]' : 0.103543}", "{'[1, 6, 4, 6, 4, 3, 1, 0, 14, 0, 4, 0, 1, 0, 0, 1, 0, 1]' : 0.102633}", "{'[1, 6, 4, 6, 4, 3, 1, 0, 14, 0, 4, 0, 1, 0, 0, 1, 0, 1]' : 0.101179}", "{'[1, 6, 4, 6, 4, 3, 1, 0, 14, 0, 4, 0, 1, 0, 0, 1, 0, 1]' : 0.101134}", "{'[1, 6, 4, 6, 4, 3, 1, 0, 14, 0, 4, 0, 1, 0, 0, 1, 0, 1]' : 0.102374}", "{'[1, 6, 4, 6, 4, 3, 1, 0, 14, 0, 4, 0, 1, 0, 0, 1, 0, 1]' : 0.103687}", "{'[1, 6, 4, 6, 4, 3, 1, 0, 14, 0, 4, 0, 1, 0, 0, 1, 0, 1]' : 0.103715}", "{'[1, 6, 4, 6, 4, 3, 1, 0, 14, 0, 4, 0, 1, 0, 0, 1, 0, 1]' : 0.104691}", "{'[1, 6, 4, 6, 4, 3, 1, 0, 14, 0, 4, 0, 1, 0, 0, 1, 0, 1]' : 0.103389}"]
returning from 'run': {'[1, 6, 4, 6, 4, 3, 1, 0, 14, 0, 4, 0, 1, 0, 0, 1, 0, 1]': ([0.118335, 0.11845, 0.11815, 0.118297, 0.117893, 0.119244, 0.118296, 0.117743, 0.117815, 0.10966, 0.101353, 0.103546, 0.103446, 0.1049, 0.102834, 0.101653, 0.105402, 0.103312, 0.103433, 0.103461, 0.103694, 0.103543, 0.102633, 0.101179, 0.101134, 0.102374, 0.103687, 0.103715, 0.104691, 0.103389], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 6, 4, 6, 4, 3, 1, 0, 14, 0, 4, 0, 1, 0, 0, 1, 0, 1]': ([0.118335, 0.11845, 0.11815, 0.118297, 0.117893, 0.119244, 0.118296, 0.117743, 0.117815, 0.10966, 0.101353, 0.103546, 0.103446, 0.1049, 0.102834, 0.101653, 0.105402, 0.103312, 0.103433, 0.103461, 0.103694, 0.103543, 0.102633, 0.101179, 0.101134, 0.102374, 0.103687, 0.103715, 0.104691, 0.103389], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	25
        Max loop nest depth: 	5
        Additions: 		2190
        Multiplications: 	954
        Divisions: 		0
        Logical: 		0
        Reads: 			4154
        Writes: 		678
        Comparisons:		25
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest57.exe __orio_perftest57.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest57.exe  
Program Test Output: 
{'[0, 6, 6, 1, 4, 5, 1, 1, 4, 0, 29, 20, 1, 0, 0, 1, 0, 0]' : 0.125735}
{'[0, 6, 6, 1, 4, 5, 1, 1, 4, 0, 29, 20, 1, 0, 0, 1, 0, 0]' : 0.125651}
{'[0, 6, 6, 1, 4, 5, 1, 1, 4, 0, 29, 20, 1, 0, 0, 1, 0, 0]' : 0.125522}
{'[0, 6, 6, 1, 4, 5, 1, 1, 4, 0, 29, 20, 1, 0, 0, 1, 0, 0]' : 0.125556}
{'[0, 6, 6, 1, 4, 5, 1, 1, 4, 0, 29, 20, 1, 0, 0, 1, 0, 0]' : 0.118846}
{'[0, 6, 6, 1, 4, 5, 1, 1, 4, 0, 29, 20, 1, 0, 0, 1, 0, 0]' : 0.109716}
{'[0, 6, 6, 1, 4, 5, 1, 1, 4, 0, 29, 20, 1, 0, 0, 1, 0, 0]' : 0.109621}
{'[0, 6, 6, 1, 4, 5, 1, 1, 4, 0, 29, 20, 1, 0, 0, 1, 0, 0]' : 0.109603}
{'[0, 6, 6, 1, 4, 5, 1, 1, 4, 0, 29, 20, 1, 0, 0, 1, 0, 0]' : 0.109866}
{'[0, 6, 6, 1, 4, 5, 1, 1, 4, 0, 29, 20, 1, 0, 0, 1, 0, 0]' : 0.10965}
{'[0, 6, 6, 1, 4, 5, 1, 1, 4, 0, 29, 20, 1, 0, 0, 1, 0, 0]' : 0.108281}
{'[0, 6, 6, 1, 4, 5, 1, 1, 4, 0, 29, 20, 1, 0, 0, 1, 0, 0]' : 0.107295}
{'[0, 6, 6, 1, 4, 5, 1, 1, 4, 0, 29, 20, 1, 0, 0, 1, 0, 0]' : 0.107629}
{'[0, 6, 6, 1, 4, 5, 1, 1, 4, 0, 29, 20, 1, 0, 0, 1, 0, 0]' : 0.108371}
{'[0, 6, 6, 1, 4, 5, 1, 1, 4, 0, 29, 20, 1, 0, 0, 1, 0, 0]' : 0.107837}
{'[0, 6, 6, 1, 4, 5, 1, 1, 4, 0, 29, 20, 1, 0, 0, 1, 0, 0]' : 0.111683}
{'[0, 6, 6, 1, 4, 5, 1, 1, 4, 0, 29, 20, 1, 0, 0, 1, 0, 0]' : 0.110087}
{'[0, 6, 6, 1, 4, 5, 1, 1, 4, 0, 29, 20, 1, 0, 0, 1, 0, 0]' : 0.110099}
{'[0, 6, 6, 1, 4, 5, 1, 1, 4, 0, 29, 20, 1, 0, 0, 1, 0, 0]' : 0.110063}
{'[0, 6, 6, 1, 4, 5, 1, 1, 4, 0, 29, 20, 1, 0, 0, 1, 0, 0]' : 0.110486}
{'[0, 6, 6, 1, 4, 5, 1, 1, 4, 0, 29, 20, 1, 0, 0, 1, 0, 0]' : 0.11001}
{'[0, 6, 6, 1, 4, 5, 1, 1, 4, 0, 29, 20, 1, 0, 0, 1, 0, 0]' : 0.110056}
{'[0, 6, 6, 1, 4, 5, 1, 1, 4, 0, 29, 20, 1, 0, 0, 1, 0, 0]' : 0.110235}
{'[0, 6, 6, 1, 4, 5, 1, 1, 4, 0, 29, 20, 1, 0, 0, 1, 0, 0]' : 0.110225}
{'[0, 6, 6, 1, 4, 5, 1, 1, 4, 0, 29, 20, 1, 0, 0, 1, 0, 0]' : 0.110112}
{'[0, 6, 6, 1, 4, 5, 1, 1, 4, 0, 29, 20, 1, 0, 0, 1, 0, 0]' : 0.110049}
{'[0, 6, 6, 1, 4, 5, 1, 1, 4, 0, 29, 20, 1, 0, 0, 1, 0, 0]' : 0.110722}
{'[0, 6, 6, 1, 4, 5, 1, 1, 4, 0, 29, 20, 1, 0, 0, 1, 0, 0]' : 0.112516}
{'[0, 6, 6, 1, 4, 5, 1, 1, 4, 0, 29, 20, 1, 0, 0, 1, 0, 0]' : 0.108344}
{'[0, 6, 6, 1, 4, 5, 1, 1, 4, 0, 29, 20, 1, 0, 0, 1, 0, 0]' : 0.110029}

out:
 ["{'[0, 6, 6, 1, 4, 5, 1, 1, 4, 0, 29, 20, 1, 0, 0, 1, 0, 0]' : 0.125735}", "{'[0, 6, 6, 1, 4, 5, 1, 1, 4, 0, 29, 20, 1, 0, 0, 1, 0, 0]' : 0.125651}", "{'[0, 6, 6, 1, 4, 5, 1, 1, 4, 0, 29, 20, 1, 0, 0, 1, 0, 0]' : 0.125522}", "{'[0, 6, 6, 1, 4, 5, 1, 1, 4, 0, 29, 20, 1, 0, 0, 1, 0, 0]' : 0.125556}", "{'[0, 6, 6, 1, 4, 5, 1, 1, 4, 0, 29, 20, 1, 0, 0, 1, 0, 0]' : 0.118846}", "{'[0, 6, 6, 1, 4, 5, 1, 1, 4, 0, 29, 20, 1, 0, 0, 1, 0, 0]' : 0.109716}", "{'[0, 6, 6, 1, 4, 5, 1, 1, 4, 0, 29, 20, 1, 0, 0, 1, 0, 0]' : 0.109621}", "{'[0, 6, 6, 1, 4, 5, 1, 1, 4, 0, 29, 20, 1, 0, 0, 1, 0, 0]' : 0.109603}", "{'[0, 6, 6, 1, 4, 5, 1, 1, 4, 0, 29, 20, 1, 0, 0, 1, 0, 0]' : 0.109866}", "{'[0, 6, 6, 1, 4, 5, 1, 1, 4, 0, 29, 20, 1, 0, 0, 1, 0, 0]' : 0.10965}", "{'[0, 6, 6, 1, 4, 5, 1, 1, 4, 0, 29, 20, 1, 0, 0, 1, 0, 0]' : 0.108281}", "{'[0, 6, 6, 1, 4, 5, 1, 1, 4, 0, 29, 20, 1, 0, 0, 1, 0, 0]' : 0.107295}", "{'[0, 6, 6, 1, 4, 5, 1, 1, 4, 0, 29, 20, 1, 0, 0, 1, 0, 0]' : 0.107629}", "{'[0, 6, 6, 1, 4, 5, 1, 1, 4, 0, 29, 20, 1, 0, 0, 1, 0, 0]' : 0.108371}", "{'[0, 6, 6, 1, 4, 5, 1, 1, 4, 0, 29, 20, 1, 0, 0, 1, 0, 0]' : 0.107837}", "{'[0, 6, 6, 1, 4, 5, 1, 1, 4, 0, 29, 20, 1, 0, 0, 1, 0, 0]' : 0.111683}", "{'[0, 6, 6, 1, 4, 5, 1, 1, 4, 0, 29, 20, 1, 0, 0, 1, 0, 0]' : 0.110087}", "{'[0, 6, 6, 1, 4, 5, 1, 1, 4, 0, 29, 20, 1, 0, 0, 1, 0, 0]' : 0.110099}", "{'[0, 6, 6, 1, 4, 5, 1, 1, 4, 0, 29, 20, 1, 0, 0, 1, 0, 0]' : 0.110063}", "{'[0, 6, 6, 1, 4, 5, 1, 1, 4, 0, 29, 20, 1, 0, 0, 1, 0, 0]' : 0.110486}", "{'[0, 6, 6, 1, 4, 5, 1, 1, 4, 0, 29, 20, 1, 0, 0, 1, 0, 0]' : 0.11001}", "{'[0, 6, 6, 1, 4, 5, 1, 1, 4, 0, 29, 20, 1, 0, 0, 1, 0, 0]' : 0.110056}", "{'[0, 6, 6, 1, 4, 5, 1, 1, 4, 0, 29, 20, 1, 0, 0, 1, 0, 0]' : 0.110235}", "{'[0, 6, 6, 1, 4, 5, 1, 1, 4, 0, 29, 20, 1, 0, 0, 1, 0, 0]' : 0.110225}", "{'[0, 6, 6, 1, 4, 5, 1, 1, 4, 0, 29, 20, 1, 0, 0, 1, 0, 0]' : 0.110112}", "{'[0, 6, 6, 1, 4, 5, 1, 1, 4, 0, 29, 20, 1, 0, 0, 1, 0, 0]' : 0.110049}", "{'[0, 6, 6, 1, 4, 5, 1, 1, 4, 0, 29, 20, 1, 0, 0, 1, 0, 0]' : 0.110722}", "{'[0, 6, 6, 1, 4, 5, 1, 1, 4, 0, 29, 20, 1, 0, 0, 1, 0, 0]' : 0.112516}", "{'[0, 6, 6, 1, 4, 5, 1, 1, 4, 0, 29, 20, 1, 0, 0, 1, 0, 0]' : 0.108344}", "{'[0, 6, 6, 1, 4, 5, 1, 1, 4, 0, 29, 20, 1, 0, 0, 1, 0, 0]' : 0.110029}"]
returning from 'run': {'[0, 6, 6, 1, 4, 5, 1, 1, 4, 0, 29, 20, 1, 0, 0, 1, 0, 0]': ([0.125735, 0.125651, 0.125522, 0.125556, 0.118846, 0.109716, 0.109621, 0.109603, 0.109866, 0.10965, 0.108281, 0.107295, 0.107629, 0.108371, 0.107837, 0.111683, 0.110087, 0.110099, 0.110063, 0.110486, 0.11001, 0.110056, 0.110235, 0.110225, 0.110112, 0.110049, 0.110722, 0.112516, 0.108344, 0.110029], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 6, 1, 4, 5, 1, 1, 4, 0, 29, 20, 1, 0, 0, 1, 0, 0]': ([0.125735, 0.125651, 0.125522, 0.125556, 0.118846, 0.109716, 0.109621, 0.109603, 0.109866, 0.10965, 0.108281, 0.107295, 0.107629, 0.108371, 0.107837, 0.111683, 0.110087, 0.110099, 0.110063, 0.110486, 0.11001, 0.110056, 0.110235, 0.110225, 0.110112, 0.110049, 0.110722, 0.112516, 0.108344, 0.110029], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	4
        Additions: 		506
        Multiplications: 	234
        Divisions: 		0
        Logical: 		0
        Reads: 			1031
        Writes: 		182
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest58.exe __orio_perftest58.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest58.exe  
Program Test Output: 
{'[0, 6, 5, 4, 4, 0, 0, 0, 0, 0, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.121289}
{'[0, 6, 5, 4, 4, 0, 0, 0, 0, 0, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.116514}
{'[0, 6, 5, 4, 4, 0, 0, 0, 0, 0, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.116491}
{'[0, 6, 5, 4, 4, 0, 0, 0, 0, 0, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.114552}
{'[0, 6, 5, 4, 4, 0, 0, 0, 0, 0, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.10378}
{'[0, 6, 5, 4, 4, 0, 0, 0, 0, 0, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.104194}
{'[0, 6, 5, 4, 4, 0, 0, 0, 0, 0, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.103761}
{'[0, 6, 5, 4, 4, 0, 0, 0, 0, 0, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.104839}
{'[0, 6, 5, 4, 4, 0, 0, 0, 0, 0, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.10785}
{'[0, 6, 5, 4, 4, 0, 0, 0, 0, 0, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.10695}
{'[0, 6, 5, 4, 4, 0, 0, 0, 0, 0, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.103957}
{'[0, 6, 5, 4, 4, 0, 0, 0, 0, 0, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.103658}
{'[0, 6, 5, 4, 4, 0, 0, 0, 0, 0, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.103641}
{'[0, 6, 5, 4, 4, 0, 0, 0, 0, 0, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.103715}
{'[0, 6, 5, 4, 4, 0, 0, 0, 0, 0, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.104074}
{'[0, 6, 5, 4, 4, 0, 0, 0, 0, 0, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.103671}
{'[0, 6, 5, 4, 4, 0, 0, 0, 0, 0, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.103718}
{'[0, 6, 5, 4, 4, 0, 0, 0, 0, 0, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.107212}
{'[0, 6, 5, 4, 4, 0, 0, 0, 0, 0, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.108252}
{'[0, 6, 5, 4, 4, 0, 0, 0, 0, 0, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.105725}
{'[0, 6, 5, 4, 4, 0, 0, 0, 0, 0, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.103594}
{'[0, 6, 5, 4, 4, 0, 0, 0, 0, 0, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.103849}
{'[0, 6, 5, 4, 4, 0, 0, 0, 0, 0, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.103652}
{'[0, 6, 5, 4, 4, 0, 0, 0, 0, 0, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.104466}
{'[0, 6, 5, 4, 4, 0, 0, 0, 0, 0, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.10231}
{'[0, 6, 5, 4, 4, 0, 0, 0, 0, 0, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.101255}
{'[0, 6, 5, 4, 4, 0, 0, 0, 0, 0, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.101761}
{'[0, 6, 5, 4, 4, 0, 0, 0, 0, 0, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.10545}
{'[0, 6, 5, 4, 4, 0, 0, 0, 0, 0, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.105765}
{'[0, 6, 5, 4, 4, 0, 0, 0, 0, 0, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.10424}

out:
 ["{'[0, 6, 5, 4, 4, 0, 0, 0, 0, 0, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.121289}", "{'[0, 6, 5, 4, 4, 0, 0, 0, 0, 0, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.116514}", "{'[0, 6, 5, 4, 4, 0, 0, 0, 0, 0, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.116491}", "{'[0, 6, 5, 4, 4, 0, 0, 0, 0, 0, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.114552}", "{'[0, 6, 5, 4, 4, 0, 0, 0, 0, 0, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.10378}", "{'[0, 6, 5, 4, 4, 0, 0, 0, 0, 0, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.104194}", "{'[0, 6, 5, 4, 4, 0, 0, 0, 0, 0, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.103761}", "{'[0, 6, 5, 4, 4, 0, 0, 0, 0, 0, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.104839}", "{'[0, 6, 5, 4, 4, 0, 0, 0, 0, 0, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.10785}", "{'[0, 6, 5, 4, 4, 0, 0, 0, 0, 0, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.10695}", "{'[0, 6, 5, 4, 4, 0, 0, 0, 0, 0, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.103957}", "{'[0, 6, 5, 4, 4, 0, 0, 0, 0, 0, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.103658}", "{'[0, 6, 5, 4, 4, 0, 0, 0, 0, 0, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.103641}", "{'[0, 6, 5, 4, 4, 0, 0, 0, 0, 0, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.103715}", "{'[0, 6, 5, 4, 4, 0, 0, 0, 0, 0, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.104074}", "{'[0, 6, 5, 4, 4, 0, 0, 0, 0, 0, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.103671}", "{'[0, 6, 5, 4, 4, 0, 0, 0, 0, 0, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.103718}", "{'[0, 6, 5, 4, 4, 0, 0, 0, 0, 0, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.107212}", "{'[0, 6, 5, 4, 4, 0, 0, 0, 0, 0, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.108252}", "{'[0, 6, 5, 4, 4, 0, 0, 0, 0, 0, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.105725}", "{'[0, 6, 5, 4, 4, 0, 0, 0, 0, 0, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.103594}", "{'[0, 6, 5, 4, 4, 0, 0, 0, 0, 0, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.103849}", "{'[0, 6, 5, 4, 4, 0, 0, 0, 0, 0, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.103652}", "{'[0, 6, 5, 4, 4, 0, 0, 0, 0, 0, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.104466}", "{'[0, 6, 5, 4, 4, 0, 0, 0, 0, 0, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.10231}", "{'[0, 6, 5, 4, 4, 0, 0, 0, 0, 0, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.101255}", "{'[0, 6, 5, 4, 4, 0, 0, 0, 0, 0, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.101761}", "{'[0, 6, 5, 4, 4, 0, 0, 0, 0, 0, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.10545}", "{'[0, 6, 5, 4, 4, 0, 0, 0, 0, 0, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.105765}", "{'[0, 6, 5, 4, 4, 0, 0, 0, 0, 0, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.10424}"]
returning from 'run': {'[0, 6, 5, 4, 4, 0, 0, 0, 0, 0, 10, 0, 1, 0, 0, 1, 0, 0]': ([0.121289, 0.116514, 0.116491, 0.114552, 0.10378, 0.104194, 0.103761, 0.104839, 0.10785, 0.10695, 0.103957, 0.103658, 0.103641, 0.103715, 0.104074, 0.103671, 0.103718, 0.107212, 0.108252, 0.105725, 0.103594, 0.103849, 0.103652, 0.104466, 0.10231, 0.101255, 0.101761, 0.10545, 0.105765, 0.10424], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 5, 4, 4, 0, 0, 0, 0, 0, 10, 0, 1, 0, 0, 1, 0, 0]': ([0.121289, 0.116514, 0.116491, 0.114552, 0.10378, 0.104194, 0.103761, 0.104839, 0.10785, 0.10695, 0.103957, 0.103658, 0.103641, 0.103715, 0.104074, 0.103671, 0.103718, 0.107212, 0.108252, 0.105725, 0.103594, 0.103849, 0.103652, 0.104466, 0.10231, 0.101255, 0.101761, 0.10545, 0.105765, 0.10424], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	5
        Additions: 		1231
        Multiplications: 	558
        Divisions: 		0
        Logical: 		0
        Reads: 			2471
        Writes: 		440
        Comparisons:		18
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest59.exe __orio_perftest59.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest59.exe  
Program Test Output: 
{'[1, 6, 0, 6, 4, 5, 1, 0, 1, 0, 7, 21, 1, 1, 0, 1, 0, 0]' : 0.122917}
{'[1, 6, 0, 6, 4, 5, 1, 0, 1, 0, 7, 21, 1, 1, 0, 1, 0, 0]' : 0.122945}
{'[1, 6, 0, 6, 4, 5, 1, 0, 1, 0, 7, 21, 1, 1, 0, 1, 0, 0]' : 0.11815}
{'[1, 6, 0, 6, 4, 5, 1, 0, 1, 0, 7, 21, 1, 1, 0, 1, 0, 0]' : 0.104078}
{'[1, 6, 0, 6, 4, 5, 1, 0, 1, 0, 7, 21, 1, 1, 0, 1, 0, 0]' : 0.104017}
{'[1, 6, 0, 6, 4, 5, 1, 0, 1, 0, 7, 21, 1, 1, 0, 1, 0, 0]' : 0.104092}
{'[1, 6, 0, 6, 4, 5, 1, 0, 1, 0, 7, 21, 1, 1, 0, 1, 0, 0]' : 0.104537}
{'[1, 6, 0, 6, 4, 5, 1, 0, 1, 0, 7, 21, 1, 1, 0, 1, 0, 0]' : 0.104557}
{'[1, 6, 0, 6, 4, 5, 1, 0, 1, 0, 7, 21, 1, 1, 0, 1, 0, 0]' : 0.104447}
{'[1, 6, 0, 6, 4, 5, 1, 0, 1, 0, 7, 21, 1, 1, 0, 1, 0, 0]' : 0.104517}
{'[1, 6, 0, 6, 4, 5, 1, 0, 1, 0, 7, 21, 1, 1, 0, 1, 0, 0]' : 0.104602}
{'[1, 6, 0, 6, 4, 5, 1, 0, 1, 0, 7, 21, 1, 1, 0, 1, 0, 0]' : 0.104722}
{'[1, 6, 0, 6, 4, 5, 1, 0, 1, 0, 7, 21, 1, 1, 0, 1, 0, 0]' : 0.104601}
{'[1, 6, 0, 6, 4, 5, 1, 0, 1, 0, 7, 21, 1, 1, 0, 1, 0, 0]' : 0.104375}
{'[1, 6, 0, 6, 4, 5, 1, 0, 1, 0, 7, 21, 1, 1, 0, 1, 0, 0]' : 0.104232}
{'[1, 6, 0, 6, 4, 5, 1, 0, 1, 0, 7, 21, 1, 1, 0, 1, 0, 0]' : 0.104167}
{'[1, 6, 0, 6, 4, 5, 1, 0, 1, 0, 7, 21, 1, 1, 0, 1, 0, 0]' : 0.104429}
{'[1, 6, 0, 6, 4, 5, 1, 0, 1, 0, 7, 21, 1, 1, 0, 1, 0, 0]' : 0.104058}
{'[1, 6, 0, 6, 4, 5, 1, 0, 1, 0, 7, 21, 1, 1, 0, 1, 0, 0]' : 0.104117}
{'[1, 6, 0, 6, 4, 5, 1, 0, 1, 0, 7, 21, 1, 1, 0, 1, 0, 0]' : 0.10409}
{'[1, 6, 0, 6, 4, 5, 1, 0, 1, 0, 7, 21, 1, 1, 0, 1, 0, 0]' : 0.104071}
{'[1, 6, 0, 6, 4, 5, 1, 0, 1, 0, 7, 21, 1, 1, 0, 1, 0, 0]' : 0.104162}
{'[1, 6, 0, 6, 4, 5, 1, 0, 1, 0, 7, 21, 1, 1, 0, 1, 0, 0]' : 0.10413}
{'[1, 6, 0, 6, 4, 5, 1, 0, 1, 0, 7, 21, 1, 1, 0, 1, 0, 0]' : 0.104152}
{'[1, 6, 0, 6, 4, 5, 1, 0, 1, 0, 7, 21, 1, 1, 0, 1, 0, 0]' : 0.104218}
{'[1, 6, 0, 6, 4, 5, 1, 0, 1, 0, 7, 21, 1, 1, 0, 1, 0, 0]' : 0.104148}
{'[1, 6, 0, 6, 4, 5, 1, 0, 1, 0, 7, 21, 1, 1, 0, 1, 0, 0]' : 0.104184}
{'[1, 6, 0, 6, 4, 5, 1, 0, 1, 0, 7, 21, 1, 1, 0, 1, 0, 0]' : 0.104186}
{'[1, 6, 0, 6, 4, 5, 1, 0, 1, 0, 7, 21, 1, 1, 0, 1, 0, 0]' : 0.104545}
{'[1, 6, 0, 6, 4, 5, 1, 0, 1, 0, 7, 21, 1, 1, 0, 1, 0, 0]' : 0.104556}

out:
 ["{'[1, 6, 0, 6, 4, 5, 1, 0, 1, 0, 7, 21, 1, 1, 0, 1, 0, 0]' : 0.122917}", "{'[1, 6, 0, 6, 4, 5, 1, 0, 1, 0, 7, 21, 1, 1, 0, 1, 0, 0]' : 0.122945}", "{'[1, 6, 0, 6, 4, 5, 1, 0, 1, 0, 7, 21, 1, 1, 0, 1, 0, 0]' : 0.11815}", "{'[1, 6, 0, 6, 4, 5, 1, 0, 1, 0, 7, 21, 1, 1, 0, 1, 0, 0]' : 0.104078}", "{'[1, 6, 0, 6, 4, 5, 1, 0, 1, 0, 7, 21, 1, 1, 0, 1, 0, 0]' : 0.104017}", "{'[1, 6, 0, 6, 4, 5, 1, 0, 1, 0, 7, 21, 1, 1, 0, 1, 0, 0]' : 0.104092}", "{'[1, 6, 0, 6, 4, 5, 1, 0, 1, 0, 7, 21, 1, 1, 0, 1, 0, 0]' : 0.104537}", "{'[1, 6, 0, 6, 4, 5, 1, 0, 1, 0, 7, 21, 1, 1, 0, 1, 0, 0]' : 0.104557}", "{'[1, 6, 0, 6, 4, 5, 1, 0, 1, 0, 7, 21, 1, 1, 0, 1, 0, 0]' : 0.104447}", "{'[1, 6, 0, 6, 4, 5, 1, 0, 1, 0, 7, 21, 1, 1, 0, 1, 0, 0]' : 0.104517}", "{'[1, 6, 0, 6, 4, 5, 1, 0, 1, 0, 7, 21, 1, 1, 0, 1, 0, 0]' : 0.104602}", "{'[1, 6, 0, 6, 4, 5, 1, 0, 1, 0, 7, 21, 1, 1, 0, 1, 0, 0]' : 0.104722}", "{'[1, 6, 0, 6, 4, 5, 1, 0, 1, 0, 7, 21, 1, 1, 0, 1, 0, 0]' : 0.104601}", "{'[1, 6, 0, 6, 4, 5, 1, 0, 1, 0, 7, 21, 1, 1, 0, 1, 0, 0]' : 0.104375}", "{'[1, 6, 0, 6, 4, 5, 1, 0, 1, 0, 7, 21, 1, 1, 0, 1, 0, 0]' : 0.104232}", "{'[1, 6, 0, 6, 4, 5, 1, 0, 1, 0, 7, 21, 1, 1, 0, 1, 0, 0]' : 0.104167}", "{'[1, 6, 0, 6, 4, 5, 1, 0, 1, 0, 7, 21, 1, 1, 0, 1, 0, 0]' : 0.104429}", "{'[1, 6, 0, 6, 4, 5, 1, 0, 1, 0, 7, 21, 1, 1, 0, 1, 0, 0]' : 0.104058}", "{'[1, 6, 0, 6, 4, 5, 1, 0, 1, 0, 7, 21, 1, 1, 0, 1, 0, 0]' : 0.104117}", "{'[1, 6, 0, 6, 4, 5, 1, 0, 1, 0, 7, 21, 1, 1, 0, 1, 0, 0]' : 0.10409}", "{'[1, 6, 0, 6, 4, 5, 1, 0, 1, 0, 7, 21, 1, 1, 0, 1, 0, 0]' : 0.104071}", "{'[1, 6, 0, 6, 4, 5, 1, 0, 1, 0, 7, 21, 1, 1, 0, 1, 0, 0]' : 0.104162}", "{'[1, 6, 0, 6, 4, 5, 1, 0, 1, 0, 7, 21, 1, 1, 0, 1, 0, 0]' : 0.10413}", "{'[1, 6, 0, 6, 4, 5, 1, 0, 1, 0, 7, 21, 1, 1, 0, 1, 0, 0]' : 0.104152}", "{'[1, 6, 0, 6, 4, 5, 1, 0, 1, 0, 7, 21, 1, 1, 0, 1, 0, 0]' : 0.104218}", "{'[1, 6, 0, 6, 4, 5, 1, 0, 1, 0, 7, 21, 1, 1, 0, 1, 0, 0]' : 0.104148}", "{'[1, 6, 0, 6, 4, 5, 1, 0, 1, 0, 7, 21, 1, 1, 0, 1, 0, 0]' : 0.104184}", "{'[1, 6, 0, 6, 4, 5, 1, 0, 1, 0, 7, 21, 1, 1, 0, 1, 0, 0]' : 0.104186}", "{'[1, 6, 0, 6, 4, 5, 1, 0, 1, 0, 7, 21, 1, 1, 0, 1, 0, 0]' : 0.104545}", "{'[1, 6, 0, 6, 4, 5, 1, 0, 1, 0, 7, 21, 1, 1, 0, 1, 0, 0]' : 0.104556}"]
returning from 'run': {'[1, 6, 0, 6, 4, 5, 1, 0, 1, 0, 7, 21, 1, 1, 0, 1, 0, 0]': ([0.122917, 0.122945, 0.11815, 0.104078, 0.104017, 0.104092, 0.104537, 0.104557, 0.104447, 0.104517, 0.104602, 0.104722, 0.104601, 0.104375, 0.104232, 0.104167, 0.104429, 0.104058, 0.104117, 0.10409, 0.104071, 0.104162, 0.10413, 0.104152, 0.104218, 0.104148, 0.104184, 0.104186, 0.104545, 0.104556], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 6, 0, 6, 4, 5, 1, 0, 1, 0, 7, 21, 1, 1, 0, 1, 0, 0]': ([0.122917, 0.122945, 0.11815, 0.104078, 0.104017, 0.104092, 0.104537, 0.104557, 0.104447, 0.104517, 0.104602, 0.104722, 0.104601, 0.104375, 0.104232, 0.104167, 0.104429, 0.104058, 0.104117, 0.10409, 0.104071, 0.104162, 0.10413, 0.104152, 0.104218, 0.104148, 0.104184, 0.104186, 0.104545, 0.104556], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	5
        Additions: 		703
        Multiplications: 	306
        Divisions: 		0
        Logical: 		0
        Reads: 			1429
        Writes: 		262
        Comparisons:		18
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest60.exe __orio_perftest60.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest60.exe  
Program Test Output: 
{'[4, 6, 6, 6, 4, 0, 1, 0, 5, 0, 6, 7, 1, 1, 0, 1, 0, 0]' : 0.0913491}
{'[4, 6, 6, 6, 4, 0, 1, 0, 5, 0, 6, 7, 1, 1, 0, 1, 0, 0]' : 0.0911951}
{'[4, 6, 6, 6, 4, 0, 1, 0, 5, 0, 6, 7, 1, 1, 0, 1, 0, 0]' : 0.0908968}
{'[4, 6, 6, 6, 4, 0, 1, 0, 5, 0, 6, 7, 1, 1, 0, 1, 0, 0]' : 0.090986}
{'[4, 6, 6, 6, 4, 0, 1, 0, 5, 0, 6, 7, 1, 1, 0, 1, 0, 0]' : 0.0917521}
{'[4, 6, 6, 6, 4, 0, 1, 0, 5, 0, 6, 7, 1, 1, 0, 1, 0, 0]' : 0.0915911}
{'[4, 6, 6, 6, 4, 0, 1, 0, 5, 0, 6, 7, 1, 1, 0, 1, 0, 0]' : 0.090847}
{'[4, 6, 6, 6, 4, 0, 1, 0, 5, 0, 6, 7, 1, 1, 0, 1, 0, 0]' : 0.0909328}
{'[4, 6, 6, 6, 4, 0, 1, 0, 5, 0, 6, 7, 1, 1, 0, 1, 0, 0]' : 0.0908689}
{'[4, 6, 6, 6, 4, 0, 1, 0, 5, 0, 6, 7, 1, 1, 0, 1, 0, 0]' : 0.0909328}
{'[4, 6, 6, 6, 4, 0, 1, 0, 5, 0, 6, 7, 1, 1, 0, 1, 0, 0]' : 0.0889392}
{'[4, 6, 6, 6, 4, 0, 1, 0, 5, 0, 6, 7, 1, 1, 0, 1, 0, 0]' : 0.088594}
{'[4, 6, 6, 6, 4, 0, 1, 0, 5, 0, 6, 7, 1, 1, 0, 1, 0, 0]' : 0.088958}
{'[4, 6, 6, 6, 4, 0, 1, 0, 5, 0, 6, 7, 1, 1, 0, 1, 0, 0]' : 0.088897}
{'[4, 6, 6, 6, 4, 0, 1, 0, 5, 0, 6, 7, 1, 1, 0, 1, 0, 0]' : 0.0889509}
{'[4, 6, 6, 6, 4, 0, 1, 0, 5, 0, 6, 7, 1, 1, 0, 1, 0, 0]' : 0.0903208}
{'[4, 6, 6, 6, 4, 0, 1, 0, 5, 0, 6, 7, 1, 1, 0, 1, 0, 0]' : 0.0891299}
{'[4, 6, 6, 6, 4, 0, 1, 0, 5, 0, 6, 7, 1, 1, 0, 1, 0, 0]' : 0.0887151}
{'[4, 6, 6, 6, 4, 0, 1, 0, 5, 0, 6, 7, 1, 1, 0, 1, 0, 0]' : 0.0887191}
{'[4, 6, 6, 6, 4, 0, 1, 0, 5, 0, 6, 7, 1, 1, 0, 1, 0, 0]' : 0.0887051}
{'[4, 6, 6, 6, 4, 0, 1, 0, 5, 0, 6, 7, 1, 1, 0, 1, 0, 0]' : 0.0916739}
{'[4, 6, 6, 6, 4, 0, 1, 0, 5, 0, 6, 7, 1, 1, 0, 1, 0, 0]' : 0.0930009}
{'[4, 6, 6, 6, 4, 0, 1, 0, 5, 0, 6, 7, 1, 1, 0, 1, 0, 0]' : 0.0929351}
{'[4, 6, 6, 6, 4, 0, 1, 0, 5, 0, 6, 7, 1, 1, 0, 1, 0, 0]' : 0.092823}
{'[4, 6, 6, 6, 4, 0, 1, 0, 5, 0, 6, 7, 1, 1, 0, 1, 0, 0]' : 0.092911}
{'[4, 6, 6, 6, 4, 0, 1, 0, 5, 0, 6, 7, 1, 1, 0, 1, 0, 0]' : 0.0912728}
{'[4, 6, 6, 6, 4, 0, 1, 0, 5, 0, 6, 7, 1, 1, 0, 1, 0, 0]' : 0.091316}
{'[4, 6, 6, 6, 4, 0, 1, 0, 5, 0, 6, 7, 1, 1, 0, 1, 0, 0]' : 0.091002}
{'[4, 6, 6, 6, 4, 0, 1, 0, 5, 0, 6, 7, 1, 1, 0, 1, 0, 0]' : 0.0911059}
{'[4, 6, 6, 6, 4, 0, 1, 0, 5, 0, 6, 7, 1, 1, 0, 1, 0, 0]' : 0.090914}

out:
 ["{'[4, 6, 6, 6, 4, 0, 1, 0, 5, 0, 6, 7, 1, 1, 0, 1, 0, 0]' : 0.0913491}", "{'[4, 6, 6, 6, 4, 0, 1, 0, 5, 0, 6, 7, 1, 1, 0, 1, 0, 0]' : 0.0911951}", "{'[4, 6, 6, 6, 4, 0, 1, 0, 5, 0, 6, 7, 1, 1, 0, 1, 0, 0]' : 0.0908968}", "{'[4, 6, 6, 6, 4, 0, 1, 0, 5, 0, 6, 7, 1, 1, 0, 1, 0, 0]' : 0.090986}", "{'[4, 6, 6, 6, 4, 0, 1, 0, 5, 0, 6, 7, 1, 1, 0, 1, 0, 0]' : 0.0917521}", "{'[4, 6, 6, 6, 4, 0, 1, 0, 5, 0, 6, 7, 1, 1, 0, 1, 0, 0]' : 0.0915911}", "{'[4, 6, 6, 6, 4, 0, 1, 0, 5, 0, 6, 7, 1, 1, 0, 1, 0, 0]' : 0.090847}", "{'[4, 6, 6, 6, 4, 0, 1, 0, 5, 0, 6, 7, 1, 1, 0, 1, 0, 0]' : 0.0909328}", "{'[4, 6, 6, 6, 4, 0, 1, 0, 5, 0, 6, 7, 1, 1, 0, 1, 0, 0]' : 0.0908689}", "{'[4, 6, 6, 6, 4, 0, 1, 0, 5, 0, 6, 7, 1, 1, 0, 1, 0, 0]' : 0.0909328}", "{'[4, 6, 6, 6, 4, 0, 1, 0, 5, 0, 6, 7, 1, 1, 0, 1, 0, 0]' : 0.0889392}", "{'[4, 6, 6, 6, 4, 0, 1, 0, 5, 0, 6, 7, 1, 1, 0, 1, 0, 0]' : 0.088594}", "{'[4, 6, 6, 6, 4, 0, 1, 0, 5, 0, 6, 7, 1, 1, 0, 1, 0, 0]' : 0.088958}", "{'[4, 6, 6, 6, 4, 0, 1, 0, 5, 0, 6, 7, 1, 1, 0, 1, 0, 0]' : 0.088897}", "{'[4, 6, 6, 6, 4, 0, 1, 0, 5, 0, 6, 7, 1, 1, 0, 1, 0, 0]' : 0.0889509}", "{'[4, 6, 6, 6, 4, 0, 1, 0, 5, 0, 6, 7, 1, 1, 0, 1, 0, 0]' : 0.0903208}", "{'[4, 6, 6, 6, 4, 0, 1, 0, 5, 0, 6, 7, 1, 1, 0, 1, 0, 0]' : 0.0891299}", "{'[4, 6, 6, 6, 4, 0, 1, 0, 5, 0, 6, 7, 1, 1, 0, 1, 0, 0]' : 0.0887151}", "{'[4, 6, 6, 6, 4, 0, 1, 0, 5, 0, 6, 7, 1, 1, 0, 1, 0, 0]' : 0.0887191}", "{'[4, 6, 6, 6, 4, 0, 1, 0, 5, 0, 6, 7, 1, 1, 0, 1, 0, 0]' : 0.0887051}", "{'[4, 6, 6, 6, 4, 0, 1, 0, 5, 0, 6, 7, 1, 1, 0, 1, 0, 0]' : 0.0916739}", "{'[4, 6, 6, 6, 4, 0, 1, 0, 5, 0, 6, 7, 1, 1, 0, 1, 0, 0]' : 0.0930009}", "{'[4, 6, 6, 6, 4, 0, 1, 0, 5, 0, 6, 7, 1, 1, 0, 1, 0, 0]' : 0.0929351}", "{'[4, 6, 6, 6, 4, 0, 1, 0, 5, 0, 6, 7, 1, 1, 0, 1, 0, 0]' : 0.092823}", "{'[4, 6, 6, 6, 4, 0, 1, 0, 5, 0, 6, 7, 1, 1, 0, 1, 0, 0]' : 0.092911}", "{'[4, 6, 6, 6, 4, 0, 1, 0, 5, 0, 6, 7, 1, 1, 0, 1, 0, 0]' : 0.0912728}", "{'[4, 6, 6, 6, 4, 0, 1, 0, 5, 0, 6, 7, 1, 1, 0, 1, 0, 0]' : 0.091316}", "{'[4, 6, 6, 6, 4, 0, 1, 0, 5, 0, 6, 7, 1, 1, 0, 1, 0, 0]' : 0.091002}", "{'[4, 6, 6, 6, 4, 0, 1, 0, 5, 0, 6, 7, 1, 1, 0, 1, 0, 0]' : 0.0911059}", "{'[4, 6, 6, 6, 4, 0, 1, 0, 5, 0, 6, 7, 1, 1, 0, 1, 0, 0]' : 0.090914}"]
returning from 'run': {'[4, 6, 6, 6, 4, 0, 1, 0, 5, 0, 6, 7, 1, 1, 0, 1, 0, 0]': ([0.0913491, 0.0911951, 0.0908968, 0.090986, 0.0917521, 0.0915911, 0.090847, 0.0909328, 0.0908689, 0.0909328, 0.0889392, 0.088594, 0.088958, 0.088897, 0.0889509, 0.0903208, 0.0891299, 0.0887151, 0.0887191, 0.0887051, 0.0916739, 0.0930009, 0.0929351, 0.092823, 0.092911, 0.0912728, 0.091316, 0.091002, 0.0911059, 0.090914], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 6, 6, 6, 4, 0, 1, 0, 5, 0, 6, 7, 1, 1, 0, 1, 0, 0]': ([0.0913491, 0.0911951, 0.0908968, 0.090986, 0.0917521, 0.0915911, 0.090847, 0.0909328, 0.0908689, 0.0909328, 0.0889392, 0.088594, 0.088958, 0.088897, 0.0889509, 0.0903208, 0.0891299, 0.0887151, 0.0887191, 0.0887051, 0.0916739, 0.0930009, 0.0929351, 0.092823, 0.092911, 0.0912728, 0.091316, 0.091002, 0.0911059, 0.090914], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		387
        Multiplications: 	162
        Divisions: 		0
        Logical: 		0
        Reads: 			808
        Writes: 		156
        Comparisons:		15
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest61.exe __orio_perftest61.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest61.exe  
Program Test Output: 
{'[6, 6, 0, 0, 4, 5, 1, 0, 9, 0, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.124488}
{'[6, 6, 0, 0, 4, 5, 1, 0, 9, 0, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.12418}
{'[6, 6, 0, 0, 4, 5, 1, 0, 9, 0, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.111322}
{'[6, 6, 0, 0, 4, 5, 1, 0, 9, 0, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.105348}
{'[6, 6, 0, 0, 4, 5, 1, 0, 9, 0, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.105288}
{'[6, 6, 0, 0, 4, 5, 1, 0, 9, 0, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.105377}
{'[6, 6, 0, 0, 4, 5, 1, 0, 9, 0, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.105723}
{'[6, 6, 0, 0, 4, 5, 1, 0, 9, 0, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.105481}
{'[6, 6, 0, 0, 4, 5, 1, 0, 9, 0, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.10564}
{'[6, 6, 0, 0, 4, 5, 1, 0, 9, 0, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.105519}
{'[6, 6, 0, 0, 4, 5, 1, 0, 9, 0, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.105441}
{'[6, 6, 0, 0, 4, 5, 1, 0, 9, 0, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.105416}
{'[6, 6, 0, 0, 4, 5, 1, 0, 9, 0, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.105795}
{'[6, 6, 0, 0, 4, 5, 1, 0, 9, 0, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.10543}
{'[6, 6, 0, 0, 4, 5, 1, 0, 9, 0, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.105351}
{'[6, 6, 0, 0, 4, 5, 1, 0, 9, 0, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.105402}
{'[6, 6, 0, 0, 4, 5, 1, 0, 9, 0, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.105386}
{'[6, 6, 0, 0, 4, 5, 1, 0, 9, 0, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.105501}
{'[6, 6, 0, 0, 4, 5, 1, 0, 9, 0, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.105883}
{'[6, 6, 0, 0, 4, 5, 1, 0, 9, 0, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.105456}
{'[6, 6, 0, 0, 4, 5, 1, 0, 9, 0, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.105426}
{'[6, 6, 0, 0, 4, 5, 1, 0, 9, 0, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.105427}
{'[6, 6, 0, 0, 4, 5, 1, 0, 9, 0, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.105427}
{'[6, 6, 0, 0, 4, 5, 1, 0, 9, 0, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.105415}
{'[6, 6, 0, 0, 4, 5, 1, 0, 9, 0, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.105409}
{'[6, 6, 0, 0, 4, 5, 1, 0, 9, 0, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.105421}
{'[6, 6, 0, 0, 4, 5, 1, 0, 9, 0, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.105398}
{'[6, 6, 0, 0, 4, 5, 1, 0, 9, 0, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.105505}
{'[6, 6, 0, 0, 4, 5, 1, 0, 9, 0, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.105401}
{'[6, 6, 0, 0, 4, 5, 1, 0, 9, 0, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.105409}

out:
 ["{'[6, 6, 0, 0, 4, 5, 1, 0, 9, 0, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.124488}", "{'[6, 6, 0, 0, 4, 5, 1, 0, 9, 0, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.12418}", "{'[6, 6, 0, 0, 4, 5, 1, 0, 9, 0, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.111322}", "{'[6, 6, 0, 0, 4, 5, 1, 0, 9, 0, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.105348}", "{'[6, 6, 0, 0, 4, 5, 1, 0, 9, 0, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.105288}", "{'[6, 6, 0, 0, 4, 5, 1, 0, 9, 0, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.105377}", "{'[6, 6, 0, 0, 4, 5, 1, 0, 9, 0, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.105723}", "{'[6, 6, 0, 0, 4, 5, 1, 0, 9, 0, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.105481}", "{'[6, 6, 0, 0, 4, 5, 1, 0, 9, 0, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.10564}", "{'[6, 6, 0, 0, 4, 5, 1, 0, 9, 0, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.105519}", "{'[6, 6, 0, 0, 4, 5, 1, 0, 9, 0, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.105441}", "{'[6, 6, 0, 0, 4, 5, 1, 0, 9, 0, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.105416}", "{'[6, 6, 0, 0, 4, 5, 1, 0, 9, 0, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.105795}", "{'[6, 6, 0, 0, 4, 5, 1, 0, 9, 0, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.10543}", "{'[6, 6, 0, 0, 4, 5, 1, 0, 9, 0, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.105351}", "{'[6, 6, 0, 0, 4, 5, 1, 0, 9, 0, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.105402}", "{'[6, 6, 0, 0, 4, 5, 1, 0, 9, 0, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.105386}", "{'[6, 6, 0, 0, 4, 5, 1, 0, 9, 0, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.105501}", "{'[6, 6, 0, 0, 4, 5, 1, 0, 9, 0, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.105883}", "{'[6, 6, 0, 0, 4, 5, 1, 0, 9, 0, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.105456}", "{'[6, 6, 0, 0, 4, 5, 1, 0, 9, 0, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.105426}", "{'[6, 6, 0, 0, 4, 5, 1, 0, 9, 0, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.105427}", "{'[6, 6, 0, 0, 4, 5, 1, 0, 9, 0, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.105427}", "{'[6, 6, 0, 0, 4, 5, 1, 0, 9, 0, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.105415}", "{'[6, 6, 0, 0, 4, 5, 1, 0, 9, 0, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.105409}", "{'[6, 6, 0, 0, 4, 5, 1, 0, 9, 0, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.105421}", "{'[6, 6, 0, 0, 4, 5, 1, 0, 9, 0, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.105398}", "{'[6, 6, 0, 0, 4, 5, 1, 0, 9, 0, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.105505}", "{'[6, 6, 0, 0, 4, 5, 1, 0, 9, 0, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.105401}", "{'[6, 6, 0, 0, 4, 5, 1, 0, 9, 0, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.105409}"]
returning from 'run': {'[6, 6, 0, 0, 4, 5, 1, 0, 9, 0, 25, 0, 1, 1, 0, 1, 0, 0]': ([0.124488, 0.12418, 0.111322, 0.105348, 0.105288, 0.105377, 0.105723, 0.105481, 0.10564, 0.105519, 0.105441, 0.105416, 0.105795, 0.10543, 0.105351, 0.105402, 0.105386, 0.105501, 0.105883, 0.105456, 0.105426, 0.105427, 0.105427, 0.105415, 0.105409, 0.105421, 0.105398, 0.105505, 0.105401, 0.105409], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 0, 0, 4, 5, 1, 0, 9, 0, 25, 0, 1, 1, 0, 1, 0, 0]': ([0.124488, 0.12418, 0.111322, 0.105348, 0.105288, 0.105377, 0.105723, 0.105481, 0.10564, 0.105519, 0.105441, 0.105416, 0.105795, 0.10543, 0.105351, 0.105402, 0.105386, 0.105501, 0.105883, 0.105456, 0.105426, 0.105427, 0.105427, 0.105415, 0.105409, 0.105421, 0.105398, 0.105505, 0.105401, 0.105409], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	5
        Additions: 		1609
        Multiplications: 	756
        Divisions: 		0
        Logical: 		0
        Reads: 			3160
        Writes: 		546
        Comparisons:		20
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest62.exe __orio_perftest62.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest62.exe  
Program Test Output: 
{'[1, 6, 0, 1, 4, 2, 0, 0, 29, 0, 25, 5, 1, 1, 0, 1, 0, 1]' : 0.10441}
{'[1, 6, 0, 1, 4, 2, 0, 0, 29, 0, 25, 5, 1, 1, 0, 1, 0, 1]' : 0.104361}
{'[1, 6, 0, 1, 4, 2, 0, 0, 29, 0, 25, 5, 1, 1, 0, 1, 0, 1]' : 0.102056}
{'[1, 6, 0, 1, 4, 2, 0, 0, 29, 0, 25, 5, 1, 1, 0, 1, 0, 1]' : 0.0907049}
{'[1, 6, 0, 1, 4, 2, 0, 0, 29, 0, 25, 5, 1, 1, 0, 1, 0, 1]' : 0.090004}
{'[1, 6, 0, 1, 4, 2, 0, 0, 29, 0, 25, 5, 1, 1, 0, 1, 0, 1]' : 0.0900512}
{'[1, 6, 0, 1, 4, 2, 0, 0, 29, 0, 25, 5, 1, 1, 0, 1, 0, 1]' : 0.090133}
{'[1, 6, 0, 1, 4, 2, 0, 0, 29, 0, 25, 5, 1, 1, 0, 1, 0, 1]' : 0.090344}
{'[1, 6, 0, 1, 4, 2, 0, 0, 29, 0, 25, 5, 1, 1, 0, 1, 0, 1]' : 0.0901959}
{'[1, 6, 0, 1, 4, 2, 0, 0, 29, 0, 25, 5, 1, 1, 0, 1, 0, 1]' : 0.0902121}
{'[1, 6, 0, 1, 4, 2, 0, 0, 29, 0, 25, 5, 1, 1, 0, 1, 0, 1]' : 0.0901279}
{'[1, 6, 0, 1, 4, 2, 0, 0, 29, 0, 25, 5, 1, 1, 0, 1, 0, 1]' : 0.090163}
{'[1, 6, 0, 1, 4, 2, 0, 0, 29, 0, 25, 5, 1, 1, 0, 1, 0, 1]' : 0.09021}
{'[1, 6, 0, 1, 4, 2, 0, 0, 29, 0, 25, 5, 1, 1, 0, 1, 0, 1]' : 0.090364}
{'[1, 6, 0, 1, 4, 2, 0, 0, 29, 0, 25, 5, 1, 1, 0, 1, 0, 1]' : 0.0901601}
{'[1, 6, 0, 1, 4, 2, 0, 0, 29, 0, 25, 5, 1, 1, 0, 1, 0, 1]' : 0.0901122}
{'[1, 6, 0, 1, 4, 2, 0, 0, 29, 0, 25, 5, 1, 1, 0, 1, 0, 1]' : 0.0903041}
{'[1, 6, 0, 1, 4, 2, 0, 0, 29, 0, 25, 5, 1, 1, 0, 1, 0, 1]' : 0.0901179}
{'[1, 6, 0, 1, 4, 2, 0, 0, 29, 0, 25, 5, 1, 1, 0, 1, 0, 1]' : 0.090133}
{'[1, 6, 0, 1, 4, 2, 0, 0, 29, 0, 25, 5, 1, 1, 0, 1, 0, 1]' : 0.0901542}
{'[1, 6, 0, 1, 4, 2, 0, 0, 29, 0, 25, 5, 1, 1, 0, 1, 0, 1]' : 0.0901461}
{'[1, 6, 0, 1, 4, 2, 0, 0, 29, 0, 25, 5, 1, 1, 0, 1, 0, 1]' : 0.090183}
{'[1, 6, 0, 1, 4, 2, 0, 0, 29, 0, 25, 5, 1, 1, 0, 1, 0, 1]' : 0.0902491}
{'[1, 6, 0, 1, 4, 2, 0, 0, 29, 0, 25, 5, 1, 1, 0, 1, 0, 1]' : 0.090142}
{'[1, 6, 0, 1, 4, 2, 0, 0, 29, 0, 25, 5, 1, 1, 0, 1, 0, 1]' : 0.0902081}
{'[1, 6, 0, 1, 4, 2, 0, 0, 29, 0, 25, 5, 1, 1, 0, 1, 0, 1]' : 0.0901339}
{'[1, 6, 0, 1, 4, 2, 0, 0, 29, 0, 25, 5, 1, 1, 0, 1, 0, 1]' : 0.0902059}
{'[1, 6, 0, 1, 4, 2, 0, 0, 29, 0, 25, 5, 1, 1, 0, 1, 0, 1]' : 0.0901821}
{'[1, 6, 0, 1, 4, 2, 0, 0, 29, 0, 25, 5, 1, 1, 0, 1, 0, 1]' : 0.0901871}
{'[1, 6, 0, 1, 4, 2, 0, 0, 29, 0, 25, 5, 1, 1, 0, 1, 0, 1]' : 0.0901949}

out:
 ["{'[1, 6, 0, 1, 4, 2, 0, 0, 29, 0, 25, 5, 1, 1, 0, 1, 0, 1]' : 0.10441}", "{'[1, 6, 0, 1, 4, 2, 0, 0, 29, 0, 25, 5, 1, 1, 0, 1, 0, 1]' : 0.104361}", "{'[1, 6, 0, 1, 4, 2, 0, 0, 29, 0, 25, 5, 1, 1, 0, 1, 0, 1]' : 0.102056}", "{'[1, 6, 0, 1, 4, 2, 0, 0, 29, 0, 25, 5, 1, 1, 0, 1, 0, 1]' : 0.0907049}", "{'[1, 6, 0, 1, 4, 2, 0, 0, 29, 0, 25, 5, 1, 1, 0, 1, 0, 1]' : 0.090004}", "{'[1, 6, 0, 1, 4, 2, 0, 0, 29, 0, 25, 5, 1, 1, 0, 1, 0, 1]' : 0.0900512}", "{'[1, 6, 0, 1, 4, 2, 0, 0, 29, 0, 25, 5, 1, 1, 0, 1, 0, 1]' : 0.090133}", "{'[1, 6, 0, 1, 4, 2, 0, 0, 29, 0, 25, 5, 1, 1, 0, 1, 0, 1]' : 0.090344}", "{'[1, 6, 0, 1, 4, 2, 0, 0, 29, 0, 25, 5, 1, 1, 0, 1, 0, 1]' : 0.0901959}", "{'[1, 6, 0, 1, 4, 2, 0, 0, 29, 0, 25, 5, 1, 1, 0, 1, 0, 1]' : 0.0902121}", "{'[1, 6, 0, 1, 4, 2, 0, 0, 29, 0, 25, 5, 1, 1, 0, 1, 0, 1]' : 0.0901279}", "{'[1, 6, 0, 1, 4, 2, 0, 0, 29, 0, 25, 5, 1, 1, 0, 1, 0, 1]' : 0.090163}", "{'[1, 6, 0, 1, 4, 2, 0, 0, 29, 0, 25, 5, 1, 1, 0, 1, 0, 1]' : 0.09021}", "{'[1, 6, 0, 1, 4, 2, 0, 0, 29, 0, 25, 5, 1, 1, 0, 1, 0, 1]' : 0.090364}", "{'[1, 6, 0, 1, 4, 2, 0, 0, 29, 0, 25, 5, 1, 1, 0, 1, 0, 1]' : 0.0901601}", "{'[1, 6, 0, 1, 4, 2, 0, 0, 29, 0, 25, 5, 1, 1, 0, 1, 0, 1]' : 0.0901122}", "{'[1, 6, 0, 1, 4, 2, 0, 0, 29, 0, 25, 5, 1, 1, 0, 1, 0, 1]' : 0.0903041}", "{'[1, 6, 0, 1, 4, 2, 0, 0, 29, 0, 25, 5, 1, 1, 0, 1, 0, 1]' : 0.0901179}", "{'[1, 6, 0, 1, 4, 2, 0, 0, 29, 0, 25, 5, 1, 1, 0, 1, 0, 1]' : 0.090133}", "{'[1, 6, 0, 1, 4, 2, 0, 0, 29, 0, 25, 5, 1, 1, 0, 1, 0, 1]' : 0.0901542}", "{'[1, 6, 0, 1, 4, 2, 0, 0, 29, 0, 25, 5, 1, 1, 0, 1, 0, 1]' : 0.0901461}", "{'[1, 6, 0, 1, 4, 2, 0, 0, 29, 0, 25, 5, 1, 1, 0, 1, 0, 1]' : 0.090183}", "{'[1, 6, 0, 1, 4, 2, 0, 0, 29, 0, 25, 5, 1, 1, 0, 1, 0, 1]' : 0.0902491}", "{'[1, 6, 0, 1, 4, 2, 0, 0, 29, 0, 25, 5, 1, 1, 0, 1, 0, 1]' : 0.090142}", "{'[1, 6, 0, 1, 4, 2, 0, 0, 29, 0, 25, 5, 1, 1, 0, 1, 0, 1]' : 0.0902081}", "{'[1, 6, 0, 1, 4, 2, 0, 0, 29, 0, 25, 5, 1, 1, 0, 1, 0, 1]' : 0.0901339}", "{'[1, 6, 0, 1, 4, 2, 0, 0, 29, 0, 25, 5, 1, 1, 0, 1, 0, 1]' : 0.0902059}", "{'[1, 6, 0, 1, 4, 2, 0, 0, 29, 0, 25, 5, 1, 1, 0, 1, 0, 1]' : 0.0901821}", "{'[1, 6, 0, 1, 4, 2, 0, 0, 29, 0, 25, 5, 1, 1, 0, 1, 0, 1]' : 0.0901871}", "{'[1, 6, 0, 1, 4, 2, 0, 0, 29, 0, 25, 5, 1, 1, 0, 1, 0, 1]' : 0.0901949}"]
returning from 'run': {'[1, 6, 0, 1, 4, 2, 0, 0, 29, 0, 25, 5, 1, 1, 0, 1, 0, 1]': ([0.10441, 0.104361, 0.102056, 0.0907049, 0.090004, 0.0900512, 0.090133, 0.090344, 0.0901959, 0.0902121, 0.0901279, 0.090163, 0.09021, 0.090364, 0.0901601, 0.0901122, 0.0903041, 0.0901179, 0.090133, 0.0901542, 0.0901461, 0.090183, 0.0902491, 0.090142, 0.0902081, 0.0901339, 0.0902059, 0.0901821, 0.0901871, 0.0901949], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 6, 0, 1, 4, 2, 0, 0, 29, 0, 25, 5, 1, 1, 0, 1, 0, 1]': ([0.10441, 0.104361, 0.102056, 0.0907049, 0.090004, 0.0900512, 0.090133, 0.090344, 0.0901959, 0.0902121, 0.0901279, 0.090163, 0.09021, 0.090364, 0.0901601, 0.0901122, 0.0903041, 0.0901179, 0.090133, 0.0901542, 0.0901461, 0.090183, 0.0902491, 0.090142, 0.0902081, 0.0901339, 0.0902059, 0.0901821, 0.0901871, 0.0901949], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	3
        Additions: 		1321
        Multiplications: 	640
        Divisions: 		0
        Logical: 		0
        Reads: 			2539
        Writes: 		423
        Comparisons:		9
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest63.exe __orio_perftest63.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest63.exe  
Program Test Output: 
{'[0, 6, 2, 0, 4, 0, 0, 0, 9, 0, 27, 9, 1, 0, 0, 1, 0, 1]' : 0.0963612}
{'[0, 6, 2, 0, 4, 0, 0, 0, 9, 0, 27, 9, 1, 0, 0, 1, 0, 1]' : 0.0966089}
{'[0, 6, 2, 0, 4, 0, 0, 0, 9, 0, 27, 9, 1, 0, 0, 1, 0, 1]' : 0.096148}
{'[0, 6, 2, 0, 4, 0, 0, 0, 9, 0, 27, 9, 1, 0, 0, 1, 0, 1]' : 0.0962942}
{'[0, 6, 2, 0, 4, 0, 0, 0, 9, 0, 27, 9, 1, 0, 0, 1, 0, 1]' : 0.09624}
{'[0, 6, 2, 0, 4, 0, 0, 0, 9, 0, 27, 9, 1, 0, 0, 1, 0, 1]' : 0.098139}
{'[0, 6, 2, 0, 4, 0, 0, 0, 9, 0, 27, 9, 1, 0, 0, 1, 0, 1]' : 0.0985961}
{'[0, 6, 2, 0, 4, 0, 0, 0, 9, 0, 27, 9, 1, 0, 0, 1, 0, 1]' : 0.0985799}
{'[0, 6, 2, 0, 4, 0, 0, 0, 9, 0, 27, 9, 1, 0, 0, 1, 0, 1]' : 0.098525}
{'[0, 6, 2, 0, 4, 0, 0, 0, 9, 0, 27, 9, 1, 0, 0, 1, 0, 1]' : 0.097404}
{'[0, 6, 2, 0, 4, 0, 0, 0, 9, 0, 27, 9, 1, 0, 0, 1, 0, 1]' : 0.0963218}
{'[0, 6, 2, 0, 4, 0, 0, 0, 9, 0, 27, 9, 1, 0, 0, 1, 0, 1]' : 0.096391}
{'[0, 6, 2, 0, 4, 0, 0, 0, 9, 0, 27, 9, 1, 0, 0, 1, 0, 1]' : 0.0963562}
{'[0, 6, 2, 0, 4, 0, 0, 0, 9, 0, 27, 9, 1, 0, 0, 1, 0, 1]' : 0.096772}
{'[0, 6, 2, 0, 4, 0, 0, 0, 9, 0, 27, 9, 1, 0, 0, 1, 0, 1]' : 0.096437}
{'[0, 6, 2, 0, 4, 0, 0, 0, 9, 0, 27, 9, 1, 0, 0, 1, 0, 1]' : 0.0963011}
{'[0, 6, 2, 0, 4, 0, 0, 0, 9, 0, 27, 9, 1, 0, 0, 1, 0, 1]' : 0.094748}
{'[0, 6, 2, 0, 4, 0, 0, 0, 9, 0, 27, 9, 1, 0, 0, 1, 0, 1]' : 0.0982111}
{'[0, 6, 2, 0, 4, 0, 0, 0, 9, 0, 27, 9, 1, 0, 0, 1, 0, 1]' : 0.0985608}
{'[0, 6, 2, 0, 4, 0, 0, 0, 9, 0, 27, 9, 1, 0, 0, 1, 0, 1]' : 0.098587}
{'[0, 6, 2, 0, 4, 0, 0, 0, 9, 0, 27, 9, 1, 0, 0, 1, 0, 1]' : 0.0980508}
{'[0, 6, 2, 0, 4, 0, 0, 0, 9, 0, 27, 9, 1, 0, 0, 1, 0, 1]' : 0.096417}
{'[0, 6, 2, 0, 4, 0, 0, 0, 9, 0, 27, 9, 1, 0, 0, 1, 0, 1]' : 0.0964222}
{'[0, 6, 2, 0, 4, 0, 0, 0, 9, 0, 27, 9, 1, 0, 0, 1, 0, 1]' : 0.0961871}
{'[0, 6, 2, 0, 4, 0, 0, 0, 9, 0, 27, 9, 1, 0, 0, 1, 0, 1]' : 0.0962059}
{'[0, 6, 2, 0, 4, 0, 0, 0, 9, 0, 27, 9, 1, 0, 0, 1, 0, 1]' : 0.098392}
{'[0, 6, 2, 0, 4, 0, 0, 0, 9, 0, 27, 9, 1, 0, 0, 1, 0, 1]' : 0.098603}
{'[0, 6, 2, 0, 4, 0, 0, 0, 9, 0, 27, 9, 1, 0, 0, 1, 0, 1]' : 0.0987101}
{'[0, 6, 2, 0, 4, 0, 0, 0, 9, 0, 27, 9, 1, 0, 0, 1, 0, 1]' : 0.0972078}
{'[0, 6, 2, 0, 4, 0, 0, 0, 9, 0, 27, 9, 1, 0, 0, 1, 0, 1]' : 0.097091}

out:
 ["{'[0, 6, 2, 0, 4, 0, 0, 0, 9, 0, 27, 9, 1, 0, 0, 1, 0, 1]' : 0.0963612}", "{'[0, 6, 2, 0, 4, 0, 0, 0, 9, 0, 27, 9, 1, 0, 0, 1, 0, 1]' : 0.0966089}", "{'[0, 6, 2, 0, 4, 0, 0, 0, 9, 0, 27, 9, 1, 0, 0, 1, 0, 1]' : 0.096148}", "{'[0, 6, 2, 0, 4, 0, 0, 0, 9, 0, 27, 9, 1, 0, 0, 1, 0, 1]' : 0.0962942}", "{'[0, 6, 2, 0, 4, 0, 0, 0, 9, 0, 27, 9, 1, 0, 0, 1, 0, 1]' : 0.09624}", "{'[0, 6, 2, 0, 4, 0, 0, 0, 9, 0, 27, 9, 1, 0, 0, 1, 0, 1]' : 0.098139}", "{'[0, 6, 2, 0, 4, 0, 0, 0, 9, 0, 27, 9, 1, 0, 0, 1, 0, 1]' : 0.0985961}", "{'[0, 6, 2, 0, 4, 0, 0, 0, 9, 0, 27, 9, 1, 0, 0, 1, 0, 1]' : 0.0985799}", "{'[0, 6, 2, 0, 4, 0, 0, 0, 9, 0, 27, 9, 1, 0, 0, 1, 0, 1]' : 0.098525}", "{'[0, 6, 2, 0, 4, 0, 0, 0, 9, 0, 27, 9, 1, 0, 0, 1, 0, 1]' : 0.097404}", "{'[0, 6, 2, 0, 4, 0, 0, 0, 9, 0, 27, 9, 1, 0, 0, 1, 0, 1]' : 0.0963218}", "{'[0, 6, 2, 0, 4, 0, 0, 0, 9, 0, 27, 9, 1, 0, 0, 1, 0, 1]' : 0.096391}", "{'[0, 6, 2, 0, 4, 0, 0, 0, 9, 0, 27, 9, 1, 0, 0, 1, 0, 1]' : 0.0963562}", "{'[0, 6, 2, 0, 4, 0, 0, 0, 9, 0, 27, 9, 1, 0, 0, 1, 0, 1]' : 0.096772}", "{'[0, 6, 2, 0, 4, 0, 0, 0, 9, 0, 27, 9, 1, 0, 0, 1, 0, 1]' : 0.096437}", "{'[0, 6, 2, 0, 4, 0, 0, 0, 9, 0, 27, 9, 1, 0, 0, 1, 0, 1]' : 0.0963011}", "{'[0, 6, 2, 0, 4, 0, 0, 0, 9, 0, 27, 9, 1, 0, 0, 1, 0, 1]' : 0.094748}", "{'[0, 6, 2, 0, 4, 0, 0, 0, 9, 0, 27, 9, 1, 0, 0, 1, 0, 1]' : 0.0982111}", "{'[0, 6, 2, 0, 4, 0, 0, 0, 9, 0, 27, 9, 1, 0, 0, 1, 0, 1]' : 0.0985608}", "{'[0, 6, 2, 0, 4, 0, 0, 0, 9, 0, 27, 9, 1, 0, 0, 1, 0, 1]' : 0.098587}", "{'[0, 6, 2, 0, 4, 0, 0, 0, 9, 0, 27, 9, 1, 0, 0, 1, 0, 1]' : 0.0980508}", "{'[0, 6, 2, 0, 4, 0, 0, 0, 9, 0, 27, 9, 1, 0, 0, 1, 0, 1]' : 0.096417}", "{'[0, 6, 2, 0, 4, 0, 0, 0, 9, 0, 27, 9, 1, 0, 0, 1, 0, 1]' : 0.0964222}", "{'[0, 6, 2, 0, 4, 0, 0, 0, 9, 0, 27, 9, 1, 0, 0, 1, 0, 1]' : 0.0961871}", "{'[0, 6, 2, 0, 4, 0, 0, 0, 9, 0, 27, 9, 1, 0, 0, 1, 0, 1]' : 0.0962059}", "{'[0, 6, 2, 0, 4, 0, 0, 0, 9, 0, 27, 9, 1, 0, 0, 1, 0, 1]' : 0.098392}", "{'[0, 6, 2, 0, 4, 0, 0, 0, 9, 0, 27, 9, 1, 0, 0, 1, 0, 1]' : 0.098603}", "{'[0, 6, 2, 0, 4, 0, 0, 0, 9, 0, 27, 9, 1, 0, 0, 1, 0, 1]' : 0.0987101}", "{'[0, 6, 2, 0, 4, 0, 0, 0, 9, 0, 27, 9, 1, 0, 0, 1, 0, 1]' : 0.0972078}", "{'[0, 6, 2, 0, 4, 0, 0, 0, 9, 0, 27, 9, 1, 0, 0, 1, 0, 1]' : 0.097091}"]
returning from 'run': {'[0, 6, 2, 0, 4, 0, 0, 0, 9, 0, 27, 9, 1, 0, 0, 1, 0, 1]': ([0.0963612, 0.0966089, 0.096148, 0.0962942, 0.09624, 0.098139, 0.0985961, 0.0985799, 0.098525, 0.097404, 0.0963218, 0.096391, 0.0963562, 0.096772, 0.096437, 0.0963011, 0.094748, 0.0982111, 0.0985608, 0.098587, 0.0980508, 0.096417, 0.0964222, 0.0961871, 0.0962059, 0.098392, 0.098603, 0.0987101, 0.0972078, 0.097091], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 2, 0, 4, 0, 0, 0, 9, 0, 27, 9, 1, 0, 0, 1, 0, 1]': ([0.0963612, 0.0966089, 0.096148, 0.0962942, 0.09624, 0.098139, 0.0985961, 0.0985799, 0.098525, 0.097404, 0.0963218, 0.096391, 0.0963562, 0.096772, 0.096437, 0.0963011, 0.094748, 0.0982111, 0.0985608, 0.098587, 0.0980508, 0.096417, 0.0964222, 0.0961871, 0.0962059, 0.098392, 0.098603, 0.0987101, 0.0972078, 0.097091], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	3
        Additions: 		337
        Multiplications: 	144
        Divisions: 		0
        Logical: 		0
        Reads: 			700
        Writes: 		137
        Comparisons:		10
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest64.exe __orio_perftest64.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest64.exe  
Program Test Output: 
{'[0, 6, 0, 0, 4, 2, 1, 1, 11, 0, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.101487}
{'[0, 6, 0, 0, 4, 2, 1, 1, 11, 0, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.100305}
{'[0, 6, 0, 0, 4, 2, 1, 1, 11, 0, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.100358}
{'[0, 6, 0, 0, 4, 2, 1, 1, 11, 0, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.100837}
{'[0, 6, 0, 0, 4, 2, 1, 1, 11, 0, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.100114}
{'[0, 6, 0, 0, 4, 2, 1, 1, 11, 0, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.100148}
{'[0, 6, 0, 0, 4, 2, 1, 1, 11, 0, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.100155}
{'[0, 6, 0, 0, 4, 2, 1, 1, 11, 0, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.100307}
{'[0, 6, 0, 0, 4, 2, 1, 1, 11, 0, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.100876}
{'[0, 6, 0, 0, 4, 2, 1, 1, 11, 0, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.100631}
{'[0, 6, 0, 0, 4, 2, 1, 1, 11, 0, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.100425}
{'[0, 6, 0, 0, 4, 2, 1, 1, 11, 0, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.100475}
{'[0, 6, 0, 0, 4, 2, 1, 1, 11, 0, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.100284}
{'[0, 6, 0, 0, 4, 2, 1, 1, 11, 0, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.100838}
{'[0, 6, 0, 0, 4, 2, 1, 1, 11, 0, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.100149}
{'[0, 6, 0, 0, 4, 2, 1, 1, 11, 0, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.101196}
{'[0, 6, 0, 0, 4, 2, 1, 1, 11, 0, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.100097}
{'[0, 6, 0, 0, 4, 2, 1, 1, 11, 0, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.100269}
{'[0, 6, 0, 0, 4, 2, 1, 1, 11, 0, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.103044}
{'[0, 6, 0, 0, 4, 2, 1, 1, 11, 0, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.102754}
{'[0, 6, 0, 0, 4, 2, 1, 1, 11, 0, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.103}
{'[0, 6, 0, 0, 4, 2, 1, 1, 11, 0, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.103153}
{'[0, 6, 0, 0, 4, 2, 1, 1, 11, 0, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.102932}
{'[0, 6, 0, 0, 4, 2, 1, 1, 11, 0, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.102946}
{'[0, 6, 0, 0, 4, 2, 1, 1, 11, 0, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.103254}
{'[0, 6, 0, 0, 4, 2, 1, 1, 11, 0, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.10288}
{'[0, 6, 0, 0, 4, 2, 1, 1, 11, 0, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.102943}
{'[0, 6, 0, 0, 4, 2, 1, 1, 11, 0, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.103617}
{'[0, 6, 0, 0, 4, 2, 1, 1, 11, 0, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.102926}
{'[0, 6, 0, 0, 4, 2, 1, 1, 11, 0, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.102746}

out:
 ["{'[0, 6, 0, 0, 4, 2, 1, 1, 11, 0, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.101487}", "{'[0, 6, 0, 0, 4, 2, 1, 1, 11, 0, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.100305}", "{'[0, 6, 0, 0, 4, 2, 1, 1, 11, 0, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.100358}", "{'[0, 6, 0, 0, 4, 2, 1, 1, 11, 0, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.100837}", "{'[0, 6, 0, 0, 4, 2, 1, 1, 11, 0, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.100114}", "{'[0, 6, 0, 0, 4, 2, 1, 1, 11, 0, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.100148}", "{'[0, 6, 0, 0, 4, 2, 1, 1, 11, 0, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.100155}", "{'[0, 6, 0, 0, 4, 2, 1, 1, 11, 0, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.100307}", "{'[0, 6, 0, 0, 4, 2, 1, 1, 11, 0, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.100876}", "{'[0, 6, 0, 0, 4, 2, 1, 1, 11, 0, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.100631}", "{'[0, 6, 0, 0, 4, 2, 1, 1, 11, 0, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.100425}", "{'[0, 6, 0, 0, 4, 2, 1, 1, 11, 0, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.100475}", "{'[0, 6, 0, 0, 4, 2, 1, 1, 11, 0, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.100284}", "{'[0, 6, 0, 0, 4, 2, 1, 1, 11, 0, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.100838}", "{'[0, 6, 0, 0, 4, 2, 1, 1, 11, 0, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.100149}", "{'[0, 6, 0, 0, 4, 2, 1, 1, 11, 0, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.101196}", "{'[0, 6, 0, 0, 4, 2, 1, 1, 11, 0, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.100097}", "{'[0, 6, 0, 0, 4, 2, 1, 1, 11, 0, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.100269}", "{'[0, 6, 0, 0, 4, 2, 1, 1, 11, 0, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.103044}", "{'[0, 6, 0, 0, 4, 2, 1, 1, 11, 0, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.102754}", "{'[0, 6, 0, 0, 4, 2, 1, 1, 11, 0, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.103}", "{'[0, 6, 0, 0, 4, 2, 1, 1, 11, 0, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.103153}", "{'[0, 6, 0, 0, 4, 2, 1, 1, 11, 0, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.102932}", "{'[0, 6, 0, 0, 4, 2, 1, 1, 11, 0, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.102946}", "{'[0, 6, 0, 0, 4, 2, 1, 1, 11, 0, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.103254}", "{'[0, 6, 0, 0, 4, 2, 1, 1, 11, 0, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.10288}", "{'[0, 6, 0, 0, 4, 2, 1, 1, 11, 0, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.102943}", "{'[0, 6, 0, 0, 4, 2, 1, 1, 11, 0, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.103617}", "{'[0, 6, 0, 0, 4, 2, 1, 1, 11, 0, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.102926}", "{'[0, 6, 0, 0, 4, 2, 1, 1, 11, 0, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.102746}"]
returning from 'run': {'[0, 6, 0, 0, 4, 2, 1, 1, 11, 0, 0, 0, 1, 1, 0, 1, 0, 1]': ([0.101487, 0.100305, 0.100358, 0.100837, 0.100114, 0.100148, 0.100155, 0.100307, 0.100876, 0.100631, 0.100425, 0.100475, 0.100284, 0.100838, 0.100149, 0.101196, 0.100097, 0.100269, 0.103044, 0.102754, 0.103, 0.103153, 0.102932, 0.102946, 0.103254, 0.10288, 0.102943, 0.103617, 0.102926, 0.102746], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 0, 0, 4, 2, 1, 1, 11, 0, 0, 0, 1, 1, 0, 1, 0, 1]': ([0.101487, 0.100305, 0.100358, 0.100837, 0.100114, 0.100148, 0.100155, 0.100307, 0.100876, 0.100631, 0.100425, 0.100475, 0.100284, 0.100838, 0.100149, 0.101196, 0.100097, 0.100269, 0.103044, 0.102754, 0.103, 0.103153, 0.102932, 0.102946, 0.103254, 0.10288, 0.102943, 0.103617, 0.102926, 0.102746], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		1219
        Multiplications: 	558
        Divisions: 		0
        Logical: 		0
        Reads: 			2486
        Writes: 		456
        Comparisons:		15
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest65.exe __orio_perftest65.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest65.exe  
Program Test Output: 
{'[3, 6, 5, 0, 4, 0, 0, 0, 4, 0, 0, 28, 1, 0, 0, 1, 0, 0]' : 0.122233}
{'[3, 6, 5, 0, 4, 0, 0, 0, 4, 0, 0, 28, 1, 0, 0, 1, 0, 0]' : 0.122669}
{'[3, 6, 5, 0, 4, 0, 0, 0, 4, 0, 0, 28, 1, 0, 0, 1, 0, 0]' : 0.124283}
{'[3, 6, 5, 0, 4, 0, 0, 0, 4, 0, 0, 28, 1, 0, 0, 1, 0, 0]' : 0.123963}
{'[3, 6, 5, 0, 4, 0, 0, 0, 4, 0, 0, 28, 1, 0, 0, 1, 0, 0]' : 0.123482}
{'[3, 6, 5, 0, 4, 0, 0, 0, 4, 0, 0, 28, 1, 0, 0, 1, 0, 0]' : 0.113338}
{'[3, 6, 5, 0, 4, 0, 0, 0, 4, 0, 0, 28, 1, 0, 0, 1, 0, 0]' : 0.108573}
{'[3, 6, 5, 0, 4, 0, 0, 0, 4, 0, 0, 28, 1, 0, 0, 1, 0, 0]' : 0.107464}
{'[3, 6, 5, 0, 4, 0, 0, 0, 4, 0, 0, 28, 1, 0, 0, 1, 0, 0]' : 0.107856}
{'[3, 6, 5, 0, 4, 0, 0, 0, 4, 0, 0, 28, 1, 0, 0, 1, 0, 0]' : 0.111588}
{'[3, 6, 5, 0, 4, 0, 0, 0, 4, 0, 0, 28, 1, 0, 0, 1, 0, 0]' : 0.111389}
{'[3, 6, 5, 0, 4, 0, 0, 0, 4, 0, 0, 28, 1, 0, 0, 1, 0, 0]' : 0.111343}
{'[3, 6, 5, 0, 4, 0, 0, 0, 4, 0, 0, 28, 1, 0, 0, 1, 0, 0]' : 0.111312}
{'[3, 6, 5, 0, 4, 0, 0, 0, 4, 0, 0, 28, 1, 0, 0, 1, 0, 0]' : 0.111422}
{'[3, 6, 5, 0, 4, 0, 0, 0, 4, 0, 0, 28, 1, 0, 0, 1, 0, 0]' : 0.111433}
{'[3, 6, 5, 0, 4, 0, 0, 0, 4, 0, 0, 28, 1, 0, 0, 1, 0, 0]' : 0.111702}
{'[3, 6, 5, 0, 4, 0, 0, 0, 4, 0, 0, 28, 1, 0, 0, 1, 0, 0]' : 0.111423}
{'[3, 6, 5, 0, 4, 0, 0, 0, 4, 0, 0, 28, 1, 0, 0, 1, 0, 0]' : 0.110065}
{'[3, 6, 5, 0, 4, 0, 0, 0, 4, 0, 0, 28, 1, 0, 0, 1, 0, 0]' : 0.111336}
{'[3, 6, 5, 0, 4, 0, 0, 0, 4, 0, 0, 28, 1, 0, 0, 1, 0, 0]' : 0.111378}
{'[3, 6, 5, 0, 4, 0, 0, 0, 4, 0, 0, 28, 1, 0, 0, 1, 0, 0]' : 0.11137}
{'[3, 6, 5, 0, 4, 0, 0, 0, 4, 0, 0, 28, 1, 0, 0, 1, 0, 0]' : 0.11134}
{'[3, 6, 5, 0, 4, 0, 0, 0, 4, 0, 0, 28, 1, 0, 0, 1, 0, 0]' : 0.111459}
{'[3, 6, 5, 0, 4, 0, 0, 0, 4, 0, 0, 28, 1, 0, 0, 1, 0, 0]' : 0.111341}
{'[3, 6, 5, 0, 4, 0, 0, 0, 4, 0, 0, 28, 1, 0, 0, 1, 0, 0]' : 0.111372}
{'[3, 6, 5, 0, 4, 0, 0, 0, 4, 0, 0, 28, 1, 0, 0, 1, 0, 0]' : 0.11166}
{'[3, 6, 5, 0, 4, 0, 0, 0, 4, 0, 0, 28, 1, 0, 0, 1, 0, 0]' : 0.11106}
{'[3, 6, 5, 0, 4, 0, 0, 0, 4, 0, 0, 28, 1, 0, 0, 1, 0, 0]' : 0.111468}
{'[3, 6, 5, 0, 4, 0, 0, 0, 4, 0, 0, 28, 1, 0, 0, 1, 0, 0]' : 0.111344}
{'[3, 6, 5, 0, 4, 0, 0, 0, 4, 0, 0, 28, 1, 0, 0, 1, 0, 0]' : 0.111941}

out:
 ["{'[3, 6, 5, 0, 4, 0, 0, 0, 4, 0, 0, 28, 1, 0, 0, 1, 0, 0]' : 0.122233}", "{'[3, 6, 5, 0, 4, 0, 0, 0, 4, 0, 0, 28, 1, 0, 0, 1, 0, 0]' : 0.122669}", "{'[3, 6, 5, 0, 4, 0, 0, 0, 4, 0, 0, 28, 1, 0, 0, 1, 0, 0]' : 0.124283}", "{'[3, 6, 5, 0, 4, 0, 0, 0, 4, 0, 0, 28, 1, 0, 0, 1, 0, 0]' : 0.123963}", "{'[3, 6, 5, 0, 4, 0, 0, 0, 4, 0, 0, 28, 1, 0, 0, 1, 0, 0]' : 0.123482}", "{'[3, 6, 5, 0, 4, 0, 0, 0, 4, 0, 0, 28, 1, 0, 0, 1, 0, 0]' : 0.113338}", "{'[3, 6, 5, 0, 4, 0, 0, 0, 4, 0, 0, 28, 1, 0, 0, 1, 0, 0]' : 0.108573}", "{'[3, 6, 5, 0, 4, 0, 0, 0, 4, 0, 0, 28, 1, 0, 0, 1, 0, 0]' : 0.107464}", "{'[3, 6, 5, 0, 4, 0, 0, 0, 4, 0, 0, 28, 1, 0, 0, 1, 0, 0]' : 0.107856}", "{'[3, 6, 5, 0, 4, 0, 0, 0, 4, 0, 0, 28, 1, 0, 0, 1, 0, 0]' : 0.111588}", "{'[3, 6, 5, 0, 4, 0, 0, 0, 4, 0, 0, 28, 1, 0, 0, 1, 0, 0]' : 0.111389}", "{'[3, 6, 5, 0, 4, 0, 0, 0, 4, 0, 0, 28, 1, 0, 0, 1, 0, 0]' : 0.111343}", "{'[3, 6, 5, 0, 4, 0, 0, 0, 4, 0, 0, 28, 1, 0, 0, 1, 0, 0]' : 0.111312}", "{'[3, 6, 5, 0, 4, 0, 0, 0, 4, 0, 0, 28, 1, 0, 0, 1, 0, 0]' : 0.111422}", "{'[3, 6, 5, 0, 4, 0, 0, 0, 4, 0, 0, 28, 1, 0, 0, 1, 0, 0]' : 0.111433}", "{'[3, 6, 5, 0, 4, 0, 0, 0, 4, 0, 0, 28, 1, 0, 0, 1, 0, 0]' : 0.111702}", "{'[3, 6, 5, 0, 4, 0, 0, 0, 4, 0, 0, 28, 1, 0, 0, 1, 0, 0]' : 0.111423}", "{'[3, 6, 5, 0, 4, 0, 0, 0, 4, 0, 0, 28, 1, 0, 0, 1, 0, 0]' : 0.110065}", "{'[3, 6, 5, 0, 4, 0, 0, 0, 4, 0, 0, 28, 1, 0, 0, 1, 0, 0]' : 0.111336}", "{'[3, 6, 5, 0, 4, 0, 0, 0, 4, 0, 0, 28, 1, 0, 0, 1, 0, 0]' : 0.111378}", "{'[3, 6, 5, 0, 4, 0, 0, 0, 4, 0, 0, 28, 1, 0, 0, 1, 0, 0]' : 0.11137}", "{'[3, 6, 5, 0, 4, 0, 0, 0, 4, 0, 0, 28, 1, 0, 0, 1, 0, 0]' : 0.11134}", "{'[3, 6, 5, 0, 4, 0, 0, 0, 4, 0, 0, 28, 1, 0, 0, 1, 0, 0]' : 0.111459}", "{'[3, 6, 5, 0, 4, 0, 0, 0, 4, 0, 0, 28, 1, 0, 0, 1, 0, 0]' : 0.111341}", "{'[3, 6, 5, 0, 4, 0, 0, 0, 4, 0, 0, 28, 1, 0, 0, 1, 0, 0]' : 0.111372}", "{'[3, 6, 5, 0, 4, 0, 0, 0, 4, 0, 0, 28, 1, 0, 0, 1, 0, 0]' : 0.11166}", "{'[3, 6, 5, 0, 4, 0, 0, 0, 4, 0, 0, 28, 1, 0, 0, 1, 0, 0]' : 0.11106}", "{'[3, 6, 5, 0, 4, 0, 0, 0, 4, 0, 0, 28, 1, 0, 0, 1, 0, 0]' : 0.111468}", "{'[3, 6, 5, 0, 4, 0, 0, 0, 4, 0, 0, 28, 1, 0, 0, 1, 0, 0]' : 0.111344}", "{'[3, 6, 5, 0, 4, 0, 0, 0, 4, 0, 0, 28, 1, 0, 0, 1, 0, 0]' : 0.111941}"]
returning from 'run': {'[3, 6, 5, 0, 4, 0, 0, 0, 4, 0, 0, 28, 1, 0, 0, 1, 0, 0]': ([0.122233, 0.122669, 0.124283, 0.123963, 0.123482, 0.113338, 0.108573, 0.107464, 0.107856, 0.111588, 0.111389, 0.111343, 0.111312, 0.111422, 0.111433, 0.111702, 0.111423, 0.110065, 0.111336, 0.111378, 0.11137, 0.11134, 0.111459, 0.111341, 0.111372, 0.11166, 0.11106, 0.111468, 0.111344, 0.111941], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 6, 5, 0, 4, 0, 0, 0, 4, 0, 0, 28, 1, 0, 0, 1, 0, 0]': ([0.122233, 0.122669, 0.124283, 0.123963, 0.123482, 0.113338, 0.108573, 0.107464, 0.107856, 0.111588, 0.111389, 0.111343, 0.111312, 0.111422, 0.111433, 0.111702, 0.111423, 0.110065, 0.111336, 0.111378, 0.11137, 0.11134, 0.111459, 0.111341, 0.111372, 0.11166, 0.11106, 0.111468, 0.111344, 0.111941], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	25
        Max loop nest depth: 	5
        Additions: 		1761
        Multiplications: 	756
        Divisions: 		0
        Logical: 		0
        Reads: 			3453
        Writes: 		602
        Comparisons:		25
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest66.exe __orio_perftest66.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest66.exe  
Program Test Output: 
{'[6, 6, 2, 0, 4, 2, 0, 1, 8, 0, 4, 26, 1, 1, 0, 1, 0, 1]' : 0.117298}
{'[6, 6, 2, 0, 4, 2, 0, 1, 8, 0, 4, 26, 1, 1, 0, 1, 0, 1]' : 0.115926}
{'[6, 6, 2, 0, 4, 2, 0, 1, 8, 0, 4, 26, 1, 1, 0, 1, 0, 1]' : 0.117042}
{'[6, 6, 2, 0, 4, 2, 0, 1, 8, 0, 4, 26, 1, 1, 0, 1, 0, 1]' : 0.117008}
{'[6, 6, 2, 0, 4, 2, 0, 1, 8, 0, 4, 26, 1, 1, 0, 1, 0, 1]' : 0.117013}
{'[6, 6, 2, 0, 4, 2, 0, 1, 8, 0, 4, 26, 1, 1, 0, 1, 0, 1]' : 0.11612}
{'[6, 6, 2, 0, 4, 2, 0, 1, 8, 0, 4, 26, 1, 1, 0, 1, 0, 1]' : 0.114631}
{'[6, 6, 2, 0, 4, 2, 0, 1, 8, 0, 4, 26, 1, 1, 0, 1, 0, 1]' : 0.114393}
{'[6, 6, 2, 0, 4, 2, 0, 1, 8, 0, 4, 26, 1, 1, 0, 1, 0, 1]' : 0.115124}
{'[6, 6, 2, 0, 4, 2, 0, 1, 8, 0, 4, 26, 1, 1, 0, 1, 0, 1]' : 0.114534}
{'[6, 6, 2, 0, 4, 2, 0, 1, 8, 0, 4, 26, 1, 1, 0, 1, 0, 1]' : 0.1167}
{'[6, 6, 2, 0, 4, 2, 0, 1, 8, 0, 4, 26, 1, 1, 0, 1, 0, 1]' : 0.117104}
{'[6, 6, 2, 0, 4, 2, 0, 1, 8, 0, 4, 26, 1, 1, 0, 1, 0, 1]' : 0.117133}
{'[6, 6, 2, 0, 4, 2, 0, 1, 8, 0, 4, 26, 1, 1, 0, 1, 0, 1]' : 0.117097}
{'[6, 6, 2, 0, 4, 2, 0, 1, 8, 0, 4, 26, 1, 1, 0, 1, 0, 1]' : 0.114688}
{'[6, 6, 2, 0, 4, 2, 0, 1, 8, 0, 4, 26, 1, 1, 0, 1, 0, 1]' : 0.11159}
{'[6, 6, 2, 0, 4, 2, 0, 1, 8, 0, 4, 26, 1, 1, 0, 1, 0, 1]' : 0.111633}
{'[6, 6, 2, 0, 4, 2, 0, 1, 8, 0, 4, 26, 1, 1, 0, 1, 0, 1]' : 0.111626}
{'[6, 6, 2, 0, 4, 2, 0, 1, 8, 0, 4, 26, 1, 1, 0, 1, 0, 1]' : 0.112439}
{'[6, 6, 2, 0, 4, 2, 0, 1, 8, 0, 4, 26, 1, 1, 0, 1, 0, 1]' : 0.117115}
{'[6, 6, 2, 0, 4, 2, 0, 1, 8, 0, 4, 26, 1, 1, 0, 1, 0, 1]' : 0.11701}
{'[6, 6, 2, 0, 4, 2, 0, 1, 8, 0, 4, 26, 1, 1, 0, 1, 0, 1]' : 0.113971}
{'[6, 6, 2, 0, 4, 2, 0, 1, 8, 0, 4, 26, 1, 1, 0, 1, 0, 1]' : 0.112013}
{'[6, 6, 2, 0, 4, 2, 0, 1, 8, 0, 4, 26, 1, 1, 0, 1, 0, 1]' : 0.113962}
{'[6, 6, 2, 0, 4, 2, 0, 1, 8, 0, 4, 26, 1, 1, 0, 1, 0, 1]' : 0.111767}
{'[6, 6, 2, 0, 4, 2, 0, 1, 8, 0, 4, 26, 1, 1, 0, 1, 0, 1]' : 0.111535}
{'[6, 6, 2, 0, 4, 2, 0, 1, 8, 0, 4, 26, 1, 1, 0, 1, 0, 1]' : 0.111606}
{'[6, 6, 2, 0, 4, 2, 0, 1, 8, 0, 4, 26, 1, 1, 0, 1, 0, 1]' : 0.113535}
{'[6, 6, 2, 0, 4, 2, 0, 1, 8, 0, 4, 26, 1, 1, 0, 1, 0, 1]' : 0.117265}
{'[6, 6, 2, 0, 4, 2, 0, 1, 8, 0, 4, 26, 1, 1, 0, 1, 0, 1]' : 0.11733}

out:
 ["{'[6, 6, 2, 0, 4, 2, 0, 1, 8, 0, 4, 26, 1, 1, 0, 1, 0, 1]' : 0.117298}", "{'[6, 6, 2, 0, 4, 2, 0, 1, 8, 0, 4, 26, 1, 1, 0, 1, 0, 1]' : 0.115926}", "{'[6, 6, 2, 0, 4, 2, 0, 1, 8, 0, 4, 26, 1, 1, 0, 1, 0, 1]' : 0.117042}", "{'[6, 6, 2, 0, 4, 2, 0, 1, 8, 0, 4, 26, 1, 1, 0, 1, 0, 1]' : 0.117008}", "{'[6, 6, 2, 0, 4, 2, 0, 1, 8, 0, 4, 26, 1, 1, 0, 1, 0, 1]' : 0.117013}", "{'[6, 6, 2, 0, 4, 2, 0, 1, 8, 0, 4, 26, 1, 1, 0, 1, 0, 1]' : 0.11612}", "{'[6, 6, 2, 0, 4, 2, 0, 1, 8, 0, 4, 26, 1, 1, 0, 1, 0, 1]' : 0.114631}", "{'[6, 6, 2, 0, 4, 2, 0, 1, 8, 0, 4, 26, 1, 1, 0, 1, 0, 1]' : 0.114393}", "{'[6, 6, 2, 0, 4, 2, 0, 1, 8, 0, 4, 26, 1, 1, 0, 1, 0, 1]' : 0.115124}", "{'[6, 6, 2, 0, 4, 2, 0, 1, 8, 0, 4, 26, 1, 1, 0, 1, 0, 1]' : 0.114534}", "{'[6, 6, 2, 0, 4, 2, 0, 1, 8, 0, 4, 26, 1, 1, 0, 1, 0, 1]' : 0.1167}", "{'[6, 6, 2, 0, 4, 2, 0, 1, 8, 0, 4, 26, 1, 1, 0, 1, 0, 1]' : 0.117104}", "{'[6, 6, 2, 0, 4, 2, 0, 1, 8, 0, 4, 26, 1, 1, 0, 1, 0, 1]' : 0.117133}", "{'[6, 6, 2, 0, 4, 2, 0, 1, 8, 0, 4, 26, 1, 1, 0, 1, 0, 1]' : 0.117097}", "{'[6, 6, 2, 0, 4, 2, 0, 1, 8, 0, 4, 26, 1, 1, 0, 1, 0, 1]' : 0.114688}", "{'[6, 6, 2, 0, 4, 2, 0, 1, 8, 0, 4, 26, 1, 1, 0, 1, 0, 1]' : 0.11159}", "{'[6, 6, 2, 0, 4, 2, 0, 1, 8, 0, 4, 26, 1, 1, 0, 1, 0, 1]' : 0.111633}", "{'[6, 6, 2, 0, 4, 2, 0, 1, 8, 0, 4, 26, 1, 1, 0, 1, 0, 1]' : 0.111626}", "{'[6, 6, 2, 0, 4, 2, 0, 1, 8, 0, 4, 26, 1, 1, 0, 1, 0, 1]' : 0.112439}", "{'[6, 6, 2, 0, 4, 2, 0, 1, 8, 0, 4, 26, 1, 1, 0, 1, 0, 1]' : 0.117115}", "{'[6, 6, 2, 0, 4, 2, 0, 1, 8, 0, 4, 26, 1, 1, 0, 1, 0, 1]' : 0.11701}", "{'[6, 6, 2, 0, 4, 2, 0, 1, 8, 0, 4, 26, 1, 1, 0, 1, 0, 1]' : 0.113971}", "{'[6, 6, 2, 0, 4, 2, 0, 1, 8, 0, 4, 26, 1, 1, 0, 1, 0, 1]' : 0.112013}", "{'[6, 6, 2, 0, 4, 2, 0, 1, 8, 0, 4, 26, 1, 1, 0, 1, 0, 1]' : 0.113962}", "{'[6, 6, 2, 0, 4, 2, 0, 1, 8, 0, 4, 26, 1, 1, 0, 1, 0, 1]' : 0.111767}", "{'[6, 6, 2, 0, 4, 2, 0, 1, 8, 0, 4, 26, 1, 1, 0, 1, 0, 1]' : 0.111535}", "{'[6, 6, 2, 0, 4, 2, 0, 1, 8, 0, 4, 26, 1, 1, 0, 1, 0, 1]' : 0.111606}", "{'[6, 6, 2, 0, 4, 2, 0, 1, 8, 0, 4, 26, 1, 1, 0, 1, 0, 1]' : 0.113535}", "{'[6, 6, 2, 0, 4, 2, 0, 1, 8, 0, 4, 26, 1, 1, 0, 1, 0, 1]' : 0.117265}", "{'[6, 6, 2, 0, 4, 2, 0, 1, 8, 0, 4, 26, 1, 1, 0, 1, 0, 1]' : 0.11733}"]
returning from 'run': {'[6, 6, 2, 0, 4, 2, 0, 1, 8, 0, 4, 26, 1, 1, 0, 1, 0, 1]': ([0.117298, 0.115926, 0.117042, 0.117008, 0.117013, 0.11612, 0.114631, 0.114393, 0.115124, 0.114534, 0.1167, 0.117104, 0.117133, 0.117097, 0.114688, 0.11159, 0.111633, 0.111626, 0.112439, 0.117115, 0.11701, 0.113971, 0.112013, 0.113962, 0.111767, 0.111535, 0.111606, 0.113535, 0.117265, 0.11733], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 2, 0, 4, 2, 0, 1, 8, 0, 4, 26, 1, 1, 0, 1, 0, 1]': ([0.117298, 0.115926, 0.117042, 0.117008, 0.117013, 0.11612, 0.114631, 0.114393, 0.115124, 0.114534, 0.1167, 0.117104, 0.117133, 0.117097, 0.114688, 0.11159, 0.111633, 0.111626, 0.112439, 0.117115, 0.11701, 0.113971, 0.112013, 0.113962, 0.111767, 0.111535, 0.111606, 0.113535, 0.117265, 0.11733], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	4
        Additions: 		1266
        Multiplications: 	558
        Divisions: 		0
        Logical: 		0
        Reads: 			2542
        Writes: 		470
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest67.exe __orio_perftest67.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest67.exe  
Program Test Output: 
{'[0, 6, 0, 3, 4, 6, 1, 0, 26, 0, 9, 18, 1, 0, 0, 1, 0, 1]' : 0.0963671}
{'[0, 6, 0, 3, 4, 6, 1, 0, 26, 0, 9, 18, 1, 0, 0, 1, 0, 1]' : 0.0962601}
{'[0, 6, 0, 3, 4, 6, 1, 0, 26, 0, 9, 18, 1, 0, 0, 1, 0, 1]' : 0.09621}
{'[0, 6, 0, 3, 4, 6, 1, 0, 26, 0, 9, 18, 1, 0, 0, 1, 0, 1]' : 0.0974729}
{'[0, 6, 0, 3, 4, 6, 1, 0, 26, 0, 9, 18, 1, 0, 0, 1, 0, 1]' : 0.098181}
{'[0, 6, 0, 3, 4, 6, 1, 0, 26, 0, 9, 18, 1, 0, 0, 1, 0, 1]' : 0.0982502}
{'[0, 6, 0, 3, 4, 6, 1, 0, 26, 0, 9, 18, 1, 0, 0, 1, 0, 1]' : 0.096308}
{'[0, 6, 0, 3, 4, 6, 1, 0, 26, 0, 9, 18, 1, 0, 0, 1, 0, 1]' : 0.0970209}
{'[0, 6, 0, 3, 4, 6, 1, 0, 26, 0, 9, 18, 1, 0, 0, 1, 0, 1]' : 0.096539}
{'[0, 6, 0, 3, 4, 6, 1, 0, 26, 0, 9, 18, 1, 0, 0, 1, 0, 1]' : 0.0960221}
{'[0, 6, 0, 3, 4, 6, 1, 0, 26, 0, 9, 18, 1, 0, 0, 1, 0, 1]' : 0.0961289}
{'[0, 6, 0, 3, 4, 6, 1, 0, 26, 0, 9, 18, 1, 0, 0, 1, 0, 1]' : 0.0961828}
{'[0, 6, 0, 3, 4, 6, 1, 0, 26, 0, 9, 18, 1, 0, 0, 1, 0, 1]' : 0.0959561}
{'[0, 6, 0, 3, 4, 6, 1, 0, 26, 0, 9, 18, 1, 0, 0, 1, 0, 1]' : 0.0962691}
{'[0, 6, 0, 3, 4, 6, 1, 0, 26, 0, 9, 18, 1, 0, 0, 1, 0, 1]' : 0.097327}
{'[0, 6, 0, 3, 4, 6, 1, 0, 26, 0, 9, 18, 1, 0, 0, 1, 0, 1]' : 0.0967851}
{'[0, 6, 0, 3, 4, 6, 1, 0, 26, 0, 9, 18, 1, 0, 0, 1, 0, 1]' : 0.0960689}
{'[0, 6, 0, 3, 4, 6, 1, 0, 26, 0, 9, 18, 1, 0, 0, 1, 0, 1]' : 0.096158}
{'[0, 6, 0, 3, 4, 6, 1, 0, 26, 0, 9, 18, 1, 0, 0, 1, 0, 1]' : 0.096446}
{'[0, 6, 0, 3, 4, 6, 1, 0, 26, 0, 9, 18, 1, 0, 0, 1, 0, 1]' : 0.0962589}
{'[0, 6, 0, 3, 4, 6, 1, 0, 26, 0, 9, 18, 1, 0, 0, 1, 0, 1]' : 0.0961061}
{'[0, 6, 0, 3, 4, 6, 1, 0, 26, 0, 9, 18, 1, 0, 0, 1, 0, 1]' : 0.096051}
{'[0, 6, 0, 3, 4, 6, 1, 0, 26, 0, 9, 18, 1, 0, 0, 1, 0, 1]' : 0.0961399}
{'[0, 6, 0, 3, 4, 6, 1, 0, 26, 0, 9, 18, 1, 0, 0, 1, 0, 1]' : 0.095412}
{'[0, 6, 0, 3, 4, 6, 1, 0, 26, 0, 9, 18, 1, 0, 0, 1, 0, 1]' : 0.0957611}
{'[0, 6, 0, 3, 4, 6, 1, 0, 26, 0, 9, 18, 1, 0, 0, 1, 0, 1]' : 0.0974851}
{'[0, 6, 0, 3, 4, 6, 1, 0, 26, 0, 9, 18, 1, 0, 0, 1, 0, 1]' : 0.0960572}
{'[0, 6, 0, 3, 4, 6, 1, 0, 26, 0, 9, 18, 1, 0, 0, 1, 0, 1]' : 0.0960519}
{'[0, 6, 0, 3, 4, 6, 1, 0, 26, 0, 9, 18, 1, 0, 0, 1, 0, 1]' : 0.0960391}
{'[0, 6, 0, 3, 4, 6, 1, 0, 26, 0, 9, 18, 1, 0, 0, 1, 0, 1]' : 0.096334}

out:
 ["{'[0, 6, 0, 3, 4, 6, 1, 0, 26, 0, 9, 18, 1, 0, 0, 1, 0, 1]' : 0.0963671}", "{'[0, 6, 0, 3, 4, 6, 1, 0, 26, 0, 9, 18, 1, 0, 0, 1, 0, 1]' : 0.0962601}", "{'[0, 6, 0, 3, 4, 6, 1, 0, 26, 0, 9, 18, 1, 0, 0, 1, 0, 1]' : 0.09621}", "{'[0, 6, 0, 3, 4, 6, 1, 0, 26, 0, 9, 18, 1, 0, 0, 1, 0, 1]' : 0.0974729}", "{'[0, 6, 0, 3, 4, 6, 1, 0, 26, 0, 9, 18, 1, 0, 0, 1, 0, 1]' : 0.098181}", "{'[0, 6, 0, 3, 4, 6, 1, 0, 26, 0, 9, 18, 1, 0, 0, 1, 0, 1]' : 0.0982502}", "{'[0, 6, 0, 3, 4, 6, 1, 0, 26, 0, 9, 18, 1, 0, 0, 1, 0, 1]' : 0.096308}", "{'[0, 6, 0, 3, 4, 6, 1, 0, 26, 0, 9, 18, 1, 0, 0, 1, 0, 1]' : 0.0970209}", "{'[0, 6, 0, 3, 4, 6, 1, 0, 26, 0, 9, 18, 1, 0, 0, 1, 0, 1]' : 0.096539}", "{'[0, 6, 0, 3, 4, 6, 1, 0, 26, 0, 9, 18, 1, 0, 0, 1, 0, 1]' : 0.0960221}", "{'[0, 6, 0, 3, 4, 6, 1, 0, 26, 0, 9, 18, 1, 0, 0, 1, 0, 1]' : 0.0961289}", "{'[0, 6, 0, 3, 4, 6, 1, 0, 26, 0, 9, 18, 1, 0, 0, 1, 0, 1]' : 0.0961828}", "{'[0, 6, 0, 3, 4, 6, 1, 0, 26, 0, 9, 18, 1, 0, 0, 1, 0, 1]' : 0.0959561}", "{'[0, 6, 0, 3, 4, 6, 1, 0, 26, 0, 9, 18, 1, 0, 0, 1, 0, 1]' : 0.0962691}", "{'[0, 6, 0, 3, 4, 6, 1, 0, 26, 0, 9, 18, 1, 0, 0, 1, 0, 1]' : 0.097327}", "{'[0, 6, 0, 3, 4, 6, 1, 0, 26, 0, 9, 18, 1, 0, 0, 1, 0, 1]' : 0.0967851}", "{'[0, 6, 0, 3, 4, 6, 1, 0, 26, 0, 9, 18, 1, 0, 0, 1, 0, 1]' : 0.0960689}", "{'[0, 6, 0, 3, 4, 6, 1, 0, 26, 0, 9, 18, 1, 0, 0, 1, 0, 1]' : 0.096158}", "{'[0, 6, 0, 3, 4, 6, 1, 0, 26, 0, 9, 18, 1, 0, 0, 1, 0, 1]' : 0.096446}", "{'[0, 6, 0, 3, 4, 6, 1, 0, 26, 0, 9, 18, 1, 0, 0, 1, 0, 1]' : 0.0962589}", "{'[0, 6, 0, 3, 4, 6, 1, 0, 26, 0, 9, 18, 1, 0, 0, 1, 0, 1]' : 0.0961061}", "{'[0, 6, 0, 3, 4, 6, 1, 0, 26, 0, 9, 18, 1, 0, 0, 1, 0, 1]' : 0.096051}", "{'[0, 6, 0, 3, 4, 6, 1, 0, 26, 0, 9, 18, 1, 0, 0, 1, 0, 1]' : 0.0961399}", "{'[0, 6, 0, 3, 4, 6, 1, 0, 26, 0, 9, 18, 1, 0, 0, 1, 0, 1]' : 0.095412}", "{'[0, 6, 0, 3, 4, 6, 1, 0, 26, 0, 9, 18, 1, 0, 0, 1, 0, 1]' : 0.0957611}", "{'[0, 6, 0, 3, 4, 6, 1, 0, 26, 0, 9, 18, 1, 0, 0, 1, 0, 1]' : 0.0974851}", "{'[0, 6, 0, 3, 4, 6, 1, 0, 26, 0, 9, 18, 1, 0, 0, 1, 0, 1]' : 0.0960572}", "{'[0, 6, 0, 3, 4, 6, 1, 0, 26, 0, 9, 18, 1, 0, 0, 1, 0, 1]' : 0.0960519}", "{'[0, 6, 0, 3, 4, 6, 1, 0, 26, 0, 9, 18, 1, 0, 0, 1, 0, 1]' : 0.0960391}", "{'[0, 6, 0, 3, 4, 6, 1, 0, 26, 0, 9, 18, 1, 0, 0, 1, 0, 1]' : 0.096334}"]
returning from 'run': {'[0, 6, 0, 3, 4, 6, 1, 0, 26, 0, 9, 18, 1, 0, 0, 1, 0, 1]': ([0.0963671, 0.0962601, 0.09621, 0.0974729, 0.098181, 0.0982502, 0.096308, 0.0970209, 0.096539, 0.0960221, 0.0961289, 0.0961828, 0.0959561, 0.0962691, 0.097327, 0.0967851, 0.0960689, 0.096158, 0.096446, 0.0962589, 0.0961061, 0.096051, 0.0961399, 0.095412, 0.0957611, 0.0974851, 0.0960572, 0.0960519, 0.0960391, 0.096334], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 0, 3, 4, 6, 1, 0, 26, 0, 9, 18, 1, 0, 0, 1, 0, 1]': ([0.0963671, 0.0962601, 0.09621, 0.0974729, 0.098181, 0.0982502, 0.096308, 0.0970209, 0.096539, 0.0960221, 0.0961289, 0.0961828, 0.0959561, 0.0962691, 0.097327, 0.0967851, 0.0960689, 0.096158, 0.096446, 0.0962589, 0.0961061, 0.096051, 0.0961399, 0.095412, 0.0957611, 0.0974851, 0.0960572, 0.0960519, 0.0960391, 0.096334], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	23
        Max loop nest depth: 	5
        Additions: 		585
        Multiplications: 	252
        Divisions: 		0
        Logical: 		0
        Reads: 			1217
        Writes: 		230
        Comparisons:		23
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest68.exe __orio_perftest68.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest68.exe  
Program Test Output: 
{'[3, 6, 2, 1, 4, 6, 0, 1, 15, 0, 3, 0, 1, 1, 0, 1, 0, 0]' : 0.101406}
{'[3, 6, 2, 1, 4, 6, 0, 1, 15, 0, 3, 0, 1, 1, 0, 1, 0, 0]' : 0.101196}
{'[3, 6, 2, 1, 4, 6, 0, 1, 15, 0, 3, 0, 1, 1, 0, 1, 0, 0]' : 0.101366}
{'[3, 6, 2, 1, 4, 6, 0, 1, 15, 0, 3, 0, 1, 1, 0, 1, 0, 0]' : 0.101244}
{'[3, 6, 2, 1, 4, 6, 0, 1, 15, 0, 3, 0, 1, 1, 0, 1, 0, 0]' : 0.100766}
{'[3, 6, 2, 1, 4, 6, 0, 1, 15, 0, 3, 0, 1, 1, 0, 1, 0, 0]' : 0.101218}
{'[3, 6, 2, 1, 4, 6, 0, 1, 15, 0, 3, 0, 1, 1, 0, 1, 0, 0]' : 0.101254}
{'[3, 6, 2, 1, 4, 6, 0, 1, 15, 0, 3, 0, 1, 1, 0, 1, 0, 0]' : 0.101242}
{'[3, 6, 2, 1, 4, 6, 0, 1, 15, 0, 3, 0, 1, 1, 0, 1, 0, 0]' : 0.101393}
{'[3, 6, 2, 1, 4, 6, 0, 1, 15, 0, 3, 0, 1, 1, 0, 1, 0, 0]' : 0.101395}
{'[3, 6, 2, 1, 4, 6, 0, 1, 15, 0, 3, 0, 1, 1, 0, 1, 0, 0]' : 0.101169}
{'[3, 6, 2, 1, 4, 6, 0, 1, 15, 0, 3, 0, 1, 1, 0, 1, 0, 0]' : 0.10125}
{'[3, 6, 2, 1, 4, 6, 0, 1, 15, 0, 3, 0, 1, 1, 0, 1, 0, 0]' : 0.101324}
{'[3, 6, 2, 1, 4, 6, 0, 1, 15, 0, 3, 0, 1, 1, 0, 1, 0, 0]' : 0.099839}
{'[3, 6, 2, 1, 4, 6, 0, 1, 15, 0, 3, 0, 1, 1, 0, 1, 0, 0]' : 0.101344}
{'[3, 6, 2, 1, 4, 6, 0, 1, 15, 0, 3, 0, 1, 1, 0, 1, 0, 0]' : 0.101163}
{'[3, 6, 2, 1, 4, 6, 0, 1, 15, 0, 3, 0, 1, 1, 0, 1, 0, 0]' : 0.101264}
{'[3, 6, 2, 1, 4, 6, 0, 1, 15, 0, 3, 0, 1, 1, 0, 1, 0, 0]' : 0.101193}
{'[3, 6, 2, 1, 4, 6, 0, 1, 15, 0, 3, 0, 1, 1, 0, 1, 0, 0]' : 0.10109}
{'[3, 6, 2, 1, 4, 6, 0, 1, 15, 0, 3, 0, 1, 1, 0, 1, 0, 0]' : 0.101269}
{'[3, 6, 2, 1, 4, 6, 0, 1, 15, 0, 3, 0, 1, 1, 0, 1, 0, 0]' : 0.10124}
{'[3, 6, 2, 1, 4, 6, 0, 1, 15, 0, 3, 0, 1, 1, 0, 1, 0, 0]' : 0.101226}
{'[3, 6, 2, 1, 4, 6, 0, 1, 15, 0, 3, 0, 1, 1, 0, 1, 0, 0]' : 0.101138}
{'[3, 6, 2, 1, 4, 6, 0, 1, 15, 0, 3, 0, 1, 1, 0, 1, 0, 0]' : 0.101299}
{'[3, 6, 2, 1, 4, 6, 0, 1, 15, 0, 3, 0, 1, 1, 0, 1, 0, 0]' : 0.101509}
{'[3, 6, 2, 1, 4, 6, 0, 1, 15, 0, 3, 0, 1, 1, 0, 1, 0, 0]' : 0.101232}
{'[3, 6, 2, 1, 4, 6, 0, 1, 15, 0, 3, 0, 1, 1, 0, 1, 0, 0]' : 0.101178}
{'[3, 6, 2, 1, 4, 6, 0, 1, 15, 0, 3, 0, 1, 1, 0, 1, 0, 0]' : 0.101183}
{'[3, 6, 2, 1, 4, 6, 0, 1, 15, 0, 3, 0, 1, 1, 0, 1, 0, 0]' : 0.101761}
{'[3, 6, 2, 1, 4, 6, 0, 1, 15, 0, 3, 0, 1, 1, 0, 1, 0, 0]' : 0.102083}

out:
 ["{'[3, 6, 2, 1, 4, 6, 0, 1, 15, 0, 3, 0, 1, 1, 0, 1, 0, 0]' : 0.101406}", "{'[3, 6, 2, 1, 4, 6, 0, 1, 15, 0, 3, 0, 1, 1, 0, 1, 0, 0]' : 0.101196}", "{'[3, 6, 2, 1, 4, 6, 0, 1, 15, 0, 3, 0, 1, 1, 0, 1, 0, 0]' : 0.101366}", "{'[3, 6, 2, 1, 4, 6, 0, 1, 15, 0, 3, 0, 1, 1, 0, 1, 0, 0]' : 0.101244}", "{'[3, 6, 2, 1, 4, 6, 0, 1, 15, 0, 3, 0, 1, 1, 0, 1, 0, 0]' : 0.100766}", "{'[3, 6, 2, 1, 4, 6, 0, 1, 15, 0, 3, 0, 1, 1, 0, 1, 0, 0]' : 0.101218}", "{'[3, 6, 2, 1, 4, 6, 0, 1, 15, 0, 3, 0, 1, 1, 0, 1, 0, 0]' : 0.101254}", "{'[3, 6, 2, 1, 4, 6, 0, 1, 15, 0, 3, 0, 1, 1, 0, 1, 0, 0]' : 0.101242}", "{'[3, 6, 2, 1, 4, 6, 0, 1, 15, 0, 3, 0, 1, 1, 0, 1, 0, 0]' : 0.101393}", "{'[3, 6, 2, 1, 4, 6, 0, 1, 15, 0, 3, 0, 1, 1, 0, 1, 0, 0]' : 0.101395}", "{'[3, 6, 2, 1, 4, 6, 0, 1, 15, 0, 3, 0, 1, 1, 0, 1, 0, 0]' : 0.101169}", "{'[3, 6, 2, 1, 4, 6, 0, 1, 15, 0, 3, 0, 1, 1, 0, 1, 0, 0]' : 0.10125}", "{'[3, 6, 2, 1, 4, 6, 0, 1, 15, 0, 3, 0, 1, 1, 0, 1, 0, 0]' : 0.101324}", "{'[3, 6, 2, 1, 4, 6, 0, 1, 15, 0, 3, 0, 1, 1, 0, 1, 0, 0]' : 0.099839}", "{'[3, 6, 2, 1, 4, 6, 0, 1, 15, 0, 3, 0, 1, 1, 0, 1, 0, 0]' : 0.101344}", "{'[3, 6, 2, 1, 4, 6, 0, 1, 15, 0, 3, 0, 1, 1, 0, 1, 0, 0]' : 0.101163}", "{'[3, 6, 2, 1, 4, 6, 0, 1, 15, 0, 3, 0, 1, 1, 0, 1, 0, 0]' : 0.101264}", "{'[3, 6, 2, 1, 4, 6, 0, 1, 15, 0, 3, 0, 1, 1, 0, 1, 0, 0]' : 0.101193}", "{'[3, 6, 2, 1, 4, 6, 0, 1, 15, 0, 3, 0, 1, 1, 0, 1, 0, 0]' : 0.10109}", "{'[3, 6, 2, 1, 4, 6, 0, 1, 15, 0, 3, 0, 1, 1, 0, 1, 0, 0]' : 0.101269}", "{'[3, 6, 2, 1, 4, 6, 0, 1, 15, 0, 3, 0, 1, 1, 0, 1, 0, 0]' : 0.10124}", "{'[3, 6, 2, 1, 4, 6, 0, 1, 15, 0, 3, 0, 1, 1, 0, 1, 0, 0]' : 0.101226}", "{'[3, 6, 2, 1, 4, 6, 0, 1, 15, 0, 3, 0, 1, 1, 0, 1, 0, 0]' : 0.101138}", "{'[3, 6, 2, 1, 4, 6, 0, 1, 15, 0, 3, 0, 1, 1, 0, 1, 0, 0]' : 0.101299}", "{'[3, 6, 2, 1, 4, 6, 0, 1, 15, 0, 3, 0, 1, 1, 0, 1, 0, 0]' : 0.101509}", "{'[3, 6, 2, 1, 4, 6, 0, 1, 15, 0, 3, 0, 1, 1, 0, 1, 0, 0]' : 0.101232}", "{'[3, 6, 2, 1, 4, 6, 0, 1, 15, 0, 3, 0, 1, 1, 0, 1, 0, 0]' : 0.101178}", "{'[3, 6, 2, 1, 4, 6, 0, 1, 15, 0, 3, 0, 1, 1, 0, 1, 0, 0]' : 0.101183}", "{'[3, 6, 2, 1, 4, 6, 0, 1, 15, 0, 3, 0, 1, 1, 0, 1, 0, 0]' : 0.101761}", "{'[3, 6, 2, 1, 4, 6, 0, 1, 15, 0, 3, 0, 1, 1, 0, 1, 0, 0]' : 0.102083}"]
returning from 'run': {'[3, 6, 2, 1, 4, 6, 0, 1, 15, 0, 3, 0, 1, 1, 0, 1, 0, 0]': ([0.101406, 0.101196, 0.101366, 0.101244, 0.100766, 0.101218, 0.101254, 0.101242, 0.101393, 0.101395, 0.101169, 0.10125, 0.101324, 0.099839, 0.101344, 0.101163, 0.101264, 0.101193, 0.10109, 0.101269, 0.10124, 0.101226, 0.101138, 0.101299, 0.101509, 0.101232, 0.101178, 0.101183, 0.101761, 0.102083], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 6, 2, 1, 4, 6, 0, 1, 15, 0, 3, 0, 1, 1, 0, 1, 0, 0]': ([0.101406, 0.101196, 0.101366, 0.101244, 0.100766, 0.101218, 0.101254, 0.101242, 0.101393, 0.101395, 0.101169, 0.10125, 0.101324, 0.099839, 0.101344, 0.101163, 0.101264, 0.101193, 0.10109, 0.101269, 0.10124, 0.101226, 0.101138, 0.101299, 0.101509, 0.101232, 0.101178, 0.101183, 0.101761, 0.102083], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	5
        Additions: 		1570
        Multiplications: 	720
        Divisions: 		0
        Logical: 		0
        Reads: 			3165
        Writes: 		573
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest69.exe __orio_perftest69.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest69.exe  
Program Test Output: 
{'[0, 6, 1, 1, 4, 2, 0, 0, 8, 0, 7, 29, 1, 0, 0, 1, 0, 1]' : 0.103257}
{'[0, 6, 1, 1, 4, 2, 0, 0, 8, 0, 7, 29, 1, 0, 0, 1, 0, 1]' : 0.103089}
{'[0, 6, 1, 1, 4, 2, 0, 0, 8, 0, 7, 29, 1, 0, 0, 1, 0, 1]' : 0.10297}
{'[0, 6, 1, 1, 4, 2, 0, 0, 8, 0, 7, 29, 1, 0, 0, 1, 0, 1]' : 0.103309}
{'[0, 6, 1, 1, 4, 2, 0, 0, 8, 0, 7, 29, 1, 0, 0, 1, 0, 1]' : 0.103606}
{'[0, 6, 1, 1, 4, 2, 0, 0, 8, 0, 7, 29, 1, 0, 0, 1, 0, 1]' : 0.103216}
{'[0, 6, 1, 1, 4, 2, 0, 0, 8, 0, 7, 29, 1, 0, 0, 1, 0, 1]' : 0.103002}
{'[0, 6, 1, 1, 4, 2, 0, 0, 8, 0, 7, 29, 1, 0, 0, 1, 0, 1]' : 0.103021}
{'[0, 6, 1, 1, 4, 2, 0, 0, 8, 0, 7, 29, 1, 0, 0, 1, 0, 1]' : 0.103084}
{'[0, 6, 1, 1, 4, 2, 0, 0, 8, 0, 7, 29, 1, 0, 0, 1, 0, 1]' : 0.103168}
{'[0, 6, 1, 1, 4, 2, 0, 0, 8, 0, 7, 29, 1, 0, 0, 1, 0, 1]' : 0.103059}
{'[0, 6, 1, 1, 4, 2, 0, 0, 8, 0, 7, 29, 1, 0, 0, 1, 0, 1]' : 0.10304}
{'[0, 6, 1, 1, 4, 2, 0, 0, 8, 0, 7, 29, 1, 0, 0, 1, 0, 1]' : 0.102996}
{'[0, 6, 1, 1, 4, 2, 0, 0, 8, 0, 7, 29, 1, 0, 0, 1, 0, 1]' : 0.103791}
{'[0, 6, 1, 1, 4, 2, 0, 0, 8, 0, 7, 29, 1, 0, 0, 1, 0, 1]' : 0.103414}
{'[0, 6, 1, 1, 4, 2, 0, 0, 8, 0, 7, 29, 1, 0, 0, 1, 0, 1]' : 0.103176}
{'[0, 6, 1, 1, 4, 2, 0, 0, 8, 0, 7, 29, 1, 0, 0, 1, 0, 1]' : 0.103016}
{'[0, 6, 1, 1, 4, 2, 0, 0, 8, 0, 7, 29, 1, 0, 0, 1, 0, 1]' : 0.10302}
{'[0, 6, 1, 1, 4, 2, 0, 0, 8, 0, 7, 29, 1, 0, 0, 1, 0, 1]' : 0.103185}
{'[0, 6, 1, 1, 4, 2, 0, 0, 8, 0, 7, 29, 1, 0, 0, 1, 0, 1]' : 0.103435}
{'[0, 6, 1, 1, 4, 2, 0, 0, 8, 0, 7, 29, 1, 0, 0, 1, 0, 1]' : 0.103498}
{'[0, 6, 1, 1, 4, 2, 0, 0, 8, 0, 7, 29, 1, 0, 0, 1, 0, 1]' : 0.103097}
{'[0, 6, 1, 1, 4, 2, 0, 0, 8, 0, 7, 29, 1, 0, 0, 1, 0, 1]' : 0.103118}
{'[0, 6, 1, 1, 4, 2, 0, 0, 8, 0, 7, 29, 1, 0, 0, 1, 0, 1]' : 0.101766}
{'[0, 6, 1, 1, 4, 2, 0, 0, 8, 0, 7, 29, 1, 0, 0, 1, 0, 1]' : 0.103277}
{'[0, 6, 1, 1, 4, 2, 0, 0, 8, 0, 7, 29, 1, 0, 0, 1, 0, 1]' : 0.103355}
{'[0, 6, 1, 1, 4, 2, 0, 0, 8, 0, 7, 29, 1, 0, 0, 1, 0, 1]' : 0.103088}
{'[0, 6, 1, 1, 4, 2, 0, 0, 8, 0, 7, 29, 1, 0, 0, 1, 0, 1]' : 0.103109}
{'[0, 6, 1, 1, 4, 2, 0, 0, 8, 0, 7, 29, 1, 0, 0, 1, 0, 1]' : 0.103943}
{'[0, 6, 1, 1, 4, 2, 0, 0, 8, 0, 7, 29, 1, 0, 0, 1, 0, 1]' : 0.10311}

out:
 ["{'[0, 6, 1, 1, 4, 2, 0, 0, 8, 0, 7, 29, 1, 0, 0, 1, 0, 1]' : 0.103257}", "{'[0, 6, 1, 1, 4, 2, 0, 0, 8, 0, 7, 29, 1, 0, 0, 1, 0, 1]' : 0.103089}", "{'[0, 6, 1, 1, 4, 2, 0, 0, 8, 0, 7, 29, 1, 0, 0, 1, 0, 1]' : 0.10297}", "{'[0, 6, 1, 1, 4, 2, 0, 0, 8, 0, 7, 29, 1, 0, 0, 1, 0, 1]' : 0.103309}", "{'[0, 6, 1, 1, 4, 2, 0, 0, 8, 0, 7, 29, 1, 0, 0, 1, 0, 1]' : 0.103606}", "{'[0, 6, 1, 1, 4, 2, 0, 0, 8, 0, 7, 29, 1, 0, 0, 1, 0, 1]' : 0.103216}", "{'[0, 6, 1, 1, 4, 2, 0, 0, 8, 0, 7, 29, 1, 0, 0, 1, 0, 1]' : 0.103002}", "{'[0, 6, 1, 1, 4, 2, 0, 0, 8, 0, 7, 29, 1, 0, 0, 1, 0, 1]' : 0.103021}", "{'[0, 6, 1, 1, 4, 2, 0, 0, 8, 0, 7, 29, 1, 0, 0, 1, 0, 1]' : 0.103084}", "{'[0, 6, 1, 1, 4, 2, 0, 0, 8, 0, 7, 29, 1, 0, 0, 1, 0, 1]' : 0.103168}", "{'[0, 6, 1, 1, 4, 2, 0, 0, 8, 0, 7, 29, 1, 0, 0, 1, 0, 1]' : 0.103059}", "{'[0, 6, 1, 1, 4, 2, 0, 0, 8, 0, 7, 29, 1, 0, 0, 1, 0, 1]' : 0.10304}", "{'[0, 6, 1, 1, 4, 2, 0, 0, 8, 0, 7, 29, 1, 0, 0, 1, 0, 1]' : 0.102996}", "{'[0, 6, 1, 1, 4, 2, 0, 0, 8, 0, 7, 29, 1, 0, 0, 1, 0, 1]' : 0.103791}", "{'[0, 6, 1, 1, 4, 2, 0, 0, 8, 0, 7, 29, 1, 0, 0, 1, 0, 1]' : 0.103414}", "{'[0, 6, 1, 1, 4, 2, 0, 0, 8, 0, 7, 29, 1, 0, 0, 1, 0, 1]' : 0.103176}", "{'[0, 6, 1, 1, 4, 2, 0, 0, 8, 0, 7, 29, 1, 0, 0, 1, 0, 1]' : 0.103016}", "{'[0, 6, 1, 1, 4, 2, 0, 0, 8, 0, 7, 29, 1, 0, 0, 1, 0, 1]' : 0.10302}", "{'[0, 6, 1, 1, 4, 2, 0, 0, 8, 0, 7, 29, 1, 0, 0, 1, 0, 1]' : 0.103185}", "{'[0, 6, 1, 1, 4, 2, 0, 0, 8, 0, 7, 29, 1, 0, 0, 1, 0, 1]' : 0.103435}", "{'[0, 6, 1, 1, 4, 2, 0, 0, 8, 0, 7, 29, 1, 0, 0, 1, 0, 1]' : 0.103498}", "{'[0, 6, 1, 1, 4, 2, 0, 0, 8, 0, 7, 29, 1, 0, 0, 1, 0, 1]' : 0.103097}", "{'[0, 6, 1, 1, 4, 2, 0, 0, 8, 0, 7, 29, 1, 0, 0, 1, 0, 1]' : 0.103118}", "{'[0, 6, 1, 1, 4, 2, 0, 0, 8, 0, 7, 29, 1, 0, 0, 1, 0, 1]' : 0.101766}", "{'[0, 6, 1, 1, 4, 2, 0, 0, 8, 0, 7, 29, 1, 0, 0, 1, 0, 1]' : 0.103277}", "{'[0, 6, 1, 1, 4, 2, 0, 0, 8, 0, 7, 29, 1, 0, 0, 1, 0, 1]' : 0.103355}", "{'[0, 6, 1, 1, 4, 2, 0, 0, 8, 0, 7, 29, 1, 0, 0, 1, 0, 1]' : 0.103088}", "{'[0, 6, 1, 1, 4, 2, 0, 0, 8, 0, 7, 29, 1, 0, 0, 1, 0, 1]' : 0.103109}", "{'[0, 6, 1, 1, 4, 2, 0, 0, 8, 0, 7, 29, 1, 0, 0, 1, 0, 1]' : 0.103943}", "{'[0, 6, 1, 1, 4, 2, 0, 0, 8, 0, 7, 29, 1, 0, 0, 1, 0, 1]' : 0.10311}"]
returning from 'run': {'[0, 6, 1, 1, 4, 2, 0, 0, 8, 0, 7, 29, 1, 0, 0, 1, 0, 1]': ([0.103257, 0.103089, 0.10297, 0.103309, 0.103606, 0.103216, 0.103002, 0.103021, 0.103084, 0.103168, 0.103059, 0.10304, 0.102996, 0.103791, 0.103414, 0.103176, 0.103016, 0.10302, 0.103185, 0.103435, 0.103498, 0.103097, 0.103118, 0.101766, 0.103277, 0.103355, 0.103088, 0.103109, 0.103943, 0.10311], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 1, 1, 4, 2, 0, 0, 8, 0, 7, 29, 1, 0, 0, 1, 0, 1]': ([0.103257, 0.103089, 0.10297, 0.103309, 0.103606, 0.103216, 0.103002, 0.103021, 0.103084, 0.103168, 0.103059, 0.10304, 0.102996, 0.103791, 0.103414, 0.103176, 0.103016, 0.10302, 0.103185, 0.103435, 0.103498, 0.103097, 0.103118, 0.101766, 0.103277, 0.103355, 0.103088, 0.103109, 0.103943, 0.10311], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	5
        Additions: 		2193
        Multiplications: 	1026
        Divisions: 		0
        Logical: 		0
        Reads: 			4282
        Writes: 		737
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest70.exe __orio_perftest70.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest70.exe  
Program Test Output: 
{'[2, 6, 1, 0, 4, 6, 0, 0, 29, 0, 29, 24, 1, 0, 0, 1, 0, 0]' : 0.11632}
{'[2, 6, 1, 0, 4, 6, 0, 0, 29, 0, 29, 24, 1, 0, 0, 1, 0, 0]' : 0.116299}
{'[2, 6, 1, 0, 4, 6, 0, 0, 29, 0, 29, 24, 1, 0, 0, 1, 0, 0]' : 0.107308}
{'[2, 6, 1, 0, 4, 6, 0, 0, 29, 0, 29, 24, 1, 0, 0, 1, 0, 0]' : 0.10111}
{'[2, 6, 1, 0, 4, 6, 0, 0, 29, 0, 29, 24, 1, 0, 0, 1, 0, 0]' : 0.101123}
{'[2, 6, 1, 0, 4, 6, 0, 0, 29, 0, 29, 24, 1, 0, 0, 1, 0, 0]' : 0.101357}
{'[2, 6, 1, 0, 4, 6, 0, 0, 29, 0, 29, 24, 1, 0, 0, 1, 0, 0]' : 0.101086}
{'[2, 6, 1, 0, 4, 6, 0, 0, 29, 0, 29, 24, 1, 0, 0, 1, 0, 0]' : 0.100621}
{'[2, 6, 1, 0, 4, 6, 0, 0, 29, 0, 29, 24, 1, 0, 0, 1, 0, 0]' : 0.101179}
{'[2, 6, 1, 0, 4, 6, 0, 0, 29, 0, 29, 24, 1, 0, 0, 1, 0, 0]' : 0.101114}
{'[2, 6, 1, 0, 4, 6, 0, 0, 29, 0, 29, 24, 1, 0, 0, 1, 0, 0]' : 0.101027}
{'[2, 6, 1, 0, 4, 6, 0, 0, 29, 0, 29, 24, 1, 0, 0, 1, 0, 0]' : 0.101131}
{'[2, 6, 1, 0, 4, 6, 0, 0, 29, 0, 29, 24, 1, 0, 0, 1, 0, 0]' : 0.100626}
{'[2, 6, 1, 0, 4, 6, 0, 0, 29, 0, 29, 24, 1, 0, 0, 1, 0, 0]' : 0.101085}
{'[2, 6, 1, 0, 4, 6, 0, 0, 29, 0, 29, 24, 1, 0, 0, 1, 0, 0]' : 0.101044}
{'[2, 6, 1, 0, 4, 6, 0, 0, 29, 0, 29, 24, 1, 0, 0, 1, 0, 0]' : 0.101121}
{'[2, 6, 1, 0, 4, 6, 0, 0, 29, 0, 29, 24, 1, 0, 0, 1, 0, 0]' : 0.100999}
{'[2, 6, 1, 0, 4, 6, 0, 0, 29, 0, 29, 24, 1, 0, 0, 1, 0, 0]' : 0.100831}
{'[2, 6, 1, 0, 4, 6, 0, 0, 29, 0, 29, 24, 1, 0, 0, 1, 0, 0]' : 0.101125}
{'[2, 6, 1, 0, 4, 6, 0, 0, 29, 0, 29, 24, 1, 0, 0, 1, 0, 0]' : 0.101133}
{'[2, 6, 1, 0, 4, 6, 0, 0, 29, 0, 29, 24, 1, 0, 0, 1, 0, 0]' : 0.101378}
{'[2, 6, 1, 0, 4, 6, 0, 0, 29, 0, 29, 24, 1, 0, 0, 1, 0, 0]' : 0.101036}
{'[2, 6, 1, 0, 4, 6, 0, 0, 29, 0, 29, 24, 1, 0, 0, 1, 0, 0]' : 0.100699}
{'[2, 6, 1, 0, 4, 6, 0, 0, 29, 0, 29, 24, 1, 0, 0, 1, 0, 0]' : 0.101091}
{'[2, 6, 1, 0, 4, 6, 0, 0, 29, 0, 29, 24, 1, 0, 0, 1, 0, 0]' : 0.101084}
{'[2, 6, 1, 0, 4, 6, 0, 0, 29, 0, 29, 24, 1, 0, 0, 1, 0, 0]' : 0.101117}
{'[2, 6, 1, 0, 4, 6, 0, 0, 29, 0, 29, 24, 1, 0, 0, 1, 0, 0]' : 0.101282}
{'[2, 6, 1, 0, 4, 6, 0, 0, 29, 0, 29, 24, 1, 0, 0, 1, 0, 0]' : 0.10063}
{'[2, 6, 1, 0, 4, 6, 0, 0, 29, 0, 29, 24, 1, 0, 0, 1, 0, 0]' : 0.100641}
{'[2, 6, 1, 0, 4, 6, 0, 0, 29, 0, 29, 24, 1, 0, 0, 1, 0, 0]' : 0.101194}

out:
 ["{'[2, 6, 1, 0, 4, 6, 0, 0, 29, 0, 29, 24, 1, 0, 0, 1, 0, 0]' : 0.11632}", "{'[2, 6, 1, 0, 4, 6, 0, 0, 29, 0, 29, 24, 1, 0, 0, 1, 0, 0]' : 0.116299}", "{'[2, 6, 1, 0, 4, 6, 0, 0, 29, 0, 29, 24, 1, 0, 0, 1, 0, 0]' : 0.107308}", "{'[2, 6, 1, 0, 4, 6, 0, 0, 29, 0, 29, 24, 1, 0, 0, 1, 0, 0]' : 0.10111}", "{'[2, 6, 1, 0, 4, 6, 0, 0, 29, 0, 29, 24, 1, 0, 0, 1, 0, 0]' : 0.101123}", "{'[2, 6, 1, 0, 4, 6, 0, 0, 29, 0, 29, 24, 1, 0, 0, 1, 0, 0]' : 0.101357}", "{'[2, 6, 1, 0, 4, 6, 0, 0, 29, 0, 29, 24, 1, 0, 0, 1, 0, 0]' : 0.101086}", "{'[2, 6, 1, 0, 4, 6, 0, 0, 29, 0, 29, 24, 1, 0, 0, 1, 0, 0]' : 0.100621}", "{'[2, 6, 1, 0, 4, 6, 0, 0, 29, 0, 29, 24, 1, 0, 0, 1, 0, 0]' : 0.101179}", "{'[2, 6, 1, 0, 4, 6, 0, 0, 29, 0, 29, 24, 1, 0, 0, 1, 0, 0]' : 0.101114}", "{'[2, 6, 1, 0, 4, 6, 0, 0, 29, 0, 29, 24, 1, 0, 0, 1, 0, 0]' : 0.101027}", "{'[2, 6, 1, 0, 4, 6, 0, 0, 29, 0, 29, 24, 1, 0, 0, 1, 0, 0]' : 0.101131}", "{'[2, 6, 1, 0, 4, 6, 0, 0, 29, 0, 29, 24, 1, 0, 0, 1, 0, 0]' : 0.100626}", "{'[2, 6, 1, 0, 4, 6, 0, 0, 29, 0, 29, 24, 1, 0, 0, 1, 0, 0]' : 0.101085}", "{'[2, 6, 1, 0, 4, 6, 0, 0, 29, 0, 29, 24, 1, 0, 0, 1, 0, 0]' : 0.101044}", "{'[2, 6, 1, 0, 4, 6, 0, 0, 29, 0, 29, 24, 1, 0, 0, 1, 0, 0]' : 0.101121}", "{'[2, 6, 1, 0, 4, 6, 0, 0, 29, 0, 29, 24, 1, 0, 0, 1, 0, 0]' : 0.100999}", "{'[2, 6, 1, 0, 4, 6, 0, 0, 29, 0, 29, 24, 1, 0, 0, 1, 0, 0]' : 0.100831}", "{'[2, 6, 1, 0, 4, 6, 0, 0, 29, 0, 29, 24, 1, 0, 0, 1, 0, 0]' : 0.101125}", "{'[2, 6, 1, 0, 4, 6, 0, 0, 29, 0, 29, 24, 1, 0, 0, 1, 0, 0]' : 0.101133}", "{'[2, 6, 1, 0, 4, 6, 0, 0, 29, 0, 29, 24, 1, 0, 0, 1, 0, 0]' : 0.101378}", "{'[2, 6, 1, 0, 4, 6, 0, 0, 29, 0, 29, 24, 1, 0, 0, 1, 0, 0]' : 0.101036}", "{'[2, 6, 1, 0, 4, 6, 0, 0, 29, 0, 29, 24, 1, 0, 0, 1, 0, 0]' : 0.100699}", "{'[2, 6, 1, 0, 4, 6, 0, 0, 29, 0, 29, 24, 1, 0, 0, 1, 0, 0]' : 0.101091}", "{'[2, 6, 1, 0, 4, 6, 0, 0, 29, 0, 29, 24, 1, 0, 0, 1, 0, 0]' : 0.101084}", "{'[2, 6, 1, 0, 4, 6, 0, 0, 29, 0, 29, 24, 1, 0, 0, 1, 0, 0]' : 0.101117}", "{'[2, 6, 1, 0, 4, 6, 0, 0, 29, 0, 29, 24, 1, 0, 0, 1, 0, 0]' : 0.101282}", "{'[2, 6, 1, 0, 4, 6, 0, 0, 29, 0, 29, 24, 1, 0, 0, 1, 0, 0]' : 0.10063}", "{'[2, 6, 1, 0, 4, 6, 0, 0, 29, 0, 29, 24, 1, 0, 0, 1, 0, 0]' : 0.100641}", "{'[2, 6, 1, 0, 4, 6, 0, 0, 29, 0, 29, 24, 1, 0, 0, 1, 0, 0]' : 0.101194}"]
returning from 'run': {'[2, 6, 1, 0, 4, 6, 0, 0, 29, 0, 29, 24, 1, 0, 0, 1, 0, 0]': ([0.11632, 0.116299, 0.107308, 0.10111, 0.101123, 0.101357, 0.101086, 0.100621, 0.101179, 0.101114, 0.101027, 0.101131, 0.100626, 0.101085, 0.101044, 0.101121, 0.100999, 0.100831, 0.101125, 0.101133, 0.101378, 0.101036, 0.100699, 0.101091, 0.101084, 0.101117, 0.101282, 0.10063, 0.100641, 0.101194], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 6, 1, 0, 4, 6, 0, 0, 29, 0, 29, 24, 1, 0, 0, 1, 0, 0]': ([0.11632, 0.116299, 0.107308, 0.10111, 0.101123, 0.101357, 0.101086, 0.100621, 0.101179, 0.101114, 0.101027, 0.101131, 0.100626, 0.101085, 0.101044, 0.101121, 0.100999, 0.100831, 0.101125, 0.101133, 0.101378, 0.101036, 0.100699, 0.101091, 0.101084, 0.101117, 0.101282, 0.10063, 0.100641, 0.101194], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	5
        Additions: 		596
        Multiplications: 	252
        Divisions: 		0
        Logical: 		0
        Reads: 			1215
        Writes: 		219
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest71.exe __orio_perftest71.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest71.exe  
Program Test Output: 
{'[1, 6, 6, 2, 4, 4, 0, 1, 0, 0, 8, 2, 1, 0, 0, 1, 0, 0]' : 0.125462}
{'[1, 6, 6, 2, 4, 4, 0, 1, 0, 0, 8, 2, 1, 0, 0, 1, 0, 0]' : 0.125285}
{'[1, 6, 6, 2, 4, 4, 0, 1, 0, 0, 8, 2, 1, 0, 0, 1, 0, 0]' : 0.125169}
{'[1, 6, 6, 2, 4, 4, 0, 1, 0, 0, 8, 2, 1, 0, 0, 1, 0, 0]' : 0.117315}
{'[1, 6, 6, 2, 4, 4, 0, 1, 0, 0, 8, 2, 1, 0, 0, 1, 0, 0]' : 0.109204}
{'[1, 6, 6, 2, 4, 4, 0, 1, 0, 0, 8, 2, 1, 0, 0, 1, 0, 0]' : 0.111322}
{'[1, 6, 6, 2, 4, 4, 0, 1, 0, 0, 8, 2, 1, 0, 0, 1, 0, 0]' : 0.112401}
{'[1, 6, 6, 2, 4, 4, 0, 1, 0, 0, 8, 2, 1, 0, 0, 1, 0, 0]' : 0.112372}
{'[1, 6, 6, 2, 4, 4, 0, 1, 0, 0, 8, 2, 1, 0, 0, 1, 0, 0]' : 0.112439}
{'[1, 6, 6, 2, 4, 4, 0, 1, 0, 0, 8, 2, 1, 0, 0, 1, 0, 0]' : 0.112694}
{'[1, 6, 6, 2, 4, 4, 0, 1, 0, 0, 8, 2, 1, 0, 0, 1, 0, 0]' : 0.112308}
{'[1, 6, 6, 2, 4, 4, 0, 1, 0, 0, 8, 2, 1, 0, 0, 1, 0, 0]' : 0.112493}
{'[1, 6, 6, 2, 4, 4, 0, 1, 0, 0, 8, 2, 1, 0, 0, 1, 0, 0]' : 0.112007}
{'[1, 6, 6, 2, 4, 4, 0, 1, 0, 0, 8, 2, 1, 0, 0, 1, 0, 0]' : 0.111976}
{'[1, 6, 6, 2, 4, 4, 0, 1, 0, 0, 8, 2, 1, 0, 0, 1, 0, 0]' : 0.11208}
{'[1, 6, 6, 2, 4, 4, 0, 1, 0, 0, 8, 2, 1, 0, 0, 1, 0, 0]' : 0.112231}
{'[1, 6, 6, 2, 4, 4, 0, 1, 0, 0, 8, 2, 1, 0, 0, 1, 0, 0]' : 0.112016}
{'[1, 6, 6, 2, 4, 4, 0, 1, 0, 0, 8, 2, 1, 0, 0, 1, 0, 0]' : 0.112029}
{'[1, 6, 6, 2, 4, 4, 0, 1, 0, 0, 8, 2, 1, 0, 0, 1, 0, 0]' : 0.111957}
{'[1, 6, 6, 2, 4, 4, 0, 1, 0, 0, 8, 2, 1, 0, 0, 1, 0, 0]' : 0.112049}
{'[1, 6, 6, 2, 4, 4, 0, 1, 0, 0, 8, 2, 1, 0, 0, 1, 0, 0]' : 0.112043}
{'[1, 6, 6, 2, 4, 4, 0, 1, 0, 0, 8, 2, 1, 0, 0, 1, 0, 0]' : 0.112308}
{'[1, 6, 6, 2, 4, 4, 0, 1, 0, 0, 8, 2, 1, 0, 0, 1, 0, 0]' : 0.112034}
{'[1, 6, 6, 2, 4, 4, 0, 1, 0, 0, 8, 2, 1, 0, 0, 1, 0, 0]' : 0.112004}
{'[1, 6, 6, 2, 4, 4, 0, 1, 0, 0, 8, 2, 1, 0, 0, 1, 0, 0]' : 0.112097}
{'[1, 6, 6, 2, 4, 4, 0, 1, 0, 0, 8, 2, 1, 0, 0, 1, 0, 0]' : 0.111978}
{'[1, 6, 6, 2, 4, 4, 0, 1, 0, 0, 8, 2, 1, 0, 0, 1, 0, 0]' : 0.11202}
{'[1, 6, 6, 2, 4, 4, 0, 1, 0, 0, 8, 2, 1, 0, 0, 1, 0, 0]' : 0.112001}
{'[1, 6, 6, 2, 4, 4, 0, 1, 0, 0, 8, 2, 1, 0, 0, 1, 0, 0]' : 0.112002}
{'[1, 6, 6, 2, 4, 4, 0, 1, 0, 0, 8, 2, 1, 0, 0, 1, 0, 0]' : 0.112044}

out:
 ["{'[1, 6, 6, 2, 4, 4, 0, 1, 0, 0, 8, 2, 1, 0, 0, 1, 0, 0]' : 0.125462}", "{'[1, 6, 6, 2, 4, 4, 0, 1, 0, 0, 8, 2, 1, 0, 0, 1, 0, 0]' : 0.125285}", "{'[1, 6, 6, 2, 4, 4, 0, 1, 0, 0, 8, 2, 1, 0, 0, 1, 0, 0]' : 0.125169}", "{'[1, 6, 6, 2, 4, 4, 0, 1, 0, 0, 8, 2, 1, 0, 0, 1, 0, 0]' : 0.117315}", "{'[1, 6, 6, 2, 4, 4, 0, 1, 0, 0, 8, 2, 1, 0, 0, 1, 0, 0]' : 0.109204}", "{'[1, 6, 6, 2, 4, 4, 0, 1, 0, 0, 8, 2, 1, 0, 0, 1, 0, 0]' : 0.111322}", "{'[1, 6, 6, 2, 4, 4, 0, 1, 0, 0, 8, 2, 1, 0, 0, 1, 0, 0]' : 0.112401}", "{'[1, 6, 6, 2, 4, 4, 0, 1, 0, 0, 8, 2, 1, 0, 0, 1, 0, 0]' : 0.112372}", "{'[1, 6, 6, 2, 4, 4, 0, 1, 0, 0, 8, 2, 1, 0, 0, 1, 0, 0]' : 0.112439}", "{'[1, 6, 6, 2, 4, 4, 0, 1, 0, 0, 8, 2, 1, 0, 0, 1, 0, 0]' : 0.112694}", "{'[1, 6, 6, 2, 4, 4, 0, 1, 0, 0, 8, 2, 1, 0, 0, 1, 0, 0]' : 0.112308}", "{'[1, 6, 6, 2, 4, 4, 0, 1, 0, 0, 8, 2, 1, 0, 0, 1, 0, 0]' : 0.112493}", "{'[1, 6, 6, 2, 4, 4, 0, 1, 0, 0, 8, 2, 1, 0, 0, 1, 0, 0]' : 0.112007}", "{'[1, 6, 6, 2, 4, 4, 0, 1, 0, 0, 8, 2, 1, 0, 0, 1, 0, 0]' : 0.111976}", "{'[1, 6, 6, 2, 4, 4, 0, 1, 0, 0, 8, 2, 1, 0, 0, 1, 0, 0]' : 0.11208}", "{'[1, 6, 6, 2, 4, 4, 0, 1, 0, 0, 8, 2, 1, 0, 0, 1, 0, 0]' : 0.112231}", "{'[1, 6, 6, 2, 4, 4, 0, 1, 0, 0, 8, 2, 1, 0, 0, 1, 0, 0]' : 0.112016}", "{'[1, 6, 6, 2, 4, 4, 0, 1, 0, 0, 8, 2, 1, 0, 0, 1, 0, 0]' : 0.112029}", "{'[1, 6, 6, 2, 4, 4, 0, 1, 0, 0, 8, 2, 1, 0, 0, 1, 0, 0]' : 0.111957}", "{'[1, 6, 6, 2, 4, 4, 0, 1, 0, 0, 8, 2, 1, 0, 0, 1, 0, 0]' : 0.112049}", "{'[1, 6, 6, 2, 4, 4, 0, 1, 0, 0, 8, 2, 1, 0, 0, 1, 0, 0]' : 0.112043}", "{'[1, 6, 6, 2, 4, 4, 0, 1, 0, 0, 8, 2, 1, 0, 0, 1, 0, 0]' : 0.112308}", "{'[1, 6, 6, 2, 4, 4, 0, 1, 0, 0, 8, 2, 1, 0, 0, 1, 0, 0]' : 0.112034}", "{'[1, 6, 6, 2, 4, 4, 0, 1, 0, 0, 8, 2, 1, 0, 0, 1, 0, 0]' : 0.112004}", "{'[1, 6, 6, 2, 4, 4, 0, 1, 0, 0, 8, 2, 1, 0, 0, 1, 0, 0]' : 0.112097}", "{'[1, 6, 6, 2, 4, 4, 0, 1, 0, 0, 8, 2, 1, 0, 0, 1, 0, 0]' : 0.111978}", "{'[1, 6, 6, 2, 4, 4, 0, 1, 0, 0, 8, 2, 1, 0, 0, 1, 0, 0]' : 0.11202}", "{'[1, 6, 6, 2, 4, 4, 0, 1, 0, 0, 8, 2, 1, 0, 0, 1, 0, 0]' : 0.112001}", "{'[1, 6, 6, 2, 4, 4, 0, 1, 0, 0, 8, 2, 1, 0, 0, 1, 0, 0]' : 0.112002}", "{'[1, 6, 6, 2, 4, 4, 0, 1, 0, 0, 8, 2, 1, 0, 0, 1, 0, 0]' : 0.112044}"]
returning from 'run': {'[1, 6, 6, 2, 4, 4, 0, 1, 0, 0, 8, 2, 1, 0, 0, 1, 0, 0]': ([0.125462, 0.125285, 0.125169, 0.117315, 0.109204, 0.111322, 0.112401, 0.112372, 0.112439, 0.112694, 0.112308, 0.112493, 0.112007, 0.111976, 0.11208, 0.112231, 0.112016, 0.112029, 0.111957, 0.112049, 0.112043, 0.112308, 0.112034, 0.112004, 0.112097, 0.111978, 0.11202, 0.112001, 0.112002, 0.112044], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 6, 6, 2, 4, 4, 0, 1, 0, 0, 8, 2, 1, 0, 0, 1, 0, 0]': ([0.125462, 0.125285, 0.125169, 0.117315, 0.109204, 0.111322, 0.112401, 0.112372, 0.112439, 0.112694, 0.112308, 0.112493, 0.112007, 0.111976, 0.11208, 0.112231, 0.112016, 0.112029, 0.111957, 0.112049, 0.112043, 0.112308, 0.112034, 0.112004, 0.112097, 0.111978, 0.11202, 0.112001, 0.112002, 0.112044], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	5
        Additions: 		1540
        Multiplications: 	702
        Divisions: 		0
        Logical: 		0
        Reads: 			3082
        Writes: 		548
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest72.exe __orio_perftest72.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest72.exe  
Program Test Output: 
{'[3, 6, 1, 1, 4, 2, 1, 0, 3, 0, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.100499}
{'[3, 6, 1, 1, 4, 2, 1, 0, 3, 0, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.103734}
{'[3, 6, 1, 1, 4, 2, 1, 0, 3, 0, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.0997722}
{'[3, 6, 1, 1, 4, 2, 1, 0, 3, 0, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.098007}
{'[3, 6, 1, 1, 4, 2, 1, 0, 3, 0, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.0979161}
{'[3, 6, 1, 1, 4, 2, 1, 0, 3, 0, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.099231}
{'[3, 6, 1, 1, 4, 2, 1, 0, 3, 0, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.0998499}
{'[3, 6, 1, 1, 4, 2, 1, 0, 3, 0, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.0992281}
{'[3, 6, 1, 1, 4, 2, 1, 0, 3, 0, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.097513}
{'[3, 6, 1, 1, 4, 2, 1, 0, 3, 0, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.097394}
{'[3, 6, 1, 1, 4, 2, 1, 0, 3, 0, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.099797}
{'[3, 6, 1, 1, 4, 2, 1, 0, 3, 0, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.102687}
{'[3, 6, 1, 1, 4, 2, 1, 0, 3, 0, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.102394}
{'[3, 6, 1, 1, 4, 2, 1, 0, 3, 0, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.101738}
{'[3, 6, 1, 1, 4, 2, 1, 0, 3, 0, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.0996521}
{'[3, 6, 1, 1, 4, 2, 1, 0, 3, 0, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.1012}
{'[3, 6, 1, 1, 4, 2, 1, 0, 3, 0, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.102457}
{'[3, 6, 1, 1, 4, 2, 1, 0, 3, 0, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.100037}
{'[3, 6, 1, 1, 4, 2, 1, 0, 3, 0, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.0981202}
{'[3, 6, 1, 1, 4, 2, 1, 0, 3, 0, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.098242}
{'[3, 6, 1, 1, 4, 2, 1, 0, 3, 0, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.099484}
{'[3, 6, 1, 1, 4, 2, 1, 0, 3, 0, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.100007}
{'[3, 6, 1, 1, 4, 2, 1, 0, 3, 0, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.0999911}
{'[3, 6, 1, 1, 4, 2, 1, 0, 3, 0, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.0999849}
{'[3, 6, 1, 1, 4, 2, 1, 0, 3, 0, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.0972621}
{'[3, 6, 1, 1, 4, 2, 1, 0, 3, 0, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.099051}
{'[3, 6, 1, 1, 4, 2, 1, 0, 3, 0, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.100078}
{'[3, 6, 1, 1, 4, 2, 1, 0, 3, 0, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.099925}
{'[3, 6, 1, 1, 4, 2, 1, 0, 3, 0, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.09987}
{'[3, 6, 1, 1, 4, 2, 1, 0, 3, 0, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.0978761}

out:
 ["{'[3, 6, 1, 1, 4, 2, 1, 0, 3, 0, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.100499}", "{'[3, 6, 1, 1, 4, 2, 1, 0, 3, 0, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.103734}", "{'[3, 6, 1, 1, 4, 2, 1, 0, 3, 0, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.0997722}", "{'[3, 6, 1, 1, 4, 2, 1, 0, 3, 0, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.098007}", "{'[3, 6, 1, 1, 4, 2, 1, 0, 3, 0, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.0979161}", "{'[3, 6, 1, 1, 4, 2, 1, 0, 3, 0, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.099231}", "{'[3, 6, 1, 1, 4, 2, 1, 0, 3, 0, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.0998499}", "{'[3, 6, 1, 1, 4, 2, 1, 0, 3, 0, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.0992281}", "{'[3, 6, 1, 1, 4, 2, 1, 0, 3, 0, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.097513}", "{'[3, 6, 1, 1, 4, 2, 1, 0, 3, 0, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.097394}", "{'[3, 6, 1, 1, 4, 2, 1, 0, 3, 0, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.099797}", "{'[3, 6, 1, 1, 4, 2, 1, 0, 3, 0, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.102687}", "{'[3, 6, 1, 1, 4, 2, 1, 0, 3, 0, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.102394}", "{'[3, 6, 1, 1, 4, 2, 1, 0, 3, 0, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.101738}", "{'[3, 6, 1, 1, 4, 2, 1, 0, 3, 0, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.0996521}", "{'[3, 6, 1, 1, 4, 2, 1, 0, 3, 0, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.1012}", "{'[3, 6, 1, 1, 4, 2, 1, 0, 3, 0, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.102457}", "{'[3, 6, 1, 1, 4, 2, 1, 0, 3, 0, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.100037}", "{'[3, 6, 1, 1, 4, 2, 1, 0, 3, 0, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.0981202}", "{'[3, 6, 1, 1, 4, 2, 1, 0, 3, 0, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.098242}", "{'[3, 6, 1, 1, 4, 2, 1, 0, 3, 0, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.099484}", "{'[3, 6, 1, 1, 4, 2, 1, 0, 3, 0, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.100007}", "{'[3, 6, 1, 1, 4, 2, 1, 0, 3, 0, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.0999911}", "{'[3, 6, 1, 1, 4, 2, 1, 0, 3, 0, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.0999849}", "{'[3, 6, 1, 1, 4, 2, 1, 0, 3, 0, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.0972621}", "{'[3, 6, 1, 1, 4, 2, 1, 0, 3, 0, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.099051}", "{'[3, 6, 1, 1, 4, 2, 1, 0, 3, 0, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.100078}", "{'[3, 6, 1, 1, 4, 2, 1, 0, 3, 0, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.099925}", "{'[3, 6, 1, 1, 4, 2, 1, 0, 3, 0, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.09987}", "{'[3, 6, 1, 1, 4, 2, 1, 0, 3, 0, 0, 29, 1, 1, 0, 1, 0, 0]' : 0.0978761}"]
returning from 'run': {'[3, 6, 1, 1, 4, 2, 1, 0, 3, 0, 0, 29, 1, 1, 0, 1, 0, 0]': ([0.100499, 0.103734, 0.0997722, 0.098007, 0.0979161, 0.099231, 0.0998499, 0.0992281, 0.097513, 0.097394, 0.099797, 0.102687, 0.102394, 0.101738, 0.0996521, 0.1012, 0.102457, 0.100037, 0.0981202, 0.098242, 0.099484, 0.100007, 0.0999911, 0.0999849, 0.0972621, 0.099051, 0.100078, 0.099925, 0.09987, 0.0978761], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 6, 1, 1, 4, 2, 1, 0, 3, 0, 0, 29, 1, 1, 0, 1, 0, 0]': ([0.100499, 0.103734, 0.0997722, 0.098007, 0.0979161, 0.099231, 0.0998499, 0.0992281, 0.097513, 0.097394, 0.099797, 0.102687, 0.102394, 0.101738, 0.0996521, 0.1012, 0.102457, 0.100037, 0.0981202, 0.098242, 0.099484, 0.100007, 0.0999911, 0.0999849, 0.0972621, 0.099051, 0.100078, 0.099925, 0.09987, 0.0978761], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	6
        Additions: 		619
        Multiplications: 	252
        Divisions: 		0
        Logical: 		0
        Reads: 			1266
        Writes: 		251
        Comparisons:		20
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest73.exe __orio_perftest73.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest73.exe  
Program Test Output: 
{'[6, 6, 2, 5, 4, 1, 1, 0, 29, 0, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.126549}
{'[6, 6, 2, 5, 4, 1, 1, 0, 29, 0, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.126484}
{'[6, 6, 2, 5, 4, 1, 1, 0, 29, 0, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.126516}
{'[6, 6, 2, 5, 4, 1, 1, 0, 29, 0, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.116931}
{'[6, 6, 2, 5, 4, 1, 1, 0, 29, 0, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.110013}
{'[6, 6, 2, 5, 4, 1, 1, 0, 29, 0, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.106928}
{'[6, 6, 2, 5, 4, 1, 1, 0, 29, 0, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.108645}
{'[6, 6, 2, 5, 4, 1, 1, 0, 29, 0, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.110534}
{'[6, 6, 2, 5, 4, 1, 1, 0, 29, 0, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.110952}
{'[6, 6, 2, 5, 4, 1, 1, 0, 29, 0, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.107844}
{'[6, 6, 2, 5, 4, 1, 1, 0, 29, 0, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.107373}
{'[6, 6, 2, 5, 4, 1, 1, 0, 29, 0, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.109514}
{'[6, 6, 2, 5, 4, 1, 1, 0, 29, 0, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.110277}
{'[6, 6, 2, 5, 4, 1, 1, 0, 29, 0, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.107445}
{'[6, 6, 2, 5, 4, 1, 1, 0, 29, 0, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.107069}
{'[6, 6, 2, 5, 4, 1, 1, 0, 29, 0, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.107973}
{'[6, 6, 2, 5, 4, 1, 1, 0, 29, 0, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.113164}
{'[6, 6, 2, 5, 4, 1, 1, 0, 29, 0, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.113141}
{'[6, 6, 2, 5, 4, 1, 1, 0, 29, 0, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.112839}
{'[6, 6, 2, 5, 4, 1, 1, 0, 29, 0, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.110281}
{'[6, 6, 2, 5, 4, 1, 1, 0, 29, 0, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.109735}
{'[6, 6, 2, 5, 4, 1, 1, 0, 29, 0, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.11061}
{'[6, 6, 2, 5, 4, 1, 1, 0, 29, 0, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.109786}
{'[6, 6, 2, 5, 4, 1, 1, 0, 29, 0, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.107496}
{'[6, 6, 2, 5, 4, 1, 1, 0, 29, 0, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.107941}
{'[6, 6, 2, 5, 4, 1, 1, 0, 29, 0, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.110183}
{'[6, 6, 2, 5, 4, 1, 1, 0, 29, 0, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.110173}
{'[6, 6, 2, 5, 4, 1, 1, 0, 29, 0, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.110271}
{'[6, 6, 2, 5, 4, 1, 1, 0, 29, 0, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.10814}
{'[6, 6, 2, 5, 4, 1, 1, 0, 29, 0, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.109541}

out:
 ["{'[6, 6, 2, 5, 4, 1, 1, 0, 29, 0, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.126549}", "{'[6, 6, 2, 5, 4, 1, 1, 0, 29, 0, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.126484}", "{'[6, 6, 2, 5, 4, 1, 1, 0, 29, 0, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.126516}", "{'[6, 6, 2, 5, 4, 1, 1, 0, 29, 0, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.116931}", "{'[6, 6, 2, 5, 4, 1, 1, 0, 29, 0, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.110013}", "{'[6, 6, 2, 5, 4, 1, 1, 0, 29, 0, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.106928}", "{'[6, 6, 2, 5, 4, 1, 1, 0, 29, 0, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.108645}", "{'[6, 6, 2, 5, 4, 1, 1, 0, 29, 0, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.110534}", "{'[6, 6, 2, 5, 4, 1, 1, 0, 29, 0, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.110952}", "{'[6, 6, 2, 5, 4, 1, 1, 0, 29, 0, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.107844}", "{'[6, 6, 2, 5, 4, 1, 1, 0, 29, 0, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.107373}", "{'[6, 6, 2, 5, 4, 1, 1, 0, 29, 0, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.109514}", "{'[6, 6, 2, 5, 4, 1, 1, 0, 29, 0, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.110277}", "{'[6, 6, 2, 5, 4, 1, 1, 0, 29, 0, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.107445}", "{'[6, 6, 2, 5, 4, 1, 1, 0, 29, 0, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.107069}", "{'[6, 6, 2, 5, 4, 1, 1, 0, 29, 0, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.107973}", "{'[6, 6, 2, 5, 4, 1, 1, 0, 29, 0, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.113164}", "{'[6, 6, 2, 5, 4, 1, 1, 0, 29, 0, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.113141}", "{'[6, 6, 2, 5, 4, 1, 1, 0, 29, 0, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.112839}", "{'[6, 6, 2, 5, 4, 1, 1, 0, 29, 0, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.110281}", "{'[6, 6, 2, 5, 4, 1, 1, 0, 29, 0, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.109735}", "{'[6, 6, 2, 5, 4, 1, 1, 0, 29, 0, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.11061}", "{'[6, 6, 2, 5, 4, 1, 1, 0, 29, 0, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.109786}", "{'[6, 6, 2, 5, 4, 1, 1, 0, 29, 0, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.107496}", "{'[6, 6, 2, 5, 4, 1, 1, 0, 29, 0, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.107941}", "{'[6, 6, 2, 5, 4, 1, 1, 0, 29, 0, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.110183}", "{'[6, 6, 2, 5, 4, 1, 1, 0, 29, 0, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.110173}", "{'[6, 6, 2, 5, 4, 1, 1, 0, 29, 0, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.110271}", "{'[6, 6, 2, 5, 4, 1, 1, 0, 29, 0, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.10814}", "{'[6, 6, 2, 5, 4, 1, 1, 0, 29, 0, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.109541}"]
returning from 'run': {'[6, 6, 2, 5, 4, 1, 1, 0, 29, 0, 0, 4, 1, 1, 0, 1, 0, 0]': ([0.126549, 0.126484, 0.126516, 0.116931, 0.110013, 0.106928, 0.108645, 0.110534, 0.110952, 0.107844, 0.107373, 0.109514, 0.110277, 0.107445, 0.107069, 0.107973, 0.113164, 0.113141, 0.112839, 0.110281, 0.109735, 0.11061, 0.109786, 0.107496, 0.107941, 0.110183, 0.110173, 0.110271, 0.10814, 0.109541], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 2, 5, 4, 1, 1, 0, 29, 0, 0, 4, 1, 1, 0, 1, 0, 0]': ([0.126549, 0.126484, 0.126516, 0.116931, 0.110013, 0.106928, 0.108645, 0.110534, 0.110952, 0.107844, 0.107373, 0.109514, 0.110277, 0.107445, 0.107069, 0.107973, 0.113164, 0.113141, 0.112839, 0.110281, 0.109735, 0.11061, 0.109786, 0.107496, 0.107941, 0.110183, 0.110173, 0.110271, 0.10814, 0.109541], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	5
        Additions: 		665
        Multiplications: 	270
        Divisions: 		0
        Logical: 		0
        Reads: 			1359
        Writes: 		249
        Comparisons:		24
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest74.exe __orio_perftest74.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest74.exe  
Program Test Output: 
{'[2, 6, 2, 0, 4, 5, 1, 1, 0, 0, 9, 2, 1, 0, 0, 1, 0, 1]' : 0.117196}
{'[2, 6, 2, 0, 4, 5, 1, 1, 0, 0, 9, 2, 1, 0, 0, 1, 0, 1]' : 0.117343}
{'[2, 6, 2, 0, 4, 5, 1, 1, 0, 0, 9, 2, 1, 0, 0, 1, 0, 1]' : 0.11639}
{'[2, 6, 2, 0, 4, 5, 1, 1, 0, 0, 9, 2, 1, 0, 0, 1, 0, 1]' : 0.116361}
{'[2, 6, 2, 0, 4, 5, 1, 1, 0, 0, 9, 2, 1, 0, 0, 1, 0, 1]' : 0.11266}
{'[2, 6, 2, 0, 4, 5, 1, 1, 0, 0, 9, 2, 1, 0, 0, 1, 0, 1]' : 0.101267}
{'[2, 6, 2, 0, 4, 5, 1, 1, 0, 0, 9, 2, 1, 0, 0, 1, 0, 1]' : 0.102685}
{'[2, 6, 2, 0, 4, 5, 1, 1, 0, 0, 9, 2, 1, 0, 0, 1, 0, 1]' : 0.105252}
{'[2, 6, 2, 0, 4, 5, 1, 1, 0, 0, 9, 2, 1, 0, 0, 1, 0, 1]' : 0.104268}
{'[2, 6, 2, 0, 4, 5, 1, 1, 0, 0, 9, 2, 1, 0, 0, 1, 0, 1]' : 0.103652}
{'[2, 6, 2, 0, 4, 5, 1, 1, 0, 0, 9, 2, 1, 0, 0, 1, 0, 1]' : 0.103557}
{'[2, 6, 2, 0, 4, 5, 1, 1, 0, 0, 9, 2, 1, 0, 0, 1, 0, 1]' : 0.105644}
{'[2, 6, 2, 0, 4, 5, 1, 1, 0, 0, 9, 2, 1, 0, 0, 1, 0, 1]' : 0.10516}
{'[2, 6, 2, 0, 4, 5, 1, 1, 0, 0, 9, 2, 1, 0, 0, 1, 0, 1]' : 0.103996}
{'[2, 6, 2, 0, 4, 5, 1, 1, 0, 0, 9, 2, 1, 0, 0, 1, 0, 1]' : 0.101706}
{'[2, 6, 2, 0, 4, 5, 1, 1, 0, 0, 9, 2, 1, 0, 0, 1, 0, 1]' : 0.101188}
{'[2, 6, 2, 0, 4, 5, 1, 1, 0, 0, 9, 2, 1, 0, 0, 1, 0, 1]' : 0.105658}
{'[2, 6, 2, 0, 4, 5, 1, 1, 0, 0, 9, 2, 1, 0, 0, 1, 0, 1]' : 0.10265}
{'[2, 6, 2, 0, 4, 5, 1, 1, 0, 0, 9, 2, 1, 0, 0, 1, 0, 1]' : 0.101051}
{'[2, 6, 2, 0, 4, 5, 1, 1, 0, 0, 9, 2, 1, 0, 0, 1, 0, 1]' : 0.101358}
{'[2, 6, 2, 0, 4, 5, 1, 1, 0, 0, 9, 2, 1, 0, 0, 1, 0, 1]' : 0.101987}
{'[2, 6, 2, 0, 4, 5, 1, 1, 0, 0, 9, 2, 1, 0, 0, 1, 0, 1]' : 0.103593}
{'[2, 6, 2, 0, 4, 5, 1, 1, 0, 0, 9, 2, 1, 0, 0, 1, 0, 1]' : 0.103506}
{'[2, 6, 2, 0, 4, 5, 1, 1, 0, 0, 9, 2, 1, 0, 0, 1, 0, 1]' : 0.101494}
{'[2, 6, 2, 0, 4, 5, 1, 1, 0, 0, 9, 2, 1, 0, 0, 1, 0, 1]' : 0.10135}
{'[2, 6, 2, 0, 4, 5, 1, 1, 0, 0, 9, 2, 1, 0, 0, 1, 0, 1]' : 0.102444}
{'[2, 6, 2, 0, 4, 5, 1, 1, 0, 0, 9, 2, 1, 0, 0, 1, 0, 1]' : 0.105685}
{'[2, 6, 2, 0, 4, 5, 1, 1, 0, 0, 9, 2, 1, 0, 0, 1, 0, 1]' : 0.103533}
{'[2, 6, 2, 0, 4, 5, 1, 1, 0, 0, 9, 2, 1, 0, 0, 1, 0, 1]' : 0.104565}
{'[2, 6, 2, 0, 4, 5, 1, 1, 0, 0, 9, 2, 1, 0, 0, 1, 0, 1]' : 0.102551}

out:
 ["{'[2, 6, 2, 0, 4, 5, 1, 1, 0, 0, 9, 2, 1, 0, 0, 1, 0, 1]' : 0.117196}", "{'[2, 6, 2, 0, 4, 5, 1, 1, 0, 0, 9, 2, 1, 0, 0, 1, 0, 1]' : 0.117343}", "{'[2, 6, 2, 0, 4, 5, 1, 1, 0, 0, 9, 2, 1, 0, 0, 1, 0, 1]' : 0.11639}", "{'[2, 6, 2, 0, 4, 5, 1, 1, 0, 0, 9, 2, 1, 0, 0, 1, 0, 1]' : 0.116361}", "{'[2, 6, 2, 0, 4, 5, 1, 1, 0, 0, 9, 2, 1, 0, 0, 1, 0, 1]' : 0.11266}", "{'[2, 6, 2, 0, 4, 5, 1, 1, 0, 0, 9, 2, 1, 0, 0, 1, 0, 1]' : 0.101267}", "{'[2, 6, 2, 0, 4, 5, 1, 1, 0, 0, 9, 2, 1, 0, 0, 1, 0, 1]' : 0.102685}", "{'[2, 6, 2, 0, 4, 5, 1, 1, 0, 0, 9, 2, 1, 0, 0, 1, 0, 1]' : 0.105252}", "{'[2, 6, 2, 0, 4, 5, 1, 1, 0, 0, 9, 2, 1, 0, 0, 1, 0, 1]' : 0.104268}", "{'[2, 6, 2, 0, 4, 5, 1, 1, 0, 0, 9, 2, 1, 0, 0, 1, 0, 1]' : 0.103652}", "{'[2, 6, 2, 0, 4, 5, 1, 1, 0, 0, 9, 2, 1, 0, 0, 1, 0, 1]' : 0.103557}", "{'[2, 6, 2, 0, 4, 5, 1, 1, 0, 0, 9, 2, 1, 0, 0, 1, 0, 1]' : 0.105644}", "{'[2, 6, 2, 0, 4, 5, 1, 1, 0, 0, 9, 2, 1, 0, 0, 1, 0, 1]' : 0.10516}", "{'[2, 6, 2, 0, 4, 5, 1, 1, 0, 0, 9, 2, 1, 0, 0, 1, 0, 1]' : 0.103996}", "{'[2, 6, 2, 0, 4, 5, 1, 1, 0, 0, 9, 2, 1, 0, 0, 1, 0, 1]' : 0.101706}", "{'[2, 6, 2, 0, 4, 5, 1, 1, 0, 0, 9, 2, 1, 0, 0, 1, 0, 1]' : 0.101188}", "{'[2, 6, 2, 0, 4, 5, 1, 1, 0, 0, 9, 2, 1, 0, 0, 1, 0, 1]' : 0.105658}", "{'[2, 6, 2, 0, 4, 5, 1, 1, 0, 0, 9, 2, 1, 0, 0, 1, 0, 1]' : 0.10265}", "{'[2, 6, 2, 0, 4, 5, 1, 1, 0, 0, 9, 2, 1, 0, 0, 1, 0, 1]' : 0.101051}", "{'[2, 6, 2, 0, 4, 5, 1, 1, 0, 0, 9, 2, 1, 0, 0, 1, 0, 1]' : 0.101358}", "{'[2, 6, 2, 0, 4, 5, 1, 1, 0, 0, 9, 2, 1, 0, 0, 1, 0, 1]' : 0.101987}", "{'[2, 6, 2, 0, 4, 5, 1, 1, 0, 0, 9, 2, 1, 0, 0, 1, 0, 1]' : 0.103593}", "{'[2, 6, 2, 0, 4, 5, 1, 1, 0, 0, 9, 2, 1, 0, 0, 1, 0, 1]' : 0.103506}", "{'[2, 6, 2, 0, 4, 5, 1, 1, 0, 0, 9, 2, 1, 0, 0, 1, 0, 1]' : 0.101494}", "{'[2, 6, 2, 0, 4, 5, 1, 1, 0, 0, 9, 2, 1, 0, 0, 1, 0, 1]' : 0.10135}", "{'[2, 6, 2, 0, 4, 5, 1, 1, 0, 0, 9, 2, 1, 0, 0, 1, 0, 1]' : 0.102444}", "{'[2, 6, 2, 0, 4, 5, 1, 1, 0, 0, 9, 2, 1, 0, 0, 1, 0, 1]' : 0.105685}", "{'[2, 6, 2, 0, 4, 5, 1, 1, 0, 0, 9, 2, 1, 0, 0, 1, 0, 1]' : 0.103533}", "{'[2, 6, 2, 0, 4, 5, 1, 1, 0, 0, 9, 2, 1, 0, 0, 1, 0, 1]' : 0.104565}", "{'[2, 6, 2, 0, 4, 5, 1, 1, 0, 0, 9, 2, 1, 0, 0, 1, 0, 1]' : 0.102551}"]
returning from 'run': {'[2, 6, 2, 0, 4, 5, 1, 1, 0, 0, 9, 2, 1, 0, 0, 1, 0, 1]': ([0.117196, 0.117343, 0.11639, 0.116361, 0.11266, 0.101267, 0.102685, 0.105252, 0.104268, 0.103652, 0.103557, 0.105644, 0.10516, 0.103996, 0.101706, 0.101188, 0.105658, 0.10265, 0.101051, 0.101358, 0.101987, 0.103593, 0.103506, 0.101494, 0.10135, 0.102444, 0.105685, 0.103533, 0.104565, 0.102551], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 6, 2, 0, 4, 5, 1, 1, 0, 0, 9, 2, 1, 0, 0, 1, 0, 1]': ([0.117196, 0.117343, 0.11639, 0.116361, 0.11266, 0.101267, 0.102685, 0.105252, 0.104268, 0.103652, 0.103557, 0.105644, 0.10516, 0.103996, 0.101706, 0.101188, 0.105658, 0.10265, 0.101051, 0.101358, 0.101987, 0.103593, 0.103506, 0.101494, 0.10135, 0.102444, 0.105685, 0.103533, 0.104565, 0.102551], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	25
        Max loop nest depth: 	6
        Additions: 		2562
        Multiplications: 	1116
        Divisions: 		0
        Logical: 		0
        Reads: 			4855
        Writes: 		790
        Comparisons:		25
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest75.exe __orio_perftest75.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest75.exe  
Program Test Output: 
{'[3, 6, 1, 6, 4, 1, 1, 1, 0, 0, 29, 29, 1, 0, 0, 1, 0, 0]' : 0.108961}
{'[3, 6, 1, 6, 4, 1, 1, 1, 0, 0, 29, 29, 1, 0, 0, 1, 0, 0]' : 0.109805}
{'[3, 6, 1, 6, 4, 1, 1, 1, 0, 0, 29, 29, 1, 0, 0, 1, 0, 0]' : 0.108796}
{'[3, 6, 1, 6, 4, 1, 1, 1, 0, 0, 29, 29, 1, 0, 0, 1, 0, 0]' : 0.114259}
{'[3, 6, 1, 6, 4, 1, 1, 1, 0, 0, 29, 29, 1, 0, 0, 1, 0, 0]' : 0.114639}
{'[3, 6, 1, 6, 4, 1, 1, 1, 0, 0, 29, 29, 1, 0, 0, 1, 0, 0]' : 0.111886}
{'[3, 6, 1, 6, 4, 1, 1, 1, 0, 0, 29, 29, 1, 0, 0, 1, 0, 0]' : 0.11183}
{'[3, 6, 1, 6, 4, 1, 1, 1, 0, 0, 29, 29, 1, 0, 0, 1, 0, 0]' : 0.110422}
{'[3, 6, 1, 6, 4, 1, 1, 1, 0, 0, 29, 29, 1, 0, 0, 1, 0, 0]' : 0.108903}
{'[3, 6, 1, 6, 4, 1, 1, 1, 0, 0, 29, 29, 1, 0, 0, 1, 0, 0]' : 0.108556}
{'[3, 6, 1, 6, 4, 1, 1, 1, 0, 0, 29, 29, 1, 0, 0, 1, 0, 0]' : 0.10858}
{'[3, 6, 1, 6, 4, 1, 1, 1, 0, 0, 29, 29, 1, 0, 0, 1, 0, 0]' : 0.108532}
{'[3, 6, 1, 6, 4, 1, 1, 1, 0, 0, 29, 29, 1, 0, 0, 1, 0, 0]' : 0.113101}
{'[3, 6, 1, 6, 4, 1, 1, 1, 0, 0, 29, 29, 1, 0, 0, 1, 0, 0]' : 0.111832}
{'[3, 6, 1, 6, 4, 1, 1, 1, 0, 0, 29, 29, 1, 0, 0, 1, 0, 0]' : 0.11194}
{'[3, 6, 1, 6, 4, 1, 1, 1, 0, 0, 29, 29, 1, 0, 0, 1, 0, 0]' : 0.110237}
{'[3, 6, 1, 6, 4, 1, 1, 1, 0, 0, 29, 29, 1, 0, 0, 1, 0, 0]' : 0.110005}
{'[3, 6, 1, 6, 4, 1, 1, 1, 0, 0, 29, 29, 1, 0, 0, 1, 0, 0]' : 0.111245}
{'[3, 6, 1, 6, 4, 1, 1, 1, 0, 0, 29, 29, 1, 0, 0, 1, 0, 0]' : 0.108713}
{'[3, 6, 1, 6, 4, 1, 1, 1, 0, 0, 29, 29, 1, 0, 0, 1, 0, 0]' : 0.10859}
{'[3, 6, 1, 6, 4, 1, 1, 1, 0, 0, 29, 29, 1, 0, 0, 1, 0, 0]' : 0.108691}
{'[3, 6, 1, 6, 4, 1, 1, 1, 0, 0, 29, 29, 1, 0, 0, 1, 0, 0]' : 0.114021}
{'[3, 6, 1, 6, 4, 1, 1, 1, 0, 0, 29, 29, 1, 0, 0, 1, 0, 0]' : 0.113062}
{'[3, 6, 1, 6, 4, 1, 1, 1, 0, 0, 29, 29, 1, 0, 0, 1, 0, 0]' : 0.111812}
{'[3, 6, 1, 6, 4, 1, 1, 1, 0, 0, 29, 29, 1, 0, 0, 1, 0, 0]' : 0.110093}
{'[3, 6, 1, 6, 4, 1, 1, 1, 0, 0, 29, 29, 1, 0, 0, 1, 0, 0]' : 0.11071}
{'[3, 6, 1, 6, 4, 1, 1, 1, 0, 0, 29, 29, 1, 0, 0, 1, 0, 0]' : 0.114745}
{'[3, 6, 1, 6, 4, 1, 1, 1, 0, 0, 29, 29, 1, 0, 0, 1, 0, 0]' : 0.114725}
{'[3, 6, 1, 6, 4, 1, 1, 1, 0, 0, 29, 29, 1, 0, 0, 1, 0, 0]' : 0.115141}
{'[3, 6, 1, 6, 4, 1, 1, 1, 0, 0, 29, 29, 1, 0, 0, 1, 0, 0]' : 0.114682}

out:
 ["{'[3, 6, 1, 6, 4, 1, 1, 1, 0, 0, 29, 29, 1, 0, 0, 1, 0, 0]' : 0.108961}", "{'[3, 6, 1, 6, 4, 1, 1, 1, 0, 0, 29, 29, 1, 0, 0, 1, 0, 0]' : 0.109805}", "{'[3, 6, 1, 6, 4, 1, 1, 1, 0, 0, 29, 29, 1, 0, 0, 1, 0, 0]' : 0.108796}", "{'[3, 6, 1, 6, 4, 1, 1, 1, 0, 0, 29, 29, 1, 0, 0, 1, 0, 0]' : 0.114259}", "{'[3, 6, 1, 6, 4, 1, 1, 1, 0, 0, 29, 29, 1, 0, 0, 1, 0, 0]' : 0.114639}", "{'[3, 6, 1, 6, 4, 1, 1, 1, 0, 0, 29, 29, 1, 0, 0, 1, 0, 0]' : 0.111886}", "{'[3, 6, 1, 6, 4, 1, 1, 1, 0, 0, 29, 29, 1, 0, 0, 1, 0, 0]' : 0.11183}", "{'[3, 6, 1, 6, 4, 1, 1, 1, 0, 0, 29, 29, 1, 0, 0, 1, 0, 0]' : 0.110422}", "{'[3, 6, 1, 6, 4, 1, 1, 1, 0, 0, 29, 29, 1, 0, 0, 1, 0, 0]' : 0.108903}", "{'[3, 6, 1, 6, 4, 1, 1, 1, 0, 0, 29, 29, 1, 0, 0, 1, 0, 0]' : 0.108556}", "{'[3, 6, 1, 6, 4, 1, 1, 1, 0, 0, 29, 29, 1, 0, 0, 1, 0, 0]' : 0.10858}", "{'[3, 6, 1, 6, 4, 1, 1, 1, 0, 0, 29, 29, 1, 0, 0, 1, 0, 0]' : 0.108532}", "{'[3, 6, 1, 6, 4, 1, 1, 1, 0, 0, 29, 29, 1, 0, 0, 1, 0, 0]' : 0.113101}", "{'[3, 6, 1, 6, 4, 1, 1, 1, 0, 0, 29, 29, 1, 0, 0, 1, 0, 0]' : 0.111832}", "{'[3, 6, 1, 6, 4, 1, 1, 1, 0, 0, 29, 29, 1, 0, 0, 1, 0, 0]' : 0.11194}", "{'[3, 6, 1, 6, 4, 1, 1, 1, 0, 0, 29, 29, 1, 0, 0, 1, 0, 0]' : 0.110237}", "{'[3, 6, 1, 6, 4, 1, 1, 1, 0, 0, 29, 29, 1, 0, 0, 1, 0, 0]' : 0.110005}", "{'[3, 6, 1, 6, 4, 1, 1, 1, 0, 0, 29, 29, 1, 0, 0, 1, 0, 0]' : 0.111245}", "{'[3, 6, 1, 6, 4, 1, 1, 1, 0, 0, 29, 29, 1, 0, 0, 1, 0, 0]' : 0.108713}", "{'[3, 6, 1, 6, 4, 1, 1, 1, 0, 0, 29, 29, 1, 0, 0, 1, 0, 0]' : 0.10859}", "{'[3, 6, 1, 6, 4, 1, 1, 1, 0, 0, 29, 29, 1, 0, 0, 1, 0, 0]' : 0.108691}", "{'[3, 6, 1, 6, 4, 1, 1, 1, 0, 0, 29, 29, 1, 0, 0, 1, 0, 0]' : 0.114021}", "{'[3, 6, 1, 6, 4, 1, 1, 1, 0, 0, 29, 29, 1, 0, 0, 1, 0, 0]' : 0.113062}", "{'[3, 6, 1, 6, 4, 1, 1, 1, 0, 0, 29, 29, 1, 0, 0, 1, 0, 0]' : 0.111812}", "{'[3, 6, 1, 6, 4, 1, 1, 1, 0, 0, 29, 29, 1, 0, 0, 1, 0, 0]' : 0.110093}", "{'[3, 6, 1, 6, 4, 1, 1, 1, 0, 0, 29, 29, 1, 0, 0, 1, 0, 0]' : 0.11071}", "{'[3, 6, 1, 6, 4, 1, 1, 1, 0, 0, 29, 29, 1, 0, 0, 1, 0, 0]' : 0.114745}", "{'[3, 6, 1, 6, 4, 1, 1, 1, 0, 0, 29, 29, 1, 0, 0, 1, 0, 0]' : 0.114725}", "{'[3, 6, 1, 6, 4, 1, 1, 1, 0, 0, 29, 29, 1, 0, 0, 1, 0, 0]' : 0.115141}", "{'[3, 6, 1, 6, 4, 1, 1, 1, 0, 0, 29, 29, 1, 0, 0, 1, 0, 0]' : 0.114682}"]
returning from 'run': {'[3, 6, 1, 6, 4, 1, 1, 1, 0, 0, 29, 29, 1, 0, 0, 1, 0, 0]': ([0.108961, 0.109805, 0.108796, 0.114259, 0.114639, 0.111886, 0.11183, 0.110422, 0.108903, 0.108556, 0.10858, 0.108532, 0.113101, 0.111832, 0.11194, 0.110237, 0.110005, 0.111245, 0.108713, 0.10859, 0.108691, 0.114021, 0.113062, 0.111812, 0.110093, 0.11071, 0.114745, 0.114725, 0.115141, 0.114682], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 6, 1, 6, 4, 1, 1, 1, 0, 0, 29, 29, 1, 0, 0, 1, 0, 0]': ([0.108961, 0.109805, 0.108796, 0.114259, 0.114639, 0.111886, 0.11183, 0.110422, 0.108903, 0.108556, 0.10858, 0.108532, 0.113101, 0.111832, 0.11194, 0.110237, 0.110005, 0.111245, 0.108713, 0.10859, 0.108691, 0.114021, 0.113062, 0.111812, 0.110093, 0.11071, 0.114745, 0.114725, 0.115141, 0.114682], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Complete design, with measurements:
     T1_I T1_K T2_I T2_K ACOPY_x ACOPY_y U1_I U_J U_K RT_J VEC2  cost_mean
15      6    0    6    1       0       1    7  25  13    0    1 0.09665498
88      0    6    0    4       1       0   28   6  28    1    0 0.10841940
186     6    3    4    0       1       0    0  12  28    1    1 0.09891578
400     6    0    0    0       0       1   28   5  25    0    0 0.09685286
633     1    6    2    0       1       1   27  29  27    1    1 0.09823082
894     4    5    0    4       0       0    0  29  22    1    1 0.09497300
938     6    6    5    6       0       0   17   0  29    0    1 0.09337818
1086    0    1    6    6       0       1   22   0  29    1    1 0.10665237
1100    1    4    6    3       1       0   14   4   0    0    1 0.10790873
1278    0    6    1    5       1       1    4  29  20    0    0 0.11212983
1285    0    5    4    0       0       0    0  10   0    0    0 0.10613950
1449    1    0    6    5       1       0    1   7  21    1    0 0.10600007
1593    4    6    6    0       1       0    5   6   7    1    0 0.09067451
1611    6    0    0    5       1       0    9  25   0    1    0 0.10692217
1662    1    0    1    2       0       0   29  25   5    1    1 0.09153836
1663    0    2    0    0       0       0    9  27   9    0    1 0.09716231
1798    0    0    0    2       1       1   11   0   0    1    1 0.10150487
1821    3    5    0    0       0       0    4   0  28    0    0 0.11308690
1961    6    2    0    2       0       1    8   4  26    1    1 0.11487360
2002    0    0    3    6       1       0   26   9  18    0    1 0.09645498
2075    3    2    1    6       0       1   15   3   0    1    0 0.10124113
2119    0    1    1    2       0       0    8   7  29    0    1 0.10317383
2237    2    1    0    6       0       0   29  29  24    0    0 0.10225970
2284    1    6    2    4       0       1    0   8   2    0    0 0.11351133
2297    3    1    1    2       1       0    3   0  29    1    0 0.09976659
2338    6    2    5    1       1       0   29   0   4    1    0 0.11147827
2657    2    2    0    5       1       1    0   9   2    0    1 0.10532500
2722    3    1    6    1       1       1    0  29  29    0    0 0.11128380

Heteroscedasticity Test p-value: 0.828391069263
Regression Step:                Df    Sum Sq   Mean Sq F value Pr(>F)
T1_I             1 0.0000189 1.895e-05   0.312  0.590
T1_K             1 0.0000169 1.689e-05   0.278  0.611
T2_I             1 0.0000025 2.470e-06   0.041  0.845
T2_K             1 0.0000104 1.036e-05   0.171  0.689
ACOPY_x          1 0.0000208 2.077e-05   0.342  0.573
ACOPY_y          1 0.0000983 9.828e-05   1.619  0.235
U1_I             1 0.0000557 5.570e-05   0.917  0.363
U_J              1 0.0000590 5.896e-05   0.971  0.350
U_K              1 0.0000034 3.420e-06   0.056  0.818
RT_J             1 0.0000247 2.469e-05   0.407  0.540
VEC2             1 0.0001560 1.560e-04   2.569  0.143
I(1/(1 + T1_I))  1 0.0000115 1.150e-05   0.189  0.674
I(1/(1 + T1_K))  1 0.0001299 1.299e-04   2.139  0.178
I(1/(1 + T2_I))  1 0.0000279 2.790e-05   0.460  0.515
I(1/(1 + T2_K))  1 0.0001351 1.351e-04   2.226  0.170
I(1/(1 + U1_I))  1 0.0000031 3.060e-06   0.050  0.827
I(1/(1 + U_J))   1 0.0000000 1.000e-08   0.000  0.993
I(1/(1 + U_K))   1 0.0000141 1.411e-05   0.232  0.641
Residuals        9 0.0005464 6.071e-05               

Predicting Best
Generating valid search space of size 2800 (does not spend evaluations)
Valid coordinates: 560
Valid coordinates: 1120
Valid coordinates: 1680
Valid coordinates: 2240
Valid coordinates: 2800
Valid/Tested configurations: 2800/5400
Generated Search Space:
NULL
Identical predictions (tol = 1e-5): 1
Getting Best from Design
Response: ['cost_mean']
Design Names:  [1] "T1_I"      "T1_K"      "T2_I"      "T2_K"      "ACOPY_x"   "ACOPY_y"  
 [7] "U1_I"      "U_J"       "U_K"       "RT_J"      "VEC2"      "cost_mean"

Design Response:       cost_mean
15   0.09665498
88   0.10841940
186  0.09891578
400  0.09685286
633  0.09823082
894  0.09497300
938  0.09337818
1086 0.10665237
1100 0.10790873
1278 0.11212983
1285 0.10613950
1449 0.10600007
1593 0.09067451
1611 0.10692217
1662 0.09153836
1663 0.09716231
1798 0.10150487
1821 0.11308690
1961 0.11487360
2002 0.09645498
2075 0.10124113
2119 0.10317383
2237 0.10225970
2284 0.11351133
2297 0.09976659
2338 0.11147827
2657 0.10532500
2722 0.11128380

Current Design Names: ['T1_I', 'T1_K', 'T2_I', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_J', 'U_K', 'RT_J', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Getting fixed variables
Pruning Model
Best Predicted:      T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
2643    1    6    0    4    4    0       0       0   13   0  19   7    1    1
     RT_K SCR VEC1 VEC2
2643    0   1    0    1

Best From Design: [4, 6, 6, 6, 4, 0, 1, 0, 5, 0, 6, 7, 1, 1, 0, 1, 0, 0]
Pruned Factors: ['T1_I', 'T1_K', 'T2_I', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_J', 'U_K', 'RT_J']
Fixed Factors: {'RT_K': 0, 'RT_I': 1, 'T1_J': 6, 'U_I': 0, 'T2_J': 4, 'VEC2': 1, 'VEC1': 0, 'SCR': 1}
Length of requested configs: 1
Result was on Database, Returning Now
Starting Point (-O3):
0.16283083333333334
Predicted Best Point:
[1, 6, 0, 4, 4, 0, 0, 0, 13, 0, 19, 7, 1, 1, 0, 1, 0, 1]
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	5
        Additions: 		1431
        Multiplications: 	684
        Divisions: 		0
        Logical: 		0
        Reads: 			2854
        Writes: 		492
        Comparisons:		18
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest76.exe __orio_perftest76.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest76.exe  
Program Test Output: 
{'[1, 6, 0, 4, 4, 0, 0, 0, 13, 0, 19, 7, 1, 1, 0, 1, 0, 1]' : 0.0856531}
{'[1, 6, 0, 4, 4, 0, 0, 0, 13, 0, 19, 7, 1, 1, 0, 1, 0, 1]' : 0.085525}
{'[1, 6, 0, 4, 4, 0, 0, 0, 13, 0, 19, 7, 1, 1, 0, 1, 0, 1]' : 0.0865469}
{'[1, 6, 0, 4, 4, 0, 0, 0, 13, 0, 19, 7, 1, 1, 0, 1, 0, 1]' : 0.0868249}
{'[1, 6, 0, 4, 4, 0, 0, 0, 13, 0, 19, 7, 1, 1, 0, 1, 0, 1]' : 0.0874009}
{'[1, 6, 0, 4, 4, 0, 0, 0, 13, 0, 19, 7, 1, 1, 0, 1, 0, 1]' : 0.085609}
{'[1, 6, 0, 4, 4, 0, 0, 0, 13, 0, 19, 7, 1, 1, 0, 1, 0, 1]' : 0.0853128}
{'[1, 6, 0, 4, 4, 0, 0, 0, 13, 0, 19, 7, 1, 1, 0, 1, 0, 1]' : 0.0852978}
{'[1, 6, 0, 4, 4, 0, 0, 0, 13, 0, 19, 7, 1, 1, 0, 1, 0, 1]' : 0.08587}
{'[1, 6, 0, 4, 4, 0, 0, 0, 13, 0, 19, 7, 1, 1, 0, 1, 0, 1]' : 0.087095}
{'[1, 6, 0, 4, 4, 0, 0, 0, 13, 0, 19, 7, 1, 1, 0, 1, 0, 1]' : 0.0874789}
{'[1, 6, 0, 4, 4, 0, 0, 0, 13, 0, 19, 7, 1, 1, 0, 1, 0, 1]' : 0.0874479}
{'[1, 6, 0, 4, 4, 0, 0, 0, 13, 0, 19, 7, 1, 1, 0, 1, 0, 1]' : 0.0858929}
{'[1, 6, 0, 4, 4, 0, 0, 0, 13, 0, 19, 7, 1, 1, 0, 1, 0, 1]' : 0.085535}
{'[1, 6, 0, 4, 4, 0, 0, 0, 13, 0, 19, 7, 1, 1, 0, 1, 0, 1]' : 0.0855482}
{'[1, 6, 0, 4, 4, 0, 0, 0, 13, 0, 19, 7, 1, 1, 0, 1, 0, 1]' : 0.0874281}
{'[1, 6, 0, 4, 4, 0, 0, 0, 13, 0, 19, 7, 1, 1, 0, 1, 0, 1]' : 0.0874019}
{'[1, 6, 0, 4, 4, 0, 0, 0, 13, 0, 19, 7, 1, 1, 0, 1, 0, 1]' : 0.087389}
{'[1, 6, 0, 4, 4, 0, 0, 0, 13, 0, 19, 7, 1, 1, 0, 1, 0, 1]' : 0.0863702}
{'[1, 6, 0, 4, 4, 0, 0, 0, 13, 0, 19, 7, 1, 1, 0, 1, 0, 1]' : 0.086108}
{'[1, 6, 0, 4, 4, 0, 0, 0, 13, 0, 19, 7, 1, 1, 0, 1, 0, 1]' : 0.08602}
{'[1, 6, 0, 4, 4, 0, 0, 0, 13, 0, 19, 7, 1, 1, 0, 1, 0, 1]' : 0.087409}
{'[1, 6, 0, 4, 4, 0, 0, 0, 13, 0, 19, 7, 1, 1, 0, 1, 0, 1]' : 0.0874059}
{'[1, 6, 0, 4, 4, 0, 0, 0, 13, 0, 19, 7, 1, 1, 0, 1, 0, 1]' : 0.087451}
{'[1, 6, 0, 4, 4, 0, 0, 0, 13, 0, 19, 7, 1, 1, 0, 1, 0, 1]' : 0.0861189}
{'[1, 6, 0, 4, 4, 0, 0, 0, 13, 0, 19, 7, 1, 1, 0, 1, 0, 1]' : 0.0856631}
{'[1, 6, 0, 4, 4, 0, 0, 0, 13, 0, 19, 7, 1, 1, 0, 1, 0, 1]' : 0.086693}
{'[1, 6, 0, 4, 4, 0, 0, 0, 13, 0, 19, 7, 1, 1, 0, 1, 0, 1]' : 0.087332}
{'[1, 6, 0, 4, 4, 0, 0, 0, 13, 0, 19, 7, 1, 1, 0, 1, 0, 1]' : 0.087455}
{'[1, 6, 0, 4, 4, 0, 0, 0, 13, 0, 19, 7, 1, 1, 0, 1, 0, 1]' : 0.087383}

out:
 ["{'[1, 6, 0, 4, 4, 0, 0, 0, 13, 0, 19, 7, 1, 1, 0, 1, 0, 1]' : 0.0856531}", "{'[1, 6, 0, 4, 4, 0, 0, 0, 13, 0, 19, 7, 1, 1, 0, 1, 0, 1]' : 0.085525}", "{'[1, 6, 0, 4, 4, 0, 0, 0, 13, 0, 19, 7, 1, 1, 0, 1, 0, 1]' : 0.0865469}", "{'[1, 6, 0, 4, 4, 0, 0, 0, 13, 0, 19, 7, 1, 1, 0, 1, 0, 1]' : 0.0868249}", "{'[1, 6, 0, 4, 4, 0, 0, 0, 13, 0, 19, 7, 1, 1, 0, 1, 0, 1]' : 0.0874009}", "{'[1, 6, 0, 4, 4, 0, 0, 0, 13, 0, 19, 7, 1, 1, 0, 1, 0, 1]' : 0.085609}", "{'[1, 6, 0, 4, 4, 0, 0, 0, 13, 0, 19, 7, 1, 1, 0, 1, 0, 1]' : 0.0853128}", "{'[1, 6, 0, 4, 4, 0, 0, 0, 13, 0, 19, 7, 1, 1, 0, 1, 0, 1]' : 0.0852978}", "{'[1, 6, 0, 4, 4, 0, 0, 0, 13, 0, 19, 7, 1, 1, 0, 1, 0, 1]' : 0.08587}", "{'[1, 6, 0, 4, 4, 0, 0, 0, 13, 0, 19, 7, 1, 1, 0, 1, 0, 1]' : 0.087095}", "{'[1, 6, 0, 4, 4, 0, 0, 0, 13, 0, 19, 7, 1, 1, 0, 1, 0, 1]' : 0.0874789}", "{'[1, 6, 0, 4, 4, 0, 0, 0, 13, 0, 19, 7, 1, 1, 0, 1, 0, 1]' : 0.0874479}", "{'[1, 6, 0, 4, 4, 0, 0, 0, 13, 0, 19, 7, 1, 1, 0, 1, 0, 1]' : 0.0858929}", "{'[1, 6, 0, 4, 4, 0, 0, 0, 13, 0, 19, 7, 1, 1, 0, 1, 0, 1]' : 0.085535}", "{'[1, 6, 0, 4, 4, 0, 0, 0, 13, 0, 19, 7, 1, 1, 0, 1, 0, 1]' : 0.0855482}", "{'[1, 6, 0, 4, 4, 0, 0, 0, 13, 0, 19, 7, 1, 1, 0, 1, 0, 1]' : 0.0874281}", "{'[1, 6, 0, 4, 4, 0, 0, 0, 13, 0, 19, 7, 1, 1, 0, 1, 0, 1]' : 0.0874019}", "{'[1, 6, 0, 4, 4, 0, 0, 0, 13, 0, 19, 7, 1, 1, 0, 1, 0, 1]' : 0.087389}", "{'[1, 6, 0, 4, 4, 0, 0, 0, 13, 0, 19, 7, 1, 1, 0, 1, 0, 1]' : 0.0863702}", "{'[1, 6, 0, 4, 4, 0, 0, 0, 13, 0, 19, 7, 1, 1, 0, 1, 0, 1]' : 0.086108}", "{'[1, 6, 0, 4, 4, 0, 0, 0, 13, 0, 19, 7, 1, 1, 0, 1, 0, 1]' : 0.08602}", "{'[1, 6, 0, 4, 4, 0, 0, 0, 13, 0, 19, 7, 1, 1, 0, 1, 0, 1]' : 0.087409}", "{'[1, 6, 0, 4, 4, 0, 0, 0, 13, 0, 19, 7, 1, 1, 0, 1, 0, 1]' : 0.0874059}", "{'[1, 6, 0, 4, 4, 0, 0, 0, 13, 0, 19, 7, 1, 1, 0, 1, 0, 1]' : 0.087451}", "{'[1, 6, 0, 4, 4, 0, 0, 0, 13, 0, 19, 7, 1, 1, 0, 1, 0, 1]' : 0.0861189}", "{'[1, 6, 0, 4, 4, 0, 0, 0, 13, 0, 19, 7, 1, 1, 0, 1, 0, 1]' : 0.0856631}", "{'[1, 6, 0, 4, 4, 0, 0, 0, 13, 0, 19, 7, 1, 1, 0, 1, 0, 1]' : 0.086693}", "{'[1, 6, 0, 4, 4, 0, 0, 0, 13, 0, 19, 7, 1, 1, 0, 1, 0, 1]' : 0.087332}", "{'[1, 6, 0, 4, 4, 0, 0, 0, 13, 0, 19, 7, 1, 1, 0, 1, 0, 1]' : 0.087455}", "{'[1, 6, 0, 4, 4, 0, 0, 0, 13, 0, 19, 7, 1, 1, 0, 1, 0, 1]' : 0.087383}"]
returning from 'run': {'[1, 6, 0, 4, 4, 0, 0, 0, 13, 0, 19, 7, 1, 1, 0, 1, 0, 1]': ([0.0856531, 0.085525, 0.0865469, 0.0868249, 0.0874009, 0.085609, 0.0853128, 0.0852978, 0.08587, 0.087095, 0.0874789, 0.0874479, 0.0858929, 0.085535, 0.0855482, 0.0874281, 0.0874019, 0.087389, 0.0863702, 0.086108, 0.08602, 0.087409, 0.0874059, 0.087451, 0.0861189, 0.0856631, 0.086693, 0.087332, 0.087455, 0.087383], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 6, 0, 4, 4, 0, 0, 0, 13, 0, 19, 7, 1, 1, 0, 1, 0, 1]': ([0.0856531, 0.085525, 0.0865469, 0.0868249, 0.0874009, 0.085609, 0.0853128, 0.0852978, 0.08587, 0.087095, 0.0874789, 0.0874479, 0.0858929, 0.085535, 0.0855482, 0.0874281, 0.0874019, 0.087389, 0.0863702, 0.086108, 0.08602, 0.087409, 0.0874059, 0.087451, 0.0861189, 0.0856631, 0.086693, 0.087332, 0.087455, 0.087383], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Design Best Point:
[4, 6, 6, 6, 4, 0, 1, 0, 5, 0, 6, 7, 1, 1, 0, 1, 0, 0]
Length of requested configs: 1
Result was on Database, Returning Now
Fixed Factors: {'RT_K': 0, 'RT_I': 1, 'T1_J': 6, 'U_I': 0, 'T2_J': 4, 'VEC2': 1, 'VEC1': 0, 'SCR': 1}
Slowdown (Design Best): 0.556863288586826
Slowdown (Predicted Best): 0.5315673014427038
Budget: 65/180
Updating Global Best: 0.08655554666666666
Current Best Point: 
[1, 6, 0, 4, 4, 0, 0, 0, 13, 0, 19, 7, 1, 1, 0, 1, 0, 1]
Final Best Point: 
[1, 6, 0, 4, 4, 0, 0, 0, 13, 0, 19, 7, 1, 1, 0, 1, 0, 1]
Ending DOPT-ANOVA
Best Point: [1, 6, 0, 4, 4, 0, 0, 0, 13, 0, 19, 7, 1, 1, 0, 1, 0, 1]
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Speedup: 1.881229333117261
----- end random search -----
----- begin random search summary -----
 total completed runs: 0
 total successful runs: 0
 total failed runs: 0
 speedup: 1.881229333117261
----- end random search summary -----
----- begin summary -----
 best coordinate: [1, 6, 0, 4, 4, 0, 0, 0, 13, 0, 19, 7, 1, 1, 0, 1, 0, 1]={'ACOPY_x': False, 'ACOPY_y': False, 'RT_K': 1, 'T1_I': 16, 'T1_J': 512, 'T1_K': 1, 'U_K': 8, 'U_J': 20, 'U_I': 1, 'U1_I': 14, 'T2_K': 1, 'T2_J': 512, 'T2_I': 512, 'VEC2': True, 'VEC1': False, 'RT_I': 8, 'SCR': True, 'RT_J': 8}, cost=8.655555e-02, transfer_time=inf, inputs=[('N', 10000)], search_time=-641.39, runs=65
----- end summary -----
Length of requested configs: 1
Result was on Database, Returning Now
----- the obtained best performance parameters -----
 ACOPY_x = False
 ACOPY_y = False
 RT_I = 8
 RT_J = 8
 RT_K = 1
 SCR = True
 T1_I = 16
 T1_J = 512
 T1_K = 1
 T2_I = 512
 T2_J = 512
 T2_K = 1
 U1_I = 14
 U_I = 1
 U_J = 20
 U_K = 8
 VEC1 = False
 VEC2 = True
 cost_mean = 0.08655554666666669
 points = 65
 speedup_O3 = 1.881229333117261
 technique = DLMT
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	5
        Additions: 		1431
        Multiplications: 	684
        Divisions: 		0
        Logical: 		0
        Reads: 			2854
        Writes: 		492
        Comparisons:		18
        Gotos: 			0
        
----- finish optimizations -----

----- begin removing annotations from output-----
----- finished removing annotations from output-----

----- begin writing the output file(s) -----
--> writing output to: _atax2.src1.c
----- finished writing the output file(s) -----

====== END ORIO ======
