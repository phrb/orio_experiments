
====== START ORIO ======

----- begin reading the source file: atax2.src1.c -----
----- finished reading the source file -----

----- begin parsing annotations -----
----- finished parsing annotations -----

----- begin optimizations -----
Search_Space         = 8.234e+13
Number_of_Parameters = 18
Numeric_Parameters   = 13
Binary_Parameters    = 05
['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
[[1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [False, True], [False, True], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 8, 32], [1, 8, 32], [1, 8, 32], [False, True], [False, True], [False, True]]

----- begin empirical tuning for problem size -----
 N = 10000
Parameters: {'ACOPY_x': [0, 2], 'ACOPY_y': [0, 2], 'RT_K': [0, 3], 'T1_I': [0, 7], 'T1_J': [0, 7], 'T1_K': [0, 7], 'U_K': [0, 30], 'U_J': [0, 30], 'U_I': [0, 30], 'U1_I': [0, 30], 'T2_K': [0, 7], 'T2_J': [0, 7], 'T2_I': [0, 7], 'VEC2': [0, 2], 'VEC1': [0, 2], 'RT_I': [0, 3], 'SCR': [0, 2], 'RT_J': [0, 3]}
Parameter Range Values: {'ACOPY_x': [False, True], 'ACOPY_y': [False, True], 'RT_K': [1, 8, 32], 'T1_I': [1, 16, 32, 64, 128, 256, 512], 'T1_J': [1, 16, 32, 64, 128, 256, 512], 'T1_K': [1, 16, 32, 64, 128, 256, 512], 'U_K': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_J': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U1_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'T2_K': [1, 64, 128, 256, 512, 1024, 2048], 'T2_J': [1, 64, 128, 256, 512, 1024, 2048], 'T2_I': [1, 64, 128, 256, 512, 1024, 2048], 'VEC2': [False, True], 'VEC1': [False, True], 'RT_I': [1, 8, 32], 'SCR': [False, True], 'RT_J': [1, 8, 32]}

----- begin random search -----
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Inverse Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Starting DOPT-anova
Step 0
Generating valid search space of size 4600 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Valid coordinates: 920
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Valid coordinates: 1840
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Tested coordinates: 110000
Valid coordinates: 2760
Tested coordinates: 120000
Tested coordinates: 130000
Tested coordinates: 140000
Tested coordinates: 150000
Valid coordinates: 3680
Tested coordinates: 160000
Tested coordinates: 170000
Tested coordinates: 180000
Tested coordinates: 190000
Valid coordinates: 4600
Valid/Tested configurations: 4600/190454
Generated Search Space:
NULL
Clean Info:
Removed Factors: character(0)

Removed Inverse Factors: [1] "ACOPY_x" "ACOPY_y" "SCR"     "VEC1"    "VEC2"   

New Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
New Inverse Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
New Fixed Factors: {}
Full Model:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Fixed Factors: {}
Computing D-Optimal Design
Computing D-Optimal Design with 46 experiments
Design Formula:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Starting "optFederov" run
Using Search Space:
NULL
Data Dimensions: [1] 4600   18

     T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
180     5    4    5    0    3    3       0       0   29   0  29  27    1    1
364     6    0    1    0    6    0       0       1   21   0   0   1    0    0
420     5    1    6    6    0    4       0       0   27   0  29   3    1    0
454     6    1    1    0    0    0       1       0    9  24   0  24    0    0
560     0    0    3    0    2    6       1       0   19   0  20  10    2    0
573     6    1    0    0    6    5       1       1    6   2  15   0    0    2
602     1    3    0    0    0    0       0       1   21   6  25   0    2    0
738     0    3    6    0    2    0       1       1    4   7  18   0    0    0
764     2    6    0    0    6    4       1       0   28   0  29  15    0    2
790     1    1    6    4    5    6       1       1   29   0  28  26    0    1
917     0    6    5    5    6    6       0       1   19   0   1  28    0    1
1176    0    5    1    5    6    3       0       0    0  29  25   0    1    0
1213    2    2    0    2    6    3       1       0    3   0   9   0    1    0
1320    0    3    0    0    5    3       0       1   21   0   5  28    0    0
1471    1    6    2    0    4    1       0       1   27   4   6   0    0    0
1649    6    3    5    5    4    4       1       1    8   0  28   5    0    0
1670    0    0    6    4    1    4       0       0   25  26  16   0    0    2
1734    1    1    6    6    6    4       1       0   19   9   0   2    1    0
1989    1    6    0    2    0    3       1       0    2   2   0   4    0    0
2016    2    6    0    1    0    4       1       0    0  18  28   0    0    1
2036    1    3    2    4    1    0       1       0    0  25   7   0    0    2
2040    3    4    3    1    0    2       0       0   15   0   1   4    0    1
2100    1    3    5    3    5    6       0       1   28   0  25   0    0    0
2168    6    3    4    4    4    5       1       1    6   0  22  18    2    0
2265    0    5    1    5    0    1       1       0   27  29   0  18    1    1
2299    0    2    1    6    1    3       0       0   26   4   0  19    2    0
2550    4    1    1    6    0    6       0       1    4  29   0  28    0    0
2589    6    4    2    0    5    6       0       0   29  29   0   1    0    0
2834    6    6    1    5    0    1       0       0    6   4   0  29    0    2
2886    2    0    6    0    4    4       0       0    3   0   0  23    0    0
2916    0    6    2    4    0    0       0       0   28   0  20  24    0    0
3414    2    4    6    5    2    5       1       1   26  27   4   0    1    0
3453    1    5    4    6    6    0       0       1    7   9   0   0    0    0
3497    6    0    0    5    6    0       1       1   28   0   4  10    0    0
3581    6    6    5    0    0    5       1       1    0  18   2   0    1    0
3743    3    2    1    6    4    6       1       0    0  16   9   0    1    1
3763    1    0    6    2    6    0       0       1   20  25   0  21    1    1
3785    5    0    6    6    6    5       1       0    6  28  14   0    2    0
3880    5    4    4    6    2    2       1       1   20   0   0   1    1    1
3985    5    0    0    3    1    2       0       0    1   7   0  28    0    0
3999    2    0    2    3    1    6       0       1    4  13  27   0    1    0
4020    3    0    2    5    5    3       1       1   28   6  11   0    0    0
4026    3    1    3    0    4    3       0       1    0   0   4   5    0    2
4349    5    6    4    6    4    0       0       0    2  25   1   0    1    0
4426    3    6    0    6    4    4       0       1    1  25   0  11    0    1
4537    5    2    3    3    4    2       0       0   23   3   9   0    0    1
     RT_K SCR VEC1 VEC2
180     0   1    1    1
364     1   0    0    0
420     1   0    0    1
454     0   0    0    1
560     0   1    1    1
573     0   0    1    0
602     0   1    1    1
738     2   0    1    0
764     0   0    0    0
790     1   0    0    0
917     1   0    0    1
1176    1   1    0    1
1213    0   0    1    1
1320    1   1    0    0
1471    0   0    0    1
1649    0   1    1    1
1670    0   1    1    1
1734    1   1    1    1
1989    2   1    0    0
2016    1   1    1    1
2036    0   0    1    0
2040    1   1    1    0
2100    0   1    1    0
2168    0   0    1    1
2265    0   0    1    0
2299    0   0    0    0
2550    1   0    1    0
2589    2   0    0    1
2834    0   1    1    0
2886    2   1    0    1
2916    0   0    1    0
3414    0   1    0    0
3453    0   1    1    0
3497    2   1    1    1
3581    1   0    1    1
3743    0   1    0    1
3763    0   1    1    0
3785    0   0    1    0
3880    0   1    0    1
3985    1   0    1    0
3999    1   1    0    0
4020    2   0    1    1
4026    0   1    0    1
4349    0   1    1    1
4426    0   0    1    1
4537    1   1    1    0

D-Efficiency Approximation: [1] 0.324

Measuring design of size 46
Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = kkk
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	5
        Additions: 		2592
        Multiplications: 	1224
        Divisions: 		0
        Logical: 		0
        Reads: 			5091
        Writes: 		877
        Comparisons:		21
        Gotos: 			0
        
 building the original code:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -DORIGINAL -o __orio_perftest_original.exe __orio_perftest1.c timer_cpu.o -lm
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest1.exe __orio_perftest1.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest1.exe  
Program Test Output: 
{'[5, 4, 5, 0, 3, 3, 0, 0, 29, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.104269}
{'[5, 4, 5, 0, 3, 3, 0, 0, 29, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.1042}
{'[5, 4, 5, 0, 3, 3, 0, 0, 29, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.104184}
{'[5, 4, 5, 0, 3, 3, 0, 0, 29, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.104243}
{'[5, 4, 5, 0, 3, 3, 0, 0, 29, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.104245}
{'[5, 4, 5, 0, 3, 3, 0, 0, 29, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.0932078}
{'[5, 4, 5, 0, 3, 3, 0, 0, 29, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.0894001}
{'[5, 4, 5, 0, 3, 3, 0, 0, 29, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.0894208}
{'[5, 4, 5, 0, 3, 3, 0, 0, 29, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.0893929}
{'[5, 4, 5, 0, 3, 3, 0, 0, 29, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.0898299}
{'[5, 4, 5, 0, 3, 3, 0, 0, 29, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.0894921}
{'[5, 4, 5, 0, 3, 3, 0, 0, 29, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.0893469}
{'[5, 4, 5, 0, 3, 3, 0, 0, 29, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.089344}
{'[5, 4, 5, 0, 3, 3, 0, 0, 29, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.089366}
{'[5, 4, 5, 0, 3, 3, 0, 0, 29, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.0894251}
{'[5, 4, 5, 0, 3, 3, 0, 0, 29, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.0893831}
{'[5, 4, 5, 0, 3, 3, 0, 0, 29, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.0894189}
{'[5, 4, 5, 0, 3, 3, 0, 0, 29, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.0893629}
{'[5, 4, 5, 0, 3, 3, 0, 0, 29, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.0897911}
{'[5, 4, 5, 0, 3, 3, 0, 0, 29, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.089391}
{'[5, 4, 5, 0, 3, 3, 0, 0, 29, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.089406}
{'[5, 4, 5, 0, 3, 3, 0, 0, 29, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.0894079}
{'[5, 4, 5, 0, 3, 3, 0, 0, 29, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.089401}
{'[5, 4, 5, 0, 3, 3, 0, 0, 29, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.0893719}
{'[5, 4, 5, 0, 3, 3, 0, 0, 29, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.0896139}
{'[5, 4, 5, 0, 3, 3, 0, 0, 29, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.089386}
{'[5, 4, 5, 0, 3, 3, 0, 0, 29, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.090024}
{'[5, 4, 5, 0, 3, 3, 0, 0, 29, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.0894389}
{'[5, 4, 5, 0, 3, 3, 0, 0, 29, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.0894282}
{'[5, 4, 5, 0, 3, 3, 0, 0, 29, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.0895901}

out:
 ["{'[5, 4, 5, 0, 3, 3, 0, 0, 29, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.104269}", "{'[5, 4, 5, 0, 3, 3, 0, 0, 29, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.1042}", "{'[5, 4, 5, 0, 3, 3, 0, 0, 29, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.104184}", "{'[5, 4, 5, 0, 3, 3, 0, 0, 29, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.104243}", "{'[5, 4, 5, 0, 3, 3, 0, 0, 29, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.104245}", "{'[5, 4, 5, 0, 3, 3, 0, 0, 29, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.0932078}", "{'[5, 4, 5, 0, 3, 3, 0, 0, 29, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.0894001}", "{'[5, 4, 5, 0, 3, 3, 0, 0, 29, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.0894208}", "{'[5, 4, 5, 0, 3, 3, 0, 0, 29, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.0893929}", "{'[5, 4, 5, 0, 3, 3, 0, 0, 29, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.0898299}", "{'[5, 4, 5, 0, 3, 3, 0, 0, 29, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.0894921}", "{'[5, 4, 5, 0, 3, 3, 0, 0, 29, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.0893469}", "{'[5, 4, 5, 0, 3, 3, 0, 0, 29, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.089344}", "{'[5, 4, 5, 0, 3, 3, 0, 0, 29, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.089366}", "{'[5, 4, 5, 0, 3, 3, 0, 0, 29, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.0894251}", "{'[5, 4, 5, 0, 3, 3, 0, 0, 29, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.0893831}", "{'[5, 4, 5, 0, 3, 3, 0, 0, 29, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.0894189}", "{'[5, 4, 5, 0, 3, 3, 0, 0, 29, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.0893629}", "{'[5, 4, 5, 0, 3, 3, 0, 0, 29, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.0897911}", "{'[5, 4, 5, 0, 3, 3, 0, 0, 29, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.089391}", "{'[5, 4, 5, 0, 3, 3, 0, 0, 29, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.089406}", "{'[5, 4, 5, 0, 3, 3, 0, 0, 29, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.0894079}", "{'[5, 4, 5, 0, 3, 3, 0, 0, 29, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.089401}", "{'[5, 4, 5, 0, 3, 3, 0, 0, 29, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.0893719}", "{'[5, 4, 5, 0, 3, 3, 0, 0, 29, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.0896139}", "{'[5, 4, 5, 0, 3, 3, 0, 0, 29, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.089386}", "{'[5, 4, 5, 0, 3, 3, 0, 0, 29, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.090024}", "{'[5, 4, 5, 0, 3, 3, 0, 0, 29, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.0894389}", "{'[5, 4, 5, 0, 3, 3, 0, 0, 29, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.0894282}", "{'[5, 4, 5, 0, 3, 3, 0, 0, 29, 0, 29, 27, 1, 1, 0, 1, 1, 1]' : 0.0895901}"]
returning from 'run': {'[5, 4, 5, 0, 3, 3, 0, 0, 29, 0, 29, 27, 1, 1, 0, 1, 1, 1]': ([0.104269, 0.1042, 0.104184, 0.104243, 0.104245, 0.0932078, 0.0894001, 0.0894208, 0.0893929, 0.0898299, 0.0894921, 0.0893469, 0.089344, 0.089366, 0.0894251, 0.0893831, 0.0894189, 0.0893629, 0.0897911, 0.089391, 0.089406, 0.0894079, 0.089401, 0.0893719, 0.0896139, 0.089386, 0.090024, 0.0894389, 0.0894282, 0.0895901], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 4, 5, 0, 3, 3, 0, 0, 29, 0, 29, 27, 1, 1, 0, 1, 1, 1]': ([0.104269, 0.1042, 0.104184, 0.104243, 0.104245, 0.0932078, 0.0894001, 0.0894208, 0.0893929, 0.0898299, 0.0894921, 0.0893469, 0.089344, 0.089366, 0.0894251, 0.0893831, 0.0894189, 0.0893629, 0.0897911, 0.089391, 0.089406, 0.0894079, 0.089401, 0.0893719, 0.0896139, 0.089386, 0.090024, 0.0894389, 0.0894282, 0.0895901], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	4
        Additions: 		107
        Multiplications: 	18
        Divisions: 		0
        Logical: 		0
        Reads: 			226
        Writes: 		55
        Comparisons:		10
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest2.exe __orio_perftest2.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest2.exe  
Program Test Output: 
{'[6, 0, 1, 0, 6, 0, 0, 1, 21, 0, 0, 1, 0, 0, 1, 0, 0, 0]' : 0.488829}
{'[6, 0, 1, 0, 6, 0, 0, 1, 21, 0, 0, 1, 0, 0, 1, 0, 0, 0]' : 0.433241}
{'[6, 0, 1, 0, 6, 0, 0, 1, 21, 0, 0, 1, 0, 0, 1, 0, 0, 0]' : 0.419185}
{'[6, 0, 1, 0, 6, 0, 0, 1, 21, 0, 0, 1, 0, 0, 1, 0, 0, 0]' : 0.431296}
{'[6, 0, 1, 0, 6, 0, 0, 1, 21, 0, 0, 1, 0, 0, 1, 0, 0, 0]' : 0.428449}
{'[6, 0, 1, 0, 6, 0, 0, 1, 21, 0, 0, 1, 0, 0, 1, 0, 0, 0]' : 0.432824}
{'[6, 0, 1, 0, 6, 0, 0, 1, 21, 0, 0, 1, 0, 0, 1, 0, 0, 0]' : 0.435181}
{'[6, 0, 1, 0, 6, 0, 0, 1, 21, 0, 0, 1, 0, 0, 1, 0, 0, 0]' : 0.431449}
{'[6, 0, 1, 0, 6, 0, 0, 1, 21, 0, 0, 1, 0, 0, 1, 0, 0, 0]' : 0.431471}
{'[6, 0, 1, 0, 6, 0, 0, 1, 21, 0, 0, 1, 0, 0, 1, 0, 0, 0]' : 0.418916}
{'[6, 0, 1, 0, 6, 0, 0, 1, 21, 0, 0, 1, 0, 0, 1, 0, 0, 0]' : 0.430803}
{'[6, 0, 1, 0, 6, 0, 0, 1, 21, 0, 0, 1, 0, 0, 1, 0, 0, 0]' : 0.43134}
{'[6, 0, 1, 0, 6, 0, 0, 1, 21, 0, 0, 1, 0, 0, 1, 0, 0, 0]' : 0.432052}
{'[6, 0, 1, 0, 6, 0, 0, 1, 21, 0, 0, 1, 0, 0, 1, 0, 0, 0]' : 0.431401}
{'[6, 0, 1, 0, 6, 0, 0, 1, 21, 0, 0, 1, 0, 0, 1, 0, 0, 0]' : 0.43568}
{'[6, 0, 1, 0, 6, 0, 0, 1, 21, 0, 0, 1, 0, 0, 1, 0, 0, 0]' : 0.442385}
{'[6, 0, 1, 0, 6, 0, 0, 1, 21, 0, 0, 1, 0, 0, 1, 0, 0, 0]' : 0.418348}
{'[6, 0, 1, 0, 6, 0, 0, 1, 21, 0, 0, 1, 0, 0, 1, 0, 0, 0]' : 0.431476}
{'[6, 0, 1, 0, 6, 0, 0, 1, 21, 0, 0, 1, 0, 0, 1, 0, 0, 0]' : 0.431781}
{'[6, 0, 1, 0, 6, 0, 0, 1, 21, 0, 0, 1, 0, 0, 1, 0, 0, 0]' : 0.428617}
{'[6, 0, 1, 0, 6, 0, 0, 1, 21, 0, 0, 1, 0, 0, 1, 0, 0, 0]' : 0.431347}
{'[6, 0, 1, 0, 6, 0, 0, 1, 21, 0, 0, 1, 0, 0, 1, 0, 0, 0]' : 0.431243}
{'[6, 0, 1, 0, 6, 0, 0, 1, 21, 0, 0, 1, 0, 0, 1, 0, 0, 0]' : 0.434187}
{'[6, 0, 1, 0, 6, 0, 0, 1, 21, 0, 0, 1, 0, 0, 1, 0, 0, 0]' : 0.430468}
{'[6, 0, 1, 0, 6, 0, 0, 1, 21, 0, 0, 1, 0, 0, 1, 0, 0, 0]' : 0.431104}
{'[6, 0, 1, 0, 6, 0, 0, 1, 21, 0, 0, 1, 0, 0, 1, 0, 0, 0]' : 0.425699}
{'[6, 0, 1, 0, 6, 0, 0, 1, 21, 0, 0, 1, 0, 0, 1, 0, 0, 0]' : 0.427134}
{'[6, 0, 1, 0, 6, 0, 0, 1, 21, 0, 0, 1, 0, 0, 1, 0, 0, 0]' : 0.431413}
{'[6, 0, 1, 0, 6, 0, 0, 1, 21, 0, 0, 1, 0, 0, 1, 0, 0, 0]' : 0.429024}
{'[6, 0, 1, 0, 6, 0, 0, 1, 21, 0, 0, 1, 0, 0, 1, 0, 0, 0]' : 0.434149}

out:
 ["{'[6, 0, 1, 0, 6, 0, 0, 1, 21, 0, 0, 1, 0, 0, 1, 0, 0, 0]' : 0.488829}", "{'[6, 0, 1, 0, 6, 0, 0, 1, 21, 0, 0, 1, 0, 0, 1, 0, 0, 0]' : 0.433241}", "{'[6, 0, 1, 0, 6, 0, 0, 1, 21, 0, 0, 1, 0, 0, 1, 0, 0, 0]' : 0.419185}", "{'[6, 0, 1, 0, 6, 0, 0, 1, 21, 0, 0, 1, 0, 0, 1, 0, 0, 0]' : 0.431296}", "{'[6, 0, 1, 0, 6, 0, 0, 1, 21, 0, 0, 1, 0, 0, 1, 0, 0, 0]' : 0.428449}", "{'[6, 0, 1, 0, 6, 0, 0, 1, 21, 0, 0, 1, 0, 0, 1, 0, 0, 0]' : 0.432824}", "{'[6, 0, 1, 0, 6, 0, 0, 1, 21, 0, 0, 1, 0, 0, 1, 0, 0, 0]' : 0.435181}", "{'[6, 0, 1, 0, 6, 0, 0, 1, 21, 0, 0, 1, 0, 0, 1, 0, 0, 0]' : 0.431449}", "{'[6, 0, 1, 0, 6, 0, 0, 1, 21, 0, 0, 1, 0, 0, 1, 0, 0, 0]' : 0.431471}", "{'[6, 0, 1, 0, 6, 0, 0, 1, 21, 0, 0, 1, 0, 0, 1, 0, 0, 0]' : 0.418916}", "{'[6, 0, 1, 0, 6, 0, 0, 1, 21, 0, 0, 1, 0, 0, 1, 0, 0, 0]' : 0.430803}", "{'[6, 0, 1, 0, 6, 0, 0, 1, 21, 0, 0, 1, 0, 0, 1, 0, 0, 0]' : 0.43134}", "{'[6, 0, 1, 0, 6, 0, 0, 1, 21, 0, 0, 1, 0, 0, 1, 0, 0, 0]' : 0.432052}", "{'[6, 0, 1, 0, 6, 0, 0, 1, 21, 0, 0, 1, 0, 0, 1, 0, 0, 0]' : 0.431401}", "{'[6, 0, 1, 0, 6, 0, 0, 1, 21, 0, 0, 1, 0, 0, 1, 0, 0, 0]' : 0.43568}", "{'[6, 0, 1, 0, 6, 0, 0, 1, 21, 0, 0, 1, 0, 0, 1, 0, 0, 0]' : 0.442385}", "{'[6, 0, 1, 0, 6, 0, 0, 1, 21, 0, 0, 1, 0, 0, 1, 0, 0, 0]' : 0.418348}", "{'[6, 0, 1, 0, 6, 0, 0, 1, 21, 0, 0, 1, 0, 0, 1, 0, 0, 0]' : 0.431476}", "{'[6, 0, 1, 0, 6, 0, 0, 1, 21, 0, 0, 1, 0, 0, 1, 0, 0, 0]' : 0.431781}", "{'[6, 0, 1, 0, 6, 0, 0, 1, 21, 0, 0, 1, 0, 0, 1, 0, 0, 0]' : 0.428617}", "{'[6, 0, 1, 0, 6, 0, 0, 1, 21, 0, 0, 1, 0, 0, 1, 0, 0, 0]' : 0.431347}", "{'[6, 0, 1, 0, 6, 0, 0, 1, 21, 0, 0, 1, 0, 0, 1, 0, 0, 0]' : 0.431243}", "{'[6, 0, 1, 0, 6, 0, 0, 1, 21, 0, 0, 1, 0, 0, 1, 0, 0, 0]' : 0.434187}", "{'[6, 0, 1, 0, 6, 0, 0, 1, 21, 0, 0, 1, 0, 0, 1, 0, 0, 0]' : 0.430468}", "{'[6, 0, 1, 0, 6, 0, 0, 1, 21, 0, 0, 1, 0, 0, 1, 0, 0, 0]' : 0.431104}", "{'[6, 0, 1, 0, 6, 0, 0, 1, 21, 0, 0, 1, 0, 0, 1, 0, 0, 0]' : 0.425699}", "{'[6, 0, 1, 0, 6, 0, 0, 1, 21, 0, 0, 1, 0, 0, 1, 0, 0, 0]' : 0.427134}", "{'[6, 0, 1, 0, 6, 0, 0, 1, 21, 0, 0, 1, 0, 0, 1, 0, 0, 0]' : 0.431413}", "{'[6, 0, 1, 0, 6, 0, 0, 1, 21, 0, 0, 1, 0, 0, 1, 0, 0, 0]' : 0.429024}", "{'[6, 0, 1, 0, 6, 0, 0, 1, 21, 0, 0, 1, 0, 0, 1, 0, 0, 0]' : 0.434149}"]
returning from 'run': {'[6, 0, 1, 0, 6, 0, 0, 1, 21, 0, 0, 1, 0, 0, 1, 0, 0, 0]': ([0.488829, 0.433241, 0.419185, 0.431296, 0.428449, 0.432824, 0.435181, 0.431449, 0.431471, 0.418916, 0.430803, 0.43134, 0.432052, 0.431401, 0.43568, 0.442385, 0.418348, 0.431476, 0.431781, 0.428617, 0.431347, 0.431243, 0.434187, 0.430468, 0.431104, 0.425699, 0.427134, 0.431413, 0.429024, 0.434149], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 1, 0, 6, 0, 0, 1, 21, 0, 0, 1, 0, 0, 1, 0, 0, 0]': ([0.488829, 0.433241, 0.419185, 0.431296, 0.428449, 0.432824, 0.435181, 0.431449, 0.431471, 0.418916, 0.430803, 0.43134, 0.432052, 0.431401, 0.43568, 0.442385, 0.418348, 0.431476, 0.431781, 0.428617, 0.431347, 0.431243, 0.434187, 0.430468, 0.431104, 0.425699, 0.427134, 0.431413, 0.429024, 0.434149], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	5
        Additions: 		2543
        Multiplications: 	792
        Divisions: 		0
        Logical: 		0
        Reads: 			4194
        Writes: 		481
        Comparisons:		20
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest3.exe __orio_perftest3.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest3.exe  
Program Test Output: 
{'[5, 1, 6, 6, 0, 4, 0, 0, 27, 0, 29, 3, 1, 0, 1, 0, 0, 1]' : 0.110526}
{'[5, 1, 6, 6, 0, 4, 0, 0, 27, 0, 29, 3, 1, 0, 1, 0, 0, 1]' : 0.110921}
{'[5, 1, 6, 6, 0, 4, 0, 0, 27, 0, 29, 3, 1, 0, 1, 0, 0, 1]' : 0.110404}
{'[5, 1, 6, 6, 0, 4, 0, 0, 27, 0, 29, 3, 1, 0, 1, 0, 0, 1]' : 0.110606}
{'[5, 1, 6, 6, 0, 4, 0, 0, 27, 0, 29, 3, 1, 0, 1, 0, 0, 1]' : 0.11038}
{'[5, 1, 6, 6, 0, 4, 0, 0, 27, 0, 29, 3, 1, 0, 1, 0, 0, 1]' : 0.108439}
{'[5, 1, 6, 6, 0, 4, 0, 0, 27, 0, 29, 3, 1, 0, 1, 0, 0, 1]' : 0.110332}
{'[5, 1, 6, 6, 0, 4, 0, 0, 27, 0, 29, 3, 1, 0, 1, 0, 0, 1]' : 0.110384}
{'[5, 1, 6, 6, 0, 4, 0, 0, 27, 0, 29, 3, 1, 0, 1, 0, 0, 1]' : 0.110545}
{'[5, 1, 6, 6, 0, 4, 0, 0, 27, 0, 29, 3, 1, 0, 1, 0, 0, 1]' : 0.110387}
{'[5, 1, 6, 6, 0, 4, 0, 0, 27, 0, 29, 3, 1, 0, 1, 0, 0, 1]' : 0.110371}
{'[5, 1, 6, 6, 0, 4, 0, 0, 27, 0, 29, 3, 1, 0, 1, 0, 0, 1]' : 0.110765}
{'[5, 1, 6, 6, 0, 4, 0, 0, 27, 0, 29, 3, 1, 0, 1, 0, 0, 1]' : 0.110783}
{'[5, 1, 6, 6, 0, 4, 0, 0, 27, 0, 29, 3, 1, 0, 1, 0, 0, 1]' : 0.113311}
{'[5, 1, 6, 6, 0, 4, 0, 0, 27, 0, 29, 3, 1, 0, 1, 0, 0, 1]' : 0.113034}
{'[5, 1, 6, 6, 0, 4, 0, 0, 27, 0, 29, 3, 1, 0, 1, 0, 0, 1]' : 0.113108}
{'[5, 1, 6, 6, 0, 4, 0, 0, 27, 0, 29, 3, 1, 0, 1, 0, 0, 1]' : 0.113065}
{'[5, 1, 6, 6, 0, 4, 0, 0, 27, 0, 29, 3, 1, 0, 1, 0, 0, 1]' : 0.1132}
{'[5, 1, 6, 6, 0, 4, 0, 0, 27, 0, 29, 3, 1, 0, 1, 0, 0, 1]' : 0.112947}
{'[5, 1, 6, 6, 0, 4, 0, 0, 27, 0, 29, 3, 1, 0, 1, 0, 0, 1]' : 0.113012}
{'[5, 1, 6, 6, 0, 4, 0, 0, 27, 0, 29, 3, 1, 0, 1, 0, 0, 1]' : 0.11305}
{'[5, 1, 6, 6, 0, 4, 0, 0, 27, 0, 29, 3, 1, 0, 1, 0, 0, 1]' : 0.113271}
{'[5, 1, 6, 6, 0, 4, 0, 0, 27, 0, 29, 3, 1, 0, 1, 0, 0, 1]' : 0.112792}
{'[5, 1, 6, 6, 0, 4, 0, 0, 27, 0, 29, 3, 1, 0, 1, 0, 0, 1]' : 0.108053}
{'[5, 1, 6, 6, 0, 4, 0, 0, 27, 0, 29, 3, 1, 0, 1, 0, 0, 1]' : 0.107833}
{'[5, 1, 6, 6, 0, 4, 0, 0, 27, 0, 29, 3, 1, 0, 1, 0, 0, 1]' : 0.107815}
{'[5, 1, 6, 6, 0, 4, 0, 0, 27, 0, 29, 3, 1, 0, 1, 0, 0, 1]' : 0.111564}
{'[5, 1, 6, 6, 0, 4, 0, 0, 27, 0, 29, 3, 1, 0, 1, 0, 0, 1]' : 0.113169}
{'[5, 1, 6, 6, 0, 4, 0, 0, 27, 0, 29, 3, 1, 0, 1, 0, 0, 1]' : 0.112989}
{'[5, 1, 6, 6, 0, 4, 0, 0, 27, 0, 29, 3, 1, 0, 1, 0, 0, 1]' : 0.113165}

out:
 ["{'[5, 1, 6, 6, 0, 4, 0, 0, 27, 0, 29, 3, 1, 0, 1, 0, 0, 1]' : 0.110526}", "{'[5, 1, 6, 6, 0, 4, 0, 0, 27, 0, 29, 3, 1, 0, 1, 0, 0, 1]' : 0.110921}", "{'[5, 1, 6, 6, 0, 4, 0, 0, 27, 0, 29, 3, 1, 0, 1, 0, 0, 1]' : 0.110404}", "{'[5, 1, 6, 6, 0, 4, 0, 0, 27, 0, 29, 3, 1, 0, 1, 0, 0, 1]' : 0.110606}", "{'[5, 1, 6, 6, 0, 4, 0, 0, 27, 0, 29, 3, 1, 0, 1, 0, 0, 1]' : 0.11038}", "{'[5, 1, 6, 6, 0, 4, 0, 0, 27, 0, 29, 3, 1, 0, 1, 0, 0, 1]' : 0.108439}", "{'[5, 1, 6, 6, 0, 4, 0, 0, 27, 0, 29, 3, 1, 0, 1, 0, 0, 1]' : 0.110332}", "{'[5, 1, 6, 6, 0, 4, 0, 0, 27, 0, 29, 3, 1, 0, 1, 0, 0, 1]' : 0.110384}", "{'[5, 1, 6, 6, 0, 4, 0, 0, 27, 0, 29, 3, 1, 0, 1, 0, 0, 1]' : 0.110545}", "{'[5, 1, 6, 6, 0, 4, 0, 0, 27, 0, 29, 3, 1, 0, 1, 0, 0, 1]' : 0.110387}", "{'[5, 1, 6, 6, 0, 4, 0, 0, 27, 0, 29, 3, 1, 0, 1, 0, 0, 1]' : 0.110371}", "{'[5, 1, 6, 6, 0, 4, 0, 0, 27, 0, 29, 3, 1, 0, 1, 0, 0, 1]' : 0.110765}", "{'[5, 1, 6, 6, 0, 4, 0, 0, 27, 0, 29, 3, 1, 0, 1, 0, 0, 1]' : 0.110783}", "{'[5, 1, 6, 6, 0, 4, 0, 0, 27, 0, 29, 3, 1, 0, 1, 0, 0, 1]' : 0.113311}", "{'[5, 1, 6, 6, 0, 4, 0, 0, 27, 0, 29, 3, 1, 0, 1, 0, 0, 1]' : 0.113034}", "{'[5, 1, 6, 6, 0, 4, 0, 0, 27, 0, 29, 3, 1, 0, 1, 0, 0, 1]' : 0.113108}", "{'[5, 1, 6, 6, 0, 4, 0, 0, 27, 0, 29, 3, 1, 0, 1, 0, 0, 1]' : 0.113065}", "{'[5, 1, 6, 6, 0, 4, 0, 0, 27, 0, 29, 3, 1, 0, 1, 0, 0, 1]' : 0.1132}", "{'[5, 1, 6, 6, 0, 4, 0, 0, 27, 0, 29, 3, 1, 0, 1, 0, 0, 1]' : 0.112947}", "{'[5, 1, 6, 6, 0, 4, 0, 0, 27, 0, 29, 3, 1, 0, 1, 0, 0, 1]' : 0.113012}", "{'[5, 1, 6, 6, 0, 4, 0, 0, 27, 0, 29, 3, 1, 0, 1, 0, 0, 1]' : 0.11305}", "{'[5, 1, 6, 6, 0, 4, 0, 0, 27, 0, 29, 3, 1, 0, 1, 0, 0, 1]' : 0.113271}", "{'[5, 1, 6, 6, 0, 4, 0, 0, 27, 0, 29, 3, 1, 0, 1, 0, 0, 1]' : 0.112792}", "{'[5, 1, 6, 6, 0, 4, 0, 0, 27, 0, 29, 3, 1, 0, 1, 0, 0, 1]' : 0.108053}", "{'[5, 1, 6, 6, 0, 4, 0, 0, 27, 0, 29, 3, 1, 0, 1, 0, 0, 1]' : 0.107833}", "{'[5, 1, 6, 6, 0, 4, 0, 0, 27, 0, 29, 3, 1, 0, 1, 0, 0, 1]' : 0.107815}", "{'[5, 1, 6, 6, 0, 4, 0, 0, 27, 0, 29, 3, 1, 0, 1, 0, 0, 1]' : 0.111564}", "{'[5, 1, 6, 6, 0, 4, 0, 0, 27, 0, 29, 3, 1, 0, 1, 0, 0, 1]' : 0.113169}", "{'[5, 1, 6, 6, 0, 4, 0, 0, 27, 0, 29, 3, 1, 0, 1, 0, 0, 1]' : 0.112989}", "{'[5, 1, 6, 6, 0, 4, 0, 0, 27, 0, 29, 3, 1, 0, 1, 0, 0, 1]' : 0.113165}"]
returning from 'run': {'[5, 1, 6, 6, 0, 4, 0, 0, 27, 0, 29, 3, 1, 0, 1, 0, 0, 1]': ([0.110526, 0.110921, 0.110404, 0.110606, 0.11038, 0.108439, 0.110332, 0.110384, 0.110545, 0.110387, 0.110371, 0.110765, 0.110783, 0.113311, 0.113034, 0.113108, 0.113065, 0.1132, 0.112947, 0.113012, 0.11305, 0.113271, 0.112792, 0.108053, 0.107833, 0.107815, 0.111564, 0.113169, 0.112989, 0.113165], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 1, 6, 6, 0, 4, 0, 0, 27, 0, 29, 3, 1, 0, 1, 0, 0, 1]': ([0.110526, 0.110921, 0.110404, 0.110606, 0.11038, 0.108439, 0.110332, 0.110384, 0.110545, 0.110387, 0.110371, 0.110765, 0.110783, 0.113311, 0.113034, 0.113108, 0.113065, 0.1132, 0.112947, 0.113012, 0.11305, 0.113271, 0.112792, 0.108053, 0.107833, 0.107815, 0.111564, 0.113169, 0.112989, 0.113165], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	41
        Max loop nest depth: 	4
        Additions: 		4830
        Multiplications: 	1404
        Divisions: 		0
        Logical: 		0
        Reads: 			7553
        Writes: 		855
        Comparisons:		41
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest4.exe __orio_perftest4.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest4.exe  
Program Test Output: 
{'[6, 1, 1, 0, 0, 0, 1, 0, 9, 24, 0, 24, 0, 0, 0, 0, 0, 1]' : 0.206011}
{'[6, 1, 1, 0, 0, 0, 1, 0, 9, 24, 0, 24, 0, 0, 0, 0, 0, 1]' : 0.206063}
{'[6, 1, 1, 0, 0, 0, 1, 0, 9, 24, 0, 24, 0, 0, 0, 0, 0, 1]' : 0.182407}
{'[6, 1, 1, 0, 0, 0, 1, 0, 9, 24, 0, 24, 0, 0, 0, 0, 0, 1]' : 0.175474}
{'[6, 1, 1, 0, 0, 0, 1, 0, 9, 24, 0, 24, 0, 0, 0, 0, 0, 1]' : 0.175597}
{'[6, 1, 1, 0, 0, 0, 1, 0, 9, 24, 0, 24, 0, 0, 0, 0, 0, 1]' : 0.175521}
{'[6, 1, 1, 0, 0, 0, 1, 0, 9, 24, 0, 24, 0, 0, 0, 0, 0, 1]' : 0.176244}
{'[6, 1, 1, 0, 0, 0, 1, 0, 9, 24, 0, 24, 0, 0, 0, 0, 0, 1]' : 0.175578}
{'[6, 1, 1, 0, 0, 0, 1, 0, 9, 24, 0, 24, 0, 0, 0, 0, 0, 1]' : 0.1758}
{'[6, 1, 1, 0, 0, 0, 1, 0, 9, 24, 0, 24, 0, 0, 0, 0, 0, 1]' : 0.17566}
{'[6, 1, 1, 0, 0, 0, 1, 0, 9, 24, 0, 24, 0, 0, 0, 0, 0, 1]' : 0.175644}
{'[6, 1, 1, 0, 0, 0, 1, 0, 9, 24, 0, 24, 0, 0, 0, 0, 0, 1]' : 0.175972}
{'[6, 1, 1, 0, 0, 0, 1, 0, 9, 24, 0, 24, 0, 0, 0, 0, 0, 1]' : 0.175618}
{'[6, 1, 1, 0, 0, 0, 1, 0, 9, 24, 0, 24, 0, 0, 0, 0, 0, 1]' : 0.175625}
{'[6, 1, 1, 0, 0, 0, 1, 0, 9, 24, 0, 24, 0, 0, 0, 0, 0, 1]' : 0.17669}
{'[6, 1, 1, 0, 0, 0, 1, 0, 9, 24, 0, 24, 0, 0, 0, 0, 0, 1]' : 0.17564}
{'[6, 1, 1, 0, 0, 0, 1, 0, 9, 24, 0, 24, 0, 0, 0, 0, 0, 1]' : 0.175593}
{'[6, 1, 1, 0, 0, 0, 1, 0, 9, 24, 0, 24, 0, 0, 0, 0, 0, 1]' : 0.176176}
{'[6, 1, 1, 0, 0, 0, 1, 0, 9, 24, 0, 24, 0, 0, 0, 0, 0, 1]' : 0.175568}
{'[6, 1, 1, 0, 0, 0, 1, 0, 9, 24, 0, 24, 0, 0, 0, 0, 0, 1]' : 0.176005}
{'[6, 1, 1, 0, 0, 0, 1, 0, 9, 24, 0, 24, 0, 0, 0, 0, 0, 1]' : 0.175668}
{'[6, 1, 1, 0, 0, 0, 1, 0, 9, 24, 0, 24, 0, 0, 0, 0, 0, 1]' : 0.175537}
{'[6, 1, 1, 0, 0, 0, 1, 0, 9, 24, 0, 24, 0, 0, 0, 0, 0, 1]' : 0.175647}
{'[6, 1, 1, 0, 0, 0, 1, 0, 9, 24, 0, 24, 0, 0, 0, 0, 0, 1]' : 0.176632}
{'[6, 1, 1, 0, 0, 0, 1, 0, 9, 24, 0, 24, 0, 0, 0, 0, 0, 1]' : 0.175651}
{'[6, 1, 1, 0, 0, 0, 1, 0, 9, 24, 0, 24, 0, 0, 0, 0, 0, 1]' : 0.17561}
{'[6, 1, 1, 0, 0, 0, 1, 0, 9, 24, 0, 24, 0, 0, 0, 0, 0, 1]' : 0.175637}
{'[6, 1, 1, 0, 0, 0, 1, 0, 9, 24, 0, 24, 0, 0, 0, 0, 0, 1]' : 0.175738}
{'[6, 1, 1, 0, 0, 0, 1, 0, 9, 24, 0, 24, 0, 0, 0, 0, 0, 1]' : 0.175628}
{'[6, 1, 1, 0, 0, 0, 1, 0, 9, 24, 0, 24, 0, 0, 0, 0, 0, 1]' : 0.176233}

out:
 ["{'[6, 1, 1, 0, 0, 0, 1, 0, 9, 24, 0, 24, 0, 0, 0, 0, 0, 1]' : 0.206011}", "{'[6, 1, 1, 0, 0, 0, 1, 0, 9, 24, 0, 24, 0, 0, 0, 0, 0, 1]' : 0.206063}", "{'[6, 1, 1, 0, 0, 0, 1, 0, 9, 24, 0, 24, 0, 0, 0, 0, 0, 1]' : 0.182407}", "{'[6, 1, 1, 0, 0, 0, 1, 0, 9, 24, 0, 24, 0, 0, 0, 0, 0, 1]' : 0.175474}", "{'[6, 1, 1, 0, 0, 0, 1, 0, 9, 24, 0, 24, 0, 0, 0, 0, 0, 1]' : 0.175597}", "{'[6, 1, 1, 0, 0, 0, 1, 0, 9, 24, 0, 24, 0, 0, 0, 0, 0, 1]' : 0.175521}", "{'[6, 1, 1, 0, 0, 0, 1, 0, 9, 24, 0, 24, 0, 0, 0, 0, 0, 1]' : 0.176244}", "{'[6, 1, 1, 0, 0, 0, 1, 0, 9, 24, 0, 24, 0, 0, 0, 0, 0, 1]' : 0.175578}", "{'[6, 1, 1, 0, 0, 0, 1, 0, 9, 24, 0, 24, 0, 0, 0, 0, 0, 1]' : 0.1758}", "{'[6, 1, 1, 0, 0, 0, 1, 0, 9, 24, 0, 24, 0, 0, 0, 0, 0, 1]' : 0.17566}", "{'[6, 1, 1, 0, 0, 0, 1, 0, 9, 24, 0, 24, 0, 0, 0, 0, 0, 1]' : 0.175644}", "{'[6, 1, 1, 0, 0, 0, 1, 0, 9, 24, 0, 24, 0, 0, 0, 0, 0, 1]' : 0.175972}", "{'[6, 1, 1, 0, 0, 0, 1, 0, 9, 24, 0, 24, 0, 0, 0, 0, 0, 1]' : 0.175618}", "{'[6, 1, 1, 0, 0, 0, 1, 0, 9, 24, 0, 24, 0, 0, 0, 0, 0, 1]' : 0.175625}", "{'[6, 1, 1, 0, 0, 0, 1, 0, 9, 24, 0, 24, 0, 0, 0, 0, 0, 1]' : 0.17669}", "{'[6, 1, 1, 0, 0, 0, 1, 0, 9, 24, 0, 24, 0, 0, 0, 0, 0, 1]' : 0.17564}", "{'[6, 1, 1, 0, 0, 0, 1, 0, 9, 24, 0, 24, 0, 0, 0, 0, 0, 1]' : 0.175593}", "{'[6, 1, 1, 0, 0, 0, 1, 0, 9, 24, 0, 24, 0, 0, 0, 0, 0, 1]' : 0.176176}", "{'[6, 1, 1, 0, 0, 0, 1, 0, 9, 24, 0, 24, 0, 0, 0, 0, 0, 1]' : 0.175568}", "{'[6, 1, 1, 0, 0, 0, 1, 0, 9, 24, 0, 24, 0, 0, 0, 0, 0, 1]' : 0.176005}", "{'[6, 1, 1, 0, 0, 0, 1, 0, 9, 24, 0, 24, 0, 0, 0, 0, 0, 1]' : 0.175668}", "{'[6, 1, 1, 0, 0, 0, 1, 0, 9, 24, 0, 24, 0, 0, 0, 0, 0, 1]' : 0.175537}", "{'[6, 1, 1, 0, 0, 0, 1, 0, 9, 24, 0, 24, 0, 0, 0, 0, 0, 1]' : 0.175647}", "{'[6, 1, 1, 0, 0, 0, 1, 0, 9, 24, 0, 24, 0, 0, 0, 0, 0, 1]' : 0.176632}", "{'[6, 1, 1, 0, 0, 0, 1, 0, 9, 24, 0, 24, 0, 0, 0, 0, 0, 1]' : 0.175651}", "{'[6, 1, 1, 0, 0, 0, 1, 0, 9, 24, 0, 24, 0, 0, 0, 0, 0, 1]' : 0.17561}", "{'[6, 1, 1, 0, 0, 0, 1, 0, 9, 24, 0, 24, 0, 0, 0, 0, 0, 1]' : 0.175637}", "{'[6, 1, 1, 0, 0, 0, 1, 0, 9, 24, 0, 24, 0, 0, 0, 0, 0, 1]' : 0.175738}", "{'[6, 1, 1, 0, 0, 0, 1, 0, 9, 24, 0, 24, 0, 0, 0, 0, 0, 1]' : 0.175628}", "{'[6, 1, 1, 0, 0, 0, 1, 0, 9, 24, 0, 24, 0, 0, 0, 0, 0, 1]' : 0.176233}"]
returning from 'run': {'[6, 1, 1, 0, 0, 0, 1, 0, 9, 24, 0, 24, 0, 0, 0, 0, 0, 1]': ([0.206011, 0.206063, 0.182407, 0.175474, 0.175597, 0.175521, 0.176244, 0.175578, 0.1758, 0.17566, 0.175644, 0.175972, 0.175618, 0.175625, 0.17669, 0.17564, 0.175593, 0.176176, 0.175568, 0.176005, 0.175668, 0.175537, 0.175647, 0.176632, 0.175651, 0.17561, 0.175637, 0.175738, 0.175628, 0.176233], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 1, 1, 0, 0, 0, 1, 0, 9, 24, 0, 24, 0, 0, 0, 0, 0, 1]': ([0.206011, 0.206063, 0.182407, 0.175474, 0.175597, 0.175521, 0.176244, 0.175578, 0.1758, 0.17566, 0.175644, 0.175972, 0.175618, 0.175625, 0.17669, 0.17564, 0.175593, 0.176176, 0.175568, 0.176005, 0.175668, 0.175537, 0.175647, 0.176632, 0.175651, 0.17561, 0.175637, 0.175738, 0.175628, 0.176233], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		4385
        Multiplications: 	2176
        Divisions: 		0
        Logical: 		0
        Reads: 			8111
        Writes: 		1252
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest5.exe __orio_perftest5.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest5.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest5.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest5.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest5.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	27
        Max loop nest depth: 	5
        Additions: 		953
        Multiplications: 	264
        Divisions: 		0
        Logical: 		0
        Reads: 			1727
        Writes: 		213
        Comparisons:		27
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest6.exe __orio_perftest6.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest6.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest6.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest6.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest6.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	4
        Additions: 		4535
        Multiplications: 	2240
        Divisions: 		0
        Logical: 		0
        Reads: 			8498
        Writes: 		1343
        Comparisons:		18
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest7.exe __orio_perftest7.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest7.exe  
Program Test Output: 
{'[1, 3, 0, 0, 0, 0, 0, 1, 21, 6, 25, 0, 2, 0, 0, 1, 1, 1]' : 0.105219}
{'[1, 3, 0, 0, 0, 0, 0, 1, 21, 6, 25, 0, 2, 0, 0, 1, 1, 1]' : 0.105434}
{'[1, 3, 0, 0, 0, 0, 0, 1, 21, 6, 25, 0, 2, 0, 0, 1, 1, 1]' : 0.105255}
{'[1, 3, 0, 0, 0, 0, 0, 1, 21, 6, 25, 0, 2, 0, 0, 1, 1, 1]' : 0.106129}
{'[1, 3, 0, 0, 0, 0, 0, 1, 21, 6, 25, 0, 2, 0, 0, 1, 1, 1]' : 0.107406}
{'[1, 3, 0, 0, 0, 0, 0, 1, 21, 6, 25, 0, 2, 0, 0, 1, 1, 1]' : 0.105129}
{'[1, 3, 0, 0, 0, 0, 0, 1, 21, 6, 25, 0, 2, 0, 0, 1, 1, 1]' : 0.105388}
{'[1, 3, 0, 0, 0, 0, 0, 1, 21, 6, 25, 0, 2, 0, 0, 1, 1, 1]' : 0.105441}
{'[1, 3, 0, 0, 0, 0, 0, 1, 21, 6, 25, 0, 2, 0, 0, 1, 1, 1]' : 0.105268}
{'[1, 3, 0, 0, 0, 0, 0, 1, 21, 6, 25, 0, 2, 0, 0, 1, 1, 1]' : 0.105161}
{'[1, 3, 0, 0, 0, 0, 0, 1, 21, 6, 25, 0, 2, 0, 0, 1, 1, 1]' : 0.105155}
{'[1, 3, 0, 0, 0, 0, 0, 1, 21, 6, 25, 0, 2, 0, 0, 1, 1, 1]' : 0.105147}
{'[1, 3, 0, 0, 0, 0, 0, 1, 21, 6, 25, 0, 2, 0, 0, 1, 1, 1]' : 0.105162}
{'[1, 3, 0, 0, 0, 0, 0, 1, 21, 6, 25, 0, 2, 0, 0, 1, 1, 1]' : 0.107897}
{'[1, 3, 0, 0, 0, 0, 0, 1, 21, 6, 25, 0, 2, 0, 0, 1, 1, 1]' : 0.107179}
{'[1, 3, 0, 0, 0, 0, 0, 1, 21, 6, 25, 0, 2, 0, 0, 1, 1, 1]' : 0.105232}
{'[1, 3, 0, 0, 0, 0, 0, 1, 21, 6, 25, 0, 2, 0, 0, 1, 1, 1]' : 0.103742}
{'[1, 3, 0, 0, 0, 0, 0, 1, 21, 6, 25, 0, 2, 0, 0, 1, 1, 1]' : 0.102541}
{'[1, 3, 0, 0, 0, 0, 0, 1, 21, 6, 25, 0, 2, 0, 0, 1, 1, 1]' : 0.105265}
{'[1, 3, 0, 0, 0, 0, 0, 1, 21, 6, 25, 0, 2, 0, 0, 1, 1, 1]' : 0.105168}
{'[1, 3, 0, 0, 0, 0, 0, 1, 21, 6, 25, 0, 2, 0, 0, 1, 1, 1]' : 0.105161}
{'[1, 3, 0, 0, 0, 0, 0, 1, 21, 6, 25, 0, 2, 0, 0, 1, 1, 1]' : 0.105176}
{'[1, 3, 0, 0, 0, 0, 0, 1, 21, 6, 25, 0, 2, 0, 0, 1, 1, 1]' : 0.106023}
{'[1, 3, 0, 0, 0, 0, 0, 1, 21, 6, 25, 0, 2, 0, 0, 1, 1, 1]' : 0.108433}
{'[1, 3, 0, 0, 0, 0, 0, 1, 21, 6, 25, 0, 2, 0, 0, 1, 1, 1]' : 0.106637}
{'[1, 3, 0, 0, 0, 0, 0, 1, 21, 6, 25, 0, 2, 0, 0, 1, 1, 1]' : 0.105233}
{'[1, 3, 0, 0, 0, 0, 0, 1, 21, 6, 25, 0, 2, 0, 0, 1, 1, 1]' : 0.105361}
{'[1, 3, 0, 0, 0, 0, 0, 1, 21, 6, 25, 0, 2, 0, 0, 1, 1, 1]' : 0.10695}
{'[1, 3, 0, 0, 0, 0, 0, 1, 21, 6, 25, 0, 2, 0, 0, 1, 1, 1]' : 0.108333}
{'[1, 3, 0, 0, 0, 0, 0, 1, 21, 6, 25, 0, 2, 0, 0, 1, 1, 1]' : 0.108342}

out:
 ["{'[1, 3, 0, 0, 0, 0, 0, 1, 21, 6, 25, 0, 2, 0, 0, 1, 1, 1]' : 0.105219}", "{'[1, 3, 0, 0, 0, 0, 0, 1, 21, 6, 25, 0, 2, 0, 0, 1, 1, 1]' : 0.105434}", "{'[1, 3, 0, 0, 0, 0, 0, 1, 21, 6, 25, 0, 2, 0, 0, 1, 1, 1]' : 0.105255}", "{'[1, 3, 0, 0, 0, 0, 0, 1, 21, 6, 25, 0, 2, 0, 0, 1, 1, 1]' : 0.106129}", "{'[1, 3, 0, 0, 0, 0, 0, 1, 21, 6, 25, 0, 2, 0, 0, 1, 1, 1]' : 0.107406}", "{'[1, 3, 0, 0, 0, 0, 0, 1, 21, 6, 25, 0, 2, 0, 0, 1, 1, 1]' : 0.105129}", "{'[1, 3, 0, 0, 0, 0, 0, 1, 21, 6, 25, 0, 2, 0, 0, 1, 1, 1]' : 0.105388}", "{'[1, 3, 0, 0, 0, 0, 0, 1, 21, 6, 25, 0, 2, 0, 0, 1, 1, 1]' : 0.105441}", "{'[1, 3, 0, 0, 0, 0, 0, 1, 21, 6, 25, 0, 2, 0, 0, 1, 1, 1]' : 0.105268}", "{'[1, 3, 0, 0, 0, 0, 0, 1, 21, 6, 25, 0, 2, 0, 0, 1, 1, 1]' : 0.105161}", "{'[1, 3, 0, 0, 0, 0, 0, 1, 21, 6, 25, 0, 2, 0, 0, 1, 1, 1]' : 0.105155}", "{'[1, 3, 0, 0, 0, 0, 0, 1, 21, 6, 25, 0, 2, 0, 0, 1, 1, 1]' : 0.105147}", "{'[1, 3, 0, 0, 0, 0, 0, 1, 21, 6, 25, 0, 2, 0, 0, 1, 1, 1]' : 0.105162}", "{'[1, 3, 0, 0, 0, 0, 0, 1, 21, 6, 25, 0, 2, 0, 0, 1, 1, 1]' : 0.107897}", "{'[1, 3, 0, 0, 0, 0, 0, 1, 21, 6, 25, 0, 2, 0, 0, 1, 1, 1]' : 0.107179}", "{'[1, 3, 0, 0, 0, 0, 0, 1, 21, 6, 25, 0, 2, 0, 0, 1, 1, 1]' : 0.105232}", "{'[1, 3, 0, 0, 0, 0, 0, 1, 21, 6, 25, 0, 2, 0, 0, 1, 1, 1]' : 0.103742}", "{'[1, 3, 0, 0, 0, 0, 0, 1, 21, 6, 25, 0, 2, 0, 0, 1, 1, 1]' : 0.102541}", "{'[1, 3, 0, 0, 0, 0, 0, 1, 21, 6, 25, 0, 2, 0, 0, 1, 1, 1]' : 0.105265}", "{'[1, 3, 0, 0, 0, 0, 0, 1, 21, 6, 25, 0, 2, 0, 0, 1, 1, 1]' : 0.105168}", "{'[1, 3, 0, 0, 0, 0, 0, 1, 21, 6, 25, 0, 2, 0, 0, 1, 1, 1]' : 0.105161}", "{'[1, 3, 0, 0, 0, 0, 0, 1, 21, 6, 25, 0, 2, 0, 0, 1, 1, 1]' : 0.105176}", "{'[1, 3, 0, 0, 0, 0, 0, 1, 21, 6, 25, 0, 2, 0, 0, 1, 1, 1]' : 0.106023}", "{'[1, 3, 0, 0, 0, 0, 0, 1, 21, 6, 25, 0, 2, 0, 0, 1, 1, 1]' : 0.108433}", "{'[1, 3, 0, 0, 0, 0, 0, 1, 21, 6, 25, 0, 2, 0, 0, 1, 1, 1]' : 0.106637}", "{'[1, 3, 0, 0, 0, 0, 0, 1, 21, 6, 25, 0, 2, 0, 0, 1, 1, 1]' : 0.105233}", "{'[1, 3, 0, 0, 0, 0, 0, 1, 21, 6, 25, 0, 2, 0, 0, 1, 1, 1]' : 0.105361}", "{'[1, 3, 0, 0, 0, 0, 0, 1, 21, 6, 25, 0, 2, 0, 0, 1, 1, 1]' : 0.10695}", "{'[1, 3, 0, 0, 0, 0, 0, 1, 21, 6, 25, 0, 2, 0, 0, 1, 1, 1]' : 0.108333}", "{'[1, 3, 0, 0, 0, 0, 0, 1, 21, 6, 25, 0, 2, 0, 0, 1, 1, 1]' : 0.108342}"]
returning from 'run': {'[1, 3, 0, 0, 0, 0, 0, 1, 21, 6, 25, 0, 2, 0, 0, 1, 1, 1]': ([0.105219, 0.105434, 0.105255, 0.106129, 0.107406, 0.105129, 0.105388, 0.105441, 0.105268, 0.105161, 0.105155, 0.105147, 0.105162, 0.107897, 0.107179, 0.105232, 0.103742, 0.102541, 0.105265, 0.105168, 0.105161, 0.105176, 0.106023, 0.108433, 0.106637, 0.105233, 0.105361, 0.10695, 0.108333, 0.108342], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 3, 0, 0, 0, 0, 0, 1, 21, 6, 25, 0, 2, 0, 0, 1, 1, 1]': ([0.105219, 0.105434, 0.105255, 0.106129, 0.107406, 0.105129, 0.105388, 0.105441, 0.105268, 0.105161, 0.105155, 0.105147, 0.105162, 0.107897, 0.107179, 0.105232, 0.103742, 0.102541, 0.105265, 0.105168, 0.105161, 0.105176, 0.106023, 0.108433, 0.106637, 0.105233, 0.105361, 0.10695, 0.108333, 0.108342], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	57
        Max loop nest depth: 	4
        Additions: 		4020
        Multiplications: 	936
        Divisions: 		0
        Logical: 		0
        Reads: 			6030
        Writes: 		627
        Comparisons:		57
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest8.exe __orio_perftest8.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest8.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest8.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest8.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest8.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	5
        Additions: 		308
        Multiplications: 	98
        Divisions: 		0
        Logical: 		0
        Reads: 			662
        Writes: 		103
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest9.exe __orio_perftest9.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest9.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest9.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest9.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest9.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		165
        Multiplications: 	32
        Divisions: 		0
        Logical: 		0
        Reads: 			353
        Writes: 		79
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest10.exe __orio_perftest10.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest10.exe  
Program Test Output: 
{'[1, 1, 6, 4, 5, 6, 1, 1, 29, 0, 28, 26, 0, 1, 1, 0, 0, 0]' : 0.276923}
{'[1, 1, 6, 4, 5, 6, 1, 1, 29, 0, 28, 26, 0, 1, 1, 0, 0, 0]' : 0.274146}
{'[1, 1, 6, 4, 5, 6, 1, 1, 29, 0, 28, 26, 0, 1, 1, 0, 0, 0]' : 0.236454}
{'[1, 1, 6, 4, 5, 6, 1, 1, 29, 0, 28, 26, 0, 1, 1, 0, 0, 0]' : 0.240385}
{'[1, 1, 6, 4, 5, 6, 1, 1, 29, 0, 28, 26, 0, 1, 1, 0, 0, 0]' : 0.244398}
{'[1, 1, 6, 4, 5, 6, 1, 1, 29, 0, 28, 26, 0, 1, 1, 0, 0, 0]' : 0.244406}
{'[1, 1, 6, 4, 5, 6, 1, 1, 29, 0, 28, 26, 0, 1, 1, 0, 0, 0]' : 0.244562}
{'[1, 1, 6, 4, 5, 6, 1, 1, 29, 0, 28, 26, 0, 1, 1, 0, 0, 0]' : 0.241371}
{'[1, 1, 6, 4, 5, 6, 1, 1, 29, 0, 28, 26, 0, 1, 1, 0, 0, 0]' : 0.244445}
{'[1, 1, 6, 4, 5, 6, 1, 1, 29, 0, 28, 26, 0, 1, 1, 0, 0, 0]' : 0.244445}
{'[1, 1, 6, 4, 5, 6, 1, 1, 29, 0, 28, 26, 0, 1, 1, 0, 0, 0]' : 0.24437}
{'[1, 1, 6, 4, 5, 6, 1, 1, 29, 0, 28, 26, 0, 1, 1, 0, 0, 0]' : 0.244424}
{'[1, 1, 6, 4, 5, 6, 1, 1, 29, 0, 28, 26, 0, 1, 1, 0, 0, 0]' : 0.244445}
{'[1, 1, 6, 4, 5, 6, 1, 1, 29, 0, 28, 26, 0, 1, 1, 0, 0, 0]' : 0.244485}
{'[1, 1, 6, 4, 5, 6, 1, 1, 29, 0, 28, 26, 0, 1, 1, 0, 0, 0]' : 0.244404}
{'[1, 1, 6, 4, 5, 6, 1, 1, 29, 0, 28, 26, 0, 1, 1, 0, 0, 0]' : 0.244747}
{'[1, 1, 6, 4, 5, 6, 1, 1, 29, 0, 28, 26, 0, 1, 1, 0, 0, 0]' : 0.244396}
{'[1, 1, 6, 4, 5, 6, 1, 1, 29, 0, 28, 26, 0, 1, 1, 0, 0, 0]' : 0.238616}
{'[1, 1, 6, 4, 5, 6, 1, 1, 29, 0, 28, 26, 0, 1, 1, 0, 0, 0]' : 0.244426}
{'[1, 1, 6, 4, 5, 6, 1, 1, 29, 0, 28, 26, 0, 1, 1, 0, 0, 0]' : 0.244411}
{'[1, 1, 6, 4, 5, 6, 1, 1, 29, 0, 28, 26, 0, 1, 1, 0, 0, 0]' : 0.244466}
{'[1, 1, 6, 4, 5, 6, 1, 1, 29, 0, 28, 26, 0, 1, 1, 0, 0, 0]' : 0.244456}
{'[1, 1, 6, 4, 5, 6, 1, 1, 29, 0, 28, 26, 0, 1, 1, 0, 0, 0]' : 0.244475}
{'[1, 1, 6, 4, 5, 6, 1, 1, 29, 0, 28, 26, 0, 1, 1, 0, 0, 0]' : 0.244696}
{'[1, 1, 6, 4, 5, 6, 1, 1, 29, 0, 28, 26, 0, 1, 1, 0, 0, 0]' : 0.244401}
{'[1, 1, 6, 4, 5, 6, 1, 1, 29, 0, 28, 26, 0, 1, 1, 0, 0, 0]' : 0.244414}
{'[1, 1, 6, 4, 5, 6, 1, 1, 29, 0, 28, 26, 0, 1, 1, 0, 0, 0]' : 0.244413}
{'[1, 1, 6, 4, 5, 6, 1, 1, 29, 0, 28, 26, 0, 1, 1, 0, 0, 0]' : 0.244441}
{'[1, 1, 6, 4, 5, 6, 1, 1, 29, 0, 28, 26, 0, 1, 1, 0, 0, 0]' : 0.245098}
{'[1, 1, 6, 4, 5, 6, 1, 1, 29, 0, 28, 26, 0, 1, 1, 0, 0, 0]' : 0.244492}

out:
 ["{'[1, 1, 6, 4, 5, 6, 1, 1, 29, 0, 28, 26, 0, 1, 1, 0, 0, 0]' : 0.276923}", "{'[1, 1, 6, 4, 5, 6, 1, 1, 29, 0, 28, 26, 0, 1, 1, 0, 0, 0]' : 0.274146}", "{'[1, 1, 6, 4, 5, 6, 1, 1, 29, 0, 28, 26, 0, 1, 1, 0, 0, 0]' : 0.236454}", "{'[1, 1, 6, 4, 5, 6, 1, 1, 29, 0, 28, 26, 0, 1, 1, 0, 0, 0]' : 0.240385}", "{'[1, 1, 6, 4, 5, 6, 1, 1, 29, 0, 28, 26, 0, 1, 1, 0, 0, 0]' : 0.244398}", "{'[1, 1, 6, 4, 5, 6, 1, 1, 29, 0, 28, 26, 0, 1, 1, 0, 0, 0]' : 0.244406}", "{'[1, 1, 6, 4, 5, 6, 1, 1, 29, 0, 28, 26, 0, 1, 1, 0, 0, 0]' : 0.244562}", "{'[1, 1, 6, 4, 5, 6, 1, 1, 29, 0, 28, 26, 0, 1, 1, 0, 0, 0]' : 0.241371}", "{'[1, 1, 6, 4, 5, 6, 1, 1, 29, 0, 28, 26, 0, 1, 1, 0, 0, 0]' : 0.244445}", "{'[1, 1, 6, 4, 5, 6, 1, 1, 29, 0, 28, 26, 0, 1, 1, 0, 0, 0]' : 0.244445}", "{'[1, 1, 6, 4, 5, 6, 1, 1, 29, 0, 28, 26, 0, 1, 1, 0, 0, 0]' : 0.24437}", "{'[1, 1, 6, 4, 5, 6, 1, 1, 29, 0, 28, 26, 0, 1, 1, 0, 0, 0]' : 0.244424}", "{'[1, 1, 6, 4, 5, 6, 1, 1, 29, 0, 28, 26, 0, 1, 1, 0, 0, 0]' : 0.244445}", "{'[1, 1, 6, 4, 5, 6, 1, 1, 29, 0, 28, 26, 0, 1, 1, 0, 0, 0]' : 0.244485}", "{'[1, 1, 6, 4, 5, 6, 1, 1, 29, 0, 28, 26, 0, 1, 1, 0, 0, 0]' : 0.244404}", "{'[1, 1, 6, 4, 5, 6, 1, 1, 29, 0, 28, 26, 0, 1, 1, 0, 0, 0]' : 0.244747}", "{'[1, 1, 6, 4, 5, 6, 1, 1, 29, 0, 28, 26, 0, 1, 1, 0, 0, 0]' : 0.244396}", "{'[1, 1, 6, 4, 5, 6, 1, 1, 29, 0, 28, 26, 0, 1, 1, 0, 0, 0]' : 0.238616}", "{'[1, 1, 6, 4, 5, 6, 1, 1, 29, 0, 28, 26, 0, 1, 1, 0, 0, 0]' : 0.244426}", "{'[1, 1, 6, 4, 5, 6, 1, 1, 29, 0, 28, 26, 0, 1, 1, 0, 0, 0]' : 0.244411}", "{'[1, 1, 6, 4, 5, 6, 1, 1, 29, 0, 28, 26, 0, 1, 1, 0, 0, 0]' : 0.244466}", "{'[1, 1, 6, 4, 5, 6, 1, 1, 29, 0, 28, 26, 0, 1, 1, 0, 0, 0]' : 0.244456}", "{'[1, 1, 6, 4, 5, 6, 1, 1, 29, 0, 28, 26, 0, 1, 1, 0, 0, 0]' : 0.244475}", "{'[1, 1, 6, 4, 5, 6, 1, 1, 29, 0, 28, 26, 0, 1, 1, 0, 0, 0]' : 0.244696}", "{'[1, 1, 6, 4, 5, 6, 1, 1, 29, 0, 28, 26, 0, 1, 1, 0, 0, 0]' : 0.244401}", "{'[1, 1, 6, 4, 5, 6, 1, 1, 29, 0, 28, 26, 0, 1, 1, 0, 0, 0]' : 0.244414}", "{'[1, 1, 6, 4, 5, 6, 1, 1, 29, 0, 28, 26, 0, 1, 1, 0, 0, 0]' : 0.244413}", "{'[1, 1, 6, 4, 5, 6, 1, 1, 29, 0, 28, 26, 0, 1, 1, 0, 0, 0]' : 0.244441}", "{'[1, 1, 6, 4, 5, 6, 1, 1, 29, 0, 28, 26, 0, 1, 1, 0, 0, 0]' : 0.245098}", "{'[1, 1, 6, 4, 5, 6, 1, 1, 29, 0, 28, 26, 0, 1, 1, 0, 0, 0]' : 0.244492}"]
returning from 'run': {'[1, 1, 6, 4, 5, 6, 1, 1, 29, 0, 28, 26, 0, 1, 1, 0, 0, 0]': ([0.276923, 0.274146, 0.236454, 0.240385, 0.244398, 0.244406, 0.244562, 0.241371, 0.244445, 0.244445, 0.24437, 0.244424, 0.244445, 0.244485, 0.244404, 0.244747, 0.244396, 0.238616, 0.244426, 0.244411, 0.244466, 0.244456, 0.244475, 0.244696, 0.244401, 0.244414, 0.244413, 0.244441, 0.245098, 0.244492], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 1, 6, 4, 5, 6, 1, 1, 29, 0, 28, 26, 0, 1, 1, 0, 0, 0]': ([0.276923, 0.274146, 0.236454, 0.240385, 0.244398, 0.244406, 0.244562, 0.241371, 0.244445, 0.244445, 0.24437, 0.244424, 0.244445, 0.244485, 0.244404, 0.244747, 0.244396, 0.238616, 0.244426, 0.244411, 0.244466, 0.244456, 0.244475, 0.244696, 0.244401, 0.244414, 0.244413, 0.244441, 0.245098, 0.244492], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		164
        Multiplications: 	38
        Divisions: 		0
        Logical: 		0
        Reads: 			364
        Writes: 		76
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest11.exe __orio_perftest11.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest11.exe  
Program Test Output: 
{'[0, 6, 5, 5, 6, 6, 0, 1, 19, 0, 1, 28, 0, 1, 1, 0, 0, 1]' : 0.225452}
{'[0, 6, 5, 5, 6, 6, 0, 1, 19, 0, 1, 28, 0, 1, 1, 0, 0, 1]' : 0.224948}
{'[0, 6, 5, 5, 6, 6, 0, 1, 19, 0, 1, 28, 0, 1, 1, 0, 0, 1]' : 0.204877}
{'[0, 6, 5, 5, 6, 6, 0, 1, 19, 0, 1, 28, 0, 1, 1, 0, 0, 1]' : 0.199487}
{'[0, 6, 5, 5, 6, 6, 0, 1, 19, 0, 1, 28, 0, 1, 1, 0, 0, 1]' : 0.19944}
{'[0, 6, 5, 5, 6, 6, 0, 1, 19, 0, 1, 28, 0, 1, 1, 0, 0, 1]' : 0.199694}
{'[0, 6, 5, 5, 6, 6, 0, 1, 19, 0, 1, 28, 0, 1, 1, 0, 0, 1]' : 0.199443}
{'[0, 6, 5, 5, 6, 6, 0, 1, 19, 0, 1, 28, 0, 1, 1, 0, 0, 1]' : 0.199449}
{'[0, 6, 5, 5, 6, 6, 0, 1, 19, 0, 1, 28, 0, 1, 1, 0, 0, 1]' : 0.199586}
{'[0, 6, 5, 5, 6, 6, 0, 1, 19, 0, 1, 28, 0, 1, 1, 0, 0, 1]' : 0.199304}
{'[0, 6, 5, 5, 6, 6, 0, 1, 19, 0, 1, 28, 0, 1, 1, 0, 0, 1]' : 0.199352}
{'[0, 6, 5, 5, 6, 6, 0, 1, 19, 0, 1, 28, 0, 1, 1, 0, 0, 1]' : 0.199466}
{'[0, 6, 5, 5, 6, 6, 0, 1, 19, 0, 1, 28, 0, 1, 1, 0, 0, 1]' : 0.199376}
{'[0, 6, 5, 5, 6, 6, 0, 1, 19, 0, 1, 28, 0, 1, 1, 0, 0, 1]' : 0.19935}
{'[0, 6, 5, 5, 6, 6, 0, 1, 19, 0, 1, 28, 0, 1, 1, 0, 0, 1]' : 0.199403}
{'[0, 6, 5, 5, 6, 6, 0, 1, 19, 0, 1, 28, 0, 1, 1, 0, 0, 1]' : 0.19961}
{'[0, 6, 5, 5, 6, 6, 0, 1, 19, 0, 1, 28, 0, 1, 1, 0, 0, 1]' : 0.19938}
{'[0, 6, 5, 5, 6, 6, 0, 1, 19, 0, 1, 28, 0, 1, 1, 0, 0, 1]' : 0.19937}
{'[0, 6, 5, 5, 6, 6, 0, 1, 19, 0, 1, 28, 0, 1, 1, 0, 0, 1]' : 0.196926}
{'[0, 6, 5, 5, 6, 6, 0, 1, 19, 0, 1, 28, 0, 1, 1, 0, 0, 1]' : 0.199404}
{'[0, 6, 5, 5, 6, 6, 0, 1, 19, 0, 1, 28, 0, 1, 1, 0, 0, 1]' : 0.199377}
{'[0, 6, 5, 5, 6, 6, 0, 1, 19, 0, 1, 28, 0, 1, 1, 0, 0, 1]' : 0.199503}
{'[0, 6, 5, 5, 6, 6, 0, 1, 19, 0, 1, 28, 0, 1, 1, 0, 0, 1]' : 0.199381}
{'[0, 6, 5, 5, 6, 6, 0, 1, 19, 0, 1, 28, 0, 1, 1, 0, 0, 1]' : 0.199393}
{'[0, 6, 5, 5, 6, 6, 0, 1, 19, 0, 1, 28, 0, 1, 1, 0, 0, 1]' : 0.199353}
{'[0, 6, 5, 5, 6, 6, 0, 1, 19, 0, 1, 28, 0, 1, 1, 0, 0, 1]' : 0.199609}
{'[0, 6, 5, 5, 6, 6, 0, 1, 19, 0, 1, 28, 0, 1, 1, 0, 0, 1]' : 0.199382}
{'[0, 6, 5, 5, 6, 6, 0, 1, 19, 0, 1, 28, 0, 1, 1, 0, 0, 1]' : 0.199365}
{'[0, 6, 5, 5, 6, 6, 0, 1, 19, 0, 1, 28, 0, 1, 1, 0, 0, 1]' : 0.199414}
{'[0, 6, 5, 5, 6, 6, 0, 1, 19, 0, 1, 28, 0, 1, 1, 0, 0, 1]' : 0.199355}

out:
 ["{'[0, 6, 5, 5, 6, 6, 0, 1, 19, 0, 1, 28, 0, 1, 1, 0, 0, 1]' : 0.225452}", "{'[0, 6, 5, 5, 6, 6, 0, 1, 19, 0, 1, 28, 0, 1, 1, 0, 0, 1]' : 0.224948}", "{'[0, 6, 5, 5, 6, 6, 0, 1, 19, 0, 1, 28, 0, 1, 1, 0, 0, 1]' : 0.204877}", "{'[0, 6, 5, 5, 6, 6, 0, 1, 19, 0, 1, 28, 0, 1, 1, 0, 0, 1]' : 0.199487}", "{'[0, 6, 5, 5, 6, 6, 0, 1, 19, 0, 1, 28, 0, 1, 1, 0, 0, 1]' : 0.19944}", "{'[0, 6, 5, 5, 6, 6, 0, 1, 19, 0, 1, 28, 0, 1, 1, 0, 0, 1]' : 0.199694}", "{'[0, 6, 5, 5, 6, 6, 0, 1, 19, 0, 1, 28, 0, 1, 1, 0, 0, 1]' : 0.199443}", "{'[0, 6, 5, 5, 6, 6, 0, 1, 19, 0, 1, 28, 0, 1, 1, 0, 0, 1]' : 0.199449}", "{'[0, 6, 5, 5, 6, 6, 0, 1, 19, 0, 1, 28, 0, 1, 1, 0, 0, 1]' : 0.199586}", "{'[0, 6, 5, 5, 6, 6, 0, 1, 19, 0, 1, 28, 0, 1, 1, 0, 0, 1]' : 0.199304}", "{'[0, 6, 5, 5, 6, 6, 0, 1, 19, 0, 1, 28, 0, 1, 1, 0, 0, 1]' : 0.199352}", "{'[0, 6, 5, 5, 6, 6, 0, 1, 19, 0, 1, 28, 0, 1, 1, 0, 0, 1]' : 0.199466}", "{'[0, 6, 5, 5, 6, 6, 0, 1, 19, 0, 1, 28, 0, 1, 1, 0, 0, 1]' : 0.199376}", "{'[0, 6, 5, 5, 6, 6, 0, 1, 19, 0, 1, 28, 0, 1, 1, 0, 0, 1]' : 0.19935}", "{'[0, 6, 5, 5, 6, 6, 0, 1, 19, 0, 1, 28, 0, 1, 1, 0, 0, 1]' : 0.199403}", "{'[0, 6, 5, 5, 6, 6, 0, 1, 19, 0, 1, 28, 0, 1, 1, 0, 0, 1]' : 0.19961}", "{'[0, 6, 5, 5, 6, 6, 0, 1, 19, 0, 1, 28, 0, 1, 1, 0, 0, 1]' : 0.19938}", "{'[0, 6, 5, 5, 6, 6, 0, 1, 19, 0, 1, 28, 0, 1, 1, 0, 0, 1]' : 0.19937}", "{'[0, 6, 5, 5, 6, 6, 0, 1, 19, 0, 1, 28, 0, 1, 1, 0, 0, 1]' : 0.196926}", "{'[0, 6, 5, 5, 6, 6, 0, 1, 19, 0, 1, 28, 0, 1, 1, 0, 0, 1]' : 0.199404}", "{'[0, 6, 5, 5, 6, 6, 0, 1, 19, 0, 1, 28, 0, 1, 1, 0, 0, 1]' : 0.199377}", "{'[0, 6, 5, 5, 6, 6, 0, 1, 19, 0, 1, 28, 0, 1, 1, 0, 0, 1]' : 0.199503}", "{'[0, 6, 5, 5, 6, 6, 0, 1, 19, 0, 1, 28, 0, 1, 1, 0, 0, 1]' : 0.199381}", "{'[0, 6, 5, 5, 6, 6, 0, 1, 19, 0, 1, 28, 0, 1, 1, 0, 0, 1]' : 0.199393}", "{'[0, 6, 5, 5, 6, 6, 0, 1, 19, 0, 1, 28, 0, 1, 1, 0, 0, 1]' : 0.199353}", "{'[0, 6, 5, 5, 6, 6, 0, 1, 19, 0, 1, 28, 0, 1, 1, 0, 0, 1]' : 0.199609}", "{'[0, 6, 5, 5, 6, 6, 0, 1, 19, 0, 1, 28, 0, 1, 1, 0, 0, 1]' : 0.199382}", "{'[0, 6, 5, 5, 6, 6, 0, 1, 19, 0, 1, 28, 0, 1, 1, 0, 0, 1]' : 0.199365}", "{'[0, 6, 5, 5, 6, 6, 0, 1, 19, 0, 1, 28, 0, 1, 1, 0, 0, 1]' : 0.199414}", "{'[0, 6, 5, 5, 6, 6, 0, 1, 19, 0, 1, 28, 0, 1, 1, 0, 0, 1]' : 0.199355}"]
returning from 'run': {'[0, 6, 5, 5, 6, 6, 0, 1, 19, 0, 1, 28, 0, 1, 1, 0, 0, 1]': ([0.225452, 0.224948, 0.204877, 0.199487, 0.19944, 0.199694, 0.199443, 0.199449, 0.199586, 0.199304, 0.199352, 0.199466, 0.199376, 0.19935, 0.199403, 0.19961, 0.19938, 0.19937, 0.196926, 0.199404, 0.199377, 0.199503, 0.199381, 0.199393, 0.199353, 0.199609, 0.199382, 0.199365, 0.199414, 0.199355], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 5, 5, 6, 6, 0, 1, 19, 0, 1, 28, 0, 1, 1, 0, 0, 1]': ([0.225452, 0.224948, 0.204877, 0.199487, 0.19944, 0.199694, 0.199443, 0.199449, 0.199586, 0.199304, 0.199352, 0.199466, 0.199376, 0.19935, 0.199403, 0.19961, 0.19938, 0.19937, 0.196926, 0.199404, 0.199377, 0.199503, 0.199381, 0.199393, 0.199353, 0.199609, 0.199382, 0.199365, 0.199414, 0.199355], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	29
        Max loop nest depth: 	5
        Additions: 		5664
        Multiplications: 	2808
        Divisions: 		0
        Logical: 		0
        Reads: 			10680
        Writes: 		1696
        Comparisons:		29
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest12.exe __orio_perftest12.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest12.exe  
Program Test Output: 
{'[0, 5, 1, 5, 6, 3, 0, 0, 0, 29, 25, 0, 1, 0, 1, 1, 0, 1]' : 0.103989}
{'[0, 5, 1, 5, 6, 3, 0, 0, 0, 29, 25, 0, 1, 0, 1, 1, 0, 1]' : 0.104011}
{'[0, 5, 1, 5, 6, 3, 0, 0, 0, 29, 25, 0, 1, 0, 1, 1, 0, 1]' : 0.103891}
{'[0, 5, 1, 5, 6, 3, 0, 0, 0, 29, 25, 0, 1, 0, 1, 1, 0, 1]' : 0.101407}
{'[0, 5, 1, 5, 6, 3, 0, 0, 0, 29, 25, 0, 1, 0, 1, 1, 0, 1]' : 0.090219}
{'[0, 5, 1, 5, 6, 3, 0, 0, 0, 29, 25, 0, 1, 0, 1, 1, 0, 1]' : 0.0897679}
{'[0, 5, 1, 5, 6, 3, 0, 0, 0, 29, 25, 0, 1, 0, 1, 1, 0, 1]' : 0.0897591}
{'[0, 5, 1, 5, 6, 3, 0, 0, 0, 29, 25, 0, 1, 0, 1, 1, 0, 1]' : 0.0898349}
{'[0, 5, 1, 5, 6, 3, 0, 0, 0, 29, 25, 0, 1, 0, 1, 1, 0, 1]' : 0.0897229}
{'[0, 5, 1, 5, 6, 3, 0, 0, 0, 29, 25, 0, 1, 0, 1, 1, 0, 1]' : 0.0898402}
{'[0, 5, 1, 5, 6, 3, 0, 0, 0, 29, 25, 0, 1, 0, 1, 1, 0, 1]' : 0.0902641}
{'[0, 5, 1, 5, 6, 3, 0, 0, 0, 29, 25, 0, 1, 0, 1, 1, 0, 1]' : 0.0900519}
{'[0, 5, 1, 5, 6, 3, 0, 0, 0, 29, 25, 0, 1, 0, 1, 1, 0, 1]' : 0.0897961}
{'[0, 5, 1, 5, 6, 3, 0, 0, 0, 29, 25, 0, 1, 0, 1, 1, 0, 1]' : 0.0897899}
{'[0, 5, 1, 5, 6, 3, 0, 0, 0, 29, 25, 0, 1, 0, 1, 1, 0, 1]' : 0.089802}
{'[0, 5, 1, 5, 6, 3, 0, 0, 0, 29, 25, 0, 1, 0, 1, 1, 0, 1]' : 0.0898879}
{'[0, 5, 1, 5, 6, 3, 0, 0, 0, 29, 25, 0, 1, 0, 1, 1, 0, 1]' : 0.0898368}
{'[0, 5, 1, 5, 6, 3, 0, 0, 0, 29, 25, 0, 1, 0, 1, 1, 0, 1]' : 0.0897839}
{'[0, 5, 1, 5, 6, 3, 0, 0, 0, 29, 25, 0, 1, 0, 1, 1, 0, 1]' : 0.090075}
{'[0, 5, 1, 5, 6, 3, 0, 0, 0, 29, 25, 0, 1, 0, 1, 1, 0, 1]' : 0.0897989}
{'[0, 5, 1, 5, 6, 3, 0, 0, 0, 29, 25, 0, 1, 0, 1, 1, 0, 1]' : 0.089797}
{'[0, 5, 1, 5, 6, 3, 0, 0, 0, 29, 25, 0, 1, 0, 1, 1, 0, 1]' : 0.089911}
{'[0, 5, 1, 5, 6, 3, 0, 0, 0, 29, 25, 0, 1, 0, 1, 1, 0, 1]' : 0.089813}
{'[0, 5, 1, 5, 6, 3, 0, 0, 0, 29, 25, 0, 1, 0, 1, 1, 0, 1]' : 0.090224}
{'[0, 5, 1, 5, 6, 3, 0, 0, 0, 29, 25, 0, 1, 0, 1, 1, 0, 1]' : 0.0898499}
{'[0, 5, 1, 5, 6, 3, 0, 0, 0, 29, 25, 0, 1, 0, 1, 1, 0, 1]' : 0.0898559}
{'[0, 5, 1, 5, 6, 3, 0, 0, 0, 29, 25, 0, 1, 0, 1, 1, 0, 1]' : 0.089859}
{'[0, 5, 1, 5, 6, 3, 0, 0, 0, 29, 25, 0, 1, 0, 1, 1, 0, 1]' : 0.0903459}
{'[0, 5, 1, 5, 6, 3, 0, 0, 0, 29, 25, 0, 1, 0, 1, 1, 0, 1]' : 0.0899069}
{'[0, 5, 1, 5, 6, 3, 0, 0, 0, 29, 25, 0, 1, 0, 1, 1, 0, 1]' : 0.0897839}

out:
 ["{'[0, 5, 1, 5, 6, 3, 0, 0, 0, 29, 25, 0, 1, 0, 1, 1, 0, 1]' : 0.103989}", "{'[0, 5, 1, 5, 6, 3, 0, 0, 0, 29, 25, 0, 1, 0, 1, 1, 0, 1]' : 0.104011}", "{'[0, 5, 1, 5, 6, 3, 0, 0, 0, 29, 25, 0, 1, 0, 1, 1, 0, 1]' : 0.103891}", "{'[0, 5, 1, 5, 6, 3, 0, 0, 0, 29, 25, 0, 1, 0, 1, 1, 0, 1]' : 0.101407}", "{'[0, 5, 1, 5, 6, 3, 0, 0, 0, 29, 25, 0, 1, 0, 1, 1, 0, 1]' : 0.090219}", "{'[0, 5, 1, 5, 6, 3, 0, 0, 0, 29, 25, 0, 1, 0, 1, 1, 0, 1]' : 0.0897679}", "{'[0, 5, 1, 5, 6, 3, 0, 0, 0, 29, 25, 0, 1, 0, 1, 1, 0, 1]' : 0.0897591}", "{'[0, 5, 1, 5, 6, 3, 0, 0, 0, 29, 25, 0, 1, 0, 1, 1, 0, 1]' : 0.0898349}", "{'[0, 5, 1, 5, 6, 3, 0, 0, 0, 29, 25, 0, 1, 0, 1, 1, 0, 1]' : 0.0897229}", "{'[0, 5, 1, 5, 6, 3, 0, 0, 0, 29, 25, 0, 1, 0, 1, 1, 0, 1]' : 0.0898402}", "{'[0, 5, 1, 5, 6, 3, 0, 0, 0, 29, 25, 0, 1, 0, 1, 1, 0, 1]' : 0.0902641}", "{'[0, 5, 1, 5, 6, 3, 0, 0, 0, 29, 25, 0, 1, 0, 1, 1, 0, 1]' : 0.0900519}", "{'[0, 5, 1, 5, 6, 3, 0, 0, 0, 29, 25, 0, 1, 0, 1, 1, 0, 1]' : 0.0897961}", "{'[0, 5, 1, 5, 6, 3, 0, 0, 0, 29, 25, 0, 1, 0, 1, 1, 0, 1]' : 0.0897899}", "{'[0, 5, 1, 5, 6, 3, 0, 0, 0, 29, 25, 0, 1, 0, 1, 1, 0, 1]' : 0.089802}", "{'[0, 5, 1, 5, 6, 3, 0, 0, 0, 29, 25, 0, 1, 0, 1, 1, 0, 1]' : 0.0898879}", "{'[0, 5, 1, 5, 6, 3, 0, 0, 0, 29, 25, 0, 1, 0, 1, 1, 0, 1]' : 0.0898368}", "{'[0, 5, 1, 5, 6, 3, 0, 0, 0, 29, 25, 0, 1, 0, 1, 1, 0, 1]' : 0.0897839}", "{'[0, 5, 1, 5, 6, 3, 0, 0, 0, 29, 25, 0, 1, 0, 1, 1, 0, 1]' : 0.090075}", "{'[0, 5, 1, 5, 6, 3, 0, 0, 0, 29, 25, 0, 1, 0, 1, 1, 0, 1]' : 0.0897989}", "{'[0, 5, 1, 5, 6, 3, 0, 0, 0, 29, 25, 0, 1, 0, 1, 1, 0, 1]' : 0.089797}", "{'[0, 5, 1, 5, 6, 3, 0, 0, 0, 29, 25, 0, 1, 0, 1, 1, 0, 1]' : 0.089911}", "{'[0, 5, 1, 5, 6, 3, 0, 0, 0, 29, 25, 0, 1, 0, 1, 1, 0, 1]' : 0.089813}", "{'[0, 5, 1, 5, 6, 3, 0, 0, 0, 29, 25, 0, 1, 0, 1, 1, 0, 1]' : 0.090224}", "{'[0, 5, 1, 5, 6, 3, 0, 0, 0, 29, 25, 0, 1, 0, 1, 1, 0, 1]' : 0.0898499}", "{'[0, 5, 1, 5, 6, 3, 0, 0, 0, 29, 25, 0, 1, 0, 1, 1, 0, 1]' : 0.0898559}", "{'[0, 5, 1, 5, 6, 3, 0, 0, 0, 29, 25, 0, 1, 0, 1, 1, 0, 1]' : 0.089859}", "{'[0, 5, 1, 5, 6, 3, 0, 0, 0, 29, 25, 0, 1, 0, 1, 1, 0, 1]' : 0.0903459}", "{'[0, 5, 1, 5, 6, 3, 0, 0, 0, 29, 25, 0, 1, 0, 1, 1, 0, 1]' : 0.0899069}", "{'[0, 5, 1, 5, 6, 3, 0, 0, 0, 29, 25, 0, 1, 0, 1, 1, 0, 1]' : 0.0897839}"]
returning from 'run': {'[0, 5, 1, 5, 6, 3, 0, 0, 0, 29, 25, 0, 1, 0, 1, 1, 0, 1]': ([0.103989, 0.104011, 0.103891, 0.101407, 0.090219, 0.0897679, 0.0897591, 0.0898349, 0.0897229, 0.0898402, 0.0902641, 0.0900519, 0.0897961, 0.0897899, 0.089802, 0.0898879, 0.0898368, 0.0897839, 0.090075, 0.0897989, 0.089797, 0.089911, 0.089813, 0.090224, 0.0898499, 0.0898559, 0.089859, 0.0903459, 0.0899069, 0.0897839], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 5, 1, 5, 6, 3, 0, 0, 0, 29, 25, 0, 1, 0, 1, 1, 0, 1]': ([0.103989, 0.104011, 0.103891, 0.101407, 0.090219, 0.0897679, 0.0897591, 0.0898349, 0.0897229, 0.0898402, 0.0902641, 0.0900519, 0.0897961, 0.0897899, 0.089802, 0.0898879, 0.0898368, 0.0897839, 0.090075, 0.0897989, 0.089797, 0.089911, 0.089813, 0.090224, 0.0898499, 0.0898559, 0.089859, 0.0903459, 0.0899069, 0.0897839], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	6
        Additions: 		804
        Multiplications: 	216
        Divisions: 		0
        Logical: 		0
        Reads: 			1361
        Writes: 		168
        Comparisons:		20
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest13.exe __orio_perftest13.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest13.exe  
Program Test Output: 
{'[2, 2, 0, 2, 6, 3, 1, 0, 3, 0, 9, 0, 1, 0, 0, 0, 1, 1]' : 0.101148}
{'[2, 2, 0, 2, 6, 3, 1, 0, 3, 0, 9, 0, 1, 0, 0, 0, 1, 1]' : 0.101121}
{'[2, 2, 0, 2, 6, 3, 1, 0, 3, 0, 9, 0, 1, 0, 0, 0, 1, 1]' : 0.100947}
{'[2, 2, 0, 2, 6, 3, 1, 0, 3, 0, 9, 0, 1, 0, 0, 0, 1, 1]' : 0.101036}
{'[2, 2, 0, 2, 6, 3, 1, 0, 3, 0, 9, 0, 1, 0, 0, 0, 1, 1]' : 0.101045}
{'[2, 2, 0, 2, 6, 3, 1, 0, 3, 0, 9, 0, 1, 0, 0, 0, 1, 1]' : 0.100884}
{'[2, 2, 0, 2, 6, 3, 1, 0, 3, 0, 9, 0, 1, 0, 0, 0, 1, 1]' : 0.097924}
{'[2, 2, 0, 2, 6, 3, 1, 0, 3, 0, 9, 0, 1, 0, 0, 0, 1, 1]' : 0.098105}
{'[2, 2, 0, 2, 6, 3, 1, 0, 3, 0, 9, 0, 1, 0, 0, 0, 1, 1]' : 0.0980771}
{'[2, 2, 0, 2, 6, 3, 1, 0, 3, 0, 9, 0, 1, 0, 0, 0, 1, 1]' : 0.0985172}
{'[2, 2, 0, 2, 6, 3, 1, 0, 3, 0, 9, 0, 1, 0, 0, 0, 1, 1]' : 0.0986409}
{'[2, 2, 0, 2, 6, 3, 1, 0, 3, 0, 9, 0, 1, 0, 0, 0, 1, 1]' : 0.101054}
{'[2, 2, 0, 2, 6, 3, 1, 0, 3, 0, 9, 0, 1, 0, 0, 0, 1, 1]' : 0.101067}
{'[2, 2, 0, 2, 6, 3, 1, 0, 3, 0, 9, 0, 1, 0, 0, 0, 1, 1]' : 0.101067}
{'[2, 2, 0, 2, 6, 3, 1, 0, 3, 0, 9, 0, 1, 0, 0, 0, 1, 1]' : 0.100966}
{'[2, 2, 0, 2, 6, 3, 1, 0, 3, 0, 9, 0, 1, 0, 0, 0, 1, 1]' : 0.101122}
{'[2, 2, 0, 2, 6, 3, 1, 0, 3, 0, 9, 0, 1, 0, 0, 0, 1, 1]' : 0.101085}
{'[2, 2, 0, 2, 6, 3, 1, 0, 3, 0, 9, 0, 1, 0, 0, 0, 1, 1]' : 0.101055}
{'[2, 2, 0, 2, 6, 3, 1, 0, 3, 0, 9, 0, 1, 0, 0, 0, 1, 1]' : 0.100961}
{'[2, 2, 0, 2, 6, 3, 1, 0, 3, 0, 9, 0, 1, 0, 0, 0, 1, 1]' : 0.101013}
{'[2, 2, 0, 2, 6, 3, 1, 0, 3, 0, 9, 0, 1, 0, 0, 0, 1, 1]' : 0.101088}
{'[2, 2, 0, 2, 6, 3, 1, 0, 3, 0, 9, 0, 1, 0, 0, 0, 1, 1]' : 0.101032}
{'[2, 2, 0, 2, 6, 3, 1, 0, 3, 0, 9, 0, 1, 0, 0, 0, 1, 1]' : 0.100933}
{'[2, 2, 0, 2, 6, 3, 1, 0, 3, 0, 9, 0, 1, 0, 0, 0, 1, 1]' : 0.101016}
{'[2, 2, 0, 2, 6, 3, 1, 0, 3, 0, 9, 0, 1, 0, 0, 0, 1, 1]' : 0.101073}
{'[2, 2, 0, 2, 6, 3, 1, 0, 3, 0, 9, 0, 1, 0, 0, 0, 1, 1]' : 0.10133}
{'[2, 2, 0, 2, 6, 3, 1, 0, 3, 0, 9, 0, 1, 0, 0, 0, 1, 1]' : 0.100928}
{'[2, 2, 0, 2, 6, 3, 1, 0, 3, 0, 9, 0, 1, 0, 0, 0, 1, 1]' : 0.101077}
{'[2, 2, 0, 2, 6, 3, 1, 0, 3, 0, 9, 0, 1, 0, 0, 0, 1, 1]' : 0.101021}
{'[2, 2, 0, 2, 6, 3, 1, 0, 3, 0, 9, 0, 1, 0, 0, 0, 1, 1]' : 0.101099}

out:
 ["{'[2, 2, 0, 2, 6, 3, 1, 0, 3, 0, 9, 0, 1, 0, 0, 0, 1, 1]' : 0.101148}", "{'[2, 2, 0, 2, 6, 3, 1, 0, 3, 0, 9, 0, 1, 0, 0, 0, 1, 1]' : 0.101121}", "{'[2, 2, 0, 2, 6, 3, 1, 0, 3, 0, 9, 0, 1, 0, 0, 0, 1, 1]' : 0.100947}", "{'[2, 2, 0, 2, 6, 3, 1, 0, 3, 0, 9, 0, 1, 0, 0, 0, 1, 1]' : 0.101036}", "{'[2, 2, 0, 2, 6, 3, 1, 0, 3, 0, 9, 0, 1, 0, 0, 0, 1, 1]' : 0.101045}", "{'[2, 2, 0, 2, 6, 3, 1, 0, 3, 0, 9, 0, 1, 0, 0, 0, 1, 1]' : 0.100884}", "{'[2, 2, 0, 2, 6, 3, 1, 0, 3, 0, 9, 0, 1, 0, 0, 0, 1, 1]' : 0.097924}", "{'[2, 2, 0, 2, 6, 3, 1, 0, 3, 0, 9, 0, 1, 0, 0, 0, 1, 1]' : 0.098105}", "{'[2, 2, 0, 2, 6, 3, 1, 0, 3, 0, 9, 0, 1, 0, 0, 0, 1, 1]' : 0.0980771}", "{'[2, 2, 0, 2, 6, 3, 1, 0, 3, 0, 9, 0, 1, 0, 0, 0, 1, 1]' : 0.0985172}", "{'[2, 2, 0, 2, 6, 3, 1, 0, 3, 0, 9, 0, 1, 0, 0, 0, 1, 1]' : 0.0986409}", "{'[2, 2, 0, 2, 6, 3, 1, 0, 3, 0, 9, 0, 1, 0, 0, 0, 1, 1]' : 0.101054}", "{'[2, 2, 0, 2, 6, 3, 1, 0, 3, 0, 9, 0, 1, 0, 0, 0, 1, 1]' : 0.101067}", "{'[2, 2, 0, 2, 6, 3, 1, 0, 3, 0, 9, 0, 1, 0, 0, 0, 1, 1]' : 0.101067}", "{'[2, 2, 0, 2, 6, 3, 1, 0, 3, 0, 9, 0, 1, 0, 0, 0, 1, 1]' : 0.100966}", "{'[2, 2, 0, 2, 6, 3, 1, 0, 3, 0, 9, 0, 1, 0, 0, 0, 1, 1]' : 0.101122}", "{'[2, 2, 0, 2, 6, 3, 1, 0, 3, 0, 9, 0, 1, 0, 0, 0, 1, 1]' : 0.101085}", "{'[2, 2, 0, 2, 6, 3, 1, 0, 3, 0, 9, 0, 1, 0, 0, 0, 1, 1]' : 0.101055}", "{'[2, 2, 0, 2, 6, 3, 1, 0, 3, 0, 9, 0, 1, 0, 0, 0, 1, 1]' : 0.100961}", "{'[2, 2, 0, 2, 6, 3, 1, 0, 3, 0, 9, 0, 1, 0, 0, 0, 1, 1]' : 0.101013}", "{'[2, 2, 0, 2, 6, 3, 1, 0, 3, 0, 9, 0, 1, 0, 0, 0, 1, 1]' : 0.101088}", "{'[2, 2, 0, 2, 6, 3, 1, 0, 3, 0, 9, 0, 1, 0, 0, 0, 1, 1]' : 0.101032}", "{'[2, 2, 0, 2, 6, 3, 1, 0, 3, 0, 9, 0, 1, 0, 0, 0, 1, 1]' : 0.100933}", "{'[2, 2, 0, 2, 6, 3, 1, 0, 3, 0, 9, 0, 1, 0, 0, 0, 1, 1]' : 0.101016}", "{'[2, 2, 0, 2, 6, 3, 1, 0, 3, 0, 9, 0, 1, 0, 0, 0, 1, 1]' : 0.101073}", "{'[2, 2, 0, 2, 6, 3, 1, 0, 3, 0, 9, 0, 1, 0, 0, 0, 1, 1]' : 0.10133}", "{'[2, 2, 0, 2, 6, 3, 1, 0, 3, 0, 9, 0, 1, 0, 0, 0, 1, 1]' : 0.100928}", "{'[2, 2, 0, 2, 6, 3, 1, 0, 3, 0, 9, 0, 1, 0, 0, 0, 1, 1]' : 0.101077}", "{'[2, 2, 0, 2, 6, 3, 1, 0, 3, 0, 9, 0, 1, 0, 0, 0, 1, 1]' : 0.101021}", "{'[2, 2, 0, 2, 6, 3, 1, 0, 3, 0, 9, 0, 1, 0, 0, 0, 1, 1]' : 0.101099}"]
returning from 'run': {'[2, 2, 0, 2, 6, 3, 1, 0, 3, 0, 9, 0, 1, 0, 0, 0, 1, 1]': ([0.101148, 0.101121, 0.100947, 0.101036, 0.101045, 0.100884, 0.097924, 0.098105, 0.0980771, 0.0985172, 0.0986409, 0.101054, 0.101067, 0.101067, 0.100966, 0.101122, 0.101085, 0.101055, 0.100961, 0.101013, 0.101088, 0.101032, 0.100933, 0.101016, 0.101073, 0.10133, 0.100928, 0.101077, 0.101021, 0.101099], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 2, 0, 2, 6, 3, 1, 0, 3, 0, 9, 0, 1, 0, 0, 0, 1, 1]': ([0.101148, 0.101121, 0.100947, 0.101036, 0.101045, 0.100884, 0.097924, 0.098105, 0.0980771, 0.0985172, 0.0986409, 0.101054, 0.101067, 0.101067, 0.100966, 0.101122, 0.101085, 0.101055, 0.100961, 0.101013, 0.101088, 0.101032, 0.100933, 0.101016, 0.101073, 0.10133, 0.100928, 0.101077, 0.101021, 0.101099], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		142
        Multiplications: 	30
        Divisions: 		0
        Logical: 		0
        Reads: 			312
        Writes: 		81
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest14.exe __orio_perftest14.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest14.exe  
Program Test Output: 
{'[0, 3, 0, 0, 5, 3, 0, 1, 21, 0, 5, 28, 0, 0, 1, 1, 0, 0]' : 0.221038}
{'[0, 3, 0, 0, 5, 3, 0, 1, 21, 0, 5, 28, 0, 0, 1, 1, 0, 0]' : 0.216552}
{'[0, 3, 0, 0, 5, 3, 0, 1, 21, 0, 5, 28, 0, 0, 1, 1, 0, 0]' : 0.184207}
{'[0, 3, 0, 0, 5, 3, 0, 1, 21, 0, 5, 28, 0, 0, 1, 1, 0, 0]' : 0.184591}
{'[0, 3, 0, 0, 5, 3, 0, 1, 21, 0, 5, 28, 0, 0, 1, 1, 0, 0]' : 0.184284}
{'[0, 3, 0, 0, 5, 3, 0, 1, 21, 0, 5, 28, 0, 0, 1, 1, 0, 0]' : 0.184332}
{'[0, 3, 0, 0, 5, 3, 0, 1, 21, 0, 5, 28, 0, 0, 1, 1, 0, 0]' : 0.185035}
{'[0, 3, 0, 0, 5, 3, 0, 1, 21, 0, 5, 28, 0, 0, 1, 1, 0, 0]' : 0.184232}
{'[0, 3, 0, 0, 5, 3, 0, 1, 21, 0, 5, 28, 0, 0, 1, 1, 0, 0]' : 0.184235}
{'[0, 3, 0, 0, 5, 3, 0, 1, 21, 0, 5, 28, 0, 0, 1, 1, 0, 0]' : 0.184247}
{'[0, 3, 0, 0, 5, 3, 0, 1, 21, 0, 5, 28, 0, 0, 1, 1, 0, 0]' : 0.185018}
{'[0, 3, 0, 0, 5, 3, 0, 1, 21, 0, 5, 28, 0, 0, 1, 1, 0, 0]' : 0.1843}
{'[0, 3, 0, 0, 5, 3, 0, 1, 21, 0, 5, 28, 0, 0, 1, 1, 0, 0]' : 0.184271}
{'[0, 3, 0, 0, 5, 3, 0, 1, 21, 0, 5, 28, 0, 0, 1, 1, 0, 0]' : 0.184259}
{'[0, 3, 0, 0, 5, 3, 0, 1, 21, 0, 5, 28, 0, 0, 1, 1, 0, 0]' : 0.18498}
{'[0, 3, 0, 0, 5, 3, 0, 1, 21, 0, 5, 28, 0, 0, 1, 1, 0, 0]' : 0.184254}
{'[0, 3, 0, 0, 5, 3, 0, 1, 21, 0, 5, 28, 0, 0, 1, 1, 0, 0]' : 0.184335}
{'[0, 3, 0, 0, 5, 3, 0, 1, 21, 0, 5, 28, 0, 0, 1, 1, 0, 0]' : 0.18462}
{'[0, 3, 0, 0, 5, 3, 0, 1, 21, 0, 5, 28, 0, 0, 1, 1, 0, 0]' : 0.184275}
{'[0, 3, 0, 0, 5, 3, 0, 1, 21, 0, 5, 28, 0, 0, 1, 1, 0, 0]' : 0.184293}
{'[0, 3, 0, 0, 5, 3, 0, 1, 21, 0, 5, 28, 0, 0, 1, 1, 0, 0]' : 0.184228}
{'[0, 3, 0, 0, 5, 3, 0, 1, 21, 0, 5, 28, 0, 0, 1, 1, 0, 0]' : 0.18445}
{'[0, 3, 0, 0, 5, 3, 0, 1, 21, 0, 5, 28, 0, 0, 1, 1, 0, 0]' : 0.185173}
{'[0, 3, 0, 0, 5, 3, 0, 1, 21, 0, 5, 28, 0, 0, 1, 1, 0, 0]' : 0.18434}
{'[0, 3, 0, 0, 5, 3, 0, 1, 21, 0, 5, 28, 0, 0, 1, 1, 0, 0]' : 0.184359}
{'[0, 3, 0, 0, 5, 3, 0, 1, 21, 0, 5, 28, 0, 0, 1, 1, 0, 0]' : 0.184606}
{'[0, 3, 0, 0, 5, 3, 0, 1, 21, 0, 5, 28, 0, 0, 1, 1, 0, 0]' : 0.18437}
{'[0, 3, 0, 0, 5, 3, 0, 1, 21, 0, 5, 28, 0, 0, 1, 1, 0, 0]' : 0.184384}
{'[0, 3, 0, 0, 5, 3, 0, 1, 21, 0, 5, 28, 0, 0, 1, 1, 0, 0]' : 0.184345}
{'[0, 3, 0, 0, 5, 3, 0, 1, 21, 0, 5, 28, 0, 0, 1, 1, 0, 0]' : 0.184389}

out:
 ["{'[0, 3, 0, 0, 5, 3, 0, 1, 21, 0, 5, 28, 0, 0, 1, 1, 0, 0]' : 0.221038}", "{'[0, 3, 0, 0, 5, 3, 0, 1, 21, 0, 5, 28, 0, 0, 1, 1, 0, 0]' : 0.216552}", "{'[0, 3, 0, 0, 5, 3, 0, 1, 21, 0, 5, 28, 0, 0, 1, 1, 0, 0]' : 0.184207}", "{'[0, 3, 0, 0, 5, 3, 0, 1, 21, 0, 5, 28, 0, 0, 1, 1, 0, 0]' : 0.184591}", "{'[0, 3, 0, 0, 5, 3, 0, 1, 21, 0, 5, 28, 0, 0, 1, 1, 0, 0]' : 0.184284}", "{'[0, 3, 0, 0, 5, 3, 0, 1, 21, 0, 5, 28, 0, 0, 1, 1, 0, 0]' : 0.184332}", "{'[0, 3, 0, 0, 5, 3, 0, 1, 21, 0, 5, 28, 0, 0, 1, 1, 0, 0]' : 0.185035}", "{'[0, 3, 0, 0, 5, 3, 0, 1, 21, 0, 5, 28, 0, 0, 1, 1, 0, 0]' : 0.184232}", "{'[0, 3, 0, 0, 5, 3, 0, 1, 21, 0, 5, 28, 0, 0, 1, 1, 0, 0]' : 0.184235}", "{'[0, 3, 0, 0, 5, 3, 0, 1, 21, 0, 5, 28, 0, 0, 1, 1, 0, 0]' : 0.184247}", "{'[0, 3, 0, 0, 5, 3, 0, 1, 21, 0, 5, 28, 0, 0, 1, 1, 0, 0]' : 0.185018}", "{'[0, 3, 0, 0, 5, 3, 0, 1, 21, 0, 5, 28, 0, 0, 1, 1, 0, 0]' : 0.1843}", "{'[0, 3, 0, 0, 5, 3, 0, 1, 21, 0, 5, 28, 0, 0, 1, 1, 0, 0]' : 0.184271}", "{'[0, 3, 0, 0, 5, 3, 0, 1, 21, 0, 5, 28, 0, 0, 1, 1, 0, 0]' : 0.184259}", "{'[0, 3, 0, 0, 5, 3, 0, 1, 21, 0, 5, 28, 0, 0, 1, 1, 0, 0]' : 0.18498}", "{'[0, 3, 0, 0, 5, 3, 0, 1, 21, 0, 5, 28, 0, 0, 1, 1, 0, 0]' : 0.184254}", "{'[0, 3, 0, 0, 5, 3, 0, 1, 21, 0, 5, 28, 0, 0, 1, 1, 0, 0]' : 0.184335}", "{'[0, 3, 0, 0, 5, 3, 0, 1, 21, 0, 5, 28, 0, 0, 1, 1, 0, 0]' : 0.18462}", "{'[0, 3, 0, 0, 5, 3, 0, 1, 21, 0, 5, 28, 0, 0, 1, 1, 0, 0]' : 0.184275}", "{'[0, 3, 0, 0, 5, 3, 0, 1, 21, 0, 5, 28, 0, 0, 1, 1, 0, 0]' : 0.184293}", "{'[0, 3, 0, 0, 5, 3, 0, 1, 21, 0, 5, 28, 0, 0, 1, 1, 0, 0]' : 0.184228}", "{'[0, 3, 0, 0, 5, 3, 0, 1, 21, 0, 5, 28, 0, 0, 1, 1, 0, 0]' : 0.18445}", "{'[0, 3, 0, 0, 5, 3, 0, 1, 21, 0, 5, 28, 0, 0, 1, 1, 0, 0]' : 0.185173}", "{'[0, 3, 0, 0, 5, 3, 0, 1, 21, 0, 5, 28, 0, 0, 1, 1, 0, 0]' : 0.18434}", "{'[0, 3, 0, 0, 5, 3, 0, 1, 21, 0, 5, 28, 0, 0, 1, 1, 0, 0]' : 0.184359}", "{'[0, 3, 0, 0, 5, 3, 0, 1, 21, 0, 5, 28, 0, 0, 1, 1, 0, 0]' : 0.184606}", "{'[0, 3, 0, 0, 5, 3, 0, 1, 21, 0, 5, 28, 0, 0, 1, 1, 0, 0]' : 0.18437}", "{'[0, 3, 0, 0, 5, 3, 0, 1, 21, 0, 5, 28, 0, 0, 1, 1, 0, 0]' : 0.184384}", "{'[0, 3, 0, 0, 5, 3, 0, 1, 21, 0, 5, 28, 0, 0, 1, 1, 0, 0]' : 0.184345}", "{'[0, 3, 0, 0, 5, 3, 0, 1, 21, 0, 5, 28, 0, 0, 1, 1, 0, 0]' : 0.184389}"]
returning from 'run': {'[0, 3, 0, 0, 5, 3, 0, 1, 21, 0, 5, 28, 0, 0, 1, 1, 0, 0]': ([0.221038, 0.216552, 0.184207, 0.184591, 0.184284, 0.184332, 0.185035, 0.184232, 0.184235, 0.184247, 0.185018, 0.1843, 0.184271, 0.184259, 0.18498, 0.184254, 0.184335, 0.18462, 0.184275, 0.184293, 0.184228, 0.18445, 0.185173, 0.18434, 0.184359, 0.184606, 0.18437, 0.184384, 0.184345, 0.184389], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 3, 0, 0, 5, 3, 0, 1, 21, 0, 5, 28, 0, 0, 1, 1, 0, 0]': ([0.221038, 0.216552, 0.184207, 0.184591, 0.184284, 0.184332, 0.185035, 0.184232, 0.184235, 0.184247, 0.185018, 0.1843, 0.184271, 0.184259, 0.18498, 0.184254, 0.184335, 0.18462, 0.184275, 0.184293, 0.184228, 0.18445, 0.185173, 0.18434, 0.184359, 0.184606, 0.18437, 0.184384, 0.184345, 0.184389], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	29
        Max loop nest depth: 	5
        Additions: 		452
        Multiplications: 	108
        Divisions: 		0
        Logical: 		0
        Reads: 			901
        Writes: 		167
        Comparisons:		29
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest15.exe __orio_perftest15.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest15.exe  
Program Test Output: 
{'[1, 6, 2, 0, 4, 1, 0, 1, 27, 4, 6, 0, 0, 0, 0, 0, 0, 1]' : 0.200069}
{'[1, 6, 2, 0, 4, 1, 0, 1, 27, 4, 6, 0, 0, 0, 0, 0, 0, 1]' : 0.19949}
{'[1, 6, 2, 0, 4, 1, 0, 1, 27, 4, 6, 0, 0, 0, 0, 0, 0, 1]' : 0.170114}
{'[1, 6, 2, 0, 4, 1, 0, 1, 27, 4, 6, 0, 0, 0, 0, 0, 0, 1]' : 0.170692}
{'[1, 6, 2, 0, 4, 1, 0, 1, 27, 4, 6, 0, 0, 0, 0, 0, 0, 1]' : 0.17317}
{'[1, 6, 2, 0, 4, 1, 0, 1, 27, 4, 6, 0, 0, 0, 0, 0, 0, 1]' : 0.173196}
{'[1, 6, 2, 0, 4, 1, 0, 1, 27, 4, 6, 0, 0, 0, 0, 0, 0, 1]' : 0.173248}
{'[1, 6, 2, 0, 4, 1, 0, 1, 27, 4, 6, 0, 0, 0, 0, 0, 0, 1]' : 0.173409}
{'[1, 6, 2, 0, 4, 1, 0, 1, 27, 4, 6, 0, 0, 0, 0, 0, 0, 1]' : 0.173365}
{'[1, 6, 2, 0, 4, 1, 0, 1, 27, 4, 6, 0, 0, 0, 0, 0, 0, 1]' : 0.171562}
{'[1, 6, 2, 0, 4, 1, 0, 1, 27, 4, 6, 0, 0, 0, 0, 0, 0, 1]' : 0.173305}
{'[1, 6, 2, 0, 4, 1, 0, 1, 27, 4, 6, 0, 0, 0, 0, 0, 0, 1]' : 0.173434}
{'[1, 6, 2, 0, 4, 1, 0, 1, 27, 4, 6, 0, 0, 0, 0, 0, 0, 1]' : 0.173741}
{'[1, 6, 2, 0, 4, 1, 0, 1, 27, 4, 6, 0, 0, 0, 0, 0, 0, 1]' : 0.177815}
{'[1, 6, 2, 0, 4, 1, 0, 1, 27, 4, 6, 0, 0, 0, 0, 0, 0, 1]' : 0.178213}
{'[1, 6, 2, 0, 4, 1, 0, 1, 27, 4, 6, 0, 0, 0, 0, 0, 0, 1]' : 0.174198}
{'[1, 6, 2, 0, 4, 1, 0, 1, 27, 4, 6, 0, 0, 0, 0, 0, 0, 1]' : 0.173288}
{'[1, 6, 2, 0, 4, 1, 0, 1, 27, 4, 6, 0, 0, 0, 0, 0, 0, 1]' : 0.173364}
{'[1, 6, 2, 0, 4, 1, 0, 1, 27, 4, 6, 0, 0, 0, 0, 0, 0, 1]' : 0.173358}
{'[1, 6, 2, 0, 4, 1, 0, 1, 27, 4, 6, 0, 0, 0, 0, 0, 0, 1]' : 0.173134}
{'[1, 6, 2, 0, 4, 1, 0, 1, 27, 4, 6, 0, 0, 0, 0, 0, 0, 1]' : 0.173484}
{'[1, 6, 2, 0, 4, 1, 0, 1, 27, 4, 6, 0, 0, 0, 0, 0, 0, 1]' : 0.173158}
{'[1, 6, 2, 0, 4, 1, 0, 1, 27, 4, 6, 0, 0, 0, 0, 0, 0, 1]' : 0.173586}
{'[1, 6, 2, 0, 4, 1, 0, 1, 27, 4, 6, 0, 0, 0, 0, 0, 0, 1]' : 0.173202}
{'[1, 6, 2, 0, 4, 1, 0, 1, 27, 4, 6, 0, 0, 0, 0, 0, 0, 1]' : 0.173223}
{'[1, 6, 2, 0, 4, 1, 0, 1, 27, 4, 6, 0, 0, 0, 0, 0, 0, 1]' : 0.173274}
{'[1, 6, 2, 0, 4, 1, 0, 1, 27, 4, 6, 0, 0, 0, 0, 0, 0, 1]' : 0.173426}
{'[1, 6, 2, 0, 4, 1, 0, 1, 27, 4, 6, 0, 0, 0, 0, 0, 0, 1]' : 0.173063}
{'[1, 6, 2, 0, 4, 1, 0, 1, 27, 4, 6, 0, 0, 0, 0, 0, 0, 1]' : 0.173653}
{'[1, 6, 2, 0, 4, 1, 0, 1, 27, 4, 6, 0, 0, 0, 0, 0, 0, 1]' : 0.173517}

out:
 ["{'[1, 6, 2, 0, 4, 1, 0, 1, 27, 4, 6, 0, 0, 0, 0, 0, 0, 1]' : 0.200069}", "{'[1, 6, 2, 0, 4, 1, 0, 1, 27, 4, 6, 0, 0, 0, 0, 0, 0, 1]' : 0.19949}", "{'[1, 6, 2, 0, 4, 1, 0, 1, 27, 4, 6, 0, 0, 0, 0, 0, 0, 1]' : 0.170114}", "{'[1, 6, 2, 0, 4, 1, 0, 1, 27, 4, 6, 0, 0, 0, 0, 0, 0, 1]' : 0.170692}", "{'[1, 6, 2, 0, 4, 1, 0, 1, 27, 4, 6, 0, 0, 0, 0, 0, 0, 1]' : 0.17317}", "{'[1, 6, 2, 0, 4, 1, 0, 1, 27, 4, 6, 0, 0, 0, 0, 0, 0, 1]' : 0.173196}", "{'[1, 6, 2, 0, 4, 1, 0, 1, 27, 4, 6, 0, 0, 0, 0, 0, 0, 1]' : 0.173248}", "{'[1, 6, 2, 0, 4, 1, 0, 1, 27, 4, 6, 0, 0, 0, 0, 0, 0, 1]' : 0.173409}", "{'[1, 6, 2, 0, 4, 1, 0, 1, 27, 4, 6, 0, 0, 0, 0, 0, 0, 1]' : 0.173365}", "{'[1, 6, 2, 0, 4, 1, 0, 1, 27, 4, 6, 0, 0, 0, 0, 0, 0, 1]' : 0.171562}", "{'[1, 6, 2, 0, 4, 1, 0, 1, 27, 4, 6, 0, 0, 0, 0, 0, 0, 1]' : 0.173305}", "{'[1, 6, 2, 0, 4, 1, 0, 1, 27, 4, 6, 0, 0, 0, 0, 0, 0, 1]' : 0.173434}", "{'[1, 6, 2, 0, 4, 1, 0, 1, 27, 4, 6, 0, 0, 0, 0, 0, 0, 1]' : 0.173741}", "{'[1, 6, 2, 0, 4, 1, 0, 1, 27, 4, 6, 0, 0, 0, 0, 0, 0, 1]' : 0.177815}", "{'[1, 6, 2, 0, 4, 1, 0, 1, 27, 4, 6, 0, 0, 0, 0, 0, 0, 1]' : 0.178213}", "{'[1, 6, 2, 0, 4, 1, 0, 1, 27, 4, 6, 0, 0, 0, 0, 0, 0, 1]' : 0.174198}", "{'[1, 6, 2, 0, 4, 1, 0, 1, 27, 4, 6, 0, 0, 0, 0, 0, 0, 1]' : 0.173288}", "{'[1, 6, 2, 0, 4, 1, 0, 1, 27, 4, 6, 0, 0, 0, 0, 0, 0, 1]' : 0.173364}", "{'[1, 6, 2, 0, 4, 1, 0, 1, 27, 4, 6, 0, 0, 0, 0, 0, 0, 1]' : 0.173358}", "{'[1, 6, 2, 0, 4, 1, 0, 1, 27, 4, 6, 0, 0, 0, 0, 0, 0, 1]' : 0.173134}", "{'[1, 6, 2, 0, 4, 1, 0, 1, 27, 4, 6, 0, 0, 0, 0, 0, 0, 1]' : 0.173484}", "{'[1, 6, 2, 0, 4, 1, 0, 1, 27, 4, 6, 0, 0, 0, 0, 0, 0, 1]' : 0.173158}", "{'[1, 6, 2, 0, 4, 1, 0, 1, 27, 4, 6, 0, 0, 0, 0, 0, 0, 1]' : 0.173586}", "{'[1, 6, 2, 0, 4, 1, 0, 1, 27, 4, 6, 0, 0, 0, 0, 0, 0, 1]' : 0.173202}", "{'[1, 6, 2, 0, 4, 1, 0, 1, 27, 4, 6, 0, 0, 0, 0, 0, 0, 1]' : 0.173223}", "{'[1, 6, 2, 0, 4, 1, 0, 1, 27, 4, 6, 0, 0, 0, 0, 0, 0, 1]' : 0.173274}", "{'[1, 6, 2, 0, 4, 1, 0, 1, 27, 4, 6, 0, 0, 0, 0, 0, 0, 1]' : 0.173426}", "{'[1, 6, 2, 0, 4, 1, 0, 1, 27, 4, 6, 0, 0, 0, 0, 0, 0, 1]' : 0.173063}", "{'[1, 6, 2, 0, 4, 1, 0, 1, 27, 4, 6, 0, 0, 0, 0, 0, 0, 1]' : 0.173653}", "{'[1, 6, 2, 0, 4, 1, 0, 1, 27, 4, 6, 0, 0, 0, 0, 0, 0, 1]' : 0.173517}"]
returning from 'run': {'[1, 6, 2, 0, 4, 1, 0, 1, 27, 4, 6, 0, 0, 0, 0, 0, 0, 1]': ([0.200069, 0.19949, 0.170114, 0.170692, 0.17317, 0.173196, 0.173248, 0.173409, 0.173365, 0.171562, 0.173305, 0.173434, 0.173741, 0.177815, 0.178213, 0.174198, 0.173288, 0.173364, 0.173358, 0.173134, 0.173484, 0.173158, 0.173586, 0.173202, 0.173223, 0.173274, 0.173426, 0.173063, 0.173653, 0.173517], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 6, 2, 0, 4, 1, 0, 1, 27, 4, 6, 0, 0, 0, 0, 0, 0, 1]': ([0.200069, 0.19949, 0.170114, 0.170692, 0.17317, 0.173196, 0.173248, 0.173409, 0.173365, 0.171562, 0.173305, 0.173434, 0.173741, 0.177815, 0.178213, 0.174198, 0.173288, 0.173364, 0.173358, 0.173134, 0.173484, 0.173158, 0.173586, 0.173202, 0.173223, 0.173274, 0.173426, 0.173063, 0.173653, 0.173517], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	6
        Additions: 		266
        Multiplications: 	74
        Divisions: 		0
        Logical: 		0
        Reads: 			547
        Writes: 		108
        Comparisons:		16
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest16.exe __orio_perftest16.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest16.exe  
Program Test Output: 
{'[6, 3, 5, 5, 4, 4, 1, 1, 8, 0, 28, 5, 0, 0, 0, 1, 1, 1]' : 0.221068}
{'[6, 3, 5, 5, 4, 4, 1, 1, 8, 0, 28, 5, 0, 0, 0, 1, 1, 1]' : 0.220603}
{'[6, 3, 5, 5, 4, 4, 1, 1, 8, 0, 28, 5, 0, 0, 0, 1, 1, 1]' : 0.220661}
{'[6, 3, 5, 5, 4, 4, 1, 1, 8, 0, 28, 5, 0, 0, 0, 1, 1, 1]' : 0.219912}
{'[6, 3, 5, 5, 4, 4, 1, 1, 8, 0, 28, 5, 0, 0, 0, 1, 1, 1]' : 0.219227}
{'[6, 3, 5, 5, 4, 4, 1, 1, 8, 0, 28, 5, 0, 0, 0, 1, 1, 1]' : 0.219192}
{'[6, 3, 5, 5, 4, 4, 1, 1, 8, 0, 28, 5, 0, 0, 0, 1, 1, 1]' : 0.214915}
{'[6, 3, 5, 5, 4, 4, 1, 1, 8, 0, 28, 5, 0, 0, 0, 1, 1, 1]' : 0.2133}
{'[6, 3, 5, 5, 4, 4, 1, 1, 8, 0, 28, 5, 0, 0, 0, 1, 1, 1]' : 0.212856}
{'[6, 3, 5, 5, 4, 4, 1, 1, 8, 0, 28, 5, 0, 0, 0, 1, 1, 1]' : 0.216737}
{'[6, 3, 5, 5, 4, 4, 1, 1, 8, 0, 28, 5, 0, 0, 0, 1, 1, 1]' : 0.226054}
{'[6, 3, 5, 5, 4, 4, 1, 1, 8, 0, 28, 5, 0, 0, 0, 1, 1, 1]' : 0.226112}
{'[6, 3, 5, 5, 4, 4, 1, 1, 8, 0, 28, 5, 0, 0, 0, 1, 1, 1]' : 0.226058}
{'[6, 3, 5, 5, 4, 4, 1, 1, 8, 0, 28, 5, 0, 0, 0, 1, 1, 1]' : 0.220443}
{'[6, 3, 5, 5, 4, 4, 1, 1, 8, 0, 28, 5, 0, 0, 0, 1, 1, 1]' : 0.21866}
{'[6, 3, 5, 5, 4, 4, 1, 1, 8, 0, 28, 5, 0, 0, 0, 1, 1, 1]' : 0.219656}
{'[6, 3, 5, 5, 4, 4, 1, 1, 8, 0, 28, 5, 0, 0, 0, 1, 1, 1]' : 0.221972}
{'[6, 3, 5, 5, 4, 4, 1, 1, 8, 0, 28, 5, 0, 0, 0, 1, 1, 1]' : 0.219338}
{'[6, 3, 5, 5, 4, 4, 1, 1, 8, 0, 28, 5, 0, 0, 0, 1, 1, 1]' : 0.221729}
{'[6, 3, 5, 5, 4, 4, 1, 1, 8, 0, 28, 5, 0, 0, 0, 1, 1, 1]' : 0.226066}
{'[6, 3, 5, 5, 4, 4, 1, 1, 8, 0, 28, 5, 0, 0, 0, 1, 1, 1]' : 0.226313}
{'[6, 3, 5, 5, 4, 4, 1, 1, 8, 0, 28, 5, 0, 0, 0, 1, 1, 1]' : 0.219698}
{'[6, 3, 5, 5, 4, 4, 1, 1, 8, 0, 28, 5, 0, 0, 0, 1, 1, 1]' : 0.219528}
{'[6, 3, 5, 5, 4, 4, 1, 1, 8, 0, 28, 5, 0, 0, 0, 1, 1, 1]' : 0.219375}
{'[6, 3, 5, 5, 4, 4, 1, 1, 8, 0, 28, 5, 0, 0, 0, 1, 1, 1]' : 0.219095}
{'[6, 3, 5, 5, 4, 4, 1, 1, 8, 0, 28, 5, 0, 0, 0, 1, 1, 1]' : 0.219395}
{'[6, 3, 5, 5, 4, 4, 1, 1, 8, 0, 28, 5, 0, 0, 0, 1, 1, 1]' : 0.219214}
{'[6, 3, 5, 5, 4, 4, 1, 1, 8, 0, 28, 5, 0, 0, 0, 1, 1, 1]' : 0.22128}
{'[6, 3, 5, 5, 4, 4, 1, 1, 8, 0, 28, 5, 0, 0, 0, 1, 1, 1]' : 0.226027}
{'[6, 3, 5, 5, 4, 4, 1, 1, 8, 0, 28, 5, 0, 0, 0, 1, 1, 1]' : 0.226286}

out:
 ["{'[6, 3, 5, 5, 4, 4, 1, 1, 8, 0, 28, 5, 0, 0, 0, 1, 1, 1]' : 0.221068}", "{'[6, 3, 5, 5, 4, 4, 1, 1, 8, 0, 28, 5, 0, 0, 0, 1, 1, 1]' : 0.220603}", "{'[6, 3, 5, 5, 4, 4, 1, 1, 8, 0, 28, 5, 0, 0, 0, 1, 1, 1]' : 0.220661}", "{'[6, 3, 5, 5, 4, 4, 1, 1, 8, 0, 28, 5, 0, 0, 0, 1, 1, 1]' : 0.219912}", "{'[6, 3, 5, 5, 4, 4, 1, 1, 8, 0, 28, 5, 0, 0, 0, 1, 1, 1]' : 0.219227}", "{'[6, 3, 5, 5, 4, 4, 1, 1, 8, 0, 28, 5, 0, 0, 0, 1, 1, 1]' : 0.219192}", "{'[6, 3, 5, 5, 4, 4, 1, 1, 8, 0, 28, 5, 0, 0, 0, 1, 1, 1]' : 0.214915}", "{'[6, 3, 5, 5, 4, 4, 1, 1, 8, 0, 28, 5, 0, 0, 0, 1, 1, 1]' : 0.2133}", "{'[6, 3, 5, 5, 4, 4, 1, 1, 8, 0, 28, 5, 0, 0, 0, 1, 1, 1]' : 0.212856}", "{'[6, 3, 5, 5, 4, 4, 1, 1, 8, 0, 28, 5, 0, 0, 0, 1, 1, 1]' : 0.216737}", "{'[6, 3, 5, 5, 4, 4, 1, 1, 8, 0, 28, 5, 0, 0, 0, 1, 1, 1]' : 0.226054}", "{'[6, 3, 5, 5, 4, 4, 1, 1, 8, 0, 28, 5, 0, 0, 0, 1, 1, 1]' : 0.226112}", "{'[6, 3, 5, 5, 4, 4, 1, 1, 8, 0, 28, 5, 0, 0, 0, 1, 1, 1]' : 0.226058}", "{'[6, 3, 5, 5, 4, 4, 1, 1, 8, 0, 28, 5, 0, 0, 0, 1, 1, 1]' : 0.220443}", "{'[6, 3, 5, 5, 4, 4, 1, 1, 8, 0, 28, 5, 0, 0, 0, 1, 1, 1]' : 0.21866}", "{'[6, 3, 5, 5, 4, 4, 1, 1, 8, 0, 28, 5, 0, 0, 0, 1, 1, 1]' : 0.219656}", "{'[6, 3, 5, 5, 4, 4, 1, 1, 8, 0, 28, 5, 0, 0, 0, 1, 1, 1]' : 0.221972}", "{'[6, 3, 5, 5, 4, 4, 1, 1, 8, 0, 28, 5, 0, 0, 0, 1, 1, 1]' : 0.219338}", "{'[6, 3, 5, 5, 4, 4, 1, 1, 8, 0, 28, 5, 0, 0, 0, 1, 1, 1]' : 0.221729}", "{'[6, 3, 5, 5, 4, 4, 1, 1, 8, 0, 28, 5, 0, 0, 0, 1, 1, 1]' : 0.226066}", "{'[6, 3, 5, 5, 4, 4, 1, 1, 8, 0, 28, 5, 0, 0, 0, 1, 1, 1]' : 0.226313}", "{'[6, 3, 5, 5, 4, 4, 1, 1, 8, 0, 28, 5, 0, 0, 0, 1, 1, 1]' : 0.219698}", "{'[6, 3, 5, 5, 4, 4, 1, 1, 8, 0, 28, 5, 0, 0, 0, 1, 1, 1]' : 0.219528}", "{'[6, 3, 5, 5, 4, 4, 1, 1, 8, 0, 28, 5, 0, 0, 0, 1, 1, 1]' : 0.219375}", "{'[6, 3, 5, 5, 4, 4, 1, 1, 8, 0, 28, 5, 0, 0, 0, 1, 1, 1]' : 0.219095}", "{'[6, 3, 5, 5, 4, 4, 1, 1, 8, 0, 28, 5, 0, 0, 0, 1, 1, 1]' : 0.219395}", "{'[6, 3, 5, 5, 4, 4, 1, 1, 8, 0, 28, 5, 0, 0, 0, 1, 1, 1]' : 0.219214}", "{'[6, 3, 5, 5, 4, 4, 1, 1, 8, 0, 28, 5, 0, 0, 0, 1, 1, 1]' : 0.22128}", "{'[6, 3, 5, 5, 4, 4, 1, 1, 8, 0, 28, 5, 0, 0, 0, 1, 1, 1]' : 0.226027}", "{'[6, 3, 5, 5, 4, 4, 1, 1, 8, 0, 28, 5, 0, 0, 0, 1, 1, 1]' : 0.226286}"]
returning from 'run': {'[6, 3, 5, 5, 4, 4, 1, 1, 8, 0, 28, 5, 0, 0, 0, 1, 1, 1]': ([0.221068, 0.220603, 0.220661, 0.219912, 0.219227, 0.219192, 0.214915, 0.2133, 0.212856, 0.216737, 0.226054, 0.226112, 0.226058, 0.220443, 0.21866, 0.219656, 0.221972, 0.219338, 0.221729, 0.226066, 0.226313, 0.219698, 0.219528, 0.219375, 0.219095, 0.219395, 0.219214, 0.22128, 0.226027, 0.226286], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 3, 5, 5, 4, 4, 1, 1, 8, 0, 28, 5, 0, 0, 0, 1, 1, 1]': ([0.221068, 0.220603, 0.220661, 0.219912, 0.219227, 0.219192, 0.214915, 0.2133, 0.212856, 0.216737, 0.226054, 0.226112, 0.226058, 0.220443, 0.21866, 0.219656, 0.221972, 0.219338, 0.221729, 0.226066, 0.226313, 0.219698, 0.219528, 0.219375, 0.219095, 0.219395, 0.219214, 0.22128, 0.226027, 0.226286], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	69
        Max loop nest depth: 	4
        Additions: 		6580
        Multiplications: 	2856
        Divisions: 		0
        Logical: 		0
        Reads: 			11659
        Writes: 		1804
        Comparisons:		69
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest17.exe __orio_perftest17.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest17.exe  
Program Test Output: 
{'[0, 0, 6, 4, 1, 4, 0, 0, 25, 26, 16, 0, 0, 2, 0, 1, 1, 1]' : 0.163273}
{'[0, 0, 6, 4, 1, 4, 0, 0, 25, 26, 16, 0, 0, 2, 0, 1, 1, 1]' : 0.169168}
{'[0, 0, 6, 4, 1, 4, 0, 0, 25, 26, 16, 0, 0, 2, 0, 1, 1, 1]' : 0.166649}
{'[0, 0, 6, 4, 1, 4, 0, 0, 25, 26, 16, 0, 0, 2, 0, 1, 1, 1]' : 0.161865}
{'[0, 0, 6, 4, 1, 4, 0, 0, 25, 26, 16, 0, 0, 2, 0, 1, 1, 1]' : 0.161774}
{'[0, 0, 6, 4, 1, 4, 0, 0, 25, 26, 16, 0, 0, 2, 0, 1, 1, 1]' : 0.162229}
{'[0, 0, 6, 4, 1, 4, 0, 0, 25, 26, 16, 0, 0, 2, 0, 1, 1, 1]' : 0.161911}
{'[0, 0, 6, 4, 1, 4, 0, 0, 25, 26, 16, 0, 0, 2, 0, 1, 1, 1]' : 0.162316}
{'[0, 0, 6, 4, 1, 4, 0, 0, 25, 26, 16, 0, 0, 2, 0, 1, 1, 1]' : 0.162029}
{'[0, 0, 6, 4, 1, 4, 0, 0, 25, 26, 16, 0, 0, 2, 0, 1, 1, 1]' : 0.162114}
{'[0, 0, 6, 4, 1, 4, 0, 0, 25, 26, 16, 0, 0, 2, 0, 1, 1, 1]' : 0.161876}
{'[0, 0, 6, 4, 1, 4, 0, 0, 25, 26, 16, 0, 0, 2, 0, 1, 1, 1]' : 0.162265}
{'[0, 0, 6, 4, 1, 4, 0, 0, 25, 26, 16, 0, 0, 2, 0, 1, 1, 1]' : 0.161464}
{'[0, 0, 6, 4, 1, 4, 0, 0, 25, 26, 16, 0, 0, 2, 0, 1, 1, 1]' : 0.165004}
{'[0, 0, 6, 4, 1, 4, 0, 0, 25, 26, 16, 0, 0, 2, 0, 1, 1, 1]' : 0.162042}
{'[0, 0, 6, 4, 1, 4, 0, 0, 25, 26, 16, 0, 0, 2, 0, 1, 1, 1]' : 0.162202}
{'[0, 0, 6, 4, 1, 4, 0, 0, 25, 26, 16, 0, 0, 2, 0, 1, 1, 1]' : 0.161967}
{'[0, 0, 6, 4, 1, 4, 0, 0, 25, 26, 16, 0, 0, 2, 0, 1, 1, 1]' : 0.161985}
{'[0, 0, 6, 4, 1, 4, 0, 0, 25, 26, 16, 0, 0, 2, 0, 1, 1, 1]' : 0.161701}
{'[0, 0, 6, 4, 1, 4, 0, 0, 25, 26, 16, 0, 0, 2, 0, 1, 1, 1]' : 0.167321}
{'[0, 0, 6, 4, 1, 4, 0, 0, 25, 26, 16, 0, 0, 2, 0, 1, 1, 1]' : 0.161572}
{'[0, 0, 6, 4, 1, 4, 0, 0, 25, 26, 16, 0, 0, 2, 0, 1, 1, 1]' : 0.161952}
{'[0, 0, 6, 4, 1, 4, 0, 0, 25, 26, 16, 0, 0, 2, 0, 1, 1, 1]' : 0.161542}
{'[0, 0, 6, 4, 1, 4, 0, 0, 25, 26, 16, 0, 0, 2, 0, 1, 1, 1]' : 0.16181}
{'[0, 0, 6, 4, 1, 4, 0, 0, 25, 26, 16, 0, 0, 2, 0, 1, 1, 1]' : 0.162167}
{'[0, 0, 6, 4, 1, 4, 0, 0, 25, 26, 16, 0, 0, 2, 0, 1, 1, 1]' : 0.166501}
{'[0, 0, 6, 4, 1, 4, 0, 0, 25, 26, 16, 0, 0, 2, 0, 1, 1, 1]' : 0.165165}
{'[0, 0, 6, 4, 1, 4, 0, 0, 25, 26, 16, 0, 0, 2, 0, 1, 1, 1]' : 0.159859}
{'[0, 0, 6, 4, 1, 4, 0, 0, 25, 26, 16, 0, 0, 2, 0, 1, 1, 1]' : 0.161932}
{'[0, 0, 6, 4, 1, 4, 0, 0, 25, 26, 16, 0, 0, 2, 0, 1, 1, 1]' : 0.162093}

out:
 ["{'[0, 0, 6, 4, 1, 4, 0, 0, 25, 26, 16, 0, 0, 2, 0, 1, 1, 1]' : 0.163273}", "{'[0, 0, 6, 4, 1, 4, 0, 0, 25, 26, 16, 0, 0, 2, 0, 1, 1, 1]' : 0.169168}", "{'[0, 0, 6, 4, 1, 4, 0, 0, 25, 26, 16, 0, 0, 2, 0, 1, 1, 1]' : 0.166649}", "{'[0, 0, 6, 4, 1, 4, 0, 0, 25, 26, 16, 0, 0, 2, 0, 1, 1, 1]' : 0.161865}", "{'[0, 0, 6, 4, 1, 4, 0, 0, 25, 26, 16, 0, 0, 2, 0, 1, 1, 1]' : 0.161774}", "{'[0, 0, 6, 4, 1, 4, 0, 0, 25, 26, 16, 0, 0, 2, 0, 1, 1, 1]' : 0.162229}", "{'[0, 0, 6, 4, 1, 4, 0, 0, 25, 26, 16, 0, 0, 2, 0, 1, 1, 1]' : 0.161911}", "{'[0, 0, 6, 4, 1, 4, 0, 0, 25, 26, 16, 0, 0, 2, 0, 1, 1, 1]' : 0.162316}", "{'[0, 0, 6, 4, 1, 4, 0, 0, 25, 26, 16, 0, 0, 2, 0, 1, 1, 1]' : 0.162029}", "{'[0, 0, 6, 4, 1, 4, 0, 0, 25, 26, 16, 0, 0, 2, 0, 1, 1, 1]' : 0.162114}", "{'[0, 0, 6, 4, 1, 4, 0, 0, 25, 26, 16, 0, 0, 2, 0, 1, 1, 1]' : 0.161876}", "{'[0, 0, 6, 4, 1, 4, 0, 0, 25, 26, 16, 0, 0, 2, 0, 1, 1, 1]' : 0.162265}", "{'[0, 0, 6, 4, 1, 4, 0, 0, 25, 26, 16, 0, 0, 2, 0, 1, 1, 1]' : 0.161464}", "{'[0, 0, 6, 4, 1, 4, 0, 0, 25, 26, 16, 0, 0, 2, 0, 1, 1, 1]' : 0.165004}", "{'[0, 0, 6, 4, 1, 4, 0, 0, 25, 26, 16, 0, 0, 2, 0, 1, 1, 1]' : 0.162042}", "{'[0, 0, 6, 4, 1, 4, 0, 0, 25, 26, 16, 0, 0, 2, 0, 1, 1, 1]' : 0.162202}", "{'[0, 0, 6, 4, 1, 4, 0, 0, 25, 26, 16, 0, 0, 2, 0, 1, 1, 1]' : 0.161967}", "{'[0, 0, 6, 4, 1, 4, 0, 0, 25, 26, 16, 0, 0, 2, 0, 1, 1, 1]' : 0.161985}", "{'[0, 0, 6, 4, 1, 4, 0, 0, 25, 26, 16, 0, 0, 2, 0, 1, 1, 1]' : 0.161701}", "{'[0, 0, 6, 4, 1, 4, 0, 0, 25, 26, 16, 0, 0, 2, 0, 1, 1, 1]' : 0.167321}", "{'[0, 0, 6, 4, 1, 4, 0, 0, 25, 26, 16, 0, 0, 2, 0, 1, 1, 1]' : 0.161572}", "{'[0, 0, 6, 4, 1, 4, 0, 0, 25, 26, 16, 0, 0, 2, 0, 1, 1, 1]' : 0.161952}", "{'[0, 0, 6, 4, 1, 4, 0, 0, 25, 26, 16, 0, 0, 2, 0, 1, 1, 1]' : 0.161542}", "{'[0, 0, 6, 4, 1, 4, 0, 0, 25, 26, 16, 0, 0, 2, 0, 1, 1, 1]' : 0.16181}", "{'[0, 0, 6, 4, 1, 4, 0, 0, 25, 26, 16, 0, 0, 2, 0, 1, 1, 1]' : 0.162167}", "{'[0, 0, 6, 4, 1, 4, 0, 0, 25, 26, 16, 0, 0, 2, 0, 1, 1, 1]' : 0.166501}", "{'[0, 0, 6, 4, 1, 4, 0, 0, 25, 26, 16, 0, 0, 2, 0, 1, 1, 1]' : 0.165165}", "{'[0, 0, 6, 4, 1, 4, 0, 0, 25, 26, 16, 0, 0, 2, 0, 1, 1, 1]' : 0.159859}", "{'[0, 0, 6, 4, 1, 4, 0, 0, 25, 26, 16, 0, 0, 2, 0, 1, 1, 1]' : 0.161932}", "{'[0, 0, 6, 4, 1, 4, 0, 0, 25, 26, 16, 0, 0, 2, 0, 1, 1, 1]' : 0.162093}"]
returning from 'run': {'[0, 0, 6, 4, 1, 4, 0, 0, 25, 26, 16, 0, 0, 2, 0, 1, 1, 1]': ([0.163273, 0.169168, 0.166649, 0.161865, 0.161774, 0.162229, 0.161911, 0.162316, 0.162029, 0.162114, 0.161876, 0.162265, 0.161464, 0.165004, 0.162042, 0.162202, 0.161967, 0.161985, 0.161701, 0.167321, 0.161572, 0.161952, 0.161542, 0.16181, 0.162167, 0.166501, 0.165165, 0.159859, 0.161932, 0.162093], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 6, 4, 1, 4, 0, 0, 25, 26, 16, 0, 0, 2, 0, 1, 1, 1]': ([0.163273, 0.169168, 0.166649, 0.161865, 0.161774, 0.162229, 0.161911, 0.162316, 0.162029, 0.162114, 0.161876, 0.162265, 0.161464, 0.165004, 0.162042, 0.162202, 0.161967, 0.161985, 0.161701, 0.167321, 0.161572, 0.161952, 0.161542, 0.16181, 0.162167, 0.166501, 0.165165, 0.159859, 0.161932, 0.162093], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	58
        Max loop nest depth: 	6
        Additions: 		1331
        Multiplications: 	494
        Divisions: 		0
        Logical: 		0
        Reads: 			2931
        Writes: 		637
        Comparisons:		58
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest18.exe __orio_perftest18.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest18.exe  
Program Test Output: 
{'[1, 1, 6, 6, 6, 4, 1, 0, 19, 9, 0, 2, 1, 0, 1, 1, 1, 1]' : 0.0923212}
{'[1, 1, 6, 6, 6, 4, 1, 0, 19, 9, 0, 2, 1, 0, 1, 1, 1, 1]' : 0.092118}
{'[1, 1, 6, 6, 6, 4, 1, 0, 19, 9, 0, 2, 1, 0, 1, 1, 1, 1]' : 0.0921009}
{'[1, 1, 6, 6, 6, 4, 1, 0, 19, 9, 0, 2, 1, 0, 1, 1, 1, 1]' : 0.092005}
{'[1, 1, 6, 6, 6, 4, 1, 0, 19, 9, 0, 2, 1, 0, 1, 1, 1, 1]' : 0.09164}
{'[1, 1, 6, 6, 6, 4, 1, 0, 19, 9, 0, 2, 1, 0, 1, 1, 1, 1]' : 0.0917799}
{'[1, 1, 6, 6, 6, 4, 1, 0, 19, 9, 0, 2, 1, 0, 1, 1, 1, 1]' : 0.0917749}
{'[1, 1, 6, 6, 6, 4, 1, 0, 19, 9, 0, 2, 1, 0, 1, 1, 1, 1]' : 0.0918241}
{'[1, 1, 6, 6, 6, 4, 1, 0, 19, 9, 0, 2, 1, 0, 1, 1, 1, 1]' : 0.0919981}
{'[1, 1, 6, 6, 6, 4, 1, 0, 19, 9, 0, 2, 1, 0, 1, 1, 1, 1]' : 0.0919001}
{'[1, 1, 6, 6, 6, 4, 1, 0, 19, 9, 0, 2, 1, 0, 1, 1, 1, 1]' : 0.091953}
{'[1, 1, 6, 6, 6, 4, 1, 0, 19, 9, 0, 2, 1, 0, 1, 1, 1, 1]' : 0.092128}
{'[1, 1, 6, 6, 6, 4, 1, 0, 19, 9, 0, 2, 1, 0, 1, 1, 1, 1]' : 0.0921061}
{'[1, 1, 6, 6, 6, 4, 1, 0, 19, 9, 0, 2, 1, 0, 1, 1, 1, 1]' : 0.0921779}
{'[1, 1, 6, 6, 6, 4, 1, 0, 19, 9, 0, 2, 1, 0, 1, 1, 1, 1]' : 0.0918398}
{'[1, 1, 6, 6, 6, 4, 1, 0, 19, 9, 0, 2, 1, 0, 1, 1, 1, 1]' : 0.091764}
{'[1, 1, 6, 6, 6, 4, 1, 0, 19, 9, 0, 2, 1, 0, 1, 1, 1, 1]' : 0.0918012}
{'[1, 1, 6, 6, 6, 4, 1, 0, 19, 9, 0, 2, 1, 0, 1, 1, 1, 1]' : 0.0918238}
{'[1, 1, 6, 6, 6, 4, 1, 0, 19, 9, 0, 2, 1, 0, 1, 1, 1, 1]' : 0.0917149}
{'[1, 1, 6, 6, 6, 4, 1, 0, 19, 9, 0, 2, 1, 0, 1, 1, 1, 1]' : 0.091922}
{'[1, 1, 6, 6, 6, 4, 1, 0, 19, 9, 0, 2, 1, 0, 1, 1, 1, 1]' : 0.0920501}
{'[1, 1, 6, 6, 6, 4, 1, 0, 19, 9, 0, 2, 1, 0, 1, 1, 1, 1]' : 0.0920572}
{'[1, 1, 6, 6, 6, 4, 1, 0, 19, 9, 0, 2, 1, 0, 1, 1, 1, 1]' : 0.092041}
{'[1, 1, 6, 6, 6, 4, 1, 0, 19, 9, 0, 2, 1, 0, 1, 1, 1, 1]' : 0.0921569}
{'[1, 1, 6, 6, 6, 4, 1, 0, 19, 9, 0, 2, 1, 0, 1, 1, 1, 1]' : 0.0922759}
{'[1, 1, 6, 6, 6, 4, 1, 0, 19, 9, 0, 2, 1, 0, 1, 1, 1, 1]' : 0.091779}
{'[1, 1, 6, 6, 6, 4, 1, 0, 19, 9, 0, 2, 1, 0, 1, 1, 1, 1]' : 0.09183}
{'[1, 1, 6, 6, 6, 4, 1, 0, 19, 9, 0, 2, 1, 0, 1, 1, 1, 1]' : 0.091773}
{'[1, 1, 6, 6, 6, 4, 1, 0, 19, 9, 0, 2, 1, 0, 1, 1, 1, 1]' : 0.0918429}
{'[1, 1, 6, 6, 6, 4, 1, 0, 19, 9, 0, 2, 1, 0, 1, 1, 1, 1]' : 0.0919321}

out:
 ["{'[1, 1, 6, 6, 6, 4, 1, 0, 19, 9, 0, 2, 1, 0, 1, 1, 1, 1]' : 0.0923212}", "{'[1, 1, 6, 6, 6, 4, 1, 0, 19, 9, 0, 2, 1, 0, 1, 1, 1, 1]' : 0.092118}", "{'[1, 1, 6, 6, 6, 4, 1, 0, 19, 9, 0, 2, 1, 0, 1, 1, 1, 1]' : 0.0921009}", "{'[1, 1, 6, 6, 6, 4, 1, 0, 19, 9, 0, 2, 1, 0, 1, 1, 1, 1]' : 0.092005}", "{'[1, 1, 6, 6, 6, 4, 1, 0, 19, 9, 0, 2, 1, 0, 1, 1, 1, 1]' : 0.09164}", "{'[1, 1, 6, 6, 6, 4, 1, 0, 19, 9, 0, 2, 1, 0, 1, 1, 1, 1]' : 0.0917799}", "{'[1, 1, 6, 6, 6, 4, 1, 0, 19, 9, 0, 2, 1, 0, 1, 1, 1, 1]' : 0.0917749}", "{'[1, 1, 6, 6, 6, 4, 1, 0, 19, 9, 0, 2, 1, 0, 1, 1, 1, 1]' : 0.0918241}", "{'[1, 1, 6, 6, 6, 4, 1, 0, 19, 9, 0, 2, 1, 0, 1, 1, 1, 1]' : 0.0919981}", "{'[1, 1, 6, 6, 6, 4, 1, 0, 19, 9, 0, 2, 1, 0, 1, 1, 1, 1]' : 0.0919001}", "{'[1, 1, 6, 6, 6, 4, 1, 0, 19, 9, 0, 2, 1, 0, 1, 1, 1, 1]' : 0.091953}", "{'[1, 1, 6, 6, 6, 4, 1, 0, 19, 9, 0, 2, 1, 0, 1, 1, 1, 1]' : 0.092128}", "{'[1, 1, 6, 6, 6, 4, 1, 0, 19, 9, 0, 2, 1, 0, 1, 1, 1, 1]' : 0.0921061}", "{'[1, 1, 6, 6, 6, 4, 1, 0, 19, 9, 0, 2, 1, 0, 1, 1, 1, 1]' : 0.0921779}", "{'[1, 1, 6, 6, 6, 4, 1, 0, 19, 9, 0, 2, 1, 0, 1, 1, 1, 1]' : 0.0918398}", "{'[1, 1, 6, 6, 6, 4, 1, 0, 19, 9, 0, 2, 1, 0, 1, 1, 1, 1]' : 0.091764}", "{'[1, 1, 6, 6, 6, 4, 1, 0, 19, 9, 0, 2, 1, 0, 1, 1, 1, 1]' : 0.0918012}", "{'[1, 1, 6, 6, 6, 4, 1, 0, 19, 9, 0, 2, 1, 0, 1, 1, 1, 1]' : 0.0918238}", "{'[1, 1, 6, 6, 6, 4, 1, 0, 19, 9, 0, 2, 1, 0, 1, 1, 1, 1]' : 0.0917149}", "{'[1, 1, 6, 6, 6, 4, 1, 0, 19, 9, 0, 2, 1, 0, 1, 1, 1, 1]' : 0.091922}", "{'[1, 1, 6, 6, 6, 4, 1, 0, 19, 9, 0, 2, 1, 0, 1, 1, 1, 1]' : 0.0920501}", "{'[1, 1, 6, 6, 6, 4, 1, 0, 19, 9, 0, 2, 1, 0, 1, 1, 1, 1]' : 0.0920572}", "{'[1, 1, 6, 6, 6, 4, 1, 0, 19, 9, 0, 2, 1, 0, 1, 1, 1, 1]' : 0.092041}", "{'[1, 1, 6, 6, 6, 4, 1, 0, 19, 9, 0, 2, 1, 0, 1, 1, 1, 1]' : 0.0921569}", "{'[1, 1, 6, 6, 6, 4, 1, 0, 19, 9, 0, 2, 1, 0, 1, 1, 1, 1]' : 0.0922759}", "{'[1, 1, 6, 6, 6, 4, 1, 0, 19, 9, 0, 2, 1, 0, 1, 1, 1, 1]' : 0.091779}", "{'[1, 1, 6, 6, 6, 4, 1, 0, 19, 9, 0, 2, 1, 0, 1, 1, 1, 1]' : 0.09183}", "{'[1, 1, 6, 6, 6, 4, 1, 0, 19, 9, 0, 2, 1, 0, 1, 1, 1, 1]' : 0.091773}", "{'[1, 1, 6, 6, 6, 4, 1, 0, 19, 9, 0, 2, 1, 0, 1, 1, 1, 1]' : 0.0918429}", "{'[1, 1, 6, 6, 6, 4, 1, 0, 19, 9, 0, 2, 1, 0, 1, 1, 1, 1]' : 0.0919321}"]
returning from 'run': {'[1, 1, 6, 6, 6, 4, 1, 0, 19, 9, 0, 2, 1, 0, 1, 1, 1, 1]': ([0.0923212, 0.092118, 0.0921009, 0.092005, 0.09164, 0.0917799, 0.0917749, 0.0918241, 0.0919981, 0.0919001, 0.091953, 0.092128, 0.0921061, 0.0921779, 0.0918398, 0.091764, 0.0918012, 0.0918238, 0.0917149, 0.091922, 0.0920501, 0.0920572, 0.092041, 0.0921569, 0.0922759, 0.091779, 0.09183, 0.091773, 0.0918429, 0.0919321], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 1, 6, 6, 6, 4, 1, 0, 19, 9, 0, 2, 1, 0, 1, 1, 1, 1]': ([0.0923212, 0.092118, 0.0921009, 0.092005, 0.09164, 0.0917799, 0.0917749, 0.0918241, 0.0919981, 0.0919001, 0.091953, 0.092128, 0.0921061, 0.0921779, 0.0918398, 0.091764, 0.0918012, 0.0918238, 0.0917149, 0.091922, 0.0920501, 0.0920572, 0.092041, 0.0921569, 0.0922759, 0.091779, 0.09183, 0.091773, 0.0918429, 0.0919321], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	26
        Max loop nest depth: 	5
        Additions: 		824
        Multiplications: 	312
        Divisions: 		0
        Logical: 		0
        Reads: 			1872
        Writes: 		405
        Comparisons:		26
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest19.exe __orio_perftest19.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest19.exe  
Program Test Output: 
{'[1, 6, 0, 2, 0, 3, 1, 0, 2, 2, 0, 4, 0, 0, 2, 1, 0, 0]' : 0.15474}
{'[1, 6, 0, 2, 0, 3, 1, 0, 2, 2, 0, 4, 0, 0, 2, 1, 0, 0]' : 0.154551}
{'[1, 6, 0, 2, 0, 3, 1, 0, 2, 2, 0, 4, 0, 0, 2, 1, 0, 0]' : 0.150384}
{'[1, 6, 0, 2, 0, 3, 1, 0, 2, 2, 0, 4, 0, 0, 2, 1, 0, 0]' : 0.13452}
{'[1, 6, 0, 2, 0, 3, 1, 0, 2, 2, 0, 4, 0, 0, 2, 1, 0, 0]' : 0.134856}
{'[1, 6, 0, 2, 0, 3, 1, 0, 2, 2, 0, 4, 0, 0, 2, 1, 0, 0]' : 0.134832}
{'[1, 6, 0, 2, 0, 3, 1, 0, 2, 2, 0, 4, 0, 0, 2, 1, 0, 0]' : 0.134474}
{'[1, 6, 0, 2, 0, 3, 1, 0, 2, 2, 0, 4, 0, 0, 2, 1, 0, 0]' : 0.13401}
{'[1, 6, 0, 2, 0, 3, 1, 0, 2, 2, 0, 4, 0, 0, 2, 1, 0, 0]' : 0.130288}
{'[1, 6, 0, 2, 0, 3, 1, 0, 2, 2, 0, 4, 0, 0, 2, 1, 0, 0]' : 0.130333}
{'[1, 6, 0, 2, 0, 3, 1, 0, 2, 2, 0, 4, 0, 0, 2, 1, 0, 0]' : 0.13099}
{'[1, 6, 0, 2, 0, 3, 1, 0, 2, 2, 0, 4, 0, 0, 2, 1, 0, 0]' : 0.135036}
{'[1, 6, 0, 2, 0, 3, 1, 0, 2, 2, 0, 4, 0, 0, 2, 1, 0, 0]' : 0.134788}
{'[1, 6, 0, 2, 0, 3, 1, 0, 2, 2, 0, 4, 0, 0, 2, 1, 0, 0]' : 0.134825}
{'[1, 6, 0, 2, 0, 3, 1, 0, 2, 2, 0, 4, 0, 0, 2, 1, 0, 0]' : 0.134753}
{'[1, 6, 0, 2, 0, 3, 1, 0, 2, 2, 0, 4, 0, 0, 2, 1, 0, 0]' : 0.13472}
{'[1, 6, 0, 2, 0, 3, 1, 0, 2, 2, 0, 4, 0, 0, 2, 1, 0, 0]' : 0.134509}
{'[1, 6, 0, 2, 0, 3, 1, 0, 2, 2, 0, 4, 0, 0, 2, 1, 0, 0]' : 0.131175}
{'[1, 6, 0, 2, 0, 3, 1, 0, 2, 2, 0, 4, 0, 0, 2, 1, 0, 0]' : 0.131495}
{'[1, 6, 0, 2, 0, 3, 1, 0, 2, 2, 0, 4, 0, 0, 2, 1, 0, 0]' : 0.130707}
{'[1, 6, 0, 2, 0, 3, 1, 0, 2, 2, 0, 4, 0, 0, 2, 1, 0, 0]' : 0.130458}
{'[1, 6, 0, 2, 0, 3, 1, 0, 2, 2, 0, 4, 0, 0, 2, 1, 0, 0]' : 0.130821}
{'[1, 6, 0, 2, 0, 3, 1, 0, 2, 2, 0, 4, 0, 0, 2, 1, 0, 0]' : 0.131404}
{'[1, 6, 0, 2, 0, 3, 1, 0, 2, 2, 0, 4, 0, 0, 2, 1, 0, 0]' : 0.134573}
{'[1, 6, 0, 2, 0, 3, 1, 0, 2, 2, 0, 4, 0, 0, 2, 1, 0, 0]' : 0.134589}
{'[1, 6, 0, 2, 0, 3, 1, 0, 2, 2, 0, 4, 0, 0, 2, 1, 0, 0]' : 0.134609}
{'[1, 6, 0, 2, 0, 3, 1, 0, 2, 2, 0, 4, 0, 0, 2, 1, 0, 0]' : 0.135094}
{'[1, 6, 0, 2, 0, 3, 1, 0, 2, 2, 0, 4, 0, 0, 2, 1, 0, 0]' : 0.134614}
{'[1, 6, 0, 2, 0, 3, 1, 0, 2, 2, 0, 4, 0, 0, 2, 1, 0, 0]' : 0.134476}
{'[1, 6, 0, 2, 0, 3, 1, 0, 2, 2, 0, 4, 0, 0, 2, 1, 0, 0]' : 0.134751}

out:
 ["{'[1, 6, 0, 2, 0, 3, 1, 0, 2, 2, 0, 4, 0, 0, 2, 1, 0, 0]' : 0.15474}", "{'[1, 6, 0, 2, 0, 3, 1, 0, 2, 2, 0, 4, 0, 0, 2, 1, 0, 0]' : 0.154551}", "{'[1, 6, 0, 2, 0, 3, 1, 0, 2, 2, 0, 4, 0, 0, 2, 1, 0, 0]' : 0.150384}", "{'[1, 6, 0, 2, 0, 3, 1, 0, 2, 2, 0, 4, 0, 0, 2, 1, 0, 0]' : 0.13452}", "{'[1, 6, 0, 2, 0, 3, 1, 0, 2, 2, 0, 4, 0, 0, 2, 1, 0, 0]' : 0.134856}", "{'[1, 6, 0, 2, 0, 3, 1, 0, 2, 2, 0, 4, 0, 0, 2, 1, 0, 0]' : 0.134832}", "{'[1, 6, 0, 2, 0, 3, 1, 0, 2, 2, 0, 4, 0, 0, 2, 1, 0, 0]' : 0.134474}", "{'[1, 6, 0, 2, 0, 3, 1, 0, 2, 2, 0, 4, 0, 0, 2, 1, 0, 0]' : 0.13401}", "{'[1, 6, 0, 2, 0, 3, 1, 0, 2, 2, 0, 4, 0, 0, 2, 1, 0, 0]' : 0.130288}", "{'[1, 6, 0, 2, 0, 3, 1, 0, 2, 2, 0, 4, 0, 0, 2, 1, 0, 0]' : 0.130333}", "{'[1, 6, 0, 2, 0, 3, 1, 0, 2, 2, 0, 4, 0, 0, 2, 1, 0, 0]' : 0.13099}", "{'[1, 6, 0, 2, 0, 3, 1, 0, 2, 2, 0, 4, 0, 0, 2, 1, 0, 0]' : 0.135036}", "{'[1, 6, 0, 2, 0, 3, 1, 0, 2, 2, 0, 4, 0, 0, 2, 1, 0, 0]' : 0.134788}", "{'[1, 6, 0, 2, 0, 3, 1, 0, 2, 2, 0, 4, 0, 0, 2, 1, 0, 0]' : 0.134825}", "{'[1, 6, 0, 2, 0, 3, 1, 0, 2, 2, 0, 4, 0, 0, 2, 1, 0, 0]' : 0.134753}", "{'[1, 6, 0, 2, 0, 3, 1, 0, 2, 2, 0, 4, 0, 0, 2, 1, 0, 0]' : 0.13472}", "{'[1, 6, 0, 2, 0, 3, 1, 0, 2, 2, 0, 4, 0, 0, 2, 1, 0, 0]' : 0.134509}", "{'[1, 6, 0, 2, 0, 3, 1, 0, 2, 2, 0, 4, 0, 0, 2, 1, 0, 0]' : 0.131175}", "{'[1, 6, 0, 2, 0, 3, 1, 0, 2, 2, 0, 4, 0, 0, 2, 1, 0, 0]' : 0.131495}", "{'[1, 6, 0, 2, 0, 3, 1, 0, 2, 2, 0, 4, 0, 0, 2, 1, 0, 0]' : 0.130707}", "{'[1, 6, 0, 2, 0, 3, 1, 0, 2, 2, 0, 4, 0, 0, 2, 1, 0, 0]' : 0.130458}", "{'[1, 6, 0, 2, 0, 3, 1, 0, 2, 2, 0, 4, 0, 0, 2, 1, 0, 0]' : 0.130821}", "{'[1, 6, 0, 2, 0, 3, 1, 0, 2, 2, 0, 4, 0, 0, 2, 1, 0, 0]' : 0.131404}", "{'[1, 6, 0, 2, 0, 3, 1, 0, 2, 2, 0, 4, 0, 0, 2, 1, 0, 0]' : 0.134573}", "{'[1, 6, 0, 2, 0, 3, 1, 0, 2, 2, 0, 4, 0, 0, 2, 1, 0, 0]' : 0.134589}", "{'[1, 6, 0, 2, 0, 3, 1, 0, 2, 2, 0, 4, 0, 0, 2, 1, 0, 0]' : 0.134609}", "{'[1, 6, 0, 2, 0, 3, 1, 0, 2, 2, 0, 4, 0, 0, 2, 1, 0, 0]' : 0.135094}", "{'[1, 6, 0, 2, 0, 3, 1, 0, 2, 2, 0, 4, 0, 0, 2, 1, 0, 0]' : 0.134614}", "{'[1, 6, 0, 2, 0, 3, 1, 0, 2, 2, 0, 4, 0, 0, 2, 1, 0, 0]' : 0.134476}", "{'[1, 6, 0, 2, 0, 3, 1, 0, 2, 2, 0, 4, 0, 0, 2, 1, 0, 0]' : 0.134751}"]
returning from 'run': {'[1, 6, 0, 2, 0, 3, 1, 0, 2, 2, 0, 4, 0, 0, 2, 1, 0, 0]': ([0.15474, 0.154551, 0.150384, 0.13452, 0.134856, 0.134832, 0.134474, 0.13401, 0.130288, 0.130333, 0.13099, 0.135036, 0.134788, 0.134825, 0.134753, 0.13472, 0.134509, 0.131175, 0.131495, 0.130707, 0.130458, 0.130821, 0.131404, 0.134573, 0.134589, 0.134609, 0.135094, 0.134614, 0.134476, 0.134751], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 6, 0, 2, 0, 3, 1, 0, 2, 2, 0, 4, 0, 0, 2, 1, 0, 0]': ([0.15474, 0.154551, 0.150384, 0.13452, 0.134856, 0.134832, 0.134474, 0.13401, 0.130288, 0.130333, 0.13099, 0.135036, 0.134788, 0.134825, 0.134753, 0.13472, 0.134509, 0.131175, 0.131495, 0.130707, 0.130458, 0.130821, 0.131404, 0.134573, 0.134589, 0.134609, 0.135094, 0.134614, 0.134476, 0.134751], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	35
        Max loop nest depth: 	5
        Additions: 		1493
        Multiplications: 	680
        Divisions: 		0
        Logical: 		0
        Reads: 			3029
        Writes: 		542
        Comparisons:		35
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest20.exe __orio_perftest20.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest20.exe  
Program Test Output: 
{'[2, 6, 0, 1, 0, 4, 1, 0, 0, 18, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.141502}
{'[2, 6, 0, 1, 0, 4, 1, 0, 0, 18, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.141651}
{'[2, 6, 0, 1, 0, 4, 1, 0, 0, 18, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.144769}
{'[2, 6, 0, 1, 0, 4, 1, 0, 0, 18, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.140866}
{'[2, 6, 0, 1, 0, 4, 1, 0, 0, 18, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.140754}
{'[2, 6, 0, 1, 0, 4, 1, 0, 0, 18, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.143682}
{'[2, 6, 0, 1, 0, 4, 1, 0, 0, 18, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.141497}
{'[2, 6, 0, 1, 0, 4, 1, 0, 0, 18, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.141112}
{'[2, 6, 0, 1, 0, 4, 1, 0, 0, 18, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.141521}
{'[2, 6, 0, 1, 0, 4, 1, 0, 0, 18, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.145173}
{'[2, 6, 0, 1, 0, 4, 1, 0, 0, 18, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.141239}
{'[2, 6, 0, 1, 0, 4, 1, 0, 0, 18, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.138023}
{'[2, 6, 0, 1, 0, 4, 1, 0, 0, 18, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.141646}
{'[2, 6, 0, 1, 0, 4, 1, 0, 0, 18, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.145197}
{'[2, 6, 0, 1, 0, 4, 1, 0, 0, 18, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.14377}
{'[2, 6, 0, 1, 0, 4, 1, 0, 0, 18, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.142118}
{'[2, 6, 0, 1, 0, 4, 1, 0, 0, 18, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.144915}
{'[2, 6, 0, 1, 0, 4, 1, 0, 0, 18, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.14091}
{'[2, 6, 0, 1, 0, 4, 1, 0, 0, 18, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.140782}
{'[2, 6, 0, 1, 0, 4, 1, 0, 0, 18, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.143264}
{'[2, 6, 0, 1, 0, 4, 1, 0, 0, 18, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.14498}
{'[2, 6, 0, 1, 0, 4, 1, 0, 0, 18, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.143997}
{'[2, 6, 0, 1, 0, 4, 1, 0, 0, 18, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.141355}
{'[2, 6, 0, 1, 0, 4, 1, 0, 0, 18, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.142255}
{'[2, 6, 0, 1, 0, 4, 1, 0, 0, 18, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.138464}
{'[2, 6, 0, 1, 0, 4, 1, 0, 0, 18, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.138272}
{'[2, 6, 0, 1, 0, 4, 1, 0, 0, 18, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.143165}
{'[2, 6, 0, 1, 0, 4, 1, 0, 0, 18, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.144992}
{'[2, 6, 0, 1, 0, 4, 1, 0, 0, 18, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.145045}
{'[2, 6, 0, 1, 0, 4, 1, 0, 0, 18, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.141036}

out:
 ["{'[2, 6, 0, 1, 0, 4, 1, 0, 0, 18, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.141502}", "{'[2, 6, 0, 1, 0, 4, 1, 0, 0, 18, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.141651}", "{'[2, 6, 0, 1, 0, 4, 1, 0, 0, 18, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.144769}", "{'[2, 6, 0, 1, 0, 4, 1, 0, 0, 18, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.140866}", "{'[2, 6, 0, 1, 0, 4, 1, 0, 0, 18, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.140754}", "{'[2, 6, 0, 1, 0, 4, 1, 0, 0, 18, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.143682}", "{'[2, 6, 0, 1, 0, 4, 1, 0, 0, 18, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.141497}", "{'[2, 6, 0, 1, 0, 4, 1, 0, 0, 18, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.141112}", "{'[2, 6, 0, 1, 0, 4, 1, 0, 0, 18, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.141521}", "{'[2, 6, 0, 1, 0, 4, 1, 0, 0, 18, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.145173}", "{'[2, 6, 0, 1, 0, 4, 1, 0, 0, 18, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.141239}", "{'[2, 6, 0, 1, 0, 4, 1, 0, 0, 18, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.138023}", "{'[2, 6, 0, 1, 0, 4, 1, 0, 0, 18, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.141646}", "{'[2, 6, 0, 1, 0, 4, 1, 0, 0, 18, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.145197}", "{'[2, 6, 0, 1, 0, 4, 1, 0, 0, 18, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.14377}", "{'[2, 6, 0, 1, 0, 4, 1, 0, 0, 18, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.142118}", "{'[2, 6, 0, 1, 0, 4, 1, 0, 0, 18, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.144915}", "{'[2, 6, 0, 1, 0, 4, 1, 0, 0, 18, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.14091}", "{'[2, 6, 0, 1, 0, 4, 1, 0, 0, 18, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.140782}", "{'[2, 6, 0, 1, 0, 4, 1, 0, 0, 18, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.143264}", "{'[2, 6, 0, 1, 0, 4, 1, 0, 0, 18, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.14498}", "{'[2, 6, 0, 1, 0, 4, 1, 0, 0, 18, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.143997}", "{'[2, 6, 0, 1, 0, 4, 1, 0, 0, 18, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.141355}", "{'[2, 6, 0, 1, 0, 4, 1, 0, 0, 18, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.142255}", "{'[2, 6, 0, 1, 0, 4, 1, 0, 0, 18, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.138464}", "{'[2, 6, 0, 1, 0, 4, 1, 0, 0, 18, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.138272}", "{'[2, 6, 0, 1, 0, 4, 1, 0, 0, 18, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.143165}", "{'[2, 6, 0, 1, 0, 4, 1, 0, 0, 18, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.144992}", "{'[2, 6, 0, 1, 0, 4, 1, 0, 0, 18, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.145045}", "{'[2, 6, 0, 1, 0, 4, 1, 0, 0, 18, 28, 0, 0, 1, 1, 1, 1, 1]' : 0.141036}"]
returning from 'run': {'[2, 6, 0, 1, 0, 4, 1, 0, 0, 18, 28, 0, 0, 1, 1, 1, 1, 1]': ([0.141502, 0.141651, 0.144769, 0.140866, 0.140754, 0.143682, 0.141497, 0.141112, 0.141521, 0.145173, 0.141239, 0.138023, 0.141646, 0.145197, 0.14377, 0.142118, 0.144915, 0.14091, 0.140782, 0.143264, 0.14498, 0.143997, 0.141355, 0.142255, 0.138464, 0.138272, 0.143165, 0.144992, 0.145045, 0.141036], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 6, 0, 1, 0, 4, 1, 0, 0, 18, 28, 0, 0, 1, 1, 1, 1, 1]': ([0.141502, 0.141651, 0.144769, 0.140866, 0.140754, 0.143682, 0.141497, 0.141112, 0.141521, 0.145173, 0.141239, 0.138023, 0.141646, 0.145197, 0.14377, 0.142118, 0.144915, 0.14091, 0.140782, 0.143264, 0.14498, 0.143997, 0.141355, 0.142255, 0.138464, 0.138272, 0.143165, 0.144992, 0.145045, 0.141036], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	40
        Max loop nest depth: 	5
        Additions: 		6948
        Multiplications: 	1782
        Divisions: 		0
        Logical: 		0
        Reads: 			10239
        Writes: 		1027
        Comparisons:		40
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest21.exe __orio_perftest21.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest21.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest21.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest21.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest21.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		173
        Multiplications: 	50
        Divisions: 		0
        Logical: 		0
        Reads: 			408
        Writes: 		102
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest22.exe __orio_perftest22.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest22.exe  
Program Test Output: 
{'[3, 4, 3, 1, 0, 2, 0, 0, 15, 0, 1, 4, 0, 1, 1, 1, 1, 0]' : 0.188207}
{'[3, 4, 3, 1, 0, 2, 0, 0, 15, 0, 1, 4, 0, 1, 1, 1, 1, 0]' : 0.187986}
{'[3, 4, 3, 1, 0, 2, 0, 0, 15, 0, 1, 4, 0, 1, 1, 1, 1, 0]' : 0.163178}
{'[3, 4, 3, 1, 0, 2, 0, 0, 15, 0, 1, 4, 0, 1, 1, 1, 1, 0]' : 0.162515}
{'[3, 4, 3, 1, 0, 2, 0, 0, 15, 0, 1, 4, 0, 1, 1, 1, 1, 0]' : 0.162215}
{'[3, 4, 3, 1, 0, 2, 0, 0, 15, 0, 1, 4, 0, 1, 1, 1, 1, 0]' : 0.162039}
{'[3, 4, 3, 1, 0, 2, 0, 0, 15, 0, 1, 4, 0, 1, 1, 1, 1, 0]' : 0.160867}
{'[3, 4, 3, 1, 0, 2, 0, 0, 15, 0, 1, 4, 0, 1, 1, 1, 1, 0]' : 0.156845}
{'[3, 4, 3, 1, 0, 2, 0, 0, 15, 0, 1, 4, 0, 1, 1, 1, 1, 0]' : 0.157126}
{'[3, 4, 3, 1, 0, 2, 0, 0, 15, 0, 1, 4, 0, 1, 1, 1, 1, 0]' : 0.160639}
{'[3, 4, 3, 1, 0, 2, 0, 0, 15, 0, 1, 4, 0, 1, 1, 1, 1, 0]' : 0.162577}
{'[3, 4, 3, 1, 0, 2, 0, 0, 15, 0, 1, 4, 0, 1, 1, 1, 1, 0]' : 0.161953}
{'[3, 4, 3, 1, 0, 2, 0, 0, 15, 0, 1, 4, 0, 1, 1, 1, 1, 0]' : 0.158364}
{'[3, 4, 3, 1, 0, 2, 0, 0, 15, 0, 1, 4, 0, 1, 1, 1, 1, 0]' : 0.16202}
{'[3, 4, 3, 1, 0, 2, 0, 0, 15, 0, 1, 4, 0, 1, 1, 1, 1, 0]' : 0.162049}
{'[3, 4, 3, 1, 0, 2, 0, 0, 15, 0, 1, 4, 0, 1, 1, 1, 1, 0]' : 0.162245}
{'[3, 4, 3, 1, 0, 2, 0, 0, 15, 0, 1, 4, 0, 1, 1, 1, 1, 0]' : 0.162067}
{'[3, 4, 3, 1, 0, 2, 0, 0, 15, 0, 1, 4, 0, 1, 1, 1, 1, 0]' : 0.162586}
{'[3, 4, 3, 1, 0, 2, 0, 0, 15, 0, 1, 4, 0, 1, 1, 1, 1, 0]' : 0.162133}
{'[3, 4, 3, 1, 0, 2, 0, 0, 15, 0, 1, 4, 0, 1, 1, 1, 1, 0]' : 0.162092}
{'[3, 4, 3, 1, 0, 2, 0, 0, 15, 0, 1, 4, 0, 1, 1, 1, 1, 0]' : 0.162329}
{'[3, 4, 3, 1, 0, 2, 0, 0, 15, 0, 1, 4, 0, 1, 1, 1, 1, 0]' : 0.162074}
{'[3, 4, 3, 1, 0, 2, 0, 0, 15, 0, 1, 4, 0, 1, 1, 1, 1, 0]' : 0.161118}
{'[3, 4, 3, 1, 0, 2, 0, 0, 15, 0, 1, 4, 0, 1, 1, 1, 1, 0]' : 0.16224}
{'[3, 4, 3, 1, 0, 2, 0, 0, 15, 0, 1, 4, 0, 1, 1, 1, 1, 0]' : 0.162261}
{'[3, 4, 3, 1, 0, 2, 0, 0, 15, 0, 1, 4, 0, 1, 1, 1, 1, 0]' : 0.162088}
{'[3, 4, 3, 1, 0, 2, 0, 0, 15, 0, 1, 4, 0, 1, 1, 1, 1, 0]' : 0.16212}
{'[3, 4, 3, 1, 0, 2, 0, 0, 15, 0, 1, 4, 0, 1, 1, 1, 1, 0]' : 0.162147}
{'[3, 4, 3, 1, 0, 2, 0, 0, 15, 0, 1, 4, 0, 1, 1, 1, 1, 0]' : 0.162276}
{'[3, 4, 3, 1, 0, 2, 0, 0, 15, 0, 1, 4, 0, 1, 1, 1, 1, 0]' : 0.162145}

out:
 ["{'[3, 4, 3, 1, 0, 2, 0, 0, 15, 0, 1, 4, 0, 1, 1, 1, 1, 0]' : 0.188207}", "{'[3, 4, 3, 1, 0, 2, 0, 0, 15, 0, 1, 4, 0, 1, 1, 1, 1, 0]' : 0.187986}", "{'[3, 4, 3, 1, 0, 2, 0, 0, 15, 0, 1, 4, 0, 1, 1, 1, 1, 0]' : 0.163178}", "{'[3, 4, 3, 1, 0, 2, 0, 0, 15, 0, 1, 4, 0, 1, 1, 1, 1, 0]' : 0.162515}", "{'[3, 4, 3, 1, 0, 2, 0, 0, 15, 0, 1, 4, 0, 1, 1, 1, 1, 0]' : 0.162215}", "{'[3, 4, 3, 1, 0, 2, 0, 0, 15, 0, 1, 4, 0, 1, 1, 1, 1, 0]' : 0.162039}", "{'[3, 4, 3, 1, 0, 2, 0, 0, 15, 0, 1, 4, 0, 1, 1, 1, 1, 0]' : 0.160867}", "{'[3, 4, 3, 1, 0, 2, 0, 0, 15, 0, 1, 4, 0, 1, 1, 1, 1, 0]' : 0.156845}", "{'[3, 4, 3, 1, 0, 2, 0, 0, 15, 0, 1, 4, 0, 1, 1, 1, 1, 0]' : 0.157126}", "{'[3, 4, 3, 1, 0, 2, 0, 0, 15, 0, 1, 4, 0, 1, 1, 1, 1, 0]' : 0.160639}", "{'[3, 4, 3, 1, 0, 2, 0, 0, 15, 0, 1, 4, 0, 1, 1, 1, 1, 0]' : 0.162577}", "{'[3, 4, 3, 1, 0, 2, 0, 0, 15, 0, 1, 4, 0, 1, 1, 1, 1, 0]' : 0.161953}", "{'[3, 4, 3, 1, 0, 2, 0, 0, 15, 0, 1, 4, 0, 1, 1, 1, 1, 0]' : 0.158364}", "{'[3, 4, 3, 1, 0, 2, 0, 0, 15, 0, 1, 4, 0, 1, 1, 1, 1, 0]' : 0.16202}", "{'[3, 4, 3, 1, 0, 2, 0, 0, 15, 0, 1, 4, 0, 1, 1, 1, 1, 0]' : 0.162049}", "{'[3, 4, 3, 1, 0, 2, 0, 0, 15, 0, 1, 4, 0, 1, 1, 1, 1, 0]' : 0.162245}", "{'[3, 4, 3, 1, 0, 2, 0, 0, 15, 0, 1, 4, 0, 1, 1, 1, 1, 0]' : 0.162067}", "{'[3, 4, 3, 1, 0, 2, 0, 0, 15, 0, 1, 4, 0, 1, 1, 1, 1, 0]' : 0.162586}", "{'[3, 4, 3, 1, 0, 2, 0, 0, 15, 0, 1, 4, 0, 1, 1, 1, 1, 0]' : 0.162133}", "{'[3, 4, 3, 1, 0, 2, 0, 0, 15, 0, 1, 4, 0, 1, 1, 1, 1, 0]' : 0.162092}", "{'[3, 4, 3, 1, 0, 2, 0, 0, 15, 0, 1, 4, 0, 1, 1, 1, 1, 0]' : 0.162329}", "{'[3, 4, 3, 1, 0, 2, 0, 0, 15, 0, 1, 4, 0, 1, 1, 1, 1, 0]' : 0.162074}", "{'[3, 4, 3, 1, 0, 2, 0, 0, 15, 0, 1, 4, 0, 1, 1, 1, 1, 0]' : 0.161118}", "{'[3, 4, 3, 1, 0, 2, 0, 0, 15, 0, 1, 4, 0, 1, 1, 1, 1, 0]' : 0.16224}", "{'[3, 4, 3, 1, 0, 2, 0, 0, 15, 0, 1, 4, 0, 1, 1, 1, 1, 0]' : 0.162261}", "{'[3, 4, 3, 1, 0, 2, 0, 0, 15, 0, 1, 4, 0, 1, 1, 1, 1, 0]' : 0.162088}", "{'[3, 4, 3, 1, 0, 2, 0, 0, 15, 0, 1, 4, 0, 1, 1, 1, 1, 0]' : 0.16212}", "{'[3, 4, 3, 1, 0, 2, 0, 0, 15, 0, 1, 4, 0, 1, 1, 1, 1, 0]' : 0.162147}", "{'[3, 4, 3, 1, 0, 2, 0, 0, 15, 0, 1, 4, 0, 1, 1, 1, 1, 0]' : 0.162276}", "{'[3, 4, 3, 1, 0, 2, 0, 0, 15, 0, 1, 4, 0, 1, 1, 1, 1, 0]' : 0.162145}"]
returning from 'run': {'[3, 4, 3, 1, 0, 2, 0, 0, 15, 0, 1, 4, 0, 1, 1, 1, 1, 0]': ([0.188207, 0.187986, 0.163178, 0.162515, 0.162215, 0.162039, 0.160867, 0.156845, 0.157126, 0.160639, 0.162577, 0.161953, 0.158364, 0.16202, 0.162049, 0.162245, 0.162067, 0.162586, 0.162133, 0.162092, 0.162329, 0.162074, 0.161118, 0.16224, 0.162261, 0.162088, 0.16212, 0.162147, 0.162276, 0.162145], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 4, 3, 1, 0, 2, 0, 0, 15, 0, 1, 4, 0, 1, 1, 1, 1, 0]': ([0.188207, 0.187986, 0.163178, 0.162515, 0.162215, 0.162039, 0.160867, 0.156845, 0.157126, 0.160639, 0.162577, 0.161953, 0.158364, 0.16202, 0.162049, 0.162245, 0.162067, 0.162586, 0.162133, 0.162092, 0.162329, 0.162074, 0.161118, 0.16224, 0.162261, 0.162088, 0.16212, 0.162147, 0.162276, 0.162145], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		188
        Multiplications: 	56
        Divisions: 		0
        Logical: 		0
        Reads: 			408
        Writes: 		96
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest23.exe __orio_perftest23.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest23.exe  
Program Test Output: 
{'[1, 3, 5, 3, 5, 6, 0, 1, 28, 0, 25, 0, 0, 0, 0, 1, 1, 0]' : 0.257476}
{'[1, 3, 5, 3, 5, 6, 0, 1, 28, 0, 25, 0, 0, 0, 0, 1, 1, 0]' : 0.245195}
{'[1, 3, 5, 3, 5, 6, 0, 1, 28, 0, 25, 0, 0, 0, 0, 1, 1, 0]' : 0.220692}
{'[1, 3, 5, 3, 5, 6, 0, 1, 28, 0, 25, 0, 0, 0, 0, 1, 1, 0]' : 0.220791}
{'[1, 3, 5, 3, 5, 6, 0, 1, 28, 0, 25, 0, 0, 0, 0, 1, 1, 0]' : 0.220928}
{'[1, 3, 5, 3, 5, 6, 0, 1, 28, 0, 25, 0, 0, 0, 0, 1, 1, 0]' : 0.218362}
{'[1, 3, 5, 3, 5, 6, 0, 1, 28, 0, 25, 0, 0, 0, 0, 1, 1, 0]' : 0.213961}
{'[1, 3, 5, 3, 5, 6, 0, 1, 28, 0, 25, 0, 0, 0, 0, 1, 1, 0]' : 0.213805}
{'[1, 3, 5, 3, 5, 6, 0, 1, 28, 0, 25, 0, 0, 0, 0, 1, 1, 0]' : 0.21386}
{'[1, 3, 5, 3, 5, 6, 0, 1, 28, 0, 25, 0, 0, 0, 0, 1, 1, 0]' : 0.214191}
{'[1, 3, 5, 3, 5, 6, 0, 1, 28, 0, 25, 0, 0, 0, 0, 1, 1, 0]' : 0.217912}
{'[1, 3, 5, 3, 5, 6, 0, 1, 28, 0, 25, 0, 0, 0, 0, 1, 1, 0]' : 0.220964}
{'[1, 3, 5, 3, 5, 6, 0, 1, 28, 0, 25, 0, 0, 0, 0, 1, 1, 0]' : 0.220846}
{'[1, 3, 5, 3, 5, 6, 0, 1, 28, 0, 25, 0, 0, 0, 0, 1, 1, 0]' : 0.220727}
{'[1, 3, 5, 3, 5, 6, 0, 1, 28, 0, 25, 0, 0, 0, 0, 1, 1, 0]' : 0.218341}
{'[1, 3, 5, 3, 5, 6, 0, 1, 28, 0, 25, 0, 0, 0, 0, 1, 1, 0]' : 0.214047}
{'[1, 3, 5, 3, 5, 6, 0, 1, 28, 0, 25, 0, 0, 0, 0, 1, 1, 0]' : 0.216216}
{'[1, 3, 5, 3, 5, 6, 0, 1, 28, 0, 25, 0, 0, 0, 0, 1, 1, 0]' : 0.221219}
{'[1, 3, 5, 3, 5, 6, 0, 1, 28, 0, 25, 0, 0, 0, 0, 1, 1, 0]' : 0.221024}
{'[1, 3, 5, 3, 5, 6, 0, 1, 28, 0, 25, 0, 0, 0, 0, 1, 1, 0]' : 0.221395}
{'[1, 3, 5, 3, 5, 6, 0, 1, 28, 0, 25, 0, 0, 0, 0, 1, 1, 0]' : 0.220906}
{'[1, 3, 5, 3, 5, 6, 0, 1, 28, 0, 25, 0, 0, 0, 0, 1, 1, 0]' : 0.220837}
{'[1, 3, 5, 3, 5, 6, 0, 1, 28, 0, 25, 0, 0, 0, 0, 1, 1, 0]' : 0.220695}
{'[1, 3, 5, 3, 5, 6, 0, 1, 28, 0, 25, 0, 0, 0, 0, 1, 1, 0]' : 0.220775}
{'[1, 3, 5, 3, 5, 6, 0, 1, 28, 0, 25, 0, 0, 0, 0, 1, 1, 0]' : 0.221224}
{'[1, 3, 5, 3, 5, 6, 0, 1, 28, 0, 25, 0, 0, 0, 0, 1, 1, 0]' : 0.220689}
{'[1, 3, 5, 3, 5, 6, 0, 1, 28, 0, 25, 0, 0, 0, 0, 1, 1, 0]' : 0.223425}
{'[1, 3, 5, 3, 5, 6, 0, 1, 28, 0, 25, 0, 0, 0, 0, 1, 1, 0]' : 0.228334}
{'[1, 3, 5, 3, 5, 6, 0, 1, 28, 0, 25, 0, 0, 0, 0, 1, 1, 0]' : 0.221155}
{'[1, 3, 5, 3, 5, 6, 0, 1, 28, 0, 25, 0, 0, 0, 0, 1, 1, 0]' : 0.215582}

out:
 ["{'[1, 3, 5, 3, 5, 6, 0, 1, 28, 0, 25, 0, 0, 0, 0, 1, 1, 0]' : 0.257476}", "{'[1, 3, 5, 3, 5, 6, 0, 1, 28, 0, 25, 0, 0, 0, 0, 1, 1, 0]' : 0.245195}", "{'[1, 3, 5, 3, 5, 6, 0, 1, 28, 0, 25, 0, 0, 0, 0, 1, 1, 0]' : 0.220692}", "{'[1, 3, 5, 3, 5, 6, 0, 1, 28, 0, 25, 0, 0, 0, 0, 1, 1, 0]' : 0.220791}", "{'[1, 3, 5, 3, 5, 6, 0, 1, 28, 0, 25, 0, 0, 0, 0, 1, 1, 0]' : 0.220928}", "{'[1, 3, 5, 3, 5, 6, 0, 1, 28, 0, 25, 0, 0, 0, 0, 1, 1, 0]' : 0.218362}", "{'[1, 3, 5, 3, 5, 6, 0, 1, 28, 0, 25, 0, 0, 0, 0, 1, 1, 0]' : 0.213961}", "{'[1, 3, 5, 3, 5, 6, 0, 1, 28, 0, 25, 0, 0, 0, 0, 1, 1, 0]' : 0.213805}", "{'[1, 3, 5, 3, 5, 6, 0, 1, 28, 0, 25, 0, 0, 0, 0, 1, 1, 0]' : 0.21386}", "{'[1, 3, 5, 3, 5, 6, 0, 1, 28, 0, 25, 0, 0, 0, 0, 1, 1, 0]' : 0.214191}", "{'[1, 3, 5, 3, 5, 6, 0, 1, 28, 0, 25, 0, 0, 0, 0, 1, 1, 0]' : 0.217912}", "{'[1, 3, 5, 3, 5, 6, 0, 1, 28, 0, 25, 0, 0, 0, 0, 1, 1, 0]' : 0.220964}", "{'[1, 3, 5, 3, 5, 6, 0, 1, 28, 0, 25, 0, 0, 0, 0, 1, 1, 0]' : 0.220846}", "{'[1, 3, 5, 3, 5, 6, 0, 1, 28, 0, 25, 0, 0, 0, 0, 1, 1, 0]' : 0.220727}", "{'[1, 3, 5, 3, 5, 6, 0, 1, 28, 0, 25, 0, 0, 0, 0, 1, 1, 0]' : 0.218341}", "{'[1, 3, 5, 3, 5, 6, 0, 1, 28, 0, 25, 0, 0, 0, 0, 1, 1, 0]' : 0.214047}", "{'[1, 3, 5, 3, 5, 6, 0, 1, 28, 0, 25, 0, 0, 0, 0, 1, 1, 0]' : 0.216216}", "{'[1, 3, 5, 3, 5, 6, 0, 1, 28, 0, 25, 0, 0, 0, 0, 1, 1, 0]' : 0.221219}", "{'[1, 3, 5, 3, 5, 6, 0, 1, 28, 0, 25, 0, 0, 0, 0, 1, 1, 0]' : 0.221024}", "{'[1, 3, 5, 3, 5, 6, 0, 1, 28, 0, 25, 0, 0, 0, 0, 1, 1, 0]' : 0.221395}", "{'[1, 3, 5, 3, 5, 6, 0, 1, 28, 0, 25, 0, 0, 0, 0, 1, 1, 0]' : 0.220906}", "{'[1, 3, 5, 3, 5, 6, 0, 1, 28, 0, 25, 0, 0, 0, 0, 1, 1, 0]' : 0.220837}", "{'[1, 3, 5, 3, 5, 6, 0, 1, 28, 0, 25, 0, 0, 0, 0, 1, 1, 0]' : 0.220695}", "{'[1, 3, 5, 3, 5, 6, 0, 1, 28, 0, 25, 0, 0, 0, 0, 1, 1, 0]' : 0.220775}", "{'[1, 3, 5, 3, 5, 6, 0, 1, 28, 0, 25, 0, 0, 0, 0, 1, 1, 0]' : 0.221224}", "{'[1, 3, 5, 3, 5, 6, 0, 1, 28, 0, 25, 0, 0, 0, 0, 1, 1, 0]' : 0.220689}", "{'[1, 3, 5, 3, 5, 6, 0, 1, 28, 0, 25, 0, 0, 0, 0, 1, 1, 0]' : 0.223425}", "{'[1, 3, 5, 3, 5, 6, 0, 1, 28, 0, 25, 0, 0, 0, 0, 1, 1, 0]' : 0.228334}", "{'[1, 3, 5, 3, 5, 6, 0, 1, 28, 0, 25, 0, 0, 0, 0, 1, 1, 0]' : 0.221155}", "{'[1, 3, 5, 3, 5, 6, 0, 1, 28, 0, 25, 0, 0, 0, 0, 1, 1, 0]' : 0.215582}"]
returning from 'run': {'[1, 3, 5, 3, 5, 6, 0, 1, 28, 0, 25, 0, 0, 0, 0, 1, 1, 0]': ([0.257476, 0.245195, 0.220692, 0.220791, 0.220928, 0.218362, 0.213961, 0.213805, 0.21386, 0.214191, 0.217912, 0.220964, 0.220846, 0.220727, 0.218341, 0.214047, 0.216216, 0.221219, 0.221024, 0.221395, 0.220906, 0.220837, 0.220695, 0.220775, 0.221224, 0.220689, 0.223425, 0.228334, 0.221155, 0.215582], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 3, 5, 3, 5, 6, 0, 1, 28, 0, 25, 0, 0, 0, 0, 1, 1, 0]': ([0.257476, 0.245195, 0.220692, 0.220791, 0.220928, 0.218362, 0.213961, 0.213805, 0.21386, 0.214191, 0.217912, 0.220964, 0.220846, 0.220727, 0.218341, 0.214047, 0.216216, 0.221219, 0.221024, 0.221395, 0.220906, 0.220837, 0.220695, 0.220775, 0.221224, 0.220689, 0.223425, 0.228334, 0.221155, 0.215582], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = iii
Code stats:
        Number of loops: 	27
        Max loop nest depth: 	5
        Additions: 		11852
        Multiplications: 	2904
        Divisions: 		0
        Logical: 		0
        Reads: 			16905
        Writes: 		1537
        Comparisons:		27
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest24.exe __orio_perftest24.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest24.exe  
Program Test Output: 
{'[6, 3, 4, 4, 4, 5, 1, 1, 6, 0, 22, 18, 2, 0, 0, 0, 1, 1]' : 0.320976}
{'[6, 3, 4, 4, 4, 5, 1, 1, 6, 0, 22, 18, 2, 0, 0, 0, 1, 1]' : 0.296099}
{'[6, 3, 4, 4, 4, 5, 1, 1, 6, 0, 22, 18, 2, 0, 0, 0, 1, 1]' : 0.294617}
{'[6, 3, 4, 4, 4, 5, 1, 1, 6, 0, 22, 18, 2, 0, 0, 0, 1, 1]' : 0.294184}
{'[6, 3, 4, 4, 4, 5, 1, 1, 6, 0, 22, 18, 2, 0, 0, 0, 1, 1]' : 0.295317}
{'[6, 3, 4, 4, 4, 5, 1, 1, 6, 0, 22, 18, 2, 0, 0, 0, 1, 1]' : 0.297356}
{'[6, 3, 4, 4, 4, 5, 1, 1, 6, 0, 22, 18, 2, 0, 0, 0, 1, 1]' : 0.295247}
{'[6, 3, 4, 4, 4, 5, 1, 1, 6, 0, 22, 18, 2, 0, 0, 0, 1, 1]' : 0.296267}
{'[6, 3, 4, 4, 4, 5, 1, 1, 6, 0, 22, 18, 2, 0, 0, 0, 1, 1]' : 0.294696}
{'[6, 3, 4, 4, 4, 5, 1, 1, 6, 0, 22, 18, 2, 0, 0, 0, 1, 1]' : 0.292311}
{'[6, 3, 4, 4, 4, 5, 1, 1, 6, 0, 22, 18, 2, 0, 0, 0, 1, 1]' : 0.295392}
{'[6, 3, 4, 4, 4, 5, 1, 1, 6, 0, 22, 18, 2, 0, 0, 0, 1, 1]' : 0.296581}
{'[6, 3, 4, 4, 4, 5, 1, 1, 6, 0, 22, 18, 2, 0, 0, 0, 1, 1]' : 0.295876}
{'[6, 3, 4, 4, 4, 5, 1, 1, 6, 0, 22, 18, 2, 0, 0, 0, 1, 1]' : 0.296359}
{'[6, 3, 4, 4, 4, 5, 1, 1, 6, 0, 22, 18, 2, 0, 0, 0, 1, 1]' : 0.295364}
{'[6, 3, 4, 4, 4, 5, 1, 1, 6, 0, 22, 18, 2, 0, 0, 0, 1, 1]' : 0.297183}
{'[6, 3, 4, 4, 4, 5, 1, 1, 6, 0, 22, 18, 2, 0, 0, 0, 1, 1]' : 0.295822}
{'[6, 3, 4, 4, 4, 5, 1, 1, 6, 0, 22, 18, 2, 0, 0, 0, 1, 1]' : 0.294591}
{'[6, 3, 4, 4, 4, 5, 1, 1, 6, 0, 22, 18, 2, 0, 0, 0, 1, 1]' : 0.297353}
{'[6, 3, 4, 4, 4, 5, 1, 1, 6, 0, 22, 18, 2, 0, 0, 0, 1, 1]' : 0.295906}
{'[6, 3, 4, 4, 4, 5, 1, 1, 6, 0, 22, 18, 2, 0, 0, 0, 1, 1]' : 0.292946}
{'[6, 3, 4, 4, 4, 5, 1, 1, 6, 0, 22, 18, 2, 0, 0, 0, 1, 1]' : 0.295233}
{'[6, 3, 4, 4, 4, 5, 1, 1, 6, 0, 22, 18, 2, 0, 0, 0, 1, 1]' : 0.295123}
{'[6, 3, 4, 4, 4, 5, 1, 1, 6, 0, 22, 18, 2, 0, 0, 0, 1, 1]' : 0.2936}
{'[6, 3, 4, 4, 4, 5, 1, 1, 6, 0, 22, 18, 2, 0, 0, 0, 1, 1]' : 0.297245}
{'[6, 3, 4, 4, 4, 5, 1, 1, 6, 0, 22, 18, 2, 0, 0, 0, 1, 1]' : 0.296525}
{'[6, 3, 4, 4, 4, 5, 1, 1, 6, 0, 22, 18, 2, 0, 0, 0, 1, 1]' : 0.293091}
{'[6, 3, 4, 4, 4, 5, 1, 1, 6, 0, 22, 18, 2, 0, 0, 0, 1, 1]' : 0.295264}
{'[6, 3, 4, 4, 4, 5, 1, 1, 6, 0, 22, 18, 2, 0, 0, 0, 1, 1]' : 0.297862}
{'[6, 3, 4, 4, 4, 5, 1, 1, 6, 0, 22, 18, 2, 0, 0, 0, 1, 1]' : 0.294214}

out:
 ["{'[6, 3, 4, 4, 4, 5, 1, 1, 6, 0, 22, 18, 2, 0, 0, 0, 1, 1]' : 0.320976}", "{'[6, 3, 4, 4, 4, 5, 1, 1, 6, 0, 22, 18, 2, 0, 0, 0, 1, 1]' : 0.296099}", "{'[6, 3, 4, 4, 4, 5, 1, 1, 6, 0, 22, 18, 2, 0, 0, 0, 1, 1]' : 0.294617}", "{'[6, 3, 4, 4, 4, 5, 1, 1, 6, 0, 22, 18, 2, 0, 0, 0, 1, 1]' : 0.294184}", "{'[6, 3, 4, 4, 4, 5, 1, 1, 6, 0, 22, 18, 2, 0, 0, 0, 1, 1]' : 0.295317}", "{'[6, 3, 4, 4, 4, 5, 1, 1, 6, 0, 22, 18, 2, 0, 0, 0, 1, 1]' : 0.297356}", "{'[6, 3, 4, 4, 4, 5, 1, 1, 6, 0, 22, 18, 2, 0, 0, 0, 1, 1]' : 0.295247}", "{'[6, 3, 4, 4, 4, 5, 1, 1, 6, 0, 22, 18, 2, 0, 0, 0, 1, 1]' : 0.296267}", "{'[6, 3, 4, 4, 4, 5, 1, 1, 6, 0, 22, 18, 2, 0, 0, 0, 1, 1]' : 0.294696}", "{'[6, 3, 4, 4, 4, 5, 1, 1, 6, 0, 22, 18, 2, 0, 0, 0, 1, 1]' : 0.292311}", "{'[6, 3, 4, 4, 4, 5, 1, 1, 6, 0, 22, 18, 2, 0, 0, 0, 1, 1]' : 0.295392}", "{'[6, 3, 4, 4, 4, 5, 1, 1, 6, 0, 22, 18, 2, 0, 0, 0, 1, 1]' : 0.296581}", "{'[6, 3, 4, 4, 4, 5, 1, 1, 6, 0, 22, 18, 2, 0, 0, 0, 1, 1]' : 0.295876}", "{'[6, 3, 4, 4, 4, 5, 1, 1, 6, 0, 22, 18, 2, 0, 0, 0, 1, 1]' : 0.296359}", "{'[6, 3, 4, 4, 4, 5, 1, 1, 6, 0, 22, 18, 2, 0, 0, 0, 1, 1]' : 0.295364}", "{'[6, 3, 4, 4, 4, 5, 1, 1, 6, 0, 22, 18, 2, 0, 0, 0, 1, 1]' : 0.297183}", "{'[6, 3, 4, 4, 4, 5, 1, 1, 6, 0, 22, 18, 2, 0, 0, 0, 1, 1]' : 0.295822}", "{'[6, 3, 4, 4, 4, 5, 1, 1, 6, 0, 22, 18, 2, 0, 0, 0, 1, 1]' : 0.294591}", "{'[6, 3, 4, 4, 4, 5, 1, 1, 6, 0, 22, 18, 2, 0, 0, 0, 1, 1]' : 0.297353}", "{'[6, 3, 4, 4, 4, 5, 1, 1, 6, 0, 22, 18, 2, 0, 0, 0, 1, 1]' : 0.295906}", "{'[6, 3, 4, 4, 4, 5, 1, 1, 6, 0, 22, 18, 2, 0, 0, 0, 1, 1]' : 0.292946}", "{'[6, 3, 4, 4, 4, 5, 1, 1, 6, 0, 22, 18, 2, 0, 0, 0, 1, 1]' : 0.295233}", "{'[6, 3, 4, 4, 4, 5, 1, 1, 6, 0, 22, 18, 2, 0, 0, 0, 1, 1]' : 0.295123}", "{'[6, 3, 4, 4, 4, 5, 1, 1, 6, 0, 22, 18, 2, 0, 0, 0, 1, 1]' : 0.2936}", "{'[6, 3, 4, 4, 4, 5, 1, 1, 6, 0, 22, 18, 2, 0, 0, 0, 1, 1]' : 0.297245}", "{'[6, 3, 4, 4, 4, 5, 1, 1, 6, 0, 22, 18, 2, 0, 0, 0, 1, 1]' : 0.296525}", "{'[6, 3, 4, 4, 4, 5, 1, 1, 6, 0, 22, 18, 2, 0, 0, 0, 1, 1]' : 0.293091}", "{'[6, 3, 4, 4, 4, 5, 1, 1, 6, 0, 22, 18, 2, 0, 0, 0, 1, 1]' : 0.295264}", "{'[6, 3, 4, 4, 4, 5, 1, 1, 6, 0, 22, 18, 2, 0, 0, 0, 1, 1]' : 0.297862}", "{'[6, 3, 4, 4, 4, 5, 1, 1, 6, 0, 22, 18, 2, 0, 0, 0, 1, 1]' : 0.294214}"]
returning from 'run': {'[6, 3, 4, 4, 4, 5, 1, 1, 6, 0, 22, 18, 2, 0, 0, 0, 1, 1]': ([0.320976, 0.296099, 0.294617, 0.294184, 0.295317, 0.297356, 0.295247, 0.296267, 0.294696, 0.292311, 0.295392, 0.296581, 0.295876, 0.296359, 0.295364, 0.297183, 0.295822, 0.294591, 0.297353, 0.295906, 0.292946, 0.295233, 0.295123, 0.2936, 0.297245, 0.296525, 0.293091, 0.295264, 0.297862, 0.294214], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 3, 4, 4, 4, 5, 1, 1, 6, 0, 22, 18, 2, 0, 0, 0, 1, 1]': ([0.320976, 0.296099, 0.294617, 0.294184, 0.295317, 0.297356, 0.295247, 0.296267, 0.294696, 0.292311, 0.295392, 0.296581, 0.295876, 0.296359, 0.295364, 0.297183, 0.295822, 0.294591, 0.297353, 0.295906, 0.292946, 0.295233, 0.295123, 0.2936, 0.297245, 0.296525, 0.293091, 0.295264, 0.297862, 0.294214], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	56
        Max loop nest depth: 	5
        Additions: 		7746
        Multiplications: 	2184
        Divisions: 		0
        Logical: 		0
        Reads: 			11912
        Writes: 		1300
        Comparisons:		56
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest25.exe __orio_perftest25.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest25.exe  
Program Test Output: 
{'[0, 5, 1, 5, 0, 1, 1, 0, 27, 29, 0, 18, 1, 1, 0, 0, 1, 0]' : 0.146482}
{'[0, 5, 1, 5, 0, 1, 1, 0, 27, 29, 0, 18, 1, 1, 0, 0, 1, 0]' : 0.145995}
{'[0, 5, 1, 5, 0, 1, 1, 0, 27, 29, 0, 18, 1, 1, 0, 0, 1, 0]' : 0.133671}
{'[0, 5, 1, 5, 0, 1, 1, 0, 27, 29, 0, 18, 1, 1, 0, 0, 1, 0]' : 0.126909}
{'[0, 5, 1, 5, 0, 1, 1, 0, 27, 29, 0, 18, 1, 1, 0, 0, 1, 0]' : 0.129111}
{'[0, 5, 1, 5, 0, 1, 1, 0, 27, 29, 0, 18, 1, 1, 0, 0, 1, 0]' : 0.130871}
{'[0, 5, 1, 5, 0, 1, 1, 0, 27, 29, 0, 18, 1, 1, 0, 0, 1, 0]' : 0.129511}
{'[0, 5, 1, 5, 0, 1, 1, 0, 27, 29, 0, 18, 1, 1, 0, 0, 1, 0]' : 0.126975}
{'[0, 5, 1, 5, 0, 1, 1, 0, 27, 29, 0, 18, 1, 1, 0, 0, 1, 0]' : 0.12944}
{'[0, 5, 1, 5, 0, 1, 1, 0, 27, 29, 0, 18, 1, 1, 0, 0, 1, 0]' : 0.129144}
{'[0, 5, 1, 5, 0, 1, 1, 0, 27, 29, 0, 18, 1, 1, 0, 0, 1, 0]' : 0.127016}
{'[0, 5, 1, 5, 0, 1, 1, 0, 27, 29, 0, 18, 1, 1, 0, 0, 1, 0]' : 0.126932}
{'[0, 5, 1, 5, 0, 1, 1, 0, 27, 29, 0, 18, 1, 1, 0, 0, 1, 0]' : 0.129741}
{'[0, 5, 1, 5, 0, 1, 1, 0, 27, 29, 0, 18, 1, 1, 0, 0, 1, 0]' : 0.129148}
{'[0, 5, 1, 5, 0, 1, 1, 0, 27, 29, 0, 18, 1, 1, 0, 0, 1, 0]' : 0.126584}
{'[0, 5, 1, 5, 0, 1, 1, 0, 27, 29, 0, 18, 1, 1, 0, 0, 1, 0]' : 0.12669}
{'[0, 5, 1, 5, 0, 1, 1, 0, 27, 29, 0, 18, 1, 1, 0, 0, 1, 0]' : 0.130201}
{'[0, 5, 1, 5, 0, 1, 1, 0, 27, 29, 0, 18, 1, 1, 0, 0, 1, 0]' : 0.128592}
{'[0, 5, 1, 5, 0, 1, 1, 0, 27, 29, 0, 18, 1, 1, 0, 0, 1, 0]' : 0.126885}
{'[0, 5, 1, 5, 0, 1, 1, 0, 27, 29, 0, 18, 1, 1, 0, 0, 1, 0]' : 0.126868}
{'[0, 5, 1, 5, 0, 1, 1, 0, 27, 29, 0, 18, 1, 1, 0, 0, 1, 0]' : 0.130936}
{'[0, 5, 1, 5, 0, 1, 1, 0, 27, 29, 0, 18, 1, 1, 0, 0, 1, 0]' : 0.130757}
{'[0, 5, 1, 5, 0, 1, 1, 0, 27, 29, 0, 18, 1, 1, 0, 0, 1, 0]' : 0.12851}
{'[0, 5, 1, 5, 0, 1, 1, 0, 27, 29, 0, 18, 1, 1, 0, 0, 1, 0]' : 0.127397}
{'[0, 5, 1, 5, 0, 1, 1, 0, 27, 29, 0, 18, 1, 1, 0, 0, 1, 0]' : 0.130403}
{'[0, 5, 1, 5, 0, 1, 1, 0, 27, 29, 0, 18, 1, 1, 0, 0, 1, 0]' : 0.127927}
{'[0, 5, 1, 5, 0, 1, 1, 0, 27, 29, 0, 18, 1, 1, 0, 0, 1, 0]' : 0.126936}
{'[0, 5, 1, 5, 0, 1, 1, 0, 27, 29, 0, 18, 1, 1, 0, 0, 1, 0]' : 0.127734}
{'[0, 5, 1, 5, 0, 1, 1, 0, 27, 29, 0, 18, 1, 1, 0, 0, 1, 0]' : 0.130193}
{'[0, 5, 1, 5, 0, 1, 1, 0, 27, 29, 0, 18, 1, 1, 0, 0, 1, 0]' : 0.130659}

out:
 ["{'[0, 5, 1, 5, 0, 1, 1, 0, 27, 29, 0, 18, 1, 1, 0, 0, 1, 0]' : 0.146482}", "{'[0, 5, 1, 5, 0, 1, 1, 0, 27, 29, 0, 18, 1, 1, 0, 0, 1, 0]' : 0.145995}", "{'[0, 5, 1, 5, 0, 1, 1, 0, 27, 29, 0, 18, 1, 1, 0, 0, 1, 0]' : 0.133671}", "{'[0, 5, 1, 5, 0, 1, 1, 0, 27, 29, 0, 18, 1, 1, 0, 0, 1, 0]' : 0.126909}", "{'[0, 5, 1, 5, 0, 1, 1, 0, 27, 29, 0, 18, 1, 1, 0, 0, 1, 0]' : 0.129111}", "{'[0, 5, 1, 5, 0, 1, 1, 0, 27, 29, 0, 18, 1, 1, 0, 0, 1, 0]' : 0.130871}", "{'[0, 5, 1, 5, 0, 1, 1, 0, 27, 29, 0, 18, 1, 1, 0, 0, 1, 0]' : 0.129511}", "{'[0, 5, 1, 5, 0, 1, 1, 0, 27, 29, 0, 18, 1, 1, 0, 0, 1, 0]' : 0.126975}", "{'[0, 5, 1, 5, 0, 1, 1, 0, 27, 29, 0, 18, 1, 1, 0, 0, 1, 0]' : 0.12944}", "{'[0, 5, 1, 5, 0, 1, 1, 0, 27, 29, 0, 18, 1, 1, 0, 0, 1, 0]' : 0.129144}", "{'[0, 5, 1, 5, 0, 1, 1, 0, 27, 29, 0, 18, 1, 1, 0, 0, 1, 0]' : 0.127016}", "{'[0, 5, 1, 5, 0, 1, 1, 0, 27, 29, 0, 18, 1, 1, 0, 0, 1, 0]' : 0.126932}", "{'[0, 5, 1, 5, 0, 1, 1, 0, 27, 29, 0, 18, 1, 1, 0, 0, 1, 0]' : 0.129741}", "{'[0, 5, 1, 5, 0, 1, 1, 0, 27, 29, 0, 18, 1, 1, 0, 0, 1, 0]' : 0.129148}", "{'[0, 5, 1, 5, 0, 1, 1, 0, 27, 29, 0, 18, 1, 1, 0, 0, 1, 0]' : 0.126584}", "{'[0, 5, 1, 5, 0, 1, 1, 0, 27, 29, 0, 18, 1, 1, 0, 0, 1, 0]' : 0.12669}", "{'[0, 5, 1, 5, 0, 1, 1, 0, 27, 29, 0, 18, 1, 1, 0, 0, 1, 0]' : 0.130201}", "{'[0, 5, 1, 5, 0, 1, 1, 0, 27, 29, 0, 18, 1, 1, 0, 0, 1, 0]' : 0.128592}", "{'[0, 5, 1, 5, 0, 1, 1, 0, 27, 29, 0, 18, 1, 1, 0, 0, 1, 0]' : 0.126885}", "{'[0, 5, 1, 5, 0, 1, 1, 0, 27, 29, 0, 18, 1, 1, 0, 0, 1, 0]' : 0.126868}", "{'[0, 5, 1, 5, 0, 1, 1, 0, 27, 29, 0, 18, 1, 1, 0, 0, 1, 0]' : 0.130936}", "{'[0, 5, 1, 5, 0, 1, 1, 0, 27, 29, 0, 18, 1, 1, 0, 0, 1, 0]' : 0.130757}", "{'[0, 5, 1, 5, 0, 1, 1, 0, 27, 29, 0, 18, 1, 1, 0, 0, 1, 0]' : 0.12851}", "{'[0, 5, 1, 5, 0, 1, 1, 0, 27, 29, 0, 18, 1, 1, 0, 0, 1, 0]' : 0.127397}", "{'[0, 5, 1, 5, 0, 1, 1, 0, 27, 29, 0, 18, 1, 1, 0, 0, 1, 0]' : 0.130403}", "{'[0, 5, 1, 5, 0, 1, 1, 0, 27, 29, 0, 18, 1, 1, 0, 0, 1, 0]' : 0.127927}", "{'[0, 5, 1, 5, 0, 1, 1, 0, 27, 29, 0, 18, 1, 1, 0, 0, 1, 0]' : 0.126936}", "{'[0, 5, 1, 5, 0, 1, 1, 0, 27, 29, 0, 18, 1, 1, 0, 0, 1, 0]' : 0.127734}", "{'[0, 5, 1, 5, 0, 1, 1, 0, 27, 29, 0, 18, 1, 1, 0, 0, 1, 0]' : 0.130193}", "{'[0, 5, 1, 5, 0, 1, 1, 0, 27, 29, 0, 18, 1, 1, 0, 0, 1, 0]' : 0.130659}"]
returning from 'run': {'[0, 5, 1, 5, 0, 1, 1, 0, 27, 29, 0, 18, 1, 1, 0, 0, 1, 0]': ([0.146482, 0.145995, 0.133671, 0.126909, 0.129111, 0.130871, 0.129511, 0.126975, 0.12944, 0.129144, 0.127016, 0.126932, 0.129741, 0.129148, 0.126584, 0.12669, 0.130201, 0.128592, 0.126885, 0.126868, 0.130936, 0.130757, 0.12851, 0.127397, 0.130403, 0.127927, 0.126936, 0.127734, 0.130193, 0.130659], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 5, 1, 5, 0, 1, 1, 0, 27, 29, 0, 18, 1, 1, 0, 0, 1, 0]': ([0.146482, 0.145995, 0.133671, 0.126909, 0.129111, 0.130871, 0.129511, 0.126975, 0.12944, 0.129144, 0.127016, 0.126932, 0.129741, 0.129148, 0.126584, 0.12669, 0.130201, 0.128592, 0.126885, 0.126868, 0.130936, 0.130757, 0.12851, 0.127397, 0.130403, 0.127927, 0.126936, 0.127734, 0.130193, 0.130659], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	27
        Max loop nest depth: 	5
        Additions: 		5559
        Multiplications: 	1672
        Divisions: 		0
        Logical: 		0
        Reads: 			8619
        Writes: 		925
        Comparisons:		27
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest26.exe __orio_perftest26.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest26.exe  
Program Test Output: 
{'[0, 2, 1, 6, 1, 3, 0, 0, 26, 4, 0, 19, 2, 0, 0, 0, 0, 0]' : 0.24627}
{'[0, 2, 1, 6, 1, 3, 0, 0, 26, 4, 0, 19, 2, 0, 0, 0, 0, 0]' : 0.236011}
{'[0, 2, 1, 6, 1, 3, 0, 0, 26, 4, 0, 19, 2, 0, 0, 0, 0, 0]' : 0.227634}
{'[0, 2, 1, 6, 1, 3, 0, 0, 26, 4, 0, 19, 2, 0, 0, 0, 0, 0]' : 0.232241}
{'[0, 2, 1, 6, 1, 3, 0, 0, 26, 4, 0, 19, 2, 0, 0, 0, 0, 0]' : 0.233072}
{'[0, 2, 1, 6, 1, 3, 0, 0, 26, 4, 0, 19, 2, 0, 0, 0, 0, 0]' : 0.234854}
{'[0, 2, 1, 6, 1, 3, 0, 0, 26, 4, 0, 19, 2, 0, 0, 0, 0, 0]' : 0.236356}
{'[0, 2, 1, 6, 1, 3, 0, 0, 26, 4, 0, 19, 2, 0, 0, 0, 0, 0]' : 0.235909}
{'[0, 2, 1, 6, 1, 3, 0, 0, 26, 4, 0, 19, 2, 0, 0, 0, 0, 0]' : 0.237106}
{'[0, 2, 1, 6, 1, 3, 0, 0, 26, 4, 0, 19, 2, 0, 0, 0, 0, 0]' : 0.235187}
{'[0, 2, 1, 6, 1, 3, 0, 0, 26, 4, 0, 19, 2, 0, 0, 0, 0, 0]' : 0.234022}
{'[0, 2, 1, 6, 1, 3, 0, 0, 26, 4, 0, 19, 2, 0, 0, 0, 0, 0]' : 0.235529}
{'[0, 2, 1, 6, 1, 3, 0, 0, 26, 4, 0, 19, 2, 0, 0, 0, 0, 0]' : 0.234023}
{'[0, 2, 1, 6, 1, 3, 0, 0, 26, 4, 0, 19, 2, 0, 0, 0, 0, 0]' : 0.237027}
{'[0, 2, 1, 6, 1, 3, 0, 0, 26, 4, 0, 19, 2, 0, 0, 0, 0, 0]' : 0.233872}
{'[0, 2, 1, 6, 1, 3, 0, 0, 26, 4, 0, 19, 2, 0, 0, 0, 0, 0]' : 0.24058}
{'[0, 2, 1, 6, 1, 3, 0, 0, 26, 4, 0, 19, 2, 0, 0, 0, 0, 0]' : 0.232586}
{'[0, 2, 1, 6, 1, 3, 0, 0, 26, 4, 0, 19, 2, 0, 0, 0, 0, 0]' : 0.238215}
{'[0, 2, 1, 6, 1, 3, 0, 0, 26, 4, 0, 19, 2, 0, 0, 0, 0, 0]' : 0.232606}
{'[0, 2, 1, 6, 1, 3, 0, 0, 26, 4, 0, 19, 2, 0, 0, 0, 0, 0]' : 0.237358}
{'[0, 2, 1, 6, 1, 3, 0, 0, 26, 4, 0, 19, 2, 0, 0, 0, 0, 0]' : 0.23516}
{'[0, 2, 1, 6, 1, 3, 0, 0, 26, 4, 0, 19, 2, 0, 0, 0, 0, 0]' : 0.234931}
{'[0, 2, 1, 6, 1, 3, 0, 0, 26, 4, 0, 19, 2, 0, 0, 0, 0, 0]' : 0.235883}
{'[0, 2, 1, 6, 1, 3, 0, 0, 26, 4, 0, 19, 2, 0, 0, 0, 0, 0]' : 0.235539}
{'[0, 2, 1, 6, 1, 3, 0, 0, 26, 4, 0, 19, 2, 0, 0, 0, 0, 0]' : 0.238416}
{'[0, 2, 1, 6, 1, 3, 0, 0, 26, 4, 0, 19, 2, 0, 0, 0, 0, 0]' : 0.235357}
{'[0, 2, 1, 6, 1, 3, 0, 0, 26, 4, 0, 19, 2, 0, 0, 0, 0, 0]' : 0.235186}
{'[0, 2, 1, 6, 1, 3, 0, 0, 26, 4, 0, 19, 2, 0, 0, 0, 0, 0]' : 0.240459}
{'[0, 2, 1, 6, 1, 3, 0, 0, 26, 4, 0, 19, 2, 0, 0, 0, 0, 0]' : 0.240754}
{'[0, 2, 1, 6, 1, 3, 0, 0, 26, 4, 0, 19, 2, 0, 0, 0, 0, 0]' : 0.243801}

out:
 ["{'[0, 2, 1, 6, 1, 3, 0, 0, 26, 4, 0, 19, 2, 0, 0, 0, 0, 0]' : 0.24627}", "{'[0, 2, 1, 6, 1, 3, 0, 0, 26, 4, 0, 19, 2, 0, 0, 0, 0, 0]' : 0.236011}", "{'[0, 2, 1, 6, 1, 3, 0, 0, 26, 4, 0, 19, 2, 0, 0, 0, 0, 0]' : 0.227634}", "{'[0, 2, 1, 6, 1, 3, 0, 0, 26, 4, 0, 19, 2, 0, 0, 0, 0, 0]' : 0.232241}", "{'[0, 2, 1, 6, 1, 3, 0, 0, 26, 4, 0, 19, 2, 0, 0, 0, 0, 0]' : 0.233072}", "{'[0, 2, 1, 6, 1, 3, 0, 0, 26, 4, 0, 19, 2, 0, 0, 0, 0, 0]' : 0.234854}", "{'[0, 2, 1, 6, 1, 3, 0, 0, 26, 4, 0, 19, 2, 0, 0, 0, 0, 0]' : 0.236356}", "{'[0, 2, 1, 6, 1, 3, 0, 0, 26, 4, 0, 19, 2, 0, 0, 0, 0, 0]' : 0.235909}", "{'[0, 2, 1, 6, 1, 3, 0, 0, 26, 4, 0, 19, 2, 0, 0, 0, 0, 0]' : 0.237106}", "{'[0, 2, 1, 6, 1, 3, 0, 0, 26, 4, 0, 19, 2, 0, 0, 0, 0, 0]' : 0.235187}", "{'[0, 2, 1, 6, 1, 3, 0, 0, 26, 4, 0, 19, 2, 0, 0, 0, 0, 0]' : 0.234022}", "{'[0, 2, 1, 6, 1, 3, 0, 0, 26, 4, 0, 19, 2, 0, 0, 0, 0, 0]' : 0.235529}", "{'[0, 2, 1, 6, 1, 3, 0, 0, 26, 4, 0, 19, 2, 0, 0, 0, 0, 0]' : 0.234023}", "{'[0, 2, 1, 6, 1, 3, 0, 0, 26, 4, 0, 19, 2, 0, 0, 0, 0, 0]' : 0.237027}", "{'[0, 2, 1, 6, 1, 3, 0, 0, 26, 4, 0, 19, 2, 0, 0, 0, 0, 0]' : 0.233872}", "{'[0, 2, 1, 6, 1, 3, 0, 0, 26, 4, 0, 19, 2, 0, 0, 0, 0, 0]' : 0.24058}", "{'[0, 2, 1, 6, 1, 3, 0, 0, 26, 4, 0, 19, 2, 0, 0, 0, 0, 0]' : 0.232586}", "{'[0, 2, 1, 6, 1, 3, 0, 0, 26, 4, 0, 19, 2, 0, 0, 0, 0, 0]' : 0.238215}", "{'[0, 2, 1, 6, 1, 3, 0, 0, 26, 4, 0, 19, 2, 0, 0, 0, 0, 0]' : 0.232606}", "{'[0, 2, 1, 6, 1, 3, 0, 0, 26, 4, 0, 19, 2, 0, 0, 0, 0, 0]' : 0.237358}", "{'[0, 2, 1, 6, 1, 3, 0, 0, 26, 4, 0, 19, 2, 0, 0, 0, 0, 0]' : 0.23516}", "{'[0, 2, 1, 6, 1, 3, 0, 0, 26, 4, 0, 19, 2, 0, 0, 0, 0, 0]' : 0.234931}", "{'[0, 2, 1, 6, 1, 3, 0, 0, 26, 4, 0, 19, 2, 0, 0, 0, 0, 0]' : 0.235883}", "{'[0, 2, 1, 6, 1, 3, 0, 0, 26, 4, 0, 19, 2, 0, 0, 0, 0, 0]' : 0.235539}", "{'[0, 2, 1, 6, 1, 3, 0, 0, 26, 4, 0, 19, 2, 0, 0, 0, 0, 0]' : 0.238416}", "{'[0, 2, 1, 6, 1, 3, 0, 0, 26, 4, 0, 19, 2, 0, 0, 0, 0, 0]' : 0.235357}", "{'[0, 2, 1, 6, 1, 3, 0, 0, 26, 4, 0, 19, 2, 0, 0, 0, 0, 0]' : 0.235186}", "{'[0, 2, 1, 6, 1, 3, 0, 0, 26, 4, 0, 19, 2, 0, 0, 0, 0, 0]' : 0.240459}", "{'[0, 2, 1, 6, 1, 3, 0, 0, 26, 4, 0, 19, 2, 0, 0, 0, 0, 0]' : 0.240754}", "{'[0, 2, 1, 6, 1, 3, 0, 0, 26, 4, 0, 19, 2, 0, 0, 0, 0, 0]' : 0.243801}"]
returning from 'run': {'[0, 2, 1, 6, 1, 3, 0, 0, 26, 4, 0, 19, 2, 0, 0, 0, 0, 0]': ([0.24627, 0.236011, 0.227634, 0.232241, 0.233072, 0.234854, 0.236356, 0.235909, 0.237106, 0.235187, 0.234022, 0.235529, 0.234023, 0.237027, 0.233872, 0.24058, 0.232586, 0.238215, 0.232606, 0.237358, 0.23516, 0.234931, 0.235883, 0.235539, 0.238416, 0.235357, 0.235186, 0.240459, 0.240754, 0.243801], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 1, 6, 1, 3, 0, 0, 26, 4, 0, 19, 2, 0, 0, 0, 0, 0]': ([0.24627, 0.236011, 0.227634, 0.232241, 0.233072, 0.234854, 0.236356, 0.235909, 0.237106, 0.235187, 0.234022, 0.235529, 0.234023, 0.237027, 0.233872, 0.24058, 0.232586, 0.238215, 0.232606, 0.237358, 0.23516, 0.234931, 0.235883, 0.235539, 0.238416, 0.235357, 0.235186, 0.240459, 0.240754, 0.243801], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	78
        Max loop nest depth: 	6
        Additions: 		2593
        Multiplications: 	558
        Divisions: 		0
        Logical: 		0
        Reads: 			4214
        Writes: 		537
        Comparisons:		78
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest27.exe __orio_perftest27.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest27.exe  
Program Test Output: 
{'[4, 1, 1, 6, 0, 6, 0, 1, 4, 29, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.319294}
{'[4, 1, 1, 6, 0, 6, 0, 1, 4, 29, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.315825}
{'[4, 1, 1, 6, 0, 6, 0, 1, 4, 29, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.273237}
{'[4, 1, 1, 6, 0, 6, 0, 1, 4, 29, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.273291}
{'[4, 1, 1, 6, 0, 6, 0, 1, 4, 29, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.274592}
{'[4, 1, 1, 6, 0, 6, 0, 1, 4, 29, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.273132}
{'[4, 1, 1, 6, 0, 6, 0, 1, 4, 29, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.273299}
{'[4, 1, 1, 6, 0, 6, 0, 1, 4, 29, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.273092}
{'[4, 1, 1, 6, 0, 6, 0, 1, 4, 29, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.273366}
{'[4, 1, 1, 6, 0, 6, 0, 1, 4, 29, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.274015}
{'[4, 1, 1, 6, 0, 6, 0, 1, 4, 29, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.272868}
{'[4, 1, 1, 6, 0, 6, 0, 1, 4, 29, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.273035}
{'[4, 1, 1, 6, 0, 6, 0, 1, 4, 29, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.273181}
{'[4, 1, 1, 6, 0, 6, 0, 1, 4, 29, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.273247}
{'[4, 1, 1, 6, 0, 6, 0, 1, 4, 29, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.273129}
{'[4, 1, 1, 6, 0, 6, 0, 1, 4, 29, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.273546}
{'[4, 1, 1, 6, 0, 6, 0, 1, 4, 29, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.273707}
{'[4, 1, 1, 6, 0, 6, 0, 1, 4, 29, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.273316}
{'[4, 1, 1, 6, 0, 6, 0, 1, 4, 29, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.273359}
{'[4, 1, 1, 6, 0, 6, 0, 1, 4, 29, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.272696}
{'[4, 1, 1, 6, 0, 6, 0, 1, 4, 29, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.274016}
{'[4, 1, 1, 6, 0, 6, 0, 1, 4, 29, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.273612}
{'[4, 1, 1, 6, 0, 6, 0, 1, 4, 29, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.273042}
{'[4, 1, 1, 6, 0, 6, 0, 1, 4, 29, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.27385}
{'[4, 1, 1, 6, 0, 6, 0, 1, 4, 29, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.272715}
{'[4, 1, 1, 6, 0, 6, 0, 1, 4, 29, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.273067}
{'[4, 1, 1, 6, 0, 6, 0, 1, 4, 29, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.273815}
{'[4, 1, 1, 6, 0, 6, 0, 1, 4, 29, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.272989}
{'[4, 1, 1, 6, 0, 6, 0, 1, 4, 29, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.273492}
{'[4, 1, 1, 6, 0, 6, 0, 1, 4, 29, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.273032}

out:
 ["{'[4, 1, 1, 6, 0, 6, 0, 1, 4, 29, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.319294}", "{'[4, 1, 1, 6, 0, 6, 0, 1, 4, 29, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.315825}", "{'[4, 1, 1, 6, 0, 6, 0, 1, 4, 29, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.273237}", "{'[4, 1, 1, 6, 0, 6, 0, 1, 4, 29, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.273291}", "{'[4, 1, 1, 6, 0, 6, 0, 1, 4, 29, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.274592}", "{'[4, 1, 1, 6, 0, 6, 0, 1, 4, 29, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.273132}", "{'[4, 1, 1, 6, 0, 6, 0, 1, 4, 29, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.273299}", "{'[4, 1, 1, 6, 0, 6, 0, 1, 4, 29, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.273092}", "{'[4, 1, 1, 6, 0, 6, 0, 1, 4, 29, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.273366}", "{'[4, 1, 1, 6, 0, 6, 0, 1, 4, 29, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.274015}", "{'[4, 1, 1, 6, 0, 6, 0, 1, 4, 29, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.272868}", "{'[4, 1, 1, 6, 0, 6, 0, 1, 4, 29, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.273035}", "{'[4, 1, 1, 6, 0, 6, 0, 1, 4, 29, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.273181}", "{'[4, 1, 1, 6, 0, 6, 0, 1, 4, 29, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.273247}", "{'[4, 1, 1, 6, 0, 6, 0, 1, 4, 29, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.273129}", "{'[4, 1, 1, 6, 0, 6, 0, 1, 4, 29, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.273546}", "{'[4, 1, 1, 6, 0, 6, 0, 1, 4, 29, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.273707}", "{'[4, 1, 1, 6, 0, 6, 0, 1, 4, 29, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.273316}", "{'[4, 1, 1, 6, 0, 6, 0, 1, 4, 29, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.273359}", "{'[4, 1, 1, 6, 0, 6, 0, 1, 4, 29, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.272696}", "{'[4, 1, 1, 6, 0, 6, 0, 1, 4, 29, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.274016}", "{'[4, 1, 1, 6, 0, 6, 0, 1, 4, 29, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.273612}", "{'[4, 1, 1, 6, 0, 6, 0, 1, 4, 29, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.273042}", "{'[4, 1, 1, 6, 0, 6, 0, 1, 4, 29, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.27385}", "{'[4, 1, 1, 6, 0, 6, 0, 1, 4, 29, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.272715}", "{'[4, 1, 1, 6, 0, 6, 0, 1, 4, 29, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.273067}", "{'[4, 1, 1, 6, 0, 6, 0, 1, 4, 29, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.273815}", "{'[4, 1, 1, 6, 0, 6, 0, 1, 4, 29, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.272989}", "{'[4, 1, 1, 6, 0, 6, 0, 1, 4, 29, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.273492}", "{'[4, 1, 1, 6, 0, 6, 0, 1, 4, 29, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.273032}"]
returning from 'run': {'[4, 1, 1, 6, 0, 6, 0, 1, 4, 29, 0, 28, 0, 0, 1, 0, 1, 0]': ([0.319294, 0.315825, 0.273237, 0.273291, 0.274592, 0.273132, 0.273299, 0.273092, 0.273366, 0.274015, 0.272868, 0.273035, 0.273181, 0.273247, 0.273129, 0.273546, 0.273707, 0.273316, 0.273359, 0.272696, 0.274016, 0.273612, 0.273042, 0.27385, 0.272715, 0.273067, 0.273815, 0.272989, 0.273492, 0.273032], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 1, 1, 6, 0, 6, 0, 1, 4, 29, 0, 28, 0, 0, 1, 0, 1, 0]': ([0.319294, 0.315825, 0.273237, 0.273291, 0.274592, 0.273132, 0.273299, 0.273092, 0.273366, 0.274015, 0.272868, 0.273035, 0.273181, 0.273247, 0.273129, 0.273546, 0.273707, 0.273316, 0.273359, 0.272696, 0.274016, 0.273612, 0.273042, 0.27385, 0.272715, 0.273067, 0.273815, 0.272989, 0.273492, 0.273032], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	79
        Max loop nest depth: 	5
        Additions: 		7938
        Multiplications: 	2232
        Divisions: 		0
        Logical: 		0
        Reads: 			12147
        Writes: 		1433
        Comparisons:		79
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest28.exe __orio_perftest28.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest28.exe  
Program Test Output: 
{'[6, 4, 2, 0, 5, 6, 0, 0, 29, 29, 0, 1, 0, 0, 2, 0, 0, 1]' : 0.26208}
{'[6, 4, 2, 0, 5, 6, 0, 0, 29, 29, 0, 1, 0, 0, 2, 0, 0, 1]' : 0.272607}
{'[6, 4, 2, 0, 5, 6, 0, 0, 29, 29, 0, 1, 0, 0, 2, 0, 0, 1]' : 0.267558}
{'[6, 4, 2, 0, 5, 6, 0, 0, 29, 29, 0, 1, 0, 0, 2, 0, 0, 1]' : 0.262923}
{'[6, 4, 2, 0, 5, 6, 0, 0, 29, 29, 0, 1, 0, 0, 2, 0, 0, 1]' : 0.262841}
{'[6, 4, 2, 0, 5, 6, 0, 0, 29, 29, 0, 1, 0, 0, 2, 0, 0, 1]' : 0.266966}
{'[6, 4, 2, 0, 5, 6, 0, 0, 29, 29, 0, 1, 0, 0, 2, 0, 0, 1]' : 0.267726}
{'[6, 4, 2, 0, 5, 6, 0, 0, 29, 29, 0, 1, 0, 0, 2, 0, 0, 1]' : 0.267092}
{'[6, 4, 2, 0, 5, 6, 0, 0, 29, 29, 0, 1, 0, 0, 2, 0, 0, 1]' : 0.26706}
{'[6, 4, 2, 0, 5, 6, 0, 0, 29, 29, 0, 1, 0, 0, 2, 0, 0, 1]' : 0.266871}
{'[6, 4, 2, 0, 5, 6, 0, 0, 29, 29, 0, 1, 0, 0, 2, 0, 0, 1]' : 0.267053}
{'[6, 4, 2, 0, 5, 6, 0, 0, 29, 29, 0, 1, 0, 0, 2, 0, 0, 1]' : 0.267541}
{'[6, 4, 2, 0, 5, 6, 0, 0, 29, 29, 0, 1, 0, 0, 2, 0, 0, 1]' : 0.267154}
{'[6, 4, 2, 0, 5, 6, 0, 0, 29, 29, 0, 1, 0, 0, 2, 0, 0, 1]' : 0.267517}
{'[6, 4, 2, 0, 5, 6, 0, 0, 29, 29, 0, 1, 0, 0, 2, 0, 0, 1]' : 0.266888}
{'[6, 4, 2, 0, 5, 6, 0, 0, 29, 29, 0, 1, 0, 0, 2, 0, 0, 1]' : 0.267464}
{'[6, 4, 2, 0, 5, 6, 0, 0, 29, 29, 0, 1, 0, 0, 2, 0, 0, 1]' : 0.266565}
{'[6, 4, 2, 0, 5, 6, 0, 0, 29, 29, 0, 1, 0, 0, 2, 0, 0, 1]' : 0.267557}
{'[6, 4, 2, 0, 5, 6, 0, 0, 29, 29, 0, 1, 0, 0, 2, 0, 0, 1]' : 0.267622}
{'[6, 4, 2, 0, 5, 6, 0, 0, 29, 29, 0, 1, 0, 0, 2, 0, 0, 1]' : 0.267324}
{'[6, 4, 2, 0, 5, 6, 0, 0, 29, 29, 0, 1, 0, 0, 2, 0, 0, 1]' : 0.267124}
{'[6, 4, 2, 0, 5, 6, 0, 0, 29, 29, 0, 1, 0, 0, 2, 0, 0, 1]' : 0.267515}
{'[6, 4, 2, 0, 5, 6, 0, 0, 29, 29, 0, 1, 0, 0, 2, 0, 0, 1]' : 0.267256}
{'[6, 4, 2, 0, 5, 6, 0, 0, 29, 29, 0, 1, 0, 0, 2, 0, 0, 1]' : 0.266865}
{'[6, 4, 2, 0, 5, 6, 0, 0, 29, 29, 0, 1, 0, 0, 2, 0, 0, 1]' : 0.259722}
{'[6, 4, 2, 0, 5, 6, 0, 0, 29, 29, 0, 1, 0, 0, 2, 0, 0, 1]' : 0.267262}
{'[6, 4, 2, 0, 5, 6, 0, 0, 29, 29, 0, 1, 0, 0, 2, 0, 0, 1]' : 0.26729}
{'[6, 4, 2, 0, 5, 6, 0, 0, 29, 29, 0, 1, 0, 0, 2, 0, 0, 1]' : 0.274287}
{'[6, 4, 2, 0, 5, 6, 0, 0, 29, 29, 0, 1, 0, 0, 2, 0, 0, 1]' : 0.268153}
{'[6, 4, 2, 0, 5, 6, 0, 0, 29, 29, 0, 1, 0, 0, 2, 0, 0, 1]' : 0.270914}

out:
 ["{'[6, 4, 2, 0, 5, 6, 0, 0, 29, 29, 0, 1, 0, 0, 2, 0, 0, 1]' : 0.26208}", "{'[6, 4, 2, 0, 5, 6, 0, 0, 29, 29, 0, 1, 0, 0, 2, 0, 0, 1]' : 0.272607}", "{'[6, 4, 2, 0, 5, 6, 0, 0, 29, 29, 0, 1, 0, 0, 2, 0, 0, 1]' : 0.267558}", "{'[6, 4, 2, 0, 5, 6, 0, 0, 29, 29, 0, 1, 0, 0, 2, 0, 0, 1]' : 0.262923}", "{'[6, 4, 2, 0, 5, 6, 0, 0, 29, 29, 0, 1, 0, 0, 2, 0, 0, 1]' : 0.262841}", "{'[6, 4, 2, 0, 5, 6, 0, 0, 29, 29, 0, 1, 0, 0, 2, 0, 0, 1]' : 0.266966}", "{'[6, 4, 2, 0, 5, 6, 0, 0, 29, 29, 0, 1, 0, 0, 2, 0, 0, 1]' : 0.267726}", "{'[6, 4, 2, 0, 5, 6, 0, 0, 29, 29, 0, 1, 0, 0, 2, 0, 0, 1]' : 0.267092}", "{'[6, 4, 2, 0, 5, 6, 0, 0, 29, 29, 0, 1, 0, 0, 2, 0, 0, 1]' : 0.26706}", "{'[6, 4, 2, 0, 5, 6, 0, 0, 29, 29, 0, 1, 0, 0, 2, 0, 0, 1]' : 0.266871}", "{'[6, 4, 2, 0, 5, 6, 0, 0, 29, 29, 0, 1, 0, 0, 2, 0, 0, 1]' : 0.267053}", "{'[6, 4, 2, 0, 5, 6, 0, 0, 29, 29, 0, 1, 0, 0, 2, 0, 0, 1]' : 0.267541}", "{'[6, 4, 2, 0, 5, 6, 0, 0, 29, 29, 0, 1, 0, 0, 2, 0, 0, 1]' : 0.267154}", "{'[6, 4, 2, 0, 5, 6, 0, 0, 29, 29, 0, 1, 0, 0, 2, 0, 0, 1]' : 0.267517}", "{'[6, 4, 2, 0, 5, 6, 0, 0, 29, 29, 0, 1, 0, 0, 2, 0, 0, 1]' : 0.266888}", "{'[6, 4, 2, 0, 5, 6, 0, 0, 29, 29, 0, 1, 0, 0, 2, 0, 0, 1]' : 0.267464}", "{'[6, 4, 2, 0, 5, 6, 0, 0, 29, 29, 0, 1, 0, 0, 2, 0, 0, 1]' : 0.266565}", "{'[6, 4, 2, 0, 5, 6, 0, 0, 29, 29, 0, 1, 0, 0, 2, 0, 0, 1]' : 0.267557}", "{'[6, 4, 2, 0, 5, 6, 0, 0, 29, 29, 0, 1, 0, 0, 2, 0, 0, 1]' : 0.267622}", "{'[6, 4, 2, 0, 5, 6, 0, 0, 29, 29, 0, 1, 0, 0, 2, 0, 0, 1]' : 0.267324}", "{'[6, 4, 2, 0, 5, 6, 0, 0, 29, 29, 0, 1, 0, 0, 2, 0, 0, 1]' : 0.267124}", "{'[6, 4, 2, 0, 5, 6, 0, 0, 29, 29, 0, 1, 0, 0, 2, 0, 0, 1]' : 0.267515}", "{'[6, 4, 2, 0, 5, 6, 0, 0, 29, 29, 0, 1, 0, 0, 2, 0, 0, 1]' : 0.267256}", "{'[6, 4, 2, 0, 5, 6, 0, 0, 29, 29, 0, 1, 0, 0, 2, 0, 0, 1]' : 0.266865}", "{'[6, 4, 2, 0, 5, 6, 0, 0, 29, 29, 0, 1, 0, 0, 2, 0, 0, 1]' : 0.259722}", "{'[6, 4, 2, 0, 5, 6, 0, 0, 29, 29, 0, 1, 0, 0, 2, 0, 0, 1]' : 0.267262}", "{'[6, 4, 2, 0, 5, 6, 0, 0, 29, 29, 0, 1, 0, 0, 2, 0, 0, 1]' : 0.26729}", "{'[6, 4, 2, 0, 5, 6, 0, 0, 29, 29, 0, 1, 0, 0, 2, 0, 0, 1]' : 0.274287}", "{'[6, 4, 2, 0, 5, 6, 0, 0, 29, 29, 0, 1, 0, 0, 2, 0, 0, 1]' : 0.268153}", "{'[6, 4, 2, 0, 5, 6, 0, 0, 29, 29, 0, 1, 0, 0, 2, 0, 0, 1]' : 0.270914}"]
returning from 'run': {'[6, 4, 2, 0, 5, 6, 0, 0, 29, 29, 0, 1, 0, 0, 2, 0, 0, 1]': ([0.26208, 0.272607, 0.267558, 0.262923, 0.262841, 0.266966, 0.267726, 0.267092, 0.26706, 0.266871, 0.267053, 0.267541, 0.267154, 0.267517, 0.266888, 0.267464, 0.266565, 0.267557, 0.267622, 0.267324, 0.267124, 0.267515, 0.267256, 0.266865, 0.259722, 0.267262, 0.26729, 0.274287, 0.268153, 0.270914], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 4, 2, 0, 5, 6, 0, 0, 29, 29, 0, 1, 0, 0, 2, 0, 0, 1]': ([0.26208, 0.272607, 0.267558, 0.262923, 0.262841, 0.266966, 0.267726, 0.267092, 0.26706, 0.266871, 0.267053, 0.267541, 0.267154, 0.267517, 0.266888, 0.267464, 0.266565, 0.267557, 0.267622, 0.267324, 0.267124, 0.267515, 0.267256, 0.266865, 0.259722, 0.267262, 0.26729, 0.274287, 0.268153, 0.270914], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	6
        Additions: 		1664
        Multiplications: 	768
        Divisions: 		0
        Logical: 		0
        Reads: 			3396
        Writes: 		610
        Comparisons:		20
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest29.exe __orio_perftest29.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest29.exe  
Program Test Output: 
{'[6, 6, 1, 5, 0, 1, 0, 0, 6, 4, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.115757}
{'[6, 6, 1, 5, 0, 1, 0, 0, 6, 4, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.116137}
{'[6, 6, 1, 5, 0, 1, 0, 0, 6, 4, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.115701}
{'[6, 6, 1, 5, 0, 1, 0, 0, 6, 4, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.115697}
{'[6, 6, 1, 5, 0, 1, 0, 0, 6, 4, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.114501}
{'[6, 6, 1, 5, 0, 1, 0, 0, 6, 4, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.112277}
{'[6, 6, 1, 5, 0, 1, 0, 0, 6, 4, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.114943}
{'[6, 6, 1, 5, 0, 1, 0, 0, 6, 4, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.115693}
{'[6, 6, 1, 5, 0, 1, 0, 0, 6, 4, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.115699}
{'[6, 6, 1, 5, 0, 1, 0, 0, 6, 4, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.115725}
{'[6, 6, 1, 5, 0, 1, 0, 0, 6, 4, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.115705}
{'[6, 6, 1, 5, 0, 1, 0, 0, 6, 4, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.115715}
{'[6, 6, 1, 5, 0, 1, 0, 0, 6, 4, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.115702}
{'[6, 6, 1, 5, 0, 1, 0, 0, 6, 4, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.115705}
{'[6, 6, 1, 5, 0, 1, 0, 0, 6, 4, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.115752}
{'[6, 6, 1, 5, 0, 1, 0, 0, 6, 4, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.115702}
{'[6, 6, 1, 5, 0, 1, 0, 0, 6, 4, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.115673}
{'[6, 6, 1, 5, 0, 1, 0, 0, 6, 4, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.115694}
{'[6, 6, 1, 5, 0, 1, 0, 0, 6, 4, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.11573}
{'[6, 6, 1, 5, 0, 1, 0, 0, 6, 4, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.11521}
{'[6, 6, 1, 5, 0, 1, 0, 0, 6, 4, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.112195}
{'[6, 6, 1, 5, 0, 1, 0, 0, 6, 4, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.112086}
{'[6, 6, 1, 5, 0, 1, 0, 0, 6, 4, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.109223}
{'[6, 6, 1, 5, 0, 1, 0, 0, 6, 4, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.111085}
{'[6, 6, 1, 5, 0, 1, 0, 0, 6, 4, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.115693}
{'[6, 6, 1, 5, 0, 1, 0, 0, 6, 4, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.115708}
{'[6, 6, 1, 5, 0, 1, 0, 0, 6, 4, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.11569}
{'[6, 6, 1, 5, 0, 1, 0, 0, 6, 4, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.115815}
{'[6, 6, 1, 5, 0, 1, 0, 0, 6, 4, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.115713}
{'[6, 6, 1, 5, 0, 1, 0, 0, 6, 4, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.115706}

out:
 ["{'[6, 6, 1, 5, 0, 1, 0, 0, 6, 4, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.115757}", "{'[6, 6, 1, 5, 0, 1, 0, 0, 6, 4, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.116137}", "{'[6, 6, 1, 5, 0, 1, 0, 0, 6, 4, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.115701}", "{'[6, 6, 1, 5, 0, 1, 0, 0, 6, 4, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.115697}", "{'[6, 6, 1, 5, 0, 1, 0, 0, 6, 4, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.114501}", "{'[6, 6, 1, 5, 0, 1, 0, 0, 6, 4, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.112277}", "{'[6, 6, 1, 5, 0, 1, 0, 0, 6, 4, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.114943}", "{'[6, 6, 1, 5, 0, 1, 0, 0, 6, 4, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.115693}", "{'[6, 6, 1, 5, 0, 1, 0, 0, 6, 4, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.115699}", "{'[6, 6, 1, 5, 0, 1, 0, 0, 6, 4, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.115725}", "{'[6, 6, 1, 5, 0, 1, 0, 0, 6, 4, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.115705}", "{'[6, 6, 1, 5, 0, 1, 0, 0, 6, 4, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.115715}", "{'[6, 6, 1, 5, 0, 1, 0, 0, 6, 4, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.115702}", "{'[6, 6, 1, 5, 0, 1, 0, 0, 6, 4, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.115705}", "{'[6, 6, 1, 5, 0, 1, 0, 0, 6, 4, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.115752}", "{'[6, 6, 1, 5, 0, 1, 0, 0, 6, 4, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.115702}", "{'[6, 6, 1, 5, 0, 1, 0, 0, 6, 4, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.115673}", "{'[6, 6, 1, 5, 0, 1, 0, 0, 6, 4, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.115694}", "{'[6, 6, 1, 5, 0, 1, 0, 0, 6, 4, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.11573}", "{'[6, 6, 1, 5, 0, 1, 0, 0, 6, 4, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.11521}", "{'[6, 6, 1, 5, 0, 1, 0, 0, 6, 4, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.112195}", "{'[6, 6, 1, 5, 0, 1, 0, 0, 6, 4, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.112086}", "{'[6, 6, 1, 5, 0, 1, 0, 0, 6, 4, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.109223}", "{'[6, 6, 1, 5, 0, 1, 0, 0, 6, 4, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.111085}", "{'[6, 6, 1, 5, 0, 1, 0, 0, 6, 4, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.115693}", "{'[6, 6, 1, 5, 0, 1, 0, 0, 6, 4, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.115708}", "{'[6, 6, 1, 5, 0, 1, 0, 0, 6, 4, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.11569}", "{'[6, 6, 1, 5, 0, 1, 0, 0, 6, 4, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.115815}", "{'[6, 6, 1, 5, 0, 1, 0, 0, 6, 4, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.115713}", "{'[6, 6, 1, 5, 0, 1, 0, 0, 6, 4, 0, 29, 0, 2, 0, 1, 1, 0]' : 0.115706}"]
returning from 'run': {'[6, 6, 1, 5, 0, 1, 0, 0, 6, 4, 0, 29, 0, 2, 0, 1, 1, 0]': ([0.115757, 0.116137, 0.115701, 0.115697, 0.114501, 0.112277, 0.114943, 0.115693, 0.115699, 0.115725, 0.115705, 0.115715, 0.115702, 0.115705, 0.115752, 0.115702, 0.115673, 0.115694, 0.11573, 0.11521, 0.112195, 0.112086, 0.109223, 0.111085, 0.115693, 0.115708, 0.11569, 0.115815, 0.115713, 0.115706], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 1, 5, 0, 1, 0, 0, 6, 4, 0, 29, 0, 2, 0, 1, 1, 0]': ([0.115757, 0.116137, 0.115701, 0.115697, 0.114501, 0.112277, 0.114943, 0.115693, 0.115699, 0.115725, 0.115705, 0.115715, 0.115702, 0.115705, 0.115752, 0.115702, 0.115673, 0.115694, 0.11573, 0.11521, 0.112195, 0.112086, 0.109223, 0.111085, 0.115693, 0.115708, 0.11569, 0.115815, 0.115713, 0.115706], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	4
        Additions: 		320
        Multiplications: 	116
        Divisions: 		0
        Logical: 		0
        Reads: 			842
        Writes: 		205
        Comparisons:		10
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest30.exe __orio_perftest30.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest30.exe  
Program Test Output: 
{'[2, 0, 6, 0, 4, 4, 0, 0, 3, 0, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.15212}
{'[2, 0, 6, 0, 4, 4, 0, 0, 3, 0, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.151952}
{'[2, 0, 6, 0, 4, 4, 0, 0, 3, 0, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.151989}
{'[2, 0, 6, 0, 4, 4, 0, 0, 3, 0, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.15183}
{'[2, 0, 6, 0, 4, 4, 0, 0, 3, 0, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.151828}
{'[2, 0, 6, 0, 4, 4, 0, 0, 3, 0, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.151889}
{'[2, 0, 6, 0, 4, 4, 0, 0, 3, 0, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.151806}
{'[2, 0, 6, 0, 4, 4, 0, 0, 3, 0, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.151814}
{'[2, 0, 6, 0, 4, 4, 0, 0, 3, 0, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.151937}
{'[2, 0, 6, 0, 4, 4, 0, 0, 3, 0, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.152064}
{'[2, 0, 6, 0, 4, 4, 0, 0, 3, 0, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.151791}
{'[2, 0, 6, 0, 4, 4, 0, 0, 3, 0, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.151919}
{'[2, 0, 6, 0, 4, 4, 0, 0, 3, 0, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.151876}
{'[2, 0, 6, 0, 4, 4, 0, 0, 3, 0, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.151842}
{'[2, 0, 6, 0, 4, 4, 0, 0, 3, 0, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.151915}
{'[2, 0, 6, 0, 4, 4, 0, 0, 3, 0, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.151833}
{'[2, 0, 6, 0, 4, 4, 0, 0, 3, 0, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.151968}
{'[2, 0, 6, 0, 4, 4, 0, 0, 3, 0, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.148473}
{'[2, 0, 6, 0, 4, 4, 0, 0, 3, 0, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.15067}
{'[2, 0, 6, 0, 4, 4, 0, 0, 3, 0, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.151949}
{'[2, 0, 6, 0, 4, 4, 0, 0, 3, 0, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.151945}
{'[2, 0, 6, 0, 4, 4, 0, 0, 3, 0, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.152375}
{'[2, 0, 6, 0, 4, 4, 0, 0, 3, 0, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.151954}
{'[2, 0, 6, 0, 4, 4, 0, 0, 3, 0, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.151942}
{'[2, 0, 6, 0, 4, 4, 0, 0, 3, 0, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.151952}
{'[2, 0, 6, 0, 4, 4, 0, 0, 3, 0, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.151813}
{'[2, 0, 6, 0, 4, 4, 0, 0, 3, 0, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.151898}
{'[2, 0, 6, 0, 4, 4, 0, 0, 3, 0, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.152235}
{'[2, 0, 6, 0, 4, 4, 0, 0, 3, 0, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.152032}
{'[2, 0, 6, 0, 4, 4, 0, 0, 3, 0, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.151894}

out:
 ["{'[2, 0, 6, 0, 4, 4, 0, 0, 3, 0, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.15212}", "{'[2, 0, 6, 0, 4, 4, 0, 0, 3, 0, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.151952}", "{'[2, 0, 6, 0, 4, 4, 0, 0, 3, 0, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.151989}", "{'[2, 0, 6, 0, 4, 4, 0, 0, 3, 0, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.15183}", "{'[2, 0, 6, 0, 4, 4, 0, 0, 3, 0, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.151828}", "{'[2, 0, 6, 0, 4, 4, 0, 0, 3, 0, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.151889}", "{'[2, 0, 6, 0, 4, 4, 0, 0, 3, 0, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.151806}", "{'[2, 0, 6, 0, 4, 4, 0, 0, 3, 0, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.151814}", "{'[2, 0, 6, 0, 4, 4, 0, 0, 3, 0, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.151937}", "{'[2, 0, 6, 0, 4, 4, 0, 0, 3, 0, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.152064}", "{'[2, 0, 6, 0, 4, 4, 0, 0, 3, 0, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.151791}", "{'[2, 0, 6, 0, 4, 4, 0, 0, 3, 0, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.151919}", "{'[2, 0, 6, 0, 4, 4, 0, 0, 3, 0, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.151876}", "{'[2, 0, 6, 0, 4, 4, 0, 0, 3, 0, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.151842}", "{'[2, 0, 6, 0, 4, 4, 0, 0, 3, 0, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.151915}", "{'[2, 0, 6, 0, 4, 4, 0, 0, 3, 0, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.151833}", "{'[2, 0, 6, 0, 4, 4, 0, 0, 3, 0, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.151968}", "{'[2, 0, 6, 0, 4, 4, 0, 0, 3, 0, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.148473}", "{'[2, 0, 6, 0, 4, 4, 0, 0, 3, 0, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.15067}", "{'[2, 0, 6, 0, 4, 4, 0, 0, 3, 0, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.151949}", "{'[2, 0, 6, 0, 4, 4, 0, 0, 3, 0, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.151945}", "{'[2, 0, 6, 0, 4, 4, 0, 0, 3, 0, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.152375}", "{'[2, 0, 6, 0, 4, 4, 0, 0, 3, 0, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.151954}", "{'[2, 0, 6, 0, 4, 4, 0, 0, 3, 0, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.151942}", "{'[2, 0, 6, 0, 4, 4, 0, 0, 3, 0, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.151952}", "{'[2, 0, 6, 0, 4, 4, 0, 0, 3, 0, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.151813}", "{'[2, 0, 6, 0, 4, 4, 0, 0, 3, 0, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.151898}", "{'[2, 0, 6, 0, 4, 4, 0, 0, 3, 0, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.152235}", "{'[2, 0, 6, 0, 4, 4, 0, 0, 3, 0, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.152032}", "{'[2, 0, 6, 0, 4, 4, 0, 0, 3, 0, 0, 23, 0, 0, 2, 1, 0, 1]' : 0.151894}"]
returning from 'run': {'[2, 0, 6, 0, 4, 4, 0, 0, 3, 0, 0, 23, 0, 0, 2, 1, 0, 1]': ([0.15212, 0.151952, 0.151989, 0.15183, 0.151828, 0.151889, 0.151806, 0.151814, 0.151937, 0.152064, 0.151791, 0.151919, 0.151876, 0.151842, 0.151915, 0.151833, 0.151968, 0.148473, 0.15067, 0.151949, 0.151945, 0.152375, 0.151954, 0.151942, 0.151952, 0.151813, 0.151898, 0.152235, 0.152032, 0.151894], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 0, 6, 0, 4, 4, 0, 0, 3, 0, 0, 23, 0, 0, 2, 1, 0, 1]': ([0.15212, 0.151952, 0.151989, 0.15183, 0.151828, 0.151889, 0.151806, 0.151814, 0.151937, 0.152064, 0.151791, 0.151919, 0.151876, 0.151842, 0.151915, 0.151833, 0.151968, 0.148473, 0.15067, 0.151949, 0.151945, 0.152375, 0.151954, 0.151942, 0.151952, 0.151813, 0.151898, 0.152235, 0.152032, 0.151894], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	4
        Additions: 		284
        Multiplications: 	96
        Divisions: 		0
        Logical: 		0
        Reads: 			618
        Writes: 		102
        Comparisons:		10
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest31.exe __orio_perftest31.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest31.exe  
Program Test Output: 
{'[0, 6, 2, 4, 0, 0, 0, 0, 28, 0, 20, 24, 0, 0, 0, 0, 1, 0]' : 0.238678}
{'[0, 6, 2, 4, 0, 0, 0, 0, 28, 0, 20, 24, 0, 0, 0, 0, 1, 0]' : 0.238328}
{'[0, 6, 2, 4, 0, 0, 0, 0, 28, 0, 20, 24, 0, 0, 0, 0, 1, 0]' : 0.203271}
{'[0, 6, 2, 4, 0, 0, 0, 0, 28, 0, 20, 24, 0, 0, 0, 0, 1, 0]' : 0.200063}
{'[0, 6, 2, 4, 0, 0, 0, 0, 28, 0, 20, 24, 0, 0, 0, 0, 1, 0]' : 0.199842}
{'[0, 6, 2, 4, 0, 0, 0, 0, 28, 0, 20, 24, 0, 0, 0, 0, 1, 0]' : 0.199861}
{'[0, 6, 2, 4, 0, 0, 0, 0, 28, 0, 20, 24, 0, 0, 0, 0, 1, 0]' : 0.200941}
{'[0, 6, 2, 4, 0, 0, 0, 0, 28, 0, 20, 24, 0, 0, 0, 0, 1, 0]' : 0.199867}
{'[0, 6, 2, 4, 0, 0, 0, 0, 28, 0, 20, 24, 0, 0, 0, 0, 1, 0]' : 0.199852}
{'[0, 6, 2, 4, 0, 0, 0, 0, 28, 0, 20, 24, 0, 0, 0, 0, 1, 0]' : 0.199894}
{'[0, 6, 2, 4, 0, 0, 0, 0, 28, 0, 20, 24, 0, 0, 0, 0, 1, 0]' : 0.200099}
{'[0, 6, 2, 4, 0, 0, 0, 0, 28, 0, 20, 24, 0, 0, 0, 0, 1, 0]' : 0.199834}
{'[0, 6, 2, 4, 0, 0, 0, 0, 28, 0, 20, 24, 0, 0, 0, 0, 1, 0]' : 0.199868}
{'[0, 6, 2, 4, 0, 0, 0, 0, 28, 0, 20, 24, 0, 0, 0, 0, 1, 0]' : 0.199866}
{'[0, 6, 2, 4, 0, 0, 0, 0, 28, 0, 20, 24, 0, 0, 0, 0, 1, 0]' : 0.200436}
{'[0, 6, 2, 4, 0, 0, 0, 0, 28, 0, 20, 24, 0, 0, 0, 0, 1, 0]' : 0.199829}
{'[0, 6, 2, 4, 0, 0, 0, 0, 28, 0, 20, 24, 0, 0, 0, 0, 1, 0]' : 0.19989}
{'[0, 6, 2, 4, 0, 0, 0, 0, 28, 0, 20, 24, 0, 0, 0, 0, 1, 0]' : 0.199889}
{'[0, 6, 2, 4, 0, 0, 0, 0, 28, 0, 20, 24, 0, 0, 0, 0, 1, 0]' : 0.200067}
{'[0, 6, 2, 4, 0, 0, 0, 0, 28, 0, 20, 24, 0, 0, 0, 0, 1, 0]' : 0.199862}
{'[0, 6, 2, 4, 0, 0, 0, 0, 28, 0, 20, 24, 0, 0, 0, 0, 1, 0]' : 0.200044}
{'[0, 6, 2, 4, 0, 0, 0, 0, 28, 0, 20, 24, 0, 0, 0, 0, 1, 0]' : 0.20077}
{'[0, 6, 2, 4, 0, 0, 0, 0, 28, 0, 20, 24, 0, 0, 0, 0, 1, 0]' : 0.199917}
{'[0, 6, 2, 4, 0, 0, 0, 0, 28, 0, 20, 24, 0, 0, 0, 0, 1, 0]' : 0.200158}
{'[0, 6, 2, 4, 0, 0, 0, 0, 28, 0, 20, 24, 0, 0, 0, 0, 1, 0]' : 0.199861}
{'[0, 6, 2, 4, 0, 0, 0, 0, 28, 0, 20, 24, 0, 0, 0, 0, 1, 0]' : 0.199882}
{'[0, 6, 2, 4, 0, 0, 0, 0, 28, 0, 20, 24, 0, 0, 0, 0, 1, 0]' : 0.199953}
{'[0, 6, 2, 4, 0, 0, 0, 0, 28, 0, 20, 24, 0, 0, 0, 0, 1, 0]' : 0.199912}
{'[0, 6, 2, 4, 0, 0, 0, 0, 28, 0, 20, 24, 0, 0, 0, 0, 1, 0]' : 0.19983}
{'[0, 6, 2, 4, 0, 0, 0, 0, 28, 0, 20, 24, 0, 0, 0, 0, 1, 0]' : 0.200621}

out:
 ["{'[0, 6, 2, 4, 0, 0, 0, 0, 28, 0, 20, 24, 0, 0, 0, 0, 1, 0]' : 0.238678}", "{'[0, 6, 2, 4, 0, 0, 0, 0, 28, 0, 20, 24, 0, 0, 0, 0, 1, 0]' : 0.238328}", "{'[0, 6, 2, 4, 0, 0, 0, 0, 28, 0, 20, 24, 0, 0, 0, 0, 1, 0]' : 0.203271}", "{'[0, 6, 2, 4, 0, 0, 0, 0, 28, 0, 20, 24, 0, 0, 0, 0, 1, 0]' : 0.200063}", "{'[0, 6, 2, 4, 0, 0, 0, 0, 28, 0, 20, 24, 0, 0, 0, 0, 1, 0]' : 0.199842}", "{'[0, 6, 2, 4, 0, 0, 0, 0, 28, 0, 20, 24, 0, 0, 0, 0, 1, 0]' : 0.199861}", "{'[0, 6, 2, 4, 0, 0, 0, 0, 28, 0, 20, 24, 0, 0, 0, 0, 1, 0]' : 0.200941}", "{'[0, 6, 2, 4, 0, 0, 0, 0, 28, 0, 20, 24, 0, 0, 0, 0, 1, 0]' : 0.199867}", "{'[0, 6, 2, 4, 0, 0, 0, 0, 28, 0, 20, 24, 0, 0, 0, 0, 1, 0]' : 0.199852}", "{'[0, 6, 2, 4, 0, 0, 0, 0, 28, 0, 20, 24, 0, 0, 0, 0, 1, 0]' : 0.199894}", "{'[0, 6, 2, 4, 0, 0, 0, 0, 28, 0, 20, 24, 0, 0, 0, 0, 1, 0]' : 0.200099}", "{'[0, 6, 2, 4, 0, 0, 0, 0, 28, 0, 20, 24, 0, 0, 0, 0, 1, 0]' : 0.199834}", "{'[0, 6, 2, 4, 0, 0, 0, 0, 28, 0, 20, 24, 0, 0, 0, 0, 1, 0]' : 0.199868}", "{'[0, 6, 2, 4, 0, 0, 0, 0, 28, 0, 20, 24, 0, 0, 0, 0, 1, 0]' : 0.199866}", "{'[0, 6, 2, 4, 0, 0, 0, 0, 28, 0, 20, 24, 0, 0, 0, 0, 1, 0]' : 0.200436}", "{'[0, 6, 2, 4, 0, 0, 0, 0, 28, 0, 20, 24, 0, 0, 0, 0, 1, 0]' : 0.199829}", "{'[0, 6, 2, 4, 0, 0, 0, 0, 28, 0, 20, 24, 0, 0, 0, 0, 1, 0]' : 0.19989}", "{'[0, 6, 2, 4, 0, 0, 0, 0, 28, 0, 20, 24, 0, 0, 0, 0, 1, 0]' : 0.199889}", "{'[0, 6, 2, 4, 0, 0, 0, 0, 28, 0, 20, 24, 0, 0, 0, 0, 1, 0]' : 0.200067}", "{'[0, 6, 2, 4, 0, 0, 0, 0, 28, 0, 20, 24, 0, 0, 0, 0, 1, 0]' : 0.199862}", "{'[0, 6, 2, 4, 0, 0, 0, 0, 28, 0, 20, 24, 0, 0, 0, 0, 1, 0]' : 0.200044}", "{'[0, 6, 2, 4, 0, 0, 0, 0, 28, 0, 20, 24, 0, 0, 0, 0, 1, 0]' : 0.20077}", "{'[0, 6, 2, 4, 0, 0, 0, 0, 28, 0, 20, 24, 0, 0, 0, 0, 1, 0]' : 0.199917}", "{'[0, 6, 2, 4, 0, 0, 0, 0, 28, 0, 20, 24, 0, 0, 0, 0, 1, 0]' : 0.200158}", "{'[0, 6, 2, 4, 0, 0, 0, 0, 28, 0, 20, 24, 0, 0, 0, 0, 1, 0]' : 0.199861}", "{'[0, 6, 2, 4, 0, 0, 0, 0, 28, 0, 20, 24, 0, 0, 0, 0, 1, 0]' : 0.199882}", "{'[0, 6, 2, 4, 0, 0, 0, 0, 28, 0, 20, 24, 0, 0, 0, 0, 1, 0]' : 0.199953}", "{'[0, 6, 2, 4, 0, 0, 0, 0, 28, 0, 20, 24, 0, 0, 0, 0, 1, 0]' : 0.199912}", "{'[0, 6, 2, 4, 0, 0, 0, 0, 28, 0, 20, 24, 0, 0, 0, 0, 1, 0]' : 0.19983}", "{'[0, 6, 2, 4, 0, 0, 0, 0, 28, 0, 20, 24, 0, 0, 0, 0, 1, 0]' : 0.200621}"]
returning from 'run': {'[0, 6, 2, 4, 0, 0, 0, 0, 28, 0, 20, 24, 0, 0, 0, 0, 1, 0]': ([0.238678, 0.238328, 0.203271, 0.200063, 0.199842, 0.199861, 0.200941, 0.199867, 0.199852, 0.199894, 0.200099, 0.199834, 0.199868, 0.199866, 0.200436, 0.199829, 0.19989, 0.199889, 0.200067, 0.199862, 0.200044, 0.20077, 0.199917, 0.200158, 0.199861, 0.199882, 0.199953, 0.199912, 0.19983, 0.200621], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 2, 4, 0, 0, 0, 0, 28, 0, 20, 24, 0, 0, 0, 0, 1, 0]': ([0.238678, 0.238328, 0.203271, 0.200063, 0.199842, 0.199861, 0.200941, 0.199867, 0.199852, 0.199894, 0.200099, 0.199834, 0.199868, 0.199866, 0.200436, 0.199829, 0.19989, 0.199889, 0.200067, 0.199862, 0.200044, 0.20077, 0.199917, 0.200158, 0.199861, 0.199882, 0.199953, 0.199912, 0.19983, 0.200621], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = jjj
Code stats:
        Number of loops: 	169
        Max loop nest depth: 	6
        Additions: 		2206
        Multiplications: 	518
        Divisions: 		0
        Logical: 		0
        Reads: 			4258
        Writes: 		831
        Comparisons:		169
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest32.exe __orio_perftest32.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest32.exe  
Program Test Output: 
{'[2, 4, 6, 5, 2, 5, 1, 1, 26, 27, 4, 0, 1, 0, 0, 1, 0, 0]' : 0.0992792}
{'[2, 4, 6, 5, 2, 5, 1, 1, 26, 27, 4, 0, 1, 0, 0, 1, 0, 0]' : 0.0991051}
{'[2, 4, 6, 5, 2, 5, 1, 1, 26, 27, 4, 0, 1, 0, 0, 1, 0, 0]' : 0.099016}
{'[2, 4, 6, 5, 2, 5, 1, 1, 26, 27, 4, 0, 1, 0, 0, 1, 0, 0]' : 0.0990951}
{'[2, 4, 6, 5, 2, 5, 1, 1, 26, 27, 4, 0, 1, 0, 0, 1, 0, 0]' : 0.0990961}
{'[2, 4, 6, 5, 2, 5, 1, 1, 26, 27, 4, 0, 1, 0, 0, 1, 0, 0]' : 0.09901}
{'[2, 4, 6, 5, 2, 5, 1, 1, 26, 27, 4, 0, 1, 0, 0, 1, 0, 0]' : 0.0989299}
{'[2, 4, 6, 5, 2, 5, 1, 1, 26, 27, 4, 0, 1, 0, 0, 1, 0, 0]' : 0.098974}
{'[2, 4, 6, 5, 2, 5, 1, 1, 26, 27, 4, 0, 1, 0, 0, 1, 0, 0]' : 0.0989888}
{'[2, 4, 6, 5, 2, 5, 1, 1, 26, 27, 4, 0, 1, 0, 0, 1, 0, 0]' : 0.099288}
{'[2, 4, 6, 5, 2, 5, 1, 1, 26, 27, 4, 0, 1, 0, 0, 1, 0, 0]' : 0.098052}
{'[2, 4, 6, 5, 2, 5, 1, 1, 26, 27, 4, 0, 1, 0, 0, 1, 0, 0]' : 0.096976}
{'[2, 4, 6, 5, 2, 5, 1, 1, 26, 27, 4, 0, 1, 0, 0, 1, 0, 0]' : 0.09675}
{'[2, 4, 6, 5, 2, 5, 1, 1, 26, 27, 4, 0, 1, 0, 0, 1, 0, 0]' : 0.096766}
{'[2, 4, 6, 5, 2, 5, 1, 1, 26, 27, 4, 0, 1, 0, 0, 1, 0, 0]' : 0.0967469}
{'[2, 4, 6, 5, 2, 5, 1, 1, 26, 27, 4, 0, 1, 0, 0, 1, 0, 0]' : 0.0989809}
{'[2, 4, 6, 5, 2, 5, 1, 1, 26, 27, 4, 0, 1, 0, 0, 1, 0, 0]' : 0.0991559}
{'[2, 4, 6, 5, 2, 5, 1, 1, 26, 27, 4, 0, 1, 0, 0, 1, 0, 0]' : 0.098947}
{'[2, 4, 6, 5, 2, 5, 1, 1, 26, 27, 4, 0, 1, 0, 0, 1, 0, 0]' : 0.099123}
{'[2, 4, 6, 5, 2, 5, 1, 1, 26, 27, 4, 0, 1, 0, 0, 1, 0, 0]' : 0.0989711}
{'[2, 4, 6, 5, 2, 5, 1, 1, 26, 27, 4, 0, 1, 0, 0, 1, 0, 0]' : 0.0994101}
{'[2, 4, 6, 5, 2, 5, 1, 1, 26, 27, 4, 0, 1, 0, 0, 1, 0, 0]' : 0.0992992}
{'[2, 4, 6, 5, 2, 5, 1, 1, 26, 27, 4, 0, 1, 0, 0, 1, 0, 0]' : 0.0991831}
{'[2, 4, 6, 5, 2, 5, 1, 1, 26, 27, 4, 0, 1, 0, 0, 1, 0, 0]' : 0.09812}
{'[2, 4, 6, 5, 2, 5, 1, 1, 26, 27, 4, 0, 1, 0, 0, 1, 0, 0]' : 0.09689}
{'[2, 4, 6, 5, 2, 5, 1, 1, 26, 27, 4, 0, 1, 0, 0, 1, 0, 0]' : 0.098737}
{'[2, 4, 6, 5, 2, 5, 1, 1, 26, 27, 4, 0, 1, 0, 0, 1, 0, 0]' : 0.099014}
{'[2, 4, 6, 5, 2, 5, 1, 1, 26, 27, 4, 0, 1, 0, 0, 1, 0, 0]' : 0.0990081}
{'[2, 4, 6, 5, 2, 5, 1, 1, 26, 27, 4, 0, 1, 0, 0, 1, 0, 0]' : 0.099098}
{'[2, 4, 6, 5, 2, 5, 1, 1, 26, 27, 4, 0, 1, 0, 0, 1, 0, 0]' : 0.0989928}

out:
 ["{'[2, 4, 6, 5, 2, 5, 1, 1, 26, 27, 4, 0, 1, 0, 0, 1, 0, 0]' : 0.0992792}", "{'[2, 4, 6, 5, 2, 5, 1, 1, 26, 27, 4, 0, 1, 0, 0, 1, 0, 0]' : 0.0991051}", "{'[2, 4, 6, 5, 2, 5, 1, 1, 26, 27, 4, 0, 1, 0, 0, 1, 0, 0]' : 0.099016}", "{'[2, 4, 6, 5, 2, 5, 1, 1, 26, 27, 4, 0, 1, 0, 0, 1, 0, 0]' : 0.0990951}", "{'[2, 4, 6, 5, 2, 5, 1, 1, 26, 27, 4, 0, 1, 0, 0, 1, 0, 0]' : 0.0990961}", "{'[2, 4, 6, 5, 2, 5, 1, 1, 26, 27, 4, 0, 1, 0, 0, 1, 0, 0]' : 0.09901}", "{'[2, 4, 6, 5, 2, 5, 1, 1, 26, 27, 4, 0, 1, 0, 0, 1, 0, 0]' : 0.0989299}", "{'[2, 4, 6, 5, 2, 5, 1, 1, 26, 27, 4, 0, 1, 0, 0, 1, 0, 0]' : 0.098974}", "{'[2, 4, 6, 5, 2, 5, 1, 1, 26, 27, 4, 0, 1, 0, 0, 1, 0, 0]' : 0.0989888}", "{'[2, 4, 6, 5, 2, 5, 1, 1, 26, 27, 4, 0, 1, 0, 0, 1, 0, 0]' : 0.099288}", "{'[2, 4, 6, 5, 2, 5, 1, 1, 26, 27, 4, 0, 1, 0, 0, 1, 0, 0]' : 0.098052}", "{'[2, 4, 6, 5, 2, 5, 1, 1, 26, 27, 4, 0, 1, 0, 0, 1, 0, 0]' : 0.096976}", "{'[2, 4, 6, 5, 2, 5, 1, 1, 26, 27, 4, 0, 1, 0, 0, 1, 0, 0]' : 0.09675}", "{'[2, 4, 6, 5, 2, 5, 1, 1, 26, 27, 4, 0, 1, 0, 0, 1, 0, 0]' : 0.096766}", "{'[2, 4, 6, 5, 2, 5, 1, 1, 26, 27, 4, 0, 1, 0, 0, 1, 0, 0]' : 0.0967469}", "{'[2, 4, 6, 5, 2, 5, 1, 1, 26, 27, 4, 0, 1, 0, 0, 1, 0, 0]' : 0.0989809}", "{'[2, 4, 6, 5, 2, 5, 1, 1, 26, 27, 4, 0, 1, 0, 0, 1, 0, 0]' : 0.0991559}", "{'[2, 4, 6, 5, 2, 5, 1, 1, 26, 27, 4, 0, 1, 0, 0, 1, 0, 0]' : 0.098947}", "{'[2, 4, 6, 5, 2, 5, 1, 1, 26, 27, 4, 0, 1, 0, 0, 1, 0, 0]' : 0.099123}", "{'[2, 4, 6, 5, 2, 5, 1, 1, 26, 27, 4, 0, 1, 0, 0, 1, 0, 0]' : 0.0989711}", "{'[2, 4, 6, 5, 2, 5, 1, 1, 26, 27, 4, 0, 1, 0, 0, 1, 0, 0]' : 0.0994101}", "{'[2, 4, 6, 5, 2, 5, 1, 1, 26, 27, 4, 0, 1, 0, 0, 1, 0, 0]' : 0.0992992}", "{'[2, 4, 6, 5, 2, 5, 1, 1, 26, 27, 4, 0, 1, 0, 0, 1, 0, 0]' : 0.0991831}", "{'[2, 4, 6, 5, 2, 5, 1, 1, 26, 27, 4, 0, 1, 0, 0, 1, 0, 0]' : 0.09812}", "{'[2, 4, 6, 5, 2, 5, 1, 1, 26, 27, 4, 0, 1, 0, 0, 1, 0, 0]' : 0.09689}", "{'[2, 4, 6, 5, 2, 5, 1, 1, 26, 27, 4, 0, 1, 0, 0, 1, 0, 0]' : 0.098737}", "{'[2, 4, 6, 5, 2, 5, 1, 1, 26, 27, 4, 0, 1, 0, 0, 1, 0, 0]' : 0.099014}", "{'[2, 4, 6, 5, 2, 5, 1, 1, 26, 27, 4, 0, 1, 0, 0, 1, 0, 0]' : 0.0990081}", "{'[2, 4, 6, 5, 2, 5, 1, 1, 26, 27, 4, 0, 1, 0, 0, 1, 0, 0]' : 0.099098}", "{'[2, 4, 6, 5, 2, 5, 1, 1, 26, 27, 4, 0, 1, 0, 0, 1, 0, 0]' : 0.0989928}"]
returning from 'run': {'[2, 4, 6, 5, 2, 5, 1, 1, 26, 27, 4, 0, 1, 0, 0, 1, 0, 0]': ([0.0992792, 0.0991051, 0.099016, 0.0990951, 0.0990961, 0.09901, 0.0989299, 0.098974, 0.0989888, 0.099288, 0.098052, 0.096976, 0.09675, 0.096766, 0.0967469, 0.0989809, 0.0991559, 0.098947, 0.099123, 0.0989711, 0.0994101, 0.0992992, 0.0991831, 0.09812, 0.09689, 0.098737, 0.099014, 0.0990081, 0.099098, 0.0989928], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 4, 6, 5, 2, 5, 1, 1, 26, 27, 4, 0, 1, 0, 0, 1, 0, 0]': ([0.0992792, 0.0991051, 0.099016, 0.0990951, 0.0990961, 0.09901, 0.0989299, 0.098974, 0.0989888, 0.099288, 0.098052, 0.096976, 0.09675, 0.096766, 0.0967469, 0.0989809, 0.0991559, 0.098947, 0.099123, 0.0989711, 0.0994101, 0.0992992, 0.0991831, 0.09812, 0.09689, 0.098737, 0.099014, 0.0990081, 0.099098, 0.0989928], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	38
        Max loop nest depth: 	6
        Additions: 		233
        Multiplications: 	44
        Divisions: 		0
        Logical: 		0
        Reads: 			643
        Writes: 		170
        Comparisons:		38
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest33.exe __orio_perftest33.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest33.exe  
Program Test Output: 
{'[1, 5, 4, 6, 6, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 1, 0]' : 0.19926}
{'[1, 5, 4, 6, 6, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 1, 0]' : 0.198893}
{'[1, 5, 4, 6, 6, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 1, 0]' : 0.176635}
{'[1, 5, 4, 6, 6, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 1, 0]' : 0.174705}
{'[1, 5, 4, 6, 6, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 1, 0]' : 0.174554}
{'[1, 5, 4, 6, 6, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 1, 0]' : 0.17509}
{'[1, 5, 4, 6, 6, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 1, 0]' : 0.174638}
{'[1, 5, 4, 6, 6, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 1, 0]' : 0.174582}
{'[1, 5, 4, 6, 6, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 1, 0]' : 0.174637}
{'[1, 5, 4, 6, 6, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 1, 0]' : 0.174594}
{'[1, 5, 4, 6, 6, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 1, 0]' : 0.171362}
{'[1, 5, 4, 6, 6, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 1, 0]' : 0.173655}
{'[1, 5, 4, 6, 6, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 1, 0]' : 0.174793}
{'[1, 5, 4, 6, 6, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 1, 0]' : 0.174677}
{'[1, 5, 4, 6, 6, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 1, 0]' : 0.17494}
{'[1, 5, 4, 6, 6, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 1, 0]' : 0.174579}
{'[1, 5, 4, 6, 6, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 1, 0]' : 0.174692}
{'[1, 5, 4, 6, 6, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 1, 0]' : 0.174659}
{'[1, 5, 4, 6, 6, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 1, 0]' : 0.175073}
{'[1, 5, 4, 6, 6, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 1, 0]' : 0.174947}
{'[1, 5, 4, 6, 6, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 1, 0]' : 0.174524}
{'[1, 5, 4, 6, 6, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 1, 0]' : 0.174547}
{'[1, 5, 4, 6, 6, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 1, 0]' : 0.174608}
{'[1, 5, 4, 6, 6, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 1, 0]' : 0.174526}
{'[1, 5, 4, 6, 6, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 1, 0]' : 0.175021}
{'[1, 5, 4, 6, 6, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 1, 0]' : 0.175193}
{'[1, 5, 4, 6, 6, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 1, 0]' : 0.174625}
{'[1, 5, 4, 6, 6, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 1, 0]' : 0.174587}
{'[1, 5, 4, 6, 6, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 1, 0]' : 0.174762}
{'[1, 5, 4, 6, 6, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 1, 0]' : 0.174471}

out:
 ["{'[1, 5, 4, 6, 6, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 1, 0]' : 0.19926}", "{'[1, 5, 4, 6, 6, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 1, 0]' : 0.198893}", "{'[1, 5, 4, 6, 6, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 1, 0]' : 0.176635}", "{'[1, 5, 4, 6, 6, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 1, 0]' : 0.174705}", "{'[1, 5, 4, 6, 6, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 1, 0]' : 0.174554}", "{'[1, 5, 4, 6, 6, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 1, 0]' : 0.17509}", "{'[1, 5, 4, 6, 6, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 1, 0]' : 0.174638}", "{'[1, 5, 4, 6, 6, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 1, 0]' : 0.174582}", "{'[1, 5, 4, 6, 6, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 1, 0]' : 0.174637}", "{'[1, 5, 4, 6, 6, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 1, 0]' : 0.174594}", "{'[1, 5, 4, 6, 6, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 1, 0]' : 0.171362}", "{'[1, 5, 4, 6, 6, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 1, 0]' : 0.173655}", "{'[1, 5, 4, 6, 6, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 1, 0]' : 0.174793}", "{'[1, 5, 4, 6, 6, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 1, 0]' : 0.174677}", "{'[1, 5, 4, 6, 6, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 1, 0]' : 0.17494}", "{'[1, 5, 4, 6, 6, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 1, 0]' : 0.174579}", "{'[1, 5, 4, 6, 6, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 1, 0]' : 0.174692}", "{'[1, 5, 4, 6, 6, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 1, 0]' : 0.174659}", "{'[1, 5, 4, 6, 6, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 1, 0]' : 0.175073}", "{'[1, 5, 4, 6, 6, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 1, 0]' : 0.174947}", "{'[1, 5, 4, 6, 6, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 1, 0]' : 0.174524}", "{'[1, 5, 4, 6, 6, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 1, 0]' : 0.174547}", "{'[1, 5, 4, 6, 6, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 1, 0]' : 0.174608}", "{'[1, 5, 4, 6, 6, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 1, 0]' : 0.174526}", "{'[1, 5, 4, 6, 6, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 1, 0]' : 0.175021}", "{'[1, 5, 4, 6, 6, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 1, 0]' : 0.175193}", "{'[1, 5, 4, 6, 6, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 1, 0]' : 0.174625}", "{'[1, 5, 4, 6, 6, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 1, 0]' : 0.174587}", "{'[1, 5, 4, 6, 6, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 1, 0]' : 0.174762}", "{'[1, 5, 4, 6, 6, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 1, 0]' : 0.174471}"]
returning from 'run': {'[1, 5, 4, 6, 6, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 1, 0]': ([0.19926, 0.198893, 0.176635, 0.174705, 0.174554, 0.17509, 0.174638, 0.174582, 0.174637, 0.174594, 0.171362, 0.173655, 0.174793, 0.174677, 0.17494, 0.174579, 0.174692, 0.174659, 0.175073, 0.174947, 0.174524, 0.174547, 0.174608, 0.174526, 0.175021, 0.175193, 0.174625, 0.174587, 0.174762, 0.174471], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 5, 4, 6, 6, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 1, 0]': ([0.19926, 0.198893, 0.176635, 0.174705, 0.174554, 0.17509, 0.174638, 0.174582, 0.174637, 0.174594, 0.171362, 0.173655, 0.174793, 0.174677, 0.17494, 0.174579, 0.174692, 0.174659, 0.175073, 0.174947, 0.174524, 0.174547, 0.174608, 0.174526, 0.175021, 0.175193, 0.174625, 0.174587, 0.174762, 0.174471], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	5
        Additions: 		250
        Multiplications: 	76
        Divisions: 		0
        Logical: 		0
        Reads: 			622
        Writes: 		163
        Comparisons:		10
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest34.exe __orio_perftest34.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest34.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest34.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest34.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest34.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	122
        Max loop nest depth: 	5
        Additions: 		3295
        Multiplications: 	672
        Divisions: 		0
        Logical: 		0
        Reads: 			5339
        Writes: 		732
        Comparisons:		122
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest35.exe __orio_perftest35.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest35.exe  
Program Test Output: 
{'[6, 6, 5, 0, 0, 5, 1, 1, 0, 18, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.120375}
{'[6, 6, 5, 0, 0, 5, 1, 1, 0, 18, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.120343}
{'[6, 6, 5, 0, 0, 5, 1, 1, 0, 18, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.120264}
{'[6, 6, 5, 0, 0, 5, 1, 1, 0, 18, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.118815}
{'[6, 6, 5, 0, 0, 5, 1, 1, 0, 18, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.115133}
{'[6, 6, 5, 0, 0, 5, 1, 1, 0, 18, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.116245}
{'[6, 6, 5, 0, 0, 5, 1, 1, 0, 18, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.1158}
{'[6, 6, 5, 0, 0, 5, 1, 1, 0, 18, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.113749}
{'[6, 6, 5, 0, 0, 5, 1, 1, 0, 18, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.11372}
{'[6, 6, 5, 0, 0, 5, 1, 1, 0, 18, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.113803}
{'[6, 6, 5, 0, 0, 5, 1, 1, 0, 18, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.113641}
{'[6, 6, 5, 0, 0, 5, 1, 1, 0, 18, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.117747}
{'[6, 6, 5, 0, 0, 5, 1, 1, 0, 18, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.113337}
{'[6, 6, 5, 0, 0, 5, 1, 1, 0, 18, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.11328}
{'[6, 6, 5, 0, 0, 5, 1, 1, 0, 18, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.113143}
{'[6, 6, 5, 0, 0, 5, 1, 1, 0, 18, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.113335}
{'[6, 6, 5, 0, 0, 5, 1, 1, 0, 18, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.111307}
{'[6, 6, 5, 0, 0, 5, 1, 1, 0, 18, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.113196}
{'[6, 6, 5, 0, 0, 5, 1, 1, 0, 18, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.113337}
{'[6, 6, 5, 0, 0, 5, 1, 1, 0, 18, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.113463}
{'[6, 6, 5, 0, 0, 5, 1, 1, 0, 18, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.113344}
{'[6, 6, 5, 0, 0, 5, 1, 1, 0, 18, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.113455}
{'[6, 6, 5, 0, 0, 5, 1, 1, 0, 18, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.113385}
{'[6, 6, 5, 0, 0, 5, 1, 1, 0, 18, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.113306}
{'[6, 6, 5, 0, 0, 5, 1, 1, 0, 18, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.115594}
{'[6, 6, 5, 0, 0, 5, 1, 1, 0, 18, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.115534}
{'[6, 6, 5, 0, 0, 5, 1, 1, 0, 18, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.116445}
{'[6, 6, 5, 0, 0, 5, 1, 1, 0, 18, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.116218}
{'[6, 6, 5, 0, 0, 5, 1, 1, 0, 18, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.113856}
{'[6, 6, 5, 0, 0, 5, 1, 1, 0, 18, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.113431}

out:
 ["{'[6, 6, 5, 0, 0, 5, 1, 1, 0, 18, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.120375}", "{'[6, 6, 5, 0, 0, 5, 1, 1, 0, 18, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.120343}", "{'[6, 6, 5, 0, 0, 5, 1, 1, 0, 18, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.120264}", "{'[6, 6, 5, 0, 0, 5, 1, 1, 0, 18, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.118815}", "{'[6, 6, 5, 0, 0, 5, 1, 1, 0, 18, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.115133}", "{'[6, 6, 5, 0, 0, 5, 1, 1, 0, 18, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.116245}", "{'[6, 6, 5, 0, 0, 5, 1, 1, 0, 18, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.1158}", "{'[6, 6, 5, 0, 0, 5, 1, 1, 0, 18, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.113749}", "{'[6, 6, 5, 0, 0, 5, 1, 1, 0, 18, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.11372}", "{'[6, 6, 5, 0, 0, 5, 1, 1, 0, 18, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.113803}", "{'[6, 6, 5, 0, 0, 5, 1, 1, 0, 18, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.113641}", "{'[6, 6, 5, 0, 0, 5, 1, 1, 0, 18, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.117747}", "{'[6, 6, 5, 0, 0, 5, 1, 1, 0, 18, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.113337}", "{'[6, 6, 5, 0, 0, 5, 1, 1, 0, 18, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.11328}", "{'[6, 6, 5, 0, 0, 5, 1, 1, 0, 18, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.113143}", "{'[6, 6, 5, 0, 0, 5, 1, 1, 0, 18, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.113335}", "{'[6, 6, 5, 0, 0, 5, 1, 1, 0, 18, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.111307}", "{'[6, 6, 5, 0, 0, 5, 1, 1, 0, 18, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.113196}", "{'[6, 6, 5, 0, 0, 5, 1, 1, 0, 18, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.113337}", "{'[6, 6, 5, 0, 0, 5, 1, 1, 0, 18, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.113463}", "{'[6, 6, 5, 0, 0, 5, 1, 1, 0, 18, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.113344}", "{'[6, 6, 5, 0, 0, 5, 1, 1, 0, 18, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.113455}", "{'[6, 6, 5, 0, 0, 5, 1, 1, 0, 18, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.113385}", "{'[6, 6, 5, 0, 0, 5, 1, 1, 0, 18, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.113306}", "{'[6, 6, 5, 0, 0, 5, 1, 1, 0, 18, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.115594}", "{'[6, 6, 5, 0, 0, 5, 1, 1, 0, 18, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.115534}", "{'[6, 6, 5, 0, 0, 5, 1, 1, 0, 18, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.116445}", "{'[6, 6, 5, 0, 0, 5, 1, 1, 0, 18, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.116218}", "{'[6, 6, 5, 0, 0, 5, 1, 1, 0, 18, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.113856}", "{'[6, 6, 5, 0, 0, 5, 1, 1, 0, 18, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.113431}"]
returning from 'run': {'[6, 6, 5, 0, 0, 5, 1, 1, 0, 18, 2, 0, 1, 0, 1, 0, 1, 1]': ([0.120375, 0.120343, 0.120264, 0.118815, 0.115133, 0.116245, 0.1158, 0.113749, 0.11372, 0.113803, 0.113641, 0.117747, 0.113337, 0.11328, 0.113143, 0.113335, 0.111307, 0.113196, 0.113337, 0.113463, 0.113344, 0.113455, 0.113385, 0.113306, 0.115594, 0.115534, 0.116445, 0.116218, 0.113856, 0.113431], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 5, 0, 0, 5, 1, 1, 0, 18, 2, 0, 1, 0, 1, 0, 1, 1]': ([0.120375, 0.120343, 0.120264, 0.118815, 0.115133, 0.116245, 0.1158, 0.113749, 0.11372, 0.113803, 0.113641, 0.117747, 0.113337, 0.11328, 0.113143, 0.113335, 0.111307, 0.113196, 0.113337, 0.113463, 0.113344, 0.113455, 0.113385, 0.113306, 0.115594, 0.115534, 0.116445, 0.116218, 0.113856, 0.113431], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	43
        Max loop nest depth: 	6
        Additions: 		1102
        Multiplications: 	468
        Divisions: 		0
        Logical: 		0
        Reads: 			2309
        Writes: 		439
        Comparisons:		43
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest36.exe __orio_perftest36.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest36.exe  
Program Test Output: 
{'[3, 2, 1, 6, 4, 6, 1, 0, 0, 16, 9, 0, 1, 1, 0, 1, 0, 1]' : 0.118392}
{'[3, 2, 1, 6, 4, 6, 1, 0, 0, 16, 9, 0, 1, 1, 0, 1, 0, 1]' : 0.118329}
{'[3, 2, 1, 6, 4, 6, 1, 0, 0, 16, 9, 0, 1, 1, 0, 1, 0, 1]' : 0.118244}
{'[3, 2, 1, 6, 4, 6, 1, 0, 0, 16, 9, 0, 1, 1, 0, 1, 0, 1]' : 0.109449}
{'[3, 2, 1, 6, 4, 6, 1, 0, 0, 16, 9, 0, 1, 1, 0, 1, 0, 1]' : 0.105628}
{'[3, 2, 1, 6, 4, 6, 1, 0, 0, 16, 9, 0, 1, 1, 0, 1, 0, 1]' : 0.105654}
{'[3, 2, 1, 6, 4, 6, 1, 0, 0, 16, 9, 0, 1, 1, 0, 1, 0, 1]' : 0.105539}
{'[3, 2, 1, 6, 4, 6, 1, 0, 0, 16, 9, 0, 1, 1, 0, 1, 0, 1]' : 0.105601}
{'[3, 2, 1, 6, 4, 6, 1, 0, 0, 16, 9, 0, 1, 1, 0, 1, 0, 1]' : 0.105645}
{'[3, 2, 1, 6, 4, 6, 1, 0, 0, 16, 9, 0, 1, 1, 0, 1, 0, 1]' : 0.104295}
{'[3, 2, 1, 6, 4, 6, 1, 0, 0, 16, 9, 0, 1, 1, 0, 1, 0, 1]' : 0.102455}
{'[3, 2, 1, 6, 4, 6, 1, 0, 0, 16, 9, 0, 1, 1, 0, 1, 0, 1]' : 0.102417}
{'[3, 2, 1, 6, 4, 6, 1, 0, 0, 16, 9, 0, 1, 1, 0, 1, 0, 1]' : 0.102776}
{'[3, 2, 1, 6, 4, 6, 1, 0, 0, 16, 9, 0, 1, 1, 0, 1, 0, 1]' : 0.102426}
{'[3, 2, 1, 6, 4, 6, 1, 0, 0, 16, 9, 0, 1, 1, 0, 1, 0, 1]' : 0.104339}
{'[3, 2, 1, 6, 4, 6, 1, 0, 0, 16, 9, 0, 1, 1, 0, 1, 0, 1]' : 0.105615}
{'[3, 2, 1, 6, 4, 6, 1, 0, 0, 16, 9, 0, 1, 1, 0, 1, 0, 1]' : 0.104467}
{'[3, 2, 1, 6, 4, 6, 1, 0, 0, 16, 9, 0, 1, 1, 0, 1, 0, 1]' : 0.102603}
{'[3, 2, 1, 6, 4, 6, 1, 0, 0, 16, 9, 0, 1, 1, 0, 1, 0, 1]' : 0.102714}
{'[3, 2, 1, 6, 4, 6, 1, 0, 0, 16, 9, 0, 1, 1, 0, 1, 0, 1]' : 0.102455}
{'[3, 2, 1, 6, 4, 6, 1, 0, 0, 16, 9, 0, 1, 1, 0, 1, 0, 1]' : 0.102272}
{'[3, 2, 1, 6, 4, 6, 1, 0, 0, 16, 9, 0, 1, 1, 0, 1, 0, 1]' : 0.102245}
{'[3, 2, 1, 6, 4, 6, 1, 0, 0, 16, 9, 0, 1, 1, 0, 1, 0, 1]' : 0.102488}
{'[3, 2, 1, 6, 4, 6, 1, 0, 0, 16, 9, 0, 1, 1, 0, 1, 0, 1]' : 0.102555}
{'[3, 2, 1, 6, 4, 6, 1, 0, 0, 16, 9, 0, 1, 1, 0, 1, 0, 1]' : 0.102365}
{'[3, 2, 1, 6, 4, 6, 1, 0, 0, 16, 9, 0, 1, 1, 0, 1, 0, 1]' : 0.102407}
{'[3, 2, 1, 6, 4, 6, 1, 0, 0, 16, 9, 0, 1, 1, 0, 1, 0, 1]' : 0.102252}
{'[3, 2, 1, 6, 4, 6, 1, 0, 0, 16, 9, 0, 1, 1, 0, 1, 0, 1]' : 0.102594}
{'[3, 2, 1, 6, 4, 6, 1, 0, 0, 16, 9, 0, 1, 1, 0, 1, 0, 1]' : 0.100469}
{'[3, 2, 1, 6, 4, 6, 1, 0, 0, 16, 9, 0, 1, 1, 0, 1, 0, 1]' : 0.102395}

out:
 ["{'[3, 2, 1, 6, 4, 6, 1, 0, 0, 16, 9, 0, 1, 1, 0, 1, 0, 1]' : 0.118392}", "{'[3, 2, 1, 6, 4, 6, 1, 0, 0, 16, 9, 0, 1, 1, 0, 1, 0, 1]' : 0.118329}", "{'[3, 2, 1, 6, 4, 6, 1, 0, 0, 16, 9, 0, 1, 1, 0, 1, 0, 1]' : 0.118244}", "{'[3, 2, 1, 6, 4, 6, 1, 0, 0, 16, 9, 0, 1, 1, 0, 1, 0, 1]' : 0.109449}", "{'[3, 2, 1, 6, 4, 6, 1, 0, 0, 16, 9, 0, 1, 1, 0, 1, 0, 1]' : 0.105628}", "{'[3, 2, 1, 6, 4, 6, 1, 0, 0, 16, 9, 0, 1, 1, 0, 1, 0, 1]' : 0.105654}", "{'[3, 2, 1, 6, 4, 6, 1, 0, 0, 16, 9, 0, 1, 1, 0, 1, 0, 1]' : 0.105539}", "{'[3, 2, 1, 6, 4, 6, 1, 0, 0, 16, 9, 0, 1, 1, 0, 1, 0, 1]' : 0.105601}", "{'[3, 2, 1, 6, 4, 6, 1, 0, 0, 16, 9, 0, 1, 1, 0, 1, 0, 1]' : 0.105645}", "{'[3, 2, 1, 6, 4, 6, 1, 0, 0, 16, 9, 0, 1, 1, 0, 1, 0, 1]' : 0.104295}", "{'[3, 2, 1, 6, 4, 6, 1, 0, 0, 16, 9, 0, 1, 1, 0, 1, 0, 1]' : 0.102455}", "{'[3, 2, 1, 6, 4, 6, 1, 0, 0, 16, 9, 0, 1, 1, 0, 1, 0, 1]' : 0.102417}", "{'[3, 2, 1, 6, 4, 6, 1, 0, 0, 16, 9, 0, 1, 1, 0, 1, 0, 1]' : 0.102776}", "{'[3, 2, 1, 6, 4, 6, 1, 0, 0, 16, 9, 0, 1, 1, 0, 1, 0, 1]' : 0.102426}", "{'[3, 2, 1, 6, 4, 6, 1, 0, 0, 16, 9, 0, 1, 1, 0, 1, 0, 1]' : 0.104339}", "{'[3, 2, 1, 6, 4, 6, 1, 0, 0, 16, 9, 0, 1, 1, 0, 1, 0, 1]' : 0.105615}", "{'[3, 2, 1, 6, 4, 6, 1, 0, 0, 16, 9, 0, 1, 1, 0, 1, 0, 1]' : 0.104467}", "{'[3, 2, 1, 6, 4, 6, 1, 0, 0, 16, 9, 0, 1, 1, 0, 1, 0, 1]' : 0.102603}", "{'[3, 2, 1, 6, 4, 6, 1, 0, 0, 16, 9, 0, 1, 1, 0, 1, 0, 1]' : 0.102714}", "{'[3, 2, 1, 6, 4, 6, 1, 0, 0, 16, 9, 0, 1, 1, 0, 1, 0, 1]' : 0.102455}", "{'[3, 2, 1, 6, 4, 6, 1, 0, 0, 16, 9, 0, 1, 1, 0, 1, 0, 1]' : 0.102272}", "{'[3, 2, 1, 6, 4, 6, 1, 0, 0, 16, 9, 0, 1, 1, 0, 1, 0, 1]' : 0.102245}", "{'[3, 2, 1, 6, 4, 6, 1, 0, 0, 16, 9, 0, 1, 1, 0, 1, 0, 1]' : 0.102488}", "{'[3, 2, 1, 6, 4, 6, 1, 0, 0, 16, 9, 0, 1, 1, 0, 1, 0, 1]' : 0.102555}", "{'[3, 2, 1, 6, 4, 6, 1, 0, 0, 16, 9, 0, 1, 1, 0, 1, 0, 1]' : 0.102365}", "{'[3, 2, 1, 6, 4, 6, 1, 0, 0, 16, 9, 0, 1, 1, 0, 1, 0, 1]' : 0.102407}", "{'[3, 2, 1, 6, 4, 6, 1, 0, 0, 16, 9, 0, 1, 1, 0, 1, 0, 1]' : 0.102252}", "{'[3, 2, 1, 6, 4, 6, 1, 0, 0, 16, 9, 0, 1, 1, 0, 1, 0, 1]' : 0.102594}", "{'[3, 2, 1, 6, 4, 6, 1, 0, 0, 16, 9, 0, 1, 1, 0, 1, 0, 1]' : 0.100469}", "{'[3, 2, 1, 6, 4, 6, 1, 0, 0, 16, 9, 0, 1, 1, 0, 1, 0, 1]' : 0.102395}"]
returning from 'run': {'[3, 2, 1, 6, 4, 6, 1, 0, 0, 16, 9, 0, 1, 1, 0, 1, 0, 1]': ([0.118392, 0.118329, 0.118244, 0.109449, 0.105628, 0.105654, 0.105539, 0.105601, 0.105645, 0.104295, 0.102455, 0.102417, 0.102776, 0.102426, 0.104339, 0.105615, 0.104467, 0.102603, 0.102714, 0.102455, 0.102272, 0.102245, 0.102488, 0.102555, 0.102365, 0.102407, 0.102252, 0.102594, 0.100469, 0.102395], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 2, 1, 6, 4, 6, 1, 0, 0, 16, 9, 0, 1, 1, 0, 1, 0, 1]': ([0.118392, 0.118329, 0.118244, 0.109449, 0.105628, 0.105654, 0.105539, 0.105601, 0.105645, 0.104295, 0.102455, 0.102417, 0.102776, 0.102426, 0.104339, 0.105615, 0.104467, 0.102603, 0.102714, 0.102455, 0.102272, 0.102245, 0.102488, 0.102555, 0.102365, 0.102407, 0.102252, 0.102594, 0.100469, 0.102395], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	131
        Max loop nest depth: 	5
        Additions: 		7550
        Multiplications: 	2240
        Divisions: 		0
        Logical: 		0
        Reads: 			14640
        Writes: 		2867
        Comparisons:		131
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest37.exe __orio_perftest37.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest37.exe  
Program Test Output: 
{'[1, 0, 6, 2, 6, 0, 0, 1, 20, 25, 0, 21, 1, 1, 0, 1, 1, 0]' : 0.121673}
{'[1, 0, 6, 2, 6, 0, 0, 1, 20, 25, 0, 21, 1, 1, 0, 1, 1, 0]' : 0.121496}
{'[1, 0, 6, 2, 6, 0, 0, 1, 20, 25, 0, 21, 1, 1, 0, 1, 1, 0]' : 0.121311}
{'[1, 0, 6, 2, 6, 0, 0, 1, 20, 25, 0, 21, 1, 1, 0, 1, 1, 0]' : 0.108286}
{'[1, 0, 6, 2, 6, 0, 0, 1, 20, 25, 0, 21, 1, 1, 0, 1, 1, 0]' : 0.105716}
{'[1, 0, 6, 2, 6, 0, 0, 1, 20, 25, 0, 21, 1, 1, 0, 1, 1, 0]' : 0.106485}
{'[1, 0, 6, 2, 6, 0, 0, 1, 20, 25, 0, 21, 1, 1, 0, 1, 1, 0]' : 0.107223}
{'[1, 0, 6, 2, 6, 0, 0, 1, 20, 25, 0, 21, 1, 1, 0, 1, 1, 0]' : 0.108368}
{'[1, 0, 6, 2, 6, 0, 0, 1, 20, 25, 0, 21, 1, 1, 0, 1, 1, 0]' : 0.108118}
{'[1, 0, 6, 2, 6, 0, 0, 1, 20, 25, 0, 21, 1, 1, 0, 1, 1, 0]' : 0.108195}
{'[1, 0, 6, 2, 6, 0, 0, 1, 20, 25, 0, 21, 1, 1, 0, 1, 1, 0]' : 0.108159}
{'[1, 0, 6, 2, 6, 0, 0, 1, 20, 25, 0, 21, 1, 1, 0, 1, 1, 0]' : 0.108632}
{'[1, 0, 6, 2, 6, 0, 0, 1, 20, 25, 0, 21, 1, 1, 0, 1, 1, 0]' : 0.108338}
{'[1, 0, 6, 2, 6, 0, 0, 1, 20, 25, 0, 21, 1, 1, 0, 1, 1, 0]' : 0.108276}
{'[1, 0, 6, 2, 6, 0, 0, 1, 20, 25, 0, 21, 1, 1, 0, 1, 1, 0]' : 0.108395}
{'[1, 0, 6, 2, 6, 0, 0, 1, 20, 25, 0, 21, 1, 1, 0, 1, 1, 0]' : 0.109297}
{'[1, 0, 6, 2, 6, 0, 0, 1, 20, 25, 0, 21, 1, 1, 0, 1, 1, 0]' : 0.108322}
{'[1, 0, 6, 2, 6, 0, 0, 1, 20, 25, 0, 21, 1, 1, 0, 1, 1, 0]' : 0.108354}
{'[1, 0, 6, 2, 6, 0, 0, 1, 20, 25, 0, 21, 1, 1, 0, 1, 1, 0]' : 0.108171}
{'[1, 0, 6, 2, 6, 0, 0, 1, 20, 25, 0, 21, 1, 1, 0, 1, 1, 0]' : 0.108267}
{'[1, 0, 6, 2, 6, 0, 0, 1, 20, 25, 0, 21, 1, 1, 0, 1, 1, 0]' : 0.10836}
{'[1, 0, 6, 2, 6, 0, 0, 1, 20, 25, 0, 21, 1, 1, 0, 1, 1, 0]' : 0.108161}
{'[1, 0, 6, 2, 6, 0, 0, 1, 20, 25, 0, 21, 1, 1, 0, 1, 1, 0]' : 0.10829}
{'[1, 0, 6, 2, 6, 0, 0, 1, 20, 25, 0, 21, 1, 1, 0, 1, 1, 0]' : 0.108139}
{'[1, 0, 6, 2, 6, 0, 0, 1, 20, 25, 0, 21, 1, 1, 0, 1, 1, 0]' : 0.109216}
{'[1, 0, 6, 2, 6, 0, 0, 1, 20, 25, 0, 21, 1, 1, 0, 1, 1, 0]' : 0.108289}
{'[1, 0, 6, 2, 6, 0, 0, 1, 20, 25, 0, 21, 1, 1, 0, 1, 1, 0]' : 0.108157}
{'[1, 0, 6, 2, 6, 0, 0, 1, 20, 25, 0, 21, 1, 1, 0, 1, 1, 0]' : 0.108454}
{'[1, 0, 6, 2, 6, 0, 0, 1, 20, 25, 0, 21, 1, 1, 0, 1, 1, 0]' : 0.108273}
{'[1, 0, 6, 2, 6, 0, 0, 1, 20, 25, 0, 21, 1, 1, 0, 1, 1, 0]' : 0.108677}

out:
 ["{'[1, 0, 6, 2, 6, 0, 0, 1, 20, 25, 0, 21, 1, 1, 0, 1, 1, 0]' : 0.121673}", "{'[1, 0, 6, 2, 6, 0, 0, 1, 20, 25, 0, 21, 1, 1, 0, 1, 1, 0]' : 0.121496}", "{'[1, 0, 6, 2, 6, 0, 0, 1, 20, 25, 0, 21, 1, 1, 0, 1, 1, 0]' : 0.121311}", "{'[1, 0, 6, 2, 6, 0, 0, 1, 20, 25, 0, 21, 1, 1, 0, 1, 1, 0]' : 0.108286}", "{'[1, 0, 6, 2, 6, 0, 0, 1, 20, 25, 0, 21, 1, 1, 0, 1, 1, 0]' : 0.105716}", "{'[1, 0, 6, 2, 6, 0, 0, 1, 20, 25, 0, 21, 1, 1, 0, 1, 1, 0]' : 0.106485}", "{'[1, 0, 6, 2, 6, 0, 0, 1, 20, 25, 0, 21, 1, 1, 0, 1, 1, 0]' : 0.107223}", "{'[1, 0, 6, 2, 6, 0, 0, 1, 20, 25, 0, 21, 1, 1, 0, 1, 1, 0]' : 0.108368}", "{'[1, 0, 6, 2, 6, 0, 0, 1, 20, 25, 0, 21, 1, 1, 0, 1, 1, 0]' : 0.108118}", "{'[1, 0, 6, 2, 6, 0, 0, 1, 20, 25, 0, 21, 1, 1, 0, 1, 1, 0]' : 0.108195}", "{'[1, 0, 6, 2, 6, 0, 0, 1, 20, 25, 0, 21, 1, 1, 0, 1, 1, 0]' : 0.108159}", "{'[1, 0, 6, 2, 6, 0, 0, 1, 20, 25, 0, 21, 1, 1, 0, 1, 1, 0]' : 0.108632}", "{'[1, 0, 6, 2, 6, 0, 0, 1, 20, 25, 0, 21, 1, 1, 0, 1, 1, 0]' : 0.108338}", "{'[1, 0, 6, 2, 6, 0, 0, 1, 20, 25, 0, 21, 1, 1, 0, 1, 1, 0]' : 0.108276}", "{'[1, 0, 6, 2, 6, 0, 0, 1, 20, 25, 0, 21, 1, 1, 0, 1, 1, 0]' : 0.108395}", "{'[1, 0, 6, 2, 6, 0, 0, 1, 20, 25, 0, 21, 1, 1, 0, 1, 1, 0]' : 0.109297}", "{'[1, 0, 6, 2, 6, 0, 0, 1, 20, 25, 0, 21, 1, 1, 0, 1, 1, 0]' : 0.108322}", "{'[1, 0, 6, 2, 6, 0, 0, 1, 20, 25, 0, 21, 1, 1, 0, 1, 1, 0]' : 0.108354}", "{'[1, 0, 6, 2, 6, 0, 0, 1, 20, 25, 0, 21, 1, 1, 0, 1, 1, 0]' : 0.108171}", "{'[1, 0, 6, 2, 6, 0, 0, 1, 20, 25, 0, 21, 1, 1, 0, 1, 1, 0]' : 0.108267}", "{'[1, 0, 6, 2, 6, 0, 0, 1, 20, 25, 0, 21, 1, 1, 0, 1, 1, 0]' : 0.10836}", "{'[1, 0, 6, 2, 6, 0, 0, 1, 20, 25, 0, 21, 1, 1, 0, 1, 1, 0]' : 0.108161}", "{'[1, 0, 6, 2, 6, 0, 0, 1, 20, 25, 0, 21, 1, 1, 0, 1, 1, 0]' : 0.10829}", "{'[1, 0, 6, 2, 6, 0, 0, 1, 20, 25, 0, 21, 1, 1, 0, 1, 1, 0]' : 0.108139}", "{'[1, 0, 6, 2, 6, 0, 0, 1, 20, 25, 0, 21, 1, 1, 0, 1, 1, 0]' : 0.109216}", "{'[1, 0, 6, 2, 6, 0, 0, 1, 20, 25, 0, 21, 1, 1, 0, 1, 1, 0]' : 0.108289}", "{'[1, 0, 6, 2, 6, 0, 0, 1, 20, 25, 0, 21, 1, 1, 0, 1, 1, 0]' : 0.108157}", "{'[1, 0, 6, 2, 6, 0, 0, 1, 20, 25, 0, 21, 1, 1, 0, 1, 1, 0]' : 0.108454}", "{'[1, 0, 6, 2, 6, 0, 0, 1, 20, 25, 0, 21, 1, 1, 0, 1, 1, 0]' : 0.108273}", "{'[1, 0, 6, 2, 6, 0, 0, 1, 20, 25, 0, 21, 1, 1, 0, 1, 1, 0]' : 0.108677}"]
returning from 'run': {'[1, 0, 6, 2, 6, 0, 0, 1, 20, 25, 0, 21, 1, 1, 0, 1, 1, 0]': ([0.121673, 0.121496, 0.121311, 0.108286, 0.105716, 0.106485, 0.107223, 0.108368, 0.108118, 0.108195, 0.108159, 0.108632, 0.108338, 0.108276, 0.108395, 0.109297, 0.108322, 0.108354, 0.108171, 0.108267, 0.10836, 0.108161, 0.10829, 0.108139, 0.109216, 0.108289, 0.108157, 0.108454, 0.108273, 0.108677], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 6, 2, 6, 0, 0, 1, 20, 25, 0, 21, 1, 1, 0, 1, 1, 0]': ([0.121673, 0.121496, 0.121311, 0.108286, 0.105716, 0.106485, 0.107223, 0.108368, 0.108118, 0.108195, 0.108159, 0.108632, 0.108338, 0.108276, 0.108395, 0.109297, 0.108322, 0.108354, 0.108171, 0.108267, 0.10836, 0.108161, 0.10829, 0.108139, 0.109216, 0.108289, 0.108157, 0.108454, 0.108273, 0.108677], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	112
        Max loop nest depth: 	6
        Additions: 		8502
        Multiplications: 	2108
        Divisions: 		0
        Logical: 		0
        Reads: 			12667
        Writes: 		1351
        Comparisons:		112
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest38.exe __orio_perftest38.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest38.exe  
Program Test Output: 
{'[5, 0, 6, 6, 6, 5, 1, 0, 6, 28, 14, 0, 2, 0, 0, 0, 1, 0]' : 0.258609}
{'[5, 0, 6, 6, 6, 5, 1, 0, 6, 28, 14, 0, 2, 0, 0, 0, 1, 0]' : 0.257615}
{'[5, 0, 6, 6, 6, 5, 1, 0, 6, 28, 14, 0, 2, 0, 0, 0, 1, 0]' : 0.261016}
{'[5, 0, 6, 6, 6, 5, 1, 0, 6, 28, 14, 0, 2, 0, 0, 0, 1, 0]' : 0.257048}
{'[5, 0, 6, 6, 6, 5, 1, 0, 6, 28, 14, 0, 2, 0, 0, 0, 1, 0]' : 0.25771}
{'[5, 0, 6, 6, 6, 5, 1, 0, 6, 28, 14, 0, 2, 0, 0, 0, 1, 0]' : 0.258176}
{'[5, 0, 6, 6, 6, 5, 1, 0, 6, 28, 14, 0, 2, 0, 0, 0, 1, 0]' : 0.257171}
{'[5, 0, 6, 6, 6, 5, 1, 0, 6, 28, 14, 0, 2, 0, 0, 0, 1, 0]' : 0.258862}
{'[5, 0, 6, 6, 6, 5, 1, 0, 6, 28, 14, 0, 2, 0, 0, 0, 1, 0]' : 0.257956}
{'[5, 0, 6, 6, 6, 5, 1, 0, 6, 28, 14, 0, 2, 0, 0, 0, 1, 0]' : 0.257831}
{'[5, 0, 6, 6, 6, 5, 1, 0, 6, 28, 14, 0, 2, 0, 0, 0, 1, 0]' : 0.258684}
{'[5, 0, 6, 6, 6, 5, 1, 0, 6, 28, 14, 0, 2, 0, 0, 0, 1, 0]' : 0.258576}
{'[5, 0, 6, 6, 6, 5, 1, 0, 6, 28, 14, 0, 2, 0, 0, 0, 1, 0]' : 0.258068}
{'[5, 0, 6, 6, 6, 5, 1, 0, 6, 28, 14, 0, 2, 0, 0, 0, 1, 0]' : 0.257758}
{'[5, 0, 6, 6, 6, 5, 1, 0, 6, 28, 14, 0, 2, 0, 0, 0, 1, 0]' : 0.258135}
{'[5, 0, 6, 6, 6, 5, 1, 0, 6, 28, 14, 0, 2, 0, 0, 0, 1, 0]' : 0.258236}
{'[5, 0, 6, 6, 6, 5, 1, 0, 6, 28, 14, 0, 2, 0, 0, 0, 1, 0]' : 0.257373}
{'[5, 0, 6, 6, 6, 5, 1, 0, 6, 28, 14, 0, 2, 0, 0, 0, 1, 0]' : 0.257577}
{'[5, 0, 6, 6, 6, 5, 1, 0, 6, 28, 14, 0, 2, 0, 0, 0, 1, 0]' : 0.258115}
{'[5, 0, 6, 6, 6, 5, 1, 0, 6, 28, 14, 0, 2, 0, 0, 0, 1, 0]' : 0.25544}
{'[5, 0, 6, 6, 6, 5, 1, 0, 6, 28, 14, 0, 2, 0, 0, 0, 1, 0]' : 0.25708}
{'[5, 0, 6, 6, 6, 5, 1, 0, 6, 28, 14, 0, 2, 0, 0, 0, 1, 0]' : 0.257438}
{'[5, 0, 6, 6, 6, 5, 1, 0, 6, 28, 14, 0, 2, 0, 0, 0, 1, 0]' : 0.260882}
{'[5, 0, 6, 6, 6, 5, 1, 0, 6, 28, 14, 0, 2, 0, 0, 0, 1, 0]' : 0.264106}
{'[5, 0, 6, 6, 6, 5, 1, 0, 6, 28, 14, 0, 2, 0, 0, 0, 1, 0]' : 0.262493}
{'[5, 0, 6, 6, 6, 5, 1, 0, 6, 28, 14, 0, 2, 0, 0, 0, 1, 0]' : 0.258679}
{'[5, 0, 6, 6, 6, 5, 1, 0, 6, 28, 14, 0, 2, 0, 0, 0, 1, 0]' : 0.259601}
{'[5, 0, 6, 6, 6, 5, 1, 0, 6, 28, 14, 0, 2, 0, 0, 0, 1, 0]' : 0.257347}
{'[5, 0, 6, 6, 6, 5, 1, 0, 6, 28, 14, 0, 2, 0, 0, 0, 1, 0]' : 0.257727}
{'[5, 0, 6, 6, 6, 5, 1, 0, 6, 28, 14, 0, 2, 0, 0, 0, 1, 0]' : 0.257635}

out:
 ["{'[5, 0, 6, 6, 6, 5, 1, 0, 6, 28, 14, 0, 2, 0, 0, 0, 1, 0]' : 0.258609}", "{'[5, 0, 6, 6, 6, 5, 1, 0, 6, 28, 14, 0, 2, 0, 0, 0, 1, 0]' : 0.257615}", "{'[5, 0, 6, 6, 6, 5, 1, 0, 6, 28, 14, 0, 2, 0, 0, 0, 1, 0]' : 0.261016}", "{'[5, 0, 6, 6, 6, 5, 1, 0, 6, 28, 14, 0, 2, 0, 0, 0, 1, 0]' : 0.257048}", "{'[5, 0, 6, 6, 6, 5, 1, 0, 6, 28, 14, 0, 2, 0, 0, 0, 1, 0]' : 0.25771}", "{'[5, 0, 6, 6, 6, 5, 1, 0, 6, 28, 14, 0, 2, 0, 0, 0, 1, 0]' : 0.258176}", "{'[5, 0, 6, 6, 6, 5, 1, 0, 6, 28, 14, 0, 2, 0, 0, 0, 1, 0]' : 0.257171}", "{'[5, 0, 6, 6, 6, 5, 1, 0, 6, 28, 14, 0, 2, 0, 0, 0, 1, 0]' : 0.258862}", "{'[5, 0, 6, 6, 6, 5, 1, 0, 6, 28, 14, 0, 2, 0, 0, 0, 1, 0]' : 0.257956}", "{'[5, 0, 6, 6, 6, 5, 1, 0, 6, 28, 14, 0, 2, 0, 0, 0, 1, 0]' : 0.257831}", "{'[5, 0, 6, 6, 6, 5, 1, 0, 6, 28, 14, 0, 2, 0, 0, 0, 1, 0]' : 0.258684}", "{'[5, 0, 6, 6, 6, 5, 1, 0, 6, 28, 14, 0, 2, 0, 0, 0, 1, 0]' : 0.258576}", "{'[5, 0, 6, 6, 6, 5, 1, 0, 6, 28, 14, 0, 2, 0, 0, 0, 1, 0]' : 0.258068}", "{'[5, 0, 6, 6, 6, 5, 1, 0, 6, 28, 14, 0, 2, 0, 0, 0, 1, 0]' : 0.257758}", "{'[5, 0, 6, 6, 6, 5, 1, 0, 6, 28, 14, 0, 2, 0, 0, 0, 1, 0]' : 0.258135}", "{'[5, 0, 6, 6, 6, 5, 1, 0, 6, 28, 14, 0, 2, 0, 0, 0, 1, 0]' : 0.258236}", "{'[5, 0, 6, 6, 6, 5, 1, 0, 6, 28, 14, 0, 2, 0, 0, 0, 1, 0]' : 0.257373}", "{'[5, 0, 6, 6, 6, 5, 1, 0, 6, 28, 14, 0, 2, 0, 0, 0, 1, 0]' : 0.257577}", "{'[5, 0, 6, 6, 6, 5, 1, 0, 6, 28, 14, 0, 2, 0, 0, 0, 1, 0]' : 0.258115}", "{'[5, 0, 6, 6, 6, 5, 1, 0, 6, 28, 14, 0, 2, 0, 0, 0, 1, 0]' : 0.25544}", "{'[5, 0, 6, 6, 6, 5, 1, 0, 6, 28, 14, 0, 2, 0, 0, 0, 1, 0]' : 0.25708}", "{'[5, 0, 6, 6, 6, 5, 1, 0, 6, 28, 14, 0, 2, 0, 0, 0, 1, 0]' : 0.257438}", "{'[5, 0, 6, 6, 6, 5, 1, 0, 6, 28, 14, 0, 2, 0, 0, 0, 1, 0]' : 0.260882}", "{'[5, 0, 6, 6, 6, 5, 1, 0, 6, 28, 14, 0, 2, 0, 0, 0, 1, 0]' : 0.264106}", "{'[5, 0, 6, 6, 6, 5, 1, 0, 6, 28, 14, 0, 2, 0, 0, 0, 1, 0]' : 0.262493}", "{'[5, 0, 6, 6, 6, 5, 1, 0, 6, 28, 14, 0, 2, 0, 0, 0, 1, 0]' : 0.258679}", "{'[5, 0, 6, 6, 6, 5, 1, 0, 6, 28, 14, 0, 2, 0, 0, 0, 1, 0]' : 0.259601}", "{'[5, 0, 6, 6, 6, 5, 1, 0, 6, 28, 14, 0, 2, 0, 0, 0, 1, 0]' : 0.257347}", "{'[5, 0, 6, 6, 6, 5, 1, 0, 6, 28, 14, 0, 2, 0, 0, 0, 1, 0]' : 0.257727}", "{'[5, 0, 6, 6, 6, 5, 1, 0, 6, 28, 14, 0, 2, 0, 0, 0, 1, 0]' : 0.257635}"]
returning from 'run': {'[5, 0, 6, 6, 6, 5, 1, 0, 6, 28, 14, 0, 2, 0, 0, 0, 1, 0]': ([0.258609, 0.257615, 0.261016, 0.257048, 0.25771, 0.258176, 0.257171, 0.258862, 0.257956, 0.257831, 0.258684, 0.258576, 0.258068, 0.257758, 0.258135, 0.258236, 0.257373, 0.257577, 0.258115, 0.25544, 0.25708, 0.257438, 0.260882, 0.264106, 0.262493, 0.258679, 0.259601, 0.257347, 0.257727, 0.257635], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 0, 6, 6, 6, 5, 1, 0, 6, 28, 14, 0, 2, 0, 0, 0, 1, 0]': ([0.258609, 0.257615, 0.261016, 0.257048, 0.25771, 0.258176, 0.257171, 0.258862, 0.257956, 0.257831, 0.258684, 0.258576, 0.258068, 0.257758, 0.258135, 0.258236, 0.257373, 0.257577, 0.258115, 0.25544, 0.25708, 0.257438, 0.260882, 0.264106, 0.262493, 0.258679, 0.259601, 0.257347, 0.257727, 0.257635], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = jjj
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = kkk
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	5
        Additions: 		518
        Multiplications: 	198
        Divisions: 		0
        Logical: 		0
        Reads: 			1085
        Writes: 		219
        Comparisons:		22
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest39.exe __orio_perftest39.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest39.exe  
Program Test Output: 
{'[5, 4, 4, 6, 2, 2, 1, 1, 20, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0931439}
{'[5, 4, 4, 6, 2, 2, 1, 1, 20, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0932021}
{'[5, 4, 4, 6, 2, 2, 1, 1, 20, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0927129}
{'[5, 4, 4, 6, 2, 2, 1, 1, 20, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0928581}
{'[5, 4, 4, 6, 2, 2, 1, 1, 20, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.092808}
{'[5, 4, 4, 6, 2, 2, 1, 1, 20, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0931201}
{'[5, 4, 4, 6, 2, 2, 1, 1, 20, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0929689}
{'[5, 4, 4, 6, 2, 2, 1, 1, 20, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0928559}
{'[5, 4, 4, 6, 2, 2, 1, 1, 20, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0929301}
{'[5, 4, 4, 6, 2, 2, 1, 1, 20, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0928891}
{'[5, 4, 4, 6, 2, 2, 1, 1, 20, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0926871}
{'[5, 4, 4, 6, 2, 2, 1, 1, 20, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0927711}
{'[5, 4, 4, 6, 2, 2, 1, 1, 20, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.093343}
{'[5, 4, 4, 6, 2, 2, 1, 1, 20, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0929458}
{'[5, 4, 4, 6, 2, 2, 1, 1, 20, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0927429}
{'[5, 4, 4, 6, 2, 2, 1, 1, 20, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.092653}
{'[5, 4, 4, 6, 2, 2, 1, 1, 20, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.092701}
{'[5, 4, 4, 6, 2, 2, 1, 1, 20, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0928879}
{'[5, 4, 4, 6, 2, 2, 1, 1, 20, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.092896}
{'[5, 4, 4, 6, 2, 2, 1, 1, 20, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.092916}
{'[5, 4, 4, 6, 2, 2, 1, 1, 20, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0926569}
{'[5, 4, 4, 6, 2, 2, 1, 1, 20, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0926871}
{'[5, 4, 4, 6, 2, 2, 1, 1, 20, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.092756}
{'[5, 4, 4, 6, 2, 2, 1, 1, 20, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0928121}
{'[5, 4, 4, 6, 2, 2, 1, 1, 20, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0929029}
{'[5, 4, 4, 6, 2, 2, 1, 1, 20, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.092926}
{'[5, 4, 4, 6, 2, 2, 1, 1, 20, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0929651}
{'[5, 4, 4, 6, 2, 2, 1, 1, 20, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.092726}
{'[5, 4, 4, 6, 2, 2, 1, 1, 20, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.092845}
{'[5, 4, 4, 6, 2, 2, 1, 1, 20, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0927801}

out:
 ["{'[5, 4, 4, 6, 2, 2, 1, 1, 20, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0931439}", "{'[5, 4, 4, 6, 2, 2, 1, 1, 20, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0932021}", "{'[5, 4, 4, 6, 2, 2, 1, 1, 20, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0927129}", "{'[5, 4, 4, 6, 2, 2, 1, 1, 20, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0928581}", "{'[5, 4, 4, 6, 2, 2, 1, 1, 20, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.092808}", "{'[5, 4, 4, 6, 2, 2, 1, 1, 20, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0931201}", "{'[5, 4, 4, 6, 2, 2, 1, 1, 20, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0929689}", "{'[5, 4, 4, 6, 2, 2, 1, 1, 20, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0928559}", "{'[5, 4, 4, 6, 2, 2, 1, 1, 20, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0929301}", "{'[5, 4, 4, 6, 2, 2, 1, 1, 20, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0928891}", "{'[5, 4, 4, 6, 2, 2, 1, 1, 20, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0926871}", "{'[5, 4, 4, 6, 2, 2, 1, 1, 20, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0927711}", "{'[5, 4, 4, 6, 2, 2, 1, 1, 20, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.093343}", "{'[5, 4, 4, 6, 2, 2, 1, 1, 20, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0929458}", "{'[5, 4, 4, 6, 2, 2, 1, 1, 20, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0927429}", "{'[5, 4, 4, 6, 2, 2, 1, 1, 20, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.092653}", "{'[5, 4, 4, 6, 2, 2, 1, 1, 20, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.092701}", "{'[5, 4, 4, 6, 2, 2, 1, 1, 20, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0928879}", "{'[5, 4, 4, 6, 2, 2, 1, 1, 20, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.092896}", "{'[5, 4, 4, 6, 2, 2, 1, 1, 20, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.092916}", "{'[5, 4, 4, 6, 2, 2, 1, 1, 20, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0926569}", "{'[5, 4, 4, 6, 2, 2, 1, 1, 20, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0926871}", "{'[5, 4, 4, 6, 2, 2, 1, 1, 20, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.092756}", "{'[5, 4, 4, 6, 2, 2, 1, 1, 20, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0928121}", "{'[5, 4, 4, 6, 2, 2, 1, 1, 20, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0929029}", "{'[5, 4, 4, 6, 2, 2, 1, 1, 20, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.092926}", "{'[5, 4, 4, 6, 2, 2, 1, 1, 20, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0929651}", "{'[5, 4, 4, 6, 2, 2, 1, 1, 20, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.092726}", "{'[5, 4, 4, 6, 2, 2, 1, 1, 20, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.092845}", "{'[5, 4, 4, 6, 2, 2, 1, 1, 20, 0, 0, 1, 1, 1, 0, 1, 0, 1]' : 0.0927801}"]
returning from 'run': {'[5, 4, 4, 6, 2, 2, 1, 1, 20, 0, 0, 1, 1, 1, 0, 1, 0, 1]': ([0.0931439, 0.0932021, 0.0927129, 0.0928581, 0.092808, 0.0931201, 0.0929689, 0.0928559, 0.0929301, 0.0928891, 0.0926871, 0.0927711, 0.093343, 0.0929458, 0.0927429, 0.092653, 0.092701, 0.0928879, 0.092896, 0.092916, 0.0926569, 0.0926871, 0.092756, 0.0928121, 0.0929029, 0.092926, 0.0929651, 0.092726, 0.092845, 0.0927801], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 4, 4, 6, 2, 2, 1, 1, 20, 0, 0, 1, 1, 1, 0, 1, 0, 1]': ([0.0931439, 0.0932021, 0.0927129, 0.0928581, 0.092808, 0.0931201, 0.0929689, 0.0928559, 0.0929301, 0.0928891, 0.0926871, 0.0927711, 0.093343, 0.0929458, 0.0927429, 0.092653, 0.092701, 0.0928879, 0.092896, 0.092916, 0.0926569, 0.0926871, 0.092756, 0.0928121, 0.0929029, 0.092926, 0.0929651, 0.092726, 0.092845, 0.0927801], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = iii
Code stats:
        Number of loops: 	31
        Max loop nest depth: 	4
        Additions: 		2399
        Multiplications: 	702
        Divisions: 		0
        Logical: 		0
        Reads: 			3785
        Writes: 		428
        Comparisons:		31
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest40.exe __orio_perftest40.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest40.exe  
Program Test Output: 
{'[5, 0, 0, 3, 1, 2, 0, 0, 1, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.117157}
{'[5, 0, 0, 3, 1, 2, 0, 0, 1, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.117141}
{'[5, 0, 0, 3, 1, 2, 0, 0, 1, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.116701}
{'[5, 0, 0, 3, 1, 2, 0, 0, 1, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.117003}
{'[5, 0, 0, 3, 1, 2, 0, 0, 1, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.117213}
{'[5, 0, 0, 3, 1, 2, 0, 0, 1, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.116857}
{'[5, 0, 0, 3, 1, 2, 0, 0, 1, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.117053}
{'[5, 0, 0, 3, 1, 2, 0, 0, 1, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.117312}
{'[5, 0, 0, 3, 1, 2, 0, 0, 1, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.117179}
{'[5, 0, 0, 3, 1, 2, 0, 0, 1, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.115581}
{'[5, 0, 0, 3, 1, 2, 0, 0, 1, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.115841}
{'[5, 0, 0, 3, 1, 2, 0, 0, 1, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.117005}
{'[5, 0, 0, 3, 1, 2, 0, 0, 1, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.117136}
{'[5, 0, 0, 3, 1, 2, 0, 0, 1, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.117286}
{'[5, 0, 0, 3, 1, 2, 0, 0, 1, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.116865}
{'[5, 0, 0, 3, 1, 2, 0, 0, 1, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.117315}
{'[5, 0, 0, 3, 1, 2, 0, 0, 1, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.117428}
{'[5, 0, 0, 3, 1, 2, 0, 0, 1, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.117038}
{'[5, 0, 0, 3, 1, 2, 0, 0, 1, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.11693}
{'[5, 0, 0, 3, 1, 2, 0, 0, 1, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.116974}
{'[5, 0, 0, 3, 1, 2, 0, 0, 1, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.117107}
{'[5, 0, 0, 3, 1, 2, 0, 0, 1, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.116967}
{'[5, 0, 0, 3, 1, 2, 0, 0, 1, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.116836}
{'[5, 0, 0, 3, 1, 2, 0, 0, 1, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.117299}
{'[5, 0, 0, 3, 1, 2, 0, 0, 1, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.11725}
{'[5, 0, 0, 3, 1, 2, 0, 0, 1, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.117152}
{'[5, 0, 0, 3, 1, 2, 0, 0, 1, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.11712}
{'[5, 0, 0, 3, 1, 2, 0, 0, 1, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.11721}
{'[5, 0, 0, 3, 1, 2, 0, 0, 1, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.117145}
{'[5, 0, 0, 3, 1, 2, 0, 0, 1, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.11683}

out:
 ["{'[5, 0, 0, 3, 1, 2, 0, 0, 1, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.117157}", "{'[5, 0, 0, 3, 1, 2, 0, 0, 1, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.117141}", "{'[5, 0, 0, 3, 1, 2, 0, 0, 1, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.116701}", "{'[5, 0, 0, 3, 1, 2, 0, 0, 1, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.117003}", "{'[5, 0, 0, 3, 1, 2, 0, 0, 1, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.117213}", "{'[5, 0, 0, 3, 1, 2, 0, 0, 1, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.116857}", "{'[5, 0, 0, 3, 1, 2, 0, 0, 1, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.117053}", "{'[5, 0, 0, 3, 1, 2, 0, 0, 1, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.117312}", "{'[5, 0, 0, 3, 1, 2, 0, 0, 1, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.117179}", "{'[5, 0, 0, 3, 1, 2, 0, 0, 1, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.115581}", "{'[5, 0, 0, 3, 1, 2, 0, 0, 1, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.115841}", "{'[5, 0, 0, 3, 1, 2, 0, 0, 1, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.117005}", "{'[5, 0, 0, 3, 1, 2, 0, 0, 1, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.117136}", "{'[5, 0, 0, 3, 1, 2, 0, 0, 1, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.117286}", "{'[5, 0, 0, 3, 1, 2, 0, 0, 1, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.116865}", "{'[5, 0, 0, 3, 1, 2, 0, 0, 1, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.117315}", "{'[5, 0, 0, 3, 1, 2, 0, 0, 1, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.117428}", "{'[5, 0, 0, 3, 1, 2, 0, 0, 1, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.117038}", "{'[5, 0, 0, 3, 1, 2, 0, 0, 1, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.11693}", "{'[5, 0, 0, 3, 1, 2, 0, 0, 1, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.116974}", "{'[5, 0, 0, 3, 1, 2, 0, 0, 1, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.117107}", "{'[5, 0, 0, 3, 1, 2, 0, 0, 1, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.116967}", "{'[5, 0, 0, 3, 1, 2, 0, 0, 1, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.116836}", "{'[5, 0, 0, 3, 1, 2, 0, 0, 1, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.117299}", "{'[5, 0, 0, 3, 1, 2, 0, 0, 1, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.11725}", "{'[5, 0, 0, 3, 1, 2, 0, 0, 1, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.117152}", "{'[5, 0, 0, 3, 1, 2, 0, 0, 1, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.11712}", "{'[5, 0, 0, 3, 1, 2, 0, 0, 1, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.11721}", "{'[5, 0, 0, 3, 1, 2, 0, 0, 1, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.117145}", "{'[5, 0, 0, 3, 1, 2, 0, 0, 1, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.11683}"]
returning from 'run': {'[5, 0, 0, 3, 1, 2, 0, 0, 1, 7, 0, 28, 0, 0, 1, 0, 1, 0]': ([0.117157, 0.117141, 0.116701, 0.117003, 0.117213, 0.116857, 0.117053, 0.117312, 0.117179, 0.115581, 0.115841, 0.117005, 0.117136, 0.117286, 0.116865, 0.117315, 0.117428, 0.117038, 0.11693, 0.116974, 0.117107, 0.116967, 0.116836, 0.117299, 0.11725, 0.117152, 0.11712, 0.11721, 0.117145, 0.11683], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 0, 0, 3, 1, 2, 0, 0, 1, 7, 0, 28, 0, 0, 1, 0, 1, 0]': ([0.117157, 0.117141, 0.116701, 0.117003, 0.117213, 0.116857, 0.117053, 0.117312, 0.117179, 0.115581, 0.115841, 0.117005, 0.117136, 0.117286, 0.116865, 0.117315, 0.117428, 0.117038, 0.11693, 0.116974, 0.117107, 0.116967, 0.116836, 0.117299, 0.11725, 0.117152, 0.11712, 0.11721, 0.117145, 0.11683], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	57
        Max loop nest depth: 	6
        Additions: 		3680
        Multiplications: 	1702
        Divisions: 		0
        Logical: 		0
        Reads: 			7077
        Writes: 		1171
        Comparisons:		57
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest41.exe __orio_perftest41.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest41.exe  
Program Test Output: 
{'[2, 0, 2, 3, 1, 6, 0, 1, 4, 13, 27, 0, 1, 0, 1, 1, 0, 0]' : 0.0976751}
{'[2, 0, 2, 3, 1, 6, 0, 1, 4, 13, 27, 0, 1, 0, 1, 1, 0, 0]' : 0.097513}
{'[2, 0, 2, 3, 1, 6, 0, 1, 4, 13, 27, 0, 1, 0, 1, 1, 0, 0]' : 0.098352}
{'[2, 0, 2, 3, 1, 6, 0, 1, 4, 13, 27, 0, 1, 0, 1, 1, 0, 0]' : 0.09832}
{'[2, 0, 2, 3, 1, 6, 0, 1, 4, 13, 27, 0, 1, 0, 1, 1, 0, 0]' : 0.0973849}
{'[2, 0, 2, 3, 1, 6, 0, 1, 4, 13, 27, 0, 1, 0, 1, 1, 0, 0]' : 0.0975258}
{'[2, 0, 2, 3, 1, 6, 0, 1, 4, 13, 27, 0, 1, 0, 1, 1, 0, 0]' : 0.0976751}
{'[2, 0, 2, 3, 1, 6, 0, 1, 4, 13, 27, 0, 1, 0, 1, 1, 0, 0]' : 0.097415}
{'[2, 0, 2, 3, 1, 6, 0, 1, 4, 13, 27, 0, 1, 0, 1, 1, 0, 0]' : 0.097383}
{'[2, 0, 2, 3, 1, 6, 0, 1, 4, 13, 27, 0, 1, 0, 1, 1, 0, 0]' : 0.097482}
{'[2, 0, 2, 3, 1, 6, 0, 1, 4, 13, 27, 0, 1, 0, 1, 1, 0, 0]' : 0.0974469}
{'[2, 0, 2, 3, 1, 6, 0, 1, 4, 13, 27, 0, 1, 0, 1, 1, 0, 0]' : 0.0975292}
{'[2, 0, 2, 3, 1, 6, 0, 1, 4, 13, 27, 0, 1, 0, 1, 1, 0, 0]' : 0.097625}
{'[2, 0, 2, 3, 1, 6, 0, 1, 4, 13, 27, 0, 1, 0, 1, 1, 0, 0]' : 0.0977809}
{'[2, 0, 2, 3, 1, 6, 0, 1, 4, 13, 27, 0, 1, 0, 1, 1, 0, 0]' : 0.0974619}
{'[2, 0, 2, 3, 1, 6, 0, 1, 4, 13, 27, 0, 1, 0, 1, 1, 0, 0]' : 0.0973911}
{'[2, 0, 2, 3, 1, 6, 0, 1, 4, 13, 27, 0, 1, 0, 1, 1, 0, 0]' : 0.0975418}
{'[2, 0, 2, 3, 1, 6, 0, 1, 4, 13, 27, 0, 1, 0, 1, 1, 0, 0]' : 0.0975511}
{'[2, 0, 2, 3, 1, 6, 0, 1, 4, 13, 27, 0, 1, 0, 1, 1, 0, 0]' : 0.097414}
{'[2, 0, 2, 3, 1, 6, 0, 1, 4, 13, 27, 0, 1, 0, 1, 1, 0, 0]' : 0.097445}
{'[2, 0, 2, 3, 1, 6, 0, 1, 4, 13, 27, 0, 1, 0, 1, 1, 0, 0]' : 0.0974841}
{'[2, 0, 2, 3, 1, 6, 0, 1, 4, 13, 27, 0, 1, 0, 1, 1, 0, 0]' : 0.097631}
{'[2, 0, 2, 3, 1, 6, 0, 1, 4, 13, 27, 0, 1, 0, 1, 1, 0, 0]' : 0.0975771}
{'[2, 0, 2, 3, 1, 6, 0, 1, 4, 13, 27, 0, 1, 0, 1, 1, 0, 0]' : 0.0977149}
{'[2, 0, 2, 3, 1, 6, 0, 1, 4, 13, 27, 0, 1, 0, 1, 1, 0, 0]' : 0.0977149}
{'[2, 0, 2, 3, 1, 6, 0, 1, 4, 13, 27, 0, 1, 0, 1, 1, 0, 0]' : 0.097501}
{'[2, 0, 2, 3, 1, 6, 0, 1, 4, 13, 27, 0, 1, 0, 1, 1, 0, 0]' : 0.0999091}
{'[2, 0, 2, 3, 1, 6, 0, 1, 4, 13, 27, 0, 1, 0, 1, 1, 0, 0]' : 0.100126}
{'[2, 0, 2, 3, 1, 6, 0, 1, 4, 13, 27, 0, 1, 0, 1, 1, 0, 0]' : 0.100112}
{'[2, 0, 2, 3, 1, 6, 0, 1, 4, 13, 27, 0, 1, 0, 1, 1, 0, 0]' : 0.10012}

out:
 ["{'[2, 0, 2, 3, 1, 6, 0, 1, 4, 13, 27, 0, 1, 0, 1, 1, 0, 0]' : 0.0976751}", "{'[2, 0, 2, 3, 1, 6, 0, 1, 4, 13, 27, 0, 1, 0, 1, 1, 0, 0]' : 0.097513}", "{'[2, 0, 2, 3, 1, 6, 0, 1, 4, 13, 27, 0, 1, 0, 1, 1, 0, 0]' : 0.098352}", "{'[2, 0, 2, 3, 1, 6, 0, 1, 4, 13, 27, 0, 1, 0, 1, 1, 0, 0]' : 0.09832}", "{'[2, 0, 2, 3, 1, 6, 0, 1, 4, 13, 27, 0, 1, 0, 1, 1, 0, 0]' : 0.0973849}", "{'[2, 0, 2, 3, 1, 6, 0, 1, 4, 13, 27, 0, 1, 0, 1, 1, 0, 0]' : 0.0975258}", "{'[2, 0, 2, 3, 1, 6, 0, 1, 4, 13, 27, 0, 1, 0, 1, 1, 0, 0]' : 0.0976751}", "{'[2, 0, 2, 3, 1, 6, 0, 1, 4, 13, 27, 0, 1, 0, 1, 1, 0, 0]' : 0.097415}", "{'[2, 0, 2, 3, 1, 6, 0, 1, 4, 13, 27, 0, 1, 0, 1, 1, 0, 0]' : 0.097383}", "{'[2, 0, 2, 3, 1, 6, 0, 1, 4, 13, 27, 0, 1, 0, 1, 1, 0, 0]' : 0.097482}", "{'[2, 0, 2, 3, 1, 6, 0, 1, 4, 13, 27, 0, 1, 0, 1, 1, 0, 0]' : 0.0974469}", "{'[2, 0, 2, 3, 1, 6, 0, 1, 4, 13, 27, 0, 1, 0, 1, 1, 0, 0]' : 0.0975292}", "{'[2, 0, 2, 3, 1, 6, 0, 1, 4, 13, 27, 0, 1, 0, 1, 1, 0, 0]' : 0.097625}", "{'[2, 0, 2, 3, 1, 6, 0, 1, 4, 13, 27, 0, 1, 0, 1, 1, 0, 0]' : 0.0977809}", "{'[2, 0, 2, 3, 1, 6, 0, 1, 4, 13, 27, 0, 1, 0, 1, 1, 0, 0]' : 0.0974619}", "{'[2, 0, 2, 3, 1, 6, 0, 1, 4, 13, 27, 0, 1, 0, 1, 1, 0, 0]' : 0.0973911}", "{'[2, 0, 2, 3, 1, 6, 0, 1, 4, 13, 27, 0, 1, 0, 1, 1, 0, 0]' : 0.0975418}", "{'[2, 0, 2, 3, 1, 6, 0, 1, 4, 13, 27, 0, 1, 0, 1, 1, 0, 0]' : 0.0975511}", "{'[2, 0, 2, 3, 1, 6, 0, 1, 4, 13, 27, 0, 1, 0, 1, 1, 0, 0]' : 0.097414}", "{'[2, 0, 2, 3, 1, 6, 0, 1, 4, 13, 27, 0, 1, 0, 1, 1, 0, 0]' : 0.097445}", "{'[2, 0, 2, 3, 1, 6, 0, 1, 4, 13, 27, 0, 1, 0, 1, 1, 0, 0]' : 0.0974841}", "{'[2, 0, 2, 3, 1, 6, 0, 1, 4, 13, 27, 0, 1, 0, 1, 1, 0, 0]' : 0.097631}", "{'[2, 0, 2, 3, 1, 6, 0, 1, 4, 13, 27, 0, 1, 0, 1, 1, 0, 0]' : 0.0975771}", "{'[2, 0, 2, 3, 1, 6, 0, 1, 4, 13, 27, 0, 1, 0, 1, 1, 0, 0]' : 0.0977149}", "{'[2, 0, 2, 3, 1, 6, 0, 1, 4, 13, 27, 0, 1, 0, 1, 1, 0, 0]' : 0.0977149}", "{'[2, 0, 2, 3, 1, 6, 0, 1, 4, 13, 27, 0, 1, 0, 1, 1, 0, 0]' : 0.097501}", "{'[2, 0, 2, 3, 1, 6, 0, 1, 4, 13, 27, 0, 1, 0, 1, 1, 0, 0]' : 0.0999091}", "{'[2, 0, 2, 3, 1, 6, 0, 1, 4, 13, 27, 0, 1, 0, 1, 1, 0, 0]' : 0.100126}", "{'[2, 0, 2, 3, 1, 6, 0, 1, 4, 13, 27, 0, 1, 0, 1, 1, 0, 0]' : 0.100112}", "{'[2, 0, 2, 3, 1, 6, 0, 1, 4, 13, 27, 0, 1, 0, 1, 1, 0, 0]' : 0.10012}"]
returning from 'run': {'[2, 0, 2, 3, 1, 6, 0, 1, 4, 13, 27, 0, 1, 0, 1, 1, 0, 0]': ([0.0976751, 0.097513, 0.098352, 0.09832, 0.0973849, 0.0975258, 0.0976751, 0.097415, 0.097383, 0.097482, 0.0974469, 0.0975292, 0.097625, 0.0977809, 0.0974619, 0.0973911, 0.0975418, 0.0975511, 0.097414, 0.097445, 0.0974841, 0.097631, 0.0975771, 0.0977149, 0.0977149, 0.097501, 0.0999091, 0.100126, 0.100112, 0.10012], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 0, 2, 3, 1, 6, 0, 1, 4, 13, 27, 0, 1, 0, 1, 1, 0, 0]': ([0.0976751, 0.097513, 0.098352, 0.09832, 0.0973849, 0.0975258, 0.0976751, 0.097415, 0.097383, 0.097482, 0.0974469, 0.0975292, 0.097625, 0.0977809, 0.0974619, 0.0973911, 0.0975418, 0.0975511, 0.097414, 0.097445, 0.0974841, 0.097631, 0.0975771, 0.0977149, 0.0977149, 0.097501, 0.0999091, 0.100126, 0.100112, 0.10012], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	54
        Max loop nest depth: 	6
        Additions: 		3182
        Multiplications: 	720
        Divisions: 		0
        Logical: 		0
        Reads: 			4872
        Writes: 		559
        Comparisons:		54
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest42.exe __orio_perftest42.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest42.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest42.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest42.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest42.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		250
        Multiplications: 	90
        Divisions: 		0
        Logical: 		0
        Reads: 			540
        Writes: 		100
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest43.exe __orio_perftest43.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest43.exe  
Program Test Output: 
{'[3, 1, 3, 0, 4, 3, 0, 1, 0, 0, 4, 5, 0, 2, 0, 1, 0, 1]' : 0.239796}
{'[3, 1, 3, 0, 4, 3, 0, 1, 0, 0, 4, 5, 0, 2, 0, 1, 0, 1]' : 0.239511}
{'[3, 1, 3, 0, 4, 3, 0, 1, 0, 0, 4, 5, 0, 2, 0, 1, 0, 1]' : 0.209903}
{'[3, 1, 3, 0, 4, 3, 0, 1, 0, 0, 4, 5, 0, 2, 0, 1, 0, 1]' : 0.205868}
{'[3, 1, 3, 0, 4, 3, 0, 1, 0, 0, 4, 5, 0, 2, 0, 1, 0, 1]' : 0.206053}
{'[3, 1, 3, 0, 4, 3, 0, 1, 0, 0, 4, 5, 0, 2, 0, 1, 0, 1]' : 0.20587}
{'[3, 1, 3, 0, 4, 3, 0, 1, 0, 0, 4, 5, 0, 2, 0, 1, 0, 1]' : 0.206023}
{'[3, 1, 3, 0, 4, 3, 0, 1, 0, 0, 4, 5, 0, 2, 0, 1, 0, 1]' : 0.205782}
{'[3, 1, 3, 0, 4, 3, 0, 1, 0, 0, 4, 5, 0, 2, 0, 1, 0, 1]' : 0.205957}
{'[3, 1, 3, 0, 4, 3, 0, 1, 0, 0, 4, 5, 0, 2, 0, 1, 0, 1]' : 0.205892}
{'[3, 1, 3, 0, 4, 3, 0, 1, 0, 0, 4, 5, 0, 2, 0, 1, 0, 1]' : 0.209726}
{'[3, 1, 3, 0, 4, 3, 0, 1, 0, 0, 4, 5, 0, 2, 0, 1, 0, 1]' : 0.212527}
{'[3, 1, 3, 0, 4, 3, 0, 1, 0, 0, 4, 5, 0, 2, 0, 1, 0, 1]' : 0.207342}
{'[3, 1, 3, 0, 4, 3, 0, 1, 0, 0, 4, 5, 0, 2, 0, 1, 0, 1]' : 0.205772}
{'[3, 1, 3, 0, 4, 3, 0, 1, 0, 0, 4, 5, 0, 2, 0, 1, 0, 1]' : 0.205738}
{'[3, 1, 3, 0, 4, 3, 0, 1, 0, 0, 4, 5, 0, 2, 0, 1, 0, 1]' : 0.206705}
{'[3, 1, 3, 0, 4, 3, 0, 1, 0, 0, 4, 5, 0, 2, 0, 1, 0, 1]' : 0.205902}
{'[3, 1, 3, 0, 4, 3, 0, 1, 0, 0, 4, 5, 0, 2, 0, 1, 0, 1]' : 0.205994}
{'[3, 1, 3, 0, 4, 3, 0, 1, 0, 0, 4, 5, 0, 2, 0, 1, 0, 1]' : 0.205948}
{'[3, 1, 3, 0, 4, 3, 0, 1, 0, 0, 4, 5, 0, 2, 0, 1, 0, 1]' : 0.206175}
{'[3, 1, 3, 0, 4, 3, 0, 1, 0, 0, 4, 5, 0, 2, 0, 1, 0, 1]' : 0.206574}
{'[3, 1, 3, 0, 4, 3, 0, 1, 0, 0, 4, 5, 0, 2, 0, 1, 0, 1]' : 0.206348}
{'[3, 1, 3, 0, 4, 3, 0, 1, 0, 0, 4, 5, 0, 2, 0, 1, 0, 1]' : 0.206181}
{'[3, 1, 3, 0, 4, 3, 0, 1, 0, 0, 4, 5, 0, 2, 0, 1, 0, 1]' : 0.206295}
{'[3, 1, 3, 0, 4, 3, 0, 1, 0, 0, 4, 5, 0, 2, 0, 1, 0, 1]' : 0.205985}
{'[3, 1, 3, 0, 4, 3, 0, 1, 0, 0, 4, 5, 0, 2, 0, 1, 0, 1]' : 0.206315}
{'[3, 1, 3, 0, 4, 3, 0, 1, 0, 0, 4, 5, 0, 2, 0, 1, 0, 1]' : 0.206213}
{'[3, 1, 3, 0, 4, 3, 0, 1, 0, 0, 4, 5, 0, 2, 0, 1, 0, 1]' : 0.206125}
{'[3, 1, 3, 0, 4, 3, 0, 1, 0, 0, 4, 5, 0, 2, 0, 1, 0, 1]' : 0.206057}
{'[3, 1, 3, 0, 4, 3, 0, 1, 0, 0, 4, 5, 0, 2, 0, 1, 0, 1]' : 0.20623}

out:
 ["{'[3, 1, 3, 0, 4, 3, 0, 1, 0, 0, 4, 5, 0, 2, 0, 1, 0, 1]' : 0.239796}", "{'[3, 1, 3, 0, 4, 3, 0, 1, 0, 0, 4, 5, 0, 2, 0, 1, 0, 1]' : 0.239511}", "{'[3, 1, 3, 0, 4, 3, 0, 1, 0, 0, 4, 5, 0, 2, 0, 1, 0, 1]' : 0.209903}", "{'[3, 1, 3, 0, 4, 3, 0, 1, 0, 0, 4, 5, 0, 2, 0, 1, 0, 1]' : 0.205868}", "{'[3, 1, 3, 0, 4, 3, 0, 1, 0, 0, 4, 5, 0, 2, 0, 1, 0, 1]' : 0.206053}", "{'[3, 1, 3, 0, 4, 3, 0, 1, 0, 0, 4, 5, 0, 2, 0, 1, 0, 1]' : 0.20587}", "{'[3, 1, 3, 0, 4, 3, 0, 1, 0, 0, 4, 5, 0, 2, 0, 1, 0, 1]' : 0.206023}", "{'[3, 1, 3, 0, 4, 3, 0, 1, 0, 0, 4, 5, 0, 2, 0, 1, 0, 1]' : 0.205782}", "{'[3, 1, 3, 0, 4, 3, 0, 1, 0, 0, 4, 5, 0, 2, 0, 1, 0, 1]' : 0.205957}", "{'[3, 1, 3, 0, 4, 3, 0, 1, 0, 0, 4, 5, 0, 2, 0, 1, 0, 1]' : 0.205892}", "{'[3, 1, 3, 0, 4, 3, 0, 1, 0, 0, 4, 5, 0, 2, 0, 1, 0, 1]' : 0.209726}", "{'[3, 1, 3, 0, 4, 3, 0, 1, 0, 0, 4, 5, 0, 2, 0, 1, 0, 1]' : 0.212527}", "{'[3, 1, 3, 0, 4, 3, 0, 1, 0, 0, 4, 5, 0, 2, 0, 1, 0, 1]' : 0.207342}", "{'[3, 1, 3, 0, 4, 3, 0, 1, 0, 0, 4, 5, 0, 2, 0, 1, 0, 1]' : 0.205772}", "{'[3, 1, 3, 0, 4, 3, 0, 1, 0, 0, 4, 5, 0, 2, 0, 1, 0, 1]' : 0.205738}", "{'[3, 1, 3, 0, 4, 3, 0, 1, 0, 0, 4, 5, 0, 2, 0, 1, 0, 1]' : 0.206705}", "{'[3, 1, 3, 0, 4, 3, 0, 1, 0, 0, 4, 5, 0, 2, 0, 1, 0, 1]' : 0.205902}", "{'[3, 1, 3, 0, 4, 3, 0, 1, 0, 0, 4, 5, 0, 2, 0, 1, 0, 1]' : 0.205994}", "{'[3, 1, 3, 0, 4, 3, 0, 1, 0, 0, 4, 5, 0, 2, 0, 1, 0, 1]' : 0.205948}", "{'[3, 1, 3, 0, 4, 3, 0, 1, 0, 0, 4, 5, 0, 2, 0, 1, 0, 1]' : 0.206175}", "{'[3, 1, 3, 0, 4, 3, 0, 1, 0, 0, 4, 5, 0, 2, 0, 1, 0, 1]' : 0.206574}", "{'[3, 1, 3, 0, 4, 3, 0, 1, 0, 0, 4, 5, 0, 2, 0, 1, 0, 1]' : 0.206348}", "{'[3, 1, 3, 0, 4, 3, 0, 1, 0, 0, 4, 5, 0, 2, 0, 1, 0, 1]' : 0.206181}", "{'[3, 1, 3, 0, 4, 3, 0, 1, 0, 0, 4, 5, 0, 2, 0, 1, 0, 1]' : 0.206295}", "{'[3, 1, 3, 0, 4, 3, 0, 1, 0, 0, 4, 5, 0, 2, 0, 1, 0, 1]' : 0.205985}", "{'[3, 1, 3, 0, 4, 3, 0, 1, 0, 0, 4, 5, 0, 2, 0, 1, 0, 1]' : 0.206315}", "{'[3, 1, 3, 0, 4, 3, 0, 1, 0, 0, 4, 5, 0, 2, 0, 1, 0, 1]' : 0.206213}", "{'[3, 1, 3, 0, 4, 3, 0, 1, 0, 0, 4, 5, 0, 2, 0, 1, 0, 1]' : 0.206125}", "{'[3, 1, 3, 0, 4, 3, 0, 1, 0, 0, 4, 5, 0, 2, 0, 1, 0, 1]' : 0.206057}", "{'[3, 1, 3, 0, 4, 3, 0, 1, 0, 0, 4, 5, 0, 2, 0, 1, 0, 1]' : 0.20623}"]
returning from 'run': {'[3, 1, 3, 0, 4, 3, 0, 1, 0, 0, 4, 5, 0, 2, 0, 1, 0, 1]': ([0.239796, 0.239511, 0.209903, 0.205868, 0.206053, 0.20587, 0.206023, 0.205782, 0.205957, 0.205892, 0.209726, 0.212527, 0.207342, 0.205772, 0.205738, 0.206705, 0.205902, 0.205994, 0.205948, 0.206175, 0.206574, 0.206348, 0.206181, 0.206295, 0.205985, 0.206315, 0.206213, 0.206125, 0.206057, 0.20623], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 1, 3, 0, 4, 3, 0, 1, 0, 0, 4, 5, 0, 2, 0, 1, 0, 1]': ([0.239796, 0.239511, 0.209903, 0.205868, 0.206053, 0.20587, 0.206023, 0.205782, 0.205957, 0.205892, 0.209726, 0.212527, 0.207342, 0.205772, 0.205738, 0.206705, 0.205902, 0.205994, 0.205948, 0.206175, 0.206574, 0.206348, 0.206181, 0.206295, 0.205985, 0.206315, 0.206213, 0.206125, 0.206057, 0.20623], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	5
        Additions: 		613
        Multiplications: 	280
        Divisions: 		0
        Logical: 		0
        Reads: 			1449
        Writes: 		313
        Comparisons:		22
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest44.exe __orio_perftest44.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest44.exe  
Program Test Output: 
{'[5, 6, 4, 6, 4, 0, 0, 0, 2, 25, 1, 0, 1, 0, 0, 1, 1, 1]' : 0.098412}
{'[5, 6, 4, 6, 4, 0, 0, 0, 2, 25, 1, 0, 1, 0, 0, 1, 1, 1]' : 0.098114}
{'[5, 6, 4, 6, 4, 0, 0, 0, 2, 25, 1, 0, 1, 0, 0, 1, 1, 1]' : 0.0980899}
{'[5, 6, 4, 6, 4, 0, 0, 0, 2, 25, 1, 0, 1, 0, 0, 1, 1, 1]' : 0.0985651}
{'[5, 6, 4, 6, 4, 0, 0, 0, 2, 25, 1, 0, 1, 0, 0, 1, 1, 1]' : 0.09832}
{'[5, 6, 4, 6, 4, 0, 0, 0, 2, 25, 1, 0, 1, 0, 0, 1, 1, 1]' : 0.0981932}
{'[5, 6, 4, 6, 4, 0, 0, 0, 2, 25, 1, 0, 1, 0, 0, 1, 1, 1]' : 0.09812}
{'[5, 6, 4, 6, 4, 0, 0, 0, 2, 25, 1, 0, 1, 0, 0, 1, 1, 1]' : 0.0983109}
{'[5, 6, 4, 6, 4, 0, 0, 0, 2, 25, 1, 0, 1, 0, 0, 1, 1, 1]' : 0.0983942}
{'[5, 6, 4, 6, 4, 0, 0, 0, 2, 25, 1, 0, 1, 0, 0, 1, 1, 1]' : 0.0981121}
{'[5, 6, 4, 6, 4, 0, 0, 0, 2, 25, 1, 0, 1, 0, 0, 1, 1, 1]' : 0.0983319}
{'[5, 6, 4, 6, 4, 0, 0, 0, 2, 25, 1, 0, 1, 0, 0, 1, 1, 1]' : 0.0981131}
{'[5, 6, 4, 6, 4, 0, 0, 0, 2, 25, 1, 0, 1, 0, 0, 1, 1, 1]' : 0.098109}
{'[5, 6, 4, 6, 4, 0, 0, 0, 2, 25, 1, 0, 1, 0, 0, 1, 1, 1]' : 0.0977821}
{'[5, 6, 4, 6, 4, 0, 0, 0, 2, 25, 1, 0, 1, 0, 0, 1, 1, 1]' : 0.0961049}
{'[5, 6, 4, 6, 4, 0, 0, 0, 2, 25, 1, 0, 1, 0, 0, 1, 1, 1]' : 0.0962498}
{'[5, 6, 4, 6, 4, 0, 0, 0, 2, 25, 1, 0, 1, 0, 0, 1, 1, 1]' : 0.095876}
{'[5, 6, 4, 6, 4, 0, 0, 0, 2, 25, 1, 0, 1, 0, 0, 1, 1, 1]' : 0.0960519}
{'[5, 6, 4, 6, 4, 0, 0, 0, 2, 25, 1, 0, 1, 0, 0, 1, 1, 1]' : 0.0966201}
{'[5, 6, 4, 6, 4, 0, 0, 0, 2, 25, 1, 0, 1, 0, 0, 1, 1, 1]' : 0.096009}
{'[5, 6, 4, 6, 4, 0, 0, 0, 2, 25, 1, 0, 1, 0, 0, 1, 1, 1]' : 0.096}
{'[5, 6, 4, 6, 4, 0, 0, 0, 2, 25, 1, 0, 1, 0, 0, 1, 1, 1]' : 0.096174}
{'[5, 6, 4, 6, 4, 0, 0, 0, 2, 25, 1, 0, 1, 0, 0, 1, 1, 1]' : 0.0960801}
{'[5, 6, 4, 6, 4, 0, 0, 0, 2, 25, 1, 0, 1, 0, 0, 1, 1, 1]' : 0.0961161}
{'[5, 6, 4, 6, 4, 0, 0, 0, 2, 25, 1, 0, 1, 0, 0, 1, 1, 1]' : 0.0981159}
{'[5, 6, 4, 6, 4, 0, 0, 0, 2, 25, 1, 0, 1, 0, 0, 1, 1, 1]' : 0.0981801}
{'[5, 6, 4, 6, 4, 0, 0, 0, 2, 25, 1, 0, 1, 0, 0, 1, 1, 1]' : 0.0982049}
{'[5, 6, 4, 6, 4, 0, 0, 0, 2, 25, 1, 0, 1, 0, 0, 1, 1, 1]' : 0.098187}
{'[5, 6, 4, 6, 4, 0, 0, 0, 2, 25, 1, 0, 1, 0, 0, 1, 1, 1]' : 0.0980539}
{'[5, 6, 4, 6, 4, 0, 0, 0, 2, 25, 1, 0, 1, 0, 0, 1, 1, 1]' : 0.096961}

out:
 ["{'[5, 6, 4, 6, 4, 0, 0, 0, 2, 25, 1, 0, 1, 0, 0, 1, 1, 1]' : 0.098412}", "{'[5, 6, 4, 6, 4, 0, 0, 0, 2, 25, 1, 0, 1, 0, 0, 1, 1, 1]' : 0.098114}", "{'[5, 6, 4, 6, 4, 0, 0, 0, 2, 25, 1, 0, 1, 0, 0, 1, 1, 1]' : 0.0980899}", "{'[5, 6, 4, 6, 4, 0, 0, 0, 2, 25, 1, 0, 1, 0, 0, 1, 1, 1]' : 0.0985651}", "{'[5, 6, 4, 6, 4, 0, 0, 0, 2, 25, 1, 0, 1, 0, 0, 1, 1, 1]' : 0.09832}", "{'[5, 6, 4, 6, 4, 0, 0, 0, 2, 25, 1, 0, 1, 0, 0, 1, 1, 1]' : 0.0981932}", "{'[5, 6, 4, 6, 4, 0, 0, 0, 2, 25, 1, 0, 1, 0, 0, 1, 1, 1]' : 0.09812}", "{'[5, 6, 4, 6, 4, 0, 0, 0, 2, 25, 1, 0, 1, 0, 0, 1, 1, 1]' : 0.0983109}", "{'[5, 6, 4, 6, 4, 0, 0, 0, 2, 25, 1, 0, 1, 0, 0, 1, 1, 1]' : 0.0983942}", "{'[5, 6, 4, 6, 4, 0, 0, 0, 2, 25, 1, 0, 1, 0, 0, 1, 1, 1]' : 0.0981121}", "{'[5, 6, 4, 6, 4, 0, 0, 0, 2, 25, 1, 0, 1, 0, 0, 1, 1, 1]' : 0.0983319}", "{'[5, 6, 4, 6, 4, 0, 0, 0, 2, 25, 1, 0, 1, 0, 0, 1, 1, 1]' : 0.0981131}", "{'[5, 6, 4, 6, 4, 0, 0, 0, 2, 25, 1, 0, 1, 0, 0, 1, 1, 1]' : 0.098109}", "{'[5, 6, 4, 6, 4, 0, 0, 0, 2, 25, 1, 0, 1, 0, 0, 1, 1, 1]' : 0.0977821}", "{'[5, 6, 4, 6, 4, 0, 0, 0, 2, 25, 1, 0, 1, 0, 0, 1, 1, 1]' : 0.0961049}", "{'[5, 6, 4, 6, 4, 0, 0, 0, 2, 25, 1, 0, 1, 0, 0, 1, 1, 1]' : 0.0962498}", "{'[5, 6, 4, 6, 4, 0, 0, 0, 2, 25, 1, 0, 1, 0, 0, 1, 1, 1]' : 0.095876}", "{'[5, 6, 4, 6, 4, 0, 0, 0, 2, 25, 1, 0, 1, 0, 0, 1, 1, 1]' : 0.0960519}", "{'[5, 6, 4, 6, 4, 0, 0, 0, 2, 25, 1, 0, 1, 0, 0, 1, 1, 1]' : 0.0966201}", "{'[5, 6, 4, 6, 4, 0, 0, 0, 2, 25, 1, 0, 1, 0, 0, 1, 1, 1]' : 0.096009}", "{'[5, 6, 4, 6, 4, 0, 0, 0, 2, 25, 1, 0, 1, 0, 0, 1, 1, 1]' : 0.096}", "{'[5, 6, 4, 6, 4, 0, 0, 0, 2, 25, 1, 0, 1, 0, 0, 1, 1, 1]' : 0.096174}", "{'[5, 6, 4, 6, 4, 0, 0, 0, 2, 25, 1, 0, 1, 0, 0, 1, 1, 1]' : 0.0960801}", "{'[5, 6, 4, 6, 4, 0, 0, 0, 2, 25, 1, 0, 1, 0, 0, 1, 1, 1]' : 0.0961161}", "{'[5, 6, 4, 6, 4, 0, 0, 0, 2, 25, 1, 0, 1, 0, 0, 1, 1, 1]' : 0.0981159}", "{'[5, 6, 4, 6, 4, 0, 0, 0, 2, 25, 1, 0, 1, 0, 0, 1, 1, 1]' : 0.0981801}", "{'[5, 6, 4, 6, 4, 0, 0, 0, 2, 25, 1, 0, 1, 0, 0, 1, 1, 1]' : 0.0982049}", "{'[5, 6, 4, 6, 4, 0, 0, 0, 2, 25, 1, 0, 1, 0, 0, 1, 1, 1]' : 0.098187}", "{'[5, 6, 4, 6, 4, 0, 0, 0, 2, 25, 1, 0, 1, 0, 0, 1, 1, 1]' : 0.0980539}", "{'[5, 6, 4, 6, 4, 0, 0, 0, 2, 25, 1, 0, 1, 0, 0, 1, 1, 1]' : 0.096961}"]
returning from 'run': {'[5, 6, 4, 6, 4, 0, 0, 0, 2, 25, 1, 0, 1, 0, 0, 1, 1, 1]': ([0.098412, 0.098114, 0.0980899, 0.0985651, 0.09832, 0.0981932, 0.09812, 0.0983109, 0.0983942, 0.0981121, 0.0983319, 0.0981131, 0.098109, 0.0977821, 0.0961049, 0.0962498, 0.095876, 0.0960519, 0.0966201, 0.096009, 0.096, 0.096174, 0.0960801, 0.0961161, 0.0981159, 0.0981801, 0.0982049, 0.098187, 0.0980539, 0.096961], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 6, 4, 6, 4, 0, 0, 0, 2, 25, 1, 0, 1, 0, 0, 1, 1, 1]': ([0.098412, 0.098114, 0.0980899, 0.0985651, 0.09832, 0.0981932, 0.09812, 0.0983109, 0.0983942, 0.0981121, 0.0983319, 0.0981131, 0.098109, 0.0977821, 0.0961049, 0.0962498, 0.095876, 0.0960519, 0.0966201, 0.096009, 0.096, 0.096174, 0.0960801, 0.0961161, 0.0981159, 0.0981801, 0.0982049, 0.098187, 0.0980539, 0.096961], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	122
        Max loop nest depth: 	5
        Additions: 		5208
        Multiplications: 	1188
        Divisions: 		0
        Logical: 		0
        Reads: 			8102
        Writes: 		1010
        Comparisons:		122
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest45.exe __orio_perftest45.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest45.exe  
Program Test Output: 
{'[3, 6, 0, 6, 4, 4, 0, 1, 1, 25, 0, 11, 0, 1, 0, 0, 1, 1]' : 0.157564}
{'[3, 6, 0, 6, 4, 4, 0, 1, 1, 25, 0, 11, 0, 1, 0, 0, 1, 1]' : 0.159995}
{'[3, 6, 0, 6, 4, 4, 0, 1, 1, 25, 0, 11, 0, 1, 0, 0, 1, 1]' : 0.159684}
{'[3, 6, 0, 6, 4, 4, 0, 1, 1, 25, 0, 11, 0, 1, 0, 0, 1, 1]' : 0.159803}
{'[3, 6, 0, 6, 4, 4, 0, 1, 1, 25, 0, 11, 0, 1, 0, 0, 1, 1]' : 0.160115}
{'[3, 6, 0, 6, 4, 4, 0, 1, 1, 25, 0, 11, 0, 1, 0, 0, 1, 1]' : 0.158602}
{'[3, 6, 0, 6, 4, 4, 0, 1, 1, 25, 0, 11, 0, 1, 0, 0, 1, 1]' : 0.156428}
{'[3, 6, 0, 6, 4, 4, 0, 1, 1, 25, 0, 11, 0, 1, 0, 0, 1, 1]' : 0.156452}
{'[3, 6, 0, 6, 4, 4, 0, 1, 1, 25, 0, 11, 0, 1, 0, 0, 1, 1]' : 0.159401}
{'[3, 6, 0, 6, 4, 4, 0, 1, 1, 25, 0, 11, 0, 1, 0, 0, 1, 1]' : 0.159862}
{'[3, 6, 0, 6, 4, 4, 0, 1, 1, 25, 0, 11, 0, 1, 0, 0, 1, 1]' : 0.159839}
{'[3, 6, 0, 6, 4, 4, 0, 1, 1, 25, 0, 11, 0, 1, 0, 0, 1, 1]' : 0.15982}
{'[3, 6, 0, 6, 4, 4, 0, 1, 1, 25, 0, 11, 0, 1, 0, 0, 1, 1]' : 0.159886}
{'[3, 6, 0, 6, 4, 4, 0, 1, 1, 25, 0, 11, 0, 1, 0, 0, 1, 1]' : 0.157422}
{'[3, 6, 0, 6, 4, 4, 0, 1, 1, 25, 0, 11, 0, 1, 0, 0, 1, 1]' : 0.157146}
{'[3, 6, 0, 6, 4, 4, 0, 1, 1, 25, 0, 11, 0, 1, 0, 0, 1, 1]' : 0.160181}
{'[3, 6, 0, 6, 4, 4, 0, 1, 1, 25, 0, 11, 0, 1, 0, 0, 1, 1]' : 0.160152}
{'[3, 6, 0, 6, 4, 4, 0, 1, 1, 25, 0, 11, 0, 1, 0, 0, 1, 1]' : 0.16016}
{'[3, 6, 0, 6, 4, 4, 0, 1, 1, 25, 0, 11, 0, 1, 0, 0, 1, 1]' : 0.159718}
{'[3, 6, 0, 6, 4, 4, 0, 1, 1, 25, 0, 11, 0, 1, 0, 0, 1, 1]' : 0.158262}
{'[3, 6, 0, 6, 4, 4, 0, 1, 1, 25, 0, 11, 0, 1, 0, 0, 1, 1]' : 0.15778}
{'[3, 6, 0, 6, 4, 4, 0, 1, 1, 25, 0, 11, 0, 1, 0, 0, 1, 1]' : 0.160287}
{'[3, 6, 0, 6, 4, 4, 0, 1, 1, 25, 0, 11, 0, 1, 0, 0, 1, 1]' : 0.160196}
{'[3, 6, 0, 6, 4, 4, 0, 1, 1, 25, 0, 11, 0, 1, 0, 0, 1, 1]' : 0.160223}
{'[3, 6, 0, 6, 4, 4, 0, 1, 1, 25, 0, 11, 0, 1, 0, 0, 1, 1]' : 0.159984}
{'[3, 6, 0, 6, 4, 4, 0, 1, 1, 25, 0, 11, 0, 1, 0, 0, 1, 1]' : 0.159922}
{'[3, 6, 0, 6, 4, 4, 0, 1, 1, 25, 0, 11, 0, 1, 0, 0, 1, 1]' : 0.160245}
{'[3, 6, 0, 6, 4, 4, 0, 1, 1, 25, 0, 11, 0, 1, 0, 0, 1, 1]' : 0.160299}
{'[3, 6, 0, 6, 4, 4, 0, 1, 1, 25, 0, 11, 0, 1, 0, 0, 1, 1]' : 0.160349}
{'[3, 6, 0, 6, 4, 4, 0, 1, 1, 25, 0, 11, 0, 1, 0, 0, 1, 1]' : 0.160287}

out:
 ["{'[3, 6, 0, 6, 4, 4, 0, 1, 1, 25, 0, 11, 0, 1, 0, 0, 1, 1]' : 0.157564}", "{'[3, 6, 0, 6, 4, 4, 0, 1, 1, 25, 0, 11, 0, 1, 0, 0, 1, 1]' : 0.159995}", "{'[3, 6, 0, 6, 4, 4, 0, 1, 1, 25, 0, 11, 0, 1, 0, 0, 1, 1]' : 0.159684}", "{'[3, 6, 0, 6, 4, 4, 0, 1, 1, 25, 0, 11, 0, 1, 0, 0, 1, 1]' : 0.159803}", "{'[3, 6, 0, 6, 4, 4, 0, 1, 1, 25, 0, 11, 0, 1, 0, 0, 1, 1]' : 0.160115}", "{'[3, 6, 0, 6, 4, 4, 0, 1, 1, 25, 0, 11, 0, 1, 0, 0, 1, 1]' : 0.158602}", "{'[3, 6, 0, 6, 4, 4, 0, 1, 1, 25, 0, 11, 0, 1, 0, 0, 1, 1]' : 0.156428}", "{'[3, 6, 0, 6, 4, 4, 0, 1, 1, 25, 0, 11, 0, 1, 0, 0, 1, 1]' : 0.156452}", "{'[3, 6, 0, 6, 4, 4, 0, 1, 1, 25, 0, 11, 0, 1, 0, 0, 1, 1]' : 0.159401}", "{'[3, 6, 0, 6, 4, 4, 0, 1, 1, 25, 0, 11, 0, 1, 0, 0, 1, 1]' : 0.159862}", "{'[3, 6, 0, 6, 4, 4, 0, 1, 1, 25, 0, 11, 0, 1, 0, 0, 1, 1]' : 0.159839}", "{'[3, 6, 0, 6, 4, 4, 0, 1, 1, 25, 0, 11, 0, 1, 0, 0, 1, 1]' : 0.15982}", "{'[3, 6, 0, 6, 4, 4, 0, 1, 1, 25, 0, 11, 0, 1, 0, 0, 1, 1]' : 0.159886}", "{'[3, 6, 0, 6, 4, 4, 0, 1, 1, 25, 0, 11, 0, 1, 0, 0, 1, 1]' : 0.157422}", "{'[3, 6, 0, 6, 4, 4, 0, 1, 1, 25, 0, 11, 0, 1, 0, 0, 1, 1]' : 0.157146}", "{'[3, 6, 0, 6, 4, 4, 0, 1, 1, 25, 0, 11, 0, 1, 0, 0, 1, 1]' : 0.160181}", "{'[3, 6, 0, 6, 4, 4, 0, 1, 1, 25, 0, 11, 0, 1, 0, 0, 1, 1]' : 0.160152}", "{'[3, 6, 0, 6, 4, 4, 0, 1, 1, 25, 0, 11, 0, 1, 0, 0, 1, 1]' : 0.16016}", "{'[3, 6, 0, 6, 4, 4, 0, 1, 1, 25, 0, 11, 0, 1, 0, 0, 1, 1]' : 0.159718}", "{'[3, 6, 0, 6, 4, 4, 0, 1, 1, 25, 0, 11, 0, 1, 0, 0, 1, 1]' : 0.158262}", "{'[3, 6, 0, 6, 4, 4, 0, 1, 1, 25, 0, 11, 0, 1, 0, 0, 1, 1]' : 0.15778}", "{'[3, 6, 0, 6, 4, 4, 0, 1, 1, 25, 0, 11, 0, 1, 0, 0, 1, 1]' : 0.160287}", "{'[3, 6, 0, 6, 4, 4, 0, 1, 1, 25, 0, 11, 0, 1, 0, 0, 1, 1]' : 0.160196}", "{'[3, 6, 0, 6, 4, 4, 0, 1, 1, 25, 0, 11, 0, 1, 0, 0, 1, 1]' : 0.160223}", "{'[3, 6, 0, 6, 4, 4, 0, 1, 1, 25, 0, 11, 0, 1, 0, 0, 1, 1]' : 0.159984}", "{'[3, 6, 0, 6, 4, 4, 0, 1, 1, 25, 0, 11, 0, 1, 0, 0, 1, 1]' : 0.159922}", "{'[3, 6, 0, 6, 4, 4, 0, 1, 1, 25, 0, 11, 0, 1, 0, 0, 1, 1]' : 0.160245}", "{'[3, 6, 0, 6, 4, 4, 0, 1, 1, 25, 0, 11, 0, 1, 0, 0, 1, 1]' : 0.160299}", "{'[3, 6, 0, 6, 4, 4, 0, 1, 1, 25, 0, 11, 0, 1, 0, 0, 1, 1]' : 0.160349}", "{'[3, 6, 0, 6, 4, 4, 0, 1, 1, 25, 0, 11, 0, 1, 0, 0, 1, 1]' : 0.160287}"]
returning from 'run': {'[3, 6, 0, 6, 4, 4, 0, 1, 1, 25, 0, 11, 0, 1, 0, 0, 1, 1]': ([0.157564, 0.159995, 0.159684, 0.159803, 0.160115, 0.158602, 0.156428, 0.156452, 0.159401, 0.159862, 0.159839, 0.15982, 0.159886, 0.157422, 0.157146, 0.160181, 0.160152, 0.16016, 0.159718, 0.158262, 0.15778, 0.160287, 0.160196, 0.160223, 0.159984, 0.159922, 0.160245, 0.160299, 0.160349, 0.160287], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 6, 0, 6, 4, 4, 0, 1, 1, 25, 0, 11, 0, 1, 0, 0, 1, 1]': ([0.157564, 0.159995, 0.159684, 0.159803, 0.160115, 0.158602, 0.156428, 0.156452, 0.159401, 0.159862, 0.159839, 0.15982, 0.159886, 0.157422, 0.157146, 0.160181, 0.160152, 0.16016, 0.159718, 0.158262, 0.15778, 0.160287, 0.160196, 0.160223, 0.159984, 0.159922, 0.160245, 0.160299, 0.160349, 0.160287], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = iii
Code stats:
        Number of loops: 	29
        Max loop nest depth: 	5
        Additions: 		742
        Multiplications: 	280
        Divisions: 		0
        Logical: 		0
        Reads: 			1481
        Writes: 		285
        Comparisons:		29
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest46.exe __orio_perftest46.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest46.exe  
Program Test Output: 
{'[5, 2, 3, 3, 4, 2, 0, 0, 23, 3, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.115632}
{'[5, 2, 3, 3, 4, 2, 0, 0, 23, 3, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.115614}
{'[5, 2, 3, 3, 4, 2, 0, 0, 23, 3, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.114485}
{'[5, 2, 3, 3, 4, 2, 0, 0, 23, 3, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.100094}
{'[5, 2, 3, 3, 4, 2, 0, 0, 23, 3, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.0979681}
{'[5, 2, 3, 3, 4, 2, 0, 0, 23, 3, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.098753}
{'[5, 2, 3, 3, 4, 2, 0, 0, 23, 3, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.100795}
{'[5, 2, 3, 3, 4, 2, 0, 0, 23, 3, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.101251}
{'[5, 2, 3, 3, 4, 2, 0, 0, 23, 3, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.0990539}
{'[5, 2, 3, 3, 4, 2, 0, 0, 23, 3, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.098084}
{'[5, 2, 3, 3, 4, 2, 0, 0, 23, 3, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.097975}
{'[5, 2, 3, 3, 4, 2, 0, 0, 23, 3, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.0981619}
{'[5, 2, 3, 3, 4, 2, 0, 0, 23, 3, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.0979919}
{'[5, 2, 3, 3, 4, 2, 0, 0, 23, 3, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.0985692}
{'[5, 2, 3, 3, 4, 2, 0, 0, 23, 3, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.100703}
{'[5, 2, 3, 3, 4, 2, 0, 0, 23, 3, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.100829}
{'[5, 2, 3, 3, 4, 2, 0, 0, 23, 3, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.100905}
{'[5, 2, 3, 3, 4, 2, 0, 0, 23, 3, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.100835}
{'[5, 2, 3, 3, 4, 2, 0, 0, 23, 3, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.101188}
{'[5, 2, 3, 3, 4, 2, 0, 0, 23, 3, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.101173}
{'[5, 2, 3, 3, 4, 2, 0, 0, 23, 3, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.10083}
{'[5, 2, 3, 3, 4, 2, 0, 0, 23, 3, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.100839}
{'[5, 2, 3, 3, 4, 2, 0, 0, 23, 3, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.100766}
{'[5, 2, 3, 3, 4, 2, 0, 0, 23, 3, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.100417}
{'[5, 2, 3, 3, 4, 2, 0, 0, 23, 3, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.097909}
{'[5, 2, 3, 3, 4, 2, 0, 0, 23, 3, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.0979822}
{'[5, 2, 3, 3, 4, 2, 0, 0, 23, 3, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.0990329}
{'[5, 2, 3, 3, 4, 2, 0, 0, 23, 3, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.103391}
{'[5, 2, 3, 3, 4, 2, 0, 0, 23, 3, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.100816}
{'[5, 2, 3, 3, 4, 2, 0, 0, 23, 3, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.101082}

out:
 ["{'[5, 2, 3, 3, 4, 2, 0, 0, 23, 3, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.115632}", "{'[5, 2, 3, 3, 4, 2, 0, 0, 23, 3, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.115614}", "{'[5, 2, 3, 3, 4, 2, 0, 0, 23, 3, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.114485}", "{'[5, 2, 3, 3, 4, 2, 0, 0, 23, 3, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.100094}", "{'[5, 2, 3, 3, 4, 2, 0, 0, 23, 3, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.0979681}", "{'[5, 2, 3, 3, 4, 2, 0, 0, 23, 3, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.098753}", "{'[5, 2, 3, 3, 4, 2, 0, 0, 23, 3, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.100795}", "{'[5, 2, 3, 3, 4, 2, 0, 0, 23, 3, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.101251}", "{'[5, 2, 3, 3, 4, 2, 0, 0, 23, 3, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.0990539}", "{'[5, 2, 3, 3, 4, 2, 0, 0, 23, 3, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.098084}", "{'[5, 2, 3, 3, 4, 2, 0, 0, 23, 3, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.097975}", "{'[5, 2, 3, 3, 4, 2, 0, 0, 23, 3, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.0981619}", "{'[5, 2, 3, 3, 4, 2, 0, 0, 23, 3, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.0979919}", "{'[5, 2, 3, 3, 4, 2, 0, 0, 23, 3, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.0985692}", "{'[5, 2, 3, 3, 4, 2, 0, 0, 23, 3, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.100703}", "{'[5, 2, 3, 3, 4, 2, 0, 0, 23, 3, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.100829}", "{'[5, 2, 3, 3, 4, 2, 0, 0, 23, 3, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.100905}", "{'[5, 2, 3, 3, 4, 2, 0, 0, 23, 3, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.100835}", "{'[5, 2, 3, 3, 4, 2, 0, 0, 23, 3, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.101188}", "{'[5, 2, 3, 3, 4, 2, 0, 0, 23, 3, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.101173}", "{'[5, 2, 3, 3, 4, 2, 0, 0, 23, 3, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.10083}", "{'[5, 2, 3, 3, 4, 2, 0, 0, 23, 3, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.100839}", "{'[5, 2, 3, 3, 4, 2, 0, 0, 23, 3, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.100766}", "{'[5, 2, 3, 3, 4, 2, 0, 0, 23, 3, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.100417}", "{'[5, 2, 3, 3, 4, 2, 0, 0, 23, 3, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.097909}", "{'[5, 2, 3, 3, 4, 2, 0, 0, 23, 3, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.0979822}", "{'[5, 2, 3, 3, 4, 2, 0, 0, 23, 3, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.0990329}", "{'[5, 2, 3, 3, 4, 2, 0, 0, 23, 3, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.103391}", "{'[5, 2, 3, 3, 4, 2, 0, 0, 23, 3, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.100816}", "{'[5, 2, 3, 3, 4, 2, 0, 0, 23, 3, 9, 0, 0, 1, 1, 1, 1, 0]' : 0.101082}"]
returning from 'run': {'[5, 2, 3, 3, 4, 2, 0, 0, 23, 3, 9, 0, 0, 1, 1, 1, 1, 0]': ([0.115632, 0.115614, 0.114485, 0.100094, 0.0979681, 0.098753, 0.100795, 0.101251, 0.0990539, 0.098084, 0.097975, 0.0981619, 0.0979919, 0.0985692, 0.100703, 0.100829, 0.100905, 0.100835, 0.101188, 0.101173, 0.10083, 0.100839, 0.100766, 0.100417, 0.097909, 0.0979822, 0.0990329, 0.103391, 0.100816, 0.101082], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 2, 3, 3, 4, 2, 0, 0, 23, 3, 9, 0, 0, 1, 1, 1, 1, 0]': ([0.115632, 0.115614, 0.114485, 0.100094, 0.0979681, 0.098753, 0.100795, 0.101251, 0.0990539, 0.098084, 0.097975, 0.0981619, 0.0979919, 0.0985692, 0.100703, 0.100829, 0.100905, 0.100835, 0.101188, 0.101173, 0.10083, 0.100839, 0.100766, 0.100417, 0.097909, 0.0979822, 0.0990329, 0.103391, 0.100816, 0.101082], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Complete design, with measurements:
     T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
180     5    4    5    0    3    3       0       0   29   0  29  27    1    1
364     6    0    1    0    6    0       0       1   21   0   0   1    0    0
420     5    1    6    6    0    4       0       0   27   0  29   3    1    0
454     6    1    1    0    0    0       1       0    9  24   0  24    0    0
602     1    3    0    0    0    0       0       1   21   6  25   0    2    0
790     1    1    6    4    5    6       1       1   29   0  28  26    0    1
917     0    6    5    5    6    6       0       1   19   0   1  28    0    1
1176    0    5    1    5    6    3       0       0    0  29  25   0    1    0
1213    2    2    0    2    6    3       1       0    3   0   9   0    1    0
1320    0    3    0    0    5    3       0       1   21   0   5  28    0    0
1471    1    6    2    0    4    1       0       1   27   4   6   0    0    0
1649    6    3    5    5    4    4       1       1    8   0  28   5    0    0
1670    0    0    6    4    1    4       0       0   25  26  16   0    0    2
1734    1    1    6    6    6    4       1       0   19   9   0   2    1    0
1989    1    6    0    2    0    3       1       0    2   2   0   4    0    0
2016    2    6    0    1    0    4       1       0    0  18  28   0    0    1
2040    3    4    3    1    0    2       0       0   15   0   1   4    0    1
2100    1    3    5    3    5    6       0       1   28   0  25   0    0    0
2168    6    3    4    4    4    5       1       1    6   0  22  18    2    0
2265    0    5    1    5    0    1       1       0   27  29   0  18    1    1
2299    0    2    1    6    1    3       0       0   26   4   0  19    2    0
2550    4    1    1    6    0    6       0       1    4  29   0  28    0    0
2589    6    4    2    0    5    6       0       0   29  29   0   1    0    0
2834    6    6    1    5    0    1       0       0    6   4   0  29    0    2
2886    2    0    6    0    4    4       0       0    3   0   0  23    0    0
2916    0    6    2    4    0    0       0       0   28   0  20  24    0    0
3414    2    4    6    5    2    5       1       1   26  27   4   0    1    0
3453    1    5    4    6    6    0       0       1    7   9   0   0    0    0
3581    6    6    5    0    0    5       1       1    0  18   2   0    1    0
3743    3    2    1    6    4    6       1       0    0  16   9   0    1    1
3763    1    0    6    2    6    0       0       1   20  25   0  21    1    1
3785    5    0    6    6    6    5       1       0    6  28  14   0    2    0
3880    5    4    4    6    2    2       1       1   20   0   0   1    1    1
3985    5    0    0    3    1    2       0       0    1   7   0  28    0    0
3999    2    0    2    3    1    6       0       1    4  13  27   0    1    0
4026    3    1    3    0    4    3       0       1    0   0   4   5    0    2
4349    5    6    4    6    4    0       0       0    2  25   1   0    1    0
4426    3    6    0    6    4    4       0       1    1  25   0  11    0    1
4537    5    2    3    3    4    2       0       0   23   3   9   0    0    1
     RT_K SCR VEC1 VEC2  cost_mean
180     0   1    1    1 0.09205938
364     1   0    0    0 0.43234973
420     1   0    0    1 0.11134070
454     0   0    0    1 0.17802890
602     0   1    1    1 0.10579890
790     1   0    0    0 0.24585370
917     1   0    0    1 0.20124830
1176    1   1    0    1 0.09169583
1213    0   0    1    1 0.10058107
1320    1   1    0    0 0.18673340
1471    0   0    0    1 0.17519170
1649    0   1    1    1 0.22069233
1670    0   1    1    1 0.16285827
1734    1   1    1    1 0.09194770
1989    2   1    0    0 0.13537917
2016    1   1    1    1 0.14226507
2040    1   1    1    0 0.16335003
2100    0   1    1    0 0.22151913
2168    0   0    1    1 0.29628667
2265    0   0    1    0 0.12994060
2299    0   0    0    0 0.23619813
2550    1   0    1    0 0.27629523
2589    2   0    0    1 0.26709323
2834    0   1    1    0 0.11492107
2886    2   1    0    1 0.15178350
2916    0   0    1    0 0.20270617
3414    0   1    0    0 0.09863344
3453    0   1    1    0 0.17626097
3581    1   0    1    1 0.11495337
3743    0   1    0    1 0.10503617
3763    0   1    1    0 0.10950327
3785    0   0    1    0 0.25843147
3880    0   1    0    1 0.09286967
3985    1   0    1    0 0.11699770
3999    1   1    0    0 0.09792676
4026    0   1    0    1 0.20882690
4349    0   1    1    1 0.09746507
4426    0   0    1    1 0.15933547
4537    1   1    1    0 0.10143754

Heteroscedasticity Test p-value: 0.114917444912
Regression Step:                Df   Sum Sq  Mean Sq F value  Pr(>F)   
T1_I             1 0.006776 0.006776   3.348 0.11000   
T1_J             1 0.008490 0.008490   4.194 0.07976 . 
T1_K             1 0.001534 0.001534   0.758 0.41293   
T2_I             1 0.000982 0.000982   0.485 0.50849   
T2_J             1 0.014480 0.014480   7.153 0.03179 * 
T2_K             1 0.003256 0.003256   1.609 0.24522   
ACOPY_x          1 0.001885 0.001885   0.931 0.36672   
ACOPY_y          1 0.014032 0.014032   6.932 0.03377 * 
U1_I             1 0.014457 0.014457   7.142 0.03188 * 
U_I              1 0.000233 0.000233   0.115 0.74424   
U_J              1 0.001297 0.001297   0.641 0.44978   
U_K              1 0.002955 0.002955   1.460 0.26617   
RT_I             1 0.004156 0.004156   2.053 0.19499   
RT_J             1 0.004592 0.004592   2.268 0.17576   
RT_K             1 0.000161 0.000161   0.080 0.78611   
SCR              1 0.022986 0.022986  11.356 0.01192 * 
VEC1             1 0.000057 0.000057   0.028 0.87106   
VEC2             1 0.007850 0.007850   3.878 0.08958 . 
I(1/(1 + T1_I))  1 0.012319 0.012319   6.086 0.04302 * 
I(1/(1 + T1_J))  1 0.000004 0.000004   0.002 0.96703   
I(1/(1 + T1_K))  1 0.004290 0.004290   2.119 0.18877   
I(1/(1 + T2_I))  1 0.007253 0.007253   3.583 0.10025   
I(1/(1 + T2_J))  1 0.001761 0.001761   0.870 0.38194   
I(1/(1 + T2_K))  1 0.005818 0.005818   2.874 0.13383   
I(1/(1 + U1_I))  1 0.003334 0.003334   1.647 0.24019   
I(1/(1 + U_I))   1 0.006389 0.006389   3.157 0.11887   
I(1/(1 + U_J))   1 0.006893 0.006893   3.405 0.10749   
I(1/(1 + U_K))   1 0.004935 0.004935   2.438 0.16240   
I(1/(1 + RT_I))  1 0.028423 0.028423  14.042 0.00719 **
I(1/(1 + RT_J))  1 0.001887 0.001887   0.932 0.36639   
I(1/(1 + RT_K))  1 0.002096 0.002096   1.035 0.34277   
Residuals        7 0.014169 0.002024                   
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Predicting Best
Generating valid search space of size 4600 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Valid coordinates: 920
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Valid coordinates: 1840
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Tested coordinates: 110000
Valid coordinates: 2760
Tested coordinates: 120000
Tested coordinates: 130000
Tested coordinates: 140000
Tested coordinates: 150000
Valid coordinates: 3680
Tested coordinates: 160000
Tested coordinates: 170000
Tested coordinates: 180000
Tested coordinates: 190000
Valid coordinates: 4600
Valid/Tested configurations: 4600/192653
Generated Search Space:
NULL
Identical predictions (tol = 1e-5): 1
Getting Best from Design
Response: ['cost_mean']
Design Names:  [1] "T1_I"      "T1_J"      "T1_K"      "T2_I"      "T2_J"      "T2_K"     
 [7] "ACOPY_x"   "ACOPY_y"   "U1_I"      "U_I"       "U_J"       "U_K"      
[13] "RT_I"      "RT_J"      "RT_K"      "SCR"       "VEC1"      "VEC2"     
[19] "cost_mean"

Design Response:       cost_mean
180  0.09205938
364  0.43234973
420  0.11134070
454  0.17802890
602  0.10579890
790  0.24585370
917  0.20124830
1176 0.09169583
1213 0.10058107
1320 0.18673340
1471 0.17519170
1649 0.22069233
1670 0.16285827
1734 0.09194770
1989 0.13537917
2016 0.14226507
2040 0.16335003
2100 0.22151913
2168 0.29628667
2265 0.12994060
2299 0.23619813
2550 0.27629523
2589 0.26709323
2834 0.11492107
2886 0.15178350
2916 0.20270617
3414 0.09863344
3453 0.17626097
3581 0.11495337
3743 0.10503617
3763 0.10950327
3785 0.25843147
3880 0.09286967
3985 0.11699770
3999 0.09792676
4026 0.20882690
4349 0.09746507
4426 0.15933547
4537 0.10143754

Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Getting fixed variables
Pruning Model
Best Predicted:      T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
1857    0    2    4    6    0    2       0       0    5  12   7   0    1    0
     RT_K SCR VEC1 VEC2
1857    0   1    0    0

Best From Design: [0, 5, 1, 5, 6, 3, 0, 0, 0, 29, 25, 0, 1, 0, 1, 1, 0, 1]
Pruned Factors: ['T1_I', 'T1_K', 'T2_I', 'T2_K', 'ACOPY_x', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'VEC1']
Fixed Factors: {'ACOPY_y': 0, 'T1_J': 2, 'T2_J': 0, 'U1_I': 5, 'VEC2': 0, 'SCR': 1}
Length of requested configs: 1
Result was on Database, Returning Now
Starting Point (-O3):
0.16283083333333334
Predicted Best Point:
[0, 2, 4, 6, 0, 2, 0, 0, 5, 12, 7, 0, 1, 0, 0, 1, 0, 0]
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = kkk
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	4
        Additions: 		946
        Multiplications: 	440
        Divisions: 		0
        Logical: 		0
        Reads: 			1929
        Writes: 		352
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest47.exe __orio_perftest47.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest47.exe  
Program Test Output: 
{'[0, 2, 4, 6, 0, 2, 0, 0, 5, 12, 7, 0, 1, 0, 0, 1, 0, 0]' : 0.123423}
{'[0, 2, 4, 6, 0, 2, 0, 0, 5, 12, 7, 0, 1, 0, 0, 1, 0, 0]' : 0.12333}
{'[0, 2, 4, 6, 0, 2, 0, 0, 5, 12, 7, 0, 1, 0, 0, 1, 0, 0]' : 0.123287}
{'[0, 2, 4, 6, 0, 2, 0, 0, 5, 12, 7, 0, 1, 0, 0, 1, 0, 0]' : 0.121183}
{'[0, 2, 4, 6, 0, 2, 0, 0, 5, 12, 7, 0, 1, 0, 0, 1, 0, 0]' : 0.107523}
{'[0, 2, 4, 6, 0, 2, 0, 0, 5, 12, 7, 0, 1, 0, 0, 1, 0, 0]' : 0.106973}
{'[0, 2, 4, 6, 0, 2, 0, 0, 5, 12, 7, 0, 1, 0, 0, 1, 0, 0]' : 0.106895}
{'[0, 2, 4, 6, 0, 2, 0, 0, 5, 12, 7, 0, 1, 0, 0, 1, 0, 0]' : 0.106965}
{'[0, 2, 4, 6, 0, 2, 0, 0, 5, 12, 7, 0, 1, 0, 0, 1, 0, 0]' : 0.107025}
{'[0, 2, 4, 6, 0, 2, 0, 0, 5, 12, 7, 0, 1, 0, 0, 1, 0, 0]' : 0.106957}
{'[0, 2, 4, 6, 0, 2, 0, 0, 5, 12, 7, 0, 1, 0, 0, 1, 0, 0]' : 0.106921}
{'[0, 2, 4, 6, 0, 2, 0, 0, 5, 12, 7, 0, 1, 0, 0, 1, 0, 0]' : 0.10749}
{'[0, 2, 4, 6, 0, 2, 0, 0, 5, 12, 7, 0, 1, 0, 0, 1, 0, 0]' : 0.107189}
{'[0, 2, 4, 6, 0, 2, 0, 0, 5, 12, 7, 0, 1, 0, 0, 1, 0, 0]' : 0.106897}
{'[0, 2, 4, 6, 0, 2, 0, 0, 5, 12, 7, 0, 1, 0, 0, 1, 0, 0]' : 0.106986}
{'[0, 2, 4, 6, 0, 2, 0, 0, 5, 12, 7, 0, 1, 0, 0, 1, 0, 0]' : 0.106944}
{'[0, 2, 4, 6, 0, 2, 0, 0, 5, 12, 7, 0, 1, 0, 0, 1, 0, 0]' : 0.106885}
{'[0, 2, 4, 6, 0, 2, 0, 0, 5, 12, 7, 0, 1, 0, 0, 1, 0, 0]' : 0.106972}
{'[0, 2, 4, 6, 0, 2, 0, 0, 5, 12, 7, 0, 1, 0, 0, 1, 0, 0]' : 0.1069}
{'[0, 2, 4, 6, 0, 2, 0, 0, 5, 12, 7, 0, 1, 0, 0, 1, 0, 0]' : 0.106962}
{'[0, 2, 4, 6, 0, 2, 0, 0, 5, 12, 7, 0, 1, 0, 0, 1, 0, 0]' : 0.106882}
{'[0, 2, 4, 6, 0, 2, 0, 0, 5, 12, 7, 0, 1, 0, 0, 1, 0, 0]' : 0.10695}
{'[0, 2, 4, 6, 0, 2, 0, 0, 5, 12, 7, 0, 1, 0, 0, 1, 0, 0]' : 0.107222}
{'[0, 2, 4, 6, 0, 2, 0, 0, 5, 12, 7, 0, 1, 0, 0, 1, 0, 0]' : 0.107176}
{'[0, 2, 4, 6, 0, 2, 0, 0, 5, 12, 7, 0, 1, 0, 0, 1, 0, 0]' : 0.106943}
{'[0, 2, 4, 6, 0, 2, 0, 0, 5, 12, 7, 0, 1, 0, 0, 1, 0, 0]' : 0.107577}
{'[0, 2, 4, 6, 0, 2, 0, 0, 5, 12, 7, 0, 1, 0, 0, 1, 0, 0]' : 0.106956}
{'[0, 2, 4, 6, 0, 2, 0, 0, 5, 12, 7, 0, 1, 0, 0, 1, 0, 0]' : 0.106979}
{'[0, 2, 4, 6, 0, 2, 0, 0, 5, 12, 7, 0, 1, 0, 0, 1, 0, 0]' : 0.106931}
{'[0, 2, 4, 6, 0, 2, 0, 0, 5, 12, 7, 0, 1, 0, 0, 1, 0, 0]' : 0.106934}

out:
 ["{'[0, 2, 4, 6, 0, 2, 0, 0, 5, 12, 7, 0, 1, 0, 0, 1, 0, 0]' : 0.123423}", "{'[0, 2, 4, 6, 0, 2, 0, 0, 5, 12, 7, 0, 1, 0, 0, 1, 0, 0]' : 0.12333}", "{'[0, 2, 4, 6, 0, 2, 0, 0, 5, 12, 7, 0, 1, 0, 0, 1, 0, 0]' : 0.123287}", "{'[0, 2, 4, 6, 0, 2, 0, 0, 5, 12, 7, 0, 1, 0, 0, 1, 0, 0]' : 0.121183}", "{'[0, 2, 4, 6, 0, 2, 0, 0, 5, 12, 7, 0, 1, 0, 0, 1, 0, 0]' : 0.107523}", "{'[0, 2, 4, 6, 0, 2, 0, 0, 5, 12, 7, 0, 1, 0, 0, 1, 0, 0]' : 0.106973}", "{'[0, 2, 4, 6, 0, 2, 0, 0, 5, 12, 7, 0, 1, 0, 0, 1, 0, 0]' : 0.106895}", "{'[0, 2, 4, 6, 0, 2, 0, 0, 5, 12, 7, 0, 1, 0, 0, 1, 0, 0]' : 0.106965}", "{'[0, 2, 4, 6, 0, 2, 0, 0, 5, 12, 7, 0, 1, 0, 0, 1, 0, 0]' : 0.107025}", "{'[0, 2, 4, 6, 0, 2, 0, 0, 5, 12, 7, 0, 1, 0, 0, 1, 0, 0]' : 0.106957}", "{'[0, 2, 4, 6, 0, 2, 0, 0, 5, 12, 7, 0, 1, 0, 0, 1, 0, 0]' : 0.106921}", "{'[0, 2, 4, 6, 0, 2, 0, 0, 5, 12, 7, 0, 1, 0, 0, 1, 0, 0]' : 0.10749}", "{'[0, 2, 4, 6, 0, 2, 0, 0, 5, 12, 7, 0, 1, 0, 0, 1, 0, 0]' : 0.107189}", "{'[0, 2, 4, 6, 0, 2, 0, 0, 5, 12, 7, 0, 1, 0, 0, 1, 0, 0]' : 0.106897}", "{'[0, 2, 4, 6, 0, 2, 0, 0, 5, 12, 7, 0, 1, 0, 0, 1, 0, 0]' : 0.106986}", "{'[0, 2, 4, 6, 0, 2, 0, 0, 5, 12, 7, 0, 1, 0, 0, 1, 0, 0]' : 0.106944}", "{'[0, 2, 4, 6, 0, 2, 0, 0, 5, 12, 7, 0, 1, 0, 0, 1, 0, 0]' : 0.106885}", "{'[0, 2, 4, 6, 0, 2, 0, 0, 5, 12, 7, 0, 1, 0, 0, 1, 0, 0]' : 0.106972}", "{'[0, 2, 4, 6, 0, 2, 0, 0, 5, 12, 7, 0, 1, 0, 0, 1, 0, 0]' : 0.1069}", "{'[0, 2, 4, 6, 0, 2, 0, 0, 5, 12, 7, 0, 1, 0, 0, 1, 0, 0]' : 0.106962}", "{'[0, 2, 4, 6, 0, 2, 0, 0, 5, 12, 7, 0, 1, 0, 0, 1, 0, 0]' : 0.106882}", "{'[0, 2, 4, 6, 0, 2, 0, 0, 5, 12, 7, 0, 1, 0, 0, 1, 0, 0]' : 0.10695}", "{'[0, 2, 4, 6, 0, 2, 0, 0, 5, 12, 7, 0, 1, 0, 0, 1, 0, 0]' : 0.107222}", "{'[0, 2, 4, 6, 0, 2, 0, 0, 5, 12, 7, 0, 1, 0, 0, 1, 0, 0]' : 0.107176}", "{'[0, 2, 4, 6, 0, 2, 0, 0, 5, 12, 7, 0, 1, 0, 0, 1, 0, 0]' : 0.106943}", "{'[0, 2, 4, 6, 0, 2, 0, 0, 5, 12, 7, 0, 1, 0, 0, 1, 0, 0]' : 0.107577}", "{'[0, 2, 4, 6, 0, 2, 0, 0, 5, 12, 7, 0, 1, 0, 0, 1, 0, 0]' : 0.106956}", "{'[0, 2, 4, 6, 0, 2, 0, 0, 5, 12, 7, 0, 1, 0, 0, 1, 0, 0]' : 0.106979}", "{'[0, 2, 4, 6, 0, 2, 0, 0, 5, 12, 7, 0, 1, 0, 0, 1, 0, 0]' : 0.106931}", "{'[0, 2, 4, 6, 0, 2, 0, 0, 5, 12, 7, 0, 1, 0, 0, 1, 0, 0]' : 0.106934}"]
returning from 'run': {'[0, 2, 4, 6, 0, 2, 0, 0, 5, 12, 7, 0, 1, 0, 0, 1, 0, 0]': ([0.123423, 0.12333, 0.123287, 0.121183, 0.107523, 0.106973, 0.106895, 0.106965, 0.107025, 0.106957, 0.106921, 0.10749, 0.107189, 0.106897, 0.106986, 0.106944, 0.106885, 0.106972, 0.1069, 0.106962, 0.106882, 0.10695, 0.107222, 0.107176, 0.106943, 0.107577, 0.106956, 0.106979, 0.106931, 0.106934], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 4, 6, 0, 2, 0, 0, 5, 12, 7, 0, 1, 0, 0, 1, 0, 0]': ([0.123423, 0.12333, 0.123287, 0.121183, 0.107523, 0.106973, 0.106895, 0.106965, 0.107025, 0.106957, 0.106921, 0.10749, 0.107189, 0.106897, 0.106986, 0.106944, 0.106885, 0.106972, 0.1069, 0.106962, 0.106882, 0.10695, 0.107222, 0.107176, 0.106943, 0.107577, 0.106956, 0.106979, 0.106931, 0.106934], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Design Best Point:
[0, 5, 1, 5, 6, 3, 0, 0, 0, 29, 25, 0, 1, 0, 1, 1, 0, 1]
Length of requested configs: 1
Result was on Database, Returning Now
Fixed Factors: {'ACOPY_y': 0, 'T1_J': 2, 'T2_J': 0, 'U1_I': 5, 'VEC2': 0, 'SCR': 1}
Slowdown (Design Best): 0.563135565029146
Slowdown (Predicted Best): 0.670277844593315
Budget: 39/180
Updating Global Best: 0.09169583333333337
Current Best Point: 
[0, 5, 1, 5, 6, 3, 0, 0, 0, 29, 25, 0, 1, 0, 1, 1, 0, 1]
Step 1
Generating valid search space of size 3300 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Valid coordinates: 660
Tested coordinates: 30000
Tested coordinates: 40000
Valid coordinates: 1320
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Valid coordinates: 1980
Tested coordinates: 80000
Tested coordinates: 90000
Valid coordinates: 2640
Tested coordinates: 100000
Tested coordinates: 110000
Valid coordinates: 3300
Valid/Tested configurations: 3300/118021
Generated Search Space:
NULL
Clean Info:
Removed Factors: character(0)

Removed Inverse Factors: [1] "ACOPY_x" "VEC1"   

New Factors: ['T1_I', 'T1_K', 'T2_I', 'T2_K', 'ACOPY_x', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'VEC1']
New Inverse Factors: ['T1_I', 'T1_K', 'T2_I', 'T2_K', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
New Fixed Factors: {'ACOPY_y': 0, 'T1_J': 2, 'T2_J': 0, 'U1_I': 5, 'VEC2': 0, 'SCR': 1}
Full Model:  ~ T1_I + T1_K + T2_I + T2_K + ACOPY_x + U_I + U_J + U_K + RT_I + RT_J + RT_K + VEC1 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_K)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Fixed Factors: {'ACOPY_y': 0, 'T1_J': 2, 'T2_J': 0, 'U1_I': 5, 'VEC2': 0, 'SCR': 1}
Computing D-Optimal Design
Computing D-Optimal Design with 33 experiments
Design Formula:  ~ T1_I + T1_K + T2_I + T2_K + ACOPY_x + U_I + U_J + U_K + RT_I + RT_J + RT_K + VEC1 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_K)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Starting "optFederov" run
Using Search Space:
NULL
Data Dimensions: [1] 3300   12

     T1_I T1_K T2_I T2_K ACOPY_x U_I U_J U_K RT_I RT_J RT_K VEC1
60      6    1    6    0       1  20  27   0    0    0    1    0
162     0    0    6    6       1   8   0  27    0    0    1    1
165     0    1    0    6       0   0  21   1    0    2    0    0
176     3    0    5    3       1  29   0  26    0    2    0    0
205     6    0    4    3       0   5   2   0    0    2    0    0
279     0    6    1    4       1   0  15   5    0    1    1    1
282     0    1    6    2       0  27   0  24    0    0    2    0
382     6    6    4    4       1   0   0   0    1    0    1    1
478     6    2    0    5       1   0  23  26    0    0    2    1
549     1    2    0    0       0   5  26   0    0    0    0    0
570     2    1    2    6       0  11  22   0    1    1    0    0
612     0    2    0    0       0   0   6  24    2    0    0    0
926     0    6    0    5       1  27   0  29    1    0    0    1
946     3    6    6    6       1   1   0   1    0    1    1    0
950     0    1    4    6       1  28   6   0    0    0    0    1
1030    0    3    5    0       0   0  29  29    1    1    0    1
1307    3    5    3    4       1  28  29   0    2    0    0    1
1357    6    6    0    0       0  19   0  14    0    2    0    0
1416    0    3    6    5       1   2   0   6    0    0    2    0
1422    5    2    0    2       0  29   0  13    0    1    1    0
1452    3    2    3    5       1   0   0   2    1    0    1    0
1698    3    4    6    2       0   0  15  12    0    2    0    1
1879    1    0    0    6       1   0   0  29    0    1    0    0
2045    6    0    5    5       0   0  24   5    1    1    0    0
2114    6    0    5    0       0   0  22  18    0    0    0    0
2229    0    2    3    5       1  12   0  18    0    0    0    0
2269    1    2    1    4       0   0   0  29    0    0    1    1
2483    2    2    6    2       1  29   0  11    1    0    1    0
2754    1    0    4    0       1  27  12   0    0    0    2    1
2758    2    6    5    6       0   0  10  26    0    0    1    0
2768    5    3    6    6       0  29   0  29    2    0    0    1
2835    4    2    6    0       1   0  11   0    0    1    0    1
2949    4    0    4    1       1   4   0   2    2    0    0    1

D-Efficiency Approximation: [1] 0.402

Measuring design of size 33
Current Design Names: ['T1_I', 'T1_K', 'T2_I', 'T2_K', 'ACOPY_x', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'VEC1']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Length of requested configs: 1
Code stats:
        Number of loops: 	80
        Max loop nest depth: 	5
        Additions: 		4975
        Multiplications: 	1672
        Divisions: 		0
        Logical: 		0
        Reads: 			8154
        Writes: 		1127
        Comparisons:		80
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest48.exe __orio_perftest48.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest48.exe  
Program Test Output: 
{'[6, 2, 1, 6, 0, 0, 1, 0, 5, 20, 27, 0, 0, 0, 1, 1, 0, 0]' : 0.211895}
{'[6, 2, 1, 6, 0, 0, 1, 0, 5, 20, 27, 0, 0, 0, 1, 1, 0, 0]' : 0.207518}
{'[6, 2, 1, 6, 0, 0, 1, 0, 5, 20, 27, 0, 0, 0, 1, 1, 0, 0]' : 0.183859}
{'[6, 2, 1, 6, 0, 0, 1, 0, 5, 20, 27, 0, 0, 0, 1, 1, 0, 0]' : 0.18448}
{'[6, 2, 1, 6, 0, 0, 1, 0, 5, 20, 27, 0, 0, 0, 1, 1, 0, 0]' : 0.185124}
{'[6, 2, 1, 6, 0, 0, 1, 0, 5, 20, 27, 0, 0, 0, 1, 1, 0, 0]' : 0.185131}
{'[6, 2, 1, 6, 0, 0, 1, 0, 5, 20, 27, 0, 0, 0, 1, 1, 0, 0]' : 0.18987}
{'[6, 2, 1, 6, 0, 0, 1, 0, 5, 20, 27, 0, 0, 0, 1, 1, 0, 0]' : 0.185402}
{'[6, 2, 1, 6, 0, 0, 1, 0, 5, 20, 27, 0, 0, 0, 1, 1, 0, 0]' : 0.186013}
{'[6, 2, 1, 6, 0, 0, 1, 0, 5, 20, 27, 0, 0, 0, 1, 1, 0, 0]' : 0.190956}
{'[6, 2, 1, 6, 0, 0, 1, 0, 5, 20, 27, 0, 0, 0, 1, 1, 0, 0]' : 0.191466}
{'[6, 2, 1, 6, 0, 0, 1, 0, 5, 20, 27, 0, 0, 0, 1, 1, 0, 0]' : 0.190878}
{'[6, 2, 1, 6, 0, 0, 1, 0, 5, 20, 27, 0, 0, 0, 1, 1, 0, 0]' : 0.18859}
{'[6, 2, 1, 6, 0, 0, 1, 0, 5, 20, 27, 0, 0, 0, 1, 1, 0, 0]' : 0.185118}
{'[6, 2, 1, 6, 0, 0, 1, 0, 5, 20, 27, 0, 0, 0, 1, 1, 0, 0]' : 0.184953}
{'[6, 2, 1, 6, 0, 0, 1, 0, 5, 20, 27, 0, 0, 0, 1, 1, 0, 0]' : 0.185384}
{'[6, 2, 1, 6, 0, 0, 1, 0, 5, 20, 27, 0, 0, 0, 1, 1, 0, 0]' : 0.185942}
{'[6, 2, 1, 6, 0, 0, 1, 0, 5, 20, 27, 0, 0, 0, 1, 1, 0, 0]' : 0.190728}
{'[6, 2, 1, 6, 0, 0, 1, 0, 5, 20, 27, 0, 0, 0, 1, 1, 0, 0]' : 0.191105}
{'[6, 2, 1, 6, 0, 0, 1, 0, 5, 20, 27, 0, 0, 0, 1, 1, 0, 0]' : 0.190804}
{'[6, 2, 1, 6, 0, 0, 1, 0, 5, 20, 27, 0, 0, 0, 1, 1, 0, 0]' : 0.189923}
{'[6, 2, 1, 6, 0, 0, 1, 0, 5, 20, 27, 0, 0, 0, 1, 1, 0, 0]' : 0.180892}
{'[6, 2, 1, 6, 0, 0, 1, 0, 5, 20, 27, 0, 0, 0, 1, 1, 0, 0]' : 0.184133}
{'[6, 2, 1, 6, 0, 0, 1, 0, 5, 20, 27, 0, 0, 0, 1, 1, 0, 0]' : 0.185555}
{'[6, 2, 1, 6, 0, 0, 1, 0, 5, 20, 27, 0, 0, 0, 1, 1, 0, 0]' : 0.190866}
{'[6, 2, 1, 6, 0, 0, 1, 0, 5, 20, 27, 0, 0, 0, 1, 1, 0, 0]' : 0.190838}
{'[6, 2, 1, 6, 0, 0, 1, 0, 5, 20, 27, 0, 0, 0, 1, 1, 0, 0]' : 0.189017}
{'[6, 2, 1, 6, 0, 0, 1, 0, 5, 20, 27, 0, 0, 0, 1, 1, 0, 0]' : 0.188209}
{'[6, 2, 1, 6, 0, 0, 1, 0, 5, 20, 27, 0, 0, 0, 1, 1, 0, 0]' : 0.190727}
{'[6, 2, 1, 6, 0, 0, 1, 0, 5, 20, 27, 0, 0, 0, 1, 1, 0, 0]' : 0.190959}

out:
 ["{'[6, 2, 1, 6, 0, 0, 1, 0, 5, 20, 27, 0, 0, 0, 1, 1, 0, 0]' : 0.211895}", "{'[6, 2, 1, 6, 0, 0, 1, 0, 5, 20, 27, 0, 0, 0, 1, 1, 0, 0]' : 0.207518}", "{'[6, 2, 1, 6, 0, 0, 1, 0, 5, 20, 27, 0, 0, 0, 1, 1, 0, 0]' : 0.183859}", "{'[6, 2, 1, 6, 0, 0, 1, 0, 5, 20, 27, 0, 0, 0, 1, 1, 0, 0]' : 0.18448}", "{'[6, 2, 1, 6, 0, 0, 1, 0, 5, 20, 27, 0, 0, 0, 1, 1, 0, 0]' : 0.185124}", "{'[6, 2, 1, 6, 0, 0, 1, 0, 5, 20, 27, 0, 0, 0, 1, 1, 0, 0]' : 0.185131}", "{'[6, 2, 1, 6, 0, 0, 1, 0, 5, 20, 27, 0, 0, 0, 1, 1, 0, 0]' : 0.18987}", "{'[6, 2, 1, 6, 0, 0, 1, 0, 5, 20, 27, 0, 0, 0, 1, 1, 0, 0]' : 0.185402}", "{'[6, 2, 1, 6, 0, 0, 1, 0, 5, 20, 27, 0, 0, 0, 1, 1, 0, 0]' : 0.186013}", "{'[6, 2, 1, 6, 0, 0, 1, 0, 5, 20, 27, 0, 0, 0, 1, 1, 0, 0]' : 0.190956}", "{'[6, 2, 1, 6, 0, 0, 1, 0, 5, 20, 27, 0, 0, 0, 1, 1, 0, 0]' : 0.191466}", "{'[6, 2, 1, 6, 0, 0, 1, 0, 5, 20, 27, 0, 0, 0, 1, 1, 0, 0]' : 0.190878}", "{'[6, 2, 1, 6, 0, 0, 1, 0, 5, 20, 27, 0, 0, 0, 1, 1, 0, 0]' : 0.18859}", "{'[6, 2, 1, 6, 0, 0, 1, 0, 5, 20, 27, 0, 0, 0, 1, 1, 0, 0]' : 0.185118}", "{'[6, 2, 1, 6, 0, 0, 1, 0, 5, 20, 27, 0, 0, 0, 1, 1, 0, 0]' : 0.184953}", "{'[6, 2, 1, 6, 0, 0, 1, 0, 5, 20, 27, 0, 0, 0, 1, 1, 0, 0]' : 0.185384}", "{'[6, 2, 1, 6, 0, 0, 1, 0, 5, 20, 27, 0, 0, 0, 1, 1, 0, 0]' : 0.185942}", "{'[6, 2, 1, 6, 0, 0, 1, 0, 5, 20, 27, 0, 0, 0, 1, 1, 0, 0]' : 0.190728}", "{'[6, 2, 1, 6, 0, 0, 1, 0, 5, 20, 27, 0, 0, 0, 1, 1, 0, 0]' : 0.191105}", "{'[6, 2, 1, 6, 0, 0, 1, 0, 5, 20, 27, 0, 0, 0, 1, 1, 0, 0]' : 0.190804}", "{'[6, 2, 1, 6, 0, 0, 1, 0, 5, 20, 27, 0, 0, 0, 1, 1, 0, 0]' : 0.189923}", "{'[6, 2, 1, 6, 0, 0, 1, 0, 5, 20, 27, 0, 0, 0, 1, 1, 0, 0]' : 0.180892}", "{'[6, 2, 1, 6, 0, 0, 1, 0, 5, 20, 27, 0, 0, 0, 1, 1, 0, 0]' : 0.184133}", "{'[6, 2, 1, 6, 0, 0, 1, 0, 5, 20, 27, 0, 0, 0, 1, 1, 0, 0]' : 0.185555}", "{'[6, 2, 1, 6, 0, 0, 1, 0, 5, 20, 27, 0, 0, 0, 1, 1, 0, 0]' : 0.190866}", "{'[6, 2, 1, 6, 0, 0, 1, 0, 5, 20, 27, 0, 0, 0, 1, 1, 0, 0]' : 0.190838}", "{'[6, 2, 1, 6, 0, 0, 1, 0, 5, 20, 27, 0, 0, 0, 1, 1, 0, 0]' : 0.189017}", "{'[6, 2, 1, 6, 0, 0, 1, 0, 5, 20, 27, 0, 0, 0, 1, 1, 0, 0]' : 0.188209}", "{'[6, 2, 1, 6, 0, 0, 1, 0, 5, 20, 27, 0, 0, 0, 1, 1, 0, 0]' : 0.190727}", "{'[6, 2, 1, 6, 0, 0, 1, 0, 5, 20, 27, 0, 0, 0, 1, 1, 0, 0]' : 0.190959}"]
returning from 'run': {'[6, 2, 1, 6, 0, 0, 1, 0, 5, 20, 27, 0, 0, 0, 1, 1, 0, 0]': ([0.211895, 0.207518, 0.183859, 0.18448, 0.185124, 0.185131, 0.18987, 0.185402, 0.186013, 0.190956, 0.191466, 0.190878, 0.18859, 0.185118, 0.184953, 0.185384, 0.185942, 0.190728, 0.191105, 0.190804, 0.189923, 0.180892, 0.184133, 0.185555, 0.190866, 0.190838, 0.189017, 0.188209, 0.190727, 0.190959], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 2, 1, 6, 0, 0, 1, 0, 5, 20, 27, 0, 0, 0, 1, 1, 0, 0]': ([0.211895, 0.207518, 0.183859, 0.18448, 0.185124, 0.185131, 0.18987, 0.185402, 0.186013, 0.190956, 0.191466, 0.190878, 0.18859, 0.185118, 0.184953, 0.185384, 0.185942, 0.190728, 0.191105, 0.190804, 0.189923, 0.180892, 0.184133, 0.185555, 0.190866, 0.190838, 0.189017, 0.188209, 0.190727, 0.190959], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	43
        Max loop nest depth: 	4
        Additions: 		2242
        Multiplications: 	760
        Divisions: 		0
        Logical: 		0
        Reads: 			4975
        Writes: 		1129
        Comparisons:		43
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest49.exe __orio_perftest49.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest49.exe  
Program Test Output: 
{'[0, 2, 0, 6, 0, 6, 1, 0, 5, 8, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.145506}
{'[0, 2, 0, 6, 0, 6, 1, 0, 5, 8, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.145028}
{'[0, 2, 0, 6, 0, 6, 1, 0, 5, 8, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.130765}
{'[0, 2, 0, 6, 0, 6, 1, 0, 5, 8, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.129263}
{'[0, 2, 0, 6, 0, 6, 1, 0, 5, 8, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.12685}
{'[0, 2, 0, 6, 0, 6, 1, 0, 5, 8, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.126932}
{'[0, 2, 0, 6, 0, 6, 1, 0, 5, 8, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.127036}
{'[0, 2, 0, 6, 0, 6, 1, 0, 5, 8, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.127295}
{'[0, 2, 0, 6, 0, 6, 1, 0, 5, 8, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.127092}
{'[0, 2, 0, 6, 0, 6, 1, 0, 5, 8, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.126921}
{'[0, 2, 0, 6, 0, 6, 1, 0, 5, 8, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.127027}
{'[0, 2, 0, 6, 0, 6, 1, 0, 5, 8, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.130505}
{'[0, 2, 0, 6, 0, 6, 1, 0, 5, 8, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.130774}
{'[0, 2, 0, 6, 0, 6, 1, 0, 5, 8, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.1308}
{'[0, 2, 0, 6, 0, 6, 1, 0, 5, 8, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.130791}
{'[0, 2, 0, 6, 0, 6, 1, 0, 5, 8, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.126953}
{'[0, 2, 0, 6, 0, 6, 1, 0, 5, 8, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.129521}
{'[0, 2, 0, 6, 0, 6, 1, 0, 5, 8, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.129272}
{'[0, 2, 0, 6, 0, 6, 1, 0, 5, 8, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.125403}
{'[0, 2, 0, 6, 0, 6, 1, 0, 5, 8, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.127157}
{'[0, 2, 0, 6, 0, 6, 1, 0, 5, 8, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.127046}
{'[0, 2, 0, 6, 0, 6, 1, 0, 5, 8, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.127016}
{'[0, 2, 0, 6, 0, 6, 1, 0, 5, 8, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.127197}
{'[0, 2, 0, 6, 0, 6, 1, 0, 5, 8, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.125188}
{'[0, 2, 0, 6, 0, 6, 1, 0, 5, 8, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.124762}
{'[0, 2, 0, 6, 0, 6, 1, 0, 5, 8, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.127046}
{'[0, 2, 0, 6, 0, 6, 1, 0, 5, 8, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.129673}
{'[0, 2, 0, 6, 0, 6, 1, 0, 5, 8, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.130707}
{'[0, 2, 0, 6, 0, 6, 1, 0, 5, 8, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.128885}
{'[0, 2, 0, 6, 0, 6, 1, 0, 5, 8, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.127112}

out:
 ["{'[0, 2, 0, 6, 0, 6, 1, 0, 5, 8, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.145506}", "{'[0, 2, 0, 6, 0, 6, 1, 0, 5, 8, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.145028}", "{'[0, 2, 0, 6, 0, 6, 1, 0, 5, 8, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.130765}", "{'[0, 2, 0, 6, 0, 6, 1, 0, 5, 8, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.129263}", "{'[0, 2, 0, 6, 0, 6, 1, 0, 5, 8, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.12685}", "{'[0, 2, 0, 6, 0, 6, 1, 0, 5, 8, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.126932}", "{'[0, 2, 0, 6, 0, 6, 1, 0, 5, 8, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.127036}", "{'[0, 2, 0, 6, 0, 6, 1, 0, 5, 8, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.127295}", "{'[0, 2, 0, 6, 0, 6, 1, 0, 5, 8, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.127092}", "{'[0, 2, 0, 6, 0, 6, 1, 0, 5, 8, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.126921}", "{'[0, 2, 0, 6, 0, 6, 1, 0, 5, 8, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.127027}", "{'[0, 2, 0, 6, 0, 6, 1, 0, 5, 8, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.130505}", "{'[0, 2, 0, 6, 0, 6, 1, 0, 5, 8, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.130774}", "{'[0, 2, 0, 6, 0, 6, 1, 0, 5, 8, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.1308}", "{'[0, 2, 0, 6, 0, 6, 1, 0, 5, 8, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.130791}", "{'[0, 2, 0, 6, 0, 6, 1, 0, 5, 8, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.126953}", "{'[0, 2, 0, 6, 0, 6, 1, 0, 5, 8, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.129521}", "{'[0, 2, 0, 6, 0, 6, 1, 0, 5, 8, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.129272}", "{'[0, 2, 0, 6, 0, 6, 1, 0, 5, 8, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.125403}", "{'[0, 2, 0, 6, 0, 6, 1, 0, 5, 8, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.127157}", "{'[0, 2, 0, 6, 0, 6, 1, 0, 5, 8, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.127046}", "{'[0, 2, 0, 6, 0, 6, 1, 0, 5, 8, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.127016}", "{'[0, 2, 0, 6, 0, 6, 1, 0, 5, 8, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.127197}", "{'[0, 2, 0, 6, 0, 6, 1, 0, 5, 8, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.125188}", "{'[0, 2, 0, 6, 0, 6, 1, 0, 5, 8, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.124762}", "{'[0, 2, 0, 6, 0, 6, 1, 0, 5, 8, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.127046}", "{'[0, 2, 0, 6, 0, 6, 1, 0, 5, 8, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.129673}", "{'[0, 2, 0, 6, 0, 6, 1, 0, 5, 8, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.130707}", "{'[0, 2, 0, 6, 0, 6, 1, 0, 5, 8, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.128885}", "{'[0, 2, 0, 6, 0, 6, 1, 0, 5, 8, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.127112}"]
returning from 'run': {'[0, 2, 0, 6, 0, 6, 1, 0, 5, 8, 0, 27, 0, 0, 1, 1, 1, 0]': ([0.145506, 0.145028, 0.130765, 0.129263, 0.12685, 0.126932, 0.127036, 0.127295, 0.127092, 0.126921, 0.127027, 0.130505, 0.130774, 0.1308, 0.130791, 0.126953, 0.129521, 0.129272, 0.125403, 0.127157, 0.127046, 0.127016, 0.127197, 0.125188, 0.124762, 0.127046, 0.129673, 0.130707, 0.128885, 0.127112], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 0, 6, 0, 6, 1, 0, 5, 8, 0, 27, 0, 0, 1, 1, 1, 0]': ([0.145506, 0.145028, 0.130765, 0.129263, 0.12685, 0.126932, 0.127036, 0.127295, 0.127092, 0.126921, 0.127027, 0.130505, 0.130774, 0.1308, 0.130791, 0.126953, 0.129521, 0.129272, 0.125403, 0.127157, 0.127046, 0.127016, 0.127197, 0.125188, 0.124762, 0.127046, 0.129673, 0.130707, 0.128885, 0.127112], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		280
        Multiplications: 	116
        Divisions: 		0
        Logical: 		0
        Reads: 			577
        Writes: 		96
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest50.exe __orio_perftest50.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest50.exe  
Program Test Output: 
{'[0, 2, 1, 0, 0, 6, 0, 0, 5, 0, 21, 1, 0, 2, 0, 1, 0, 0]' : 0.208891}
{'[0, 2, 1, 0, 0, 6, 0, 0, 5, 0, 21, 1, 0, 2, 0, 1, 0, 0]' : 0.208855}
{'[0, 2, 1, 0, 0, 6, 0, 0, 5, 0, 21, 1, 0, 2, 0, 1, 0, 0]' : 0.202516}
{'[0, 2, 1, 0, 0, 6, 0, 0, 5, 0, 21, 1, 0, 2, 0, 1, 0, 0]' : 0.179902}
{'[0, 2, 1, 0, 0, 6, 0, 0, 5, 0, 21, 1, 0, 2, 0, 1, 0, 0]' : 0.179511}
{'[0, 2, 1, 0, 0, 6, 0, 0, 5, 0, 21, 1, 0, 2, 0, 1, 0, 0]' : 0.175446}
{'[0, 2, 1, 0, 0, 6, 0, 0, 5, 0, 21, 1, 0, 2, 0, 1, 0, 0]' : 0.178712}
{'[0, 2, 1, 0, 0, 6, 0, 0, 5, 0, 21, 1, 0, 2, 0, 1, 0, 0]' : 0.179637}
{'[0, 2, 1, 0, 0, 6, 0, 0, 5, 0, 21, 1, 0, 2, 0, 1, 0, 0]' : 0.180015}
{'[0, 2, 1, 0, 0, 6, 0, 0, 5, 0, 21, 1, 0, 2, 0, 1, 0, 0]' : 0.179669}
{'[0, 2, 1, 0, 0, 6, 0, 0, 5, 0, 21, 1, 0, 2, 0, 1, 0, 0]' : 0.179649}
{'[0, 2, 1, 0, 0, 6, 0, 0, 5, 0, 21, 1, 0, 2, 0, 1, 0, 0]' : 0.179675}
{'[0, 2, 1, 0, 0, 6, 0, 0, 5, 0, 21, 1, 0, 2, 0, 1, 0, 0]' : 0.179696}
{'[0, 2, 1, 0, 0, 6, 0, 0, 5, 0, 21, 1, 0, 2, 0, 1, 0, 0]' : 0.179692}
{'[0, 2, 1, 0, 0, 6, 0, 0, 5, 0, 21, 1, 0, 2, 0, 1, 0, 0]' : 0.182588}
{'[0, 2, 1, 0, 0, 6, 0, 0, 5, 0, 21, 1, 0, 2, 0, 1, 0, 0]' : 0.185458}
{'[0, 2, 1, 0, 0, 6, 0, 0, 5, 0, 21, 1, 0, 2, 0, 1, 0, 0]' : 0.185428}
{'[0, 2, 1, 0, 0, 6, 0, 0, 5, 0, 21, 1, 0, 2, 0, 1, 0, 0]' : 0.185458}
{'[0, 2, 1, 0, 0, 6, 0, 0, 5, 0, 21, 1, 0, 2, 0, 1, 0, 0]' : 0.185451}
{'[0, 2, 1, 0, 0, 6, 0, 0, 5, 0, 21, 1, 0, 2, 0, 1, 0, 0]' : 0.18549}
{'[0, 2, 1, 0, 0, 6, 0, 0, 5, 0, 21, 1, 0, 2, 0, 1, 0, 0]' : 0.185464}
{'[0, 2, 1, 0, 0, 6, 0, 0, 5, 0, 21, 1, 0, 2, 0, 1, 0, 0]' : 0.185412}
{'[0, 2, 1, 0, 0, 6, 0, 0, 5, 0, 21, 1, 0, 2, 0, 1, 0, 0]' : 0.184898}
{'[0, 2, 1, 0, 0, 6, 0, 0, 5, 0, 21, 1, 0, 2, 0, 1, 0, 0]' : 0.179588}
{'[0, 2, 1, 0, 0, 6, 0, 0, 5, 0, 21, 1, 0, 2, 0, 1, 0, 0]' : 0.179651}
{'[0, 2, 1, 0, 0, 6, 0, 0, 5, 0, 21, 1, 0, 2, 0, 1, 0, 0]' : 0.179784}
{'[0, 2, 1, 0, 0, 6, 0, 0, 5, 0, 21, 1, 0, 2, 0, 1, 0, 0]' : 0.179515}
{'[0, 2, 1, 0, 0, 6, 0, 0, 5, 0, 21, 1, 0, 2, 0, 1, 0, 0]' : 0.175518}
{'[0, 2, 1, 0, 0, 6, 0, 0, 5, 0, 21, 1, 0, 2, 0, 1, 0, 0]' : 0.178601}
{'[0, 2, 1, 0, 0, 6, 0, 0, 5, 0, 21, 1, 0, 2, 0, 1, 0, 0]' : 0.179423}

out:
 ["{'[0, 2, 1, 0, 0, 6, 0, 0, 5, 0, 21, 1, 0, 2, 0, 1, 0, 0]' : 0.208891}", "{'[0, 2, 1, 0, 0, 6, 0, 0, 5, 0, 21, 1, 0, 2, 0, 1, 0, 0]' : 0.208855}", "{'[0, 2, 1, 0, 0, 6, 0, 0, 5, 0, 21, 1, 0, 2, 0, 1, 0, 0]' : 0.202516}", "{'[0, 2, 1, 0, 0, 6, 0, 0, 5, 0, 21, 1, 0, 2, 0, 1, 0, 0]' : 0.179902}", "{'[0, 2, 1, 0, 0, 6, 0, 0, 5, 0, 21, 1, 0, 2, 0, 1, 0, 0]' : 0.179511}", "{'[0, 2, 1, 0, 0, 6, 0, 0, 5, 0, 21, 1, 0, 2, 0, 1, 0, 0]' : 0.175446}", "{'[0, 2, 1, 0, 0, 6, 0, 0, 5, 0, 21, 1, 0, 2, 0, 1, 0, 0]' : 0.178712}", "{'[0, 2, 1, 0, 0, 6, 0, 0, 5, 0, 21, 1, 0, 2, 0, 1, 0, 0]' : 0.179637}", "{'[0, 2, 1, 0, 0, 6, 0, 0, 5, 0, 21, 1, 0, 2, 0, 1, 0, 0]' : 0.180015}", "{'[0, 2, 1, 0, 0, 6, 0, 0, 5, 0, 21, 1, 0, 2, 0, 1, 0, 0]' : 0.179669}", "{'[0, 2, 1, 0, 0, 6, 0, 0, 5, 0, 21, 1, 0, 2, 0, 1, 0, 0]' : 0.179649}", "{'[0, 2, 1, 0, 0, 6, 0, 0, 5, 0, 21, 1, 0, 2, 0, 1, 0, 0]' : 0.179675}", "{'[0, 2, 1, 0, 0, 6, 0, 0, 5, 0, 21, 1, 0, 2, 0, 1, 0, 0]' : 0.179696}", "{'[0, 2, 1, 0, 0, 6, 0, 0, 5, 0, 21, 1, 0, 2, 0, 1, 0, 0]' : 0.179692}", "{'[0, 2, 1, 0, 0, 6, 0, 0, 5, 0, 21, 1, 0, 2, 0, 1, 0, 0]' : 0.182588}", "{'[0, 2, 1, 0, 0, 6, 0, 0, 5, 0, 21, 1, 0, 2, 0, 1, 0, 0]' : 0.185458}", "{'[0, 2, 1, 0, 0, 6, 0, 0, 5, 0, 21, 1, 0, 2, 0, 1, 0, 0]' : 0.185428}", "{'[0, 2, 1, 0, 0, 6, 0, 0, 5, 0, 21, 1, 0, 2, 0, 1, 0, 0]' : 0.185458}", "{'[0, 2, 1, 0, 0, 6, 0, 0, 5, 0, 21, 1, 0, 2, 0, 1, 0, 0]' : 0.185451}", "{'[0, 2, 1, 0, 0, 6, 0, 0, 5, 0, 21, 1, 0, 2, 0, 1, 0, 0]' : 0.18549}", "{'[0, 2, 1, 0, 0, 6, 0, 0, 5, 0, 21, 1, 0, 2, 0, 1, 0, 0]' : 0.185464}", "{'[0, 2, 1, 0, 0, 6, 0, 0, 5, 0, 21, 1, 0, 2, 0, 1, 0, 0]' : 0.185412}", "{'[0, 2, 1, 0, 0, 6, 0, 0, 5, 0, 21, 1, 0, 2, 0, 1, 0, 0]' : 0.184898}", "{'[0, 2, 1, 0, 0, 6, 0, 0, 5, 0, 21, 1, 0, 2, 0, 1, 0, 0]' : 0.179588}", "{'[0, 2, 1, 0, 0, 6, 0, 0, 5, 0, 21, 1, 0, 2, 0, 1, 0, 0]' : 0.179651}", "{'[0, 2, 1, 0, 0, 6, 0, 0, 5, 0, 21, 1, 0, 2, 0, 1, 0, 0]' : 0.179784}", "{'[0, 2, 1, 0, 0, 6, 0, 0, 5, 0, 21, 1, 0, 2, 0, 1, 0, 0]' : 0.179515}", "{'[0, 2, 1, 0, 0, 6, 0, 0, 5, 0, 21, 1, 0, 2, 0, 1, 0, 0]' : 0.175518}", "{'[0, 2, 1, 0, 0, 6, 0, 0, 5, 0, 21, 1, 0, 2, 0, 1, 0, 0]' : 0.178601}", "{'[0, 2, 1, 0, 0, 6, 0, 0, 5, 0, 21, 1, 0, 2, 0, 1, 0, 0]' : 0.179423}"]
returning from 'run': {'[0, 2, 1, 0, 0, 6, 0, 0, 5, 0, 21, 1, 0, 2, 0, 1, 0, 0]': ([0.208891, 0.208855, 0.202516, 0.179902, 0.179511, 0.175446, 0.178712, 0.179637, 0.180015, 0.179669, 0.179649, 0.179675, 0.179696, 0.179692, 0.182588, 0.185458, 0.185428, 0.185458, 0.185451, 0.18549, 0.185464, 0.185412, 0.184898, 0.179588, 0.179651, 0.179784, 0.179515, 0.175518, 0.178601, 0.179423], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 1, 0, 0, 6, 0, 0, 5, 0, 21, 1, 0, 2, 0, 1, 0, 0]': ([0.208891, 0.208855, 0.202516, 0.179902, 0.179511, 0.175446, 0.178712, 0.179637, 0.180015, 0.179669, 0.179649, 0.179675, 0.179696, 0.179692, 0.182588, 0.185458, 0.185428, 0.185458, 0.185451, 0.18549, 0.185464, 0.185412, 0.184898, 0.179588, 0.179651, 0.179784, 0.179515, 0.175518, 0.178601, 0.179423], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	47
        Max loop nest depth: 	5
        Additions: 		7720
        Multiplications: 	3720
        Divisions: 		0
        Logical: 		0
        Reads: 			14263
        Writes: 		2229
        Comparisons:		47
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest51.exe __orio_perftest51.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest51.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest51.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest51.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest51.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = iii
Code stats:
        Number of loops: 	27
        Max loop nest depth: 	4
        Additions: 		1184
        Multiplications: 	518
        Divisions: 		0
        Logical: 		0
        Reads: 			2253
        Writes: 		377
        Comparisons:		27
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest52.exe __orio_perftest52.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest52.exe  
Program Test Output: 
{'[6, 2, 0, 4, 0, 3, 0, 0, 5, 5, 2, 0, 0, 2, 0, 1, 0, 0]' : 0.132688}
{'[6, 2, 0, 4, 0, 3, 0, 0, 5, 5, 2, 0, 0, 2, 0, 1, 0, 0]' : 0.132747}
{'[6, 2, 0, 4, 0, 3, 0, 0, 5, 5, 2, 0, 0, 2, 0, 1, 0, 0]' : 0.132126}
{'[6, 2, 0, 4, 0, 3, 0, 0, 5, 5, 2, 0, 0, 2, 0, 1, 0, 0]' : 0.11656}
{'[6, 2, 0, 4, 0, 3, 0, 0, 5, 5, 2, 0, 0, 2, 0, 1, 0, 0]' : 0.115162}
{'[6, 2, 0, 4, 0, 3, 0, 0, 5, 5, 2, 0, 0, 2, 0, 1, 0, 0]' : 0.114913}
{'[6, 2, 0, 4, 0, 3, 0, 0, 5, 5, 2, 0, 0, 2, 0, 1, 0, 0]' : 0.115787}
{'[6, 2, 0, 4, 0, 3, 0, 0, 5, 5, 2, 0, 0, 2, 0, 1, 0, 0]' : 0.11895}
{'[6, 2, 0, 4, 0, 3, 0, 0, 5, 5, 2, 0, 0, 2, 0, 1, 0, 0]' : 0.118546}
{'[6, 2, 0, 4, 0, 3, 0, 0, 5, 5, 2, 0, 0, 2, 0, 1, 0, 0]' : 0.118488}
{'[6, 2, 0, 4, 0, 3, 0, 0, 5, 5, 2, 0, 0, 2, 0, 1, 0, 0]' : 0.118667}
{'[6, 2, 0, 4, 0, 3, 0, 0, 5, 5, 2, 0, 0, 2, 0, 1, 0, 0]' : 0.118426}
{'[6, 2, 0, 4, 0, 3, 0, 0, 5, 5, 2, 0, 0, 2, 0, 1, 0, 0]' : 0.118063}
{'[6, 2, 0, 4, 0, 3, 0, 0, 5, 5, 2, 0, 0, 2, 0, 1, 0, 0]' : 0.115034}
{'[6, 2, 0, 4, 0, 3, 0, 0, 5, 5, 2, 0, 0, 2, 0, 1, 0, 0]' : 0.114997}
{'[6, 2, 0, 4, 0, 3, 0, 0, 5, 5, 2, 0, 0, 2, 0, 1, 0, 0]' : 0.114955}
{'[6, 2, 0, 4, 0, 3, 0, 0, 5, 5, 2, 0, 0, 2, 0, 1, 0, 0]' : 0.115274}
{'[6, 2, 0, 4, 0, 3, 0, 0, 5, 5, 2, 0, 0, 2, 0, 1, 0, 0]' : 0.116592}
{'[6, 2, 0, 4, 0, 3, 0, 0, 5, 5, 2, 0, 0, 2, 0, 1, 0, 0]' : 0.118492}
{'[6, 2, 0, 4, 0, 3, 0, 0, 5, 5, 2, 0, 0, 2, 0, 1, 0, 0]' : 0.118853}
{'[6, 2, 0, 4, 0, 3, 0, 0, 5, 5, 2, 0, 0, 2, 0, 1, 0, 0]' : 0.118508}
{'[6, 2, 0, 4, 0, 3, 0, 0, 5, 5, 2, 0, 0, 2, 0, 1, 0, 0]' : 0.118496}
{'[6, 2, 0, 4, 0, 3, 0, 0, 5, 5, 2, 0, 0, 2, 0, 1, 0, 0]' : 0.118444}
{'[6, 2, 0, 4, 0, 3, 0, 0, 5, 5, 2, 0, 0, 2, 0, 1, 0, 0]' : 0.114569}
{'[6, 2, 0, 4, 0, 3, 0, 0, 5, 5, 2, 0, 0, 2, 0, 1, 0, 0]' : 0.118884}
{'[6, 2, 0, 4, 0, 3, 0, 0, 5, 5, 2, 0, 0, 2, 0, 1, 0, 0]' : 0.118504}
{'[6, 2, 0, 4, 0, 3, 0, 0, 5, 5, 2, 0, 0, 2, 0, 1, 0, 0]' : 0.118411}
{'[6, 2, 0, 4, 0, 3, 0, 0, 5, 5, 2, 0, 0, 2, 0, 1, 0, 0]' : 0.118506}
{'[6, 2, 0, 4, 0, 3, 0, 0, 5, 5, 2, 0, 0, 2, 0, 1, 0, 0]' : 0.118382}
{'[6, 2, 0, 4, 0, 3, 0, 0, 5, 5, 2, 0, 0, 2, 0, 1, 0, 0]' : 0.118447}

out:
 ["{'[6, 2, 0, 4, 0, 3, 0, 0, 5, 5, 2, 0, 0, 2, 0, 1, 0, 0]' : 0.132688}", "{'[6, 2, 0, 4, 0, 3, 0, 0, 5, 5, 2, 0, 0, 2, 0, 1, 0, 0]' : 0.132747}", "{'[6, 2, 0, 4, 0, 3, 0, 0, 5, 5, 2, 0, 0, 2, 0, 1, 0, 0]' : 0.132126}", "{'[6, 2, 0, 4, 0, 3, 0, 0, 5, 5, 2, 0, 0, 2, 0, 1, 0, 0]' : 0.11656}", "{'[6, 2, 0, 4, 0, 3, 0, 0, 5, 5, 2, 0, 0, 2, 0, 1, 0, 0]' : 0.115162}", "{'[6, 2, 0, 4, 0, 3, 0, 0, 5, 5, 2, 0, 0, 2, 0, 1, 0, 0]' : 0.114913}", "{'[6, 2, 0, 4, 0, 3, 0, 0, 5, 5, 2, 0, 0, 2, 0, 1, 0, 0]' : 0.115787}", "{'[6, 2, 0, 4, 0, 3, 0, 0, 5, 5, 2, 0, 0, 2, 0, 1, 0, 0]' : 0.11895}", "{'[6, 2, 0, 4, 0, 3, 0, 0, 5, 5, 2, 0, 0, 2, 0, 1, 0, 0]' : 0.118546}", "{'[6, 2, 0, 4, 0, 3, 0, 0, 5, 5, 2, 0, 0, 2, 0, 1, 0, 0]' : 0.118488}", "{'[6, 2, 0, 4, 0, 3, 0, 0, 5, 5, 2, 0, 0, 2, 0, 1, 0, 0]' : 0.118667}", "{'[6, 2, 0, 4, 0, 3, 0, 0, 5, 5, 2, 0, 0, 2, 0, 1, 0, 0]' : 0.118426}", "{'[6, 2, 0, 4, 0, 3, 0, 0, 5, 5, 2, 0, 0, 2, 0, 1, 0, 0]' : 0.118063}", "{'[6, 2, 0, 4, 0, 3, 0, 0, 5, 5, 2, 0, 0, 2, 0, 1, 0, 0]' : 0.115034}", "{'[6, 2, 0, 4, 0, 3, 0, 0, 5, 5, 2, 0, 0, 2, 0, 1, 0, 0]' : 0.114997}", "{'[6, 2, 0, 4, 0, 3, 0, 0, 5, 5, 2, 0, 0, 2, 0, 1, 0, 0]' : 0.114955}", "{'[6, 2, 0, 4, 0, 3, 0, 0, 5, 5, 2, 0, 0, 2, 0, 1, 0, 0]' : 0.115274}", "{'[6, 2, 0, 4, 0, 3, 0, 0, 5, 5, 2, 0, 0, 2, 0, 1, 0, 0]' : 0.116592}", "{'[6, 2, 0, 4, 0, 3, 0, 0, 5, 5, 2, 0, 0, 2, 0, 1, 0, 0]' : 0.118492}", "{'[6, 2, 0, 4, 0, 3, 0, 0, 5, 5, 2, 0, 0, 2, 0, 1, 0, 0]' : 0.118853}", "{'[6, 2, 0, 4, 0, 3, 0, 0, 5, 5, 2, 0, 0, 2, 0, 1, 0, 0]' : 0.118508}", "{'[6, 2, 0, 4, 0, 3, 0, 0, 5, 5, 2, 0, 0, 2, 0, 1, 0, 0]' : 0.118496}", "{'[6, 2, 0, 4, 0, 3, 0, 0, 5, 5, 2, 0, 0, 2, 0, 1, 0, 0]' : 0.118444}", "{'[6, 2, 0, 4, 0, 3, 0, 0, 5, 5, 2, 0, 0, 2, 0, 1, 0, 0]' : 0.114569}", "{'[6, 2, 0, 4, 0, 3, 0, 0, 5, 5, 2, 0, 0, 2, 0, 1, 0, 0]' : 0.118884}", "{'[6, 2, 0, 4, 0, 3, 0, 0, 5, 5, 2, 0, 0, 2, 0, 1, 0, 0]' : 0.118504}", "{'[6, 2, 0, 4, 0, 3, 0, 0, 5, 5, 2, 0, 0, 2, 0, 1, 0, 0]' : 0.118411}", "{'[6, 2, 0, 4, 0, 3, 0, 0, 5, 5, 2, 0, 0, 2, 0, 1, 0, 0]' : 0.118506}", "{'[6, 2, 0, 4, 0, 3, 0, 0, 5, 5, 2, 0, 0, 2, 0, 1, 0, 0]' : 0.118382}", "{'[6, 2, 0, 4, 0, 3, 0, 0, 5, 5, 2, 0, 0, 2, 0, 1, 0, 0]' : 0.118447}"]
returning from 'run': {'[6, 2, 0, 4, 0, 3, 0, 0, 5, 5, 2, 0, 0, 2, 0, 1, 0, 0]': ([0.132688, 0.132747, 0.132126, 0.11656, 0.115162, 0.114913, 0.115787, 0.11895, 0.118546, 0.118488, 0.118667, 0.118426, 0.118063, 0.115034, 0.114997, 0.114955, 0.115274, 0.116592, 0.118492, 0.118853, 0.118508, 0.118496, 0.118444, 0.114569, 0.118884, 0.118504, 0.118411, 0.118506, 0.118382, 0.118447], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 2, 0, 4, 0, 3, 0, 0, 5, 5, 2, 0, 0, 2, 0, 1, 0, 0]': ([0.132688, 0.132747, 0.132126, 0.11656, 0.115162, 0.114913, 0.115787, 0.11895, 0.118546, 0.118488, 0.118667, 0.118426, 0.118063, 0.115034, 0.114997, 0.114955, 0.115274, 0.116592, 0.118492, 0.118853, 0.118508, 0.118496, 0.118444, 0.114569, 0.118884, 0.118504, 0.118411, 0.118506, 0.118382, 0.118447], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		153
        Multiplications: 	46
        Divisions: 		0
        Logical: 		0
        Reads: 			372
        Writes: 		89
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest53.exe __orio_perftest53.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest53.exe  
Program Test Output: 
{'[0, 2, 6, 1, 0, 4, 1, 0, 5, 0, 15, 5, 0, 1, 1, 1, 1, 0]' : 0.190297}
{'[0, 2, 6, 1, 0, 4, 1, 0, 5, 0, 15, 5, 0, 1, 1, 1, 1, 0]' : 0.19012}
{'[0, 2, 6, 1, 0, 4, 1, 0, 5, 0, 15, 5, 0, 1, 1, 1, 1, 0]' : 0.167031}
{'[0, 2, 6, 1, 0, 4, 1, 0, 5, 0, 15, 5, 0, 1, 1, 1, 1, 0]' : 0.15838}
{'[0, 2, 6, 1, 0, 4, 1, 0, 5, 0, 15, 5, 0, 1, 1, 1, 1, 0]' : 0.158241}
{'[0, 2, 6, 1, 0, 4, 1, 0, 5, 0, 15, 5, 0, 1, 1, 1, 1, 0]' : 0.161244}
{'[0, 2, 6, 1, 0, 4, 1, 0, 5, 0, 15, 5, 0, 1, 1, 1, 1, 0]' : 0.164049}
{'[0, 2, 6, 1, 0, 4, 1, 0, 5, 0, 15, 5, 0, 1, 1, 1, 1, 0]' : 0.163675}
{'[0, 2, 6, 1, 0, 4, 1, 0, 5, 0, 15, 5, 0, 1, 1, 1, 1, 0]' : 0.163958}
{'[0, 2, 6, 1, 0, 4, 1, 0, 5, 0, 15, 5, 0, 1, 1, 1, 1, 0]' : 0.159437}
{'[0, 2, 6, 1, 0, 4, 1, 0, 5, 0, 15, 5, 0, 1, 1, 1, 1, 0]' : 0.158701}
{'[0, 2, 6, 1, 0, 4, 1, 0, 5, 0, 15, 5, 0, 1, 1, 1, 1, 0]' : 0.158827}
{'[0, 2, 6, 1, 0, 4, 1, 0, 5, 0, 15, 5, 0, 1, 1, 1, 1, 0]' : 0.158926}
{'[0, 2, 6, 1, 0, 4, 1, 0, 5, 0, 15, 5, 0, 1, 1, 1, 1, 0]' : 0.159198}
{'[0, 2, 6, 1, 0, 4, 1, 0, 5, 0, 15, 5, 0, 1, 1, 1, 1, 0]' : 0.159492}
{'[0, 2, 6, 1, 0, 4, 1, 0, 5, 0, 15, 5, 0, 1, 1, 1, 1, 0]' : 0.16063}
{'[0, 2, 6, 1, 0, 4, 1, 0, 5, 0, 15, 5, 0, 1, 1, 1, 1, 0]' : 0.1585}
{'[0, 2, 6, 1, 0, 4, 1, 0, 5, 0, 15, 5, 0, 1, 1, 1, 1, 0]' : 0.158628}
{'[0, 2, 6, 1, 0, 4, 1, 0, 5, 0, 15, 5, 0, 1, 1, 1, 1, 0]' : 0.158714}
{'[0, 2, 6, 1, 0, 4, 1, 0, 5, 0, 15, 5, 0, 1, 1, 1, 1, 0]' : 0.159083}
{'[0, 2, 6, 1, 0, 4, 1, 0, 5, 0, 15, 5, 0, 1, 1, 1, 1, 0]' : 0.159063}
{'[0, 2, 6, 1, 0, 4, 1, 0, 5, 0, 15, 5, 0, 1, 1, 1, 1, 0]' : 0.160025}
{'[0, 2, 6, 1, 0, 4, 1, 0, 5, 0, 15, 5, 0, 1, 1, 1, 1, 0]' : 0.158416}
{'[0, 2, 6, 1, 0, 4, 1, 0, 5, 0, 15, 5, 0, 1, 1, 1, 1, 0]' : 0.158349}
{'[0, 2, 6, 1, 0, 4, 1, 0, 5, 0, 15, 5, 0, 1, 1, 1, 1, 0]' : 0.158821}
{'[0, 2, 6, 1, 0, 4, 1, 0, 5, 0, 15, 5, 0, 1, 1, 1, 1, 0]' : 0.15883}
{'[0, 2, 6, 1, 0, 4, 1, 0, 5, 0, 15, 5, 0, 1, 1, 1, 1, 0]' : 0.159306}
{'[0, 2, 6, 1, 0, 4, 1, 0, 5, 0, 15, 5, 0, 1, 1, 1, 1, 0]' : 0.162231}
{'[0, 2, 6, 1, 0, 4, 1, 0, 5, 0, 15, 5, 0, 1, 1, 1, 1, 0]' : 0.164047}
{'[0, 2, 6, 1, 0, 4, 1, 0, 5, 0, 15, 5, 0, 1, 1, 1, 1, 0]' : 0.163738}

out:
 ["{'[0, 2, 6, 1, 0, 4, 1, 0, 5, 0, 15, 5, 0, 1, 1, 1, 1, 0]' : 0.190297}", "{'[0, 2, 6, 1, 0, 4, 1, 0, 5, 0, 15, 5, 0, 1, 1, 1, 1, 0]' : 0.19012}", "{'[0, 2, 6, 1, 0, 4, 1, 0, 5, 0, 15, 5, 0, 1, 1, 1, 1, 0]' : 0.167031}", "{'[0, 2, 6, 1, 0, 4, 1, 0, 5, 0, 15, 5, 0, 1, 1, 1, 1, 0]' : 0.15838}", "{'[0, 2, 6, 1, 0, 4, 1, 0, 5, 0, 15, 5, 0, 1, 1, 1, 1, 0]' : 0.158241}", "{'[0, 2, 6, 1, 0, 4, 1, 0, 5, 0, 15, 5, 0, 1, 1, 1, 1, 0]' : 0.161244}", "{'[0, 2, 6, 1, 0, 4, 1, 0, 5, 0, 15, 5, 0, 1, 1, 1, 1, 0]' : 0.164049}", "{'[0, 2, 6, 1, 0, 4, 1, 0, 5, 0, 15, 5, 0, 1, 1, 1, 1, 0]' : 0.163675}", "{'[0, 2, 6, 1, 0, 4, 1, 0, 5, 0, 15, 5, 0, 1, 1, 1, 1, 0]' : 0.163958}", "{'[0, 2, 6, 1, 0, 4, 1, 0, 5, 0, 15, 5, 0, 1, 1, 1, 1, 0]' : 0.159437}", "{'[0, 2, 6, 1, 0, 4, 1, 0, 5, 0, 15, 5, 0, 1, 1, 1, 1, 0]' : 0.158701}", "{'[0, 2, 6, 1, 0, 4, 1, 0, 5, 0, 15, 5, 0, 1, 1, 1, 1, 0]' : 0.158827}", "{'[0, 2, 6, 1, 0, 4, 1, 0, 5, 0, 15, 5, 0, 1, 1, 1, 1, 0]' : 0.158926}", "{'[0, 2, 6, 1, 0, 4, 1, 0, 5, 0, 15, 5, 0, 1, 1, 1, 1, 0]' : 0.159198}", "{'[0, 2, 6, 1, 0, 4, 1, 0, 5, 0, 15, 5, 0, 1, 1, 1, 1, 0]' : 0.159492}", "{'[0, 2, 6, 1, 0, 4, 1, 0, 5, 0, 15, 5, 0, 1, 1, 1, 1, 0]' : 0.16063}", "{'[0, 2, 6, 1, 0, 4, 1, 0, 5, 0, 15, 5, 0, 1, 1, 1, 1, 0]' : 0.1585}", "{'[0, 2, 6, 1, 0, 4, 1, 0, 5, 0, 15, 5, 0, 1, 1, 1, 1, 0]' : 0.158628}", "{'[0, 2, 6, 1, 0, 4, 1, 0, 5, 0, 15, 5, 0, 1, 1, 1, 1, 0]' : 0.158714}", "{'[0, 2, 6, 1, 0, 4, 1, 0, 5, 0, 15, 5, 0, 1, 1, 1, 1, 0]' : 0.159083}", "{'[0, 2, 6, 1, 0, 4, 1, 0, 5, 0, 15, 5, 0, 1, 1, 1, 1, 0]' : 0.159063}", "{'[0, 2, 6, 1, 0, 4, 1, 0, 5, 0, 15, 5, 0, 1, 1, 1, 1, 0]' : 0.160025}", "{'[0, 2, 6, 1, 0, 4, 1, 0, 5, 0, 15, 5, 0, 1, 1, 1, 1, 0]' : 0.158416}", "{'[0, 2, 6, 1, 0, 4, 1, 0, 5, 0, 15, 5, 0, 1, 1, 1, 1, 0]' : 0.158349}", "{'[0, 2, 6, 1, 0, 4, 1, 0, 5, 0, 15, 5, 0, 1, 1, 1, 1, 0]' : 0.158821}", "{'[0, 2, 6, 1, 0, 4, 1, 0, 5, 0, 15, 5, 0, 1, 1, 1, 1, 0]' : 0.15883}", "{'[0, 2, 6, 1, 0, 4, 1, 0, 5, 0, 15, 5, 0, 1, 1, 1, 1, 0]' : 0.159306}", "{'[0, 2, 6, 1, 0, 4, 1, 0, 5, 0, 15, 5, 0, 1, 1, 1, 1, 0]' : 0.162231}", "{'[0, 2, 6, 1, 0, 4, 1, 0, 5, 0, 15, 5, 0, 1, 1, 1, 1, 0]' : 0.164047}", "{'[0, 2, 6, 1, 0, 4, 1, 0, 5, 0, 15, 5, 0, 1, 1, 1, 1, 0]' : 0.163738}"]
returning from 'run': {'[0, 2, 6, 1, 0, 4, 1, 0, 5, 0, 15, 5, 0, 1, 1, 1, 1, 0]': ([0.190297, 0.19012, 0.167031, 0.15838, 0.158241, 0.161244, 0.164049, 0.163675, 0.163958, 0.159437, 0.158701, 0.158827, 0.158926, 0.159198, 0.159492, 0.16063, 0.1585, 0.158628, 0.158714, 0.159083, 0.159063, 0.160025, 0.158416, 0.158349, 0.158821, 0.15883, 0.159306, 0.162231, 0.164047, 0.163738], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 6, 1, 0, 4, 1, 0, 5, 0, 15, 5, 0, 1, 1, 1, 1, 0]': ([0.190297, 0.19012, 0.167031, 0.15838, 0.158241, 0.161244, 0.164049, 0.163675, 0.163958, 0.159437, 0.158701, 0.158827, 0.158926, 0.159198, 0.159492, 0.16063, 0.1585, 0.158628, 0.158714, 0.159083, 0.159063, 0.160025, 0.158416, 0.158349, 0.158821, 0.15883, 0.159306, 0.162231, 0.164047, 0.163738], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	73
        Max loop nest depth: 	5
        Additions: 		8702
        Multiplications: 	3422
        Divisions: 		0
        Logical: 		0
        Reads: 			17725
        Writes: 		3588
        Comparisons:		73
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest54.exe __orio_perftest54.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest54.exe  
Program Test Output: 
{'[0, 2, 1, 6, 0, 2, 0, 0, 5, 27, 0, 24, 0, 0, 2, 1, 0, 0]' : 0.23197}
{'[0, 2, 1, 6, 0, 2, 0, 0, 5, 27, 0, 24, 0, 0, 2, 1, 0, 0]' : 0.215921}
{'[0, 2, 1, 6, 0, 2, 0, 0, 5, 27, 0, 24, 0, 0, 2, 1, 0, 0]' : 0.20417}
{'[0, 2, 1, 6, 0, 2, 0, 0, 5, 27, 0, 24, 0, 0, 2, 1, 0, 0]' : 0.205996}
{'[0, 2, 1, 6, 0, 2, 0, 0, 5, 27, 0, 24, 0, 0, 2, 1, 0, 0]' : 0.205706}
{'[0, 2, 1, 6, 0, 2, 0, 0, 5, 27, 0, 24, 0, 0, 2, 1, 0, 0]' : 0.20905}
{'[0, 2, 1, 6, 0, 2, 0, 0, 5, 27, 0, 24, 0, 0, 2, 1, 0, 0]' : 0.200604}
{'[0, 2, 1, 6, 0, 2, 0, 0, 5, 27, 0, 24, 0, 0, 2, 1, 0, 0]' : 0.202891}
{'[0, 2, 1, 6, 0, 2, 0, 0, 5, 27, 0, 24, 0, 0, 2, 1, 0, 0]' : 0.206071}
{'[0, 2, 1, 6, 0, 2, 0, 0, 5, 27, 0, 24, 0, 0, 2, 1, 0, 0]' : 0.205797}
{'[0, 2, 1, 6, 0, 2, 0, 0, 5, 27, 0, 24, 0, 0, 2, 1, 0, 0]' : 0.207857}
{'[0, 2, 1, 6, 0, 2, 0, 0, 5, 27, 0, 24, 0, 0, 2, 1, 0, 0]' : 0.205772}
{'[0, 2, 1, 6, 0, 2, 0, 0, 5, 27, 0, 24, 0, 0, 2, 1, 0, 0]' : 0.205894}
{'[0, 2, 1, 6, 0, 2, 0, 0, 5, 27, 0, 24, 0, 0, 2, 1, 0, 0]' : 0.206178}
{'[0, 2, 1, 6, 0, 2, 0, 0, 5, 27, 0, 24, 0, 0, 2, 1, 0, 0]' : 0.20735}
{'[0, 2, 1, 6, 0, 2, 0, 0, 5, 27, 0, 24, 0, 0, 2, 1, 0, 0]' : 0.20579}
{'[0, 2, 1, 6, 0, 2, 0, 0, 5, 27, 0, 24, 0, 0, 2, 1, 0, 0]' : 0.205643}
{'[0, 2, 1, 6, 0, 2, 0, 0, 5, 27, 0, 24, 0, 0, 2, 1, 0, 0]' : 0.206019}
{'[0, 2, 1, 6, 0, 2, 0, 0, 5, 27, 0, 24, 0, 0, 2, 1, 0, 0]' : 0.205598}
{'[0, 2, 1, 6, 0, 2, 0, 0, 5, 27, 0, 24, 0, 0, 2, 1, 0, 0]' : 0.20667}
{'[0, 2, 1, 6, 0, 2, 0, 0, 5, 27, 0, 24, 0, 0, 2, 1, 0, 0]' : 0.20364}
{'[0, 2, 1, 6, 0, 2, 0, 0, 5, 27, 0, 24, 0, 0, 2, 1, 0, 0]' : 0.201214}
{'[0, 2, 1, 6, 0, 2, 0, 0, 5, 27, 0, 24, 0, 0, 2, 1, 0, 0]' : 0.205581}
{'[0, 2, 1, 6, 0, 2, 0, 0, 5, 27, 0, 24, 0, 0, 2, 1, 0, 0]' : 0.205962}
{'[0, 2, 1, 6, 0, 2, 0, 0, 5, 27, 0, 24, 0, 0, 2, 1, 0, 0]' : 0.206548}
{'[0, 2, 1, 6, 0, 2, 0, 0, 5, 27, 0, 24, 0, 0, 2, 1, 0, 0]' : 0.206148}
{'[0, 2, 1, 6, 0, 2, 0, 0, 5, 27, 0, 24, 0, 0, 2, 1, 0, 0]' : 0.205767}
{'[0, 2, 1, 6, 0, 2, 0, 0, 5, 27, 0, 24, 0, 0, 2, 1, 0, 0]' : 0.206103}
{'[0, 2, 1, 6, 0, 2, 0, 0, 5, 27, 0, 24, 0, 0, 2, 1, 0, 0]' : 0.206857}
{'[0, 2, 1, 6, 0, 2, 0, 0, 5, 27, 0, 24, 0, 0, 2, 1, 0, 0]' : 0.211811}

out:
 ["{'[0, 2, 1, 6, 0, 2, 0, 0, 5, 27, 0, 24, 0, 0, 2, 1, 0, 0]' : 0.23197}", "{'[0, 2, 1, 6, 0, 2, 0, 0, 5, 27, 0, 24, 0, 0, 2, 1, 0, 0]' : 0.215921}", "{'[0, 2, 1, 6, 0, 2, 0, 0, 5, 27, 0, 24, 0, 0, 2, 1, 0, 0]' : 0.20417}", "{'[0, 2, 1, 6, 0, 2, 0, 0, 5, 27, 0, 24, 0, 0, 2, 1, 0, 0]' : 0.205996}", "{'[0, 2, 1, 6, 0, 2, 0, 0, 5, 27, 0, 24, 0, 0, 2, 1, 0, 0]' : 0.205706}", "{'[0, 2, 1, 6, 0, 2, 0, 0, 5, 27, 0, 24, 0, 0, 2, 1, 0, 0]' : 0.20905}", "{'[0, 2, 1, 6, 0, 2, 0, 0, 5, 27, 0, 24, 0, 0, 2, 1, 0, 0]' : 0.200604}", "{'[0, 2, 1, 6, 0, 2, 0, 0, 5, 27, 0, 24, 0, 0, 2, 1, 0, 0]' : 0.202891}", "{'[0, 2, 1, 6, 0, 2, 0, 0, 5, 27, 0, 24, 0, 0, 2, 1, 0, 0]' : 0.206071}", "{'[0, 2, 1, 6, 0, 2, 0, 0, 5, 27, 0, 24, 0, 0, 2, 1, 0, 0]' : 0.205797}", "{'[0, 2, 1, 6, 0, 2, 0, 0, 5, 27, 0, 24, 0, 0, 2, 1, 0, 0]' : 0.207857}", "{'[0, 2, 1, 6, 0, 2, 0, 0, 5, 27, 0, 24, 0, 0, 2, 1, 0, 0]' : 0.205772}", "{'[0, 2, 1, 6, 0, 2, 0, 0, 5, 27, 0, 24, 0, 0, 2, 1, 0, 0]' : 0.205894}", "{'[0, 2, 1, 6, 0, 2, 0, 0, 5, 27, 0, 24, 0, 0, 2, 1, 0, 0]' : 0.206178}", "{'[0, 2, 1, 6, 0, 2, 0, 0, 5, 27, 0, 24, 0, 0, 2, 1, 0, 0]' : 0.20735}", "{'[0, 2, 1, 6, 0, 2, 0, 0, 5, 27, 0, 24, 0, 0, 2, 1, 0, 0]' : 0.20579}", "{'[0, 2, 1, 6, 0, 2, 0, 0, 5, 27, 0, 24, 0, 0, 2, 1, 0, 0]' : 0.205643}", "{'[0, 2, 1, 6, 0, 2, 0, 0, 5, 27, 0, 24, 0, 0, 2, 1, 0, 0]' : 0.206019}", "{'[0, 2, 1, 6, 0, 2, 0, 0, 5, 27, 0, 24, 0, 0, 2, 1, 0, 0]' : 0.205598}", "{'[0, 2, 1, 6, 0, 2, 0, 0, 5, 27, 0, 24, 0, 0, 2, 1, 0, 0]' : 0.20667}", "{'[0, 2, 1, 6, 0, 2, 0, 0, 5, 27, 0, 24, 0, 0, 2, 1, 0, 0]' : 0.20364}", "{'[0, 2, 1, 6, 0, 2, 0, 0, 5, 27, 0, 24, 0, 0, 2, 1, 0, 0]' : 0.201214}", "{'[0, 2, 1, 6, 0, 2, 0, 0, 5, 27, 0, 24, 0, 0, 2, 1, 0, 0]' : 0.205581}", "{'[0, 2, 1, 6, 0, 2, 0, 0, 5, 27, 0, 24, 0, 0, 2, 1, 0, 0]' : 0.205962}", "{'[0, 2, 1, 6, 0, 2, 0, 0, 5, 27, 0, 24, 0, 0, 2, 1, 0, 0]' : 0.206548}", "{'[0, 2, 1, 6, 0, 2, 0, 0, 5, 27, 0, 24, 0, 0, 2, 1, 0, 0]' : 0.206148}", "{'[0, 2, 1, 6, 0, 2, 0, 0, 5, 27, 0, 24, 0, 0, 2, 1, 0, 0]' : 0.205767}", "{'[0, 2, 1, 6, 0, 2, 0, 0, 5, 27, 0, 24, 0, 0, 2, 1, 0, 0]' : 0.206103}", "{'[0, 2, 1, 6, 0, 2, 0, 0, 5, 27, 0, 24, 0, 0, 2, 1, 0, 0]' : 0.206857}", "{'[0, 2, 1, 6, 0, 2, 0, 0, 5, 27, 0, 24, 0, 0, 2, 1, 0, 0]' : 0.211811}"]
returning from 'run': {'[0, 2, 1, 6, 0, 2, 0, 0, 5, 27, 0, 24, 0, 0, 2, 1, 0, 0]': ([0.23197, 0.215921, 0.20417, 0.205996, 0.205706, 0.20905, 0.200604, 0.202891, 0.206071, 0.205797, 0.207857, 0.205772, 0.205894, 0.206178, 0.20735, 0.20579, 0.205643, 0.206019, 0.205598, 0.20667, 0.20364, 0.201214, 0.205581, 0.205962, 0.206548, 0.206148, 0.205767, 0.206103, 0.206857, 0.211811], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 1, 6, 0, 2, 0, 0, 5, 27, 0, 24, 0, 0, 2, 1, 0, 0]': ([0.23197, 0.215921, 0.20417, 0.205996, 0.205706, 0.20905, 0.200604, 0.202891, 0.206071, 0.205797, 0.207857, 0.205772, 0.205894, 0.206178, 0.20735, 0.20579, 0.205643, 0.206019, 0.205598, 0.20667, 0.20364, 0.201214, 0.205581, 0.205962, 0.206548, 0.206148, 0.205767, 0.206103, 0.206857, 0.211811], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	17
        Max loop nest depth: 	4
        Additions: 		414
        Multiplications: 	180
        Divisions: 		0
        Logical: 		0
        Reads: 			937
        Writes: 		193
        Comparisons:		17
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest55.exe __orio_perftest55.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest55.exe  
Program Test Output: 
{'[6, 2, 6, 4, 0, 4, 1, 0, 5, 0, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0884621}
{'[6, 2, 6, 4, 0, 4, 1, 0, 5, 0, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0883138}
{'[6, 2, 6, 4, 0, 4, 1, 0, 5, 0, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0882709}
{'[6, 2, 6, 4, 0, 4, 1, 0, 5, 0, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.088357}
{'[6, 2, 6, 4, 0, 4, 1, 0, 5, 0, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.088259}
{'[6, 2, 6, 4, 0, 4, 1, 0, 5, 0, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0886159}
{'[6, 2, 6, 4, 0, 4, 1, 0, 5, 0, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0901961}
{'[6, 2, 6, 4, 0, 4, 1, 0, 5, 0, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0885029}
{'[6, 2, 6, 4, 0, 4, 1, 0, 5, 0, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0879831}
{'[6, 2, 6, 4, 0, 4, 1, 0, 5, 0, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.087131}
{'[6, 2, 6, 4, 0, 4, 1, 0, 5, 0, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0882211}
{'[6, 2, 6, 4, 0, 4, 1, 0, 5, 0, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0883322}
{'[6, 2, 6, 4, 0, 4, 1, 0, 5, 0, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.088295}
{'[6, 2, 6, 4, 0, 4, 1, 0, 5, 0, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0885179}
{'[6, 2, 6, 4, 0, 4, 1, 0, 5, 0, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.088382}
{'[6, 2, 6, 4, 0, 4, 1, 0, 5, 0, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0890801}
{'[6, 2, 6, 4, 0, 4, 1, 0, 5, 0, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0882161}
{'[6, 2, 6, 4, 0, 4, 1, 0, 5, 0, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.088434}
{'[6, 2, 6, 4, 0, 4, 1, 0, 5, 0, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0882552}
{'[6, 2, 6, 4, 0, 4, 1, 0, 5, 0, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0884788}
{'[6, 2, 6, 4, 0, 4, 1, 0, 5, 0, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0887852}
{'[6, 2, 6, 4, 0, 4, 1, 0, 5, 0, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0903959}
{'[6, 2, 6, 4, 0, 4, 1, 0, 5, 0, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.090404}
{'[6, 2, 6, 4, 0, 4, 1, 0, 5, 0, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0903871}
{'[6, 2, 6, 4, 0, 4, 1, 0, 5, 0, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.090488}
{'[6, 2, 6, 4, 0, 4, 1, 0, 5, 0, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.090385}
{'[6, 2, 6, 4, 0, 4, 1, 0, 5, 0, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0904198}
{'[6, 2, 6, 4, 0, 4, 1, 0, 5, 0, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.090404}
{'[6, 2, 6, 4, 0, 4, 1, 0, 5, 0, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0904551}
{'[6, 2, 6, 4, 0, 4, 1, 0, 5, 0, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.090451}

out:
 ["{'[6, 2, 6, 4, 0, 4, 1, 0, 5, 0, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0884621}", "{'[6, 2, 6, 4, 0, 4, 1, 0, 5, 0, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0883138}", "{'[6, 2, 6, 4, 0, 4, 1, 0, 5, 0, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0882709}", "{'[6, 2, 6, 4, 0, 4, 1, 0, 5, 0, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.088357}", "{'[6, 2, 6, 4, 0, 4, 1, 0, 5, 0, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.088259}", "{'[6, 2, 6, 4, 0, 4, 1, 0, 5, 0, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0886159}", "{'[6, 2, 6, 4, 0, 4, 1, 0, 5, 0, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0901961}", "{'[6, 2, 6, 4, 0, 4, 1, 0, 5, 0, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0885029}", "{'[6, 2, 6, 4, 0, 4, 1, 0, 5, 0, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0879831}", "{'[6, 2, 6, 4, 0, 4, 1, 0, 5, 0, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.087131}", "{'[6, 2, 6, 4, 0, 4, 1, 0, 5, 0, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0882211}", "{'[6, 2, 6, 4, 0, 4, 1, 0, 5, 0, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0883322}", "{'[6, 2, 6, 4, 0, 4, 1, 0, 5, 0, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.088295}", "{'[6, 2, 6, 4, 0, 4, 1, 0, 5, 0, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0885179}", "{'[6, 2, 6, 4, 0, 4, 1, 0, 5, 0, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.088382}", "{'[6, 2, 6, 4, 0, 4, 1, 0, 5, 0, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0890801}", "{'[6, 2, 6, 4, 0, 4, 1, 0, 5, 0, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0882161}", "{'[6, 2, 6, 4, 0, 4, 1, 0, 5, 0, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.088434}", "{'[6, 2, 6, 4, 0, 4, 1, 0, 5, 0, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0882552}", "{'[6, 2, 6, 4, 0, 4, 1, 0, 5, 0, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0884788}", "{'[6, 2, 6, 4, 0, 4, 1, 0, 5, 0, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0887852}", "{'[6, 2, 6, 4, 0, 4, 1, 0, 5, 0, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0903959}", "{'[6, 2, 6, 4, 0, 4, 1, 0, 5, 0, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.090404}", "{'[6, 2, 6, 4, 0, 4, 1, 0, 5, 0, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0903871}", "{'[6, 2, 6, 4, 0, 4, 1, 0, 5, 0, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.090488}", "{'[6, 2, 6, 4, 0, 4, 1, 0, 5, 0, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.090385}", "{'[6, 2, 6, 4, 0, 4, 1, 0, 5, 0, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0904198}", "{'[6, 2, 6, 4, 0, 4, 1, 0, 5, 0, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.090404}", "{'[6, 2, 6, 4, 0, 4, 1, 0, 5, 0, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0904551}", "{'[6, 2, 6, 4, 0, 4, 1, 0, 5, 0, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.090451}"]
returning from 'run': {'[6, 2, 6, 4, 0, 4, 1, 0, 5, 0, 0, 0, 1, 0, 1, 1, 1, 0]': ([0.0884621, 0.0883138, 0.0882709, 0.088357, 0.088259, 0.0886159, 0.0901961, 0.0885029, 0.0879831, 0.087131, 0.0882211, 0.0883322, 0.088295, 0.0885179, 0.088382, 0.0890801, 0.0882161, 0.088434, 0.0882552, 0.0884788, 0.0887852, 0.0903959, 0.090404, 0.0903871, 0.090488, 0.090385, 0.0904198, 0.090404, 0.0904551, 0.090451], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 2, 6, 4, 0, 4, 1, 0, 5, 0, 0, 0, 1, 0, 1, 1, 1, 0]': ([0.0884621, 0.0883138, 0.0882709, 0.088357, 0.088259, 0.0886159, 0.0901961, 0.0885029, 0.0879831, 0.087131, 0.0882211, 0.0883322, 0.088295, 0.0885179, 0.088382, 0.0890801, 0.0882161, 0.088434, 0.0882552, 0.0884788, 0.0887852, 0.0903959, 0.090404, 0.0903871, 0.090488, 0.090385, 0.0904198, 0.090404, 0.0904551, 0.090451], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		476
        Multiplications: 	170
        Divisions: 		0
        Logical: 		0
        Reads: 			1128
        Writes: 		245
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest56.exe __orio_perftest56.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest56.exe  
Program Test Output: 
{'[6, 2, 2, 0, 0, 5, 1, 0, 5, 0, 23, 26, 0, 0, 2, 1, 1, 0]' : 0.199738}
{'[6, 2, 2, 0, 0, 5, 1, 0, 5, 0, 23, 26, 0, 0, 2, 1, 1, 0]' : 0.199669}
{'[6, 2, 2, 0, 0, 5, 1, 0, 5, 0, 23, 26, 0, 0, 2, 1, 1, 0]' : 0.181143}
{'[6, 2, 2, 0, 0, 5, 1, 0, 5, 0, 23, 26, 0, 0, 2, 1, 1, 0]' : 0.166782}
{'[6, 2, 2, 0, 0, 5, 1, 0, 5, 0, 23, 26, 0, 0, 2, 1, 1, 0]' : 0.166697}
{'[6, 2, 2, 0, 0, 5, 1, 0, 5, 0, 23, 26, 0, 0, 2, 1, 1, 0]' : 0.166783}
{'[6, 2, 2, 0, 0, 5, 1, 0, 5, 0, 23, 26, 0, 0, 2, 1, 1, 0]' : 0.166693}
{'[6, 2, 2, 0, 0, 5, 1, 0, 5, 0, 23, 26, 0, 0, 2, 1, 1, 0]' : 0.166753}
{'[6, 2, 2, 0, 0, 5, 1, 0, 5, 0, 23, 26, 0, 0, 2, 1, 1, 0]' : 0.167331}
{'[6, 2, 2, 0, 0, 5, 1, 0, 5, 0, 23, 26, 0, 0, 2, 1, 1, 0]' : 0.166771}
{'[6, 2, 2, 0, 0, 5, 1, 0, 5, 0, 23, 26, 0, 0, 2, 1, 1, 0]' : 0.166736}
{'[6, 2, 2, 0, 0, 5, 1, 0, 5, 0, 23, 26, 0, 0, 2, 1, 1, 0]' : 0.166919}
{'[6, 2, 2, 0, 0, 5, 1, 0, 5, 0, 23, 26, 0, 0, 2, 1, 1, 0]' : 0.166702}
{'[6, 2, 2, 0, 0, 5, 1, 0, 5, 0, 23, 26, 0, 0, 2, 1, 1, 0]' : 0.166727}
{'[6, 2, 2, 0, 0, 5, 1, 0, 5, 0, 23, 26, 0, 0, 2, 1, 1, 0]' : 0.166683}
{'[6, 2, 2, 0, 0, 5, 1, 0, 5, 0, 23, 26, 0, 0, 2, 1, 1, 0]' : 0.166762}
{'[6, 2, 2, 0, 0, 5, 1, 0, 5, 0, 23, 26, 0, 0, 2, 1, 1, 0]' : 0.166745}
{'[6, 2, 2, 0, 0, 5, 1, 0, 5, 0, 23, 26, 0, 0, 2, 1, 1, 0]' : 0.167468}
{'[6, 2, 2, 0, 0, 5, 1, 0, 5, 0, 23, 26, 0, 0, 2, 1, 1, 0]' : 0.166978}
{'[6, 2, 2, 0, 0, 5, 1, 0, 5, 0, 23, 26, 0, 0, 2, 1, 1, 0]' : 0.167023}
{'[6, 2, 2, 0, 0, 5, 1, 0, 5, 0, 23, 26, 0, 0, 2, 1, 1, 0]' : 0.166691}
{'[6, 2, 2, 0, 0, 5, 1, 0, 5, 0, 23, 26, 0, 0, 2, 1, 1, 0]' : 0.166793}
{'[6, 2, 2, 0, 0, 5, 1, 0, 5, 0, 23, 26, 0, 0, 2, 1, 1, 0]' : 0.16694}
{'[6, 2, 2, 0, 0, 5, 1, 0, 5, 0, 23, 26, 0, 0, 2, 1, 1, 0]' : 0.166768}
{'[6, 2, 2, 0, 0, 5, 1, 0, 5, 0, 23, 26, 0, 0, 2, 1, 1, 0]' : 0.166707}
{'[6, 2, 2, 0, 0, 5, 1, 0, 5, 0, 23, 26, 0, 0, 2, 1, 1, 0]' : 0.167064}
{'[6, 2, 2, 0, 0, 5, 1, 0, 5, 0, 23, 26, 0, 0, 2, 1, 1, 0]' : 0.167403}
{'[6, 2, 2, 0, 0, 5, 1, 0, 5, 0, 23, 26, 0, 0, 2, 1, 1, 0]' : 0.16678}
{'[6, 2, 2, 0, 0, 5, 1, 0, 5, 0, 23, 26, 0, 0, 2, 1, 1, 0]' : 0.16673}
{'[6, 2, 2, 0, 0, 5, 1, 0, 5, 0, 23, 26, 0, 0, 2, 1, 1, 0]' : 0.167017}

out:
 ["{'[6, 2, 2, 0, 0, 5, 1, 0, 5, 0, 23, 26, 0, 0, 2, 1, 1, 0]' : 0.199738}", "{'[6, 2, 2, 0, 0, 5, 1, 0, 5, 0, 23, 26, 0, 0, 2, 1, 1, 0]' : 0.199669}", "{'[6, 2, 2, 0, 0, 5, 1, 0, 5, 0, 23, 26, 0, 0, 2, 1, 1, 0]' : 0.181143}", "{'[6, 2, 2, 0, 0, 5, 1, 0, 5, 0, 23, 26, 0, 0, 2, 1, 1, 0]' : 0.166782}", "{'[6, 2, 2, 0, 0, 5, 1, 0, 5, 0, 23, 26, 0, 0, 2, 1, 1, 0]' : 0.166697}", "{'[6, 2, 2, 0, 0, 5, 1, 0, 5, 0, 23, 26, 0, 0, 2, 1, 1, 0]' : 0.166783}", "{'[6, 2, 2, 0, 0, 5, 1, 0, 5, 0, 23, 26, 0, 0, 2, 1, 1, 0]' : 0.166693}", "{'[6, 2, 2, 0, 0, 5, 1, 0, 5, 0, 23, 26, 0, 0, 2, 1, 1, 0]' : 0.166753}", "{'[6, 2, 2, 0, 0, 5, 1, 0, 5, 0, 23, 26, 0, 0, 2, 1, 1, 0]' : 0.167331}", "{'[6, 2, 2, 0, 0, 5, 1, 0, 5, 0, 23, 26, 0, 0, 2, 1, 1, 0]' : 0.166771}", "{'[6, 2, 2, 0, 0, 5, 1, 0, 5, 0, 23, 26, 0, 0, 2, 1, 1, 0]' : 0.166736}", "{'[6, 2, 2, 0, 0, 5, 1, 0, 5, 0, 23, 26, 0, 0, 2, 1, 1, 0]' : 0.166919}", "{'[6, 2, 2, 0, 0, 5, 1, 0, 5, 0, 23, 26, 0, 0, 2, 1, 1, 0]' : 0.166702}", "{'[6, 2, 2, 0, 0, 5, 1, 0, 5, 0, 23, 26, 0, 0, 2, 1, 1, 0]' : 0.166727}", "{'[6, 2, 2, 0, 0, 5, 1, 0, 5, 0, 23, 26, 0, 0, 2, 1, 1, 0]' : 0.166683}", "{'[6, 2, 2, 0, 0, 5, 1, 0, 5, 0, 23, 26, 0, 0, 2, 1, 1, 0]' : 0.166762}", "{'[6, 2, 2, 0, 0, 5, 1, 0, 5, 0, 23, 26, 0, 0, 2, 1, 1, 0]' : 0.166745}", "{'[6, 2, 2, 0, 0, 5, 1, 0, 5, 0, 23, 26, 0, 0, 2, 1, 1, 0]' : 0.167468}", "{'[6, 2, 2, 0, 0, 5, 1, 0, 5, 0, 23, 26, 0, 0, 2, 1, 1, 0]' : 0.166978}", "{'[6, 2, 2, 0, 0, 5, 1, 0, 5, 0, 23, 26, 0, 0, 2, 1, 1, 0]' : 0.167023}", "{'[6, 2, 2, 0, 0, 5, 1, 0, 5, 0, 23, 26, 0, 0, 2, 1, 1, 0]' : 0.166691}", "{'[6, 2, 2, 0, 0, 5, 1, 0, 5, 0, 23, 26, 0, 0, 2, 1, 1, 0]' : 0.166793}", "{'[6, 2, 2, 0, 0, 5, 1, 0, 5, 0, 23, 26, 0, 0, 2, 1, 1, 0]' : 0.16694}", "{'[6, 2, 2, 0, 0, 5, 1, 0, 5, 0, 23, 26, 0, 0, 2, 1, 1, 0]' : 0.166768}", "{'[6, 2, 2, 0, 0, 5, 1, 0, 5, 0, 23, 26, 0, 0, 2, 1, 1, 0]' : 0.166707}", "{'[6, 2, 2, 0, 0, 5, 1, 0, 5, 0, 23, 26, 0, 0, 2, 1, 1, 0]' : 0.167064}", "{'[6, 2, 2, 0, 0, 5, 1, 0, 5, 0, 23, 26, 0, 0, 2, 1, 1, 0]' : 0.167403}", "{'[6, 2, 2, 0, 0, 5, 1, 0, 5, 0, 23, 26, 0, 0, 2, 1, 1, 0]' : 0.16678}", "{'[6, 2, 2, 0, 0, 5, 1, 0, 5, 0, 23, 26, 0, 0, 2, 1, 1, 0]' : 0.16673}", "{'[6, 2, 2, 0, 0, 5, 1, 0, 5, 0, 23, 26, 0, 0, 2, 1, 1, 0]' : 0.167017}"]
returning from 'run': {'[6, 2, 2, 0, 0, 5, 1, 0, 5, 0, 23, 26, 0, 0, 2, 1, 1, 0]': ([0.199738, 0.199669, 0.181143, 0.166782, 0.166697, 0.166783, 0.166693, 0.166753, 0.167331, 0.166771, 0.166736, 0.166919, 0.166702, 0.166727, 0.166683, 0.166762, 0.166745, 0.167468, 0.166978, 0.167023, 0.166691, 0.166793, 0.16694, 0.166768, 0.166707, 0.167064, 0.167403, 0.16678, 0.16673, 0.167017], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 2, 2, 0, 0, 5, 1, 0, 5, 0, 23, 26, 0, 0, 2, 1, 1, 0]': ([0.199738, 0.199669, 0.181143, 0.166782, 0.166697, 0.166783, 0.166693, 0.166753, 0.167331, 0.166771, 0.166736, 0.166919, 0.166702, 0.166727, 0.166683, 0.166762, 0.166745, 0.167468, 0.166978, 0.167023, 0.166691, 0.166793, 0.16694, 0.166768, 0.166707, 0.167064, 0.167403, 0.16678, 0.16673, 0.167017], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		871
        Multiplications: 	406
        Divisions: 		0
        Logical: 		0
        Reads: 			1713
        Writes: 		293
        Comparisons:		15
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest57.exe __orio_perftest57.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest57.exe  
Program Test Output: 
{'[1, 2, 2, 0, 0, 0, 0, 0, 5, 5, 26, 0, 0, 0, 0, 1, 0, 0]' : 0.151228}
{'[1, 2, 2, 0, 0, 0, 0, 0, 5, 5, 26, 0, 0, 0, 0, 1, 0, 0]' : 0.151274}
{'[1, 2, 2, 0, 0, 0, 0, 0, 5, 5, 26, 0, 0, 0, 0, 1, 0, 0]' : 0.151116}
{'[1, 2, 2, 0, 0, 0, 0, 0, 5, 5, 26, 0, 0, 0, 0, 1, 0, 0]' : 0.145176}
{'[1, 2, 2, 0, 0, 0, 0, 0, 5, 5, 26, 0, 0, 0, 0, 1, 0, 0]' : 0.127386}
{'[1, 2, 2, 0, 0, 0, 0, 0, 5, 5, 26, 0, 0, 0, 0, 1, 0, 0]' : 0.127402}
{'[1, 2, 2, 0, 0, 0, 0, 0, 5, 5, 26, 0, 0, 0, 0, 1, 0, 0]' : 0.127392}
{'[1, 2, 2, 0, 0, 0, 0, 0, 5, 5, 26, 0, 0, 0, 0, 1, 0, 0]' : 0.127414}
{'[1, 2, 2, 0, 0, 0, 0, 0, 5, 5, 26, 0, 0, 0, 0, 1, 0, 0]' : 0.127814}
{'[1, 2, 2, 0, 0, 0, 0, 0, 5, 5, 26, 0, 0, 0, 0, 1, 0, 0]' : 0.127551}
{'[1, 2, 2, 0, 0, 0, 0, 0, 5, 5, 26, 0, 0, 0, 0, 1, 0, 0]' : 0.127427}
{'[1, 2, 2, 0, 0, 0, 0, 0, 5, 5, 26, 0, 0, 0, 0, 1, 0, 0]' : 0.127428}
{'[1, 2, 2, 0, 0, 0, 0, 0, 5, 5, 26, 0, 0, 0, 0, 1, 0, 0]' : 0.127461}
{'[1, 2, 2, 0, 0, 0, 0, 0, 5, 5, 26, 0, 0, 0, 0, 1, 0, 0]' : 0.127636}
{'[1, 2, 2, 0, 0, 0, 0, 0, 5, 5, 26, 0, 0, 0, 0, 1, 0, 0]' : 0.128302}
{'[1, 2, 2, 0, 0, 0, 0, 0, 5, 5, 26, 0, 0, 0, 0, 1, 0, 0]' : 0.127406}
{'[1, 2, 2, 0, 0, 0, 0, 0, 5, 5, 26, 0, 0, 0, 0, 1, 0, 0]' : 0.127453}
{'[1, 2, 2, 0, 0, 0, 0, 0, 5, 5, 26, 0, 0, 0, 0, 1, 0, 0]' : 0.127448}
{'[1, 2, 2, 0, 0, 0, 0, 0, 5, 5, 26, 0, 0, 0, 0, 1, 0, 0]' : 0.12745}
{'[1, 2, 2, 0, 0, 0, 0, 0, 5, 5, 26, 0, 0, 0, 0, 1, 0, 0]' : 0.127401}
{'[1, 2, 2, 0, 0, 0, 0, 0, 5, 5, 26, 0, 0, 0, 0, 1, 0, 0]' : 0.127453}
{'[1, 2, 2, 0, 0, 0, 0, 0, 5, 5, 26, 0, 0, 0, 0, 1, 0, 0]' : 0.127684}
{'[1, 2, 2, 0, 0, 0, 0, 0, 5, 5, 26, 0, 0, 0, 0, 1, 0, 0]' : 0.127405}
{'[1, 2, 2, 0, 0, 0, 0, 0, 5, 5, 26, 0, 0, 0, 0, 1, 0, 0]' : 0.12737}
{'[1, 2, 2, 0, 0, 0, 0, 0, 5, 5, 26, 0, 0, 0, 0, 1, 0, 0]' : 0.127424}
{'[1, 2, 2, 0, 0, 0, 0, 0, 5, 5, 26, 0, 0, 0, 0, 1, 0, 0]' : 0.127679}
{'[1, 2, 2, 0, 0, 0, 0, 0, 5, 5, 26, 0, 0, 0, 0, 1, 0, 0]' : 0.127931}
{'[1, 2, 2, 0, 0, 0, 0, 0, 5, 5, 26, 0, 0, 0, 0, 1, 0, 0]' : 0.127539}
{'[1, 2, 2, 0, 0, 0, 0, 0, 5, 5, 26, 0, 0, 0, 0, 1, 0, 0]' : 0.127554}
{'[1, 2, 2, 0, 0, 0, 0, 0, 5, 5, 26, 0, 0, 0, 0, 1, 0, 0]' : 0.127384}

out:
 ["{'[1, 2, 2, 0, 0, 0, 0, 0, 5, 5, 26, 0, 0, 0, 0, 1, 0, 0]' : 0.151228}", "{'[1, 2, 2, 0, 0, 0, 0, 0, 5, 5, 26, 0, 0, 0, 0, 1, 0, 0]' : 0.151274}", "{'[1, 2, 2, 0, 0, 0, 0, 0, 5, 5, 26, 0, 0, 0, 0, 1, 0, 0]' : 0.151116}", "{'[1, 2, 2, 0, 0, 0, 0, 0, 5, 5, 26, 0, 0, 0, 0, 1, 0, 0]' : 0.145176}", "{'[1, 2, 2, 0, 0, 0, 0, 0, 5, 5, 26, 0, 0, 0, 0, 1, 0, 0]' : 0.127386}", "{'[1, 2, 2, 0, 0, 0, 0, 0, 5, 5, 26, 0, 0, 0, 0, 1, 0, 0]' : 0.127402}", "{'[1, 2, 2, 0, 0, 0, 0, 0, 5, 5, 26, 0, 0, 0, 0, 1, 0, 0]' : 0.127392}", "{'[1, 2, 2, 0, 0, 0, 0, 0, 5, 5, 26, 0, 0, 0, 0, 1, 0, 0]' : 0.127414}", "{'[1, 2, 2, 0, 0, 0, 0, 0, 5, 5, 26, 0, 0, 0, 0, 1, 0, 0]' : 0.127814}", "{'[1, 2, 2, 0, 0, 0, 0, 0, 5, 5, 26, 0, 0, 0, 0, 1, 0, 0]' : 0.127551}", "{'[1, 2, 2, 0, 0, 0, 0, 0, 5, 5, 26, 0, 0, 0, 0, 1, 0, 0]' : 0.127427}", "{'[1, 2, 2, 0, 0, 0, 0, 0, 5, 5, 26, 0, 0, 0, 0, 1, 0, 0]' : 0.127428}", "{'[1, 2, 2, 0, 0, 0, 0, 0, 5, 5, 26, 0, 0, 0, 0, 1, 0, 0]' : 0.127461}", "{'[1, 2, 2, 0, 0, 0, 0, 0, 5, 5, 26, 0, 0, 0, 0, 1, 0, 0]' : 0.127636}", "{'[1, 2, 2, 0, 0, 0, 0, 0, 5, 5, 26, 0, 0, 0, 0, 1, 0, 0]' : 0.128302}", "{'[1, 2, 2, 0, 0, 0, 0, 0, 5, 5, 26, 0, 0, 0, 0, 1, 0, 0]' : 0.127406}", "{'[1, 2, 2, 0, 0, 0, 0, 0, 5, 5, 26, 0, 0, 0, 0, 1, 0, 0]' : 0.127453}", "{'[1, 2, 2, 0, 0, 0, 0, 0, 5, 5, 26, 0, 0, 0, 0, 1, 0, 0]' : 0.127448}", "{'[1, 2, 2, 0, 0, 0, 0, 0, 5, 5, 26, 0, 0, 0, 0, 1, 0, 0]' : 0.12745}", "{'[1, 2, 2, 0, 0, 0, 0, 0, 5, 5, 26, 0, 0, 0, 0, 1, 0, 0]' : 0.127401}", "{'[1, 2, 2, 0, 0, 0, 0, 0, 5, 5, 26, 0, 0, 0, 0, 1, 0, 0]' : 0.127453}", "{'[1, 2, 2, 0, 0, 0, 0, 0, 5, 5, 26, 0, 0, 0, 0, 1, 0, 0]' : 0.127684}", "{'[1, 2, 2, 0, 0, 0, 0, 0, 5, 5, 26, 0, 0, 0, 0, 1, 0, 0]' : 0.127405}", "{'[1, 2, 2, 0, 0, 0, 0, 0, 5, 5, 26, 0, 0, 0, 0, 1, 0, 0]' : 0.12737}", "{'[1, 2, 2, 0, 0, 0, 0, 0, 5, 5, 26, 0, 0, 0, 0, 1, 0, 0]' : 0.127424}", "{'[1, 2, 2, 0, 0, 0, 0, 0, 5, 5, 26, 0, 0, 0, 0, 1, 0, 0]' : 0.127679}", "{'[1, 2, 2, 0, 0, 0, 0, 0, 5, 5, 26, 0, 0, 0, 0, 1, 0, 0]' : 0.127931}", "{'[1, 2, 2, 0, 0, 0, 0, 0, 5, 5, 26, 0, 0, 0, 0, 1, 0, 0]' : 0.127539}", "{'[1, 2, 2, 0, 0, 0, 0, 0, 5, 5, 26, 0, 0, 0, 0, 1, 0, 0]' : 0.127554}", "{'[1, 2, 2, 0, 0, 0, 0, 0, 5, 5, 26, 0, 0, 0, 0, 1, 0, 0]' : 0.127384}"]
returning from 'run': {'[1, 2, 2, 0, 0, 0, 0, 0, 5, 5, 26, 0, 0, 0, 0, 1, 0, 0]': ([0.151228, 0.151274, 0.151116, 0.145176, 0.127386, 0.127402, 0.127392, 0.127414, 0.127814, 0.127551, 0.127427, 0.127428, 0.127461, 0.127636, 0.128302, 0.127406, 0.127453, 0.127448, 0.12745, 0.127401, 0.127453, 0.127684, 0.127405, 0.12737, 0.127424, 0.127679, 0.127931, 0.127539, 0.127554, 0.127384], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 2, 2, 0, 0, 0, 0, 0, 5, 5, 26, 0, 0, 0, 0, 1, 0, 0]': ([0.151228, 0.151274, 0.151116, 0.145176, 0.127386, 0.127402, 0.127392, 0.127414, 0.127814, 0.127551, 0.127427, 0.127428, 0.127461, 0.127636, 0.128302, 0.127406, 0.127453, 0.127448, 0.12745, 0.127401, 0.127453, 0.127684, 0.127405, 0.12737, 0.127424, 0.127679, 0.127931, 0.127539, 0.127554, 0.127384], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	50
        Max loop nest depth: 	6
        Additions: 		3257
        Multiplications: 	1386
        Divisions: 		0
        Logical: 		0
        Reads: 			5857
        Writes: 		902
        Comparisons:		50
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest58.exe __orio_perftest58.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest58.exe  
Program Test Output: 
{'[2, 2, 1, 2, 0, 6, 0, 0, 5, 11, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.117534}
{'[2, 2, 1, 2, 0, 6, 0, 0, 5, 11, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.118137}
{'[2, 2, 1, 2, 0, 6, 0, 0, 5, 11, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.117915}
{'[2, 2, 1, 2, 0, 6, 0, 0, 5, 11, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.116367}
{'[2, 2, 1, 2, 0, 6, 0, 0, 5, 11, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.105539}
{'[2, 2, 1, 2, 0, 6, 0, 0, 5, 11, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.105384}
{'[2, 2, 1, 2, 0, 6, 0, 0, 5, 11, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.105038}
{'[2, 2, 1, 2, 0, 6, 0, 0, 5, 11, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.105095}
{'[2, 2, 1, 2, 0, 6, 0, 0, 5, 11, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.105013}
{'[2, 2, 1, 2, 0, 6, 0, 0, 5, 11, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.105113}
{'[2, 2, 1, 2, 0, 6, 0, 0, 5, 11, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.105145}
{'[2, 2, 1, 2, 0, 6, 0, 0, 5, 11, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.105109}
{'[2, 2, 1, 2, 0, 6, 0, 0, 5, 11, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.105107}
{'[2, 2, 1, 2, 0, 6, 0, 0, 5, 11, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.105093}
{'[2, 2, 1, 2, 0, 6, 0, 0, 5, 11, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.105358}
{'[2, 2, 1, 2, 0, 6, 0, 0, 5, 11, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.105054}
{'[2, 2, 1, 2, 0, 6, 0, 0, 5, 11, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.105069}
{'[2, 2, 1, 2, 0, 6, 0, 0, 5, 11, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.105068}
{'[2, 2, 1, 2, 0, 6, 0, 0, 5, 11, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.105075}
{'[2, 2, 1, 2, 0, 6, 0, 0, 5, 11, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.105404}
{'[2, 2, 1, 2, 0, 6, 0, 0, 5, 11, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.105622}
{'[2, 2, 1, 2, 0, 6, 0, 0, 5, 11, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.105435}
{'[2, 2, 1, 2, 0, 6, 0, 0, 5, 11, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.105415}
{'[2, 2, 1, 2, 0, 6, 0, 0, 5, 11, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.105405}
{'[2, 2, 1, 2, 0, 6, 0, 0, 5, 11, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.105567}
{'[2, 2, 1, 2, 0, 6, 0, 0, 5, 11, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.105411}
{'[2, 2, 1, 2, 0, 6, 0, 0, 5, 11, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.105448}
{'[2, 2, 1, 2, 0, 6, 0, 0, 5, 11, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.105446}
{'[2, 2, 1, 2, 0, 6, 0, 0, 5, 11, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.105419}
{'[2, 2, 1, 2, 0, 6, 0, 0, 5, 11, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.105001}

out:
 ["{'[2, 2, 1, 2, 0, 6, 0, 0, 5, 11, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.117534}", "{'[2, 2, 1, 2, 0, 6, 0, 0, 5, 11, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.118137}", "{'[2, 2, 1, 2, 0, 6, 0, 0, 5, 11, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.117915}", "{'[2, 2, 1, 2, 0, 6, 0, 0, 5, 11, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.116367}", "{'[2, 2, 1, 2, 0, 6, 0, 0, 5, 11, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.105539}", "{'[2, 2, 1, 2, 0, 6, 0, 0, 5, 11, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.105384}", "{'[2, 2, 1, 2, 0, 6, 0, 0, 5, 11, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.105038}", "{'[2, 2, 1, 2, 0, 6, 0, 0, 5, 11, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.105095}", "{'[2, 2, 1, 2, 0, 6, 0, 0, 5, 11, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.105013}", "{'[2, 2, 1, 2, 0, 6, 0, 0, 5, 11, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.105113}", "{'[2, 2, 1, 2, 0, 6, 0, 0, 5, 11, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.105145}", "{'[2, 2, 1, 2, 0, 6, 0, 0, 5, 11, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.105109}", "{'[2, 2, 1, 2, 0, 6, 0, 0, 5, 11, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.105107}", "{'[2, 2, 1, 2, 0, 6, 0, 0, 5, 11, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.105093}", "{'[2, 2, 1, 2, 0, 6, 0, 0, 5, 11, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.105358}", "{'[2, 2, 1, 2, 0, 6, 0, 0, 5, 11, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.105054}", "{'[2, 2, 1, 2, 0, 6, 0, 0, 5, 11, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.105069}", "{'[2, 2, 1, 2, 0, 6, 0, 0, 5, 11, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.105068}", "{'[2, 2, 1, 2, 0, 6, 0, 0, 5, 11, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.105075}", "{'[2, 2, 1, 2, 0, 6, 0, 0, 5, 11, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.105404}", "{'[2, 2, 1, 2, 0, 6, 0, 0, 5, 11, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.105622}", "{'[2, 2, 1, 2, 0, 6, 0, 0, 5, 11, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.105435}", "{'[2, 2, 1, 2, 0, 6, 0, 0, 5, 11, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.105415}", "{'[2, 2, 1, 2, 0, 6, 0, 0, 5, 11, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.105405}", "{'[2, 2, 1, 2, 0, 6, 0, 0, 5, 11, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.105567}", "{'[2, 2, 1, 2, 0, 6, 0, 0, 5, 11, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.105411}", "{'[2, 2, 1, 2, 0, 6, 0, 0, 5, 11, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.105448}", "{'[2, 2, 1, 2, 0, 6, 0, 0, 5, 11, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.105446}", "{'[2, 2, 1, 2, 0, 6, 0, 0, 5, 11, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.105419}", "{'[2, 2, 1, 2, 0, 6, 0, 0, 5, 11, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.105001}"]
returning from 'run': {'[2, 2, 1, 2, 0, 6, 0, 0, 5, 11, 22, 0, 1, 1, 0, 1, 0, 0]': ([0.117534, 0.118137, 0.117915, 0.116367, 0.105539, 0.105384, 0.105038, 0.105095, 0.105013, 0.105113, 0.105145, 0.105109, 0.105107, 0.105093, 0.105358, 0.105054, 0.105069, 0.105068, 0.105075, 0.105404, 0.105622, 0.105435, 0.105415, 0.105405, 0.105567, 0.105411, 0.105448, 0.105446, 0.105419, 0.105001], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 2, 1, 2, 0, 6, 0, 0, 5, 11, 22, 0, 1, 1, 0, 1, 0, 0]': ([0.117534, 0.118137, 0.117915, 0.116367, 0.105539, 0.105384, 0.105038, 0.105095, 0.105013, 0.105113, 0.105145, 0.105109, 0.105107, 0.105093, 0.105358, 0.105054, 0.105069, 0.105068, 0.105075, 0.105404, 0.105622, 0.105435, 0.105415, 0.105405, 0.105567, 0.105411, 0.105448, 0.105446, 0.105419, 0.105001], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	3
        Additions: 		4356
        Multiplications: 	2176
        Divisions: 		0
        Logical: 		0
        Reads: 			8066
        Writes: 		1238
        Comparisons:		9
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest59.exe __orio_perftest59.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest59.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest59.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest59.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest59.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	4
        Additions: 		1085
        Multiplications: 	512
        Divisions: 		0
        Logical: 		0
        Reads: 			2122
        Writes: 		367
        Comparisons:		10
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest60.exe __orio_perftest60.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest60.exe  
Program Test Output: 
{'[0, 2, 6, 0, 0, 5, 1, 0, 5, 27, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.104191}
{'[0, 2, 6, 0, 0, 5, 1, 0, 5, 27, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.10572}
{'[0, 2, 6, 0, 0, 5, 1, 0, 5, 27, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.103891}
{'[0, 2, 6, 0, 0, 5, 1, 0, 5, 27, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.103995}
{'[0, 2, 6, 0, 0, 5, 1, 0, 5, 27, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.104019}
{'[0, 2, 6, 0, 0, 5, 1, 0, 5, 27, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.10435}
{'[0, 2, 6, 0, 0, 5, 1, 0, 5, 27, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.103961}
{'[0, 2, 6, 0, 0, 5, 1, 0, 5, 27, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.103941}
{'[0, 2, 6, 0, 0, 5, 1, 0, 5, 27, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.103836}
{'[0, 2, 6, 0, 0, 5, 1, 0, 5, 27, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.103911}
{'[0, 2, 6, 0, 0, 5, 1, 0, 5, 27, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.104636}
{'[0, 2, 6, 0, 0, 5, 1, 0, 5, 27, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.106534}
{'[0, 2, 6, 0, 0, 5, 1, 0, 5, 27, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.104969}
{'[0, 2, 6, 0, 0, 5, 1, 0, 5, 27, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.103819}
{'[0, 2, 6, 0, 0, 5, 1, 0, 5, 27, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.103845}
{'[0, 2, 6, 0, 0, 5, 1, 0, 5, 27, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.10429}
{'[0, 2, 6, 0, 0, 5, 1, 0, 5, 27, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.104092}
{'[0, 2, 6, 0, 0, 5, 1, 0, 5, 27, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.104135}
{'[0, 2, 6, 0, 0, 5, 1, 0, 5, 27, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.103961}
{'[0, 2, 6, 0, 0, 5, 1, 0, 5, 27, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.104435}
{'[0, 2, 6, 0, 0, 5, 1, 0, 5, 27, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.104896}
{'[0, 2, 6, 0, 0, 5, 1, 0, 5, 27, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.104221}
{'[0, 2, 6, 0, 0, 5, 1, 0, 5, 27, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.104349}
{'[0, 2, 6, 0, 0, 5, 1, 0, 5, 27, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.104342}
{'[0, 2, 6, 0, 0, 5, 1, 0, 5, 27, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.104319}
{'[0, 2, 6, 0, 0, 5, 1, 0, 5, 27, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.106749}
{'[0, 2, 6, 0, 0, 5, 1, 0, 5, 27, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.104427}
{'[0, 2, 6, 0, 0, 5, 1, 0, 5, 27, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.104386}
{'[0, 2, 6, 0, 0, 5, 1, 0, 5, 27, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.104267}
{'[0, 2, 6, 0, 0, 5, 1, 0, 5, 27, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.104759}

out:
 ["{'[0, 2, 6, 0, 0, 5, 1, 0, 5, 27, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.104191}", "{'[0, 2, 6, 0, 0, 5, 1, 0, 5, 27, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.10572}", "{'[0, 2, 6, 0, 0, 5, 1, 0, 5, 27, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.103891}", "{'[0, 2, 6, 0, 0, 5, 1, 0, 5, 27, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.103995}", "{'[0, 2, 6, 0, 0, 5, 1, 0, 5, 27, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.104019}", "{'[0, 2, 6, 0, 0, 5, 1, 0, 5, 27, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.10435}", "{'[0, 2, 6, 0, 0, 5, 1, 0, 5, 27, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.103961}", "{'[0, 2, 6, 0, 0, 5, 1, 0, 5, 27, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.103941}", "{'[0, 2, 6, 0, 0, 5, 1, 0, 5, 27, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.103836}", "{'[0, 2, 6, 0, 0, 5, 1, 0, 5, 27, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.103911}", "{'[0, 2, 6, 0, 0, 5, 1, 0, 5, 27, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.104636}", "{'[0, 2, 6, 0, 0, 5, 1, 0, 5, 27, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.106534}", "{'[0, 2, 6, 0, 0, 5, 1, 0, 5, 27, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.104969}", "{'[0, 2, 6, 0, 0, 5, 1, 0, 5, 27, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.103819}", "{'[0, 2, 6, 0, 0, 5, 1, 0, 5, 27, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.103845}", "{'[0, 2, 6, 0, 0, 5, 1, 0, 5, 27, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.10429}", "{'[0, 2, 6, 0, 0, 5, 1, 0, 5, 27, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.104092}", "{'[0, 2, 6, 0, 0, 5, 1, 0, 5, 27, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.104135}", "{'[0, 2, 6, 0, 0, 5, 1, 0, 5, 27, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.103961}", "{'[0, 2, 6, 0, 0, 5, 1, 0, 5, 27, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.104435}", "{'[0, 2, 6, 0, 0, 5, 1, 0, 5, 27, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.104896}", "{'[0, 2, 6, 0, 0, 5, 1, 0, 5, 27, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.104221}", "{'[0, 2, 6, 0, 0, 5, 1, 0, 5, 27, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.104349}", "{'[0, 2, 6, 0, 0, 5, 1, 0, 5, 27, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.104342}", "{'[0, 2, 6, 0, 0, 5, 1, 0, 5, 27, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.104319}", "{'[0, 2, 6, 0, 0, 5, 1, 0, 5, 27, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.106749}", "{'[0, 2, 6, 0, 0, 5, 1, 0, 5, 27, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.104427}", "{'[0, 2, 6, 0, 0, 5, 1, 0, 5, 27, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.104386}", "{'[0, 2, 6, 0, 0, 5, 1, 0, 5, 27, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.104267}", "{'[0, 2, 6, 0, 0, 5, 1, 0, 5, 27, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.104759}"]
returning from 'run': {'[0, 2, 6, 0, 0, 5, 1, 0, 5, 27, 0, 29, 1, 0, 0, 1, 1, 0]': ([0.104191, 0.10572, 0.103891, 0.103995, 0.104019, 0.10435, 0.103961, 0.103941, 0.103836, 0.103911, 0.104636, 0.106534, 0.104969, 0.103819, 0.103845, 0.10429, 0.104092, 0.104135, 0.103961, 0.104435, 0.104896, 0.104221, 0.104349, 0.104342, 0.104319, 0.106749, 0.104427, 0.104386, 0.104267, 0.104759], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 6, 0, 0, 5, 1, 0, 5, 27, 0, 29, 1, 0, 0, 1, 1, 0]': ([0.104191, 0.10572, 0.103891, 0.103995, 0.104019, 0.10435, 0.103961, 0.103941, 0.103836, 0.103911, 0.104636, 0.106534, 0.104969, 0.103819, 0.103845, 0.10429, 0.104092, 0.104135, 0.103961, 0.104435, 0.104896, 0.104221, 0.104349, 0.104342, 0.104319, 0.106749, 0.104427, 0.104386, 0.104267, 0.104759], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	25
        Max loop nest depth: 	6
        Additions: 		367
        Multiplications: 	114
        Divisions: 		0
        Logical: 		0
        Reads: 			826
        Writes: 		184
        Comparisons:		25
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest61.exe __orio_perftest61.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest61.exe  
Program Test Output: 
{'[3, 2, 6, 6, 0, 6, 1, 0, 5, 1, 0, 1, 0, 1, 1, 1, 0, 0]' : 0.12753}
{'[3, 2, 6, 6, 0, 6, 1, 0, 5, 1, 0, 1, 0, 1, 1, 1, 0, 0]' : 0.127671}
{'[3, 2, 6, 6, 0, 6, 1, 0, 5, 1, 0, 1, 0, 1, 1, 1, 0, 0]' : 0.128434}
{'[3, 2, 6, 6, 0, 6, 1, 0, 5, 1, 0, 1, 0, 1, 1, 1, 0, 0]' : 0.131234}
{'[3, 2, 6, 6, 0, 6, 1, 0, 5, 1, 0, 1, 0, 1, 1, 1, 0, 0]' : 0.127489}
{'[3, 2, 6, 6, 0, 6, 1, 0, 5, 1, 0, 1, 0, 1, 1, 1, 0, 0]' : 0.127352}
{'[3, 2, 6, 6, 0, 6, 1, 0, 5, 1, 0, 1, 0, 1, 1, 1, 0, 0]' : 0.128344}
{'[3, 2, 6, 6, 0, 6, 1, 0, 5, 1, 0, 1, 0, 1, 1, 1, 0, 0]' : 0.131284}
{'[3, 2, 6, 6, 0, 6, 1, 0, 5, 1, 0, 1, 0, 1, 1, 1, 0, 0]' : 0.127292}
{'[3, 2, 6, 6, 0, 6, 1, 0, 5, 1, 0, 1, 0, 1, 1, 1, 0, 0]' : 0.127475}
{'[3, 2, 6, 6, 0, 6, 1, 0, 5, 1, 0, 1, 0, 1, 1, 1, 0, 0]' : 0.127742}
{'[3, 2, 6, 6, 0, 6, 1, 0, 5, 1, 0, 1, 0, 1, 1, 1, 0, 0]' : 0.127288}
{'[3, 2, 6, 6, 0, 6, 1, 0, 5, 1, 0, 1, 0, 1, 1, 1, 0, 0]' : 0.127352}
{'[3, 2, 6, 6, 0, 6, 1, 0, 5, 1, 0, 1, 0, 1, 1, 1, 0, 0]' : 0.127519}
{'[3, 2, 6, 6, 0, 6, 1, 0, 5, 1, 0, 1, 0, 1, 1, 1, 0, 0]' : 0.129183}
{'[3, 2, 6, 6, 0, 6, 1, 0, 5, 1, 0, 1, 0, 1, 1, 1, 0, 0]' : 0.13076}
{'[3, 2, 6, 6, 0, 6, 1, 0, 5, 1, 0, 1, 0, 1, 1, 1, 0, 0]' : 0.127261}
{'[3, 2, 6, 6, 0, 6, 1, 0, 5, 1, 0, 1, 0, 1, 1, 1, 0, 0]' : 0.127459}
{'[3, 2, 6, 6, 0, 6, 1, 0, 5, 1, 0, 1, 0, 1, 1, 1, 0, 0]' : 0.12805}
{'[3, 2, 6, 6, 0, 6, 1, 0, 5, 1, 0, 1, 0, 1, 1, 1, 0, 0]' : 0.129968}
{'[3, 2, 6, 6, 0, 6, 1, 0, 5, 1, 0, 1, 0, 1, 1, 1, 0, 0]' : 0.131511}
{'[3, 2, 6, 6, 0, 6, 1, 0, 5, 1, 0, 1, 0, 1, 1, 1, 0, 0]' : 0.131477}
{'[3, 2, 6, 6, 0, 6, 1, 0, 5, 1, 0, 1, 0, 1, 1, 1, 0, 0]' : 0.131581}
{'[3, 2, 6, 6, 0, 6, 1, 0, 5, 1, 0, 1, 0, 1, 1, 1, 0, 0]' : 0.129931}
{'[3, 2, 6, 6, 0, 6, 1, 0, 5, 1, 0, 1, 0, 1, 1, 1, 0, 0]' : 0.127516}
{'[3, 2, 6, 6, 0, 6, 1, 0, 5, 1, 0, 1, 0, 1, 1, 1, 0, 0]' : 0.127752}
{'[3, 2, 6, 6, 0, 6, 1, 0, 5, 1, 0, 1, 0, 1, 1, 1, 0, 0]' : 0.130576}
{'[3, 2, 6, 6, 0, 6, 1, 0, 5, 1, 0, 1, 0, 1, 1, 1, 0, 0]' : 0.127745}
{'[3, 2, 6, 6, 0, 6, 1, 0, 5, 1, 0, 1, 0, 1, 1, 1, 0, 0]' : 0.127297}
{'[3, 2, 6, 6, 0, 6, 1, 0, 5, 1, 0, 1, 0, 1, 1, 1, 0, 0]' : 0.127408}

out:
 ["{'[3, 2, 6, 6, 0, 6, 1, 0, 5, 1, 0, 1, 0, 1, 1, 1, 0, 0]' : 0.12753}", "{'[3, 2, 6, 6, 0, 6, 1, 0, 5, 1, 0, 1, 0, 1, 1, 1, 0, 0]' : 0.127671}", "{'[3, 2, 6, 6, 0, 6, 1, 0, 5, 1, 0, 1, 0, 1, 1, 1, 0, 0]' : 0.128434}", "{'[3, 2, 6, 6, 0, 6, 1, 0, 5, 1, 0, 1, 0, 1, 1, 1, 0, 0]' : 0.131234}", "{'[3, 2, 6, 6, 0, 6, 1, 0, 5, 1, 0, 1, 0, 1, 1, 1, 0, 0]' : 0.127489}", "{'[3, 2, 6, 6, 0, 6, 1, 0, 5, 1, 0, 1, 0, 1, 1, 1, 0, 0]' : 0.127352}", "{'[3, 2, 6, 6, 0, 6, 1, 0, 5, 1, 0, 1, 0, 1, 1, 1, 0, 0]' : 0.128344}", "{'[3, 2, 6, 6, 0, 6, 1, 0, 5, 1, 0, 1, 0, 1, 1, 1, 0, 0]' : 0.131284}", "{'[3, 2, 6, 6, 0, 6, 1, 0, 5, 1, 0, 1, 0, 1, 1, 1, 0, 0]' : 0.127292}", "{'[3, 2, 6, 6, 0, 6, 1, 0, 5, 1, 0, 1, 0, 1, 1, 1, 0, 0]' : 0.127475}", "{'[3, 2, 6, 6, 0, 6, 1, 0, 5, 1, 0, 1, 0, 1, 1, 1, 0, 0]' : 0.127742}", "{'[3, 2, 6, 6, 0, 6, 1, 0, 5, 1, 0, 1, 0, 1, 1, 1, 0, 0]' : 0.127288}", "{'[3, 2, 6, 6, 0, 6, 1, 0, 5, 1, 0, 1, 0, 1, 1, 1, 0, 0]' : 0.127352}", "{'[3, 2, 6, 6, 0, 6, 1, 0, 5, 1, 0, 1, 0, 1, 1, 1, 0, 0]' : 0.127519}", "{'[3, 2, 6, 6, 0, 6, 1, 0, 5, 1, 0, 1, 0, 1, 1, 1, 0, 0]' : 0.129183}", "{'[3, 2, 6, 6, 0, 6, 1, 0, 5, 1, 0, 1, 0, 1, 1, 1, 0, 0]' : 0.13076}", "{'[3, 2, 6, 6, 0, 6, 1, 0, 5, 1, 0, 1, 0, 1, 1, 1, 0, 0]' : 0.127261}", "{'[3, 2, 6, 6, 0, 6, 1, 0, 5, 1, 0, 1, 0, 1, 1, 1, 0, 0]' : 0.127459}", "{'[3, 2, 6, 6, 0, 6, 1, 0, 5, 1, 0, 1, 0, 1, 1, 1, 0, 0]' : 0.12805}", "{'[3, 2, 6, 6, 0, 6, 1, 0, 5, 1, 0, 1, 0, 1, 1, 1, 0, 0]' : 0.129968}", "{'[3, 2, 6, 6, 0, 6, 1, 0, 5, 1, 0, 1, 0, 1, 1, 1, 0, 0]' : 0.131511}", "{'[3, 2, 6, 6, 0, 6, 1, 0, 5, 1, 0, 1, 0, 1, 1, 1, 0, 0]' : 0.131477}", "{'[3, 2, 6, 6, 0, 6, 1, 0, 5, 1, 0, 1, 0, 1, 1, 1, 0, 0]' : 0.131581}", "{'[3, 2, 6, 6, 0, 6, 1, 0, 5, 1, 0, 1, 0, 1, 1, 1, 0, 0]' : 0.129931}", "{'[3, 2, 6, 6, 0, 6, 1, 0, 5, 1, 0, 1, 0, 1, 1, 1, 0, 0]' : 0.127516}", "{'[3, 2, 6, 6, 0, 6, 1, 0, 5, 1, 0, 1, 0, 1, 1, 1, 0, 0]' : 0.127752}", "{'[3, 2, 6, 6, 0, 6, 1, 0, 5, 1, 0, 1, 0, 1, 1, 1, 0, 0]' : 0.130576}", "{'[3, 2, 6, 6, 0, 6, 1, 0, 5, 1, 0, 1, 0, 1, 1, 1, 0, 0]' : 0.127745}", "{'[3, 2, 6, 6, 0, 6, 1, 0, 5, 1, 0, 1, 0, 1, 1, 1, 0, 0]' : 0.127297}", "{'[3, 2, 6, 6, 0, 6, 1, 0, 5, 1, 0, 1, 0, 1, 1, 1, 0, 0]' : 0.127408}"]
returning from 'run': {'[3, 2, 6, 6, 0, 6, 1, 0, 5, 1, 0, 1, 0, 1, 1, 1, 0, 0]': ([0.12753, 0.127671, 0.128434, 0.131234, 0.127489, 0.127352, 0.128344, 0.131284, 0.127292, 0.127475, 0.127742, 0.127288, 0.127352, 0.127519, 0.129183, 0.13076, 0.127261, 0.127459, 0.12805, 0.129968, 0.131511, 0.131477, 0.131581, 0.129931, 0.127516, 0.127752, 0.130576, 0.127745, 0.127297, 0.127408], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 2, 6, 6, 0, 6, 1, 0, 5, 1, 0, 1, 0, 1, 1, 1, 0, 0]': ([0.12753, 0.127671, 0.128434, 0.131234, 0.127489, 0.127352, 0.128344, 0.131284, 0.127292, 0.127475, 0.127742, 0.127288, 0.127352, 0.127519, 0.129183, 0.13076, 0.127261, 0.127459, 0.12805, 0.129968, 0.131511, 0.131477, 0.131581, 0.129931, 0.127516, 0.127752, 0.130576, 0.127745, 0.127297, 0.127408], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	103
        Max loop nest depth: 	5
        Additions: 		2098
        Multiplications: 	540
        Divisions: 		0
        Logical: 		0
        Reads: 			3595
        Writes: 		610
        Comparisons:		103
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest62.exe __orio_perftest62.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest62.exe  
Program Test Output: 
{'[0, 2, 1, 4, 0, 6, 1, 0, 5, 28, 6, 0, 0, 0, 0, 1, 1, 0]' : 0.259433}
{'[0, 2, 1, 4, 0, 6, 1, 0, 5, 28, 6, 0, 0, 0, 0, 1, 1, 0]' : 0.247812}
{'[0, 2, 1, 4, 0, 6, 1, 0, 5, 28, 6, 0, 0, 0, 0, 1, 1, 0]' : 0.224846}
{'[0, 2, 1, 4, 0, 6, 1, 0, 5, 28, 6, 0, 0, 0, 0, 1, 1, 0]' : 0.225618}
{'[0, 2, 1, 4, 0, 6, 1, 0, 5, 28, 6, 0, 0, 0, 0, 1, 1, 0]' : 0.222899}
{'[0, 2, 1, 4, 0, 6, 1, 0, 5, 28, 6, 0, 0, 0, 0, 1, 1, 0]' : 0.220835}
{'[0, 2, 1, 4, 0, 6, 1, 0, 5, 28, 6, 0, 0, 0, 0, 1, 1, 0]' : 0.222903}
{'[0, 2, 1, 4, 0, 6, 1, 0, 5, 28, 6, 0, 0, 0, 0, 1, 1, 0]' : 0.224657}
{'[0, 2, 1, 4, 0, 6, 1, 0, 5, 28, 6, 0, 0, 0, 0, 1, 1, 0]' : 0.221926}
{'[0, 2, 1, 4, 0, 6, 1, 0, 5, 28, 6, 0, 0, 0, 0, 1, 1, 0]' : 0.226565}
{'[0, 2, 1, 4, 0, 6, 1, 0, 5, 28, 6, 0, 0, 0, 0, 1, 1, 0]' : 0.223683}
{'[0, 2, 1, 4, 0, 6, 1, 0, 5, 28, 6, 0, 0, 0, 0, 1, 1, 0]' : 0.222367}
{'[0, 2, 1, 4, 0, 6, 1, 0, 5, 28, 6, 0, 0, 0, 0, 1, 1, 0]' : 0.216397}
{'[0, 2, 1, 4, 0, 6, 1, 0, 5, 28, 6, 0, 0, 0, 0, 1, 1, 0]' : 0.217223}
{'[0, 2, 1, 4, 0, 6, 1, 0, 5, 28, 6, 0, 0, 0, 0, 1, 1, 0]' : 0.22729}
{'[0, 2, 1, 4, 0, 6, 1, 0, 5, 28, 6, 0, 0, 0, 0, 1, 1, 0]' : 0.223219}
{'[0, 2, 1, 4, 0, 6, 1, 0, 5, 28, 6, 0, 0, 0, 0, 1, 1, 0]' : 0.227789}
{'[0, 2, 1, 4, 0, 6, 1, 0, 5, 28, 6, 0, 0, 0, 0, 1, 1, 0]' : 0.221907}
{'[0, 2, 1, 4, 0, 6, 1, 0, 5, 28, 6, 0, 0, 0, 0, 1, 1, 0]' : 0.227912}
{'[0, 2, 1, 4, 0, 6, 1, 0, 5, 28, 6, 0, 0, 0, 0, 1, 1, 0]' : 0.223028}
{'[0, 2, 1, 4, 0, 6, 1, 0, 5, 28, 6, 0, 0, 0, 0, 1, 1, 0]' : 0.223656}
{'[0, 2, 1, 4, 0, 6, 1, 0, 5, 28, 6, 0, 0, 0, 0, 1, 1, 0]' : 0.222235}
{'[0, 2, 1, 4, 0, 6, 1, 0, 5, 28, 6, 0, 0, 0, 0, 1, 1, 0]' : 0.223096}
{'[0, 2, 1, 4, 0, 6, 1, 0, 5, 28, 6, 0, 0, 0, 0, 1, 1, 0]' : 0.226263}
{'[0, 2, 1, 4, 0, 6, 1, 0, 5, 28, 6, 0, 0, 0, 0, 1, 1, 0]' : 0.221981}
{'[0, 2, 1, 4, 0, 6, 1, 0, 5, 28, 6, 0, 0, 0, 0, 1, 1, 0]' : 0.22327}
{'[0, 2, 1, 4, 0, 6, 1, 0, 5, 28, 6, 0, 0, 0, 0, 1, 1, 0]' : 0.222287}
{'[0, 2, 1, 4, 0, 6, 1, 0, 5, 28, 6, 0, 0, 0, 0, 1, 1, 0]' : 0.221094}
{'[0, 2, 1, 4, 0, 6, 1, 0, 5, 28, 6, 0, 0, 0, 0, 1, 1, 0]' : 0.217233}
{'[0, 2, 1, 4, 0, 6, 1, 0, 5, 28, 6, 0, 0, 0, 0, 1, 1, 0]' : 0.218618}

out:
 ["{'[0, 2, 1, 4, 0, 6, 1, 0, 5, 28, 6, 0, 0, 0, 0, 1, 1, 0]' : 0.259433}", "{'[0, 2, 1, 4, 0, 6, 1, 0, 5, 28, 6, 0, 0, 0, 0, 1, 1, 0]' : 0.247812}", "{'[0, 2, 1, 4, 0, 6, 1, 0, 5, 28, 6, 0, 0, 0, 0, 1, 1, 0]' : 0.224846}", "{'[0, 2, 1, 4, 0, 6, 1, 0, 5, 28, 6, 0, 0, 0, 0, 1, 1, 0]' : 0.225618}", "{'[0, 2, 1, 4, 0, 6, 1, 0, 5, 28, 6, 0, 0, 0, 0, 1, 1, 0]' : 0.222899}", "{'[0, 2, 1, 4, 0, 6, 1, 0, 5, 28, 6, 0, 0, 0, 0, 1, 1, 0]' : 0.220835}", "{'[0, 2, 1, 4, 0, 6, 1, 0, 5, 28, 6, 0, 0, 0, 0, 1, 1, 0]' : 0.222903}", "{'[0, 2, 1, 4, 0, 6, 1, 0, 5, 28, 6, 0, 0, 0, 0, 1, 1, 0]' : 0.224657}", "{'[0, 2, 1, 4, 0, 6, 1, 0, 5, 28, 6, 0, 0, 0, 0, 1, 1, 0]' : 0.221926}", "{'[0, 2, 1, 4, 0, 6, 1, 0, 5, 28, 6, 0, 0, 0, 0, 1, 1, 0]' : 0.226565}", "{'[0, 2, 1, 4, 0, 6, 1, 0, 5, 28, 6, 0, 0, 0, 0, 1, 1, 0]' : 0.223683}", "{'[0, 2, 1, 4, 0, 6, 1, 0, 5, 28, 6, 0, 0, 0, 0, 1, 1, 0]' : 0.222367}", "{'[0, 2, 1, 4, 0, 6, 1, 0, 5, 28, 6, 0, 0, 0, 0, 1, 1, 0]' : 0.216397}", "{'[0, 2, 1, 4, 0, 6, 1, 0, 5, 28, 6, 0, 0, 0, 0, 1, 1, 0]' : 0.217223}", "{'[0, 2, 1, 4, 0, 6, 1, 0, 5, 28, 6, 0, 0, 0, 0, 1, 1, 0]' : 0.22729}", "{'[0, 2, 1, 4, 0, 6, 1, 0, 5, 28, 6, 0, 0, 0, 0, 1, 1, 0]' : 0.223219}", "{'[0, 2, 1, 4, 0, 6, 1, 0, 5, 28, 6, 0, 0, 0, 0, 1, 1, 0]' : 0.227789}", "{'[0, 2, 1, 4, 0, 6, 1, 0, 5, 28, 6, 0, 0, 0, 0, 1, 1, 0]' : 0.221907}", "{'[0, 2, 1, 4, 0, 6, 1, 0, 5, 28, 6, 0, 0, 0, 0, 1, 1, 0]' : 0.227912}", "{'[0, 2, 1, 4, 0, 6, 1, 0, 5, 28, 6, 0, 0, 0, 0, 1, 1, 0]' : 0.223028}", "{'[0, 2, 1, 4, 0, 6, 1, 0, 5, 28, 6, 0, 0, 0, 0, 1, 1, 0]' : 0.223656}", "{'[0, 2, 1, 4, 0, 6, 1, 0, 5, 28, 6, 0, 0, 0, 0, 1, 1, 0]' : 0.222235}", "{'[0, 2, 1, 4, 0, 6, 1, 0, 5, 28, 6, 0, 0, 0, 0, 1, 1, 0]' : 0.223096}", "{'[0, 2, 1, 4, 0, 6, 1, 0, 5, 28, 6, 0, 0, 0, 0, 1, 1, 0]' : 0.226263}", "{'[0, 2, 1, 4, 0, 6, 1, 0, 5, 28, 6, 0, 0, 0, 0, 1, 1, 0]' : 0.221981}", "{'[0, 2, 1, 4, 0, 6, 1, 0, 5, 28, 6, 0, 0, 0, 0, 1, 1, 0]' : 0.22327}", "{'[0, 2, 1, 4, 0, 6, 1, 0, 5, 28, 6, 0, 0, 0, 0, 1, 1, 0]' : 0.222287}", "{'[0, 2, 1, 4, 0, 6, 1, 0, 5, 28, 6, 0, 0, 0, 0, 1, 1, 0]' : 0.221094}", "{'[0, 2, 1, 4, 0, 6, 1, 0, 5, 28, 6, 0, 0, 0, 0, 1, 1, 0]' : 0.217233}", "{'[0, 2, 1, 4, 0, 6, 1, 0, 5, 28, 6, 0, 0, 0, 0, 1, 1, 0]' : 0.218618}"]
returning from 'run': {'[0, 2, 1, 4, 0, 6, 1, 0, 5, 28, 6, 0, 0, 0, 0, 1, 1, 0]': ([0.259433, 0.247812, 0.224846, 0.225618, 0.222899, 0.220835, 0.222903, 0.224657, 0.221926, 0.226565, 0.223683, 0.222367, 0.216397, 0.217223, 0.22729, 0.223219, 0.227789, 0.221907, 0.227912, 0.223028, 0.223656, 0.222235, 0.223096, 0.226263, 0.221981, 0.22327, 0.222287, 0.221094, 0.217233, 0.218618], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 1, 4, 0, 6, 1, 0, 5, 28, 6, 0, 0, 0, 0, 1, 1, 0]': ([0.259433, 0.247812, 0.224846, 0.225618, 0.222899, 0.220835, 0.222903, 0.224657, 0.221926, 0.226565, 0.223683, 0.222367, 0.216397, 0.217223, 0.22729, 0.223219, 0.227789, 0.221907, 0.227912, 0.223028, 0.223656, 0.222235, 0.223096, 0.226263, 0.221981, 0.22327, 0.222287, 0.221094, 0.217233, 0.218618], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	4
        Additions: 		2638
        Multiplications: 	1260
        Divisions: 		0
        Logical: 		0
        Reads: 			5151
        Writes: 		861
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest63.exe __orio_perftest63.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest63.exe  
Program Test Output: 
{'[0, 2, 3, 5, 0, 0, 0, 0, 5, 0, 29, 29, 1, 1, 0, 1, 1, 0]' : 0.131722}
{'[0, 2, 3, 5, 0, 0, 0, 0, 5, 0, 29, 29, 1, 1, 0, 1, 1, 0]' : 0.131725}
{'[0, 2, 3, 5, 0, 0, 0, 0, 5, 0, 29, 29, 1, 1, 0, 1, 1, 0]' : 0.131116}
{'[0, 2, 3, 5, 0, 0, 0, 0, 5, 0, 29, 29, 1, 1, 0, 1, 1, 0]' : 0.112921}
{'[0, 2, 3, 5, 0, 0, 0, 0, 5, 0, 29, 29, 1, 1, 0, 1, 1, 0]' : 0.110739}
{'[0, 2, 3, 5, 0, 0, 0, 0, 5, 0, 29, 29, 1, 1, 0, 1, 1, 0]' : 0.116989}
{'[0, 2, 3, 5, 0, 0, 0, 0, 5, 0, 29, 29, 1, 1, 0, 1, 1, 0]' : 0.11513}
{'[0, 2, 3, 5, 0, 0, 0, 0, 5, 0, 29, 29, 1, 1, 0, 1, 1, 0]' : 0.115083}
{'[0, 2, 3, 5, 0, 0, 0, 0, 5, 0, 29, 29, 1, 1, 0, 1, 1, 0]' : 0.11485}
{'[0, 2, 3, 5, 0, 0, 0, 0, 5, 0, 29, 29, 1, 1, 0, 1, 1, 0]' : 0.116597}
{'[0, 2, 3, 5, 0, 0, 0, 0, 5, 0, 29, 29, 1, 1, 0, 1, 1, 0]' : 0.116306}
{'[0, 2, 3, 5, 0, 0, 0, 0, 5, 0, 29, 29, 1, 1, 0, 1, 1, 0]' : 0.114794}
{'[0, 2, 3, 5, 0, 0, 0, 0, 5, 0, 29, 29, 1, 1, 0, 1, 1, 0]' : 0.114871}
{'[0, 2, 3, 5, 0, 0, 0, 0, 5, 0, 29, 29, 1, 1, 0, 1, 1, 0]' : 0.115535}
{'[0, 2, 3, 5, 0, 0, 0, 0, 5, 0, 29, 29, 1, 1, 0, 1, 1, 0]' : 0.11843}
{'[0, 2, 3, 5, 0, 0, 0, 0, 5, 0, 29, 29, 1, 1, 0, 1, 1, 0]' : 0.118379}
{'[0, 2, 3, 5, 0, 0, 0, 0, 5, 0, 29, 29, 1, 1, 0, 1, 1, 0]' : 0.118348}
{'[0, 2, 3, 5, 0, 0, 0, 0, 5, 0, 29, 29, 1, 1, 0, 1, 1, 0]' : 0.11845}
{'[0, 2, 3, 5, 0, 0, 0, 0, 5, 0, 29, 29, 1, 1, 0, 1, 1, 0]' : 0.118727}
{'[0, 2, 3, 5, 0, 0, 0, 0, 5, 0, 29, 29, 1, 1, 0, 1, 1, 0]' : 0.116829}
{'[0, 2, 3, 5, 0, 0, 0, 0, 5, 0, 29, 29, 1, 1, 0, 1, 1, 0]' : 0.114153}
{'[0, 2, 3, 5, 0, 0, 0, 0, 5, 0, 29, 29, 1, 1, 0, 1, 1, 0]' : 0.114058}
{'[0, 2, 3, 5, 0, 0, 0, 0, 5, 0, 29, 29, 1, 1, 0, 1, 1, 0]' : 0.116657}
{'[0, 2, 3, 5, 0, 0, 0, 0, 5, 0, 29, 29, 1, 1, 0, 1, 1, 0]' : 0.117628}
{'[0, 2, 3, 5, 0, 0, 0, 0, 5, 0, 29, 29, 1, 1, 0, 1, 1, 0]' : 0.114485}
{'[0, 2, 3, 5, 0, 0, 0, 0, 5, 0, 29, 29, 1, 1, 0, 1, 1, 0]' : 0.114584}
{'[0, 2, 3, 5, 0, 0, 0, 0, 5, 0, 29, 29, 1, 1, 0, 1, 1, 0]' : 0.115935}
{'[0, 2, 3, 5, 0, 0, 0, 0, 5, 0, 29, 29, 1, 1, 0, 1, 1, 0]' : 0.118015}
{'[0, 2, 3, 5, 0, 0, 0, 0, 5, 0, 29, 29, 1, 1, 0, 1, 1, 0]' : 0.115552}
{'[0, 2, 3, 5, 0, 0, 0, 0, 5, 0, 29, 29, 1, 1, 0, 1, 1, 0]' : 0.114521}

out:
 ["{'[0, 2, 3, 5, 0, 0, 0, 0, 5, 0, 29, 29, 1, 1, 0, 1, 1, 0]' : 0.131722}", "{'[0, 2, 3, 5, 0, 0, 0, 0, 5, 0, 29, 29, 1, 1, 0, 1, 1, 0]' : 0.131725}", "{'[0, 2, 3, 5, 0, 0, 0, 0, 5, 0, 29, 29, 1, 1, 0, 1, 1, 0]' : 0.131116}", "{'[0, 2, 3, 5, 0, 0, 0, 0, 5, 0, 29, 29, 1, 1, 0, 1, 1, 0]' : 0.112921}", "{'[0, 2, 3, 5, 0, 0, 0, 0, 5, 0, 29, 29, 1, 1, 0, 1, 1, 0]' : 0.110739}", "{'[0, 2, 3, 5, 0, 0, 0, 0, 5, 0, 29, 29, 1, 1, 0, 1, 1, 0]' : 0.116989}", "{'[0, 2, 3, 5, 0, 0, 0, 0, 5, 0, 29, 29, 1, 1, 0, 1, 1, 0]' : 0.11513}", "{'[0, 2, 3, 5, 0, 0, 0, 0, 5, 0, 29, 29, 1, 1, 0, 1, 1, 0]' : 0.115083}", "{'[0, 2, 3, 5, 0, 0, 0, 0, 5, 0, 29, 29, 1, 1, 0, 1, 1, 0]' : 0.11485}", "{'[0, 2, 3, 5, 0, 0, 0, 0, 5, 0, 29, 29, 1, 1, 0, 1, 1, 0]' : 0.116597}", "{'[0, 2, 3, 5, 0, 0, 0, 0, 5, 0, 29, 29, 1, 1, 0, 1, 1, 0]' : 0.116306}", "{'[0, 2, 3, 5, 0, 0, 0, 0, 5, 0, 29, 29, 1, 1, 0, 1, 1, 0]' : 0.114794}", "{'[0, 2, 3, 5, 0, 0, 0, 0, 5, 0, 29, 29, 1, 1, 0, 1, 1, 0]' : 0.114871}", "{'[0, 2, 3, 5, 0, 0, 0, 0, 5, 0, 29, 29, 1, 1, 0, 1, 1, 0]' : 0.115535}", "{'[0, 2, 3, 5, 0, 0, 0, 0, 5, 0, 29, 29, 1, 1, 0, 1, 1, 0]' : 0.11843}", "{'[0, 2, 3, 5, 0, 0, 0, 0, 5, 0, 29, 29, 1, 1, 0, 1, 1, 0]' : 0.118379}", "{'[0, 2, 3, 5, 0, 0, 0, 0, 5, 0, 29, 29, 1, 1, 0, 1, 1, 0]' : 0.118348}", "{'[0, 2, 3, 5, 0, 0, 0, 0, 5, 0, 29, 29, 1, 1, 0, 1, 1, 0]' : 0.11845}", "{'[0, 2, 3, 5, 0, 0, 0, 0, 5, 0, 29, 29, 1, 1, 0, 1, 1, 0]' : 0.118727}", "{'[0, 2, 3, 5, 0, 0, 0, 0, 5, 0, 29, 29, 1, 1, 0, 1, 1, 0]' : 0.116829}", "{'[0, 2, 3, 5, 0, 0, 0, 0, 5, 0, 29, 29, 1, 1, 0, 1, 1, 0]' : 0.114153}", "{'[0, 2, 3, 5, 0, 0, 0, 0, 5, 0, 29, 29, 1, 1, 0, 1, 1, 0]' : 0.114058}", "{'[0, 2, 3, 5, 0, 0, 0, 0, 5, 0, 29, 29, 1, 1, 0, 1, 1, 0]' : 0.116657}", "{'[0, 2, 3, 5, 0, 0, 0, 0, 5, 0, 29, 29, 1, 1, 0, 1, 1, 0]' : 0.117628}", "{'[0, 2, 3, 5, 0, 0, 0, 0, 5, 0, 29, 29, 1, 1, 0, 1, 1, 0]' : 0.114485}", "{'[0, 2, 3, 5, 0, 0, 0, 0, 5, 0, 29, 29, 1, 1, 0, 1, 1, 0]' : 0.114584}", "{'[0, 2, 3, 5, 0, 0, 0, 0, 5, 0, 29, 29, 1, 1, 0, 1, 1, 0]' : 0.115935}", "{'[0, 2, 3, 5, 0, 0, 0, 0, 5, 0, 29, 29, 1, 1, 0, 1, 1, 0]' : 0.118015}", "{'[0, 2, 3, 5, 0, 0, 0, 0, 5, 0, 29, 29, 1, 1, 0, 1, 1, 0]' : 0.115552}", "{'[0, 2, 3, 5, 0, 0, 0, 0, 5, 0, 29, 29, 1, 1, 0, 1, 1, 0]' : 0.114521}"]
returning from 'run': {'[0, 2, 3, 5, 0, 0, 0, 0, 5, 0, 29, 29, 1, 1, 0, 1, 1, 0]': ([0.131722, 0.131725, 0.131116, 0.112921, 0.110739, 0.116989, 0.11513, 0.115083, 0.11485, 0.116597, 0.116306, 0.114794, 0.114871, 0.115535, 0.11843, 0.118379, 0.118348, 0.11845, 0.118727, 0.116829, 0.114153, 0.114058, 0.116657, 0.117628, 0.114485, 0.114584, 0.115935, 0.118015, 0.115552, 0.114521], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 3, 5, 0, 0, 0, 0, 5, 0, 29, 29, 1, 1, 0, 1, 1, 0]': ([0.131722, 0.131725, 0.131116, 0.112921, 0.110739, 0.116989, 0.11513, 0.115083, 0.11485, 0.116597, 0.116306, 0.114794, 0.114871, 0.115535, 0.11843, 0.118379, 0.118348, 0.11845, 0.118727, 0.116829, 0.114153, 0.114058, 0.116657, 0.117628, 0.114485, 0.114584, 0.115935, 0.118015, 0.115552, 0.114521], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	112
        Max loop nest depth: 	6
        Additions: 		10319
        Multiplications: 	3968
        Divisions: 		0
        Logical: 		0
        Reads: 			17364
        Writes: 		2441
        Comparisons:		112
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest64.exe __orio_perftest64.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest64.exe  
Program Test Output: 
{'[3, 2, 5, 3, 0, 4, 1, 0, 5, 28, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.314283}
{'[3, 2, 5, 3, 0, 4, 1, 0, 5, 28, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.292245}
{'[3, 2, 5, 3, 0, 4, 1, 0, 5, 28, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.275614}
{'[3, 2, 5, 3, 0, 4, 1, 0, 5, 28, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.275912}
{'[3, 2, 5, 3, 0, 4, 1, 0, 5, 28, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.27638}
{'[3, 2, 5, 3, 0, 4, 1, 0, 5, 28, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.276029}
{'[3, 2, 5, 3, 0, 4, 1, 0, 5, 28, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.276281}
{'[3, 2, 5, 3, 0, 4, 1, 0, 5, 28, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.276651}
{'[3, 2, 5, 3, 0, 4, 1, 0, 5, 28, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.276884}
{'[3, 2, 5, 3, 0, 4, 1, 0, 5, 28, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.277847}
{'[3, 2, 5, 3, 0, 4, 1, 0, 5, 28, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.277181}
{'[3, 2, 5, 3, 0, 4, 1, 0, 5, 28, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.276523}
{'[3, 2, 5, 3, 0, 4, 1, 0, 5, 28, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.277394}
{'[3, 2, 5, 3, 0, 4, 1, 0, 5, 28, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.2759}
{'[3, 2, 5, 3, 0, 4, 1, 0, 5, 28, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.276161}
{'[3, 2, 5, 3, 0, 4, 1, 0, 5, 28, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.279762}
{'[3, 2, 5, 3, 0, 4, 1, 0, 5, 28, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.276628}
{'[3, 2, 5, 3, 0, 4, 1, 0, 5, 28, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.275607}
{'[3, 2, 5, 3, 0, 4, 1, 0, 5, 28, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.277214}
{'[3, 2, 5, 3, 0, 4, 1, 0, 5, 28, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.278138}
{'[3, 2, 5, 3, 0, 4, 1, 0, 5, 28, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.278019}
{'[3, 2, 5, 3, 0, 4, 1, 0, 5, 28, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.276512}
{'[3, 2, 5, 3, 0, 4, 1, 0, 5, 28, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.275229}
{'[3, 2, 5, 3, 0, 4, 1, 0, 5, 28, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.276478}
{'[3, 2, 5, 3, 0, 4, 1, 0, 5, 28, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.27651}
{'[3, 2, 5, 3, 0, 4, 1, 0, 5, 28, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.274054}
{'[3, 2, 5, 3, 0, 4, 1, 0, 5, 28, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.274779}
{'[3, 2, 5, 3, 0, 4, 1, 0, 5, 28, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.27774}
{'[3, 2, 5, 3, 0, 4, 1, 0, 5, 28, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.276406}
{'[3, 2, 5, 3, 0, 4, 1, 0, 5, 28, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.275719}

out:
 ["{'[3, 2, 5, 3, 0, 4, 1, 0, 5, 28, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.314283}", "{'[3, 2, 5, 3, 0, 4, 1, 0, 5, 28, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.292245}", "{'[3, 2, 5, 3, 0, 4, 1, 0, 5, 28, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.275614}", "{'[3, 2, 5, 3, 0, 4, 1, 0, 5, 28, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.275912}", "{'[3, 2, 5, 3, 0, 4, 1, 0, 5, 28, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.27638}", "{'[3, 2, 5, 3, 0, 4, 1, 0, 5, 28, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.276029}", "{'[3, 2, 5, 3, 0, 4, 1, 0, 5, 28, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.276281}", "{'[3, 2, 5, 3, 0, 4, 1, 0, 5, 28, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.276651}", "{'[3, 2, 5, 3, 0, 4, 1, 0, 5, 28, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.276884}", "{'[3, 2, 5, 3, 0, 4, 1, 0, 5, 28, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.277847}", "{'[3, 2, 5, 3, 0, 4, 1, 0, 5, 28, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.277181}", "{'[3, 2, 5, 3, 0, 4, 1, 0, 5, 28, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.276523}", "{'[3, 2, 5, 3, 0, 4, 1, 0, 5, 28, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.277394}", "{'[3, 2, 5, 3, 0, 4, 1, 0, 5, 28, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.2759}", "{'[3, 2, 5, 3, 0, 4, 1, 0, 5, 28, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.276161}", "{'[3, 2, 5, 3, 0, 4, 1, 0, 5, 28, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.279762}", "{'[3, 2, 5, 3, 0, 4, 1, 0, 5, 28, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.276628}", "{'[3, 2, 5, 3, 0, 4, 1, 0, 5, 28, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.275607}", "{'[3, 2, 5, 3, 0, 4, 1, 0, 5, 28, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.277214}", "{'[3, 2, 5, 3, 0, 4, 1, 0, 5, 28, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.278138}", "{'[3, 2, 5, 3, 0, 4, 1, 0, 5, 28, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.278019}", "{'[3, 2, 5, 3, 0, 4, 1, 0, 5, 28, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.276512}", "{'[3, 2, 5, 3, 0, 4, 1, 0, 5, 28, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.275229}", "{'[3, 2, 5, 3, 0, 4, 1, 0, 5, 28, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.276478}", "{'[3, 2, 5, 3, 0, 4, 1, 0, 5, 28, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.27651}", "{'[3, 2, 5, 3, 0, 4, 1, 0, 5, 28, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.274054}", "{'[3, 2, 5, 3, 0, 4, 1, 0, 5, 28, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.274779}", "{'[3, 2, 5, 3, 0, 4, 1, 0, 5, 28, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.27774}", "{'[3, 2, 5, 3, 0, 4, 1, 0, 5, 28, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.276406}", "{'[3, 2, 5, 3, 0, 4, 1, 0, 5, 28, 29, 0, 2, 0, 0, 1, 1, 0]' : 0.275719}"]
returning from 'run': {'[3, 2, 5, 3, 0, 4, 1, 0, 5, 28, 29, 0, 2, 0, 0, 1, 1, 0]': ([0.314283, 0.292245, 0.275614, 0.275912, 0.27638, 0.276029, 0.276281, 0.276651, 0.276884, 0.277847, 0.277181, 0.276523, 0.277394, 0.2759, 0.276161, 0.279762, 0.276628, 0.275607, 0.277214, 0.278138, 0.278019, 0.276512, 0.275229, 0.276478, 0.27651, 0.274054, 0.274779, 0.27774, 0.276406, 0.275719], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 2, 5, 3, 0, 4, 1, 0, 5, 28, 29, 0, 2, 0, 0, 1, 1, 0]': ([0.314283, 0.292245, 0.275614, 0.275912, 0.27638, 0.276029, 0.276281, 0.276651, 0.276884, 0.277847, 0.277181, 0.276523, 0.277394, 0.2759, 0.276161, 0.279762, 0.276628, 0.275607, 0.277214, 0.278138, 0.278019, 0.276512, 0.275229, 0.276478, 0.27651, 0.274054, 0.274779, 0.27774, 0.276406, 0.275719], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	17
        Max loop nest depth: 	4
        Additions: 		4174
        Multiplications: 	2058
        Divisions: 		0
        Logical: 		0
        Reads: 			7807
        Writes: 		1230
        Comparisons:		17
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest65.exe __orio_perftest65.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest65.exe  
Program Test Output: 
{'[6, 2, 6, 0, 0, 0, 0, 0, 5, 19, 0, 14, 0, 2, 0, 1, 0, 0]' : 0.146845}
{'[6, 2, 6, 0, 0, 0, 0, 0, 5, 19, 0, 14, 0, 2, 0, 1, 0, 0]' : 0.14977}
{'[6, 2, 6, 0, 0, 0, 0, 0, 5, 19, 0, 14, 0, 2, 0, 1, 0, 0]' : 0.141219}
{'[6, 2, 6, 0, 0, 0, 0, 0, 5, 19, 0, 14, 0, 2, 0, 1, 0, 0]' : 0.127886}
{'[6, 2, 6, 0, 0, 0, 0, 0, 5, 19, 0, 14, 0, 2, 0, 1, 0, 0]' : 0.125421}
{'[6, 2, 6, 0, 0, 0, 0, 0, 5, 19, 0, 14, 0, 2, 0, 1, 0, 0]' : 0.123907}
{'[6, 2, 6, 0, 0, 0, 0, 0, 5, 19, 0, 14, 0, 2, 0, 1, 0, 0]' : 0.124338}
{'[6, 2, 6, 0, 0, 0, 0, 0, 5, 19, 0, 14, 0, 2, 0, 1, 0, 0]' : 0.123867}
{'[6, 2, 6, 0, 0, 0, 0, 0, 5, 19, 0, 14, 0, 2, 0, 1, 0, 0]' : 0.124448}
{'[6, 2, 6, 0, 0, 0, 0, 0, 5, 19, 0, 14, 0, 2, 0, 1, 0, 0]' : 0.123824}
{'[6, 2, 6, 0, 0, 0, 0, 0, 5, 19, 0, 14, 0, 2, 0, 1, 0, 0]' : 0.124391}
{'[6, 2, 6, 0, 0, 0, 0, 0, 5, 19, 0, 14, 0, 2, 0, 1, 0, 0]' : 0.12384}
{'[6, 2, 6, 0, 0, 0, 0, 0, 5, 19, 0, 14, 0, 2, 0, 1, 0, 0]' : 0.123781}
{'[6, 2, 6, 0, 0, 0, 0, 0, 5, 19, 0, 14, 0, 2, 0, 1, 0, 0]' : 0.123883}
{'[6, 2, 6, 0, 0, 0, 0, 0, 5, 19, 0, 14, 0, 2, 0, 1, 0, 0]' : 0.124113}
{'[6, 2, 6, 0, 0, 0, 0, 0, 5, 19, 0, 14, 0, 2, 0, 1, 0, 0]' : 0.124008}
{'[6, 2, 6, 0, 0, 0, 0, 0, 5, 19, 0, 14, 0, 2, 0, 1, 0, 0]' : 0.124182}
{'[6, 2, 6, 0, 0, 0, 0, 0, 5, 19, 0, 14, 0, 2, 0, 1, 0, 0]' : 0.124051}
{'[6, 2, 6, 0, 0, 0, 0, 0, 5, 19, 0, 14, 0, 2, 0, 1, 0, 0]' : 0.124217}
{'[6, 2, 6, 0, 0, 0, 0, 0, 5, 19, 0, 14, 0, 2, 0, 1, 0, 0]' : 0.123881}
{'[6, 2, 6, 0, 0, 0, 0, 0, 5, 19, 0, 14, 0, 2, 0, 1, 0, 0]' : 0.12394}
{'[6, 2, 6, 0, 0, 0, 0, 0, 5, 19, 0, 14, 0, 2, 0, 1, 0, 0]' : 0.123799}
{'[6, 2, 6, 0, 0, 0, 0, 0, 5, 19, 0, 14, 0, 2, 0, 1, 0, 0]' : 0.124535}
{'[6, 2, 6, 0, 0, 0, 0, 0, 5, 19, 0, 14, 0, 2, 0, 1, 0, 0]' : 0.12382}
{'[6, 2, 6, 0, 0, 0, 0, 0, 5, 19, 0, 14, 0, 2, 0, 1, 0, 0]' : 0.124088}
{'[6, 2, 6, 0, 0, 0, 0, 0, 5, 19, 0, 14, 0, 2, 0, 1, 0, 0]' : 0.124167}
{'[6, 2, 6, 0, 0, 0, 0, 0, 5, 19, 0, 14, 0, 2, 0, 1, 0, 0]' : 0.124414}
{'[6, 2, 6, 0, 0, 0, 0, 0, 5, 19, 0, 14, 0, 2, 0, 1, 0, 0]' : 0.124047}
{'[6, 2, 6, 0, 0, 0, 0, 0, 5, 19, 0, 14, 0, 2, 0, 1, 0, 0]' : 0.123993}
{'[6, 2, 6, 0, 0, 0, 0, 0, 5, 19, 0, 14, 0, 2, 0, 1, 0, 0]' : 0.123925}

out:
 ["{'[6, 2, 6, 0, 0, 0, 0, 0, 5, 19, 0, 14, 0, 2, 0, 1, 0, 0]' : 0.146845}", "{'[6, 2, 6, 0, 0, 0, 0, 0, 5, 19, 0, 14, 0, 2, 0, 1, 0, 0]' : 0.14977}", "{'[6, 2, 6, 0, 0, 0, 0, 0, 5, 19, 0, 14, 0, 2, 0, 1, 0, 0]' : 0.141219}", "{'[6, 2, 6, 0, 0, 0, 0, 0, 5, 19, 0, 14, 0, 2, 0, 1, 0, 0]' : 0.127886}", "{'[6, 2, 6, 0, 0, 0, 0, 0, 5, 19, 0, 14, 0, 2, 0, 1, 0, 0]' : 0.125421}", "{'[6, 2, 6, 0, 0, 0, 0, 0, 5, 19, 0, 14, 0, 2, 0, 1, 0, 0]' : 0.123907}", "{'[6, 2, 6, 0, 0, 0, 0, 0, 5, 19, 0, 14, 0, 2, 0, 1, 0, 0]' : 0.124338}", "{'[6, 2, 6, 0, 0, 0, 0, 0, 5, 19, 0, 14, 0, 2, 0, 1, 0, 0]' : 0.123867}", "{'[6, 2, 6, 0, 0, 0, 0, 0, 5, 19, 0, 14, 0, 2, 0, 1, 0, 0]' : 0.124448}", "{'[6, 2, 6, 0, 0, 0, 0, 0, 5, 19, 0, 14, 0, 2, 0, 1, 0, 0]' : 0.123824}", "{'[6, 2, 6, 0, 0, 0, 0, 0, 5, 19, 0, 14, 0, 2, 0, 1, 0, 0]' : 0.124391}", "{'[6, 2, 6, 0, 0, 0, 0, 0, 5, 19, 0, 14, 0, 2, 0, 1, 0, 0]' : 0.12384}", "{'[6, 2, 6, 0, 0, 0, 0, 0, 5, 19, 0, 14, 0, 2, 0, 1, 0, 0]' : 0.123781}", "{'[6, 2, 6, 0, 0, 0, 0, 0, 5, 19, 0, 14, 0, 2, 0, 1, 0, 0]' : 0.123883}", "{'[6, 2, 6, 0, 0, 0, 0, 0, 5, 19, 0, 14, 0, 2, 0, 1, 0, 0]' : 0.124113}", "{'[6, 2, 6, 0, 0, 0, 0, 0, 5, 19, 0, 14, 0, 2, 0, 1, 0, 0]' : 0.124008}", "{'[6, 2, 6, 0, 0, 0, 0, 0, 5, 19, 0, 14, 0, 2, 0, 1, 0, 0]' : 0.124182}", "{'[6, 2, 6, 0, 0, 0, 0, 0, 5, 19, 0, 14, 0, 2, 0, 1, 0, 0]' : 0.124051}", "{'[6, 2, 6, 0, 0, 0, 0, 0, 5, 19, 0, 14, 0, 2, 0, 1, 0, 0]' : 0.124217}", "{'[6, 2, 6, 0, 0, 0, 0, 0, 5, 19, 0, 14, 0, 2, 0, 1, 0, 0]' : 0.123881}", "{'[6, 2, 6, 0, 0, 0, 0, 0, 5, 19, 0, 14, 0, 2, 0, 1, 0, 0]' : 0.12394}", "{'[6, 2, 6, 0, 0, 0, 0, 0, 5, 19, 0, 14, 0, 2, 0, 1, 0, 0]' : 0.123799}", "{'[6, 2, 6, 0, 0, 0, 0, 0, 5, 19, 0, 14, 0, 2, 0, 1, 0, 0]' : 0.124535}", "{'[6, 2, 6, 0, 0, 0, 0, 0, 5, 19, 0, 14, 0, 2, 0, 1, 0, 0]' : 0.12382}", "{'[6, 2, 6, 0, 0, 0, 0, 0, 5, 19, 0, 14, 0, 2, 0, 1, 0, 0]' : 0.124088}", "{'[6, 2, 6, 0, 0, 0, 0, 0, 5, 19, 0, 14, 0, 2, 0, 1, 0, 0]' : 0.124167}", "{'[6, 2, 6, 0, 0, 0, 0, 0, 5, 19, 0, 14, 0, 2, 0, 1, 0, 0]' : 0.124414}", "{'[6, 2, 6, 0, 0, 0, 0, 0, 5, 19, 0, 14, 0, 2, 0, 1, 0, 0]' : 0.124047}", "{'[6, 2, 6, 0, 0, 0, 0, 0, 5, 19, 0, 14, 0, 2, 0, 1, 0, 0]' : 0.123993}", "{'[6, 2, 6, 0, 0, 0, 0, 0, 5, 19, 0, 14, 0, 2, 0, 1, 0, 0]' : 0.123925}"]
returning from 'run': {'[6, 2, 6, 0, 0, 0, 0, 0, 5, 19, 0, 14, 0, 2, 0, 1, 0, 0]': ([0.146845, 0.14977, 0.141219, 0.127886, 0.125421, 0.123907, 0.124338, 0.123867, 0.124448, 0.123824, 0.124391, 0.12384, 0.123781, 0.123883, 0.124113, 0.124008, 0.124182, 0.124051, 0.124217, 0.123881, 0.12394, 0.123799, 0.124535, 0.12382, 0.124088, 0.124167, 0.124414, 0.124047, 0.123993, 0.123925], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 2, 6, 0, 0, 0, 0, 0, 5, 19, 0, 14, 0, 2, 0, 1, 0, 0]': ([0.146845, 0.14977, 0.141219, 0.127886, 0.125421, 0.123907, 0.124338, 0.123867, 0.124448, 0.123824, 0.124391, 0.12384, 0.123781, 0.123883, 0.124113, 0.124008, 0.124182, 0.124051, 0.124217, 0.123881, 0.12394, 0.123799, 0.124535, 0.12382, 0.124088, 0.124167, 0.124414, 0.124047, 0.123993, 0.123925], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	27
        Max loop nest depth: 	5
        Additions: 		874
        Multiplications: 	328
        Divisions: 		0
        Logical: 		0
        Reads: 			1989
        Writes: 		434
        Comparisons:		27
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest66.exe __orio_perftest66.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest66.exe  
Program Test Output: 
{'[0, 2, 3, 6, 0, 5, 1, 0, 5, 2, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.122457}
{'[0, 2, 3, 6, 0, 5, 1, 0, 5, 2, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.11879}
{'[0, 2, 3, 6, 0, 5, 1, 0, 5, 2, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.123217}
{'[0, 2, 3, 6, 0, 5, 1, 0, 5, 2, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.125115}
{'[0, 2, 3, 6, 0, 5, 1, 0, 5, 2, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.122569}
{'[0, 2, 3, 6, 0, 5, 1, 0, 5, 2, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.122602}
{'[0, 2, 3, 6, 0, 5, 1, 0, 5, 2, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.12253}
{'[0, 2, 3, 6, 0, 5, 1, 0, 5, 2, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.122523}
{'[0, 2, 3, 6, 0, 5, 1, 0, 5, 2, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.122464}
{'[0, 2, 3, 6, 0, 5, 1, 0, 5, 2, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.12239}
{'[0, 2, 3, 6, 0, 5, 1, 0, 5, 2, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.124435}
{'[0, 2, 3, 6, 0, 5, 1, 0, 5, 2, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.126109}
{'[0, 2, 3, 6, 0, 5, 1, 0, 5, 2, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.122687}
{'[0, 2, 3, 6, 0, 5, 1, 0, 5, 2, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.122546}
{'[0, 2, 3, 6, 0, 5, 1, 0, 5, 2, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.122471}
{'[0, 2, 3, 6, 0, 5, 1, 0, 5, 2, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.122457}
{'[0, 2, 3, 6, 0, 5, 1, 0, 5, 2, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.122422}
{'[0, 2, 3, 6, 0, 5, 1, 0, 5, 2, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.122457}
{'[0, 2, 3, 6, 0, 5, 1, 0, 5, 2, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.12022}
{'[0, 2, 3, 6, 0, 5, 1, 0, 5, 2, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.126217}
{'[0, 2, 3, 6, 0, 5, 1, 0, 5, 2, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.123539}
{'[0, 2, 3, 6, 0, 5, 1, 0, 5, 2, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.122826}
{'[0, 2, 3, 6, 0, 5, 1, 0, 5, 2, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.122682}
{'[0, 2, 3, 6, 0, 5, 1, 0, 5, 2, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.122464}
{'[0, 2, 3, 6, 0, 5, 1, 0, 5, 2, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.122471}
{'[0, 2, 3, 6, 0, 5, 1, 0, 5, 2, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.123084}
{'[0, 2, 3, 6, 0, 5, 1, 0, 5, 2, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.1227}
{'[0, 2, 3, 6, 0, 5, 1, 0, 5, 2, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.124124}
{'[0, 2, 3, 6, 0, 5, 1, 0, 5, 2, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.123214}
{'[0, 2, 3, 6, 0, 5, 1, 0, 5, 2, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.122453}

out:
 ["{'[0, 2, 3, 6, 0, 5, 1, 0, 5, 2, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.122457}", "{'[0, 2, 3, 6, 0, 5, 1, 0, 5, 2, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.11879}", "{'[0, 2, 3, 6, 0, 5, 1, 0, 5, 2, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.123217}", "{'[0, 2, 3, 6, 0, 5, 1, 0, 5, 2, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.125115}", "{'[0, 2, 3, 6, 0, 5, 1, 0, 5, 2, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.122569}", "{'[0, 2, 3, 6, 0, 5, 1, 0, 5, 2, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.122602}", "{'[0, 2, 3, 6, 0, 5, 1, 0, 5, 2, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.12253}", "{'[0, 2, 3, 6, 0, 5, 1, 0, 5, 2, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.122523}", "{'[0, 2, 3, 6, 0, 5, 1, 0, 5, 2, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.122464}", "{'[0, 2, 3, 6, 0, 5, 1, 0, 5, 2, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.12239}", "{'[0, 2, 3, 6, 0, 5, 1, 0, 5, 2, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.124435}", "{'[0, 2, 3, 6, 0, 5, 1, 0, 5, 2, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.126109}", "{'[0, 2, 3, 6, 0, 5, 1, 0, 5, 2, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.122687}", "{'[0, 2, 3, 6, 0, 5, 1, 0, 5, 2, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.122546}", "{'[0, 2, 3, 6, 0, 5, 1, 0, 5, 2, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.122471}", "{'[0, 2, 3, 6, 0, 5, 1, 0, 5, 2, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.122457}", "{'[0, 2, 3, 6, 0, 5, 1, 0, 5, 2, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.122422}", "{'[0, 2, 3, 6, 0, 5, 1, 0, 5, 2, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.122457}", "{'[0, 2, 3, 6, 0, 5, 1, 0, 5, 2, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.12022}", "{'[0, 2, 3, 6, 0, 5, 1, 0, 5, 2, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.126217}", "{'[0, 2, 3, 6, 0, 5, 1, 0, 5, 2, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.123539}", "{'[0, 2, 3, 6, 0, 5, 1, 0, 5, 2, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.122826}", "{'[0, 2, 3, 6, 0, 5, 1, 0, 5, 2, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.122682}", "{'[0, 2, 3, 6, 0, 5, 1, 0, 5, 2, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.122464}", "{'[0, 2, 3, 6, 0, 5, 1, 0, 5, 2, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.122471}", "{'[0, 2, 3, 6, 0, 5, 1, 0, 5, 2, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.123084}", "{'[0, 2, 3, 6, 0, 5, 1, 0, 5, 2, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.1227}", "{'[0, 2, 3, 6, 0, 5, 1, 0, 5, 2, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.124124}", "{'[0, 2, 3, 6, 0, 5, 1, 0, 5, 2, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.123214}", "{'[0, 2, 3, 6, 0, 5, 1, 0, 5, 2, 0, 6, 0, 0, 2, 1, 0, 0]' : 0.122453}"]
returning from 'run': {'[0, 2, 3, 6, 0, 5, 1, 0, 5, 2, 0, 6, 0, 0, 2, 1, 0, 0]': ([0.122457, 0.11879, 0.123217, 0.125115, 0.122569, 0.122602, 0.12253, 0.122523, 0.122464, 0.12239, 0.124435, 0.126109, 0.122687, 0.122546, 0.122471, 0.122457, 0.122422, 0.122457, 0.12022, 0.126217, 0.123539, 0.122826, 0.122682, 0.122464, 0.122471, 0.123084, 0.1227, 0.124124, 0.123214, 0.122453], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 3, 6, 0, 5, 1, 0, 5, 2, 0, 6, 0, 0, 2, 1, 0, 0]': ([0.122457, 0.11879, 0.123217, 0.125115, 0.122569, 0.122602, 0.12253, 0.122523, 0.122464, 0.12239, 0.124435, 0.126109, 0.122687, 0.122546, 0.122471, 0.122457, 0.122422, 0.122457, 0.12022, 0.126217, 0.123539, 0.122826, 0.122682, 0.122464, 0.122471, 0.123084, 0.1227, 0.124124, 0.123214, 0.122453], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	79
        Max loop nest depth: 	5
        Additions: 		5217
        Multiplications: 	1984
        Divisions: 		0
        Logical: 		0
        Reads: 			10766
        Writes: 		2221
        Comparisons:		79
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest67.exe __orio_perftest67.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest67.exe  
Program Test Output: 
{'[5, 2, 2, 0, 0, 2, 0, 0, 5, 29, 0, 13, 0, 1, 1, 1, 0, 0]' : 0.200866}
{'[5, 2, 2, 0, 0, 2, 0, 0, 5, 29, 0, 13, 0, 1, 1, 1, 0, 0]' : 0.207351}
{'[5, 2, 2, 0, 0, 2, 0, 0, 5, 29, 0, 13, 0, 1, 1, 1, 0, 0]' : 0.200131}
{'[5, 2, 2, 0, 0, 2, 0, 0, 5, 29, 0, 13, 0, 1, 1, 1, 0, 0]' : 0.202984}
{'[5, 2, 2, 0, 0, 2, 0, 0, 5, 29, 0, 13, 0, 1, 1, 1, 0, 0]' : 0.204726}
{'[5, 2, 2, 0, 0, 2, 0, 0, 5, 29, 0, 13, 0, 1, 1, 1, 0, 0]' : 0.204861}
{'[5, 2, 2, 0, 0, 2, 0, 0, 5, 29, 0, 13, 0, 1, 1, 1, 0, 0]' : 0.205911}
{'[5, 2, 2, 0, 0, 2, 0, 0, 5, 29, 0, 13, 0, 1, 1, 1, 0, 0]' : 0.204986}
{'[5, 2, 2, 0, 0, 2, 0, 0, 5, 29, 0, 13, 0, 1, 1, 1, 0, 0]' : 0.205016}
{'[5, 2, 2, 0, 0, 2, 0, 0, 5, 29, 0, 13, 0, 1, 1, 1, 0, 0]' : 0.208072}
{'[5, 2, 2, 0, 0, 2, 0, 0, 5, 29, 0, 13, 0, 1, 1, 1, 0, 0]' : 0.207063}
{'[5, 2, 2, 0, 0, 2, 0, 0, 5, 29, 0, 13, 0, 1, 1, 1, 0, 0]' : 0.208366}
{'[5, 2, 2, 0, 0, 2, 0, 0, 5, 29, 0, 13, 0, 1, 1, 1, 0, 0]' : 0.205872}
{'[5, 2, 2, 0, 0, 2, 0, 0, 5, 29, 0, 13, 0, 1, 1, 1, 0, 0]' : 0.204808}
{'[5, 2, 2, 0, 0, 2, 0, 0, 5, 29, 0, 13, 0, 1, 1, 1, 0, 0]' : 0.208585}
{'[5, 2, 2, 0, 0, 2, 0, 0, 5, 29, 0, 13, 0, 1, 1, 1, 0, 0]' : 0.20602}
{'[5, 2, 2, 0, 0, 2, 0, 0, 5, 29, 0, 13, 0, 1, 1, 1, 0, 0]' : 0.206868}
{'[5, 2, 2, 0, 0, 2, 0, 0, 5, 29, 0, 13, 0, 1, 1, 1, 0, 0]' : 0.207346}
{'[5, 2, 2, 0, 0, 2, 0, 0, 5, 29, 0, 13, 0, 1, 1, 1, 0, 0]' : 0.207178}
{'[5, 2, 2, 0, 0, 2, 0, 0, 5, 29, 0, 13, 0, 1, 1, 1, 0, 0]' : 0.203614}
{'[5, 2, 2, 0, 0, 2, 0, 0, 5, 29, 0, 13, 0, 1, 1, 1, 0, 0]' : 0.206582}
{'[5, 2, 2, 0, 0, 2, 0, 0, 5, 29, 0, 13, 0, 1, 1, 1, 0, 0]' : 0.202175}
{'[5, 2, 2, 0, 0, 2, 0, 0, 5, 29, 0, 13, 0, 1, 1, 1, 0, 0]' : 0.204046}
{'[5, 2, 2, 0, 0, 2, 0, 0, 5, 29, 0, 13, 0, 1, 1, 1, 0, 0]' : 0.212309}
{'[5, 2, 2, 0, 0, 2, 0, 0, 5, 29, 0, 13, 0, 1, 1, 1, 0, 0]' : 0.207797}
{'[5, 2, 2, 0, 0, 2, 0, 0, 5, 29, 0, 13, 0, 1, 1, 1, 0, 0]' : 0.209618}
{'[5, 2, 2, 0, 0, 2, 0, 0, 5, 29, 0, 13, 0, 1, 1, 1, 0, 0]' : 0.204884}
{'[5, 2, 2, 0, 0, 2, 0, 0, 5, 29, 0, 13, 0, 1, 1, 1, 0, 0]' : 0.202419}
{'[5, 2, 2, 0, 0, 2, 0, 0, 5, 29, 0, 13, 0, 1, 1, 1, 0, 0]' : 0.207573}
{'[5, 2, 2, 0, 0, 2, 0, 0, 5, 29, 0, 13, 0, 1, 1, 1, 0, 0]' : 0.201999}

out:
 ["{'[5, 2, 2, 0, 0, 2, 0, 0, 5, 29, 0, 13, 0, 1, 1, 1, 0, 0]' : 0.200866}", "{'[5, 2, 2, 0, 0, 2, 0, 0, 5, 29, 0, 13, 0, 1, 1, 1, 0, 0]' : 0.207351}", "{'[5, 2, 2, 0, 0, 2, 0, 0, 5, 29, 0, 13, 0, 1, 1, 1, 0, 0]' : 0.200131}", "{'[5, 2, 2, 0, 0, 2, 0, 0, 5, 29, 0, 13, 0, 1, 1, 1, 0, 0]' : 0.202984}", "{'[5, 2, 2, 0, 0, 2, 0, 0, 5, 29, 0, 13, 0, 1, 1, 1, 0, 0]' : 0.204726}", "{'[5, 2, 2, 0, 0, 2, 0, 0, 5, 29, 0, 13, 0, 1, 1, 1, 0, 0]' : 0.204861}", "{'[5, 2, 2, 0, 0, 2, 0, 0, 5, 29, 0, 13, 0, 1, 1, 1, 0, 0]' : 0.205911}", "{'[5, 2, 2, 0, 0, 2, 0, 0, 5, 29, 0, 13, 0, 1, 1, 1, 0, 0]' : 0.204986}", "{'[5, 2, 2, 0, 0, 2, 0, 0, 5, 29, 0, 13, 0, 1, 1, 1, 0, 0]' : 0.205016}", "{'[5, 2, 2, 0, 0, 2, 0, 0, 5, 29, 0, 13, 0, 1, 1, 1, 0, 0]' : 0.208072}", "{'[5, 2, 2, 0, 0, 2, 0, 0, 5, 29, 0, 13, 0, 1, 1, 1, 0, 0]' : 0.207063}", "{'[5, 2, 2, 0, 0, 2, 0, 0, 5, 29, 0, 13, 0, 1, 1, 1, 0, 0]' : 0.208366}", "{'[5, 2, 2, 0, 0, 2, 0, 0, 5, 29, 0, 13, 0, 1, 1, 1, 0, 0]' : 0.205872}", "{'[5, 2, 2, 0, 0, 2, 0, 0, 5, 29, 0, 13, 0, 1, 1, 1, 0, 0]' : 0.204808}", "{'[5, 2, 2, 0, 0, 2, 0, 0, 5, 29, 0, 13, 0, 1, 1, 1, 0, 0]' : 0.208585}", "{'[5, 2, 2, 0, 0, 2, 0, 0, 5, 29, 0, 13, 0, 1, 1, 1, 0, 0]' : 0.20602}", "{'[5, 2, 2, 0, 0, 2, 0, 0, 5, 29, 0, 13, 0, 1, 1, 1, 0, 0]' : 0.206868}", "{'[5, 2, 2, 0, 0, 2, 0, 0, 5, 29, 0, 13, 0, 1, 1, 1, 0, 0]' : 0.207346}", "{'[5, 2, 2, 0, 0, 2, 0, 0, 5, 29, 0, 13, 0, 1, 1, 1, 0, 0]' : 0.207178}", "{'[5, 2, 2, 0, 0, 2, 0, 0, 5, 29, 0, 13, 0, 1, 1, 1, 0, 0]' : 0.203614}", "{'[5, 2, 2, 0, 0, 2, 0, 0, 5, 29, 0, 13, 0, 1, 1, 1, 0, 0]' : 0.206582}", "{'[5, 2, 2, 0, 0, 2, 0, 0, 5, 29, 0, 13, 0, 1, 1, 1, 0, 0]' : 0.202175}", "{'[5, 2, 2, 0, 0, 2, 0, 0, 5, 29, 0, 13, 0, 1, 1, 1, 0, 0]' : 0.204046}", "{'[5, 2, 2, 0, 0, 2, 0, 0, 5, 29, 0, 13, 0, 1, 1, 1, 0, 0]' : 0.212309}", "{'[5, 2, 2, 0, 0, 2, 0, 0, 5, 29, 0, 13, 0, 1, 1, 1, 0, 0]' : 0.207797}", "{'[5, 2, 2, 0, 0, 2, 0, 0, 5, 29, 0, 13, 0, 1, 1, 1, 0, 0]' : 0.209618}", "{'[5, 2, 2, 0, 0, 2, 0, 0, 5, 29, 0, 13, 0, 1, 1, 1, 0, 0]' : 0.204884}", "{'[5, 2, 2, 0, 0, 2, 0, 0, 5, 29, 0, 13, 0, 1, 1, 1, 0, 0]' : 0.202419}", "{'[5, 2, 2, 0, 0, 2, 0, 0, 5, 29, 0, 13, 0, 1, 1, 1, 0, 0]' : 0.207573}", "{'[5, 2, 2, 0, 0, 2, 0, 0, 5, 29, 0, 13, 0, 1, 1, 1, 0, 0]' : 0.201999}"]
returning from 'run': {'[5, 2, 2, 0, 0, 2, 0, 0, 5, 29, 0, 13, 0, 1, 1, 1, 0, 0]': ([0.200866, 0.207351, 0.200131, 0.202984, 0.204726, 0.204861, 0.205911, 0.204986, 0.205016, 0.208072, 0.207063, 0.208366, 0.205872, 0.204808, 0.208585, 0.20602, 0.206868, 0.207346, 0.207178, 0.203614, 0.206582, 0.202175, 0.204046, 0.212309, 0.207797, 0.209618, 0.204884, 0.202419, 0.207573, 0.201999], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 2, 2, 0, 0, 2, 0, 0, 5, 29, 0, 13, 0, 1, 1, 1, 0, 0]': ([0.200866, 0.207351, 0.200131, 0.202984, 0.204726, 0.204861, 0.205911, 0.204986, 0.205016, 0.208072, 0.207063, 0.208366, 0.205872, 0.204808, 0.208585, 0.20602, 0.206868, 0.207346, 0.207178, 0.203614, 0.206582, 0.202175, 0.204046, 0.212309, 0.207797, 0.209618, 0.204884, 0.202419, 0.207573, 0.201999], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	6
        Additions: 		550
        Multiplications: 	234
        Divisions: 		0
        Logical: 		0
        Reads: 			1199
        Writes: 		239
        Comparisons:		22
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest68.exe __orio_perftest68.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest68.exe  
Program Test Output: 
{'[3, 2, 2, 3, 0, 5, 1, 0, 5, 0, 0, 2, 1, 0, 1, 1, 0, 0]' : 0.0953}
{'[3, 2, 2, 3, 0, 5, 1, 0, 5, 0, 0, 2, 1, 0, 1, 1, 0, 0]' : 0.0952129}
{'[3, 2, 2, 3, 0, 5, 1, 0, 5, 0, 0, 2, 1, 0, 1, 1, 0, 0]' : 0.095149}
{'[3, 2, 2, 3, 0, 5, 1, 0, 5, 0, 0, 2, 1, 0, 1, 1, 0, 0]' : 0.0952208}
{'[3, 2, 2, 3, 0, 5, 1, 0, 5, 0, 0, 2, 1, 0, 1, 1, 0, 0]' : 0.095129}
{'[3, 2, 2, 3, 0, 5, 1, 0, 5, 0, 0, 2, 1, 0, 1, 1, 0, 0]' : 0.095191}
{'[3, 2, 2, 3, 0, 5, 1, 0, 5, 0, 0, 2, 1, 0, 1, 1, 0, 0]' : 0.095082}
{'[3, 2, 2, 3, 0, 5, 1, 0, 5, 0, 0, 2, 1, 0, 1, 1, 0, 0]' : 0.095171}
{'[3, 2, 2, 3, 0, 5, 1, 0, 5, 0, 0, 2, 1, 0, 1, 1, 0, 0]' : 0.095355}
{'[3, 2, 2, 3, 0, 5, 1, 0, 5, 0, 0, 2, 1, 0, 1, 1, 0, 0]' : 0.095186}
{'[3, 2, 2, 3, 0, 5, 1, 0, 5, 0, 0, 2, 1, 0, 1, 1, 0, 0]' : 0.0951459}
{'[3, 2, 2, 3, 0, 5, 1, 0, 5, 0, 0, 2, 1, 0, 1, 1, 0, 0]' : 0.0936282}
{'[3, 2, 2, 3, 0, 5, 1, 0, 5, 0, 0, 2, 1, 0, 1, 1, 0, 0]' : 0.0927219}
{'[3, 2, 2, 3, 0, 5, 1, 0, 5, 0, 0, 2, 1, 0, 1, 1, 0, 0]' : 0.0927341}
{'[3, 2, 2, 3, 0, 5, 1, 0, 5, 0, 0, 2, 1, 0, 1, 1, 0, 0]' : 0.0948141}
{'[3, 2, 2, 3, 0, 5, 1, 0, 5, 0, 0, 2, 1, 0, 1, 1, 0, 0]' : 0.0949831}
{'[3, 2, 2, 3, 0, 5, 1, 0, 5, 0, 0, 2, 1, 0, 1, 1, 0, 0]' : 0.0950541}
{'[3, 2, 2, 3, 0, 5, 1, 0, 5, 0, 0, 2, 1, 0, 1, 1, 0, 0]' : 0.094485}
{'[3, 2, 2, 3, 0, 5, 1, 0, 5, 0, 0, 2, 1, 0, 1, 1, 0, 0]' : 0.0930219}
{'[3, 2, 2, 3, 0, 5, 1, 0, 5, 0, 0, 2, 1, 0, 1, 1, 0, 0]' : 0.092736}
{'[3, 2, 2, 3, 0, 5, 1, 0, 5, 0, 0, 2, 1, 0, 1, 1, 0, 0]' : 0.092793}
{'[3, 2, 2, 3, 0, 5, 1, 0, 5, 0, 0, 2, 1, 0, 1, 1, 0, 0]' : 0.0926452}
{'[3, 2, 2, 3, 0, 5, 1, 0, 5, 0, 0, 2, 1, 0, 1, 1, 0, 0]' : 0.0927}
{'[3, 2, 2, 3, 0, 5, 1, 0, 5, 0, 0, 2, 1, 0, 1, 1, 0, 0]' : 0.092721}
{'[3, 2, 2, 3, 0, 5, 1, 0, 5, 0, 0, 2, 1, 0, 1, 1, 0, 0]' : 0.091074}
{'[3, 2, 2, 3, 0, 5, 1, 0, 5, 0, 0, 2, 1, 0, 1, 1, 0, 0]' : 0.0949619}
{'[3, 2, 2, 3, 0, 5, 1, 0, 5, 0, 0, 2, 1, 0, 1, 1, 0, 0]' : 0.095052}
{'[3, 2, 2, 3, 0, 5, 1, 0, 5, 0, 0, 2, 1, 0, 1, 1, 0, 0]' : 0.0950332}
{'[3, 2, 2, 3, 0, 5, 1, 0, 5, 0, 0, 2, 1, 0, 1, 1, 0, 0]' : 0.0950029}
{'[3, 2, 2, 3, 0, 5, 1, 0, 5, 0, 0, 2, 1, 0, 1, 1, 0, 0]' : 0.0950482}

out:
 ["{'[3, 2, 2, 3, 0, 5, 1, 0, 5, 0, 0, 2, 1, 0, 1, 1, 0, 0]' : 0.0953}", "{'[3, 2, 2, 3, 0, 5, 1, 0, 5, 0, 0, 2, 1, 0, 1, 1, 0, 0]' : 0.0952129}", "{'[3, 2, 2, 3, 0, 5, 1, 0, 5, 0, 0, 2, 1, 0, 1, 1, 0, 0]' : 0.095149}", "{'[3, 2, 2, 3, 0, 5, 1, 0, 5, 0, 0, 2, 1, 0, 1, 1, 0, 0]' : 0.0952208}", "{'[3, 2, 2, 3, 0, 5, 1, 0, 5, 0, 0, 2, 1, 0, 1, 1, 0, 0]' : 0.095129}", "{'[3, 2, 2, 3, 0, 5, 1, 0, 5, 0, 0, 2, 1, 0, 1, 1, 0, 0]' : 0.095191}", "{'[3, 2, 2, 3, 0, 5, 1, 0, 5, 0, 0, 2, 1, 0, 1, 1, 0, 0]' : 0.095082}", "{'[3, 2, 2, 3, 0, 5, 1, 0, 5, 0, 0, 2, 1, 0, 1, 1, 0, 0]' : 0.095171}", "{'[3, 2, 2, 3, 0, 5, 1, 0, 5, 0, 0, 2, 1, 0, 1, 1, 0, 0]' : 0.095355}", "{'[3, 2, 2, 3, 0, 5, 1, 0, 5, 0, 0, 2, 1, 0, 1, 1, 0, 0]' : 0.095186}", "{'[3, 2, 2, 3, 0, 5, 1, 0, 5, 0, 0, 2, 1, 0, 1, 1, 0, 0]' : 0.0951459}", "{'[3, 2, 2, 3, 0, 5, 1, 0, 5, 0, 0, 2, 1, 0, 1, 1, 0, 0]' : 0.0936282}", "{'[3, 2, 2, 3, 0, 5, 1, 0, 5, 0, 0, 2, 1, 0, 1, 1, 0, 0]' : 0.0927219}", "{'[3, 2, 2, 3, 0, 5, 1, 0, 5, 0, 0, 2, 1, 0, 1, 1, 0, 0]' : 0.0927341}", "{'[3, 2, 2, 3, 0, 5, 1, 0, 5, 0, 0, 2, 1, 0, 1, 1, 0, 0]' : 0.0948141}", "{'[3, 2, 2, 3, 0, 5, 1, 0, 5, 0, 0, 2, 1, 0, 1, 1, 0, 0]' : 0.0949831}", "{'[3, 2, 2, 3, 0, 5, 1, 0, 5, 0, 0, 2, 1, 0, 1, 1, 0, 0]' : 0.0950541}", "{'[3, 2, 2, 3, 0, 5, 1, 0, 5, 0, 0, 2, 1, 0, 1, 1, 0, 0]' : 0.094485}", "{'[3, 2, 2, 3, 0, 5, 1, 0, 5, 0, 0, 2, 1, 0, 1, 1, 0, 0]' : 0.0930219}", "{'[3, 2, 2, 3, 0, 5, 1, 0, 5, 0, 0, 2, 1, 0, 1, 1, 0, 0]' : 0.092736}", "{'[3, 2, 2, 3, 0, 5, 1, 0, 5, 0, 0, 2, 1, 0, 1, 1, 0, 0]' : 0.092793}", "{'[3, 2, 2, 3, 0, 5, 1, 0, 5, 0, 0, 2, 1, 0, 1, 1, 0, 0]' : 0.0926452}", "{'[3, 2, 2, 3, 0, 5, 1, 0, 5, 0, 0, 2, 1, 0, 1, 1, 0, 0]' : 0.0927}", "{'[3, 2, 2, 3, 0, 5, 1, 0, 5, 0, 0, 2, 1, 0, 1, 1, 0, 0]' : 0.092721}", "{'[3, 2, 2, 3, 0, 5, 1, 0, 5, 0, 0, 2, 1, 0, 1, 1, 0, 0]' : 0.091074}", "{'[3, 2, 2, 3, 0, 5, 1, 0, 5, 0, 0, 2, 1, 0, 1, 1, 0, 0]' : 0.0949619}", "{'[3, 2, 2, 3, 0, 5, 1, 0, 5, 0, 0, 2, 1, 0, 1, 1, 0, 0]' : 0.095052}", "{'[3, 2, 2, 3, 0, 5, 1, 0, 5, 0, 0, 2, 1, 0, 1, 1, 0, 0]' : 0.0950332}", "{'[3, 2, 2, 3, 0, 5, 1, 0, 5, 0, 0, 2, 1, 0, 1, 1, 0, 0]' : 0.0950029}", "{'[3, 2, 2, 3, 0, 5, 1, 0, 5, 0, 0, 2, 1, 0, 1, 1, 0, 0]' : 0.0950482}"]
returning from 'run': {'[3, 2, 2, 3, 0, 5, 1, 0, 5, 0, 0, 2, 1, 0, 1, 1, 0, 0]': ([0.0953, 0.0952129, 0.095149, 0.0952208, 0.095129, 0.095191, 0.095082, 0.095171, 0.095355, 0.095186, 0.0951459, 0.0936282, 0.0927219, 0.0927341, 0.0948141, 0.0949831, 0.0950541, 0.094485, 0.0930219, 0.092736, 0.092793, 0.0926452, 0.0927, 0.092721, 0.091074, 0.0949619, 0.095052, 0.0950332, 0.0950029, 0.0950482], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 2, 2, 3, 0, 5, 1, 0, 5, 0, 0, 2, 1, 0, 1, 1, 0, 0]': ([0.0953, 0.0952129, 0.095149, 0.0952208, 0.095129, 0.095191, 0.095082, 0.095171, 0.095355, 0.095186, 0.0951459, 0.0936282, 0.0927219, 0.0927341, 0.0948141, 0.0949831, 0.0950541, 0.094485, 0.0930219, 0.092736, 0.092793, 0.0926452, 0.0927, 0.092721, 0.091074, 0.0949619, 0.095052, 0.0950332, 0.0950029, 0.0950482], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = kkk
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		314
        Multiplications: 	126
        Divisions: 		0
        Logical: 		0
        Reads: 			685
        Writes: 		128
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest69.exe __orio_perftest69.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest69.exe  
Program Test Output: 
{'[3, 2, 4, 6, 0, 2, 0, 0, 5, 0, 15, 12, 0, 2, 0, 1, 1, 0]' : 0.199814}
{'[3, 2, 4, 6, 0, 2, 0, 0, 5, 0, 15, 12, 0, 2, 0, 1, 1, 0]' : 0.195204}
{'[3, 2, 4, 6, 0, 2, 0, 0, 5, 0, 15, 12, 0, 2, 0, 1, 1, 0]' : 0.175289}
{'[3, 2, 4, 6, 0, 2, 0, 0, 5, 0, 15, 12, 0, 2, 0, 1, 1, 0]' : 0.171765}
{'[3, 2, 4, 6, 0, 2, 0, 0, 5, 0, 15, 12, 0, 2, 0, 1, 1, 0]' : 0.171797}
{'[3, 2, 4, 6, 0, 2, 0, 0, 5, 0, 15, 12, 0, 2, 0, 1, 1, 0]' : 0.174849}
{'[3, 2, 4, 6, 0, 2, 0, 0, 5, 0, 15, 12, 0, 2, 0, 1, 1, 0]' : 0.177559}
{'[3, 2, 4, 6, 0, 2, 0, 0, 5, 0, 15, 12, 0, 2, 0, 1, 1, 0]' : 0.177781}
{'[3, 2, 4, 6, 0, 2, 0, 0, 5, 0, 15, 12, 0, 2, 0, 1, 1, 0]' : 0.177652}
{'[3, 2, 4, 6, 0, 2, 0, 0, 5, 0, 15, 12, 0, 2, 0, 1, 1, 0]' : 0.177598}
{'[3, 2, 4, 6, 0, 2, 0, 0, 5, 0, 15, 12, 0, 2, 0, 1, 1, 0]' : 0.175594}
{'[3, 2, 4, 6, 0, 2, 0, 0, 5, 0, 15, 12, 0, 2, 0, 1, 1, 0]' : 0.176975}
{'[3, 2, 4, 6, 0, 2, 0, 0, 5, 0, 15, 12, 0, 2, 0, 1, 1, 0]' : 0.177602}
{'[3, 2, 4, 6, 0, 2, 0, 0, 5, 0, 15, 12, 0, 2, 0, 1, 1, 0]' : 0.177643}
{'[3, 2, 4, 6, 0, 2, 0, 0, 5, 0, 15, 12, 0, 2, 0, 1, 1, 0]' : 0.177603}
{'[3, 2, 4, 6, 0, 2, 0, 0, 5, 0, 15, 12, 0, 2, 0, 1, 1, 0]' : 0.177572}
{'[3, 2, 4, 6, 0, 2, 0, 0, 5, 0, 15, 12, 0, 2, 0, 1, 1, 0]' : 0.177663}
{'[3, 2, 4, 6, 0, 2, 0, 0, 5, 0, 15, 12, 0, 2, 0, 1, 1, 0]' : 0.177574}
{'[3, 2, 4, 6, 0, 2, 0, 0, 5, 0, 15, 12, 0, 2, 0, 1, 1, 0]' : 0.177844}
{'[3, 2, 4, 6, 0, 2, 0, 0, 5, 0, 15, 12, 0, 2, 0, 1, 1, 0]' : 0.17771}
{'[3, 2, 4, 6, 0, 2, 0, 0, 5, 0, 15, 12, 0, 2, 0, 1, 1, 0]' : 0.177591}
{'[3, 2, 4, 6, 0, 2, 0, 0, 5, 0, 15, 12, 0, 2, 0, 1, 1, 0]' : 0.177604}
{'[3, 2, 4, 6, 0, 2, 0, 0, 5, 0, 15, 12, 0, 2, 0, 1, 1, 0]' : 0.177637}
{'[3, 2, 4, 6, 0, 2, 0, 0, 5, 0, 15, 12, 0, 2, 0, 1, 1, 0]' : 0.177587}
{'[3, 2, 4, 6, 0, 2, 0, 0, 5, 0, 15, 12, 0, 2, 0, 1, 1, 0]' : 0.177588}
{'[3, 2, 4, 6, 0, 2, 0, 0, 5, 0, 15, 12, 0, 2, 0, 1, 1, 0]' : 0.177287}
{'[3, 2, 4, 6, 0, 2, 0, 0, 5, 0, 15, 12, 0, 2, 0, 1, 1, 0]' : 0.178071}
{'[3, 2, 4, 6, 0, 2, 0, 0, 5, 0, 15, 12, 0, 2, 0, 1, 1, 0]' : 0.177555}
{'[3, 2, 4, 6, 0, 2, 0, 0, 5, 0, 15, 12, 0, 2, 0, 1, 1, 0]' : 0.177584}
{'[3, 2, 4, 6, 0, 2, 0, 0, 5, 0, 15, 12, 0, 2, 0, 1, 1, 0]' : 0.177754}

out:
 ["{'[3, 2, 4, 6, 0, 2, 0, 0, 5, 0, 15, 12, 0, 2, 0, 1, 1, 0]' : 0.199814}", "{'[3, 2, 4, 6, 0, 2, 0, 0, 5, 0, 15, 12, 0, 2, 0, 1, 1, 0]' : 0.195204}", "{'[3, 2, 4, 6, 0, 2, 0, 0, 5, 0, 15, 12, 0, 2, 0, 1, 1, 0]' : 0.175289}", "{'[3, 2, 4, 6, 0, 2, 0, 0, 5, 0, 15, 12, 0, 2, 0, 1, 1, 0]' : 0.171765}", "{'[3, 2, 4, 6, 0, 2, 0, 0, 5, 0, 15, 12, 0, 2, 0, 1, 1, 0]' : 0.171797}", "{'[3, 2, 4, 6, 0, 2, 0, 0, 5, 0, 15, 12, 0, 2, 0, 1, 1, 0]' : 0.174849}", "{'[3, 2, 4, 6, 0, 2, 0, 0, 5, 0, 15, 12, 0, 2, 0, 1, 1, 0]' : 0.177559}", "{'[3, 2, 4, 6, 0, 2, 0, 0, 5, 0, 15, 12, 0, 2, 0, 1, 1, 0]' : 0.177781}", "{'[3, 2, 4, 6, 0, 2, 0, 0, 5, 0, 15, 12, 0, 2, 0, 1, 1, 0]' : 0.177652}", "{'[3, 2, 4, 6, 0, 2, 0, 0, 5, 0, 15, 12, 0, 2, 0, 1, 1, 0]' : 0.177598}", "{'[3, 2, 4, 6, 0, 2, 0, 0, 5, 0, 15, 12, 0, 2, 0, 1, 1, 0]' : 0.175594}", "{'[3, 2, 4, 6, 0, 2, 0, 0, 5, 0, 15, 12, 0, 2, 0, 1, 1, 0]' : 0.176975}", "{'[3, 2, 4, 6, 0, 2, 0, 0, 5, 0, 15, 12, 0, 2, 0, 1, 1, 0]' : 0.177602}", "{'[3, 2, 4, 6, 0, 2, 0, 0, 5, 0, 15, 12, 0, 2, 0, 1, 1, 0]' : 0.177643}", "{'[3, 2, 4, 6, 0, 2, 0, 0, 5, 0, 15, 12, 0, 2, 0, 1, 1, 0]' : 0.177603}", "{'[3, 2, 4, 6, 0, 2, 0, 0, 5, 0, 15, 12, 0, 2, 0, 1, 1, 0]' : 0.177572}", "{'[3, 2, 4, 6, 0, 2, 0, 0, 5, 0, 15, 12, 0, 2, 0, 1, 1, 0]' : 0.177663}", "{'[3, 2, 4, 6, 0, 2, 0, 0, 5, 0, 15, 12, 0, 2, 0, 1, 1, 0]' : 0.177574}", "{'[3, 2, 4, 6, 0, 2, 0, 0, 5, 0, 15, 12, 0, 2, 0, 1, 1, 0]' : 0.177844}", "{'[3, 2, 4, 6, 0, 2, 0, 0, 5, 0, 15, 12, 0, 2, 0, 1, 1, 0]' : 0.17771}", "{'[3, 2, 4, 6, 0, 2, 0, 0, 5, 0, 15, 12, 0, 2, 0, 1, 1, 0]' : 0.177591}", "{'[3, 2, 4, 6, 0, 2, 0, 0, 5, 0, 15, 12, 0, 2, 0, 1, 1, 0]' : 0.177604}", "{'[3, 2, 4, 6, 0, 2, 0, 0, 5, 0, 15, 12, 0, 2, 0, 1, 1, 0]' : 0.177637}", "{'[3, 2, 4, 6, 0, 2, 0, 0, 5, 0, 15, 12, 0, 2, 0, 1, 1, 0]' : 0.177587}", "{'[3, 2, 4, 6, 0, 2, 0, 0, 5, 0, 15, 12, 0, 2, 0, 1, 1, 0]' : 0.177588}", "{'[3, 2, 4, 6, 0, 2, 0, 0, 5, 0, 15, 12, 0, 2, 0, 1, 1, 0]' : 0.177287}", "{'[3, 2, 4, 6, 0, 2, 0, 0, 5, 0, 15, 12, 0, 2, 0, 1, 1, 0]' : 0.178071}", "{'[3, 2, 4, 6, 0, 2, 0, 0, 5, 0, 15, 12, 0, 2, 0, 1, 1, 0]' : 0.177555}", "{'[3, 2, 4, 6, 0, 2, 0, 0, 5, 0, 15, 12, 0, 2, 0, 1, 1, 0]' : 0.177584}", "{'[3, 2, 4, 6, 0, 2, 0, 0, 5, 0, 15, 12, 0, 2, 0, 1, 1, 0]' : 0.177754}"]
returning from 'run': {'[3, 2, 4, 6, 0, 2, 0, 0, 5, 0, 15, 12, 0, 2, 0, 1, 1, 0]': ([0.199814, 0.195204, 0.175289, 0.171765, 0.171797, 0.174849, 0.177559, 0.177781, 0.177652, 0.177598, 0.175594, 0.176975, 0.177602, 0.177643, 0.177603, 0.177572, 0.177663, 0.177574, 0.177844, 0.17771, 0.177591, 0.177604, 0.177637, 0.177587, 0.177588, 0.177287, 0.178071, 0.177555, 0.177584, 0.177754], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 2, 4, 6, 0, 2, 0, 0, 5, 0, 15, 12, 0, 2, 0, 1, 1, 0]': ([0.199814, 0.195204, 0.175289, 0.171765, 0.171797, 0.174849, 0.177559, 0.177781, 0.177652, 0.177598, 0.175594, 0.176975, 0.177602, 0.177643, 0.177603, 0.177572, 0.177663, 0.177574, 0.177844, 0.17771, 0.177591, 0.177604, 0.177637, 0.177587, 0.177588, 0.177287, 0.178071, 0.177555, 0.177584, 0.177754], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	4
        Additions: 		232
        Multiplications: 	78
        Divisions: 		0
        Logical: 		0
        Reads: 			567
        Writes: 		132
        Comparisons:		10
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest70.exe __orio_perftest70.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest70.exe  
Program Test Output: 
{'[1, 2, 0, 0, 0, 6, 1, 0, 5, 0, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.186334}
{'[1, 2, 0, 0, 0, 6, 1, 0, 5, 0, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.186115}
{'[1, 2, 0, 0, 0, 6, 1, 0, 5, 0, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.165639}
{'[1, 2, 0, 0, 0, 6, 1, 0, 5, 0, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.156743}
{'[1, 2, 0, 0, 0, 6, 1, 0, 5, 0, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.161063}
{'[1, 2, 0, 0, 0, 6, 1, 0, 5, 0, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.165566}
{'[1, 2, 0, 0, 0, 6, 1, 0, 5, 0, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.160678}
{'[1, 2, 0, 0, 0, 6, 1, 0, 5, 0, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.162932}
{'[1, 2, 0, 0, 0, 6, 1, 0, 5, 0, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.165875}
{'[1, 2, 0, 0, 0, 6, 1, 0, 5, 0, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.160369}
{'[1, 2, 0, 0, 0, 6, 1, 0, 5, 0, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.158289}
{'[1, 2, 0, 0, 0, 6, 1, 0, 5, 0, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.165517}
{'[1, 2, 0, 0, 0, 6, 1, 0, 5, 0, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.161657}
{'[1, 2, 0, 0, 0, 6, 1, 0, 5, 0, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.162149}
{'[1, 2, 0, 0, 0, 6, 1, 0, 5, 0, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.165932}
{'[1, 2, 0, 0, 0, 6, 1, 0, 5, 0, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.16287}
{'[1, 2, 0, 0, 0, 6, 1, 0, 5, 0, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.162155}
{'[1, 2, 0, 0, 0, 6, 1, 0, 5, 0, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.166152}
{'[1, 2, 0, 0, 0, 6, 1, 0, 5, 0, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.165896}
{'[1, 2, 0, 0, 0, 6, 1, 0, 5, 0, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.16593}
{'[1, 2, 0, 0, 0, 6, 1, 0, 5, 0, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.165909}
{'[1, 2, 0, 0, 0, 6, 1, 0, 5, 0, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.165988}
{'[1, 2, 0, 0, 0, 6, 1, 0, 5, 0, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.166224}
{'[1, 2, 0, 0, 0, 6, 1, 0, 5, 0, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.165979}
{'[1, 2, 0, 0, 0, 6, 1, 0, 5, 0, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.162327}
{'[1, 2, 0, 0, 0, 6, 1, 0, 5, 0, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.161522}
{'[1, 2, 0, 0, 0, 6, 1, 0, 5, 0, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.165949}
{'[1, 2, 0, 0, 0, 6, 1, 0, 5, 0, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.163377}
{'[1, 2, 0, 0, 0, 6, 1, 0, 5, 0, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.159011}
{'[1, 2, 0, 0, 0, 6, 1, 0, 5, 0, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.160963}

out:
 ["{'[1, 2, 0, 0, 0, 6, 1, 0, 5, 0, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.186334}", "{'[1, 2, 0, 0, 0, 6, 1, 0, 5, 0, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.186115}", "{'[1, 2, 0, 0, 0, 6, 1, 0, 5, 0, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.165639}", "{'[1, 2, 0, 0, 0, 6, 1, 0, 5, 0, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.156743}", "{'[1, 2, 0, 0, 0, 6, 1, 0, 5, 0, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.161063}", "{'[1, 2, 0, 0, 0, 6, 1, 0, 5, 0, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.165566}", "{'[1, 2, 0, 0, 0, 6, 1, 0, 5, 0, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.160678}", "{'[1, 2, 0, 0, 0, 6, 1, 0, 5, 0, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.162932}", "{'[1, 2, 0, 0, 0, 6, 1, 0, 5, 0, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.165875}", "{'[1, 2, 0, 0, 0, 6, 1, 0, 5, 0, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.160369}", "{'[1, 2, 0, 0, 0, 6, 1, 0, 5, 0, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.158289}", "{'[1, 2, 0, 0, 0, 6, 1, 0, 5, 0, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.165517}", "{'[1, 2, 0, 0, 0, 6, 1, 0, 5, 0, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.161657}", "{'[1, 2, 0, 0, 0, 6, 1, 0, 5, 0, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.162149}", "{'[1, 2, 0, 0, 0, 6, 1, 0, 5, 0, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.165932}", "{'[1, 2, 0, 0, 0, 6, 1, 0, 5, 0, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.16287}", "{'[1, 2, 0, 0, 0, 6, 1, 0, 5, 0, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.162155}", "{'[1, 2, 0, 0, 0, 6, 1, 0, 5, 0, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.166152}", "{'[1, 2, 0, 0, 0, 6, 1, 0, 5, 0, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.165896}", "{'[1, 2, 0, 0, 0, 6, 1, 0, 5, 0, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.16593}", "{'[1, 2, 0, 0, 0, 6, 1, 0, 5, 0, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.165909}", "{'[1, 2, 0, 0, 0, 6, 1, 0, 5, 0, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.165988}", "{'[1, 2, 0, 0, 0, 6, 1, 0, 5, 0, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.166224}", "{'[1, 2, 0, 0, 0, 6, 1, 0, 5, 0, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.165979}", "{'[1, 2, 0, 0, 0, 6, 1, 0, 5, 0, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.162327}", "{'[1, 2, 0, 0, 0, 6, 1, 0, 5, 0, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.161522}", "{'[1, 2, 0, 0, 0, 6, 1, 0, 5, 0, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.165949}", "{'[1, 2, 0, 0, 0, 6, 1, 0, 5, 0, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.163377}", "{'[1, 2, 0, 0, 0, 6, 1, 0, 5, 0, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.159011}", "{'[1, 2, 0, 0, 0, 6, 1, 0, 5, 0, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.160963}"]
returning from 'run': {'[1, 2, 0, 0, 0, 6, 1, 0, 5, 0, 0, 29, 0, 1, 0, 1, 0, 0]': ([0.186334, 0.186115, 0.165639, 0.156743, 0.161063, 0.165566, 0.160678, 0.162932, 0.165875, 0.160369, 0.158289, 0.165517, 0.161657, 0.162149, 0.165932, 0.16287, 0.162155, 0.166152, 0.165896, 0.16593, 0.165909, 0.165988, 0.166224, 0.165979, 0.162327, 0.161522, 0.165949, 0.163377, 0.159011, 0.160963], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 2, 0, 0, 0, 6, 1, 0, 5, 0, 0, 29, 0, 1, 0, 1, 0, 0]': ([0.186334, 0.186115, 0.165639, 0.156743, 0.161063, 0.165566, 0.160678, 0.162932, 0.165875, 0.160369, 0.158289, 0.165517, 0.161657, 0.162149, 0.165932, 0.16287, 0.162155, 0.166152, 0.165896, 0.16593, 0.165909, 0.165988, 0.166224, 0.165979, 0.162327, 0.161522, 0.165949, 0.163377, 0.159011, 0.160963], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	5
        Additions: 		1549
        Multiplications: 	738
        Divisions: 		0
        Logical: 		0
        Reads: 			3017
        Writes: 		498
        Comparisons:		20
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest71.exe __orio_perftest71.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest71.exe  
Program Test Output: 
{'[6, 2, 0, 5, 0, 5, 0, 0, 5, 0, 24, 5, 1, 1, 0, 1, 0, 0]' : 0.089226}
{'[6, 2, 0, 5, 0, 5, 0, 0, 5, 0, 24, 5, 1, 1, 0, 1, 0, 0]' : 0.0892661}
{'[6, 2, 0, 5, 0, 5, 0, 0, 5, 0, 24, 5, 1, 1, 0, 1, 0, 0]' : 0.088119}
{'[6, 2, 0, 5, 0, 5, 0, 0, 5, 0, 24, 5, 1, 1, 0, 1, 0, 0]' : 0.087923}
{'[6, 2, 0, 5, 0, 5, 0, 0, 5, 0, 24, 5, 1, 1, 0, 1, 0, 0]' : 0.088413}
{'[6, 2, 0, 5, 0, 5, 0, 0, 5, 0, 24, 5, 1, 1, 0, 1, 0, 0]' : 0.089221}
{'[6, 2, 0, 5, 0, 5, 0, 0, 5, 0, 24, 5, 1, 1, 0, 1, 0, 0]' : 0.0892222}
{'[6, 2, 0, 5, 0, 5, 0, 0, 5, 0, 24, 5, 1, 1, 0, 1, 0, 0]' : 0.0888638}
{'[6, 2, 0, 5, 0, 5, 0, 0, 5, 0, 24, 5, 1, 1, 0, 1, 0, 0]' : 0.0879102}
{'[6, 2, 0, 5, 0, 5, 0, 0, 5, 0, 24, 5, 1, 1, 0, 1, 0, 0]' : 0.0876269}
{'[6, 2, 0, 5, 0, 5, 0, 0, 5, 0, 24, 5, 1, 1, 0, 1, 0, 0]' : 0.0882711}
{'[6, 2, 0, 5, 0, 5, 0, 0, 5, 0, 24, 5, 1, 1, 0, 1, 0, 0]' : 0.0892279}
{'[6, 2, 0, 5, 0, 5, 0, 0, 5, 0, 24, 5, 1, 1, 0, 1, 0, 0]' : 0.089164}
{'[6, 2, 0, 5, 0, 5, 0, 0, 5, 0, 24, 5, 1, 1, 0, 1, 0, 0]' : 0.088434}
{'[6, 2, 0, 5, 0, 5, 0, 0, 5, 0, 24, 5, 1, 1, 0, 1, 0, 0]' : 0.087929}
{'[6, 2, 0, 5, 0, 5, 0, 0, 5, 0, 24, 5, 1, 1, 0, 1, 0, 0]' : 0.0880711}
{'[6, 2, 0, 5, 0, 5, 0, 0, 5, 0, 24, 5, 1, 1, 0, 1, 0, 0]' : 0.089231}
{'[6, 2, 0, 5, 0, 5, 0, 0, 5, 0, 24, 5, 1, 1, 0, 1, 0, 0]' : 0.0891778}
{'[6, 2, 0, 5, 0, 5, 0, 0, 5, 0, 24, 5, 1, 1, 0, 1, 0, 0]' : 0.0900722}
{'[6, 2, 0, 5, 0, 5, 0, 0, 5, 0, 24, 5, 1, 1, 0, 1, 0, 0]' : 0.0878639}
{'[6, 2, 0, 5, 0, 5, 0, 0, 5, 0, 24, 5, 1, 1, 0, 1, 0, 0]' : 0.0877969}
{'[6, 2, 0, 5, 0, 5, 0, 0, 5, 0, 24, 5, 1, 1, 0, 1, 0, 0]' : 0.0882921}
{'[6, 2, 0, 5, 0, 5, 0, 0, 5, 0, 24, 5, 1, 1, 0, 1, 0, 0]' : 0.0894129}
{'[6, 2, 0, 5, 0, 5, 0, 0, 5, 0, 24, 5, 1, 1, 0, 1, 0, 0]' : 0.088551}
{'[6, 2, 0, 5, 0, 5, 0, 0, 5, 0, 24, 5, 1, 1, 0, 1, 0, 0]' : 0.0868831}
{'[6, 2, 0, 5, 0, 5, 0, 0, 5, 0, 24, 5, 1, 1, 0, 1, 0, 0]' : 0.087873}
{'[6, 2, 0, 5, 0, 5, 0, 0, 5, 0, 24, 5, 1, 1, 0, 1, 0, 0]' : 0.087831}
{'[6, 2, 0, 5, 0, 5, 0, 0, 5, 0, 24, 5, 1, 1, 0, 1, 0, 0]' : 0.0890651}
{'[6, 2, 0, 5, 0, 5, 0, 0, 5, 0, 24, 5, 1, 1, 0, 1, 0, 0]' : 0.08916}
{'[6, 2, 0, 5, 0, 5, 0, 0, 5, 0, 24, 5, 1, 1, 0, 1, 0, 0]' : 0.0891771}

out:
 ["{'[6, 2, 0, 5, 0, 5, 0, 0, 5, 0, 24, 5, 1, 1, 0, 1, 0, 0]' : 0.089226}", "{'[6, 2, 0, 5, 0, 5, 0, 0, 5, 0, 24, 5, 1, 1, 0, 1, 0, 0]' : 0.0892661}", "{'[6, 2, 0, 5, 0, 5, 0, 0, 5, 0, 24, 5, 1, 1, 0, 1, 0, 0]' : 0.088119}", "{'[6, 2, 0, 5, 0, 5, 0, 0, 5, 0, 24, 5, 1, 1, 0, 1, 0, 0]' : 0.087923}", "{'[6, 2, 0, 5, 0, 5, 0, 0, 5, 0, 24, 5, 1, 1, 0, 1, 0, 0]' : 0.088413}", "{'[6, 2, 0, 5, 0, 5, 0, 0, 5, 0, 24, 5, 1, 1, 0, 1, 0, 0]' : 0.089221}", "{'[6, 2, 0, 5, 0, 5, 0, 0, 5, 0, 24, 5, 1, 1, 0, 1, 0, 0]' : 0.0892222}", "{'[6, 2, 0, 5, 0, 5, 0, 0, 5, 0, 24, 5, 1, 1, 0, 1, 0, 0]' : 0.0888638}", "{'[6, 2, 0, 5, 0, 5, 0, 0, 5, 0, 24, 5, 1, 1, 0, 1, 0, 0]' : 0.0879102}", "{'[6, 2, 0, 5, 0, 5, 0, 0, 5, 0, 24, 5, 1, 1, 0, 1, 0, 0]' : 0.0876269}", "{'[6, 2, 0, 5, 0, 5, 0, 0, 5, 0, 24, 5, 1, 1, 0, 1, 0, 0]' : 0.0882711}", "{'[6, 2, 0, 5, 0, 5, 0, 0, 5, 0, 24, 5, 1, 1, 0, 1, 0, 0]' : 0.0892279}", "{'[6, 2, 0, 5, 0, 5, 0, 0, 5, 0, 24, 5, 1, 1, 0, 1, 0, 0]' : 0.089164}", "{'[6, 2, 0, 5, 0, 5, 0, 0, 5, 0, 24, 5, 1, 1, 0, 1, 0, 0]' : 0.088434}", "{'[6, 2, 0, 5, 0, 5, 0, 0, 5, 0, 24, 5, 1, 1, 0, 1, 0, 0]' : 0.087929}", "{'[6, 2, 0, 5, 0, 5, 0, 0, 5, 0, 24, 5, 1, 1, 0, 1, 0, 0]' : 0.0880711}", "{'[6, 2, 0, 5, 0, 5, 0, 0, 5, 0, 24, 5, 1, 1, 0, 1, 0, 0]' : 0.089231}", "{'[6, 2, 0, 5, 0, 5, 0, 0, 5, 0, 24, 5, 1, 1, 0, 1, 0, 0]' : 0.0891778}", "{'[6, 2, 0, 5, 0, 5, 0, 0, 5, 0, 24, 5, 1, 1, 0, 1, 0, 0]' : 0.0900722}", "{'[6, 2, 0, 5, 0, 5, 0, 0, 5, 0, 24, 5, 1, 1, 0, 1, 0, 0]' : 0.0878639}", "{'[6, 2, 0, 5, 0, 5, 0, 0, 5, 0, 24, 5, 1, 1, 0, 1, 0, 0]' : 0.0877969}", "{'[6, 2, 0, 5, 0, 5, 0, 0, 5, 0, 24, 5, 1, 1, 0, 1, 0, 0]' : 0.0882921}", "{'[6, 2, 0, 5, 0, 5, 0, 0, 5, 0, 24, 5, 1, 1, 0, 1, 0, 0]' : 0.0894129}", "{'[6, 2, 0, 5, 0, 5, 0, 0, 5, 0, 24, 5, 1, 1, 0, 1, 0, 0]' : 0.088551}", "{'[6, 2, 0, 5, 0, 5, 0, 0, 5, 0, 24, 5, 1, 1, 0, 1, 0, 0]' : 0.0868831}", "{'[6, 2, 0, 5, 0, 5, 0, 0, 5, 0, 24, 5, 1, 1, 0, 1, 0, 0]' : 0.087873}", "{'[6, 2, 0, 5, 0, 5, 0, 0, 5, 0, 24, 5, 1, 1, 0, 1, 0, 0]' : 0.087831}", "{'[6, 2, 0, 5, 0, 5, 0, 0, 5, 0, 24, 5, 1, 1, 0, 1, 0, 0]' : 0.0890651}", "{'[6, 2, 0, 5, 0, 5, 0, 0, 5, 0, 24, 5, 1, 1, 0, 1, 0, 0]' : 0.08916}", "{'[6, 2, 0, 5, 0, 5, 0, 0, 5, 0, 24, 5, 1, 1, 0, 1, 0, 0]' : 0.0891771}"]
returning from 'run': {'[6, 2, 0, 5, 0, 5, 0, 0, 5, 0, 24, 5, 1, 1, 0, 1, 0, 0]': ([0.089226, 0.0892661, 0.088119, 0.087923, 0.088413, 0.089221, 0.0892222, 0.0888638, 0.0879102, 0.0876269, 0.0882711, 0.0892279, 0.089164, 0.088434, 0.087929, 0.0880711, 0.089231, 0.0891778, 0.0900722, 0.0878639, 0.0877969, 0.0882921, 0.0894129, 0.088551, 0.0868831, 0.087873, 0.087831, 0.0890651, 0.08916, 0.0891771], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 2, 0, 5, 0, 5, 0, 0, 5, 0, 24, 5, 1, 1, 0, 1, 0, 0]': ([0.089226, 0.0892661, 0.088119, 0.087923, 0.088413, 0.089221, 0.0892222, 0.0888638, 0.0879102, 0.0876269, 0.0882711, 0.0892279, 0.089164, 0.088434, 0.087929, 0.0880711, 0.089231, 0.0891778, 0.0900722, 0.0878639, 0.0877969, 0.0882921, 0.0894129, 0.088551, 0.0868831, 0.087873, 0.087831, 0.0890651, 0.08916, 0.0891771], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	5
        Additions: 		231
        Multiplications: 	88
        Divisions: 		0
        Logical: 		0
        Reads: 			539
        Writes: 		114
        Comparisons:		10
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest72.exe __orio_perftest72.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest72.exe  
Program Test Output: 
{'[6, 2, 0, 5, 0, 0, 0, 0, 5, 0, 22, 18, 0, 0, 0, 1, 0, 0]' : 0.176671}
{'[6, 2, 0, 5, 0, 0, 0, 0, 5, 0, 22, 18, 0, 0, 0, 1, 0, 0]' : 0.176582}
{'[6, 2, 0, 5, 0, 0, 0, 0, 5, 0, 22, 18, 0, 0, 0, 1, 0, 0]' : 0.173383}
{'[6, 2, 0, 5, 0, 0, 0, 0, 5, 0, 22, 18, 0, 0, 0, 1, 0, 0]' : 0.148449}
{'[6, 2, 0, 5, 0, 0, 0, 0, 5, 0, 22, 18, 0, 0, 0, 1, 0, 0]' : 0.148126}
{'[6, 2, 0, 5, 0, 0, 0, 0, 5, 0, 22, 18, 0, 0, 0, 1, 0, 0]' : 0.148157}
{'[6, 2, 0, 5, 0, 0, 0, 0, 5, 0, 22, 18, 0, 0, 0, 1, 0, 0]' : 0.148833}
{'[6, 2, 0, 5, 0, 0, 0, 0, 5, 0, 22, 18, 0, 0, 0, 1, 0, 0]' : 0.148509}
{'[6, 2, 0, 5, 0, 0, 0, 0, 5, 0, 22, 18, 0, 0, 0, 1, 0, 0]' : 0.148155}
{'[6, 2, 0, 5, 0, 0, 0, 0, 5, 0, 22, 18, 0, 0, 0, 1, 0, 0]' : 0.148121}
{'[6, 2, 0, 5, 0, 0, 0, 0, 5, 0, 22, 18, 0, 0, 0, 1, 0, 0]' : 0.148116}
{'[6, 2, 0, 5, 0, 0, 0, 0, 5, 0, 22, 18, 0, 0, 0, 1, 0, 0]' : 0.1485}
{'[6, 2, 0, 5, 0, 0, 0, 0, 5, 0, 22, 18, 0, 0, 0, 1, 0, 0]' : 0.148143}
{'[6, 2, 0, 5, 0, 0, 0, 0, 5, 0, 22, 18, 0, 0, 0, 1, 0, 0]' : 0.148204}
{'[6, 2, 0, 5, 0, 0, 0, 0, 5, 0, 22, 18, 0, 0, 0, 1, 0, 0]' : 0.148262}
{'[6, 2, 0, 5, 0, 0, 0, 0, 5, 0, 22, 18, 0, 0, 0, 1, 0, 0]' : 0.14817}
{'[6, 2, 0, 5, 0, 0, 0, 0, 5, 0, 22, 18, 0, 0, 0, 1, 0, 0]' : 0.149134}
{'[6, 2, 0, 5, 0, 0, 0, 0, 5, 0, 22, 18, 0, 0, 0, 1, 0, 0]' : 0.148287}
{'[6, 2, 0, 5, 0, 0, 0, 0, 5, 0, 22, 18, 0, 0, 0, 1, 0, 0]' : 0.148706}
{'[6, 2, 0, 5, 0, 0, 0, 0, 5, 0, 22, 18, 0, 0, 0, 1, 0, 0]' : 0.148489}
{'[6, 2, 0, 5, 0, 0, 0, 0, 5, 0, 22, 18, 0, 0, 0, 1, 0, 0]' : 0.148567}
{'[6, 2, 0, 5, 0, 0, 0, 0, 5, 0, 22, 18, 0, 0, 0, 1, 0, 0]' : 0.148813}
{'[6, 2, 0, 5, 0, 0, 0, 0, 5, 0, 22, 18, 0, 0, 0, 1, 0, 0]' : 0.148618}
{'[6, 2, 0, 5, 0, 0, 0, 0, 5, 0, 22, 18, 0, 0, 0, 1, 0, 0]' : 0.148452}
{'[6, 2, 0, 5, 0, 0, 0, 0, 5, 0, 22, 18, 0, 0, 0, 1, 0, 0]' : 0.148476}
{'[6, 2, 0, 5, 0, 0, 0, 0, 5, 0, 22, 18, 0, 0, 0, 1, 0, 0]' : 0.148432}
{'[6, 2, 0, 5, 0, 0, 0, 0, 5, 0, 22, 18, 0, 0, 0, 1, 0, 0]' : 0.14928}
{'[6, 2, 0, 5, 0, 0, 0, 0, 5, 0, 22, 18, 0, 0, 0, 1, 0, 0]' : 0.148517}
{'[6, 2, 0, 5, 0, 0, 0, 0, 5, 0, 22, 18, 0, 0, 0, 1, 0, 0]' : 0.152488}
{'[6, 2, 0, 5, 0, 0, 0, 0, 5, 0, 22, 18, 0, 0, 0, 1, 0, 0]' : 0.153246}

out:
 ["{'[6, 2, 0, 5, 0, 0, 0, 0, 5, 0, 22, 18, 0, 0, 0, 1, 0, 0]' : 0.176671}", "{'[6, 2, 0, 5, 0, 0, 0, 0, 5, 0, 22, 18, 0, 0, 0, 1, 0, 0]' : 0.176582}", "{'[6, 2, 0, 5, 0, 0, 0, 0, 5, 0, 22, 18, 0, 0, 0, 1, 0, 0]' : 0.173383}", "{'[6, 2, 0, 5, 0, 0, 0, 0, 5, 0, 22, 18, 0, 0, 0, 1, 0, 0]' : 0.148449}", "{'[6, 2, 0, 5, 0, 0, 0, 0, 5, 0, 22, 18, 0, 0, 0, 1, 0, 0]' : 0.148126}", "{'[6, 2, 0, 5, 0, 0, 0, 0, 5, 0, 22, 18, 0, 0, 0, 1, 0, 0]' : 0.148157}", "{'[6, 2, 0, 5, 0, 0, 0, 0, 5, 0, 22, 18, 0, 0, 0, 1, 0, 0]' : 0.148833}", "{'[6, 2, 0, 5, 0, 0, 0, 0, 5, 0, 22, 18, 0, 0, 0, 1, 0, 0]' : 0.148509}", "{'[6, 2, 0, 5, 0, 0, 0, 0, 5, 0, 22, 18, 0, 0, 0, 1, 0, 0]' : 0.148155}", "{'[6, 2, 0, 5, 0, 0, 0, 0, 5, 0, 22, 18, 0, 0, 0, 1, 0, 0]' : 0.148121}", "{'[6, 2, 0, 5, 0, 0, 0, 0, 5, 0, 22, 18, 0, 0, 0, 1, 0, 0]' : 0.148116}", "{'[6, 2, 0, 5, 0, 0, 0, 0, 5, 0, 22, 18, 0, 0, 0, 1, 0, 0]' : 0.1485}", "{'[6, 2, 0, 5, 0, 0, 0, 0, 5, 0, 22, 18, 0, 0, 0, 1, 0, 0]' : 0.148143}", "{'[6, 2, 0, 5, 0, 0, 0, 0, 5, 0, 22, 18, 0, 0, 0, 1, 0, 0]' : 0.148204}", "{'[6, 2, 0, 5, 0, 0, 0, 0, 5, 0, 22, 18, 0, 0, 0, 1, 0, 0]' : 0.148262}", "{'[6, 2, 0, 5, 0, 0, 0, 0, 5, 0, 22, 18, 0, 0, 0, 1, 0, 0]' : 0.14817}", "{'[6, 2, 0, 5, 0, 0, 0, 0, 5, 0, 22, 18, 0, 0, 0, 1, 0, 0]' : 0.149134}", "{'[6, 2, 0, 5, 0, 0, 0, 0, 5, 0, 22, 18, 0, 0, 0, 1, 0, 0]' : 0.148287}", "{'[6, 2, 0, 5, 0, 0, 0, 0, 5, 0, 22, 18, 0, 0, 0, 1, 0, 0]' : 0.148706}", "{'[6, 2, 0, 5, 0, 0, 0, 0, 5, 0, 22, 18, 0, 0, 0, 1, 0, 0]' : 0.148489}", "{'[6, 2, 0, 5, 0, 0, 0, 0, 5, 0, 22, 18, 0, 0, 0, 1, 0, 0]' : 0.148567}", "{'[6, 2, 0, 5, 0, 0, 0, 0, 5, 0, 22, 18, 0, 0, 0, 1, 0, 0]' : 0.148813}", "{'[6, 2, 0, 5, 0, 0, 0, 0, 5, 0, 22, 18, 0, 0, 0, 1, 0, 0]' : 0.148618}", "{'[6, 2, 0, 5, 0, 0, 0, 0, 5, 0, 22, 18, 0, 0, 0, 1, 0, 0]' : 0.148452}", "{'[6, 2, 0, 5, 0, 0, 0, 0, 5, 0, 22, 18, 0, 0, 0, 1, 0, 0]' : 0.148476}", "{'[6, 2, 0, 5, 0, 0, 0, 0, 5, 0, 22, 18, 0, 0, 0, 1, 0, 0]' : 0.148432}", "{'[6, 2, 0, 5, 0, 0, 0, 0, 5, 0, 22, 18, 0, 0, 0, 1, 0, 0]' : 0.14928}", "{'[6, 2, 0, 5, 0, 0, 0, 0, 5, 0, 22, 18, 0, 0, 0, 1, 0, 0]' : 0.148517}", "{'[6, 2, 0, 5, 0, 0, 0, 0, 5, 0, 22, 18, 0, 0, 0, 1, 0, 0]' : 0.152488}", "{'[6, 2, 0, 5, 0, 0, 0, 0, 5, 0, 22, 18, 0, 0, 0, 1, 0, 0]' : 0.153246}"]
returning from 'run': {'[6, 2, 0, 5, 0, 0, 0, 0, 5, 0, 22, 18, 0, 0, 0, 1, 0, 0]': ([0.176671, 0.176582, 0.173383, 0.148449, 0.148126, 0.148157, 0.148833, 0.148509, 0.148155, 0.148121, 0.148116, 0.1485, 0.148143, 0.148204, 0.148262, 0.14817, 0.149134, 0.148287, 0.148706, 0.148489, 0.148567, 0.148813, 0.148618, 0.148452, 0.148476, 0.148432, 0.14928, 0.148517, 0.152488, 0.153246], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 2, 0, 5, 0, 0, 0, 0, 5, 0, 22, 18, 0, 0, 0, 1, 0, 0]': ([0.176671, 0.176582, 0.173383, 0.148449, 0.148126, 0.148157, 0.148833, 0.148509, 0.148155, 0.148121, 0.148116, 0.1485, 0.148143, 0.148204, 0.148262, 0.14817, 0.149134, 0.148287, 0.148706, 0.148489, 0.148567, 0.148813, 0.148618, 0.148452, 0.148476, 0.148432, 0.14928, 0.148517, 0.152488, 0.153246], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	31
        Max loop nest depth: 	5
        Additions: 		1328
        Multiplications: 	588
        Divisions: 		0
        Logical: 		0
        Reads: 			2703
        Writes: 		500
        Comparisons:		31
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest73.exe __orio_perftest73.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest73.exe  
Program Test Output: 
{'[0, 2, 2, 3, 0, 5, 1, 0, 5, 12, 0, 18, 0, 0, 0, 1, 0, 0]' : 0.171534}
{'[0, 2, 2, 3, 0, 5, 1, 0, 5, 12, 0, 18, 0, 0, 0, 1, 0, 0]' : 0.171618}
{'[0, 2, 2, 3, 0, 5, 1, 0, 5, 12, 0, 18, 0, 0, 0, 1, 0, 0]' : 0.161197}
{'[0, 2, 2, 3, 0, 5, 1, 0, 5, 12, 0, 18, 0, 0, 0, 1, 0, 0]' : 0.146753}
{'[0, 2, 2, 3, 0, 5, 1, 0, 5, 12, 0, 18, 0, 0, 0, 1, 0, 0]' : 0.146673}
{'[0, 2, 2, 3, 0, 5, 1, 0, 5, 12, 0, 18, 0, 0, 0, 1, 0, 0]' : 0.14678}
{'[0, 2, 2, 3, 0, 5, 1, 0, 5, 12, 0, 18, 0, 0, 0, 1, 0, 0]' : 0.147532}
{'[0, 2, 2, 3, 0, 5, 1, 0, 5, 12, 0, 18, 0, 0, 0, 1, 0, 0]' : 0.147356}
{'[0, 2, 2, 3, 0, 5, 1, 0, 5, 12, 0, 18, 0, 0, 0, 1, 0, 0]' : 0.146875}
{'[0, 2, 2, 3, 0, 5, 1, 0, 5, 12, 0, 18, 0, 0, 0, 1, 0, 0]' : 0.146936}
{'[0, 2, 2, 3, 0, 5, 1, 0, 5, 12, 0, 18, 0, 0, 0, 1, 0, 0]' : 0.146999}
{'[0, 2, 2, 3, 0, 5, 1, 0, 5, 12, 0, 18, 0, 0, 0, 1, 0, 0]' : 0.146966}
{'[0, 2, 2, 3, 0, 5, 1, 0, 5, 12, 0, 18, 0, 0, 0, 1, 0, 0]' : 0.147207}
{'[0, 2, 2, 3, 0, 5, 1, 0, 5, 12, 0, 18, 0, 0, 0, 1, 0, 0]' : 0.146981}
{'[0, 2, 2, 3, 0, 5, 1, 0, 5, 12, 0, 18, 0, 0, 0, 1, 0, 0]' : 0.146952}
{'[0, 2, 2, 3, 0, 5, 1, 0, 5, 12, 0, 18, 0, 0, 0, 1, 0, 0]' : 0.146915}
{'[0, 2, 2, 3, 0, 5, 1, 0, 5, 12, 0, 18, 0, 0, 0, 1, 0, 0]' : 0.146974}
{'[0, 2, 2, 3, 0, 5, 1, 0, 5, 12, 0, 18, 0, 0, 0, 1, 0, 0]' : 0.147668}
{'[0, 2, 2, 3, 0, 5, 1, 0, 5, 12, 0, 18, 0, 0, 0, 1, 0, 0]' : 0.146949}
{'[0, 2, 2, 3, 0, 5, 1, 0, 5, 12, 0, 18, 0, 0, 0, 1, 0, 0]' : 0.146942}
{'[0, 2, 2, 3, 0, 5, 1, 0, 5, 12, 0, 18, 0, 0, 0, 1, 0, 0]' : 0.146994}
{'[0, 2, 2, 3, 0, 5, 1, 0, 5, 12, 0, 18, 0, 0, 0, 1, 0, 0]' : 0.147264}
{'[0, 2, 2, 3, 0, 5, 1, 0, 5, 12, 0, 18, 0, 0, 0, 1, 0, 0]' : 0.147321}
{'[0, 2, 2, 3, 0, 5, 1, 0, 5, 12, 0, 18, 0, 0, 0, 1, 0, 0]' : 0.14733}
{'[0, 2, 2, 3, 0, 5, 1, 0, 5, 12, 0, 18, 0, 0, 0, 1, 0, 0]' : 0.147374}
{'[0, 2, 2, 3, 0, 5, 1, 0, 5, 12, 0, 18, 0, 0, 0, 1, 0, 0]' : 0.147458}
{'[0, 2, 2, 3, 0, 5, 1, 0, 5, 12, 0, 18, 0, 0, 0, 1, 0, 0]' : 0.146886}
{'[0, 2, 2, 3, 0, 5, 1, 0, 5, 12, 0, 18, 0, 0, 0, 1, 0, 0]' : 0.148043}
{'[0, 2, 2, 3, 0, 5, 1, 0, 5, 12, 0, 18, 0, 0, 0, 1, 0, 0]' : 0.147179}
{'[0, 2, 2, 3, 0, 5, 1, 0, 5, 12, 0, 18, 0, 0, 0, 1, 0, 0]' : 0.146963}

out:
 ["{'[0, 2, 2, 3, 0, 5, 1, 0, 5, 12, 0, 18, 0, 0, 0, 1, 0, 0]' : 0.171534}", "{'[0, 2, 2, 3, 0, 5, 1, 0, 5, 12, 0, 18, 0, 0, 0, 1, 0, 0]' : 0.171618}", "{'[0, 2, 2, 3, 0, 5, 1, 0, 5, 12, 0, 18, 0, 0, 0, 1, 0, 0]' : 0.161197}", "{'[0, 2, 2, 3, 0, 5, 1, 0, 5, 12, 0, 18, 0, 0, 0, 1, 0, 0]' : 0.146753}", "{'[0, 2, 2, 3, 0, 5, 1, 0, 5, 12, 0, 18, 0, 0, 0, 1, 0, 0]' : 0.146673}", "{'[0, 2, 2, 3, 0, 5, 1, 0, 5, 12, 0, 18, 0, 0, 0, 1, 0, 0]' : 0.14678}", "{'[0, 2, 2, 3, 0, 5, 1, 0, 5, 12, 0, 18, 0, 0, 0, 1, 0, 0]' : 0.147532}", "{'[0, 2, 2, 3, 0, 5, 1, 0, 5, 12, 0, 18, 0, 0, 0, 1, 0, 0]' : 0.147356}", "{'[0, 2, 2, 3, 0, 5, 1, 0, 5, 12, 0, 18, 0, 0, 0, 1, 0, 0]' : 0.146875}", "{'[0, 2, 2, 3, 0, 5, 1, 0, 5, 12, 0, 18, 0, 0, 0, 1, 0, 0]' : 0.146936}", "{'[0, 2, 2, 3, 0, 5, 1, 0, 5, 12, 0, 18, 0, 0, 0, 1, 0, 0]' : 0.146999}", "{'[0, 2, 2, 3, 0, 5, 1, 0, 5, 12, 0, 18, 0, 0, 0, 1, 0, 0]' : 0.146966}", "{'[0, 2, 2, 3, 0, 5, 1, 0, 5, 12, 0, 18, 0, 0, 0, 1, 0, 0]' : 0.147207}", "{'[0, 2, 2, 3, 0, 5, 1, 0, 5, 12, 0, 18, 0, 0, 0, 1, 0, 0]' : 0.146981}", "{'[0, 2, 2, 3, 0, 5, 1, 0, 5, 12, 0, 18, 0, 0, 0, 1, 0, 0]' : 0.146952}", "{'[0, 2, 2, 3, 0, 5, 1, 0, 5, 12, 0, 18, 0, 0, 0, 1, 0, 0]' : 0.146915}", "{'[0, 2, 2, 3, 0, 5, 1, 0, 5, 12, 0, 18, 0, 0, 0, 1, 0, 0]' : 0.146974}", "{'[0, 2, 2, 3, 0, 5, 1, 0, 5, 12, 0, 18, 0, 0, 0, 1, 0, 0]' : 0.147668}", "{'[0, 2, 2, 3, 0, 5, 1, 0, 5, 12, 0, 18, 0, 0, 0, 1, 0, 0]' : 0.146949}", "{'[0, 2, 2, 3, 0, 5, 1, 0, 5, 12, 0, 18, 0, 0, 0, 1, 0, 0]' : 0.146942}", "{'[0, 2, 2, 3, 0, 5, 1, 0, 5, 12, 0, 18, 0, 0, 0, 1, 0, 0]' : 0.146994}", "{'[0, 2, 2, 3, 0, 5, 1, 0, 5, 12, 0, 18, 0, 0, 0, 1, 0, 0]' : 0.147264}", "{'[0, 2, 2, 3, 0, 5, 1, 0, 5, 12, 0, 18, 0, 0, 0, 1, 0, 0]' : 0.147321}", "{'[0, 2, 2, 3, 0, 5, 1, 0, 5, 12, 0, 18, 0, 0, 0, 1, 0, 0]' : 0.14733}", "{'[0, 2, 2, 3, 0, 5, 1, 0, 5, 12, 0, 18, 0, 0, 0, 1, 0, 0]' : 0.147374}", "{'[0, 2, 2, 3, 0, 5, 1, 0, 5, 12, 0, 18, 0, 0, 0, 1, 0, 0]' : 0.147458}", "{'[0, 2, 2, 3, 0, 5, 1, 0, 5, 12, 0, 18, 0, 0, 0, 1, 0, 0]' : 0.146886}", "{'[0, 2, 2, 3, 0, 5, 1, 0, 5, 12, 0, 18, 0, 0, 0, 1, 0, 0]' : 0.148043}", "{'[0, 2, 2, 3, 0, 5, 1, 0, 5, 12, 0, 18, 0, 0, 0, 1, 0, 0]' : 0.147179}", "{'[0, 2, 2, 3, 0, 5, 1, 0, 5, 12, 0, 18, 0, 0, 0, 1, 0, 0]' : 0.146963}"]
returning from 'run': {'[0, 2, 2, 3, 0, 5, 1, 0, 5, 12, 0, 18, 0, 0, 0, 1, 0, 0]': ([0.171534, 0.171618, 0.161197, 0.146753, 0.146673, 0.14678, 0.147532, 0.147356, 0.146875, 0.146936, 0.146999, 0.146966, 0.147207, 0.146981, 0.146952, 0.146915, 0.146974, 0.147668, 0.146949, 0.146942, 0.146994, 0.147264, 0.147321, 0.14733, 0.147374, 0.147458, 0.146886, 0.148043, 0.147179, 0.146963], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 2, 3, 0, 5, 1, 0, 5, 12, 0, 18, 0, 0, 0, 1, 0, 0]': ([0.171534, 0.171618, 0.161197, 0.146753, 0.146673, 0.14678, 0.147532, 0.147356, 0.146875, 0.146936, 0.146999, 0.146966, 0.147207, 0.146981, 0.146952, 0.146915, 0.146974, 0.147668, 0.146949, 0.146942, 0.146994, 0.147264, 0.147321, 0.14733, 0.147374, 0.147458, 0.146886, 0.148043, 0.147179, 0.146963], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	6
        Additions: 		238
        Multiplications: 	80
        Divisions: 		0
        Logical: 		0
        Reads: 			622
        Writes: 		155
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest74.exe __orio_perftest74.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest74.exe  
Program Test Output: 
{'[1, 2, 2, 1, 0, 4, 0, 0, 5, 0, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.178038}
{'[1, 2, 2, 1, 0, 4, 0, 0, 5, 0, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.165634}
{'[1, 2, 2, 1, 0, 4, 0, 0, 5, 0, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.169143}
{'[1, 2, 2, 1, 0, 4, 0, 0, 5, 0, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.170955}
{'[1, 2, 2, 1, 0, 4, 0, 0, 5, 0, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.171281}
{'[1, 2, 2, 1, 0, 4, 0, 0, 5, 0, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.171409}
{'[1, 2, 2, 1, 0, 4, 0, 0, 5, 0, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.17102}
{'[1, 2, 2, 1, 0, 4, 0, 0, 5, 0, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.17124}
{'[1, 2, 2, 1, 0, 4, 0, 0, 5, 0, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.171166}
{'[1, 2, 2, 1, 0, 4, 0, 0, 5, 0, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.170992}
{'[1, 2, 2, 1, 0, 4, 0, 0, 5, 0, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.171153}
{'[1, 2, 2, 1, 0, 4, 0, 0, 5, 0, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.171458}
{'[1, 2, 2, 1, 0, 4, 0, 0, 5, 0, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.171462}
{'[1, 2, 2, 1, 0, 4, 0, 0, 5, 0, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.171204}
{'[1, 2, 2, 1, 0, 4, 0, 0, 5, 0, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.171278}
{'[1, 2, 2, 1, 0, 4, 0, 0, 5, 0, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.171273}
{'[1, 2, 2, 1, 0, 4, 0, 0, 5, 0, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.17158}
{'[1, 2, 2, 1, 0, 4, 0, 0, 5, 0, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.171263}
{'[1, 2, 2, 1, 0, 4, 0, 0, 5, 0, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.171378}
{'[1, 2, 2, 1, 0, 4, 0, 0, 5, 0, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.171322}
{'[1, 2, 2, 1, 0, 4, 0, 0, 5, 0, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.171136}
{'[1, 2, 2, 1, 0, 4, 0, 0, 5, 0, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.171112}
{'[1, 2, 2, 1, 0, 4, 0, 0, 5, 0, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.17136}
{'[1, 2, 2, 1, 0, 4, 0, 0, 5, 0, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.171211}
{'[1, 2, 2, 1, 0, 4, 0, 0, 5, 0, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.167705}
{'[1, 2, 2, 1, 0, 4, 0, 0, 5, 0, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.168218}
{'[1, 2, 2, 1, 0, 4, 0, 0, 5, 0, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.171176}
{'[1, 2, 2, 1, 0, 4, 0, 0, 5, 0, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.171244}
{'[1, 2, 2, 1, 0, 4, 0, 0, 5, 0, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.171626}
{'[1, 2, 2, 1, 0, 4, 0, 0, 5, 0, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.171209}

out:
 ["{'[1, 2, 2, 1, 0, 4, 0, 0, 5, 0, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.178038}", "{'[1, 2, 2, 1, 0, 4, 0, 0, 5, 0, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.165634}", "{'[1, 2, 2, 1, 0, 4, 0, 0, 5, 0, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.169143}", "{'[1, 2, 2, 1, 0, 4, 0, 0, 5, 0, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.170955}", "{'[1, 2, 2, 1, 0, 4, 0, 0, 5, 0, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.171281}", "{'[1, 2, 2, 1, 0, 4, 0, 0, 5, 0, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.171409}", "{'[1, 2, 2, 1, 0, 4, 0, 0, 5, 0, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.17102}", "{'[1, 2, 2, 1, 0, 4, 0, 0, 5, 0, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.17124}", "{'[1, 2, 2, 1, 0, 4, 0, 0, 5, 0, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.171166}", "{'[1, 2, 2, 1, 0, 4, 0, 0, 5, 0, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.170992}", "{'[1, 2, 2, 1, 0, 4, 0, 0, 5, 0, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.171153}", "{'[1, 2, 2, 1, 0, 4, 0, 0, 5, 0, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.171458}", "{'[1, 2, 2, 1, 0, 4, 0, 0, 5, 0, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.171462}", "{'[1, 2, 2, 1, 0, 4, 0, 0, 5, 0, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.171204}", "{'[1, 2, 2, 1, 0, 4, 0, 0, 5, 0, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.171278}", "{'[1, 2, 2, 1, 0, 4, 0, 0, 5, 0, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.171273}", "{'[1, 2, 2, 1, 0, 4, 0, 0, 5, 0, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.17158}", "{'[1, 2, 2, 1, 0, 4, 0, 0, 5, 0, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.171263}", "{'[1, 2, 2, 1, 0, 4, 0, 0, 5, 0, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.171378}", "{'[1, 2, 2, 1, 0, 4, 0, 0, 5, 0, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.171322}", "{'[1, 2, 2, 1, 0, 4, 0, 0, 5, 0, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.171136}", "{'[1, 2, 2, 1, 0, 4, 0, 0, 5, 0, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.171112}", "{'[1, 2, 2, 1, 0, 4, 0, 0, 5, 0, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.17136}", "{'[1, 2, 2, 1, 0, 4, 0, 0, 5, 0, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.171211}", "{'[1, 2, 2, 1, 0, 4, 0, 0, 5, 0, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.167705}", "{'[1, 2, 2, 1, 0, 4, 0, 0, 5, 0, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.168218}", "{'[1, 2, 2, 1, 0, 4, 0, 0, 5, 0, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.171176}", "{'[1, 2, 2, 1, 0, 4, 0, 0, 5, 0, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.171244}", "{'[1, 2, 2, 1, 0, 4, 0, 0, 5, 0, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.171626}", "{'[1, 2, 2, 1, 0, 4, 0, 0, 5, 0, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.171209}"]
returning from 'run': {'[1, 2, 2, 1, 0, 4, 0, 0, 5, 0, 0, 29, 0, 0, 1, 1, 1, 0]': ([0.178038, 0.165634, 0.169143, 0.170955, 0.171281, 0.171409, 0.17102, 0.17124, 0.171166, 0.170992, 0.171153, 0.171458, 0.171462, 0.171204, 0.171278, 0.171273, 0.17158, 0.171263, 0.171378, 0.171322, 0.171136, 0.171112, 0.17136, 0.171211, 0.167705, 0.168218, 0.171176, 0.171244, 0.171626, 0.171209], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 2, 2, 1, 0, 4, 0, 0, 5, 0, 0, 29, 0, 0, 1, 1, 1, 0]': ([0.178038, 0.165634, 0.169143, 0.170955, 0.171281, 0.171409, 0.17102, 0.17124, 0.171166, 0.170992, 0.171153, 0.171458, 0.171462, 0.171204, 0.171278, 0.171273, 0.17158, 0.171263, 0.171378, 0.171322, 0.171136, 0.171112, 0.17136, 0.171211, 0.167705, 0.168218, 0.171176, 0.171244, 0.171626, 0.171209], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	118
        Max loop nest depth: 	6
        Additions: 		4750
        Multiplications: 	1716
        Divisions: 		0
        Logical: 		0
        Reads: 			10038
        Writes: 		2125
        Comparisons:		118
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest75.exe __orio_perftest75.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest75.exe  
Program Test Output: 
{'[2, 2, 2, 6, 0, 2, 1, 0, 5, 29, 0, 11, 1, 0, 1, 1, 0, 0]' : 0.093364}
{'[2, 2, 2, 6, 0, 2, 1, 0, 5, 29, 0, 11, 1, 0, 1, 1, 0, 0]' : 0.0933971}
{'[2, 2, 2, 6, 0, 2, 1, 0, 5, 29, 0, 11, 1, 0, 1, 1, 0, 0]' : 0.094661}
{'[2, 2, 2, 6, 0, 2, 1, 0, 5, 29, 0, 11, 1, 0, 1, 1, 0, 0]' : 0.0956519}
{'[2, 2, 2, 6, 0, 2, 1, 0, 5, 29, 0, 11, 1, 0, 1, 1, 0, 0]' : 0.0956159}
{'[2, 2, 2, 6, 0, 2, 1, 0, 5, 29, 0, 11, 1, 0, 1, 1, 0, 0]' : 0.0956521}
{'[2, 2, 2, 6, 0, 2, 1, 0, 5, 29, 0, 11, 1, 0, 1, 1, 0, 0]' : 0.095623}
{'[2, 2, 2, 6, 0, 2, 1, 0, 5, 29, 0, 11, 1, 0, 1, 1, 0, 0]' : 0.095695}
{'[2, 2, 2, 6, 0, 2, 1, 0, 5, 29, 0, 11, 1, 0, 1, 1, 0, 0]' : 0.0956371}
{'[2, 2, 2, 6, 0, 2, 1, 0, 5, 29, 0, 11, 1, 0, 1, 1, 0, 0]' : 0.095629}
{'[2, 2, 2, 6, 0, 2, 1, 0, 5, 29, 0, 11, 1, 0, 1, 1, 0, 0]' : 0.0956509}
{'[2, 2, 2, 6, 0, 2, 1, 0, 5, 29, 0, 11, 1, 0, 1, 1, 0, 0]' : 0.095716}
{'[2, 2, 2, 6, 0, 2, 1, 0, 5, 29, 0, 11, 1, 0, 1, 1, 0, 0]' : 0.0960619}
{'[2, 2, 2, 6, 0, 2, 1, 0, 5, 29, 0, 11, 1, 0, 1, 1, 0, 0]' : 0.0958011}
{'[2, 2, 2, 6, 0, 2, 1, 0, 5, 29, 0, 11, 1, 0, 1, 1, 0, 0]' : 0.095834}
{'[2, 2, 2, 6, 0, 2, 1, 0, 5, 29, 0, 11, 1, 0, 1, 1, 0, 0]' : 0.0959549}
{'[2, 2, 2, 6, 0, 2, 1, 0, 5, 29, 0, 11, 1, 0, 1, 1, 0, 0]' : 0.0958121}
{'[2, 2, 2, 6, 0, 2, 1, 0, 5, 29, 0, 11, 1, 0, 1, 1, 0, 0]' : 0.0958419}
{'[2, 2, 2, 6, 0, 2, 1, 0, 5, 29, 0, 11, 1, 0, 1, 1, 0, 0]' : 0.0960252}
{'[2, 2, 2, 6, 0, 2, 1, 0, 5, 29, 0, 11, 1, 0, 1, 1, 0, 0]' : 0.0958118}
{'[2, 2, 2, 6, 0, 2, 1, 0, 5, 29, 0, 11, 1, 0, 1, 1, 0, 0]' : 0.0957992}
{'[2, 2, 2, 6, 0, 2, 1, 0, 5, 29, 0, 11, 1, 0, 1, 1, 0, 0]' : 0.0957808}
{'[2, 2, 2, 6, 0, 2, 1, 0, 5, 29, 0, 11, 1, 0, 1, 1, 0, 0]' : 0.0958271}
{'[2, 2, 2, 6, 0, 2, 1, 0, 5, 29, 0, 11, 1, 0, 1, 1, 0, 0]' : 0.0947611}
{'[2, 2, 2, 6, 0, 2, 1, 0, 5, 29, 0, 11, 1, 0, 1, 1, 0, 0]' : 0.092164}
{'[2, 2, 2, 6, 0, 2, 1, 0, 5, 29, 0, 11, 1, 0, 1, 1, 0, 0]' : 0.091804}
{'[2, 2, 2, 6, 0, 2, 1, 0, 5, 29, 0, 11, 1, 0, 1, 1, 0, 0]' : 0.0906539}
{'[2, 2, 2, 6, 0, 2, 1, 0, 5, 29, 0, 11, 1, 0, 1, 1, 0, 0]' : 0.09077}
{'[2, 2, 2, 6, 0, 2, 1, 0, 5, 29, 0, 11, 1, 0, 1, 1, 0, 0]' : 0.0915661}
{'[2, 2, 2, 6, 0, 2, 1, 0, 5, 29, 0, 11, 1, 0, 1, 1, 0, 0]' : 0.0933092}

out:
 ["{'[2, 2, 2, 6, 0, 2, 1, 0, 5, 29, 0, 11, 1, 0, 1, 1, 0, 0]' : 0.093364}", "{'[2, 2, 2, 6, 0, 2, 1, 0, 5, 29, 0, 11, 1, 0, 1, 1, 0, 0]' : 0.0933971}", "{'[2, 2, 2, 6, 0, 2, 1, 0, 5, 29, 0, 11, 1, 0, 1, 1, 0, 0]' : 0.094661}", "{'[2, 2, 2, 6, 0, 2, 1, 0, 5, 29, 0, 11, 1, 0, 1, 1, 0, 0]' : 0.0956519}", "{'[2, 2, 2, 6, 0, 2, 1, 0, 5, 29, 0, 11, 1, 0, 1, 1, 0, 0]' : 0.0956159}", "{'[2, 2, 2, 6, 0, 2, 1, 0, 5, 29, 0, 11, 1, 0, 1, 1, 0, 0]' : 0.0956521}", "{'[2, 2, 2, 6, 0, 2, 1, 0, 5, 29, 0, 11, 1, 0, 1, 1, 0, 0]' : 0.095623}", "{'[2, 2, 2, 6, 0, 2, 1, 0, 5, 29, 0, 11, 1, 0, 1, 1, 0, 0]' : 0.095695}", "{'[2, 2, 2, 6, 0, 2, 1, 0, 5, 29, 0, 11, 1, 0, 1, 1, 0, 0]' : 0.0956371}", "{'[2, 2, 2, 6, 0, 2, 1, 0, 5, 29, 0, 11, 1, 0, 1, 1, 0, 0]' : 0.095629}", "{'[2, 2, 2, 6, 0, 2, 1, 0, 5, 29, 0, 11, 1, 0, 1, 1, 0, 0]' : 0.0956509}", "{'[2, 2, 2, 6, 0, 2, 1, 0, 5, 29, 0, 11, 1, 0, 1, 1, 0, 0]' : 0.095716}", "{'[2, 2, 2, 6, 0, 2, 1, 0, 5, 29, 0, 11, 1, 0, 1, 1, 0, 0]' : 0.0960619}", "{'[2, 2, 2, 6, 0, 2, 1, 0, 5, 29, 0, 11, 1, 0, 1, 1, 0, 0]' : 0.0958011}", "{'[2, 2, 2, 6, 0, 2, 1, 0, 5, 29, 0, 11, 1, 0, 1, 1, 0, 0]' : 0.095834}", "{'[2, 2, 2, 6, 0, 2, 1, 0, 5, 29, 0, 11, 1, 0, 1, 1, 0, 0]' : 0.0959549}", "{'[2, 2, 2, 6, 0, 2, 1, 0, 5, 29, 0, 11, 1, 0, 1, 1, 0, 0]' : 0.0958121}", "{'[2, 2, 2, 6, 0, 2, 1, 0, 5, 29, 0, 11, 1, 0, 1, 1, 0, 0]' : 0.0958419}", "{'[2, 2, 2, 6, 0, 2, 1, 0, 5, 29, 0, 11, 1, 0, 1, 1, 0, 0]' : 0.0960252}", "{'[2, 2, 2, 6, 0, 2, 1, 0, 5, 29, 0, 11, 1, 0, 1, 1, 0, 0]' : 0.0958118}", "{'[2, 2, 2, 6, 0, 2, 1, 0, 5, 29, 0, 11, 1, 0, 1, 1, 0, 0]' : 0.0957992}", "{'[2, 2, 2, 6, 0, 2, 1, 0, 5, 29, 0, 11, 1, 0, 1, 1, 0, 0]' : 0.0957808}", "{'[2, 2, 2, 6, 0, 2, 1, 0, 5, 29, 0, 11, 1, 0, 1, 1, 0, 0]' : 0.0958271}", "{'[2, 2, 2, 6, 0, 2, 1, 0, 5, 29, 0, 11, 1, 0, 1, 1, 0, 0]' : 0.0947611}", "{'[2, 2, 2, 6, 0, 2, 1, 0, 5, 29, 0, 11, 1, 0, 1, 1, 0, 0]' : 0.092164}", "{'[2, 2, 2, 6, 0, 2, 1, 0, 5, 29, 0, 11, 1, 0, 1, 1, 0, 0]' : 0.091804}", "{'[2, 2, 2, 6, 0, 2, 1, 0, 5, 29, 0, 11, 1, 0, 1, 1, 0, 0]' : 0.0906539}", "{'[2, 2, 2, 6, 0, 2, 1, 0, 5, 29, 0, 11, 1, 0, 1, 1, 0, 0]' : 0.09077}", "{'[2, 2, 2, 6, 0, 2, 1, 0, 5, 29, 0, 11, 1, 0, 1, 1, 0, 0]' : 0.0915661}", "{'[2, 2, 2, 6, 0, 2, 1, 0, 5, 29, 0, 11, 1, 0, 1, 1, 0, 0]' : 0.0933092}"]
returning from 'run': {'[2, 2, 2, 6, 0, 2, 1, 0, 5, 29, 0, 11, 1, 0, 1, 1, 0, 0]': ([0.093364, 0.0933971, 0.094661, 0.0956519, 0.0956159, 0.0956521, 0.095623, 0.095695, 0.0956371, 0.095629, 0.0956509, 0.095716, 0.0960619, 0.0958011, 0.095834, 0.0959549, 0.0958121, 0.0958419, 0.0960252, 0.0958118, 0.0957992, 0.0957808, 0.0958271, 0.0947611, 0.092164, 0.091804, 0.0906539, 0.09077, 0.0915661, 0.0933092], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 2, 2, 6, 0, 2, 1, 0, 5, 29, 0, 11, 1, 0, 1, 1, 0, 0]': ([0.093364, 0.0933971, 0.094661, 0.0956519, 0.0956159, 0.0956521, 0.095623, 0.095695, 0.0956371, 0.095629, 0.0956509, 0.095716, 0.0960619, 0.0958011, 0.095834, 0.0959549, 0.0958121, 0.0958419, 0.0960252, 0.0958118, 0.0957992, 0.0957808, 0.0958271, 0.0947611, 0.092164, 0.091804, 0.0906539, 0.09077, 0.0915661, 0.0933092], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	97
        Max loop nest depth: 	5
        Additions: 		6710
        Multiplications: 	2668
        Divisions: 		0
        Logical: 		0
        Reads: 			11689
        Writes: 		1782
        Comparisons:		97
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest76.exe __orio_perftest76.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest76.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest76.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest76.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest76.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	6
        Additions: 		278
        Multiplications: 	96
        Divisions: 		0
        Logical: 		0
        Reads: 			676
        Writes: 		156
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest77.exe __orio_perftest77.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest77.exe  
Program Test Output: 
{'[2, 2, 6, 5, 0, 6, 0, 0, 5, 0, 10, 26, 0, 0, 1, 1, 0, 0]' : 0.177081}
{'[2, 2, 6, 5, 0, 6, 0, 0, 5, 0, 10, 26, 0, 0, 1, 1, 0, 0]' : 0.176917}
{'[2, 2, 6, 5, 0, 6, 0, 0, 5, 0, 10, 26, 0, 0, 1, 1, 0, 0]' : 0.165592}
{'[2, 2, 6, 5, 0, 6, 0, 0, 5, 0, 10, 26, 0, 0, 1, 1, 0, 0]' : 0.152848}
{'[2, 2, 6, 5, 0, 6, 0, 0, 5, 0, 10, 26, 0, 0, 1, 1, 0, 0]' : 0.152822}
{'[2, 2, 6, 5, 0, 6, 0, 0, 5, 0, 10, 26, 0, 0, 1, 1, 0, 0]' : 0.153225}
{'[2, 2, 6, 5, 0, 6, 0, 0, 5, 0, 10, 26, 0, 0, 1, 1, 0, 0]' : 0.15633}
{'[2, 2, 6, 5, 0, 6, 0, 0, 5, 0, 10, 26, 0, 0, 1, 1, 0, 0]' : 0.157023}
{'[2, 2, 6, 5, 0, 6, 0, 0, 5, 0, 10, 26, 0, 0, 1, 1, 0, 0]' : 0.154137}
{'[2, 2, 6, 5, 0, 6, 0, 0, 5, 0, 10, 26, 0, 0, 1, 1, 0, 0]' : 0.152761}
{'[2, 2, 6, 5, 0, 6, 0, 0, 5, 0, 10, 26, 0, 0, 1, 1, 0, 0]' : 0.15268}
{'[2, 2, 6, 5, 0, 6, 0, 0, 5, 0, 10, 26, 0, 0, 1, 1, 0, 0]' : 0.152792}
{'[2, 2, 6, 5, 0, 6, 0, 0, 5, 0, 10, 26, 0, 0, 1, 1, 0, 0]' : 0.153166}
{'[2, 2, 6, 5, 0, 6, 0, 0, 5, 0, 10, 26, 0, 0, 1, 1, 0, 0]' : 0.153129}
{'[2, 2, 6, 5, 0, 6, 0, 0, 5, 0, 10, 26, 0, 0, 1, 1, 0, 0]' : 0.152827}
{'[2, 2, 6, 5, 0, 6, 0, 0, 5, 0, 10, 26, 0, 0, 1, 1, 0, 0]' : 0.153075}
{'[2, 2, 6, 5, 0, 6, 0, 0, 5, 0, 10, 26, 0, 0, 1, 1, 0, 0]' : 0.157025}
{'[2, 2, 6, 5, 0, 6, 0, 0, 5, 0, 10, 26, 0, 0, 1, 1, 0, 0]' : 0.155545}
{'[2, 2, 6, 5, 0, 6, 0, 0, 5, 0, 10, 26, 0, 0, 1, 1, 0, 0]' : 0.153147}
{'[2, 2, 6, 5, 0, 6, 0, 0, 5, 0, 10, 26, 0, 0, 1, 1, 0, 0]' : 0.153108}
{'[2, 2, 6, 5, 0, 6, 0, 0, 5, 0, 10, 26, 0, 0, 1, 1, 0, 0]' : 0.153027}
{'[2, 2, 6, 5, 0, 6, 0, 0, 5, 0, 10, 26, 0, 0, 1, 1, 0, 0]' : 0.152724}
{'[2, 2, 6, 5, 0, 6, 0, 0, 5, 0, 10, 26, 0, 0, 1, 1, 0, 0]' : 0.155254}
{'[2, 2, 6, 5, 0, 6, 0, 0, 5, 0, 10, 26, 0, 0, 1, 1, 0, 0]' : 0.156994}
{'[2, 2, 6, 5, 0, 6, 0, 0, 5, 0, 10, 26, 0, 0, 1, 1, 0, 0]' : 0.157095}
{'[2, 2, 6, 5, 0, 6, 0, 0, 5, 0, 10, 26, 0, 0, 1, 1, 0, 0]' : 0.156535}
{'[2, 2, 6, 5, 0, 6, 0, 0, 5, 0, 10, 26, 0, 0, 1, 1, 0, 0]' : 0.157016}
{'[2, 2, 6, 5, 0, 6, 0, 0, 5, 0, 10, 26, 0, 0, 1, 1, 0, 0]' : 0.157012}
{'[2, 2, 6, 5, 0, 6, 0, 0, 5, 0, 10, 26, 0, 0, 1, 1, 0, 0]' : 0.156316}
{'[2, 2, 6, 5, 0, 6, 0, 0, 5, 0, 10, 26, 0, 0, 1, 1, 0, 0]' : 0.152846}

out:
 ["{'[2, 2, 6, 5, 0, 6, 0, 0, 5, 0, 10, 26, 0, 0, 1, 1, 0, 0]' : 0.177081}", "{'[2, 2, 6, 5, 0, 6, 0, 0, 5, 0, 10, 26, 0, 0, 1, 1, 0, 0]' : 0.176917}", "{'[2, 2, 6, 5, 0, 6, 0, 0, 5, 0, 10, 26, 0, 0, 1, 1, 0, 0]' : 0.165592}", "{'[2, 2, 6, 5, 0, 6, 0, 0, 5, 0, 10, 26, 0, 0, 1, 1, 0, 0]' : 0.152848}", "{'[2, 2, 6, 5, 0, 6, 0, 0, 5, 0, 10, 26, 0, 0, 1, 1, 0, 0]' : 0.152822}", "{'[2, 2, 6, 5, 0, 6, 0, 0, 5, 0, 10, 26, 0, 0, 1, 1, 0, 0]' : 0.153225}", "{'[2, 2, 6, 5, 0, 6, 0, 0, 5, 0, 10, 26, 0, 0, 1, 1, 0, 0]' : 0.15633}", "{'[2, 2, 6, 5, 0, 6, 0, 0, 5, 0, 10, 26, 0, 0, 1, 1, 0, 0]' : 0.157023}", "{'[2, 2, 6, 5, 0, 6, 0, 0, 5, 0, 10, 26, 0, 0, 1, 1, 0, 0]' : 0.154137}", "{'[2, 2, 6, 5, 0, 6, 0, 0, 5, 0, 10, 26, 0, 0, 1, 1, 0, 0]' : 0.152761}", "{'[2, 2, 6, 5, 0, 6, 0, 0, 5, 0, 10, 26, 0, 0, 1, 1, 0, 0]' : 0.15268}", "{'[2, 2, 6, 5, 0, 6, 0, 0, 5, 0, 10, 26, 0, 0, 1, 1, 0, 0]' : 0.152792}", "{'[2, 2, 6, 5, 0, 6, 0, 0, 5, 0, 10, 26, 0, 0, 1, 1, 0, 0]' : 0.153166}", "{'[2, 2, 6, 5, 0, 6, 0, 0, 5, 0, 10, 26, 0, 0, 1, 1, 0, 0]' : 0.153129}", "{'[2, 2, 6, 5, 0, 6, 0, 0, 5, 0, 10, 26, 0, 0, 1, 1, 0, 0]' : 0.152827}", "{'[2, 2, 6, 5, 0, 6, 0, 0, 5, 0, 10, 26, 0, 0, 1, 1, 0, 0]' : 0.153075}", "{'[2, 2, 6, 5, 0, 6, 0, 0, 5, 0, 10, 26, 0, 0, 1, 1, 0, 0]' : 0.157025}", "{'[2, 2, 6, 5, 0, 6, 0, 0, 5, 0, 10, 26, 0, 0, 1, 1, 0, 0]' : 0.155545}", "{'[2, 2, 6, 5, 0, 6, 0, 0, 5, 0, 10, 26, 0, 0, 1, 1, 0, 0]' : 0.153147}", "{'[2, 2, 6, 5, 0, 6, 0, 0, 5, 0, 10, 26, 0, 0, 1, 1, 0, 0]' : 0.153108}", "{'[2, 2, 6, 5, 0, 6, 0, 0, 5, 0, 10, 26, 0, 0, 1, 1, 0, 0]' : 0.153027}", "{'[2, 2, 6, 5, 0, 6, 0, 0, 5, 0, 10, 26, 0, 0, 1, 1, 0, 0]' : 0.152724}", "{'[2, 2, 6, 5, 0, 6, 0, 0, 5, 0, 10, 26, 0, 0, 1, 1, 0, 0]' : 0.155254}", "{'[2, 2, 6, 5, 0, 6, 0, 0, 5, 0, 10, 26, 0, 0, 1, 1, 0, 0]' : 0.156994}", "{'[2, 2, 6, 5, 0, 6, 0, 0, 5, 0, 10, 26, 0, 0, 1, 1, 0, 0]' : 0.157095}", "{'[2, 2, 6, 5, 0, 6, 0, 0, 5, 0, 10, 26, 0, 0, 1, 1, 0, 0]' : 0.156535}", "{'[2, 2, 6, 5, 0, 6, 0, 0, 5, 0, 10, 26, 0, 0, 1, 1, 0, 0]' : 0.157016}", "{'[2, 2, 6, 5, 0, 6, 0, 0, 5, 0, 10, 26, 0, 0, 1, 1, 0, 0]' : 0.157012}", "{'[2, 2, 6, 5, 0, 6, 0, 0, 5, 0, 10, 26, 0, 0, 1, 1, 0, 0]' : 0.156316}", "{'[2, 2, 6, 5, 0, 6, 0, 0, 5, 0, 10, 26, 0, 0, 1, 1, 0, 0]' : 0.152846}"]
returning from 'run': {'[2, 2, 6, 5, 0, 6, 0, 0, 5, 0, 10, 26, 0, 0, 1, 1, 0, 0]': ([0.177081, 0.176917, 0.165592, 0.152848, 0.152822, 0.153225, 0.15633, 0.157023, 0.154137, 0.152761, 0.15268, 0.152792, 0.153166, 0.153129, 0.152827, 0.153075, 0.157025, 0.155545, 0.153147, 0.153108, 0.153027, 0.152724, 0.155254, 0.156994, 0.157095, 0.156535, 0.157016, 0.157012, 0.156316, 0.152846], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 2, 6, 5, 0, 6, 0, 0, 5, 0, 10, 26, 0, 0, 1, 1, 0, 0]': ([0.177081, 0.176917, 0.165592, 0.152848, 0.152822, 0.153225, 0.15633, 0.157023, 0.154137, 0.152761, 0.15268, 0.152792, 0.153166, 0.153129, 0.152827, 0.153075, 0.157025, 0.155545, 0.153147, 0.153108, 0.153027, 0.152724, 0.155254, 0.156994, 0.157095, 0.156535, 0.157016, 0.157012, 0.156316, 0.152846], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	25
        Max loop nest depth: 	6
        Additions: 		8188
        Multiplications: 	4032
        Divisions: 		0
        Logical: 		0
        Reads: 			15282
        Writes: 		2422
        Comparisons:		25
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest78.exe __orio_perftest78.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest78.exe  
Program Test Output: 
{'[5, 2, 3, 6, 0, 6, 0, 0, 5, 29, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.185891}
{'[5, 2, 3, 6, 0, 6, 0, 0, 5, 29, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.18401}
{'[5, 2, 3, 6, 0, 6, 0, 0, 5, 29, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.182038}
{'[5, 2, 3, 6, 0, 6, 0, 0, 5, 29, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.182923}
{'[5, 2, 3, 6, 0, 6, 0, 0, 5, 29, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.182743}
{'[5, 2, 3, 6, 0, 6, 0, 0, 5, 29, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.183312}
{'[5, 2, 3, 6, 0, 6, 0, 0, 5, 29, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.182583}
{'[5, 2, 3, 6, 0, 6, 0, 0, 5, 29, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.183013}
{'[5, 2, 3, 6, 0, 6, 0, 0, 5, 29, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.183468}
{'[5, 2, 3, 6, 0, 6, 0, 0, 5, 29, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.183113}
{'[5, 2, 3, 6, 0, 6, 0, 0, 5, 29, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.18337}
{'[5, 2, 3, 6, 0, 6, 0, 0, 5, 29, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.183628}
{'[5, 2, 3, 6, 0, 6, 0, 0, 5, 29, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.185016}
{'[5, 2, 3, 6, 0, 6, 0, 0, 5, 29, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.183608}
{'[5, 2, 3, 6, 0, 6, 0, 0, 5, 29, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.183359}
{'[5, 2, 3, 6, 0, 6, 0, 0, 5, 29, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.183056}
{'[5, 2, 3, 6, 0, 6, 0, 0, 5, 29, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.183448}
{'[5, 2, 3, 6, 0, 6, 0, 0, 5, 29, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.183057}
{'[5, 2, 3, 6, 0, 6, 0, 0, 5, 29, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.182398}
{'[5, 2, 3, 6, 0, 6, 0, 0, 5, 29, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.183429}
{'[5, 2, 3, 6, 0, 6, 0, 0, 5, 29, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.183129}
{'[5, 2, 3, 6, 0, 6, 0, 0, 5, 29, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.183622}
{'[5, 2, 3, 6, 0, 6, 0, 0, 5, 29, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.183161}
{'[5, 2, 3, 6, 0, 6, 0, 0, 5, 29, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.183085}
{'[5, 2, 3, 6, 0, 6, 0, 0, 5, 29, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.181735}
{'[5, 2, 3, 6, 0, 6, 0, 0, 5, 29, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.183349}
{'[5, 2, 3, 6, 0, 6, 0, 0, 5, 29, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.183545}
{'[5, 2, 3, 6, 0, 6, 0, 0, 5, 29, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.18346}
{'[5, 2, 3, 6, 0, 6, 0, 0, 5, 29, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.183342}
{'[5, 2, 3, 6, 0, 6, 0, 0, 5, 29, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.182826}

out:
 ["{'[5, 2, 3, 6, 0, 6, 0, 0, 5, 29, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.185891}", "{'[5, 2, 3, 6, 0, 6, 0, 0, 5, 29, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.18401}", "{'[5, 2, 3, 6, 0, 6, 0, 0, 5, 29, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.182038}", "{'[5, 2, 3, 6, 0, 6, 0, 0, 5, 29, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.182923}", "{'[5, 2, 3, 6, 0, 6, 0, 0, 5, 29, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.182743}", "{'[5, 2, 3, 6, 0, 6, 0, 0, 5, 29, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.183312}", "{'[5, 2, 3, 6, 0, 6, 0, 0, 5, 29, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.182583}", "{'[5, 2, 3, 6, 0, 6, 0, 0, 5, 29, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.183013}", "{'[5, 2, 3, 6, 0, 6, 0, 0, 5, 29, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.183468}", "{'[5, 2, 3, 6, 0, 6, 0, 0, 5, 29, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.183113}", "{'[5, 2, 3, 6, 0, 6, 0, 0, 5, 29, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.18337}", "{'[5, 2, 3, 6, 0, 6, 0, 0, 5, 29, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.183628}", "{'[5, 2, 3, 6, 0, 6, 0, 0, 5, 29, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.185016}", "{'[5, 2, 3, 6, 0, 6, 0, 0, 5, 29, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.183608}", "{'[5, 2, 3, 6, 0, 6, 0, 0, 5, 29, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.183359}", "{'[5, 2, 3, 6, 0, 6, 0, 0, 5, 29, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.183056}", "{'[5, 2, 3, 6, 0, 6, 0, 0, 5, 29, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.183448}", "{'[5, 2, 3, 6, 0, 6, 0, 0, 5, 29, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.183057}", "{'[5, 2, 3, 6, 0, 6, 0, 0, 5, 29, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.182398}", "{'[5, 2, 3, 6, 0, 6, 0, 0, 5, 29, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.183429}", "{'[5, 2, 3, 6, 0, 6, 0, 0, 5, 29, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.183129}", "{'[5, 2, 3, 6, 0, 6, 0, 0, 5, 29, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.183622}", "{'[5, 2, 3, 6, 0, 6, 0, 0, 5, 29, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.183161}", "{'[5, 2, 3, 6, 0, 6, 0, 0, 5, 29, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.183085}", "{'[5, 2, 3, 6, 0, 6, 0, 0, 5, 29, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.181735}", "{'[5, 2, 3, 6, 0, 6, 0, 0, 5, 29, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.183349}", "{'[5, 2, 3, 6, 0, 6, 0, 0, 5, 29, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.183545}", "{'[5, 2, 3, 6, 0, 6, 0, 0, 5, 29, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.18346}", "{'[5, 2, 3, 6, 0, 6, 0, 0, 5, 29, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.183342}", "{'[5, 2, 3, 6, 0, 6, 0, 0, 5, 29, 0, 29, 2, 0, 0, 1, 1, 0]' : 0.182826}"]
returning from 'run': {'[5, 2, 3, 6, 0, 6, 0, 0, 5, 29, 0, 29, 2, 0, 0, 1, 1, 0]': ([0.185891, 0.18401, 0.182038, 0.182923, 0.182743, 0.183312, 0.182583, 0.183013, 0.183468, 0.183113, 0.18337, 0.183628, 0.185016, 0.183608, 0.183359, 0.183056, 0.183448, 0.183057, 0.182398, 0.183429, 0.183129, 0.183622, 0.183161, 0.183085, 0.181735, 0.183349, 0.183545, 0.18346, 0.183342, 0.182826], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 2, 3, 6, 0, 6, 0, 0, 5, 29, 0, 29, 2, 0, 0, 1, 1, 0]': ([0.185891, 0.18401, 0.182038, 0.182923, 0.182743, 0.183312, 0.182583, 0.183013, 0.183468, 0.183113, 0.18337, 0.183628, 0.185016, 0.183608, 0.183359, 0.183056, 0.183448, 0.183057, 0.182398, 0.183429, 0.183129, 0.183622, 0.183161, 0.183085, 0.181735, 0.183349, 0.183545, 0.18346, 0.183342, 0.182826], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	5
        Additions: 		75
        Multiplications: 	18
        Divisions: 		0
        Logical: 		0
        Reads: 			179
        Writes: 		45
        Comparisons:		10
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest79.exe __orio_perftest79.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest79.exe  
Program Test Output: 
{'[4, 2, 2, 6, 0, 0, 1, 0, 5, 0, 11, 0, 0, 1, 0, 1, 1, 0]' : 0.267108}
{'[4, 2, 2, 6, 0, 0, 1, 0, 5, 0, 11, 0, 0, 1, 0, 1, 1, 0]' : 0.250255}
{'[4, 2, 2, 6, 0, 0, 1, 0, 5, 0, 11, 0, 0, 1, 0, 1, 1, 0]' : 0.224395}
{'[4, 2, 2, 6, 0, 0, 1, 0, 5, 0, 11, 0, 0, 1, 0, 1, 1, 0]' : 0.232141}
{'[4, 2, 2, 6, 0, 0, 1, 0, 5, 0, 11, 0, 0, 1, 0, 1, 1, 0]' : 0.230128}
{'[4, 2, 2, 6, 0, 0, 1, 0, 5, 0, 11, 0, 0, 1, 0, 1, 1, 0]' : 0.229827}
{'[4, 2, 2, 6, 0, 0, 1, 0, 5, 0, 11, 0, 0, 1, 0, 1, 1, 0]' : 0.228697}
{'[4, 2, 2, 6, 0, 0, 1, 0, 5, 0, 11, 0, 0, 1, 0, 1, 1, 0]' : 0.228416}
{'[4, 2, 2, 6, 0, 0, 1, 0, 5, 0, 11, 0, 0, 1, 0, 1, 1, 0]' : 0.229571}
{'[4, 2, 2, 6, 0, 0, 1, 0, 5, 0, 11, 0, 0, 1, 0, 1, 1, 0]' : 0.229928}
{'[4, 2, 2, 6, 0, 0, 1, 0, 5, 0, 11, 0, 0, 1, 0, 1, 1, 0]' : 0.229623}
{'[4, 2, 2, 6, 0, 0, 1, 0, 5, 0, 11, 0, 0, 1, 0, 1, 1, 0]' : 0.229871}
{'[4, 2, 2, 6, 0, 0, 1, 0, 5, 0, 11, 0, 0, 1, 0, 1, 1, 0]' : 0.229623}
{'[4, 2, 2, 6, 0, 0, 1, 0, 5, 0, 11, 0, 0, 1, 0, 1, 1, 0]' : 0.230215}
{'[4, 2, 2, 6, 0, 0, 1, 0, 5, 0, 11, 0, 0, 1, 0, 1, 1, 0]' : 0.229772}
{'[4, 2, 2, 6, 0, 0, 1, 0, 5, 0, 11, 0, 0, 1, 0, 1, 1, 0]' : 0.229689}
{'[4, 2, 2, 6, 0, 0, 1, 0, 5, 0, 11, 0, 0, 1, 0, 1, 1, 0]' : 0.229673}
{'[4, 2, 2, 6, 0, 0, 1, 0, 5, 0, 11, 0, 0, 1, 0, 1, 1, 0]' : 0.229687}
{'[4, 2, 2, 6, 0, 0, 1, 0, 5, 0, 11, 0, 0, 1, 0, 1, 1, 0]' : 0.229838}
{'[4, 2, 2, 6, 0, 0, 1, 0, 5, 0, 11, 0, 0, 1, 0, 1, 1, 0]' : 0.229769}
{'[4, 2, 2, 6, 0, 0, 1, 0, 5, 0, 11, 0, 0, 1, 0, 1, 1, 0]' : 0.230423}
{'[4, 2, 2, 6, 0, 0, 1, 0, 5, 0, 11, 0, 0, 1, 0, 1, 1, 0]' : 0.231108}
{'[4, 2, 2, 6, 0, 0, 1, 0, 5, 0, 11, 0, 0, 1, 0, 1, 1, 0]' : 0.229924}
{'[4, 2, 2, 6, 0, 0, 1, 0, 5, 0, 11, 0, 0, 1, 0, 1, 1, 0]' : 0.23003}
{'[4, 2, 2, 6, 0, 0, 1, 0, 5, 0, 11, 0, 0, 1, 0, 1, 1, 0]' : 0.227186}
{'[4, 2, 2, 6, 0, 0, 1, 0, 5, 0, 11, 0, 0, 1, 0, 1, 1, 0]' : 0.229653}
{'[4, 2, 2, 6, 0, 0, 1, 0, 5, 0, 11, 0, 0, 1, 0, 1, 1, 0]' : 0.231226}
{'[4, 2, 2, 6, 0, 0, 1, 0, 5, 0, 11, 0, 0, 1, 0, 1, 1, 0]' : 0.236317}
{'[4, 2, 2, 6, 0, 0, 1, 0, 5, 0, 11, 0, 0, 1, 0, 1, 1, 0]' : 0.23566}
{'[4, 2, 2, 6, 0, 0, 1, 0, 5, 0, 11, 0, 0, 1, 0, 1, 1, 0]' : 0.229544}

out:
 ["{'[4, 2, 2, 6, 0, 0, 1, 0, 5, 0, 11, 0, 0, 1, 0, 1, 1, 0]' : 0.267108}", "{'[4, 2, 2, 6, 0, 0, 1, 0, 5, 0, 11, 0, 0, 1, 0, 1, 1, 0]' : 0.250255}", "{'[4, 2, 2, 6, 0, 0, 1, 0, 5, 0, 11, 0, 0, 1, 0, 1, 1, 0]' : 0.224395}", "{'[4, 2, 2, 6, 0, 0, 1, 0, 5, 0, 11, 0, 0, 1, 0, 1, 1, 0]' : 0.232141}", "{'[4, 2, 2, 6, 0, 0, 1, 0, 5, 0, 11, 0, 0, 1, 0, 1, 1, 0]' : 0.230128}", "{'[4, 2, 2, 6, 0, 0, 1, 0, 5, 0, 11, 0, 0, 1, 0, 1, 1, 0]' : 0.229827}", "{'[4, 2, 2, 6, 0, 0, 1, 0, 5, 0, 11, 0, 0, 1, 0, 1, 1, 0]' : 0.228697}", "{'[4, 2, 2, 6, 0, 0, 1, 0, 5, 0, 11, 0, 0, 1, 0, 1, 1, 0]' : 0.228416}", "{'[4, 2, 2, 6, 0, 0, 1, 0, 5, 0, 11, 0, 0, 1, 0, 1, 1, 0]' : 0.229571}", "{'[4, 2, 2, 6, 0, 0, 1, 0, 5, 0, 11, 0, 0, 1, 0, 1, 1, 0]' : 0.229928}", "{'[4, 2, 2, 6, 0, 0, 1, 0, 5, 0, 11, 0, 0, 1, 0, 1, 1, 0]' : 0.229623}", "{'[4, 2, 2, 6, 0, 0, 1, 0, 5, 0, 11, 0, 0, 1, 0, 1, 1, 0]' : 0.229871}", "{'[4, 2, 2, 6, 0, 0, 1, 0, 5, 0, 11, 0, 0, 1, 0, 1, 1, 0]' : 0.229623}", "{'[4, 2, 2, 6, 0, 0, 1, 0, 5, 0, 11, 0, 0, 1, 0, 1, 1, 0]' : 0.230215}", "{'[4, 2, 2, 6, 0, 0, 1, 0, 5, 0, 11, 0, 0, 1, 0, 1, 1, 0]' : 0.229772}", "{'[4, 2, 2, 6, 0, 0, 1, 0, 5, 0, 11, 0, 0, 1, 0, 1, 1, 0]' : 0.229689}", "{'[4, 2, 2, 6, 0, 0, 1, 0, 5, 0, 11, 0, 0, 1, 0, 1, 1, 0]' : 0.229673}", "{'[4, 2, 2, 6, 0, 0, 1, 0, 5, 0, 11, 0, 0, 1, 0, 1, 1, 0]' : 0.229687}", "{'[4, 2, 2, 6, 0, 0, 1, 0, 5, 0, 11, 0, 0, 1, 0, 1, 1, 0]' : 0.229838}", "{'[4, 2, 2, 6, 0, 0, 1, 0, 5, 0, 11, 0, 0, 1, 0, 1, 1, 0]' : 0.229769}", "{'[4, 2, 2, 6, 0, 0, 1, 0, 5, 0, 11, 0, 0, 1, 0, 1, 1, 0]' : 0.230423}", "{'[4, 2, 2, 6, 0, 0, 1, 0, 5, 0, 11, 0, 0, 1, 0, 1, 1, 0]' : 0.231108}", "{'[4, 2, 2, 6, 0, 0, 1, 0, 5, 0, 11, 0, 0, 1, 0, 1, 1, 0]' : 0.229924}", "{'[4, 2, 2, 6, 0, 0, 1, 0, 5, 0, 11, 0, 0, 1, 0, 1, 1, 0]' : 0.23003}", "{'[4, 2, 2, 6, 0, 0, 1, 0, 5, 0, 11, 0, 0, 1, 0, 1, 1, 0]' : 0.227186}", "{'[4, 2, 2, 6, 0, 0, 1, 0, 5, 0, 11, 0, 0, 1, 0, 1, 1, 0]' : 0.229653}", "{'[4, 2, 2, 6, 0, 0, 1, 0, 5, 0, 11, 0, 0, 1, 0, 1, 1, 0]' : 0.231226}", "{'[4, 2, 2, 6, 0, 0, 1, 0, 5, 0, 11, 0, 0, 1, 0, 1, 1, 0]' : 0.236317}", "{'[4, 2, 2, 6, 0, 0, 1, 0, 5, 0, 11, 0, 0, 1, 0, 1, 1, 0]' : 0.23566}", "{'[4, 2, 2, 6, 0, 0, 1, 0, 5, 0, 11, 0, 0, 1, 0, 1, 1, 0]' : 0.229544}"]
returning from 'run': {'[4, 2, 2, 6, 0, 0, 1, 0, 5, 0, 11, 0, 0, 1, 0, 1, 1, 0]': ([0.267108, 0.250255, 0.224395, 0.232141, 0.230128, 0.229827, 0.228697, 0.228416, 0.229571, 0.229928, 0.229623, 0.229871, 0.229623, 0.230215, 0.229772, 0.229689, 0.229673, 0.229687, 0.229838, 0.229769, 0.230423, 0.231108, 0.229924, 0.23003, 0.227186, 0.229653, 0.231226, 0.236317, 0.23566, 0.229544], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 2, 2, 6, 0, 0, 1, 0, 5, 0, 11, 0, 0, 1, 0, 1, 1, 0]': ([0.267108, 0.250255, 0.224395, 0.232141, 0.230128, 0.229827, 0.228697, 0.228416, 0.229571, 0.229928, 0.229623, 0.229871, 0.229623, 0.230215, 0.229772, 0.229689, 0.229673, 0.229687, 0.229838, 0.229769, 0.230423, 0.231108, 0.229924, 0.23003, 0.227186, 0.229653, 0.231226, 0.236317, 0.23566, 0.229544], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	29
        Max loop nest depth: 	5
        Additions: 		850
        Multiplications: 	380
        Divisions: 		0
        Logical: 		0
        Reads: 			1905
        Writes: 		374
        Comparisons:		29
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest80.exe __orio_perftest80.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest80.exe  
Program Test Output: 
{'[4, 2, 0, 4, 0, 1, 1, 0, 5, 4, 0, 2, 2, 0, 0, 1, 1, 0]' : 0.200764}
{'[4, 2, 0, 4, 0, 1, 1, 0, 5, 4, 0, 2, 2, 0, 0, 1, 1, 0]' : 0.19754}
{'[4, 2, 0, 4, 0, 1, 1, 0, 5, 4, 0, 2, 2, 0, 0, 1, 1, 0]' : 0.183131}
{'[4, 2, 0, 4, 0, 1, 1, 0, 5, 4, 0, 2, 2, 0, 0, 1, 1, 0]' : 0.18263}
{'[4, 2, 0, 4, 0, 1, 1, 0, 5, 4, 0, 2, 2, 0, 0, 1, 1, 0]' : 0.185418}
{'[4, 2, 0, 4, 0, 1, 1, 0, 5, 4, 0, 2, 2, 0, 0, 1, 1, 0]' : 0.184709}
{'[4, 2, 0, 4, 0, 1, 1, 0, 5, 4, 0, 2, 2, 0, 0, 1, 1, 0]' : 0.183517}
{'[4, 2, 0, 4, 0, 1, 1, 0, 5, 4, 0, 2, 2, 0, 0, 1, 1, 0]' : 0.182254}
{'[4, 2, 0, 4, 0, 1, 1, 0, 5, 4, 0, 2, 2, 0, 0, 1, 1, 0]' : 0.182925}
{'[4, 2, 0, 4, 0, 1, 1, 0, 5, 4, 0, 2, 2, 0, 0, 1, 1, 0]' : 0.183581}
{'[4, 2, 0, 4, 0, 1, 1, 0, 5, 4, 0, 2, 2, 0, 0, 1, 1, 0]' : 0.184454}
{'[4, 2, 0, 4, 0, 1, 1, 0, 5, 4, 0, 2, 2, 0, 0, 1, 1, 0]' : 0.182709}
{'[4, 2, 0, 4, 0, 1, 1, 0, 5, 4, 0, 2, 2, 0, 0, 1, 1, 0]' : 0.183043}
{'[4, 2, 0, 4, 0, 1, 1, 0, 5, 4, 0, 2, 2, 0, 0, 1, 1, 0]' : 0.182534}
{'[4, 2, 0, 4, 0, 1, 1, 0, 5, 4, 0, 2, 2, 0, 0, 1, 1, 0]' : 0.183916}
{'[4, 2, 0, 4, 0, 1, 1, 0, 5, 4, 0, 2, 2, 0, 0, 1, 1, 0]' : 0.180919}
{'[4, 2, 0, 4, 0, 1, 1, 0, 5, 4, 0, 2, 2, 0, 0, 1, 1, 0]' : 0.179992}
{'[4, 2, 0, 4, 0, 1, 1, 0, 5, 4, 0, 2, 2, 0, 0, 1, 1, 0]' : 0.180902}
{'[4, 2, 0, 4, 0, 1, 1, 0, 5, 4, 0, 2, 2, 0, 0, 1, 1, 0]' : 0.182702}
{'[4, 2, 0, 4, 0, 1, 1, 0, 5, 4, 0, 2, 2, 0, 0, 1, 1, 0]' : 0.182785}
{'[4, 2, 0, 4, 0, 1, 1, 0, 5, 4, 0, 2, 2, 0, 0, 1, 1, 0]' : 0.184084}
{'[4, 2, 0, 4, 0, 1, 1, 0, 5, 4, 0, 2, 2, 0, 0, 1, 1, 0]' : 0.184303}
{'[4, 2, 0, 4, 0, 1, 1, 0, 5, 4, 0, 2, 2, 0, 0, 1, 1, 0]' : 0.183755}
{'[4, 2, 0, 4, 0, 1, 1, 0, 5, 4, 0, 2, 2, 0, 0, 1, 1, 0]' : 0.181883}
{'[4, 2, 0, 4, 0, 1, 1, 0, 5, 4, 0, 2, 2, 0, 0, 1, 1, 0]' : 0.182993}
{'[4, 2, 0, 4, 0, 1, 1, 0, 5, 4, 0, 2, 2, 0, 0, 1, 1, 0]' : 0.183688}
{'[4, 2, 0, 4, 0, 1, 1, 0, 5, 4, 0, 2, 2, 0, 0, 1, 1, 0]' : 0.184119}
{'[4, 2, 0, 4, 0, 1, 1, 0, 5, 4, 0, 2, 2, 0, 0, 1, 1, 0]' : 0.184754}
{'[4, 2, 0, 4, 0, 1, 1, 0, 5, 4, 0, 2, 2, 0, 0, 1, 1, 0]' : 0.184375}
{'[4, 2, 0, 4, 0, 1, 1, 0, 5, 4, 0, 2, 2, 0, 0, 1, 1, 0]' : 0.183209}

out:
 ["{'[4, 2, 0, 4, 0, 1, 1, 0, 5, 4, 0, 2, 2, 0, 0, 1, 1, 0]' : 0.200764}", "{'[4, 2, 0, 4, 0, 1, 1, 0, 5, 4, 0, 2, 2, 0, 0, 1, 1, 0]' : 0.19754}", "{'[4, 2, 0, 4, 0, 1, 1, 0, 5, 4, 0, 2, 2, 0, 0, 1, 1, 0]' : 0.183131}", "{'[4, 2, 0, 4, 0, 1, 1, 0, 5, 4, 0, 2, 2, 0, 0, 1, 1, 0]' : 0.18263}", "{'[4, 2, 0, 4, 0, 1, 1, 0, 5, 4, 0, 2, 2, 0, 0, 1, 1, 0]' : 0.185418}", "{'[4, 2, 0, 4, 0, 1, 1, 0, 5, 4, 0, 2, 2, 0, 0, 1, 1, 0]' : 0.184709}", "{'[4, 2, 0, 4, 0, 1, 1, 0, 5, 4, 0, 2, 2, 0, 0, 1, 1, 0]' : 0.183517}", "{'[4, 2, 0, 4, 0, 1, 1, 0, 5, 4, 0, 2, 2, 0, 0, 1, 1, 0]' : 0.182254}", "{'[4, 2, 0, 4, 0, 1, 1, 0, 5, 4, 0, 2, 2, 0, 0, 1, 1, 0]' : 0.182925}", "{'[4, 2, 0, 4, 0, 1, 1, 0, 5, 4, 0, 2, 2, 0, 0, 1, 1, 0]' : 0.183581}", "{'[4, 2, 0, 4, 0, 1, 1, 0, 5, 4, 0, 2, 2, 0, 0, 1, 1, 0]' : 0.184454}", "{'[4, 2, 0, 4, 0, 1, 1, 0, 5, 4, 0, 2, 2, 0, 0, 1, 1, 0]' : 0.182709}", "{'[4, 2, 0, 4, 0, 1, 1, 0, 5, 4, 0, 2, 2, 0, 0, 1, 1, 0]' : 0.183043}", "{'[4, 2, 0, 4, 0, 1, 1, 0, 5, 4, 0, 2, 2, 0, 0, 1, 1, 0]' : 0.182534}", "{'[4, 2, 0, 4, 0, 1, 1, 0, 5, 4, 0, 2, 2, 0, 0, 1, 1, 0]' : 0.183916}", "{'[4, 2, 0, 4, 0, 1, 1, 0, 5, 4, 0, 2, 2, 0, 0, 1, 1, 0]' : 0.180919}", "{'[4, 2, 0, 4, 0, 1, 1, 0, 5, 4, 0, 2, 2, 0, 0, 1, 1, 0]' : 0.179992}", "{'[4, 2, 0, 4, 0, 1, 1, 0, 5, 4, 0, 2, 2, 0, 0, 1, 1, 0]' : 0.180902}", "{'[4, 2, 0, 4, 0, 1, 1, 0, 5, 4, 0, 2, 2, 0, 0, 1, 1, 0]' : 0.182702}", "{'[4, 2, 0, 4, 0, 1, 1, 0, 5, 4, 0, 2, 2, 0, 0, 1, 1, 0]' : 0.182785}", "{'[4, 2, 0, 4, 0, 1, 1, 0, 5, 4, 0, 2, 2, 0, 0, 1, 1, 0]' : 0.184084}", "{'[4, 2, 0, 4, 0, 1, 1, 0, 5, 4, 0, 2, 2, 0, 0, 1, 1, 0]' : 0.184303}", "{'[4, 2, 0, 4, 0, 1, 1, 0, 5, 4, 0, 2, 2, 0, 0, 1, 1, 0]' : 0.183755}", "{'[4, 2, 0, 4, 0, 1, 1, 0, 5, 4, 0, 2, 2, 0, 0, 1, 1, 0]' : 0.181883}", "{'[4, 2, 0, 4, 0, 1, 1, 0, 5, 4, 0, 2, 2, 0, 0, 1, 1, 0]' : 0.182993}", "{'[4, 2, 0, 4, 0, 1, 1, 0, 5, 4, 0, 2, 2, 0, 0, 1, 1, 0]' : 0.183688}", "{'[4, 2, 0, 4, 0, 1, 1, 0, 5, 4, 0, 2, 2, 0, 0, 1, 1, 0]' : 0.184119}", "{'[4, 2, 0, 4, 0, 1, 1, 0, 5, 4, 0, 2, 2, 0, 0, 1, 1, 0]' : 0.184754}", "{'[4, 2, 0, 4, 0, 1, 1, 0, 5, 4, 0, 2, 2, 0, 0, 1, 1, 0]' : 0.184375}", "{'[4, 2, 0, 4, 0, 1, 1, 0, 5, 4, 0, 2, 2, 0, 0, 1, 1, 0]' : 0.183209}"]
returning from 'run': {'[4, 2, 0, 4, 0, 1, 1, 0, 5, 4, 0, 2, 2, 0, 0, 1, 1, 0]': ([0.200764, 0.19754, 0.183131, 0.18263, 0.185418, 0.184709, 0.183517, 0.182254, 0.182925, 0.183581, 0.184454, 0.182709, 0.183043, 0.182534, 0.183916, 0.180919, 0.179992, 0.180902, 0.182702, 0.182785, 0.184084, 0.184303, 0.183755, 0.181883, 0.182993, 0.183688, 0.184119, 0.184754, 0.184375, 0.183209], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 2, 0, 4, 0, 1, 1, 0, 5, 4, 0, 2, 2, 0, 0, 1, 1, 0]': ([0.200764, 0.19754, 0.183131, 0.18263, 0.185418, 0.184709, 0.183517, 0.182254, 0.182925, 0.183581, 0.184454, 0.182709, 0.183043, 0.182534, 0.183916, 0.180919, 0.179992, 0.180902, 0.182702, 0.182785, 0.184084, 0.184303, 0.183755, 0.181883, 0.182993, 0.183688, 0.184119, 0.184754, 0.184375, 0.183209], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Complete design, with measurements:
     T1_I T1_K T2_I T2_K ACOPY_x U_I U_J U_K RT_I RT_J RT_K VEC1  cost_mean
60      6    1    6    0       1  20  27   0    0    0    1    0 0.18921117
162     0    0    6    6       1   8   0  27    0    0    1    1 0.12918410
165     0    1    0    6       0   0  21   1    0    2    0    0 0.18365310
205     6    0    4    3       0   5   2   0    0    2    0    0 0.11888237
279     0    6    1    4       1   0  15   5    0    1    1    1 0.16233190
282     0    1    6    2       0  27   0  24    0    0    2    0 0.20701927
382     6    6    4    4       1   0   0   0    1    0    1    1 0.08902931
478     6    2    0    5       1   0  23  26    0    0    2    1 0.16953320
549     1    2    0    0       0   5  26   0    0    0    0    0 0.13048627
570     2    1    2    6       0  11  22   0    1    1    0    0 0.10689287
926     0    6    0    5       1  27   0  29    1    0    0    1 0.10444153
946     3    6    6    6       1   1   0   1    0    1    1    0 0.12864937
950     0    1    4    6       1  28   6   0    0    0    0    1 0.22493473
1030    0    3    5    0       0   0  29  29    1    1    0    1 0.11743763
1307    3    5    3    4       1  28  29   0    2    0    0    1 0.27833600
1357    6    6    0    0       0  19   0  14    0    2    0    0 0.12642000
1416    0    3    6    5       1   2   0   6    0    0    2    0 0.12287450
1422    5    2    0    2       0  29   0  13    0    1    1    0 0.20566753
1452    3    2    3    5       1   0   0   2    1    0    1    0 0.09427841
1698    3    4    6    2       0   0  15  12    0    2    0    1 0.17831153
1879    1    0    0    6       1   0   0  29    0    1    0    0 0.16483700
2045    6    0    5    5       0   0  24   5    1    1    0    0 0.08857585
2114    6    0    5    0       0   0  22  18    0    0    0    0 0.15146287
2229    0    2    3    5       1  12   0  18    0    0    0    0 0.14922063
2269    1    2    1    4       0   0   0  29    0    0    1    1 0.17100820
2483    2    2    6    2       1  29   0  11    1    0    1    0 0.09472904
2758    2    6    5    6       0   0  10  26    0    0    1    0 0.15633497
2768    5    3    6    6       0  29   0  29    2    0    0    1 0.18329057
2835    4    2    6    0       1   0  11   0    0    1    0    1 0.23197657
2949    4    0    4    1       1   4   0   2    2    0    0    1 0.18425293

Heteroscedasticity Test p-value: 0.360528056901
Regression Step:                Df   Sum Sq  Mean Sq F value   Pr(>F)    
T1_I             1 0.000069 0.000069   0.123 0.736101    
T1_K             1 0.000390 0.000390   0.691 0.433386    
T2_I             1 0.000001 0.000001   0.002 0.962636    
T2_K             1 0.001155 0.001155   2.046 0.195650    
ACOPY_x          1 0.000560 0.000560   0.992 0.352411    
U_I              1 0.006216 0.006216  11.017 0.012780 *  
U_J              1 0.003611 0.003611   6.399 0.039251 *  
U_K              1 0.000001 0.000001   0.001 0.974159    
RT_I             1 0.001376 0.001376   2.439 0.162342    
RT_J             1 0.000147 0.000147   0.261 0.625131    
RT_K             1 0.000137 0.000137   0.243 0.637028    
VEC1             1 0.009939 0.009939  17.613 0.004052 ** 
I(1/(1 + T1_I))  1 0.003991 0.003991   7.073 0.032488 *  
I(1/(1 + T1_K))  1 0.000000 0.000000   0.000 0.996525    
I(1/(1 + T2_I))  1 0.000037 0.000037   0.066 0.804719    
I(1/(1 + T2_K))  1 0.000044 0.000044   0.077 0.788901    
I(1/(1 + U_I))   1 0.001489 0.001489   2.638 0.148370    
I(1/(1 + U_J))   1 0.000038 0.000038   0.068 0.801943    
I(1/(1 + U_K))   1 0.000062 0.000062   0.111 0.749157    
I(1/(1 + RT_I))  1 0.029386 0.029386  52.077 0.000175 ***
I(1/(1 + RT_J))  1 0.000645 0.000645   1.143 0.320573    
I(1/(1 + RT_K))  1 0.000393 0.000393   0.696 0.431711    
Residuals        7 0.003950 0.000564                     
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Predicting Best
Generating valid search space of size 3300 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Valid coordinates: 660
Tested coordinates: 30000
Tested coordinates: 40000
Valid coordinates: 1320
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Valid coordinates: 1980
Tested coordinates: 80000
Tested coordinates: 90000
Valid coordinates: 2640
Tested coordinates: 100000
Tested coordinates: 110000
Tested coordinates: 120000
Valid coordinates: 3300
Valid/Tested configurations: 3300/120578
Generated Search Space:
NULL
Identical predictions (tol = 1e-5): 1
Getting Best from Design
Response: ['cost_mean']
Design Names:  [1] "T1_I"      "T1_K"      "T2_I"      "T2_K"      "ACOPY_x"   "U_I"      
 [7] "U_J"       "U_K"       "RT_I"      "RT_J"      "RT_K"      "VEC1"     
[13] "cost_mean"

Design Response:       cost_mean
60   0.18921117
162  0.12918410
165  0.18365310
205  0.11888237
279  0.16233190
282  0.20701927
382  0.08902931
478  0.16953320
549  0.13048627
570  0.10689287
926  0.10444153
946  0.12864937
950  0.22493473
1030 0.11743763
1307 0.27833600
1357 0.12642000
1416 0.12287450
1422 0.20566753
1452 0.09427841
1698 0.17831153
1879 0.16483700
2045 0.08857585
2114 0.15146287
2229 0.14922063
2269 0.17100820
2483 0.09472904
2758 0.15633497
2768 0.18329057
2835 0.23197657
2949 0.18425293

Current Design Names: ['T1_I', 'T1_K', 'T2_I', 'T2_K', 'ACOPY_x', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'VEC1']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Getting fixed variables
Pruning Model
Best Predicted:      T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
2138    4    2    6    0    0    5       0       0    5   3   0  21    1    0
     RT_K SCR VEC1 VEC2
2138    1   1    0    0

Best From Design: [6, 2, 0, 5, 0, 5, 0, 0, 5, 0, 24, 5, 1, 1, 0, 1, 0, 0]
Pruned Factors: ['T1_I', 'T1_K', 'T2_I', 'T2_K', 'ACOPY_x', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Fixed Factors: {'ACOPY_y': 0, 'T1_J': 2, 'U_J': 0, 'U_I': 3, 'T2_J': 0, 'U1_I': 5, 'VEC2': 0, 'VEC1': 0, 'SCR': 1}
Length of requested configs: 1
Result was on Database, Returning Now
Starting Point (-O3):
0.16283083333333334
Predicted Best Point:
[4, 2, 6, 0, 0, 5, 0, 0, 5, 3, 0, 21, 1, 0, 1, 1, 0, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	33
        Max loop nest depth: 	5
        Additions: 		2002
        Multiplications: 	832
        Divisions: 		0
        Logical: 		0
        Reads: 			4232
        Writes: 		847
        Comparisons:		33
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest81.exe __orio_perftest81.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest81.exe  
Program Test Output: 
{'[4, 2, 6, 0, 0, 5, 0, 0, 5, 3, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.106516}
{'[4, 2, 6, 0, 0, 5, 0, 0, 5, 3, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.106268}
{'[4, 2, 6, 0, 0, 5, 0, 0, 5, 3, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.106284}
{'[4, 2, 6, 0, 0, 5, 0, 0, 5, 3, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.106283}
{'[4, 2, 6, 0, 0, 5, 0, 0, 5, 3, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.106352}
{'[4, 2, 6, 0, 0, 5, 0, 0, 5, 3, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.103469}
{'[4, 2, 6, 0, 0, 5, 0, 0, 5, 3, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.0943131}
{'[4, 2, 6, 0, 0, 5, 0, 0, 5, 3, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.094187}
{'[4, 2, 6, 0, 0, 5, 0, 0, 5, 3, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.094167}
{'[4, 2, 6, 0, 0, 5, 0, 0, 5, 3, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.0942261}
{'[4, 2, 6, 0, 0, 5, 0, 0, 5, 3, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.094203}
{'[4, 2, 6, 0, 0, 5, 0, 0, 5, 3, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.094213}
{'[4, 2, 6, 0, 0, 5, 0, 0, 5, 3, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.0941811}
{'[4, 2, 6, 0, 0, 5, 0, 0, 5, 3, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.094398}
{'[4, 2, 6, 0, 0, 5, 0, 0, 5, 3, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.0942152}
{'[4, 2, 6, 0, 0, 5, 0, 0, 5, 3, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.0942011}
{'[4, 2, 6, 0, 0, 5, 0, 0, 5, 3, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.094496}
{'[4, 2, 6, 0, 0, 5, 0, 0, 5, 3, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.094908}
{'[4, 2, 6, 0, 0, 5, 0, 0, 5, 3, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.0941761}
{'[4, 2, 6, 0, 0, 5, 0, 0, 5, 3, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.0941401}
{'[4, 2, 6, 0, 0, 5, 0, 0, 5, 3, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.0944419}
{'[4, 2, 6, 0, 0, 5, 0, 0, 5, 3, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.0941911}
{'[4, 2, 6, 0, 0, 5, 0, 0, 5, 3, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.0942199}
{'[4, 2, 6, 0, 0, 5, 0, 0, 5, 3, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.0942538}
{'[4, 2, 6, 0, 0, 5, 0, 0, 5, 3, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.094238}
{'[4, 2, 6, 0, 0, 5, 0, 0, 5, 3, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.0942068}
{'[4, 2, 6, 0, 0, 5, 0, 0, 5, 3, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.094224}
{'[4, 2, 6, 0, 0, 5, 0, 0, 5, 3, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.0941589}
{'[4, 2, 6, 0, 0, 5, 0, 0, 5, 3, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.0941911}
{'[4, 2, 6, 0, 0, 5, 0, 0, 5, 3, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.0941949}

out:
 ["{'[4, 2, 6, 0, 0, 5, 0, 0, 5, 3, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.106516}", "{'[4, 2, 6, 0, 0, 5, 0, 0, 5, 3, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.106268}", "{'[4, 2, 6, 0, 0, 5, 0, 0, 5, 3, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.106284}", "{'[4, 2, 6, 0, 0, 5, 0, 0, 5, 3, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.106283}", "{'[4, 2, 6, 0, 0, 5, 0, 0, 5, 3, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.106352}", "{'[4, 2, 6, 0, 0, 5, 0, 0, 5, 3, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.103469}", "{'[4, 2, 6, 0, 0, 5, 0, 0, 5, 3, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.0943131}", "{'[4, 2, 6, 0, 0, 5, 0, 0, 5, 3, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.094187}", "{'[4, 2, 6, 0, 0, 5, 0, 0, 5, 3, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.094167}", "{'[4, 2, 6, 0, 0, 5, 0, 0, 5, 3, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.0942261}", "{'[4, 2, 6, 0, 0, 5, 0, 0, 5, 3, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.094203}", "{'[4, 2, 6, 0, 0, 5, 0, 0, 5, 3, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.094213}", "{'[4, 2, 6, 0, 0, 5, 0, 0, 5, 3, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.0941811}", "{'[4, 2, 6, 0, 0, 5, 0, 0, 5, 3, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.094398}", "{'[4, 2, 6, 0, 0, 5, 0, 0, 5, 3, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.0942152}", "{'[4, 2, 6, 0, 0, 5, 0, 0, 5, 3, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.0942011}", "{'[4, 2, 6, 0, 0, 5, 0, 0, 5, 3, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.094496}", "{'[4, 2, 6, 0, 0, 5, 0, 0, 5, 3, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.094908}", "{'[4, 2, 6, 0, 0, 5, 0, 0, 5, 3, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.0941761}", "{'[4, 2, 6, 0, 0, 5, 0, 0, 5, 3, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.0941401}", "{'[4, 2, 6, 0, 0, 5, 0, 0, 5, 3, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.0944419}", "{'[4, 2, 6, 0, 0, 5, 0, 0, 5, 3, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.0941911}", "{'[4, 2, 6, 0, 0, 5, 0, 0, 5, 3, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.0942199}", "{'[4, 2, 6, 0, 0, 5, 0, 0, 5, 3, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.0942538}", "{'[4, 2, 6, 0, 0, 5, 0, 0, 5, 3, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.094238}", "{'[4, 2, 6, 0, 0, 5, 0, 0, 5, 3, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.0942068}", "{'[4, 2, 6, 0, 0, 5, 0, 0, 5, 3, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.094224}", "{'[4, 2, 6, 0, 0, 5, 0, 0, 5, 3, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.0941589}", "{'[4, 2, 6, 0, 0, 5, 0, 0, 5, 3, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.0941911}", "{'[4, 2, 6, 0, 0, 5, 0, 0, 5, 3, 0, 21, 1, 0, 1, 1, 0, 0]' : 0.0941949}"]
returning from 'run': {'[4, 2, 6, 0, 0, 5, 0, 0, 5, 3, 0, 21, 1, 0, 1, 1, 0, 0]': ([0.106516, 0.106268, 0.106284, 0.106283, 0.106352, 0.103469, 0.0943131, 0.094187, 0.094167, 0.0942261, 0.094203, 0.094213, 0.0941811, 0.094398, 0.0942152, 0.0942011, 0.094496, 0.094908, 0.0941761, 0.0941401, 0.0944419, 0.0941911, 0.0942199, 0.0942538, 0.094238, 0.0942068, 0.094224, 0.0941589, 0.0941911, 0.0941949], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 2, 6, 0, 0, 5, 0, 0, 5, 3, 0, 21, 1, 0, 1, 1, 0, 0]': ([0.106516, 0.106268, 0.106284, 0.106283, 0.106352, 0.103469, 0.0943131, 0.094187, 0.094167, 0.0942261, 0.094203, 0.094213, 0.0941811, 0.094398, 0.0942152, 0.0942011, 0.094496, 0.094908, 0.0941761, 0.0941401, 0.0944419, 0.0941911, 0.0942199, 0.0942538, 0.094238, 0.0942068, 0.094224, 0.0941589, 0.0941911, 0.0941949], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Design Best Point:
[6, 2, 0, 5, 0, 5, 0, 0, 5, 0, 24, 5, 1, 1, 0, 1, 0, 0]
Length of requested configs: 1
Result was on Database, Returning Now
Fixed Factors: {'ACOPY_y': 0, 'T1_J': 2, 'U_J': 0, 'U_I': 3, 'T2_J': 0, 'U1_I': 5, 'VEC2': 0, 'VEC1': 0, 'SCR': 1}
Slowdown (Design Best): 0.5439746567245147
Slowdown (Predicted Best): 0.5931549000240536
Budget: 69/180
Updating Global Best: 0.08857584666666667
Current Best Point: 
[6, 2, 0, 5, 0, 5, 0, 0, 5, 0, 24, 5, 1, 1, 0, 1, 0, 0]
Final Best Point: 
[6, 2, 0, 5, 0, 5, 0, 0, 5, 0, 24, 5, 1, 1, 0, 1, 0, 0]
Ending DOPT-ANOVA
Best Point: [6, 2, 0, 5, 0, 5, 0, 0, 5, 0, 24, 5, 1, 1, 0, 1, 0, 0]
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Speedup: 1.838320935797622
----- end random search -----
----- begin random search summary -----
 total completed runs: 0
 total successful runs: 0
 total failed runs: 0
 speedup: 1.838320935797622
----- end random search summary -----
----- begin summary -----
 best coordinate: [6, 2, 0, 5, 0, 5, 0, 0, 5, 0, 24, 5, 1, 1, 0, 1, 0, 0]={'ACOPY_x': False, 'ACOPY_y': False, 'RT_K': 1, 'T1_I': 512, 'T1_J': 32, 'T1_K': 1, 'U_K': 6, 'U_J': 25, 'U_I': 1, 'U1_I': 6, 'T2_K': 1024, 'T2_J': 1, 'T2_I': 1024, 'VEC2': False, 'VEC1': False, 'RT_I': 8, 'SCR': True, 'RT_J': 8}, cost=8.857585e-02, transfer_time=inf, inputs=[('N', 10000)], search_time=-846.32, runs=69
----- end summary -----
Length of requested configs: 1
Result was on Database, Returning Now
----- the obtained best performance parameters -----
 ACOPY_x = False
 ACOPY_y = False
 RT_I = 8
 RT_J = 8
 RT_K = 1
 SCR = True
 T1_I = 512
 T1_J = 32
 T1_K = 1
 T2_I = 1024
 T2_J = 1
 T2_K = 1024
 U1_I = 6
 U_I = 1
 U_J = 25
 U_K = 6
 VEC1 = False
 VEC2 = False
 cost_mean = 0.08857584666666667
 points = 69
 speedup_O3 = 1.838320935797622
 technique = DLMT
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	5
        Additions: 		1549
        Multiplications: 	738
        Divisions: 		0
        Logical: 		0
        Reads: 			3017
        Writes: 		498
        Comparisons:		20
        Gotos: 			0
        
----- finish optimizations -----

----- begin removing annotations from output-----
----- finished removing annotations from output-----

----- begin writing the output file(s) -----
--> writing output to: _atax2.src1.c
----- finished writing the output file(s) -----

====== END ORIO ======
