
====== START ORIO ======

----- begin reading the source file: atax2.src1.c -----
----- finished reading the source file -----

----- begin parsing annotations -----
----- finished parsing annotations -----

----- begin optimizations -----
Search_Space         = 8.234e+13
Number_of_Parameters = 18
Numeric_Parameters   = 13
Binary_Parameters    = 05
['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
[[1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [False, True], [False, True], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 8, 32], [1, 8, 32], [1, 8, 32], [False, True], [False, True], [False, True]]

----- begin empirical tuning for problem size -----
 N = 10000
Parameters: {'ACOPY_x': [0, 2], 'ACOPY_y': [0, 2], 'RT_K': [0, 3], 'T1_I': [0, 7], 'T1_J': [0, 7], 'T1_K': [0, 7], 'U_K': [0, 30], 'U_J': [0, 30], 'U_I': [0, 30], 'U1_I': [0, 30], 'T2_K': [0, 7], 'T2_J': [0, 7], 'T2_I': [0, 7], 'VEC2': [0, 2], 'VEC1': [0, 2], 'RT_I': [0, 3], 'SCR': [0, 2], 'RT_J': [0, 3]}
Parameter Range Values: {'ACOPY_x': [False, True], 'ACOPY_y': [False, True], 'RT_K': [1, 8, 32], 'T1_I': [1, 16, 32, 64, 128, 256, 512], 'T1_J': [1, 16, 32, 64, 128, 256, 512], 'T1_K': [1, 16, 32, 64, 128, 256, 512], 'U_K': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_J': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U1_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'T2_K': [1, 64, 128, 256, 512, 1024, 2048], 'T2_J': [1, 64, 128, 256, 512, 1024, 2048], 'T2_I': [1, 64, 128, 256, 512, 1024, 2048], 'VEC2': [False, True], 'VEC1': [False, True], 'RT_I': [1, 8, 32], 'SCR': [False, True], 'RT_J': [1, 8, 32]}

----- begin random search -----
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Inverse Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Starting DOPT-anova
Step 0
Generating valid search space of size 4600 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Valid coordinates: 920
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Valid coordinates: 1840
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Tested coordinates: 110000
Valid coordinates: 2760
Tested coordinates: 120000
Tested coordinates: 130000
Tested coordinates: 140000
Tested coordinates: 150000
Valid coordinates: 3680
Tested coordinates: 160000
Tested coordinates: 170000
Tested coordinates: 180000
Valid coordinates: 4600
Valid/Tested configurations: 4600/188913
Generated Search Space:
NULL
Clean Info:
Removed Factors: character(0)

Removed Inverse Factors: [1] "ACOPY_x" "ACOPY_y" "SCR"     "VEC1"    "VEC2"   

New Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
New Inverse Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
New Fixed Factors: {}
Full Model:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Fixed Factors: {}
Computing D-Optimal Design
Computing D-Optimal Design with 46 experiments
Design Formula:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Starting "optFederov" run
Using Search Space:
NULL
Data Dimensions: [1] 4600   18

     T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
17      6    0    1    5    0    0       1       1    4  28  23   0    0    1
104     2    0    0    0    1    3       0       1   26   0  29  27    0    0
125     4    6    5    5    4    6       1       1    0  29  10   0    0    0
127     5    2    6    3    2    0       1       0   21   0  26   5    0    0
167     1    6    2    0    4    6       1       1   17   0  27   1    0    1
337     4    0    1    3    1    6       1       0    0  23   0  28    0    1
383     4    4    6    3    5    4       1       1   29  28   0  27    0    1
394     2    0    0    2    5    5       1       1   29   0   4   8    1    1
425     0    6    1    0    0    5       1       0    5  22   0  23    1    0
448     6    0    5    0    6    0       0       1    2  21   0   2    2    0
494     1    6    6    0    5    0       0       0    2   0   5  24    0    0
514     6    4    2    0    0    0       1       0   28   0  26   8    0    0
531     3    1    0    4    6    6       1       0    1  29   0  11    0    0
664     0    1    6    0    0    5       1       0    7   0  21   5    0    2
724     6    2    0    0    4    3       0       1   25   0   0   1    1    0
844     5    5    6    0    0    5       0       0   16  24   9   0    2    0
1139    2    4    0    1    0    1       0       1    0  26   0   6    2    0
1170    4    0    3    6    5    6       1       0   16  26   0  25    2    0
1233    5    5    2    3    3    4       0       1    5  25   0   4    0    2
1521    0    0    2    0    0    1       0       0    0   0  23  17    0    2
1590    5    0    0    3    3    3       1       1   12  24   5   0    0    0
1611    5    1    3    6    2    0       1       0   19  27   1   0    0    2
1621    6    3    0    6    3    0       0       0    0   0   7  19    1    1
1800    1    1    1    5    0    6       0       0    0   0   3   4    0    1
1944    6    4    4    5    5    6       1       0    1   2  18   0    0    0
2437    4    0    4    6    6    5       0       1   28   0   3   0    1    0
2488    5    0    3    4    0    4       1       1    1   0  26  28    0    0
2544    0    6    0    6    5    1       1       1   26  13   0  15    2    0
2584    1    0    6    4    0    5       0       1   15  15   0  18    0    0
2613    4    6    1    4    0    1       0       0    9   0  23   5    0    0
2805    0    0    2    3    0    5       0       0   15  11   0   0    0    0
3041    5    6    4    6    6    2       0       0   21  29  27   0    0    1
3365    0    2    5    6    5    3       1       0    9   0   0   0    2    0
3484    4    0    0    0    2    2       0       0    7  10  27   0    1    0
3704    5    1    4    4    2    2       0       0    1  14   0   4    1    1
3787    0    1    4    2    3    4       1       1   29  29  28   0    0    0
3821    2    3    4    1    4    0       1       0    0   1  27   0    0    2
3911    2    2    5    6    5    5       0       1    2   0  28  29    1    0
4030    3    3    0    6    6    6       1       1   10   0  26  25    1    1
4035    4    6    0    2    0    5       0       0   29   0   5   0    0    0
4091    2    1    3    0    6    2       1       0   14  19   6   0    1    0
4106    0    3    0    4    2    1       1       1    3   0   4  29    0    1
4172    2    2    2    1    2    6       0       1    2   2  18   0    2    0
4318    5    2    0    0    4    6       0       1    5  18   0  21    0    1
4584    3    0    6    6    2    5       0       1   25  19  13   0    0    2
4588    4    1    4    0    0    5       1       1   12   0   0   0    0    0
     RT_K SCR VEC1 VEC2
17      0   1    1    0
104     0   1    1    0
125     0   0    1    0
127     1   0    0    0
167     1   1    0    1
337     1   1    1    1
383     0   1    0    0
394     0   0    0    0
425     1   1    1    1
448     0   0    1    1
494     2   1    1    0
514     2   0    1    0
531     0   1    0    0
664     0   1    1    1
724     1   0    1    1
844     0   1    0    1
1139    0   0    0    0
1170    0   1    1    0
1233    0   0    1    0
1521    0   1    0    0
1590    1   1    0    0
1611    0   0    0    1
1621    0   1    0    1
1800    1   0    1    0
1944    2   1    0    0
2437    0   1    1    1
2488    0   0    0    1
2544    0   1    0    1
2584    2   0    1    1
2613    0   1    0    1
2805    0   0    0    0
3041    1   0    0    1
3365    0   1    1    1
3484    0   1    0    0
3704    0   1    1    0
3787    2   0    0    1
3821    0   0    1    1
3911    1   0    0    0
4030    0   0    0    0
4035    2   0    1    0
4091    0   0    1    0
4106    1   1    0    0
4172    0   1    0    0
4318    1   0    1    1
4584    0   1    0    1
4588    2   0    0    1

D-Efficiency Approximation: [1] 0.327

Measuring design of size 46
Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Length of requested configs: 1
Code stats:
        Number of loops: 	72
        Max loop nest depth: 	5
        Additions: 		1362
        Multiplications: 	540
        Divisions: 		0
        Logical: 		0
        Reads: 			2962
        Writes: 		585
        Comparisons:		72
        Gotos: 			0
        
 building the original code:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -DORIGINAL -o __orio_perftest_original.exe __orio_perftest1.c timer_cpu.o -lm
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest1.exe __orio_perftest1.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest1.exe  
Program Test Output: 
{'[6, 0, 1, 5, 0, 0, 1, 1, 4, 28, 23, 0, 0, 1, 0, 1, 1, 0]' : 0.26635}
{'[6, 0, 1, 5, 0, 0, 1, 1, 4, 28, 23, 0, 0, 1, 0, 1, 1, 0]' : 0.265839}
{'[6, 0, 1, 5, 0, 0, 1, 1, 4, 28, 23, 0, 0, 1, 0, 1, 1, 0]' : 0.232071}
{'[6, 0, 1, 5, 0, 0, 1, 1, 4, 28, 23, 0, 0, 1, 0, 1, 1, 0]' : 0.230019}
{'[6, 0, 1, 5, 0, 0, 1, 1, 4, 28, 23, 0, 0, 1, 0, 1, 1, 0]' : 0.229085}
{'[6, 0, 1, 5, 0, 0, 1, 1, 4, 28, 23, 0, 0, 1, 0, 1, 1, 0]' : 0.22842}
{'[6, 0, 1, 5, 0, 0, 1, 1, 4, 28, 23, 0, 0, 1, 0, 1, 1, 0]' : 0.22891}
{'[6, 0, 1, 5, 0, 0, 1, 1, 4, 28, 23, 0, 0, 1, 0, 1, 1, 0]' : 0.229106}
{'[6, 0, 1, 5, 0, 0, 1, 1, 4, 28, 23, 0, 0, 1, 0, 1, 1, 0]' : 0.228579}
{'[6, 0, 1, 5, 0, 0, 1, 1, 4, 28, 23, 0, 0, 1, 0, 1, 1, 0]' : 0.228599}
{'[6, 0, 1, 5, 0, 0, 1, 1, 4, 28, 23, 0, 0, 1, 0, 1, 1, 0]' : 0.229423}
{'[6, 0, 1, 5, 0, 0, 1, 1, 4, 28, 23, 0, 0, 1, 0, 1, 1, 0]' : 0.22881}
{'[6, 0, 1, 5, 0, 0, 1, 1, 4, 28, 23, 0, 0, 1, 0, 1, 1, 0]' : 0.228443}
{'[6, 0, 1, 5, 0, 0, 1, 1, 4, 28, 23, 0, 0, 1, 0, 1, 1, 0]' : 0.228365}
{'[6, 0, 1, 5, 0, 0, 1, 1, 4, 28, 23, 0, 0, 1, 0, 1, 1, 0]' : 0.228527}
{'[6, 0, 1, 5, 0, 0, 1, 1, 4, 28, 23, 0, 0, 1, 0, 1, 1, 0]' : 0.228701}
{'[6, 0, 1, 5, 0, 0, 1, 1, 4, 28, 23, 0, 0, 1, 0, 1, 1, 0]' : 0.2275}
{'[6, 0, 1, 5, 0, 0, 1, 1, 4, 28, 23, 0, 0, 1, 0, 1, 1, 0]' : 0.227885}
{'[6, 0, 1, 5, 0, 0, 1, 1, 4, 28, 23, 0, 0, 1, 0, 1, 1, 0]' : 0.227464}
{'[6, 0, 1, 5, 0, 0, 1, 1, 4, 28, 23, 0, 0, 1, 0, 1, 1, 0]' : 0.227627}
{'[6, 0, 1, 5, 0, 0, 1, 1, 4, 28, 23, 0, 0, 1, 0, 1, 1, 0]' : 0.227151}
{'[6, 0, 1, 5, 0, 0, 1, 1, 4, 28, 23, 0, 0, 1, 0, 1, 1, 0]' : 0.227288}
{'[6, 0, 1, 5, 0, 0, 1, 1, 4, 28, 23, 0, 0, 1, 0, 1, 1, 0]' : 0.227747}
{'[6, 0, 1, 5, 0, 0, 1, 1, 4, 28, 23, 0, 0, 1, 0, 1, 1, 0]' : 0.228419}
{'[6, 0, 1, 5, 0, 0, 1, 1, 4, 28, 23, 0, 0, 1, 0, 1, 1, 0]' : 0.227544}
{'[6, 0, 1, 5, 0, 0, 1, 1, 4, 28, 23, 0, 0, 1, 0, 1, 1, 0]' : 0.227583}
{'[6, 0, 1, 5, 0, 0, 1, 1, 4, 28, 23, 0, 0, 1, 0, 1, 1, 0]' : 0.2276}
{'[6, 0, 1, 5, 0, 0, 1, 1, 4, 28, 23, 0, 0, 1, 0, 1, 1, 0]' : 0.227326}
{'[6, 0, 1, 5, 0, 0, 1, 1, 4, 28, 23, 0, 0, 1, 0, 1, 1, 0]' : 0.22717}
{'[6, 0, 1, 5, 0, 0, 1, 1, 4, 28, 23, 0, 0, 1, 0, 1, 1, 0]' : 0.227863}

out:
 ["{'[6, 0, 1, 5, 0, 0, 1, 1, 4, 28, 23, 0, 0, 1, 0, 1, 1, 0]' : 0.26635}", "{'[6, 0, 1, 5, 0, 0, 1, 1, 4, 28, 23, 0, 0, 1, 0, 1, 1, 0]' : 0.265839}", "{'[6, 0, 1, 5, 0, 0, 1, 1, 4, 28, 23, 0, 0, 1, 0, 1, 1, 0]' : 0.232071}", "{'[6, 0, 1, 5, 0, 0, 1, 1, 4, 28, 23, 0, 0, 1, 0, 1, 1, 0]' : 0.230019}", "{'[6, 0, 1, 5, 0, 0, 1, 1, 4, 28, 23, 0, 0, 1, 0, 1, 1, 0]' : 0.229085}", "{'[6, 0, 1, 5, 0, 0, 1, 1, 4, 28, 23, 0, 0, 1, 0, 1, 1, 0]' : 0.22842}", "{'[6, 0, 1, 5, 0, 0, 1, 1, 4, 28, 23, 0, 0, 1, 0, 1, 1, 0]' : 0.22891}", "{'[6, 0, 1, 5, 0, 0, 1, 1, 4, 28, 23, 0, 0, 1, 0, 1, 1, 0]' : 0.229106}", "{'[6, 0, 1, 5, 0, 0, 1, 1, 4, 28, 23, 0, 0, 1, 0, 1, 1, 0]' : 0.228579}", "{'[6, 0, 1, 5, 0, 0, 1, 1, 4, 28, 23, 0, 0, 1, 0, 1, 1, 0]' : 0.228599}", "{'[6, 0, 1, 5, 0, 0, 1, 1, 4, 28, 23, 0, 0, 1, 0, 1, 1, 0]' : 0.229423}", "{'[6, 0, 1, 5, 0, 0, 1, 1, 4, 28, 23, 0, 0, 1, 0, 1, 1, 0]' : 0.22881}", "{'[6, 0, 1, 5, 0, 0, 1, 1, 4, 28, 23, 0, 0, 1, 0, 1, 1, 0]' : 0.228443}", "{'[6, 0, 1, 5, 0, 0, 1, 1, 4, 28, 23, 0, 0, 1, 0, 1, 1, 0]' : 0.228365}", "{'[6, 0, 1, 5, 0, 0, 1, 1, 4, 28, 23, 0, 0, 1, 0, 1, 1, 0]' : 0.228527}", "{'[6, 0, 1, 5, 0, 0, 1, 1, 4, 28, 23, 0, 0, 1, 0, 1, 1, 0]' : 0.228701}", "{'[6, 0, 1, 5, 0, 0, 1, 1, 4, 28, 23, 0, 0, 1, 0, 1, 1, 0]' : 0.2275}", "{'[6, 0, 1, 5, 0, 0, 1, 1, 4, 28, 23, 0, 0, 1, 0, 1, 1, 0]' : 0.227885}", "{'[6, 0, 1, 5, 0, 0, 1, 1, 4, 28, 23, 0, 0, 1, 0, 1, 1, 0]' : 0.227464}", "{'[6, 0, 1, 5, 0, 0, 1, 1, 4, 28, 23, 0, 0, 1, 0, 1, 1, 0]' : 0.227627}", "{'[6, 0, 1, 5, 0, 0, 1, 1, 4, 28, 23, 0, 0, 1, 0, 1, 1, 0]' : 0.227151}", "{'[6, 0, 1, 5, 0, 0, 1, 1, 4, 28, 23, 0, 0, 1, 0, 1, 1, 0]' : 0.227288}", "{'[6, 0, 1, 5, 0, 0, 1, 1, 4, 28, 23, 0, 0, 1, 0, 1, 1, 0]' : 0.227747}", "{'[6, 0, 1, 5, 0, 0, 1, 1, 4, 28, 23, 0, 0, 1, 0, 1, 1, 0]' : 0.228419}", "{'[6, 0, 1, 5, 0, 0, 1, 1, 4, 28, 23, 0, 0, 1, 0, 1, 1, 0]' : 0.227544}", "{'[6, 0, 1, 5, 0, 0, 1, 1, 4, 28, 23, 0, 0, 1, 0, 1, 1, 0]' : 0.227583}", "{'[6, 0, 1, 5, 0, 0, 1, 1, 4, 28, 23, 0, 0, 1, 0, 1, 1, 0]' : 0.2276}", "{'[6, 0, 1, 5, 0, 0, 1, 1, 4, 28, 23, 0, 0, 1, 0, 1, 1, 0]' : 0.227326}", "{'[6, 0, 1, 5, 0, 0, 1, 1, 4, 28, 23, 0, 0, 1, 0, 1, 1, 0]' : 0.22717}", "{'[6, 0, 1, 5, 0, 0, 1, 1, 4, 28, 23, 0, 0, 1, 0, 1, 1, 0]' : 0.227863}"]
returning from 'run': {'[6, 0, 1, 5, 0, 0, 1, 1, 4, 28, 23, 0, 0, 1, 0, 1, 1, 0]': ([0.26635, 0.265839, 0.232071, 0.230019, 0.229085, 0.22842, 0.22891, 0.229106, 0.228579, 0.228599, 0.229423, 0.22881, 0.228443, 0.228365, 0.228527, 0.228701, 0.2275, 0.227885, 0.227464, 0.227627, 0.227151, 0.227288, 0.227747, 0.228419, 0.227544, 0.227583, 0.2276, 0.227326, 0.22717, 0.227863], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 1, 5, 0, 0, 1, 1, 4, 28, 23, 0, 0, 1, 0, 1, 1, 0]': ([0.26635, 0.265839, 0.232071, 0.230019, 0.229085, 0.22842, 0.22891, 0.229106, 0.228579, 0.228599, 0.229423, 0.22881, 0.228443, 0.228365, 0.228527, 0.228701, 0.2275, 0.227885, 0.227464, 0.227627, 0.227151, 0.227288, 0.227747, 0.228419, 0.227544, 0.227583, 0.2276, 0.227326, 0.22717, 0.227863], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		399
        Multiplications: 	120
        Divisions: 		0
        Logical: 		0
        Reads: 			846
        Writes: 		178
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest2.exe __orio_perftest2.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest2.exe  
Program Test Output: 
{'[2, 0, 0, 0, 1, 3, 0, 1, 26, 0, 29, 27, 0, 0, 0, 1, 1, 0]' : 0.220616}
{'[2, 0, 0, 0, 1, 3, 0, 1, 26, 0, 29, 27, 0, 0, 0, 1, 1, 0]' : 0.218198}
{'[2, 0, 0, 0, 1, 3, 0, 1, 26, 0, 29, 27, 0, 0, 0, 1, 1, 0]' : 0.189709}
{'[2, 0, 0, 0, 1, 3, 0, 1, 26, 0, 29, 27, 0, 0, 0, 1, 1, 0]' : 0.189401}
{'[2, 0, 0, 0, 1, 3, 0, 1, 26, 0, 29, 27, 0, 0, 0, 1, 1, 0]' : 0.189475}
{'[2, 0, 0, 0, 1, 3, 0, 1, 26, 0, 29, 27, 0, 0, 0, 1, 1, 0]' : 0.189611}
{'[2, 0, 0, 0, 1, 3, 0, 1, 26, 0, 29, 27, 0, 0, 0, 1, 1, 0]' : 0.189303}
{'[2, 0, 0, 0, 1, 3, 0, 1, 26, 0, 29, 27, 0, 0, 0, 1, 1, 0]' : 0.187756}
{'[2, 0, 0, 0, 1, 3, 0, 1, 26, 0, 29, 27, 0, 0, 0, 1, 1, 0]' : 0.188268}
{'[2, 0, 0, 0, 1, 3, 0, 1, 26, 0, 29, 27, 0, 0, 0, 1, 1, 0]' : 0.194026}
{'[2, 0, 0, 0, 1, 3, 0, 1, 26, 0, 29, 27, 0, 0, 0, 1, 1, 0]' : 0.189535}
{'[2, 0, 0, 0, 1, 3, 0, 1, 26, 0, 29, 27, 0, 0, 0, 1, 1, 0]' : 0.193724}
{'[2, 0, 0, 0, 1, 3, 0, 1, 26, 0, 29, 27, 0, 0, 0, 1, 1, 0]' : 0.195755}
{'[2, 0, 0, 0, 1, 3, 0, 1, 26, 0, 29, 27, 0, 0, 0, 1, 1, 0]' : 0.195927}
{'[2, 0, 0, 0, 1, 3, 0, 1, 26, 0, 29, 27, 0, 0, 0, 1, 1, 0]' : 0.19573}
{'[2, 0, 0, 0, 1, 3, 0, 1, 26, 0, 29, 27, 0, 0, 0, 1, 1, 0]' : 0.195774}
{'[2, 0, 0, 0, 1, 3, 0, 1, 26, 0, 29, 27, 0, 0, 0, 1, 1, 0]' : 0.19579}
{'[2, 0, 0, 0, 1, 3, 0, 1, 26, 0, 29, 27, 0, 0, 0, 1, 1, 0]' : 0.195787}
{'[2, 0, 0, 0, 1, 3, 0, 1, 26, 0, 29, 27, 0, 0, 0, 1, 1, 0]' : 0.195939}
{'[2, 0, 0, 0, 1, 3, 0, 1, 26, 0, 29, 27, 0, 0, 0, 1, 1, 0]' : 0.195797}
{'[2, 0, 0, 0, 1, 3, 0, 1, 26, 0, 29, 27, 0, 0, 0, 1, 1, 0]' : 0.195793}
{'[2, 0, 0, 0, 1, 3, 0, 1, 26, 0, 29, 27, 0, 0, 0, 1, 1, 0]' : 0.196071}
{'[2, 0, 0, 0, 1, 3, 0, 1, 26, 0, 29, 27, 0, 0, 0, 1, 1, 0]' : 0.18977}
{'[2, 0, 0, 0, 1, 3, 0, 1, 26, 0, 29, 27, 0, 0, 0, 1, 1, 0]' : 0.189622}
{'[2, 0, 0, 0, 1, 3, 0, 1, 26, 0, 29, 27, 0, 0, 0, 1, 1, 0]' : 0.195534}
{'[2, 0, 0, 0, 1, 3, 0, 1, 26, 0, 29, 27, 0, 0, 0, 1, 1, 0]' : 0.195818}
{'[2, 0, 0, 0, 1, 3, 0, 1, 26, 0, 29, 27, 0, 0, 0, 1, 1, 0]' : 0.195827}
{'[2, 0, 0, 0, 1, 3, 0, 1, 26, 0, 29, 27, 0, 0, 0, 1, 1, 0]' : 0.195836}
{'[2, 0, 0, 0, 1, 3, 0, 1, 26, 0, 29, 27, 0, 0, 0, 1, 1, 0]' : 0.19144}
{'[2, 0, 0, 0, 1, 3, 0, 1, 26, 0, 29, 27, 0, 0, 0, 1, 1, 0]' : 0.194583}

out:
 ["{'[2, 0, 0, 0, 1, 3, 0, 1, 26, 0, 29, 27, 0, 0, 0, 1, 1, 0]' : 0.220616}", "{'[2, 0, 0, 0, 1, 3, 0, 1, 26, 0, 29, 27, 0, 0, 0, 1, 1, 0]' : 0.218198}", "{'[2, 0, 0, 0, 1, 3, 0, 1, 26, 0, 29, 27, 0, 0, 0, 1, 1, 0]' : 0.189709}", "{'[2, 0, 0, 0, 1, 3, 0, 1, 26, 0, 29, 27, 0, 0, 0, 1, 1, 0]' : 0.189401}", "{'[2, 0, 0, 0, 1, 3, 0, 1, 26, 0, 29, 27, 0, 0, 0, 1, 1, 0]' : 0.189475}", "{'[2, 0, 0, 0, 1, 3, 0, 1, 26, 0, 29, 27, 0, 0, 0, 1, 1, 0]' : 0.189611}", "{'[2, 0, 0, 0, 1, 3, 0, 1, 26, 0, 29, 27, 0, 0, 0, 1, 1, 0]' : 0.189303}", "{'[2, 0, 0, 0, 1, 3, 0, 1, 26, 0, 29, 27, 0, 0, 0, 1, 1, 0]' : 0.187756}", "{'[2, 0, 0, 0, 1, 3, 0, 1, 26, 0, 29, 27, 0, 0, 0, 1, 1, 0]' : 0.188268}", "{'[2, 0, 0, 0, 1, 3, 0, 1, 26, 0, 29, 27, 0, 0, 0, 1, 1, 0]' : 0.194026}", "{'[2, 0, 0, 0, 1, 3, 0, 1, 26, 0, 29, 27, 0, 0, 0, 1, 1, 0]' : 0.189535}", "{'[2, 0, 0, 0, 1, 3, 0, 1, 26, 0, 29, 27, 0, 0, 0, 1, 1, 0]' : 0.193724}", "{'[2, 0, 0, 0, 1, 3, 0, 1, 26, 0, 29, 27, 0, 0, 0, 1, 1, 0]' : 0.195755}", "{'[2, 0, 0, 0, 1, 3, 0, 1, 26, 0, 29, 27, 0, 0, 0, 1, 1, 0]' : 0.195927}", "{'[2, 0, 0, 0, 1, 3, 0, 1, 26, 0, 29, 27, 0, 0, 0, 1, 1, 0]' : 0.19573}", "{'[2, 0, 0, 0, 1, 3, 0, 1, 26, 0, 29, 27, 0, 0, 0, 1, 1, 0]' : 0.195774}", "{'[2, 0, 0, 0, 1, 3, 0, 1, 26, 0, 29, 27, 0, 0, 0, 1, 1, 0]' : 0.19579}", "{'[2, 0, 0, 0, 1, 3, 0, 1, 26, 0, 29, 27, 0, 0, 0, 1, 1, 0]' : 0.195787}", "{'[2, 0, 0, 0, 1, 3, 0, 1, 26, 0, 29, 27, 0, 0, 0, 1, 1, 0]' : 0.195939}", "{'[2, 0, 0, 0, 1, 3, 0, 1, 26, 0, 29, 27, 0, 0, 0, 1, 1, 0]' : 0.195797}", "{'[2, 0, 0, 0, 1, 3, 0, 1, 26, 0, 29, 27, 0, 0, 0, 1, 1, 0]' : 0.195793}", "{'[2, 0, 0, 0, 1, 3, 0, 1, 26, 0, 29, 27, 0, 0, 0, 1, 1, 0]' : 0.196071}", "{'[2, 0, 0, 0, 1, 3, 0, 1, 26, 0, 29, 27, 0, 0, 0, 1, 1, 0]' : 0.18977}", "{'[2, 0, 0, 0, 1, 3, 0, 1, 26, 0, 29, 27, 0, 0, 0, 1, 1, 0]' : 0.189622}", "{'[2, 0, 0, 0, 1, 3, 0, 1, 26, 0, 29, 27, 0, 0, 0, 1, 1, 0]' : 0.195534}", "{'[2, 0, 0, 0, 1, 3, 0, 1, 26, 0, 29, 27, 0, 0, 0, 1, 1, 0]' : 0.195818}", "{'[2, 0, 0, 0, 1, 3, 0, 1, 26, 0, 29, 27, 0, 0, 0, 1, 1, 0]' : 0.195827}", "{'[2, 0, 0, 0, 1, 3, 0, 1, 26, 0, 29, 27, 0, 0, 0, 1, 1, 0]' : 0.195836}", "{'[2, 0, 0, 0, 1, 3, 0, 1, 26, 0, 29, 27, 0, 0, 0, 1, 1, 0]' : 0.19144}", "{'[2, 0, 0, 0, 1, 3, 0, 1, 26, 0, 29, 27, 0, 0, 0, 1, 1, 0]' : 0.194583}"]
returning from 'run': {'[2, 0, 0, 0, 1, 3, 0, 1, 26, 0, 29, 27, 0, 0, 0, 1, 1, 0]': ([0.220616, 0.218198, 0.189709, 0.189401, 0.189475, 0.189611, 0.189303, 0.187756, 0.188268, 0.194026, 0.189535, 0.193724, 0.195755, 0.195927, 0.19573, 0.195774, 0.19579, 0.195787, 0.195939, 0.195797, 0.195793, 0.196071, 0.18977, 0.189622, 0.195534, 0.195818, 0.195827, 0.195836, 0.19144, 0.194583], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 0, 0, 0, 1, 3, 0, 1, 26, 0, 29, 27, 0, 0, 0, 1, 1, 0]': ([0.220616, 0.218198, 0.189709, 0.189401, 0.189475, 0.189611, 0.189303, 0.187756, 0.188268, 0.194026, 0.189535, 0.193724, 0.195755, 0.195927, 0.19573, 0.195774, 0.19579, 0.195787, 0.195939, 0.195797, 0.195793, 0.196071, 0.18977, 0.189622, 0.195534, 0.195818, 0.195827, 0.195836, 0.19144, 0.194583], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	168
        Max loop nest depth: 	6
        Additions: 		3902
        Multiplications: 	806
        Divisions: 		0
        Logical: 		0
        Reads: 			6287
        Writes: 		865
        Comparisons:		168
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest3.exe __orio_perftest3.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest3.exe  
Program Test Output: 
{'[4, 6, 5, 5, 4, 6, 1, 1, 0, 29, 10, 0, 0, 0, 0, 0, 1, 0]' : 0.255312}
{'[4, 6, 5, 5, 4, 6, 1, 1, 0, 29, 10, 0, 0, 0, 0, 0, 1, 0]' : 0.232913}
{'[4, 6, 5, 5, 4, 6, 1, 1, 0, 29, 10, 0, 0, 0, 0, 0, 1, 0]' : 0.224611}
{'[4, 6, 5, 5, 4, 6, 1, 1, 0, 29, 10, 0, 0, 0, 0, 0, 1, 0]' : 0.226413}
{'[4, 6, 5, 5, 4, 6, 1, 1, 0, 29, 10, 0, 0, 0, 0, 0, 1, 0]' : 0.229027}
{'[4, 6, 5, 5, 4, 6, 1, 1, 0, 29, 10, 0, 0, 0, 0, 0, 1, 0]' : 0.228917}
{'[4, 6, 5, 5, 4, 6, 1, 1, 0, 29, 10, 0, 0, 0, 0, 0, 1, 0]' : 0.227396}
{'[4, 6, 5, 5, 4, 6, 1, 1, 0, 29, 10, 0, 0, 0, 0, 0, 1, 0]' : 0.220439}
{'[4, 6, 5, 5, 4, 6, 1, 1, 0, 29, 10, 0, 0, 0, 0, 0, 1, 0]' : 0.215592}
{'[4, 6, 5, 5, 4, 6, 1, 1, 0, 29, 10, 0, 0, 0, 0, 0, 1, 0]' : 0.215717}
{'[4, 6, 5, 5, 4, 6, 1, 1, 0, 29, 10, 0, 0, 0, 0, 0, 1, 0]' : 0.227825}
{'[4, 6, 5, 5, 4, 6, 1, 1, 0, 29, 10, 0, 0, 0, 0, 0, 1, 0]' : 0.229205}
{'[4, 6, 5, 5, 4, 6, 1, 1, 0, 29, 10, 0, 0, 0, 0, 0, 1, 0]' : 0.228956}
{'[4, 6, 5, 5, 4, 6, 1, 1, 0, 29, 10, 0, 0, 0, 0, 0, 1, 0]' : 0.226977}
{'[4, 6, 5, 5, 4, 6, 1, 1, 0, 29, 10, 0, 0, 0, 0, 0, 1, 0]' : 0.223394}
{'[4, 6, 5, 5, 4, 6, 1, 1, 0, 29, 10, 0, 0, 0, 0, 0, 1, 0]' : 0.228925}
{'[4, 6, 5, 5, 4, 6, 1, 1, 0, 29, 10, 0, 0, 0, 0, 0, 1, 0]' : 0.22905}
{'[4, 6, 5, 5, 4, 6, 1, 1, 0, 29, 10, 0, 0, 0, 0, 0, 1, 0]' : 0.22898}
{'[4, 6, 5, 5, 4, 6, 1, 1, 0, 29, 10, 0, 0, 0, 0, 0, 1, 0]' : 0.228931}
{'[4, 6, 5, 5, 4, 6, 1, 1, 0, 29, 10, 0, 0, 0, 0, 0, 1, 0]' : 0.228805}
{'[4, 6, 5, 5, 4, 6, 1, 1, 0, 29, 10, 0, 0, 0, 0, 0, 1, 0]' : 0.226511}
{'[4, 6, 5, 5, 4, 6, 1, 1, 0, 29, 10, 0, 0, 0, 0, 0, 1, 0]' : 0.228951}
{'[4, 6, 5, 5, 4, 6, 1, 1, 0, 29, 10, 0, 0, 0, 0, 0, 1, 0]' : 0.228948}
{'[4, 6, 5, 5, 4, 6, 1, 1, 0, 29, 10, 0, 0, 0, 0, 0, 1, 0]' : 0.228906}
{'[4, 6, 5, 5, 4, 6, 1, 1, 0, 29, 10, 0, 0, 0, 0, 0, 1, 0]' : 0.229005}
{'[4, 6, 5, 5, 4, 6, 1, 1, 0, 29, 10, 0, 0, 0, 0, 0, 1, 0]' : 0.229023}
{'[4, 6, 5, 5, 4, 6, 1, 1, 0, 29, 10, 0, 0, 0, 0, 0, 1, 0]' : 0.228964}
{'[4, 6, 5, 5, 4, 6, 1, 1, 0, 29, 10, 0, 0, 0, 0, 0, 1, 0]' : 0.229072}
{'[4, 6, 5, 5, 4, 6, 1, 1, 0, 29, 10, 0, 0, 0, 0, 0, 1, 0]' : 0.229207}
{'[4, 6, 5, 5, 4, 6, 1, 1, 0, 29, 10, 0, 0, 0, 0, 0, 1, 0]' : 0.22905}

out:
 ["{'[4, 6, 5, 5, 4, 6, 1, 1, 0, 29, 10, 0, 0, 0, 0, 0, 1, 0]' : 0.255312}", "{'[4, 6, 5, 5, 4, 6, 1, 1, 0, 29, 10, 0, 0, 0, 0, 0, 1, 0]' : 0.232913}", "{'[4, 6, 5, 5, 4, 6, 1, 1, 0, 29, 10, 0, 0, 0, 0, 0, 1, 0]' : 0.224611}", "{'[4, 6, 5, 5, 4, 6, 1, 1, 0, 29, 10, 0, 0, 0, 0, 0, 1, 0]' : 0.226413}", "{'[4, 6, 5, 5, 4, 6, 1, 1, 0, 29, 10, 0, 0, 0, 0, 0, 1, 0]' : 0.229027}", "{'[4, 6, 5, 5, 4, 6, 1, 1, 0, 29, 10, 0, 0, 0, 0, 0, 1, 0]' : 0.228917}", "{'[4, 6, 5, 5, 4, 6, 1, 1, 0, 29, 10, 0, 0, 0, 0, 0, 1, 0]' : 0.227396}", "{'[4, 6, 5, 5, 4, 6, 1, 1, 0, 29, 10, 0, 0, 0, 0, 0, 1, 0]' : 0.220439}", "{'[4, 6, 5, 5, 4, 6, 1, 1, 0, 29, 10, 0, 0, 0, 0, 0, 1, 0]' : 0.215592}", "{'[4, 6, 5, 5, 4, 6, 1, 1, 0, 29, 10, 0, 0, 0, 0, 0, 1, 0]' : 0.215717}", "{'[4, 6, 5, 5, 4, 6, 1, 1, 0, 29, 10, 0, 0, 0, 0, 0, 1, 0]' : 0.227825}", "{'[4, 6, 5, 5, 4, 6, 1, 1, 0, 29, 10, 0, 0, 0, 0, 0, 1, 0]' : 0.229205}", "{'[4, 6, 5, 5, 4, 6, 1, 1, 0, 29, 10, 0, 0, 0, 0, 0, 1, 0]' : 0.228956}", "{'[4, 6, 5, 5, 4, 6, 1, 1, 0, 29, 10, 0, 0, 0, 0, 0, 1, 0]' : 0.226977}", "{'[4, 6, 5, 5, 4, 6, 1, 1, 0, 29, 10, 0, 0, 0, 0, 0, 1, 0]' : 0.223394}", "{'[4, 6, 5, 5, 4, 6, 1, 1, 0, 29, 10, 0, 0, 0, 0, 0, 1, 0]' : 0.228925}", "{'[4, 6, 5, 5, 4, 6, 1, 1, 0, 29, 10, 0, 0, 0, 0, 0, 1, 0]' : 0.22905}", "{'[4, 6, 5, 5, 4, 6, 1, 1, 0, 29, 10, 0, 0, 0, 0, 0, 1, 0]' : 0.22898}", "{'[4, 6, 5, 5, 4, 6, 1, 1, 0, 29, 10, 0, 0, 0, 0, 0, 1, 0]' : 0.228931}", "{'[4, 6, 5, 5, 4, 6, 1, 1, 0, 29, 10, 0, 0, 0, 0, 0, 1, 0]' : 0.228805}", "{'[4, 6, 5, 5, 4, 6, 1, 1, 0, 29, 10, 0, 0, 0, 0, 0, 1, 0]' : 0.226511}", "{'[4, 6, 5, 5, 4, 6, 1, 1, 0, 29, 10, 0, 0, 0, 0, 0, 1, 0]' : 0.228951}", "{'[4, 6, 5, 5, 4, 6, 1, 1, 0, 29, 10, 0, 0, 0, 0, 0, 1, 0]' : 0.228948}", "{'[4, 6, 5, 5, 4, 6, 1, 1, 0, 29, 10, 0, 0, 0, 0, 0, 1, 0]' : 0.228906}", "{'[4, 6, 5, 5, 4, 6, 1, 1, 0, 29, 10, 0, 0, 0, 0, 0, 1, 0]' : 0.229005}", "{'[4, 6, 5, 5, 4, 6, 1, 1, 0, 29, 10, 0, 0, 0, 0, 0, 1, 0]' : 0.229023}", "{'[4, 6, 5, 5, 4, 6, 1, 1, 0, 29, 10, 0, 0, 0, 0, 0, 1, 0]' : 0.228964}", "{'[4, 6, 5, 5, 4, 6, 1, 1, 0, 29, 10, 0, 0, 0, 0, 0, 1, 0]' : 0.229072}", "{'[4, 6, 5, 5, 4, 6, 1, 1, 0, 29, 10, 0, 0, 0, 0, 0, 1, 0]' : 0.229207}", "{'[4, 6, 5, 5, 4, 6, 1, 1, 0, 29, 10, 0, 0, 0, 0, 0, 1, 0]' : 0.22905}"]
returning from 'run': {'[4, 6, 5, 5, 4, 6, 1, 1, 0, 29, 10, 0, 0, 0, 0, 0, 1, 0]': ([0.255312, 0.232913, 0.224611, 0.226413, 0.229027, 0.228917, 0.227396, 0.220439, 0.215592, 0.215717, 0.227825, 0.229205, 0.228956, 0.226977, 0.223394, 0.228925, 0.22905, 0.22898, 0.228931, 0.228805, 0.226511, 0.228951, 0.228948, 0.228906, 0.229005, 0.229023, 0.228964, 0.229072, 0.229207, 0.22905], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 6, 5, 5, 4, 6, 1, 1, 0, 29, 10, 0, 0, 0, 0, 0, 1, 0]': ([0.255312, 0.232913, 0.224611, 0.226413, 0.229027, 0.228917, 0.227396, 0.220439, 0.215592, 0.215717, 0.227825, 0.229205, 0.228956, 0.226977, 0.223394, 0.228925, 0.22905, 0.22898, 0.228931, 0.228805, 0.226511, 0.228951, 0.228948, 0.228906, 0.229005, 0.229023, 0.228964, 0.229072, 0.229207, 0.22905], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = iii
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		282
        Multiplications: 	86
        Divisions: 		0
        Logical: 		0
        Reads: 			602
        Writes: 		94
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest4.exe __orio_perftest4.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest4.exe  
Program Test Output: 
{'[5, 2, 6, 3, 2, 0, 1, 0, 21, 0, 26, 5, 0, 0, 1, 0, 0, 0]' : 0.234916}
{'[5, 2, 6, 3, 2, 0, 1, 0, 21, 0, 26, 5, 0, 0, 1, 0, 0, 0]' : 0.234802}
{'[5, 2, 6, 3, 2, 0, 1, 0, 21, 0, 26, 5, 0, 0, 1, 0, 0, 0]' : 0.21143}
{'[5, 2, 6, 3, 2, 0, 1, 0, 21, 0, 26, 5, 0, 0, 1, 0, 0, 0]' : 0.203023}
{'[5, 2, 6, 3, 2, 0, 1, 0, 21, 0, 26, 5, 0, 0, 1, 0, 0, 0]' : 0.2018}
{'[5, 2, 6, 3, 2, 0, 1, 0, 21, 0, 26, 5, 0, 0, 1, 0, 0, 0]' : 0.202214}
{'[5, 2, 6, 3, 2, 0, 1, 0, 21, 0, 26, 5, 0, 0, 1, 0, 0, 0]' : 0.19801}
{'[5, 2, 6, 3, 2, 0, 1, 0, 21, 0, 26, 5, 0, 0, 1, 0, 0, 0]' : 0.205844}
{'[5, 2, 6, 3, 2, 0, 1, 0, 21, 0, 26, 5, 0, 0, 1, 0, 0, 0]' : 0.202599}
{'[5, 2, 6, 3, 2, 0, 1, 0, 21, 0, 26, 5, 0, 0, 1, 0, 0, 0]' : 0.202626}
{'[5, 2, 6, 3, 2, 0, 1, 0, 21, 0, 26, 5, 0, 0, 1, 0, 0, 0]' : 0.204897}
{'[5, 2, 6, 3, 2, 0, 1, 0, 21, 0, 26, 5, 0, 0, 1, 0, 0, 0]' : 0.20205}
{'[5, 2, 6, 3, 2, 0, 1, 0, 21, 0, 26, 5, 0, 0, 1, 0, 0, 0]' : 0.206341}
{'[5, 2, 6, 3, 2, 0, 1, 0, 21, 0, 26, 5, 0, 0, 1, 0, 0, 0]' : 0.201951}
{'[5, 2, 6, 3, 2, 0, 1, 0, 21, 0, 26, 5, 0, 0, 1, 0, 0, 0]' : 0.199779}
{'[5, 2, 6, 3, 2, 0, 1, 0, 21, 0, 26, 5, 0, 0, 1, 0, 0, 0]' : 0.200766}
{'[5, 2, 6, 3, 2, 0, 1, 0, 21, 0, 26, 5, 0, 0, 1, 0, 0, 0]' : 0.196041}
{'[5, 2, 6, 3, 2, 0, 1, 0, 21, 0, 26, 5, 0, 0, 1, 0, 0, 0]' : 0.20491}
{'[5, 2, 6, 3, 2, 0, 1, 0, 21, 0, 26, 5, 0, 0, 1, 0, 0, 0]' : 0.202104}
{'[5, 2, 6, 3, 2, 0, 1, 0, 21, 0, 26, 5, 0, 0, 1, 0, 0, 0]' : 0.203362}
{'[5, 2, 6, 3, 2, 0, 1, 0, 21, 0, 26, 5, 0, 0, 1, 0, 0, 0]' : 0.201884}
{'[5, 2, 6, 3, 2, 0, 1, 0, 21, 0, 26, 5, 0, 0, 1, 0, 0, 0]' : 0.202106}
{'[5, 2, 6, 3, 2, 0, 1, 0, 21, 0, 26, 5, 0, 0, 1, 0, 0, 0]' : 0.206337}
{'[5, 2, 6, 3, 2, 0, 1, 0, 21, 0, 26, 5, 0, 0, 1, 0, 0, 0]' : 0.201698}
{'[5, 2, 6, 3, 2, 0, 1, 0, 21, 0, 26, 5, 0, 0, 1, 0, 0, 0]' : 0.203871}
{'[5, 2, 6, 3, 2, 0, 1, 0, 21, 0, 26, 5, 0, 0, 1, 0, 0, 0]' : 0.207844}
{'[5, 2, 6, 3, 2, 0, 1, 0, 21, 0, 26, 5, 0, 0, 1, 0, 0, 0]' : 0.202028}
{'[5, 2, 6, 3, 2, 0, 1, 0, 21, 0, 26, 5, 0, 0, 1, 0, 0, 0]' : 0.203251}
{'[5, 2, 6, 3, 2, 0, 1, 0, 21, 0, 26, 5, 0, 0, 1, 0, 0, 0]' : 0.201819}
{'[5, 2, 6, 3, 2, 0, 1, 0, 21, 0, 26, 5, 0, 0, 1, 0, 0, 0]' : 0.204591}

out:
 ["{'[5, 2, 6, 3, 2, 0, 1, 0, 21, 0, 26, 5, 0, 0, 1, 0, 0, 0]' : 0.234916}", "{'[5, 2, 6, 3, 2, 0, 1, 0, 21, 0, 26, 5, 0, 0, 1, 0, 0, 0]' : 0.234802}", "{'[5, 2, 6, 3, 2, 0, 1, 0, 21, 0, 26, 5, 0, 0, 1, 0, 0, 0]' : 0.21143}", "{'[5, 2, 6, 3, 2, 0, 1, 0, 21, 0, 26, 5, 0, 0, 1, 0, 0, 0]' : 0.203023}", "{'[5, 2, 6, 3, 2, 0, 1, 0, 21, 0, 26, 5, 0, 0, 1, 0, 0, 0]' : 0.2018}", "{'[5, 2, 6, 3, 2, 0, 1, 0, 21, 0, 26, 5, 0, 0, 1, 0, 0, 0]' : 0.202214}", "{'[5, 2, 6, 3, 2, 0, 1, 0, 21, 0, 26, 5, 0, 0, 1, 0, 0, 0]' : 0.19801}", "{'[5, 2, 6, 3, 2, 0, 1, 0, 21, 0, 26, 5, 0, 0, 1, 0, 0, 0]' : 0.205844}", "{'[5, 2, 6, 3, 2, 0, 1, 0, 21, 0, 26, 5, 0, 0, 1, 0, 0, 0]' : 0.202599}", "{'[5, 2, 6, 3, 2, 0, 1, 0, 21, 0, 26, 5, 0, 0, 1, 0, 0, 0]' : 0.202626}", "{'[5, 2, 6, 3, 2, 0, 1, 0, 21, 0, 26, 5, 0, 0, 1, 0, 0, 0]' : 0.204897}", "{'[5, 2, 6, 3, 2, 0, 1, 0, 21, 0, 26, 5, 0, 0, 1, 0, 0, 0]' : 0.20205}", "{'[5, 2, 6, 3, 2, 0, 1, 0, 21, 0, 26, 5, 0, 0, 1, 0, 0, 0]' : 0.206341}", "{'[5, 2, 6, 3, 2, 0, 1, 0, 21, 0, 26, 5, 0, 0, 1, 0, 0, 0]' : 0.201951}", "{'[5, 2, 6, 3, 2, 0, 1, 0, 21, 0, 26, 5, 0, 0, 1, 0, 0, 0]' : 0.199779}", "{'[5, 2, 6, 3, 2, 0, 1, 0, 21, 0, 26, 5, 0, 0, 1, 0, 0, 0]' : 0.200766}", "{'[5, 2, 6, 3, 2, 0, 1, 0, 21, 0, 26, 5, 0, 0, 1, 0, 0, 0]' : 0.196041}", "{'[5, 2, 6, 3, 2, 0, 1, 0, 21, 0, 26, 5, 0, 0, 1, 0, 0, 0]' : 0.20491}", "{'[5, 2, 6, 3, 2, 0, 1, 0, 21, 0, 26, 5, 0, 0, 1, 0, 0, 0]' : 0.202104}", "{'[5, 2, 6, 3, 2, 0, 1, 0, 21, 0, 26, 5, 0, 0, 1, 0, 0, 0]' : 0.203362}", "{'[5, 2, 6, 3, 2, 0, 1, 0, 21, 0, 26, 5, 0, 0, 1, 0, 0, 0]' : 0.201884}", "{'[5, 2, 6, 3, 2, 0, 1, 0, 21, 0, 26, 5, 0, 0, 1, 0, 0, 0]' : 0.202106}", "{'[5, 2, 6, 3, 2, 0, 1, 0, 21, 0, 26, 5, 0, 0, 1, 0, 0, 0]' : 0.206337}", "{'[5, 2, 6, 3, 2, 0, 1, 0, 21, 0, 26, 5, 0, 0, 1, 0, 0, 0]' : 0.201698}", "{'[5, 2, 6, 3, 2, 0, 1, 0, 21, 0, 26, 5, 0, 0, 1, 0, 0, 0]' : 0.203871}", "{'[5, 2, 6, 3, 2, 0, 1, 0, 21, 0, 26, 5, 0, 0, 1, 0, 0, 0]' : 0.207844}", "{'[5, 2, 6, 3, 2, 0, 1, 0, 21, 0, 26, 5, 0, 0, 1, 0, 0, 0]' : 0.202028}", "{'[5, 2, 6, 3, 2, 0, 1, 0, 21, 0, 26, 5, 0, 0, 1, 0, 0, 0]' : 0.203251}", "{'[5, 2, 6, 3, 2, 0, 1, 0, 21, 0, 26, 5, 0, 0, 1, 0, 0, 0]' : 0.201819}", "{'[5, 2, 6, 3, 2, 0, 1, 0, 21, 0, 26, 5, 0, 0, 1, 0, 0, 0]' : 0.204591}"]
returning from 'run': {'[5, 2, 6, 3, 2, 0, 1, 0, 21, 0, 26, 5, 0, 0, 1, 0, 0, 0]': ([0.234916, 0.234802, 0.21143, 0.203023, 0.2018, 0.202214, 0.19801, 0.205844, 0.202599, 0.202626, 0.204897, 0.20205, 0.206341, 0.201951, 0.199779, 0.200766, 0.196041, 0.20491, 0.202104, 0.203362, 0.201884, 0.202106, 0.206337, 0.201698, 0.203871, 0.207844, 0.202028, 0.203251, 0.201819, 0.204591], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 2, 6, 3, 2, 0, 1, 0, 21, 0, 26, 5, 0, 0, 1, 0, 0, 0]': ([0.234916, 0.234802, 0.21143, 0.203023, 0.2018, 0.202214, 0.19801, 0.205844, 0.202599, 0.202626, 0.204897, 0.20205, 0.206341, 0.201951, 0.199779, 0.200766, 0.196041, 0.20491, 0.202104, 0.203362, 0.201884, 0.202106, 0.206337, 0.201698, 0.203871, 0.207844, 0.202028, 0.203251, 0.201819, 0.204591], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		147
        Multiplications: 	32
        Divisions: 		0
        Logical: 		0
        Reads: 			332
        Writes: 		83
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest5.exe __orio_perftest5.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest5.exe  
Program Test Output: 
{'[1, 6, 2, 0, 4, 6, 1, 1, 17, 0, 27, 1, 0, 1, 1, 1, 0, 1]' : 0.271885}
{'[1, 6, 2, 0, 4, 6, 1, 1, 17, 0, 27, 1, 0, 1, 1, 1, 0, 1]' : 0.247861}
{'[1, 6, 2, 0, 4, 6, 1, 1, 17, 0, 27, 1, 0, 1, 1, 1, 0, 1]' : 0.240276}
{'[1, 6, 2, 0, 4, 6, 1, 1, 17, 0, 27, 1, 0, 1, 1, 1, 0, 1]' : 0.236987}
{'[1, 6, 2, 0, 4, 6, 1, 1, 17, 0, 27, 1, 0, 1, 1, 1, 0, 1]' : 0.239223}
{'[1, 6, 2, 0, 4, 6, 1, 1, 17, 0, 27, 1, 0, 1, 1, 1, 0, 1]' : 0.235599}
{'[1, 6, 2, 0, 4, 6, 1, 1, 17, 0, 27, 1, 0, 1, 1, 1, 0, 1]' : 0.238711}
{'[1, 6, 2, 0, 4, 6, 1, 1, 17, 0, 27, 1, 0, 1, 1, 1, 0, 1]' : 0.236415}
{'[1, 6, 2, 0, 4, 6, 1, 1, 17, 0, 27, 1, 0, 1, 1, 1, 0, 1]' : 0.238103}
{'[1, 6, 2, 0, 4, 6, 1, 1, 17, 0, 27, 1, 0, 1, 1, 1, 0, 1]' : 0.236673}
{'[1, 6, 2, 0, 4, 6, 1, 1, 17, 0, 27, 1, 0, 1, 1, 1, 0, 1]' : 0.237573}
{'[1, 6, 2, 0, 4, 6, 1, 1, 17, 0, 27, 1, 0, 1, 1, 1, 0, 1]' : 0.23734}
{'[1, 6, 2, 0, 4, 6, 1, 1, 17, 0, 27, 1, 0, 1, 1, 1, 0, 1]' : 0.236717}
{'[1, 6, 2, 0, 4, 6, 1, 1, 17, 0, 27, 1, 0, 1, 1, 1, 0, 1]' : 0.237966}
{'[1, 6, 2, 0, 4, 6, 1, 1, 17, 0, 27, 1, 0, 1, 1, 1, 0, 1]' : 0.236026}
{'[1, 6, 2, 0, 4, 6, 1, 1, 17, 0, 27, 1, 0, 1, 1, 1, 0, 1]' : 0.235199}
{'[1, 6, 2, 0, 4, 6, 1, 1, 17, 0, 27, 1, 0, 1, 1, 1, 0, 1]' : 0.22821}
{'[1, 6, 2, 0, 4, 6, 1, 1, 17, 0, 27, 1, 0, 1, 1, 1, 0, 1]' : 0.238952}
{'[1, 6, 2, 0, 4, 6, 1, 1, 17, 0, 27, 1, 0, 1, 1, 1, 0, 1]' : 0.235574}
{'[1, 6, 2, 0, 4, 6, 1, 1, 17, 0, 27, 1, 0, 1, 1, 1, 0, 1]' : 0.235886}
{'[1, 6, 2, 0, 4, 6, 1, 1, 17, 0, 27, 1, 0, 1, 1, 1, 0, 1]' : 0.235403}
{'[1, 6, 2, 0, 4, 6, 1, 1, 17, 0, 27, 1, 0, 1, 1, 1, 0, 1]' : 0.234403}
{'[1, 6, 2, 0, 4, 6, 1, 1, 17, 0, 27, 1, 0, 1, 1, 1, 0, 1]' : 0.227311}
{'[1, 6, 2, 0, 4, 6, 1, 1, 17, 0, 27, 1, 0, 1, 1, 1, 0, 1]' : 0.234929}
{'[1, 6, 2, 0, 4, 6, 1, 1, 17, 0, 27, 1, 0, 1, 1, 1, 0, 1]' : 0.232829}
{'[1, 6, 2, 0, 4, 6, 1, 1, 17, 0, 27, 1, 0, 1, 1, 1, 0, 1]' : 0.232945}
{'[1, 6, 2, 0, 4, 6, 1, 1, 17, 0, 27, 1, 0, 1, 1, 1, 0, 1]' : 0.23672}
{'[1, 6, 2, 0, 4, 6, 1, 1, 17, 0, 27, 1, 0, 1, 1, 1, 0, 1]' : 0.237297}
{'[1, 6, 2, 0, 4, 6, 1, 1, 17, 0, 27, 1, 0, 1, 1, 1, 0, 1]' : 0.239594}
{'[1, 6, 2, 0, 4, 6, 1, 1, 17, 0, 27, 1, 0, 1, 1, 1, 0, 1]' : 0.236915}

out:
 ["{'[1, 6, 2, 0, 4, 6, 1, 1, 17, 0, 27, 1, 0, 1, 1, 1, 0, 1]' : 0.271885}", "{'[1, 6, 2, 0, 4, 6, 1, 1, 17, 0, 27, 1, 0, 1, 1, 1, 0, 1]' : 0.247861}", "{'[1, 6, 2, 0, 4, 6, 1, 1, 17, 0, 27, 1, 0, 1, 1, 1, 0, 1]' : 0.240276}", "{'[1, 6, 2, 0, 4, 6, 1, 1, 17, 0, 27, 1, 0, 1, 1, 1, 0, 1]' : 0.236987}", "{'[1, 6, 2, 0, 4, 6, 1, 1, 17, 0, 27, 1, 0, 1, 1, 1, 0, 1]' : 0.239223}", "{'[1, 6, 2, 0, 4, 6, 1, 1, 17, 0, 27, 1, 0, 1, 1, 1, 0, 1]' : 0.235599}", "{'[1, 6, 2, 0, 4, 6, 1, 1, 17, 0, 27, 1, 0, 1, 1, 1, 0, 1]' : 0.238711}", "{'[1, 6, 2, 0, 4, 6, 1, 1, 17, 0, 27, 1, 0, 1, 1, 1, 0, 1]' : 0.236415}", "{'[1, 6, 2, 0, 4, 6, 1, 1, 17, 0, 27, 1, 0, 1, 1, 1, 0, 1]' : 0.238103}", "{'[1, 6, 2, 0, 4, 6, 1, 1, 17, 0, 27, 1, 0, 1, 1, 1, 0, 1]' : 0.236673}", "{'[1, 6, 2, 0, 4, 6, 1, 1, 17, 0, 27, 1, 0, 1, 1, 1, 0, 1]' : 0.237573}", "{'[1, 6, 2, 0, 4, 6, 1, 1, 17, 0, 27, 1, 0, 1, 1, 1, 0, 1]' : 0.23734}", "{'[1, 6, 2, 0, 4, 6, 1, 1, 17, 0, 27, 1, 0, 1, 1, 1, 0, 1]' : 0.236717}", "{'[1, 6, 2, 0, 4, 6, 1, 1, 17, 0, 27, 1, 0, 1, 1, 1, 0, 1]' : 0.237966}", "{'[1, 6, 2, 0, 4, 6, 1, 1, 17, 0, 27, 1, 0, 1, 1, 1, 0, 1]' : 0.236026}", "{'[1, 6, 2, 0, 4, 6, 1, 1, 17, 0, 27, 1, 0, 1, 1, 1, 0, 1]' : 0.235199}", "{'[1, 6, 2, 0, 4, 6, 1, 1, 17, 0, 27, 1, 0, 1, 1, 1, 0, 1]' : 0.22821}", "{'[1, 6, 2, 0, 4, 6, 1, 1, 17, 0, 27, 1, 0, 1, 1, 1, 0, 1]' : 0.238952}", "{'[1, 6, 2, 0, 4, 6, 1, 1, 17, 0, 27, 1, 0, 1, 1, 1, 0, 1]' : 0.235574}", "{'[1, 6, 2, 0, 4, 6, 1, 1, 17, 0, 27, 1, 0, 1, 1, 1, 0, 1]' : 0.235886}", "{'[1, 6, 2, 0, 4, 6, 1, 1, 17, 0, 27, 1, 0, 1, 1, 1, 0, 1]' : 0.235403}", "{'[1, 6, 2, 0, 4, 6, 1, 1, 17, 0, 27, 1, 0, 1, 1, 1, 0, 1]' : 0.234403}", "{'[1, 6, 2, 0, 4, 6, 1, 1, 17, 0, 27, 1, 0, 1, 1, 1, 0, 1]' : 0.227311}", "{'[1, 6, 2, 0, 4, 6, 1, 1, 17, 0, 27, 1, 0, 1, 1, 1, 0, 1]' : 0.234929}", "{'[1, 6, 2, 0, 4, 6, 1, 1, 17, 0, 27, 1, 0, 1, 1, 1, 0, 1]' : 0.232829}", "{'[1, 6, 2, 0, 4, 6, 1, 1, 17, 0, 27, 1, 0, 1, 1, 1, 0, 1]' : 0.232945}", "{'[1, 6, 2, 0, 4, 6, 1, 1, 17, 0, 27, 1, 0, 1, 1, 1, 0, 1]' : 0.23672}", "{'[1, 6, 2, 0, 4, 6, 1, 1, 17, 0, 27, 1, 0, 1, 1, 1, 0, 1]' : 0.237297}", "{'[1, 6, 2, 0, 4, 6, 1, 1, 17, 0, 27, 1, 0, 1, 1, 1, 0, 1]' : 0.239594}", "{'[1, 6, 2, 0, 4, 6, 1, 1, 17, 0, 27, 1, 0, 1, 1, 1, 0, 1]' : 0.236915}"]
returning from 'run': {'[1, 6, 2, 0, 4, 6, 1, 1, 17, 0, 27, 1, 0, 1, 1, 1, 0, 1]': ([0.271885, 0.247861, 0.240276, 0.236987, 0.239223, 0.235599, 0.238711, 0.236415, 0.238103, 0.236673, 0.237573, 0.23734, 0.236717, 0.237966, 0.236026, 0.235199, 0.22821, 0.238952, 0.235574, 0.235886, 0.235403, 0.234403, 0.227311, 0.234929, 0.232829, 0.232945, 0.23672, 0.237297, 0.239594, 0.236915], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 6, 2, 0, 4, 6, 1, 1, 17, 0, 27, 1, 0, 1, 1, 1, 0, 1]': ([0.271885, 0.247861, 0.240276, 0.236987, 0.239223, 0.235599, 0.238711, 0.236415, 0.238103, 0.236673, 0.237573, 0.23734, 0.236717, 0.237966, 0.236026, 0.235199, 0.22821, 0.238952, 0.235574, 0.235886, 0.235403, 0.234403, 0.227311, 0.234929, 0.232829, 0.232945, 0.23672, 0.237297, 0.239594, 0.236915], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	90
        Max loop nest depth: 	6
        Additions: 		6465
        Multiplications: 	2300
        Divisions: 		0
        Logical: 		0
        Reads: 			13878
        Writes: 		3051
        Comparisons:		90
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest6.exe __orio_perftest6.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest6.exe  
Program Test Output: 
{'[4, 0, 1, 3, 1, 6, 1, 0, 0, 23, 0, 28, 0, 1, 1, 1, 1, 1]' : 0.188624}
{'[4, 0, 1, 3, 1, 6, 1, 0, 0, 23, 0, 28, 0, 1, 1, 1, 1, 1]' : 0.190355}
{'[4, 0, 1, 3, 1, 6, 1, 0, 0, 23, 0, 28, 0, 1, 1, 1, 1, 1]' : 0.17799}
{'[4, 0, 1, 3, 1, 6, 1, 0, 0, 23, 0, 28, 0, 1, 1, 1, 1, 1]' : 0.172014}
{'[4, 0, 1, 3, 1, 6, 1, 0, 0, 23, 0, 28, 0, 1, 1, 1, 1, 1]' : 0.172114}
{'[4, 0, 1, 3, 1, 6, 1, 0, 0, 23, 0, 28, 0, 1, 1, 1, 1, 1]' : 0.172054}
{'[4, 0, 1, 3, 1, 6, 1, 0, 0, 23, 0, 28, 0, 1, 1, 1, 1, 1]' : 0.170545}
{'[4, 0, 1, 3, 1, 6, 1, 0, 0, 23, 0, 28, 0, 1, 1, 1, 1, 1]' : 0.166299}
{'[4, 0, 1, 3, 1, 6, 1, 0, 0, 23, 0, 28, 0, 1, 1, 1, 1, 1]' : 0.164835}
{'[4, 0, 1, 3, 1, 6, 1, 0, 0, 23, 0, 28, 0, 1, 1, 1, 1, 1]' : 0.164951}
{'[4, 0, 1, 3, 1, 6, 1, 0, 0, 23, 0, 28, 0, 1, 1, 1, 1, 1]' : 0.166498}
{'[4, 0, 1, 3, 1, 6, 1, 0, 0, 23, 0, 28, 0, 1, 1, 1, 1, 1]' : 0.169471}
{'[4, 0, 1, 3, 1, 6, 1, 0, 0, 23, 0, 28, 0, 1, 1, 1, 1, 1]' : 0.165115}
{'[4, 0, 1, 3, 1, 6, 1, 0, 0, 23, 0, 28, 0, 1, 1, 1, 1, 1]' : 0.166874}
{'[4, 0, 1, 3, 1, 6, 1, 0, 0, 23, 0, 28, 0, 1, 1, 1, 1, 1]' : 0.169892}
{'[4, 0, 1, 3, 1, 6, 1, 0, 0, 23, 0, 28, 0, 1, 1, 1, 1, 1]' : 0.169946}
{'[4, 0, 1, 3, 1, 6, 1, 0, 0, 23, 0, 28, 0, 1, 1, 1, 1, 1]' : 0.17012}
{'[4, 0, 1, 3, 1, 6, 1, 0, 0, 23, 0, 28, 0, 1, 1, 1, 1, 1]' : 0.169823}
{'[4, 0, 1, 3, 1, 6, 1, 0, 0, 23, 0, 28, 0, 1, 1, 1, 1, 1]' : 0.170092}
{'[4, 0, 1, 3, 1, 6, 1, 0, 0, 23, 0, 28, 0, 1, 1, 1, 1, 1]' : 0.17099}
{'[4, 0, 1, 3, 1, 6, 1, 0, 0, 23, 0, 28, 0, 1, 1, 1, 1, 1]' : 0.170064}
{'[4, 0, 1, 3, 1, 6, 1, 0, 0, 23, 0, 28, 0, 1, 1, 1, 1, 1]' : 0.169944}
{'[4, 0, 1, 3, 1, 6, 1, 0, 0, 23, 0, 28, 0, 1, 1, 1, 1, 1]' : 0.170047}
{'[4, 0, 1, 3, 1, 6, 1, 0, 0, 23, 0, 28, 0, 1, 1, 1, 1, 1]' : 0.169943}
{'[4, 0, 1, 3, 1, 6, 1, 0, 0, 23, 0, 28, 0, 1, 1, 1, 1, 1]' : 0.169999}
{'[4, 0, 1, 3, 1, 6, 1, 0, 0, 23, 0, 28, 0, 1, 1, 1, 1, 1]' : 0.172074}
{'[4, 0, 1, 3, 1, 6, 1, 0, 0, 23, 0, 28, 0, 1, 1, 1, 1, 1]' : 0.169941}
{'[4, 0, 1, 3, 1, 6, 1, 0, 0, 23, 0, 28, 0, 1, 1, 1, 1, 1]' : 0.169858}
{'[4, 0, 1, 3, 1, 6, 1, 0, 0, 23, 0, 28, 0, 1, 1, 1, 1, 1]' : 0.170267}
{'[4, 0, 1, 3, 1, 6, 1, 0, 0, 23, 0, 28, 0, 1, 1, 1, 1, 1]' : 0.169816}

out:
 ["{'[4, 0, 1, 3, 1, 6, 1, 0, 0, 23, 0, 28, 0, 1, 1, 1, 1, 1]' : 0.188624}", "{'[4, 0, 1, 3, 1, 6, 1, 0, 0, 23, 0, 28, 0, 1, 1, 1, 1, 1]' : 0.190355}", "{'[4, 0, 1, 3, 1, 6, 1, 0, 0, 23, 0, 28, 0, 1, 1, 1, 1, 1]' : 0.17799}", "{'[4, 0, 1, 3, 1, 6, 1, 0, 0, 23, 0, 28, 0, 1, 1, 1, 1, 1]' : 0.172014}", "{'[4, 0, 1, 3, 1, 6, 1, 0, 0, 23, 0, 28, 0, 1, 1, 1, 1, 1]' : 0.172114}", "{'[4, 0, 1, 3, 1, 6, 1, 0, 0, 23, 0, 28, 0, 1, 1, 1, 1, 1]' : 0.172054}", "{'[4, 0, 1, 3, 1, 6, 1, 0, 0, 23, 0, 28, 0, 1, 1, 1, 1, 1]' : 0.170545}", "{'[4, 0, 1, 3, 1, 6, 1, 0, 0, 23, 0, 28, 0, 1, 1, 1, 1, 1]' : 0.166299}", "{'[4, 0, 1, 3, 1, 6, 1, 0, 0, 23, 0, 28, 0, 1, 1, 1, 1, 1]' : 0.164835}", "{'[4, 0, 1, 3, 1, 6, 1, 0, 0, 23, 0, 28, 0, 1, 1, 1, 1, 1]' : 0.164951}", "{'[4, 0, 1, 3, 1, 6, 1, 0, 0, 23, 0, 28, 0, 1, 1, 1, 1, 1]' : 0.166498}", "{'[4, 0, 1, 3, 1, 6, 1, 0, 0, 23, 0, 28, 0, 1, 1, 1, 1, 1]' : 0.169471}", "{'[4, 0, 1, 3, 1, 6, 1, 0, 0, 23, 0, 28, 0, 1, 1, 1, 1, 1]' : 0.165115}", "{'[4, 0, 1, 3, 1, 6, 1, 0, 0, 23, 0, 28, 0, 1, 1, 1, 1, 1]' : 0.166874}", "{'[4, 0, 1, 3, 1, 6, 1, 0, 0, 23, 0, 28, 0, 1, 1, 1, 1, 1]' : 0.169892}", "{'[4, 0, 1, 3, 1, 6, 1, 0, 0, 23, 0, 28, 0, 1, 1, 1, 1, 1]' : 0.169946}", "{'[4, 0, 1, 3, 1, 6, 1, 0, 0, 23, 0, 28, 0, 1, 1, 1, 1, 1]' : 0.17012}", "{'[4, 0, 1, 3, 1, 6, 1, 0, 0, 23, 0, 28, 0, 1, 1, 1, 1, 1]' : 0.169823}", "{'[4, 0, 1, 3, 1, 6, 1, 0, 0, 23, 0, 28, 0, 1, 1, 1, 1, 1]' : 0.170092}", "{'[4, 0, 1, 3, 1, 6, 1, 0, 0, 23, 0, 28, 0, 1, 1, 1, 1, 1]' : 0.17099}", "{'[4, 0, 1, 3, 1, 6, 1, 0, 0, 23, 0, 28, 0, 1, 1, 1, 1, 1]' : 0.170064}", "{'[4, 0, 1, 3, 1, 6, 1, 0, 0, 23, 0, 28, 0, 1, 1, 1, 1, 1]' : 0.169944}", "{'[4, 0, 1, 3, 1, 6, 1, 0, 0, 23, 0, 28, 0, 1, 1, 1, 1, 1]' : 0.170047}", "{'[4, 0, 1, 3, 1, 6, 1, 0, 0, 23, 0, 28, 0, 1, 1, 1, 1, 1]' : 0.169943}", "{'[4, 0, 1, 3, 1, 6, 1, 0, 0, 23, 0, 28, 0, 1, 1, 1, 1, 1]' : 0.169999}", "{'[4, 0, 1, 3, 1, 6, 1, 0, 0, 23, 0, 28, 0, 1, 1, 1, 1, 1]' : 0.172074}", "{'[4, 0, 1, 3, 1, 6, 1, 0, 0, 23, 0, 28, 0, 1, 1, 1, 1, 1]' : 0.169941}", "{'[4, 0, 1, 3, 1, 6, 1, 0, 0, 23, 0, 28, 0, 1, 1, 1, 1, 1]' : 0.169858}", "{'[4, 0, 1, 3, 1, 6, 1, 0, 0, 23, 0, 28, 0, 1, 1, 1, 1, 1]' : 0.170267}", "{'[4, 0, 1, 3, 1, 6, 1, 0, 0, 23, 0, 28, 0, 1, 1, 1, 1, 1]' : 0.169816}"]
returning from 'run': {'[4, 0, 1, 3, 1, 6, 1, 0, 0, 23, 0, 28, 0, 1, 1, 1, 1, 1]': ([0.188624, 0.190355, 0.17799, 0.172014, 0.172114, 0.172054, 0.170545, 0.166299, 0.164835, 0.164951, 0.166498, 0.169471, 0.165115, 0.166874, 0.169892, 0.169946, 0.17012, 0.169823, 0.170092, 0.17099, 0.170064, 0.169944, 0.170047, 0.169943, 0.169999, 0.172074, 0.169941, 0.169858, 0.170267, 0.169816], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 0, 1, 3, 1, 6, 1, 0, 0, 23, 0, 28, 0, 1, 1, 1, 1, 1]': ([0.188624, 0.190355, 0.17799, 0.172014, 0.172114, 0.172054, 0.170545, 0.166299, 0.164835, 0.164951, 0.166498, 0.169471, 0.165115, 0.166874, 0.169892, 0.169946, 0.17012, 0.169823, 0.170092, 0.17099, 0.170064, 0.169944, 0.170047, 0.169943, 0.169999, 0.172074, 0.169941, 0.169858, 0.170267, 0.169816], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	164
        Max loop nest depth: 	6
        Additions: 		8641
        Multiplications: 	2220
        Divisions: 		0
        Logical: 		0
        Reads: 			16760
        Writes: 		3397
        Comparisons:		164
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest7.exe __orio_perftest7.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest7.exe  
Program Test Output: 
{'[4, 4, 6, 3, 5, 4, 1, 1, 29, 28, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.221989}
{'[4, 4, 6, 3, 5, 4, 1, 1, 29, 28, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.221865}
{'[4, 4, 6, 3, 5, 4, 1, 1, 29, 28, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.206949}
{'[4, 4, 6, 3, 5, 4, 1, 1, 29, 28, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.193716}
{'[4, 4, 6, 3, 5, 4, 1, 1, 29, 28, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.194737}
{'[4, 4, 6, 3, 5, 4, 1, 1, 29, 28, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.194292}
{'[4, 4, 6, 3, 5, 4, 1, 1, 29, 28, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.19356}
{'[4, 4, 6, 3, 5, 4, 1, 1, 29, 28, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.193724}
{'[4, 4, 6, 3, 5, 4, 1, 1, 29, 28, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.194312}
{'[4, 4, 6, 3, 5, 4, 1, 1, 29, 28, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.193346}
{'[4, 4, 6, 3, 5, 4, 1, 1, 29, 28, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.193468}
{'[4, 4, 6, 3, 5, 4, 1, 1, 29, 28, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.193474}
{'[4, 4, 6, 3, 5, 4, 1, 1, 29, 28, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.193375}
{'[4, 4, 6, 3, 5, 4, 1, 1, 29, 28, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.194028}
{'[4, 4, 6, 3, 5, 4, 1, 1, 29, 28, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.193502}
{'[4, 4, 6, 3, 5, 4, 1, 1, 29, 28, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.193541}
{'[4, 4, 6, 3, 5, 4, 1, 1, 29, 28, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.193421}
{'[4, 4, 6, 3, 5, 4, 1, 1, 29, 28, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.193669}
{'[4, 4, 6, 3, 5, 4, 1, 1, 29, 28, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.193221}
{'[4, 4, 6, 3, 5, 4, 1, 1, 29, 28, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.193214}
{'[4, 4, 6, 3, 5, 4, 1, 1, 29, 28, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.193573}
{'[4, 4, 6, 3, 5, 4, 1, 1, 29, 28, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.194322}
{'[4, 4, 6, 3, 5, 4, 1, 1, 29, 28, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.193386}
{'[4, 4, 6, 3, 5, 4, 1, 1, 29, 28, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.193529}
{'[4, 4, 6, 3, 5, 4, 1, 1, 29, 28, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.194404}
{'[4, 4, 6, 3, 5, 4, 1, 1, 29, 28, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.192859}
{'[4, 4, 6, 3, 5, 4, 1, 1, 29, 28, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.193334}
{'[4, 4, 6, 3, 5, 4, 1, 1, 29, 28, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.193933}
{'[4, 4, 6, 3, 5, 4, 1, 1, 29, 28, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.193461}
{'[4, 4, 6, 3, 5, 4, 1, 1, 29, 28, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.194452}

out:
 ["{'[4, 4, 6, 3, 5, 4, 1, 1, 29, 28, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.221989}", "{'[4, 4, 6, 3, 5, 4, 1, 1, 29, 28, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.221865}", "{'[4, 4, 6, 3, 5, 4, 1, 1, 29, 28, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.206949}", "{'[4, 4, 6, 3, 5, 4, 1, 1, 29, 28, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.193716}", "{'[4, 4, 6, 3, 5, 4, 1, 1, 29, 28, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.194737}", "{'[4, 4, 6, 3, 5, 4, 1, 1, 29, 28, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.194292}", "{'[4, 4, 6, 3, 5, 4, 1, 1, 29, 28, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.19356}", "{'[4, 4, 6, 3, 5, 4, 1, 1, 29, 28, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.193724}", "{'[4, 4, 6, 3, 5, 4, 1, 1, 29, 28, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.194312}", "{'[4, 4, 6, 3, 5, 4, 1, 1, 29, 28, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.193346}", "{'[4, 4, 6, 3, 5, 4, 1, 1, 29, 28, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.193468}", "{'[4, 4, 6, 3, 5, 4, 1, 1, 29, 28, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.193474}", "{'[4, 4, 6, 3, 5, 4, 1, 1, 29, 28, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.193375}", "{'[4, 4, 6, 3, 5, 4, 1, 1, 29, 28, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.194028}", "{'[4, 4, 6, 3, 5, 4, 1, 1, 29, 28, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.193502}", "{'[4, 4, 6, 3, 5, 4, 1, 1, 29, 28, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.193541}", "{'[4, 4, 6, 3, 5, 4, 1, 1, 29, 28, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.193421}", "{'[4, 4, 6, 3, 5, 4, 1, 1, 29, 28, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.193669}", "{'[4, 4, 6, 3, 5, 4, 1, 1, 29, 28, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.193221}", "{'[4, 4, 6, 3, 5, 4, 1, 1, 29, 28, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.193214}", "{'[4, 4, 6, 3, 5, 4, 1, 1, 29, 28, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.193573}", "{'[4, 4, 6, 3, 5, 4, 1, 1, 29, 28, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.194322}", "{'[4, 4, 6, 3, 5, 4, 1, 1, 29, 28, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.193386}", "{'[4, 4, 6, 3, 5, 4, 1, 1, 29, 28, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.193529}", "{'[4, 4, 6, 3, 5, 4, 1, 1, 29, 28, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.194404}", "{'[4, 4, 6, 3, 5, 4, 1, 1, 29, 28, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.192859}", "{'[4, 4, 6, 3, 5, 4, 1, 1, 29, 28, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.193334}", "{'[4, 4, 6, 3, 5, 4, 1, 1, 29, 28, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.193933}", "{'[4, 4, 6, 3, 5, 4, 1, 1, 29, 28, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.193461}", "{'[4, 4, 6, 3, 5, 4, 1, 1, 29, 28, 0, 27, 0, 1, 0, 1, 0, 0]' : 0.194452}"]
returning from 'run': {'[4, 4, 6, 3, 5, 4, 1, 1, 29, 28, 0, 27, 0, 1, 0, 1, 0, 0]': ([0.221989, 0.221865, 0.206949, 0.193716, 0.194737, 0.194292, 0.19356, 0.193724, 0.194312, 0.193346, 0.193468, 0.193474, 0.193375, 0.194028, 0.193502, 0.193541, 0.193421, 0.193669, 0.193221, 0.193214, 0.193573, 0.194322, 0.193386, 0.193529, 0.194404, 0.192859, 0.193334, 0.193933, 0.193461, 0.194452], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 4, 6, 3, 5, 4, 1, 1, 29, 28, 0, 27, 0, 1, 0, 1, 0, 0]': ([0.221989, 0.221865, 0.206949, 0.193716, 0.194737, 0.194292, 0.19356, 0.193724, 0.194312, 0.193346, 0.193468, 0.193474, 0.193375, 0.194028, 0.193502, 0.193541, 0.193421, 0.193669, 0.193221, 0.193214, 0.193573, 0.194322, 0.193386, 0.193529, 0.194404, 0.192859, 0.193334, 0.193933, 0.193461, 0.194452], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	5
        Additions: 		1346
        Multiplications: 	324
        Divisions: 		0
        Logical: 		0
        Reads: 			2118
        Writes: 		245
        Comparisons:		22
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest8.exe __orio_perftest8.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest8.exe  
Program Test Output: 
{'[2, 0, 0, 2, 5, 5, 1, 1, 29, 0, 4, 8, 1, 1, 0, 0, 0, 0]' : 0.125942}
{'[2, 0, 0, 2, 5, 5, 1, 1, 29, 0, 4, 8, 1, 1, 0, 0, 0, 0]' : 0.125975}
{'[2, 0, 0, 2, 5, 5, 1, 1, 29, 0, 4, 8, 1, 1, 0, 0, 0, 0]' : 0.125784}
{'[2, 0, 0, 2, 5, 5, 1, 1, 29, 0, 4, 8, 1, 1, 0, 0, 0, 0]' : 0.11527}
{'[2, 0, 0, 2, 5, 5, 1, 1, 29, 0, 4, 8, 1, 1, 0, 0, 0, 0]' : 0.110061}
{'[2, 0, 0, 2, 5, 5, 1, 1, 29, 0, 4, 8, 1, 1, 0, 0, 0, 0]' : 0.110449}
{'[2, 0, 0, 2, 5, 5, 1, 1, 29, 0, 4, 8, 1, 1, 0, 0, 0, 0]' : 0.110929}
{'[2, 0, 0, 2, 5, 5, 1, 1, 29, 0, 4, 8, 1, 1, 0, 0, 0, 0]' : 0.110143}
{'[2, 0, 0, 2, 5, 5, 1, 1, 29, 0, 4, 8, 1, 1, 0, 0, 0, 0]' : 0.110059}
{'[2, 0, 0, 2, 5, 5, 1, 1, 29, 0, 4, 8, 1, 1, 0, 0, 0, 0]' : 0.110089}
{'[2, 0, 0, 2, 5, 5, 1, 1, 29, 0, 4, 8, 1, 1, 0, 0, 0, 0]' : 0.110324}
{'[2, 0, 0, 2, 5, 5, 1, 1, 29, 0, 4, 8, 1, 1, 0, 0, 0, 0]' : 0.110008}
{'[2, 0, 0, 2, 5, 5, 1, 1, 29, 0, 4, 8, 1, 1, 0, 0, 0, 0]' : 0.112666}
{'[2, 0, 0, 2, 5, 5, 1, 1, 29, 0, 4, 8, 1, 1, 0, 0, 0, 0]' : 0.113057}
{'[2, 0, 0, 2, 5, 5, 1, 1, 29, 0, 4, 8, 1, 1, 0, 0, 0, 0]' : 0.113527}
{'[2, 0, 0, 2, 5, 5, 1, 1, 29, 0, 4, 8, 1, 1, 0, 0, 0, 0]' : 0.111335}
{'[2, 0, 0, 2, 5, 5, 1, 1, 29, 0, 4, 8, 1, 1, 0, 0, 0, 0]' : 0.110392}
{'[2, 0, 0, 2, 5, 5, 1, 1, 29, 0, 4, 8, 1, 1, 0, 0, 0, 0]' : 0.11044}
{'[2, 0, 0, 2, 5, 5, 1, 1, 29, 0, 4, 8, 1, 1, 0, 0, 0, 0]' : 0.10995}
{'[2, 0, 0, 2, 5, 5, 1, 1, 29, 0, 4, 8, 1, 1, 0, 0, 0, 0]' : 0.11033}
{'[2, 0, 0, 2, 5, 5, 1, 1, 29, 0, 4, 8, 1, 1, 0, 0, 0, 0]' : 0.110036}
{'[2, 0, 0, 2, 5, 5, 1, 1, 29, 0, 4, 8, 1, 1, 0, 0, 0, 0]' : 0.110017}
{'[2, 0, 0, 2, 5, 5, 1, 1, 29, 0, 4, 8, 1, 1, 0, 0, 0, 0]' : 0.110012}
{'[2, 0, 0, 2, 5, 5, 1, 1, 29, 0, 4, 8, 1, 1, 0, 0, 0, 0]' : 0.110325}
{'[2, 0, 0, 2, 5, 5, 1, 1, 29, 0, 4, 8, 1, 1, 0, 0, 0, 0]' : 0.110896}
{'[2, 0, 0, 2, 5, 5, 1, 1, 29, 0, 4, 8, 1, 1, 0, 0, 0, 0]' : 0.110019}
{'[2, 0, 0, 2, 5, 5, 1, 1, 29, 0, 4, 8, 1, 1, 0, 0, 0, 0]' : 0.110203}
{'[2, 0, 0, 2, 5, 5, 1, 1, 29, 0, 4, 8, 1, 1, 0, 0, 0, 0]' : 0.110373}
{'[2, 0, 0, 2, 5, 5, 1, 1, 29, 0, 4, 8, 1, 1, 0, 0, 0, 0]' : 0.110295}
{'[2, 0, 0, 2, 5, 5, 1, 1, 29, 0, 4, 8, 1, 1, 0, 0, 0, 0]' : 0.109998}

out:
 ["{'[2, 0, 0, 2, 5, 5, 1, 1, 29, 0, 4, 8, 1, 1, 0, 0, 0, 0]' : 0.125942}", "{'[2, 0, 0, 2, 5, 5, 1, 1, 29, 0, 4, 8, 1, 1, 0, 0, 0, 0]' : 0.125975}", "{'[2, 0, 0, 2, 5, 5, 1, 1, 29, 0, 4, 8, 1, 1, 0, 0, 0, 0]' : 0.125784}", "{'[2, 0, 0, 2, 5, 5, 1, 1, 29, 0, 4, 8, 1, 1, 0, 0, 0, 0]' : 0.11527}", "{'[2, 0, 0, 2, 5, 5, 1, 1, 29, 0, 4, 8, 1, 1, 0, 0, 0, 0]' : 0.110061}", "{'[2, 0, 0, 2, 5, 5, 1, 1, 29, 0, 4, 8, 1, 1, 0, 0, 0, 0]' : 0.110449}", "{'[2, 0, 0, 2, 5, 5, 1, 1, 29, 0, 4, 8, 1, 1, 0, 0, 0, 0]' : 0.110929}", "{'[2, 0, 0, 2, 5, 5, 1, 1, 29, 0, 4, 8, 1, 1, 0, 0, 0, 0]' : 0.110143}", "{'[2, 0, 0, 2, 5, 5, 1, 1, 29, 0, 4, 8, 1, 1, 0, 0, 0, 0]' : 0.110059}", "{'[2, 0, 0, 2, 5, 5, 1, 1, 29, 0, 4, 8, 1, 1, 0, 0, 0, 0]' : 0.110089}", "{'[2, 0, 0, 2, 5, 5, 1, 1, 29, 0, 4, 8, 1, 1, 0, 0, 0, 0]' : 0.110324}", "{'[2, 0, 0, 2, 5, 5, 1, 1, 29, 0, 4, 8, 1, 1, 0, 0, 0, 0]' : 0.110008}", "{'[2, 0, 0, 2, 5, 5, 1, 1, 29, 0, 4, 8, 1, 1, 0, 0, 0, 0]' : 0.112666}", "{'[2, 0, 0, 2, 5, 5, 1, 1, 29, 0, 4, 8, 1, 1, 0, 0, 0, 0]' : 0.113057}", "{'[2, 0, 0, 2, 5, 5, 1, 1, 29, 0, 4, 8, 1, 1, 0, 0, 0, 0]' : 0.113527}", "{'[2, 0, 0, 2, 5, 5, 1, 1, 29, 0, 4, 8, 1, 1, 0, 0, 0, 0]' : 0.111335}", "{'[2, 0, 0, 2, 5, 5, 1, 1, 29, 0, 4, 8, 1, 1, 0, 0, 0, 0]' : 0.110392}", "{'[2, 0, 0, 2, 5, 5, 1, 1, 29, 0, 4, 8, 1, 1, 0, 0, 0, 0]' : 0.11044}", "{'[2, 0, 0, 2, 5, 5, 1, 1, 29, 0, 4, 8, 1, 1, 0, 0, 0, 0]' : 0.10995}", "{'[2, 0, 0, 2, 5, 5, 1, 1, 29, 0, 4, 8, 1, 1, 0, 0, 0, 0]' : 0.11033}", "{'[2, 0, 0, 2, 5, 5, 1, 1, 29, 0, 4, 8, 1, 1, 0, 0, 0, 0]' : 0.110036}", "{'[2, 0, 0, 2, 5, 5, 1, 1, 29, 0, 4, 8, 1, 1, 0, 0, 0, 0]' : 0.110017}", "{'[2, 0, 0, 2, 5, 5, 1, 1, 29, 0, 4, 8, 1, 1, 0, 0, 0, 0]' : 0.110012}", "{'[2, 0, 0, 2, 5, 5, 1, 1, 29, 0, 4, 8, 1, 1, 0, 0, 0, 0]' : 0.110325}", "{'[2, 0, 0, 2, 5, 5, 1, 1, 29, 0, 4, 8, 1, 1, 0, 0, 0, 0]' : 0.110896}", "{'[2, 0, 0, 2, 5, 5, 1, 1, 29, 0, 4, 8, 1, 1, 0, 0, 0, 0]' : 0.110019}", "{'[2, 0, 0, 2, 5, 5, 1, 1, 29, 0, 4, 8, 1, 1, 0, 0, 0, 0]' : 0.110203}", "{'[2, 0, 0, 2, 5, 5, 1, 1, 29, 0, 4, 8, 1, 1, 0, 0, 0, 0]' : 0.110373}", "{'[2, 0, 0, 2, 5, 5, 1, 1, 29, 0, 4, 8, 1, 1, 0, 0, 0, 0]' : 0.110295}", "{'[2, 0, 0, 2, 5, 5, 1, 1, 29, 0, 4, 8, 1, 1, 0, 0, 0, 0]' : 0.109998}"]
returning from 'run': {'[2, 0, 0, 2, 5, 5, 1, 1, 29, 0, 4, 8, 1, 1, 0, 0, 0, 0]': ([0.125942, 0.125975, 0.125784, 0.11527, 0.110061, 0.110449, 0.110929, 0.110143, 0.110059, 0.110089, 0.110324, 0.110008, 0.112666, 0.113057, 0.113527, 0.111335, 0.110392, 0.11044, 0.10995, 0.11033, 0.110036, 0.110017, 0.110012, 0.110325, 0.110896, 0.110019, 0.110203, 0.110373, 0.110295, 0.109998], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 0, 0, 2, 5, 5, 1, 1, 29, 0, 4, 8, 1, 1, 0, 0, 0, 0]': ([0.125942, 0.125975, 0.125784, 0.11527, 0.110061, 0.110449, 0.110929, 0.110143, 0.110059, 0.110089, 0.110324, 0.110008, 0.112666, 0.113057, 0.113527, 0.111335, 0.110392, 0.11044, 0.10995, 0.11033, 0.110036, 0.110017, 0.110012, 0.110325, 0.110896, 0.110019, 0.110203, 0.110373, 0.110295, 0.109998], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		1145
        Multiplications: 	544
        Divisions: 		0
        Logical: 		0
        Reads: 			2263
        Writes: 		394
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest9.exe __orio_perftest9.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest9.exe  
Program Test Output: 
{'[0, 6, 1, 0, 0, 5, 1, 0, 5, 22, 0, 23, 1, 0, 1, 1, 1, 1]' : 0.106276}
{'[0, 6, 1, 0, 0, 5, 1, 0, 5, 22, 0, 23, 1, 0, 1, 1, 1, 1]' : 0.106066}
{'[0, 6, 1, 0, 0, 5, 1, 0, 5, 22, 0, 23, 1, 0, 1, 1, 1, 1]' : 0.103366}
{'[0, 6, 1, 0, 0, 5, 1, 0, 5, 22, 0, 23, 1, 0, 1, 1, 1, 1]' : 0.103326}
{'[0, 6, 1, 0, 0, 5, 1, 0, 5, 22, 0, 23, 1, 0, 1, 1, 1, 1]' : 0.103096}
{'[0, 6, 1, 0, 0, 5, 1, 0, 5, 22, 0, 23, 1, 0, 1, 1, 1, 1]' : 0.105748}
{'[0, 6, 1, 0, 0, 5, 1, 0, 5, 22, 0, 23, 1, 0, 1, 1, 1, 1]' : 0.105902}
{'[0, 6, 1, 0, 0, 5, 1, 0, 5, 22, 0, 23, 1, 0, 1, 1, 1, 1]' : 0.103117}
{'[0, 6, 1, 0, 0, 5, 1, 0, 5, 22, 0, 23, 1, 0, 1, 1, 1, 1]' : 0.10308}
{'[0, 6, 1, 0, 0, 5, 1, 0, 5, 22, 0, 23, 1, 0, 1, 1, 1, 1]' : 0.102745}
{'[0, 6, 1, 0, 0, 5, 1, 0, 5, 22, 0, 23, 1, 0, 1, 1, 1, 1]' : 0.105421}
{'[0, 6, 1, 0, 0, 5, 1, 0, 5, 22, 0, 23, 1, 0, 1, 1, 1, 1]' : 0.10609}
{'[0, 6, 1, 0, 0, 5, 1, 0, 5, 22, 0, 23, 1, 0, 1, 1, 1, 1]' : 0.10554}
{'[0, 6, 1, 0, 0, 5, 1, 0, 5, 22, 0, 23, 1, 0, 1, 1, 1, 1]' : 0.103304}
{'[0, 6, 1, 0, 0, 5, 1, 0, 5, 22, 0, 23, 1, 0, 1, 1, 1, 1]' : 0.103681}
{'[0, 6, 1, 0, 0, 5, 1, 0, 5, 22, 0, 23, 1, 0, 1, 1, 1, 1]' : 0.106156}
{'[0, 6, 1, 0, 0, 5, 1, 0, 5, 22, 0, 23, 1, 0, 1, 1, 1, 1]' : 0.106082}
{'[0, 6, 1, 0, 0, 5, 1, 0, 5, 22, 0, 23, 1, 0, 1, 1, 1, 1]' : 0.105926}
{'[0, 6, 1, 0, 0, 5, 1, 0, 5, 22, 0, 23, 1, 0, 1, 1, 1, 1]' : 0.106041}
{'[0, 6, 1, 0, 0, 5, 1, 0, 5, 22, 0, 23, 1, 0, 1, 1, 1, 1]' : 0.106099}
{'[0, 6, 1, 0, 0, 5, 1, 0, 5, 22, 0, 23, 1, 0, 1, 1, 1, 1]' : 0.105989}
{'[0, 6, 1, 0, 0, 5, 1, 0, 5, 22, 0, 23, 1, 0, 1, 1, 1, 1]' : 0.106175}
{'[0, 6, 1, 0, 0, 5, 1, 0, 5, 22, 0, 23, 1, 0, 1, 1, 1, 1]' : 0.105479}
{'[0, 6, 1, 0, 0, 5, 1, 0, 5, 22, 0, 23, 1, 0, 1, 1, 1, 1]' : 0.103329}
{'[0, 6, 1, 0, 0, 5, 1, 0, 5, 22, 0, 23, 1, 0, 1, 1, 1, 1]' : 0.105731}
{'[0, 6, 1, 0, 0, 5, 1, 0, 5, 22, 0, 23, 1, 0, 1, 1, 1, 1]' : 0.106013}
{'[0, 6, 1, 0, 0, 5, 1, 0, 5, 22, 0, 23, 1, 0, 1, 1, 1, 1]' : 0.106022}
{'[0, 6, 1, 0, 0, 5, 1, 0, 5, 22, 0, 23, 1, 0, 1, 1, 1, 1]' : 0.106117}
{'[0, 6, 1, 0, 0, 5, 1, 0, 5, 22, 0, 23, 1, 0, 1, 1, 1, 1]' : 0.106015}
{'[0, 6, 1, 0, 0, 5, 1, 0, 5, 22, 0, 23, 1, 0, 1, 1, 1, 1]' : 0.106129}

out:
 ["{'[0, 6, 1, 0, 0, 5, 1, 0, 5, 22, 0, 23, 1, 0, 1, 1, 1, 1]' : 0.106276}", "{'[0, 6, 1, 0, 0, 5, 1, 0, 5, 22, 0, 23, 1, 0, 1, 1, 1, 1]' : 0.106066}", "{'[0, 6, 1, 0, 0, 5, 1, 0, 5, 22, 0, 23, 1, 0, 1, 1, 1, 1]' : 0.103366}", "{'[0, 6, 1, 0, 0, 5, 1, 0, 5, 22, 0, 23, 1, 0, 1, 1, 1, 1]' : 0.103326}", "{'[0, 6, 1, 0, 0, 5, 1, 0, 5, 22, 0, 23, 1, 0, 1, 1, 1, 1]' : 0.103096}", "{'[0, 6, 1, 0, 0, 5, 1, 0, 5, 22, 0, 23, 1, 0, 1, 1, 1, 1]' : 0.105748}", "{'[0, 6, 1, 0, 0, 5, 1, 0, 5, 22, 0, 23, 1, 0, 1, 1, 1, 1]' : 0.105902}", "{'[0, 6, 1, 0, 0, 5, 1, 0, 5, 22, 0, 23, 1, 0, 1, 1, 1, 1]' : 0.103117}", "{'[0, 6, 1, 0, 0, 5, 1, 0, 5, 22, 0, 23, 1, 0, 1, 1, 1, 1]' : 0.10308}", "{'[0, 6, 1, 0, 0, 5, 1, 0, 5, 22, 0, 23, 1, 0, 1, 1, 1, 1]' : 0.102745}", "{'[0, 6, 1, 0, 0, 5, 1, 0, 5, 22, 0, 23, 1, 0, 1, 1, 1, 1]' : 0.105421}", "{'[0, 6, 1, 0, 0, 5, 1, 0, 5, 22, 0, 23, 1, 0, 1, 1, 1, 1]' : 0.10609}", "{'[0, 6, 1, 0, 0, 5, 1, 0, 5, 22, 0, 23, 1, 0, 1, 1, 1, 1]' : 0.10554}", "{'[0, 6, 1, 0, 0, 5, 1, 0, 5, 22, 0, 23, 1, 0, 1, 1, 1, 1]' : 0.103304}", "{'[0, 6, 1, 0, 0, 5, 1, 0, 5, 22, 0, 23, 1, 0, 1, 1, 1, 1]' : 0.103681}", "{'[0, 6, 1, 0, 0, 5, 1, 0, 5, 22, 0, 23, 1, 0, 1, 1, 1, 1]' : 0.106156}", "{'[0, 6, 1, 0, 0, 5, 1, 0, 5, 22, 0, 23, 1, 0, 1, 1, 1, 1]' : 0.106082}", "{'[0, 6, 1, 0, 0, 5, 1, 0, 5, 22, 0, 23, 1, 0, 1, 1, 1, 1]' : 0.105926}", "{'[0, 6, 1, 0, 0, 5, 1, 0, 5, 22, 0, 23, 1, 0, 1, 1, 1, 1]' : 0.106041}", "{'[0, 6, 1, 0, 0, 5, 1, 0, 5, 22, 0, 23, 1, 0, 1, 1, 1, 1]' : 0.106099}", "{'[0, 6, 1, 0, 0, 5, 1, 0, 5, 22, 0, 23, 1, 0, 1, 1, 1, 1]' : 0.105989}", "{'[0, 6, 1, 0, 0, 5, 1, 0, 5, 22, 0, 23, 1, 0, 1, 1, 1, 1]' : 0.106175}", "{'[0, 6, 1, 0, 0, 5, 1, 0, 5, 22, 0, 23, 1, 0, 1, 1, 1, 1]' : 0.105479}", "{'[0, 6, 1, 0, 0, 5, 1, 0, 5, 22, 0, 23, 1, 0, 1, 1, 1, 1]' : 0.103329}", "{'[0, 6, 1, 0, 0, 5, 1, 0, 5, 22, 0, 23, 1, 0, 1, 1, 1, 1]' : 0.105731}", "{'[0, 6, 1, 0, 0, 5, 1, 0, 5, 22, 0, 23, 1, 0, 1, 1, 1, 1]' : 0.106013}", "{'[0, 6, 1, 0, 0, 5, 1, 0, 5, 22, 0, 23, 1, 0, 1, 1, 1, 1]' : 0.106022}", "{'[0, 6, 1, 0, 0, 5, 1, 0, 5, 22, 0, 23, 1, 0, 1, 1, 1, 1]' : 0.106117}", "{'[0, 6, 1, 0, 0, 5, 1, 0, 5, 22, 0, 23, 1, 0, 1, 1, 1, 1]' : 0.106015}", "{'[0, 6, 1, 0, 0, 5, 1, 0, 5, 22, 0, 23, 1, 0, 1, 1, 1, 1]' : 0.106129}"]
returning from 'run': {'[0, 6, 1, 0, 0, 5, 1, 0, 5, 22, 0, 23, 1, 0, 1, 1, 1, 1]': ([0.106276, 0.106066, 0.103366, 0.103326, 0.103096, 0.105748, 0.105902, 0.103117, 0.10308, 0.102745, 0.105421, 0.10609, 0.10554, 0.103304, 0.103681, 0.106156, 0.106082, 0.105926, 0.106041, 0.106099, 0.105989, 0.106175, 0.105479, 0.103329, 0.105731, 0.106013, 0.106022, 0.106117, 0.106015, 0.106129], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 1, 0, 0, 5, 1, 0, 5, 22, 0, 23, 1, 0, 1, 1, 1, 1]': ([0.106276, 0.106066, 0.103366, 0.103326, 0.103096, 0.105748, 0.105902, 0.103117, 0.10308, 0.102745, 0.105421, 0.10609, 0.10554, 0.103304, 0.103681, 0.106156, 0.106082, 0.105926, 0.106041, 0.106099, 0.105989, 0.106175, 0.105479, 0.103329, 0.105731, 0.106013, 0.106022, 0.106117, 0.106015, 0.106129], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	111
        Max loop nest depth: 	4
        Additions: 		2541
        Multiplications: 	550
        Divisions: 		0
        Logical: 		0
        Reads: 			4503
        Writes: 		651
        Comparisons:		111
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest10.exe __orio_perftest10.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest10.exe  
Program Test Output: 
{'[6, 0, 5, 0, 6, 0, 0, 1, 2, 21, 0, 2, 2, 0, 0, 0, 1, 1]' : 0.145047}
{'[6, 0, 5, 0, 6, 0, 0, 1, 2, 21, 0, 2, 2, 0, 0, 0, 1, 1]' : 0.144213}
{'[6, 0, 5, 0, 6, 0, 0, 1, 2, 21, 0, 2, 2, 0, 0, 0, 1, 1]' : 0.144283}
{'[6, 0, 5, 0, 6, 0, 0, 1, 2, 21, 0, 2, 2, 0, 0, 0, 1, 1]' : 0.145499}
{'[6, 0, 5, 0, 6, 0, 0, 1, 2, 21, 0, 2, 2, 0, 0, 0, 1, 1]' : 0.147362}
{'[6, 0, 5, 0, 6, 0, 0, 1, 2, 21, 0, 2, 2, 0, 0, 0, 1, 1]' : 0.147425}
{'[6, 0, 5, 0, 6, 0, 0, 1, 2, 21, 0, 2, 2, 0, 0, 0, 1, 1]' : 0.147172}
{'[6, 0, 5, 0, 6, 0, 0, 1, 2, 21, 0, 2, 2, 0, 0, 0, 1, 1]' : 0.147366}
{'[6, 0, 5, 0, 6, 0, 0, 1, 2, 21, 0, 2, 2, 0, 0, 0, 1, 1]' : 0.146921}
{'[6, 0, 5, 0, 6, 0, 0, 1, 2, 21, 0, 2, 2, 0, 0, 0, 1, 1]' : 0.147102}
{'[6, 0, 5, 0, 6, 0, 0, 1, 2, 21, 0, 2, 2, 0, 0, 0, 1, 1]' : 0.146312}
{'[6, 0, 5, 0, 6, 0, 0, 1, 2, 21, 0, 2, 2, 0, 0, 0, 1, 1]' : 0.146898}
{'[6, 0, 5, 0, 6, 0, 0, 1, 2, 21, 0, 2, 2, 0, 0, 0, 1, 1]' : 0.147215}
{'[6, 0, 5, 0, 6, 0, 0, 1, 2, 21, 0, 2, 2, 0, 0, 0, 1, 1]' : 0.147446}
{'[6, 0, 5, 0, 6, 0, 0, 1, 2, 21, 0, 2, 2, 0, 0, 0, 1, 1]' : 0.147078}
{'[6, 0, 5, 0, 6, 0, 0, 1, 2, 21, 0, 2, 2, 0, 0, 0, 1, 1]' : 0.146897}
{'[6, 0, 5, 0, 6, 0, 0, 1, 2, 21, 0, 2, 2, 0, 0, 0, 1, 1]' : 0.145281}
{'[6, 0, 5, 0, 6, 0, 0, 1, 2, 21, 0, 2, 2, 0, 0, 0, 1, 1]' : 0.143486}
{'[6, 0, 5, 0, 6, 0, 0, 1, 2, 21, 0, 2, 2, 0, 0, 0, 1, 1]' : 0.143991}
{'[6, 0, 5, 0, 6, 0, 0, 1, 2, 21, 0, 2, 2, 0, 0, 0, 1, 1]' : 0.144166}
{'[6, 0, 5, 0, 6, 0, 0, 1, 2, 21, 0, 2, 2, 0, 0, 0, 1, 1]' : 0.145201}
{'[6, 0, 5, 0, 6, 0, 0, 1, 2, 21, 0, 2, 2, 0, 0, 0, 1, 1]' : 0.145152}
{'[6, 0, 5, 0, 6, 0, 0, 1, 2, 21, 0, 2, 2, 0, 0, 0, 1, 1]' : 0.144137}
{'[6, 0, 5, 0, 6, 0, 0, 1, 2, 21, 0, 2, 2, 0, 0, 0, 1, 1]' : 0.144178}
{'[6, 0, 5, 0, 6, 0, 0, 1, 2, 21, 0, 2, 2, 0, 0, 0, 1, 1]' : 0.147252}
{'[6, 0, 5, 0, 6, 0, 0, 1, 2, 21, 0, 2, 2, 0, 0, 0, 1, 1]' : 0.147277}
{'[6, 0, 5, 0, 6, 0, 0, 1, 2, 21, 0, 2, 2, 0, 0, 0, 1, 1]' : 0.147632}
{'[6, 0, 5, 0, 6, 0, 0, 1, 2, 21, 0, 2, 2, 0, 0, 0, 1, 1]' : 0.147286}
{'[6, 0, 5, 0, 6, 0, 0, 1, 2, 21, 0, 2, 2, 0, 0, 0, 1, 1]' : 0.14759}
{'[6, 0, 5, 0, 6, 0, 0, 1, 2, 21, 0, 2, 2, 0, 0, 0, 1, 1]' : 0.147162}

out:
 ["{'[6, 0, 5, 0, 6, 0, 0, 1, 2, 21, 0, 2, 2, 0, 0, 0, 1, 1]' : 0.145047}", "{'[6, 0, 5, 0, 6, 0, 0, 1, 2, 21, 0, 2, 2, 0, 0, 0, 1, 1]' : 0.144213}", "{'[6, 0, 5, 0, 6, 0, 0, 1, 2, 21, 0, 2, 2, 0, 0, 0, 1, 1]' : 0.144283}", "{'[6, 0, 5, 0, 6, 0, 0, 1, 2, 21, 0, 2, 2, 0, 0, 0, 1, 1]' : 0.145499}", "{'[6, 0, 5, 0, 6, 0, 0, 1, 2, 21, 0, 2, 2, 0, 0, 0, 1, 1]' : 0.147362}", "{'[6, 0, 5, 0, 6, 0, 0, 1, 2, 21, 0, 2, 2, 0, 0, 0, 1, 1]' : 0.147425}", "{'[6, 0, 5, 0, 6, 0, 0, 1, 2, 21, 0, 2, 2, 0, 0, 0, 1, 1]' : 0.147172}", "{'[6, 0, 5, 0, 6, 0, 0, 1, 2, 21, 0, 2, 2, 0, 0, 0, 1, 1]' : 0.147366}", "{'[6, 0, 5, 0, 6, 0, 0, 1, 2, 21, 0, 2, 2, 0, 0, 0, 1, 1]' : 0.146921}", "{'[6, 0, 5, 0, 6, 0, 0, 1, 2, 21, 0, 2, 2, 0, 0, 0, 1, 1]' : 0.147102}", "{'[6, 0, 5, 0, 6, 0, 0, 1, 2, 21, 0, 2, 2, 0, 0, 0, 1, 1]' : 0.146312}", "{'[6, 0, 5, 0, 6, 0, 0, 1, 2, 21, 0, 2, 2, 0, 0, 0, 1, 1]' : 0.146898}", "{'[6, 0, 5, 0, 6, 0, 0, 1, 2, 21, 0, 2, 2, 0, 0, 0, 1, 1]' : 0.147215}", "{'[6, 0, 5, 0, 6, 0, 0, 1, 2, 21, 0, 2, 2, 0, 0, 0, 1, 1]' : 0.147446}", "{'[6, 0, 5, 0, 6, 0, 0, 1, 2, 21, 0, 2, 2, 0, 0, 0, 1, 1]' : 0.147078}", "{'[6, 0, 5, 0, 6, 0, 0, 1, 2, 21, 0, 2, 2, 0, 0, 0, 1, 1]' : 0.146897}", "{'[6, 0, 5, 0, 6, 0, 0, 1, 2, 21, 0, 2, 2, 0, 0, 0, 1, 1]' : 0.145281}", "{'[6, 0, 5, 0, 6, 0, 0, 1, 2, 21, 0, 2, 2, 0, 0, 0, 1, 1]' : 0.143486}", "{'[6, 0, 5, 0, 6, 0, 0, 1, 2, 21, 0, 2, 2, 0, 0, 0, 1, 1]' : 0.143991}", "{'[6, 0, 5, 0, 6, 0, 0, 1, 2, 21, 0, 2, 2, 0, 0, 0, 1, 1]' : 0.144166}", "{'[6, 0, 5, 0, 6, 0, 0, 1, 2, 21, 0, 2, 2, 0, 0, 0, 1, 1]' : 0.145201}", "{'[6, 0, 5, 0, 6, 0, 0, 1, 2, 21, 0, 2, 2, 0, 0, 0, 1, 1]' : 0.145152}", "{'[6, 0, 5, 0, 6, 0, 0, 1, 2, 21, 0, 2, 2, 0, 0, 0, 1, 1]' : 0.144137}", "{'[6, 0, 5, 0, 6, 0, 0, 1, 2, 21, 0, 2, 2, 0, 0, 0, 1, 1]' : 0.144178}", "{'[6, 0, 5, 0, 6, 0, 0, 1, 2, 21, 0, 2, 2, 0, 0, 0, 1, 1]' : 0.147252}", "{'[6, 0, 5, 0, 6, 0, 0, 1, 2, 21, 0, 2, 2, 0, 0, 0, 1, 1]' : 0.147277}", "{'[6, 0, 5, 0, 6, 0, 0, 1, 2, 21, 0, 2, 2, 0, 0, 0, 1, 1]' : 0.147632}", "{'[6, 0, 5, 0, 6, 0, 0, 1, 2, 21, 0, 2, 2, 0, 0, 0, 1, 1]' : 0.147286}", "{'[6, 0, 5, 0, 6, 0, 0, 1, 2, 21, 0, 2, 2, 0, 0, 0, 1, 1]' : 0.14759}", "{'[6, 0, 5, 0, 6, 0, 0, 1, 2, 21, 0, 2, 2, 0, 0, 0, 1, 1]' : 0.147162}"]
returning from 'run': {'[6, 0, 5, 0, 6, 0, 0, 1, 2, 21, 0, 2, 2, 0, 0, 0, 1, 1]': ([0.145047, 0.144213, 0.144283, 0.145499, 0.147362, 0.147425, 0.147172, 0.147366, 0.146921, 0.147102, 0.146312, 0.146898, 0.147215, 0.147446, 0.147078, 0.146897, 0.145281, 0.143486, 0.143991, 0.144166, 0.145201, 0.145152, 0.144137, 0.144178, 0.147252, 0.147277, 0.147632, 0.147286, 0.14759, 0.147162], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 5, 0, 6, 0, 0, 1, 2, 21, 0, 2, 2, 0, 0, 0, 1, 1]': ([0.145047, 0.144213, 0.144283, 0.145499, 0.147362, 0.147425, 0.147172, 0.147366, 0.146921, 0.147102, 0.146312, 0.146898, 0.147215, 0.147446, 0.147078, 0.146897, 0.145281, 0.143486, 0.143991, 0.144166, 0.145201, 0.145152, 0.144137, 0.144178, 0.147252, 0.147277, 0.147632, 0.147286, 0.14759, 0.147162], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		362
        Multiplications: 	130
        Divisions: 		0
        Logical: 		0
        Reads: 			915
        Writes: 		215
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest11.exe __orio_perftest11.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest11.exe  
Program Test Output: 
{'[1, 6, 6, 0, 5, 0, 0, 0, 2, 0, 5, 24, 0, 0, 2, 1, 1, 0]' : 0.173945}
{'[1, 6, 6, 0, 5, 0, 0, 0, 2, 0, 5, 24, 0, 0, 2, 1, 1, 0]' : 0.173825}
{'[1, 6, 6, 0, 5, 0, 0, 0, 2, 0, 5, 24, 0, 0, 2, 1, 1, 0]' : 0.173198}
{'[1, 6, 6, 0, 5, 0, 0, 0, 2, 0, 5, 24, 0, 0, 2, 1, 1, 0]' : 0.156555}
{'[1, 6, 6, 0, 5, 0, 0, 0, 2, 0, 5, 24, 0, 0, 2, 1, 1, 0]' : 0.156012}
{'[1, 6, 6, 0, 5, 0, 0, 0, 2, 0, 5, 24, 0, 0, 2, 1, 1, 0]' : 0.156145}
{'[1, 6, 6, 0, 5, 0, 0, 0, 2, 0, 5, 24, 0, 0, 2, 1, 1, 0]' : 0.152613}
{'[1, 6, 6, 0, 5, 0, 0, 0, 2, 0, 5, 24, 0, 0, 2, 1, 1, 0]' : 0.156067}
{'[1, 6, 6, 0, 5, 0, 0, 0, 2, 0, 5, 24, 0, 0, 2, 1, 1, 0]' : 0.156076}
{'[1, 6, 6, 0, 5, 0, 0, 0, 2, 0, 5, 24, 0, 0, 2, 1, 1, 0]' : 0.156088}
{'[1, 6, 6, 0, 5, 0, 0, 0, 2, 0, 5, 24, 0, 0, 2, 1, 1, 0]' : 0.156012}
{'[1, 6, 6, 0, 5, 0, 0, 0, 2, 0, 5, 24, 0, 0, 2, 1, 1, 0]' : 0.156067}
{'[1, 6, 6, 0, 5, 0, 0, 0, 2, 0, 5, 24, 0, 0, 2, 1, 1, 0]' : 0.156294}
{'[1, 6, 6, 0, 5, 0, 0, 0, 2, 0, 5, 24, 0, 0, 2, 1, 1, 0]' : 0.156158}
{'[1, 6, 6, 0, 5, 0, 0, 0, 2, 0, 5, 24, 0, 0, 2, 1, 1, 0]' : 0.156176}
{'[1, 6, 6, 0, 5, 0, 0, 0, 2, 0, 5, 24, 0, 0, 2, 1, 1, 0]' : 0.154446}
{'[1, 6, 6, 0, 5, 0, 0, 0, 2, 0, 5, 24, 0, 0, 2, 1, 1, 0]' : 0.156167}
{'[1, 6, 6, 0, 5, 0, 0, 0, 2, 0, 5, 24, 0, 0, 2, 1, 1, 0]' : 0.156191}
{'[1, 6, 6, 0, 5, 0, 0, 0, 2, 0, 5, 24, 0, 0, 2, 1, 1, 0]' : 0.156205}
{'[1, 6, 6, 0, 5, 0, 0, 0, 2, 0, 5, 24, 0, 0, 2, 1, 1, 0]' : 0.155164}
{'[1, 6, 6, 0, 5, 0, 0, 0, 2, 0, 5, 24, 0, 0, 2, 1, 1, 0]' : 0.150349}
{'[1, 6, 6, 0, 5, 0, 0, 0, 2, 0, 5, 24, 0, 0, 2, 1, 1, 0]' : 0.150559}
{'[1, 6, 6, 0, 5, 0, 0, 0, 2, 0, 5, 24, 0, 0, 2, 1, 1, 0]' : 0.155649}
{'[1, 6, 6, 0, 5, 0, 0, 0, 2, 0, 5, 24, 0, 0, 2, 1, 1, 0]' : 0.155841}
{'[1, 6, 6, 0, 5, 0, 0, 0, 2, 0, 5, 24, 0, 0, 2, 1, 1, 0]' : 0.150384}
{'[1, 6, 6, 0, 5, 0, 0, 0, 2, 0, 5, 24, 0, 0, 2, 1, 1, 0]' : 0.152144}
{'[1, 6, 6, 0, 5, 0, 0, 0, 2, 0, 5, 24, 0, 0, 2, 1, 1, 0]' : 0.150364}
{'[1, 6, 6, 0, 5, 0, 0, 0, 2, 0, 5, 24, 0, 0, 2, 1, 1, 0]' : 0.150489}
{'[1, 6, 6, 0, 5, 0, 0, 0, 2, 0, 5, 24, 0, 0, 2, 1, 1, 0]' : 0.148163}
{'[1, 6, 6, 0, 5, 0, 0, 0, 2, 0, 5, 24, 0, 0, 2, 1, 1, 0]' : 0.150418}

out:
 ["{'[1, 6, 6, 0, 5, 0, 0, 0, 2, 0, 5, 24, 0, 0, 2, 1, 1, 0]' : 0.173945}", "{'[1, 6, 6, 0, 5, 0, 0, 0, 2, 0, 5, 24, 0, 0, 2, 1, 1, 0]' : 0.173825}", "{'[1, 6, 6, 0, 5, 0, 0, 0, 2, 0, 5, 24, 0, 0, 2, 1, 1, 0]' : 0.173198}", "{'[1, 6, 6, 0, 5, 0, 0, 0, 2, 0, 5, 24, 0, 0, 2, 1, 1, 0]' : 0.156555}", "{'[1, 6, 6, 0, 5, 0, 0, 0, 2, 0, 5, 24, 0, 0, 2, 1, 1, 0]' : 0.156012}", "{'[1, 6, 6, 0, 5, 0, 0, 0, 2, 0, 5, 24, 0, 0, 2, 1, 1, 0]' : 0.156145}", "{'[1, 6, 6, 0, 5, 0, 0, 0, 2, 0, 5, 24, 0, 0, 2, 1, 1, 0]' : 0.152613}", "{'[1, 6, 6, 0, 5, 0, 0, 0, 2, 0, 5, 24, 0, 0, 2, 1, 1, 0]' : 0.156067}", "{'[1, 6, 6, 0, 5, 0, 0, 0, 2, 0, 5, 24, 0, 0, 2, 1, 1, 0]' : 0.156076}", "{'[1, 6, 6, 0, 5, 0, 0, 0, 2, 0, 5, 24, 0, 0, 2, 1, 1, 0]' : 0.156088}", "{'[1, 6, 6, 0, 5, 0, 0, 0, 2, 0, 5, 24, 0, 0, 2, 1, 1, 0]' : 0.156012}", "{'[1, 6, 6, 0, 5, 0, 0, 0, 2, 0, 5, 24, 0, 0, 2, 1, 1, 0]' : 0.156067}", "{'[1, 6, 6, 0, 5, 0, 0, 0, 2, 0, 5, 24, 0, 0, 2, 1, 1, 0]' : 0.156294}", "{'[1, 6, 6, 0, 5, 0, 0, 0, 2, 0, 5, 24, 0, 0, 2, 1, 1, 0]' : 0.156158}", "{'[1, 6, 6, 0, 5, 0, 0, 0, 2, 0, 5, 24, 0, 0, 2, 1, 1, 0]' : 0.156176}", "{'[1, 6, 6, 0, 5, 0, 0, 0, 2, 0, 5, 24, 0, 0, 2, 1, 1, 0]' : 0.154446}", "{'[1, 6, 6, 0, 5, 0, 0, 0, 2, 0, 5, 24, 0, 0, 2, 1, 1, 0]' : 0.156167}", "{'[1, 6, 6, 0, 5, 0, 0, 0, 2, 0, 5, 24, 0, 0, 2, 1, 1, 0]' : 0.156191}", "{'[1, 6, 6, 0, 5, 0, 0, 0, 2, 0, 5, 24, 0, 0, 2, 1, 1, 0]' : 0.156205}", "{'[1, 6, 6, 0, 5, 0, 0, 0, 2, 0, 5, 24, 0, 0, 2, 1, 1, 0]' : 0.155164}", "{'[1, 6, 6, 0, 5, 0, 0, 0, 2, 0, 5, 24, 0, 0, 2, 1, 1, 0]' : 0.150349}", "{'[1, 6, 6, 0, 5, 0, 0, 0, 2, 0, 5, 24, 0, 0, 2, 1, 1, 0]' : 0.150559}", "{'[1, 6, 6, 0, 5, 0, 0, 0, 2, 0, 5, 24, 0, 0, 2, 1, 1, 0]' : 0.155649}", "{'[1, 6, 6, 0, 5, 0, 0, 0, 2, 0, 5, 24, 0, 0, 2, 1, 1, 0]' : 0.155841}", "{'[1, 6, 6, 0, 5, 0, 0, 0, 2, 0, 5, 24, 0, 0, 2, 1, 1, 0]' : 0.150384}", "{'[1, 6, 6, 0, 5, 0, 0, 0, 2, 0, 5, 24, 0, 0, 2, 1, 1, 0]' : 0.152144}", "{'[1, 6, 6, 0, 5, 0, 0, 0, 2, 0, 5, 24, 0, 0, 2, 1, 1, 0]' : 0.150364}", "{'[1, 6, 6, 0, 5, 0, 0, 0, 2, 0, 5, 24, 0, 0, 2, 1, 1, 0]' : 0.150489}", "{'[1, 6, 6, 0, 5, 0, 0, 0, 2, 0, 5, 24, 0, 0, 2, 1, 1, 0]' : 0.148163}", "{'[1, 6, 6, 0, 5, 0, 0, 0, 2, 0, 5, 24, 0, 0, 2, 1, 1, 0]' : 0.150418}"]
returning from 'run': {'[1, 6, 6, 0, 5, 0, 0, 0, 2, 0, 5, 24, 0, 0, 2, 1, 1, 0]': ([0.173945, 0.173825, 0.173198, 0.156555, 0.156012, 0.156145, 0.152613, 0.156067, 0.156076, 0.156088, 0.156012, 0.156067, 0.156294, 0.156158, 0.156176, 0.154446, 0.156167, 0.156191, 0.156205, 0.155164, 0.150349, 0.150559, 0.155649, 0.155841, 0.150384, 0.152144, 0.150364, 0.150489, 0.148163, 0.150418], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 6, 6, 0, 5, 0, 0, 0, 2, 0, 5, 24, 0, 0, 2, 1, 1, 0]': ([0.173945, 0.173825, 0.173198, 0.156555, 0.156012, 0.156145, 0.152613, 0.156067, 0.156076, 0.156088, 0.156012, 0.156067, 0.156294, 0.156158, 0.156176, 0.154446, 0.156167, 0.156191, 0.156205, 0.155164, 0.150349, 0.150559, 0.155649, 0.155841, 0.150384, 0.152144, 0.150364, 0.150489, 0.148163, 0.150418], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		421
        Multiplications: 	140
        Divisions: 		0
        Logical: 		0
        Reads: 			885
        Writes: 		129
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest12.exe __orio_perftest12.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest12.exe  
Program Test Output: 
{'[6, 4, 2, 0, 0, 0, 1, 0, 28, 0, 26, 8, 0, 0, 2, 0, 1, 0]' : 0.25783}
{'[6, 4, 2, 0, 0, 0, 1, 0, 28, 0, 26, 8, 0, 0, 2, 0, 1, 0]' : 0.25381}
{'[6, 4, 2, 0, 0, 0, 1, 0, 28, 0, 26, 8, 0, 0, 2, 0, 1, 0]' : 0.23067}
{'[6, 4, 2, 0, 0, 0, 1, 0, 28, 0, 26, 8, 0, 0, 2, 0, 1, 0]' : 0.227324}
{'[6, 4, 2, 0, 0, 0, 1, 0, 28, 0, 26, 8, 0, 0, 2, 0, 1, 0]' : 0.222329}
{'[6, 4, 2, 0, 0, 0, 1, 0, 28, 0, 26, 8, 0, 0, 2, 0, 1, 0]' : 0.22801}
{'[6, 4, 2, 0, 0, 0, 1, 0, 28, 0, 26, 8, 0, 0, 2, 0, 1, 0]' : 0.23055}
{'[6, 4, 2, 0, 0, 0, 1, 0, 28, 0, 26, 8, 0, 0, 2, 0, 1, 0]' : 0.230634}
{'[6, 4, 2, 0, 0, 0, 1, 0, 28, 0, 26, 8, 0, 0, 2, 0, 1, 0]' : 0.23007}
{'[6, 4, 2, 0, 0, 0, 1, 0, 28, 0, 26, 8, 0, 0, 2, 0, 1, 0]' : 0.225398}
{'[6, 4, 2, 0, 0, 0, 1, 0, 28, 0, 26, 8, 0, 0, 2, 0, 1, 0]' : 0.230605}
{'[6, 4, 2, 0, 0, 0, 1, 0, 28, 0, 26, 8, 0, 0, 2, 0, 1, 0]' : 0.230939}
{'[6, 4, 2, 0, 0, 0, 1, 0, 28, 0, 26, 8, 0, 0, 2, 0, 1, 0]' : 0.226794}
{'[6, 4, 2, 0, 0, 0, 1, 0, 28, 0, 26, 8, 0, 0, 2, 0, 1, 0]' : 0.222376}
{'[6, 4, 2, 0, 0, 0, 1, 0, 28, 0, 26, 8, 0, 0, 2, 0, 1, 0]' : 0.222412}
{'[6, 4, 2, 0, 0, 0, 1, 0, 28, 0, 26, 8, 0, 0, 2, 0, 1, 0]' : 0.222403}
{'[6, 4, 2, 0, 0, 0, 1, 0, 28, 0, 26, 8, 0, 0, 2, 0, 1, 0]' : 0.226466}
{'[6, 4, 2, 0, 0, 0, 1, 0, 28, 0, 26, 8, 0, 0, 2, 0, 1, 0]' : 0.215992}
{'[6, 4, 2, 0, 0, 0, 1, 0, 28, 0, 26, 8, 0, 0, 2, 0, 1, 0]' : 0.221809}
{'[6, 4, 2, 0, 0, 0, 1, 0, 28, 0, 26, 8, 0, 0, 2, 0, 1, 0]' : 0.230627}
{'[6, 4, 2, 0, 0, 0, 1, 0, 28, 0, 26, 8, 0, 0, 2, 0, 1, 0]' : 0.229086}
{'[6, 4, 2, 0, 0, 0, 1, 0, 28, 0, 26, 8, 0, 0, 2, 0, 1, 0]' : 0.218327}
{'[6, 4, 2, 0, 0, 0, 1, 0, 28, 0, 26, 8, 0, 0, 2, 0, 1, 0]' : 0.216151}
{'[6, 4, 2, 0, 0, 0, 1, 0, 28, 0, 26, 8, 0, 0, 2, 0, 1, 0]' : 0.230217}
{'[6, 4, 2, 0, 0, 0, 1, 0, 28, 0, 26, 8, 0, 0, 2, 0, 1, 0]' : 0.230598}
{'[6, 4, 2, 0, 0, 0, 1, 0, 28, 0, 26, 8, 0, 0, 2, 0, 1, 0]' : 0.224254}
{'[6, 4, 2, 0, 0, 0, 1, 0, 28, 0, 26, 8, 0, 0, 2, 0, 1, 0]' : 0.220521}
{'[6, 4, 2, 0, 0, 0, 1, 0, 28, 0, 26, 8, 0, 0, 2, 0, 1, 0]' : 0.219896}
{'[6, 4, 2, 0, 0, 0, 1, 0, 28, 0, 26, 8, 0, 0, 2, 0, 1, 0]' : 0.222369}
{'[6, 4, 2, 0, 0, 0, 1, 0, 28, 0, 26, 8, 0, 0, 2, 0, 1, 0]' : 0.224789}

out:
 ["{'[6, 4, 2, 0, 0, 0, 1, 0, 28, 0, 26, 8, 0, 0, 2, 0, 1, 0]' : 0.25783}", "{'[6, 4, 2, 0, 0, 0, 1, 0, 28, 0, 26, 8, 0, 0, 2, 0, 1, 0]' : 0.25381}", "{'[6, 4, 2, 0, 0, 0, 1, 0, 28, 0, 26, 8, 0, 0, 2, 0, 1, 0]' : 0.23067}", "{'[6, 4, 2, 0, 0, 0, 1, 0, 28, 0, 26, 8, 0, 0, 2, 0, 1, 0]' : 0.227324}", "{'[6, 4, 2, 0, 0, 0, 1, 0, 28, 0, 26, 8, 0, 0, 2, 0, 1, 0]' : 0.222329}", "{'[6, 4, 2, 0, 0, 0, 1, 0, 28, 0, 26, 8, 0, 0, 2, 0, 1, 0]' : 0.22801}", "{'[6, 4, 2, 0, 0, 0, 1, 0, 28, 0, 26, 8, 0, 0, 2, 0, 1, 0]' : 0.23055}", "{'[6, 4, 2, 0, 0, 0, 1, 0, 28, 0, 26, 8, 0, 0, 2, 0, 1, 0]' : 0.230634}", "{'[6, 4, 2, 0, 0, 0, 1, 0, 28, 0, 26, 8, 0, 0, 2, 0, 1, 0]' : 0.23007}", "{'[6, 4, 2, 0, 0, 0, 1, 0, 28, 0, 26, 8, 0, 0, 2, 0, 1, 0]' : 0.225398}", "{'[6, 4, 2, 0, 0, 0, 1, 0, 28, 0, 26, 8, 0, 0, 2, 0, 1, 0]' : 0.230605}", "{'[6, 4, 2, 0, 0, 0, 1, 0, 28, 0, 26, 8, 0, 0, 2, 0, 1, 0]' : 0.230939}", "{'[6, 4, 2, 0, 0, 0, 1, 0, 28, 0, 26, 8, 0, 0, 2, 0, 1, 0]' : 0.226794}", "{'[6, 4, 2, 0, 0, 0, 1, 0, 28, 0, 26, 8, 0, 0, 2, 0, 1, 0]' : 0.222376}", "{'[6, 4, 2, 0, 0, 0, 1, 0, 28, 0, 26, 8, 0, 0, 2, 0, 1, 0]' : 0.222412}", "{'[6, 4, 2, 0, 0, 0, 1, 0, 28, 0, 26, 8, 0, 0, 2, 0, 1, 0]' : 0.222403}", "{'[6, 4, 2, 0, 0, 0, 1, 0, 28, 0, 26, 8, 0, 0, 2, 0, 1, 0]' : 0.226466}", "{'[6, 4, 2, 0, 0, 0, 1, 0, 28, 0, 26, 8, 0, 0, 2, 0, 1, 0]' : 0.215992}", "{'[6, 4, 2, 0, 0, 0, 1, 0, 28, 0, 26, 8, 0, 0, 2, 0, 1, 0]' : 0.221809}", "{'[6, 4, 2, 0, 0, 0, 1, 0, 28, 0, 26, 8, 0, 0, 2, 0, 1, 0]' : 0.230627}", "{'[6, 4, 2, 0, 0, 0, 1, 0, 28, 0, 26, 8, 0, 0, 2, 0, 1, 0]' : 0.229086}", "{'[6, 4, 2, 0, 0, 0, 1, 0, 28, 0, 26, 8, 0, 0, 2, 0, 1, 0]' : 0.218327}", "{'[6, 4, 2, 0, 0, 0, 1, 0, 28, 0, 26, 8, 0, 0, 2, 0, 1, 0]' : 0.216151}", "{'[6, 4, 2, 0, 0, 0, 1, 0, 28, 0, 26, 8, 0, 0, 2, 0, 1, 0]' : 0.230217}", "{'[6, 4, 2, 0, 0, 0, 1, 0, 28, 0, 26, 8, 0, 0, 2, 0, 1, 0]' : 0.230598}", "{'[6, 4, 2, 0, 0, 0, 1, 0, 28, 0, 26, 8, 0, 0, 2, 0, 1, 0]' : 0.224254}", "{'[6, 4, 2, 0, 0, 0, 1, 0, 28, 0, 26, 8, 0, 0, 2, 0, 1, 0]' : 0.220521}", "{'[6, 4, 2, 0, 0, 0, 1, 0, 28, 0, 26, 8, 0, 0, 2, 0, 1, 0]' : 0.219896}", "{'[6, 4, 2, 0, 0, 0, 1, 0, 28, 0, 26, 8, 0, 0, 2, 0, 1, 0]' : 0.222369}", "{'[6, 4, 2, 0, 0, 0, 1, 0, 28, 0, 26, 8, 0, 0, 2, 0, 1, 0]' : 0.224789}"]
returning from 'run': {'[6, 4, 2, 0, 0, 0, 1, 0, 28, 0, 26, 8, 0, 0, 2, 0, 1, 0]': ([0.25783, 0.25381, 0.23067, 0.227324, 0.222329, 0.22801, 0.23055, 0.230634, 0.23007, 0.225398, 0.230605, 0.230939, 0.226794, 0.222376, 0.222412, 0.222403, 0.226466, 0.215992, 0.221809, 0.230627, 0.229086, 0.218327, 0.216151, 0.230217, 0.230598, 0.224254, 0.220521, 0.219896, 0.222369, 0.224789], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 4, 2, 0, 0, 0, 1, 0, 28, 0, 26, 8, 0, 0, 2, 0, 1, 0]': ([0.25783, 0.25381, 0.23067, 0.227324, 0.222329, 0.22801, 0.23055, 0.230634, 0.23007, 0.225398, 0.230605, 0.230939, 0.226794, 0.222376, 0.222412, 0.222403, 0.226466, 0.215992, 0.221809, 0.230627, 0.229086, 0.218327, 0.216151, 0.230217, 0.230598, 0.224254, 0.220521, 0.219896, 0.222369, 0.224789], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	49
        Max loop nest depth: 	6
        Additions: 		1924
        Multiplications: 	868
        Divisions: 		0
        Logical: 		0
        Reads: 			3921
        Writes: 		712
        Comparisons:		49
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest13.exe __orio_perftest13.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest13.exe  
Program Test Output: 
{'[3, 1, 0, 4, 6, 6, 1, 0, 1, 29, 0, 11, 0, 0, 0, 1, 0, 0]' : 0.176797}
{'[3, 1, 0, 4, 6, 6, 1, 0, 1, 29, 0, 11, 0, 0, 0, 1, 0, 0]' : 0.176186}
{'[3, 1, 0, 4, 6, 6, 1, 0, 1, 29, 0, 11, 0, 0, 0, 1, 0, 0]' : 0.176}
{'[3, 1, 0, 4, 6, 6, 1, 0, 1, 29, 0, 11, 0, 0, 0, 1, 0, 0]' : 0.176215}
{'[3, 1, 0, 4, 6, 6, 1, 0, 1, 29, 0, 11, 0, 0, 0, 1, 0, 0]' : 0.176492}
{'[3, 1, 0, 4, 6, 6, 1, 0, 1, 29, 0, 11, 0, 0, 0, 1, 0, 0]' : 0.175742}
{'[3, 1, 0, 4, 6, 6, 1, 0, 1, 29, 0, 11, 0, 0, 0, 1, 0, 0]' : 0.177151}
{'[3, 1, 0, 4, 6, 6, 1, 0, 1, 29, 0, 11, 0, 0, 0, 1, 0, 0]' : 0.173734}
{'[3, 1, 0, 4, 6, 6, 1, 0, 1, 29, 0, 11, 0, 0, 0, 1, 0, 0]' : 0.171949}
{'[3, 1, 0, 4, 6, 6, 1, 0, 1, 29, 0, 11, 0, 0, 0, 1, 0, 0]' : 0.18001}
{'[3, 1, 0, 4, 6, 6, 1, 0, 1, 29, 0, 11, 0, 0, 0, 1, 0, 0]' : 0.176628}
{'[3, 1, 0, 4, 6, 6, 1, 0, 1, 29, 0, 11, 0, 0, 0, 1, 0, 0]' : 0.177013}
{'[3, 1, 0, 4, 6, 6, 1, 0, 1, 29, 0, 11, 0, 0, 0, 1, 0, 0]' : 0.180673}
{'[3, 1, 0, 4, 6, 6, 1, 0, 1, 29, 0, 11, 0, 0, 0, 1, 0, 0]' : 0.180694}
{'[3, 1, 0, 4, 6, 6, 1, 0, 1, 29, 0, 11, 0, 0, 0, 1, 0, 0]' : 0.179211}
{'[3, 1, 0, 4, 6, 6, 1, 0, 1, 29, 0, 11, 0, 0, 0, 1, 0, 0]' : 0.178458}
{'[3, 1, 0, 4, 6, 6, 1, 0, 1, 29, 0, 11, 0, 0, 0, 1, 0, 0]' : 0.176362}
{'[3, 1, 0, 4, 6, 6, 1, 0, 1, 29, 0, 11, 0, 0, 0, 1, 0, 0]' : 0.178894}
{'[3, 1, 0, 4, 6, 6, 1, 0, 1, 29, 0, 11, 0, 0, 0, 1, 0, 0]' : 0.179299}
{'[3, 1, 0, 4, 6, 6, 1, 0, 1, 29, 0, 11, 0, 0, 0, 1, 0, 0]' : 0.176041}
{'[3, 1, 0, 4, 6, 6, 1, 0, 1, 29, 0, 11, 0, 0, 0, 1, 0, 0]' : 0.179714}
{'[3, 1, 0, 4, 6, 6, 1, 0, 1, 29, 0, 11, 0, 0, 0, 1, 0, 0]' : 0.180037}
{'[3, 1, 0, 4, 6, 6, 1, 0, 1, 29, 0, 11, 0, 0, 0, 1, 0, 0]' : 0.180931}
{'[3, 1, 0, 4, 6, 6, 1, 0, 1, 29, 0, 11, 0, 0, 0, 1, 0, 0]' : 0.176762}
{'[3, 1, 0, 4, 6, 6, 1, 0, 1, 29, 0, 11, 0, 0, 0, 1, 0, 0]' : 0.176442}
{'[3, 1, 0, 4, 6, 6, 1, 0, 1, 29, 0, 11, 0, 0, 0, 1, 0, 0]' : 0.176895}
{'[3, 1, 0, 4, 6, 6, 1, 0, 1, 29, 0, 11, 0, 0, 0, 1, 0, 0]' : 0.176313}
{'[3, 1, 0, 4, 6, 6, 1, 0, 1, 29, 0, 11, 0, 0, 0, 1, 0, 0]' : 0.176096}
{'[3, 1, 0, 4, 6, 6, 1, 0, 1, 29, 0, 11, 0, 0, 0, 1, 0, 0]' : 0.175023}
{'[3, 1, 0, 4, 6, 6, 1, 0, 1, 29, 0, 11, 0, 0, 0, 1, 0, 0]' : 0.176016}

out:
 ["{'[3, 1, 0, 4, 6, 6, 1, 0, 1, 29, 0, 11, 0, 0, 0, 1, 0, 0]' : 0.176797}", "{'[3, 1, 0, 4, 6, 6, 1, 0, 1, 29, 0, 11, 0, 0, 0, 1, 0, 0]' : 0.176186}", "{'[3, 1, 0, 4, 6, 6, 1, 0, 1, 29, 0, 11, 0, 0, 0, 1, 0, 0]' : 0.176}", "{'[3, 1, 0, 4, 6, 6, 1, 0, 1, 29, 0, 11, 0, 0, 0, 1, 0, 0]' : 0.176215}", "{'[3, 1, 0, 4, 6, 6, 1, 0, 1, 29, 0, 11, 0, 0, 0, 1, 0, 0]' : 0.176492}", "{'[3, 1, 0, 4, 6, 6, 1, 0, 1, 29, 0, 11, 0, 0, 0, 1, 0, 0]' : 0.175742}", "{'[3, 1, 0, 4, 6, 6, 1, 0, 1, 29, 0, 11, 0, 0, 0, 1, 0, 0]' : 0.177151}", "{'[3, 1, 0, 4, 6, 6, 1, 0, 1, 29, 0, 11, 0, 0, 0, 1, 0, 0]' : 0.173734}", "{'[3, 1, 0, 4, 6, 6, 1, 0, 1, 29, 0, 11, 0, 0, 0, 1, 0, 0]' : 0.171949}", "{'[3, 1, 0, 4, 6, 6, 1, 0, 1, 29, 0, 11, 0, 0, 0, 1, 0, 0]' : 0.18001}", "{'[3, 1, 0, 4, 6, 6, 1, 0, 1, 29, 0, 11, 0, 0, 0, 1, 0, 0]' : 0.176628}", "{'[3, 1, 0, 4, 6, 6, 1, 0, 1, 29, 0, 11, 0, 0, 0, 1, 0, 0]' : 0.177013}", "{'[3, 1, 0, 4, 6, 6, 1, 0, 1, 29, 0, 11, 0, 0, 0, 1, 0, 0]' : 0.180673}", "{'[3, 1, 0, 4, 6, 6, 1, 0, 1, 29, 0, 11, 0, 0, 0, 1, 0, 0]' : 0.180694}", "{'[3, 1, 0, 4, 6, 6, 1, 0, 1, 29, 0, 11, 0, 0, 0, 1, 0, 0]' : 0.179211}", "{'[3, 1, 0, 4, 6, 6, 1, 0, 1, 29, 0, 11, 0, 0, 0, 1, 0, 0]' : 0.178458}", "{'[3, 1, 0, 4, 6, 6, 1, 0, 1, 29, 0, 11, 0, 0, 0, 1, 0, 0]' : 0.176362}", "{'[3, 1, 0, 4, 6, 6, 1, 0, 1, 29, 0, 11, 0, 0, 0, 1, 0, 0]' : 0.178894}", "{'[3, 1, 0, 4, 6, 6, 1, 0, 1, 29, 0, 11, 0, 0, 0, 1, 0, 0]' : 0.179299}", "{'[3, 1, 0, 4, 6, 6, 1, 0, 1, 29, 0, 11, 0, 0, 0, 1, 0, 0]' : 0.176041}", "{'[3, 1, 0, 4, 6, 6, 1, 0, 1, 29, 0, 11, 0, 0, 0, 1, 0, 0]' : 0.179714}", "{'[3, 1, 0, 4, 6, 6, 1, 0, 1, 29, 0, 11, 0, 0, 0, 1, 0, 0]' : 0.180037}", "{'[3, 1, 0, 4, 6, 6, 1, 0, 1, 29, 0, 11, 0, 0, 0, 1, 0, 0]' : 0.180931}", "{'[3, 1, 0, 4, 6, 6, 1, 0, 1, 29, 0, 11, 0, 0, 0, 1, 0, 0]' : 0.176762}", "{'[3, 1, 0, 4, 6, 6, 1, 0, 1, 29, 0, 11, 0, 0, 0, 1, 0, 0]' : 0.176442}", "{'[3, 1, 0, 4, 6, 6, 1, 0, 1, 29, 0, 11, 0, 0, 0, 1, 0, 0]' : 0.176895}", "{'[3, 1, 0, 4, 6, 6, 1, 0, 1, 29, 0, 11, 0, 0, 0, 1, 0, 0]' : 0.176313}", "{'[3, 1, 0, 4, 6, 6, 1, 0, 1, 29, 0, 11, 0, 0, 0, 1, 0, 0]' : 0.176096}", "{'[3, 1, 0, 4, 6, 6, 1, 0, 1, 29, 0, 11, 0, 0, 0, 1, 0, 0]' : 0.175023}", "{'[3, 1, 0, 4, 6, 6, 1, 0, 1, 29, 0, 11, 0, 0, 0, 1, 0, 0]' : 0.176016}"]
returning from 'run': {'[3, 1, 0, 4, 6, 6, 1, 0, 1, 29, 0, 11, 0, 0, 0, 1, 0, 0]': ([0.176797, 0.176186, 0.176, 0.176215, 0.176492, 0.175742, 0.177151, 0.173734, 0.171949, 0.18001, 0.176628, 0.177013, 0.180673, 0.180694, 0.179211, 0.178458, 0.176362, 0.178894, 0.179299, 0.176041, 0.179714, 0.180037, 0.180931, 0.176762, 0.176442, 0.176895, 0.176313, 0.176096, 0.175023, 0.176016], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 1, 0, 4, 6, 6, 1, 0, 1, 29, 0, 11, 0, 0, 0, 1, 0, 0]': ([0.176797, 0.176186, 0.176, 0.176215, 0.176492, 0.175742, 0.177151, 0.173734, 0.171949, 0.18001, 0.176628, 0.177013, 0.180673, 0.180694, 0.179211, 0.178458, 0.176362, 0.178894, 0.179299, 0.176041, 0.179714, 0.180037, 0.180931, 0.176762, 0.176442, 0.176895, 0.176313, 0.176096, 0.175023, 0.176016], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	4
        Additions: 		234
        Multiplications: 	78
        Divisions: 		0
        Logical: 		0
        Reads: 			489
        Writes: 		93
        Comparisons:		10
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest14.exe __orio_perftest14.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest14.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest14.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest14.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest14.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	5
        Additions: 		713
        Multiplications: 	162
        Divisions: 		0
        Logical: 		0
        Reads: 			1167
        Writes: 		159
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest15.exe __orio_perftest15.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest15.exe  
Program Test Output: 
{'[6, 2, 0, 0, 4, 3, 0, 1, 25, 0, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.11459}
{'[6, 2, 0, 0, 4, 3, 0, 1, 25, 0, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.108752}
{'[6, 2, 0, 0, 4, 3, 0, 1, 25, 0, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.106756}
{'[6, 2, 0, 0, 4, 3, 0, 1, 25, 0, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.108841}
{'[6, 2, 0, 0, 4, 3, 0, 1, 25, 0, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.10926}
{'[6, 2, 0, 0, 4, 3, 0, 1, 25, 0, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.109278}
{'[6, 2, 0, 0, 4, 3, 0, 1, 25, 0, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.109233}
{'[6, 2, 0, 0, 4, 3, 0, 1, 25, 0, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.110194}
{'[6, 2, 0, 0, 4, 3, 0, 1, 25, 0, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.112066}
{'[6, 2, 0, 0, 4, 3, 0, 1, 25, 0, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.111911}
{'[6, 2, 0, 0, 4, 3, 0, 1, 25, 0, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.111759}
{'[6, 2, 0, 0, 4, 3, 0, 1, 25, 0, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.111979}
{'[6, 2, 0, 0, 4, 3, 0, 1, 25, 0, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.112054}
{'[6, 2, 0, 0, 4, 3, 0, 1, 25, 0, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.111717}
{'[6, 2, 0, 0, 4, 3, 0, 1, 25, 0, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.111774}
{'[6, 2, 0, 0, 4, 3, 0, 1, 25, 0, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.111713}
{'[6, 2, 0, 0, 4, 3, 0, 1, 25, 0, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.111828}
{'[6, 2, 0, 0, 4, 3, 0, 1, 25, 0, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.111741}
{'[6, 2, 0, 0, 4, 3, 0, 1, 25, 0, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.111679}
{'[6, 2, 0, 0, 4, 3, 0, 1, 25, 0, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.111591}
{'[6, 2, 0, 0, 4, 3, 0, 1, 25, 0, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.111809}
{'[6, 2, 0, 0, 4, 3, 0, 1, 25, 0, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.112518}
{'[6, 2, 0, 0, 4, 3, 0, 1, 25, 0, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.112572}
{'[6, 2, 0, 0, 4, 3, 0, 1, 25, 0, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.112611}
{'[6, 2, 0, 0, 4, 3, 0, 1, 25, 0, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.11266}
{'[6, 2, 0, 0, 4, 3, 0, 1, 25, 0, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.113091}
{'[6, 2, 0, 0, 4, 3, 0, 1, 25, 0, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.11223}
{'[6, 2, 0, 0, 4, 3, 0, 1, 25, 0, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.110483}
{'[6, 2, 0, 0, 4, 3, 0, 1, 25, 0, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.11008}
{'[6, 2, 0, 0, 4, 3, 0, 1, 25, 0, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.110092}

out:
 ["{'[6, 2, 0, 0, 4, 3, 0, 1, 25, 0, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.11459}", "{'[6, 2, 0, 0, 4, 3, 0, 1, 25, 0, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.108752}", "{'[6, 2, 0, 0, 4, 3, 0, 1, 25, 0, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.106756}", "{'[6, 2, 0, 0, 4, 3, 0, 1, 25, 0, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.108841}", "{'[6, 2, 0, 0, 4, 3, 0, 1, 25, 0, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.10926}", "{'[6, 2, 0, 0, 4, 3, 0, 1, 25, 0, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.109278}", "{'[6, 2, 0, 0, 4, 3, 0, 1, 25, 0, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.109233}", "{'[6, 2, 0, 0, 4, 3, 0, 1, 25, 0, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.110194}", "{'[6, 2, 0, 0, 4, 3, 0, 1, 25, 0, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.112066}", "{'[6, 2, 0, 0, 4, 3, 0, 1, 25, 0, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.111911}", "{'[6, 2, 0, 0, 4, 3, 0, 1, 25, 0, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.111759}", "{'[6, 2, 0, 0, 4, 3, 0, 1, 25, 0, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.111979}", "{'[6, 2, 0, 0, 4, 3, 0, 1, 25, 0, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.112054}", "{'[6, 2, 0, 0, 4, 3, 0, 1, 25, 0, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.111717}", "{'[6, 2, 0, 0, 4, 3, 0, 1, 25, 0, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.111774}", "{'[6, 2, 0, 0, 4, 3, 0, 1, 25, 0, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.111713}", "{'[6, 2, 0, 0, 4, 3, 0, 1, 25, 0, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.111828}", "{'[6, 2, 0, 0, 4, 3, 0, 1, 25, 0, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.111741}", "{'[6, 2, 0, 0, 4, 3, 0, 1, 25, 0, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.111679}", "{'[6, 2, 0, 0, 4, 3, 0, 1, 25, 0, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.111591}", "{'[6, 2, 0, 0, 4, 3, 0, 1, 25, 0, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.111809}", "{'[6, 2, 0, 0, 4, 3, 0, 1, 25, 0, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.112518}", "{'[6, 2, 0, 0, 4, 3, 0, 1, 25, 0, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.112572}", "{'[6, 2, 0, 0, 4, 3, 0, 1, 25, 0, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.112611}", "{'[6, 2, 0, 0, 4, 3, 0, 1, 25, 0, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.11266}", "{'[6, 2, 0, 0, 4, 3, 0, 1, 25, 0, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.113091}", "{'[6, 2, 0, 0, 4, 3, 0, 1, 25, 0, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.11223}", "{'[6, 2, 0, 0, 4, 3, 0, 1, 25, 0, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.110483}", "{'[6, 2, 0, 0, 4, 3, 0, 1, 25, 0, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.11008}", "{'[6, 2, 0, 0, 4, 3, 0, 1, 25, 0, 0, 1, 1, 0, 1, 0, 1, 1]' : 0.110092}"]
returning from 'run': {'[6, 2, 0, 0, 4, 3, 0, 1, 25, 0, 0, 1, 1, 0, 1, 0, 1, 1]': ([0.11459, 0.108752, 0.106756, 0.108841, 0.10926, 0.109278, 0.109233, 0.110194, 0.112066, 0.111911, 0.111759, 0.111979, 0.112054, 0.111717, 0.111774, 0.111713, 0.111828, 0.111741, 0.111679, 0.111591, 0.111809, 0.112518, 0.112572, 0.112611, 0.11266, 0.113091, 0.11223, 0.110483, 0.11008, 0.110092], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 2, 0, 0, 4, 3, 0, 1, 25, 0, 0, 1, 1, 0, 1, 0, 1, 1]': ([0.11459, 0.108752, 0.106756, 0.108841, 0.10926, 0.109278, 0.109233, 0.110194, 0.112066, 0.111911, 0.111759, 0.111979, 0.112054, 0.111717, 0.111774, 0.111713, 0.111828, 0.111741, 0.111679, 0.111591, 0.111809, 0.112518, 0.112572, 0.112611, 0.11266, 0.113091, 0.11223, 0.110483, 0.11008, 0.110092], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	5
        Additions: 		2834
        Multiplications: 	1392
        Divisions: 		0
        Logical: 		0
        Reads: 			5570
        Writes: 		945
        Comparisons:		24
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest16.exe __orio_perftest16.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest16.exe  
Program Test Output: 
{'[5, 5, 6, 0, 0, 5, 0, 0, 16, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.185556}
{'[5, 5, 6, 0, 0, 5, 0, 0, 16, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.187337}
{'[5, 5, 6, 0, 0, 5, 0, 0, 16, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.18508}
{'[5, 5, 6, 0, 0, 5, 0, 0, 16, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.18487}
{'[5, 5, 6, 0, 0, 5, 0, 0, 16, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.189542}
{'[5, 5, 6, 0, 0, 5, 0, 0, 16, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.186904}
{'[5, 5, 6, 0, 0, 5, 0, 0, 16, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.186}
{'[5, 5, 6, 0, 0, 5, 0, 0, 16, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.187863}
{'[5, 5, 6, 0, 0, 5, 0, 0, 16, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.185091}
{'[5, 5, 6, 0, 0, 5, 0, 0, 16, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.187855}
{'[5, 5, 6, 0, 0, 5, 0, 0, 16, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.185838}
{'[5, 5, 6, 0, 0, 5, 0, 0, 16, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.186234}
{'[5, 5, 6, 0, 0, 5, 0, 0, 16, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.18898}
{'[5, 5, 6, 0, 0, 5, 0, 0, 16, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.18563}
{'[5, 5, 6, 0, 0, 5, 0, 0, 16, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.186889}
{'[5, 5, 6, 0, 0, 5, 0, 0, 16, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.189001}
{'[5, 5, 6, 0, 0, 5, 0, 0, 16, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.185989}
{'[5, 5, 6, 0, 0, 5, 0, 0, 16, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.186706}
{'[5, 5, 6, 0, 0, 5, 0, 0, 16, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.185322}
{'[5, 5, 6, 0, 0, 5, 0, 0, 16, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.185206}
{'[5, 5, 6, 0, 0, 5, 0, 0, 16, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.189103}
{'[5, 5, 6, 0, 0, 5, 0, 0, 16, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.18693}
{'[5, 5, 6, 0, 0, 5, 0, 0, 16, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.186605}
{'[5, 5, 6, 0, 0, 5, 0, 0, 16, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.185966}
{'[5, 5, 6, 0, 0, 5, 0, 0, 16, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.185625}
{'[5, 5, 6, 0, 0, 5, 0, 0, 16, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.187517}
{'[5, 5, 6, 0, 0, 5, 0, 0, 16, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.185763}
{'[5, 5, 6, 0, 0, 5, 0, 0, 16, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.185818}
{'[5, 5, 6, 0, 0, 5, 0, 0, 16, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.189547}
{'[5, 5, 6, 0, 0, 5, 0, 0, 16, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.185576}

out:
 ["{'[5, 5, 6, 0, 0, 5, 0, 0, 16, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.185556}", "{'[5, 5, 6, 0, 0, 5, 0, 0, 16, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.187337}", "{'[5, 5, 6, 0, 0, 5, 0, 0, 16, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.18508}", "{'[5, 5, 6, 0, 0, 5, 0, 0, 16, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.18487}", "{'[5, 5, 6, 0, 0, 5, 0, 0, 16, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.189542}", "{'[5, 5, 6, 0, 0, 5, 0, 0, 16, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.186904}", "{'[5, 5, 6, 0, 0, 5, 0, 0, 16, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.186}", "{'[5, 5, 6, 0, 0, 5, 0, 0, 16, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.187863}", "{'[5, 5, 6, 0, 0, 5, 0, 0, 16, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.185091}", "{'[5, 5, 6, 0, 0, 5, 0, 0, 16, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.187855}", "{'[5, 5, 6, 0, 0, 5, 0, 0, 16, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.185838}", "{'[5, 5, 6, 0, 0, 5, 0, 0, 16, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.186234}", "{'[5, 5, 6, 0, 0, 5, 0, 0, 16, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.18898}", "{'[5, 5, 6, 0, 0, 5, 0, 0, 16, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.18563}", "{'[5, 5, 6, 0, 0, 5, 0, 0, 16, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.186889}", "{'[5, 5, 6, 0, 0, 5, 0, 0, 16, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.189001}", "{'[5, 5, 6, 0, 0, 5, 0, 0, 16, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.185989}", "{'[5, 5, 6, 0, 0, 5, 0, 0, 16, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.186706}", "{'[5, 5, 6, 0, 0, 5, 0, 0, 16, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.185322}", "{'[5, 5, 6, 0, 0, 5, 0, 0, 16, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.185206}", "{'[5, 5, 6, 0, 0, 5, 0, 0, 16, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.189103}", "{'[5, 5, 6, 0, 0, 5, 0, 0, 16, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.18693}", "{'[5, 5, 6, 0, 0, 5, 0, 0, 16, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.186605}", "{'[5, 5, 6, 0, 0, 5, 0, 0, 16, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.185966}", "{'[5, 5, 6, 0, 0, 5, 0, 0, 16, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.185625}", "{'[5, 5, 6, 0, 0, 5, 0, 0, 16, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.187517}", "{'[5, 5, 6, 0, 0, 5, 0, 0, 16, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.185763}", "{'[5, 5, 6, 0, 0, 5, 0, 0, 16, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.185818}", "{'[5, 5, 6, 0, 0, 5, 0, 0, 16, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.189547}", "{'[5, 5, 6, 0, 0, 5, 0, 0, 16, 24, 9, 0, 2, 0, 0, 1, 0, 1]' : 0.185576}"]
returning from 'run': {'[5, 5, 6, 0, 0, 5, 0, 0, 16, 24, 9, 0, 2, 0, 0, 1, 0, 1]': ([0.185556, 0.187337, 0.18508, 0.18487, 0.189542, 0.186904, 0.186, 0.187863, 0.185091, 0.187855, 0.185838, 0.186234, 0.18898, 0.18563, 0.186889, 0.189001, 0.185989, 0.186706, 0.185322, 0.185206, 0.189103, 0.18693, 0.186605, 0.185966, 0.185625, 0.187517, 0.185763, 0.185818, 0.189547, 0.185576], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 5, 6, 0, 0, 5, 0, 0, 16, 24, 9, 0, 2, 0, 0, 1, 0, 1]': ([0.185556, 0.187337, 0.18508, 0.18487, 0.189542, 0.186904, 0.186, 0.187863, 0.185091, 0.187855, 0.185838, 0.186234, 0.18898, 0.18563, 0.186889, 0.189001, 0.185989, 0.186706, 0.185322, 0.185206, 0.189103, 0.18693, 0.186605, 0.185966, 0.185625, 0.187517, 0.185763, 0.185818, 0.189547, 0.185576], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	131
        Max loop nest depth: 	5
        Additions: 		4973
        Multiplications: 	1080
        Divisions: 		0
        Logical: 		0
        Reads: 			7731
        Writes: 		890
        Comparisons:		131
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest17.exe __orio_perftest17.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest17.exe  
Program Test Output: 
{'[2, 4, 0, 1, 0, 1, 0, 1, 0, 26, 0, 6, 2, 0, 0, 0, 0, 0]' : 0.206889}
{'[2, 4, 0, 1, 0, 1, 0, 1, 0, 26, 0, 6, 2, 0, 0, 0, 0, 0]' : 0.202995}
{'[2, 4, 0, 1, 0, 1, 0, 1, 0, 26, 0, 6, 2, 0, 0, 0, 0, 0]' : 0.188975}
{'[2, 4, 0, 1, 0, 1, 0, 1, 0, 26, 0, 6, 2, 0, 0, 0, 0, 0]' : 0.188898}
{'[2, 4, 0, 1, 0, 1, 0, 1, 0, 26, 0, 6, 2, 0, 0, 0, 0, 0]' : 0.188172}
{'[2, 4, 0, 1, 0, 1, 0, 1, 0, 26, 0, 6, 2, 0, 0, 0, 0, 0]' : 0.189269}
{'[2, 4, 0, 1, 0, 1, 0, 1, 0, 26, 0, 6, 2, 0, 0, 0, 0, 0]' : 0.186132}
{'[2, 4, 0, 1, 0, 1, 0, 1, 0, 26, 0, 6, 2, 0, 0, 0, 0, 0]' : 0.185929}
{'[2, 4, 0, 1, 0, 1, 0, 1, 0, 26, 0, 6, 2, 0, 0, 0, 0, 0]' : 0.186263}
{'[2, 4, 0, 1, 0, 1, 0, 1, 0, 26, 0, 6, 2, 0, 0, 0, 0, 0]' : 0.184685}
{'[2, 4, 0, 1, 0, 1, 0, 1, 0, 26, 0, 6, 2, 0, 0, 0, 0, 0]' : 0.186195}
{'[2, 4, 0, 1, 0, 1, 0, 1, 0, 26, 0, 6, 2, 0, 0, 0, 0, 0]' : 0.189089}
{'[2, 4, 0, 1, 0, 1, 0, 1, 0, 26, 0, 6, 2, 0, 0, 0, 0, 0]' : 0.184432}
{'[2, 4, 0, 1, 0, 1, 0, 1, 0, 26, 0, 6, 2, 0, 0, 0, 0, 0]' : 0.186887}
{'[2, 4, 0, 1, 0, 1, 0, 1, 0, 26, 0, 6, 2, 0, 0, 0, 0, 0]' : 0.186838}
{'[2, 4, 0, 1, 0, 1, 0, 1, 0, 26, 0, 6, 2, 0, 0, 0, 0, 0]' : 0.185641}
{'[2, 4, 0, 1, 0, 1, 0, 1, 0, 26, 0, 6, 2, 0, 0, 0, 0, 0]' : 0.187741}
{'[2, 4, 0, 1, 0, 1, 0, 1, 0, 26, 0, 6, 2, 0, 0, 0, 0, 0]' : 0.187401}
{'[2, 4, 0, 1, 0, 1, 0, 1, 0, 26, 0, 6, 2, 0, 0, 0, 0, 0]' : 0.185298}
{'[2, 4, 0, 1, 0, 1, 0, 1, 0, 26, 0, 6, 2, 0, 0, 0, 0, 0]' : 0.188218}
{'[2, 4, 0, 1, 0, 1, 0, 1, 0, 26, 0, 6, 2, 0, 0, 0, 0, 0]' : 0.184419}
{'[2, 4, 0, 1, 0, 1, 0, 1, 0, 26, 0, 6, 2, 0, 0, 0, 0, 0]' : 0.186979}
{'[2, 4, 0, 1, 0, 1, 0, 1, 0, 26, 0, 6, 2, 0, 0, 0, 0, 0]' : 0.189289}
{'[2, 4, 0, 1, 0, 1, 0, 1, 0, 26, 0, 6, 2, 0, 0, 0, 0, 0]' : 0.189307}
{'[2, 4, 0, 1, 0, 1, 0, 1, 0, 26, 0, 6, 2, 0, 0, 0, 0, 0]' : 0.188792}
{'[2, 4, 0, 1, 0, 1, 0, 1, 0, 26, 0, 6, 2, 0, 0, 0, 0, 0]' : 0.184951}
{'[2, 4, 0, 1, 0, 1, 0, 1, 0, 26, 0, 6, 2, 0, 0, 0, 0, 0]' : 0.185917}
{'[2, 4, 0, 1, 0, 1, 0, 1, 0, 26, 0, 6, 2, 0, 0, 0, 0, 0]' : 0.186864}
{'[2, 4, 0, 1, 0, 1, 0, 1, 0, 26, 0, 6, 2, 0, 0, 0, 0, 0]' : 0.184245}
{'[2, 4, 0, 1, 0, 1, 0, 1, 0, 26, 0, 6, 2, 0, 0, 0, 0, 0]' : 0.187307}

out:
 ["{'[2, 4, 0, 1, 0, 1, 0, 1, 0, 26, 0, 6, 2, 0, 0, 0, 0, 0]' : 0.206889}", "{'[2, 4, 0, 1, 0, 1, 0, 1, 0, 26, 0, 6, 2, 0, 0, 0, 0, 0]' : 0.202995}", "{'[2, 4, 0, 1, 0, 1, 0, 1, 0, 26, 0, 6, 2, 0, 0, 0, 0, 0]' : 0.188975}", "{'[2, 4, 0, 1, 0, 1, 0, 1, 0, 26, 0, 6, 2, 0, 0, 0, 0, 0]' : 0.188898}", "{'[2, 4, 0, 1, 0, 1, 0, 1, 0, 26, 0, 6, 2, 0, 0, 0, 0, 0]' : 0.188172}", "{'[2, 4, 0, 1, 0, 1, 0, 1, 0, 26, 0, 6, 2, 0, 0, 0, 0, 0]' : 0.189269}", "{'[2, 4, 0, 1, 0, 1, 0, 1, 0, 26, 0, 6, 2, 0, 0, 0, 0, 0]' : 0.186132}", "{'[2, 4, 0, 1, 0, 1, 0, 1, 0, 26, 0, 6, 2, 0, 0, 0, 0, 0]' : 0.185929}", "{'[2, 4, 0, 1, 0, 1, 0, 1, 0, 26, 0, 6, 2, 0, 0, 0, 0, 0]' : 0.186263}", "{'[2, 4, 0, 1, 0, 1, 0, 1, 0, 26, 0, 6, 2, 0, 0, 0, 0, 0]' : 0.184685}", "{'[2, 4, 0, 1, 0, 1, 0, 1, 0, 26, 0, 6, 2, 0, 0, 0, 0, 0]' : 0.186195}", "{'[2, 4, 0, 1, 0, 1, 0, 1, 0, 26, 0, 6, 2, 0, 0, 0, 0, 0]' : 0.189089}", "{'[2, 4, 0, 1, 0, 1, 0, 1, 0, 26, 0, 6, 2, 0, 0, 0, 0, 0]' : 0.184432}", "{'[2, 4, 0, 1, 0, 1, 0, 1, 0, 26, 0, 6, 2, 0, 0, 0, 0, 0]' : 0.186887}", "{'[2, 4, 0, 1, 0, 1, 0, 1, 0, 26, 0, 6, 2, 0, 0, 0, 0, 0]' : 0.186838}", "{'[2, 4, 0, 1, 0, 1, 0, 1, 0, 26, 0, 6, 2, 0, 0, 0, 0, 0]' : 0.185641}", "{'[2, 4, 0, 1, 0, 1, 0, 1, 0, 26, 0, 6, 2, 0, 0, 0, 0, 0]' : 0.187741}", "{'[2, 4, 0, 1, 0, 1, 0, 1, 0, 26, 0, 6, 2, 0, 0, 0, 0, 0]' : 0.187401}", "{'[2, 4, 0, 1, 0, 1, 0, 1, 0, 26, 0, 6, 2, 0, 0, 0, 0, 0]' : 0.185298}", "{'[2, 4, 0, 1, 0, 1, 0, 1, 0, 26, 0, 6, 2, 0, 0, 0, 0, 0]' : 0.188218}", "{'[2, 4, 0, 1, 0, 1, 0, 1, 0, 26, 0, 6, 2, 0, 0, 0, 0, 0]' : 0.184419}", "{'[2, 4, 0, 1, 0, 1, 0, 1, 0, 26, 0, 6, 2, 0, 0, 0, 0, 0]' : 0.186979}", "{'[2, 4, 0, 1, 0, 1, 0, 1, 0, 26, 0, 6, 2, 0, 0, 0, 0, 0]' : 0.189289}", "{'[2, 4, 0, 1, 0, 1, 0, 1, 0, 26, 0, 6, 2, 0, 0, 0, 0, 0]' : 0.189307}", "{'[2, 4, 0, 1, 0, 1, 0, 1, 0, 26, 0, 6, 2, 0, 0, 0, 0, 0]' : 0.188792}", "{'[2, 4, 0, 1, 0, 1, 0, 1, 0, 26, 0, 6, 2, 0, 0, 0, 0, 0]' : 0.184951}", "{'[2, 4, 0, 1, 0, 1, 0, 1, 0, 26, 0, 6, 2, 0, 0, 0, 0, 0]' : 0.185917}", "{'[2, 4, 0, 1, 0, 1, 0, 1, 0, 26, 0, 6, 2, 0, 0, 0, 0, 0]' : 0.186864}", "{'[2, 4, 0, 1, 0, 1, 0, 1, 0, 26, 0, 6, 2, 0, 0, 0, 0, 0]' : 0.184245}", "{'[2, 4, 0, 1, 0, 1, 0, 1, 0, 26, 0, 6, 2, 0, 0, 0, 0, 0]' : 0.187307}"]
returning from 'run': {'[2, 4, 0, 1, 0, 1, 0, 1, 0, 26, 0, 6, 2, 0, 0, 0, 0, 0]': ([0.206889, 0.202995, 0.188975, 0.188898, 0.188172, 0.189269, 0.186132, 0.185929, 0.186263, 0.184685, 0.186195, 0.189089, 0.184432, 0.186887, 0.186838, 0.185641, 0.187741, 0.187401, 0.185298, 0.188218, 0.184419, 0.186979, 0.189289, 0.189307, 0.188792, 0.184951, 0.185917, 0.186864, 0.184245, 0.187307], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 4, 0, 1, 0, 1, 0, 1, 0, 26, 0, 6, 2, 0, 0, 0, 0, 0]': ([0.206889, 0.202995, 0.188975, 0.188898, 0.188172, 0.189269, 0.186132, 0.185929, 0.186263, 0.184685, 0.186195, 0.189089, 0.184432, 0.186887, 0.186838, 0.185641, 0.187741, 0.187401, 0.185298, 0.188218, 0.184419, 0.186979, 0.189289, 0.189307, 0.188792, 0.184951, 0.185917, 0.186864, 0.184245, 0.187307], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	54
        Max loop nest depth: 	6
        Additions: 		6965
        Multiplications: 	3360
        Divisions: 		0
        Logical: 		0
        Reads: 			13210
        Writes: 		2151
        Comparisons:		54
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest18.exe __orio_perftest18.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest18.exe  
Program Test Output: 
{'[4, 0, 3, 6, 5, 6, 1, 0, 16, 26, 0, 25, 2, 0, 0, 1, 1, 0]' : 0.202427}
{'[4, 0, 3, 6, 5, 6, 1, 0, 16, 26, 0, 25, 2, 0, 0, 1, 1, 0]' : 0.198084}
{'[4, 0, 3, 6, 5, 6, 1, 0, 16, 26, 0, 25, 2, 0, 0, 1, 1, 0]' : 0.184654}
{'[4, 0, 3, 6, 5, 6, 1, 0, 16, 26, 0, 25, 2, 0, 0, 1, 1, 0]' : 0.181722}
{'[4, 0, 3, 6, 5, 6, 1, 0, 16, 26, 0, 25, 2, 0, 0, 1, 1, 0]' : 0.181503}
{'[4, 0, 3, 6, 5, 6, 1, 0, 16, 26, 0, 25, 2, 0, 0, 1, 1, 0]' : 0.185352}
{'[4, 0, 3, 6, 5, 6, 1, 0, 16, 26, 0, 25, 2, 0, 0, 1, 1, 0]' : 0.185221}
{'[4, 0, 3, 6, 5, 6, 1, 0, 16, 26, 0, 25, 2, 0, 0, 1, 1, 0]' : 0.185986}
{'[4, 0, 3, 6, 5, 6, 1, 0, 16, 26, 0, 25, 2, 0, 0, 1, 1, 0]' : 0.182208}
{'[4, 0, 3, 6, 5, 6, 1, 0, 16, 26, 0, 25, 2, 0, 0, 1, 1, 0]' : 0.181122}
{'[4, 0, 3, 6, 5, 6, 1, 0, 16, 26, 0, 25, 2, 0, 0, 1, 1, 0]' : 0.184207}
{'[4, 0, 3, 6, 5, 6, 1, 0, 16, 26, 0, 25, 2, 0, 0, 1, 1, 0]' : 0.185714}
{'[4, 0, 3, 6, 5, 6, 1, 0, 16, 26, 0, 25, 2, 0, 0, 1, 1, 0]' : 0.185512}
{'[4, 0, 3, 6, 5, 6, 1, 0, 16, 26, 0, 25, 2, 0, 0, 1, 1, 0]' : 0.186196}
{'[4, 0, 3, 6, 5, 6, 1, 0, 16, 26, 0, 25, 2, 0, 0, 1, 1, 0]' : 0.182064}
{'[4, 0, 3, 6, 5, 6, 1, 0, 16, 26, 0, 25, 2, 0, 0, 1, 1, 0]' : 0.182578}
{'[4, 0, 3, 6, 5, 6, 1, 0, 16, 26, 0, 25, 2, 0, 0, 1, 1, 0]' : 0.185446}
{'[4, 0, 3, 6, 5, 6, 1, 0, 16, 26, 0, 25, 2, 0, 0, 1, 1, 0]' : 0.185728}
{'[4, 0, 3, 6, 5, 6, 1, 0, 16, 26, 0, 25, 2, 0, 0, 1, 1, 0]' : 0.186324}
{'[4, 0, 3, 6, 5, 6, 1, 0, 16, 26, 0, 25, 2, 0, 0, 1, 1, 0]' : 0.185388}
{'[4, 0, 3, 6, 5, 6, 1, 0, 16, 26, 0, 25, 2, 0, 0, 1, 1, 0]' : 0.182474}
{'[4, 0, 3, 6, 5, 6, 1, 0, 16, 26, 0, 25, 2, 0, 0, 1, 1, 0]' : 0.186045}
{'[4, 0, 3, 6, 5, 6, 1, 0, 16, 26, 0, 25, 2, 0, 0, 1, 1, 0]' : 0.185199}
{'[4, 0, 3, 6, 5, 6, 1, 0, 16, 26, 0, 25, 2, 0, 0, 1, 1, 0]' : 0.182366}
{'[4, 0, 3, 6, 5, 6, 1, 0, 16, 26, 0, 25, 2, 0, 0, 1, 1, 0]' : 0.185393}
{'[4, 0, 3, 6, 5, 6, 1, 0, 16, 26, 0, 25, 2, 0, 0, 1, 1, 0]' : 0.185346}
{'[4, 0, 3, 6, 5, 6, 1, 0, 16, 26, 0, 25, 2, 0, 0, 1, 1, 0]' : 0.185664}
{'[4, 0, 3, 6, 5, 6, 1, 0, 16, 26, 0, 25, 2, 0, 0, 1, 1, 0]' : 0.185391}
{'[4, 0, 3, 6, 5, 6, 1, 0, 16, 26, 0, 25, 2, 0, 0, 1, 1, 0]' : 0.185291}
{'[4, 0, 3, 6, 5, 6, 1, 0, 16, 26, 0, 25, 2, 0, 0, 1, 1, 0]' : 0.185838}

out:
 ["{'[4, 0, 3, 6, 5, 6, 1, 0, 16, 26, 0, 25, 2, 0, 0, 1, 1, 0]' : 0.202427}", "{'[4, 0, 3, 6, 5, 6, 1, 0, 16, 26, 0, 25, 2, 0, 0, 1, 1, 0]' : 0.198084}", "{'[4, 0, 3, 6, 5, 6, 1, 0, 16, 26, 0, 25, 2, 0, 0, 1, 1, 0]' : 0.184654}", "{'[4, 0, 3, 6, 5, 6, 1, 0, 16, 26, 0, 25, 2, 0, 0, 1, 1, 0]' : 0.181722}", "{'[4, 0, 3, 6, 5, 6, 1, 0, 16, 26, 0, 25, 2, 0, 0, 1, 1, 0]' : 0.181503}", "{'[4, 0, 3, 6, 5, 6, 1, 0, 16, 26, 0, 25, 2, 0, 0, 1, 1, 0]' : 0.185352}", "{'[4, 0, 3, 6, 5, 6, 1, 0, 16, 26, 0, 25, 2, 0, 0, 1, 1, 0]' : 0.185221}", "{'[4, 0, 3, 6, 5, 6, 1, 0, 16, 26, 0, 25, 2, 0, 0, 1, 1, 0]' : 0.185986}", "{'[4, 0, 3, 6, 5, 6, 1, 0, 16, 26, 0, 25, 2, 0, 0, 1, 1, 0]' : 0.182208}", "{'[4, 0, 3, 6, 5, 6, 1, 0, 16, 26, 0, 25, 2, 0, 0, 1, 1, 0]' : 0.181122}", "{'[4, 0, 3, 6, 5, 6, 1, 0, 16, 26, 0, 25, 2, 0, 0, 1, 1, 0]' : 0.184207}", "{'[4, 0, 3, 6, 5, 6, 1, 0, 16, 26, 0, 25, 2, 0, 0, 1, 1, 0]' : 0.185714}", "{'[4, 0, 3, 6, 5, 6, 1, 0, 16, 26, 0, 25, 2, 0, 0, 1, 1, 0]' : 0.185512}", "{'[4, 0, 3, 6, 5, 6, 1, 0, 16, 26, 0, 25, 2, 0, 0, 1, 1, 0]' : 0.186196}", "{'[4, 0, 3, 6, 5, 6, 1, 0, 16, 26, 0, 25, 2, 0, 0, 1, 1, 0]' : 0.182064}", "{'[4, 0, 3, 6, 5, 6, 1, 0, 16, 26, 0, 25, 2, 0, 0, 1, 1, 0]' : 0.182578}", "{'[4, 0, 3, 6, 5, 6, 1, 0, 16, 26, 0, 25, 2, 0, 0, 1, 1, 0]' : 0.185446}", "{'[4, 0, 3, 6, 5, 6, 1, 0, 16, 26, 0, 25, 2, 0, 0, 1, 1, 0]' : 0.185728}", "{'[4, 0, 3, 6, 5, 6, 1, 0, 16, 26, 0, 25, 2, 0, 0, 1, 1, 0]' : 0.186324}", "{'[4, 0, 3, 6, 5, 6, 1, 0, 16, 26, 0, 25, 2, 0, 0, 1, 1, 0]' : 0.185388}", "{'[4, 0, 3, 6, 5, 6, 1, 0, 16, 26, 0, 25, 2, 0, 0, 1, 1, 0]' : 0.182474}", "{'[4, 0, 3, 6, 5, 6, 1, 0, 16, 26, 0, 25, 2, 0, 0, 1, 1, 0]' : 0.186045}", "{'[4, 0, 3, 6, 5, 6, 1, 0, 16, 26, 0, 25, 2, 0, 0, 1, 1, 0]' : 0.185199}", "{'[4, 0, 3, 6, 5, 6, 1, 0, 16, 26, 0, 25, 2, 0, 0, 1, 1, 0]' : 0.182366}", "{'[4, 0, 3, 6, 5, 6, 1, 0, 16, 26, 0, 25, 2, 0, 0, 1, 1, 0]' : 0.185393}", "{'[4, 0, 3, 6, 5, 6, 1, 0, 16, 26, 0, 25, 2, 0, 0, 1, 1, 0]' : 0.185346}", "{'[4, 0, 3, 6, 5, 6, 1, 0, 16, 26, 0, 25, 2, 0, 0, 1, 1, 0]' : 0.185664}", "{'[4, 0, 3, 6, 5, 6, 1, 0, 16, 26, 0, 25, 2, 0, 0, 1, 1, 0]' : 0.185391}", "{'[4, 0, 3, 6, 5, 6, 1, 0, 16, 26, 0, 25, 2, 0, 0, 1, 1, 0]' : 0.185291}", "{'[4, 0, 3, 6, 5, 6, 1, 0, 16, 26, 0, 25, 2, 0, 0, 1, 1, 0]' : 0.185838}"]
returning from 'run': {'[4, 0, 3, 6, 5, 6, 1, 0, 16, 26, 0, 25, 2, 0, 0, 1, 1, 0]': ([0.202427, 0.198084, 0.184654, 0.181722, 0.181503, 0.185352, 0.185221, 0.185986, 0.182208, 0.181122, 0.184207, 0.185714, 0.185512, 0.186196, 0.182064, 0.182578, 0.185446, 0.185728, 0.186324, 0.185388, 0.182474, 0.186045, 0.185199, 0.182366, 0.185393, 0.185346, 0.185664, 0.185391, 0.185291, 0.185838], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 0, 3, 6, 5, 6, 1, 0, 16, 26, 0, 25, 2, 0, 0, 1, 1, 0]': ([0.202427, 0.198084, 0.184654, 0.181722, 0.181503, 0.185352, 0.185221, 0.185986, 0.182208, 0.181122, 0.184207, 0.185714, 0.185512, 0.186196, 0.182064, 0.182578, 0.185446, 0.185728, 0.186324, 0.185388, 0.182474, 0.186045, 0.185199, 0.182366, 0.185393, 0.185346, 0.185664, 0.185391, 0.185291, 0.185838], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = jjj
Code stats:
        Number of loops: 	123
        Max loop nest depth: 	5
        Additions: 		7934
        Multiplications: 	2106
        Divisions: 		0
        Logical: 		0
        Reads: 			12159
        Writes: 		1390
        Comparisons:		123
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest19.exe __orio_perftest19.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest19.exe  
Program Test Output: 
{'[5, 5, 2, 3, 3, 4, 0, 1, 5, 25, 0, 4, 0, 2, 0, 0, 1, 0]' : 0.239777}
{'[5, 5, 2, 3, 3, 4, 0, 1, 5, 25, 0, 4, 0, 2, 0, 0, 1, 0]' : 0.248076}
{'[5, 5, 2, 3, 3, 4, 0, 1, 5, 25, 0, 4, 0, 2, 0, 0, 1, 0]' : 0.240064}
{'[5, 5, 2, 3, 3, 4, 0, 1, 5, 25, 0, 4, 0, 2, 0, 0, 1, 0]' : 0.244257}
{'[5, 5, 2, 3, 3, 4, 0, 1, 5, 25, 0, 4, 0, 2, 0, 0, 1, 0]' : 0.240709}
{'[5, 5, 2, 3, 3, 4, 0, 1, 5, 25, 0, 4, 0, 2, 0, 0, 1, 0]' : 0.24448}
{'[5, 5, 2, 3, 3, 4, 0, 1, 5, 25, 0, 4, 0, 2, 0, 0, 1, 0]' : 0.24451}
{'[5, 5, 2, 3, 3, 4, 0, 1, 5, 25, 0, 4, 0, 2, 0, 0, 1, 0]' : 0.244527}
{'[5, 5, 2, 3, 3, 4, 0, 1, 5, 25, 0, 4, 0, 2, 0, 0, 1, 0]' : 0.244464}
{'[5, 5, 2, 3, 3, 4, 0, 1, 5, 25, 0, 4, 0, 2, 0, 0, 1, 0]' : 0.244679}
{'[5, 5, 2, 3, 3, 4, 0, 1, 5, 25, 0, 4, 0, 2, 0, 0, 1, 0]' : 0.244533}
{'[5, 5, 2, 3, 3, 4, 0, 1, 5, 25, 0, 4, 0, 2, 0, 0, 1, 0]' : 0.238166}
{'[5, 5, 2, 3, 3, 4, 0, 1, 5, 25, 0, 4, 0, 2, 0, 0, 1, 0]' : 0.237511}
{'[5, 5, 2, 3, 3, 4, 0, 1, 5, 25, 0, 4, 0, 2, 0, 0, 1, 0]' : 0.244603}
{'[5, 5, 2, 3, 3, 4, 0, 1, 5, 25, 0, 4, 0, 2, 0, 0, 1, 0]' : 0.243101}
{'[5, 5, 2, 3, 3, 4, 0, 1, 5, 25, 0, 4, 0, 2, 0, 0, 1, 0]' : 0.235037}
{'[5, 5, 2, 3, 3, 4, 0, 1, 5, 25, 0, 4, 0, 2, 0, 0, 1, 0]' : 0.235647}
{'[5, 5, 2, 3, 3, 4, 0, 1, 5, 25, 0, 4, 0, 2, 0, 0, 1, 0]' : 0.244592}
{'[5, 5, 2, 3, 3, 4, 0, 1, 5, 25, 0, 4, 0, 2, 0, 0, 1, 0]' : 0.243403}
{'[5, 5, 2, 3, 3, 4, 0, 1, 5, 25, 0, 4, 0, 2, 0, 0, 1, 0]' : 0.242786}
{'[5, 5, 2, 3, 3, 4, 0, 1, 5, 25, 0, 4, 0, 2, 0, 0, 1, 0]' : 0.235608}
{'[5, 5, 2, 3, 3, 4, 0, 1, 5, 25, 0, 4, 0, 2, 0, 0, 1, 0]' : 0.234435}
{'[5, 5, 2, 3, 3, 4, 0, 1, 5, 25, 0, 4, 0, 2, 0, 0, 1, 0]' : 0.235199}
{'[5, 5, 2, 3, 3, 4, 0, 1, 5, 25, 0, 4, 0, 2, 0, 0, 1, 0]' : 0.235521}
{'[5, 5, 2, 3, 3, 4, 0, 1, 5, 25, 0, 4, 0, 2, 0, 0, 1, 0]' : 0.242375}
{'[5, 5, 2, 3, 3, 4, 0, 1, 5, 25, 0, 4, 0, 2, 0, 0, 1, 0]' : 0.236073}
{'[5, 5, 2, 3, 3, 4, 0, 1, 5, 25, 0, 4, 0, 2, 0, 0, 1, 0]' : 0.235381}
{'[5, 5, 2, 3, 3, 4, 0, 1, 5, 25, 0, 4, 0, 2, 0, 0, 1, 0]' : 0.232197}
{'[5, 5, 2, 3, 3, 4, 0, 1, 5, 25, 0, 4, 0, 2, 0, 0, 1, 0]' : 0.234648}
{'[5, 5, 2, 3, 3, 4, 0, 1, 5, 25, 0, 4, 0, 2, 0, 0, 1, 0]' : 0.234849}

out:
 ["{'[5, 5, 2, 3, 3, 4, 0, 1, 5, 25, 0, 4, 0, 2, 0, 0, 1, 0]' : 0.239777}", "{'[5, 5, 2, 3, 3, 4, 0, 1, 5, 25, 0, 4, 0, 2, 0, 0, 1, 0]' : 0.248076}", "{'[5, 5, 2, 3, 3, 4, 0, 1, 5, 25, 0, 4, 0, 2, 0, 0, 1, 0]' : 0.240064}", "{'[5, 5, 2, 3, 3, 4, 0, 1, 5, 25, 0, 4, 0, 2, 0, 0, 1, 0]' : 0.244257}", "{'[5, 5, 2, 3, 3, 4, 0, 1, 5, 25, 0, 4, 0, 2, 0, 0, 1, 0]' : 0.240709}", "{'[5, 5, 2, 3, 3, 4, 0, 1, 5, 25, 0, 4, 0, 2, 0, 0, 1, 0]' : 0.24448}", "{'[5, 5, 2, 3, 3, 4, 0, 1, 5, 25, 0, 4, 0, 2, 0, 0, 1, 0]' : 0.24451}", "{'[5, 5, 2, 3, 3, 4, 0, 1, 5, 25, 0, 4, 0, 2, 0, 0, 1, 0]' : 0.244527}", "{'[5, 5, 2, 3, 3, 4, 0, 1, 5, 25, 0, 4, 0, 2, 0, 0, 1, 0]' : 0.244464}", "{'[5, 5, 2, 3, 3, 4, 0, 1, 5, 25, 0, 4, 0, 2, 0, 0, 1, 0]' : 0.244679}", "{'[5, 5, 2, 3, 3, 4, 0, 1, 5, 25, 0, 4, 0, 2, 0, 0, 1, 0]' : 0.244533}", "{'[5, 5, 2, 3, 3, 4, 0, 1, 5, 25, 0, 4, 0, 2, 0, 0, 1, 0]' : 0.238166}", "{'[5, 5, 2, 3, 3, 4, 0, 1, 5, 25, 0, 4, 0, 2, 0, 0, 1, 0]' : 0.237511}", "{'[5, 5, 2, 3, 3, 4, 0, 1, 5, 25, 0, 4, 0, 2, 0, 0, 1, 0]' : 0.244603}", "{'[5, 5, 2, 3, 3, 4, 0, 1, 5, 25, 0, 4, 0, 2, 0, 0, 1, 0]' : 0.243101}", "{'[5, 5, 2, 3, 3, 4, 0, 1, 5, 25, 0, 4, 0, 2, 0, 0, 1, 0]' : 0.235037}", "{'[5, 5, 2, 3, 3, 4, 0, 1, 5, 25, 0, 4, 0, 2, 0, 0, 1, 0]' : 0.235647}", "{'[5, 5, 2, 3, 3, 4, 0, 1, 5, 25, 0, 4, 0, 2, 0, 0, 1, 0]' : 0.244592}", "{'[5, 5, 2, 3, 3, 4, 0, 1, 5, 25, 0, 4, 0, 2, 0, 0, 1, 0]' : 0.243403}", "{'[5, 5, 2, 3, 3, 4, 0, 1, 5, 25, 0, 4, 0, 2, 0, 0, 1, 0]' : 0.242786}", "{'[5, 5, 2, 3, 3, 4, 0, 1, 5, 25, 0, 4, 0, 2, 0, 0, 1, 0]' : 0.235608}", "{'[5, 5, 2, 3, 3, 4, 0, 1, 5, 25, 0, 4, 0, 2, 0, 0, 1, 0]' : 0.234435}", "{'[5, 5, 2, 3, 3, 4, 0, 1, 5, 25, 0, 4, 0, 2, 0, 0, 1, 0]' : 0.235199}", "{'[5, 5, 2, 3, 3, 4, 0, 1, 5, 25, 0, 4, 0, 2, 0, 0, 1, 0]' : 0.235521}", "{'[5, 5, 2, 3, 3, 4, 0, 1, 5, 25, 0, 4, 0, 2, 0, 0, 1, 0]' : 0.242375}", "{'[5, 5, 2, 3, 3, 4, 0, 1, 5, 25, 0, 4, 0, 2, 0, 0, 1, 0]' : 0.236073}", "{'[5, 5, 2, 3, 3, 4, 0, 1, 5, 25, 0, 4, 0, 2, 0, 0, 1, 0]' : 0.235381}", "{'[5, 5, 2, 3, 3, 4, 0, 1, 5, 25, 0, 4, 0, 2, 0, 0, 1, 0]' : 0.232197}", "{'[5, 5, 2, 3, 3, 4, 0, 1, 5, 25, 0, 4, 0, 2, 0, 0, 1, 0]' : 0.234648}", "{'[5, 5, 2, 3, 3, 4, 0, 1, 5, 25, 0, 4, 0, 2, 0, 0, 1, 0]' : 0.234849}"]
returning from 'run': {'[5, 5, 2, 3, 3, 4, 0, 1, 5, 25, 0, 4, 0, 2, 0, 0, 1, 0]': ([0.239777, 0.248076, 0.240064, 0.244257, 0.240709, 0.24448, 0.24451, 0.244527, 0.244464, 0.244679, 0.244533, 0.238166, 0.237511, 0.244603, 0.243101, 0.235037, 0.235647, 0.244592, 0.243403, 0.242786, 0.235608, 0.234435, 0.235199, 0.235521, 0.242375, 0.236073, 0.235381, 0.232197, 0.234648, 0.234849], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 5, 2, 3, 3, 4, 0, 1, 5, 25, 0, 4, 0, 2, 0, 0, 1, 0]': ([0.239777, 0.248076, 0.240064, 0.244257, 0.240709, 0.24448, 0.24451, 0.244527, 0.244464, 0.244679, 0.244533, 0.238166, 0.237511, 0.244603, 0.243101, 0.235037, 0.235647, 0.244592, 0.243403, 0.242786, 0.235608, 0.234435, 0.235199, 0.235521, 0.242375, 0.236073, 0.235381, 0.232197, 0.234648, 0.234849], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	7
        Max loop nest depth: 	4
        Additions: 		242
        Multiplications: 	102
        Divisions: 		0
        Logical: 		0
        Reads: 			557
        Writes: 		107
        Comparisons:		7
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest20.exe __orio_perftest20.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest20.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest20.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest20.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest20.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = iii
Code stats:
        Number of loops: 	141
        Max loop nest depth: 	4
        Additions: 		2653
        Multiplications: 	780
        Divisions: 		0
        Logical: 		0
        Reads: 			4905
        Writes: 		874
        Comparisons:		141
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest21.exe __orio_perftest21.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest21.exe  
Program Test Output: 
{'[5, 0, 0, 3, 3, 3, 1, 1, 12, 24, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.225403}
{'[5, 0, 0, 3, 3, 3, 1, 1, 12, 24, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.223567}
{'[5, 0, 0, 3, 3, 3, 1, 1, 12, 24, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.232387}
{'[5, 0, 0, 3, 3, 3, 1, 1, 12, 24, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.232321}
{'[5, 0, 0, 3, 3, 3, 1, 1, 12, 24, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.232399}
{'[5, 0, 0, 3, 3, 3, 1, 1, 12, 24, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.232348}
{'[5, 0, 0, 3, 3, 3, 1, 1, 12, 24, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.232361}
{'[5, 0, 0, 3, 3, 3, 1, 1, 12, 24, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.232413}
{'[5, 0, 0, 3, 3, 3, 1, 1, 12, 24, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.232551}
{'[5, 0, 0, 3, 3, 3, 1, 1, 12, 24, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.232319}
{'[5, 0, 0, 3, 3, 3, 1, 1, 12, 24, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.232405}
{'[5, 0, 0, 3, 3, 3, 1, 1, 12, 24, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.232349}
{'[5, 0, 0, 3, 3, 3, 1, 1, 12, 24, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.232371}
{'[5, 0, 0, 3, 3, 3, 1, 1, 12, 24, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.232325}
{'[5, 0, 0, 3, 3, 3, 1, 1, 12, 24, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.232438}
{'[5, 0, 0, 3, 3, 3, 1, 1, 12, 24, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.232374}
{'[5, 0, 0, 3, 3, 3, 1, 1, 12, 24, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.232707}
{'[5, 0, 0, 3, 3, 3, 1, 1, 12, 24, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.232464}
{'[5, 0, 0, 3, 3, 3, 1, 1, 12, 24, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.230753}
{'[5, 0, 0, 3, 3, 3, 1, 1, 12, 24, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.229736}
{'[5, 0, 0, 3, 3, 3, 1, 1, 12, 24, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.232322}
{'[5, 0, 0, 3, 3, 3, 1, 1, 12, 24, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.232407}
{'[5, 0, 0, 3, 3, 3, 1, 1, 12, 24, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.232343}
{'[5, 0, 0, 3, 3, 3, 1, 1, 12, 24, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.232393}
{'[5, 0, 0, 3, 3, 3, 1, 1, 12, 24, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.232455}
{'[5, 0, 0, 3, 3, 3, 1, 1, 12, 24, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.232737}
{'[5, 0, 0, 3, 3, 3, 1, 1, 12, 24, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.228618}
{'[5, 0, 0, 3, 3, 3, 1, 1, 12, 24, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.224698}
{'[5, 0, 0, 3, 3, 3, 1, 1, 12, 24, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.2187}
{'[5, 0, 0, 3, 3, 3, 1, 1, 12, 24, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.222476}

out:
 ["{'[5, 0, 0, 3, 3, 3, 1, 1, 12, 24, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.225403}", "{'[5, 0, 0, 3, 3, 3, 1, 1, 12, 24, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.223567}", "{'[5, 0, 0, 3, 3, 3, 1, 1, 12, 24, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.232387}", "{'[5, 0, 0, 3, 3, 3, 1, 1, 12, 24, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.232321}", "{'[5, 0, 0, 3, 3, 3, 1, 1, 12, 24, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.232399}", "{'[5, 0, 0, 3, 3, 3, 1, 1, 12, 24, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.232348}", "{'[5, 0, 0, 3, 3, 3, 1, 1, 12, 24, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.232361}", "{'[5, 0, 0, 3, 3, 3, 1, 1, 12, 24, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.232413}", "{'[5, 0, 0, 3, 3, 3, 1, 1, 12, 24, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.232551}", "{'[5, 0, 0, 3, 3, 3, 1, 1, 12, 24, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.232319}", "{'[5, 0, 0, 3, 3, 3, 1, 1, 12, 24, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.232405}", "{'[5, 0, 0, 3, 3, 3, 1, 1, 12, 24, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.232349}", "{'[5, 0, 0, 3, 3, 3, 1, 1, 12, 24, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.232371}", "{'[5, 0, 0, 3, 3, 3, 1, 1, 12, 24, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.232325}", "{'[5, 0, 0, 3, 3, 3, 1, 1, 12, 24, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.232438}", "{'[5, 0, 0, 3, 3, 3, 1, 1, 12, 24, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.232374}", "{'[5, 0, 0, 3, 3, 3, 1, 1, 12, 24, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.232707}", "{'[5, 0, 0, 3, 3, 3, 1, 1, 12, 24, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.232464}", "{'[5, 0, 0, 3, 3, 3, 1, 1, 12, 24, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.230753}", "{'[5, 0, 0, 3, 3, 3, 1, 1, 12, 24, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.229736}", "{'[5, 0, 0, 3, 3, 3, 1, 1, 12, 24, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.232322}", "{'[5, 0, 0, 3, 3, 3, 1, 1, 12, 24, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.232407}", "{'[5, 0, 0, 3, 3, 3, 1, 1, 12, 24, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.232343}", "{'[5, 0, 0, 3, 3, 3, 1, 1, 12, 24, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.232393}", "{'[5, 0, 0, 3, 3, 3, 1, 1, 12, 24, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.232455}", "{'[5, 0, 0, 3, 3, 3, 1, 1, 12, 24, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.232737}", "{'[5, 0, 0, 3, 3, 3, 1, 1, 12, 24, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.228618}", "{'[5, 0, 0, 3, 3, 3, 1, 1, 12, 24, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.224698}", "{'[5, 0, 0, 3, 3, 3, 1, 1, 12, 24, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.2187}", "{'[5, 0, 0, 3, 3, 3, 1, 1, 12, 24, 5, 0, 0, 0, 1, 1, 0, 0]' : 0.222476}"]
returning from 'run': {'[5, 0, 0, 3, 3, 3, 1, 1, 12, 24, 5, 0, 0, 0, 1, 1, 0, 0]': ([0.225403, 0.223567, 0.232387, 0.232321, 0.232399, 0.232348, 0.232361, 0.232413, 0.232551, 0.232319, 0.232405, 0.232349, 0.232371, 0.232325, 0.232438, 0.232374, 0.232707, 0.232464, 0.230753, 0.229736, 0.232322, 0.232407, 0.232343, 0.232393, 0.232455, 0.232737, 0.228618, 0.224698, 0.2187, 0.222476], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 0, 0, 3, 3, 3, 1, 1, 12, 24, 5, 0, 0, 0, 1, 1, 0, 0]': ([0.225403, 0.223567, 0.232387, 0.232321, 0.232399, 0.232348, 0.232361, 0.232413, 0.232551, 0.232319, 0.232405, 0.232349, 0.232371, 0.232325, 0.232438, 0.232374, 0.232707, 0.232464, 0.230753, 0.229736, 0.232322, 0.232407, 0.232343, 0.232393, 0.232455, 0.232737, 0.228618, 0.224698, 0.2187, 0.222476], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	45
        Max loop nest depth: 	6
        Additions: 		7504
        Multiplications: 	1914
        Divisions: 		0
        Logical: 		0
        Reads: 			11058
        Writes: 		1130
        Comparisons:		45
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest22.exe __orio_perftest22.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest22.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest22.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest22.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest22.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	6
        Additions: 		1443
        Multiplications: 	684
        Divisions: 		0
        Logical: 		0
        Reads: 			2929
        Writes: 		516
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest23.exe __orio_perftest23.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest23.exe  
Program Test Output: 
{'[6, 3, 0, 6, 3, 0, 0, 0, 0, 0, 7, 19, 1, 1, 0, 1, 0, 1]' : 0.0899239}
{'[6, 3, 0, 6, 3, 0, 0, 0, 0, 0, 7, 19, 1, 1, 0, 1, 0, 1]' : 0.089853}
{'[6, 3, 0, 6, 3, 0, 0, 0, 0, 0, 7, 19, 1, 1, 0, 1, 0, 1]' : 0.0897369}
{'[6, 3, 0, 6, 3, 0, 0, 0, 0, 0, 7, 19, 1, 1, 0, 1, 0, 1]' : 0.0898409}
{'[6, 3, 0, 6, 3, 0, 0, 0, 0, 0, 7, 19, 1, 1, 0, 1, 0, 1]' : 0.089808}
{'[6, 3, 0, 6, 3, 0, 0, 0, 0, 0, 7, 19, 1, 1, 0, 1, 0, 1]' : 0.089751}
{'[6, 3, 0, 6, 3, 0, 0, 0, 0, 0, 7, 19, 1, 1, 0, 1, 0, 1]' : 0.08987}
{'[6, 3, 0, 6, 3, 0, 0, 0, 0, 0, 7, 19, 1, 1, 0, 1, 0, 1]' : 0.0897431}
{'[6, 3, 0, 6, 3, 0, 0, 0, 0, 0, 7, 19, 1, 1, 0, 1, 0, 1]' : 0.0891001}
{'[6, 3, 0, 6, 3, 0, 0, 0, 0, 0, 7, 19, 1, 1, 0, 1, 0, 1]' : 0.0877531}
{'[6, 3, 0, 6, 3, 0, 0, 0, 0, 0, 7, 19, 1, 1, 0, 1, 0, 1]' : 0.0878348}
{'[6, 3, 0, 6, 3, 0, 0, 0, 0, 0, 7, 19, 1, 1, 0, 1, 0, 1]' : 0.0875769}
{'[6, 3, 0, 6, 3, 0, 0, 0, 0, 0, 7, 19, 1, 1, 0, 1, 0, 1]' : 0.089052}
{'[6, 3, 0, 6, 3, 0, 0, 0, 0, 0, 7, 19, 1, 1, 0, 1, 0, 1]' : 0.0896919}
{'[6, 3, 0, 6, 3, 0, 0, 0, 0, 0, 7, 19, 1, 1, 0, 1, 0, 1]' : 0.0897672}
{'[6, 3, 0, 6, 3, 0, 0, 0, 0, 0, 7, 19, 1, 1, 0, 1, 0, 1]' : 0.0899959}
{'[6, 3, 0, 6, 3, 0, 0, 0, 0, 0, 7, 19, 1, 1, 0, 1, 0, 1]' : 0.0897551}
{'[6, 3, 0, 6, 3, 0, 0, 0, 0, 0, 7, 19, 1, 1, 0, 1, 0, 1]' : 0.0899119}
{'[6, 3, 0, 6, 3, 0, 0, 0, 0, 0, 7, 19, 1, 1, 0, 1, 0, 1]' : 0.0899551}
{'[6, 3, 0, 6, 3, 0, 0, 0, 0, 0, 7, 19, 1, 1, 0, 1, 0, 1]' : 0.08972}
{'[6, 3, 0, 6, 3, 0, 0, 0, 0, 0, 7, 19, 1, 1, 0, 1, 0, 1]' : 0.0897579}
{'[6, 3, 0, 6, 3, 0, 0, 0, 0, 0, 7, 19, 1, 1, 0, 1, 0, 1]' : 0.089138}
{'[6, 3, 0, 6, 3, 0, 0, 0, 0, 0, 7, 19, 1, 1, 0, 1, 0, 1]' : 0.087743}
{'[6, 3, 0, 6, 3, 0, 0, 0, 0, 0, 7, 19, 1, 1, 0, 1, 0, 1]' : 0.0885692}
{'[6, 3, 0, 6, 3, 0, 0, 0, 0, 0, 7, 19, 1, 1, 0, 1, 0, 1]' : 0.08974}
{'[6, 3, 0, 6, 3, 0, 0, 0, 0, 0, 7, 19, 1, 1, 0, 1, 0, 1]' : 0.089767}
{'[6, 3, 0, 6, 3, 0, 0, 0, 0, 0, 7, 19, 1, 1, 0, 1, 0, 1]' : 0.0897171}
{'[6, 3, 0, 6, 3, 0, 0, 0, 0, 0, 7, 19, 1, 1, 0, 1, 0, 1]' : 0.089793}
{'[6, 3, 0, 6, 3, 0, 0, 0, 0, 0, 7, 19, 1, 1, 0, 1, 0, 1]' : 0.0897279}
{'[6, 3, 0, 6, 3, 0, 0, 0, 0, 0, 7, 19, 1, 1, 0, 1, 0, 1]' : 0.0889289}

out:
 ["{'[6, 3, 0, 6, 3, 0, 0, 0, 0, 0, 7, 19, 1, 1, 0, 1, 0, 1]' : 0.0899239}", "{'[6, 3, 0, 6, 3, 0, 0, 0, 0, 0, 7, 19, 1, 1, 0, 1, 0, 1]' : 0.089853}", "{'[6, 3, 0, 6, 3, 0, 0, 0, 0, 0, 7, 19, 1, 1, 0, 1, 0, 1]' : 0.0897369}", "{'[6, 3, 0, 6, 3, 0, 0, 0, 0, 0, 7, 19, 1, 1, 0, 1, 0, 1]' : 0.0898409}", "{'[6, 3, 0, 6, 3, 0, 0, 0, 0, 0, 7, 19, 1, 1, 0, 1, 0, 1]' : 0.089808}", "{'[6, 3, 0, 6, 3, 0, 0, 0, 0, 0, 7, 19, 1, 1, 0, 1, 0, 1]' : 0.089751}", "{'[6, 3, 0, 6, 3, 0, 0, 0, 0, 0, 7, 19, 1, 1, 0, 1, 0, 1]' : 0.08987}", "{'[6, 3, 0, 6, 3, 0, 0, 0, 0, 0, 7, 19, 1, 1, 0, 1, 0, 1]' : 0.0897431}", "{'[6, 3, 0, 6, 3, 0, 0, 0, 0, 0, 7, 19, 1, 1, 0, 1, 0, 1]' : 0.0891001}", "{'[6, 3, 0, 6, 3, 0, 0, 0, 0, 0, 7, 19, 1, 1, 0, 1, 0, 1]' : 0.0877531}", "{'[6, 3, 0, 6, 3, 0, 0, 0, 0, 0, 7, 19, 1, 1, 0, 1, 0, 1]' : 0.0878348}", "{'[6, 3, 0, 6, 3, 0, 0, 0, 0, 0, 7, 19, 1, 1, 0, 1, 0, 1]' : 0.0875769}", "{'[6, 3, 0, 6, 3, 0, 0, 0, 0, 0, 7, 19, 1, 1, 0, 1, 0, 1]' : 0.089052}", "{'[6, 3, 0, 6, 3, 0, 0, 0, 0, 0, 7, 19, 1, 1, 0, 1, 0, 1]' : 0.0896919}", "{'[6, 3, 0, 6, 3, 0, 0, 0, 0, 0, 7, 19, 1, 1, 0, 1, 0, 1]' : 0.0897672}", "{'[6, 3, 0, 6, 3, 0, 0, 0, 0, 0, 7, 19, 1, 1, 0, 1, 0, 1]' : 0.0899959}", "{'[6, 3, 0, 6, 3, 0, 0, 0, 0, 0, 7, 19, 1, 1, 0, 1, 0, 1]' : 0.0897551}", "{'[6, 3, 0, 6, 3, 0, 0, 0, 0, 0, 7, 19, 1, 1, 0, 1, 0, 1]' : 0.0899119}", "{'[6, 3, 0, 6, 3, 0, 0, 0, 0, 0, 7, 19, 1, 1, 0, 1, 0, 1]' : 0.0899551}", "{'[6, 3, 0, 6, 3, 0, 0, 0, 0, 0, 7, 19, 1, 1, 0, 1, 0, 1]' : 0.08972}", "{'[6, 3, 0, 6, 3, 0, 0, 0, 0, 0, 7, 19, 1, 1, 0, 1, 0, 1]' : 0.0897579}", "{'[6, 3, 0, 6, 3, 0, 0, 0, 0, 0, 7, 19, 1, 1, 0, 1, 0, 1]' : 0.089138}", "{'[6, 3, 0, 6, 3, 0, 0, 0, 0, 0, 7, 19, 1, 1, 0, 1, 0, 1]' : 0.087743}", "{'[6, 3, 0, 6, 3, 0, 0, 0, 0, 0, 7, 19, 1, 1, 0, 1, 0, 1]' : 0.0885692}", "{'[6, 3, 0, 6, 3, 0, 0, 0, 0, 0, 7, 19, 1, 1, 0, 1, 0, 1]' : 0.08974}", "{'[6, 3, 0, 6, 3, 0, 0, 0, 0, 0, 7, 19, 1, 1, 0, 1, 0, 1]' : 0.089767}", "{'[6, 3, 0, 6, 3, 0, 0, 0, 0, 0, 7, 19, 1, 1, 0, 1, 0, 1]' : 0.0897171}", "{'[6, 3, 0, 6, 3, 0, 0, 0, 0, 0, 7, 19, 1, 1, 0, 1, 0, 1]' : 0.089793}", "{'[6, 3, 0, 6, 3, 0, 0, 0, 0, 0, 7, 19, 1, 1, 0, 1, 0, 1]' : 0.0897279}", "{'[6, 3, 0, 6, 3, 0, 0, 0, 0, 0, 7, 19, 1, 1, 0, 1, 0, 1]' : 0.0889289}"]
returning from 'run': {'[6, 3, 0, 6, 3, 0, 0, 0, 0, 0, 7, 19, 1, 1, 0, 1, 0, 1]': ([0.0899239, 0.089853, 0.0897369, 0.0898409, 0.089808, 0.089751, 0.08987, 0.0897431, 0.0891001, 0.0877531, 0.0878348, 0.0875769, 0.089052, 0.0896919, 0.0897672, 0.0899959, 0.0897551, 0.0899119, 0.0899551, 0.08972, 0.0897579, 0.089138, 0.087743, 0.0885692, 0.08974, 0.089767, 0.0897171, 0.089793, 0.0897279, 0.0889289], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 3, 0, 6, 3, 0, 0, 0, 0, 0, 7, 19, 1, 1, 0, 1, 0, 1]': ([0.0899239, 0.089853, 0.0897369, 0.0898409, 0.089808, 0.089751, 0.08987, 0.0897431, 0.0891001, 0.0877531, 0.0878348, 0.0875769, 0.089052, 0.0896919, 0.0897672, 0.0899959, 0.0897551, 0.0899119, 0.0899551, 0.08972, 0.0897579, 0.089138, 0.087743, 0.0885692, 0.08974, 0.089767, 0.0897171, 0.089793, 0.0897279, 0.0889289], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	6
        Additions: 		164
        Multiplications: 	54
        Divisions: 		0
        Logical: 		0
        Reads: 			367
        Writes: 		56
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest24.exe __orio_perftest24.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest24.exe  
Program Test Output: 
{'[1, 1, 1, 5, 0, 6, 0, 0, 0, 0, 3, 4, 0, 1, 1, 0, 1, 0]' : 0.277172}
{'[1, 1, 1, 5, 0, 6, 0, 0, 0, 0, 3, 4, 0, 1, 1, 0, 1, 0]' : 0.275431}
{'[1, 1, 1, 5, 0, 6, 0, 0, 0, 0, 3, 4, 0, 1, 1, 0, 1, 0]' : 0.238728}
{'[1, 1, 1, 5, 0, 6, 0, 0, 0, 0, 3, 4, 0, 1, 1, 0, 1, 0]' : 0.232068}
{'[1, 1, 1, 5, 0, 6, 0, 0, 0, 0, 3, 4, 0, 1, 1, 0, 1, 0]' : 0.243855}
{'[1, 1, 1, 5, 0, 6, 0, 0, 0, 0, 3, 4, 0, 1, 1, 0, 1, 0]' : 0.246827}
{'[1, 1, 1, 5, 0, 6, 0, 0, 0, 0, 3, 4, 0, 1, 1, 0, 1, 0]' : 0.246863}
{'[1, 1, 1, 5, 0, 6, 0, 0, 0, 0, 3, 4, 0, 1, 1, 0, 1, 0]' : 0.243561}
{'[1, 1, 1, 5, 0, 6, 0, 0, 0, 0, 3, 4, 0, 1, 1, 0, 1, 0]' : 0.242593}
{'[1, 1, 1, 5, 0, 6, 0, 0, 0, 0, 3, 4, 0, 1, 1, 0, 1, 0]' : 0.244906}
{'[1, 1, 1, 5, 0, 6, 0, 0, 0, 0, 3, 4, 0, 1, 1, 0, 1, 0]' : 0.247001}
{'[1, 1, 1, 5, 0, 6, 0, 0, 0, 0, 3, 4, 0, 1, 1, 0, 1, 0]' : 0.239382}
{'[1, 1, 1, 5, 0, 6, 0, 0, 0, 0, 3, 4, 0, 1, 1, 0, 1, 0]' : 0.243938}
{'[1, 1, 1, 5, 0, 6, 0, 0, 0, 0, 3, 4, 0, 1, 1, 0, 1, 0]' : 0.246796}
{'[1, 1, 1, 5, 0, 6, 0, 0, 0, 0, 3, 4, 0, 1, 1, 0, 1, 0]' : 0.246811}
{'[1, 1, 1, 5, 0, 6, 0, 0, 0, 0, 3, 4, 0, 1, 1, 0, 1, 0]' : 0.246817}
{'[1, 1, 1, 5, 0, 6, 0, 0, 0, 0, 3, 4, 0, 1, 1, 0, 1, 0]' : 0.246794}
{'[1, 1, 1, 5, 0, 6, 0, 0, 0, 0, 3, 4, 0, 1, 1, 0, 1, 0]' : 0.246785}
{'[1, 1, 1, 5, 0, 6, 0, 0, 0, 0, 3, 4, 0, 1, 1, 0, 1, 0]' : 0.244768}
{'[1, 1, 1, 5, 0, 6, 0, 0, 0, 0, 3, 4, 0, 1, 1, 0, 1, 0]' : 0.240544}
{'[1, 1, 1, 5, 0, 6, 0, 0, 0, 0, 3, 4, 0, 1, 1, 0, 1, 0]' : 0.242697}
{'[1, 1, 1, 5, 0, 6, 0, 0, 0, 0, 3, 4, 0, 1, 1, 0, 1, 0]' : 0.246797}
{'[1, 1, 1, 5, 0, 6, 0, 0, 0, 0, 3, 4, 0, 1, 1, 0, 1, 0]' : 0.246849}
{'[1, 1, 1, 5, 0, 6, 0, 0, 0, 0, 3, 4, 0, 1, 1, 0, 1, 0]' : 0.245996}
{'[1, 1, 1, 5, 0, 6, 0, 0, 0, 0, 3, 4, 0, 1, 1, 0, 1, 0]' : 0.246821}
{'[1, 1, 1, 5, 0, 6, 0, 0, 0, 0, 3, 4, 0, 1, 1, 0, 1, 0]' : 0.246787}
{'[1, 1, 1, 5, 0, 6, 0, 0, 0, 0, 3, 4, 0, 1, 1, 0, 1, 0]' : 0.244431}
{'[1, 1, 1, 5, 0, 6, 0, 0, 0, 0, 3, 4, 0, 1, 1, 0, 1, 0]' : 0.239197}
{'[1, 1, 1, 5, 0, 6, 0, 0, 0, 0, 3, 4, 0, 1, 1, 0, 1, 0]' : 0.241461}
{'[1, 1, 1, 5, 0, 6, 0, 0, 0, 0, 3, 4, 0, 1, 1, 0, 1, 0]' : 0.246787}

out:
 ["{'[1, 1, 1, 5, 0, 6, 0, 0, 0, 0, 3, 4, 0, 1, 1, 0, 1, 0]' : 0.277172}", "{'[1, 1, 1, 5, 0, 6, 0, 0, 0, 0, 3, 4, 0, 1, 1, 0, 1, 0]' : 0.275431}", "{'[1, 1, 1, 5, 0, 6, 0, 0, 0, 0, 3, 4, 0, 1, 1, 0, 1, 0]' : 0.238728}", "{'[1, 1, 1, 5, 0, 6, 0, 0, 0, 0, 3, 4, 0, 1, 1, 0, 1, 0]' : 0.232068}", "{'[1, 1, 1, 5, 0, 6, 0, 0, 0, 0, 3, 4, 0, 1, 1, 0, 1, 0]' : 0.243855}", "{'[1, 1, 1, 5, 0, 6, 0, 0, 0, 0, 3, 4, 0, 1, 1, 0, 1, 0]' : 0.246827}", "{'[1, 1, 1, 5, 0, 6, 0, 0, 0, 0, 3, 4, 0, 1, 1, 0, 1, 0]' : 0.246863}", "{'[1, 1, 1, 5, 0, 6, 0, 0, 0, 0, 3, 4, 0, 1, 1, 0, 1, 0]' : 0.243561}", "{'[1, 1, 1, 5, 0, 6, 0, 0, 0, 0, 3, 4, 0, 1, 1, 0, 1, 0]' : 0.242593}", "{'[1, 1, 1, 5, 0, 6, 0, 0, 0, 0, 3, 4, 0, 1, 1, 0, 1, 0]' : 0.244906}", "{'[1, 1, 1, 5, 0, 6, 0, 0, 0, 0, 3, 4, 0, 1, 1, 0, 1, 0]' : 0.247001}", "{'[1, 1, 1, 5, 0, 6, 0, 0, 0, 0, 3, 4, 0, 1, 1, 0, 1, 0]' : 0.239382}", "{'[1, 1, 1, 5, 0, 6, 0, 0, 0, 0, 3, 4, 0, 1, 1, 0, 1, 0]' : 0.243938}", "{'[1, 1, 1, 5, 0, 6, 0, 0, 0, 0, 3, 4, 0, 1, 1, 0, 1, 0]' : 0.246796}", "{'[1, 1, 1, 5, 0, 6, 0, 0, 0, 0, 3, 4, 0, 1, 1, 0, 1, 0]' : 0.246811}", "{'[1, 1, 1, 5, 0, 6, 0, 0, 0, 0, 3, 4, 0, 1, 1, 0, 1, 0]' : 0.246817}", "{'[1, 1, 1, 5, 0, 6, 0, 0, 0, 0, 3, 4, 0, 1, 1, 0, 1, 0]' : 0.246794}", "{'[1, 1, 1, 5, 0, 6, 0, 0, 0, 0, 3, 4, 0, 1, 1, 0, 1, 0]' : 0.246785}", "{'[1, 1, 1, 5, 0, 6, 0, 0, 0, 0, 3, 4, 0, 1, 1, 0, 1, 0]' : 0.244768}", "{'[1, 1, 1, 5, 0, 6, 0, 0, 0, 0, 3, 4, 0, 1, 1, 0, 1, 0]' : 0.240544}", "{'[1, 1, 1, 5, 0, 6, 0, 0, 0, 0, 3, 4, 0, 1, 1, 0, 1, 0]' : 0.242697}", "{'[1, 1, 1, 5, 0, 6, 0, 0, 0, 0, 3, 4, 0, 1, 1, 0, 1, 0]' : 0.246797}", "{'[1, 1, 1, 5, 0, 6, 0, 0, 0, 0, 3, 4, 0, 1, 1, 0, 1, 0]' : 0.246849}", "{'[1, 1, 1, 5, 0, 6, 0, 0, 0, 0, 3, 4, 0, 1, 1, 0, 1, 0]' : 0.245996}", "{'[1, 1, 1, 5, 0, 6, 0, 0, 0, 0, 3, 4, 0, 1, 1, 0, 1, 0]' : 0.246821}", "{'[1, 1, 1, 5, 0, 6, 0, 0, 0, 0, 3, 4, 0, 1, 1, 0, 1, 0]' : 0.246787}", "{'[1, 1, 1, 5, 0, 6, 0, 0, 0, 0, 3, 4, 0, 1, 1, 0, 1, 0]' : 0.244431}", "{'[1, 1, 1, 5, 0, 6, 0, 0, 0, 0, 3, 4, 0, 1, 1, 0, 1, 0]' : 0.239197}", "{'[1, 1, 1, 5, 0, 6, 0, 0, 0, 0, 3, 4, 0, 1, 1, 0, 1, 0]' : 0.241461}", "{'[1, 1, 1, 5, 0, 6, 0, 0, 0, 0, 3, 4, 0, 1, 1, 0, 1, 0]' : 0.246787}"]
returning from 'run': {'[1, 1, 1, 5, 0, 6, 0, 0, 0, 0, 3, 4, 0, 1, 1, 0, 1, 0]': ([0.277172, 0.275431, 0.238728, 0.232068, 0.243855, 0.246827, 0.246863, 0.243561, 0.242593, 0.244906, 0.247001, 0.239382, 0.243938, 0.246796, 0.246811, 0.246817, 0.246794, 0.246785, 0.244768, 0.240544, 0.242697, 0.246797, 0.246849, 0.245996, 0.246821, 0.246787, 0.244431, 0.239197, 0.241461, 0.246787], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 1, 1, 5, 0, 6, 0, 0, 0, 0, 3, 4, 0, 1, 1, 0, 1, 0]': ([0.277172, 0.275431, 0.238728, 0.232068, 0.243855, 0.246827, 0.246863, 0.243561, 0.242593, 0.244906, 0.247001, 0.239382, 0.243938, 0.246796, 0.246811, 0.246817, 0.246794, 0.246785, 0.244768, 0.240544, 0.242697, 0.246797, 0.246849, 0.245996, 0.246821, 0.246787, 0.244431, 0.239197, 0.241461, 0.246787], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	30
        Max loop nest depth: 	6
        Additions: 		1149
        Multiplications: 	424
        Divisions: 		0
        Logical: 		0
        Reads: 			2312
        Writes: 		423
        Comparisons:		30
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest25.exe __orio_perftest25.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest25.exe  
Program Test Output: 
{'[6, 4, 4, 5, 5, 6, 1, 0, 1, 2, 18, 0, 0, 0, 2, 1, 0, 0]' : 0.16754}
{'[6, 4, 4, 5, 5, 6, 1, 0, 1, 2, 18, 0, 0, 0, 2, 1, 0, 0]' : 0.170197}
{'[6, 4, 4, 5, 5, 6, 1, 0, 1, 2, 18, 0, 0, 0, 2, 1, 0, 0]' : 0.170209}
{'[6, 4, 4, 5, 5, 6, 1, 0, 1, 2, 18, 0, 0, 0, 2, 1, 0, 0]' : 0.170219}
{'[6, 4, 4, 5, 5, 6, 1, 0, 1, 2, 18, 0, 0, 0, 2, 1, 0, 0]' : 0.170188}
{'[6, 4, 4, 5, 5, 6, 1, 0, 1, 2, 18, 0, 0, 0, 2, 1, 0, 0]' : 0.16563}
{'[6, 4, 4, 5, 5, 6, 1, 0, 1, 2, 18, 0, 0, 0, 2, 1, 0, 0]' : 0.169183}
{'[6, 4, 4, 5, 5, 6, 1, 0, 1, 2, 18, 0, 0, 0, 2, 1, 0, 0]' : 0.170195}
{'[6, 4, 4, 5, 5, 6, 1, 0, 1, 2, 18, 0, 0, 0, 2, 1, 0, 0]' : 0.170418}
{'[6, 4, 4, 5, 5, 6, 1, 0, 1, 2, 18, 0, 0, 0, 2, 1, 0, 0]' : 0.170282}
{'[6, 4, 4, 5, 5, 6, 1, 0, 1, 2, 18, 0, 0, 0, 2, 1, 0, 0]' : 0.1702}
{'[6, 4, 4, 5, 5, 6, 1, 0, 1, 2, 18, 0, 0, 0, 2, 1, 0, 0]' : 0.170216}
{'[6, 4, 4, 5, 5, 6, 1, 0, 1, 2, 18, 0, 0, 0, 2, 1, 0, 0]' : 0.170204}
{'[6, 4, 4, 5, 5, 6, 1, 0, 1, 2, 18, 0, 0, 0, 2, 1, 0, 0]' : 0.169376}
{'[6, 4, 4, 5, 5, 6, 1, 0, 1, 2, 18, 0, 0, 0, 2, 1, 0, 0]' : 0.163693}
{'[6, 4, 4, 5, 5, 6, 1, 0, 1, 2, 18, 0, 0, 0, 2, 1, 0, 0]' : 0.164728}
{'[6, 4, 4, 5, 5, 6, 1, 0, 1, 2, 18, 0, 0, 0, 2, 1, 0, 0]' : 0.162711}
{'[6, 4, 4, 5, 5, 6, 1, 0, 1, 2, 18, 0, 0, 0, 2, 1, 0, 0]' : 0.164763}
{'[6, 4, 4, 5, 5, 6, 1, 0, 1, 2, 18, 0, 0, 0, 2, 1, 0, 0]' : 0.169663}
{'[6, 4, 4, 5, 5, 6, 1, 0, 1, 2, 18, 0, 0, 0, 2, 1, 0, 0]' : 0.170197}
{'[6, 4, 4, 5, 5, 6, 1, 0, 1, 2, 18, 0, 0, 0, 2, 1, 0, 0]' : 0.170363}
{'[6, 4, 4, 5, 5, 6, 1, 0, 1, 2, 18, 0, 0, 0, 2, 1, 0, 0]' : 0.170283}
{'[6, 4, 4, 5, 5, 6, 1, 0, 1, 2, 18, 0, 0, 0, 2, 1, 0, 0]' : 0.170215}
{'[6, 4, 4, 5, 5, 6, 1, 0, 1, 2, 18, 0, 0, 0, 2, 1, 0, 0]' : 0.168171}
{'[6, 4, 4, 5, 5, 6, 1, 0, 1, 2, 18, 0, 0, 0, 2, 1, 0, 0]' : 0.170185}
{'[6, 4, 4, 5, 5, 6, 1, 0, 1, 2, 18, 0, 0, 0, 2, 1, 0, 0]' : 0.17025}
{'[6, 4, 4, 5, 5, 6, 1, 0, 1, 2, 18, 0, 0, 0, 2, 1, 0, 0]' : 0.170069}
{'[6, 4, 4, 5, 5, 6, 1, 0, 1, 2, 18, 0, 0, 0, 2, 1, 0, 0]' : 0.164902}
{'[6, 4, 4, 5, 5, 6, 1, 0, 1, 2, 18, 0, 0, 0, 2, 1, 0, 0]' : 0.165003}
{'[6, 4, 4, 5, 5, 6, 1, 0, 1, 2, 18, 0, 0, 0, 2, 1, 0, 0]' : 0.165211}

out:
 ["{'[6, 4, 4, 5, 5, 6, 1, 0, 1, 2, 18, 0, 0, 0, 2, 1, 0, 0]' : 0.16754}", "{'[6, 4, 4, 5, 5, 6, 1, 0, 1, 2, 18, 0, 0, 0, 2, 1, 0, 0]' : 0.170197}", "{'[6, 4, 4, 5, 5, 6, 1, 0, 1, 2, 18, 0, 0, 0, 2, 1, 0, 0]' : 0.170209}", "{'[6, 4, 4, 5, 5, 6, 1, 0, 1, 2, 18, 0, 0, 0, 2, 1, 0, 0]' : 0.170219}", "{'[6, 4, 4, 5, 5, 6, 1, 0, 1, 2, 18, 0, 0, 0, 2, 1, 0, 0]' : 0.170188}", "{'[6, 4, 4, 5, 5, 6, 1, 0, 1, 2, 18, 0, 0, 0, 2, 1, 0, 0]' : 0.16563}", "{'[6, 4, 4, 5, 5, 6, 1, 0, 1, 2, 18, 0, 0, 0, 2, 1, 0, 0]' : 0.169183}", "{'[6, 4, 4, 5, 5, 6, 1, 0, 1, 2, 18, 0, 0, 0, 2, 1, 0, 0]' : 0.170195}", "{'[6, 4, 4, 5, 5, 6, 1, 0, 1, 2, 18, 0, 0, 0, 2, 1, 0, 0]' : 0.170418}", "{'[6, 4, 4, 5, 5, 6, 1, 0, 1, 2, 18, 0, 0, 0, 2, 1, 0, 0]' : 0.170282}", "{'[6, 4, 4, 5, 5, 6, 1, 0, 1, 2, 18, 0, 0, 0, 2, 1, 0, 0]' : 0.1702}", "{'[6, 4, 4, 5, 5, 6, 1, 0, 1, 2, 18, 0, 0, 0, 2, 1, 0, 0]' : 0.170216}", "{'[6, 4, 4, 5, 5, 6, 1, 0, 1, 2, 18, 0, 0, 0, 2, 1, 0, 0]' : 0.170204}", "{'[6, 4, 4, 5, 5, 6, 1, 0, 1, 2, 18, 0, 0, 0, 2, 1, 0, 0]' : 0.169376}", "{'[6, 4, 4, 5, 5, 6, 1, 0, 1, 2, 18, 0, 0, 0, 2, 1, 0, 0]' : 0.163693}", "{'[6, 4, 4, 5, 5, 6, 1, 0, 1, 2, 18, 0, 0, 0, 2, 1, 0, 0]' : 0.164728}", "{'[6, 4, 4, 5, 5, 6, 1, 0, 1, 2, 18, 0, 0, 0, 2, 1, 0, 0]' : 0.162711}", "{'[6, 4, 4, 5, 5, 6, 1, 0, 1, 2, 18, 0, 0, 0, 2, 1, 0, 0]' : 0.164763}", "{'[6, 4, 4, 5, 5, 6, 1, 0, 1, 2, 18, 0, 0, 0, 2, 1, 0, 0]' : 0.169663}", "{'[6, 4, 4, 5, 5, 6, 1, 0, 1, 2, 18, 0, 0, 0, 2, 1, 0, 0]' : 0.170197}", "{'[6, 4, 4, 5, 5, 6, 1, 0, 1, 2, 18, 0, 0, 0, 2, 1, 0, 0]' : 0.170363}", "{'[6, 4, 4, 5, 5, 6, 1, 0, 1, 2, 18, 0, 0, 0, 2, 1, 0, 0]' : 0.170283}", "{'[6, 4, 4, 5, 5, 6, 1, 0, 1, 2, 18, 0, 0, 0, 2, 1, 0, 0]' : 0.170215}", "{'[6, 4, 4, 5, 5, 6, 1, 0, 1, 2, 18, 0, 0, 0, 2, 1, 0, 0]' : 0.168171}", "{'[6, 4, 4, 5, 5, 6, 1, 0, 1, 2, 18, 0, 0, 0, 2, 1, 0, 0]' : 0.170185}", "{'[6, 4, 4, 5, 5, 6, 1, 0, 1, 2, 18, 0, 0, 0, 2, 1, 0, 0]' : 0.17025}", "{'[6, 4, 4, 5, 5, 6, 1, 0, 1, 2, 18, 0, 0, 0, 2, 1, 0, 0]' : 0.170069}", "{'[6, 4, 4, 5, 5, 6, 1, 0, 1, 2, 18, 0, 0, 0, 2, 1, 0, 0]' : 0.164902}", "{'[6, 4, 4, 5, 5, 6, 1, 0, 1, 2, 18, 0, 0, 0, 2, 1, 0, 0]' : 0.165003}", "{'[6, 4, 4, 5, 5, 6, 1, 0, 1, 2, 18, 0, 0, 0, 2, 1, 0, 0]' : 0.165211}"]
returning from 'run': {'[6, 4, 4, 5, 5, 6, 1, 0, 1, 2, 18, 0, 0, 0, 2, 1, 0, 0]': ([0.16754, 0.170197, 0.170209, 0.170219, 0.170188, 0.16563, 0.169183, 0.170195, 0.170418, 0.170282, 0.1702, 0.170216, 0.170204, 0.169376, 0.163693, 0.164728, 0.162711, 0.164763, 0.169663, 0.170197, 0.170363, 0.170283, 0.170215, 0.168171, 0.170185, 0.17025, 0.170069, 0.164902, 0.165003, 0.165211], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 4, 4, 5, 5, 6, 1, 0, 1, 2, 18, 0, 0, 0, 2, 1, 0, 0]': ([0.16754, 0.170197, 0.170209, 0.170219, 0.170188, 0.16563, 0.169183, 0.170195, 0.170418, 0.170282, 0.1702, 0.170216, 0.170204, 0.169376, 0.163693, 0.164728, 0.162711, 0.164763, 0.169663, 0.170197, 0.170363, 0.170283, 0.170215, 0.168171, 0.170185, 0.17025, 0.170069, 0.164902, 0.165003, 0.165211], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	6
        Additions: 		316
        Multiplications: 	108
        Divisions: 		0
        Logical: 		0
        Reads: 			722
        Writes: 		172
        Comparisons:		22
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest26.exe __orio_perftest26.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest26.exe  
Program Test Output: 
{'[4, 0, 4, 6, 6, 5, 0, 1, 28, 0, 3, 0, 1, 0, 0, 1, 1, 1]' : 0.106701}
{'[4, 0, 4, 6, 6, 5, 0, 1, 28, 0, 3, 0, 1, 0, 0, 1, 1, 1]' : 0.105911}
{'[4, 0, 4, 6, 6, 5, 0, 1, 28, 0, 3, 0, 1, 0, 0, 1, 1, 1]' : 0.105889}
{'[4, 0, 4, 6, 6, 5, 0, 1, 28, 0, 3, 0, 1, 0, 0, 1, 1, 1]' : 0.105887}
{'[4, 0, 4, 6, 6, 5, 0, 1, 28, 0, 3, 0, 1, 0, 0, 1, 1, 1]' : 0.105863}
{'[4, 0, 4, 6, 6, 5, 0, 1, 28, 0, 3, 0, 1, 0, 0, 1, 1, 1]' : 0.106003}
{'[4, 0, 4, 6, 6, 5, 0, 1, 28, 0, 3, 0, 1, 0, 0, 1, 1, 1]' : 0.105891}
{'[4, 0, 4, 6, 6, 5, 0, 1, 28, 0, 3, 0, 1, 0, 0, 1, 1, 1]' : 0.105863}
{'[4, 0, 4, 6, 6, 5, 0, 1, 28, 0, 3, 0, 1, 0, 0, 1, 1, 1]' : 0.105865}
{'[4, 0, 4, 6, 6, 5, 0, 1, 28, 0, 3, 0, 1, 0, 0, 1, 1, 1]' : 0.106023}
{'[4, 0, 4, 6, 6, 5, 0, 1, 28, 0, 3, 0, 1, 0, 0, 1, 1, 1]' : 0.105876}
{'[4, 0, 4, 6, 6, 5, 0, 1, 28, 0, 3, 0, 1, 0, 0, 1, 1, 1]' : 0.106148}
{'[4, 0, 4, 6, 6, 5, 0, 1, 28, 0, 3, 0, 1, 0, 0, 1, 1, 1]' : 0.103947}
{'[4, 0, 4, 6, 6, 5, 0, 1, 28, 0, 3, 0, 1, 0, 0, 1, 1, 1]' : 0.103621}
{'[4, 0, 4, 6, 6, 5, 0, 1, 28, 0, 3, 0, 1, 0, 0, 1, 1, 1]' : 0.104222}
{'[4, 0, 4, 6, 6, 5, 0, 1, 28, 0, 3, 0, 1, 0, 0, 1, 1, 1]' : 0.105871}
{'[4, 0, 4, 6, 6, 5, 0, 1, 28, 0, 3, 0, 1, 0, 0, 1, 1, 1]' : 0.105816}
{'[4, 0, 4, 6, 6, 5, 0, 1, 28, 0, 3, 0, 1, 0, 0, 1, 1, 1]' : 0.106158}
{'[4, 0, 4, 6, 6, 5, 0, 1, 28, 0, 3, 0, 1, 0, 0, 1, 1, 1]' : 0.105871}
{'[4, 0, 4, 6, 6, 5, 0, 1, 28, 0, 3, 0, 1, 0, 0, 1, 1, 1]' : 0.104987}
{'[4, 0, 4, 6, 6, 5, 0, 1, 28, 0, 3, 0, 1, 0, 0, 1, 1, 1]' : 0.103504}
{'[4, 0, 4, 6, 6, 5, 0, 1, 28, 0, 3, 0, 1, 0, 0, 1, 1, 1]' : 0.103606}
{'[4, 0, 4, 6, 6, 5, 0, 1, 28, 0, 3, 0, 1, 0, 0, 1, 1, 1]' : 0.102932}
{'[4, 0, 4, 6, 6, 5, 0, 1, 28, 0, 3, 0, 1, 0, 0, 1, 1, 1]' : 0.101478}
{'[4, 0, 4, 6, 6, 5, 0, 1, 28, 0, 3, 0, 1, 0, 0, 1, 1, 1]' : 0.10442}
{'[4, 0, 4, 6, 6, 5, 0, 1, 28, 0, 3, 0, 1, 0, 0, 1, 1, 1]' : 0.105846}
{'[4, 0, 4, 6, 6, 5, 0, 1, 28, 0, 3, 0, 1, 0, 0, 1, 1, 1]' : 0.105874}
{'[4, 0, 4, 6, 6, 5, 0, 1, 28, 0, 3, 0, 1, 0, 0, 1, 1, 1]' : 0.10595}
{'[4, 0, 4, 6, 6, 5, 0, 1, 28, 0, 3, 0, 1, 0, 0, 1, 1, 1]' : 0.105317}
{'[4, 0, 4, 6, 6, 5, 0, 1, 28, 0, 3, 0, 1, 0, 0, 1, 1, 1]' : 0.106085}

out:
 ["{'[4, 0, 4, 6, 6, 5, 0, 1, 28, 0, 3, 0, 1, 0, 0, 1, 1, 1]' : 0.106701}", "{'[4, 0, 4, 6, 6, 5, 0, 1, 28, 0, 3, 0, 1, 0, 0, 1, 1, 1]' : 0.105911}", "{'[4, 0, 4, 6, 6, 5, 0, 1, 28, 0, 3, 0, 1, 0, 0, 1, 1, 1]' : 0.105889}", "{'[4, 0, 4, 6, 6, 5, 0, 1, 28, 0, 3, 0, 1, 0, 0, 1, 1, 1]' : 0.105887}", "{'[4, 0, 4, 6, 6, 5, 0, 1, 28, 0, 3, 0, 1, 0, 0, 1, 1, 1]' : 0.105863}", "{'[4, 0, 4, 6, 6, 5, 0, 1, 28, 0, 3, 0, 1, 0, 0, 1, 1, 1]' : 0.106003}", "{'[4, 0, 4, 6, 6, 5, 0, 1, 28, 0, 3, 0, 1, 0, 0, 1, 1, 1]' : 0.105891}", "{'[4, 0, 4, 6, 6, 5, 0, 1, 28, 0, 3, 0, 1, 0, 0, 1, 1, 1]' : 0.105863}", "{'[4, 0, 4, 6, 6, 5, 0, 1, 28, 0, 3, 0, 1, 0, 0, 1, 1, 1]' : 0.105865}", "{'[4, 0, 4, 6, 6, 5, 0, 1, 28, 0, 3, 0, 1, 0, 0, 1, 1, 1]' : 0.106023}", "{'[4, 0, 4, 6, 6, 5, 0, 1, 28, 0, 3, 0, 1, 0, 0, 1, 1, 1]' : 0.105876}", "{'[4, 0, 4, 6, 6, 5, 0, 1, 28, 0, 3, 0, 1, 0, 0, 1, 1, 1]' : 0.106148}", "{'[4, 0, 4, 6, 6, 5, 0, 1, 28, 0, 3, 0, 1, 0, 0, 1, 1, 1]' : 0.103947}", "{'[4, 0, 4, 6, 6, 5, 0, 1, 28, 0, 3, 0, 1, 0, 0, 1, 1, 1]' : 0.103621}", "{'[4, 0, 4, 6, 6, 5, 0, 1, 28, 0, 3, 0, 1, 0, 0, 1, 1, 1]' : 0.104222}", "{'[4, 0, 4, 6, 6, 5, 0, 1, 28, 0, 3, 0, 1, 0, 0, 1, 1, 1]' : 0.105871}", "{'[4, 0, 4, 6, 6, 5, 0, 1, 28, 0, 3, 0, 1, 0, 0, 1, 1, 1]' : 0.105816}", "{'[4, 0, 4, 6, 6, 5, 0, 1, 28, 0, 3, 0, 1, 0, 0, 1, 1, 1]' : 0.106158}", "{'[4, 0, 4, 6, 6, 5, 0, 1, 28, 0, 3, 0, 1, 0, 0, 1, 1, 1]' : 0.105871}", "{'[4, 0, 4, 6, 6, 5, 0, 1, 28, 0, 3, 0, 1, 0, 0, 1, 1, 1]' : 0.104987}", "{'[4, 0, 4, 6, 6, 5, 0, 1, 28, 0, 3, 0, 1, 0, 0, 1, 1, 1]' : 0.103504}", "{'[4, 0, 4, 6, 6, 5, 0, 1, 28, 0, 3, 0, 1, 0, 0, 1, 1, 1]' : 0.103606}", "{'[4, 0, 4, 6, 6, 5, 0, 1, 28, 0, 3, 0, 1, 0, 0, 1, 1, 1]' : 0.102932}", "{'[4, 0, 4, 6, 6, 5, 0, 1, 28, 0, 3, 0, 1, 0, 0, 1, 1, 1]' : 0.101478}", "{'[4, 0, 4, 6, 6, 5, 0, 1, 28, 0, 3, 0, 1, 0, 0, 1, 1, 1]' : 0.10442}", "{'[4, 0, 4, 6, 6, 5, 0, 1, 28, 0, 3, 0, 1, 0, 0, 1, 1, 1]' : 0.105846}", "{'[4, 0, 4, 6, 6, 5, 0, 1, 28, 0, 3, 0, 1, 0, 0, 1, 1, 1]' : 0.105874}", "{'[4, 0, 4, 6, 6, 5, 0, 1, 28, 0, 3, 0, 1, 0, 0, 1, 1, 1]' : 0.10595}", "{'[4, 0, 4, 6, 6, 5, 0, 1, 28, 0, 3, 0, 1, 0, 0, 1, 1, 1]' : 0.105317}", "{'[4, 0, 4, 6, 6, 5, 0, 1, 28, 0, 3, 0, 1, 0, 0, 1, 1, 1]' : 0.106085}"]
returning from 'run': {'[4, 0, 4, 6, 6, 5, 0, 1, 28, 0, 3, 0, 1, 0, 0, 1, 1, 1]': ([0.106701, 0.105911, 0.105889, 0.105887, 0.105863, 0.106003, 0.105891, 0.105863, 0.105865, 0.106023, 0.105876, 0.106148, 0.103947, 0.103621, 0.104222, 0.105871, 0.105816, 0.106158, 0.105871, 0.104987, 0.103504, 0.103606, 0.102932, 0.101478, 0.10442, 0.105846, 0.105874, 0.10595, 0.105317, 0.106085], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 0, 4, 6, 6, 5, 0, 1, 28, 0, 3, 0, 1, 0, 0, 1, 1, 1]': ([0.106701, 0.105911, 0.105889, 0.105887, 0.105863, 0.106003, 0.105891, 0.105863, 0.105865, 0.106023, 0.105876, 0.106148, 0.103947, 0.103621, 0.104222, 0.105871, 0.105816, 0.106158, 0.105871, 0.104987, 0.103504, 0.103606, 0.102932, 0.101478, 0.10442, 0.105846, 0.105874, 0.10595, 0.105317, 0.106085], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	6
        Additions: 		364
        Multiplications: 	116
        Divisions: 		0
        Logical: 		0
        Reads: 			757
        Writes: 		96
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest27.exe __orio_perftest27.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest27.exe  
Program Test Output: 
{'[5, 0, 3, 4, 0, 4, 1, 1, 1, 0, 26, 28, 0, 0, 0, 0, 0, 1]' : 0.237829}
{'[5, 0, 3, 4, 0, 4, 1, 1, 1, 0, 26, 28, 0, 0, 0, 0, 0, 1]' : 0.219999}
{'[5, 0, 3, 4, 0, 4, 1, 1, 1, 0, 26, 28, 0, 0, 0, 0, 0, 1]' : 0.204387}
{'[5, 0, 3, 4, 0, 4, 1, 1, 1, 0, 26, 28, 0, 0, 0, 0, 0, 1]' : 0.201752}
{'[5, 0, 3, 4, 0, 4, 1, 1, 1, 0, 26, 28, 0, 0, 0, 0, 0, 1]' : 0.205179}
{'[5, 0, 3, 4, 0, 4, 1, 1, 1, 0, 26, 28, 0, 0, 0, 0, 0, 1]' : 0.211096}
{'[5, 0, 3, 4, 0, 4, 1, 1, 1, 0, 26, 28, 0, 0, 0, 0, 0, 1]' : 0.211143}
{'[5, 0, 3, 4, 0, 4, 1, 1, 1, 0, 26, 28, 0, 0, 0, 0, 0, 1]' : 0.211042}
{'[5, 0, 3, 4, 0, 4, 1, 1, 1, 0, 26, 28, 0, 0, 0, 0, 0, 1]' : 0.211157}
{'[5, 0, 3, 4, 0, 4, 1, 1, 1, 0, 26, 28, 0, 0, 0, 0, 0, 1]' : 0.211165}
{'[5, 0, 3, 4, 0, 4, 1, 1, 1, 0, 26, 28, 0, 0, 0, 0, 0, 1]' : 0.211143}
{'[5, 0, 3, 4, 0, 4, 1, 1, 1, 0, 26, 28, 0, 0, 0, 0, 0, 1]' : 0.211385}
{'[5, 0, 3, 4, 0, 4, 1, 1, 1, 0, 26, 28, 0, 0, 0, 0, 0, 1]' : 0.211138}
{'[5, 0, 3, 4, 0, 4, 1, 1, 1, 0, 26, 28, 0, 0, 0, 0, 0, 1]' : 0.211161}
{'[5, 0, 3, 4, 0, 4, 1, 1, 1, 0, 26, 28, 0, 0, 0, 0, 0, 1]' : 0.211222}
{'[5, 0, 3, 4, 0, 4, 1, 1, 1, 0, 26, 28, 0, 0, 0, 0, 0, 1]' : 0.211171}
{'[5, 0, 3, 4, 0, 4, 1, 1, 1, 0, 26, 28, 0, 0, 0, 0, 0, 1]' : 0.211196}
{'[5, 0, 3, 4, 0, 4, 1, 1, 1, 0, 26, 28, 0, 0, 0, 0, 0, 1]' : 0.211155}
{'[5, 0, 3, 4, 0, 4, 1, 1, 1, 0, 26, 28, 0, 0, 0, 0, 0, 1]' : 0.211166}
{'[5, 0, 3, 4, 0, 4, 1, 1, 1, 0, 26, 28, 0, 0, 0, 0, 0, 1]' : 0.211155}
{'[5, 0, 3, 4, 0, 4, 1, 1, 1, 0, 26, 28, 0, 0, 0, 0, 0, 1]' : 0.211352}
{'[5, 0, 3, 4, 0, 4, 1, 1, 1, 0, 26, 28, 0, 0, 0, 0, 0, 1]' : 0.210277}
{'[5, 0, 3, 4, 0, 4, 1, 1, 1, 0, 26, 28, 0, 0, 0, 0, 0, 1]' : 0.202162}
{'[5, 0, 3, 4, 0, 4, 1, 1, 1, 0, 26, 28, 0, 0, 0, 0, 0, 1]' : 0.205071}
{'[5, 0, 3, 4, 0, 4, 1, 1, 1, 0, 26, 28, 0, 0, 0, 0, 0, 1]' : 0.211213}
{'[5, 0, 3, 4, 0, 4, 1, 1, 1, 0, 26, 28, 0, 0, 0, 0, 0, 1]' : 0.210715}
{'[5, 0, 3, 4, 0, 4, 1, 1, 1, 0, 26, 28, 0, 0, 0, 0, 0, 1]' : 0.211119}
{'[5, 0, 3, 4, 0, 4, 1, 1, 1, 0, 26, 28, 0, 0, 0, 0, 0, 1]' : 0.211156}
{'[5, 0, 3, 4, 0, 4, 1, 1, 1, 0, 26, 28, 0, 0, 0, 0, 0, 1]' : 0.211211}
{'[5, 0, 3, 4, 0, 4, 1, 1, 1, 0, 26, 28, 0, 0, 0, 0, 0, 1]' : 0.211152}

out:
 ["{'[5, 0, 3, 4, 0, 4, 1, 1, 1, 0, 26, 28, 0, 0, 0, 0, 0, 1]' : 0.237829}", "{'[5, 0, 3, 4, 0, 4, 1, 1, 1, 0, 26, 28, 0, 0, 0, 0, 0, 1]' : 0.219999}", "{'[5, 0, 3, 4, 0, 4, 1, 1, 1, 0, 26, 28, 0, 0, 0, 0, 0, 1]' : 0.204387}", "{'[5, 0, 3, 4, 0, 4, 1, 1, 1, 0, 26, 28, 0, 0, 0, 0, 0, 1]' : 0.201752}", "{'[5, 0, 3, 4, 0, 4, 1, 1, 1, 0, 26, 28, 0, 0, 0, 0, 0, 1]' : 0.205179}", "{'[5, 0, 3, 4, 0, 4, 1, 1, 1, 0, 26, 28, 0, 0, 0, 0, 0, 1]' : 0.211096}", "{'[5, 0, 3, 4, 0, 4, 1, 1, 1, 0, 26, 28, 0, 0, 0, 0, 0, 1]' : 0.211143}", "{'[5, 0, 3, 4, 0, 4, 1, 1, 1, 0, 26, 28, 0, 0, 0, 0, 0, 1]' : 0.211042}", "{'[5, 0, 3, 4, 0, 4, 1, 1, 1, 0, 26, 28, 0, 0, 0, 0, 0, 1]' : 0.211157}", "{'[5, 0, 3, 4, 0, 4, 1, 1, 1, 0, 26, 28, 0, 0, 0, 0, 0, 1]' : 0.211165}", "{'[5, 0, 3, 4, 0, 4, 1, 1, 1, 0, 26, 28, 0, 0, 0, 0, 0, 1]' : 0.211143}", "{'[5, 0, 3, 4, 0, 4, 1, 1, 1, 0, 26, 28, 0, 0, 0, 0, 0, 1]' : 0.211385}", "{'[5, 0, 3, 4, 0, 4, 1, 1, 1, 0, 26, 28, 0, 0, 0, 0, 0, 1]' : 0.211138}", "{'[5, 0, 3, 4, 0, 4, 1, 1, 1, 0, 26, 28, 0, 0, 0, 0, 0, 1]' : 0.211161}", "{'[5, 0, 3, 4, 0, 4, 1, 1, 1, 0, 26, 28, 0, 0, 0, 0, 0, 1]' : 0.211222}", "{'[5, 0, 3, 4, 0, 4, 1, 1, 1, 0, 26, 28, 0, 0, 0, 0, 0, 1]' : 0.211171}", "{'[5, 0, 3, 4, 0, 4, 1, 1, 1, 0, 26, 28, 0, 0, 0, 0, 0, 1]' : 0.211196}", "{'[5, 0, 3, 4, 0, 4, 1, 1, 1, 0, 26, 28, 0, 0, 0, 0, 0, 1]' : 0.211155}", "{'[5, 0, 3, 4, 0, 4, 1, 1, 1, 0, 26, 28, 0, 0, 0, 0, 0, 1]' : 0.211166}", "{'[5, 0, 3, 4, 0, 4, 1, 1, 1, 0, 26, 28, 0, 0, 0, 0, 0, 1]' : 0.211155}", "{'[5, 0, 3, 4, 0, 4, 1, 1, 1, 0, 26, 28, 0, 0, 0, 0, 0, 1]' : 0.211352}", "{'[5, 0, 3, 4, 0, 4, 1, 1, 1, 0, 26, 28, 0, 0, 0, 0, 0, 1]' : 0.210277}", "{'[5, 0, 3, 4, 0, 4, 1, 1, 1, 0, 26, 28, 0, 0, 0, 0, 0, 1]' : 0.202162}", "{'[5, 0, 3, 4, 0, 4, 1, 1, 1, 0, 26, 28, 0, 0, 0, 0, 0, 1]' : 0.205071}", "{'[5, 0, 3, 4, 0, 4, 1, 1, 1, 0, 26, 28, 0, 0, 0, 0, 0, 1]' : 0.211213}", "{'[5, 0, 3, 4, 0, 4, 1, 1, 1, 0, 26, 28, 0, 0, 0, 0, 0, 1]' : 0.210715}", "{'[5, 0, 3, 4, 0, 4, 1, 1, 1, 0, 26, 28, 0, 0, 0, 0, 0, 1]' : 0.211119}", "{'[5, 0, 3, 4, 0, 4, 1, 1, 1, 0, 26, 28, 0, 0, 0, 0, 0, 1]' : 0.211156}", "{'[5, 0, 3, 4, 0, 4, 1, 1, 1, 0, 26, 28, 0, 0, 0, 0, 0, 1]' : 0.211211}", "{'[5, 0, 3, 4, 0, 4, 1, 1, 1, 0, 26, 28, 0, 0, 0, 0, 0, 1]' : 0.211152}"]
returning from 'run': {'[5, 0, 3, 4, 0, 4, 1, 1, 1, 0, 26, 28, 0, 0, 0, 0, 0, 1]': ([0.237829, 0.219999, 0.204387, 0.201752, 0.205179, 0.211096, 0.211143, 0.211042, 0.211157, 0.211165, 0.211143, 0.211385, 0.211138, 0.211161, 0.211222, 0.211171, 0.211196, 0.211155, 0.211166, 0.211155, 0.211352, 0.210277, 0.202162, 0.205071, 0.211213, 0.210715, 0.211119, 0.211156, 0.211211, 0.211152], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 0, 3, 4, 0, 4, 1, 1, 1, 0, 26, 28, 0, 0, 0, 0, 0, 1]': ([0.237829, 0.219999, 0.204387, 0.201752, 0.205179, 0.211096, 0.211143, 0.211042, 0.211157, 0.211165, 0.211143, 0.211385, 0.211138, 0.211161, 0.211222, 0.211171, 0.211196, 0.211155, 0.211166, 0.211155, 0.211352, 0.210277, 0.202162, 0.205071, 0.211213, 0.210715, 0.211119, 0.211156, 0.211211, 0.211152], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	98
        Max loop nest depth: 	5
        Additions: 		4837
        Multiplications: 	1692
        Divisions: 		0
        Logical: 		0
        Reads: 			9542
        Writes: 		1825
        Comparisons:		98
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest28.exe __orio_perftest28.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest28.exe  
Program Test Output: 
{'[0, 6, 0, 6, 5, 1, 1, 1, 26, 13, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.15814}
{'[0, 6, 0, 6, 5, 1, 1, 1, 26, 13, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.158188}
{'[0, 6, 0, 6, 5, 1, 1, 1, 26, 13, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.155206}
{'[0, 6, 0, 6, 5, 1, 1, 1, 26, 13, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.139918}
{'[0, 6, 0, 6, 5, 1, 1, 1, 26, 13, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.140063}
{'[0, 6, 0, 6, 5, 1, 1, 1, 26, 13, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.140274}
{'[0, 6, 0, 6, 5, 1, 1, 1, 26, 13, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.140005}
{'[0, 6, 0, 6, 5, 1, 1, 1, 26, 13, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.140396}
{'[0, 6, 0, 6, 5, 1, 1, 1, 26, 13, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.140469}
{'[0, 6, 0, 6, 5, 1, 1, 1, 26, 13, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.141884}
{'[0, 6, 0, 6, 5, 1, 1, 1, 26, 13, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.140889}
{'[0, 6, 0, 6, 5, 1, 1, 1, 26, 13, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.140022}
{'[0, 6, 0, 6, 5, 1, 1, 1, 26, 13, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.140096}
{'[0, 6, 0, 6, 5, 1, 1, 1, 26, 13, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.139896}
{'[0, 6, 0, 6, 5, 1, 1, 1, 26, 13, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.14027}
{'[0, 6, 0, 6, 5, 1, 1, 1, 26, 13, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.140225}
{'[0, 6, 0, 6, 5, 1, 1, 1, 26, 13, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.140195}
{'[0, 6, 0, 6, 5, 1, 1, 1, 26, 13, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.140269}
{'[0, 6, 0, 6, 5, 1, 1, 1, 26, 13, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.140362}
{'[0, 6, 0, 6, 5, 1, 1, 1, 26, 13, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.140128}
{'[0, 6, 0, 6, 5, 1, 1, 1, 26, 13, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.141937}
{'[0, 6, 0, 6, 5, 1, 1, 1, 26, 13, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.140842}
{'[0, 6, 0, 6, 5, 1, 1, 1, 26, 13, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.14004}
{'[0, 6, 0, 6, 5, 1, 1, 1, 26, 13, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.140359}
{'[0, 6, 0, 6, 5, 1, 1, 1, 26, 13, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.140689}
{'[0, 6, 0, 6, 5, 1, 1, 1, 26, 13, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.140508}
{'[0, 6, 0, 6, 5, 1, 1, 1, 26, 13, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.14028}
{'[0, 6, 0, 6, 5, 1, 1, 1, 26, 13, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.140361}
{'[0, 6, 0, 6, 5, 1, 1, 1, 26, 13, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.140025}
{'[0, 6, 0, 6, 5, 1, 1, 1, 26, 13, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.140378}

out:
 ["{'[0, 6, 0, 6, 5, 1, 1, 1, 26, 13, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.15814}", "{'[0, 6, 0, 6, 5, 1, 1, 1, 26, 13, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.158188}", "{'[0, 6, 0, 6, 5, 1, 1, 1, 26, 13, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.155206}", "{'[0, 6, 0, 6, 5, 1, 1, 1, 26, 13, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.139918}", "{'[0, 6, 0, 6, 5, 1, 1, 1, 26, 13, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.140063}", "{'[0, 6, 0, 6, 5, 1, 1, 1, 26, 13, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.140274}", "{'[0, 6, 0, 6, 5, 1, 1, 1, 26, 13, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.140005}", "{'[0, 6, 0, 6, 5, 1, 1, 1, 26, 13, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.140396}", "{'[0, 6, 0, 6, 5, 1, 1, 1, 26, 13, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.140469}", "{'[0, 6, 0, 6, 5, 1, 1, 1, 26, 13, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.141884}", "{'[0, 6, 0, 6, 5, 1, 1, 1, 26, 13, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.140889}", "{'[0, 6, 0, 6, 5, 1, 1, 1, 26, 13, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.140022}", "{'[0, 6, 0, 6, 5, 1, 1, 1, 26, 13, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.140096}", "{'[0, 6, 0, 6, 5, 1, 1, 1, 26, 13, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.139896}", "{'[0, 6, 0, 6, 5, 1, 1, 1, 26, 13, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.14027}", "{'[0, 6, 0, 6, 5, 1, 1, 1, 26, 13, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.140225}", "{'[0, 6, 0, 6, 5, 1, 1, 1, 26, 13, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.140195}", "{'[0, 6, 0, 6, 5, 1, 1, 1, 26, 13, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.140269}", "{'[0, 6, 0, 6, 5, 1, 1, 1, 26, 13, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.140362}", "{'[0, 6, 0, 6, 5, 1, 1, 1, 26, 13, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.140128}", "{'[0, 6, 0, 6, 5, 1, 1, 1, 26, 13, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.141937}", "{'[0, 6, 0, 6, 5, 1, 1, 1, 26, 13, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.140842}", "{'[0, 6, 0, 6, 5, 1, 1, 1, 26, 13, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.14004}", "{'[0, 6, 0, 6, 5, 1, 1, 1, 26, 13, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.140359}", "{'[0, 6, 0, 6, 5, 1, 1, 1, 26, 13, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.140689}", "{'[0, 6, 0, 6, 5, 1, 1, 1, 26, 13, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.140508}", "{'[0, 6, 0, 6, 5, 1, 1, 1, 26, 13, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.14028}", "{'[0, 6, 0, 6, 5, 1, 1, 1, 26, 13, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.140361}", "{'[0, 6, 0, 6, 5, 1, 1, 1, 26, 13, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.140025}", "{'[0, 6, 0, 6, 5, 1, 1, 1, 26, 13, 0, 15, 2, 0, 0, 1, 0, 1]' : 0.140378}"]
returning from 'run': {'[0, 6, 0, 6, 5, 1, 1, 1, 26, 13, 0, 15, 2, 0, 0, 1, 0, 1]': ([0.15814, 0.158188, 0.155206, 0.139918, 0.140063, 0.140274, 0.140005, 0.140396, 0.140469, 0.141884, 0.140889, 0.140022, 0.140096, 0.139896, 0.14027, 0.140225, 0.140195, 0.140269, 0.140362, 0.140128, 0.141937, 0.140842, 0.14004, 0.140359, 0.140689, 0.140508, 0.14028, 0.140361, 0.140025, 0.140378], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 0, 6, 5, 1, 1, 1, 26, 13, 0, 15, 2, 0, 0, 1, 0, 1]': ([0.15814, 0.158188, 0.155206, 0.139918, 0.140063, 0.140274, 0.140005, 0.140396, 0.140469, 0.141884, 0.140889, 0.140022, 0.140096, 0.139896, 0.14027, 0.140225, 0.140195, 0.140269, 0.140362, 0.140128, 0.141937, 0.140842, 0.14004, 0.140359, 0.140689, 0.140508, 0.14028, 0.140361, 0.140025, 0.140378], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	48
        Max loop nest depth: 	6
        Additions: 		5012
        Multiplications: 	1122
        Divisions: 		0
        Logical: 		0
        Reads: 			7278
        Writes: 		732
        Comparisons:		48
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest29.exe __orio_perftest29.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest29.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest29.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest29.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest29.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	6
        Additions: 		188
        Multiplications: 	64
        Divisions: 		0
        Logical: 		0
        Reads: 			416
        Writes: 		90
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest30.exe __orio_perftest30.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest30.exe  
Program Test Output: 
{'[4, 6, 1, 4, 0, 1, 0, 0, 9, 0, 23, 5, 0, 0, 0, 1, 0, 1]' : 0.227452}
{'[4, 6, 1, 4, 0, 1, 0, 0, 9, 0, 23, 5, 0, 0, 0, 1, 0, 1]' : 0.224338}
{'[4, 6, 1, 4, 0, 1, 0, 0, 9, 0, 23, 5, 0, 0, 0, 1, 0, 1]' : 0.190626}
{'[4, 6, 1, 4, 0, 1, 0, 0, 9, 0, 23, 5, 0, 0, 0, 1, 0, 1]' : 0.190104}
{'[4, 6, 1, 4, 0, 1, 0, 0, 9, 0, 23, 5, 0, 0, 0, 1, 0, 1]' : 0.190178}
{'[4, 6, 1, 4, 0, 1, 0, 0, 9, 0, 23, 5, 0, 0, 0, 1, 0, 1]' : 0.190185}
{'[4, 6, 1, 4, 0, 1, 0, 0, 9, 0, 23, 5, 0, 0, 0, 1, 0, 1]' : 0.19019}
{'[4, 6, 1, 4, 0, 1, 0, 0, 9, 0, 23, 5, 0, 0, 0, 1, 0, 1]' : 0.190176}
{'[4, 6, 1, 4, 0, 1, 0, 0, 9, 0, 23, 5, 0, 0, 0, 1, 0, 1]' : 0.190466}
{'[4, 6, 1, 4, 0, 1, 0, 0, 9, 0, 23, 5, 0, 0, 0, 1, 0, 1]' : 0.190846}
{'[4, 6, 1, 4, 0, 1, 0, 0, 9, 0, 23, 5, 0, 0, 0, 1, 0, 1]' : 0.190427}
{'[4, 6, 1, 4, 0, 1, 0, 0, 9, 0, 23, 5, 0, 0, 0, 1, 0, 1]' : 0.190361}
{'[4, 6, 1, 4, 0, 1, 0, 0, 9, 0, 23, 5, 0, 0, 0, 1, 0, 1]' : 0.190201}
{'[4, 6, 1, 4, 0, 1, 0, 0, 9, 0, 23, 5, 0, 0, 0, 1, 0, 1]' : 0.190183}
{'[4, 6, 1, 4, 0, 1, 0, 0, 9, 0, 23, 5, 0, 0, 0, 1, 0, 1]' : 0.190223}
{'[4, 6, 1, 4, 0, 1, 0, 0, 9, 0, 23, 5, 0, 0, 0, 1, 0, 1]' : 0.19043}
{'[4, 6, 1, 4, 0, 1, 0, 0, 9, 0, 23, 5, 0, 0, 0, 1, 0, 1]' : 0.190312}
{'[4, 6, 1, 4, 0, 1, 0, 0, 9, 0, 23, 5, 0, 0, 0, 1, 0, 1]' : 0.190973}
{'[4, 6, 1, 4, 0, 1, 0, 0, 9, 0, 23, 5, 0, 0, 0, 1, 0, 1]' : 0.190451}
{'[4, 6, 1, 4, 0, 1, 0, 0, 9, 0, 23, 5, 0, 0, 0, 1, 0, 1]' : 0.190262}
{'[4, 6, 1, 4, 0, 1, 0, 0, 9, 0, 23, 5, 0, 0, 0, 1, 0, 1]' : 0.190346}
{'[4, 6, 1, 4, 0, 1, 0, 0, 9, 0, 23, 5, 0, 0, 0, 1, 0, 1]' : 0.190522}
{'[4, 6, 1, 4, 0, 1, 0, 0, 9, 0, 23, 5, 0, 0, 0, 1, 0, 1]' : 0.190307}
{'[4, 6, 1, 4, 0, 1, 0, 0, 9, 0, 23, 5, 0, 0, 0, 1, 0, 1]' : 0.190495}
{'[4, 6, 1, 4, 0, 1, 0, 0, 9, 0, 23, 5, 0, 0, 0, 1, 0, 1]' : 0.190271}
{'[4, 6, 1, 4, 0, 1, 0, 0, 9, 0, 23, 5, 0, 0, 0, 1, 0, 1]' : 0.191076}
{'[4, 6, 1, 4, 0, 1, 0, 0, 9, 0, 23, 5, 0, 0, 0, 1, 0, 1]' : 0.190618}
{'[4, 6, 1, 4, 0, 1, 0, 0, 9, 0, 23, 5, 0, 0, 0, 1, 0, 1]' : 0.190279}
{'[4, 6, 1, 4, 0, 1, 0, 0, 9, 0, 23, 5, 0, 0, 0, 1, 0, 1]' : 0.190253}
{'[4, 6, 1, 4, 0, 1, 0, 0, 9, 0, 23, 5, 0, 0, 0, 1, 0, 1]' : 0.190492}

out:
 ["{'[4, 6, 1, 4, 0, 1, 0, 0, 9, 0, 23, 5, 0, 0, 0, 1, 0, 1]' : 0.227452}", "{'[4, 6, 1, 4, 0, 1, 0, 0, 9, 0, 23, 5, 0, 0, 0, 1, 0, 1]' : 0.224338}", "{'[4, 6, 1, 4, 0, 1, 0, 0, 9, 0, 23, 5, 0, 0, 0, 1, 0, 1]' : 0.190626}", "{'[4, 6, 1, 4, 0, 1, 0, 0, 9, 0, 23, 5, 0, 0, 0, 1, 0, 1]' : 0.190104}", "{'[4, 6, 1, 4, 0, 1, 0, 0, 9, 0, 23, 5, 0, 0, 0, 1, 0, 1]' : 0.190178}", "{'[4, 6, 1, 4, 0, 1, 0, 0, 9, 0, 23, 5, 0, 0, 0, 1, 0, 1]' : 0.190185}", "{'[4, 6, 1, 4, 0, 1, 0, 0, 9, 0, 23, 5, 0, 0, 0, 1, 0, 1]' : 0.19019}", "{'[4, 6, 1, 4, 0, 1, 0, 0, 9, 0, 23, 5, 0, 0, 0, 1, 0, 1]' : 0.190176}", "{'[4, 6, 1, 4, 0, 1, 0, 0, 9, 0, 23, 5, 0, 0, 0, 1, 0, 1]' : 0.190466}", "{'[4, 6, 1, 4, 0, 1, 0, 0, 9, 0, 23, 5, 0, 0, 0, 1, 0, 1]' : 0.190846}", "{'[4, 6, 1, 4, 0, 1, 0, 0, 9, 0, 23, 5, 0, 0, 0, 1, 0, 1]' : 0.190427}", "{'[4, 6, 1, 4, 0, 1, 0, 0, 9, 0, 23, 5, 0, 0, 0, 1, 0, 1]' : 0.190361}", "{'[4, 6, 1, 4, 0, 1, 0, 0, 9, 0, 23, 5, 0, 0, 0, 1, 0, 1]' : 0.190201}", "{'[4, 6, 1, 4, 0, 1, 0, 0, 9, 0, 23, 5, 0, 0, 0, 1, 0, 1]' : 0.190183}", "{'[4, 6, 1, 4, 0, 1, 0, 0, 9, 0, 23, 5, 0, 0, 0, 1, 0, 1]' : 0.190223}", "{'[4, 6, 1, 4, 0, 1, 0, 0, 9, 0, 23, 5, 0, 0, 0, 1, 0, 1]' : 0.19043}", "{'[4, 6, 1, 4, 0, 1, 0, 0, 9, 0, 23, 5, 0, 0, 0, 1, 0, 1]' : 0.190312}", "{'[4, 6, 1, 4, 0, 1, 0, 0, 9, 0, 23, 5, 0, 0, 0, 1, 0, 1]' : 0.190973}", "{'[4, 6, 1, 4, 0, 1, 0, 0, 9, 0, 23, 5, 0, 0, 0, 1, 0, 1]' : 0.190451}", "{'[4, 6, 1, 4, 0, 1, 0, 0, 9, 0, 23, 5, 0, 0, 0, 1, 0, 1]' : 0.190262}", "{'[4, 6, 1, 4, 0, 1, 0, 0, 9, 0, 23, 5, 0, 0, 0, 1, 0, 1]' : 0.190346}", "{'[4, 6, 1, 4, 0, 1, 0, 0, 9, 0, 23, 5, 0, 0, 0, 1, 0, 1]' : 0.190522}", "{'[4, 6, 1, 4, 0, 1, 0, 0, 9, 0, 23, 5, 0, 0, 0, 1, 0, 1]' : 0.190307}", "{'[4, 6, 1, 4, 0, 1, 0, 0, 9, 0, 23, 5, 0, 0, 0, 1, 0, 1]' : 0.190495}", "{'[4, 6, 1, 4, 0, 1, 0, 0, 9, 0, 23, 5, 0, 0, 0, 1, 0, 1]' : 0.190271}", "{'[4, 6, 1, 4, 0, 1, 0, 0, 9, 0, 23, 5, 0, 0, 0, 1, 0, 1]' : 0.191076}", "{'[4, 6, 1, 4, 0, 1, 0, 0, 9, 0, 23, 5, 0, 0, 0, 1, 0, 1]' : 0.190618}", "{'[4, 6, 1, 4, 0, 1, 0, 0, 9, 0, 23, 5, 0, 0, 0, 1, 0, 1]' : 0.190279}", "{'[4, 6, 1, 4, 0, 1, 0, 0, 9, 0, 23, 5, 0, 0, 0, 1, 0, 1]' : 0.190253}", "{'[4, 6, 1, 4, 0, 1, 0, 0, 9, 0, 23, 5, 0, 0, 0, 1, 0, 1]' : 0.190492}"]
returning from 'run': {'[4, 6, 1, 4, 0, 1, 0, 0, 9, 0, 23, 5, 0, 0, 0, 1, 0, 1]': ([0.227452, 0.224338, 0.190626, 0.190104, 0.190178, 0.190185, 0.19019, 0.190176, 0.190466, 0.190846, 0.190427, 0.190361, 0.190201, 0.190183, 0.190223, 0.19043, 0.190312, 0.190973, 0.190451, 0.190262, 0.190346, 0.190522, 0.190307, 0.190495, 0.190271, 0.191076, 0.190618, 0.190279, 0.190253, 0.190492], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 6, 1, 4, 0, 1, 0, 0, 9, 0, 23, 5, 0, 0, 0, 1, 0, 1]': ([0.227452, 0.224338, 0.190626, 0.190104, 0.190178, 0.190185, 0.19019, 0.190176, 0.190466, 0.190846, 0.190427, 0.190361, 0.190201, 0.190183, 0.190223, 0.19043, 0.190312, 0.190973, 0.190451, 0.190262, 0.190346, 0.190522, 0.190307, 0.190495, 0.190271, 0.191076, 0.190618, 0.190279, 0.190253, 0.190492], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		178
        Multiplications: 	52
        Divisions: 		0
        Logical: 		0
        Reads: 			403
        Writes: 		82
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest31.exe __orio_perftest31.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest31.exe  
Program Test Output: 
{'[0, 0, 2, 3, 0, 5, 0, 0, 15, 11, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.131503}
{'[0, 0, 2, 3, 0, 5, 0, 0, 15, 11, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.127869}
{'[0, 0, 2, 3, 0, 5, 0, 0, 15, 11, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.127483}
{'[0, 0, 2, 3, 0, 5, 0, 0, 15, 11, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.127538}
{'[0, 0, 2, 3, 0, 5, 0, 0, 15, 11, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.127613}
{'[0, 0, 2, 3, 0, 5, 0, 0, 15, 11, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.127508}
{'[0, 0, 2, 3, 0, 5, 0, 0, 15, 11, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.127568}
{'[0, 0, 2, 3, 0, 5, 0, 0, 15, 11, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.12783}
{'[0, 0, 2, 3, 0, 5, 0, 0, 15, 11, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.127698}
{'[0, 0, 2, 3, 0, 5, 0, 0, 15, 11, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.127704}
{'[0, 0, 2, 3, 0, 5, 0, 0, 15, 11, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.12747}
{'[0, 0, 2, 3, 0, 5, 0, 0, 15, 11, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.127551}
{'[0, 0, 2, 3, 0, 5, 0, 0, 15, 11, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.12785}
{'[0, 0, 2, 3, 0, 5, 0, 0, 15, 11, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.12772}
{'[0, 0, 2, 3, 0, 5, 0, 0, 15, 11, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.127425}
{'[0, 0, 2, 3, 0, 5, 0, 0, 15, 11, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.127445}
{'[0, 0, 2, 3, 0, 5, 0, 0, 15, 11, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.127525}
{'[0, 0, 2, 3, 0, 5, 0, 0, 15, 11, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.127712}
{'[0, 0, 2, 3, 0, 5, 0, 0, 15, 11, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.127677}
{'[0, 0, 2, 3, 0, 5, 0, 0, 15, 11, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.127754}
{'[0, 0, 2, 3, 0, 5, 0, 0, 15, 11, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.12783}
{'[0, 0, 2, 3, 0, 5, 0, 0, 15, 11, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.127723}
{'[0, 0, 2, 3, 0, 5, 0, 0, 15, 11, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.127691}
{'[0, 0, 2, 3, 0, 5, 0, 0, 15, 11, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.12763}
{'[0, 0, 2, 3, 0, 5, 0, 0, 15, 11, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.127571}
{'[0, 0, 2, 3, 0, 5, 0, 0, 15, 11, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.127758}
{'[0, 0, 2, 3, 0, 5, 0, 0, 15, 11, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.127429}
{'[0, 0, 2, 3, 0, 5, 0, 0, 15, 11, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.127831}
{'[0, 0, 2, 3, 0, 5, 0, 0, 15, 11, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.127567}
{'[0, 0, 2, 3, 0, 5, 0, 0, 15, 11, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.127856}

out:
 ["{'[0, 0, 2, 3, 0, 5, 0, 0, 15, 11, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.131503}", "{'[0, 0, 2, 3, 0, 5, 0, 0, 15, 11, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.127869}", "{'[0, 0, 2, 3, 0, 5, 0, 0, 15, 11, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.127483}", "{'[0, 0, 2, 3, 0, 5, 0, 0, 15, 11, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.127538}", "{'[0, 0, 2, 3, 0, 5, 0, 0, 15, 11, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.127613}", "{'[0, 0, 2, 3, 0, 5, 0, 0, 15, 11, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.127508}", "{'[0, 0, 2, 3, 0, 5, 0, 0, 15, 11, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.127568}", "{'[0, 0, 2, 3, 0, 5, 0, 0, 15, 11, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.12783}", "{'[0, 0, 2, 3, 0, 5, 0, 0, 15, 11, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.127698}", "{'[0, 0, 2, 3, 0, 5, 0, 0, 15, 11, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.127704}", "{'[0, 0, 2, 3, 0, 5, 0, 0, 15, 11, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.12747}", "{'[0, 0, 2, 3, 0, 5, 0, 0, 15, 11, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.127551}", "{'[0, 0, 2, 3, 0, 5, 0, 0, 15, 11, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.12785}", "{'[0, 0, 2, 3, 0, 5, 0, 0, 15, 11, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.12772}", "{'[0, 0, 2, 3, 0, 5, 0, 0, 15, 11, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.127425}", "{'[0, 0, 2, 3, 0, 5, 0, 0, 15, 11, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.127445}", "{'[0, 0, 2, 3, 0, 5, 0, 0, 15, 11, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.127525}", "{'[0, 0, 2, 3, 0, 5, 0, 0, 15, 11, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.127712}", "{'[0, 0, 2, 3, 0, 5, 0, 0, 15, 11, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.127677}", "{'[0, 0, 2, 3, 0, 5, 0, 0, 15, 11, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.127754}", "{'[0, 0, 2, 3, 0, 5, 0, 0, 15, 11, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.12783}", "{'[0, 0, 2, 3, 0, 5, 0, 0, 15, 11, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.127723}", "{'[0, 0, 2, 3, 0, 5, 0, 0, 15, 11, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.127691}", "{'[0, 0, 2, 3, 0, 5, 0, 0, 15, 11, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.12763}", "{'[0, 0, 2, 3, 0, 5, 0, 0, 15, 11, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.127571}", "{'[0, 0, 2, 3, 0, 5, 0, 0, 15, 11, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.127758}", "{'[0, 0, 2, 3, 0, 5, 0, 0, 15, 11, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.127429}", "{'[0, 0, 2, 3, 0, 5, 0, 0, 15, 11, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.127831}", "{'[0, 0, 2, 3, 0, 5, 0, 0, 15, 11, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.127567}", "{'[0, 0, 2, 3, 0, 5, 0, 0, 15, 11, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.127856}"]
returning from 'run': {'[0, 0, 2, 3, 0, 5, 0, 0, 15, 11, 0, 0, 0, 0, 0, 0, 0, 0]': ([0.131503, 0.127869, 0.127483, 0.127538, 0.127613, 0.127508, 0.127568, 0.12783, 0.127698, 0.127704, 0.12747, 0.127551, 0.12785, 0.12772, 0.127425, 0.127445, 0.127525, 0.127712, 0.127677, 0.127754, 0.12783, 0.127723, 0.127691, 0.12763, 0.127571, 0.127758, 0.127429, 0.127831, 0.127567, 0.127856], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 2, 3, 0, 5, 0, 0, 15, 11, 0, 0, 0, 0, 0, 0, 0, 0]': ([0.131503, 0.127869, 0.127483, 0.127538, 0.127613, 0.127508, 0.127568, 0.12783, 0.127698, 0.127704, 0.12747, 0.127551, 0.12785, 0.12772, 0.127425, 0.127445, 0.127525, 0.127712, 0.127677, 0.127754, 0.12783, 0.127723, 0.127691, 0.12763, 0.127571, 0.127758, 0.127429, 0.127831, 0.127567, 0.127856], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = kkk
Code stats:
        Number of loops: 	80
        Max loop nest depth: 	6
        Additions: 		9962
        Multiplications: 	2852
        Divisions: 		0
        Logical: 		0
        Reads: 			15242
        Writes: 		1739
        Comparisons:		80
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest32.exe __orio_perftest32.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest32.exe  
Program Test Output: 
{'[5, 6, 4, 6, 6, 2, 0, 0, 21, 29, 27, 0, 0, 1, 1, 0, 0, 1]' : 0.198238}
{'[5, 6, 4, 6, 6, 2, 0, 0, 21, 29, 27, 0, 0, 1, 1, 0, 0, 1]' : 0.19641}
{'[5, 6, 4, 6, 6, 2, 0, 0, 21, 29, 27, 0, 0, 1, 1, 0, 0, 1]' : 0.196483}
{'[5, 6, 4, 6, 6, 2, 0, 0, 21, 29, 27, 0, 0, 1, 1, 0, 0, 1]' : 0.195298}
{'[5, 6, 4, 6, 6, 2, 0, 0, 21, 29, 27, 0, 0, 1, 1, 0, 0, 1]' : 0.196689}
{'[5, 6, 4, 6, 6, 2, 0, 0, 21, 29, 27, 0, 0, 1, 1, 0, 0, 1]' : 0.192685}
{'[5, 6, 4, 6, 6, 2, 0, 0, 21, 29, 27, 0, 0, 1, 1, 0, 0, 1]' : 0.192495}
{'[5, 6, 4, 6, 6, 2, 0, 0, 21, 29, 27, 0, 0, 1, 1, 0, 0, 1]' : 0.192073}
{'[5, 6, 4, 6, 6, 2, 0, 0, 21, 29, 27, 0, 0, 1, 1, 0, 0, 1]' : 0.192837}
{'[5, 6, 4, 6, 6, 2, 0, 0, 21, 29, 27, 0, 0, 1, 1, 0, 0, 1]' : 0.1937}
{'[5, 6, 4, 6, 6, 2, 0, 0, 21, 29, 27, 0, 0, 1, 1, 0, 0, 1]' : 0.192514}
{'[5, 6, 4, 6, 6, 2, 0, 0, 21, 29, 27, 0, 0, 1, 1, 0, 0, 1]' : 0.196389}
{'[5, 6, 4, 6, 6, 2, 0, 0, 21, 29, 27, 0, 0, 1, 1, 0, 0, 1]' : 0.191297}
{'[5, 6, 4, 6, 6, 2, 0, 0, 21, 29, 27, 0, 0, 1, 1, 0, 0, 1]' : 0.190871}
{'[5, 6, 4, 6, 6, 2, 0, 0, 21, 29, 27, 0, 0, 1, 1, 0, 0, 1]' : 0.190103}
{'[5, 6, 4, 6, 6, 2, 0, 0, 21, 29, 27, 0, 0, 1, 1, 0, 0, 1]' : 0.192103}
{'[5, 6, 4, 6, 6, 2, 0, 0, 21, 29, 27, 0, 0, 1, 1, 0, 0, 1]' : 0.194029}
{'[5, 6, 4, 6, 6, 2, 0, 0, 21, 29, 27, 0, 0, 1, 1, 0, 0, 1]' : 0.190829}
{'[5, 6, 4, 6, 6, 2, 0, 0, 21, 29, 27, 0, 0, 1, 1, 0, 0, 1]' : 0.191634}
{'[5, 6, 4, 6, 6, 2, 0, 0, 21, 29, 27, 0, 0, 1, 1, 0, 0, 1]' : 0.191632}
{'[5, 6, 4, 6, 6, 2, 0, 0, 21, 29, 27, 0, 0, 1, 1, 0, 0, 1]' : 0.193644}
{'[5, 6, 4, 6, 6, 2, 0, 0, 21, 29, 27, 0, 0, 1, 1, 0, 0, 1]' : 0.191453}
{'[5, 6, 4, 6, 6, 2, 0, 0, 21, 29, 27, 0, 0, 1, 1, 0, 0, 1]' : 0.195506}
{'[5, 6, 4, 6, 6, 2, 0, 0, 21, 29, 27, 0, 0, 1, 1, 0, 0, 1]' : 0.191963}
{'[5, 6, 4, 6, 6, 2, 0, 0, 21, 29, 27, 0, 0, 1, 1, 0, 0, 1]' : 0.193467}
{'[5, 6, 4, 6, 6, 2, 0, 0, 21, 29, 27, 0, 0, 1, 1, 0, 0, 1]' : 0.194743}
{'[5, 6, 4, 6, 6, 2, 0, 0, 21, 29, 27, 0, 0, 1, 1, 0, 0, 1]' : 0.195897}
{'[5, 6, 4, 6, 6, 2, 0, 0, 21, 29, 27, 0, 0, 1, 1, 0, 0, 1]' : 0.193861}
{'[5, 6, 4, 6, 6, 2, 0, 0, 21, 29, 27, 0, 0, 1, 1, 0, 0, 1]' : 0.192941}
{'[5, 6, 4, 6, 6, 2, 0, 0, 21, 29, 27, 0, 0, 1, 1, 0, 0, 1]' : 0.193013}

out:
 ["{'[5, 6, 4, 6, 6, 2, 0, 0, 21, 29, 27, 0, 0, 1, 1, 0, 0, 1]' : 0.198238}", "{'[5, 6, 4, 6, 6, 2, 0, 0, 21, 29, 27, 0, 0, 1, 1, 0, 0, 1]' : 0.19641}", "{'[5, 6, 4, 6, 6, 2, 0, 0, 21, 29, 27, 0, 0, 1, 1, 0, 0, 1]' : 0.196483}", "{'[5, 6, 4, 6, 6, 2, 0, 0, 21, 29, 27, 0, 0, 1, 1, 0, 0, 1]' : 0.195298}", "{'[5, 6, 4, 6, 6, 2, 0, 0, 21, 29, 27, 0, 0, 1, 1, 0, 0, 1]' : 0.196689}", "{'[5, 6, 4, 6, 6, 2, 0, 0, 21, 29, 27, 0, 0, 1, 1, 0, 0, 1]' : 0.192685}", "{'[5, 6, 4, 6, 6, 2, 0, 0, 21, 29, 27, 0, 0, 1, 1, 0, 0, 1]' : 0.192495}", "{'[5, 6, 4, 6, 6, 2, 0, 0, 21, 29, 27, 0, 0, 1, 1, 0, 0, 1]' : 0.192073}", "{'[5, 6, 4, 6, 6, 2, 0, 0, 21, 29, 27, 0, 0, 1, 1, 0, 0, 1]' : 0.192837}", "{'[5, 6, 4, 6, 6, 2, 0, 0, 21, 29, 27, 0, 0, 1, 1, 0, 0, 1]' : 0.1937}", "{'[5, 6, 4, 6, 6, 2, 0, 0, 21, 29, 27, 0, 0, 1, 1, 0, 0, 1]' : 0.192514}", "{'[5, 6, 4, 6, 6, 2, 0, 0, 21, 29, 27, 0, 0, 1, 1, 0, 0, 1]' : 0.196389}", "{'[5, 6, 4, 6, 6, 2, 0, 0, 21, 29, 27, 0, 0, 1, 1, 0, 0, 1]' : 0.191297}", "{'[5, 6, 4, 6, 6, 2, 0, 0, 21, 29, 27, 0, 0, 1, 1, 0, 0, 1]' : 0.190871}", "{'[5, 6, 4, 6, 6, 2, 0, 0, 21, 29, 27, 0, 0, 1, 1, 0, 0, 1]' : 0.190103}", "{'[5, 6, 4, 6, 6, 2, 0, 0, 21, 29, 27, 0, 0, 1, 1, 0, 0, 1]' : 0.192103}", "{'[5, 6, 4, 6, 6, 2, 0, 0, 21, 29, 27, 0, 0, 1, 1, 0, 0, 1]' : 0.194029}", "{'[5, 6, 4, 6, 6, 2, 0, 0, 21, 29, 27, 0, 0, 1, 1, 0, 0, 1]' : 0.190829}", "{'[5, 6, 4, 6, 6, 2, 0, 0, 21, 29, 27, 0, 0, 1, 1, 0, 0, 1]' : 0.191634}", "{'[5, 6, 4, 6, 6, 2, 0, 0, 21, 29, 27, 0, 0, 1, 1, 0, 0, 1]' : 0.191632}", "{'[5, 6, 4, 6, 6, 2, 0, 0, 21, 29, 27, 0, 0, 1, 1, 0, 0, 1]' : 0.193644}", "{'[5, 6, 4, 6, 6, 2, 0, 0, 21, 29, 27, 0, 0, 1, 1, 0, 0, 1]' : 0.191453}", "{'[5, 6, 4, 6, 6, 2, 0, 0, 21, 29, 27, 0, 0, 1, 1, 0, 0, 1]' : 0.195506}", "{'[5, 6, 4, 6, 6, 2, 0, 0, 21, 29, 27, 0, 0, 1, 1, 0, 0, 1]' : 0.191963}", "{'[5, 6, 4, 6, 6, 2, 0, 0, 21, 29, 27, 0, 0, 1, 1, 0, 0, 1]' : 0.193467}", "{'[5, 6, 4, 6, 6, 2, 0, 0, 21, 29, 27, 0, 0, 1, 1, 0, 0, 1]' : 0.194743}", "{'[5, 6, 4, 6, 6, 2, 0, 0, 21, 29, 27, 0, 0, 1, 1, 0, 0, 1]' : 0.195897}", "{'[5, 6, 4, 6, 6, 2, 0, 0, 21, 29, 27, 0, 0, 1, 1, 0, 0, 1]' : 0.193861}", "{'[5, 6, 4, 6, 6, 2, 0, 0, 21, 29, 27, 0, 0, 1, 1, 0, 0, 1]' : 0.192941}", "{'[5, 6, 4, 6, 6, 2, 0, 0, 21, 29, 27, 0, 0, 1, 1, 0, 0, 1]' : 0.193013}"]
returning from 'run': {'[5, 6, 4, 6, 6, 2, 0, 0, 21, 29, 27, 0, 0, 1, 1, 0, 0, 1]': ([0.198238, 0.19641, 0.196483, 0.195298, 0.196689, 0.192685, 0.192495, 0.192073, 0.192837, 0.1937, 0.192514, 0.196389, 0.191297, 0.190871, 0.190103, 0.192103, 0.194029, 0.190829, 0.191634, 0.191632, 0.193644, 0.191453, 0.195506, 0.191963, 0.193467, 0.194743, 0.195897, 0.193861, 0.192941, 0.193013], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 6, 4, 6, 6, 2, 0, 0, 21, 29, 27, 0, 0, 1, 1, 0, 0, 1]': ([0.198238, 0.19641, 0.196483, 0.195298, 0.196689, 0.192685, 0.192495, 0.192073, 0.192837, 0.1937, 0.192514, 0.196389, 0.191297, 0.190871, 0.190103, 0.192103, 0.194029, 0.190829, 0.191634, 0.191632, 0.193644, 0.191453, 0.195506, 0.191963, 0.193467, 0.194743, 0.195897, 0.193861, 0.192941, 0.193013], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = kkk
Code stats:
        Number of loops: 	17
        Max loop nest depth: 	5
        Additions: 		317
        Multiplications: 	132
        Divisions: 		0
        Logical: 		0
        Reads: 			833
        Writes: 		193
        Comparisons:		17
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest33.exe __orio_perftest33.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest33.exe  
Program Test Output: 
{'[0, 2, 5, 6, 5, 3, 1, 0, 9, 0, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.200731}
{'[0, 2, 5, 6, 5, 3, 1, 0, 9, 0, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.200004}
{'[0, 2, 5, 6, 5, 3, 1, 0, 9, 0, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.183594}
{'[0, 2, 5, 6, 5, 3, 1, 0, 9, 0, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.180349}
{'[0, 2, 5, 6, 5, 3, 1, 0, 9, 0, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.183807}
{'[0, 2, 5, 6, 5, 3, 1, 0, 9, 0, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.183603}
{'[0, 2, 5, 6, 5, 3, 1, 0, 9, 0, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.180892}
{'[0, 2, 5, 6, 5, 3, 1, 0, 9, 0, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.180696}
{'[0, 2, 5, 6, 5, 3, 1, 0, 9, 0, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.180731}
{'[0, 2, 5, 6, 5, 3, 1, 0, 9, 0, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.181049}
{'[0, 2, 5, 6, 5, 3, 1, 0, 9, 0, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.180311}
{'[0, 2, 5, 6, 5, 3, 1, 0, 9, 0, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.180246}
{'[0, 2, 5, 6, 5, 3, 1, 0, 9, 0, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.180937}
{'[0, 2, 5, 6, 5, 3, 1, 0, 9, 0, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.181235}
{'[0, 2, 5, 6, 5, 3, 1, 0, 9, 0, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.180802}
{'[0, 2, 5, 6, 5, 3, 1, 0, 9, 0, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.180499}
{'[0, 2, 5, 6, 5, 3, 1, 0, 9, 0, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.180879}
{'[0, 2, 5, 6, 5, 3, 1, 0, 9, 0, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.180707}
{'[0, 2, 5, 6, 5, 3, 1, 0, 9, 0, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.180354}
{'[0, 2, 5, 6, 5, 3, 1, 0, 9, 0, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.181187}
{'[0, 2, 5, 6, 5, 3, 1, 0, 9, 0, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.180564}
{'[0, 2, 5, 6, 5, 3, 1, 0, 9, 0, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.178742}
{'[0, 2, 5, 6, 5, 3, 1, 0, 9, 0, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.177687}
{'[0, 2, 5, 6, 5, 3, 1, 0, 9, 0, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.176804}
{'[0, 2, 5, 6, 5, 3, 1, 0, 9, 0, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.177011}
{'[0, 2, 5, 6, 5, 3, 1, 0, 9, 0, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.181603}
{'[0, 2, 5, 6, 5, 3, 1, 0, 9, 0, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.180882}
{'[0, 2, 5, 6, 5, 3, 1, 0, 9, 0, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.180997}
{'[0, 2, 5, 6, 5, 3, 1, 0, 9, 0, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.180205}
{'[0, 2, 5, 6, 5, 3, 1, 0, 9, 0, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.180034}

out:
 ["{'[0, 2, 5, 6, 5, 3, 1, 0, 9, 0, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.200731}", "{'[0, 2, 5, 6, 5, 3, 1, 0, 9, 0, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.200004}", "{'[0, 2, 5, 6, 5, 3, 1, 0, 9, 0, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.183594}", "{'[0, 2, 5, 6, 5, 3, 1, 0, 9, 0, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.180349}", "{'[0, 2, 5, 6, 5, 3, 1, 0, 9, 0, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.183807}", "{'[0, 2, 5, 6, 5, 3, 1, 0, 9, 0, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.183603}", "{'[0, 2, 5, 6, 5, 3, 1, 0, 9, 0, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.180892}", "{'[0, 2, 5, 6, 5, 3, 1, 0, 9, 0, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.180696}", "{'[0, 2, 5, 6, 5, 3, 1, 0, 9, 0, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.180731}", "{'[0, 2, 5, 6, 5, 3, 1, 0, 9, 0, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.181049}", "{'[0, 2, 5, 6, 5, 3, 1, 0, 9, 0, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.180311}", "{'[0, 2, 5, 6, 5, 3, 1, 0, 9, 0, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.180246}", "{'[0, 2, 5, 6, 5, 3, 1, 0, 9, 0, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.180937}", "{'[0, 2, 5, 6, 5, 3, 1, 0, 9, 0, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.181235}", "{'[0, 2, 5, 6, 5, 3, 1, 0, 9, 0, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.180802}", "{'[0, 2, 5, 6, 5, 3, 1, 0, 9, 0, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.180499}", "{'[0, 2, 5, 6, 5, 3, 1, 0, 9, 0, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.180879}", "{'[0, 2, 5, 6, 5, 3, 1, 0, 9, 0, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.180707}", "{'[0, 2, 5, 6, 5, 3, 1, 0, 9, 0, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.180354}", "{'[0, 2, 5, 6, 5, 3, 1, 0, 9, 0, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.181187}", "{'[0, 2, 5, 6, 5, 3, 1, 0, 9, 0, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.180564}", "{'[0, 2, 5, 6, 5, 3, 1, 0, 9, 0, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.178742}", "{'[0, 2, 5, 6, 5, 3, 1, 0, 9, 0, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.177687}", "{'[0, 2, 5, 6, 5, 3, 1, 0, 9, 0, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.176804}", "{'[0, 2, 5, 6, 5, 3, 1, 0, 9, 0, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.177011}", "{'[0, 2, 5, 6, 5, 3, 1, 0, 9, 0, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.181603}", "{'[0, 2, 5, 6, 5, 3, 1, 0, 9, 0, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.180882}", "{'[0, 2, 5, 6, 5, 3, 1, 0, 9, 0, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.180997}", "{'[0, 2, 5, 6, 5, 3, 1, 0, 9, 0, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.180205}", "{'[0, 2, 5, 6, 5, 3, 1, 0, 9, 0, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.180034}"]
returning from 'run': {'[0, 2, 5, 6, 5, 3, 1, 0, 9, 0, 0, 0, 2, 0, 0, 1, 1, 1]': ([0.200731, 0.200004, 0.183594, 0.180349, 0.183807, 0.183603, 0.180892, 0.180696, 0.180731, 0.181049, 0.180311, 0.180246, 0.180937, 0.181235, 0.180802, 0.180499, 0.180879, 0.180707, 0.180354, 0.181187, 0.180564, 0.178742, 0.177687, 0.176804, 0.177011, 0.181603, 0.180882, 0.180997, 0.180205, 0.180034], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 5, 6, 5, 3, 1, 0, 9, 0, 0, 0, 2, 0, 0, 1, 1, 1]': ([0.200731, 0.200004, 0.183594, 0.180349, 0.183807, 0.183603, 0.180892, 0.180696, 0.180731, 0.181049, 0.180311, 0.180246, 0.180937, 0.181235, 0.180802, 0.180499, 0.180879, 0.180707, 0.180354, 0.181187, 0.180564, 0.178742, 0.177687, 0.176804, 0.177011, 0.181603, 0.180882, 0.180997, 0.180205, 0.180034], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	4
        Additions: 		2470
        Multiplications: 	1200
        Divisions: 		0
        Logical: 		0
        Reads: 			4719
        Writes: 		768
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest34.exe __orio_perftest34.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest34.exe  
Program Test Output: 
{'[4, 0, 0, 0, 2, 2, 0, 0, 7, 10, 27, 0, 1, 0, 0, 1, 0, 0]' : 0.108832}
{'[4, 0, 0, 0, 2, 2, 0, 0, 7, 10, 27, 0, 1, 0, 0, 1, 0, 0]' : 0.109917}
{'[4, 0, 0, 0, 2, 2, 0, 0, 7, 10, 27, 0, 1, 0, 0, 1, 0, 0]' : 0.108258}
{'[4, 0, 0, 0, 2, 2, 0, 0, 7, 10, 27, 0, 1, 0, 0, 1, 0, 0]' : 0.106909}
{'[4, 0, 0, 0, 2, 2, 0, 0, 7, 10, 27, 0, 1, 0, 0, 1, 0, 0]' : 0.106997}
{'[4, 0, 0, 0, 2, 2, 0, 0, 7, 10, 27, 0, 1, 0, 0, 1, 0, 0]' : 0.105116}
{'[4, 0, 0, 0, 2, 2, 0, 0, 7, 10, 27, 0, 1, 0, 0, 1, 0, 0]' : 0.102776}
{'[4, 0, 0, 0, 2, 2, 0, 0, 7, 10, 27, 0, 1, 0, 0, 1, 0, 0]' : 0.102594}
{'[4, 0, 0, 0, 2, 2, 0, 0, 7, 10, 27, 0, 1, 0, 0, 1, 0, 0]' : 0.102715}
{'[4, 0, 0, 0, 2, 2, 0, 0, 7, 10, 27, 0, 1, 0, 0, 1, 0, 0]' : 0.103072}
{'[4, 0, 0, 0, 2, 2, 0, 0, 7, 10, 27, 0, 1, 0, 0, 1, 0, 0]' : 0.105496}
{'[4, 0, 0, 0, 2, 2, 0, 0, 7, 10, 27, 0, 1, 0, 0, 1, 0, 0]' : 0.107261}
{'[4, 0, 0, 0, 2, 2, 0, 0, 7, 10, 27, 0, 1, 0, 0, 1, 0, 0]' : 0.106748}
{'[4, 0, 0, 0, 2, 2, 0, 0, 7, 10, 27, 0, 1, 0, 0, 1, 0, 0]' : 0.106795}
{'[4, 0, 0, 0, 2, 2, 0, 0, 7, 10, 27, 0, 1, 0, 0, 1, 0, 0]' : 0.10668}
{'[4, 0, 0, 0, 2, 2, 0, 0, 7, 10, 27, 0, 1, 0, 0, 1, 0, 0]' : 0.103481}
{'[4, 0, 0, 0, 2, 2, 0, 0, 7, 10, 27, 0, 1, 0, 0, 1, 0, 0]' : 0.10288}
{'[4, 0, 0, 0, 2, 2, 0, 0, 7, 10, 27, 0, 1, 0, 0, 1, 0, 0]' : 0.102645}
{'[4, 0, 0, 0, 2, 2, 0, 0, 7, 10, 27, 0, 1, 0, 0, 1, 0, 0]' : 0.103193}
{'[4, 0, 0, 0, 2, 2, 0, 0, 7, 10, 27, 0, 1, 0, 0, 1, 0, 0]' : 0.104643}
{'[4, 0, 0, 0, 2, 2, 0, 0, 7, 10, 27, 0, 1, 0, 0, 1, 0, 0]' : 0.105473}
{'[4, 0, 0, 0, 2, 2, 0, 0, 7, 10, 27, 0, 1, 0, 0, 1, 0, 0]' : 0.104769}
{'[4, 0, 0, 0, 2, 2, 0, 0, 7, 10, 27, 0, 1, 0, 0, 1, 0, 0]' : 0.10275}
{'[4, 0, 0, 0, 2, 2, 0, 0, 7, 10, 27, 0, 1, 0, 0, 1, 0, 0]' : 0.102642}
{'[4, 0, 0, 0, 2, 2, 0, 0, 7, 10, 27, 0, 1, 0, 0, 1, 0, 0]' : 0.10512}
{'[4, 0, 0, 0, 2, 2, 0, 0, 7, 10, 27, 0, 1, 0, 0, 1, 0, 0]' : 0.105088}
{'[4, 0, 0, 0, 2, 2, 0, 0, 7, 10, 27, 0, 1, 0, 0, 1, 0, 0]' : 0.102885}
{'[4, 0, 0, 0, 2, 2, 0, 0, 7, 10, 27, 0, 1, 0, 0, 1, 0, 0]' : 0.102657}
{'[4, 0, 0, 0, 2, 2, 0, 0, 7, 10, 27, 0, 1, 0, 0, 1, 0, 0]' : 0.102681}
{'[4, 0, 0, 0, 2, 2, 0, 0, 7, 10, 27, 0, 1, 0, 0, 1, 0, 0]' : 0.105604}

out:
 ["{'[4, 0, 0, 0, 2, 2, 0, 0, 7, 10, 27, 0, 1, 0, 0, 1, 0, 0]' : 0.108832}", "{'[4, 0, 0, 0, 2, 2, 0, 0, 7, 10, 27, 0, 1, 0, 0, 1, 0, 0]' : 0.109917}", "{'[4, 0, 0, 0, 2, 2, 0, 0, 7, 10, 27, 0, 1, 0, 0, 1, 0, 0]' : 0.108258}", "{'[4, 0, 0, 0, 2, 2, 0, 0, 7, 10, 27, 0, 1, 0, 0, 1, 0, 0]' : 0.106909}", "{'[4, 0, 0, 0, 2, 2, 0, 0, 7, 10, 27, 0, 1, 0, 0, 1, 0, 0]' : 0.106997}", "{'[4, 0, 0, 0, 2, 2, 0, 0, 7, 10, 27, 0, 1, 0, 0, 1, 0, 0]' : 0.105116}", "{'[4, 0, 0, 0, 2, 2, 0, 0, 7, 10, 27, 0, 1, 0, 0, 1, 0, 0]' : 0.102776}", "{'[4, 0, 0, 0, 2, 2, 0, 0, 7, 10, 27, 0, 1, 0, 0, 1, 0, 0]' : 0.102594}", "{'[4, 0, 0, 0, 2, 2, 0, 0, 7, 10, 27, 0, 1, 0, 0, 1, 0, 0]' : 0.102715}", "{'[4, 0, 0, 0, 2, 2, 0, 0, 7, 10, 27, 0, 1, 0, 0, 1, 0, 0]' : 0.103072}", "{'[4, 0, 0, 0, 2, 2, 0, 0, 7, 10, 27, 0, 1, 0, 0, 1, 0, 0]' : 0.105496}", "{'[4, 0, 0, 0, 2, 2, 0, 0, 7, 10, 27, 0, 1, 0, 0, 1, 0, 0]' : 0.107261}", "{'[4, 0, 0, 0, 2, 2, 0, 0, 7, 10, 27, 0, 1, 0, 0, 1, 0, 0]' : 0.106748}", "{'[4, 0, 0, 0, 2, 2, 0, 0, 7, 10, 27, 0, 1, 0, 0, 1, 0, 0]' : 0.106795}", "{'[4, 0, 0, 0, 2, 2, 0, 0, 7, 10, 27, 0, 1, 0, 0, 1, 0, 0]' : 0.10668}", "{'[4, 0, 0, 0, 2, 2, 0, 0, 7, 10, 27, 0, 1, 0, 0, 1, 0, 0]' : 0.103481}", "{'[4, 0, 0, 0, 2, 2, 0, 0, 7, 10, 27, 0, 1, 0, 0, 1, 0, 0]' : 0.10288}", "{'[4, 0, 0, 0, 2, 2, 0, 0, 7, 10, 27, 0, 1, 0, 0, 1, 0, 0]' : 0.102645}", "{'[4, 0, 0, 0, 2, 2, 0, 0, 7, 10, 27, 0, 1, 0, 0, 1, 0, 0]' : 0.103193}", "{'[4, 0, 0, 0, 2, 2, 0, 0, 7, 10, 27, 0, 1, 0, 0, 1, 0, 0]' : 0.104643}", "{'[4, 0, 0, 0, 2, 2, 0, 0, 7, 10, 27, 0, 1, 0, 0, 1, 0, 0]' : 0.105473}", "{'[4, 0, 0, 0, 2, 2, 0, 0, 7, 10, 27, 0, 1, 0, 0, 1, 0, 0]' : 0.104769}", "{'[4, 0, 0, 0, 2, 2, 0, 0, 7, 10, 27, 0, 1, 0, 0, 1, 0, 0]' : 0.10275}", "{'[4, 0, 0, 0, 2, 2, 0, 0, 7, 10, 27, 0, 1, 0, 0, 1, 0, 0]' : 0.102642}", "{'[4, 0, 0, 0, 2, 2, 0, 0, 7, 10, 27, 0, 1, 0, 0, 1, 0, 0]' : 0.10512}", "{'[4, 0, 0, 0, 2, 2, 0, 0, 7, 10, 27, 0, 1, 0, 0, 1, 0, 0]' : 0.105088}", "{'[4, 0, 0, 0, 2, 2, 0, 0, 7, 10, 27, 0, 1, 0, 0, 1, 0, 0]' : 0.102885}", "{'[4, 0, 0, 0, 2, 2, 0, 0, 7, 10, 27, 0, 1, 0, 0, 1, 0, 0]' : 0.102657}", "{'[4, 0, 0, 0, 2, 2, 0, 0, 7, 10, 27, 0, 1, 0, 0, 1, 0, 0]' : 0.102681}", "{'[4, 0, 0, 0, 2, 2, 0, 0, 7, 10, 27, 0, 1, 0, 0, 1, 0, 0]' : 0.105604}"]
returning from 'run': {'[4, 0, 0, 0, 2, 2, 0, 0, 7, 10, 27, 0, 1, 0, 0, 1, 0, 0]': ([0.108832, 0.109917, 0.108258, 0.106909, 0.106997, 0.105116, 0.102776, 0.102594, 0.102715, 0.103072, 0.105496, 0.107261, 0.106748, 0.106795, 0.10668, 0.103481, 0.10288, 0.102645, 0.103193, 0.104643, 0.105473, 0.104769, 0.10275, 0.102642, 0.10512, 0.105088, 0.102885, 0.102657, 0.102681, 0.105604], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 0, 0, 0, 2, 2, 0, 0, 7, 10, 27, 0, 1, 0, 0, 1, 0, 0]': ([0.108832, 0.109917, 0.108258, 0.106909, 0.106997, 0.105116, 0.102776, 0.102594, 0.102715, 0.103072, 0.105496, 0.107261, 0.106748, 0.106795, 0.10668, 0.103481, 0.10288, 0.102645, 0.103193, 0.104643, 0.105473, 0.104769, 0.10275, 0.102642, 0.10512, 0.105088, 0.102885, 0.102657, 0.102681, 0.105604], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = kkk
Code stats:
        Number of loops: 	28
        Max loop nest depth: 	6
        Additions: 		1509
        Multiplications: 	720
        Divisions: 		0
        Logical: 		0
        Reads: 			3060
        Writes: 		541
        Comparisons:		28
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest35.exe __orio_perftest35.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest35.exe  
Program Test Output: 
{'[5, 1, 4, 4, 2, 2, 0, 0, 1, 14, 0, 4, 1, 1, 0, 1, 1, 0]' : 0.100095}
{'[5, 1, 4, 4, 2, 2, 0, 0, 1, 14, 0, 4, 1, 1, 0, 1, 1, 0]' : 0.100041}
{'[5, 1, 4, 4, 2, 2, 0, 0, 1, 14, 0, 4, 1, 1, 0, 1, 1, 0]' : 0.0999939}
{'[5, 1, 4, 4, 2, 2, 0, 0, 1, 14, 0, 4, 1, 1, 0, 1, 1, 0]' : 0.100257}
{'[5, 1, 4, 4, 2, 2, 0, 0, 1, 14, 0, 4, 1, 1, 0, 1, 1, 0]' : 0.100141}
{'[5, 1, 4, 4, 2, 2, 0, 0, 1, 14, 0, 4, 1, 1, 0, 1, 1, 0]' : 0.10022}
{'[5, 1, 4, 4, 2, 2, 0, 0, 1, 14, 0, 4, 1, 1, 0, 1, 1, 0]' : 0.0999541}
{'[5, 1, 4, 4, 2, 2, 0, 0, 1, 14, 0, 4, 1, 1, 0, 1, 1, 0]' : 0.099967}
{'[5, 1, 4, 4, 2, 2, 0, 0, 1, 14, 0, 4, 1, 1, 0, 1, 1, 0]' : 0.100231}
{'[5, 1, 4, 4, 2, 2, 0, 0, 1, 14, 0, 4, 1, 1, 0, 1, 1, 0]' : 0.103226}
{'[5, 1, 4, 4, 2, 2, 0, 0, 1, 14, 0, 4, 1, 1, 0, 1, 1, 0]' : 0.103154}
{'[5, 1, 4, 4, 2, 2, 0, 0, 1, 14, 0, 4, 1, 1, 0, 1, 1, 0]' : 0.103217}
{'[5, 1, 4, 4, 2, 2, 0, 0, 1, 14, 0, 4, 1, 1, 0, 1, 1, 0]' : 0.103241}
{'[5, 1, 4, 4, 2, 2, 0, 0, 1, 14, 0, 4, 1, 1, 0, 1, 1, 0]' : 0.103461}
{'[5, 1, 4, 4, 2, 2, 0, 0, 1, 14, 0, 4, 1, 1, 0, 1, 1, 0]' : 0.102978}
{'[5, 1, 4, 4, 2, 2, 0, 0, 1, 14, 0, 4, 1, 1, 0, 1, 1, 0]' : 0.10292}
{'[5, 1, 4, 4, 2, 2, 0, 0, 1, 14, 0, 4, 1, 1, 0, 1, 1, 0]' : 0.10294}
{'[5, 1, 4, 4, 2, 2, 0, 0, 1, 14, 0, 4, 1, 1, 0, 1, 1, 0]' : 0.102938}
{'[5, 1, 4, 4, 2, 2, 0, 0, 1, 14, 0, 4, 1, 1, 0, 1, 1, 0]' : 0.10294}
{'[5, 1, 4, 4, 2, 2, 0, 0, 1, 14, 0, 4, 1, 1, 0, 1, 1, 0]' : 0.102947}
{'[5, 1, 4, 4, 2, 2, 0, 0, 1, 14, 0, 4, 1, 1, 0, 1, 1, 0]' : 0.102941}
{'[5, 1, 4, 4, 2, 2, 0, 0, 1, 14, 0, 4, 1, 1, 0, 1, 1, 0]' : 0.102906}
{'[5, 1, 4, 4, 2, 2, 0, 0, 1, 14, 0, 4, 1, 1, 0, 1, 1, 0]' : 0.10293}
{'[5, 1, 4, 4, 2, 2, 0, 0, 1, 14, 0, 4, 1, 1, 0, 1, 1, 0]' : 0.103209}
{'[5, 1, 4, 4, 2, 2, 0, 0, 1, 14, 0, 4, 1, 1, 0, 1, 1, 0]' : 0.103187}
{'[5, 1, 4, 4, 2, 2, 0, 0, 1, 14, 0, 4, 1, 1, 0, 1, 1, 0]' : 0.103149}
{'[5, 1, 4, 4, 2, 2, 0, 0, 1, 14, 0, 4, 1, 1, 0, 1, 1, 0]' : 0.103173}
{'[5, 1, 4, 4, 2, 2, 0, 0, 1, 14, 0, 4, 1, 1, 0, 1, 1, 0]' : 0.103174}
{'[5, 1, 4, 4, 2, 2, 0, 0, 1, 14, 0, 4, 1, 1, 0, 1, 1, 0]' : 0.103104}
{'[5, 1, 4, 4, 2, 2, 0, 0, 1, 14, 0, 4, 1, 1, 0, 1, 1, 0]' : 0.102965}

out:
 ["{'[5, 1, 4, 4, 2, 2, 0, 0, 1, 14, 0, 4, 1, 1, 0, 1, 1, 0]' : 0.100095}", "{'[5, 1, 4, 4, 2, 2, 0, 0, 1, 14, 0, 4, 1, 1, 0, 1, 1, 0]' : 0.100041}", "{'[5, 1, 4, 4, 2, 2, 0, 0, 1, 14, 0, 4, 1, 1, 0, 1, 1, 0]' : 0.0999939}", "{'[5, 1, 4, 4, 2, 2, 0, 0, 1, 14, 0, 4, 1, 1, 0, 1, 1, 0]' : 0.100257}", "{'[5, 1, 4, 4, 2, 2, 0, 0, 1, 14, 0, 4, 1, 1, 0, 1, 1, 0]' : 0.100141}", "{'[5, 1, 4, 4, 2, 2, 0, 0, 1, 14, 0, 4, 1, 1, 0, 1, 1, 0]' : 0.10022}", "{'[5, 1, 4, 4, 2, 2, 0, 0, 1, 14, 0, 4, 1, 1, 0, 1, 1, 0]' : 0.0999541}", "{'[5, 1, 4, 4, 2, 2, 0, 0, 1, 14, 0, 4, 1, 1, 0, 1, 1, 0]' : 0.099967}", "{'[5, 1, 4, 4, 2, 2, 0, 0, 1, 14, 0, 4, 1, 1, 0, 1, 1, 0]' : 0.100231}", "{'[5, 1, 4, 4, 2, 2, 0, 0, 1, 14, 0, 4, 1, 1, 0, 1, 1, 0]' : 0.103226}", "{'[5, 1, 4, 4, 2, 2, 0, 0, 1, 14, 0, 4, 1, 1, 0, 1, 1, 0]' : 0.103154}", "{'[5, 1, 4, 4, 2, 2, 0, 0, 1, 14, 0, 4, 1, 1, 0, 1, 1, 0]' : 0.103217}", "{'[5, 1, 4, 4, 2, 2, 0, 0, 1, 14, 0, 4, 1, 1, 0, 1, 1, 0]' : 0.103241}", "{'[5, 1, 4, 4, 2, 2, 0, 0, 1, 14, 0, 4, 1, 1, 0, 1, 1, 0]' : 0.103461}", "{'[5, 1, 4, 4, 2, 2, 0, 0, 1, 14, 0, 4, 1, 1, 0, 1, 1, 0]' : 0.102978}", "{'[5, 1, 4, 4, 2, 2, 0, 0, 1, 14, 0, 4, 1, 1, 0, 1, 1, 0]' : 0.10292}", "{'[5, 1, 4, 4, 2, 2, 0, 0, 1, 14, 0, 4, 1, 1, 0, 1, 1, 0]' : 0.10294}", "{'[5, 1, 4, 4, 2, 2, 0, 0, 1, 14, 0, 4, 1, 1, 0, 1, 1, 0]' : 0.102938}", "{'[5, 1, 4, 4, 2, 2, 0, 0, 1, 14, 0, 4, 1, 1, 0, 1, 1, 0]' : 0.10294}", "{'[5, 1, 4, 4, 2, 2, 0, 0, 1, 14, 0, 4, 1, 1, 0, 1, 1, 0]' : 0.102947}", "{'[5, 1, 4, 4, 2, 2, 0, 0, 1, 14, 0, 4, 1, 1, 0, 1, 1, 0]' : 0.102941}", "{'[5, 1, 4, 4, 2, 2, 0, 0, 1, 14, 0, 4, 1, 1, 0, 1, 1, 0]' : 0.102906}", "{'[5, 1, 4, 4, 2, 2, 0, 0, 1, 14, 0, 4, 1, 1, 0, 1, 1, 0]' : 0.10293}", "{'[5, 1, 4, 4, 2, 2, 0, 0, 1, 14, 0, 4, 1, 1, 0, 1, 1, 0]' : 0.103209}", "{'[5, 1, 4, 4, 2, 2, 0, 0, 1, 14, 0, 4, 1, 1, 0, 1, 1, 0]' : 0.103187}", "{'[5, 1, 4, 4, 2, 2, 0, 0, 1, 14, 0, 4, 1, 1, 0, 1, 1, 0]' : 0.103149}", "{'[5, 1, 4, 4, 2, 2, 0, 0, 1, 14, 0, 4, 1, 1, 0, 1, 1, 0]' : 0.103173}", "{'[5, 1, 4, 4, 2, 2, 0, 0, 1, 14, 0, 4, 1, 1, 0, 1, 1, 0]' : 0.103174}", "{'[5, 1, 4, 4, 2, 2, 0, 0, 1, 14, 0, 4, 1, 1, 0, 1, 1, 0]' : 0.103104}", "{'[5, 1, 4, 4, 2, 2, 0, 0, 1, 14, 0, 4, 1, 1, 0, 1, 1, 0]' : 0.102965}"]
returning from 'run': {'[5, 1, 4, 4, 2, 2, 0, 0, 1, 14, 0, 4, 1, 1, 0, 1, 1, 0]': ([0.100095, 0.100041, 0.0999939, 0.100257, 0.100141, 0.10022, 0.0999541, 0.099967, 0.100231, 0.103226, 0.103154, 0.103217, 0.103241, 0.103461, 0.102978, 0.10292, 0.10294, 0.102938, 0.10294, 0.102947, 0.102941, 0.102906, 0.10293, 0.103209, 0.103187, 0.103149, 0.103173, 0.103174, 0.103104, 0.102965], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 1, 4, 4, 2, 2, 0, 0, 1, 14, 0, 4, 1, 1, 0, 1, 1, 0]': ([0.100095, 0.100041, 0.0999939, 0.100257, 0.100141, 0.10022, 0.0999541, 0.099967, 0.100231, 0.103226, 0.103154, 0.103217, 0.103241, 0.103461, 0.102978, 0.10292, 0.10294, 0.102938, 0.10294, 0.102947, 0.102941, 0.102906, 0.10293, 0.103209, 0.103187, 0.103149, 0.103173, 0.103174, 0.103104, 0.102965], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	170
        Max loop nest depth: 	5
        Additions: 		16822
        Multiplications: 	3844
        Divisions: 		0
        Logical: 		0
        Reads: 			24219
        Writes: 		2512
        Comparisons:		170
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest36.exe __orio_perftest36.c timer_cpu.o -lm
orio.main.tuner.ptest_driver:  failed to compile the testing code: "gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest36.exe __orio_perftest36.c timer_cpu.o -lm"
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 486, in run
    self.__build(perf_params=perf_params,coord=coord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 285, in __build
    err('orio.main.tuner.ptest_driver:  failed to compile the testing code: "%s"' % cmd)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  the executable of the test code does not exist
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 308, in __execute
    err('orio.main.tuner.ptest_driver:  the executable of the test code does not exist')

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

 running test:
	 ./__orio_perftest36.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest36.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest36.exe  ' returned non-zero exit status 127
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest36.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
