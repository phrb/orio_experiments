
====== START ORIO ======

----- begin reading the source file: atax2.src1.c -----
----- finished reading the source file -----

----- begin parsing annotations -----
----- finished parsing annotations -----

----- begin optimizations -----
Search_Space         = 8.234e+13
Number_of_Parameters = 18
Numeric_Parameters   = 13
Binary_Parameters    = 05
['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
[[1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [False, True], [False, True], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 8, 32], [1, 8, 32], [1, 8, 32], [False, True], [False, True], [False, True]]

----- begin empirical tuning for problem size -----
 N = 10000
Parameters: {'ACOPY_x': [0, 2], 'ACOPY_y': [0, 2], 'RT_K': [0, 3], 'T1_I': [0, 7], 'T1_J': [0, 7], 'T1_K': [0, 7], 'U_K': [0, 30], 'U_J': [0, 30], 'U_I': [0, 30], 'U1_I': [0, 30], 'T2_K': [0, 7], 'T2_J': [0, 7], 'T2_I': [0, 7], 'VEC2': [0, 2], 'VEC1': [0, 2], 'RT_I': [0, 3], 'SCR': [0, 2], 'RT_J': [0, 3]}
Parameter Range Values: {'ACOPY_x': [False, True], 'ACOPY_y': [False, True], 'RT_K': [1, 8, 32], 'T1_I': [1, 16, 32, 64, 128, 256, 512], 'T1_J': [1, 16, 32, 64, 128, 256, 512], 'T1_K': [1, 16, 32, 64, 128, 256, 512], 'U_K': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_J': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U1_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'T2_K': [1, 64, 128, 256, 512, 1024, 2048], 'T2_J': [1, 64, 128, 256, 512, 1024, 2048], 'T2_I': [1, 64, 128, 256, 512, 1024, 2048], 'VEC2': [False, True], 'VEC1': [False, True], 'RT_I': [1, 8, 32], 'SCR': [False, True], 'RT_J': [1, 8, 32]}

----- begin random search -----
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Inverse Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Starting DOPT-anova
Step 0
Generating valid search space of size 4600 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Valid coordinates: 920
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Valid coordinates: 1840
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Tested coordinates: 110000
Valid coordinates: 2760
Tested coordinates: 120000
Tested coordinates: 130000
Tested coordinates: 140000
Tested coordinates: 150000
Valid coordinates: 3680
Tested coordinates: 160000
Tested coordinates: 170000
Tested coordinates: 180000
Valid coordinates: 4600
Valid/Tested configurations: 4600/188780
Generated Search Space:
NULL
Clean Info:
Removed Factors: character(0)

Removed Inverse Factors: [1] "ACOPY_x" "ACOPY_y" "SCR"     "VEC1"    "VEC2"   

New Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
New Inverse Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
New Fixed Factors: {}
Full Model:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Fixed Factors: {}
Computing D-Optimal Design
Computing D-Optimal Design with 46 experiments
Design Formula:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Starting "optFederov" run
Using Search Space:
NULL
Data Dimensions: [1] 4600   18

     T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
88      2    0    2    3    0    6       1       0    0  27   0  28    0    2
133     0    3    2    2    6    6       1       1    7   0  13   0    0    0
140     6    5    1    4    6    1       0       0    4   7  27   0    0    0
149     0    3    5    0    2    6       1       0    5   0  26   6    2    0
306     0    5    5    3    5    3       1       1    7  19   4   0    1    1
582     0    1    6    2    0    0       0       0    0  28   0   4    0    0
717     2    2    0    3    6    0       0       1    9   0  19   6    0    2
719     0    6    0    6    0    5       1       0   21  19  13   0    0    0
893     0    1    0    0    3    0       0       1   18   5   0  27    0    1
936     0    0    1    6    3    5       1       1   19   0  25   2    1    1
976     0    6    6    6    4    5       1       1    3  15   9   0    0    0
1035    1    0    3    5    6    1       1       1   29  29  29   0    0    0
1095    2    1    5    5    2    3       1       1   12  25  29   0    0    1
1106    5    6    1    6    0    2       1       0   29   0  28  28    0    1
1157    2    0    6    3    0    0       0       0   20   6  19   0    1    1
1390    0    5    4    2    3    6       1       0   29  19   0   0    1    0
1554    2    6    0    4    6    3       1       0   19   0  13   4    1    0
1828    6    0    4    5    6    0       1       0    0  26   5   0    2    0
1846    0    0    2    2    1    2       1       1   23  21   2   0    0    2
1989    0    1    6    2    0    4       0       1    6   0   0  25    0    0
2229    5    6    2    3    6    0       1       1   11   0   5   5    0    1
2266    3    0    6    0    1    0       1       1    4   8  16   0    0    2
2282    5    1    4    5    0    6       1       1    0   4   0  10    0    2
2418    6    0    6    6    6    6       1       0   13   5   0   1    0    1
2465    2    6    6    6    0    0       0       1   27   0  20  25    2    0
2949    0    2    2    3    2    2       0       1    0   1  27   0    1    0
3005    4    3    6    2    2    6       0       0   26   0   2  20    0    0
3015    0    1    2    5    0    3       0       0    6   0  10  24    1    0
3215    6    4    1    6    5    0       1       0    6  25   0  24    0    0
3270    5    3    0    4    2    0       1       0   25   5   0   5    1    0
3279    1    3    0    4    3    6       0       0   13   0   0   0    0    1
3400    1    1    1    6    2    6       0       1   20  12  16   0    0    0
3470    6    6    0    6    4    2       0       1   10   0   3   0    0    2
3471    6    6    3    0    0    4       1       1   27  25  10   0    1    0
3579    4    3    6    6    2    4       0       1    7  26   0  11    1    0
3725    5    0    4    0    5    5       0       1   28   0  23  22    0    0
3867    0    1    0    0    6    2       1       1   25  26   0   3    2    0
3905    4    0    0    4    2    6       1       1    0   0  29  28    0    0
3961    3    4    5    1    0    0       0       1    0  25  23   0    1    1
3966    2    6    2    1    4    1       0       0    0   0  20   5    0    0
4047    2    3    3    0    0    2       1       0    7  22   0   0    1    1
4110    4    6    4    0    6    4       1       0   29   0   2  29    0    1
4308    5    5    6    3    6    6       0       0    1  23  26   0    0    2
4340    0    6    2    0    6    0       0       0    4  29   0  23    1    0
4447    1    2    6    6    6    0       1       1    0   5  13   0    0    0
4536    2    6    2    1    0    5       0       1    6   2   0  28    2    0
     RT_K SCR VEC1 VEC2
88      0   1    1    1
133     0   0    0    1
140     2   0    1    1
149     0   0    0    0
306     0   0    1    1
582     1   0    0    1
717     0   1    1    0
719     0   1    1    0
893     0   1    0    1
936     0   1    1    1
976     2   0    1    0
1035    2   0    0    0
1095    1   1    1    1
1106    1   0    0    1
1157    0   1    0    0
1390    1   1    0    0
1554    1   0    0    0
1828    0   0    0    0
1846    0   0    0    0
1989    2   1    0    1
2229    1   1    0    0
2266    0   1    1    1
2282    0   1    1    0
2418    0   0    0    1
2465    0   0    1    1
2949    1   1    1    0
3005    2   1    1    0
3015    0   1    0    1
3215    0   1    1    0
3270    0   0    0    1
3279    0   1    1    0
3400    2   0    0    0
3470    0   0    0    0
3471    1   0    0    1
3579    1   1    0    1
3725    0   0    1    0
3867    0   1    1    1
3905    2   0    0    1
3961    0   0    0    0
3966    0   1    0    1
4047    0   0    1    0
4110    0   0    0    1
4308    0   1    0    1
4340    1   0    1    1
4447    1   0    1    1
4536    0   0    0    0

D-Efficiency Approximation: [1] 0.394

Measuring design of size 46
Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	6
        Additions: 		7278
        Multiplications: 	3596
        Divisions: 		0
        Logical: 		0
        Reads: 			13402
        Writes: 		2077
        Comparisons:		15
        Gotos: 			0
        
 building the original code:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -DORIGINAL -o __orio_perftest_original.exe __orio_perftest1.c timer_cpu.o -lm
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest1.exe __orio_perftest1.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest1.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest1.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest1.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest1.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		135
        Multiplications: 	32
        Divisions: 		0
        Logical: 		0
        Reads: 			314
        Writes: 		61
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest2.exe __orio_perftest2.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest2.exe  
Program Test Output: 
{'[0, 3, 2, 2, 6, 6, 1, 1, 7, 0, 13, 0, 0, 0, 0, 0, 0, 1]' : 0.27794}
{'[0, 3, 2, 2, 6, 6, 1, 1, 7, 0, 13, 0, 0, 0, 0, 0, 0, 1]' : 0.274944}
{'[0, 3, 2, 2, 6, 6, 1, 1, 7, 0, 13, 0, 0, 0, 0, 0, 0, 1]' : 0.24685}
{'[0, 3, 2, 2, 6, 6, 1, 1, 7, 0, 13, 0, 0, 0, 0, 0, 0, 1]' : 0.246788}
{'[0, 3, 2, 2, 6, 6, 1, 1, 7, 0, 13, 0, 0, 0, 0, 0, 0, 1]' : 0.2466}
{'[0, 3, 2, 2, 6, 6, 1, 1, 7, 0, 13, 0, 0, 0, 0, 0, 0, 1]' : 0.246787}
{'[0, 3, 2, 2, 6, 6, 1, 1, 7, 0, 13, 0, 0, 0, 0, 0, 0, 1]' : 0.246845}
{'[0, 3, 2, 2, 6, 6, 1, 1, 7, 0, 13, 0, 0, 0, 0, 0, 0, 1]' : 0.24697}
{'[0, 3, 2, 2, 6, 6, 1, 1, 7, 0, 13, 0, 0, 0, 0, 0, 0, 1]' : 0.246928}
{'[0, 3, 2, 2, 6, 6, 1, 1, 7, 0, 13, 0, 0, 0, 0, 0, 0, 1]' : 0.246805}
{'[0, 3, 2, 2, 6, 6, 1, 1, 7, 0, 13, 0, 0, 0, 0, 0, 0, 1]' : 0.246822}
{'[0, 3, 2, 2, 6, 6, 1, 1, 7, 0, 13, 0, 0, 0, 0, 0, 0, 1]' : 0.246824}
{'[0, 3, 2, 2, 6, 6, 1, 1, 7, 0, 13, 0, 0, 0, 0, 0, 0, 1]' : 0.241507}
{'[0, 3, 2, 2, 6, 6, 1, 1, 7, 0, 13, 0, 0, 0, 0, 0, 0, 1]' : 0.239327}
{'[0, 3, 2, 2, 6, 6, 1, 1, 7, 0, 13, 0, 0, 0, 0, 0, 0, 1]' : 0.241848}
{'[0, 3, 2, 2, 6, 6, 1, 1, 7, 0, 13, 0, 0, 0, 0, 0, 0, 1]' : 0.246778}
{'[0, 3, 2, 2, 6, 6, 1, 1, 7, 0, 13, 0, 0, 0, 0, 0, 0, 1]' : 0.247144}
{'[0, 3, 2, 2, 6, 6, 1, 1, 7, 0, 13, 0, 0, 0, 0, 0, 0, 1]' : 0.246836}
{'[0, 3, 2, 2, 6, 6, 1, 1, 7, 0, 13, 0, 0, 0, 0, 0, 0, 1]' : 0.246917}
{'[0, 3, 2, 2, 6, 6, 1, 1, 7, 0, 13, 0, 0, 0, 0, 0, 0, 1]' : 0.246764}
{'[0, 3, 2, 2, 6, 6, 1, 1, 7, 0, 13, 0, 0, 0, 0, 0, 0, 1]' : 0.246793}
{'[0, 3, 2, 2, 6, 6, 1, 1, 7, 0, 13, 0, 0, 0, 0, 0, 0, 1]' : 0.246824}
{'[0, 3, 2, 2, 6, 6, 1, 1, 7, 0, 13, 0, 0, 0, 0, 0, 0, 1]' : 0.246887}
{'[0, 3, 2, 2, 6, 6, 1, 1, 7, 0, 13, 0, 0, 0, 0, 0, 0, 1]' : 0.246851}
{'[0, 3, 2, 2, 6, 6, 1, 1, 7, 0, 13, 0, 0, 0, 0, 0, 0, 1]' : 0.243447}
{'[0, 3, 2, 2, 6, 6, 1, 1, 7, 0, 13, 0, 0, 0, 0, 0, 0, 1]' : 0.239241}
{'[0, 3, 2, 2, 6, 6, 1, 1, 7, 0, 13, 0, 0, 0, 0, 0, 0, 1]' : 0.241794}
{'[0, 3, 2, 2, 6, 6, 1, 1, 7, 0, 13, 0, 0, 0, 0, 0, 0, 1]' : 0.246902}
{'[0, 3, 2, 2, 6, 6, 1, 1, 7, 0, 13, 0, 0, 0, 0, 0, 0, 1]' : 0.245275}
{'[0, 3, 2, 2, 6, 6, 1, 1, 7, 0, 13, 0, 0, 0, 0, 0, 0, 1]' : 0.246804}

out:
 ["{'[0, 3, 2, 2, 6, 6, 1, 1, 7, 0, 13, 0, 0, 0, 0, 0, 0, 1]' : 0.27794}", "{'[0, 3, 2, 2, 6, 6, 1, 1, 7, 0, 13, 0, 0, 0, 0, 0, 0, 1]' : 0.274944}", "{'[0, 3, 2, 2, 6, 6, 1, 1, 7, 0, 13, 0, 0, 0, 0, 0, 0, 1]' : 0.24685}", "{'[0, 3, 2, 2, 6, 6, 1, 1, 7, 0, 13, 0, 0, 0, 0, 0, 0, 1]' : 0.246788}", "{'[0, 3, 2, 2, 6, 6, 1, 1, 7, 0, 13, 0, 0, 0, 0, 0, 0, 1]' : 0.2466}", "{'[0, 3, 2, 2, 6, 6, 1, 1, 7, 0, 13, 0, 0, 0, 0, 0, 0, 1]' : 0.246787}", "{'[0, 3, 2, 2, 6, 6, 1, 1, 7, 0, 13, 0, 0, 0, 0, 0, 0, 1]' : 0.246845}", "{'[0, 3, 2, 2, 6, 6, 1, 1, 7, 0, 13, 0, 0, 0, 0, 0, 0, 1]' : 0.24697}", "{'[0, 3, 2, 2, 6, 6, 1, 1, 7, 0, 13, 0, 0, 0, 0, 0, 0, 1]' : 0.246928}", "{'[0, 3, 2, 2, 6, 6, 1, 1, 7, 0, 13, 0, 0, 0, 0, 0, 0, 1]' : 0.246805}", "{'[0, 3, 2, 2, 6, 6, 1, 1, 7, 0, 13, 0, 0, 0, 0, 0, 0, 1]' : 0.246822}", "{'[0, 3, 2, 2, 6, 6, 1, 1, 7, 0, 13, 0, 0, 0, 0, 0, 0, 1]' : 0.246824}", "{'[0, 3, 2, 2, 6, 6, 1, 1, 7, 0, 13, 0, 0, 0, 0, 0, 0, 1]' : 0.241507}", "{'[0, 3, 2, 2, 6, 6, 1, 1, 7, 0, 13, 0, 0, 0, 0, 0, 0, 1]' : 0.239327}", "{'[0, 3, 2, 2, 6, 6, 1, 1, 7, 0, 13, 0, 0, 0, 0, 0, 0, 1]' : 0.241848}", "{'[0, 3, 2, 2, 6, 6, 1, 1, 7, 0, 13, 0, 0, 0, 0, 0, 0, 1]' : 0.246778}", "{'[0, 3, 2, 2, 6, 6, 1, 1, 7, 0, 13, 0, 0, 0, 0, 0, 0, 1]' : 0.247144}", "{'[0, 3, 2, 2, 6, 6, 1, 1, 7, 0, 13, 0, 0, 0, 0, 0, 0, 1]' : 0.246836}", "{'[0, 3, 2, 2, 6, 6, 1, 1, 7, 0, 13, 0, 0, 0, 0, 0, 0, 1]' : 0.246917}", "{'[0, 3, 2, 2, 6, 6, 1, 1, 7, 0, 13, 0, 0, 0, 0, 0, 0, 1]' : 0.246764}", "{'[0, 3, 2, 2, 6, 6, 1, 1, 7, 0, 13, 0, 0, 0, 0, 0, 0, 1]' : 0.246793}", "{'[0, 3, 2, 2, 6, 6, 1, 1, 7, 0, 13, 0, 0, 0, 0, 0, 0, 1]' : 0.246824}", "{'[0, 3, 2, 2, 6, 6, 1, 1, 7, 0, 13, 0, 0, 0, 0, 0, 0, 1]' : 0.246887}", "{'[0, 3, 2, 2, 6, 6, 1, 1, 7, 0, 13, 0, 0, 0, 0, 0, 0, 1]' : 0.246851}", "{'[0, 3, 2, 2, 6, 6, 1, 1, 7, 0, 13, 0, 0, 0, 0, 0, 0, 1]' : 0.243447}", "{'[0, 3, 2, 2, 6, 6, 1, 1, 7, 0, 13, 0, 0, 0, 0, 0, 0, 1]' : 0.239241}", "{'[0, 3, 2, 2, 6, 6, 1, 1, 7, 0, 13, 0, 0, 0, 0, 0, 0, 1]' : 0.241794}", "{'[0, 3, 2, 2, 6, 6, 1, 1, 7, 0, 13, 0, 0, 0, 0, 0, 0, 1]' : 0.246902}", "{'[0, 3, 2, 2, 6, 6, 1, 1, 7, 0, 13, 0, 0, 0, 0, 0, 0, 1]' : 0.245275}", "{'[0, 3, 2, 2, 6, 6, 1, 1, 7, 0, 13, 0, 0, 0, 0, 0, 0, 1]' : 0.246804}"]
returning from 'run': {'[0, 3, 2, 2, 6, 6, 1, 1, 7, 0, 13, 0, 0, 0, 0, 0, 0, 1]': ([0.27794, 0.274944, 0.24685, 0.246788, 0.2466, 0.246787, 0.246845, 0.24697, 0.246928, 0.246805, 0.246822, 0.246824, 0.241507, 0.239327, 0.241848, 0.246778, 0.247144, 0.246836, 0.246917, 0.246764, 0.246793, 0.246824, 0.246887, 0.246851, 0.243447, 0.239241, 0.241794, 0.246902, 0.245275, 0.246804], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 3, 2, 2, 6, 6, 1, 1, 7, 0, 13, 0, 0, 0, 0, 0, 0, 1]': ([0.27794, 0.274944, 0.24685, 0.246788, 0.2466, 0.246787, 0.246845, 0.24697, 0.246928, 0.246805, 0.246822, 0.246824, 0.241507, 0.239327, 0.241848, 0.246778, 0.247144, 0.246836, 0.246917, 0.246764, 0.246793, 0.246824, 0.246887, 0.246851, 0.243447, 0.239241, 0.241794, 0.246902, 0.245275, 0.246804], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = iii
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	5
        Additions: 		3612
        Multiplications: 	1116
        Divisions: 		0
        Logical: 		0
        Reads: 			5783
        Writes: 		628
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest3.exe __orio_perftest3.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest3.exe  
Program Test Output: 
{'[6, 5, 1, 4, 6, 1, 0, 0, 4, 7, 27, 0, 0, 0, 2, 0, 1, 1]' : 0.119938}
{'[6, 5, 1, 4, 6, 1, 0, 0, 4, 7, 27, 0, 0, 0, 2, 0, 1, 1]' : 0.120323}
{'[6, 5, 1, 4, 6, 1, 0, 0, 4, 7, 27, 0, 0, 0, 2, 0, 1, 1]' : 0.11974}
{'[6, 5, 1, 4, 6, 1, 0, 0, 4, 7, 27, 0, 0, 0, 2, 0, 1, 1]' : 0.119814}
{'[6, 5, 1, 4, 6, 1, 0, 0, 4, 7, 27, 0, 0, 0, 2, 0, 1, 1]' : 0.120391}
{'[6, 5, 1, 4, 6, 1, 0, 0, 4, 7, 27, 0, 0, 0, 2, 0, 1, 1]' : 0.12013}
{'[6, 5, 1, 4, 6, 1, 0, 0, 4, 7, 27, 0, 0, 0, 2, 0, 1, 1]' : 0.119842}
{'[6, 5, 1, 4, 6, 1, 0, 0, 4, 7, 27, 0, 0, 0, 2, 0, 1, 1]' : 0.119829}
{'[6, 5, 1, 4, 6, 1, 0, 0, 4, 7, 27, 0, 0, 0, 2, 0, 1, 1]' : 0.119778}
{'[6, 5, 1, 4, 6, 1, 0, 0, 4, 7, 27, 0, 0, 0, 2, 0, 1, 1]' : 0.119821}
{'[6, 5, 1, 4, 6, 1, 0, 0, 4, 7, 27, 0, 0, 0, 2, 0, 1, 1]' : 0.119793}
{'[6, 5, 1, 4, 6, 1, 0, 0, 4, 7, 27, 0, 0, 0, 2, 0, 1, 1]' : 0.119957}
{'[6, 5, 1, 4, 6, 1, 0, 0, 4, 7, 27, 0, 0, 0, 2, 0, 1, 1]' : 0.120111}
{'[6, 5, 1, 4, 6, 1, 0, 0, 4, 7, 27, 0, 0, 0, 2, 0, 1, 1]' : 0.119979}
{'[6, 5, 1, 4, 6, 1, 0, 0, 4, 7, 27, 0, 0, 0, 2, 0, 1, 1]' : 0.120368}
{'[6, 5, 1, 4, 6, 1, 0, 0, 4, 7, 27, 0, 0, 0, 2, 0, 1, 1]' : 0.119779}
{'[6, 5, 1, 4, 6, 1, 0, 0, 4, 7, 27, 0, 0, 0, 2, 0, 1, 1]' : 0.119824}
{'[6, 5, 1, 4, 6, 1, 0, 0, 4, 7, 27, 0, 0, 0, 2, 0, 1, 1]' : 0.11978}
{'[6, 5, 1, 4, 6, 1, 0, 0, 4, 7, 27, 0, 0, 0, 2, 0, 1, 1]' : 0.119773}
{'[6, 5, 1, 4, 6, 1, 0, 0, 4, 7, 27, 0, 0, 0, 2, 0, 1, 1]' : 0.11978}
{'[6, 5, 1, 4, 6, 1, 0, 0, 4, 7, 27, 0, 0, 0, 2, 0, 1, 1]' : 0.120031}
{'[6, 5, 1, 4, 6, 1, 0, 0, 4, 7, 27, 0, 0, 0, 2, 0, 1, 1]' : 0.119974}
{'[6, 5, 1, 4, 6, 1, 0, 0, 4, 7, 27, 0, 0, 0, 2, 0, 1, 1]' : 0.120167}
{'[6, 5, 1, 4, 6, 1, 0, 0, 4, 7, 27, 0, 0, 0, 2, 0, 1, 1]' : 0.120074}
{'[6, 5, 1, 4, 6, 1, 0, 0, 4, 7, 27, 0, 0, 0, 2, 0, 1, 1]' : 0.119788}
{'[6, 5, 1, 4, 6, 1, 0, 0, 4, 7, 27, 0, 0, 0, 2, 0, 1, 1]' : 0.119733}
{'[6, 5, 1, 4, 6, 1, 0, 0, 4, 7, 27, 0, 0, 0, 2, 0, 1, 1]' : 0.119818}
{'[6, 5, 1, 4, 6, 1, 0, 0, 4, 7, 27, 0, 0, 0, 2, 0, 1, 1]' : 0.119975}
{'[6, 5, 1, 4, 6, 1, 0, 0, 4, 7, 27, 0, 0, 0, 2, 0, 1, 1]' : 0.120051}
{'[6, 5, 1, 4, 6, 1, 0, 0, 4, 7, 27, 0, 0, 0, 2, 0, 1, 1]' : 0.120044}

out:
 ["{'[6, 5, 1, 4, 6, 1, 0, 0, 4, 7, 27, 0, 0, 0, 2, 0, 1, 1]' : 0.119938}", "{'[6, 5, 1, 4, 6, 1, 0, 0, 4, 7, 27, 0, 0, 0, 2, 0, 1, 1]' : 0.120323}", "{'[6, 5, 1, 4, 6, 1, 0, 0, 4, 7, 27, 0, 0, 0, 2, 0, 1, 1]' : 0.11974}", "{'[6, 5, 1, 4, 6, 1, 0, 0, 4, 7, 27, 0, 0, 0, 2, 0, 1, 1]' : 0.119814}", "{'[6, 5, 1, 4, 6, 1, 0, 0, 4, 7, 27, 0, 0, 0, 2, 0, 1, 1]' : 0.120391}", "{'[6, 5, 1, 4, 6, 1, 0, 0, 4, 7, 27, 0, 0, 0, 2, 0, 1, 1]' : 0.12013}", "{'[6, 5, 1, 4, 6, 1, 0, 0, 4, 7, 27, 0, 0, 0, 2, 0, 1, 1]' : 0.119842}", "{'[6, 5, 1, 4, 6, 1, 0, 0, 4, 7, 27, 0, 0, 0, 2, 0, 1, 1]' : 0.119829}", "{'[6, 5, 1, 4, 6, 1, 0, 0, 4, 7, 27, 0, 0, 0, 2, 0, 1, 1]' : 0.119778}", "{'[6, 5, 1, 4, 6, 1, 0, 0, 4, 7, 27, 0, 0, 0, 2, 0, 1, 1]' : 0.119821}", "{'[6, 5, 1, 4, 6, 1, 0, 0, 4, 7, 27, 0, 0, 0, 2, 0, 1, 1]' : 0.119793}", "{'[6, 5, 1, 4, 6, 1, 0, 0, 4, 7, 27, 0, 0, 0, 2, 0, 1, 1]' : 0.119957}", "{'[6, 5, 1, 4, 6, 1, 0, 0, 4, 7, 27, 0, 0, 0, 2, 0, 1, 1]' : 0.120111}", "{'[6, 5, 1, 4, 6, 1, 0, 0, 4, 7, 27, 0, 0, 0, 2, 0, 1, 1]' : 0.119979}", "{'[6, 5, 1, 4, 6, 1, 0, 0, 4, 7, 27, 0, 0, 0, 2, 0, 1, 1]' : 0.120368}", "{'[6, 5, 1, 4, 6, 1, 0, 0, 4, 7, 27, 0, 0, 0, 2, 0, 1, 1]' : 0.119779}", "{'[6, 5, 1, 4, 6, 1, 0, 0, 4, 7, 27, 0, 0, 0, 2, 0, 1, 1]' : 0.119824}", "{'[6, 5, 1, 4, 6, 1, 0, 0, 4, 7, 27, 0, 0, 0, 2, 0, 1, 1]' : 0.11978}", "{'[6, 5, 1, 4, 6, 1, 0, 0, 4, 7, 27, 0, 0, 0, 2, 0, 1, 1]' : 0.119773}", "{'[6, 5, 1, 4, 6, 1, 0, 0, 4, 7, 27, 0, 0, 0, 2, 0, 1, 1]' : 0.11978}", "{'[6, 5, 1, 4, 6, 1, 0, 0, 4, 7, 27, 0, 0, 0, 2, 0, 1, 1]' : 0.120031}", "{'[6, 5, 1, 4, 6, 1, 0, 0, 4, 7, 27, 0, 0, 0, 2, 0, 1, 1]' : 0.119974}", "{'[6, 5, 1, 4, 6, 1, 0, 0, 4, 7, 27, 0, 0, 0, 2, 0, 1, 1]' : 0.120167}", "{'[6, 5, 1, 4, 6, 1, 0, 0, 4, 7, 27, 0, 0, 0, 2, 0, 1, 1]' : 0.120074}", "{'[6, 5, 1, 4, 6, 1, 0, 0, 4, 7, 27, 0, 0, 0, 2, 0, 1, 1]' : 0.119788}", "{'[6, 5, 1, 4, 6, 1, 0, 0, 4, 7, 27, 0, 0, 0, 2, 0, 1, 1]' : 0.119733}", "{'[6, 5, 1, 4, 6, 1, 0, 0, 4, 7, 27, 0, 0, 0, 2, 0, 1, 1]' : 0.119818}", "{'[6, 5, 1, 4, 6, 1, 0, 0, 4, 7, 27, 0, 0, 0, 2, 0, 1, 1]' : 0.119975}", "{'[6, 5, 1, 4, 6, 1, 0, 0, 4, 7, 27, 0, 0, 0, 2, 0, 1, 1]' : 0.120051}", "{'[6, 5, 1, 4, 6, 1, 0, 0, 4, 7, 27, 0, 0, 0, 2, 0, 1, 1]' : 0.120044}"]
returning from 'run': {'[6, 5, 1, 4, 6, 1, 0, 0, 4, 7, 27, 0, 0, 0, 2, 0, 1, 1]': ([0.119938, 0.120323, 0.11974, 0.119814, 0.120391, 0.12013, 0.119842, 0.119829, 0.119778, 0.119821, 0.119793, 0.119957, 0.120111, 0.119979, 0.120368, 0.119779, 0.119824, 0.11978, 0.119773, 0.11978, 0.120031, 0.119974, 0.120167, 0.120074, 0.119788, 0.119733, 0.119818, 0.119975, 0.120051, 0.120044], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 5, 1, 4, 6, 1, 0, 0, 4, 7, 27, 0, 0, 0, 2, 0, 1, 1]': ([0.119938, 0.120323, 0.11974, 0.119814, 0.120391, 0.12013, 0.119842, 0.119829, 0.119778, 0.119821, 0.119793, 0.119957, 0.120111, 0.119979, 0.120368, 0.119779, 0.119824, 0.11978, 0.119773, 0.11978, 0.120031, 0.119974, 0.120167, 0.120074, 0.119788, 0.119733, 0.119818, 0.119975, 0.120051, 0.120044], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		8600
        Multiplications: 	2304
        Divisions: 		0
        Logical: 		0
        Reads: 			12521
        Writes: 		1185
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest4.exe __orio_perftest4.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest4.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest4.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest4.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest4.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = kkk
Code stats:
        Number of loops: 	87
        Max loop nest depth: 	5
        Additions: 		2255
        Multiplications: 	522
        Divisions: 		0
        Logical: 		0
        Reads: 			3907
        Writes: 		541
        Comparisons:		87
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest5.exe __orio_perftest5.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest5.exe  
Program Test Output: 
{'[0, 5, 5, 3, 5, 3, 1, 1, 7, 19, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.113378}
{'[0, 5, 5, 3, 5, 3, 1, 1, 7, 19, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.113476}
{'[0, 5, 5, 3, 5, 3, 1, 1, 7, 19, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.113232}
{'[0, 5, 5, 3, 5, 3, 1, 1, 7, 19, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.113367}
{'[0, 5, 5, 3, 5, 3, 1, 1, 7, 19, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.11076}
{'[0, 5, 5, 3, 5, 3, 1, 1, 7, 19, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.09725}
{'[0, 5, 5, 3, 5, 3, 1, 1, 7, 19, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.096519}
{'[0, 5, 5, 3, 5, 3, 1, 1, 7, 19, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.096313}
{'[0, 5, 5, 3, 5, 3, 1, 1, 7, 19, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.096375}
{'[0, 5, 5, 3, 5, 3, 1, 1, 7, 19, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.09641}
{'[0, 5, 5, 3, 5, 3, 1, 1, 7, 19, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.096215}
{'[0, 5, 5, 3, 5, 3, 1, 1, 7, 19, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.096278}
{'[0, 5, 5, 3, 5, 3, 1, 1, 7, 19, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.0963271}
{'[0, 5, 5, 3, 5, 3, 1, 1, 7, 19, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.0962951}
{'[0, 5, 5, 3, 5, 3, 1, 1, 7, 19, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.09618}
{'[0, 5, 5, 3, 5, 3, 1, 1, 7, 19, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.0965121}
{'[0, 5, 5, 3, 5, 3, 1, 1, 7, 19, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.096967}
{'[0, 5, 5, 3, 5, 3, 1, 1, 7, 19, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.0963709}
{'[0, 5, 5, 3, 5, 3, 1, 1, 7, 19, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.0962648}
{'[0, 5, 5, 3, 5, 3, 1, 1, 7, 19, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.096267}
{'[0, 5, 5, 3, 5, 3, 1, 1, 7, 19, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.096386}
{'[0, 5, 5, 3, 5, 3, 1, 1, 7, 19, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.096235}
{'[0, 5, 5, 3, 5, 3, 1, 1, 7, 19, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.096458}
{'[0, 5, 5, 3, 5, 3, 1, 1, 7, 19, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.0964801}
{'[0, 5, 5, 3, 5, 3, 1, 1, 7, 19, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.096333}
{'[0, 5, 5, 3, 5, 3, 1, 1, 7, 19, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.0963891}
{'[0, 5, 5, 3, 5, 3, 1, 1, 7, 19, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.0961599}
{'[0, 5, 5, 3, 5, 3, 1, 1, 7, 19, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.0967281}
{'[0, 5, 5, 3, 5, 3, 1, 1, 7, 19, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.0966229}
{'[0, 5, 5, 3, 5, 3, 1, 1, 7, 19, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.096457}

out:
 ["{'[0, 5, 5, 3, 5, 3, 1, 1, 7, 19, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.113378}", "{'[0, 5, 5, 3, 5, 3, 1, 1, 7, 19, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.113476}", "{'[0, 5, 5, 3, 5, 3, 1, 1, 7, 19, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.113232}", "{'[0, 5, 5, 3, 5, 3, 1, 1, 7, 19, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.113367}", "{'[0, 5, 5, 3, 5, 3, 1, 1, 7, 19, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.11076}", "{'[0, 5, 5, 3, 5, 3, 1, 1, 7, 19, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.09725}", "{'[0, 5, 5, 3, 5, 3, 1, 1, 7, 19, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.096519}", "{'[0, 5, 5, 3, 5, 3, 1, 1, 7, 19, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.096313}", "{'[0, 5, 5, 3, 5, 3, 1, 1, 7, 19, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.096375}", "{'[0, 5, 5, 3, 5, 3, 1, 1, 7, 19, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.09641}", "{'[0, 5, 5, 3, 5, 3, 1, 1, 7, 19, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.096215}", "{'[0, 5, 5, 3, 5, 3, 1, 1, 7, 19, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.096278}", "{'[0, 5, 5, 3, 5, 3, 1, 1, 7, 19, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.0963271}", "{'[0, 5, 5, 3, 5, 3, 1, 1, 7, 19, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.0962951}", "{'[0, 5, 5, 3, 5, 3, 1, 1, 7, 19, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.09618}", "{'[0, 5, 5, 3, 5, 3, 1, 1, 7, 19, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.0965121}", "{'[0, 5, 5, 3, 5, 3, 1, 1, 7, 19, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.096967}", "{'[0, 5, 5, 3, 5, 3, 1, 1, 7, 19, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.0963709}", "{'[0, 5, 5, 3, 5, 3, 1, 1, 7, 19, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.0962648}", "{'[0, 5, 5, 3, 5, 3, 1, 1, 7, 19, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.096267}", "{'[0, 5, 5, 3, 5, 3, 1, 1, 7, 19, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.096386}", "{'[0, 5, 5, 3, 5, 3, 1, 1, 7, 19, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.096235}", "{'[0, 5, 5, 3, 5, 3, 1, 1, 7, 19, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.096458}", "{'[0, 5, 5, 3, 5, 3, 1, 1, 7, 19, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.0964801}", "{'[0, 5, 5, 3, 5, 3, 1, 1, 7, 19, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.096333}", "{'[0, 5, 5, 3, 5, 3, 1, 1, 7, 19, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.0963891}", "{'[0, 5, 5, 3, 5, 3, 1, 1, 7, 19, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.0961599}", "{'[0, 5, 5, 3, 5, 3, 1, 1, 7, 19, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.0967281}", "{'[0, 5, 5, 3, 5, 3, 1, 1, 7, 19, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.0966229}", "{'[0, 5, 5, 3, 5, 3, 1, 1, 7, 19, 4, 0, 1, 1, 0, 0, 1, 1]' : 0.096457}"]
returning from 'run': {'[0, 5, 5, 3, 5, 3, 1, 1, 7, 19, 4, 0, 1, 1, 0, 0, 1, 1]': ([0.113378, 0.113476, 0.113232, 0.113367, 0.11076, 0.09725, 0.096519, 0.096313, 0.096375, 0.09641, 0.096215, 0.096278, 0.0963271, 0.0962951, 0.09618, 0.0965121, 0.096967, 0.0963709, 0.0962648, 0.096267, 0.096386, 0.096235, 0.096458, 0.0964801, 0.096333, 0.0963891, 0.0961599, 0.0967281, 0.0966229, 0.096457], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 5, 5, 3, 5, 3, 1, 1, 7, 19, 4, 0, 1, 1, 0, 0, 1, 1]': ([0.113378, 0.113476, 0.113232, 0.113367, 0.11076, 0.09725, 0.096519, 0.096313, 0.096375, 0.09641, 0.096215, 0.096278, 0.0963271, 0.0962951, 0.09618, 0.0965121, 0.096967, 0.0963709, 0.0962648, 0.096267, 0.096386, 0.096235, 0.096458, 0.0964801, 0.096333, 0.0963891, 0.0961599, 0.0967281, 0.0966229, 0.096457], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	72
        Max loop nest depth: 	4
        Additions: 		3308
        Multiplications: 	900
        Divisions: 		0
        Logical: 		0
        Reads: 			5366
        Writes: 		719
        Comparisons:		72
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest6.exe __orio_perftest6.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest6.exe  
Program Test Output: 
{'[0, 1, 6, 2, 0, 0, 0, 0, 0, 28, 0, 4, 0, 0, 1, 0, 0, 1]' : 0.162826}
{'[0, 1, 6, 2, 0, 0, 0, 0, 0, 28, 0, 4, 0, 0, 1, 0, 0, 1]' : 0.16243}
{'[0, 1, 6, 2, 0, 0, 0, 0, 0, 28, 0, 4, 0, 0, 1, 0, 0, 1]' : 0.162673}
{'[0, 1, 6, 2, 0, 0, 0, 0, 0, 28, 0, 4, 0, 0, 1, 0, 0, 1]' : 0.155967}
{'[0, 1, 6, 2, 0, 0, 0, 0, 0, 28, 0, 4, 0, 0, 1, 0, 0, 1]' : 0.141991}
{'[0, 1, 6, 2, 0, 0, 0, 0, 0, 28, 0, 4, 0, 0, 1, 0, 0, 1]' : 0.141963}
{'[0, 1, 6, 2, 0, 0, 0, 0, 0, 28, 0, 4, 0, 0, 1, 0, 0, 1]' : 0.14187}
{'[0, 1, 6, 2, 0, 0, 0, 0, 0, 28, 0, 4, 0, 0, 1, 0, 0, 1]' : 0.142112}
{'[0, 1, 6, 2, 0, 0, 0, 0, 0, 28, 0, 4, 0, 0, 1, 0, 0, 1]' : 0.141842}
{'[0, 1, 6, 2, 0, 0, 0, 0, 0, 28, 0, 4, 0, 0, 1, 0, 0, 1]' : 0.141759}
{'[0, 1, 6, 2, 0, 0, 0, 0, 0, 28, 0, 4, 0, 0, 1, 0, 0, 1]' : 0.141866}
{'[0, 1, 6, 2, 0, 0, 0, 0, 0, 28, 0, 4, 0, 0, 1, 0, 0, 1]' : 0.142155}
{'[0, 1, 6, 2, 0, 0, 0, 0, 0, 28, 0, 4, 0, 0, 1, 0, 0, 1]' : 0.14199}
{'[0, 1, 6, 2, 0, 0, 0, 0, 0, 28, 0, 4, 0, 0, 1, 0, 0, 1]' : 0.144585}
{'[0, 1, 6, 2, 0, 0, 0, 0, 0, 28, 0, 4, 0, 0, 1, 0, 0, 1]' : 0.145238}
{'[0, 1, 6, 2, 0, 0, 0, 0, 0, 28, 0, 4, 0, 0, 1, 0, 0, 1]' : 0.145363}
{'[0, 1, 6, 2, 0, 0, 0, 0, 0, 28, 0, 4, 0, 0, 1, 0, 0, 1]' : 0.145143}
{'[0, 1, 6, 2, 0, 0, 0, 0, 0, 28, 0, 4, 0, 0, 1, 0, 0, 1]' : 0.145403}
{'[0, 1, 6, 2, 0, 0, 0, 0, 0, 28, 0, 4, 0, 0, 1, 0, 0, 1]' : 0.145312}
{'[0, 1, 6, 2, 0, 0, 0, 0, 0, 28, 0, 4, 0, 0, 1, 0, 0, 1]' : 0.145678}
{'[0, 1, 6, 2, 0, 0, 0, 0, 0, 28, 0, 4, 0, 0, 1, 0, 0, 1]' : 0.145493}
{'[0, 1, 6, 2, 0, 0, 0, 0, 0, 28, 0, 4, 0, 0, 1, 0, 0, 1]' : 0.145212}
{'[0, 1, 6, 2, 0, 0, 0, 0, 0, 28, 0, 4, 0, 0, 1, 0, 0, 1]' : 0.144622}
{'[0, 1, 6, 2, 0, 0, 0, 0, 0, 28, 0, 4, 0, 0, 1, 0, 0, 1]' : 0.141952}
{'[0, 1, 6, 2, 0, 0, 0, 0, 0, 28, 0, 4, 0, 0, 1, 0, 0, 1]' : 0.141958}
{'[0, 1, 6, 2, 0, 0, 0, 0, 0, 28, 0, 4, 0, 0, 1, 0, 0, 1]' : 0.141777}
{'[0, 1, 6, 2, 0, 0, 0, 0, 0, 28, 0, 4, 0, 0, 1, 0, 0, 1]' : 0.142109}
{'[0, 1, 6, 2, 0, 0, 0, 0, 0, 28, 0, 4, 0, 0, 1, 0, 0, 1]' : 0.142295}
{'[0, 1, 6, 2, 0, 0, 0, 0, 0, 28, 0, 4, 0, 0, 1, 0, 0, 1]' : 0.141768}
{'[0, 1, 6, 2, 0, 0, 0, 0, 0, 28, 0, 4, 0, 0, 1, 0, 0, 1]' : 0.141889}

out:
 ["{'[0, 1, 6, 2, 0, 0, 0, 0, 0, 28, 0, 4, 0, 0, 1, 0, 0, 1]' : 0.162826}", "{'[0, 1, 6, 2, 0, 0, 0, 0, 0, 28, 0, 4, 0, 0, 1, 0, 0, 1]' : 0.16243}", "{'[0, 1, 6, 2, 0, 0, 0, 0, 0, 28, 0, 4, 0, 0, 1, 0, 0, 1]' : 0.162673}", "{'[0, 1, 6, 2, 0, 0, 0, 0, 0, 28, 0, 4, 0, 0, 1, 0, 0, 1]' : 0.155967}", "{'[0, 1, 6, 2, 0, 0, 0, 0, 0, 28, 0, 4, 0, 0, 1, 0, 0, 1]' : 0.141991}", "{'[0, 1, 6, 2, 0, 0, 0, 0, 0, 28, 0, 4, 0, 0, 1, 0, 0, 1]' : 0.141963}", "{'[0, 1, 6, 2, 0, 0, 0, 0, 0, 28, 0, 4, 0, 0, 1, 0, 0, 1]' : 0.14187}", "{'[0, 1, 6, 2, 0, 0, 0, 0, 0, 28, 0, 4, 0, 0, 1, 0, 0, 1]' : 0.142112}", "{'[0, 1, 6, 2, 0, 0, 0, 0, 0, 28, 0, 4, 0, 0, 1, 0, 0, 1]' : 0.141842}", "{'[0, 1, 6, 2, 0, 0, 0, 0, 0, 28, 0, 4, 0, 0, 1, 0, 0, 1]' : 0.141759}", "{'[0, 1, 6, 2, 0, 0, 0, 0, 0, 28, 0, 4, 0, 0, 1, 0, 0, 1]' : 0.141866}", "{'[0, 1, 6, 2, 0, 0, 0, 0, 0, 28, 0, 4, 0, 0, 1, 0, 0, 1]' : 0.142155}", "{'[0, 1, 6, 2, 0, 0, 0, 0, 0, 28, 0, 4, 0, 0, 1, 0, 0, 1]' : 0.14199}", "{'[0, 1, 6, 2, 0, 0, 0, 0, 0, 28, 0, 4, 0, 0, 1, 0, 0, 1]' : 0.144585}", "{'[0, 1, 6, 2, 0, 0, 0, 0, 0, 28, 0, 4, 0, 0, 1, 0, 0, 1]' : 0.145238}", "{'[0, 1, 6, 2, 0, 0, 0, 0, 0, 28, 0, 4, 0, 0, 1, 0, 0, 1]' : 0.145363}", "{'[0, 1, 6, 2, 0, 0, 0, 0, 0, 28, 0, 4, 0, 0, 1, 0, 0, 1]' : 0.145143}", "{'[0, 1, 6, 2, 0, 0, 0, 0, 0, 28, 0, 4, 0, 0, 1, 0, 0, 1]' : 0.145403}", "{'[0, 1, 6, 2, 0, 0, 0, 0, 0, 28, 0, 4, 0, 0, 1, 0, 0, 1]' : 0.145312}", "{'[0, 1, 6, 2, 0, 0, 0, 0, 0, 28, 0, 4, 0, 0, 1, 0, 0, 1]' : 0.145678}", "{'[0, 1, 6, 2, 0, 0, 0, 0, 0, 28, 0, 4, 0, 0, 1, 0, 0, 1]' : 0.145493}", "{'[0, 1, 6, 2, 0, 0, 0, 0, 0, 28, 0, 4, 0, 0, 1, 0, 0, 1]' : 0.145212}", "{'[0, 1, 6, 2, 0, 0, 0, 0, 0, 28, 0, 4, 0, 0, 1, 0, 0, 1]' : 0.144622}", "{'[0, 1, 6, 2, 0, 0, 0, 0, 0, 28, 0, 4, 0, 0, 1, 0, 0, 1]' : 0.141952}", "{'[0, 1, 6, 2, 0, 0, 0, 0, 0, 28, 0, 4, 0, 0, 1, 0, 0, 1]' : 0.141958}", "{'[0, 1, 6, 2, 0, 0, 0, 0, 0, 28, 0, 4, 0, 0, 1, 0, 0, 1]' : 0.141777}", "{'[0, 1, 6, 2, 0, 0, 0, 0, 0, 28, 0, 4, 0, 0, 1, 0, 0, 1]' : 0.142109}", "{'[0, 1, 6, 2, 0, 0, 0, 0, 0, 28, 0, 4, 0, 0, 1, 0, 0, 1]' : 0.142295}", "{'[0, 1, 6, 2, 0, 0, 0, 0, 0, 28, 0, 4, 0, 0, 1, 0, 0, 1]' : 0.141768}", "{'[0, 1, 6, 2, 0, 0, 0, 0, 0, 28, 0, 4, 0, 0, 1, 0, 0, 1]' : 0.141889}"]
returning from 'run': {'[0, 1, 6, 2, 0, 0, 0, 0, 0, 28, 0, 4, 0, 0, 1, 0, 0, 1]': ([0.162826, 0.16243, 0.162673, 0.155967, 0.141991, 0.141963, 0.14187, 0.142112, 0.141842, 0.141759, 0.141866, 0.142155, 0.14199, 0.144585, 0.145238, 0.145363, 0.145143, 0.145403, 0.145312, 0.145678, 0.145493, 0.145212, 0.144622, 0.141952, 0.141958, 0.141777, 0.142109, 0.142295, 0.141768, 0.141889], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 1, 6, 2, 0, 0, 0, 0, 0, 28, 0, 4, 0, 0, 1, 0, 0, 1]': ([0.162826, 0.16243, 0.162673, 0.155967, 0.141991, 0.141963, 0.14187, 0.142112, 0.141842, 0.141759, 0.141866, 0.142155, 0.14199, 0.144585, 0.145238, 0.145363, 0.145143, 0.145403, 0.145312, 0.145678, 0.145493, 0.145212, 0.144622, 0.141952, 0.141958, 0.141777, 0.142109, 0.142295, 0.141768, 0.141889], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	6
        Additions: 		296
        Multiplications: 	122
        Divisions: 		0
        Logical: 		0
        Reads: 			643
        Writes: 		118
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest7.exe __orio_perftest7.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest7.exe  
Program Test Output: 
{'[2, 2, 0, 3, 6, 0, 0, 1, 9, 0, 19, 6, 0, 2, 0, 1, 1, 0]' : 0.175937}
{'[2, 2, 0, 3, 6, 0, 0, 1, 9, 0, 19, 6, 0, 2, 0, 1, 1, 0]' : 0.174761}
{'[2, 2, 0, 3, 6, 0, 0, 1, 9, 0, 19, 6, 0, 2, 0, 1, 1, 0]' : 0.148834}
{'[2, 2, 0, 3, 6, 0, 0, 1, 9, 0, 19, 6, 0, 2, 0, 1, 1, 0]' : 0.152472}
{'[2, 2, 0, 3, 6, 0, 0, 1, 9, 0, 19, 6, 0, 2, 0, 1, 1, 0]' : 0.152561}
{'[2, 2, 0, 3, 6, 0, 0, 1, 9, 0, 19, 6, 0, 2, 0, 1, 1, 0]' : 0.151634}
{'[2, 2, 0, 3, 6, 0, 0, 1, 9, 0, 19, 6, 0, 2, 0, 1, 1, 0]' : 0.153002}
{'[2, 2, 0, 3, 6, 0, 0, 1, 9, 0, 19, 6, 0, 2, 0, 1, 1, 0]' : 0.156864}
{'[2, 2, 0, 3, 6, 0, 0, 1, 9, 0, 19, 6, 0, 2, 0, 1, 1, 0]' : 0.156936}
{'[2, 2, 0, 3, 6, 0, 0, 1, 9, 0, 19, 6, 0, 2, 0, 1, 1, 0]' : 0.154104}
{'[2, 2, 0, 3, 6, 0, 0, 1, 9, 0, 19, 6, 0, 2, 0, 1, 1, 0]' : 0.152243}
{'[2, 2, 0, 3, 6, 0, 0, 1, 9, 0, 19, 6, 0, 2, 0, 1, 1, 0]' : 0.152196}
{'[2, 2, 0, 3, 6, 0, 0, 1, 9, 0, 19, 6, 0, 2, 0, 1, 1, 0]' : 0.152181}
{'[2, 2, 0, 3, 6, 0, 0, 1, 9, 0, 19, 6, 0, 2, 0, 1, 1, 0]' : 0.152312}
{'[2, 2, 0, 3, 6, 0, 0, 1, 9, 0, 19, 6, 0, 2, 0, 1, 1, 0]' : 0.15218}
{'[2, 2, 0, 3, 6, 0, 0, 1, 9, 0, 19, 6, 0, 2, 0, 1, 1, 0]' : 0.152221}
{'[2, 2, 0, 3, 6, 0, 0, 1, 9, 0, 19, 6, 0, 2, 0, 1, 1, 0]' : 0.154705}
{'[2, 2, 0, 3, 6, 0, 0, 1, 9, 0, 19, 6, 0, 2, 0, 1, 1, 0]' : 0.157214}
{'[2, 2, 0, 3, 6, 0, 0, 1, 9, 0, 19, 6, 0, 2, 0, 1, 1, 0]' : 0.156951}
{'[2, 2, 0, 3, 6, 0, 0, 1, 9, 0, 19, 6, 0, 2, 0, 1, 1, 0]' : 0.156751}
{'[2, 2, 0, 3, 6, 0, 0, 1, 9, 0, 19, 6, 0, 2, 0, 1, 1, 0]' : 0.152218}
{'[2, 2, 0, 3, 6, 0, 0, 1, 9, 0, 19, 6, 0, 2, 0, 1, 1, 0]' : 0.15222}
{'[2, 2, 0, 3, 6, 0, 0, 1, 9, 0, 19, 6, 0, 2, 0, 1, 1, 0]' : 0.152502}
{'[2, 2, 0, 3, 6, 0, 0, 1, 9, 0, 19, 6, 0, 2, 0, 1, 1, 0]' : 0.156957}
{'[2, 2, 0, 3, 6, 0, 0, 1, 9, 0, 19, 6, 0, 2, 0, 1, 1, 0]' : 0.152965}
{'[2, 2, 0, 3, 6, 0, 0, 1, 9, 0, 19, 6, 0, 2, 0, 1, 1, 0]' : 0.152214}
{'[2, 2, 0, 3, 6, 0, 0, 1, 9, 0, 19, 6, 0, 2, 0, 1, 1, 0]' : 0.156102}
{'[2, 2, 0, 3, 6, 0, 0, 1, 9, 0, 19, 6, 0, 2, 0, 1, 1, 0]' : 0.156884}
{'[2, 2, 0, 3, 6, 0, 0, 1, 9, 0, 19, 6, 0, 2, 0, 1, 1, 0]' : 0.152332}
{'[2, 2, 0, 3, 6, 0, 0, 1, 9, 0, 19, 6, 0, 2, 0, 1, 1, 0]' : 0.152287}

out:
 ["{'[2, 2, 0, 3, 6, 0, 0, 1, 9, 0, 19, 6, 0, 2, 0, 1, 1, 0]' : 0.175937}", "{'[2, 2, 0, 3, 6, 0, 0, 1, 9, 0, 19, 6, 0, 2, 0, 1, 1, 0]' : 0.174761}", "{'[2, 2, 0, 3, 6, 0, 0, 1, 9, 0, 19, 6, 0, 2, 0, 1, 1, 0]' : 0.148834}", "{'[2, 2, 0, 3, 6, 0, 0, 1, 9, 0, 19, 6, 0, 2, 0, 1, 1, 0]' : 0.152472}", "{'[2, 2, 0, 3, 6, 0, 0, 1, 9, 0, 19, 6, 0, 2, 0, 1, 1, 0]' : 0.152561}", "{'[2, 2, 0, 3, 6, 0, 0, 1, 9, 0, 19, 6, 0, 2, 0, 1, 1, 0]' : 0.151634}", "{'[2, 2, 0, 3, 6, 0, 0, 1, 9, 0, 19, 6, 0, 2, 0, 1, 1, 0]' : 0.153002}", "{'[2, 2, 0, 3, 6, 0, 0, 1, 9, 0, 19, 6, 0, 2, 0, 1, 1, 0]' : 0.156864}", "{'[2, 2, 0, 3, 6, 0, 0, 1, 9, 0, 19, 6, 0, 2, 0, 1, 1, 0]' : 0.156936}", "{'[2, 2, 0, 3, 6, 0, 0, 1, 9, 0, 19, 6, 0, 2, 0, 1, 1, 0]' : 0.154104}", "{'[2, 2, 0, 3, 6, 0, 0, 1, 9, 0, 19, 6, 0, 2, 0, 1, 1, 0]' : 0.152243}", "{'[2, 2, 0, 3, 6, 0, 0, 1, 9, 0, 19, 6, 0, 2, 0, 1, 1, 0]' : 0.152196}", "{'[2, 2, 0, 3, 6, 0, 0, 1, 9, 0, 19, 6, 0, 2, 0, 1, 1, 0]' : 0.152181}", "{'[2, 2, 0, 3, 6, 0, 0, 1, 9, 0, 19, 6, 0, 2, 0, 1, 1, 0]' : 0.152312}", "{'[2, 2, 0, 3, 6, 0, 0, 1, 9, 0, 19, 6, 0, 2, 0, 1, 1, 0]' : 0.15218}", "{'[2, 2, 0, 3, 6, 0, 0, 1, 9, 0, 19, 6, 0, 2, 0, 1, 1, 0]' : 0.152221}", "{'[2, 2, 0, 3, 6, 0, 0, 1, 9, 0, 19, 6, 0, 2, 0, 1, 1, 0]' : 0.154705}", "{'[2, 2, 0, 3, 6, 0, 0, 1, 9, 0, 19, 6, 0, 2, 0, 1, 1, 0]' : 0.157214}", "{'[2, 2, 0, 3, 6, 0, 0, 1, 9, 0, 19, 6, 0, 2, 0, 1, 1, 0]' : 0.156951}", "{'[2, 2, 0, 3, 6, 0, 0, 1, 9, 0, 19, 6, 0, 2, 0, 1, 1, 0]' : 0.156751}", "{'[2, 2, 0, 3, 6, 0, 0, 1, 9, 0, 19, 6, 0, 2, 0, 1, 1, 0]' : 0.152218}", "{'[2, 2, 0, 3, 6, 0, 0, 1, 9, 0, 19, 6, 0, 2, 0, 1, 1, 0]' : 0.15222}", "{'[2, 2, 0, 3, 6, 0, 0, 1, 9, 0, 19, 6, 0, 2, 0, 1, 1, 0]' : 0.152502}", "{'[2, 2, 0, 3, 6, 0, 0, 1, 9, 0, 19, 6, 0, 2, 0, 1, 1, 0]' : 0.156957}", "{'[2, 2, 0, 3, 6, 0, 0, 1, 9, 0, 19, 6, 0, 2, 0, 1, 1, 0]' : 0.152965}", "{'[2, 2, 0, 3, 6, 0, 0, 1, 9, 0, 19, 6, 0, 2, 0, 1, 1, 0]' : 0.152214}", "{'[2, 2, 0, 3, 6, 0, 0, 1, 9, 0, 19, 6, 0, 2, 0, 1, 1, 0]' : 0.156102}", "{'[2, 2, 0, 3, 6, 0, 0, 1, 9, 0, 19, 6, 0, 2, 0, 1, 1, 0]' : 0.156884}", "{'[2, 2, 0, 3, 6, 0, 0, 1, 9, 0, 19, 6, 0, 2, 0, 1, 1, 0]' : 0.152332}", "{'[2, 2, 0, 3, 6, 0, 0, 1, 9, 0, 19, 6, 0, 2, 0, 1, 1, 0]' : 0.152287}"]
returning from 'run': {'[2, 2, 0, 3, 6, 0, 0, 1, 9, 0, 19, 6, 0, 2, 0, 1, 1, 0]': ([0.175937, 0.174761, 0.148834, 0.152472, 0.152561, 0.151634, 0.153002, 0.156864, 0.156936, 0.154104, 0.152243, 0.152196, 0.152181, 0.152312, 0.15218, 0.152221, 0.154705, 0.157214, 0.156951, 0.156751, 0.152218, 0.15222, 0.152502, 0.156957, 0.152965, 0.152214, 0.156102, 0.156884, 0.152332, 0.152287], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 2, 0, 3, 6, 0, 0, 1, 9, 0, 19, 6, 0, 2, 0, 1, 1, 0]': ([0.175937, 0.174761, 0.148834, 0.152472, 0.152561, 0.151634, 0.153002, 0.156864, 0.156936, 0.154104, 0.152243, 0.152196, 0.152181, 0.152312, 0.15218, 0.152221, 0.154705, 0.157214, 0.156951, 0.156751, 0.152218, 0.15222, 0.152502, 0.156957, 0.152965, 0.152214, 0.156102, 0.156884, 0.152332, 0.152287], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	74
        Max loop nest depth: 	4
        Additions: 		2355
        Multiplications: 	672
        Divisions: 		0
        Logical: 		0
        Reads: 			3892
        Writes: 		598
        Comparisons:		74
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest8.exe __orio_perftest8.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest8.exe  
Program Test Output: 
{'[0, 6, 0, 6, 0, 5, 1, 0, 21, 19, 13, 0, 0, 0, 0, 1, 1, 0]' : 0.182801}
{'[0, 6, 0, 6, 0, 5, 1, 0, 21, 19, 13, 0, 0, 0, 0, 1, 1, 0]' : 0.182789}
{'[0, 6, 0, 6, 0, 5, 1, 0, 21, 19, 13, 0, 0, 0, 0, 1, 1, 0]' : 0.182542}
{'[0, 6, 0, 6, 0, 5, 1, 0, 21, 19, 13, 0, 0, 0, 0, 1, 1, 0]' : 0.182492}
{'[0, 6, 0, 6, 0, 5, 1, 0, 21, 19, 13, 0, 0, 0, 0, 1, 1, 0]' : 0.182616}
{'[0, 6, 0, 6, 0, 5, 1, 0, 21, 19, 13, 0, 0, 0, 0, 1, 1, 0]' : 0.183175}
{'[0, 6, 0, 6, 0, 5, 1, 0, 21, 19, 13, 0, 0, 0, 0, 1, 1, 0]' : 0.182652}
{'[0, 6, 0, 6, 0, 5, 1, 0, 21, 19, 13, 0, 0, 0, 0, 1, 1, 0]' : 0.185886}
{'[0, 6, 0, 6, 0, 5, 1, 0, 21, 19, 13, 0, 0, 0, 0, 1, 1, 0]' : 0.188831}
{'[0, 6, 0, 6, 0, 5, 1, 0, 21, 19, 13, 0, 0, 0, 0, 1, 1, 0]' : 0.18922}
{'[0, 6, 0, 6, 0, 5, 1, 0, 21, 19, 13, 0, 0, 0, 0, 1, 1, 0]' : 0.189577}
{'[0, 6, 0, 6, 0, 5, 1, 0, 21, 19, 13, 0, 0, 0, 0, 1, 1, 0]' : 0.189488}
{'[0, 6, 0, 6, 0, 5, 1, 0, 21, 19, 13, 0, 0, 0, 0, 1, 1, 0]' : 0.188946}
{'[0, 6, 0, 6, 0, 5, 1, 0, 21, 19, 13, 0, 0, 0, 0, 1, 1, 0]' : 0.188807}
{'[0, 6, 0, 6, 0, 5, 1, 0, 21, 19, 13, 0, 0, 0, 0, 1, 1, 0]' : 0.188739}
{'[0, 6, 0, 6, 0, 5, 1, 0, 21, 19, 13, 0, 0, 0, 0, 1, 1, 0]' : 0.189072}
{'[0, 6, 0, 6, 0, 5, 1, 0, 21, 19, 13, 0, 0, 0, 0, 1, 1, 0]' : 0.188971}
{'[0, 6, 0, 6, 0, 5, 1, 0, 21, 19, 13, 0, 0, 0, 0, 1, 1, 0]' : 0.189056}
{'[0, 6, 0, 6, 0, 5, 1, 0, 21, 19, 13, 0, 0, 0, 0, 1, 1, 0]' : 0.188822}
{'[0, 6, 0, 6, 0, 5, 1, 0, 21, 19, 13, 0, 0, 0, 0, 1, 1, 0]' : 0.188917}
{'[0, 6, 0, 6, 0, 5, 1, 0, 21, 19, 13, 0, 0, 0, 0, 1, 1, 0]' : 0.188834}
{'[0, 6, 0, 6, 0, 5, 1, 0, 21, 19, 13, 0, 0, 0, 0, 1, 1, 0]' : 0.188993}
{'[0, 6, 0, 6, 0, 5, 1, 0, 21, 19, 13, 0, 0, 0, 0, 1, 1, 0]' : 0.189147}
{'[0, 6, 0, 6, 0, 5, 1, 0, 21, 19, 13, 0, 0, 0, 0, 1, 1, 0]' : 0.188948}
{'[0, 6, 0, 6, 0, 5, 1, 0, 21, 19, 13, 0, 0, 0, 0, 1, 1, 0]' : 0.18875}
{'[0, 6, 0, 6, 0, 5, 1, 0, 21, 19, 13, 0, 0, 0, 0, 1, 1, 0]' : 0.18881}
{'[0, 6, 0, 6, 0, 5, 1, 0, 21, 19, 13, 0, 0, 0, 0, 1, 1, 0]' : 0.188999}
{'[0, 6, 0, 6, 0, 5, 1, 0, 21, 19, 13, 0, 0, 0, 0, 1, 1, 0]' : 0.188714}
{'[0, 6, 0, 6, 0, 5, 1, 0, 21, 19, 13, 0, 0, 0, 0, 1, 1, 0]' : 0.189117}
{'[0, 6, 0, 6, 0, 5, 1, 0, 21, 19, 13, 0, 0, 0, 0, 1, 1, 0]' : 0.189044}

out:
 ["{'[0, 6, 0, 6, 0, 5, 1, 0, 21, 19, 13, 0, 0, 0, 0, 1, 1, 0]' : 0.182801}", "{'[0, 6, 0, 6, 0, 5, 1, 0, 21, 19, 13, 0, 0, 0, 0, 1, 1, 0]' : 0.182789}", "{'[0, 6, 0, 6, 0, 5, 1, 0, 21, 19, 13, 0, 0, 0, 0, 1, 1, 0]' : 0.182542}", "{'[0, 6, 0, 6, 0, 5, 1, 0, 21, 19, 13, 0, 0, 0, 0, 1, 1, 0]' : 0.182492}", "{'[0, 6, 0, 6, 0, 5, 1, 0, 21, 19, 13, 0, 0, 0, 0, 1, 1, 0]' : 0.182616}", "{'[0, 6, 0, 6, 0, 5, 1, 0, 21, 19, 13, 0, 0, 0, 0, 1, 1, 0]' : 0.183175}", "{'[0, 6, 0, 6, 0, 5, 1, 0, 21, 19, 13, 0, 0, 0, 0, 1, 1, 0]' : 0.182652}", "{'[0, 6, 0, 6, 0, 5, 1, 0, 21, 19, 13, 0, 0, 0, 0, 1, 1, 0]' : 0.185886}", "{'[0, 6, 0, 6, 0, 5, 1, 0, 21, 19, 13, 0, 0, 0, 0, 1, 1, 0]' : 0.188831}", "{'[0, 6, 0, 6, 0, 5, 1, 0, 21, 19, 13, 0, 0, 0, 0, 1, 1, 0]' : 0.18922}", "{'[0, 6, 0, 6, 0, 5, 1, 0, 21, 19, 13, 0, 0, 0, 0, 1, 1, 0]' : 0.189577}", "{'[0, 6, 0, 6, 0, 5, 1, 0, 21, 19, 13, 0, 0, 0, 0, 1, 1, 0]' : 0.189488}", "{'[0, 6, 0, 6, 0, 5, 1, 0, 21, 19, 13, 0, 0, 0, 0, 1, 1, 0]' : 0.188946}", "{'[0, 6, 0, 6, 0, 5, 1, 0, 21, 19, 13, 0, 0, 0, 0, 1, 1, 0]' : 0.188807}", "{'[0, 6, 0, 6, 0, 5, 1, 0, 21, 19, 13, 0, 0, 0, 0, 1, 1, 0]' : 0.188739}", "{'[0, 6, 0, 6, 0, 5, 1, 0, 21, 19, 13, 0, 0, 0, 0, 1, 1, 0]' : 0.189072}", "{'[0, 6, 0, 6, 0, 5, 1, 0, 21, 19, 13, 0, 0, 0, 0, 1, 1, 0]' : 0.188971}", "{'[0, 6, 0, 6, 0, 5, 1, 0, 21, 19, 13, 0, 0, 0, 0, 1, 1, 0]' : 0.189056}", "{'[0, 6, 0, 6, 0, 5, 1, 0, 21, 19, 13, 0, 0, 0, 0, 1, 1, 0]' : 0.188822}", "{'[0, 6, 0, 6, 0, 5, 1, 0, 21, 19, 13, 0, 0, 0, 0, 1, 1, 0]' : 0.188917}", "{'[0, 6, 0, 6, 0, 5, 1, 0, 21, 19, 13, 0, 0, 0, 0, 1, 1, 0]' : 0.188834}", "{'[0, 6, 0, 6, 0, 5, 1, 0, 21, 19, 13, 0, 0, 0, 0, 1, 1, 0]' : 0.188993}", "{'[0, 6, 0, 6, 0, 5, 1, 0, 21, 19, 13, 0, 0, 0, 0, 1, 1, 0]' : 0.189147}", "{'[0, 6, 0, 6, 0, 5, 1, 0, 21, 19, 13, 0, 0, 0, 0, 1, 1, 0]' : 0.188948}", "{'[0, 6, 0, 6, 0, 5, 1, 0, 21, 19, 13, 0, 0, 0, 0, 1, 1, 0]' : 0.18875}", "{'[0, 6, 0, 6, 0, 5, 1, 0, 21, 19, 13, 0, 0, 0, 0, 1, 1, 0]' : 0.18881}", "{'[0, 6, 0, 6, 0, 5, 1, 0, 21, 19, 13, 0, 0, 0, 0, 1, 1, 0]' : 0.188999}", "{'[0, 6, 0, 6, 0, 5, 1, 0, 21, 19, 13, 0, 0, 0, 0, 1, 1, 0]' : 0.188714}", "{'[0, 6, 0, 6, 0, 5, 1, 0, 21, 19, 13, 0, 0, 0, 0, 1, 1, 0]' : 0.189117}", "{'[0, 6, 0, 6, 0, 5, 1, 0, 21, 19, 13, 0, 0, 0, 0, 1, 1, 0]' : 0.189044}"]
returning from 'run': {'[0, 6, 0, 6, 0, 5, 1, 0, 21, 19, 13, 0, 0, 0, 0, 1, 1, 0]': ([0.182801, 0.182789, 0.182542, 0.182492, 0.182616, 0.183175, 0.182652, 0.185886, 0.188831, 0.18922, 0.189577, 0.189488, 0.188946, 0.188807, 0.188739, 0.189072, 0.188971, 0.189056, 0.188822, 0.188917, 0.188834, 0.188993, 0.189147, 0.188948, 0.18875, 0.18881, 0.188999, 0.188714, 0.189117, 0.189044], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 0, 6, 0, 5, 1, 0, 21, 19, 13, 0, 0, 0, 0, 1, 1, 0]': ([0.182801, 0.182789, 0.182542, 0.182492, 0.182616, 0.183175, 0.182652, 0.185886, 0.188831, 0.18922, 0.189577, 0.189488, 0.188946, 0.188807, 0.188739, 0.189072, 0.188971, 0.189056, 0.188822, 0.188917, 0.188834, 0.188993, 0.189147, 0.188948, 0.18875, 0.18881, 0.188999, 0.188714, 0.189117, 0.189044], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	26
        Max loop nest depth: 	4
        Additions: 		1467
        Multiplications: 	532
        Divisions: 		0
        Logical: 		0
        Reads: 			3415
        Writes: 		799
        Comparisons:		26
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest9.exe __orio_perftest9.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest9.exe  
Program Test Output: 
{'[0, 1, 0, 0, 3, 0, 0, 1, 18, 5, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.110504}
{'[0, 1, 0, 0, 3, 0, 0, 1, 18, 5, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.110571}
{'[0, 1, 0, 0, 3, 0, 0, 1, 18, 5, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.110443}
{'[0, 1, 0, 0, 3, 0, 0, 1, 18, 5, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.110266}
{'[0, 1, 0, 0, 3, 0, 0, 1, 18, 5, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.110523}
{'[0, 1, 0, 0, 3, 0, 0, 1, 18, 5, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.110512}
{'[0, 1, 0, 0, 3, 0, 0, 1, 18, 5, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.110328}
{'[0, 1, 0, 0, 3, 0, 0, 1, 18, 5, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.110447}
{'[0, 1, 0, 0, 3, 0, 0, 1, 18, 5, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.110331}
{'[0, 1, 0, 0, 3, 0, 0, 1, 18, 5, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.110571}
{'[0, 1, 0, 0, 3, 0, 0, 1, 18, 5, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.110391}
{'[0, 1, 0, 0, 3, 0, 0, 1, 18, 5, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.110506}
{'[0, 1, 0, 0, 3, 0, 0, 1, 18, 5, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.11047}
{'[0, 1, 0, 0, 3, 0, 0, 1, 18, 5, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.110327}
{'[0, 1, 0, 0, 3, 0, 0, 1, 18, 5, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.110516}
{'[0, 1, 0, 0, 3, 0, 0, 1, 18, 5, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.110796}
{'[0, 1, 0, 0, 3, 0, 0, 1, 18, 5, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.110682}
{'[0, 1, 0, 0, 3, 0, 0, 1, 18, 5, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.110411}
{'[0, 1, 0, 0, 3, 0, 0, 1, 18, 5, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.11037}
{'[0, 1, 0, 0, 3, 0, 0, 1, 18, 5, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.11039}
{'[0, 1, 0, 0, 3, 0, 0, 1, 18, 5, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.110293}
{'[0, 1, 0, 0, 3, 0, 0, 1, 18, 5, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.11031}
{'[0, 1, 0, 0, 3, 0, 0, 1, 18, 5, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.110282}
{'[0, 1, 0, 0, 3, 0, 0, 1, 18, 5, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.110325}
{'[0, 1, 0, 0, 3, 0, 0, 1, 18, 5, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.110638}
{'[0, 1, 0, 0, 3, 0, 0, 1, 18, 5, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.110546}
{'[0, 1, 0, 0, 3, 0, 0, 1, 18, 5, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.110574}
{'[0, 1, 0, 0, 3, 0, 0, 1, 18, 5, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.110346}
{'[0, 1, 0, 0, 3, 0, 0, 1, 18, 5, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.110399}
{'[0, 1, 0, 0, 3, 0, 0, 1, 18, 5, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.110297}

out:
 ["{'[0, 1, 0, 0, 3, 0, 0, 1, 18, 5, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.110504}", "{'[0, 1, 0, 0, 3, 0, 0, 1, 18, 5, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.110571}", "{'[0, 1, 0, 0, 3, 0, 0, 1, 18, 5, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.110443}", "{'[0, 1, 0, 0, 3, 0, 0, 1, 18, 5, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.110266}", "{'[0, 1, 0, 0, 3, 0, 0, 1, 18, 5, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.110523}", "{'[0, 1, 0, 0, 3, 0, 0, 1, 18, 5, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.110512}", "{'[0, 1, 0, 0, 3, 0, 0, 1, 18, 5, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.110328}", "{'[0, 1, 0, 0, 3, 0, 0, 1, 18, 5, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.110447}", "{'[0, 1, 0, 0, 3, 0, 0, 1, 18, 5, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.110331}", "{'[0, 1, 0, 0, 3, 0, 0, 1, 18, 5, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.110571}", "{'[0, 1, 0, 0, 3, 0, 0, 1, 18, 5, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.110391}", "{'[0, 1, 0, 0, 3, 0, 0, 1, 18, 5, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.110506}", "{'[0, 1, 0, 0, 3, 0, 0, 1, 18, 5, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.11047}", "{'[0, 1, 0, 0, 3, 0, 0, 1, 18, 5, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.110327}", "{'[0, 1, 0, 0, 3, 0, 0, 1, 18, 5, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.110516}", "{'[0, 1, 0, 0, 3, 0, 0, 1, 18, 5, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.110796}", "{'[0, 1, 0, 0, 3, 0, 0, 1, 18, 5, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.110682}", "{'[0, 1, 0, 0, 3, 0, 0, 1, 18, 5, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.110411}", "{'[0, 1, 0, 0, 3, 0, 0, 1, 18, 5, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.11037}", "{'[0, 1, 0, 0, 3, 0, 0, 1, 18, 5, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.11039}", "{'[0, 1, 0, 0, 3, 0, 0, 1, 18, 5, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.110293}", "{'[0, 1, 0, 0, 3, 0, 0, 1, 18, 5, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.11031}", "{'[0, 1, 0, 0, 3, 0, 0, 1, 18, 5, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.110282}", "{'[0, 1, 0, 0, 3, 0, 0, 1, 18, 5, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.110325}", "{'[0, 1, 0, 0, 3, 0, 0, 1, 18, 5, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.110638}", "{'[0, 1, 0, 0, 3, 0, 0, 1, 18, 5, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.110546}", "{'[0, 1, 0, 0, 3, 0, 0, 1, 18, 5, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.110574}", "{'[0, 1, 0, 0, 3, 0, 0, 1, 18, 5, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.110346}", "{'[0, 1, 0, 0, 3, 0, 0, 1, 18, 5, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.110399}", "{'[0, 1, 0, 0, 3, 0, 0, 1, 18, 5, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.110297}"]
returning from 'run': {'[0, 1, 0, 0, 3, 0, 0, 1, 18, 5, 0, 27, 0, 1, 0, 1, 0, 1]': ([0.110504, 0.110571, 0.110443, 0.110266, 0.110523, 0.110512, 0.110328, 0.110447, 0.110331, 0.110571, 0.110391, 0.110506, 0.11047, 0.110327, 0.110516, 0.110796, 0.110682, 0.110411, 0.11037, 0.11039, 0.110293, 0.11031, 0.110282, 0.110325, 0.110638, 0.110546, 0.110574, 0.110346, 0.110399, 0.110297], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 1, 0, 0, 3, 0, 0, 1, 18, 5, 0, 27, 0, 1, 0, 1, 0, 1]': ([0.110504, 0.110571, 0.110443, 0.110266, 0.110523, 0.110512, 0.110328, 0.110447, 0.110331, 0.110571, 0.110391, 0.110506, 0.11047, 0.110327, 0.110516, 0.110796, 0.110682, 0.110411, 0.11037, 0.11039, 0.110293, 0.11031, 0.110282, 0.110325, 0.110638, 0.110546, 0.110574, 0.110346, 0.110399, 0.110297], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	23
        Max loop nest depth: 	5
        Additions: 		562
        Multiplications: 	216
        Divisions: 		0
        Logical: 		0
        Reads: 			1175
        Writes: 		236
        Comparisons:		23
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest10.exe __orio_perftest10.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest10.exe  
Program Test Output: 
{'[0, 0, 1, 6, 3, 5, 1, 1, 19, 0, 25, 2, 1, 1, 0, 1, 1, 1]' : 0.127994}
{'[0, 0, 1, 6, 3, 5, 1, 1, 19, 0, 25, 2, 1, 1, 0, 1, 1, 1]' : 0.127903}
{'[0, 0, 1, 6, 3, 5, 1, 1, 19, 0, 25, 2, 1, 1, 0, 1, 1, 1]' : 0.128}
{'[0, 0, 1, 6, 3, 5, 1, 1, 19, 0, 25, 2, 1, 1, 0, 1, 1, 1]' : 0.127966}
{'[0, 0, 1, 6, 3, 5, 1, 1, 19, 0, 25, 2, 1, 1, 0, 1, 1, 1]' : 0.125635}
{'[0, 0, 1, 6, 3, 5, 1, 1, 19, 0, 25, 2, 1, 1, 0, 1, 1, 1]' : 0.109116}
{'[0, 0, 1, 6, 3, 5, 1, 1, 19, 0, 25, 2, 1, 1, 0, 1, 1, 1]' : 0.10888}
{'[0, 0, 1, 6, 3, 5, 1, 1, 19, 0, 25, 2, 1, 1, 0, 1, 1, 1]' : 0.108477}
{'[0, 0, 1, 6, 3, 5, 1, 1, 19, 0, 25, 2, 1, 1, 0, 1, 1, 1]' : 0.108301}
{'[0, 0, 1, 6, 3, 5, 1, 1, 19, 0, 25, 2, 1, 1, 0, 1, 1, 1]' : 0.10839}
{'[0, 0, 1, 6, 3, 5, 1, 1, 19, 0, 25, 2, 1, 1, 0, 1, 1, 1]' : 0.10826}
{'[0, 0, 1, 6, 3, 5, 1, 1, 19, 0, 25, 2, 1, 1, 0, 1, 1, 1]' : 0.108419}
{'[0, 0, 1, 6, 3, 5, 1, 1, 19, 0, 25, 2, 1, 1, 0, 1, 1, 1]' : 0.108506}
{'[0, 0, 1, 6, 3, 5, 1, 1, 19, 0, 25, 2, 1, 1, 0, 1, 1, 1]' : 0.108593}
{'[0, 0, 1, 6, 3, 5, 1, 1, 19, 0, 25, 2, 1, 1, 0, 1, 1, 1]' : 0.108579}
{'[0, 0, 1, 6, 3, 5, 1, 1, 19, 0, 25, 2, 1, 1, 0, 1, 1, 1]' : 0.108293}
{'[0, 0, 1, 6, 3, 5, 1, 1, 19, 0, 25, 2, 1, 1, 0, 1, 1, 1]' : 0.108304}
{'[0, 0, 1, 6, 3, 5, 1, 1, 19, 0, 25, 2, 1, 1, 0, 1, 1, 1]' : 0.108308}
{'[0, 0, 1, 6, 3, 5, 1, 1, 19, 0, 25, 2, 1, 1, 0, 1, 1, 1]' : 0.108215}
{'[0, 0, 1, 6, 3, 5, 1, 1, 19, 0, 25, 2, 1, 1, 0, 1, 1, 1]' : 0.108605}
{'[0, 0, 1, 6, 3, 5, 1, 1, 19, 0, 25, 2, 1, 1, 0, 1, 1, 1]' : 0.108504}
{'[0, 0, 1, 6, 3, 5, 1, 1, 19, 0, 25, 2, 1, 1, 0, 1, 1, 1]' : 0.108753}
{'[0, 0, 1, 6, 3, 5, 1, 1, 19, 0, 25, 2, 1, 1, 0, 1, 1, 1]' : 0.10857}
{'[0, 0, 1, 6, 3, 5, 1, 1, 19, 0, 25, 2, 1, 1, 0, 1, 1, 1]' : 0.108724}
{'[0, 0, 1, 6, 3, 5, 1, 1, 19, 0, 25, 2, 1, 1, 0, 1, 1, 1]' : 0.108847}
{'[0, 0, 1, 6, 3, 5, 1, 1, 19, 0, 25, 2, 1, 1, 0, 1, 1, 1]' : 0.108486}
{'[0, 0, 1, 6, 3, 5, 1, 1, 19, 0, 25, 2, 1, 1, 0, 1, 1, 1]' : 0.108429}
{'[0, 0, 1, 6, 3, 5, 1, 1, 19, 0, 25, 2, 1, 1, 0, 1, 1, 1]' : 0.108368}
{'[0, 0, 1, 6, 3, 5, 1, 1, 19, 0, 25, 2, 1, 1, 0, 1, 1, 1]' : 0.108555}
{'[0, 0, 1, 6, 3, 5, 1, 1, 19, 0, 25, 2, 1, 1, 0, 1, 1, 1]' : 0.108429}

out:
 ["{'[0, 0, 1, 6, 3, 5, 1, 1, 19, 0, 25, 2, 1, 1, 0, 1, 1, 1]' : 0.127994}", "{'[0, 0, 1, 6, 3, 5, 1, 1, 19, 0, 25, 2, 1, 1, 0, 1, 1, 1]' : 0.127903}", "{'[0, 0, 1, 6, 3, 5, 1, 1, 19, 0, 25, 2, 1, 1, 0, 1, 1, 1]' : 0.128}", "{'[0, 0, 1, 6, 3, 5, 1, 1, 19, 0, 25, 2, 1, 1, 0, 1, 1, 1]' : 0.127966}", "{'[0, 0, 1, 6, 3, 5, 1, 1, 19, 0, 25, 2, 1, 1, 0, 1, 1, 1]' : 0.125635}", "{'[0, 0, 1, 6, 3, 5, 1, 1, 19, 0, 25, 2, 1, 1, 0, 1, 1, 1]' : 0.109116}", "{'[0, 0, 1, 6, 3, 5, 1, 1, 19, 0, 25, 2, 1, 1, 0, 1, 1, 1]' : 0.10888}", "{'[0, 0, 1, 6, 3, 5, 1, 1, 19, 0, 25, 2, 1, 1, 0, 1, 1, 1]' : 0.108477}", "{'[0, 0, 1, 6, 3, 5, 1, 1, 19, 0, 25, 2, 1, 1, 0, 1, 1, 1]' : 0.108301}", "{'[0, 0, 1, 6, 3, 5, 1, 1, 19, 0, 25, 2, 1, 1, 0, 1, 1, 1]' : 0.10839}", "{'[0, 0, 1, 6, 3, 5, 1, 1, 19, 0, 25, 2, 1, 1, 0, 1, 1, 1]' : 0.10826}", "{'[0, 0, 1, 6, 3, 5, 1, 1, 19, 0, 25, 2, 1, 1, 0, 1, 1, 1]' : 0.108419}", "{'[0, 0, 1, 6, 3, 5, 1, 1, 19, 0, 25, 2, 1, 1, 0, 1, 1, 1]' : 0.108506}", "{'[0, 0, 1, 6, 3, 5, 1, 1, 19, 0, 25, 2, 1, 1, 0, 1, 1, 1]' : 0.108593}", "{'[0, 0, 1, 6, 3, 5, 1, 1, 19, 0, 25, 2, 1, 1, 0, 1, 1, 1]' : 0.108579}", "{'[0, 0, 1, 6, 3, 5, 1, 1, 19, 0, 25, 2, 1, 1, 0, 1, 1, 1]' : 0.108293}", "{'[0, 0, 1, 6, 3, 5, 1, 1, 19, 0, 25, 2, 1, 1, 0, 1, 1, 1]' : 0.108304}", "{'[0, 0, 1, 6, 3, 5, 1, 1, 19, 0, 25, 2, 1, 1, 0, 1, 1, 1]' : 0.108308}", "{'[0, 0, 1, 6, 3, 5, 1, 1, 19, 0, 25, 2, 1, 1, 0, 1, 1, 1]' : 0.108215}", "{'[0, 0, 1, 6, 3, 5, 1, 1, 19, 0, 25, 2, 1, 1, 0, 1, 1, 1]' : 0.108605}", "{'[0, 0, 1, 6, 3, 5, 1, 1, 19, 0, 25, 2, 1, 1, 0, 1, 1, 1]' : 0.108504}", "{'[0, 0, 1, 6, 3, 5, 1, 1, 19, 0, 25, 2, 1, 1, 0, 1, 1, 1]' : 0.108753}", "{'[0, 0, 1, 6, 3, 5, 1, 1, 19, 0, 25, 2, 1, 1, 0, 1, 1, 1]' : 0.10857}", "{'[0, 0, 1, 6, 3, 5, 1, 1, 19, 0, 25, 2, 1, 1, 0, 1, 1, 1]' : 0.108724}", "{'[0, 0, 1, 6, 3, 5, 1, 1, 19, 0, 25, 2, 1, 1, 0, 1, 1, 1]' : 0.108847}", "{'[0, 0, 1, 6, 3, 5, 1, 1, 19, 0, 25, 2, 1, 1, 0, 1, 1, 1]' : 0.108486}", "{'[0, 0, 1, 6, 3, 5, 1, 1, 19, 0, 25, 2, 1, 1, 0, 1, 1, 1]' : 0.108429}", "{'[0, 0, 1, 6, 3, 5, 1, 1, 19, 0, 25, 2, 1, 1, 0, 1, 1, 1]' : 0.108368}", "{'[0, 0, 1, 6, 3, 5, 1, 1, 19, 0, 25, 2, 1, 1, 0, 1, 1, 1]' : 0.108555}", "{'[0, 0, 1, 6, 3, 5, 1, 1, 19, 0, 25, 2, 1, 1, 0, 1, 1, 1]' : 0.108429}"]
returning from 'run': {'[0, 0, 1, 6, 3, 5, 1, 1, 19, 0, 25, 2, 1, 1, 0, 1, 1, 1]': ([0.127994, 0.127903, 0.128, 0.127966, 0.125635, 0.109116, 0.10888, 0.108477, 0.108301, 0.10839, 0.10826, 0.108419, 0.108506, 0.108593, 0.108579, 0.108293, 0.108304, 0.108308, 0.108215, 0.108605, 0.108504, 0.108753, 0.10857, 0.108724, 0.108847, 0.108486, 0.108429, 0.108368, 0.108555, 0.108429], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 1, 6, 3, 5, 1, 1, 19, 0, 25, 2, 1, 1, 0, 1, 1, 1]': ([0.127994, 0.127903, 0.128, 0.127966, 0.125635, 0.109116, 0.10888, 0.108477, 0.108301, 0.10839, 0.10826, 0.108419, 0.108506, 0.108593, 0.108579, 0.108293, 0.108304, 0.108308, 0.108215, 0.108605, 0.108504, 0.108753, 0.10857, 0.108724, 0.108847, 0.108486, 0.108429, 0.108368, 0.108555, 0.108429], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	98
        Max loop nest depth: 	5
        Additions: 		6620
        Multiplications: 	1462
        Divisions: 		0
        Logical: 		0
        Reads: 			9636
        Writes: 		1003
        Comparisons:		98
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest11.exe __orio_perftest11.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest11.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest11.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest11.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest11.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = kkk
Code stats:
        Number of loops: 	167
        Max loop nest depth: 	5
        Additions: 		17055
        Multiplications: 	3906
        Divisions: 		0
        Logical: 		0
        Reads: 			24349
        Writes: 		2442
        Comparisons:		167
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest12.exe __orio_perftest12.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest12.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest12.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest12.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest12.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = kkk
Code stats:
        Number of loops: 	97
        Max loop nest depth: 	6
        Additions: 		2176
        Multiplications: 	864
        Divisions: 		0
        Logical: 		0
        Reads: 			4507
        Writes: 		849
        Comparisons:		97
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest13.exe __orio_perftest13.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest13.exe  
Program Test Output: 
{'[2, 1, 5, 5, 2, 3, 1, 1, 12, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.231388}
{'[2, 1, 5, 5, 2, 3, 1, 1, 12, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.228199}
{'[2, 1, 5, 5, 2, 3, 1, 1, 12, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.195225}
{'[2, 1, 5, 5, 2, 3, 1, 1, 12, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.195196}
{'[2, 1, 5, 5, 2, 3, 1, 1, 12, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.195312}
{'[2, 1, 5, 5, 2, 3, 1, 1, 12, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.194954}
{'[2, 1, 5, 5, 2, 3, 1, 1, 12, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.195156}
{'[2, 1, 5, 5, 2, 3, 1, 1, 12, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.195169}
{'[2, 1, 5, 5, 2, 3, 1, 1, 12, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.195264}
{'[2, 1, 5, 5, 2, 3, 1, 1, 12, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.195219}
{'[2, 1, 5, 5, 2, 3, 1, 1, 12, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.195232}
{'[2, 1, 5, 5, 2, 3, 1, 1, 12, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.195257}
{'[2, 1, 5, 5, 2, 3, 1, 1, 12, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.19557}
{'[2, 1, 5, 5, 2, 3, 1, 1, 12, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.195021}
{'[2, 1, 5, 5, 2, 3, 1, 1, 12, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.195138}
{'[2, 1, 5, 5, 2, 3, 1, 1, 12, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.19494}
{'[2, 1, 5, 5, 2, 3, 1, 1, 12, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.195096}
{'[2, 1, 5, 5, 2, 3, 1, 1, 12, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.19491}
{'[2, 1, 5, 5, 2, 3, 1, 1, 12, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.195852}
{'[2, 1, 5, 5, 2, 3, 1, 1, 12, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.195104}
{'[2, 1, 5, 5, 2, 3, 1, 1, 12, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.194994}
{'[2, 1, 5, 5, 2, 3, 1, 1, 12, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.195279}
{'[2, 1, 5, 5, 2, 3, 1, 1, 12, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.197263}
{'[2, 1, 5, 5, 2, 3, 1, 1, 12, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.201056}
{'[2, 1, 5, 5, 2, 3, 1, 1, 12, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.201521}
{'[2, 1, 5, 5, 2, 3, 1, 1, 12, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.200915}
{'[2, 1, 5, 5, 2, 3, 1, 1, 12, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.201}
{'[2, 1, 5, 5, 2, 3, 1, 1, 12, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.201168}
{'[2, 1, 5, 5, 2, 3, 1, 1, 12, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.201019}
{'[2, 1, 5, 5, 2, 3, 1, 1, 12, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.201174}

out:
 ["{'[2, 1, 5, 5, 2, 3, 1, 1, 12, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.231388}", "{'[2, 1, 5, 5, 2, 3, 1, 1, 12, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.228199}", "{'[2, 1, 5, 5, 2, 3, 1, 1, 12, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.195225}", "{'[2, 1, 5, 5, 2, 3, 1, 1, 12, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.195196}", "{'[2, 1, 5, 5, 2, 3, 1, 1, 12, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.195312}", "{'[2, 1, 5, 5, 2, 3, 1, 1, 12, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.194954}", "{'[2, 1, 5, 5, 2, 3, 1, 1, 12, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.195156}", "{'[2, 1, 5, 5, 2, 3, 1, 1, 12, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.195169}", "{'[2, 1, 5, 5, 2, 3, 1, 1, 12, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.195264}", "{'[2, 1, 5, 5, 2, 3, 1, 1, 12, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.195219}", "{'[2, 1, 5, 5, 2, 3, 1, 1, 12, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.195232}", "{'[2, 1, 5, 5, 2, 3, 1, 1, 12, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.195257}", "{'[2, 1, 5, 5, 2, 3, 1, 1, 12, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.19557}", "{'[2, 1, 5, 5, 2, 3, 1, 1, 12, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.195021}", "{'[2, 1, 5, 5, 2, 3, 1, 1, 12, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.195138}", "{'[2, 1, 5, 5, 2, 3, 1, 1, 12, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.19494}", "{'[2, 1, 5, 5, 2, 3, 1, 1, 12, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.195096}", "{'[2, 1, 5, 5, 2, 3, 1, 1, 12, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.19491}", "{'[2, 1, 5, 5, 2, 3, 1, 1, 12, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.195852}", "{'[2, 1, 5, 5, 2, 3, 1, 1, 12, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.195104}", "{'[2, 1, 5, 5, 2, 3, 1, 1, 12, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.194994}", "{'[2, 1, 5, 5, 2, 3, 1, 1, 12, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.195279}", "{'[2, 1, 5, 5, 2, 3, 1, 1, 12, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.197263}", "{'[2, 1, 5, 5, 2, 3, 1, 1, 12, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.201056}", "{'[2, 1, 5, 5, 2, 3, 1, 1, 12, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.201521}", "{'[2, 1, 5, 5, 2, 3, 1, 1, 12, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.200915}", "{'[2, 1, 5, 5, 2, 3, 1, 1, 12, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.201}", "{'[2, 1, 5, 5, 2, 3, 1, 1, 12, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.201168}", "{'[2, 1, 5, 5, 2, 3, 1, 1, 12, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.201019}", "{'[2, 1, 5, 5, 2, 3, 1, 1, 12, 25, 29, 0, 0, 1, 1, 1, 1, 1]' : 0.201174}"]
returning from 'run': {'[2, 1, 5, 5, 2, 3, 1, 1, 12, 25, 29, 0, 0, 1, 1, 1, 1, 1]': ([0.231388, 0.228199, 0.195225, 0.195196, 0.195312, 0.194954, 0.195156, 0.195169, 0.195264, 0.195219, 0.195232, 0.195257, 0.19557, 0.195021, 0.195138, 0.19494, 0.195096, 0.19491, 0.195852, 0.195104, 0.194994, 0.195279, 0.197263, 0.201056, 0.201521, 0.200915, 0.201, 0.201168, 0.201019, 0.201174], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 1, 5, 5, 2, 3, 1, 1, 12, 25, 29, 0, 0, 1, 1, 1, 1, 1]': ([0.231388, 0.228199, 0.195225, 0.195196, 0.195312, 0.194954, 0.195156, 0.195169, 0.195264, 0.195219, 0.195232, 0.195257, 0.19557, 0.195021, 0.195138, 0.19494, 0.195096, 0.19491, 0.195852, 0.195104, 0.194994, 0.195279, 0.197263, 0.201056, 0.201521, 0.200915, 0.201, 0.201168, 0.201019, 0.201174], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	6
        Additions: 		298
        Multiplications: 	92
        Divisions: 		0
        Logical: 		0
        Reads: 			634
        Writes: 		110
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest14.exe __orio_perftest14.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest14.exe  
Program Test Output: 
{'[5, 6, 1, 6, 0, 2, 1, 0, 29, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.25703}
{'[5, 6, 1, 6, 0, 2, 1, 0, 29, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.256742}
{'[5, 6, 1, 6, 0, 2, 1, 0, 29, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.225189}
{'[5, 6, 1, 6, 0, 2, 1, 0, 29, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.222641}
{'[5, 6, 1, 6, 0, 2, 1, 0, 29, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.222412}
{'[5, 6, 1, 6, 0, 2, 1, 0, 29, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.222567}
{'[5, 6, 1, 6, 0, 2, 1, 0, 29, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.222498}
{'[5, 6, 1, 6, 0, 2, 1, 0, 29, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.222778}
{'[5, 6, 1, 6, 0, 2, 1, 0, 29, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.222743}
{'[5, 6, 1, 6, 0, 2, 1, 0, 29, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.22284}
{'[5, 6, 1, 6, 0, 2, 1, 0, 29, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.222725}
{'[5, 6, 1, 6, 0, 2, 1, 0, 29, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.222799}
{'[5, 6, 1, 6, 0, 2, 1, 0, 29, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.223154}
{'[5, 6, 1, 6, 0, 2, 1, 0, 29, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.222675}
{'[5, 6, 1, 6, 0, 2, 1, 0, 29, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.222948}
{'[5, 6, 1, 6, 0, 2, 1, 0, 29, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.223}
{'[5, 6, 1, 6, 0, 2, 1, 0, 29, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.222885}
{'[5, 6, 1, 6, 0, 2, 1, 0, 29, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.223027}
{'[5, 6, 1, 6, 0, 2, 1, 0, 29, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.222821}
{'[5, 6, 1, 6, 0, 2, 1, 0, 29, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.222676}
{'[5, 6, 1, 6, 0, 2, 1, 0, 29, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.220357}
{'[5, 6, 1, 6, 0, 2, 1, 0, 29, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.215893}
{'[5, 6, 1, 6, 0, 2, 1, 0, 29, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.215909}
{'[5, 6, 1, 6, 0, 2, 1, 0, 29, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.215513}
{'[5, 6, 1, 6, 0, 2, 1, 0, 29, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.215558}
{'[5, 6, 1, 6, 0, 2, 1, 0, 29, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.215586}
{'[5, 6, 1, 6, 0, 2, 1, 0, 29, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.215765}
{'[5, 6, 1, 6, 0, 2, 1, 0, 29, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.216021}
{'[5, 6, 1, 6, 0, 2, 1, 0, 29, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.21574}
{'[5, 6, 1, 6, 0, 2, 1, 0, 29, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.215687}

out:
 ["{'[5, 6, 1, 6, 0, 2, 1, 0, 29, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.25703}", "{'[5, 6, 1, 6, 0, 2, 1, 0, 29, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.256742}", "{'[5, 6, 1, 6, 0, 2, 1, 0, 29, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.225189}", "{'[5, 6, 1, 6, 0, 2, 1, 0, 29, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.222641}", "{'[5, 6, 1, 6, 0, 2, 1, 0, 29, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.222412}", "{'[5, 6, 1, 6, 0, 2, 1, 0, 29, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.222567}", "{'[5, 6, 1, 6, 0, 2, 1, 0, 29, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.222498}", "{'[5, 6, 1, 6, 0, 2, 1, 0, 29, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.222778}", "{'[5, 6, 1, 6, 0, 2, 1, 0, 29, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.222743}", "{'[5, 6, 1, 6, 0, 2, 1, 0, 29, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.22284}", "{'[5, 6, 1, 6, 0, 2, 1, 0, 29, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.222725}", "{'[5, 6, 1, 6, 0, 2, 1, 0, 29, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.222799}", "{'[5, 6, 1, 6, 0, 2, 1, 0, 29, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.223154}", "{'[5, 6, 1, 6, 0, 2, 1, 0, 29, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.222675}", "{'[5, 6, 1, 6, 0, 2, 1, 0, 29, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.222948}", "{'[5, 6, 1, 6, 0, 2, 1, 0, 29, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.223}", "{'[5, 6, 1, 6, 0, 2, 1, 0, 29, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.222885}", "{'[5, 6, 1, 6, 0, 2, 1, 0, 29, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.223027}", "{'[5, 6, 1, 6, 0, 2, 1, 0, 29, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.222821}", "{'[5, 6, 1, 6, 0, 2, 1, 0, 29, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.222676}", "{'[5, 6, 1, 6, 0, 2, 1, 0, 29, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.220357}", "{'[5, 6, 1, 6, 0, 2, 1, 0, 29, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.215893}", "{'[5, 6, 1, 6, 0, 2, 1, 0, 29, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.215909}", "{'[5, 6, 1, 6, 0, 2, 1, 0, 29, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.215513}", "{'[5, 6, 1, 6, 0, 2, 1, 0, 29, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.215558}", "{'[5, 6, 1, 6, 0, 2, 1, 0, 29, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.215586}", "{'[5, 6, 1, 6, 0, 2, 1, 0, 29, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.215765}", "{'[5, 6, 1, 6, 0, 2, 1, 0, 29, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.216021}", "{'[5, 6, 1, 6, 0, 2, 1, 0, 29, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.21574}", "{'[5, 6, 1, 6, 0, 2, 1, 0, 29, 0, 28, 28, 0, 1, 1, 0, 0, 1]' : 0.215687}"]
returning from 'run': {'[5, 6, 1, 6, 0, 2, 1, 0, 29, 0, 28, 28, 0, 1, 1, 0, 0, 1]': ([0.25703, 0.256742, 0.225189, 0.222641, 0.222412, 0.222567, 0.222498, 0.222778, 0.222743, 0.22284, 0.222725, 0.222799, 0.223154, 0.222675, 0.222948, 0.223, 0.222885, 0.223027, 0.222821, 0.222676, 0.220357, 0.215893, 0.215909, 0.215513, 0.215558, 0.215586, 0.215765, 0.216021, 0.21574, 0.215687], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 6, 1, 6, 0, 2, 1, 0, 29, 0, 28, 28, 0, 1, 1, 0, 0, 1]': ([0.25703, 0.256742, 0.225189, 0.222641, 0.222412, 0.222567, 0.222498, 0.222778, 0.222743, 0.22284, 0.222725, 0.222799, 0.223154, 0.222675, 0.222948, 0.223, 0.222885, 0.223027, 0.222821, 0.222676, 0.220357, 0.215893, 0.215909, 0.215513, 0.215558, 0.215586, 0.215765, 0.216021, 0.21574, 0.215687], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	5
        Additions: 		637
        Multiplications: 	288
        Divisions: 		0
        Logical: 		0
        Reads: 			1331
        Writes: 		261
        Comparisons:		16
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest15.exe __orio_perftest15.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest15.exe  
Program Test Output: 
{'[2, 0, 6, 3, 0, 0, 0, 0, 20, 6, 19, 0, 1, 1, 0, 1, 0, 0]' : 0.119548}
{'[2, 0, 6, 3, 0, 0, 0, 0, 20, 6, 19, 0, 1, 1, 0, 1, 0, 0]' : 0.119555}
{'[2, 0, 6, 3, 0, 0, 0, 0, 20, 6, 19, 0, 1, 1, 0, 1, 0, 0]' : 0.119464}
{'[2, 0, 6, 3, 0, 0, 0, 0, 20, 6, 19, 0, 1, 1, 0, 1, 0, 0]' : 0.119437}
{'[2, 0, 6, 3, 0, 0, 0, 0, 20, 6, 19, 0, 1, 1, 0, 1, 0, 0]' : 0.119404}
{'[2, 0, 6, 3, 0, 0, 0, 0, 20, 6, 19, 0, 1, 1, 0, 1, 0, 0]' : 0.106357}
{'[2, 0, 6, 3, 0, 0, 0, 0, 20, 6, 19, 0, 1, 1, 0, 1, 0, 0]' : 0.101797}
{'[2, 0, 6, 3, 0, 0, 0, 0, 20, 6, 19, 0, 1, 1, 0, 1, 0, 0]' : 0.10185}
{'[2, 0, 6, 3, 0, 0, 0, 0, 20, 6, 19, 0, 1, 1, 0, 1, 0, 0]' : 0.101742}
{'[2, 0, 6, 3, 0, 0, 0, 0, 20, 6, 19, 0, 1, 1, 0, 1, 0, 0]' : 0.101901}
{'[2, 0, 6, 3, 0, 0, 0, 0, 20, 6, 19, 0, 1, 1, 0, 1, 0, 0]' : 0.101703}
{'[2, 0, 6, 3, 0, 0, 0, 0, 20, 6, 19, 0, 1, 1, 0, 1, 0, 0]' : 0.101724}
{'[2, 0, 6, 3, 0, 0, 0, 0, 20, 6, 19, 0, 1, 1, 0, 1, 0, 0]' : 0.101757}
{'[2, 0, 6, 3, 0, 0, 0, 0, 20, 6, 19, 0, 1, 1, 0, 1, 0, 0]' : 0.101864}
{'[2, 0, 6, 3, 0, 0, 0, 0, 20, 6, 19, 0, 1, 1, 0, 1, 0, 0]' : 0.101689}
{'[2, 0, 6, 3, 0, 0, 0, 0, 20, 6, 19, 0, 1, 1, 0, 1, 0, 0]' : 0.101709}
{'[2, 0, 6, 3, 0, 0, 0, 0, 20, 6, 19, 0, 1, 1, 0, 1, 0, 0]' : 0.10191}
{'[2, 0, 6, 3, 0, 0, 0, 0, 20, 6, 19, 0, 1, 1, 0, 1, 0, 0]' : 0.10184}
{'[2, 0, 6, 3, 0, 0, 0, 0, 20, 6, 19, 0, 1, 1, 0, 1, 0, 0]' : 0.101661}
{'[2, 0, 6, 3, 0, 0, 0, 0, 20, 6, 19, 0, 1, 1, 0, 1, 0, 0]' : 0.101767}
{'[2, 0, 6, 3, 0, 0, 0, 0, 20, 6, 19, 0, 1, 1, 0, 1, 0, 0]' : 0.101654}
{'[2, 0, 6, 3, 0, 0, 0, 0, 20, 6, 19, 0, 1, 1, 0, 1, 0, 0]' : 0.101577}
{'[2, 0, 6, 3, 0, 0, 0, 0, 20, 6, 19, 0, 1, 1, 0, 1, 0, 0]' : 0.101693}
{'[2, 0, 6, 3, 0, 0, 0, 0, 20, 6, 19, 0, 1, 1, 0, 1, 0, 0]' : 0.101669}
{'[2, 0, 6, 3, 0, 0, 0, 0, 20, 6, 19, 0, 1, 1, 0, 1, 0, 0]' : 0.101683}
{'[2, 0, 6, 3, 0, 0, 0, 0, 20, 6, 19, 0, 1, 1, 0, 1, 0, 0]' : 0.101733}
{'[2, 0, 6, 3, 0, 0, 0, 0, 20, 6, 19, 0, 1, 1, 0, 1, 0, 0]' : 0.102407}
{'[2, 0, 6, 3, 0, 0, 0, 0, 20, 6, 19, 0, 1, 1, 0, 1, 0, 0]' : 0.102122}
{'[2, 0, 6, 3, 0, 0, 0, 0, 20, 6, 19, 0, 1, 1, 0, 1, 0, 0]' : 0.101885}
{'[2, 0, 6, 3, 0, 0, 0, 0, 20, 6, 19, 0, 1, 1, 0, 1, 0, 0]' : 0.101641}

out:
 ["{'[2, 0, 6, 3, 0, 0, 0, 0, 20, 6, 19, 0, 1, 1, 0, 1, 0, 0]' : 0.119548}", "{'[2, 0, 6, 3, 0, 0, 0, 0, 20, 6, 19, 0, 1, 1, 0, 1, 0, 0]' : 0.119555}", "{'[2, 0, 6, 3, 0, 0, 0, 0, 20, 6, 19, 0, 1, 1, 0, 1, 0, 0]' : 0.119464}", "{'[2, 0, 6, 3, 0, 0, 0, 0, 20, 6, 19, 0, 1, 1, 0, 1, 0, 0]' : 0.119437}", "{'[2, 0, 6, 3, 0, 0, 0, 0, 20, 6, 19, 0, 1, 1, 0, 1, 0, 0]' : 0.119404}", "{'[2, 0, 6, 3, 0, 0, 0, 0, 20, 6, 19, 0, 1, 1, 0, 1, 0, 0]' : 0.106357}", "{'[2, 0, 6, 3, 0, 0, 0, 0, 20, 6, 19, 0, 1, 1, 0, 1, 0, 0]' : 0.101797}", "{'[2, 0, 6, 3, 0, 0, 0, 0, 20, 6, 19, 0, 1, 1, 0, 1, 0, 0]' : 0.10185}", "{'[2, 0, 6, 3, 0, 0, 0, 0, 20, 6, 19, 0, 1, 1, 0, 1, 0, 0]' : 0.101742}", "{'[2, 0, 6, 3, 0, 0, 0, 0, 20, 6, 19, 0, 1, 1, 0, 1, 0, 0]' : 0.101901}", "{'[2, 0, 6, 3, 0, 0, 0, 0, 20, 6, 19, 0, 1, 1, 0, 1, 0, 0]' : 0.101703}", "{'[2, 0, 6, 3, 0, 0, 0, 0, 20, 6, 19, 0, 1, 1, 0, 1, 0, 0]' : 0.101724}", "{'[2, 0, 6, 3, 0, 0, 0, 0, 20, 6, 19, 0, 1, 1, 0, 1, 0, 0]' : 0.101757}", "{'[2, 0, 6, 3, 0, 0, 0, 0, 20, 6, 19, 0, 1, 1, 0, 1, 0, 0]' : 0.101864}", "{'[2, 0, 6, 3, 0, 0, 0, 0, 20, 6, 19, 0, 1, 1, 0, 1, 0, 0]' : 0.101689}", "{'[2, 0, 6, 3, 0, 0, 0, 0, 20, 6, 19, 0, 1, 1, 0, 1, 0, 0]' : 0.101709}", "{'[2, 0, 6, 3, 0, 0, 0, 0, 20, 6, 19, 0, 1, 1, 0, 1, 0, 0]' : 0.10191}", "{'[2, 0, 6, 3, 0, 0, 0, 0, 20, 6, 19, 0, 1, 1, 0, 1, 0, 0]' : 0.10184}", "{'[2, 0, 6, 3, 0, 0, 0, 0, 20, 6, 19, 0, 1, 1, 0, 1, 0, 0]' : 0.101661}", "{'[2, 0, 6, 3, 0, 0, 0, 0, 20, 6, 19, 0, 1, 1, 0, 1, 0, 0]' : 0.101767}", "{'[2, 0, 6, 3, 0, 0, 0, 0, 20, 6, 19, 0, 1, 1, 0, 1, 0, 0]' : 0.101654}", "{'[2, 0, 6, 3, 0, 0, 0, 0, 20, 6, 19, 0, 1, 1, 0, 1, 0, 0]' : 0.101577}", "{'[2, 0, 6, 3, 0, 0, 0, 0, 20, 6, 19, 0, 1, 1, 0, 1, 0, 0]' : 0.101693}", "{'[2, 0, 6, 3, 0, 0, 0, 0, 20, 6, 19, 0, 1, 1, 0, 1, 0, 0]' : 0.101669}", "{'[2, 0, 6, 3, 0, 0, 0, 0, 20, 6, 19, 0, 1, 1, 0, 1, 0, 0]' : 0.101683}", "{'[2, 0, 6, 3, 0, 0, 0, 0, 20, 6, 19, 0, 1, 1, 0, 1, 0, 0]' : 0.101733}", "{'[2, 0, 6, 3, 0, 0, 0, 0, 20, 6, 19, 0, 1, 1, 0, 1, 0, 0]' : 0.102407}", "{'[2, 0, 6, 3, 0, 0, 0, 0, 20, 6, 19, 0, 1, 1, 0, 1, 0, 0]' : 0.102122}", "{'[2, 0, 6, 3, 0, 0, 0, 0, 20, 6, 19, 0, 1, 1, 0, 1, 0, 0]' : 0.101885}", "{'[2, 0, 6, 3, 0, 0, 0, 0, 20, 6, 19, 0, 1, 1, 0, 1, 0, 0]' : 0.101641}"]
returning from 'run': {'[2, 0, 6, 3, 0, 0, 0, 0, 20, 6, 19, 0, 1, 1, 0, 1, 0, 0]': ([0.119548, 0.119555, 0.119464, 0.119437, 0.119404, 0.106357, 0.101797, 0.10185, 0.101742, 0.101901, 0.101703, 0.101724, 0.101757, 0.101864, 0.101689, 0.101709, 0.10191, 0.10184, 0.101661, 0.101767, 0.101654, 0.101577, 0.101693, 0.101669, 0.101683, 0.101733, 0.102407, 0.102122, 0.101885, 0.101641], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 0, 6, 3, 0, 0, 0, 0, 20, 6, 19, 0, 1, 1, 0, 1, 0, 0]': ([0.119548, 0.119555, 0.119464, 0.119437, 0.119404, 0.106357, 0.101797, 0.10185, 0.101742, 0.101901, 0.101703, 0.101724, 0.101757, 0.101864, 0.101689, 0.101709, 0.10191, 0.10184, 0.101661, 0.101767, 0.101654, 0.101577, 0.101693, 0.101669, 0.101683, 0.101733, 0.102407, 0.102122, 0.101885, 0.101641], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = jjj
Code stats:
        Number of loops: 	46
        Max loop nest depth: 	5
        Additions: 		1337
        Multiplications: 	580
        Divisions: 		0
        Logical: 		0
        Reads: 			2880
        Writes: 		571
        Comparisons:		46
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest16.exe __orio_perftest16.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest16.exe  
Program Test Output: 
{'[0, 5, 4, 2, 3, 6, 1, 0, 29, 19, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.101367}
{'[0, 5, 4, 2, 3, 6, 1, 0, 29, 19, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.102597}
{'[0, 5, 4, 2, 3, 6, 1, 0, 29, 19, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.102513}
{'[0, 5, 4, 2, 3, 6, 1, 0, 29, 19, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.102611}
{'[0, 5, 4, 2, 3, 6, 1, 0, 29, 19, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.102518}
{'[0, 5, 4, 2, 3, 6, 1, 0, 29, 19, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0962839}
{'[0, 5, 4, 2, 3, 6, 1, 0, 29, 19, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0900092}
{'[0, 5, 4, 2, 3, 6, 1, 0, 29, 19, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0894759}
{'[0, 5, 4, 2, 3, 6, 1, 0, 29, 19, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.089427}
{'[0, 5, 4, 2, 3, 6, 1, 0, 29, 19, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0897489}
{'[0, 5, 4, 2, 3, 6, 1, 0, 29, 19, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.089772}
{'[0, 5, 4, 2, 3, 6, 1, 0, 29, 19, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.089421}
{'[0, 5, 4, 2, 3, 6, 1, 0, 29, 19, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0894539}
{'[0, 5, 4, 2, 3, 6, 1, 0, 29, 19, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0895052}
{'[0, 5, 4, 2, 3, 6, 1, 0, 29, 19, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.089623}
{'[0, 5, 4, 2, 3, 6, 1, 0, 29, 19, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.089597}
{'[0, 5, 4, 2, 3, 6, 1, 0, 29, 19, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0894849}
{'[0, 5, 4, 2, 3, 6, 1, 0, 29, 19, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0895281}
{'[0, 5, 4, 2, 3, 6, 1, 0, 29, 19, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.089889}
{'[0, 5, 4, 2, 3, 6, 1, 0, 29, 19, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0895329}
{'[0, 5, 4, 2, 3, 6, 1, 0, 29, 19, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0894592}
{'[0, 5, 4, 2, 3, 6, 1, 0, 29, 19, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.089623}
{'[0, 5, 4, 2, 3, 6, 1, 0, 29, 19, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0894361}
{'[0, 5, 4, 2, 3, 6, 1, 0, 29, 19, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0896828}
{'[0, 5, 4, 2, 3, 6, 1, 0, 29, 19, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0894611}
{'[0, 5, 4, 2, 3, 6, 1, 0, 29, 19, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0895321}
{'[0, 5, 4, 2, 3, 6, 1, 0, 29, 19, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0893929}
{'[0, 5, 4, 2, 3, 6, 1, 0, 29, 19, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0894861}
{'[0, 5, 4, 2, 3, 6, 1, 0, 29, 19, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.089752}
{'[0, 5, 4, 2, 3, 6, 1, 0, 29, 19, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0897079}

out:
 ["{'[0, 5, 4, 2, 3, 6, 1, 0, 29, 19, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.101367}", "{'[0, 5, 4, 2, 3, 6, 1, 0, 29, 19, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.102597}", "{'[0, 5, 4, 2, 3, 6, 1, 0, 29, 19, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.102513}", "{'[0, 5, 4, 2, 3, 6, 1, 0, 29, 19, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.102611}", "{'[0, 5, 4, 2, 3, 6, 1, 0, 29, 19, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.102518}", "{'[0, 5, 4, 2, 3, 6, 1, 0, 29, 19, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0962839}", "{'[0, 5, 4, 2, 3, 6, 1, 0, 29, 19, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0900092}", "{'[0, 5, 4, 2, 3, 6, 1, 0, 29, 19, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0894759}", "{'[0, 5, 4, 2, 3, 6, 1, 0, 29, 19, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.089427}", "{'[0, 5, 4, 2, 3, 6, 1, 0, 29, 19, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0897489}", "{'[0, 5, 4, 2, 3, 6, 1, 0, 29, 19, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.089772}", "{'[0, 5, 4, 2, 3, 6, 1, 0, 29, 19, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.089421}", "{'[0, 5, 4, 2, 3, 6, 1, 0, 29, 19, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0894539}", "{'[0, 5, 4, 2, 3, 6, 1, 0, 29, 19, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0895052}", "{'[0, 5, 4, 2, 3, 6, 1, 0, 29, 19, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.089623}", "{'[0, 5, 4, 2, 3, 6, 1, 0, 29, 19, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.089597}", "{'[0, 5, 4, 2, 3, 6, 1, 0, 29, 19, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0894849}", "{'[0, 5, 4, 2, 3, 6, 1, 0, 29, 19, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0895281}", "{'[0, 5, 4, 2, 3, 6, 1, 0, 29, 19, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.089889}", "{'[0, 5, 4, 2, 3, 6, 1, 0, 29, 19, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0895329}", "{'[0, 5, 4, 2, 3, 6, 1, 0, 29, 19, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0894592}", "{'[0, 5, 4, 2, 3, 6, 1, 0, 29, 19, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.089623}", "{'[0, 5, 4, 2, 3, 6, 1, 0, 29, 19, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0894361}", "{'[0, 5, 4, 2, 3, 6, 1, 0, 29, 19, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0896828}", "{'[0, 5, 4, 2, 3, 6, 1, 0, 29, 19, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0894611}", "{'[0, 5, 4, 2, 3, 6, 1, 0, 29, 19, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0895321}", "{'[0, 5, 4, 2, 3, 6, 1, 0, 29, 19, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0893929}", "{'[0, 5, 4, 2, 3, 6, 1, 0, 29, 19, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0894861}", "{'[0, 5, 4, 2, 3, 6, 1, 0, 29, 19, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.089752}", "{'[0, 5, 4, 2, 3, 6, 1, 0, 29, 19, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.0897079}"]
returning from 'run': {'[0, 5, 4, 2, 3, 6, 1, 0, 29, 19, 0, 0, 1, 0, 1, 1, 0, 0]': ([0.101367, 0.102597, 0.102513, 0.102611, 0.102518, 0.0962839, 0.0900092, 0.0894759, 0.089427, 0.0897489, 0.089772, 0.089421, 0.0894539, 0.0895052, 0.089623, 0.089597, 0.0894849, 0.0895281, 0.089889, 0.0895329, 0.0894592, 0.089623, 0.0894361, 0.0896828, 0.0894611, 0.0895321, 0.0893929, 0.0894861, 0.089752, 0.0897079], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 5, 4, 2, 3, 6, 1, 0, 29, 19, 0, 0, 1, 0, 1, 1, 0, 0]': ([0.101367, 0.102597, 0.102513, 0.102611, 0.102518, 0.0962839, 0.0900092, 0.0894759, 0.089427, 0.0897489, 0.089772, 0.089421, 0.0894539, 0.0895052, 0.089623, 0.089597, 0.0894849, 0.0895281, 0.089889, 0.0895329, 0.0894592, 0.089623, 0.0894361, 0.0896828, 0.0894611, 0.0895321, 0.0893929, 0.0894861, 0.089752, 0.0897079], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	6
        Additions: 		1831
        Multiplications: 	522
        Divisions: 		0
        Logical: 		0
        Reads: 			2973
        Writes: 		334
        Comparisons:		24
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest17.exe __orio_perftest17.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest17.exe  
Program Test Output: 
{'[2, 6, 0, 4, 6, 3, 1, 0, 19, 0, 13, 4, 1, 0, 1, 0, 0, 0]' : 0.126752}
{'[2, 6, 0, 4, 6, 3, 1, 0, 19, 0, 13, 4, 1, 0, 1, 0, 0, 0]' : 0.126817}
{'[2, 6, 0, 4, 6, 3, 1, 0, 19, 0, 13, 4, 1, 0, 1, 0, 0, 0]' : 0.12643}
{'[2, 6, 0, 4, 6, 3, 1, 0, 19, 0, 13, 4, 1, 0, 1, 0, 0, 0]' : 0.122659}
{'[2, 6, 0, 4, 6, 3, 1, 0, 19, 0, 13, 4, 1, 0, 1, 0, 0, 0]' : 0.107294}
{'[2, 6, 0, 4, 6, 3, 1, 0, 19, 0, 13, 4, 1, 0, 1, 0, 0, 0]' : 0.107574}
{'[2, 6, 0, 4, 6, 3, 1, 0, 19, 0, 13, 4, 1, 0, 1, 0, 0, 0]' : 0.107135}
{'[2, 6, 0, 4, 6, 3, 1, 0, 19, 0, 13, 4, 1, 0, 1, 0, 0, 0]' : 0.107099}
{'[2, 6, 0, 4, 6, 3, 1, 0, 19, 0, 13, 4, 1, 0, 1, 0, 0, 0]' : 0.107443}
{'[2, 6, 0, 4, 6, 3, 1, 0, 19, 0, 13, 4, 1, 0, 1, 0, 0, 0]' : 0.107473}
{'[2, 6, 0, 4, 6, 3, 1, 0, 19, 0, 13, 4, 1, 0, 1, 0, 0, 0]' : 0.107223}
{'[2, 6, 0, 4, 6, 3, 1, 0, 19, 0, 13, 4, 1, 0, 1, 0, 0, 0]' : 0.10739}
{'[2, 6, 0, 4, 6, 3, 1, 0, 19, 0, 13, 4, 1, 0, 1, 0, 0, 0]' : 0.107555}
{'[2, 6, 0, 4, 6, 3, 1, 0, 19, 0, 13, 4, 1, 0, 1, 0, 0, 0]' : 0.107255}
{'[2, 6, 0, 4, 6, 3, 1, 0, 19, 0, 13, 4, 1, 0, 1, 0, 0, 0]' : 0.107233}
{'[2, 6, 0, 4, 6, 3, 1, 0, 19, 0, 13, 4, 1, 0, 1, 0, 0, 0]' : 0.10743}
{'[2, 6, 0, 4, 6, 3, 1, 0, 19, 0, 13, 4, 1, 0, 1, 0, 0, 0]' : 0.107458}
{'[2, 6, 0, 4, 6, 3, 1, 0, 19, 0, 13, 4, 1, 0, 1, 0, 0, 0]' : 0.107468}
{'[2, 6, 0, 4, 6, 3, 1, 0, 19, 0, 13, 4, 1, 0, 1, 0, 0, 0]' : 0.1075}
{'[2, 6, 0, 4, 6, 3, 1, 0, 19, 0, 13, 4, 1, 0, 1, 0, 0, 0]' : 0.107195}
{'[2, 6, 0, 4, 6, 3, 1, 0, 19, 0, 13, 4, 1, 0, 1, 0, 0, 0]' : 0.107374}
{'[2, 6, 0, 4, 6, 3, 1, 0, 19, 0, 13, 4, 1, 0, 1, 0, 0, 0]' : 0.107562}
{'[2, 6, 0, 4, 6, 3, 1, 0, 19, 0, 13, 4, 1, 0, 1, 0, 0, 0]' : 0.107306}
{'[2, 6, 0, 4, 6, 3, 1, 0, 19, 0, 13, 4, 1, 0, 1, 0, 0, 0]' : 0.107274}
{'[2, 6, 0, 4, 6, 3, 1, 0, 19, 0, 13, 4, 1, 0, 1, 0, 0, 0]' : 0.107422}
{'[2, 6, 0, 4, 6, 3, 1, 0, 19, 0, 13, 4, 1, 0, 1, 0, 0, 0]' : 0.107546}
{'[2, 6, 0, 4, 6, 3, 1, 0, 19, 0, 13, 4, 1, 0, 1, 0, 0, 0]' : 0.107272}
{'[2, 6, 0, 4, 6, 3, 1, 0, 19, 0, 13, 4, 1, 0, 1, 0, 0, 0]' : 0.107389}
{'[2, 6, 0, 4, 6, 3, 1, 0, 19, 0, 13, 4, 1, 0, 1, 0, 0, 0]' : 0.107563}
{'[2, 6, 0, 4, 6, 3, 1, 0, 19, 0, 13, 4, 1, 0, 1, 0, 0, 0]' : 0.10741}

out:
 ["{'[2, 6, 0, 4, 6, 3, 1, 0, 19, 0, 13, 4, 1, 0, 1, 0, 0, 0]' : 0.126752}", "{'[2, 6, 0, 4, 6, 3, 1, 0, 19, 0, 13, 4, 1, 0, 1, 0, 0, 0]' : 0.126817}", "{'[2, 6, 0, 4, 6, 3, 1, 0, 19, 0, 13, 4, 1, 0, 1, 0, 0, 0]' : 0.12643}", "{'[2, 6, 0, 4, 6, 3, 1, 0, 19, 0, 13, 4, 1, 0, 1, 0, 0, 0]' : 0.122659}", "{'[2, 6, 0, 4, 6, 3, 1, 0, 19, 0, 13, 4, 1, 0, 1, 0, 0, 0]' : 0.107294}", "{'[2, 6, 0, 4, 6, 3, 1, 0, 19, 0, 13, 4, 1, 0, 1, 0, 0, 0]' : 0.107574}", "{'[2, 6, 0, 4, 6, 3, 1, 0, 19, 0, 13, 4, 1, 0, 1, 0, 0, 0]' : 0.107135}", "{'[2, 6, 0, 4, 6, 3, 1, 0, 19, 0, 13, 4, 1, 0, 1, 0, 0, 0]' : 0.107099}", "{'[2, 6, 0, 4, 6, 3, 1, 0, 19, 0, 13, 4, 1, 0, 1, 0, 0, 0]' : 0.107443}", "{'[2, 6, 0, 4, 6, 3, 1, 0, 19, 0, 13, 4, 1, 0, 1, 0, 0, 0]' : 0.107473}", "{'[2, 6, 0, 4, 6, 3, 1, 0, 19, 0, 13, 4, 1, 0, 1, 0, 0, 0]' : 0.107223}", "{'[2, 6, 0, 4, 6, 3, 1, 0, 19, 0, 13, 4, 1, 0, 1, 0, 0, 0]' : 0.10739}", "{'[2, 6, 0, 4, 6, 3, 1, 0, 19, 0, 13, 4, 1, 0, 1, 0, 0, 0]' : 0.107555}", "{'[2, 6, 0, 4, 6, 3, 1, 0, 19, 0, 13, 4, 1, 0, 1, 0, 0, 0]' : 0.107255}", "{'[2, 6, 0, 4, 6, 3, 1, 0, 19, 0, 13, 4, 1, 0, 1, 0, 0, 0]' : 0.107233}", "{'[2, 6, 0, 4, 6, 3, 1, 0, 19, 0, 13, 4, 1, 0, 1, 0, 0, 0]' : 0.10743}", "{'[2, 6, 0, 4, 6, 3, 1, 0, 19, 0, 13, 4, 1, 0, 1, 0, 0, 0]' : 0.107458}", "{'[2, 6, 0, 4, 6, 3, 1, 0, 19, 0, 13, 4, 1, 0, 1, 0, 0, 0]' : 0.107468}", "{'[2, 6, 0, 4, 6, 3, 1, 0, 19, 0, 13, 4, 1, 0, 1, 0, 0, 0]' : 0.1075}", "{'[2, 6, 0, 4, 6, 3, 1, 0, 19, 0, 13, 4, 1, 0, 1, 0, 0, 0]' : 0.107195}", "{'[2, 6, 0, 4, 6, 3, 1, 0, 19, 0, 13, 4, 1, 0, 1, 0, 0, 0]' : 0.107374}", "{'[2, 6, 0, 4, 6, 3, 1, 0, 19, 0, 13, 4, 1, 0, 1, 0, 0, 0]' : 0.107562}", "{'[2, 6, 0, 4, 6, 3, 1, 0, 19, 0, 13, 4, 1, 0, 1, 0, 0, 0]' : 0.107306}", "{'[2, 6, 0, 4, 6, 3, 1, 0, 19, 0, 13, 4, 1, 0, 1, 0, 0, 0]' : 0.107274}", "{'[2, 6, 0, 4, 6, 3, 1, 0, 19, 0, 13, 4, 1, 0, 1, 0, 0, 0]' : 0.107422}", "{'[2, 6, 0, 4, 6, 3, 1, 0, 19, 0, 13, 4, 1, 0, 1, 0, 0, 0]' : 0.107546}", "{'[2, 6, 0, 4, 6, 3, 1, 0, 19, 0, 13, 4, 1, 0, 1, 0, 0, 0]' : 0.107272}", "{'[2, 6, 0, 4, 6, 3, 1, 0, 19, 0, 13, 4, 1, 0, 1, 0, 0, 0]' : 0.107389}", "{'[2, 6, 0, 4, 6, 3, 1, 0, 19, 0, 13, 4, 1, 0, 1, 0, 0, 0]' : 0.107563}", "{'[2, 6, 0, 4, 6, 3, 1, 0, 19, 0, 13, 4, 1, 0, 1, 0, 0, 0]' : 0.10741}"]
returning from 'run': {'[2, 6, 0, 4, 6, 3, 1, 0, 19, 0, 13, 4, 1, 0, 1, 0, 0, 0]': ([0.126752, 0.126817, 0.12643, 0.122659, 0.107294, 0.107574, 0.107135, 0.107099, 0.107443, 0.107473, 0.107223, 0.10739, 0.107555, 0.107255, 0.107233, 0.10743, 0.107458, 0.107468, 0.1075, 0.107195, 0.107374, 0.107562, 0.107306, 0.107274, 0.107422, 0.107546, 0.107272, 0.107389, 0.107563, 0.10741], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 6, 0, 4, 6, 3, 1, 0, 19, 0, 13, 4, 1, 0, 1, 0, 0, 0]': ([0.126752, 0.126817, 0.12643, 0.122659, 0.107294, 0.107574, 0.107135, 0.107099, 0.107443, 0.107473, 0.107223, 0.10739, 0.107555, 0.107255, 0.107233, 0.10743, 0.107458, 0.107468, 0.1075, 0.107195, 0.107374, 0.107562, 0.107306, 0.107274, 0.107422, 0.107546, 0.107272, 0.107389, 0.107563, 0.10741], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	102
        Max loop nest depth: 	5
        Additions: 		3945
        Multiplications: 	960
        Divisions: 		0
        Logical: 		0
        Reads: 			6243
        Writes: 		743
        Comparisons:		102
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest18.exe __orio_perftest18.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest18.exe  
Program Test Output: 
{'[6, 0, 4, 5, 6, 0, 1, 0, 0, 26, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.266276}
{'[6, 0, 4, 5, 6, 0, 1, 0, 0, 26, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.26655}
{'[6, 0, 4, 5, 6, 0, 1, 0, 0, 26, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.24297}
{'[6, 0, 4, 5, 6, 0, 1, 0, 0, 26, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.239337}
{'[6, 0, 4, 5, 6, 0, 1, 0, 0, 26, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.239645}
{'[6, 0, 4, 5, 6, 0, 1, 0, 0, 26, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.240176}
{'[6, 0, 4, 5, 6, 0, 1, 0, 0, 26, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.240509}
{'[6, 0, 4, 5, 6, 0, 1, 0, 0, 26, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.238887}
{'[6, 0, 4, 5, 6, 0, 1, 0, 0, 26, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.239676}
{'[6, 0, 4, 5, 6, 0, 1, 0, 0, 26, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.239424}
{'[6, 0, 4, 5, 6, 0, 1, 0, 0, 26, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.23956}
{'[6, 0, 4, 5, 6, 0, 1, 0, 0, 26, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.239503}
{'[6, 0, 4, 5, 6, 0, 1, 0, 0, 26, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.239522}
{'[6, 0, 4, 5, 6, 0, 1, 0, 0, 26, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.240052}
{'[6, 0, 4, 5, 6, 0, 1, 0, 0, 26, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.239198}
{'[6, 0, 4, 5, 6, 0, 1, 0, 0, 26, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.240145}
{'[6, 0, 4, 5, 6, 0, 1, 0, 0, 26, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.23932}
{'[6, 0, 4, 5, 6, 0, 1, 0, 0, 26, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.239385}
{'[6, 0, 4, 5, 6, 0, 1, 0, 0, 26, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.240383}
{'[6, 0, 4, 5, 6, 0, 1, 0, 0, 26, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.238946}
{'[6, 0, 4, 5, 6, 0, 1, 0, 0, 26, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.239759}
{'[6, 0, 4, 5, 6, 0, 1, 0, 0, 26, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.238966}
{'[6, 0, 4, 5, 6, 0, 1, 0, 0, 26, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.239765}
{'[6, 0, 4, 5, 6, 0, 1, 0, 0, 26, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.239438}
{'[6, 0, 4, 5, 6, 0, 1, 0, 0, 26, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.239669}
{'[6, 0, 4, 5, 6, 0, 1, 0, 0, 26, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.240697}
{'[6, 0, 4, 5, 6, 0, 1, 0, 0, 26, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.239491}
{'[6, 0, 4, 5, 6, 0, 1, 0, 0, 26, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.2398}
{'[6, 0, 4, 5, 6, 0, 1, 0, 0, 26, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.239413}
{'[6, 0, 4, 5, 6, 0, 1, 0, 0, 26, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.240013}

out:
 ["{'[6, 0, 4, 5, 6, 0, 1, 0, 0, 26, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.266276}", "{'[6, 0, 4, 5, 6, 0, 1, 0, 0, 26, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.26655}", "{'[6, 0, 4, 5, 6, 0, 1, 0, 0, 26, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.24297}", "{'[6, 0, 4, 5, 6, 0, 1, 0, 0, 26, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.239337}", "{'[6, 0, 4, 5, 6, 0, 1, 0, 0, 26, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.239645}", "{'[6, 0, 4, 5, 6, 0, 1, 0, 0, 26, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.240176}", "{'[6, 0, 4, 5, 6, 0, 1, 0, 0, 26, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.240509}", "{'[6, 0, 4, 5, 6, 0, 1, 0, 0, 26, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.238887}", "{'[6, 0, 4, 5, 6, 0, 1, 0, 0, 26, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.239676}", "{'[6, 0, 4, 5, 6, 0, 1, 0, 0, 26, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.239424}", "{'[6, 0, 4, 5, 6, 0, 1, 0, 0, 26, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.23956}", "{'[6, 0, 4, 5, 6, 0, 1, 0, 0, 26, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.239503}", "{'[6, 0, 4, 5, 6, 0, 1, 0, 0, 26, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.239522}", "{'[6, 0, 4, 5, 6, 0, 1, 0, 0, 26, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.240052}", "{'[6, 0, 4, 5, 6, 0, 1, 0, 0, 26, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.239198}", "{'[6, 0, 4, 5, 6, 0, 1, 0, 0, 26, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.240145}", "{'[6, 0, 4, 5, 6, 0, 1, 0, 0, 26, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.23932}", "{'[6, 0, 4, 5, 6, 0, 1, 0, 0, 26, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.239385}", "{'[6, 0, 4, 5, 6, 0, 1, 0, 0, 26, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.240383}", "{'[6, 0, 4, 5, 6, 0, 1, 0, 0, 26, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.238946}", "{'[6, 0, 4, 5, 6, 0, 1, 0, 0, 26, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.239759}", "{'[6, 0, 4, 5, 6, 0, 1, 0, 0, 26, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.238966}", "{'[6, 0, 4, 5, 6, 0, 1, 0, 0, 26, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.239765}", "{'[6, 0, 4, 5, 6, 0, 1, 0, 0, 26, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.239438}", "{'[6, 0, 4, 5, 6, 0, 1, 0, 0, 26, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.239669}", "{'[6, 0, 4, 5, 6, 0, 1, 0, 0, 26, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.240697}", "{'[6, 0, 4, 5, 6, 0, 1, 0, 0, 26, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.239491}", "{'[6, 0, 4, 5, 6, 0, 1, 0, 0, 26, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.2398}", "{'[6, 0, 4, 5, 6, 0, 1, 0, 0, 26, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.239413}", "{'[6, 0, 4, 5, 6, 0, 1, 0, 0, 26, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.240013}"]
returning from 'run': {'[6, 0, 4, 5, 6, 0, 1, 0, 0, 26, 5, 0, 2, 0, 0, 0, 0, 0]': ([0.266276, 0.26655, 0.24297, 0.239337, 0.239645, 0.240176, 0.240509, 0.238887, 0.239676, 0.239424, 0.23956, 0.239503, 0.239522, 0.240052, 0.239198, 0.240145, 0.23932, 0.239385, 0.240383, 0.238946, 0.239759, 0.238966, 0.239765, 0.239438, 0.239669, 0.240697, 0.239491, 0.2398, 0.239413, 0.240013], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 4, 5, 6, 0, 1, 0, 0, 26, 5, 0, 2, 0, 0, 0, 0, 0]': ([0.266276, 0.26655, 0.24297, 0.239337, 0.239645, 0.240176, 0.240509, 0.238887, 0.239676, 0.239424, 0.23956, 0.239503, 0.239522, 0.240052, 0.239198, 0.240145, 0.23932, 0.239385, 0.240383, 0.238946, 0.239759, 0.238966, 0.239765, 0.239438, 0.239669, 0.240697, 0.239491, 0.2398, 0.239413, 0.240013], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	84
        Max loop nest depth: 	5
        Additions: 		6157
        Multiplications: 	1518
        Divisions: 		0
        Logical: 		0
        Reads: 			9393
        Writes: 		1044
        Comparisons:		84
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest19.exe __orio_perftest19.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest19.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest19.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest19.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest19.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	4
        Additions: 		260
        Multiplications: 	66
        Divisions: 		0
        Logical: 		0
        Reads: 			587
        Writes: 		132
        Comparisons:		10
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest20.exe __orio_perftest20.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest20.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest20.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest20.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest20.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = iii
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		141
        Multiplications: 	32
        Divisions: 		0
        Logical: 		0
        Reads: 			316
        Writes: 		75
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest21.exe __orio_perftest21.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest21.exe  
Program Test Output: 
{'[5, 6, 2, 3, 6, 0, 1, 1, 11, 0, 5, 5, 0, 1, 1, 1, 0, 0]' : 0.285746}
{'[5, 6, 2, 3, 6, 0, 1, 1, 11, 0, 5, 5, 0, 1, 1, 1, 0, 0]' : 0.285373}
{'[5, 6, 2, 3, 6, 0, 1, 1, 11, 0, 5, 5, 0, 1, 1, 1, 0, 0]' : 0.242729}
{'[5, 6, 2, 3, 6, 0, 1, 1, 11, 0, 5, 5, 0, 1, 1, 1, 0, 0]' : 0.239178}
{'[5, 6, 2, 3, 6, 0, 1, 1, 11, 0, 5, 5, 0, 1, 1, 1, 0, 0]' : 0.239385}
{'[5, 6, 2, 3, 6, 0, 1, 1, 11, 0, 5, 5, 0, 1, 1, 1, 0, 0]' : 0.239609}
{'[5, 6, 2, 3, 6, 0, 1, 1, 11, 0, 5, 5, 0, 1, 1, 1, 0, 0]' : 0.239331}
{'[5, 6, 2, 3, 6, 0, 1, 1, 11, 0, 5, 5, 0, 1, 1, 1, 0, 0]' : 0.239402}
{'[5, 6, 2, 3, 6, 0, 1, 1, 11, 0, 5, 5, 0, 1, 1, 1, 0, 0]' : 0.240097}
{'[5, 6, 2, 3, 6, 0, 1, 1, 11, 0, 5, 5, 0, 1, 1, 1, 0, 0]' : 0.239293}
{'[5, 6, 2, 3, 6, 0, 1, 1, 11, 0, 5, 5, 0, 1, 1, 1, 0, 0]' : 0.239387}
{'[5, 6, 2, 3, 6, 0, 1, 1, 11, 0, 5, 5, 0, 1, 1, 1, 0, 0]' : 0.239525}
{'[5, 6, 2, 3, 6, 0, 1, 1, 11, 0, 5, 5, 0, 1, 1, 1, 0, 0]' : 0.239722}
{'[5, 6, 2, 3, 6, 0, 1, 1, 11, 0, 5, 5, 0, 1, 1, 1, 0, 0]' : 0.239796}
{'[5, 6, 2, 3, 6, 0, 1, 1, 11, 0, 5, 5, 0, 1, 1, 1, 0, 0]' : 0.239559}
{'[5, 6, 2, 3, 6, 0, 1, 1, 11, 0, 5, 5, 0, 1, 1, 1, 0, 0]' : 0.23963}
{'[5, 6, 2, 3, 6, 0, 1, 1, 11, 0, 5, 5, 0, 1, 1, 1, 0, 0]' : 0.240032}
{'[5, 6, 2, 3, 6, 0, 1, 1, 11, 0, 5, 5, 0, 1, 1, 1, 0, 0]' : 0.240225}
{'[5, 6, 2, 3, 6, 0, 1, 1, 11, 0, 5, 5, 0, 1, 1, 1, 0, 0]' : 0.239558}
{'[5, 6, 2, 3, 6, 0, 1, 1, 11, 0, 5, 5, 0, 1, 1, 1, 0, 0]' : 0.239601}
{'[5, 6, 2, 3, 6, 0, 1, 1, 11, 0, 5, 5, 0, 1, 1, 1, 0, 0]' : 0.239536}
{'[5, 6, 2, 3, 6, 0, 1, 1, 11, 0, 5, 5, 0, 1, 1, 1, 0, 0]' : 0.239599}
{'[5, 6, 2, 3, 6, 0, 1, 1, 11, 0, 5, 5, 0, 1, 1, 1, 0, 0]' : 0.24022}
{'[5, 6, 2, 3, 6, 0, 1, 1, 11, 0, 5, 5, 0, 1, 1, 1, 0, 0]' : 0.23964}
{'[5, 6, 2, 3, 6, 0, 1, 1, 11, 0, 5, 5, 0, 1, 1, 1, 0, 0]' : 0.240166}
{'[5, 6, 2, 3, 6, 0, 1, 1, 11, 0, 5, 5, 0, 1, 1, 1, 0, 0]' : 0.239558}
{'[5, 6, 2, 3, 6, 0, 1, 1, 11, 0, 5, 5, 0, 1, 1, 1, 0, 0]' : 0.239641}
{'[5, 6, 2, 3, 6, 0, 1, 1, 11, 0, 5, 5, 0, 1, 1, 1, 0, 0]' : 0.239728}
{'[5, 6, 2, 3, 6, 0, 1, 1, 11, 0, 5, 5, 0, 1, 1, 1, 0, 0]' : 0.23943}
{'[5, 6, 2, 3, 6, 0, 1, 1, 11, 0, 5, 5, 0, 1, 1, 1, 0, 0]' : 0.239577}

out:
 ["{'[5, 6, 2, 3, 6, 0, 1, 1, 11, 0, 5, 5, 0, 1, 1, 1, 0, 0]' : 0.285746}", "{'[5, 6, 2, 3, 6, 0, 1, 1, 11, 0, 5, 5, 0, 1, 1, 1, 0, 0]' : 0.285373}", "{'[5, 6, 2, 3, 6, 0, 1, 1, 11, 0, 5, 5, 0, 1, 1, 1, 0, 0]' : 0.242729}", "{'[5, 6, 2, 3, 6, 0, 1, 1, 11, 0, 5, 5, 0, 1, 1, 1, 0, 0]' : 0.239178}", "{'[5, 6, 2, 3, 6, 0, 1, 1, 11, 0, 5, 5, 0, 1, 1, 1, 0, 0]' : 0.239385}", "{'[5, 6, 2, 3, 6, 0, 1, 1, 11, 0, 5, 5, 0, 1, 1, 1, 0, 0]' : 0.239609}", "{'[5, 6, 2, 3, 6, 0, 1, 1, 11, 0, 5, 5, 0, 1, 1, 1, 0, 0]' : 0.239331}", "{'[5, 6, 2, 3, 6, 0, 1, 1, 11, 0, 5, 5, 0, 1, 1, 1, 0, 0]' : 0.239402}", "{'[5, 6, 2, 3, 6, 0, 1, 1, 11, 0, 5, 5, 0, 1, 1, 1, 0, 0]' : 0.240097}", "{'[5, 6, 2, 3, 6, 0, 1, 1, 11, 0, 5, 5, 0, 1, 1, 1, 0, 0]' : 0.239293}", "{'[5, 6, 2, 3, 6, 0, 1, 1, 11, 0, 5, 5, 0, 1, 1, 1, 0, 0]' : 0.239387}", "{'[5, 6, 2, 3, 6, 0, 1, 1, 11, 0, 5, 5, 0, 1, 1, 1, 0, 0]' : 0.239525}", "{'[5, 6, 2, 3, 6, 0, 1, 1, 11, 0, 5, 5, 0, 1, 1, 1, 0, 0]' : 0.239722}", "{'[5, 6, 2, 3, 6, 0, 1, 1, 11, 0, 5, 5, 0, 1, 1, 1, 0, 0]' : 0.239796}", "{'[5, 6, 2, 3, 6, 0, 1, 1, 11, 0, 5, 5, 0, 1, 1, 1, 0, 0]' : 0.239559}", "{'[5, 6, 2, 3, 6, 0, 1, 1, 11, 0, 5, 5, 0, 1, 1, 1, 0, 0]' : 0.23963}", "{'[5, 6, 2, 3, 6, 0, 1, 1, 11, 0, 5, 5, 0, 1, 1, 1, 0, 0]' : 0.240032}", "{'[5, 6, 2, 3, 6, 0, 1, 1, 11, 0, 5, 5, 0, 1, 1, 1, 0, 0]' : 0.240225}", "{'[5, 6, 2, 3, 6, 0, 1, 1, 11, 0, 5, 5, 0, 1, 1, 1, 0, 0]' : 0.239558}", "{'[5, 6, 2, 3, 6, 0, 1, 1, 11, 0, 5, 5, 0, 1, 1, 1, 0, 0]' : 0.239601}", "{'[5, 6, 2, 3, 6, 0, 1, 1, 11, 0, 5, 5, 0, 1, 1, 1, 0, 0]' : 0.239536}", "{'[5, 6, 2, 3, 6, 0, 1, 1, 11, 0, 5, 5, 0, 1, 1, 1, 0, 0]' : 0.239599}", "{'[5, 6, 2, 3, 6, 0, 1, 1, 11, 0, 5, 5, 0, 1, 1, 1, 0, 0]' : 0.24022}", "{'[5, 6, 2, 3, 6, 0, 1, 1, 11, 0, 5, 5, 0, 1, 1, 1, 0, 0]' : 0.23964}", "{'[5, 6, 2, 3, 6, 0, 1, 1, 11, 0, 5, 5, 0, 1, 1, 1, 0, 0]' : 0.240166}", "{'[5, 6, 2, 3, 6, 0, 1, 1, 11, 0, 5, 5, 0, 1, 1, 1, 0, 0]' : 0.239558}", "{'[5, 6, 2, 3, 6, 0, 1, 1, 11, 0, 5, 5, 0, 1, 1, 1, 0, 0]' : 0.239641}", "{'[5, 6, 2, 3, 6, 0, 1, 1, 11, 0, 5, 5, 0, 1, 1, 1, 0, 0]' : 0.239728}", "{'[5, 6, 2, 3, 6, 0, 1, 1, 11, 0, 5, 5, 0, 1, 1, 1, 0, 0]' : 0.23943}", "{'[5, 6, 2, 3, 6, 0, 1, 1, 11, 0, 5, 5, 0, 1, 1, 1, 0, 0]' : 0.239577}"]
returning from 'run': {'[5, 6, 2, 3, 6, 0, 1, 1, 11, 0, 5, 5, 0, 1, 1, 1, 0, 0]': ([0.285746, 0.285373, 0.242729, 0.239178, 0.239385, 0.239609, 0.239331, 0.239402, 0.240097, 0.239293, 0.239387, 0.239525, 0.239722, 0.239796, 0.239559, 0.23963, 0.240032, 0.240225, 0.239558, 0.239601, 0.239536, 0.239599, 0.24022, 0.23964, 0.240166, 0.239558, 0.239641, 0.239728, 0.23943, 0.239577], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 6, 2, 3, 6, 0, 1, 1, 11, 0, 5, 5, 0, 1, 1, 1, 0, 0]': ([0.285746, 0.285373, 0.242729, 0.239178, 0.239385, 0.239609, 0.239331, 0.239402, 0.240097, 0.239293, 0.239387, 0.239525, 0.239722, 0.239796, 0.239559, 0.23963, 0.240032, 0.240225, 0.239558, 0.239601, 0.239536, 0.239599, 0.24022, 0.23964, 0.240166, 0.239558, 0.239641, 0.239728, 0.23943, 0.239577], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	43
        Max loop nest depth: 	4
        Additions: 		1551
        Multiplications: 	660
        Divisions: 		0
        Logical: 		0
        Reads: 			3057
        Writes: 		525
        Comparisons:		43
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest22.exe __orio_perftest22.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest22.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest22.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest22.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest22.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	43
        Max loop nest depth: 	6
        Additions: 		1561
        Multiplications: 	528
        Divisions: 		0
        Logical: 		0
        Reads: 			3069
        Writes: 		564
        Comparisons:		43
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest23.exe __orio_perftest23.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest23.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest23.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest23.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest23.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	25
        Max loop nest depth: 	6
        Additions: 		607
        Multiplications: 	154
        Divisions: 		0
        Logical: 		0
        Reads: 			1096
        Writes: 		164
        Comparisons:		25
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest24.exe __orio_perftest24.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest24.exe  
Program Test Output: 
{'[6, 0, 6, 6, 6, 6, 1, 0, 13, 5, 0, 1, 0, 1, 0, 0, 0, 1]' : 0.158096}
{'[6, 0, 6, 6, 6, 6, 1, 0, 13, 5, 0, 1, 0, 1, 0, 0, 0, 1]' : 0.158127}
{'[6, 0, 6, 6, 6, 6, 1, 0, 13, 5, 0, 1, 0, 1, 0, 0, 0, 1]' : 0.158275}
{'[6, 0, 6, 6, 6, 6, 1, 0, 13, 5, 0, 1, 0, 1, 0, 0, 0, 1]' : 0.139616}
{'[6, 0, 6, 6, 6, 6, 1, 0, 13, 5, 0, 1, 0, 1, 0, 0, 0, 1]' : 0.137573}
{'[6, 0, 6, 6, 6, 6, 1, 0, 13, 5, 0, 1, 0, 1, 0, 0, 0, 1]' : 0.137579}
{'[6, 0, 6, 6, 6, 6, 1, 0, 13, 5, 0, 1, 0, 1, 0, 0, 0, 1]' : 0.137599}
{'[6, 0, 6, 6, 6, 6, 1, 0, 13, 5, 0, 1, 0, 1, 0, 0, 0, 1]' : 0.136328}
{'[6, 0, 6, 6, 6, 6, 1, 0, 13, 5, 0, 1, 0, 1, 0, 0, 0, 1]' : 0.133611}
{'[6, 0, 6, 6, 6, 6, 1, 0, 13, 5, 0, 1, 0, 1, 0, 0, 0, 1]' : 0.13337}
{'[6, 0, 6, 6, 6, 6, 1, 0, 13, 5, 0, 1, 0, 1, 0, 0, 0, 1]' : 0.133576}
{'[6, 0, 6, 6, 6, 6, 1, 0, 13, 5, 0, 1, 0, 1, 0, 0, 0, 1]' : 0.1335}
{'[6, 0, 6, 6, 6, 6, 1, 0, 13, 5, 0, 1, 0, 1, 0, 0, 0, 1]' : 0.133429}
{'[6, 0, 6, 6, 6, 6, 1, 0, 13, 5, 0, 1, 0, 1, 0, 0, 0, 1]' : 0.133335}
{'[6, 0, 6, 6, 6, 6, 1, 0, 13, 5, 0, 1, 0, 1, 0, 0, 0, 1]' : 0.133367}
{'[6, 0, 6, 6, 6, 6, 1, 0, 13, 5, 0, 1, 0, 1, 0, 0, 0, 1]' : 0.133673}
{'[6, 0, 6, 6, 6, 6, 1, 0, 13, 5, 0, 1, 0, 1, 0, 0, 0, 1]' : 0.133752}
{'[6, 0, 6, 6, 6, 6, 1, 0, 13, 5, 0, 1, 0, 1, 0, 0, 0, 1]' : 0.133569}
{'[6, 0, 6, 6, 6, 6, 1, 0, 13, 5, 0, 1, 0, 1, 0, 0, 0, 1]' : 0.133359}
{'[6, 0, 6, 6, 6, 6, 1, 0, 13, 5, 0, 1, 0, 1, 0, 0, 0, 1]' : 0.133435}
{'[6, 0, 6, 6, 6, 6, 1, 0, 13, 5, 0, 1, 0, 1, 0, 0, 0, 1]' : 0.133376}
{'[6, 0, 6, 6, 6, 6, 1, 0, 13, 5, 0, 1, 0, 1, 0, 0, 0, 1]' : 0.133334}
{'[6, 0, 6, 6, 6, 6, 1, 0, 13, 5, 0, 1, 0, 1, 0, 0, 0, 1]' : 0.133346}
{'[6, 0, 6, 6, 6, 6, 1, 0, 13, 5, 0, 1, 0, 1, 0, 0, 0, 1]' : 0.133312}
{'[6, 0, 6, 6, 6, 6, 1, 0, 13, 5, 0, 1, 0, 1, 0, 0, 0, 1]' : 0.133693}
{'[6, 0, 6, 6, 6, 6, 1, 0, 13, 5, 0, 1, 0, 1, 0, 0, 0, 1]' : 0.133843}
{'[6, 0, 6, 6, 6, 6, 1, 0, 13, 5, 0, 1, 0, 1, 0, 0, 0, 1]' : 0.133294}
{'[6, 0, 6, 6, 6, 6, 1, 0, 13, 5, 0, 1, 0, 1, 0, 0, 0, 1]' : 0.133642}
{'[6, 0, 6, 6, 6, 6, 1, 0, 13, 5, 0, 1, 0, 1, 0, 0, 0, 1]' : 0.13327}
{'[6, 0, 6, 6, 6, 6, 1, 0, 13, 5, 0, 1, 0, 1, 0, 0, 0, 1]' : 0.133321}

out:
 ["{'[6, 0, 6, 6, 6, 6, 1, 0, 13, 5, 0, 1, 0, 1, 0, 0, 0, 1]' : 0.158096}", "{'[6, 0, 6, 6, 6, 6, 1, 0, 13, 5, 0, 1, 0, 1, 0, 0, 0, 1]' : 0.158127}", "{'[6, 0, 6, 6, 6, 6, 1, 0, 13, 5, 0, 1, 0, 1, 0, 0, 0, 1]' : 0.158275}", "{'[6, 0, 6, 6, 6, 6, 1, 0, 13, 5, 0, 1, 0, 1, 0, 0, 0, 1]' : 0.139616}", "{'[6, 0, 6, 6, 6, 6, 1, 0, 13, 5, 0, 1, 0, 1, 0, 0, 0, 1]' : 0.137573}", "{'[6, 0, 6, 6, 6, 6, 1, 0, 13, 5, 0, 1, 0, 1, 0, 0, 0, 1]' : 0.137579}", "{'[6, 0, 6, 6, 6, 6, 1, 0, 13, 5, 0, 1, 0, 1, 0, 0, 0, 1]' : 0.137599}", "{'[6, 0, 6, 6, 6, 6, 1, 0, 13, 5, 0, 1, 0, 1, 0, 0, 0, 1]' : 0.136328}", "{'[6, 0, 6, 6, 6, 6, 1, 0, 13, 5, 0, 1, 0, 1, 0, 0, 0, 1]' : 0.133611}", "{'[6, 0, 6, 6, 6, 6, 1, 0, 13, 5, 0, 1, 0, 1, 0, 0, 0, 1]' : 0.13337}", "{'[6, 0, 6, 6, 6, 6, 1, 0, 13, 5, 0, 1, 0, 1, 0, 0, 0, 1]' : 0.133576}", "{'[6, 0, 6, 6, 6, 6, 1, 0, 13, 5, 0, 1, 0, 1, 0, 0, 0, 1]' : 0.1335}", "{'[6, 0, 6, 6, 6, 6, 1, 0, 13, 5, 0, 1, 0, 1, 0, 0, 0, 1]' : 0.133429}", "{'[6, 0, 6, 6, 6, 6, 1, 0, 13, 5, 0, 1, 0, 1, 0, 0, 0, 1]' : 0.133335}", "{'[6, 0, 6, 6, 6, 6, 1, 0, 13, 5, 0, 1, 0, 1, 0, 0, 0, 1]' : 0.133367}", "{'[6, 0, 6, 6, 6, 6, 1, 0, 13, 5, 0, 1, 0, 1, 0, 0, 0, 1]' : 0.133673}", "{'[6, 0, 6, 6, 6, 6, 1, 0, 13, 5, 0, 1, 0, 1, 0, 0, 0, 1]' : 0.133752}", "{'[6, 0, 6, 6, 6, 6, 1, 0, 13, 5, 0, 1, 0, 1, 0, 0, 0, 1]' : 0.133569}", "{'[6, 0, 6, 6, 6, 6, 1, 0, 13, 5, 0, 1, 0, 1, 0, 0, 0, 1]' : 0.133359}", "{'[6, 0, 6, 6, 6, 6, 1, 0, 13, 5, 0, 1, 0, 1, 0, 0, 0, 1]' : 0.133435}", "{'[6, 0, 6, 6, 6, 6, 1, 0, 13, 5, 0, 1, 0, 1, 0, 0, 0, 1]' : 0.133376}", "{'[6, 0, 6, 6, 6, 6, 1, 0, 13, 5, 0, 1, 0, 1, 0, 0, 0, 1]' : 0.133334}", "{'[6, 0, 6, 6, 6, 6, 1, 0, 13, 5, 0, 1, 0, 1, 0, 0, 0, 1]' : 0.133346}", "{'[6, 0, 6, 6, 6, 6, 1, 0, 13, 5, 0, 1, 0, 1, 0, 0, 0, 1]' : 0.133312}", "{'[6, 0, 6, 6, 6, 6, 1, 0, 13, 5, 0, 1, 0, 1, 0, 0, 0, 1]' : 0.133693}", "{'[6, 0, 6, 6, 6, 6, 1, 0, 13, 5, 0, 1, 0, 1, 0, 0, 0, 1]' : 0.133843}", "{'[6, 0, 6, 6, 6, 6, 1, 0, 13, 5, 0, 1, 0, 1, 0, 0, 0, 1]' : 0.133294}", "{'[6, 0, 6, 6, 6, 6, 1, 0, 13, 5, 0, 1, 0, 1, 0, 0, 0, 1]' : 0.133642}", "{'[6, 0, 6, 6, 6, 6, 1, 0, 13, 5, 0, 1, 0, 1, 0, 0, 0, 1]' : 0.13327}", "{'[6, 0, 6, 6, 6, 6, 1, 0, 13, 5, 0, 1, 0, 1, 0, 0, 0, 1]' : 0.133321}"]
returning from 'run': {'[6, 0, 6, 6, 6, 6, 1, 0, 13, 5, 0, 1, 0, 1, 0, 0, 0, 1]': ([0.158096, 0.158127, 0.158275, 0.139616, 0.137573, 0.137579, 0.137599, 0.136328, 0.133611, 0.13337, 0.133576, 0.1335, 0.133429, 0.133335, 0.133367, 0.133673, 0.133752, 0.133569, 0.133359, 0.133435, 0.133376, 0.133334, 0.133346, 0.133312, 0.133693, 0.133843, 0.133294, 0.133642, 0.13327, 0.133321], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 6, 6, 6, 6, 1, 0, 13, 5, 0, 1, 0, 1, 0, 0, 0, 1]': ([0.158096, 0.158127, 0.158275, 0.139616, 0.137573, 0.137579, 0.137599, 0.136328, 0.133611, 0.13337, 0.133576, 0.1335, 0.133429, 0.133335, 0.133367, 0.133673, 0.133752, 0.133569, 0.133359, 0.133435, 0.133376, 0.133334, 0.133346, 0.133312, 0.133693, 0.133843, 0.133294, 0.133642, 0.13327, 0.133321], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	5
        Additions: 		12665
        Multiplications: 	3234
        Divisions: 		0
        Logical: 		0
        Reads: 			18222
        Writes: 		1711
        Comparisons:		22
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest25.exe __orio_perftest25.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest25.exe  
Program Test Output: 
{'[2, 6, 6, 6, 0, 0, 0, 1, 27, 0, 20, 25, 2, 0, 0, 0, 1, 1]' : 0.322342}
{'[2, 6, 6, 6, 0, 0, 0, 1, 27, 0, 20, 25, 2, 0, 0, 0, 1, 1]' : 0.313237}
{'[2, 6, 6, 6, 0, 0, 0, 1, 27, 0, 20, 25, 2, 0, 0, 0, 1, 1]' : 0.312363}
{'[2, 6, 6, 6, 0, 0, 0, 1, 27, 0, 20, 25, 2, 0, 0, 0, 1, 1]' : 0.312603}
{'[2, 6, 6, 6, 0, 0, 0, 1, 27, 0, 20, 25, 2, 0, 0, 0, 1, 1]' : 0.312372}
{'[2, 6, 6, 6, 0, 0, 0, 1, 27, 0, 20, 25, 2, 0, 0, 0, 1, 1]' : 0.312744}
{'[2, 6, 6, 6, 0, 0, 0, 1, 27, 0, 20, 25, 2, 0, 0, 0, 1, 1]' : 0.312668}
{'[2, 6, 6, 6, 0, 0, 0, 1, 27, 0, 20, 25, 2, 0, 0, 0, 1, 1]' : 0.31243}
{'[2, 6, 6, 6, 0, 0, 0, 1, 27, 0, 20, 25, 2, 0, 0, 0, 1, 1]' : 0.312757}
{'[2, 6, 6, 6, 0, 0, 0, 1, 27, 0, 20, 25, 2, 0, 0, 0, 1, 1]' : 0.312192}
{'[2, 6, 6, 6, 0, 0, 0, 1, 27, 0, 20, 25, 2, 0, 0, 0, 1, 1]' : 0.31196}
{'[2, 6, 6, 6, 0, 0, 0, 1, 27, 0, 20, 25, 2, 0, 0, 0, 1, 1]' : 0.312382}
{'[2, 6, 6, 6, 0, 0, 0, 1, 27, 0, 20, 25, 2, 0, 0, 0, 1, 1]' : 0.312563}
{'[2, 6, 6, 6, 0, 0, 0, 1, 27, 0, 20, 25, 2, 0, 0, 0, 1, 1]' : 0.312681}
{'[2, 6, 6, 6, 0, 0, 0, 1, 27, 0, 20, 25, 2, 0, 0, 0, 1, 1]' : 0.312296}
{'[2, 6, 6, 6, 0, 0, 0, 1, 27, 0, 20, 25, 2, 0, 0, 0, 1, 1]' : 0.312514}
{'[2, 6, 6, 6, 0, 0, 0, 1, 27, 0, 20, 25, 2, 0, 0, 0, 1, 1]' : 0.312976}
{'[2, 6, 6, 6, 0, 0, 0, 1, 27, 0, 20, 25, 2, 0, 0, 0, 1, 1]' : 0.312036}
{'[2, 6, 6, 6, 0, 0, 0, 1, 27, 0, 20, 25, 2, 0, 0, 0, 1, 1]' : 0.312371}
{'[2, 6, 6, 6, 0, 0, 0, 1, 27, 0, 20, 25, 2, 0, 0, 0, 1, 1]' : 0.312773}
{'[2, 6, 6, 6, 0, 0, 0, 1, 27, 0, 20, 25, 2, 0, 0, 0, 1, 1]' : 0.312364}
{'[2, 6, 6, 6, 0, 0, 0, 1, 27, 0, 20, 25, 2, 0, 0, 0, 1, 1]' : 0.312443}
{'[2, 6, 6, 6, 0, 0, 0, 1, 27, 0, 20, 25, 2, 0, 0, 0, 1, 1]' : 0.312345}
{'[2, 6, 6, 6, 0, 0, 0, 1, 27, 0, 20, 25, 2, 0, 0, 0, 1, 1]' : 0.312174}
{'[2, 6, 6, 6, 0, 0, 0, 1, 27, 0, 20, 25, 2, 0, 0, 0, 1, 1]' : 0.31249}
{'[2, 6, 6, 6, 0, 0, 0, 1, 27, 0, 20, 25, 2, 0, 0, 0, 1, 1]' : 0.312454}
{'[2, 6, 6, 6, 0, 0, 0, 1, 27, 0, 20, 25, 2, 0, 0, 0, 1, 1]' : 0.312987}
{'[2, 6, 6, 6, 0, 0, 0, 1, 27, 0, 20, 25, 2, 0, 0, 0, 1, 1]' : 0.312271}
{'[2, 6, 6, 6, 0, 0, 0, 1, 27, 0, 20, 25, 2, 0, 0, 0, 1, 1]' : 0.312583}
{'[2, 6, 6, 6, 0, 0, 0, 1, 27, 0, 20, 25, 2, 0, 0, 0, 1, 1]' : 0.312314}

out:
 ["{'[2, 6, 6, 6, 0, 0, 0, 1, 27, 0, 20, 25, 2, 0, 0, 0, 1, 1]' : 0.322342}", "{'[2, 6, 6, 6, 0, 0, 0, 1, 27, 0, 20, 25, 2, 0, 0, 0, 1, 1]' : 0.313237}", "{'[2, 6, 6, 6, 0, 0, 0, 1, 27, 0, 20, 25, 2, 0, 0, 0, 1, 1]' : 0.312363}", "{'[2, 6, 6, 6, 0, 0, 0, 1, 27, 0, 20, 25, 2, 0, 0, 0, 1, 1]' : 0.312603}", "{'[2, 6, 6, 6, 0, 0, 0, 1, 27, 0, 20, 25, 2, 0, 0, 0, 1, 1]' : 0.312372}", "{'[2, 6, 6, 6, 0, 0, 0, 1, 27, 0, 20, 25, 2, 0, 0, 0, 1, 1]' : 0.312744}", "{'[2, 6, 6, 6, 0, 0, 0, 1, 27, 0, 20, 25, 2, 0, 0, 0, 1, 1]' : 0.312668}", "{'[2, 6, 6, 6, 0, 0, 0, 1, 27, 0, 20, 25, 2, 0, 0, 0, 1, 1]' : 0.31243}", "{'[2, 6, 6, 6, 0, 0, 0, 1, 27, 0, 20, 25, 2, 0, 0, 0, 1, 1]' : 0.312757}", "{'[2, 6, 6, 6, 0, 0, 0, 1, 27, 0, 20, 25, 2, 0, 0, 0, 1, 1]' : 0.312192}", "{'[2, 6, 6, 6, 0, 0, 0, 1, 27, 0, 20, 25, 2, 0, 0, 0, 1, 1]' : 0.31196}", "{'[2, 6, 6, 6, 0, 0, 0, 1, 27, 0, 20, 25, 2, 0, 0, 0, 1, 1]' : 0.312382}", "{'[2, 6, 6, 6, 0, 0, 0, 1, 27, 0, 20, 25, 2, 0, 0, 0, 1, 1]' : 0.312563}", "{'[2, 6, 6, 6, 0, 0, 0, 1, 27, 0, 20, 25, 2, 0, 0, 0, 1, 1]' : 0.312681}", "{'[2, 6, 6, 6, 0, 0, 0, 1, 27, 0, 20, 25, 2, 0, 0, 0, 1, 1]' : 0.312296}", "{'[2, 6, 6, 6, 0, 0, 0, 1, 27, 0, 20, 25, 2, 0, 0, 0, 1, 1]' : 0.312514}", "{'[2, 6, 6, 6, 0, 0, 0, 1, 27, 0, 20, 25, 2, 0, 0, 0, 1, 1]' : 0.312976}", "{'[2, 6, 6, 6, 0, 0, 0, 1, 27, 0, 20, 25, 2, 0, 0, 0, 1, 1]' : 0.312036}", "{'[2, 6, 6, 6, 0, 0, 0, 1, 27, 0, 20, 25, 2, 0, 0, 0, 1, 1]' : 0.312371}", "{'[2, 6, 6, 6, 0, 0, 0, 1, 27, 0, 20, 25, 2, 0, 0, 0, 1, 1]' : 0.312773}", "{'[2, 6, 6, 6, 0, 0, 0, 1, 27, 0, 20, 25, 2, 0, 0, 0, 1, 1]' : 0.312364}", "{'[2, 6, 6, 6, 0, 0, 0, 1, 27, 0, 20, 25, 2, 0, 0, 0, 1, 1]' : 0.312443}", "{'[2, 6, 6, 6, 0, 0, 0, 1, 27, 0, 20, 25, 2, 0, 0, 0, 1, 1]' : 0.312345}", "{'[2, 6, 6, 6, 0, 0, 0, 1, 27, 0, 20, 25, 2, 0, 0, 0, 1, 1]' : 0.312174}", "{'[2, 6, 6, 6, 0, 0, 0, 1, 27, 0, 20, 25, 2, 0, 0, 0, 1, 1]' : 0.31249}", "{'[2, 6, 6, 6, 0, 0, 0, 1, 27, 0, 20, 25, 2, 0, 0, 0, 1, 1]' : 0.312454}", "{'[2, 6, 6, 6, 0, 0, 0, 1, 27, 0, 20, 25, 2, 0, 0, 0, 1, 1]' : 0.312987}", "{'[2, 6, 6, 6, 0, 0, 0, 1, 27, 0, 20, 25, 2, 0, 0, 0, 1, 1]' : 0.312271}", "{'[2, 6, 6, 6, 0, 0, 0, 1, 27, 0, 20, 25, 2, 0, 0, 0, 1, 1]' : 0.312583}", "{'[2, 6, 6, 6, 0, 0, 0, 1, 27, 0, 20, 25, 2, 0, 0, 0, 1, 1]' : 0.312314}"]
returning from 'run': {'[2, 6, 6, 6, 0, 0, 0, 1, 27, 0, 20, 25, 2, 0, 0, 0, 1, 1]': ([0.322342, 0.313237, 0.312363, 0.312603, 0.312372, 0.312744, 0.312668, 0.31243, 0.312757, 0.312192, 0.31196, 0.312382, 0.312563, 0.312681, 0.312296, 0.312514, 0.312976, 0.312036, 0.312371, 0.312773, 0.312364, 0.312443, 0.312345, 0.312174, 0.31249, 0.312454, 0.312987, 0.312271, 0.312583, 0.312314], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 6, 6, 6, 0, 0, 0, 1, 27, 0, 20, 25, 2, 0, 0, 0, 1, 1]': ([0.322342, 0.313237, 0.312363, 0.312603, 0.312372, 0.312744, 0.312668, 0.31243, 0.312757, 0.312192, 0.31196, 0.312382, 0.312563, 0.312681, 0.312296, 0.312514, 0.312976, 0.312036, 0.312371, 0.312773, 0.312364, 0.312443, 0.312345, 0.312174, 0.31249, 0.312454, 0.312987, 0.312271, 0.312583, 0.312314], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	34
        Max loop nest depth: 	5
        Additions: 		1817
        Multiplications: 	814
        Divisions: 		0
        Logical: 		0
        Reads: 			3596
        Writes: 		617
        Comparisons:		34
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest26.exe __orio_perftest26.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest26.exe  
Program Test Output: 
{'[0, 2, 2, 3, 2, 2, 0, 1, 0, 1, 27, 0, 1, 0, 1, 1, 1, 0]' : 0.110271}
{'[0, 2, 2, 3, 2, 2, 0, 1, 0, 1, 27, 0, 1, 0, 1, 1, 1, 0]' : 0.110315}
{'[0, 2, 2, 3, 2, 2, 0, 1, 0, 1, 27, 0, 1, 0, 1, 1, 1, 0]' : 0.106855}
{'[0, 2, 2, 3, 2, 2, 0, 1, 0, 1, 27, 0, 1, 0, 1, 1, 1, 0]' : 0.099412}
{'[0, 2, 2, 3, 2, 2, 0, 1, 0, 1, 27, 0, 1, 0, 1, 1, 1, 0]' : 0.100001}
{'[0, 2, 2, 3, 2, 2, 0, 1, 0, 1, 27, 0, 1, 0, 1, 1, 1, 0]' : 0.100179}
{'[0, 2, 2, 3, 2, 2, 0, 1, 0, 1, 27, 0, 1, 0, 1, 1, 1, 0]' : 0.0978329}
{'[0, 2, 2, 3, 2, 2, 0, 1, 0, 1, 27, 0, 1, 0, 1, 1, 1, 0]' : 0.0972879}
{'[0, 2, 2, 3, 2, 2, 0, 1, 0, 1, 27, 0, 1, 0, 1, 1, 1, 0]' : 0.0975969}
{'[0, 2, 2, 3, 2, 2, 0, 1, 0, 1, 27, 0, 1, 0, 1, 1, 1, 0]' : 0.104425}
{'[0, 2, 2, 3, 2, 2, 0, 1, 0, 1, 27, 0, 1, 0, 1, 1, 1, 0]' : 0.098145}
{'[0, 2, 2, 3, 2, 2, 0, 1, 0, 1, 27, 0, 1, 0, 1, 1, 1, 0]' : 0.100109}
{'[0, 2, 2, 3, 2, 2, 0, 1, 0, 1, 27, 0, 1, 0, 1, 1, 1, 0]' : 0.1001}
{'[0, 2, 2, 3, 2, 2, 0, 1, 0, 1, 27, 0, 1, 0, 1, 1, 1, 0]' : 0.100097}
{'[0, 2, 2, 3, 2, 2, 0, 1, 0, 1, 27, 0, 1, 0, 1, 1, 1, 0]' : 0.10009}
{'[0, 2, 2, 3, 2, 2, 0, 1, 0, 1, 27, 0, 1, 0, 1, 1, 1, 0]' : 0.100194}
{'[0, 2, 2, 3, 2, 2, 0, 1, 0, 1, 27, 0, 1, 0, 1, 1, 1, 0]' : 0.10003}
{'[0, 2, 2, 3, 2, 2, 0, 1, 0, 1, 27, 0, 1, 0, 1, 1, 1, 0]' : 0.0999849}
{'[0, 2, 2, 3, 2, 2, 0, 1, 0, 1, 27, 0, 1, 0, 1, 1, 1, 0]' : 0.100024}
{'[0, 2, 2, 3, 2, 2, 0, 1, 0, 1, 27, 0, 1, 0, 1, 1, 1, 0]' : 0.099977}
{'[0, 2, 2, 3, 2, 2, 0, 1, 0, 1, 27, 0, 1, 0, 1, 1, 1, 0]' : 0.100043}
{'[0, 2, 2, 3, 2, 2, 0, 1, 0, 1, 27, 0, 1, 0, 1, 1, 1, 0]' : 0.099987}
{'[0, 2, 2, 3, 2, 2, 0, 1, 0, 1, 27, 0, 1, 0, 1, 1, 1, 0]' : 0.100034}
{'[0, 2, 2, 3, 2, 2, 0, 1, 0, 1, 27, 0, 1, 0, 1, 1, 1, 0]' : 0.0999429}
{'[0, 2, 2, 3, 2, 2, 0, 1, 0, 1, 27, 0, 1, 0, 1, 1, 1, 0]' : 0.101481}
{'[0, 2, 2, 3, 2, 2, 0, 1, 0, 1, 27, 0, 1, 0, 1, 1, 1, 0]' : 0.101101}
{'[0, 2, 2, 3, 2, 2, 0, 1, 0, 1, 27, 0, 1, 0, 1, 1, 1, 0]' : 0.0972989}
{'[0, 2, 2, 3, 2, 2, 0, 1, 0, 1, 27, 0, 1, 0, 1, 1, 1, 0]' : 0.097352}
{'[0, 2, 2, 3, 2, 2, 0, 1, 0, 1, 27, 0, 1, 0, 1, 1, 1, 0]' : 0.0974731}
{'[0, 2, 2, 3, 2, 2, 0, 1, 0, 1, 27, 0, 1, 0, 1, 1, 1, 0]' : 0.097363}

out:
 ["{'[0, 2, 2, 3, 2, 2, 0, 1, 0, 1, 27, 0, 1, 0, 1, 1, 1, 0]' : 0.110271}", "{'[0, 2, 2, 3, 2, 2, 0, 1, 0, 1, 27, 0, 1, 0, 1, 1, 1, 0]' : 0.110315}", "{'[0, 2, 2, 3, 2, 2, 0, 1, 0, 1, 27, 0, 1, 0, 1, 1, 1, 0]' : 0.106855}", "{'[0, 2, 2, 3, 2, 2, 0, 1, 0, 1, 27, 0, 1, 0, 1, 1, 1, 0]' : 0.099412}", "{'[0, 2, 2, 3, 2, 2, 0, 1, 0, 1, 27, 0, 1, 0, 1, 1, 1, 0]' : 0.100001}", "{'[0, 2, 2, 3, 2, 2, 0, 1, 0, 1, 27, 0, 1, 0, 1, 1, 1, 0]' : 0.100179}", "{'[0, 2, 2, 3, 2, 2, 0, 1, 0, 1, 27, 0, 1, 0, 1, 1, 1, 0]' : 0.0978329}", "{'[0, 2, 2, 3, 2, 2, 0, 1, 0, 1, 27, 0, 1, 0, 1, 1, 1, 0]' : 0.0972879}", "{'[0, 2, 2, 3, 2, 2, 0, 1, 0, 1, 27, 0, 1, 0, 1, 1, 1, 0]' : 0.0975969}", "{'[0, 2, 2, 3, 2, 2, 0, 1, 0, 1, 27, 0, 1, 0, 1, 1, 1, 0]' : 0.104425}", "{'[0, 2, 2, 3, 2, 2, 0, 1, 0, 1, 27, 0, 1, 0, 1, 1, 1, 0]' : 0.098145}", "{'[0, 2, 2, 3, 2, 2, 0, 1, 0, 1, 27, 0, 1, 0, 1, 1, 1, 0]' : 0.100109}", "{'[0, 2, 2, 3, 2, 2, 0, 1, 0, 1, 27, 0, 1, 0, 1, 1, 1, 0]' : 0.1001}", "{'[0, 2, 2, 3, 2, 2, 0, 1, 0, 1, 27, 0, 1, 0, 1, 1, 1, 0]' : 0.100097}", "{'[0, 2, 2, 3, 2, 2, 0, 1, 0, 1, 27, 0, 1, 0, 1, 1, 1, 0]' : 0.10009}", "{'[0, 2, 2, 3, 2, 2, 0, 1, 0, 1, 27, 0, 1, 0, 1, 1, 1, 0]' : 0.100194}", "{'[0, 2, 2, 3, 2, 2, 0, 1, 0, 1, 27, 0, 1, 0, 1, 1, 1, 0]' : 0.10003}", "{'[0, 2, 2, 3, 2, 2, 0, 1, 0, 1, 27, 0, 1, 0, 1, 1, 1, 0]' : 0.0999849}", "{'[0, 2, 2, 3, 2, 2, 0, 1, 0, 1, 27, 0, 1, 0, 1, 1, 1, 0]' : 0.100024}", "{'[0, 2, 2, 3, 2, 2, 0, 1, 0, 1, 27, 0, 1, 0, 1, 1, 1, 0]' : 0.099977}", "{'[0, 2, 2, 3, 2, 2, 0, 1, 0, 1, 27, 0, 1, 0, 1, 1, 1, 0]' : 0.100043}", "{'[0, 2, 2, 3, 2, 2, 0, 1, 0, 1, 27, 0, 1, 0, 1, 1, 1, 0]' : 0.099987}", "{'[0, 2, 2, 3, 2, 2, 0, 1, 0, 1, 27, 0, 1, 0, 1, 1, 1, 0]' : 0.100034}", "{'[0, 2, 2, 3, 2, 2, 0, 1, 0, 1, 27, 0, 1, 0, 1, 1, 1, 0]' : 0.0999429}", "{'[0, 2, 2, 3, 2, 2, 0, 1, 0, 1, 27, 0, 1, 0, 1, 1, 1, 0]' : 0.101481}", "{'[0, 2, 2, 3, 2, 2, 0, 1, 0, 1, 27, 0, 1, 0, 1, 1, 1, 0]' : 0.101101}", "{'[0, 2, 2, 3, 2, 2, 0, 1, 0, 1, 27, 0, 1, 0, 1, 1, 1, 0]' : 0.0972989}", "{'[0, 2, 2, 3, 2, 2, 0, 1, 0, 1, 27, 0, 1, 0, 1, 1, 1, 0]' : 0.097352}", "{'[0, 2, 2, 3, 2, 2, 0, 1, 0, 1, 27, 0, 1, 0, 1, 1, 1, 0]' : 0.0974731}", "{'[0, 2, 2, 3, 2, 2, 0, 1, 0, 1, 27, 0, 1, 0, 1, 1, 1, 0]' : 0.097363}"]
returning from 'run': {'[0, 2, 2, 3, 2, 2, 0, 1, 0, 1, 27, 0, 1, 0, 1, 1, 1, 0]': ([0.110271, 0.110315, 0.106855, 0.099412, 0.100001, 0.100179, 0.0978329, 0.0972879, 0.0975969, 0.104425, 0.098145, 0.100109, 0.1001, 0.100097, 0.10009, 0.100194, 0.10003, 0.0999849, 0.100024, 0.099977, 0.100043, 0.099987, 0.100034, 0.0999429, 0.101481, 0.101101, 0.0972989, 0.097352, 0.0974731, 0.097363], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 2, 3, 2, 2, 0, 1, 0, 1, 27, 0, 1, 0, 1, 1, 1, 0]': ([0.110271, 0.110315, 0.106855, 0.099412, 0.100001, 0.100179, 0.0978329, 0.0972879, 0.0975969, 0.104425, 0.098145, 0.100109, 0.1001, 0.100097, 0.10009, 0.100194, 0.10003, 0.0999849, 0.100024, 0.099977, 0.100043, 0.099987, 0.100034, 0.0999429, 0.101481, 0.101101, 0.0972989, 0.097352, 0.0974731, 0.097363], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = iii
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		357
        Multiplications: 	116
        Divisions: 		0
        Logical: 		0
        Reads: 			894
        Writes: 		226
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest27.exe __orio_perftest27.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest27.exe  
Program Test Output: 
{'[4, 3, 6, 2, 2, 6, 0, 0, 26, 0, 2, 20, 0, 0, 2, 1, 1, 0]' : 0.17707}
{'[4, 3, 6, 2, 2, 6, 0, 0, 26, 0, 2, 20, 0, 0, 2, 1, 1, 0]' : 0.176917}
{'[4, 3, 6, 2, 2, 6, 0, 0, 26, 0, 2, 20, 0, 0, 2, 1, 1, 0]' : 0.176901}
{'[4, 3, 6, 2, 2, 6, 0, 0, 26, 0, 2, 20, 0, 0, 2, 1, 1, 0]' : 0.155827}
{'[4, 3, 6, 2, 2, 6, 0, 0, 26, 0, 2, 20, 0, 0, 2, 1, 1, 0]' : 0.148615}
{'[4, 3, 6, 2, 2, 6, 0, 0, 26, 0, 2, 20, 0, 0, 2, 1, 1, 0]' : 0.148635}
{'[4, 3, 6, 2, 2, 6, 0, 0, 26, 0, 2, 20, 0, 0, 2, 1, 1, 0]' : 0.14863}
{'[4, 3, 6, 2, 2, 6, 0, 0, 26, 0, 2, 20, 0, 0, 2, 1, 1, 0]' : 0.148948}
{'[4, 3, 6, 2, 2, 6, 0, 0, 26, 0, 2, 20, 0, 0, 2, 1, 1, 0]' : 0.148961}
{'[4, 3, 6, 2, 2, 6, 0, 0, 26, 0, 2, 20, 0, 0, 2, 1, 1, 0]' : 0.148673}
{'[4, 3, 6, 2, 2, 6, 0, 0, 26, 0, 2, 20, 0, 0, 2, 1, 1, 0]' : 0.148583}
{'[4, 3, 6, 2, 2, 6, 0, 0, 26, 0, 2, 20, 0, 0, 2, 1, 1, 0]' : 0.148682}
{'[4, 3, 6, 2, 2, 6, 0, 0, 26, 0, 2, 20, 0, 0, 2, 1, 1, 0]' : 0.148553}
{'[4, 3, 6, 2, 2, 6, 0, 0, 26, 0, 2, 20, 0, 0, 2, 1, 1, 0]' : 0.148731}
{'[4, 3, 6, 2, 2, 6, 0, 0, 26, 0, 2, 20, 0, 0, 2, 1, 1, 0]' : 0.148676}
{'[4, 3, 6, 2, 2, 6, 0, 0, 26, 0, 2, 20, 0, 0, 2, 1, 1, 0]' : 0.149126}
{'[4, 3, 6, 2, 2, 6, 0, 0, 26, 0, 2, 20, 0, 0, 2, 1, 1, 0]' : 0.148721}
{'[4, 3, 6, 2, 2, 6, 0, 0, 26, 0, 2, 20, 0, 0, 2, 1, 1, 0]' : 0.148714}
{'[4, 3, 6, 2, 2, 6, 0, 0, 26, 0, 2, 20, 0, 0, 2, 1, 1, 0]' : 0.148621}
{'[4, 3, 6, 2, 2, 6, 0, 0, 26, 0, 2, 20, 0, 0, 2, 1, 1, 0]' : 0.148963}
{'[4, 3, 6, 2, 2, 6, 0, 0, 26, 0, 2, 20, 0, 0, 2, 1, 1, 0]' : 0.148365}
{'[4, 3, 6, 2, 2, 6, 0, 0, 26, 0, 2, 20, 0, 0, 2, 1, 1, 0]' : 0.14826}
{'[4, 3, 6, 2, 2, 6, 0, 0, 26, 0, 2, 20, 0, 0, 2, 1, 1, 0]' : 0.148315}
{'[4, 3, 6, 2, 2, 6, 0, 0, 26, 0, 2, 20, 0, 0, 2, 1, 1, 0]' : 0.14828}
{'[4, 3, 6, 2, 2, 6, 0, 0, 26, 0, 2, 20, 0, 0, 2, 1, 1, 0]' : 0.148635}
{'[4, 3, 6, 2, 2, 6, 0, 0, 26, 0, 2, 20, 0, 0, 2, 1, 1, 0]' : 0.148101}
{'[4, 3, 6, 2, 2, 6, 0, 0, 26, 0, 2, 20, 0, 0, 2, 1, 1, 0]' : 0.148339}
{'[4, 3, 6, 2, 2, 6, 0, 0, 26, 0, 2, 20, 0, 0, 2, 1, 1, 0]' : 0.148148}
{'[4, 3, 6, 2, 2, 6, 0, 0, 26, 0, 2, 20, 0, 0, 2, 1, 1, 0]' : 0.148245}
{'[4, 3, 6, 2, 2, 6, 0, 0, 26, 0, 2, 20, 0, 0, 2, 1, 1, 0]' : 0.148622}

out:
 ["{'[4, 3, 6, 2, 2, 6, 0, 0, 26, 0, 2, 20, 0, 0, 2, 1, 1, 0]' : 0.17707}", "{'[4, 3, 6, 2, 2, 6, 0, 0, 26, 0, 2, 20, 0, 0, 2, 1, 1, 0]' : 0.176917}", "{'[4, 3, 6, 2, 2, 6, 0, 0, 26, 0, 2, 20, 0, 0, 2, 1, 1, 0]' : 0.176901}", "{'[4, 3, 6, 2, 2, 6, 0, 0, 26, 0, 2, 20, 0, 0, 2, 1, 1, 0]' : 0.155827}", "{'[4, 3, 6, 2, 2, 6, 0, 0, 26, 0, 2, 20, 0, 0, 2, 1, 1, 0]' : 0.148615}", "{'[4, 3, 6, 2, 2, 6, 0, 0, 26, 0, 2, 20, 0, 0, 2, 1, 1, 0]' : 0.148635}", "{'[4, 3, 6, 2, 2, 6, 0, 0, 26, 0, 2, 20, 0, 0, 2, 1, 1, 0]' : 0.14863}", "{'[4, 3, 6, 2, 2, 6, 0, 0, 26, 0, 2, 20, 0, 0, 2, 1, 1, 0]' : 0.148948}", "{'[4, 3, 6, 2, 2, 6, 0, 0, 26, 0, 2, 20, 0, 0, 2, 1, 1, 0]' : 0.148961}", "{'[4, 3, 6, 2, 2, 6, 0, 0, 26, 0, 2, 20, 0, 0, 2, 1, 1, 0]' : 0.148673}", "{'[4, 3, 6, 2, 2, 6, 0, 0, 26, 0, 2, 20, 0, 0, 2, 1, 1, 0]' : 0.148583}", "{'[4, 3, 6, 2, 2, 6, 0, 0, 26, 0, 2, 20, 0, 0, 2, 1, 1, 0]' : 0.148682}", "{'[4, 3, 6, 2, 2, 6, 0, 0, 26, 0, 2, 20, 0, 0, 2, 1, 1, 0]' : 0.148553}", "{'[4, 3, 6, 2, 2, 6, 0, 0, 26, 0, 2, 20, 0, 0, 2, 1, 1, 0]' : 0.148731}", "{'[4, 3, 6, 2, 2, 6, 0, 0, 26, 0, 2, 20, 0, 0, 2, 1, 1, 0]' : 0.148676}", "{'[4, 3, 6, 2, 2, 6, 0, 0, 26, 0, 2, 20, 0, 0, 2, 1, 1, 0]' : 0.149126}", "{'[4, 3, 6, 2, 2, 6, 0, 0, 26, 0, 2, 20, 0, 0, 2, 1, 1, 0]' : 0.148721}", "{'[4, 3, 6, 2, 2, 6, 0, 0, 26, 0, 2, 20, 0, 0, 2, 1, 1, 0]' : 0.148714}", "{'[4, 3, 6, 2, 2, 6, 0, 0, 26, 0, 2, 20, 0, 0, 2, 1, 1, 0]' : 0.148621}", "{'[4, 3, 6, 2, 2, 6, 0, 0, 26, 0, 2, 20, 0, 0, 2, 1, 1, 0]' : 0.148963}", "{'[4, 3, 6, 2, 2, 6, 0, 0, 26, 0, 2, 20, 0, 0, 2, 1, 1, 0]' : 0.148365}", "{'[4, 3, 6, 2, 2, 6, 0, 0, 26, 0, 2, 20, 0, 0, 2, 1, 1, 0]' : 0.14826}", "{'[4, 3, 6, 2, 2, 6, 0, 0, 26, 0, 2, 20, 0, 0, 2, 1, 1, 0]' : 0.148315}", "{'[4, 3, 6, 2, 2, 6, 0, 0, 26, 0, 2, 20, 0, 0, 2, 1, 1, 0]' : 0.14828}", "{'[4, 3, 6, 2, 2, 6, 0, 0, 26, 0, 2, 20, 0, 0, 2, 1, 1, 0]' : 0.148635}", "{'[4, 3, 6, 2, 2, 6, 0, 0, 26, 0, 2, 20, 0, 0, 2, 1, 1, 0]' : 0.148101}", "{'[4, 3, 6, 2, 2, 6, 0, 0, 26, 0, 2, 20, 0, 0, 2, 1, 1, 0]' : 0.148339}", "{'[4, 3, 6, 2, 2, 6, 0, 0, 26, 0, 2, 20, 0, 0, 2, 1, 1, 0]' : 0.148148}", "{'[4, 3, 6, 2, 2, 6, 0, 0, 26, 0, 2, 20, 0, 0, 2, 1, 1, 0]' : 0.148245}", "{'[4, 3, 6, 2, 2, 6, 0, 0, 26, 0, 2, 20, 0, 0, 2, 1, 1, 0]' : 0.148622}"]
returning from 'run': {'[4, 3, 6, 2, 2, 6, 0, 0, 26, 0, 2, 20, 0, 0, 2, 1, 1, 0]': ([0.17707, 0.176917, 0.176901, 0.155827, 0.148615, 0.148635, 0.14863, 0.148948, 0.148961, 0.148673, 0.148583, 0.148682, 0.148553, 0.148731, 0.148676, 0.149126, 0.148721, 0.148714, 0.148621, 0.148963, 0.148365, 0.14826, 0.148315, 0.14828, 0.148635, 0.148101, 0.148339, 0.148148, 0.148245, 0.148622], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 3, 6, 2, 2, 6, 0, 0, 26, 0, 2, 20, 0, 0, 2, 1, 1, 0]': ([0.17707, 0.176917, 0.176901, 0.155827, 0.148615, 0.148635, 0.14863, 0.148948, 0.148961, 0.148673, 0.148583, 0.148682, 0.148553, 0.148731, 0.148676, 0.149126, 0.148721, 0.148714, 0.148621, 0.148963, 0.148365, 0.14826, 0.148315, 0.14828, 0.148635, 0.148101, 0.148339, 0.148148, 0.148245, 0.148622], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	5
        Additions: 		1486
        Multiplications: 	684
        Divisions: 		0
        Logical: 		0
        Reads: 			2987
        Writes: 		536
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest28.exe __orio_perftest28.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest28.exe  
Program Test Output: 
{'[0, 1, 2, 5, 0, 3, 0, 0, 6, 0, 10, 24, 1, 0, 0, 1, 0, 1]' : 0.129295}
{'[0, 1, 2, 5, 0, 3, 0, 0, 6, 0, 10, 24, 1, 0, 0, 1, 0, 1]' : 0.128254}
{'[0, 1, 2, 5, 0, 3, 0, 0, 6, 0, 10, 24, 1, 0, 0, 1, 0, 1]' : 0.128199}
{'[0, 1, 2, 5, 0, 3, 0, 0, 6, 0, 10, 24, 1, 0, 0, 1, 0, 1]' : 0.126729}
{'[0, 1, 2, 5, 0, 3, 0, 0, 6, 0, 10, 24, 1, 0, 0, 1, 0, 1]' : 0.112337}
{'[0, 1, 2, 5, 0, 3, 0, 0, 6, 0, 10, 24, 1, 0, 0, 1, 0, 1]' : 0.111041}
{'[0, 1, 2, 5, 0, 3, 0, 0, 6, 0, 10, 24, 1, 0, 0, 1, 0, 1]' : 0.111171}
{'[0, 1, 2, 5, 0, 3, 0, 0, 6, 0, 10, 24, 1, 0, 0, 1, 0, 1]' : 0.111234}
{'[0, 1, 2, 5, 0, 3, 0, 0, 6, 0, 10, 24, 1, 0, 0, 1, 0, 1]' : 0.111402}
{'[0, 1, 2, 5, 0, 3, 0, 0, 6, 0, 10, 24, 1, 0, 0, 1, 0, 1]' : 0.111162}
{'[0, 1, 2, 5, 0, 3, 0, 0, 6, 0, 10, 24, 1, 0, 0, 1, 0, 1]' : 0.111113}
{'[0, 1, 2, 5, 0, 3, 0, 0, 6, 0, 10, 24, 1, 0, 0, 1, 0, 1]' : 0.111278}
{'[0, 1, 2, 5, 0, 3, 0, 0, 6, 0, 10, 24, 1, 0, 0, 1, 0, 1]' : 0.111145}
{'[0, 1, 2, 5, 0, 3, 0, 0, 6, 0, 10, 24, 1, 0, 0, 1, 0, 1]' : 0.111022}
{'[0, 1, 2, 5, 0, 3, 0, 0, 6, 0, 10, 24, 1, 0, 0, 1, 0, 1]' : 0.111095}
{'[0, 1, 2, 5, 0, 3, 0, 0, 6, 0, 10, 24, 1, 0, 0, 1, 0, 1]' : 0.111317}
{'[0, 1, 2, 5, 0, 3, 0, 0, 6, 0, 10, 24, 1, 0, 0, 1, 0, 1]' : 0.111102}
{'[0, 1, 2, 5, 0, 3, 0, 0, 6, 0, 10, 24, 1, 0, 0, 1, 0, 1]' : 0.111481}
{'[0, 1, 2, 5, 0, 3, 0, 0, 6, 0, 10, 24, 1, 0, 0, 1, 0, 1]' : 0.111373}
{'[0, 1, 2, 5, 0, 3, 0, 0, 6, 0, 10, 24, 1, 0, 0, 1, 0, 1]' : 0.111122}
{'[0, 1, 2, 5, 0, 3, 0, 0, 6, 0, 10, 24, 1, 0, 0, 1, 0, 1]' : 0.111266}
{'[0, 1, 2, 5, 0, 3, 0, 0, 6, 0, 10, 24, 1, 0, 0, 1, 0, 1]' : 0.111495}
{'[0, 1, 2, 5, 0, 3, 0, 0, 6, 0, 10, 24, 1, 0, 0, 1, 0, 1]' : 0.111073}
{'[0, 1, 2, 5, 0, 3, 0, 0, 6, 0, 10, 24, 1, 0, 0, 1, 0, 1]' : 0.110981}
{'[0, 1, 2, 5, 0, 3, 0, 0, 6, 0, 10, 24, 1, 0, 0, 1, 0, 1]' : 0.111163}
{'[0, 1, 2, 5, 0, 3, 0, 0, 6, 0, 10, 24, 1, 0, 0, 1, 0, 1]' : 0.111042}
{'[0, 1, 2, 5, 0, 3, 0, 0, 6, 0, 10, 24, 1, 0, 0, 1, 0, 1]' : 0.111272}
{'[0, 1, 2, 5, 0, 3, 0, 0, 6, 0, 10, 24, 1, 0, 0, 1, 0, 1]' : 0.111453}
{'[0, 1, 2, 5, 0, 3, 0, 0, 6, 0, 10, 24, 1, 0, 0, 1, 0, 1]' : 0.111541}
{'[0, 1, 2, 5, 0, 3, 0, 0, 6, 0, 10, 24, 1, 0, 0, 1, 0, 1]' : 0.111247}

out:
 ["{'[0, 1, 2, 5, 0, 3, 0, 0, 6, 0, 10, 24, 1, 0, 0, 1, 0, 1]' : 0.129295}", "{'[0, 1, 2, 5, 0, 3, 0, 0, 6, 0, 10, 24, 1, 0, 0, 1, 0, 1]' : 0.128254}", "{'[0, 1, 2, 5, 0, 3, 0, 0, 6, 0, 10, 24, 1, 0, 0, 1, 0, 1]' : 0.128199}", "{'[0, 1, 2, 5, 0, 3, 0, 0, 6, 0, 10, 24, 1, 0, 0, 1, 0, 1]' : 0.126729}", "{'[0, 1, 2, 5, 0, 3, 0, 0, 6, 0, 10, 24, 1, 0, 0, 1, 0, 1]' : 0.112337}", "{'[0, 1, 2, 5, 0, 3, 0, 0, 6, 0, 10, 24, 1, 0, 0, 1, 0, 1]' : 0.111041}", "{'[0, 1, 2, 5, 0, 3, 0, 0, 6, 0, 10, 24, 1, 0, 0, 1, 0, 1]' : 0.111171}", "{'[0, 1, 2, 5, 0, 3, 0, 0, 6, 0, 10, 24, 1, 0, 0, 1, 0, 1]' : 0.111234}", "{'[0, 1, 2, 5, 0, 3, 0, 0, 6, 0, 10, 24, 1, 0, 0, 1, 0, 1]' : 0.111402}", "{'[0, 1, 2, 5, 0, 3, 0, 0, 6, 0, 10, 24, 1, 0, 0, 1, 0, 1]' : 0.111162}", "{'[0, 1, 2, 5, 0, 3, 0, 0, 6, 0, 10, 24, 1, 0, 0, 1, 0, 1]' : 0.111113}", "{'[0, 1, 2, 5, 0, 3, 0, 0, 6, 0, 10, 24, 1, 0, 0, 1, 0, 1]' : 0.111278}", "{'[0, 1, 2, 5, 0, 3, 0, 0, 6, 0, 10, 24, 1, 0, 0, 1, 0, 1]' : 0.111145}", "{'[0, 1, 2, 5, 0, 3, 0, 0, 6, 0, 10, 24, 1, 0, 0, 1, 0, 1]' : 0.111022}", "{'[0, 1, 2, 5, 0, 3, 0, 0, 6, 0, 10, 24, 1, 0, 0, 1, 0, 1]' : 0.111095}", "{'[0, 1, 2, 5, 0, 3, 0, 0, 6, 0, 10, 24, 1, 0, 0, 1, 0, 1]' : 0.111317}", "{'[0, 1, 2, 5, 0, 3, 0, 0, 6, 0, 10, 24, 1, 0, 0, 1, 0, 1]' : 0.111102}", "{'[0, 1, 2, 5, 0, 3, 0, 0, 6, 0, 10, 24, 1, 0, 0, 1, 0, 1]' : 0.111481}", "{'[0, 1, 2, 5, 0, 3, 0, 0, 6, 0, 10, 24, 1, 0, 0, 1, 0, 1]' : 0.111373}", "{'[0, 1, 2, 5, 0, 3, 0, 0, 6, 0, 10, 24, 1, 0, 0, 1, 0, 1]' : 0.111122}", "{'[0, 1, 2, 5, 0, 3, 0, 0, 6, 0, 10, 24, 1, 0, 0, 1, 0, 1]' : 0.111266}", "{'[0, 1, 2, 5, 0, 3, 0, 0, 6, 0, 10, 24, 1, 0, 0, 1, 0, 1]' : 0.111495}", "{'[0, 1, 2, 5, 0, 3, 0, 0, 6, 0, 10, 24, 1, 0, 0, 1, 0, 1]' : 0.111073}", "{'[0, 1, 2, 5, 0, 3, 0, 0, 6, 0, 10, 24, 1, 0, 0, 1, 0, 1]' : 0.110981}", "{'[0, 1, 2, 5, 0, 3, 0, 0, 6, 0, 10, 24, 1, 0, 0, 1, 0, 1]' : 0.111163}", "{'[0, 1, 2, 5, 0, 3, 0, 0, 6, 0, 10, 24, 1, 0, 0, 1, 0, 1]' : 0.111042}", "{'[0, 1, 2, 5, 0, 3, 0, 0, 6, 0, 10, 24, 1, 0, 0, 1, 0, 1]' : 0.111272}", "{'[0, 1, 2, 5, 0, 3, 0, 0, 6, 0, 10, 24, 1, 0, 0, 1, 0, 1]' : 0.111453}", "{'[0, 1, 2, 5, 0, 3, 0, 0, 6, 0, 10, 24, 1, 0, 0, 1, 0, 1]' : 0.111541}", "{'[0, 1, 2, 5, 0, 3, 0, 0, 6, 0, 10, 24, 1, 0, 0, 1, 0, 1]' : 0.111247}"]
returning from 'run': {'[0, 1, 2, 5, 0, 3, 0, 0, 6, 0, 10, 24, 1, 0, 0, 1, 0, 1]': ([0.129295, 0.128254, 0.128199, 0.126729, 0.112337, 0.111041, 0.111171, 0.111234, 0.111402, 0.111162, 0.111113, 0.111278, 0.111145, 0.111022, 0.111095, 0.111317, 0.111102, 0.111481, 0.111373, 0.111122, 0.111266, 0.111495, 0.111073, 0.110981, 0.111163, 0.111042, 0.111272, 0.111453, 0.111541, 0.111247], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 1, 2, 5, 0, 3, 0, 0, 6, 0, 10, 24, 1, 0, 0, 1, 0, 1]': ([0.129295, 0.128254, 0.128199, 0.126729, 0.112337, 0.111041, 0.111171, 0.111234, 0.111402, 0.111162, 0.111113, 0.111278, 0.111145, 0.111022, 0.111095, 0.111317, 0.111102, 0.111481, 0.111373, 0.111122, 0.111266, 0.111495, 0.111073, 0.110981, 0.111163, 0.111042, 0.111272, 0.111453, 0.111541, 0.111247], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	45
        Max loop nest depth: 	6
        Additions: 		3123
        Multiplications: 	1458
        Divisions: 		0
        Logical: 		0
        Reads: 			6082
        Writes: 		1043
        Comparisons:		45
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest29.exe __orio_perftest29.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest29.exe  
Program Test Output: 
{'[6, 4, 1, 6, 5, 0, 1, 0, 6, 25, 0, 24, 0, 0, 0, 1, 1, 0]' : 0.181868}
{'[6, 4, 1, 6, 5, 0, 1, 0, 6, 25, 0, 24, 0, 0, 0, 1, 1, 0]' : 0.181916}
{'[6, 4, 1, 6, 5, 0, 1, 0, 6, 25, 0, 24, 0, 0, 0, 1, 1, 0]' : 0.181892}
{'[6, 4, 1, 6, 5, 0, 1, 0, 6, 25, 0, 24, 0, 0, 0, 1, 1, 0]' : 0.18177}
{'[6, 4, 1, 6, 5, 0, 1, 0, 6, 25, 0, 24, 0, 0, 0, 1, 1, 0]' : 0.182388}
{'[6, 4, 1, 6, 5, 0, 1, 0, 6, 25, 0, 24, 0, 0, 0, 1, 1, 0]' : 0.182094}
{'[6, 4, 1, 6, 5, 0, 1, 0, 6, 25, 0, 24, 0, 0, 0, 1, 1, 0]' : 0.181859}
{'[6, 4, 1, 6, 5, 0, 1, 0, 6, 25, 0, 24, 0, 0, 0, 1, 1, 0]' : 0.181679}
{'[6, 4, 1, 6, 5, 0, 1, 0, 6, 25, 0, 24, 0, 0, 0, 1, 1, 0]' : 0.182032}
{'[6, 4, 1, 6, 5, 0, 1, 0, 6, 25, 0, 24, 0, 0, 0, 1, 1, 0]' : 0.182251}
{'[6, 4, 1, 6, 5, 0, 1, 0, 6, 25, 0, 24, 0, 0, 0, 1, 1, 0]' : 0.181855}
{'[6, 4, 1, 6, 5, 0, 1, 0, 6, 25, 0, 24, 0, 0, 0, 1, 1, 0]' : 0.182124}
{'[6, 4, 1, 6, 5, 0, 1, 0, 6, 25, 0, 24, 0, 0, 0, 1, 1, 0]' : 0.181722}
{'[6, 4, 1, 6, 5, 0, 1, 0, 6, 25, 0, 24, 0, 0, 0, 1, 1, 0]' : 0.182252}
{'[6, 4, 1, 6, 5, 0, 1, 0, 6, 25, 0, 24, 0, 0, 0, 1, 1, 0]' : 0.182033}
{'[6, 4, 1, 6, 5, 0, 1, 0, 6, 25, 0, 24, 0, 0, 0, 1, 1, 0]' : 0.181758}
{'[6, 4, 1, 6, 5, 0, 1, 0, 6, 25, 0, 24, 0, 0, 0, 1, 1, 0]' : 0.18163}
{'[6, 4, 1, 6, 5, 0, 1, 0, 6, 25, 0, 24, 0, 0, 0, 1, 1, 0]' : 0.182265}
{'[6, 4, 1, 6, 5, 0, 1, 0, 6, 25, 0, 24, 0, 0, 0, 1, 1, 0]' : 0.181846}
{'[6, 4, 1, 6, 5, 0, 1, 0, 6, 25, 0, 24, 0, 0, 0, 1, 1, 0]' : 0.181726}
{'[6, 4, 1, 6, 5, 0, 1, 0, 6, 25, 0, 24, 0, 0, 0, 1, 1, 0]' : 0.181827}
{'[6, 4, 1, 6, 5, 0, 1, 0, 6, 25, 0, 24, 0, 0, 0, 1, 1, 0]' : 0.181634}
{'[6, 4, 1, 6, 5, 0, 1, 0, 6, 25, 0, 24, 0, 0, 0, 1, 1, 0]' : 0.181849}
{'[6, 4, 1, 6, 5, 0, 1, 0, 6, 25, 0, 24, 0, 0, 0, 1, 1, 0]' : 0.182071}
{'[6, 4, 1, 6, 5, 0, 1, 0, 6, 25, 0, 24, 0, 0, 0, 1, 1, 0]' : 0.182364}
{'[6, 4, 1, 6, 5, 0, 1, 0, 6, 25, 0, 24, 0, 0, 0, 1, 1, 0]' : 0.186541}
{'[6, 4, 1, 6, 5, 0, 1, 0, 6, 25, 0, 24, 0, 0, 0, 1, 1, 0]' : 0.186565}
{'[6, 4, 1, 6, 5, 0, 1, 0, 6, 25, 0, 24, 0, 0, 0, 1, 1, 0]' : 0.18639}
{'[6, 4, 1, 6, 5, 0, 1, 0, 6, 25, 0, 24, 0, 0, 0, 1, 1, 0]' : 0.186606}
{'[6, 4, 1, 6, 5, 0, 1, 0, 6, 25, 0, 24, 0, 0, 0, 1, 1, 0]' : 0.188117}

out:
 ["{'[6, 4, 1, 6, 5, 0, 1, 0, 6, 25, 0, 24, 0, 0, 0, 1, 1, 0]' : 0.181868}", "{'[6, 4, 1, 6, 5, 0, 1, 0, 6, 25, 0, 24, 0, 0, 0, 1, 1, 0]' : 0.181916}", "{'[6, 4, 1, 6, 5, 0, 1, 0, 6, 25, 0, 24, 0, 0, 0, 1, 1, 0]' : 0.181892}", "{'[6, 4, 1, 6, 5, 0, 1, 0, 6, 25, 0, 24, 0, 0, 0, 1, 1, 0]' : 0.18177}", "{'[6, 4, 1, 6, 5, 0, 1, 0, 6, 25, 0, 24, 0, 0, 0, 1, 1, 0]' : 0.182388}", "{'[6, 4, 1, 6, 5, 0, 1, 0, 6, 25, 0, 24, 0, 0, 0, 1, 1, 0]' : 0.182094}", "{'[6, 4, 1, 6, 5, 0, 1, 0, 6, 25, 0, 24, 0, 0, 0, 1, 1, 0]' : 0.181859}", "{'[6, 4, 1, 6, 5, 0, 1, 0, 6, 25, 0, 24, 0, 0, 0, 1, 1, 0]' : 0.181679}", "{'[6, 4, 1, 6, 5, 0, 1, 0, 6, 25, 0, 24, 0, 0, 0, 1, 1, 0]' : 0.182032}", "{'[6, 4, 1, 6, 5, 0, 1, 0, 6, 25, 0, 24, 0, 0, 0, 1, 1, 0]' : 0.182251}", "{'[6, 4, 1, 6, 5, 0, 1, 0, 6, 25, 0, 24, 0, 0, 0, 1, 1, 0]' : 0.181855}", "{'[6, 4, 1, 6, 5, 0, 1, 0, 6, 25, 0, 24, 0, 0, 0, 1, 1, 0]' : 0.182124}", "{'[6, 4, 1, 6, 5, 0, 1, 0, 6, 25, 0, 24, 0, 0, 0, 1, 1, 0]' : 0.181722}", "{'[6, 4, 1, 6, 5, 0, 1, 0, 6, 25, 0, 24, 0, 0, 0, 1, 1, 0]' : 0.182252}", "{'[6, 4, 1, 6, 5, 0, 1, 0, 6, 25, 0, 24, 0, 0, 0, 1, 1, 0]' : 0.182033}", "{'[6, 4, 1, 6, 5, 0, 1, 0, 6, 25, 0, 24, 0, 0, 0, 1, 1, 0]' : 0.181758}", "{'[6, 4, 1, 6, 5, 0, 1, 0, 6, 25, 0, 24, 0, 0, 0, 1, 1, 0]' : 0.18163}", "{'[6, 4, 1, 6, 5, 0, 1, 0, 6, 25, 0, 24, 0, 0, 0, 1, 1, 0]' : 0.182265}", "{'[6, 4, 1, 6, 5, 0, 1, 0, 6, 25, 0, 24, 0, 0, 0, 1, 1, 0]' : 0.181846}", "{'[6, 4, 1, 6, 5, 0, 1, 0, 6, 25, 0, 24, 0, 0, 0, 1, 1, 0]' : 0.181726}", "{'[6, 4, 1, 6, 5, 0, 1, 0, 6, 25, 0, 24, 0, 0, 0, 1, 1, 0]' : 0.181827}", "{'[6, 4, 1, 6, 5, 0, 1, 0, 6, 25, 0, 24, 0, 0, 0, 1, 1, 0]' : 0.181634}", "{'[6, 4, 1, 6, 5, 0, 1, 0, 6, 25, 0, 24, 0, 0, 0, 1, 1, 0]' : 0.181849}", "{'[6, 4, 1, 6, 5, 0, 1, 0, 6, 25, 0, 24, 0, 0, 0, 1, 1, 0]' : 0.182071}", "{'[6, 4, 1, 6, 5, 0, 1, 0, 6, 25, 0, 24, 0, 0, 0, 1, 1, 0]' : 0.182364}", "{'[6, 4, 1, 6, 5, 0, 1, 0, 6, 25, 0, 24, 0, 0, 0, 1, 1, 0]' : 0.186541}", "{'[6, 4, 1, 6, 5, 0, 1, 0, 6, 25, 0, 24, 0, 0, 0, 1, 1, 0]' : 0.186565}", "{'[6, 4, 1, 6, 5, 0, 1, 0, 6, 25, 0, 24, 0, 0, 0, 1, 1, 0]' : 0.18639}", "{'[6, 4, 1, 6, 5, 0, 1, 0, 6, 25, 0, 24, 0, 0, 0, 1, 1, 0]' : 0.186606}", "{'[6, 4, 1, 6, 5, 0, 1, 0, 6, 25, 0, 24, 0, 0, 0, 1, 1, 0]' : 0.188117}"]
returning from 'run': {'[6, 4, 1, 6, 5, 0, 1, 0, 6, 25, 0, 24, 0, 0, 0, 1, 1, 0]': ([0.181868, 0.181916, 0.181892, 0.18177, 0.182388, 0.182094, 0.181859, 0.181679, 0.182032, 0.182251, 0.181855, 0.182124, 0.181722, 0.182252, 0.182033, 0.181758, 0.18163, 0.182265, 0.181846, 0.181726, 0.181827, 0.181634, 0.181849, 0.182071, 0.182364, 0.186541, 0.186565, 0.18639, 0.186606, 0.188117], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 4, 1, 6, 5, 0, 1, 0, 6, 25, 0, 24, 0, 0, 0, 1, 1, 0]': ([0.181868, 0.181916, 0.181892, 0.18177, 0.182388, 0.182094, 0.181859, 0.181679, 0.182032, 0.182251, 0.181855, 0.182124, 0.181722, 0.182252, 0.182033, 0.181758, 0.18163, 0.182265, 0.181846, 0.181726, 0.181827, 0.181634, 0.181849, 0.182071, 0.182364, 0.186541, 0.186565, 0.18639, 0.186606, 0.188117], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	40
        Max loop nest depth: 	6
        Additions: 		858
        Multiplications: 	240
        Divisions: 		0
        Logical: 		0
        Reads: 			1637
        Writes: 		270
        Comparisons:		40
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest30.exe __orio_perftest30.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest30.exe  
Program Test Output: 
{'[5, 3, 0, 4, 2, 0, 1, 0, 25, 5, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.127814}
{'[5, 3, 0, 4, 2, 0, 1, 0, 25, 5, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.128104}
{'[5, 3, 0, 4, 2, 0, 1, 0, 25, 5, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.119092}
{'[5, 3, 0, 4, 2, 0, 1, 0, 25, 5, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.115803}
{'[5, 3, 0, 4, 2, 0, 1, 0, 25, 5, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.1158}
{'[5, 3, 0, 4, 2, 0, 1, 0, 25, 5, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.11581}
{'[5, 3, 0, 4, 2, 0, 1, 0, 25, 5, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.115698}
{'[5, 3, 0, 4, 2, 0, 1, 0, 25, 5, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.11595}
{'[5, 3, 0, 4, 2, 0, 1, 0, 25, 5, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.115784}
{'[5, 3, 0, 4, 2, 0, 1, 0, 25, 5, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.115709}
{'[5, 3, 0, 4, 2, 0, 1, 0, 25, 5, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.115686}
{'[5, 3, 0, 4, 2, 0, 1, 0, 25, 5, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.115889}
{'[5, 3, 0, 4, 2, 0, 1, 0, 25, 5, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.115809}
{'[5, 3, 0, 4, 2, 0, 1, 0, 25, 5, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.115787}
{'[5, 3, 0, 4, 2, 0, 1, 0, 25, 5, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.115741}
{'[5, 3, 0, 4, 2, 0, 1, 0, 25, 5, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.115805}
{'[5, 3, 0, 4, 2, 0, 1, 0, 25, 5, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.11607}
{'[5, 3, 0, 4, 2, 0, 1, 0, 25, 5, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.11583}
{'[5, 3, 0, 4, 2, 0, 1, 0, 25, 5, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.115697}
{'[5, 3, 0, 4, 2, 0, 1, 0, 25, 5, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.115518}
{'[5, 3, 0, 4, 2, 0, 1, 0, 25, 5, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.114188}
{'[5, 3, 0, 4, 2, 0, 1, 0, 25, 5, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.115857}
{'[5, 3, 0, 4, 2, 0, 1, 0, 25, 5, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.115749}
{'[5, 3, 0, 4, 2, 0, 1, 0, 25, 5, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.115776}
{'[5, 3, 0, 4, 2, 0, 1, 0, 25, 5, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.115885}
{'[5, 3, 0, 4, 2, 0, 1, 0, 25, 5, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.115754}
{'[5, 3, 0, 4, 2, 0, 1, 0, 25, 5, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.11316}
{'[5, 3, 0, 4, 2, 0, 1, 0, 25, 5, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.112821}
{'[5, 3, 0, 4, 2, 0, 1, 0, 25, 5, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.112793}
{'[5, 3, 0, 4, 2, 0, 1, 0, 25, 5, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.114951}

out:
 ["{'[5, 3, 0, 4, 2, 0, 1, 0, 25, 5, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.127814}", "{'[5, 3, 0, 4, 2, 0, 1, 0, 25, 5, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.128104}", "{'[5, 3, 0, 4, 2, 0, 1, 0, 25, 5, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.119092}", "{'[5, 3, 0, 4, 2, 0, 1, 0, 25, 5, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.115803}", "{'[5, 3, 0, 4, 2, 0, 1, 0, 25, 5, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.1158}", "{'[5, 3, 0, 4, 2, 0, 1, 0, 25, 5, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.11581}", "{'[5, 3, 0, 4, 2, 0, 1, 0, 25, 5, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.115698}", "{'[5, 3, 0, 4, 2, 0, 1, 0, 25, 5, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.11595}", "{'[5, 3, 0, 4, 2, 0, 1, 0, 25, 5, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.115784}", "{'[5, 3, 0, 4, 2, 0, 1, 0, 25, 5, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.115709}", "{'[5, 3, 0, 4, 2, 0, 1, 0, 25, 5, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.115686}", "{'[5, 3, 0, 4, 2, 0, 1, 0, 25, 5, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.115889}", "{'[5, 3, 0, 4, 2, 0, 1, 0, 25, 5, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.115809}", "{'[5, 3, 0, 4, 2, 0, 1, 0, 25, 5, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.115787}", "{'[5, 3, 0, 4, 2, 0, 1, 0, 25, 5, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.115741}", "{'[5, 3, 0, 4, 2, 0, 1, 0, 25, 5, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.115805}", "{'[5, 3, 0, 4, 2, 0, 1, 0, 25, 5, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.11607}", "{'[5, 3, 0, 4, 2, 0, 1, 0, 25, 5, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.11583}", "{'[5, 3, 0, 4, 2, 0, 1, 0, 25, 5, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.115697}", "{'[5, 3, 0, 4, 2, 0, 1, 0, 25, 5, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.115518}", "{'[5, 3, 0, 4, 2, 0, 1, 0, 25, 5, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.114188}", "{'[5, 3, 0, 4, 2, 0, 1, 0, 25, 5, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.115857}", "{'[5, 3, 0, 4, 2, 0, 1, 0, 25, 5, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.115749}", "{'[5, 3, 0, 4, 2, 0, 1, 0, 25, 5, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.115776}", "{'[5, 3, 0, 4, 2, 0, 1, 0, 25, 5, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.115885}", "{'[5, 3, 0, 4, 2, 0, 1, 0, 25, 5, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.115754}", "{'[5, 3, 0, 4, 2, 0, 1, 0, 25, 5, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.11316}", "{'[5, 3, 0, 4, 2, 0, 1, 0, 25, 5, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.112821}", "{'[5, 3, 0, 4, 2, 0, 1, 0, 25, 5, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.112793}", "{'[5, 3, 0, 4, 2, 0, 1, 0, 25, 5, 0, 5, 1, 0, 0, 0, 0, 1]' : 0.114951}"]
returning from 'run': {'[5, 3, 0, 4, 2, 0, 1, 0, 25, 5, 0, 5, 1, 0, 0, 0, 0, 1]': ([0.127814, 0.128104, 0.119092, 0.115803, 0.1158, 0.11581, 0.115698, 0.11595, 0.115784, 0.115709, 0.115686, 0.115889, 0.115809, 0.115787, 0.115741, 0.115805, 0.11607, 0.11583, 0.115697, 0.115518, 0.114188, 0.115857, 0.115749, 0.115776, 0.115885, 0.115754, 0.11316, 0.112821, 0.112793, 0.114951], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 3, 0, 4, 2, 0, 1, 0, 25, 5, 0, 5, 1, 0, 0, 0, 0, 1]': ([0.127814, 0.128104, 0.119092, 0.115803, 0.1158, 0.11581, 0.115698, 0.11595, 0.115784, 0.115709, 0.115686, 0.115889, 0.115809, 0.115787, 0.115741, 0.115805, 0.11607, 0.11583, 0.115697, 0.115518, 0.114188, 0.115857, 0.115749, 0.115776, 0.115885, 0.115754, 0.11316, 0.112821, 0.112793, 0.114951], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	6
        Additions: 		79
        Multiplications: 	20
        Divisions: 		0
        Logical: 		0
        Reads: 			197
        Writes: 		55
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest31.exe __orio_perftest31.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest31.exe  
Program Test Output: 
{'[1, 3, 0, 4, 3, 6, 0, 0, 13, 0, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.203709}
{'[1, 3, 0, 4, 3, 6, 0, 0, 13, 0, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.203504}
{'[1, 3, 0, 4, 3, 6, 0, 0, 13, 0, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.203533}
{'[1, 3, 0, 4, 3, 6, 0, 0, 13, 0, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.192299}
{'[1, 3, 0, 4, 3, 6, 0, 0, 13, 0, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.17101}
{'[1, 3, 0, 4, 3, 6, 0, 0, 13, 0, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.170739}
{'[1, 3, 0, 4, 3, 6, 0, 0, 13, 0, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.17082}
{'[1, 3, 0, 4, 3, 6, 0, 0, 13, 0, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.17064}
{'[1, 3, 0, 4, 3, 6, 0, 0, 13, 0, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.170976}
{'[1, 3, 0, 4, 3, 6, 0, 0, 13, 0, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.170753}
{'[1, 3, 0, 4, 3, 6, 0, 0, 13, 0, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.171055}
{'[1, 3, 0, 4, 3, 6, 0, 0, 13, 0, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.170867}
{'[1, 3, 0, 4, 3, 6, 0, 0, 13, 0, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.170828}
{'[1, 3, 0, 4, 3, 6, 0, 0, 13, 0, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.171103}
{'[1, 3, 0, 4, 3, 6, 0, 0, 13, 0, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.17075}
{'[1, 3, 0, 4, 3, 6, 0, 0, 13, 0, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.170804}
{'[1, 3, 0, 4, 3, 6, 0, 0, 13, 0, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.171468}
{'[1, 3, 0, 4, 3, 6, 0, 0, 13, 0, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.171374}
{'[1, 3, 0, 4, 3, 6, 0, 0, 13, 0, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.171156}
{'[1, 3, 0, 4, 3, 6, 0, 0, 13, 0, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.170852}
{'[1, 3, 0, 4, 3, 6, 0, 0, 13, 0, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.170787}
{'[1, 3, 0, 4, 3, 6, 0, 0, 13, 0, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.17076}
{'[1, 3, 0, 4, 3, 6, 0, 0, 13, 0, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.170939}
{'[1, 3, 0, 4, 3, 6, 0, 0, 13, 0, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.171391}
{'[1, 3, 0, 4, 3, 6, 0, 0, 13, 0, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.170933}
{'[1, 3, 0, 4, 3, 6, 0, 0, 13, 0, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.170767}
{'[1, 3, 0, 4, 3, 6, 0, 0, 13, 0, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.171145}
{'[1, 3, 0, 4, 3, 6, 0, 0, 13, 0, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.170777}
{'[1, 3, 0, 4, 3, 6, 0, 0, 13, 0, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.170995}
{'[1, 3, 0, 4, 3, 6, 0, 0, 13, 0, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.17115}

out:
 ["{'[1, 3, 0, 4, 3, 6, 0, 0, 13, 0, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.203709}", "{'[1, 3, 0, 4, 3, 6, 0, 0, 13, 0, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.203504}", "{'[1, 3, 0, 4, 3, 6, 0, 0, 13, 0, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.203533}", "{'[1, 3, 0, 4, 3, 6, 0, 0, 13, 0, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.192299}", "{'[1, 3, 0, 4, 3, 6, 0, 0, 13, 0, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.17101}", "{'[1, 3, 0, 4, 3, 6, 0, 0, 13, 0, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.170739}", "{'[1, 3, 0, 4, 3, 6, 0, 0, 13, 0, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.17082}", "{'[1, 3, 0, 4, 3, 6, 0, 0, 13, 0, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.17064}", "{'[1, 3, 0, 4, 3, 6, 0, 0, 13, 0, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.170976}", "{'[1, 3, 0, 4, 3, 6, 0, 0, 13, 0, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.170753}", "{'[1, 3, 0, 4, 3, 6, 0, 0, 13, 0, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.171055}", "{'[1, 3, 0, 4, 3, 6, 0, 0, 13, 0, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.170867}", "{'[1, 3, 0, 4, 3, 6, 0, 0, 13, 0, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.170828}", "{'[1, 3, 0, 4, 3, 6, 0, 0, 13, 0, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.171103}", "{'[1, 3, 0, 4, 3, 6, 0, 0, 13, 0, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.17075}", "{'[1, 3, 0, 4, 3, 6, 0, 0, 13, 0, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.170804}", "{'[1, 3, 0, 4, 3, 6, 0, 0, 13, 0, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.171468}", "{'[1, 3, 0, 4, 3, 6, 0, 0, 13, 0, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.171374}", "{'[1, 3, 0, 4, 3, 6, 0, 0, 13, 0, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.171156}", "{'[1, 3, 0, 4, 3, 6, 0, 0, 13, 0, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.170852}", "{'[1, 3, 0, 4, 3, 6, 0, 0, 13, 0, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.170787}", "{'[1, 3, 0, 4, 3, 6, 0, 0, 13, 0, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.17076}", "{'[1, 3, 0, 4, 3, 6, 0, 0, 13, 0, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.170939}", "{'[1, 3, 0, 4, 3, 6, 0, 0, 13, 0, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.171391}", "{'[1, 3, 0, 4, 3, 6, 0, 0, 13, 0, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.170933}", "{'[1, 3, 0, 4, 3, 6, 0, 0, 13, 0, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.170767}", "{'[1, 3, 0, 4, 3, 6, 0, 0, 13, 0, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.171145}", "{'[1, 3, 0, 4, 3, 6, 0, 0, 13, 0, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.170777}", "{'[1, 3, 0, 4, 3, 6, 0, 0, 13, 0, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.170995}", "{'[1, 3, 0, 4, 3, 6, 0, 0, 13, 0, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.17115}"]
returning from 'run': {'[1, 3, 0, 4, 3, 6, 0, 0, 13, 0, 0, 0, 0, 1, 0, 1, 1, 0]': ([0.203709, 0.203504, 0.203533, 0.192299, 0.17101, 0.170739, 0.17082, 0.17064, 0.170976, 0.170753, 0.171055, 0.170867, 0.170828, 0.171103, 0.17075, 0.170804, 0.171468, 0.171374, 0.171156, 0.170852, 0.170787, 0.17076, 0.170939, 0.171391, 0.170933, 0.170767, 0.171145, 0.170777, 0.170995, 0.17115], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 3, 0, 4, 3, 6, 0, 0, 13, 0, 0, 0, 0, 1, 0, 1, 1, 0]': ([0.203709, 0.203504, 0.203533, 0.192299, 0.17101, 0.170739, 0.17082, 0.17064, 0.170976, 0.170753, 0.171055, 0.170867, 0.170828, 0.171103, 0.17075, 0.170804, 0.171468, 0.171374, 0.171156, 0.170852, 0.170787, 0.17076, 0.170939, 0.171391, 0.170933, 0.170767, 0.171145, 0.170777, 0.170995, 0.17115], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	48
        Max loop nest depth: 	6
        Additions: 		5694
        Multiplications: 	1400
        Divisions: 		0
        Logical: 		0
        Reads: 			8444
        Writes: 		860
        Comparisons:		48
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest32.exe __orio_perftest32.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest32.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest32.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest32.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest32.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		206
        Multiplications: 	76
        Divisions: 		0
        Logical: 		0
        Reads: 			505
        Writes: 		79
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest33.exe __orio_perftest33.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest33.exe  
Program Test Output: 
{'[6, 6, 0, 6, 4, 2, 0, 1, 10, 0, 3, 0, 0, 2, 0, 0, 0, 0]' : 0.252034}
{'[6, 6, 0, 6, 4, 2, 0, 1, 10, 0, 3, 0, 0, 2, 0, 0, 0, 0]' : 0.251852}
{'[6, 6, 0, 6, 4, 2, 0, 1, 10, 0, 3, 0, 0, 2, 0, 0, 0, 0]' : 0.236297}
{'[6, 6, 0, 6, 4, 2, 0, 1, 10, 0, 3, 0, 0, 2, 0, 0, 0, 0]' : 0.210466}
{'[6, 6, 0, 6, 4, 2, 0, 1, 10, 0, 3, 0, 0, 2, 0, 0, 0, 0]' : 0.210562}
{'[6, 6, 0, 6, 4, 2, 0, 1, 10, 0, 3, 0, 0, 2, 0, 0, 0, 0]' : 0.210611}
{'[6, 6, 0, 6, 4, 2, 0, 1, 10, 0, 3, 0, 0, 2, 0, 0, 0, 0]' : 0.210298}
{'[6, 6, 0, 6, 4, 2, 0, 1, 10, 0, 3, 0, 0, 2, 0, 0, 0, 0]' : 0.210508}
{'[6, 6, 0, 6, 4, 2, 0, 1, 10, 0, 3, 0, 0, 2, 0, 0, 0, 0]' : 0.210253}
{'[6, 6, 0, 6, 4, 2, 0, 1, 10, 0, 3, 0, 0, 2, 0, 0, 0, 0]' : 0.210782}
{'[6, 6, 0, 6, 4, 2, 0, 1, 10, 0, 3, 0, 0, 2, 0, 0, 0, 0]' : 0.210563}
{'[6, 6, 0, 6, 4, 2, 0, 1, 10, 0, 3, 0, 0, 2, 0, 0, 0, 0]' : 0.21035}
{'[6, 6, 0, 6, 4, 2, 0, 1, 10, 0, 3, 0, 0, 2, 0, 0, 0, 0]' : 0.210466}
{'[6, 6, 0, 6, 4, 2, 0, 1, 10, 0, 3, 0, 0, 2, 0, 0, 0, 0]' : 0.210379}
{'[6, 6, 0, 6, 4, 2, 0, 1, 10, 0, 3, 0, 0, 2, 0, 0, 0, 0]' : 0.211141}
{'[6, 6, 0, 6, 4, 2, 0, 1, 10, 0, 3, 0, 0, 2, 0, 0, 0, 0]' : 0.210503}
{'[6, 6, 0, 6, 4, 2, 0, 1, 10, 0, 3, 0, 0, 2, 0, 0, 0, 0]' : 0.210611}
{'[6, 6, 0, 6, 4, 2, 0, 1, 10, 0, 3, 0, 0, 2, 0, 0, 0, 0]' : 0.21069}
{'[6, 6, 0, 6, 4, 2, 0, 1, 10, 0, 3, 0, 0, 2, 0, 0, 0, 0]' : 0.210357}
{'[6, 6, 0, 6, 4, 2, 0, 1, 10, 0, 3, 0, 0, 2, 0, 0, 0, 0]' : 0.21079}
{'[6, 6, 0, 6, 4, 2, 0, 1, 10, 0, 3, 0, 0, 2, 0, 0, 0, 0]' : 0.210691}
{'[6, 6, 0, 6, 4, 2, 0, 1, 10, 0, 3, 0, 0, 2, 0, 0, 0, 0]' : 0.210567}
{'[6, 6, 0, 6, 4, 2, 0, 1, 10, 0, 3, 0, 0, 2, 0, 0, 0, 0]' : 0.210378}
{'[6, 6, 0, 6, 4, 2, 0, 1, 10, 0, 3, 0, 0, 2, 0, 0, 0, 0]' : 0.210385}
{'[6, 6, 0, 6, 4, 2, 0, 1, 10, 0, 3, 0, 0, 2, 0, 0, 0, 0]' : 0.210787}
{'[6, 6, 0, 6, 4, 2, 0, 1, 10, 0, 3, 0, 0, 2, 0, 0, 0, 0]' : 0.210563}
{'[6, 6, 0, 6, 4, 2, 0, 1, 10, 0, 3, 0, 0, 2, 0, 0, 0, 0]' : 0.210479}
{'[6, 6, 0, 6, 4, 2, 0, 1, 10, 0, 3, 0, 0, 2, 0, 0, 0, 0]' : 0.210499}
{'[6, 6, 0, 6, 4, 2, 0, 1, 10, 0, 3, 0, 0, 2, 0, 0, 0, 0]' : 0.210366}
{'[6, 6, 0, 6, 4, 2, 0, 1, 10, 0, 3, 0, 0, 2, 0, 0, 0, 0]' : 0.210578}

out:
 ["{'[6, 6, 0, 6, 4, 2, 0, 1, 10, 0, 3, 0, 0, 2, 0, 0, 0, 0]' : 0.252034}", "{'[6, 6, 0, 6, 4, 2, 0, 1, 10, 0, 3, 0, 0, 2, 0, 0, 0, 0]' : 0.251852}", "{'[6, 6, 0, 6, 4, 2, 0, 1, 10, 0, 3, 0, 0, 2, 0, 0, 0, 0]' : 0.236297}", "{'[6, 6, 0, 6, 4, 2, 0, 1, 10, 0, 3, 0, 0, 2, 0, 0, 0, 0]' : 0.210466}", "{'[6, 6, 0, 6, 4, 2, 0, 1, 10, 0, 3, 0, 0, 2, 0, 0, 0, 0]' : 0.210562}", "{'[6, 6, 0, 6, 4, 2, 0, 1, 10, 0, 3, 0, 0, 2, 0, 0, 0, 0]' : 0.210611}", "{'[6, 6, 0, 6, 4, 2, 0, 1, 10, 0, 3, 0, 0, 2, 0, 0, 0, 0]' : 0.210298}", "{'[6, 6, 0, 6, 4, 2, 0, 1, 10, 0, 3, 0, 0, 2, 0, 0, 0, 0]' : 0.210508}", "{'[6, 6, 0, 6, 4, 2, 0, 1, 10, 0, 3, 0, 0, 2, 0, 0, 0, 0]' : 0.210253}", "{'[6, 6, 0, 6, 4, 2, 0, 1, 10, 0, 3, 0, 0, 2, 0, 0, 0, 0]' : 0.210782}", "{'[6, 6, 0, 6, 4, 2, 0, 1, 10, 0, 3, 0, 0, 2, 0, 0, 0, 0]' : 0.210563}", "{'[6, 6, 0, 6, 4, 2, 0, 1, 10, 0, 3, 0, 0, 2, 0, 0, 0, 0]' : 0.21035}", "{'[6, 6, 0, 6, 4, 2, 0, 1, 10, 0, 3, 0, 0, 2, 0, 0, 0, 0]' : 0.210466}", "{'[6, 6, 0, 6, 4, 2, 0, 1, 10, 0, 3, 0, 0, 2, 0, 0, 0, 0]' : 0.210379}", "{'[6, 6, 0, 6, 4, 2, 0, 1, 10, 0, 3, 0, 0, 2, 0, 0, 0, 0]' : 0.211141}", "{'[6, 6, 0, 6, 4, 2, 0, 1, 10, 0, 3, 0, 0, 2, 0, 0, 0, 0]' : 0.210503}", "{'[6, 6, 0, 6, 4, 2, 0, 1, 10, 0, 3, 0, 0, 2, 0, 0, 0, 0]' : 0.210611}", "{'[6, 6, 0, 6, 4, 2, 0, 1, 10, 0, 3, 0, 0, 2, 0, 0, 0, 0]' : 0.21069}", "{'[6, 6, 0, 6, 4, 2, 0, 1, 10, 0, 3, 0, 0, 2, 0, 0, 0, 0]' : 0.210357}", "{'[6, 6, 0, 6, 4, 2, 0, 1, 10, 0, 3, 0, 0, 2, 0, 0, 0, 0]' : 0.21079}", "{'[6, 6, 0, 6, 4, 2, 0, 1, 10, 0, 3, 0, 0, 2, 0, 0, 0, 0]' : 0.210691}", "{'[6, 6, 0, 6, 4, 2, 0, 1, 10, 0, 3, 0, 0, 2, 0, 0, 0, 0]' : 0.210567}", "{'[6, 6, 0, 6, 4, 2, 0, 1, 10, 0, 3, 0, 0, 2, 0, 0, 0, 0]' : 0.210378}", "{'[6, 6, 0, 6, 4, 2, 0, 1, 10, 0, 3, 0, 0, 2, 0, 0, 0, 0]' : 0.210385}", "{'[6, 6, 0, 6, 4, 2, 0, 1, 10, 0, 3, 0, 0, 2, 0, 0, 0, 0]' : 0.210787}", "{'[6, 6, 0, 6, 4, 2, 0, 1, 10, 0, 3, 0, 0, 2, 0, 0, 0, 0]' : 0.210563}", "{'[6, 6, 0, 6, 4, 2, 0, 1, 10, 0, 3, 0, 0, 2, 0, 0, 0, 0]' : 0.210479}", "{'[6, 6, 0, 6, 4, 2, 0, 1, 10, 0, 3, 0, 0, 2, 0, 0, 0, 0]' : 0.210499}", "{'[6, 6, 0, 6, 4, 2, 0, 1, 10, 0, 3, 0, 0, 2, 0, 0, 0, 0]' : 0.210366}", "{'[6, 6, 0, 6, 4, 2, 0, 1, 10, 0, 3, 0, 0, 2, 0, 0, 0, 0]' : 0.210578}"]
returning from 'run': {'[6, 6, 0, 6, 4, 2, 0, 1, 10, 0, 3, 0, 0, 2, 0, 0, 0, 0]': ([0.252034, 0.251852, 0.236297, 0.210466, 0.210562, 0.210611, 0.210298, 0.210508, 0.210253, 0.210782, 0.210563, 0.21035, 0.210466, 0.210379, 0.211141, 0.210503, 0.210611, 0.21069, 0.210357, 0.21079, 0.210691, 0.210567, 0.210378, 0.210385, 0.210787, 0.210563, 0.210479, 0.210499, 0.210366, 0.210578], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 0, 6, 4, 2, 0, 1, 10, 0, 3, 0, 0, 2, 0, 0, 0, 0]': ([0.252034, 0.251852, 0.236297, 0.210466, 0.210562, 0.210611, 0.210298, 0.210508, 0.210253, 0.210782, 0.210563, 0.21035, 0.210466, 0.210379, 0.211141, 0.210503, 0.210611, 0.21069, 0.210357, 0.21079, 0.210691, 0.210567, 0.210378, 0.210385, 0.210787, 0.210563, 0.210479, 0.210499, 0.210366, 0.210578], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	158
        Max loop nest depth: 	5
        Additions: 		6377
        Multiplications: 	1400
        Divisions: 		0
        Logical: 		0
        Reads: 			9894
        Writes: 		1244
        Comparisons:		158
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest34.exe __orio_perftest34.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest34.exe  
Program Test Output: 
{'[6, 6, 3, 0, 0, 4, 1, 1, 27, 25, 10, 0, 1, 0, 1, 0, 0, 1]' : 0.130804}
{'[6, 6, 3, 0, 0, 4, 1, 1, 27, 25, 10, 0, 1, 0, 1, 0, 0, 1]' : 0.129157}
{'[6, 6, 3, 0, 0, 4, 1, 1, 27, 25, 10, 0, 1, 0, 1, 0, 0, 1]' : 0.128872}
{'[6, 6, 3, 0, 0, 4, 1, 1, 27, 25, 10, 0, 1, 0, 1, 0, 0, 1]' : 0.128995}
{'[6, 6, 3, 0, 0, 4, 1, 1, 27, 25, 10, 0, 1, 0, 1, 0, 0, 1]' : 0.112519}
{'[6, 6, 3, 0, 0, 4, 1, 1, 27, 25, 10, 0, 1, 0, 1, 0, 0, 1]' : 0.109097}
{'[6, 6, 3, 0, 0, 4, 1, 1, 27, 25, 10, 0, 1, 0, 1, 0, 0, 1]' : 0.109136}
{'[6, 6, 3, 0, 0, 4, 1, 1, 27, 25, 10, 0, 1, 0, 1, 0, 0, 1]' : 0.109033}
{'[6, 6, 3, 0, 0, 4, 1, 1, 27, 25, 10, 0, 1, 0, 1, 0, 0, 1]' : 0.109003}
{'[6, 6, 3, 0, 0, 4, 1, 1, 27, 25, 10, 0, 1, 0, 1, 0, 0, 1]' : 0.108997}
{'[6, 6, 3, 0, 0, 4, 1, 1, 27, 25, 10, 0, 1, 0, 1, 0, 0, 1]' : 0.109083}
{'[6, 6, 3, 0, 0, 4, 1, 1, 27, 25, 10, 0, 1, 0, 1, 0, 0, 1]' : 0.109299}
{'[6, 6, 3, 0, 0, 4, 1, 1, 27, 25, 10, 0, 1, 0, 1, 0, 0, 1]' : 0.109532}
{'[6, 6, 3, 0, 0, 4, 1, 1, 27, 25, 10, 0, 1, 0, 1, 0, 0, 1]' : 0.109029}
{'[6, 6, 3, 0, 0, 4, 1, 1, 27, 25, 10, 0, 1, 0, 1, 0, 0, 1]' : 0.108949}
{'[6, 6, 3, 0, 0, 4, 1, 1, 27, 25, 10, 0, 1, 0, 1, 0, 0, 1]' : 0.10903}
{'[6, 6, 3, 0, 0, 4, 1, 1, 27, 25, 10, 0, 1, 0, 1, 0, 0, 1]' : 0.109253}
{'[6, 6, 3, 0, 0, 4, 1, 1, 27, 25, 10, 0, 1, 0, 1, 0, 0, 1]' : 0.109005}
{'[6, 6, 3, 0, 0, 4, 1, 1, 27, 25, 10, 0, 1, 0, 1, 0, 0, 1]' : 0.10913}
{'[6, 6, 3, 0, 0, 4, 1, 1, 27, 25, 10, 0, 1, 0, 1, 0, 0, 1]' : 0.109094}
{'[6, 6, 3, 0, 0, 4, 1, 1, 27, 25, 10, 0, 1, 0, 1, 0, 0, 1]' : 0.109342}
{'[6, 6, 3, 0, 0, 4, 1, 1, 27, 25, 10, 0, 1, 0, 1, 0, 0, 1]' : 0.109339}
{'[6, 6, 3, 0, 0, 4, 1, 1, 27, 25, 10, 0, 1, 0, 1, 0, 0, 1]' : 0.109194}
{'[6, 6, 3, 0, 0, 4, 1, 1, 27, 25, 10, 0, 1, 0, 1, 0, 0, 1]' : 0.109041}
{'[6, 6, 3, 0, 0, 4, 1, 1, 27, 25, 10, 0, 1, 0, 1, 0, 0, 1]' : 0.10905}
{'[6, 6, 3, 0, 0, 4, 1, 1, 27, 25, 10, 0, 1, 0, 1, 0, 0, 1]' : 0.109021}
{'[6, 6, 3, 0, 0, 4, 1, 1, 27, 25, 10, 0, 1, 0, 1, 0, 0, 1]' : 0.108974}
{'[6, 6, 3, 0, 0, 4, 1, 1, 27, 25, 10, 0, 1, 0, 1, 0, 0, 1]' : 0.109189}
{'[6, 6, 3, 0, 0, 4, 1, 1, 27, 25, 10, 0, 1, 0, 1, 0, 0, 1]' : 0.10906}
{'[6, 6, 3, 0, 0, 4, 1, 1, 27, 25, 10, 0, 1, 0, 1, 0, 0, 1]' : 0.109355}

out:
 ["{'[6, 6, 3, 0, 0, 4, 1, 1, 27, 25, 10, 0, 1, 0, 1, 0, 0, 1]' : 0.130804}", "{'[6, 6, 3, 0, 0, 4, 1, 1, 27, 25, 10, 0, 1, 0, 1, 0, 0, 1]' : 0.129157}", "{'[6, 6, 3, 0, 0, 4, 1, 1, 27, 25, 10, 0, 1, 0, 1, 0, 0, 1]' : 0.128872}", "{'[6, 6, 3, 0, 0, 4, 1, 1, 27, 25, 10, 0, 1, 0, 1, 0, 0, 1]' : 0.128995}", "{'[6, 6, 3, 0, 0, 4, 1, 1, 27, 25, 10, 0, 1, 0, 1, 0, 0, 1]' : 0.112519}", "{'[6, 6, 3, 0, 0, 4, 1, 1, 27, 25, 10, 0, 1, 0, 1, 0, 0, 1]' : 0.109097}", "{'[6, 6, 3, 0, 0, 4, 1, 1, 27, 25, 10, 0, 1, 0, 1, 0, 0, 1]' : 0.109136}", "{'[6, 6, 3, 0, 0, 4, 1, 1, 27, 25, 10, 0, 1, 0, 1, 0, 0, 1]' : 0.109033}", "{'[6, 6, 3, 0, 0, 4, 1, 1, 27, 25, 10, 0, 1, 0, 1, 0, 0, 1]' : 0.109003}", "{'[6, 6, 3, 0, 0, 4, 1, 1, 27, 25, 10, 0, 1, 0, 1, 0, 0, 1]' : 0.108997}", "{'[6, 6, 3, 0, 0, 4, 1, 1, 27, 25, 10, 0, 1, 0, 1, 0, 0, 1]' : 0.109083}", "{'[6, 6, 3, 0, 0, 4, 1, 1, 27, 25, 10, 0, 1, 0, 1, 0, 0, 1]' : 0.109299}", "{'[6, 6, 3, 0, 0, 4, 1, 1, 27, 25, 10, 0, 1, 0, 1, 0, 0, 1]' : 0.109532}", "{'[6, 6, 3, 0, 0, 4, 1, 1, 27, 25, 10, 0, 1, 0, 1, 0, 0, 1]' : 0.109029}", "{'[6, 6, 3, 0, 0, 4, 1, 1, 27, 25, 10, 0, 1, 0, 1, 0, 0, 1]' : 0.108949}", "{'[6, 6, 3, 0, 0, 4, 1, 1, 27, 25, 10, 0, 1, 0, 1, 0, 0, 1]' : 0.10903}", "{'[6, 6, 3, 0, 0, 4, 1, 1, 27, 25, 10, 0, 1, 0, 1, 0, 0, 1]' : 0.109253}", "{'[6, 6, 3, 0, 0, 4, 1, 1, 27, 25, 10, 0, 1, 0, 1, 0, 0, 1]' : 0.109005}", "{'[6, 6, 3, 0, 0, 4, 1, 1, 27, 25, 10, 0, 1, 0, 1, 0, 0, 1]' : 0.10913}", "{'[6, 6, 3, 0, 0, 4, 1, 1, 27, 25, 10, 0, 1, 0, 1, 0, 0, 1]' : 0.109094}", "{'[6, 6, 3, 0, 0, 4, 1, 1, 27, 25, 10, 0, 1, 0, 1, 0, 0, 1]' : 0.109342}", "{'[6, 6, 3, 0, 0, 4, 1, 1, 27, 25, 10, 0, 1, 0, 1, 0, 0, 1]' : 0.109339}", "{'[6, 6, 3, 0, 0, 4, 1, 1, 27, 25, 10, 0, 1, 0, 1, 0, 0, 1]' : 0.109194}", "{'[6, 6, 3, 0, 0, 4, 1, 1, 27, 25, 10, 0, 1, 0, 1, 0, 0, 1]' : 0.109041}", "{'[6, 6, 3, 0, 0, 4, 1, 1, 27, 25, 10, 0, 1, 0, 1, 0, 0, 1]' : 0.10905}", "{'[6, 6, 3, 0, 0, 4, 1, 1, 27, 25, 10, 0, 1, 0, 1, 0, 0, 1]' : 0.109021}", "{'[6, 6, 3, 0, 0, 4, 1, 1, 27, 25, 10, 0, 1, 0, 1, 0, 0, 1]' : 0.108974}", "{'[6, 6, 3, 0, 0, 4, 1, 1, 27, 25, 10, 0, 1, 0, 1, 0, 0, 1]' : 0.109189}", "{'[6, 6, 3, 0, 0, 4, 1, 1, 27, 25, 10, 0, 1, 0, 1, 0, 0, 1]' : 0.10906}", "{'[6, 6, 3, 0, 0, 4, 1, 1, 27, 25, 10, 0, 1, 0, 1, 0, 0, 1]' : 0.109355}"]
returning from 'run': {'[6, 6, 3, 0, 0, 4, 1, 1, 27, 25, 10, 0, 1, 0, 1, 0, 0, 1]': ([0.130804, 0.129157, 0.128872, 0.128995, 0.112519, 0.109097, 0.109136, 0.109033, 0.109003, 0.108997, 0.109083, 0.109299, 0.109532, 0.109029, 0.108949, 0.10903, 0.109253, 0.109005, 0.10913, 0.109094, 0.109342, 0.109339, 0.109194, 0.109041, 0.10905, 0.109021, 0.108974, 0.109189, 0.10906, 0.109355], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 3, 0, 0, 4, 1, 1, 27, 25, 10, 0, 1, 0, 1, 0, 0, 1]': ([0.130804, 0.129157, 0.128872, 0.128995, 0.112519, 0.109097, 0.109136, 0.109033, 0.109003, 0.108997, 0.109083, 0.109299, 0.109532, 0.109029, 0.108949, 0.10903, 0.109253, 0.109005, 0.10913, 0.109094, 0.109342, 0.109339, 0.109194, 0.109041, 0.10905, 0.109021, 0.108974, 0.109189, 0.10906, 0.109355], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	80
        Max loop nest depth: 	6
        Additions: 		1666
        Multiplications: 	648
        Divisions: 		0
        Logical: 		0
        Reads: 			3580
        Writes: 		708
        Comparisons:		80
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest35.exe __orio_perftest35.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest35.exe  
Program Test Output: 
{'[4, 3, 6, 6, 2, 4, 0, 1, 7, 26, 0, 11, 1, 0, 1, 1, 0, 1]' : 0.112366}
{'[4, 3, 6, 6, 2, 4, 0, 1, 7, 26, 0, 11, 1, 0, 1, 1, 0, 1]' : 0.112373}
{'[4, 3, 6, 6, 2, 4, 0, 1, 7, 26, 0, 11, 1, 0, 1, 1, 0, 1]' : 0.112213}
{'[4, 3, 6, 6, 2, 4, 0, 1, 7, 26, 0, 11, 1, 0, 1, 1, 0, 1]' : 0.112362}
{'[4, 3, 6, 6, 2, 4, 0, 1, 7, 26, 0, 11, 1, 0, 1, 1, 0, 1]' : 0.106892}
{'[4, 3, 6, 6, 2, 4, 0, 1, 7, 26, 0, 11, 1, 0, 1, 1, 0, 1]' : 0.098871}
{'[4, 3, 6, 6, 2, 4, 0, 1, 7, 26, 0, 11, 1, 0, 1, 1, 0, 1]' : 0.0987649}
{'[4, 3, 6, 6, 2, 4, 0, 1, 7, 26, 0, 11, 1, 0, 1, 1, 0, 1]' : 0.0988331}
{'[4, 3, 6, 6, 2, 4, 0, 1, 7, 26, 0, 11, 1, 0, 1, 1, 0, 1]' : 0.099052}
{'[4, 3, 6, 6, 2, 4, 0, 1, 7, 26, 0, 11, 1, 0, 1, 1, 0, 1]' : 0.099184}
{'[4, 3, 6, 6, 2, 4, 0, 1, 7, 26, 0, 11, 1, 0, 1, 1, 0, 1]' : 0.0991001}
{'[4, 3, 6, 6, 2, 4, 0, 1, 7, 26, 0, 11, 1, 0, 1, 1, 0, 1]' : 0.098815}
{'[4, 3, 6, 6, 2, 4, 0, 1, 7, 26, 0, 11, 1, 0, 1, 1, 0, 1]' : 0.0990419}
{'[4, 3, 6, 6, 2, 4, 0, 1, 7, 26, 0, 11, 1, 0, 1, 1, 0, 1]' : 0.0988109}
{'[4, 3, 6, 6, 2, 4, 0, 1, 7, 26, 0, 11, 1, 0, 1, 1, 0, 1]' : 0.0987871}
{'[4, 3, 6, 6, 2, 4, 0, 1, 7, 26, 0, 11, 1, 0, 1, 1, 0, 1]' : 0.0989239}
{'[4, 3, 6, 6, 2, 4, 0, 1, 7, 26, 0, 11, 1, 0, 1, 1, 0, 1]' : 0.0988629}
{'[4, 3, 6, 6, 2, 4, 0, 1, 7, 26, 0, 11, 1, 0, 1, 1, 0, 1]' : 0.0990729}
{'[4, 3, 6, 6, 2, 4, 0, 1, 7, 26, 0, 11, 1, 0, 1, 1, 0, 1]' : 0.0989029}
{'[4, 3, 6, 6, 2, 4, 0, 1, 7, 26, 0, 11, 1, 0, 1, 1, 0, 1]' : 0.0988111}
{'[4, 3, 6, 6, 2, 4, 0, 1, 7, 26, 0, 11, 1, 0, 1, 1, 0, 1]' : 0.099124}
{'[4, 3, 6, 6, 2, 4, 0, 1, 7, 26, 0, 11, 1, 0, 1, 1, 0, 1]' : 0.0989659}
{'[4, 3, 6, 6, 2, 4, 0, 1, 7, 26, 0, 11, 1, 0, 1, 1, 0, 1]' : 0.0989652}
{'[4, 3, 6, 6, 2, 4, 0, 1, 7, 26, 0, 11, 1, 0, 1, 1, 0, 1]' : 0.099319}
{'[4, 3, 6, 6, 2, 4, 0, 1, 7, 26, 0, 11, 1, 0, 1, 1, 0, 1]' : 0.0990911}
{'[4, 3, 6, 6, 2, 4, 0, 1, 7, 26, 0, 11, 1, 0, 1, 1, 0, 1]' : 0.099093}
{'[4, 3, 6, 6, 2, 4, 0, 1, 7, 26, 0, 11, 1, 0, 1, 1, 0, 1]' : 0.0988669}
{'[4, 3, 6, 6, 2, 4, 0, 1, 7, 26, 0, 11, 1, 0, 1, 1, 0, 1]' : 0.0988669}
{'[4, 3, 6, 6, 2, 4, 0, 1, 7, 26, 0, 11, 1, 0, 1, 1, 0, 1]' : 0.0988979}
{'[4, 3, 6, 6, 2, 4, 0, 1, 7, 26, 0, 11, 1, 0, 1, 1, 0, 1]' : 0.098767}

out:
 ["{'[4, 3, 6, 6, 2, 4, 0, 1, 7, 26, 0, 11, 1, 0, 1, 1, 0, 1]' : 0.112366}", "{'[4, 3, 6, 6, 2, 4, 0, 1, 7, 26, 0, 11, 1, 0, 1, 1, 0, 1]' : 0.112373}", "{'[4, 3, 6, 6, 2, 4, 0, 1, 7, 26, 0, 11, 1, 0, 1, 1, 0, 1]' : 0.112213}", "{'[4, 3, 6, 6, 2, 4, 0, 1, 7, 26, 0, 11, 1, 0, 1, 1, 0, 1]' : 0.112362}", "{'[4, 3, 6, 6, 2, 4, 0, 1, 7, 26, 0, 11, 1, 0, 1, 1, 0, 1]' : 0.106892}", "{'[4, 3, 6, 6, 2, 4, 0, 1, 7, 26, 0, 11, 1, 0, 1, 1, 0, 1]' : 0.098871}", "{'[4, 3, 6, 6, 2, 4, 0, 1, 7, 26, 0, 11, 1, 0, 1, 1, 0, 1]' : 0.0987649}", "{'[4, 3, 6, 6, 2, 4, 0, 1, 7, 26, 0, 11, 1, 0, 1, 1, 0, 1]' : 0.0988331}", "{'[4, 3, 6, 6, 2, 4, 0, 1, 7, 26, 0, 11, 1, 0, 1, 1, 0, 1]' : 0.099052}", "{'[4, 3, 6, 6, 2, 4, 0, 1, 7, 26, 0, 11, 1, 0, 1, 1, 0, 1]' : 0.099184}", "{'[4, 3, 6, 6, 2, 4, 0, 1, 7, 26, 0, 11, 1, 0, 1, 1, 0, 1]' : 0.0991001}", "{'[4, 3, 6, 6, 2, 4, 0, 1, 7, 26, 0, 11, 1, 0, 1, 1, 0, 1]' : 0.098815}", "{'[4, 3, 6, 6, 2, 4, 0, 1, 7, 26, 0, 11, 1, 0, 1, 1, 0, 1]' : 0.0990419}", "{'[4, 3, 6, 6, 2, 4, 0, 1, 7, 26, 0, 11, 1, 0, 1, 1, 0, 1]' : 0.0988109}", "{'[4, 3, 6, 6, 2, 4, 0, 1, 7, 26, 0, 11, 1, 0, 1, 1, 0, 1]' : 0.0987871}", "{'[4, 3, 6, 6, 2, 4, 0, 1, 7, 26, 0, 11, 1, 0, 1, 1, 0, 1]' : 0.0989239}", "{'[4, 3, 6, 6, 2, 4, 0, 1, 7, 26, 0, 11, 1, 0, 1, 1, 0, 1]' : 0.0988629}", "{'[4, 3, 6, 6, 2, 4, 0, 1, 7, 26, 0, 11, 1, 0, 1, 1, 0, 1]' : 0.0990729}", "{'[4, 3, 6, 6, 2, 4, 0, 1, 7, 26, 0, 11, 1, 0, 1, 1, 0, 1]' : 0.0989029}", "{'[4, 3, 6, 6, 2, 4, 0, 1, 7, 26, 0, 11, 1, 0, 1, 1, 0, 1]' : 0.0988111}", "{'[4, 3, 6, 6, 2, 4, 0, 1, 7, 26, 0, 11, 1, 0, 1, 1, 0, 1]' : 0.099124}", "{'[4, 3, 6, 6, 2, 4, 0, 1, 7, 26, 0, 11, 1, 0, 1, 1, 0, 1]' : 0.0989659}", "{'[4, 3, 6, 6, 2, 4, 0, 1, 7, 26, 0, 11, 1, 0, 1, 1, 0, 1]' : 0.0989652}", "{'[4, 3, 6, 6, 2, 4, 0, 1, 7, 26, 0, 11, 1, 0, 1, 1, 0, 1]' : 0.099319}", "{'[4, 3, 6, 6, 2, 4, 0, 1, 7, 26, 0, 11, 1, 0, 1, 1, 0, 1]' : 0.0990911}", "{'[4, 3, 6, 6, 2, 4, 0, 1, 7, 26, 0, 11, 1, 0, 1, 1, 0, 1]' : 0.099093}", "{'[4, 3, 6, 6, 2, 4, 0, 1, 7, 26, 0, 11, 1, 0, 1, 1, 0, 1]' : 0.0988669}", "{'[4, 3, 6, 6, 2, 4, 0, 1, 7, 26, 0, 11, 1, 0, 1, 1, 0, 1]' : 0.0988669}", "{'[4, 3, 6, 6, 2, 4, 0, 1, 7, 26, 0, 11, 1, 0, 1, 1, 0, 1]' : 0.0988979}", "{'[4, 3, 6, 6, 2, 4, 0, 1, 7, 26, 0, 11, 1, 0, 1, 1, 0, 1]' : 0.098767}"]
returning from 'run': {'[4, 3, 6, 6, 2, 4, 0, 1, 7, 26, 0, 11, 1, 0, 1, 1, 0, 1]': ([0.112366, 0.112373, 0.112213, 0.112362, 0.106892, 0.098871, 0.0987649, 0.0988331, 0.099052, 0.099184, 0.0991001, 0.098815, 0.0990419, 0.0988109, 0.0987871, 0.0989239, 0.0988629, 0.0990729, 0.0989029, 0.0988111, 0.099124, 0.0989659, 0.0989652, 0.099319, 0.0990911, 0.099093, 0.0988669, 0.0988669, 0.0988979, 0.098767], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 3, 6, 6, 2, 4, 0, 1, 7, 26, 0, 11, 1, 0, 1, 1, 0, 1]': ([0.112366, 0.112373, 0.112213, 0.112362, 0.106892, 0.098871, 0.0987649, 0.0988331, 0.099052, 0.099184, 0.0991001, 0.098815, 0.0990419, 0.0988109, 0.0987871, 0.0989239, 0.0988629, 0.0990729, 0.0989029, 0.0988111, 0.099124, 0.0989659, 0.0989652, 0.099319, 0.0990911, 0.099093, 0.0988669, 0.0988669, 0.0988979, 0.098767], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		345
        Multiplications: 	98
        Divisions: 		0
        Logical: 		0
        Reads: 			707
        Writes: 		111
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest36.exe __orio_perftest36.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest36.exe  
Program Test Output: 
{'[5, 0, 4, 0, 5, 5, 0, 1, 28, 0, 23, 22, 0, 0, 0, 0, 1, 0]' : 0.281134}
{'[5, 0, 4, 0, 5, 5, 0, 1, 28, 0, 23, 22, 0, 0, 0, 0, 1, 0]' : 0.271434}
{'[5, 0, 4, 0, 5, 5, 0, 1, 28, 0, 23, 22, 0, 0, 0, 0, 1, 0]' : 0.241481}
{'[5, 0, 4, 0, 5, 5, 0, 1, 28, 0, 23, 22, 0, 0, 0, 0, 1, 0]' : 0.242059}
{'[5, 0, 4, 0, 5, 5, 0, 1, 28, 0, 23, 22, 0, 0, 0, 0, 1, 0]' : 0.241905}
{'[5, 0, 4, 0, 5, 5, 0, 1, 28, 0, 23, 22, 0, 0, 0, 0, 1, 0]' : 0.241729}
{'[5, 0, 4, 0, 5, 5, 0, 1, 28, 0, 23, 22, 0, 0, 0, 0, 1, 0]' : 0.241471}
{'[5, 0, 4, 0, 5, 5, 0, 1, 28, 0, 23, 22, 0, 0, 0, 0, 1, 0]' : 0.241747}
{'[5, 0, 4, 0, 5, 5, 0, 1, 28, 0, 23, 22, 0, 0, 0, 0, 1, 0]' : 0.242026}
{'[5, 0, 4, 0, 5, 5, 0, 1, 28, 0, 23, 22, 0, 0, 0, 0, 1, 0]' : 0.240723}
{'[5, 0, 4, 0, 5, 5, 0, 1, 28, 0, 23, 22, 0, 0, 0, 0, 1, 0]' : 0.235138}
{'[5, 0, 4, 0, 5, 5, 0, 1, 28, 0, 23, 22, 0, 0, 0, 0, 1, 0]' : 0.235527}
{'[5, 0, 4, 0, 5, 5, 0, 1, 28, 0, 23, 22, 0, 0, 0, 0, 1, 0]' : 0.23523}
{'[5, 0, 4, 0, 5, 5, 0, 1, 28, 0, 23, 22, 0, 0, 0, 0, 1, 0]' : 0.235133}
{'[5, 0, 4, 0, 5, 5, 0, 1, 28, 0, 23, 22, 0, 0, 0, 0, 1, 0]' : 0.234914}
{'[5, 0, 4, 0, 5, 5, 0, 1, 28, 0, 23, 22, 0, 0, 0, 0, 1, 0]' : 0.235015}
{'[5, 0, 4, 0, 5, 5, 0, 1, 28, 0, 23, 22, 0, 0, 0, 0, 1, 0]' : 0.235014}
{'[5, 0, 4, 0, 5, 5, 0, 1, 28, 0, 23, 22, 0, 0, 0, 0, 1, 0]' : 0.235245}
{'[5, 0, 4, 0, 5, 5, 0, 1, 28, 0, 23, 22, 0, 0, 0, 0, 1, 0]' : 0.234959}
{'[5, 0, 4, 0, 5, 5, 0, 1, 28, 0, 23, 22, 0, 0, 0, 0, 1, 0]' : 0.235024}
{'[5, 0, 4, 0, 5, 5, 0, 1, 28, 0, 23, 22, 0, 0, 0, 0, 1, 0]' : 0.235121}
{'[5, 0, 4, 0, 5, 5, 0, 1, 28, 0, 23, 22, 0, 0, 0, 0, 1, 0]' : 0.234851}
{'[5, 0, 4, 0, 5, 5, 0, 1, 28, 0, 23, 22, 0, 0, 0, 0, 1, 0]' : 0.235775}
{'[5, 0, 4, 0, 5, 5, 0, 1, 28, 0, 23, 22, 0, 0, 0, 0, 1, 0]' : 0.23506}
{'[5, 0, 4, 0, 5, 5, 0, 1, 28, 0, 23, 22, 0, 0, 0, 0, 1, 0]' : 0.235165}
{'[5, 0, 4, 0, 5, 5, 0, 1, 28, 0, 23, 22, 0, 0, 0, 0, 1, 0]' : 0.234878}
{'[5, 0, 4, 0, 5, 5, 0, 1, 28, 0, 23, 22, 0, 0, 0, 0, 1, 0]' : 0.235089}
{'[5, 0, 4, 0, 5, 5, 0, 1, 28, 0, 23, 22, 0, 0, 0, 0, 1, 0]' : 0.235012}
{'[5, 0, 4, 0, 5, 5, 0, 1, 28, 0, 23, 22, 0, 0, 0, 0, 1, 0]' : 0.235221}
{'[5, 0, 4, 0, 5, 5, 0, 1, 28, 0, 23, 22, 0, 0, 0, 0, 1, 0]' : 0.234907}

out:
 ["{'[5, 0, 4, 0, 5, 5, 0, 1, 28, 0, 23, 22, 0, 0, 0, 0, 1, 0]' : 0.281134}", "{'[5, 0, 4, 0, 5, 5, 0, 1, 28, 0, 23, 22, 0, 0, 0, 0, 1, 0]' : 0.271434}", "{'[5, 0, 4, 0, 5, 5, 0, 1, 28, 0, 23, 22, 0, 0, 0, 0, 1, 0]' : 0.241481}", "{'[5, 0, 4, 0, 5, 5, 0, 1, 28, 0, 23, 22, 0, 0, 0, 0, 1, 0]' : 0.242059}", "{'[5, 0, 4, 0, 5, 5, 0, 1, 28, 0, 23, 22, 0, 0, 0, 0, 1, 0]' : 0.241905}", "{'[5, 0, 4, 0, 5, 5, 0, 1, 28, 0, 23, 22, 0, 0, 0, 0, 1, 0]' : 0.241729}", "{'[5, 0, 4, 0, 5, 5, 0, 1, 28, 0, 23, 22, 0, 0, 0, 0, 1, 0]' : 0.241471}", "{'[5, 0, 4, 0, 5, 5, 0, 1, 28, 0, 23, 22, 0, 0, 0, 0, 1, 0]' : 0.241747}", "{'[5, 0, 4, 0, 5, 5, 0, 1, 28, 0, 23, 22, 0, 0, 0, 0, 1, 0]' : 0.242026}", "{'[5, 0, 4, 0, 5, 5, 0, 1, 28, 0, 23, 22, 0, 0, 0, 0, 1, 0]' : 0.240723}", "{'[5, 0, 4, 0, 5, 5, 0, 1, 28, 0, 23, 22, 0, 0, 0, 0, 1, 0]' : 0.235138}", "{'[5, 0, 4, 0, 5, 5, 0, 1, 28, 0, 23, 22, 0, 0, 0, 0, 1, 0]' : 0.235527}", "{'[5, 0, 4, 0, 5, 5, 0, 1, 28, 0, 23, 22, 0, 0, 0, 0, 1, 0]' : 0.23523}", "{'[5, 0, 4, 0, 5, 5, 0, 1, 28, 0, 23, 22, 0, 0, 0, 0, 1, 0]' : 0.235133}", "{'[5, 0, 4, 0, 5, 5, 0, 1, 28, 0, 23, 22, 0, 0, 0, 0, 1, 0]' : 0.234914}", "{'[5, 0, 4, 0, 5, 5, 0, 1, 28, 0, 23, 22, 0, 0, 0, 0, 1, 0]' : 0.235015}", "{'[5, 0, 4, 0, 5, 5, 0, 1, 28, 0, 23, 22, 0, 0, 0, 0, 1, 0]' : 0.235014}", "{'[5, 0, 4, 0, 5, 5, 0, 1, 28, 0, 23, 22, 0, 0, 0, 0, 1, 0]' : 0.235245}", "{'[5, 0, 4, 0, 5, 5, 0, 1, 28, 0, 23, 22, 0, 0, 0, 0, 1, 0]' : 0.234959}", "{'[5, 0, 4, 0, 5, 5, 0, 1, 28, 0, 23, 22, 0, 0, 0, 0, 1, 0]' : 0.235024}", "{'[5, 0, 4, 0, 5, 5, 0, 1, 28, 0, 23, 22, 0, 0, 0, 0, 1, 0]' : 0.235121}", "{'[5, 0, 4, 0, 5, 5, 0, 1, 28, 0, 23, 22, 0, 0, 0, 0, 1, 0]' : 0.234851}", "{'[5, 0, 4, 0, 5, 5, 0, 1, 28, 0, 23, 22, 0, 0, 0, 0, 1, 0]' : 0.235775}", "{'[5, 0, 4, 0, 5, 5, 0, 1, 28, 0, 23, 22, 0, 0, 0, 0, 1, 0]' : 0.23506}", "{'[5, 0, 4, 0, 5, 5, 0, 1, 28, 0, 23, 22, 0, 0, 0, 0, 1, 0]' : 0.235165}", "{'[5, 0, 4, 0, 5, 5, 0, 1, 28, 0, 23, 22, 0, 0, 0, 0, 1, 0]' : 0.234878}", "{'[5, 0, 4, 0, 5, 5, 0, 1, 28, 0, 23, 22, 0, 0, 0, 0, 1, 0]' : 0.235089}", "{'[5, 0, 4, 0, 5, 5, 0, 1, 28, 0, 23, 22, 0, 0, 0, 0, 1, 0]' : 0.235012}", "{'[5, 0, 4, 0, 5, 5, 0, 1, 28, 0, 23, 22, 0, 0, 0, 0, 1, 0]' : 0.235221}", "{'[5, 0, 4, 0, 5, 5, 0, 1, 28, 0, 23, 22, 0, 0, 0, 0, 1, 0]' : 0.234907}"]
returning from 'run': {'[5, 0, 4, 0, 5, 5, 0, 1, 28, 0, 23, 22, 0, 0, 0, 0, 1, 0]': ([0.281134, 0.271434, 0.241481, 0.242059, 0.241905, 0.241729, 0.241471, 0.241747, 0.242026, 0.240723, 0.235138, 0.235527, 0.23523, 0.235133, 0.234914, 0.235015, 0.235014, 0.235245, 0.234959, 0.235024, 0.235121, 0.234851, 0.235775, 0.23506, 0.235165, 0.234878, 0.235089, 0.235012, 0.235221, 0.234907], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 0, 4, 0, 5, 5, 0, 1, 28, 0, 23, 22, 0, 0, 0, 0, 1, 0]': ([0.281134, 0.271434, 0.241481, 0.242059, 0.241905, 0.241729, 0.241471, 0.241747, 0.242026, 0.240723, 0.235138, 0.235527, 0.23523, 0.235133, 0.234914, 0.235015, 0.235014, 0.235245, 0.234959, 0.235024, 0.235121, 0.234851, 0.235775, 0.23506, 0.235165, 0.234878, 0.235089, 0.235012, 0.235221, 0.234907], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		817
        Multiplications: 	384
        Divisions: 		0
        Logical: 		0
        Reads: 			1744
        Writes: 		329
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest37.exe __orio_perftest37.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest37.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest37.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest37.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest37.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		418
        Multiplications: 	126
        Divisions: 		0
        Logical: 		0
        Reads: 			832
        Writes: 		96
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest38.exe __orio_perftest38.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest38.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest38.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest38.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest38.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
Code stats:
        Number of loops: 	129
        Max loop nest depth: 	4
        Additions: 		8536
        Multiplications: 	2380
        Divisions: 		0
        Logical: 		0
        Reads: 			13311
        Writes: 		1533
        Comparisons:		129
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest39.exe __orio_perftest39.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest39.exe  
Program Test Output: 
{'[3, 4, 5, 1, 0, 0, 0, 1, 0, 25, 23, 0, 1, 1, 0, 0, 0, 0]' : 0.140422}
{'[3, 4, 5, 1, 0, 0, 0, 1, 0, 25, 23, 0, 1, 1, 0, 0, 0, 0]' : 0.140212}
{'[3, 4, 5, 1, 0, 0, 0, 1, 0, 25, 23, 0, 1, 1, 0, 0, 0, 0]' : 0.140204}
{'[3, 4, 5, 1, 0, 0, 0, 1, 0, 25, 23, 0, 1, 1, 0, 0, 0, 0]' : 0.127404}
{'[3, 4, 5, 1, 0, 0, 0, 1, 0, 25, 23, 0, 1, 1, 0, 0, 0, 0]' : 0.120069}
{'[3, 4, 5, 1, 0, 0, 0, 1, 0, 25, 23, 0, 1, 1, 0, 0, 0, 0]' : 0.119961}
{'[3, 4, 5, 1, 0, 0, 0, 1, 0, 25, 23, 0, 1, 1, 0, 0, 0, 0]' : 0.119926}
{'[3, 4, 5, 1, 0, 0, 0, 1, 0, 25, 23, 0, 1, 1, 0, 0, 0, 0]' : 0.120209}
{'[3, 4, 5, 1, 0, 0, 0, 1, 0, 25, 23, 0, 1, 1, 0, 0, 0, 0]' : 0.120532}
{'[3, 4, 5, 1, 0, 0, 0, 1, 0, 25, 23, 0, 1, 1, 0, 0, 0, 0]' : 0.119866}
{'[3, 4, 5, 1, 0, 0, 0, 1, 0, 25, 23, 0, 1, 1, 0, 0, 0, 0]' : 0.119943}
{'[3, 4, 5, 1, 0, 0, 0, 1, 0, 25, 23, 0, 1, 1, 0, 0, 0, 0]' : 0.120191}
{'[3, 4, 5, 1, 0, 0, 0, 1, 0, 25, 23, 0, 1, 1, 0, 0, 0, 0]' : 0.120379}
{'[3, 4, 5, 1, 0, 0, 0, 1, 0, 25, 23, 0, 1, 1, 0, 0, 0, 0]' : 0.120143}
{'[3, 4, 5, 1, 0, 0, 0, 1, 0, 25, 23, 0, 1, 1, 0, 0, 0, 0]' : 0.120131}
{'[3, 4, 5, 1, 0, 0, 0, 1, 0, 25, 23, 0, 1, 1, 0, 0, 0, 0]' : 0.120026}
{'[3, 4, 5, 1, 0, 0, 0, 1, 0, 25, 23, 0, 1, 1, 0, 0, 0, 0]' : 0.120174}
{'[3, 4, 5, 1, 0, 0, 0, 1, 0, 25, 23, 0, 1, 1, 0, 0, 0, 0]' : 0.119896}
{'[3, 4, 5, 1, 0, 0, 0, 1, 0, 25, 23, 0, 1, 1, 0, 0, 0, 0]' : 0.120023}
{'[3, 4, 5, 1, 0, 0, 0, 1, 0, 25, 23, 0, 1, 1, 0, 0, 0, 0]' : 0.119939}
{'[3, 4, 5, 1, 0, 0, 0, 1, 0, 25, 23, 0, 1, 1, 0, 0, 0, 0]' : 0.120305}
{'[3, 4, 5, 1, 0, 0, 0, 1, 0, 25, 23, 0, 1, 1, 0, 0, 0, 0]' : 0.1204}
{'[3, 4, 5, 1, 0, 0, 0, 1, 0, 25, 23, 0, 1, 1, 0, 0, 0, 0]' : 0.120011}
{'[3, 4, 5, 1, 0, 0, 0, 1, 0, 25, 23, 0, 1, 1, 0, 0, 0, 0]' : 0.120042}
{'[3, 4, 5, 1, 0, 0, 0, 1, 0, 25, 23, 0, 1, 1, 0, 0, 0, 0]' : 0.120196}
{'[3, 4, 5, 1, 0, 0, 0, 1, 0, 25, 23, 0, 1, 1, 0, 0, 0, 0]' : 0.120057}
{'[3, 4, 5, 1, 0, 0, 0, 1, 0, 25, 23, 0, 1, 1, 0, 0, 0, 0]' : 0.120096}
{'[3, 4, 5, 1, 0, 0, 0, 1, 0, 25, 23, 0, 1, 1, 0, 0, 0, 0]' : 0.119969}
{'[3, 4, 5, 1, 0, 0, 0, 1, 0, 25, 23, 0, 1, 1, 0, 0, 0, 0]' : 0.12033}
{'[3, 4, 5, 1, 0, 0, 0, 1, 0, 25, 23, 0, 1, 1, 0, 0, 0, 0]' : 0.119854}

out:
 ["{'[3, 4, 5, 1, 0, 0, 0, 1, 0, 25, 23, 0, 1, 1, 0, 0, 0, 0]' : 0.140422}", "{'[3, 4, 5, 1, 0, 0, 0, 1, 0, 25, 23, 0, 1, 1, 0, 0, 0, 0]' : 0.140212}", "{'[3, 4, 5, 1, 0, 0, 0, 1, 0, 25, 23, 0, 1, 1, 0, 0, 0, 0]' : 0.140204}", "{'[3, 4, 5, 1, 0, 0, 0, 1, 0, 25, 23, 0, 1, 1, 0, 0, 0, 0]' : 0.127404}", "{'[3, 4, 5, 1, 0, 0, 0, 1, 0, 25, 23, 0, 1, 1, 0, 0, 0, 0]' : 0.120069}", "{'[3, 4, 5, 1, 0, 0, 0, 1, 0, 25, 23, 0, 1, 1, 0, 0, 0, 0]' : 0.119961}", "{'[3, 4, 5, 1, 0, 0, 0, 1, 0, 25, 23, 0, 1, 1, 0, 0, 0, 0]' : 0.119926}", "{'[3, 4, 5, 1, 0, 0, 0, 1, 0, 25, 23, 0, 1, 1, 0, 0, 0, 0]' : 0.120209}", "{'[3, 4, 5, 1, 0, 0, 0, 1, 0, 25, 23, 0, 1, 1, 0, 0, 0, 0]' : 0.120532}", "{'[3, 4, 5, 1, 0, 0, 0, 1, 0, 25, 23, 0, 1, 1, 0, 0, 0, 0]' : 0.119866}", "{'[3, 4, 5, 1, 0, 0, 0, 1, 0, 25, 23, 0, 1, 1, 0, 0, 0, 0]' : 0.119943}", "{'[3, 4, 5, 1, 0, 0, 0, 1, 0, 25, 23, 0, 1, 1, 0, 0, 0, 0]' : 0.120191}", "{'[3, 4, 5, 1, 0, 0, 0, 1, 0, 25, 23, 0, 1, 1, 0, 0, 0, 0]' : 0.120379}", "{'[3, 4, 5, 1, 0, 0, 0, 1, 0, 25, 23, 0, 1, 1, 0, 0, 0, 0]' : 0.120143}", "{'[3, 4, 5, 1, 0, 0, 0, 1, 0, 25, 23, 0, 1, 1, 0, 0, 0, 0]' : 0.120131}", "{'[3, 4, 5, 1, 0, 0, 0, 1, 0, 25, 23, 0, 1, 1, 0, 0, 0, 0]' : 0.120026}", "{'[3, 4, 5, 1, 0, 0, 0, 1, 0, 25, 23, 0, 1, 1, 0, 0, 0, 0]' : 0.120174}", "{'[3, 4, 5, 1, 0, 0, 0, 1, 0, 25, 23, 0, 1, 1, 0, 0, 0, 0]' : 0.119896}", "{'[3, 4, 5, 1, 0, 0, 0, 1, 0, 25, 23, 0, 1, 1, 0, 0, 0, 0]' : 0.120023}", "{'[3, 4, 5, 1, 0, 0, 0, 1, 0, 25, 23, 0, 1, 1, 0, 0, 0, 0]' : 0.119939}", "{'[3, 4, 5, 1, 0, 0, 0, 1, 0, 25, 23, 0, 1, 1, 0, 0, 0, 0]' : 0.120305}", "{'[3, 4, 5, 1, 0, 0, 0, 1, 0, 25, 23, 0, 1, 1, 0, 0, 0, 0]' : 0.1204}", "{'[3, 4, 5, 1, 0, 0, 0, 1, 0, 25, 23, 0, 1, 1, 0, 0, 0, 0]' : 0.120011}", "{'[3, 4, 5, 1, 0, 0, 0, 1, 0, 25, 23, 0, 1, 1, 0, 0, 0, 0]' : 0.120042}", "{'[3, 4, 5, 1, 0, 0, 0, 1, 0, 25, 23, 0, 1, 1, 0, 0, 0, 0]' : 0.120196}", "{'[3, 4, 5, 1, 0, 0, 0, 1, 0, 25, 23, 0, 1, 1, 0, 0, 0, 0]' : 0.120057}", "{'[3, 4, 5, 1, 0, 0, 0, 1, 0, 25, 23, 0, 1, 1, 0, 0, 0, 0]' : 0.120096}", "{'[3, 4, 5, 1, 0, 0, 0, 1, 0, 25, 23, 0, 1, 1, 0, 0, 0, 0]' : 0.119969}", "{'[3, 4, 5, 1, 0, 0, 0, 1, 0, 25, 23, 0, 1, 1, 0, 0, 0, 0]' : 0.12033}", "{'[3, 4, 5, 1, 0, 0, 0, 1, 0, 25, 23, 0, 1, 1, 0, 0, 0, 0]' : 0.119854}"]
returning from 'run': {'[3, 4, 5, 1, 0, 0, 0, 1, 0, 25, 23, 0, 1, 1, 0, 0, 0, 0]': ([0.140422, 0.140212, 0.140204, 0.127404, 0.120069, 0.119961, 0.119926, 0.120209, 0.120532, 0.119866, 0.119943, 0.120191, 0.120379, 0.120143, 0.120131, 0.120026, 0.120174, 0.119896, 0.120023, 0.119939, 0.120305, 0.1204, 0.120011, 0.120042, 0.120196, 0.120057, 0.120096, 0.119969, 0.12033, 0.119854], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 4, 5, 1, 0, 0, 0, 1, 0, 25, 23, 0, 1, 1, 0, 0, 0, 0]': ([0.140422, 0.140212, 0.140204, 0.127404, 0.120069, 0.119961, 0.119926, 0.120209, 0.120532, 0.119866, 0.119943, 0.120191, 0.120379, 0.120143, 0.120131, 0.120026, 0.120174, 0.119896, 0.120023, 0.119939, 0.120305, 0.1204, 0.120011, 0.120042, 0.120196, 0.120057, 0.120096, 0.119969, 0.12033, 0.119854], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	6
        Additions: 		162
        Multiplications: 	58
        Divisions: 		0
        Logical: 		0
        Reads: 			365
        Writes: 		75
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest40.exe __orio_perftest40.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest40.exe  
Program Test Output: 
{'[2, 6, 2, 1, 4, 1, 0, 0, 0, 0, 20, 5, 0, 0, 0, 1, 0, 1]' : 0.198548}
{'[2, 6, 2, 1, 4, 1, 0, 0, 0, 0, 20, 5, 0, 0, 0, 1, 0, 1]' : 0.198304}
{'[2, 6, 2, 1, 4, 1, 0, 0, 0, 0, 20, 5, 0, 0, 0, 1, 0, 1]' : 0.198329}
{'[2, 6, 2, 1, 4, 1, 0, 0, 0, 0, 20, 5, 0, 0, 0, 1, 0, 1]' : 0.171165}
{'[2, 6, 2, 1, 4, 1, 0, 0, 0, 0, 20, 5, 0, 0, 0, 1, 0, 1]' : 0.16644}
{'[2, 6, 2, 1, 4, 1, 0, 0, 0, 0, 20, 5, 0, 0, 0, 1, 0, 1]' : 0.166302}
{'[2, 6, 2, 1, 4, 1, 0, 0, 0, 0, 20, 5, 0, 0, 0, 1, 0, 1]' : 0.1661}
{'[2, 6, 2, 1, 4, 1, 0, 0, 0, 0, 20, 5, 0, 0, 0, 1, 0, 1]' : 0.166121}
{'[2, 6, 2, 1, 4, 1, 0, 0, 0, 0, 20, 5, 0, 0, 0, 1, 0, 1]' : 0.166102}
{'[2, 6, 2, 1, 4, 1, 0, 0, 0, 0, 20, 5, 0, 0, 0, 1, 0, 1]' : 0.166331}
{'[2, 6, 2, 1, 4, 1, 0, 0, 0, 0, 20, 5, 0, 0, 0, 1, 0, 1]' : 0.16608}
{'[2, 6, 2, 1, 4, 1, 0, 0, 0, 0, 20, 5, 0, 0, 0, 1, 0, 1]' : 0.166757}
{'[2, 6, 2, 1, 4, 1, 0, 0, 0, 0, 20, 5, 0, 0, 0, 1, 0, 1]' : 0.166732}
{'[2, 6, 2, 1, 4, 1, 0, 0, 0, 0, 20, 5, 0, 0, 0, 1, 0, 1]' : 0.166101}
{'[2, 6, 2, 1, 4, 1, 0, 0, 0, 0, 20, 5, 0, 0, 0, 1, 0, 1]' : 0.16617}
{'[2, 6, 2, 1, 4, 1, 0, 0, 0, 0, 20, 5, 0, 0, 0, 1, 0, 1]' : 0.166409}
{'[2, 6, 2, 1, 4, 1, 0, 0, 0, 0, 20, 5, 0, 0, 0, 1, 0, 1]' : 0.166189}
{'[2, 6, 2, 1, 4, 1, 0, 0, 0, 0, 20, 5, 0, 0, 0, 1, 0, 1]' : 0.166297}
{'[2, 6, 2, 1, 4, 1, 0, 0, 0, 0, 20, 5, 0, 0, 0, 1, 0, 1]' : 0.166403}
{'[2, 6, 2, 1, 4, 1, 0, 0, 0, 0, 20, 5, 0, 0, 0, 1, 0, 1]' : 0.166087}
{'[2, 6, 2, 1, 4, 1, 0, 0, 0, 0, 20, 5, 0, 0, 0, 1, 0, 1]' : 0.166094}
{'[2, 6, 2, 1, 4, 1, 0, 0, 0, 0, 20, 5, 0, 0, 0, 1, 0, 1]' : 0.166508}
{'[2, 6, 2, 1, 4, 1, 0, 0, 0, 0, 20, 5, 0, 0, 0, 1, 0, 1]' : 0.166374}
{'[2, 6, 2, 1, 4, 1, 0, 0, 0, 0, 20, 5, 0, 0, 0, 1, 0, 1]' : 0.166185}
{'[2, 6, 2, 1, 4, 1, 0, 0, 0, 0, 20, 5, 0, 0, 0, 1, 0, 1]' : 0.166367}
{'[2, 6, 2, 1, 4, 1, 0, 0, 0, 0, 20, 5, 0, 0, 0, 1, 0, 1]' : 0.166297}
{'[2, 6, 2, 1, 4, 1, 0, 0, 0, 0, 20, 5, 0, 0, 0, 1, 0, 1]' : 0.166097}
{'[2, 6, 2, 1, 4, 1, 0, 0, 0, 0, 20, 5, 0, 0, 0, 1, 0, 1]' : 0.166423}
{'[2, 6, 2, 1, 4, 1, 0, 0, 0, 0, 20, 5, 0, 0, 0, 1, 0, 1]' : 0.166312}
{'[2, 6, 2, 1, 4, 1, 0, 0, 0, 0, 20, 5, 0, 0, 0, 1, 0, 1]' : 0.166265}

out:
 ["{'[2, 6, 2, 1, 4, 1, 0, 0, 0, 0, 20, 5, 0, 0, 0, 1, 0, 1]' : 0.198548}", "{'[2, 6, 2, 1, 4, 1, 0, 0, 0, 0, 20, 5, 0, 0, 0, 1, 0, 1]' : 0.198304}", "{'[2, 6, 2, 1, 4, 1, 0, 0, 0, 0, 20, 5, 0, 0, 0, 1, 0, 1]' : 0.198329}", "{'[2, 6, 2, 1, 4, 1, 0, 0, 0, 0, 20, 5, 0, 0, 0, 1, 0, 1]' : 0.171165}", "{'[2, 6, 2, 1, 4, 1, 0, 0, 0, 0, 20, 5, 0, 0, 0, 1, 0, 1]' : 0.16644}", "{'[2, 6, 2, 1, 4, 1, 0, 0, 0, 0, 20, 5, 0, 0, 0, 1, 0, 1]' : 0.166302}", "{'[2, 6, 2, 1, 4, 1, 0, 0, 0, 0, 20, 5, 0, 0, 0, 1, 0, 1]' : 0.1661}", "{'[2, 6, 2, 1, 4, 1, 0, 0, 0, 0, 20, 5, 0, 0, 0, 1, 0, 1]' : 0.166121}", "{'[2, 6, 2, 1, 4, 1, 0, 0, 0, 0, 20, 5, 0, 0, 0, 1, 0, 1]' : 0.166102}", "{'[2, 6, 2, 1, 4, 1, 0, 0, 0, 0, 20, 5, 0, 0, 0, 1, 0, 1]' : 0.166331}", "{'[2, 6, 2, 1, 4, 1, 0, 0, 0, 0, 20, 5, 0, 0, 0, 1, 0, 1]' : 0.16608}", "{'[2, 6, 2, 1, 4, 1, 0, 0, 0, 0, 20, 5, 0, 0, 0, 1, 0, 1]' : 0.166757}", "{'[2, 6, 2, 1, 4, 1, 0, 0, 0, 0, 20, 5, 0, 0, 0, 1, 0, 1]' : 0.166732}", "{'[2, 6, 2, 1, 4, 1, 0, 0, 0, 0, 20, 5, 0, 0, 0, 1, 0, 1]' : 0.166101}", "{'[2, 6, 2, 1, 4, 1, 0, 0, 0, 0, 20, 5, 0, 0, 0, 1, 0, 1]' : 0.16617}", "{'[2, 6, 2, 1, 4, 1, 0, 0, 0, 0, 20, 5, 0, 0, 0, 1, 0, 1]' : 0.166409}", "{'[2, 6, 2, 1, 4, 1, 0, 0, 0, 0, 20, 5, 0, 0, 0, 1, 0, 1]' : 0.166189}", "{'[2, 6, 2, 1, 4, 1, 0, 0, 0, 0, 20, 5, 0, 0, 0, 1, 0, 1]' : 0.166297}", "{'[2, 6, 2, 1, 4, 1, 0, 0, 0, 0, 20, 5, 0, 0, 0, 1, 0, 1]' : 0.166403}", "{'[2, 6, 2, 1, 4, 1, 0, 0, 0, 0, 20, 5, 0, 0, 0, 1, 0, 1]' : 0.166087}", "{'[2, 6, 2, 1, 4, 1, 0, 0, 0, 0, 20, 5, 0, 0, 0, 1, 0, 1]' : 0.166094}", "{'[2, 6, 2, 1, 4, 1, 0, 0, 0, 0, 20, 5, 0, 0, 0, 1, 0, 1]' : 0.166508}", "{'[2, 6, 2, 1, 4, 1, 0, 0, 0, 0, 20, 5, 0, 0, 0, 1, 0, 1]' : 0.166374}", "{'[2, 6, 2, 1, 4, 1, 0, 0, 0, 0, 20, 5, 0, 0, 0, 1, 0, 1]' : 0.166185}", "{'[2, 6, 2, 1, 4, 1, 0, 0, 0, 0, 20, 5, 0, 0, 0, 1, 0, 1]' : 0.166367}", "{'[2, 6, 2, 1, 4, 1, 0, 0, 0, 0, 20, 5, 0, 0, 0, 1, 0, 1]' : 0.166297}", "{'[2, 6, 2, 1, 4, 1, 0, 0, 0, 0, 20, 5, 0, 0, 0, 1, 0, 1]' : 0.166097}", "{'[2, 6, 2, 1, 4, 1, 0, 0, 0, 0, 20, 5, 0, 0, 0, 1, 0, 1]' : 0.166423}", "{'[2, 6, 2, 1, 4, 1, 0, 0, 0, 0, 20, 5, 0, 0, 0, 1, 0, 1]' : 0.166312}", "{'[2, 6, 2, 1, 4, 1, 0, 0, 0, 0, 20, 5, 0, 0, 0, 1, 0, 1]' : 0.166265}"]
returning from 'run': {'[2, 6, 2, 1, 4, 1, 0, 0, 0, 0, 20, 5, 0, 0, 0, 1, 0, 1]': ([0.198548, 0.198304, 0.198329, 0.171165, 0.16644, 0.166302, 0.1661, 0.166121, 0.166102, 0.166331, 0.16608, 0.166757, 0.166732, 0.166101, 0.16617, 0.166409, 0.166189, 0.166297, 0.166403, 0.166087, 0.166094, 0.166508, 0.166374, 0.166185, 0.166367, 0.166297, 0.166097, 0.166423, 0.166312, 0.166265], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 6, 2, 1, 4, 1, 0, 0, 0, 0, 20, 5, 0, 0, 0, 1, 0, 1]': ([0.198548, 0.198304, 0.198329, 0.171165, 0.16644, 0.166302, 0.1661, 0.166121, 0.166102, 0.166331, 0.16608, 0.166757, 0.166732, 0.166101, 0.16617, 0.166409, 0.166189, 0.166297, 0.166403, 0.166087, 0.166094, 0.166508, 0.166374, 0.166185, 0.166367, 0.166297, 0.166097, 0.166423, 0.166312, 0.166265], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	46
        Max loop nest depth: 	5
        Additions: 		2234
        Multiplications: 	576
        Divisions: 		0
        Logical: 		0
        Reads: 			3645
        Writes: 		442
        Comparisons:		46
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest41.exe __orio_perftest41.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest41.exe  
Program Test Output: 
{'[2, 3, 3, 0, 0, 2, 1, 0, 7, 22, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.137486}
{'[2, 3, 3, 0, 0, 2, 1, 0, 7, 22, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.137309}
{'[2, 3, 3, 0, 0, 2, 1, 0, 7, 22, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.137221}
{'[2, 3, 3, 0, 0, 2, 1, 0, 7, 22, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.132769}
{'[2, 3, 3, 0, 0, 2, 1, 0, 7, 22, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.116636}
{'[2, 3, 3, 0, 0, 2, 1, 0, 7, 22, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.116503}
{'[2, 3, 3, 0, 0, 2, 1, 0, 7, 22, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.116653}
{'[2, 3, 3, 0, 0, 2, 1, 0, 7, 22, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.117046}
{'[2, 3, 3, 0, 0, 2, 1, 0, 7, 22, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.116628}
{'[2, 3, 3, 0, 0, 2, 1, 0, 7, 22, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.11654}
{'[2, 3, 3, 0, 0, 2, 1, 0, 7, 22, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.116421}
{'[2, 3, 3, 0, 0, 2, 1, 0, 7, 22, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.1167}
{'[2, 3, 3, 0, 0, 2, 1, 0, 7, 22, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.11685}
{'[2, 3, 3, 0, 0, 2, 1, 0, 7, 22, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.11642}
{'[2, 3, 3, 0, 0, 2, 1, 0, 7, 22, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.116444}
{'[2, 3, 3, 0, 0, 2, 1, 0, 7, 22, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.117068}
{'[2, 3, 3, 0, 0, 2, 1, 0, 7, 22, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.117352}
{'[2, 3, 3, 0, 0, 2, 1, 0, 7, 22, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.116492}
{'[2, 3, 3, 0, 0, 2, 1, 0, 7, 22, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.116689}
{'[2, 3, 3, 0, 0, 2, 1, 0, 7, 22, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.117001}
{'[2, 3, 3, 0, 0, 2, 1, 0, 7, 22, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.117996}
{'[2, 3, 3, 0, 0, 2, 1, 0, 7, 22, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.117651}
{'[2, 3, 3, 0, 0, 2, 1, 0, 7, 22, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.117711}
{'[2, 3, 3, 0, 0, 2, 1, 0, 7, 22, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.117898}
{'[2, 3, 3, 0, 0, 2, 1, 0, 7, 22, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.117891}
{'[2, 3, 3, 0, 0, 2, 1, 0, 7, 22, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.118192}
{'[2, 3, 3, 0, 0, 2, 1, 0, 7, 22, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.117869}
{'[2, 3, 3, 0, 0, 2, 1, 0, 7, 22, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.118068}
{'[2, 3, 3, 0, 0, 2, 1, 0, 7, 22, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.117789}
{'[2, 3, 3, 0, 0, 2, 1, 0, 7, 22, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.117844}

out:
 ["{'[2, 3, 3, 0, 0, 2, 1, 0, 7, 22, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.137486}", "{'[2, 3, 3, 0, 0, 2, 1, 0, 7, 22, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.137309}", "{'[2, 3, 3, 0, 0, 2, 1, 0, 7, 22, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.137221}", "{'[2, 3, 3, 0, 0, 2, 1, 0, 7, 22, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.132769}", "{'[2, 3, 3, 0, 0, 2, 1, 0, 7, 22, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.116636}", "{'[2, 3, 3, 0, 0, 2, 1, 0, 7, 22, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.116503}", "{'[2, 3, 3, 0, 0, 2, 1, 0, 7, 22, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.116653}", "{'[2, 3, 3, 0, 0, 2, 1, 0, 7, 22, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.117046}", "{'[2, 3, 3, 0, 0, 2, 1, 0, 7, 22, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.116628}", "{'[2, 3, 3, 0, 0, 2, 1, 0, 7, 22, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.11654}", "{'[2, 3, 3, 0, 0, 2, 1, 0, 7, 22, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.116421}", "{'[2, 3, 3, 0, 0, 2, 1, 0, 7, 22, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.1167}", "{'[2, 3, 3, 0, 0, 2, 1, 0, 7, 22, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.11685}", "{'[2, 3, 3, 0, 0, 2, 1, 0, 7, 22, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.11642}", "{'[2, 3, 3, 0, 0, 2, 1, 0, 7, 22, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.116444}", "{'[2, 3, 3, 0, 0, 2, 1, 0, 7, 22, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.117068}", "{'[2, 3, 3, 0, 0, 2, 1, 0, 7, 22, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.117352}", "{'[2, 3, 3, 0, 0, 2, 1, 0, 7, 22, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.116492}", "{'[2, 3, 3, 0, 0, 2, 1, 0, 7, 22, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.116689}", "{'[2, 3, 3, 0, 0, 2, 1, 0, 7, 22, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.117001}", "{'[2, 3, 3, 0, 0, 2, 1, 0, 7, 22, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.117996}", "{'[2, 3, 3, 0, 0, 2, 1, 0, 7, 22, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.117651}", "{'[2, 3, 3, 0, 0, 2, 1, 0, 7, 22, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.117711}", "{'[2, 3, 3, 0, 0, 2, 1, 0, 7, 22, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.117898}", "{'[2, 3, 3, 0, 0, 2, 1, 0, 7, 22, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.117891}", "{'[2, 3, 3, 0, 0, 2, 1, 0, 7, 22, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.118192}", "{'[2, 3, 3, 0, 0, 2, 1, 0, 7, 22, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.117869}", "{'[2, 3, 3, 0, 0, 2, 1, 0, 7, 22, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.118068}", "{'[2, 3, 3, 0, 0, 2, 1, 0, 7, 22, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.117789}", "{'[2, 3, 3, 0, 0, 2, 1, 0, 7, 22, 0, 0, 1, 1, 0, 0, 1, 0]' : 0.117844}"]
returning from 'run': {'[2, 3, 3, 0, 0, 2, 1, 0, 7, 22, 0, 0, 1, 1, 0, 0, 1, 0]': ([0.137486, 0.137309, 0.137221, 0.132769, 0.116636, 0.116503, 0.116653, 0.117046, 0.116628, 0.11654, 0.116421, 0.1167, 0.11685, 0.11642, 0.116444, 0.117068, 0.117352, 0.116492, 0.116689, 0.117001, 0.117996, 0.117651, 0.117711, 0.117898, 0.117891, 0.118192, 0.117869, 0.118068, 0.117789, 0.117844], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 3, 3, 0, 0, 2, 1, 0, 7, 22, 0, 0, 1, 1, 0, 0, 1, 0]': ([0.137486, 0.137309, 0.137221, 0.132769, 0.116636, 0.116503, 0.116653, 0.117046, 0.116628, 0.11654, 0.116421, 0.1167, 0.11685, 0.11642, 0.116444, 0.117068, 0.117352, 0.116492, 0.116689, 0.117001, 0.117996, 0.117651, 0.117711, 0.117898, 0.117891, 0.118192, 0.117869, 0.118068, 0.117789, 0.117844], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		262
        Multiplications: 	78
        Divisions: 		0
        Logical: 		0
        Reads: 			555
        Writes: 		100
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest42.exe __orio_perftest42.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest42.exe  
Program Test Output: 
{'[4, 6, 4, 0, 6, 4, 1, 0, 29, 0, 2, 29, 0, 1, 0, 0, 0, 1]' : 0.215338}
{'[4, 6, 4, 0, 6, 4, 1, 0, 29, 0, 2, 29, 0, 1, 0, 0, 0, 1]' : 0.215231}
{'[4, 6, 4, 0, 6, 4, 1, 0, 29, 0, 2, 29, 0, 1, 0, 0, 0, 1]' : 0.215091}
{'[4, 6, 4, 0, 6, 4, 1, 0, 29, 0, 2, 29, 0, 1, 0, 0, 0, 1]' : 0.18452}
{'[4, 6, 4, 0, 6, 4, 1, 0, 29, 0, 2, 29, 0, 1, 0, 0, 0, 1]' : 0.180562}
{'[4, 6, 4, 0, 6, 4, 1, 0, 29, 0, 2, 29, 0, 1, 0, 0, 0, 1]' : 0.180623}
{'[4, 6, 4, 0, 6, 4, 1, 0, 29, 0, 2, 29, 0, 1, 0, 0, 0, 1]' : 0.180942}
{'[4, 6, 4, 0, 6, 4, 1, 0, 29, 0, 2, 29, 0, 1, 0, 0, 0, 1]' : 0.181122}
{'[4, 6, 4, 0, 6, 4, 1, 0, 29, 0, 2, 29, 0, 1, 0, 0, 0, 1]' : 0.180498}
{'[4, 6, 4, 0, 6, 4, 1, 0, 29, 0, 2, 29, 0, 1, 0, 0, 0, 1]' : 0.180687}
{'[4, 6, 4, 0, 6, 4, 1, 0, 29, 0, 2, 29, 0, 1, 0, 0, 0, 1]' : 0.180784}
{'[4, 6, 4, 0, 6, 4, 1, 0, 29, 0, 2, 29, 0, 1, 0, 0, 0, 1]' : 0.180835}
{'[4, 6, 4, 0, 6, 4, 1, 0, 29, 0, 2, 29, 0, 1, 0, 0, 0, 1]' : 0.180908}
{'[4, 6, 4, 0, 6, 4, 1, 0, 29, 0, 2, 29, 0, 1, 0, 0, 0, 1]' : 0.18081}
{'[4, 6, 4, 0, 6, 4, 1, 0, 29, 0, 2, 29, 0, 1, 0, 0, 0, 1]' : 0.180657}
{'[4, 6, 4, 0, 6, 4, 1, 0, 29, 0, 2, 29, 0, 1, 0, 0, 0, 1]' : 0.181063}
{'[4, 6, 4, 0, 6, 4, 1, 0, 29, 0, 2, 29, 0, 1, 0, 0, 0, 1]' : 0.181034}
{'[4, 6, 4, 0, 6, 4, 1, 0, 29, 0, 2, 29, 0, 1, 0, 0, 0, 1]' : 0.180965}
{'[4, 6, 4, 0, 6, 4, 1, 0, 29, 0, 2, 29, 0, 1, 0, 0, 0, 1]' : 0.181088}
{'[4, 6, 4, 0, 6, 4, 1, 0, 29, 0, 2, 29, 0, 1, 0, 0, 0, 1]' : 0.181085}
{'[4, 6, 4, 0, 6, 4, 1, 0, 29, 0, 2, 29, 0, 1, 0, 0, 0, 1]' : 0.181223}
{'[4, 6, 4, 0, 6, 4, 1, 0, 29, 0, 2, 29, 0, 1, 0, 0, 0, 1]' : 0.181058}
{'[4, 6, 4, 0, 6, 4, 1, 0, 29, 0, 2, 29, 0, 1, 0, 0, 0, 1]' : 0.181101}
{'[4, 6, 4, 0, 6, 4, 1, 0, 29, 0, 2, 29, 0, 1, 0, 0, 0, 1]' : 0.180862}
{'[4, 6, 4, 0, 6, 4, 1, 0, 29, 0, 2, 29, 0, 1, 0, 0, 0, 1]' : 0.18116}
{'[4, 6, 4, 0, 6, 4, 1, 0, 29, 0, 2, 29, 0, 1, 0, 0, 0, 1]' : 0.181715}
{'[4, 6, 4, 0, 6, 4, 1, 0, 29, 0, 2, 29, 0, 1, 0, 0, 0, 1]' : 0.180976}
{'[4, 6, 4, 0, 6, 4, 1, 0, 29, 0, 2, 29, 0, 1, 0, 0, 0, 1]' : 0.18107}
{'[4, 6, 4, 0, 6, 4, 1, 0, 29, 0, 2, 29, 0, 1, 0, 0, 0, 1]' : 0.181073}
{'[4, 6, 4, 0, 6, 4, 1, 0, 29, 0, 2, 29, 0, 1, 0, 0, 0, 1]' : 0.181126}

out:
 ["{'[4, 6, 4, 0, 6, 4, 1, 0, 29, 0, 2, 29, 0, 1, 0, 0, 0, 1]' : 0.215338}", "{'[4, 6, 4, 0, 6, 4, 1, 0, 29, 0, 2, 29, 0, 1, 0, 0, 0, 1]' : 0.215231}", "{'[4, 6, 4, 0, 6, 4, 1, 0, 29, 0, 2, 29, 0, 1, 0, 0, 0, 1]' : 0.215091}", "{'[4, 6, 4, 0, 6, 4, 1, 0, 29, 0, 2, 29, 0, 1, 0, 0, 0, 1]' : 0.18452}", "{'[4, 6, 4, 0, 6, 4, 1, 0, 29, 0, 2, 29, 0, 1, 0, 0, 0, 1]' : 0.180562}", "{'[4, 6, 4, 0, 6, 4, 1, 0, 29, 0, 2, 29, 0, 1, 0, 0, 0, 1]' : 0.180623}", "{'[4, 6, 4, 0, 6, 4, 1, 0, 29, 0, 2, 29, 0, 1, 0, 0, 0, 1]' : 0.180942}", "{'[4, 6, 4, 0, 6, 4, 1, 0, 29, 0, 2, 29, 0, 1, 0, 0, 0, 1]' : 0.181122}", "{'[4, 6, 4, 0, 6, 4, 1, 0, 29, 0, 2, 29, 0, 1, 0, 0, 0, 1]' : 0.180498}", "{'[4, 6, 4, 0, 6, 4, 1, 0, 29, 0, 2, 29, 0, 1, 0, 0, 0, 1]' : 0.180687}", "{'[4, 6, 4, 0, 6, 4, 1, 0, 29, 0, 2, 29, 0, 1, 0, 0, 0, 1]' : 0.180784}", "{'[4, 6, 4, 0, 6, 4, 1, 0, 29, 0, 2, 29, 0, 1, 0, 0, 0, 1]' : 0.180835}", "{'[4, 6, 4, 0, 6, 4, 1, 0, 29, 0, 2, 29, 0, 1, 0, 0, 0, 1]' : 0.180908}", "{'[4, 6, 4, 0, 6, 4, 1, 0, 29, 0, 2, 29, 0, 1, 0, 0, 0, 1]' : 0.18081}", "{'[4, 6, 4, 0, 6, 4, 1, 0, 29, 0, 2, 29, 0, 1, 0, 0, 0, 1]' : 0.180657}", "{'[4, 6, 4, 0, 6, 4, 1, 0, 29, 0, 2, 29, 0, 1, 0, 0, 0, 1]' : 0.181063}", "{'[4, 6, 4, 0, 6, 4, 1, 0, 29, 0, 2, 29, 0, 1, 0, 0, 0, 1]' : 0.181034}", "{'[4, 6, 4, 0, 6, 4, 1, 0, 29, 0, 2, 29, 0, 1, 0, 0, 0, 1]' : 0.180965}", "{'[4, 6, 4, 0, 6, 4, 1, 0, 29, 0, 2, 29, 0, 1, 0, 0, 0, 1]' : 0.181088}", "{'[4, 6, 4, 0, 6, 4, 1, 0, 29, 0, 2, 29, 0, 1, 0, 0, 0, 1]' : 0.181085}", "{'[4, 6, 4, 0, 6, 4, 1, 0, 29, 0, 2, 29, 0, 1, 0, 0, 0, 1]' : 0.181223}", "{'[4, 6, 4, 0, 6, 4, 1, 0, 29, 0, 2, 29, 0, 1, 0, 0, 0, 1]' : 0.181058}", "{'[4, 6, 4, 0, 6, 4, 1, 0, 29, 0, 2, 29, 0, 1, 0, 0, 0, 1]' : 0.181101}", "{'[4, 6, 4, 0, 6, 4, 1, 0, 29, 0, 2, 29, 0, 1, 0, 0, 0, 1]' : 0.180862}", "{'[4, 6, 4, 0, 6, 4, 1, 0, 29, 0, 2, 29, 0, 1, 0, 0, 0, 1]' : 0.18116}", "{'[4, 6, 4, 0, 6, 4, 1, 0, 29, 0, 2, 29, 0, 1, 0, 0, 0, 1]' : 0.181715}", "{'[4, 6, 4, 0, 6, 4, 1, 0, 29, 0, 2, 29, 0, 1, 0, 0, 0, 1]' : 0.180976}", "{'[4, 6, 4, 0, 6, 4, 1, 0, 29, 0, 2, 29, 0, 1, 0, 0, 0, 1]' : 0.18107}", "{'[4, 6, 4, 0, 6, 4, 1, 0, 29, 0, 2, 29, 0, 1, 0, 0, 0, 1]' : 0.181073}", "{'[4, 6, 4, 0, 6, 4, 1, 0, 29, 0, 2, 29, 0, 1, 0, 0, 0, 1]' : 0.181126}"]
returning from 'run': {'[4, 6, 4, 0, 6, 4, 1, 0, 29, 0, 2, 29, 0, 1, 0, 0, 0, 1]': ([0.215338, 0.215231, 0.215091, 0.18452, 0.180562, 0.180623, 0.180942, 0.181122, 0.180498, 0.180687, 0.180784, 0.180835, 0.180908, 0.18081, 0.180657, 0.181063, 0.181034, 0.180965, 0.181088, 0.181085, 0.181223, 0.181058, 0.181101, 0.180862, 0.18116, 0.181715, 0.180976, 0.18107, 0.181073, 0.181126], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 6, 4, 0, 6, 4, 1, 0, 29, 0, 2, 29, 0, 1, 0, 0, 0, 1]': ([0.215338, 0.215231, 0.215091, 0.18452, 0.180562, 0.180623, 0.180942, 0.181122, 0.180498, 0.180687, 0.180784, 0.180835, 0.180908, 0.18081, 0.180657, 0.181063, 0.181034, 0.180965, 0.181088, 0.181085, 0.181223, 0.181058, 0.181101, 0.180862, 0.18116, 0.181715, 0.180976, 0.18107, 0.181073, 0.181126], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = iii
Code stats:
        Number of loops: 	67
        Max loop nest depth: 	5
        Additions: 		7096
        Multiplications: 	3050
        Divisions: 		0
        Logical: 		0
        Reads: 			12415
        Writes: 		1852
        Comparisons:		67
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest43.exe __orio_perftest43.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest43.exe  
Program Test Output: 
{'[5, 5, 6, 3, 6, 6, 0, 0, 1, 23, 26, 0, 0, 2, 0, 1, 0, 1]' : 0.171576}
{'[5, 5, 6, 3, 6, 6, 0, 0, 1, 23, 26, 0, 0, 2, 0, 1, 0, 1]' : 0.171599}
{'[5, 5, 6, 3, 6, 6, 0, 0, 1, 23, 26, 0, 0, 2, 0, 1, 0, 1]' : 0.171506}
{'[5, 5, 6, 3, 6, 6, 0, 0, 1, 23, 26, 0, 0, 2, 0, 1, 0, 1]' : 0.154783}
{'[5, 5, 6, 3, 6, 6, 0, 0, 1, 23, 26, 0, 0, 2, 0, 1, 0, 1]' : 0.145459}
{'[5, 5, 6, 3, 6, 6, 0, 0, 1, 23, 26, 0, 0, 2, 0, 1, 0, 1]' : 0.145247}
{'[5, 5, 6, 3, 6, 6, 0, 0, 1, 23, 26, 0, 0, 2, 0, 1, 0, 1]' : 0.145245}
{'[5, 5, 6, 3, 6, 6, 0, 0, 1, 23, 26, 0, 0, 2, 0, 1, 0, 1]' : 0.145355}
{'[5, 5, 6, 3, 6, 6, 0, 0, 1, 23, 26, 0, 0, 2, 0, 1, 0, 1]' : 0.145412}
{'[5, 5, 6, 3, 6, 6, 0, 0, 1, 23, 26, 0, 0, 2, 0, 1, 0, 1]' : 0.145861}
{'[5, 5, 6, 3, 6, 6, 0, 0, 1, 23, 26, 0, 0, 2, 0, 1, 0, 1]' : 0.145623}
{'[5, 5, 6, 3, 6, 6, 0, 0, 1, 23, 26, 0, 0, 2, 0, 1, 0, 1]' : 0.1455}
{'[5, 5, 6, 3, 6, 6, 0, 0, 1, 23, 26, 0, 0, 2, 0, 1, 0, 1]' : 0.145216}
{'[5, 5, 6, 3, 6, 6, 0, 0, 1, 23, 26, 0, 0, 2, 0, 1, 0, 1]' : 0.145226}
{'[5, 5, 6, 3, 6, 6, 0, 0, 1, 23, 26, 0, 0, 2, 0, 1, 0, 1]' : 0.145215}
{'[5, 5, 6, 3, 6, 6, 0, 0, 1, 23, 26, 0, 0, 2, 0, 1, 0, 1]' : 0.145212}
{'[5, 5, 6, 3, 6, 6, 0, 0, 1, 23, 26, 0, 0, 2, 0, 1, 0, 1]' : 0.145188}
{'[5, 5, 6, 3, 6, 6, 0, 0, 1, 23, 26, 0, 0, 2, 0, 1, 0, 1]' : 0.145369}
{'[5, 5, 6, 3, 6, 6, 0, 0, 1, 23, 26, 0, 0, 2, 0, 1, 0, 1]' : 0.145464}
{'[5, 5, 6, 3, 6, 6, 0, 0, 1, 23, 26, 0, 0, 2, 0, 1, 0, 1]' : 0.145704}
{'[5, 5, 6, 3, 6, 6, 0, 0, 1, 23, 26, 0, 0, 2, 0, 1, 0, 1]' : 0.145437}
{'[5, 5, 6, 3, 6, 6, 0, 0, 1, 23, 26, 0, 0, 2, 0, 1, 0, 1]' : 0.145177}
{'[5, 5, 6, 3, 6, 6, 0, 0, 1, 23, 26, 0, 0, 2, 0, 1, 0, 1]' : 0.145278}
{'[5, 5, 6, 3, 6, 6, 0, 0, 1, 23, 26, 0, 0, 2, 0, 1, 0, 1]' : 0.145432}
{'[5, 5, 6, 3, 6, 6, 0, 0, 1, 23, 26, 0, 0, 2, 0, 1, 0, 1]' : 0.145382}
{'[5, 5, 6, 3, 6, 6, 0, 0, 1, 23, 26, 0, 0, 2, 0, 1, 0, 1]' : 0.145327}
{'[5, 5, 6, 3, 6, 6, 0, 0, 1, 23, 26, 0, 0, 2, 0, 1, 0, 1]' : 0.145734}
{'[5, 5, 6, 3, 6, 6, 0, 0, 1, 23, 26, 0, 0, 2, 0, 1, 0, 1]' : 0.145245}
{'[5, 5, 6, 3, 6, 6, 0, 0, 1, 23, 26, 0, 0, 2, 0, 1, 0, 1]' : 0.14529}
{'[5, 5, 6, 3, 6, 6, 0, 0, 1, 23, 26, 0, 0, 2, 0, 1, 0, 1]' : 0.145506}

out:
 ["{'[5, 5, 6, 3, 6, 6, 0, 0, 1, 23, 26, 0, 0, 2, 0, 1, 0, 1]' : 0.171576}", "{'[5, 5, 6, 3, 6, 6, 0, 0, 1, 23, 26, 0, 0, 2, 0, 1, 0, 1]' : 0.171599}", "{'[5, 5, 6, 3, 6, 6, 0, 0, 1, 23, 26, 0, 0, 2, 0, 1, 0, 1]' : 0.171506}", "{'[5, 5, 6, 3, 6, 6, 0, 0, 1, 23, 26, 0, 0, 2, 0, 1, 0, 1]' : 0.154783}", "{'[5, 5, 6, 3, 6, 6, 0, 0, 1, 23, 26, 0, 0, 2, 0, 1, 0, 1]' : 0.145459}", "{'[5, 5, 6, 3, 6, 6, 0, 0, 1, 23, 26, 0, 0, 2, 0, 1, 0, 1]' : 0.145247}", "{'[5, 5, 6, 3, 6, 6, 0, 0, 1, 23, 26, 0, 0, 2, 0, 1, 0, 1]' : 0.145245}", "{'[5, 5, 6, 3, 6, 6, 0, 0, 1, 23, 26, 0, 0, 2, 0, 1, 0, 1]' : 0.145355}", "{'[5, 5, 6, 3, 6, 6, 0, 0, 1, 23, 26, 0, 0, 2, 0, 1, 0, 1]' : 0.145412}", "{'[5, 5, 6, 3, 6, 6, 0, 0, 1, 23, 26, 0, 0, 2, 0, 1, 0, 1]' : 0.145861}", "{'[5, 5, 6, 3, 6, 6, 0, 0, 1, 23, 26, 0, 0, 2, 0, 1, 0, 1]' : 0.145623}", "{'[5, 5, 6, 3, 6, 6, 0, 0, 1, 23, 26, 0, 0, 2, 0, 1, 0, 1]' : 0.1455}", "{'[5, 5, 6, 3, 6, 6, 0, 0, 1, 23, 26, 0, 0, 2, 0, 1, 0, 1]' : 0.145216}", "{'[5, 5, 6, 3, 6, 6, 0, 0, 1, 23, 26, 0, 0, 2, 0, 1, 0, 1]' : 0.145226}", "{'[5, 5, 6, 3, 6, 6, 0, 0, 1, 23, 26, 0, 0, 2, 0, 1, 0, 1]' : 0.145215}", "{'[5, 5, 6, 3, 6, 6, 0, 0, 1, 23, 26, 0, 0, 2, 0, 1, 0, 1]' : 0.145212}", "{'[5, 5, 6, 3, 6, 6, 0, 0, 1, 23, 26, 0, 0, 2, 0, 1, 0, 1]' : 0.145188}", "{'[5, 5, 6, 3, 6, 6, 0, 0, 1, 23, 26, 0, 0, 2, 0, 1, 0, 1]' : 0.145369}", "{'[5, 5, 6, 3, 6, 6, 0, 0, 1, 23, 26, 0, 0, 2, 0, 1, 0, 1]' : 0.145464}", "{'[5, 5, 6, 3, 6, 6, 0, 0, 1, 23, 26, 0, 0, 2, 0, 1, 0, 1]' : 0.145704}", "{'[5, 5, 6, 3, 6, 6, 0, 0, 1, 23, 26, 0, 0, 2, 0, 1, 0, 1]' : 0.145437}", "{'[5, 5, 6, 3, 6, 6, 0, 0, 1, 23, 26, 0, 0, 2, 0, 1, 0, 1]' : 0.145177}", "{'[5, 5, 6, 3, 6, 6, 0, 0, 1, 23, 26, 0, 0, 2, 0, 1, 0, 1]' : 0.145278}", "{'[5, 5, 6, 3, 6, 6, 0, 0, 1, 23, 26, 0, 0, 2, 0, 1, 0, 1]' : 0.145432}", "{'[5, 5, 6, 3, 6, 6, 0, 0, 1, 23, 26, 0, 0, 2, 0, 1, 0, 1]' : 0.145382}", "{'[5, 5, 6, 3, 6, 6, 0, 0, 1, 23, 26, 0, 0, 2, 0, 1, 0, 1]' : 0.145327}", "{'[5, 5, 6, 3, 6, 6, 0, 0, 1, 23, 26, 0, 0, 2, 0, 1, 0, 1]' : 0.145734}", "{'[5, 5, 6, 3, 6, 6, 0, 0, 1, 23, 26, 0, 0, 2, 0, 1, 0, 1]' : 0.145245}", "{'[5, 5, 6, 3, 6, 6, 0, 0, 1, 23, 26, 0, 0, 2, 0, 1, 0, 1]' : 0.14529}", "{'[5, 5, 6, 3, 6, 6, 0, 0, 1, 23, 26, 0, 0, 2, 0, 1, 0, 1]' : 0.145506}"]
returning from 'run': {'[5, 5, 6, 3, 6, 6, 0, 0, 1, 23, 26, 0, 0, 2, 0, 1, 0, 1]': ([0.171576, 0.171599, 0.171506, 0.154783, 0.145459, 0.145247, 0.145245, 0.145355, 0.145412, 0.145861, 0.145623, 0.1455, 0.145216, 0.145226, 0.145215, 0.145212, 0.145188, 0.145369, 0.145464, 0.145704, 0.145437, 0.145177, 0.145278, 0.145432, 0.145382, 0.145327, 0.145734, 0.145245, 0.14529, 0.145506], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 5, 6, 3, 6, 6, 0, 0, 1, 23, 26, 0, 0, 2, 0, 1, 0, 1]': ([0.171576, 0.171599, 0.171506, 0.154783, 0.145459, 0.145247, 0.145245, 0.145355, 0.145412, 0.145861, 0.145623, 0.1455, 0.145216, 0.145226, 0.145215, 0.145212, 0.145188, 0.145369, 0.145464, 0.145704, 0.145437, 0.145177, 0.145278, 0.145432, 0.145382, 0.145327, 0.145734, 0.145245, 0.14529, 0.145506], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	4
        Additions: 		1790
        Multiplications: 	544
        Divisions: 		0
        Logical: 		0
        Reads: 			2816
        Writes: 		307
        Comparisons:		10
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest44.exe __orio_perftest44.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest44.exe  
Program Test Output: 
{'[0, 6, 2, 0, 6, 0, 0, 0, 4, 29, 0, 23, 1, 0, 1, 0, 1, 1]' : 0.112793}
{'[0, 6, 2, 0, 6, 0, 0, 0, 4, 29, 0, 23, 1, 0, 1, 0, 1, 1]' : 0.113513}
{'[0, 6, 2, 0, 6, 0, 0, 0, 4, 29, 0, 23, 1, 0, 1, 0, 1, 1]' : 0.113205}
{'[0, 6, 2, 0, 6, 0, 0, 0, 4, 29, 0, 23, 1, 0, 1, 0, 1, 1]' : 0.113301}
{'[0, 6, 2, 0, 6, 0, 0, 0, 4, 29, 0, 23, 1, 0, 1, 0, 1, 1]' : 0.113176}
{'[0, 6, 2, 0, 6, 0, 0, 0, 4, 29, 0, 23, 1, 0, 1, 0, 1, 1]' : 0.113267}
{'[0, 6, 2, 0, 6, 0, 0, 0, 4, 29, 0, 23, 1, 0, 1, 0, 1, 1]' : 0.112949}
{'[0, 6, 2, 0, 6, 0, 0, 0, 4, 29, 0, 23, 1, 0, 1, 0, 1, 1]' : 0.113226}
{'[0, 6, 2, 0, 6, 0, 0, 0, 4, 29, 0, 23, 1, 0, 1, 0, 1, 1]' : 0.112459}
{'[0, 6, 2, 0, 6, 0, 0, 0, 4, 29, 0, 23, 1, 0, 1, 0, 1, 1]' : 0.113275}
{'[0, 6, 2, 0, 6, 0, 0, 0, 4, 29, 0, 23, 1, 0, 1, 0, 1, 1]' : 0.112931}
{'[0, 6, 2, 0, 6, 0, 0, 0, 4, 29, 0, 23, 1, 0, 1, 0, 1, 1]' : 0.113431}
{'[0, 6, 2, 0, 6, 0, 0, 0, 4, 29, 0, 23, 1, 0, 1, 0, 1, 1]' : 0.113428}
{'[0, 6, 2, 0, 6, 0, 0, 0, 4, 29, 0, 23, 1, 0, 1, 0, 1, 1]' : 0.113251}
{'[0, 6, 2, 0, 6, 0, 0, 0, 4, 29, 0, 23, 1, 0, 1, 0, 1, 1]' : 0.112953}
{'[0, 6, 2, 0, 6, 0, 0, 0, 4, 29, 0, 23, 1, 0, 1, 0, 1, 1]' : 0.113055}
{'[0, 6, 2, 0, 6, 0, 0, 0, 4, 29, 0, 23, 1, 0, 1, 0, 1, 1]' : 0.112819}
{'[0, 6, 2, 0, 6, 0, 0, 0, 4, 29, 0, 23, 1, 0, 1, 0, 1, 1]' : 0.112453}
{'[0, 6, 2, 0, 6, 0, 0, 0, 4, 29, 0, 23, 1, 0, 1, 0, 1, 1]' : 0.112596}
{'[0, 6, 2, 0, 6, 0, 0, 0, 4, 29, 0, 23, 1, 0, 1, 0, 1, 1]' : 0.113079}
{'[0, 6, 2, 0, 6, 0, 0, 0, 4, 29, 0, 23, 1, 0, 1, 0, 1, 1]' : 0.113152}
{'[0, 6, 2, 0, 6, 0, 0, 0, 4, 29, 0, 23, 1, 0, 1, 0, 1, 1]' : 0.113366}
{'[0, 6, 2, 0, 6, 0, 0, 0, 4, 29, 0, 23, 1, 0, 1, 0, 1, 1]' : 0.113546}
{'[0, 6, 2, 0, 6, 0, 0, 0, 4, 29, 0, 23, 1, 0, 1, 0, 1, 1]' : 0.113178}
{'[0, 6, 2, 0, 6, 0, 0, 0, 4, 29, 0, 23, 1, 0, 1, 0, 1, 1]' : 0.113038}
{'[0, 6, 2, 0, 6, 0, 0, 0, 4, 29, 0, 23, 1, 0, 1, 0, 1, 1]' : 0.112944}
{'[0, 6, 2, 0, 6, 0, 0, 0, 4, 29, 0, 23, 1, 0, 1, 0, 1, 1]' : 0.112318}
{'[0, 6, 2, 0, 6, 0, 0, 0, 4, 29, 0, 23, 1, 0, 1, 0, 1, 1]' : 0.112673}
{'[0, 6, 2, 0, 6, 0, 0, 0, 4, 29, 0, 23, 1, 0, 1, 0, 1, 1]' : 0.112997}
{'[0, 6, 2, 0, 6, 0, 0, 0, 4, 29, 0, 23, 1, 0, 1, 0, 1, 1]' : 0.113082}

out:
 ["{'[0, 6, 2, 0, 6, 0, 0, 0, 4, 29, 0, 23, 1, 0, 1, 0, 1, 1]' : 0.112793}", "{'[0, 6, 2, 0, 6, 0, 0, 0, 4, 29, 0, 23, 1, 0, 1, 0, 1, 1]' : 0.113513}", "{'[0, 6, 2, 0, 6, 0, 0, 0, 4, 29, 0, 23, 1, 0, 1, 0, 1, 1]' : 0.113205}", "{'[0, 6, 2, 0, 6, 0, 0, 0, 4, 29, 0, 23, 1, 0, 1, 0, 1, 1]' : 0.113301}", "{'[0, 6, 2, 0, 6, 0, 0, 0, 4, 29, 0, 23, 1, 0, 1, 0, 1, 1]' : 0.113176}", "{'[0, 6, 2, 0, 6, 0, 0, 0, 4, 29, 0, 23, 1, 0, 1, 0, 1, 1]' : 0.113267}", "{'[0, 6, 2, 0, 6, 0, 0, 0, 4, 29, 0, 23, 1, 0, 1, 0, 1, 1]' : 0.112949}", "{'[0, 6, 2, 0, 6, 0, 0, 0, 4, 29, 0, 23, 1, 0, 1, 0, 1, 1]' : 0.113226}", "{'[0, 6, 2, 0, 6, 0, 0, 0, 4, 29, 0, 23, 1, 0, 1, 0, 1, 1]' : 0.112459}", "{'[0, 6, 2, 0, 6, 0, 0, 0, 4, 29, 0, 23, 1, 0, 1, 0, 1, 1]' : 0.113275}", "{'[0, 6, 2, 0, 6, 0, 0, 0, 4, 29, 0, 23, 1, 0, 1, 0, 1, 1]' : 0.112931}", "{'[0, 6, 2, 0, 6, 0, 0, 0, 4, 29, 0, 23, 1, 0, 1, 0, 1, 1]' : 0.113431}", "{'[0, 6, 2, 0, 6, 0, 0, 0, 4, 29, 0, 23, 1, 0, 1, 0, 1, 1]' : 0.113428}", "{'[0, 6, 2, 0, 6, 0, 0, 0, 4, 29, 0, 23, 1, 0, 1, 0, 1, 1]' : 0.113251}", "{'[0, 6, 2, 0, 6, 0, 0, 0, 4, 29, 0, 23, 1, 0, 1, 0, 1, 1]' : 0.112953}", "{'[0, 6, 2, 0, 6, 0, 0, 0, 4, 29, 0, 23, 1, 0, 1, 0, 1, 1]' : 0.113055}", "{'[0, 6, 2, 0, 6, 0, 0, 0, 4, 29, 0, 23, 1, 0, 1, 0, 1, 1]' : 0.112819}", "{'[0, 6, 2, 0, 6, 0, 0, 0, 4, 29, 0, 23, 1, 0, 1, 0, 1, 1]' : 0.112453}", "{'[0, 6, 2, 0, 6, 0, 0, 0, 4, 29, 0, 23, 1, 0, 1, 0, 1, 1]' : 0.112596}", "{'[0, 6, 2, 0, 6, 0, 0, 0, 4, 29, 0, 23, 1, 0, 1, 0, 1, 1]' : 0.113079}", "{'[0, 6, 2, 0, 6, 0, 0, 0, 4, 29, 0, 23, 1, 0, 1, 0, 1, 1]' : 0.113152}", "{'[0, 6, 2, 0, 6, 0, 0, 0, 4, 29, 0, 23, 1, 0, 1, 0, 1, 1]' : 0.113366}", "{'[0, 6, 2, 0, 6, 0, 0, 0, 4, 29, 0, 23, 1, 0, 1, 0, 1, 1]' : 0.113546}", "{'[0, 6, 2, 0, 6, 0, 0, 0, 4, 29, 0, 23, 1, 0, 1, 0, 1, 1]' : 0.113178}", "{'[0, 6, 2, 0, 6, 0, 0, 0, 4, 29, 0, 23, 1, 0, 1, 0, 1, 1]' : 0.113038}", "{'[0, 6, 2, 0, 6, 0, 0, 0, 4, 29, 0, 23, 1, 0, 1, 0, 1, 1]' : 0.112944}", "{'[0, 6, 2, 0, 6, 0, 0, 0, 4, 29, 0, 23, 1, 0, 1, 0, 1, 1]' : 0.112318}", "{'[0, 6, 2, 0, 6, 0, 0, 0, 4, 29, 0, 23, 1, 0, 1, 0, 1, 1]' : 0.112673}", "{'[0, 6, 2, 0, 6, 0, 0, 0, 4, 29, 0, 23, 1, 0, 1, 0, 1, 1]' : 0.112997}", "{'[0, 6, 2, 0, 6, 0, 0, 0, 4, 29, 0, 23, 1, 0, 1, 0, 1, 1]' : 0.113082}"]
returning from 'run': {'[0, 6, 2, 0, 6, 0, 0, 0, 4, 29, 0, 23, 1, 0, 1, 0, 1, 1]': ([0.112793, 0.113513, 0.113205, 0.113301, 0.113176, 0.113267, 0.112949, 0.113226, 0.112459, 0.113275, 0.112931, 0.113431, 0.113428, 0.113251, 0.112953, 0.113055, 0.112819, 0.112453, 0.112596, 0.113079, 0.113152, 0.113366, 0.113546, 0.113178, 0.113038, 0.112944, 0.112318, 0.112673, 0.112997, 0.113082], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 2, 0, 6, 0, 0, 0, 4, 29, 0, 23, 1, 0, 1, 0, 1, 1]': ([0.112793, 0.113513, 0.113205, 0.113301, 0.113176, 0.113267, 0.112949, 0.113226, 0.112459, 0.113275, 0.112931, 0.113431, 0.113428, 0.113251, 0.112953, 0.113055, 0.112819, 0.112453, 0.112596, 0.113079, 0.113152, 0.113366, 0.113546, 0.113178, 0.113038, 0.112944, 0.112318, 0.112673, 0.112997, 0.113082], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	48
        Max loop nest depth: 	6
        Additions: 		1419
        Multiplications: 	322
        Divisions: 		0
        Logical: 		0
        Reads: 			2352
        Writes: 		310
        Comparisons:		48
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest45.exe __orio_perftest45.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest45.exe  
Program Test Output: 
{'[1, 2, 6, 6, 6, 0, 1, 1, 0, 5, 13, 0, 0, 0, 1, 0, 1, 1]' : 0.201435}
{'[1, 2, 6, 6, 6, 0, 1, 1, 0, 5, 13, 0, 0, 0, 1, 0, 1, 1]' : 0.201654}
{'[1, 2, 6, 6, 6, 0, 1, 1, 0, 5, 13, 0, 0, 0, 1, 0, 1, 1]' : 0.201191}
{'[1, 2, 6, 6, 6, 0, 1, 1, 0, 5, 13, 0, 0, 0, 1, 0, 1, 1]' : 0.201077}
{'[1, 2, 6, 6, 6, 0, 1, 1, 0, 5, 13, 0, 0, 0, 1, 0, 1, 1]' : 0.201258}
{'[1, 2, 6, 6, 6, 0, 1, 1, 0, 5, 13, 0, 0, 0, 1, 0, 1, 1]' : 0.201308}
{'[1, 2, 6, 6, 6, 0, 1, 1, 0, 5, 13, 0, 0, 0, 1, 0, 1, 1]' : 0.201638}
{'[1, 2, 6, 6, 6, 0, 1, 1, 0, 5, 13, 0, 0, 0, 1, 0, 1, 1]' : 0.201215}
{'[1, 2, 6, 6, 6, 0, 1, 1, 0, 5, 13, 0, 0, 0, 1, 0, 1, 1]' : 0.201217}
{'[1, 2, 6, 6, 6, 0, 1, 1, 0, 5, 13, 0, 0, 0, 1, 0, 1, 1]' : 0.201331}
{'[1, 2, 6, 6, 6, 0, 1, 1, 0, 5, 13, 0, 0, 0, 1, 0, 1, 1]' : 0.201359}
{'[1, 2, 6, 6, 6, 0, 1, 1, 0, 5, 13, 0, 0, 0, 1, 0, 1, 1]' : 0.201182}
{'[1, 2, 6, 6, 6, 0, 1, 1, 0, 5, 13, 0, 0, 0, 1, 0, 1, 1]' : 0.201601}
{'[1, 2, 6, 6, 6, 0, 1, 1, 0, 5, 13, 0, 0, 0, 1, 0, 1, 1]' : 0.201296}
{'[1, 2, 6, 6, 6, 0, 1, 1, 0, 5, 13, 0, 0, 0, 1, 0, 1, 1]' : 0.201104}
{'[1, 2, 6, 6, 6, 0, 1, 1, 0, 5, 13, 0, 0, 0, 1, 0, 1, 1]' : 0.201536}
{'[1, 2, 6, 6, 6, 0, 1, 1, 0, 5, 13, 0, 0, 0, 1, 0, 1, 1]' : 0.201177}
{'[1, 2, 6, 6, 6, 0, 1, 1, 0, 5, 13, 0, 0, 0, 1, 0, 1, 1]' : 0.201579}
{'[1, 2, 6, 6, 6, 0, 1, 1, 0, 5, 13, 0, 0, 0, 1, 0, 1, 1]' : 0.201228}
{'[1, 2, 6, 6, 6, 0, 1, 1, 0, 5, 13, 0, 0, 0, 1, 0, 1, 1]' : 0.201991}
{'[1, 2, 6, 6, 6, 0, 1, 1, 0, 5, 13, 0, 0, 0, 1, 0, 1, 1]' : 0.201191}
{'[1, 2, 6, 6, 6, 0, 1, 1, 0, 5, 13, 0, 0, 0, 1, 0, 1, 1]' : 0.201351}
{'[1, 2, 6, 6, 6, 0, 1, 1, 0, 5, 13, 0, 0, 0, 1, 0, 1, 1]' : 0.201454}
{'[1, 2, 6, 6, 6, 0, 1, 1, 0, 5, 13, 0, 0, 0, 1, 0, 1, 1]' : 0.201397}
{'[1, 2, 6, 6, 6, 0, 1, 1, 0, 5, 13, 0, 0, 0, 1, 0, 1, 1]' : 0.201115}
{'[1, 2, 6, 6, 6, 0, 1, 1, 0, 5, 13, 0, 0, 0, 1, 0, 1, 1]' : 0.201249}
{'[1, 2, 6, 6, 6, 0, 1, 1, 0, 5, 13, 0, 0, 0, 1, 0, 1, 1]' : 0.201297}
{'[1, 2, 6, 6, 6, 0, 1, 1, 0, 5, 13, 0, 0, 0, 1, 0, 1, 1]' : 0.201521}
{'[1, 2, 6, 6, 6, 0, 1, 1, 0, 5, 13, 0, 0, 0, 1, 0, 1, 1]' : 0.201328}
{'[1, 2, 6, 6, 6, 0, 1, 1, 0, 5, 13, 0, 0, 0, 1, 0, 1, 1]' : 0.201524}

out:
 ["{'[1, 2, 6, 6, 6, 0, 1, 1, 0, 5, 13, 0, 0, 0, 1, 0, 1, 1]' : 0.201435}", "{'[1, 2, 6, 6, 6, 0, 1, 1, 0, 5, 13, 0, 0, 0, 1, 0, 1, 1]' : 0.201654}", "{'[1, 2, 6, 6, 6, 0, 1, 1, 0, 5, 13, 0, 0, 0, 1, 0, 1, 1]' : 0.201191}", "{'[1, 2, 6, 6, 6, 0, 1, 1, 0, 5, 13, 0, 0, 0, 1, 0, 1, 1]' : 0.201077}", "{'[1, 2, 6, 6, 6, 0, 1, 1, 0, 5, 13, 0, 0, 0, 1, 0, 1, 1]' : 0.201258}", "{'[1, 2, 6, 6, 6, 0, 1, 1, 0, 5, 13, 0, 0, 0, 1, 0, 1, 1]' : 0.201308}", "{'[1, 2, 6, 6, 6, 0, 1, 1, 0, 5, 13, 0, 0, 0, 1, 0, 1, 1]' : 0.201638}", "{'[1, 2, 6, 6, 6, 0, 1, 1, 0, 5, 13, 0, 0, 0, 1, 0, 1, 1]' : 0.201215}", "{'[1, 2, 6, 6, 6, 0, 1, 1, 0, 5, 13, 0, 0, 0, 1, 0, 1, 1]' : 0.201217}", "{'[1, 2, 6, 6, 6, 0, 1, 1, 0, 5, 13, 0, 0, 0, 1, 0, 1, 1]' : 0.201331}", "{'[1, 2, 6, 6, 6, 0, 1, 1, 0, 5, 13, 0, 0, 0, 1, 0, 1, 1]' : 0.201359}", "{'[1, 2, 6, 6, 6, 0, 1, 1, 0, 5, 13, 0, 0, 0, 1, 0, 1, 1]' : 0.201182}", "{'[1, 2, 6, 6, 6, 0, 1, 1, 0, 5, 13, 0, 0, 0, 1, 0, 1, 1]' : 0.201601}", "{'[1, 2, 6, 6, 6, 0, 1, 1, 0, 5, 13, 0, 0, 0, 1, 0, 1, 1]' : 0.201296}", "{'[1, 2, 6, 6, 6, 0, 1, 1, 0, 5, 13, 0, 0, 0, 1, 0, 1, 1]' : 0.201104}", "{'[1, 2, 6, 6, 6, 0, 1, 1, 0, 5, 13, 0, 0, 0, 1, 0, 1, 1]' : 0.201536}", "{'[1, 2, 6, 6, 6, 0, 1, 1, 0, 5, 13, 0, 0, 0, 1, 0, 1, 1]' : 0.201177}", "{'[1, 2, 6, 6, 6, 0, 1, 1, 0, 5, 13, 0, 0, 0, 1, 0, 1, 1]' : 0.201579}", "{'[1, 2, 6, 6, 6, 0, 1, 1, 0, 5, 13, 0, 0, 0, 1, 0, 1, 1]' : 0.201228}", "{'[1, 2, 6, 6, 6, 0, 1, 1, 0, 5, 13, 0, 0, 0, 1, 0, 1, 1]' : 0.201991}", "{'[1, 2, 6, 6, 6, 0, 1, 1, 0, 5, 13, 0, 0, 0, 1, 0, 1, 1]' : 0.201191}", "{'[1, 2, 6, 6, 6, 0, 1, 1, 0, 5, 13, 0, 0, 0, 1, 0, 1, 1]' : 0.201351}", "{'[1, 2, 6, 6, 6, 0, 1, 1, 0, 5, 13, 0, 0, 0, 1, 0, 1, 1]' : 0.201454}", "{'[1, 2, 6, 6, 6, 0, 1, 1, 0, 5, 13, 0, 0, 0, 1, 0, 1, 1]' : 0.201397}", "{'[1, 2, 6, 6, 6, 0, 1, 1, 0, 5, 13, 0, 0, 0, 1, 0, 1, 1]' : 0.201115}", "{'[1, 2, 6, 6, 6, 0, 1, 1, 0, 5, 13, 0, 0, 0, 1, 0, 1, 1]' : 0.201249}", "{'[1, 2, 6, 6, 6, 0, 1, 1, 0, 5, 13, 0, 0, 0, 1, 0, 1, 1]' : 0.201297}", "{'[1, 2, 6, 6, 6, 0, 1, 1, 0, 5, 13, 0, 0, 0, 1, 0, 1, 1]' : 0.201521}", "{'[1, 2, 6, 6, 6, 0, 1, 1, 0, 5, 13, 0, 0, 0, 1, 0, 1, 1]' : 0.201328}", "{'[1, 2, 6, 6, 6, 0, 1, 1, 0, 5, 13, 0, 0, 0, 1, 0, 1, 1]' : 0.201524}"]
returning from 'run': {'[1, 2, 6, 6, 6, 0, 1, 1, 0, 5, 13, 0, 0, 0, 1, 0, 1, 1]': ([0.201435, 0.201654, 0.201191, 0.201077, 0.201258, 0.201308, 0.201638, 0.201215, 0.201217, 0.201331, 0.201359, 0.201182, 0.201601, 0.201296, 0.201104, 0.201536, 0.201177, 0.201579, 0.201228, 0.201991, 0.201191, 0.201351, 0.201454, 0.201397, 0.201115, 0.201249, 0.201297, 0.201521, 0.201328, 0.201524], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 2, 6, 6, 6, 0, 1, 1, 0, 5, 13, 0, 0, 0, 1, 0, 1, 1]': ([0.201435, 0.201654, 0.201191, 0.201077, 0.201258, 0.201308, 0.201638, 0.201215, 0.201217, 0.201331, 0.201359, 0.201182, 0.201601, 0.201296, 0.201104, 0.201536, 0.201177, 0.201579, 0.201228, 0.201991, 0.201191, 0.201351, 0.201454, 0.201397, 0.201115, 0.201249, 0.201297, 0.201521, 0.201328, 0.201524], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	39
        Max loop nest depth: 	6
        Additions: 		9685
        Multiplications: 	2232
        Divisions: 		0
        Logical: 		0
        Reads: 			13677
        Writes: 		1217
        Comparisons:		39
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest46.exe __orio_perftest46.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest46.exe  
Program Test Output: 
{'[2, 6, 2, 1, 0, 5, 0, 1, 6, 2, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.185605}
{'[2, 6, 2, 1, 0, 5, 0, 1, 6, 2, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.185297}
{'[2, 6, 2, 1, 0, 5, 0, 1, 6, 2, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.185078}
{'[2, 6, 2, 1, 0, 5, 0, 1, 6, 2, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.184232}
{'[2, 6, 2, 1, 0, 5, 0, 1, 6, 2, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.184946}
{'[2, 6, 2, 1, 0, 5, 0, 1, 6, 2, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.184902}
{'[2, 6, 2, 1, 0, 5, 0, 1, 6, 2, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.18476}
{'[2, 6, 2, 1, 0, 5, 0, 1, 6, 2, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.184748}
{'[2, 6, 2, 1, 0, 5, 0, 1, 6, 2, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.184408}
{'[2, 6, 2, 1, 0, 5, 0, 1, 6, 2, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.184814}
{'[2, 6, 2, 1, 0, 5, 0, 1, 6, 2, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.184726}
{'[2, 6, 2, 1, 0, 5, 0, 1, 6, 2, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.184612}
{'[2, 6, 2, 1, 0, 5, 0, 1, 6, 2, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.184144}
{'[2, 6, 2, 1, 0, 5, 0, 1, 6, 2, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.185012}
{'[2, 6, 2, 1, 0, 5, 0, 1, 6, 2, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.185076}
{'[2, 6, 2, 1, 0, 5, 0, 1, 6, 2, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.185906}
{'[2, 6, 2, 1, 0, 5, 0, 1, 6, 2, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.184487}
{'[2, 6, 2, 1, 0, 5, 0, 1, 6, 2, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.185333}
{'[2, 6, 2, 1, 0, 5, 0, 1, 6, 2, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.184883}
{'[2, 6, 2, 1, 0, 5, 0, 1, 6, 2, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.184815}
{'[2, 6, 2, 1, 0, 5, 0, 1, 6, 2, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.184553}
{'[2, 6, 2, 1, 0, 5, 0, 1, 6, 2, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.184543}
{'[2, 6, 2, 1, 0, 5, 0, 1, 6, 2, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.185295}
{'[2, 6, 2, 1, 0, 5, 0, 1, 6, 2, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.185228}
{'[2, 6, 2, 1, 0, 5, 0, 1, 6, 2, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.185014}
{'[2, 6, 2, 1, 0, 5, 0, 1, 6, 2, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.184935}
{'[2, 6, 2, 1, 0, 5, 0, 1, 6, 2, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.185025}
{'[2, 6, 2, 1, 0, 5, 0, 1, 6, 2, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.184834}
{'[2, 6, 2, 1, 0, 5, 0, 1, 6, 2, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.184394}
{'[2, 6, 2, 1, 0, 5, 0, 1, 6, 2, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.185248}

out:
 ["{'[2, 6, 2, 1, 0, 5, 0, 1, 6, 2, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.185605}", "{'[2, 6, 2, 1, 0, 5, 0, 1, 6, 2, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.185297}", "{'[2, 6, 2, 1, 0, 5, 0, 1, 6, 2, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.185078}", "{'[2, 6, 2, 1, 0, 5, 0, 1, 6, 2, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.184232}", "{'[2, 6, 2, 1, 0, 5, 0, 1, 6, 2, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.184946}", "{'[2, 6, 2, 1, 0, 5, 0, 1, 6, 2, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.184902}", "{'[2, 6, 2, 1, 0, 5, 0, 1, 6, 2, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.18476}", "{'[2, 6, 2, 1, 0, 5, 0, 1, 6, 2, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.184748}", "{'[2, 6, 2, 1, 0, 5, 0, 1, 6, 2, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.184408}", "{'[2, 6, 2, 1, 0, 5, 0, 1, 6, 2, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.184814}", "{'[2, 6, 2, 1, 0, 5, 0, 1, 6, 2, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.184726}", "{'[2, 6, 2, 1, 0, 5, 0, 1, 6, 2, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.184612}", "{'[2, 6, 2, 1, 0, 5, 0, 1, 6, 2, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.184144}", "{'[2, 6, 2, 1, 0, 5, 0, 1, 6, 2, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.185012}", "{'[2, 6, 2, 1, 0, 5, 0, 1, 6, 2, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.185076}", "{'[2, 6, 2, 1, 0, 5, 0, 1, 6, 2, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.185906}", "{'[2, 6, 2, 1, 0, 5, 0, 1, 6, 2, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.184487}", "{'[2, 6, 2, 1, 0, 5, 0, 1, 6, 2, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.185333}", "{'[2, 6, 2, 1, 0, 5, 0, 1, 6, 2, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.184883}", "{'[2, 6, 2, 1, 0, 5, 0, 1, 6, 2, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.184815}", "{'[2, 6, 2, 1, 0, 5, 0, 1, 6, 2, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.184553}", "{'[2, 6, 2, 1, 0, 5, 0, 1, 6, 2, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.184543}", "{'[2, 6, 2, 1, 0, 5, 0, 1, 6, 2, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.185295}", "{'[2, 6, 2, 1, 0, 5, 0, 1, 6, 2, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.185228}", "{'[2, 6, 2, 1, 0, 5, 0, 1, 6, 2, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.185014}", "{'[2, 6, 2, 1, 0, 5, 0, 1, 6, 2, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.184935}", "{'[2, 6, 2, 1, 0, 5, 0, 1, 6, 2, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.185025}", "{'[2, 6, 2, 1, 0, 5, 0, 1, 6, 2, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.184834}", "{'[2, 6, 2, 1, 0, 5, 0, 1, 6, 2, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.184394}", "{'[2, 6, 2, 1, 0, 5, 0, 1, 6, 2, 0, 28, 2, 0, 0, 0, 0, 0]' : 0.185248}"]
returning from 'run': {'[2, 6, 2, 1, 0, 5, 0, 1, 6, 2, 0, 28, 2, 0, 0, 0, 0, 0]': ([0.185605, 0.185297, 0.185078, 0.184232, 0.184946, 0.184902, 0.18476, 0.184748, 0.184408, 0.184814, 0.184726, 0.184612, 0.184144, 0.185012, 0.185076, 0.185906, 0.184487, 0.185333, 0.184883, 0.184815, 0.184553, 0.184543, 0.185295, 0.185228, 0.185014, 0.184935, 0.185025, 0.184834, 0.184394, 0.185248], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 6, 2, 1, 0, 5, 0, 1, 6, 2, 0, 28, 2, 0, 0, 0, 0, 0]': ([0.185605, 0.185297, 0.185078, 0.184232, 0.184946, 0.184902, 0.18476, 0.184748, 0.184408, 0.184814, 0.184726, 0.184612, 0.184144, 0.185012, 0.185076, 0.185906, 0.184487, 0.185333, 0.184883, 0.184815, 0.184553, 0.184543, 0.185295, 0.185228, 0.185014, 0.184935, 0.185025, 0.184834, 0.184394, 0.185248], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Complete design, with measurements:
     T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
133     0    3    2    2    6    6       1       1    7   0  13   0    0    0
140     6    5    1    4    6    1       0       0    4   7  27   0    0    0
306     0    5    5    3    5    3       1       1    7  19   4   0    1    1
582     0    1    6    2    0    0       0       0    0  28   0   4    0    0
717     2    2    0    3    6    0       0       1    9   0  19   6    0    2
719     0    6    0    6    0    5       1       0   21  19  13   0    0    0
893     0    1    0    0    3    0       0       1   18   5   0  27    0    1
936     0    0    1    6    3    5       1       1   19   0  25   2    1    1
1095    2    1    5    5    2    3       1       1   12  25  29   0    0    1
1106    5    6    1    6    0    2       1       0   29   0  28  28    0    1
1157    2    0    6    3    0    0       0       0   20   6  19   0    1    1
1390    0    5    4    2    3    6       1       0   29  19   0   0    1    0
1554    2    6    0    4    6    3       1       0   19   0  13   4    1    0
1828    6    0    4    5    6    0       1       0    0  26   5   0    2    0
2229    5    6    2    3    6    0       1       1   11   0   5   5    0    1
2418    6    0    6    6    6    6       1       0   13   5   0   1    0    1
2465    2    6    6    6    0    0       0       1   27   0  20  25    2    0
2949    0    2    2    3    2    2       0       1    0   1  27   0    1    0
3005    4    3    6    2    2    6       0       0   26   0   2  20    0    0
3015    0    1    2    5    0    3       0       0    6   0  10  24    1    0
3215    6    4    1    6    5    0       1       0    6  25   0  24    0    0
3270    5    3    0    4    2    0       1       0   25   5   0   5    1    0
3279    1    3    0    4    3    6       0       0   13   0   0   0    0    1
3470    6    6    0    6    4    2       0       1   10   0   3   0    0    2
3471    6    6    3    0    0    4       1       1   27  25  10   0    1    0
3579    4    3    6    6    2    4       0       1    7  26   0  11    1    0
3725    5    0    4    0    5    5       0       1   28   0  23  22    0    0
3961    3    4    5    1    0    0       0       1    0  25  23   0    1    1
3966    2    6    2    1    4    1       0       0    0   0  20   5    0    0
4047    2    3    3    0    0    2       1       0    7  22   0   0    1    1
4110    4    6    4    0    6    4       1       0   29   0   2  29    0    1
4308    5    5    6    3    6    6       0       0    1  23  26   0    0    2
4340    0    6    2    0    6    0       0       0    4  29   0  23    1    0
4447    1    2    6    6    6    0       1       1    0   5  13   0    0    0
4536    2    6    2    1    0    5       0       1    6   2   0  28    2    0
     RT_K SCR VEC1 VEC2  cost_mean
133     0   0    0    1 0.24763473
140     2   0    1    1 0.11994683
306     0   0    1    1 0.09916687
582     1   0    0    1 0.14557470
717     0   1    1    0 0.15509133
719     0   1    1    0 0.18742517
893     0   1    0    1 0.11044550
936     0   1    1    1 0.11168030
1095    1   1    1    1 0.19895303
1106    1   0    0    1 0.22293930
1157    0   1    0    0 0.10489143
1390    1   1    0    0 0.09192970
1554    1   0    0    0 0.10981670
1828    0   0    0    0 0.24154917
2229    1   1    0    0 0.24280910
2418    0   0    0    1 0.13665333
2465    0   0    1    1 0.31282283
2949    1   1    1    0 0.10050008
3005    2   1    1    0 0.15166190
3015    0   1    0    1 0.11351350
3215    0   1    1    0 0.18276413
3270    0   0    0    1 0.11634433
3279    0   1    1    0 0.17492947
3470    0   0    0    0 0.21416020
3471    1   0    0    1 0.11195273
3579    1   1    0    1 0.10099989
3725    0   0    1    0 0.23959957
3961    0   0    0    0 0.12236367
3966    0   1    0    1 0.16966297
4047    0   0    1    0 0.11970457
4110    0   0    0    1 0.18450690
4308    0   1    0    1 0.14831893
4340    1   0    1    1 0.11304847
4447    1   0    1    1 0.20136013
4536    0   0    0    0 0.18489510

Heteroscedasticity Test p-value: 0.794107110221
Regression Step:                Df   Sum Sq  Mean Sq F value  Pr(>F)   
T1_I             1 0.006543 0.006543  22.997 0.01725 * 
T1_J             1 0.001105 0.001105   3.884 0.14333   
T1_K             1 0.000295 0.000295   1.038 0.38331   
T2_I             1 0.005169 0.005169  18.168 0.02369 * 
T2_J             1 0.000938 0.000938   3.295 0.16711   
T2_K             1 0.000470 0.000470   1.653 0.28880   
ACOPY_x          1 0.000016 0.000016   0.057 0.82735   
ACOPY_y          1 0.006312 0.006312  22.184 0.01812 * 
U1_I             1 0.002257 0.002257   7.933 0.06692 . 
U_I              1 0.006602 0.006602  23.207 0.01704 * 
U_J              1 0.000141 0.000141   0.495 0.53227   
U_K              1 0.005910 0.005910  20.775 0.01980 * 
RT_I             1 0.001023 0.001023   3.596 0.15421   
RT_J             1 0.000682 0.000682   2.398 0.21928   
RT_K             1 0.010763 0.010763  37.830 0.00865 **
SCR              1 0.001349 0.001349   4.743 0.11758   
VEC1             1 0.001246 0.001246   4.380 0.12742   
VEC2             1 0.006185 0.006185  21.738 0.01862 * 
I(1/(1 + T1_I))  1 0.000222 0.000222   0.780 0.44222   
I(1/(1 + T1_J))  1 0.000376 0.000376   1.323 0.33346   
I(1/(1 + T1_K))  1 0.001816 0.001816   6.384 0.08568 . 
I(1/(1 + T2_I))  1 0.000696 0.000696   2.447 0.21570   
I(1/(1 + T2_J))  1 0.000411 0.000411   1.446 0.31548   
I(1/(1 + T2_K))  1 0.003937 0.003937  13.838 0.03381 * 
I(1/(1 + U1_I))  1 0.000965 0.000965   3.392 0.16277   
I(1/(1 + U_I))   1 0.006385 0.006385  22.444 0.01783 * 
I(1/(1 + U_J))   1 0.000514 0.000514   1.808 0.27135   
I(1/(1 + U_K))   1 0.012332 0.012332  43.347 0.00713 **
I(1/(1 + RT_I))  1 0.015261 0.015261  53.640 0.00526 **
I(1/(1 + RT_J))  1 0.000025 0.000025   0.089 0.78466   
I(1/(1 + RT_K))  1 0.002911 0.002911  10.233 0.04938 * 
Residuals        3 0.000854 0.000285                   
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Predicting Best
Generating valid search space of size 4600 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Valid coordinates: 920
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Valid coordinates: 1840
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Tested coordinates: 110000
Valid coordinates: 2760
Tested coordinates: 120000
Tested coordinates: 130000
Tested coordinates: 140000
Tested coordinates: 150000
Valid coordinates: 3680
Tested coordinates: 160000
Tested coordinates: 170000
Tested coordinates: 180000
Tested coordinates: 190000
Valid coordinates: 4600
Valid/Tested configurations: 4600/192214
Generated Search Space:
NULL
Identical predictions (tol = 1e-5): 1
Getting Best from Design
Response: ['cost_mean']
Design Names:  [1] "T1_I"      "T1_J"      "T1_K"      "T2_I"      "T2_J"      "T2_K"     
 [7] "ACOPY_x"   "ACOPY_y"   "U1_I"      "U_I"       "U_J"       "U_K"      
[13] "RT_I"      "RT_J"      "RT_K"      "SCR"       "VEC1"      "VEC2"     
[19] "cost_mean"

Design Response:       cost_mean
133  0.24763473
140  0.11994683
306  0.09916687
582  0.14557470
717  0.15509133
719  0.18742517
893  0.11044550
936  0.11168030
1095 0.19895303
1106 0.22293930
1157 0.10489143
1390 0.09192970
1554 0.10981670
1828 0.24154917
2229 0.24280910
2418 0.13665333
2465 0.31282283
2949 0.10050008
3005 0.15166190
3015 0.11351350
3215 0.18276413
3270 0.11634433
3279 0.17492947
3470 0.21416020
3471 0.11195273
3579 0.10099989
3725 0.23959957
3961 0.12236367
3966 0.16966297
4047 0.11970457
4110 0.18450690
4308 0.14831893
4340 0.11304847
4447 0.20136013
4536 0.18489510

Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Getting fixed variables
Pruning Model
Best Predicted:     T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
425    2    0    0    2    0    3       0       1   25   7   0  28    1    0
    RT_K SCR VEC1 VEC2
425    1   1    1    0

Best From Design: [0, 5, 4, 2, 3, 6, 1, 0, 29, 19, 0, 0, 1, 0, 1, 1, 0, 0]
Pruned Factors: ['T1_J', 'T1_K', 'T2_J', 'T2_K', 'ACOPY_x', 'U1_I', 'U_J', 'RT_I', 'RT_J', 'SCR', 'VEC1']
Fixed Factors: {'ACOPY_y': 1, 'RT_K': 1, 'T1_I': 2, 'U_K': 28, 'U_I': 7, 'T2_I': 2, 'VEC2': 0}
Length of requested configs: 1
Result was on Database, Returning Now
Starting Point (-O3):
0.16283083333333334
Predicted Best Point:
[2, 0, 0, 2, 0, 3, 0, 1, 25, 7, 0, 28, 1, 0, 1, 1, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	36
        Max loop nest depth: 	5
        Additions: 		830
        Multiplications: 	306
        Divisions: 		0
        Logical: 		0
        Reads: 			1782
        Writes: 		369
        Comparisons:		36
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest47.exe __orio_perftest47.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest47.exe  
Program Test Output: 
{'[2, 0, 0, 2, 0, 3, 0, 1, 25, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.109267}
{'[2, 0, 0, 2, 0, 3, 0, 1, 25, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.109073}
{'[2, 0, 0, 2, 0, 3, 0, 1, 25, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.109124}
{'[2, 0, 0, 2, 0, 3, 0, 1, 25, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.109132}
{'[2, 0, 0, 2, 0, 3, 0, 1, 25, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.109071}
{'[2, 0, 0, 2, 0, 3, 0, 1, 25, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.100452}
{'[2, 0, 0, 2, 0, 3, 0, 1, 25, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.0959089}
{'[2, 0, 0, 2, 0, 3, 0, 1, 25, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.0960169}
{'[2, 0, 0, 2, 0, 3, 0, 1, 25, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.0960629}
{'[2, 0, 0, 2, 0, 3, 0, 1, 25, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.09619}
{'[2, 0, 0, 2, 0, 3, 0, 1, 25, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.096092}
{'[2, 0, 0, 2, 0, 3, 0, 1, 25, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.096046}
{'[2, 0, 0, 2, 0, 3, 0, 1, 25, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.096154}
{'[2, 0, 0, 2, 0, 3, 0, 1, 25, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.0960739}
{'[2, 0, 0, 2, 0, 3, 0, 1, 25, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.095928}
{'[2, 0, 0, 2, 0, 3, 0, 1, 25, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.0960021}
{'[2, 0, 0, 2, 0, 3, 0, 1, 25, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.095901}
{'[2, 0, 0, 2, 0, 3, 0, 1, 25, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.0960019}
{'[2, 0, 0, 2, 0, 3, 0, 1, 25, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.096081}
{'[2, 0, 0, 2, 0, 3, 0, 1, 25, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.096359}
{'[2, 0, 0, 2, 0, 3, 0, 1, 25, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.0961111}
{'[2, 0, 0, 2, 0, 3, 0, 1, 25, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.096082}
{'[2, 0, 0, 2, 0, 3, 0, 1, 25, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.0960939}
{'[2, 0, 0, 2, 0, 3, 0, 1, 25, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.0963521}
{'[2, 0, 0, 2, 0, 3, 0, 1, 25, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.0963559}
{'[2, 0, 0, 2, 0, 3, 0, 1, 25, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.0959401}
{'[2, 0, 0, 2, 0, 3, 0, 1, 25, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.095916}
{'[2, 0, 0, 2, 0, 3, 0, 1, 25, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.0960131}
{'[2, 0, 0, 2, 0, 3, 0, 1, 25, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.0958171}
{'[2, 0, 0, 2, 0, 3, 0, 1, 25, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.0964999}

out:
 ["{'[2, 0, 0, 2, 0, 3, 0, 1, 25, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.109267}", "{'[2, 0, 0, 2, 0, 3, 0, 1, 25, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.109073}", "{'[2, 0, 0, 2, 0, 3, 0, 1, 25, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.109124}", "{'[2, 0, 0, 2, 0, 3, 0, 1, 25, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.109132}", "{'[2, 0, 0, 2, 0, 3, 0, 1, 25, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.109071}", "{'[2, 0, 0, 2, 0, 3, 0, 1, 25, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.100452}", "{'[2, 0, 0, 2, 0, 3, 0, 1, 25, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.0959089}", "{'[2, 0, 0, 2, 0, 3, 0, 1, 25, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.0960169}", "{'[2, 0, 0, 2, 0, 3, 0, 1, 25, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.0960629}", "{'[2, 0, 0, 2, 0, 3, 0, 1, 25, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.09619}", "{'[2, 0, 0, 2, 0, 3, 0, 1, 25, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.096092}", "{'[2, 0, 0, 2, 0, 3, 0, 1, 25, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.096046}", "{'[2, 0, 0, 2, 0, 3, 0, 1, 25, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.096154}", "{'[2, 0, 0, 2, 0, 3, 0, 1, 25, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.0960739}", "{'[2, 0, 0, 2, 0, 3, 0, 1, 25, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.095928}", "{'[2, 0, 0, 2, 0, 3, 0, 1, 25, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.0960021}", "{'[2, 0, 0, 2, 0, 3, 0, 1, 25, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.095901}", "{'[2, 0, 0, 2, 0, 3, 0, 1, 25, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.0960019}", "{'[2, 0, 0, 2, 0, 3, 0, 1, 25, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.096081}", "{'[2, 0, 0, 2, 0, 3, 0, 1, 25, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.096359}", "{'[2, 0, 0, 2, 0, 3, 0, 1, 25, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.0961111}", "{'[2, 0, 0, 2, 0, 3, 0, 1, 25, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.096082}", "{'[2, 0, 0, 2, 0, 3, 0, 1, 25, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.0960939}", "{'[2, 0, 0, 2, 0, 3, 0, 1, 25, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.0963521}", "{'[2, 0, 0, 2, 0, 3, 0, 1, 25, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.0963559}", "{'[2, 0, 0, 2, 0, 3, 0, 1, 25, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.0959401}", "{'[2, 0, 0, 2, 0, 3, 0, 1, 25, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.095916}", "{'[2, 0, 0, 2, 0, 3, 0, 1, 25, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.0960131}", "{'[2, 0, 0, 2, 0, 3, 0, 1, 25, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.0958171}", "{'[2, 0, 0, 2, 0, 3, 0, 1, 25, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.0964999}"]
returning from 'run': {'[2, 0, 0, 2, 0, 3, 0, 1, 25, 7, 0, 28, 1, 0, 1, 1, 1, 0]': ([0.109267, 0.109073, 0.109124, 0.109132, 0.109071, 0.100452, 0.0959089, 0.0960169, 0.0960629, 0.09619, 0.096092, 0.096046, 0.096154, 0.0960739, 0.095928, 0.0960021, 0.095901, 0.0960019, 0.096081, 0.096359, 0.0961111, 0.096082, 0.0960939, 0.0963521, 0.0963559, 0.0959401, 0.095916, 0.0960131, 0.0958171, 0.0964999], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 0, 0, 2, 0, 3, 0, 1, 25, 7, 0, 28, 1, 0, 1, 1, 1, 0]': ([0.109267, 0.109073, 0.109124, 0.109132, 0.109071, 0.100452, 0.0959089, 0.0960169, 0.0960629, 0.09619, 0.096092, 0.096046, 0.096154, 0.0960739, 0.095928, 0.0960021, 0.095901, 0.0960019, 0.096081, 0.096359, 0.0961111, 0.096082, 0.0960939, 0.0963521, 0.0963559, 0.0959401, 0.095916, 0.0960131, 0.0958171, 0.0964999], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Design Best Point:
[0, 5, 4, 2, 3, 6, 1, 0, 29, 19, 0, 0, 1, 0, 1, 1, 0, 0]
Length of requested configs: 1
Result was on Database, Returning Now
Fixed Factors: {'ACOPY_y': 1, 'RT_K': 1, 'T1_I': 2, 'U_K': 28, 'U_I': 7, 'T2_I': 2, 'VEC2': 0}
Slowdown (Design Best): 0.5645718409187447
Slowdown (Predicted Best): 0.6043322671279497
Budget: 35/180
Updating Global Best: 0.0919297033333333
Current Best Point: 
[0, 5, 4, 2, 3, 6, 1, 0, 29, 19, 0, 0, 1, 0, 1, 1, 0, 0]
Step 1
Generating valid search space of size 2800 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Valid coordinates: 560
Tested coordinates: 70000
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Tested coordinates: 110000
Tested coordinates: 120000
Valid coordinates: 1120
Tested coordinates: 130000
Tested coordinates: 140000
Tested coordinates: 150000
Tested coordinates: 160000
Tested coordinates: 170000
Tested coordinates: 180000
Tested coordinates: 190000
Tested coordinates: 200000
Valid coordinates: 1680
Tested coordinates: 210000
Tested coordinates: 220000
Tested coordinates: 230000
Tested coordinates: 240000
Tested coordinates: 250000
Tested coordinates: 260000
Tested coordinates: 270000
Valid coordinates: 2240
Tested coordinates: 280000
Tested coordinates: 290000
Tested coordinates: 300000
Tested coordinates: 310000
Tested coordinates: 320000
Tested coordinates: 330000
Valid coordinates: 2800
Valid/Tested configurations: 2800/335556
Generated Search Space:
NULL
Clean Info:
Removed Factors: [1] "U_J"

Removed Inverse Factors: [1] "ACOPY_x" "RT_I"    "RT_J"    "SCR"     "VEC1"   

New Factors: ['T1_J', 'T1_K', 'T2_J', 'T2_K', 'ACOPY_x', 'U1_I', 'RT_I', 'RT_J', 'SCR', 'VEC1']
New Inverse Factors: ['T1_J', 'T1_K', 'T2_J', 'T2_K', 'U1_I']
New Fixed Factors: {'ACOPY_y': 1, 'RT_K': 1, 'T1_I': 2, 'U_K': 28, 'U_J': 0, 'U_I': 7, 'T2_I': 2, 'VEC2': 0}
Full Model:  ~ T1_J + T1_K + T2_J + T2_K + ACOPY_x + U1_I + RT_I + RT_J + SCR + VEC1 + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I))
Fixed Factors: {'ACOPY_y': 1, 'RT_K': 1, 'T1_I': 2, 'U_K': 28, 'U_J': 0, 'U_I': 7, 'T2_I': 2, 'VEC2': 0}
Computing D-Optimal Design
Computing D-Optimal Design with 28 experiments
Design Formula:  ~ T1_J + T1_K + T2_J + T2_K + ACOPY_x + U1_I + RT_I + RT_J + SCR + VEC1 + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I))
Starting "optFederov" run
Using Search Space:
NULL
Data Dimensions: [1] 2800   10

     T1_J T1_K T2_J T2_K ACOPY_x U1_I RT_I RT_J SCR VEC1
324     3    0    0    6       1    0    0    0   1    1
325     3    2    6    1       1   28    1    0   1    1
432     1    0    5    6       1    5    0    0   1    0
458     6    1    5    0       0    0    0    1   1    0
477     6    6    6    6       0    1    0    1   0    0
823     0    0    4    6       1    0    1    0   1    0
967     0    1    2    6       0   29    0    0   0    0
1067    0    2    2    2       1    7    0    1   0    1
1089    6    6    0    0       1   25    1    0   1    0
1486    0    0    0    0       0   16    0    1   0    0
1640    1    0    0    2       1    0    0    1   0    1
1670    2    2    1    1       0   11    0    1   1    0
1708    0    1    0    1       1    7    0    0   1    1
1724    6    6    4    0       1    3    0    0   0    0
1793    1    4    6    2       0    0    0    0   0    0
1904    1    6    1    6       1    3    1    0   0    1
1998    6    0    0    2       0   12    1    0   1    0
2073    2    1    6    0       0   10    1    0   0    1
2279    0    5    0    6       0   27    1    0   1    0
2288    6    0    0    6       0   21    0    1   1    1
2305    0    5    6    0       1   25    0    1   1    0
2393    4    6    2    4       0    0    1    0   1    1
2436    2    0    2    1       1   28    0    0   1    0
2489    0    0    1    1       0   25    0    0   0    1
2507    6    1    0    6       1   29    1    0   0    0
2513    2    6    6    4       0   29    0    1   0    0
2633    1    4    1    0       0    0    0    0   0    1
2753    6    3    6    6       1   29    1    0   0    0

D-Efficiency Approximation: [1] 0.655

Measuring design of size 28
Current Design Names: ['T1_J', 'T1_K', 'T2_J', 'T2_K', 'ACOPY_x', 'U1_I', 'RT_I', 'RT_J', 'SCR', 'VEC1']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Length of requested configs: 1
Code stats:
        Number of loops: 	40
        Max loop nest depth: 	5
        Additions: 		517
        Multiplications: 	162
        Divisions: 		0
        Logical: 		0
        Reads: 			1175
        Writes: 		250
        Comparisons:		40
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest48.exe __orio_perftest48.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest48.exe  
Program Test Output: 
{'[2, 3, 0, 2, 0, 6, 1, 1, 0, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.181053}
{'[2, 3, 0, 2, 0, 6, 1, 1, 0, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.181113}
{'[2, 3, 0, 2, 0, 6, 1, 1, 0, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.180331}
{'[2, 3, 0, 2, 0, 6, 1, 1, 0, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.155292}
{'[2, 3, 0, 2, 0, 6, 1, 1, 0, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.153598}
{'[2, 3, 0, 2, 0, 6, 1, 1, 0, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.153922}
{'[2, 3, 0, 2, 0, 6, 1, 1, 0, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.15401}
{'[2, 3, 0, 2, 0, 6, 1, 1, 0, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.153597}
{'[2, 3, 0, 2, 0, 6, 1, 1, 0, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.154208}
{'[2, 3, 0, 2, 0, 6, 1, 1, 0, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.153655}
{'[2, 3, 0, 2, 0, 6, 1, 1, 0, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.15348}
{'[2, 3, 0, 2, 0, 6, 1, 1, 0, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.153824}
{'[2, 3, 0, 2, 0, 6, 1, 1, 0, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.15419}
{'[2, 3, 0, 2, 0, 6, 1, 1, 0, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.153807}
{'[2, 3, 0, 2, 0, 6, 1, 1, 0, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.153781}
{'[2, 3, 0, 2, 0, 6, 1, 1, 0, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.153641}
{'[2, 3, 0, 2, 0, 6, 1, 1, 0, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.153963}
{'[2, 3, 0, 2, 0, 6, 1, 1, 0, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.154993}
{'[2, 3, 0, 2, 0, 6, 1, 1, 0, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.153751}
{'[2, 3, 0, 2, 0, 6, 1, 1, 0, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.154007}
{'[2, 3, 0, 2, 0, 6, 1, 1, 0, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.153956}
{'[2, 3, 0, 2, 0, 6, 1, 1, 0, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.153906}
{'[2, 3, 0, 2, 0, 6, 1, 1, 0, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.153595}
{'[2, 3, 0, 2, 0, 6, 1, 1, 0, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.15359}
{'[2, 3, 0, 2, 0, 6, 1, 1, 0, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.153743}
{'[2, 3, 0, 2, 0, 6, 1, 1, 0, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.154013}
{'[2, 3, 0, 2, 0, 6, 1, 1, 0, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.154063}
{'[2, 3, 0, 2, 0, 6, 1, 1, 0, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.154074}
{'[2, 3, 0, 2, 0, 6, 1, 1, 0, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.153597}
{'[2, 3, 0, 2, 0, 6, 1, 1, 0, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.153527}

out:
 ["{'[2, 3, 0, 2, 0, 6, 1, 1, 0, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.181053}", "{'[2, 3, 0, 2, 0, 6, 1, 1, 0, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.181113}", "{'[2, 3, 0, 2, 0, 6, 1, 1, 0, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.180331}", "{'[2, 3, 0, 2, 0, 6, 1, 1, 0, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.155292}", "{'[2, 3, 0, 2, 0, 6, 1, 1, 0, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.153598}", "{'[2, 3, 0, 2, 0, 6, 1, 1, 0, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.153922}", "{'[2, 3, 0, 2, 0, 6, 1, 1, 0, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.15401}", "{'[2, 3, 0, 2, 0, 6, 1, 1, 0, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.153597}", "{'[2, 3, 0, 2, 0, 6, 1, 1, 0, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.154208}", "{'[2, 3, 0, 2, 0, 6, 1, 1, 0, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.153655}", "{'[2, 3, 0, 2, 0, 6, 1, 1, 0, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.15348}", "{'[2, 3, 0, 2, 0, 6, 1, 1, 0, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.153824}", "{'[2, 3, 0, 2, 0, 6, 1, 1, 0, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.15419}", "{'[2, 3, 0, 2, 0, 6, 1, 1, 0, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.153807}", "{'[2, 3, 0, 2, 0, 6, 1, 1, 0, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.153781}", "{'[2, 3, 0, 2, 0, 6, 1, 1, 0, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.153641}", "{'[2, 3, 0, 2, 0, 6, 1, 1, 0, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.153963}", "{'[2, 3, 0, 2, 0, 6, 1, 1, 0, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.154993}", "{'[2, 3, 0, 2, 0, 6, 1, 1, 0, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.153751}", "{'[2, 3, 0, 2, 0, 6, 1, 1, 0, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.154007}", "{'[2, 3, 0, 2, 0, 6, 1, 1, 0, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.153956}", "{'[2, 3, 0, 2, 0, 6, 1, 1, 0, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.153906}", "{'[2, 3, 0, 2, 0, 6, 1, 1, 0, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.153595}", "{'[2, 3, 0, 2, 0, 6, 1, 1, 0, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.15359}", "{'[2, 3, 0, 2, 0, 6, 1, 1, 0, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.153743}", "{'[2, 3, 0, 2, 0, 6, 1, 1, 0, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.154013}", "{'[2, 3, 0, 2, 0, 6, 1, 1, 0, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.154063}", "{'[2, 3, 0, 2, 0, 6, 1, 1, 0, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.154074}", "{'[2, 3, 0, 2, 0, 6, 1, 1, 0, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.153597}", "{'[2, 3, 0, 2, 0, 6, 1, 1, 0, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.153527}"]
returning from 'run': {'[2, 3, 0, 2, 0, 6, 1, 1, 0, 7, 0, 28, 0, 0, 1, 1, 1, 0]': ([0.181053, 0.181113, 0.180331, 0.155292, 0.153598, 0.153922, 0.15401, 0.153597, 0.154208, 0.153655, 0.15348, 0.153824, 0.15419, 0.153807, 0.153781, 0.153641, 0.153963, 0.154993, 0.153751, 0.154007, 0.153956, 0.153906, 0.153595, 0.15359, 0.153743, 0.154013, 0.154063, 0.154074, 0.153597, 0.153527], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 3, 0, 2, 0, 6, 1, 1, 0, 7, 0, 28, 0, 0, 1, 1, 1, 0]': ([0.181053, 0.181113, 0.180331, 0.155292, 0.153598, 0.153922, 0.15401, 0.153597, 0.154208, 0.153655, 0.15348, 0.153824, 0.15419, 0.153807, 0.153781, 0.153641, 0.153963, 0.154993, 0.153751, 0.154007, 0.153956, 0.153906, 0.153595, 0.15359, 0.153743, 0.154013, 0.154063, 0.154074, 0.153597, 0.153527], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	55
        Max loop nest depth: 	6
        Additions: 		903
        Multiplications: 	306
        Divisions: 		0
        Logical: 		0
        Reads: 			1974
        Writes: 		420
        Comparisons:		55
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest49.exe __orio_perftest49.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest49.exe  
Program Test Output: 
{'[2, 3, 2, 2, 6, 1, 1, 1, 28, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.109576}
{'[2, 3, 2, 2, 6, 1, 1, 1, 28, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.109402}
{'[2, 3, 2, 2, 6, 1, 1, 1, 28, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.109268}
{'[2, 3, 2, 2, 6, 1, 1, 1, 28, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.109393}
{'[2, 3, 2, 2, 6, 1, 1, 1, 28, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.10396}
{'[2, 3, 2, 2, 6, 1, 1, 1, 28, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.0948949}
{'[2, 3, 2, 2, 6, 1, 1, 1, 28, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.0946941}
{'[2, 3, 2, 2, 6, 1, 1, 1, 28, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.0945961}
{'[2, 3, 2, 2, 6, 1, 1, 1, 28, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.09462}
{'[2, 3, 2, 2, 6, 1, 1, 1, 28, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.0946569}
{'[2, 3, 2, 2, 6, 1, 1, 1, 28, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.095026}
{'[2, 3, 2, 2, 6, 1, 1, 1, 28, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.0946901}
{'[2, 3, 2, 2, 6, 1, 1, 1, 28, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.0948699}
{'[2, 3, 2, 2, 6, 1, 1, 1, 28, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.094698}
{'[2, 3, 2, 2, 6, 1, 1, 1, 28, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.0950911}
{'[2, 3, 2, 2, 6, 1, 1, 1, 28, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.0946651}
{'[2, 3, 2, 2, 6, 1, 1, 1, 28, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.094861}
{'[2, 3, 2, 2, 6, 1, 1, 1, 28, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.094717}
{'[2, 3, 2, 2, 6, 1, 1, 1, 28, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.0948472}
{'[2, 3, 2, 2, 6, 1, 1, 1, 28, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.0945568}
{'[2, 3, 2, 2, 6, 1, 1, 1, 28, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.0945721}
{'[2, 3, 2, 2, 6, 1, 1, 1, 28, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.0946689}
{'[2, 3, 2, 2, 6, 1, 1, 1, 28, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.094548}
{'[2, 3, 2, 2, 6, 1, 1, 1, 28, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.0945721}
{'[2, 3, 2, 2, 6, 1, 1, 1, 28, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.0948541}
{'[2, 3, 2, 2, 6, 1, 1, 1, 28, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.0948799}
{'[2, 3, 2, 2, 6, 1, 1, 1, 28, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.0945921}
{'[2, 3, 2, 2, 6, 1, 1, 1, 28, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.094825}
{'[2, 3, 2, 2, 6, 1, 1, 1, 28, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.0945971}
{'[2, 3, 2, 2, 6, 1, 1, 1, 28, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.094619}

out:
 ["{'[2, 3, 2, 2, 6, 1, 1, 1, 28, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.109576}", "{'[2, 3, 2, 2, 6, 1, 1, 1, 28, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.109402}", "{'[2, 3, 2, 2, 6, 1, 1, 1, 28, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.109268}", "{'[2, 3, 2, 2, 6, 1, 1, 1, 28, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.109393}", "{'[2, 3, 2, 2, 6, 1, 1, 1, 28, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.10396}", "{'[2, 3, 2, 2, 6, 1, 1, 1, 28, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.0948949}", "{'[2, 3, 2, 2, 6, 1, 1, 1, 28, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.0946941}", "{'[2, 3, 2, 2, 6, 1, 1, 1, 28, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.0945961}", "{'[2, 3, 2, 2, 6, 1, 1, 1, 28, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.09462}", "{'[2, 3, 2, 2, 6, 1, 1, 1, 28, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.0946569}", "{'[2, 3, 2, 2, 6, 1, 1, 1, 28, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.095026}", "{'[2, 3, 2, 2, 6, 1, 1, 1, 28, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.0946901}", "{'[2, 3, 2, 2, 6, 1, 1, 1, 28, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.0948699}", "{'[2, 3, 2, 2, 6, 1, 1, 1, 28, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.094698}", "{'[2, 3, 2, 2, 6, 1, 1, 1, 28, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.0950911}", "{'[2, 3, 2, 2, 6, 1, 1, 1, 28, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.0946651}", "{'[2, 3, 2, 2, 6, 1, 1, 1, 28, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.094861}", "{'[2, 3, 2, 2, 6, 1, 1, 1, 28, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.094717}", "{'[2, 3, 2, 2, 6, 1, 1, 1, 28, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.0948472}", "{'[2, 3, 2, 2, 6, 1, 1, 1, 28, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.0945568}", "{'[2, 3, 2, 2, 6, 1, 1, 1, 28, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.0945721}", "{'[2, 3, 2, 2, 6, 1, 1, 1, 28, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.0946689}", "{'[2, 3, 2, 2, 6, 1, 1, 1, 28, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.094548}", "{'[2, 3, 2, 2, 6, 1, 1, 1, 28, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.0945721}", "{'[2, 3, 2, 2, 6, 1, 1, 1, 28, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.0948541}", "{'[2, 3, 2, 2, 6, 1, 1, 1, 28, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.0948799}", "{'[2, 3, 2, 2, 6, 1, 1, 1, 28, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.0945921}", "{'[2, 3, 2, 2, 6, 1, 1, 1, 28, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.094825}", "{'[2, 3, 2, 2, 6, 1, 1, 1, 28, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.0945971}", "{'[2, 3, 2, 2, 6, 1, 1, 1, 28, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.094619}"]
returning from 'run': {'[2, 3, 2, 2, 6, 1, 1, 1, 28, 7, 0, 28, 1, 0, 1, 1, 1, 0]': ([0.109576, 0.109402, 0.109268, 0.109393, 0.10396, 0.0948949, 0.0946941, 0.0945961, 0.09462, 0.0946569, 0.095026, 0.0946901, 0.0948699, 0.094698, 0.0950911, 0.0946651, 0.094861, 0.094717, 0.0948472, 0.0945568, 0.0945721, 0.0946689, 0.094548, 0.0945721, 0.0948541, 0.0948799, 0.0945921, 0.094825, 0.0945971, 0.094619], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 3, 2, 2, 6, 1, 1, 1, 28, 7, 0, 28, 1, 0, 1, 1, 1, 0]': ([0.109576, 0.109402, 0.109268, 0.109393, 0.10396, 0.0948949, 0.0946941, 0.0945961, 0.09462, 0.0946569, 0.095026, 0.0946901, 0.0948699, 0.094698, 0.0950911, 0.0946651, 0.094861, 0.094717, 0.0948472, 0.0945568, 0.0945721, 0.0946689, 0.094548, 0.0945721, 0.0948541, 0.0948799, 0.0945921, 0.094825, 0.0945971, 0.094619], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	43
        Max loop nest depth: 	6
        Additions: 		533
        Multiplications: 	162
        Divisions: 		0
        Logical: 		0
        Reads: 			1206
        Writes: 		261
        Comparisons:		43
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest50.exe __orio_perftest50.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest50.exe  
Program Test Output: 
{'[2, 1, 0, 2, 5, 6, 1, 1, 5, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.18245}
{'[2, 1, 0, 2, 5, 6, 1, 1, 5, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.182442}
{'[2, 1, 0, 2, 5, 6, 1, 1, 5, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.180688}
{'[2, 1, 0, 2, 5, 6, 1, 1, 5, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.154815}
{'[2, 1, 0, 2, 5, 6, 1, 1, 5, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.154161}
{'[2, 1, 0, 2, 5, 6, 1, 1, 5, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.153975}
{'[2, 1, 0, 2, 5, 6, 1, 1, 5, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.153121}
{'[2, 1, 0, 2, 5, 6, 1, 1, 5, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.153244}
{'[2, 1, 0, 2, 5, 6, 1, 1, 5, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.153194}
{'[2, 1, 0, 2, 5, 6, 1, 1, 5, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.153155}
{'[2, 1, 0, 2, 5, 6, 1, 1, 5, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.153985}
{'[2, 1, 0, 2, 5, 6, 1, 1, 5, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.155071}
{'[2, 1, 0, 2, 5, 6, 1, 1, 5, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.15324}
{'[2, 1, 0, 2, 5, 6, 1, 1, 5, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.153096}
{'[2, 1, 0, 2, 5, 6, 1, 1, 5, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.153239}
{'[2, 1, 0, 2, 5, 6, 1, 1, 5, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.153153}
{'[2, 1, 0, 2, 5, 6, 1, 1, 5, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.153512}
{'[2, 1, 0, 2, 5, 6, 1, 1, 5, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.154286}
{'[2, 1, 0, 2, 5, 6, 1, 1, 5, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.154577}
{'[2, 1, 0, 2, 5, 6, 1, 1, 5, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.153159}
{'[2, 1, 0, 2, 5, 6, 1, 1, 5, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.153102}
{'[2, 1, 0, 2, 5, 6, 1, 1, 5, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.153101}
{'[2, 1, 0, 2, 5, 6, 1, 1, 5, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.153408}
{'[2, 1, 0, 2, 5, 6, 1, 1, 5, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.153594}
{'[2, 1, 0, 2, 5, 6, 1, 1, 5, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.154934}
{'[2, 1, 0, 2, 5, 6, 1, 1, 5, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.153593}
{'[2, 1, 0, 2, 5, 6, 1, 1, 5, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.15309}
{'[2, 1, 0, 2, 5, 6, 1, 1, 5, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.154057}
{'[2, 1, 0, 2, 5, 6, 1, 1, 5, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.153099}
{'[2, 1, 0, 2, 5, 6, 1, 1, 5, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.153385}

out:
 ["{'[2, 1, 0, 2, 5, 6, 1, 1, 5, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.18245}", "{'[2, 1, 0, 2, 5, 6, 1, 1, 5, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.182442}", "{'[2, 1, 0, 2, 5, 6, 1, 1, 5, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.180688}", "{'[2, 1, 0, 2, 5, 6, 1, 1, 5, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.154815}", "{'[2, 1, 0, 2, 5, 6, 1, 1, 5, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.154161}", "{'[2, 1, 0, 2, 5, 6, 1, 1, 5, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.153975}", "{'[2, 1, 0, 2, 5, 6, 1, 1, 5, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.153121}", "{'[2, 1, 0, 2, 5, 6, 1, 1, 5, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.153244}", "{'[2, 1, 0, 2, 5, 6, 1, 1, 5, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.153194}", "{'[2, 1, 0, 2, 5, 6, 1, 1, 5, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.153155}", "{'[2, 1, 0, 2, 5, 6, 1, 1, 5, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.153985}", "{'[2, 1, 0, 2, 5, 6, 1, 1, 5, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.155071}", "{'[2, 1, 0, 2, 5, 6, 1, 1, 5, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.15324}", "{'[2, 1, 0, 2, 5, 6, 1, 1, 5, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.153096}", "{'[2, 1, 0, 2, 5, 6, 1, 1, 5, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.153239}", "{'[2, 1, 0, 2, 5, 6, 1, 1, 5, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.153153}", "{'[2, 1, 0, 2, 5, 6, 1, 1, 5, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.153512}", "{'[2, 1, 0, 2, 5, 6, 1, 1, 5, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.154286}", "{'[2, 1, 0, 2, 5, 6, 1, 1, 5, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.154577}", "{'[2, 1, 0, 2, 5, 6, 1, 1, 5, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.153159}", "{'[2, 1, 0, 2, 5, 6, 1, 1, 5, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.153102}", "{'[2, 1, 0, 2, 5, 6, 1, 1, 5, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.153101}", "{'[2, 1, 0, 2, 5, 6, 1, 1, 5, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.153408}", "{'[2, 1, 0, 2, 5, 6, 1, 1, 5, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.153594}", "{'[2, 1, 0, 2, 5, 6, 1, 1, 5, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.154934}", "{'[2, 1, 0, 2, 5, 6, 1, 1, 5, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.153593}", "{'[2, 1, 0, 2, 5, 6, 1, 1, 5, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.15309}", "{'[2, 1, 0, 2, 5, 6, 1, 1, 5, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.154057}", "{'[2, 1, 0, 2, 5, 6, 1, 1, 5, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.153099}", "{'[2, 1, 0, 2, 5, 6, 1, 1, 5, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.153385}"]
returning from 'run': {'[2, 1, 0, 2, 5, 6, 1, 1, 5, 7, 0, 28, 0, 0, 1, 1, 0, 0]': ([0.18245, 0.182442, 0.180688, 0.154815, 0.154161, 0.153975, 0.153121, 0.153244, 0.153194, 0.153155, 0.153985, 0.155071, 0.15324, 0.153096, 0.153239, 0.153153, 0.153512, 0.154286, 0.154577, 0.153159, 0.153102, 0.153101, 0.153408, 0.153594, 0.154934, 0.153593, 0.15309, 0.154057, 0.153099, 0.153385], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 1, 0, 2, 5, 6, 1, 1, 5, 7, 0, 28, 0, 0, 1, 1, 0, 0]': ([0.18245, 0.182442, 0.180688, 0.154815, 0.154161, 0.153975, 0.153121, 0.153244, 0.153194, 0.153155, 0.153985, 0.155071, 0.15324, 0.153096, 0.153239, 0.153153, 0.153512, 0.154286, 0.154577, 0.153159, 0.153102, 0.153101, 0.153408, 0.153594, 0.154934, 0.153593, 0.15309, 0.154057, 0.153099, 0.153385], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	35
        Max loop nest depth: 	6
        Additions: 		770
        Multiplications: 	306
        Divisions: 		0
        Logical: 		0
        Reads: 			1627
        Writes: 		310
        Comparisons:		35
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest51.exe __orio_perftest51.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest51.exe  
Program Test Output: 
{'[2, 6, 1, 2, 5, 0, 0, 1, 0, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.204761}
{'[2, 6, 1, 2, 5, 0, 0, 1, 0, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.204416}
{'[2, 6, 1, 2, 5, 0, 0, 1, 0, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.190065}
{'[2, 6, 1, 2, 5, 0, 0, 1, 0, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.173651}
{'[2, 6, 1, 2, 5, 0, 0, 1, 0, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.173656}
{'[2, 6, 1, 2, 5, 0, 0, 1, 0, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.174114}
{'[2, 6, 1, 2, 5, 0, 0, 1, 0, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.173549}
{'[2, 6, 1, 2, 5, 0, 0, 1, 0, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.173586}
{'[2, 6, 1, 2, 5, 0, 0, 1, 0, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.173933}
{'[2, 6, 1, 2, 5, 0, 0, 1, 0, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.173518}
{'[2, 6, 1, 2, 5, 0, 0, 1, 0, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.173668}
{'[2, 6, 1, 2, 5, 0, 0, 1, 0, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.174128}
{'[2, 6, 1, 2, 5, 0, 0, 1, 0, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.173873}
{'[2, 6, 1, 2, 5, 0, 0, 1, 0, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.173523}
{'[2, 6, 1, 2, 5, 0, 0, 1, 0, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.173494}
{'[2, 6, 1, 2, 5, 0, 0, 1, 0, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.173637}
{'[2, 6, 1, 2, 5, 0, 0, 1, 0, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.173606}
{'[2, 6, 1, 2, 5, 0, 0, 1, 0, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.173927}
{'[2, 6, 1, 2, 5, 0, 0, 1, 0, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.174053}
{'[2, 6, 1, 2, 5, 0, 0, 1, 0, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.173677}
{'[2, 6, 1, 2, 5, 0, 0, 1, 0, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.173663}
{'[2, 6, 1, 2, 5, 0, 0, 1, 0, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.173613}
{'[2, 6, 1, 2, 5, 0, 0, 1, 0, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.173944}
{'[2, 6, 1, 2, 5, 0, 0, 1, 0, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.173927}
{'[2, 6, 1, 2, 5, 0, 0, 1, 0, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.174241}
{'[2, 6, 1, 2, 5, 0, 0, 1, 0, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.173778}
{'[2, 6, 1, 2, 5, 0, 0, 1, 0, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.173754}
{'[2, 6, 1, 2, 5, 0, 0, 1, 0, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.173517}
{'[2, 6, 1, 2, 5, 0, 0, 1, 0, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.173731}
{'[2, 6, 1, 2, 5, 0, 0, 1, 0, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.173557}

out:
 ["{'[2, 6, 1, 2, 5, 0, 0, 1, 0, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.204761}", "{'[2, 6, 1, 2, 5, 0, 0, 1, 0, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.204416}", "{'[2, 6, 1, 2, 5, 0, 0, 1, 0, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.190065}", "{'[2, 6, 1, 2, 5, 0, 0, 1, 0, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.173651}", "{'[2, 6, 1, 2, 5, 0, 0, 1, 0, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.173656}", "{'[2, 6, 1, 2, 5, 0, 0, 1, 0, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.174114}", "{'[2, 6, 1, 2, 5, 0, 0, 1, 0, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.173549}", "{'[2, 6, 1, 2, 5, 0, 0, 1, 0, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.173586}", "{'[2, 6, 1, 2, 5, 0, 0, 1, 0, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.173933}", "{'[2, 6, 1, 2, 5, 0, 0, 1, 0, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.173518}", "{'[2, 6, 1, 2, 5, 0, 0, 1, 0, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.173668}", "{'[2, 6, 1, 2, 5, 0, 0, 1, 0, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.174128}", "{'[2, 6, 1, 2, 5, 0, 0, 1, 0, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.173873}", "{'[2, 6, 1, 2, 5, 0, 0, 1, 0, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.173523}", "{'[2, 6, 1, 2, 5, 0, 0, 1, 0, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.173494}", "{'[2, 6, 1, 2, 5, 0, 0, 1, 0, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.173637}", "{'[2, 6, 1, 2, 5, 0, 0, 1, 0, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.173606}", "{'[2, 6, 1, 2, 5, 0, 0, 1, 0, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.173927}", "{'[2, 6, 1, 2, 5, 0, 0, 1, 0, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.174053}", "{'[2, 6, 1, 2, 5, 0, 0, 1, 0, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.173677}", "{'[2, 6, 1, 2, 5, 0, 0, 1, 0, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.173663}", "{'[2, 6, 1, 2, 5, 0, 0, 1, 0, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.173613}", "{'[2, 6, 1, 2, 5, 0, 0, 1, 0, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.173944}", "{'[2, 6, 1, 2, 5, 0, 0, 1, 0, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.173927}", "{'[2, 6, 1, 2, 5, 0, 0, 1, 0, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.174241}", "{'[2, 6, 1, 2, 5, 0, 0, 1, 0, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.173778}", "{'[2, 6, 1, 2, 5, 0, 0, 1, 0, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.173754}", "{'[2, 6, 1, 2, 5, 0, 0, 1, 0, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.173517}", "{'[2, 6, 1, 2, 5, 0, 0, 1, 0, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.173731}", "{'[2, 6, 1, 2, 5, 0, 0, 1, 0, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.173557}"]
returning from 'run': {'[2, 6, 1, 2, 5, 0, 0, 1, 0, 7, 0, 28, 0, 1, 1, 1, 0, 0]': ([0.204761, 0.204416, 0.190065, 0.173651, 0.173656, 0.174114, 0.173549, 0.173586, 0.173933, 0.173518, 0.173668, 0.174128, 0.173873, 0.173523, 0.173494, 0.173637, 0.173606, 0.173927, 0.174053, 0.173677, 0.173663, 0.173613, 0.173944, 0.173927, 0.174241, 0.173778, 0.173754, 0.173517, 0.173731, 0.173557], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 6, 1, 2, 5, 0, 0, 1, 0, 7, 0, 28, 0, 1, 1, 1, 0, 0]': ([0.204761, 0.204416, 0.190065, 0.173651, 0.173656, 0.174114, 0.173549, 0.173586, 0.173933, 0.173518, 0.173668, 0.174128, 0.173873, 0.173523, 0.173494, 0.173637, 0.173606, 0.173927, 0.174053, 0.173677, 0.173663, 0.173613, 0.173944, 0.173927, 0.174241, 0.173778, 0.173754, 0.173517, 0.173731, 0.173557], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	38
        Max loop nest depth: 	6
        Additions: 		1216
        Multiplications: 	306
        Divisions: 		0
        Logical: 		0
        Reads: 			2046
        Writes: 		259
        Comparisons:		38
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest52.exe __orio_perftest52.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest52.exe  
Program Test Output: 
{'[2, 6, 6, 2, 6, 6, 0, 1, 1, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.160621}
{'[2, 6, 6, 2, 6, 6, 0, 1, 1, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.160661}
{'[2, 6, 6, 2, 6, 6, 0, 1, 1, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.160515}
{'[2, 6, 6, 2, 6, 6, 0, 1, 1, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.149464}
{'[2, 6, 6, 2, 6, 6, 0, 1, 1, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.137631}
{'[2, 6, 6, 2, 6, 6, 0, 1, 1, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.137796}
{'[2, 6, 6, 2, 6, 6, 0, 1, 1, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.13757}
{'[2, 6, 6, 2, 6, 6, 0, 1, 1, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.137565}
{'[2, 6, 6, 2, 6, 6, 0, 1, 1, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.137871}
{'[2, 6, 6, 2, 6, 6, 0, 1, 1, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.138274}
{'[2, 6, 6, 2, 6, 6, 0, 1, 1, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.137517}
{'[2, 6, 6, 2, 6, 6, 0, 1, 1, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.13776}
{'[2, 6, 6, 2, 6, 6, 0, 1, 1, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.137904}
{'[2, 6, 6, 2, 6, 6, 0, 1, 1, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.137754}
{'[2, 6, 6, 2, 6, 6, 0, 1, 1, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.13756}
{'[2, 6, 6, 2, 6, 6, 0, 1, 1, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.137561}
{'[2, 6, 6, 2, 6, 6, 0, 1, 1, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.137535}
{'[2, 6, 6, 2, 6, 6, 0, 1, 1, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.138012}
{'[2, 6, 6, 2, 6, 6, 0, 1, 1, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.137553}
{'[2, 6, 6, 2, 6, 6, 0, 1, 1, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.137472}
{'[2, 6, 6, 2, 6, 6, 0, 1, 1, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.137646}
{'[2, 6, 6, 2, 6, 6, 0, 1, 1, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.137736}
{'[2, 6, 6, 2, 6, 6, 0, 1, 1, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.137494}
{'[2, 6, 6, 2, 6, 6, 0, 1, 1, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.137743}
{'[2, 6, 6, 2, 6, 6, 0, 1, 1, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.137594}
{'[2, 6, 6, 2, 6, 6, 0, 1, 1, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.138}
{'[2, 6, 6, 2, 6, 6, 0, 1, 1, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.137699}
{'[2, 6, 6, 2, 6, 6, 0, 1, 1, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.137647}
{'[2, 6, 6, 2, 6, 6, 0, 1, 1, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.137685}
{'[2, 6, 6, 2, 6, 6, 0, 1, 1, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.137814}

out:
 ["{'[2, 6, 6, 2, 6, 6, 0, 1, 1, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.160621}", "{'[2, 6, 6, 2, 6, 6, 0, 1, 1, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.160661}", "{'[2, 6, 6, 2, 6, 6, 0, 1, 1, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.160515}", "{'[2, 6, 6, 2, 6, 6, 0, 1, 1, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.149464}", "{'[2, 6, 6, 2, 6, 6, 0, 1, 1, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.137631}", "{'[2, 6, 6, 2, 6, 6, 0, 1, 1, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.137796}", "{'[2, 6, 6, 2, 6, 6, 0, 1, 1, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.13757}", "{'[2, 6, 6, 2, 6, 6, 0, 1, 1, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.137565}", "{'[2, 6, 6, 2, 6, 6, 0, 1, 1, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.137871}", "{'[2, 6, 6, 2, 6, 6, 0, 1, 1, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.138274}", "{'[2, 6, 6, 2, 6, 6, 0, 1, 1, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.137517}", "{'[2, 6, 6, 2, 6, 6, 0, 1, 1, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.13776}", "{'[2, 6, 6, 2, 6, 6, 0, 1, 1, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.137904}", "{'[2, 6, 6, 2, 6, 6, 0, 1, 1, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.137754}", "{'[2, 6, 6, 2, 6, 6, 0, 1, 1, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.13756}", "{'[2, 6, 6, 2, 6, 6, 0, 1, 1, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.137561}", "{'[2, 6, 6, 2, 6, 6, 0, 1, 1, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.137535}", "{'[2, 6, 6, 2, 6, 6, 0, 1, 1, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.138012}", "{'[2, 6, 6, 2, 6, 6, 0, 1, 1, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.137553}", "{'[2, 6, 6, 2, 6, 6, 0, 1, 1, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.137472}", "{'[2, 6, 6, 2, 6, 6, 0, 1, 1, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.137646}", "{'[2, 6, 6, 2, 6, 6, 0, 1, 1, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.137736}", "{'[2, 6, 6, 2, 6, 6, 0, 1, 1, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.137494}", "{'[2, 6, 6, 2, 6, 6, 0, 1, 1, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.137743}", "{'[2, 6, 6, 2, 6, 6, 0, 1, 1, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.137594}", "{'[2, 6, 6, 2, 6, 6, 0, 1, 1, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.138}", "{'[2, 6, 6, 2, 6, 6, 0, 1, 1, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.137699}", "{'[2, 6, 6, 2, 6, 6, 0, 1, 1, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.137647}", "{'[2, 6, 6, 2, 6, 6, 0, 1, 1, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.137685}", "{'[2, 6, 6, 2, 6, 6, 0, 1, 1, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.137814}"]
returning from 'run': {'[2, 6, 6, 2, 6, 6, 0, 1, 1, 7, 0, 28, 0, 1, 1, 0, 0, 0]': ([0.160621, 0.160661, 0.160515, 0.149464, 0.137631, 0.137796, 0.13757, 0.137565, 0.137871, 0.138274, 0.137517, 0.13776, 0.137904, 0.137754, 0.13756, 0.137561, 0.137535, 0.138012, 0.137553, 0.137472, 0.137646, 0.137736, 0.137494, 0.137743, 0.137594, 0.138, 0.137699, 0.137647, 0.137685, 0.137814], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 6, 6, 2, 6, 6, 0, 1, 1, 7, 0, 28, 0, 1, 1, 0, 0, 0]': ([0.160621, 0.160661, 0.160515, 0.149464, 0.137631, 0.137796, 0.13757, 0.137565, 0.137871, 0.138274, 0.137517, 0.13776, 0.137904, 0.137754, 0.13756, 0.137561, 0.137535, 0.138012, 0.137553, 0.137472, 0.137646, 0.137736, 0.137494, 0.137743, 0.137594, 0.138, 0.137699, 0.137647, 0.137685, 0.137814], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	48
        Max loop nest depth: 	5
        Additions: 		852
        Multiplications: 	306
        Divisions: 		0
        Logical: 		0
        Reads: 			1861
        Writes: 		374
        Comparisons:		48
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest53.exe __orio_perftest53.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest53.exe  
Program Test Output: 
{'[2, 0, 0, 2, 4, 6, 1, 1, 0, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.137432}
{'[2, 0, 0, 2, 4, 6, 1, 1, 0, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.137321}
{'[2, 0, 0, 2, 4, 6, 1, 1, 0, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.137325}
{'[2, 0, 0, 2, 4, 6, 1, 1, 0, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.13659}
{'[2, 0, 0, 2, 4, 6, 1, 1, 0, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.133703}
{'[2, 0, 0, 2, 4, 6, 1, 1, 0, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.116884}
{'[2, 0, 0, 2, 4, 6, 1, 1, 0, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.116572}
{'[2, 0, 0, 2, 4, 6, 1, 1, 0, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.11645}
{'[2, 0, 0, 2, 4, 6, 1, 1, 0, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.116466}
{'[2, 0, 0, 2, 4, 6, 1, 1, 0, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.11637}
{'[2, 0, 0, 2, 4, 6, 1, 1, 0, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.116689}
{'[2, 0, 0, 2, 4, 6, 1, 1, 0, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.116802}
{'[2, 0, 0, 2, 4, 6, 1, 1, 0, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.116676}
{'[2, 0, 0, 2, 4, 6, 1, 1, 0, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.116576}
{'[2, 0, 0, 2, 4, 6, 1, 1, 0, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.116463}
{'[2, 0, 0, 2, 4, 6, 1, 1, 0, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.11639}
{'[2, 0, 0, 2, 4, 6, 1, 1, 0, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.116461}
{'[2, 0, 0, 2, 4, 6, 1, 1, 0, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.116607}
{'[2, 0, 0, 2, 4, 6, 1, 1, 0, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.116615}
{'[2, 0, 0, 2, 4, 6, 1, 1, 0, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.116607}
{'[2, 0, 0, 2, 4, 6, 1, 1, 0, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.116678}
{'[2, 0, 0, 2, 4, 6, 1, 1, 0, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.116716}
{'[2, 0, 0, 2, 4, 6, 1, 1, 0, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.116498}
{'[2, 0, 0, 2, 4, 6, 1, 1, 0, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.116603}
{'[2, 0, 0, 2, 4, 6, 1, 1, 0, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.116518}
{'[2, 0, 0, 2, 4, 6, 1, 1, 0, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.116449}
{'[2, 0, 0, 2, 4, 6, 1, 1, 0, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.116455}
{'[2, 0, 0, 2, 4, 6, 1, 1, 0, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.116448}
{'[2, 0, 0, 2, 4, 6, 1, 1, 0, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.116799}
{'[2, 0, 0, 2, 4, 6, 1, 1, 0, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.116722}

out:
 ["{'[2, 0, 0, 2, 4, 6, 1, 1, 0, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.137432}", "{'[2, 0, 0, 2, 4, 6, 1, 1, 0, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.137321}", "{'[2, 0, 0, 2, 4, 6, 1, 1, 0, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.137325}", "{'[2, 0, 0, 2, 4, 6, 1, 1, 0, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.13659}", "{'[2, 0, 0, 2, 4, 6, 1, 1, 0, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.133703}", "{'[2, 0, 0, 2, 4, 6, 1, 1, 0, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.116884}", "{'[2, 0, 0, 2, 4, 6, 1, 1, 0, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.116572}", "{'[2, 0, 0, 2, 4, 6, 1, 1, 0, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.11645}", "{'[2, 0, 0, 2, 4, 6, 1, 1, 0, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.116466}", "{'[2, 0, 0, 2, 4, 6, 1, 1, 0, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.11637}", "{'[2, 0, 0, 2, 4, 6, 1, 1, 0, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.116689}", "{'[2, 0, 0, 2, 4, 6, 1, 1, 0, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.116802}", "{'[2, 0, 0, 2, 4, 6, 1, 1, 0, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.116676}", "{'[2, 0, 0, 2, 4, 6, 1, 1, 0, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.116576}", "{'[2, 0, 0, 2, 4, 6, 1, 1, 0, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.116463}", "{'[2, 0, 0, 2, 4, 6, 1, 1, 0, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.11639}", "{'[2, 0, 0, 2, 4, 6, 1, 1, 0, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.116461}", "{'[2, 0, 0, 2, 4, 6, 1, 1, 0, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.116607}", "{'[2, 0, 0, 2, 4, 6, 1, 1, 0, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.116615}", "{'[2, 0, 0, 2, 4, 6, 1, 1, 0, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.116607}", "{'[2, 0, 0, 2, 4, 6, 1, 1, 0, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.116678}", "{'[2, 0, 0, 2, 4, 6, 1, 1, 0, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.116716}", "{'[2, 0, 0, 2, 4, 6, 1, 1, 0, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.116498}", "{'[2, 0, 0, 2, 4, 6, 1, 1, 0, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.116603}", "{'[2, 0, 0, 2, 4, 6, 1, 1, 0, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.116518}", "{'[2, 0, 0, 2, 4, 6, 1, 1, 0, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.116449}", "{'[2, 0, 0, 2, 4, 6, 1, 1, 0, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.116455}", "{'[2, 0, 0, 2, 4, 6, 1, 1, 0, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.116448}", "{'[2, 0, 0, 2, 4, 6, 1, 1, 0, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.116799}", "{'[2, 0, 0, 2, 4, 6, 1, 1, 0, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.116722}"]
returning from 'run': {'[2, 0, 0, 2, 4, 6, 1, 1, 0, 7, 0, 28, 1, 0, 1, 1, 0, 0]': ([0.137432, 0.137321, 0.137325, 0.13659, 0.133703, 0.116884, 0.116572, 0.11645, 0.116466, 0.11637, 0.116689, 0.116802, 0.116676, 0.116576, 0.116463, 0.11639, 0.116461, 0.116607, 0.116615, 0.116607, 0.116678, 0.116716, 0.116498, 0.116603, 0.116518, 0.116449, 0.116455, 0.116448, 0.116799, 0.116722], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 0, 0, 2, 4, 6, 1, 1, 0, 7, 0, 28, 1, 0, 1, 1, 0, 0]': ([0.137432, 0.137321, 0.137325, 0.13659, 0.133703, 0.116884, 0.116572, 0.11645, 0.116466, 0.11637, 0.116689, 0.116802, 0.116676, 0.116576, 0.116463, 0.11639, 0.116461, 0.116607, 0.116615, 0.116607, 0.116678, 0.116716, 0.116498, 0.116603, 0.116518, 0.116449, 0.116455, 0.116448, 0.116799, 0.116722], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	34
        Max loop nest depth: 	6
        Additions: 		792
        Multiplications: 	162
        Divisions: 		0
        Logical: 		0
        Reads: 			1354
        Writes: 		207
        Comparisons:		34
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest54.exe __orio_perftest54.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest54.exe  
Program Test Output: 
{'[2, 0, 1, 2, 2, 6, 0, 1, 29, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.207841}
{'[2, 0, 1, 2, 2, 6, 0, 1, 29, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.207807}
{'[2, 0, 1, 2, 2, 6, 0, 1, 29, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.207615}
{'[2, 0, 1, 2, 2, 6, 0, 1, 29, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.207557}
{'[2, 0, 1, 2, 2, 6, 0, 1, 29, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.207589}
{'[2, 0, 1, 2, 2, 6, 0, 1, 29, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.207532}
{'[2, 0, 1, 2, 2, 6, 0, 1, 29, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.207853}
{'[2, 0, 1, 2, 2, 6, 0, 1, 29, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.207472}
{'[2, 0, 1, 2, 2, 6, 0, 1, 29, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.207479}
{'[2, 0, 1, 2, 2, 6, 0, 1, 29, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.207809}
{'[2, 0, 1, 2, 2, 6, 0, 1, 29, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.207947}
{'[2, 0, 1, 2, 2, 6, 0, 1, 29, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.207607}
{'[2, 0, 1, 2, 2, 6, 0, 1, 29, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.207683}
{'[2, 0, 1, 2, 2, 6, 0, 1, 29, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.207959}
{'[2, 0, 1, 2, 2, 6, 0, 1, 29, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.207851}
{'[2, 0, 1, 2, 2, 6, 0, 1, 29, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.207753}
{'[2, 0, 1, 2, 2, 6, 0, 1, 29, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.207758}
{'[2, 0, 1, 2, 2, 6, 0, 1, 29, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.207662}
{'[2, 0, 1, 2, 2, 6, 0, 1, 29, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.207394}
{'[2, 0, 1, 2, 2, 6, 0, 1, 29, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.207728}
{'[2, 0, 1, 2, 2, 6, 0, 1, 29, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.207939}
{'[2, 0, 1, 2, 2, 6, 0, 1, 29, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.207591}
{'[2, 0, 1, 2, 2, 6, 0, 1, 29, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.207528}
{'[2, 0, 1, 2, 2, 6, 0, 1, 29, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.207418}
{'[2, 0, 1, 2, 2, 6, 0, 1, 29, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.207418}
{'[2, 0, 1, 2, 2, 6, 0, 1, 29, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.207896}
{'[2, 0, 1, 2, 2, 6, 0, 1, 29, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.207746}
{'[2, 0, 1, 2, 2, 6, 0, 1, 29, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.207429}
{'[2, 0, 1, 2, 2, 6, 0, 1, 29, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.207796}
{'[2, 0, 1, 2, 2, 6, 0, 1, 29, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.207756}

out:
 ["{'[2, 0, 1, 2, 2, 6, 0, 1, 29, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.207841}", "{'[2, 0, 1, 2, 2, 6, 0, 1, 29, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.207807}", "{'[2, 0, 1, 2, 2, 6, 0, 1, 29, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.207615}", "{'[2, 0, 1, 2, 2, 6, 0, 1, 29, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.207557}", "{'[2, 0, 1, 2, 2, 6, 0, 1, 29, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.207589}", "{'[2, 0, 1, 2, 2, 6, 0, 1, 29, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.207532}", "{'[2, 0, 1, 2, 2, 6, 0, 1, 29, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.207853}", "{'[2, 0, 1, 2, 2, 6, 0, 1, 29, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.207472}", "{'[2, 0, 1, 2, 2, 6, 0, 1, 29, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.207479}", "{'[2, 0, 1, 2, 2, 6, 0, 1, 29, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.207809}", "{'[2, 0, 1, 2, 2, 6, 0, 1, 29, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.207947}", "{'[2, 0, 1, 2, 2, 6, 0, 1, 29, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.207607}", "{'[2, 0, 1, 2, 2, 6, 0, 1, 29, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.207683}", "{'[2, 0, 1, 2, 2, 6, 0, 1, 29, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.207959}", "{'[2, 0, 1, 2, 2, 6, 0, 1, 29, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.207851}", "{'[2, 0, 1, 2, 2, 6, 0, 1, 29, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.207753}", "{'[2, 0, 1, 2, 2, 6, 0, 1, 29, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.207758}", "{'[2, 0, 1, 2, 2, 6, 0, 1, 29, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.207662}", "{'[2, 0, 1, 2, 2, 6, 0, 1, 29, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.207394}", "{'[2, 0, 1, 2, 2, 6, 0, 1, 29, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.207728}", "{'[2, 0, 1, 2, 2, 6, 0, 1, 29, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.207939}", "{'[2, 0, 1, 2, 2, 6, 0, 1, 29, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.207591}", "{'[2, 0, 1, 2, 2, 6, 0, 1, 29, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.207528}", "{'[2, 0, 1, 2, 2, 6, 0, 1, 29, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.207418}", "{'[2, 0, 1, 2, 2, 6, 0, 1, 29, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.207418}", "{'[2, 0, 1, 2, 2, 6, 0, 1, 29, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.207896}", "{'[2, 0, 1, 2, 2, 6, 0, 1, 29, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.207746}", "{'[2, 0, 1, 2, 2, 6, 0, 1, 29, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.207429}", "{'[2, 0, 1, 2, 2, 6, 0, 1, 29, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.207796}", "{'[2, 0, 1, 2, 2, 6, 0, 1, 29, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.207756}"]
returning from 'run': {'[2, 0, 1, 2, 2, 6, 0, 1, 29, 7, 0, 28, 0, 0, 1, 0, 0, 0]': ([0.207841, 0.207807, 0.207615, 0.207557, 0.207589, 0.207532, 0.207853, 0.207472, 0.207479, 0.207809, 0.207947, 0.207607, 0.207683, 0.207959, 0.207851, 0.207753, 0.207758, 0.207662, 0.207394, 0.207728, 0.207939, 0.207591, 0.207528, 0.207418, 0.207418, 0.207896, 0.207746, 0.207429, 0.207796, 0.207756], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 0, 1, 2, 2, 6, 0, 1, 29, 7, 0, 28, 0, 0, 1, 0, 0, 0]': ([0.207841, 0.207807, 0.207615, 0.207557, 0.207589, 0.207532, 0.207853, 0.207472, 0.207479, 0.207809, 0.207947, 0.207607, 0.207683, 0.207959, 0.207851, 0.207753, 0.207758, 0.207662, 0.207394, 0.207728, 0.207939, 0.207591, 0.207528, 0.207418, 0.207418, 0.207896, 0.207746, 0.207429, 0.207796, 0.207756], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	43
        Max loop nest depth: 	6
        Additions: 		1279
        Multiplications: 	288
        Divisions: 		0
        Logical: 		0
        Reads: 			2126
        Writes: 		278
        Comparisons:		43
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest55.exe __orio_perftest55.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest55.exe  
Program Test Output: 
{'[2, 0, 2, 2, 2, 2, 1, 1, 7, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.228872}
{'[2, 0, 2, 2, 2, 2, 1, 1, 7, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.228612}
{'[2, 0, 2, 2, 2, 2, 1, 1, 7, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.205471}
{'[2, 0, 2, 2, 2, 2, 1, 1, 7, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.193037}
{'[2, 0, 2, 2, 2, 2, 1, 1, 7, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.193029}
{'[2, 0, 2, 2, 2, 2, 1, 1, 7, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.19287}
{'[2, 0, 2, 2, 2, 2, 1, 1, 7, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.193106}
{'[2, 0, 2, 2, 2, 2, 1, 1, 7, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.192824}
{'[2, 0, 2, 2, 2, 2, 1, 1, 7, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.193045}
{'[2, 0, 2, 2, 2, 2, 1, 1, 7, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.193052}
{'[2, 0, 2, 2, 2, 2, 1, 1, 7, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.193047}
{'[2, 0, 2, 2, 2, 2, 1, 1, 7, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.193198}
{'[2, 0, 2, 2, 2, 2, 1, 1, 7, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.193019}
{'[2, 0, 2, 2, 2, 2, 1, 1, 7, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.192789}
{'[2, 0, 2, 2, 2, 2, 1, 1, 7, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.193038}
{'[2, 0, 2, 2, 2, 2, 1, 1, 7, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.193215}
{'[2, 0, 2, 2, 2, 2, 1, 1, 7, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.193044}
{'[2, 0, 2, 2, 2, 2, 1, 1, 7, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.193228}
{'[2, 0, 2, 2, 2, 2, 1, 1, 7, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.192885}
{'[2, 0, 2, 2, 2, 2, 1, 1, 7, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.193394}
{'[2, 0, 2, 2, 2, 2, 1, 1, 7, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.192903}
{'[2, 0, 2, 2, 2, 2, 1, 1, 7, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.192874}
{'[2, 0, 2, 2, 2, 2, 1, 1, 7, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.19293}
{'[2, 0, 2, 2, 2, 2, 1, 1, 7, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.193457}
{'[2, 0, 2, 2, 2, 2, 1, 1, 7, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.192846}
{'[2, 0, 2, 2, 2, 2, 1, 1, 7, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.193003}
{'[2, 0, 2, 2, 2, 2, 1, 1, 7, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.19298}
{'[2, 0, 2, 2, 2, 2, 1, 1, 7, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.193034}
{'[2, 0, 2, 2, 2, 2, 1, 1, 7, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.192976}
{'[2, 0, 2, 2, 2, 2, 1, 1, 7, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.193314}

out:
 ["{'[2, 0, 2, 2, 2, 2, 1, 1, 7, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.228872}", "{'[2, 0, 2, 2, 2, 2, 1, 1, 7, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.228612}", "{'[2, 0, 2, 2, 2, 2, 1, 1, 7, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.205471}", "{'[2, 0, 2, 2, 2, 2, 1, 1, 7, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.193037}", "{'[2, 0, 2, 2, 2, 2, 1, 1, 7, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.193029}", "{'[2, 0, 2, 2, 2, 2, 1, 1, 7, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.19287}", "{'[2, 0, 2, 2, 2, 2, 1, 1, 7, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.193106}", "{'[2, 0, 2, 2, 2, 2, 1, 1, 7, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.192824}", "{'[2, 0, 2, 2, 2, 2, 1, 1, 7, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.193045}", "{'[2, 0, 2, 2, 2, 2, 1, 1, 7, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.193052}", "{'[2, 0, 2, 2, 2, 2, 1, 1, 7, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.193047}", "{'[2, 0, 2, 2, 2, 2, 1, 1, 7, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.193198}", "{'[2, 0, 2, 2, 2, 2, 1, 1, 7, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.193019}", "{'[2, 0, 2, 2, 2, 2, 1, 1, 7, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.192789}", "{'[2, 0, 2, 2, 2, 2, 1, 1, 7, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.193038}", "{'[2, 0, 2, 2, 2, 2, 1, 1, 7, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.193215}", "{'[2, 0, 2, 2, 2, 2, 1, 1, 7, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.193044}", "{'[2, 0, 2, 2, 2, 2, 1, 1, 7, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.193228}", "{'[2, 0, 2, 2, 2, 2, 1, 1, 7, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.192885}", "{'[2, 0, 2, 2, 2, 2, 1, 1, 7, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.193394}", "{'[2, 0, 2, 2, 2, 2, 1, 1, 7, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.192903}", "{'[2, 0, 2, 2, 2, 2, 1, 1, 7, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.192874}", "{'[2, 0, 2, 2, 2, 2, 1, 1, 7, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.19293}", "{'[2, 0, 2, 2, 2, 2, 1, 1, 7, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.193457}", "{'[2, 0, 2, 2, 2, 2, 1, 1, 7, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.192846}", "{'[2, 0, 2, 2, 2, 2, 1, 1, 7, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.193003}", "{'[2, 0, 2, 2, 2, 2, 1, 1, 7, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.19298}", "{'[2, 0, 2, 2, 2, 2, 1, 1, 7, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.193034}", "{'[2, 0, 2, 2, 2, 2, 1, 1, 7, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.192976}", "{'[2, 0, 2, 2, 2, 2, 1, 1, 7, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.193314}"]
returning from 'run': {'[2, 0, 2, 2, 2, 2, 1, 1, 7, 7, 0, 28, 0, 1, 1, 0, 1, 0]': ([0.228872, 0.228612, 0.205471, 0.193037, 0.193029, 0.19287, 0.193106, 0.192824, 0.193045, 0.193052, 0.193047, 0.193198, 0.193019, 0.192789, 0.193038, 0.193215, 0.193044, 0.193228, 0.192885, 0.193394, 0.192903, 0.192874, 0.19293, 0.193457, 0.192846, 0.193003, 0.19298, 0.193034, 0.192976, 0.193314], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 0, 2, 2, 2, 2, 1, 1, 7, 7, 0, 28, 0, 1, 1, 0, 1, 0]': ([0.228872, 0.228612, 0.205471, 0.193037, 0.193029, 0.19287, 0.193106, 0.192824, 0.193045, 0.193052, 0.193047, 0.193198, 0.193019, 0.192789, 0.193038, 0.193215, 0.193044, 0.193228, 0.192885, 0.193394, 0.192903, 0.192874, 0.19293, 0.193457, 0.192846, 0.193003, 0.19298, 0.193034, 0.192976, 0.193314], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	49
        Max loop nest depth: 	5
        Additions: 		882
        Multiplications: 	306
        Divisions: 		0
        Logical: 		0
        Reads: 			1920
        Writes: 		402
        Comparisons:		49
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest56.exe __orio_perftest56.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest56.exe  
Program Test Output: 
{'[2, 6, 6, 2, 0, 0, 1, 1, 25, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.13425}
{'[2, 6, 6, 2, 0, 0, 1, 1, 25, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.134281}
{'[2, 6, 6, 2, 0, 0, 1, 1, 25, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.134131}
{'[2, 6, 6, 2, 0, 0, 1, 1, 25, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.126987}
{'[2, 6, 6, 2, 0, 0, 1, 1, 25, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.114052}
{'[2, 6, 6, 2, 0, 0, 1, 1, 25, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.114406}
{'[2, 6, 6, 2, 0, 0, 1, 1, 25, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.114208}
{'[2, 6, 6, 2, 0, 0, 1, 1, 25, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.114043}
{'[2, 6, 6, 2, 0, 0, 1, 1, 25, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.114015}
{'[2, 6, 6, 2, 0, 0, 1, 1, 25, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.11396}
{'[2, 6, 6, 2, 0, 0, 1, 1, 25, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.113953}
{'[2, 6, 6, 2, 0, 0, 1, 1, 25, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.114236}
{'[2, 6, 6, 2, 0, 0, 1, 1, 25, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.114243}
{'[2, 6, 6, 2, 0, 0, 1, 1, 25, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.114002}
{'[2, 6, 6, 2, 0, 0, 1, 1, 25, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.114235}
{'[2, 6, 6, 2, 0, 0, 1, 1, 25, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.11433}
{'[2, 6, 6, 2, 0, 0, 1, 1, 25, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.114089}
{'[2, 6, 6, 2, 0, 0, 1, 1, 25, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.114251}
{'[2, 6, 6, 2, 0, 0, 1, 1, 25, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.11397}
{'[2, 6, 6, 2, 0, 0, 1, 1, 25, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.113978}
{'[2, 6, 6, 2, 0, 0, 1, 1, 25, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.114461}
{'[2, 6, 6, 2, 0, 0, 1, 1, 25, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.114}
{'[2, 6, 6, 2, 0, 0, 1, 1, 25, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.113968}
{'[2, 6, 6, 2, 0, 0, 1, 1, 25, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.114186}
{'[2, 6, 6, 2, 0, 0, 1, 1, 25, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.114464}
{'[2, 6, 6, 2, 0, 0, 1, 1, 25, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.114295}
{'[2, 6, 6, 2, 0, 0, 1, 1, 25, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.114067}
{'[2, 6, 6, 2, 0, 0, 1, 1, 25, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.113947}
{'[2, 6, 6, 2, 0, 0, 1, 1, 25, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.114009}
{'[2, 6, 6, 2, 0, 0, 1, 1, 25, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.113979}

out:
 ["{'[2, 6, 6, 2, 0, 0, 1, 1, 25, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.13425}", "{'[2, 6, 6, 2, 0, 0, 1, 1, 25, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.134281}", "{'[2, 6, 6, 2, 0, 0, 1, 1, 25, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.134131}", "{'[2, 6, 6, 2, 0, 0, 1, 1, 25, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.126987}", "{'[2, 6, 6, 2, 0, 0, 1, 1, 25, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.114052}", "{'[2, 6, 6, 2, 0, 0, 1, 1, 25, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.114406}", "{'[2, 6, 6, 2, 0, 0, 1, 1, 25, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.114208}", "{'[2, 6, 6, 2, 0, 0, 1, 1, 25, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.114043}", "{'[2, 6, 6, 2, 0, 0, 1, 1, 25, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.114015}", "{'[2, 6, 6, 2, 0, 0, 1, 1, 25, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.11396}", "{'[2, 6, 6, 2, 0, 0, 1, 1, 25, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.113953}", "{'[2, 6, 6, 2, 0, 0, 1, 1, 25, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.114236}", "{'[2, 6, 6, 2, 0, 0, 1, 1, 25, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.114243}", "{'[2, 6, 6, 2, 0, 0, 1, 1, 25, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.114002}", "{'[2, 6, 6, 2, 0, 0, 1, 1, 25, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.114235}", "{'[2, 6, 6, 2, 0, 0, 1, 1, 25, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.11433}", "{'[2, 6, 6, 2, 0, 0, 1, 1, 25, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.114089}", "{'[2, 6, 6, 2, 0, 0, 1, 1, 25, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.114251}", "{'[2, 6, 6, 2, 0, 0, 1, 1, 25, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.11397}", "{'[2, 6, 6, 2, 0, 0, 1, 1, 25, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.113978}", "{'[2, 6, 6, 2, 0, 0, 1, 1, 25, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.114461}", "{'[2, 6, 6, 2, 0, 0, 1, 1, 25, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.114}", "{'[2, 6, 6, 2, 0, 0, 1, 1, 25, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.113968}", "{'[2, 6, 6, 2, 0, 0, 1, 1, 25, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.114186}", "{'[2, 6, 6, 2, 0, 0, 1, 1, 25, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.114464}", "{'[2, 6, 6, 2, 0, 0, 1, 1, 25, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.114295}", "{'[2, 6, 6, 2, 0, 0, 1, 1, 25, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.114067}", "{'[2, 6, 6, 2, 0, 0, 1, 1, 25, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.113947}", "{'[2, 6, 6, 2, 0, 0, 1, 1, 25, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.114009}", "{'[2, 6, 6, 2, 0, 0, 1, 1, 25, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.113979}"]
returning from 'run': {'[2, 6, 6, 2, 0, 0, 1, 1, 25, 7, 0, 28, 1, 0, 1, 1, 0, 0]': ([0.13425, 0.134281, 0.134131, 0.126987, 0.114052, 0.114406, 0.114208, 0.114043, 0.114015, 0.11396, 0.113953, 0.114236, 0.114243, 0.114002, 0.114235, 0.11433, 0.114089, 0.114251, 0.11397, 0.113978, 0.114461, 0.114, 0.113968, 0.114186, 0.114464, 0.114295, 0.114067, 0.113947, 0.114009, 0.113979], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 6, 6, 2, 0, 0, 1, 1, 25, 7, 0, 28, 1, 0, 1, 1, 0, 0]': ([0.13425, 0.134281, 0.134131, 0.126987, 0.114052, 0.114406, 0.114208, 0.114043, 0.114015, 0.11396, 0.113953, 0.114236, 0.114243, 0.114002, 0.114235, 0.11433, 0.114089, 0.114251, 0.11397, 0.113978, 0.114461, 0.114, 0.113968, 0.114186, 0.114464, 0.114295, 0.114067, 0.113947, 0.114009, 0.113979], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	4
        Additions: 		942
        Multiplications: 	288
        Divisions: 		0
        Logical: 		0
        Reads: 			1556
        Writes: 		191
        Comparisons:		10
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest57.exe __orio_perftest57.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest57.exe  
Program Test Output: 
{'[2, 0, 0, 2, 0, 0, 0, 1, 16, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.123977}
{'[2, 0, 0, 2, 0, 0, 0, 1, 16, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.123973}
{'[2, 0, 0, 2, 0, 0, 0, 1, 16, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.123956}
{'[2, 0, 0, 2, 0, 0, 0, 1, 16, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.123993}
{'[2, 0, 0, 2, 0, 0, 0, 1, 16, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.117089}
{'[2, 0, 0, 2, 0, 0, 0, 1, 16, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.10496}
{'[2, 0, 0, 2, 0, 0, 0, 1, 16, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.104956}
{'[2, 0, 0, 2, 0, 0, 0, 1, 16, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.104884}
{'[2, 0, 0, 2, 0, 0, 0, 1, 16, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.105106}
{'[2, 0, 0, 2, 0, 0, 0, 1, 16, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.105086}
{'[2, 0, 0, 2, 0, 0, 0, 1, 16, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.104784}
{'[2, 0, 0, 2, 0, 0, 0, 1, 16, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.104489}
{'[2, 0, 0, 2, 0, 0, 0, 1, 16, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.104521}
{'[2, 0, 0, 2, 0, 0, 0, 1, 16, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.104619}
{'[2, 0, 0, 2, 0, 0, 0, 1, 16, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.10449}
{'[2, 0, 0, 2, 0, 0, 0, 1, 16, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.10473}
{'[2, 0, 0, 2, 0, 0, 0, 1, 16, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.104588}
{'[2, 0, 0, 2, 0, 0, 0, 1, 16, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.104478}
{'[2, 0, 0, 2, 0, 0, 0, 1, 16, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.104449}
{'[2, 0, 0, 2, 0, 0, 0, 1, 16, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.104687}
{'[2, 0, 0, 2, 0, 0, 0, 1, 16, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.104842}
{'[2, 0, 0, 2, 0, 0, 0, 1, 16, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.104723}
{'[2, 0, 0, 2, 0, 0, 0, 1, 16, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.10441}
{'[2, 0, 0, 2, 0, 0, 0, 1, 16, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.104837}
{'[2, 0, 0, 2, 0, 0, 0, 1, 16, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.104449}
{'[2, 0, 0, 2, 0, 0, 0, 1, 16, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.104455}
{'[2, 0, 0, 2, 0, 0, 0, 1, 16, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.104528}
{'[2, 0, 0, 2, 0, 0, 0, 1, 16, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.104459}
{'[2, 0, 0, 2, 0, 0, 0, 1, 16, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.10446}
{'[2, 0, 0, 2, 0, 0, 0, 1, 16, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.104986}

out:
 ["{'[2, 0, 0, 2, 0, 0, 0, 1, 16, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.123977}", "{'[2, 0, 0, 2, 0, 0, 0, 1, 16, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.123973}", "{'[2, 0, 0, 2, 0, 0, 0, 1, 16, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.123956}", "{'[2, 0, 0, 2, 0, 0, 0, 1, 16, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.123993}", "{'[2, 0, 0, 2, 0, 0, 0, 1, 16, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.117089}", "{'[2, 0, 0, 2, 0, 0, 0, 1, 16, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.10496}", "{'[2, 0, 0, 2, 0, 0, 0, 1, 16, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.104956}", "{'[2, 0, 0, 2, 0, 0, 0, 1, 16, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.104884}", "{'[2, 0, 0, 2, 0, 0, 0, 1, 16, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.105106}", "{'[2, 0, 0, 2, 0, 0, 0, 1, 16, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.105086}", "{'[2, 0, 0, 2, 0, 0, 0, 1, 16, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.104784}", "{'[2, 0, 0, 2, 0, 0, 0, 1, 16, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.104489}", "{'[2, 0, 0, 2, 0, 0, 0, 1, 16, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.104521}", "{'[2, 0, 0, 2, 0, 0, 0, 1, 16, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.104619}", "{'[2, 0, 0, 2, 0, 0, 0, 1, 16, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.10449}", "{'[2, 0, 0, 2, 0, 0, 0, 1, 16, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.10473}", "{'[2, 0, 0, 2, 0, 0, 0, 1, 16, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.104588}", "{'[2, 0, 0, 2, 0, 0, 0, 1, 16, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.104478}", "{'[2, 0, 0, 2, 0, 0, 0, 1, 16, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.104449}", "{'[2, 0, 0, 2, 0, 0, 0, 1, 16, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.104687}", "{'[2, 0, 0, 2, 0, 0, 0, 1, 16, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.104842}", "{'[2, 0, 0, 2, 0, 0, 0, 1, 16, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.104723}", "{'[2, 0, 0, 2, 0, 0, 0, 1, 16, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.10441}", "{'[2, 0, 0, 2, 0, 0, 0, 1, 16, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.104837}", "{'[2, 0, 0, 2, 0, 0, 0, 1, 16, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.104449}", "{'[2, 0, 0, 2, 0, 0, 0, 1, 16, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.104455}", "{'[2, 0, 0, 2, 0, 0, 0, 1, 16, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.104528}", "{'[2, 0, 0, 2, 0, 0, 0, 1, 16, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.104459}", "{'[2, 0, 0, 2, 0, 0, 0, 1, 16, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.10446}", "{'[2, 0, 0, 2, 0, 0, 0, 1, 16, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.104986}"]
returning from 'run': {'[2, 0, 0, 2, 0, 0, 0, 1, 16, 7, 0, 28, 0, 1, 1, 0, 0, 0]': ([0.123977, 0.123973, 0.123956, 0.123993, 0.117089, 0.10496, 0.104956, 0.104884, 0.105106, 0.105086, 0.104784, 0.104489, 0.104521, 0.104619, 0.10449, 0.10473, 0.104588, 0.104478, 0.104449, 0.104687, 0.104842, 0.104723, 0.10441, 0.104837, 0.104449, 0.104455, 0.104528, 0.104459, 0.10446, 0.104986], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 0, 0, 2, 0, 0, 0, 1, 16, 7, 0, 28, 0, 1, 1, 0, 0, 0]': ([0.123977, 0.123973, 0.123956, 0.123993, 0.117089, 0.10496, 0.104956, 0.104884, 0.105106, 0.105086, 0.104784, 0.104489, 0.104521, 0.104619, 0.10449, 0.10473, 0.104588, 0.104478, 0.104449, 0.104687, 0.104842, 0.104723, 0.10441, 0.104837, 0.104449, 0.104455, 0.104528, 0.104459, 0.10446, 0.104986], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	40
        Max loop nest depth: 	5
        Additions: 		1261
        Multiplications: 	288
        Divisions: 		0
        Logical: 		0
        Reads: 			2085
        Writes: 		262
        Comparisons:		40
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest58.exe __orio_perftest58.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest58.exe  
Program Test Output: 
{'[2, 1, 0, 2, 0, 2, 1, 1, 0, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.223015}
{'[2, 1, 0, 2, 0, 2, 1, 1, 0, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.222801}
{'[2, 1, 0, 2, 0, 2, 1, 1, 0, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.20484}
{'[2, 1, 0, 2, 0, 2, 1, 1, 0, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.188}
{'[2, 1, 0, 2, 0, 2, 1, 1, 0, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.188299}
{'[2, 1, 0, 2, 0, 2, 1, 1, 0, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.188429}
{'[2, 1, 0, 2, 0, 2, 1, 1, 0, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.185906}
{'[2, 1, 0, 2, 0, 2, 1, 1, 0, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.186282}
{'[2, 1, 0, 2, 0, 2, 1, 1, 0, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.186103}
{'[2, 1, 0, 2, 0, 2, 1, 1, 0, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.18611}
{'[2, 1, 0, 2, 0, 2, 1, 1, 0, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.186355}
{'[2, 1, 0, 2, 0, 2, 1, 1, 0, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.186104}
{'[2, 1, 0, 2, 0, 2, 1, 1, 0, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.185794}
{'[2, 1, 0, 2, 0, 2, 1, 1, 0, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.18619}
{'[2, 1, 0, 2, 0, 2, 1, 1, 0, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.18598}
{'[2, 1, 0, 2, 0, 2, 1, 1, 0, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.186267}
{'[2, 1, 0, 2, 0, 2, 1, 1, 0, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.186218}
{'[2, 1, 0, 2, 0, 2, 1, 1, 0, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.185919}
{'[2, 1, 0, 2, 0, 2, 1, 1, 0, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.185872}
{'[2, 1, 0, 2, 0, 2, 1, 1, 0, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.186254}
{'[2, 1, 0, 2, 0, 2, 1, 1, 0, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.185971}
{'[2, 1, 0, 2, 0, 2, 1, 1, 0, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.186361}
{'[2, 1, 0, 2, 0, 2, 1, 1, 0, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.186363}
{'[2, 1, 0, 2, 0, 2, 1, 1, 0, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.186008}
{'[2, 1, 0, 2, 0, 2, 1, 1, 0, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.186169}
{'[2, 1, 0, 2, 0, 2, 1, 1, 0, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.185961}
{'[2, 1, 0, 2, 0, 2, 1, 1, 0, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.186038}
{'[2, 1, 0, 2, 0, 2, 1, 1, 0, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.18622}
{'[2, 1, 0, 2, 0, 2, 1, 1, 0, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.186004}
{'[2, 1, 0, 2, 0, 2, 1, 1, 0, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.186147}

out:
 ["{'[2, 1, 0, 2, 0, 2, 1, 1, 0, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.223015}", "{'[2, 1, 0, 2, 0, 2, 1, 1, 0, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.222801}", "{'[2, 1, 0, 2, 0, 2, 1, 1, 0, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.20484}", "{'[2, 1, 0, 2, 0, 2, 1, 1, 0, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.188}", "{'[2, 1, 0, 2, 0, 2, 1, 1, 0, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.188299}", "{'[2, 1, 0, 2, 0, 2, 1, 1, 0, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.188429}", "{'[2, 1, 0, 2, 0, 2, 1, 1, 0, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.185906}", "{'[2, 1, 0, 2, 0, 2, 1, 1, 0, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.186282}", "{'[2, 1, 0, 2, 0, 2, 1, 1, 0, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.186103}", "{'[2, 1, 0, 2, 0, 2, 1, 1, 0, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.18611}", "{'[2, 1, 0, 2, 0, 2, 1, 1, 0, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.186355}", "{'[2, 1, 0, 2, 0, 2, 1, 1, 0, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.186104}", "{'[2, 1, 0, 2, 0, 2, 1, 1, 0, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.185794}", "{'[2, 1, 0, 2, 0, 2, 1, 1, 0, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.18619}", "{'[2, 1, 0, 2, 0, 2, 1, 1, 0, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.18598}", "{'[2, 1, 0, 2, 0, 2, 1, 1, 0, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.186267}", "{'[2, 1, 0, 2, 0, 2, 1, 1, 0, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.186218}", "{'[2, 1, 0, 2, 0, 2, 1, 1, 0, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.185919}", "{'[2, 1, 0, 2, 0, 2, 1, 1, 0, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.185872}", "{'[2, 1, 0, 2, 0, 2, 1, 1, 0, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.186254}", "{'[2, 1, 0, 2, 0, 2, 1, 1, 0, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.185971}", "{'[2, 1, 0, 2, 0, 2, 1, 1, 0, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.186361}", "{'[2, 1, 0, 2, 0, 2, 1, 1, 0, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.186363}", "{'[2, 1, 0, 2, 0, 2, 1, 1, 0, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.186008}", "{'[2, 1, 0, 2, 0, 2, 1, 1, 0, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.186169}", "{'[2, 1, 0, 2, 0, 2, 1, 1, 0, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.185961}", "{'[2, 1, 0, 2, 0, 2, 1, 1, 0, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.186038}", "{'[2, 1, 0, 2, 0, 2, 1, 1, 0, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.18622}", "{'[2, 1, 0, 2, 0, 2, 1, 1, 0, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.186004}", "{'[2, 1, 0, 2, 0, 2, 1, 1, 0, 7, 0, 28, 0, 1, 1, 0, 1, 0]' : 0.186147}"]
returning from 'run': {'[2, 1, 0, 2, 0, 2, 1, 1, 0, 7, 0, 28, 0, 1, 1, 0, 1, 0]': ([0.223015, 0.222801, 0.20484, 0.188, 0.188299, 0.188429, 0.185906, 0.186282, 0.186103, 0.18611, 0.186355, 0.186104, 0.185794, 0.18619, 0.18598, 0.186267, 0.186218, 0.185919, 0.185872, 0.186254, 0.185971, 0.186361, 0.186363, 0.186008, 0.186169, 0.185961, 0.186038, 0.18622, 0.186004, 0.186147], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 1, 0, 2, 0, 2, 1, 1, 0, 7, 0, 28, 0, 1, 1, 0, 1, 0]': ([0.223015, 0.222801, 0.20484, 0.188, 0.188299, 0.188429, 0.185906, 0.186282, 0.186103, 0.18611, 0.186355, 0.186104, 0.185794, 0.18619, 0.18598, 0.186267, 0.186218, 0.185919, 0.185872, 0.186254, 0.185971, 0.186361, 0.186363, 0.186008, 0.186169, 0.185961, 0.186038, 0.18622, 0.186004, 0.186147], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	38
        Max loop nest depth: 	6
        Additions: 		792
        Multiplications: 	306
        Divisions: 		0
        Logical: 		0
        Reads: 			1672
        Writes: 		328
        Comparisons:		38
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest59.exe __orio_perftest59.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest59.exe  
Program Test Output: 
{'[2, 2, 2, 2, 1, 1, 0, 1, 11, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.211106}
{'[2, 2, 2, 2, 1, 1, 0, 1, 11, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.210973}
{'[2, 2, 2, 2, 1, 1, 0, 1, 11, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.207275}
{'[2, 2, 2, 2, 1, 1, 0, 1, 11, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.179572}
{'[2, 2, 2, 2, 1, 1, 0, 1, 11, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.178958}
{'[2, 2, 2, 2, 1, 1, 0, 1, 11, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.178789}
{'[2, 2, 2, 2, 1, 1, 0, 1, 11, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.178795}
{'[2, 2, 2, 2, 1, 1, 0, 1, 11, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.178621}
{'[2, 2, 2, 2, 1, 1, 0, 1, 11, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.179674}
{'[2, 2, 2, 2, 1, 1, 0, 1, 11, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.178743}
{'[2, 2, 2, 2, 1, 1, 0, 1, 11, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.179004}
{'[2, 2, 2, 2, 1, 1, 0, 1, 11, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.178553}
{'[2, 2, 2, 2, 1, 1, 0, 1, 11, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.178856}
{'[2, 2, 2, 2, 1, 1, 0, 1, 11, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.178702}
{'[2, 2, 2, 2, 1, 1, 0, 1, 11, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.17859}
{'[2, 2, 2, 2, 1, 1, 0, 1, 11, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.178855}
{'[2, 2, 2, 2, 1, 1, 0, 1, 11, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.17905}
{'[2, 2, 2, 2, 1, 1, 0, 1, 11, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.179083}
{'[2, 2, 2, 2, 1, 1, 0, 1, 11, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.178475}
{'[2, 2, 2, 2, 1, 1, 0, 1, 11, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.178852}
{'[2, 2, 2, 2, 1, 1, 0, 1, 11, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.179178}
{'[2, 2, 2, 2, 1, 1, 0, 1, 11, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.180649}
{'[2, 2, 2, 2, 1, 1, 0, 1, 11, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.179288}
{'[2, 2, 2, 2, 1, 1, 0, 1, 11, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.179039}
{'[2, 2, 2, 2, 1, 1, 0, 1, 11, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.178538}
{'[2, 2, 2, 2, 1, 1, 0, 1, 11, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.17861}
{'[2, 2, 2, 2, 1, 1, 0, 1, 11, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.178703}
{'[2, 2, 2, 2, 1, 1, 0, 1, 11, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.178881}
{'[2, 2, 2, 2, 1, 1, 0, 1, 11, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.178974}
{'[2, 2, 2, 2, 1, 1, 0, 1, 11, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.178936}

out:
 ["{'[2, 2, 2, 2, 1, 1, 0, 1, 11, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.211106}", "{'[2, 2, 2, 2, 1, 1, 0, 1, 11, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.210973}", "{'[2, 2, 2, 2, 1, 1, 0, 1, 11, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.207275}", "{'[2, 2, 2, 2, 1, 1, 0, 1, 11, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.179572}", "{'[2, 2, 2, 2, 1, 1, 0, 1, 11, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.178958}", "{'[2, 2, 2, 2, 1, 1, 0, 1, 11, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.178789}", "{'[2, 2, 2, 2, 1, 1, 0, 1, 11, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.178795}", "{'[2, 2, 2, 2, 1, 1, 0, 1, 11, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.178621}", "{'[2, 2, 2, 2, 1, 1, 0, 1, 11, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.179674}", "{'[2, 2, 2, 2, 1, 1, 0, 1, 11, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.178743}", "{'[2, 2, 2, 2, 1, 1, 0, 1, 11, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.179004}", "{'[2, 2, 2, 2, 1, 1, 0, 1, 11, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.178553}", "{'[2, 2, 2, 2, 1, 1, 0, 1, 11, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.178856}", "{'[2, 2, 2, 2, 1, 1, 0, 1, 11, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.178702}", "{'[2, 2, 2, 2, 1, 1, 0, 1, 11, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.17859}", "{'[2, 2, 2, 2, 1, 1, 0, 1, 11, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.178855}", "{'[2, 2, 2, 2, 1, 1, 0, 1, 11, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.17905}", "{'[2, 2, 2, 2, 1, 1, 0, 1, 11, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.179083}", "{'[2, 2, 2, 2, 1, 1, 0, 1, 11, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.178475}", "{'[2, 2, 2, 2, 1, 1, 0, 1, 11, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.178852}", "{'[2, 2, 2, 2, 1, 1, 0, 1, 11, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.179178}", "{'[2, 2, 2, 2, 1, 1, 0, 1, 11, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.180649}", "{'[2, 2, 2, 2, 1, 1, 0, 1, 11, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.179288}", "{'[2, 2, 2, 2, 1, 1, 0, 1, 11, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.179039}", "{'[2, 2, 2, 2, 1, 1, 0, 1, 11, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.178538}", "{'[2, 2, 2, 2, 1, 1, 0, 1, 11, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.17861}", "{'[2, 2, 2, 2, 1, 1, 0, 1, 11, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.178703}", "{'[2, 2, 2, 2, 1, 1, 0, 1, 11, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.178881}", "{'[2, 2, 2, 2, 1, 1, 0, 1, 11, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.178974}", "{'[2, 2, 2, 2, 1, 1, 0, 1, 11, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.178936}"]
returning from 'run': {'[2, 2, 2, 2, 1, 1, 0, 1, 11, 7, 0, 28, 0, 1, 1, 1, 0, 0]': ([0.211106, 0.210973, 0.207275, 0.179572, 0.178958, 0.178789, 0.178795, 0.178621, 0.179674, 0.178743, 0.179004, 0.178553, 0.178856, 0.178702, 0.17859, 0.178855, 0.17905, 0.179083, 0.178475, 0.178852, 0.179178, 0.180649, 0.179288, 0.179039, 0.178538, 0.17861, 0.178703, 0.178881, 0.178974, 0.178936], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 2, 2, 2, 1, 1, 0, 1, 11, 7, 0, 28, 0, 1, 1, 1, 0, 0]': ([0.211106, 0.210973, 0.207275, 0.179572, 0.178958, 0.178789, 0.178795, 0.178621, 0.179674, 0.178743, 0.179004, 0.178553, 0.178856, 0.178702, 0.17859, 0.178855, 0.17905, 0.179083, 0.178475, 0.178852, 0.179178, 0.180649, 0.179288, 0.179039, 0.178538, 0.17861, 0.178703, 0.178881, 0.178974, 0.178936], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	32
        Max loop nest depth: 	6
        Additions: 		491
        Multiplications: 	162
        Divisions: 		0
        Logical: 		0
        Reads: 			1092
        Writes: 		235
        Comparisons:		32
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest60.exe __orio_perftest60.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest60.exe  
Program Test Output: 
{'[2, 0, 1, 2, 0, 1, 1, 1, 7, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.187621}
{'[2, 0, 1, 2, 0, 1, 1, 1, 7, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.187965}
{'[2, 0, 1, 2, 0, 1, 1, 1, 7, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.18762}
{'[2, 0, 1, 2, 0, 1, 1, 1, 7, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.187898}
{'[2, 0, 1, 2, 0, 1, 1, 1, 7, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.187594}
{'[2, 0, 1, 2, 0, 1, 1, 1, 7, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.187526}
{'[2, 0, 1, 2, 0, 1, 1, 1, 7, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.187513}
{'[2, 0, 1, 2, 0, 1, 1, 1, 7, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.1876}
{'[2, 0, 1, 2, 0, 1, 1, 1, 7, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.187342}
{'[2, 0, 1, 2, 0, 1, 1, 1, 7, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.187826}
{'[2, 0, 1, 2, 0, 1, 1, 1, 7, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.187336}
{'[2, 0, 1, 2, 0, 1, 1, 1, 7, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.187706}
{'[2, 0, 1, 2, 0, 1, 1, 1, 7, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.187532}
{'[2, 0, 1, 2, 0, 1, 1, 1, 7, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.187464}
{'[2, 0, 1, 2, 0, 1, 1, 1, 7, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.187415}
{'[2, 0, 1, 2, 0, 1, 1, 1, 7, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.187873}
{'[2, 0, 1, 2, 0, 1, 1, 1, 7, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.187577}
{'[2, 0, 1, 2, 0, 1, 1, 1, 7, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.187538}
{'[2, 0, 1, 2, 0, 1, 1, 1, 7, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.187497}
{'[2, 0, 1, 2, 0, 1, 1, 1, 7, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.18756}
{'[2, 0, 1, 2, 0, 1, 1, 1, 7, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.187622}
{'[2, 0, 1, 2, 0, 1, 1, 1, 7, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.188088}
{'[2, 0, 1, 2, 0, 1, 1, 1, 7, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.187932}
{'[2, 0, 1, 2, 0, 1, 1, 1, 7, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.187649}
{'[2, 0, 1, 2, 0, 1, 1, 1, 7, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.187789}
{'[2, 0, 1, 2, 0, 1, 1, 1, 7, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.191767}
{'[2, 0, 1, 2, 0, 1, 1, 1, 7, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.192064}
{'[2, 0, 1, 2, 0, 1, 1, 1, 7, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.192105}
{'[2, 0, 1, 2, 0, 1, 1, 1, 7, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.191943}
{'[2, 0, 1, 2, 0, 1, 1, 1, 7, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.191929}

out:
 ["{'[2, 0, 1, 2, 0, 1, 1, 1, 7, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.187621}", "{'[2, 0, 1, 2, 0, 1, 1, 1, 7, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.187965}", "{'[2, 0, 1, 2, 0, 1, 1, 1, 7, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.18762}", "{'[2, 0, 1, 2, 0, 1, 1, 1, 7, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.187898}", "{'[2, 0, 1, 2, 0, 1, 1, 1, 7, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.187594}", "{'[2, 0, 1, 2, 0, 1, 1, 1, 7, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.187526}", "{'[2, 0, 1, 2, 0, 1, 1, 1, 7, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.187513}", "{'[2, 0, 1, 2, 0, 1, 1, 1, 7, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.1876}", "{'[2, 0, 1, 2, 0, 1, 1, 1, 7, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.187342}", "{'[2, 0, 1, 2, 0, 1, 1, 1, 7, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.187826}", "{'[2, 0, 1, 2, 0, 1, 1, 1, 7, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.187336}", "{'[2, 0, 1, 2, 0, 1, 1, 1, 7, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.187706}", "{'[2, 0, 1, 2, 0, 1, 1, 1, 7, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.187532}", "{'[2, 0, 1, 2, 0, 1, 1, 1, 7, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.187464}", "{'[2, 0, 1, 2, 0, 1, 1, 1, 7, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.187415}", "{'[2, 0, 1, 2, 0, 1, 1, 1, 7, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.187873}", "{'[2, 0, 1, 2, 0, 1, 1, 1, 7, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.187577}", "{'[2, 0, 1, 2, 0, 1, 1, 1, 7, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.187538}", "{'[2, 0, 1, 2, 0, 1, 1, 1, 7, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.187497}", "{'[2, 0, 1, 2, 0, 1, 1, 1, 7, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.18756}", "{'[2, 0, 1, 2, 0, 1, 1, 1, 7, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.187622}", "{'[2, 0, 1, 2, 0, 1, 1, 1, 7, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.188088}", "{'[2, 0, 1, 2, 0, 1, 1, 1, 7, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.187932}", "{'[2, 0, 1, 2, 0, 1, 1, 1, 7, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.187649}", "{'[2, 0, 1, 2, 0, 1, 1, 1, 7, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.187789}", "{'[2, 0, 1, 2, 0, 1, 1, 1, 7, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.191767}", "{'[2, 0, 1, 2, 0, 1, 1, 1, 7, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.192064}", "{'[2, 0, 1, 2, 0, 1, 1, 1, 7, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.192105}", "{'[2, 0, 1, 2, 0, 1, 1, 1, 7, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.191943}", "{'[2, 0, 1, 2, 0, 1, 1, 1, 7, 7, 0, 28, 0, 0, 1, 1, 1, 0]' : 0.191929}"]
returning from 'run': {'[2, 0, 1, 2, 0, 1, 1, 1, 7, 7, 0, 28, 0, 0, 1, 1, 1, 0]': ([0.187621, 0.187965, 0.18762, 0.187898, 0.187594, 0.187526, 0.187513, 0.1876, 0.187342, 0.187826, 0.187336, 0.187706, 0.187532, 0.187464, 0.187415, 0.187873, 0.187577, 0.187538, 0.187497, 0.18756, 0.187622, 0.188088, 0.187932, 0.187649, 0.187789, 0.191767, 0.192064, 0.192105, 0.191943, 0.191929], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 0, 1, 2, 0, 1, 1, 1, 7, 7, 0, 28, 0, 0, 1, 1, 1, 0]': ([0.187621, 0.187965, 0.18762, 0.187898, 0.187594, 0.187526, 0.187513, 0.1876, 0.187342, 0.187826, 0.187336, 0.187706, 0.187532, 0.187464, 0.187415, 0.187873, 0.187577, 0.187538, 0.187497, 0.18756, 0.187622, 0.188088, 0.187932, 0.187649, 0.187789, 0.191767, 0.192064, 0.192105, 0.191943, 0.191929], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	41
        Max loop nest depth: 	5
        Additions: 		805
        Multiplications: 	162
        Divisions: 		0
        Logical: 		0
        Reads: 			1405
        Writes: 		204
        Comparisons:		41
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest61.exe __orio_perftest61.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest61.exe  
Program Test Output: 
{'[2, 6, 6, 2, 4, 0, 1, 1, 3, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.19929}
{'[2, 6, 6, 2, 4, 0, 1, 1, 3, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.199343}
{'[2, 6, 6, 2, 4, 0, 1, 1, 3, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.187928}
{'[2, 6, 6, 2, 4, 0, 1, 1, 3, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.169157}
{'[2, 6, 6, 2, 4, 0, 1, 1, 3, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.169417}
{'[2, 6, 6, 2, 4, 0, 1, 1, 3, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.169766}
{'[2, 6, 6, 2, 4, 0, 1, 1, 3, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.169098}
{'[2, 6, 6, 2, 4, 0, 1, 1, 3, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.169132}
{'[2, 6, 6, 2, 4, 0, 1, 1, 3, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.169212}
{'[2, 6, 6, 2, 4, 0, 1, 1, 3, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.169425}
{'[2, 6, 6, 2, 4, 0, 1, 1, 3, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.169388}
{'[2, 6, 6, 2, 4, 0, 1, 1, 3, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.169348}
{'[2, 6, 6, 2, 4, 0, 1, 1, 3, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.169284}
{'[2, 6, 6, 2, 4, 0, 1, 1, 3, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.16939}
{'[2, 6, 6, 2, 4, 0, 1, 1, 3, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.16902}
{'[2, 6, 6, 2, 4, 0, 1, 1, 3, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.169236}
{'[2, 6, 6, 2, 4, 0, 1, 1, 3, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.169271}
{'[2, 6, 6, 2, 4, 0, 1, 1, 3, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.169325}
{'[2, 6, 6, 2, 4, 0, 1, 1, 3, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.169512}
{'[2, 6, 6, 2, 4, 0, 1, 1, 3, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.169187}
{'[2, 6, 6, 2, 4, 0, 1, 1, 3, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.169614}
{'[2, 6, 6, 2, 4, 0, 1, 1, 3, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.169315}
{'[2, 6, 6, 2, 4, 0, 1, 1, 3, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.169362}
{'[2, 6, 6, 2, 4, 0, 1, 1, 3, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.169193}
{'[2, 6, 6, 2, 4, 0, 1, 1, 3, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.169425}
{'[2, 6, 6, 2, 4, 0, 1, 1, 3, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.169552}
{'[2, 6, 6, 2, 4, 0, 1, 1, 3, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.169022}
{'[2, 6, 6, 2, 4, 0, 1, 1, 3, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.169342}
{'[2, 6, 6, 2, 4, 0, 1, 1, 3, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.169388}
{'[2, 6, 6, 2, 4, 0, 1, 1, 3, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.169378}

out:
 ["{'[2, 6, 6, 2, 4, 0, 1, 1, 3, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.19929}", "{'[2, 6, 6, 2, 4, 0, 1, 1, 3, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.199343}", "{'[2, 6, 6, 2, 4, 0, 1, 1, 3, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.187928}", "{'[2, 6, 6, 2, 4, 0, 1, 1, 3, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.169157}", "{'[2, 6, 6, 2, 4, 0, 1, 1, 3, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.169417}", "{'[2, 6, 6, 2, 4, 0, 1, 1, 3, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.169766}", "{'[2, 6, 6, 2, 4, 0, 1, 1, 3, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.169098}", "{'[2, 6, 6, 2, 4, 0, 1, 1, 3, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.169132}", "{'[2, 6, 6, 2, 4, 0, 1, 1, 3, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.169212}", "{'[2, 6, 6, 2, 4, 0, 1, 1, 3, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.169425}", "{'[2, 6, 6, 2, 4, 0, 1, 1, 3, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.169388}", "{'[2, 6, 6, 2, 4, 0, 1, 1, 3, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.169348}", "{'[2, 6, 6, 2, 4, 0, 1, 1, 3, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.169284}", "{'[2, 6, 6, 2, 4, 0, 1, 1, 3, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.16939}", "{'[2, 6, 6, 2, 4, 0, 1, 1, 3, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.16902}", "{'[2, 6, 6, 2, 4, 0, 1, 1, 3, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.169236}", "{'[2, 6, 6, 2, 4, 0, 1, 1, 3, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.169271}", "{'[2, 6, 6, 2, 4, 0, 1, 1, 3, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.169325}", "{'[2, 6, 6, 2, 4, 0, 1, 1, 3, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.169512}", "{'[2, 6, 6, 2, 4, 0, 1, 1, 3, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.169187}", "{'[2, 6, 6, 2, 4, 0, 1, 1, 3, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.169614}", "{'[2, 6, 6, 2, 4, 0, 1, 1, 3, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.169315}", "{'[2, 6, 6, 2, 4, 0, 1, 1, 3, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.169362}", "{'[2, 6, 6, 2, 4, 0, 1, 1, 3, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.169193}", "{'[2, 6, 6, 2, 4, 0, 1, 1, 3, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.169425}", "{'[2, 6, 6, 2, 4, 0, 1, 1, 3, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.169552}", "{'[2, 6, 6, 2, 4, 0, 1, 1, 3, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.169022}", "{'[2, 6, 6, 2, 4, 0, 1, 1, 3, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.169342}", "{'[2, 6, 6, 2, 4, 0, 1, 1, 3, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.169388}", "{'[2, 6, 6, 2, 4, 0, 1, 1, 3, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.169378}"]
returning from 'run': {'[2, 6, 6, 2, 4, 0, 1, 1, 3, 7, 0, 28, 0, 0, 1, 0, 0, 0]': ([0.19929, 0.199343, 0.187928, 0.169157, 0.169417, 0.169766, 0.169098, 0.169132, 0.169212, 0.169425, 0.169388, 0.169348, 0.169284, 0.16939, 0.16902, 0.169236, 0.169271, 0.169325, 0.169512, 0.169187, 0.169614, 0.169315, 0.169362, 0.169193, 0.169425, 0.169552, 0.169022, 0.169342, 0.169388, 0.169378], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 6, 6, 2, 4, 0, 1, 1, 3, 7, 0, 28, 0, 0, 1, 0, 0, 0]': ([0.19929, 0.199343, 0.187928, 0.169157, 0.169417, 0.169766, 0.169098, 0.169132, 0.169212, 0.169425, 0.169388, 0.169348, 0.169284, 0.16939, 0.16902, 0.169236, 0.169271, 0.169325, 0.169512, 0.169187, 0.169614, 0.169315, 0.169362, 0.169193, 0.169425, 0.169552, 0.169022, 0.169342, 0.169388, 0.169378], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = kkk
Code stats:
        Number of loops: 	33
        Max loop nest depth: 	6
        Additions: 		758
        Multiplications: 	162
        Divisions: 		0
        Logical: 		0
        Reads: 			1287
        Writes: 		175
        Comparisons:		33
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest62.exe __orio_perftest62.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest62.exe  
Program Test Output: 
{'[2, 1, 4, 2, 6, 2, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.181437}
{'[2, 1, 4, 2, 6, 2, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.181503}
{'[2, 1, 4, 2, 6, 2, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.169686}
{'[2, 1, 4, 2, 6, 2, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.153495}
{'[2, 1, 4, 2, 6, 2, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.153468}
{'[2, 1, 4, 2, 6, 2, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.153516}
{'[2, 1, 4, 2, 6, 2, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.153348}
{'[2, 1, 4, 2, 6, 2, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.153613}
{'[2, 1, 4, 2, 6, 2, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.153241}
{'[2, 1, 4, 2, 6, 2, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.153646}
{'[2, 1, 4, 2, 6, 2, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.153782}
{'[2, 1, 4, 2, 6, 2, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.153543}
{'[2, 1, 4, 2, 6, 2, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.153348}
{'[2, 1, 4, 2, 6, 2, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.153779}
{'[2, 1, 4, 2, 6, 2, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.153303}
{'[2, 1, 4, 2, 6, 2, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.153384}
{'[2, 1, 4, 2, 6, 2, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.1532}
{'[2, 1, 4, 2, 6, 2, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.153427}
{'[2, 1, 4, 2, 6, 2, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.15387}
{'[2, 1, 4, 2, 6, 2, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.153631}
{'[2, 1, 4, 2, 6, 2, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.153286}
{'[2, 1, 4, 2, 6, 2, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.153474}
{'[2, 1, 4, 2, 6, 2, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.153448}
{'[2, 1, 4, 2, 6, 2, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.153333}
{'[2, 1, 4, 2, 6, 2, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.153225}
{'[2, 1, 4, 2, 6, 2, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.154084}
{'[2, 1, 4, 2, 6, 2, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.153253}
{'[2, 1, 4, 2, 6, 2, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.153361}
{'[2, 1, 4, 2, 6, 2, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.153232}
{'[2, 1, 4, 2, 6, 2, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.153634}

out:
 ["{'[2, 1, 4, 2, 6, 2, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.181437}", "{'[2, 1, 4, 2, 6, 2, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.181503}", "{'[2, 1, 4, 2, 6, 2, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.169686}", "{'[2, 1, 4, 2, 6, 2, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.153495}", "{'[2, 1, 4, 2, 6, 2, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.153468}", "{'[2, 1, 4, 2, 6, 2, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.153516}", "{'[2, 1, 4, 2, 6, 2, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.153348}", "{'[2, 1, 4, 2, 6, 2, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.153613}", "{'[2, 1, 4, 2, 6, 2, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.153241}", "{'[2, 1, 4, 2, 6, 2, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.153646}", "{'[2, 1, 4, 2, 6, 2, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.153782}", "{'[2, 1, 4, 2, 6, 2, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.153543}", "{'[2, 1, 4, 2, 6, 2, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.153348}", "{'[2, 1, 4, 2, 6, 2, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.153779}", "{'[2, 1, 4, 2, 6, 2, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.153303}", "{'[2, 1, 4, 2, 6, 2, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.153384}", "{'[2, 1, 4, 2, 6, 2, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.1532}", "{'[2, 1, 4, 2, 6, 2, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.153427}", "{'[2, 1, 4, 2, 6, 2, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.15387}", "{'[2, 1, 4, 2, 6, 2, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.153631}", "{'[2, 1, 4, 2, 6, 2, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.153286}", "{'[2, 1, 4, 2, 6, 2, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.153474}", "{'[2, 1, 4, 2, 6, 2, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.153448}", "{'[2, 1, 4, 2, 6, 2, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.153333}", "{'[2, 1, 4, 2, 6, 2, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.153225}", "{'[2, 1, 4, 2, 6, 2, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.154084}", "{'[2, 1, 4, 2, 6, 2, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.153253}", "{'[2, 1, 4, 2, 6, 2, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.153361}", "{'[2, 1, 4, 2, 6, 2, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.153232}", "{'[2, 1, 4, 2, 6, 2, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 0, 0]' : 0.153634}"]
returning from 'run': {'[2, 1, 4, 2, 6, 2, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 0, 0]': ([0.181437, 0.181503, 0.169686, 0.153495, 0.153468, 0.153516, 0.153348, 0.153613, 0.153241, 0.153646, 0.153782, 0.153543, 0.153348, 0.153779, 0.153303, 0.153384, 0.1532, 0.153427, 0.15387, 0.153631, 0.153286, 0.153474, 0.153448, 0.153333, 0.153225, 0.154084, 0.153253, 0.153361, 0.153232, 0.153634], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 1, 4, 2, 6, 2, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 0, 0]': ([0.181437, 0.181503, 0.169686, 0.153495, 0.153468, 0.153516, 0.153348, 0.153613, 0.153241, 0.153646, 0.153782, 0.153543, 0.153348, 0.153779, 0.153303, 0.153384, 0.1532, 0.153427, 0.15387, 0.153631, 0.153286, 0.153474, 0.153448, 0.153333, 0.153225, 0.154084, 0.153253, 0.153361, 0.153232, 0.153634], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	55
        Max loop nest depth: 	6
        Additions: 		1431
        Multiplications: 	306
        Divisions: 		0
        Logical: 		0
        Reads: 			2378
        Writes: 		311
        Comparisons:		55
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest63.exe __orio_perftest63.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest63.exe  
Program Test Output: 
{'[2, 1, 6, 2, 1, 6, 1, 1, 3, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.123701}
{'[2, 1, 6, 2, 1, 6, 1, 1, 3, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.123805}
{'[2, 1, 6, 2, 1, 6, 1, 1, 3, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.115162}
{'[2, 1, 6, 2, 1, 6, 1, 1, 3, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.108623}
{'[2, 1, 6, 2, 1, 6, 1, 1, 3, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.108601}
{'[2, 1, 6, 2, 1, 6, 1, 1, 3, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.10871}
{'[2, 1, 6, 2, 1, 6, 1, 1, 3, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.108609}
{'[2, 1, 6, 2, 1, 6, 1, 1, 3, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.108642}
{'[2, 1, 6, 2, 1, 6, 1, 1, 3, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.110672}
{'[2, 1, 6, 2, 1, 6, 1, 1, 3, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.111808}
{'[2, 1, 6, 2, 1, 6, 1, 1, 3, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.111909}
{'[2, 1, 6, 2, 1, 6, 1, 1, 3, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.111648}
{'[2, 1, 6, 2, 1, 6, 1, 1, 3, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.111233}
{'[2, 1, 6, 2, 1, 6, 1, 1, 3, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.108726}
{'[2, 1, 6, 2, 1, 6, 1, 1, 3, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.108657}
{'[2, 1, 6, 2, 1, 6, 1, 1, 3, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.108528}
{'[2, 1, 6, 2, 1, 6, 1, 1, 3, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.109023}
{'[2, 1, 6, 2, 1, 6, 1, 1, 3, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.108987}
{'[2, 1, 6, 2, 1, 6, 1, 1, 3, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.108679}
{'[2, 1, 6, 2, 1, 6, 1, 1, 3, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.108638}
{'[2, 1, 6, 2, 1, 6, 1, 1, 3, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.10859}
{'[2, 1, 6, 2, 1, 6, 1, 1, 3, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.108793}
{'[2, 1, 6, 2, 1, 6, 1, 1, 3, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.11172}
{'[2, 1, 6, 2, 1, 6, 1, 1, 3, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.111614}
{'[2, 1, 6, 2, 1, 6, 1, 1, 3, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.111624}
{'[2, 1, 6, 2, 1, 6, 1, 1, 3, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.111251}
{'[2, 1, 6, 2, 1, 6, 1, 1, 3, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.108816}
{'[2, 1, 6, 2, 1, 6, 1, 1, 3, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.108614}
{'[2, 1, 6, 2, 1, 6, 1, 1, 3, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.10864}
{'[2, 1, 6, 2, 1, 6, 1, 1, 3, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.109294}

out:
 ["{'[2, 1, 6, 2, 1, 6, 1, 1, 3, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.123701}", "{'[2, 1, 6, 2, 1, 6, 1, 1, 3, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.123805}", "{'[2, 1, 6, 2, 1, 6, 1, 1, 3, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.115162}", "{'[2, 1, 6, 2, 1, 6, 1, 1, 3, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.108623}", "{'[2, 1, 6, 2, 1, 6, 1, 1, 3, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.108601}", "{'[2, 1, 6, 2, 1, 6, 1, 1, 3, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.10871}", "{'[2, 1, 6, 2, 1, 6, 1, 1, 3, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.108609}", "{'[2, 1, 6, 2, 1, 6, 1, 1, 3, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.108642}", "{'[2, 1, 6, 2, 1, 6, 1, 1, 3, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.110672}", "{'[2, 1, 6, 2, 1, 6, 1, 1, 3, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.111808}", "{'[2, 1, 6, 2, 1, 6, 1, 1, 3, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.111909}", "{'[2, 1, 6, 2, 1, 6, 1, 1, 3, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.111648}", "{'[2, 1, 6, 2, 1, 6, 1, 1, 3, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.111233}", "{'[2, 1, 6, 2, 1, 6, 1, 1, 3, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.108726}", "{'[2, 1, 6, 2, 1, 6, 1, 1, 3, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.108657}", "{'[2, 1, 6, 2, 1, 6, 1, 1, 3, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.108528}", "{'[2, 1, 6, 2, 1, 6, 1, 1, 3, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.109023}", "{'[2, 1, 6, 2, 1, 6, 1, 1, 3, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.108987}", "{'[2, 1, 6, 2, 1, 6, 1, 1, 3, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.108679}", "{'[2, 1, 6, 2, 1, 6, 1, 1, 3, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.108638}", "{'[2, 1, 6, 2, 1, 6, 1, 1, 3, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.10859}", "{'[2, 1, 6, 2, 1, 6, 1, 1, 3, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.108793}", "{'[2, 1, 6, 2, 1, 6, 1, 1, 3, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.11172}", "{'[2, 1, 6, 2, 1, 6, 1, 1, 3, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.111614}", "{'[2, 1, 6, 2, 1, 6, 1, 1, 3, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.111624}", "{'[2, 1, 6, 2, 1, 6, 1, 1, 3, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.111251}", "{'[2, 1, 6, 2, 1, 6, 1, 1, 3, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.108816}", "{'[2, 1, 6, 2, 1, 6, 1, 1, 3, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.108614}", "{'[2, 1, 6, 2, 1, 6, 1, 1, 3, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.10864}", "{'[2, 1, 6, 2, 1, 6, 1, 1, 3, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.109294}"]
returning from 'run': {'[2, 1, 6, 2, 1, 6, 1, 1, 3, 7, 0, 28, 1, 0, 1, 0, 1, 0]': ([0.123701, 0.123805, 0.115162, 0.108623, 0.108601, 0.10871, 0.108609, 0.108642, 0.110672, 0.111808, 0.111909, 0.111648, 0.111233, 0.108726, 0.108657, 0.108528, 0.109023, 0.108987, 0.108679, 0.108638, 0.10859, 0.108793, 0.11172, 0.111614, 0.111624, 0.111251, 0.108816, 0.108614, 0.10864, 0.109294], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 1, 6, 2, 1, 6, 1, 1, 3, 7, 0, 28, 1, 0, 1, 0, 1, 0]': ([0.123701, 0.123805, 0.115162, 0.108623, 0.108601, 0.10871, 0.108609, 0.108642, 0.110672, 0.111808, 0.111909, 0.111648, 0.111233, 0.108726, 0.108657, 0.108528, 0.109023, 0.108987, 0.108679, 0.108638, 0.10859, 0.108793, 0.11172, 0.111614, 0.111624, 0.111251, 0.108816, 0.108614, 0.10864, 0.109294], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	39
        Max loop nest depth: 	5
        Additions: 		826
        Multiplications: 	306
        Divisions: 		0
        Logical: 		0
        Reads: 			1771
        Writes: 		359
        Comparisons:		39
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest64.exe __orio_perftest64.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest64.exe  
Program Test Output: 
{'[2, 6, 0, 2, 0, 2, 0, 1, 12, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.123072}
{'[2, 6, 0, 2, 0, 2, 0, 1, 12, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.123004}
{'[2, 6, 0, 2, 0, 2, 0, 1, 12, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.12287}
{'[2, 6, 0, 2, 0, 2, 0, 1, 12, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.121782}
{'[2, 6, 0, 2, 0, 2, 0, 1, 12, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.10893}
{'[2, 6, 0, 2, 0, 2, 0, 1, 12, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.107448}
{'[2, 6, 0, 2, 0, 2, 0, 1, 12, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.107587}
{'[2, 6, 0, 2, 0, 2, 0, 1, 12, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.107916}
{'[2, 6, 0, 2, 0, 2, 0, 1, 12, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.107569}
{'[2, 6, 0, 2, 0, 2, 0, 1, 12, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.107525}
{'[2, 6, 0, 2, 0, 2, 0, 1, 12, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.107495}
{'[2, 6, 0, 2, 0, 2, 0, 1, 12, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.107419}
{'[2, 6, 0, 2, 0, 2, 0, 1, 12, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.107395}
{'[2, 6, 0, 2, 0, 2, 0, 1, 12, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.107486}
{'[2, 6, 0, 2, 0, 2, 0, 1, 12, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.108012}
{'[2, 6, 0, 2, 0, 2, 0, 1, 12, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.107345}
{'[2, 6, 0, 2, 0, 2, 0, 1, 12, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.107875}
{'[2, 6, 0, 2, 0, 2, 0, 1, 12, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.107664}
{'[2, 6, 0, 2, 0, 2, 0, 1, 12, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.10782}
{'[2, 6, 0, 2, 0, 2, 0, 1, 12, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.107506}
{'[2, 6, 0, 2, 0, 2, 0, 1, 12, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.107458}
{'[2, 6, 0, 2, 0, 2, 0, 1, 12, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.107443}
{'[2, 6, 0, 2, 0, 2, 0, 1, 12, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.107493}
{'[2, 6, 0, 2, 0, 2, 0, 1, 12, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.107474}
{'[2, 6, 0, 2, 0, 2, 0, 1, 12, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.107487}
{'[2, 6, 0, 2, 0, 2, 0, 1, 12, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.107611}
{'[2, 6, 0, 2, 0, 2, 0, 1, 12, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.107821}
{'[2, 6, 0, 2, 0, 2, 0, 1, 12, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.107681}
{'[2, 6, 0, 2, 0, 2, 0, 1, 12, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.107469}
{'[2, 6, 0, 2, 0, 2, 0, 1, 12, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.107368}

out:
 ["{'[2, 6, 0, 2, 0, 2, 0, 1, 12, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.123072}", "{'[2, 6, 0, 2, 0, 2, 0, 1, 12, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.123004}", "{'[2, 6, 0, 2, 0, 2, 0, 1, 12, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.12287}", "{'[2, 6, 0, 2, 0, 2, 0, 1, 12, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.121782}", "{'[2, 6, 0, 2, 0, 2, 0, 1, 12, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.10893}", "{'[2, 6, 0, 2, 0, 2, 0, 1, 12, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.107448}", "{'[2, 6, 0, 2, 0, 2, 0, 1, 12, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.107587}", "{'[2, 6, 0, 2, 0, 2, 0, 1, 12, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.107916}", "{'[2, 6, 0, 2, 0, 2, 0, 1, 12, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.107569}", "{'[2, 6, 0, 2, 0, 2, 0, 1, 12, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.107525}", "{'[2, 6, 0, 2, 0, 2, 0, 1, 12, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.107495}", "{'[2, 6, 0, 2, 0, 2, 0, 1, 12, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.107419}", "{'[2, 6, 0, 2, 0, 2, 0, 1, 12, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.107395}", "{'[2, 6, 0, 2, 0, 2, 0, 1, 12, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.107486}", "{'[2, 6, 0, 2, 0, 2, 0, 1, 12, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.108012}", "{'[2, 6, 0, 2, 0, 2, 0, 1, 12, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.107345}", "{'[2, 6, 0, 2, 0, 2, 0, 1, 12, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.107875}", "{'[2, 6, 0, 2, 0, 2, 0, 1, 12, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.107664}", "{'[2, 6, 0, 2, 0, 2, 0, 1, 12, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.10782}", "{'[2, 6, 0, 2, 0, 2, 0, 1, 12, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.107506}", "{'[2, 6, 0, 2, 0, 2, 0, 1, 12, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.107458}", "{'[2, 6, 0, 2, 0, 2, 0, 1, 12, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.107443}", "{'[2, 6, 0, 2, 0, 2, 0, 1, 12, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.107493}", "{'[2, 6, 0, 2, 0, 2, 0, 1, 12, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.107474}", "{'[2, 6, 0, 2, 0, 2, 0, 1, 12, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.107487}", "{'[2, 6, 0, 2, 0, 2, 0, 1, 12, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.107611}", "{'[2, 6, 0, 2, 0, 2, 0, 1, 12, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.107821}", "{'[2, 6, 0, 2, 0, 2, 0, 1, 12, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.107681}", "{'[2, 6, 0, 2, 0, 2, 0, 1, 12, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.107469}", "{'[2, 6, 0, 2, 0, 2, 0, 1, 12, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.107368}"]
returning from 'run': {'[2, 6, 0, 2, 0, 2, 0, 1, 12, 7, 0, 28, 1, 0, 1, 1, 0, 0]': ([0.123072, 0.123004, 0.12287, 0.121782, 0.10893, 0.107448, 0.107587, 0.107916, 0.107569, 0.107525, 0.107495, 0.107419, 0.107395, 0.107486, 0.108012, 0.107345, 0.107875, 0.107664, 0.10782, 0.107506, 0.107458, 0.107443, 0.107493, 0.107474, 0.107487, 0.107611, 0.107821, 0.107681, 0.107469, 0.107368], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 6, 0, 2, 0, 2, 0, 1, 12, 7, 0, 28, 1, 0, 1, 1, 0, 0]': ([0.123072, 0.123004, 0.12287, 0.121782, 0.10893, 0.107448, 0.107587, 0.107916, 0.107569, 0.107525, 0.107495, 0.107419, 0.107395, 0.107486, 0.108012, 0.107345, 0.107875, 0.107664, 0.10782, 0.107506, 0.107458, 0.107443, 0.107493, 0.107474, 0.107487, 0.107611, 0.107821, 0.107681, 0.107469, 0.107368], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	42
        Max loop nest depth: 	6
        Additions: 		1372
        Multiplications: 	306
        Divisions: 		0
        Logical: 		0
        Reads: 			2234
        Writes: 		282
        Comparisons:		42
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest65.exe __orio_perftest65.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest65.exe  
Program Test Output: 
{'[2, 2, 1, 2, 6, 0, 0, 1, 10, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.140295}
{'[2, 2, 1, 2, 6, 0, 0, 1, 10, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.140079}
{'[2, 2, 1, 2, 6, 0, 0, 1, 10, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.140061}
{'[2, 2, 1, 2, 6, 0, 0, 1, 10, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.129305}
{'[2, 2, 1, 2, 6, 0, 0, 1, 10, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.118339}
{'[2, 2, 1, 2, 6, 0, 0, 1, 10, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.118696}
{'[2, 2, 1, 2, 6, 0, 0, 1, 10, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.118593}
{'[2, 2, 1, 2, 6, 0, 0, 1, 10, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.118978}
{'[2, 2, 1, 2, 6, 0, 0, 1, 10, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.118336}
{'[2, 2, 1, 2, 6, 0, 0, 1, 10, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.118547}
{'[2, 2, 1, 2, 6, 0, 0, 1, 10, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.118538}
{'[2, 2, 1, 2, 6, 0, 0, 1, 10, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.119037}
{'[2, 2, 1, 2, 6, 0, 0, 1, 10, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.11846}
{'[2, 2, 1, 2, 6, 0, 0, 1, 10, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.118781}
{'[2, 2, 1, 2, 6, 0, 0, 1, 10, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.118773}
{'[2, 2, 1, 2, 6, 0, 0, 1, 10, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.118765}
{'[2, 2, 1, 2, 6, 0, 0, 1, 10, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.118516}
{'[2, 2, 1, 2, 6, 0, 0, 1, 10, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.11892}
{'[2, 2, 1, 2, 6, 0, 0, 1, 10, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.118505}
{'[2, 2, 1, 2, 6, 0, 0, 1, 10, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.118597}
{'[2, 2, 1, 2, 6, 0, 0, 1, 10, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.118894}
{'[2, 2, 1, 2, 6, 0, 0, 1, 10, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.118719}
{'[2, 2, 1, 2, 6, 0, 0, 1, 10, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.119119}
{'[2, 2, 1, 2, 6, 0, 0, 1, 10, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.118775}
{'[2, 2, 1, 2, 6, 0, 0, 1, 10, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.118656}
{'[2, 2, 1, 2, 6, 0, 0, 1, 10, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.118625}
{'[2, 2, 1, 2, 6, 0, 0, 1, 10, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.118597}
{'[2, 2, 1, 2, 6, 0, 0, 1, 10, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.118651}
{'[2, 2, 1, 2, 6, 0, 0, 1, 10, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.118399}
{'[2, 2, 1, 2, 6, 0, 0, 1, 10, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.11889}

out:
 ["{'[2, 2, 1, 2, 6, 0, 0, 1, 10, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.140295}", "{'[2, 2, 1, 2, 6, 0, 0, 1, 10, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.140079}", "{'[2, 2, 1, 2, 6, 0, 0, 1, 10, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.140061}", "{'[2, 2, 1, 2, 6, 0, 0, 1, 10, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.129305}", "{'[2, 2, 1, 2, 6, 0, 0, 1, 10, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.118339}", "{'[2, 2, 1, 2, 6, 0, 0, 1, 10, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.118696}", "{'[2, 2, 1, 2, 6, 0, 0, 1, 10, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.118593}", "{'[2, 2, 1, 2, 6, 0, 0, 1, 10, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.118978}", "{'[2, 2, 1, 2, 6, 0, 0, 1, 10, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.118336}", "{'[2, 2, 1, 2, 6, 0, 0, 1, 10, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.118547}", "{'[2, 2, 1, 2, 6, 0, 0, 1, 10, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.118538}", "{'[2, 2, 1, 2, 6, 0, 0, 1, 10, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.119037}", "{'[2, 2, 1, 2, 6, 0, 0, 1, 10, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.11846}", "{'[2, 2, 1, 2, 6, 0, 0, 1, 10, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.118781}", "{'[2, 2, 1, 2, 6, 0, 0, 1, 10, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.118773}", "{'[2, 2, 1, 2, 6, 0, 0, 1, 10, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.118765}", "{'[2, 2, 1, 2, 6, 0, 0, 1, 10, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.118516}", "{'[2, 2, 1, 2, 6, 0, 0, 1, 10, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.11892}", "{'[2, 2, 1, 2, 6, 0, 0, 1, 10, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.118505}", "{'[2, 2, 1, 2, 6, 0, 0, 1, 10, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.118597}", "{'[2, 2, 1, 2, 6, 0, 0, 1, 10, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.118894}", "{'[2, 2, 1, 2, 6, 0, 0, 1, 10, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.118719}", "{'[2, 2, 1, 2, 6, 0, 0, 1, 10, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.119119}", "{'[2, 2, 1, 2, 6, 0, 0, 1, 10, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.118775}", "{'[2, 2, 1, 2, 6, 0, 0, 1, 10, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.118656}", "{'[2, 2, 1, 2, 6, 0, 0, 1, 10, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.118625}", "{'[2, 2, 1, 2, 6, 0, 0, 1, 10, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.118597}", "{'[2, 2, 1, 2, 6, 0, 0, 1, 10, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.118651}", "{'[2, 2, 1, 2, 6, 0, 0, 1, 10, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.118399}", "{'[2, 2, 1, 2, 6, 0, 0, 1, 10, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.11889}"]
returning from 'run': {'[2, 2, 1, 2, 6, 0, 0, 1, 10, 7, 0, 28, 1, 0, 1, 0, 1, 0]': ([0.140295, 0.140079, 0.140061, 0.129305, 0.118339, 0.118696, 0.118593, 0.118978, 0.118336, 0.118547, 0.118538, 0.119037, 0.11846, 0.118781, 0.118773, 0.118765, 0.118516, 0.11892, 0.118505, 0.118597, 0.118894, 0.118719, 0.119119, 0.118775, 0.118656, 0.118625, 0.118597, 0.118651, 0.118399, 0.11889], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 2, 1, 2, 6, 0, 0, 1, 10, 7, 0, 28, 1, 0, 1, 0, 1, 0]': ([0.140295, 0.140079, 0.140061, 0.129305, 0.118339, 0.118696, 0.118593, 0.118978, 0.118336, 0.118547, 0.118538, 0.119037, 0.11846, 0.118781, 0.118773, 0.118765, 0.118516, 0.11892, 0.118505, 0.118597, 0.118894, 0.118719, 0.119119, 0.118775, 0.118656, 0.118625, 0.118597, 0.118651, 0.118399, 0.11889], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	39
        Max loop nest depth: 	6
        Additions: 		841
        Multiplications: 	306
        Divisions: 		0
        Logical: 		0
        Reads: 			1801
        Writes: 		374
        Comparisons:		39
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest66.exe __orio_perftest66.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest66.exe  
Program Test Output: 
{'[2, 0, 5, 2, 0, 6, 0, 1, 27, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.123822}
{'[2, 0, 5, 2, 0, 6, 0, 1, 27, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.123833}
{'[2, 0, 5, 2, 0, 6, 0, 1, 27, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.1238}
{'[2, 0, 5, 2, 0, 6, 0, 1, 27, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.12386}
{'[2, 0, 5, 2, 0, 6, 0, 1, 27, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.113009}
{'[2, 0, 5, 2, 0, 6, 0, 1, 27, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.104638}
{'[2, 0, 5, 2, 0, 6, 0, 1, 27, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.104653}
{'[2, 0, 5, 2, 0, 6, 0, 1, 27, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.104788}
{'[2, 0, 5, 2, 0, 6, 0, 1, 27, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.104718}
{'[2, 0, 5, 2, 0, 6, 0, 1, 27, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.104406}
{'[2, 0, 5, 2, 0, 6, 0, 1, 27, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.104483}
{'[2, 0, 5, 2, 0, 6, 0, 1, 27, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.105233}
{'[2, 0, 5, 2, 0, 6, 0, 1, 27, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.105228}
{'[2, 0, 5, 2, 0, 6, 0, 1, 27, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.105181}
{'[2, 0, 5, 2, 0, 6, 0, 1, 27, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.105308}
{'[2, 0, 5, 2, 0, 6, 0, 1, 27, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.105213}
{'[2, 0, 5, 2, 0, 6, 0, 1, 27, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.105432}
{'[2, 0, 5, 2, 0, 6, 0, 1, 27, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.105467}
{'[2, 0, 5, 2, 0, 6, 0, 1, 27, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.105459}
{'[2, 0, 5, 2, 0, 6, 0, 1, 27, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.1052}
{'[2, 0, 5, 2, 0, 6, 0, 1, 27, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.105204}
{'[2, 0, 5, 2, 0, 6, 0, 1, 27, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.105169}
{'[2, 0, 5, 2, 0, 6, 0, 1, 27, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.105235}
{'[2, 0, 5, 2, 0, 6, 0, 1, 27, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.105406}
{'[2, 0, 5, 2, 0, 6, 0, 1, 27, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.105196}
{'[2, 0, 5, 2, 0, 6, 0, 1, 27, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.105335}
{'[2, 0, 5, 2, 0, 6, 0, 1, 27, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.105298}
{'[2, 0, 5, 2, 0, 6, 0, 1, 27, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.105473}
{'[2, 0, 5, 2, 0, 6, 0, 1, 27, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.105464}
{'[2, 0, 5, 2, 0, 6, 0, 1, 27, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.105244}

out:
 ["{'[2, 0, 5, 2, 0, 6, 0, 1, 27, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.123822}", "{'[2, 0, 5, 2, 0, 6, 0, 1, 27, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.123833}", "{'[2, 0, 5, 2, 0, 6, 0, 1, 27, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.1238}", "{'[2, 0, 5, 2, 0, 6, 0, 1, 27, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.12386}", "{'[2, 0, 5, 2, 0, 6, 0, 1, 27, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.113009}", "{'[2, 0, 5, 2, 0, 6, 0, 1, 27, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.104638}", "{'[2, 0, 5, 2, 0, 6, 0, 1, 27, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.104653}", "{'[2, 0, 5, 2, 0, 6, 0, 1, 27, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.104788}", "{'[2, 0, 5, 2, 0, 6, 0, 1, 27, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.104718}", "{'[2, 0, 5, 2, 0, 6, 0, 1, 27, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.104406}", "{'[2, 0, 5, 2, 0, 6, 0, 1, 27, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.104483}", "{'[2, 0, 5, 2, 0, 6, 0, 1, 27, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.105233}", "{'[2, 0, 5, 2, 0, 6, 0, 1, 27, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.105228}", "{'[2, 0, 5, 2, 0, 6, 0, 1, 27, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.105181}", "{'[2, 0, 5, 2, 0, 6, 0, 1, 27, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.105308}", "{'[2, 0, 5, 2, 0, 6, 0, 1, 27, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.105213}", "{'[2, 0, 5, 2, 0, 6, 0, 1, 27, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.105432}", "{'[2, 0, 5, 2, 0, 6, 0, 1, 27, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.105467}", "{'[2, 0, 5, 2, 0, 6, 0, 1, 27, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.105459}", "{'[2, 0, 5, 2, 0, 6, 0, 1, 27, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.1052}", "{'[2, 0, 5, 2, 0, 6, 0, 1, 27, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.105204}", "{'[2, 0, 5, 2, 0, 6, 0, 1, 27, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.105169}", "{'[2, 0, 5, 2, 0, 6, 0, 1, 27, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.105235}", "{'[2, 0, 5, 2, 0, 6, 0, 1, 27, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.105406}", "{'[2, 0, 5, 2, 0, 6, 0, 1, 27, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.105196}", "{'[2, 0, 5, 2, 0, 6, 0, 1, 27, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.105335}", "{'[2, 0, 5, 2, 0, 6, 0, 1, 27, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.105298}", "{'[2, 0, 5, 2, 0, 6, 0, 1, 27, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.105473}", "{'[2, 0, 5, 2, 0, 6, 0, 1, 27, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.105464}", "{'[2, 0, 5, 2, 0, 6, 0, 1, 27, 7, 0, 28, 1, 0, 1, 1, 0, 0]' : 0.105244}"]
returning from 'run': {'[2, 0, 5, 2, 0, 6, 0, 1, 27, 7, 0, 28, 1, 0, 1, 1, 0, 0]': ([0.123822, 0.123833, 0.1238, 0.12386, 0.113009, 0.104638, 0.104653, 0.104788, 0.104718, 0.104406, 0.104483, 0.105233, 0.105228, 0.105181, 0.105308, 0.105213, 0.105432, 0.105467, 0.105459, 0.1052, 0.105204, 0.105169, 0.105235, 0.105406, 0.105196, 0.105335, 0.105298, 0.105473, 0.105464, 0.105244], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 0, 5, 2, 0, 6, 0, 1, 27, 7, 0, 28, 1, 0, 1, 1, 0, 0]': ([0.123822, 0.123833, 0.1238, 0.12386, 0.113009, 0.104638, 0.104653, 0.104788, 0.104718, 0.104406, 0.104483, 0.105233, 0.105228, 0.105181, 0.105308, 0.105213, 0.105432, 0.105467, 0.105459, 0.1052, 0.105204, 0.105169, 0.105235, 0.105406, 0.105196, 0.105335, 0.105298, 0.105473, 0.105464, 0.105244], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	34
        Max loop nest depth: 	5
        Additions: 		790
        Multiplications: 	306
        Divisions: 		0
        Logical: 		0
        Reads: 			1670
        Writes: 		333
        Comparisons:		34
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest67.exe __orio_perftest67.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest67.exe  
Program Test Output: 
{'[2, 6, 0, 2, 0, 6, 0, 1, 21, 7, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.147175}
{'[2, 6, 0, 2, 0, 6, 0, 1, 21, 7, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.147173}
{'[2, 6, 0, 2, 0, 6, 0, 1, 21, 7, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.147136}
{'[2, 6, 0, 2, 0, 6, 0, 1, 21, 7, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.146829}
{'[2, 6, 0, 2, 0, 6, 0, 1, 21, 7, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.128355}
{'[2, 6, 0, 2, 0, 6, 0, 1, 21, 7, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.124674}
{'[2, 6, 0, 2, 0, 6, 0, 1, 21, 7, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.124417}
{'[2, 6, 0, 2, 0, 6, 0, 1, 21, 7, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.124919}
{'[2, 6, 0, 2, 0, 6, 0, 1, 21, 7, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.124916}
{'[2, 6, 0, 2, 0, 6, 0, 1, 21, 7, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.12445}
{'[2, 6, 0, 2, 0, 6, 0, 1, 21, 7, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.124794}
{'[2, 6, 0, 2, 0, 6, 0, 1, 21, 7, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.124662}
{'[2, 6, 0, 2, 0, 6, 0, 1, 21, 7, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.124619}
{'[2, 6, 0, 2, 0, 6, 0, 1, 21, 7, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.124487}
{'[2, 6, 0, 2, 0, 6, 0, 1, 21, 7, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.124365}
{'[2, 6, 0, 2, 0, 6, 0, 1, 21, 7, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.124651}
{'[2, 6, 0, 2, 0, 6, 0, 1, 21, 7, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.124619}
{'[2, 6, 0, 2, 0, 6, 0, 1, 21, 7, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.124524}
{'[2, 6, 0, 2, 0, 6, 0, 1, 21, 7, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.124421}
{'[2, 6, 0, 2, 0, 6, 0, 1, 21, 7, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.124568}
{'[2, 6, 0, 2, 0, 6, 0, 1, 21, 7, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.124581}
{'[2, 6, 0, 2, 0, 6, 0, 1, 21, 7, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.124475}
{'[2, 6, 0, 2, 0, 6, 0, 1, 21, 7, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.124687}
{'[2, 6, 0, 2, 0, 6, 0, 1, 21, 7, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.124518}
{'[2, 6, 0, 2, 0, 6, 0, 1, 21, 7, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.124647}
{'[2, 6, 0, 2, 0, 6, 0, 1, 21, 7, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.124881}
{'[2, 6, 0, 2, 0, 6, 0, 1, 21, 7, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.125112}
{'[2, 6, 0, 2, 0, 6, 0, 1, 21, 7, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.12468}
{'[2, 6, 0, 2, 0, 6, 0, 1, 21, 7, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.12482}
{'[2, 6, 0, 2, 0, 6, 0, 1, 21, 7, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.124501}

out:
 ["{'[2, 6, 0, 2, 0, 6, 0, 1, 21, 7, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.147175}", "{'[2, 6, 0, 2, 0, 6, 0, 1, 21, 7, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.147173}", "{'[2, 6, 0, 2, 0, 6, 0, 1, 21, 7, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.147136}", "{'[2, 6, 0, 2, 0, 6, 0, 1, 21, 7, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.146829}", "{'[2, 6, 0, 2, 0, 6, 0, 1, 21, 7, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.128355}", "{'[2, 6, 0, 2, 0, 6, 0, 1, 21, 7, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.124674}", "{'[2, 6, 0, 2, 0, 6, 0, 1, 21, 7, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.124417}", "{'[2, 6, 0, 2, 0, 6, 0, 1, 21, 7, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.124919}", "{'[2, 6, 0, 2, 0, 6, 0, 1, 21, 7, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.124916}", "{'[2, 6, 0, 2, 0, 6, 0, 1, 21, 7, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.12445}", "{'[2, 6, 0, 2, 0, 6, 0, 1, 21, 7, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.124794}", "{'[2, 6, 0, 2, 0, 6, 0, 1, 21, 7, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.124662}", "{'[2, 6, 0, 2, 0, 6, 0, 1, 21, 7, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.124619}", "{'[2, 6, 0, 2, 0, 6, 0, 1, 21, 7, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.124487}", "{'[2, 6, 0, 2, 0, 6, 0, 1, 21, 7, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.124365}", "{'[2, 6, 0, 2, 0, 6, 0, 1, 21, 7, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.124651}", "{'[2, 6, 0, 2, 0, 6, 0, 1, 21, 7, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.124619}", "{'[2, 6, 0, 2, 0, 6, 0, 1, 21, 7, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.124524}", "{'[2, 6, 0, 2, 0, 6, 0, 1, 21, 7, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.124421}", "{'[2, 6, 0, 2, 0, 6, 0, 1, 21, 7, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.124568}", "{'[2, 6, 0, 2, 0, 6, 0, 1, 21, 7, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.124581}", "{'[2, 6, 0, 2, 0, 6, 0, 1, 21, 7, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.124475}", "{'[2, 6, 0, 2, 0, 6, 0, 1, 21, 7, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.124687}", "{'[2, 6, 0, 2, 0, 6, 0, 1, 21, 7, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.124518}", "{'[2, 6, 0, 2, 0, 6, 0, 1, 21, 7, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.124647}", "{'[2, 6, 0, 2, 0, 6, 0, 1, 21, 7, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.124881}", "{'[2, 6, 0, 2, 0, 6, 0, 1, 21, 7, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.125112}", "{'[2, 6, 0, 2, 0, 6, 0, 1, 21, 7, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.12468}", "{'[2, 6, 0, 2, 0, 6, 0, 1, 21, 7, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.12482}", "{'[2, 6, 0, 2, 0, 6, 0, 1, 21, 7, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.124501}"]
returning from 'run': {'[2, 6, 0, 2, 0, 6, 0, 1, 21, 7, 0, 28, 0, 1, 1, 1, 1, 0]': ([0.147175, 0.147173, 0.147136, 0.146829, 0.128355, 0.124674, 0.124417, 0.124919, 0.124916, 0.12445, 0.124794, 0.124662, 0.124619, 0.124487, 0.124365, 0.124651, 0.124619, 0.124524, 0.124421, 0.124568, 0.124581, 0.124475, 0.124687, 0.124518, 0.124647, 0.124881, 0.125112, 0.12468, 0.12482, 0.124501], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 6, 0, 2, 0, 6, 0, 1, 21, 7, 0, 28, 0, 1, 1, 1, 1, 0]': ([0.147175, 0.147173, 0.147136, 0.146829, 0.128355, 0.124674, 0.124417, 0.124919, 0.124916, 0.12445, 0.124794, 0.124662, 0.124619, 0.124487, 0.124365, 0.124651, 0.124619, 0.124524, 0.124421, 0.124568, 0.124581, 0.124475, 0.124687, 0.124518, 0.124647, 0.124881, 0.125112, 0.12468, 0.12482, 0.124501], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	41
        Max loop nest depth: 	5
        Additions: 		815
        Multiplications: 	288
        Divisions: 		0
        Logical: 		0
        Reads: 			1715
        Writes: 		347
        Comparisons:		41
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest68.exe __orio_perftest68.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest68.exe  
Program Test Output: 
{'[2, 0, 5, 2, 6, 0, 1, 1, 25, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.172115}
{'[2, 0, 5, 2, 6, 0, 1, 1, 25, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.172033}
{'[2, 0, 5, 2, 6, 0, 1, 1, 25, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.171659}
{'[2, 0, 5, 2, 6, 0, 1, 1, 25, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.14924}
{'[2, 0, 5, 2, 6, 0, 1, 1, 25, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.146077}
{'[2, 0, 5, 2, 6, 0, 1, 1, 25, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.146017}
{'[2, 0, 5, 2, 6, 0, 1, 1, 25, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.145917}
{'[2, 0, 5, 2, 6, 0, 1, 1, 25, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.146129}
{'[2, 0, 5, 2, 6, 0, 1, 1, 25, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.145899}
{'[2, 0, 5, 2, 6, 0, 1, 1, 25, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.146366}
{'[2, 0, 5, 2, 6, 0, 1, 1, 25, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.14634}
{'[2, 0, 5, 2, 6, 0, 1, 1, 25, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.146511}
{'[2, 0, 5, 2, 6, 0, 1, 1, 25, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.145929}
{'[2, 0, 5, 2, 6, 0, 1, 1, 25, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.145998}
{'[2, 0, 5, 2, 6, 0, 1, 1, 25, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.14622}
{'[2, 0, 5, 2, 6, 0, 1, 1, 25, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.146132}
{'[2, 0, 5, 2, 6, 0, 1, 1, 25, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.146056}
{'[2, 0, 5, 2, 6, 0, 1, 1, 25, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.145917}
{'[2, 0, 5, 2, 6, 0, 1, 1, 25, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.146456}
{'[2, 0, 5, 2, 6, 0, 1, 1, 25, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.145948}
{'[2, 0, 5, 2, 6, 0, 1, 1, 25, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.146867}
{'[2, 0, 5, 2, 6, 0, 1, 1, 25, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.146328}
{'[2, 0, 5, 2, 6, 0, 1, 1, 25, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.146001}
{'[2, 0, 5, 2, 6, 0, 1, 1, 25, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.146067}
{'[2, 0, 5, 2, 6, 0, 1, 1, 25, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.145952}
{'[2, 0, 5, 2, 6, 0, 1, 1, 25, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.14638}
{'[2, 0, 5, 2, 6, 0, 1, 1, 25, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.146285}
{'[2, 0, 5, 2, 6, 0, 1, 1, 25, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.146114}
{'[2, 0, 5, 2, 6, 0, 1, 1, 25, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.146123}
{'[2, 0, 5, 2, 6, 0, 1, 1, 25, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.145888}

out:
 ["{'[2, 0, 5, 2, 6, 0, 1, 1, 25, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.172115}", "{'[2, 0, 5, 2, 6, 0, 1, 1, 25, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.172033}", "{'[2, 0, 5, 2, 6, 0, 1, 1, 25, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.171659}", "{'[2, 0, 5, 2, 6, 0, 1, 1, 25, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.14924}", "{'[2, 0, 5, 2, 6, 0, 1, 1, 25, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.146077}", "{'[2, 0, 5, 2, 6, 0, 1, 1, 25, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.146017}", "{'[2, 0, 5, 2, 6, 0, 1, 1, 25, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.145917}", "{'[2, 0, 5, 2, 6, 0, 1, 1, 25, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.146129}", "{'[2, 0, 5, 2, 6, 0, 1, 1, 25, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.145899}", "{'[2, 0, 5, 2, 6, 0, 1, 1, 25, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.146366}", "{'[2, 0, 5, 2, 6, 0, 1, 1, 25, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.14634}", "{'[2, 0, 5, 2, 6, 0, 1, 1, 25, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.146511}", "{'[2, 0, 5, 2, 6, 0, 1, 1, 25, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.145929}", "{'[2, 0, 5, 2, 6, 0, 1, 1, 25, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.145998}", "{'[2, 0, 5, 2, 6, 0, 1, 1, 25, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.14622}", "{'[2, 0, 5, 2, 6, 0, 1, 1, 25, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.146132}", "{'[2, 0, 5, 2, 6, 0, 1, 1, 25, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.146056}", "{'[2, 0, 5, 2, 6, 0, 1, 1, 25, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.145917}", "{'[2, 0, 5, 2, 6, 0, 1, 1, 25, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.146456}", "{'[2, 0, 5, 2, 6, 0, 1, 1, 25, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.145948}", "{'[2, 0, 5, 2, 6, 0, 1, 1, 25, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.146867}", "{'[2, 0, 5, 2, 6, 0, 1, 1, 25, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.146328}", "{'[2, 0, 5, 2, 6, 0, 1, 1, 25, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.146001}", "{'[2, 0, 5, 2, 6, 0, 1, 1, 25, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.146067}", "{'[2, 0, 5, 2, 6, 0, 1, 1, 25, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.145952}", "{'[2, 0, 5, 2, 6, 0, 1, 1, 25, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.14638}", "{'[2, 0, 5, 2, 6, 0, 1, 1, 25, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.146285}", "{'[2, 0, 5, 2, 6, 0, 1, 1, 25, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.146114}", "{'[2, 0, 5, 2, 6, 0, 1, 1, 25, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.146123}", "{'[2, 0, 5, 2, 6, 0, 1, 1, 25, 7, 0, 28, 0, 1, 1, 1, 0, 0]' : 0.145888}"]
returning from 'run': {'[2, 0, 5, 2, 6, 0, 1, 1, 25, 7, 0, 28, 0, 1, 1, 1, 0, 0]': ([0.172115, 0.172033, 0.171659, 0.14924, 0.146077, 0.146017, 0.145917, 0.146129, 0.145899, 0.146366, 0.14634, 0.146511, 0.145929, 0.145998, 0.14622, 0.146132, 0.146056, 0.145917, 0.146456, 0.145948, 0.146867, 0.146328, 0.146001, 0.146067, 0.145952, 0.14638, 0.146285, 0.146114, 0.146123, 0.145888], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 0, 5, 2, 6, 0, 1, 1, 25, 7, 0, 28, 0, 1, 1, 1, 0, 0]': ([0.172115, 0.172033, 0.171659, 0.14924, 0.146077, 0.146017, 0.145917, 0.146129, 0.145899, 0.146366, 0.14634, 0.146511, 0.145929, 0.145998, 0.14622, 0.146132, 0.146056, 0.145917, 0.146456, 0.145948, 0.146867, 0.146328, 0.146001, 0.146067, 0.145952, 0.14638, 0.146285, 0.146114, 0.146123, 0.145888], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = jjj
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	38
        Max loop nest depth: 	5
        Additions: 		809
        Multiplications: 	306
        Divisions: 		0
        Logical: 		0
        Reads: 			1740
        Writes: 		345
        Comparisons:		38
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest69.exe __orio_perftest69.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest69.exe  
Program Test Output: 
{'[2, 4, 6, 2, 2, 4, 0, 1, 0, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.123808}
{'[2, 4, 6, 2, 2, 4, 0, 1, 0, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.12375}
{'[2, 4, 6, 2, 2, 4, 0, 1, 0, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.123626}
{'[2, 4, 6, 2, 2, 4, 0, 1, 0, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.123784}
{'[2, 4, 6, 2, 2, 4, 0, 1, 0, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.122238}
{'[2, 4, 6, 2, 2, 4, 0, 1, 0, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.108939}
{'[2, 4, 6, 2, 2, 4, 0, 1, 0, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.108128}
{'[2, 4, 6, 2, 2, 4, 0, 1, 0, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.108104}
{'[2, 4, 6, 2, 2, 4, 0, 1, 0, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.108198}
{'[2, 4, 6, 2, 2, 4, 0, 1, 0, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.108151}
{'[2, 4, 6, 2, 2, 4, 0, 1, 0, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.108203}
{'[2, 4, 6, 2, 2, 4, 0, 1, 0, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.108085}
{'[2, 4, 6, 2, 2, 4, 0, 1, 0, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.108106}
{'[2, 4, 6, 2, 2, 4, 0, 1, 0, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.108577}
{'[2, 4, 6, 2, 2, 4, 0, 1, 0, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.108369}
{'[2, 4, 6, 2, 2, 4, 0, 1, 0, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.108057}
{'[2, 4, 6, 2, 2, 4, 0, 1, 0, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.108233}
{'[2, 4, 6, 2, 2, 4, 0, 1, 0, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.10804}
{'[2, 4, 6, 2, 2, 4, 0, 1, 0, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.108129}
{'[2, 4, 6, 2, 2, 4, 0, 1, 0, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.108125}
{'[2, 4, 6, 2, 2, 4, 0, 1, 0, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.108136}
{'[2, 4, 6, 2, 2, 4, 0, 1, 0, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.108458}
{'[2, 4, 6, 2, 2, 4, 0, 1, 0, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.108141}
{'[2, 4, 6, 2, 2, 4, 0, 1, 0, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.108361}
{'[2, 4, 6, 2, 2, 4, 0, 1, 0, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.108484}
{'[2, 4, 6, 2, 2, 4, 0, 1, 0, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.108348}
{'[2, 4, 6, 2, 2, 4, 0, 1, 0, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.108475}
{'[2, 4, 6, 2, 2, 4, 0, 1, 0, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.108225}
{'[2, 4, 6, 2, 2, 4, 0, 1, 0, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.108002}
{'[2, 4, 6, 2, 2, 4, 0, 1, 0, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.108138}

out:
 ["{'[2, 4, 6, 2, 2, 4, 0, 1, 0, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.123808}", "{'[2, 4, 6, 2, 2, 4, 0, 1, 0, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.12375}", "{'[2, 4, 6, 2, 2, 4, 0, 1, 0, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.123626}", "{'[2, 4, 6, 2, 2, 4, 0, 1, 0, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.123784}", "{'[2, 4, 6, 2, 2, 4, 0, 1, 0, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.122238}", "{'[2, 4, 6, 2, 2, 4, 0, 1, 0, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.108939}", "{'[2, 4, 6, 2, 2, 4, 0, 1, 0, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.108128}", "{'[2, 4, 6, 2, 2, 4, 0, 1, 0, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.108104}", "{'[2, 4, 6, 2, 2, 4, 0, 1, 0, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.108198}", "{'[2, 4, 6, 2, 2, 4, 0, 1, 0, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.108151}", "{'[2, 4, 6, 2, 2, 4, 0, 1, 0, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.108203}", "{'[2, 4, 6, 2, 2, 4, 0, 1, 0, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.108085}", "{'[2, 4, 6, 2, 2, 4, 0, 1, 0, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.108106}", "{'[2, 4, 6, 2, 2, 4, 0, 1, 0, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.108577}", "{'[2, 4, 6, 2, 2, 4, 0, 1, 0, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.108369}", "{'[2, 4, 6, 2, 2, 4, 0, 1, 0, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.108057}", "{'[2, 4, 6, 2, 2, 4, 0, 1, 0, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.108233}", "{'[2, 4, 6, 2, 2, 4, 0, 1, 0, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.10804}", "{'[2, 4, 6, 2, 2, 4, 0, 1, 0, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.108129}", "{'[2, 4, 6, 2, 2, 4, 0, 1, 0, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.108125}", "{'[2, 4, 6, 2, 2, 4, 0, 1, 0, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.108136}", "{'[2, 4, 6, 2, 2, 4, 0, 1, 0, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.108458}", "{'[2, 4, 6, 2, 2, 4, 0, 1, 0, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.108141}", "{'[2, 4, 6, 2, 2, 4, 0, 1, 0, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.108361}", "{'[2, 4, 6, 2, 2, 4, 0, 1, 0, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.108484}", "{'[2, 4, 6, 2, 2, 4, 0, 1, 0, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.108348}", "{'[2, 4, 6, 2, 2, 4, 0, 1, 0, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.108475}", "{'[2, 4, 6, 2, 2, 4, 0, 1, 0, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.108225}", "{'[2, 4, 6, 2, 2, 4, 0, 1, 0, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.108002}", "{'[2, 4, 6, 2, 2, 4, 0, 1, 0, 7, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.108138}"]
returning from 'run': {'[2, 4, 6, 2, 2, 4, 0, 1, 0, 7, 0, 28, 1, 0, 1, 1, 1, 0]': ([0.123808, 0.12375, 0.123626, 0.123784, 0.122238, 0.108939, 0.108128, 0.108104, 0.108198, 0.108151, 0.108203, 0.108085, 0.108106, 0.108577, 0.108369, 0.108057, 0.108233, 0.10804, 0.108129, 0.108125, 0.108136, 0.108458, 0.108141, 0.108361, 0.108484, 0.108348, 0.108475, 0.108225, 0.108002, 0.108138], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 4, 6, 2, 2, 4, 0, 1, 0, 7, 0, 28, 1, 0, 1, 1, 1, 0]': ([0.123808, 0.12375, 0.123626, 0.123784, 0.122238, 0.108939, 0.108128, 0.108104, 0.108198, 0.108151, 0.108203, 0.108085, 0.108106, 0.108577, 0.108369, 0.108057, 0.108233, 0.10804, 0.108129, 0.108125, 0.108136, 0.108458, 0.108141, 0.108361, 0.108484, 0.108348, 0.108475, 0.108225, 0.108002, 0.108138], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	43
        Max loop nest depth: 	6
        Additions: 		556
        Multiplications: 	162
        Divisions: 		0
        Logical: 		0
        Reads: 			1252
        Writes: 		284
        Comparisons:		43
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest70.exe __orio_perftest70.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest70.exe  
Program Test Output: 
{'[2, 2, 0, 2, 2, 1, 1, 1, 28, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.200172}
{'[2, 2, 0, 2, 2, 1, 1, 1, 28, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.200164}
{'[2, 2, 0, 2, 2, 1, 1, 1, 28, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.195833}
{'[2, 2, 0, 2, 2, 1, 1, 1, 28, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.169969}
{'[2, 2, 0, 2, 2, 1, 1, 1, 28, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.169673}
{'[2, 2, 0, 2, 2, 1, 1, 1, 28, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.169576}
{'[2, 2, 0, 2, 2, 1, 1, 1, 28, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.169609}
{'[2, 2, 0, 2, 2, 1, 1, 1, 28, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.169531}
{'[2, 2, 0, 2, 2, 1, 1, 1, 28, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.169712}
{'[2, 2, 0, 2, 2, 1, 1, 1, 28, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.170346}
{'[2, 2, 0, 2, 2, 1, 1, 1, 28, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.169853}
{'[2, 2, 0, 2, 2, 1, 1, 1, 28, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.16968}
{'[2, 2, 0, 2, 2, 1, 1, 1, 28, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.169829}
{'[2, 2, 0, 2, 2, 1, 1, 1, 28, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.170062}
{'[2, 2, 0, 2, 2, 1, 1, 1, 28, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.169772}
{'[2, 2, 0, 2, 2, 1, 1, 1, 28, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.169911}
{'[2, 2, 0, 2, 2, 1, 1, 1, 28, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.16993}
{'[2, 2, 0, 2, 2, 1, 1, 1, 28, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.169669}
{'[2, 2, 0, 2, 2, 1, 1, 1, 28, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.169853}
{'[2, 2, 0, 2, 2, 1, 1, 1, 28, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.170567}
{'[2, 2, 0, 2, 2, 1, 1, 1, 28, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.169713}
{'[2, 2, 0, 2, 2, 1, 1, 1, 28, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.16953}
{'[2, 2, 0, 2, 2, 1, 1, 1, 28, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.169917}
{'[2, 2, 0, 2, 2, 1, 1, 1, 28, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.171359}
{'[2, 2, 0, 2, 2, 1, 1, 1, 28, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.174789}
{'[2, 2, 0, 2, 2, 1, 1, 1, 28, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.174888}
{'[2, 2, 0, 2, 2, 1, 1, 1, 28, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.174823}
{'[2, 2, 0, 2, 2, 1, 1, 1, 28, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.174891}
{'[2, 2, 0, 2, 2, 1, 1, 1, 28, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.174672}
{'[2, 2, 0, 2, 2, 1, 1, 1, 28, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.171328}

out:
 ["{'[2, 2, 0, 2, 2, 1, 1, 1, 28, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.200172}", "{'[2, 2, 0, 2, 2, 1, 1, 1, 28, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.200164}", "{'[2, 2, 0, 2, 2, 1, 1, 1, 28, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.195833}", "{'[2, 2, 0, 2, 2, 1, 1, 1, 28, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.169969}", "{'[2, 2, 0, 2, 2, 1, 1, 1, 28, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.169673}", "{'[2, 2, 0, 2, 2, 1, 1, 1, 28, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.169576}", "{'[2, 2, 0, 2, 2, 1, 1, 1, 28, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.169609}", "{'[2, 2, 0, 2, 2, 1, 1, 1, 28, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.169531}", "{'[2, 2, 0, 2, 2, 1, 1, 1, 28, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.169712}", "{'[2, 2, 0, 2, 2, 1, 1, 1, 28, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.170346}", "{'[2, 2, 0, 2, 2, 1, 1, 1, 28, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.169853}", "{'[2, 2, 0, 2, 2, 1, 1, 1, 28, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.16968}", "{'[2, 2, 0, 2, 2, 1, 1, 1, 28, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.169829}", "{'[2, 2, 0, 2, 2, 1, 1, 1, 28, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.170062}", "{'[2, 2, 0, 2, 2, 1, 1, 1, 28, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.169772}", "{'[2, 2, 0, 2, 2, 1, 1, 1, 28, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.169911}", "{'[2, 2, 0, 2, 2, 1, 1, 1, 28, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.16993}", "{'[2, 2, 0, 2, 2, 1, 1, 1, 28, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.169669}", "{'[2, 2, 0, 2, 2, 1, 1, 1, 28, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.169853}", "{'[2, 2, 0, 2, 2, 1, 1, 1, 28, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.170567}", "{'[2, 2, 0, 2, 2, 1, 1, 1, 28, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.169713}", "{'[2, 2, 0, 2, 2, 1, 1, 1, 28, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.16953}", "{'[2, 2, 0, 2, 2, 1, 1, 1, 28, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.169917}", "{'[2, 2, 0, 2, 2, 1, 1, 1, 28, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.171359}", "{'[2, 2, 0, 2, 2, 1, 1, 1, 28, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.174789}", "{'[2, 2, 0, 2, 2, 1, 1, 1, 28, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.174888}", "{'[2, 2, 0, 2, 2, 1, 1, 1, 28, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.174823}", "{'[2, 2, 0, 2, 2, 1, 1, 1, 28, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.174891}", "{'[2, 2, 0, 2, 2, 1, 1, 1, 28, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.174672}", "{'[2, 2, 0, 2, 2, 1, 1, 1, 28, 7, 0, 28, 0, 0, 1, 1, 0, 0]' : 0.171328}"]
returning from 'run': {'[2, 2, 0, 2, 2, 1, 1, 1, 28, 7, 0, 28, 0, 0, 1, 1, 0, 0]': ([0.200172, 0.200164, 0.195833, 0.169969, 0.169673, 0.169576, 0.169609, 0.169531, 0.169712, 0.170346, 0.169853, 0.16968, 0.169829, 0.170062, 0.169772, 0.169911, 0.16993, 0.169669, 0.169853, 0.170567, 0.169713, 0.16953, 0.169917, 0.171359, 0.174789, 0.174888, 0.174823, 0.174891, 0.174672, 0.171328], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 2, 0, 2, 2, 1, 1, 1, 28, 7, 0, 28, 0, 0, 1, 1, 0, 0]': ([0.200172, 0.200164, 0.195833, 0.169969, 0.169673, 0.169576, 0.169609, 0.169531, 0.169712, 0.170346, 0.169853, 0.16968, 0.169829, 0.170062, 0.169772, 0.169911, 0.16993, 0.169669, 0.169853, 0.170567, 0.169713, 0.16953, 0.169917, 0.171359, 0.174789, 0.174888, 0.174823, 0.174891, 0.174672, 0.171328], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	32
        Max loop nest depth: 	5
        Additions: 		782
        Multiplications: 	162
        Divisions: 		0
        Logical: 		0
        Reads: 			1338
        Writes: 		202
        Comparisons:		32
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest71.exe __orio_perftest71.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest71.exe  
Program Test Output: 
{'[2, 0, 0, 2, 1, 1, 0, 1, 25, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.195856}
{'[2, 0, 0, 2, 1, 1, 0, 1, 25, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.195693}
{'[2, 0, 0, 2, 1, 1, 0, 1, 25, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.194126}
{'[2, 0, 0, 2, 1, 1, 0, 1, 25, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.166622}
{'[2, 0, 0, 2, 1, 1, 0, 1, 25, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.165501}
{'[2, 0, 0, 2, 1, 1, 0, 1, 25, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.165501}
{'[2, 0, 0, 2, 1, 1, 0, 1, 25, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.165409}
{'[2, 0, 0, 2, 1, 1, 0, 1, 25, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.165893}
{'[2, 0, 0, 2, 1, 1, 0, 1, 25, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.165423}
{'[2, 0, 0, 2, 1, 1, 0, 1, 25, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.165491}
{'[2, 0, 0, 2, 1, 1, 0, 1, 25, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.165493}
{'[2, 0, 0, 2, 1, 1, 0, 1, 25, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.165456}
{'[2, 0, 0, 2, 1, 1, 0, 1, 25, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.165189}
{'[2, 0, 0, 2, 1, 1, 0, 1, 25, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.165587}
{'[2, 0, 0, 2, 1, 1, 0, 1, 25, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.165586}
{'[2, 0, 0, 2, 1, 1, 0, 1, 25, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.16603}
{'[2, 0, 0, 2, 1, 1, 0, 1, 25, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.165533}
{'[2, 0, 0, 2, 1, 1, 0, 1, 25, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.165394}
{'[2, 0, 0, 2, 1, 1, 0, 1, 25, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.165449}
{'[2, 0, 0, 2, 1, 1, 0, 1, 25, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.165765}
{'[2, 0, 0, 2, 1, 1, 0, 1, 25, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.165338}
{'[2, 0, 0, 2, 1, 1, 0, 1, 25, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.166044}
{'[2, 0, 0, 2, 1, 1, 0, 1, 25, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.165747}
{'[2, 0, 0, 2, 1, 1, 0, 1, 25, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.165428}
{'[2, 0, 0, 2, 1, 1, 0, 1, 25, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.165308}
{'[2, 0, 0, 2, 1, 1, 0, 1, 25, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.165767}
{'[2, 0, 0, 2, 1, 1, 0, 1, 25, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.165392}
{'[2, 0, 0, 2, 1, 1, 0, 1, 25, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.165782}
{'[2, 0, 0, 2, 1, 1, 0, 1, 25, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.165471}
{'[2, 0, 0, 2, 1, 1, 0, 1, 25, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.16546}

out:
 ["{'[2, 0, 0, 2, 1, 1, 0, 1, 25, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.195856}", "{'[2, 0, 0, 2, 1, 1, 0, 1, 25, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.195693}", "{'[2, 0, 0, 2, 1, 1, 0, 1, 25, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.194126}", "{'[2, 0, 0, 2, 1, 1, 0, 1, 25, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.166622}", "{'[2, 0, 0, 2, 1, 1, 0, 1, 25, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.165501}", "{'[2, 0, 0, 2, 1, 1, 0, 1, 25, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.165501}", "{'[2, 0, 0, 2, 1, 1, 0, 1, 25, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.165409}", "{'[2, 0, 0, 2, 1, 1, 0, 1, 25, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.165893}", "{'[2, 0, 0, 2, 1, 1, 0, 1, 25, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.165423}", "{'[2, 0, 0, 2, 1, 1, 0, 1, 25, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.165491}", "{'[2, 0, 0, 2, 1, 1, 0, 1, 25, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.165493}", "{'[2, 0, 0, 2, 1, 1, 0, 1, 25, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.165456}", "{'[2, 0, 0, 2, 1, 1, 0, 1, 25, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.165189}", "{'[2, 0, 0, 2, 1, 1, 0, 1, 25, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.165587}", "{'[2, 0, 0, 2, 1, 1, 0, 1, 25, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.165586}", "{'[2, 0, 0, 2, 1, 1, 0, 1, 25, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.16603}", "{'[2, 0, 0, 2, 1, 1, 0, 1, 25, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.165533}", "{'[2, 0, 0, 2, 1, 1, 0, 1, 25, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.165394}", "{'[2, 0, 0, 2, 1, 1, 0, 1, 25, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.165449}", "{'[2, 0, 0, 2, 1, 1, 0, 1, 25, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.165765}", "{'[2, 0, 0, 2, 1, 1, 0, 1, 25, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.165338}", "{'[2, 0, 0, 2, 1, 1, 0, 1, 25, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.166044}", "{'[2, 0, 0, 2, 1, 1, 0, 1, 25, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.165747}", "{'[2, 0, 0, 2, 1, 1, 0, 1, 25, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.165428}", "{'[2, 0, 0, 2, 1, 1, 0, 1, 25, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.165308}", "{'[2, 0, 0, 2, 1, 1, 0, 1, 25, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.165767}", "{'[2, 0, 0, 2, 1, 1, 0, 1, 25, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.165392}", "{'[2, 0, 0, 2, 1, 1, 0, 1, 25, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.165782}", "{'[2, 0, 0, 2, 1, 1, 0, 1, 25, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.165471}", "{'[2, 0, 0, 2, 1, 1, 0, 1, 25, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.16546}"]
returning from 'run': {'[2, 0, 0, 2, 1, 1, 0, 1, 25, 7, 0, 28, 0, 0, 1, 0, 1, 0]': ([0.195856, 0.195693, 0.194126, 0.166622, 0.165501, 0.165501, 0.165409, 0.165893, 0.165423, 0.165491, 0.165493, 0.165456, 0.165189, 0.165587, 0.165586, 0.16603, 0.165533, 0.165394, 0.165449, 0.165765, 0.165338, 0.166044, 0.165747, 0.165428, 0.165308, 0.165767, 0.165392, 0.165782, 0.165471, 0.16546], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 0, 0, 2, 1, 1, 0, 1, 25, 7, 0, 28, 0, 0, 1, 0, 1, 0]': ([0.195856, 0.195693, 0.194126, 0.166622, 0.165501, 0.165501, 0.165409, 0.165893, 0.165423, 0.165491, 0.165493, 0.165456, 0.165189, 0.165587, 0.165586, 0.16603, 0.165533, 0.165394, 0.165449, 0.165765, 0.165338, 0.166044, 0.165747, 0.165428, 0.165308, 0.165767, 0.165392, 0.165782, 0.165471, 0.16546], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	52
        Max loop nest depth: 	6
        Additions: 		1448
        Multiplications: 	306
        Divisions: 		0
        Logical: 		0
        Reads: 			2403
        Writes: 		328
        Comparisons:		52
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest72.exe __orio_perftest72.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest72.exe  
Program Test Output: 
{'[2, 6, 1, 2, 0, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.126065}
{'[2, 6, 1, 2, 0, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.126337}
{'[2, 6, 1, 2, 0, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.126031}
{'[2, 6, 1, 2, 0, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.126161}
{'[2, 6, 1, 2, 0, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.125723}
{'[2, 6, 1, 2, 0, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.126153}
{'[2, 6, 1, 2, 0, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.125972}
{'[2, 6, 1, 2, 0, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.126109}
{'[2, 6, 1, 2, 0, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.125829}
{'[2, 6, 1, 2, 0, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.125913}
{'[2, 6, 1, 2, 0, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.126009}
{'[2, 6, 1, 2, 0, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.126131}
{'[2, 6, 1, 2, 0, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.126214}
{'[2, 6, 1, 2, 0, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.126066}
{'[2, 6, 1, 2, 0, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.125951}
{'[2, 6, 1, 2, 0, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.126001}
{'[2, 6, 1, 2, 0, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.125779}
{'[2, 6, 1, 2, 0, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.126196}
{'[2, 6, 1, 2, 0, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.12589}
{'[2, 6, 1, 2, 0, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.126026}
{'[2, 6, 1, 2, 0, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.12612}
{'[2, 6, 1, 2, 0, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.125877}
{'[2, 6, 1, 2, 0, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.126053}
{'[2, 6, 1, 2, 0, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.126279}
{'[2, 6, 1, 2, 0, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.125875}
{'[2, 6, 1, 2, 0, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.125953}
{'[2, 6, 1, 2, 0, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.125921}
{'[2, 6, 1, 2, 0, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.126154}
{'[2, 6, 1, 2, 0, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.12597}
{'[2, 6, 1, 2, 0, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.126364}

out:
 ["{'[2, 6, 1, 2, 0, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.126065}", "{'[2, 6, 1, 2, 0, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.126337}", "{'[2, 6, 1, 2, 0, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.126031}", "{'[2, 6, 1, 2, 0, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.126161}", "{'[2, 6, 1, 2, 0, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.125723}", "{'[2, 6, 1, 2, 0, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.126153}", "{'[2, 6, 1, 2, 0, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.125972}", "{'[2, 6, 1, 2, 0, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.126109}", "{'[2, 6, 1, 2, 0, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.125829}", "{'[2, 6, 1, 2, 0, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.125913}", "{'[2, 6, 1, 2, 0, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.126009}", "{'[2, 6, 1, 2, 0, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.126131}", "{'[2, 6, 1, 2, 0, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.126214}", "{'[2, 6, 1, 2, 0, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.126066}", "{'[2, 6, 1, 2, 0, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.125951}", "{'[2, 6, 1, 2, 0, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.126001}", "{'[2, 6, 1, 2, 0, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.125779}", "{'[2, 6, 1, 2, 0, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.126196}", "{'[2, 6, 1, 2, 0, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.12589}", "{'[2, 6, 1, 2, 0, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.126026}", "{'[2, 6, 1, 2, 0, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.12612}", "{'[2, 6, 1, 2, 0, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.125877}", "{'[2, 6, 1, 2, 0, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.126053}", "{'[2, 6, 1, 2, 0, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.126279}", "{'[2, 6, 1, 2, 0, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.125875}", "{'[2, 6, 1, 2, 0, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.125953}", "{'[2, 6, 1, 2, 0, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.125921}", "{'[2, 6, 1, 2, 0, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.126154}", "{'[2, 6, 1, 2, 0, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.12597}", "{'[2, 6, 1, 2, 0, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.126364}"]
returning from 'run': {'[2, 6, 1, 2, 0, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]': ([0.126065, 0.126337, 0.126031, 0.126161, 0.125723, 0.126153, 0.125972, 0.126109, 0.125829, 0.125913, 0.126009, 0.126131, 0.126214, 0.126066, 0.125951, 0.126001, 0.125779, 0.126196, 0.12589, 0.126026, 0.12612, 0.125877, 0.126053, 0.126279, 0.125875, 0.125953, 0.125921, 0.126154, 0.12597, 0.126364], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 6, 1, 2, 0, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]': ([0.126065, 0.126337, 0.126031, 0.126161, 0.125723, 0.126153, 0.125972, 0.126109, 0.125829, 0.125913, 0.126009, 0.126131, 0.126214, 0.126066, 0.125951, 0.126001, 0.125779, 0.126196, 0.12589, 0.126026, 0.12612, 0.125877, 0.126053, 0.126279, 0.125875, 0.125953, 0.125921, 0.126154, 0.12597, 0.126364], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	36
        Max loop nest depth: 	6
        Additions: 		1238
        Multiplications: 	306
        Divisions: 		0
        Logical: 		0
        Reads: 			2088
        Writes: 		283
        Comparisons:		36
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest73.exe __orio_perftest73.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest73.exe  
Program Test Output: 
{'[2, 2, 6, 2, 6, 4, 0, 1, 29, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.16289}
{'[2, 2, 6, 2, 6, 4, 0, 1, 29, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.162722}
{'[2, 2, 6, 2, 6, 4, 0, 1, 29, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.1629}
{'[2, 2, 6, 2, 6, 4, 0, 1, 29, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.155828}
{'[2, 2, 6, 2, 6, 4, 0, 1, 29, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.138356}
{'[2, 2, 6, 2, 6, 4, 0, 1, 29, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.138196}
{'[2, 2, 6, 2, 6, 4, 0, 1, 29, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.138964}
{'[2, 2, 6, 2, 6, 4, 0, 1, 29, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.138463}
{'[2, 2, 6, 2, 6, 4, 0, 1, 29, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.138108}
{'[2, 2, 6, 2, 6, 4, 0, 1, 29, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.138205}
{'[2, 2, 6, 2, 6, 4, 0, 1, 29, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.138128}
{'[2, 2, 6, 2, 6, 4, 0, 1, 29, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.138391}
{'[2, 2, 6, 2, 6, 4, 0, 1, 29, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.138494}
{'[2, 2, 6, 2, 6, 4, 0, 1, 29, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.138273}
{'[2, 2, 6, 2, 6, 4, 0, 1, 29, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.138897}
{'[2, 2, 6, 2, 6, 4, 0, 1, 29, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.138418}
{'[2, 2, 6, 2, 6, 4, 0, 1, 29, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.138119}
{'[2, 2, 6, 2, 6, 4, 0, 1, 29, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.138654}
{'[2, 2, 6, 2, 6, 4, 0, 1, 29, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.138282}
{'[2, 2, 6, 2, 6, 4, 0, 1, 29, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.138306}
{'[2, 2, 6, 2, 6, 4, 0, 1, 29, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.138376}
{'[2, 2, 6, 2, 6, 4, 0, 1, 29, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.138205}
{'[2, 2, 6, 2, 6, 4, 0, 1, 29, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.138615}
{'[2, 2, 6, 2, 6, 4, 0, 1, 29, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.1383}
{'[2, 2, 6, 2, 6, 4, 0, 1, 29, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.138101}
{'[2, 2, 6, 2, 6, 4, 0, 1, 29, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.138121}
{'[2, 2, 6, 2, 6, 4, 0, 1, 29, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.138918}
{'[2, 2, 6, 2, 6, 4, 0, 1, 29, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.138394}
{'[2, 2, 6, 2, 6, 4, 0, 1, 29, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.138093}
{'[2, 2, 6, 2, 6, 4, 0, 1, 29, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.138249}

out:
 ["{'[2, 2, 6, 2, 6, 4, 0, 1, 29, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.16289}", "{'[2, 2, 6, 2, 6, 4, 0, 1, 29, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.162722}", "{'[2, 2, 6, 2, 6, 4, 0, 1, 29, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.1629}", "{'[2, 2, 6, 2, 6, 4, 0, 1, 29, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.155828}", "{'[2, 2, 6, 2, 6, 4, 0, 1, 29, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.138356}", "{'[2, 2, 6, 2, 6, 4, 0, 1, 29, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.138196}", "{'[2, 2, 6, 2, 6, 4, 0, 1, 29, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.138964}", "{'[2, 2, 6, 2, 6, 4, 0, 1, 29, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.138463}", "{'[2, 2, 6, 2, 6, 4, 0, 1, 29, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.138108}", "{'[2, 2, 6, 2, 6, 4, 0, 1, 29, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.138205}", "{'[2, 2, 6, 2, 6, 4, 0, 1, 29, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.138128}", "{'[2, 2, 6, 2, 6, 4, 0, 1, 29, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.138391}", "{'[2, 2, 6, 2, 6, 4, 0, 1, 29, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.138494}", "{'[2, 2, 6, 2, 6, 4, 0, 1, 29, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.138273}", "{'[2, 2, 6, 2, 6, 4, 0, 1, 29, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.138897}", "{'[2, 2, 6, 2, 6, 4, 0, 1, 29, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.138418}", "{'[2, 2, 6, 2, 6, 4, 0, 1, 29, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.138119}", "{'[2, 2, 6, 2, 6, 4, 0, 1, 29, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.138654}", "{'[2, 2, 6, 2, 6, 4, 0, 1, 29, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.138282}", "{'[2, 2, 6, 2, 6, 4, 0, 1, 29, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.138306}", "{'[2, 2, 6, 2, 6, 4, 0, 1, 29, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.138376}", "{'[2, 2, 6, 2, 6, 4, 0, 1, 29, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.138205}", "{'[2, 2, 6, 2, 6, 4, 0, 1, 29, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.138615}", "{'[2, 2, 6, 2, 6, 4, 0, 1, 29, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.1383}", "{'[2, 2, 6, 2, 6, 4, 0, 1, 29, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.138101}", "{'[2, 2, 6, 2, 6, 4, 0, 1, 29, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.138121}", "{'[2, 2, 6, 2, 6, 4, 0, 1, 29, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.138918}", "{'[2, 2, 6, 2, 6, 4, 0, 1, 29, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.138394}", "{'[2, 2, 6, 2, 6, 4, 0, 1, 29, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.138093}", "{'[2, 2, 6, 2, 6, 4, 0, 1, 29, 7, 0, 28, 0, 1, 1, 0, 0, 0]' : 0.138249}"]
returning from 'run': {'[2, 2, 6, 2, 6, 4, 0, 1, 29, 7, 0, 28, 0, 1, 1, 0, 0, 0]': ([0.16289, 0.162722, 0.1629, 0.155828, 0.138356, 0.138196, 0.138964, 0.138463, 0.138108, 0.138205, 0.138128, 0.138391, 0.138494, 0.138273, 0.138897, 0.138418, 0.138119, 0.138654, 0.138282, 0.138306, 0.138376, 0.138205, 0.138615, 0.1383, 0.138101, 0.138121, 0.138918, 0.138394, 0.138093, 0.138249], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 2, 6, 2, 6, 4, 0, 1, 29, 7, 0, 28, 0, 1, 1, 0, 0, 0]': ([0.16289, 0.162722, 0.1629, 0.155828, 0.138356, 0.138196, 0.138964, 0.138463, 0.138108, 0.138205, 0.138128, 0.138391, 0.138494, 0.138273, 0.138897, 0.138418, 0.138119, 0.138654, 0.138282, 0.138306, 0.138376, 0.138205, 0.138615, 0.1383, 0.138101, 0.138121, 0.138918, 0.138394, 0.138093, 0.138249], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	33
        Max loop nest depth: 	6
        Additions: 		758
        Multiplications: 	162
        Divisions: 		0
        Logical: 		0
        Reads: 			1289
        Writes: 		176
        Comparisons:		33
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest74.exe __orio_perftest74.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest74.exe  
Program Test Output: 
{'[2, 1, 4, 2, 1, 0, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.182152}
{'[2, 1, 4, 2, 1, 0, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.182007}
{'[2, 1, 4, 2, 1, 0, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.182055}
{'[2, 1, 4, 2, 1, 0, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.163125}
{'[2, 1, 4, 2, 1, 0, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.154238}
{'[2, 1, 4, 2, 1, 0, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.154011}
{'[2, 1, 4, 2, 1, 0, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.153992}
{'[2, 1, 4, 2, 1, 0, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.154042}
{'[2, 1, 4, 2, 1, 0, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.154253}
{'[2, 1, 4, 2, 1, 0, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.154194}
{'[2, 1, 4, 2, 1, 0, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.153949}
{'[2, 1, 4, 2, 1, 0, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.154079}
{'[2, 1, 4, 2, 1, 0, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.153848}
{'[2, 1, 4, 2, 1, 0, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.153949}
{'[2, 1, 4, 2, 1, 0, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.153939}
{'[2, 1, 4, 2, 1, 0, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.154102}
{'[2, 1, 4, 2, 1, 0, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.154168}
{'[2, 1, 4, 2, 1, 0, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.154036}
{'[2, 1, 4, 2, 1, 0, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.154238}
{'[2, 1, 4, 2, 1, 0, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.153921}
{'[2, 1, 4, 2, 1, 0, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.1538}
{'[2, 1, 4, 2, 1, 0, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.154067}
{'[2, 1, 4, 2, 1, 0, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.153922}
{'[2, 1, 4, 2, 1, 0, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.154529}
{'[2, 1, 4, 2, 1, 0, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.153998}
{'[2, 1, 4, 2, 1, 0, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.153943}
{'[2, 1, 4, 2, 1, 0, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.153853}
{'[2, 1, 4, 2, 1, 0, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.153924}
{'[2, 1, 4, 2, 1, 0, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.153816}
{'[2, 1, 4, 2, 1, 0, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.154097}

out:
 ["{'[2, 1, 4, 2, 1, 0, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.182152}", "{'[2, 1, 4, 2, 1, 0, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.182007}", "{'[2, 1, 4, 2, 1, 0, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.182055}", "{'[2, 1, 4, 2, 1, 0, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.163125}", "{'[2, 1, 4, 2, 1, 0, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.154238}", "{'[2, 1, 4, 2, 1, 0, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.154011}", "{'[2, 1, 4, 2, 1, 0, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.153992}", "{'[2, 1, 4, 2, 1, 0, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.154042}", "{'[2, 1, 4, 2, 1, 0, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.154253}", "{'[2, 1, 4, 2, 1, 0, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.154194}", "{'[2, 1, 4, 2, 1, 0, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.153949}", "{'[2, 1, 4, 2, 1, 0, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.154079}", "{'[2, 1, 4, 2, 1, 0, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.153848}", "{'[2, 1, 4, 2, 1, 0, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.153949}", "{'[2, 1, 4, 2, 1, 0, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.153939}", "{'[2, 1, 4, 2, 1, 0, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.154102}", "{'[2, 1, 4, 2, 1, 0, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.154168}", "{'[2, 1, 4, 2, 1, 0, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.154036}", "{'[2, 1, 4, 2, 1, 0, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.154238}", "{'[2, 1, 4, 2, 1, 0, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.153921}", "{'[2, 1, 4, 2, 1, 0, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.1538}", "{'[2, 1, 4, 2, 1, 0, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.154067}", "{'[2, 1, 4, 2, 1, 0, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.153922}", "{'[2, 1, 4, 2, 1, 0, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.154529}", "{'[2, 1, 4, 2, 1, 0, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.153998}", "{'[2, 1, 4, 2, 1, 0, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.153943}", "{'[2, 1, 4, 2, 1, 0, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.153853}", "{'[2, 1, 4, 2, 1, 0, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.153924}", "{'[2, 1, 4, 2, 1, 0, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.153816}", "{'[2, 1, 4, 2, 1, 0, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 1, 0]' : 0.154097}"]
returning from 'run': {'[2, 1, 4, 2, 1, 0, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 1, 0]': ([0.182152, 0.182007, 0.182055, 0.163125, 0.154238, 0.154011, 0.153992, 0.154042, 0.154253, 0.154194, 0.153949, 0.154079, 0.153848, 0.153949, 0.153939, 0.154102, 0.154168, 0.154036, 0.154238, 0.153921, 0.1538, 0.154067, 0.153922, 0.154529, 0.153998, 0.153943, 0.153853, 0.153924, 0.153816, 0.154097], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 1, 4, 2, 1, 0, 0, 1, 0, 7, 0, 28, 0, 0, 1, 0, 1, 0]': ([0.182152, 0.182007, 0.182055, 0.163125, 0.154238, 0.154011, 0.153992, 0.154042, 0.154253, 0.154194, 0.153949, 0.154079, 0.153848, 0.153949, 0.153939, 0.154102, 0.154168, 0.154036, 0.154238, 0.153921, 0.1538, 0.154067, 0.153922, 0.154529, 0.153998, 0.153943, 0.153853, 0.153924, 0.153816, 0.154097], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	55
        Max loop nest depth: 	6
        Additions: 		1457
        Multiplications: 	306
        Divisions: 		0
        Logical: 		0
        Reads: 			2424
        Writes: 		334
        Comparisons:		55
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest75.exe __orio_perftest75.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest75.exe  
Program Test Output: 
{'[2, 6, 3, 2, 6, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.136445}
{'[2, 6, 3, 2, 6, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.136376}
{'[2, 6, 3, 2, 6, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.136397}
{'[2, 6, 3, 2, 6, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.136358}
{'[2, 6, 3, 2, 6, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.121138}
{'[2, 6, 3, 2, 6, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.116342}
{'[2, 6, 3, 2, 6, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.116633}
{'[2, 6, 3, 2, 6, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.116596}
{'[2, 6, 3, 2, 6, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.116335}
{'[2, 6, 3, 2, 6, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.116589}
{'[2, 6, 3, 2, 6, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.116363}
{'[2, 6, 3, 2, 6, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.116386}
{'[2, 6, 3, 2, 6, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.116257}
{'[2, 6, 3, 2, 6, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.116404}
{'[2, 6, 3, 2, 6, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.116322}
{'[2, 6, 3, 2, 6, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.116515}
{'[2, 6, 3, 2, 6, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.116639}
{'[2, 6, 3, 2, 6, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.116319}
{'[2, 6, 3, 2, 6, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.116219}
{'[2, 6, 3, 2, 6, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.116861}
{'[2, 6, 3, 2, 6, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.116198}
{'[2, 6, 3, 2, 6, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.116524}
{'[2, 6, 3, 2, 6, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.116448}
{'[2, 6, 3, 2, 6, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.116421}
{'[2, 6, 3, 2, 6, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.116231}
{'[2, 6, 3, 2, 6, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.116469}
{'[2, 6, 3, 2, 6, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.116789}
{'[2, 6, 3, 2, 6, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.116386}
{'[2, 6, 3, 2, 6, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.116485}
{'[2, 6, 3, 2, 6, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.116248}

out:
 ["{'[2, 6, 3, 2, 6, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.136445}", "{'[2, 6, 3, 2, 6, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.136376}", "{'[2, 6, 3, 2, 6, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.136397}", "{'[2, 6, 3, 2, 6, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.136358}", "{'[2, 6, 3, 2, 6, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.121138}", "{'[2, 6, 3, 2, 6, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.116342}", "{'[2, 6, 3, 2, 6, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.116633}", "{'[2, 6, 3, 2, 6, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.116596}", "{'[2, 6, 3, 2, 6, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.116335}", "{'[2, 6, 3, 2, 6, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.116589}", "{'[2, 6, 3, 2, 6, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.116363}", "{'[2, 6, 3, 2, 6, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.116386}", "{'[2, 6, 3, 2, 6, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.116257}", "{'[2, 6, 3, 2, 6, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.116404}", "{'[2, 6, 3, 2, 6, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.116322}", "{'[2, 6, 3, 2, 6, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.116515}", "{'[2, 6, 3, 2, 6, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.116639}", "{'[2, 6, 3, 2, 6, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.116319}", "{'[2, 6, 3, 2, 6, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.116219}", "{'[2, 6, 3, 2, 6, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.116861}", "{'[2, 6, 3, 2, 6, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.116198}", "{'[2, 6, 3, 2, 6, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.116524}", "{'[2, 6, 3, 2, 6, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.116448}", "{'[2, 6, 3, 2, 6, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.116421}", "{'[2, 6, 3, 2, 6, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.116231}", "{'[2, 6, 3, 2, 6, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.116469}", "{'[2, 6, 3, 2, 6, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.116789}", "{'[2, 6, 3, 2, 6, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.116386}", "{'[2, 6, 3, 2, 6, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.116485}", "{'[2, 6, 3, 2, 6, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]' : 0.116248}"]
returning from 'run': {'[2, 6, 3, 2, 6, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]': ([0.136445, 0.136376, 0.136397, 0.136358, 0.121138, 0.116342, 0.116633, 0.116596, 0.116335, 0.116589, 0.116363, 0.116386, 0.116257, 0.116404, 0.116322, 0.116515, 0.116639, 0.116319, 0.116219, 0.116861, 0.116198, 0.116524, 0.116448, 0.116421, 0.116231, 0.116469, 0.116789, 0.116386, 0.116485, 0.116248], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 6, 3, 2, 6, 6, 1, 1, 29, 7, 0, 28, 1, 0, 1, 0, 0, 0]': ([0.136445, 0.136376, 0.136397, 0.136358, 0.121138, 0.116342, 0.116633, 0.116596, 0.116335, 0.116589, 0.116363, 0.116386, 0.116257, 0.116404, 0.116322, 0.116515, 0.116639, 0.116319, 0.116219, 0.116861, 0.116198, 0.116524, 0.116448, 0.116421, 0.116231, 0.116469, 0.116789, 0.116386, 0.116485, 0.116248], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Complete design, with measurements:
     T1_J T1_K T2_J T2_K ACOPY_x U1_I RT_I RT_J SCR VEC1  cost_mean
324     3    0    0    6       1    0    0    0   1    1 0.15660933
325     3    2    6    1       1   28    1    0   1    1 0.09699372
432     1    0    5    6       1    5    0    0   1    0 0.15646420
458     6    1    5    0       0    0    0    1   1    0 0.17635200
477     6    6    6    6       0    1    0    1   0    0 0.14038847
823     0    0    4    6       1    0    1    0   1    0 0.11989617
967     0    1    2    6       0   29    0    0   0    0 0.20768043
1067    0    2    2    2       1    7    0    1   0    1 0.19583640
1089    6    6    0    0       1   25    1    0   1    0 0.11656653
1486    0    0    0    0       0   16    0    1   0    0 0.10766547
1640    1    0    0    2       1    0    0    1   0    1 0.18939933
1670    2    2    1    1       0   11    0    1   1    0 0.18204407
1708    0    1    0    1       1    7    0    0   1    1 0.18836303
1724    6    6    4    0       1    3    0    0   0    0 0.17194400
1793    1    4    6    2       0    0    0    0   0    0 0.15588500
1904    1    6    1    6       1    3    1    0   0    1 0.11077723
1998    6    0    0    2       0   12    1    0   1    0 0.10963417
2073    2    1    6    0       0   10    1    0   0    1 0.12118153
2279    0    5    0    6       0   27    1    0   1    0 0.10789183
2288    6    0    0    6       0   21    0    1   1    1 0.12775520
2305    0    5    6    0       1   25    0    1   1    0 0.14883213
2393    4    6    2    4       0    0    1    0   1    1 0.11078060
2436    2    0    2    1       1   28    0    0   1    0 0.17365403
2489    0    0    1    1       0   25    0    0   0    1 0.16855780
2507    6    1    0    6       1   29    1    0   0    0 0.12603740
2513    2    6    6    4       0   29    0    1   0    0 0.14139887
2633    1    4    1    0       0    0    0    0   0    1 0.15714157
2753    6    3    6    6       1   29    1    0   0    0 0.11925643

Heteroscedasticity Test p-value: 0.622703128573
Regression Step:                Df   Sum Sq  Mean Sq F value  Pr(>F)    
T1_J             1 0.002363 0.002363   6.689  0.0238 *  
T1_K             1 0.001046 0.001046   2.962  0.1109    
T2_J             1 0.000005 0.000005   0.014  0.9092    
T2_K             1 0.000934 0.000934   2.643  0.1299    
ACOPY_x          1 0.000105 0.000105   0.297  0.5956    
U1_I             1 0.000911 0.000911   2.578  0.1343    
RT_I             1 0.012003 0.012003  33.973 8.1e-05 ***
RT_J             1 0.000447 0.000447   1.265  0.2827    
SCR              1 0.000221 0.000221   0.624  0.4448    
VEC1             1 0.000038 0.000038   0.106  0.7498    
I(1/(1 + T1_J))  1 0.000076 0.000076   0.216  0.6505    
I(1/(1 + T1_K))  1 0.003033 0.003033   8.585  0.0126 *  
I(1/(1 + T2_J))  1 0.001337 0.001337   3.784  0.0756 .  
I(1/(1 + T2_K))  1 0.000532 0.000532   1.505  0.2435    
I(1/(1 + U1_I))  1 0.000084 0.000084   0.237  0.6350    
Residuals       12 0.004240 0.000353                    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Predicting Best
Generating valid search space of size 2800 (does not spend evaluations)
Valid coordinates: 560
Valid coordinates: 1120
Valid coordinates: 1680
Valid coordinates: 2240
Tested coordinates: 10000
Valid coordinates: 2800
Valid/Tested configurations: 2800/10868
Generated Search Space:
NULL
Identical predictions (tol = 1e-5): 1
Getting Best from Design
Response: ['cost_mean']
Design Names:  [1] "T1_J"      "T1_K"      "T2_J"      "T2_K"      "ACOPY_x"   "U1_I"     
 [7] "RT_I"      "RT_J"      "SCR"       "VEC1"      "cost_mean"

Design Response:       cost_mean
324  0.15660933
325  0.09699372
432  0.15646420
458  0.17635200
477  0.14038847
823  0.11989617
967  0.20768043
1067 0.19583640
1089 0.11656653
1486 0.10766547
1640 0.18939933
1670 0.18204407
1708 0.18836303
1724 0.17194400
1793 0.15588500
1904 0.11077723
1998 0.10963417
2073 0.12118153
2279 0.10789183
2288 0.12775520
2305 0.14883213
2393 0.11078060
2436 0.17365403
2489 0.16855780
2507 0.12603740
2513 0.14139887
2633 0.15714157
2753 0.11925643

Current Design Names: ['T1_J', 'T1_K', 'T2_J', 'T2_K', 'ACOPY_x', 'U1_I', 'RT_I', 'RT_J', 'SCR', 'VEC1']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Getting fixed variables
Pruning Model
Best Predicted:      T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
2777    2    2    5    2    6    0       0       1   17   7   0  28    1    0
     RT_K SCR VEC1 VEC2
2777    1   0    1    0

Best From Design: [2, 3, 2, 2, 6, 1, 1, 1, 28, 7, 0, 28, 1, 0, 1, 1, 1, 0]
Pruned Factors: ['T1_K', 'T2_J', 'T2_K', 'ACOPY_x', 'U1_I', 'RT_J', 'SCR', 'VEC1']
Fixed Factors: {'ACOPY_y': 1, 'RT_K': 1, 'T1_I': 2, 'RT_I': 1, 'U_K': 28, 'U_J': 0, 'U_I': 7, 'T2_I': 2, 'VEC2': 0, 'T1_J': 2}
Length of requested configs: 1
Result was on Database, Returning Now
Starting Point (-O3):
0.16283083333333334
Predicted Best Point:
[2, 2, 5, 2, 6, 0, 0, 1, 17, 7, 0, 28, 1, 0, 1, 0, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	42
        Max loop nest depth: 	6
        Additions: 		1379
        Multiplications: 	306
        Divisions: 		0
        Logical: 		0
        Reads: 			2248
        Writes: 		289
        Comparisons:		42
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest76.exe __orio_perftest76.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest76.exe  
Program Test Output: 
{'[2, 2, 5, 2, 6, 0, 0, 1, 17, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.134355}
{'[2, 2, 5, 2, 6, 0, 0, 1, 17, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.133952}
{'[2, 2, 5, 2, 6, 0, 0, 1, 17, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.121306}
{'[2, 2, 5, 2, 6, 0, 0, 1, 17, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.120761}
{'[2, 2, 5, 2, 6, 0, 0, 1, 17, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.120678}
{'[2, 2, 5, 2, 6, 0, 0, 1, 17, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.120696}
{'[2, 2, 5, 2, 6, 0, 0, 1, 17, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.118459}
{'[2, 2, 5, 2, 6, 0, 0, 1, 17, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.118695}
{'[2, 2, 5, 2, 6, 0, 0, 1, 17, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.120608}
{'[2, 2, 5, 2, 6, 0, 0, 1, 17, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.120682}
{'[2, 2, 5, 2, 6, 0, 0, 1, 17, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.120413}
{'[2, 2, 5, 2, 6, 0, 0, 1, 17, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.119668}
{'[2, 2, 5, 2, 6, 0, 0, 1, 17, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.120644}
{'[2, 2, 5, 2, 6, 0, 0, 1, 17, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.120728}
{'[2, 2, 5, 2, 6, 0, 0, 1, 17, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.120437}
{'[2, 2, 5, 2, 6, 0, 0, 1, 17, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.120776}
{'[2, 2, 5, 2, 6, 0, 0, 1, 17, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.120576}
{'[2, 2, 5, 2, 6, 0, 0, 1, 17, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.120045}
{'[2, 2, 5, 2, 6, 0, 0, 1, 17, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.118445}
{'[2, 2, 5, 2, 6, 0, 0, 1, 17, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.118676}
{'[2, 2, 5, 2, 6, 0, 0, 1, 17, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.120787}
{'[2, 2, 5, 2, 6, 0, 0, 1, 17, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.120661}
{'[2, 2, 5, 2, 6, 0, 0, 1, 17, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.120396}
{'[2, 2, 5, 2, 6, 0, 0, 1, 17, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.119937}
{'[2, 2, 5, 2, 6, 0, 0, 1, 17, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.120695}
{'[2, 2, 5, 2, 6, 0, 0, 1, 17, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.120698}
{'[2, 2, 5, 2, 6, 0, 0, 1, 17, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.120412}
{'[2, 2, 5, 2, 6, 0, 0, 1, 17, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.120668}
{'[2, 2, 5, 2, 6, 0, 0, 1, 17, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.120777}
{'[2, 2, 5, 2, 6, 0, 0, 1, 17, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.12073}

out:
 ["{'[2, 2, 5, 2, 6, 0, 0, 1, 17, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.134355}", "{'[2, 2, 5, 2, 6, 0, 0, 1, 17, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.133952}", "{'[2, 2, 5, 2, 6, 0, 0, 1, 17, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.121306}", "{'[2, 2, 5, 2, 6, 0, 0, 1, 17, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.120761}", "{'[2, 2, 5, 2, 6, 0, 0, 1, 17, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.120678}", "{'[2, 2, 5, 2, 6, 0, 0, 1, 17, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.120696}", "{'[2, 2, 5, 2, 6, 0, 0, 1, 17, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.118459}", "{'[2, 2, 5, 2, 6, 0, 0, 1, 17, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.118695}", "{'[2, 2, 5, 2, 6, 0, 0, 1, 17, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.120608}", "{'[2, 2, 5, 2, 6, 0, 0, 1, 17, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.120682}", "{'[2, 2, 5, 2, 6, 0, 0, 1, 17, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.120413}", "{'[2, 2, 5, 2, 6, 0, 0, 1, 17, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.119668}", "{'[2, 2, 5, 2, 6, 0, 0, 1, 17, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.120644}", "{'[2, 2, 5, 2, 6, 0, 0, 1, 17, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.120728}", "{'[2, 2, 5, 2, 6, 0, 0, 1, 17, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.120437}", "{'[2, 2, 5, 2, 6, 0, 0, 1, 17, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.120776}", "{'[2, 2, 5, 2, 6, 0, 0, 1, 17, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.120576}", "{'[2, 2, 5, 2, 6, 0, 0, 1, 17, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.120045}", "{'[2, 2, 5, 2, 6, 0, 0, 1, 17, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.118445}", "{'[2, 2, 5, 2, 6, 0, 0, 1, 17, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.118676}", "{'[2, 2, 5, 2, 6, 0, 0, 1, 17, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.120787}", "{'[2, 2, 5, 2, 6, 0, 0, 1, 17, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.120661}", "{'[2, 2, 5, 2, 6, 0, 0, 1, 17, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.120396}", "{'[2, 2, 5, 2, 6, 0, 0, 1, 17, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.119937}", "{'[2, 2, 5, 2, 6, 0, 0, 1, 17, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.120695}", "{'[2, 2, 5, 2, 6, 0, 0, 1, 17, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.120698}", "{'[2, 2, 5, 2, 6, 0, 0, 1, 17, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.120412}", "{'[2, 2, 5, 2, 6, 0, 0, 1, 17, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.120668}", "{'[2, 2, 5, 2, 6, 0, 0, 1, 17, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.120777}", "{'[2, 2, 5, 2, 6, 0, 0, 1, 17, 7, 0, 28, 1, 0, 1, 0, 1, 0]' : 0.12073}"]
returning from 'run': {'[2, 2, 5, 2, 6, 0, 0, 1, 17, 7, 0, 28, 1, 0, 1, 0, 1, 0]': ([0.134355, 0.133952, 0.121306, 0.120761, 0.120678, 0.120696, 0.118459, 0.118695, 0.120608, 0.120682, 0.120413, 0.119668, 0.120644, 0.120728, 0.120437, 0.120776, 0.120576, 0.120045, 0.118445, 0.118676, 0.120787, 0.120661, 0.120396, 0.119937, 0.120695, 0.120698, 0.120412, 0.120668, 0.120777, 0.12073], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 2, 5, 2, 6, 0, 0, 1, 17, 7, 0, 28, 1, 0, 1, 0, 1, 0]': ([0.134355, 0.133952, 0.121306, 0.120761, 0.120678, 0.120696, 0.118459, 0.118695, 0.120608, 0.120682, 0.120413, 0.119668, 0.120644, 0.120728, 0.120437, 0.120776, 0.120576, 0.120045, 0.118445, 0.118676, 0.120787, 0.120661, 0.120396, 0.119937, 0.120695, 0.120698, 0.120412, 0.120668, 0.120777, 0.12073], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Design Best Point:
[2, 3, 2, 2, 6, 1, 1, 1, 28, 7, 0, 28, 1, 0, 1, 1, 1, 0]
Length of requested configs: 1
Result was on Database, Returning Now
Fixed Factors: {'ACOPY_y': 1, 'RT_K': 1, 'T1_I': 2, 'RT_I': 1, 'U_K': 28, 'U_J': 0, 'U_I': 7, 'T2_I': 2, 'VEC2': 0, 'T1_J': 2}
Slowdown (Design Best): 0.5956716838027197
Slowdown (Predicted Best): 0.74440467356203
Budget: 63/180
Current Best Point: 
[0, 5, 4, 2, 3, 6, 1, 0, 29, 19, 0, 0, 1, 0, 1, 1, 0, 0]
Final Best Point: 
[0, 5, 4, 2, 3, 6, 1, 0, 29, 19, 0, 0, 1, 0, 1, 1, 0, 0]
Ending DOPT-ANOVA
Best Point: [0, 5, 4, 2, 3, 6, 1, 0, 29, 19, 0, 0, 1, 0, 1, 1, 0, 0]
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Speedup: 1.7712537670541095
----- end random search -----
----- begin random search summary -----
 total completed runs: 0
 total successful runs: 0
 total failed runs: 0
 speedup: 1.7712537670541095
----- end random search summary -----
----- begin summary -----
 best coordinate: [0, 5, 4, 2, 3, 6, 1, 0, 29, 19, 0, 0, 1, 0, 1, 1, 0, 0]={'ACOPY_x': True, 'ACOPY_y': False, 'RT_K': 8, 'T1_I': 1, 'T1_J': 256, 'T1_K': 128, 'U_K': 1, 'U_J': 1, 'U_I': 20, 'U1_I': 30, 'T2_K': 2048, 'T2_J': 256, 'T2_I': 128, 'VEC2': False, 'VEC1': False, 'RT_I': 8, 'SCR': True, 'RT_J': 1}, cost=9.192970e-02, transfer_time=inf, inputs=[('N', 10000)], search_time=-2159.59, runs=63
----- end summary -----
Length of requested configs: 1
Result was on Database, Returning Now
----- the obtained best performance parameters -----
 ACOPY_x = True
 ACOPY_y = False
 RT_I = 8
 RT_J = 1
 RT_K = 8
 SCR = True
 T1_I = 1
 T1_J = 256
 T1_K = 128
 T2_I = 128
 T2_J = 256
 T2_K = 2048
 U1_I = 30
 U_I = 20
 U_J = 1
 U_K = 1
 VEC1 = False
 VEC2 = False
 cost_mean = 0.0919297033333333
 points = 63
 speedup_O3 = 1.7712537670541095
 technique = DLMT
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = jjj
Code stats:
        Number of loops: 	46
        Max loop nest depth: 	5
        Additions: 		1337
        Multiplications: 	580
        Divisions: 		0
        Logical: 		0
        Reads: 			2880
        Writes: 		571
        Comparisons:		46
        Gotos: 			0
        
----- finish optimizations -----

----- begin removing annotations from output-----
----- finished removing annotations from output-----

----- begin writing the output file(s) -----
--> writing output to: _atax2.src1.c
----- finished writing the output file(s) -----

====== END ORIO ======
