
====== START ORIO ======

----- begin reading the source file: atax2.src1.c -----
----- finished reading the source file -----

----- begin parsing annotations -----
----- finished parsing annotations -----

----- begin optimizations -----
Search_Space         = 8.234e+13
Number_of_Parameters = 18
Numeric_Parameters   = 13
Binary_Parameters    = 05
['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
[[1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [False, True], [False, True], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 8, 32], [1, 8, 32], [1, 8, 32], [False, True], [False, True], [False, True]]

----- begin empirical tuning for problem size -----
 N = 10000
Parameters: {'ACOPY_x': [0, 2], 'ACOPY_y': [0, 2], 'RT_K': [0, 3], 'T1_I': [0, 7], 'T1_J': [0, 7], 'T1_K': [0, 7], 'U_K': [0, 30], 'U_J': [0, 30], 'U_I': [0, 30], 'U1_I': [0, 30], 'T2_K': [0, 7], 'T2_J': [0, 7], 'T2_I': [0, 7], 'VEC2': [0, 2], 'VEC1': [0, 2], 'RT_I': [0, 3], 'SCR': [0, 2], 'RT_J': [0, 3]}
Parameter Range Values: {'ACOPY_x': [False, True], 'ACOPY_y': [False, True], 'RT_K': [1, 8, 32], 'T1_I': [1, 16, 32, 64, 128, 256, 512], 'T1_J': [1, 16, 32, 64, 128, 256, 512], 'T1_K': [1, 16, 32, 64, 128, 256, 512], 'U_K': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_J': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U1_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'T2_K': [1, 64, 128, 256, 512, 1024, 2048], 'T2_J': [1, 64, 128, 256, 512, 1024, 2048], 'T2_I': [1, 64, 128, 256, 512, 1024, 2048], 'VEC2': [False, True], 'VEC1': [False, True], 'RT_I': [1, 8, 32], 'SCR': [False, True], 'RT_J': [1, 8, 32]}

----- begin random search -----
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Inverse Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Starting DOPT-anova
Step 0
Generating valid search space of size 4600 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Valid coordinates: 920
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Valid coordinates: 1840
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Tested coordinates: 110000
Valid coordinates: 2760
Tested coordinates: 120000
Tested coordinates: 130000
Tested coordinates: 140000
Tested coordinates: 150000
Valid coordinates: 3680
Tested coordinates: 160000
Tested coordinates: 170000
Tested coordinates: 180000
Tested coordinates: 190000
Valid coordinates: 4600
Valid/Tested configurations: 4600/195557
Generated Search Space:
NULL
Clean Info:
Removed Factors: character(0)

Removed Inverse Factors: [1] "ACOPY_x" "ACOPY_y" "SCR"     "VEC1"    "VEC2"   

New Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
New Inverse Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
New Fixed Factors: {}
Full Model:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Fixed Factors: {}
Computing D-Optimal Design
Computing D-Optimal Design with 46 experiments
Design Formula:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Starting "optFederov" run
Using Search Space:
NULL
Data Dimensions: [1] 4600   18

     T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
52      6    3    2    6    0    0       0       0    1   2  24   0    2    0
310     3    6    1    3    6    0       0       1    6  23   0  28    1    1
392     6    1    0    6    0    1       0       1   20  10   0  21    1    0
457     4    1    1    4    0    6       1       1    0  10   5   0    0    0
482     0    1    5    0    2    0       1       1   27   2   3   0    0    0
551     3    1    6    6    3    6       0       0   29   9   0   6    1    1
658     6    0    3    0    3    0       0       0    2   6   0  10    0    1
814     1    4    4    4    0    6       1       0   20  25   0   7    0    2
901     1    4    3    0    2    5       0       0   27   0   0  28    0    2
942     0    5    1    0    0    1       1       0   26  29  26   0    1    0
954     6    2    4    4    1    3       0       1    1   0   0   0    0    0
974     0    3    6    4    6    0       0       1    0   0   5  29    2    0
992     0    0    2    2    5    5       0       0    0   8  21   0    0    2
1226    0    4    3    0    0    6       1       1   12   2   1   0    0    1
1265    1    2    0    4    2    6       0       0    0  29   0  29    0    0
1375    1    1    3    1    6    1       1       0    9   3   0  29    0    0
1385    0    5    0    4    3    6       1       0    9   0  27  28    0    0
1591    0    6    0    1    0    0       0       0    8  12  29   0    1    0
2024    2    0    4    2    3    2       0       1   29   3  16   0    1    0
2045    2    1    0    3    0    1       0       0   28  18   0   4    0    0
2072    1    0    0    0    6    1       1       1   16   0  27   8    2    0
2090    0    6    6    3    6    6       1       0    3   0   6   7    0    0
2261    3    2    1    1    3    3       1       1    4  22   6   0    2    0
2337    0    0    3    6    4    5       1       0   28  24   0   0    2    0
2401    6    1    6    0    6    6       0       0    9  25   0  21    0    0
2616    1    0    4    0    1    3       0       1    3  29  23   0    1    0
2750    0    0    4    6    3    3       1       1   14   8   0  24    0    2
2818    1    0    4    5    6    0       0       0    2   0   2   0    1    0
2907    3    6    0    5    4    4       0       0   26   1   0   0    0    1
3187    4    0    0    4    0    0       1       0   27   0  14  29    0    0
3288    6    6    1    0    0    6       0       0   19   0   5  29    2    0
3330    6    6    6    5    6    0       0       1   17  27   0   3    0    2
3417    5    5    1    0    6    6       1       1   19   5   0   5    1    0
3422    4    0    6    5    6    0       1       0   15  28  28   0    0    1
3785    3    2    6    3    0    5       1       1    5   0  28  15    1    1
3804    1    6    0    6    0    1       0       1    6   0   7  15    0    0
3863    1    2    3    6    2    1       1       0    0   0  19   8    1    0
3875    6    4    3    6    0    1       0       0   25  14  11   0    0    1
3890    4    0    2    3    1    2       1       1   17   0   6  18    0    0
3895    0    4    0    1    2    2       1       0    8   0   7   6    0    1
3903    4    1    0    0    5    0       1       0    9  13   7   0    0    2
3908    0    2    1    0    1    0       0       1   27   0  26  13    0    1
3975    3    6    2    4    6    2       1       1    0   0  29  27    0    1
4077    3    1    1    6    4    0       0       0    7  27   0   6    0    0
4144    4    4    6    0    0    0       1       0    0   3   0  23    2    0
4577    0    1    1    4    0    0       1       0    0   0   2   0    1    1
     RT_K SCR VEC1 VEC2
52      0   0    0    0
310     0   0    1    1
392     0   0    0    1
457     0   0    1    1
482     2   1    1    1
551     0   0    0    0
658     1   1    0    0
814     0   1    1    0
901     0   0    0    1
942     0   1    0    0
954     0   0    1    0
974     0   1    0    0
992     0   0    0    1
1226    1   1    0    1
1265    1   1    0    0
1375    1   1    1    0
1385    2   0    1    1
1591    1   1    1    1
2024    0   1    0    0
2045    2   0    1    1
2072    0   1    1    1
2090    0   0    1    0
2261    0   0    0    0
2337    0   1    1    1
2401    2   1    1    0
2616    1   0    1    0
2750    0   0    1    0
2818    1   1    0    1
2907    0   1    1    0
3187    1   0    1    0
3288    0   1    1    1
3330    0   0    0    1
3417    1   0    0    0
3422    0   1    0    1
3785    0   1    1    1
3804    2   1    0    0
3863    1   1    1    1
3875    1   0    1    1
3890    2   1    0    1
3895    1   1    0    1
3903    0   1    1    0
3908    0   1    1    0
3975    1   0    0    0
4077    0   0    0    1
4144    0   0    0    1
4577    0   0    1    0

D-Efficiency Approximation: [1] 0.411

Measuring design of size 46
Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Length of requested configs: 1
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	5
        Additions: 		6416
        Multiplications: 	1944
        Divisions: 		0
        Logical: 		0
        Reads: 			9890
        Writes: 		1024
        Comparisons:		22
        Gotos: 			0
        
 building the original code:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -DORIGINAL -o __orio_perftest_original.exe __orio_perftest1.c timer_cpu.o -lm
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest1.exe __orio_perftest1.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest1.exe  
Program Test Output: 
{'[6, 3, 2, 6, 0, 0, 0, 0, 1, 2, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.291582}
{'[6, 3, 2, 6, 0, 0, 0, 0, 1, 2, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.270251}
{'[6, 3, 2, 6, 0, 0, 0, 0, 1, 2, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.269184}
{'[6, 3, 2, 6, 0, 0, 0, 0, 1, 2, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.267427}
{'[6, 3, 2, 6, 0, 0, 0, 0, 1, 2, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.267819}
{'[6, 3, 2, 6, 0, 0, 0, 0, 1, 2, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.26774}
{'[6, 3, 2, 6, 0, 0, 0, 0, 1, 2, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.26737}
{'[6, 3, 2, 6, 0, 0, 0, 0, 1, 2, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.267685}
{'[6, 3, 2, 6, 0, 0, 0, 0, 1, 2, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.26831}
{'[6, 3, 2, 6, 0, 0, 0, 0, 1, 2, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.267633}
{'[6, 3, 2, 6, 0, 0, 0, 0, 1, 2, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.268235}
{'[6, 3, 2, 6, 0, 0, 0, 0, 1, 2, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.266728}
{'[6, 3, 2, 6, 0, 0, 0, 0, 1, 2, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.267994}
{'[6, 3, 2, 6, 0, 0, 0, 0, 1, 2, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.268586}
{'[6, 3, 2, 6, 0, 0, 0, 0, 1, 2, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.268787}
{'[6, 3, 2, 6, 0, 0, 0, 0, 1, 2, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.266793}
{'[6, 3, 2, 6, 0, 0, 0, 0, 1, 2, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.267606}
{'[6, 3, 2, 6, 0, 0, 0, 0, 1, 2, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.268049}
{'[6, 3, 2, 6, 0, 0, 0, 0, 1, 2, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.267199}
{'[6, 3, 2, 6, 0, 0, 0, 0, 1, 2, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.268643}
{'[6, 3, 2, 6, 0, 0, 0, 0, 1, 2, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.266265}
{'[6, 3, 2, 6, 0, 0, 0, 0, 1, 2, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.268183}
{'[6, 3, 2, 6, 0, 0, 0, 0, 1, 2, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.265165}
{'[6, 3, 2, 6, 0, 0, 0, 0, 1, 2, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.267653}
{'[6, 3, 2, 6, 0, 0, 0, 0, 1, 2, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.267683}
{'[6, 3, 2, 6, 0, 0, 0, 0, 1, 2, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.268257}
{'[6, 3, 2, 6, 0, 0, 0, 0, 1, 2, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.266682}
{'[6, 3, 2, 6, 0, 0, 0, 0, 1, 2, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.267172}
{'[6, 3, 2, 6, 0, 0, 0, 0, 1, 2, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.26755}
{'[6, 3, 2, 6, 0, 0, 0, 0, 1, 2, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.268416}

out:
 ["{'[6, 3, 2, 6, 0, 0, 0, 0, 1, 2, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.291582}", "{'[6, 3, 2, 6, 0, 0, 0, 0, 1, 2, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.270251}", "{'[6, 3, 2, 6, 0, 0, 0, 0, 1, 2, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.269184}", "{'[6, 3, 2, 6, 0, 0, 0, 0, 1, 2, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.267427}", "{'[6, 3, 2, 6, 0, 0, 0, 0, 1, 2, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.267819}", "{'[6, 3, 2, 6, 0, 0, 0, 0, 1, 2, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.26774}", "{'[6, 3, 2, 6, 0, 0, 0, 0, 1, 2, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.26737}", "{'[6, 3, 2, 6, 0, 0, 0, 0, 1, 2, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.267685}", "{'[6, 3, 2, 6, 0, 0, 0, 0, 1, 2, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.26831}", "{'[6, 3, 2, 6, 0, 0, 0, 0, 1, 2, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.267633}", "{'[6, 3, 2, 6, 0, 0, 0, 0, 1, 2, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.268235}", "{'[6, 3, 2, 6, 0, 0, 0, 0, 1, 2, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.266728}", "{'[6, 3, 2, 6, 0, 0, 0, 0, 1, 2, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.267994}", "{'[6, 3, 2, 6, 0, 0, 0, 0, 1, 2, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.268586}", "{'[6, 3, 2, 6, 0, 0, 0, 0, 1, 2, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.268787}", "{'[6, 3, 2, 6, 0, 0, 0, 0, 1, 2, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.266793}", "{'[6, 3, 2, 6, 0, 0, 0, 0, 1, 2, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.267606}", "{'[6, 3, 2, 6, 0, 0, 0, 0, 1, 2, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.268049}", "{'[6, 3, 2, 6, 0, 0, 0, 0, 1, 2, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.267199}", "{'[6, 3, 2, 6, 0, 0, 0, 0, 1, 2, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.268643}", "{'[6, 3, 2, 6, 0, 0, 0, 0, 1, 2, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.266265}", "{'[6, 3, 2, 6, 0, 0, 0, 0, 1, 2, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.268183}", "{'[6, 3, 2, 6, 0, 0, 0, 0, 1, 2, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.265165}", "{'[6, 3, 2, 6, 0, 0, 0, 0, 1, 2, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.267653}", "{'[6, 3, 2, 6, 0, 0, 0, 0, 1, 2, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.267683}", "{'[6, 3, 2, 6, 0, 0, 0, 0, 1, 2, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.268257}", "{'[6, 3, 2, 6, 0, 0, 0, 0, 1, 2, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.266682}", "{'[6, 3, 2, 6, 0, 0, 0, 0, 1, 2, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.267172}", "{'[6, 3, 2, 6, 0, 0, 0, 0, 1, 2, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.26755}", "{'[6, 3, 2, 6, 0, 0, 0, 0, 1, 2, 24, 0, 2, 0, 0, 0, 0, 0]' : 0.268416}"]
returning from 'run': {'[6, 3, 2, 6, 0, 0, 0, 0, 1, 2, 24, 0, 2, 0, 0, 0, 0, 0]': ([0.291582, 0.270251, 0.269184, 0.267427, 0.267819, 0.26774, 0.26737, 0.267685, 0.26831, 0.267633, 0.268235, 0.266728, 0.267994, 0.268586, 0.268787, 0.266793, 0.267606, 0.268049, 0.267199, 0.268643, 0.266265, 0.268183, 0.265165, 0.267653, 0.267683, 0.268257, 0.266682, 0.267172, 0.26755, 0.268416], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 3, 2, 6, 0, 0, 0, 0, 1, 2, 24, 0, 2, 0, 0, 0, 0, 0]': ([0.291582, 0.270251, 0.269184, 0.267427, 0.267819, 0.26774, 0.26737, 0.267685, 0.26831, 0.267633, 0.268235, 0.266728, 0.267994, 0.268586, 0.268787, 0.266793, 0.267606, 0.268049, 0.267199, 0.268643, 0.266265, 0.268183, 0.265165, 0.267653, 0.267683, 0.268257, 0.266682, 0.267172, 0.26755, 0.268416], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	126
        Max loop nest depth: 	6
        Additions: 		11125
        Multiplications: 	2574
        Divisions: 		0
        Logical: 		0
        Reads: 			16326
        Writes: 		1712
        Comparisons:		126
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest2.exe __orio_perftest2.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest2.exe  
Program Test Output: 
{'[3, 6, 1, 3, 6, 0, 0, 1, 6, 23, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.116443}
{'[3, 6, 1, 3, 6, 0, 0, 1, 6, 23, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.116462}
{'[3, 6, 1, 3, 6, 0, 0, 1, 6, 23, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.115995}
{'[3, 6, 1, 3, 6, 0, 0, 1, 6, 23, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.108189}
{'[3, 6, 1, 3, 6, 0, 0, 1, 6, 23, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.0986681}
{'[3, 6, 1, 3, 6, 0, 0, 1, 6, 23, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.098763}
{'[3, 6, 1, 3, 6, 0, 0, 1, 6, 23, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.0986111}
{'[3, 6, 1, 3, 6, 0, 0, 1, 6, 23, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.0986621}
{'[3, 6, 1, 3, 6, 0, 0, 1, 6, 23, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.098911}
{'[3, 6, 1, 3, 6, 0, 0, 1, 6, 23, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.0988238}
{'[3, 6, 1, 3, 6, 0, 0, 1, 6, 23, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.098922}
{'[3, 6, 1, 3, 6, 0, 0, 1, 6, 23, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.0987239}
{'[3, 6, 1, 3, 6, 0, 0, 1, 6, 23, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.0989668}
{'[3, 6, 1, 3, 6, 0, 0, 1, 6, 23, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.0992999}
{'[3, 6, 1, 3, 6, 0, 0, 1, 6, 23, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.0989499}
{'[3, 6, 1, 3, 6, 0, 0, 1, 6, 23, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.099014}
{'[3, 6, 1, 3, 6, 0, 0, 1, 6, 23, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.0988011}
{'[3, 6, 1, 3, 6, 0, 0, 1, 6, 23, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.0993311}
{'[3, 6, 1, 3, 6, 0, 0, 1, 6, 23, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.098562}
{'[3, 6, 1, 3, 6, 0, 0, 1, 6, 23, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.098912}
{'[3, 6, 1, 3, 6, 0, 0, 1, 6, 23, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.098815}
{'[3, 6, 1, 3, 6, 0, 0, 1, 6, 23, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.0987461}
{'[3, 6, 1, 3, 6, 0, 0, 1, 6, 23, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.0986252}
{'[3, 6, 1, 3, 6, 0, 0, 1, 6, 23, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.0989509}
{'[3, 6, 1, 3, 6, 0, 0, 1, 6, 23, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.0992601}
{'[3, 6, 1, 3, 6, 0, 0, 1, 6, 23, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.099036}
{'[3, 6, 1, 3, 6, 0, 0, 1, 6, 23, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.0985148}
{'[3, 6, 1, 3, 6, 0, 0, 1, 6, 23, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.098736}
{'[3, 6, 1, 3, 6, 0, 0, 1, 6, 23, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.0988851}
{'[3, 6, 1, 3, 6, 0, 0, 1, 6, 23, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.0990012}

out:
 ["{'[3, 6, 1, 3, 6, 0, 0, 1, 6, 23, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.116443}", "{'[3, 6, 1, 3, 6, 0, 0, 1, 6, 23, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.116462}", "{'[3, 6, 1, 3, 6, 0, 0, 1, 6, 23, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.115995}", "{'[3, 6, 1, 3, 6, 0, 0, 1, 6, 23, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.108189}", "{'[3, 6, 1, 3, 6, 0, 0, 1, 6, 23, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.0986681}", "{'[3, 6, 1, 3, 6, 0, 0, 1, 6, 23, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.098763}", "{'[3, 6, 1, 3, 6, 0, 0, 1, 6, 23, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.0986111}", "{'[3, 6, 1, 3, 6, 0, 0, 1, 6, 23, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.0986621}", "{'[3, 6, 1, 3, 6, 0, 0, 1, 6, 23, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.098911}", "{'[3, 6, 1, 3, 6, 0, 0, 1, 6, 23, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.0988238}", "{'[3, 6, 1, 3, 6, 0, 0, 1, 6, 23, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.098922}", "{'[3, 6, 1, 3, 6, 0, 0, 1, 6, 23, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.0987239}", "{'[3, 6, 1, 3, 6, 0, 0, 1, 6, 23, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.0989668}", "{'[3, 6, 1, 3, 6, 0, 0, 1, 6, 23, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.0992999}", "{'[3, 6, 1, 3, 6, 0, 0, 1, 6, 23, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.0989499}", "{'[3, 6, 1, 3, 6, 0, 0, 1, 6, 23, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.099014}", "{'[3, 6, 1, 3, 6, 0, 0, 1, 6, 23, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.0988011}", "{'[3, 6, 1, 3, 6, 0, 0, 1, 6, 23, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.0993311}", "{'[3, 6, 1, 3, 6, 0, 0, 1, 6, 23, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.098562}", "{'[3, 6, 1, 3, 6, 0, 0, 1, 6, 23, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.098912}", "{'[3, 6, 1, 3, 6, 0, 0, 1, 6, 23, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.098815}", "{'[3, 6, 1, 3, 6, 0, 0, 1, 6, 23, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.0987461}", "{'[3, 6, 1, 3, 6, 0, 0, 1, 6, 23, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.0986252}", "{'[3, 6, 1, 3, 6, 0, 0, 1, 6, 23, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.0989509}", "{'[3, 6, 1, 3, 6, 0, 0, 1, 6, 23, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.0992601}", "{'[3, 6, 1, 3, 6, 0, 0, 1, 6, 23, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.099036}", "{'[3, 6, 1, 3, 6, 0, 0, 1, 6, 23, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.0985148}", "{'[3, 6, 1, 3, 6, 0, 0, 1, 6, 23, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.098736}", "{'[3, 6, 1, 3, 6, 0, 0, 1, 6, 23, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.0988851}", "{'[3, 6, 1, 3, 6, 0, 0, 1, 6, 23, 0, 28, 1, 1, 0, 0, 1, 1]' : 0.0990012}"]
returning from 'run': {'[3, 6, 1, 3, 6, 0, 0, 1, 6, 23, 0, 28, 1, 1, 0, 0, 1, 1]': ([0.116443, 0.116462, 0.115995, 0.108189, 0.0986681, 0.098763, 0.0986111, 0.0986621, 0.098911, 0.0988238, 0.098922, 0.0987239, 0.0989668, 0.0992999, 0.0989499, 0.099014, 0.0988011, 0.0993311, 0.098562, 0.098912, 0.098815, 0.0987461, 0.0986252, 0.0989509, 0.0992601, 0.099036, 0.0985148, 0.098736, 0.0988851, 0.0990012], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 6, 1, 3, 6, 0, 0, 1, 6, 23, 0, 28, 1, 1, 0, 0, 1, 1]': ([0.116443, 0.116462, 0.115995, 0.108189, 0.0986681, 0.098763, 0.0986111, 0.0986621, 0.098911, 0.0988238, 0.098922, 0.0987239, 0.0989668, 0.0992999, 0.0989499, 0.099014, 0.0988011, 0.0993311, 0.098562, 0.098912, 0.098815, 0.0987461, 0.0986252, 0.0989509, 0.0992601, 0.099036, 0.0985148, 0.098736, 0.0988851, 0.0990012], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	68
        Max loop nest depth: 	5
        Additions: 		4368
        Multiplications: 	960
        Divisions: 		0
        Logical: 		0
        Reads: 			6520
        Writes: 		719
        Comparisons:		68
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest3.exe __orio_perftest3.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest3.exe  
Program Test Output: 
{'[6, 1, 0, 6, 0, 1, 0, 1, 20, 10, 0, 21, 1, 0, 0, 0, 0, 1]' : 0.100677}
{'[6, 1, 0, 6, 0, 1, 0, 1, 20, 10, 0, 21, 1, 0, 0, 0, 0, 1]' : 0.100419}
{'[6, 1, 0, 6, 0, 1, 0, 1, 20, 10, 0, 21, 1, 0, 0, 0, 0, 1]' : 0.100334}
{'[6, 1, 0, 6, 0, 1, 0, 1, 20, 10, 0, 21, 1, 0, 0, 0, 0, 1]' : 0.100264}
{'[6, 1, 0, 6, 0, 1, 0, 1, 20, 10, 0, 21, 1, 0, 0, 0, 0, 1]' : 0.100428}
{'[6, 1, 0, 6, 0, 1, 0, 1, 20, 10, 0, 21, 1, 0, 0, 0, 0, 1]' : 0.100599}
{'[6, 1, 0, 6, 0, 1, 0, 1, 20, 10, 0, 21, 1, 0, 0, 0, 0, 1]' : 0.100904}
{'[6, 1, 0, 6, 0, 1, 0, 1, 20, 10, 0, 21, 1, 0, 0, 0, 0, 1]' : 0.100341}
{'[6, 1, 0, 6, 0, 1, 0, 1, 20, 10, 0, 21, 1, 0, 0, 0, 0, 1]' : 0.100857}
{'[6, 1, 0, 6, 0, 1, 0, 1, 20, 10, 0, 21, 1, 0, 0, 0, 0, 1]' : 0.100435}
{'[6, 1, 0, 6, 0, 1, 0, 1, 20, 10, 0, 21, 1, 0, 0, 0, 0, 1]' : 0.100403}
{'[6, 1, 0, 6, 0, 1, 0, 1, 20, 10, 0, 21, 1, 0, 0, 0, 0, 1]' : 0.10063}
{'[6, 1, 0, 6, 0, 1, 0, 1, 20, 10, 0, 21, 1, 0, 0, 0, 0, 1]' : 0.101007}
{'[6, 1, 0, 6, 0, 1, 0, 1, 20, 10, 0, 21, 1, 0, 0, 0, 0, 1]' : 0.100716}
{'[6, 1, 0, 6, 0, 1, 0, 1, 20, 10, 0, 21, 1, 0, 0, 0, 0, 1]' : 0.100726}
{'[6, 1, 0, 6, 0, 1, 0, 1, 20, 10, 0, 21, 1, 0, 0, 0, 0, 1]' : 0.100573}
{'[6, 1, 0, 6, 0, 1, 0, 1, 20, 10, 0, 21, 1, 0, 0, 0, 0, 1]' : 0.100798}
{'[6, 1, 0, 6, 0, 1, 0, 1, 20, 10, 0, 21, 1, 0, 0, 0, 0, 1]' : 0.100682}
{'[6, 1, 0, 6, 0, 1, 0, 1, 20, 10, 0, 21, 1, 0, 0, 0, 0, 1]' : 0.100582}
{'[6, 1, 0, 6, 0, 1, 0, 1, 20, 10, 0, 21, 1, 0, 0, 0, 0, 1]' : 0.100337}
{'[6, 1, 0, 6, 0, 1, 0, 1, 20, 10, 0, 21, 1, 0, 0, 0, 0, 1]' : 0.100385}
{'[6, 1, 0, 6, 0, 1, 0, 1, 20, 10, 0, 21, 1, 0, 0, 0, 0, 1]' : 0.101093}
{'[6, 1, 0, 6, 0, 1, 0, 1, 20, 10, 0, 21, 1, 0, 0, 0, 0, 1]' : 0.10076}
{'[6, 1, 0, 6, 0, 1, 0, 1, 20, 10, 0, 21, 1, 0, 0, 0, 0, 1]' : 0.100535}
{'[6, 1, 0, 6, 0, 1, 0, 1, 20, 10, 0, 21, 1, 0, 0, 0, 0, 1]' : 0.10038}
{'[6, 1, 0, 6, 0, 1, 0, 1, 20, 10, 0, 21, 1, 0, 0, 0, 0, 1]' : 0.100422}
{'[6, 1, 0, 6, 0, 1, 0, 1, 20, 10, 0, 21, 1, 0, 0, 0, 0, 1]' : 0.100357}
{'[6, 1, 0, 6, 0, 1, 0, 1, 20, 10, 0, 21, 1, 0, 0, 0, 0, 1]' : 0.100433}
{'[6, 1, 0, 6, 0, 1, 0, 1, 20, 10, 0, 21, 1, 0, 0, 0, 0, 1]' : 0.100396}
{'[6, 1, 0, 6, 0, 1, 0, 1, 20, 10, 0, 21, 1, 0, 0, 0, 0, 1]' : 0.100434}

out:
 ["{'[6, 1, 0, 6, 0, 1, 0, 1, 20, 10, 0, 21, 1, 0, 0, 0, 0, 1]' : 0.100677}", "{'[6, 1, 0, 6, 0, 1, 0, 1, 20, 10, 0, 21, 1, 0, 0, 0, 0, 1]' : 0.100419}", "{'[6, 1, 0, 6, 0, 1, 0, 1, 20, 10, 0, 21, 1, 0, 0, 0, 0, 1]' : 0.100334}", "{'[6, 1, 0, 6, 0, 1, 0, 1, 20, 10, 0, 21, 1, 0, 0, 0, 0, 1]' : 0.100264}", "{'[6, 1, 0, 6, 0, 1, 0, 1, 20, 10, 0, 21, 1, 0, 0, 0, 0, 1]' : 0.100428}", "{'[6, 1, 0, 6, 0, 1, 0, 1, 20, 10, 0, 21, 1, 0, 0, 0, 0, 1]' : 0.100599}", "{'[6, 1, 0, 6, 0, 1, 0, 1, 20, 10, 0, 21, 1, 0, 0, 0, 0, 1]' : 0.100904}", "{'[6, 1, 0, 6, 0, 1, 0, 1, 20, 10, 0, 21, 1, 0, 0, 0, 0, 1]' : 0.100341}", "{'[6, 1, 0, 6, 0, 1, 0, 1, 20, 10, 0, 21, 1, 0, 0, 0, 0, 1]' : 0.100857}", "{'[6, 1, 0, 6, 0, 1, 0, 1, 20, 10, 0, 21, 1, 0, 0, 0, 0, 1]' : 0.100435}", "{'[6, 1, 0, 6, 0, 1, 0, 1, 20, 10, 0, 21, 1, 0, 0, 0, 0, 1]' : 0.100403}", "{'[6, 1, 0, 6, 0, 1, 0, 1, 20, 10, 0, 21, 1, 0, 0, 0, 0, 1]' : 0.10063}", "{'[6, 1, 0, 6, 0, 1, 0, 1, 20, 10, 0, 21, 1, 0, 0, 0, 0, 1]' : 0.101007}", "{'[6, 1, 0, 6, 0, 1, 0, 1, 20, 10, 0, 21, 1, 0, 0, 0, 0, 1]' : 0.100716}", "{'[6, 1, 0, 6, 0, 1, 0, 1, 20, 10, 0, 21, 1, 0, 0, 0, 0, 1]' : 0.100726}", "{'[6, 1, 0, 6, 0, 1, 0, 1, 20, 10, 0, 21, 1, 0, 0, 0, 0, 1]' : 0.100573}", "{'[6, 1, 0, 6, 0, 1, 0, 1, 20, 10, 0, 21, 1, 0, 0, 0, 0, 1]' : 0.100798}", "{'[6, 1, 0, 6, 0, 1, 0, 1, 20, 10, 0, 21, 1, 0, 0, 0, 0, 1]' : 0.100682}", "{'[6, 1, 0, 6, 0, 1, 0, 1, 20, 10, 0, 21, 1, 0, 0, 0, 0, 1]' : 0.100582}", "{'[6, 1, 0, 6, 0, 1, 0, 1, 20, 10, 0, 21, 1, 0, 0, 0, 0, 1]' : 0.100337}", "{'[6, 1, 0, 6, 0, 1, 0, 1, 20, 10, 0, 21, 1, 0, 0, 0, 0, 1]' : 0.100385}", "{'[6, 1, 0, 6, 0, 1, 0, 1, 20, 10, 0, 21, 1, 0, 0, 0, 0, 1]' : 0.101093}", "{'[6, 1, 0, 6, 0, 1, 0, 1, 20, 10, 0, 21, 1, 0, 0, 0, 0, 1]' : 0.10076}", "{'[6, 1, 0, 6, 0, 1, 0, 1, 20, 10, 0, 21, 1, 0, 0, 0, 0, 1]' : 0.100535}", "{'[6, 1, 0, 6, 0, 1, 0, 1, 20, 10, 0, 21, 1, 0, 0, 0, 0, 1]' : 0.10038}", "{'[6, 1, 0, 6, 0, 1, 0, 1, 20, 10, 0, 21, 1, 0, 0, 0, 0, 1]' : 0.100422}", "{'[6, 1, 0, 6, 0, 1, 0, 1, 20, 10, 0, 21, 1, 0, 0, 0, 0, 1]' : 0.100357}", "{'[6, 1, 0, 6, 0, 1, 0, 1, 20, 10, 0, 21, 1, 0, 0, 0, 0, 1]' : 0.100433}", "{'[6, 1, 0, 6, 0, 1, 0, 1, 20, 10, 0, 21, 1, 0, 0, 0, 0, 1]' : 0.100396}", "{'[6, 1, 0, 6, 0, 1, 0, 1, 20, 10, 0, 21, 1, 0, 0, 0, 0, 1]' : 0.100434}"]
returning from 'run': {'[6, 1, 0, 6, 0, 1, 0, 1, 20, 10, 0, 21, 1, 0, 0, 0, 0, 1]': ([0.100677, 0.100419, 0.100334, 0.100264, 0.100428, 0.100599, 0.100904, 0.100341, 0.100857, 0.100435, 0.100403, 0.10063, 0.101007, 0.100716, 0.100726, 0.100573, 0.100798, 0.100682, 0.100582, 0.100337, 0.100385, 0.101093, 0.10076, 0.100535, 0.10038, 0.100422, 0.100357, 0.100433, 0.100396, 0.100434], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 1, 0, 6, 0, 1, 0, 1, 20, 10, 0, 21, 1, 0, 0, 0, 0, 1]': ([0.100677, 0.100419, 0.100334, 0.100264, 0.100428, 0.100599, 0.100904, 0.100341, 0.100857, 0.100435, 0.100403, 0.10063, 0.101007, 0.100716, 0.100726, 0.100573, 0.100798, 0.100682, 0.100582, 0.100337, 0.100385, 0.101093, 0.10076, 0.100535, 0.10038, 0.100422, 0.100357, 0.100433, 0.100396, 0.100434], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	73
        Max loop nest depth: 	6
        Additions: 		1039
        Multiplications: 	192
        Divisions: 		0
        Logical: 		0
        Reads: 			1903
        Writes: 		330
        Comparisons:		73
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest4.exe __orio_perftest4.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest4.exe  
Program Test Output: 
{'[4, 1, 1, 4, 0, 6, 1, 1, 0, 10, 5, 0, 0, 0, 0, 0, 1, 1]' : 0.29097}
{'[4, 1, 1, 4, 0, 6, 1, 1, 0, 10, 5, 0, 0, 0, 0, 0, 1, 1]' : 0.29098}
{'[4, 1, 1, 4, 0, 6, 1, 1, 0, 10, 5, 0, 0, 0, 0, 0, 1, 1]' : 0.291456}
{'[4, 1, 1, 4, 0, 6, 1, 1, 0, 10, 5, 0, 0, 0, 0, 0, 1, 1]' : 0.291776}
{'[4, 1, 1, 4, 0, 6, 1, 1, 0, 10, 5, 0, 0, 0, 0, 0, 1, 1]' : 0.287152}
{'[4, 1, 1, 4, 0, 6, 1, 1, 0, 10, 5, 0, 0, 0, 0, 0, 1, 1]' : 0.290799}
{'[4, 1, 1, 4, 0, 6, 1, 1, 0, 10, 5, 0, 0, 0, 0, 0, 1, 1]' : 0.291802}
{'[4, 1, 1, 4, 0, 6, 1, 1, 0, 10, 5, 0, 0, 0, 0, 0, 1, 1]' : 0.291232}
{'[4, 1, 1, 4, 0, 6, 1, 1, 0, 10, 5, 0, 0, 0, 0, 0, 1, 1]' : 0.291103}
{'[4, 1, 1, 4, 0, 6, 1, 1, 0, 10, 5, 0, 0, 0, 0, 0, 1, 1]' : 0.291022}
{'[4, 1, 1, 4, 0, 6, 1, 1, 0, 10, 5, 0, 0, 0, 0, 0, 1, 1]' : 0.291324}
{'[4, 1, 1, 4, 0, 6, 1, 1, 0, 10, 5, 0, 0, 0, 0, 0, 1, 1]' : 0.291256}
{'[4, 1, 1, 4, 0, 6, 1, 1, 0, 10, 5, 0, 0, 0, 0, 0, 1, 1]' : 0.290732}
{'[4, 1, 1, 4, 0, 6, 1, 1, 0, 10, 5, 0, 0, 0, 0, 0, 1, 1]' : 0.291314}
{'[4, 1, 1, 4, 0, 6, 1, 1, 0, 10, 5, 0, 0, 0, 0, 0, 1, 1]' : 0.291368}
{'[4, 1, 1, 4, 0, 6, 1, 1, 0, 10, 5, 0, 0, 0, 0, 0, 1, 1]' : 0.291365}
{'[4, 1, 1, 4, 0, 6, 1, 1, 0, 10, 5, 0, 0, 0, 0, 0, 1, 1]' : 0.290973}
{'[4, 1, 1, 4, 0, 6, 1, 1, 0, 10, 5, 0, 0, 0, 0, 0, 1, 1]' : 0.290906}
{'[4, 1, 1, 4, 0, 6, 1, 1, 0, 10, 5, 0, 0, 0, 0, 0, 1, 1]' : 0.287782}
{'[4, 1, 1, 4, 0, 6, 1, 1, 0, 10, 5, 0, 0, 0, 0, 0, 1, 1]' : 0.291088}
{'[4, 1, 1, 4, 0, 6, 1, 1, 0, 10, 5, 0, 0, 0, 0, 0, 1, 1]' : 0.29125}
{'[4, 1, 1, 4, 0, 6, 1, 1, 0, 10, 5, 0, 0, 0, 0, 0, 1, 1]' : 0.291403}
{'[4, 1, 1, 4, 0, 6, 1, 1, 0, 10, 5, 0, 0, 0, 0, 0, 1, 1]' : 0.291374}
{'[4, 1, 1, 4, 0, 6, 1, 1, 0, 10, 5, 0, 0, 0, 0, 0, 1, 1]' : 0.291231}
{'[4, 1, 1, 4, 0, 6, 1, 1, 0, 10, 5, 0, 0, 0, 0, 0, 1, 1]' : 0.29684}
{'[4, 1, 1, 4, 0, 6, 1, 1, 0, 10, 5, 0, 0, 0, 0, 0, 1, 1]' : 0.2996}
{'[4, 1, 1, 4, 0, 6, 1, 1, 0, 10, 5, 0, 0, 0, 0, 0, 1, 1]' : 0.299673}
{'[4, 1, 1, 4, 0, 6, 1, 1, 0, 10, 5, 0, 0, 0, 0, 0, 1, 1]' : 0.29261}
{'[4, 1, 1, 4, 0, 6, 1, 1, 0, 10, 5, 0, 0, 0, 0, 0, 1, 1]' : 0.291783}
{'[4, 1, 1, 4, 0, 6, 1, 1, 0, 10, 5, 0, 0, 0, 0, 0, 1, 1]' : 0.29131}

out:
 ["{'[4, 1, 1, 4, 0, 6, 1, 1, 0, 10, 5, 0, 0, 0, 0, 0, 1, 1]' : 0.29097}", "{'[4, 1, 1, 4, 0, 6, 1, 1, 0, 10, 5, 0, 0, 0, 0, 0, 1, 1]' : 0.29098}", "{'[4, 1, 1, 4, 0, 6, 1, 1, 0, 10, 5, 0, 0, 0, 0, 0, 1, 1]' : 0.291456}", "{'[4, 1, 1, 4, 0, 6, 1, 1, 0, 10, 5, 0, 0, 0, 0, 0, 1, 1]' : 0.291776}", "{'[4, 1, 1, 4, 0, 6, 1, 1, 0, 10, 5, 0, 0, 0, 0, 0, 1, 1]' : 0.287152}", "{'[4, 1, 1, 4, 0, 6, 1, 1, 0, 10, 5, 0, 0, 0, 0, 0, 1, 1]' : 0.290799}", "{'[4, 1, 1, 4, 0, 6, 1, 1, 0, 10, 5, 0, 0, 0, 0, 0, 1, 1]' : 0.291802}", "{'[4, 1, 1, 4, 0, 6, 1, 1, 0, 10, 5, 0, 0, 0, 0, 0, 1, 1]' : 0.291232}", "{'[4, 1, 1, 4, 0, 6, 1, 1, 0, 10, 5, 0, 0, 0, 0, 0, 1, 1]' : 0.291103}", "{'[4, 1, 1, 4, 0, 6, 1, 1, 0, 10, 5, 0, 0, 0, 0, 0, 1, 1]' : 0.291022}", "{'[4, 1, 1, 4, 0, 6, 1, 1, 0, 10, 5, 0, 0, 0, 0, 0, 1, 1]' : 0.291324}", "{'[4, 1, 1, 4, 0, 6, 1, 1, 0, 10, 5, 0, 0, 0, 0, 0, 1, 1]' : 0.291256}", "{'[4, 1, 1, 4, 0, 6, 1, 1, 0, 10, 5, 0, 0, 0, 0, 0, 1, 1]' : 0.290732}", "{'[4, 1, 1, 4, 0, 6, 1, 1, 0, 10, 5, 0, 0, 0, 0, 0, 1, 1]' : 0.291314}", "{'[4, 1, 1, 4, 0, 6, 1, 1, 0, 10, 5, 0, 0, 0, 0, 0, 1, 1]' : 0.291368}", "{'[4, 1, 1, 4, 0, 6, 1, 1, 0, 10, 5, 0, 0, 0, 0, 0, 1, 1]' : 0.291365}", "{'[4, 1, 1, 4, 0, 6, 1, 1, 0, 10, 5, 0, 0, 0, 0, 0, 1, 1]' : 0.290973}", "{'[4, 1, 1, 4, 0, 6, 1, 1, 0, 10, 5, 0, 0, 0, 0, 0, 1, 1]' : 0.290906}", "{'[4, 1, 1, 4, 0, 6, 1, 1, 0, 10, 5, 0, 0, 0, 0, 0, 1, 1]' : 0.287782}", "{'[4, 1, 1, 4, 0, 6, 1, 1, 0, 10, 5, 0, 0, 0, 0, 0, 1, 1]' : 0.291088}", "{'[4, 1, 1, 4, 0, 6, 1, 1, 0, 10, 5, 0, 0, 0, 0, 0, 1, 1]' : 0.29125}", "{'[4, 1, 1, 4, 0, 6, 1, 1, 0, 10, 5, 0, 0, 0, 0, 0, 1, 1]' : 0.291403}", "{'[4, 1, 1, 4, 0, 6, 1, 1, 0, 10, 5, 0, 0, 0, 0, 0, 1, 1]' : 0.291374}", "{'[4, 1, 1, 4, 0, 6, 1, 1, 0, 10, 5, 0, 0, 0, 0, 0, 1, 1]' : 0.291231}", "{'[4, 1, 1, 4, 0, 6, 1, 1, 0, 10, 5, 0, 0, 0, 0, 0, 1, 1]' : 0.29684}", "{'[4, 1, 1, 4, 0, 6, 1, 1, 0, 10, 5, 0, 0, 0, 0, 0, 1, 1]' : 0.2996}", "{'[4, 1, 1, 4, 0, 6, 1, 1, 0, 10, 5, 0, 0, 0, 0, 0, 1, 1]' : 0.299673}", "{'[4, 1, 1, 4, 0, 6, 1, 1, 0, 10, 5, 0, 0, 0, 0, 0, 1, 1]' : 0.29261}", "{'[4, 1, 1, 4, 0, 6, 1, 1, 0, 10, 5, 0, 0, 0, 0, 0, 1, 1]' : 0.291783}", "{'[4, 1, 1, 4, 0, 6, 1, 1, 0, 10, 5, 0, 0, 0, 0, 0, 1, 1]' : 0.29131}"]
returning from 'run': {'[4, 1, 1, 4, 0, 6, 1, 1, 0, 10, 5, 0, 0, 0, 0, 0, 1, 1]': ([0.29097, 0.29098, 0.291456, 0.291776, 0.287152, 0.290799, 0.291802, 0.291232, 0.291103, 0.291022, 0.291324, 0.291256, 0.290732, 0.291314, 0.291368, 0.291365, 0.290973, 0.290906, 0.287782, 0.291088, 0.29125, 0.291403, 0.291374, 0.291231, 0.29684, 0.2996, 0.299673, 0.29261, 0.291783, 0.29131], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 1, 1, 4, 0, 6, 1, 1, 0, 10, 5, 0, 0, 0, 0, 0, 1, 1]': ([0.29097, 0.29098, 0.291456, 0.291776, 0.287152, 0.290799, 0.291802, 0.291232, 0.291103, 0.291022, 0.291324, 0.291256, 0.290732, 0.291314, 0.291368, 0.291365, 0.290973, 0.290906, 0.287782, 0.291088, 0.29125, 0.291403, 0.291374, 0.291231, 0.29684, 0.2996, 0.299673, 0.29261, 0.291783, 0.29131], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	32
        Max loop nest depth: 	4
        Additions: 		969
        Multiplications: 	296
        Divisions: 		0
        Logical: 		0
        Reads: 			1996
        Writes: 		410
        Comparisons:		32
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest5.exe __orio_perftest5.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest5.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest5.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest5.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest5.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	31
        Max loop nest depth: 	6
        Additions: 		2111
        Multiplications: 	646
        Divisions: 		0
        Logical: 		0
        Reads: 			3533
        Writes: 		428
        Comparisons:		31
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest6.exe __orio_perftest6.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest6.exe  
Program Test Output: 
{'[3, 1, 6, 6, 3, 6, 0, 0, 29, 9, 0, 6, 1, 1, 0, 0, 0, 0]' : 0.113401}
{'[3, 1, 6, 6, 3, 6, 0, 0, 29, 9, 0, 6, 1, 1, 0, 0, 0, 0]' : 0.113564}
{'[3, 1, 6, 6, 3, 6, 0, 0, 29, 9, 0, 6, 1, 1, 0, 0, 0, 0]' : 0.113034}
{'[3, 1, 6, 6, 3, 6, 0, 0, 29, 9, 0, 6, 1, 1, 0, 0, 0, 0]' : 0.113441}
{'[3, 1, 6, 6, 3, 6, 0, 0, 29, 9, 0, 6, 1, 1, 0, 0, 0, 0]' : 0.113333}
{'[3, 1, 6, 6, 3, 6, 0, 0, 29, 9, 0, 6, 1, 1, 0, 0, 0, 0]' : 0.11325}
{'[3, 1, 6, 6, 3, 6, 0, 0, 29, 9, 0, 6, 1, 1, 0, 0, 0, 0]' : 0.113069}
{'[3, 1, 6, 6, 3, 6, 0, 0, 29, 9, 0, 6, 1, 1, 0, 0, 0, 0]' : 0.113366}
{'[3, 1, 6, 6, 3, 6, 0, 0, 29, 9, 0, 6, 1, 1, 0, 0, 0, 0]' : 0.11339}
{'[3, 1, 6, 6, 3, 6, 0, 0, 29, 9, 0, 6, 1, 1, 0, 0, 0, 0]' : 0.113226}
{'[3, 1, 6, 6, 3, 6, 0, 0, 29, 9, 0, 6, 1, 1, 0, 0, 0, 0]' : 0.113227}
{'[3, 1, 6, 6, 3, 6, 0, 0, 29, 9, 0, 6, 1, 1, 0, 0, 0, 0]' : 0.113218}
{'[3, 1, 6, 6, 3, 6, 0, 0, 29, 9, 0, 6, 1, 1, 0, 0, 0, 0]' : 0.113221}
{'[3, 1, 6, 6, 3, 6, 0, 0, 29, 9, 0, 6, 1, 1, 0, 0, 0, 0]' : 0.113428}
{'[3, 1, 6, 6, 3, 6, 0, 0, 29, 9, 0, 6, 1, 1, 0, 0, 0, 0]' : 0.113476}
{'[3, 1, 6, 6, 3, 6, 0, 0, 29, 9, 0, 6, 1, 1, 0, 0, 0, 0]' : 0.113259}
{'[3, 1, 6, 6, 3, 6, 0, 0, 29, 9, 0, 6, 1, 1, 0, 0, 0, 0]' : 0.113223}
{'[3, 1, 6, 6, 3, 6, 0, 0, 29, 9, 0, 6, 1, 1, 0, 0, 0, 0]' : 0.113533}
{'[3, 1, 6, 6, 3, 6, 0, 0, 29, 9, 0, 6, 1, 1, 0, 0, 0, 0]' : 0.113227}
{'[3, 1, 6, 6, 3, 6, 0, 0, 29, 9, 0, 6, 1, 1, 0, 0, 0, 0]' : 0.113364}
{'[3, 1, 6, 6, 3, 6, 0, 0, 29, 9, 0, 6, 1, 1, 0, 0, 0, 0]' : 0.113172}
{'[3, 1, 6, 6, 3, 6, 0, 0, 29, 9, 0, 6, 1, 1, 0, 0, 0, 0]' : 0.113216}
{'[3, 1, 6, 6, 3, 6, 0, 0, 29, 9, 0, 6, 1, 1, 0, 0, 0, 0]' : 0.111822}
{'[3, 1, 6, 6, 3, 6, 0, 0, 29, 9, 0, 6, 1, 1, 0, 0, 0, 0]' : 0.111174}
{'[3, 1, 6, 6, 3, 6, 0, 0, 29, 9, 0, 6, 1, 1, 0, 0, 0, 0]' : 0.112102}
{'[3, 1, 6, 6, 3, 6, 0, 0, 29, 9, 0, 6, 1, 1, 0, 0, 0, 0]' : 0.112048}
{'[3, 1, 6, 6, 3, 6, 0, 0, 29, 9, 0, 6, 1, 1, 0, 0, 0, 0]' : 0.112282}
{'[3, 1, 6, 6, 3, 6, 0, 0, 29, 9, 0, 6, 1, 1, 0, 0, 0, 0]' : 0.11265}
{'[3, 1, 6, 6, 3, 6, 0, 0, 29, 9, 0, 6, 1, 1, 0, 0, 0, 0]' : 0.112159}
{'[3, 1, 6, 6, 3, 6, 0, 0, 29, 9, 0, 6, 1, 1, 0, 0, 0, 0]' : 0.112159}

out:
 ["{'[3, 1, 6, 6, 3, 6, 0, 0, 29, 9, 0, 6, 1, 1, 0, 0, 0, 0]' : 0.113401}", "{'[3, 1, 6, 6, 3, 6, 0, 0, 29, 9, 0, 6, 1, 1, 0, 0, 0, 0]' : 0.113564}", "{'[3, 1, 6, 6, 3, 6, 0, 0, 29, 9, 0, 6, 1, 1, 0, 0, 0, 0]' : 0.113034}", "{'[3, 1, 6, 6, 3, 6, 0, 0, 29, 9, 0, 6, 1, 1, 0, 0, 0, 0]' : 0.113441}", "{'[3, 1, 6, 6, 3, 6, 0, 0, 29, 9, 0, 6, 1, 1, 0, 0, 0, 0]' : 0.113333}", "{'[3, 1, 6, 6, 3, 6, 0, 0, 29, 9, 0, 6, 1, 1, 0, 0, 0, 0]' : 0.11325}", "{'[3, 1, 6, 6, 3, 6, 0, 0, 29, 9, 0, 6, 1, 1, 0, 0, 0, 0]' : 0.113069}", "{'[3, 1, 6, 6, 3, 6, 0, 0, 29, 9, 0, 6, 1, 1, 0, 0, 0, 0]' : 0.113366}", "{'[3, 1, 6, 6, 3, 6, 0, 0, 29, 9, 0, 6, 1, 1, 0, 0, 0, 0]' : 0.11339}", "{'[3, 1, 6, 6, 3, 6, 0, 0, 29, 9, 0, 6, 1, 1, 0, 0, 0, 0]' : 0.113226}", "{'[3, 1, 6, 6, 3, 6, 0, 0, 29, 9, 0, 6, 1, 1, 0, 0, 0, 0]' : 0.113227}", "{'[3, 1, 6, 6, 3, 6, 0, 0, 29, 9, 0, 6, 1, 1, 0, 0, 0, 0]' : 0.113218}", "{'[3, 1, 6, 6, 3, 6, 0, 0, 29, 9, 0, 6, 1, 1, 0, 0, 0, 0]' : 0.113221}", "{'[3, 1, 6, 6, 3, 6, 0, 0, 29, 9, 0, 6, 1, 1, 0, 0, 0, 0]' : 0.113428}", "{'[3, 1, 6, 6, 3, 6, 0, 0, 29, 9, 0, 6, 1, 1, 0, 0, 0, 0]' : 0.113476}", "{'[3, 1, 6, 6, 3, 6, 0, 0, 29, 9, 0, 6, 1, 1, 0, 0, 0, 0]' : 0.113259}", "{'[3, 1, 6, 6, 3, 6, 0, 0, 29, 9, 0, 6, 1, 1, 0, 0, 0, 0]' : 0.113223}", "{'[3, 1, 6, 6, 3, 6, 0, 0, 29, 9, 0, 6, 1, 1, 0, 0, 0, 0]' : 0.113533}", "{'[3, 1, 6, 6, 3, 6, 0, 0, 29, 9, 0, 6, 1, 1, 0, 0, 0, 0]' : 0.113227}", "{'[3, 1, 6, 6, 3, 6, 0, 0, 29, 9, 0, 6, 1, 1, 0, 0, 0, 0]' : 0.113364}", "{'[3, 1, 6, 6, 3, 6, 0, 0, 29, 9, 0, 6, 1, 1, 0, 0, 0, 0]' : 0.113172}", "{'[3, 1, 6, 6, 3, 6, 0, 0, 29, 9, 0, 6, 1, 1, 0, 0, 0, 0]' : 0.113216}", "{'[3, 1, 6, 6, 3, 6, 0, 0, 29, 9, 0, 6, 1, 1, 0, 0, 0, 0]' : 0.111822}", "{'[3, 1, 6, 6, 3, 6, 0, 0, 29, 9, 0, 6, 1, 1, 0, 0, 0, 0]' : 0.111174}", "{'[3, 1, 6, 6, 3, 6, 0, 0, 29, 9, 0, 6, 1, 1, 0, 0, 0, 0]' : 0.112102}", "{'[3, 1, 6, 6, 3, 6, 0, 0, 29, 9, 0, 6, 1, 1, 0, 0, 0, 0]' : 0.112048}", "{'[3, 1, 6, 6, 3, 6, 0, 0, 29, 9, 0, 6, 1, 1, 0, 0, 0, 0]' : 0.112282}", "{'[3, 1, 6, 6, 3, 6, 0, 0, 29, 9, 0, 6, 1, 1, 0, 0, 0, 0]' : 0.11265}", "{'[3, 1, 6, 6, 3, 6, 0, 0, 29, 9, 0, 6, 1, 1, 0, 0, 0, 0]' : 0.112159}", "{'[3, 1, 6, 6, 3, 6, 0, 0, 29, 9, 0, 6, 1, 1, 0, 0, 0, 0]' : 0.112159}"]
returning from 'run': {'[3, 1, 6, 6, 3, 6, 0, 0, 29, 9, 0, 6, 1, 1, 0, 0, 0, 0]': ([0.113401, 0.113564, 0.113034, 0.113441, 0.113333, 0.11325, 0.113069, 0.113366, 0.11339, 0.113226, 0.113227, 0.113218, 0.113221, 0.113428, 0.113476, 0.113259, 0.113223, 0.113533, 0.113227, 0.113364, 0.113172, 0.113216, 0.111822, 0.111174, 0.112102, 0.112048, 0.112282, 0.11265, 0.112159, 0.112159], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 1, 6, 6, 3, 6, 0, 0, 29, 9, 0, 6, 1, 1, 0, 0, 0, 0]': ([0.113401, 0.113564, 0.113034, 0.113441, 0.113333, 0.11325, 0.113069, 0.113366, 0.11339, 0.113226, 0.113227, 0.113218, 0.113221, 0.113428, 0.113476, 0.113259, 0.113223, 0.113533, 0.113227, 0.113364, 0.113172, 0.113216, 0.111822, 0.111174, 0.112102, 0.112048, 0.112282, 0.11265, 0.112159, 0.112159], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	31
        Max loop nest depth: 	4
        Additions: 		1229
        Multiplications: 	464
        Divisions: 		0
        Logical: 		0
        Reads: 			2637
        Writes: 		555
        Comparisons:		31
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest7.exe __orio_perftest7.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest7.exe  
Program Test Output: 
{'[6, 0, 3, 0, 3, 0, 0, 0, 2, 6, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.104883}
{'[6, 0, 3, 0, 3, 0, 0, 0, 2, 6, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.10485}
{'[6, 0, 3, 0, 3, 0, 0, 0, 2, 6, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.104753}
{'[6, 0, 3, 0, 3, 0, 0, 0, 2, 6, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.104706}
{'[6, 0, 3, 0, 3, 0, 0, 0, 2, 6, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.101546}
{'[6, 0, 3, 0, 3, 0, 0, 0, 2, 6, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.095788}
{'[6, 0, 3, 0, 3, 0, 0, 0, 2, 6, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.096029}
{'[6, 0, 3, 0, 3, 0, 0, 0, 2, 6, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.0946729}
{'[6, 0, 3, 0, 3, 0, 0, 0, 2, 6, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.092428}
{'[6, 0, 3, 0, 3, 0, 0, 0, 2, 6, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.0941451}
{'[6, 0, 3, 0, 3, 0, 0, 0, 2, 6, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.094095}
{'[6, 0, 3, 0, 3, 0, 0, 0, 2, 6, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.0941789}
{'[6, 0, 3, 0, 3, 0, 0, 0, 2, 6, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.0942161}
{'[6, 0, 3, 0, 3, 0, 0, 0, 2, 6, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.0945089}
{'[6, 0, 3, 0, 3, 0, 0, 0, 2, 6, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.0943222}
{'[6, 0, 3, 0, 3, 0, 0, 0, 2, 6, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.094115}
{'[6, 0, 3, 0, 3, 0, 0, 0, 2, 6, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.0955338}
{'[6, 0, 3, 0, 3, 0, 0, 0, 2, 6, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.0960271}
{'[6, 0, 3, 0, 3, 0, 0, 0, 2, 6, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.096072}
{'[6, 0, 3, 0, 3, 0, 0, 0, 2, 6, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.0952029}
{'[6, 0, 3, 0, 3, 0, 0, 0, 2, 6, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.0941081}
{'[6, 0, 3, 0, 3, 0, 0, 0, 2, 6, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.0941529}
{'[6, 0, 3, 0, 3, 0, 0, 0, 2, 6, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.09427}
{'[6, 0, 3, 0, 3, 0, 0, 0, 2, 6, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.0942829}
{'[6, 0, 3, 0, 3, 0, 0, 0, 2, 6, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.0945802}
{'[6, 0, 3, 0, 3, 0, 0, 0, 2, 6, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.0944741}
{'[6, 0, 3, 0, 3, 0, 0, 0, 2, 6, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.094054}
{'[6, 0, 3, 0, 3, 0, 0, 0, 2, 6, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.0940449}
{'[6, 0, 3, 0, 3, 0, 0, 0, 2, 6, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.0942252}
{'[6, 0, 3, 0, 3, 0, 0, 0, 2, 6, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.0940938}

out:
 ["{'[6, 0, 3, 0, 3, 0, 0, 0, 2, 6, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.104883}", "{'[6, 0, 3, 0, 3, 0, 0, 0, 2, 6, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.10485}", "{'[6, 0, 3, 0, 3, 0, 0, 0, 2, 6, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.104753}", "{'[6, 0, 3, 0, 3, 0, 0, 0, 2, 6, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.104706}", "{'[6, 0, 3, 0, 3, 0, 0, 0, 2, 6, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.101546}", "{'[6, 0, 3, 0, 3, 0, 0, 0, 2, 6, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.095788}", "{'[6, 0, 3, 0, 3, 0, 0, 0, 2, 6, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.096029}", "{'[6, 0, 3, 0, 3, 0, 0, 0, 2, 6, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.0946729}", "{'[6, 0, 3, 0, 3, 0, 0, 0, 2, 6, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.092428}", "{'[6, 0, 3, 0, 3, 0, 0, 0, 2, 6, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.0941451}", "{'[6, 0, 3, 0, 3, 0, 0, 0, 2, 6, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.094095}", "{'[6, 0, 3, 0, 3, 0, 0, 0, 2, 6, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.0941789}", "{'[6, 0, 3, 0, 3, 0, 0, 0, 2, 6, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.0942161}", "{'[6, 0, 3, 0, 3, 0, 0, 0, 2, 6, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.0945089}", "{'[6, 0, 3, 0, 3, 0, 0, 0, 2, 6, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.0943222}", "{'[6, 0, 3, 0, 3, 0, 0, 0, 2, 6, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.094115}", "{'[6, 0, 3, 0, 3, 0, 0, 0, 2, 6, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.0955338}", "{'[6, 0, 3, 0, 3, 0, 0, 0, 2, 6, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.0960271}", "{'[6, 0, 3, 0, 3, 0, 0, 0, 2, 6, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.096072}", "{'[6, 0, 3, 0, 3, 0, 0, 0, 2, 6, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.0952029}", "{'[6, 0, 3, 0, 3, 0, 0, 0, 2, 6, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.0941081}", "{'[6, 0, 3, 0, 3, 0, 0, 0, 2, 6, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.0941529}", "{'[6, 0, 3, 0, 3, 0, 0, 0, 2, 6, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.09427}", "{'[6, 0, 3, 0, 3, 0, 0, 0, 2, 6, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.0942829}", "{'[6, 0, 3, 0, 3, 0, 0, 0, 2, 6, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.0945802}", "{'[6, 0, 3, 0, 3, 0, 0, 0, 2, 6, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.0944741}", "{'[6, 0, 3, 0, 3, 0, 0, 0, 2, 6, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.094054}", "{'[6, 0, 3, 0, 3, 0, 0, 0, 2, 6, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.0940449}", "{'[6, 0, 3, 0, 3, 0, 0, 0, 2, 6, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.0942252}", "{'[6, 0, 3, 0, 3, 0, 0, 0, 2, 6, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.0940938}"]
returning from 'run': {'[6, 0, 3, 0, 3, 0, 0, 0, 2, 6, 0, 10, 0, 1, 1, 1, 0, 0]': ([0.104883, 0.10485, 0.104753, 0.104706, 0.101546, 0.095788, 0.096029, 0.0946729, 0.092428, 0.0941451, 0.094095, 0.0941789, 0.0942161, 0.0945089, 0.0943222, 0.094115, 0.0955338, 0.0960271, 0.096072, 0.0952029, 0.0941081, 0.0941529, 0.09427, 0.0942829, 0.0945802, 0.0944741, 0.094054, 0.0940449, 0.0942252, 0.0940938], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 3, 0, 3, 0, 0, 0, 2, 6, 0, 10, 0, 1, 1, 1, 0, 0]': ([0.104883, 0.10485, 0.104753, 0.104706, 0.101546, 0.095788, 0.096029, 0.0946729, 0.092428, 0.0941451, 0.094095, 0.0941789, 0.0942161, 0.0945089, 0.0943222, 0.094115, 0.0955338, 0.0960271, 0.096072, 0.0952029, 0.0941081, 0.0941529, 0.09427, 0.0942829, 0.0945802, 0.0944741, 0.094054, 0.0940449, 0.0942252, 0.0940938], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	45
        Max loop nest depth: 	6
        Additions: 		4679
        Multiplications: 	2214
        Divisions: 		0
        Logical: 		0
        Reads: 			8738
        Writes: 		1398
        Comparisons:		45
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest8.exe __orio_perftest8.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest8.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest8.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest8.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest8.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = jjj
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	5
        Additions: 		341
        Multiplications: 	126
        Divisions: 		0
        Logical: 		0
        Reads: 			773
        Writes: 		120
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest9.exe __orio_perftest9.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest9.exe  
Program Test Output: 
{'[1, 4, 3, 0, 2, 5, 0, 0, 27, 0, 0, 28, 0, 2, 0, 0, 0, 1]' : 0.205627}
{'[1, 4, 3, 0, 2, 5, 0, 0, 27, 0, 0, 28, 0, 2, 0, 0, 0, 1]' : 0.205256}
{'[1, 4, 3, 0, 2, 5, 0, 0, 27, 0, 0, 28, 0, 2, 0, 0, 0, 1]' : 0.187195}
{'[1, 4, 3, 0, 2, 5, 0, 0, 27, 0, 0, 28, 0, 2, 0, 0, 0, 1]' : 0.182914}
{'[1, 4, 3, 0, 2, 5, 0, 0, 27, 0, 0, 28, 0, 2, 0, 0, 0, 1]' : 0.182963}
{'[1, 4, 3, 0, 2, 5, 0, 0, 27, 0, 0, 28, 0, 2, 0, 0, 0, 1]' : 0.182902}
{'[1, 4, 3, 0, 2, 5, 0, 0, 27, 0, 0, 28, 0, 2, 0, 0, 0, 1]' : 0.18286}
{'[1, 4, 3, 0, 2, 5, 0, 0, 27, 0, 0, 28, 0, 2, 0, 0, 0, 1]' : 0.179637}
{'[1, 4, 3, 0, 2, 5, 0, 0, 27, 0, 0, 28, 0, 2, 0, 0, 0, 1]' : 0.182922}
{'[1, 4, 3, 0, 2, 5, 0, 0, 27, 0, 0, 28, 0, 2, 0, 0, 0, 1]' : 0.17894}
{'[1, 4, 3, 0, 2, 5, 0, 0, 27, 0, 0, 28, 0, 2, 0, 0, 0, 1]' : 0.181306}
{'[1, 4, 3, 0, 2, 5, 0, 0, 27, 0, 0, 28, 0, 2, 0, 0, 0, 1]' : 0.18296}
{'[1, 4, 3, 0, 2, 5, 0, 0, 27, 0, 0, 28, 0, 2, 0, 0, 0, 1]' : 0.182928}
{'[1, 4, 3, 0, 2, 5, 0, 0, 27, 0, 0, 28, 0, 2, 0, 0, 0, 1]' : 0.183097}
{'[1, 4, 3, 0, 2, 5, 0, 0, 27, 0, 0, 28, 0, 2, 0, 0, 0, 1]' : 0.182992}
{'[1, 4, 3, 0, 2, 5, 0, 0, 27, 0, 0, 28, 0, 2, 0, 0, 0, 1]' : 0.182951}
{'[1, 4, 3, 0, 2, 5, 0, 0, 27, 0, 0, 28, 0, 2, 0, 0, 0, 1]' : 0.183013}
{'[1, 4, 3, 0, 2, 5, 0, 0, 27, 0, 0, 28, 0, 2, 0, 0, 0, 1]' : 0.182941}
{'[1, 4, 3, 0, 2, 5, 0, 0, 27, 0, 0, 28, 0, 2, 0, 0, 0, 1]' : 0.181815}
{'[1, 4, 3, 0, 2, 5, 0, 0, 27, 0, 0, 28, 0, 2, 0, 0, 0, 1]' : 0.17807}
{'[1, 4, 3, 0, 2, 5, 0, 0, 27, 0, 0, 28, 0, 2, 0, 0, 0, 1]' : 0.178098}
{'[1, 4, 3, 0, 2, 5, 0, 0, 27, 0, 0, 28, 0, 2, 0, 0, 0, 1]' : 0.178674}
{'[1, 4, 3, 0, 2, 5, 0, 0, 27, 0, 0, 28, 0, 2, 0, 0, 0, 1]' : 0.182919}
{'[1, 4, 3, 0, 2, 5, 0, 0, 27, 0, 0, 28, 0, 2, 0, 0, 0, 1]' : 0.180513}
{'[1, 4, 3, 0, 2, 5, 0, 0, 27, 0, 0, 28, 0, 2, 0, 0, 0, 1]' : 0.181449}
{'[1, 4, 3, 0, 2, 5, 0, 0, 27, 0, 0, 28, 0, 2, 0, 0, 0, 1]' : 0.182919}
{'[1, 4, 3, 0, 2, 5, 0, 0, 27, 0, 0, 28, 0, 2, 0, 0, 0, 1]' : 0.182945}
{'[1, 4, 3, 0, 2, 5, 0, 0, 27, 0, 0, 28, 0, 2, 0, 0, 0, 1]' : 0.183054}
{'[1, 4, 3, 0, 2, 5, 0, 0, 27, 0, 0, 28, 0, 2, 0, 0, 0, 1]' : 0.182971}
{'[1, 4, 3, 0, 2, 5, 0, 0, 27, 0, 0, 28, 0, 2, 0, 0, 0, 1]' : 0.179324}

out:
 ["{'[1, 4, 3, 0, 2, 5, 0, 0, 27, 0, 0, 28, 0, 2, 0, 0, 0, 1]' : 0.205627}", "{'[1, 4, 3, 0, 2, 5, 0, 0, 27, 0, 0, 28, 0, 2, 0, 0, 0, 1]' : 0.205256}", "{'[1, 4, 3, 0, 2, 5, 0, 0, 27, 0, 0, 28, 0, 2, 0, 0, 0, 1]' : 0.187195}", "{'[1, 4, 3, 0, 2, 5, 0, 0, 27, 0, 0, 28, 0, 2, 0, 0, 0, 1]' : 0.182914}", "{'[1, 4, 3, 0, 2, 5, 0, 0, 27, 0, 0, 28, 0, 2, 0, 0, 0, 1]' : 0.182963}", "{'[1, 4, 3, 0, 2, 5, 0, 0, 27, 0, 0, 28, 0, 2, 0, 0, 0, 1]' : 0.182902}", "{'[1, 4, 3, 0, 2, 5, 0, 0, 27, 0, 0, 28, 0, 2, 0, 0, 0, 1]' : 0.18286}", "{'[1, 4, 3, 0, 2, 5, 0, 0, 27, 0, 0, 28, 0, 2, 0, 0, 0, 1]' : 0.179637}", "{'[1, 4, 3, 0, 2, 5, 0, 0, 27, 0, 0, 28, 0, 2, 0, 0, 0, 1]' : 0.182922}", "{'[1, 4, 3, 0, 2, 5, 0, 0, 27, 0, 0, 28, 0, 2, 0, 0, 0, 1]' : 0.17894}", "{'[1, 4, 3, 0, 2, 5, 0, 0, 27, 0, 0, 28, 0, 2, 0, 0, 0, 1]' : 0.181306}", "{'[1, 4, 3, 0, 2, 5, 0, 0, 27, 0, 0, 28, 0, 2, 0, 0, 0, 1]' : 0.18296}", "{'[1, 4, 3, 0, 2, 5, 0, 0, 27, 0, 0, 28, 0, 2, 0, 0, 0, 1]' : 0.182928}", "{'[1, 4, 3, 0, 2, 5, 0, 0, 27, 0, 0, 28, 0, 2, 0, 0, 0, 1]' : 0.183097}", "{'[1, 4, 3, 0, 2, 5, 0, 0, 27, 0, 0, 28, 0, 2, 0, 0, 0, 1]' : 0.182992}", "{'[1, 4, 3, 0, 2, 5, 0, 0, 27, 0, 0, 28, 0, 2, 0, 0, 0, 1]' : 0.182951}", "{'[1, 4, 3, 0, 2, 5, 0, 0, 27, 0, 0, 28, 0, 2, 0, 0, 0, 1]' : 0.183013}", "{'[1, 4, 3, 0, 2, 5, 0, 0, 27, 0, 0, 28, 0, 2, 0, 0, 0, 1]' : 0.182941}", "{'[1, 4, 3, 0, 2, 5, 0, 0, 27, 0, 0, 28, 0, 2, 0, 0, 0, 1]' : 0.181815}", "{'[1, 4, 3, 0, 2, 5, 0, 0, 27, 0, 0, 28, 0, 2, 0, 0, 0, 1]' : 0.17807}", "{'[1, 4, 3, 0, 2, 5, 0, 0, 27, 0, 0, 28, 0, 2, 0, 0, 0, 1]' : 0.178098}", "{'[1, 4, 3, 0, 2, 5, 0, 0, 27, 0, 0, 28, 0, 2, 0, 0, 0, 1]' : 0.178674}", "{'[1, 4, 3, 0, 2, 5, 0, 0, 27, 0, 0, 28, 0, 2, 0, 0, 0, 1]' : 0.182919}", "{'[1, 4, 3, 0, 2, 5, 0, 0, 27, 0, 0, 28, 0, 2, 0, 0, 0, 1]' : 0.180513}", "{'[1, 4, 3, 0, 2, 5, 0, 0, 27, 0, 0, 28, 0, 2, 0, 0, 0, 1]' : 0.181449}", "{'[1, 4, 3, 0, 2, 5, 0, 0, 27, 0, 0, 28, 0, 2, 0, 0, 0, 1]' : 0.182919}", "{'[1, 4, 3, 0, 2, 5, 0, 0, 27, 0, 0, 28, 0, 2, 0, 0, 0, 1]' : 0.182945}", "{'[1, 4, 3, 0, 2, 5, 0, 0, 27, 0, 0, 28, 0, 2, 0, 0, 0, 1]' : 0.183054}", "{'[1, 4, 3, 0, 2, 5, 0, 0, 27, 0, 0, 28, 0, 2, 0, 0, 0, 1]' : 0.182971}", "{'[1, 4, 3, 0, 2, 5, 0, 0, 27, 0, 0, 28, 0, 2, 0, 0, 0, 1]' : 0.179324}"]
returning from 'run': {'[1, 4, 3, 0, 2, 5, 0, 0, 27, 0, 0, 28, 0, 2, 0, 0, 0, 1]': ([0.205627, 0.205256, 0.187195, 0.182914, 0.182963, 0.182902, 0.18286, 0.179637, 0.182922, 0.17894, 0.181306, 0.18296, 0.182928, 0.183097, 0.182992, 0.182951, 0.183013, 0.182941, 0.181815, 0.17807, 0.178098, 0.178674, 0.182919, 0.180513, 0.181449, 0.182919, 0.182945, 0.183054, 0.182971, 0.179324], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 4, 3, 0, 2, 5, 0, 0, 27, 0, 0, 28, 0, 2, 0, 0, 0, 1]': ([0.205627, 0.205256, 0.187195, 0.182914, 0.182963, 0.182902, 0.18286, 0.179637, 0.182922, 0.17894, 0.181306, 0.18296, 0.182928, 0.183097, 0.182992, 0.182951, 0.183013, 0.182941, 0.181815, 0.17807, 0.178098, 0.178674, 0.182919, 0.180513, 0.181449, 0.182919, 0.182945, 0.183054, 0.182971, 0.179324], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	4
        Additions: 		1008
        Multiplications: 	464
        Divisions: 		0
        Logical: 		0
        Reads: 			1918
        Writes: 		328
        Comparisons:		10
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest10.exe __orio_perftest10.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest10.exe  
Program Test Output: 
{'[0, 5, 1, 0, 0, 1, 1, 0, 26, 29, 26, 0, 1, 0, 0, 1, 0, 0]' : 0.105938}
{'[0, 5, 1, 0, 0, 1, 1, 0, 26, 29, 26, 0, 1, 0, 0, 1, 0, 0]' : 0.105834}
{'[0, 5, 1, 0, 0, 1, 1, 0, 26, 29, 26, 0, 1, 0, 0, 1, 0, 0]' : 0.105836}
{'[0, 5, 1, 0, 0, 1, 1, 0, 26, 29, 26, 0, 1, 0, 0, 1, 0, 0]' : 0.106117}
{'[0, 5, 1, 0, 0, 1, 1, 0, 26, 29, 26, 0, 1, 0, 0, 1, 0, 0]' : 0.105821}
{'[0, 5, 1, 0, 0, 1, 1, 0, 26, 29, 26, 0, 1, 0, 0, 1, 0, 0]' : 0.105957}
{'[0, 5, 1, 0, 0, 1, 1, 0, 26, 29, 26, 0, 1, 0, 0, 1, 0, 0]' : 0.105833}
{'[0, 5, 1, 0, 0, 1, 1, 0, 26, 29, 26, 0, 1, 0, 0, 1, 0, 0]' : 0.103828}
{'[0, 5, 1, 0, 0, 1, 1, 0, 26, 29, 26, 0, 1, 0, 0, 1, 0, 0]' : 0.104977}
{'[0, 5, 1, 0, 0, 1, 1, 0, 26, 29, 26, 0, 1, 0, 0, 1, 0, 0]' : 0.105857}
{'[0, 5, 1, 0, 0, 1, 1, 0, 26, 29, 26, 0, 1, 0, 0, 1, 0, 0]' : 0.105806}
{'[0, 5, 1, 0, 0, 1, 1, 0, 26, 29, 26, 0, 1, 0, 0, 1, 0, 0]' : 0.105888}
{'[0, 5, 1, 0, 0, 1, 1, 0, 26, 29, 26, 0, 1, 0, 0, 1, 0, 0]' : 0.1061}
{'[0, 5, 1, 0, 0, 1, 1, 0, 26, 29, 26, 0, 1, 0, 0, 1, 0, 0]' : 0.106047}
{'[0, 5, 1, 0, 0, 1, 1, 0, 26, 29, 26, 0, 1, 0, 0, 1, 0, 0]' : 0.105871}
{'[0, 5, 1, 0, 0, 1, 1, 0, 26, 29, 26, 0, 1, 0, 0, 1, 0, 0]' : 0.105863}
{'[0, 5, 1, 0, 0, 1, 1, 0, 26, 29, 26, 0, 1, 0, 0, 1, 0, 0]' : 0.105087}
{'[0, 5, 1, 0, 0, 1, 1, 0, 26, 29, 26, 0, 1, 0, 0, 1, 0, 0]' : 0.10377}
{'[0, 5, 1, 0, 0, 1, 1, 0, 26, 29, 26, 0, 1, 0, 0, 1, 0, 0]' : 0.105774}
{'[0, 5, 1, 0, 0, 1, 1, 0, 26, 29, 26, 0, 1, 0, 0, 1, 0, 0]' : 0.105847}
{'[0, 5, 1, 0, 0, 1, 1, 0, 26, 29, 26, 0, 1, 0, 0, 1, 0, 0]' : 0.105894}
{'[0, 5, 1, 0, 0, 1, 1, 0, 26, 29, 26, 0, 1, 0, 0, 1, 0, 0]' : 0.10589}
{'[0, 5, 1, 0, 0, 1, 1, 0, 26, 29, 26, 0, 1, 0, 0, 1, 0, 0]' : 0.105958}
{'[0, 5, 1, 0, 0, 1, 1, 0, 26, 29, 26, 0, 1, 0, 0, 1, 0, 0]' : 0.105825}
{'[0, 5, 1, 0, 0, 1, 1, 0, 26, 29, 26, 0, 1, 0, 0, 1, 0, 0]' : 0.105833}
{'[0, 5, 1, 0, 0, 1, 1, 0, 26, 29, 26, 0, 1, 0, 0, 1, 0, 0]' : 0.105876}
{'[0, 5, 1, 0, 0, 1, 1, 0, 26, 29, 26, 0, 1, 0, 0, 1, 0, 0]' : 0.105846}
{'[0, 5, 1, 0, 0, 1, 1, 0, 26, 29, 26, 0, 1, 0, 0, 1, 0, 0]' : 0.105904}
{'[0, 5, 1, 0, 0, 1, 1, 0, 26, 29, 26, 0, 1, 0, 0, 1, 0, 0]' : 0.105844}
{'[0, 5, 1, 0, 0, 1, 1, 0, 26, 29, 26, 0, 1, 0, 0, 1, 0, 0]' : 0.10589}

out:
 ["{'[0, 5, 1, 0, 0, 1, 1, 0, 26, 29, 26, 0, 1, 0, 0, 1, 0, 0]' : 0.105938}", "{'[0, 5, 1, 0, 0, 1, 1, 0, 26, 29, 26, 0, 1, 0, 0, 1, 0, 0]' : 0.105834}", "{'[0, 5, 1, 0, 0, 1, 1, 0, 26, 29, 26, 0, 1, 0, 0, 1, 0, 0]' : 0.105836}", "{'[0, 5, 1, 0, 0, 1, 1, 0, 26, 29, 26, 0, 1, 0, 0, 1, 0, 0]' : 0.106117}", "{'[0, 5, 1, 0, 0, 1, 1, 0, 26, 29, 26, 0, 1, 0, 0, 1, 0, 0]' : 0.105821}", "{'[0, 5, 1, 0, 0, 1, 1, 0, 26, 29, 26, 0, 1, 0, 0, 1, 0, 0]' : 0.105957}", "{'[0, 5, 1, 0, 0, 1, 1, 0, 26, 29, 26, 0, 1, 0, 0, 1, 0, 0]' : 0.105833}", "{'[0, 5, 1, 0, 0, 1, 1, 0, 26, 29, 26, 0, 1, 0, 0, 1, 0, 0]' : 0.103828}", "{'[0, 5, 1, 0, 0, 1, 1, 0, 26, 29, 26, 0, 1, 0, 0, 1, 0, 0]' : 0.104977}", "{'[0, 5, 1, 0, 0, 1, 1, 0, 26, 29, 26, 0, 1, 0, 0, 1, 0, 0]' : 0.105857}", "{'[0, 5, 1, 0, 0, 1, 1, 0, 26, 29, 26, 0, 1, 0, 0, 1, 0, 0]' : 0.105806}", "{'[0, 5, 1, 0, 0, 1, 1, 0, 26, 29, 26, 0, 1, 0, 0, 1, 0, 0]' : 0.105888}", "{'[0, 5, 1, 0, 0, 1, 1, 0, 26, 29, 26, 0, 1, 0, 0, 1, 0, 0]' : 0.1061}", "{'[0, 5, 1, 0, 0, 1, 1, 0, 26, 29, 26, 0, 1, 0, 0, 1, 0, 0]' : 0.106047}", "{'[0, 5, 1, 0, 0, 1, 1, 0, 26, 29, 26, 0, 1, 0, 0, 1, 0, 0]' : 0.105871}", "{'[0, 5, 1, 0, 0, 1, 1, 0, 26, 29, 26, 0, 1, 0, 0, 1, 0, 0]' : 0.105863}", "{'[0, 5, 1, 0, 0, 1, 1, 0, 26, 29, 26, 0, 1, 0, 0, 1, 0, 0]' : 0.105087}", "{'[0, 5, 1, 0, 0, 1, 1, 0, 26, 29, 26, 0, 1, 0, 0, 1, 0, 0]' : 0.10377}", "{'[0, 5, 1, 0, 0, 1, 1, 0, 26, 29, 26, 0, 1, 0, 0, 1, 0, 0]' : 0.105774}", "{'[0, 5, 1, 0, 0, 1, 1, 0, 26, 29, 26, 0, 1, 0, 0, 1, 0, 0]' : 0.105847}", "{'[0, 5, 1, 0, 0, 1, 1, 0, 26, 29, 26, 0, 1, 0, 0, 1, 0, 0]' : 0.105894}", "{'[0, 5, 1, 0, 0, 1, 1, 0, 26, 29, 26, 0, 1, 0, 0, 1, 0, 0]' : 0.10589}", "{'[0, 5, 1, 0, 0, 1, 1, 0, 26, 29, 26, 0, 1, 0, 0, 1, 0, 0]' : 0.105958}", "{'[0, 5, 1, 0, 0, 1, 1, 0, 26, 29, 26, 0, 1, 0, 0, 1, 0, 0]' : 0.105825}", "{'[0, 5, 1, 0, 0, 1, 1, 0, 26, 29, 26, 0, 1, 0, 0, 1, 0, 0]' : 0.105833}", "{'[0, 5, 1, 0, 0, 1, 1, 0, 26, 29, 26, 0, 1, 0, 0, 1, 0, 0]' : 0.105876}", "{'[0, 5, 1, 0, 0, 1, 1, 0, 26, 29, 26, 0, 1, 0, 0, 1, 0, 0]' : 0.105846}", "{'[0, 5, 1, 0, 0, 1, 1, 0, 26, 29, 26, 0, 1, 0, 0, 1, 0, 0]' : 0.105904}", "{'[0, 5, 1, 0, 0, 1, 1, 0, 26, 29, 26, 0, 1, 0, 0, 1, 0, 0]' : 0.105844}", "{'[0, 5, 1, 0, 0, 1, 1, 0, 26, 29, 26, 0, 1, 0, 0, 1, 0, 0]' : 0.10589}"]
returning from 'run': {'[0, 5, 1, 0, 0, 1, 1, 0, 26, 29, 26, 0, 1, 0, 0, 1, 0, 0]': ([0.105938, 0.105834, 0.105836, 0.106117, 0.105821, 0.105957, 0.105833, 0.103828, 0.104977, 0.105857, 0.105806, 0.105888, 0.1061, 0.106047, 0.105871, 0.105863, 0.105087, 0.10377, 0.105774, 0.105847, 0.105894, 0.10589, 0.105958, 0.105825, 0.105833, 0.105876, 0.105846, 0.105904, 0.105844, 0.10589], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 5, 1, 0, 0, 1, 1, 0, 26, 29, 26, 0, 1, 0, 0, 1, 0, 0]': ([0.105938, 0.105834, 0.105836, 0.106117, 0.105821, 0.105957, 0.105833, 0.103828, 0.104977, 0.105857, 0.105806, 0.105888, 0.1061, 0.106047, 0.105871, 0.105863, 0.105087, 0.10377, 0.105774, 0.105847, 0.105894, 0.10589, 0.105958, 0.105825, 0.105833, 0.105876, 0.105846, 0.105904, 0.105844, 0.10589], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = iii
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		43
        Multiplications: 	4
        Divisions: 		0
        Logical: 		0
        Reads: 			122
        Writes: 		35
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest11.exe __orio_perftest11.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest11.exe  
Program Test Output: 
{'[6, 2, 4, 4, 1, 3, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.46112}
{'[6, 2, 4, 4, 1, 3, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.432173}
{'[6, 2, 4, 4, 1, 3, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.432265}
{'[6, 2, 4, 4, 1, 3, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.432633}
{'[6, 2, 4, 4, 1, 3, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.432225}
{'[6, 2, 4, 4, 1, 3, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.432172}
{'[6, 2, 4, 4, 1, 3, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.432037}
{'[6, 2, 4, 4, 1, 3, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.432237}
{'[6, 2, 4, 4, 1, 3, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.431988}
{'[6, 2, 4, 4, 1, 3, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.432061}
{'[6, 2, 4, 4, 1, 3, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.432101}
{'[6, 2, 4, 4, 1, 3, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.42921}
{'[6, 2, 4, 4, 1, 3, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.415996}
{'[6, 2, 4, 4, 1, 3, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.425642}
{'[6, 2, 4, 4, 1, 3, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.432005}
{'[6, 2, 4, 4, 1, 3, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.431989}
{'[6, 2, 4, 4, 1, 3, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.432104}
{'[6, 2, 4, 4, 1, 3, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.432012}
{'[6, 2, 4, 4, 1, 3, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.431968}
{'[6, 2, 4, 4, 1, 3, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.431981}
{'[6, 2, 4, 4, 1, 3, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.432199}
{'[6, 2, 4, 4, 1, 3, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.431273}
{'[6, 2, 4, 4, 1, 3, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.429434}
{'[6, 2, 4, 4, 1, 3, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.431653}
{'[6, 2, 4, 4, 1, 3, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.432014}
{'[6, 2, 4, 4, 1, 3, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.432172}
{'[6, 2, 4, 4, 1, 3, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.431986}
{'[6, 2, 4, 4, 1, 3, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.432023}
{'[6, 2, 4, 4, 1, 3, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.431991}
{'[6, 2, 4, 4, 1, 3, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.432188}

out:
 ["{'[6, 2, 4, 4, 1, 3, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.46112}", "{'[6, 2, 4, 4, 1, 3, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.432173}", "{'[6, 2, 4, 4, 1, 3, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.432265}", "{'[6, 2, 4, 4, 1, 3, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.432633}", "{'[6, 2, 4, 4, 1, 3, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.432225}", "{'[6, 2, 4, 4, 1, 3, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.432172}", "{'[6, 2, 4, 4, 1, 3, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.432037}", "{'[6, 2, 4, 4, 1, 3, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.432237}", "{'[6, 2, 4, 4, 1, 3, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.431988}", "{'[6, 2, 4, 4, 1, 3, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.432061}", "{'[6, 2, 4, 4, 1, 3, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.432101}", "{'[6, 2, 4, 4, 1, 3, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.42921}", "{'[6, 2, 4, 4, 1, 3, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.415996}", "{'[6, 2, 4, 4, 1, 3, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.425642}", "{'[6, 2, 4, 4, 1, 3, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.432005}", "{'[6, 2, 4, 4, 1, 3, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.431989}", "{'[6, 2, 4, 4, 1, 3, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.432104}", "{'[6, 2, 4, 4, 1, 3, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.432012}", "{'[6, 2, 4, 4, 1, 3, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.431968}", "{'[6, 2, 4, 4, 1, 3, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.431981}", "{'[6, 2, 4, 4, 1, 3, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.432199}", "{'[6, 2, 4, 4, 1, 3, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.431273}", "{'[6, 2, 4, 4, 1, 3, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.429434}", "{'[6, 2, 4, 4, 1, 3, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.431653}", "{'[6, 2, 4, 4, 1, 3, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.432014}", "{'[6, 2, 4, 4, 1, 3, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.432172}", "{'[6, 2, 4, 4, 1, 3, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.431986}", "{'[6, 2, 4, 4, 1, 3, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.432023}", "{'[6, 2, 4, 4, 1, 3, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.431991}", "{'[6, 2, 4, 4, 1, 3, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]' : 0.432188}"]
returning from 'run': {'[6, 2, 4, 4, 1, 3, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]': ([0.46112, 0.432173, 0.432265, 0.432633, 0.432225, 0.432172, 0.432037, 0.432237, 0.431988, 0.432061, 0.432101, 0.42921, 0.415996, 0.425642, 0.432005, 0.431989, 0.432104, 0.432012, 0.431968, 0.431981, 0.432199, 0.431273, 0.429434, 0.431653, 0.432014, 0.432172, 0.431986, 0.432023, 0.431991, 0.432188], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 2, 4, 4, 1, 3, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]': ([0.46112, 0.432173, 0.432265, 0.432633, 0.432225, 0.432172, 0.432037, 0.432237, 0.431988, 0.432061, 0.432101, 0.42921, 0.415996, 0.425642, 0.432005, 0.431989, 0.432104, 0.432012, 0.431968, 0.431981, 0.432199, 0.431273, 0.429434, 0.431653, 0.432014, 0.432172, 0.431986, 0.432023, 0.431991, 0.432188], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	5
        Additions: 		5225
        Multiplications: 	2508
        Divisions: 		0
        Logical: 		0
        Reads: 			9682
        Writes: 		1502
        Comparisons:		22
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest12.exe __orio_perftest12.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest12.exe  
Program Test Output: 
{'[0, 3, 6, 4, 6, 0, 0, 1, 0, 0, 5, 29, 2, 0, 0, 1, 0, 0]' : 0.191283}
{'[0, 3, 6, 4, 6, 0, 0, 1, 0, 0, 5, 29, 2, 0, 0, 1, 0, 0]' : 0.190835}
{'[0, 3, 6, 4, 6, 0, 0, 1, 0, 0, 5, 29, 2, 0, 0, 1, 0, 0]' : 0.190685}
{'[0, 3, 6, 4, 6, 0, 0, 1, 0, 0, 5, 29, 2, 0, 0, 1, 0, 0]' : 0.190816}
{'[0, 3, 6, 4, 6, 0, 0, 1, 0, 0, 5, 29, 2, 0, 0, 1, 0, 0]' : 0.19071}
{'[0, 3, 6, 4, 6, 0, 0, 1, 0, 0, 5, 29, 2, 0, 0, 1, 0, 0]' : 0.191139}
{'[0, 3, 6, 4, 6, 0, 0, 1, 0, 0, 5, 29, 2, 0, 0, 1, 0, 0]' : 0.19139}
{'[0, 3, 6, 4, 6, 0, 0, 1, 0, 0, 5, 29, 2, 0, 0, 1, 0, 0]' : 0.191149}
{'[0, 3, 6, 4, 6, 0, 0, 1, 0, 0, 5, 29, 2, 0, 0, 1, 0, 0]' : 0.191}
{'[0, 3, 6, 4, 6, 0, 0, 1, 0, 0, 5, 29, 2, 0, 0, 1, 0, 0]' : 0.191399}
{'[0, 3, 6, 4, 6, 0, 0, 1, 0, 0, 5, 29, 2, 0, 0, 1, 0, 0]' : 0.19111}
{'[0, 3, 6, 4, 6, 0, 0, 1, 0, 0, 5, 29, 2, 0, 0, 1, 0, 0]' : 0.190751}
{'[0, 3, 6, 4, 6, 0, 0, 1, 0, 0, 5, 29, 2, 0, 0, 1, 0, 0]' : 0.190718}
{'[0, 3, 6, 4, 6, 0, 0, 1, 0, 0, 5, 29, 2, 0, 0, 1, 0, 0]' : 0.190532}
{'[0, 3, 6, 4, 6, 0, 0, 1, 0, 0, 5, 29, 2, 0, 0, 1, 0, 0]' : 0.191936}
{'[0, 3, 6, 4, 6, 0, 0, 1, 0, 0, 5, 29, 2, 0, 0, 1, 0, 0]' : 0.190882}
{'[0, 3, 6, 4, 6, 0, 0, 1, 0, 0, 5, 29, 2, 0, 0, 1, 0, 0]' : 0.191306}
{'[0, 3, 6, 4, 6, 0, 0, 1, 0, 0, 5, 29, 2, 0, 0, 1, 0, 0]' : 0.190786}
{'[0, 3, 6, 4, 6, 0, 0, 1, 0, 0, 5, 29, 2, 0, 0, 1, 0, 0]' : 0.191449}
{'[0, 3, 6, 4, 6, 0, 0, 1, 0, 0, 5, 29, 2, 0, 0, 1, 0, 0]' : 0.190634}
{'[0, 3, 6, 4, 6, 0, 0, 1, 0, 0, 5, 29, 2, 0, 0, 1, 0, 0]' : 0.186739}
{'[0, 3, 6, 4, 6, 0, 0, 1, 0, 0, 5, 29, 2, 0, 0, 1, 0, 0]' : 0.190735}
{'[0, 3, 6, 4, 6, 0, 0, 1, 0, 0, 5, 29, 2, 0, 0, 1, 0, 0]' : 0.190722}
{'[0, 3, 6, 4, 6, 0, 0, 1, 0, 0, 5, 29, 2, 0, 0, 1, 0, 0]' : 0.191503}
{'[0, 3, 6, 4, 6, 0, 0, 1, 0, 0, 5, 29, 2, 0, 0, 1, 0, 0]' : 0.191317}
{'[0, 3, 6, 4, 6, 0, 0, 1, 0, 0, 5, 29, 2, 0, 0, 1, 0, 0]' : 0.191157}
{'[0, 3, 6, 4, 6, 0, 0, 1, 0, 0, 5, 29, 2, 0, 0, 1, 0, 0]' : 0.190409}
{'[0, 3, 6, 4, 6, 0, 0, 1, 0, 0, 5, 29, 2, 0, 0, 1, 0, 0]' : 0.190287}
{'[0, 3, 6, 4, 6, 0, 0, 1, 0, 0, 5, 29, 2, 0, 0, 1, 0, 0]' : 0.189108}
{'[0, 3, 6, 4, 6, 0, 0, 1, 0, 0, 5, 29, 2, 0, 0, 1, 0, 0]' : 0.187285}

out:
 ["{'[0, 3, 6, 4, 6, 0, 0, 1, 0, 0, 5, 29, 2, 0, 0, 1, 0, 0]' : 0.191283}", "{'[0, 3, 6, 4, 6, 0, 0, 1, 0, 0, 5, 29, 2, 0, 0, 1, 0, 0]' : 0.190835}", "{'[0, 3, 6, 4, 6, 0, 0, 1, 0, 0, 5, 29, 2, 0, 0, 1, 0, 0]' : 0.190685}", "{'[0, 3, 6, 4, 6, 0, 0, 1, 0, 0, 5, 29, 2, 0, 0, 1, 0, 0]' : 0.190816}", "{'[0, 3, 6, 4, 6, 0, 0, 1, 0, 0, 5, 29, 2, 0, 0, 1, 0, 0]' : 0.19071}", "{'[0, 3, 6, 4, 6, 0, 0, 1, 0, 0, 5, 29, 2, 0, 0, 1, 0, 0]' : 0.191139}", "{'[0, 3, 6, 4, 6, 0, 0, 1, 0, 0, 5, 29, 2, 0, 0, 1, 0, 0]' : 0.19139}", "{'[0, 3, 6, 4, 6, 0, 0, 1, 0, 0, 5, 29, 2, 0, 0, 1, 0, 0]' : 0.191149}", "{'[0, 3, 6, 4, 6, 0, 0, 1, 0, 0, 5, 29, 2, 0, 0, 1, 0, 0]' : 0.191}", "{'[0, 3, 6, 4, 6, 0, 0, 1, 0, 0, 5, 29, 2, 0, 0, 1, 0, 0]' : 0.191399}", "{'[0, 3, 6, 4, 6, 0, 0, 1, 0, 0, 5, 29, 2, 0, 0, 1, 0, 0]' : 0.19111}", "{'[0, 3, 6, 4, 6, 0, 0, 1, 0, 0, 5, 29, 2, 0, 0, 1, 0, 0]' : 0.190751}", "{'[0, 3, 6, 4, 6, 0, 0, 1, 0, 0, 5, 29, 2, 0, 0, 1, 0, 0]' : 0.190718}", "{'[0, 3, 6, 4, 6, 0, 0, 1, 0, 0, 5, 29, 2, 0, 0, 1, 0, 0]' : 0.190532}", "{'[0, 3, 6, 4, 6, 0, 0, 1, 0, 0, 5, 29, 2, 0, 0, 1, 0, 0]' : 0.191936}", "{'[0, 3, 6, 4, 6, 0, 0, 1, 0, 0, 5, 29, 2, 0, 0, 1, 0, 0]' : 0.190882}", "{'[0, 3, 6, 4, 6, 0, 0, 1, 0, 0, 5, 29, 2, 0, 0, 1, 0, 0]' : 0.191306}", "{'[0, 3, 6, 4, 6, 0, 0, 1, 0, 0, 5, 29, 2, 0, 0, 1, 0, 0]' : 0.190786}", "{'[0, 3, 6, 4, 6, 0, 0, 1, 0, 0, 5, 29, 2, 0, 0, 1, 0, 0]' : 0.191449}", "{'[0, 3, 6, 4, 6, 0, 0, 1, 0, 0, 5, 29, 2, 0, 0, 1, 0, 0]' : 0.190634}", "{'[0, 3, 6, 4, 6, 0, 0, 1, 0, 0, 5, 29, 2, 0, 0, 1, 0, 0]' : 0.186739}", "{'[0, 3, 6, 4, 6, 0, 0, 1, 0, 0, 5, 29, 2, 0, 0, 1, 0, 0]' : 0.190735}", "{'[0, 3, 6, 4, 6, 0, 0, 1, 0, 0, 5, 29, 2, 0, 0, 1, 0, 0]' : 0.190722}", "{'[0, 3, 6, 4, 6, 0, 0, 1, 0, 0, 5, 29, 2, 0, 0, 1, 0, 0]' : 0.191503}", "{'[0, 3, 6, 4, 6, 0, 0, 1, 0, 0, 5, 29, 2, 0, 0, 1, 0, 0]' : 0.191317}", "{'[0, 3, 6, 4, 6, 0, 0, 1, 0, 0, 5, 29, 2, 0, 0, 1, 0, 0]' : 0.191157}", "{'[0, 3, 6, 4, 6, 0, 0, 1, 0, 0, 5, 29, 2, 0, 0, 1, 0, 0]' : 0.190409}", "{'[0, 3, 6, 4, 6, 0, 0, 1, 0, 0, 5, 29, 2, 0, 0, 1, 0, 0]' : 0.190287}", "{'[0, 3, 6, 4, 6, 0, 0, 1, 0, 0, 5, 29, 2, 0, 0, 1, 0, 0]' : 0.189108}", "{'[0, 3, 6, 4, 6, 0, 0, 1, 0, 0, 5, 29, 2, 0, 0, 1, 0, 0]' : 0.187285}"]
returning from 'run': {'[0, 3, 6, 4, 6, 0, 0, 1, 0, 0, 5, 29, 2, 0, 0, 1, 0, 0]': ([0.191283, 0.190835, 0.190685, 0.190816, 0.19071, 0.191139, 0.19139, 0.191149, 0.191, 0.191399, 0.19111, 0.190751, 0.190718, 0.190532, 0.191936, 0.190882, 0.191306, 0.190786, 0.191449, 0.190634, 0.186739, 0.190735, 0.190722, 0.191503, 0.191317, 0.191157, 0.190409, 0.190287, 0.189108, 0.187285], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 3, 6, 4, 6, 0, 0, 1, 0, 0, 5, 29, 2, 0, 0, 1, 0, 0]': ([0.191283, 0.190835, 0.190685, 0.190816, 0.19071, 0.191139, 0.19139, 0.191149, 0.191, 0.191399, 0.19111, 0.190751, 0.190718, 0.190532, 0.191936, 0.190882, 0.191306, 0.190786, 0.191449, 0.190634, 0.186739, 0.190735, 0.190722, 0.191503, 0.191317, 0.191157, 0.190409, 0.190287, 0.189108, 0.187285], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	34
        Max loop nest depth: 	5
        Additions: 		3712
        Multiplications: 	1120
        Divisions: 		0
        Logical: 		0
        Reads: 			5960
        Writes: 		673
        Comparisons:		34
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest13.exe __orio_perftest13.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest13.exe  
Program Test Output: 
{'[0, 0, 2, 2, 5, 5, 0, 0, 0, 8, 21, 0, 0, 2, 0, 0, 0, 1]' : 0.137319}
{'[0, 0, 2, 2, 5, 5, 0, 0, 0, 8, 21, 0, 0, 2, 0, 0, 0, 1]' : 0.135178}
{'[0, 0, 2, 2, 5, 5, 0, 0, 0, 8, 21, 0, 0, 2, 0, 0, 0, 1]' : 0.134407}
{'[0, 0, 2, 2, 5, 5, 0, 0, 0, 8, 21, 0, 0, 2, 0, 0, 0, 1]' : 0.130782}
{'[0, 0, 2, 2, 5, 5, 0, 0, 0, 8, 21, 0, 0, 2, 0, 0, 0, 1]' : 0.119604}
{'[0, 0, 2, 2, 5, 5, 0, 0, 0, 8, 21, 0, 0, 2, 0, 0, 0, 1]' : 0.119662}
{'[0, 0, 2, 2, 5, 5, 0, 0, 0, 8, 21, 0, 0, 2, 0, 0, 0, 1]' : 0.119892}
{'[0, 0, 2, 2, 5, 5, 0, 0, 0, 8, 21, 0, 0, 2, 0, 0, 0, 1]' : 0.119924}
{'[0, 0, 2, 2, 5, 5, 0, 0, 0, 8, 21, 0, 0, 2, 0, 0, 0, 1]' : 0.120572}
{'[0, 0, 2, 2, 5, 5, 0, 0, 0, 8, 21, 0, 0, 2, 0, 0, 0, 1]' : 0.118964}
{'[0, 0, 2, 2, 5, 5, 0, 0, 0, 8, 21, 0, 0, 2, 0, 0, 0, 1]' : 0.118514}
{'[0, 0, 2, 2, 5, 5, 0, 0, 0, 8, 21, 0, 0, 2, 0, 0, 0, 1]' : 0.120286}
{'[0, 0, 2, 2, 5, 5, 0, 0, 0, 8, 21, 0, 0, 2, 0, 0, 0, 1]' : 0.120606}
{'[0, 0, 2, 2, 5, 5, 0, 0, 0, 8, 21, 0, 0, 2, 0, 0, 0, 1]' : 0.119857}
{'[0, 0, 2, 2, 5, 5, 0, 0, 0, 8, 21, 0, 0, 2, 0, 0, 0, 1]' : 0.117352}
{'[0, 0, 2, 2, 5, 5, 0, 0, 0, 8, 21, 0, 0, 2, 0, 0, 0, 1]' : 0.119708}
{'[0, 0, 2, 2, 5, 5, 0, 0, 0, 8, 21, 0, 0, 2, 0, 0, 0, 1]' : 0.123038}
{'[0, 0, 2, 2, 5, 5, 0, 0, 0, 8, 21, 0, 0, 2, 0, 0, 0, 1]' : 0.119522}
{'[0, 0, 2, 2, 5, 5, 0, 0, 0, 8, 21, 0, 0, 2, 0, 0, 0, 1]' : 0.118508}
{'[0, 0, 2, 2, 5, 5, 0, 0, 0, 8, 21, 0, 0, 2, 0, 0, 0, 1]' : 0.118911}
{'[0, 0, 2, 2, 5, 5, 0, 0, 0, 8, 21, 0, 0, 2, 0, 0, 0, 1]' : 0.120828}
{'[0, 0, 2, 2, 5, 5, 0, 0, 0, 8, 21, 0, 0, 2, 0, 0, 0, 1]' : 0.120704}
{'[0, 0, 2, 2, 5, 5, 0, 0, 0, 8, 21, 0, 0, 2, 0, 0, 0, 1]' : 0.120678}
{'[0, 0, 2, 2, 5, 5, 0, 0, 0, 8, 21, 0, 0, 2, 0, 0, 0, 1]' : 0.120827}
{'[0, 0, 2, 2, 5, 5, 0, 0, 0, 8, 21, 0, 0, 2, 0, 0, 0, 1]' : 0.120747}
{'[0, 0, 2, 2, 5, 5, 0, 0, 0, 8, 21, 0, 0, 2, 0, 0, 0, 1]' : 0.120568}
{'[0, 0, 2, 2, 5, 5, 0, 0, 0, 8, 21, 0, 0, 2, 0, 0, 0, 1]' : 0.118244}
{'[0, 0, 2, 2, 5, 5, 0, 0, 0, 8, 21, 0, 0, 2, 0, 0, 0, 1]' : 0.118404}
{'[0, 0, 2, 2, 5, 5, 0, 0, 0, 8, 21, 0, 0, 2, 0, 0, 0, 1]' : 0.120401}
{'[0, 0, 2, 2, 5, 5, 0, 0, 0, 8, 21, 0, 0, 2, 0, 0, 0, 1]' : 0.120481}

out:
 ["{'[0, 0, 2, 2, 5, 5, 0, 0, 0, 8, 21, 0, 0, 2, 0, 0, 0, 1]' : 0.137319}", "{'[0, 0, 2, 2, 5, 5, 0, 0, 0, 8, 21, 0, 0, 2, 0, 0, 0, 1]' : 0.135178}", "{'[0, 0, 2, 2, 5, 5, 0, 0, 0, 8, 21, 0, 0, 2, 0, 0, 0, 1]' : 0.134407}", "{'[0, 0, 2, 2, 5, 5, 0, 0, 0, 8, 21, 0, 0, 2, 0, 0, 0, 1]' : 0.130782}", "{'[0, 0, 2, 2, 5, 5, 0, 0, 0, 8, 21, 0, 0, 2, 0, 0, 0, 1]' : 0.119604}", "{'[0, 0, 2, 2, 5, 5, 0, 0, 0, 8, 21, 0, 0, 2, 0, 0, 0, 1]' : 0.119662}", "{'[0, 0, 2, 2, 5, 5, 0, 0, 0, 8, 21, 0, 0, 2, 0, 0, 0, 1]' : 0.119892}", "{'[0, 0, 2, 2, 5, 5, 0, 0, 0, 8, 21, 0, 0, 2, 0, 0, 0, 1]' : 0.119924}", "{'[0, 0, 2, 2, 5, 5, 0, 0, 0, 8, 21, 0, 0, 2, 0, 0, 0, 1]' : 0.120572}", "{'[0, 0, 2, 2, 5, 5, 0, 0, 0, 8, 21, 0, 0, 2, 0, 0, 0, 1]' : 0.118964}", "{'[0, 0, 2, 2, 5, 5, 0, 0, 0, 8, 21, 0, 0, 2, 0, 0, 0, 1]' : 0.118514}", "{'[0, 0, 2, 2, 5, 5, 0, 0, 0, 8, 21, 0, 0, 2, 0, 0, 0, 1]' : 0.120286}", "{'[0, 0, 2, 2, 5, 5, 0, 0, 0, 8, 21, 0, 0, 2, 0, 0, 0, 1]' : 0.120606}", "{'[0, 0, 2, 2, 5, 5, 0, 0, 0, 8, 21, 0, 0, 2, 0, 0, 0, 1]' : 0.119857}", "{'[0, 0, 2, 2, 5, 5, 0, 0, 0, 8, 21, 0, 0, 2, 0, 0, 0, 1]' : 0.117352}", "{'[0, 0, 2, 2, 5, 5, 0, 0, 0, 8, 21, 0, 0, 2, 0, 0, 0, 1]' : 0.119708}", "{'[0, 0, 2, 2, 5, 5, 0, 0, 0, 8, 21, 0, 0, 2, 0, 0, 0, 1]' : 0.123038}", "{'[0, 0, 2, 2, 5, 5, 0, 0, 0, 8, 21, 0, 0, 2, 0, 0, 0, 1]' : 0.119522}", "{'[0, 0, 2, 2, 5, 5, 0, 0, 0, 8, 21, 0, 0, 2, 0, 0, 0, 1]' : 0.118508}", "{'[0, 0, 2, 2, 5, 5, 0, 0, 0, 8, 21, 0, 0, 2, 0, 0, 0, 1]' : 0.118911}", "{'[0, 0, 2, 2, 5, 5, 0, 0, 0, 8, 21, 0, 0, 2, 0, 0, 0, 1]' : 0.120828}", "{'[0, 0, 2, 2, 5, 5, 0, 0, 0, 8, 21, 0, 0, 2, 0, 0, 0, 1]' : 0.120704}", "{'[0, 0, 2, 2, 5, 5, 0, 0, 0, 8, 21, 0, 0, 2, 0, 0, 0, 1]' : 0.120678}", "{'[0, 0, 2, 2, 5, 5, 0, 0, 0, 8, 21, 0, 0, 2, 0, 0, 0, 1]' : 0.120827}", "{'[0, 0, 2, 2, 5, 5, 0, 0, 0, 8, 21, 0, 0, 2, 0, 0, 0, 1]' : 0.120747}", "{'[0, 0, 2, 2, 5, 5, 0, 0, 0, 8, 21, 0, 0, 2, 0, 0, 0, 1]' : 0.120568}", "{'[0, 0, 2, 2, 5, 5, 0, 0, 0, 8, 21, 0, 0, 2, 0, 0, 0, 1]' : 0.118244}", "{'[0, 0, 2, 2, 5, 5, 0, 0, 0, 8, 21, 0, 0, 2, 0, 0, 0, 1]' : 0.118404}", "{'[0, 0, 2, 2, 5, 5, 0, 0, 0, 8, 21, 0, 0, 2, 0, 0, 0, 1]' : 0.120401}", "{'[0, 0, 2, 2, 5, 5, 0, 0, 0, 8, 21, 0, 0, 2, 0, 0, 0, 1]' : 0.120481}"]
returning from 'run': {'[0, 0, 2, 2, 5, 5, 0, 0, 0, 8, 21, 0, 0, 2, 0, 0, 0, 1]': ([0.137319, 0.135178, 0.134407, 0.130782, 0.119604, 0.119662, 0.119892, 0.119924, 0.120572, 0.118964, 0.118514, 0.120286, 0.120606, 0.119857, 0.117352, 0.119708, 0.123038, 0.119522, 0.118508, 0.118911, 0.120828, 0.120704, 0.120678, 0.120827, 0.120747, 0.120568, 0.118244, 0.118404, 0.120401, 0.120481], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 2, 2, 5, 5, 0, 0, 0, 8, 21, 0, 0, 2, 0, 0, 0, 1]': ([0.137319, 0.135178, 0.134407, 0.130782, 0.119604, 0.119662, 0.119892, 0.119924, 0.120572, 0.118964, 0.118514, 0.120286, 0.120606, 0.119857, 0.117352, 0.119708, 0.123038, 0.119522, 0.118508, 0.118911, 0.120828, 0.120704, 0.120678, 0.120827, 0.120747, 0.120568, 0.118244, 0.118404, 0.120401, 0.120481], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	26
        Max loop nest depth: 	4
        Additions: 		414
        Multiplications: 	128
        Divisions: 		0
        Logical: 		0
        Reads: 			918
        Writes: 		198
        Comparisons:		26
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest14.exe __orio_perftest14.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest14.exe  
Program Test Output: 
{'[0, 4, 3, 0, 0, 6, 1, 1, 12, 2, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.167091}
{'[0, 4, 3, 0, 0, 6, 1, 1, 12, 2, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.165665}
{'[0, 4, 3, 0, 0, 6, 1, 1, 12, 2, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.170606}
{'[0, 4, 3, 0, 0, 6, 1, 1, 12, 2, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.170766}
{'[0, 4, 3, 0, 0, 6, 1, 1, 12, 2, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.168021}
{'[0, 4, 3, 0, 0, 6, 1, 1, 12, 2, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.170642}
{'[0, 4, 3, 0, 0, 6, 1, 1, 12, 2, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.170595}
{'[0, 4, 3, 0, 0, 6, 1, 1, 12, 2, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.170426}
{'[0, 4, 3, 0, 0, 6, 1, 1, 12, 2, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.165619}
{'[0, 4, 3, 0, 0, 6, 1, 1, 12, 2, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.165537}
{'[0, 4, 3, 0, 0, 6, 1, 1, 12, 2, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.172586}
{'[0, 4, 3, 0, 0, 6, 1, 1, 12, 2, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.17085}
{'[0, 4, 3, 0, 0, 6, 1, 1, 12, 2, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.170597}
{'[0, 4, 3, 0, 0, 6, 1, 1, 12, 2, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.171819}
{'[0, 4, 3, 0, 0, 6, 1, 1, 12, 2, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.170623}
{'[0, 4, 3, 0, 0, 6, 1, 1, 12, 2, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.170681}
{'[0, 4, 3, 0, 0, 6, 1, 1, 12, 2, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.170784}
{'[0, 4, 3, 0, 0, 6, 1, 1, 12, 2, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.170949}
{'[0, 4, 3, 0, 0, 6, 1, 1, 12, 2, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.170905}
{'[0, 4, 3, 0, 0, 6, 1, 1, 12, 2, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.170737}
{'[0, 4, 3, 0, 0, 6, 1, 1, 12, 2, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.170623}
{'[0, 4, 3, 0, 0, 6, 1, 1, 12, 2, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.170721}
{'[0, 4, 3, 0, 0, 6, 1, 1, 12, 2, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.170718}
{'[0, 4, 3, 0, 0, 6, 1, 1, 12, 2, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.170698}
{'[0, 4, 3, 0, 0, 6, 1, 1, 12, 2, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.170933}
{'[0, 4, 3, 0, 0, 6, 1, 1, 12, 2, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.16881}
{'[0, 4, 3, 0, 0, 6, 1, 1, 12, 2, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.165538}
{'[0, 4, 3, 0, 0, 6, 1, 1, 12, 2, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.166554}
{'[0, 4, 3, 0, 0, 6, 1, 1, 12, 2, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.168587}
{'[0, 4, 3, 0, 0, 6, 1, 1, 12, 2, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.17066}

out:
 ["{'[0, 4, 3, 0, 0, 6, 1, 1, 12, 2, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.167091}", "{'[0, 4, 3, 0, 0, 6, 1, 1, 12, 2, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.165665}", "{'[0, 4, 3, 0, 0, 6, 1, 1, 12, 2, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.170606}", "{'[0, 4, 3, 0, 0, 6, 1, 1, 12, 2, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.170766}", "{'[0, 4, 3, 0, 0, 6, 1, 1, 12, 2, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.168021}", "{'[0, 4, 3, 0, 0, 6, 1, 1, 12, 2, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.170642}", "{'[0, 4, 3, 0, 0, 6, 1, 1, 12, 2, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.170595}", "{'[0, 4, 3, 0, 0, 6, 1, 1, 12, 2, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.170426}", "{'[0, 4, 3, 0, 0, 6, 1, 1, 12, 2, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.165619}", "{'[0, 4, 3, 0, 0, 6, 1, 1, 12, 2, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.165537}", "{'[0, 4, 3, 0, 0, 6, 1, 1, 12, 2, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.172586}", "{'[0, 4, 3, 0, 0, 6, 1, 1, 12, 2, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.17085}", "{'[0, 4, 3, 0, 0, 6, 1, 1, 12, 2, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.170597}", "{'[0, 4, 3, 0, 0, 6, 1, 1, 12, 2, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.171819}", "{'[0, 4, 3, 0, 0, 6, 1, 1, 12, 2, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.170623}", "{'[0, 4, 3, 0, 0, 6, 1, 1, 12, 2, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.170681}", "{'[0, 4, 3, 0, 0, 6, 1, 1, 12, 2, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.170784}", "{'[0, 4, 3, 0, 0, 6, 1, 1, 12, 2, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.170949}", "{'[0, 4, 3, 0, 0, 6, 1, 1, 12, 2, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.170905}", "{'[0, 4, 3, 0, 0, 6, 1, 1, 12, 2, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.170737}", "{'[0, 4, 3, 0, 0, 6, 1, 1, 12, 2, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.170623}", "{'[0, 4, 3, 0, 0, 6, 1, 1, 12, 2, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.170721}", "{'[0, 4, 3, 0, 0, 6, 1, 1, 12, 2, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.170718}", "{'[0, 4, 3, 0, 0, 6, 1, 1, 12, 2, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.170698}", "{'[0, 4, 3, 0, 0, 6, 1, 1, 12, 2, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.170933}", "{'[0, 4, 3, 0, 0, 6, 1, 1, 12, 2, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.16881}", "{'[0, 4, 3, 0, 0, 6, 1, 1, 12, 2, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.165538}", "{'[0, 4, 3, 0, 0, 6, 1, 1, 12, 2, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.166554}", "{'[0, 4, 3, 0, 0, 6, 1, 1, 12, 2, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.168587}", "{'[0, 4, 3, 0, 0, 6, 1, 1, 12, 2, 1, 0, 0, 1, 1, 1, 0, 1]' : 0.17066}"]
returning from 'run': {'[0, 4, 3, 0, 0, 6, 1, 1, 12, 2, 1, 0, 0, 1, 1, 1, 0, 1]': ([0.167091, 0.165665, 0.170606, 0.170766, 0.168021, 0.170642, 0.170595, 0.170426, 0.165619, 0.165537, 0.172586, 0.17085, 0.170597, 0.171819, 0.170623, 0.170681, 0.170784, 0.170949, 0.170905, 0.170737, 0.170623, 0.170721, 0.170718, 0.170698, 0.170933, 0.16881, 0.165538, 0.166554, 0.168587, 0.17066], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 4, 3, 0, 0, 6, 1, 1, 12, 2, 1, 0, 0, 1, 1, 1, 0, 1]': ([0.167091, 0.165665, 0.170606, 0.170766, 0.168021, 0.170642, 0.170595, 0.170426, 0.165619, 0.165537, 0.172586, 0.17085, 0.170597, 0.171819, 0.170623, 0.170681, 0.170784, 0.170949, 0.170905, 0.170737, 0.170623, 0.170721, 0.170718, 0.170698, 0.170933, 0.16881, 0.165538, 0.166554, 0.168587, 0.17066], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	77
        Max loop nest depth: 	6
        Additions: 		7187
        Multiplications: 	2480
        Divisions: 		0
        Logical: 		0
        Reads: 			15420
        Writes: 		3443
        Comparisons:		77
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest15.exe __orio_perftest15.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest15.exe  
Program Test Output: 
{'[1, 2, 0, 4, 2, 6, 0, 0, 0, 29, 0, 29, 0, 0, 1, 1, 0, 0]' : 0.154626}
{'[1, 2, 0, 4, 2, 6, 0, 0, 0, 29, 0, 29, 0, 0, 1, 1, 0, 0]' : 0.157623}
{'[1, 2, 0, 4, 2, 6, 0, 0, 0, 29, 0, 29, 0, 0, 1, 1, 0, 0]' : 0.157563}
{'[1, 2, 0, 4, 2, 6, 0, 0, 0, 29, 0, 29, 0, 0, 1, 1, 0, 0]' : 0.157577}
{'[1, 2, 0, 4, 2, 6, 0, 0, 0, 29, 0, 29, 0, 0, 1, 1, 0, 0]' : 0.15414}
{'[1, 2, 0, 4, 2, 6, 0, 0, 0, 29, 0, 29, 0, 0, 1, 1, 0, 0]' : 0.153799}
{'[1, 2, 0, 4, 2, 6, 0, 0, 0, 29, 0, 29, 0, 0, 1, 1, 0, 0]' : 0.15394}
{'[1, 2, 0, 4, 2, 6, 0, 0, 0, 29, 0, 29, 0, 0, 1, 1, 0, 0]' : 0.154135}
{'[1, 2, 0, 4, 2, 6, 0, 0, 0, 29, 0, 29, 0, 0, 1, 1, 0, 0]' : 0.153858}
{'[1, 2, 0, 4, 2, 6, 0, 0, 0, 29, 0, 29, 0, 0, 1, 1, 0, 0]' : 0.15401}
{'[1, 2, 0, 4, 2, 6, 0, 0, 0, 29, 0, 29, 0, 0, 1, 1, 0, 0]' : 0.154315}
{'[1, 2, 0, 4, 2, 6, 0, 0, 0, 29, 0, 29, 0, 0, 1, 1, 0, 0]' : 0.154063}
{'[1, 2, 0, 4, 2, 6, 0, 0, 0, 29, 0, 29, 0, 0, 1, 1, 0, 0]' : 0.153923}
{'[1, 2, 0, 4, 2, 6, 0, 0, 0, 29, 0, 29, 0, 0, 1, 1, 0, 0]' : 0.150626}
{'[1, 2, 0, 4, 2, 6, 0, 0, 0, 29, 0, 29, 0, 0, 1, 1, 0, 0]' : 0.153805}
{'[1, 2, 0, 4, 2, 6, 0, 0, 0, 29, 0, 29, 0, 0, 1, 1, 0, 0]' : 0.153725}
{'[1, 2, 0, 4, 2, 6, 0, 0, 0, 29, 0, 29, 0, 0, 1, 1, 0, 0]' : 0.15388}
{'[1, 2, 0, 4, 2, 6, 0, 0, 0, 29, 0, 29, 0, 0, 1, 1, 0, 0]' : 0.154234}
{'[1, 2, 0, 4, 2, 6, 0, 0, 0, 29, 0, 29, 0, 0, 1, 1, 0, 0]' : 0.15388}
{'[1, 2, 0, 4, 2, 6, 0, 0, 0, 29, 0, 29, 0, 0, 1, 1, 0, 0]' : 0.153886}
{'[1, 2, 0, 4, 2, 6, 0, 0, 0, 29, 0, 29, 0, 0, 1, 1, 0, 0]' : 0.153996}
{'[1, 2, 0, 4, 2, 6, 0, 0, 0, 29, 0, 29, 0, 0, 1, 1, 0, 0]' : 0.157219}
{'[1, 2, 0, 4, 2, 6, 0, 0, 0, 29, 0, 29, 0, 0, 1, 1, 0, 0]' : 0.157564}
{'[1, 2, 0, 4, 2, 6, 0, 0, 0, 29, 0, 29, 0, 0, 1, 1, 0, 0]' : 0.156091}
{'[1, 2, 0, 4, 2, 6, 0, 0, 0, 29, 0, 29, 0, 0, 1, 1, 0, 0]' : 0.154044}
{'[1, 2, 0, 4, 2, 6, 0, 0, 0, 29, 0, 29, 0, 0, 1, 1, 0, 0]' : 0.1538}
{'[1, 2, 0, 4, 2, 6, 0, 0, 0, 29, 0, 29, 0, 0, 1, 1, 0, 0]' : 0.154005}
{'[1, 2, 0, 4, 2, 6, 0, 0, 0, 29, 0, 29, 0, 0, 1, 1, 0, 0]' : 0.153963}
{'[1, 2, 0, 4, 2, 6, 0, 0, 0, 29, 0, 29, 0, 0, 1, 1, 0, 0]' : 0.153886}
{'[1, 2, 0, 4, 2, 6, 0, 0, 0, 29, 0, 29, 0, 0, 1, 1, 0, 0]' : 0.153966}

out:
 ["{'[1, 2, 0, 4, 2, 6, 0, 0, 0, 29, 0, 29, 0, 0, 1, 1, 0, 0]' : 0.154626}", "{'[1, 2, 0, 4, 2, 6, 0, 0, 0, 29, 0, 29, 0, 0, 1, 1, 0, 0]' : 0.157623}", "{'[1, 2, 0, 4, 2, 6, 0, 0, 0, 29, 0, 29, 0, 0, 1, 1, 0, 0]' : 0.157563}", "{'[1, 2, 0, 4, 2, 6, 0, 0, 0, 29, 0, 29, 0, 0, 1, 1, 0, 0]' : 0.157577}", "{'[1, 2, 0, 4, 2, 6, 0, 0, 0, 29, 0, 29, 0, 0, 1, 1, 0, 0]' : 0.15414}", "{'[1, 2, 0, 4, 2, 6, 0, 0, 0, 29, 0, 29, 0, 0, 1, 1, 0, 0]' : 0.153799}", "{'[1, 2, 0, 4, 2, 6, 0, 0, 0, 29, 0, 29, 0, 0, 1, 1, 0, 0]' : 0.15394}", "{'[1, 2, 0, 4, 2, 6, 0, 0, 0, 29, 0, 29, 0, 0, 1, 1, 0, 0]' : 0.154135}", "{'[1, 2, 0, 4, 2, 6, 0, 0, 0, 29, 0, 29, 0, 0, 1, 1, 0, 0]' : 0.153858}", "{'[1, 2, 0, 4, 2, 6, 0, 0, 0, 29, 0, 29, 0, 0, 1, 1, 0, 0]' : 0.15401}", "{'[1, 2, 0, 4, 2, 6, 0, 0, 0, 29, 0, 29, 0, 0, 1, 1, 0, 0]' : 0.154315}", "{'[1, 2, 0, 4, 2, 6, 0, 0, 0, 29, 0, 29, 0, 0, 1, 1, 0, 0]' : 0.154063}", "{'[1, 2, 0, 4, 2, 6, 0, 0, 0, 29, 0, 29, 0, 0, 1, 1, 0, 0]' : 0.153923}", "{'[1, 2, 0, 4, 2, 6, 0, 0, 0, 29, 0, 29, 0, 0, 1, 1, 0, 0]' : 0.150626}", "{'[1, 2, 0, 4, 2, 6, 0, 0, 0, 29, 0, 29, 0, 0, 1, 1, 0, 0]' : 0.153805}", "{'[1, 2, 0, 4, 2, 6, 0, 0, 0, 29, 0, 29, 0, 0, 1, 1, 0, 0]' : 0.153725}", "{'[1, 2, 0, 4, 2, 6, 0, 0, 0, 29, 0, 29, 0, 0, 1, 1, 0, 0]' : 0.15388}", "{'[1, 2, 0, 4, 2, 6, 0, 0, 0, 29, 0, 29, 0, 0, 1, 1, 0, 0]' : 0.154234}", "{'[1, 2, 0, 4, 2, 6, 0, 0, 0, 29, 0, 29, 0, 0, 1, 1, 0, 0]' : 0.15388}", "{'[1, 2, 0, 4, 2, 6, 0, 0, 0, 29, 0, 29, 0, 0, 1, 1, 0, 0]' : 0.153886}", "{'[1, 2, 0, 4, 2, 6, 0, 0, 0, 29, 0, 29, 0, 0, 1, 1, 0, 0]' : 0.153996}", "{'[1, 2, 0, 4, 2, 6, 0, 0, 0, 29, 0, 29, 0, 0, 1, 1, 0, 0]' : 0.157219}", "{'[1, 2, 0, 4, 2, 6, 0, 0, 0, 29, 0, 29, 0, 0, 1, 1, 0, 0]' : 0.157564}", "{'[1, 2, 0, 4, 2, 6, 0, 0, 0, 29, 0, 29, 0, 0, 1, 1, 0, 0]' : 0.156091}", "{'[1, 2, 0, 4, 2, 6, 0, 0, 0, 29, 0, 29, 0, 0, 1, 1, 0, 0]' : 0.154044}", "{'[1, 2, 0, 4, 2, 6, 0, 0, 0, 29, 0, 29, 0, 0, 1, 1, 0, 0]' : 0.1538}", "{'[1, 2, 0, 4, 2, 6, 0, 0, 0, 29, 0, 29, 0, 0, 1, 1, 0, 0]' : 0.154005}", "{'[1, 2, 0, 4, 2, 6, 0, 0, 0, 29, 0, 29, 0, 0, 1, 1, 0, 0]' : 0.153963}", "{'[1, 2, 0, 4, 2, 6, 0, 0, 0, 29, 0, 29, 0, 0, 1, 1, 0, 0]' : 0.153886}", "{'[1, 2, 0, 4, 2, 6, 0, 0, 0, 29, 0, 29, 0, 0, 1, 1, 0, 0]' : 0.153966}"]
returning from 'run': {'[1, 2, 0, 4, 2, 6, 0, 0, 0, 29, 0, 29, 0, 0, 1, 1, 0, 0]': ([0.154626, 0.157623, 0.157563, 0.157577, 0.15414, 0.153799, 0.15394, 0.154135, 0.153858, 0.15401, 0.154315, 0.154063, 0.153923, 0.150626, 0.153805, 0.153725, 0.15388, 0.154234, 0.15388, 0.153886, 0.153996, 0.157219, 0.157564, 0.156091, 0.154044, 0.1538, 0.154005, 0.153963, 0.153886, 0.153966], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 2, 0, 4, 2, 6, 0, 0, 0, 29, 0, 29, 0, 0, 1, 1, 0, 0]': ([0.154626, 0.157623, 0.157563, 0.157577, 0.15414, 0.153799, 0.15394, 0.154135, 0.153858, 0.15401, 0.154315, 0.154063, 0.153923, 0.150626, 0.153805, 0.153725, 0.15388, 0.154234, 0.15388, 0.153886, 0.153996, 0.157219, 0.157564, 0.156091, 0.154044, 0.1538, 0.154005, 0.153963, 0.153886, 0.153966], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = kkk
Code stats:
        Number of loops: 	31
        Max loop nest depth: 	6
        Additions: 		1191
        Multiplications: 	400
        Divisions: 		0
        Logical: 		0
        Reads: 			2749
        Writes: 		639
        Comparisons:		31
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest16.exe __orio_perftest16.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest16.exe  
Program Test Output: 
{'[1, 1, 3, 1, 6, 1, 1, 0, 9, 3, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.143109}
{'[1, 1, 3, 1, 6, 1, 1, 0, 9, 3, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.126567}
{'[1, 1, 3, 1, 6, 1, 1, 0, 9, 3, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.124701}
{'[1, 1, 3, 1, 6, 1, 1, 0, 9, 3, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.12535}
{'[1, 1, 3, 1, 6, 1, 1, 0, 9, 3, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.126193}
{'[1, 1, 3, 1, 6, 1, 1, 0, 9, 3, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.126393}
{'[1, 1, 3, 1, 6, 1, 1, 0, 9, 3, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.126594}
{'[1, 1, 3, 1, 6, 1, 1, 0, 9, 3, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.128232}
{'[1, 1, 3, 1, 6, 1, 1, 0, 9, 3, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.126618}
{'[1, 1, 3, 1, 6, 1, 1, 0, 9, 3, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.126747}
{'[1, 1, 3, 1, 6, 1, 1, 0, 9, 3, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.126294}
{'[1, 1, 3, 1, 6, 1, 1, 0, 9, 3, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.126085}
{'[1, 1, 3, 1, 6, 1, 1, 0, 9, 3, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.126604}
{'[1, 1, 3, 1, 6, 1, 1, 0, 9, 3, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.126526}
{'[1, 1, 3, 1, 6, 1, 1, 0, 9, 3, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.126621}
{'[1, 1, 3, 1, 6, 1, 1, 0, 9, 3, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.126892}
{'[1, 1, 3, 1, 6, 1, 1, 0, 9, 3, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.126629}
{'[1, 1, 3, 1, 6, 1, 1, 0, 9, 3, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.126599}
{'[1, 1, 3, 1, 6, 1, 1, 0, 9, 3, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.126934}
{'[1, 1, 3, 1, 6, 1, 1, 0, 9, 3, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.127431}
{'[1, 1, 3, 1, 6, 1, 1, 0, 9, 3, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.126895}
{'[1, 1, 3, 1, 6, 1, 1, 0, 9, 3, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.126786}
{'[1, 1, 3, 1, 6, 1, 1, 0, 9, 3, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.126766}
{'[1, 1, 3, 1, 6, 1, 1, 0, 9, 3, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.126945}
{'[1, 1, 3, 1, 6, 1, 1, 0, 9, 3, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.126583}
{'[1, 1, 3, 1, 6, 1, 1, 0, 9, 3, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.126586}
{'[1, 1, 3, 1, 6, 1, 1, 0, 9, 3, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.127129}
{'[1, 1, 3, 1, 6, 1, 1, 0, 9, 3, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.127379}
{'[1, 1, 3, 1, 6, 1, 1, 0, 9, 3, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.12666}
{'[1, 1, 3, 1, 6, 1, 1, 0, 9, 3, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.126806}

out:
 ["{'[1, 1, 3, 1, 6, 1, 1, 0, 9, 3, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.143109}", "{'[1, 1, 3, 1, 6, 1, 1, 0, 9, 3, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.126567}", "{'[1, 1, 3, 1, 6, 1, 1, 0, 9, 3, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.124701}", "{'[1, 1, 3, 1, 6, 1, 1, 0, 9, 3, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.12535}", "{'[1, 1, 3, 1, 6, 1, 1, 0, 9, 3, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.126193}", "{'[1, 1, 3, 1, 6, 1, 1, 0, 9, 3, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.126393}", "{'[1, 1, 3, 1, 6, 1, 1, 0, 9, 3, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.126594}", "{'[1, 1, 3, 1, 6, 1, 1, 0, 9, 3, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.128232}", "{'[1, 1, 3, 1, 6, 1, 1, 0, 9, 3, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.126618}", "{'[1, 1, 3, 1, 6, 1, 1, 0, 9, 3, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.126747}", "{'[1, 1, 3, 1, 6, 1, 1, 0, 9, 3, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.126294}", "{'[1, 1, 3, 1, 6, 1, 1, 0, 9, 3, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.126085}", "{'[1, 1, 3, 1, 6, 1, 1, 0, 9, 3, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.126604}", "{'[1, 1, 3, 1, 6, 1, 1, 0, 9, 3, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.126526}", "{'[1, 1, 3, 1, 6, 1, 1, 0, 9, 3, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.126621}", "{'[1, 1, 3, 1, 6, 1, 1, 0, 9, 3, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.126892}", "{'[1, 1, 3, 1, 6, 1, 1, 0, 9, 3, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.126629}", "{'[1, 1, 3, 1, 6, 1, 1, 0, 9, 3, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.126599}", "{'[1, 1, 3, 1, 6, 1, 1, 0, 9, 3, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.126934}", "{'[1, 1, 3, 1, 6, 1, 1, 0, 9, 3, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.127431}", "{'[1, 1, 3, 1, 6, 1, 1, 0, 9, 3, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.126895}", "{'[1, 1, 3, 1, 6, 1, 1, 0, 9, 3, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.126786}", "{'[1, 1, 3, 1, 6, 1, 1, 0, 9, 3, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.126766}", "{'[1, 1, 3, 1, 6, 1, 1, 0, 9, 3, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.126945}", "{'[1, 1, 3, 1, 6, 1, 1, 0, 9, 3, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.126583}", "{'[1, 1, 3, 1, 6, 1, 1, 0, 9, 3, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.126586}", "{'[1, 1, 3, 1, 6, 1, 1, 0, 9, 3, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.127129}", "{'[1, 1, 3, 1, 6, 1, 1, 0, 9, 3, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.127379}", "{'[1, 1, 3, 1, 6, 1, 1, 0, 9, 3, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.12666}", "{'[1, 1, 3, 1, 6, 1, 1, 0, 9, 3, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.126806}"]
returning from 'run': {'[1, 1, 3, 1, 6, 1, 1, 0, 9, 3, 0, 29, 0, 0, 1, 1, 1, 0]': ([0.143109, 0.126567, 0.124701, 0.12535, 0.126193, 0.126393, 0.126594, 0.128232, 0.126618, 0.126747, 0.126294, 0.126085, 0.126604, 0.126526, 0.126621, 0.126892, 0.126629, 0.126599, 0.126934, 0.127431, 0.126895, 0.126786, 0.126766, 0.126945, 0.126583, 0.126586, 0.127129, 0.127379, 0.12666, 0.126806], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 1, 3, 1, 6, 1, 1, 0, 9, 3, 0, 29, 0, 0, 1, 1, 1, 0]': ([0.143109, 0.126567, 0.124701, 0.12535, 0.126193, 0.126393, 0.126594, 0.128232, 0.126618, 0.126747, 0.126294, 0.126085, 0.126604, 0.126526, 0.126621, 0.126892, 0.126629, 0.126599, 0.126934, 0.127431, 0.126895, 0.126786, 0.126766, 0.126945, 0.126583, 0.126586, 0.127129, 0.127379, 0.12666, 0.126806], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = jjj
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		507
        Multiplications: 	182
        Divisions: 		0
        Logical: 		0
        Reads: 			1072
        Writes: 		138
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest17.exe __orio_perftest17.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest17.exe  
Program Test Output: 
{'[0, 5, 0, 4, 3, 6, 1, 0, 9, 0, 27, 28, 0, 0, 2, 0, 1, 1]' : 0.235911}
{'[0, 5, 0, 4, 3, 6, 1, 0, 9, 0, 27, 28, 0, 0, 2, 0, 1, 1]' : 0.235875}
{'[0, 5, 0, 4, 3, 6, 1, 0, 9, 0, 27, 28, 0, 0, 2, 0, 1, 1]' : 0.213113}
{'[0, 5, 0, 4, 3, 6, 1, 0, 9, 0, 27, 28, 0, 0, 2, 0, 1, 1]' : 0.199627}
{'[0, 5, 0, 4, 3, 6, 1, 0, 9, 0, 27, 28, 0, 0, 2, 0, 1, 1]' : 0.204966}
{'[0, 5, 0, 4, 3, 6, 1, 0, 9, 0, 27, 28, 0, 0, 2, 0, 1, 1]' : 0.20495}
{'[0, 5, 0, 4, 3, 6, 1, 0, 9, 0, 27, 28, 0, 0, 2, 0, 1, 1]' : 0.203946}
{'[0, 5, 0, 4, 3, 6, 1, 0, 9, 0, 27, 28, 0, 0, 2, 0, 1, 1]' : 0.198691}
{'[0, 5, 0, 4, 3, 6, 1, 0, 9, 0, 27, 28, 0, 0, 2, 0, 1, 1]' : 0.200032}
{'[0, 5, 0, 4, 3, 6, 1, 0, 9, 0, 27, 28, 0, 0, 2, 0, 1, 1]' : 0.20505}
{'[0, 5, 0, 4, 3, 6, 1, 0, 9, 0, 27, 28, 0, 0, 2, 0, 1, 1]' : 0.199787}
{'[0, 5, 0, 4, 3, 6, 1, 0, 9, 0, 27, 28, 0, 0, 2, 0, 1, 1]' : 0.203401}
{'[0, 5, 0, 4, 3, 6, 1, 0, 9, 0, 27, 28, 0, 0, 2, 0, 1, 1]' : 0.200795}
{'[0, 5, 0, 4, 3, 6, 1, 0, 9, 0, 27, 28, 0, 0, 2, 0, 1, 1]' : 0.200302}
{'[0, 5, 0, 4, 3, 6, 1, 0, 9, 0, 27, 28, 0, 0, 2, 0, 1, 1]' : 0.204973}
{'[0, 5, 0, 4, 3, 6, 1, 0, 9, 0, 27, 28, 0, 0, 2, 0, 1, 1]' : 0.20491}
{'[0, 5, 0, 4, 3, 6, 1, 0, 9, 0, 27, 28, 0, 0, 2, 0, 1, 1]' : 0.205187}
{'[0, 5, 0, 4, 3, 6, 1, 0, 9, 0, 27, 28, 0, 0, 2, 0, 1, 1]' : 0.199001}
{'[0, 5, 0, 4, 3, 6, 1, 0, 9, 0, 27, 28, 0, 0, 2, 0, 1, 1]' : 0.201152}
{'[0, 5, 0, 4, 3, 6, 1, 0, 9, 0, 27, 28, 0, 0, 2, 0, 1, 1]' : 0.205014}
{'[0, 5, 0, 4, 3, 6, 1, 0, 9, 0, 27, 28, 0, 0, 2, 0, 1, 1]' : 0.203959}
{'[0, 5, 0, 4, 3, 6, 1, 0, 9, 0, 27, 28, 0, 0, 2, 0, 1, 1]' : 0.204281}
{'[0, 5, 0, 4, 3, 6, 1, 0, 9, 0, 27, 28, 0, 0, 2, 0, 1, 1]' : 0.204994}
{'[0, 5, 0, 4, 3, 6, 1, 0, 9, 0, 27, 28, 0, 0, 2, 0, 1, 1]' : 0.1997}
{'[0, 5, 0, 4, 3, 6, 1, 0, 9, 0, 27, 28, 0, 0, 2, 0, 1, 1]' : 0.198371}
{'[0, 5, 0, 4, 3, 6, 1, 0, 9, 0, 27, 28, 0, 0, 2, 0, 1, 1]' : 0.19855}
{'[0, 5, 0, 4, 3, 6, 1, 0, 9, 0, 27, 28, 0, 0, 2, 0, 1, 1]' : 0.204498}
{'[0, 5, 0, 4, 3, 6, 1, 0, 9, 0, 27, 28, 0, 0, 2, 0, 1, 1]' : 0.204897}
{'[0, 5, 0, 4, 3, 6, 1, 0, 9, 0, 27, 28, 0, 0, 2, 0, 1, 1]' : 0.202561}
{'[0, 5, 0, 4, 3, 6, 1, 0, 9, 0, 27, 28, 0, 0, 2, 0, 1, 1]' : 0.198597}

out:
 ["{'[0, 5, 0, 4, 3, 6, 1, 0, 9, 0, 27, 28, 0, 0, 2, 0, 1, 1]' : 0.235911}", "{'[0, 5, 0, 4, 3, 6, 1, 0, 9, 0, 27, 28, 0, 0, 2, 0, 1, 1]' : 0.235875}", "{'[0, 5, 0, 4, 3, 6, 1, 0, 9, 0, 27, 28, 0, 0, 2, 0, 1, 1]' : 0.213113}", "{'[0, 5, 0, 4, 3, 6, 1, 0, 9, 0, 27, 28, 0, 0, 2, 0, 1, 1]' : 0.199627}", "{'[0, 5, 0, 4, 3, 6, 1, 0, 9, 0, 27, 28, 0, 0, 2, 0, 1, 1]' : 0.204966}", "{'[0, 5, 0, 4, 3, 6, 1, 0, 9, 0, 27, 28, 0, 0, 2, 0, 1, 1]' : 0.20495}", "{'[0, 5, 0, 4, 3, 6, 1, 0, 9, 0, 27, 28, 0, 0, 2, 0, 1, 1]' : 0.203946}", "{'[0, 5, 0, 4, 3, 6, 1, 0, 9, 0, 27, 28, 0, 0, 2, 0, 1, 1]' : 0.198691}", "{'[0, 5, 0, 4, 3, 6, 1, 0, 9, 0, 27, 28, 0, 0, 2, 0, 1, 1]' : 0.200032}", "{'[0, 5, 0, 4, 3, 6, 1, 0, 9, 0, 27, 28, 0, 0, 2, 0, 1, 1]' : 0.20505}", "{'[0, 5, 0, 4, 3, 6, 1, 0, 9, 0, 27, 28, 0, 0, 2, 0, 1, 1]' : 0.199787}", "{'[0, 5, 0, 4, 3, 6, 1, 0, 9, 0, 27, 28, 0, 0, 2, 0, 1, 1]' : 0.203401}", "{'[0, 5, 0, 4, 3, 6, 1, 0, 9, 0, 27, 28, 0, 0, 2, 0, 1, 1]' : 0.200795}", "{'[0, 5, 0, 4, 3, 6, 1, 0, 9, 0, 27, 28, 0, 0, 2, 0, 1, 1]' : 0.200302}", "{'[0, 5, 0, 4, 3, 6, 1, 0, 9, 0, 27, 28, 0, 0, 2, 0, 1, 1]' : 0.204973}", "{'[0, 5, 0, 4, 3, 6, 1, 0, 9, 0, 27, 28, 0, 0, 2, 0, 1, 1]' : 0.20491}", "{'[0, 5, 0, 4, 3, 6, 1, 0, 9, 0, 27, 28, 0, 0, 2, 0, 1, 1]' : 0.205187}", "{'[0, 5, 0, 4, 3, 6, 1, 0, 9, 0, 27, 28, 0, 0, 2, 0, 1, 1]' : 0.199001}", "{'[0, 5, 0, 4, 3, 6, 1, 0, 9, 0, 27, 28, 0, 0, 2, 0, 1, 1]' : 0.201152}", "{'[0, 5, 0, 4, 3, 6, 1, 0, 9, 0, 27, 28, 0, 0, 2, 0, 1, 1]' : 0.205014}", "{'[0, 5, 0, 4, 3, 6, 1, 0, 9, 0, 27, 28, 0, 0, 2, 0, 1, 1]' : 0.203959}", "{'[0, 5, 0, 4, 3, 6, 1, 0, 9, 0, 27, 28, 0, 0, 2, 0, 1, 1]' : 0.204281}", "{'[0, 5, 0, 4, 3, 6, 1, 0, 9, 0, 27, 28, 0, 0, 2, 0, 1, 1]' : 0.204994}", "{'[0, 5, 0, 4, 3, 6, 1, 0, 9, 0, 27, 28, 0, 0, 2, 0, 1, 1]' : 0.1997}", "{'[0, 5, 0, 4, 3, 6, 1, 0, 9, 0, 27, 28, 0, 0, 2, 0, 1, 1]' : 0.198371}", "{'[0, 5, 0, 4, 3, 6, 1, 0, 9, 0, 27, 28, 0, 0, 2, 0, 1, 1]' : 0.19855}", "{'[0, 5, 0, 4, 3, 6, 1, 0, 9, 0, 27, 28, 0, 0, 2, 0, 1, 1]' : 0.204498}", "{'[0, 5, 0, 4, 3, 6, 1, 0, 9, 0, 27, 28, 0, 0, 2, 0, 1, 1]' : 0.204897}", "{'[0, 5, 0, 4, 3, 6, 1, 0, 9, 0, 27, 28, 0, 0, 2, 0, 1, 1]' : 0.202561}", "{'[0, 5, 0, 4, 3, 6, 1, 0, 9, 0, 27, 28, 0, 0, 2, 0, 1, 1]' : 0.198597}"]
returning from 'run': {'[0, 5, 0, 4, 3, 6, 1, 0, 9, 0, 27, 28, 0, 0, 2, 0, 1, 1]': ([0.235911, 0.235875, 0.213113, 0.199627, 0.204966, 0.20495, 0.203946, 0.198691, 0.200032, 0.20505, 0.199787, 0.203401, 0.200795, 0.200302, 0.204973, 0.20491, 0.205187, 0.199001, 0.201152, 0.205014, 0.203959, 0.204281, 0.204994, 0.1997, 0.198371, 0.19855, 0.204498, 0.204897, 0.202561, 0.198597], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 5, 0, 4, 3, 6, 1, 0, 9, 0, 27, 28, 0, 0, 2, 0, 1, 1]': ([0.235911, 0.235875, 0.213113, 0.199627, 0.204966, 0.20495, 0.203946, 0.198691, 0.200032, 0.20505, 0.199787, 0.203401, 0.200795, 0.200302, 0.204973, 0.20491, 0.205187, 0.199001, 0.201152, 0.205014, 0.203959, 0.204281, 0.204994, 0.1997, 0.198371, 0.19855, 0.204498, 0.204897, 0.202561, 0.198597], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	4
        Additions: 		3513
        Multiplications: 	1716
        Divisions: 		0
        Logical: 		0
        Reads: 			6690
        Writes: 		1088
        Comparisons:		18
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest18.exe __orio_perftest18.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest18.exe  
Program Test Output: 
{'[0, 6, 0, 1, 0, 0, 0, 0, 8, 12, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0880468}
{'[0, 6, 0, 1, 0, 0, 0, 0, 8, 12, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.08814}
{'[0, 6, 0, 1, 0, 0, 0, 0, 8, 12, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0880101}
{'[0, 6, 0, 1, 0, 0, 0, 0, 8, 12, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0881171}
{'[0, 6, 0, 1, 0, 0, 0, 0, 8, 12, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0880289}
{'[0, 6, 0, 1, 0, 0, 0, 0, 8, 12, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0883219}
{'[0, 6, 0, 1, 0, 0, 0, 0, 8, 12, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0880022}
{'[0, 6, 0, 1, 0, 0, 0, 0, 8, 12, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.086571}
{'[0, 6, 0, 1, 0, 0, 0, 0, 8, 12, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0862131}
{'[0, 6, 0, 1, 0, 0, 0, 0, 8, 12, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0860569}
{'[0, 6, 0, 1, 0, 0, 0, 0, 8, 12, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.086194}
{'[0, 6, 0, 1, 0, 0, 0, 0, 8, 12, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0868671}
{'[0, 6, 0, 1, 0, 0, 0, 0, 8, 12, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0881231}
{'[0, 6, 0, 1, 0, 0, 0, 0, 8, 12, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0880091}
{'[0, 6, 0, 1, 0, 0, 0, 0, 8, 12, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0880771}
{'[0, 6, 0, 1, 0, 0, 0, 0, 8, 12, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.088366}
{'[0, 6, 0, 1, 0, 0, 0, 0, 8, 12, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0866289}
{'[0, 6, 0, 1, 0, 0, 0, 0, 8, 12, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0886459}
{'[0, 6, 0, 1, 0, 0, 0, 0, 8, 12, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.089875}
{'[0, 6, 0, 1, 0, 0, 0, 0, 8, 12, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.090035}
{'[0, 6, 0, 1, 0, 0, 0, 0, 8, 12, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.089963}
{'[0, 6, 0, 1, 0, 0, 0, 0, 8, 12, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0899901}
{'[0, 6, 0, 1, 0, 0, 0, 0, 8, 12, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.089915}
{'[0, 6, 0, 1, 0, 0, 0, 0, 8, 12, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.087486}
{'[0, 6, 0, 1, 0, 0, 0, 0, 8, 12, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0860779}
{'[0, 6, 0, 1, 0, 0, 0, 0, 8, 12, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0859971}
{'[0, 6, 0, 1, 0, 0, 0, 0, 8, 12, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0865932}
{'[0, 6, 0, 1, 0, 0, 0, 0, 8, 12, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0877991}
{'[0, 6, 0, 1, 0, 0, 0, 0, 8, 12, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0887198}
{'[0, 6, 0, 1, 0, 0, 0, 0, 8, 12, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0899029}

out:
 ["{'[0, 6, 0, 1, 0, 0, 0, 0, 8, 12, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0880468}", "{'[0, 6, 0, 1, 0, 0, 0, 0, 8, 12, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.08814}", "{'[0, 6, 0, 1, 0, 0, 0, 0, 8, 12, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0880101}", "{'[0, 6, 0, 1, 0, 0, 0, 0, 8, 12, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0881171}", "{'[0, 6, 0, 1, 0, 0, 0, 0, 8, 12, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0880289}", "{'[0, 6, 0, 1, 0, 0, 0, 0, 8, 12, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0883219}", "{'[0, 6, 0, 1, 0, 0, 0, 0, 8, 12, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0880022}", "{'[0, 6, 0, 1, 0, 0, 0, 0, 8, 12, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.086571}", "{'[0, 6, 0, 1, 0, 0, 0, 0, 8, 12, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0862131}", "{'[0, 6, 0, 1, 0, 0, 0, 0, 8, 12, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0860569}", "{'[0, 6, 0, 1, 0, 0, 0, 0, 8, 12, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.086194}", "{'[0, 6, 0, 1, 0, 0, 0, 0, 8, 12, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0868671}", "{'[0, 6, 0, 1, 0, 0, 0, 0, 8, 12, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0881231}", "{'[0, 6, 0, 1, 0, 0, 0, 0, 8, 12, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0880091}", "{'[0, 6, 0, 1, 0, 0, 0, 0, 8, 12, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0880771}", "{'[0, 6, 0, 1, 0, 0, 0, 0, 8, 12, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.088366}", "{'[0, 6, 0, 1, 0, 0, 0, 0, 8, 12, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0866289}", "{'[0, 6, 0, 1, 0, 0, 0, 0, 8, 12, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0886459}", "{'[0, 6, 0, 1, 0, 0, 0, 0, 8, 12, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.089875}", "{'[0, 6, 0, 1, 0, 0, 0, 0, 8, 12, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.090035}", "{'[0, 6, 0, 1, 0, 0, 0, 0, 8, 12, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.089963}", "{'[0, 6, 0, 1, 0, 0, 0, 0, 8, 12, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0899901}", "{'[0, 6, 0, 1, 0, 0, 0, 0, 8, 12, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.089915}", "{'[0, 6, 0, 1, 0, 0, 0, 0, 8, 12, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.087486}", "{'[0, 6, 0, 1, 0, 0, 0, 0, 8, 12, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0860779}", "{'[0, 6, 0, 1, 0, 0, 0, 0, 8, 12, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0859971}", "{'[0, 6, 0, 1, 0, 0, 0, 0, 8, 12, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0865932}", "{'[0, 6, 0, 1, 0, 0, 0, 0, 8, 12, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0877991}", "{'[0, 6, 0, 1, 0, 0, 0, 0, 8, 12, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0887198}", "{'[0, 6, 0, 1, 0, 0, 0, 0, 8, 12, 29, 0, 1, 0, 1, 1, 1, 1]' : 0.0899029}"]
returning from 'run': {'[0, 6, 0, 1, 0, 0, 0, 0, 8, 12, 29, 0, 1, 0, 1, 1, 1, 1]': ([0.0880468, 0.08814, 0.0880101, 0.0881171, 0.0880289, 0.0883219, 0.0880022, 0.086571, 0.0862131, 0.0860569, 0.086194, 0.0868671, 0.0881231, 0.0880091, 0.0880771, 0.088366, 0.0866289, 0.0886459, 0.089875, 0.090035, 0.089963, 0.0899901, 0.089915, 0.087486, 0.0860779, 0.0859971, 0.0865932, 0.0877991, 0.0887198, 0.0899029], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 0, 1, 0, 0, 0, 0, 8, 12, 29, 0, 1, 0, 1, 1, 1, 1]': ([0.0880468, 0.08814, 0.0880101, 0.0881171, 0.0880289, 0.0883219, 0.0880022, 0.086571, 0.0862131, 0.0860569, 0.086194, 0.0868671, 0.0881231, 0.0880091, 0.0880771, 0.088366, 0.0866289, 0.0886459, 0.089875, 0.090035, 0.089963, 0.0899901, 0.089915, 0.087486, 0.0860779, 0.0859971, 0.0865932, 0.0877991, 0.0887198, 0.0899029], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = kkk
Code stats:
        Number of loops: 	34
        Max loop nest depth: 	5
        Additions: 		1144
        Multiplications: 	494
        Divisions: 		0
        Logical: 		0
        Reads: 			2323
        Writes: 		432
        Comparisons:		34
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest19.exe __orio_perftest19.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest19.exe  
Program Test Output: 
{'[2, 0, 4, 2, 3, 2, 0, 1, 29, 3, 16, 0, 1, 0, 0, 1, 0, 0]' : 0.120426}
{'[2, 0, 4, 2, 3, 2, 0, 1, 29, 3, 16, 0, 1, 0, 0, 1, 0, 0]' : 0.120395}
{'[2, 0, 4, 2, 3, 2, 0, 1, 29, 3, 16, 0, 1, 0, 0, 1, 0, 0]' : 0.120225}
{'[2, 0, 4, 2, 3, 2, 0, 1, 29, 3, 16, 0, 1, 0, 0, 1, 0, 0]' : 0.116644}
{'[2, 0, 4, 2, 3, 2, 0, 1, 29, 3, 16, 0, 1, 0, 0, 1, 0, 0]' : 0.107495}
{'[2, 0, 4, 2, 3, 2, 0, 1, 29, 3, 16, 0, 1, 0, 0, 1, 0, 0]' : 0.108151}
{'[2, 0, 4, 2, 3, 2, 0, 1, 29, 3, 16, 0, 1, 0, 0, 1, 0, 0]' : 0.109604}
{'[2, 0, 4, 2, 3, 2, 0, 1, 29, 3, 16, 0, 1, 0, 0, 1, 0, 0]' : 0.108856}
{'[2, 0, 4, 2, 3, 2, 0, 1, 29, 3, 16, 0, 1, 0, 0, 1, 0, 0]' : 0.107413}
{'[2, 0, 4, 2, 3, 2, 0, 1, 29, 3, 16, 0, 1, 0, 0, 1, 0, 0]' : 0.107399}
{'[2, 0, 4, 2, 3, 2, 0, 1, 29, 3, 16, 0, 1, 0, 0, 1, 0, 0]' : 0.108937}
{'[2, 0, 4, 2, 3, 2, 0, 1, 29, 3, 16, 0, 1, 0, 0, 1, 0, 0]' : 0.109016}
{'[2, 0, 4, 2, 3, 2, 0, 1, 29, 3, 16, 0, 1, 0, 0, 1, 0, 0]' : 0.107391}
{'[2, 0, 4, 2, 3, 2, 0, 1, 29, 3, 16, 0, 1, 0, 0, 1, 0, 0]' : 0.107451}
{'[2, 0, 4, 2, 3, 2, 0, 1, 29, 3, 16, 0, 1, 0, 0, 1, 0, 0]' : 0.107604}
{'[2, 0, 4, 2, 3, 2, 0, 1, 29, 3, 16, 0, 1, 0, 0, 1, 0, 0]' : 0.109896}
{'[2, 0, 4, 2, 3, 2, 0, 1, 29, 3, 16, 0, 1, 0, 0, 1, 0, 0]' : 0.109657}
{'[2, 0, 4, 2, 3, 2, 0, 1, 29, 3, 16, 0, 1, 0, 0, 1, 0, 0]' : 0.109723}
{'[2, 0, 4, 2, 3, 2, 0, 1, 29, 3, 16, 0, 1, 0, 0, 1, 0, 0]' : 0.109676}
{'[2, 0, 4, 2, 3, 2, 0, 1, 29, 3, 16, 0, 1, 0, 0, 1, 0, 0]' : 0.110044}
{'[2, 0, 4, 2, 3, 2, 0, 1, 29, 3, 16, 0, 1, 0, 0, 1, 0, 0]' : 0.109533}
{'[2, 0, 4, 2, 3, 2, 0, 1, 29, 3, 16, 0, 1, 0, 0, 1, 0, 0]' : 0.109585}
{'[2, 0, 4, 2, 3, 2, 0, 1, 29, 3, 16, 0, 1, 0, 0, 1, 0, 0]' : 0.108885}
{'[2, 0, 4, 2, 3, 2, 0, 1, 29, 3, 16, 0, 1, 0, 0, 1, 0, 0]' : 0.105763}
{'[2, 0, 4, 2, 3, 2, 0, 1, 29, 3, 16, 0, 1, 0, 0, 1, 0, 0]' : 0.107278}
{'[2, 0, 4, 2, 3, 2, 0, 1, 29, 3, 16, 0, 1, 0, 0, 1, 0, 0]' : 0.107425}
{'[2, 0, 4, 2, 3, 2, 0, 1, 29, 3, 16, 0, 1, 0, 0, 1, 0, 0]' : 0.107436}
{'[2, 0, 4, 2, 3, 2, 0, 1, 29, 3, 16, 0, 1, 0, 0, 1, 0, 0]' : 0.105757}
{'[2, 0, 4, 2, 3, 2, 0, 1, 29, 3, 16, 0, 1, 0, 0, 1, 0, 0]' : 0.105993}
{'[2, 0, 4, 2, 3, 2, 0, 1, 29, 3, 16, 0, 1, 0, 0, 1, 0, 0]' : 0.107831}

out:
 ["{'[2, 0, 4, 2, 3, 2, 0, 1, 29, 3, 16, 0, 1, 0, 0, 1, 0, 0]' : 0.120426}", "{'[2, 0, 4, 2, 3, 2, 0, 1, 29, 3, 16, 0, 1, 0, 0, 1, 0, 0]' : 0.120395}", "{'[2, 0, 4, 2, 3, 2, 0, 1, 29, 3, 16, 0, 1, 0, 0, 1, 0, 0]' : 0.120225}", "{'[2, 0, 4, 2, 3, 2, 0, 1, 29, 3, 16, 0, 1, 0, 0, 1, 0, 0]' : 0.116644}", "{'[2, 0, 4, 2, 3, 2, 0, 1, 29, 3, 16, 0, 1, 0, 0, 1, 0, 0]' : 0.107495}", "{'[2, 0, 4, 2, 3, 2, 0, 1, 29, 3, 16, 0, 1, 0, 0, 1, 0, 0]' : 0.108151}", "{'[2, 0, 4, 2, 3, 2, 0, 1, 29, 3, 16, 0, 1, 0, 0, 1, 0, 0]' : 0.109604}", "{'[2, 0, 4, 2, 3, 2, 0, 1, 29, 3, 16, 0, 1, 0, 0, 1, 0, 0]' : 0.108856}", "{'[2, 0, 4, 2, 3, 2, 0, 1, 29, 3, 16, 0, 1, 0, 0, 1, 0, 0]' : 0.107413}", "{'[2, 0, 4, 2, 3, 2, 0, 1, 29, 3, 16, 0, 1, 0, 0, 1, 0, 0]' : 0.107399}", "{'[2, 0, 4, 2, 3, 2, 0, 1, 29, 3, 16, 0, 1, 0, 0, 1, 0, 0]' : 0.108937}", "{'[2, 0, 4, 2, 3, 2, 0, 1, 29, 3, 16, 0, 1, 0, 0, 1, 0, 0]' : 0.109016}", "{'[2, 0, 4, 2, 3, 2, 0, 1, 29, 3, 16, 0, 1, 0, 0, 1, 0, 0]' : 0.107391}", "{'[2, 0, 4, 2, 3, 2, 0, 1, 29, 3, 16, 0, 1, 0, 0, 1, 0, 0]' : 0.107451}", "{'[2, 0, 4, 2, 3, 2, 0, 1, 29, 3, 16, 0, 1, 0, 0, 1, 0, 0]' : 0.107604}", "{'[2, 0, 4, 2, 3, 2, 0, 1, 29, 3, 16, 0, 1, 0, 0, 1, 0, 0]' : 0.109896}", "{'[2, 0, 4, 2, 3, 2, 0, 1, 29, 3, 16, 0, 1, 0, 0, 1, 0, 0]' : 0.109657}", "{'[2, 0, 4, 2, 3, 2, 0, 1, 29, 3, 16, 0, 1, 0, 0, 1, 0, 0]' : 0.109723}", "{'[2, 0, 4, 2, 3, 2, 0, 1, 29, 3, 16, 0, 1, 0, 0, 1, 0, 0]' : 0.109676}", "{'[2, 0, 4, 2, 3, 2, 0, 1, 29, 3, 16, 0, 1, 0, 0, 1, 0, 0]' : 0.110044}", "{'[2, 0, 4, 2, 3, 2, 0, 1, 29, 3, 16, 0, 1, 0, 0, 1, 0, 0]' : 0.109533}", "{'[2, 0, 4, 2, 3, 2, 0, 1, 29, 3, 16, 0, 1, 0, 0, 1, 0, 0]' : 0.109585}", "{'[2, 0, 4, 2, 3, 2, 0, 1, 29, 3, 16, 0, 1, 0, 0, 1, 0, 0]' : 0.108885}", "{'[2, 0, 4, 2, 3, 2, 0, 1, 29, 3, 16, 0, 1, 0, 0, 1, 0, 0]' : 0.105763}", "{'[2, 0, 4, 2, 3, 2, 0, 1, 29, 3, 16, 0, 1, 0, 0, 1, 0, 0]' : 0.107278}", "{'[2, 0, 4, 2, 3, 2, 0, 1, 29, 3, 16, 0, 1, 0, 0, 1, 0, 0]' : 0.107425}", "{'[2, 0, 4, 2, 3, 2, 0, 1, 29, 3, 16, 0, 1, 0, 0, 1, 0, 0]' : 0.107436}", "{'[2, 0, 4, 2, 3, 2, 0, 1, 29, 3, 16, 0, 1, 0, 0, 1, 0, 0]' : 0.105757}", "{'[2, 0, 4, 2, 3, 2, 0, 1, 29, 3, 16, 0, 1, 0, 0, 1, 0, 0]' : 0.105993}", "{'[2, 0, 4, 2, 3, 2, 0, 1, 29, 3, 16, 0, 1, 0, 0, 1, 0, 0]' : 0.107831}"]
returning from 'run': {'[2, 0, 4, 2, 3, 2, 0, 1, 29, 3, 16, 0, 1, 0, 0, 1, 0, 0]': ([0.120426, 0.120395, 0.120225, 0.116644, 0.107495, 0.108151, 0.109604, 0.108856, 0.107413, 0.107399, 0.108937, 0.109016, 0.107391, 0.107451, 0.107604, 0.109896, 0.109657, 0.109723, 0.109676, 0.110044, 0.109533, 0.109585, 0.108885, 0.105763, 0.107278, 0.107425, 0.107436, 0.105757, 0.105993, 0.107831], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 0, 4, 2, 3, 2, 0, 1, 29, 3, 16, 0, 1, 0, 0, 1, 0, 0]': ([0.120426, 0.120395, 0.120225, 0.116644, 0.107495, 0.108151, 0.109604, 0.108856, 0.107413, 0.107399, 0.108937, 0.109016, 0.107391, 0.107451, 0.107604, 0.109896, 0.109657, 0.109723, 0.109676, 0.110044, 0.109533, 0.109585, 0.108885, 0.105763, 0.107278, 0.107425, 0.107436, 0.105757, 0.105993, 0.107831], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	54
        Max loop nest depth: 	5
        Additions: 		5498
        Multiplications: 	1560
        Divisions: 		0
        Logical: 		0
        Reads: 			8484
        Writes: 		1005
        Comparisons:		54
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest20.exe __orio_perftest20.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest20.exe  
Program Test Output: 
{'[2, 1, 0, 3, 0, 1, 0, 0, 28, 18, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.18358}
{'[2, 1, 0, 3, 0, 1, 0, 0, 28, 18, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.181749}
{'[2, 1, 0, 3, 0, 1, 0, 0, 28, 18, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.161328}
{'[2, 1, 0, 3, 0, 1, 0, 0, 28, 18, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.160738}
{'[2, 1, 0, 3, 0, 1, 0, 0, 28, 18, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.160831}
{'[2, 1, 0, 3, 0, 1, 0, 0, 28, 18, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.165058}
{'[2, 1, 0, 3, 0, 1, 0, 0, 28, 18, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.165093}
{'[2, 1, 0, 3, 0, 1, 0, 0, 28, 18, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.16497}
{'[2, 1, 0, 3, 0, 1, 0, 0, 28, 18, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.164679}
{'[2, 1, 0, 3, 0, 1, 0, 0, 28, 18, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.16009}
{'[2, 1, 0, 3, 0, 1, 0, 0, 28, 18, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.160096}
{'[2, 1, 0, 3, 0, 1, 0, 0, 28, 18, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.160827}
{'[2, 1, 0, 3, 0, 1, 0, 0, 28, 18, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.156399}
{'[2, 1, 0, 3, 0, 1, 0, 0, 28, 18, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.160565}
{'[2, 1, 0, 3, 0, 1, 0, 0, 28, 18, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.163886}
{'[2, 1, 0, 3, 0, 1, 0, 0, 28, 18, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.161513}
{'[2, 1, 0, 3, 0, 1, 0, 0, 28, 18, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.160767}
{'[2, 1, 0, 3, 0, 1, 0, 0, 28, 18, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.160886}
{'[2, 1, 0, 3, 0, 1, 0, 0, 28, 18, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.160748}
{'[2, 1, 0, 3, 0, 1, 0, 0, 28, 18, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.162627}
{'[2, 1, 0, 3, 0, 1, 0, 0, 28, 18, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.165006}
{'[2, 1, 0, 3, 0, 1, 0, 0, 28, 18, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.164535}
{'[2, 1, 0, 3, 0, 1, 0, 0, 28, 18, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.15635}
{'[2, 1, 0, 3, 0, 1, 0, 0, 28, 18, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.158482}
{'[2, 1, 0, 3, 0, 1, 0, 0, 28, 18, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.160783}
{'[2, 1, 0, 3, 0, 1, 0, 0, 28, 18, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.159224}
{'[2, 1, 0, 3, 0, 1, 0, 0, 28, 18, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.161606}
{'[2, 1, 0, 3, 0, 1, 0, 0, 28, 18, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.165006}
{'[2, 1, 0, 3, 0, 1, 0, 0, 28, 18, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.163947}
{'[2, 1, 0, 3, 0, 1, 0, 0, 28, 18, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.161077}

out:
 ["{'[2, 1, 0, 3, 0, 1, 0, 0, 28, 18, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.18358}", "{'[2, 1, 0, 3, 0, 1, 0, 0, 28, 18, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.181749}", "{'[2, 1, 0, 3, 0, 1, 0, 0, 28, 18, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.161328}", "{'[2, 1, 0, 3, 0, 1, 0, 0, 28, 18, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.160738}", "{'[2, 1, 0, 3, 0, 1, 0, 0, 28, 18, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.160831}", "{'[2, 1, 0, 3, 0, 1, 0, 0, 28, 18, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.165058}", "{'[2, 1, 0, 3, 0, 1, 0, 0, 28, 18, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.165093}", "{'[2, 1, 0, 3, 0, 1, 0, 0, 28, 18, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.16497}", "{'[2, 1, 0, 3, 0, 1, 0, 0, 28, 18, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.164679}", "{'[2, 1, 0, 3, 0, 1, 0, 0, 28, 18, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.16009}", "{'[2, 1, 0, 3, 0, 1, 0, 0, 28, 18, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.160096}", "{'[2, 1, 0, 3, 0, 1, 0, 0, 28, 18, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.160827}", "{'[2, 1, 0, 3, 0, 1, 0, 0, 28, 18, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.156399}", "{'[2, 1, 0, 3, 0, 1, 0, 0, 28, 18, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.160565}", "{'[2, 1, 0, 3, 0, 1, 0, 0, 28, 18, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.163886}", "{'[2, 1, 0, 3, 0, 1, 0, 0, 28, 18, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.161513}", "{'[2, 1, 0, 3, 0, 1, 0, 0, 28, 18, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.160767}", "{'[2, 1, 0, 3, 0, 1, 0, 0, 28, 18, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.160886}", "{'[2, 1, 0, 3, 0, 1, 0, 0, 28, 18, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.160748}", "{'[2, 1, 0, 3, 0, 1, 0, 0, 28, 18, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.162627}", "{'[2, 1, 0, 3, 0, 1, 0, 0, 28, 18, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.165006}", "{'[2, 1, 0, 3, 0, 1, 0, 0, 28, 18, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.164535}", "{'[2, 1, 0, 3, 0, 1, 0, 0, 28, 18, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.15635}", "{'[2, 1, 0, 3, 0, 1, 0, 0, 28, 18, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.158482}", "{'[2, 1, 0, 3, 0, 1, 0, 0, 28, 18, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.160783}", "{'[2, 1, 0, 3, 0, 1, 0, 0, 28, 18, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.159224}", "{'[2, 1, 0, 3, 0, 1, 0, 0, 28, 18, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.161606}", "{'[2, 1, 0, 3, 0, 1, 0, 0, 28, 18, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.165006}", "{'[2, 1, 0, 3, 0, 1, 0, 0, 28, 18, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.163947}", "{'[2, 1, 0, 3, 0, 1, 0, 0, 28, 18, 0, 4, 0, 0, 2, 0, 1, 1]' : 0.161077}"]
returning from 'run': {'[2, 1, 0, 3, 0, 1, 0, 0, 28, 18, 0, 4, 0, 0, 2, 0, 1, 1]': ([0.18358, 0.181749, 0.161328, 0.160738, 0.160831, 0.165058, 0.165093, 0.16497, 0.164679, 0.16009, 0.160096, 0.160827, 0.156399, 0.160565, 0.163886, 0.161513, 0.160767, 0.160886, 0.160748, 0.162627, 0.165006, 0.164535, 0.15635, 0.158482, 0.160783, 0.159224, 0.161606, 0.165006, 0.163947, 0.161077], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 1, 0, 3, 0, 1, 0, 0, 28, 18, 0, 4, 0, 0, 2, 0, 1, 1]': ([0.18358, 0.181749, 0.161328, 0.160738, 0.160831, 0.165058, 0.165093, 0.16497, 0.164679, 0.16009, 0.160096, 0.160827, 0.156399, 0.160565, 0.163886, 0.161513, 0.160767, 0.160886, 0.160748, 0.162627, 0.165006, 0.164535, 0.15635, 0.158482, 0.160783, 0.159224, 0.161606, 0.165006, 0.163947, 0.161077], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	23
        Max loop nest depth: 	4
        Additions: 		5312
        Multiplications: 	2574
        Divisions: 		0
        Logical: 		0
        Reads: 			9804
        Writes: 		1509
        Comparisons:		23
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest21.exe __orio_perftest21.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest21.exe  
Program Test Output: 
{'[1, 0, 0, 0, 6, 1, 1, 1, 16, 0, 27, 8, 2, 0, 0, 1, 1, 1]' : 0.243409}
{'[1, 0, 0, 0, 6, 1, 1, 1, 16, 0, 27, 8, 2, 0, 0, 1, 1, 1]' : 0.23824}
{'[1, 0, 0, 0, 6, 1, 1, 1, 16, 0, 27, 8, 2, 0, 0, 1, 1, 1]' : 0.243382}
{'[1, 0, 0, 0, 6, 1, 1, 1, 16, 0, 27, 8, 2, 0, 0, 1, 1, 1]' : 0.243555}
{'[1, 0, 0, 0, 6, 1, 1, 1, 16, 0, 27, 8, 2, 0, 0, 1, 1, 1]' : 0.243259}
{'[1, 0, 0, 0, 6, 1, 1, 1, 16, 0, 27, 8, 2, 0, 0, 1, 1, 1]' : 0.243643}
{'[1, 0, 0, 0, 6, 1, 1, 1, 16, 0, 27, 8, 2, 0, 0, 1, 1, 1]' : 0.24355}
{'[1, 0, 0, 0, 6, 1, 1, 1, 16, 0, 27, 8, 2, 0, 0, 1, 1, 1]' : 0.242239}
{'[1, 0, 0, 0, 6, 1, 1, 1, 16, 0, 27, 8, 2, 0, 0, 1, 1, 1]' : 0.243211}
{'[1, 0, 0, 0, 6, 1, 1, 1, 16, 0, 27, 8, 2, 0, 0, 1, 1, 1]' : 0.240408}
{'[1, 0, 0, 0, 6, 1, 1, 1, 16, 0, 27, 8, 2, 0, 0, 1, 1, 1]' : 0.243737}
{'[1, 0, 0, 0, 6, 1, 1, 1, 16, 0, 27, 8, 2, 0, 0, 1, 1, 1]' : 0.243452}
{'[1, 0, 0, 0, 6, 1, 1, 1, 16, 0, 27, 8, 2, 0, 0, 1, 1, 1]' : 0.243271}
{'[1, 0, 0, 0, 6, 1, 1, 1, 16, 0, 27, 8, 2, 0, 0, 1, 1, 1]' : 0.243518}
{'[1, 0, 0, 0, 6, 1, 1, 1, 16, 0, 27, 8, 2, 0, 0, 1, 1, 1]' : 0.243324}
{'[1, 0, 0, 0, 6, 1, 1, 1, 16, 0, 27, 8, 2, 0, 0, 1, 1, 1]' : 0.243024}
{'[1, 0, 0, 0, 6, 1, 1, 1, 16, 0, 27, 8, 2, 0, 0, 1, 1, 1]' : 0.243382}
{'[1, 0, 0, 0, 6, 1, 1, 1, 16, 0, 27, 8, 2, 0, 0, 1, 1, 1]' : 0.243339}
{'[1, 0, 0, 0, 6, 1, 1, 1, 16, 0, 27, 8, 2, 0, 0, 1, 1, 1]' : 0.243383}
{'[1, 0, 0, 0, 6, 1, 1, 1, 16, 0, 27, 8, 2, 0, 0, 1, 1, 1]' : 0.240566}
{'[1, 0, 0, 0, 6, 1, 1, 1, 16, 0, 27, 8, 2, 0, 0, 1, 1, 1]' : 0.23626}
{'[1, 0, 0, 0, 6, 1, 1, 1, 16, 0, 27, 8, 2, 0, 0, 1, 1, 1]' : 0.235985}
{'[1, 0, 0, 0, 6, 1, 1, 1, 16, 0, 27, 8, 2, 0, 0, 1, 1, 1]' : 0.236034}
{'[1, 0, 0, 0, 6, 1, 1, 1, 16, 0, 27, 8, 2, 0, 0, 1, 1, 1]' : 0.239288}
{'[1, 0, 0, 0, 6, 1, 1, 1, 16, 0, 27, 8, 2, 0, 0, 1, 1, 1]' : 0.243643}
{'[1, 0, 0, 0, 6, 1, 1, 1, 16, 0, 27, 8, 2, 0, 0, 1, 1, 1]' : 0.243386}
{'[1, 0, 0, 0, 6, 1, 1, 1, 16, 0, 27, 8, 2, 0, 0, 1, 1, 1]' : 0.243513}
{'[1, 0, 0, 0, 6, 1, 1, 1, 16, 0, 27, 8, 2, 0, 0, 1, 1, 1]' : 0.243419}
{'[1, 0, 0, 0, 6, 1, 1, 1, 16, 0, 27, 8, 2, 0, 0, 1, 1, 1]' : 0.243501}
{'[1, 0, 0, 0, 6, 1, 1, 1, 16, 0, 27, 8, 2, 0, 0, 1, 1, 1]' : 0.23734}

out:
 ["{'[1, 0, 0, 0, 6, 1, 1, 1, 16, 0, 27, 8, 2, 0, 0, 1, 1, 1]' : 0.243409}", "{'[1, 0, 0, 0, 6, 1, 1, 1, 16, 0, 27, 8, 2, 0, 0, 1, 1, 1]' : 0.23824}", "{'[1, 0, 0, 0, 6, 1, 1, 1, 16, 0, 27, 8, 2, 0, 0, 1, 1, 1]' : 0.243382}", "{'[1, 0, 0, 0, 6, 1, 1, 1, 16, 0, 27, 8, 2, 0, 0, 1, 1, 1]' : 0.243555}", "{'[1, 0, 0, 0, 6, 1, 1, 1, 16, 0, 27, 8, 2, 0, 0, 1, 1, 1]' : 0.243259}", "{'[1, 0, 0, 0, 6, 1, 1, 1, 16, 0, 27, 8, 2, 0, 0, 1, 1, 1]' : 0.243643}", "{'[1, 0, 0, 0, 6, 1, 1, 1, 16, 0, 27, 8, 2, 0, 0, 1, 1, 1]' : 0.24355}", "{'[1, 0, 0, 0, 6, 1, 1, 1, 16, 0, 27, 8, 2, 0, 0, 1, 1, 1]' : 0.242239}", "{'[1, 0, 0, 0, 6, 1, 1, 1, 16, 0, 27, 8, 2, 0, 0, 1, 1, 1]' : 0.243211}", "{'[1, 0, 0, 0, 6, 1, 1, 1, 16, 0, 27, 8, 2, 0, 0, 1, 1, 1]' : 0.240408}", "{'[1, 0, 0, 0, 6, 1, 1, 1, 16, 0, 27, 8, 2, 0, 0, 1, 1, 1]' : 0.243737}", "{'[1, 0, 0, 0, 6, 1, 1, 1, 16, 0, 27, 8, 2, 0, 0, 1, 1, 1]' : 0.243452}", "{'[1, 0, 0, 0, 6, 1, 1, 1, 16, 0, 27, 8, 2, 0, 0, 1, 1, 1]' : 0.243271}", "{'[1, 0, 0, 0, 6, 1, 1, 1, 16, 0, 27, 8, 2, 0, 0, 1, 1, 1]' : 0.243518}", "{'[1, 0, 0, 0, 6, 1, 1, 1, 16, 0, 27, 8, 2, 0, 0, 1, 1, 1]' : 0.243324}", "{'[1, 0, 0, 0, 6, 1, 1, 1, 16, 0, 27, 8, 2, 0, 0, 1, 1, 1]' : 0.243024}", "{'[1, 0, 0, 0, 6, 1, 1, 1, 16, 0, 27, 8, 2, 0, 0, 1, 1, 1]' : 0.243382}", "{'[1, 0, 0, 0, 6, 1, 1, 1, 16, 0, 27, 8, 2, 0, 0, 1, 1, 1]' : 0.243339}", "{'[1, 0, 0, 0, 6, 1, 1, 1, 16, 0, 27, 8, 2, 0, 0, 1, 1, 1]' : 0.243383}", "{'[1, 0, 0, 0, 6, 1, 1, 1, 16, 0, 27, 8, 2, 0, 0, 1, 1, 1]' : 0.240566}", "{'[1, 0, 0, 0, 6, 1, 1, 1, 16, 0, 27, 8, 2, 0, 0, 1, 1, 1]' : 0.23626}", "{'[1, 0, 0, 0, 6, 1, 1, 1, 16, 0, 27, 8, 2, 0, 0, 1, 1, 1]' : 0.235985}", "{'[1, 0, 0, 0, 6, 1, 1, 1, 16, 0, 27, 8, 2, 0, 0, 1, 1, 1]' : 0.236034}", "{'[1, 0, 0, 0, 6, 1, 1, 1, 16, 0, 27, 8, 2, 0, 0, 1, 1, 1]' : 0.239288}", "{'[1, 0, 0, 0, 6, 1, 1, 1, 16, 0, 27, 8, 2, 0, 0, 1, 1, 1]' : 0.243643}", "{'[1, 0, 0, 0, 6, 1, 1, 1, 16, 0, 27, 8, 2, 0, 0, 1, 1, 1]' : 0.243386}", "{'[1, 0, 0, 0, 6, 1, 1, 1, 16, 0, 27, 8, 2, 0, 0, 1, 1, 1]' : 0.243513}", "{'[1, 0, 0, 0, 6, 1, 1, 1, 16, 0, 27, 8, 2, 0, 0, 1, 1, 1]' : 0.243419}", "{'[1, 0, 0, 0, 6, 1, 1, 1, 16, 0, 27, 8, 2, 0, 0, 1, 1, 1]' : 0.243501}", "{'[1, 0, 0, 0, 6, 1, 1, 1, 16, 0, 27, 8, 2, 0, 0, 1, 1, 1]' : 0.23734}"]
returning from 'run': {'[1, 0, 0, 0, 6, 1, 1, 1, 16, 0, 27, 8, 2, 0, 0, 1, 1, 1]': ([0.243409, 0.23824, 0.243382, 0.243555, 0.243259, 0.243643, 0.24355, 0.242239, 0.243211, 0.240408, 0.243737, 0.243452, 0.243271, 0.243518, 0.243324, 0.243024, 0.243382, 0.243339, 0.243383, 0.240566, 0.23626, 0.235985, 0.236034, 0.239288, 0.243643, 0.243386, 0.243513, 0.243419, 0.243501, 0.23734], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 0, 0, 6, 1, 1, 1, 16, 0, 27, 8, 2, 0, 0, 1, 1, 1]': ([0.243409, 0.23824, 0.243382, 0.243555, 0.243259, 0.243643, 0.24355, 0.242239, 0.243211, 0.240408, 0.243737, 0.243452, 0.243271, 0.243518, 0.243324, 0.243024, 0.243382, 0.243339, 0.243383, 0.240566, 0.23626, 0.235985, 0.236034, 0.239288, 0.243643, 0.243386, 0.243513, 0.243419, 0.243501, 0.23734], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		136
        Multiplications: 	34
        Divisions: 		0
        Logical: 		0
        Reads: 			292
        Writes: 		53
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest22.exe __orio_perftest22.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest22.exe  
Program Test Output: 
{'[0, 6, 6, 3, 6, 6, 1, 0, 3, 0, 6, 7, 0, 0, 0, 0, 1, 0]' : 0.270649}
{'[0, 6, 6, 3, 6, 6, 1, 0, 3, 0, 6, 7, 0, 0, 0, 0, 1, 0]' : 0.270681}
{'[0, 6, 6, 3, 6, 6, 1, 0, 3, 0, 6, 7, 0, 0, 0, 0, 1, 0]' : 0.255243}
{'[0, 6, 6, 3, 6, 6, 1, 0, 3, 0, 6, 7, 0, 0, 0, 0, 1, 0]' : 0.232712}
{'[0, 6, 6, 3, 6, 6, 1, 0, 3, 0, 6, 7, 0, 0, 0, 0, 1, 0]' : 0.230773}
{'[0, 6, 6, 3, 6, 6, 1, 0, 3, 0, 6, 7, 0, 0, 0, 0, 1, 0]' : 0.23206}
{'[0, 6, 6, 3, 6, 6, 1, 0, 3, 0, 6, 7, 0, 0, 0, 0, 1, 0]' : 0.232432}
{'[0, 6, 6, 3, 6, 6, 1, 0, 3, 0, 6, 7, 0, 0, 0, 0, 1, 0]' : 0.232896}
{'[0, 6, 6, 3, 6, 6, 1, 0, 3, 0, 6, 7, 0, 0, 0, 0, 1, 0]' : 0.240683}
{'[0, 6, 6, 3, 6, 6, 1, 0, 3, 0, 6, 7, 0, 0, 0, 0, 1, 0]' : 0.236959}
{'[0, 6, 6, 3, 6, 6, 1, 0, 3, 0, 6, 7, 0, 0, 0, 0, 1, 0]' : 0.241615}
{'[0, 6, 6, 3, 6, 6, 1, 0, 3, 0, 6, 7, 0, 0, 0, 0, 1, 0]' : 0.235036}
{'[0, 6, 6, 3, 6, 6, 1, 0, 3, 0, 6, 7, 0, 0, 0, 0, 1, 0]' : 0.235433}
{'[0, 6, 6, 3, 6, 6, 1, 0, 3, 0, 6, 7, 0, 0, 0, 0, 1, 0]' : 0.228789}
{'[0, 6, 6, 3, 6, 6, 1, 0, 3, 0, 6, 7, 0, 0, 0, 0, 1, 0]' : 0.236029}
{'[0, 6, 6, 3, 6, 6, 1, 0, 3, 0, 6, 7, 0, 0, 0, 0, 1, 0]' : 0.23017}
{'[0, 6, 6, 3, 6, 6, 1, 0, 3, 0, 6, 7, 0, 0, 0, 0, 1, 0]' : 0.236594}
{'[0, 6, 6, 3, 6, 6, 1, 0, 3, 0, 6, 7, 0, 0, 0, 0, 1, 0]' : 0.231557}
{'[0, 6, 6, 3, 6, 6, 1, 0, 3, 0, 6, 7, 0, 0, 0, 0, 1, 0]' : 0.233215}
{'[0, 6, 6, 3, 6, 6, 1, 0, 3, 0, 6, 7, 0, 0, 0, 0, 1, 0]' : 0.233084}
{'[0, 6, 6, 3, 6, 6, 1, 0, 3, 0, 6, 7, 0, 0, 0, 0, 1, 0]' : 0.235818}
{'[0, 6, 6, 3, 6, 6, 1, 0, 3, 0, 6, 7, 0, 0, 0, 0, 1, 0]' : 0.241129}
{'[0, 6, 6, 3, 6, 6, 1, 0, 3, 0, 6, 7, 0, 0, 0, 0, 1, 0]' : 0.238792}
{'[0, 6, 6, 3, 6, 6, 1, 0, 3, 0, 6, 7, 0, 0, 0, 0, 1, 0]' : 0.238032}
{'[0, 6, 6, 3, 6, 6, 1, 0, 3, 0, 6, 7, 0, 0, 0, 0, 1, 0]' : 0.23336}
{'[0, 6, 6, 3, 6, 6, 1, 0, 3, 0, 6, 7, 0, 0, 0, 0, 1, 0]' : 0.241793}
{'[0, 6, 6, 3, 6, 6, 1, 0, 3, 0, 6, 7, 0, 0, 0, 0, 1, 0]' : 0.238514}
{'[0, 6, 6, 3, 6, 6, 1, 0, 3, 0, 6, 7, 0, 0, 0, 0, 1, 0]' : 0.237114}
{'[0, 6, 6, 3, 6, 6, 1, 0, 3, 0, 6, 7, 0, 0, 0, 0, 1, 0]' : 0.236585}
{'[0, 6, 6, 3, 6, 6, 1, 0, 3, 0, 6, 7, 0, 0, 0, 0, 1, 0]' : 0.241526}

out:
 ["{'[0, 6, 6, 3, 6, 6, 1, 0, 3, 0, 6, 7, 0, 0, 0, 0, 1, 0]' : 0.270649}", "{'[0, 6, 6, 3, 6, 6, 1, 0, 3, 0, 6, 7, 0, 0, 0, 0, 1, 0]' : 0.270681}", "{'[0, 6, 6, 3, 6, 6, 1, 0, 3, 0, 6, 7, 0, 0, 0, 0, 1, 0]' : 0.255243}", "{'[0, 6, 6, 3, 6, 6, 1, 0, 3, 0, 6, 7, 0, 0, 0, 0, 1, 0]' : 0.232712}", "{'[0, 6, 6, 3, 6, 6, 1, 0, 3, 0, 6, 7, 0, 0, 0, 0, 1, 0]' : 0.230773}", "{'[0, 6, 6, 3, 6, 6, 1, 0, 3, 0, 6, 7, 0, 0, 0, 0, 1, 0]' : 0.23206}", "{'[0, 6, 6, 3, 6, 6, 1, 0, 3, 0, 6, 7, 0, 0, 0, 0, 1, 0]' : 0.232432}", "{'[0, 6, 6, 3, 6, 6, 1, 0, 3, 0, 6, 7, 0, 0, 0, 0, 1, 0]' : 0.232896}", "{'[0, 6, 6, 3, 6, 6, 1, 0, 3, 0, 6, 7, 0, 0, 0, 0, 1, 0]' : 0.240683}", "{'[0, 6, 6, 3, 6, 6, 1, 0, 3, 0, 6, 7, 0, 0, 0, 0, 1, 0]' : 0.236959}", "{'[0, 6, 6, 3, 6, 6, 1, 0, 3, 0, 6, 7, 0, 0, 0, 0, 1, 0]' : 0.241615}", "{'[0, 6, 6, 3, 6, 6, 1, 0, 3, 0, 6, 7, 0, 0, 0, 0, 1, 0]' : 0.235036}", "{'[0, 6, 6, 3, 6, 6, 1, 0, 3, 0, 6, 7, 0, 0, 0, 0, 1, 0]' : 0.235433}", "{'[0, 6, 6, 3, 6, 6, 1, 0, 3, 0, 6, 7, 0, 0, 0, 0, 1, 0]' : 0.228789}", "{'[0, 6, 6, 3, 6, 6, 1, 0, 3, 0, 6, 7, 0, 0, 0, 0, 1, 0]' : 0.236029}", "{'[0, 6, 6, 3, 6, 6, 1, 0, 3, 0, 6, 7, 0, 0, 0, 0, 1, 0]' : 0.23017}", "{'[0, 6, 6, 3, 6, 6, 1, 0, 3, 0, 6, 7, 0, 0, 0, 0, 1, 0]' : 0.236594}", "{'[0, 6, 6, 3, 6, 6, 1, 0, 3, 0, 6, 7, 0, 0, 0, 0, 1, 0]' : 0.231557}", "{'[0, 6, 6, 3, 6, 6, 1, 0, 3, 0, 6, 7, 0, 0, 0, 0, 1, 0]' : 0.233215}", "{'[0, 6, 6, 3, 6, 6, 1, 0, 3, 0, 6, 7, 0, 0, 0, 0, 1, 0]' : 0.233084}", "{'[0, 6, 6, 3, 6, 6, 1, 0, 3, 0, 6, 7, 0, 0, 0, 0, 1, 0]' : 0.235818}", "{'[0, 6, 6, 3, 6, 6, 1, 0, 3, 0, 6, 7, 0, 0, 0, 0, 1, 0]' : 0.241129}", "{'[0, 6, 6, 3, 6, 6, 1, 0, 3, 0, 6, 7, 0, 0, 0, 0, 1, 0]' : 0.238792}", "{'[0, 6, 6, 3, 6, 6, 1, 0, 3, 0, 6, 7, 0, 0, 0, 0, 1, 0]' : 0.238032}", "{'[0, 6, 6, 3, 6, 6, 1, 0, 3, 0, 6, 7, 0, 0, 0, 0, 1, 0]' : 0.23336}", "{'[0, 6, 6, 3, 6, 6, 1, 0, 3, 0, 6, 7, 0, 0, 0, 0, 1, 0]' : 0.241793}", "{'[0, 6, 6, 3, 6, 6, 1, 0, 3, 0, 6, 7, 0, 0, 0, 0, 1, 0]' : 0.238514}", "{'[0, 6, 6, 3, 6, 6, 1, 0, 3, 0, 6, 7, 0, 0, 0, 0, 1, 0]' : 0.237114}", "{'[0, 6, 6, 3, 6, 6, 1, 0, 3, 0, 6, 7, 0, 0, 0, 0, 1, 0]' : 0.236585}", "{'[0, 6, 6, 3, 6, 6, 1, 0, 3, 0, 6, 7, 0, 0, 0, 0, 1, 0]' : 0.241526}"]
returning from 'run': {'[0, 6, 6, 3, 6, 6, 1, 0, 3, 0, 6, 7, 0, 0, 0, 0, 1, 0]': ([0.270649, 0.270681, 0.255243, 0.232712, 0.230773, 0.23206, 0.232432, 0.232896, 0.240683, 0.236959, 0.241615, 0.235036, 0.235433, 0.228789, 0.236029, 0.23017, 0.236594, 0.231557, 0.233215, 0.233084, 0.235818, 0.241129, 0.238792, 0.238032, 0.23336, 0.241793, 0.238514, 0.237114, 0.236585, 0.241526], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 6, 3, 6, 6, 1, 0, 3, 0, 6, 7, 0, 0, 0, 0, 1, 0]': ([0.270649, 0.270681, 0.255243, 0.232712, 0.230773, 0.23206, 0.232432, 0.232896, 0.240683, 0.236959, 0.241615, 0.235036, 0.235433, 0.228789, 0.236029, 0.23017, 0.236594, 0.231557, 0.233215, 0.233084, 0.235818, 0.241129, 0.238792, 0.238032, 0.23336, 0.241793, 0.238514, 0.237114, 0.236585, 0.241526], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
Code stats:
        Number of loops: 	146
        Max loop nest depth: 	5
        Additions: 		4412
        Multiplications: 	1008
        Divisions: 		0
        Logical: 		0
        Reads: 			7147
        Writes: 		902
        Comparisons:		146
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest23.exe __orio_perftest23.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest23.exe  
Program Test Output: 
{'[3, 2, 1, 1, 3, 3, 1, 1, 4, 22, 6, 0, 2, 0, 0, 0, 0, 0]' : 0.205302}
{'[3, 2, 1, 1, 3, 3, 1, 1, 4, 22, 6, 0, 2, 0, 0, 0, 0, 0]' : 0.204488}
{'[3, 2, 1, 1, 3, 3, 1, 1, 4, 22, 6, 0, 2, 0, 0, 0, 0, 0]' : 0.203009}
{'[3, 2, 1, 1, 3, 3, 1, 1, 4, 22, 6, 0, 2, 0, 0, 0, 0, 0]' : 0.187692}
{'[3, 2, 1, 1, 3, 3, 1, 1, 4, 22, 6, 0, 2, 0, 0, 0, 0, 0]' : 0.188782}
{'[3, 2, 1, 1, 3, 3, 1, 1, 4, 22, 6, 0, 2, 0, 0, 0, 0, 0]' : 0.19041}
{'[3, 2, 1, 1, 3, 3, 1, 1, 4, 22, 6, 0, 2, 0, 0, 0, 0, 0]' : 0.190158}
{'[3, 2, 1, 1, 3, 3, 1, 1, 4, 22, 6, 0, 2, 0, 0, 0, 0, 0]' : 0.189034}
{'[3, 2, 1, 1, 3, 3, 1, 1, 4, 22, 6, 0, 2, 0, 0, 0, 0, 0]' : 0.18599}
{'[3, 2, 1, 1, 3, 3, 1, 1, 4, 22, 6, 0, 2, 0, 0, 0, 0, 0]' : 0.190494}
{'[3, 2, 1, 1, 3, 3, 1, 1, 4, 22, 6, 0, 2, 0, 0, 0, 0, 0]' : 0.188574}
{'[3, 2, 1, 1, 3, 3, 1, 1, 4, 22, 6, 0, 2, 0, 0, 0, 0, 0]' : 0.187531}
{'[3, 2, 1, 1, 3, 3, 1, 1, 4, 22, 6, 0, 2, 0, 0, 0, 0, 0]' : 0.186527}
{'[3, 2, 1, 1, 3, 3, 1, 1, 4, 22, 6, 0, 2, 0, 0, 0, 0, 0]' : 0.190231}
{'[3, 2, 1, 1, 3, 3, 1, 1, 4, 22, 6, 0, 2, 0, 0, 0, 0, 0]' : 0.187328}
{'[3, 2, 1, 1, 3, 3, 1, 1, 4, 22, 6, 0, 2, 0, 0, 0, 0, 0]' : 0.187968}
{'[3, 2, 1, 1, 3, 3, 1, 1, 4, 22, 6, 0, 2, 0, 0, 0, 0, 0]' : 0.18794}
{'[3, 2, 1, 1, 3, 3, 1, 1, 4, 22, 6, 0, 2, 0, 0, 0, 0, 0]' : 0.184992}
{'[3, 2, 1, 1, 3, 3, 1, 1, 4, 22, 6, 0, 2, 0, 0, 0, 0, 0]' : 0.191314}
{'[3, 2, 1, 1, 3, 3, 1, 1, 4, 22, 6, 0, 2, 0, 0, 0, 0, 0]' : 0.188421}
{'[3, 2, 1, 1, 3, 3, 1, 1, 4, 22, 6, 0, 2, 0, 0, 0, 0, 0]' : 0.187083}
{'[3, 2, 1, 1, 3, 3, 1, 1, 4, 22, 6, 0, 2, 0, 0, 0, 0, 0]' : 0.186068}
{'[3, 2, 1, 1, 3, 3, 1, 1, 4, 22, 6, 0, 2, 0, 0, 0, 0, 0]' : 0.186518}
{'[3, 2, 1, 1, 3, 3, 1, 1, 4, 22, 6, 0, 2, 0, 0, 0, 0, 0]' : 0.188734}
{'[3, 2, 1, 1, 3, 3, 1, 1, 4, 22, 6, 0, 2, 0, 0, 0, 0, 0]' : 0.18706}
{'[3, 2, 1, 1, 3, 3, 1, 1, 4, 22, 6, 0, 2, 0, 0, 0, 0, 0]' : 0.186754}
{'[3, 2, 1, 1, 3, 3, 1, 1, 4, 22, 6, 0, 2, 0, 0, 0, 0, 0]' : 0.189617}
{'[3, 2, 1, 1, 3, 3, 1, 1, 4, 22, 6, 0, 2, 0, 0, 0, 0, 0]' : 0.186394}
{'[3, 2, 1, 1, 3, 3, 1, 1, 4, 22, 6, 0, 2, 0, 0, 0, 0, 0]' : 0.186288}
{'[3, 2, 1, 1, 3, 3, 1, 1, 4, 22, 6, 0, 2, 0, 0, 0, 0, 0]' : 0.188428}

out:
 ["{'[3, 2, 1, 1, 3, 3, 1, 1, 4, 22, 6, 0, 2, 0, 0, 0, 0, 0]' : 0.205302}", "{'[3, 2, 1, 1, 3, 3, 1, 1, 4, 22, 6, 0, 2, 0, 0, 0, 0, 0]' : 0.204488}", "{'[3, 2, 1, 1, 3, 3, 1, 1, 4, 22, 6, 0, 2, 0, 0, 0, 0, 0]' : 0.203009}", "{'[3, 2, 1, 1, 3, 3, 1, 1, 4, 22, 6, 0, 2, 0, 0, 0, 0, 0]' : 0.187692}", "{'[3, 2, 1, 1, 3, 3, 1, 1, 4, 22, 6, 0, 2, 0, 0, 0, 0, 0]' : 0.188782}", "{'[3, 2, 1, 1, 3, 3, 1, 1, 4, 22, 6, 0, 2, 0, 0, 0, 0, 0]' : 0.19041}", "{'[3, 2, 1, 1, 3, 3, 1, 1, 4, 22, 6, 0, 2, 0, 0, 0, 0, 0]' : 0.190158}", "{'[3, 2, 1, 1, 3, 3, 1, 1, 4, 22, 6, 0, 2, 0, 0, 0, 0, 0]' : 0.189034}", "{'[3, 2, 1, 1, 3, 3, 1, 1, 4, 22, 6, 0, 2, 0, 0, 0, 0, 0]' : 0.18599}", "{'[3, 2, 1, 1, 3, 3, 1, 1, 4, 22, 6, 0, 2, 0, 0, 0, 0, 0]' : 0.190494}", "{'[3, 2, 1, 1, 3, 3, 1, 1, 4, 22, 6, 0, 2, 0, 0, 0, 0, 0]' : 0.188574}", "{'[3, 2, 1, 1, 3, 3, 1, 1, 4, 22, 6, 0, 2, 0, 0, 0, 0, 0]' : 0.187531}", "{'[3, 2, 1, 1, 3, 3, 1, 1, 4, 22, 6, 0, 2, 0, 0, 0, 0, 0]' : 0.186527}", "{'[3, 2, 1, 1, 3, 3, 1, 1, 4, 22, 6, 0, 2, 0, 0, 0, 0, 0]' : 0.190231}", "{'[3, 2, 1, 1, 3, 3, 1, 1, 4, 22, 6, 0, 2, 0, 0, 0, 0, 0]' : 0.187328}", "{'[3, 2, 1, 1, 3, 3, 1, 1, 4, 22, 6, 0, 2, 0, 0, 0, 0, 0]' : 0.187968}", "{'[3, 2, 1, 1, 3, 3, 1, 1, 4, 22, 6, 0, 2, 0, 0, 0, 0, 0]' : 0.18794}", "{'[3, 2, 1, 1, 3, 3, 1, 1, 4, 22, 6, 0, 2, 0, 0, 0, 0, 0]' : 0.184992}", "{'[3, 2, 1, 1, 3, 3, 1, 1, 4, 22, 6, 0, 2, 0, 0, 0, 0, 0]' : 0.191314}", "{'[3, 2, 1, 1, 3, 3, 1, 1, 4, 22, 6, 0, 2, 0, 0, 0, 0, 0]' : 0.188421}", "{'[3, 2, 1, 1, 3, 3, 1, 1, 4, 22, 6, 0, 2, 0, 0, 0, 0, 0]' : 0.187083}", "{'[3, 2, 1, 1, 3, 3, 1, 1, 4, 22, 6, 0, 2, 0, 0, 0, 0, 0]' : 0.186068}", "{'[3, 2, 1, 1, 3, 3, 1, 1, 4, 22, 6, 0, 2, 0, 0, 0, 0, 0]' : 0.186518}", "{'[3, 2, 1, 1, 3, 3, 1, 1, 4, 22, 6, 0, 2, 0, 0, 0, 0, 0]' : 0.188734}", "{'[3, 2, 1, 1, 3, 3, 1, 1, 4, 22, 6, 0, 2, 0, 0, 0, 0, 0]' : 0.18706}", "{'[3, 2, 1, 1, 3, 3, 1, 1, 4, 22, 6, 0, 2, 0, 0, 0, 0, 0]' : 0.186754}", "{'[3, 2, 1, 1, 3, 3, 1, 1, 4, 22, 6, 0, 2, 0, 0, 0, 0, 0]' : 0.189617}", "{'[3, 2, 1, 1, 3, 3, 1, 1, 4, 22, 6, 0, 2, 0, 0, 0, 0, 0]' : 0.186394}", "{'[3, 2, 1, 1, 3, 3, 1, 1, 4, 22, 6, 0, 2, 0, 0, 0, 0, 0]' : 0.186288}", "{'[3, 2, 1, 1, 3, 3, 1, 1, 4, 22, 6, 0, 2, 0, 0, 0, 0, 0]' : 0.188428}"]
returning from 'run': {'[3, 2, 1, 1, 3, 3, 1, 1, 4, 22, 6, 0, 2, 0, 0, 0, 0, 0]': ([0.205302, 0.204488, 0.203009, 0.187692, 0.188782, 0.19041, 0.190158, 0.189034, 0.18599, 0.190494, 0.188574, 0.187531, 0.186527, 0.190231, 0.187328, 0.187968, 0.18794, 0.184992, 0.191314, 0.188421, 0.187083, 0.186068, 0.186518, 0.188734, 0.18706, 0.186754, 0.189617, 0.186394, 0.186288, 0.188428], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 2, 1, 1, 3, 3, 1, 1, 4, 22, 6, 0, 2, 0, 0, 0, 0, 0]': ([0.205302, 0.204488, 0.203009, 0.187692, 0.188782, 0.19041, 0.190158, 0.189034, 0.18599, 0.190494, 0.188574, 0.187531, 0.186527, 0.190231, 0.187328, 0.187968, 0.18794, 0.184992, 0.191314, 0.188421, 0.187083, 0.186068, 0.186518, 0.188734, 0.18706, 0.186754, 0.189617, 0.186394, 0.186288, 0.188428], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	48
        Max loop nest depth: 	5
        Additions: 		659
        Multiplications: 	232
        Divisions: 		0
        Logical: 		0
        Reads: 			1752
        Writes: 		429
        Comparisons:		48
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest24.exe __orio_perftest24.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest24.exe  
Program Test Output: 
{'[0, 0, 3, 6, 4, 5, 1, 0, 28, 24, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.193123}
{'[0, 0, 3, 6, 4, 5, 1, 0, 28, 24, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.192844}
{'[0, 0, 3, 6, 4, 5, 1, 0, 28, 24, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.193406}
{'[0, 0, 3, 6, 4, 5, 1, 0, 28, 24, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.176075}
{'[0, 0, 3, 6, 4, 5, 1, 0, 28, 24, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.173392}
{'[0, 0, 3, 6, 4, 5, 1, 0, 28, 24, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.17691}
{'[0, 0, 3, 6, 4, 5, 1, 0, 28, 24, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.174235}
{'[0, 0, 3, 6, 4, 5, 1, 0, 28, 24, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.173786}
{'[0, 0, 3, 6, 4, 5, 1, 0, 28, 24, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.176195}
{'[0, 0, 3, 6, 4, 5, 1, 0, 28, 24, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.173601}
{'[0, 0, 3, 6, 4, 5, 1, 0, 28, 24, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.173886}
{'[0, 0, 3, 6, 4, 5, 1, 0, 28, 24, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.176813}
{'[0, 0, 3, 6, 4, 5, 1, 0, 28, 24, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.171581}
{'[0, 0, 3, 6, 4, 5, 1, 0, 28, 24, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.171719}
{'[0, 0, 3, 6, 4, 5, 1, 0, 28, 24, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.17648}
{'[0, 0, 3, 6, 4, 5, 1, 0, 28, 24, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.171303}
{'[0, 0, 3, 6, 4, 5, 1, 0, 28, 24, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.172418}
{'[0, 0, 3, 6, 4, 5, 1, 0, 28, 24, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.177571}
{'[0, 0, 3, 6, 4, 5, 1, 0, 28, 24, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.173462}
{'[0, 0, 3, 6, 4, 5, 1, 0, 28, 24, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.173691}
{'[0, 0, 3, 6, 4, 5, 1, 0, 28, 24, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.173574}
{'[0, 0, 3, 6, 4, 5, 1, 0, 28, 24, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.171846}
{'[0, 0, 3, 6, 4, 5, 1, 0, 28, 24, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.172779}
{'[0, 0, 3, 6, 4, 5, 1, 0, 28, 24, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.173337}
{'[0, 0, 3, 6, 4, 5, 1, 0, 28, 24, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.172755}
{'[0, 0, 3, 6, 4, 5, 1, 0, 28, 24, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.17634}
{'[0, 0, 3, 6, 4, 5, 1, 0, 28, 24, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.176686}
{'[0, 0, 3, 6, 4, 5, 1, 0, 28, 24, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.174234}
{'[0, 0, 3, 6, 4, 5, 1, 0, 28, 24, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.177295}
{'[0, 0, 3, 6, 4, 5, 1, 0, 28, 24, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.176789}

out:
 ["{'[0, 0, 3, 6, 4, 5, 1, 0, 28, 24, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.193123}", "{'[0, 0, 3, 6, 4, 5, 1, 0, 28, 24, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.192844}", "{'[0, 0, 3, 6, 4, 5, 1, 0, 28, 24, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.193406}", "{'[0, 0, 3, 6, 4, 5, 1, 0, 28, 24, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.176075}", "{'[0, 0, 3, 6, 4, 5, 1, 0, 28, 24, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.173392}", "{'[0, 0, 3, 6, 4, 5, 1, 0, 28, 24, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.17691}", "{'[0, 0, 3, 6, 4, 5, 1, 0, 28, 24, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.174235}", "{'[0, 0, 3, 6, 4, 5, 1, 0, 28, 24, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.173786}", "{'[0, 0, 3, 6, 4, 5, 1, 0, 28, 24, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.176195}", "{'[0, 0, 3, 6, 4, 5, 1, 0, 28, 24, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.173601}", "{'[0, 0, 3, 6, 4, 5, 1, 0, 28, 24, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.173886}", "{'[0, 0, 3, 6, 4, 5, 1, 0, 28, 24, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.176813}", "{'[0, 0, 3, 6, 4, 5, 1, 0, 28, 24, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.171581}", "{'[0, 0, 3, 6, 4, 5, 1, 0, 28, 24, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.171719}", "{'[0, 0, 3, 6, 4, 5, 1, 0, 28, 24, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.17648}", "{'[0, 0, 3, 6, 4, 5, 1, 0, 28, 24, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.171303}", "{'[0, 0, 3, 6, 4, 5, 1, 0, 28, 24, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.172418}", "{'[0, 0, 3, 6, 4, 5, 1, 0, 28, 24, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.177571}", "{'[0, 0, 3, 6, 4, 5, 1, 0, 28, 24, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.173462}", "{'[0, 0, 3, 6, 4, 5, 1, 0, 28, 24, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.173691}", "{'[0, 0, 3, 6, 4, 5, 1, 0, 28, 24, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.173574}", "{'[0, 0, 3, 6, 4, 5, 1, 0, 28, 24, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.171846}", "{'[0, 0, 3, 6, 4, 5, 1, 0, 28, 24, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.172779}", "{'[0, 0, 3, 6, 4, 5, 1, 0, 28, 24, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.173337}", "{'[0, 0, 3, 6, 4, 5, 1, 0, 28, 24, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.172755}", "{'[0, 0, 3, 6, 4, 5, 1, 0, 28, 24, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.17634}", "{'[0, 0, 3, 6, 4, 5, 1, 0, 28, 24, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.176686}", "{'[0, 0, 3, 6, 4, 5, 1, 0, 28, 24, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.174234}", "{'[0, 0, 3, 6, 4, 5, 1, 0, 28, 24, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.177295}", "{'[0, 0, 3, 6, 4, 5, 1, 0, 28, 24, 0, 0, 2, 0, 0, 1, 1, 1]' : 0.176789}"]
returning from 'run': {'[0, 0, 3, 6, 4, 5, 1, 0, 28, 24, 0, 0, 2, 0, 0, 1, 1, 1]': ([0.193123, 0.192844, 0.193406, 0.176075, 0.173392, 0.17691, 0.174235, 0.173786, 0.176195, 0.173601, 0.173886, 0.176813, 0.171581, 0.171719, 0.17648, 0.171303, 0.172418, 0.177571, 0.173462, 0.173691, 0.173574, 0.171846, 0.172779, 0.173337, 0.172755, 0.17634, 0.176686, 0.174234, 0.177295, 0.176789], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 3, 6, 4, 5, 1, 0, 28, 24, 0, 0, 2, 0, 0, 1, 1, 1]': ([0.193123, 0.192844, 0.193406, 0.176075, 0.173392, 0.17691, 0.174235, 0.173786, 0.176195, 0.173601, 0.173886, 0.176813, 0.171581, 0.171719, 0.17648, 0.171303, 0.172418, 0.177571, 0.173462, 0.173691, 0.173574, 0.171846, 0.172779, 0.173337, 0.172755, 0.17634, 0.176686, 0.174234, 0.177295, 0.176789], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	71
        Max loop nest depth: 	5
        Additions: 		7636
        Multiplications: 	3024
        Divisions: 		0
        Logical: 		0
        Reads: 			15512
        Writes: 		3120
        Comparisons:		71
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest25.exe __orio_perftest25.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest25.exe  
Program Test Output: 
{'[6, 1, 6, 0, 6, 6, 0, 0, 9, 25, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.14166}
{'[6, 1, 6, 0, 6, 6, 0, 0, 9, 25, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.146039}
{'[6, 1, 6, 0, 6, 6, 0, 0, 9, 25, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.145897}
{'[6, 1, 6, 0, 6, 6, 0, 0, 9, 25, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.146018}
{'[6, 1, 6, 0, 6, 6, 0, 0, 9, 25, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.146162}
{'[6, 1, 6, 0, 6, 6, 0, 0, 9, 25, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.145933}
{'[6, 1, 6, 0, 6, 6, 0, 0, 9, 25, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.146019}
{'[6, 1, 6, 0, 6, 6, 0, 0, 9, 25, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.146051}
{'[6, 1, 6, 0, 6, 6, 0, 0, 9, 25, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.145939}
{'[6, 1, 6, 0, 6, 6, 0, 0, 9, 25, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.145933}
{'[6, 1, 6, 0, 6, 6, 0, 0, 9, 25, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.145896}
{'[6, 1, 6, 0, 6, 6, 0, 0, 9, 25, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.146472}
{'[6, 1, 6, 0, 6, 6, 0, 0, 9, 25, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.145629}
{'[6, 1, 6, 0, 6, 6, 0, 0, 9, 25, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.14181}
{'[6, 1, 6, 0, 6, 6, 0, 0, 9, 25, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.141785}
{'[6, 1, 6, 0, 6, 6, 0, 0, 9, 25, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.145974}
{'[6, 1, 6, 0, 6, 6, 0, 0, 9, 25, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.145856}
{'[6, 1, 6, 0, 6, 6, 0, 0, 9, 25, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.146064}
{'[6, 1, 6, 0, 6, 6, 0, 0, 9, 25, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.146213}
{'[6, 1, 6, 0, 6, 6, 0, 0, 9, 25, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.146041}
{'[6, 1, 6, 0, 6, 6, 0, 0, 9, 25, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.145861}
{'[6, 1, 6, 0, 6, 6, 0, 0, 9, 25, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.144441}
{'[6, 1, 6, 0, 6, 6, 0, 0, 9, 25, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.145942}
{'[6, 1, 6, 0, 6, 6, 0, 0, 9, 25, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.145961}
{'[6, 1, 6, 0, 6, 6, 0, 0, 9, 25, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.145623}
{'[6, 1, 6, 0, 6, 6, 0, 0, 9, 25, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.146365}
{'[6, 1, 6, 0, 6, 6, 0, 0, 9, 25, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.145991}
{'[6, 1, 6, 0, 6, 6, 0, 0, 9, 25, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.144516}
{'[6, 1, 6, 0, 6, 6, 0, 0, 9, 25, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.14172}
{'[6, 1, 6, 0, 6, 6, 0, 0, 9, 25, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.142921}

out:
 ["{'[6, 1, 6, 0, 6, 6, 0, 0, 9, 25, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.14166}", "{'[6, 1, 6, 0, 6, 6, 0, 0, 9, 25, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.146039}", "{'[6, 1, 6, 0, 6, 6, 0, 0, 9, 25, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.145897}", "{'[6, 1, 6, 0, 6, 6, 0, 0, 9, 25, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.146018}", "{'[6, 1, 6, 0, 6, 6, 0, 0, 9, 25, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.146162}", "{'[6, 1, 6, 0, 6, 6, 0, 0, 9, 25, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.145933}", "{'[6, 1, 6, 0, 6, 6, 0, 0, 9, 25, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.146019}", "{'[6, 1, 6, 0, 6, 6, 0, 0, 9, 25, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.146051}", "{'[6, 1, 6, 0, 6, 6, 0, 0, 9, 25, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.145939}", "{'[6, 1, 6, 0, 6, 6, 0, 0, 9, 25, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.145933}", "{'[6, 1, 6, 0, 6, 6, 0, 0, 9, 25, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.145896}", "{'[6, 1, 6, 0, 6, 6, 0, 0, 9, 25, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.146472}", "{'[6, 1, 6, 0, 6, 6, 0, 0, 9, 25, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.145629}", "{'[6, 1, 6, 0, 6, 6, 0, 0, 9, 25, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.14181}", "{'[6, 1, 6, 0, 6, 6, 0, 0, 9, 25, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.141785}", "{'[6, 1, 6, 0, 6, 6, 0, 0, 9, 25, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.145974}", "{'[6, 1, 6, 0, 6, 6, 0, 0, 9, 25, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.145856}", "{'[6, 1, 6, 0, 6, 6, 0, 0, 9, 25, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.146064}", "{'[6, 1, 6, 0, 6, 6, 0, 0, 9, 25, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.146213}", "{'[6, 1, 6, 0, 6, 6, 0, 0, 9, 25, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.146041}", "{'[6, 1, 6, 0, 6, 6, 0, 0, 9, 25, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.145861}", "{'[6, 1, 6, 0, 6, 6, 0, 0, 9, 25, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.144441}", "{'[6, 1, 6, 0, 6, 6, 0, 0, 9, 25, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.145942}", "{'[6, 1, 6, 0, 6, 6, 0, 0, 9, 25, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.145961}", "{'[6, 1, 6, 0, 6, 6, 0, 0, 9, 25, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.145623}", "{'[6, 1, 6, 0, 6, 6, 0, 0, 9, 25, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.146365}", "{'[6, 1, 6, 0, 6, 6, 0, 0, 9, 25, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.145991}", "{'[6, 1, 6, 0, 6, 6, 0, 0, 9, 25, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.144516}", "{'[6, 1, 6, 0, 6, 6, 0, 0, 9, 25, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.14172}", "{'[6, 1, 6, 0, 6, 6, 0, 0, 9, 25, 0, 21, 0, 0, 2, 1, 1, 0]' : 0.142921}"]
returning from 'run': {'[6, 1, 6, 0, 6, 6, 0, 0, 9, 25, 0, 21, 0, 0, 2, 1, 1, 0]': ([0.14166, 0.146039, 0.145897, 0.146018, 0.146162, 0.145933, 0.146019, 0.146051, 0.145939, 0.145933, 0.145896, 0.146472, 0.145629, 0.14181, 0.141785, 0.145974, 0.145856, 0.146064, 0.146213, 0.146041, 0.145861, 0.144441, 0.145942, 0.145961, 0.145623, 0.146365, 0.145991, 0.144516, 0.14172, 0.142921], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 1, 6, 0, 6, 6, 0, 0, 9, 25, 0, 21, 0, 0, 2, 1, 1, 0]': ([0.14166, 0.146039, 0.145897, 0.146018, 0.146162, 0.145933, 0.146019, 0.146051, 0.145939, 0.145933, 0.145896, 0.146472, 0.145629, 0.14181, 0.141785, 0.145974, 0.145856, 0.146064, 0.146213, 0.146041, 0.145861, 0.144441, 0.145942, 0.145961, 0.145623, 0.146365, 0.145991, 0.144516, 0.14172, 0.142921], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	88
        Max loop nest depth: 	5
        Additions: 		9485
        Multiplications: 	2574
        Divisions: 		0
        Logical: 		0
        Reads: 			14510
        Writes: 		1567
        Comparisons:		88
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest26.exe __orio_perftest26.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest26.exe  
Program Test Output: 
{'[1, 0, 4, 0, 1, 3, 0, 1, 3, 29, 23, 0, 1, 0, 1, 0, 1, 0]' : 0.124756}
{'[1, 0, 4, 0, 1, 3, 0, 1, 3, 29, 23, 0, 1, 0, 1, 0, 1, 0]' : 0.127881}
{'[1, 0, 4, 0, 1, 3, 0, 1, 3, 29, 23, 0, 1, 0, 1, 0, 1, 0]' : 0.127544}
{'[1, 0, 4, 0, 1, 3, 0, 1, 3, 29, 23, 0, 1, 0, 1, 0, 1, 0]' : 0.127674}
{'[1, 0, 4, 0, 1, 3, 0, 1, 3, 29, 23, 0, 1, 0, 1, 0, 1, 0]' : 0.127803}
{'[1, 0, 4, 0, 1, 3, 0, 1, 3, 29, 23, 0, 1, 0, 1, 0, 1, 0]' : 0.127886}
{'[1, 0, 4, 0, 1, 3, 0, 1, 3, 29, 23, 0, 1, 0, 1, 0, 1, 0]' : 0.12756}
{'[1, 0, 4, 0, 1, 3, 0, 1, 3, 29, 23, 0, 1, 0, 1, 0, 1, 0]' : 0.126213}
{'[1, 0, 4, 0, 1, 3, 0, 1, 3, 29, 23, 0, 1, 0, 1, 0, 1, 0]' : 0.126888}
{'[1, 0, 4, 0, 1, 3, 0, 1, 3, 29, 23, 0, 1, 0, 1, 0, 1, 0]' : 0.127977}
{'[1, 0, 4, 0, 1, 3, 0, 1, 3, 29, 23, 0, 1, 0, 1, 0, 1, 0]' : 0.127586}
{'[1, 0, 4, 0, 1, 3, 0, 1, 3, 29, 23, 0, 1, 0, 1, 0, 1, 0]' : 0.127905}
{'[1, 0, 4, 0, 1, 3, 0, 1, 3, 29, 23, 0, 1, 0, 1, 0, 1, 0]' : 0.127802}
{'[1, 0, 4, 0, 1, 3, 0, 1, 3, 29, 23, 0, 1, 0, 1, 0, 1, 0]' : 0.127931}
{'[1, 0, 4, 0, 1, 3, 0, 1, 3, 29, 23, 0, 1, 0, 1, 0, 1, 0]' : 0.127585}
{'[1, 0, 4, 0, 1, 3, 0, 1, 3, 29, 23, 0, 1, 0, 1, 0, 1, 0]' : 0.125661}
{'[1, 0, 4, 0, 1, 3, 0, 1, 3, 29, 23, 0, 1, 0, 1, 0, 1, 0]' : 0.127502}
{'[1, 0, 4, 0, 1, 3, 0, 1, 3, 29, 23, 0, 1, 0, 1, 0, 1, 0]' : 0.127906}
{'[1, 0, 4, 0, 1, 3, 0, 1, 3, 29, 23, 0, 1, 0, 1, 0, 1, 0]' : 0.12755}
{'[1, 0, 4, 0, 1, 3, 0, 1, 3, 29, 23, 0, 1, 0, 1, 0, 1, 0]' : 0.127689}
{'[1, 0, 4, 0, 1, 3, 0, 1, 3, 29, 23, 0, 1, 0, 1, 0, 1, 0]' : 0.127793}
{'[1, 0, 4, 0, 1, 3, 0, 1, 3, 29, 23, 0, 1, 0, 1, 0, 1, 0]' : 0.127886}
{'[1, 0, 4, 0, 1, 3, 0, 1, 3, 29, 23, 0, 1, 0, 1, 0, 1, 0]' : 0.127664}
{'[1, 0, 4, 0, 1, 3, 0, 1, 3, 29, 23, 0, 1, 0, 1, 0, 1, 0]' : 0.125302}
{'[1, 0, 4, 0, 1, 3, 0, 1, 3, 29, 23, 0, 1, 0, 1, 0, 1, 0]' : 0.12781}
{'[1, 0, 4, 0, 1, 3, 0, 1, 3, 29, 23, 0, 1, 0, 1, 0, 1, 0]' : 0.127902}
{'[1, 0, 4, 0, 1, 3, 0, 1, 3, 29, 23, 0, 1, 0, 1, 0, 1, 0]' : 0.12776}
{'[1, 0, 4, 0, 1, 3, 0, 1, 3, 29, 23, 0, 1, 0, 1, 0, 1, 0]' : 0.127716}
{'[1, 0, 4, 0, 1, 3, 0, 1, 3, 29, 23, 0, 1, 0, 1, 0, 1, 0]' : 0.127876}
{'[1, 0, 4, 0, 1, 3, 0, 1, 3, 29, 23, 0, 1, 0, 1, 0, 1, 0]' : 0.127905}

out:
 ["{'[1, 0, 4, 0, 1, 3, 0, 1, 3, 29, 23, 0, 1, 0, 1, 0, 1, 0]' : 0.124756}", "{'[1, 0, 4, 0, 1, 3, 0, 1, 3, 29, 23, 0, 1, 0, 1, 0, 1, 0]' : 0.127881}", "{'[1, 0, 4, 0, 1, 3, 0, 1, 3, 29, 23, 0, 1, 0, 1, 0, 1, 0]' : 0.127544}", "{'[1, 0, 4, 0, 1, 3, 0, 1, 3, 29, 23, 0, 1, 0, 1, 0, 1, 0]' : 0.127674}", "{'[1, 0, 4, 0, 1, 3, 0, 1, 3, 29, 23, 0, 1, 0, 1, 0, 1, 0]' : 0.127803}", "{'[1, 0, 4, 0, 1, 3, 0, 1, 3, 29, 23, 0, 1, 0, 1, 0, 1, 0]' : 0.127886}", "{'[1, 0, 4, 0, 1, 3, 0, 1, 3, 29, 23, 0, 1, 0, 1, 0, 1, 0]' : 0.12756}", "{'[1, 0, 4, 0, 1, 3, 0, 1, 3, 29, 23, 0, 1, 0, 1, 0, 1, 0]' : 0.126213}", "{'[1, 0, 4, 0, 1, 3, 0, 1, 3, 29, 23, 0, 1, 0, 1, 0, 1, 0]' : 0.126888}", "{'[1, 0, 4, 0, 1, 3, 0, 1, 3, 29, 23, 0, 1, 0, 1, 0, 1, 0]' : 0.127977}", "{'[1, 0, 4, 0, 1, 3, 0, 1, 3, 29, 23, 0, 1, 0, 1, 0, 1, 0]' : 0.127586}", "{'[1, 0, 4, 0, 1, 3, 0, 1, 3, 29, 23, 0, 1, 0, 1, 0, 1, 0]' : 0.127905}", "{'[1, 0, 4, 0, 1, 3, 0, 1, 3, 29, 23, 0, 1, 0, 1, 0, 1, 0]' : 0.127802}", "{'[1, 0, 4, 0, 1, 3, 0, 1, 3, 29, 23, 0, 1, 0, 1, 0, 1, 0]' : 0.127931}", "{'[1, 0, 4, 0, 1, 3, 0, 1, 3, 29, 23, 0, 1, 0, 1, 0, 1, 0]' : 0.127585}", "{'[1, 0, 4, 0, 1, 3, 0, 1, 3, 29, 23, 0, 1, 0, 1, 0, 1, 0]' : 0.125661}", "{'[1, 0, 4, 0, 1, 3, 0, 1, 3, 29, 23, 0, 1, 0, 1, 0, 1, 0]' : 0.127502}", "{'[1, 0, 4, 0, 1, 3, 0, 1, 3, 29, 23, 0, 1, 0, 1, 0, 1, 0]' : 0.127906}", "{'[1, 0, 4, 0, 1, 3, 0, 1, 3, 29, 23, 0, 1, 0, 1, 0, 1, 0]' : 0.12755}", "{'[1, 0, 4, 0, 1, 3, 0, 1, 3, 29, 23, 0, 1, 0, 1, 0, 1, 0]' : 0.127689}", "{'[1, 0, 4, 0, 1, 3, 0, 1, 3, 29, 23, 0, 1, 0, 1, 0, 1, 0]' : 0.127793}", "{'[1, 0, 4, 0, 1, 3, 0, 1, 3, 29, 23, 0, 1, 0, 1, 0, 1, 0]' : 0.127886}", "{'[1, 0, 4, 0, 1, 3, 0, 1, 3, 29, 23, 0, 1, 0, 1, 0, 1, 0]' : 0.127664}", "{'[1, 0, 4, 0, 1, 3, 0, 1, 3, 29, 23, 0, 1, 0, 1, 0, 1, 0]' : 0.125302}", "{'[1, 0, 4, 0, 1, 3, 0, 1, 3, 29, 23, 0, 1, 0, 1, 0, 1, 0]' : 0.12781}", "{'[1, 0, 4, 0, 1, 3, 0, 1, 3, 29, 23, 0, 1, 0, 1, 0, 1, 0]' : 0.127902}", "{'[1, 0, 4, 0, 1, 3, 0, 1, 3, 29, 23, 0, 1, 0, 1, 0, 1, 0]' : 0.12776}", "{'[1, 0, 4, 0, 1, 3, 0, 1, 3, 29, 23, 0, 1, 0, 1, 0, 1, 0]' : 0.127716}", "{'[1, 0, 4, 0, 1, 3, 0, 1, 3, 29, 23, 0, 1, 0, 1, 0, 1, 0]' : 0.127876}", "{'[1, 0, 4, 0, 1, 3, 0, 1, 3, 29, 23, 0, 1, 0, 1, 0, 1, 0]' : 0.127905}"]
returning from 'run': {'[1, 0, 4, 0, 1, 3, 0, 1, 3, 29, 23, 0, 1, 0, 1, 0, 1, 0]': ([0.124756, 0.127881, 0.127544, 0.127674, 0.127803, 0.127886, 0.12756, 0.126213, 0.126888, 0.127977, 0.127586, 0.127905, 0.127802, 0.127931, 0.127585, 0.125661, 0.127502, 0.127906, 0.12755, 0.127689, 0.127793, 0.127886, 0.127664, 0.125302, 0.12781, 0.127902, 0.12776, 0.127716, 0.127876, 0.127905], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 4, 0, 1, 3, 0, 1, 3, 29, 23, 0, 1, 0, 1, 0, 1, 0]': ([0.124756, 0.127881, 0.127544, 0.127674, 0.127803, 0.127886, 0.12756, 0.126213, 0.126888, 0.127977, 0.127586, 0.127905, 0.127802, 0.127931, 0.127585, 0.125661, 0.127502, 0.127906, 0.12755, 0.127689, 0.127793, 0.127886, 0.127664, 0.125302, 0.12781, 0.127902, 0.12776, 0.127716, 0.127876, 0.127905], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	63
        Max loop nest depth: 	5
        Additions: 		4873
        Multiplications: 	1160
        Divisions: 		0
        Logical: 		0
        Reads: 			7321
        Writes: 		765
        Comparisons:		63
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest27.exe __orio_perftest27.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest27.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest27.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest27.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest27.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	5
        Additions: 		527
        Multiplications: 	234
        Divisions: 		0
        Logical: 		0
        Reads: 			1149
        Writes: 		227
        Comparisons:		18
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest28.exe __orio_perftest28.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest28.exe  
Program Test Output: 
{'[1, 0, 4, 5, 6, 0, 0, 0, 2, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.107655}
{'[1, 0, 4, 5, 6, 0, 0, 0, 2, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.107418}
{'[1, 0, 4, 5, 6, 0, 0, 0, 2, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.107502}
{'[1, 0, 4, 5, 6, 0, 0, 0, 2, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.107469}
{'[1, 0, 4, 5, 6, 0, 0, 0, 2, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0995901}
{'[1, 0, 4, 5, 6, 0, 0, 0, 2, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.094943}
{'[1, 0, 4, 5, 6, 0, 0, 0, 2, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0947659}
{'[1, 0, 4, 5, 6, 0, 0, 0, 2, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0949061}
{'[1, 0, 4, 5, 6, 0, 0, 0, 2, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0948629}
{'[1, 0, 4, 5, 6, 0, 0, 0, 2, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.094856}
{'[1, 0, 4, 5, 6, 0, 0, 0, 2, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.094846}
{'[1, 0, 4, 5, 6, 0, 0, 0, 2, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0949309}
{'[1, 0, 4, 5, 6, 0, 0, 0, 2, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0951121}
{'[1, 0, 4, 5, 6, 0, 0, 0, 2, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.094857}
{'[1, 0, 4, 5, 6, 0, 0, 0, 2, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0949399}
{'[1, 0, 4, 5, 6, 0, 0, 0, 2, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0948839}
{'[1, 0, 4, 5, 6, 0, 0, 0, 2, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.095232}
{'[1, 0, 4, 5, 6, 0, 0, 0, 2, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.095227}
{'[1, 0, 4, 5, 6, 0, 0, 0, 2, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0948291}
{'[1, 0, 4, 5, 6, 0, 0, 0, 2, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.094847}
{'[1, 0, 4, 5, 6, 0, 0, 0, 2, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.094939}
{'[1, 0, 4, 5, 6, 0, 0, 0, 2, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.094846}
{'[1, 0, 4, 5, 6, 0, 0, 0, 2, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0948269}
{'[1, 0, 4, 5, 6, 0, 0, 0, 2, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.095027}
{'[1, 0, 4, 5, 6, 0, 0, 0, 2, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0950749}
{'[1, 0, 4, 5, 6, 0, 0, 0, 2, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0948839}
{'[1, 0, 4, 5, 6, 0, 0, 0, 2, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.094887}
{'[1, 0, 4, 5, 6, 0, 0, 0, 2, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0948961}
{'[1, 0, 4, 5, 6, 0, 0, 0, 2, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.095042}
{'[1, 0, 4, 5, 6, 0, 0, 0, 2, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0948961}

out:
 ["{'[1, 0, 4, 5, 6, 0, 0, 0, 2, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.107655}", "{'[1, 0, 4, 5, 6, 0, 0, 0, 2, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.107418}", "{'[1, 0, 4, 5, 6, 0, 0, 0, 2, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.107502}", "{'[1, 0, 4, 5, 6, 0, 0, 0, 2, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.107469}", "{'[1, 0, 4, 5, 6, 0, 0, 0, 2, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0995901}", "{'[1, 0, 4, 5, 6, 0, 0, 0, 2, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.094943}", "{'[1, 0, 4, 5, 6, 0, 0, 0, 2, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0947659}", "{'[1, 0, 4, 5, 6, 0, 0, 0, 2, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0949061}", "{'[1, 0, 4, 5, 6, 0, 0, 0, 2, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0948629}", "{'[1, 0, 4, 5, 6, 0, 0, 0, 2, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.094856}", "{'[1, 0, 4, 5, 6, 0, 0, 0, 2, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.094846}", "{'[1, 0, 4, 5, 6, 0, 0, 0, 2, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0949309}", "{'[1, 0, 4, 5, 6, 0, 0, 0, 2, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0951121}", "{'[1, 0, 4, 5, 6, 0, 0, 0, 2, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.094857}", "{'[1, 0, 4, 5, 6, 0, 0, 0, 2, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0949399}", "{'[1, 0, 4, 5, 6, 0, 0, 0, 2, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0948839}", "{'[1, 0, 4, 5, 6, 0, 0, 0, 2, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.095232}", "{'[1, 0, 4, 5, 6, 0, 0, 0, 2, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.095227}", "{'[1, 0, 4, 5, 6, 0, 0, 0, 2, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0948291}", "{'[1, 0, 4, 5, 6, 0, 0, 0, 2, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.094847}", "{'[1, 0, 4, 5, 6, 0, 0, 0, 2, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.094939}", "{'[1, 0, 4, 5, 6, 0, 0, 0, 2, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.094846}", "{'[1, 0, 4, 5, 6, 0, 0, 0, 2, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0948269}", "{'[1, 0, 4, 5, 6, 0, 0, 0, 2, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.095027}", "{'[1, 0, 4, 5, 6, 0, 0, 0, 2, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0950749}", "{'[1, 0, 4, 5, 6, 0, 0, 0, 2, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0948839}", "{'[1, 0, 4, 5, 6, 0, 0, 0, 2, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.094887}", "{'[1, 0, 4, 5, 6, 0, 0, 0, 2, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0948961}", "{'[1, 0, 4, 5, 6, 0, 0, 0, 2, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.095042}", "{'[1, 0, 4, 5, 6, 0, 0, 0, 2, 0, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0948961}"]
returning from 'run': {'[1, 0, 4, 5, 6, 0, 0, 0, 2, 0, 2, 0, 1, 0, 1, 1, 0, 1]': ([0.107655, 0.107418, 0.107502, 0.107469, 0.0995901, 0.094943, 0.0947659, 0.0949061, 0.0948629, 0.094856, 0.094846, 0.0949309, 0.0951121, 0.094857, 0.0949399, 0.0948839, 0.095232, 0.095227, 0.0948291, 0.094847, 0.094939, 0.094846, 0.0948269, 0.095027, 0.0950749, 0.0948839, 0.094887, 0.0948961, 0.095042, 0.0948961], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 4, 5, 6, 0, 0, 0, 2, 0, 2, 0, 1, 0, 1, 1, 0, 1]': ([0.107655, 0.107418, 0.107502, 0.107469, 0.0995901, 0.094943, 0.0947659, 0.0949061, 0.0948629, 0.094856, 0.094846, 0.0949309, 0.0951121, 0.094857, 0.0949399, 0.0948839, 0.095232, 0.095227, 0.0948291, 0.094847, 0.094939, 0.094846, 0.0948269, 0.095027, 0.0950749, 0.0948839, 0.094887, 0.0948961, 0.095042, 0.0948961], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	5
        Additions: 		189
        Multiplications: 	60
        Divisions: 		0
        Logical: 		0
        Reads: 			445
        Writes: 		115
        Comparisons:		16
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest29.exe __orio_perftest29.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest29.exe  
Program Test Output: 
{'[3, 6, 0, 5, 4, 4, 0, 0, 26, 1, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.141441}
{'[3, 6, 0, 5, 4, 4, 0, 0, 26, 1, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.14138}
{'[3, 6, 0, 5, 4, 4, 0, 0, 26, 1, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.138629}
{'[3, 6, 0, 5, 4, 4, 0, 0, 26, 1, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.124224}
{'[3, 6, 0, 5, 4, 4, 0, 0, 26, 1, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.126391}
{'[3, 6, 0, 5, 4, 4, 0, 0, 26, 1, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.126353}
{'[3, 6, 0, 5, 4, 4, 0, 0, 26, 1, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.126656}
{'[3, 6, 0, 5, 4, 4, 0, 0, 26, 1, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.126424}
{'[3, 6, 0, 5, 4, 4, 0, 0, 26, 1, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.126361}
{'[3, 6, 0, 5, 4, 4, 0, 0, 26, 1, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.126468}
{'[3, 6, 0, 5, 4, 4, 0, 0, 26, 1, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.126345}
{'[3, 6, 0, 5, 4, 4, 0, 0, 26, 1, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.124245}
{'[3, 6, 0, 5, 4, 4, 0, 0, 26, 1, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.126418}
{'[3, 6, 0, 5, 4, 4, 0, 0, 26, 1, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.126339}
{'[3, 6, 0, 5, 4, 4, 0, 0, 26, 1, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.126375}
{'[3, 6, 0, 5, 4, 4, 0, 0, 26, 1, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.126427}
{'[3, 6, 0, 5, 4, 4, 0, 0, 26, 1, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.126363}
{'[3, 6, 0, 5, 4, 4, 0, 0, 26, 1, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.126378}
{'[3, 6, 0, 5, 4, 4, 0, 0, 26, 1, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.126389}
{'[3, 6, 0, 5, 4, 4, 0, 0, 26, 1, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.126398}
{'[3, 6, 0, 5, 4, 4, 0, 0, 26, 1, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.126395}
{'[3, 6, 0, 5, 4, 4, 0, 0, 26, 1, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.126387}
{'[3, 6, 0, 5, 4, 4, 0, 0, 26, 1, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.126578}
{'[3, 6, 0, 5, 4, 4, 0, 0, 26, 1, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.126397}
{'[3, 6, 0, 5, 4, 4, 0, 0, 26, 1, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.126323}
{'[3, 6, 0, 5, 4, 4, 0, 0, 26, 1, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.126365}
{'[3, 6, 0, 5, 4, 4, 0, 0, 26, 1, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.125827}
{'[3, 6, 0, 5, 4, 4, 0, 0, 26, 1, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.124882}
{'[3, 6, 0, 5, 4, 4, 0, 0, 26, 1, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.126339}
{'[3, 6, 0, 5, 4, 4, 0, 0, 26, 1, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.126422}

out:
 ["{'[3, 6, 0, 5, 4, 4, 0, 0, 26, 1, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.141441}", "{'[3, 6, 0, 5, 4, 4, 0, 0, 26, 1, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.14138}", "{'[3, 6, 0, 5, 4, 4, 0, 0, 26, 1, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.138629}", "{'[3, 6, 0, 5, 4, 4, 0, 0, 26, 1, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.124224}", "{'[3, 6, 0, 5, 4, 4, 0, 0, 26, 1, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.126391}", "{'[3, 6, 0, 5, 4, 4, 0, 0, 26, 1, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.126353}", "{'[3, 6, 0, 5, 4, 4, 0, 0, 26, 1, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.126656}", "{'[3, 6, 0, 5, 4, 4, 0, 0, 26, 1, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.126424}", "{'[3, 6, 0, 5, 4, 4, 0, 0, 26, 1, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.126361}", "{'[3, 6, 0, 5, 4, 4, 0, 0, 26, 1, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.126468}", "{'[3, 6, 0, 5, 4, 4, 0, 0, 26, 1, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.126345}", "{'[3, 6, 0, 5, 4, 4, 0, 0, 26, 1, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.124245}", "{'[3, 6, 0, 5, 4, 4, 0, 0, 26, 1, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.126418}", "{'[3, 6, 0, 5, 4, 4, 0, 0, 26, 1, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.126339}", "{'[3, 6, 0, 5, 4, 4, 0, 0, 26, 1, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.126375}", "{'[3, 6, 0, 5, 4, 4, 0, 0, 26, 1, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.126427}", "{'[3, 6, 0, 5, 4, 4, 0, 0, 26, 1, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.126363}", "{'[3, 6, 0, 5, 4, 4, 0, 0, 26, 1, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.126378}", "{'[3, 6, 0, 5, 4, 4, 0, 0, 26, 1, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.126389}", "{'[3, 6, 0, 5, 4, 4, 0, 0, 26, 1, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.126398}", "{'[3, 6, 0, 5, 4, 4, 0, 0, 26, 1, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.126395}", "{'[3, 6, 0, 5, 4, 4, 0, 0, 26, 1, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.126387}", "{'[3, 6, 0, 5, 4, 4, 0, 0, 26, 1, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.126578}", "{'[3, 6, 0, 5, 4, 4, 0, 0, 26, 1, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.126397}", "{'[3, 6, 0, 5, 4, 4, 0, 0, 26, 1, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.126323}", "{'[3, 6, 0, 5, 4, 4, 0, 0, 26, 1, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.126365}", "{'[3, 6, 0, 5, 4, 4, 0, 0, 26, 1, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.125827}", "{'[3, 6, 0, 5, 4, 4, 0, 0, 26, 1, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.124882}", "{'[3, 6, 0, 5, 4, 4, 0, 0, 26, 1, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.126339}", "{'[3, 6, 0, 5, 4, 4, 0, 0, 26, 1, 0, 0, 0, 1, 0, 1, 1, 0]' : 0.126422}"]
returning from 'run': {'[3, 6, 0, 5, 4, 4, 0, 0, 26, 1, 0, 0, 0, 1, 0, 1, 1, 0]': ([0.141441, 0.14138, 0.138629, 0.124224, 0.126391, 0.126353, 0.126656, 0.126424, 0.126361, 0.126468, 0.126345, 0.124245, 0.126418, 0.126339, 0.126375, 0.126427, 0.126363, 0.126378, 0.126389, 0.126398, 0.126395, 0.126387, 0.126578, 0.126397, 0.126323, 0.126365, 0.125827, 0.124882, 0.126339, 0.126422], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 6, 0, 5, 4, 4, 0, 0, 26, 1, 0, 0, 0, 1, 0, 1, 1, 0]': ([0.141441, 0.14138, 0.138629, 0.124224, 0.126391, 0.126353, 0.126656, 0.126424, 0.126361, 0.126468, 0.126345, 0.124245, 0.126418, 0.126339, 0.126375, 0.126427, 0.126363, 0.126378, 0.126389, 0.126398, 0.126395, 0.126387, 0.126578, 0.126397, 0.126323, 0.126365, 0.125827, 0.124882, 0.126339, 0.126422], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	4
        Additions: 		148
        Multiplications: 	48
        Divisions: 		0
        Logical: 		0
        Reads: 			354
        Writes: 		73
        Comparisons:		8
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest30.exe __orio_perftest30.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest30.exe  
Program Test Output: 
{'[4, 0, 0, 4, 0, 0, 1, 0, 27, 0, 14, 29, 0, 0, 1, 0, 1, 0]' : 0.177453}
{'[4, 0, 0, 4, 0, 0, 1, 0, 27, 0, 14, 29, 0, 0, 1, 0, 1, 0]' : 0.177264}
{'[4, 0, 0, 4, 0, 0, 1, 0, 27, 0, 14, 29, 0, 0, 1, 0, 1, 0]' : 0.166627}
{'[4, 0, 0, 4, 0, 0, 1, 0, 27, 0, 14, 29, 0, 0, 1, 0, 1, 0]' : 0.149881}
{'[4, 0, 0, 4, 0, 0, 1, 0, 27, 0, 14, 29, 0, 0, 1, 0, 1, 0]' : 0.149075}
{'[4, 0, 0, 4, 0, 0, 1, 0, 27, 0, 14, 29, 0, 0, 1, 0, 1, 0]' : 0.149646}
{'[4, 0, 0, 4, 0, 0, 1, 0, 27, 0, 14, 29, 0, 0, 1, 0, 1, 0]' : 0.148914}
{'[4, 0, 0, 4, 0, 0, 1, 0, 27, 0, 14, 29, 0, 0, 1, 0, 1, 0]' : 0.14882}
{'[4, 0, 0, 4, 0, 0, 1, 0, 27, 0, 14, 29, 0, 0, 1, 0, 1, 0]' : 0.14912}
{'[4, 0, 0, 4, 0, 0, 1, 0, 27, 0, 14, 29, 0, 0, 1, 0, 1, 0]' : 0.152498}
{'[4, 0, 0, 4, 0, 0, 1, 0, 27, 0, 14, 29, 0, 0, 1, 0, 1, 0]' : 0.153388}
{'[4, 0, 0, 4, 0, 0, 1, 0, 27, 0, 14, 29, 0, 0, 1, 0, 1, 0]' : 0.15358}
{'[4, 0, 0, 4, 0, 0, 1, 0, 27, 0, 14, 29, 0, 0, 1, 0, 1, 0]' : 0.153439}
{'[4, 0, 0, 4, 0, 0, 1, 0, 27, 0, 14, 29, 0, 0, 1, 0, 1, 0]' : 0.153532}
{'[4, 0, 0, 4, 0, 0, 1, 0, 27, 0, 14, 29, 0, 0, 1, 0, 1, 0]' : 0.151626}
{'[4, 0, 0, 4, 0, 0, 1, 0, 27, 0, 14, 29, 0, 0, 1, 0, 1, 0]' : 0.150301}
{'[4, 0, 0, 4, 0, 0, 1, 0, 27, 0, 14, 29, 0, 0, 1, 0, 1, 0]' : 0.153309}
{'[4, 0, 0, 4, 0, 0, 1, 0, 27, 0, 14, 29, 0, 0, 1, 0, 1, 0]' : 0.153338}
{'[4, 0, 0, 4, 0, 0, 1, 0, 27, 0, 14, 29, 0, 0, 1, 0, 1, 0]' : 0.153939}
{'[4, 0, 0, 4, 0, 0, 1, 0, 27, 0, 14, 29, 0, 0, 1, 0, 1, 0]' : 0.153343}
{'[4, 0, 0, 4, 0, 0, 1, 0, 27, 0, 14, 29, 0, 0, 1, 0, 1, 0]' : 0.153286}
{'[4, 0, 0, 4, 0, 0, 1, 0, 27, 0, 14, 29, 0, 0, 1, 0, 1, 0]' : 0.152123}
{'[4, 0, 0, 4, 0, 0, 1, 0, 27, 0, 14, 29, 0, 0, 1, 0, 1, 0]' : 0.15227}
{'[4, 0, 0, 4, 0, 0, 1, 0, 27, 0, 14, 29, 0, 0, 1, 0, 1, 0]' : 0.153391}
{'[4, 0, 0, 4, 0, 0, 1, 0, 27, 0, 14, 29, 0, 0, 1, 0, 1, 0]' : 0.153328}
{'[4, 0, 0, 4, 0, 0, 1, 0, 27, 0, 14, 29, 0, 0, 1, 0, 1, 0]' : 0.151945}
{'[4, 0, 0, 4, 0, 0, 1, 0, 27, 0, 14, 29, 0, 0, 1, 0, 1, 0]' : 0.153478}
{'[4, 0, 0, 4, 0, 0, 1, 0, 27, 0, 14, 29, 0, 0, 1, 0, 1, 0]' : 0.153257}
{'[4, 0, 0, 4, 0, 0, 1, 0, 27, 0, 14, 29, 0, 0, 1, 0, 1, 0]' : 0.151263}
{'[4, 0, 0, 4, 0, 0, 1, 0, 27, 0, 14, 29, 0, 0, 1, 0, 1, 0]' : 0.153384}

out:
 ["{'[4, 0, 0, 4, 0, 0, 1, 0, 27, 0, 14, 29, 0, 0, 1, 0, 1, 0]' : 0.177453}", "{'[4, 0, 0, 4, 0, 0, 1, 0, 27, 0, 14, 29, 0, 0, 1, 0, 1, 0]' : 0.177264}", "{'[4, 0, 0, 4, 0, 0, 1, 0, 27, 0, 14, 29, 0, 0, 1, 0, 1, 0]' : 0.166627}", "{'[4, 0, 0, 4, 0, 0, 1, 0, 27, 0, 14, 29, 0, 0, 1, 0, 1, 0]' : 0.149881}", "{'[4, 0, 0, 4, 0, 0, 1, 0, 27, 0, 14, 29, 0, 0, 1, 0, 1, 0]' : 0.149075}", "{'[4, 0, 0, 4, 0, 0, 1, 0, 27, 0, 14, 29, 0, 0, 1, 0, 1, 0]' : 0.149646}", "{'[4, 0, 0, 4, 0, 0, 1, 0, 27, 0, 14, 29, 0, 0, 1, 0, 1, 0]' : 0.148914}", "{'[4, 0, 0, 4, 0, 0, 1, 0, 27, 0, 14, 29, 0, 0, 1, 0, 1, 0]' : 0.14882}", "{'[4, 0, 0, 4, 0, 0, 1, 0, 27, 0, 14, 29, 0, 0, 1, 0, 1, 0]' : 0.14912}", "{'[4, 0, 0, 4, 0, 0, 1, 0, 27, 0, 14, 29, 0, 0, 1, 0, 1, 0]' : 0.152498}", "{'[4, 0, 0, 4, 0, 0, 1, 0, 27, 0, 14, 29, 0, 0, 1, 0, 1, 0]' : 0.153388}", "{'[4, 0, 0, 4, 0, 0, 1, 0, 27, 0, 14, 29, 0, 0, 1, 0, 1, 0]' : 0.15358}", "{'[4, 0, 0, 4, 0, 0, 1, 0, 27, 0, 14, 29, 0, 0, 1, 0, 1, 0]' : 0.153439}", "{'[4, 0, 0, 4, 0, 0, 1, 0, 27, 0, 14, 29, 0, 0, 1, 0, 1, 0]' : 0.153532}", "{'[4, 0, 0, 4, 0, 0, 1, 0, 27, 0, 14, 29, 0, 0, 1, 0, 1, 0]' : 0.151626}", "{'[4, 0, 0, 4, 0, 0, 1, 0, 27, 0, 14, 29, 0, 0, 1, 0, 1, 0]' : 0.150301}", "{'[4, 0, 0, 4, 0, 0, 1, 0, 27, 0, 14, 29, 0, 0, 1, 0, 1, 0]' : 0.153309}", "{'[4, 0, 0, 4, 0, 0, 1, 0, 27, 0, 14, 29, 0, 0, 1, 0, 1, 0]' : 0.153338}", "{'[4, 0, 0, 4, 0, 0, 1, 0, 27, 0, 14, 29, 0, 0, 1, 0, 1, 0]' : 0.153939}", "{'[4, 0, 0, 4, 0, 0, 1, 0, 27, 0, 14, 29, 0, 0, 1, 0, 1, 0]' : 0.153343}", "{'[4, 0, 0, 4, 0, 0, 1, 0, 27, 0, 14, 29, 0, 0, 1, 0, 1, 0]' : 0.153286}", "{'[4, 0, 0, 4, 0, 0, 1, 0, 27, 0, 14, 29, 0, 0, 1, 0, 1, 0]' : 0.152123}", "{'[4, 0, 0, 4, 0, 0, 1, 0, 27, 0, 14, 29, 0, 0, 1, 0, 1, 0]' : 0.15227}", "{'[4, 0, 0, 4, 0, 0, 1, 0, 27, 0, 14, 29, 0, 0, 1, 0, 1, 0]' : 0.153391}", "{'[4, 0, 0, 4, 0, 0, 1, 0, 27, 0, 14, 29, 0, 0, 1, 0, 1, 0]' : 0.153328}", "{'[4, 0, 0, 4, 0, 0, 1, 0, 27, 0, 14, 29, 0, 0, 1, 0, 1, 0]' : 0.151945}", "{'[4, 0, 0, 4, 0, 0, 1, 0, 27, 0, 14, 29, 0, 0, 1, 0, 1, 0]' : 0.153478}", "{'[4, 0, 0, 4, 0, 0, 1, 0, 27, 0, 14, 29, 0, 0, 1, 0, 1, 0]' : 0.153257}", "{'[4, 0, 0, 4, 0, 0, 1, 0, 27, 0, 14, 29, 0, 0, 1, 0, 1, 0]' : 0.151263}", "{'[4, 0, 0, 4, 0, 0, 1, 0, 27, 0, 14, 29, 0, 0, 1, 0, 1, 0]' : 0.153384}"]
returning from 'run': {'[4, 0, 0, 4, 0, 0, 1, 0, 27, 0, 14, 29, 0, 0, 1, 0, 1, 0]': ([0.177453, 0.177264, 0.166627, 0.149881, 0.149075, 0.149646, 0.148914, 0.14882, 0.14912, 0.152498, 0.153388, 0.15358, 0.153439, 0.153532, 0.151626, 0.150301, 0.153309, 0.153338, 0.153939, 0.153343, 0.153286, 0.152123, 0.15227, 0.153391, 0.153328, 0.151945, 0.153478, 0.153257, 0.151263, 0.153384], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 0, 0, 4, 0, 0, 1, 0, 27, 0, 14, 29, 0, 0, 1, 0, 1, 0]': ([0.177453, 0.177264, 0.166627, 0.149881, 0.149075, 0.149646, 0.148914, 0.14882, 0.14912, 0.152498, 0.153388, 0.15358, 0.153439, 0.153532, 0.151626, 0.150301, 0.153309, 0.153338, 0.153939, 0.153343, 0.153286, 0.152123, 0.15227, 0.153391, 0.153328, 0.151945, 0.153478, 0.153257, 0.151263, 0.153384], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	5
        Additions: 		5109
        Multiplications: 	2508
        Divisions: 		0
        Logical: 		0
        Reads: 			9587
        Writes: 		1527
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest31.exe __orio_perftest31.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest31.exe  
Program Test Output: 
{'[6, 6, 1, 0, 0, 6, 0, 0, 19, 0, 5, 29, 2, 0, 0, 1, 1, 1]' : 0.177796}
{'[6, 6, 1, 0, 0, 6, 0, 0, 19, 0, 5, 29, 2, 0, 0, 1, 1, 1]' : 0.176654}
{'[6, 6, 1, 0, 0, 6, 0, 0, 19, 0, 5, 29, 2, 0, 0, 1, 1, 1]' : 0.177127}
{'[6, 6, 1, 0, 0, 6, 0, 0, 19, 0, 5, 29, 2, 0, 0, 1, 1, 1]' : 0.177684}
{'[6, 6, 1, 0, 0, 6, 0, 0, 19, 0, 5, 29, 2, 0, 0, 1, 1, 1]' : 0.176922}
{'[6, 6, 1, 0, 0, 6, 0, 0, 19, 0, 5, 29, 2, 0, 0, 1, 1, 1]' : 0.178292}
{'[6, 6, 1, 0, 0, 6, 0, 0, 19, 0, 5, 29, 2, 0, 0, 1, 1, 1]' : 0.176761}
{'[6, 6, 1, 0, 0, 6, 0, 0, 19, 0, 5, 29, 2, 0, 0, 1, 1, 1]' : 0.17659}
{'[6, 6, 1, 0, 0, 6, 0, 0, 19, 0, 5, 29, 2, 0, 0, 1, 1, 1]' : 0.17736}
{'[6, 6, 1, 0, 0, 6, 0, 0, 19, 0, 5, 29, 2, 0, 0, 1, 1, 1]' : 0.176574}
{'[6, 6, 1, 0, 0, 6, 0, 0, 19, 0, 5, 29, 2, 0, 0, 1, 1, 1]' : 0.17658}
{'[6, 6, 1, 0, 0, 6, 0, 0, 19, 0, 5, 29, 2, 0, 0, 1, 1, 1]' : 0.178328}
{'[6, 6, 1, 0, 0, 6, 0, 0, 19, 0, 5, 29, 2, 0, 0, 1, 1, 1]' : 0.177502}
{'[6, 6, 1, 0, 0, 6, 0, 0, 19, 0, 5, 29, 2, 0, 0, 1, 1, 1]' : 0.176873}
{'[6, 6, 1, 0, 0, 6, 0, 0, 19, 0, 5, 29, 2, 0, 0, 1, 1, 1]' : 0.177483}
{'[6, 6, 1, 0, 0, 6, 0, 0, 19, 0, 5, 29, 2, 0, 0, 1, 1, 1]' : 0.176951}
{'[6, 6, 1, 0, 0, 6, 0, 0, 19, 0, 5, 29, 2, 0, 0, 1, 1, 1]' : 0.177483}
{'[6, 6, 1, 0, 0, 6, 0, 0, 19, 0, 5, 29, 2, 0, 0, 1, 1, 1]' : 0.177887}
{'[6, 6, 1, 0, 0, 6, 0, 0, 19, 0, 5, 29, 2, 0, 0, 1, 1, 1]' : 0.177102}
{'[6, 6, 1, 0, 0, 6, 0, 0, 19, 0, 5, 29, 2, 0, 0, 1, 1, 1]' : 0.177029}
{'[6, 6, 1, 0, 0, 6, 0, 0, 19, 0, 5, 29, 2, 0, 0, 1, 1, 1]' : 0.177635}
{'[6, 6, 1, 0, 0, 6, 0, 0, 19, 0, 5, 29, 2, 0, 0, 1, 1, 1]' : 0.17647}
{'[6, 6, 1, 0, 0, 6, 0, 0, 19, 0, 5, 29, 2, 0, 0, 1, 1, 1]' : 0.17769}
{'[6, 6, 1, 0, 0, 6, 0, 0, 19, 0, 5, 29, 2, 0, 0, 1, 1, 1]' : 0.176849}
{'[6, 6, 1, 0, 0, 6, 0, 0, 19, 0, 5, 29, 2, 0, 0, 1, 1, 1]' : 0.177013}
{'[6, 6, 1, 0, 0, 6, 0, 0, 19, 0, 5, 29, 2, 0, 0, 1, 1, 1]' : 0.177612}
{'[6, 6, 1, 0, 0, 6, 0, 0, 19, 0, 5, 29, 2, 0, 0, 1, 1, 1]' : 0.17672}
{'[6, 6, 1, 0, 0, 6, 0, 0, 19, 0, 5, 29, 2, 0, 0, 1, 1, 1]' : 0.17705}
{'[6, 6, 1, 0, 0, 6, 0, 0, 19, 0, 5, 29, 2, 0, 0, 1, 1, 1]' : 0.177773}
{'[6, 6, 1, 0, 0, 6, 0, 0, 19, 0, 5, 29, 2, 0, 0, 1, 1, 1]' : 0.176625}

out:
 ["{'[6, 6, 1, 0, 0, 6, 0, 0, 19, 0, 5, 29, 2, 0, 0, 1, 1, 1]' : 0.177796}", "{'[6, 6, 1, 0, 0, 6, 0, 0, 19, 0, 5, 29, 2, 0, 0, 1, 1, 1]' : 0.176654}", "{'[6, 6, 1, 0, 0, 6, 0, 0, 19, 0, 5, 29, 2, 0, 0, 1, 1, 1]' : 0.177127}", "{'[6, 6, 1, 0, 0, 6, 0, 0, 19, 0, 5, 29, 2, 0, 0, 1, 1, 1]' : 0.177684}", "{'[6, 6, 1, 0, 0, 6, 0, 0, 19, 0, 5, 29, 2, 0, 0, 1, 1, 1]' : 0.176922}", "{'[6, 6, 1, 0, 0, 6, 0, 0, 19, 0, 5, 29, 2, 0, 0, 1, 1, 1]' : 0.178292}", "{'[6, 6, 1, 0, 0, 6, 0, 0, 19, 0, 5, 29, 2, 0, 0, 1, 1, 1]' : 0.176761}", "{'[6, 6, 1, 0, 0, 6, 0, 0, 19, 0, 5, 29, 2, 0, 0, 1, 1, 1]' : 0.17659}", "{'[6, 6, 1, 0, 0, 6, 0, 0, 19, 0, 5, 29, 2, 0, 0, 1, 1, 1]' : 0.17736}", "{'[6, 6, 1, 0, 0, 6, 0, 0, 19, 0, 5, 29, 2, 0, 0, 1, 1, 1]' : 0.176574}", "{'[6, 6, 1, 0, 0, 6, 0, 0, 19, 0, 5, 29, 2, 0, 0, 1, 1, 1]' : 0.17658}", "{'[6, 6, 1, 0, 0, 6, 0, 0, 19, 0, 5, 29, 2, 0, 0, 1, 1, 1]' : 0.178328}", "{'[6, 6, 1, 0, 0, 6, 0, 0, 19, 0, 5, 29, 2, 0, 0, 1, 1, 1]' : 0.177502}", "{'[6, 6, 1, 0, 0, 6, 0, 0, 19, 0, 5, 29, 2, 0, 0, 1, 1, 1]' : 0.176873}", "{'[6, 6, 1, 0, 0, 6, 0, 0, 19, 0, 5, 29, 2, 0, 0, 1, 1, 1]' : 0.177483}", "{'[6, 6, 1, 0, 0, 6, 0, 0, 19, 0, 5, 29, 2, 0, 0, 1, 1, 1]' : 0.176951}", "{'[6, 6, 1, 0, 0, 6, 0, 0, 19, 0, 5, 29, 2, 0, 0, 1, 1, 1]' : 0.177483}", "{'[6, 6, 1, 0, 0, 6, 0, 0, 19, 0, 5, 29, 2, 0, 0, 1, 1, 1]' : 0.177887}", "{'[6, 6, 1, 0, 0, 6, 0, 0, 19, 0, 5, 29, 2, 0, 0, 1, 1, 1]' : 0.177102}", "{'[6, 6, 1, 0, 0, 6, 0, 0, 19, 0, 5, 29, 2, 0, 0, 1, 1, 1]' : 0.177029}", "{'[6, 6, 1, 0, 0, 6, 0, 0, 19, 0, 5, 29, 2, 0, 0, 1, 1, 1]' : 0.177635}", "{'[6, 6, 1, 0, 0, 6, 0, 0, 19, 0, 5, 29, 2, 0, 0, 1, 1, 1]' : 0.17647}", "{'[6, 6, 1, 0, 0, 6, 0, 0, 19, 0, 5, 29, 2, 0, 0, 1, 1, 1]' : 0.17769}", "{'[6, 6, 1, 0, 0, 6, 0, 0, 19, 0, 5, 29, 2, 0, 0, 1, 1, 1]' : 0.176849}", "{'[6, 6, 1, 0, 0, 6, 0, 0, 19, 0, 5, 29, 2, 0, 0, 1, 1, 1]' : 0.177013}", "{'[6, 6, 1, 0, 0, 6, 0, 0, 19, 0, 5, 29, 2, 0, 0, 1, 1, 1]' : 0.177612}", "{'[6, 6, 1, 0, 0, 6, 0, 0, 19, 0, 5, 29, 2, 0, 0, 1, 1, 1]' : 0.17672}", "{'[6, 6, 1, 0, 0, 6, 0, 0, 19, 0, 5, 29, 2, 0, 0, 1, 1, 1]' : 0.17705}", "{'[6, 6, 1, 0, 0, 6, 0, 0, 19, 0, 5, 29, 2, 0, 0, 1, 1, 1]' : 0.177773}", "{'[6, 6, 1, 0, 0, 6, 0, 0, 19, 0, 5, 29, 2, 0, 0, 1, 1, 1]' : 0.176625}"]
returning from 'run': {'[6, 6, 1, 0, 0, 6, 0, 0, 19, 0, 5, 29, 2, 0, 0, 1, 1, 1]': ([0.177796, 0.176654, 0.177127, 0.177684, 0.176922, 0.178292, 0.176761, 0.17659, 0.17736, 0.176574, 0.17658, 0.178328, 0.177502, 0.176873, 0.177483, 0.176951, 0.177483, 0.177887, 0.177102, 0.177029, 0.177635, 0.17647, 0.17769, 0.176849, 0.177013, 0.177612, 0.17672, 0.17705, 0.177773, 0.176625], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 1, 0, 0, 6, 0, 0, 19, 0, 5, 29, 2, 0, 0, 1, 1, 1]': ([0.177796, 0.176654, 0.177127, 0.177684, 0.176922, 0.178292, 0.176761, 0.17659, 0.17736, 0.176574, 0.17658, 0.178328, 0.177502, 0.176873, 0.177483, 0.176951, 0.177483, 0.177887, 0.177102, 0.177029, 0.177635, 0.17647, 0.17769, 0.176849, 0.177013, 0.177612, 0.17672, 0.17705, 0.177773, 0.176625], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	132
        Max loop nest depth: 	6
        Additions: 		8292
        Multiplications: 	2204
        Divisions: 		0
        Logical: 		0
        Reads: 			12910
        Writes: 		1563
        Comparisons:		132
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest32.exe __orio_perftest32.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest32.exe  
Program Test Output: 
{'[6, 6, 6, 5, 6, 0, 0, 1, 17, 27, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.182614}
{'[6, 6, 6, 5, 6, 0, 0, 1, 17, 27, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.185987}
{'[6, 6, 6, 5, 6, 0, 0, 1, 17, 27, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.186563}
{'[6, 6, 6, 5, 6, 0, 0, 1, 17, 27, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.18069}
{'[6, 6, 6, 5, 6, 0, 0, 1, 17, 27, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.167615}
{'[6, 6, 6, 5, 6, 0, 0, 1, 17, 27, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.167763}
{'[6, 6, 6, 5, 6, 0, 0, 1, 17, 27, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.167747}
{'[6, 6, 6, 5, 6, 0, 0, 1, 17, 27, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.167765}
{'[6, 6, 6, 5, 6, 0, 0, 1, 17, 27, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.167593}
{'[6, 6, 6, 5, 6, 0, 0, 1, 17, 27, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.168429}
{'[6, 6, 6, 5, 6, 0, 0, 1, 17, 27, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.168389}
{'[6, 6, 6, 5, 6, 0, 0, 1, 17, 27, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.168635}
{'[6, 6, 6, 5, 6, 0, 0, 1, 17, 27, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.168185}
{'[6, 6, 6, 5, 6, 0, 0, 1, 17, 27, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.168405}
{'[6, 6, 6, 5, 6, 0, 0, 1, 17, 27, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.168348}
{'[6, 6, 6, 5, 6, 0, 0, 1, 17, 27, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.168502}
{'[6, 6, 6, 5, 6, 0, 0, 1, 17, 27, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.16836}
{'[6, 6, 6, 5, 6, 0, 0, 1, 17, 27, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.168155}
{'[6, 6, 6, 5, 6, 0, 0, 1, 17, 27, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.168453}
{'[6, 6, 6, 5, 6, 0, 0, 1, 17, 27, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.168552}
{'[6, 6, 6, 5, 6, 0, 0, 1, 17, 27, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.168365}
{'[6, 6, 6, 5, 6, 0, 0, 1, 17, 27, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.168649}
{'[6, 6, 6, 5, 6, 0, 0, 1, 17, 27, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.168282}
{'[6, 6, 6, 5, 6, 0, 0, 1, 17, 27, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.168252}
{'[6, 6, 6, 5, 6, 0, 0, 1, 17, 27, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.1685}
{'[6, 6, 6, 5, 6, 0, 0, 1, 17, 27, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.168414}
{'[6, 6, 6, 5, 6, 0, 0, 1, 17, 27, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.168548}
{'[6, 6, 6, 5, 6, 0, 0, 1, 17, 27, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.168502}
{'[6, 6, 6, 5, 6, 0, 0, 1, 17, 27, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.168489}
{'[6, 6, 6, 5, 6, 0, 0, 1, 17, 27, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.165262}

out:
 ["{'[6, 6, 6, 5, 6, 0, 0, 1, 17, 27, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.182614}", "{'[6, 6, 6, 5, 6, 0, 0, 1, 17, 27, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.185987}", "{'[6, 6, 6, 5, 6, 0, 0, 1, 17, 27, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.186563}", "{'[6, 6, 6, 5, 6, 0, 0, 1, 17, 27, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.18069}", "{'[6, 6, 6, 5, 6, 0, 0, 1, 17, 27, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.167615}", "{'[6, 6, 6, 5, 6, 0, 0, 1, 17, 27, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.167763}", "{'[6, 6, 6, 5, 6, 0, 0, 1, 17, 27, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.167747}", "{'[6, 6, 6, 5, 6, 0, 0, 1, 17, 27, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.167765}", "{'[6, 6, 6, 5, 6, 0, 0, 1, 17, 27, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.167593}", "{'[6, 6, 6, 5, 6, 0, 0, 1, 17, 27, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.168429}", "{'[6, 6, 6, 5, 6, 0, 0, 1, 17, 27, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.168389}", "{'[6, 6, 6, 5, 6, 0, 0, 1, 17, 27, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.168635}", "{'[6, 6, 6, 5, 6, 0, 0, 1, 17, 27, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.168185}", "{'[6, 6, 6, 5, 6, 0, 0, 1, 17, 27, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.168405}", "{'[6, 6, 6, 5, 6, 0, 0, 1, 17, 27, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.168348}", "{'[6, 6, 6, 5, 6, 0, 0, 1, 17, 27, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.168502}", "{'[6, 6, 6, 5, 6, 0, 0, 1, 17, 27, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.16836}", "{'[6, 6, 6, 5, 6, 0, 0, 1, 17, 27, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.168155}", "{'[6, 6, 6, 5, 6, 0, 0, 1, 17, 27, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.168453}", "{'[6, 6, 6, 5, 6, 0, 0, 1, 17, 27, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.168552}", "{'[6, 6, 6, 5, 6, 0, 0, 1, 17, 27, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.168365}", "{'[6, 6, 6, 5, 6, 0, 0, 1, 17, 27, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.168649}", "{'[6, 6, 6, 5, 6, 0, 0, 1, 17, 27, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.168282}", "{'[6, 6, 6, 5, 6, 0, 0, 1, 17, 27, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.168252}", "{'[6, 6, 6, 5, 6, 0, 0, 1, 17, 27, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.1685}", "{'[6, 6, 6, 5, 6, 0, 0, 1, 17, 27, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.168414}", "{'[6, 6, 6, 5, 6, 0, 0, 1, 17, 27, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.168548}", "{'[6, 6, 6, 5, 6, 0, 0, 1, 17, 27, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.168502}", "{'[6, 6, 6, 5, 6, 0, 0, 1, 17, 27, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.168489}", "{'[6, 6, 6, 5, 6, 0, 0, 1, 17, 27, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.165262}"]
returning from 'run': {'[6, 6, 6, 5, 6, 0, 0, 1, 17, 27, 0, 3, 0, 2, 0, 0, 0, 1]': ([0.182614, 0.185987, 0.186563, 0.18069, 0.167615, 0.167763, 0.167747, 0.167765, 0.167593, 0.168429, 0.168389, 0.168635, 0.168185, 0.168405, 0.168348, 0.168502, 0.16836, 0.168155, 0.168453, 0.168552, 0.168365, 0.168649, 0.168282, 0.168252, 0.1685, 0.168414, 0.168548, 0.168502, 0.168489, 0.165262], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 6, 5, 6, 0, 0, 1, 17, 27, 0, 3, 0, 2, 0, 0, 0, 1]': ([0.182614, 0.185987, 0.186563, 0.18069, 0.167615, 0.167763, 0.167747, 0.167765, 0.167593, 0.168429, 0.168389, 0.168635, 0.168185, 0.168405, 0.168348, 0.168502, 0.16836, 0.168155, 0.168453, 0.168552, 0.168365, 0.168649, 0.168282, 0.168252, 0.1685, 0.168414, 0.168548, 0.168502, 0.168489, 0.165262], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	48
        Max loop nest depth: 	5
        Additions: 		1268
        Multiplications: 	270
        Divisions: 		0
        Logical: 		0
        Reads: 			2107
        Writes: 		284
        Comparisons:		48
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest33.exe __orio_perftest33.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest33.exe  
Program Test Output: 
{'[5, 5, 1, 0, 6, 6, 1, 1, 19, 5, 0, 5, 1, 0, 1, 0, 0, 0]' : 0.121044}
{'[5, 5, 1, 0, 6, 6, 1, 1, 19, 5, 0, 5, 1, 0, 1, 0, 0, 0]' : 0.118872}
{'[5, 5, 1, 0, 6, 6, 1, 1, 19, 5, 0, 5, 1, 0, 1, 0, 0, 0]' : 0.118538}
{'[5, 5, 1, 0, 6, 6, 1, 1, 19, 5, 0, 5, 1, 0, 1, 0, 0, 0]' : 0.118905}
{'[5, 5, 1, 0, 6, 6, 1, 1, 19, 5, 0, 5, 1, 0, 1, 0, 0, 0]' : 0.118486}
{'[5, 5, 1, 0, 6, 6, 1, 1, 19, 5, 0, 5, 1, 0, 1, 0, 0, 0]' : 0.118407}
{'[5, 5, 1, 0, 6, 6, 1, 1, 19, 5, 0, 5, 1, 0, 1, 0, 0, 0]' : 0.118548}
{'[5, 5, 1, 0, 6, 6, 1, 1, 19, 5, 0, 5, 1, 0, 1, 0, 0, 0]' : 0.118959}
{'[5, 5, 1, 0, 6, 6, 1, 1, 19, 5, 0, 5, 1, 0, 1, 0, 0, 0]' : 0.119275}
{'[5, 5, 1, 0, 6, 6, 1, 1, 19, 5, 0, 5, 1, 0, 1, 0, 0, 0]' : 0.115868}
{'[5, 5, 1, 0, 6, 6, 1, 1, 19, 5, 0, 5, 1, 0, 1, 0, 0, 0]' : 0.116703}
{'[5, 5, 1, 0, 6, 6, 1, 1, 19, 5, 0, 5, 1, 0, 1, 0, 0, 0]' : 0.115928}
{'[5, 5, 1, 0, 6, 6, 1, 1, 19, 5, 0, 5, 1, 0, 1, 0, 0, 0]' : 0.117907}
{'[5, 5, 1, 0, 6, 6, 1, 1, 19, 5, 0, 5, 1, 0, 1, 0, 0, 0]' : 0.118428}
{'[5, 5, 1, 0, 6, 6, 1, 1, 19, 5, 0, 5, 1, 0, 1, 0, 0, 0]' : 0.118449}
{'[5, 5, 1, 0, 6, 6, 1, 1, 19, 5, 0, 5, 1, 0, 1, 0, 0, 0]' : 0.11849}
{'[5, 5, 1, 0, 6, 6, 1, 1, 19, 5, 0, 5, 1, 0, 1, 0, 0, 0]' : 0.120384}
{'[5, 5, 1, 0, 6, 6, 1, 1, 19, 5, 0, 5, 1, 0, 1, 0, 0, 0]' : 0.120965}
{'[5, 5, 1, 0, 6, 6, 1, 1, 19, 5, 0, 5, 1, 0, 1, 0, 0, 0]' : 0.121055}
{'[5, 5, 1, 0, 6, 6, 1, 1, 19, 5, 0, 5, 1, 0, 1, 0, 0, 0]' : 0.121124}
{'[5, 5, 1, 0, 6, 6, 1, 1, 19, 5, 0, 5, 1, 0, 1, 0, 0, 0]' : 0.121097}
{'[5, 5, 1, 0, 6, 6, 1, 1, 19, 5, 0, 5, 1, 0, 1, 0, 0, 0]' : 0.121095}
{'[5, 5, 1, 0, 6, 6, 1, 1, 19, 5, 0, 5, 1, 0, 1, 0, 0, 0]' : 0.121111}
{'[5, 5, 1, 0, 6, 6, 1, 1, 19, 5, 0, 5, 1, 0, 1, 0, 0, 0]' : 0.11988}
{'[5, 5, 1, 0, 6, 6, 1, 1, 19, 5, 0, 5, 1, 0, 1, 0, 0, 0]' : 0.119671}
{'[5, 5, 1, 0, 6, 6, 1, 1, 19, 5, 0, 5, 1, 0, 1, 0, 0, 0]' : 0.118377}
{'[5, 5, 1, 0, 6, 6, 1, 1, 19, 5, 0, 5, 1, 0, 1, 0, 0, 0]' : 0.118437}
{'[5, 5, 1, 0, 6, 6, 1, 1, 19, 5, 0, 5, 1, 0, 1, 0, 0, 0]' : 0.118527}
{'[5, 5, 1, 0, 6, 6, 1, 1, 19, 5, 0, 5, 1, 0, 1, 0, 0, 0]' : 0.11899}
{'[5, 5, 1, 0, 6, 6, 1, 1, 19, 5, 0, 5, 1, 0, 1, 0, 0, 0]' : 0.12102}

out:
 ["{'[5, 5, 1, 0, 6, 6, 1, 1, 19, 5, 0, 5, 1, 0, 1, 0, 0, 0]' : 0.121044}", "{'[5, 5, 1, 0, 6, 6, 1, 1, 19, 5, 0, 5, 1, 0, 1, 0, 0, 0]' : 0.118872}", "{'[5, 5, 1, 0, 6, 6, 1, 1, 19, 5, 0, 5, 1, 0, 1, 0, 0, 0]' : 0.118538}", "{'[5, 5, 1, 0, 6, 6, 1, 1, 19, 5, 0, 5, 1, 0, 1, 0, 0, 0]' : 0.118905}", "{'[5, 5, 1, 0, 6, 6, 1, 1, 19, 5, 0, 5, 1, 0, 1, 0, 0, 0]' : 0.118486}", "{'[5, 5, 1, 0, 6, 6, 1, 1, 19, 5, 0, 5, 1, 0, 1, 0, 0, 0]' : 0.118407}", "{'[5, 5, 1, 0, 6, 6, 1, 1, 19, 5, 0, 5, 1, 0, 1, 0, 0, 0]' : 0.118548}", "{'[5, 5, 1, 0, 6, 6, 1, 1, 19, 5, 0, 5, 1, 0, 1, 0, 0, 0]' : 0.118959}", "{'[5, 5, 1, 0, 6, 6, 1, 1, 19, 5, 0, 5, 1, 0, 1, 0, 0, 0]' : 0.119275}", "{'[5, 5, 1, 0, 6, 6, 1, 1, 19, 5, 0, 5, 1, 0, 1, 0, 0, 0]' : 0.115868}", "{'[5, 5, 1, 0, 6, 6, 1, 1, 19, 5, 0, 5, 1, 0, 1, 0, 0, 0]' : 0.116703}", "{'[5, 5, 1, 0, 6, 6, 1, 1, 19, 5, 0, 5, 1, 0, 1, 0, 0, 0]' : 0.115928}", "{'[5, 5, 1, 0, 6, 6, 1, 1, 19, 5, 0, 5, 1, 0, 1, 0, 0, 0]' : 0.117907}", "{'[5, 5, 1, 0, 6, 6, 1, 1, 19, 5, 0, 5, 1, 0, 1, 0, 0, 0]' : 0.118428}", "{'[5, 5, 1, 0, 6, 6, 1, 1, 19, 5, 0, 5, 1, 0, 1, 0, 0, 0]' : 0.118449}", "{'[5, 5, 1, 0, 6, 6, 1, 1, 19, 5, 0, 5, 1, 0, 1, 0, 0, 0]' : 0.11849}", "{'[5, 5, 1, 0, 6, 6, 1, 1, 19, 5, 0, 5, 1, 0, 1, 0, 0, 0]' : 0.120384}", "{'[5, 5, 1, 0, 6, 6, 1, 1, 19, 5, 0, 5, 1, 0, 1, 0, 0, 0]' : 0.120965}", "{'[5, 5, 1, 0, 6, 6, 1, 1, 19, 5, 0, 5, 1, 0, 1, 0, 0, 0]' : 0.121055}", "{'[5, 5, 1, 0, 6, 6, 1, 1, 19, 5, 0, 5, 1, 0, 1, 0, 0, 0]' : 0.121124}", "{'[5, 5, 1, 0, 6, 6, 1, 1, 19, 5, 0, 5, 1, 0, 1, 0, 0, 0]' : 0.121097}", "{'[5, 5, 1, 0, 6, 6, 1, 1, 19, 5, 0, 5, 1, 0, 1, 0, 0, 0]' : 0.121095}", "{'[5, 5, 1, 0, 6, 6, 1, 1, 19, 5, 0, 5, 1, 0, 1, 0, 0, 0]' : 0.121111}", "{'[5, 5, 1, 0, 6, 6, 1, 1, 19, 5, 0, 5, 1, 0, 1, 0, 0, 0]' : 0.11988}", "{'[5, 5, 1, 0, 6, 6, 1, 1, 19, 5, 0, 5, 1, 0, 1, 0, 0, 0]' : 0.119671}", "{'[5, 5, 1, 0, 6, 6, 1, 1, 19, 5, 0, 5, 1, 0, 1, 0, 0, 0]' : 0.118377}", "{'[5, 5, 1, 0, 6, 6, 1, 1, 19, 5, 0, 5, 1, 0, 1, 0, 0, 0]' : 0.118437}", "{'[5, 5, 1, 0, 6, 6, 1, 1, 19, 5, 0, 5, 1, 0, 1, 0, 0, 0]' : 0.118527}", "{'[5, 5, 1, 0, 6, 6, 1, 1, 19, 5, 0, 5, 1, 0, 1, 0, 0, 0]' : 0.11899}", "{'[5, 5, 1, 0, 6, 6, 1, 1, 19, 5, 0, 5, 1, 0, 1, 0, 0, 0]' : 0.12102}"]
returning from 'run': {'[5, 5, 1, 0, 6, 6, 1, 1, 19, 5, 0, 5, 1, 0, 1, 0, 0, 0]': ([0.121044, 0.118872, 0.118538, 0.118905, 0.118486, 0.118407, 0.118548, 0.118959, 0.119275, 0.115868, 0.116703, 0.115928, 0.117907, 0.118428, 0.118449, 0.11849, 0.120384, 0.120965, 0.121055, 0.121124, 0.121097, 0.121095, 0.121111, 0.11988, 0.119671, 0.118377, 0.118437, 0.118527, 0.11899, 0.12102], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 5, 1, 0, 6, 6, 1, 1, 19, 5, 0, 5, 1, 0, 1, 0, 0, 0]': ([0.121044, 0.118872, 0.118538, 0.118905, 0.118486, 0.118407, 0.118548, 0.118959, 0.119275, 0.115868, 0.116703, 0.115928, 0.117907, 0.118428, 0.118449, 0.11849, 0.120384, 0.120965, 0.121055, 0.121124, 0.121097, 0.121095, 0.121111, 0.11988, 0.119671, 0.118377, 0.118437, 0.118527, 0.11899, 0.12102], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	44
        Max loop nest depth: 	5
        Additions: 		1273
        Multiplications: 	540
        Divisions: 		0
        Logical: 		0
        Reads: 			2652
        Writes: 		511
        Comparisons:		44
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest34.exe __orio_perftest34.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest34.exe  
Program Test Output: 
{'[4, 0, 6, 5, 6, 0, 1, 0, 15, 28, 28, 0, 0, 1, 0, 1, 0, 1]' : 0.192816}
{'[4, 0, 6, 5, 6, 0, 1, 0, 15, 28, 28, 0, 0, 1, 0, 1, 0, 1]' : 0.192757}
{'[4, 0, 6, 5, 6, 0, 1, 0, 15, 28, 28, 0, 0, 1, 0, 1, 0, 1]' : 0.188981}
{'[4, 0, 6, 5, 6, 0, 1, 0, 15, 28, 28, 0, 0, 1, 0, 1, 0, 1]' : 0.189695}
{'[4, 0, 6, 5, 6, 0, 1, 0, 15, 28, 28, 0, 0, 1, 0, 1, 0, 1]' : 0.192117}
{'[4, 0, 6, 5, 6, 0, 1, 0, 15, 28, 28, 0, 0, 1, 0, 1, 0, 1]' : 0.192504}
{'[4, 0, 6, 5, 6, 0, 1, 0, 15, 28, 28, 0, 0, 1, 0, 1, 0, 1]' : 0.192622}
{'[4, 0, 6, 5, 6, 0, 1, 0, 15, 28, 28, 0, 0, 1, 0, 1, 0, 1]' : 0.192275}
{'[4, 0, 6, 5, 6, 0, 1, 0, 15, 28, 28, 0, 0, 1, 0, 1, 0, 1]' : 0.189911}
{'[4, 0, 6, 5, 6, 0, 1, 0, 15, 28, 28, 0, 0, 1, 0, 1, 0, 1]' : 0.191322}
{'[4, 0, 6, 5, 6, 0, 1, 0, 15, 28, 28, 0, 0, 1, 0, 1, 0, 1]' : 0.19225}
{'[4, 0, 6, 5, 6, 0, 1, 0, 15, 28, 28, 0, 0, 1, 0, 1, 0, 1]' : 0.191253}
{'[4, 0, 6, 5, 6, 0, 1, 0, 15, 28, 28, 0, 0, 1, 0, 1, 0, 1]' : 0.192565}
{'[4, 0, 6, 5, 6, 0, 1, 0, 15, 28, 28, 0, 0, 1, 0, 1, 0, 1]' : 0.192305}
{'[4, 0, 6, 5, 6, 0, 1, 0, 15, 28, 28, 0, 0, 1, 0, 1, 0, 1]' : 0.192325}
{'[4, 0, 6, 5, 6, 0, 1, 0, 15, 28, 28, 0, 0, 1, 0, 1, 0, 1]' : 0.192589}
{'[4, 0, 6, 5, 6, 0, 1, 0, 15, 28, 28, 0, 0, 1, 0, 1, 0, 1]' : 0.192525}
{'[4, 0, 6, 5, 6, 0, 1, 0, 15, 28, 28, 0, 0, 1, 0, 1, 0, 1]' : 0.189233}
{'[4, 0, 6, 5, 6, 0, 1, 0, 15, 28, 28, 0, 0, 1, 0, 1, 0, 1]' : 0.188542}
{'[4, 0, 6, 5, 6, 0, 1, 0, 15, 28, 28, 0, 0, 1, 0, 1, 0, 1]' : 0.191105}
{'[4, 0, 6, 5, 6, 0, 1, 0, 15, 28, 28, 0, 0, 1, 0, 1, 0, 1]' : 0.192185}
{'[4, 0, 6, 5, 6, 0, 1, 0, 15, 28, 28, 0, 0, 1, 0, 1, 0, 1]' : 0.192381}
{'[4, 0, 6, 5, 6, 0, 1, 0, 15, 28, 28, 0, 0, 1, 0, 1, 0, 1]' : 0.192617}
{'[4, 0, 6, 5, 6, 0, 1, 0, 15, 28, 28, 0, 0, 1, 0, 1, 0, 1]' : 0.19233}
{'[4, 0, 6, 5, 6, 0, 1, 0, 15, 28, 28, 0, 0, 1, 0, 1, 0, 1]' : 0.192614}
{'[4, 0, 6, 5, 6, 0, 1, 0, 15, 28, 28, 0, 0, 1, 0, 1, 0, 1]' : 0.192421}
{'[4, 0, 6, 5, 6, 0, 1, 0, 15, 28, 28, 0, 0, 1, 0, 1, 0, 1]' : 0.19303}
{'[4, 0, 6, 5, 6, 0, 1, 0, 15, 28, 28, 0, 0, 1, 0, 1, 0, 1]' : 0.190989}
{'[4, 0, 6, 5, 6, 0, 1, 0, 15, 28, 28, 0, 0, 1, 0, 1, 0, 1]' : 0.192317}
{'[4, 0, 6, 5, 6, 0, 1, 0, 15, 28, 28, 0, 0, 1, 0, 1, 0, 1]' : 0.189796}

out:
 ["{'[4, 0, 6, 5, 6, 0, 1, 0, 15, 28, 28, 0, 0, 1, 0, 1, 0, 1]' : 0.192816}", "{'[4, 0, 6, 5, 6, 0, 1, 0, 15, 28, 28, 0, 0, 1, 0, 1, 0, 1]' : 0.192757}", "{'[4, 0, 6, 5, 6, 0, 1, 0, 15, 28, 28, 0, 0, 1, 0, 1, 0, 1]' : 0.188981}", "{'[4, 0, 6, 5, 6, 0, 1, 0, 15, 28, 28, 0, 0, 1, 0, 1, 0, 1]' : 0.189695}", "{'[4, 0, 6, 5, 6, 0, 1, 0, 15, 28, 28, 0, 0, 1, 0, 1, 0, 1]' : 0.192117}", "{'[4, 0, 6, 5, 6, 0, 1, 0, 15, 28, 28, 0, 0, 1, 0, 1, 0, 1]' : 0.192504}", "{'[4, 0, 6, 5, 6, 0, 1, 0, 15, 28, 28, 0, 0, 1, 0, 1, 0, 1]' : 0.192622}", "{'[4, 0, 6, 5, 6, 0, 1, 0, 15, 28, 28, 0, 0, 1, 0, 1, 0, 1]' : 0.192275}", "{'[4, 0, 6, 5, 6, 0, 1, 0, 15, 28, 28, 0, 0, 1, 0, 1, 0, 1]' : 0.189911}", "{'[4, 0, 6, 5, 6, 0, 1, 0, 15, 28, 28, 0, 0, 1, 0, 1, 0, 1]' : 0.191322}", "{'[4, 0, 6, 5, 6, 0, 1, 0, 15, 28, 28, 0, 0, 1, 0, 1, 0, 1]' : 0.19225}", "{'[4, 0, 6, 5, 6, 0, 1, 0, 15, 28, 28, 0, 0, 1, 0, 1, 0, 1]' : 0.191253}", "{'[4, 0, 6, 5, 6, 0, 1, 0, 15, 28, 28, 0, 0, 1, 0, 1, 0, 1]' : 0.192565}", "{'[4, 0, 6, 5, 6, 0, 1, 0, 15, 28, 28, 0, 0, 1, 0, 1, 0, 1]' : 0.192305}", "{'[4, 0, 6, 5, 6, 0, 1, 0, 15, 28, 28, 0, 0, 1, 0, 1, 0, 1]' : 0.192325}", "{'[4, 0, 6, 5, 6, 0, 1, 0, 15, 28, 28, 0, 0, 1, 0, 1, 0, 1]' : 0.192589}", "{'[4, 0, 6, 5, 6, 0, 1, 0, 15, 28, 28, 0, 0, 1, 0, 1, 0, 1]' : 0.192525}", "{'[4, 0, 6, 5, 6, 0, 1, 0, 15, 28, 28, 0, 0, 1, 0, 1, 0, 1]' : 0.189233}", "{'[4, 0, 6, 5, 6, 0, 1, 0, 15, 28, 28, 0, 0, 1, 0, 1, 0, 1]' : 0.188542}", "{'[4, 0, 6, 5, 6, 0, 1, 0, 15, 28, 28, 0, 0, 1, 0, 1, 0, 1]' : 0.191105}", "{'[4, 0, 6, 5, 6, 0, 1, 0, 15, 28, 28, 0, 0, 1, 0, 1, 0, 1]' : 0.192185}", "{'[4, 0, 6, 5, 6, 0, 1, 0, 15, 28, 28, 0, 0, 1, 0, 1, 0, 1]' : 0.192381}", "{'[4, 0, 6, 5, 6, 0, 1, 0, 15, 28, 28, 0, 0, 1, 0, 1, 0, 1]' : 0.192617}", "{'[4, 0, 6, 5, 6, 0, 1, 0, 15, 28, 28, 0, 0, 1, 0, 1, 0, 1]' : 0.19233}", "{'[4, 0, 6, 5, 6, 0, 1, 0, 15, 28, 28, 0, 0, 1, 0, 1, 0, 1]' : 0.192614}", "{'[4, 0, 6, 5, 6, 0, 1, 0, 15, 28, 28, 0, 0, 1, 0, 1, 0, 1]' : 0.192421}", "{'[4, 0, 6, 5, 6, 0, 1, 0, 15, 28, 28, 0, 0, 1, 0, 1, 0, 1]' : 0.19303}", "{'[4, 0, 6, 5, 6, 0, 1, 0, 15, 28, 28, 0, 0, 1, 0, 1, 0, 1]' : 0.190989}", "{'[4, 0, 6, 5, 6, 0, 1, 0, 15, 28, 28, 0, 0, 1, 0, 1, 0, 1]' : 0.192317}", "{'[4, 0, 6, 5, 6, 0, 1, 0, 15, 28, 28, 0, 0, 1, 0, 1, 0, 1]' : 0.189796}"]
returning from 'run': {'[4, 0, 6, 5, 6, 0, 1, 0, 15, 28, 28, 0, 0, 1, 0, 1, 0, 1]': ([0.192816, 0.192757, 0.188981, 0.189695, 0.192117, 0.192504, 0.192622, 0.192275, 0.189911, 0.191322, 0.19225, 0.191253, 0.192565, 0.192305, 0.192325, 0.192589, 0.192525, 0.189233, 0.188542, 0.191105, 0.192185, 0.192381, 0.192617, 0.19233, 0.192614, 0.192421, 0.19303, 0.190989, 0.192317, 0.189796], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 0, 6, 5, 6, 0, 1, 0, 15, 28, 28, 0, 0, 1, 0, 1, 0, 1]': ([0.192816, 0.192757, 0.188981, 0.189695, 0.192117, 0.192504, 0.192622, 0.192275, 0.189911, 0.191322, 0.19225, 0.191253, 0.192565, 0.192305, 0.192325, 0.192589, 0.192525, 0.189233, 0.188542, 0.191105, 0.192185, 0.192381, 0.192617, 0.19233, 0.192614, 0.192421, 0.19303, 0.190989, 0.192317, 0.189796], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	6
        Additions: 		1097
        Multiplications: 	450
        Divisions: 		0
        Logical: 		0
        Reads: 			2181
        Writes: 		393
        Comparisons:		24
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest35.exe __orio_perftest35.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest35.exe  
Program Test Output: 
{'[3, 2, 6, 3, 0, 5, 1, 1, 5, 0, 28, 15, 1, 1, 0, 1, 1, 1]' : 0.110385}
{'[3, 2, 6, 3, 0, 5, 1, 1, 5, 0, 28, 15, 1, 1, 0, 1, 1, 1]' : 0.110237}
{'[3, 2, 6, 3, 0, 5, 1, 1, 5, 0, 28, 15, 1, 1, 0, 1, 1, 1]' : 0.110223}
{'[3, 2, 6, 3, 0, 5, 1, 1, 5, 0, 28, 15, 1, 1, 0, 1, 1, 1]' : 0.110269}
{'[3, 2, 6, 3, 0, 5, 1, 1, 5, 0, 28, 15, 1, 1, 0, 1, 1, 1]' : 0.104081}
{'[3, 2, 6, 3, 0, 5, 1, 1, 5, 0, 28, 15, 1, 1, 0, 1, 1, 1]' : 0.099026}
{'[3, 2, 6, 3, 0, 5, 1, 1, 5, 0, 28, 15, 1, 1, 0, 1, 1, 1]' : 0.0988879}
{'[3, 2, 6, 3, 0, 5, 1, 1, 5, 0, 28, 15, 1, 1, 0, 1, 1, 1]' : 0.0989029}
{'[3, 2, 6, 3, 0, 5, 1, 1, 5, 0, 28, 15, 1, 1, 0, 1, 1, 1]' : 0.098907}
{'[3, 2, 6, 3, 0, 5, 1, 1, 5, 0, 28, 15, 1, 1, 0, 1, 1, 1]' : 0.0966539}
{'[3, 2, 6, 3, 0, 5, 1, 1, 5, 0, 28, 15, 1, 1, 0, 1, 1, 1]' : 0.0979891}
{'[3, 2, 6, 3, 0, 5, 1, 1, 5, 0, 28, 15, 1, 1, 0, 1, 1, 1]' : 0.0988541}
{'[3, 2, 6, 3, 0, 5, 1, 1, 5, 0, 28, 15, 1, 1, 0, 1, 1, 1]' : 0.0988941}
{'[3, 2, 6, 3, 0, 5, 1, 1, 5, 0, 28, 15, 1, 1, 0, 1, 1, 1]' : 0.0988529}
{'[3, 2, 6, 3, 0, 5, 1, 1, 5, 0, 28, 15, 1, 1, 0, 1, 1, 1]' : 0.0991528}
{'[3, 2, 6, 3, 0, 5, 1, 1, 5, 0, 28, 15, 1, 1, 0, 1, 1, 1]' : 0.0988879}
{'[3, 2, 6, 3, 0, 5, 1, 1, 5, 0, 28, 15, 1, 1, 0, 1, 1, 1]' : 0.0988362}
{'[3, 2, 6, 3, 0, 5, 1, 1, 5, 0, 28, 15, 1, 1, 0, 1, 1, 1]' : 0.0988181}
{'[3, 2, 6, 3, 0, 5, 1, 1, 5, 0, 28, 15, 1, 1, 0, 1, 1, 1]' : 0.0988581}
{'[3, 2, 6, 3, 0, 5, 1, 1, 5, 0, 28, 15, 1, 1, 0, 1, 1, 1]' : 0.098865}
{'[3, 2, 6, 3, 0, 5, 1, 1, 5, 0, 28, 15, 1, 1, 0, 1, 1, 1]' : 0.098907}
{'[3, 2, 6, 3, 0, 5, 1, 1, 5, 0, 28, 15, 1, 1, 0, 1, 1, 1]' : 0.0988569}
{'[3, 2, 6, 3, 0, 5, 1, 1, 5, 0, 28, 15, 1, 1, 0, 1, 1, 1]' : 0.0988688}
{'[3, 2, 6, 3, 0, 5, 1, 1, 5, 0, 28, 15, 1, 1, 0, 1, 1, 1]' : 0.0988958}
{'[3, 2, 6, 3, 0, 5, 1, 1, 5, 0, 28, 15, 1, 1, 0, 1, 1, 1]' : 0.0991001}
{'[3, 2, 6, 3, 0, 5, 1, 1, 5, 0, 28, 15, 1, 1, 0, 1, 1, 1]' : 0.098897}
{'[3, 2, 6, 3, 0, 5, 1, 1, 5, 0, 28, 15, 1, 1, 0, 1, 1, 1]' : 0.0988932}
{'[3, 2, 6, 3, 0, 5, 1, 1, 5, 0, 28, 15, 1, 1, 0, 1, 1, 1]' : 0.0988879}
{'[3, 2, 6, 3, 0, 5, 1, 1, 5, 0, 28, 15, 1, 1, 0, 1, 1, 1]' : 0.098918}
{'[3, 2, 6, 3, 0, 5, 1, 1, 5, 0, 28, 15, 1, 1, 0, 1, 1, 1]' : 0.0981631}

out:
 ["{'[3, 2, 6, 3, 0, 5, 1, 1, 5, 0, 28, 15, 1, 1, 0, 1, 1, 1]' : 0.110385}", "{'[3, 2, 6, 3, 0, 5, 1, 1, 5, 0, 28, 15, 1, 1, 0, 1, 1, 1]' : 0.110237}", "{'[3, 2, 6, 3, 0, 5, 1, 1, 5, 0, 28, 15, 1, 1, 0, 1, 1, 1]' : 0.110223}", "{'[3, 2, 6, 3, 0, 5, 1, 1, 5, 0, 28, 15, 1, 1, 0, 1, 1, 1]' : 0.110269}", "{'[3, 2, 6, 3, 0, 5, 1, 1, 5, 0, 28, 15, 1, 1, 0, 1, 1, 1]' : 0.104081}", "{'[3, 2, 6, 3, 0, 5, 1, 1, 5, 0, 28, 15, 1, 1, 0, 1, 1, 1]' : 0.099026}", "{'[3, 2, 6, 3, 0, 5, 1, 1, 5, 0, 28, 15, 1, 1, 0, 1, 1, 1]' : 0.0988879}", "{'[3, 2, 6, 3, 0, 5, 1, 1, 5, 0, 28, 15, 1, 1, 0, 1, 1, 1]' : 0.0989029}", "{'[3, 2, 6, 3, 0, 5, 1, 1, 5, 0, 28, 15, 1, 1, 0, 1, 1, 1]' : 0.098907}", "{'[3, 2, 6, 3, 0, 5, 1, 1, 5, 0, 28, 15, 1, 1, 0, 1, 1, 1]' : 0.0966539}", "{'[3, 2, 6, 3, 0, 5, 1, 1, 5, 0, 28, 15, 1, 1, 0, 1, 1, 1]' : 0.0979891}", "{'[3, 2, 6, 3, 0, 5, 1, 1, 5, 0, 28, 15, 1, 1, 0, 1, 1, 1]' : 0.0988541}", "{'[3, 2, 6, 3, 0, 5, 1, 1, 5, 0, 28, 15, 1, 1, 0, 1, 1, 1]' : 0.0988941}", "{'[3, 2, 6, 3, 0, 5, 1, 1, 5, 0, 28, 15, 1, 1, 0, 1, 1, 1]' : 0.0988529}", "{'[3, 2, 6, 3, 0, 5, 1, 1, 5, 0, 28, 15, 1, 1, 0, 1, 1, 1]' : 0.0991528}", "{'[3, 2, 6, 3, 0, 5, 1, 1, 5, 0, 28, 15, 1, 1, 0, 1, 1, 1]' : 0.0988879}", "{'[3, 2, 6, 3, 0, 5, 1, 1, 5, 0, 28, 15, 1, 1, 0, 1, 1, 1]' : 0.0988362}", "{'[3, 2, 6, 3, 0, 5, 1, 1, 5, 0, 28, 15, 1, 1, 0, 1, 1, 1]' : 0.0988181}", "{'[3, 2, 6, 3, 0, 5, 1, 1, 5, 0, 28, 15, 1, 1, 0, 1, 1, 1]' : 0.0988581}", "{'[3, 2, 6, 3, 0, 5, 1, 1, 5, 0, 28, 15, 1, 1, 0, 1, 1, 1]' : 0.098865}", "{'[3, 2, 6, 3, 0, 5, 1, 1, 5, 0, 28, 15, 1, 1, 0, 1, 1, 1]' : 0.098907}", "{'[3, 2, 6, 3, 0, 5, 1, 1, 5, 0, 28, 15, 1, 1, 0, 1, 1, 1]' : 0.0988569}", "{'[3, 2, 6, 3, 0, 5, 1, 1, 5, 0, 28, 15, 1, 1, 0, 1, 1, 1]' : 0.0988688}", "{'[3, 2, 6, 3, 0, 5, 1, 1, 5, 0, 28, 15, 1, 1, 0, 1, 1, 1]' : 0.0988958}", "{'[3, 2, 6, 3, 0, 5, 1, 1, 5, 0, 28, 15, 1, 1, 0, 1, 1, 1]' : 0.0991001}", "{'[3, 2, 6, 3, 0, 5, 1, 1, 5, 0, 28, 15, 1, 1, 0, 1, 1, 1]' : 0.098897}", "{'[3, 2, 6, 3, 0, 5, 1, 1, 5, 0, 28, 15, 1, 1, 0, 1, 1, 1]' : 0.0988932}", "{'[3, 2, 6, 3, 0, 5, 1, 1, 5, 0, 28, 15, 1, 1, 0, 1, 1, 1]' : 0.0988879}", "{'[3, 2, 6, 3, 0, 5, 1, 1, 5, 0, 28, 15, 1, 1, 0, 1, 1, 1]' : 0.098918}", "{'[3, 2, 6, 3, 0, 5, 1, 1, 5, 0, 28, 15, 1, 1, 0, 1, 1, 1]' : 0.0981631}"]
returning from 'run': {'[3, 2, 6, 3, 0, 5, 1, 1, 5, 0, 28, 15, 1, 1, 0, 1, 1, 1]': ([0.110385, 0.110237, 0.110223, 0.110269, 0.104081, 0.099026, 0.0988879, 0.0989029, 0.098907, 0.0966539, 0.0979891, 0.0988541, 0.0988941, 0.0988529, 0.0991528, 0.0988879, 0.0988362, 0.0988181, 0.0988581, 0.098865, 0.098907, 0.0988569, 0.0988688, 0.0988958, 0.0991001, 0.098897, 0.0988932, 0.0988879, 0.098918, 0.0981631], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 2, 6, 3, 0, 5, 1, 1, 5, 0, 28, 15, 1, 1, 0, 1, 1, 1]': ([0.110385, 0.110237, 0.110223, 0.110269, 0.104081, 0.099026, 0.0988879, 0.0989029, 0.098907, 0.0966539, 0.0979891, 0.0988541, 0.0988941, 0.0988529, 0.0991528, 0.0988879, 0.0988362, 0.0988181, 0.0988581, 0.098865, 0.098907, 0.0988569, 0.0988688, 0.0988958, 0.0991001, 0.098897, 0.0988932, 0.0988879, 0.098918, 0.0981631], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		306
        Multiplications: 	82
        Divisions: 		0
        Logical: 		0
        Reads: 			665
        Writes: 		142
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest36.exe __orio_perftest36.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest36.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest36.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest36.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest36.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = kkk
Code stats:
        Number of loops: 	23
        Max loop nest depth: 	6
        Additions: 		1543
        Multiplications: 	702
        Divisions: 		0
        Logical: 		0
        Reads: 			3062
        Writes: 		528
        Comparisons:		23
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest37.exe __orio_perftest37.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest37.exe  
Program Test Output: 
{'[1, 2, 3, 6, 2, 1, 1, 0, 0, 0, 19, 8, 1, 0, 1, 1, 1, 1]' : 0.0956359}
{'[1, 2, 3, 6, 2, 1, 1, 0, 0, 0, 19, 8, 1, 0, 1, 1, 1, 1]' : 0.0955989}
{'[1, 2, 3, 6, 2, 1, 1, 0, 0, 0, 19, 8, 1, 0, 1, 1, 1, 1]' : 0.095464}
{'[1, 2, 3, 6, 2, 1, 1, 0, 0, 0, 19, 8, 1, 0, 1, 1, 1, 1]' : 0.092418}
{'[1, 2, 3, 6, 2, 1, 1, 0, 0, 0, 19, 8, 1, 0, 1, 1, 1, 1]' : 0.0931752}
{'[1, 2, 3, 6, 2, 1, 1, 0, 0, 0, 19, 8, 1, 0, 1, 1, 1, 1]' : 0.093251}
{'[1, 2, 3, 6, 2, 1, 1, 0, 0, 0, 19, 8, 1, 0, 1, 1, 1, 1]' : 0.0930932}
{'[1, 2, 3, 6, 2, 1, 1, 0, 0, 0, 19, 8, 1, 0, 1, 1, 1, 1]' : 0.0931749}
{'[1, 2, 3, 6, 2, 1, 1, 0, 0, 0, 19, 8, 1, 0, 1, 1, 1, 1]' : 0.0930939}
{'[1, 2, 3, 6, 2, 1, 1, 0, 0, 0, 19, 8, 1, 0, 1, 1, 1, 1]' : 0.093468}
{'[1, 2, 3, 6, 2, 1, 1, 0, 0, 0, 19, 8, 1, 0, 1, 1, 1, 1]' : 0.0931952}
{'[1, 2, 3, 6, 2, 1, 1, 0, 0, 0, 19, 8, 1, 0, 1, 1, 1, 1]' : 0.093184}
{'[1, 2, 3, 6, 2, 1, 1, 0, 0, 0, 19, 8, 1, 0, 1, 1, 1, 1]' : 0.0931828}
{'[1, 2, 3, 6, 2, 1, 1, 0, 0, 0, 19, 8, 1, 0, 1, 1, 1, 1]' : 0.0932109}
{'[1, 2, 3, 6, 2, 1, 1, 0, 0, 0, 19, 8, 1, 0, 1, 1, 1, 1]' : 0.094034}
{'[1, 2, 3, 6, 2, 1, 1, 0, 0, 0, 19, 8, 1, 0, 1, 1, 1, 1]' : 0.093425}
{'[1, 2, 3, 6, 2, 1, 1, 0, 0, 0, 19, 8, 1, 0, 1, 1, 1, 1]' : 0.093128}
{'[1, 2, 3, 6, 2, 1, 1, 0, 0, 0, 19, 8, 1, 0, 1, 1, 1, 1]' : 0.093112}
{'[1, 2, 3, 6, 2, 1, 1, 0, 0, 0, 19, 8, 1, 0, 1, 1, 1, 1]' : 0.0932589}
{'[1, 2, 3, 6, 2, 1, 1, 0, 0, 0, 19, 8, 1, 0, 1, 1, 1, 1]' : 0.093369}
{'[1, 2, 3, 6, 2, 1, 1, 0, 0, 0, 19, 8, 1, 0, 1, 1, 1, 1]' : 0.093241}
{'[1, 2, 3, 6, 2, 1, 1, 0, 0, 0, 19, 8, 1, 0, 1, 1, 1, 1]' : 0.093297}
{'[1, 2, 3, 6, 2, 1, 1, 0, 0, 0, 19, 8, 1, 0, 1, 1, 1, 1]' : 0.0931771}
{'[1, 2, 3, 6, 2, 1, 1, 0, 0, 0, 19, 8, 1, 0, 1, 1, 1, 1]' : 0.0931358}
{'[1, 2, 3, 6, 2, 1, 1, 0, 0, 0, 19, 8, 1, 0, 1, 1, 1, 1]' : 0.0931759}
{'[1, 2, 3, 6, 2, 1, 1, 0, 0, 0, 19, 8, 1, 0, 1, 1, 1, 1]' : 0.0932229}
{'[1, 2, 3, 6, 2, 1, 1, 0, 0, 0, 19, 8, 1, 0, 1, 1, 1, 1]' : 0.093359}
{'[1, 2, 3, 6, 2, 1, 1, 0, 0, 0, 19, 8, 1, 0, 1, 1, 1, 1]' : 0.0934322}
{'[1, 2, 3, 6, 2, 1, 1, 0, 0, 0, 19, 8, 1, 0, 1, 1, 1, 1]' : 0.0931571}
{'[1, 2, 3, 6, 2, 1, 1, 0, 0, 0, 19, 8, 1, 0, 1, 1, 1, 1]' : 0.093138}

out:
 ["{'[1, 2, 3, 6, 2, 1, 1, 0, 0, 0, 19, 8, 1, 0, 1, 1, 1, 1]' : 0.0956359}", "{'[1, 2, 3, 6, 2, 1, 1, 0, 0, 0, 19, 8, 1, 0, 1, 1, 1, 1]' : 0.0955989}", "{'[1, 2, 3, 6, 2, 1, 1, 0, 0, 0, 19, 8, 1, 0, 1, 1, 1, 1]' : 0.095464}", "{'[1, 2, 3, 6, 2, 1, 1, 0, 0, 0, 19, 8, 1, 0, 1, 1, 1, 1]' : 0.092418}", "{'[1, 2, 3, 6, 2, 1, 1, 0, 0, 0, 19, 8, 1, 0, 1, 1, 1, 1]' : 0.0931752}", "{'[1, 2, 3, 6, 2, 1, 1, 0, 0, 0, 19, 8, 1, 0, 1, 1, 1, 1]' : 0.093251}", "{'[1, 2, 3, 6, 2, 1, 1, 0, 0, 0, 19, 8, 1, 0, 1, 1, 1, 1]' : 0.0930932}", "{'[1, 2, 3, 6, 2, 1, 1, 0, 0, 0, 19, 8, 1, 0, 1, 1, 1, 1]' : 0.0931749}", "{'[1, 2, 3, 6, 2, 1, 1, 0, 0, 0, 19, 8, 1, 0, 1, 1, 1, 1]' : 0.0930939}", "{'[1, 2, 3, 6, 2, 1, 1, 0, 0, 0, 19, 8, 1, 0, 1, 1, 1, 1]' : 0.093468}", "{'[1, 2, 3, 6, 2, 1, 1, 0, 0, 0, 19, 8, 1, 0, 1, 1, 1, 1]' : 0.0931952}", "{'[1, 2, 3, 6, 2, 1, 1, 0, 0, 0, 19, 8, 1, 0, 1, 1, 1, 1]' : 0.093184}", "{'[1, 2, 3, 6, 2, 1, 1, 0, 0, 0, 19, 8, 1, 0, 1, 1, 1, 1]' : 0.0931828}", "{'[1, 2, 3, 6, 2, 1, 1, 0, 0, 0, 19, 8, 1, 0, 1, 1, 1, 1]' : 0.0932109}", "{'[1, 2, 3, 6, 2, 1, 1, 0, 0, 0, 19, 8, 1, 0, 1, 1, 1, 1]' : 0.094034}", "{'[1, 2, 3, 6, 2, 1, 1, 0, 0, 0, 19, 8, 1, 0, 1, 1, 1, 1]' : 0.093425}", "{'[1, 2, 3, 6, 2, 1, 1, 0, 0, 0, 19, 8, 1, 0, 1, 1, 1, 1]' : 0.093128}", "{'[1, 2, 3, 6, 2, 1, 1, 0, 0, 0, 19, 8, 1, 0, 1, 1, 1, 1]' : 0.093112}", "{'[1, 2, 3, 6, 2, 1, 1, 0, 0, 0, 19, 8, 1, 0, 1, 1, 1, 1]' : 0.0932589}", "{'[1, 2, 3, 6, 2, 1, 1, 0, 0, 0, 19, 8, 1, 0, 1, 1, 1, 1]' : 0.093369}", "{'[1, 2, 3, 6, 2, 1, 1, 0, 0, 0, 19, 8, 1, 0, 1, 1, 1, 1]' : 0.093241}", "{'[1, 2, 3, 6, 2, 1, 1, 0, 0, 0, 19, 8, 1, 0, 1, 1, 1, 1]' : 0.093297}", "{'[1, 2, 3, 6, 2, 1, 1, 0, 0, 0, 19, 8, 1, 0, 1, 1, 1, 1]' : 0.0931771}", "{'[1, 2, 3, 6, 2, 1, 1, 0, 0, 0, 19, 8, 1, 0, 1, 1, 1, 1]' : 0.0931358}", "{'[1, 2, 3, 6, 2, 1, 1, 0, 0, 0, 19, 8, 1, 0, 1, 1, 1, 1]' : 0.0931759}", "{'[1, 2, 3, 6, 2, 1, 1, 0, 0, 0, 19, 8, 1, 0, 1, 1, 1, 1]' : 0.0932229}", "{'[1, 2, 3, 6, 2, 1, 1, 0, 0, 0, 19, 8, 1, 0, 1, 1, 1, 1]' : 0.093359}", "{'[1, 2, 3, 6, 2, 1, 1, 0, 0, 0, 19, 8, 1, 0, 1, 1, 1, 1]' : 0.0934322}", "{'[1, 2, 3, 6, 2, 1, 1, 0, 0, 0, 19, 8, 1, 0, 1, 1, 1, 1]' : 0.0931571}", "{'[1, 2, 3, 6, 2, 1, 1, 0, 0, 0, 19, 8, 1, 0, 1, 1, 1, 1]' : 0.093138}"]
returning from 'run': {'[1, 2, 3, 6, 2, 1, 1, 0, 0, 0, 19, 8, 1, 0, 1, 1, 1, 1]': ([0.0956359, 0.0955989, 0.095464, 0.092418, 0.0931752, 0.093251, 0.0930932, 0.0931749, 0.0930939, 0.093468, 0.0931952, 0.093184, 0.0931828, 0.0932109, 0.094034, 0.093425, 0.093128, 0.093112, 0.0932589, 0.093369, 0.093241, 0.093297, 0.0931771, 0.0931358, 0.0931759, 0.0932229, 0.093359, 0.0934322, 0.0931571, 0.093138], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 2, 3, 6, 2, 1, 1, 0, 0, 0, 19, 8, 1, 0, 1, 1, 1, 1]': ([0.0956359, 0.0955989, 0.095464, 0.092418, 0.0931752, 0.093251, 0.0930932, 0.0931749, 0.0930939, 0.093468, 0.0931952, 0.093184, 0.0931828, 0.0932109, 0.094034, 0.093425, 0.093128, 0.093112, 0.0932589, 0.093369, 0.093241, 0.093297, 0.0931771, 0.0931358, 0.0931759, 0.0932229, 0.093359, 0.0934322, 0.0931571, 0.093138], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = kkk
Code stats:
        Number of loops: 	48
        Max loop nest depth: 	5
        Additions: 		3359
        Multiplications: 	960
        Divisions: 		0
        Logical: 		0
        Reads: 			5392
        Writes: 		676
        Comparisons:		48
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest38.exe __orio_perftest38.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest38.exe  
Program Test Output: 
{'[6, 4, 3, 6, 0, 1, 0, 0, 25, 14, 11, 0, 0, 1, 1, 0, 1, 1]' : 0.114282}
{'[6, 4, 3, 6, 0, 1, 0, 0, 25, 14, 11, 0, 0, 1, 1, 0, 1, 1]' : 0.113928}
{'[6, 4, 3, 6, 0, 1, 0, 0, 25, 14, 11, 0, 0, 1, 1, 0, 1, 1]' : 0.114295}
{'[6, 4, 3, 6, 0, 1, 0, 0, 25, 14, 11, 0, 0, 1, 1, 0, 1, 1]' : 0.11394}
{'[6, 4, 3, 6, 0, 1, 0, 0, 25, 14, 11, 0, 0, 1, 1, 0, 1, 1]' : 0.114039}
{'[6, 4, 3, 6, 0, 1, 0, 0, 25, 14, 11, 0, 0, 1, 1, 0, 1, 1]' : 0.114007}
{'[6, 4, 3, 6, 0, 1, 0, 0, 25, 14, 11, 0, 0, 1, 1, 0, 1, 1]' : 0.114365}
{'[6, 4, 3, 6, 0, 1, 0, 0, 25, 14, 11, 0, 0, 1, 1, 0, 1, 1]' : 0.114183}
{'[6, 4, 3, 6, 0, 1, 0, 0, 25, 14, 11, 0, 0, 1, 1, 0, 1, 1]' : 0.114066}
{'[6, 4, 3, 6, 0, 1, 0, 0, 25, 14, 11, 0, 0, 1, 1, 0, 1, 1]' : 0.114034}
{'[6, 4, 3, 6, 0, 1, 0, 0, 25, 14, 11, 0, 0, 1, 1, 0, 1, 1]' : 0.114073}
{'[6, 4, 3, 6, 0, 1, 0, 0, 25, 14, 11, 0, 0, 1, 1, 0, 1, 1]' : 0.114018}
{'[6, 4, 3, 6, 0, 1, 0, 0, 25, 14, 11, 0, 0, 1, 1, 0, 1, 1]' : 0.114021}
{'[6, 4, 3, 6, 0, 1, 0, 0, 25, 14, 11, 0, 0, 1, 1, 0, 1, 1]' : 0.11406}
{'[6, 4, 3, 6, 0, 1, 0, 0, 25, 14, 11, 0, 0, 1, 1, 0, 1, 1]' : 0.113944}
{'[6, 4, 3, 6, 0, 1, 0, 0, 25, 14, 11, 0, 0, 1, 1, 0, 1, 1]' : 0.11407}
{'[6, 4, 3, 6, 0, 1, 0, 0, 25, 14, 11, 0, 0, 1, 1, 0, 1, 1]' : 0.114009}
{'[6, 4, 3, 6, 0, 1, 0, 0, 25, 14, 11, 0, 0, 1, 1, 0, 1, 1]' : 0.113971}
{'[6, 4, 3, 6, 0, 1, 0, 0, 25, 14, 11, 0, 0, 1, 1, 0, 1, 1]' : 0.114012}
{'[6, 4, 3, 6, 0, 1, 0, 0, 25, 14, 11, 0, 0, 1, 1, 0, 1, 1]' : 0.114056}
{'[6, 4, 3, 6, 0, 1, 0, 0, 25, 14, 11, 0, 0, 1, 1, 0, 1, 1]' : 0.114216}
{'[6, 4, 3, 6, 0, 1, 0, 0, 25, 14, 11, 0, 0, 1, 1, 0, 1, 1]' : 0.114012}
{'[6, 4, 3, 6, 0, 1, 0, 0, 25, 14, 11, 0, 0, 1, 1, 0, 1, 1]' : 0.114235}
{'[6, 4, 3, 6, 0, 1, 0, 0, 25, 14, 11, 0, 0, 1, 1, 0, 1, 1]' : 0.113992}
{'[6, 4, 3, 6, 0, 1, 0, 0, 25, 14, 11, 0, 0, 1, 1, 0, 1, 1]' : 0.114092}
{'[6, 4, 3, 6, 0, 1, 0, 0, 25, 14, 11, 0, 0, 1, 1, 0, 1, 1]' : 0.113999}
{'[6, 4, 3, 6, 0, 1, 0, 0, 25, 14, 11, 0, 0, 1, 1, 0, 1, 1]' : 0.114035}
{'[6, 4, 3, 6, 0, 1, 0, 0, 25, 14, 11, 0, 0, 1, 1, 0, 1, 1]' : 0.114104}
{'[6, 4, 3, 6, 0, 1, 0, 0, 25, 14, 11, 0, 0, 1, 1, 0, 1, 1]' : 0.113937}
{'[6, 4, 3, 6, 0, 1, 0, 0, 25, 14, 11, 0, 0, 1, 1, 0, 1, 1]' : 0.114023}

out:
 ["{'[6, 4, 3, 6, 0, 1, 0, 0, 25, 14, 11, 0, 0, 1, 1, 0, 1, 1]' : 0.114282}", "{'[6, 4, 3, 6, 0, 1, 0, 0, 25, 14, 11, 0, 0, 1, 1, 0, 1, 1]' : 0.113928}", "{'[6, 4, 3, 6, 0, 1, 0, 0, 25, 14, 11, 0, 0, 1, 1, 0, 1, 1]' : 0.114295}", "{'[6, 4, 3, 6, 0, 1, 0, 0, 25, 14, 11, 0, 0, 1, 1, 0, 1, 1]' : 0.11394}", "{'[6, 4, 3, 6, 0, 1, 0, 0, 25, 14, 11, 0, 0, 1, 1, 0, 1, 1]' : 0.114039}", "{'[6, 4, 3, 6, 0, 1, 0, 0, 25, 14, 11, 0, 0, 1, 1, 0, 1, 1]' : 0.114007}", "{'[6, 4, 3, 6, 0, 1, 0, 0, 25, 14, 11, 0, 0, 1, 1, 0, 1, 1]' : 0.114365}", "{'[6, 4, 3, 6, 0, 1, 0, 0, 25, 14, 11, 0, 0, 1, 1, 0, 1, 1]' : 0.114183}", "{'[6, 4, 3, 6, 0, 1, 0, 0, 25, 14, 11, 0, 0, 1, 1, 0, 1, 1]' : 0.114066}", "{'[6, 4, 3, 6, 0, 1, 0, 0, 25, 14, 11, 0, 0, 1, 1, 0, 1, 1]' : 0.114034}", "{'[6, 4, 3, 6, 0, 1, 0, 0, 25, 14, 11, 0, 0, 1, 1, 0, 1, 1]' : 0.114073}", "{'[6, 4, 3, 6, 0, 1, 0, 0, 25, 14, 11, 0, 0, 1, 1, 0, 1, 1]' : 0.114018}", "{'[6, 4, 3, 6, 0, 1, 0, 0, 25, 14, 11, 0, 0, 1, 1, 0, 1, 1]' : 0.114021}", "{'[6, 4, 3, 6, 0, 1, 0, 0, 25, 14, 11, 0, 0, 1, 1, 0, 1, 1]' : 0.11406}", "{'[6, 4, 3, 6, 0, 1, 0, 0, 25, 14, 11, 0, 0, 1, 1, 0, 1, 1]' : 0.113944}", "{'[6, 4, 3, 6, 0, 1, 0, 0, 25, 14, 11, 0, 0, 1, 1, 0, 1, 1]' : 0.11407}", "{'[6, 4, 3, 6, 0, 1, 0, 0, 25, 14, 11, 0, 0, 1, 1, 0, 1, 1]' : 0.114009}", "{'[6, 4, 3, 6, 0, 1, 0, 0, 25, 14, 11, 0, 0, 1, 1, 0, 1, 1]' : 0.113971}", "{'[6, 4, 3, 6, 0, 1, 0, 0, 25, 14, 11, 0, 0, 1, 1, 0, 1, 1]' : 0.114012}", "{'[6, 4, 3, 6, 0, 1, 0, 0, 25, 14, 11, 0, 0, 1, 1, 0, 1, 1]' : 0.114056}", "{'[6, 4, 3, 6, 0, 1, 0, 0, 25, 14, 11, 0, 0, 1, 1, 0, 1, 1]' : 0.114216}", "{'[6, 4, 3, 6, 0, 1, 0, 0, 25, 14, 11, 0, 0, 1, 1, 0, 1, 1]' : 0.114012}", "{'[6, 4, 3, 6, 0, 1, 0, 0, 25, 14, 11, 0, 0, 1, 1, 0, 1, 1]' : 0.114235}", "{'[6, 4, 3, 6, 0, 1, 0, 0, 25, 14, 11, 0, 0, 1, 1, 0, 1, 1]' : 0.113992}", "{'[6, 4, 3, 6, 0, 1, 0, 0, 25, 14, 11, 0, 0, 1, 1, 0, 1, 1]' : 0.114092}", "{'[6, 4, 3, 6, 0, 1, 0, 0, 25, 14, 11, 0, 0, 1, 1, 0, 1, 1]' : 0.113999}", "{'[6, 4, 3, 6, 0, 1, 0, 0, 25, 14, 11, 0, 0, 1, 1, 0, 1, 1]' : 0.114035}", "{'[6, 4, 3, 6, 0, 1, 0, 0, 25, 14, 11, 0, 0, 1, 1, 0, 1, 1]' : 0.114104}", "{'[6, 4, 3, 6, 0, 1, 0, 0, 25, 14, 11, 0, 0, 1, 1, 0, 1, 1]' : 0.113937}", "{'[6, 4, 3, 6, 0, 1, 0, 0, 25, 14, 11, 0, 0, 1, 1, 0, 1, 1]' : 0.114023}"]
returning from 'run': {'[6, 4, 3, 6, 0, 1, 0, 0, 25, 14, 11, 0, 0, 1, 1, 0, 1, 1]': ([0.114282, 0.113928, 0.114295, 0.11394, 0.114039, 0.114007, 0.114365, 0.114183, 0.114066, 0.114034, 0.114073, 0.114018, 0.114021, 0.11406, 0.113944, 0.11407, 0.114009, 0.113971, 0.114012, 0.114056, 0.114216, 0.114012, 0.114235, 0.113992, 0.114092, 0.113999, 0.114035, 0.114104, 0.113937, 0.114023], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 4, 3, 6, 0, 1, 0, 0, 25, 14, 11, 0, 0, 1, 1, 0, 1, 1]': ([0.114282, 0.113928, 0.114295, 0.11394, 0.114039, 0.114007, 0.114365, 0.114183, 0.114066, 0.114034, 0.114073, 0.114018, 0.114021, 0.11406, 0.113944, 0.11407, 0.114009, 0.113971, 0.114012, 0.114056, 0.114216, 0.114012, 0.114235, 0.113992, 0.114092, 0.113999, 0.114035, 0.114104, 0.113937, 0.114023], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		328
        Multiplications: 	80
        Divisions: 		0
        Logical: 		0
        Reads: 			714
        Writes: 		161
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest39.exe __orio_perftest39.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest39.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest39.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest39.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest39.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = jjj
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		161
        Multiplications: 	48
        Divisions: 		0
        Logical: 		0
        Reads: 			395
        Writes: 		97
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest40.exe __orio_perftest40.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest40.exe  
Program Test Output: 
{'[0, 4, 0, 1, 2, 2, 1, 0, 8, 0, 7, 6, 0, 1, 1, 1, 0, 1]' : 0.206014}
{'[0, 4, 0, 1, 2, 2, 1, 0, 8, 0, 7, 6, 0, 1, 1, 1, 0, 1]' : 0.205899}
{'[0, 4, 0, 1, 2, 2, 1, 0, 8, 0, 7, 6, 0, 1, 1, 1, 0, 1]' : 0.205839}
{'[0, 4, 0, 1, 2, 2, 1, 0, 8, 0, 7, 6, 0, 1, 1, 1, 0, 1]' : 0.180535}
{'[0, 4, 0, 1, 2, 2, 1, 0, 8, 0, 7, 6, 0, 1, 1, 1, 0, 1]' : 0.177942}
{'[0, 4, 0, 1, 2, 2, 1, 0, 8, 0, 7, 6, 0, 1, 1, 1, 0, 1]' : 0.177898}
{'[0, 4, 0, 1, 2, 2, 1, 0, 8, 0, 7, 6, 0, 1, 1, 1, 0, 1]' : 0.178042}
{'[0, 4, 0, 1, 2, 2, 1, 0, 8, 0, 7, 6, 0, 1, 1, 1, 0, 1]' : 0.178168}
{'[0, 4, 0, 1, 2, 2, 1, 0, 8, 0, 7, 6, 0, 1, 1, 1, 0, 1]' : 0.17375}
{'[0, 4, 0, 1, 2, 2, 1, 0, 8, 0, 7, 6, 0, 1, 1, 1, 0, 1]' : 0.178277}
{'[0, 4, 0, 1, 2, 2, 1, 0, 8, 0, 7, 6, 0, 1, 1, 1, 0, 1]' : 0.183039}
{'[0, 4, 0, 1, 2, 2, 1, 0, 8, 0, 7, 6, 0, 1, 1, 1, 0, 1]' : 0.181938}
{'[0, 4, 0, 1, 2, 2, 1, 0, 8, 0, 7, 6, 0, 1, 1, 1, 0, 1]' : 0.178103}
{'[0, 4, 0, 1, 2, 2, 1, 0, 8, 0, 7, 6, 0, 1, 1, 1, 0, 1]' : 0.177088}
{'[0, 4, 0, 1, 2, 2, 1, 0, 8, 0, 7, 6, 0, 1, 1, 1, 0, 1]' : 0.172552}
{'[0, 4, 0, 1, 2, 2, 1, 0, 8, 0, 7, 6, 0, 1, 1, 1, 0, 1]' : 0.177926}
{'[0, 4, 0, 1, 2, 2, 1, 0, 8, 0, 7, 6, 0, 1, 1, 1, 0, 1]' : 0.177955}
{'[0, 4, 0, 1, 2, 2, 1, 0, 8, 0, 7, 6, 0, 1, 1, 1, 0, 1]' : 0.178139}
{'[0, 4, 0, 1, 2, 2, 1, 0, 8, 0, 7, 6, 0, 1, 1, 1, 0, 1]' : 0.178506}
{'[0, 4, 0, 1, 2, 2, 1, 0, 8, 0, 7, 6, 0, 1, 1, 1, 0, 1]' : 0.178262}
{'[0, 4, 0, 1, 2, 2, 1, 0, 8, 0, 7, 6, 0, 1, 1, 1, 0, 1]' : 0.178152}
{'[0, 4, 0, 1, 2, 2, 1, 0, 8, 0, 7, 6, 0, 1, 1, 1, 0, 1]' : 0.177809}
{'[0, 4, 0, 1, 2, 2, 1, 0, 8, 0, 7, 6, 0, 1, 1, 1, 0, 1]' : 0.177949}
{'[0, 4, 0, 1, 2, 2, 1, 0, 8, 0, 7, 6, 0, 1, 1, 1, 0, 1]' : 0.180246}
{'[0, 4, 0, 1, 2, 2, 1, 0, 8, 0, 7, 6, 0, 1, 1, 1, 0, 1]' : 0.177916}
{'[0, 4, 0, 1, 2, 2, 1, 0, 8, 0, 7, 6, 0, 1, 1, 1, 0, 1]' : 0.172907}
{'[0, 4, 0, 1, 2, 2, 1, 0, 8, 0, 7, 6, 0, 1, 1, 1, 0, 1]' : 0.176803}
{'[0, 4, 0, 1, 2, 2, 1, 0, 8, 0, 7, 6, 0, 1, 1, 1, 0, 1]' : 0.178518}
{'[0, 4, 0, 1, 2, 2, 1, 0, 8, 0, 7, 6, 0, 1, 1, 1, 0, 1]' : 0.1779}
{'[0, 4, 0, 1, 2, 2, 1, 0, 8, 0, 7, 6, 0, 1, 1, 1, 0, 1]' : 0.1779}

out:
 ["{'[0, 4, 0, 1, 2, 2, 1, 0, 8, 0, 7, 6, 0, 1, 1, 1, 0, 1]' : 0.206014}", "{'[0, 4, 0, 1, 2, 2, 1, 0, 8, 0, 7, 6, 0, 1, 1, 1, 0, 1]' : 0.205899}", "{'[0, 4, 0, 1, 2, 2, 1, 0, 8, 0, 7, 6, 0, 1, 1, 1, 0, 1]' : 0.205839}", "{'[0, 4, 0, 1, 2, 2, 1, 0, 8, 0, 7, 6, 0, 1, 1, 1, 0, 1]' : 0.180535}", "{'[0, 4, 0, 1, 2, 2, 1, 0, 8, 0, 7, 6, 0, 1, 1, 1, 0, 1]' : 0.177942}", "{'[0, 4, 0, 1, 2, 2, 1, 0, 8, 0, 7, 6, 0, 1, 1, 1, 0, 1]' : 0.177898}", "{'[0, 4, 0, 1, 2, 2, 1, 0, 8, 0, 7, 6, 0, 1, 1, 1, 0, 1]' : 0.178042}", "{'[0, 4, 0, 1, 2, 2, 1, 0, 8, 0, 7, 6, 0, 1, 1, 1, 0, 1]' : 0.178168}", "{'[0, 4, 0, 1, 2, 2, 1, 0, 8, 0, 7, 6, 0, 1, 1, 1, 0, 1]' : 0.17375}", "{'[0, 4, 0, 1, 2, 2, 1, 0, 8, 0, 7, 6, 0, 1, 1, 1, 0, 1]' : 0.178277}", "{'[0, 4, 0, 1, 2, 2, 1, 0, 8, 0, 7, 6, 0, 1, 1, 1, 0, 1]' : 0.183039}", "{'[0, 4, 0, 1, 2, 2, 1, 0, 8, 0, 7, 6, 0, 1, 1, 1, 0, 1]' : 0.181938}", "{'[0, 4, 0, 1, 2, 2, 1, 0, 8, 0, 7, 6, 0, 1, 1, 1, 0, 1]' : 0.178103}", "{'[0, 4, 0, 1, 2, 2, 1, 0, 8, 0, 7, 6, 0, 1, 1, 1, 0, 1]' : 0.177088}", "{'[0, 4, 0, 1, 2, 2, 1, 0, 8, 0, 7, 6, 0, 1, 1, 1, 0, 1]' : 0.172552}", "{'[0, 4, 0, 1, 2, 2, 1, 0, 8, 0, 7, 6, 0, 1, 1, 1, 0, 1]' : 0.177926}", "{'[0, 4, 0, 1, 2, 2, 1, 0, 8, 0, 7, 6, 0, 1, 1, 1, 0, 1]' : 0.177955}", "{'[0, 4, 0, 1, 2, 2, 1, 0, 8, 0, 7, 6, 0, 1, 1, 1, 0, 1]' : 0.178139}", "{'[0, 4, 0, 1, 2, 2, 1, 0, 8, 0, 7, 6, 0, 1, 1, 1, 0, 1]' : 0.178506}", "{'[0, 4, 0, 1, 2, 2, 1, 0, 8, 0, 7, 6, 0, 1, 1, 1, 0, 1]' : 0.178262}", "{'[0, 4, 0, 1, 2, 2, 1, 0, 8, 0, 7, 6, 0, 1, 1, 1, 0, 1]' : 0.178152}", "{'[0, 4, 0, 1, 2, 2, 1, 0, 8, 0, 7, 6, 0, 1, 1, 1, 0, 1]' : 0.177809}", "{'[0, 4, 0, 1, 2, 2, 1, 0, 8, 0, 7, 6, 0, 1, 1, 1, 0, 1]' : 0.177949}", "{'[0, 4, 0, 1, 2, 2, 1, 0, 8, 0, 7, 6, 0, 1, 1, 1, 0, 1]' : 0.180246}", "{'[0, 4, 0, 1, 2, 2, 1, 0, 8, 0, 7, 6, 0, 1, 1, 1, 0, 1]' : 0.177916}", "{'[0, 4, 0, 1, 2, 2, 1, 0, 8, 0, 7, 6, 0, 1, 1, 1, 0, 1]' : 0.172907}", "{'[0, 4, 0, 1, 2, 2, 1, 0, 8, 0, 7, 6, 0, 1, 1, 1, 0, 1]' : 0.176803}", "{'[0, 4, 0, 1, 2, 2, 1, 0, 8, 0, 7, 6, 0, 1, 1, 1, 0, 1]' : 0.178518}", "{'[0, 4, 0, 1, 2, 2, 1, 0, 8, 0, 7, 6, 0, 1, 1, 1, 0, 1]' : 0.1779}", "{'[0, 4, 0, 1, 2, 2, 1, 0, 8, 0, 7, 6, 0, 1, 1, 1, 0, 1]' : 0.1779}"]
returning from 'run': {'[0, 4, 0, 1, 2, 2, 1, 0, 8, 0, 7, 6, 0, 1, 1, 1, 0, 1]': ([0.206014, 0.205899, 0.205839, 0.180535, 0.177942, 0.177898, 0.178042, 0.178168, 0.17375, 0.178277, 0.183039, 0.181938, 0.178103, 0.177088, 0.172552, 0.177926, 0.177955, 0.178139, 0.178506, 0.178262, 0.178152, 0.177809, 0.177949, 0.180246, 0.177916, 0.172907, 0.176803, 0.178518, 0.1779, 0.1779], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 4, 0, 1, 2, 2, 1, 0, 8, 0, 7, 6, 0, 1, 1, 1, 0, 1]': ([0.206014, 0.205899, 0.205839, 0.180535, 0.177942, 0.177898, 0.178042, 0.178168, 0.17375, 0.178277, 0.183039, 0.181938, 0.178103, 0.177088, 0.172552, 0.177926, 0.177955, 0.178139, 0.178506, 0.178262, 0.178152, 0.177809, 0.177949, 0.180246, 0.177916, 0.172907, 0.176803, 0.178518, 0.1779, 0.1779], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	28
        Max loop nest depth: 	5
        Additions: 		2152
        Multiplications: 	990
        Divisions: 		0
        Logical: 		0
        Reads: 			4065
        Writes: 		661
        Comparisons:		28
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest41.exe __orio_perftest41.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest41.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest41.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest41.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest41.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		324
        Multiplications: 	102
        Divisions: 		0
        Logical: 		0
        Reads: 			685
        Writes: 		144
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest42.exe __orio_perftest42.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest42.exe  
Program Test Output: 
{'[0, 2, 1, 0, 1, 0, 0, 1, 27, 0, 26, 13, 0, 1, 0, 1, 1, 0]' : 0.286935}
{'[0, 2, 1, 0, 1, 0, 0, 1, 27, 0, 26, 13, 0, 1, 0, 1, 1, 0]' : 0.286753}
{'[0, 2, 1, 0, 1, 0, 0, 1, 27, 0, 26, 13, 0, 1, 0, 1, 1, 0]' : 0.252338}
{'[0, 2, 1, 0, 1, 0, 0, 1, 27, 0, 26, 13, 0, 1, 0, 1, 1, 0]' : 0.246914}
{'[0, 2, 1, 0, 1, 0, 0, 1, 27, 0, 26, 13, 0, 1, 0, 1, 1, 0]' : 0.247576}
{'[0, 2, 1, 0, 1, 0, 0, 1, 27, 0, 26, 13, 0, 1, 0, 1, 1, 0]' : 0.247153}
{'[0, 2, 1, 0, 1, 0, 0, 1, 27, 0, 26, 13, 0, 1, 0, 1, 1, 0]' : 0.247609}
{'[0, 2, 1, 0, 1, 0, 0, 1, 27, 0, 26, 13, 0, 1, 0, 1, 1, 0]' : 0.246643}
{'[0, 2, 1, 0, 1, 0, 0, 1, 27, 0, 26, 13, 0, 1, 0, 1, 1, 0]' : 0.247628}
{'[0, 2, 1, 0, 1, 0, 0, 1, 27, 0, 26, 13, 0, 1, 0, 1, 1, 0]' : 0.2466}
{'[0, 2, 1, 0, 1, 0, 0, 1, 27, 0, 26, 13, 0, 1, 0, 1, 1, 0]' : 0.247752}
{'[0, 2, 1, 0, 1, 0, 0, 1, 27, 0, 26, 13, 0, 1, 0, 1, 1, 0]' : 0.247495}
{'[0, 2, 1, 0, 1, 0, 0, 1, 27, 0, 26, 13, 0, 1, 0, 1, 1, 0]' : 0.247864}
{'[0, 2, 1, 0, 1, 0, 0, 1, 27, 0, 26, 13, 0, 1, 0, 1, 1, 0]' : 0.24683}
{'[0, 2, 1, 0, 1, 0, 0, 1, 27, 0, 26, 13, 0, 1, 0, 1, 1, 0]' : 0.247236}
{'[0, 2, 1, 0, 1, 0, 0, 1, 27, 0, 26, 13, 0, 1, 0, 1, 1, 0]' : 0.246744}
{'[0, 2, 1, 0, 1, 0, 0, 1, 27, 0, 26, 13, 0, 1, 0, 1, 1, 0]' : 0.24768}
{'[0, 2, 1, 0, 1, 0, 0, 1, 27, 0, 26, 13, 0, 1, 0, 1, 1, 0]' : 0.24758}
{'[0, 2, 1, 0, 1, 0, 0, 1, 27, 0, 26, 13, 0, 1, 0, 1, 1, 0]' : 0.247575}
{'[0, 2, 1, 0, 1, 0, 0, 1, 27, 0, 26, 13, 0, 1, 0, 1, 1, 0]' : 0.246772}
{'[0, 2, 1, 0, 1, 0, 0, 1, 27, 0, 26, 13, 0, 1, 0, 1, 1, 0]' : 0.247617}
{'[0, 2, 1, 0, 1, 0, 0, 1, 27, 0, 26, 13, 0, 1, 0, 1, 1, 0]' : 0.246899}
{'[0, 2, 1, 0, 1, 0, 0, 1, 27, 0, 26, 13, 0, 1, 0, 1, 1, 0]' : 0.247612}
{'[0, 2, 1, 0, 1, 0, 0, 1, 27, 0, 26, 13, 0, 1, 0, 1, 1, 0]' : 0.247056}
{'[0, 2, 1, 0, 1, 0, 0, 1, 27, 0, 26, 13, 0, 1, 0, 1, 1, 0]' : 0.24786}
{'[0, 2, 1, 0, 1, 0, 0, 1, 27, 0, 26, 13, 0, 1, 0, 1, 1, 0]' : 0.246746}
{'[0, 2, 1, 0, 1, 0, 0, 1, 27, 0, 26, 13, 0, 1, 0, 1, 1, 0]' : 0.247937}
{'[0, 2, 1, 0, 1, 0, 0, 1, 27, 0, 26, 13, 0, 1, 0, 1, 1, 0]' : 0.254256}
{'[0, 2, 1, 0, 1, 0, 0, 1, 27, 0, 26, 13, 0, 1, 0, 1, 1, 0]' : 0.254547}
{'[0, 2, 1, 0, 1, 0, 0, 1, 27, 0, 26, 13, 0, 1, 0, 1, 1, 0]' : 0.254303}

out:
 ["{'[0, 2, 1, 0, 1, 0, 0, 1, 27, 0, 26, 13, 0, 1, 0, 1, 1, 0]' : 0.286935}", "{'[0, 2, 1, 0, 1, 0, 0, 1, 27, 0, 26, 13, 0, 1, 0, 1, 1, 0]' : 0.286753}", "{'[0, 2, 1, 0, 1, 0, 0, 1, 27, 0, 26, 13, 0, 1, 0, 1, 1, 0]' : 0.252338}", "{'[0, 2, 1, 0, 1, 0, 0, 1, 27, 0, 26, 13, 0, 1, 0, 1, 1, 0]' : 0.246914}", "{'[0, 2, 1, 0, 1, 0, 0, 1, 27, 0, 26, 13, 0, 1, 0, 1, 1, 0]' : 0.247576}", "{'[0, 2, 1, 0, 1, 0, 0, 1, 27, 0, 26, 13, 0, 1, 0, 1, 1, 0]' : 0.247153}", "{'[0, 2, 1, 0, 1, 0, 0, 1, 27, 0, 26, 13, 0, 1, 0, 1, 1, 0]' : 0.247609}", "{'[0, 2, 1, 0, 1, 0, 0, 1, 27, 0, 26, 13, 0, 1, 0, 1, 1, 0]' : 0.246643}", "{'[0, 2, 1, 0, 1, 0, 0, 1, 27, 0, 26, 13, 0, 1, 0, 1, 1, 0]' : 0.247628}", "{'[0, 2, 1, 0, 1, 0, 0, 1, 27, 0, 26, 13, 0, 1, 0, 1, 1, 0]' : 0.2466}", "{'[0, 2, 1, 0, 1, 0, 0, 1, 27, 0, 26, 13, 0, 1, 0, 1, 1, 0]' : 0.247752}", "{'[0, 2, 1, 0, 1, 0, 0, 1, 27, 0, 26, 13, 0, 1, 0, 1, 1, 0]' : 0.247495}", "{'[0, 2, 1, 0, 1, 0, 0, 1, 27, 0, 26, 13, 0, 1, 0, 1, 1, 0]' : 0.247864}", "{'[0, 2, 1, 0, 1, 0, 0, 1, 27, 0, 26, 13, 0, 1, 0, 1, 1, 0]' : 0.24683}", "{'[0, 2, 1, 0, 1, 0, 0, 1, 27, 0, 26, 13, 0, 1, 0, 1, 1, 0]' : 0.247236}", "{'[0, 2, 1, 0, 1, 0, 0, 1, 27, 0, 26, 13, 0, 1, 0, 1, 1, 0]' : 0.246744}", "{'[0, 2, 1, 0, 1, 0, 0, 1, 27, 0, 26, 13, 0, 1, 0, 1, 1, 0]' : 0.24768}", "{'[0, 2, 1, 0, 1, 0, 0, 1, 27, 0, 26, 13, 0, 1, 0, 1, 1, 0]' : 0.24758}", "{'[0, 2, 1, 0, 1, 0, 0, 1, 27, 0, 26, 13, 0, 1, 0, 1, 1, 0]' : 0.247575}", "{'[0, 2, 1, 0, 1, 0, 0, 1, 27, 0, 26, 13, 0, 1, 0, 1, 1, 0]' : 0.246772}", "{'[0, 2, 1, 0, 1, 0, 0, 1, 27, 0, 26, 13, 0, 1, 0, 1, 1, 0]' : 0.247617}", "{'[0, 2, 1, 0, 1, 0, 0, 1, 27, 0, 26, 13, 0, 1, 0, 1, 1, 0]' : 0.246899}", "{'[0, 2, 1, 0, 1, 0, 0, 1, 27, 0, 26, 13, 0, 1, 0, 1, 1, 0]' : 0.247612}", "{'[0, 2, 1, 0, 1, 0, 0, 1, 27, 0, 26, 13, 0, 1, 0, 1, 1, 0]' : 0.247056}", "{'[0, 2, 1, 0, 1, 0, 0, 1, 27, 0, 26, 13, 0, 1, 0, 1, 1, 0]' : 0.24786}", "{'[0, 2, 1, 0, 1, 0, 0, 1, 27, 0, 26, 13, 0, 1, 0, 1, 1, 0]' : 0.246746}", "{'[0, 2, 1, 0, 1, 0, 0, 1, 27, 0, 26, 13, 0, 1, 0, 1, 1, 0]' : 0.247937}", "{'[0, 2, 1, 0, 1, 0, 0, 1, 27, 0, 26, 13, 0, 1, 0, 1, 1, 0]' : 0.254256}", "{'[0, 2, 1, 0, 1, 0, 0, 1, 27, 0, 26, 13, 0, 1, 0, 1, 1, 0]' : 0.254547}", "{'[0, 2, 1, 0, 1, 0, 0, 1, 27, 0, 26, 13, 0, 1, 0, 1, 1, 0]' : 0.254303}"]
returning from 'run': {'[0, 2, 1, 0, 1, 0, 0, 1, 27, 0, 26, 13, 0, 1, 0, 1, 1, 0]': ([0.286935, 0.286753, 0.252338, 0.246914, 0.247576, 0.247153, 0.247609, 0.246643, 0.247628, 0.2466, 0.247752, 0.247495, 0.247864, 0.24683, 0.247236, 0.246744, 0.24768, 0.24758, 0.247575, 0.246772, 0.247617, 0.246899, 0.247612, 0.247056, 0.24786, 0.246746, 0.247937, 0.254256, 0.254547, 0.254303], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 1, 0, 1, 0, 0, 1, 27, 0, 26, 13, 0, 1, 0, 1, 1, 0]': ([0.286935, 0.286753, 0.252338, 0.246914, 0.247576, 0.247153, 0.247609, 0.246643, 0.247628, 0.2466, 0.247752, 0.247495, 0.247864, 0.24683, 0.247236, 0.246744, 0.24768, 0.24758, 0.247575, 0.246772, 0.247617, 0.246899, 0.247612, 0.247056, 0.24786, 0.246746, 0.247937, 0.254256, 0.254547, 0.254303], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	6
        Additions: 		131
        Multiplications: 	32
        Divisions: 		0
        Logical: 		0
        Reads: 			286
        Writes: 		47
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest43.exe __orio_perftest43.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest43.exe  
Program Test Output: 
{'[3, 6, 2, 4, 6, 2, 1, 1, 0, 0, 29, 27, 0, 1, 1, 0, 0, 0]' : 0.315233}
{'[3, 6, 2, 4, 6, 2, 1, 1, 0, 0, 29, 27, 0, 1, 1, 0, 0, 0]' : 0.31612}
{'[3, 6, 2, 4, 6, 2, 1, 1, 0, 0, 29, 27, 0, 1, 1, 0, 0, 0]' : 0.315906}
{'[3, 6, 2, 4, 6, 2, 1, 1, 0, 0, 29, 27, 0, 1, 1, 0, 0, 0]' : 0.315886}
{'[3, 6, 2, 4, 6, 2, 1, 1, 0, 0, 29, 27, 0, 1, 1, 0, 0, 0]' : 0.315949}
{'[3, 6, 2, 4, 6, 2, 1, 1, 0, 0, 29, 27, 0, 1, 1, 0, 0, 0]' : 0.315946}
{'[3, 6, 2, 4, 6, 2, 1, 1, 0, 0, 29, 27, 0, 1, 1, 0, 0, 0]' : 0.313969}
{'[3, 6, 2, 4, 6, 2, 1, 1, 0, 0, 29, 27, 0, 1, 1, 0, 0, 0]' : 0.316064}
{'[3, 6, 2, 4, 6, 2, 1, 1, 0, 0, 29, 27, 0, 1, 1, 0, 0, 0]' : 0.316001}
{'[3, 6, 2, 4, 6, 2, 1, 1, 0, 0, 29, 27, 0, 1, 1, 0, 0, 0]' : 0.315905}
{'[3, 6, 2, 4, 6, 2, 1, 1, 0, 0, 29, 27, 0, 1, 1, 0, 0, 0]' : 0.315893}
{'[3, 6, 2, 4, 6, 2, 1, 1, 0, 0, 29, 27, 0, 1, 1, 0, 0, 0]' : 0.315891}
{'[3, 6, 2, 4, 6, 2, 1, 1, 0, 0, 29, 27, 0, 1, 1, 0, 0, 0]' : 0.316019}
{'[3, 6, 2, 4, 6, 2, 1, 1, 0, 0, 29, 27, 0, 1, 1, 0, 0, 0]' : 0.316044}
{'[3, 6, 2, 4, 6, 2, 1, 1, 0, 0, 29, 27, 0, 1, 1, 0, 0, 0]' : 0.315913}
{'[3, 6, 2, 4, 6, 2, 1, 1, 0, 0, 29, 27, 0, 1, 1, 0, 0, 0]' : 0.315967}
{'[3, 6, 2, 4, 6, 2, 1, 1, 0, 0, 29, 27, 0, 1, 1, 0, 0, 0]' : 0.3159}
{'[3, 6, 2, 4, 6, 2, 1, 1, 0, 0, 29, 27, 0, 1, 1, 0, 0, 0]' : 0.315949}
{'[3, 6, 2, 4, 6, 2, 1, 1, 0, 0, 29, 27, 0, 1, 1, 0, 0, 0]' : 0.314984}
{'[3, 6, 2, 4, 6, 2, 1, 1, 0, 0, 29, 27, 0, 1, 1, 0, 0, 0]' : 0.314967}
{'[3, 6, 2, 4, 6, 2, 1, 1, 0, 0, 29, 27, 0, 1, 1, 0, 0, 0]' : 0.316129}
{'[3, 6, 2, 4, 6, 2, 1, 1, 0, 0, 29, 27, 0, 1, 1, 0, 0, 0]' : 0.315847}
{'[3, 6, 2, 4, 6, 2, 1, 1, 0, 0, 29, 27, 0, 1, 1, 0, 0, 0]' : 0.315963}
{'[3, 6, 2, 4, 6, 2, 1, 1, 0, 0, 29, 27, 0, 1, 1, 0, 0, 0]' : 0.315933}
{'[3, 6, 2, 4, 6, 2, 1, 1, 0, 0, 29, 27, 0, 1, 1, 0, 0, 0]' : 0.315821}
{'[3, 6, 2, 4, 6, 2, 1, 1, 0, 0, 29, 27, 0, 1, 1, 0, 0, 0]' : 0.315956}
{'[3, 6, 2, 4, 6, 2, 1, 1, 0, 0, 29, 27, 0, 1, 1, 0, 0, 0]' : 0.316071}
{'[3, 6, 2, 4, 6, 2, 1, 1, 0, 0, 29, 27, 0, 1, 1, 0, 0, 0]' : 0.315987}
{'[3, 6, 2, 4, 6, 2, 1, 1, 0, 0, 29, 27, 0, 1, 1, 0, 0, 0]' : 0.315888}
{'[3, 6, 2, 4, 6, 2, 1, 1, 0, 0, 29, 27, 0, 1, 1, 0, 0, 0]' : 0.31589}

out:
 ["{'[3, 6, 2, 4, 6, 2, 1, 1, 0, 0, 29, 27, 0, 1, 1, 0, 0, 0]' : 0.315233}", "{'[3, 6, 2, 4, 6, 2, 1, 1, 0, 0, 29, 27, 0, 1, 1, 0, 0, 0]' : 0.31612}", "{'[3, 6, 2, 4, 6, 2, 1, 1, 0, 0, 29, 27, 0, 1, 1, 0, 0, 0]' : 0.315906}", "{'[3, 6, 2, 4, 6, 2, 1, 1, 0, 0, 29, 27, 0, 1, 1, 0, 0, 0]' : 0.315886}", "{'[3, 6, 2, 4, 6, 2, 1, 1, 0, 0, 29, 27, 0, 1, 1, 0, 0, 0]' : 0.315949}", "{'[3, 6, 2, 4, 6, 2, 1, 1, 0, 0, 29, 27, 0, 1, 1, 0, 0, 0]' : 0.315946}", "{'[3, 6, 2, 4, 6, 2, 1, 1, 0, 0, 29, 27, 0, 1, 1, 0, 0, 0]' : 0.313969}", "{'[3, 6, 2, 4, 6, 2, 1, 1, 0, 0, 29, 27, 0, 1, 1, 0, 0, 0]' : 0.316064}", "{'[3, 6, 2, 4, 6, 2, 1, 1, 0, 0, 29, 27, 0, 1, 1, 0, 0, 0]' : 0.316001}", "{'[3, 6, 2, 4, 6, 2, 1, 1, 0, 0, 29, 27, 0, 1, 1, 0, 0, 0]' : 0.315905}", "{'[3, 6, 2, 4, 6, 2, 1, 1, 0, 0, 29, 27, 0, 1, 1, 0, 0, 0]' : 0.315893}", "{'[3, 6, 2, 4, 6, 2, 1, 1, 0, 0, 29, 27, 0, 1, 1, 0, 0, 0]' : 0.315891}", "{'[3, 6, 2, 4, 6, 2, 1, 1, 0, 0, 29, 27, 0, 1, 1, 0, 0, 0]' : 0.316019}", "{'[3, 6, 2, 4, 6, 2, 1, 1, 0, 0, 29, 27, 0, 1, 1, 0, 0, 0]' : 0.316044}", "{'[3, 6, 2, 4, 6, 2, 1, 1, 0, 0, 29, 27, 0, 1, 1, 0, 0, 0]' : 0.315913}", "{'[3, 6, 2, 4, 6, 2, 1, 1, 0, 0, 29, 27, 0, 1, 1, 0, 0, 0]' : 0.315967}", "{'[3, 6, 2, 4, 6, 2, 1, 1, 0, 0, 29, 27, 0, 1, 1, 0, 0, 0]' : 0.3159}", "{'[3, 6, 2, 4, 6, 2, 1, 1, 0, 0, 29, 27, 0, 1, 1, 0, 0, 0]' : 0.315949}", "{'[3, 6, 2, 4, 6, 2, 1, 1, 0, 0, 29, 27, 0, 1, 1, 0, 0, 0]' : 0.314984}", "{'[3, 6, 2, 4, 6, 2, 1, 1, 0, 0, 29, 27, 0, 1, 1, 0, 0, 0]' : 0.314967}", "{'[3, 6, 2, 4, 6, 2, 1, 1, 0, 0, 29, 27, 0, 1, 1, 0, 0, 0]' : 0.316129}", "{'[3, 6, 2, 4, 6, 2, 1, 1, 0, 0, 29, 27, 0, 1, 1, 0, 0, 0]' : 0.315847}", "{'[3, 6, 2, 4, 6, 2, 1, 1, 0, 0, 29, 27, 0, 1, 1, 0, 0, 0]' : 0.315963}", "{'[3, 6, 2, 4, 6, 2, 1, 1, 0, 0, 29, 27, 0, 1, 1, 0, 0, 0]' : 0.315933}", "{'[3, 6, 2, 4, 6, 2, 1, 1, 0, 0, 29, 27, 0, 1, 1, 0, 0, 0]' : 0.315821}", "{'[3, 6, 2, 4, 6, 2, 1, 1, 0, 0, 29, 27, 0, 1, 1, 0, 0, 0]' : 0.315956}", "{'[3, 6, 2, 4, 6, 2, 1, 1, 0, 0, 29, 27, 0, 1, 1, 0, 0, 0]' : 0.316071}", "{'[3, 6, 2, 4, 6, 2, 1, 1, 0, 0, 29, 27, 0, 1, 1, 0, 0, 0]' : 0.315987}", "{'[3, 6, 2, 4, 6, 2, 1, 1, 0, 0, 29, 27, 0, 1, 1, 0, 0, 0]' : 0.315888}", "{'[3, 6, 2, 4, 6, 2, 1, 1, 0, 0, 29, 27, 0, 1, 1, 0, 0, 0]' : 0.31589}"]
returning from 'run': {'[3, 6, 2, 4, 6, 2, 1, 1, 0, 0, 29, 27, 0, 1, 1, 0, 0, 0]': ([0.315233, 0.31612, 0.315906, 0.315886, 0.315949, 0.315946, 0.313969, 0.316064, 0.316001, 0.315905, 0.315893, 0.315891, 0.316019, 0.316044, 0.315913, 0.315967, 0.3159, 0.315949, 0.314984, 0.314967, 0.316129, 0.315847, 0.315963, 0.315933, 0.315821, 0.315956, 0.316071, 0.315987, 0.315888, 0.31589], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 6, 2, 4, 6, 2, 1, 1, 0, 0, 29, 27, 0, 1, 1, 0, 0, 0]': ([0.315233, 0.31612, 0.315906, 0.315886, 0.315949, 0.315946, 0.313969, 0.316064, 0.316001, 0.315905, 0.315893, 0.315891, 0.316019, 0.316044, 0.315913, 0.315967, 0.3159, 0.315949, 0.314984, 0.314967, 0.316129, 0.315847, 0.315963, 0.315933, 0.315821, 0.315956, 0.316071, 0.315987, 0.315888, 0.31589], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	6
        Additions: 		1671
        Multiplications: 	522
        Divisions: 		0
        Logical: 		0
        Reads: 			2828
        Writes: 		343
        Comparisons:		18
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest44.exe __orio_perftest44.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest44.exe  
Program Test Output: 
{'[3, 1, 1, 6, 4, 0, 0, 0, 7, 27, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.166521}
{'[3, 1, 1, 6, 4, 0, 0, 0, 7, 27, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.165933}
{'[3, 1, 1, 6, 4, 0, 0, 0, 7, 27, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.16541}
{'[3, 1, 1, 6, 4, 0, 0, 0, 7, 27, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.165707}
{'[3, 1, 1, 6, 4, 0, 0, 0, 7, 27, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.165956}
{'[3, 1, 1, 6, 4, 0, 0, 0, 7, 27, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.16587}
{'[3, 1, 1, 6, 4, 0, 0, 0, 7, 27, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.165621}
{'[3, 1, 1, 6, 4, 0, 0, 0, 7, 27, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.166095}
{'[3, 1, 1, 6, 4, 0, 0, 0, 7, 27, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.165444}
{'[3, 1, 1, 6, 4, 0, 0, 0, 7, 27, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.166513}
{'[3, 1, 1, 6, 4, 0, 0, 0, 7, 27, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.165823}
{'[3, 1, 1, 6, 4, 0, 0, 0, 7, 27, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.165576}
{'[3, 1, 1, 6, 4, 0, 0, 0, 7, 27, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.166114}
{'[3, 1, 1, 6, 4, 0, 0, 0, 7, 27, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.166286}
{'[3, 1, 1, 6, 4, 0, 0, 0, 7, 27, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.165474}
{'[3, 1, 1, 6, 4, 0, 0, 0, 7, 27, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.165649}
{'[3, 1, 1, 6, 4, 0, 0, 0, 7, 27, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.165965}
{'[3, 1, 1, 6, 4, 0, 0, 0, 7, 27, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.165499}
{'[3, 1, 1, 6, 4, 0, 0, 0, 7, 27, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.166548}
{'[3, 1, 1, 6, 4, 0, 0, 0, 7, 27, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.166534}
{'[3, 1, 1, 6, 4, 0, 0, 0, 7, 27, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.16553}
{'[3, 1, 1, 6, 4, 0, 0, 0, 7, 27, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.16548}
{'[3, 1, 1, 6, 4, 0, 0, 0, 7, 27, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.166559}
{'[3, 1, 1, 6, 4, 0, 0, 0, 7, 27, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.16547}
{'[3, 1, 1, 6, 4, 0, 0, 0, 7, 27, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.165858}
{'[3, 1, 1, 6, 4, 0, 0, 0, 7, 27, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.165932}
{'[3, 1, 1, 6, 4, 0, 0, 0, 7, 27, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.165536}
{'[3, 1, 1, 6, 4, 0, 0, 0, 7, 27, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.166222}
{'[3, 1, 1, 6, 4, 0, 0, 0, 7, 27, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.165811}
{'[3, 1, 1, 6, 4, 0, 0, 0, 7, 27, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.165645}

out:
 ["{'[3, 1, 1, 6, 4, 0, 0, 0, 7, 27, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.166521}", "{'[3, 1, 1, 6, 4, 0, 0, 0, 7, 27, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.165933}", "{'[3, 1, 1, 6, 4, 0, 0, 0, 7, 27, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.16541}", "{'[3, 1, 1, 6, 4, 0, 0, 0, 7, 27, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.165707}", "{'[3, 1, 1, 6, 4, 0, 0, 0, 7, 27, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.165956}", "{'[3, 1, 1, 6, 4, 0, 0, 0, 7, 27, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.16587}", "{'[3, 1, 1, 6, 4, 0, 0, 0, 7, 27, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.165621}", "{'[3, 1, 1, 6, 4, 0, 0, 0, 7, 27, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.166095}", "{'[3, 1, 1, 6, 4, 0, 0, 0, 7, 27, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.165444}", "{'[3, 1, 1, 6, 4, 0, 0, 0, 7, 27, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.166513}", "{'[3, 1, 1, 6, 4, 0, 0, 0, 7, 27, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.165823}", "{'[3, 1, 1, 6, 4, 0, 0, 0, 7, 27, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.165576}", "{'[3, 1, 1, 6, 4, 0, 0, 0, 7, 27, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.166114}", "{'[3, 1, 1, 6, 4, 0, 0, 0, 7, 27, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.166286}", "{'[3, 1, 1, 6, 4, 0, 0, 0, 7, 27, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.165474}", "{'[3, 1, 1, 6, 4, 0, 0, 0, 7, 27, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.165649}", "{'[3, 1, 1, 6, 4, 0, 0, 0, 7, 27, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.165965}", "{'[3, 1, 1, 6, 4, 0, 0, 0, 7, 27, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.165499}", "{'[3, 1, 1, 6, 4, 0, 0, 0, 7, 27, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.166548}", "{'[3, 1, 1, 6, 4, 0, 0, 0, 7, 27, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.166534}", "{'[3, 1, 1, 6, 4, 0, 0, 0, 7, 27, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.16553}", "{'[3, 1, 1, 6, 4, 0, 0, 0, 7, 27, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.16548}", "{'[3, 1, 1, 6, 4, 0, 0, 0, 7, 27, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.166559}", "{'[3, 1, 1, 6, 4, 0, 0, 0, 7, 27, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.16547}", "{'[3, 1, 1, 6, 4, 0, 0, 0, 7, 27, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.165858}", "{'[3, 1, 1, 6, 4, 0, 0, 0, 7, 27, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.165932}", "{'[3, 1, 1, 6, 4, 0, 0, 0, 7, 27, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.165536}", "{'[3, 1, 1, 6, 4, 0, 0, 0, 7, 27, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.166222}", "{'[3, 1, 1, 6, 4, 0, 0, 0, 7, 27, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.165811}", "{'[3, 1, 1, 6, 4, 0, 0, 0, 7, 27, 0, 6, 0, 0, 0, 0, 0, 1]' : 0.165645}"]
returning from 'run': {'[3, 1, 1, 6, 4, 0, 0, 0, 7, 27, 0, 6, 0, 0, 0, 0, 0, 1]': ([0.166521, 0.165933, 0.16541, 0.165707, 0.165956, 0.16587, 0.165621, 0.166095, 0.165444, 0.166513, 0.165823, 0.165576, 0.166114, 0.166286, 0.165474, 0.165649, 0.165965, 0.165499, 0.166548, 0.166534, 0.16553, 0.16548, 0.166559, 0.16547, 0.165858, 0.165932, 0.165536, 0.166222, 0.165811, 0.165645], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 1, 1, 6, 4, 0, 0, 0, 7, 27, 0, 6, 0, 0, 0, 0, 0, 1]': ([0.166521, 0.165933, 0.16541, 0.165707, 0.165956, 0.16587, 0.165621, 0.166095, 0.165444, 0.166513, 0.165823, 0.165576, 0.166114, 0.166286, 0.165474, 0.165649, 0.165965, 0.165499, 0.166548, 0.166534, 0.16553, 0.16548, 0.166559, 0.16547, 0.165858, 0.165932, 0.165536, 0.166222, 0.165811, 0.165645], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	26
        Max loop nest depth: 	4
        Additions: 		6436
        Multiplications: 	1924
        Divisions: 		0
        Logical: 		0
        Reads: 			9907
        Writes: 		1039
        Comparisons:		26
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest45.exe __orio_perftest45.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest45.exe  
Program Test Output: 
{'[4, 4, 6, 0, 0, 0, 1, 0, 0, 3, 0, 23, 2, 0, 0, 0, 0, 1]' : 0.215135}
{'[4, 4, 6, 0, 0, 0, 1, 0, 0, 3, 0, 23, 2, 0, 0, 0, 0, 1]' : 0.215075}
{'[4, 4, 6, 0, 0, 0, 1, 0, 0, 3, 0, 23, 2, 0, 0, 0, 0, 1]' : 0.19593}
{'[4, 4, 6, 0, 0, 0, 1, 0, 0, 3, 0, 23, 2, 0, 0, 0, 0, 1]' : 0.192822}
{'[4, 4, 6, 0, 0, 0, 1, 0, 0, 3, 0, 23, 2, 0, 0, 0, 0, 1]' : 0.192785}
{'[4, 4, 6, 0, 0, 0, 1, 0, 0, 3, 0, 23, 2, 0, 0, 0, 0, 1]' : 0.192644}
{'[4, 4, 6, 0, 0, 0, 1, 0, 0, 3, 0, 23, 2, 0, 0, 0, 0, 1]' : 0.192864}
{'[4, 4, 6, 0, 0, 0, 1, 0, 0, 3, 0, 23, 2, 0, 0, 0, 0, 1]' : 0.195203}
{'[4, 4, 6, 0, 0, 0, 1, 0, 0, 3, 0, 23, 2, 0, 0, 0, 0, 1]' : 0.193212}
{'[4, 4, 6, 0, 0, 0, 1, 0, 0, 3, 0, 23, 2, 0, 0, 0, 0, 1]' : 0.193686}
{'[4, 4, 6, 0, 0, 0, 1, 0, 0, 3, 0, 23, 2, 0, 0, 0, 0, 1]' : 0.192827}
{'[4, 4, 6, 0, 0, 0, 1, 0, 0, 3, 0, 23, 2, 0, 0, 0, 0, 1]' : 0.193228}
{'[4, 4, 6, 0, 0, 0, 1, 0, 0, 3, 0, 23, 2, 0, 0, 0, 0, 1]' : 0.195613}
{'[4, 4, 6, 0, 0, 0, 1, 0, 0, 3, 0, 23, 2, 0, 0, 0, 0, 1]' : 0.197317}
{'[4, 4, 6, 0, 0, 0, 1, 0, 0, 3, 0, 23, 2, 0, 0, 0, 0, 1]' : 0.196835}
{'[4, 4, 6, 0, 0, 0, 1, 0, 0, 3, 0, 23, 2, 0, 0, 0, 0, 1]' : 0.19589}
{'[4, 4, 6, 0, 0, 0, 1, 0, 0, 3, 0, 23, 2, 0, 0, 0, 0, 1]' : 0.193844}
{'[4, 4, 6, 0, 0, 0, 1, 0, 0, 3, 0, 23, 2, 0, 0, 0, 0, 1]' : 0.193832}
{'[4, 4, 6, 0, 0, 0, 1, 0, 0, 3, 0, 23, 2, 0, 0, 0, 0, 1]' : 0.194663}
{'[4, 4, 6, 0, 0, 0, 1, 0, 0, 3, 0, 23, 2, 0, 0, 0, 0, 1]' : 0.194143}
{'[4, 4, 6, 0, 0, 0, 1, 0, 0, 3, 0, 23, 2, 0, 0, 0, 0, 1]' : 0.193566}
{'[4, 4, 6, 0, 0, 0, 1, 0, 0, 3, 0, 23, 2, 0, 0, 0, 0, 1]' : 0.193415}
{'[4, 4, 6, 0, 0, 0, 1, 0, 0, 3, 0, 23, 2, 0, 0, 0, 0, 1]' : 0.194505}
{'[4, 4, 6, 0, 0, 0, 1, 0, 0, 3, 0, 23, 2, 0, 0, 0, 0, 1]' : 0.194955}
{'[4, 4, 6, 0, 0, 0, 1, 0, 0, 3, 0, 23, 2, 0, 0, 0, 0, 1]' : 0.193741}
{'[4, 4, 6, 0, 0, 0, 1, 0, 0, 3, 0, 23, 2, 0, 0, 0, 0, 1]' : 0.196536}
{'[4, 4, 6, 0, 0, 0, 1, 0, 0, 3, 0, 23, 2, 0, 0, 0, 0, 1]' : 0.197909}
{'[4, 4, 6, 0, 0, 0, 1, 0, 0, 3, 0, 23, 2, 0, 0, 0, 0, 1]' : 0.196871}
{'[4, 4, 6, 0, 0, 0, 1, 0, 0, 3, 0, 23, 2, 0, 0, 0, 0, 1]' : 0.194347}
{'[4, 4, 6, 0, 0, 0, 1, 0, 0, 3, 0, 23, 2, 0, 0, 0, 0, 1]' : 0.193569}

out:
 ["{'[4, 4, 6, 0, 0, 0, 1, 0, 0, 3, 0, 23, 2, 0, 0, 0, 0, 1]' : 0.215135}", "{'[4, 4, 6, 0, 0, 0, 1, 0, 0, 3, 0, 23, 2, 0, 0, 0, 0, 1]' : 0.215075}", "{'[4, 4, 6, 0, 0, 0, 1, 0, 0, 3, 0, 23, 2, 0, 0, 0, 0, 1]' : 0.19593}", "{'[4, 4, 6, 0, 0, 0, 1, 0, 0, 3, 0, 23, 2, 0, 0, 0, 0, 1]' : 0.192822}", "{'[4, 4, 6, 0, 0, 0, 1, 0, 0, 3, 0, 23, 2, 0, 0, 0, 0, 1]' : 0.192785}", "{'[4, 4, 6, 0, 0, 0, 1, 0, 0, 3, 0, 23, 2, 0, 0, 0, 0, 1]' : 0.192644}", "{'[4, 4, 6, 0, 0, 0, 1, 0, 0, 3, 0, 23, 2, 0, 0, 0, 0, 1]' : 0.192864}", "{'[4, 4, 6, 0, 0, 0, 1, 0, 0, 3, 0, 23, 2, 0, 0, 0, 0, 1]' : 0.195203}", "{'[4, 4, 6, 0, 0, 0, 1, 0, 0, 3, 0, 23, 2, 0, 0, 0, 0, 1]' : 0.193212}", "{'[4, 4, 6, 0, 0, 0, 1, 0, 0, 3, 0, 23, 2, 0, 0, 0, 0, 1]' : 0.193686}", "{'[4, 4, 6, 0, 0, 0, 1, 0, 0, 3, 0, 23, 2, 0, 0, 0, 0, 1]' : 0.192827}", "{'[4, 4, 6, 0, 0, 0, 1, 0, 0, 3, 0, 23, 2, 0, 0, 0, 0, 1]' : 0.193228}", "{'[4, 4, 6, 0, 0, 0, 1, 0, 0, 3, 0, 23, 2, 0, 0, 0, 0, 1]' : 0.195613}", "{'[4, 4, 6, 0, 0, 0, 1, 0, 0, 3, 0, 23, 2, 0, 0, 0, 0, 1]' : 0.197317}", "{'[4, 4, 6, 0, 0, 0, 1, 0, 0, 3, 0, 23, 2, 0, 0, 0, 0, 1]' : 0.196835}", "{'[4, 4, 6, 0, 0, 0, 1, 0, 0, 3, 0, 23, 2, 0, 0, 0, 0, 1]' : 0.19589}", "{'[4, 4, 6, 0, 0, 0, 1, 0, 0, 3, 0, 23, 2, 0, 0, 0, 0, 1]' : 0.193844}", "{'[4, 4, 6, 0, 0, 0, 1, 0, 0, 3, 0, 23, 2, 0, 0, 0, 0, 1]' : 0.193832}", "{'[4, 4, 6, 0, 0, 0, 1, 0, 0, 3, 0, 23, 2, 0, 0, 0, 0, 1]' : 0.194663}", "{'[4, 4, 6, 0, 0, 0, 1, 0, 0, 3, 0, 23, 2, 0, 0, 0, 0, 1]' : 0.194143}", "{'[4, 4, 6, 0, 0, 0, 1, 0, 0, 3, 0, 23, 2, 0, 0, 0, 0, 1]' : 0.193566}", "{'[4, 4, 6, 0, 0, 0, 1, 0, 0, 3, 0, 23, 2, 0, 0, 0, 0, 1]' : 0.193415}", "{'[4, 4, 6, 0, 0, 0, 1, 0, 0, 3, 0, 23, 2, 0, 0, 0, 0, 1]' : 0.194505}", "{'[4, 4, 6, 0, 0, 0, 1, 0, 0, 3, 0, 23, 2, 0, 0, 0, 0, 1]' : 0.194955}", "{'[4, 4, 6, 0, 0, 0, 1, 0, 0, 3, 0, 23, 2, 0, 0, 0, 0, 1]' : 0.193741}", "{'[4, 4, 6, 0, 0, 0, 1, 0, 0, 3, 0, 23, 2, 0, 0, 0, 0, 1]' : 0.196536}", "{'[4, 4, 6, 0, 0, 0, 1, 0, 0, 3, 0, 23, 2, 0, 0, 0, 0, 1]' : 0.197909}", "{'[4, 4, 6, 0, 0, 0, 1, 0, 0, 3, 0, 23, 2, 0, 0, 0, 0, 1]' : 0.196871}", "{'[4, 4, 6, 0, 0, 0, 1, 0, 0, 3, 0, 23, 2, 0, 0, 0, 0, 1]' : 0.194347}", "{'[4, 4, 6, 0, 0, 0, 1, 0, 0, 3, 0, 23, 2, 0, 0, 0, 0, 1]' : 0.193569}"]
returning from 'run': {'[4, 4, 6, 0, 0, 0, 1, 0, 0, 3, 0, 23, 2, 0, 0, 0, 0, 1]': ([0.215135, 0.215075, 0.19593, 0.192822, 0.192785, 0.192644, 0.192864, 0.195203, 0.193212, 0.193686, 0.192827, 0.193228, 0.195613, 0.197317, 0.196835, 0.19589, 0.193844, 0.193832, 0.194663, 0.194143, 0.193566, 0.193415, 0.194505, 0.194955, 0.193741, 0.196536, 0.197909, 0.196871, 0.194347, 0.193569], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 4, 6, 0, 0, 0, 1, 0, 0, 3, 0, 23, 2, 0, 0, 0, 0, 1]': ([0.215135, 0.215075, 0.19593, 0.192822, 0.192785, 0.192644, 0.192864, 0.195203, 0.193212, 0.193686, 0.192827, 0.193228, 0.195613, 0.197317, 0.196835, 0.19589, 0.193844, 0.193832, 0.194663, 0.194143, 0.193566, 0.193415, 0.194505, 0.194955, 0.193741, 0.196536, 0.197909, 0.196871, 0.194347, 0.193569], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	4
        Additions: 		583
        Multiplications: 	162
        Divisions: 		0
        Logical: 		0
        Reads: 			986
        Writes: 		115
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest46.exe __orio_perftest46.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest46.exe  
Program Test Output: 
{'[0, 1, 1, 4, 0, 0, 1, 0, 0, 0, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.139764}
{'[0, 1, 1, 4, 0, 0, 1, 0, 0, 0, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.139489}
{'[0, 1, 1, 4, 0, 0, 1, 0, 0, 0, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.1385}
{'[0, 1, 1, 4, 0, 0, 1, 0, 0, 0, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.125005}
{'[0, 1, 1, 4, 0, 0, 1, 0, 0, 0, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.121954}
{'[0, 1, 1, 4, 0, 0, 1, 0, 0, 0, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.117883}
{'[0, 1, 1, 4, 0, 0, 1, 0, 0, 0, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.117363}
{'[0, 1, 1, 4, 0, 0, 1, 0, 0, 0, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.120421}
{'[0, 1, 1, 4, 0, 0, 1, 0, 0, 0, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.121184}
{'[0, 1, 1, 4, 0, 0, 1, 0, 0, 0, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.120944}
{'[0, 1, 1, 4, 0, 0, 1, 0, 0, 0, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.117375}
{'[0, 1, 1, 4, 0, 0, 1, 0, 0, 0, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.123073}
{'[0, 1, 1, 4, 0, 0, 1, 0, 0, 0, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.120441}
{'[0, 1, 1, 4, 0, 0, 1, 0, 0, 0, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.117755}
{'[0, 1, 1, 4, 0, 0, 1, 0, 0, 0, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.117778}
{'[0, 1, 1, 4, 0, 0, 1, 0, 0, 0, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.119099}
{'[0, 1, 1, 4, 0, 0, 1, 0, 0, 0, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.121233}
{'[0, 1, 1, 4, 0, 0, 1, 0, 0, 0, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.120967}
{'[0, 1, 1, 4, 0, 0, 1, 0, 0, 0, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.120927}
{'[0, 1, 1, 4, 0, 0, 1, 0, 0, 0, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.122164}
{'[0, 1, 1, 4, 0, 0, 1, 0, 0, 0, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.124589}
{'[0, 1, 1, 4, 0, 0, 1, 0, 0, 0, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.124499}
{'[0, 1, 1, 4, 0, 0, 1, 0, 0, 0, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.122482}
{'[0, 1, 1, 4, 0, 0, 1, 0, 0, 0, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.122194}
{'[0, 1, 1, 4, 0, 0, 1, 0, 0, 0, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.124277}
{'[0, 1, 1, 4, 0, 0, 1, 0, 0, 0, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.121054}
{'[0, 1, 1, 4, 0, 0, 1, 0, 0, 0, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.120859}
{'[0, 1, 1, 4, 0, 0, 1, 0, 0, 0, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.121376}
{'[0, 1, 1, 4, 0, 0, 1, 0, 0, 0, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.123345}
{'[0, 1, 1, 4, 0, 0, 1, 0, 0, 0, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.124492}

out:
 ["{'[0, 1, 1, 4, 0, 0, 1, 0, 0, 0, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.139764}", "{'[0, 1, 1, 4, 0, 0, 1, 0, 0, 0, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.139489}", "{'[0, 1, 1, 4, 0, 0, 1, 0, 0, 0, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.1385}", "{'[0, 1, 1, 4, 0, 0, 1, 0, 0, 0, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.125005}", "{'[0, 1, 1, 4, 0, 0, 1, 0, 0, 0, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.121954}", "{'[0, 1, 1, 4, 0, 0, 1, 0, 0, 0, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.117883}", "{'[0, 1, 1, 4, 0, 0, 1, 0, 0, 0, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.117363}", "{'[0, 1, 1, 4, 0, 0, 1, 0, 0, 0, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.120421}", "{'[0, 1, 1, 4, 0, 0, 1, 0, 0, 0, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.121184}", "{'[0, 1, 1, 4, 0, 0, 1, 0, 0, 0, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.120944}", "{'[0, 1, 1, 4, 0, 0, 1, 0, 0, 0, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.117375}", "{'[0, 1, 1, 4, 0, 0, 1, 0, 0, 0, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.123073}", "{'[0, 1, 1, 4, 0, 0, 1, 0, 0, 0, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.120441}", "{'[0, 1, 1, 4, 0, 0, 1, 0, 0, 0, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.117755}", "{'[0, 1, 1, 4, 0, 0, 1, 0, 0, 0, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.117778}", "{'[0, 1, 1, 4, 0, 0, 1, 0, 0, 0, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.119099}", "{'[0, 1, 1, 4, 0, 0, 1, 0, 0, 0, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.121233}", "{'[0, 1, 1, 4, 0, 0, 1, 0, 0, 0, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.120967}", "{'[0, 1, 1, 4, 0, 0, 1, 0, 0, 0, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.120927}", "{'[0, 1, 1, 4, 0, 0, 1, 0, 0, 0, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.122164}", "{'[0, 1, 1, 4, 0, 0, 1, 0, 0, 0, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.124589}", "{'[0, 1, 1, 4, 0, 0, 1, 0, 0, 0, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.124499}", "{'[0, 1, 1, 4, 0, 0, 1, 0, 0, 0, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.122482}", "{'[0, 1, 1, 4, 0, 0, 1, 0, 0, 0, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.122194}", "{'[0, 1, 1, 4, 0, 0, 1, 0, 0, 0, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.124277}", "{'[0, 1, 1, 4, 0, 0, 1, 0, 0, 0, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.121054}", "{'[0, 1, 1, 4, 0, 0, 1, 0, 0, 0, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.120859}", "{'[0, 1, 1, 4, 0, 0, 1, 0, 0, 0, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.121376}", "{'[0, 1, 1, 4, 0, 0, 1, 0, 0, 0, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.123345}", "{'[0, 1, 1, 4, 0, 0, 1, 0, 0, 0, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.124492}"]
returning from 'run': {'[0, 1, 1, 4, 0, 0, 1, 0, 0, 0, 2, 0, 1, 1, 0, 0, 1, 0]': ([0.139764, 0.139489, 0.1385, 0.125005, 0.121954, 0.117883, 0.117363, 0.120421, 0.121184, 0.120944, 0.117375, 0.123073, 0.120441, 0.117755, 0.117778, 0.119099, 0.121233, 0.120967, 0.120927, 0.122164, 0.124589, 0.124499, 0.122482, 0.122194, 0.124277, 0.121054, 0.120859, 0.121376, 0.123345, 0.124492], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 1, 1, 4, 0, 0, 1, 0, 0, 0, 2, 0, 1, 1, 0, 0, 1, 0]': ([0.139764, 0.139489, 0.1385, 0.125005, 0.121954, 0.117883, 0.117363, 0.120421, 0.121184, 0.120944, 0.117375, 0.123073, 0.120441, 0.117755, 0.117778, 0.119099, 0.121233, 0.120967, 0.120927, 0.122164, 0.124589, 0.124499, 0.122482, 0.122194, 0.124277, 0.121054, 0.120859, 0.121376, 0.123345, 0.124492], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Complete design, with measurements:
     T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
52      6    3    2    6    0    0       0       0    1   2  24   0    2    0
310     3    6    1    3    6    0       0       1    6  23   0  28    1    1
392     6    1    0    6    0    1       0       1   20  10   0  21    1    0
457     4    1    1    4    0    6       1       1    0  10   5   0    0    0
551     3    1    6    6    3    6       0       0   29   9   0   6    1    1
658     6    0    3    0    3    0       0       0    2   6   0  10    0    1
901     1    4    3    0    2    5       0       0   27   0   0  28    0    2
942     0    5    1    0    0    1       1       0   26  29  26   0    1    0
954     6    2    4    4    1    3       0       1    1   0   0   0    0    0
974     0    3    6    4    6    0       0       1    0   0   5  29    2    0
992     0    0    2    2    5    5       0       0    0   8  21   0    0    2
1226    0    4    3    0    0    6       1       1   12   2   1   0    0    1
1265    1    2    0    4    2    6       0       0    0  29   0  29    0    0
1375    1    1    3    1    6    1       1       0    9   3   0  29    0    0
1385    0    5    0    4    3    6       1       0    9   0  27  28    0    0
1591    0    6    0    1    0    0       0       0    8  12  29   0    1    0
2024    2    0    4    2    3    2       0       1   29   3  16   0    1    0
2045    2    1    0    3    0    1       0       0   28  18   0   4    0    0
2072    1    0    0    0    6    1       1       1   16   0  27   8    2    0
2090    0    6    6    3    6    6       1       0    3   0   6   7    0    0
2261    3    2    1    1    3    3       1       1    4  22   6   0    2    0
2337    0    0    3    6    4    5       1       0   28  24   0   0    2    0
2401    6    1    6    0    6    6       0       0    9  25   0  21    0    0
2616    1    0    4    0    1    3       0       1    3  29  23   0    1    0
2818    1    0    4    5    6    0       0       0    2   0   2   0    1    0
2907    3    6    0    5    4    4       0       0   26   1   0   0    0    1
3187    4    0    0    4    0    0       1       0   27   0  14  29    0    0
3288    6    6    1    0    0    6       0       0   19   0   5  29    2    0
3330    6    6    6    5    6    0       0       1   17  27   0   3    0    2
3417    5    5    1    0    6    6       1       1   19   5   0   5    1    0
3422    4    0    6    5    6    0       1       0   15  28  28   0    0    1
3785    3    2    6    3    0    5       1       1    5   0  28  15    1    1
3863    1    2    3    6    2    1       1       0    0   0  19   8    1    0
3875    6    4    3    6    0    1       0       0   25  14  11   0    0    1
3895    0    4    0    1    2    2       1       0    8   0   7   6    0    1
3908    0    2    1    0    1    0       0       1   27   0  26  13    0    1
3975    3    6    2    4    6    2       1       1    0   0  29  27    0    1
4077    3    1    1    6    4    0       0       0    7  27   0   6    0    0
4144    4    4    6    0    0    0       1       0    0   3   0  23    2    0
4577    0    1    1    4    0    0       1       0    0   0   2   0    1    1
     RT_K SCR VEC1 VEC2  cost_mean
52      0   0    0    0 0.26855490
310     0   0    1    1 0.10091937
392     0   0    0    1 0.10056357
457     0   0    1    1 0.29178247
551     0   0    0    0 0.11296780
658     1   1    0    0 0.09614530
901     0   0    0    1 0.18353850
942     0   1    0    0 0.10569370
954     0   0    1    0 0.43209507
974     0   1    0    0 0.19065907
992     0   0    0    1 0.12181627
1226    1   1    0    1 0.16964470
1265    1   1    0    0 0.15453807
1375    1   1    1    0 0.12718847
1385    2   0    1    1 0.20490303
1591    1   1    1    1 0.08795911
2024    0   1    0    0 0.10971630
2045    2   0    1    1 0.16308153
2072    0   1    1    1 0.24194203
2090    0   0    1    0 0.23864243
2261    0   0    0    0 0.18963763
2337    0   1    1    1 0.17627087
2401    2   1    1    0 0.14522440
2616    1   0    1    0 0.12743043
2818    1   1    0    1 0.09676639
2907    0   1    1    0 0.12759730
3187    1   0    1    0 0.15422727
3288    0   1    1    1 0.17721383
3330    0   0    0    1 0.17026710
3417    1   0    0    0 0.11915133
3422    0   1    0    1 0.19167907
3785    0   1    1    1 0.10046563
3863    1   1    1    1 0.09346029
3875    1   0    1    1 0.11406727
3895    1   1    0    1 0.18073240
3908    0   1    1    0 0.25081700
3975    1   0    0    0 0.31579970
4077    0   0    0    1 0.16588603
4144    0   0    0    1 0.19589873
4577    0   0    1    0 0.12308287

Heteroscedasticity Test p-value: 0.916576156968
Regression Step:                Df  Sum Sq Mean Sq F value  Pr(>F)   
T1_I             1 0.00407 0.00407   1.670 0.23235   
T1_J             1 0.00163 0.00163   0.668 0.43746   
T1_K             1 0.00004 0.00004   0.016 0.90299   
T2_I             1 0.00022 0.00022   0.092 0.76953   
T2_J             1 0.00000 0.00000   0.000 0.99676   
T2_K             1 0.00227 0.00227   0.930 0.36320   
ACOPY_x          1 0.00622 0.00622   2.551 0.14891   
ACOPY_y          1 0.01489 0.01489   6.109 0.03861 * 
U1_I             1 0.00797 0.00797   3.270 0.10818   
U_I              1 0.00696 0.00696   2.856 0.12948   
U_J              1 0.00145 0.00145   0.594 0.46302   
U_K              1 0.00017 0.00017   0.071 0.79715   
RT_I             1 0.00443 0.00443   1.817 0.21461   
RT_J             1 0.00602 0.00602   2.470 0.15472   
RT_K             1 0.01743 0.01743   7.153 0.02816 * 
SCR              1 0.00634 0.00634   2.603 0.14531   
VEC1             1 0.00018 0.00018   0.072 0.79465   
VEC2             1 0.00002 0.00002   0.008 0.92959   
I(1/(1 + T1_I))  1 0.00396 0.00396   1.624 0.23829   
I(1/(1 + T1_J))  1 0.00310 0.00310   1.271 0.29223   
I(1/(1 + T1_K))  1 0.00001 0.00001   0.005 0.94671   
I(1/(1 + T2_I))  1 0.00142 0.00142   0.584 0.46680   
I(1/(1 + T2_J))  1 0.00531 0.00531   2.177 0.17832   
I(1/(1 + T2_K))  1 0.00027 0.00027   0.109 0.74933   
I(1/(1 + U1_I))  1 0.00565 0.00565   2.318 0.16638   
I(1/(1 + U_I))   1 0.01344 0.01344   5.513 0.04684 * 
I(1/(1 + U_J))   1 0.00575 0.00575   2.361 0.16299   
I(1/(1 + U_K))   1 0.01001 0.01001   4.107 0.07726 . 
I(1/(1 + RT_I))  1 0.04698 0.04698  19.275 0.00232 **
I(1/(1 + RT_J))  1 0.00382 0.00382   1.567 0.24607   
I(1/(1 + RT_K))  1 0.00050 0.00050   0.205 0.66240   
Residuals        8 0.01950 0.00244                   
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Predicting Best
Generating valid search space of size 4600 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Valid coordinates: 920
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Valid coordinates: 1840
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Tested coordinates: 110000
Valid coordinates: 2760
Tested coordinates: 120000
Tested coordinates: 130000
Tested coordinates: 140000
Tested coordinates: 150000
Valid coordinates: 3680
Tested coordinates: 160000
Tested coordinates: 170000
Tested coordinates: 180000
Valid coordinates: 4600
Valid/Tested configurations: 4600/188962
Generated Search Space:
NULL
Identical predictions (tol = 1e-5): 1
Getting Best from Design
Response: ['cost_mean']
Design Names:  [1] "T1_I"      "T1_J"      "T1_K"      "T2_I"      "T2_J"      "T2_K"     
 [7] "ACOPY_x"   "ACOPY_y"   "U1_I"      "U_I"       "U_J"       "U_K"      
[13] "RT_I"      "RT_J"      "RT_K"      "SCR"       "VEC1"      "VEC2"     
[19] "cost_mean"

Design Response:       cost_mean
52   0.26855490
310  0.10091937
392  0.10056357
457  0.29178247
551  0.11296780
658  0.09614530
901  0.18353850
942  0.10569370
954  0.43209507
974  0.19065907
992  0.12181627
1226 0.16964470
1265 0.15453807
1375 0.12718847
1385 0.20490303
1591 0.08795911
2024 0.10971630
2045 0.16308153
2072 0.24194203
2090 0.23864243
2261 0.18963763
2337 0.17627087
2401 0.14522440
2616 0.12743043
2818 0.09676639
2907 0.12759730
3187 0.15422727
3288 0.17721383
3330 0.17026710
3417 0.11915133
3422 0.19167907
3785 0.10046563
3863 0.09346029
3875 0.11406727
3895 0.18073240
3908 0.25081700
3975 0.31579970
4077 0.16588603
4144 0.19589873
4577 0.12308287

Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Getting fixed variables
Pruning Model
Best Predicted:      T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
3513    0    6    0    6    5    4       1       0   12  13   8   0    0    2
     RT_K SCR VEC1 VEC2
3513    0   1    0    0

Best From Design: [0, 6, 0, 1, 0, 0, 0, 0, 8, 12, 29, 0, 1, 0, 1, 1, 1, 1]
Pruned Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'SCR', 'VEC1', 'VEC2']
Fixed Factors: {'ACOPY_y': 0, 'RT_K': 0}
Length of requested configs: 1
Result was on Database, Returning Now
Starting Point (-O3):
0.16283083333333334
Predicted Best Point:
[0, 6, 0, 6, 5, 4, 1, 0, 12, 13, 8, 0, 0, 2, 0, 1, 0, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	30
        Max loop nest depth: 	5
        Additions: 		2161
        Multiplications: 	990
        Divisions: 		0
        Logical: 		0
        Reads: 			4079
        Writes: 		665
        Comparisons:		30
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest47.exe __orio_perftest47.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest47.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest47.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest47.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 587, in dopt_anova
    predicted_best_value = numpy.mean((self.getPerfCosts([predicted_best]).values()[0])[0])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest47.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 587, in dopt_anova
    predicted_best_value = numpy.mean((self.getPerfCosts([predicted_best]).values()[0])[0])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
