
====== START ORIO ======

----- begin reading the source file: atax2.src1.c -----
----- finished reading the source file -----

----- begin parsing annotations -----
----- finished parsing annotations -----

----- begin optimizations -----
Search_Space         = 8.234e+13
Number_of_Parameters = 18
Numeric_Parameters   = 13
Binary_Parameters    = 05
['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
[[1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [False, True], [False, True], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 8, 32], [1, 8, 32], [1, 8, 32], [False, True], [False, True], [False, True]]

----- begin empirical tuning for problem size -----
 N = 10000
Parameters: {'ACOPY_x': [0, 2], 'ACOPY_y': [0, 2], 'RT_K': [0, 3], 'T1_I': [0, 7], 'T1_J': [0, 7], 'T1_K': [0, 7], 'U_K': [0, 30], 'U_J': [0, 30], 'U_I': [0, 30], 'U1_I': [0, 30], 'T2_K': [0, 7], 'T2_J': [0, 7], 'T2_I': [0, 7], 'VEC2': [0, 2], 'VEC1': [0, 2], 'RT_I': [0, 3], 'SCR': [0, 2], 'RT_J': [0, 3]}
Parameter Range Values: {'ACOPY_x': [False, True], 'ACOPY_y': [False, True], 'RT_K': [1, 8, 32], 'T1_I': [1, 16, 32, 64, 128, 256, 512], 'T1_J': [1, 16, 32, 64, 128, 256, 512], 'T1_K': [1, 16, 32, 64, 128, 256, 512], 'U_K': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_J': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U1_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'T2_K': [1, 64, 128, 256, 512, 1024, 2048], 'T2_J': [1, 64, 128, 256, 512, 1024, 2048], 'T2_I': [1, 64, 128, 256, 512, 1024, 2048], 'VEC2': [False, True], 'VEC1': [False, True], 'RT_I': [1, 8, 32], 'SCR': [False, True], 'RT_J': [1, 8, 32]}

----- begin random search -----
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Inverse Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Starting DOPT-anova
Step 0
Generating valid search space of size 4600 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Valid coordinates: 920
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Valid coordinates: 1840
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Tested coordinates: 110000
Valid coordinates: 2760
Tested coordinates: 120000
Tested coordinates: 130000
Tested coordinates: 140000
Tested coordinates: 150000
Valid coordinates: 3680
Tested coordinates: 160000
Tested coordinates: 170000
Tested coordinates: 180000
Tested coordinates: 190000
Valid coordinates: 4600
Valid/Tested configurations: 4600/194508
Generated Search Space:
NULL
Clean Info:
Removed Factors: character(0)

Removed Inverse Factors: [1] "ACOPY_x" "ACOPY_y" "SCR"     "VEC1"    "VEC2"   

New Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
New Inverse Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
New Fixed Factors: {}
Full Model:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Fixed Factors: {}
Computing D-Optimal Design
Computing D-Optimal Design with 46 experiments
Design Formula:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Starting "optFederov" run
Using Search Space:
NULL
Data Dimensions: [1] 4600   18

     T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
227     1    0    3    2    5    0       1       1   26   0  27   5    0    2
254     0    6    6    0    5    0       0       1    0   7  10   0    1    1
264     5    5    5    0    0    4       0       0    0  29   0  22    0    2
318     0    1    6    2    5    0       0       0    2   0  29   3    0    2
421     0    6    3    2    4    6       0       0   29  28   2   0    0    0
428     0    6    4    0    6    3       0       1    4   4  15   0    0    0
589     3    1    3    0    0    2       0       1   23  29   6   0    0    0
642     2    6    6    1    0    6       1       1   14  29   0   3    1    0
680     1    4    0    3    4    1       1       0   13   3   7   0    0    2
822     0    0    2    5    1    2       0       1    6  27   0  13    0    1
888     0    4    4    1    3    6       0       1   22   0   0   1    2    0
981     1    0    2    3    3    3       1       0    0   1  10   0    2    0
1044    0    0    3    4    0    5       1       0    0   0  16   6    0    1
1120    2    2    6    6    5    6       1       0    6  10   0   2    0    0
1196    6    0    5    0    1    4       1       1   29   6  12   0    0    0
1220    2    3    4    6    6    0       1       0    0  26   0  29    2    0
1351    3    0    0    6    5    1       0       1   11   0   0   0    0    0
1379    3    2    0    5    4    6       0       1    0   0  24  15    0    0
1383    6    0    0    4    0    0       0       0   14   0  20  16    0    0
1510    0    4    1    4    0    6       0       1    1   1   0   0    0    0
1725    0    0    4    6    1    6       0       0   20   1   0  29    0    0
1917    6    1    0    0    2    6       1       0    6  25   0  29    0    2
1998    3    6    2    1    4    5       0       1    3   0  21  24    1    1
2036    6    6    5    6    0    0       1       1   29  12   0   5    0    2
2111    0    2    4    2    6    2       1       0    0   0  21   0    1    1
2192    6    2    0    0    5    3       0       0   25   3   0   3    0    1
2486    6    0    6    0    4    5       0       0   16   0  21  29    2    0
2568    6    0    3    6    6    6       1       1   15  28   9   0    1    0
2650    5    4    5    3    3    0       1       1    8   0   4  27    0    0
2653    0    3    0    1    5    2       0       1    0  19   0  24    0    0
2870    0    4    0    6    6    3       1       1   27   0   3   6    1    1
2884    1    1    5    1    0    4       0       0   23   5   0  26    1    0
3100    3    3    3    0    3    1       0       1    0   0   9  10    0    2
3188    4    1    0    0    6    6       0       1    0  12   0   0    0    1
3300    1    6    1    0    6    6       1       0   29   0  27  27    0    0
3408    3    1    2    6    1    1       0       0   26  28  29   0    0    1
3417    1    5    0    5    0    0       0       0    7   0   2   3    1    0
3426    5    4    6    5    2    0       1       0    0   0  27   7    0    0
3584    3    2    6    6    0    6       0       1   13   9  29   0    2    0
3695    4    6    1    2    5    0       0       0   26  28   0   1    2    0
3778    2    4    6    2    2    0       0       1    4   3   0  29    0    1
3972    0    6    0    3    0    3       0       1   23  11  28   0    1    0
3988    1    6    6    1    0    4       1       0    2   0  28   1    0    1
4255    0    6    0    0    0    0       1       1   13   0  23   6    2    0
4341    6    6    2    0    4    2       0       0   15  12   0   8    1    0
4377    0    1    2    0    2    0       1       1   18  26  28   0    1    0
     RT_K SCR VEC1 VEC2
227     0   1    0    0
254     0   1    0    1
264     0   1    0    0
318     0   0    0    0
421     2   1    1    0
428     0   0    0    1
589     1   0    1    0
642     0   0    1    0
680     0   1    1    0
822     1   1    1    1
888     0   0    1    1
981     0   0    1    0
1044    0   1    1    0
1120    2   1    0    0
1196    2   0    0    1
1220    0   0    1    0
1351    0   1    1    1
1379    0   0    0    1
1383    2   0    1    0
1510    2   1    0    0
1725    1   0    0    0
1917    0   0    1    1
1998    0   0    1    1
2036    0   0    1    0
2111    0   1    1    1
2192    0   1    1    0
2486    0   1    1    0
2568    1   1    0    1
2650    0   1    0    0
2653    2   0    1    1
2870    0   0    0    0
2884    0   1    0    1
3100    0   1    0    0
3188    1   1    1    1
3300    2   0    1    1
3408    0   0    0    0
3417    1   1    1    1
3426    1   1    1    1
3584    0   1    1    1
3695    0   1    0    1
3778    1   0    1    0
3972    1   1    0    0
3988    1   0    0    1
4255    0   1    0    1
4341    1   0    1    0
4377    0   1    0    0

D-Efficiency Approximation: [1] 0.354

Measuring design of size 46
Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		278
        Multiplications: 	78
        Divisions: 		0
        Logical: 		0
        Reads: 			558
        Writes: 		113
        Comparisons:		13
        Gotos: 			0
        
 building the original code:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -DORIGINAL -o __orio_perftest_original.exe __orio_perftest1.c timer_cpu.o -lm
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest1.exe __orio_perftest1.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest1.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest1.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest1.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest1.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		694
        Multiplications: 	336
        Divisions: 		0
        Logical: 		0
        Reads: 			1388
        Writes: 		237
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest2.exe __orio_perftest2.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest2.exe  
Program Test Output: 
{'[0, 6, 6, 0, 5, 0, 0, 1, 0, 7, 10, 0, 1, 1, 0, 1, 0, 1]' : 0.104502}
{'[0, 6, 6, 0, 5, 0, 0, 1, 0, 7, 10, 0, 1, 1, 0, 1, 0, 1]' : 0.104312}
{'[0, 6, 6, 0, 5, 0, 0, 1, 0, 7, 10, 0, 1, 1, 0, 1, 0, 1]' : 0.103028}
{'[0, 6, 6, 0, 5, 0, 0, 1, 0, 7, 10, 0, 1, 1, 0, 1, 0, 1]' : 0.102105}
{'[0, 6, 6, 0, 5, 0, 0, 1, 0, 7, 10, 0, 1, 1, 0, 1, 0, 1]' : 0.102196}
{'[0, 6, 6, 0, 5, 0, 0, 1, 0, 7, 10, 0, 1, 1, 0, 1, 0, 1]' : 0.102592}
{'[0, 6, 6, 0, 5, 0, 0, 1, 0, 7, 10, 0, 1, 1, 0, 1, 0, 1]' : 0.104353}
{'[0, 6, 6, 0, 5, 0, 0, 1, 0, 7, 10, 0, 1, 1, 0, 1, 0, 1]' : 0.10433}
{'[0, 6, 6, 0, 5, 0, 0, 1, 0, 7, 10, 0, 1, 1, 0, 1, 0, 1]' : 0.104294}
{'[0, 6, 6, 0, 5, 0, 0, 1, 0, 7, 10, 0, 1, 1, 0, 1, 0, 1]' : 0.104322}
{'[0, 6, 6, 0, 5, 0, 0, 1, 0, 7, 10, 0, 1, 1, 0, 1, 0, 1]' : 0.104295}
{'[0, 6, 6, 0, 5, 0, 0, 1, 0, 7, 10, 0, 1, 1, 0, 1, 0, 1]' : 0.10426}
{'[0, 6, 6, 0, 5, 0, 0, 1, 0, 7, 10, 0, 1, 1, 0, 1, 0, 1]' : 0.102346}
{'[0, 6, 6, 0, 5, 0, 0, 1, 0, 7, 10, 0, 1, 1, 0, 1, 0, 1]' : 0.102083}
{'[0, 6, 6, 0, 5, 0, 0, 1, 0, 7, 10, 0, 1, 1, 0, 1, 0, 1]' : 0.102201}
{'[0, 6, 6, 0, 5, 0, 0, 1, 0, 7, 10, 0, 1, 1, 0, 1, 0, 1]' : 0.103653}
{'[0, 6, 6, 0, 5, 0, 0, 1, 0, 7, 10, 0, 1, 1, 0, 1, 0, 1]' : 0.104319}
{'[0, 6, 6, 0, 5, 0, 0, 1, 0, 7, 10, 0, 1, 1, 0, 1, 0, 1]' : 0.104317}
{'[0, 6, 6, 0, 5, 0, 0, 1, 0, 7, 10, 0, 1, 1, 0, 1, 0, 1]' : 0.104385}
{'[0, 6, 6, 0, 5, 0, 0, 1, 0, 7, 10, 0, 1, 1, 0, 1, 0, 1]' : 0.104354}
{'[0, 6, 6, 0, 5, 0, 0, 1, 0, 7, 10, 0, 1, 1, 0, 1, 0, 1]' : 0.10439}
{'[0, 6, 6, 0, 5, 0, 0, 1, 0, 7, 10, 0, 1, 1, 0, 1, 0, 1]' : 0.104508}
{'[0, 6, 6, 0, 5, 0, 0, 1, 0, 7, 10, 0, 1, 1, 0, 1, 0, 1]' : 0.105181}
{'[0, 6, 6, 0, 5, 0, 0, 1, 0, 7, 10, 0, 1, 1, 0, 1, 0, 1]' : 0.105182}
{'[0, 6, 6, 0, 5, 0, 0, 1, 0, 7, 10, 0, 1, 1, 0, 1, 0, 1]' : 0.104753}
{'[0, 6, 6, 0, 5, 0, 0, 1, 0, 7, 10, 0, 1, 1, 0, 1, 0, 1]' : 0.10424}
{'[0, 6, 6, 0, 5, 0, 0, 1, 0, 7, 10, 0, 1, 1, 0, 1, 0, 1]' : 0.104231}
{'[0, 6, 6, 0, 5, 0, 0, 1, 0, 7, 10, 0, 1, 1, 0, 1, 0, 1]' : 0.104268}
{'[0, 6, 6, 0, 5, 0, 0, 1, 0, 7, 10, 0, 1, 1, 0, 1, 0, 1]' : 0.101609}
{'[0, 6, 6, 0, 5, 0, 0, 1, 0, 7, 10, 0, 1, 1, 0, 1, 0, 1]' : 0.10169}

out:
 ["{'[0, 6, 6, 0, 5, 0, 0, 1, 0, 7, 10, 0, 1, 1, 0, 1, 0, 1]' : 0.104502}", "{'[0, 6, 6, 0, 5, 0, 0, 1, 0, 7, 10, 0, 1, 1, 0, 1, 0, 1]' : 0.104312}", "{'[0, 6, 6, 0, 5, 0, 0, 1, 0, 7, 10, 0, 1, 1, 0, 1, 0, 1]' : 0.103028}", "{'[0, 6, 6, 0, 5, 0, 0, 1, 0, 7, 10, 0, 1, 1, 0, 1, 0, 1]' : 0.102105}", "{'[0, 6, 6, 0, 5, 0, 0, 1, 0, 7, 10, 0, 1, 1, 0, 1, 0, 1]' : 0.102196}", "{'[0, 6, 6, 0, 5, 0, 0, 1, 0, 7, 10, 0, 1, 1, 0, 1, 0, 1]' : 0.102592}", "{'[0, 6, 6, 0, 5, 0, 0, 1, 0, 7, 10, 0, 1, 1, 0, 1, 0, 1]' : 0.104353}", "{'[0, 6, 6, 0, 5, 0, 0, 1, 0, 7, 10, 0, 1, 1, 0, 1, 0, 1]' : 0.10433}", "{'[0, 6, 6, 0, 5, 0, 0, 1, 0, 7, 10, 0, 1, 1, 0, 1, 0, 1]' : 0.104294}", "{'[0, 6, 6, 0, 5, 0, 0, 1, 0, 7, 10, 0, 1, 1, 0, 1, 0, 1]' : 0.104322}", "{'[0, 6, 6, 0, 5, 0, 0, 1, 0, 7, 10, 0, 1, 1, 0, 1, 0, 1]' : 0.104295}", "{'[0, 6, 6, 0, 5, 0, 0, 1, 0, 7, 10, 0, 1, 1, 0, 1, 0, 1]' : 0.10426}", "{'[0, 6, 6, 0, 5, 0, 0, 1, 0, 7, 10, 0, 1, 1, 0, 1, 0, 1]' : 0.102346}", "{'[0, 6, 6, 0, 5, 0, 0, 1, 0, 7, 10, 0, 1, 1, 0, 1, 0, 1]' : 0.102083}", "{'[0, 6, 6, 0, 5, 0, 0, 1, 0, 7, 10, 0, 1, 1, 0, 1, 0, 1]' : 0.102201}", "{'[0, 6, 6, 0, 5, 0, 0, 1, 0, 7, 10, 0, 1, 1, 0, 1, 0, 1]' : 0.103653}", "{'[0, 6, 6, 0, 5, 0, 0, 1, 0, 7, 10, 0, 1, 1, 0, 1, 0, 1]' : 0.104319}", "{'[0, 6, 6, 0, 5, 0, 0, 1, 0, 7, 10, 0, 1, 1, 0, 1, 0, 1]' : 0.104317}", "{'[0, 6, 6, 0, 5, 0, 0, 1, 0, 7, 10, 0, 1, 1, 0, 1, 0, 1]' : 0.104385}", "{'[0, 6, 6, 0, 5, 0, 0, 1, 0, 7, 10, 0, 1, 1, 0, 1, 0, 1]' : 0.104354}", "{'[0, 6, 6, 0, 5, 0, 0, 1, 0, 7, 10, 0, 1, 1, 0, 1, 0, 1]' : 0.10439}", "{'[0, 6, 6, 0, 5, 0, 0, 1, 0, 7, 10, 0, 1, 1, 0, 1, 0, 1]' : 0.104508}", "{'[0, 6, 6, 0, 5, 0, 0, 1, 0, 7, 10, 0, 1, 1, 0, 1, 0, 1]' : 0.105181}", "{'[0, 6, 6, 0, 5, 0, 0, 1, 0, 7, 10, 0, 1, 1, 0, 1, 0, 1]' : 0.105182}", "{'[0, 6, 6, 0, 5, 0, 0, 1, 0, 7, 10, 0, 1, 1, 0, 1, 0, 1]' : 0.104753}", "{'[0, 6, 6, 0, 5, 0, 0, 1, 0, 7, 10, 0, 1, 1, 0, 1, 0, 1]' : 0.10424}", "{'[0, 6, 6, 0, 5, 0, 0, 1, 0, 7, 10, 0, 1, 1, 0, 1, 0, 1]' : 0.104231}", "{'[0, 6, 6, 0, 5, 0, 0, 1, 0, 7, 10, 0, 1, 1, 0, 1, 0, 1]' : 0.104268}", "{'[0, 6, 6, 0, 5, 0, 0, 1, 0, 7, 10, 0, 1, 1, 0, 1, 0, 1]' : 0.101609}", "{'[0, 6, 6, 0, 5, 0, 0, 1, 0, 7, 10, 0, 1, 1, 0, 1, 0, 1]' : 0.10169}"]
returning from 'run': {'[0, 6, 6, 0, 5, 0, 0, 1, 0, 7, 10, 0, 1, 1, 0, 1, 0, 1]': ([0.104502, 0.104312, 0.103028, 0.102105, 0.102196, 0.102592, 0.104353, 0.10433, 0.104294, 0.104322, 0.104295, 0.10426, 0.102346, 0.102083, 0.102201, 0.103653, 0.104319, 0.104317, 0.104385, 0.104354, 0.10439, 0.104508, 0.105181, 0.105182, 0.104753, 0.10424, 0.104231, 0.104268, 0.101609, 0.10169], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 6, 0, 5, 0, 0, 1, 0, 7, 10, 0, 1, 1, 0, 1, 0, 1]': ([0.104502, 0.104312, 0.103028, 0.102105, 0.102196, 0.102592, 0.104353, 0.10433, 0.104294, 0.104322, 0.104295, 0.10426, 0.102346, 0.102083, 0.102201, 0.103653, 0.104319, 0.104317, 0.104385, 0.104354, 0.10439, 0.104508, 0.105181, 0.105182, 0.104753, 0.10424, 0.104231, 0.104268, 0.101609, 0.10169], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	5
        Additions: 		7118
        Multiplications: 	3534
        Divisions: 		0
        Logical: 		0
        Reads: 			13134
        Writes: 		2026
        Comparisons:		18
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest3.exe __orio_perftest3.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest3.exe  
Program Test Output: 
{'[5, 5, 5, 0, 0, 4, 0, 0, 0, 29, 0, 22, 0, 2, 0, 1, 0, 0]' : 0.182391}
{'[5, 5, 5, 0, 0, 4, 0, 0, 0, 29, 0, 22, 0, 2, 0, 1, 0, 0]' : 0.180887}
{'[5, 5, 5, 0, 0, 4, 0, 0, 0, 29, 0, 22, 0, 2, 0, 1, 0, 0]' : 0.185715}
{'[5, 5, 5, 0, 0, 4, 0, 0, 0, 29, 0, 22, 0, 2, 0, 1, 0, 0]' : 0.187093}
{'[5, 5, 5, 0, 0, 4, 0, 0, 0, 29, 0, 22, 0, 2, 0, 1, 0, 0]' : 0.180796}
{'[5, 5, 5, 0, 0, 4, 0, 0, 0, 29, 0, 22, 0, 2, 0, 1, 0, 0]' : 0.180304}
{'[5, 5, 5, 0, 0, 4, 0, 0, 0, 29, 0, 22, 0, 2, 0, 1, 0, 0]' : 0.18311}
{'[5, 5, 5, 0, 0, 4, 0, 0, 0, 29, 0, 22, 0, 2, 0, 1, 0, 0]' : 0.190798}
{'[5, 5, 5, 0, 0, 4, 0, 0, 0, 29, 0, 22, 0, 2, 0, 1, 0, 0]' : 0.182699}
{'[5, 5, 5, 0, 0, 4, 0, 0, 0, 29, 0, 22, 0, 2, 0, 1, 0, 0]' : 0.186058}
{'[5, 5, 5, 0, 0, 4, 0, 0, 0, 29, 0, 22, 0, 2, 0, 1, 0, 0]' : 0.175589}
{'[5, 5, 5, 0, 0, 4, 0, 0, 0, 29, 0, 22, 0, 2, 0, 1, 0, 0]' : 0.176771}
{'[5, 5, 5, 0, 0, 4, 0, 0, 0, 29, 0, 22, 0, 2, 0, 1, 0, 0]' : 0.178809}
{'[5, 5, 5, 0, 0, 4, 0, 0, 0, 29, 0, 22, 0, 2, 0, 1, 0, 0]' : 0.176789}
{'[5, 5, 5, 0, 0, 4, 0, 0, 0, 29, 0, 22, 0, 2, 0, 1, 0, 0]' : 0.180642}
{'[5, 5, 5, 0, 0, 4, 0, 0, 0, 29, 0, 22, 0, 2, 0, 1, 0, 0]' : 0.180446}
{'[5, 5, 5, 0, 0, 4, 0, 0, 0, 29, 0, 22, 0, 2, 0, 1, 0, 0]' : 0.178078}
{'[5, 5, 5, 0, 0, 4, 0, 0, 0, 29, 0, 22, 0, 2, 0, 1, 0, 0]' : 0.183827}
{'[5, 5, 5, 0, 0, 4, 0, 0, 0, 29, 0, 22, 0, 2, 0, 1, 0, 0]' : 0.184678}
{'[5, 5, 5, 0, 0, 4, 0, 0, 0, 29, 0, 22, 0, 2, 0, 1, 0, 0]' : 0.182468}
{'[5, 5, 5, 0, 0, 4, 0, 0, 0, 29, 0, 22, 0, 2, 0, 1, 0, 0]' : 0.186469}
{'[5, 5, 5, 0, 0, 4, 0, 0, 0, 29, 0, 22, 0, 2, 0, 1, 0, 0]' : 0.183943}
{'[5, 5, 5, 0, 0, 4, 0, 0, 0, 29, 0, 22, 0, 2, 0, 1, 0, 0]' : 0.183094}
{'[5, 5, 5, 0, 0, 4, 0, 0, 0, 29, 0, 22, 0, 2, 0, 1, 0, 0]' : 0.179206}
{'[5, 5, 5, 0, 0, 4, 0, 0, 0, 29, 0, 22, 0, 2, 0, 1, 0, 0]' : 0.175644}
{'[5, 5, 5, 0, 0, 4, 0, 0, 0, 29, 0, 22, 0, 2, 0, 1, 0, 0]' : 0.182025}
{'[5, 5, 5, 0, 0, 4, 0, 0, 0, 29, 0, 22, 0, 2, 0, 1, 0, 0]' : 0.187452}
{'[5, 5, 5, 0, 0, 4, 0, 0, 0, 29, 0, 22, 0, 2, 0, 1, 0, 0]' : 0.180927}
{'[5, 5, 5, 0, 0, 4, 0, 0, 0, 29, 0, 22, 0, 2, 0, 1, 0, 0]' : 0.17885}
{'[5, 5, 5, 0, 0, 4, 0, 0, 0, 29, 0, 22, 0, 2, 0, 1, 0, 0]' : 0.186992}

out:
 ["{'[5, 5, 5, 0, 0, 4, 0, 0, 0, 29, 0, 22, 0, 2, 0, 1, 0, 0]' : 0.182391}", "{'[5, 5, 5, 0, 0, 4, 0, 0, 0, 29, 0, 22, 0, 2, 0, 1, 0, 0]' : 0.180887}", "{'[5, 5, 5, 0, 0, 4, 0, 0, 0, 29, 0, 22, 0, 2, 0, 1, 0, 0]' : 0.185715}", "{'[5, 5, 5, 0, 0, 4, 0, 0, 0, 29, 0, 22, 0, 2, 0, 1, 0, 0]' : 0.187093}", "{'[5, 5, 5, 0, 0, 4, 0, 0, 0, 29, 0, 22, 0, 2, 0, 1, 0, 0]' : 0.180796}", "{'[5, 5, 5, 0, 0, 4, 0, 0, 0, 29, 0, 22, 0, 2, 0, 1, 0, 0]' : 0.180304}", "{'[5, 5, 5, 0, 0, 4, 0, 0, 0, 29, 0, 22, 0, 2, 0, 1, 0, 0]' : 0.18311}", "{'[5, 5, 5, 0, 0, 4, 0, 0, 0, 29, 0, 22, 0, 2, 0, 1, 0, 0]' : 0.190798}", "{'[5, 5, 5, 0, 0, 4, 0, 0, 0, 29, 0, 22, 0, 2, 0, 1, 0, 0]' : 0.182699}", "{'[5, 5, 5, 0, 0, 4, 0, 0, 0, 29, 0, 22, 0, 2, 0, 1, 0, 0]' : 0.186058}", "{'[5, 5, 5, 0, 0, 4, 0, 0, 0, 29, 0, 22, 0, 2, 0, 1, 0, 0]' : 0.175589}", "{'[5, 5, 5, 0, 0, 4, 0, 0, 0, 29, 0, 22, 0, 2, 0, 1, 0, 0]' : 0.176771}", "{'[5, 5, 5, 0, 0, 4, 0, 0, 0, 29, 0, 22, 0, 2, 0, 1, 0, 0]' : 0.178809}", "{'[5, 5, 5, 0, 0, 4, 0, 0, 0, 29, 0, 22, 0, 2, 0, 1, 0, 0]' : 0.176789}", "{'[5, 5, 5, 0, 0, 4, 0, 0, 0, 29, 0, 22, 0, 2, 0, 1, 0, 0]' : 0.180642}", "{'[5, 5, 5, 0, 0, 4, 0, 0, 0, 29, 0, 22, 0, 2, 0, 1, 0, 0]' : 0.180446}", "{'[5, 5, 5, 0, 0, 4, 0, 0, 0, 29, 0, 22, 0, 2, 0, 1, 0, 0]' : 0.178078}", "{'[5, 5, 5, 0, 0, 4, 0, 0, 0, 29, 0, 22, 0, 2, 0, 1, 0, 0]' : 0.183827}", "{'[5, 5, 5, 0, 0, 4, 0, 0, 0, 29, 0, 22, 0, 2, 0, 1, 0, 0]' : 0.184678}", "{'[5, 5, 5, 0, 0, 4, 0, 0, 0, 29, 0, 22, 0, 2, 0, 1, 0, 0]' : 0.182468}", "{'[5, 5, 5, 0, 0, 4, 0, 0, 0, 29, 0, 22, 0, 2, 0, 1, 0, 0]' : 0.186469}", "{'[5, 5, 5, 0, 0, 4, 0, 0, 0, 29, 0, 22, 0, 2, 0, 1, 0, 0]' : 0.183943}", "{'[5, 5, 5, 0, 0, 4, 0, 0, 0, 29, 0, 22, 0, 2, 0, 1, 0, 0]' : 0.183094}", "{'[5, 5, 5, 0, 0, 4, 0, 0, 0, 29, 0, 22, 0, 2, 0, 1, 0, 0]' : 0.179206}", "{'[5, 5, 5, 0, 0, 4, 0, 0, 0, 29, 0, 22, 0, 2, 0, 1, 0, 0]' : 0.175644}", "{'[5, 5, 5, 0, 0, 4, 0, 0, 0, 29, 0, 22, 0, 2, 0, 1, 0, 0]' : 0.182025}", "{'[5, 5, 5, 0, 0, 4, 0, 0, 0, 29, 0, 22, 0, 2, 0, 1, 0, 0]' : 0.187452}", "{'[5, 5, 5, 0, 0, 4, 0, 0, 0, 29, 0, 22, 0, 2, 0, 1, 0, 0]' : 0.180927}", "{'[5, 5, 5, 0, 0, 4, 0, 0, 0, 29, 0, 22, 0, 2, 0, 1, 0, 0]' : 0.17885}", "{'[5, 5, 5, 0, 0, 4, 0, 0, 0, 29, 0, 22, 0, 2, 0, 1, 0, 0]' : 0.186992}"]
returning from 'run': {'[5, 5, 5, 0, 0, 4, 0, 0, 0, 29, 0, 22, 0, 2, 0, 1, 0, 0]': ([0.182391, 0.180887, 0.185715, 0.187093, 0.180796, 0.180304, 0.18311, 0.190798, 0.182699, 0.186058, 0.175589, 0.176771, 0.178809, 0.176789, 0.180642, 0.180446, 0.178078, 0.183827, 0.184678, 0.182468, 0.186469, 0.183943, 0.183094, 0.179206, 0.175644, 0.182025, 0.187452, 0.180927, 0.17885, 0.186992], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 5, 5, 0, 0, 4, 0, 0, 0, 29, 0, 22, 0, 2, 0, 1, 0, 0]': ([0.182391, 0.180887, 0.185715, 0.187093, 0.180796, 0.180304, 0.18311, 0.190798, 0.182699, 0.186058, 0.175589, 0.176771, 0.178809, 0.176789, 0.180642, 0.180446, 0.178078, 0.183827, 0.184678, 0.182468, 0.186469, 0.183943, 0.183094, 0.179206, 0.175644, 0.182025, 0.187452, 0.180927, 0.17885, 0.186992], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		322
        Multiplications: 	136
        Divisions: 		0
        Logical: 		0
        Reads: 			774
        Writes: 		97
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest4.exe __orio_perftest4.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest4.exe  
Program Test Output: 
{'[0, 1, 6, 2, 5, 0, 0, 0, 2, 0, 29, 3, 0, 2, 0, 0, 0, 0]' : 0.235373}
{'[0, 1, 6, 2, 5, 0, 0, 0, 2, 0, 29, 3, 0, 2, 0, 0, 0, 0]' : 0.220594}
{'[0, 1, 6, 2, 5, 0, 0, 0, 2, 0, 29, 3, 0, 2, 0, 0, 0, 0]' : 0.20866}
{'[0, 1, 6, 2, 5, 0, 0, 0, 2, 0, 29, 3, 0, 2, 0, 0, 0, 0]' : 0.210308}
{'[0, 1, 6, 2, 5, 0, 0, 0, 2, 0, 29, 3, 0, 2, 0, 0, 0, 0]' : 0.210347}
{'[0, 1, 6, 2, 5, 0, 0, 0, 2, 0, 29, 3, 0, 2, 0, 0, 0, 0]' : 0.210288}
{'[0, 1, 6, 2, 5, 0, 0, 0, 2, 0, 29, 3, 0, 2, 0, 0, 0, 0]' : 0.210317}
{'[0, 1, 6, 2, 5, 0, 0, 0, 2, 0, 29, 3, 0, 2, 0, 0, 0, 0]' : 0.210371}
{'[0, 1, 6, 2, 5, 0, 0, 0, 2, 0, 29, 3, 0, 2, 0, 0, 0, 0]' : 0.205003}
{'[0, 1, 6, 2, 5, 0, 0, 0, 2, 0, 29, 3, 0, 2, 0, 0, 0, 0]' : 0.205873}
{'[0, 1, 6, 2, 5, 0, 0, 0, 2, 0, 29, 3, 0, 2, 0, 0, 0, 0]' : 0.210305}
{'[0, 1, 6, 2, 5, 0, 0, 0, 2, 0, 29, 3, 0, 2, 0, 0, 0, 0]' : 0.209378}
{'[0, 1, 6, 2, 5, 0, 0, 0, 2, 0, 29, 3, 0, 2, 0, 0, 0, 0]' : 0.209949}
{'[0, 1, 6, 2, 5, 0, 0, 0, 2, 0, 29, 3, 0, 2, 0, 0, 0, 0]' : 0.21025}
{'[0, 1, 6, 2, 5, 0, 0, 0, 2, 0, 29, 3, 0, 2, 0, 0, 0, 0]' : 0.210322}
{'[0, 1, 6, 2, 5, 0, 0, 0, 2, 0, 29, 3, 0, 2, 0, 0, 0, 0]' : 0.206041}
{'[0, 1, 6, 2, 5, 0, 0, 0, 2, 0, 29, 3, 0, 2, 0, 0, 0, 0]' : 0.204621}
{'[0, 1, 6, 2, 5, 0, 0, 0, 2, 0, 29, 3, 0, 2, 0, 0, 0, 0]' : 0.206553}
{'[0, 1, 6, 2, 5, 0, 0, 0, 2, 0, 29, 3, 0, 2, 0, 0, 0, 0]' : 0.203389}
{'[0, 1, 6, 2, 5, 0, 0, 0, 2, 0, 29, 3, 0, 2, 0, 0, 0, 0]' : 0.208272}
{'[0, 1, 6, 2, 5, 0, 0, 0, 2, 0, 29, 3, 0, 2, 0, 0, 0, 0]' : 0.21045}
{'[0, 1, 6, 2, 5, 0, 0, 0, 2, 0, 29, 3, 0, 2, 0, 0, 0, 0]' : 0.208841}
{'[0, 1, 6, 2, 5, 0, 0, 0, 2, 0, 29, 3, 0, 2, 0, 0, 0, 0]' : 0.210247}
{'[0, 1, 6, 2, 5, 0, 0, 0, 2, 0, 29, 3, 0, 2, 0, 0, 0, 0]' : 0.210286}
{'[0, 1, 6, 2, 5, 0, 0, 0, 2, 0, 29, 3, 0, 2, 0, 0, 0, 0]' : 0.210368}
{'[0, 1, 6, 2, 5, 0, 0, 0, 2, 0, 29, 3, 0, 2, 0, 0, 0, 0]' : 0.20357}
{'[0, 1, 6, 2, 5, 0, 0, 0, 2, 0, 29, 3, 0, 2, 0, 0, 0, 0]' : 0.205646}
{'[0, 1, 6, 2, 5, 0, 0, 0, 2, 0, 29, 3, 0, 2, 0, 0, 0, 0]' : 0.197719}
{'[0, 1, 6, 2, 5, 0, 0, 0, 2, 0, 29, 3, 0, 2, 0, 0, 0, 0]' : 0.196865}
{'[0, 1, 6, 2, 5, 0, 0, 0, 2, 0, 29, 3, 0, 2, 0, 0, 0, 0]' : 0.208483}

out:
 ["{'[0, 1, 6, 2, 5, 0, 0, 0, 2, 0, 29, 3, 0, 2, 0, 0, 0, 0]' : 0.235373}", "{'[0, 1, 6, 2, 5, 0, 0, 0, 2, 0, 29, 3, 0, 2, 0, 0, 0, 0]' : 0.220594}", "{'[0, 1, 6, 2, 5, 0, 0, 0, 2, 0, 29, 3, 0, 2, 0, 0, 0, 0]' : 0.20866}", "{'[0, 1, 6, 2, 5, 0, 0, 0, 2, 0, 29, 3, 0, 2, 0, 0, 0, 0]' : 0.210308}", "{'[0, 1, 6, 2, 5, 0, 0, 0, 2, 0, 29, 3, 0, 2, 0, 0, 0, 0]' : 0.210347}", "{'[0, 1, 6, 2, 5, 0, 0, 0, 2, 0, 29, 3, 0, 2, 0, 0, 0, 0]' : 0.210288}", "{'[0, 1, 6, 2, 5, 0, 0, 0, 2, 0, 29, 3, 0, 2, 0, 0, 0, 0]' : 0.210317}", "{'[0, 1, 6, 2, 5, 0, 0, 0, 2, 0, 29, 3, 0, 2, 0, 0, 0, 0]' : 0.210371}", "{'[0, 1, 6, 2, 5, 0, 0, 0, 2, 0, 29, 3, 0, 2, 0, 0, 0, 0]' : 0.205003}", "{'[0, 1, 6, 2, 5, 0, 0, 0, 2, 0, 29, 3, 0, 2, 0, 0, 0, 0]' : 0.205873}", "{'[0, 1, 6, 2, 5, 0, 0, 0, 2, 0, 29, 3, 0, 2, 0, 0, 0, 0]' : 0.210305}", "{'[0, 1, 6, 2, 5, 0, 0, 0, 2, 0, 29, 3, 0, 2, 0, 0, 0, 0]' : 0.209378}", "{'[0, 1, 6, 2, 5, 0, 0, 0, 2, 0, 29, 3, 0, 2, 0, 0, 0, 0]' : 0.209949}", "{'[0, 1, 6, 2, 5, 0, 0, 0, 2, 0, 29, 3, 0, 2, 0, 0, 0, 0]' : 0.21025}", "{'[0, 1, 6, 2, 5, 0, 0, 0, 2, 0, 29, 3, 0, 2, 0, 0, 0, 0]' : 0.210322}", "{'[0, 1, 6, 2, 5, 0, 0, 0, 2, 0, 29, 3, 0, 2, 0, 0, 0, 0]' : 0.206041}", "{'[0, 1, 6, 2, 5, 0, 0, 0, 2, 0, 29, 3, 0, 2, 0, 0, 0, 0]' : 0.204621}", "{'[0, 1, 6, 2, 5, 0, 0, 0, 2, 0, 29, 3, 0, 2, 0, 0, 0, 0]' : 0.206553}", "{'[0, 1, 6, 2, 5, 0, 0, 0, 2, 0, 29, 3, 0, 2, 0, 0, 0, 0]' : 0.203389}", "{'[0, 1, 6, 2, 5, 0, 0, 0, 2, 0, 29, 3, 0, 2, 0, 0, 0, 0]' : 0.208272}", "{'[0, 1, 6, 2, 5, 0, 0, 0, 2, 0, 29, 3, 0, 2, 0, 0, 0, 0]' : 0.21045}", "{'[0, 1, 6, 2, 5, 0, 0, 0, 2, 0, 29, 3, 0, 2, 0, 0, 0, 0]' : 0.208841}", "{'[0, 1, 6, 2, 5, 0, 0, 0, 2, 0, 29, 3, 0, 2, 0, 0, 0, 0]' : 0.210247}", "{'[0, 1, 6, 2, 5, 0, 0, 0, 2, 0, 29, 3, 0, 2, 0, 0, 0, 0]' : 0.210286}", "{'[0, 1, 6, 2, 5, 0, 0, 0, 2, 0, 29, 3, 0, 2, 0, 0, 0, 0]' : 0.210368}", "{'[0, 1, 6, 2, 5, 0, 0, 0, 2, 0, 29, 3, 0, 2, 0, 0, 0, 0]' : 0.20357}", "{'[0, 1, 6, 2, 5, 0, 0, 0, 2, 0, 29, 3, 0, 2, 0, 0, 0, 0]' : 0.205646}", "{'[0, 1, 6, 2, 5, 0, 0, 0, 2, 0, 29, 3, 0, 2, 0, 0, 0, 0]' : 0.197719}", "{'[0, 1, 6, 2, 5, 0, 0, 0, 2, 0, 29, 3, 0, 2, 0, 0, 0, 0]' : 0.196865}", "{'[0, 1, 6, 2, 5, 0, 0, 0, 2, 0, 29, 3, 0, 2, 0, 0, 0, 0]' : 0.208483}"]
returning from 'run': {'[0, 1, 6, 2, 5, 0, 0, 0, 2, 0, 29, 3, 0, 2, 0, 0, 0, 0]': ([0.235373, 0.220594, 0.20866, 0.210308, 0.210347, 0.210288, 0.210317, 0.210371, 0.205003, 0.205873, 0.210305, 0.209378, 0.209949, 0.21025, 0.210322, 0.206041, 0.204621, 0.206553, 0.203389, 0.208272, 0.21045, 0.208841, 0.210247, 0.210286, 0.210368, 0.20357, 0.205646, 0.197719, 0.196865, 0.208483], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 1, 6, 2, 5, 0, 0, 0, 2, 0, 29, 3, 0, 2, 0, 0, 0, 0]': ([0.235373, 0.220594, 0.20866, 0.210308, 0.210347, 0.210288, 0.210317, 0.210371, 0.205003, 0.205873, 0.210305, 0.209378, 0.209949, 0.21025, 0.210322, 0.206041, 0.204621, 0.206553, 0.203389, 0.208272, 0.21045, 0.208841, 0.210247, 0.210286, 0.210368, 0.20357, 0.205646, 0.197719, 0.196865, 0.208483], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	5
        Additions: 		4544
        Multiplications: 	2220
        Divisions: 		0
        Logical: 		0
        Reads: 			8593
        Writes: 		1408
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest5.exe __orio_perftest5.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest5.exe  
Program Test Output: 
{'[0, 6, 3, 2, 4, 6, 0, 0, 29, 28, 2, 0, 0, 0, 2, 1, 1, 0]' : 0.144379}
{'[0, 6, 3, 2, 4, 6, 0, 0, 29, 28, 2, 0, 0, 0, 2, 1, 1, 0]' : 0.14401}
{'[0, 6, 3, 2, 4, 6, 0, 0, 29, 28, 2, 0, 0, 0, 2, 1, 1, 0]' : 0.143172}
{'[0, 6, 3, 2, 4, 6, 0, 0, 29, 28, 2, 0, 0, 0, 2, 1, 1, 0]' : 0.141474}
{'[0, 6, 3, 2, 4, 6, 0, 0, 29, 28, 2, 0, 0, 0, 2, 1, 1, 0]' : 0.146805}
{'[0, 6, 3, 2, 4, 6, 0, 0, 29, 28, 2, 0, 0, 0, 2, 1, 1, 0]' : 0.146987}
{'[0, 6, 3, 2, 4, 6, 0, 0, 29, 28, 2, 0, 0, 0, 2, 1, 1, 0]' : 0.146958}
{'[0, 6, 3, 2, 4, 6, 0, 0, 29, 28, 2, 0, 0, 0, 2, 1, 1, 0]' : 0.146222}
{'[0, 6, 3, 2, 4, 6, 0, 0, 29, 28, 2, 0, 0, 0, 2, 1, 1, 0]' : 0.14692}
{'[0, 6, 3, 2, 4, 6, 0, 0, 29, 28, 2, 0, 0, 0, 2, 1, 1, 0]' : 0.14708}
{'[0, 6, 3, 2, 4, 6, 0, 0, 29, 28, 2, 0, 0, 0, 2, 1, 1, 0]' : 0.147131}
{'[0, 6, 3, 2, 4, 6, 0, 0, 29, 28, 2, 0, 0, 0, 2, 1, 1, 0]' : 0.147012}
{'[0, 6, 3, 2, 4, 6, 0, 0, 29, 28, 2, 0, 0, 0, 2, 1, 1, 0]' : 0.145776}
{'[0, 6, 3, 2, 4, 6, 0, 0, 29, 28, 2, 0, 0, 0, 2, 1, 1, 0]' : 0.143886}
{'[0, 6, 3, 2, 4, 6, 0, 0, 29, 28, 2, 0, 0, 0, 2, 1, 1, 0]' : 0.146656}
{'[0, 6, 3, 2, 4, 6, 0, 0, 29, 28, 2, 0, 0, 0, 2, 1, 1, 0]' : 0.146513}
{'[0, 6, 3, 2, 4, 6, 0, 0, 29, 28, 2, 0, 0, 0, 2, 1, 1, 0]' : 0.143845}
{'[0, 6, 3, 2, 4, 6, 0, 0, 29, 28, 2, 0, 0, 0, 2, 1, 1, 0]' : 0.145327}
{'[0, 6, 3, 2, 4, 6, 0, 0, 29, 28, 2, 0, 0, 0, 2, 1, 1, 0]' : 0.147007}
{'[0, 6, 3, 2, 4, 6, 0, 0, 29, 28, 2, 0, 0, 0, 2, 1, 1, 0]' : 0.146899}
{'[0, 6, 3, 2, 4, 6, 0, 0, 29, 28, 2, 0, 0, 0, 2, 1, 1, 0]' : 0.146259}
{'[0, 6, 3, 2, 4, 6, 0, 0, 29, 28, 2, 0, 0, 0, 2, 1, 1, 0]' : 0.147118}
{'[0, 6, 3, 2, 4, 6, 0, 0, 29, 28, 2, 0, 0, 0, 2, 1, 1, 0]' : 0.147038}
{'[0, 6, 3, 2, 4, 6, 0, 0, 29, 28, 2, 0, 0, 0, 2, 1, 1, 0]' : 0.147002}
{'[0, 6, 3, 2, 4, 6, 0, 0, 29, 28, 2, 0, 0, 0, 2, 1, 1, 0]' : 0.147084}
{'[0, 6, 3, 2, 4, 6, 0, 0, 29, 28, 2, 0, 0, 0, 2, 1, 1, 0]' : 0.147024}
{'[0, 6, 3, 2, 4, 6, 0, 0, 29, 28, 2, 0, 0, 0, 2, 1, 1, 0]' : 0.147314}
{'[0, 6, 3, 2, 4, 6, 0, 0, 29, 28, 2, 0, 0, 0, 2, 1, 1, 0]' : 0.146162}
{'[0, 6, 3, 2, 4, 6, 0, 0, 29, 28, 2, 0, 0, 0, 2, 1, 1, 0]' : 0.147009}
{'[0, 6, 3, 2, 4, 6, 0, 0, 29, 28, 2, 0, 0, 0, 2, 1, 1, 0]' : 0.145687}

out:
 ["{'[0, 6, 3, 2, 4, 6, 0, 0, 29, 28, 2, 0, 0, 0, 2, 1, 1, 0]' : 0.144379}", "{'[0, 6, 3, 2, 4, 6, 0, 0, 29, 28, 2, 0, 0, 0, 2, 1, 1, 0]' : 0.14401}", "{'[0, 6, 3, 2, 4, 6, 0, 0, 29, 28, 2, 0, 0, 0, 2, 1, 1, 0]' : 0.143172}", "{'[0, 6, 3, 2, 4, 6, 0, 0, 29, 28, 2, 0, 0, 0, 2, 1, 1, 0]' : 0.141474}", "{'[0, 6, 3, 2, 4, 6, 0, 0, 29, 28, 2, 0, 0, 0, 2, 1, 1, 0]' : 0.146805}", "{'[0, 6, 3, 2, 4, 6, 0, 0, 29, 28, 2, 0, 0, 0, 2, 1, 1, 0]' : 0.146987}", "{'[0, 6, 3, 2, 4, 6, 0, 0, 29, 28, 2, 0, 0, 0, 2, 1, 1, 0]' : 0.146958}", "{'[0, 6, 3, 2, 4, 6, 0, 0, 29, 28, 2, 0, 0, 0, 2, 1, 1, 0]' : 0.146222}", "{'[0, 6, 3, 2, 4, 6, 0, 0, 29, 28, 2, 0, 0, 0, 2, 1, 1, 0]' : 0.14692}", "{'[0, 6, 3, 2, 4, 6, 0, 0, 29, 28, 2, 0, 0, 0, 2, 1, 1, 0]' : 0.14708}", "{'[0, 6, 3, 2, 4, 6, 0, 0, 29, 28, 2, 0, 0, 0, 2, 1, 1, 0]' : 0.147131}", "{'[0, 6, 3, 2, 4, 6, 0, 0, 29, 28, 2, 0, 0, 0, 2, 1, 1, 0]' : 0.147012}", "{'[0, 6, 3, 2, 4, 6, 0, 0, 29, 28, 2, 0, 0, 0, 2, 1, 1, 0]' : 0.145776}", "{'[0, 6, 3, 2, 4, 6, 0, 0, 29, 28, 2, 0, 0, 0, 2, 1, 1, 0]' : 0.143886}", "{'[0, 6, 3, 2, 4, 6, 0, 0, 29, 28, 2, 0, 0, 0, 2, 1, 1, 0]' : 0.146656}", "{'[0, 6, 3, 2, 4, 6, 0, 0, 29, 28, 2, 0, 0, 0, 2, 1, 1, 0]' : 0.146513}", "{'[0, 6, 3, 2, 4, 6, 0, 0, 29, 28, 2, 0, 0, 0, 2, 1, 1, 0]' : 0.143845}", "{'[0, 6, 3, 2, 4, 6, 0, 0, 29, 28, 2, 0, 0, 0, 2, 1, 1, 0]' : 0.145327}", "{'[0, 6, 3, 2, 4, 6, 0, 0, 29, 28, 2, 0, 0, 0, 2, 1, 1, 0]' : 0.147007}", "{'[0, 6, 3, 2, 4, 6, 0, 0, 29, 28, 2, 0, 0, 0, 2, 1, 1, 0]' : 0.146899}", "{'[0, 6, 3, 2, 4, 6, 0, 0, 29, 28, 2, 0, 0, 0, 2, 1, 1, 0]' : 0.146259}", "{'[0, 6, 3, 2, 4, 6, 0, 0, 29, 28, 2, 0, 0, 0, 2, 1, 1, 0]' : 0.147118}", "{'[0, 6, 3, 2, 4, 6, 0, 0, 29, 28, 2, 0, 0, 0, 2, 1, 1, 0]' : 0.147038}", "{'[0, 6, 3, 2, 4, 6, 0, 0, 29, 28, 2, 0, 0, 0, 2, 1, 1, 0]' : 0.147002}", "{'[0, 6, 3, 2, 4, 6, 0, 0, 29, 28, 2, 0, 0, 0, 2, 1, 1, 0]' : 0.147084}", "{'[0, 6, 3, 2, 4, 6, 0, 0, 29, 28, 2, 0, 0, 0, 2, 1, 1, 0]' : 0.147024}", "{'[0, 6, 3, 2, 4, 6, 0, 0, 29, 28, 2, 0, 0, 0, 2, 1, 1, 0]' : 0.147314}", "{'[0, 6, 3, 2, 4, 6, 0, 0, 29, 28, 2, 0, 0, 0, 2, 1, 1, 0]' : 0.146162}", "{'[0, 6, 3, 2, 4, 6, 0, 0, 29, 28, 2, 0, 0, 0, 2, 1, 1, 0]' : 0.147009}", "{'[0, 6, 3, 2, 4, 6, 0, 0, 29, 28, 2, 0, 0, 0, 2, 1, 1, 0]' : 0.145687}"]
returning from 'run': {'[0, 6, 3, 2, 4, 6, 0, 0, 29, 28, 2, 0, 0, 0, 2, 1, 1, 0]': ([0.144379, 0.14401, 0.143172, 0.141474, 0.146805, 0.146987, 0.146958, 0.146222, 0.14692, 0.14708, 0.147131, 0.147012, 0.145776, 0.143886, 0.146656, 0.146513, 0.143845, 0.145327, 0.147007, 0.146899, 0.146259, 0.147118, 0.147038, 0.147002, 0.147084, 0.147024, 0.147314, 0.146162, 0.147009, 0.145687], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 3, 2, 4, 6, 0, 0, 29, 28, 2, 0, 0, 0, 2, 1, 1, 0]': ([0.144379, 0.14401, 0.143172, 0.141474, 0.146805, 0.146987, 0.146958, 0.146222, 0.14692, 0.14708, 0.147131, 0.147012, 0.145776, 0.143886, 0.146656, 0.146513, 0.143845, 0.145327, 0.147007, 0.146899, 0.146259, 0.147118, 0.147038, 0.147002, 0.147084, 0.147024, 0.147314, 0.146162, 0.147009, 0.145687], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	30
        Max loop nest depth: 	4
        Additions: 		748
        Multiplications: 	216
        Divisions: 		0
        Logical: 		0
        Reads: 			1398
        Writes: 		200
        Comparisons:		30
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest6.exe __orio_perftest6.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest6.exe  
Program Test Output: 
{'[0, 6, 4, 0, 6, 3, 0, 1, 4, 4, 15, 0, 0, 0, 0, 0, 0, 1]' : 0.158875}
{'[0, 6, 4, 0, 6, 3, 0, 1, 4, 4, 15, 0, 0, 0, 0, 0, 0, 1]' : 0.159132}
{'[0, 6, 4, 0, 6, 3, 0, 1, 4, 4, 15, 0, 0, 0, 0, 0, 0, 1]' : 0.156835}
{'[0, 6, 4, 0, 6, 3, 0, 1, 4, 4, 15, 0, 0, 0, 0, 0, 0, 1]' : 0.134909}
{'[0, 6, 4, 0, 6, 3, 0, 1, 4, 4, 15, 0, 0, 0, 0, 0, 0, 1]' : 0.134062}
{'[0, 6, 4, 0, 6, 3, 0, 1, 4, 4, 15, 0, 0, 0, 0, 0, 0, 1]' : 0.134098}
{'[0, 6, 4, 0, 6, 3, 0, 1, 4, 4, 15, 0, 0, 0, 0, 0, 0, 1]' : 0.133956}
{'[0, 6, 4, 0, 6, 3, 0, 1, 4, 4, 15, 0, 0, 0, 0, 0, 0, 1]' : 0.134194}
{'[0, 6, 4, 0, 6, 3, 0, 1, 4, 4, 15, 0, 0, 0, 0, 0, 0, 1]' : 0.133941}
{'[0, 6, 4, 0, 6, 3, 0, 1, 4, 4, 15, 0, 0, 0, 0, 0, 0, 1]' : 0.134242}
{'[0, 6, 4, 0, 6, 3, 0, 1, 4, 4, 15, 0, 0, 0, 0, 0, 0, 1]' : 0.134441}
{'[0, 6, 4, 0, 6, 3, 0, 1, 4, 4, 15, 0, 0, 0, 0, 0, 0, 1]' : 0.134851}
{'[0, 6, 4, 0, 6, 3, 0, 1, 4, 4, 15, 0, 0, 0, 0, 0, 0, 1]' : 0.133982}
{'[0, 6, 4, 0, 6, 3, 0, 1, 4, 4, 15, 0, 0, 0, 0, 0, 0, 1]' : 0.134029}
{'[0, 6, 4, 0, 6, 3, 0, 1, 4, 4, 15, 0, 0, 0, 0, 0, 0, 1]' : 0.134371}
{'[0, 6, 4, 0, 6, 3, 0, 1, 4, 4, 15, 0, 0, 0, 0, 0, 0, 1]' : 0.134131}
{'[0, 6, 4, 0, 6, 3, 0, 1, 4, 4, 15, 0, 0, 0, 0, 0, 0, 1]' : 0.134265}
{'[0, 6, 4, 0, 6, 3, 0, 1, 4, 4, 15, 0, 0, 0, 0, 0, 0, 1]' : 0.134301}
{'[0, 6, 4, 0, 6, 3, 0, 1, 4, 4, 15, 0, 0, 0, 0, 0, 0, 1]' : 0.134744}
{'[0, 6, 4, 0, 6, 3, 0, 1, 4, 4, 15, 0, 0, 0, 0, 0, 0, 1]' : 0.134111}
{'[0, 6, 4, 0, 6, 3, 0, 1, 4, 4, 15, 0, 0, 0, 0, 0, 0, 1]' : 0.134133}
{'[0, 6, 4, 0, 6, 3, 0, 1, 4, 4, 15, 0, 0, 0, 0, 0, 0, 1]' : 0.134202}
{'[0, 6, 4, 0, 6, 3, 0, 1, 4, 4, 15, 0, 0, 0, 0, 0, 0, 1]' : 0.134781}
{'[0, 6, 4, 0, 6, 3, 0, 1, 4, 4, 15, 0, 0, 0, 0, 0, 0, 1]' : 0.133996}
{'[0, 6, 4, 0, 6, 3, 0, 1, 4, 4, 15, 0, 0, 0, 0, 0, 0, 1]' : 0.134082}
{'[0, 6, 4, 0, 6, 3, 0, 1, 4, 4, 15, 0, 0, 0, 0, 0, 0, 1]' : 0.134344}
{'[0, 6, 4, 0, 6, 3, 0, 1, 4, 4, 15, 0, 0, 0, 0, 0, 0, 1]' : 0.134291}
{'[0, 6, 4, 0, 6, 3, 0, 1, 4, 4, 15, 0, 0, 0, 0, 0, 0, 1]' : 0.134268}
{'[0, 6, 4, 0, 6, 3, 0, 1, 4, 4, 15, 0, 0, 0, 0, 0, 0, 1]' : 0.134242}
{'[0, 6, 4, 0, 6, 3, 0, 1, 4, 4, 15, 0, 0, 0, 0, 0, 0, 1]' : 0.134249}

out:
 ["{'[0, 6, 4, 0, 6, 3, 0, 1, 4, 4, 15, 0, 0, 0, 0, 0, 0, 1]' : 0.158875}", "{'[0, 6, 4, 0, 6, 3, 0, 1, 4, 4, 15, 0, 0, 0, 0, 0, 0, 1]' : 0.159132}", "{'[0, 6, 4, 0, 6, 3, 0, 1, 4, 4, 15, 0, 0, 0, 0, 0, 0, 1]' : 0.156835}", "{'[0, 6, 4, 0, 6, 3, 0, 1, 4, 4, 15, 0, 0, 0, 0, 0, 0, 1]' : 0.134909}", "{'[0, 6, 4, 0, 6, 3, 0, 1, 4, 4, 15, 0, 0, 0, 0, 0, 0, 1]' : 0.134062}", "{'[0, 6, 4, 0, 6, 3, 0, 1, 4, 4, 15, 0, 0, 0, 0, 0, 0, 1]' : 0.134098}", "{'[0, 6, 4, 0, 6, 3, 0, 1, 4, 4, 15, 0, 0, 0, 0, 0, 0, 1]' : 0.133956}", "{'[0, 6, 4, 0, 6, 3, 0, 1, 4, 4, 15, 0, 0, 0, 0, 0, 0, 1]' : 0.134194}", "{'[0, 6, 4, 0, 6, 3, 0, 1, 4, 4, 15, 0, 0, 0, 0, 0, 0, 1]' : 0.133941}", "{'[0, 6, 4, 0, 6, 3, 0, 1, 4, 4, 15, 0, 0, 0, 0, 0, 0, 1]' : 0.134242}", "{'[0, 6, 4, 0, 6, 3, 0, 1, 4, 4, 15, 0, 0, 0, 0, 0, 0, 1]' : 0.134441}", "{'[0, 6, 4, 0, 6, 3, 0, 1, 4, 4, 15, 0, 0, 0, 0, 0, 0, 1]' : 0.134851}", "{'[0, 6, 4, 0, 6, 3, 0, 1, 4, 4, 15, 0, 0, 0, 0, 0, 0, 1]' : 0.133982}", "{'[0, 6, 4, 0, 6, 3, 0, 1, 4, 4, 15, 0, 0, 0, 0, 0, 0, 1]' : 0.134029}", "{'[0, 6, 4, 0, 6, 3, 0, 1, 4, 4, 15, 0, 0, 0, 0, 0, 0, 1]' : 0.134371}", "{'[0, 6, 4, 0, 6, 3, 0, 1, 4, 4, 15, 0, 0, 0, 0, 0, 0, 1]' : 0.134131}", "{'[0, 6, 4, 0, 6, 3, 0, 1, 4, 4, 15, 0, 0, 0, 0, 0, 0, 1]' : 0.134265}", "{'[0, 6, 4, 0, 6, 3, 0, 1, 4, 4, 15, 0, 0, 0, 0, 0, 0, 1]' : 0.134301}", "{'[0, 6, 4, 0, 6, 3, 0, 1, 4, 4, 15, 0, 0, 0, 0, 0, 0, 1]' : 0.134744}", "{'[0, 6, 4, 0, 6, 3, 0, 1, 4, 4, 15, 0, 0, 0, 0, 0, 0, 1]' : 0.134111}", "{'[0, 6, 4, 0, 6, 3, 0, 1, 4, 4, 15, 0, 0, 0, 0, 0, 0, 1]' : 0.134133}", "{'[0, 6, 4, 0, 6, 3, 0, 1, 4, 4, 15, 0, 0, 0, 0, 0, 0, 1]' : 0.134202}", "{'[0, 6, 4, 0, 6, 3, 0, 1, 4, 4, 15, 0, 0, 0, 0, 0, 0, 1]' : 0.134781}", "{'[0, 6, 4, 0, 6, 3, 0, 1, 4, 4, 15, 0, 0, 0, 0, 0, 0, 1]' : 0.133996}", "{'[0, 6, 4, 0, 6, 3, 0, 1, 4, 4, 15, 0, 0, 0, 0, 0, 0, 1]' : 0.134082}", "{'[0, 6, 4, 0, 6, 3, 0, 1, 4, 4, 15, 0, 0, 0, 0, 0, 0, 1]' : 0.134344}", "{'[0, 6, 4, 0, 6, 3, 0, 1, 4, 4, 15, 0, 0, 0, 0, 0, 0, 1]' : 0.134291}", "{'[0, 6, 4, 0, 6, 3, 0, 1, 4, 4, 15, 0, 0, 0, 0, 0, 0, 1]' : 0.134268}", "{'[0, 6, 4, 0, 6, 3, 0, 1, 4, 4, 15, 0, 0, 0, 0, 0, 0, 1]' : 0.134242}", "{'[0, 6, 4, 0, 6, 3, 0, 1, 4, 4, 15, 0, 0, 0, 0, 0, 0, 1]' : 0.134249}"]
returning from 'run': {'[0, 6, 4, 0, 6, 3, 0, 1, 4, 4, 15, 0, 0, 0, 0, 0, 0, 1]': ([0.158875, 0.159132, 0.156835, 0.134909, 0.134062, 0.134098, 0.133956, 0.134194, 0.133941, 0.134242, 0.134441, 0.134851, 0.133982, 0.134029, 0.134371, 0.134131, 0.134265, 0.134301, 0.134744, 0.134111, 0.134133, 0.134202, 0.134781, 0.133996, 0.134082, 0.134344, 0.134291, 0.134268, 0.134242, 0.134249], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 4, 0, 6, 3, 0, 1, 4, 4, 15, 0, 0, 0, 0, 0, 0, 1]': ([0.158875, 0.159132, 0.156835, 0.134909, 0.134062, 0.134098, 0.133956, 0.134194, 0.133941, 0.134242, 0.134441, 0.134851, 0.133982, 0.134029, 0.134371, 0.134131, 0.134265, 0.134301, 0.134744, 0.134111, 0.134133, 0.134202, 0.134781, 0.133996, 0.134082, 0.134344, 0.134291, 0.134268, 0.134242, 0.134249], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	79
        Max loop nest depth: 	5
        Additions: 		4050
        Multiplications: 	992
        Divisions: 		0
        Logical: 		0
        Reads: 			6437
        Writes: 		775
        Comparisons:		79
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest7.exe __orio_perftest7.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest7.exe  
Program Test Output: 
{'[3, 1, 3, 0, 0, 2, 0, 1, 23, 29, 6, 0, 0, 0, 1, 0, 1, 0]' : 0.283282}
{'[3, 1, 3, 0, 0, 2, 0, 1, 23, 29, 6, 0, 0, 0, 1, 0, 1, 0]' : 0.281207}
{'[3, 1, 3, 0, 0, 2, 0, 1, 23, 29, 6, 0, 0, 0, 1, 0, 1, 0]' : 0.28215}
{'[3, 1, 3, 0, 0, 2, 0, 1, 23, 29, 6, 0, 0, 0, 1, 0, 1, 0]' : 0.282524}
{'[3, 1, 3, 0, 0, 2, 0, 1, 23, 29, 6, 0, 0, 0, 1, 0, 1, 0]' : 0.288403}
{'[3, 1, 3, 0, 0, 2, 0, 1, 23, 29, 6, 0, 0, 0, 1, 0, 1, 0]' : 0.275809}
{'[3, 1, 3, 0, 0, 2, 0, 1, 23, 29, 6, 0, 0, 0, 1, 0, 1, 0]' : 0.279862}
{'[3, 1, 3, 0, 0, 2, 0, 1, 23, 29, 6, 0, 0, 0, 1, 0, 1, 0]' : 0.279385}
{'[3, 1, 3, 0, 0, 2, 0, 1, 23, 29, 6, 0, 0, 0, 1, 0, 1, 0]' : 0.280826}
{'[3, 1, 3, 0, 0, 2, 0, 1, 23, 29, 6, 0, 0, 0, 1, 0, 1, 0]' : 0.283865}
{'[3, 1, 3, 0, 0, 2, 0, 1, 23, 29, 6, 0, 0, 0, 1, 0, 1, 0]' : 0.280601}
{'[3, 1, 3, 0, 0, 2, 0, 1, 23, 29, 6, 0, 0, 0, 1, 0, 1, 0]' : 0.287581}
{'[3, 1, 3, 0, 0, 2, 0, 1, 23, 29, 6, 0, 0, 0, 1, 0, 1, 0]' : 0.277588}
{'[3, 1, 3, 0, 0, 2, 0, 1, 23, 29, 6, 0, 0, 0, 1, 0, 1, 0]' : 0.28338}
{'[3, 1, 3, 0, 0, 2, 0, 1, 23, 29, 6, 0, 0, 0, 1, 0, 1, 0]' : 0.28388}
{'[3, 1, 3, 0, 0, 2, 0, 1, 23, 29, 6, 0, 0, 0, 1, 0, 1, 0]' : 0.286168}
{'[3, 1, 3, 0, 0, 2, 0, 1, 23, 29, 6, 0, 0, 0, 1, 0, 1, 0]' : 0.285296}
{'[3, 1, 3, 0, 0, 2, 0, 1, 23, 29, 6, 0, 0, 0, 1, 0, 1, 0]' : 0.282927}
{'[3, 1, 3, 0, 0, 2, 0, 1, 23, 29, 6, 0, 0, 0, 1, 0, 1, 0]' : 0.285553}
{'[3, 1, 3, 0, 0, 2, 0, 1, 23, 29, 6, 0, 0, 0, 1, 0, 1, 0]' : 0.274788}
{'[3, 1, 3, 0, 0, 2, 0, 1, 23, 29, 6, 0, 0, 0, 1, 0, 1, 0]' : 0.282295}
{'[3, 1, 3, 0, 0, 2, 0, 1, 23, 29, 6, 0, 0, 0, 1, 0, 1, 0]' : 0.286325}
{'[3, 1, 3, 0, 0, 2, 0, 1, 23, 29, 6, 0, 0, 0, 1, 0, 1, 0]' : 0.280466}
{'[3, 1, 3, 0, 0, 2, 0, 1, 23, 29, 6, 0, 0, 0, 1, 0, 1, 0]' : 0.276976}
{'[3, 1, 3, 0, 0, 2, 0, 1, 23, 29, 6, 0, 0, 0, 1, 0, 1, 0]' : 0.272898}
{'[3, 1, 3, 0, 0, 2, 0, 1, 23, 29, 6, 0, 0, 0, 1, 0, 1, 0]' : 0.278695}
{'[3, 1, 3, 0, 0, 2, 0, 1, 23, 29, 6, 0, 0, 0, 1, 0, 1, 0]' : 0.278444}
{'[3, 1, 3, 0, 0, 2, 0, 1, 23, 29, 6, 0, 0, 0, 1, 0, 1, 0]' : 0.27997}
{'[3, 1, 3, 0, 0, 2, 0, 1, 23, 29, 6, 0, 0, 0, 1, 0, 1, 0]' : 0.290767}
{'[3, 1, 3, 0, 0, 2, 0, 1, 23, 29, 6, 0, 0, 0, 1, 0, 1, 0]' : 0.282322}

out:
 ["{'[3, 1, 3, 0, 0, 2, 0, 1, 23, 29, 6, 0, 0, 0, 1, 0, 1, 0]' : 0.283282}", "{'[3, 1, 3, 0, 0, 2, 0, 1, 23, 29, 6, 0, 0, 0, 1, 0, 1, 0]' : 0.281207}", "{'[3, 1, 3, 0, 0, 2, 0, 1, 23, 29, 6, 0, 0, 0, 1, 0, 1, 0]' : 0.28215}", "{'[3, 1, 3, 0, 0, 2, 0, 1, 23, 29, 6, 0, 0, 0, 1, 0, 1, 0]' : 0.282524}", "{'[3, 1, 3, 0, 0, 2, 0, 1, 23, 29, 6, 0, 0, 0, 1, 0, 1, 0]' : 0.288403}", "{'[3, 1, 3, 0, 0, 2, 0, 1, 23, 29, 6, 0, 0, 0, 1, 0, 1, 0]' : 0.275809}", "{'[3, 1, 3, 0, 0, 2, 0, 1, 23, 29, 6, 0, 0, 0, 1, 0, 1, 0]' : 0.279862}", "{'[3, 1, 3, 0, 0, 2, 0, 1, 23, 29, 6, 0, 0, 0, 1, 0, 1, 0]' : 0.279385}", "{'[3, 1, 3, 0, 0, 2, 0, 1, 23, 29, 6, 0, 0, 0, 1, 0, 1, 0]' : 0.280826}", "{'[3, 1, 3, 0, 0, 2, 0, 1, 23, 29, 6, 0, 0, 0, 1, 0, 1, 0]' : 0.283865}", "{'[3, 1, 3, 0, 0, 2, 0, 1, 23, 29, 6, 0, 0, 0, 1, 0, 1, 0]' : 0.280601}", "{'[3, 1, 3, 0, 0, 2, 0, 1, 23, 29, 6, 0, 0, 0, 1, 0, 1, 0]' : 0.287581}", "{'[3, 1, 3, 0, 0, 2, 0, 1, 23, 29, 6, 0, 0, 0, 1, 0, 1, 0]' : 0.277588}", "{'[3, 1, 3, 0, 0, 2, 0, 1, 23, 29, 6, 0, 0, 0, 1, 0, 1, 0]' : 0.28338}", "{'[3, 1, 3, 0, 0, 2, 0, 1, 23, 29, 6, 0, 0, 0, 1, 0, 1, 0]' : 0.28388}", "{'[3, 1, 3, 0, 0, 2, 0, 1, 23, 29, 6, 0, 0, 0, 1, 0, 1, 0]' : 0.286168}", "{'[3, 1, 3, 0, 0, 2, 0, 1, 23, 29, 6, 0, 0, 0, 1, 0, 1, 0]' : 0.285296}", "{'[3, 1, 3, 0, 0, 2, 0, 1, 23, 29, 6, 0, 0, 0, 1, 0, 1, 0]' : 0.282927}", "{'[3, 1, 3, 0, 0, 2, 0, 1, 23, 29, 6, 0, 0, 0, 1, 0, 1, 0]' : 0.285553}", "{'[3, 1, 3, 0, 0, 2, 0, 1, 23, 29, 6, 0, 0, 0, 1, 0, 1, 0]' : 0.274788}", "{'[3, 1, 3, 0, 0, 2, 0, 1, 23, 29, 6, 0, 0, 0, 1, 0, 1, 0]' : 0.282295}", "{'[3, 1, 3, 0, 0, 2, 0, 1, 23, 29, 6, 0, 0, 0, 1, 0, 1, 0]' : 0.286325}", "{'[3, 1, 3, 0, 0, 2, 0, 1, 23, 29, 6, 0, 0, 0, 1, 0, 1, 0]' : 0.280466}", "{'[3, 1, 3, 0, 0, 2, 0, 1, 23, 29, 6, 0, 0, 0, 1, 0, 1, 0]' : 0.276976}", "{'[3, 1, 3, 0, 0, 2, 0, 1, 23, 29, 6, 0, 0, 0, 1, 0, 1, 0]' : 0.272898}", "{'[3, 1, 3, 0, 0, 2, 0, 1, 23, 29, 6, 0, 0, 0, 1, 0, 1, 0]' : 0.278695}", "{'[3, 1, 3, 0, 0, 2, 0, 1, 23, 29, 6, 0, 0, 0, 1, 0, 1, 0]' : 0.278444}", "{'[3, 1, 3, 0, 0, 2, 0, 1, 23, 29, 6, 0, 0, 0, 1, 0, 1, 0]' : 0.27997}", "{'[3, 1, 3, 0, 0, 2, 0, 1, 23, 29, 6, 0, 0, 0, 1, 0, 1, 0]' : 0.290767}", "{'[3, 1, 3, 0, 0, 2, 0, 1, 23, 29, 6, 0, 0, 0, 1, 0, 1, 0]' : 0.282322}"]
returning from 'run': {'[3, 1, 3, 0, 0, 2, 0, 1, 23, 29, 6, 0, 0, 0, 1, 0, 1, 0]': ([0.283282, 0.281207, 0.28215, 0.282524, 0.288403, 0.275809, 0.279862, 0.279385, 0.280826, 0.283865, 0.280601, 0.287581, 0.277588, 0.28338, 0.28388, 0.286168, 0.285296, 0.282927, 0.285553, 0.274788, 0.282295, 0.286325, 0.280466, 0.276976, 0.272898, 0.278695, 0.278444, 0.27997, 0.290767, 0.282322], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 1, 3, 0, 0, 2, 0, 1, 23, 29, 6, 0, 0, 0, 1, 0, 1, 0]': ([0.283282, 0.281207, 0.28215, 0.282524, 0.288403, 0.275809, 0.279862, 0.279385, 0.280826, 0.283865, 0.280601, 0.287581, 0.277588, 0.28338, 0.28388, 0.286168, 0.285296, 0.282927, 0.285553, 0.274788, 0.282295, 0.286325, 0.280466, 0.276976, 0.272898, 0.278695, 0.278444, 0.27997, 0.290767, 0.282322], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	179
        Max loop nest depth: 	6
        Additions: 		2717
        Multiplications: 	468
        Divisions: 		0
        Logical: 		0
        Reads: 			4720
        Writes: 		739
        Comparisons:		179
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest8.exe __orio_perftest8.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest8.exe  
Program Test Output: 
{'[2, 6, 6, 1, 0, 6, 1, 1, 14, 29, 0, 3, 1, 0, 0, 0, 1, 0]' : 0.124699}
{'[2, 6, 6, 1, 0, 6, 1, 1, 14, 29, 0, 3, 1, 0, 0, 0, 1, 0]' : 0.12497}
{'[2, 6, 6, 1, 0, 6, 1, 1, 14, 29, 0, 3, 1, 0, 0, 0, 1, 0]' : 0.124651}
{'[2, 6, 6, 1, 0, 6, 1, 1, 14, 29, 0, 3, 1, 0, 0, 0, 1, 0]' : 0.127986}
{'[2, 6, 6, 1, 0, 6, 1, 1, 14, 29, 0, 3, 1, 0, 0, 0, 1, 0]' : 0.128204}
{'[2, 6, 6, 1, 0, 6, 1, 1, 14, 29, 0, 3, 1, 0, 0, 0, 1, 0]' : 0.128162}
{'[2, 6, 6, 1, 0, 6, 1, 1, 14, 29, 0, 3, 1, 0, 0, 0, 1, 0]' : 0.128081}
{'[2, 6, 6, 1, 0, 6, 1, 1, 14, 29, 0, 3, 1, 0, 0, 0, 1, 0]' : 0.12812}
{'[2, 6, 6, 1, 0, 6, 1, 1, 14, 29, 0, 3, 1, 0, 0, 0, 1, 0]' : 0.128244}
{'[2, 6, 6, 1, 0, 6, 1, 1, 14, 29, 0, 3, 1, 0, 0, 0, 1, 0]' : 0.128201}
{'[2, 6, 6, 1, 0, 6, 1, 1, 14, 29, 0, 3, 1, 0, 0, 0, 1, 0]' : 0.128074}
{'[2, 6, 6, 1, 0, 6, 1, 1, 14, 29, 0, 3, 1, 0, 0, 0, 1, 0]' : 0.128243}
{'[2, 6, 6, 1, 0, 6, 1, 1, 14, 29, 0, 3, 1, 0, 0, 0, 1, 0]' : 0.126103}
{'[2, 6, 6, 1, 0, 6, 1, 1, 14, 29, 0, 3, 1, 0, 0, 0, 1, 0]' : 0.124413}
{'[2, 6, 6, 1, 0, 6, 1, 1, 14, 29, 0, 3, 1, 0, 0, 0, 1, 0]' : 0.124376}
{'[2, 6, 6, 1, 0, 6, 1, 1, 14, 29, 0, 3, 1, 0, 0, 0, 1, 0]' : 0.124529}
{'[2, 6, 6, 1, 0, 6, 1, 1, 14, 29, 0, 3, 1, 0, 0, 0, 1, 0]' : 0.124574}
{'[2, 6, 6, 1, 0, 6, 1, 1, 14, 29, 0, 3, 1, 0, 0, 0, 1, 0]' : 0.124516}
{'[2, 6, 6, 1, 0, 6, 1, 1, 14, 29, 0, 3, 1, 0, 0, 0, 1, 0]' : 0.12807}
{'[2, 6, 6, 1, 0, 6, 1, 1, 14, 29, 0, 3, 1, 0, 0, 0, 1, 0]' : 0.128246}
{'[2, 6, 6, 1, 0, 6, 1, 1, 14, 29, 0, 3, 1, 0, 0, 0, 1, 0]' : 0.128302}
{'[2, 6, 6, 1, 0, 6, 1, 1, 14, 29, 0, 3, 1, 0, 0, 0, 1, 0]' : 0.128178}
{'[2, 6, 6, 1, 0, 6, 1, 1, 14, 29, 0, 3, 1, 0, 0, 0, 1, 0]' : 0.128272}
{'[2, 6, 6, 1, 0, 6, 1, 1, 14, 29, 0, 3, 1, 0, 0, 0, 1, 0]' : 0.128197}
{'[2, 6, 6, 1, 0, 6, 1, 1, 14, 29, 0, 3, 1, 0, 0, 0, 1, 0]' : 0.128247}
{'[2, 6, 6, 1, 0, 6, 1, 1, 14, 29, 0, 3, 1, 0, 0, 0, 1, 0]' : 0.128173}
{'[2, 6, 6, 1, 0, 6, 1, 1, 14, 29, 0, 3, 1, 0, 0, 0, 1, 0]' : 0.128113}
{'[2, 6, 6, 1, 0, 6, 1, 1, 14, 29, 0, 3, 1, 0, 0, 0, 1, 0]' : 0.128188}
{'[2, 6, 6, 1, 0, 6, 1, 1, 14, 29, 0, 3, 1, 0, 0, 0, 1, 0]' : 0.128147}
{'[2, 6, 6, 1, 0, 6, 1, 1, 14, 29, 0, 3, 1, 0, 0, 0, 1, 0]' : 0.12823}

out:
 ["{'[2, 6, 6, 1, 0, 6, 1, 1, 14, 29, 0, 3, 1, 0, 0, 0, 1, 0]' : 0.124699}", "{'[2, 6, 6, 1, 0, 6, 1, 1, 14, 29, 0, 3, 1, 0, 0, 0, 1, 0]' : 0.12497}", "{'[2, 6, 6, 1, 0, 6, 1, 1, 14, 29, 0, 3, 1, 0, 0, 0, 1, 0]' : 0.124651}", "{'[2, 6, 6, 1, 0, 6, 1, 1, 14, 29, 0, 3, 1, 0, 0, 0, 1, 0]' : 0.127986}", "{'[2, 6, 6, 1, 0, 6, 1, 1, 14, 29, 0, 3, 1, 0, 0, 0, 1, 0]' : 0.128204}", "{'[2, 6, 6, 1, 0, 6, 1, 1, 14, 29, 0, 3, 1, 0, 0, 0, 1, 0]' : 0.128162}", "{'[2, 6, 6, 1, 0, 6, 1, 1, 14, 29, 0, 3, 1, 0, 0, 0, 1, 0]' : 0.128081}", "{'[2, 6, 6, 1, 0, 6, 1, 1, 14, 29, 0, 3, 1, 0, 0, 0, 1, 0]' : 0.12812}", "{'[2, 6, 6, 1, 0, 6, 1, 1, 14, 29, 0, 3, 1, 0, 0, 0, 1, 0]' : 0.128244}", "{'[2, 6, 6, 1, 0, 6, 1, 1, 14, 29, 0, 3, 1, 0, 0, 0, 1, 0]' : 0.128201}", "{'[2, 6, 6, 1, 0, 6, 1, 1, 14, 29, 0, 3, 1, 0, 0, 0, 1, 0]' : 0.128074}", "{'[2, 6, 6, 1, 0, 6, 1, 1, 14, 29, 0, 3, 1, 0, 0, 0, 1, 0]' : 0.128243}", "{'[2, 6, 6, 1, 0, 6, 1, 1, 14, 29, 0, 3, 1, 0, 0, 0, 1, 0]' : 0.126103}", "{'[2, 6, 6, 1, 0, 6, 1, 1, 14, 29, 0, 3, 1, 0, 0, 0, 1, 0]' : 0.124413}", "{'[2, 6, 6, 1, 0, 6, 1, 1, 14, 29, 0, 3, 1, 0, 0, 0, 1, 0]' : 0.124376}", "{'[2, 6, 6, 1, 0, 6, 1, 1, 14, 29, 0, 3, 1, 0, 0, 0, 1, 0]' : 0.124529}", "{'[2, 6, 6, 1, 0, 6, 1, 1, 14, 29, 0, 3, 1, 0, 0, 0, 1, 0]' : 0.124574}", "{'[2, 6, 6, 1, 0, 6, 1, 1, 14, 29, 0, 3, 1, 0, 0, 0, 1, 0]' : 0.124516}", "{'[2, 6, 6, 1, 0, 6, 1, 1, 14, 29, 0, 3, 1, 0, 0, 0, 1, 0]' : 0.12807}", "{'[2, 6, 6, 1, 0, 6, 1, 1, 14, 29, 0, 3, 1, 0, 0, 0, 1, 0]' : 0.128246}", "{'[2, 6, 6, 1, 0, 6, 1, 1, 14, 29, 0, 3, 1, 0, 0, 0, 1, 0]' : 0.128302}", "{'[2, 6, 6, 1, 0, 6, 1, 1, 14, 29, 0, 3, 1, 0, 0, 0, 1, 0]' : 0.128178}", "{'[2, 6, 6, 1, 0, 6, 1, 1, 14, 29, 0, 3, 1, 0, 0, 0, 1, 0]' : 0.128272}", "{'[2, 6, 6, 1, 0, 6, 1, 1, 14, 29, 0, 3, 1, 0, 0, 0, 1, 0]' : 0.128197}", "{'[2, 6, 6, 1, 0, 6, 1, 1, 14, 29, 0, 3, 1, 0, 0, 0, 1, 0]' : 0.128247}", "{'[2, 6, 6, 1, 0, 6, 1, 1, 14, 29, 0, 3, 1, 0, 0, 0, 1, 0]' : 0.128173}", "{'[2, 6, 6, 1, 0, 6, 1, 1, 14, 29, 0, 3, 1, 0, 0, 0, 1, 0]' : 0.128113}", "{'[2, 6, 6, 1, 0, 6, 1, 1, 14, 29, 0, 3, 1, 0, 0, 0, 1, 0]' : 0.128188}", "{'[2, 6, 6, 1, 0, 6, 1, 1, 14, 29, 0, 3, 1, 0, 0, 0, 1, 0]' : 0.128147}", "{'[2, 6, 6, 1, 0, 6, 1, 1, 14, 29, 0, 3, 1, 0, 0, 0, 1, 0]' : 0.12823}"]
returning from 'run': {'[2, 6, 6, 1, 0, 6, 1, 1, 14, 29, 0, 3, 1, 0, 0, 0, 1, 0]': ([0.124699, 0.12497, 0.124651, 0.127986, 0.128204, 0.128162, 0.128081, 0.12812, 0.128244, 0.128201, 0.128074, 0.128243, 0.126103, 0.124413, 0.124376, 0.124529, 0.124574, 0.124516, 0.12807, 0.128246, 0.128302, 0.128178, 0.128272, 0.128197, 0.128247, 0.128173, 0.128113, 0.128188, 0.128147, 0.12823], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 6, 6, 1, 0, 6, 1, 1, 14, 29, 0, 3, 1, 0, 0, 0, 1, 0]': ([0.124699, 0.12497, 0.124651, 0.127986, 0.128204, 0.128162, 0.128081, 0.12812, 0.128244, 0.128201, 0.128074, 0.128243, 0.126103, 0.124413, 0.124376, 0.124529, 0.124574, 0.124516, 0.12807, 0.128246, 0.128302, 0.128178, 0.128272, 0.128197, 0.128247, 0.128173, 0.128113, 0.128188, 0.128147, 0.12823], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	6
        Additions: 		805
        Multiplications: 	330
        Divisions: 		0
        Logical: 		0
        Reads: 			1594
        Writes: 		281
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest9.exe __orio_perftest9.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest9.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest9.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest9.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest9.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	75
        Max loop nest depth: 	5
        Additions: 		2278
        Multiplications: 	986
        Divisions: 		0
        Logical: 		0
        Reads: 			4659
        Writes: 		846
        Comparisons:		75
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest10.exe __orio_perftest10.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest10.exe  
Program Test Output: 
{'[0, 0, 2, 5, 1, 2, 0, 1, 6, 27, 0, 13, 0, 1, 1, 1, 1, 1]' : 0.253668}
{'[0, 0, 2, 5, 1, 2, 0, 1, 6, 27, 0, 13, 0, 1, 1, 1, 1, 1]' : 0.243619}
{'[0, 0, 2, 5, 1, 2, 0, 1, 6, 27, 0, 13, 0, 1, 1, 1, 1, 1]' : 0.226038}
{'[0, 0, 2, 5, 1, 2, 0, 1, 6, 27, 0, 13, 0, 1, 1, 1, 1, 1]' : 0.22628}
{'[0, 0, 2, 5, 1, 2, 0, 1, 6, 27, 0, 13, 0, 1, 1, 1, 1, 1]' : 0.229419}
{'[0, 0, 2, 5, 1, 2, 0, 1, 6, 27, 0, 13, 0, 1, 1, 1, 1, 1]' : 0.225755}
{'[0, 0, 2, 5, 1, 2, 0, 1, 6, 27, 0, 13, 0, 1, 1, 1, 1, 1]' : 0.226029}
{'[0, 0, 2, 5, 1, 2, 0, 1, 6, 27, 0, 13, 0, 1, 1, 1, 1, 1]' : 0.226216}
{'[0, 0, 2, 5, 1, 2, 0, 1, 6, 27, 0, 13, 0, 1, 1, 1, 1, 1]' : 0.229767}
{'[0, 0, 2, 5, 1, 2, 0, 1, 6, 27, 0, 13, 0, 1, 1, 1, 1, 1]' : 0.228417}
{'[0, 0, 2, 5, 1, 2, 0, 1, 6, 27, 0, 13, 0, 1, 1, 1, 1, 1]' : 0.226966}
{'[0, 0, 2, 5, 1, 2, 0, 1, 6, 27, 0, 13, 0, 1, 1, 1, 1, 1]' : 0.23166}
{'[0, 0, 2, 5, 1, 2, 0, 1, 6, 27, 0, 13, 0, 1, 1, 1, 1, 1]' : 0.232077}
{'[0, 0, 2, 5, 1, 2, 0, 1, 6, 27, 0, 13, 0, 1, 1, 1, 1, 1]' : 0.23187}
{'[0, 0, 2, 5, 1, 2, 0, 1, 6, 27, 0, 13, 0, 1, 1, 1, 1, 1]' : 0.227696}
{'[0, 0, 2, 5, 1, 2, 0, 1, 6, 27, 0, 13, 0, 1, 1, 1, 1, 1]' : 0.226041}
{'[0, 0, 2, 5, 1, 2, 0, 1, 6, 27, 0, 13, 0, 1, 1, 1, 1, 1]' : 0.226192}
{'[0, 0, 2, 5, 1, 2, 0, 1, 6, 27, 0, 13, 0, 1, 1, 1, 1, 1]' : 0.231311}
{'[0, 0, 2, 5, 1, 2, 0, 1, 6, 27, 0, 13, 0, 1, 1, 1, 1, 1]' : 0.231317}
{'[0, 0, 2, 5, 1, 2, 0, 1, 6, 27, 0, 13, 0, 1, 1, 1, 1, 1]' : 0.226239}
{'[0, 0, 2, 5, 1, 2, 0, 1, 6, 27, 0, 13, 0, 1, 1, 1, 1, 1]' : 0.225973}
{'[0, 0, 2, 5, 1, 2, 0, 1, 6, 27, 0, 13, 0, 1, 1, 1, 1, 1]' : 0.226292}
{'[0, 0, 2, 5, 1, 2, 0, 1, 6, 27, 0, 13, 0, 1, 1, 1, 1, 1]' : 0.226213}
{'[0, 0, 2, 5, 1, 2, 0, 1, 6, 27, 0, 13, 0, 1, 1, 1, 1, 1]' : 0.227881}
{'[0, 0, 2, 5, 1, 2, 0, 1, 6, 27, 0, 13, 0, 1, 1, 1, 1, 1]' : 0.231064}
{'[0, 0, 2, 5, 1, 2, 0, 1, 6, 27, 0, 13, 0, 1, 1, 1, 1, 1]' : 0.226146}
{'[0, 0, 2, 5, 1, 2, 0, 1, 6, 27, 0, 13, 0, 1, 1, 1, 1, 1]' : 0.226107}
{'[0, 0, 2, 5, 1, 2, 0, 1, 6, 27, 0, 13, 0, 1, 1, 1, 1, 1]' : 0.225022}
{'[0, 0, 2, 5, 1, 2, 0, 1, 6, 27, 0, 13, 0, 1, 1, 1, 1, 1]' : 0.226203}
{'[0, 0, 2, 5, 1, 2, 0, 1, 6, 27, 0, 13, 0, 1, 1, 1, 1, 1]' : 0.226589}

out:
 ["{'[0, 0, 2, 5, 1, 2, 0, 1, 6, 27, 0, 13, 0, 1, 1, 1, 1, 1]' : 0.253668}", "{'[0, 0, 2, 5, 1, 2, 0, 1, 6, 27, 0, 13, 0, 1, 1, 1, 1, 1]' : 0.243619}", "{'[0, 0, 2, 5, 1, 2, 0, 1, 6, 27, 0, 13, 0, 1, 1, 1, 1, 1]' : 0.226038}", "{'[0, 0, 2, 5, 1, 2, 0, 1, 6, 27, 0, 13, 0, 1, 1, 1, 1, 1]' : 0.22628}", "{'[0, 0, 2, 5, 1, 2, 0, 1, 6, 27, 0, 13, 0, 1, 1, 1, 1, 1]' : 0.229419}", "{'[0, 0, 2, 5, 1, 2, 0, 1, 6, 27, 0, 13, 0, 1, 1, 1, 1, 1]' : 0.225755}", "{'[0, 0, 2, 5, 1, 2, 0, 1, 6, 27, 0, 13, 0, 1, 1, 1, 1, 1]' : 0.226029}", "{'[0, 0, 2, 5, 1, 2, 0, 1, 6, 27, 0, 13, 0, 1, 1, 1, 1, 1]' : 0.226216}", "{'[0, 0, 2, 5, 1, 2, 0, 1, 6, 27, 0, 13, 0, 1, 1, 1, 1, 1]' : 0.229767}", "{'[0, 0, 2, 5, 1, 2, 0, 1, 6, 27, 0, 13, 0, 1, 1, 1, 1, 1]' : 0.228417}", "{'[0, 0, 2, 5, 1, 2, 0, 1, 6, 27, 0, 13, 0, 1, 1, 1, 1, 1]' : 0.226966}", "{'[0, 0, 2, 5, 1, 2, 0, 1, 6, 27, 0, 13, 0, 1, 1, 1, 1, 1]' : 0.23166}", "{'[0, 0, 2, 5, 1, 2, 0, 1, 6, 27, 0, 13, 0, 1, 1, 1, 1, 1]' : 0.232077}", "{'[0, 0, 2, 5, 1, 2, 0, 1, 6, 27, 0, 13, 0, 1, 1, 1, 1, 1]' : 0.23187}", "{'[0, 0, 2, 5, 1, 2, 0, 1, 6, 27, 0, 13, 0, 1, 1, 1, 1, 1]' : 0.227696}", "{'[0, 0, 2, 5, 1, 2, 0, 1, 6, 27, 0, 13, 0, 1, 1, 1, 1, 1]' : 0.226041}", "{'[0, 0, 2, 5, 1, 2, 0, 1, 6, 27, 0, 13, 0, 1, 1, 1, 1, 1]' : 0.226192}", "{'[0, 0, 2, 5, 1, 2, 0, 1, 6, 27, 0, 13, 0, 1, 1, 1, 1, 1]' : 0.231311}", "{'[0, 0, 2, 5, 1, 2, 0, 1, 6, 27, 0, 13, 0, 1, 1, 1, 1, 1]' : 0.231317}", "{'[0, 0, 2, 5, 1, 2, 0, 1, 6, 27, 0, 13, 0, 1, 1, 1, 1, 1]' : 0.226239}", "{'[0, 0, 2, 5, 1, 2, 0, 1, 6, 27, 0, 13, 0, 1, 1, 1, 1, 1]' : 0.225973}", "{'[0, 0, 2, 5, 1, 2, 0, 1, 6, 27, 0, 13, 0, 1, 1, 1, 1, 1]' : 0.226292}", "{'[0, 0, 2, 5, 1, 2, 0, 1, 6, 27, 0, 13, 0, 1, 1, 1, 1, 1]' : 0.226213}", "{'[0, 0, 2, 5, 1, 2, 0, 1, 6, 27, 0, 13, 0, 1, 1, 1, 1, 1]' : 0.227881}", "{'[0, 0, 2, 5, 1, 2, 0, 1, 6, 27, 0, 13, 0, 1, 1, 1, 1, 1]' : 0.231064}", "{'[0, 0, 2, 5, 1, 2, 0, 1, 6, 27, 0, 13, 0, 1, 1, 1, 1, 1]' : 0.226146}", "{'[0, 0, 2, 5, 1, 2, 0, 1, 6, 27, 0, 13, 0, 1, 1, 1, 1, 1]' : 0.226107}", "{'[0, 0, 2, 5, 1, 2, 0, 1, 6, 27, 0, 13, 0, 1, 1, 1, 1, 1]' : 0.225022}", "{'[0, 0, 2, 5, 1, 2, 0, 1, 6, 27, 0, 13, 0, 1, 1, 1, 1, 1]' : 0.226203}", "{'[0, 0, 2, 5, 1, 2, 0, 1, 6, 27, 0, 13, 0, 1, 1, 1, 1, 1]' : 0.226589}"]
returning from 'run': {'[0, 0, 2, 5, 1, 2, 0, 1, 6, 27, 0, 13, 0, 1, 1, 1, 1, 1]': ([0.253668, 0.243619, 0.226038, 0.22628, 0.229419, 0.225755, 0.226029, 0.226216, 0.229767, 0.228417, 0.226966, 0.23166, 0.232077, 0.23187, 0.227696, 0.226041, 0.226192, 0.231311, 0.231317, 0.226239, 0.225973, 0.226292, 0.226213, 0.227881, 0.231064, 0.226146, 0.226107, 0.225022, 0.226203, 0.226589], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 2, 5, 1, 2, 0, 1, 6, 27, 0, 13, 0, 1, 1, 1, 1, 1]': ([0.253668, 0.243619, 0.226038, 0.22628, 0.229419, 0.225755, 0.226029, 0.226216, 0.229767, 0.228417, 0.226966, 0.23166, 0.232077, 0.23187, 0.227696, 0.226041, 0.226192, 0.231311, 0.231317, 0.226239, 0.225973, 0.226292, 0.226213, 0.227881, 0.231064, 0.226146, 0.226107, 0.225022, 0.226203, 0.226589], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	23
        Max loop nest depth: 	5
        Additions: 		952
        Multiplications: 	264
        Divisions: 		0
        Logical: 		0
        Reads: 			1769
        Writes: 		219
        Comparisons:		23
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest11.exe __orio_perftest11.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest11.exe  
Program Test Output: 
{'[0, 4, 4, 1, 3, 6, 0, 1, 22, 0, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.161563}
{'[0, 4, 4, 1, 3, 6, 0, 1, 22, 0, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.161169}
{'[0, 4, 4, 1, 3, 6, 0, 1, 22, 0, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.157439}
{'[0, 4, 4, 1, 3, 6, 0, 1, 22, 0, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.145057}
{'[0, 4, 4, 1, 3, 6, 0, 1, 22, 0, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.146415}
{'[0, 4, 4, 1, 3, 6, 0, 1, 22, 0, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.145433}
{'[0, 4, 4, 1, 3, 6, 0, 1, 22, 0, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.147869}
{'[0, 4, 4, 1, 3, 6, 0, 1, 22, 0, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.147688}
{'[0, 4, 4, 1, 3, 6, 0, 1, 22, 0, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.145432}
{'[0, 4, 4, 1, 3, 6, 0, 1, 22, 0, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.1444}
{'[0, 4, 4, 1, 3, 6, 0, 1, 22, 0, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.145238}
{'[0, 4, 4, 1, 3, 6, 0, 1, 22, 0, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.14325}
{'[0, 4, 4, 1, 3, 6, 0, 1, 22, 0, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.146387}
{'[0, 4, 4, 1, 3, 6, 0, 1, 22, 0, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.147764}
{'[0, 4, 4, 1, 3, 6, 0, 1, 22, 0, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.146386}
{'[0, 4, 4, 1, 3, 6, 0, 1, 22, 0, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.14534}
{'[0, 4, 4, 1, 3, 6, 0, 1, 22, 0, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.147509}
{'[0, 4, 4, 1, 3, 6, 0, 1, 22, 0, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.147595}
{'[0, 4, 4, 1, 3, 6, 0, 1, 22, 0, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.145541}
{'[0, 4, 4, 1, 3, 6, 0, 1, 22, 0, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.146461}
{'[0, 4, 4, 1, 3, 6, 0, 1, 22, 0, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.147748}
{'[0, 4, 4, 1, 3, 6, 0, 1, 22, 0, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.146681}
{'[0, 4, 4, 1, 3, 6, 0, 1, 22, 0, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.144768}
{'[0, 4, 4, 1, 3, 6, 0, 1, 22, 0, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.148027}
{'[0, 4, 4, 1, 3, 6, 0, 1, 22, 0, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.1478}
{'[0, 4, 4, 1, 3, 6, 0, 1, 22, 0, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.14516}
{'[0, 4, 4, 1, 3, 6, 0, 1, 22, 0, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.147744}
{'[0, 4, 4, 1, 3, 6, 0, 1, 22, 0, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.148214}
{'[0, 4, 4, 1, 3, 6, 0, 1, 22, 0, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.146195}
{'[0, 4, 4, 1, 3, 6, 0, 1, 22, 0, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.145435}

out:
 ["{'[0, 4, 4, 1, 3, 6, 0, 1, 22, 0, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.161563}", "{'[0, 4, 4, 1, 3, 6, 0, 1, 22, 0, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.161169}", "{'[0, 4, 4, 1, 3, 6, 0, 1, 22, 0, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.157439}", "{'[0, 4, 4, 1, 3, 6, 0, 1, 22, 0, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.145057}", "{'[0, 4, 4, 1, 3, 6, 0, 1, 22, 0, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.146415}", "{'[0, 4, 4, 1, 3, 6, 0, 1, 22, 0, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.145433}", "{'[0, 4, 4, 1, 3, 6, 0, 1, 22, 0, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.147869}", "{'[0, 4, 4, 1, 3, 6, 0, 1, 22, 0, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.147688}", "{'[0, 4, 4, 1, 3, 6, 0, 1, 22, 0, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.145432}", "{'[0, 4, 4, 1, 3, 6, 0, 1, 22, 0, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.1444}", "{'[0, 4, 4, 1, 3, 6, 0, 1, 22, 0, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.145238}", "{'[0, 4, 4, 1, 3, 6, 0, 1, 22, 0, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.14325}", "{'[0, 4, 4, 1, 3, 6, 0, 1, 22, 0, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.146387}", "{'[0, 4, 4, 1, 3, 6, 0, 1, 22, 0, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.147764}", "{'[0, 4, 4, 1, 3, 6, 0, 1, 22, 0, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.146386}", "{'[0, 4, 4, 1, 3, 6, 0, 1, 22, 0, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.14534}", "{'[0, 4, 4, 1, 3, 6, 0, 1, 22, 0, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.147509}", "{'[0, 4, 4, 1, 3, 6, 0, 1, 22, 0, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.147595}", "{'[0, 4, 4, 1, 3, 6, 0, 1, 22, 0, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.145541}", "{'[0, 4, 4, 1, 3, 6, 0, 1, 22, 0, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.146461}", "{'[0, 4, 4, 1, 3, 6, 0, 1, 22, 0, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.147748}", "{'[0, 4, 4, 1, 3, 6, 0, 1, 22, 0, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.146681}", "{'[0, 4, 4, 1, 3, 6, 0, 1, 22, 0, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.144768}", "{'[0, 4, 4, 1, 3, 6, 0, 1, 22, 0, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.148027}", "{'[0, 4, 4, 1, 3, 6, 0, 1, 22, 0, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.1478}", "{'[0, 4, 4, 1, 3, 6, 0, 1, 22, 0, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.14516}", "{'[0, 4, 4, 1, 3, 6, 0, 1, 22, 0, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.147744}", "{'[0, 4, 4, 1, 3, 6, 0, 1, 22, 0, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.148214}", "{'[0, 4, 4, 1, 3, 6, 0, 1, 22, 0, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.146195}", "{'[0, 4, 4, 1, 3, 6, 0, 1, 22, 0, 0, 1, 2, 0, 0, 0, 1, 1]' : 0.145435}"]
returning from 'run': {'[0, 4, 4, 1, 3, 6, 0, 1, 22, 0, 0, 1, 2, 0, 0, 0, 1, 1]': ([0.161563, 0.161169, 0.157439, 0.145057, 0.146415, 0.145433, 0.147869, 0.147688, 0.145432, 0.1444, 0.145238, 0.14325, 0.146387, 0.147764, 0.146386, 0.14534, 0.147509, 0.147595, 0.145541, 0.146461, 0.147748, 0.146681, 0.144768, 0.148027, 0.1478, 0.14516, 0.147744, 0.148214, 0.146195, 0.145435], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 4, 4, 1, 3, 6, 0, 1, 22, 0, 0, 1, 2, 0, 0, 0, 1, 1]': ([0.161563, 0.161169, 0.157439, 0.145057, 0.146415, 0.145433, 0.147869, 0.147688, 0.145432, 0.1444, 0.145238, 0.14325, 0.146387, 0.147764, 0.146386, 0.14534, 0.147509, 0.147595, 0.145541, 0.146461, 0.147748, 0.146681, 0.144768, 0.148027, 0.1478, 0.14516, 0.147744, 0.148214, 0.146195, 0.145435], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	30
        Max loop nest depth: 	6
        Additions: 		3384
        Multiplications: 	910
        Divisions: 		0
        Logical: 		0
        Reads: 			5216
        Writes: 		525
        Comparisons:		30
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest12.exe __orio_perftest12.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest12.exe  
Program Test Output: 
{'[1, 0, 2, 3, 3, 3, 1, 0, 0, 1, 10, 0, 2, 0, 0, 0, 1, 0]' : 0.254308}
{'[1, 0, 2, 3, 3, 3, 1, 0, 0, 1, 10, 0, 2, 0, 0, 0, 1, 0]' : 0.235316}
{'[1, 0, 2, 3, 3, 3, 1, 0, 0, 1, 10, 0, 2, 0, 0, 0, 1, 0]' : 0.223338}
{'[1, 0, 2, 3, 3, 3, 1, 0, 0, 1, 10, 0, 2, 0, 0, 0, 1, 0]' : 0.221053}
{'[1, 0, 2, 3, 3, 3, 1, 0, 0, 1, 10, 0, 2, 0, 0, 0, 1, 0]' : 0.215776}
{'[1, 0, 2, 3, 3, 3, 1, 0, 0, 1, 10, 0, 2, 0, 0, 0, 1, 0]' : 0.219754}
{'[1, 0, 2, 3, 3, 3, 1, 0, 0, 1, 10, 0, 2, 0, 0, 0, 1, 0]' : 0.216396}
{'[1, 0, 2, 3, 3, 3, 1, 0, 0, 1, 10, 0, 2, 0, 0, 0, 1, 0]' : 0.227929}
{'[1, 0, 2, 3, 3, 3, 1, 0, 0, 1, 10, 0, 2, 0, 0, 0, 1, 0]' : 0.223268}
{'[1, 0, 2, 3, 3, 3, 1, 0, 0, 1, 10, 0, 2, 0, 0, 0, 1, 0]' : 0.227106}
{'[1, 0, 2, 3, 3, 3, 1, 0, 0, 1, 10, 0, 2, 0, 0, 0, 1, 0]' : 0.225473}
{'[1, 0, 2, 3, 3, 3, 1, 0, 0, 1, 10, 0, 2, 0, 0, 0, 1, 0]' : 0.220149}
{'[1, 0, 2, 3, 3, 3, 1, 0, 0, 1, 10, 0, 2, 0, 0, 0, 1, 0]' : 0.216078}
{'[1, 0, 2, 3, 3, 3, 1, 0, 0, 1, 10, 0, 2, 0, 0, 0, 1, 0]' : 0.218771}
{'[1, 0, 2, 3, 3, 3, 1, 0, 0, 1, 10, 0, 2, 0, 0, 0, 1, 0]' : 0.226035}
{'[1, 0, 2, 3, 3, 3, 1, 0, 0, 1, 10, 0, 2, 0, 0, 0, 1, 0]' : 0.219885}
{'[1, 0, 2, 3, 3, 3, 1, 0, 0, 1, 10, 0, 2, 0, 0, 0, 1, 0]' : 0.227758}
{'[1, 0, 2, 3, 3, 3, 1, 0, 0, 1, 10, 0, 2, 0, 0, 0, 1, 0]' : 0.218685}
{'[1, 0, 2, 3, 3, 3, 1, 0, 0, 1, 10, 0, 2, 0, 0, 0, 1, 0]' : 0.219061}
{'[1, 0, 2, 3, 3, 3, 1, 0, 0, 1, 10, 0, 2, 0, 0, 0, 1, 0]' : 0.215704}
{'[1, 0, 2, 3, 3, 3, 1, 0, 0, 1, 10, 0, 2, 0, 0, 0, 1, 0]' : 0.217313}
{'[1, 0, 2, 3, 3, 3, 1, 0, 0, 1, 10, 0, 2, 0, 0, 0, 1, 0]' : 0.218674}
{'[1, 0, 2, 3, 3, 3, 1, 0, 0, 1, 10, 0, 2, 0, 0, 0, 1, 0]' : 0.218685}
{'[1, 0, 2, 3, 3, 3, 1, 0, 0, 1, 10, 0, 2, 0, 0, 0, 1, 0]' : 0.227756}
{'[1, 0, 2, 3, 3, 3, 1, 0, 0, 1, 10, 0, 2, 0, 0, 0, 1, 0]' : 0.220324}
{'[1, 0, 2, 3, 3, 3, 1, 0, 0, 1, 10, 0, 2, 0, 0, 0, 1, 0]' : 0.219575}
{'[1, 0, 2, 3, 3, 3, 1, 0, 0, 1, 10, 0, 2, 0, 0, 0, 1, 0]' : 0.215882}
{'[1, 0, 2, 3, 3, 3, 1, 0, 0, 1, 10, 0, 2, 0, 0, 0, 1, 0]' : 0.224154}
{'[1, 0, 2, 3, 3, 3, 1, 0, 0, 1, 10, 0, 2, 0, 0, 0, 1, 0]' : 0.225592}
{'[1, 0, 2, 3, 3, 3, 1, 0, 0, 1, 10, 0, 2, 0, 0, 0, 1, 0]' : 0.219725}

out:
 ["{'[1, 0, 2, 3, 3, 3, 1, 0, 0, 1, 10, 0, 2, 0, 0, 0, 1, 0]' : 0.254308}", "{'[1, 0, 2, 3, 3, 3, 1, 0, 0, 1, 10, 0, 2, 0, 0, 0, 1, 0]' : 0.235316}", "{'[1, 0, 2, 3, 3, 3, 1, 0, 0, 1, 10, 0, 2, 0, 0, 0, 1, 0]' : 0.223338}", "{'[1, 0, 2, 3, 3, 3, 1, 0, 0, 1, 10, 0, 2, 0, 0, 0, 1, 0]' : 0.221053}", "{'[1, 0, 2, 3, 3, 3, 1, 0, 0, 1, 10, 0, 2, 0, 0, 0, 1, 0]' : 0.215776}", "{'[1, 0, 2, 3, 3, 3, 1, 0, 0, 1, 10, 0, 2, 0, 0, 0, 1, 0]' : 0.219754}", "{'[1, 0, 2, 3, 3, 3, 1, 0, 0, 1, 10, 0, 2, 0, 0, 0, 1, 0]' : 0.216396}", "{'[1, 0, 2, 3, 3, 3, 1, 0, 0, 1, 10, 0, 2, 0, 0, 0, 1, 0]' : 0.227929}", "{'[1, 0, 2, 3, 3, 3, 1, 0, 0, 1, 10, 0, 2, 0, 0, 0, 1, 0]' : 0.223268}", "{'[1, 0, 2, 3, 3, 3, 1, 0, 0, 1, 10, 0, 2, 0, 0, 0, 1, 0]' : 0.227106}", "{'[1, 0, 2, 3, 3, 3, 1, 0, 0, 1, 10, 0, 2, 0, 0, 0, 1, 0]' : 0.225473}", "{'[1, 0, 2, 3, 3, 3, 1, 0, 0, 1, 10, 0, 2, 0, 0, 0, 1, 0]' : 0.220149}", "{'[1, 0, 2, 3, 3, 3, 1, 0, 0, 1, 10, 0, 2, 0, 0, 0, 1, 0]' : 0.216078}", "{'[1, 0, 2, 3, 3, 3, 1, 0, 0, 1, 10, 0, 2, 0, 0, 0, 1, 0]' : 0.218771}", "{'[1, 0, 2, 3, 3, 3, 1, 0, 0, 1, 10, 0, 2, 0, 0, 0, 1, 0]' : 0.226035}", "{'[1, 0, 2, 3, 3, 3, 1, 0, 0, 1, 10, 0, 2, 0, 0, 0, 1, 0]' : 0.219885}", "{'[1, 0, 2, 3, 3, 3, 1, 0, 0, 1, 10, 0, 2, 0, 0, 0, 1, 0]' : 0.227758}", "{'[1, 0, 2, 3, 3, 3, 1, 0, 0, 1, 10, 0, 2, 0, 0, 0, 1, 0]' : 0.218685}", "{'[1, 0, 2, 3, 3, 3, 1, 0, 0, 1, 10, 0, 2, 0, 0, 0, 1, 0]' : 0.219061}", "{'[1, 0, 2, 3, 3, 3, 1, 0, 0, 1, 10, 0, 2, 0, 0, 0, 1, 0]' : 0.215704}", "{'[1, 0, 2, 3, 3, 3, 1, 0, 0, 1, 10, 0, 2, 0, 0, 0, 1, 0]' : 0.217313}", "{'[1, 0, 2, 3, 3, 3, 1, 0, 0, 1, 10, 0, 2, 0, 0, 0, 1, 0]' : 0.218674}", "{'[1, 0, 2, 3, 3, 3, 1, 0, 0, 1, 10, 0, 2, 0, 0, 0, 1, 0]' : 0.218685}", "{'[1, 0, 2, 3, 3, 3, 1, 0, 0, 1, 10, 0, 2, 0, 0, 0, 1, 0]' : 0.227756}", "{'[1, 0, 2, 3, 3, 3, 1, 0, 0, 1, 10, 0, 2, 0, 0, 0, 1, 0]' : 0.220324}", "{'[1, 0, 2, 3, 3, 3, 1, 0, 0, 1, 10, 0, 2, 0, 0, 0, 1, 0]' : 0.219575}", "{'[1, 0, 2, 3, 3, 3, 1, 0, 0, 1, 10, 0, 2, 0, 0, 0, 1, 0]' : 0.215882}", "{'[1, 0, 2, 3, 3, 3, 1, 0, 0, 1, 10, 0, 2, 0, 0, 0, 1, 0]' : 0.224154}", "{'[1, 0, 2, 3, 3, 3, 1, 0, 0, 1, 10, 0, 2, 0, 0, 0, 1, 0]' : 0.225592}", "{'[1, 0, 2, 3, 3, 3, 1, 0, 0, 1, 10, 0, 2, 0, 0, 0, 1, 0]' : 0.219725}"]
returning from 'run': {'[1, 0, 2, 3, 3, 3, 1, 0, 0, 1, 10, 0, 2, 0, 0, 0, 1, 0]': ([0.254308, 0.235316, 0.223338, 0.221053, 0.215776, 0.219754, 0.216396, 0.227929, 0.223268, 0.227106, 0.225473, 0.220149, 0.216078, 0.218771, 0.226035, 0.219885, 0.227758, 0.218685, 0.219061, 0.215704, 0.217313, 0.218674, 0.218685, 0.227756, 0.220324, 0.219575, 0.215882, 0.224154, 0.225592, 0.219725], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 2, 3, 3, 3, 1, 0, 0, 1, 10, 0, 2, 0, 0, 0, 1, 0]': ([0.254308, 0.235316, 0.223338, 0.221053, 0.215776, 0.219754, 0.216396, 0.227929, 0.223268, 0.227106, 0.225473, 0.220149, 0.216078, 0.218771, 0.226035, 0.219885, 0.227758, 0.218685, 0.219061, 0.215704, 0.217313, 0.218674, 0.218685, 0.227756, 0.220324, 0.219575, 0.215882, 0.224154, 0.225592, 0.219725], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	5
        Additions: 		94
        Multiplications: 	32
        Divisions: 		0
        Logical: 		0
        Reads: 			231
        Writes: 		53
        Comparisons:		8
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest13.exe __orio_perftest13.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest13.exe  
Program Test Output: 
{'[0, 0, 3, 4, 0, 5, 1, 0, 0, 0, 16, 6, 0, 1, 0, 1, 1, 0]' : 0.202897}
{'[0, 0, 3, 4, 0, 5, 1, 0, 0, 0, 16, 6, 0, 1, 0, 1, 1, 0]' : 0.201797}
{'[0, 0, 3, 4, 0, 5, 1, 0, 0, 0, 16, 6, 0, 1, 0, 1, 1, 0]' : 0.171308}
{'[0, 0, 3, 4, 0, 5, 1, 0, 0, 0, 16, 6, 0, 1, 0, 1, 1, 0]' : 0.173502}
{'[0, 0, 3, 4, 0, 5, 1, 0, 0, 0, 16, 6, 0, 1, 0, 1, 1, 0]' : 0.174749}
{'[0, 0, 3, 4, 0, 5, 1, 0, 0, 0, 16, 6, 0, 1, 0, 1, 1, 0]' : 0.174614}
{'[0, 0, 3, 4, 0, 5, 1, 0, 0, 0, 16, 6, 0, 1, 0, 1, 1, 0]' : 0.174984}
{'[0, 0, 3, 4, 0, 5, 1, 0, 0, 0, 16, 6, 0, 1, 0, 1, 1, 0]' : 0.175483}
{'[0, 0, 3, 4, 0, 5, 1, 0, 0, 0, 16, 6, 0, 1, 0, 1, 1, 0]' : 0.175727}
{'[0, 0, 3, 4, 0, 5, 1, 0, 0, 0, 16, 6, 0, 1, 0, 1, 1, 0]' : 0.174674}
{'[0, 0, 3, 4, 0, 5, 1, 0, 0, 0, 16, 6, 0, 1, 0, 1, 1, 0]' : 0.174663}
{'[0, 0, 3, 4, 0, 5, 1, 0, 0, 0, 16, 6, 0, 1, 0, 1, 1, 0]' : 0.174708}
{'[0, 0, 3, 4, 0, 5, 1, 0, 0, 0, 16, 6, 0, 1, 0, 1, 1, 0]' : 0.174832}
{'[0, 0, 3, 4, 0, 5, 1, 0, 0, 0, 16, 6, 0, 1, 0, 1, 1, 0]' : 0.17342}
{'[0, 0, 3, 4, 0, 5, 1, 0, 0, 0, 16, 6, 0, 1, 0, 1, 1, 0]' : 0.172519}
{'[0, 0, 3, 4, 0, 5, 1, 0, 0, 0, 16, 6, 0, 1, 0, 1, 1, 0]' : 0.180578}
{'[0, 0, 3, 4, 0, 5, 1, 0, 0, 0, 16, 6, 0, 1, 0, 1, 1, 0]' : 0.176135}
{'[0, 0, 3, 4, 0, 5, 1, 0, 0, 0, 16, 6, 0, 1, 0, 1, 1, 0]' : 0.174824}
{'[0, 0, 3, 4, 0, 5, 1, 0, 0, 0, 16, 6, 0, 1, 0, 1, 1, 0]' : 0.174804}
{'[0, 0, 3, 4, 0, 5, 1, 0, 0, 0, 16, 6, 0, 1, 0, 1, 1, 0]' : 0.175314}
{'[0, 0, 3, 4, 0, 5, 1, 0, 0, 0, 16, 6, 0, 1, 0, 1, 1, 0]' : 0.175068}
{'[0, 0, 3, 4, 0, 5, 1, 0, 0, 0, 16, 6, 0, 1, 0, 1, 1, 0]' : 0.174841}
{'[0, 0, 3, 4, 0, 5, 1, 0, 0, 0, 16, 6, 0, 1, 0, 1, 1, 0]' : 0.178018}
{'[0, 0, 3, 4, 0, 5, 1, 0, 0, 0, 16, 6, 0, 1, 0, 1, 1, 0]' : 0.180728}
{'[0, 0, 3, 4, 0, 5, 1, 0, 0, 0, 16, 6, 0, 1, 0, 1, 1, 0]' : 0.180666}
{'[0, 0, 3, 4, 0, 5, 1, 0, 0, 0, 16, 6, 0, 1, 0, 1, 1, 0]' : 0.179722}
{'[0, 0, 3, 4, 0, 5, 1, 0, 0, 0, 16, 6, 0, 1, 0, 1, 1, 0]' : 0.179435}
{'[0, 0, 3, 4, 0, 5, 1, 0, 0, 0, 16, 6, 0, 1, 0, 1, 1, 0]' : 0.174741}
{'[0, 0, 3, 4, 0, 5, 1, 0, 0, 0, 16, 6, 0, 1, 0, 1, 1, 0]' : 0.174892}
{'[0, 0, 3, 4, 0, 5, 1, 0, 0, 0, 16, 6, 0, 1, 0, 1, 1, 0]' : 0.174737}

out:
 ["{'[0, 0, 3, 4, 0, 5, 1, 0, 0, 0, 16, 6, 0, 1, 0, 1, 1, 0]' : 0.202897}", "{'[0, 0, 3, 4, 0, 5, 1, 0, 0, 0, 16, 6, 0, 1, 0, 1, 1, 0]' : 0.201797}", "{'[0, 0, 3, 4, 0, 5, 1, 0, 0, 0, 16, 6, 0, 1, 0, 1, 1, 0]' : 0.171308}", "{'[0, 0, 3, 4, 0, 5, 1, 0, 0, 0, 16, 6, 0, 1, 0, 1, 1, 0]' : 0.173502}", "{'[0, 0, 3, 4, 0, 5, 1, 0, 0, 0, 16, 6, 0, 1, 0, 1, 1, 0]' : 0.174749}", "{'[0, 0, 3, 4, 0, 5, 1, 0, 0, 0, 16, 6, 0, 1, 0, 1, 1, 0]' : 0.174614}", "{'[0, 0, 3, 4, 0, 5, 1, 0, 0, 0, 16, 6, 0, 1, 0, 1, 1, 0]' : 0.174984}", "{'[0, 0, 3, 4, 0, 5, 1, 0, 0, 0, 16, 6, 0, 1, 0, 1, 1, 0]' : 0.175483}", "{'[0, 0, 3, 4, 0, 5, 1, 0, 0, 0, 16, 6, 0, 1, 0, 1, 1, 0]' : 0.175727}", "{'[0, 0, 3, 4, 0, 5, 1, 0, 0, 0, 16, 6, 0, 1, 0, 1, 1, 0]' : 0.174674}", "{'[0, 0, 3, 4, 0, 5, 1, 0, 0, 0, 16, 6, 0, 1, 0, 1, 1, 0]' : 0.174663}", "{'[0, 0, 3, 4, 0, 5, 1, 0, 0, 0, 16, 6, 0, 1, 0, 1, 1, 0]' : 0.174708}", "{'[0, 0, 3, 4, 0, 5, 1, 0, 0, 0, 16, 6, 0, 1, 0, 1, 1, 0]' : 0.174832}", "{'[0, 0, 3, 4, 0, 5, 1, 0, 0, 0, 16, 6, 0, 1, 0, 1, 1, 0]' : 0.17342}", "{'[0, 0, 3, 4, 0, 5, 1, 0, 0, 0, 16, 6, 0, 1, 0, 1, 1, 0]' : 0.172519}", "{'[0, 0, 3, 4, 0, 5, 1, 0, 0, 0, 16, 6, 0, 1, 0, 1, 1, 0]' : 0.180578}", "{'[0, 0, 3, 4, 0, 5, 1, 0, 0, 0, 16, 6, 0, 1, 0, 1, 1, 0]' : 0.176135}", "{'[0, 0, 3, 4, 0, 5, 1, 0, 0, 0, 16, 6, 0, 1, 0, 1, 1, 0]' : 0.174824}", "{'[0, 0, 3, 4, 0, 5, 1, 0, 0, 0, 16, 6, 0, 1, 0, 1, 1, 0]' : 0.174804}", "{'[0, 0, 3, 4, 0, 5, 1, 0, 0, 0, 16, 6, 0, 1, 0, 1, 1, 0]' : 0.175314}", "{'[0, 0, 3, 4, 0, 5, 1, 0, 0, 0, 16, 6, 0, 1, 0, 1, 1, 0]' : 0.175068}", "{'[0, 0, 3, 4, 0, 5, 1, 0, 0, 0, 16, 6, 0, 1, 0, 1, 1, 0]' : 0.174841}", "{'[0, 0, 3, 4, 0, 5, 1, 0, 0, 0, 16, 6, 0, 1, 0, 1, 1, 0]' : 0.178018}", "{'[0, 0, 3, 4, 0, 5, 1, 0, 0, 0, 16, 6, 0, 1, 0, 1, 1, 0]' : 0.180728}", "{'[0, 0, 3, 4, 0, 5, 1, 0, 0, 0, 16, 6, 0, 1, 0, 1, 1, 0]' : 0.180666}", "{'[0, 0, 3, 4, 0, 5, 1, 0, 0, 0, 16, 6, 0, 1, 0, 1, 1, 0]' : 0.179722}", "{'[0, 0, 3, 4, 0, 5, 1, 0, 0, 0, 16, 6, 0, 1, 0, 1, 1, 0]' : 0.179435}", "{'[0, 0, 3, 4, 0, 5, 1, 0, 0, 0, 16, 6, 0, 1, 0, 1, 1, 0]' : 0.174741}", "{'[0, 0, 3, 4, 0, 5, 1, 0, 0, 0, 16, 6, 0, 1, 0, 1, 1, 0]' : 0.174892}", "{'[0, 0, 3, 4, 0, 5, 1, 0, 0, 0, 16, 6, 0, 1, 0, 1, 1, 0]' : 0.174737}"]
returning from 'run': {'[0, 0, 3, 4, 0, 5, 1, 0, 0, 0, 16, 6, 0, 1, 0, 1, 1, 0]': ([0.202897, 0.201797, 0.171308, 0.173502, 0.174749, 0.174614, 0.174984, 0.175483, 0.175727, 0.174674, 0.174663, 0.174708, 0.174832, 0.17342, 0.172519, 0.180578, 0.176135, 0.174824, 0.174804, 0.175314, 0.175068, 0.174841, 0.178018, 0.180728, 0.180666, 0.179722, 0.179435, 0.174741, 0.174892, 0.174737], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 3, 4, 0, 5, 1, 0, 0, 0, 16, 6, 0, 1, 0, 1, 1, 0]': ([0.202897, 0.201797, 0.171308, 0.173502, 0.174749, 0.174614, 0.174984, 0.175483, 0.175727, 0.174674, 0.174663, 0.174708, 0.174832, 0.17342, 0.172519, 0.180578, 0.176135, 0.174824, 0.174804, 0.175314, 0.175068, 0.174841, 0.178018, 0.180728, 0.180666, 0.179722, 0.179435, 0.174741, 0.174892, 0.174737], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	54
        Max loop nest depth: 	6
        Additions: 		2156
        Multiplications: 	888
        Divisions: 		0
        Logical: 		0
        Reads: 			4364
        Writes: 		833
        Comparisons:		54
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest14.exe __orio_perftest14.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest14.exe  
Program Test Output: 
{'[2, 2, 6, 6, 5, 6, 1, 0, 6, 10, 0, 2, 0, 0, 2, 1, 0, 0]' : 0.198243}
{'[2, 2, 6, 6, 5, 6, 1, 0, 6, 10, 0, 2, 0, 0, 2, 1, 0, 0]' : 0.198401}
{'[2, 2, 6, 6, 5, 6, 1, 0, 6, 10, 0, 2, 0, 0, 2, 1, 0, 0]' : 0.17373}
{'[2, 2, 6, 6, 5, 6, 1, 0, 6, 10, 0, 2, 0, 0, 2, 1, 0, 0]' : 0.172719}
{'[2, 2, 6, 6, 5, 6, 1, 0, 6, 10, 0, 2, 0, 0, 2, 1, 0, 0]' : 0.174878}
{'[2, 2, 6, 6, 5, 6, 1, 0, 6, 10, 0, 2, 0, 0, 2, 1, 0, 0]' : 0.178162}
{'[2, 2, 6, 6, 5, 6, 1, 0, 6, 10, 0, 2, 0, 0, 2, 1, 0, 0]' : 0.178195}
{'[2, 2, 6, 6, 5, 6, 1, 0, 6, 10, 0, 2, 0, 0, 2, 1, 0, 0]' : 0.178171}
{'[2, 2, 6, 6, 5, 6, 1, 0, 6, 10, 0, 2, 0, 0, 2, 1, 0, 0]' : 0.17835}
{'[2, 2, 6, 6, 5, 6, 1, 0, 6, 10, 0, 2, 0, 0, 2, 1, 0, 0]' : 0.174678}
{'[2, 2, 6, 6, 5, 6, 1, 0, 6, 10, 0, 2, 0, 0, 2, 1, 0, 0]' : 0.17767}
{'[2, 2, 6, 6, 5, 6, 1, 0, 6, 10, 0, 2, 0, 0, 2, 1, 0, 0]' : 0.178062}
{'[2, 2, 6, 6, 5, 6, 1, 0, 6, 10, 0, 2, 0, 0, 2, 1, 0, 0]' : 0.178107}
{'[2, 2, 6, 6, 5, 6, 1, 0, 6, 10, 0, 2, 0, 0, 2, 1, 0, 0]' : 0.17811}
{'[2, 2, 6, 6, 5, 6, 1, 0, 6, 10, 0, 2, 0, 0, 2, 1, 0, 0]' : 0.175622}
{'[2, 2, 6, 6, 5, 6, 1, 0, 6, 10, 0, 2, 0, 0, 2, 1, 0, 0]' : 0.174221}
{'[2, 2, 6, 6, 5, 6, 1, 0, 6, 10, 0, 2, 0, 0, 2, 1, 0, 0]' : 0.178118}
{'[2, 2, 6, 6, 5, 6, 1, 0, 6, 10, 0, 2, 0, 0, 2, 1, 0, 0]' : 0.178262}
{'[2, 2, 6, 6, 5, 6, 1, 0, 6, 10, 0, 2, 0, 0, 2, 1, 0, 0]' : 0.178119}
{'[2, 2, 6, 6, 5, 6, 1, 0, 6, 10, 0, 2, 0, 0, 2, 1, 0, 0]' : 0.178025}
{'[2, 2, 6, 6, 5, 6, 1, 0, 6, 10, 0, 2, 0, 0, 2, 1, 0, 0]' : 0.173821}
{'[2, 2, 6, 6, 5, 6, 1, 0, 6, 10, 0, 2, 0, 0, 2, 1, 0, 0]' : 0.176048}
{'[2, 2, 6, 6, 5, 6, 1, 0, 6, 10, 0, 2, 0, 0, 2, 1, 0, 0]' : 0.178148}
{'[2, 2, 6, 6, 5, 6, 1, 0, 6, 10, 0, 2, 0, 0, 2, 1, 0, 0]' : 0.178176}
{'[2, 2, 6, 6, 5, 6, 1, 0, 6, 10, 0, 2, 0, 0, 2, 1, 0, 0]' : 0.178157}
{'[2, 2, 6, 6, 5, 6, 1, 0, 6, 10, 0, 2, 0, 0, 2, 1, 0, 0]' : 0.17782}
{'[2, 2, 6, 6, 5, 6, 1, 0, 6, 10, 0, 2, 0, 0, 2, 1, 0, 0]' : 0.172784}
{'[2, 2, 6, 6, 5, 6, 1, 0, 6, 10, 0, 2, 0, 0, 2, 1, 0, 0]' : 0.177842}
{'[2, 2, 6, 6, 5, 6, 1, 0, 6, 10, 0, 2, 0, 0, 2, 1, 0, 0]' : 0.177815}
{'[2, 2, 6, 6, 5, 6, 1, 0, 6, 10, 0, 2, 0, 0, 2, 1, 0, 0]' : 0.173516}

out:
 ["{'[2, 2, 6, 6, 5, 6, 1, 0, 6, 10, 0, 2, 0, 0, 2, 1, 0, 0]' : 0.198243}", "{'[2, 2, 6, 6, 5, 6, 1, 0, 6, 10, 0, 2, 0, 0, 2, 1, 0, 0]' : 0.198401}", "{'[2, 2, 6, 6, 5, 6, 1, 0, 6, 10, 0, 2, 0, 0, 2, 1, 0, 0]' : 0.17373}", "{'[2, 2, 6, 6, 5, 6, 1, 0, 6, 10, 0, 2, 0, 0, 2, 1, 0, 0]' : 0.172719}", "{'[2, 2, 6, 6, 5, 6, 1, 0, 6, 10, 0, 2, 0, 0, 2, 1, 0, 0]' : 0.174878}", "{'[2, 2, 6, 6, 5, 6, 1, 0, 6, 10, 0, 2, 0, 0, 2, 1, 0, 0]' : 0.178162}", "{'[2, 2, 6, 6, 5, 6, 1, 0, 6, 10, 0, 2, 0, 0, 2, 1, 0, 0]' : 0.178195}", "{'[2, 2, 6, 6, 5, 6, 1, 0, 6, 10, 0, 2, 0, 0, 2, 1, 0, 0]' : 0.178171}", "{'[2, 2, 6, 6, 5, 6, 1, 0, 6, 10, 0, 2, 0, 0, 2, 1, 0, 0]' : 0.17835}", "{'[2, 2, 6, 6, 5, 6, 1, 0, 6, 10, 0, 2, 0, 0, 2, 1, 0, 0]' : 0.174678}", "{'[2, 2, 6, 6, 5, 6, 1, 0, 6, 10, 0, 2, 0, 0, 2, 1, 0, 0]' : 0.17767}", "{'[2, 2, 6, 6, 5, 6, 1, 0, 6, 10, 0, 2, 0, 0, 2, 1, 0, 0]' : 0.178062}", "{'[2, 2, 6, 6, 5, 6, 1, 0, 6, 10, 0, 2, 0, 0, 2, 1, 0, 0]' : 0.178107}", "{'[2, 2, 6, 6, 5, 6, 1, 0, 6, 10, 0, 2, 0, 0, 2, 1, 0, 0]' : 0.17811}", "{'[2, 2, 6, 6, 5, 6, 1, 0, 6, 10, 0, 2, 0, 0, 2, 1, 0, 0]' : 0.175622}", "{'[2, 2, 6, 6, 5, 6, 1, 0, 6, 10, 0, 2, 0, 0, 2, 1, 0, 0]' : 0.174221}", "{'[2, 2, 6, 6, 5, 6, 1, 0, 6, 10, 0, 2, 0, 0, 2, 1, 0, 0]' : 0.178118}", "{'[2, 2, 6, 6, 5, 6, 1, 0, 6, 10, 0, 2, 0, 0, 2, 1, 0, 0]' : 0.178262}", "{'[2, 2, 6, 6, 5, 6, 1, 0, 6, 10, 0, 2, 0, 0, 2, 1, 0, 0]' : 0.178119}", "{'[2, 2, 6, 6, 5, 6, 1, 0, 6, 10, 0, 2, 0, 0, 2, 1, 0, 0]' : 0.178025}", "{'[2, 2, 6, 6, 5, 6, 1, 0, 6, 10, 0, 2, 0, 0, 2, 1, 0, 0]' : 0.173821}", "{'[2, 2, 6, 6, 5, 6, 1, 0, 6, 10, 0, 2, 0, 0, 2, 1, 0, 0]' : 0.176048}", "{'[2, 2, 6, 6, 5, 6, 1, 0, 6, 10, 0, 2, 0, 0, 2, 1, 0, 0]' : 0.178148}", "{'[2, 2, 6, 6, 5, 6, 1, 0, 6, 10, 0, 2, 0, 0, 2, 1, 0, 0]' : 0.178176}", "{'[2, 2, 6, 6, 5, 6, 1, 0, 6, 10, 0, 2, 0, 0, 2, 1, 0, 0]' : 0.178157}", "{'[2, 2, 6, 6, 5, 6, 1, 0, 6, 10, 0, 2, 0, 0, 2, 1, 0, 0]' : 0.17782}", "{'[2, 2, 6, 6, 5, 6, 1, 0, 6, 10, 0, 2, 0, 0, 2, 1, 0, 0]' : 0.172784}", "{'[2, 2, 6, 6, 5, 6, 1, 0, 6, 10, 0, 2, 0, 0, 2, 1, 0, 0]' : 0.177842}", "{'[2, 2, 6, 6, 5, 6, 1, 0, 6, 10, 0, 2, 0, 0, 2, 1, 0, 0]' : 0.177815}", "{'[2, 2, 6, 6, 5, 6, 1, 0, 6, 10, 0, 2, 0, 0, 2, 1, 0, 0]' : 0.173516}"]
returning from 'run': {'[2, 2, 6, 6, 5, 6, 1, 0, 6, 10, 0, 2, 0, 0, 2, 1, 0, 0]': ([0.198243, 0.198401, 0.17373, 0.172719, 0.174878, 0.178162, 0.178195, 0.178171, 0.17835, 0.174678, 0.17767, 0.178062, 0.178107, 0.17811, 0.175622, 0.174221, 0.178118, 0.178262, 0.178119, 0.178025, 0.173821, 0.176048, 0.178148, 0.178176, 0.178157, 0.17782, 0.172784, 0.177842, 0.177815, 0.173516], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 2, 6, 6, 5, 6, 1, 0, 6, 10, 0, 2, 0, 0, 2, 1, 0, 0]': ([0.198243, 0.198401, 0.17373, 0.172719, 0.174878, 0.178162, 0.178195, 0.178171, 0.17835, 0.174678, 0.17767, 0.178062, 0.178107, 0.17811, 0.175622, 0.174221, 0.178118, 0.178262, 0.178119, 0.178025, 0.173821, 0.176048, 0.178148, 0.178176, 0.178157, 0.17782, 0.172784, 0.177842, 0.177815, 0.173516], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	53
        Max loop nest depth: 	5
        Additions: 		3238
        Multiplications: 	736
        Divisions: 		0
        Logical: 		0
        Reads: 			4949
        Writes: 		563
        Comparisons:		53
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest15.exe __orio_perftest15.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest15.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest15.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest15.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest15.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	53
        Max loop nest depth: 	6
        Additions: 		13072
        Multiplications: 	3840
        Divisions: 		0
        Logical: 		0
        Reads: 			19838
        Writes: 		2086
        Comparisons:		53
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest16.exe __orio_perftest16.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest16.exe  
Program Test Output: 
{'[2, 3, 4, 6, 6, 0, 1, 0, 0, 26, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.208626}
{'[2, 3, 4, 6, 6, 0, 1, 0, 0, 26, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.208541}
{'[2, 3, 4, 6, 6, 0, 1, 0, 0, 26, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.205709}
{'[2, 3, 4, 6, 6, 0, 1, 0, 0, 26, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.204027}
{'[2, 3, 4, 6, 6, 0, 1, 0, 0, 26, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.209676}
{'[2, 3, 4, 6, 6, 0, 1, 0, 0, 26, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.209081}
{'[2, 3, 4, 6, 6, 0, 1, 0, 0, 26, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.209344}
{'[2, 3, 4, 6, 6, 0, 1, 0, 0, 26, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.208239}
{'[2, 3, 4, 6, 6, 0, 1, 0, 0, 26, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.208839}
{'[2, 3, 4, 6, 6, 0, 1, 0, 0, 26, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.208324}
{'[2, 3, 4, 6, 6, 0, 1, 0, 0, 26, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.208775}
{'[2, 3, 4, 6, 6, 0, 1, 0, 0, 26, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.208635}
{'[2, 3, 4, 6, 6, 0, 1, 0, 0, 26, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.208441}
{'[2, 3, 4, 6, 6, 0, 1, 0, 0, 26, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.208186}
{'[2, 3, 4, 6, 6, 0, 1, 0, 0, 26, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.208855}
{'[2, 3, 4, 6, 6, 0, 1, 0, 0, 26, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.208761}
{'[2, 3, 4, 6, 6, 0, 1, 0, 0, 26, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.208164}
{'[2, 3, 4, 6, 6, 0, 1, 0, 0, 26, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.208616}
{'[2, 3, 4, 6, 6, 0, 1, 0, 0, 26, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.20527}
{'[2, 3, 4, 6, 6, 0, 1, 0, 0, 26, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.205039}
{'[2, 3, 4, 6, 6, 0, 1, 0, 0, 26, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.205433}
{'[2, 3, 4, 6, 6, 0, 1, 0, 0, 26, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.204524}
{'[2, 3, 4, 6, 6, 0, 1, 0, 0, 26, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.205024}
{'[2, 3, 4, 6, 6, 0, 1, 0, 0, 26, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.204373}
{'[2, 3, 4, 6, 6, 0, 1, 0, 0, 26, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.204265}
{'[2, 3, 4, 6, 6, 0, 1, 0, 0, 26, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.204347}
{'[2, 3, 4, 6, 6, 0, 1, 0, 0, 26, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.207247}
{'[2, 3, 4, 6, 6, 0, 1, 0, 0, 26, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.208651}
{'[2, 3, 4, 6, 6, 0, 1, 0, 0, 26, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.20848}
{'[2, 3, 4, 6, 6, 0, 1, 0, 0, 26, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.209274}

out:
 ["{'[2, 3, 4, 6, 6, 0, 1, 0, 0, 26, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.208626}", "{'[2, 3, 4, 6, 6, 0, 1, 0, 0, 26, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.208541}", "{'[2, 3, 4, 6, 6, 0, 1, 0, 0, 26, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.205709}", "{'[2, 3, 4, 6, 6, 0, 1, 0, 0, 26, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.204027}", "{'[2, 3, 4, 6, 6, 0, 1, 0, 0, 26, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.209676}", "{'[2, 3, 4, 6, 6, 0, 1, 0, 0, 26, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.209081}", "{'[2, 3, 4, 6, 6, 0, 1, 0, 0, 26, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.209344}", "{'[2, 3, 4, 6, 6, 0, 1, 0, 0, 26, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.208239}", "{'[2, 3, 4, 6, 6, 0, 1, 0, 0, 26, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.208839}", "{'[2, 3, 4, 6, 6, 0, 1, 0, 0, 26, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.208324}", "{'[2, 3, 4, 6, 6, 0, 1, 0, 0, 26, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.208775}", "{'[2, 3, 4, 6, 6, 0, 1, 0, 0, 26, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.208635}", "{'[2, 3, 4, 6, 6, 0, 1, 0, 0, 26, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.208441}", "{'[2, 3, 4, 6, 6, 0, 1, 0, 0, 26, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.208186}", "{'[2, 3, 4, 6, 6, 0, 1, 0, 0, 26, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.208855}", "{'[2, 3, 4, 6, 6, 0, 1, 0, 0, 26, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.208761}", "{'[2, 3, 4, 6, 6, 0, 1, 0, 0, 26, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.208164}", "{'[2, 3, 4, 6, 6, 0, 1, 0, 0, 26, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.208616}", "{'[2, 3, 4, 6, 6, 0, 1, 0, 0, 26, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.20527}", "{'[2, 3, 4, 6, 6, 0, 1, 0, 0, 26, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.205039}", "{'[2, 3, 4, 6, 6, 0, 1, 0, 0, 26, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.205433}", "{'[2, 3, 4, 6, 6, 0, 1, 0, 0, 26, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.204524}", "{'[2, 3, 4, 6, 6, 0, 1, 0, 0, 26, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.205024}", "{'[2, 3, 4, 6, 6, 0, 1, 0, 0, 26, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.204373}", "{'[2, 3, 4, 6, 6, 0, 1, 0, 0, 26, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.204265}", "{'[2, 3, 4, 6, 6, 0, 1, 0, 0, 26, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.204347}", "{'[2, 3, 4, 6, 6, 0, 1, 0, 0, 26, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.207247}", "{'[2, 3, 4, 6, 6, 0, 1, 0, 0, 26, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.208651}", "{'[2, 3, 4, 6, 6, 0, 1, 0, 0, 26, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.20848}", "{'[2, 3, 4, 6, 6, 0, 1, 0, 0, 26, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.209274}"]
returning from 'run': {'[2, 3, 4, 6, 6, 0, 1, 0, 0, 26, 0, 29, 2, 0, 0, 0, 1, 0]': ([0.208626, 0.208541, 0.205709, 0.204027, 0.209676, 0.209081, 0.209344, 0.208239, 0.208839, 0.208324, 0.208775, 0.208635, 0.208441, 0.208186, 0.208855, 0.208761, 0.208164, 0.208616, 0.20527, 0.205039, 0.205433, 0.204524, 0.205024, 0.204373, 0.204265, 0.204347, 0.207247, 0.208651, 0.20848, 0.209274], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 3, 4, 6, 6, 0, 1, 0, 0, 26, 0, 29, 2, 0, 0, 0, 1, 0]': ([0.208626, 0.208541, 0.205709, 0.204027, 0.209676, 0.209081, 0.209344, 0.208239, 0.208839, 0.208324, 0.208775, 0.208635, 0.208441, 0.208186, 0.208855, 0.208761, 0.208164, 0.208616, 0.20527, 0.205039, 0.205433, 0.204524, 0.205024, 0.204373, 0.204265, 0.204347, 0.207247, 0.208651, 0.20848, 0.209274], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	5
        Additions: 		50
        Multiplications: 	4
        Divisions: 		0
        Logical: 		0
        Reads: 			145
        Writes: 		49
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest17.exe __orio_perftest17.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest17.exe  
Program Test Output: 
{'[3, 0, 0, 6, 5, 1, 0, 1, 11, 0, 0, 0, 0, 0, 0, 1, 1, 1]' : 0.209713}
{'[3, 0, 0, 6, 5, 1, 0, 1, 11, 0, 0, 0, 0, 0, 0, 1, 1, 1]' : 0.214681}
{'[3, 0, 0, 6, 5, 1, 0, 1, 11, 0, 0, 0, 0, 0, 0, 1, 1, 1]' : 0.21464}
{'[3, 0, 0, 6, 5, 1, 0, 1, 11, 0, 0, 0, 0, 0, 0, 1, 1, 1]' : 0.208951}
{'[3, 0, 0, 6, 5, 1, 0, 1, 11, 0, 0, 0, 0, 0, 0, 1, 1, 1]' : 0.208065}
{'[3, 0, 0, 6, 5, 1, 0, 1, 11, 0, 0, 0, 0, 0, 0, 1, 1, 1]' : 0.211261}
{'[3, 0, 0, 6, 5, 1, 0, 1, 11, 0, 0, 0, 0, 0, 0, 1, 1, 1]' : 0.214629}
{'[3, 0, 0, 6, 5, 1, 0, 1, 11, 0, 0, 0, 0, 0, 0, 1, 1, 1]' : 0.2147}
{'[3, 0, 0, 6, 5, 1, 0, 1, 11, 0, 0, 0, 0, 0, 0, 1, 1, 1]' : 0.214623}
{'[3, 0, 0, 6, 5, 1, 0, 1, 11, 0, 0, 0, 0, 0, 0, 1, 1, 1]' : 0.214664}
{'[3, 0, 0, 6, 5, 1, 0, 1, 11, 0, 0, 0, 0, 0, 0, 1, 1, 1]' : 0.214623}
{'[3, 0, 0, 6, 5, 1, 0, 1, 11, 0, 0, 0, 0, 0, 0, 1, 1, 1]' : 0.214643}
{'[3, 0, 0, 6, 5, 1, 0, 1, 11, 0, 0, 0, 0, 0, 0, 1, 1, 1]' : 0.213015}
{'[3, 0, 0, 6, 5, 1, 0, 1, 11, 0, 0, 0, 0, 0, 0, 1, 1, 1]' : 0.207647}
{'[3, 0, 0, 6, 5, 1, 0, 1, 11, 0, 0, 0, 0, 0, 0, 1, 1, 1]' : 0.207761}
{'[3, 0, 0, 6, 5, 1, 0, 1, 11, 0, 0, 0, 0, 0, 0, 1, 1, 1]' : 0.207903}
{'[3, 0, 0, 6, 5, 1, 0, 1, 11, 0, 0, 0, 0, 0, 0, 1, 1, 1]' : 0.207604}
{'[3, 0, 0, 6, 5, 1, 0, 1, 11, 0, 0, 0, 0, 0, 0, 1, 1, 1]' : 0.212542}
{'[3, 0, 0, 6, 5, 1, 0, 1, 11, 0, 0, 0, 0, 0, 0, 1, 1, 1]' : 0.213705}
{'[3, 0, 0, 6, 5, 1, 0, 1, 11, 0, 0, 0, 0, 0, 0, 1, 1, 1]' : 0.210208}
{'[3, 0, 0, 6, 5, 1, 0, 1, 11, 0, 0, 0, 0, 0, 0, 1, 1, 1]' : 0.209563}
{'[3, 0, 0, 6, 5, 1, 0, 1, 11, 0, 0, 0, 0, 0, 0, 1, 1, 1]' : 0.207861}
{'[3, 0, 0, 6, 5, 1, 0, 1, 11, 0, 0, 0, 0, 0, 0, 1, 1, 1]' : 0.208242}
{'[3, 0, 0, 6, 5, 1, 0, 1, 11, 0, 0, 0, 0, 0, 0, 1, 1, 1]' : 0.20789}
{'[3, 0, 0, 6, 5, 1, 0, 1, 11, 0, 0, 0, 0, 0, 0, 1, 1, 1]' : 0.213696}
{'[3, 0, 0, 6, 5, 1, 0, 1, 11, 0, 0, 0, 0, 0, 0, 1, 1, 1]' : 0.214613}
{'[3, 0, 0, 6, 5, 1, 0, 1, 11, 0, 0, 0, 0, 0, 0, 1, 1, 1]' : 0.214695}
{'[3, 0, 0, 6, 5, 1, 0, 1, 11, 0, 0, 0, 0, 0, 0, 1, 1, 1]' : 0.214647}
{'[3, 0, 0, 6, 5, 1, 0, 1, 11, 0, 0, 0, 0, 0, 0, 1, 1, 1]' : 0.214675}
{'[3, 0, 0, 6, 5, 1, 0, 1, 11, 0, 0, 0, 0, 0, 0, 1, 1, 1]' : 0.214691}

out:
 ["{'[3, 0, 0, 6, 5, 1, 0, 1, 11, 0, 0, 0, 0, 0, 0, 1, 1, 1]' : 0.209713}", "{'[3, 0, 0, 6, 5, 1, 0, 1, 11, 0, 0, 0, 0, 0, 0, 1, 1, 1]' : 0.214681}", "{'[3, 0, 0, 6, 5, 1, 0, 1, 11, 0, 0, 0, 0, 0, 0, 1, 1, 1]' : 0.21464}", "{'[3, 0, 0, 6, 5, 1, 0, 1, 11, 0, 0, 0, 0, 0, 0, 1, 1, 1]' : 0.208951}", "{'[3, 0, 0, 6, 5, 1, 0, 1, 11, 0, 0, 0, 0, 0, 0, 1, 1, 1]' : 0.208065}", "{'[3, 0, 0, 6, 5, 1, 0, 1, 11, 0, 0, 0, 0, 0, 0, 1, 1, 1]' : 0.211261}", "{'[3, 0, 0, 6, 5, 1, 0, 1, 11, 0, 0, 0, 0, 0, 0, 1, 1, 1]' : 0.214629}", "{'[3, 0, 0, 6, 5, 1, 0, 1, 11, 0, 0, 0, 0, 0, 0, 1, 1, 1]' : 0.2147}", "{'[3, 0, 0, 6, 5, 1, 0, 1, 11, 0, 0, 0, 0, 0, 0, 1, 1, 1]' : 0.214623}", "{'[3, 0, 0, 6, 5, 1, 0, 1, 11, 0, 0, 0, 0, 0, 0, 1, 1, 1]' : 0.214664}", "{'[3, 0, 0, 6, 5, 1, 0, 1, 11, 0, 0, 0, 0, 0, 0, 1, 1, 1]' : 0.214623}", "{'[3, 0, 0, 6, 5, 1, 0, 1, 11, 0, 0, 0, 0, 0, 0, 1, 1, 1]' : 0.214643}", "{'[3, 0, 0, 6, 5, 1, 0, 1, 11, 0, 0, 0, 0, 0, 0, 1, 1, 1]' : 0.213015}", "{'[3, 0, 0, 6, 5, 1, 0, 1, 11, 0, 0, 0, 0, 0, 0, 1, 1, 1]' : 0.207647}", "{'[3, 0, 0, 6, 5, 1, 0, 1, 11, 0, 0, 0, 0, 0, 0, 1, 1, 1]' : 0.207761}", "{'[3, 0, 0, 6, 5, 1, 0, 1, 11, 0, 0, 0, 0, 0, 0, 1, 1, 1]' : 0.207903}", "{'[3, 0, 0, 6, 5, 1, 0, 1, 11, 0, 0, 0, 0, 0, 0, 1, 1, 1]' : 0.207604}", "{'[3, 0, 0, 6, 5, 1, 0, 1, 11, 0, 0, 0, 0, 0, 0, 1, 1, 1]' : 0.212542}", "{'[3, 0, 0, 6, 5, 1, 0, 1, 11, 0, 0, 0, 0, 0, 0, 1, 1, 1]' : 0.213705}", "{'[3, 0, 0, 6, 5, 1, 0, 1, 11, 0, 0, 0, 0, 0, 0, 1, 1, 1]' : 0.210208}", "{'[3, 0, 0, 6, 5, 1, 0, 1, 11, 0, 0, 0, 0, 0, 0, 1, 1, 1]' : 0.209563}", "{'[3, 0, 0, 6, 5, 1, 0, 1, 11, 0, 0, 0, 0, 0, 0, 1, 1, 1]' : 0.207861}", "{'[3, 0, 0, 6, 5, 1, 0, 1, 11, 0, 0, 0, 0, 0, 0, 1, 1, 1]' : 0.208242}", "{'[3, 0, 0, 6, 5, 1, 0, 1, 11, 0, 0, 0, 0, 0, 0, 1, 1, 1]' : 0.20789}", "{'[3, 0, 0, 6, 5, 1, 0, 1, 11, 0, 0, 0, 0, 0, 0, 1, 1, 1]' : 0.213696}", "{'[3, 0, 0, 6, 5, 1, 0, 1, 11, 0, 0, 0, 0, 0, 0, 1, 1, 1]' : 0.214613}", "{'[3, 0, 0, 6, 5, 1, 0, 1, 11, 0, 0, 0, 0, 0, 0, 1, 1, 1]' : 0.214695}", "{'[3, 0, 0, 6, 5, 1, 0, 1, 11, 0, 0, 0, 0, 0, 0, 1, 1, 1]' : 0.214647}", "{'[3, 0, 0, 6, 5, 1, 0, 1, 11, 0, 0, 0, 0, 0, 0, 1, 1, 1]' : 0.214675}", "{'[3, 0, 0, 6, 5, 1, 0, 1, 11, 0, 0, 0, 0, 0, 0, 1, 1, 1]' : 0.214691}"]
returning from 'run': {'[3, 0, 0, 6, 5, 1, 0, 1, 11, 0, 0, 0, 0, 0, 0, 1, 1, 1]': ([0.209713, 0.214681, 0.21464, 0.208951, 0.208065, 0.211261, 0.214629, 0.2147, 0.214623, 0.214664, 0.214623, 0.214643, 0.213015, 0.207647, 0.207761, 0.207903, 0.207604, 0.212542, 0.213705, 0.210208, 0.209563, 0.207861, 0.208242, 0.20789, 0.213696, 0.214613, 0.214695, 0.214647, 0.214675, 0.214691], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 0, 0, 6, 5, 1, 0, 1, 11, 0, 0, 0, 0, 0, 0, 1, 1, 1]': ([0.209713, 0.214681, 0.21464, 0.208951, 0.208065, 0.211261, 0.214629, 0.2147, 0.214623, 0.214664, 0.214623, 0.214643, 0.213015, 0.207647, 0.207761, 0.207903, 0.207604, 0.212542, 0.213705, 0.210208, 0.209563, 0.207861, 0.208242, 0.20789, 0.213696, 0.214613, 0.214695, 0.214647, 0.214675, 0.214691], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	6
        Additions: 		270
        Multiplications: 	86
        Divisions: 		0
        Logical: 		0
        Reads: 			581
        Writes: 		79
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest18.exe __orio_perftest18.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest18.exe  
Program Test Output: 
{'[3, 2, 0, 5, 4, 6, 0, 1, 0, 0, 24, 15, 0, 0, 0, 0, 0, 1]' : 0.241833}
{'[3, 2, 0, 5, 4, 6, 0, 1, 0, 0, 24, 15, 0, 0, 0, 0, 0, 1]' : 0.232017}
{'[3, 2, 0, 5, 4, 6, 0, 1, 0, 0, 24, 15, 0, 0, 0, 0, 0, 1]' : 0.208242}
{'[3, 2, 0, 5, 4, 6, 0, 1, 0, 0, 24, 15, 0, 0, 0, 0, 0, 1]' : 0.208296}
{'[3, 2, 0, 5, 4, 6, 0, 1, 0, 0, 24, 15, 0, 0, 0, 0, 0, 1]' : 0.214472}
{'[3, 2, 0, 5, 4, 6, 0, 1, 0, 0, 24, 15, 0, 0, 0, 0, 0, 1]' : 0.214826}
{'[3, 2, 0, 5, 4, 6, 0, 1, 0, 0, 24, 15, 0, 0, 0, 0, 0, 1]' : 0.214901}
{'[3, 2, 0, 5, 4, 6, 0, 1, 0, 0, 24, 15, 0, 0, 0, 0, 0, 1]' : 0.214836}
{'[3, 2, 0, 5, 4, 6, 0, 1, 0, 0, 24, 15, 0, 0, 0, 0, 0, 1]' : 0.214957}
{'[3, 2, 0, 5, 4, 6, 0, 1, 0, 0, 24, 15, 0, 0, 0, 0, 0, 1]' : 0.214788}
{'[3, 2, 0, 5, 4, 6, 0, 1, 0, 0, 24, 15, 0, 0, 0, 0, 0, 1]' : 0.214825}
{'[3, 2, 0, 5, 4, 6, 0, 1, 0, 0, 24, 15, 0, 0, 0, 0, 0, 1]' : 0.214784}
{'[3, 2, 0, 5, 4, 6, 0, 1, 0, 0, 24, 15, 0, 0, 0, 0, 0, 1]' : 0.215109}
{'[3, 2, 0, 5, 4, 6, 0, 1, 0, 0, 24, 15, 0, 0, 0, 0, 0, 1]' : 0.214985}
{'[3, 2, 0, 5, 4, 6, 0, 1, 0, 0, 24, 15, 0, 0, 0, 0, 0, 1]' : 0.214744}
{'[3, 2, 0, 5, 4, 6, 0, 1, 0, 0, 24, 15, 0, 0, 0, 0, 0, 1]' : 0.214803}
{'[3, 2, 0, 5, 4, 6, 0, 1, 0, 0, 24, 15, 0, 0, 0, 0, 0, 1]' : 0.214792}
{'[3, 2, 0, 5, 4, 6, 0, 1, 0, 0, 24, 15, 0, 0, 0, 0, 0, 1]' : 0.214795}
{'[3, 2, 0, 5, 4, 6, 0, 1, 0, 0, 24, 15, 0, 0, 0, 0, 0, 1]' : 0.214837}
{'[3, 2, 0, 5, 4, 6, 0, 1, 0, 0, 24, 15, 0, 0, 0, 0, 0, 1]' : 0.214747}
{'[3, 2, 0, 5, 4, 6, 0, 1, 0, 0, 24, 15, 0, 0, 0, 0, 0, 1]' : 0.214773}
{'[3, 2, 0, 5, 4, 6, 0, 1, 0, 0, 24, 15, 0, 0, 0, 0, 0, 1]' : 0.21256}
{'[3, 2, 0, 5, 4, 6, 0, 1, 0, 0, 24, 15, 0, 0, 0, 0, 0, 1]' : 0.210396}
{'[3, 2, 0, 5, 4, 6, 0, 1, 0, 0, 24, 15, 0, 0, 0, 0, 0, 1]' : 0.214739}
{'[3, 2, 0, 5, 4, 6, 0, 1, 0, 0, 24, 15, 0, 0, 0, 0, 0, 1]' : 0.214751}
{'[3, 2, 0, 5, 4, 6, 0, 1, 0, 0, 24, 15, 0, 0, 0, 0, 0, 1]' : 0.214783}
{'[3, 2, 0, 5, 4, 6, 0, 1, 0, 0, 24, 15, 0, 0, 0, 0, 0, 1]' : 0.214833}
{'[3, 2, 0, 5, 4, 6, 0, 1, 0, 0, 24, 15, 0, 0, 0, 0, 0, 1]' : 0.2148}
{'[3, 2, 0, 5, 4, 6, 0, 1, 0, 0, 24, 15, 0, 0, 0, 0, 0, 1]' : 0.21477}
{'[3, 2, 0, 5, 4, 6, 0, 1, 0, 0, 24, 15, 0, 0, 0, 0, 0, 1]' : 0.214794}

out:
 ["{'[3, 2, 0, 5, 4, 6, 0, 1, 0, 0, 24, 15, 0, 0, 0, 0, 0, 1]' : 0.241833}", "{'[3, 2, 0, 5, 4, 6, 0, 1, 0, 0, 24, 15, 0, 0, 0, 0, 0, 1]' : 0.232017}", "{'[3, 2, 0, 5, 4, 6, 0, 1, 0, 0, 24, 15, 0, 0, 0, 0, 0, 1]' : 0.208242}", "{'[3, 2, 0, 5, 4, 6, 0, 1, 0, 0, 24, 15, 0, 0, 0, 0, 0, 1]' : 0.208296}", "{'[3, 2, 0, 5, 4, 6, 0, 1, 0, 0, 24, 15, 0, 0, 0, 0, 0, 1]' : 0.214472}", "{'[3, 2, 0, 5, 4, 6, 0, 1, 0, 0, 24, 15, 0, 0, 0, 0, 0, 1]' : 0.214826}", "{'[3, 2, 0, 5, 4, 6, 0, 1, 0, 0, 24, 15, 0, 0, 0, 0, 0, 1]' : 0.214901}", "{'[3, 2, 0, 5, 4, 6, 0, 1, 0, 0, 24, 15, 0, 0, 0, 0, 0, 1]' : 0.214836}", "{'[3, 2, 0, 5, 4, 6, 0, 1, 0, 0, 24, 15, 0, 0, 0, 0, 0, 1]' : 0.214957}", "{'[3, 2, 0, 5, 4, 6, 0, 1, 0, 0, 24, 15, 0, 0, 0, 0, 0, 1]' : 0.214788}", "{'[3, 2, 0, 5, 4, 6, 0, 1, 0, 0, 24, 15, 0, 0, 0, 0, 0, 1]' : 0.214825}", "{'[3, 2, 0, 5, 4, 6, 0, 1, 0, 0, 24, 15, 0, 0, 0, 0, 0, 1]' : 0.214784}", "{'[3, 2, 0, 5, 4, 6, 0, 1, 0, 0, 24, 15, 0, 0, 0, 0, 0, 1]' : 0.215109}", "{'[3, 2, 0, 5, 4, 6, 0, 1, 0, 0, 24, 15, 0, 0, 0, 0, 0, 1]' : 0.214985}", "{'[3, 2, 0, 5, 4, 6, 0, 1, 0, 0, 24, 15, 0, 0, 0, 0, 0, 1]' : 0.214744}", "{'[3, 2, 0, 5, 4, 6, 0, 1, 0, 0, 24, 15, 0, 0, 0, 0, 0, 1]' : 0.214803}", "{'[3, 2, 0, 5, 4, 6, 0, 1, 0, 0, 24, 15, 0, 0, 0, 0, 0, 1]' : 0.214792}", "{'[3, 2, 0, 5, 4, 6, 0, 1, 0, 0, 24, 15, 0, 0, 0, 0, 0, 1]' : 0.214795}", "{'[3, 2, 0, 5, 4, 6, 0, 1, 0, 0, 24, 15, 0, 0, 0, 0, 0, 1]' : 0.214837}", "{'[3, 2, 0, 5, 4, 6, 0, 1, 0, 0, 24, 15, 0, 0, 0, 0, 0, 1]' : 0.214747}", "{'[3, 2, 0, 5, 4, 6, 0, 1, 0, 0, 24, 15, 0, 0, 0, 0, 0, 1]' : 0.214773}", "{'[3, 2, 0, 5, 4, 6, 0, 1, 0, 0, 24, 15, 0, 0, 0, 0, 0, 1]' : 0.21256}", "{'[3, 2, 0, 5, 4, 6, 0, 1, 0, 0, 24, 15, 0, 0, 0, 0, 0, 1]' : 0.210396}", "{'[3, 2, 0, 5, 4, 6, 0, 1, 0, 0, 24, 15, 0, 0, 0, 0, 0, 1]' : 0.214739}", "{'[3, 2, 0, 5, 4, 6, 0, 1, 0, 0, 24, 15, 0, 0, 0, 0, 0, 1]' : 0.214751}", "{'[3, 2, 0, 5, 4, 6, 0, 1, 0, 0, 24, 15, 0, 0, 0, 0, 0, 1]' : 0.214783}", "{'[3, 2, 0, 5, 4, 6, 0, 1, 0, 0, 24, 15, 0, 0, 0, 0, 0, 1]' : 0.214833}", "{'[3, 2, 0, 5, 4, 6, 0, 1, 0, 0, 24, 15, 0, 0, 0, 0, 0, 1]' : 0.2148}", "{'[3, 2, 0, 5, 4, 6, 0, 1, 0, 0, 24, 15, 0, 0, 0, 0, 0, 1]' : 0.21477}", "{'[3, 2, 0, 5, 4, 6, 0, 1, 0, 0, 24, 15, 0, 0, 0, 0, 0, 1]' : 0.214794}"]
returning from 'run': {'[3, 2, 0, 5, 4, 6, 0, 1, 0, 0, 24, 15, 0, 0, 0, 0, 0, 1]': ([0.241833, 0.232017, 0.208242, 0.208296, 0.214472, 0.214826, 0.214901, 0.214836, 0.214957, 0.214788, 0.214825, 0.214784, 0.215109, 0.214985, 0.214744, 0.214803, 0.214792, 0.214795, 0.214837, 0.214747, 0.214773, 0.21256, 0.210396, 0.214739, 0.214751, 0.214783, 0.214833, 0.2148, 0.21477, 0.214794], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 2, 0, 5, 4, 6, 0, 1, 0, 0, 24, 15, 0, 0, 0, 0, 0, 1]': ([0.241833, 0.232017, 0.208242, 0.208296, 0.214472, 0.214826, 0.214901, 0.214836, 0.214957, 0.214788, 0.214825, 0.214784, 0.215109, 0.214985, 0.214744, 0.214803, 0.214792, 0.214795, 0.214837, 0.214747, 0.214773, 0.21256, 0.210396, 0.214739, 0.214751, 0.214783, 0.214833, 0.2148, 0.21477, 0.214794], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = iii
Code stats:
        Number of loops: 	7
        Max loop nest depth: 	3
        Additions: 		276
        Multiplications: 	108
        Divisions: 		0
        Logical: 		0
        Reads: 			621
        Writes: 		88
        Comparisons:		7
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest19.exe __orio_perftest19.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest19.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest19.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest19.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest19.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	5
        Additions: 		656
        Multiplications: 	198
        Divisions: 		0
        Logical: 		0
        Reads: 			1405
        Writes: 		288
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest20.exe __orio_perftest20.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest20.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest20.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest20.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest20.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	5
        Additions: 		767
        Multiplications: 	240
        Divisions: 		0
        Logical: 		0
        Reads: 			1401
        Writes: 		187
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest21.exe __orio_perftest21.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest21.exe  
Program Test Output: 
{'[0, 0, 4, 6, 1, 6, 0, 0, 20, 1, 0, 29, 0, 0, 1, 0, 0, 0]' : 0.215315}
{'[0, 0, 4, 6, 1, 6, 0, 0, 20, 1, 0, 29, 0, 0, 1, 0, 0, 0]' : 0.214914}
{'[0, 0, 4, 6, 1, 6, 0, 0, 20, 1, 0, 29, 0, 0, 1, 0, 0, 0]' : 0.214637}
{'[0, 0, 4, 6, 1, 6, 0, 0, 20, 1, 0, 29, 0, 0, 1, 0, 0, 0]' : 0.218854}
{'[0, 0, 4, 6, 1, 6, 0, 0, 20, 1, 0, 29, 0, 0, 1, 0, 0, 0]' : 0.21328}
{'[0, 0, 4, 6, 1, 6, 0, 0, 20, 1, 0, 29, 0, 0, 1, 0, 0, 0]' : 0.220258}
{'[0, 0, 4, 6, 1, 6, 0, 0, 20, 1, 0, 29, 0, 0, 1, 0, 0, 0]' : 0.215661}
{'[0, 0, 4, 6, 1, 6, 0, 0, 20, 1, 0, 29, 0, 0, 1, 0, 0, 0]' : 0.218124}
{'[0, 0, 4, 6, 1, 6, 0, 0, 20, 1, 0, 29, 0, 0, 1, 0, 0, 0]' : 0.220646}
{'[0, 0, 4, 6, 1, 6, 0, 0, 20, 1, 0, 29, 0, 0, 1, 0, 0, 0]' : 0.220639}
{'[0, 0, 4, 6, 1, 6, 0, 0, 20, 1, 0, 29, 0, 0, 1, 0, 0, 0]' : 0.220659}
{'[0, 0, 4, 6, 1, 6, 0, 0, 20, 1, 0, 29, 0, 0, 1, 0, 0, 0]' : 0.22079}
{'[0, 0, 4, 6, 1, 6, 0, 0, 20, 1, 0, 29, 0, 0, 1, 0, 0, 0]' : 0.220207}
{'[0, 0, 4, 6, 1, 6, 0, 0, 20, 1, 0, 29, 0, 0, 1, 0, 0, 0]' : 0.213686}
{'[0, 0, 4, 6, 1, 6, 0, 0, 20, 1, 0, 29, 0, 0, 1, 0, 0, 0]' : 0.219213}
{'[0, 0, 4, 6, 1, 6, 0, 0, 20, 1, 0, 29, 0, 0, 1, 0, 0, 0]' : 0.217919}
{'[0, 0, 4, 6, 1, 6, 0, 0, 20, 1, 0, 29, 0, 0, 1, 0, 0, 0]' : 0.217111}
{'[0, 0, 4, 6, 1, 6, 0, 0, 20, 1, 0, 29, 0, 0, 1, 0, 0, 0]' : 0.217298}
{'[0, 0, 4, 6, 1, 6, 0, 0, 20, 1, 0, 29, 0, 0, 1, 0, 0, 0]' : 0.215266}
{'[0, 0, 4, 6, 1, 6, 0, 0, 20, 1, 0, 29, 0, 0, 1, 0, 0, 0]' : 0.220616}
{'[0, 0, 4, 6, 1, 6, 0, 0, 20, 1, 0, 29, 0, 0, 1, 0, 0, 0]' : 0.216025}
{'[0, 0, 4, 6, 1, 6, 0, 0, 20, 1, 0, 29, 0, 0, 1, 0, 0, 0]' : 0.220099}
{'[0, 0, 4, 6, 1, 6, 0, 0, 20, 1, 0, 29, 0, 0, 1, 0, 0, 0]' : 0.214291}
{'[0, 0, 4, 6, 1, 6, 0, 0, 20, 1, 0, 29, 0, 0, 1, 0, 0, 0]' : 0.217811}
{'[0, 0, 4, 6, 1, 6, 0, 0, 20, 1, 0, 29, 0, 0, 1, 0, 0, 0]' : 0.220652}
{'[0, 0, 4, 6, 1, 6, 0, 0, 20, 1, 0, 29, 0, 0, 1, 0, 0, 0]' : 0.216144}
{'[0, 0, 4, 6, 1, 6, 0, 0, 20, 1, 0, 29, 0, 0, 1, 0, 0, 0]' : 0.219187}
{'[0, 0, 4, 6, 1, 6, 0, 0, 20, 1, 0, 29, 0, 0, 1, 0, 0, 0]' : 0.213402}
{'[0, 0, 4, 6, 1, 6, 0, 0, 20, 1, 0, 29, 0, 0, 1, 0, 0, 0]' : 0.220623}
{'[0, 0, 4, 6, 1, 6, 0, 0, 20, 1, 0, 29, 0, 0, 1, 0, 0, 0]' : 0.214555}

out:
 ["{'[0, 0, 4, 6, 1, 6, 0, 0, 20, 1, 0, 29, 0, 0, 1, 0, 0, 0]' : 0.215315}", "{'[0, 0, 4, 6, 1, 6, 0, 0, 20, 1, 0, 29, 0, 0, 1, 0, 0, 0]' : 0.214914}", "{'[0, 0, 4, 6, 1, 6, 0, 0, 20, 1, 0, 29, 0, 0, 1, 0, 0, 0]' : 0.214637}", "{'[0, 0, 4, 6, 1, 6, 0, 0, 20, 1, 0, 29, 0, 0, 1, 0, 0, 0]' : 0.218854}", "{'[0, 0, 4, 6, 1, 6, 0, 0, 20, 1, 0, 29, 0, 0, 1, 0, 0, 0]' : 0.21328}", "{'[0, 0, 4, 6, 1, 6, 0, 0, 20, 1, 0, 29, 0, 0, 1, 0, 0, 0]' : 0.220258}", "{'[0, 0, 4, 6, 1, 6, 0, 0, 20, 1, 0, 29, 0, 0, 1, 0, 0, 0]' : 0.215661}", "{'[0, 0, 4, 6, 1, 6, 0, 0, 20, 1, 0, 29, 0, 0, 1, 0, 0, 0]' : 0.218124}", "{'[0, 0, 4, 6, 1, 6, 0, 0, 20, 1, 0, 29, 0, 0, 1, 0, 0, 0]' : 0.220646}", "{'[0, 0, 4, 6, 1, 6, 0, 0, 20, 1, 0, 29, 0, 0, 1, 0, 0, 0]' : 0.220639}", "{'[0, 0, 4, 6, 1, 6, 0, 0, 20, 1, 0, 29, 0, 0, 1, 0, 0, 0]' : 0.220659}", "{'[0, 0, 4, 6, 1, 6, 0, 0, 20, 1, 0, 29, 0, 0, 1, 0, 0, 0]' : 0.22079}", "{'[0, 0, 4, 6, 1, 6, 0, 0, 20, 1, 0, 29, 0, 0, 1, 0, 0, 0]' : 0.220207}", "{'[0, 0, 4, 6, 1, 6, 0, 0, 20, 1, 0, 29, 0, 0, 1, 0, 0, 0]' : 0.213686}", "{'[0, 0, 4, 6, 1, 6, 0, 0, 20, 1, 0, 29, 0, 0, 1, 0, 0, 0]' : 0.219213}", "{'[0, 0, 4, 6, 1, 6, 0, 0, 20, 1, 0, 29, 0, 0, 1, 0, 0, 0]' : 0.217919}", "{'[0, 0, 4, 6, 1, 6, 0, 0, 20, 1, 0, 29, 0, 0, 1, 0, 0, 0]' : 0.217111}", "{'[0, 0, 4, 6, 1, 6, 0, 0, 20, 1, 0, 29, 0, 0, 1, 0, 0, 0]' : 0.217298}", "{'[0, 0, 4, 6, 1, 6, 0, 0, 20, 1, 0, 29, 0, 0, 1, 0, 0, 0]' : 0.215266}", "{'[0, 0, 4, 6, 1, 6, 0, 0, 20, 1, 0, 29, 0, 0, 1, 0, 0, 0]' : 0.220616}", "{'[0, 0, 4, 6, 1, 6, 0, 0, 20, 1, 0, 29, 0, 0, 1, 0, 0, 0]' : 0.216025}", "{'[0, 0, 4, 6, 1, 6, 0, 0, 20, 1, 0, 29, 0, 0, 1, 0, 0, 0]' : 0.220099}", "{'[0, 0, 4, 6, 1, 6, 0, 0, 20, 1, 0, 29, 0, 0, 1, 0, 0, 0]' : 0.214291}", "{'[0, 0, 4, 6, 1, 6, 0, 0, 20, 1, 0, 29, 0, 0, 1, 0, 0, 0]' : 0.217811}", "{'[0, 0, 4, 6, 1, 6, 0, 0, 20, 1, 0, 29, 0, 0, 1, 0, 0, 0]' : 0.220652}", "{'[0, 0, 4, 6, 1, 6, 0, 0, 20, 1, 0, 29, 0, 0, 1, 0, 0, 0]' : 0.216144}", "{'[0, 0, 4, 6, 1, 6, 0, 0, 20, 1, 0, 29, 0, 0, 1, 0, 0, 0]' : 0.219187}", "{'[0, 0, 4, 6, 1, 6, 0, 0, 20, 1, 0, 29, 0, 0, 1, 0, 0, 0]' : 0.213402}", "{'[0, 0, 4, 6, 1, 6, 0, 0, 20, 1, 0, 29, 0, 0, 1, 0, 0, 0]' : 0.220623}", "{'[0, 0, 4, 6, 1, 6, 0, 0, 20, 1, 0, 29, 0, 0, 1, 0, 0, 0]' : 0.214555}"]
returning from 'run': {'[0, 0, 4, 6, 1, 6, 0, 0, 20, 1, 0, 29, 0, 0, 1, 0, 0, 0]': ([0.215315, 0.214914, 0.214637, 0.218854, 0.21328, 0.220258, 0.215661, 0.218124, 0.220646, 0.220639, 0.220659, 0.22079, 0.220207, 0.213686, 0.219213, 0.217919, 0.217111, 0.217298, 0.215266, 0.220616, 0.216025, 0.220099, 0.214291, 0.217811, 0.220652, 0.216144, 0.219187, 0.213402, 0.220623, 0.214555], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 4, 6, 1, 6, 0, 0, 20, 1, 0, 29, 0, 0, 1, 0, 0, 0]': ([0.215315, 0.214914, 0.214637, 0.218854, 0.21328, 0.220258, 0.215661, 0.218124, 0.220646, 0.220639, 0.220659, 0.22079, 0.220207, 0.213686, 0.219213, 0.217919, 0.217111, 0.217298, 0.215266, 0.220616, 0.216025, 0.220099, 0.214291, 0.217811, 0.220652, 0.216144, 0.219187, 0.213402, 0.220623, 0.214555], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	44
        Max loop nest depth: 	5
        Additions: 		12457
        Multiplications: 	3402
        Divisions: 		0
        Logical: 		0
        Reads: 			18409
        Writes: 		1862
        Comparisons:		44
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest22.exe __orio_perftest22.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest22.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest22.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest22.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest22.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	25
        Max loop nest depth: 	5
        Additions: 		3782
        Multiplications: 	1026
        Divisions: 		0
        Logical: 		0
        Reads: 			5845
        Writes: 		591
        Comparisons:		25
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest23.exe __orio_perftest23.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest23.exe  
Program Test Output: 
{'[3, 6, 2, 1, 4, 5, 0, 1, 3, 0, 21, 24, 1, 1, 0, 0, 1, 1]' : 0.132875}
{'[3, 6, 2, 1, 4, 5, 0, 1, 3, 0, 21, 24, 1, 1, 0, 0, 1, 1]' : 0.132748}
{'[3, 6, 2, 1, 4, 5, 0, 1, 3, 0, 21, 24, 1, 1, 0, 0, 1, 1]' : 0.132714}
{'[3, 6, 2, 1, 4, 5, 0, 1, 3, 0, 21, 24, 1, 1, 0, 0, 1, 1]' : 0.121767}
{'[3, 6, 2, 1, 4, 5, 0, 1, 3, 0, 21, 24, 1, 1, 0, 0, 1, 1]' : 0.114954}
{'[3, 6, 2, 1, 4, 5, 0, 1, 3, 0, 21, 24, 1, 1, 0, 0, 1, 1]' : 0.114953}
{'[3, 6, 2, 1, 4, 5, 0, 1, 3, 0, 21, 24, 1, 1, 0, 0, 1, 1]' : 0.114806}
{'[3, 6, 2, 1, 4, 5, 0, 1, 3, 0, 21, 24, 1, 1, 0, 0, 1, 1]' : 0.115944}
{'[3, 6, 2, 1, 4, 5, 0, 1, 3, 0, 21, 24, 1, 1, 0, 0, 1, 1]' : 0.114204}
{'[3, 6, 2, 1, 4, 5, 0, 1, 3, 0, 21, 24, 1, 1, 0, 0, 1, 1]' : 0.112289}
{'[3, 6, 2, 1, 4, 5, 0, 1, 3, 0, 21, 24, 1, 1, 0, 0, 1, 1]' : 0.112125}
{'[3, 6, 2, 1, 4, 5, 0, 1, 3, 0, 21, 24, 1, 1, 0, 0, 1, 1]' : 0.112145}
{'[3, 6, 2, 1, 4, 5, 0, 1, 3, 0, 21, 24, 1, 1, 0, 0, 1, 1]' : 0.115035}
{'[3, 6, 2, 1, 4, 5, 0, 1, 3, 0, 21, 24, 1, 1, 0, 0, 1, 1]' : 0.115965}
{'[3, 6, 2, 1, 4, 5, 0, 1, 3, 0, 21, 24, 1, 1, 0, 0, 1, 1]' : 0.115303}
{'[3, 6, 2, 1, 4, 5, 0, 1, 3, 0, 21, 24, 1, 1, 0, 0, 1, 1]' : 0.115737}
{'[3, 6, 2, 1, 4, 5, 0, 1, 3, 0, 21, 24, 1, 1, 0, 0, 1, 1]' : 0.115564}
{'[3, 6, 2, 1, 4, 5, 0, 1, 3, 0, 21, 24, 1, 1, 0, 0, 1, 1]' : 0.117787}
{'[3, 6, 2, 1, 4, 5, 0, 1, 3, 0, 21, 24, 1, 1, 0, 0, 1, 1]' : 0.115568}
{'[3, 6, 2, 1, 4, 5, 0, 1, 3, 0, 21, 24, 1, 1, 0, 0, 1, 1]' : 0.115618}
{'[3, 6, 2, 1, 4, 5, 0, 1, 3, 0, 21, 24, 1, 1, 0, 0, 1, 1]' : 0.116296}
{'[3, 6, 2, 1, 4, 5, 0, 1, 3, 0, 21, 24, 1, 1, 0, 0, 1, 1]' : 0.116498}
{'[3, 6, 2, 1, 4, 5, 0, 1, 3, 0, 21, 24, 1, 1, 0, 0, 1, 1]' : 0.115234}
{'[3, 6, 2, 1, 4, 5, 0, 1, 3, 0, 21, 24, 1, 1, 0, 0, 1, 1]' : 0.11537}
{'[3, 6, 2, 1, 4, 5, 0, 1, 3, 0, 21, 24, 1, 1, 0, 0, 1, 1]' : 0.115408}
{'[3, 6, 2, 1, 4, 5, 0, 1, 3, 0, 21, 24, 1, 1, 0, 0, 1, 1]' : 0.114831}
{'[3, 6, 2, 1, 4, 5, 0, 1, 3, 0, 21, 24, 1, 1, 0, 0, 1, 1]' : 0.11282}
{'[3, 6, 2, 1, 4, 5, 0, 1, 3, 0, 21, 24, 1, 1, 0, 0, 1, 1]' : 0.112348}
{'[3, 6, 2, 1, 4, 5, 0, 1, 3, 0, 21, 24, 1, 1, 0, 0, 1, 1]' : 0.11259}
{'[3, 6, 2, 1, 4, 5, 0, 1, 3, 0, 21, 24, 1, 1, 0, 0, 1, 1]' : 0.11377}

out:
 ["{'[3, 6, 2, 1, 4, 5, 0, 1, 3, 0, 21, 24, 1, 1, 0, 0, 1, 1]' : 0.132875}", "{'[3, 6, 2, 1, 4, 5, 0, 1, 3, 0, 21, 24, 1, 1, 0, 0, 1, 1]' : 0.132748}", "{'[3, 6, 2, 1, 4, 5, 0, 1, 3, 0, 21, 24, 1, 1, 0, 0, 1, 1]' : 0.132714}", "{'[3, 6, 2, 1, 4, 5, 0, 1, 3, 0, 21, 24, 1, 1, 0, 0, 1, 1]' : 0.121767}", "{'[3, 6, 2, 1, 4, 5, 0, 1, 3, 0, 21, 24, 1, 1, 0, 0, 1, 1]' : 0.114954}", "{'[3, 6, 2, 1, 4, 5, 0, 1, 3, 0, 21, 24, 1, 1, 0, 0, 1, 1]' : 0.114953}", "{'[3, 6, 2, 1, 4, 5, 0, 1, 3, 0, 21, 24, 1, 1, 0, 0, 1, 1]' : 0.114806}", "{'[3, 6, 2, 1, 4, 5, 0, 1, 3, 0, 21, 24, 1, 1, 0, 0, 1, 1]' : 0.115944}", "{'[3, 6, 2, 1, 4, 5, 0, 1, 3, 0, 21, 24, 1, 1, 0, 0, 1, 1]' : 0.114204}", "{'[3, 6, 2, 1, 4, 5, 0, 1, 3, 0, 21, 24, 1, 1, 0, 0, 1, 1]' : 0.112289}", "{'[3, 6, 2, 1, 4, 5, 0, 1, 3, 0, 21, 24, 1, 1, 0, 0, 1, 1]' : 0.112125}", "{'[3, 6, 2, 1, 4, 5, 0, 1, 3, 0, 21, 24, 1, 1, 0, 0, 1, 1]' : 0.112145}", "{'[3, 6, 2, 1, 4, 5, 0, 1, 3, 0, 21, 24, 1, 1, 0, 0, 1, 1]' : 0.115035}", "{'[3, 6, 2, 1, 4, 5, 0, 1, 3, 0, 21, 24, 1, 1, 0, 0, 1, 1]' : 0.115965}", "{'[3, 6, 2, 1, 4, 5, 0, 1, 3, 0, 21, 24, 1, 1, 0, 0, 1, 1]' : 0.115303}", "{'[3, 6, 2, 1, 4, 5, 0, 1, 3, 0, 21, 24, 1, 1, 0, 0, 1, 1]' : 0.115737}", "{'[3, 6, 2, 1, 4, 5, 0, 1, 3, 0, 21, 24, 1, 1, 0, 0, 1, 1]' : 0.115564}", "{'[3, 6, 2, 1, 4, 5, 0, 1, 3, 0, 21, 24, 1, 1, 0, 0, 1, 1]' : 0.117787}", "{'[3, 6, 2, 1, 4, 5, 0, 1, 3, 0, 21, 24, 1, 1, 0, 0, 1, 1]' : 0.115568}", "{'[3, 6, 2, 1, 4, 5, 0, 1, 3, 0, 21, 24, 1, 1, 0, 0, 1, 1]' : 0.115618}", "{'[3, 6, 2, 1, 4, 5, 0, 1, 3, 0, 21, 24, 1, 1, 0, 0, 1, 1]' : 0.116296}", "{'[3, 6, 2, 1, 4, 5, 0, 1, 3, 0, 21, 24, 1, 1, 0, 0, 1, 1]' : 0.116498}", "{'[3, 6, 2, 1, 4, 5, 0, 1, 3, 0, 21, 24, 1, 1, 0, 0, 1, 1]' : 0.115234}", "{'[3, 6, 2, 1, 4, 5, 0, 1, 3, 0, 21, 24, 1, 1, 0, 0, 1, 1]' : 0.11537}", "{'[3, 6, 2, 1, 4, 5, 0, 1, 3, 0, 21, 24, 1, 1, 0, 0, 1, 1]' : 0.115408}", "{'[3, 6, 2, 1, 4, 5, 0, 1, 3, 0, 21, 24, 1, 1, 0, 0, 1, 1]' : 0.114831}", "{'[3, 6, 2, 1, 4, 5, 0, 1, 3, 0, 21, 24, 1, 1, 0, 0, 1, 1]' : 0.11282}", "{'[3, 6, 2, 1, 4, 5, 0, 1, 3, 0, 21, 24, 1, 1, 0, 0, 1, 1]' : 0.112348}", "{'[3, 6, 2, 1, 4, 5, 0, 1, 3, 0, 21, 24, 1, 1, 0, 0, 1, 1]' : 0.11259}", "{'[3, 6, 2, 1, 4, 5, 0, 1, 3, 0, 21, 24, 1, 1, 0, 0, 1, 1]' : 0.11377}"]
returning from 'run': {'[3, 6, 2, 1, 4, 5, 0, 1, 3, 0, 21, 24, 1, 1, 0, 0, 1, 1]': ([0.132875, 0.132748, 0.132714, 0.121767, 0.114954, 0.114953, 0.114806, 0.115944, 0.114204, 0.112289, 0.112125, 0.112145, 0.115035, 0.115965, 0.115303, 0.115737, 0.115564, 0.117787, 0.115568, 0.115618, 0.116296, 0.116498, 0.115234, 0.11537, 0.115408, 0.114831, 0.11282, 0.112348, 0.11259, 0.11377], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 6, 2, 1, 4, 5, 0, 1, 3, 0, 21, 24, 1, 1, 0, 0, 1, 1]': ([0.132875, 0.132748, 0.132714, 0.121767, 0.114954, 0.114953, 0.114806, 0.115944, 0.114204, 0.112289, 0.112125, 0.112145, 0.115035, 0.115965, 0.115303, 0.115737, 0.115564, 0.117787, 0.115568, 0.115618, 0.116296, 0.116498, 0.115234, 0.11537, 0.115408, 0.114831, 0.11282, 0.112348, 0.11259, 0.11377], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	82
        Max loop nest depth: 	5
        Additions: 		4611
        Multiplications: 	1092
        Divisions: 		0
        Logical: 		0
        Reads: 			7032
        Writes: 		800
        Comparisons:		82
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest24.exe __orio_perftest24.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest24.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest24.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest24.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest24.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = kkk
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	5
        Additions: 		379
        Multiplications: 	162
        Divisions: 		0
        Logical: 		0
        Reads: 			805
        Writes: 		153
        Comparisons:		16
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest25.exe __orio_perftest25.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest25.exe  
Program Test Output: 
{'[0, 2, 4, 2, 6, 2, 1, 0, 0, 0, 21, 0, 1, 1, 0, 1, 1, 1]' : 0.105654}
{'[0, 2, 4, 2, 6, 2, 1, 0, 0, 0, 21, 0, 1, 1, 0, 1, 1, 1]' : 0.105673}
{'[0, 2, 4, 2, 6, 2, 1, 0, 0, 0, 21, 0, 1, 1, 0, 1, 1, 1]' : 0.10434}
{'[0, 2, 4, 2, 6, 2, 1, 0, 0, 0, 21, 0, 1, 1, 0, 1, 1, 1]' : 0.091579}
{'[0, 2, 4, 2, 6, 2, 1, 0, 0, 0, 21, 0, 1, 1, 0, 1, 1, 1]' : 0.089035}
{'[0, 2, 4, 2, 6, 2, 1, 0, 0, 0, 21, 0, 1, 1, 0, 1, 1, 1]' : 0.0891359}
{'[0, 2, 4, 2, 6, 2, 1, 0, 0, 0, 21, 0, 1, 1, 0, 1, 1, 1]' : 0.0890169}
{'[0, 2, 4, 2, 6, 2, 1, 0, 0, 0, 21, 0, 1, 1, 0, 1, 1, 1]' : 0.0889859}
{'[0, 2, 4, 2, 6, 2, 1, 0, 0, 0, 21, 0, 1, 1, 0, 1, 1, 1]' : 0.090308}
{'[0, 2, 4, 2, 6, 2, 1, 0, 0, 0, 21, 0, 1, 1, 0, 1, 1, 1]' : 0.0915968}
{'[0, 2, 4, 2, 6, 2, 1, 0, 0, 0, 21, 0, 1, 1, 0, 1, 1, 1]' : 0.091378}
{'[0, 2, 4, 2, 6, 2, 1, 0, 0, 0, 21, 0, 1, 1, 0, 1, 1, 1]' : 0.0913448}
{'[0, 2, 4, 2, 6, 2, 1, 0, 0, 0, 21, 0, 1, 1, 0, 1, 1, 1]' : 0.0918119}
{'[0, 2, 4, 2, 6, 2, 1, 0, 0, 0, 21, 0, 1, 1, 0, 1, 1, 1]' : 0.0931771}
{'[0, 2, 4, 2, 6, 2, 1, 0, 0, 0, 21, 0, 1, 1, 0, 1, 1, 1]' : 0.089395}
{'[0, 2, 4, 2, 6, 2, 1, 0, 0, 0, 21, 0, 1, 1, 0, 1, 1, 1]' : 0.0890598}
{'[0, 2, 4, 2, 6, 2, 1, 0, 0, 0, 21, 0, 1, 1, 0, 1, 1, 1]' : 0.086735}
{'[0, 2, 4, 2, 6, 2, 1, 0, 0, 0, 21, 0, 1, 1, 0, 1, 1, 1]' : 0.086478}
{'[0, 2, 4, 2, 6, 2, 1, 0, 0, 0, 21, 0, 1, 1, 0, 1, 1, 1]' : 0.0865481}
{'[0, 2, 4, 2, 6, 2, 1, 0, 0, 0, 21, 0, 1, 1, 0, 1, 1, 1]' : 0.0879219}
{'[0, 2, 4, 2, 6, 2, 1, 0, 0, 0, 21, 0, 1, 1, 0, 1, 1, 1]' : 0.091747}
{'[0, 2, 4, 2, 6, 2, 1, 0, 0, 0, 21, 0, 1, 1, 0, 1, 1, 1]' : 0.091737}
{'[0, 2, 4, 2, 6, 2, 1, 0, 0, 0, 21, 0, 1, 1, 0, 1, 1, 1]' : 0.0915232}
{'[0, 2, 4, 2, 6, 2, 1, 0, 0, 0, 21, 0, 1, 1, 0, 1, 1, 1]' : 0.0918128}
{'[0, 2, 4, 2, 6, 2, 1, 0, 0, 0, 21, 0, 1, 1, 0, 1, 1, 1]' : 0.0932}
{'[0, 2, 4, 2, 6, 2, 1, 0, 0, 0, 21, 0, 1, 1, 0, 1, 1, 1]' : 0.089627}
{'[0, 2, 4, 2, 6, 2, 1, 0, 0, 0, 21, 0, 1, 1, 0, 1, 1, 1]' : 0.0890381}
{'[0, 2, 4, 2, 6, 2, 1, 0, 0, 0, 21, 0, 1, 1, 0, 1, 1, 1]' : 0.0890589}
{'[0, 2, 4, 2, 6, 2, 1, 0, 0, 0, 21, 0, 1, 1, 0, 1, 1, 1]' : 0.0891628}
{'[0, 2, 4, 2, 6, 2, 1, 0, 0, 0, 21, 0, 1, 1, 0, 1, 1, 1]' : 0.089102}

out:
 ["{'[0, 2, 4, 2, 6, 2, 1, 0, 0, 0, 21, 0, 1, 1, 0, 1, 1, 1]' : 0.105654}", "{'[0, 2, 4, 2, 6, 2, 1, 0, 0, 0, 21, 0, 1, 1, 0, 1, 1, 1]' : 0.105673}", "{'[0, 2, 4, 2, 6, 2, 1, 0, 0, 0, 21, 0, 1, 1, 0, 1, 1, 1]' : 0.10434}", "{'[0, 2, 4, 2, 6, 2, 1, 0, 0, 0, 21, 0, 1, 1, 0, 1, 1, 1]' : 0.091579}", "{'[0, 2, 4, 2, 6, 2, 1, 0, 0, 0, 21, 0, 1, 1, 0, 1, 1, 1]' : 0.089035}", "{'[0, 2, 4, 2, 6, 2, 1, 0, 0, 0, 21, 0, 1, 1, 0, 1, 1, 1]' : 0.0891359}", "{'[0, 2, 4, 2, 6, 2, 1, 0, 0, 0, 21, 0, 1, 1, 0, 1, 1, 1]' : 0.0890169}", "{'[0, 2, 4, 2, 6, 2, 1, 0, 0, 0, 21, 0, 1, 1, 0, 1, 1, 1]' : 0.0889859}", "{'[0, 2, 4, 2, 6, 2, 1, 0, 0, 0, 21, 0, 1, 1, 0, 1, 1, 1]' : 0.090308}", "{'[0, 2, 4, 2, 6, 2, 1, 0, 0, 0, 21, 0, 1, 1, 0, 1, 1, 1]' : 0.0915968}", "{'[0, 2, 4, 2, 6, 2, 1, 0, 0, 0, 21, 0, 1, 1, 0, 1, 1, 1]' : 0.091378}", "{'[0, 2, 4, 2, 6, 2, 1, 0, 0, 0, 21, 0, 1, 1, 0, 1, 1, 1]' : 0.0913448}", "{'[0, 2, 4, 2, 6, 2, 1, 0, 0, 0, 21, 0, 1, 1, 0, 1, 1, 1]' : 0.0918119}", "{'[0, 2, 4, 2, 6, 2, 1, 0, 0, 0, 21, 0, 1, 1, 0, 1, 1, 1]' : 0.0931771}", "{'[0, 2, 4, 2, 6, 2, 1, 0, 0, 0, 21, 0, 1, 1, 0, 1, 1, 1]' : 0.089395}", "{'[0, 2, 4, 2, 6, 2, 1, 0, 0, 0, 21, 0, 1, 1, 0, 1, 1, 1]' : 0.0890598}", "{'[0, 2, 4, 2, 6, 2, 1, 0, 0, 0, 21, 0, 1, 1, 0, 1, 1, 1]' : 0.086735}", "{'[0, 2, 4, 2, 6, 2, 1, 0, 0, 0, 21, 0, 1, 1, 0, 1, 1, 1]' : 0.086478}", "{'[0, 2, 4, 2, 6, 2, 1, 0, 0, 0, 21, 0, 1, 1, 0, 1, 1, 1]' : 0.0865481}", "{'[0, 2, 4, 2, 6, 2, 1, 0, 0, 0, 21, 0, 1, 1, 0, 1, 1, 1]' : 0.0879219}", "{'[0, 2, 4, 2, 6, 2, 1, 0, 0, 0, 21, 0, 1, 1, 0, 1, 1, 1]' : 0.091747}", "{'[0, 2, 4, 2, 6, 2, 1, 0, 0, 0, 21, 0, 1, 1, 0, 1, 1, 1]' : 0.091737}", "{'[0, 2, 4, 2, 6, 2, 1, 0, 0, 0, 21, 0, 1, 1, 0, 1, 1, 1]' : 0.0915232}", "{'[0, 2, 4, 2, 6, 2, 1, 0, 0, 0, 21, 0, 1, 1, 0, 1, 1, 1]' : 0.0918128}", "{'[0, 2, 4, 2, 6, 2, 1, 0, 0, 0, 21, 0, 1, 1, 0, 1, 1, 1]' : 0.0932}", "{'[0, 2, 4, 2, 6, 2, 1, 0, 0, 0, 21, 0, 1, 1, 0, 1, 1, 1]' : 0.089627}", "{'[0, 2, 4, 2, 6, 2, 1, 0, 0, 0, 21, 0, 1, 1, 0, 1, 1, 1]' : 0.0890381}", "{'[0, 2, 4, 2, 6, 2, 1, 0, 0, 0, 21, 0, 1, 1, 0, 1, 1, 1]' : 0.0890589}", "{'[0, 2, 4, 2, 6, 2, 1, 0, 0, 0, 21, 0, 1, 1, 0, 1, 1, 1]' : 0.0891628}", "{'[0, 2, 4, 2, 6, 2, 1, 0, 0, 0, 21, 0, 1, 1, 0, 1, 1, 1]' : 0.089102}"]
returning from 'run': {'[0, 2, 4, 2, 6, 2, 1, 0, 0, 0, 21, 0, 1, 1, 0, 1, 1, 1]': ([0.105654, 0.105673, 0.10434, 0.091579, 0.089035, 0.0891359, 0.0890169, 0.0889859, 0.090308, 0.0915968, 0.091378, 0.0913448, 0.0918119, 0.0931771, 0.089395, 0.0890598, 0.086735, 0.086478, 0.0865481, 0.0879219, 0.091747, 0.091737, 0.0915232, 0.0918128, 0.0932, 0.089627, 0.0890381, 0.0890589, 0.0891628, 0.089102], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 4, 2, 6, 2, 1, 0, 0, 0, 21, 0, 1, 1, 0, 1, 1, 1]': ([0.105654, 0.105673, 0.10434, 0.091579, 0.089035, 0.0891359, 0.0890169, 0.0889859, 0.090308, 0.0915968, 0.091378, 0.0913448, 0.0918119, 0.0931771, 0.089395, 0.0890598, 0.086735, 0.086478, 0.0865481, 0.0879219, 0.091747, 0.091737, 0.0915232, 0.0918128, 0.0932, 0.089627, 0.0890381, 0.0890589, 0.0891628, 0.089102], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	5
        Additions: 		374
        Multiplications: 	140
        Divisions: 		0
        Logical: 		0
        Reads: 			814
        Writes: 		182
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest26.exe __orio_perftest26.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest26.exe  
Program Test Output: 
{'[6, 2, 0, 0, 5, 3, 0, 0, 25, 3, 0, 3, 0, 1, 0, 1, 1, 0]' : 0.1072}
{'[6, 2, 0, 0, 5, 3, 0, 0, 25, 3, 0, 3, 0, 1, 0, 1, 1, 0]' : 0.107227}
{'[6, 2, 0, 0, 5, 3, 0, 0, 25, 3, 0, 3, 0, 1, 0, 1, 1, 0]' : 0.107193}
{'[6, 2, 0, 0, 5, 3, 0, 0, 25, 3, 0, 3, 0, 1, 0, 1, 1, 0]' : 0.10316}
{'[6, 2, 0, 0, 5, 3, 0, 0, 25, 3, 0, 3, 0, 1, 0, 1, 1, 0]' : 0.094135}
{'[6, 2, 0, 0, 5, 3, 0, 0, 25, 3, 0, 3, 0, 1, 0, 1, 1, 0]' : 0.094059}
{'[6, 2, 0, 0, 5, 3, 0, 0, 25, 3, 0, 3, 0, 1, 0, 1, 1, 0]' : 0.0939839}
{'[6, 2, 0, 0, 5, 3, 0, 0, 25, 3, 0, 3, 0, 1, 0, 1, 1, 0]' : 0.0940139}
{'[6, 2, 0, 0, 5, 3, 0, 0, 25, 3, 0, 3, 0, 1, 0, 1, 1, 0]' : 0.0940499}
{'[6, 2, 0, 0, 5, 3, 0, 0, 25, 3, 0, 3, 0, 1, 0, 1, 1, 0]' : 0.0941639}
{'[6, 2, 0, 0, 5, 3, 0, 0, 25, 3, 0, 3, 0, 1, 0, 1, 1, 0]' : 0.0926261}
{'[6, 2, 0, 0, 5, 3, 0, 0, 25, 3, 0, 3, 0, 1, 0, 1, 1, 0]' : 0.091666}
{'[6, 2, 0, 0, 5, 3, 0, 0, 25, 3, 0, 3, 0, 1, 0, 1, 1, 0]' : 0.0916011}
{'[6, 2, 0, 0, 5, 3, 0, 0, 25, 3, 0, 3, 0, 1, 0, 1, 1, 0]' : 0.0925798}
{'[6, 2, 0, 0, 5, 3, 0, 0, 25, 3, 0, 3, 0, 1, 0, 1, 1, 0]' : 0.0939722}
{'[6, 2, 0, 0, 5, 3, 0, 0, 25, 3, 0, 3, 0, 1, 0, 1, 1, 0]' : 0.0943649}
{'[6, 2, 0, 0, 5, 3, 0, 0, 25, 3, 0, 3, 0, 1, 0, 1, 1, 0]' : 0.0941622}
{'[6, 2, 0, 0, 5, 3, 0, 0, 25, 3, 0, 3, 0, 1, 0, 1, 1, 0]' : 0.0941539}
{'[6, 2, 0, 0, 5, 3, 0, 0, 25, 3, 0, 3, 0, 1, 0, 1, 1, 0]' : 0.0940762}
{'[6, 2, 0, 0, 5, 3, 0, 0, 25, 3, 0, 3, 0, 1, 0, 1, 1, 0]' : 0.094074}
{'[6, 2, 0, 0, 5, 3, 0, 0, 25, 3, 0, 3, 0, 1, 0, 1, 1, 0]' : 0.09448}
{'[6, 2, 0, 0, 5, 3, 0, 0, 25, 3, 0, 3, 0, 1, 0, 1, 1, 0]' : 0.094084}
{'[6, 2, 0, 0, 5, 3, 0, 0, 25, 3, 0, 3, 0, 1, 0, 1, 1, 0]' : 0.094099}
{'[6, 2, 0, 0, 5, 3, 0, 0, 25, 3, 0, 3, 0, 1, 0, 1, 1, 0]' : 0.094213}
{'[6, 2, 0, 0, 5, 3, 0, 0, 25, 3, 0, 3, 0, 1, 0, 1, 1, 0]' : 0.0941751}
{'[6, 2, 0, 0, 5, 3, 0, 0, 25, 3, 0, 3, 0, 1, 0, 1, 1, 0]' : 0.0943148}
{'[6, 2, 0, 0, 5, 3, 0, 0, 25, 3, 0, 3, 0, 1, 0, 1, 1, 0]' : 0.094084}
{'[6, 2, 0, 0, 5, 3, 0, 0, 25, 3, 0, 3, 0, 1, 0, 1, 1, 0]' : 0.094008}
{'[6, 2, 0, 0, 5, 3, 0, 0, 25, 3, 0, 3, 0, 1, 0, 1, 1, 0]' : 0.0940251}
{'[6, 2, 0, 0, 5, 3, 0, 0, 25, 3, 0, 3, 0, 1, 0, 1, 1, 0]' : 0.094075}

out:
 ["{'[6, 2, 0, 0, 5, 3, 0, 0, 25, 3, 0, 3, 0, 1, 0, 1, 1, 0]' : 0.1072}", "{'[6, 2, 0, 0, 5, 3, 0, 0, 25, 3, 0, 3, 0, 1, 0, 1, 1, 0]' : 0.107227}", "{'[6, 2, 0, 0, 5, 3, 0, 0, 25, 3, 0, 3, 0, 1, 0, 1, 1, 0]' : 0.107193}", "{'[6, 2, 0, 0, 5, 3, 0, 0, 25, 3, 0, 3, 0, 1, 0, 1, 1, 0]' : 0.10316}", "{'[6, 2, 0, 0, 5, 3, 0, 0, 25, 3, 0, 3, 0, 1, 0, 1, 1, 0]' : 0.094135}", "{'[6, 2, 0, 0, 5, 3, 0, 0, 25, 3, 0, 3, 0, 1, 0, 1, 1, 0]' : 0.094059}", "{'[6, 2, 0, 0, 5, 3, 0, 0, 25, 3, 0, 3, 0, 1, 0, 1, 1, 0]' : 0.0939839}", "{'[6, 2, 0, 0, 5, 3, 0, 0, 25, 3, 0, 3, 0, 1, 0, 1, 1, 0]' : 0.0940139}", "{'[6, 2, 0, 0, 5, 3, 0, 0, 25, 3, 0, 3, 0, 1, 0, 1, 1, 0]' : 0.0940499}", "{'[6, 2, 0, 0, 5, 3, 0, 0, 25, 3, 0, 3, 0, 1, 0, 1, 1, 0]' : 0.0941639}", "{'[6, 2, 0, 0, 5, 3, 0, 0, 25, 3, 0, 3, 0, 1, 0, 1, 1, 0]' : 0.0926261}", "{'[6, 2, 0, 0, 5, 3, 0, 0, 25, 3, 0, 3, 0, 1, 0, 1, 1, 0]' : 0.091666}", "{'[6, 2, 0, 0, 5, 3, 0, 0, 25, 3, 0, 3, 0, 1, 0, 1, 1, 0]' : 0.0916011}", "{'[6, 2, 0, 0, 5, 3, 0, 0, 25, 3, 0, 3, 0, 1, 0, 1, 1, 0]' : 0.0925798}", "{'[6, 2, 0, 0, 5, 3, 0, 0, 25, 3, 0, 3, 0, 1, 0, 1, 1, 0]' : 0.0939722}", "{'[6, 2, 0, 0, 5, 3, 0, 0, 25, 3, 0, 3, 0, 1, 0, 1, 1, 0]' : 0.0943649}", "{'[6, 2, 0, 0, 5, 3, 0, 0, 25, 3, 0, 3, 0, 1, 0, 1, 1, 0]' : 0.0941622}", "{'[6, 2, 0, 0, 5, 3, 0, 0, 25, 3, 0, 3, 0, 1, 0, 1, 1, 0]' : 0.0941539}", "{'[6, 2, 0, 0, 5, 3, 0, 0, 25, 3, 0, 3, 0, 1, 0, 1, 1, 0]' : 0.0940762}", "{'[6, 2, 0, 0, 5, 3, 0, 0, 25, 3, 0, 3, 0, 1, 0, 1, 1, 0]' : 0.094074}", "{'[6, 2, 0, 0, 5, 3, 0, 0, 25, 3, 0, 3, 0, 1, 0, 1, 1, 0]' : 0.09448}", "{'[6, 2, 0, 0, 5, 3, 0, 0, 25, 3, 0, 3, 0, 1, 0, 1, 1, 0]' : 0.094084}", "{'[6, 2, 0, 0, 5, 3, 0, 0, 25, 3, 0, 3, 0, 1, 0, 1, 1, 0]' : 0.094099}", "{'[6, 2, 0, 0, 5, 3, 0, 0, 25, 3, 0, 3, 0, 1, 0, 1, 1, 0]' : 0.094213}", "{'[6, 2, 0, 0, 5, 3, 0, 0, 25, 3, 0, 3, 0, 1, 0, 1, 1, 0]' : 0.0941751}", "{'[6, 2, 0, 0, 5, 3, 0, 0, 25, 3, 0, 3, 0, 1, 0, 1, 1, 0]' : 0.0943148}", "{'[6, 2, 0, 0, 5, 3, 0, 0, 25, 3, 0, 3, 0, 1, 0, 1, 1, 0]' : 0.094084}", "{'[6, 2, 0, 0, 5, 3, 0, 0, 25, 3, 0, 3, 0, 1, 0, 1, 1, 0]' : 0.094008}", "{'[6, 2, 0, 0, 5, 3, 0, 0, 25, 3, 0, 3, 0, 1, 0, 1, 1, 0]' : 0.0940251}", "{'[6, 2, 0, 0, 5, 3, 0, 0, 25, 3, 0, 3, 0, 1, 0, 1, 1, 0]' : 0.094075}"]
returning from 'run': {'[6, 2, 0, 0, 5, 3, 0, 0, 25, 3, 0, 3, 0, 1, 0, 1, 1, 0]': ([0.1072, 0.107227, 0.107193, 0.10316, 0.094135, 0.094059, 0.0939839, 0.0940139, 0.0940499, 0.0941639, 0.0926261, 0.091666, 0.0916011, 0.0925798, 0.0939722, 0.0943649, 0.0941622, 0.0941539, 0.0940762, 0.094074, 0.09448, 0.094084, 0.094099, 0.094213, 0.0941751, 0.0943148, 0.094084, 0.094008, 0.0940251, 0.094075], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 2, 0, 0, 5, 3, 0, 0, 25, 3, 0, 3, 0, 1, 0, 1, 1, 0]': ([0.1072, 0.107227, 0.107193, 0.10316, 0.094135, 0.094059, 0.0939839, 0.0940139, 0.0940499, 0.0941639, 0.0926261, 0.091666, 0.0916011, 0.0925798, 0.0939722, 0.0943649, 0.0941622, 0.0941539, 0.0940762, 0.094074, 0.09448, 0.094084, 0.094099, 0.094213, 0.0941751, 0.0943148, 0.094084, 0.094008, 0.0940251, 0.094075], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	5
        Additions: 		7218
        Multiplications: 	3564
        Divisions: 		0
        Logical: 		0
        Reads: 			13317
        Writes: 		2056
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest27.exe __orio_perftest27.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest27.exe  
Program Test Output: 
{'[6, 0, 6, 0, 4, 5, 0, 0, 16, 0, 21, 29, 2, 0, 0, 1, 1, 0]' : 0.24161}
{'[6, 0, 6, 0, 4, 5, 0, 0, 16, 0, 21, 29, 2, 0, 0, 1, 1, 0]' : 0.239019}
{'[6, 0, 6, 0, 4, 5, 0, 0, 16, 0, 21, 29, 2, 0, 0, 1, 1, 0]' : 0.222516}
{'[6, 0, 6, 0, 4, 5, 0, 0, 16, 0, 21, 29, 2, 0, 0, 1, 1, 0]' : 0.22385}
{'[6, 0, 6, 0, 4, 5, 0, 0, 16, 0, 21, 29, 2, 0, 0, 1, 1, 0]' : 0.221883}
{'[6, 0, 6, 0, 4, 5, 0, 0, 16, 0, 21, 29, 2, 0, 0, 1, 1, 0]' : 0.225725}
{'[6, 0, 6, 0, 4, 5, 0, 0, 16, 0, 21, 29, 2, 0, 0, 1, 1, 0]' : 0.222958}
{'[6, 0, 6, 0, 4, 5, 0, 0, 16, 0, 21, 29, 2, 0, 0, 1, 1, 0]' : 0.223436}
{'[6, 0, 6, 0, 4, 5, 0, 0, 16, 0, 21, 29, 2, 0, 0, 1, 1, 0]' : 0.22298}
{'[6, 0, 6, 0, 4, 5, 0, 0, 16, 0, 21, 29, 2, 0, 0, 1, 1, 0]' : 0.224462}
{'[6, 0, 6, 0, 4, 5, 0, 0, 16, 0, 21, 29, 2, 0, 0, 1, 1, 0]' : 0.22232}
{'[6, 0, 6, 0, 4, 5, 0, 0, 16, 0, 21, 29, 2, 0, 0, 1, 1, 0]' : 0.221901}
{'[6, 0, 6, 0, 4, 5, 0, 0, 16, 0, 21, 29, 2, 0, 0, 1, 1, 0]' : 0.225941}
{'[6, 0, 6, 0, 4, 5, 0, 0, 16, 0, 21, 29, 2, 0, 0, 1, 1, 0]' : 0.223156}
{'[6, 0, 6, 0, 4, 5, 0, 0, 16, 0, 21, 29, 2, 0, 0, 1, 1, 0]' : 0.22026}
{'[6, 0, 6, 0, 4, 5, 0, 0, 16, 0, 21, 29, 2, 0, 0, 1, 1, 0]' : 0.223343}
{'[6, 0, 6, 0, 4, 5, 0, 0, 16, 0, 21, 29, 2, 0, 0, 1, 1, 0]' : 0.224591}
{'[6, 0, 6, 0, 4, 5, 0, 0, 16, 0, 21, 29, 2, 0, 0, 1, 1, 0]' : 0.223069}
{'[6, 0, 6, 0, 4, 5, 0, 0, 16, 0, 21, 29, 2, 0, 0, 1, 1, 0]' : 0.224818}
{'[6, 0, 6, 0, 4, 5, 0, 0, 16, 0, 21, 29, 2, 0, 0, 1, 1, 0]' : 0.221169}
{'[6, 0, 6, 0, 4, 5, 0, 0, 16, 0, 21, 29, 2, 0, 0, 1, 1, 0]' : 0.225891}
{'[6, 0, 6, 0, 4, 5, 0, 0, 16, 0, 21, 29, 2, 0, 0, 1, 1, 0]' : 0.223216}
{'[6, 0, 6, 0, 4, 5, 0, 0, 16, 0, 21, 29, 2, 0, 0, 1, 1, 0]' : 0.223038}
{'[6, 0, 6, 0, 4, 5, 0, 0, 16, 0, 21, 29, 2, 0, 0, 1, 1, 0]' : 0.222635}
{'[6, 0, 6, 0, 4, 5, 0, 0, 16, 0, 21, 29, 2, 0, 0, 1, 1, 0]' : 0.22593}
{'[6, 0, 6, 0, 4, 5, 0, 0, 16, 0, 21, 29, 2, 0, 0, 1, 1, 0]' : 0.225981}
{'[6, 0, 6, 0, 4, 5, 0, 0, 16, 0, 21, 29, 2, 0, 0, 1, 1, 0]' : 0.227126}
{'[6, 0, 6, 0, 4, 5, 0, 0, 16, 0, 21, 29, 2, 0, 0, 1, 1, 0]' : 0.22602}
{'[6, 0, 6, 0, 4, 5, 0, 0, 16, 0, 21, 29, 2, 0, 0, 1, 1, 0]' : 0.225452}
{'[6, 0, 6, 0, 4, 5, 0, 0, 16, 0, 21, 29, 2, 0, 0, 1, 1, 0]' : 0.224148}

out:
 ["{'[6, 0, 6, 0, 4, 5, 0, 0, 16, 0, 21, 29, 2, 0, 0, 1, 1, 0]' : 0.24161}", "{'[6, 0, 6, 0, 4, 5, 0, 0, 16, 0, 21, 29, 2, 0, 0, 1, 1, 0]' : 0.239019}", "{'[6, 0, 6, 0, 4, 5, 0, 0, 16, 0, 21, 29, 2, 0, 0, 1, 1, 0]' : 0.222516}", "{'[6, 0, 6, 0, 4, 5, 0, 0, 16, 0, 21, 29, 2, 0, 0, 1, 1, 0]' : 0.22385}", "{'[6, 0, 6, 0, 4, 5, 0, 0, 16, 0, 21, 29, 2, 0, 0, 1, 1, 0]' : 0.221883}", "{'[6, 0, 6, 0, 4, 5, 0, 0, 16, 0, 21, 29, 2, 0, 0, 1, 1, 0]' : 0.225725}", "{'[6, 0, 6, 0, 4, 5, 0, 0, 16, 0, 21, 29, 2, 0, 0, 1, 1, 0]' : 0.222958}", "{'[6, 0, 6, 0, 4, 5, 0, 0, 16, 0, 21, 29, 2, 0, 0, 1, 1, 0]' : 0.223436}", "{'[6, 0, 6, 0, 4, 5, 0, 0, 16, 0, 21, 29, 2, 0, 0, 1, 1, 0]' : 0.22298}", "{'[6, 0, 6, 0, 4, 5, 0, 0, 16, 0, 21, 29, 2, 0, 0, 1, 1, 0]' : 0.224462}", "{'[6, 0, 6, 0, 4, 5, 0, 0, 16, 0, 21, 29, 2, 0, 0, 1, 1, 0]' : 0.22232}", "{'[6, 0, 6, 0, 4, 5, 0, 0, 16, 0, 21, 29, 2, 0, 0, 1, 1, 0]' : 0.221901}", "{'[6, 0, 6, 0, 4, 5, 0, 0, 16, 0, 21, 29, 2, 0, 0, 1, 1, 0]' : 0.225941}", "{'[6, 0, 6, 0, 4, 5, 0, 0, 16, 0, 21, 29, 2, 0, 0, 1, 1, 0]' : 0.223156}", "{'[6, 0, 6, 0, 4, 5, 0, 0, 16, 0, 21, 29, 2, 0, 0, 1, 1, 0]' : 0.22026}", "{'[6, 0, 6, 0, 4, 5, 0, 0, 16, 0, 21, 29, 2, 0, 0, 1, 1, 0]' : 0.223343}", "{'[6, 0, 6, 0, 4, 5, 0, 0, 16, 0, 21, 29, 2, 0, 0, 1, 1, 0]' : 0.224591}", "{'[6, 0, 6, 0, 4, 5, 0, 0, 16, 0, 21, 29, 2, 0, 0, 1, 1, 0]' : 0.223069}", "{'[6, 0, 6, 0, 4, 5, 0, 0, 16, 0, 21, 29, 2, 0, 0, 1, 1, 0]' : 0.224818}", "{'[6, 0, 6, 0, 4, 5, 0, 0, 16, 0, 21, 29, 2, 0, 0, 1, 1, 0]' : 0.221169}", "{'[6, 0, 6, 0, 4, 5, 0, 0, 16, 0, 21, 29, 2, 0, 0, 1, 1, 0]' : 0.225891}", "{'[6, 0, 6, 0, 4, 5, 0, 0, 16, 0, 21, 29, 2, 0, 0, 1, 1, 0]' : 0.223216}", "{'[6, 0, 6, 0, 4, 5, 0, 0, 16, 0, 21, 29, 2, 0, 0, 1, 1, 0]' : 0.223038}", "{'[6, 0, 6, 0, 4, 5, 0, 0, 16, 0, 21, 29, 2, 0, 0, 1, 1, 0]' : 0.222635}", "{'[6, 0, 6, 0, 4, 5, 0, 0, 16, 0, 21, 29, 2, 0, 0, 1, 1, 0]' : 0.22593}", "{'[6, 0, 6, 0, 4, 5, 0, 0, 16, 0, 21, 29, 2, 0, 0, 1, 1, 0]' : 0.225981}", "{'[6, 0, 6, 0, 4, 5, 0, 0, 16, 0, 21, 29, 2, 0, 0, 1, 1, 0]' : 0.227126}", "{'[6, 0, 6, 0, 4, 5, 0, 0, 16, 0, 21, 29, 2, 0, 0, 1, 1, 0]' : 0.22602}", "{'[6, 0, 6, 0, 4, 5, 0, 0, 16, 0, 21, 29, 2, 0, 0, 1, 1, 0]' : 0.225452}", "{'[6, 0, 6, 0, 4, 5, 0, 0, 16, 0, 21, 29, 2, 0, 0, 1, 1, 0]' : 0.224148}"]
returning from 'run': {'[6, 0, 6, 0, 4, 5, 0, 0, 16, 0, 21, 29, 2, 0, 0, 1, 1, 0]': ([0.24161, 0.239019, 0.222516, 0.22385, 0.221883, 0.225725, 0.222958, 0.223436, 0.22298, 0.224462, 0.22232, 0.221901, 0.225941, 0.223156, 0.22026, 0.223343, 0.224591, 0.223069, 0.224818, 0.221169, 0.225891, 0.223216, 0.223038, 0.222635, 0.22593, 0.225981, 0.227126, 0.22602, 0.225452, 0.224148], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 6, 0, 4, 5, 0, 0, 16, 0, 21, 29, 2, 0, 0, 1, 1, 0]': ([0.24161, 0.239019, 0.222516, 0.22385, 0.221883, 0.225725, 0.222958, 0.223436, 0.22298, 0.224462, 0.22232, 0.221901, 0.225941, 0.223156, 0.22026, 0.223343, 0.224591, 0.223069, 0.224818, 0.221169, 0.225891, 0.223216, 0.223038, 0.222635, 0.22593, 0.225981, 0.227126, 0.22602, 0.225452, 0.224148], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	174
        Max loop nest depth: 	6
        Additions: 		4445
        Multiplications: 	1444
        Divisions: 		0
        Logical: 		0
        Reads: 			8230
        Writes: 		1442
        Comparisons:		174
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest28.exe __orio_perftest28.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest28.exe  
Program Test Output: 
{'[6, 0, 3, 6, 6, 6, 1, 1, 15, 28, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.104457}
{'[6, 0, 3, 6, 6, 6, 1, 1, 15, 28, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.104399}
{'[6, 0, 3, 6, 6, 6, 1, 1, 15, 28, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.104302}
{'[6, 0, 3, 6, 6, 6, 1, 1, 15, 28, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.10444}
{'[6, 0, 3, 6, 6, 6, 1, 1, 15, 28, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.104393}
{'[6, 0, 3, 6, 6, 6, 1, 1, 15, 28, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.104323}
{'[6, 0, 3, 6, 6, 6, 1, 1, 15, 28, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.10433}
{'[6, 0, 3, 6, 6, 6, 1, 1, 15, 28, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.104412}
{'[6, 0, 3, 6, 6, 6, 1, 1, 15, 28, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.104475}
{'[6, 0, 3, 6, 6, 6, 1, 1, 15, 28, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.104367}
{'[6, 0, 3, 6, 6, 6, 1, 1, 15, 28, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.104291}
{'[6, 0, 3, 6, 6, 6, 1, 1, 15, 28, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.104302}
{'[6, 0, 3, 6, 6, 6, 1, 1, 15, 28, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.104373}
{'[6, 0, 3, 6, 6, 6, 1, 1, 15, 28, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.104497}
{'[6, 0, 3, 6, 6, 6, 1, 1, 15, 28, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.104309}
{'[6, 0, 3, 6, 6, 6, 1, 1, 15, 28, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.104299}
{'[6, 0, 3, 6, 6, 6, 1, 1, 15, 28, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.104282}
{'[6, 0, 3, 6, 6, 6, 1, 1, 15, 28, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.10435}
{'[6, 0, 3, 6, 6, 6, 1, 1, 15, 28, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.104892}
{'[6, 0, 3, 6, 6, 6, 1, 1, 15, 28, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.104353}
{'[6, 0, 3, 6, 6, 6, 1, 1, 15, 28, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.104388}
{'[6, 0, 3, 6, 6, 6, 1, 1, 15, 28, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.104338}
{'[6, 0, 3, 6, 6, 6, 1, 1, 15, 28, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.104283}
{'[6, 0, 3, 6, 6, 6, 1, 1, 15, 28, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.10445}
{'[6, 0, 3, 6, 6, 6, 1, 1, 15, 28, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.104346}
{'[6, 0, 3, 6, 6, 6, 1, 1, 15, 28, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.104297}
{'[6, 0, 3, 6, 6, 6, 1, 1, 15, 28, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.104255}
{'[6, 0, 3, 6, 6, 6, 1, 1, 15, 28, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.104409}
{'[6, 0, 3, 6, 6, 6, 1, 1, 15, 28, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.104489}
{'[6, 0, 3, 6, 6, 6, 1, 1, 15, 28, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.104276}

out:
 ["{'[6, 0, 3, 6, 6, 6, 1, 1, 15, 28, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.104457}", "{'[6, 0, 3, 6, 6, 6, 1, 1, 15, 28, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.104399}", "{'[6, 0, 3, 6, 6, 6, 1, 1, 15, 28, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.104302}", "{'[6, 0, 3, 6, 6, 6, 1, 1, 15, 28, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.10444}", "{'[6, 0, 3, 6, 6, 6, 1, 1, 15, 28, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.104393}", "{'[6, 0, 3, 6, 6, 6, 1, 1, 15, 28, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.104323}", "{'[6, 0, 3, 6, 6, 6, 1, 1, 15, 28, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.10433}", "{'[6, 0, 3, 6, 6, 6, 1, 1, 15, 28, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.104412}", "{'[6, 0, 3, 6, 6, 6, 1, 1, 15, 28, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.104475}", "{'[6, 0, 3, 6, 6, 6, 1, 1, 15, 28, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.104367}", "{'[6, 0, 3, 6, 6, 6, 1, 1, 15, 28, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.104291}", "{'[6, 0, 3, 6, 6, 6, 1, 1, 15, 28, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.104302}", "{'[6, 0, 3, 6, 6, 6, 1, 1, 15, 28, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.104373}", "{'[6, 0, 3, 6, 6, 6, 1, 1, 15, 28, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.104497}", "{'[6, 0, 3, 6, 6, 6, 1, 1, 15, 28, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.104309}", "{'[6, 0, 3, 6, 6, 6, 1, 1, 15, 28, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.104299}", "{'[6, 0, 3, 6, 6, 6, 1, 1, 15, 28, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.104282}", "{'[6, 0, 3, 6, 6, 6, 1, 1, 15, 28, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.10435}", "{'[6, 0, 3, 6, 6, 6, 1, 1, 15, 28, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.104892}", "{'[6, 0, 3, 6, 6, 6, 1, 1, 15, 28, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.104353}", "{'[6, 0, 3, 6, 6, 6, 1, 1, 15, 28, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.104388}", "{'[6, 0, 3, 6, 6, 6, 1, 1, 15, 28, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.104338}", "{'[6, 0, 3, 6, 6, 6, 1, 1, 15, 28, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.104283}", "{'[6, 0, 3, 6, 6, 6, 1, 1, 15, 28, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.10445}", "{'[6, 0, 3, 6, 6, 6, 1, 1, 15, 28, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.104346}", "{'[6, 0, 3, 6, 6, 6, 1, 1, 15, 28, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.104297}", "{'[6, 0, 3, 6, 6, 6, 1, 1, 15, 28, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.104255}", "{'[6, 0, 3, 6, 6, 6, 1, 1, 15, 28, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.104409}", "{'[6, 0, 3, 6, 6, 6, 1, 1, 15, 28, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.104489}", "{'[6, 0, 3, 6, 6, 6, 1, 1, 15, 28, 9, 0, 1, 0, 1, 1, 0, 1]' : 0.104276}"]
returning from 'run': {'[6, 0, 3, 6, 6, 6, 1, 1, 15, 28, 9, 0, 1, 0, 1, 1, 0, 1]': ([0.104457, 0.104399, 0.104302, 0.10444, 0.104393, 0.104323, 0.10433, 0.104412, 0.104475, 0.104367, 0.104291, 0.104302, 0.104373, 0.104497, 0.104309, 0.104299, 0.104282, 0.10435, 0.104892, 0.104353, 0.104388, 0.104338, 0.104283, 0.10445, 0.104346, 0.104297, 0.104255, 0.104409, 0.104489, 0.104276], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 3, 6, 6, 6, 1, 1, 15, 28, 9, 0, 1, 0, 1, 1, 0, 1]': ([0.104457, 0.104399, 0.104302, 0.10444, 0.104393, 0.104323, 0.10433, 0.104412, 0.104475, 0.104367, 0.104291, 0.104302, 0.104373, 0.104497, 0.104309, 0.104299, 0.104282, 0.10435, 0.104892, 0.104353, 0.104388, 0.104338, 0.104283, 0.10445, 0.104346, 0.104297, 0.104255, 0.104409, 0.104489, 0.104276], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = iii
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		294
        Multiplications: 	70
        Divisions: 		0
        Logical: 		0
        Reads: 			629
        Writes: 		137
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest29.exe __orio_perftest29.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest29.exe  
Program Test Output: 
{'[5, 4, 5, 3, 3, 0, 1, 1, 8, 0, 4, 27, 0, 0, 0, 1, 0, 0]' : 0.253634}
{'[5, 4, 5, 3, 3, 0, 1, 1, 8, 0, 4, 27, 0, 0, 0, 1, 0, 0]' : 0.231207}
{'[5, 4, 5, 3, 3, 0, 1, 1, 8, 0, 4, 27, 0, 0, 0, 1, 0, 0]' : 0.217887}
{'[5, 4, 5, 3, 3, 0, 1, 1, 8, 0, 4, 27, 0, 0, 0, 1, 0, 0]' : 0.218034}
{'[5, 4, 5, 3, 3, 0, 1, 1, 8, 0, 4, 27, 0, 0, 0, 1, 0, 0]' : 0.217794}
{'[5, 4, 5, 3, 3, 0, 1, 1, 8, 0, 4, 27, 0, 0, 0, 1, 0, 0]' : 0.218068}
{'[5, 4, 5, 3, 3, 0, 1, 1, 8, 0, 4, 27, 0, 0, 0, 1, 0, 0]' : 0.217809}
{'[5, 4, 5, 3, 3, 0, 1, 1, 8, 0, 4, 27, 0, 0, 0, 1, 0, 0]' : 0.217778}
{'[5, 4, 5, 3, 3, 0, 1, 1, 8, 0, 4, 27, 0, 0, 0, 1, 0, 0]' : 0.217994}
{'[5, 4, 5, 3, 3, 0, 1, 1, 8, 0, 4, 27, 0, 0, 0, 1, 0, 0]' : 0.218035}
{'[5, 4, 5, 3, 3, 0, 1, 1, 8, 0, 4, 27, 0, 0, 0, 1, 0, 0]' : 0.218052}
{'[5, 4, 5, 3, 3, 0, 1, 1, 8, 0, 4, 27, 0, 0, 0, 1, 0, 0]' : 0.21775}
{'[5, 4, 5, 3, 3, 0, 1, 1, 8, 0, 4, 27, 0, 0, 0, 1, 0, 0]' : 0.217654}
{'[5, 4, 5, 3, 3, 0, 1, 1, 8, 0, 4, 27, 0, 0, 0, 1, 0, 0]' : 0.217919}
{'[5, 4, 5, 3, 3, 0, 1, 1, 8, 0, 4, 27, 0, 0, 0, 1, 0, 0]' : 0.217394}
{'[5, 4, 5, 3, 3, 0, 1, 1, 8, 0, 4, 27, 0, 0, 0, 1, 0, 0]' : 0.215191}
{'[5, 4, 5, 3, 3, 0, 1, 1, 8, 0, 4, 27, 0, 0, 0, 1, 0, 0]' : 0.217835}
{'[5, 4, 5, 3, 3, 0, 1, 1, 8, 0, 4, 27, 0, 0, 0, 1, 0, 0]' : 0.219439}
{'[5, 4, 5, 3, 3, 0, 1, 1, 8, 0, 4, 27, 0, 0, 0, 1, 0, 0]' : 0.224924}
{'[5, 4, 5, 3, 3, 0, 1, 1, 8, 0, 4, 27, 0, 0, 0, 1, 0, 0]' : 0.224966}
{'[5, 4, 5, 3, 3, 0, 1, 1, 8, 0, 4, 27, 0, 0, 0, 1, 0, 0]' : 0.217894}
{'[5, 4, 5, 3, 3, 0, 1, 1, 8, 0, 4, 27, 0, 0, 0, 1, 0, 0]' : 0.218073}
{'[5, 4, 5, 3, 3, 0, 1, 1, 8, 0, 4, 27, 0, 0, 0, 1, 0, 0]' : 0.217859}
{'[5, 4, 5, 3, 3, 0, 1, 1, 8, 0, 4, 27, 0, 0, 0, 1, 0, 0]' : 0.216978}
{'[5, 4, 5, 3, 3, 0, 1, 1, 8, 0, 4, 27, 0, 0, 0, 1, 0, 0]' : 0.214525}
{'[5, 4, 5, 3, 3, 0, 1, 1, 8, 0, 4, 27, 0, 0, 0, 1, 0, 0]' : 0.218028}
{'[5, 4, 5, 3, 3, 0, 1, 1, 8, 0, 4, 27, 0, 0, 0, 1, 0, 0]' : 0.217962}
{'[5, 4, 5, 3, 3, 0, 1, 1, 8, 0, 4, 27, 0, 0, 0, 1, 0, 0]' : 0.217715}
{'[5, 4, 5, 3, 3, 0, 1, 1, 8, 0, 4, 27, 0, 0, 0, 1, 0, 0]' : 0.217868}
{'[5, 4, 5, 3, 3, 0, 1, 1, 8, 0, 4, 27, 0, 0, 0, 1, 0, 0]' : 0.21838}

out:
 ["{'[5, 4, 5, 3, 3, 0, 1, 1, 8, 0, 4, 27, 0, 0, 0, 1, 0, 0]' : 0.253634}", "{'[5, 4, 5, 3, 3, 0, 1, 1, 8, 0, 4, 27, 0, 0, 0, 1, 0, 0]' : 0.231207}", "{'[5, 4, 5, 3, 3, 0, 1, 1, 8, 0, 4, 27, 0, 0, 0, 1, 0, 0]' : 0.217887}", "{'[5, 4, 5, 3, 3, 0, 1, 1, 8, 0, 4, 27, 0, 0, 0, 1, 0, 0]' : 0.218034}", "{'[5, 4, 5, 3, 3, 0, 1, 1, 8, 0, 4, 27, 0, 0, 0, 1, 0, 0]' : 0.217794}", "{'[5, 4, 5, 3, 3, 0, 1, 1, 8, 0, 4, 27, 0, 0, 0, 1, 0, 0]' : 0.218068}", "{'[5, 4, 5, 3, 3, 0, 1, 1, 8, 0, 4, 27, 0, 0, 0, 1, 0, 0]' : 0.217809}", "{'[5, 4, 5, 3, 3, 0, 1, 1, 8, 0, 4, 27, 0, 0, 0, 1, 0, 0]' : 0.217778}", "{'[5, 4, 5, 3, 3, 0, 1, 1, 8, 0, 4, 27, 0, 0, 0, 1, 0, 0]' : 0.217994}", "{'[5, 4, 5, 3, 3, 0, 1, 1, 8, 0, 4, 27, 0, 0, 0, 1, 0, 0]' : 0.218035}", "{'[5, 4, 5, 3, 3, 0, 1, 1, 8, 0, 4, 27, 0, 0, 0, 1, 0, 0]' : 0.218052}", "{'[5, 4, 5, 3, 3, 0, 1, 1, 8, 0, 4, 27, 0, 0, 0, 1, 0, 0]' : 0.21775}", "{'[5, 4, 5, 3, 3, 0, 1, 1, 8, 0, 4, 27, 0, 0, 0, 1, 0, 0]' : 0.217654}", "{'[5, 4, 5, 3, 3, 0, 1, 1, 8, 0, 4, 27, 0, 0, 0, 1, 0, 0]' : 0.217919}", "{'[5, 4, 5, 3, 3, 0, 1, 1, 8, 0, 4, 27, 0, 0, 0, 1, 0, 0]' : 0.217394}", "{'[5, 4, 5, 3, 3, 0, 1, 1, 8, 0, 4, 27, 0, 0, 0, 1, 0, 0]' : 0.215191}", "{'[5, 4, 5, 3, 3, 0, 1, 1, 8, 0, 4, 27, 0, 0, 0, 1, 0, 0]' : 0.217835}", "{'[5, 4, 5, 3, 3, 0, 1, 1, 8, 0, 4, 27, 0, 0, 0, 1, 0, 0]' : 0.219439}", "{'[5, 4, 5, 3, 3, 0, 1, 1, 8, 0, 4, 27, 0, 0, 0, 1, 0, 0]' : 0.224924}", "{'[5, 4, 5, 3, 3, 0, 1, 1, 8, 0, 4, 27, 0, 0, 0, 1, 0, 0]' : 0.224966}", "{'[5, 4, 5, 3, 3, 0, 1, 1, 8, 0, 4, 27, 0, 0, 0, 1, 0, 0]' : 0.217894}", "{'[5, 4, 5, 3, 3, 0, 1, 1, 8, 0, 4, 27, 0, 0, 0, 1, 0, 0]' : 0.218073}", "{'[5, 4, 5, 3, 3, 0, 1, 1, 8, 0, 4, 27, 0, 0, 0, 1, 0, 0]' : 0.217859}", "{'[5, 4, 5, 3, 3, 0, 1, 1, 8, 0, 4, 27, 0, 0, 0, 1, 0, 0]' : 0.216978}", "{'[5, 4, 5, 3, 3, 0, 1, 1, 8, 0, 4, 27, 0, 0, 0, 1, 0, 0]' : 0.214525}", "{'[5, 4, 5, 3, 3, 0, 1, 1, 8, 0, 4, 27, 0, 0, 0, 1, 0, 0]' : 0.218028}", "{'[5, 4, 5, 3, 3, 0, 1, 1, 8, 0, 4, 27, 0, 0, 0, 1, 0, 0]' : 0.217962}", "{'[5, 4, 5, 3, 3, 0, 1, 1, 8, 0, 4, 27, 0, 0, 0, 1, 0, 0]' : 0.217715}", "{'[5, 4, 5, 3, 3, 0, 1, 1, 8, 0, 4, 27, 0, 0, 0, 1, 0, 0]' : 0.217868}", "{'[5, 4, 5, 3, 3, 0, 1, 1, 8, 0, 4, 27, 0, 0, 0, 1, 0, 0]' : 0.21838}"]
returning from 'run': {'[5, 4, 5, 3, 3, 0, 1, 1, 8, 0, 4, 27, 0, 0, 0, 1, 0, 0]': ([0.253634, 0.231207, 0.217887, 0.218034, 0.217794, 0.218068, 0.217809, 0.217778, 0.217994, 0.218035, 0.218052, 0.21775, 0.217654, 0.217919, 0.217394, 0.215191, 0.217835, 0.219439, 0.224924, 0.224966, 0.217894, 0.218073, 0.217859, 0.216978, 0.214525, 0.218028, 0.217962, 0.217715, 0.217868, 0.21838], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 4, 5, 3, 3, 0, 1, 1, 8, 0, 4, 27, 0, 0, 0, 1, 0, 0]': ([0.253634, 0.231207, 0.217887, 0.218034, 0.217794, 0.218068, 0.217809, 0.217778, 0.217994, 0.218035, 0.218052, 0.21775, 0.217654, 0.217919, 0.217394, 0.215191, 0.217835, 0.219439, 0.224924, 0.224966, 0.217894, 0.218073, 0.217859, 0.216978, 0.214525, 0.218028, 0.217962, 0.217715, 0.217868, 0.21838], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	56
        Max loop nest depth: 	5
        Additions: 		6191
        Multiplications: 	1386
        Divisions: 		0
        Logical: 		0
        Reads: 			8922
        Writes: 		874
        Comparisons:		56
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest30.exe __orio_perftest30.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest30.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest30.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest30.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest30.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	23
        Max loop nest depth: 	5
        Additions: 		1193
        Multiplications: 	288
        Divisions: 		0
        Logical: 		0
        Reads: 			1905
        Writes: 		227
        Comparisons:		23
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest31.exe __orio_perftest31.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest31.exe  
Program Test Output: 
{'[0, 4, 0, 6, 6, 3, 1, 1, 27, 0, 3, 6, 1, 1, 0, 0, 0, 0]' : 0.127738}
{'[0, 4, 0, 6, 6, 3, 1, 1, 27, 0, 3, 6, 1, 1, 0, 0, 0, 0]' : 0.127623}
{'[0, 4, 0, 6, 6, 3, 1, 1, 27, 0, 3, 6, 1, 1, 0, 0, 0, 0]' : 0.127436}
{'[0, 4, 0, 6, 6, 3, 1, 1, 27, 0, 3, 6, 1, 1, 0, 0, 0, 0]' : 0.114618}
{'[0, 4, 0, 6, 6, 3, 1, 1, 27, 0, 3, 6, 1, 1, 0, 0, 0, 0]' : 0.108072}
{'[0, 4, 0, 6, 6, 3, 1, 1, 27, 0, 3, 6, 1, 1, 0, 0, 0, 0]' : 0.108072}
{'[0, 4, 0, 6, 6, 3, 1, 1, 27, 0, 3, 6, 1, 1, 0, 0, 0, 0]' : 0.108153}
{'[0, 4, 0, 6, 6, 3, 1, 1, 27, 0, 3, 6, 1, 1, 0, 0, 0, 0]' : 0.108488}
{'[0, 4, 0, 6, 6, 3, 1, 1, 27, 0, 3, 6, 1, 1, 0, 0, 0, 0]' : 0.107618}
{'[0, 4, 0, 6, 6, 3, 1, 1, 27, 0, 3, 6, 1, 1, 0, 0, 0, 0]' : 0.106727}
{'[0, 4, 0, 6, 6, 3, 1, 1, 27, 0, 3, 6, 1, 1, 0, 0, 0, 0]' : 0.10641}
{'[0, 4, 0, 6, 6, 3, 1, 1, 27, 0, 3, 6, 1, 1, 0, 0, 0, 0]' : 0.106568}
{'[0, 4, 0, 6, 6, 3, 1, 1, 27, 0, 3, 6, 1, 1, 0, 0, 0, 0]' : 0.106719}
{'[0, 4, 0, 6, 6, 3, 1, 1, 27, 0, 3, 6, 1, 1, 0, 0, 0, 0]' : 0.106453}
{'[0, 4, 0, 6, 6, 3, 1, 1, 27, 0, 3, 6, 1, 1, 0, 0, 0, 0]' : 0.106363}
{'[0, 4, 0, 6, 6, 3, 1, 1, 27, 0, 3, 6, 1, 1, 0, 0, 0, 0]' : 0.106586}
{'[0, 4, 0, 6, 6, 3, 1, 1, 27, 0, 3, 6, 1, 1, 0, 0, 0, 0]' : 0.106495}
{'[0, 4, 0, 6, 6, 3, 1, 1, 27, 0, 3, 6, 1, 1, 0, 0, 0, 0]' : 0.106433}
{'[0, 4, 0, 6, 6, 3, 1, 1, 27, 0, 3, 6, 1, 1, 0, 0, 0, 0]' : 0.106533}
{'[0, 4, 0, 6, 6, 3, 1, 1, 27, 0, 3, 6, 1, 1, 0, 0, 0, 0]' : 0.106525}
{'[0, 4, 0, 6, 6, 3, 1, 1, 27, 0, 3, 6, 1, 1, 0, 0, 0, 0]' : 0.106529}
{'[0, 4, 0, 6, 6, 3, 1, 1, 27, 0, 3, 6, 1, 1, 0, 0, 0, 0]' : 0.107095}
{'[0, 4, 0, 6, 6, 3, 1, 1, 27, 0, 3, 6, 1, 1, 0, 0, 0, 0]' : 0.106357}
{'[0, 4, 0, 6, 6, 3, 1, 1, 27, 0, 3, 6, 1, 1, 0, 0, 0, 0]' : 0.106493}
{'[0, 4, 0, 6, 6, 3, 1, 1, 27, 0, 3, 6, 1, 1, 0, 0, 0, 0]' : 0.106465}
{'[0, 4, 0, 6, 6, 3, 1, 1, 27, 0, 3, 6, 1, 1, 0, 0, 0, 0]' : 0.106499}
{'[0, 4, 0, 6, 6, 3, 1, 1, 27, 0, 3, 6, 1, 1, 0, 0, 0, 0]' : 0.106381}
{'[0, 4, 0, 6, 6, 3, 1, 1, 27, 0, 3, 6, 1, 1, 0, 0, 0, 0]' : 0.106537}
{'[0, 4, 0, 6, 6, 3, 1, 1, 27, 0, 3, 6, 1, 1, 0, 0, 0, 0]' : 0.106493}
{'[0, 4, 0, 6, 6, 3, 1, 1, 27, 0, 3, 6, 1, 1, 0, 0, 0, 0]' : 0.106516}

out:
 ["{'[0, 4, 0, 6, 6, 3, 1, 1, 27, 0, 3, 6, 1, 1, 0, 0, 0, 0]' : 0.127738}", "{'[0, 4, 0, 6, 6, 3, 1, 1, 27, 0, 3, 6, 1, 1, 0, 0, 0, 0]' : 0.127623}", "{'[0, 4, 0, 6, 6, 3, 1, 1, 27, 0, 3, 6, 1, 1, 0, 0, 0, 0]' : 0.127436}", "{'[0, 4, 0, 6, 6, 3, 1, 1, 27, 0, 3, 6, 1, 1, 0, 0, 0, 0]' : 0.114618}", "{'[0, 4, 0, 6, 6, 3, 1, 1, 27, 0, 3, 6, 1, 1, 0, 0, 0, 0]' : 0.108072}", "{'[0, 4, 0, 6, 6, 3, 1, 1, 27, 0, 3, 6, 1, 1, 0, 0, 0, 0]' : 0.108072}", "{'[0, 4, 0, 6, 6, 3, 1, 1, 27, 0, 3, 6, 1, 1, 0, 0, 0, 0]' : 0.108153}", "{'[0, 4, 0, 6, 6, 3, 1, 1, 27, 0, 3, 6, 1, 1, 0, 0, 0, 0]' : 0.108488}", "{'[0, 4, 0, 6, 6, 3, 1, 1, 27, 0, 3, 6, 1, 1, 0, 0, 0, 0]' : 0.107618}", "{'[0, 4, 0, 6, 6, 3, 1, 1, 27, 0, 3, 6, 1, 1, 0, 0, 0, 0]' : 0.106727}", "{'[0, 4, 0, 6, 6, 3, 1, 1, 27, 0, 3, 6, 1, 1, 0, 0, 0, 0]' : 0.10641}", "{'[0, 4, 0, 6, 6, 3, 1, 1, 27, 0, 3, 6, 1, 1, 0, 0, 0, 0]' : 0.106568}", "{'[0, 4, 0, 6, 6, 3, 1, 1, 27, 0, 3, 6, 1, 1, 0, 0, 0, 0]' : 0.106719}", "{'[0, 4, 0, 6, 6, 3, 1, 1, 27, 0, 3, 6, 1, 1, 0, 0, 0, 0]' : 0.106453}", "{'[0, 4, 0, 6, 6, 3, 1, 1, 27, 0, 3, 6, 1, 1, 0, 0, 0, 0]' : 0.106363}", "{'[0, 4, 0, 6, 6, 3, 1, 1, 27, 0, 3, 6, 1, 1, 0, 0, 0, 0]' : 0.106586}", "{'[0, 4, 0, 6, 6, 3, 1, 1, 27, 0, 3, 6, 1, 1, 0, 0, 0, 0]' : 0.106495}", "{'[0, 4, 0, 6, 6, 3, 1, 1, 27, 0, 3, 6, 1, 1, 0, 0, 0, 0]' : 0.106433}", "{'[0, 4, 0, 6, 6, 3, 1, 1, 27, 0, 3, 6, 1, 1, 0, 0, 0, 0]' : 0.106533}", "{'[0, 4, 0, 6, 6, 3, 1, 1, 27, 0, 3, 6, 1, 1, 0, 0, 0, 0]' : 0.106525}", "{'[0, 4, 0, 6, 6, 3, 1, 1, 27, 0, 3, 6, 1, 1, 0, 0, 0, 0]' : 0.106529}", "{'[0, 4, 0, 6, 6, 3, 1, 1, 27, 0, 3, 6, 1, 1, 0, 0, 0, 0]' : 0.107095}", "{'[0, 4, 0, 6, 6, 3, 1, 1, 27, 0, 3, 6, 1, 1, 0, 0, 0, 0]' : 0.106357}", "{'[0, 4, 0, 6, 6, 3, 1, 1, 27, 0, 3, 6, 1, 1, 0, 0, 0, 0]' : 0.106493}", "{'[0, 4, 0, 6, 6, 3, 1, 1, 27, 0, 3, 6, 1, 1, 0, 0, 0, 0]' : 0.106465}", "{'[0, 4, 0, 6, 6, 3, 1, 1, 27, 0, 3, 6, 1, 1, 0, 0, 0, 0]' : 0.106499}", "{'[0, 4, 0, 6, 6, 3, 1, 1, 27, 0, 3, 6, 1, 1, 0, 0, 0, 0]' : 0.106381}", "{'[0, 4, 0, 6, 6, 3, 1, 1, 27, 0, 3, 6, 1, 1, 0, 0, 0, 0]' : 0.106537}", "{'[0, 4, 0, 6, 6, 3, 1, 1, 27, 0, 3, 6, 1, 1, 0, 0, 0, 0]' : 0.106493}", "{'[0, 4, 0, 6, 6, 3, 1, 1, 27, 0, 3, 6, 1, 1, 0, 0, 0, 0]' : 0.106516}"]
returning from 'run': {'[0, 4, 0, 6, 6, 3, 1, 1, 27, 0, 3, 6, 1, 1, 0, 0, 0, 0]': ([0.127738, 0.127623, 0.127436, 0.114618, 0.108072, 0.108072, 0.108153, 0.108488, 0.107618, 0.106727, 0.10641, 0.106568, 0.106719, 0.106453, 0.106363, 0.106586, 0.106495, 0.106433, 0.106533, 0.106525, 0.106529, 0.107095, 0.106357, 0.106493, 0.106465, 0.106499, 0.106381, 0.106537, 0.106493, 0.106516], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 4, 0, 6, 6, 3, 1, 1, 27, 0, 3, 6, 1, 1, 0, 0, 0, 0]': ([0.127738, 0.127623, 0.127436, 0.114618, 0.108072, 0.108072, 0.108153, 0.108488, 0.107618, 0.106727, 0.10641, 0.106568, 0.106719, 0.106453, 0.106363, 0.106586, 0.106495, 0.106433, 0.106533, 0.106525, 0.106529, 0.107095, 0.106357, 0.106493, 0.106465, 0.106499, 0.106381, 0.106537, 0.106493, 0.106516], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	25
        Max loop nest depth: 	6
        Additions: 		1921
        Multiplications: 	870
        Divisions: 		0
        Logical: 		0
        Reads: 			3903
        Writes: 		730
        Comparisons:		25
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest32.exe __orio_perftest32.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest32.exe  
Program Test Output: 
{'[1, 1, 5, 1, 0, 4, 0, 0, 23, 5, 0, 26, 1, 0, 0, 1, 0, 1]' : 0.114207}
{'[1, 1, 5, 1, 0, 4, 0, 0, 23, 5, 0, 26, 1, 0, 0, 1, 0, 1]' : 0.114309}
{'[1, 1, 5, 1, 0, 4, 0, 0, 23, 5, 0, 26, 1, 0, 0, 1, 0, 1]' : 0.113037}
{'[1, 1, 5, 1, 0, 4, 0, 0, 23, 5, 0, 26, 1, 0, 0, 1, 0, 1]' : 0.104521}
{'[1, 1, 5, 1, 0, 4, 0, 0, 23, 5, 0, 26, 1, 0, 0, 1, 0, 1]' : 0.104283}
{'[1, 1, 5, 1, 0, 4, 0, 0, 23, 5, 0, 26, 1, 0, 0, 1, 0, 1]' : 0.10508}
{'[1, 1, 5, 1, 0, 4, 0, 0, 23, 5, 0, 26, 1, 0, 0, 1, 0, 1]' : 0.10548}
{'[1, 1, 5, 1, 0, 4, 0, 0, 23, 5, 0, 26, 1, 0, 0, 1, 0, 1]' : 0.102967}
{'[1, 1, 5, 1, 0, 4, 0, 0, 23, 5, 0, 26, 1, 0, 0, 1, 0, 1]' : 0.105242}
{'[1, 1, 5, 1, 0, 4, 0, 0, 23, 5, 0, 26, 1, 0, 0, 1, 0, 1]' : 0.105158}
{'[1, 1, 5, 1, 0, 4, 0, 0, 23, 5, 0, 26, 1, 0, 0, 1, 0, 1]' : 0.10309}
{'[1, 1, 5, 1, 0, 4, 0, 0, 23, 5, 0, 26, 1, 0, 0, 1, 0, 1]' : 0.102999}
{'[1, 1, 5, 1, 0, 4, 0, 0, 23, 5, 0, 26, 1, 0, 0, 1, 0, 1]' : 0.103318}
{'[1, 1, 5, 1, 0, 4, 0, 0, 23, 5, 0, 26, 1, 0, 0, 1, 0, 1]' : 0.103057}
{'[1, 1, 5, 1, 0, 4, 0, 0, 23, 5, 0, 26, 1, 0, 0, 1, 0, 1]' : 0.103023}
{'[1, 1, 5, 1, 0, 4, 0, 0, 23, 5, 0, 26, 1, 0, 0, 1, 0, 1]' : 0.103136}
{'[1, 1, 5, 1, 0, 4, 0, 0, 23, 5, 0, 26, 1, 0, 0, 1, 0, 1]' : 0.102954}
{'[1, 1, 5, 1, 0, 4, 0, 0, 23, 5, 0, 26, 1, 0, 0, 1, 0, 1]' : 0.103787}
{'[1, 1, 5, 1, 0, 4, 0, 0, 23, 5, 0, 26, 1, 0, 0, 1, 0, 1]' : 0.10531}
{'[1, 1, 5, 1, 0, 4, 0, 0, 23, 5, 0, 26, 1, 0, 0, 1, 0, 1]' : 0.10536}
{'[1, 1, 5, 1, 0, 4, 0, 0, 23, 5, 0, 26, 1, 0, 0, 1, 0, 1]' : 0.105414}
{'[1, 1, 5, 1, 0, 4, 0, 0, 23, 5, 0, 26, 1, 0, 0, 1, 0, 1]' : 0.105369}
{'[1, 1, 5, 1, 0, 4, 0, 0, 23, 5, 0, 26, 1, 0, 0, 1, 0, 1]' : 0.105578}
{'[1, 1, 5, 1, 0, 4, 0, 0, 23, 5, 0, 26, 1, 0, 0, 1, 0, 1]' : 0.105279}
{'[1, 1, 5, 1, 0, 4, 0, 0, 23, 5, 0, 26, 1, 0, 0, 1, 0, 1]' : 0.105353}
{'[1, 1, 5, 1, 0, 4, 0, 0, 23, 5, 0, 26, 1, 0, 0, 1, 0, 1]' : 0.105373}
{'[1, 1, 5, 1, 0, 4, 0, 0, 23, 5, 0, 26, 1, 0, 0, 1, 0, 1]' : 0.10526}
{'[1, 1, 5, 1, 0, 4, 0, 0, 23, 5, 0, 26, 1, 0, 0, 1, 0, 1]' : 0.105434}
{'[1, 1, 5, 1, 0, 4, 0, 0, 23, 5, 0, 26, 1, 0, 0, 1, 0, 1]' : 0.105294}
{'[1, 1, 5, 1, 0, 4, 0, 0, 23, 5, 0, 26, 1, 0, 0, 1, 0, 1]' : 0.103984}

out:
 ["{'[1, 1, 5, 1, 0, 4, 0, 0, 23, 5, 0, 26, 1, 0, 0, 1, 0, 1]' : 0.114207}", "{'[1, 1, 5, 1, 0, 4, 0, 0, 23, 5, 0, 26, 1, 0, 0, 1, 0, 1]' : 0.114309}", "{'[1, 1, 5, 1, 0, 4, 0, 0, 23, 5, 0, 26, 1, 0, 0, 1, 0, 1]' : 0.113037}", "{'[1, 1, 5, 1, 0, 4, 0, 0, 23, 5, 0, 26, 1, 0, 0, 1, 0, 1]' : 0.104521}", "{'[1, 1, 5, 1, 0, 4, 0, 0, 23, 5, 0, 26, 1, 0, 0, 1, 0, 1]' : 0.104283}", "{'[1, 1, 5, 1, 0, 4, 0, 0, 23, 5, 0, 26, 1, 0, 0, 1, 0, 1]' : 0.10508}", "{'[1, 1, 5, 1, 0, 4, 0, 0, 23, 5, 0, 26, 1, 0, 0, 1, 0, 1]' : 0.10548}", "{'[1, 1, 5, 1, 0, 4, 0, 0, 23, 5, 0, 26, 1, 0, 0, 1, 0, 1]' : 0.102967}", "{'[1, 1, 5, 1, 0, 4, 0, 0, 23, 5, 0, 26, 1, 0, 0, 1, 0, 1]' : 0.105242}", "{'[1, 1, 5, 1, 0, 4, 0, 0, 23, 5, 0, 26, 1, 0, 0, 1, 0, 1]' : 0.105158}", "{'[1, 1, 5, 1, 0, 4, 0, 0, 23, 5, 0, 26, 1, 0, 0, 1, 0, 1]' : 0.10309}", "{'[1, 1, 5, 1, 0, 4, 0, 0, 23, 5, 0, 26, 1, 0, 0, 1, 0, 1]' : 0.102999}", "{'[1, 1, 5, 1, 0, 4, 0, 0, 23, 5, 0, 26, 1, 0, 0, 1, 0, 1]' : 0.103318}", "{'[1, 1, 5, 1, 0, 4, 0, 0, 23, 5, 0, 26, 1, 0, 0, 1, 0, 1]' : 0.103057}", "{'[1, 1, 5, 1, 0, 4, 0, 0, 23, 5, 0, 26, 1, 0, 0, 1, 0, 1]' : 0.103023}", "{'[1, 1, 5, 1, 0, 4, 0, 0, 23, 5, 0, 26, 1, 0, 0, 1, 0, 1]' : 0.103136}", "{'[1, 1, 5, 1, 0, 4, 0, 0, 23, 5, 0, 26, 1, 0, 0, 1, 0, 1]' : 0.102954}", "{'[1, 1, 5, 1, 0, 4, 0, 0, 23, 5, 0, 26, 1, 0, 0, 1, 0, 1]' : 0.103787}", "{'[1, 1, 5, 1, 0, 4, 0, 0, 23, 5, 0, 26, 1, 0, 0, 1, 0, 1]' : 0.10531}", "{'[1, 1, 5, 1, 0, 4, 0, 0, 23, 5, 0, 26, 1, 0, 0, 1, 0, 1]' : 0.10536}", "{'[1, 1, 5, 1, 0, 4, 0, 0, 23, 5, 0, 26, 1, 0, 0, 1, 0, 1]' : 0.105414}", "{'[1, 1, 5, 1, 0, 4, 0, 0, 23, 5, 0, 26, 1, 0, 0, 1, 0, 1]' : 0.105369}", "{'[1, 1, 5, 1, 0, 4, 0, 0, 23, 5, 0, 26, 1, 0, 0, 1, 0, 1]' : 0.105578}", "{'[1, 1, 5, 1, 0, 4, 0, 0, 23, 5, 0, 26, 1, 0, 0, 1, 0, 1]' : 0.105279}", "{'[1, 1, 5, 1, 0, 4, 0, 0, 23, 5, 0, 26, 1, 0, 0, 1, 0, 1]' : 0.105353}", "{'[1, 1, 5, 1, 0, 4, 0, 0, 23, 5, 0, 26, 1, 0, 0, 1, 0, 1]' : 0.105373}", "{'[1, 1, 5, 1, 0, 4, 0, 0, 23, 5, 0, 26, 1, 0, 0, 1, 0, 1]' : 0.10526}", "{'[1, 1, 5, 1, 0, 4, 0, 0, 23, 5, 0, 26, 1, 0, 0, 1, 0, 1]' : 0.105434}", "{'[1, 1, 5, 1, 0, 4, 0, 0, 23, 5, 0, 26, 1, 0, 0, 1, 0, 1]' : 0.105294}", "{'[1, 1, 5, 1, 0, 4, 0, 0, 23, 5, 0, 26, 1, 0, 0, 1, 0, 1]' : 0.103984}"]
returning from 'run': {'[1, 1, 5, 1, 0, 4, 0, 0, 23, 5, 0, 26, 1, 0, 0, 1, 0, 1]': ([0.114207, 0.114309, 0.113037, 0.104521, 0.104283, 0.10508, 0.10548, 0.102967, 0.105242, 0.105158, 0.10309, 0.102999, 0.103318, 0.103057, 0.103023, 0.103136, 0.102954, 0.103787, 0.10531, 0.10536, 0.105414, 0.105369, 0.105578, 0.105279, 0.105353, 0.105373, 0.10526, 0.105434, 0.105294, 0.103984], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 1, 5, 1, 0, 4, 0, 0, 23, 5, 0, 26, 1, 0, 0, 1, 0, 1]': ([0.114207, 0.114309, 0.113037, 0.104521, 0.104283, 0.10508, 0.10548, 0.102967, 0.105242, 0.105158, 0.10309, 0.102999, 0.103318, 0.103057, 0.103023, 0.103136, 0.102954, 0.103787, 0.10531, 0.10536, 0.105414, 0.105369, 0.105578, 0.105279, 0.105353, 0.105373, 0.10526, 0.105434, 0.105294, 0.103984], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = kkk
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		302
        Multiplications: 	110
        Divisions: 		0
        Logical: 		0
        Reads: 			634
        Writes: 		111
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest33.exe __orio_perftest33.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest33.exe  
Program Test Output: 
{'[3, 3, 3, 0, 3, 1, 0, 1, 0, 0, 9, 10, 0, 2, 0, 1, 0, 0]' : 0.264081}
{'[3, 3, 3, 0, 3, 1, 0, 1, 0, 0, 9, 10, 0, 2, 0, 1, 0, 0]' : 0.228118}
{'[3, 3, 3, 0, 3, 1, 0, 1, 0, 0, 9, 10, 0, 2, 0, 1, 0, 0]' : 0.228687}
{'[3, 3, 3, 0, 3, 1, 0, 1, 0, 0, 9, 10, 0, 2, 0, 1, 0, 0]' : 0.234739}
{'[3, 3, 3, 0, 3, 1, 0, 1, 0, 0, 9, 10, 0, 2, 0, 1, 0, 0]' : 0.235481}
{'[3, 3, 3, 0, 3, 1, 0, 1, 0, 0, 9, 10, 0, 2, 0, 1, 0, 0]' : 0.234856}
{'[3, 3, 3, 0, 3, 1, 0, 1, 0, 0, 9, 10, 0, 2, 0, 1, 0, 0]' : 0.234857}
{'[3, 3, 3, 0, 3, 1, 0, 1, 0, 0, 9, 10, 0, 2, 0, 1, 0, 0]' : 0.234817}
{'[3, 3, 3, 0, 3, 1, 0, 1, 0, 0, 9, 10, 0, 2, 0, 1, 0, 0]' : 0.235011}
{'[3, 3, 3, 0, 3, 1, 0, 1, 0, 0, 9, 10, 0, 2, 0, 1, 0, 0]' : 0.23485}
{'[3, 3, 3, 0, 3, 1, 0, 1, 0, 0, 9, 10, 0, 2, 0, 1, 0, 0]' : 0.229413}
{'[3, 3, 3, 0, 3, 1, 0, 1, 0, 0, 9, 10, 0, 2, 0, 1, 0, 0]' : 0.234917}
{'[3, 3, 3, 0, 3, 1, 0, 1, 0, 0, 9, 10, 0, 2, 0, 1, 0, 0]' : 0.23488}
{'[3, 3, 3, 0, 3, 1, 0, 1, 0, 0, 9, 10, 0, 2, 0, 1, 0, 0]' : 0.234958}
{'[3, 3, 3, 0, 3, 1, 0, 1, 0, 0, 9, 10, 0, 2, 0, 1, 0, 0]' : 0.23488}
{'[3, 3, 3, 0, 3, 1, 0, 1, 0, 0, 9, 10, 0, 2, 0, 1, 0, 0]' : 0.228396}
{'[3, 3, 3, 0, 3, 1, 0, 1, 0, 0, 9, 10, 0, 2, 0, 1, 0, 0]' : 0.226986}
{'[3, 3, 3, 0, 3, 1, 0, 1, 0, 0, 9, 10, 0, 2, 0, 1, 0, 0]' : 0.227041}
{'[3, 3, 3, 0, 3, 1, 0, 1, 0, 0, 9, 10, 0, 2, 0, 1, 0, 0]' : 0.227117}
{'[3, 3, 3, 0, 3, 1, 0, 1, 0, 0, 9, 10, 0, 2, 0, 1, 0, 0]' : 0.226825}
{'[3, 3, 3, 0, 3, 1, 0, 1, 0, 0, 9, 10, 0, 2, 0, 1, 0, 0]' : 0.226649}
{'[3, 3, 3, 0, 3, 1, 0, 1, 0, 0, 9, 10, 0, 2, 0, 1, 0, 0]' : 0.22703}
{'[3, 3, 3, 0, 3, 1, 0, 1, 0, 0, 9, 10, 0, 2, 0, 1, 0, 0]' : 0.226975}
{'[3, 3, 3, 0, 3, 1, 0, 1, 0, 0, 9, 10, 0, 2, 0, 1, 0, 0]' : 0.226916}
{'[3, 3, 3, 0, 3, 1, 0, 1, 0, 0, 9, 10, 0, 2, 0, 1, 0, 0]' : 0.234874}
{'[3, 3, 3, 0, 3, 1, 0, 1, 0, 0, 9, 10, 0, 2, 0, 1, 0, 0]' : 0.235099}
{'[3, 3, 3, 0, 3, 1, 0, 1, 0, 0, 9, 10, 0, 2, 0, 1, 0, 0]' : 0.234842}
{'[3, 3, 3, 0, 3, 1, 0, 1, 0, 0, 9, 10, 0, 2, 0, 1, 0, 0]' : 0.229069}
{'[3, 3, 3, 0, 3, 1, 0, 1, 0, 0, 9, 10, 0, 2, 0, 1, 0, 0]' : 0.225066}
{'[3, 3, 3, 0, 3, 1, 0, 1, 0, 0, 9, 10, 0, 2, 0, 1, 0, 0]' : 0.23484}

out:
 ["{'[3, 3, 3, 0, 3, 1, 0, 1, 0, 0, 9, 10, 0, 2, 0, 1, 0, 0]' : 0.264081}", "{'[3, 3, 3, 0, 3, 1, 0, 1, 0, 0, 9, 10, 0, 2, 0, 1, 0, 0]' : 0.228118}", "{'[3, 3, 3, 0, 3, 1, 0, 1, 0, 0, 9, 10, 0, 2, 0, 1, 0, 0]' : 0.228687}", "{'[3, 3, 3, 0, 3, 1, 0, 1, 0, 0, 9, 10, 0, 2, 0, 1, 0, 0]' : 0.234739}", "{'[3, 3, 3, 0, 3, 1, 0, 1, 0, 0, 9, 10, 0, 2, 0, 1, 0, 0]' : 0.235481}", "{'[3, 3, 3, 0, 3, 1, 0, 1, 0, 0, 9, 10, 0, 2, 0, 1, 0, 0]' : 0.234856}", "{'[3, 3, 3, 0, 3, 1, 0, 1, 0, 0, 9, 10, 0, 2, 0, 1, 0, 0]' : 0.234857}", "{'[3, 3, 3, 0, 3, 1, 0, 1, 0, 0, 9, 10, 0, 2, 0, 1, 0, 0]' : 0.234817}", "{'[3, 3, 3, 0, 3, 1, 0, 1, 0, 0, 9, 10, 0, 2, 0, 1, 0, 0]' : 0.235011}", "{'[3, 3, 3, 0, 3, 1, 0, 1, 0, 0, 9, 10, 0, 2, 0, 1, 0, 0]' : 0.23485}", "{'[3, 3, 3, 0, 3, 1, 0, 1, 0, 0, 9, 10, 0, 2, 0, 1, 0, 0]' : 0.229413}", "{'[3, 3, 3, 0, 3, 1, 0, 1, 0, 0, 9, 10, 0, 2, 0, 1, 0, 0]' : 0.234917}", "{'[3, 3, 3, 0, 3, 1, 0, 1, 0, 0, 9, 10, 0, 2, 0, 1, 0, 0]' : 0.23488}", "{'[3, 3, 3, 0, 3, 1, 0, 1, 0, 0, 9, 10, 0, 2, 0, 1, 0, 0]' : 0.234958}", "{'[3, 3, 3, 0, 3, 1, 0, 1, 0, 0, 9, 10, 0, 2, 0, 1, 0, 0]' : 0.23488}", "{'[3, 3, 3, 0, 3, 1, 0, 1, 0, 0, 9, 10, 0, 2, 0, 1, 0, 0]' : 0.228396}", "{'[3, 3, 3, 0, 3, 1, 0, 1, 0, 0, 9, 10, 0, 2, 0, 1, 0, 0]' : 0.226986}", "{'[3, 3, 3, 0, 3, 1, 0, 1, 0, 0, 9, 10, 0, 2, 0, 1, 0, 0]' : 0.227041}", "{'[3, 3, 3, 0, 3, 1, 0, 1, 0, 0, 9, 10, 0, 2, 0, 1, 0, 0]' : 0.227117}", "{'[3, 3, 3, 0, 3, 1, 0, 1, 0, 0, 9, 10, 0, 2, 0, 1, 0, 0]' : 0.226825}", "{'[3, 3, 3, 0, 3, 1, 0, 1, 0, 0, 9, 10, 0, 2, 0, 1, 0, 0]' : 0.226649}", "{'[3, 3, 3, 0, 3, 1, 0, 1, 0, 0, 9, 10, 0, 2, 0, 1, 0, 0]' : 0.22703}", "{'[3, 3, 3, 0, 3, 1, 0, 1, 0, 0, 9, 10, 0, 2, 0, 1, 0, 0]' : 0.226975}", "{'[3, 3, 3, 0, 3, 1, 0, 1, 0, 0, 9, 10, 0, 2, 0, 1, 0, 0]' : 0.226916}", "{'[3, 3, 3, 0, 3, 1, 0, 1, 0, 0, 9, 10, 0, 2, 0, 1, 0, 0]' : 0.234874}", "{'[3, 3, 3, 0, 3, 1, 0, 1, 0, 0, 9, 10, 0, 2, 0, 1, 0, 0]' : 0.235099}", "{'[3, 3, 3, 0, 3, 1, 0, 1, 0, 0, 9, 10, 0, 2, 0, 1, 0, 0]' : 0.234842}", "{'[3, 3, 3, 0, 3, 1, 0, 1, 0, 0, 9, 10, 0, 2, 0, 1, 0, 0]' : 0.229069}", "{'[3, 3, 3, 0, 3, 1, 0, 1, 0, 0, 9, 10, 0, 2, 0, 1, 0, 0]' : 0.225066}", "{'[3, 3, 3, 0, 3, 1, 0, 1, 0, 0, 9, 10, 0, 2, 0, 1, 0, 0]' : 0.23484}"]
returning from 'run': {'[3, 3, 3, 0, 3, 1, 0, 1, 0, 0, 9, 10, 0, 2, 0, 1, 0, 0]': ([0.264081, 0.228118, 0.228687, 0.234739, 0.235481, 0.234856, 0.234857, 0.234817, 0.235011, 0.23485, 0.229413, 0.234917, 0.23488, 0.234958, 0.23488, 0.228396, 0.226986, 0.227041, 0.227117, 0.226825, 0.226649, 0.22703, 0.226975, 0.226916, 0.234874, 0.235099, 0.234842, 0.229069, 0.225066, 0.23484], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 3, 3, 0, 3, 1, 0, 1, 0, 0, 9, 10, 0, 2, 0, 1, 0, 0]': ([0.264081, 0.228118, 0.228687, 0.234739, 0.235481, 0.234856, 0.234857, 0.234817, 0.235011, 0.23485, 0.229413, 0.234917, 0.23488, 0.234958, 0.23488, 0.228396, 0.226986, 0.227041, 0.227117, 0.226825, 0.226649, 0.22703, 0.226975, 0.226916, 0.234874, 0.235099, 0.234842, 0.229069, 0.225066, 0.23484], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	44
        Max loop nest depth: 	5
        Additions: 		1142
        Multiplications: 	476
        Divisions: 		0
        Logical: 		0
        Reads: 			2384
        Writes: 		445
        Comparisons:		44
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest34.exe __orio_perftest34.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest34.exe  
Program Test Output: 
{'[4, 1, 0, 0, 6, 6, 0, 1, 0, 12, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.130024}
{'[4, 1, 0, 0, 6, 6, 0, 1, 0, 12, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.133072}
{'[4, 1, 0, 0, 6, 6, 0, 1, 0, 12, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.133815}
{'[4, 1, 0, 0, 6, 6, 0, 1, 0, 12, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.132317}
{'[4, 1, 0, 0, 6, 6, 0, 1, 0, 12, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.133565}
{'[4, 1, 0, 0, 6, 6, 0, 1, 0, 12, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.134274}
{'[4, 1, 0, 0, 6, 6, 0, 1, 0, 12, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.130379}
{'[4, 1, 0, 0, 6, 6, 0, 1, 0, 12, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.130061}
{'[4, 1, 0, 0, 6, 6, 0, 1, 0, 12, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.130665}
{'[4, 1, 0, 0, 6, 6, 0, 1, 0, 12, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.133585}
{'[4, 1, 0, 0, 6, 6, 0, 1, 0, 12, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.132937}
{'[4, 1, 0, 0, 6, 6, 0, 1, 0, 12, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.132118}
{'[4, 1, 0, 0, 6, 6, 0, 1, 0, 12, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.134709}
{'[4, 1, 0, 0, 6, 6, 0, 1, 0, 12, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.132543}
{'[4, 1, 0, 0, 6, 6, 0, 1, 0, 12, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.12987}
{'[4, 1, 0, 0, 6, 6, 0, 1, 0, 12, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.129723}
{'[4, 1, 0, 0, 6, 6, 0, 1, 0, 12, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.132211}
{'[4, 1, 0, 0, 6, 6, 0, 1, 0, 12, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.133566}
{'[4, 1, 0, 0, 6, 6, 0, 1, 0, 12, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.131113}
{'[4, 1, 0, 0, 6, 6, 0, 1, 0, 12, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.132191}
{'[4, 1, 0, 0, 6, 6, 0, 1, 0, 12, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.134749}
{'[4, 1, 0, 0, 6, 6, 0, 1, 0, 12, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.131025}
{'[4, 1, 0, 0, 6, 6, 0, 1, 0, 12, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.129895}
{'[4, 1, 0, 0, 6, 6, 0, 1, 0, 12, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.129968}
{'[4, 1, 0, 0, 6, 6, 0, 1, 0, 12, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.133715}
{'[4, 1, 0, 0, 6, 6, 0, 1, 0, 12, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.130454}
{'[4, 1, 0, 0, 6, 6, 0, 1, 0, 12, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.130263}
{'[4, 1, 0, 0, 6, 6, 0, 1, 0, 12, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.133161}
{'[4, 1, 0, 0, 6, 6, 0, 1, 0, 12, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.130878}
{'[4, 1, 0, 0, 6, 6, 0, 1, 0, 12, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.129878}

out:
 ["{'[4, 1, 0, 0, 6, 6, 0, 1, 0, 12, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.130024}", "{'[4, 1, 0, 0, 6, 6, 0, 1, 0, 12, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.133072}", "{'[4, 1, 0, 0, 6, 6, 0, 1, 0, 12, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.133815}", "{'[4, 1, 0, 0, 6, 6, 0, 1, 0, 12, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.132317}", "{'[4, 1, 0, 0, 6, 6, 0, 1, 0, 12, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.133565}", "{'[4, 1, 0, 0, 6, 6, 0, 1, 0, 12, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.134274}", "{'[4, 1, 0, 0, 6, 6, 0, 1, 0, 12, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.130379}", "{'[4, 1, 0, 0, 6, 6, 0, 1, 0, 12, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.130061}", "{'[4, 1, 0, 0, 6, 6, 0, 1, 0, 12, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.130665}", "{'[4, 1, 0, 0, 6, 6, 0, 1, 0, 12, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.133585}", "{'[4, 1, 0, 0, 6, 6, 0, 1, 0, 12, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.132937}", "{'[4, 1, 0, 0, 6, 6, 0, 1, 0, 12, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.132118}", "{'[4, 1, 0, 0, 6, 6, 0, 1, 0, 12, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.134709}", "{'[4, 1, 0, 0, 6, 6, 0, 1, 0, 12, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.132543}", "{'[4, 1, 0, 0, 6, 6, 0, 1, 0, 12, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.12987}", "{'[4, 1, 0, 0, 6, 6, 0, 1, 0, 12, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.129723}", "{'[4, 1, 0, 0, 6, 6, 0, 1, 0, 12, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.132211}", "{'[4, 1, 0, 0, 6, 6, 0, 1, 0, 12, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.133566}", "{'[4, 1, 0, 0, 6, 6, 0, 1, 0, 12, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.131113}", "{'[4, 1, 0, 0, 6, 6, 0, 1, 0, 12, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.132191}", "{'[4, 1, 0, 0, 6, 6, 0, 1, 0, 12, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.134749}", "{'[4, 1, 0, 0, 6, 6, 0, 1, 0, 12, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.131025}", "{'[4, 1, 0, 0, 6, 6, 0, 1, 0, 12, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.129895}", "{'[4, 1, 0, 0, 6, 6, 0, 1, 0, 12, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.129968}", "{'[4, 1, 0, 0, 6, 6, 0, 1, 0, 12, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.133715}", "{'[4, 1, 0, 0, 6, 6, 0, 1, 0, 12, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.130454}", "{'[4, 1, 0, 0, 6, 6, 0, 1, 0, 12, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.130263}", "{'[4, 1, 0, 0, 6, 6, 0, 1, 0, 12, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.133161}", "{'[4, 1, 0, 0, 6, 6, 0, 1, 0, 12, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.130878}", "{'[4, 1, 0, 0, 6, 6, 0, 1, 0, 12, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.129878}"]
returning from 'run': {'[4, 1, 0, 0, 6, 6, 0, 1, 0, 12, 0, 0, 0, 1, 1, 1, 1, 1]': ([0.130024, 0.133072, 0.133815, 0.132317, 0.133565, 0.134274, 0.130379, 0.130061, 0.130665, 0.133585, 0.132937, 0.132118, 0.134709, 0.132543, 0.12987, 0.129723, 0.132211, 0.133566, 0.131113, 0.132191, 0.134749, 0.131025, 0.129895, 0.129968, 0.133715, 0.130454, 0.130263, 0.133161, 0.130878, 0.129878], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 1, 0, 0, 6, 6, 0, 1, 0, 12, 0, 0, 0, 1, 1, 1, 1, 1]': ([0.130024, 0.133072, 0.133815, 0.132317, 0.133565, 0.134274, 0.130379, 0.130061, 0.130665, 0.133585, 0.132937, 0.132118, 0.134709, 0.132543, 0.12987, 0.129723, 0.132211, 0.133566, 0.131113, 0.132191, 0.134749, 0.131025, 0.129895, 0.129968, 0.133715, 0.130454, 0.130263, 0.133161, 0.130878, 0.129878], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		528
        Multiplications: 	180
        Divisions: 		0
        Logical: 		0
        Reads: 			1116
        Writes: 		161
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest35.exe __orio_perftest35.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest35.exe  
Program Test Output: 
{'[1, 6, 1, 0, 6, 6, 1, 0, 29, 0, 27, 27, 0, 0, 2, 0, 1, 1]' : 0.257511}
{'[1, 6, 1, 0, 6, 6, 1, 0, 29, 0, 27, 27, 0, 0, 2, 0, 1, 1]' : 0.250701}
{'[1, 6, 1, 0, 6, 6, 1, 0, 29, 0, 27, 27, 0, 0, 2, 0, 1, 1]' : 0.251393}
{'[1, 6, 1, 0, 6, 6, 1, 0, 29, 0, 27, 27, 0, 0, 2, 0, 1, 1]' : 0.254168}
{'[1, 6, 1, 0, 6, 6, 1, 0, 29, 0, 27, 27, 0, 0, 2, 0, 1, 1]' : 0.248006}
{'[1, 6, 1, 0, 6, 6, 1, 0, 29, 0, 27, 27, 0, 0, 2, 0, 1, 1]' : 0.245966}
{'[1, 6, 1, 0, 6, 6, 1, 0, 29, 0, 27, 27, 0, 0, 2, 0, 1, 1]' : 0.251305}
{'[1, 6, 1, 0, 6, 6, 1, 0, 29, 0, 27, 27, 0, 0, 2, 0, 1, 1]' : 0.254006}
{'[1, 6, 1, 0, 6, 6, 1, 0, 29, 0, 27, 27, 0, 0, 2, 0, 1, 1]' : 0.254019}
{'[1, 6, 1, 0, 6, 6, 1, 0, 29, 0, 27, 27, 0, 0, 2, 0, 1, 1]' : 0.253995}
{'[1, 6, 1, 0, 6, 6, 1, 0, 29, 0, 27, 27, 0, 0, 2, 0, 1, 1]' : 0.254088}
{'[1, 6, 1, 0, 6, 6, 1, 0, 29, 0, 27, 27, 0, 0, 2, 0, 1, 1]' : 0.254273}
{'[1, 6, 1, 0, 6, 6, 1, 0, 29, 0, 27, 27, 0, 0, 2, 0, 1, 1]' : 0.247468}
{'[1, 6, 1, 0, 6, 6, 1, 0, 29, 0, 27, 27, 0, 0, 2, 0, 1, 1]' : 0.242797}
{'[1, 6, 1, 0, 6, 6, 1, 0, 29, 0, 27, 27, 0, 0, 2, 0, 1, 1]' : 0.243615}
{'[1, 6, 1, 0, 6, 6, 1, 0, 29, 0, 27, 27, 0, 0, 2, 0, 1, 1]' : 0.245453}
{'[1, 6, 1, 0, 6, 6, 1, 0, 29, 0, 27, 27, 0, 0, 2, 0, 1, 1]' : 0.251801}
{'[1, 6, 1, 0, 6, 6, 1, 0, 29, 0, 27, 27, 0, 0, 2, 0, 1, 1]' : 0.254103}
{'[1, 6, 1, 0, 6, 6, 1, 0, 29, 0, 27, 27, 0, 0, 2, 0, 1, 1]' : 0.254058}
{'[1, 6, 1, 0, 6, 6, 1, 0, 29, 0, 27, 27, 0, 0, 2, 0, 1, 1]' : 0.254243}
{'[1, 6, 1, 0, 6, 6, 1, 0, 29, 0, 27, 27, 0, 0, 2, 0, 1, 1]' : 0.254126}
{'[1, 6, 1, 0, 6, 6, 1, 0, 29, 0, 27, 27, 0, 0, 2, 0, 1, 1]' : 0.254081}
{'[1, 6, 1, 0, 6, 6, 1, 0, 29, 0, 27, 27, 0, 0, 2, 0, 1, 1]' : 0.2541}
{'[1, 6, 1, 0, 6, 6, 1, 0, 29, 0, 27, 27, 0, 0, 2, 0, 1, 1]' : 0.254065}
{'[1, 6, 1, 0, 6, 6, 1, 0, 29, 0, 27, 27, 0, 0, 2, 0, 1, 1]' : 0.25408}
{'[1, 6, 1, 0, 6, 6, 1, 0, 29, 0, 27, 27, 0, 0, 2, 0, 1, 1]' : 0.25408}
{'[1, 6, 1, 0, 6, 6, 1, 0, 29, 0, 27, 27, 0, 0, 2, 0, 1, 1]' : 0.254063}
{'[1, 6, 1, 0, 6, 6, 1, 0, 29, 0, 27, 27, 0, 0, 2, 0, 1, 1]' : 0.254258}
{'[1, 6, 1, 0, 6, 6, 1, 0, 29, 0, 27, 27, 0, 0, 2, 0, 1, 1]' : 0.254081}
{'[1, 6, 1, 0, 6, 6, 1, 0, 29, 0, 27, 27, 0, 0, 2, 0, 1, 1]' : 0.254093}

out:
 ["{'[1, 6, 1, 0, 6, 6, 1, 0, 29, 0, 27, 27, 0, 0, 2, 0, 1, 1]' : 0.257511}", "{'[1, 6, 1, 0, 6, 6, 1, 0, 29, 0, 27, 27, 0, 0, 2, 0, 1, 1]' : 0.250701}", "{'[1, 6, 1, 0, 6, 6, 1, 0, 29, 0, 27, 27, 0, 0, 2, 0, 1, 1]' : 0.251393}", "{'[1, 6, 1, 0, 6, 6, 1, 0, 29, 0, 27, 27, 0, 0, 2, 0, 1, 1]' : 0.254168}", "{'[1, 6, 1, 0, 6, 6, 1, 0, 29, 0, 27, 27, 0, 0, 2, 0, 1, 1]' : 0.248006}", "{'[1, 6, 1, 0, 6, 6, 1, 0, 29, 0, 27, 27, 0, 0, 2, 0, 1, 1]' : 0.245966}", "{'[1, 6, 1, 0, 6, 6, 1, 0, 29, 0, 27, 27, 0, 0, 2, 0, 1, 1]' : 0.251305}", "{'[1, 6, 1, 0, 6, 6, 1, 0, 29, 0, 27, 27, 0, 0, 2, 0, 1, 1]' : 0.254006}", "{'[1, 6, 1, 0, 6, 6, 1, 0, 29, 0, 27, 27, 0, 0, 2, 0, 1, 1]' : 0.254019}", "{'[1, 6, 1, 0, 6, 6, 1, 0, 29, 0, 27, 27, 0, 0, 2, 0, 1, 1]' : 0.253995}", "{'[1, 6, 1, 0, 6, 6, 1, 0, 29, 0, 27, 27, 0, 0, 2, 0, 1, 1]' : 0.254088}", "{'[1, 6, 1, 0, 6, 6, 1, 0, 29, 0, 27, 27, 0, 0, 2, 0, 1, 1]' : 0.254273}", "{'[1, 6, 1, 0, 6, 6, 1, 0, 29, 0, 27, 27, 0, 0, 2, 0, 1, 1]' : 0.247468}", "{'[1, 6, 1, 0, 6, 6, 1, 0, 29, 0, 27, 27, 0, 0, 2, 0, 1, 1]' : 0.242797}", "{'[1, 6, 1, 0, 6, 6, 1, 0, 29, 0, 27, 27, 0, 0, 2, 0, 1, 1]' : 0.243615}", "{'[1, 6, 1, 0, 6, 6, 1, 0, 29, 0, 27, 27, 0, 0, 2, 0, 1, 1]' : 0.245453}", "{'[1, 6, 1, 0, 6, 6, 1, 0, 29, 0, 27, 27, 0, 0, 2, 0, 1, 1]' : 0.251801}", "{'[1, 6, 1, 0, 6, 6, 1, 0, 29, 0, 27, 27, 0, 0, 2, 0, 1, 1]' : 0.254103}", "{'[1, 6, 1, 0, 6, 6, 1, 0, 29, 0, 27, 27, 0, 0, 2, 0, 1, 1]' : 0.254058}", "{'[1, 6, 1, 0, 6, 6, 1, 0, 29, 0, 27, 27, 0, 0, 2, 0, 1, 1]' : 0.254243}", "{'[1, 6, 1, 0, 6, 6, 1, 0, 29, 0, 27, 27, 0, 0, 2, 0, 1, 1]' : 0.254126}", "{'[1, 6, 1, 0, 6, 6, 1, 0, 29, 0, 27, 27, 0, 0, 2, 0, 1, 1]' : 0.254081}", "{'[1, 6, 1, 0, 6, 6, 1, 0, 29, 0, 27, 27, 0, 0, 2, 0, 1, 1]' : 0.2541}", "{'[1, 6, 1, 0, 6, 6, 1, 0, 29, 0, 27, 27, 0, 0, 2, 0, 1, 1]' : 0.254065}", "{'[1, 6, 1, 0, 6, 6, 1, 0, 29, 0, 27, 27, 0, 0, 2, 0, 1, 1]' : 0.25408}", "{'[1, 6, 1, 0, 6, 6, 1, 0, 29, 0, 27, 27, 0, 0, 2, 0, 1, 1]' : 0.25408}", "{'[1, 6, 1, 0, 6, 6, 1, 0, 29, 0, 27, 27, 0, 0, 2, 0, 1, 1]' : 0.254063}", "{'[1, 6, 1, 0, 6, 6, 1, 0, 29, 0, 27, 27, 0, 0, 2, 0, 1, 1]' : 0.254258}", "{'[1, 6, 1, 0, 6, 6, 1, 0, 29, 0, 27, 27, 0, 0, 2, 0, 1, 1]' : 0.254081}", "{'[1, 6, 1, 0, 6, 6, 1, 0, 29, 0, 27, 27, 0, 0, 2, 0, 1, 1]' : 0.254093}"]
returning from 'run': {'[1, 6, 1, 0, 6, 6, 1, 0, 29, 0, 27, 27, 0, 0, 2, 0, 1, 1]': ([0.257511, 0.250701, 0.251393, 0.254168, 0.248006, 0.245966, 0.251305, 0.254006, 0.254019, 0.253995, 0.254088, 0.254273, 0.247468, 0.242797, 0.243615, 0.245453, 0.251801, 0.254103, 0.254058, 0.254243, 0.254126, 0.254081, 0.2541, 0.254065, 0.25408, 0.25408, 0.254063, 0.254258, 0.254081, 0.254093], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 6, 1, 0, 6, 6, 1, 0, 29, 0, 27, 27, 0, 0, 2, 0, 1, 1]': ([0.257511, 0.250701, 0.251393, 0.254168, 0.248006, 0.245966, 0.251305, 0.254006, 0.254019, 0.253995, 0.254088, 0.254273, 0.247468, 0.242797, 0.243615, 0.245453, 0.251801, 0.254103, 0.254058, 0.254243, 0.254126, 0.254081, 0.2541, 0.254065, 0.25408, 0.25408, 0.254063, 0.254258, 0.254081, 0.254093], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	78
        Max loop nest depth: 	6
        Additions: 		8488
        Multiplications: 	2400
        Divisions: 		0
        Logical: 		0
        Reads: 			12774
        Writes: 		1414
        Comparisons:		78
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest36.exe __orio_perftest36.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest36.exe  
Program Test Output: 
{'[3, 1, 2, 6, 1, 1, 0, 0, 26, 28, 29, 0, 0, 1, 0, 0, 0, 0]' : 0.210036}
{'[3, 1, 2, 6, 1, 1, 0, 0, 26, 28, 29, 0, 0, 1, 0, 0, 0, 0]' : 0.208359}
{'[3, 1, 2, 6, 1, 1, 0, 0, 26, 28, 29, 0, 0, 1, 0, 0, 0, 0]' : 0.213832}
{'[3, 1, 2, 6, 1, 1, 0, 0, 26, 28, 29, 0, 0, 1, 0, 0, 0, 0]' : 0.210685}
{'[3, 1, 2, 6, 1, 1, 0, 0, 26, 28, 29, 0, 0, 1, 0, 0, 0, 0]' : 0.207265}
{'[3, 1, 2, 6, 1, 1, 0, 0, 26, 28, 29, 0, 0, 1, 0, 0, 0, 0]' : 0.20872}
{'[3, 1, 2, 6, 1, 1, 0, 0, 26, 28, 29, 0, 0, 1, 0, 0, 0, 0]' : 0.214529}
{'[3, 1, 2, 6, 1, 1, 0, 0, 26, 28, 29, 0, 0, 1, 0, 0, 0, 0]' : 0.209022}
{'[3, 1, 2, 6, 1, 1, 0, 0, 26, 28, 29, 0, 0, 1, 0, 0, 0, 0]' : 0.209057}
{'[3, 1, 2, 6, 1, 1, 0, 0, 26, 28, 29, 0, 0, 1, 0, 0, 0, 0]' : 0.213474}
{'[3, 1, 2, 6, 1, 1, 0, 0, 26, 28, 29, 0, 0, 1, 0, 0, 0, 0]' : 0.215478}
{'[3, 1, 2, 6, 1, 1, 0, 0, 26, 28, 29, 0, 0, 1, 0, 0, 0, 0]' : 0.214507}
{'[3, 1, 2, 6, 1, 1, 0, 0, 26, 28, 29, 0, 0, 1, 0, 0, 0, 0]' : 0.213963}
{'[3, 1, 2, 6, 1, 1, 0, 0, 26, 28, 29, 0, 0, 1, 0, 0, 0, 0]' : 0.214823}
{'[3, 1, 2, 6, 1, 1, 0, 0, 26, 28, 29, 0, 0, 1, 0, 0, 0, 0]' : 0.21458}
{'[3, 1, 2, 6, 1, 1, 0, 0, 26, 28, 29, 0, 0, 1, 0, 0, 0, 0]' : 0.214803}
{'[3, 1, 2, 6, 1, 1, 0, 0, 26, 28, 29, 0, 0, 1, 0, 0, 0, 0]' : 0.213566}
{'[3, 1, 2, 6, 1, 1, 0, 0, 26, 28, 29, 0, 0, 1, 0, 0, 0, 0]' : 0.213385}
{'[3, 1, 2, 6, 1, 1, 0, 0, 26, 28, 29, 0, 0, 1, 0, 0, 0, 0]' : 0.214752}
{'[3, 1, 2, 6, 1, 1, 0, 0, 26, 28, 29, 0, 0, 1, 0, 0, 0, 0]' : 0.213511}
{'[3, 1, 2, 6, 1, 1, 0, 0, 26, 28, 29, 0, 0, 1, 0, 0, 0, 0]' : 0.213995}
{'[3, 1, 2, 6, 1, 1, 0, 0, 26, 28, 29, 0, 0, 1, 0, 0, 0, 0]' : 0.210496}
{'[3, 1, 2, 6, 1, 1, 0, 0, 26, 28, 29, 0, 0, 1, 0, 0, 0, 0]' : 0.210071}
{'[3, 1, 2, 6, 1, 1, 0, 0, 26, 28, 29, 0, 0, 1, 0, 0, 0, 0]' : 0.208697}
{'[3, 1, 2, 6, 1, 1, 0, 0, 26, 28, 29, 0, 0, 1, 0, 0, 0, 0]' : 0.209232}
{'[3, 1, 2, 6, 1, 1, 0, 0, 26, 28, 29, 0, 0, 1, 0, 0, 0, 0]' : 0.211383}
{'[3, 1, 2, 6, 1, 1, 0, 0, 26, 28, 29, 0, 0, 1, 0, 0, 0, 0]' : 0.213931}
{'[3, 1, 2, 6, 1, 1, 0, 0, 26, 28, 29, 0, 0, 1, 0, 0, 0, 0]' : 0.214206}
{'[3, 1, 2, 6, 1, 1, 0, 0, 26, 28, 29, 0, 0, 1, 0, 0, 0, 0]' : 0.214907}
{'[3, 1, 2, 6, 1, 1, 0, 0, 26, 28, 29, 0, 0, 1, 0, 0, 0, 0]' : 0.213722}

out:
 ["{'[3, 1, 2, 6, 1, 1, 0, 0, 26, 28, 29, 0, 0, 1, 0, 0, 0, 0]' : 0.210036}", "{'[3, 1, 2, 6, 1, 1, 0, 0, 26, 28, 29, 0, 0, 1, 0, 0, 0, 0]' : 0.208359}", "{'[3, 1, 2, 6, 1, 1, 0, 0, 26, 28, 29, 0, 0, 1, 0, 0, 0, 0]' : 0.213832}", "{'[3, 1, 2, 6, 1, 1, 0, 0, 26, 28, 29, 0, 0, 1, 0, 0, 0, 0]' : 0.210685}", "{'[3, 1, 2, 6, 1, 1, 0, 0, 26, 28, 29, 0, 0, 1, 0, 0, 0, 0]' : 0.207265}", "{'[3, 1, 2, 6, 1, 1, 0, 0, 26, 28, 29, 0, 0, 1, 0, 0, 0, 0]' : 0.20872}", "{'[3, 1, 2, 6, 1, 1, 0, 0, 26, 28, 29, 0, 0, 1, 0, 0, 0, 0]' : 0.214529}", "{'[3, 1, 2, 6, 1, 1, 0, 0, 26, 28, 29, 0, 0, 1, 0, 0, 0, 0]' : 0.209022}", "{'[3, 1, 2, 6, 1, 1, 0, 0, 26, 28, 29, 0, 0, 1, 0, 0, 0, 0]' : 0.209057}", "{'[3, 1, 2, 6, 1, 1, 0, 0, 26, 28, 29, 0, 0, 1, 0, 0, 0, 0]' : 0.213474}", "{'[3, 1, 2, 6, 1, 1, 0, 0, 26, 28, 29, 0, 0, 1, 0, 0, 0, 0]' : 0.215478}", "{'[3, 1, 2, 6, 1, 1, 0, 0, 26, 28, 29, 0, 0, 1, 0, 0, 0, 0]' : 0.214507}", "{'[3, 1, 2, 6, 1, 1, 0, 0, 26, 28, 29, 0, 0, 1, 0, 0, 0, 0]' : 0.213963}", "{'[3, 1, 2, 6, 1, 1, 0, 0, 26, 28, 29, 0, 0, 1, 0, 0, 0, 0]' : 0.214823}", "{'[3, 1, 2, 6, 1, 1, 0, 0, 26, 28, 29, 0, 0, 1, 0, 0, 0, 0]' : 0.21458}", "{'[3, 1, 2, 6, 1, 1, 0, 0, 26, 28, 29, 0, 0, 1, 0, 0, 0, 0]' : 0.214803}", "{'[3, 1, 2, 6, 1, 1, 0, 0, 26, 28, 29, 0, 0, 1, 0, 0, 0, 0]' : 0.213566}", "{'[3, 1, 2, 6, 1, 1, 0, 0, 26, 28, 29, 0, 0, 1, 0, 0, 0, 0]' : 0.213385}", "{'[3, 1, 2, 6, 1, 1, 0, 0, 26, 28, 29, 0, 0, 1, 0, 0, 0, 0]' : 0.214752}", "{'[3, 1, 2, 6, 1, 1, 0, 0, 26, 28, 29, 0, 0, 1, 0, 0, 0, 0]' : 0.213511}", "{'[3, 1, 2, 6, 1, 1, 0, 0, 26, 28, 29, 0, 0, 1, 0, 0, 0, 0]' : 0.213995}", "{'[3, 1, 2, 6, 1, 1, 0, 0, 26, 28, 29, 0, 0, 1, 0, 0, 0, 0]' : 0.210496}", "{'[3, 1, 2, 6, 1, 1, 0, 0, 26, 28, 29, 0, 0, 1, 0, 0, 0, 0]' : 0.210071}", "{'[3, 1, 2, 6, 1, 1, 0, 0, 26, 28, 29, 0, 0, 1, 0, 0, 0, 0]' : 0.208697}", "{'[3, 1, 2, 6, 1, 1, 0, 0, 26, 28, 29, 0, 0, 1, 0, 0, 0, 0]' : 0.209232}", "{'[3, 1, 2, 6, 1, 1, 0, 0, 26, 28, 29, 0, 0, 1, 0, 0, 0, 0]' : 0.211383}", "{'[3, 1, 2, 6, 1, 1, 0, 0, 26, 28, 29, 0, 0, 1, 0, 0, 0, 0]' : 0.213931}", "{'[3, 1, 2, 6, 1, 1, 0, 0, 26, 28, 29, 0, 0, 1, 0, 0, 0, 0]' : 0.214206}", "{'[3, 1, 2, 6, 1, 1, 0, 0, 26, 28, 29, 0, 0, 1, 0, 0, 0, 0]' : 0.214907}", "{'[3, 1, 2, 6, 1, 1, 0, 0, 26, 28, 29, 0, 0, 1, 0, 0, 0, 0]' : 0.213722}"]
returning from 'run': {'[3, 1, 2, 6, 1, 1, 0, 0, 26, 28, 29, 0, 0, 1, 0, 0, 0, 0]': ([0.210036, 0.208359, 0.213832, 0.210685, 0.207265, 0.20872, 0.214529, 0.209022, 0.209057, 0.213474, 0.215478, 0.214507, 0.213963, 0.214823, 0.21458, 0.214803, 0.213566, 0.213385, 0.214752, 0.213511, 0.213995, 0.210496, 0.210071, 0.208697, 0.209232, 0.211383, 0.213931, 0.214206, 0.214907, 0.213722], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 1, 2, 6, 1, 1, 0, 0, 26, 28, 29, 0, 0, 1, 0, 0, 0, 0]': ([0.210036, 0.208359, 0.213832, 0.210685, 0.207265, 0.20872, 0.214529, 0.209022, 0.209057, 0.213474, 0.215478, 0.214507, 0.213963, 0.214823, 0.21458, 0.214803, 0.213566, 0.213385, 0.214752, 0.213511, 0.213995, 0.210496, 0.210071, 0.208697, 0.209232, 0.211383, 0.213931, 0.214206, 0.214907, 0.213722], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		493
        Multiplications: 	216
        Divisions: 		0
        Logical: 		0
        Reads: 			1058
        Writes: 		212
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest37.exe __orio_perftest37.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest37.exe  
Program Test Output: 
{'[1, 5, 0, 5, 0, 0, 0, 0, 7, 0, 2, 3, 1, 0, 1, 1, 1, 1]' : 0.104989}
{'[1, 5, 0, 5, 0, 0, 0, 0, 7, 0, 2, 3, 1, 0, 1, 1, 1, 1]' : 0.104846}
{'[1, 5, 0, 5, 0, 0, 0, 0, 7, 0, 2, 3, 1, 0, 1, 1, 1, 1]' : 0.10498}
{'[1, 5, 0, 5, 0, 0, 0, 0, 7, 0, 2, 3, 1, 0, 1, 1, 1, 1]' : 0.0983}
{'[1, 5, 0, 5, 0, 0, 0, 0, 7, 0, 2, 3, 1, 0, 1, 1, 1, 1]' : 0.092767}
{'[1, 5, 0, 5, 0, 0, 0, 0, 7, 0, 2, 3, 1, 0, 1, 1, 1, 1]' : 0.0926831}
{'[1, 5, 0, 5, 0, 0, 0, 0, 7, 0, 2, 3, 1, 0, 1, 1, 1, 1]' : 0.093513}
{'[1, 5, 0, 5, 0, 0, 0, 0, 7, 0, 2, 3, 1, 0, 1, 1, 1, 1]' : 0.0923278}
{'[1, 5, 0, 5, 0, 0, 0, 0, 7, 0, 2, 3, 1, 0, 1, 1, 1, 1]' : 0.0921721}
{'[1, 5, 0, 5, 0, 0, 0, 0, 7, 0, 2, 3, 1, 0, 1, 1, 1, 1]' : 0.0924759}
{'[1, 5, 0, 5, 0, 0, 0, 0, 7, 0, 2, 3, 1, 0, 1, 1, 1, 1]' : 0.0921469}
{'[1, 5, 0, 5, 0, 0, 0, 0, 7, 0, 2, 3, 1, 0, 1, 1, 1, 1]' : 0.0944631}
{'[1, 5, 0, 5, 0, 0, 0, 0, 7, 0, 2, 3, 1, 0, 1, 1, 1, 1]' : 0.0941501}
{'[1, 5, 0, 5, 0, 0, 0, 0, 7, 0, 2, 3, 1, 0, 1, 1, 1, 1]' : 0.094281}
{'[1, 5, 0, 5, 0, 0, 0, 0, 7, 0, 2, 3, 1, 0, 1, 1, 1, 1]' : 0.0959651}
{'[1, 5, 0, 5, 0, 0, 0, 0, 7, 0, 2, 3, 1, 0, 1, 1, 1, 1]' : 0.0961769}
{'[1, 5, 0, 5, 0, 0, 0, 0, 7, 0, 2, 3, 1, 0, 1, 1, 1, 1]' : 0.0963612}
{'[1, 5, 0, 5, 0, 0, 0, 0, 7, 0, 2, 3, 1, 0, 1, 1, 1, 1]' : 0.0962479}
{'[1, 5, 0, 5, 0, 0, 0, 0, 7, 0, 2, 3, 1, 0, 1, 1, 1, 1]' : 0.096149}
{'[1, 5, 0, 5, 0, 0, 0, 0, 7, 0, 2, 3, 1, 0, 1, 1, 1, 1]' : 0.0963399}
{'[1, 5, 0, 5, 0, 0, 0, 0, 7, 0, 2, 3, 1, 0, 1, 1, 1, 1]' : 0.0962849}
{'[1, 5, 0, 5, 0, 0, 0, 0, 7, 0, 2, 3, 1, 0, 1, 1, 1, 1]' : 0.0964301}
{'[1, 5, 0, 5, 0, 0, 0, 0, 7, 0, 2, 3, 1, 0, 1, 1, 1, 1]' : 0.096163}
{'[1, 5, 0, 5, 0, 0, 0, 0, 7, 0, 2, 3, 1, 0, 1, 1, 1, 1]' : 0.0962481}
{'[1, 5, 0, 5, 0, 0, 0, 0, 7, 0, 2, 3, 1, 0, 1, 1, 1, 1]' : 0.095315}
{'[1, 5, 0, 5, 0, 0, 0, 0, 7, 0, 2, 3, 1, 0, 1, 1, 1, 1]' : 0.094353}
{'[1, 5, 0, 5, 0, 0, 0, 0, 7, 0, 2, 3, 1, 0, 1, 1, 1, 1]' : 0.0941391}
{'[1, 5, 0, 5, 0, 0, 0, 0, 7, 0, 2, 3, 1, 0, 1, 1, 1, 1]' : 0.095803}
{'[1, 5, 0, 5, 0, 0, 0, 0, 7, 0, 2, 3, 1, 0, 1, 1, 1, 1]' : 0.094142}
{'[1, 5, 0, 5, 0, 0, 0, 0, 7, 0, 2, 3, 1, 0, 1, 1, 1, 1]' : 0.094151}

out:
 ["{'[1, 5, 0, 5, 0, 0, 0, 0, 7, 0, 2, 3, 1, 0, 1, 1, 1, 1]' : 0.104989}", "{'[1, 5, 0, 5, 0, 0, 0, 0, 7, 0, 2, 3, 1, 0, 1, 1, 1, 1]' : 0.104846}", "{'[1, 5, 0, 5, 0, 0, 0, 0, 7, 0, 2, 3, 1, 0, 1, 1, 1, 1]' : 0.10498}", "{'[1, 5, 0, 5, 0, 0, 0, 0, 7, 0, 2, 3, 1, 0, 1, 1, 1, 1]' : 0.0983}", "{'[1, 5, 0, 5, 0, 0, 0, 0, 7, 0, 2, 3, 1, 0, 1, 1, 1, 1]' : 0.092767}", "{'[1, 5, 0, 5, 0, 0, 0, 0, 7, 0, 2, 3, 1, 0, 1, 1, 1, 1]' : 0.0926831}", "{'[1, 5, 0, 5, 0, 0, 0, 0, 7, 0, 2, 3, 1, 0, 1, 1, 1, 1]' : 0.093513}", "{'[1, 5, 0, 5, 0, 0, 0, 0, 7, 0, 2, 3, 1, 0, 1, 1, 1, 1]' : 0.0923278}", "{'[1, 5, 0, 5, 0, 0, 0, 0, 7, 0, 2, 3, 1, 0, 1, 1, 1, 1]' : 0.0921721}", "{'[1, 5, 0, 5, 0, 0, 0, 0, 7, 0, 2, 3, 1, 0, 1, 1, 1, 1]' : 0.0924759}", "{'[1, 5, 0, 5, 0, 0, 0, 0, 7, 0, 2, 3, 1, 0, 1, 1, 1, 1]' : 0.0921469}", "{'[1, 5, 0, 5, 0, 0, 0, 0, 7, 0, 2, 3, 1, 0, 1, 1, 1, 1]' : 0.0944631}", "{'[1, 5, 0, 5, 0, 0, 0, 0, 7, 0, 2, 3, 1, 0, 1, 1, 1, 1]' : 0.0941501}", "{'[1, 5, 0, 5, 0, 0, 0, 0, 7, 0, 2, 3, 1, 0, 1, 1, 1, 1]' : 0.094281}", "{'[1, 5, 0, 5, 0, 0, 0, 0, 7, 0, 2, 3, 1, 0, 1, 1, 1, 1]' : 0.0959651}", "{'[1, 5, 0, 5, 0, 0, 0, 0, 7, 0, 2, 3, 1, 0, 1, 1, 1, 1]' : 0.0961769}", "{'[1, 5, 0, 5, 0, 0, 0, 0, 7, 0, 2, 3, 1, 0, 1, 1, 1, 1]' : 0.0963612}", "{'[1, 5, 0, 5, 0, 0, 0, 0, 7, 0, 2, 3, 1, 0, 1, 1, 1, 1]' : 0.0962479}", "{'[1, 5, 0, 5, 0, 0, 0, 0, 7, 0, 2, 3, 1, 0, 1, 1, 1, 1]' : 0.096149}", "{'[1, 5, 0, 5, 0, 0, 0, 0, 7, 0, 2, 3, 1, 0, 1, 1, 1, 1]' : 0.0963399}", "{'[1, 5, 0, 5, 0, 0, 0, 0, 7, 0, 2, 3, 1, 0, 1, 1, 1, 1]' : 0.0962849}", "{'[1, 5, 0, 5, 0, 0, 0, 0, 7, 0, 2, 3, 1, 0, 1, 1, 1, 1]' : 0.0964301}", "{'[1, 5, 0, 5, 0, 0, 0, 0, 7, 0, 2, 3, 1, 0, 1, 1, 1, 1]' : 0.096163}", "{'[1, 5, 0, 5, 0, 0, 0, 0, 7, 0, 2, 3, 1, 0, 1, 1, 1, 1]' : 0.0962481}", "{'[1, 5, 0, 5, 0, 0, 0, 0, 7, 0, 2, 3, 1, 0, 1, 1, 1, 1]' : 0.095315}", "{'[1, 5, 0, 5, 0, 0, 0, 0, 7, 0, 2, 3, 1, 0, 1, 1, 1, 1]' : 0.094353}", "{'[1, 5, 0, 5, 0, 0, 0, 0, 7, 0, 2, 3, 1, 0, 1, 1, 1, 1]' : 0.0941391}", "{'[1, 5, 0, 5, 0, 0, 0, 0, 7, 0, 2, 3, 1, 0, 1, 1, 1, 1]' : 0.095803}", "{'[1, 5, 0, 5, 0, 0, 0, 0, 7, 0, 2, 3, 1, 0, 1, 1, 1, 1]' : 0.094142}", "{'[1, 5, 0, 5, 0, 0, 0, 0, 7, 0, 2, 3, 1, 0, 1, 1, 1, 1]' : 0.094151}"]
returning from 'run': {'[1, 5, 0, 5, 0, 0, 0, 0, 7, 0, 2, 3, 1, 0, 1, 1, 1, 1]': ([0.104989, 0.104846, 0.10498, 0.0983, 0.092767, 0.0926831, 0.093513, 0.0923278, 0.0921721, 0.0924759, 0.0921469, 0.0944631, 0.0941501, 0.094281, 0.0959651, 0.0961769, 0.0963612, 0.0962479, 0.096149, 0.0963399, 0.0962849, 0.0964301, 0.096163, 0.0962481, 0.095315, 0.094353, 0.0941391, 0.095803, 0.094142, 0.094151], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 5, 0, 5, 0, 0, 0, 0, 7, 0, 2, 3, 1, 0, 1, 1, 1, 1]': ([0.104989, 0.104846, 0.10498, 0.0983, 0.092767, 0.0926831, 0.093513, 0.0923278, 0.0921721, 0.0924759, 0.0921469, 0.0944631, 0.0941501, 0.094281, 0.0959651, 0.0961769, 0.0963612, 0.0962479, 0.096149, 0.0963399, 0.0962849, 0.0964301, 0.096163, 0.0962481, 0.095315, 0.094353, 0.0941391, 0.095803, 0.094142, 0.094151], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = jjj
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		271
        Multiplications: 	92
        Divisions: 		0
        Logical: 		0
        Reads: 			596
        Writes: 		117
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest38.exe __orio_perftest38.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest38.exe  
Program Test Output: 
{'[5, 4, 6, 5, 2, 0, 1, 0, 0, 0, 27, 7, 0, 0, 1, 1, 1, 1]' : 0.205307}
{'[5, 4, 6, 5, 2, 0, 1, 0, 0, 0, 27, 7, 0, 0, 1, 1, 1, 1]' : 0.194906}
{'[5, 4, 6, 5, 2, 0, 1, 0, 0, 0, 27, 7, 0, 0, 1, 1, 1, 1]' : 0.176508}
{'[5, 4, 6, 5, 2, 0, 1, 0, 0, 0, 27, 7, 0, 0, 1, 1, 1, 1]' : 0.176322}
{'[5, 4, 6, 5, 2, 0, 1, 0, 0, 0, 27, 7, 0, 0, 1, 1, 1, 1]' : 0.182011}
{'[5, 4, 6, 5, 2, 0, 1, 0, 0, 0, 27, 7, 0, 0, 1, 1, 1, 1]' : 0.18049}
{'[5, 4, 6, 5, 2, 0, 1, 0, 0, 0, 27, 7, 0, 0, 1, 1, 1, 1]' : 0.179929}
{'[5, 4, 6, 5, 2, 0, 1, 0, 0, 0, 27, 7, 0, 0, 1, 1, 1, 1]' : 0.182328}
{'[5, 4, 6, 5, 2, 0, 1, 0, 0, 0, 27, 7, 0, 0, 1, 1, 1, 1]' : 0.182531}
{'[5, 4, 6, 5, 2, 0, 1, 0, 0, 0, 27, 7, 0, 0, 1, 1, 1, 1]' : 0.182567}
{'[5, 4, 6, 5, 2, 0, 1, 0, 0, 0, 27, 7, 0, 0, 1, 1, 1, 1]' : 0.182296}
{'[5, 4, 6, 5, 2, 0, 1, 0, 0, 0, 27, 7, 0, 0, 1, 1, 1, 1]' : 0.180597}
{'[5, 4, 6, 5, 2, 0, 1, 0, 0, 0, 27, 7, 0, 0, 1, 1, 1, 1]' : 0.176665}
{'[5, 4, 6, 5, 2, 0, 1, 0, 0, 0, 27, 7, 0, 0, 1, 1, 1, 1]' : 0.176415}
{'[5, 4, 6, 5, 2, 0, 1, 0, 0, 0, 27, 7, 0, 0, 1, 1, 1, 1]' : 0.176975}
{'[5, 4, 6, 5, 2, 0, 1, 0, 0, 0, 27, 7, 0, 0, 1, 1, 1, 1]' : 0.176655}
{'[5, 4, 6, 5, 2, 0, 1, 0, 0, 0, 27, 7, 0, 0, 1, 1, 1, 1]' : 0.176551}
{'[5, 4, 6, 5, 2, 0, 1, 0, 0, 0, 27, 7, 0, 0, 1, 1, 1, 1]' : 0.176484}
{'[5, 4, 6, 5, 2, 0, 1, 0, 0, 0, 27, 7, 0, 0, 1, 1, 1, 1]' : 0.18234}
{'[5, 4, 6, 5, 2, 0, 1, 0, 0, 0, 27, 7, 0, 0, 1, 1, 1, 1]' : 0.181167}
{'[5, 4, 6, 5, 2, 0, 1, 0, 0, 0, 27, 7, 0, 0, 1, 1, 1, 1]' : 0.176996}
{'[5, 4, 6, 5, 2, 0, 1, 0, 0, 0, 27, 7, 0, 0, 1, 1, 1, 1]' : 0.176381}
{'[5, 4, 6, 5, 2, 0, 1, 0, 0, 0, 27, 7, 0, 0, 1, 1, 1, 1]' : 0.176954}
{'[5, 4, 6, 5, 2, 0, 1, 0, 0, 0, 27, 7, 0, 0, 1, 1, 1, 1]' : 0.178935}
{'[5, 4, 6, 5, 2, 0, 1, 0, 0, 0, 27, 7, 0, 0, 1, 1, 1, 1]' : 0.182384}
{'[5, 4, 6, 5, 2, 0, 1, 0, 0, 0, 27, 7, 0, 0, 1, 1, 1, 1]' : 0.182283}
{'[5, 4, 6, 5, 2, 0, 1, 0, 0, 0, 27, 7, 0, 0, 1, 1, 1, 1]' : 0.178861}
{'[5, 4, 6, 5, 2, 0, 1, 0, 0, 0, 27, 7, 0, 0, 1, 1, 1, 1]' : 0.176524}
{'[5, 4, 6, 5, 2, 0, 1, 0, 0, 0, 27, 7, 0, 0, 1, 1, 1, 1]' : 0.176471}
{'[5, 4, 6, 5, 2, 0, 1, 0, 0, 0, 27, 7, 0, 0, 1, 1, 1, 1]' : 0.181331}

out:
 ["{'[5, 4, 6, 5, 2, 0, 1, 0, 0, 0, 27, 7, 0, 0, 1, 1, 1, 1]' : 0.205307}", "{'[5, 4, 6, 5, 2, 0, 1, 0, 0, 0, 27, 7, 0, 0, 1, 1, 1, 1]' : 0.194906}", "{'[5, 4, 6, 5, 2, 0, 1, 0, 0, 0, 27, 7, 0, 0, 1, 1, 1, 1]' : 0.176508}", "{'[5, 4, 6, 5, 2, 0, 1, 0, 0, 0, 27, 7, 0, 0, 1, 1, 1, 1]' : 0.176322}", "{'[5, 4, 6, 5, 2, 0, 1, 0, 0, 0, 27, 7, 0, 0, 1, 1, 1, 1]' : 0.182011}", "{'[5, 4, 6, 5, 2, 0, 1, 0, 0, 0, 27, 7, 0, 0, 1, 1, 1, 1]' : 0.18049}", "{'[5, 4, 6, 5, 2, 0, 1, 0, 0, 0, 27, 7, 0, 0, 1, 1, 1, 1]' : 0.179929}", "{'[5, 4, 6, 5, 2, 0, 1, 0, 0, 0, 27, 7, 0, 0, 1, 1, 1, 1]' : 0.182328}", "{'[5, 4, 6, 5, 2, 0, 1, 0, 0, 0, 27, 7, 0, 0, 1, 1, 1, 1]' : 0.182531}", "{'[5, 4, 6, 5, 2, 0, 1, 0, 0, 0, 27, 7, 0, 0, 1, 1, 1, 1]' : 0.182567}", "{'[5, 4, 6, 5, 2, 0, 1, 0, 0, 0, 27, 7, 0, 0, 1, 1, 1, 1]' : 0.182296}", "{'[5, 4, 6, 5, 2, 0, 1, 0, 0, 0, 27, 7, 0, 0, 1, 1, 1, 1]' : 0.180597}", "{'[5, 4, 6, 5, 2, 0, 1, 0, 0, 0, 27, 7, 0, 0, 1, 1, 1, 1]' : 0.176665}", "{'[5, 4, 6, 5, 2, 0, 1, 0, 0, 0, 27, 7, 0, 0, 1, 1, 1, 1]' : 0.176415}", "{'[5, 4, 6, 5, 2, 0, 1, 0, 0, 0, 27, 7, 0, 0, 1, 1, 1, 1]' : 0.176975}", "{'[5, 4, 6, 5, 2, 0, 1, 0, 0, 0, 27, 7, 0, 0, 1, 1, 1, 1]' : 0.176655}", "{'[5, 4, 6, 5, 2, 0, 1, 0, 0, 0, 27, 7, 0, 0, 1, 1, 1, 1]' : 0.176551}", "{'[5, 4, 6, 5, 2, 0, 1, 0, 0, 0, 27, 7, 0, 0, 1, 1, 1, 1]' : 0.176484}", "{'[5, 4, 6, 5, 2, 0, 1, 0, 0, 0, 27, 7, 0, 0, 1, 1, 1, 1]' : 0.18234}", "{'[5, 4, 6, 5, 2, 0, 1, 0, 0, 0, 27, 7, 0, 0, 1, 1, 1, 1]' : 0.181167}", "{'[5, 4, 6, 5, 2, 0, 1, 0, 0, 0, 27, 7, 0, 0, 1, 1, 1, 1]' : 0.176996}", "{'[5, 4, 6, 5, 2, 0, 1, 0, 0, 0, 27, 7, 0, 0, 1, 1, 1, 1]' : 0.176381}", "{'[5, 4, 6, 5, 2, 0, 1, 0, 0, 0, 27, 7, 0, 0, 1, 1, 1, 1]' : 0.176954}", "{'[5, 4, 6, 5, 2, 0, 1, 0, 0, 0, 27, 7, 0, 0, 1, 1, 1, 1]' : 0.178935}", "{'[5, 4, 6, 5, 2, 0, 1, 0, 0, 0, 27, 7, 0, 0, 1, 1, 1, 1]' : 0.182384}", "{'[5, 4, 6, 5, 2, 0, 1, 0, 0, 0, 27, 7, 0, 0, 1, 1, 1, 1]' : 0.182283}", "{'[5, 4, 6, 5, 2, 0, 1, 0, 0, 0, 27, 7, 0, 0, 1, 1, 1, 1]' : 0.178861}", "{'[5, 4, 6, 5, 2, 0, 1, 0, 0, 0, 27, 7, 0, 0, 1, 1, 1, 1]' : 0.176524}", "{'[5, 4, 6, 5, 2, 0, 1, 0, 0, 0, 27, 7, 0, 0, 1, 1, 1, 1]' : 0.176471}", "{'[5, 4, 6, 5, 2, 0, 1, 0, 0, 0, 27, 7, 0, 0, 1, 1, 1, 1]' : 0.181331}"]
returning from 'run': {'[5, 4, 6, 5, 2, 0, 1, 0, 0, 0, 27, 7, 0, 0, 1, 1, 1, 1]': ([0.205307, 0.194906, 0.176508, 0.176322, 0.182011, 0.18049, 0.179929, 0.182328, 0.182531, 0.182567, 0.182296, 0.180597, 0.176665, 0.176415, 0.176975, 0.176655, 0.176551, 0.176484, 0.18234, 0.181167, 0.176996, 0.176381, 0.176954, 0.178935, 0.182384, 0.182283, 0.178861, 0.176524, 0.176471, 0.181331], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 4, 6, 5, 2, 0, 1, 0, 0, 0, 27, 7, 0, 0, 1, 1, 1, 1]': ([0.205307, 0.194906, 0.176508, 0.176322, 0.182011, 0.18049, 0.179929, 0.182328, 0.182531, 0.182567, 0.182296, 0.180597, 0.176665, 0.176415, 0.176975, 0.176655, 0.176551, 0.176484, 0.18234, 0.181167, 0.176996, 0.176381, 0.176954, 0.178935, 0.182384, 0.182283, 0.178861, 0.176524, 0.176471, 0.181331], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	49
        Max loop nest depth: 	6
        Additions: 		5671
        Multiplications: 	2752
        Divisions: 		0
        Logical: 		0
        Reads: 			10666
        Writes: 		1694
        Comparisons:		49
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest39.exe __orio_perftest39.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest39.exe  
Program Test Output: 
{'[3, 2, 6, 6, 0, 6, 0, 1, 13, 9, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.261755}
{'[3, 2, 6, 6, 0, 6, 0, 1, 13, 9, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.253436}
{'[3, 2, 6, 6, 0, 6, 0, 1, 13, 9, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.226515}
{'[3, 2, 6, 6, 0, 6, 0, 1, 13, 9, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.227433}
{'[3, 2, 6, 6, 0, 6, 0, 1, 13, 9, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.226953}
{'[3, 2, 6, 6, 0, 6, 0, 1, 13, 9, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.227251}
{'[3, 2, 6, 6, 0, 6, 0, 1, 13, 9, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.226188}
{'[3, 2, 6, 6, 0, 6, 0, 1, 13, 9, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.228719}
{'[3, 2, 6, 6, 0, 6, 0, 1, 13, 9, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.227087}
{'[3, 2, 6, 6, 0, 6, 0, 1, 13, 9, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.223642}
{'[3, 2, 6, 6, 0, 6, 0, 1, 13, 9, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.227378}
{'[3, 2, 6, 6, 0, 6, 0, 1, 13, 9, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.224833}
{'[3, 2, 6, 6, 0, 6, 0, 1, 13, 9, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.225086}
{'[3, 2, 6, 6, 0, 6, 0, 1, 13, 9, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.224829}
{'[3, 2, 6, 6, 0, 6, 0, 1, 13, 9, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.225896}
{'[3, 2, 6, 6, 0, 6, 0, 1, 13, 9, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.223504}
{'[3, 2, 6, 6, 0, 6, 0, 1, 13, 9, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.224529}
{'[3, 2, 6, 6, 0, 6, 0, 1, 13, 9, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.228986}
{'[3, 2, 6, 6, 0, 6, 0, 1, 13, 9, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.22757}
{'[3, 2, 6, 6, 0, 6, 0, 1, 13, 9, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.226479}
{'[3, 2, 6, 6, 0, 6, 0, 1, 13, 9, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.230118}
{'[3, 2, 6, 6, 0, 6, 0, 1, 13, 9, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.226171}
{'[3, 2, 6, 6, 0, 6, 0, 1, 13, 9, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.226704}
{'[3, 2, 6, 6, 0, 6, 0, 1, 13, 9, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.226828}
{'[3, 2, 6, 6, 0, 6, 0, 1, 13, 9, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.225399}
{'[3, 2, 6, 6, 0, 6, 0, 1, 13, 9, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.227053}
{'[3, 2, 6, 6, 0, 6, 0, 1, 13, 9, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.227202}
{'[3, 2, 6, 6, 0, 6, 0, 1, 13, 9, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.225818}
{'[3, 2, 6, 6, 0, 6, 0, 1, 13, 9, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.22636}
{'[3, 2, 6, 6, 0, 6, 0, 1, 13, 9, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.227315}

out:
 ["{'[3, 2, 6, 6, 0, 6, 0, 1, 13, 9, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.261755}", "{'[3, 2, 6, 6, 0, 6, 0, 1, 13, 9, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.253436}", "{'[3, 2, 6, 6, 0, 6, 0, 1, 13, 9, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.226515}", "{'[3, 2, 6, 6, 0, 6, 0, 1, 13, 9, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.227433}", "{'[3, 2, 6, 6, 0, 6, 0, 1, 13, 9, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.226953}", "{'[3, 2, 6, 6, 0, 6, 0, 1, 13, 9, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.227251}", "{'[3, 2, 6, 6, 0, 6, 0, 1, 13, 9, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.226188}", "{'[3, 2, 6, 6, 0, 6, 0, 1, 13, 9, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.228719}", "{'[3, 2, 6, 6, 0, 6, 0, 1, 13, 9, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.227087}", "{'[3, 2, 6, 6, 0, 6, 0, 1, 13, 9, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.223642}", "{'[3, 2, 6, 6, 0, 6, 0, 1, 13, 9, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.227378}", "{'[3, 2, 6, 6, 0, 6, 0, 1, 13, 9, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.224833}", "{'[3, 2, 6, 6, 0, 6, 0, 1, 13, 9, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.225086}", "{'[3, 2, 6, 6, 0, 6, 0, 1, 13, 9, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.224829}", "{'[3, 2, 6, 6, 0, 6, 0, 1, 13, 9, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.225896}", "{'[3, 2, 6, 6, 0, 6, 0, 1, 13, 9, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.223504}", "{'[3, 2, 6, 6, 0, 6, 0, 1, 13, 9, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.224529}", "{'[3, 2, 6, 6, 0, 6, 0, 1, 13, 9, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.228986}", "{'[3, 2, 6, 6, 0, 6, 0, 1, 13, 9, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.22757}", "{'[3, 2, 6, 6, 0, 6, 0, 1, 13, 9, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.226479}", "{'[3, 2, 6, 6, 0, 6, 0, 1, 13, 9, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.230118}", "{'[3, 2, 6, 6, 0, 6, 0, 1, 13, 9, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.226171}", "{'[3, 2, 6, 6, 0, 6, 0, 1, 13, 9, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.226704}", "{'[3, 2, 6, 6, 0, 6, 0, 1, 13, 9, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.226828}", "{'[3, 2, 6, 6, 0, 6, 0, 1, 13, 9, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.225399}", "{'[3, 2, 6, 6, 0, 6, 0, 1, 13, 9, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.227053}", "{'[3, 2, 6, 6, 0, 6, 0, 1, 13, 9, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.227202}", "{'[3, 2, 6, 6, 0, 6, 0, 1, 13, 9, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.225818}", "{'[3, 2, 6, 6, 0, 6, 0, 1, 13, 9, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.22636}", "{'[3, 2, 6, 6, 0, 6, 0, 1, 13, 9, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.227315}"]
returning from 'run': {'[3, 2, 6, 6, 0, 6, 0, 1, 13, 9, 29, 0, 2, 0, 0, 1, 1, 1]': ([0.261755, 0.253436, 0.226515, 0.227433, 0.226953, 0.227251, 0.226188, 0.228719, 0.227087, 0.223642, 0.227378, 0.224833, 0.225086, 0.224829, 0.225896, 0.223504, 0.224529, 0.228986, 0.22757, 0.226479, 0.230118, 0.226171, 0.226704, 0.226828, 0.225399, 0.227053, 0.227202, 0.225818, 0.22636, 0.227315], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 2, 6, 6, 0, 6, 0, 1, 13, 9, 29, 0, 2, 0, 0, 1, 1, 1]': ([0.261755, 0.253436, 0.226515, 0.227433, 0.226953, 0.227251, 0.226188, 0.228719, 0.227087, 0.223642, 0.227378, 0.224833, 0.225086, 0.224829, 0.225896, 0.223504, 0.224529, 0.228986, 0.22757, 0.226479, 0.230118, 0.226171, 0.226704, 0.226828, 0.225399, 0.227053, 0.227202, 0.225818, 0.22636, 0.227315], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = iii
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	5
        Additions: 		1051
        Multiplications: 	496
        Divisions: 		0
        Logical: 		0
        Reads: 			2448
        Writes: 		511
        Comparisons:		24
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest40.exe __orio_perftest40.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest40.exe  
Program Test Output: 
{'[4, 6, 1, 2, 5, 0, 0, 0, 26, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.172377}
{'[4, 6, 1, 2, 5, 0, 0, 0, 26, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.163709}
{'[4, 6, 1, 2, 5, 0, 0, 0, 26, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.159447}
{'[4, 6, 1, 2, 5, 0, 0, 0, 26, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.159308}
{'[4, 6, 1, 2, 5, 0, 0, 0, 26, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.158905}
{'[4, 6, 1, 2, 5, 0, 0, 0, 26, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.159166}
{'[4, 6, 1, 2, 5, 0, 0, 0, 26, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.15603}
{'[4, 6, 1, 2, 5, 0, 0, 0, 26, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.155759}
{'[4, 6, 1, 2, 5, 0, 0, 0, 26, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.156027}
{'[4, 6, 1, 2, 5, 0, 0, 0, 26, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.158878}
{'[4, 6, 1, 2, 5, 0, 0, 0, 26, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.158674}
{'[4, 6, 1, 2, 5, 0, 0, 0, 26, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.159384}
{'[4, 6, 1, 2, 5, 0, 0, 0, 26, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.157073}
{'[4, 6, 1, 2, 5, 0, 0, 0, 26, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.155687}
{'[4, 6, 1, 2, 5, 0, 0, 0, 26, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.156204}
{'[4, 6, 1, 2, 5, 0, 0, 0, 26, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.155849}
{'[4, 6, 1, 2, 5, 0, 0, 0, 26, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.152403}
{'[4, 6, 1, 2, 5, 0, 0, 0, 26, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.152382}
{'[4, 6, 1, 2, 5, 0, 0, 0, 26, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.154264}
{'[4, 6, 1, 2, 5, 0, 0, 0, 26, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.156284}
{'[4, 6, 1, 2, 5, 0, 0, 0, 26, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.155532}
{'[4, 6, 1, 2, 5, 0, 0, 0, 26, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.156916}
{'[4, 6, 1, 2, 5, 0, 0, 0, 26, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.156121}
{'[4, 6, 1, 2, 5, 0, 0, 0, 26, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.155667}
{'[4, 6, 1, 2, 5, 0, 0, 0, 26, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.156132}
{'[4, 6, 1, 2, 5, 0, 0, 0, 26, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.158865}
{'[4, 6, 1, 2, 5, 0, 0, 0, 26, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.156753}
{'[4, 6, 1, 2, 5, 0, 0, 0, 26, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.155593}
{'[4, 6, 1, 2, 5, 0, 0, 0, 26, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.155814}
{'[4, 6, 1, 2, 5, 0, 0, 0, 26, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.155787}

out:
 ["{'[4, 6, 1, 2, 5, 0, 0, 0, 26, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.172377}", "{'[4, 6, 1, 2, 5, 0, 0, 0, 26, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.163709}", "{'[4, 6, 1, 2, 5, 0, 0, 0, 26, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.159447}", "{'[4, 6, 1, 2, 5, 0, 0, 0, 26, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.159308}", "{'[4, 6, 1, 2, 5, 0, 0, 0, 26, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.158905}", "{'[4, 6, 1, 2, 5, 0, 0, 0, 26, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.159166}", "{'[4, 6, 1, 2, 5, 0, 0, 0, 26, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.15603}", "{'[4, 6, 1, 2, 5, 0, 0, 0, 26, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.155759}", "{'[4, 6, 1, 2, 5, 0, 0, 0, 26, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.156027}", "{'[4, 6, 1, 2, 5, 0, 0, 0, 26, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.158878}", "{'[4, 6, 1, 2, 5, 0, 0, 0, 26, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.158674}", "{'[4, 6, 1, 2, 5, 0, 0, 0, 26, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.159384}", "{'[4, 6, 1, 2, 5, 0, 0, 0, 26, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.157073}", "{'[4, 6, 1, 2, 5, 0, 0, 0, 26, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.155687}", "{'[4, 6, 1, 2, 5, 0, 0, 0, 26, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.156204}", "{'[4, 6, 1, 2, 5, 0, 0, 0, 26, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.155849}", "{'[4, 6, 1, 2, 5, 0, 0, 0, 26, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.152403}", "{'[4, 6, 1, 2, 5, 0, 0, 0, 26, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.152382}", "{'[4, 6, 1, 2, 5, 0, 0, 0, 26, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.154264}", "{'[4, 6, 1, 2, 5, 0, 0, 0, 26, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.156284}", "{'[4, 6, 1, 2, 5, 0, 0, 0, 26, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.155532}", "{'[4, 6, 1, 2, 5, 0, 0, 0, 26, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.156916}", "{'[4, 6, 1, 2, 5, 0, 0, 0, 26, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.156121}", "{'[4, 6, 1, 2, 5, 0, 0, 0, 26, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.155667}", "{'[4, 6, 1, 2, 5, 0, 0, 0, 26, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.156132}", "{'[4, 6, 1, 2, 5, 0, 0, 0, 26, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.158865}", "{'[4, 6, 1, 2, 5, 0, 0, 0, 26, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.156753}", "{'[4, 6, 1, 2, 5, 0, 0, 0, 26, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.155593}", "{'[4, 6, 1, 2, 5, 0, 0, 0, 26, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.155814}", "{'[4, 6, 1, 2, 5, 0, 0, 0, 26, 28, 0, 1, 2, 0, 0, 1, 0, 1]' : 0.155787}"]
returning from 'run': {'[4, 6, 1, 2, 5, 0, 0, 0, 26, 28, 0, 1, 2, 0, 0, 1, 0, 1]': ([0.172377, 0.163709, 0.159447, 0.159308, 0.158905, 0.159166, 0.15603, 0.155759, 0.156027, 0.158878, 0.158674, 0.159384, 0.157073, 0.155687, 0.156204, 0.155849, 0.152403, 0.152382, 0.154264, 0.156284, 0.155532, 0.156916, 0.156121, 0.155667, 0.156132, 0.158865, 0.156753, 0.155593, 0.155814, 0.155787], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 6, 1, 2, 5, 0, 0, 0, 26, 28, 0, 1, 2, 0, 0, 1, 0, 1]': ([0.172377, 0.163709, 0.159447, 0.159308, 0.158905, 0.159166, 0.15603, 0.155759, 0.156027, 0.158878, 0.158674, 0.159384, 0.157073, 0.155687, 0.156204, 0.155849, 0.152403, 0.152382, 0.154264, 0.156284, 0.155532, 0.156916, 0.156121, 0.155667, 0.156132, 0.158865, 0.156753, 0.155593, 0.155814, 0.155787], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = jjj
Code stats:
        Number of loops: 	26
        Max loop nest depth: 	5
        Additions: 		659
        Multiplications: 	170
        Divisions: 		0
        Logical: 		0
        Reads: 			1182
        Writes: 		161
        Comparisons:		26
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest41.exe __orio_perftest41.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest41.exe  
Program Test Output: 
{'[2, 4, 6, 2, 2, 0, 0, 1, 4, 3, 0, 29, 0, 1, 1, 0, 1, 0]' : 0.164154}
{'[2, 4, 6, 2, 2, 0, 0, 1, 4, 3, 0, 29, 0, 1, 1, 0, 1, 0]' : 0.164056}
{'[2, 4, 6, 2, 2, 0, 0, 1, 4, 3, 0, 29, 0, 1, 1, 0, 1, 0]' : 0.155784}
{'[2, 4, 6, 2, 2, 0, 0, 1, 4, 3, 0, 29, 0, 1, 1, 0, 1, 0]' : 0.141345}
{'[2, 4, 6, 2, 2, 0, 0, 1, 4, 3, 0, 29, 0, 1, 1, 0, 1, 0]' : 0.143994}
{'[2, 4, 6, 2, 2, 0, 0, 1, 4, 3, 0, 29, 0, 1, 1, 0, 1, 0]' : 0.141931}
{'[2, 4, 6, 2, 2, 0, 0, 1, 4, 3, 0, 29, 0, 1, 1, 0, 1, 0]' : 0.138813}
{'[2, 4, 6, 2, 2, 0, 0, 1, 4, 3, 0, 29, 0, 1, 1, 0, 1, 0]' : 0.14197}
{'[2, 4, 6, 2, 2, 0, 0, 1, 4, 3, 0, 29, 0, 1, 1, 0, 1, 0]' : 0.138796}
{'[2, 4, 6, 2, 2, 0, 0, 1, 4, 3, 0, 29, 0, 1, 1, 0, 1, 0]' : 0.139859}
{'[2, 4, 6, 2, 2, 0, 0, 1, 4, 3, 0, 29, 0, 1, 1, 0, 1, 0]' : 0.140093}
{'[2, 4, 6, 2, 2, 0, 0, 1, 4, 3, 0, 29, 0, 1, 1, 0, 1, 0]' : 0.143592}
{'[2, 4, 6, 2, 2, 0, 0, 1, 4, 3, 0, 29, 0, 1, 1, 0, 1, 0]' : 0.139765}
{'[2, 4, 6, 2, 2, 0, 0, 1, 4, 3, 0, 29, 0, 1, 1, 0, 1, 0]' : 0.138686}
{'[2, 4, 6, 2, 2, 0, 0, 1, 4, 3, 0, 29, 0, 1, 1, 0, 1, 0]' : 0.140114}
{'[2, 4, 6, 2, 2, 0, 0, 1, 4, 3, 0, 29, 0, 1, 1, 0, 1, 0]' : 0.142799}
{'[2, 4, 6, 2, 2, 0, 0, 1, 4, 3, 0, 29, 0, 1, 1, 0, 1, 0]' : 0.139733}
{'[2, 4, 6, 2, 2, 0, 0, 1, 4, 3, 0, 29, 0, 1, 1, 0, 1, 0]' : 0.140104}
{'[2, 4, 6, 2, 2, 0, 0, 1, 4, 3, 0, 29, 0, 1, 1, 0, 1, 0]' : 0.146345}
{'[2, 4, 6, 2, 2, 0, 0, 1, 4, 3, 0, 29, 0, 1, 1, 0, 1, 0]' : 0.141127}
{'[2, 4, 6, 2, 2, 0, 0, 1, 4, 3, 0, 29, 0, 1, 1, 0, 1, 0]' : 0.138855}
{'[2, 4, 6, 2, 2, 0, 0, 1, 4, 3, 0, 29, 0, 1, 1, 0, 1, 0]' : 0.139771}
{'[2, 4, 6, 2, 2, 0, 0, 1, 4, 3, 0, 29, 0, 1, 1, 0, 1, 0]' : 0.141405}
{'[2, 4, 6, 2, 2, 0, 0, 1, 4, 3, 0, 29, 0, 1, 1, 0, 1, 0]' : 0.139905}
{'[2, 4, 6, 2, 2, 0, 0, 1, 4, 3, 0, 29, 0, 1, 1, 0, 1, 0]' : 0.140283}
{'[2, 4, 6, 2, 2, 0, 0, 1, 4, 3, 0, 29, 0, 1, 1, 0, 1, 0]' : 0.145629}
{'[2, 4, 6, 2, 2, 0, 0, 1, 4, 3, 0, 29, 0, 1, 1, 0, 1, 0]' : 0.147561}
{'[2, 4, 6, 2, 2, 0, 0, 1, 4, 3, 0, 29, 0, 1, 1, 0, 1, 0]' : 0.142562}
{'[2, 4, 6, 2, 2, 0, 0, 1, 4, 3, 0, 29, 0, 1, 1, 0, 1, 0]' : 0.143682}
{'[2, 4, 6, 2, 2, 0, 0, 1, 4, 3, 0, 29, 0, 1, 1, 0, 1, 0]' : 0.145278}

out:
 ["{'[2, 4, 6, 2, 2, 0, 0, 1, 4, 3, 0, 29, 0, 1, 1, 0, 1, 0]' : 0.164154}", "{'[2, 4, 6, 2, 2, 0, 0, 1, 4, 3, 0, 29, 0, 1, 1, 0, 1, 0]' : 0.164056}", "{'[2, 4, 6, 2, 2, 0, 0, 1, 4, 3, 0, 29, 0, 1, 1, 0, 1, 0]' : 0.155784}", "{'[2, 4, 6, 2, 2, 0, 0, 1, 4, 3, 0, 29, 0, 1, 1, 0, 1, 0]' : 0.141345}", "{'[2, 4, 6, 2, 2, 0, 0, 1, 4, 3, 0, 29, 0, 1, 1, 0, 1, 0]' : 0.143994}", "{'[2, 4, 6, 2, 2, 0, 0, 1, 4, 3, 0, 29, 0, 1, 1, 0, 1, 0]' : 0.141931}", "{'[2, 4, 6, 2, 2, 0, 0, 1, 4, 3, 0, 29, 0, 1, 1, 0, 1, 0]' : 0.138813}", "{'[2, 4, 6, 2, 2, 0, 0, 1, 4, 3, 0, 29, 0, 1, 1, 0, 1, 0]' : 0.14197}", "{'[2, 4, 6, 2, 2, 0, 0, 1, 4, 3, 0, 29, 0, 1, 1, 0, 1, 0]' : 0.138796}", "{'[2, 4, 6, 2, 2, 0, 0, 1, 4, 3, 0, 29, 0, 1, 1, 0, 1, 0]' : 0.139859}", "{'[2, 4, 6, 2, 2, 0, 0, 1, 4, 3, 0, 29, 0, 1, 1, 0, 1, 0]' : 0.140093}", "{'[2, 4, 6, 2, 2, 0, 0, 1, 4, 3, 0, 29, 0, 1, 1, 0, 1, 0]' : 0.143592}", "{'[2, 4, 6, 2, 2, 0, 0, 1, 4, 3, 0, 29, 0, 1, 1, 0, 1, 0]' : 0.139765}", "{'[2, 4, 6, 2, 2, 0, 0, 1, 4, 3, 0, 29, 0, 1, 1, 0, 1, 0]' : 0.138686}", "{'[2, 4, 6, 2, 2, 0, 0, 1, 4, 3, 0, 29, 0, 1, 1, 0, 1, 0]' : 0.140114}", "{'[2, 4, 6, 2, 2, 0, 0, 1, 4, 3, 0, 29, 0, 1, 1, 0, 1, 0]' : 0.142799}", "{'[2, 4, 6, 2, 2, 0, 0, 1, 4, 3, 0, 29, 0, 1, 1, 0, 1, 0]' : 0.139733}", "{'[2, 4, 6, 2, 2, 0, 0, 1, 4, 3, 0, 29, 0, 1, 1, 0, 1, 0]' : 0.140104}", "{'[2, 4, 6, 2, 2, 0, 0, 1, 4, 3, 0, 29, 0, 1, 1, 0, 1, 0]' : 0.146345}", "{'[2, 4, 6, 2, 2, 0, 0, 1, 4, 3, 0, 29, 0, 1, 1, 0, 1, 0]' : 0.141127}", "{'[2, 4, 6, 2, 2, 0, 0, 1, 4, 3, 0, 29, 0, 1, 1, 0, 1, 0]' : 0.138855}", "{'[2, 4, 6, 2, 2, 0, 0, 1, 4, 3, 0, 29, 0, 1, 1, 0, 1, 0]' : 0.139771}", "{'[2, 4, 6, 2, 2, 0, 0, 1, 4, 3, 0, 29, 0, 1, 1, 0, 1, 0]' : 0.141405}", "{'[2, 4, 6, 2, 2, 0, 0, 1, 4, 3, 0, 29, 0, 1, 1, 0, 1, 0]' : 0.139905}", "{'[2, 4, 6, 2, 2, 0, 0, 1, 4, 3, 0, 29, 0, 1, 1, 0, 1, 0]' : 0.140283}", "{'[2, 4, 6, 2, 2, 0, 0, 1, 4, 3, 0, 29, 0, 1, 1, 0, 1, 0]' : 0.145629}", "{'[2, 4, 6, 2, 2, 0, 0, 1, 4, 3, 0, 29, 0, 1, 1, 0, 1, 0]' : 0.147561}", "{'[2, 4, 6, 2, 2, 0, 0, 1, 4, 3, 0, 29, 0, 1, 1, 0, 1, 0]' : 0.142562}", "{'[2, 4, 6, 2, 2, 0, 0, 1, 4, 3, 0, 29, 0, 1, 1, 0, 1, 0]' : 0.143682}", "{'[2, 4, 6, 2, 2, 0, 0, 1, 4, 3, 0, 29, 0, 1, 1, 0, 1, 0]' : 0.145278}"]
returning from 'run': {'[2, 4, 6, 2, 2, 0, 0, 1, 4, 3, 0, 29, 0, 1, 1, 0, 1, 0]': ([0.164154, 0.164056, 0.155784, 0.141345, 0.143994, 0.141931, 0.138813, 0.14197, 0.138796, 0.139859, 0.140093, 0.143592, 0.139765, 0.138686, 0.140114, 0.142799, 0.139733, 0.140104, 0.146345, 0.141127, 0.138855, 0.139771, 0.141405, 0.139905, 0.140283, 0.145629, 0.147561, 0.142562, 0.143682, 0.145278], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 4, 6, 2, 2, 0, 0, 1, 4, 3, 0, 29, 0, 1, 1, 0, 1, 0]': ([0.164154, 0.164056, 0.155784, 0.141345, 0.143994, 0.141931, 0.138813, 0.14197, 0.138796, 0.139859, 0.140093, 0.143592, 0.139765, 0.138686, 0.140114, 0.142799, 0.139733, 0.140104, 0.146345, 0.141127, 0.138855, 0.139771, 0.141405, 0.139905, 0.140283, 0.145629, 0.147561, 0.142562, 0.143682, 0.145278], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	49
        Max loop nest depth: 	4
        Additions: 		3461
        Multiplications: 	1596
        Divisions: 		0
        Logical: 		0
        Reads: 			6661
        Writes: 		1113
        Comparisons:		49
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest42.exe __orio_perftest42.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest42.exe  
Program Test Output: 
{'[0, 6, 0, 3, 0, 3, 0, 1, 23, 11, 28, 0, 1, 0, 1, 1, 0, 0]' : 0.118439}
{'[0, 6, 0, 3, 0, 3, 0, 1, 23, 11, 28, 0, 1, 0, 1, 1, 0, 0]' : 0.118354}
{'[0, 6, 0, 3, 0, 3, 0, 1, 23, 11, 28, 0, 1, 0, 1, 1, 0, 0]' : 0.118149}
{'[0, 6, 0, 3, 0, 3, 0, 1, 23, 11, 28, 0, 1, 0, 1, 1, 0, 0]' : 0.105658}
{'[0, 6, 0, 3, 0, 3, 0, 1, 23, 11, 28, 0, 1, 0, 1, 1, 0, 0]' : 0.106152}
{'[0, 6, 0, 3, 0, 3, 0, 1, 23, 11, 28, 0, 1, 0, 1, 1, 0, 0]' : 0.106154}
{'[0, 6, 0, 3, 0, 3, 0, 1, 23, 11, 28, 0, 1, 0, 1, 1, 0, 0]' : 0.105934}
{'[0, 6, 0, 3, 0, 3, 0, 1, 23, 11, 28, 0, 1, 0, 1, 1, 0, 0]' : 0.101383}
{'[0, 6, 0, 3, 0, 3, 0, 1, 23, 11, 28, 0, 1, 0, 1, 1, 0, 0]' : 0.103409}
{'[0, 6, 0, 3, 0, 3, 0, 1, 23, 11, 28, 0, 1, 0, 1, 1, 0, 0]' : 0.100638}
{'[0, 6, 0, 3, 0, 3, 0, 1, 23, 11, 28, 0, 1, 0, 1, 1, 0, 0]' : 0.100401}
{'[0, 6, 0, 3, 0, 3, 0, 1, 23, 11, 28, 0, 1, 0, 1, 1, 0, 0]' : 0.100357}
{'[0, 6, 0, 3, 0, 3, 0, 1, 23, 11, 28, 0, 1, 0, 1, 1, 0, 0]' : 0.100428}
{'[0, 6, 0, 3, 0, 3, 0, 1, 23, 11, 28, 0, 1, 0, 1, 1, 0, 0]' : 0.102014}
{'[0, 6, 0, 3, 0, 3, 0, 1, 23, 11, 28, 0, 1, 0, 1, 1, 0, 0]' : 0.103317}
{'[0, 6, 0, 3, 0, 3, 0, 1, 23, 11, 28, 0, 1, 0, 1, 1, 0, 0]' : 0.10266}
{'[0, 6, 0, 3, 0, 3, 0, 1, 23, 11, 28, 0, 1, 0, 1, 1, 0, 0]' : 0.100586}
{'[0, 6, 0, 3, 0, 3, 0, 1, 23, 11, 28, 0, 1, 0, 1, 1, 0, 0]' : 0.100443}
{'[0, 6, 0, 3, 0, 3, 0, 1, 23, 11, 28, 0, 1, 0, 1, 1, 0, 0]' : 0.102526}
{'[0, 6, 0, 3, 0, 3, 0, 1, 23, 11, 28, 0, 1, 0, 1, 1, 0, 0]' : 0.102847}
{'[0, 6, 0, 3, 0, 3, 0, 1, 23, 11, 28, 0, 1, 0, 1, 1, 0, 0]' : 0.100429}
{'[0, 6, 0, 3, 0, 3, 0, 1, 23, 11, 28, 0, 1, 0, 1, 1, 0, 0]' : 0.100456}
{'[0, 6, 0, 3, 0, 3, 0, 1, 23, 11, 28, 0, 1, 0, 1, 1, 0, 0]' : 0.100648}
{'[0, 6, 0, 3, 0, 3, 0, 1, 23, 11, 28, 0, 1, 0, 1, 1, 0, 0]' : 0.102428}
{'[0, 6, 0, 3, 0, 3, 0, 1, 23, 11, 28, 0, 1, 0, 1, 1, 0, 0]' : 0.103057}
{'[0, 6, 0, 3, 0, 3, 0, 1, 23, 11, 28, 0, 1, 0, 1, 1, 0, 0]' : 0.102082}
{'[0, 6, 0, 3, 0, 3, 0, 1, 23, 11, 28, 0, 1, 0, 1, 1, 0, 0]' : 0.100331}
{'[0, 6, 0, 3, 0, 3, 0, 1, 23, 11, 28, 0, 1, 0, 1, 1, 0, 0]' : 0.100608}
{'[0, 6, 0, 3, 0, 3, 0, 1, 23, 11, 28, 0, 1, 0, 1, 1, 0, 0]' : 0.104976}
{'[0, 6, 0, 3, 0, 3, 0, 1, 23, 11, 28, 0, 1, 0, 1, 1, 0, 0]' : 0.102526}

out:
 ["{'[0, 6, 0, 3, 0, 3, 0, 1, 23, 11, 28, 0, 1, 0, 1, 1, 0, 0]' : 0.118439}", "{'[0, 6, 0, 3, 0, 3, 0, 1, 23, 11, 28, 0, 1, 0, 1, 1, 0, 0]' : 0.118354}", "{'[0, 6, 0, 3, 0, 3, 0, 1, 23, 11, 28, 0, 1, 0, 1, 1, 0, 0]' : 0.118149}", "{'[0, 6, 0, 3, 0, 3, 0, 1, 23, 11, 28, 0, 1, 0, 1, 1, 0, 0]' : 0.105658}", "{'[0, 6, 0, 3, 0, 3, 0, 1, 23, 11, 28, 0, 1, 0, 1, 1, 0, 0]' : 0.106152}", "{'[0, 6, 0, 3, 0, 3, 0, 1, 23, 11, 28, 0, 1, 0, 1, 1, 0, 0]' : 0.106154}", "{'[0, 6, 0, 3, 0, 3, 0, 1, 23, 11, 28, 0, 1, 0, 1, 1, 0, 0]' : 0.105934}", "{'[0, 6, 0, 3, 0, 3, 0, 1, 23, 11, 28, 0, 1, 0, 1, 1, 0, 0]' : 0.101383}", "{'[0, 6, 0, 3, 0, 3, 0, 1, 23, 11, 28, 0, 1, 0, 1, 1, 0, 0]' : 0.103409}", "{'[0, 6, 0, 3, 0, 3, 0, 1, 23, 11, 28, 0, 1, 0, 1, 1, 0, 0]' : 0.100638}", "{'[0, 6, 0, 3, 0, 3, 0, 1, 23, 11, 28, 0, 1, 0, 1, 1, 0, 0]' : 0.100401}", "{'[0, 6, 0, 3, 0, 3, 0, 1, 23, 11, 28, 0, 1, 0, 1, 1, 0, 0]' : 0.100357}", "{'[0, 6, 0, 3, 0, 3, 0, 1, 23, 11, 28, 0, 1, 0, 1, 1, 0, 0]' : 0.100428}", "{'[0, 6, 0, 3, 0, 3, 0, 1, 23, 11, 28, 0, 1, 0, 1, 1, 0, 0]' : 0.102014}", "{'[0, 6, 0, 3, 0, 3, 0, 1, 23, 11, 28, 0, 1, 0, 1, 1, 0, 0]' : 0.103317}", "{'[0, 6, 0, 3, 0, 3, 0, 1, 23, 11, 28, 0, 1, 0, 1, 1, 0, 0]' : 0.10266}", "{'[0, 6, 0, 3, 0, 3, 0, 1, 23, 11, 28, 0, 1, 0, 1, 1, 0, 0]' : 0.100586}", "{'[0, 6, 0, 3, 0, 3, 0, 1, 23, 11, 28, 0, 1, 0, 1, 1, 0, 0]' : 0.100443}", "{'[0, 6, 0, 3, 0, 3, 0, 1, 23, 11, 28, 0, 1, 0, 1, 1, 0, 0]' : 0.102526}", "{'[0, 6, 0, 3, 0, 3, 0, 1, 23, 11, 28, 0, 1, 0, 1, 1, 0, 0]' : 0.102847}", "{'[0, 6, 0, 3, 0, 3, 0, 1, 23, 11, 28, 0, 1, 0, 1, 1, 0, 0]' : 0.100429}", "{'[0, 6, 0, 3, 0, 3, 0, 1, 23, 11, 28, 0, 1, 0, 1, 1, 0, 0]' : 0.100456}", "{'[0, 6, 0, 3, 0, 3, 0, 1, 23, 11, 28, 0, 1, 0, 1, 1, 0, 0]' : 0.100648}", "{'[0, 6, 0, 3, 0, 3, 0, 1, 23, 11, 28, 0, 1, 0, 1, 1, 0, 0]' : 0.102428}", "{'[0, 6, 0, 3, 0, 3, 0, 1, 23, 11, 28, 0, 1, 0, 1, 1, 0, 0]' : 0.103057}", "{'[0, 6, 0, 3, 0, 3, 0, 1, 23, 11, 28, 0, 1, 0, 1, 1, 0, 0]' : 0.102082}", "{'[0, 6, 0, 3, 0, 3, 0, 1, 23, 11, 28, 0, 1, 0, 1, 1, 0, 0]' : 0.100331}", "{'[0, 6, 0, 3, 0, 3, 0, 1, 23, 11, 28, 0, 1, 0, 1, 1, 0, 0]' : 0.100608}", "{'[0, 6, 0, 3, 0, 3, 0, 1, 23, 11, 28, 0, 1, 0, 1, 1, 0, 0]' : 0.104976}", "{'[0, 6, 0, 3, 0, 3, 0, 1, 23, 11, 28, 0, 1, 0, 1, 1, 0, 0]' : 0.102526}"]
returning from 'run': {'[0, 6, 0, 3, 0, 3, 0, 1, 23, 11, 28, 0, 1, 0, 1, 1, 0, 0]': ([0.118439, 0.118354, 0.118149, 0.105658, 0.106152, 0.106154, 0.105934, 0.101383, 0.103409, 0.100638, 0.100401, 0.100357, 0.100428, 0.102014, 0.103317, 0.10266, 0.100586, 0.100443, 0.102526, 0.102847, 0.100429, 0.100456, 0.100648, 0.102428, 0.103057, 0.102082, 0.100331, 0.100608, 0.104976, 0.102526], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 0, 3, 0, 3, 0, 1, 23, 11, 28, 0, 1, 0, 1, 1, 0, 0]': ([0.118439, 0.118354, 0.118149, 0.105658, 0.106152, 0.106154, 0.105934, 0.101383, 0.103409, 0.100638, 0.100401, 0.100357, 0.100428, 0.102014, 0.103317, 0.10266, 0.100586, 0.100443, 0.102526, 0.102847, 0.100429, 0.100456, 0.100648, 0.102428, 0.103057, 0.102082, 0.100331, 0.100608, 0.104976, 0.102526], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		133
        Multiplications: 	38
        Divisions: 		0
        Logical: 		0
        Reads: 			303
        Writes: 		54
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest43.exe __orio_perftest43.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest43.exe  
Program Test Output: 
{'[1, 6, 6, 1, 0, 4, 1, 0, 2, 0, 28, 1, 0, 1, 1, 0, 0, 1]' : 0.244819}
{'[1, 6, 6, 1, 0, 4, 1, 0, 2, 0, 28, 1, 0, 1, 1, 0, 0, 1]' : 0.236973}
{'[1, 6, 6, 1, 0, 4, 1, 0, 2, 0, 28, 1, 0, 1, 1, 0, 0, 1]' : 0.205583}
{'[1, 6, 6, 1, 0, 4, 1, 0, 2, 0, 28, 1, 0, 1, 1, 0, 0, 1]' : 0.204934}
{'[1, 6, 6, 1, 0, 4, 1, 0, 2, 0, 28, 1, 0, 1, 1, 0, 0, 1]' : 0.207606}
{'[1, 6, 6, 1, 0, 4, 1, 0, 2, 0, 28, 1, 0, 1, 1, 0, 0, 1]' : 0.209584}
{'[1, 6, 6, 1, 0, 4, 1, 0, 2, 0, 28, 1, 0, 1, 1, 0, 0, 1]' : 0.204778}
{'[1, 6, 6, 1, 0, 4, 1, 0, 2, 0, 28, 1, 0, 1, 1, 0, 0, 1]' : 0.21567}
{'[1, 6, 6, 1, 0, 4, 1, 0, 2, 0, 28, 1, 0, 1, 1, 0, 0, 1]' : 0.210529}
{'[1, 6, 6, 1, 0, 4, 1, 0, 2, 0, 28, 1, 0, 1, 1, 0, 0, 1]' : 0.206416}
{'[1, 6, 6, 1, 0, 4, 1, 0, 2, 0, 28, 1, 0, 1, 1, 0, 0, 1]' : 0.204718}
{'[1, 6, 6, 1, 0, 4, 1, 0, 2, 0, 28, 1, 0, 1, 1, 0, 0, 1]' : 0.207859}
{'[1, 6, 6, 1, 0, 4, 1, 0, 2, 0, 28, 1, 0, 1, 1, 0, 0, 1]' : 0.214506}
{'[1, 6, 6, 1, 0, 4, 1, 0, 2, 0, 28, 1, 0, 1, 1, 0, 0, 1]' : 0.211621}
{'[1, 6, 6, 1, 0, 4, 1, 0, 2, 0, 28, 1, 0, 1, 1, 0, 0, 1]' : 0.215553}
{'[1, 6, 6, 1, 0, 4, 1, 0, 2, 0, 28, 1, 0, 1, 1, 0, 0, 1]' : 0.211761}
{'[1, 6, 6, 1, 0, 4, 1, 0, 2, 0, 28, 1, 0, 1, 1, 0, 0, 1]' : 0.212549}
{'[1, 6, 6, 1, 0, 4, 1, 0, 2, 0, 28, 1, 0, 1, 1, 0, 0, 1]' : 0.212644}
{'[1, 6, 6, 1, 0, 4, 1, 0, 2, 0, 28, 1, 0, 1, 1, 0, 0, 1]' : 0.212638}
{'[1, 6, 6, 1, 0, 4, 1, 0, 2, 0, 28, 1, 0, 1, 1, 0, 0, 1]' : 0.210315}
{'[1, 6, 6, 1, 0, 4, 1, 0, 2, 0, 28, 1, 0, 1, 1, 0, 0, 1]' : 0.204811}
{'[1, 6, 6, 1, 0, 4, 1, 0, 2, 0, 28, 1, 0, 1, 1, 0, 0, 1]' : 0.210321}
{'[1, 6, 6, 1, 0, 4, 1, 0, 2, 0, 28, 1, 0, 1, 1, 0, 0, 1]' : 0.20484}
{'[1, 6, 6, 1, 0, 4, 1, 0, 2, 0, 28, 1, 0, 1, 1, 0, 0, 1]' : 0.207345}
{'[1, 6, 6, 1, 0, 4, 1, 0, 2, 0, 28, 1, 0, 1, 1, 0, 0, 1]' : 0.207218}
{'[1, 6, 6, 1, 0, 4, 1, 0, 2, 0, 28, 1, 0, 1, 1, 0, 0, 1]' : 0.205028}
{'[1, 6, 6, 1, 0, 4, 1, 0, 2, 0, 28, 1, 0, 1, 1, 0, 0, 1]' : 0.209855}
{'[1, 6, 6, 1, 0, 4, 1, 0, 2, 0, 28, 1, 0, 1, 1, 0, 0, 1]' : 0.205091}
{'[1, 6, 6, 1, 0, 4, 1, 0, 2, 0, 28, 1, 0, 1, 1, 0, 0, 1]' : 0.211707}
{'[1, 6, 6, 1, 0, 4, 1, 0, 2, 0, 28, 1, 0, 1, 1, 0, 0, 1]' : 0.211602}

out:
 ["{'[1, 6, 6, 1, 0, 4, 1, 0, 2, 0, 28, 1, 0, 1, 1, 0, 0, 1]' : 0.244819}", "{'[1, 6, 6, 1, 0, 4, 1, 0, 2, 0, 28, 1, 0, 1, 1, 0, 0, 1]' : 0.236973}", "{'[1, 6, 6, 1, 0, 4, 1, 0, 2, 0, 28, 1, 0, 1, 1, 0, 0, 1]' : 0.205583}", "{'[1, 6, 6, 1, 0, 4, 1, 0, 2, 0, 28, 1, 0, 1, 1, 0, 0, 1]' : 0.204934}", "{'[1, 6, 6, 1, 0, 4, 1, 0, 2, 0, 28, 1, 0, 1, 1, 0, 0, 1]' : 0.207606}", "{'[1, 6, 6, 1, 0, 4, 1, 0, 2, 0, 28, 1, 0, 1, 1, 0, 0, 1]' : 0.209584}", "{'[1, 6, 6, 1, 0, 4, 1, 0, 2, 0, 28, 1, 0, 1, 1, 0, 0, 1]' : 0.204778}", "{'[1, 6, 6, 1, 0, 4, 1, 0, 2, 0, 28, 1, 0, 1, 1, 0, 0, 1]' : 0.21567}", "{'[1, 6, 6, 1, 0, 4, 1, 0, 2, 0, 28, 1, 0, 1, 1, 0, 0, 1]' : 0.210529}", "{'[1, 6, 6, 1, 0, 4, 1, 0, 2, 0, 28, 1, 0, 1, 1, 0, 0, 1]' : 0.206416}", "{'[1, 6, 6, 1, 0, 4, 1, 0, 2, 0, 28, 1, 0, 1, 1, 0, 0, 1]' : 0.204718}", "{'[1, 6, 6, 1, 0, 4, 1, 0, 2, 0, 28, 1, 0, 1, 1, 0, 0, 1]' : 0.207859}", "{'[1, 6, 6, 1, 0, 4, 1, 0, 2, 0, 28, 1, 0, 1, 1, 0, 0, 1]' : 0.214506}", "{'[1, 6, 6, 1, 0, 4, 1, 0, 2, 0, 28, 1, 0, 1, 1, 0, 0, 1]' : 0.211621}", "{'[1, 6, 6, 1, 0, 4, 1, 0, 2, 0, 28, 1, 0, 1, 1, 0, 0, 1]' : 0.215553}", "{'[1, 6, 6, 1, 0, 4, 1, 0, 2, 0, 28, 1, 0, 1, 1, 0, 0, 1]' : 0.211761}", "{'[1, 6, 6, 1, 0, 4, 1, 0, 2, 0, 28, 1, 0, 1, 1, 0, 0, 1]' : 0.212549}", "{'[1, 6, 6, 1, 0, 4, 1, 0, 2, 0, 28, 1, 0, 1, 1, 0, 0, 1]' : 0.212644}", "{'[1, 6, 6, 1, 0, 4, 1, 0, 2, 0, 28, 1, 0, 1, 1, 0, 0, 1]' : 0.212638}", "{'[1, 6, 6, 1, 0, 4, 1, 0, 2, 0, 28, 1, 0, 1, 1, 0, 0, 1]' : 0.210315}", "{'[1, 6, 6, 1, 0, 4, 1, 0, 2, 0, 28, 1, 0, 1, 1, 0, 0, 1]' : 0.204811}", "{'[1, 6, 6, 1, 0, 4, 1, 0, 2, 0, 28, 1, 0, 1, 1, 0, 0, 1]' : 0.210321}", "{'[1, 6, 6, 1, 0, 4, 1, 0, 2, 0, 28, 1, 0, 1, 1, 0, 0, 1]' : 0.20484}", "{'[1, 6, 6, 1, 0, 4, 1, 0, 2, 0, 28, 1, 0, 1, 1, 0, 0, 1]' : 0.207345}", "{'[1, 6, 6, 1, 0, 4, 1, 0, 2, 0, 28, 1, 0, 1, 1, 0, 0, 1]' : 0.207218}", "{'[1, 6, 6, 1, 0, 4, 1, 0, 2, 0, 28, 1, 0, 1, 1, 0, 0, 1]' : 0.205028}", "{'[1, 6, 6, 1, 0, 4, 1, 0, 2, 0, 28, 1, 0, 1, 1, 0, 0, 1]' : 0.209855}", "{'[1, 6, 6, 1, 0, 4, 1, 0, 2, 0, 28, 1, 0, 1, 1, 0, 0, 1]' : 0.205091}", "{'[1, 6, 6, 1, 0, 4, 1, 0, 2, 0, 28, 1, 0, 1, 1, 0, 0, 1]' : 0.211707}", "{'[1, 6, 6, 1, 0, 4, 1, 0, 2, 0, 28, 1, 0, 1, 1, 0, 0, 1]' : 0.211602}"]
returning from 'run': {'[1, 6, 6, 1, 0, 4, 1, 0, 2, 0, 28, 1, 0, 1, 1, 0, 0, 1]': ([0.244819, 0.236973, 0.205583, 0.204934, 0.207606, 0.209584, 0.204778, 0.21567, 0.210529, 0.206416, 0.204718, 0.207859, 0.214506, 0.211621, 0.215553, 0.211761, 0.212549, 0.212644, 0.212638, 0.210315, 0.204811, 0.210321, 0.20484, 0.207345, 0.207218, 0.205028, 0.209855, 0.205091, 0.211707, 0.211602], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 6, 6, 1, 0, 4, 1, 0, 2, 0, 28, 1, 0, 1, 1, 0, 0, 1]': ([0.244819, 0.236973, 0.205583, 0.204934, 0.207606, 0.209584, 0.204778, 0.21567, 0.210529, 0.206416, 0.204718, 0.207859, 0.214506, 0.211621, 0.215553, 0.211761, 0.212549, 0.212644, 0.212638, 0.210315, 0.204811, 0.210321, 0.20484, 0.207345, 0.207218, 0.205028, 0.209855, 0.205091, 0.211707, 0.211602], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	3
        Additions: 		4236
        Multiplications: 	2112
        Divisions: 		0
        Logical: 		0
        Reads: 			7839
        Writes: 		1202
        Comparisons:		9
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest44.exe __orio_perftest44.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest44.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest44.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest44.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest44.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	51
        Max loop nest depth: 	5
        Additions: 		2905
        Multiplications: 	836
        Divisions: 		0
        Logical: 		0
        Reads: 			4655
        Writes: 		555
        Comparisons:		51
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest45.exe __orio_perftest45.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest45.exe  
Program Test Output: 
{'[6, 6, 2, 0, 4, 2, 0, 0, 15, 12, 0, 8, 1, 0, 1, 0, 1, 0]' : 0.117637}
{'[6, 6, 2, 0, 4, 2, 0, 0, 15, 12, 0, 8, 1, 0, 1, 0, 1, 0]' : 0.117904}
{'[6, 6, 2, 0, 4, 2, 0, 0, 15, 12, 0, 8, 1, 0, 1, 0, 1, 0]' : 0.117447}
{'[6, 6, 2, 0, 4, 2, 0, 0, 15, 12, 0, 8, 1, 0, 1, 0, 1, 0]' : 0.115361}
{'[6, 6, 2, 0, 4, 2, 0, 0, 15, 12, 0, 8, 1, 0, 1, 0, 1, 0]' : 0.115442}
{'[6, 6, 2, 0, 4, 2, 0, 0, 15, 12, 0, 8, 1, 0, 1, 0, 1, 0]' : 0.116459}
{'[6, 6, 2, 0, 4, 2, 0, 0, 15, 12, 0, 8, 1, 0, 1, 0, 1, 0]' : 0.118489}
{'[6, 6, 2, 0, 4, 2, 0, 0, 15, 12, 0, 8, 1, 0, 1, 0, 1, 0]' : 0.117621}
{'[6, 6, 2, 0, 4, 2, 0, 0, 15, 12, 0, 8, 1, 0, 1, 0, 1, 0]' : 0.115645}
{'[6, 6, 2, 0, 4, 2, 0, 0, 15, 12, 0, 8, 1, 0, 1, 0, 1, 0]' : 0.115885}
{'[6, 6, 2, 0, 4, 2, 0, 0, 15, 12, 0, 8, 1, 0, 1, 0, 1, 0]' : 0.118793}
{'[6, 6, 2, 0, 4, 2, 0, 0, 15, 12, 0, 8, 1, 0, 1, 0, 1, 0]' : 0.116218}
{'[6, 6, 2, 0, 4, 2, 0, 0, 15, 12, 0, 8, 1, 0, 1, 0, 1, 0]' : 0.115455}
{'[6, 6, 2, 0, 4, 2, 0, 0, 15, 12, 0, 8, 1, 0, 1, 0, 1, 0]' : 0.115269}
{'[6, 6, 2, 0, 4, 2, 0, 0, 15, 12, 0, 8, 1, 0, 1, 0, 1, 0]' : 0.117703}
{'[6, 6, 2, 0, 4, 2, 0, 0, 15, 12, 0, 8, 1, 0, 1, 0, 1, 0]' : 0.118742}
{'[6, 6, 2, 0, 4, 2, 0, 0, 15, 12, 0, 8, 1, 0, 1, 0, 1, 0]' : 0.11611}
{'[6, 6, 2, 0, 4, 2, 0, 0, 15, 12, 0, 8, 1, 0, 1, 0, 1, 0]' : 0.116197}
{'[6, 6, 2, 0, 4, 2, 0, 0, 15, 12, 0, 8, 1, 0, 1, 0, 1, 0]' : 0.120503}
{'[6, 6, 2, 0, 4, 2, 0, 0, 15, 12, 0, 8, 1, 0, 1, 0, 1, 0]' : 0.119734}
{'[6, 6, 2, 0, 4, 2, 0, 0, 15, 12, 0, 8, 1, 0, 1, 0, 1, 0]' : 0.11566}
{'[6, 6, 2, 0, 4, 2, 0, 0, 15, 12, 0, 8, 1, 0, 1, 0, 1, 0]' : 0.115247}
{'[6, 6, 2, 0, 4, 2, 0, 0, 15, 12, 0, 8, 1, 0, 1, 0, 1, 0]' : 0.115885}
{'[6, 6, 2, 0, 4, 2, 0, 0, 15, 12, 0, 8, 1, 0, 1, 0, 1, 0]' : 0.118763}
{'[6, 6, 2, 0, 4, 2, 0, 0, 15, 12, 0, 8, 1, 0, 1, 0, 1, 0]' : 0.11808}
{'[6, 6, 2, 0, 4, 2, 0, 0, 15, 12, 0, 8, 1, 0, 1, 0, 1, 0]' : 0.115122}
{'[6, 6, 2, 0, 4, 2, 0, 0, 15, 12, 0, 8, 1, 0, 1, 0, 1, 0]' : 0.116044}
{'[6, 6, 2, 0, 4, 2, 0, 0, 15, 12, 0, 8, 1, 0, 1, 0, 1, 0]' : 0.122572}
{'[6, 6, 2, 0, 4, 2, 0, 0, 15, 12, 0, 8, 1, 0, 1, 0, 1, 0]' : 0.119443}
{'[6, 6, 2, 0, 4, 2, 0, 0, 15, 12, 0, 8, 1, 0, 1, 0, 1, 0]' : 0.115517}

out:
 ["{'[6, 6, 2, 0, 4, 2, 0, 0, 15, 12, 0, 8, 1, 0, 1, 0, 1, 0]' : 0.117637}", "{'[6, 6, 2, 0, 4, 2, 0, 0, 15, 12, 0, 8, 1, 0, 1, 0, 1, 0]' : 0.117904}", "{'[6, 6, 2, 0, 4, 2, 0, 0, 15, 12, 0, 8, 1, 0, 1, 0, 1, 0]' : 0.117447}", "{'[6, 6, 2, 0, 4, 2, 0, 0, 15, 12, 0, 8, 1, 0, 1, 0, 1, 0]' : 0.115361}", "{'[6, 6, 2, 0, 4, 2, 0, 0, 15, 12, 0, 8, 1, 0, 1, 0, 1, 0]' : 0.115442}", "{'[6, 6, 2, 0, 4, 2, 0, 0, 15, 12, 0, 8, 1, 0, 1, 0, 1, 0]' : 0.116459}", "{'[6, 6, 2, 0, 4, 2, 0, 0, 15, 12, 0, 8, 1, 0, 1, 0, 1, 0]' : 0.118489}", "{'[6, 6, 2, 0, 4, 2, 0, 0, 15, 12, 0, 8, 1, 0, 1, 0, 1, 0]' : 0.117621}", "{'[6, 6, 2, 0, 4, 2, 0, 0, 15, 12, 0, 8, 1, 0, 1, 0, 1, 0]' : 0.115645}", "{'[6, 6, 2, 0, 4, 2, 0, 0, 15, 12, 0, 8, 1, 0, 1, 0, 1, 0]' : 0.115885}", "{'[6, 6, 2, 0, 4, 2, 0, 0, 15, 12, 0, 8, 1, 0, 1, 0, 1, 0]' : 0.118793}", "{'[6, 6, 2, 0, 4, 2, 0, 0, 15, 12, 0, 8, 1, 0, 1, 0, 1, 0]' : 0.116218}", "{'[6, 6, 2, 0, 4, 2, 0, 0, 15, 12, 0, 8, 1, 0, 1, 0, 1, 0]' : 0.115455}", "{'[6, 6, 2, 0, 4, 2, 0, 0, 15, 12, 0, 8, 1, 0, 1, 0, 1, 0]' : 0.115269}", "{'[6, 6, 2, 0, 4, 2, 0, 0, 15, 12, 0, 8, 1, 0, 1, 0, 1, 0]' : 0.117703}", "{'[6, 6, 2, 0, 4, 2, 0, 0, 15, 12, 0, 8, 1, 0, 1, 0, 1, 0]' : 0.118742}", "{'[6, 6, 2, 0, 4, 2, 0, 0, 15, 12, 0, 8, 1, 0, 1, 0, 1, 0]' : 0.11611}", "{'[6, 6, 2, 0, 4, 2, 0, 0, 15, 12, 0, 8, 1, 0, 1, 0, 1, 0]' : 0.116197}", "{'[6, 6, 2, 0, 4, 2, 0, 0, 15, 12, 0, 8, 1, 0, 1, 0, 1, 0]' : 0.120503}", "{'[6, 6, 2, 0, 4, 2, 0, 0, 15, 12, 0, 8, 1, 0, 1, 0, 1, 0]' : 0.119734}", "{'[6, 6, 2, 0, 4, 2, 0, 0, 15, 12, 0, 8, 1, 0, 1, 0, 1, 0]' : 0.11566}", "{'[6, 6, 2, 0, 4, 2, 0, 0, 15, 12, 0, 8, 1, 0, 1, 0, 1, 0]' : 0.115247}", "{'[6, 6, 2, 0, 4, 2, 0, 0, 15, 12, 0, 8, 1, 0, 1, 0, 1, 0]' : 0.115885}", "{'[6, 6, 2, 0, 4, 2, 0, 0, 15, 12, 0, 8, 1, 0, 1, 0, 1, 0]' : 0.118763}", "{'[6, 6, 2, 0, 4, 2, 0, 0, 15, 12, 0, 8, 1, 0, 1, 0, 1, 0]' : 0.11808}", "{'[6, 6, 2, 0, 4, 2, 0, 0, 15, 12, 0, 8, 1, 0, 1, 0, 1, 0]' : 0.115122}", "{'[6, 6, 2, 0, 4, 2, 0, 0, 15, 12, 0, 8, 1, 0, 1, 0, 1, 0]' : 0.116044}", "{'[6, 6, 2, 0, 4, 2, 0, 0, 15, 12, 0, 8, 1, 0, 1, 0, 1, 0]' : 0.122572}", "{'[6, 6, 2, 0, 4, 2, 0, 0, 15, 12, 0, 8, 1, 0, 1, 0, 1, 0]' : 0.119443}", "{'[6, 6, 2, 0, 4, 2, 0, 0, 15, 12, 0, 8, 1, 0, 1, 0, 1, 0]' : 0.115517}"]
returning from 'run': {'[6, 6, 2, 0, 4, 2, 0, 0, 15, 12, 0, 8, 1, 0, 1, 0, 1, 0]': ([0.117637, 0.117904, 0.117447, 0.115361, 0.115442, 0.116459, 0.118489, 0.117621, 0.115645, 0.115885, 0.118793, 0.116218, 0.115455, 0.115269, 0.117703, 0.118742, 0.11611, 0.116197, 0.120503, 0.119734, 0.11566, 0.115247, 0.115885, 0.118763, 0.11808, 0.115122, 0.116044, 0.122572, 0.119443, 0.115517], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 2, 0, 4, 2, 0, 0, 15, 12, 0, 8, 1, 0, 1, 0, 1, 0]': ([0.117637, 0.117904, 0.117447, 0.115361, 0.115442, 0.116459, 0.118489, 0.117621, 0.115645, 0.115885, 0.118793, 0.116218, 0.115455, 0.115269, 0.117703, 0.118742, 0.11611, 0.116197, 0.120503, 0.119734, 0.11566, 0.115247, 0.115885, 0.118763, 0.11808, 0.115122, 0.116044, 0.122572, 0.119443, 0.115517], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		1076
        Multiplications: 	496
        Divisions: 		0
        Logical: 		0
        Reads: 			2048
        Writes: 		344
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest46.exe __orio_perftest46.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest46.exe  
Program Test Output: 
{'[0, 1, 2, 0, 2, 0, 1, 1, 18, 26, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.103933}
{'[0, 1, 2, 0, 2, 0, 1, 1, 18, 26, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.104938}
{'[0, 1, 2, 0, 2, 0, 1, 1, 18, 26, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.101867}
{'[0, 1, 2, 0, 2, 0, 1, 1, 18, 26, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.103893}
{'[0, 1, 2, 0, 2, 0, 1, 1, 18, 26, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.101487}
{'[0, 1, 2, 0, 2, 0, 1, 1, 18, 26, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.10113}
{'[0, 1, 2, 0, 2, 0, 1, 1, 18, 26, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.103058}
{'[0, 1, 2, 0, 2, 0, 1, 1, 18, 26, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.104048}
{'[0, 1, 2, 0, 2, 0, 1, 1, 18, 26, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.103899}
{'[0, 1, 2, 0, 2, 0, 1, 1, 18, 26, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.10402}
{'[0, 1, 2, 0, 2, 0, 1, 1, 18, 26, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.103942}
{'[0, 1, 2, 0, 2, 0, 1, 1, 18, 26, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.104184}
{'[0, 1, 2, 0, 2, 0, 1, 1, 18, 26, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.103916}
{'[0, 1, 2, 0, 2, 0, 1, 1, 18, 26, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.104979}
{'[0, 1, 2, 0, 2, 0, 1, 1, 18, 26, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.102429}
{'[0, 1, 2, 0, 2, 0, 1, 1, 18, 26, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.101236}
{'[0, 1, 2, 0, 2, 0, 1, 1, 18, 26, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.103747}
{'[0, 1, 2, 0, 2, 0, 1, 1, 18, 26, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.104152}
{'[0, 1, 2, 0, 2, 0, 1, 1, 18, 26, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.104106}
{'[0, 1, 2, 0, 2, 0, 1, 1, 18, 26, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.103866}
{'[0, 1, 2, 0, 2, 0, 1, 1, 18, 26, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.104413}
{'[0, 1, 2, 0, 2, 0, 1, 1, 18, 26, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.104032}
{'[0, 1, 2, 0, 2, 0, 1, 1, 18, 26, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.104017}
{'[0, 1, 2, 0, 2, 0, 1, 1, 18, 26, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.104428}
{'[0, 1, 2, 0, 2, 0, 1, 1, 18, 26, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.104156}
{'[0, 1, 2, 0, 2, 0, 1, 1, 18, 26, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.104102}
{'[0, 1, 2, 0, 2, 0, 1, 1, 18, 26, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.103868}
{'[0, 1, 2, 0, 2, 0, 1, 1, 18, 26, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.104115}
{'[0, 1, 2, 0, 2, 0, 1, 1, 18, 26, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.104074}
{'[0, 1, 2, 0, 2, 0, 1, 1, 18, 26, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.103966}

out:
 ["{'[0, 1, 2, 0, 2, 0, 1, 1, 18, 26, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.103933}", "{'[0, 1, 2, 0, 2, 0, 1, 1, 18, 26, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.104938}", "{'[0, 1, 2, 0, 2, 0, 1, 1, 18, 26, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.101867}", "{'[0, 1, 2, 0, 2, 0, 1, 1, 18, 26, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.103893}", "{'[0, 1, 2, 0, 2, 0, 1, 1, 18, 26, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.101487}", "{'[0, 1, 2, 0, 2, 0, 1, 1, 18, 26, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.10113}", "{'[0, 1, 2, 0, 2, 0, 1, 1, 18, 26, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.103058}", "{'[0, 1, 2, 0, 2, 0, 1, 1, 18, 26, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.104048}", "{'[0, 1, 2, 0, 2, 0, 1, 1, 18, 26, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.103899}", "{'[0, 1, 2, 0, 2, 0, 1, 1, 18, 26, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.10402}", "{'[0, 1, 2, 0, 2, 0, 1, 1, 18, 26, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.103942}", "{'[0, 1, 2, 0, 2, 0, 1, 1, 18, 26, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.104184}", "{'[0, 1, 2, 0, 2, 0, 1, 1, 18, 26, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.103916}", "{'[0, 1, 2, 0, 2, 0, 1, 1, 18, 26, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.104979}", "{'[0, 1, 2, 0, 2, 0, 1, 1, 18, 26, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.102429}", "{'[0, 1, 2, 0, 2, 0, 1, 1, 18, 26, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.101236}", "{'[0, 1, 2, 0, 2, 0, 1, 1, 18, 26, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.103747}", "{'[0, 1, 2, 0, 2, 0, 1, 1, 18, 26, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.104152}", "{'[0, 1, 2, 0, 2, 0, 1, 1, 18, 26, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.104106}", "{'[0, 1, 2, 0, 2, 0, 1, 1, 18, 26, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.103866}", "{'[0, 1, 2, 0, 2, 0, 1, 1, 18, 26, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.104413}", "{'[0, 1, 2, 0, 2, 0, 1, 1, 18, 26, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.104032}", "{'[0, 1, 2, 0, 2, 0, 1, 1, 18, 26, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.104017}", "{'[0, 1, 2, 0, 2, 0, 1, 1, 18, 26, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.104428}", "{'[0, 1, 2, 0, 2, 0, 1, 1, 18, 26, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.104156}", "{'[0, 1, 2, 0, 2, 0, 1, 1, 18, 26, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.104102}", "{'[0, 1, 2, 0, 2, 0, 1, 1, 18, 26, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.103868}", "{'[0, 1, 2, 0, 2, 0, 1, 1, 18, 26, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.104115}", "{'[0, 1, 2, 0, 2, 0, 1, 1, 18, 26, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.104074}", "{'[0, 1, 2, 0, 2, 0, 1, 1, 18, 26, 28, 0, 1, 0, 0, 1, 0, 0]' : 0.103966}"]
returning from 'run': {'[0, 1, 2, 0, 2, 0, 1, 1, 18, 26, 28, 0, 1, 0, 0, 1, 0, 0]': ([0.103933, 0.104938, 0.101867, 0.103893, 0.101487, 0.10113, 0.103058, 0.104048, 0.103899, 0.10402, 0.103942, 0.104184, 0.103916, 0.104979, 0.102429, 0.101236, 0.103747, 0.104152, 0.104106, 0.103866, 0.104413, 0.104032, 0.104017, 0.104428, 0.104156, 0.104102, 0.103868, 0.104115, 0.104074, 0.103966], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 1, 2, 0, 2, 0, 1, 1, 18, 26, 28, 0, 1, 0, 0, 1, 0, 0]': ([0.103933, 0.104938, 0.101867, 0.103893, 0.101487, 0.10113, 0.103058, 0.104048, 0.103899, 0.10402, 0.103942, 0.104184, 0.103916, 0.104979, 0.102429, 0.101236, 0.103747, 0.104152, 0.104106, 0.103866, 0.104413, 0.104032, 0.104017, 0.104428, 0.104156, 0.104102, 0.103868, 0.104115, 0.104074, 0.103966], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Complete design, with measurements:
     T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
254     0    6    6    0    5    0       0       1    0   7  10   0    1    1
264     5    5    5    0    0    4       0       0    0  29   0  22    0    2
318     0    1    6    2    5    0       0       0    2   0  29   3    0    2
421     0    6    3    2    4    6       0       0   29  28   2   0    0    0
428     0    6    4    0    6    3       0       1    4   4  15   0    0    0
589     3    1    3    0    0    2       0       1   23  29   6   0    0    0
642     2    6    6    1    0    6       1       1   14  29   0   3    1    0
822     0    0    2    5    1    2       0       1    6  27   0  13    0    1
888     0    4    4    1    3    6       0       1   22   0   0   1    2    0
981     1    0    2    3    3    3       1       0    0   1  10   0    2    0
1044    0    0    3    4    0    5       1       0    0   0  16   6    0    1
1120    2    2    6    6    5    6       1       0    6  10   0   2    0    0
1220    2    3    4    6    6    0       1       0    0  26   0  29    2    0
1351    3    0    0    6    5    1       0       1   11   0   0   0    0    0
1379    3    2    0    5    4    6       0       1    0   0  24  15    0    0
1725    0    0    4    6    1    6       0       0   20   1   0  29    0    0
1998    3    6    2    1    4    5       0       1    3   0  21  24    1    1
2111    0    2    4    2    6    2       1       0    0   0  21   0    1    1
2192    6    2    0    0    5    3       0       0   25   3   0   3    0    1
2486    6    0    6    0    4    5       0       0   16   0  21  29    2    0
2568    6    0    3    6    6    6       1       1   15  28   9   0    1    0
2650    5    4    5    3    3    0       1       1    8   0   4  27    0    0
2870    0    4    0    6    6    3       1       1   27   0   3   6    1    1
2884    1    1    5    1    0    4       0       0   23   5   0  26    1    0
3100    3    3    3    0    3    1       0       1    0   0   9  10    0    2
3188    4    1    0    0    6    6       0       1    0  12   0   0    0    1
3300    1    6    1    0    6    6       1       0   29   0  27  27    0    0
3408    3    1    2    6    1    1       0       0   26  28  29   0    0    1
3417    1    5    0    5    0    0       0       0    7   0   2   3    1    0
3426    5    4    6    5    2    0       1       0    0   0  27   7    0    0
3584    3    2    6    6    0    6       0       1   13   9  29   0    2    0
3695    4    6    1    2    5    0       0       0   26  28   0   1    2    0
3778    2    4    6    2    2    0       0       1    4   3   0  29    0    1
3972    0    6    0    3    0    3       0       1   23  11  28   0    1    0
3988    1    6    6    1    0    4       1       0    2   0  28   1    0    1
4341    6    6    2    0    4    2       0       0   15  12   0   8    1    0
4377    0    1    2    0    2    0       1       1   18  26  28   0    1    0
     RT_K SCR VEC1 VEC2  cost_mean
254     0   1    0    1 0.10374330
264     0   1    0    0 0.18208500
318     0   0    0    0 0.20895630
421     2   1    1    0 0.14605853
428     0   0    0    1 0.13666860
589     1   0    1    0 0.28180777
642     0   0    1    0 0.12715030
822     1   1    1    1 0.22913557
888     0   0    1    1 0.14772360
981     0   0    1    0 0.22265077
1044    0   1    1    0 0.17747933
1120    2   1    0    0 0.17813233
1220    0   0    1    0 0.20735887
1351    0   1    1    1 0.21187170
1379    0   0    0    1 0.21562627
1725    1   0    0    0 0.21759607
1998    0   0    1    1 0.11677553
2111    0   1    1    1 0.09150610
2192    0   1    1    0 0.09546733
2486    0   1    1    0 0.22494813
2568    1   1    0    1 0.10437923
2650    0   1    0    0 0.21982153
2870    0   0    0    0 0.10916650
2884    0   1    0    1 0.10542187
3100    0   1    0    0 0.23240900
3188    1   1    1    1 0.13189080
3300    2   0    1    1 0.25213320
3408    0   0    0    0 0.21229957
3417    1   1    1    1 0.09581214
3426    1   1    1    1 0.18053880
3584    0   1    1    1 0.22856790
3695    0   1    0    1 0.15736633
3778    1   0    1    0 0.14359970
3972    1   1    0    0 0.10391300
3988    1   0    0    1 0.21129580
4341    1   0    1    0 0.11716490
4377    0   1    0    0 0.10366670

Heteroscedasticity Test p-value: 0.932683077501
Regression Step:                Df   Sum Sq  Mean Sq F value Pr(>F)  
T1_I             1 0.000894 0.000894   0.530 0.4991  
T1_J             1 0.010530 0.010530   6.247 0.0545 .
T1_K             1 0.003829 0.003829   2.272 0.1921  
T2_I             1 0.000804 0.000804   0.477 0.5205  
T2_J             1 0.001914 0.001914   1.135 0.3354  
T2_K             1 0.000008 0.000008   0.005 0.9474  
ACOPY_x          1 0.000147 0.000147   0.087 0.7795  
ACOPY_y          1 0.000214 0.000214   0.127 0.7363  
U1_I             1 0.000090 0.000090   0.053 0.8265  
U_I              1 0.000088 0.000088   0.052 0.8287  
U_J              1 0.003002 0.003002   1.781 0.2395  
U_K              1 0.006177 0.006177   3.665 0.1138  
RT_I             1 0.003735 0.003735   2.216 0.1968  
RT_J             1 0.001047 0.001047   0.621 0.4664  
RT_K             1 0.000341 0.000341   0.202 0.6718  
SCR              1 0.008409 0.008409   4.989 0.0758 .
VEC1             1 0.000448 0.000448   0.266 0.6281  
VEC2             1 0.000036 0.000036   0.022 0.8891  
I(1/(1 + T1_I))  1 0.005812 0.005812   3.448 0.1224  
I(1/(1 + T1_J))  1 0.003896 0.003896   2.311 0.1889  
I(1/(1 + T1_K))  1 0.002340 0.002340   1.388 0.2917  
I(1/(1 + T2_I))  1 0.001948 0.001948   1.156 0.3314  
I(1/(1 + T2_J))  1 0.000006 0.000006   0.003 0.9564  
I(1/(1 + T2_K))  1 0.000017 0.000017   0.010 0.9246  
I(1/(1 + U1_I))  1 0.003569 0.003569   2.118 0.2054  
I(1/(1 + U_I))   1 0.010648 0.010648   6.317 0.0536 .
I(1/(1 + U_J))   1 0.001164 0.001164   0.691 0.4438  
I(1/(1 + U_K))   1 0.000218 0.000218   0.129 0.7337  
I(1/(1 + RT_I))  1 0.024336 0.024336  14.437 0.0126 *
I(1/(1 + RT_J))  1 0.000383 0.000383   0.227 0.6535  
I(1/(1 + RT_K))  1 0.001164 0.001164   0.691 0.4438  
Residuals        5 0.008428 0.001686                 
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Predicting Best
Generating valid search space of size 4600 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Valid coordinates: 920
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Valid coordinates: 1840
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Tested coordinates: 110000
Valid coordinates: 2760
Tested coordinates: 120000
Tested coordinates: 130000
Tested coordinates: 140000
Valid coordinates: 3680
Tested coordinates: 150000
Tested coordinates: 160000
Tested coordinates: 170000
Tested coordinates: 180000
Valid coordinates: 4600
Valid/Tested configurations: 4600/187851
Generated Search Space:
NULL
Identical predictions (tol = 1e-5): 1
Getting Best from Design
Response: ['cost_mean']
Design Names:  [1] "T1_I"      "T1_J"      "T1_K"      "T2_I"      "T2_J"      "T2_K"     
 [7] "ACOPY_x"   "ACOPY_y"   "U1_I"      "U_I"       "U_J"       "U_K"      
[13] "RT_I"      "RT_J"      "RT_K"      "SCR"       "VEC1"      "VEC2"     
[19] "cost_mean"

Design Response:       cost_mean
254  0.10374330
264  0.18208500
318  0.20895630
421  0.14605853
428  0.13666860
589  0.28180777
642  0.12715030
822  0.22913557
888  0.14772360
981  0.22265077
1044 0.17747933
1120 0.17813233
1220 0.20735887
1351 0.21187170
1379 0.21562627
1725 0.21759607
1998 0.11677553
2111 0.09150610
2192 0.09546733
2486 0.22494813
2568 0.10437923
2650 0.21982153
2870 0.10916650
2884 0.10542187
3100 0.23240900
3188 0.13189080
3300 0.25213320
3408 0.21229957
3417 0.09581214
3426 0.18053880
3584 0.22856790
3695 0.15736633
3778 0.14359970
3972 0.10391300
3988 0.21129580
4341 0.11716490
4377 0.10366670

Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Getting fixed variables
Pruning Model
Best Predicted:     T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
382    1    3    2    1    2    6       1       0   12   4   0  17    1    0
    RT_K SCR VEC1 VEC2
382    0   1    1    0

Best From Design: [0, 2, 4, 2, 6, 2, 1, 0, 0, 0, 21, 0, 1, 1, 0, 1, 1, 1]
Pruned Factors: ['T1_I', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'VEC1', 'VEC2']
Fixed Factors: {'T1_J': 3, 'SCR': 1}
Length of requested configs: 1
Result was on Database, Returning Now
Starting Point (-O3):
0.16283083333333334
Predicted Best Point:
[1, 3, 2, 1, 2, 6, 1, 0, 12, 4, 0, 17, 1, 0, 0, 1, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	35
        Max loop nest depth: 	6
        Additions: 		1304
        Multiplications: 	560
        Divisions: 		0
        Logical: 		0
        Reads: 			2717
        Writes: 		525
        Comparisons:		35
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest47.exe __orio_perftest47.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest47.exe  
Program Test Output: 
{'[1, 3, 2, 1, 2, 6, 1, 0, 12, 4, 0, 17, 1, 0, 0, 1, 1, 0]' : 0.111062}
{'[1, 3, 2, 1, 2, 6, 1, 0, 12, 4, 0, 17, 1, 0, 0, 1, 1, 0]' : 0.111041}
{'[1, 3, 2, 1, 2, 6, 1, 0, 12, 4, 0, 17, 1, 0, 0, 1, 1, 0]' : 0.110919}
{'[1, 3, 2, 1, 2, 6, 1, 0, 12, 4, 0, 17, 1, 0, 0, 1, 1, 0]' : 0.101073}
{'[1, 3, 2, 1, 2, 6, 1, 0, 12, 4, 0, 17, 1, 0, 0, 1, 1, 0]' : 0.0958529}
{'[1, 3, 2, 1, 2, 6, 1, 0, 12, 4, 0, 17, 1, 0, 0, 1, 1, 0]' : 0.0959351}
{'[1, 3, 2, 1, 2, 6, 1, 0, 12, 4, 0, 17, 1, 0, 0, 1, 1, 0]' : 0.095814}
{'[1, 3, 2, 1, 2, 6, 1, 0, 12, 4, 0, 17, 1, 0, 0, 1, 1, 0]' : 0.0958591}
{'[1, 3, 2, 1, 2, 6, 1, 0, 12, 4, 0, 17, 1, 0, 0, 1, 1, 0]' : 0.0958281}
{'[1, 3, 2, 1, 2, 6, 1, 0, 12, 4, 0, 17, 1, 0, 0, 1, 1, 0]' : 0.0959282}
{'[1, 3, 2, 1, 2, 6, 1, 0, 12, 4, 0, 17, 1, 0, 0, 1, 1, 0]' : 0.0962172}
{'[1, 3, 2, 1, 2, 6, 1, 0, 12, 4, 0, 17, 1, 0, 0, 1, 1, 0]' : 0.095973}
{'[1, 3, 2, 1, 2, 6, 1, 0, 12, 4, 0, 17, 1, 0, 0, 1, 1, 0]' : 0.09606}
{'[1, 3, 2, 1, 2, 6, 1, 0, 12, 4, 0, 17, 1, 0, 0, 1, 1, 0]' : 0.0959558}
{'[1, 3, 2, 1, 2, 6, 1, 0, 12, 4, 0, 17, 1, 0, 0, 1, 1, 0]' : 0.0961001}
{'[1, 3, 2, 1, 2, 6, 1, 0, 12, 4, 0, 17, 1, 0, 0, 1, 1, 0]' : 0.0959802}
{'[1, 3, 2, 1, 2, 6, 1, 0, 12, 4, 0, 17, 1, 0, 0, 1, 1, 0]' : 0.095963}
{'[1, 3, 2, 1, 2, 6, 1, 0, 12, 4, 0, 17, 1, 0, 0, 1, 1, 0]' : 0.0962009}
{'[1, 3, 2, 1, 2, 6, 1, 0, 12, 4, 0, 17, 1, 0, 0, 1, 1, 0]' : 0.095958}
{'[1, 3, 2, 1, 2, 6, 1, 0, 12, 4, 0, 17, 1, 0, 0, 1, 1, 0]' : 0.096565}
{'[1, 3, 2, 1, 2, 6, 1, 0, 12, 4, 0, 17, 1, 0, 0, 1, 1, 0]' : 0.0959239}
{'[1, 3, 2, 1, 2, 6, 1, 0, 12, 4, 0, 17, 1, 0, 0, 1, 1, 0]' : 0.095998}
{'[1, 3, 2, 1, 2, 6, 1, 0, 12, 4, 0, 17, 1, 0, 0, 1, 1, 0]' : 0.0959492}
{'[1, 3, 2, 1, 2, 6, 1, 0, 12, 4, 0, 17, 1, 0, 0, 1, 1, 0]' : 0.095998}
{'[1, 3, 2, 1, 2, 6, 1, 0, 12, 4, 0, 17, 1, 0, 0, 1, 1, 0]' : 0.09637}
{'[1, 3, 2, 1, 2, 6, 1, 0, 12, 4, 0, 17, 1, 0, 0, 1, 1, 0]' : 0.0960541}
{'[1, 3, 2, 1, 2, 6, 1, 0, 12, 4, 0, 17, 1, 0, 0, 1, 1, 0]' : 0.095989}
{'[1, 3, 2, 1, 2, 6, 1, 0, 12, 4, 0, 17, 1, 0, 0, 1, 1, 0]' : 0.095999}
{'[1, 3, 2, 1, 2, 6, 1, 0, 12, 4, 0, 17, 1, 0, 0, 1, 1, 0]' : 0.0959399}
{'[1, 3, 2, 1, 2, 6, 1, 0, 12, 4, 0, 17, 1, 0, 0, 1, 1, 0]' : 0.095957}

out:
 ["{'[1, 3, 2, 1, 2, 6, 1, 0, 12, 4, 0, 17, 1, 0, 0, 1, 1, 0]' : 0.111062}", "{'[1, 3, 2, 1, 2, 6, 1, 0, 12, 4, 0, 17, 1, 0, 0, 1, 1, 0]' : 0.111041}", "{'[1, 3, 2, 1, 2, 6, 1, 0, 12, 4, 0, 17, 1, 0, 0, 1, 1, 0]' : 0.110919}", "{'[1, 3, 2, 1, 2, 6, 1, 0, 12, 4, 0, 17, 1, 0, 0, 1, 1, 0]' : 0.101073}", "{'[1, 3, 2, 1, 2, 6, 1, 0, 12, 4, 0, 17, 1, 0, 0, 1, 1, 0]' : 0.0958529}", "{'[1, 3, 2, 1, 2, 6, 1, 0, 12, 4, 0, 17, 1, 0, 0, 1, 1, 0]' : 0.0959351}", "{'[1, 3, 2, 1, 2, 6, 1, 0, 12, 4, 0, 17, 1, 0, 0, 1, 1, 0]' : 0.095814}", "{'[1, 3, 2, 1, 2, 6, 1, 0, 12, 4, 0, 17, 1, 0, 0, 1, 1, 0]' : 0.0958591}", "{'[1, 3, 2, 1, 2, 6, 1, 0, 12, 4, 0, 17, 1, 0, 0, 1, 1, 0]' : 0.0958281}", "{'[1, 3, 2, 1, 2, 6, 1, 0, 12, 4, 0, 17, 1, 0, 0, 1, 1, 0]' : 0.0959282}", "{'[1, 3, 2, 1, 2, 6, 1, 0, 12, 4, 0, 17, 1, 0, 0, 1, 1, 0]' : 0.0962172}", "{'[1, 3, 2, 1, 2, 6, 1, 0, 12, 4, 0, 17, 1, 0, 0, 1, 1, 0]' : 0.095973}", "{'[1, 3, 2, 1, 2, 6, 1, 0, 12, 4, 0, 17, 1, 0, 0, 1, 1, 0]' : 0.09606}", "{'[1, 3, 2, 1, 2, 6, 1, 0, 12, 4, 0, 17, 1, 0, 0, 1, 1, 0]' : 0.0959558}", "{'[1, 3, 2, 1, 2, 6, 1, 0, 12, 4, 0, 17, 1, 0, 0, 1, 1, 0]' : 0.0961001}", "{'[1, 3, 2, 1, 2, 6, 1, 0, 12, 4, 0, 17, 1, 0, 0, 1, 1, 0]' : 0.0959802}", "{'[1, 3, 2, 1, 2, 6, 1, 0, 12, 4, 0, 17, 1, 0, 0, 1, 1, 0]' : 0.095963}", "{'[1, 3, 2, 1, 2, 6, 1, 0, 12, 4, 0, 17, 1, 0, 0, 1, 1, 0]' : 0.0962009}", "{'[1, 3, 2, 1, 2, 6, 1, 0, 12, 4, 0, 17, 1, 0, 0, 1, 1, 0]' : 0.095958}", "{'[1, 3, 2, 1, 2, 6, 1, 0, 12, 4, 0, 17, 1, 0, 0, 1, 1, 0]' : 0.096565}", "{'[1, 3, 2, 1, 2, 6, 1, 0, 12, 4, 0, 17, 1, 0, 0, 1, 1, 0]' : 0.0959239}", "{'[1, 3, 2, 1, 2, 6, 1, 0, 12, 4, 0, 17, 1, 0, 0, 1, 1, 0]' : 0.095998}", "{'[1, 3, 2, 1, 2, 6, 1, 0, 12, 4, 0, 17, 1, 0, 0, 1, 1, 0]' : 0.0959492}", "{'[1, 3, 2, 1, 2, 6, 1, 0, 12, 4, 0, 17, 1, 0, 0, 1, 1, 0]' : 0.095998}", "{'[1, 3, 2, 1, 2, 6, 1, 0, 12, 4, 0, 17, 1, 0, 0, 1, 1, 0]' : 0.09637}", "{'[1, 3, 2, 1, 2, 6, 1, 0, 12, 4, 0, 17, 1, 0, 0, 1, 1, 0]' : 0.0960541}", "{'[1, 3, 2, 1, 2, 6, 1, 0, 12, 4, 0, 17, 1, 0, 0, 1, 1, 0]' : 0.095989}", "{'[1, 3, 2, 1, 2, 6, 1, 0, 12, 4, 0, 17, 1, 0, 0, 1, 1, 0]' : 0.095999}", "{'[1, 3, 2, 1, 2, 6, 1, 0, 12, 4, 0, 17, 1, 0, 0, 1, 1, 0]' : 0.0959399}", "{'[1, 3, 2, 1, 2, 6, 1, 0, 12, 4, 0, 17, 1, 0, 0, 1, 1, 0]' : 0.095957}"]
returning from 'run': {'[1, 3, 2, 1, 2, 6, 1, 0, 12, 4, 0, 17, 1, 0, 0, 1, 1, 0]': ([0.111062, 0.111041, 0.110919, 0.101073, 0.0958529, 0.0959351, 0.095814, 0.0958591, 0.0958281, 0.0959282, 0.0962172, 0.095973, 0.09606, 0.0959558, 0.0961001, 0.0959802, 0.095963, 0.0962009, 0.095958, 0.096565, 0.0959239, 0.095998, 0.0959492, 0.095998, 0.09637, 0.0960541, 0.095989, 0.095999, 0.0959399, 0.095957], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 3, 2, 1, 2, 6, 1, 0, 12, 4, 0, 17, 1, 0, 0, 1, 1, 0]': ([0.111062, 0.111041, 0.110919, 0.101073, 0.0958529, 0.0959351, 0.095814, 0.0958591, 0.0958281, 0.0959282, 0.0962172, 0.095973, 0.09606, 0.0959558, 0.0961001, 0.0959802, 0.095963, 0.0962009, 0.095958, 0.096565, 0.0959239, 0.095998, 0.0959492, 0.095998, 0.09637, 0.0960541, 0.095989, 0.095999, 0.0959399, 0.095957], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Design Best Point:
[0, 2, 4, 2, 6, 2, 1, 0, 0, 0, 21, 0, 1, 1, 0, 1, 1, 1]
Length of requested configs: 1
Result was on Database, Returning Now
Fixed Factors: {'T1_J': 3, 'SCR': 1}
Slowdown (Design Best): 0.5619703270776929
Slowdown (Predicted Best): 0.5998994252726498
Budget: 37/180
Updating Global Best: 0.09150609666666663
Current Best Point: 
[0, 2, 4, 2, 6, 2, 1, 0, 0, 0, 21, 0, 1, 1, 0, 1, 1, 1]
Step 1
Generating valid search space of size 4200 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Valid coordinates: 840
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Valid coordinates: 1680
Tested coordinates: 70000
Tested coordinates: 80000
Tested coordinates: 90000
Valid coordinates: 2520
Tested coordinates: 100000
Tested coordinates: 110000
Tested coordinates: 120000
Valid coordinates: 3360
Tested coordinates: 130000
Tested coordinates: 140000
Tested coordinates: 150000
Valid coordinates: 4200
Valid/Tested configurations: 4200/154785
Generated Search Space:
NULL
Clean Info:
Removed Factors: character(0)

Removed Inverse Factors: [1] "ACOPY_x" "ACOPY_y" "VEC1"    "VEC2"   

New Factors: ['T1_I', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'VEC1', 'VEC2']
New Inverse Factors: ['T1_I', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
New Fixed Factors: {'T1_J': 3, 'SCR': 1}
Full Model:  ~ T1_I + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Fixed Factors: {'T1_J': 3, 'SCR': 1}
Computing D-Optimal Design
Computing D-Optimal Design with 42 experiments
Design Formula:  ~ T1_I + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Starting "optFederov" run
Using Search Space:
NULL
Data Dimensions: [1] 4200   16

     T1_I T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J RT_K
401     0    6    6    4    0       0       1   11  18   0  17    0    0    2
477     5    0    0    1    6       1       0    5   0   7  25    1    0    1
483     5    1    0    6    6       1       1   10  23  26   0    0    1    1
516     1    0    6    1    6       0       0   29  21  23   0    0    1    0
528     0    0    1    2    1       1       0   19  29   0   5    2    0    0
549     6    6    0    0    6       0       0    2  15   3   0    1    1    0
646     0    1    6    0    1       1       1    6  15  25   0    0    0    0
657     0    1    1    0    4       0       1   28   0   6   3    2    0    0
781     2    2    6    2    2       0       1   17  20   7   0    1    0    1
962     6    2    6    3    1       0       0   28   6   0  14    0    0    0
1270    1    2    6    6    5       1       0    9   0  28  19    0    0    2
1365    1    1    0    0    0       0       1   18  22   0  16    0    0    0
1465    6    2    5    0    6       1       0    3  28   0  27    2    0    0
1652    4    1    0    0    3       1       0   26   0  29  11    0    0    2
1695    2    4    1    4    2       0       1    8   0   0   0    0    0    2
1759    2    2    1    5    1       1       1   28   5   0   4    1    1    0
1769    6    0    6    6    4       1       0    0   4   0   6    1    0    1
1796    2    6    2    2    4       1       0   24   0  28  21    0    0    0
1985    3    0    0    6    2       0       1   16   2   8   0    0    0    0
1990    3    1    4    1    6       0       1    6   0   9   7    0    2    0
2263    5    1    0    3    3       0       1   29   0  29  29    0    1    1
2435    5    5    6    6    3       0       0   28  29  27   0    1    0    0
2545    0    0    1    0    4       0       0   10   7   0  28    0    0    1
2562    0    4    6    4    5       0       1    0   0  25  23    1    0    0
2628    0    0    1    0    6       0       0   27  12   0  28    0    2    0
2678    1    4    6    2    6       1       0    1  28   0   1    0    0    1
2715    3    0    0    0    3       0       1    0  10  19   0    0    2    0
2805    3    4    6    5    5       1       1   29   0   0  25    1    0    0
2869    2    1    1    4    6       0       0    0  12   0   8    1    0    0
2914    3    6    2    0    0       0       0   28  24   0   5    1    0    1
2996    5    4    3    4    5       0       1   11   0   0   1    0    0    0
3013    1    3    3    5    4       1       1    1  29   0  29    0    1    0
3087    0    3    1    5    6       0       1   25  21  15   0    0    0    0
3483    0    0    3    3    0       0       1   18   0  23   8    1    1    0
3664    5    0    3    6    1       1       0    6   0   6  27    0    0    2
3909    3    1    4    2    0       1       1   11   7  28   0    2    0    0
3922    1    3    0    6    0       1       0   16   0   9   0    0    2    0
3957    0    6    5    4    6       1       1   17   3   0   6    0    2    0
4018    3    4    0    2    6       1       1   29  20  11   0    0    0    2
4053    6    4    6    0    0       1       1    1   0   5  29    0    1    0
4091    0    3    1    2    2       1       0    0   5  17   0    0    1    1
4153    2    0    4    6    6       0       0    0   0   4   6    2    0    0
     VEC1 VEC2
401     1    0
477     0    1
483     1    0
516     0    0
528     1    1
549     1    0
646     0    0
657     0    0
781     0    0
962     1    1
1270    1    1
1365    0    1
1465    1    1
1652    0    0
1695    1    1
1759    1    1
1769    1    0
1796    1    0
1985    1    0
1990    1    1
2263    0    0
2435    1    1
2545    0    1
2562    0    1
2628    1    0
2678    1    1
2715    1    1
2805    1    1
2869    0    1
2914    1    0
2996    0    1
3013    0    0
3087    1    1
3483    0    1
3664    0    1
3909    0    0
3922    0    0
3957    0    1
4018    0    1
4053    0    1
4091    1    1
4153    0    0

D-Efficiency Approximation: [1] 0.423

Measuring design of size 42
Current Design Names: ['T1_I', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Length of requested configs: 1
Code stats:
        Number of loops: 	55
        Max loop nest depth: 	5
        Additions: 		3046
        Multiplications: 	1320
        Divisions: 		0
        Logical: 		0
        Reads: 			5885
        Writes: 		1015
        Comparisons:		55
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest48.exe __orio_perftest48.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest48.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest48.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest48.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest48.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	4
        Additions: 		1734
        Multiplications: 	792
        Divisions: 		0
        Logical: 		0
        Reads: 			3505
        Writes: 		630
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest49.exe __orio_perftest49.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest49.exe  
Program Test Output: 
{'[5, 3, 0, 0, 1, 6, 1, 0, 5, 0, 7, 25, 1, 0, 1, 1, 0, 1]' : 0.091522}
{'[5, 3, 0, 0, 1, 6, 1, 0, 5, 0, 7, 25, 1, 0, 1, 1, 0, 1]' : 0.0920539}
{'[5, 3, 0, 0, 1, 6, 1, 0, 5, 0, 7, 25, 1, 0, 1, 1, 0, 1]' : 0.091938}
{'[5, 3, 0, 0, 1, 6, 1, 0, 5, 0, 7, 25, 1, 0, 1, 1, 0, 1]' : 0.091918}
{'[5, 3, 0, 0, 1, 6, 1, 0, 5, 0, 7, 25, 1, 0, 1, 1, 0, 1]' : 0.0919082}
{'[5, 3, 0, 0, 1, 6, 1, 0, 5, 0, 7, 25, 1, 0, 1, 1, 0, 1]' : 0.092011}
{'[5, 3, 0, 0, 1, 6, 1, 0, 5, 0, 7, 25, 1, 0, 1, 1, 0, 1]' : 0.0919199}
{'[5, 3, 0, 0, 1, 6, 1, 0, 5, 0, 7, 25, 1, 0, 1, 1, 0, 1]' : 0.091965}
{'[5, 3, 0, 0, 1, 6, 1, 0, 5, 0, 7, 25, 1, 0, 1, 1, 0, 1]' : 0.0905161}
{'[5, 3, 0, 0, 1, 6, 1, 0, 5, 0, 7, 25, 1, 0, 1, 1, 0, 1]' : 0.089793}
{'[5, 3, 0, 0, 1, 6, 1, 0, 5, 0, 7, 25, 1, 0, 1, 1, 0, 1]' : 0.0899382}
{'[5, 3, 0, 0, 1, 6, 1, 0, 5, 0, 7, 25, 1, 0, 1, 1, 0, 1]' : 0.0917339}
{'[5, 3, 0, 0, 1, 6, 1, 0, 5, 0, 7, 25, 1, 0, 1, 1, 0, 1]' : 0.0919571}
{'[5, 3, 0, 0, 1, 6, 1, 0, 5, 0, 7, 25, 1, 0, 1, 1, 0, 1]' : 0.091913}
{'[5, 3, 0, 0, 1, 6, 1, 0, 5, 0, 7, 25, 1, 0, 1, 1, 0, 1]' : 0.091964}
{'[5, 3, 0, 0, 1, 6, 1, 0, 5, 0, 7, 25, 1, 0, 1, 1, 0, 1]' : 0.091954}
{'[5, 3, 0, 0, 1, 6, 1, 0, 5, 0, 7, 25, 1, 0, 1, 1, 0, 1]' : 0.09109}
{'[5, 3, 0, 0, 1, 6, 1, 0, 5, 0, 7, 25, 1, 0, 1, 1, 0, 1]' : 0.0896969}
{'[5, 3, 0, 0, 1, 6, 1, 0, 5, 0, 7, 25, 1, 0, 1, 1, 0, 1]' : 0.0896542}
{'[5, 3, 0, 0, 1, 6, 1, 0, 5, 0, 7, 25, 1, 0, 1, 1, 0, 1]' : 0.089843}
{'[5, 3, 0, 0, 1, 6, 1, 0, 5, 0, 7, 25, 1, 0, 1, 1, 0, 1]' : 0.0897269}
{'[5, 3, 0, 0, 1, 6, 1, 0, 5, 0, 7, 25, 1, 0, 1, 1, 0, 1]' : 0.0897782}
{'[5, 3, 0, 0, 1, 6, 1, 0, 5, 0, 7, 25, 1, 0, 1, 1, 0, 1]' : 0.0901389}
{'[5, 3, 0, 0, 1, 6, 1, 0, 5, 0, 7, 25, 1, 0, 1, 1, 0, 1]' : 0.0896971}
{'[5, 3, 0, 0, 1, 6, 1, 0, 5, 0, 7, 25, 1, 0, 1, 1, 0, 1]' : 0.0897849}
{'[5, 3, 0, 0, 1, 6, 1, 0, 5, 0, 7, 25, 1, 0, 1, 1, 0, 1]' : 0.0898302}
{'[5, 3, 0, 0, 1, 6, 1, 0, 5, 0, 7, 25, 1, 0, 1, 1, 0, 1]' : 0.0897279}
{'[5, 3, 0, 0, 1, 6, 1, 0, 5, 0, 7, 25, 1, 0, 1, 1, 0, 1]' : 0.089891}
{'[5, 3, 0, 0, 1, 6, 1, 0, 5, 0, 7, 25, 1, 0, 1, 1, 0, 1]' : 0.089704}
{'[5, 3, 0, 0, 1, 6, 1, 0, 5, 0, 7, 25, 1, 0, 1, 1, 0, 1]' : 0.0897789}

out:
 ["{'[5, 3, 0, 0, 1, 6, 1, 0, 5, 0, 7, 25, 1, 0, 1, 1, 0, 1]' : 0.091522}", "{'[5, 3, 0, 0, 1, 6, 1, 0, 5, 0, 7, 25, 1, 0, 1, 1, 0, 1]' : 0.0920539}", "{'[5, 3, 0, 0, 1, 6, 1, 0, 5, 0, 7, 25, 1, 0, 1, 1, 0, 1]' : 0.091938}", "{'[5, 3, 0, 0, 1, 6, 1, 0, 5, 0, 7, 25, 1, 0, 1, 1, 0, 1]' : 0.091918}", "{'[5, 3, 0, 0, 1, 6, 1, 0, 5, 0, 7, 25, 1, 0, 1, 1, 0, 1]' : 0.0919082}", "{'[5, 3, 0, 0, 1, 6, 1, 0, 5, 0, 7, 25, 1, 0, 1, 1, 0, 1]' : 0.092011}", "{'[5, 3, 0, 0, 1, 6, 1, 0, 5, 0, 7, 25, 1, 0, 1, 1, 0, 1]' : 0.0919199}", "{'[5, 3, 0, 0, 1, 6, 1, 0, 5, 0, 7, 25, 1, 0, 1, 1, 0, 1]' : 0.091965}", "{'[5, 3, 0, 0, 1, 6, 1, 0, 5, 0, 7, 25, 1, 0, 1, 1, 0, 1]' : 0.0905161}", "{'[5, 3, 0, 0, 1, 6, 1, 0, 5, 0, 7, 25, 1, 0, 1, 1, 0, 1]' : 0.089793}", "{'[5, 3, 0, 0, 1, 6, 1, 0, 5, 0, 7, 25, 1, 0, 1, 1, 0, 1]' : 0.0899382}", "{'[5, 3, 0, 0, 1, 6, 1, 0, 5, 0, 7, 25, 1, 0, 1, 1, 0, 1]' : 0.0917339}", "{'[5, 3, 0, 0, 1, 6, 1, 0, 5, 0, 7, 25, 1, 0, 1, 1, 0, 1]' : 0.0919571}", "{'[5, 3, 0, 0, 1, 6, 1, 0, 5, 0, 7, 25, 1, 0, 1, 1, 0, 1]' : 0.091913}", "{'[5, 3, 0, 0, 1, 6, 1, 0, 5, 0, 7, 25, 1, 0, 1, 1, 0, 1]' : 0.091964}", "{'[5, 3, 0, 0, 1, 6, 1, 0, 5, 0, 7, 25, 1, 0, 1, 1, 0, 1]' : 0.091954}", "{'[5, 3, 0, 0, 1, 6, 1, 0, 5, 0, 7, 25, 1, 0, 1, 1, 0, 1]' : 0.09109}", "{'[5, 3, 0, 0, 1, 6, 1, 0, 5, 0, 7, 25, 1, 0, 1, 1, 0, 1]' : 0.0896969}", "{'[5, 3, 0, 0, 1, 6, 1, 0, 5, 0, 7, 25, 1, 0, 1, 1, 0, 1]' : 0.0896542}", "{'[5, 3, 0, 0, 1, 6, 1, 0, 5, 0, 7, 25, 1, 0, 1, 1, 0, 1]' : 0.089843}", "{'[5, 3, 0, 0, 1, 6, 1, 0, 5, 0, 7, 25, 1, 0, 1, 1, 0, 1]' : 0.0897269}", "{'[5, 3, 0, 0, 1, 6, 1, 0, 5, 0, 7, 25, 1, 0, 1, 1, 0, 1]' : 0.0897782}", "{'[5, 3, 0, 0, 1, 6, 1, 0, 5, 0, 7, 25, 1, 0, 1, 1, 0, 1]' : 0.0901389}", "{'[5, 3, 0, 0, 1, 6, 1, 0, 5, 0, 7, 25, 1, 0, 1, 1, 0, 1]' : 0.0896971}", "{'[5, 3, 0, 0, 1, 6, 1, 0, 5, 0, 7, 25, 1, 0, 1, 1, 0, 1]' : 0.0897849}", "{'[5, 3, 0, 0, 1, 6, 1, 0, 5, 0, 7, 25, 1, 0, 1, 1, 0, 1]' : 0.0898302}", "{'[5, 3, 0, 0, 1, 6, 1, 0, 5, 0, 7, 25, 1, 0, 1, 1, 0, 1]' : 0.0897279}", "{'[5, 3, 0, 0, 1, 6, 1, 0, 5, 0, 7, 25, 1, 0, 1, 1, 0, 1]' : 0.089891}", "{'[5, 3, 0, 0, 1, 6, 1, 0, 5, 0, 7, 25, 1, 0, 1, 1, 0, 1]' : 0.089704}", "{'[5, 3, 0, 0, 1, 6, 1, 0, 5, 0, 7, 25, 1, 0, 1, 1, 0, 1]' : 0.0897789}"]
returning from 'run': {'[5, 3, 0, 0, 1, 6, 1, 0, 5, 0, 7, 25, 1, 0, 1, 1, 0, 1]': ([0.091522, 0.0920539, 0.091938, 0.091918, 0.0919082, 0.092011, 0.0919199, 0.091965, 0.0905161, 0.089793, 0.0899382, 0.0917339, 0.0919571, 0.091913, 0.091964, 0.091954, 0.09109, 0.0896969, 0.0896542, 0.089843, 0.0897269, 0.0897782, 0.0901389, 0.0896971, 0.0897849, 0.0898302, 0.0897279, 0.089891, 0.089704, 0.0897789], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 3, 0, 0, 1, 6, 1, 0, 5, 0, 7, 25, 1, 0, 1, 1, 0, 1]': ([0.091522, 0.0920539, 0.091938, 0.091918, 0.0919082, 0.092011, 0.0919199, 0.091965, 0.0905161, 0.089793, 0.0899382, 0.0917339, 0.0919571, 0.091913, 0.091964, 0.091954, 0.09109, 0.0896969, 0.0896542, 0.089843, 0.0897269, 0.0897782, 0.0901389, 0.0896971, 0.0897849, 0.0898302, 0.0897279, 0.089891, 0.089704, 0.0897789], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	92
        Max loop nest depth: 	5
        Additions: 		2025
        Multiplications: 	800
        Divisions: 		0
        Logical: 		0
        Reads: 			4192
        Writes: 		789
        Comparisons:		92
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest50.exe __orio_perftest50.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest50.exe  
Program Test Output: 
{'[5, 3, 1, 0, 6, 6, 1, 1, 10, 23, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.280936}
{'[5, 3, 1, 0, 6, 6, 1, 1, 10, 23, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.267194}
{'[5, 3, 1, 0, 6, 6, 1, 1, 10, 23, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.244677}
{'[5, 3, 1, 0, 6, 6, 1, 1, 10, 23, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.246731}
{'[5, 3, 1, 0, 6, 6, 1, 1, 10, 23, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.252238}
{'[5, 3, 1, 0, 6, 6, 1, 1, 10, 23, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.252192}
{'[5, 3, 1, 0, 6, 6, 1, 1, 10, 23, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.252323}
{'[5, 3, 1, 0, 6, 6, 1, 1, 10, 23, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.252495}
{'[5, 3, 1, 0, 6, 6, 1, 1, 10, 23, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.252293}
{'[5, 3, 1, 0, 6, 6, 1, 1, 10, 23, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.252229}
{'[5, 3, 1, 0, 6, 6, 1, 1, 10, 23, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.25225}
{'[5, 3, 1, 0, 6, 6, 1, 1, 10, 23, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.252271}
{'[5, 3, 1, 0, 6, 6, 1, 1, 10, 23, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.252429}
{'[5, 3, 1, 0, 6, 6, 1, 1, 10, 23, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.252252}
{'[5, 3, 1, 0, 6, 6, 1, 1, 10, 23, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.252261}
{'[5, 3, 1, 0, 6, 6, 1, 1, 10, 23, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.252351}
{'[5, 3, 1, 0, 6, 6, 1, 1, 10, 23, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.247237}
{'[5, 3, 1, 0, 6, 6, 1, 1, 10, 23, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.252187}
{'[5, 3, 1, 0, 6, 6, 1, 1, 10, 23, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.252269}
{'[5, 3, 1, 0, 6, 6, 1, 1, 10, 23, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.246141}
{'[5, 3, 1, 0, 6, 6, 1, 1, 10, 23, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.248363}
{'[5, 3, 1, 0, 6, 6, 1, 1, 10, 23, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.255244}
{'[5, 3, 1, 0, 6, 6, 1, 1, 10, 23, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.255314}
{'[5, 3, 1, 0, 6, 6, 1, 1, 10, 23, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.25532}
{'[5, 3, 1, 0, 6, 6, 1, 1, 10, 23, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.25408}
{'[5, 3, 1, 0, 6, 6, 1, 1, 10, 23, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.247328}
{'[5, 3, 1, 0, 6, 6, 1, 1, 10, 23, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.247535}
{'[5, 3, 1, 0, 6, 6, 1, 1, 10, 23, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.247323}
{'[5, 3, 1, 0, 6, 6, 1, 1, 10, 23, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.248314}
{'[5, 3, 1, 0, 6, 6, 1, 1, 10, 23, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.255256}

out:
 ["{'[5, 3, 1, 0, 6, 6, 1, 1, 10, 23, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.280936}", "{'[5, 3, 1, 0, 6, 6, 1, 1, 10, 23, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.267194}", "{'[5, 3, 1, 0, 6, 6, 1, 1, 10, 23, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.244677}", "{'[5, 3, 1, 0, 6, 6, 1, 1, 10, 23, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.246731}", "{'[5, 3, 1, 0, 6, 6, 1, 1, 10, 23, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.252238}", "{'[5, 3, 1, 0, 6, 6, 1, 1, 10, 23, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.252192}", "{'[5, 3, 1, 0, 6, 6, 1, 1, 10, 23, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.252323}", "{'[5, 3, 1, 0, 6, 6, 1, 1, 10, 23, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.252495}", "{'[5, 3, 1, 0, 6, 6, 1, 1, 10, 23, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.252293}", "{'[5, 3, 1, 0, 6, 6, 1, 1, 10, 23, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.252229}", "{'[5, 3, 1, 0, 6, 6, 1, 1, 10, 23, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.25225}", "{'[5, 3, 1, 0, 6, 6, 1, 1, 10, 23, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.252271}", "{'[5, 3, 1, 0, 6, 6, 1, 1, 10, 23, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.252429}", "{'[5, 3, 1, 0, 6, 6, 1, 1, 10, 23, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.252252}", "{'[5, 3, 1, 0, 6, 6, 1, 1, 10, 23, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.252261}", "{'[5, 3, 1, 0, 6, 6, 1, 1, 10, 23, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.252351}", "{'[5, 3, 1, 0, 6, 6, 1, 1, 10, 23, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.247237}", "{'[5, 3, 1, 0, 6, 6, 1, 1, 10, 23, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.252187}", "{'[5, 3, 1, 0, 6, 6, 1, 1, 10, 23, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.252269}", "{'[5, 3, 1, 0, 6, 6, 1, 1, 10, 23, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.246141}", "{'[5, 3, 1, 0, 6, 6, 1, 1, 10, 23, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.248363}", "{'[5, 3, 1, 0, 6, 6, 1, 1, 10, 23, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.255244}", "{'[5, 3, 1, 0, 6, 6, 1, 1, 10, 23, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.255314}", "{'[5, 3, 1, 0, 6, 6, 1, 1, 10, 23, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.25532}", "{'[5, 3, 1, 0, 6, 6, 1, 1, 10, 23, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.25408}", "{'[5, 3, 1, 0, 6, 6, 1, 1, 10, 23, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.247328}", "{'[5, 3, 1, 0, 6, 6, 1, 1, 10, 23, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.247535}", "{'[5, 3, 1, 0, 6, 6, 1, 1, 10, 23, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.247323}", "{'[5, 3, 1, 0, 6, 6, 1, 1, 10, 23, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.248314}", "{'[5, 3, 1, 0, 6, 6, 1, 1, 10, 23, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.255256}"]
returning from 'run': {'[5, 3, 1, 0, 6, 6, 1, 1, 10, 23, 26, 0, 0, 1, 1, 1, 1, 0]': ([0.280936, 0.267194, 0.244677, 0.246731, 0.252238, 0.252192, 0.252323, 0.252495, 0.252293, 0.252229, 0.25225, 0.252271, 0.252429, 0.252252, 0.252261, 0.252351, 0.247237, 0.252187, 0.252269, 0.246141, 0.248363, 0.255244, 0.255314, 0.25532, 0.25408, 0.247328, 0.247535, 0.247323, 0.248314, 0.255256], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 3, 1, 0, 6, 6, 1, 1, 10, 23, 26, 0, 0, 1, 1, 1, 1, 0]': ([0.280936, 0.267194, 0.244677, 0.246731, 0.252238, 0.252192, 0.252323, 0.252495, 0.252293, 0.252229, 0.25225, 0.252271, 0.252429, 0.252252, 0.252261, 0.252351, 0.247237, 0.252187, 0.252269, 0.246141, 0.248363, 0.255244, 0.255314, 0.25532, 0.25408, 0.247328, 0.247535, 0.247323, 0.248314, 0.255256], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	60
        Max loop nest depth: 	5
        Additions: 		4000
        Multiplications: 	1564
        Divisions: 		0
        Logical: 		0
        Reads: 			6820
        Writes: 		1014
        Comparisons:		60
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest51.exe __orio_perftest51.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest51.exe  
Program Test Output: 
{'[1, 3, 0, 6, 1, 6, 0, 0, 29, 21, 23, 0, 0, 1, 0, 1, 0, 0]' : 0.203328}
{'[1, 3, 0, 6, 1, 6, 0, 0, 29, 21, 23, 0, 0, 1, 0, 1, 0, 0]' : 0.203084}
{'[1, 3, 0, 6, 1, 6, 0, 0, 29, 21, 23, 0, 0, 1, 0, 1, 0, 0]' : 0.184333}
{'[1, 3, 0, 6, 1, 6, 0, 0, 29, 21, 23, 0, 0, 1, 0, 1, 0, 0]' : 0.170063}
{'[1, 3, 0, 6, 1, 6, 0, 0, 29, 21, 23, 0, 0, 1, 0, 1, 0, 0]' : 0.170384}
{'[1, 3, 0, 6, 1, 6, 0, 0, 29, 21, 23, 0, 0, 1, 0, 1, 0, 0]' : 0.17016}
{'[1, 3, 0, 6, 1, 6, 0, 0, 29, 21, 23, 0, 0, 1, 0, 1, 0, 0]' : 0.170089}
{'[1, 3, 0, 6, 1, 6, 0, 0, 29, 21, 23, 0, 0, 1, 0, 1, 0, 0]' : 0.170112}
{'[1, 3, 0, 6, 1, 6, 0, 0, 29, 21, 23, 0, 0, 1, 0, 1, 0, 0]' : 0.170116}
{'[1, 3, 0, 6, 1, 6, 0, 0, 29, 21, 23, 0, 0, 1, 0, 1, 0, 0]' : 0.170893}
{'[1, 3, 0, 6, 1, 6, 0, 0, 29, 21, 23, 0, 0, 1, 0, 1, 0, 0]' : 0.170462}
{'[1, 3, 0, 6, 1, 6, 0, 0, 29, 21, 23, 0, 0, 1, 0, 1, 0, 0]' : 0.170327}
{'[1, 3, 0, 6, 1, 6, 0, 0, 29, 21, 23, 0, 0, 1, 0, 1, 0, 0]' : 0.170087}
{'[1, 3, 0, 6, 1, 6, 0, 0, 29, 21, 23, 0, 0, 1, 0, 1, 0, 0]' : 0.170168}
{'[1, 3, 0, 6, 1, 6, 0, 0, 29, 21, 23, 0, 0, 1, 0, 1, 0, 0]' : 0.170171}
{'[1, 3, 0, 6, 1, 6, 0, 0, 29, 21, 23, 0, 0, 1, 0, 1, 0, 0]' : 0.170395}
{'[1, 3, 0, 6, 1, 6, 0, 0, 29, 21, 23, 0, 0, 1, 0, 1, 0, 0]' : 0.170182}
{'[1, 3, 0, 6, 1, 6, 0, 0, 29, 21, 23, 0, 0, 1, 0, 1, 0, 0]' : 0.170115}
{'[1, 3, 0, 6, 1, 6, 0, 0, 29, 21, 23, 0, 0, 1, 0, 1, 0, 0]' : 0.170802}
{'[1, 3, 0, 6, 1, 6, 0, 0, 29, 21, 23, 0, 0, 1, 0, 1, 0, 0]' : 0.170149}
{'[1, 3, 0, 6, 1, 6, 0, 0, 29, 21, 23, 0, 0, 1, 0, 1, 0, 0]' : 0.170131}
{'[1, 3, 0, 6, 1, 6, 0, 0, 29, 21, 23, 0, 0, 1, 0, 1, 0, 0]' : 0.170131}
{'[1, 3, 0, 6, 1, 6, 0, 0, 29, 21, 23, 0, 0, 1, 0, 1, 0, 0]' : 0.170626}
{'[1, 3, 0, 6, 1, 6, 0, 0, 29, 21, 23, 0, 0, 1, 0, 1, 0, 0]' : 0.170176}
{'[1, 3, 0, 6, 1, 6, 0, 0, 29, 21, 23, 0, 0, 1, 0, 1, 0, 0]' : 0.170132}
{'[1, 3, 0, 6, 1, 6, 0, 0, 29, 21, 23, 0, 0, 1, 0, 1, 0, 0]' : 0.170154}
{'[1, 3, 0, 6, 1, 6, 0, 0, 29, 21, 23, 0, 0, 1, 0, 1, 0, 0]' : 0.17019}
{'[1, 3, 0, 6, 1, 6, 0, 0, 29, 21, 23, 0, 0, 1, 0, 1, 0, 0]' : 0.171066}
{'[1, 3, 0, 6, 1, 6, 0, 0, 29, 21, 23, 0, 0, 1, 0, 1, 0, 0]' : 0.170284}
{'[1, 3, 0, 6, 1, 6, 0, 0, 29, 21, 23, 0, 0, 1, 0, 1, 0, 0]' : 0.17023}

out:
 ["{'[1, 3, 0, 6, 1, 6, 0, 0, 29, 21, 23, 0, 0, 1, 0, 1, 0, 0]' : 0.203328}", "{'[1, 3, 0, 6, 1, 6, 0, 0, 29, 21, 23, 0, 0, 1, 0, 1, 0, 0]' : 0.203084}", "{'[1, 3, 0, 6, 1, 6, 0, 0, 29, 21, 23, 0, 0, 1, 0, 1, 0, 0]' : 0.184333}", "{'[1, 3, 0, 6, 1, 6, 0, 0, 29, 21, 23, 0, 0, 1, 0, 1, 0, 0]' : 0.170063}", "{'[1, 3, 0, 6, 1, 6, 0, 0, 29, 21, 23, 0, 0, 1, 0, 1, 0, 0]' : 0.170384}", "{'[1, 3, 0, 6, 1, 6, 0, 0, 29, 21, 23, 0, 0, 1, 0, 1, 0, 0]' : 0.17016}", "{'[1, 3, 0, 6, 1, 6, 0, 0, 29, 21, 23, 0, 0, 1, 0, 1, 0, 0]' : 0.170089}", "{'[1, 3, 0, 6, 1, 6, 0, 0, 29, 21, 23, 0, 0, 1, 0, 1, 0, 0]' : 0.170112}", "{'[1, 3, 0, 6, 1, 6, 0, 0, 29, 21, 23, 0, 0, 1, 0, 1, 0, 0]' : 0.170116}", "{'[1, 3, 0, 6, 1, 6, 0, 0, 29, 21, 23, 0, 0, 1, 0, 1, 0, 0]' : 0.170893}", "{'[1, 3, 0, 6, 1, 6, 0, 0, 29, 21, 23, 0, 0, 1, 0, 1, 0, 0]' : 0.170462}", "{'[1, 3, 0, 6, 1, 6, 0, 0, 29, 21, 23, 0, 0, 1, 0, 1, 0, 0]' : 0.170327}", "{'[1, 3, 0, 6, 1, 6, 0, 0, 29, 21, 23, 0, 0, 1, 0, 1, 0, 0]' : 0.170087}", "{'[1, 3, 0, 6, 1, 6, 0, 0, 29, 21, 23, 0, 0, 1, 0, 1, 0, 0]' : 0.170168}", "{'[1, 3, 0, 6, 1, 6, 0, 0, 29, 21, 23, 0, 0, 1, 0, 1, 0, 0]' : 0.170171}", "{'[1, 3, 0, 6, 1, 6, 0, 0, 29, 21, 23, 0, 0, 1, 0, 1, 0, 0]' : 0.170395}", "{'[1, 3, 0, 6, 1, 6, 0, 0, 29, 21, 23, 0, 0, 1, 0, 1, 0, 0]' : 0.170182}", "{'[1, 3, 0, 6, 1, 6, 0, 0, 29, 21, 23, 0, 0, 1, 0, 1, 0, 0]' : 0.170115}", "{'[1, 3, 0, 6, 1, 6, 0, 0, 29, 21, 23, 0, 0, 1, 0, 1, 0, 0]' : 0.170802}", "{'[1, 3, 0, 6, 1, 6, 0, 0, 29, 21, 23, 0, 0, 1, 0, 1, 0, 0]' : 0.170149}", "{'[1, 3, 0, 6, 1, 6, 0, 0, 29, 21, 23, 0, 0, 1, 0, 1, 0, 0]' : 0.170131}", "{'[1, 3, 0, 6, 1, 6, 0, 0, 29, 21, 23, 0, 0, 1, 0, 1, 0, 0]' : 0.170131}", "{'[1, 3, 0, 6, 1, 6, 0, 0, 29, 21, 23, 0, 0, 1, 0, 1, 0, 0]' : 0.170626}", "{'[1, 3, 0, 6, 1, 6, 0, 0, 29, 21, 23, 0, 0, 1, 0, 1, 0, 0]' : 0.170176}", "{'[1, 3, 0, 6, 1, 6, 0, 0, 29, 21, 23, 0, 0, 1, 0, 1, 0, 0]' : 0.170132}", "{'[1, 3, 0, 6, 1, 6, 0, 0, 29, 21, 23, 0, 0, 1, 0, 1, 0, 0]' : 0.170154}", "{'[1, 3, 0, 6, 1, 6, 0, 0, 29, 21, 23, 0, 0, 1, 0, 1, 0, 0]' : 0.17019}", "{'[1, 3, 0, 6, 1, 6, 0, 0, 29, 21, 23, 0, 0, 1, 0, 1, 0, 0]' : 0.171066}", "{'[1, 3, 0, 6, 1, 6, 0, 0, 29, 21, 23, 0, 0, 1, 0, 1, 0, 0]' : 0.170284}", "{'[1, 3, 0, 6, 1, 6, 0, 0, 29, 21, 23, 0, 0, 1, 0, 1, 0, 0]' : 0.17023}"]
returning from 'run': {'[1, 3, 0, 6, 1, 6, 0, 0, 29, 21, 23, 0, 0, 1, 0, 1, 0, 0]': ([0.203328, 0.203084, 0.184333, 0.170063, 0.170384, 0.17016, 0.170089, 0.170112, 0.170116, 0.170893, 0.170462, 0.170327, 0.170087, 0.170168, 0.170171, 0.170395, 0.170182, 0.170115, 0.170802, 0.170149, 0.170131, 0.170131, 0.170626, 0.170176, 0.170132, 0.170154, 0.17019, 0.171066, 0.170284, 0.17023], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 3, 0, 6, 1, 6, 0, 0, 29, 21, 23, 0, 0, 1, 0, 1, 0, 0]': ([0.203328, 0.203084, 0.184333, 0.170063, 0.170384, 0.17016, 0.170089, 0.170112, 0.170116, 0.170893, 0.170462, 0.170327, 0.170087, 0.170168, 0.170171, 0.170395, 0.170182, 0.170115, 0.170802, 0.170149, 0.170131, 0.170131, 0.170626, 0.170176, 0.170132, 0.170154, 0.17019, 0.171066, 0.170284, 0.17023], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	56
        Max loop nest depth: 	5
        Additions: 		2210
        Multiplications: 	1008
        Divisions: 		0
        Logical: 		0
        Reads: 			4698
        Writes: 		886
        Comparisons:		56
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest52.exe __orio_perftest52.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest52.exe  
Program Test Output: 
{'[0, 3, 0, 1, 2, 1, 1, 0, 19, 29, 0, 5, 2, 0, 0, 1, 1, 1]' : 0.205579}
{'[0, 3, 0, 1, 2, 1, 1, 0, 19, 29, 0, 5, 2, 0, 0, 1, 1, 1]' : 0.197858}
{'[0, 3, 0, 1, 2, 1, 1, 0, 19, 29, 0, 5, 2, 0, 0, 1, 1, 1]' : 0.181538}
{'[0, 3, 0, 1, 2, 1, 1, 0, 19, 29, 0, 5, 2, 0, 0, 1, 1, 1]' : 0.18468}
{'[0, 3, 0, 1, 2, 1, 1, 0, 19, 29, 0, 5, 2, 0, 0, 1, 1, 1]' : 0.185753}
{'[0, 3, 0, 1, 2, 1, 1, 0, 19, 29, 0, 5, 2, 0, 0, 1, 1, 1]' : 0.185591}
{'[0, 3, 0, 1, 2, 1, 1, 0, 19, 29, 0, 5, 2, 0, 0, 1, 1, 1]' : 0.185644}
{'[0, 3, 0, 1, 2, 1, 1, 0, 19, 29, 0, 5, 2, 0, 0, 1, 1, 1]' : 0.186718}
{'[0, 3, 0, 1, 2, 1, 1, 0, 19, 29, 0, 5, 2, 0, 0, 1, 1, 1]' : 0.185985}
{'[0, 3, 0, 1, 2, 1, 1, 0, 19, 29, 0, 5, 2, 0, 0, 1, 1, 1]' : 0.185397}
{'[0, 3, 0, 1, 2, 1, 1, 0, 19, 29, 0, 5, 2, 0, 0, 1, 1, 1]' : 0.185776}
{'[0, 3, 0, 1, 2, 1, 1, 0, 19, 29, 0, 5, 2, 0, 0, 1, 1, 1]' : 0.1863}
{'[0, 3, 0, 1, 2, 1, 1, 0, 19, 29, 0, 5, 2, 0, 0, 1, 1, 1]' : 0.185248}
{'[0, 3, 0, 1, 2, 1, 1, 0, 19, 29, 0, 5, 2, 0, 0, 1, 1, 1]' : 0.185797}
{'[0, 3, 0, 1, 2, 1, 1, 0, 19, 29, 0, 5, 2, 0, 0, 1, 1, 1]' : 0.184963}
{'[0, 3, 0, 1, 2, 1, 1, 0, 19, 29, 0, 5, 2, 0, 0, 1, 1, 1]' : 0.184957}
{'[0, 3, 0, 1, 2, 1, 1, 0, 19, 29, 0, 5, 2, 0, 0, 1, 1, 1]' : 0.18626}
{'[0, 3, 0, 1, 2, 1, 1, 0, 19, 29, 0, 5, 2, 0, 0, 1, 1, 1]' : 0.185241}
{'[0, 3, 0, 1, 2, 1, 1, 0, 19, 29, 0, 5, 2, 0, 0, 1, 1, 1]' : 0.18526}
{'[0, 3, 0, 1, 2, 1, 1, 0, 19, 29, 0, 5, 2, 0, 0, 1, 1, 1]' : 0.186728}
{'[0, 3, 0, 1, 2, 1, 1, 0, 19, 29, 0, 5, 2, 0, 0, 1, 1, 1]' : 0.185921}
{'[0, 3, 0, 1, 2, 1, 1, 0, 19, 29, 0, 5, 2, 0, 0, 1, 1, 1]' : 0.186326}
{'[0, 3, 0, 1, 2, 1, 1, 0, 19, 29, 0, 5, 2, 0, 0, 1, 1, 1]' : 0.186339}
{'[0, 3, 0, 1, 2, 1, 1, 0, 19, 29, 0, 5, 2, 0, 0, 1, 1, 1]' : 0.185873}
{'[0, 3, 0, 1, 2, 1, 1, 0, 19, 29, 0, 5, 2, 0, 0, 1, 1, 1]' : 0.185489}
{'[0, 3, 0, 1, 2, 1, 1, 0, 19, 29, 0, 5, 2, 0, 0, 1, 1, 1]' : 0.186178}
{'[0, 3, 0, 1, 2, 1, 1, 0, 19, 29, 0, 5, 2, 0, 0, 1, 1, 1]' : 0.185373}
{'[0, 3, 0, 1, 2, 1, 1, 0, 19, 29, 0, 5, 2, 0, 0, 1, 1, 1]' : 0.185499}
{'[0, 3, 0, 1, 2, 1, 1, 0, 19, 29, 0, 5, 2, 0, 0, 1, 1, 1]' : 0.185665}
{'[0, 3, 0, 1, 2, 1, 1, 0, 19, 29, 0, 5, 2, 0, 0, 1, 1, 1]' : 0.185132}

out:
 ["{'[0, 3, 0, 1, 2, 1, 1, 0, 19, 29, 0, 5, 2, 0, 0, 1, 1, 1]' : 0.205579}", "{'[0, 3, 0, 1, 2, 1, 1, 0, 19, 29, 0, 5, 2, 0, 0, 1, 1, 1]' : 0.197858}", "{'[0, 3, 0, 1, 2, 1, 1, 0, 19, 29, 0, 5, 2, 0, 0, 1, 1, 1]' : 0.181538}", "{'[0, 3, 0, 1, 2, 1, 1, 0, 19, 29, 0, 5, 2, 0, 0, 1, 1, 1]' : 0.18468}", "{'[0, 3, 0, 1, 2, 1, 1, 0, 19, 29, 0, 5, 2, 0, 0, 1, 1, 1]' : 0.185753}", "{'[0, 3, 0, 1, 2, 1, 1, 0, 19, 29, 0, 5, 2, 0, 0, 1, 1, 1]' : 0.185591}", "{'[0, 3, 0, 1, 2, 1, 1, 0, 19, 29, 0, 5, 2, 0, 0, 1, 1, 1]' : 0.185644}", "{'[0, 3, 0, 1, 2, 1, 1, 0, 19, 29, 0, 5, 2, 0, 0, 1, 1, 1]' : 0.186718}", "{'[0, 3, 0, 1, 2, 1, 1, 0, 19, 29, 0, 5, 2, 0, 0, 1, 1, 1]' : 0.185985}", "{'[0, 3, 0, 1, 2, 1, 1, 0, 19, 29, 0, 5, 2, 0, 0, 1, 1, 1]' : 0.185397}", "{'[0, 3, 0, 1, 2, 1, 1, 0, 19, 29, 0, 5, 2, 0, 0, 1, 1, 1]' : 0.185776}", "{'[0, 3, 0, 1, 2, 1, 1, 0, 19, 29, 0, 5, 2, 0, 0, 1, 1, 1]' : 0.1863}", "{'[0, 3, 0, 1, 2, 1, 1, 0, 19, 29, 0, 5, 2, 0, 0, 1, 1, 1]' : 0.185248}", "{'[0, 3, 0, 1, 2, 1, 1, 0, 19, 29, 0, 5, 2, 0, 0, 1, 1, 1]' : 0.185797}", "{'[0, 3, 0, 1, 2, 1, 1, 0, 19, 29, 0, 5, 2, 0, 0, 1, 1, 1]' : 0.184963}", "{'[0, 3, 0, 1, 2, 1, 1, 0, 19, 29, 0, 5, 2, 0, 0, 1, 1, 1]' : 0.184957}", "{'[0, 3, 0, 1, 2, 1, 1, 0, 19, 29, 0, 5, 2, 0, 0, 1, 1, 1]' : 0.18626}", "{'[0, 3, 0, 1, 2, 1, 1, 0, 19, 29, 0, 5, 2, 0, 0, 1, 1, 1]' : 0.185241}", "{'[0, 3, 0, 1, 2, 1, 1, 0, 19, 29, 0, 5, 2, 0, 0, 1, 1, 1]' : 0.18526}", "{'[0, 3, 0, 1, 2, 1, 1, 0, 19, 29, 0, 5, 2, 0, 0, 1, 1, 1]' : 0.186728}", "{'[0, 3, 0, 1, 2, 1, 1, 0, 19, 29, 0, 5, 2, 0, 0, 1, 1, 1]' : 0.185921}", "{'[0, 3, 0, 1, 2, 1, 1, 0, 19, 29, 0, 5, 2, 0, 0, 1, 1, 1]' : 0.186326}", "{'[0, 3, 0, 1, 2, 1, 1, 0, 19, 29, 0, 5, 2, 0, 0, 1, 1, 1]' : 0.186339}", "{'[0, 3, 0, 1, 2, 1, 1, 0, 19, 29, 0, 5, 2, 0, 0, 1, 1, 1]' : 0.185873}", "{'[0, 3, 0, 1, 2, 1, 1, 0, 19, 29, 0, 5, 2, 0, 0, 1, 1, 1]' : 0.185489}", "{'[0, 3, 0, 1, 2, 1, 1, 0, 19, 29, 0, 5, 2, 0, 0, 1, 1, 1]' : 0.186178}", "{'[0, 3, 0, 1, 2, 1, 1, 0, 19, 29, 0, 5, 2, 0, 0, 1, 1, 1]' : 0.185373}", "{'[0, 3, 0, 1, 2, 1, 1, 0, 19, 29, 0, 5, 2, 0, 0, 1, 1, 1]' : 0.185499}", "{'[0, 3, 0, 1, 2, 1, 1, 0, 19, 29, 0, 5, 2, 0, 0, 1, 1, 1]' : 0.185665}", "{'[0, 3, 0, 1, 2, 1, 1, 0, 19, 29, 0, 5, 2, 0, 0, 1, 1, 1]' : 0.185132}"]
returning from 'run': {'[0, 3, 0, 1, 2, 1, 1, 0, 19, 29, 0, 5, 2, 0, 0, 1, 1, 1]': ([0.205579, 0.197858, 0.181538, 0.18468, 0.185753, 0.185591, 0.185644, 0.186718, 0.185985, 0.185397, 0.185776, 0.1863, 0.185248, 0.185797, 0.184963, 0.184957, 0.18626, 0.185241, 0.18526, 0.186728, 0.185921, 0.186326, 0.186339, 0.185873, 0.185489, 0.186178, 0.185373, 0.185499, 0.185665, 0.185132], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 3, 0, 1, 2, 1, 1, 0, 19, 29, 0, 5, 2, 0, 0, 1, 1, 1]': ([0.205579, 0.197858, 0.181538, 0.18468, 0.185753, 0.185591, 0.185644, 0.186718, 0.185985, 0.185397, 0.185776, 0.1863, 0.185248, 0.185797, 0.184963, 0.184957, 0.18626, 0.185241, 0.18526, 0.186728, 0.185921, 0.186326, 0.186339, 0.185873, 0.185489, 0.186178, 0.185373, 0.185499, 0.185665, 0.185132], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	57
        Max loop nest depth: 	5
        Additions: 		1738
        Multiplications: 	700
        Divisions: 		0
        Logical: 		0
        Reads: 			3265
        Writes: 		566
        Comparisons:		57
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest53.exe __orio_perftest53.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest53.exe  
Program Test Output: 
{'[6, 3, 6, 0, 0, 6, 0, 0, 2, 15, 3, 0, 1, 1, 0, 1, 1, 0]' : 0.120951}
{'[6, 3, 6, 0, 0, 6, 0, 0, 2, 15, 3, 0, 1, 1, 0, 1, 1, 0]' : 0.120818}
{'[6, 3, 6, 0, 0, 6, 0, 0, 2, 15, 3, 0, 1, 1, 0, 1, 1, 0]' : 0.12076}
{'[6, 3, 6, 0, 0, 6, 0, 0, 2, 15, 3, 0, 1, 1, 0, 1, 1, 0]' : 0.118845}
{'[6, 3, 6, 0, 0, 6, 0, 0, 2, 15, 3, 0, 1, 1, 0, 1, 1, 0]' : 0.108387}
{'[6, 3, 6, 0, 0, 6, 0, 0, 2, 15, 3, 0, 1, 1, 0, 1, 1, 0]' : 0.108405}
{'[6, 3, 6, 0, 0, 6, 0, 0, 2, 15, 3, 0, 1, 1, 0, 1, 1, 0]' : 0.105428}
{'[6, 3, 6, 0, 0, 6, 0, 0, 2, 15, 3, 0, 1, 1, 0, 1, 1, 0]' : 0.1017}
{'[6, 3, 6, 0, 0, 6, 0, 0, 2, 15, 3, 0, 1, 1, 0, 1, 1, 0]' : 0.101963}
{'[6, 3, 6, 0, 0, 6, 0, 0, 2, 15, 3, 0, 1, 1, 0, 1, 1, 0]' : 0.106857}
{'[6, 3, 6, 0, 0, 6, 0, 0, 2, 15, 3, 0, 1, 1, 0, 1, 1, 0]' : 0.104525}
{'[6, 3, 6, 0, 0, 6, 0, 0, 2, 15, 3, 0, 1, 1, 0, 1, 1, 0]' : 0.102338}
{'[6, 3, 6, 0, 0, 6, 0, 0, 2, 15, 3, 0, 1, 1, 0, 1, 1, 0]' : 0.102284}
{'[6, 3, 6, 0, 0, 6, 0, 0, 2, 15, 3, 0, 1, 1, 0, 1, 1, 0]' : 0.103988}
{'[6, 3, 6, 0, 0, 6, 0, 0, 2, 15, 3, 0, 1, 1, 0, 1, 1, 0]' : 0.105305}
{'[6, 3, 6, 0, 0, 6, 0, 0, 2, 15, 3, 0, 1, 1, 0, 1, 1, 0]' : 0.105155}
{'[6, 3, 6, 0, 0, 6, 0, 0, 2, 15, 3, 0, 1, 1, 0, 1, 1, 0]' : 0.104851}
{'[6, 3, 6, 0, 0, 6, 0, 0, 2, 15, 3, 0, 1, 1, 0, 1, 1, 0]' : 0.0994959}
{'[6, 3, 6, 0, 0, 6, 0, 0, 2, 15, 3, 0, 1, 1, 0, 1, 1, 0]' : 0.103382}
{'[6, 3, 6, 0, 0, 6, 0, 0, 2, 15, 3, 0, 1, 1, 0, 1, 1, 0]' : 0.1084}
{'[6, 3, 6, 0, 0, 6, 0, 0, 2, 15, 3, 0, 1, 1, 0, 1, 1, 0]' : 0.105793}
{'[6, 3, 6, 0, 0, 6, 0, 0, 2, 15, 3, 0, 1, 1, 0, 1, 1, 0]' : 0.105416}
{'[6, 3, 6, 0, 0, 6, 0, 0, 2, 15, 3, 0, 1, 1, 0, 1, 1, 0]' : 0.105333}
{'[6, 3, 6, 0, 0, 6, 0, 0, 2, 15, 3, 0, 1, 1, 0, 1, 1, 0]' : 0.107675}
{'[6, 3, 6, 0, 0, 6, 0, 0, 2, 15, 3, 0, 1, 1, 0, 1, 1, 0]' : 0.108299}
{'[6, 3, 6, 0, 0, 6, 0, 0, 2, 15, 3, 0, 1, 1, 0, 1, 1, 0]' : 0.10829}
{'[6, 3, 6, 0, 0, 6, 0, 0, 2, 15, 3, 0, 1, 1, 0, 1, 1, 0]' : 0.106904}
{'[6, 3, 6, 0, 0, 6, 0, 0, 2, 15, 3, 0, 1, 1, 0, 1, 1, 0]' : 0.102404}
{'[6, 3, 6, 0, 0, 6, 0, 0, 2, 15, 3, 0, 1, 1, 0, 1, 1, 0]' : 0.108278}
{'[6, 3, 6, 0, 0, 6, 0, 0, 2, 15, 3, 0, 1, 1, 0, 1, 1, 0]' : 0.105257}

out:
 ["{'[6, 3, 6, 0, 0, 6, 0, 0, 2, 15, 3, 0, 1, 1, 0, 1, 1, 0]' : 0.120951}", "{'[6, 3, 6, 0, 0, 6, 0, 0, 2, 15, 3, 0, 1, 1, 0, 1, 1, 0]' : 0.120818}", "{'[6, 3, 6, 0, 0, 6, 0, 0, 2, 15, 3, 0, 1, 1, 0, 1, 1, 0]' : 0.12076}", "{'[6, 3, 6, 0, 0, 6, 0, 0, 2, 15, 3, 0, 1, 1, 0, 1, 1, 0]' : 0.118845}", "{'[6, 3, 6, 0, 0, 6, 0, 0, 2, 15, 3, 0, 1, 1, 0, 1, 1, 0]' : 0.108387}", "{'[6, 3, 6, 0, 0, 6, 0, 0, 2, 15, 3, 0, 1, 1, 0, 1, 1, 0]' : 0.108405}", "{'[6, 3, 6, 0, 0, 6, 0, 0, 2, 15, 3, 0, 1, 1, 0, 1, 1, 0]' : 0.105428}", "{'[6, 3, 6, 0, 0, 6, 0, 0, 2, 15, 3, 0, 1, 1, 0, 1, 1, 0]' : 0.1017}", "{'[6, 3, 6, 0, 0, 6, 0, 0, 2, 15, 3, 0, 1, 1, 0, 1, 1, 0]' : 0.101963}", "{'[6, 3, 6, 0, 0, 6, 0, 0, 2, 15, 3, 0, 1, 1, 0, 1, 1, 0]' : 0.106857}", "{'[6, 3, 6, 0, 0, 6, 0, 0, 2, 15, 3, 0, 1, 1, 0, 1, 1, 0]' : 0.104525}", "{'[6, 3, 6, 0, 0, 6, 0, 0, 2, 15, 3, 0, 1, 1, 0, 1, 1, 0]' : 0.102338}", "{'[6, 3, 6, 0, 0, 6, 0, 0, 2, 15, 3, 0, 1, 1, 0, 1, 1, 0]' : 0.102284}", "{'[6, 3, 6, 0, 0, 6, 0, 0, 2, 15, 3, 0, 1, 1, 0, 1, 1, 0]' : 0.103988}", "{'[6, 3, 6, 0, 0, 6, 0, 0, 2, 15, 3, 0, 1, 1, 0, 1, 1, 0]' : 0.105305}", "{'[6, 3, 6, 0, 0, 6, 0, 0, 2, 15, 3, 0, 1, 1, 0, 1, 1, 0]' : 0.105155}", "{'[6, 3, 6, 0, 0, 6, 0, 0, 2, 15, 3, 0, 1, 1, 0, 1, 1, 0]' : 0.104851}", "{'[6, 3, 6, 0, 0, 6, 0, 0, 2, 15, 3, 0, 1, 1, 0, 1, 1, 0]' : 0.0994959}", "{'[6, 3, 6, 0, 0, 6, 0, 0, 2, 15, 3, 0, 1, 1, 0, 1, 1, 0]' : 0.103382}", "{'[6, 3, 6, 0, 0, 6, 0, 0, 2, 15, 3, 0, 1, 1, 0, 1, 1, 0]' : 0.1084}", "{'[6, 3, 6, 0, 0, 6, 0, 0, 2, 15, 3, 0, 1, 1, 0, 1, 1, 0]' : 0.105793}", "{'[6, 3, 6, 0, 0, 6, 0, 0, 2, 15, 3, 0, 1, 1, 0, 1, 1, 0]' : 0.105416}", "{'[6, 3, 6, 0, 0, 6, 0, 0, 2, 15, 3, 0, 1, 1, 0, 1, 1, 0]' : 0.105333}", "{'[6, 3, 6, 0, 0, 6, 0, 0, 2, 15, 3, 0, 1, 1, 0, 1, 1, 0]' : 0.107675}", "{'[6, 3, 6, 0, 0, 6, 0, 0, 2, 15, 3, 0, 1, 1, 0, 1, 1, 0]' : 0.108299}", "{'[6, 3, 6, 0, 0, 6, 0, 0, 2, 15, 3, 0, 1, 1, 0, 1, 1, 0]' : 0.10829}", "{'[6, 3, 6, 0, 0, 6, 0, 0, 2, 15, 3, 0, 1, 1, 0, 1, 1, 0]' : 0.106904}", "{'[6, 3, 6, 0, 0, 6, 0, 0, 2, 15, 3, 0, 1, 1, 0, 1, 1, 0]' : 0.102404}", "{'[6, 3, 6, 0, 0, 6, 0, 0, 2, 15, 3, 0, 1, 1, 0, 1, 1, 0]' : 0.108278}", "{'[6, 3, 6, 0, 0, 6, 0, 0, 2, 15, 3, 0, 1, 1, 0, 1, 1, 0]' : 0.105257}"]
returning from 'run': {'[6, 3, 6, 0, 0, 6, 0, 0, 2, 15, 3, 0, 1, 1, 0, 1, 1, 0]': ([0.120951, 0.120818, 0.12076, 0.118845, 0.108387, 0.108405, 0.105428, 0.1017, 0.101963, 0.106857, 0.104525, 0.102338, 0.102284, 0.103988, 0.105305, 0.105155, 0.104851, 0.0994959, 0.103382, 0.1084, 0.105793, 0.105416, 0.105333, 0.107675, 0.108299, 0.10829, 0.106904, 0.102404, 0.108278, 0.105257], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 3, 6, 0, 0, 6, 0, 0, 2, 15, 3, 0, 1, 1, 0, 1, 1, 0]': ([0.120951, 0.120818, 0.12076, 0.118845, 0.108387, 0.108405, 0.105428, 0.1017, 0.101963, 0.106857, 0.104525, 0.102338, 0.102284, 0.103988, 0.105305, 0.105155, 0.104851, 0.0994959, 0.103382, 0.1084, 0.105793, 0.105416, 0.105333, 0.107675, 0.108299, 0.10829, 0.106904, 0.102404, 0.108278, 0.105257], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	98
        Max loop nest depth: 	5
        Additions: 		3242
        Multiplications: 	952
        Divisions: 		0
        Logical: 		0
        Reads: 			5402
        Writes: 		786
        Comparisons:		98
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest54.exe __orio_perftest54.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest54.exe  
Program Test Output: 
{'[0, 3, 1, 6, 0, 1, 1, 1, 6, 15, 25, 0, 0, 0, 0, 1, 0, 0]' : 0.270862}
{'[0, 3, 1, 6, 0, 1, 1, 1, 6, 15, 25, 0, 0, 0, 0, 1, 0, 0]' : 0.270781}
{'[0, 3, 1, 6, 0, 1, 1, 1, 6, 15, 25, 0, 0, 0, 0, 1, 0, 0]' : 0.270827}
{'[0, 3, 1, 6, 0, 1, 1, 1, 6, 15, 25, 0, 0, 0, 0, 1, 0, 0]' : 0.271182}
{'[0, 3, 1, 6, 0, 1, 1, 1, 6, 15, 25, 0, 0, 0, 0, 1, 0, 0]' : 0.277068}
{'[0, 3, 1, 6, 0, 1, 1, 1, 6, 15, 25, 0, 0, 0, 0, 1, 0, 0]' : 0.279635}
{'[0, 3, 1, 6, 0, 1, 1, 1, 6, 15, 25, 0, 0, 0, 0, 1, 0, 0]' : 0.279359}
{'[0, 3, 1, 6, 0, 1, 1, 1, 6, 15, 25, 0, 0, 0, 0, 1, 0, 0]' : 0.273215}
{'[0, 3, 1, 6, 0, 1, 1, 1, 6, 15, 25, 0, 0, 0, 0, 1, 0, 0]' : 0.274157}
{'[0, 3, 1, 6, 0, 1, 1, 1, 6, 15, 25, 0, 0, 0, 0, 1, 0, 0]' : 0.274518}
{'[0, 3, 1, 6, 0, 1, 1, 1, 6, 15, 25, 0, 0, 0, 0, 1, 0, 0]' : 0.276976}
{'[0, 3, 1, 6, 0, 1, 1, 1, 6, 15, 25, 0, 0, 0, 0, 1, 0, 0]' : 0.268499}
{'[0, 3, 1, 6, 0, 1, 1, 1, 6, 15, 25, 0, 0, 0, 0, 1, 0, 0]' : 0.265527}
{'[0, 3, 1, 6, 0, 1, 1, 1, 6, 15, 25, 0, 0, 0, 0, 1, 0, 0]' : 0.279484}
{'[0, 3, 1, 6, 0, 1, 1, 1, 6, 15, 25, 0, 0, 0, 0, 1, 0, 0]' : 0.279533}
{'[0, 3, 1, 6, 0, 1, 1, 1, 6, 15, 25, 0, 0, 0, 0, 1, 0, 0]' : 0.279429}
{'[0, 3, 1, 6, 0, 1, 1, 1, 6, 15, 25, 0, 0, 0, 0, 1, 0, 0]' : 0.279708}
{'[0, 3, 1, 6, 0, 1, 1, 1, 6, 15, 25, 0, 0, 0, 0, 1, 0, 0]' : 0.279678}
{'[0, 3, 1, 6, 0, 1, 1, 1, 6, 15, 25, 0, 0, 0, 0, 1, 0, 0]' : 0.279963}
{'[0, 3, 1, 6, 0, 1, 1, 1, 6, 15, 25, 0, 0, 0, 0, 1, 0, 0]' : 0.279629}
{'[0, 3, 1, 6, 0, 1, 1, 1, 6, 15, 25, 0, 0, 0, 0, 1, 0, 0]' : 0.279681}
{'[0, 3, 1, 6, 0, 1, 1, 1, 6, 15, 25, 0, 0, 0, 0, 1, 0, 0]' : 0.280081}
{'[0, 3, 1, 6, 0, 1, 1, 1, 6, 15, 25, 0, 0, 0, 0, 1, 0, 0]' : 0.279471}
{'[0, 3, 1, 6, 0, 1, 1, 1, 6, 15, 25, 0, 0, 0, 0, 1, 0, 0]' : 0.279454}
{'[0, 3, 1, 6, 0, 1, 1, 1, 6, 15, 25, 0, 0, 0, 0, 1, 0, 0]' : 0.271842}
{'[0, 3, 1, 6, 0, 1, 1, 1, 6, 15, 25, 0, 0, 0, 0, 1, 0, 0]' : 0.272553}
{'[0, 3, 1, 6, 0, 1, 1, 1, 6, 15, 25, 0, 0, 0, 0, 1, 0, 0]' : 0.279455}
{'[0, 3, 1, 6, 0, 1, 1, 1, 6, 15, 25, 0, 0, 0, 0, 1, 0, 0]' : 0.279425}
{'[0, 3, 1, 6, 0, 1, 1, 1, 6, 15, 25, 0, 0, 0, 0, 1, 0, 0]' : 0.279518}
{'[0, 3, 1, 6, 0, 1, 1, 1, 6, 15, 25, 0, 0, 0, 0, 1, 0, 0]' : 0.279429}

out:
 ["{'[0, 3, 1, 6, 0, 1, 1, 1, 6, 15, 25, 0, 0, 0, 0, 1, 0, 0]' : 0.270862}", "{'[0, 3, 1, 6, 0, 1, 1, 1, 6, 15, 25, 0, 0, 0, 0, 1, 0, 0]' : 0.270781}", "{'[0, 3, 1, 6, 0, 1, 1, 1, 6, 15, 25, 0, 0, 0, 0, 1, 0, 0]' : 0.270827}", "{'[0, 3, 1, 6, 0, 1, 1, 1, 6, 15, 25, 0, 0, 0, 0, 1, 0, 0]' : 0.271182}", "{'[0, 3, 1, 6, 0, 1, 1, 1, 6, 15, 25, 0, 0, 0, 0, 1, 0, 0]' : 0.277068}", "{'[0, 3, 1, 6, 0, 1, 1, 1, 6, 15, 25, 0, 0, 0, 0, 1, 0, 0]' : 0.279635}", "{'[0, 3, 1, 6, 0, 1, 1, 1, 6, 15, 25, 0, 0, 0, 0, 1, 0, 0]' : 0.279359}", "{'[0, 3, 1, 6, 0, 1, 1, 1, 6, 15, 25, 0, 0, 0, 0, 1, 0, 0]' : 0.273215}", "{'[0, 3, 1, 6, 0, 1, 1, 1, 6, 15, 25, 0, 0, 0, 0, 1, 0, 0]' : 0.274157}", "{'[0, 3, 1, 6, 0, 1, 1, 1, 6, 15, 25, 0, 0, 0, 0, 1, 0, 0]' : 0.274518}", "{'[0, 3, 1, 6, 0, 1, 1, 1, 6, 15, 25, 0, 0, 0, 0, 1, 0, 0]' : 0.276976}", "{'[0, 3, 1, 6, 0, 1, 1, 1, 6, 15, 25, 0, 0, 0, 0, 1, 0, 0]' : 0.268499}", "{'[0, 3, 1, 6, 0, 1, 1, 1, 6, 15, 25, 0, 0, 0, 0, 1, 0, 0]' : 0.265527}", "{'[0, 3, 1, 6, 0, 1, 1, 1, 6, 15, 25, 0, 0, 0, 0, 1, 0, 0]' : 0.279484}", "{'[0, 3, 1, 6, 0, 1, 1, 1, 6, 15, 25, 0, 0, 0, 0, 1, 0, 0]' : 0.279533}", "{'[0, 3, 1, 6, 0, 1, 1, 1, 6, 15, 25, 0, 0, 0, 0, 1, 0, 0]' : 0.279429}", "{'[0, 3, 1, 6, 0, 1, 1, 1, 6, 15, 25, 0, 0, 0, 0, 1, 0, 0]' : 0.279708}", "{'[0, 3, 1, 6, 0, 1, 1, 1, 6, 15, 25, 0, 0, 0, 0, 1, 0, 0]' : 0.279678}", "{'[0, 3, 1, 6, 0, 1, 1, 1, 6, 15, 25, 0, 0, 0, 0, 1, 0, 0]' : 0.279963}", "{'[0, 3, 1, 6, 0, 1, 1, 1, 6, 15, 25, 0, 0, 0, 0, 1, 0, 0]' : 0.279629}", "{'[0, 3, 1, 6, 0, 1, 1, 1, 6, 15, 25, 0, 0, 0, 0, 1, 0, 0]' : 0.279681}", "{'[0, 3, 1, 6, 0, 1, 1, 1, 6, 15, 25, 0, 0, 0, 0, 1, 0, 0]' : 0.280081}", "{'[0, 3, 1, 6, 0, 1, 1, 1, 6, 15, 25, 0, 0, 0, 0, 1, 0, 0]' : 0.279471}", "{'[0, 3, 1, 6, 0, 1, 1, 1, 6, 15, 25, 0, 0, 0, 0, 1, 0, 0]' : 0.279454}", "{'[0, 3, 1, 6, 0, 1, 1, 1, 6, 15, 25, 0, 0, 0, 0, 1, 0, 0]' : 0.271842}", "{'[0, 3, 1, 6, 0, 1, 1, 1, 6, 15, 25, 0, 0, 0, 0, 1, 0, 0]' : 0.272553}", "{'[0, 3, 1, 6, 0, 1, 1, 1, 6, 15, 25, 0, 0, 0, 0, 1, 0, 0]' : 0.279455}", "{'[0, 3, 1, 6, 0, 1, 1, 1, 6, 15, 25, 0, 0, 0, 0, 1, 0, 0]' : 0.279425}", "{'[0, 3, 1, 6, 0, 1, 1, 1, 6, 15, 25, 0, 0, 0, 0, 1, 0, 0]' : 0.279518}", "{'[0, 3, 1, 6, 0, 1, 1, 1, 6, 15, 25, 0, 0, 0, 0, 1, 0, 0]' : 0.279429}"]
returning from 'run': {'[0, 3, 1, 6, 0, 1, 1, 1, 6, 15, 25, 0, 0, 0, 0, 1, 0, 0]': ([0.270862, 0.270781, 0.270827, 0.271182, 0.277068, 0.279635, 0.279359, 0.273215, 0.274157, 0.274518, 0.276976, 0.268499, 0.265527, 0.279484, 0.279533, 0.279429, 0.279708, 0.279678, 0.279963, 0.279629, 0.279681, 0.280081, 0.279471, 0.279454, 0.271842, 0.272553, 0.279455, 0.279425, 0.279518, 0.279429], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 3, 1, 6, 0, 1, 1, 1, 6, 15, 25, 0, 0, 0, 0, 1, 0, 0]': ([0.270862, 0.270781, 0.270827, 0.271182, 0.277068, 0.279635, 0.279359, 0.273215, 0.274157, 0.274518, 0.276976, 0.268499, 0.265527, 0.279484, 0.279533, 0.279429, 0.279708, 0.279678, 0.279963, 0.279629, 0.279681, 0.280081, 0.279471, 0.279454, 0.271842, 0.272553, 0.279455, 0.279425, 0.279518, 0.279429], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	23
        Max loop nest depth: 	5
        Additions: 		1802
        Multiplications: 	858
        Divisions: 		0
        Logical: 		0
        Reads: 			3560
        Writes: 		605
        Comparisons:		23
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest55.exe __orio_perftest55.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest55.exe  
Program Test Output: 
{'[0, 3, 1, 1, 0, 4, 0, 1, 28, 0, 6, 3, 2, 0, 0, 1, 0, 0]' : 0.171933}
{'[0, 3, 1, 1, 0, 4, 0, 1, 28, 0, 6, 3, 2, 0, 0, 1, 0, 0]' : 0.175837}
{'[0, 3, 1, 1, 0, 4, 0, 1, 28, 0, 6, 3, 2, 0, 0, 1, 0, 0]' : 0.175245}
{'[0, 3, 1, 1, 0, 4, 0, 1, 28, 0, 6, 3, 2, 0, 0, 1, 0, 0]' : 0.172223}
{'[0, 3, 1, 1, 0, 4, 0, 1, 28, 0, 6, 3, 2, 0, 0, 1, 0, 0]' : 0.174141}
{'[0, 3, 1, 1, 0, 4, 0, 1, 28, 0, 6, 3, 2, 0, 0, 1, 0, 0]' : 0.173544}
{'[0, 3, 1, 1, 0, 4, 0, 1, 28, 0, 6, 3, 2, 0, 0, 1, 0, 0]' : 0.173633}
{'[0, 3, 1, 1, 0, 4, 0, 1, 28, 0, 6, 3, 2, 0, 0, 1, 0, 0]' : 0.176267}
{'[0, 3, 1, 1, 0, 4, 0, 1, 28, 0, 6, 3, 2, 0, 0, 1, 0, 0]' : 0.176091}
{'[0, 3, 1, 1, 0, 4, 0, 1, 28, 0, 6, 3, 2, 0, 0, 1, 0, 0]' : 0.17405}
{'[0, 3, 1, 1, 0, 4, 0, 1, 28, 0, 6, 3, 2, 0, 0, 1, 0, 0]' : 0.173405}
{'[0, 3, 1, 1, 0, 4, 0, 1, 28, 0, 6, 3, 2, 0, 0, 1, 0, 0]' : 0.173613}
{'[0, 3, 1, 1, 0, 4, 0, 1, 28, 0, 6, 3, 2, 0, 0, 1, 0, 0]' : 0.17388}
{'[0, 3, 1, 1, 0, 4, 0, 1, 28, 0, 6, 3, 2, 0, 0, 1, 0, 0]' : 0.175983}
{'[0, 3, 1, 1, 0, 4, 0, 1, 28, 0, 6, 3, 2, 0, 0, 1, 0, 0]' : 0.174366}
{'[0, 3, 1, 1, 0, 4, 0, 1, 28, 0, 6, 3, 2, 0, 0, 1, 0, 0]' : 0.175137}
{'[0, 3, 1, 1, 0, 4, 0, 1, 28, 0, 6, 3, 2, 0, 0, 1, 0, 0]' : 0.173948}
{'[0, 3, 1, 1, 0, 4, 0, 1, 28, 0, 6, 3, 2, 0, 0, 1, 0, 0]' : 0.172915}
{'[0, 3, 1, 1, 0, 4, 0, 1, 28, 0, 6, 3, 2, 0, 0, 1, 0, 0]' : 0.174774}
{'[0, 3, 1, 1, 0, 4, 0, 1, 28, 0, 6, 3, 2, 0, 0, 1, 0, 0]' : 0.17581}
{'[0, 3, 1, 1, 0, 4, 0, 1, 28, 0, 6, 3, 2, 0, 0, 1, 0, 0]' : 0.176477}
{'[0, 3, 1, 1, 0, 4, 0, 1, 28, 0, 6, 3, 2, 0, 0, 1, 0, 0]' : 0.175303}
{'[0, 3, 1, 1, 0, 4, 0, 1, 28, 0, 6, 3, 2, 0, 0, 1, 0, 0]' : 0.173378}
{'[0, 3, 1, 1, 0, 4, 0, 1, 28, 0, 6, 3, 2, 0, 0, 1, 0, 0]' : 0.172507}
{'[0, 3, 1, 1, 0, 4, 0, 1, 28, 0, 6, 3, 2, 0, 0, 1, 0, 0]' : 0.175098}
{'[0, 3, 1, 1, 0, 4, 0, 1, 28, 0, 6, 3, 2, 0, 0, 1, 0, 0]' : 0.1759}
{'[0, 3, 1, 1, 0, 4, 0, 1, 28, 0, 6, 3, 2, 0, 0, 1, 0, 0]' : 0.173109}
{'[0, 3, 1, 1, 0, 4, 0, 1, 28, 0, 6, 3, 2, 0, 0, 1, 0, 0]' : 0.177153}
{'[0, 3, 1, 1, 0, 4, 0, 1, 28, 0, 6, 3, 2, 0, 0, 1, 0, 0]' : 0.172966}
{'[0, 3, 1, 1, 0, 4, 0, 1, 28, 0, 6, 3, 2, 0, 0, 1, 0, 0]' : 0.173687}

out:
 ["{'[0, 3, 1, 1, 0, 4, 0, 1, 28, 0, 6, 3, 2, 0, 0, 1, 0, 0]' : 0.171933}", "{'[0, 3, 1, 1, 0, 4, 0, 1, 28, 0, 6, 3, 2, 0, 0, 1, 0, 0]' : 0.175837}", "{'[0, 3, 1, 1, 0, 4, 0, 1, 28, 0, 6, 3, 2, 0, 0, 1, 0, 0]' : 0.175245}", "{'[0, 3, 1, 1, 0, 4, 0, 1, 28, 0, 6, 3, 2, 0, 0, 1, 0, 0]' : 0.172223}", "{'[0, 3, 1, 1, 0, 4, 0, 1, 28, 0, 6, 3, 2, 0, 0, 1, 0, 0]' : 0.174141}", "{'[0, 3, 1, 1, 0, 4, 0, 1, 28, 0, 6, 3, 2, 0, 0, 1, 0, 0]' : 0.173544}", "{'[0, 3, 1, 1, 0, 4, 0, 1, 28, 0, 6, 3, 2, 0, 0, 1, 0, 0]' : 0.173633}", "{'[0, 3, 1, 1, 0, 4, 0, 1, 28, 0, 6, 3, 2, 0, 0, 1, 0, 0]' : 0.176267}", "{'[0, 3, 1, 1, 0, 4, 0, 1, 28, 0, 6, 3, 2, 0, 0, 1, 0, 0]' : 0.176091}", "{'[0, 3, 1, 1, 0, 4, 0, 1, 28, 0, 6, 3, 2, 0, 0, 1, 0, 0]' : 0.17405}", "{'[0, 3, 1, 1, 0, 4, 0, 1, 28, 0, 6, 3, 2, 0, 0, 1, 0, 0]' : 0.173405}", "{'[0, 3, 1, 1, 0, 4, 0, 1, 28, 0, 6, 3, 2, 0, 0, 1, 0, 0]' : 0.173613}", "{'[0, 3, 1, 1, 0, 4, 0, 1, 28, 0, 6, 3, 2, 0, 0, 1, 0, 0]' : 0.17388}", "{'[0, 3, 1, 1, 0, 4, 0, 1, 28, 0, 6, 3, 2, 0, 0, 1, 0, 0]' : 0.175983}", "{'[0, 3, 1, 1, 0, 4, 0, 1, 28, 0, 6, 3, 2, 0, 0, 1, 0, 0]' : 0.174366}", "{'[0, 3, 1, 1, 0, 4, 0, 1, 28, 0, 6, 3, 2, 0, 0, 1, 0, 0]' : 0.175137}", "{'[0, 3, 1, 1, 0, 4, 0, 1, 28, 0, 6, 3, 2, 0, 0, 1, 0, 0]' : 0.173948}", "{'[0, 3, 1, 1, 0, 4, 0, 1, 28, 0, 6, 3, 2, 0, 0, 1, 0, 0]' : 0.172915}", "{'[0, 3, 1, 1, 0, 4, 0, 1, 28, 0, 6, 3, 2, 0, 0, 1, 0, 0]' : 0.174774}", "{'[0, 3, 1, 1, 0, 4, 0, 1, 28, 0, 6, 3, 2, 0, 0, 1, 0, 0]' : 0.17581}", "{'[0, 3, 1, 1, 0, 4, 0, 1, 28, 0, 6, 3, 2, 0, 0, 1, 0, 0]' : 0.176477}", "{'[0, 3, 1, 1, 0, 4, 0, 1, 28, 0, 6, 3, 2, 0, 0, 1, 0, 0]' : 0.175303}", "{'[0, 3, 1, 1, 0, 4, 0, 1, 28, 0, 6, 3, 2, 0, 0, 1, 0, 0]' : 0.173378}", "{'[0, 3, 1, 1, 0, 4, 0, 1, 28, 0, 6, 3, 2, 0, 0, 1, 0, 0]' : 0.172507}", "{'[0, 3, 1, 1, 0, 4, 0, 1, 28, 0, 6, 3, 2, 0, 0, 1, 0, 0]' : 0.175098}", "{'[0, 3, 1, 1, 0, 4, 0, 1, 28, 0, 6, 3, 2, 0, 0, 1, 0, 0]' : 0.1759}", "{'[0, 3, 1, 1, 0, 4, 0, 1, 28, 0, 6, 3, 2, 0, 0, 1, 0, 0]' : 0.173109}", "{'[0, 3, 1, 1, 0, 4, 0, 1, 28, 0, 6, 3, 2, 0, 0, 1, 0, 0]' : 0.177153}", "{'[0, 3, 1, 1, 0, 4, 0, 1, 28, 0, 6, 3, 2, 0, 0, 1, 0, 0]' : 0.172966}", "{'[0, 3, 1, 1, 0, 4, 0, 1, 28, 0, 6, 3, 2, 0, 0, 1, 0, 0]' : 0.173687}"]
returning from 'run': {'[0, 3, 1, 1, 0, 4, 0, 1, 28, 0, 6, 3, 2, 0, 0, 1, 0, 0]': ([0.171933, 0.175837, 0.175245, 0.172223, 0.174141, 0.173544, 0.173633, 0.176267, 0.176091, 0.17405, 0.173405, 0.173613, 0.17388, 0.175983, 0.174366, 0.175137, 0.173948, 0.172915, 0.174774, 0.17581, 0.176477, 0.175303, 0.173378, 0.172507, 0.175098, 0.1759, 0.173109, 0.177153, 0.172966, 0.173687], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 3, 1, 1, 0, 4, 0, 1, 28, 0, 6, 3, 2, 0, 0, 1, 0, 0]': ([0.171933, 0.175837, 0.175245, 0.172223, 0.174141, 0.173544, 0.173633, 0.176267, 0.176091, 0.17405, 0.173405, 0.173613, 0.17388, 0.175983, 0.174366, 0.175137, 0.173948, 0.172915, 0.174774, 0.17581, 0.176477, 0.175303, 0.173378, 0.172507, 0.175098, 0.1759, 0.173109, 0.177153, 0.172966, 0.173687], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	74
        Max loop nest depth: 	6
        Additions: 		2387
        Multiplications: 	1020
        Divisions: 		0
        Logical: 		0
        Reads: 			4814
        Writes: 		872
        Comparisons:		74
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest56.exe __orio_perftest56.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest56.exe  
Program Test Output: 
{'[2, 3, 2, 6, 2, 2, 0, 1, 17, 20, 7, 0, 1, 0, 1, 1, 0, 0]' : 0.0990429}
{'[2, 3, 2, 6, 2, 2, 0, 1, 17, 20, 7, 0, 1, 0, 1, 1, 0, 0]' : 0.0988529}
{'[2, 3, 2, 6, 2, 2, 0, 1, 17, 20, 7, 0, 1, 0, 1, 1, 0, 0]' : 0.098815}
{'[2, 3, 2, 6, 2, 2, 0, 1, 17, 20, 7, 0, 1, 0, 1, 1, 0, 0]' : 0.09885}
{'[2, 3, 2, 6, 2, 2, 0, 1, 17, 20, 7, 0, 1, 0, 1, 1, 0, 0]' : 0.099021}
{'[2, 3, 2, 6, 2, 2, 0, 1, 17, 20, 7, 0, 1, 0, 1, 1, 0, 0]' : 0.098881}
{'[2, 3, 2, 6, 2, 2, 0, 1, 17, 20, 7, 0, 1, 0, 1, 1, 0, 0]' : 0.0988419}
{'[2, 3, 2, 6, 2, 2, 0, 1, 17, 20, 7, 0, 1, 0, 1, 1, 0, 0]' : 0.0987942}
{'[2, 3, 2, 6, 2, 2, 0, 1, 17, 20, 7, 0, 1, 0, 1, 1, 0, 0]' : 0.0988412}
{'[2, 3, 2, 6, 2, 2, 0, 1, 17, 20, 7, 0, 1, 0, 1, 1, 0, 0]' : 0.099046}
{'[2, 3, 2, 6, 2, 2, 0, 1, 17, 20, 7, 0, 1, 0, 1, 1, 0, 0]' : 0.0989859}
{'[2, 3, 2, 6, 2, 2, 0, 1, 17, 20, 7, 0, 1, 0, 1, 1, 0, 0]' : 0.0987642}
{'[2, 3, 2, 6, 2, 2, 0, 1, 17, 20, 7, 0, 1, 0, 1, 1, 0, 0]' : 0.0987761}
{'[2, 3, 2, 6, 2, 2, 0, 1, 17, 20, 7, 0, 1, 0, 1, 1, 0, 0]' : 0.098933}
{'[2, 3, 2, 6, 2, 2, 0, 1, 17, 20, 7, 0, 1, 0, 1, 1, 0, 0]' : 0.0988781}
{'[2, 3, 2, 6, 2, 2, 0, 1, 17, 20, 7, 0, 1, 0, 1, 1, 0, 0]' : 0.0989001}
{'[2, 3, 2, 6, 2, 2, 0, 1, 17, 20, 7, 0, 1, 0, 1, 1, 0, 0]' : 0.098737}
{'[2, 3, 2, 6, 2, 2, 0, 1, 17, 20, 7, 0, 1, 0, 1, 1, 0, 0]' : 0.0988019}
{'[2, 3, 2, 6, 2, 2, 0, 1, 17, 20, 7, 0, 1, 0, 1, 1, 0, 0]' : 0.0987921}
{'[2, 3, 2, 6, 2, 2, 0, 1, 17, 20, 7, 0, 1, 0, 1, 1, 0, 0]' : 0.098974}
{'[2, 3, 2, 6, 2, 2, 0, 1, 17, 20, 7, 0, 1, 0, 1, 1, 0, 0]' : 0.0990591}
{'[2, 3, 2, 6, 2, 2, 0, 1, 17, 20, 7, 0, 1, 0, 1, 1, 0, 0]' : 0.0990009}
{'[2, 3, 2, 6, 2, 2, 0, 1, 17, 20, 7, 0, 1, 0, 1, 1, 0, 0]' : 0.099041}
{'[2, 3, 2, 6, 2, 2, 0, 1, 17, 20, 7, 0, 1, 0, 1, 1, 0, 0]' : 0.0987701}
{'[2, 3, 2, 6, 2, 2, 0, 1, 17, 20, 7, 0, 1, 0, 1, 1, 0, 0]' : 0.0988429}
{'[2, 3, 2, 6, 2, 2, 0, 1, 17, 20, 7, 0, 1, 0, 1, 1, 0, 0]' : 0.0989671}
{'[2, 3, 2, 6, 2, 2, 0, 1, 17, 20, 7, 0, 1, 0, 1, 1, 0, 0]' : 0.098798}
{'[2, 3, 2, 6, 2, 2, 0, 1, 17, 20, 7, 0, 1, 0, 1, 1, 0, 0]' : 0.0989339}
{'[2, 3, 2, 6, 2, 2, 0, 1, 17, 20, 7, 0, 1, 0, 1, 1, 0, 0]' : 0.0989261}
{'[2, 3, 2, 6, 2, 2, 0, 1, 17, 20, 7, 0, 1, 0, 1, 1, 0, 0]' : 0.098496}

out:
 ["{'[2, 3, 2, 6, 2, 2, 0, 1, 17, 20, 7, 0, 1, 0, 1, 1, 0, 0]' : 0.0990429}", "{'[2, 3, 2, 6, 2, 2, 0, 1, 17, 20, 7, 0, 1, 0, 1, 1, 0, 0]' : 0.0988529}", "{'[2, 3, 2, 6, 2, 2, 0, 1, 17, 20, 7, 0, 1, 0, 1, 1, 0, 0]' : 0.098815}", "{'[2, 3, 2, 6, 2, 2, 0, 1, 17, 20, 7, 0, 1, 0, 1, 1, 0, 0]' : 0.09885}", "{'[2, 3, 2, 6, 2, 2, 0, 1, 17, 20, 7, 0, 1, 0, 1, 1, 0, 0]' : 0.099021}", "{'[2, 3, 2, 6, 2, 2, 0, 1, 17, 20, 7, 0, 1, 0, 1, 1, 0, 0]' : 0.098881}", "{'[2, 3, 2, 6, 2, 2, 0, 1, 17, 20, 7, 0, 1, 0, 1, 1, 0, 0]' : 0.0988419}", "{'[2, 3, 2, 6, 2, 2, 0, 1, 17, 20, 7, 0, 1, 0, 1, 1, 0, 0]' : 0.0987942}", "{'[2, 3, 2, 6, 2, 2, 0, 1, 17, 20, 7, 0, 1, 0, 1, 1, 0, 0]' : 0.0988412}", "{'[2, 3, 2, 6, 2, 2, 0, 1, 17, 20, 7, 0, 1, 0, 1, 1, 0, 0]' : 0.099046}", "{'[2, 3, 2, 6, 2, 2, 0, 1, 17, 20, 7, 0, 1, 0, 1, 1, 0, 0]' : 0.0989859}", "{'[2, 3, 2, 6, 2, 2, 0, 1, 17, 20, 7, 0, 1, 0, 1, 1, 0, 0]' : 0.0987642}", "{'[2, 3, 2, 6, 2, 2, 0, 1, 17, 20, 7, 0, 1, 0, 1, 1, 0, 0]' : 0.0987761}", "{'[2, 3, 2, 6, 2, 2, 0, 1, 17, 20, 7, 0, 1, 0, 1, 1, 0, 0]' : 0.098933}", "{'[2, 3, 2, 6, 2, 2, 0, 1, 17, 20, 7, 0, 1, 0, 1, 1, 0, 0]' : 0.0988781}", "{'[2, 3, 2, 6, 2, 2, 0, 1, 17, 20, 7, 0, 1, 0, 1, 1, 0, 0]' : 0.0989001}", "{'[2, 3, 2, 6, 2, 2, 0, 1, 17, 20, 7, 0, 1, 0, 1, 1, 0, 0]' : 0.098737}", "{'[2, 3, 2, 6, 2, 2, 0, 1, 17, 20, 7, 0, 1, 0, 1, 1, 0, 0]' : 0.0988019}", "{'[2, 3, 2, 6, 2, 2, 0, 1, 17, 20, 7, 0, 1, 0, 1, 1, 0, 0]' : 0.0987921}", "{'[2, 3, 2, 6, 2, 2, 0, 1, 17, 20, 7, 0, 1, 0, 1, 1, 0, 0]' : 0.098974}", "{'[2, 3, 2, 6, 2, 2, 0, 1, 17, 20, 7, 0, 1, 0, 1, 1, 0, 0]' : 0.0990591}", "{'[2, 3, 2, 6, 2, 2, 0, 1, 17, 20, 7, 0, 1, 0, 1, 1, 0, 0]' : 0.0990009}", "{'[2, 3, 2, 6, 2, 2, 0, 1, 17, 20, 7, 0, 1, 0, 1, 1, 0, 0]' : 0.099041}", "{'[2, 3, 2, 6, 2, 2, 0, 1, 17, 20, 7, 0, 1, 0, 1, 1, 0, 0]' : 0.0987701}", "{'[2, 3, 2, 6, 2, 2, 0, 1, 17, 20, 7, 0, 1, 0, 1, 1, 0, 0]' : 0.0988429}", "{'[2, 3, 2, 6, 2, 2, 0, 1, 17, 20, 7, 0, 1, 0, 1, 1, 0, 0]' : 0.0989671}", "{'[2, 3, 2, 6, 2, 2, 0, 1, 17, 20, 7, 0, 1, 0, 1, 1, 0, 0]' : 0.098798}", "{'[2, 3, 2, 6, 2, 2, 0, 1, 17, 20, 7, 0, 1, 0, 1, 1, 0, 0]' : 0.0989339}", "{'[2, 3, 2, 6, 2, 2, 0, 1, 17, 20, 7, 0, 1, 0, 1, 1, 0, 0]' : 0.0989261}", "{'[2, 3, 2, 6, 2, 2, 0, 1, 17, 20, 7, 0, 1, 0, 1, 1, 0, 0]' : 0.098496}"]
returning from 'run': {'[2, 3, 2, 6, 2, 2, 0, 1, 17, 20, 7, 0, 1, 0, 1, 1, 0, 0]': ([0.0990429, 0.0988529, 0.098815, 0.09885, 0.099021, 0.098881, 0.0988419, 0.0987942, 0.0988412, 0.099046, 0.0989859, 0.0987642, 0.0987761, 0.098933, 0.0988781, 0.0989001, 0.098737, 0.0988019, 0.0987921, 0.098974, 0.0990591, 0.0990009, 0.099041, 0.0987701, 0.0988429, 0.0989671, 0.098798, 0.0989339, 0.0989261, 0.098496], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 3, 2, 6, 2, 2, 0, 1, 17, 20, 7, 0, 1, 0, 1, 1, 0, 0]': ([0.0990429, 0.0988529, 0.098815, 0.09885, 0.099021, 0.098881, 0.0988419, 0.0987942, 0.0988412, 0.099046, 0.0989859, 0.0987642, 0.0987761, 0.098933, 0.0988781, 0.0989001, 0.098737, 0.0988019, 0.0987921, 0.098974, 0.0990591, 0.0990009, 0.099041, 0.0987701, 0.0988429, 0.0989671, 0.098798, 0.0989339, 0.0989261, 0.098496], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	6
        Additions: 		668
        Multiplications: 	272
        Divisions: 		0
        Logical: 		0
        Reads: 			1426
        Writes: 		306
        Comparisons:		20
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest57.exe __orio_perftest57.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest57.exe  
Program Test Output: 
{'[6, 3, 2, 6, 3, 1, 0, 0, 28, 6, 0, 14, 0, 0, 0, 1, 1, 1]' : 0.118675}
{'[6, 3, 2, 6, 3, 1, 0, 0, 28, 6, 0, 14, 0, 0, 0, 1, 1, 1]' : 0.118312}
{'[6, 3, 2, 6, 3, 1, 0, 0, 28, 6, 0, 14, 0, 0, 0, 1, 1, 1]' : 0.117572}
{'[6, 3, 2, 6, 3, 1, 0, 0, 28, 6, 0, 14, 0, 0, 0, 1, 1, 1]' : 0.106109}
{'[6, 3, 2, 6, 3, 1, 0, 0, 28, 6, 0, 14, 0, 0, 0, 1, 1, 1]' : 0.105411}
{'[6, 3, 2, 6, 3, 1, 0, 0, 28, 6, 0, 14, 0, 0, 0, 1, 1, 1]' : 0.105489}
{'[6, 3, 2, 6, 3, 1, 0, 0, 28, 6, 0, 14, 0, 0, 0, 1, 1, 1]' : 0.10518}
{'[6, 3, 2, 6, 3, 1, 0, 0, 28, 6, 0, 14, 0, 0, 0, 1, 1, 1]' : 0.105178}
{'[6, 3, 2, 6, 3, 1, 0, 0, 28, 6, 0, 14, 0, 0, 0, 1, 1, 1]' : 0.105165}
{'[6, 3, 2, 6, 3, 1, 0, 0, 28, 6, 0, 14, 0, 0, 0, 1, 1, 1]' : 0.105521}
{'[6, 3, 2, 6, 3, 1, 0, 0, 28, 6, 0, 14, 0, 0, 0, 1, 1, 1]' : 0.105479}
{'[6, 3, 2, 6, 3, 1, 0, 0, 28, 6, 0, 14, 0, 0, 0, 1, 1, 1]' : 0.105311}
{'[6, 3, 2, 6, 3, 1, 0, 0, 28, 6, 0, 14, 0, 0, 0, 1, 1, 1]' : 0.105269}
{'[6, 3, 2, 6, 3, 1, 0, 0, 28, 6, 0, 14, 0, 0, 0, 1, 1, 1]' : 0.10522}
{'[6, 3, 2, 6, 3, 1, 0, 0, 28, 6, 0, 14, 0, 0, 0, 1, 1, 1]' : 0.107225}
{'[6, 3, 2, 6, 3, 1, 0, 0, 28, 6, 0, 14, 0, 0, 0, 1, 1, 1]' : 0.105612}
{'[6, 3, 2, 6, 3, 1, 0, 0, 28, 6, 0, 14, 0, 0, 0, 1, 1, 1]' : 0.105124}
{'[6, 3, 2, 6, 3, 1, 0, 0, 28, 6, 0, 14, 0, 0, 0, 1, 1, 1]' : 0.105222}
{'[6, 3, 2, 6, 3, 1, 0, 0, 28, 6, 0, 14, 0, 0, 0, 1, 1, 1]' : 0.103798}
{'[6, 3, 2, 6, 3, 1, 0, 0, 28, 6, 0, 14, 0, 0, 0, 1, 1, 1]' : 0.105094}
{'[6, 3, 2, 6, 3, 1, 0, 0, 28, 6, 0, 14, 0, 0, 0, 1, 1, 1]' : 0.102928}
{'[6, 3, 2, 6, 3, 1, 0, 0, 28, 6, 0, 14, 0, 0, 0, 1, 1, 1]' : 0.102986}
{'[6, 3, 2, 6, 3, 1, 0, 0, 28, 6, 0, 14, 0, 0, 0, 1, 1, 1]' : 0.102702}
{'[6, 3, 2, 6, 3, 1, 0, 0, 28, 6, 0, 14, 0, 0, 0, 1, 1, 1]' : 0.103387}
{'[6, 3, 2, 6, 3, 1, 0, 0, 28, 6, 0, 14, 0, 0, 0, 1, 1, 1]' : 0.107818}
{'[6, 3, 2, 6, 3, 1, 0, 0, 28, 6, 0, 14, 0, 0, 0, 1, 1, 1]' : 0.107119}
{'[6, 3, 2, 6, 3, 1, 0, 0, 28, 6, 0, 14, 0, 0, 0, 1, 1, 1]' : 0.105288}
{'[6, 3, 2, 6, 3, 1, 0, 0, 28, 6, 0, 14, 0, 0, 0, 1, 1, 1]' : 0.105427}
{'[6, 3, 2, 6, 3, 1, 0, 0, 28, 6, 0, 14, 0, 0, 0, 1, 1, 1]' : 0.106289}
{'[6, 3, 2, 6, 3, 1, 0, 0, 28, 6, 0, 14, 0, 0, 0, 1, 1, 1]' : 0.107765}

out:
 ["{'[6, 3, 2, 6, 3, 1, 0, 0, 28, 6, 0, 14, 0, 0, 0, 1, 1, 1]' : 0.118675}", "{'[6, 3, 2, 6, 3, 1, 0, 0, 28, 6, 0, 14, 0, 0, 0, 1, 1, 1]' : 0.118312}", "{'[6, 3, 2, 6, 3, 1, 0, 0, 28, 6, 0, 14, 0, 0, 0, 1, 1, 1]' : 0.117572}", "{'[6, 3, 2, 6, 3, 1, 0, 0, 28, 6, 0, 14, 0, 0, 0, 1, 1, 1]' : 0.106109}", "{'[6, 3, 2, 6, 3, 1, 0, 0, 28, 6, 0, 14, 0, 0, 0, 1, 1, 1]' : 0.105411}", "{'[6, 3, 2, 6, 3, 1, 0, 0, 28, 6, 0, 14, 0, 0, 0, 1, 1, 1]' : 0.105489}", "{'[6, 3, 2, 6, 3, 1, 0, 0, 28, 6, 0, 14, 0, 0, 0, 1, 1, 1]' : 0.10518}", "{'[6, 3, 2, 6, 3, 1, 0, 0, 28, 6, 0, 14, 0, 0, 0, 1, 1, 1]' : 0.105178}", "{'[6, 3, 2, 6, 3, 1, 0, 0, 28, 6, 0, 14, 0, 0, 0, 1, 1, 1]' : 0.105165}", "{'[6, 3, 2, 6, 3, 1, 0, 0, 28, 6, 0, 14, 0, 0, 0, 1, 1, 1]' : 0.105521}", "{'[6, 3, 2, 6, 3, 1, 0, 0, 28, 6, 0, 14, 0, 0, 0, 1, 1, 1]' : 0.105479}", "{'[6, 3, 2, 6, 3, 1, 0, 0, 28, 6, 0, 14, 0, 0, 0, 1, 1, 1]' : 0.105311}", "{'[6, 3, 2, 6, 3, 1, 0, 0, 28, 6, 0, 14, 0, 0, 0, 1, 1, 1]' : 0.105269}", "{'[6, 3, 2, 6, 3, 1, 0, 0, 28, 6, 0, 14, 0, 0, 0, 1, 1, 1]' : 0.10522}", "{'[6, 3, 2, 6, 3, 1, 0, 0, 28, 6, 0, 14, 0, 0, 0, 1, 1, 1]' : 0.107225}", "{'[6, 3, 2, 6, 3, 1, 0, 0, 28, 6, 0, 14, 0, 0, 0, 1, 1, 1]' : 0.105612}", "{'[6, 3, 2, 6, 3, 1, 0, 0, 28, 6, 0, 14, 0, 0, 0, 1, 1, 1]' : 0.105124}", "{'[6, 3, 2, 6, 3, 1, 0, 0, 28, 6, 0, 14, 0, 0, 0, 1, 1, 1]' : 0.105222}", "{'[6, 3, 2, 6, 3, 1, 0, 0, 28, 6, 0, 14, 0, 0, 0, 1, 1, 1]' : 0.103798}", "{'[6, 3, 2, 6, 3, 1, 0, 0, 28, 6, 0, 14, 0, 0, 0, 1, 1, 1]' : 0.105094}", "{'[6, 3, 2, 6, 3, 1, 0, 0, 28, 6, 0, 14, 0, 0, 0, 1, 1, 1]' : 0.102928}", "{'[6, 3, 2, 6, 3, 1, 0, 0, 28, 6, 0, 14, 0, 0, 0, 1, 1, 1]' : 0.102986}", "{'[6, 3, 2, 6, 3, 1, 0, 0, 28, 6, 0, 14, 0, 0, 0, 1, 1, 1]' : 0.102702}", "{'[6, 3, 2, 6, 3, 1, 0, 0, 28, 6, 0, 14, 0, 0, 0, 1, 1, 1]' : 0.103387}", "{'[6, 3, 2, 6, 3, 1, 0, 0, 28, 6, 0, 14, 0, 0, 0, 1, 1, 1]' : 0.107818}", "{'[6, 3, 2, 6, 3, 1, 0, 0, 28, 6, 0, 14, 0, 0, 0, 1, 1, 1]' : 0.107119}", "{'[6, 3, 2, 6, 3, 1, 0, 0, 28, 6, 0, 14, 0, 0, 0, 1, 1, 1]' : 0.105288}", "{'[6, 3, 2, 6, 3, 1, 0, 0, 28, 6, 0, 14, 0, 0, 0, 1, 1, 1]' : 0.105427}", "{'[6, 3, 2, 6, 3, 1, 0, 0, 28, 6, 0, 14, 0, 0, 0, 1, 1, 1]' : 0.106289}", "{'[6, 3, 2, 6, 3, 1, 0, 0, 28, 6, 0, 14, 0, 0, 0, 1, 1, 1]' : 0.107765}"]
returning from 'run': {'[6, 3, 2, 6, 3, 1, 0, 0, 28, 6, 0, 14, 0, 0, 0, 1, 1, 1]': ([0.118675, 0.118312, 0.117572, 0.106109, 0.105411, 0.105489, 0.10518, 0.105178, 0.105165, 0.105521, 0.105479, 0.105311, 0.105269, 0.10522, 0.107225, 0.105612, 0.105124, 0.105222, 0.103798, 0.105094, 0.102928, 0.102986, 0.102702, 0.103387, 0.107818, 0.107119, 0.105288, 0.105427, 0.106289, 0.107765], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 3, 2, 6, 3, 1, 0, 0, 28, 6, 0, 14, 0, 0, 0, 1, 1, 1]': ([0.118675, 0.118312, 0.117572, 0.106109, 0.105411, 0.105489, 0.10518, 0.105178, 0.105165, 0.105521, 0.105479, 0.105311, 0.105269, 0.10522, 0.107225, 0.105612, 0.105124, 0.105222, 0.103798, 0.105094, 0.102928, 0.102986, 0.102702, 0.103387, 0.107818, 0.107119, 0.105288, 0.105427, 0.106289, 0.107765], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	6
        Additions: 		476
        Multiplications: 	166
        Divisions: 		0
        Logical: 		0
        Reads: 			1118
        Writes: 		244
        Comparisons:		15
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest58.exe __orio_perftest58.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest58.exe  
Program Test Output: 
{'[1, 3, 2, 6, 6, 5, 1, 0, 9, 0, 28, 19, 0, 0, 2, 1, 1, 1]' : 0.171274}
{'[1, 3, 2, 6, 6, 5, 1, 0, 9, 0, 28, 19, 0, 0, 2, 1, 1, 1]' : 0.170929}
{'[1, 3, 2, 6, 6, 5, 1, 0, 9, 0, 28, 19, 0, 0, 2, 1, 1, 1]' : 0.171564}
{'[1, 3, 2, 6, 6, 5, 1, 0, 9, 0, 28, 19, 0, 0, 2, 1, 1, 1]' : 0.170789}
{'[1, 3, 2, 6, 6, 5, 1, 0, 9, 0, 28, 19, 0, 0, 2, 1, 1, 1]' : 0.171323}
{'[1, 3, 2, 6, 6, 5, 1, 0, 9, 0, 28, 19, 0, 0, 2, 1, 1, 1]' : 0.168726}
{'[1, 3, 2, 6, 6, 5, 1, 0, 9, 0, 28, 19, 0, 0, 2, 1, 1, 1]' : 0.171078}
{'[1, 3, 2, 6, 6, 5, 1, 0, 9, 0, 28, 19, 0, 0, 2, 1, 1, 1]' : 0.17075}
{'[1, 3, 2, 6, 6, 5, 1, 0, 9, 0, 28, 19, 0, 0, 2, 1, 1, 1]' : 0.171166}
{'[1, 3, 2, 6, 6, 5, 1, 0, 9, 0, 28, 19, 0, 0, 2, 1, 1, 1]' : 0.170988}
{'[1, 3, 2, 6, 6, 5, 1, 0, 9, 0, 28, 19, 0, 0, 2, 1, 1, 1]' : 0.170994}
{'[1, 3, 2, 6, 6, 5, 1, 0, 9, 0, 28, 19, 0, 0, 2, 1, 1, 1]' : 0.171001}
{'[1, 3, 2, 6, 6, 5, 1, 0, 9, 0, 28, 19, 0, 0, 2, 1, 1, 1]' : 0.170995}
{'[1, 3, 2, 6, 6, 5, 1, 0, 9, 0, 28, 19, 0, 0, 2, 1, 1, 1]' : 0.171133}
{'[1, 3, 2, 6, 6, 5, 1, 0, 9, 0, 28, 19, 0, 0, 2, 1, 1, 1]' : 0.170967}
{'[1, 3, 2, 6, 6, 5, 1, 0, 9, 0, 28, 19, 0, 0, 2, 1, 1, 1]' : 0.171192}
{'[1, 3, 2, 6, 6, 5, 1, 0, 9, 0, 28, 19, 0, 0, 2, 1, 1, 1]' : 0.170904}
{'[1, 3, 2, 6, 6, 5, 1, 0, 9, 0, 28, 19, 0, 0, 2, 1, 1, 1]' : 0.171198}
{'[1, 3, 2, 6, 6, 5, 1, 0, 9, 0, 28, 19, 0, 0, 2, 1, 1, 1]' : 0.170787}
{'[1, 3, 2, 6, 6, 5, 1, 0, 9, 0, 28, 19, 0, 0, 2, 1, 1, 1]' : 0.170782}
{'[1, 3, 2, 6, 6, 5, 1, 0, 9, 0, 28, 19, 0, 0, 2, 1, 1, 1]' : 0.171081}
{'[1, 3, 2, 6, 6, 5, 1, 0, 9, 0, 28, 19, 0, 0, 2, 1, 1, 1]' : 0.171304}
{'[1, 3, 2, 6, 6, 5, 1, 0, 9, 0, 28, 19, 0, 0, 2, 1, 1, 1]' : 0.171127}
{'[1, 3, 2, 6, 6, 5, 1, 0, 9, 0, 28, 19, 0, 0, 2, 1, 1, 1]' : 0.171224}
{'[1, 3, 2, 6, 6, 5, 1, 0, 9, 0, 28, 19, 0, 0, 2, 1, 1, 1]' : 0.170709}
{'[1, 3, 2, 6, 6, 5, 1, 0, 9, 0, 28, 19, 0, 0, 2, 1, 1, 1]' : 0.170965}
{'[1, 3, 2, 6, 6, 5, 1, 0, 9, 0, 28, 19, 0, 0, 2, 1, 1, 1]' : 0.171147}
{'[1, 3, 2, 6, 6, 5, 1, 0, 9, 0, 28, 19, 0, 0, 2, 1, 1, 1]' : 0.170961}
{'[1, 3, 2, 6, 6, 5, 1, 0, 9, 0, 28, 19, 0, 0, 2, 1, 1, 1]' : 0.171238}
{'[1, 3, 2, 6, 6, 5, 1, 0, 9, 0, 28, 19, 0, 0, 2, 1, 1, 1]' : 0.170962}

out:
 ["{'[1, 3, 2, 6, 6, 5, 1, 0, 9, 0, 28, 19, 0, 0, 2, 1, 1, 1]' : 0.171274}", "{'[1, 3, 2, 6, 6, 5, 1, 0, 9, 0, 28, 19, 0, 0, 2, 1, 1, 1]' : 0.170929}", "{'[1, 3, 2, 6, 6, 5, 1, 0, 9, 0, 28, 19, 0, 0, 2, 1, 1, 1]' : 0.171564}", "{'[1, 3, 2, 6, 6, 5, 1, 0, 9, 0, 28, 19, 0, 0, 2, 1, 1, 1]' : 0.170789}", "{'[1, 3, 2, 6, 6, 5, 1, 0, 9, 0, 28, 19, 0, 0, 2, 1, 1, 1]' : 0.171323}", "{'[1, 3, 2, 6, 6, 5, 1, 0, 9, 0, 28, 19, 0, 0, 2, 1, 1, 1]' : 0.168726}", "{'[1, 3, 2, 6, 6, 5, 1, 0, 9, 0, 28, 19, 0, 0, 2, 1, 1, 1]' : 0.171078}", "{'[1, 3, 2, 6, 6, 5, 1, 0, 9, 0, 28, 19, 0, 0, 2, 1, 1, 1]' : 0.17075}", "{'[1, 3, 2, 6, 6, 5, 1, 0, 9, 0, 28, 19, 0, 0, 2, 1, 1, 1]' : 0.171166}", "{'[1, 3, 2, 6, 6, 5, 1, 0, 9, 0, 28, 19, 0, 0, 2, 1, 1, 1]' : 0.170988}", "{'[1, 3, 2, 6, 6, 5, 1, 0, 9, 0, 28, 19, 0, 0, 2, 1, 1, 1]' : 0.170994}", "{'[1, 3, 2, 6, 6, 5, 1, 0, 9, 0, 28, 19, 0, 0, 2, 1, 1, 1]' : 0.171001}", "{'[1, 3, 2, 6, 6, 5, 1, 0, 9, 0, 28, 19, 0, 0, 2, 1, 1, 1]' : 0.170995}", "{'[1, 3, 2, 6, 6, 5, 1, 0, 9, 0, 28, 19, 0, 0, 2, 1, 1, 1]' : 0.171133}", "{'[1, 3, 2, 6, 6, 5, 1, 0, 9, 0, 28, 19, 0, 0, 2, 1, 1, 1]' : 0.170967}", "{'[1, 3, 2, 6, 6, 5, 1, 0, 9, 0, 28, 19, 0, 0, 2, 1, 1, 1]' : 0.171192}", "{'[1, 3, 2, 6, 6, 5, 1, 0, 9, 0, 28, 19, 0, 0, 2, 1, 1, 1]' : 0.170904}", "{'[1, 3, 2, 6, 6, 5, 1, 0, 9, 0, 28, 19, 0, 0, 2, 1, 1, 1]' : 0.171198}", "{'[1, 3, 2, 6, 6, 5, 1, 0, 9, 0, 28, 19, 0, 0, 2, 1, 1, 1]' : 0.170787}", "{'[1, 3, 2, 6, 6, 5, 1, 0, 9, 0, 28, 19, 0, 0, 2, 1, 1, 1]' : 0.170782}", "{'[1, 3, 2, 6, 6, 5, 1, 0, 9, 0, 28, 19, 0, 0, 2, 1, 1, 1]' : 0.171081}", "{'[1, 3, 2, 6, 6, 5, 1, 0, 9, 0, 28, 19, 0, 0, 2, 1, 1, 1]' : 0.171304}", "{'[1, 3, 2, 6, 6, 5, 1, 0, 9, 0, 28, 19, 0, 0, 2, 1, 1, 1]' : 0.171127}", "{'[1, 3, 2, 6, 6, 5, 1, 0, 9, 0, 28, 19, 0, 0, 2, 1, 1, 1]' : 0.171224}", "{'[1, 3, 2, 6, 6, 5, 1, 0, 9, 0, 28, 19, 0, 0, 2, 1, 1, 1]' : 0.170709}", "{'[1, 3, 2, 6, 6, 5, 1, 0, 9, 0, 28, 19, 0, 0, 2, 1, 1, 1]' : 0.170965}", "{'[1, 3, 2, 6, 6, 5, 1, 0, 9, 0, 28, 19, 0, 0, 2, 1, 1, 1]' : 0.171147}", "{'[1, 3, 2, 6, 6, 5, 1, 0, 9, 0, 28, 19, 0, 0, 2, 1, 1, 1]' : 0.170961}", "{'[1, 3, 2, 6, 6, 5, 1, 0, 9, 0, 28, 19, 0, 0, 2, 1, 1, 1]' : 0.171238}", "{'[1, 3, 2, 6, 6, 5, 1, 0, 9, 0, 28, 19, 0, 0, 2, 1, 1, 1]' : 0.170962}"]
returning from 'run': {'[1, 3, 2, 6, 6, 5, 1, 0, 9, 0, 28, 19, 0, 0, 2, 1, 1, 1]': ([0.171274, 0.170929, 0.171564, 0.170789, 0.171323, 0.168726, 0.171078, 0.17075, 0.171166, 0.170988, 0.170994, 0.171001, 0.170995, 0.171133, 0.170967, 0.171192, 0.170904, 0.171198, 0.170787, 0.170782, 0.171081, 0.171304, 0.171127, 0.171224, 0.170709, 0.170965, 0.171147, 0.170961, 0.171238, 0.170962], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 3, 2, 6, 6, 5, 1, 0, 9, 0, 28, 19, 0, 0, 2, 1, 1, 1]': ([0.171274, 0.170929, 0.171564, 0.170789, 0.171323, 0.168726, 0.171078, 0.17075, 0.171166, 0.170988, 0.170994, 0.171001, 0.170995, 0.171133, 0.170967, 0.171192, 0.170904, 0.171198, 0.170787, 0.170782, 0.171081, 0.171304, 0.171127, 0.171224, 0.170709, 0.170965, 0.171147, 0.170961, 0.171238, 0.170962], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	107
        Max loop nest depth: 	4
        Additions: 		4023
        Multiplications: 	912
        Divisions: 		0
        Logical: 		0
        Reads: 			8085
        Writes: 		1749
        Comparisons:		107
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest59.exe __orio_perftest59.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest59.exe  
Program Test Output: 
{'[1, 3, 1, 0, 0, 0, 0, 1, 18, 22, 0, 16, 0, 0, 0, 1, 0, 1]' : 0.289733}
{'[1, 3, 1, 0, 0, 0, 0, 1, 18, 22, 0, 16, 0, 0, 0, 1, 0, 1]' : 0.296932}
{'[1, 3, 1, 0, 0, 0, 0, 1, 18, 22, 0, 16, 0, 0, 0, 1, 0, 1]' : 0.293321}
{'[1, 3, 1, 0, 0, 0, 0, 1, 18, 22, 0, 16, 0, 0, 0, 1, 0, 1]' : 0.292572}
{'[1, 3, 1, 0, 0, 0, 0, 1, 18, 22, 0, 16, 0, 0, 0, 1, 0, 1]' : 0.292267}
{'[1, 3, 1, 0, 0, 0, 0, 1, 18, 22, 0, 16, 0, 0, 0, 1, 0, 1]' : 0.294841}
{'[1, 3, 1, 0, 0, 0, 0, 1, 18, 22, 0, 16, 0, 0, 0, 1, 0, 1]' : 0.292672}
{'[1, 3, 1, 0, 0, 0, 0, 1, 18, 22, 0, 16, 0, 0, 0, 1, 0, 1]' : 0.297663}
{'[1, 3, 1, 0, 0, 0, 0, 1, 18, 22, 0, 16, 0, 0, 0, 1, 0, 1]' : 0.294966}
{'[1, 3, 1, 0, 0, 0, 0, 1, 18, 22, 0, 16, 0, 0, 0, 1, 0, 1]' : 0.300816}
{'[1, 3, 1, 0, 0, 0, 0, 1, 18, 22, 0, 16, 0, 0, 0, 1, 0, 1]' : 0.302049}
{'[1, 3, 1, 0, 0, 0, 0, 1, 18, 22, 0, 16, 0, 0, 0, 1, 0, 1]' : 0.302116}
{'[1, 3, 1, 0, 0, 0, 0, 1, 18, 22, 0, 16, 0, 0, 0, 1, 0, 1]' : 0.297122}
{'[1, 3, 1, 0, 0, 0, 0, 1, 18, 22, 0, 16, 0, 0, 0, 1, 0, 1]' : 0.283496}
{'[1, 3, 1, 0, 0, 0, 0, 1, 18, 22, 0, 16, 0, 0, 0, 1, 0, 1]' : 0.290864}
{'[1, 3, 1, 0, 0, 0, 0, 1, 18, 22, 0, 16, 0, 0, 0, 1, 0, 1]' : 0.284495}
{'[1, 3, 1, 0, 0, 0, 0, 1, 18, 22, 0, 16, 0, 0, 0, 1, 0, 1]' : 0.286385}
{'[1, 3, 1, 0, 0, 0, 0, 1, 18, 22, 0, 16, 0, 0, 0, 1, 0, 1]' : 0.289368}
{'[1, 3, 1, 0, 0, 0, 0, 1, 18, 22, 0, 16, 0, 0, 0, 1, 0, 1]' : 0.302051}
{'[1, 3, 1, 0, 0, 0, 0, 1, 18, 22, 0, 16, 0, 0, 0, 1, 0, 1]' : 0.300755}
{'[1, 3, 1, 0, 0, 0, 0, 1, 18, 22, 0, 16, 0, 0, 0, 1, 0, 1]' : 0.292596}
{'[1, 3, 1, 0, 0, 0, 0, 1, 18, 22, 0, 16, 0, 0, 0, 1, 0, 1]' : 0.30069}
{'[1, 3, 1, 0, 0, 0, 0, 1, 18, 22, 0, 16, 0, 0, 0, 1, 0, 1]' : 0.295367}
{'[1, 3, 1, 0, 0, 0, 0, 1, 18, 22, 0, 16, 0, 0, 0, 1, 0, 1]' : 0.296686}
{'[1, 3, 1, 0, 0, 0, 0, 1, 18, 22, 0, 16, 0, 0, 0, 1, 0, 1]' : 0.298486}
{'[1, 3, 1, 0, 0, 0, 0, 1, 18, 22, 0, 16, 0, 0, 0, 1, 0, 1]' : 0.302581}
{'[1, 3, 1, 0, 0, 0, 0, 1, 18, 22, 0, 16, 0, 0, 0, 1, 0, 1]' : 0.302364}
{'[1, 3, 1, 0, 0, 0, 0, 1, 18, 22, 0, 16, 0, 0, 0, 1, 0, 1]' : 0.292019}
{'[1, 3, 1, 0, 0, 0, 0, 1, 18, 22, 0, 16, 0, 0, 0, 1, 0, 1]' : 0.28365}
{'[1, 3, 1, 0, 0, 0, 0, 1, 18, 22, 0, 16, 0, 0, 0, 1, 0, 1]' : 0.294844}

out:
 ["{'[1, 3, 1, 0, 0, 0, 0, 1, 18, 22, 0, 16, 0, 0, 0, 1, 0, 1]' : 0.289733}", "{'[1, 3, 1, 0, 0, 0, 0, 1, 18, 22, 0, 16, 0, 0, 0, 1, 0, 1]' : 0.296932}", "{'[1, 3, 1, 0, 0, 0, 0, 1, 18, 22, 0, 16, 0, 0, 0, 1, 0, 1]' : 0.293321}", "{'[1, 3, 1, 0, 0, 0, 0, 1, 18, 22, 0, 16, 0, 0, 0, 1, 0, 1]' : 0.292572}", "{'[1, 3, 1, 0, 0, 0, 0, 1, 18, 22, 0, 16, 0, 0, 0, 1, 0, 1]' : 0.292267}", "{'[1, 3, 1, 0, 0, 0, 0, 1, 18, 22, 0, 16, 0, 0, 0, 1, 0, 1]' : 0.294841}", "{'[1, 3, 1, 0, 0, 0, 0, 1, 18, 22, 0, 16, 0, 0, 0, 1, 0, 1]' : 0.292672}", "{'[1, 3, 1, 0, 0, 0, 0, 1, 18, 22, 0, 16, 0, 0, 0, 1, 0, 1]' : 0.297663}", "{'[1, 3, 1, 0, 0, 0, 0, 1, 18, 22, 0, 16, 0, 0, 0, 1, 0, 1]' : 0.294966}", "{'[1, 3, 1, 0, 0, 0, 0, 1, 18, 22, 0, 16, 0, 0, 0, 1, 0, 1]' : 0.300816}", "{'[1, 3, 1, 0, 0, 0, 0, 1, 18, 22, 0, 16, 0, 0, 0, 1, 0, 1]' : 0.302049}", "{'[1, 3, 1, 0, 0, 0, 0, 1, 18, 22, 0, 16, 0, 0, 0, 1, 0, 1]' : 0.302116}", "{'[1, 3, 1, 0, 0, 0, 0, 1, 18, 22, 0, 16, 0, 0, 0, 1, 0, 1]' : 0.297122}", "{'[1, 3, 1, 0, 0, 0, 0, 1, 18, 22, 0, 16, 0, 0, 0, 1, 0, 1]' : 0.283496}", "{'[1, 3, 1, 0, 0, 0, 0, 1, 18, 22, 0, 16, 0, 0, 0, 1, 0, 1]' : 0.290864}", "{'[1, 3, 1, 0, 0, 0, 0, 1, 18, 22, 0, 16, 0, 0, 0, 1, 0, 1]' : 0.284495}", "{'[1, 3, 1, 0, 0, 0, 0, 1, 18, 22, 0, 16, 0, 0, 0, 1, 0, 1]' : 0.286385}", "{'[1, 3, 1, 0, 0, 0, 0, 1, 18, 22, 0, 16, 0, 0, 0, 1, 0, 1]' : 0.289368}", "{'[1, 3, 1, 0, 0, 0, 0, 1, 18, 22, 0, 16, 0, 0, 0, 1, 0, 1]' : 0.302051}", "{'[1, 3, 1, 0, 0, 0, 0, 1, 18, 22, 0, 16, 0, 0, 0, 1, 0, 1]' : 0.300755}", "{'[1, 3, 1, 0, 0, 0, 0, 1, 18, 22, 0, 16, 0, 0, 0, 1, 0, 1]' : 0.292596}", "{'[1, 3, 1, 0, 0, 0, 0, 1, 18, 22, 0, 16, 0, 0, 0, 1, 0, 1]' : 0.30069}", "{'[1, 3, 1, 0, 0, 0, 0, 1, 18, 22, 0, 16, 0, 0, 0, 1, 0, 1]' : 0.295367}", "{'[1, 3, 1, 0, 0, 0, 0, 1, 18, 22, 0, 16, 0, 0, 0, 1, 0, 1]' : 0.296686}", "{'[1, 3, 1, 0, 0, 0, 0, 1, 18, 22, 0, 16, 0, 0, 0, 1, 0, 1]' : 0.298486}", "{'[1, 3, 1, 0, 0, 0, 0, 1, 18, 22, 0, 16, 0, 0, 0, 1, 0, 1]' : 0.302581}", "{'[1, 3, 1, 0, 0, 0, 0, 1, 18, 22, 0, 16, 0, 0, 0, 1, 0, 1]' : 0.302364}", "{'[1, 3, 1, 0, 0, 0, 0, 1, 18, 22, 0, 16, 0, 0, 0, 1, 0, 1]' : 0.292019}", "{'[1, 3, 1, 0, 0, 0, 0, 1, 18, 22, 0, 16, 0, 0, 0, 1, 0, 1]' : 0.28365}", "{'[1, 3, 1, 0, 0, 0, 0, 1, 18, 22, 0, 16, 0, 0, 0, 1, 0, 1]' : 0.294844}"]
returning from 'run': {'[1, 3, 1, 0, 0, 0, 0, 1, 18, 22, 0, 16, 0, 0, 0, 1, 0, 1]': ([0.289733, 0.296932, 0.293321, 0.292572, 0.292267, 0.294841, 0.292672, 0.297663, 0.294966, 0.300816, 0.302049, 0.302116, 0.297122, 0.283496, 0.290864, 0.284495, 0.286385, 0.289368, 0.302051, 0.300755, 0.292596, 0.30069, 0.295367, 0.296686, 0.298486, 0.302581, 0.302364, 0.292019, 0.28365, 0.294844], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 3, 1, 0, 0, 0, 0, 1, 18, 22, 0, 16, 0, 0, 0, 1, 0, 1]': ([0.289733, 0.296932, 0.293321, 0.292572, 0.292267, 0.294841, 0.292672, 0.297663, 0.294966, 0.300816, 0.302049, 0.302116, 0.297122, 0.283496, 0.290864, 0.284495, 0.286385, 0.289368, 0.302051, 0.300755, 0.292596, 0.30069, 0.295367, 0.296686, 0.298486, 0.302581, 0.302364, 0.292019, 0.28365, 0.294844], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	56
        Max loop nest depth: 	6
        Additions: 		7684
        Multiplications: 	3720
        Divisions: 		0
        Logical: 		0
        Reads: 			14542
        Writes: 		2354
        Comparisons:		56
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest60.exe __orio_perftest60.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest60.exe  
Program Test Output: 
{'[6, 3, 2, 5, 0, 6, 1, 0, 3, 28, 0, 27, 2, 0, 0, 1, 1, 1]' : 0.187062}
{'[6, 3, 2, 5, 0, 6, 1, 0, 3, 28, 0, 27, 2, 0, 0, 1, 1, 1]' : 0.188359}
{'[6, 3, 2, 5, 0, 6, 1, 0, 3, 28, 0, 27, 2, 0, 0, 1, 1, 1]' : 0.186961}
{'[6, 3, 2, 5, 0, 6, 1, 0, 3, 28, 0, 27, 2, 0, 0, 1, 1, 1]' : 0.18367}
{'[6, 3, 2, 5, 0, 6, 1, 0, 3, 28, 0, 27, 2, 0, 0, 1, 1, 1]' : 0.190437}
{'[6, 3, 2, 5, 0, 6, 1, 0, 3, 28, 0, 27, 2, 0, 0, 1, 1, 1]' : 0.191535}
{'[6, 3, 2, 5, 0, 6, 1, 0, 3, 28, 0, 27, 2, 0, 0, 1, 1, 1]' : 0.191674}
{'[6, 3, 2, 5, 0, 6, 1, 0, 3, 28, 0, 27, 2, 0, 0, 1, 1, 1]' : 0.191892}
{'[6, 3, 2, 5, 0, 6, 1, 0, 3, 28, 0, 27, 2, 0, 0, 1, 1, 1]' : 0.188608}
{'[6, 3, 2, 5, 0, 6, 1, 0, 3, 28, 0, 27, 2, 0, 0, 1, 1, 1]' : 0.189632}
{'[6, 3, 2, 5, 0, 6, 1, 0, 3, 28, 0, 27, 2, 0, 0, 1, 1, 1]' : 0.188429}
{'[6, 3, 2, 5, 0, 6, 1, 0, 3, 28, 0, 27, 2, 0, 0, 1, 1, 1]' : 0.187739}
{'[6, 3, 2, 5, 0, 6, 1, 0, 3, 28, 0, 27, 2, 0, 0, 1, 1, 1]' : 0.190748}
{'[6, 3, 2, 5, 0, 6, 1, 0, 3, 28, 0, 27, 2, 0, 0, 1, 1, 1]' : 0.19053}
{'[6, 3, 2, 5, 0, 6, 1, 0, 3, 28, 0, 27, 2, 0, 0, 1, 1, 1]' : 0.188564}
{'[6, 3, 2, 5, 0, 6, 1, 0, 3, 28, 0, 27, 2, 0, 0, 1, 1, 1]' : 0.191541}
{'[6, 3, 2, 5, 0, 6, 1, 0, 3, 28, 0, 27, 2, 0, 0, 1, 1, 1]' : 0.191576}
{'[6, 3, 2, 5, 0, 6, 1, 0, 3, 28, 0, 27, 2, 0, 0, 1, 1, 1]' : 0.191757}
{'[6, 3, 2, 5, 0, 6, 1, 0, 3, 28, 0, 27, 2, 0, 0, 1, 1, 1]' : 0.191028}
{'[6, 3, 2, 5, 0, 6, 1, 0, 3, 28, 0, 27, 2, 0, 0, 1, 1, 1]' : 0.186756}
{'[6, 3, 2, 5, 0, 6, 1, 0, 3, 28, 0, 27, 2, 0, 0, 1, 1, 1]' : 0.189036}
{'[6, 3, 2, 5, 0, 6, 1, 0, 3, 28, 0, 27, 2, 0, 0, 1, 1, 1]' : 0.187919}
{'[6, 3, 2, 5, 0, 6, 1, 0, 3, 28, 0, 27, 2, 0, 0, 1, 1, 1]' : 0.189495}
{'[6, 3, 2, 5, 0, 6, 1, 0, 3, 28, 0, 27, 2, 0, 0, 1, 1, 1]' : 0.19179}
{'[6, 3, 2, 5, 0, 6, 1, 0, 3, 28, 0, 27, 2, 0, 0, 1, 1, 1]' : 0.191841}
{'[6, 3, 2, 5, 0, 6, 1, 0, 3, 28, 0, 27, 2, 0, 0, 1, 1, 1]' : 0.189747}
{'[6, 3, 2, 5, 0, 6, 1, 0, 3, 28, 0, 27, 2, 0, 0, 1, 1, 1]' : 0.187337}
{'[6, 3, 2, 5, 0, 6, 1, 0, 3, 28, 0, 27, 2, 0, 0, 1, 1, 1]' : 0.184801}
{'[6, 3, 2, 5, 0, 6, 1, 0, 3, 28, 0, 27, 2, 0, 0, 1, 1, 1]' : 0.188062}
{'[6, 3, 2, 5, 0, 6, 1, 0, 3, 28, 0, 27, 2, 0, 0, 1, 1, 1]' : 0.185814}

out:
 ["{'[6, 3, 2, 5, 0, 6, 1, 0, 3, 28, 0, 27, 2, 0, 0, 1, 1, 1]' : 0.187062}", "{'[6, 3, 2, 5, 0, 6, 1, 0, 3, 28, 0, 27, 2, 0, 0, 1, 1, 1]' : 0.188359}", "{'[6, 3, 2, 5, 0, 6, 1, 0, 3, 28, 0, 27, 2, 0, 0, 1, 1, 1]' : 0.186961}", "{'[6, 3, 2, 5, 0, 6, 1, 0, 3, 28, 0, 27, 2, 0, 0, 1, 1, 1]' : 0.18367}", "{'[6, 3, 2, 5, 0, 6, 1, 0, 3, 28, 0, 27, 2, 0, 0, 1, 1, 1]' : 0.190437}", "{'[6, 3, 2, 5, 0, 6, 1, 0, 3, 28, 0, 27, 2, 0, 0, 1, 1, 1]' : 0.191535}", "{'[6, 3, 2, 5, 0, 6, 1, 0, 3, 28, 0, 27, 2, 0, 0, 1, 1, 1]' : 0.191674}", "{'[6, 3, 2, 5, 0, 6, 1, 0, 3, 28, 0, 27, 2, 0, 0, 1, 1, 1]' : 0.191892}", "{'[6, 3, 2, 5, 0, 6, 1, 0, 3, 28, 0, 27, 2, 0, 0, 1, 1, 1]' : 0.188608}", "{'[6, 3, 2, 5, 0, 6, 1, 0, 3, 28, 0, 27, 2, 0, 0, 1, 1, 1]' : 0.189632}", "{'[6, 3, 2, 5, 0, 6, 1, 0, 3, 28, 0, 27, 2, 0, 0, 1, 1, 1]' : 0.188429}", "{'[6, 3, 2, 5, 0, 6, 1, 0, 3, 28, 0, 27, 2, 0, 0, 1, 1, 1]' : 0.187739}", "{'[6, 3, 2, 5, 0, 6, 1, 0, 3, 28, 0, 27, 2, 0, 0, 1, 1, 1]' : 0.190748}", "{'[6, 3, 2, 5, 0, 6, 1, 0, 3, 28, 0, 27, 2, 0, 0, 1, 1, 1]' : 0.19053}", "{'[6, 3, 2, 5, 0, 6, 1, 0, 3, 28, 0, 27, 2, 0, 0, 1, 1, 1]' : 0.188564}", "{'[6, 3, 2, 5, 0, 6, 1, 0, 3, 28, 0, 27, 2, 0, 0, 1, 1, 1]' : 0.191541}", "{'[6, 3, 2, 5, 0, 6, 1, 0, 3, 28, 0, 27, 2, 0, 0, 1, 1, 1]' : 0.191576}", "{'[6, 3, 2, 5, 0, 6, 1, 0, 3, 28, 0, 27, 2, 0, 0, 1, 1, 1]' : 0.191757}", "{'[6, 3, 2, 5, 0, 6, 1, 0, 3, 28, 0, 27, 2, 0, 0, 1, 1, 1]' : 0.191028}", "{'[6, 3, 2, 5, 0, 6, 1, 0, 3, 28, 0, 27, 2, 0, 0, 1, 1, 1]' : 0.186756}", "{'[6, 3, 2, 5, 0, 6, 1, 0, 3, 28, 0, 27, 2, 0, 0, 1, 1, 1]' : 0.189036}", "{'[6, 3, 2, 5, 0, 6, 1, 0, 3, 28, 0, 27, 2, 0, 0, 1, 1, 1]' : 0.187919}", "{'[6, 3, 2, 5, 0, 6, 1, 0, 3, 28, 0, 27, 2, 0, 0, 1, 1, 1]' : 0.189495}", "{'[6, 3, 2, 5, 0, 6, 1, 0, 3, 28, 0, 27, 2, 0, 0, 1, 1, 1]' : 0.19179}", "{'[6, 3, 2, 5, 0, 6, 1, 0, 3, 28, 0, 27, 2, 0, 0, 1, 1, 1]' : 0.191841}", "{'[6, 3, 2, 5, 0, 6, 1, 0, 3, 28, 0, 27, 2, 0, 0, 1, 1, 1]' : 0.189747}", "{'[6, 3, 2, 5, 0, 6, 1, 0, 3, 28, 0, 27, 2, 0, 0, 1, 1, 1]' : 0.187337}", "{'[6, 3, 2, 5, 0, 6, 1, 0, 3, 28, 0, 27, 2, 0, 0, 1, 1, 1]' : 0.184801}", "{'[6, 3, 2, 5, 0, 6, 1, 0, 3, 28, 0, 27, 2, 0, 0, 1, 1, 1]' : 0.188062}", "{'[6, 3, 2, 5, 0, 6, 1, 0, 3, 28, 0, 27, 2, 0, 0, 1, 1, 1]' : 0.185814}"]
returning from 'run': {'[6, 3, 2, 5, 0, 6, 1, 0, 3, 28, 0, 27, 2, 0, 0, 1, 1, 1]': ([0.187062, 0.188359, 0.186961, 0.18367, 0.190437, 0.191535, 0.191674, 0.191892, 0.188608, 0.189632, 0.188429, 0.187739, 0.190748, 0.19053, 0.188564, 0.191541, 0.191576, 0.191757, 0.191028, 0.186756, 0.189036, 0.187919, 0.189495, 0.19179, 0.191841, 0.189747, 0.187337, 0.184801, 0.188062, 0.185814], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 3, 2, 5, 0, 6, 1, 0, 3, 28, 0, 27, 2, 0, 0, 1, 1, 1]': ([0.187062, 0.188359, 0.186961, 0.18367, 0.190437, 0.191535, 0.191674, 0.191892, 0.188608, 0.189632, 0.188429, 0.187739, 0.190748, 0.19053, 0.188564, 0.191541, 0.191576, 0.191757, 0.191028, 0.186756, 0.189036, 0.187919, 0.189495, 0.19179, 0.191841, 0.189747, 0.187337, 0.184801, 0.188062, 0.185814], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		452
        Multiplications: 	152
        Divisions: 		0
        Logical: 		0
        Reads: 			1023
        Writes: 		224
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest61.exe __orio_perftest61.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest61.exe  
Program Test Output: 
{'[4, 3, 1, 0, 0, 3, 1, 0, 26, 0, 29, 11, 0, 0, 2, 1, 0, 0]' : 0.274485}
{'[4, 3, 1, 0, 0, 3, 1, 0, 26, 0, 29, 11, 0, 0, 2, 1, 0, 0]' : 0.242384}
{'[4, 3, 1, 0, 0, 3, 1, 0, 26, 0, 29, 11, 0, 0, 2, 1, 0, 0]' : 0.238182}
{'[4, 3, 1, 0, 0, 3, 1, 0, 26, 0, 29, 11, 0, 0, 2, 1, 0, 0]' : 0.243413}
{'[4, 3, 1, 0, 0, 3, 1, 0, 26, 0, 29, 11, 0, 0, 2, 1, 0, 0]' : 0.237662}
{'[4, 3, 1, 0, 0, 3, 1, 0, 26, 0, 29, 11, 0, 0, 2, 1, 0, 0]' : 0.232323}
{'[4, 3, 1, 0, 0, 3, 1, 0, 26, 0, 29, 11, 0, 0, 2, 1, 0, 0]' : 0.228191}
{'[4, 3, 1, 0, 0, 3, 1, 0, 26, 0, 29, 11, 0, 0, 2, 1, 0, 0]' : 0.242863}
{'[4, 3, 1, 0, 0, 3, 1, 0, 26, 0, 29, 11, 0, 0, 2, 1, 0, 0]' : 0.236675}
{'[4, 3, 1, 0, 0, 3, 1, 0, 26, 0, 29, 11, 0, 0, 2, 1, 0, 0]' : 0.234465}
{'[4, 3, 1, 0, 0, 3, 1, 0, 26, 0, 29, 11, 0, 0, 2, 1, 0, 0]' : 0.235513}
{'[4, 3, 1, 0, 0, 3, 1, 0, 26, 0, 29, 11, 0, 0, 2, 1, 0, 0]' : 0.24144}
{'[4, 3, 1, 0, 0, 3, 1, 0, 26, 0, 29, 11, 0, 0, 2, 1, 0, 0]' : 0.238195}
{'[4, 3, 1, 0, 0, 3, 1, 0, 26, 0, 29, 11, 0, 0, 2, 1, 0, 0]' : 0.241016}
{'[4, 3, 1, 0, 0, 3, 1, 0, 26, 0, 29, 11, 0, 0, 2, 1, 0, 0]' : 0.243527}
{'[4, 3, 1, 0, 0, 3, 1, 0, 26, 0, 29, 11, 0, 0, 2, 1, 0, 0]' : 0.243552}
{'[4, 3, 1, 0, 0, 3, 1, 0, 26, 0, 29, 11, 0, 0, 2, 1, 0, 0]' : 0.239168}
{'[4, 3, 1, 0, 0, 3, 1, 0, 26, 0, 29, 11, 0, 0, 2, 1, 0, 0]' : 0.239996}
{'[4, 3, 1, 0, 0, 3, 1, 0, 26, 0, 29, 11, 0, 0, 2, 1, 0, 0]' : 0.243533}
{'[4, 3, 1, 0, 0, 3, 1, 0, 26, 0, 29, 11, 0, 0, 2, 1, 0, 0]' : 0.243558}
{'[4, 3, 1, 0, 0, 3, 1, 0, 26, 0, 29, 11, 0, 0, 2, 1, 0, 0]' : 0.243614}
{'[4, 3, 1, 0, 0, 3, 1, 0, 26, 0, 29, 11, 0, 0, 2, 1, 0, 0]' : 0.243513}
{'[4, 3, 1, 0, 0, 3, 1, 0, 26, 0, 29, 11, 0, 0, 2, 1, 0, 0]' : 0.243507}
{'[4, 3, 1, 0, 0, 3, 1, 0, 26, 0, 29, 11, 0, 0, 2, 1, 0, 0]' : 0.241207}
{'[4, 3, 1, 0, 0, 3, 1, 0, 26, 0, 29, 11, 0, 0, 2, 1, 0, 0]' : 0.241166}
{'[4, 3, 1, 0, 0, 3, 1, 0, 26, 0, 29, 11, 0, 0, 2, 1, 0, 0]' : 0.23779}
{'[4, 3, 1, 0, 0, 3, 1, 0, 26, 0, 29, 11, 0, 0, 2, 1, 0, 0]' : 0.243472}
{'[4, 3, 1, 0, 0, 3, 1, 0, 26, 0, 29, 11, 0, 0, 2, 1, 0, 0]' : 0.239854}
{'[4, 3, 1, 0, 0, 3, 1, 0, 26, 0, 29, 11, 0, 0, 2, 1, 0, 0]' : 0.242328}
{'[4, 3, 1, 0, 0, 3, 1, 0, 26, 0, 29, 11, 0, 0, 2, 1, 0, 0]' : 0.23623}

out:
 ["{'[4, 3, 1, 0, 0, 3, 1, 0, 26, 0, 29, 11, 0, 0, 2, 1, 0, 0]' : 0.274485}", "{'[4, 3, 1, 0, 0, 3, 1, 0, 26, 0, 29, 11, 0, 0, 2, 1, 0, 0]' : 0.242384}", "{'[4, 3, 1, 0, 0, 3, 1, 0, 26, 0, 29, 11, 0, 0, 2, 1, 0, 0]' : 0.238182}", "{'[4, 3, 1, 0, 0, 3, 1, 0, 26, 0, 29, 11, 0, 0, 2, 1, 0, 0]' : 0.243413}", "{'[4, 3, 1, 0, 0, 3, 1, 0, 26, 0, 29, 11, 0, 0, 2, 1, 0, 0]' : 0.237662}", "{'[4, 3, 1, 0, 0, 3, 1, 0, 26, 0, 29, 11, 0, 0, 2, 1, 0, 0]' : 0.232323}", "{'[4, 3, 1, 0, 0, 3, 1, 0, 26, 0, 29, 11, 0, 0, 2, 1, 0, 0]' : 0.228191}", "{'[4, 3, 1, 0, 0, 3, 1, 0, 26, 0, 29, 11, 0, 0, 2, 1, 0, 0]' : 0.242863}", "{'[4, 3, 1, 0, 0, 3, 1, 0, 26, 0, 29, 11, 0, 0, 2, 1, 0, 0]' : 0.236675}", "{'[4, 3, 1, 0, 0, 3, 1, 0, 26, 0, 29, 11, 0, 0, 2, 1, 0, 0]' : 0.234465}", "{'[4, 3, 1, 0, 0, 3, 1, 0, 26, 0, 29, 11, 0, 0, 2, 1, 0, 0]' : 0.235513}", "{'[4, 3, 1, 0, 0, 3, 1, 0, 26, 0, 29, 11, 0, 0, 2, 1, 0, 0]' : 0.24144}", "{'[4, 3, 1, 0, 0, 3, 1, 0, 26, 0, 29, 11, 0, 0, 2, 1, 0, 0]' : 0.238195}", "{'[4, 3, 1, 0, 0, 3, 1, 0, 26, 0, 29, 11, 0, 0, 2, 1, 0, 0]' : 0.241016}", "{'[4, 3, 1, 0, 0, 3, 1, 0, 26, 0, 29, 11, 0, 0, 2, 1, 0, 0]' : 0.243527}", "{'[4, 3, 1, 0, 0, 3, 1, 0, 26, 0, 29, 11, 0, 0, 2, 1, 0, 0]' : 0.243552}", "{'[4, 3, 1, 0, 0, 3, 1, 0, 26, 0, 29, 11, 0, 0, 2, 1, 0, 0]' : 0.239168}", "{'[4, 3, 1, 0, 0, 3, 1, 0, 26, 0, 29, 11, 0, 0, 2, 1, 0, 0]' : 0.239996}", "{'[4, 3, 1, 0, 0, 3, 1, 0, 26, 0, 29, 11, 0, 0, 2, 1, 0, 0]' : 0.243533}", "{'[4, 3, 1, 0, 0, 3, 1, 0, 26, 0, 29, 11, 0, 0, 2, 1, 0, 0]' : 0.243558}", "{'[4, 3, 1, 0, 0, 3, 1, 0, 26, 0, 29, 11, 0, 0, 2, 1, 0, 0]' : 0.243614}", "{'[4, 3, 1, 0, 0, 3, 1, 0, 26, 0, 29, 11, 0, 0, 2, 1, 0, 0]' : 0.243513}", "{'[4, 3, 1, 0, 0, 3, 1, 0, 26, 0, 29, 11, 0, 0, 2, 1, 0, 0]' : 0.243507}", "{'[4, 3, 1, 0, 0, 3, 1, 0, 26, 0, 29, 11, 0, 0, 2, 1, 0, 0]' : 0.241207}", "{'[4, 3, 1, 0, 0, 3, 1, 0, 26, 0, 29, 11, 0, 0, 2, 1, 0, 0]' : 0.241166}", "{'[4, 3, 1, 0, 0, 3, 1, 0, 26, 0, 29, 11, 0, 0, 2, 1, 0, 0]' : 0.23779}", "{'[4, 3, 1, 0, 0, 3, 1, 0, 26, 0, 29, 11, 0, 0, 2, 1, 0, 0]' : 0.243472}", "{'[4, 3, 1, 0, 0, 3, 1, 0, 26, 0, 29, 11, 0, 0, 2, 1, 0, 0]' : 0.239854}", "{'[4, 3, 1, 0, 0, 3, 1, 0, 26, 0, 29, 11, 0, 0, 2, 1, 0, 0]' : 0.242328}", "{'[4, 3, 1, 0, 0, 3, 1, 0, 26, 0, 29, 11, 0, 0, 2, 1, 0, 0]' : 0.23623}"]
returning from 'run': {'[4, 3, 1, 0, 0, 3, 1, 0, 26, 0, 29, 11, 0, 0, 2, 1, 0, 0]': ([0.274485, 0.242384, 0.238182, 0.243413, 0.237662, 0.232323, 0.228191, 0.242863, 0.236675, 0.234465, 0.235513, 0.24144, 0.238195, 0.241016, 0.243527, 0.243552, 0.239168, 0.239996, 0.243533, 0.243558, 0.243614, 0.243513, 0.243507, 0.241207, 0.241166, 0.23779, 0.243472, 0.239854, 0.242328, 0.23623], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 3, 1, 0, 0, 3, 1, 0, 26, 0, 29, 11, 0, 0, 2, 1, 0, 0]': ([0.274485, 0.242384, 0.238182, 0.243413, 0.237662, 0.232323, 0.228191, 0.242863, 0.236675, 0.234465, 0.235513, 0.24144, 0.238195, 0.241016, 0.243527, 0.243552, 0.239168, 0.239996, 0.243533, 0.243558, 0.243614, 0.243513, 0.243507, 0.241207, 0.241166, 0.23779, 0.243472, 0.239854, 0.242328, 0.23623], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = kkk
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	6
        Additions: 		268
        Multiplications: 	66
        Divisions: 		0
        Logical: 		0
        Reads: 			611
        Writes: 		141
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest62.exe __orio_perftest62.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest62.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest62.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest62.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest62.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	62
        Max loop nest depth: 	6
        Additions: 		1308
        Multiplications: 	420
        Divisions: 		0
        Logical: 		0
        Reads: 			2726
        Writes: 		568
        Comparisons:		62
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest63.exe __orio_perftest63.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest63.exe  
Program Test Output: 
{'[2, 3, 2, 1, 5, 1, 1, 1, 28, 5, 0, 4, 1, 1, 0, 1, 1, 1]' : 0.103662}
{'[2, 3, 2, 1, 5, 1, 1, 1, 28, 5, 0, 4, 1, 1, 0, 1, 1, 1]' : 0.104422}
{'[2, 3, 2, 1, 5, 1, 1, 1, 28, 5, 0, 4, 1, 1, 0, 1, 1, 1]' : 0.104352}
{'[2, 3, 2, 1, 5, 1, 1, 1, 28, 5, 0, 4, 1, 1, 0, 1, 1, 1]' : 0.104433}
{'[2, 3, 2, 1, 5, 1, 1, 1, 28, 5, 0, 4, 1, 1, 0, 1, 1, 1]' : 0.103422}
{'[2, 3, 2, 1, 5, 1, 1, 1, 28, 5, 0, 4, 1, 1, 0, 1, 1, 1]' : 0.103931}
{'[2, 3, 2, 1, 5, 1, 1, 1, 28, 5, 0, 4, 1, 1, 0, 1, 1, 1]' : 0.104353}
{'[2, 3, 2, 1, 5, 1, 1, 1, 28, 5, 0, 4, 1, 1, 0, 1, 1, 1]' : 0.104354}
{'[2, 3, 2, 1, 5, 1, 1, 1, 28, 5, 0, 4, 1, 1, 0, 1, 1, 1]' : 0.10438}
{'[2, 3, 2, 1, 5, 1, 1, 1, 28, 5, 0, 4, 1, 1, 0, 1, 1, 1]' : 0.104506}
{'[2, 3, 2, 1, 5, 1, 1, 1, 28, 5, 0, 4, 1, 1, 0, 1, 1, 1]' : 0.104078}
{'[2, 3, 2, 1, 5, 1, 1, 1, 28, 5, 0, 4, 1, 1, 0, 1, 1, 1]' : 0.101538}
{'[2, 3, 2, 1, 5, 1, 1, 1, 28, 5, 0, 4, 1, 1, 0, 1, 1, 1]' : 0.101515}
{'[2, 3, 2, 1, 5, 1, 1, 1, 28, 5, 0, 4, 1, 1, 0, 1, 1, 1]' : 0.101595}
{'[2, 3, 2, 1, 5, 1, 1, 1, 28, 5, 0, 4, 1, 1, 0, 1, 1, 1]' : 0.10241}
{'[2, 3, 2, 1, 5, 1, 1, 1, 28, 5, 0, 4, 1, 1, 0, 1, 1, 1]' : 0.100602}
{'[2, 3, 2, 1, 5, 1, 1, 1, 28, 5, 0, 4, 1, 1, 0, 1, 1, 1]' : 0.0987792}
{'[2, 3, 2, 1, 5, 1, 1, 1, 28, 5, 0, 4, 1, 1, 0, 1, 1, 1]' : 0.0986829}
{'[2, 3, 2, 1, 5, 1, 1, 1, 28, 5, 0, 4, 1, 1, 0, 1, 1, 1]' : 0.0987201}
{'[2, 3, 2, 1, 5, 1, 1, 1, 28, 5, 0, 4, 1, 1, 0, 1, 1, 1]' : 0.0993881}
{'[2, 3, 2, 1, 5, 1, 1, 1, 28, 5, 0, 4, 1, 1, 0, 1, 1, 1]' : 0.102024}
{'[2, 3, 2, 1, 5, 1, 1, 1, 28, 5, 0, 4, 1, 1, 0, 1, 1, 1]' : 0.10144}
{'[2, 3, 2, 1, 5, 1, 1, 1, 28, 5, 0, 4, 1, 1, 0, 1, 1, 1]' : 0.101506}
{'[2, 3, 2, 1, 5, 1, 1, 1, 28, 5, 0, 4, 1, 1, 0, 1, 1, 1]' : 0.101514}
{'[2, 3, 2, 1, 5, 1, 1, 1, 28, 5, 0, 4, 1, 1, 0, 1, 1, 1]' : 0.102156}
{'[2, 3, 2, 1, 5, 1, 1, 1, 28, 5, 0, 4, 1, 1, 0, 1, 1, 1]' : 0.104224}
{'[2, 3, 2, 1, 5, 1, 1, 1, 28, 5, 0, 4, 1, 1, 0, 1, 1, 1]' : 0.104212}
{'[2, 3, 2, 1, 5, 1, 1, 1, 28, 5, 0, 4, 1, 1, 0, 1, 1, 1]' : 0.10427}
{'[2, 3, 2, 1, 5, 1, 1, 1, 28, 5, 0, 4, 1, 1, 0, 1, 1, 1]' : 0.104167}
{'[2, 3, 2, 1, 5, 1, 1, 1, 28, 5, 0, 4, 1, 1, 0, 1, 1, 1]' : 0.1043}

out:
 ["{'[2, 3, 2, 1, 5, 1, 1, 1, 28, 5, 0, 4, 1, 1, 0, 1, 1, 1]' : 0.103662}", "{'[2, 3, 2, 1, 5, 1, 1, 1, 28, 5, 0, 4, 1, 1, 0, 1, 1, 1]' : 0.104422}", "{'[2, 3, 2, 1, 5, 1, 1, 1, 28, 5, 0, 4, 1, 1, 0, 1, 1, 1]' : 0.104352}", "{'[2, 3, 2, 1, 5, 1, 1, 1, 28, 5, 0, 4, 1, 1, 0, 1, 1, 1]' : 0.104433}", "{'[2, 3, 2, 1, 5, 1, 1, 1, 28, 5, 0, 4, 1, 1, 0, 1, 1, 1]' : 0.103422}", "{'[2, 3, 2, 1, 5, 1, 1, 1, 28, 5, 0, 4, 1, 1, 0, 1, 1, 1]' : 0.103931}", "{'[2, 3, 2, 1, 5, 1, 1, 1, 28, 5, 0, 4, 1, 1, 0, 1, 1, 1]' : 0.104353}", "{'[2, 3, 2, 1, 5, 1, 1, 1, 28, 5, 0, 4, 1, 1, 0, 1, 1, 1]' : 0.104354}", "{'[2, 3, 2, 1, 5, 1, 1, 1, 28, 5, 0, 4, 1, 1, 0, 1, 1, 1]' : 0.10438}", "{'[2, 3, 2, 1, 5, 1, 1, 1, 28, 5, 0, 4, 1, 1, 0, 1, 1, 1]' : 0.104506}", "{'[2, 3, 2, 1, 5, 1, 1, 1, 28, 5, 0, 4, 1, 1, 0, 1, 1, 1]' : 0.104078}", "{'[2, 3, 2, 1, 5, 1, 1, 1, 28, 5, 0, 4, 1, 1, 0, 1, 1, 1]' : 0.101538}", "{'[2, 3, 2, 1, 5, 1, 1, 1, 28, 5, 0, 4, 1, 1, 0, 1, 1, 1]' : 0.101515}", "{'[2, 3, 2, 1, 5, 1, 1, 1, 28, 5, 0, 4, 1, 1, 0, 1, 1, 1]' : 0.101595}", "{'[2, 3, 2, 1, 5, 1, 1, 1, 28, 5, 0, 4, 1, 1, 0, 1, 1, 1]' : 0.10241}", "{'[2, 3, 2, 1, 5, 1, 1, 1, 28, 5, 0, 4, 1, 1, 0, 1, 1, 1]' : 0.100602}", "{'[2, 3, 2, 1, 5, 1, 1, 1, 28, 5, 0, 4, 1, 1, 0, 1, 1, 1]' : 0.0987792}", "{'[2, 3, 2, 1, 5, 1, 1, 1, 28, 5, 0, 4, 1, 1, 0, 1, 1, 1]' : 0.0986829}", "{'[2, 3, 2, 1, 5, 1, 1, 1, 28, 5, 0, 4, 1, 1, 0, 1, 1, 1]' : 0.0987201}", "{'[2, 3, 2, 1, 5, 1, 1, 1, 28, 5, 0, 4, 1, 1, 0, 1, 1, 1]' : 0.0993881}", "{'[2, 3, 2, 1, 5, 1, 1, 1, 28, 5, 0, 4, 1, 1, 0, 1, 1, 1]' : 0.102024}", "{'[2, 3, 2, 1, 5, 1, 1, 1, 28, 5, 0, 4, 1, 1, 0, 1, 1, 1]' : 0.10144}", "{'[2, 3, 2, 1, 5, 1, 1, 1, 28, 5, 0, 4, 1, 1, 0, 1, 1, 1]' : 0.101506}", "{'[2, 3, 2, 1, 5, 1, 1, 1, 28, 5, 0, 4, 1, 1, 0, 1, 1, 1]' : 0.101514}", "{'[2, 3, 2, 1, 5, 1, 1, 1, 28, 5, 0, 4, 1, 1, 0, 1, 1, 1]' : 0.102156}", "{'[2, 3, 2, 1, 5, 1, 1, 1, 28, 5, 0, 4, 1, 1, 0, 1, 1, 1]' : 0.104224}", "{'[2, 3, 2, 1, 5, 1, 1, 1, 28, 5, 0, 4, 1, 1, 0, 1, 1, 1]' : 0.104212}", "{'[2, 3, 2, 1, 5, 1, 1, 1, 28, 5, 0, 4, 1, 1, 0, 1, 1, 1]' : 0.10427}", "{'[2, 3, 2, 1, 5, 1, 1, 1, 28, 5, 0, 4, 1, 1, 0, 1, 1, 1]' : 0.104167}", "{'[2, 3, 2, 1, 5, 1, 1, 1, 28, 5, 0, 4, 1, 1, 0, 1, 1, 1]' : 0.1043}"]
returning from 'run': {'[2, 3, 2, 1, 5, 1, 1, 1, 28, 5, 0, 4, 1, 1, 0, 1, 1, 1]': ([0.103662, 0.104422, 0.104352, 0.104433, 0.103422, 0.103931, 0.104353, 0.104354, 0.10438, 0.104506, 0.104078, 0.101538, 0.101515, 0.101595, 0.10241, 0.100602, 0.0987792, 0.0986829, 0.0987201, 0.0993881, 0.102024, 0.10144, 0.101506, 0.101514, 0.102156, 0.104224, 0.104212, 0.10427, 0.104167, 0.1043], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 3, 2, 1, 5, 1, 1, 1, 28, 5, 0, 4, 1, 1, 0, 1, 1, 1]': ([0.103662, 0.104422, 0.104352, 0.104433, 0.103422, 0.103931, 0.104353, 0.104354, 0.10438, 0.104506, 0.104078, 0.101538, 0.101515, 0.101595, 0.10241, 0.100602, 0.0987792, 0.0986829, 0.0987201, 0.0993881, 0.102024, 0.10144, 0.101506, 0.101514, 0.102156, 0.104224, 0.104212, 0.10427, 0.104167, 0.1043], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	42
        Max loop nest depth: 	6
        Additions: 		1205
        Multiplications: 	476
        Divisions: 		0
        Logical: 		0
        Reads: 			2596
        Writes: 		528
        Comparisons:		42
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest64.exe __orio_perftest64.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest64.exe  
Program Test Output: 
{'[6, 3, 0, 6, 6, 4, 1, 0, 0, 4, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.0998609}
{'[6, 3, 0, 6, 6, 4, 1, 0, 0, 4, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.099591}
{'[6, 3, 0, 6, 6, 4, 1, 0, 0, 4, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.099597}
{'[6, 3, 0, 6, 6, 4, 1, 0, 0, 4, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.099617}
{'[6, 3, 0, 6, 6, 4, 1, 0, 0, 4, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.0905011}
{'[6, 3, 0, 6, 6, 4, 1, 0, 0, 4, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.0899708}
{'[6, 3, 0, 6, 6, 4, 1, 0, 0, 4, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.0906599}
{'[6, 3, 0, 6, 6, 4, 1, 0, 0, 4, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.0906639}
{'[6, 3, 0, 6, 6, 4, 1, 0, 0, 4, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.0906591}
{'[6, 3, 0, 6, 6, 4, 1, 0, 0, 4, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.090591}
{'[6, 3, 0, 6, 6, 4, 1, 0, 0, 4, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.0887611}
{'[6, 3, 0, 6, 6, 4, 1, 0, 0, 4, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.088588}
{'[6, 3, 0, 6, 6, 4, 1, 0, 0, 4, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.08869}
{'[6, 3, 0, 6, 6, 4, 1, 0, 0, 4, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.088629}
{'[6, 3, 0, 6, 6, 4, 1, 0, 0, 4, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.0885661}
{'[6, 3, 0, 6, 6, 4, 1, 0, 0, 4, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.088491}
{'[6, 3, 0, 6, 6, 4, 1, 0, 0, 4, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.0895782}
{'[6, 3, 0, 6, 6, 4, 1, 0, 0, 4, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.0906529}
{'[6, 3, 0, 6, 6, 4, 1, 0, 0, 4, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.0906901}
{'[6, 3, 0, 6, 6, 4, 1, 0, 0, 4, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.09061}
{'[6, 3, 0, 6, 6, 4, 1, 0, 0, 4, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.0900638}
{'[6, 3, 0, 6, 6, 4, 1, 0, 0, 4, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.0884531}
{'[6, 3, 0, 6, 6, 4, 1, 0, 0, 4, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.0889301}
{'[6, 3, 0, 6, 6, 4, 1, 0, 0, 4, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.08903}
{'[6, 3, 0, 6, 6, 4, 1, 0, 0, 4, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.08869}
{'[6, 3, 0, 6, 6, 4, 1, 0, 0, 4, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.087702}
{'[6, 3, 0, 6, 6, 4, 1, 0, 0, 4, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.086616}
{'[6, 3, 0, 6, 6, 4, 1, 0, 0, 4, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.087347}
{'[6, 3, 0, 6, 6, 4, 1, 0, 0, 4, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.090631}
{'[6, 3, 0, 6, 6, 4, 1, 0, 0, 4, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.090636}

out:
 ["{'[6, 3, 0, 6, 6, 4, 1, 0, 0, 4, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.0998609}", "{'[6, 3, 0, 6, 6, 4, 1, 0, 0, 4, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.099591}", "{'[6, 3, 0, 6, 6, 4, 1, 0, 0, 4, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.099597}", "{'[6, 3, 0, 6, 6, 4, 1, 0, 0, 4, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.099617}", "{'[6, 3, 0, 6, 6, 4, 1, 0, 0, 4, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.0905011}", "{'[6, 3, 0, 6, 6, 4, 1, 0, 0, 4, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.0899708}", "{'[6, 3, 0, 6, 6, 4, 1, 0, 0, 4, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.0906599}", "{'[6, 3, 0, 6, 6, 4, 1, 0, 0, 4, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.0906639}", "{'[6, 3, 0, 6, 6, 4, 1, 0, 0, 4, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.0906591}", "{'[6, 3, 0, 6, 6, 4, 1, 0, 0, 4, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.090591}", "{'[6, 3, 0, 6, 6, 4, 1, 0, 0, 4, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.0887611}", "{'[6, 3, 0, 6, 6, 4, 1, 0, 0, 4, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.088588}", "{'[6, 3, 0, 6, 6, 4, 1, 0, 0, 4, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.08869}", "{'[6, 3, 0, 6, 6, 4, 1, 0, 0, 4, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.088629}", "{'[6, 3, 0, 6, 6, 4, 1, 0, 0, 4, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.0885661}", "{'[6, 3, 0, 6, 6, 4, 1, 0, 0, 4, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.088491}", "{'[6, 3, 0, 6, 6, 4, 1, 0, 0, 4, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.0895782}", "{'[6, 3, 0, 6, 6, 4, 1, 0, 0, 4, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.0906529}", "{'[6, 3, 0, 6, 6, 4, 1, 0, 0, 4, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.0906901}", "{'[6, 3, 0, 6, 6, 4, 1, 0, 0, 4, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.09061}", "{'[6, 3, 0, 6, 6, 4, 1, 0, 0, 4, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.0900638}", "{'[6, 3, 0, 6, 6, 4, 1, 0, 0, 4, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.0884531}", "{'[6, 3, 0, 6, 6, 4, 1, 0, 0, 4, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.0889301}", "{'[6, 3, 0, 6, 6, 4, 1, 0, 0, 4, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.08903}", "{'[6, 3, 0, 6, 6, 4, 1, 0, 0, 4, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.08869}", "{'[6, 3, 0, 6, 6, 4, 1, 0, 0, 4, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.087702}", "{'[6, 3, 0, 6, 6, 4, 1, 0, 0, 4, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.086616}", "{'[6, 3, 0, 6, 6, 4, 1, 0, 0, 4, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.087347}", "{'[6, 3, 0, 6, 6, 4, 1, 0, 0, 4, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.090631}", "{'[6, 3, 0, 6, 6, 4, 1, 0, 0, 4, 0, 6, 1, 0, 1, 1, 1, 0]' : 0.090636}"]
returning from 'run': {'[6, 3, 0, 6, 6, 4, 1, 0, 0, 4, 0, 6, 1, 0, 1, 1, 1, 0]': ([0.0998609, 0.099591, 0.099597, 0.099617, 0.0905011, 0.0899708, 0.0906599, 0.0906639, 0.0906591, 0.090591, 0.0887611, 0.088588, 0.08869, 0.088629, 0.0885661, 0.088491, 0.0895782, 0.0906529, 0.0906901, 0.09061, 0.0900638, 0.0884531, 0.0889301, 0.08903, 0.08869, 0.087702, 0.086616, 0.087347, 0.090631, 0.090636], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 3, 0, 6, 6, 4, 1, 0, 0, 4, 0, 6, 1, 0, 1, 1, 1, 0]': ([0.0998609, 0.099591, 0.099597, 0.099617, 0.0905011, 0.0899708, 0.0906599, 0.0906639, 0.0906591, 0.090591, 0.0887611, 0.088588, 0.08869, 0.088629, 0.0885661, 0.088491, 0.0895782, 0.0906529, 0.0906901, 0.09061, 0.0900638, 0.0884531, 0.0889301, 0.08903, 0.08869, 0.087702, 0.086616, 0.087347, 0.090631, 0.090636], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	6
        Additions: 		337
        Multiplications: 	106
        Divisions: 		0
        Logical: 		0
        Reads: 			730
        Writes: 		158
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest65.exe __orio_perftest65.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest65.exe  
Program Test Output: 
{'[2, 3, 6, 2, 2, 4, 1, 0, 24, 0, 28, 21, 0, 0, 0, 1, 1, 0]' : 0.200136}
{'[2, 3, 6, 2, 2, 4, 1, 0, 24, 0, 28, 21, 0, 0, 0, 1, 1, 0]' : 0.197515}
{'[2, 3, 6, 2, 2, 4, 1, 0, 24, 0, 28, 21, 0, 0, 0, 1, 1, 0]' : 0.177502}
{'[2, 3, 6, 2, 2, 4, 1, 0, 24, 0, 28, 21, 0, 0, 0, 1, 1, 0]' : 0.177458}
{'[2, 3, 6, 2, 2, 4, 1, 0, 24, 0, 28, 21, 0, 0, 0, 1, 1, 0]' : 0.177395}
{'[2, 3, 6, 2, 2, 4, 1, 0, 24, 0, 28, 21, 0, 0, 0, 1, 1, 0]' : 0.177854}
{'[2, 3, 6, 2, 2, 4, 1, 0, 24, 0, 28, 21, 0, 0, 0, 1, 1, 0]' : 0.179105}
{'[2, 3, 6, 2, 2, 4, 1, 0, 24, 0, 28, 21, 0, 0, 0, 1, 1, 0]' : 0.175847}
{'[2, 3, 6, 2, 2, 4, 1, 0, 24, 0, 28, 21, 0, 0, 0, 1, 1, 0]' : 0.172446}
{'[2, 3, 6, 2, 2, 4, 1, 0, 24, 0, 28, 21, 0, 0, 0, 1, 1, 0]' : 0.173234}
{'[2, 3, 6, 2, 2, 4, 1, 0, 24, 0, 28, 21, 0, 0, 0, 1, 1, 0]' : 0.172132}
{'[2, 3, 6, 2, 2, 4, 1, 0, 24, 0, 28, 21, 0, 0, 0, 1, 1, 0]' : 0.168552}
{'[2, 3, 6, 2, 2, 4, 1, 0, 24, 0, 28, 21, 0, 0, 0, 1, 1, 0]' : 0.174422}
{'[2, 3, 6, 2, 2, 4, 1, 0, 24, 0, 28, 21, 0, 0, 0, 1, 1, 0]' : 0.178465}
{'[2, 3, 6, 2, 2, 4, 1, 0, 24, 0, 28, 21, 0, 0, 0, 1, 1, 0]' : 0.178978}
{'[2, 3, 6, 2, 2, 4, 1, 0, 24, 0, 28, 21, 0, 0, 0, 1, 1, 0]' : 0.173964}
{'[2, 3, 6, 2, 2, 4, 1, 0, 24, 0, 28, 21, 0, 0, 0, 1, 1, 0]' : 0.171978}
{'[2, 3, 6, 2, 2, 4, 1, 0, 24, 0, 28, 21, 0, 0, 0, 1, 1, 0]' : 0.172201}
{'[2, 3, 6, 2, 2, 4, 1, 0, 24, 0, 28, 21, 0, 0, 0, 1, 1, 0]' : 0.177743}
{'[2, 3, 6, 2, 2, 4, 1, 0, 24, 0, 28, 21, 0, 0, 0, 1, 1, 0]' : 0.178552}
{'[2, 3, 6, 2, 2, 4, 1, 0, 24, 0, 28, 21, 0, 0, 0, 1, 1, 0]' : 0.179065}
{'[2, 3, 6, 2, 2, 4, 1, 0, 24, 0, 28, 21, 0, 0, 0, 1, 1, 0]' : 0.174244}
{'[2, 3, 6, 2, 2, 4, 1, 0, 24, 0, 28, 21, 0, 0, 0, 1, 1, 0]' : 0.172705}
{'[2, 3, 6, 2, 2, 4, 1, 0, 24, 0, 28, 21, 0, 0, 0, 1, 1, 0]' : 0.173476}
{'[2, 3, 6, 2, 2, 4, 1, 0, 24, 0, 28, 21, 0, 0, 0, 1, 1, 0]' : 0.172765}
{'[2, 3, 6, 2, 2, 4, 1, 0, 24, 0, 28, 21, 0, 0, 0, 1, 1, 0]' : 0.175306}
{'[2, 3, 6, 2, 2, 4, 1, 0, 24, 0, 28, 21, 0, 0, 0, 1, 1, 0]' : 0.17688}
{'[2, 3, 6, 2, 2, 4, 1, 0, 24, 0, 28, 21, 0, 0, 0, 1, 1, 0]' : 0.17804}
{'[2, 3, 6, 2, 2, 4, 1, 0, 24, 0, 28, 21, 0, 0, 0, 1, 1, 0]' : 0.178563}
{'[2, 3, 6, 2, 2, 4, 1, 0, 24, 0, 28, 21, 0, 0, 0, 1, 1, 0]' : 0.176043}

out:
 ["{'[2, 3, 6, 2, 2, 4, 1, 0, 24, 0, 28, 21, 0, 0, 0, 1, 1, 0]' : 0.200136}", "{'[2, 3, 6, 2, 2, 4, 1, 0, 24, 0, 28, 21, 0, 0, 0, 1, 1, 0]' : 0.197515}", "{'[2, 3, 6, 2, 2, 4, 1, 0, 24, 0, 28, 21, 0, 0, 0, 1, 1, 0]' : 0.177502}", "{'[2, 3, 6, 2, 2, 4, 1, 0, 24, 0, 28, 21, 0, 0, 0, 1, 1, 0]' : 0.177458}", "{'[2, 3, 6, 2, 2, 4, 1, 0, 24, 0, 28, 21, 0, 0, 0, 1, 1, 0]' : 0.177395}", "{'[2, 3, 6, 2, 2, 4, 1, 0, 24, 0, 28, 21, 0, 0, 0, 1, 1, 0]' : 0.177854}", "{'[2, 3, 6, 2, 2, 4, 1, 0, 24, 0, 28, 21, 0, 0, 0, 1, 1, 0]' : 0.179105}", "{'[2, 3, 6, 2, 2, 4, 1, 0, 24, 0, 28, 21, 0, 0, 0, 1, 1, 0]' : 0.175847}", "{'[2, 3, 6, 2, 2, 4, 1, 0, 24, 0, 28, 21, 0, 0, 0, 1, 1, 0]' : 0.172446}", "{'[2, 3, 6, 2, 2, 4, 1, 0, 24, 0, 28, 21, 0, 0, 0, 1, 1, 0]' : 0.173234}", "{'[2, 3, 6, 2, 2, 4, 1, 0, 24, 0, 28, 21, 0, 0, 0, 1, 1, 0]' : 0.172132}", "{'[2, 3, 6, 2, 2, 4, 1, 0, 24, 0, 28, 21, 0, 0, 0, 1, 1, 0]' : 0.168552}", "{'[2, 3, 6, 2, 2, 4, 1, 0, 24, 0, 28, 21, 0, 0, 0, 1, 1, 0]' : 0.174422}", "{'[2, 3, 6, 2, 2, 4, 1, 0, 24, 0, 28, 21, 0, 0, 0, 1, 1, 0]' : 0.178465}", "{'[2, 3, 6, 2, 2, 4, 1, 0, 24, 0, 28, 21, 0, 0, 0, 1, 1, 0]' : 0.178978}", "{'[2, 3, 6, 2, 2, 4, 1, 0, 24, 0, 28, 21, 0, 0, 0, 1, 1, 0]' : 0.173964}", "{'[2, 3, 6, 2, 2, 4, 1, 0, 24, 0, 28, 21, 0, 0, 0, 1, 1, 0]' : 0.171978}", "{'[2, 3, 6, 2, 2, 4, 1, 0, 24, 0, 28, 21, 0, 0, 0, 1, 1, 0]' : 0.172201}", "{'[2, 3, 6, 2, 2, 4, 1, 0, 24, 0, 28, 21, 0, 0, 0, 1, 1, 0]' : 0.177743}", "{'[2, 3, 6, 2, 2, 4, 1, 0, 24, 0, 28, 21, 0, 0, 0, 1, 1, 0]' : 0.178552}", "{'[2, 3, 6, 2, 2, 4, 1, 0, 24, 0, 28, 21, 0, 0, 0, 1, 1, 0]' : 0.179065}", "{'[2, 3, 6, 2, 2, 4, 1, 0, 24, 0, 28, 21, 0, 0, 0, 1, 1, 0]' : 0.174244}", "{'[2, 3, 6, 2, 2, 4, 1, 0, 24, 0, 28, 21, 0, 0, 0, 1, 1, 0]' : 0.172705}", "{'[2, 3, 6, 2, 2, 4, 1, 0, 24, 0, 28, 21, 0, 0, 0, 1, 1, 0]' : 0.173476}", "{'[2, 3, 6, 2, 2, 4, 1, 0, 24, 0, 28, 21, 0, 0, 0, 1, 1, 0]' : 0.172765}", "{'[2, 3, 6, 2, 2, 4, 1, 0, 24, 0, 28, 21, 0, 0, 0, 1, 1, 0]' : 0.175306}", "{'[2, 3, 6, 2, 2, 4, 1, 0, 24, 0, 28, 21, 0, 0, 0, 1, 1, 0]' : 0.17688}", "{'[2, 3, 6, 2, 2, 4, 1, 0, 24, 0, 28, 21, 0, 0, 0, 1, 1, 0]' : 0.17804}", "{'[2, 3, 6, 2, 2, 4, 1, 0, 24, 0, 28, 21, 0, 0, 0, 1, 1, 0]' : 0.178563}", "{'[2, 3, 6, 2, 2, 4, 1, 0, 24, 0, 28, 21, 0, 0, 0, 1, 1, 0]' : 0.176043}"]
returning from 'run': {'[2, 3, 6, 2, 2, 4, 1, 0, 24, 0, 28, 21, 0, 0, 0, 1, 1, 0]': ([0.200136, 0.197515, 0.177502, 0.177458, 0.177395, 0.177854, 0.179105, 0.175847, 0.172446, 0.173234, 0.172132, 0.168552, 0.174422, 0.178465, 0.178978, 0.173964, 0.171978, 0.172201, 0.177743, 0.178552, 0.179065, 0.174244, 0.172705, 0.173476, 0.172765, 0.175306, 0.17688, 0.17804, 0.178563, 0.176043], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 3, 6, 2, 2, 4, 1, 0, 24, 0, 28, 21, 0, 0, 0, 1, 1, 0]': ([0.200136, 0.197515, 0.177502, 0.177458, 0.177395, 0.177854, 0.179105, 0.175847, 0.172446, 0.173234, 0.172132, 0.168552, 0.174422, 0.178465, 0.178978, 0.173964, 0.171978, 0.172201, 0.177743, 0.178552, 0.179065, 0.174244, 0.172705, 0.173476, 0.172765, 0.175306, 0.17688, 0.17804, 0.178563, 0.176043], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	25
        Max loop nest depth: 	5
        Additions: 		291
        Multiplications: 	88
        Divisions: 		0
        Logical: 		0
        Reads: 			649
        Writes: 		149
        Comparisons:		25
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest66.exe __orio_perftest66.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest66.exe  
Program Test Output: 
{'[3, 3, 0, 0, 6, 2, 0, 1, 16, 2, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.167041}
{'[3, 3, 0, 0, 6, 2, 0, 1, 16, 2, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.166939}
{'[3, 3, 0, 0, 6, 2, 0, 1, 16, 2, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.16637}
{'[3, 3, 0, 0, 6, 2, 0, 1, 16, 2, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.148084}
{'[3, 3, 0, 0, 6, 2, 0, 1, 16, 2, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.14524}
{'[3, 3, 0, 0, 6, 2, 0, 1, 16, 2, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.145147}
{'[3, 3, 0, 0, 6, 2, 0, 1, 16, 2, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.145222}
{'[3, 3, 0, 0, 6, 2, 0, 1, 16, 2, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.145163}
{'[3, 3, 0, 0, 6, 2, 0, 1, 16, 2, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.145149}
{'[3, 3, 0, 0, 6, 2, 0, 1, 16, 2, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.145227}
{'[3, 3, 0, 0, 6, 2, 0, 1, 16, 2, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.145033}
{'[3, 3, 0, 0, 6, 2, 0, 1, 16, 2, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.144942}
{'[3, 3, 0, 0, 6, 2, 0, 1, 16, 2, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.146106}
{'[3, 3, 0, 0, 6, 2, 0, 1, 16, 2, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.144924}
{'[3, 3, 0, 0, 6, 2, 0, 1, 16, 2, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.144936}
{'[3, 3, 0, 0, 6, 2, 0, 1, 16, 2, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.145244}
{'[3, 3, 0, 0, 6, 2, 0, 1, 16, 2, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.145229}
{'[3, 3, 0, 0, 6, 2, 0, 1, 16, 2, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.145472}
{'[3, 3, 0, 0, 6, 2, 0, 1, 16, 2, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.145324}
{'[3, 3, 0, 0, 6, 2, 0, 1, 16, 2, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.147339}
{'[3, 3, 0, 0, 6, 2, 0, 1, 16, 2, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.145043}
{'[3, 3, 0, 0, 6, 2, 0, 1, 16, 2, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.145154}
{'[3, 3, 0, 0, 6, 2, 0, 1, 16, 2, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.142998}
{'[3, 3, 0, 0, 6, 2, 0, 1, 16, 2, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.144942}
{'[3, 3, 0, 0, 6, 2, 0, 1, 16, 2, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.145468}
{'[3, 3, 0, 0, 6, 2, 0, 1, 16, 2, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.145157}
{'[3, 3, 0, 0, 6, 2, 0, 1, 16, 2, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.146742}
{'[3, 3, 0, 0, 6, 2, 0, 1, 16, 2, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.145106}
{'[3, 3, 0, 0, 6, 2, 0, 1, 16, 2, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.145068}
{'[3, 3, 0, 0, 6, 2, 0, 1, 16, 2, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.144999}

out:
 ["{'[3, 3, 0, 0, 6, 2, 0, 1, 16, 2, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.167041}", "{'[3, 3, 0, 0, 6, 2, 0, 1, 16, 2, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.166939}", "{'[3, 3, 0, 0, 6, 2, 0, 1, 16, 2, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.16637}", "{'[3, 3, 0, 0, 6, 2, 0, 1, 16, 2, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.148084}", "{'[3, 3, 0, 0, 6, 2, 0, 1, 16, 2, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.14524}", "{'[3, 3, 0, 0, 6, 2, 0, 1, 16, 2, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.145147}", "{'[3, 3, 0, 0, 6, 2, 0, 1, 16, 2, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.145222}", "{'[3, 3, 0, 0, 6, 2, 0, 1, 16, 2, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.145163}", "{'[3, 3, 0, 0, 6, 2, 0, 1, 16, 2, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.145149}", "{'[3, 3, 0, 0, 6, 2, 0, 1, 16, 2, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.145227}", "{'[3, 3, 0, 0, 6, 2, 0, 1, 16, 2, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.145033}", "{'[3, 3, 0, 0, 6, 2, 0, 1, 16, 2, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.144942}", "{'[3, 3, 0, 0, 6, 2, 0, 1, 16, 2, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.146106}", "{'[3, 3, 0, 0, 6, 2, 0, 1, 16, 2, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.144924}", "{'[3, 3, 0, 0, 6, 2, 0, 1, 16, 2, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.144936}", "{'[3, 3, 0, 0, 6, 2, 0, 1, 16, 2, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.145244}", "{'[3, 3, 0, 0, 6, 2, 0, 1, 16, 2, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.145229}", "{'[3, 3, 0, 0, 6, 2, 0, 1, 16, 2, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.145472}", "{'[3, 3, 0, 0, 6, 2, 0, 1, 16, 2, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.145324}", "{'[3, 3, 0, 0, 6, 2, 0, 1, 16, 2, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.147339}", "{'[3, 3, 0, 0, 6, 2, 0, 1, 16, 2, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.145043}", "{'[3, 3, 0, 0, 6, 2, 0, 1, 16, 2, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.145154}", "{'[3, 3, 0, 0, 6, 2, 0, 1, 16, 2, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.142998}", "{'[3, 3, 0, 0, 6, 2, 0, 1, 16, 2, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.144942}", "{'[3, 3, 0, 0, 6, 2, 0, 1, 16, 2, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.145468}", "{'[3, 3, 0, 0, 6, 2, 0, 1, 16, 2, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.145157}", "{'[3, 3, 0, 0, 6, 2, 0, 1, 16, 2, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.146742}", "{'[3, 3, 0, 0, 6, 2, 0, 1, 16, 2, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.145106}", "{'[3, 3, 0, 0, 6, 2, 0, 1, 16, 2, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.145068}", "{'[3, 3, 0, 0, 6, 2, 0, 1, 16, 2, 8, 0, 0, 0, 0, 1, 1, 0]' : 0.144999}"]
returning from 'run': {'[3, 3, 0, 0, 6, 2, 0, 1, 16, 2, 8, 0, 0, 0, 0, 1, 1, 0]': ([0.167041, 0.166939, 0.16637, 0.148084, 0.14524, 0.145147, 0.145222, 0.145163, 0.145149, 0.145227, 0.145033, 0.144942, 0.146106, 0.144924, 0.144936, 0.145244, 0.145229, 0.145472, 0.145324, 0.147339, 0.145043, 0.145154, 0.142998, 0.144942, 0.145468, 0.145157, 0.146742, 0.145106, 0.145068, 0.144999], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 3, 0, 0, 6, 2, 0, 1, 16, 2, 8, 0, 0, 0, 0, 1, 1, 0]': ([0.167041, 0.166939, 0.16637, 0.148084, 0.14524, 0.145147, 0.145222, 0.145163, 0.145149, 0.145227, 0.145033, 0.144942, 0.146106, 0.144924, 0.144936, 0.145244, 0.145229, 0.145472, 0.145324, 0.147339, 0.145043, 0.145154, 0.142998, 0.144942, 0.145468, 0.145157, 0.146742, 0.145106, 0.145068, 0.144999], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	6
        Additions: 		295
        Multiplications: 	104
        Divisions: 		0
        Logical: 		0
        Reads: 			637
        Writes: 		123
        Comparisons:		15
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest67.exe __orio_perftest67.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest67.exe  
Program Test Output: 
{'[3, 3, 1, 4, 1, 6, 0, 1, 6, 0, 9, 7, 0, 2, 0, 1, 1, 1]' : 0.29348}
{'[3, 3, 1, 4, 1, 6, 0, 1, 6, 0, 9, 7, 0, 2, 0, 1, 1, 1]' : 0.272425}
{'[3, 3, 1, 4, 1, 6, 0, 1, 6, 0, 9, 7, 0, 2, 0, 1, 1, 1]' : 0.258023}
{'[3, 3, 1, 4, 1, 6, 0, 1, 6, 0, 9, 7, 0, 2, 0, 1, 1, 1]' : 0.24778}
{'[3, 3, 1, 4, 1, 6, 0, 1, 6, 0, 9, 7, 0, 2, 0, 1, 1, 1]' : 0.2518}
{'[3, 3, 1, 4, 1, 6, 0, 1, 6, 0, 9, 7, 0, 2, 0, 1, 1, 1]' : 0.260432}
{'[3, 3, 1, 4, 1, 6, 0, 1, 6, 0, 9, 7, 0, 2, 0, 1, 1, 1]' : 0.260477}
{'[3, 3, 1, 4, 1, 6, 0, 1, 6, 0, 9, 7, 0, 2, 0, 1, 1, 1]' : 0.260409}
{'[3, 3, 1, 4, 1, 6, 0, 1, 6, 0, 9, 7, 0, 2, 0, 1, 1, 1]' : 0.260599}
{'[3, 3, 1, 4, 1, 6, 0, 1, 6, 0, 9, 7, 0, 2, 0, 1, 1, 1]' : 0.260553}
{'[3, 3, 1, 4, 1, 6, 0, 1, 6, 0, 9, 7, 0, 2, 0, 1, 1, 1]' : 0.260739}
{'[3, 3, 1, 4, 1, 6, 0, 1, 6, 0, 9, 7, 0, 2, 0, 1, 1, 1]' : 0.260455}
{'[3, 3, 1, 4, 1, 6, 0, 1, 6, 0, 9, 7, 0, 2, 0, 1, 1, 1]' : 0.260555}
{'[3, 3, 1, 4, 1, 6, 0, 1, 6, 0, 9, 7, 0, 2, 0, 1, 1, 1]' : 0.260488}
{'[3, 3, 1, 4, 1, 6, 0, 1, 6, 0, 9, 7, 0, 2, 0, 1, 1, 1]' : 0.260627}
{'[3, 3, 1, 4, 1, 6, 0, 1, 6, 0, 9, 7, 0, 2, 0, 1, 1, 1]' : 0.26043}
{'[3, 3, 1, 4, 1, 6, 0, 1, 6, 0, 9, 7, 0, 2, 0, 1, 1, 1]' : 0.26048}
{'[3, 3, 1, 4, 1, 6, 0, 1, 6, 0, 9, 7, 0, 2, 0, 1, 1, 1]' : 0.260726}
{'[3, 3, 1, 4, 1, 6, 0, 1, 6, 0, 9, 7, 0, 2, 0, 1, 1, 1]' : 0.260558}
{'[3, 3, 1, 4, 1, 6, 0, 1, 6, 0, 9, 7, 0, 2, 0, 1, 1, 1]' : 0.25848}
{'[3, 3, 1, 4, 1, 6, 0, 1, 6, 0, 9, 7, 0, 2, 0, 1, 1, 1]' : 0.260198}
{'[3, 3, 1, 4, 1, 6, 0, 1, 6, 0, 9, 7, 0, 2, 0, 1, 1, 1]' : 0.260511}
{'[3, 3, 1, 4, 1, 6, 0, 1, 6, 0, 9, 7, 0, 2, 0, 1, 1, 1]' : 0.26049}
{'[3, 3, 1, 4, 1, 6, 0, 1, 6, 0, 9, 7, 0, 2, 0, 1, 1, 1]' : 0.260518}
{'[3, 3, 1, 4, 1, 6, 0, 1, 6, 0, 9, 7, 0, 2, 0, 1, 1, 1]' : 0.260498}
{'[3, 3, 1, 4, 1, 6, 0, 1, 6, 0, 9, 7, 0, 2, 0, 1, 1, 1]' : 0.260646}
{'[3, 3, 1, 4, 1, 6, 0, 1, 6, 0, 9, 7, 0, 2, 0, 1, 1, 1]' : 0.260479}
{'[3, 3, 1, 4, 1, 6, 0, 1, 6, 0, 9, 7, 0, 2, 0, 1, 1, 1]' : 0.260526}
{'[3, 3, 1, 4, 1, 6, 0, 1, 6, 0, 9, 7, 0, 2, 0, 1, 1, 1]' : 0.258412}
{'[3, 3, 1, 4, 1, 6, 0, 1, 6, 0, 9, 7, 0, 2, 0, 1, 1, 1]' : 0.250116}

out:
 ["{'[3, 3, 1, 4, 1, 6, 0, 1, 6, 0, 9, 7, 0, 2, 0, 1, 1, 1]' : 0.29348}", "{'[3, 3, 1, 4, 1, 6, 0, 1, 6, 0, 9, 7, 0, 2, 0, 1, 1, 1]' : 0.272425}", "{'[3, 3, 1, 4, 1, 6, 0, 1, 6, 0, 9, 7, 0, 2, 0, 1, 1, 1]' : 0.258023}", "{'[3, 3, 1, 4, 1, 6, 0, 1, 6, 0, 9, 7, 0, 2, 0, 1, 1, 1]' : 0.24778}", "{'[3, 3, 1, 4, 1, 6, 0, 1, 6, 0, 9, 7, 0, 2, 0, 1, 1, 1]' : 0.2518}", "{'[3, 3, 1, 4, 1, 6, 0, 1, 6, 0, 9, 7, 0, 2, 0, 1, 1, 1]' : 0.260432}", "{'[3, 3, 1, 4, 1, 6, 0, 1, 6, 0, 9, 7, 0, 2, 0, 1, 1, 1]' : 0.260477}", "{'[3, 3, 1, 4, 1, 6, 0, 1, 6, 0, 9, 7, 0, 2, 0, 1, 1, 1]' : 0.260409}", "{'[3, 3, 1, 4, 1, 6, 0, 1, 6, 0, 9, 7, 0, 2, 0, 1, 1, 1]' : 0.260599}", "{'[3, 3, 1, 4, 1, 6, 0, 1, 6, 0, 9, 7, 0, 2, 0, 1, 1, 1]' : 0.260553}", "{'[3, 3, 1, 4, 1, 6, 0, 1, 6, 0, 9, 7, 0, 2, 0, 1, 1, 1]' : 0.260739}", "{'[3, 3, 1, 4, 1, 6, 0, 1, 6, 0, 9, 7, 0, 2, 0, 1, 1, 1]' : 0.260455}", "{'[3, 3, 1, 4, 1, 6, 0, 1, 6, 0, 9, 7, 0, 2, 0, 1, 1, 1]' : 0.260555}", "{'[3, 3, 1, 4, 1, 6, 0, 1, 6, 0, 9, 7, 0, 2, 0, 1, 1, 1]' : 0.260488}", "{'[3, 3, 1, 4, 1, 6, 0, 1, 6, 0, 9, 7, 0, 2, 0, 1, 1, 1]' : 0.260627}", "{'[3, 3, 1, 4, 1, 6, 0, 1, 6, 0, 9, 7, 0, 2, 0, 1, 1, 1]' : 0.26043}", "{'[3, 3, 1, 4, 1, 6, 0, 1, 6, 0, 9, 7, 0, 2, 0, 1, 1, 1]' : 0.26048}", "{'[3, 3, 1, 4, 1, 6, 0, 1, 6, 0, 9, 7, 0, 2, 0, 1, 1, 1]' : 0.260726}", "{'[3, 3, 1, 4, 1, 6, 0, 1, 6, 0, 9, 7, 0, 2, 0, 1, 1, 1]' : 0.260558}", "{'[3, 3, 1, 4, 1, 6, 0, 1, 6, 0, 9, 7, 0, 2, 0, 1, 1, 1]' : 0.25848}", "{'[3, 3, 1, 4, 1, 6, 0, 1, 6, 0, 9, 7, 0, 2, 0, 1, 1, 1]' : 0.260198}", "{'[3, 3, 1, 4, 1, 6, 0, 1, 6, 0, 9, 7, 0, 2, 0, 1, 1, 1]' : 0.260511}", "{'[3, 3, 1, 4, 1, 6, 0, 1, 6, 0, 9, 7, 0, 2, 0, 1, 1, 1]' : 0.26049}", "{'[3, 3, 1, 4, 1, 6, 0, 1, 6, 0, 9, 7, 0, 2, 0, 1, 1, 1]' : 0.260518}", "{'[3, 3, 1, 4, 1, 6, 0, 1, 6, 0, 9, 7, 0, 2, 0, 1, 1, 1]' : 0.260498}", "{'[3, 3, 1, 4, 1, 6, 0, 1, 6, 0, 9, 7, 0, 2, 0, 1, 1, 1]' : 0.260646}", "{'[3, 3, 1, 4, 1, 6, 0, 1, 6, 0, 9, 7, 0, 2, 0, 1, 1, 1]' : 0.260479}", "{'[3, 3, 1, 4, 1, 6, 0, 1, 6, 0, 9, 7, 0, 2, 0, 1, 1, 1]' : 0.260526}", "{'[3, 3, 1, 4, 1, 6, 0, 1, 6, 0, 9, 7, 0, 2, 0, 1, 1, 1]' : 0.258412}", "{'[3, 3, 1, 4, 1, 6, 0, 1, 6, 0, 9, 7, 0, 2, 0, 1, 1, 1]' : 0.250116}"]
returning from 'run': {'[3, 3, 1, 4, 1, 6, 0, 1, 6, 0, 9, 7, 0, 2, 0, 1, 1, 1]': ([0.29348, 0.272425, 0.258023, 0.24778, 0.2518, 0.260432, 0.260477, 0.260409, 0.260599, 0.260553, 0.260739, 0.260455, 0.260555, 0.260488, 0.260627, 0.26043, 0.26048, 0.260726, 0.260558, 0.25848, 0.260198, 0.260511, 0.26049, 0.260518, 0.260498, 0.260646, 0.260479, 0.260526, 0.258412, 0.250116], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 3, 1, 4, 1, 6, 0, 1, 6, 0, 9, 7, 0, 2, 0, 1, 1, 1]': ([0.29348, 0.272425, 0.258023, 0.24778, 0.2518, 0.260432, 0.260477, 0.260409, 0.260599, 0.260553, 0.260739, 0.260455, 0.260555, 0.260488, 0.260627, 0.26043, 0.26048, 0.260726, 0.260558, 0.25848, 0.260198, 0.260511, 0.26049, 0.260518, 0.260498, 0.260646, 0.260479, 0.260526, 0.258412, 0.250116], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		286
        Multiplications: 	94
        Divisions: 		0
        Logical: 		0
        Reads: 			605
        Writes: 		127
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest68.exe __orio_perftest68.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest68.exe  
Program Test Output: 
{'[5, 3, 1, 0, 3, 3, 0, 1, 29, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.287344}
{'[5, 3, 1, 0, 3, 3, 0, 1, 29, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.266297}
{'[5, 3, 1, 0, 3, 3, 0, 1, 29, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.245595}
{'[5, 3, 1, 0, 3, 3, 0, 1, 29, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.242093}
{'[5, 3, 1, 0, 3, 3, 0, 1, 29, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.246734}
{'[5, 3, 1, 0, 3, 3, 0, 1, 29, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.242804}
{'[5, 3, 1, 0, 3, 3, 0, 1, 29, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.238666}
{'[5, 3, 1, 0, 3, 3, 0, 1, 29, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.24089}
{'[5, 3, 1, 0, 3, 3, 0, 1, 29, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.246391}
{'[5, 3, 1, 0, 3, 3, 0, 1, 29, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.243864}
{'[5, 3, 1, 0, 3, 3, 0, 1, 29, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.238976}
{'[5, 3, 1, 0, 3, 3, 0, 1, 29, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.239877}
{'[5, 3, 1, 0, 3, 3, 0, 1, 29, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.247938}
{'[5, 3, 1, 0, 3, 3, 0, 1, 29, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.247835}
{'[5, 3, 1, 0, 3, 3, 0, 1, 29, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.248491}
{'[5, 3, 1, 0, 3, 3, 0, 1, 29, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.241264}
{'[5, 3, 1, 0, 3, 3, 0, 1, 29, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.246469}
{'[5, 3, 1, 0, 3, 3, 0, 1, 29, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.247812}
{'[5, 3, 1, 0, 3, 3, 0, 1, 29, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.253608}
{'[5, 3, 1, 0, 3, 3, 0, 1, 29, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.246844}
{'[5, 3, 1, 0, 3, 3, 0, 1, 29, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.246897}
{'[5, 3, 1, 0, 3, 3, 0, 1, 29, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.247454}
{'[5, 3, 1, 0, 3, 3, 0, 1, 29, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.242141}
{'[5, 3, 1, 0, 3, 3, 0, 1, 29, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.239027}
{'[5, 3, 1, 0, 3, 3, 0, 1, 29, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.246451}
{'[5, 3, 1, 0, 3, 3, 0, 1, 29, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.246427}
{'[5, 3, 1, 0, 3, 3, 0, 1, 29, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.248314}
{'[5, 3, 1, 0, 3, 3, 0, 1, 29, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.238849}
{'[5, 3, 1, 0, 3, 3, 0, 1, 29, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.247242}
{'[5, 3, 1, 0, 3, 3, 0, 1, 29, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.246521}

out:
 ["{'[5, 3, 1, 0, 3, 3, 0, 1, 29, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.287344}", "{'[5, 3, 1, 0, 3, 3, 0, 1, 29, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.266297}", "{'[5, 3, 1, 0, 3, 3, 0, 1, 29, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.245595}", "{'[5, 3, 1, 0, 3, 3, 0, 1, 29, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.242093}", "{'[5, 3, 1, 0, 3, 3, 0, 1, 29, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.246734}", "{'[5, 3, 1, 0, 3, 3, 0, 1, 29, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.242804}", "{'[5, 3, 1, 0, 3, 3, 0, 1, 29, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.238666}", "{'[5, 3, 1, 0, 3, 3, 0, 1, 29, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.24089}", "{'[5, 3, 1, 0, 3, 3, 0, 1, 29, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.246391}", "{'[5, 3, 1, 0, 3, 3, 0, 1, 29, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.243864}", "{'[5, 3, 1, 0, 3, 3, 0, 1, 29, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.238976}", "{'[5, 3, 1, 0, 3, 3, 0, 1, 29, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.239877}", "{'[5, 3, 1, 0, 3, 3, 0, 1, 29, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.247938}", "{'[5, 3, 1, 0, 3, 3, 0, 1, 29, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.247835}", "{'[5, 3, 1, 0, 3, 3, 0, 1, 29, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.248491}", "{'[5, 3, 1, 0, 3, 3, 0, 1, 29, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.241264}", "{'[5, 3, 1, 0, 3, 3, 0, 1, 29, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.246469}", "{'[5, 3, 1, 0, 3, 3, 0, 1, 29, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.247812}", "{'[5, 3, 1, 0, 3, 3, 0, 1, 29, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.253608}", "{'[5, 3, 1, 0, 3, 3, 0, 1, 29, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.246844}", "{'[5, 3, 1, 0, 3, 3, 0, 1, 29, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.246897}", "{'[5, 3, 1, 0, 3, 3, 0, 1, 29, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.247454}", "{'[5, 3, 1, 0, 3, 3, 0, 1, 29, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.242141}", "{'[5, 3, 1, 0, 3, 3, 0, 1, 29, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.239027}", "{'[5, 3, 1, 0, 3, 3, 0, 1, 29, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.246451}", "{'[5, 3, 1, 0, 3, 3, 0, 1, 29, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.246427}", "{'[5, 3, 1, 0, 3, 3, 0, 1, 29, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.248314}", "{'[5, 3, 1, 0, 3, 3, 0, 1, 29, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.238849}", "{'[5, 3, 1, 0, 3, 3, 0, 1, 29, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.247242}", "{'[5, 3, 1, 0, 3, 3, 0, 1, 29, 0, 29, 29, 0, 1, 1, 1, 0, 0]' : 0.246521}"]
returning from 'run': {'[5, 3, 1, 0, 3, 3, 0, 1, 29, 0, 29, 29, 0, 1, 1, 1, 0, 0]': ([0.287344, 0.266297, 0.245595, 0.242093, 0.246734, 0.242804, 0.238666, 0.24089, 0.246391, 0.243864, 0.238976, 0.239877, 0.247938, 0.247835, 0.248491, 0.241264, 0.246469, 0.247812, 0.253608, 0.246844, 0.246897, 0.247454, 0.242141, 0.239027, 0.246451, 0.246427, 0.248314, 0.238849, 0.247242, 0.246521], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 3, 1, 0, 3, 3, 0, 1, 29, 0, 29, 29, 0, 1, 1, 1, 0, 0]': ([0.287344, 0.266297, 0.245595, 0.242093, 0.246734, 0.242804, 0.238666, 0.24089, 0.246391, 0.243864, 0.238976, 0.239877, 0.247938, 0.247835, 0.248491, 0.241264, 0.246469, 0.247812, 0.253608, 0.246844, 0.246897, 0.247454, 0.242141, 0.239027, 0.246451, 0.246427, 0.248314, 0.238849, 0.247242, 0.246521], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = kkk
Code stats:
        Number of loops: 	25
        Max loop nest depth: 	6
        Additions: 		4764
        Multiplications: 	2340
        Divisions: 		0
        Logical: 		0
        Reads: 			8942
        Writes: 		1439
        Comparisons:		25
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest69.exe __orio_perftest69.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest69.exe  
Program Test Output: 
{'[5, 3, 5, 6, 6, 3, 0, 0, 28, 29, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.093709}
{'[5, 3, 5, 6, 6, 3, 0, 0, 28, 29, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.0911989}
{'[5, 3, 5, 6, 6, 3, 0, 0, 28, 29, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.0909851}
{'[5, 3, 5, 6, 6, 3, 0, 0, 28, 29, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.0931492}
{'[5, 3, 5, 6, 6, 3, 0, 0, 28, 29, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.0920889}
{'[5, 3, 5, 6, 6, 3, 0, 0, 28, 29, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.0930159}
{'[5, 3, 5, 6, 6, 3, 0, 0, 28, 29, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.0914481}
{'[5, 3, 5, 6, 6, 3, 0, 0, 28, 29, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.091284}
{'[5, 3, 5, 6, 6, 3, 0, 0, 28, 29, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.0923982}
{'[5, 3, 5, 6, 6, 3, 0, 0, 28, 29, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.0940359}
{'[5, 3, 5, 6, 6, 3, 0, 0, 28, 29, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.09395}
{'[5, 3, 5, 6, 6, 3, 0, 0, 28, 29, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.093715}
{'[5, 3, 5, 6, 6, 3, 0, 0, 28, 29, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.0917192}
{'[5, 3, 5, 6, 6, 3, 0, 0, 28, 29, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.091187}
{'[5, 3, 5, 6, 6, 3, 0, 0, 28, 29, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.0937021}
{'[5, 3, 5, 6, 6, 3, 0, 0, 28, 29, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.093339}
{'[5, 3, 5, 6, 6, 3, 0, 0, 28, 29, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.0915229}
{'[5, 3, 5, 6, 6, 3, 0, 0, 28, 29, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.0912311}
{'[5, 3, 5, 6, 6, 3, 0, 0, 28, 29, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.091167}
{'[5, 3, 5, 6, 6, 3, 0, 0, 28, 29, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.0928938}
{'[5, 3, 5, 6, 6, 3, 0, 0, 28, 29, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.0938959}
{'[5, 3, 5, 6, 6, 3, 0, 0, 28, 29, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.091686}
{'[5, 3, 5, 6, 6, 3, 0, 0, 28, 29, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.0910749}
{'[5, 3, 5, 6, 6, 3, 0, 0, 28, 29, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.091145}
{'[5, 3, 5, 6, 6, 3, 0, 0, 28, 29, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.09148}
{'[5, 3, 5, 6, 6, 3, 0, 0, 28, 29, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.0939999}
{'[5, 3, 5, 6, 6, 3, 0, 0, 28, 29, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.094079}
{'[5, 3, 5, 6, 6, 3, 0, 0, 28, 29, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.0933938}
{'[5, 3, 5, 6, 6, 3, 0, 0, 28, 29, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.0915139}
{'[5, 3, 5, 6, 6, 3, 0, 0, 28, 29, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.0914881}

out:
 ["{'[5, 3, 5, 6, 6, 3, 0, 0, 28, 29, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.093709}", "{'[5, 3, 5, 6, 6, 3, 0, 0, 28, 29, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.0911989}", "{'[5, 3, 5, 6, 6, 3, 0, 0, 28, 29, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.0909851}", "{'[5, 3, 5, 6, 6, 3, 0, 0, 28, 29, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.0931492}", "{'[5, 3, 5, 6, 6, 3, 0, 0, 28, 29, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.0920889}", "{'[5, 3, 5, 6, 6, 3, 0, 0, 28, 29, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.0930159}", "{'[5, 3, 5, 6, 6, 3, 0, 0, 28, 29, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.0914481}", "{'[5, 3, 5, 6, 6, 3, 0, 0, 28, 29, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.091284}", "{'[5, 3, 5, 6, 6, 3, 0, 0, 28, 29, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.0923982}", "{'[5, 3, 5, 6, 6, 3, 0, 0, 28, 29, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.0940359}", "{'[5, 3, 5, 6, 6, 3, 0, 0, 28, 29, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.09395}", "{'[5, 3, 5, 6, 6, 3, 0, 0, 28, 29, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.093715}", "{'[5, 3, 5, 6, 6, 3, 0, 0, 28, 29, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.0917192}", "{'[5, 3, 5, 6, 6, 3, 0, 0, 28, 29, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.091187}", "{'[5, 3, 5, 6, 6, 3, 0, 0, 28, 29, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.0937021}", "{'[5, 3, 5, 6, 6, 3, 0, 0, 28, 29, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.093339}", "{'[5, 3, 5, 6, 6, 3, 0, 0, 28, 29, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.0915229}", "{'[5, 3, 5, 6, 6, 3, 0, 0, 28, 29, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.0912311}", "{'[5, 3, 5, 6, 6, 3, 0, 0, 28, 29, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.091167}", "{'[5, 3, 5, 6, 6, 3, 0, 0, 28, 29, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.0928938}", "{'[5, 3, 5, 6, 6, 3, 0, 0, 28, 29, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.0938959}", "{'[5, 3, 5, 6, 6, 3, 0, 0, 28, 29, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.091686}", "{'[5, 3, 5, 6, 6, 3, 0, 0, 28, 29, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.0910749}", "{'[5, 3, 5, 6, 6, 3, 0, 0, 28, 29, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.091145}", "{'[5, 3, 5, 6, 6, 3, 0, 0, 28, 29, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.09148}", "{'[5, 3, 5, 6, 6, 3, 0, 0, 28, 29, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.0939999}", "{'[5, 3, 5, 6, 6, 3, 0, 0, 28, 29, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.094079}", "{'[5, 3, 5, 6, 6, 3, 0, 0, 28, 29, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.0933938}", "{'[5, 3, 5, 6, 6, 3, 0, 0, 28, 29, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.0915139}", "{'[5, 3, 5, 6, 6, 3, 0, 0, 28, 29, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.0914881}"]
returning from 'run': {'[5, 3, 5, 6, 6, 3, 0, 0, 28, 29, 27, 0, 1, 0, 0, 1, 1, 1]': ([0.093709, 0.0911989, 0.0909851, 0.0931492, 0.0920889, 0.0930159, 0.0914481, 0.091284, 0.0923982, 0.0940359, 0.09395, 0.093715, 0.0917192, 0.091187, 0.0937021, 0.093339, 0.0915229, 0.0912311, 0.091167, 0.0928938, 0.0938959, 0.091686, 0.0910749, 0.091145, 0.09148, 0.0939999, 0.094079, 0.0933938, 0.0915139, 0.0914881], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 3, 5, 6, 6, 3, 0, 0, 28, 29, 27, 0, 1, 0, 0, 1, 1, 1]': ([0.093709, 0.0911989, 0.0909851, 0.0931492, 0.0920889, 0.0930159, 0.0914481, 0.091284, 0.0923982, 0.0940359, 0.09395, 0.093715, 0.0917192, 0.091187, 0.0937021, 0.093339, 0.0915229, 0.0912311, 0.091167, 0.0928938, 0.0938959, 0.091686, 0.0910749, 0.091145, 0.09148, 0.0939999, 0.094079, 0.0933938, 0.0915139, 0.0914881], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	31
        Max loop nest depth: 	4
        Additions: 		2037
        Multiplications: 	702
        Divisions: 		0
        Logical: 		0
        Reads: 			4571
        Writes: 		1056
        Comparisons:		31
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest70.exe __orio_perftest70.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest70.exe  
Program Test Output: 
{'[0, 3, 0, 1, 0, 4, 0, 0, 10, 7, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.104228}
{'[0, 3, 0, 1, 0, 4, 0, 0, 10, 7, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.104139}
{'[0, 3, 0, 1, 0, 4, 0, 0, 10, 7, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.104074}
{'[0, 3, 0, 1, 0, 4, 0, 0, 10, 7, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.101808}
{'[0, 3, 0, 1, 0, 4, 0, 0, 10, 7, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.0921571}
{'[0, 3, 0, 1, 0, 4, 0, 0, 10, 7, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.0919111}
{'[0, 3, 0, 1, 0, 4, 0, 0, 10, 7, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.0918138}
{'[0, 3, 0, 1, 0, 4, 0, 0, 10, 7, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.0919821}
{'[0, 3, 0, 1, 0, 4, 0, 0, 10, 7, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.092411}
{'[0, 3, 0, 1, 0, 4, 0, 0, 10, 7, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.0919449}
{'[0, 3, 0, 1, 0, 4, 0, 0, 10, 7, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.0918951}
{'[0, 3, 0, 1, 0, 4, 0, 0, 10, 7, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.092057}
{'[0, 3, 0, 1, 0, 4, 0, 0, 10, 7, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.0918679}
{'[0, 3, 0, 1, 0, 4, 0, 0, 10, 7, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.0918951}
{'[0, 3, 0, 1, 0, 4, 0, 0, 10, 7, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.0918629}
{'[0, 3, 0, 1, 0, 4, 0, 0, 10, 7, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.0919418}
{'[0, 3, 0, 1, 0, 4, 0, 0, 10, 7, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.0918601}
{'[0, 3, 0, 1, 0, 4, 0, 0, 10, 7, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.0919192}
{'[0, 3, 0, 1, 0, 4, 0, 0, 10, 7, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.0921052}
{'[0, 3, 0, 1, 0, 4, 0, 0, 10, 7, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.0919032}
{'[0, 3, 0, 1, 0, 4, 0, 0, 10, 7, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.0918741}
{'[0, 3, 0, 1, 0, 4, 0, 0, 10, 7, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.092169}
{'[0, 3, 0, 1, 0, 4, 0, 0, 10, 7, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.091872}
{'[0, 3, 0, 1, 0, 4, 0, 0, 10, 7, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.091856}
{'[0, 3, 0, 1, 0, 4, 0, 0, 10, 7, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.091907}
{'[0, 3, 0, 1, 0, 4, 0, 0, 10, 7, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.0928769}
{'[0, 3, 0, 1, 0, 4, 0, 0, 10, 7, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.091928}
{'[0, 3, 0, 1, 0, 4, 0, 0, 10, 7, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.091876}
{'[0, 3, 0, 1, 0, 4, 0, 0, 10, 7, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.091887}
{'[0, 3, 0, 1, 0, 4, 0, 0, 10, 7, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.091826}

out:
 ["{'[0, 3, 0, 1, 0, 4, 0, 0, 10, 7, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.104228}", "{'[0, 3, 0, 1, 0, 4, 0, 0, 10, 7, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.104139}", "{'[0, 3, 0, 1, 0, 4, 0, 0, 10, 7, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.104074}", "{'[0, 3, 0, 1, 0, 4, 0, 0, 10, 7, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.101808}", "{'[0, 3, 0, 1, 0, 4, 0, 0, 10, 7, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.0921571}", "{'[0, 3, 0, 1, 0, 4, 0, 0, 10, 7, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.0919111}", "{'[0, 3, 0, 1, 0, 4, 0, 0, 10, 7, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.0918138}", "{'[0, 3, 0, 1, 0, 4, 0, 0, 10, 7, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.0919821}", "{'[0, 3, 0, 1, 0, 4, 0, 0, 10, 7, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.092411}", "{'[0, 3, 0, 1, 0, 4, 0, 0, 10, 7, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.0919449}", "{'[0, 3, 0, 1, 0, 4, 0, 0, 10, 7, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.0918951}", "{'[0, 3, 0, 1, 0, 4, 0, 0, 10, 7, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.092057}", "{'[0, 3, 0, 1, 0, 4, 0, 0, 10, 7, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.0918679}", "{'[0, 3, 0, 1, 0, 4, 0, 0, 10, 7, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.0918951}", "{'[0, 3, 0, 1, 0, 4, 0, 0, 10, 7, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.0918629}", "{'[0, 3, 0, 1, 0, 4, 0, 0, 10, 7, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.0919418}", "{'[0, 3, 0, 1, 0, 4, 0, 0, 10, 7, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.0918601}", "{'[0, 3, 0, 1, 0, 4, 0, 0, 10, 7, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.0919192}", "{'[0, 3, 0, 1, 0, 4, 0, 0, 10, 7, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.0921052}", "{'[0, 3, 0, 1, 0, 4, 0, 0, 10, 7, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.0919032}", "{'[0, 3, 0, 1, 0, 4, 0, 0, 10, 7, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.0918741}", "{'[0, 3, 0, 1, 0, 4, 0, 0, 10, 7, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.092169}", "{'[0, 3, 0, 1, 0, 4, 0, 0, 10, 7, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.091872}", "{'[0, 3, 0, 1, 0, 4, 0, 0, 10, 7, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.091856}", "{'[0, 3, 0, 1, 0, 4, 0, 0, 10, 7, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.091907}", "{'[0, 3, 0, 1, 0, 4, 0, 0, 10, 7, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.0928769}", "{'[0, 3, 0, 1, 0, 4, 0, 0, 10, 7, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.091928}", "{'[0, 3, 0, 1, 0, 4, 0, 0, 10, 7, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.091876}", "{'[0, 3, 0, 1, 0, 4, 0, 0, 10, 7, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.091887}", "{'[0, 3, 0, 1, 0, 4, 0, 0, 10, 7, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.091826}"]
returning from 'run': {'[0, 3, 0, 1, 0, 4, 0, 0, 10, 7, 0, 28, 0, 0, 1, 1, 0, 1]': ([0.104228, 0.104139, 0.104074, 0.101808, 0.0921571, 0.0919111, 0.0918138, 0.0919821, 0.092411, 0.0919449, 0.0918951, 0.092057, 0.0918679, 0.0918951, 0.0918629, 0.0919418, 0.0918601, 0.0919192, 0.0921052, 0.0919032, 0.0918741, 0.092169, 0.091872, 0.091856, 0.091907, 0.0928769, 0.091928, 0.091876, 0.091887, 0.091826], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 3, 0, 1, 0, 4, 0, 0, 10, 7, 0, 28, 0, 0, 1, 1, 0, 1]': ([0.104228, 0.104139, 0.104074, 0.101808, 0.0921571, 0.0919111, 0.0918138, 0.0919821, 0.092411, 0.0919449, 0.0918951, 0.092057, 0.0918679, 0.0918951, 0.0918629, 0.0919418, 0.0918601, 0.0919192, 0.0921052, 0.0919032, 0.0918741, 0.092169, 0.091872, 0.091856, 0.091907, 0.0928769, 0.091928, 0.091876, 0.091887, 0.091826], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	5
        Additions: 		2099
        Multiplications: 	936
        Divisions: 		0
        Logical: 		0
        Reads: 			4058
        Writes: 		680
        Comparisons:		24
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest71.exe __orio_perftest71.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest71.exe  
Program Test Output: 
{'[0, 3, 4, 6, 4, 5, 0, 1, 0, 0, 25, 23, 1, 0, 0, 1, 0, 1]' : 0.115524}
{'[0, 3, 4, 6, 4, 5, 0, 1, 0, 0, 25, 23, 1, 0, 0, 1, 0, 1]' : 0.11553}
{'[0, 3, 4, 6, 4, 5, 0, 1, 0, 0, 25, 23, 1, 0, 0, 1, 0, 1]' : 0.115443}
{'[0, 3, 4, 6, 4, 5, 0, 1, 0, 0, 25, 23, 1, 0, 0, 1, 0, 1]' : 0.113743}
{'[0, 3, 4, 6, 4, 5, 0, 1, 0, 0, 25, 23, 1, 0, 0, 1, 0, 1]' : 0.0995908}
{'[0, 3, 4, 6, 4, 5, 0, 1, 0, 0, 25, 23, 1, 0, 0, 1, 0, 1]' : 0.0989909}
{'[0, 3, 4, 6, 4, 5, 0, 1, 0, 0, 25, 23, 1, 0, 0, 1, 0, 1]' : 0.0990679}
{'[0, 3, 4, 6, 4, 5, 0, 1, 0, 0, 25, 23, 1, 0, 0, 1, 0, 1]' : 0.099088}
{'[0, 3, 4, 6, 4, 5, 0, 1, 0, 0, 25, 23, 1, 0, 0, 1, 0, 1]' : 0.098953}
{'[0, 3, 4, 6, 4, 5, 0, 1, 0, 0, 25, 23, 1, 0, 0, 1, 0, 1]' : 0.0993021}
{'[0, 3, 4, 6, 4, 5, 0, 1, 0, 0, 25, 23, 1, 0, 0, 1, 0, 1]' : 0.0989902}
{'[0, 3, 4, 6, 4, 5, 0, 1, 0, 0, 25, 23, 1, 0, 0, 1, 0, 1]' : 0.0991111}
{'[0, 3, 4, 6, 4, 5, 0, 1, 0, 0, 25, 23, 1, 0, 0, 1, 0, 1]' : 0.0990992}
{'[0, 3, 4, 6, 4, 5, 0, 1, 0, 0, 25, 23, 1, 0, 0, 1, 0, 1]' : 0.100155}
{'[0, 3, 4, 6, 4, 5, 0, 1, 0, 0, 25, 23, 1, 0, 0, 1, 0, 1]' : 0.099158}
{'[0, 3, 4, 6, 4, 5, 0, 1, 0, 0, 25, 23, 1, 0, 0, 1, 0, 1]' : 0.0990138}
{'[0, 3, 4, 6, 4, 5, 0, 1, 0, 0, 25, 23, 1, 0, 0, 1, 0, 1]' : 0.0990231}
{'[0, 3, 4, 6, 4, 5, 0, 1, 0, 0, 25, 23, 1, 0, 0, 1, 0, 1]' : 0.0990112}
{'[0, 3, 4, 6, 4, 5, 0, 1, 0, 0, 25, 23, 1, 0, 0, 1, 0, 1]' : 0.0990069}
{'[0, 3, 4, 6, 4, 5, 0, 1, 0, 0, 25, 23, 1, 0, 0, 1, 0, 1]' : 0.098989}
{'[0, 3, 4, 6, 4, 5, 0, 1, 0, 0, 25, 23, 1, 0, 0, 1, 0, 1]' : 0.0990119}
{'[0, 3, 4, 6, 4, 5, 0, 1, 0, 0, 25, 23, 1, 0, 0, 1, 0, 1]' : 0.0989809}
{'[0, 3, 4, 6, 4, 5, 0, 1, 0, 0, 25, 23, 1, 0, 0, 1, 0, 1]' : 0.0991068}
{'[0, 3, 4, 6, 4, 5, 0, 1, 0, 0, 25, 23, 1, 0, 0, 1, 0, 1]' : 0.0990491}
{'[0, 3, 4, 6, 4, 5, 0, 1, 0, 0, 25, 23, 1, 0, 0, 1, 0, 1]' : 0.099066}
{'[0, 3, 4, 6, 4, 5, 0, 1, 0, 0, 25, 23, 1, 0, 0, 1, 0, 1]' : 0.0990729}
{'[0, 3, 4, 6, 4, 5, 0, 1, 0, 0, 25, 23, 1, 0, 0, 1, 0, 1]' : 0.0989969}
{'[0, 3, 4, 6, 4, 5, 0, 1, 0, 0, 25, 23, 1, 0, 0, 1, 0, 1]' : 0.099041}
{'[0, 3, 4, 6, 4, 5, 0, 1, 0, 0, 25, 23, 1, 0, 0, 1, 0, 1]' : 0.0991158}
{'[0, 3, 4, 6, 4, 5, 0, 1, 0, 0, 25, 23, 1, 0, 0, 1, 0, 1]' : 0.0996919}

out:
 ["{'[0, 3, 4, 6, 4, 5, 0, 1, 0, 0, 25, 23, 1, 0, 0, 1, 0, 1]' : 0.115524}", "{'[0, 3, 4, 6, 4, 5, 0, 1, 0, 0, 25, 23, 1, 0, 0, 1, 0, 1]' : 0.11553}", "{'[0, 3, 4, 6, 4, 5, 0, 1, 0, 0, 25, 23, 1, 0, 0, 1, 0, 1]' : 0.115443}", "{'[0, 3, 4, 6, 4, 5, 0, 1, 0, 0, 25, 23, 1, 0, 0, 1, 0, 1]' : 0.113743}", "{'[0, 3, 4, 6, 4, 5, 0, 1, 0, 0, 25, 23, 1, 0, 0, 1, 0, 1]' : 0.0995908}", "{'[0, 3, 4, 6, 4, 5, 0, 1, 0, 0, 25, 23, 1, 0, 0, 1, 0, 1]' : 0.0989909}", "{'[0, 3, 4, 6, 4, 5, 0, 1, 0, 0, 25, 23, 1, 0, 0, 1, 0, 1]' : 0.0990679}", "{'[0, 3, 4, 6, 4, 5, 0, 1, 0, 0, 25, 23, 1, 0, 0, 1, 0, 1]' : 0.099088}", "{'[0, 3, 4, 6, 4, 5, 0, 1, 0, 0, 25, 23, 1, 0, 0, 1, 0, 1]' : 0.098953}", "{'[0, 3, 4, 6, 4, 5, 0, 1, 0, 0, 25, 23, 1, 0, 0, 1, 0, 1]' : 0.0993021}", "{'[0, 3, 4, 6, 4, 5, 0, 1, 0, 0, 25, 23, 1, 0, 0, 1, 0, 1]' : 0.0989902}", "{'[0, 3, 4, 6, 4, 5, 0, 1, 0, 0, 25, 23, 1, 0, 0, 1, 0, 1]' : 0.0991111}", "{'[0, 3, 4, 6, 4, 5, 0, 1, 0, 0, 25, 23, 1, 0, 0, 1, 0, 1]' : 0.0990992}", "{'[0, 3, 4, 6, 4, 5, 0, 1, 0, 0, 25, 23, 1, 0, 0, 1, 0, 1]' : 0.100155}", "{'[0, 3, 4, 6, 4, 5, 0, 1, 0, 0, 25, 23, 1, 0, 0, 1, 0, 1]' : 0.099158}", "{'[0, 3, 4, 6, 4, 5, 0, 1, 0, 0, 25, 23, 1, 0, 0, 1, 0, 1]' : 0.0990138}", "{'[0, 3, 4, 6, 4, 5, 0, 1, 0, 0, 25, 23, 1, 0, 0, 1, 0, 1]' : 0.0990231}", "{'[0, 3, 4, 6, 4, 5, 0, 1, 0, 0, 25, 23, 1, 0, 0, 1, 0, 1]' : 0.0990112}", "{'[0, 3, 4, 6, 4, 5, 0, 1, 0, 0, 25, 23, 1, 0, 0, 1, 0, 1]' : 0.0990069}", "{'[0, 3, 4, 6, 4, 5, 0, 1, 0, 0, 25, 23, 1, 0, 0, 1, 0, 1]' : 0.098989}", "{'[0, 3, 4, 6, 4, 5, 0, 1, 0, 0, 25, 23, 1, 0, 0, 1, 0, 1]' : 0.0990119}", "{'[0, 3, 4, 6, 4, 5, 0, 1, 0, 0, 25, 23, 1, 0, 0, 1, 0, 1]' : 0.0989809}", "{'[0, 3, 4, 6, 4, 5, 0, 1, 0, 0, 25, 23, 1, 0, 0, 1, 0, 1]' : 0.0991068}", "{'[0, 3, 4, 6, 4, 5, 0, 1, 0, 0, 25, 23, 1, 0, 0, 1, 0, 1]' : 0.0990491}", "{'[0, 3, 4, 6, 4, 5, 0, 1, 0, 0, 25, 23, 1, 0, 0, 1, 0, 1]' : 0.099066}", "{'[0, 3, 4, 6, 4, 5, 0, 1, 0, 0, 25, 23, 1, 0, 0, 1, 0, 1]' : 0.0990729}", "{'[0, 3, 4, 6, 4, 5, 0, 1, 0, 0, 25, 23, 1, 0, 0, 1, 0, 1]' : 0.0989969}", "{'[0, 3, 4, 6, 4, 5, 0, 1, 0, 0, 25, 23, 1, 0, 0, 1, 0, 1]' : 0.099041}", "{'[0, 3, 4, 6, 4, 5, 0, 1, 0, 0, 25, 23, 1, 0, 0, 1, 0, 1]' : 0.0991158}", "{'[0, 3, 4, 6, 4, 5, 0, 1, 0, 0, 25, 23, 1, 0, 0, 1, 0, 1]' : 0.0996919}"]
returning from 'run': {'[0, 3, 4, 6, 4, 5, 0, 1, 0, 0, 25, 23, 1, 0, 0, 1, 0, 1]': ([0.115524, 0.11553, 0.115443, 0.113743, 0.0995908, 0.0989909, 0.0990679, 0.099088, 0.098953, 0.0993021, 0.0989902, 0.0991111, 0.0990992, 0.100155, 0.099158, 0.0990138, 0.0990231, 0.0990112, 0.0990069, 0.098989, 0.0990119, 0.0989809, 0.0991068, 0.0990491, 0.099066, 0.0990729, 0.0989969, 0.099041, 0.0991158, 0.0996919], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 3, 4, 6, 4, 5, 0, 1, 0, 0, 25, 23, 1, 0, 0, 1, 0, 1]': ([0.115524, 0.11553, 0.115443, 0.113743, 0.0995908, 0.0989909, 0.0990679, 0.099088, 0.098953, 0.0993021, 0.0989902, 0.0991111, 0.0990992, 0.100155, 0.099158, 0.0990138, 0.0990231, 0.0990112, 0.0990069, 0.098989, 0.0990119, 0.0989809, 0.0991068, 0.0990491, 0.099066, 0.0990729, 0.0989969, 0.099041, 0.0991158, 0.0996919], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	17
        Max loop nest depth: 	4
        Additions: 		3650
        Multiplications: 	1764
        Divisions: 		0
        Logical: 		0
        Reads: 			6947
        Writes: 		1143
        Comparisons:		17
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest72.exe __orio_perftest72.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest72.exe  
Program Test Output: 
{'[0, 3, 0, 1, 0, 6, 0, 0, 27, 12, 0, 28, 0, 2, 0, 1, 1, 0]' : 0.159042}
{'[0, 3, 0, 1, 0, 6, 0, 0, 27, 12, 0, 28, 0, 2, 0, 1, 1, 0]' : 0.159167}
{'[0, 3, 0, 1, 0, 6, 0, 0, 27, 12, 0, 28, 0, 2, 0, 1, 1, 0]' : 0.145259}
{'[0, 3, 0, 1, 0, 6, 0, 0, 27, 12, 0, 28, 0, 2, 0, 1, 1, 0]' : 0.138331}
{'[0, 3, 0, 1, 0, 6, 0, 0, 27, 12, 0, 28, 0, 2, 0, 1, 1, 0]' : 0.139278}
{'[0, 3, 0, 1, 0, 6, 0, 0, 27, 12, 0, 28, 0, 2, 0, 1, 1, 0]' : 0.139266}
{'[0, 3, 0, 1, 0, 6, 0, 0, 27, 12, 0, 28, 0, 2, 0, 1, 1, 0]' : 0.139482}
{'[0, 3, 0, 1, 0, 6, 0, 0, 27, 12, 0, 28, 0, 2, 0, 1, 1, 0]' : 0.139577}
{'[0, 3, 0, 1, 0, 6, 0, 0, 27, 12, 0, 28, 0, 2, 0, 1, 1, 0]' : 0.139642}
{'[0, 3, 0, 1, 0, 6, 0, 0, 27, 12, 0, 28, 0, 2, 0, 1, 1, 0]' : 0.139177}
{'[0, 3, 0, 1, 0, 6, 0, 0, 27, 12, 0, 28, 0, 2, 0, 1, 1, 0]' : 0.139447}
{'[0, 3, 0, 1, 0, 6, 0, 0, 27, 12, 0, 28, 0, 2, 0, 1, 1, 0]' : 0.136815}
{'[0, 3, 0, 1, 0, 6, 0, 0, 27, 12, 0, 28, 0, 2, 0, 1, 1, 0]' : 0.135115}
{'[0, 3, 0, 1, 0, 6, 0, 0, 27, 12, 0, 28, 0, 2, 0, 1, 1, 0]' : 0.136539}
{'[0, 3, 0, 1, 0, 6, 0, 0, 27, 12, 0, 28, 0, 2, 0, 1, 1, 0]' : 0.139532}
{'[0, 3, 0, 1, 0, 6, 0, 0, 27, 12, 0, 28, 0, 2, 0, 1, 1, 0]' : 0.14005}
{'[0, 3, 0, 1, 0, 6, 0, 0, 27, 12, 0, 28, 0, 2, 0, 1, 1, 0]' : 0.139195}
{'[0, 3, 0, 1, 0, 6, 0, 0, 27, 12, 0, 28, 0, 2, 0, 1, 1, 0]' : 0.139366}
{'[0, 3, 0, 1, 0, 6, 0, 0, 27, 12, 0, 28, 0, 2, 0, 1, 1, 0]' : 0.139415}
{'[0, 3, 0, 1, 0, 6, 0, 0, 27, 12, 0, 28, 0, 2, 0, 1, 1, 0]' : 0.139477}
{'[0, 3, 0, 1, 0, 6, 0, 0, 27, 12, 0, 28, 0, 2, 0, 1, 1, 0]' : 0.139318}
{'[0, 3, 0, 1, 0, 6, 0, 0, 27, 12, 0, 28, 0, 2, 0, 1, 1, 0]' : 0.139637}
{'[0, 3, 0, 1, 0, 6, 0, 0, 27, 12, 0, 28, 0, 2, 0, 1, 1, 0]' : 0.139685}
{'[0, 3, 0, 1, 0, 6, 0, 0, 27, 12, 0, 28, 0, 2, 0, 1, 1, 0]' : 0.139525}
{'[0, 3, 0, 1, 0, 6, 0, 0, 27, 12, 0, 28, 0, 2, 0, 1, 1, 0]' : 0.139352}
{'[0, 3, 0, 1, 0, 6, 0, 0, 27, 12, 0, 28, 0, 2, 0, 1, 1, 0]' : 0.139302}
{'[0, 3, 0, 1, 0, 6, 0, 0, 27, 12, 0, 28, 0, 2, 0, 1, 1, 0]' : 0.139504}
{'[0, 3, 0, 1, 0, 6, 0, 0, 27, 12, 0, 28, 0, 2, 0, 1, 1, 0]' : 0.139264}
{'[0, 3, 0, 1, 0, 6, 0, 0, 27, 12, 0, 28, 0, 2, 0, 1, 1, 0]' : 0.139603}
{'[0, 3, 0, 1, 0, 6, 0, 0, 27, 12, 0, 28, 0, 2, 0, 1, 1, 0]' : 0.139511}

out:
 ["{'[0, 3, 0, 1, 0, 6, 0, 0, 27, 12, 0, 28, 0, 2, 0, 1, 1, 0]' : 0.159042}", "{'[0, 3, 0, 1, 0, 6, 0, 0, 27, 12, 0, 28, 0, 2, 0, 1, 1, 0]' : 0.159167}", "{'[0, 3, 0, 1, 0, 6, 0, 0, 27, 12, 0, 28, 0, 2, 0, 1, 1, 0]' : 0.145259}", "{'[0, 3, 0, 1, 0, 6, 0, 0, 27, 12, 0, 28, 0, 2, 0, 1, 1, 0]' : 0.138331}", "{'[0, 3, 0, 1, 0, 6, 0, 0, 27, 12, 0, 28, 0, 2, 0, 1, 1, 0]' : 0.139278}", "{'[0, 3, 0, 1, 0, 6, 0, 0, 27, 12, 0, 28, 0, 2, 0, 1, 1, 0]' : 0.139266}", "{'[0, 3, 0, 1, 0, 6, 0, 0, 27, 12, 0, 28, 0, 2, 0, 1, 1, 0]' : 0.139482}", "{'[0, 3, 0, 1, 0, 6, 0, 0, 27, 12, 0, 28, 0, 2, 0, 1, 1, 0]' : 0.139577}", "{'[0, 3, 0, 1, 0, 6, 0, 0, 27, 12, 0, 28, 0, 2, 0, 1, 1, 0]' : 0.139642}", "{'[0, 3, 0, 1, 0, 6, 0, 0, 27, 12, 0, 28, 0, 2, 0, 1, 1, 0]' : 0.139177}", "{'[0, 3, 0, 1, 0, 6, 0, 0, 27, 12, 0, 28, 0, 2, 0, 1, 1, 0]' : 0.139447}", "{'[0, 3, 0, 1, 0, 6, 0, 0, 27, 12, 0, 28, 0, 2, 0, 1, 1, 0]' : 0.136815}", "{'[0, 3, 0, 1, 0, 6, 0, 0, 27, 12, 0, 28, 0, 2, 0, 1, 1, 0]' : 0.135115}", "{'[0, 3, 0, 1, 0, 6, 0, 0, 27, 12, 0, 28, 0, 2, 0, 1, 1, 0]' : 0.136539}", "{'[0, 3, 0, 1, 0, 6, 0, 0, 27, 12, 0, 28, 0, 2, 0, 1, 1, 0]' : 0.139532}", "{'[0, 3, 0, 1, 0, 6, 0, 0, 27, 12, 0, 28, 0, 2, 0, 1, 1, 0]' : 0.14005}", "{'[0, 3, 0, 1, 0, 6, 0, 0, 27, 12, 0, 28, 0, 2, 0, 1, 1, 0]' : 0.139195}", "{'[0, 3, 0, 1, 0, 6, 0, 0, 27, 12, 0, 28, 0, 2, 0, 1, 1, 0]' : 0.139366}", "{'[0, 3, 0, 1, 0, 6, 0, 0, 27, 12, 0, 28, 0, 2, 0, 1, 1, 0]' : 0.139415}", "{'[0, 3, 0, 1, 0, 6, 0, 0, 27, 12, 0, 28, 0, 2, 0, 1, 1, 0]' : 0.139477}", "{'[0, 3, 0, 1, 0, 6, 0, 0, 27, 12, 0, 28, 0, 2, 0, 1, 1, 0]' : 0.139318}", "{'[0, 3, 0, 1, 0, 6, 0, 0, 27, 12, 0, 28, 0, 2, 0, 1, 1, 0]' : 0.139637}", "{'[0, 3, 0, 1, 0, 6, 0, 0, 27, 12, 0, 28, 0, 2, 0, 1, 1, 0]' : 0.139685}", "{'[0, 3, 0, 1, 0, 6, 0, 0, 27, 12, 0, 28, 0, 2, 0, 1, 1, 0]' : 0.139525}", "{'[0, 3, 0, 1, 0, 6, 0, 0, 27, 12, 0, 28, 0, 2, 0, 1, 1, 0]' : 0.139352}", "{'[0, 3, 0, 1, 0, 6, 0, 0, 27, 12, 0, 28, 0, 2, 0, 1, 1, 0]' : 0.139302}", "{'[0, 3, 0, 1, 0, 6, 0, 0, 27, 12, 0, 28, 0, 2, 0, 1, 1, 0]' : 0.139504}", "{'[0, 3, 0, 1, 0, 6, 0, 0, 27, 12, 0, 28, 0, 2, 0, 1, 1, 0]' : 0.139264}", "{'[0, 3, 0, 1, 0, 6, 0, 0, 27, 12, 0, 28, 0, 2, 0, 1, 1, 0]' : 0.139603}", "{'[0, 3, 0, 1, 0, 6, 0, 0, 27, 12, 0, 28, 0, 2, 0, 1, 1, 0]' : 0.139511}"]
returning from 'run': {'[0, 3, 0, 1, 0, 6, 0, 0, 27, 12, 0, 28, 0, 2, 0, 1, 1, 0]': ([0.159042, 0.159167, 0.145259, 0.138331, 0.139278, 0.139266, 0.139482, 0.139577, 0.139642, 0.139177, 0.139447, 0.136815, 0.135115, 0.136539, 0.139532, 0.14005, 0.139195, 0.139366, 0.139415, 0.139477, 0.139318, 0.139637, 0.139685, 0.139525, 0.139352, 0.139302, 0.139504, 0.139264, 0.139603, 0.139511], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 3, 0, 1, 0, 6, 0, 0, 27, 12, 0, 28, 0, 2, 0, 1, 1, 0]': ([0.159042, 0.159167, 0.145259, 0.138331, 0.139278, 0.139266, 0.139482, 0.139577, 0.139642, 0.139177, 0.139447, 0.136815, 0.135115, 0.136539, 0.139532, 0.14005, 0.139195, 0.139366, 0.139415, 0.139477, 0.139318, 0.139637, 0.139685, 0.139525, 0.139352, 0.139302, 0.139504, 0.139264, 0.139603, 0.139511], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	108
        Max loop nest depth: 	6
        Additions: 		2105
        Multiplications: 	720
        Divisions: 		0
        Logical: 		0
        Reads: 			4590
        Writes: 		1009
        Comparisons:		108
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest73.exe __orio_perftest73.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest73.exe  
Program Test Output: 
{'[1, 3, 4, 6, 2, 6, 1, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 1]' : 0.213139}
{'[1, 3, 4, 6, 2, 6, 1, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 1]' : 0.211521}
{'[1, 3, 4, 6, 2, 6, 1, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 1]' : 0.190362}
{'[1, 3, 4, 6, 2, 6, 1, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 1]' : 0.190315}
{'[1, 3, 4, 6, 2, 6, 1, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 1]' : 0.190319}
{'[1, 3, 4, 6, 2, 6, 1, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 1]' : 0.190237}
{'[1, 3, 4, 6, 2, 6, 1, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 1]' : 0.190323}
{'[1, 3, 4, 6, 2, 6, 1, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 1]' : 0.190274}
{'[1, 3, 4, 6, 2, 6, 1, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 1]' : 0.190229}
{'[1, 3, 4, 6, 2, 6, 1, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 1]' : 0.190324}
{'[1, 3, 4, 6, 2, 6, 1, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 1]' : 0.190226}
{'[1, 3, 4, 6, 2, 6, 1, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 1]' : 0.190422}
{'[1, 3, 4, 6, 2, 6, 1, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 1]' : 0.190213}
{'[1, 3, 4, 6, 2, 6, 1, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 1]' : 0.190151}
{'[1, 3, 4, 6, 2, 6, 1, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 1]' : 0.19015}
{'[1, 3, 4, 6, 2, 6, 1, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 1]' : 0.190204}
{'[1, 3, 4, 6, 2, 6, 1, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 1]' : 0.190186}
{'[1, 3, 4, 6, 2, 6, 1, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 1]' : 0.190209}
{'[1, 3, 4, 6, 2, 6, 1, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 1]' : 0.19018}
{'[1, 3, 4, 6, 2, 6, 1, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 1]' : 0.182433}
{'[1, 3, 4, 6, 2, 6, 1, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 1]' : 0.19019}
{'[1, 3, 4, 6, 2, 6, 1, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 1]' : 0.190369}
{'[1, 3, 4, 6, 2, 6, 1, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 1]' : 0.190216}
{'[1, 3, 4, 6, 2, 6, 1, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 1]' : 0.190189}
{'[1, 3, 4, 6, 2, 6, 1, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 1]' : 0.190168}
{'[1, 3, 4, 6, 2, 6, 1, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 1]' : 0.190308}
{'[1, 3, 4, 6, 2, 6, 1, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 1]' : 0.19023}
{'[1, 3, 4, 6, 2, 6, 1, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 1]' : 0.190281}
{'[1, 3, 4, 6, 2, 6, 1, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 1]' : 0.190173}
{'[1, 3, 4, 6, 2, 6, 1, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 1]' : 0.190155}

out:
 ["{'[1, 3, 4, 6, 2, 6, 1, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 1]' : 0.213139}", "{'[1, 3, 4, 6, 2, 6, 1, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 1]' : 0.211521}", "{'[1, 3, 4, 6, 2, 6, 1, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 1]' : 0.190362}", "{'[1, 3, 4, 6, 2, 6, 1, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 1]' : 0.190315}", "{'[1, 3, 4, 6, 2, 6, 1, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 1]' : 0.190319}", "{'[1, 3, 4, 6, 2, 6, 1, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 1]' : 0.190237}", "{'[1, 3, 4, 6, 2, 6, 1, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 1]' : 0.190323}", "{'[1, 3, 4, 6, 2, 6, 1, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 1]' : 0.190274}", "{'[1, 3, 4, 6, 2, 6, 1, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 1]' : 0.190229}", "{'[1, 3, 4, 6, 2, 6, 1, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 1]' : 0.190324}", "{'[1, 3, 4, 6, 2, 6, 1, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 1]' : 0.190226}", "{'[1, 3, 4, 6, 2, 6, 1, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 1]' : 0.190422}", "{'[1, 3, 4, 6, 2, 6, 1, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 1]' : 0.190213}", "{'[1, 3, 4, 6, 2, 6, 1, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 1]' : 0.190151}", "{'[1, 3, 4, 6, 2, 6, 1, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 1]' : 0.19015}", "{'[1, 3, 4, 6, 2, 6, 1, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 1]' : 0.190204}", "{'[1, 3, 4, 6, 2, 6, 1, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 1]' : 0.190186}", "{'[1, 3, 4, 6, 2, 6, 1, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 1]' : 0.190209}", "{'[1, 3, 4, 6, 2, 6, 1, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 1]' : 0.19018}", "{'[1, 3, 4, 6, 2, 6, 1, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 1]' : 0.182433}", "{'[1, 3, 4, 6, 2, 6, 1, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 1]' : 0.19019}", "{'[1, 3, 4, 6, 2, 6, 1, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 1]' : 0.190369}", "{'[1, 3, 4, 6, 2, 6, 1, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 1]' : 0.190216}", "{'[1, 3, 4, 6, 2, 6, 1, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 1]' : 0.190189}", "{'[1, 3, 4, 6, 2, 6, 1, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 1]' : 0.190168}", "{'[1, 3, 4, 6, 2, 6, 1, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 1]' : 0.190308}", "{'[1, 3, 4, 6, 2, 6, 1, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 1]' : 0.19023}", "{'[1, 3, 4, 6, 2, 6, 1, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 1]' : 0.190281}", "{'[1, 3, 4, 6, 2, 6, 1, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 1]' : 0.190173}", "{'[1, 3, 4, 6, 2, 6, 1, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 1]' : 0.190155}"]
returning from 'run': {'[1, 3, 4, 6, 2, 6, 1, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 1]': ([0.213139, 0.211521, 0.190362, 0.190315, 0.190319, 0.190237, 0.190323, 0.190274, 0.190229, 0.190324, 0.190226, 0.190422, 0.190213, 0.190151, 0.19015, 0.190204, 0.190186, 0.190209, 0.19018, 0.182433, 0.19019, 0.190369, 0.190216, 0.190189, 0.190168, 0.190308, 0.19023, 0.190281, 0.190173, 0.190155], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 3, 4, 6, 2, 6, 1, 0, 1, 28, 0, 1, 0, 0, 1, 1, 1, 1]': ([0.213139, 0.211521, 0.190362, 0.190315, 0.190319, 0.190237, 0.190323, 0.190274, 0.190229, 0.190324, 0.190226, 0.190422, 0.190213, 0.190151, 0.19015, 0.190204, 0.190186, 0.190209, 0.19018, 0.182433, 0.19019, 0.190369, 0.190216, 0.190189, 0.190168, 0.190308, 0.19023, 0.190281, 0.190173, 0.190155], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	60
        Max loop nest depth: 	4
        Additions: 		3080
        Multiplications: 	1296
        Divisions: 		0
        Logical: 		0
        Reads: 			5680
        Writes: 		906
        Comparisons:		60
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest74.exe __orio_perftest74.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest74.exe  
Program Test Output: 
{'[3, 3, 0, 0, 0, 3, 0, 1, 0, 10, 19, 0, 0, 2, 0, 1, 1, 1]' : 0.164132}
{'[3, 3, 0, 0, 0, 3, 0, 1, 0, 10, 19, 0, 0, 2, 0, 1, 1, 1]' : 0.164035}
{'[3, 3, 0, 0, 0, 3, 0, 1, 0, 10, 19, 0, 0, 2, 0, 1, 1, 1]' : 0.163915}
{'[3, 3, 0, 0, 0, 3, 0, 1, 0, 10, 19, 0, 0, 2, 0, 1, 1, 1]' : 0.164}
{'[3, 3, 0, 0, 0, 3, 0, 1, 0, 10, 19, 0, 0, 2, 0, 1, 1, 1]' : 0.16239}
{'[3, 3, 0, 0, 0, 3, 0, 1, 0, 10, 19, 0, 0, 2, 0, 1, 1, 1]' : 0.155015}
{'[3, 3, 0, 0, 0, 3, 0, 1, 0, 10, 19, 0, 0, 2, 0, 1, 1, 1]' : 0.15488}
{'[3, 3, 0, 0, 0, 3, 0, 1, 0, 10, 19, 0, 0, 2, 0, 1, 1, 1]' : 0.155321}
{'[3, 3, 0, 0, 0, 3, 0, 1, 0, 10, 19, 0, 0, 2, 0, 1, 1, 1]' : 0.160748}
{'[3, 3, 0, 0, 0, 3, 0, 1, 0, 10, 19, 0, 0, 2, 0, 1, 1, 1]' : 0.163854}
{'[3, 3, 0, 0, 0, 3, 0, 1, 0, 10, 19, 0, 0, 2, 0, 1, 1, 1]' : 0.164028}
{'[3, 3, 0, 0, 0, 3, 0, 1, 0, 10, 19, 0, 0, 2, 0, 1, 1, 1]' : 0.164014}
{'[3, 3, 0, 0, 0, 3, 0, 1, 0, 10, 19, 0, 0, 2, 0, 1, 1, 1]' : 0.163984}
{'[3, 3, 0, 0, 0, 3, 0, 1, 0, 10, 19, 0, 0, 2, 0, 1, 1, 1]' : 0.163968}
{'[3, 3, 0, 0, 0, 3, 0, 1, 0, 10, 19, 0, 0, 2, 0, 1, 1, 1]' : 0.16425}
{'[3, 3, 0, 0, 0, 3, 0, 1, 0, 10, 19, 0, 0, 2, 0, 1, 1, 1]' : 0.164089}
{'[3, 3, 0, 0, 0, 3, 0, 1, 0, 10, 19, 0, 0, 2, 0, 1, 1, 1]' : 0.164034}
{'[3, 3, 0, 0, 0, 3, 0, 1, 0, 10, 19, 0, 0, 2, 0, 1, 1, 1]' : 0.164093}
{'[3, 3, 0, 0, 0, 3, 0, 1, 0, 10, 19, 0, 0, 2, 0, 1, 1, 1]' : 0.164028}
{'[3, 3, 0, 0, 0, 3, 0, 1, 0, 10, 19, 0, 0, 2, 0, 1, 1, 1]' : 0.163964}
{'[3, 3, 0, 0, 0, 3, 0, 1, 0, 10, 19, 0, 0, 2, 0, 1, 1, 1]' : 0.162046}
{'[3, 3, 0, 0, 0, 3, 0, 1, 0, 10, 19, 0, 0, 2, 0, 1, 1, 1]' : 0.159226}
{'[3, 3, 0, 0, 0, 3, 0, 1, 0, 10, 19, 0, 0, 2, 0, 1, 1, 1]' : 0.154519}
{'[3, 3, 0, 0, 0, 3, 0, 1, 0, 10, 19, 0, 0, 2, 0, 1, 1, 1]' : 0.155658}
{'[3, 3, 0, 0, 0, 3, 0, 1, 0, 10, 19, 0, 0, 2, 0, 1, 1, 1]' : 0.159252}
{'[3, 3, 0, 0, 0, 3, 0, 1, 0, 10, 19, 0, 0, 2, 0, 1, 1, 1]' : 0.159453}
{'[3, 3, 0, 0, 0, 3, 0, 1, 0, 10, 19, 0, 0, 2, 0, 1, 1, 1]' : 0.159763}
{'[3, 3, 0, 0, 0, 3, 0, 1, 0, 10, 19, 0, 0, 2, 0, 1, 1, 1]' : 0.164017}
{'[3, 3, 0, 0, 0, 3, 0, 1, 0, 10, 19, 0, 0, 2, 0, 1, 1, 1]' : 0.160722}
{'[3, 3, 0, 0, 0, 3, 0, 1, 0, 10, 19, 0, 0, 2, 0, 1, 1, 1]' : 0.159181}

out:
 ["{'[3, 3, 0, 0, 0, 3, 0, 1, 0, 10, 19, 0, 0, 2, 0, 1, 1, 1]' : 0.164132}", "{'[3, 3, 0, 0, 0, 3, 0, 1, 0, 10, 19, 0, 0, 2, 0, 1, 1, 1]' : 0.164035}", "{'[3, 3, 0, 0, 0, 3, 0, 1, 0, 10, 19, 0, 0, 2, 0, 1, 1, 1]' : 0.163915}", "{'[3, 3, 0, 0, 0, 3, 0, 1, 0, 10, 19, 0, 0, 2, 0, 1, 1, 1]' : 0.164}", "{'[3, 3, 0, 0, 0, 3, 0, 1, 0, 10, 19, 0, 0, 2, 0, 1, 1, 1]' : 0.16239}", "{'[3, 3, 0, 0, 0, 3, 0, 1, 0, 10, 19, 0, 0, 2, 0, 1, 1, 1]' : 0.155015}", "{'[3, 3, 0, 0, 0, 3, 0, 1, 0, 10, 19, 0, 0, 2, 0, 1, 1, 1]' : 0.15488}", "{'[3, 3, 0, 0, 0, 3, 0, 1, 0, 10, 19, 0, 0, 2, 0, 1, 1, 1]' : 0.155321}", "{'[3, 3, 0, 0, 0, 3, 0, 1, 0, 10, 19, 0, 0, 2, 0, 1, 1, 1]' : 0.160748}", "{'[3, 3, 0, 0, 0, 3, 0, 1, 0, 10, 19, 0, 0, 2, 0, 1, 1, 1]' : 0.163854}", "{'[3, 3, 0, 0, 0, 3, 0, 1, 0, 10, 19, 0, 0, 2, 0, 1, 1, 1]' : 0.164028}", "{'[3, 3, 0, 0, 0, 3, 0, 1, 0, 10, 19, 0, 0, 2, 0, 1, 1, 1]' : 0.164014}", "{'[3, 3, 0, 0, 0, 3, 0, 1, 0, 10, 19, 0, 0, 2, 0, 1, 1, 1]' : 0.163984}", "{'[3, 3, 0, 0, 0, 3, 0, 1, 0, 10, 19, 0, 0, 2, 0, 1, 1, 1]' : 0.163968}", "{'[3, 3, 0, 0, 0, 3, 0, 1, 0, 10, 19, 0, 0, 2, 0, 1, 1, 1]' : 0.16425}", "{'[3, 3, 0, 0, 0, 3, 0, 1, 0, 10, 19, 0, 0, 2, 0, 1, 1, 1]' : 0.164089}", "{'[3, 3, 0, 0, 0, 3, 0, 1, 0, 10, 19, 0, 0, 2, 0, 1, 1, 1]' : 0.164034}", "{'[3, 3, 0, 0, 0, 3, 0, 1, 0, 10, 19, 0, 0, 2, 0, 1, 1, 1]' : 0.164093}", "{'[3, 3, 0, 0, 0, 3, 0, 1, 0, 10, 19, 0, 0, 2, 0, 1, 1, 1]' : 0.164028}", "{'[3, 3, 0, 0, 0, 3, 0, 1, 0, 10, 19, 0, 0, 2, 0, 1, 1, 1]' : 0.163964}", "{'[3, 3, 0, 0, 0, 3, 0, 1, 0, 10, 19, 0, 0, 2, 0, 1, 1, 1]' : 0.162046}", "{'[3, 3, 0, 0, 0, 3, 0, 1, 0, 10, 19, 0, 0, 2, 0, 1, 1, 1]' : 0.159226}", "{'[3, 3, 0, 0, 0, 3, 0, 1, 0, 10, 19, 0, 0, 2, 0, 1, 1, 1]' : 0.154519}", "{'[3, 3, 0, 0, 0, 3, 0, 1, 0, 10, 19, 0, 0, 2, 0, 1, 1, 1]' : 0.155658}", "{'[3, 3, 0, 0, 0, 3, 0, 1, 0, 10, 19, 0, 0, 2, 0, 1, 1, 1]' : 0.159252}", "{'[3, 3, 0, 0, 0, 3, 0, 1, 0, 10, 19, 0, 0, 2, 0, 1, 1, 1]' : 0.159453}", "{'[3, 3, 0, 0, 0, 3, 0, 1, 0, 10, 19, 0, 0, 2, 0, 1, 1, 1]' : 0.159763}", "{'[3, 3, 0, 0, 0, 3, 0, 1, 0, 10, 19, 0, 0, 2, 0, 1, 1, 1]' : 0.164017}", "{'[3, 3, 0, 0, 0, 3, 0, 1, 0, 10, 19, 0, 0, 2, 0, 1, 1, 1]' : 0.160722}", "{'[3, 3, 0, 0, 0, 3, 0, 1, 0, 10, 19, 0, 0, 2, 0, 1, 1, 1]' : 0.159181}"]
returning from 'run': {'[3, 3, 0, 0, 0, 3, 0, 1, 0, 10, 19, 0, 0, 2, 0, 1, 1, 1]': ([0.164132, 0.164035, 0.163915, 0.164, 0.16239, 0.155015, 0.15488, 0.155321, 0.160748, 0.163854, 0.164028, 0.164014, 0.163984, 0.163968, 0.16425, 0.164089, 0.164034, 0.164093, 0.164028, 0.163964, 0.162046, 0.159226, 0.154519, 0.155658, 0.159252, 0.159453, 0.159763, 0.164017, 0.160722, 0.159181], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 3, 0, 0, 0, 3, 0, 1, 0, 10, 19, 0, 0, 2, 0, 1, 1, 1]': ([0.164132, 0.164035, 0.163915, 0.164, 0.16239, 0.155015, 0.15488, 0.155321, 0.160748, 0.163854, 0.164028, 0.164014, 0.163984, 0.163968, 0.16425, 0.164089, 0.164034, 0.164093, 0.164028, 0.163964, 0.162046, 0.159226, 0.154519, 0.155658, 0.159252, 0.159453, 0.159763, 0.164017, 0.160722, 0.159181], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	26
        Max loop nest depth: 	6
        Additions: 		1279
        Multiplications: 	504
        Divisions: 		0
        Logical: 		0
        Reads: 			2550
        Writes: 		481
        Comparisons:		26
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest75.exe __orio_perftest75.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest75.exe  
Program Test Output: 
{'[3, 3, 4, 6, 5, 5, 1, 1, 29, 0, 0, 25, 1, 0, 0, 1, 1, 1]' : 0.094326}
{'[3, 3, 4, 6, 5, 5, 1, 1, 29, 0, 0, 25, 1, 0, 0, 1, 1, 1]' : 0.094218}
{'[3, 3, 4, 6, 5, 5, 1, 1, 29, 0, 0, 25, 1, 0, 0, 1, 1, 1]' : 0.0941839}
{'[3, 3, 4, 6, 5, 5, 1, 1, 29, 0, 0, 25, 1, 0, 0, 1, 1, 1]' : 0.0941451}
{'[3, 3, 4, 6, 5, 5, 1, 1, 29, 0, 0, 25, 1, 0, 0, 1, 1, 1]' : 0.094028}
{'[3, 3, 4, 6, 5, 5, 1, 1, 29, 0, 0, 25, 1, 0, 0, 1, 1, 1]' : 0.096061}
{'[3, 3, 4, 6, 5, 5, 1, 1, 29, 0, 0, 25, 1, 0, 0, 1, 1, 1]' : 0.0965559}
{'[3, 3, 4, 6, 5, 5, 1, 1, 29, 0, 0, 25, 1, 0, 0, 1, 1, 1]' : 0.09653}
{'[3, 3, 4, 6, 5, 5, 1, 1, 29, 0, 0, 25, 1, 0, 0, 1, 1, 1]' : 0.094331}
{'[3, 3, 4, 6, 5, 5, 1, 1, 29, 0, 0, 25, 1, 0, 0, 1, 1, 1]' : 0.09427}
{'[3, 3, 4, 6, 5, 5, 1, 1, 29, 0, 0, 25, 1, 0, 0, 1, 1, 1]' : 0.095444}
{'[3, 3, 4, 6, 5, 5, 1, 1, 29, 0, 0, 25, 1, 0, 0, 1, 1, 1]' : 0.096566}
{'[3, 3, 4, 6, 5, 5, 1, 1, 29, 0, 0, 25, 1, 0, 0, 1, 1, 1]' : 0.0965989}
{'[3, 3, 4, 6, 5, 5, 1, 1, 29, 0, 0, 25, 1, 0, 0, 1, 1, 1]' : 0.09671}
{'[3, 3, 4, 6, 5, 5, 1, 1, 29, 0, 0, 25, 1, 0, 0, 1, 1, 1]' : 0.096849}
{'[3, 3, 4, 6, 5, 5, 1, 1, 29, 0, 0, 25, 1, 0, 0, 1, 1, 1]' : 0.096045}
{'[3, 3, 4, 6, 5, 5, 1, 1, 29, 0, 0, 25, 1, 0, 0, 1, 1, 1]' : 0.0940878}
{'[3, 3, 4, 6, 5, 5, 1, 1, 29, 0, 0, 25, 1, 0, 0, 1, 1, 1]' : 0.0940888}
{'[3, 3, 4, 6, 5, 5, 1, 1, 29, 0, 0, 25, 1, 0, 0, 1, 1, 1]' : 0.0941238}
{'[3, 3, 4, 6, 5, 5, 1, 1, 29, 0, 0, 25, 1, 0, 0, 1, 1, 1]' : 0.0941062}
{'[3, 3, 4, 6, 5, 5, 1, 1, 29, 0, 0, 25, 1, 0, 0, 1, 1, 1]' : 0.094058}
{'[3, 3, 4, 6, 5, 5, 1, 1, 29, 0, 0, 25, 1, 0, 0, 1, 1, 1]' : 0.09654}
{'[3, 3, 4, 6, 5, 5, 1, 1, 29, 0, 0, 25, 1, 0, 0, 1, 1, 1]' : 0.0965111}
{'[3, 3, 4, 6, 5, 5, 1, 1, 29, 0, 0, 25, 1, 0, 0, 1, 1, 1]' : 0.09624}
{'[3, 3, 4, 6, 5, 5, 1, 1, 29, 0, 0, 25, 1, 0, 0, 1, 1, 1]' : 0.094238}
{'[3, 3, 4, 6, 5, 5, 1, 1, 29, 0, 0, 25, 1, 0, 0, 1, 1, 1]' : 0.0941951}
{'[3, 3, 4, 6, 5, 5, 1, 1, 29, 0, 0, 25, 1, 0, 0, 1, 1, 1]' : 0.0941348}
{'[3, 3, 4, 6, 5, 5, 1, 1, 29, 0, 0, 25, 1, 0, 0, 1, 1, 1]' : 0.0941508}
{'[3, 3, 4, 6, 5, 5, 1, 1, 29, 0, 0, 25, 1, 0, 0, 1, 1, 1]' : 0.0940678}
{'[3, 3, 4, 6, 5, 5, 1, 1, 29, 0, 0, 25, 1, 0, 0, 1, 1, 1]' : 0.094101}

out:
 ["{'[3, 3, 4, 6, 5, 5, 1, 1, 29, 0, 0, 25, 1, 0, 0, 1, 1, 1]' : 0.094326}", "{'[3, 3, 4, 6, 5, 5, 1, 1, 29, 0, 0, 25, 1, 0, 0, 1, 1, 1]' : 0.094218}", "{'[3, 3, 4, 6, 5, 5, 1, 1, 29, 0, 0, 25, 1, 0, 0, 1, 1, 1]' : 0.0941839}", "{'[3, 3, 4, 6, 5, 5, 1, 1, 29, 0, 0, 25, 1, 0, 0, 1, 1, 1]' : 0.0941451}", "{'[3, 3, 4, 6, 5, 5, 1, 1, 29, 0, 0, 25, 1, 0, 0, 1, 1, 1]' : 0.094028}", "{'[3, 3, 4, 6, 5, 5, 1, 1, 29, 0, 0, 25, 1, 0, 0, 1, 1, 1]' : 0.096061}", "{'[3, 3, 4, 6, 5, 5, 1, 1, 29, 0, 0, 25, 1, 0, 0, 1, 1, 1]' : 0.0965559}", "{'[3, 3, 4, 6, 5, 5, 1, 1, 29, 0, 0, 25, 1, 0, 0, 1, 1, 1]' : 0.09653}", "{'[3, 3, 4, 6, 5, 5, 1, 1, 29, 0, 0, 25, 1, 0, 0, 1, 1, 1]' : 0.094331}", "{'[3, 3, 4, 6, 5, 5, 1, 1, 29, 0, 0, 25, 1, 0, 0, 1, 1, 1]' : 0.09427}", "{'[3, 3, 4, 6, 5, 5, 1, 1, 29, 0, 0, 25, 1, 0, 0, 1, 1, 1]' : 0.095444}", "{'[3, 3, 4, 6, 5, 5, 1, 1, 29, 0, 0, 25, 1, 0, 0, 1, 1, 1]' : 0.096566}", "{'[3, 3, 4, 6, 5, 5, 1, 1, 29, 0, 0, 25, 1, 0, 0, 1, 1, 1]' : 0.0965989}", "{'[3, 3, 4, 6, 5, 5, 1, 1, 29, 0, 0, 25, 1, 0, 0, 1, 1, 1]' : 0.09671}", "{'[3, 3, 4, 6, 5, 5, 1, 1, 29, 0, 0, 25, 1, 0, 0, 1, 1, 1]' : 0.096849}", "{'[3, 3, 4, 6, 5, 5, 1, 1, 29, 0, 0, 25, 1, 0, 0, 1, 1, 1]' : 0.096045}", "{'[3, 3, 4, 6, 5, 5, 1, 1, 29, 0, 0, 25, 1, 0, 0, 1, 1, 1]' : 0.0940878}", "{'[3, 3, 4, 6, 5, 5, 1, 1, 29, 0, 0, 25, 1, 0, 0, 1, 1, 1]' : 0.0940888}", "{'[3, 3, 4, 6, 5, 5, 1, 1, 29, 0, 0, 25, 1, 0, 0, 1, 1, 1]' : 0.0941238}", "{'[3, 3, 4, 6, 5, 5, 1, 1, 29, 0, 0, 25, 1, 0, 0, 1, 1, 1]' : 0.0941062}", "{'[3, 3, 4, 6, 5, 5, 1, 1, 29, 0, 0, 25, 1, 0, 0, 1, 1, 1]' : 0.094058}", "{'[3, 3, 4, 6, 5, 5, 1, 1, 29, 0, 0, 25, 1, 0, 0, 1, 1, 1]' : 0.09654}", "{'[3, 3, 4, 6, 5, 5, 1, 1, 29, 0, 0, 25, 1, 0, 0, 1, 1, 1]' : 0.0965111}", "{'[3, 3, 4, 6, 5, 5, 1, 1, 29, 0, 0, 25, 1, 0, 0, 1, 1, 1]' : 0.09624}", "{'[3, 3, 4, 6, 5, 5, 1, 1, 29, 0, 0, 25, 1, 0, 0, 1, 1, 1]' : 0.094238}", "{'[3, 3, 4, 6, 5, 5, 1, 1, 29, 0, 0, 25, 1, 0, 0, 1, 1, 1]' : 0.0941951}", "{'[3, 3, 4, 6, 5, 5, 1, 1, 29, 0, 0, 25, 1, 0, 0, 1, 1, 1]' : 0.0941348}", "{'[3, 3, 4, 6, 5, 5, 1, 1, 29, 0, 0, 25, 1, 0, 0, 1, 1, 1]' : 0.0941508}", "{'[3, 3, 4, 6, 5, 5, 1, 1, 29, 0, 0, 25, 1, 0, 0, 1, 1, 1]' : 0.0940678}", "{'[3, 3, 4, 6, 5, 5, 1, 1, 29, 0, 0, 25, 1, 0, 0, 1, 1, 1]' : 0.094101}"]
returning from 'run': {'[3, 3, 4, 6, 5, 5, 1, 1, 29, 0, 0, 25, 1, 0, 0, 1, 1, 1]': ([0.094326, 0.094218, 0.0941839, 0.0941451, 0.094028, 0.096061, 0.0965559, 0.09653, 0.094331, 0.09427, 0.095444, 0.096566, 0.0965989, 0.09671, 0.096849, 0.096045, 0.0940878, 0.0940888, 0.0941238, 0.0941062, 0.094058, 0.09654, 0.0965111, 0.09624, 0.094238, 0.0941951, 0.0941348, 0.0941508, 0.0940678, 0.094101], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 3, 4, 6, 5, 5, 1, 1, 29, 0, 0, 25, 1, 0, 0, 1, 1, 1]': ([0.094326, 0.094218, 0.0941839, 0.0941451, 0.094028, 0.096061, 0.0965559, 0.09653, 0.094331, 0.09427, 0.095444, 0.096566, 0.0965989, 0.09671, 0.096849, 0.096045, 0.0940878, 0.0940888, 0.0941238, 0.0941062, 0.094058, 0.09654, 0.0965111, 0.09624, 0.094238, 0.0941951, 0.0941348, 0.0941508, 0.0940678, 0.094101], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	27
        Max loop nest depth: 	6
        Additions: 		1069
        Multiplications: 	484
        Divisions: 		0
        Logical: 		0
        Reads: 			2243
        Writes: 		430
        Comparisons:		27
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest76.exe __orio_perftest76.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest76.exe  
Program Test Output: 
{'[2, 3, 1, 1, 4, 6, 0, 0, 0, 12, 0, 8, 1, 0, 0, 1, 0, 1]' : 0.141922}
{'[2, 3, 1, 1, 4, 6, 0, 0, 0, 12, 0, 8, 1, 0, 0, 1, 0, 1]' : 0.134933}
{'[2, 3, 1, 1, 4, 6, 0, 0, 0, 12, 0, 8, 1, 0, 0, 1, 0, 1]' : 0.125513}
{'[2, 3, 1, 1, 4, 6, 0, 0, 0, 12, 0, 8, 1, 0, 0, 1, 0, 1]' : 0.125583}
{'[2, 3, 1, 1, 4, 6, 0, 0, 0, 12, 0, 8, 1, 0, 0, 1, 0, 1]' : 0.126817}
{'[2, 3, 1, 1, 4, 6, 0, 0, 0, 12, 0, 8, 1, 0, 0, 1, 0, 1]' : 0.128601}
{'[2, 3, 1, 1, 4, 6, 0, 0, 0, 12, 0, 8, 1, 0, 0, 1, 0, 1]' : 0.128583}
{'[2, 3, 1, 1, 4, 6, 0, 0, 0, 12, 0, 8, 1, 0, 0, 1, 0, 1]' : 0.128612}
{'[2, 3, 1, 1, 4, 6, 0, 0, 0, 12, 0, 8, 1, 0, 0, 1, 0, 1]' : 0.128683}
{'[2, 3, 1, 1, 4, 6, 0, 0, 0, 12, 0, 8, 1, 0, 0, 1, 0, 1]' : 0.128594}
{'[2, 3, 1, 1, 4, 6, 0, 0, 0, 12, 0, 8, 1, 0, 0, 1, 0, 1]' : 0.128566}
{'[2, 3, 1, 1, 4, 6, 0, 0, 0, 12, 0, 8, 1, 0, 0, 1, 0, 1]' : 0.128711}
{'[2, 3, 1, 1, 4, 6, 0, 0, 0, 12, 0, 8, 1, 0, 0, 1, 0, 1]' : 0.129139}
{'[2, 3, 1, 1, 4, 6, 0, 0, 0, 12, 0, 8, 1, 0, 0, 1, 0, 1]' : 0.12866}
{'[2, 3, 1, 1, 4, 6, 0, 0, 0, 12, 0, 8, 1, 0, 0, 1, 0, 1]' : 0.128616}
{'[2, 3, 1, 1, 4, 6, 0, 0, 0, 12, 0, 8, 1, 0, 0, 1, 0, 1]' : 0.128576}
{'[2, 3, 1, 1, 4, 6, 0, 0, 0, 12, 0, 8, 1, 0, 0, 1, 0, 1]' : 0.128637}
{'[2, 3, 1, 1, 4, 6, 0, 0, 0, 12, 0, 8, 1, 0, 0, 1, 0, 1]' : 0.128572}
{'[2, 3, 1, 1, 4, 6, 0, 0, 0, 12, 0, 8, 1, 0, 0, 1, 0, 1]' : 0.128802}
{'[2, 3, 1, 1, 4, 6, 0, 0, 0, 12, 0, 8, 1, 0, 0, 1, 0, 1]' : 0.128605}
{'[2, 3, 1, 1, 4, 6, 0, 0, 0, 12, 0, 8, 1, 0, 0, 1, 0, 1]' : 0.128738}
{'[2, 3, 1, 1, 4, 6, 0, 0, 0, 12, 0, 8, 1, 0, 0, 1, 0, 1]' : 0.128629}
{'[2, 3, 1, 1, 4, 6, 0, 0, 0, 12, 0, 8, 1, 0, 0, 1, 0, 1]' : 0.128323}
{'[2, 3, 1, 1, 4, 6, 0, 0, 0, 12, 0, 8, 1, 0, 0, 1, 0, 1]' : 0.123706}
{'[2, 3, 1, 1, 4, 6, 0, 0, 0, 12, 0, 8, 1, 0, 0, 1, 0, 1]' : 0.125658}
{'[2, 3, 1, 1, 4, 6, 0, 0, 0, 12, 0, 8, 1, 0, 0, 1, 0, 1]' : 0.128601}
{'[2, 3, 1, 1, 4, 6, 0, 0, 0, 12, 0, 8, 1, 0, 0, 1, 0, 1]' : 0.128638}
{'[2, 3, 1, 1, 4, 6, 0, 0, 0, 12, 0, 8, 1, 0, 0, 1, 0, 1]' : 0.128808}
{'[2, 3, 1, 1, 4, 6, 0, 0, 0, 12, 0, 8, 1, 0, 0, 1, 0, 1]' : 0.128375}
{'[2, 3, 1, 1, 4, 6, 0, 0, 0, 12, 0, 8, 1, 0, 0, 1, 0, 1]' : 0.125726}

out:
 ["{'[2, 3, 1, 1, 4, 6, 0, 0, 0, 12, 0, 8, 1, 0, 0, 1, 0, 1]' : 0.141922}", "{'[2, 3, 1, 1, 4, 6, 0, 0, 0, 12, 0, 8, 1, 0, 0, 1, 0, 1]' : 0.134933}", "{'[2, 3, 1, 1, 4, 6, 0, 0, 0, 12, 0, 8, 1, 0, 0, 1, 0, 1]' : 0.125513}", "{'[2, 3, 1, 1, 4, 6, 0, 0, 0, 12, 0, 8, 1, 0, 0, 1, 0, 1]' : 0.125583}", "{'[2, 3, 1, 1, 4, 6, 0, 0, 0, 12, 0, 8, 1, 0, 0, 1, 0, 1]' : 0.126817}", "{'[2, 3, 1, 1, 4, 6, 0, 0, 0, 12, 0, 8, 1, 0, 0, 1, 0, 1]' : 0.128601}", "{'[2, 3, 1, 1, 4, 6, 0, 0, 0, 12, 0, 8, 1, 0, 0, 1, 0, 1]' : 0.128583}", "{'[2, 3, 1, 1, 4, 6, 0, 0, 0, 12, 0, 8, 1, 0, 0, 1, 0, 1]' : 0.128612}", "{'[2, 3, 1, 1, 4, 6, 0, 0, 0, 12, 0, 8, 1, 0, 0, 1, 0, 1]' : 0.128683}", "{'[2, 3, 1, 1, 4, 6, 0, 0, 0, 12, 0, 8, 1, 0, 0, 1, 0, 1]' : 0.128594}", "{'[2, 3, 1, 1, 4, 6, 0, 0, 0, 12, 0, 8, 1, 0, 0, 1, 0, 1]' : 0.128566}", "{'[2, 3, 1, 1, 4, 6, 0, 0, 0, 12, 0, 8, 1, 0, 0, 1, 0, 1]' : 0.128711}", "{'[2, 3, 1, 1, 4, 6, 0, 0, 0, 12, 0, 8, 1, 0, 0, 1, 0, 1]' : 0.129139}", "{'[2, 3, 1, 1, 4, 6, 0, 0, 0, 12, 0, 8, 1, 0, 0, 1, 0, 1]' : 0.12866}", "{'[2, 3, 1, 1, 4, 6, 0, 0, 0, 12, 0, 8, 1, 0, 0, 1, 0, 1]' : 0.128616}", "{'[2, 3, 1, 1, 4, 6, 0, 0, 0, 12, 0, 8, 1, 0, 0, 1, 0, 1]' : 0.128576}", "{'[2, 3, 1, 1, 4, 6, 0, 0, 0, 12, 0, 8, 1, 0, 0, 1, 0, 1]' : 0.128637}", "{'[2, 3, 1, 1, 4, 6, 0, 0, 0, 12, 0, 8, 1, 0, 0, 1, 0, 1]' : 0.128572}", "{'[2, 3, 1, 1, 4, 6, 0, 0, 0, 12, 0, 8, 1, 0, 0, 1, 0, 1]' : 0.128802}", "{'[2, 3, 1, 1, 4, 6, 0, 0, 0, 12, 0, 8, 1, 0, 0, 1, 0, 1]' : 0.128605}", "{'[2, 3, 1, 1, 4, 6, 0, 0, 0, 12, 0, 8, 1, 0, 0, 1, 0, 1]' : 0.128738}", "{'[2, 3, 1, 1, 4, 6, 0, 0, 0, 12, 0, 8, 1, 0, 0, 1, 0, 1]' : 0.128629}", "{'[2, 3, 1, 1, 4, 6, 0, 0, 0, 12, 0, 8, 1, 0, 0, 1, 0, 1]' : 0.128323}", "{'[2, 3, 1, 1, 4, 6, 0, 0, 0, 12, 0, 8, 1, 0, 0, 1, 0, 1]' : 0.123706}", "{'[2, 3, 1, 1, 4, 6, 0, 0, 0, 12, 0, 8, 1, 0, 0, 1, 0, 1]' : 0.125658}", "{'[2, 3, 1, 1, 4, 6, 0, 0, 0, 12, 0, 8, 1, 0, 0, 1, 0, 1]' : 0.128601}", "{'[2, 3, 1, 1, 4, 6, 0, 0, 0, 12, 0, 8, 1, 0, 0, 1, 0, 1]' : 0.128638}", "{'[2, 3, 1, 1, 4, 6, 0, 0, 0, 12, 0, 8, 1, 0, 0, 1, 0, 1]' : 0.128808}", "{'[2, 3, 1, 1, 4, 6, 0, 0, 0, 12, 0, 8, 1, 0, 0, 1, 0, 1]' : 0.128375}", "{'[2, 3, 1, 1, 4, 6, 0, 0, 0, 12, 0, 8, 1, 0, 0, 1, 0, 1]' : 0.125726}"]
returning from 'run': {'[2, 3, 1, 1, 4, 6, 0, 0, 0, 12, 0, 8, 1, 0, 0, 1, 0, 1]': ([0.141922, 0.134933, 0.125513, 0.125583, 0.126817, 0.128601, 0.128583, 0.128612, 0.128683, 0.128594, 0.128566, 0.128711, 0.129139, 0.12866, 0.128616, 0.128576, 0.128637, 0.128572, 0.128802, 0.128605, 0.128738, 0.128629, 0.128323, 0.123706, 0.125658, 0.128601, 0.128638, 0.128808, 0.128375, 0.125726], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 3, 1, 1, 4, 6, 0, 0, 0, 12, 0, 8, 1, 0, 0, 1, 0, 1]': ([0.141922, 0.134933, 0.125513, 0.125583, 0.126817, 0.128601, 0.128583, 0.128612, 0.128683, 0.128594, 0.128566, 0.128711, 0.129139, 0.12866, 0.128616, 0.128576, 0.128637, 0.128572, 0.128802, 0.128605, 0.128738, 0.128629, 0.128323, 0.123706, 0.125658, 0.128601, 0.128638, 0.128808, 0.128375, 0.125726], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	73
        Max loop nest depth: 	5
        Additions: 		2891
        Multiplications: 	1088
        Divisions: 		0
        Logical: 		0
        Reads: 			5997
        Writes: 		1246
        Comparisons:		73
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest77.exe __orio_perftest77.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest77.exe  
Program Test Output: 
{'[3, 3, 6, 2, 0, 0, 0, 0, 28, 24, 0, 5, 1, 0, 1, 1, 1, 0]' : 0.103624}
{'[3, 3, 6, 2, 0, 0, 0, 0, 28, 24, 0, 5, 1, 0, 1, 1, 1, 0]' : 0.103348}
{'[3, 3, 6, 2, 0, 0, 0, 0, 28, 24, 0, 5, 1, 0, 1, 1, 1, 0]' : 0.0977809}
{'[3, 3, 6, 2, 0, 0, 0, 0, 28, 24, 0, 5, 1, 0, 1, 1, 1, 0]' : 0.0936921}
{'[3, 3, 6, 2, 0, 0, 0, 0, 28, 24, 0, 5, 1, 0, 1, 1, 1, 0]' : 0.094188}
{'[3, 3, 6, 2, 0, 0, 0, 0, 28, 24, 0, 5, 1, 0, 1, 1, 1, 0]' : 0.095546}
{'[3, 3, 6, 2, 0, 0, 0, 0, 28, 24, 0, 5, 1, 0, 1, 1, 1, 0]' : 0.095449}
{'[3, 3, 6, 2, 0, 0, 0, 0, 28, 24, 0, 5, 1, 0, 1, 1, 1, 0]' : 0.095433}
{'[3, 3, 6, 2, 0, 0, 0, 0, 28, 24, 0, 5, 1, 0, 1, 1, 1, 0]' : 0.0954258}
{'[3, 3, 6, 2, 0, 0, 0, 0, 28, 24, 0, 5, 1, 0, 1, 1, 1, 0]' : 0.0946229}
{'[3, 3, 6, 2, 0, 0, 0, 0, 28, 24, 0, 5, 1, 0, 1, 1, 1, 0]' : 0.0946341}
{'[3, 3, 6, 2, 0, 0, 0, 0, 28, 24, 0, 5, 1, 0, 1, 1, 1, 0]' : 0.0954068}
{'[3, 3, 6, 2, 0, 0, 0, 0, 28, 24, 0, 5, 1, 0, 1, 1, 1, 0]' : 0.0953779}
{'[3, 3, 6, 2, 0, 0, 0, 0, 28, 24, 0, 5, 1, 0, 1, 1, 1, 0]' : 0.095674}
{'[3, 3, 6, 2, 0, 0, 0, 0, 28, 24, 0, 5, 1, 0, 1, 1, 1, 0]' : 0.095793}
{'[3, 3, 6, 2, 0, 0, 0, 0, 28, 24, 0, 5, 1, 0, 1, 1, 1, 0]' : 0.0963531}
{'[3, 3, 6, 2, 0, 0, 0, 0, 28, 24, 0, 5, 1, 0, 1, 1, 1, 0]' : 0.0956619}
{'[3, 3, 6, 2, 0, 0, 0, 0, 28, 24, 0, 5, 1, 0, 1, 1, 1, 0]' : 0.095304}
{'[3, 3, 6, 2, 0, 0, 0, 0, 28, 24, 0, 5, 1, 0, 1, 1, 1, 0]' : 0.0954709}
{'[3, 3, 6, 2, 0, 0, 0, 0, 28, 24, 0, 5, 1, 0, 1, 1, 1, 0]' : 0.095396}
{'[3, 3, 6, 2, 0, 0, 0, 0, 28, 24, 0, 5, 1, 0, 1, 1, 1, 0]' : 0.0954821}
{'[3, 3, 6, 2, 0, 0, 0, 0, 28, 24, 0, 5, 1, 0, 1, 1, 1, 0]' : 0.0946589}
{'[3, 3, 6, 2, 0, 0, 0, 0, 28, 24, 0, 5, 1, 0, 1, 1, 1, 0]' : 0.093349}
{'[3, 3, 6, 2, 0, 0, 0, 0, 28, 24, 0, 5, 1, 0, 1, 1, 1, 0]' : 0.0934629}
{'[3, 3, 6, 2, 0, 0, 0, 0, 28, 24, 0, 5, 1, 0, 1, 1, 1, 0]' : 0.0939531}
{'[3, 3, 6, 2, 0, 0, 0, 0, 28, 24, 0, 5, 1, 0, 1, 1, 1, 0]' : 0.093956}
{'[3, 3, 6, 2, 0, 0, 0, 0, 28, 24, 0, 5, 1, 0, 1, 1, 1, 0]' : 0.09571}
{'[3, 3, 6, 2, 0, 0, 0, 0, 28, 24, 0, 5, 1, 0, 1, 1, 1, 0]' : 0.0944772}
{'[3, 3, 6, 2, 0, 0, 0, 0, 28, 24, 0, 5, 1, 0, 1, 1, 1, 0]' : 0.093384}
{'[3, 3, 6, 2, 0, 0, 0, 0, 28, 24, 0, 5, 1, 0, 1, 1, 1, 0]' : 0.093462}

out:
 ["{'[3, 3, 6, 2, 0, 0, 0, 0, 28, 24, 0, 5, 1, 0, 1, 1, 1, 0]' : 0.103624}", "{'[3, 3, 6, 2, 0, 0, 0, 0, 28, 24, 0, 5, 1, 0, 1, 1, 1, 0]' : 0.103348}", "{'[3, 3, 6, 2, 0, 0, 0, 0, 28, 24, 0, 5, 1, 0, 1, 1, 1, 0]' : 0.0977809}", "{'[3, 3, 6, 2, 0, 0, 0, 0, 28, 24, 0, 5, 1, 0, 1, 1, 1, 0]' : 0.0936921}", "{'[3, 3, 6, 2, 0, 0, 0, 0, 28, 24, 0, 5, 1, 0, 1, 1, 1, 0]' : 0.094188}", "{'[3, 3, 6, 2, 0, 0, 0, 0, 28, 24, 0, 5, 1, 0, 1, 1, 1, 0]' : 0.095546}", "{'[3, 3, 6, 2, 0, 0, 0, 0, 28, 24, 0, 5, 1, 0, 1, 1, 1, 0]' : 0.095449}", "{'[3, 3, 6, 2, 0, 0, 0, 0, 28, 24, 0, 5, 1, 0, 1, 1, 1, 0]' : 0.095433}", "{'[3, 3, 6, 2, 0, 0, 0, 0, 28, 24, 0, 5, 1, 0, 1, 1, 1, 0]' : 0.0954258}", "{'[3, 3, 6, 2, 0, 0, 0, 0, 28, 24, 0, 5, 1, 0, 1, 1, 1, 0]' : 0.0946229}", "{'[3, 3, 6, 2, 0, 0, 0, 0, 28, 24, 0, 5, 1, 0, 1, 1, 1, 0]' : 0.0946341}", "{'[3, 3, 6, 2, 0, 0, 0, 0, 28, 24, 0, 5, 1, 0, 1, 1, 1, 0]' : 0.0954068}", "{'[3, 3, 6, 2, 0, 0, 0, 0, 28, 24, 0, 5, 1, 0, 1, 1, 1, 0]' : 0.0953779}", "{'[3, 3, 6, 2, 0, 0, 0, 0, 28, 24, 0, 5, 1, 0, 1, 1, 1, 0]' : 0.095674}", "{'[3, 3, 6, 2, 0, 0, 0, 0, 28, 24, 0, 5, 1, 0, 1, 1, 1, 0]' : 0.095793}", "{'[3, 3, 6, 2, 0, 0, 0, 0, 28, 24, 0, 5, 1, 0, 1, 1, 1, 0]' : 0.0963531}", "{'[3, 3, 6, 2, 0, 0, 0, 0, 28, 24, 0, 5, 1, 0, 1, 1, 1, 0]' : 0.0956619}", "{'[3, 3, 6, 2, 0, 0, 0, 0, 28, 24, 0, 5, 1, 0, 1, 1, 1, 0]' : 0.095304}", "{'[3, 3, 6, 2, 0, 0, 0, 0, 28, 24, 0, 5, 1, 0, 1, 1, 1, 0]' : 0.0954709}", "{'[3, 3, 6, 2, 0, 0, 0, 0, 28, 24, 0, 5, 1, 0, 1, 1, 1, 0]' : 0.095396}", "{'[3, 3, 6, 2, 0, 0, 0, 0, 28, 24, 0, 5, 1, 0, 1, 1, 1, 0]' : 0.0954821}", "{'[3, 3, 6, 2, 0, 0, 0, 0, 28, 24, 0, 5, 1, 0, 1, 1, 1, 0]' : 0.0946589}", "{'[3, 3, 6, 2, 0, 0, 0, 0, 28, 24, 0, 5, 1, 0, 1, 1, 1, 0]' : 0.093349}", "{'[3, 3, 6, 2, 0, 0, 0, 0, 28, 24, 0, 5, 1, 0, 1, 1, 1, 0]' : 0.0934629}", "{'[3, 3, 6, 2, 0, 0, 0, 0, 28, 24, 0, 5, 1, 0, 1, 1, 1, 0]' : 0.0939531}", "{'[3, 3, 6, 2, 0, 0, 0, 0, 28, 24, 0, 5, 1, 0, 1, 1, 1, 0]' : 0.093956}", "{'[3, 3, 6, 2, 0, 0, 0, 0, 28, 24, 0, 5, 1, 0, 1, 1, 1, 0]' : 0.09571}", "{'[3, 3, 6, 2, 0, 0, 0, 0, 28, 24, 0, 5, 1, 0, 1, 1, 1, 0]' : 0.0944772}", "{'[3, 3, 6, 2, 0, 0, 0, 0, 28, 24, 0, 5, 1, 0, 1, 1, 1, 0]' : 0.093384}", "{'[3, 3, 6, 2, 0, 0, 0, 0, 28, 24, 0, 5, 1, 0, 1, 1, 1, 0]' : 0.093462}"]
returning from 'run': {'[3, 3, 6, 2, 0, 0, 0, 0, 28, 24, 0, 5, 1, 0, 1, 1, 1, 0]': ([0.103624, 0.103348, 0.0977809, 0.0936921, 0.094188, 0.095546, 0.095449, 0.095433, 0.0954258, 0.0946229, 0.0946341, 0.0954068, 0.0953779, 0.095674, 0.095793, 0.0963531, 0.0956619, 0.095304, 0.0954709, 0.095396, 0.0954821, 0.0946589, 0.093349, 0.0934629, 0.0939531, 0.093956, 0.09571, 0.0944772, 0.093384, 0.093462], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 3, 6, 2, 0, 0, 0, 0, 28, 24, 0, 5, 1, 0, 1, 1, 1, 0]': ([0.103624, 0.103348, 0.0977809, 0.0936921, 0.094188, 0.095546, 0.095449, 0.095433, 0.0954258, 0.0946229, 0.0946341, 0.0954068, 0.0953779, 0.095674, 0.095793, 0.0963531, 0.0956619, 0.095304, 0.0954709, 0.095396, 0.0954821, 0.0946589, 0.093349, 0.0934629, 0.0939531, 0.093956, 0.09571, 0.0944772, 0.093384, 0.093462], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = iii
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		77
        Multiplications: 	8
        Divisions: 		0
        Logical: 		0
        Reads: 			191
        Writes: 		58
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest78.exe __orio_perftest78.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest78.exe  
Program Test Output: 
{'[5, 3, 4, 3, 4, 5, 0, 1, 11, 0, 0, 1, 0, 0, 0, 1, 0, 1]' : 0.247567}
{'[5, 3, 4, 3, 4, 5, 0, 1, 11, 0, 0, 1, 0, 0, 0, 1, 0, 1]' : 0.231722}
{'[5, 3, 4, 3, 4, 5, 0, 1, 11, 0, 0, 1, 0, 0, 0, 1, 0, 1]' : 0.215294}
{'[5, 3, 4, 3, 4, 5, 0, 1, 11, 0, 0, 1, 0, 0, 0, 1, 0, 1]' : 0.21345}
{'[5, 3, 4, 3, 4, 5, 0, 1, 11, 0, 0, 1, 0, 0, 0, 1, 0, 1]' : 0.213612}
{'[5, 3, 4, 3, 4, 5, 0, 1, 11, 0, 0, 1, 0, 0, 0, 1, 0, 1]' : 0.213382}
{'[5, 3, 4, 3, 4, 5, 0, 1, 11, 0, 0, 1, 0, 0, 0, 1, 0, 1]' : 0.216514}
{'[5, 3, 4, 3, 4, 5, 0, 1, 11, 0, 0, 1, 0, 0, 0, 1, 0, 1]' : 0.212734}
{'[5, 3, 4, 3, 4, 5, 0, 1, 11, 0, 0, 1, 0, 0, 0, 1, 0, 1]' : 0.218167}
{'[5, 3, 4, 3, 4, 5, 0, 1, 11, 0, 0, 1, 0, 0, 0, 1, 0, 1]' : 0.216184}
{'[5, 3, 4, 3, 4, 5, 0, 1, 11, 0, 0, 1, 0, 0, 0, 1, 0, 1]' : 0.216072}
{'[5, 3, 4, 3, 4, 5, 0, 1, 11, 0, 0, 1, 0, 0, 0, 1, 0, 1]' : 0.218827}
{'[5, 3, 4, 3, 4, 5, 0, 1, 11, 0, 0, 1, 0, 0, 0, 1, 0, 1]' : 0.21391}
{'[5, 3, 4, 3, 4, 5, 0, 1, 11, 0, 0, 1, 0, 0, 0, 1, 0, 1]' : 0.219424}
{'[5, 3, 4, 3, 4, 5, 0, 1, 11, 0, 0, 1, 0, 0, 0, 1, 0, 1]' : 0.212846}
{'[5, 3, 4, 3, 4, 5, 0, 1, 11, 0, 0, 1, 0, 0, 0, 1, 0, 1]' : 0.211656}
{'[5, 3, 4, 3, 4, 5, 0, 1, 11, 0, 0, 1, 0, 0, 0, 1, 0, 1]' : 0.206314}
{'[5, 3, 4, 3, 4, 5, 0, 1, 11, 0, 0, 1, 0, 0, 0, 1, 0, 1]' : 0.212336}
{'[5, 3, 4, 3, 4, 5, 0, 1, 11, 0, 0, 1, 0, 0, 0, 1, 0, 1]' : 0.219392}
{'[5, 3, 4, 3, 4, 5, 0, 1, 11, 0, 0, 1, 0, 0, 0, 1, 0, 1]' : 0.214598}
{'[5, 3, 4, 3, 4, 5, 0, 1, 11, 0, 0, 1, 0, 0, 0, 1, 0, 1]' : 0.214645}
{'[5, 3, 4, 3, 4, 5, 0, 1, 11, 0, 0, 1, 0, 0, 0, 1, 0, 1]' : 0.211313}
{'[5, 3, 4, 3, 4, 5, 0, 1, 11, 0, 0, 1, 0, 0, 0, 1, 0, 1]' : 0.215447}
{'[5, 3, 4, 3, 4, 5, 0, 1, 11, 0, 0, 1, 0, 0, 0, 1, 0, 1]' : 0.207968}
{'[5, 3, 4, 3, 4, 5, 0, 1, 11, 0, 0, 1, 0, 0, 0, 1, 0, 1]' : 0.20944}
{'[5, 3, 4, 3, 4, 5, 0, 1, 11, 0, 0, 1, 0, 0, 0, 1, 0, 1]' : 0.206213}
{'[5, 3, 4, 3, 4, 5, 0, 1, 11, 0, 0, 1, 0, 0, 0, 1, 0, 1]' : 0.206466}
{'[5, 3, 4, 3, 4, 5, 0, 1, 11, 0, 0, 1, 0, 0, 0, 1, 0, 1]' : 0.213904}
{'[5, 3, 4, 3, 4, 5, 0, 1, 11, 0, 0, 1, 0, 0, 0, 1, 0, 1]' : 0.212989}
{'[5, 3, 4, 3, 4, 5, 0, 1, 11, 0, 0, 1, 0, 0, 0, 1, 0, 1]' : 0.216658}

out:
 ["{'[5, 3, 4, 3, 4, 5, 0, 1, 11, 0, 0, 1, 0, 0, 0, 1, 0, 1]' : 0.247567}", "{'[5, 3, 4, 3, 4, 5, 0, 1, 11, 0, 0, 1, 0, 0, 0, 1, 0, 1]' : 0.231722}", "{'[5, 3, 4, 3, 4, 5, 0, 1, 11, 0, 0, 1, 0, 0, 0, 1, 0, 1]' : 0.215294}", "{'[5, 3, 4, 3, 4, 5, 0, 1, 11, 0, 0, 1, 0, 0, 0, 1, 0, 1]' : 0.21345}", "{'[5, 3, 4, 3, 4, 5, 0, 1, 11, 0, 0, 1, 0, 0, 0, 1, 0, 1]' : 0.213612}", "{'[5, 3, 4, 3, 4, 5, 0, 1, 11, 0, 0, 1, 0, 0, 0, 1, 0, 1]' : 0.213382}", "{'[5, 3, 4, 3, 4, 5, 0, 1, 11, 0, 0, 1, 0, 0, 0, 1, 0, 1]' : 0.216514}", "{'[5, 3, 4, 3, 4, 5, 0, 1, 11, 0, 0, 1, 0, 0, 0, 1, 0, 1]' : 0.212734}", "{'[5, 3, 4, 3, 4, 5, 0, 1, 11, 0, 0, 1, 0, 0, 0, 1, 0, 1]' : 0.218167}", "{'[5, 3, 4, 3, 4, 5, 0, 1, 11, 0, 0, 1, 0, 0, 0, 1, 0, 1]' : 0.216184}", "{'[5, 3, 4, 3, 4, 5, 0, 1, 11, 0, 0, 1, 0, 0, 0, 1, 0, 1]' : 0.216072}", "{'[5, 3, 4, 3, 4, 5, 0, 1, 11, 0, 0, 1, 0, 0, 0, 1, 0, 1]' : 0.218827}", "{'[5, 3, 4, 3, 4, 5, 0, 1, 11, 0, 0, 1, 0, 0, 0, 1, 0, 1]' : 0.21391}", "{'[5, 3, 4, 3, 4, 5, 0, 1, 11, 0, 0, 1, 0, 0, 0, 1, 0, 1]' : 0.219424}", "{'[5, 3, 4, 3, 4, 5, 0, 1, 11, 0, 0, 1, 0, 0, 0, 1, 0, 1]' : 0.212846}", "{'[5, 3, 4, 3, 4, 5, 0, 1, 11, 0, 0, 1, 0, 0, 0, 1, 0, 1]' : 0.211656}", "{'[5, 3, 4, 3, 4, 5, 0, 1, 11, 0, 0, 1, 0, 0, 0, 1, 0, 1]' : 0.206314}", "{'[5, 3, 4, 3, 4, 5, 0, 1, 11, 0, 0, 1, 0, 0, 0, 1, 0, 1]' : 0.212336}", "{'[5, 3, 4, 3, 4, 5, 0, 1, 11, 0, 0, 1, 0, 0, 0, 1, 0, 1]' : 0.219392}", "{'[5, 3, 4, 3, 4, 5, 0, 1, 11, 0, 0, 1, 0, 0, 0, 1, 0, 1]' : 0.214598}", "{'[5, 3, 4, 3, 4, 5, 0, 1, 11, 0, 0, 1, 0, 0, 0, 1, 0, 1]' : 0.214645}", "{'[5, 3, 4, 3, 4, 5, 0, 1, 11, 0, 0, 1, 0, 0, 0, 1, 0, 1]' : 0.211313}", "{'[5, 3, 4, 3, 4, 5, 0, 1, 11, 0, 0, 1, 0, 0, 0, 1, 0, 1]' : 0.215447}", "{'[5, 3, 4, 3, 4, 5, 0, 1, 11, 0, 0, 1, 0, 0, 0, 1, 0, 1]' : 0.207968}", "{'[5, 3, 4, 3, 4, 5, 0, 1, 11, 0, 0, 1, 0, 0, 0, 1, 0, 1]' : 0.20944}", "{'[5, 3, 4, 3, 4, 5, 0, 1, 11, 0, 0, 1, 0, 0, 0, 1, 0, 1]' : 0.206213}", "{'[5, 3, 4, 3, 4, 5, 0, 1, 11, 0, 0, 1, 0, 0, 0, 1, 0, 1]' : 0.206466}", "{'[5, 3, 4, 3, 4, 5, 0, 1, 11, 0, 0, 1, 0, 0, 0, 1, 0, 1]' : 0.213904}", "{'[5, 3, 4, 3, 4, 5, 0, 1, 11, 0, 0, 1, 0, 0, 0, 1, 0, 1]' : 0.212989}", "{'[5, 3, 4, 3, 4, 5, 0, 1, 11, 0, 0, 1, 0, 0, 0, 1, 0, 1]' : 0.216658}"]
returning from 'run': {'[5, 3, 4, 3, 4, 5, 0, 1, 11, 0, 0, 1, 0, 0, 0, 1, 0, 1]': ([0.247567, 0.231722, 0.215294, 0.21345, 0.213612, 0.213382, 0.216514, 0.212734, 0.218167, 0.216184, 0.216072, 0.218827, 0.21391, 0.219424, 0.212846, 0.211656, 0.206314, 0.212336, 0.219392, 0.214598, 0.214645, 0.211313, 0.215447, 0.207968, 0.20944, 0.206213, 0.206466, 0.213904, 0.212989, 0.216658], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 3, 4, 3, 4, 5, 0, 1, 11, 0, 0, 1, 0, 0, 0, 1, 0, 1]': ([0.247567, 0.231722, 0.215294, 0.21345, 0.213612, 0.213382, 0.216514, 0.212734, 0.218167, 0.216184, 0.216072, 0.218827, 0.21391, 0.219424, 0.212846, 0.211656, 0.206314, 0.212336, 0.219392, 0.214598, 0.214645, 0.211313, 0.215447, 0.207968, 0.20944, 0.206213, 0.206466, 0.213904, 0.212989, 0.216658], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	171
        Max loop nest depth: 	6
        Additions: 		9398
        Multiplications: 	2418
        Divisions: 		0
        Logical: 		0
        Reads: 			18200
        Writes: 		3670
        Comparisons:		171
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest79.exe __orio_perftest79.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest79.exe  
Program Test Output: 
{'[1, 3, 3, 3, 5, 4, 1, 1, 1, 29, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.2259}
{'[1, 3, 3, 3, 5, 4, 1, 1, 1, 29, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.219807}
{'[1, 3, 3, 3, 5, 4, 1, 1, 1, 29, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.219866}
{'[1, 3, 3, 3, 5, 4, 1, 1, 1, 29, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.221981}
{'[1, 3, 3, 3, 5, 4, 1, 1, 1, 29, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.220104}
{'[1, 3, 3, 3, 5, 4, 1, 1, 1, 29, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.221701}
{'[1, 3, 3, 3, 5, 4, 1, 1, 1, 29, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.223966}
{'[1, 3, 3, 3, 5, 4, 1, 1, 1, 29, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.22048}
{'[1, 3, 3, 3, 5, 4, 1, 1, 1, 29, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.226679}
{'[1, 3, 3, 3, 5, 4, 1, 1, 1, 29, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.226637}
{'[1, 3, 3, 3, 5, 4, 1, 1, 1, 29, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.226647}
{'[1, 3, 3, 3, 5, 4, 1, 1, 1, 29, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.226658}
{'[1, 3, 3, 3, 5, 4, 1, 1, 1, 29, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.226709}
{'[1, 3, 3, 3, 5, 4, 1, 1, 1, 29, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.226694}
{'[1, 3, 3, 3, 5, 4, 1, 1, 1, 29, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.226693}
{'[1, 3, 3, 3, 5, 4, 1, 1, 1, 29, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.226877}
{'[1, 3, 3, 3, 5, 4, 1, 1, 1, 29, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.226632}
{'[1, 3, 3, 3, 5, 4, 1, 1, 1, 29, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.22137}
{'[1, 3, 3, 3, 5, 4, 1, 1, 1, 29, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.219466}
{'[1, 3, 3, 3, 5, 4, 1, 1, 1, 29, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.22609}
{'[1, 3, 3, 3, 5, 4, 1, 1, 1, 29, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.226686}
{'[1, 3, 3, 3, 5, 4, 1, 1, 1, 29, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.226721}
{'[1, 3, 3, 3, 5, 4, 1, 1, 1, 29, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.226654}
{'[1, 3, 3, 3, 5, 4, 1, 1, 1, 29, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.226707}
{'[1, 3, 3, 3, 5, 4, 1, 1, 1, 29, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.226801}
{'[1, 3, 3, 3, 5, 4, 1, 1, 1, 29, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.224344}
{'[1, 3, 3, 3, 5, 4, 1, 1, 1, 29, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.217295}
{'[1, 3, 3, 3, 5, 4, 1, 1, 1, 29, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.21292}
{'[1, 3, 3, 3, 5, 4, 1, 1, 1, 29, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.225186}
{'[1, 3, 3, 3, 5, 4, 1, 1, 1, 29, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.226696}

out:
 ["{'[1, 3, 3, 3, 5, 4, 1, 1, 1, 29, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.2259}", "{'[1, 3, 3, 3, 5, 4, 1, 1, 1, 29, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.219807}", "{'[1, 3, 3, 3, 5, 4, 1, 1, 1, 29, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.219866}", "{'[1, 3, 3, 3, 5, 4, 1, 1, 1, 29, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.221981}", "{'[1, 3, 3, 3, 5, 4, 1, 1, 1, 29, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.220104}", "{'[1, 3, 3, 3, 5, 4, 1, 1, 1, 29, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.221701}", "{'[1, 3, 3, 3, 5, 4, 1, 1, 1, 29, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.223966}", "{'[1, 3, 3, 3, 5, 4, 1, 1, 1, 29, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.22048}", "{'[1, 3, 3, 3, 5, 4, 1, 1, 1, 29, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.226679}", "{'[1, 3, 3, 3, 5, 4, 1, 1, 1, 29, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.226637}", "{'[1, 3, 3, 3, 5, 4, 1, 1, 1, 29, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.226647}", "{'[1, 3, 3, 3, 5, 4, 1, 1, 1, 29, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.226658}", "{'[1, 3, 3, 3, 5, 4, 1, 1, 1, 29, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.226709}", "{'[1, 3, 3, 3, 5, 4, 1, 1, 1, 29, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.226694}", "{'[1, 3, 3, 3, 5, 4, 1, 1, 1, 29, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.226693}", "{'[1, 3, 3, 3, 5, 4, 1, 1, 1, 29, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.226877}", "{'[1, 3, 3, 3, 5, 4, 1, 1, 1, 29, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.226632}", "{'[1, 3, 3, 3, 5, 4, 1, 1, 1, 29, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.22137}", "{'[1, 3, 3, 3, 5, 4, 1, 1, 1, 29, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.219466}", "{'[1, 3, 3, 3, 5, 4, 1, 1, 1, 29, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.22609}", "{'[1, 3, 3, 3, 5, 4, 1, 1, 1, 29, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.226686}", "{'[1, 3, 3, 3, 5, 4, 1, 1, 1, 29, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.226721}", "{'[1, 3, 3, 3, 5, 4, 1, 1, 1, 29, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.226654}", "{'[1, 3, 3, 3, 5, 4, 1, 1, 1, 29, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.226707}", "{'[1, 3, 3, 3, 5, 4, 1, 1, 1, 29, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.226801}", "{'[1, 3, 3, 3, 5, 4, 1, 1, 1, 29, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.224344}", "{'[1, 3, 3, 3, 5, 4, 1, 1, 1, 29, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.217295}", "{'[1, 3, 3, 3, 5, 4, 1, 1, 1, 29, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.21292}", "{'[1, 3, 3, 3, 5, 4, 1, 1, 1, 29, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.225186}", "{'[1, 3, 3, 3, 5, 4, 1, 1, 1, 29, 0, 29, 0, 1, 0, 1, 0, 0]' : 0.226696}"]
returning from 'run': {'[1, 3, 3, 3, 5, 4, 1, 1, 1, 29, 0, 29, 0, 1, 0, 1, 0, 0]': ([0.2259, 0.219807, 0.219866, 0.221981, 0.220104, 0.221701, 0.223966, 0.22048, 0.226679, 0.226637, 0.226647, 0.226658, 0.226709, 0.226694, 0.226693, 0.226877, 0.226632, 0.22137, 0.219466, 0.22609, 0.226686, 0.226721, 0.226654, 0.226707, 0.226801, 0.224344, 0.217295, 0.21292, 0.225186, 0.226696], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 3, 3, 3, 5, 4, 1, 1, 1, 29, 0, 29, 0, 1, 0, 1, 0, 0]': ([0.2259, 0.219807, 0.219866, 0.221981, 0.220104, 0.221701, 0.223966, 0.22048, 0.226679, 0.226637, 0.226647, 0.226658, 0.226709, 0.226694, 0.226693, 0.226877, 0.226632, 0.22137, 0.219466, 0.22609, 0.226686, 0.226721, 0.226654, 0.226707, 0.226801, 0.224344, 0.217295, 0.21292, 0.225186, 0.226696], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	65
        Max loop nest depth: 	5
        Additions: 		1919
        Multiplications: 	828
        Divisions: 		0
        Logical: 		0
        Reads: 			3904
        Writes: 		718
        Comparisons:		65
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest80.exe __orio_perftest80.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest80.exe  
Program Test Output: 
{'[0, 3, 3, 1, 5, 6, 0, 1, 25, 21, 15, 0, 0, 0, 0, 1, 1, 1]' : 0.179295}
{'[0, 3, 3, 1, 5, 6, 0, 1, 25, 21, 15, 0, 0, 0, 0, 1, 1, 1]' : 0.179163}
{'[0, 3, 3, 1, 5, 6, 0, 1, 25, 21, 15, 0, 0, 0, 0, 1, 1, 1]' : 0.183838}
{'[0, 3, 3, 1, 5, 6, 0, 1, 25, 21, 15, 0, 0, 0, 0, 1, 1, 1]' : 0.184793}
{'[0, 3, 3, 1, 5, 6, 0, 1, 25, 21, 15, 0, 0, 0, 0, 1, 1, 1]' : 0.184602}
{'[0, 3, 3, 1, 5, 6, 0, 1, 25, 21, 15, 0, 0, 0, 0, 1, 1, 1]' : 0.185141}
{'[0, 3, 3, 1, 5, 6, 0, 1, 25, 21, 15, 0, 0, 0, 0, 1, 1, 1]' : 0.185136}
{'[0, 3, 3, 1, 5, 6, 0, 1, 25, 21, 15, 0, 0, 0, 0, 1, 1, 1]' : 0.181732}
{'[0, 3, 3, 1, 5, 6, 0, 1, 25, 21, 15, 0, 0, 0, 0, 1, 1, 1]' : 0.184455}
{'[0, 3, 3, 1, 5, 6, 0, 1, 25, 21, 15, 0, 0, 0, 0, 1, 1, 1]' : 0.183957}
{'[0, 3, 3, 1, 5, 6, 0, 1, 25, 21, 15, 0, 0, 0, 0, 1, 1, 1]' : 0.183307}
{'[0, 3, 3, 1, 5, 6, 0, 1, 25, 21, 15, 0, 0, 0, 0, 1, 1, 1]' : 0.185318}
{'[0, 3, 3, 1, 5, 6, 0, 1, 25, 21, 15, 0, 0, 0, 0, 1, 1, 1]' : 0.184918}
{'[0, 3, 3, 1, 5, 6, 0, 1, 25, 21, 15, 0, 0, 0, 0, 1, 1, 1]' : 0.184612}
{'[0, 3, 3, 1, 5, 6, 0, 1, 25, 21, 15, 0, 0, 0, 0, 1, 1, 1]' : 0.184925}
{'[0, 3, 3, 1, 5, 6, 0, 1, 25, 21, 15, 0, 0, 0, 0, 1, 1, 1]' : 0.185024}
{'[0, 3, 3, 1, 5, 6, 0, 1, 25, 21, 15, 0, 0, 0, 0, 1, 1, 1]' : 0.182508}
{'[0, 3, 3, 1, 5, 6, 0, 1, 25, 21, 15, 0, 0, 0, 0, 1, 1, 1]' : 0.179165}
{'[0, 3, 3, 1, 5, 6, 0, 1, 25, 21, 15, 0, 0, 0, 0, 1, 1, 1]' : 0.182278}
{'[0, 3, 3, 1, 5, 6, 0, 1, 25, 21, 15, 0, 0, 0, 0, 1, 1, 1]' : 0.184603}
{'[0, 3, 3, 1, 5, 6, 0, 1, 25, 21, 15, 0, 0, 0, 0, 1, 1, 1]' : 0.184843}
{'[0, 3, 3, 1, 5, 6, 0, 1, 25, 21, 15, 0, 0, 0, 0, 1, 1, 1]' : 0.183279}
{'[0, 3, 3, 1, 5, 6, 0, 1, 25, 21, 15, 0, 0, 0, 0, 1, 1, 1]' : 0.178944}
{'[0, 3, 3, 1, 5, 6, 0, 1, 25, 21, 15, 0, 0, 0, 0, 1, 1, 1]' : 0.180162}
{'[0, 3, 3, 1, 5, 6, 0, 1, 25, 21, 15, 0, 0, 0, 0, 1, 1, 1]' : 0.184793}
{'[0, 3, 3, 1, 5, 6, 0, 1, 25, 21, 15, 0, 0, 0, 0, 1, 1, 1]' : 0.184891}
{'[0, 3, 3, 1, 5, 6, 0, 1, 25, 21, 15, 0, 0, 0, 0, 1, 1, 1]' : 0.184764}
{'[0, 3, 3, 1, 5, 6, 0, 1, 25, 21, 15, 0, 0, 0, 0, 1, 1, 1]' : 0.180216}
{'[0, 3, 3, 1, 5, 6, 0, 1, 25, 21, 15, 0, 0, 0, 0, 1, 1, 1]' : 0.179635}
{'[0, 3, 3, 1, 5, 6, 0, 1, 25, 21, 15, 0, 0, 0, 0, 1, 1, 1]' : 0.182809}

out:
 ["{'[0, 3, 3, 1, 5, 6, 0, 1, 25, 21, 15, 0, 0, 0, 0, 1, 1, 1]' : 0.179295}", "{'[0, 3, 3, 1, 5, 6, 0, 1, 25, 21, 15, 0, 0, 0, 0, 1, 1, 1]' : 0.179163}", "{'[0, 3, 3, 1, 5, 6, 0, 1, 25, 21, 15, 0, 0, 0, 0, 1, 1, 1]' : 0.183838}", "{'[0, 3, 3, 1, 5, 6, 0, 1, 25, 21, 15, 0, 0, 0, 0, 1, 1, 1]' : 0.184793}", "{'[0, 3, 3, 1, 5, 6, 0, 1, 25, 21, 15, 0, 0, 0, 0, 1, 1, 1]' : 0.184602}", "{'[0, 3, 3, 1, 5, 6, 0, 1, 25, 21, 15, 0, 0, 0, 0, 1, 1, 1]' : 0.185141}", "{'[0, 3, 3, 1, 5, 6, 0, 1, 25, 21, 15, 0, 0, 0, 0, 1, 1, 1]' : 0.185136}", "{'[0, 3, 3, 1, 5, 6, 0, 1, 25, 21, 15, 0, 0, 0, 0, 1, 1, 1]' : 0.181732}", "{'[0, 3, 3, 1, 5, 6, 0, 1, 25, 21, 15, 0, 0, 0, 0, 1, 1, 1]' : 0.184455}", "{'[0, 3, 3, 1, 5, 6, 0, 1, 25, 21, 15, 0, 0, 0, 0, 1, 1, 1]' : 0.183957}", "{'[0, 3, 3, 1, 5, 6, 0, 1, 25, 21, 15, 0, 0, 0, 0, 1, 1, 1]' : 0.183307}", "{'[0, 3, 3, 1, 5, 6, 0, 1, 25, 21, 15, 0, 0, 0, 0, 1, 1, 1]' : 0.185318}", "{'[0, 3, 3, 1, 5, 6, 0, 1, 25, 21, 15, 0, 0, 0, 0, 1, 1, 1]' : 0.184918}", "{'[0, 3, 3, 1, 5, 6, 0, 1, 25, 21, 15, 0, 0, 0, 0, 1, 1, 1]' : 0.184612}", "{'[0, 3, 3, 1, 5, 6, 0, 1, 25, 21, 15, 0, 0, 0, 0, 1, 1, 1]' : 0.184925}", "{'[0, 3, 3, 1, 5, 6, 0, 1, 25, 21, 15, 0, 0, 0, 0, 1, 1, 1]' : 0.185024}", "{'[0, 3, 3, 1, 5, 6, 0, 1, 25, 21, 15, 0, 0, 0, 0, 1, 1, 1]' : 0.182508}", "{'[0, 3, 3, 1, 5, 6, 0, 1, 25, 21, 15, 0, 0, 0, 0, 1, 1, 1]' : 0.179165}", "{'[0, 3, 3, 1, 5, 6, 0, 1, 25, 21, 15, 0, 0, 0, 0, 1, 1, 1]' : 0.182278}", "{'[0, 3, 3, 1, 5, 6, 0, 1, 25, 21, 15, 0, 0, 0, 0, 1, 1, 1]' : 0.184603}", "{'[0, 3, 3, 1, 5, 6, 0, 1, 25, 21, 15, 0, 0, 0, 0, 1, 1, 1]' : 0.184843}", "{'[0, 3, 3, 1, 5, 6, 0, 1, 25, 21, 15, 0, 0, 0, 0, 1, 1, 1]' : 0.183279}", "{'[0, 3, 3, 1, 5, 6, 0, 1, 25, 21, 15, 0, 0, 0, 0, 1, 1, 1]' : 0.178944}", "{'[0, 3, 3, 1, 5, 6, 0, 1, 25, 21, 15, 0, 0, 0, 0, 1, 1, 1]' : 0.180162}", "{'[0, 3, 3, 1, 5, 6, 0, 1, 25, 21, 15, 0, 0, 0, 0, 1, 1, 1]' : 0.184793}", "{'[0, 3, 3, 1, 5, 6, 0, 1, 25, 21, 15, 0, 0, 0, 0, 1, 1, 1]' : 0.184891}", "{'[0, 3, 3, 1, 5, 6, 0, 1, 25, 21, 15, 0, 0, 0, 0, 1, 1, 1]' : 0.184764}", "{'[0, 3, 3, 1, 5, 6, 0, 1, 25, 21, 15, 0, 0, 0, 0, 1, 1, 1]' : 0.180216}", "{'[0, 3, 3, 1, 5, 6, 0, 1, 25, 21, 15, 0, 0, 0, 0, 1, 1, 1]' : 0.179635}", "{'[0, 3, 3, 1, 5, 6, 0, 1, 25, 21, 15, 0, 0, 0, 0, 1, 1, 1]' : 0.182809}"]
returning from 'run': {'[0, 3, 3, 1, 5, 6, 0, 1, 25, 21, 15, 0, 0, 0, 0, 1, 1, 1]': ([0.179295, 0.179163, 0.183838, 0.184793, 0.184602, 0.185141, 0.185136, 0.181732, 0.184455, 0.183957, 0.183307, 0.185318, 0.184918, 0.184612, 0.184925, 0.185024, 0.182508, 0.179165, 0.182278, 0.184603, 0.184843, 0.183279, 0.178944, 0.180162, 0.184793, 0.184891, 0.184764, 0.180216, 0.179635, 0.182809], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 3, 3, 1, 5, 6, 0, 1, 25, 21, 15, 0, 0, 0, 0, 1, 1, 1]': ([0.179295, 0.179163, 0.183838, 0.184793, 0.184602, 0.185141, 0.185136, 0.181732, 0.184455, 0.183957, 0.183307, 0.185318, 0.184918, 0.184612, 0.184925, 0.185024, 0.182508, 0.179165, 0.182278, 0.184603, 0.184843, 0.183279, 0.178944, 0.180162, 0.184793, 0.184891, 0.184764, 0.180216, 0.179635, 0.182809], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	5
        Additions: 		1621
        Multiplications: 	774
        Divisions: 		0
        Logical: 		0
        Reads: 			3214
        Writes: 		552
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest81.exe __orio_perftest81.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest81.exe  
Program Test Output: 
{'[0, 3, 0, 3, 3, 0, 0, 1, 18, 0, 23, 8, 1, 1, 0, 1, 0, 1]' : 0.0877049}
{'[0, 3, 0, 3, 3, 0, 0, 1, 18, 0, 23, 8, 1, 1, 0, 1, 0, 1]' : 0.0876591}
{'[0, 3, 0, 3, 3, 0, 0, 1, 18, 0, 23, 8, 1, 1, 0, 1, 0, 1]' : 0.0875542}
{'[0, 3, 0, 3, 3, 0, 0, 1, 18, 0, 23, 8, 1, 1, 0, 1, 0, 1]' : 0.0875921}
{'[0, 3, 0, 3, 3, 0, 0, 1, 18, 0, 23, 8, 1, 1, 0, 1, 0, 1]' : 0.0875201}
{'[0, 3, 0, 3, 3, 0, 0, 1, 18, 0, 23, 8, 1, 1, 0, 1, 0, 1]' : 0.0876539}
{'[0, 3, 0, 3, 3, 0, 0, 1, 18, 0, 23, 8, 1, 1, 0, 1, 0, 1]' : 0.0875909}
{'[0, 3, 0, 3, 3, 0, 0, 1, 18, 0, 23, 8, 1, 1, 0, 1, 0, 1]' : 0.087574}
{'[0, 3, 0, 3, 3, 0, 0, 1, 18, 0, 23, 8, 1, 1, 0, 1, 0, 1]' : 0.0875978}
{'[0, 3, 0, 3, 3, 0, 0, 1, 18, 0, 23, 8, 1, 1, 0, 1, 0, 1]' : 0.0876441}
{'[0, 3, 0, 3, 3, 0, 0, 1, 18, 0, 23, 8, 1, 1, 0, 1, 0, 1]' : 0.0875008}
{'[0, 3, 0, 3, 3, 0, 0, 1, 18, 0, 23, 8, 1, 1, 0, 1, 0, 1]' : 0.088145}
{'[0, 3, 0, 3, 3, 0, 0, 1, 18, 0, 23, 8, 1, 1, 0, 1, 0, 1]' : 0.0876489}
{'[0, 3, 0, 3, 3, 0, 0, 1, 18, 0, 23, 8, 1, 1, 0, 1, 0, 1]' : 0.087604}
{'[0, 3, 0, 3, 3, 0, 0, 1, 18, 0, 23, 8, 1, 1, 0, 1, 0, 1]' : 0.08779}
{'[0, 3, 0, 3, 3, 0, 0, 1, 18, 0, 23, 8, 1, 1, 0, 1, 0, 1]' : 0.087683}
{'[0, 3, 0, 3, 3, 0, 0, 1, 18, 0, 23, 8, 1, 1, 0, 1, 0, 1]' : 0.0875361}
{'[0, 3, 0, 3, 3, 0, 0, 1, 18, 0, 23, 8, 1, 1, 0, 1, 0, 1]' : 0.087604}
{'[0, 3, 0, 3, 3, 0, 0, 1, 18, 0, 23, 8, 1, 1, 0, 1, 0, 1]' : 0.087631}
{'[0, 3, 0, 3, 3, 0, 0, 1, 18, 0, 23, 8, 1, 1, 0, 1, 0, 1]' : 0.0876801}
{'[0, 3, 0, 3, 3, 0, 0, 1, 18, 0, 23, 8, 1, 1, 0, 1, 0, 1]' : 0.0875862}
{'[0, 3, 0, 3, 3, 0, 0, 1, 18, 0, 23, 8, 1, 1, 0, 1, 0, 1]' : 0.0875881}
{'[0, 3, 0, 3, 3, 0, 0, 1, 18, 0, 23, 8, 1, 1, 0, 1, 0, 1]' : 0.087543}
{'[0, 3, 0, 3, 3, 0, 0, 1, 18, 0, 23, 8, 1, 1, 0, 1, 0, 1]' : 0.0875771}
{'[0, 3, 0, 3, 3, 0, 0, 1, 18, 0, 23, 8, 1, 1, 0, 1, 0, 1]' : 0.0876451}
{'[0, 3, 0, 3, 3, 0, 0, 1, 18, 0, 23, 8, 1, 1, 0, 1, 0, 1]' : 0.0875471}
{'[0, 3, 0, 3, 3, 0, 0, 1, 18, 0, 23, 8, 1, 1, 0, 1, 0, 1]' : 0.087985}
{'[0, 3, 0, 3, 3, 0, 0, 1, 18, 0, 23, 8, 1, 1, 0, 1, 0, 1]' : 0.087558}
{'[0, 3, 0, 3, 3, 0, 0, 1, 18, 0, 23, 8, 1, 1, 0, 1, 0, 1]' : 0.0879362}
{'[0, 3, 0, 3, 3, 0, 0, 1, 18, 0, 23, 8, 1, 1, 0, 1, 0, 1]' : 0.0876431}

out:
 ["{'[0, 3, 0, 3, 3, 0, 0, 1, 18, 0, 23, 8, 1, 1, 0, 1, 0, 1]' : 0.0877049}", "{'[0, 3, 0, 3, 3, 0, 0, 1, 18, 0, 23, 8, 1, 1, 0, 1, 0, 1]' : 0.0876591}", "{'[0, 3, 0, 3, 3, 0, 0, 1, 18, 0, 23, 8, 1, 1, 0, 1, 0, 1]' : 0.0875542}", "{'[0, 3, 0, 3, 3, 0, 0, 1, 18, 0, 23, 8, 1, 1, 0, 1, 0, 1]' : 0.0875921}", "{'[0, 3, 0, 3, 3, 0, 0, 1, 18, 0, 23, 8, 1, 1, 0, 1, 0, 1]' : 0.0875201}", "{'[0, 3, 0, 3, 3, 0, 0, 1, 18, 0, 23, 8, 1, 1, 0, 1, 0, 1]' : 0.0876539}", "{'[0, 3, 0, 3, 3, 0, 0, 1, 18, 0, 23, 8, 1, 1, 0, 1, 0, 1]' : 0.0875909}", "{'[0, 3, 0, 3, 3, 0, 0, 1, 18, 0, 23, 8, 1, 1, 0, 1, 0, 1]' : 0.087574}", "{'[0, 3, 0, 3, 3, 0, 0, 1, 18, 0, 23, 8, 1, 1, 0, 1, 0, 1]' : 0.0875978}", "{'[0, 3, 0, 3, 3, 0, 0, 1, 18, 0, 23, 8, 1, 1, 0, 1, 0, 1]' : 0.0876441}", "{'[0, 3, 0, 3, 3, 0, 0, 1, 18, 0, 23, 8, 1, 1, 0, 1, 0, 1]' : 0.0875008}", "{'[0, 3, 0, 3, 3, 0, 0, 1, 18, 0, 23, 8, 1, 1, 0, 1, 0, 1]' : 0.088145}", "{'[0, 3, 0, 3, 3, 0, 0, 1, 18, 0, 23, 8, 1, 1, 0, 1, 0, 1]' : 0.0876489}", "{'[0, 3, 0, 3, 3, 0, 0, 1, 18, 0, 23, 8, 1, 1, 0, 1, 0, 1]' : 0.087604}", "{'[0, 3, 0, 3, 3, 0, 0, 1, 18, 0, 23, 8, 1, 1, 0, 1, 0, 1]' : 0.08779}", "{'[0, 3, 0, 3, 3, 0, 0, 1, 18, 0, 23, 8, 1, 1, 0, 1, 0, 1]' : 0.087683}", "{'[0, 3, 0, 3, 3, 0, 0, 1, 18, 0, 23, 8, 1, 1, 0, 1, 0, 1]' : 0.0875361}", "{'[0, 3, 0, 3, 3, 0, 0, 1, 18, 0, 23, 8, 1, 1, 0, 1, 0, 1]' : 0.087604}", "{'[0, 3, 0, 3, 3, 0, 0, 1, 18, 0, 23, 8, 1, 1, 0, 1, 0, 1]' : 0.087631}", "{'[0, 3, 0, 3, 3, 0, 0, 1, 18, 0, 23, 8, 1, 1, 0, 1, 0, 1]' : 0.0876801}", "{'[0, 3, 0, 3, 3, 0, 0, 1, 18, 0, 23, 8, 1, 1, 0, 1, 0, 1]' : 0.0875862}", "{'[0, 3, 0, 3, 3, 0, 0, 1, 18, 0, 23, 8, 1, 1, 0, 1, 0, 1]' : 0.0875881}", "{'[0, 3, 0, 3, 3, 0, 0, 1, 18, 0, 23, 8, 1, 1, 0, 1, 0, 1]' : 0.087543}", "{'[0, 3, 0, 3, 3, 0, 0, 1, 18, 0, 23, 8, 1, 1, 0, 1, 0, 1]' : 0.0875771}", "{'[0, 3, 0, 3, 3, 0, 0, 1, 18, 0, 23, 8, 1, 1, 0, 1, 0, 1]' : 0.0876451}", "{'[0, 3, 0, 3, 3, 0, 0, 1, 18, 0, 23, 8, 1, 1, 0, 1, 0, 1]' : 0.0875471}", "{'[0, 3, 0, 3, 3, 0, 0, 1, 18, 0, 23, 8, 1, 1, 0, 1, 0, 1]' : 0.087985}", "{'[0, 3, 0, 3, 3, 0, 0, 1, 18, 0, 23, 8, 1, 1, 0, 1, 0, 1]' : 0.087558}", "{'[0, 3, 0, 3, 3, 0, 0, 1, 18, 0, 23, 8, 1, 1, 0, 1, 0, 1]' : 0.0879362}", "{'[0, 3, 0, 3, 3, 0, 0, 1, 18, 0, 23, 8, 1, 1, 0, 1, 0, 1]' : 0.0876431}"]
returning from 'run': {'[0, 3, 0, 3, 3, 0, 0, 1, 18, 0, 23, 8, 1, 1, 0, 1, 0, 1]': ([0.0877049, 0.0876591, 0.0875542, 0.0875921, 0.0875201, 0.0876539, 0.0875909, 0.087574, 0.0875978, 0.0876441, 0.0875008, 0.088145, 0.0876489, 0.087604, 0.08779, 0.087683, 0.0875361, 0.087604, 0.087631, 0.0876801, 0.0875862, 0.0875881, 0.087543, 0.0875771, 0.0876451, 0.0875471, 0.087985, 0.087558, 0.0879362, 0.0876431], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 3, 0, 3, 3, 0, 0, 1, 18, 0, 23, 8, 1, 1, 0, 1, 0, 1]': ([0.0877049, 0.0876591, 0.0875542, 0.0875921, 0.0875201, 0.0876539, 0.0875909, 0.087574, 0.0875978, 0.0876441, 0.0875008, 0.088145, 0.0876489, 0.087604, 0.08779, 0.087683, 0.0875361, 0.087604, 0.087631, 0.0876801, 0.0875862, 0.0875881, 0.087543, 0.0875771, 0.0876451, 0.0875471, 0.087985, 0.087558, 0.0879362, 0.0876431], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = iii
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		397
        Multiplications: 	138
        Divisions: 		0
        Logical: 		0
        Reads: 			998
        Writes: 		236
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest82.exe __orio_perftest82.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest82.exe  
Program Test Output: 
{'[5, 3, 0, 3, 6, 1, 1, 0, 6, 0, 6, 27, 0, 0, 2, 1, 0, 1]' : 0.195978}
{'[5, 3, 0, 3, 6, 1, 1, 0, 6, 0, 6, 27, 0, 0, 2, 1, 0, 1]' : 0.195261}
{'[5, 3, 0, 3, 6, 1, 1, 0, 6, 0, 6, 27, 0, 0, 2, 1, 0, 1]' : 0.177279}
{'[5, 3, 0, 3, 6, 1, 1, 0, 6, 0, 6, 27, 0, 0, 2, 1, 0, 1]' : 0.173299}
{'[5, 3, 0, 3, 6, 1, 1, 0, 6, 0, 6, 27, 0, 0, 2, 1, 0, 1]' : 0.173201}
{'[5, 3, 0, 3, 6, 1, 1, 0, 6, 0, 6, 27, 0, 0, 2, 1, 0, 1]' : 0.173579}
{'[5, 3, 0, 3, 6, 1, 1, 0, 6, 0, 6, 27, 0, 0, 2, 1, 0, 1]' : 0.171037}
{'[5, 3, 0, 3, 6, 1, 1, 0, 6, 0, 6, 27, 0, 0, 2, 1, 0, 1]' : 0.167701}
{'[5, 3, 0, 3, 6, 1, 1, 0, 6, 0, 6, 27, 0, 0, 2, 1, 0, 1]' : 0.16808}
{'[5, 3, 0, 3, 6, 1, 1, 0, 6, 0, 6, 27, 0, 0, 2, 1, 0, 1]' : 0.173248}
{'[5, 3, 0, 3, 6, 1, 1, 0, 6, 0, 6, 27, 0, 0, 2, 1, 0, 1]' : 0.173316}
{'[5, 3, 0, 3, 6, 1, 1, 0, 6, 0, 6, 27, 0, 0, 2, 1, 0, 1]' : 0.173859}
{'[5, 3, 0, 3, 6, 1, 1, 0, 6, 0, 6, 27, 0, 0, 2, 1, 0, 1]' : 0.170083}
{'[5, 3, 0, 3, 6, 1, 1, 0, 6, 0, 6, 27, 0, 0, 2, 1, 0, 1]' : 0.167652}
{'[5, 3, 0, 3, 6, 1, 1, 0, 6, 0, 6, 27, 0, 0, 2, 1, 0, 1]' : 0.168997}
{'[5, 3, 0, 3, 6, 1, 1, 0, 6, 0, 6, 27, 0, 0, 2, 1, 0, 1]' : 0.173267}
{'[5, 3, 0, 3, 6, 1, 1, 0, 6, 0, 6, 27, 0, 0, 2, 1, 0, 1]' : 0.173385}
{'[5, 3, 0, 3, 6, 1, 1, 0, 6, 0, 6, 27, 0, 0, 2, 1, 0, 1]' : 0.173575}
{'[5, 3, 0, 3, 6, 1, 1, 0, 6, 0, 6, 27, 0, 0, 2, 1, 0, 1]' : 0.173267}
{'[5, 3, 0, 3, 6, 1, 1, 0, 6, 0, 6, 27, 0, 0, 2, 1, 0, 1]' : 0.173275}
{'[5, 3, 0, 3, 6, 1, 1, 0, 6, 0, 6, 27, 0, 0, 2, 1, 0, 1]' : 0.170391}
{'[5, 3, 0, 3, 6, 1, 1, 0, 6, 0, 6, 27, 0, 0, 2, 1, 0, 1]' : 0.173165}
{'[5, 3, 0, 3, 6, 1, 1, 0, 6, 0, 6, 27, 0, 0, 2, 1, 0, 1]' : 0.173339}
{'[5, 3, 0, 3, 6, 1, 1, 0, 6, 0, 6, 27, 0, 0, 2, 1, 0, 1]' : 0.173803}
{'[5, 3, 0, 3, 6, 1, 1, 0, 6, 0, 6, 27, 0, 0, 2, 1, 0, 1]' : 0.173206}
{'[5, 3, 0, 3, 6, 1, 1, 0, 6, 0, 6, 27, 0, 0, 2, 1, 0, 1]' : 0.172158}
{'[5, 3, 0, 3, 6, 1, 1, 0, 6, 0, 6, 27, 0, 0, 2, 1, 0, 1]' : 0.171375}
{'[5, 3, 0, 3, 6, 1, 1, 0, 6, 0, 6, 27, 0, 0, 2, 1, 0, 1]' : 0.173227}
{'[5, 3, 0, 3, 6, 1, 1, 0, 6, 0, 6, 27, 0, 0, 2, 1, 0, 1]' : 0.173373}
{'[5, 3, 0, 3, 6, 1, 1, 0, 6, 0, 6, 27, 0, 0, 2, 1, 0, 1]' : 0.173406}

out:
 ["{'[5, 3, 0, 3, 6, 1, 1, 0, 6, 0, 6, 27, 0, 0, 2, 1, 0, 1]' : 0.195978}", "{'[5, 3, 0, 3, 6, 1, 1, 0, 6, 0, 6, 27, 0, 0, 2, 1, 0, 1]' : 0.195261}", "{'[5, 3, 0, 3, 6, 1, 1, 0, 6, 0, 6, 27, 0, 0, 2, 1, 0, 1]' : 0.177279}", "{'[5, 3, 0, 3, 6, 1, 1, 0, 6, 0, 6, 27, 0, 0, 2, 1, 0, 1]' : 0.173299}", "{'[5, 3, 0, 3, 6, 1, 1, 0, 6, 0, 6, 27, 0, 0, 2, 1, 0, 1]' : 0.173201}", "{'[5, 3, 0, 3, 6, 1, 1, 0, 6, 0, 6, 27, 0, 0, 2, 1, 0, 1]' : 0.173579}", "{'[5, 3, 0, 3, 6, 1, 1, 0, 6, 0, 6, 27, 0, 0, 2, 1, 0, 1]' : 0.171037}", "{'[5, 3, 0, 3, 6, 1, 1, 0, 6, 0, 6, 27, 0, 0, 2, 1, 0, 1]' : 0.167701}", "{'[5, 3, 0, 3, 6, 1, 1, 0, 6, 0, 6, 27, 0, 0, 2, 1, 0, 1]' : 0.16808}", "{'[5, 3, 0, 3, 6, 1, 1, 0, 6, 0, 6, 27, 0, 0, 2, 1, 0, 1]' : 0.173248}", "{'[5, 3, 0, 3, 6, 1, 1, 0, 6, 0, 6, 27, 0, 0, 2, 1, 0, 1]' : 0.173316}", "{'[5, 3, 0, 3, 6, 1, 1, 0, 6, 0, 6, 27, 0, 0, 2, 1, 0, 1]' : 0.173859}", "{'[5, 3, 0, 3, 6, 1, 1, 0, 6, 0, 6, 27, 0, 0, 2, 1, 0, 1]' : 0.170083}", "{'[5, 3, 0, 3, 6, 1, 1, 0, 6, 0, 6, 27, 0, 0, 2, 1, 0, 1]' : 0.167652}", "{'[5, 3, 0, 3, 6, 1, 1, 0, 6, 0, 6, 27, 0, 0, 2, 1, 0, 1]' : 0.168997}", "{'[5, 3, 0, 3, 6, 1, 1, 0, 6, 0, 6, 27, 0, 0, 2, 1, 0, 1]' : 0.173267}", "{'[5, 3, 0, 3, 6, 1, 1, 0, 6, 0, 6, 27, 0, 0, 2, 1, 0, 1]' : 0.173385}", "{'[5, 3, 0, 3, 6, 1, 1, 0, 6, 0, 6, 27, 0, 0, 2, 1, 0, 1]' : 0.173575}", "{'[5, 3, 0, 3, 6, 1, 1, 0, 6, 0, 6, 27, 0, 0, 2, 1, 0, 1]' : 0.173267}", "{'[5, 3, 0, 3, 6, 1, 1, 0, 6, 0, 6, 27, 0, 0, 2, 1, 0, 1]' : 0.173275}", "{'[5, 3, 0, 3, 6, 1, 1, 0, 6, 0, 6, 27, 0, 0, 2, 1, 0, 1]' : 0.170391}", "{'[5, 3, 0, 3, 6, 1, 1, 0, 6, 0, 6, 27, 0, 0, 2, 1, 0, 1]' : 0.173165}", "{'[5, 3, 0, 3, 6, 1, 1, 0, 6, 0, 6, 27, 0, 0, 2, 1, 0, 1]' : 0.173339}", "{'[5, 3, 0, 3, 6, 1, 1, 0, 6, 0, 6, 27, 0, 0, 2, 1, 0, 1]' : 0.173803}", "{'[5, 3, 0, 3, 6, 1, 1, 0, 6, 0, 6, 27, 0, 0, 2, 1, 0, 1]' : 0.173206}", "{'[5, 3, 0, 3, 6, 1, 1, 0, 6, 0, 6, 27, 0, 0, 2, 1, 0, 1]' : 0.172158}", "{'[5, 3, 0, 3, 6, 1, 1, 0, 6, 0, 6, 27, 0, 0, 2, 1, 0, 1]' : 0.171375}", "{'[5, 3, 0, 3, 6, 1, 1, 0, 6, 0, 6, 27, 0, 0, 2, 1, 0, 1]' : 0.173227}", "{'[5, 3, 0, 3, 6, 1, 1, 0, 6, 0, 6, 27, 0, 0, 2, 1, 0, 1]' : 0.173373}", "{'[5, 3, 0, 3, 6, 1, 1, 0, 6, 0, 6, 27, 0, 0, 2, 1, 0, 1]' : 0.173406}"]
returning from 'run': {'[5, 3, 0, 3, 6, 1, 1, 0, 6, 0, 6, 27, 0, 0, 2, 1, 0, 1]': ([0.195978, 0.195261, 0.177279, 0.173299, 0.173201, 0.173579, 0.171037, 0.167701, 0.16808, 0.173248, 0.173316, 0.173859, 0.170083, 0.167652, 0.168997, 0.173267, 0.173385, 0.173575, 0.173267, 0.173275, 0.170391, 0.173165, 0.173339, 0.173803, 0.173206, 0.172158, 0.171375, 0.173227, 0.173373, 0.173406], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 3, 0, 3, 6, 1, 1, 0, 6, 0, 6, 27, 0, 0, 2, 1, 0, 1]': ([0.195978, 0.195261, 0.177279, 0.173299, 0.173201, 0.173579, 0.171037, 0.167701, 0.16808, 0.173248, 0.173316, 0.173859, 0.170083, 0.167652, 0.168997, 0.173267, 0.173385, 0.173575, 0.173267, 0.173275, 0.170391, 0.173165, 0.173339, 0.173803, 0.173206, 0.172158, 0.171375, 0.173227, 0.173373, 0.173406], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	69
        Max loop nest depth: 	6
        Additions: 		5883
        Multiplications: 	2542
        Divisions: 		0
        Logical: 		0
        Reads: 			10524
        Writes: 		1580
        Comparisons:		69
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest83.exe __orio_perftest83.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest83.exe  
Program Test Output: 
{'[3, 3, 1, 4, 2, 0, 1, 1, 11, 7, 28, 0, 2, 0, 0, 1, 0, 0]' : 0.271879}
{'[3, 3, 1, 4, 2, 0, 1, 1, 11, 7, 28, 0, 2, 0, 0, 1, 0, 0]' : 0.250972}
{'[3, 3, 1, 4, 2, 0, 1, 1, 11, 7, 28, 0, 2, 0, 0, 1, 0, 0]' : 0.253358}
{'[3, 3, 1, 4, 2, 0, 1, 1, 11, 7, 28, 0, 2, 0, 0, 1, 0, 0]' : 0.249725}
{'[3, 3, 1, 4, 2, 0, 1, 1, 11, 7, 28, 0, 2, 0, 0, 1, 0, 0]' : 0.245596}
{'[3, 3, 1, 4, 2, 0, 1, 1, 11, 7, 28, 0, 2, 0, 0, 1, 0, 0]' : 0.250931}
{'[3, 3, 1, 4, 2, 0, 1, 1, 11, 7, 28, 0, 2, 0, 0, 1, 0, 0]' : 0.250254}
{'[3, 3, 1, 4, 2, 0, 1, 1, 11, 7, 28, 0, 2, 0, 0, 1, 0, 0]' : 0.25199}
{'[3, 3, 1, 4, 2, 0, 1, 1, 11, 7, 28, 0, 2, 0, 0, 1, 0, 0]' : 0.251894}
{'[3, 3, 1, 4, 2, 0, 1, 1, 11, 7, 28, 0, 2, 0, 0, 1, 0, 0]' : 0.250854}
{'[3, 3, 1, 4, 2, 0, 1, 1, 11, 7, 28, 0, 2, 0, 0, 1, 0, 0]' : 0.251346}
{'[3, 3, 1, 4, 2, 0, 1, 1, 11, 7, 28, 0, 2, 0, 0, 1, 0, 0]' : 0.251429}
{'[3, 3, 1, 4, 2, 0, 1, 1, 11, 7, 28, 0, 2, 0, 0, 1, 0, 0]' : 0.250183}
{'[3, 3, 1, 4, 2, 0, 1, 1, 11, 7, 28, 0, 2, 0, 0, 1, 0, 0]' : 0.253238}
{'[3, 3, 1, 4, 2, 0, 1, 1, 11, 7, 28, 0, 2, 0, 0, 1, 0, 0]' : 0.252738}
{'[3, 3, 1, 4, 2, 0, 1, 1, 11, 7, 28, 0, 2, 0, 0, 1, 0, 0]' : 0.252452}
{'[3, 3, 1, 4, 2, 0, 1, 1, 11, 7, 28, 0, 2, 0, 0, 1, 0, 0]' : 0.252872}
{'[3, 3, 1, 4, 2, 0, 1, 1, 11, 7, 28, 0, 2, 0, 0, 1, 0, 0]' : 0.251255}
{'[3, 3, 1, 4, 2, 0, 1, 1, 11, 7, 28, 0, 2, 0, 0, 1, 0, 0]' : 0.250762}
{'[3, 3, 1, 4, 2, 0, 1, 1, 11, 7, 28, 0, 2, 0, 0, 1, 0, 0]' : 0.248283}
{'[3, 3, 1, 4, 2, 0, 1, 1, 11, 7, 28, 0, 2, 0, 0, 1, 0, 0]' : 0.243196}
{'[3, 3, 1, 4, 2, 0, 1, 1, 11, 7, 28, 0, 2, 0, 0, 1, 0, 0]' : 0.250015}
{'[3, 3, 1, 4, 2, 0, 1, 1, 11, 7, 28, 0, 2, 0, 0, 1, 0, 0]' : 0.25256}
{'[3, 3, 1, 4, 2, 0, 1, 1, 11, 7, 28, 0, 2, 0, 0, 1, 0, 0]' : 0.251416}
{'[3, 3, 1, 4, 2, 0, 1, 1, 11, 7, 28, 0, 2, 0, 0, 1, 0, 0]' : 0.249821}
{'[3, 3, 1, 4, 2, 0, 1, 1, 11, 7, 28, 0, 2, 0, 0, 1, 0, 0]' : 0.250908}
{'[3, 3, 1, 4, 2, 0, 1, 1, 11, 7, 28, 0, 2, 0, 0, 1, 0, 0]' : 0.249209}
{'[3, 3, 1, 4, 2, 0, 1, 1, 11, 7, 28, 0, 2, 0, 0, 1, 0, 0]' : 0.252376}
{'[3, 3, 1, 4, 2, 0, 1, 1, 11, 7, 28, 0, 2, 0, 0, 1, 0, 0]' : 0.252229}
{'[3, 3, 1, 4, 2, 0, 1, 1, 11, 7, 28, 0, 2, 0, 0, 1, 0, 0]' : 0.251547}

out:
 ["{'[3, 3, 1, 4, 2, 0, 1, 1, 11, 7, 28, 0, 2, 0, 0, 1, 0, 0]' : 0.271879}", "{'[3, 3, 1, 4, 2, 0, 1, 1, 11, 7, 28, 0, 2, 0, 0, 1, 0, 0]' : 0.250972}", "{'[3, 3, 1, 4, 2, 0, 1, 1, 11, 7, 28, 0, 2, 0, 0, 1, 0, 0]' : 0.253358}", "{'[3, 3, 1, 4, 2, 0, 1, 1, 11, 7, 28, 0, 2, 0, 0, 1, 0, 0]' : 0.249725}", "{'[3, 3, 1, 4, 2, 0, 1, 1, 11, 7, 28, 0, 2, 0, 0, 1, 0, 0]' : 0.245596}", "{'[3, 3, 1, 4, 2, 0, 1, 1, 11, 7, 28, 0, 2, 0, 0, 1, 0, 0]' : 0.250931}", "{'[3, 3, 1, 4, 2, 0, 1, 1, 11, 7, 28, 0, 2, 0, 0, 1, 0, 0]' : 0.250254}", "{'[3, 3, 1, 4, 2, 0, 1, 1, 11, 7, 28, 0, 2, 0, 0, 1, 0, 0]' : 0.25199}", "{'[3, 3, 1, 4, 2, 0, 1, 1, 11, 7, 28, 0, 2, 0, 0, 1, 0, 0]' : 0.251894}", "{'[3, 3, 1, 4, 2, 0, 1, 1, 11, 7, 28, 0, 2, 0, 0, 1, 0, 0]' : 0.250854}", "{'[3, 3, 1, 4, 2, 0, 1, 1, 11, 7, 28, 0, 2, 0, 0, 1, 0, 0]' : 0.251346}", "{'[3, 3, 1, 4, 2, 0, 1, 1, 11, 7, 28, 0, 2, 0, 0, 1, 0, 0]' : 0.251429}", "{'[3, 3, 1, 4, 2, 0, 1, 1, 11, 7, 28, 0, 2, 0, 0, 1, 0, 0]' : 0.250183}", "{'[3, 3, 1, 4, 2, 0, 1, 1, 11, 7, 28, 0, 2, 0, 0, 1, 0, 0]' : 0.253238}", "{'[3, 3, 1, 4, 2, 0, 1, 1, 11, 7, 28, 0, 2, 0, 0, 1, 0, 0]' : 0.252738}", "{'[3, 3, 1, 4, 2, 0, 1, 1, 11, 7, 28, 0, 2, 0, 0, 1, 0, 0]' : 0.252452}", "{'[3, 3, 1, 4, 2, 0, 1, 1, 11, 7, 28, 0, 2, 0, 0, 1, 0, 0]' : 0.252872}", "{'[3, 3, 1, 4, 2, 0, 1, 1, 11, 7, 28, 0, 2, 0, 0, 1, 0, 0]' : 0.251255}", "{'[3, 3, 1, 4, 2, 0, 1, 1, 11, 7, 28, 0, 2, 0, 0, 1, 0, 0]' : 0.250762}", "{'[3, 3, 1, 4, 2, 0, 1, 1, 11, 7, 28, 0, 2, 0, 0, 1, 0, 0]' : 0.248283}", "{'[3, 3, 1, 4, 2, 0, 1, 1, 11, 7, 28, 0, 2, 0, 0, 1, 0, 0]' : 0.243196}", "{'[3, 3, 1, 4, 2, 0, 1, 1, 11, 7, 28, 0, 2, 0, 0, 1, 0, 0]' : 0.250015}", "{'[3, 3, 1, 4, 2, 0, 1, 1, 11, 7, 28, 0, 2, 0, 0, 1, 0, 0]' : 0.25256}", "{'[3, 3, 1, 4, 2, 0, 1, 1, 11, 7, 28, 0, 2, 0, 0, 1, 0, 0]' : 0.251416}", "{'[3, 3, 1, 4, 2, 0, 1, 1, 11, 7, 28, 0, 2, 0, 0, 1, 0, 0]' : 0.249821}", "{'[3, 3, 1, 4, 2, 0, 1, 1, 11, 7, 28, 0, 2, 0, 0, 1, 0, 0]' : 0.250908}", "{'[3, 3, 1, 4, 2, 0, 1, 1, 11, 7, 28, 0, 2, 0, 0, 1, 0, 0]' : 0.249209}", "{'[3, 3, 1, 4, 2, 0, 1, 1, 11, 7, 28, 0, 2, 0, 0, 1, 0, 0]' : 0.252376}", "{'[3, 3, 1, 4, 2, 0, 1, 1, 11, 7, 28, 0, 2, 0, 0, 1, 0, 0]' : 0.252229}", "{'[3, 3, 1, 4, 2, 0, 1, 1, 11, 7, 28, 0, 2, 0, 0, 1, 0, 0]' : 0.251547}"]
returning from 'run': {'[3, 3, 1, 4, 2, 0, 1, 1, 11, 7, 28, 0, 2, 0, 0, 1, 0, 0]': ([0.271879, 0.250972, 0.253358, 0.249725, 0.245596, 0.250931, 0.250254, 0.25199, 0.251894, 0.250854, 0.251346, 0.251429, 0.250183, 0.253238, 0.252738, 0.252452, 0.252872, 0.251255, 0.250762, 0.248283, 0.243196, 0.250015, 0.25256, 0.251416, 0.249821, 0.250908, 0.249209, 0.252376, 0.252229, 0.251547], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 3, 1, 4, 2, 0, 1, 1, 11, 7, 28, 0, 2, 0, 0, 1, 0, 0]': ([0.271879, 0.250972, 0.253358, 0.249725, 0.245596, 0.250931, 0.250254, 0.25199, 0.251894, 0.250854, 0.251346, 0.251429, 0.250183, 0.253238, 0.252738, 0.252452, 0.252872, 0.251255, 0.250762, 0.248283, 0.243196, 0.250015, 0.25256, 0.251416, 0.249821, 0.250908, 0.249209, 0.252376, 0.252229, 0.251547], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	5
        Additions: 		206
        Multiplications: 	66
        Divisions: 		0
        Logical: 		0
        Reads: 			411
        Writes: 		77
        Comparisons:		10
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest84.exe __orio_perftest84.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest84.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest84.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest84.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest84.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	40
        Max loop nest depth: 	5
        Additions: 		1187
        Multiplications: 	400
        Divisions: 		0
        Logical: 		0
        Reads: 			2386
        Writes: 		458
        Comparisons:		40
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest85.exe __orio_perftest85.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest85.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest85.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest85.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest85.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	125
        Max loop nest depth: 	5
        Additions: 		5322
        Multiplications: 	1980
        Divisions: 		0
        Logical: 		0
        Reads: 			9651
        Writes: 		1599
        Comparisons:		125
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest86.exe __orio_perftest86.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest86.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest86.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest86.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest86.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		301
        Multiplications: 	78
        Divisions: 		0
        Logical: 		0
        Reads: 			660
        Writes: 		140
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest87.exe __orio_perftest87.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest87.exe  
Program Test Output: 
{'[6, 3, 4, 6, 0, 0, 1, 1, 1, 0, 5, 29, 0, 1, 0, 1, 0, 1]' : 0.242334}
{'[6, 3, 4, 6, 0, 0, 1, 1, 1, 0, 5, 29, 0, 1, 0, 1, 0, 1]' : 0.220575}
{'[6, 3, 4, 6, 0, 0, 1, 1, 1, 0, 5, 29, 0, 1, 0, 1, 0, 1]' : 0.211023}
{'[6, 3, 4, 6, 0, 0, 1, 1, 1, 0, 5, 29, 0, 1, 0, 1, 0, 1]' : 0.214506}
{'[6, 3, 4, 6, 0, 0, 1, 1, 1, 0, 5, 29, 0, 1, 0, 1, 0, 1]' : 0.214483}
{'[6, 3, 4, 6, 0, 0, 1, 1, 1, 0, 5, 29, 0, 1, 0, 1, 0, 1]' : 0.214552}
{'[6, 3, 4, 6, 0, 0, 1, 1, 1, 0, 5, 29, 0, 1, 0, 1, 0, 1]' : 0.214537}
{'[6, 3, 4, 6, 0, 0, 1, 1, 1, 0, 5, 29, 0, 1, 0, 1, 0, 1]' : 0.214552}
{'[6, 3, 4, 6, 0, 0, 1, 1, 1, 0, 5, 29, 0, 1, 0, 1, 0, 1]' : 0.214586}
{'[6, 3, 4, 6, 0, 0, 1, 1, 1, 0, 5, 29, 0, 1, 0, 1, 0, 1]' : 0.214507}
{'[6, 3, 4, 6, 0, 0, 1, 1, 1, 0, 5, 29, 0, 1, 0, 1, 0, 1]' : 0.214557}
{'[6, 3, 4, 6, 0, 0, 1, 1, 1, 0, 5, 29, 0, 1, 0, 1, 0, 1]' : 0.214803}
{'[6, 3, 4, 6, 0, 0, 1, 1, 1, 0, 5, 29, 0, 1, 0, 1, 0, 1]' : 0.214502}
{'[6, 3, 4, 6, 0, 0, 1, 1, 1, 0, 5, 29, 0, 1, 0, 1, 0, 1]' : 0.214449}
{'[6, 3, 4, 6, 0, 0, 1, 1, 1, 0, 5, 29, 0, 1, 0, 1, 0, 1]' : 0.209379}
{'[6, 3, 4, 6, 0, 0, 1, 1, 1, 0, 5, 29, 0, 1, 0, 1, 0, 1]' : 0.208095}
{'[6, 3, 4, 6, 0, 0, 1, 1, 1, 0, 5, 29, 0, 1, 0, 1, 0, 1]' : 0.207195}
{'[6, 3, 4, 6, 0, 0, 1, 1, 1, 0, 5, 29, 0, 1, 0, 1, 0, 1]' : 0.214481}
{'[6, 3, 4, 6, 0, 0, 1, 1, 1, 0, 5, 29, 0, 1, 0, 1, 0, 1]' : 0.20936}
{'[6, 3, 4, 6, 0, 0, 1, 1, 1, 0, 5, 29, 0, 1, 0, 1, 0, 1]' : 0.207945}
{'[6, 3, 4, 6, 0, 0, 1, 1, 1, 0, 5, 29, 0, 1, 0, 1, 0, 1]' : 0.210858}
{'[6, 3, 4, 6, 0, 0, 1, 1, 1, 0, 5, 29, 0, 1, 0, 1, 0, 1]' : 0.214517}
{'[6, 3, 4, 6, 0, 0, 1, 1, 1, 0, 5, 29, 0, 1, 0, 1, 0, 1]' : 0.214598}
{'[6, 3, 4, 6, 0, 0, 1, 1, 1, 0, 5, 29, 0, 1, 0, 1, 0, 1]' : 0.214406}
{'[6, 3, 4, 6, 0, 0, 1, 1, 1, 0, 5, 29, 0, 1, 0, 1, 0, 1]' : 0.214436}
{'[6, 3, 4, 6, 0, 0, 1, 1, 1, 0, 5, 29, 0, 1, 0, 1, 0, 1]' : 0.214699}
{'[6, 3, 4, 6, 0, 0, 1, 1, 1, 0, 5, 29, 0, 1, 0, 1, 0, 1]' : 0.214472}
{'[6, 3, 4, 6, 0, 0, 1, 1, 1, 0, 5, 29, 0, 1, 0, 1, 0, 1]' : 0.214463}
{'[6, 3, 4, 6, 0, 0, 1, 1, 1, 0, 5, 29, 0, 1, 0, 1, 0, 1]' : 0.214552}
{'[6, 3, 4, 6, 0, 0, 1, 1, 1, 0, 5, 29, 0, 1, 0, 1, 0, 1]' : 0.214648}

out:
 ["{'[6, 3, 4, 6, 0, 0, 1, 1, 1, 0, 5, 29, 0, 1, 0, 1, 0, 1]' : 0.242334}", "{'[6, 3, 4, 6, 0, 0, 1, 1, 1, 0, 5, 29, 0, 1, 0, 1, 0, 1]' : 0.220575}", "{'[6, 3, 4, 6, 0, 0, 1, 1, 1, 0, 5, 29, 0, 1, 0, 1, 0, 1]' : 0.211023}", "{'[6, 3, 4, 6, 0, 0, 1, 1, 1, 0, 5, 29, 0, 1, 0, 1, 0, 1]' : 0.214506}", "{'[6, 3, 4, 6, 0, 0, 1, 1, 1, 0, 5, 29, 0, 1, 0, 1, 0, 1]' : 0.214483}", "{'[6, 3, 4, 6, 0, 0, 1, 1, 1, 0, 5, 29, 0, 1, 0, 1, 0, 1]' : 0.214552}", "{'[6, 3, 4, 6, 0, 0, 1, 1, 1, 0, 5, 29, 0, 1, 0, 1, 0, 1]' : 0.214537}", "{'[6, 3, 4, 6, 0, 0, 1, 1, 1, 0, 5, 29, 0, 1, 0, 1, 0, 1]' : 0.214552}", "{'[6, 3, 4, 6, 0, 0, 1, 1, 1, 0, 5, 29, 0, 1, 0, 1, 0, 1]' : 0.214586}", "{'[6, 3, 4, 6, 0, 0, 1, 1, 1, 0, 5, 29, 0, 1, 0, 1, 0, 1]' : 0.214507}", "{'[6, 3, 4, 6, 0, 0, 1, 1, 1, 0, 5, 29, 0, 1, 0, 1, 0, 1]' : 0.214557}", "{'[6, 3, 4, 6, 0, 0, 1, 1, 1, 0, 5, 29, 0, 1, 0, 1, 0, 1]' : 0.214803}", "{'[6, 3, 4, 6, 0, 0, 1, 1, 1, 0, 5, 29, 0, 1, 0, 1, 0, 1]' : 0.214502}", "{'[6, 3, 4, 6, 0, 0, 1, 1, 1, 0, 5, 29, 0, 1, 0, 1, 0, 1]' : 0.214449}", "{'[6, 3, 4, 6, 0, 0, 1, 1, 1, 0, 5, 29, 0, 1, 0, 1, 0, 1]' : 0.209379}", "{'[6, 3, 4, 6, 0, 0, 1, 1, 1, 0, 5, 29, 0, 1, 0, 1, 0, 1]' : 0.208095}", "{'[6, 3, 4, 6, 0, 0, 1, 1, 1, 0, 5, 29, 0, 1, 0, 1, 0, 1]' : 0.207195}", "{'[6, 3, 4, 6, 0, 0, 1, 1, 1, 0, 5, 29, 0, 1, 0, 1, 0, 1]' : 0.214481}", "{'[6, 3, 4, 6, 0, 0, 1, 1, 1, 0, 5, 29, 0, 1, 0, 1, 0, 1]' : 0.20936}", "{'[6, 3, 4, 6, 0, 0, 1, 1, 1, 0, 5, 29, 0, 1, 0, 1, 0, 1]' : 0.207945}", "{'[6, 3, 4, 6, 0, 0, 1, 1, 1, 0, 5, 29, 0, 1, 0, 1, 0, 1]' : 0.210858}", "{'[6, 3, 4, 6, 0, 0, 1, 1, 1, 0, 5, 29, 0, 1, 0, 1, 0, 1]' : 0.214517}", "{'[6, 3, 4, 6, 0, 0, 1, 1, 1, 0, 5, 29, 0, 1, 0, 1, 0, 1]' : 0.214598}", "{'[6, 3, 4, 6, 0, 0, 1, 1, 1, 0, 5, 29, 0, 1, 0, 1, 0, 1]' : 0.214406}", "{'[6, 3, 4, 6, 0, 0, 1, 1, 1, 0, 5, 29, 0, 1, 0, 1, 0, 1]' : 0.214436}", "{'[6, 3, 4, 6, 0, 0, 1, 1, 1, 0, 5, 29, 0, 1, 0, 1, 0, 1]' : 0.214699}", "{'[6, 3, 4, 6, 0, 0, 1, 1, 1, 0, 5, 29, 0, 1, 0, 1, 0, 1]' : 0.214472}", "{'[6, 3, 4, 6, 0, 0, 1, 1, 1, 0, 5, 29, 0, 1, 0, 1, 0, 1]' : 0.214463}", "{'[6, 3, 4, 6, 0, 0, 1, 1, 1, 0, 5, 29, 0, 1, 0, 1, 0, 1]' : 0.214552}", "{'[6, 3, 4, 6, 0, 0, 1, 1, 1, 0, 5, 29, 0, 1, 0, 1, 0, 1]' : 0.214648}"]
returning from 'run': {'[6, 3, 4, 6, 0, 0, 1, 1, 1, 0, 5, 29, 0, 1, 0, 1, 0, 1]': ([0.242334, 0.220575, 0.211023, 0.214506, 0.214483, 0.214552, 0.214537, 0.214552, 0.214586, 0.214507, 0.214557, 0.214803, 0.214502, 0.214449, 0.209379, 0.208095, 0.207195, 0.214481, 0.20936, 0.207945, 0.210858, 0.214517, 0.214598, 0.214406, 0.214436, 0.214699, 0.214472, 0.214463, 0.214552, 0.214648], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 3, 4, 6, 0, 0, 1, 1, 1, 0, 5, 29, 0, 1, 0, 1, 0, 1]': ([0.242334, 0.220575, 0.211023, 0.214506, 0.214483, 0.214552, 0.214537, 0.214552, 0.214586, 0.214507, 0.214557, 0.214803, 0.214502, 0.214449, 0.209379, 0.208095, 0.207195, 0.214481, 0.20936, 0.207945, 0.210858, 0.214517, 0.214598, 0.214406, 0.214436, 0.214699, 0.214472, 0.214463, 0.214552, 0.214648], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	25
        Max loop nest depth: 	5
        Additions: 		579
        Multiplications: 	238
        Divisions: 		0
        Logical: 		0
        Reads: 			1256
        Writes: 		249
        Comparisons:		25
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest88.exe __orio_perftest88.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest88.exe  
Program Test Output: 
{'[0, 3, 3, 1, 2, 2, 1, 0, 0, 5, 17, 0, 0, 1, 1, 1, 1, 1]' : 0.133287}
{'[0, 3, 3, 1, 2, 2, 1, 0, 0, 5, 17, 0, 0, 1, 1, 1, 1, 1]' : 0.133271}
{'[0, 3, 3, 1, 2, 2, 1, 0, 0, 5, 17, 0, 0, 1, 1, 1, 1, 1]' : 0.123252}
{'[0, 3, 3, 1, 2, 2, 1, 0, 0, 5, 17, 0, 0, 1, 1, 1, 1, 1]' : 0.119194}
{'[0, 3, 3, 1, 2, 2, 1, 0, 0, 5, 17, 0, 0, 1, 1, 1, 1, 1]' : 0.119118}
{'[0, 3, 3, 1, 2, 2, 1, 0, 0, 5, 17, 0, 0, 1, 1, 1, 1, 1]' : 0.119151}
{'[0, 3, 3, 1, 2, 2, 1, 0, 0, 5, 17, 0, 0, 1, 1, 1, 1, 1]' : 0.119065}
{'[0, 3, 3, 1, 2, 2, 1, 0, 0, 5, 17, 0, 0, 1, 1, 1, 1, 1]' : 0.119313}
{'[0, 3, 3, 1, 2, 2, 1, 0, 0, 5, 17, 0, 0, 1, 1, 1, 1, 1]' : 0.119111}
{'[0, 3, 3, 1, 2, 2, 1, 0, 0, 5, 17, 0, 0, 1, 1, 1, 1, 1]' : 0.119305}
{'[0, 3, 3, 1, 2, 2, 1, 0, 0, 5, 17, 0, 0, 1, 1, 1, 1, 1]' : 0.119233}
{'[0, 3, 3, 1, 2, 2, 1, 0, 0, 5, 17, 0, 0, 1, 1, 1, 1, 1]' : 0.119264}
{'[0, 3, 3, 1, 2, 2, 1, 0, 0, 5, 17, 0, 0, 1, 1, 1, 1, 1]' : 0.119154}
{'[0, 3, 3, 1, 2, 2, 1, 0, 0, 5, 17, 0, 0, 1, 1, 1, 1, 1]' : 0.119215}
{'[0, 3, 3, 1, 2, 2, 1, 0, 0, 5, 17, 0, 0, 1, 1, 1, 1, 1]' : 0.119131}
{'[0, 3, 3, 1, 2, 2, 1, 0, 0, 5, 17, 0, 0, 1, 1, 1, 1, 1]' : 0.119175}
{'[0, 3, 3, 1, 2, 2, 1, 0, 0, 5, 17, 0, 0, 1, 1, 1, 1, 1]' : 0.119181}
{'[0, 3, 3, 1, 2, 2, 1, 0, 0, 5, 17, 0, 0, 1, 1, 1, 1, 1]' : 0.119312}
{'[0, 3, 3, 1, 2, 2, 1, 0, 0, 5, 17, 0, 0, 1, 1, 1, 1, 1]' : 0.119169}
{'[0, 3, 3, 1, 2, 2, 1, 0, 0, 5, 17, 0, 0, 1, 1, 1, 1, 1]' : 0.119138}
{'[0, 3, 3, 1, 2, 2, 1, 0, 0, 5, 17, 0, 0, 1, 1, 1, 1, 1]' : 0.1192}
{'[0, 3, 3, 1, 2, 2, 1, 0, 0, 5, 17, 0, 0, 1, 1, 1, 1, 1]' : 0.119152}
{'[0, 3, 3, 1, 2, 2, 1, 0, 0, 5, 17, 0, 0, 1, 1, 1, 1, 1]' : 0.119195}
{'[0, 3, 3, 1, 2, 2, 1, 0, 0, 5, 17, 0, 0, 1, 1, 1, 1, 1]' : 0.119087}
{'[0, 3, 3, 1, 2, 2, 1, 0, 0, 5, 17, 0, 0, 1, 1, 1, 1, 1]' : 0.119358}
{'[0, 3, 3, 1, 2, 2, 1, 0, 0, 5, 17, 0, 0, 1, 1, 1, 1, 1]' : 0.119352}
{'[0, 3, 3, 1, 2, 2, 1, 0, 0, 5, 17, 0, 0, 1, 1, 1, 1, 1]' : 0.119235}
{'[0, 3, 3, 1, 2, 2, 1, 0, 0, 5, 17, 0, 0, 1, 1, 1, 1, 1]' : 0.119198}
{'[0, 3, 3, 1, 2, 2, 1, 0, 0, 5, 17, 0, 0, 1, 1, 1, 1, 1]' : 0.119168}
{'[0, 3, 3, 1, 2, 2, 1, 0, 0, 5, 17, 0, 0, 1, 1, 1, 1, 1]' : 0.118685}

out:
 ["{'[0, 3, 3, 1, 2, 2, 1, 0, 0, 5, 17, 0, 0, 1, 1, 1, 1, 1]' : 0.133287}", "{'[0, 3, 3, 1, 2, 2, 1, 0, 0, 5, 17, 0, 0, 1, 1, 1, 1, 1]' : 0.133271}", "{'[0, 3, 3, 1, 2, 2, 1, 0, 0, 5, 17, 0, 0, 1, 1, 1, 1, 1]' : 0.123252}", "{'[0, 3, 3, 1, 2, 2, 1, 0, 0, 5, 17, 0, 0, 1, 1, 1, 1, 1]' : 0.119194}", "{'[0, 3, 3, 1, 2, 2, 1, 0, 0, 5, 17, 0, 0, 1, 1, 1, 1, 1]' : 0.119118}", "{'[0, 3, 3, 1, 2, 2, 1, 0, 0, 5, 17, 0, 0, 1, 1, 1, 1, 1]' : 0.119151}", "{'[0, 3, 3, 1, 2, 2, 1, 0, 0, 5, 17, 0, 0, 1, 1, 1, 1, 1]' : 0.119065}", "{'[0, 3, 3, 1, 2, 2, 1, 0, 0, 5, 17, 0, 0, 1, 1, 1, 1, 1]' : 0.119313}", "{'[0, 3, 3, 1, 2, 2, 1, 0, 0, 5, 17, 0, 0, 1, 1, 1, 1, 1]' : 0.119111}", "{'[0, 3, 3, 1, 2, 2, 1, 0, 0, 5, 17, 0, 0, 1, 1, 1, 1, 1]' : 0.119305}", "{'[0, 3, 3, 1, 2, 2, 1, 0, 0, 5, 17, 0, 0, 1, 1, 1, 1, 1]' : 0.119233}", "{'[0, 3, 3, 1, 2, 2, 1, 0, 0, 5, 17, 0, 0, 1, 1, 1, 1, 1]' : 0.119264}", "{'[0, 3, 3, 1, 2, 2, 1, 0, 0, 5, 17, 0, 0, 1, 1, 1, 1, 1]' : 0.119154}", "{'[0, 3, 3, 1, 2, 2, 1, 0, 0, 5, 17, 0, 0, 1, 1, 1, 1, 1]' : 0.119215}", "{'[0, 3, 3, 1, 2, 2, 1, 0, 0, 5, 17, 0, 0, 1, 1, 1, 1, 1]' : 0.119131}", "{'[0, 3, 3, 1, 2, 2, 1, 0, 0, 5, 17, 0, 0, 1, 1, 1, 1, 1]' : 0.119175}", "{'[0, 3, 3, 1, 2, 2, 1, 0, 0, 5, 17, 0, 0, 1, 1, 1, 1, 1]' : 0.119181}", "{'[0, 3, 3, 1, 2, 2, 1, 0, 0, 5, 17, 0, 0, 1, 1, 1, 1, 1]' : 0.119312}", "{'[0, 3, 3, 1, 2, 2, 1, 0, 0, 5, 17, 0, 0, 1, 1, 1, 1, 1]' : 0.119169}", "{'[0, 3, 3, 1, 2, 2, 1, 0, 0, 5, 17, 0, 0, 1, 1, 1, 1, 1]' : 0.119138}", "{'[0, 3, 3, 1, 2, 2, 1, 0, 0, 5, 17, 0, 0, 1, 1, 1, 1, 1]' : 0.1192}", "{'[0, 3, 3, 1, 2, 2, 1, 0, 0, 5, 17, 0, 0, 1, 1, 1, 1, 1]' : 0.119152}", "{'[0, 3, 3, 1, 2, 2, 1, 0, 0, 5, 17, 0, 0, 1, 1, 1, 1, 1]' : 0.119195}", "{'[0, 3, 3, 1, 2, 2, 1, 0, 0, 5, 17, 0, 0, 1, 1, 1, 1, 1]' : 0.119087}", "{'[0, 3, 3, 1, 2, 2, 1, 0, 0, 5, 17, 0, 0, 1, 1, 1, 1, 1]' : 0.119358}", "{'[0, 3, 3, 1, 2, 2, 1, 0, 0, 5, 17, 0, 0, 1, 1, 1, 1, 1]' : 0.119352}", "{'[0, 3, 3, 1, 2, 2, 1, 0, 0, 5, 17, 0, 0, 1, 1, 1, 1, 1]' : 0.119235}", "{'[0, 3, 3, 1, 2, 2, 1, 0, 0, 5, 17, 0, 0, 1, 1, 1, 1, 1]' : 0.119198}", "{'[0, 3, 3, 1, 2, 2, 1, 0, 0, 5, 17, 0, 0, 1, 1, 1, 1, 1]' : 0.119168}", "{'[0, 3, 3, 1, 2, 2, 1, 0, 0, 5, 17, 0, 0, 1, 1, 1, 1, 1]' : 0.118685}"]
returning from 'run': {'[0, 3, 3, 1, 2, 2, 1, 0, 0, 5, 17, 0, 0, 1, 1, 1, 1, 1]': ([0.133287, 0.133271, 0.123252, 0.119194, 0.119118, 0.119151, 0.119065, 0.119313, 0.119111, 0.119305, 0.119233, 0.119264, 0.119154, 0.119215, 0.119131, 0.119175, 0.119181, 0.119312, 0.119169, 0.119138, 0.1192, 0.119152, 0.119195, 0.119087, 0.119358, 0.119352, 0.119235, 0.119198, 0.119168, 0.118685], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 3, 3, 1, 2, 2, 1, 0, 0, 5, 17, 0, 0, 1, 1, 1, 1, 1]': ([0.133287, 0.133271, 0.123252, 0.119194, 0.119118, 0.119151, 0.119065, 0.119313, 0.119111, 0.119305, 0.119233, 0.119264, 0.119154, 0.119215, 0.119131, 0.119175, 0.119181, 0.119312, 0.119169, 0.119138, 0.1192, 0.119152, 0.119195, 0.119087, 0.119358, 0.119352, 0.119235, 0.119198, 0.119168, 0.118685], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	6
        Additions: 		1874
        Multiplications: 	924
        Divisions: 		0
        Logical: 		0
        Reads: 			3693
        Writes: 		607
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest89.exe __orio_perftest89.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest89.exe  
Program Test Output: 
{'[2, 3, 0, 4, 6, 6, 0, 0, 0, 0, 4, 6, 2, 0, 0, 1, 0, 0]' : 0.184982}
{'[2, 3, 0, 4, 6, 6, 0, 0, 0, 0, 4, 6, 2, 0, 0, 1, 0, 0]' : 0.185346}
{'[2, 3, 0, 4, 6, 6, 0, 0, 0, 0, 4, 6, 2, 0, 0, 1, 0, 0]' : 0.185386}
{'[2, 3, 0, 4, 6, 6, 0, 0, 0, 0, 4, 6, 2, 0, 0, 1, 0, 0]' : 0.185816}
{'[2, 3, 0, 4, 6, 6, 0, 0, 0, 0, 4, 6, 2, 0, 0, 1, 0, 0]' : 0.184346}
{'[2, 3, 0, 4, 6, 6, 0, 0, 0, 0, 4, 6, 2, 0, 0, 1, 0, 0]' : 0.185415}
{'[2, 3, 0, 4, 6, 6, 0, 0, 0, 0, 4, 6, 2, 0, 0, 1, 0, 0]' : 0.184491}
{'[2, 3, 0, 4, 6, 6, 0, 0, 0, 0, 4, 6, 2, 0, 0, 1, 0, 0]' : 0.184837}
{'[2, 3, 0, 4, 6, 6, 0, 0, 0, 0, 4, 6, 2, 0, 0, 1, 0, 0]' : 0.185454}
{'[2, 3, 0, 4, 6, 6, 0, 0, 0, 0, 4, 6, 2, 0, 0, 1, 0, 0]' : 0.185602}
{'[2, 3, 0, 4, 6, 6, 0, 0, 0, 0, 4, 6, 2, 0, 0, 1, 0, 0]' : 0.184817}
{'[2, 3, 0, 4, 6, 6, 0, 0, 0, 0, 4, 6, 2, 0, 0, 1, 0, 0]' : 0.185071}
{'[2, 3, 0, 4, 6, 6, 0, 0, 0, 0, 4, 6, 2, 0, 0, 1, 0, 0]' : 0.18458}
{'[2, 3, 0, 4, 6, 6, 0, 0, 0, 0, 4, 6, 2, 0, 0, 1, 0, 0]' : 0.185498}
{'[2, 3, 0, 4, 6, 6, 0, 0, 0, 0, 4, 6, 2, 0, 0, 1, 0, 0]' : 0.185133}
{'[2, 3, 0, 4, 6, 6, 0, 0, 0, 0, 4, 6, 2, 0, 0, 1, 0, 0]' : 0.184167}
{'[2, 3, 0, 4, 6, 6, 0, 0, 0, 0, 4, 6, 2, 0, 0, 1, 0, 0]' : 0.185174}
{'[2, 3, 0, 4, 6, 6, 0, 0, 0, 0, 4, 6, 2, 0, 0, 1, 0, 0]' : 0.185246}
{'[2, 3, 0, 4, 6, 6, 0, 0, 0, 0, 4, 6, 2, 0, 0, 1, 0, 0]' : 0.184784}
{'[2, 3, 0, 4, 6, 6, 0, 0, 0, 0, 4, 6, 2, 0, 0, 1, 0, 0]' : 0.185601}
{'[2, 3, 0, 4, 6, 6, 0, 0, 0, 0, 4, 6, 2, 0, 0, 1, 0, 0]' : 0.18526}
{'[2, 3, 0, 4, 6, 6, 0, 0, 0, 0, 4, 6, 2, 0, 0, 1, 0, 0]' : 0.184969}
{'[2, 3, 0, 4, 6, 6, 0, 0, 0, 0, 4, 6, 2, 0, 0, 1, 0, 0]' : 0.184354}
{'[2, 3, 0, 4, 6, 6, 0, 0, 0, 0, 4, 6, 2, 0, 0, 1, 0, 0]' : 0.185424}
{'[2, 3, 0, 4, 6, 6, 0, 0, 0, 0, 4, 6, 2, 0, 0, 1, 0, 0]' : 0.184871}
{'[2, 3, 0, 4, 6, 6, 0, 0, 0, 0, 4, 6, 2, 0, 0, 1, 0, 0]' : 0.18536}
{'[2, 3, 0, 4, 6, 6, 0, 0, 0, 0, 4, 6, 2, 0, 0, 1, 0, 0]' : 0.184981}
{'[2, 3, 0, 4, 6, 6, 0, 0, 0, 0, 4, 6, 2, 0, 0, 1, 0, 0]' : 0.184396}
{'[2, 3, 0, 4, 6, 6, 0, 0, 0, 0, 4, 6, 2, 0, 0, 1, 0, 0]' : 0.184652}
{'[2, 3, 0, 4, 6, 6, 0, 0, 0, 0, 4, 6, 2, 0, 0, 1, 0, 0]' : 0.184716}

out:
 ["{'[2, 3, 0, 4, 6, 6, 0, 0, 0, 0, 4, 6, 2, 0, 0, 1, 0, 0]' : 0.184982}", "{'[2, 3, 0, 4, 6, 6, 0, 0, 0, 0, 4, 6, 2, 0, 0, 1, 0, 0]' : 0.185346}", "{'[2, 3, 0, 4, 6, 6, 0, 0, 0, 0, 4, 6, 2, 0, 0, 1, 0, 0]' : 0.185386}", "{'[2, 3, 0, 4, 6, 6, 0, 0, 0, 0, 4, 6, 2, 0, 0, 1, 0, 0]' : 0.185816}", "{'[2, 3, 0, 4, 6, 6, 0, 0, 0, 0, 4, 6, 2, 0, 0, 1, 0, 0]' : 0.184346}", "{'[2, 3, 0, 4, 6, 6, 0, 0, 0, 0, 4, 6, 2, 0, 0, 1, 0, 0]' : 0.185415}", "{'[2, 3, 0, 4, 6, 6, 0, 0, 0, 0, 4, 6, 2, 0, 0, 1, 0, 0]' : 0.184491}", "{'[2, 3, 0, 4, 6, 6, 0, 0, 0, 0, 4, 6, 2, 0, 0, 1, 0, 0]' : 0.184837}", "{'[2, 3, 0, 4, 6, 6, 0, 0, 0, 0, 4, 6, 2, 0, 0, 1, 0, 0]' : 0.185454}", "{'[2, 3, 0, 4, 6, 6, 0, 0, 0, 0, 4, 6, 2, 0, 0, 1, 0, 0]' : 0.185602}", "{'[2, 3, 0, 4, 6, 6, 0, 0, 0, 0, 4, 6, 2, 0, 0, 1, 0, 0]' : 0.184817}", "{'[2, 3, 0, 4, 6, 6, 0, 0, 0, 0, 4, 6, 2, 0, 0, 1, 0, 0]' : 0.185071}", "{'[2, 3, 0, 4, 6, 6, 0, 0, 0, 0, 4, 6, 2, 0, 0, 1, 0, 0]' : 0.18458}", "{'[2, 3, 0, 4, 6, 6, 0, 0, 0, 0, 4, 6, 2, 0, 0, 1, 0, 0]' : 0.185498}", "{'[2, 3, 0, 4, 6, 6, 0, 0, 0, 0, 4, 6, 2, 0, 0, 1, 0, 0]' : 0.185133}", "{'[2, 3, 0, 4, 6, 6, 0, 0, 0, 0, 4, 6, 2, 0, 0, 1, 0, 0]' : 0.184167}", "{'[2, 3, 0, 4, 6, 6, 0, 0, 0, 0, 4, 6, 2, 0, 0, 1, 0, 0]' : 0.185174}", "{'[2, 3, 0, 4, 6, 6, 0, 0, 0, 0, 4, 6, 2, 0, 0, 1, 0, 0]' : 0.185246}", "{'[2, 3, 0, 4, 6, 6, 0, 0, 0, 0, 4, 6, 2, 0, 0, 1, 0, 0]' : 0.184784}", "{'[2, 3, 0, 4, 6, 6, 0, 0, 0, 0, 4, 6, 2, 0, 0, 1, 0, 0]' : 0.185601}", "{'[2, 3, 0, 4, 6, 6, 0, 0, 0, 0, 4, 6, 2, 0, 0, 1, 0, 0]' : 0.18526}", "{'[2, 3, 0, 4, 6, 6, 0, 0, 0, 0, 4, 6, 2, 0, 0, 1, 0, 0]' : 0.184969}", "{'[2, 3, 0, 4, 6, 6, 0, 0, 0, 0, 4, 6, 2, 0, 0, 1, 0, 0]' : 0.184354}", "{'[2, 3, 0, 4, 6, 6, 0, 0, 0, 0, 4, 6, 2, 0, 0, 1, 0, 0]' : 0.185424}", "{'[2, 3, 0, 4, 6, 6, 0, 0, 0, 0, 4, 6, 2, 0, 0, 1, 0, 0]' : 0.184871}", "{'[2, 3, 0, 4, 6, 6, 0, 0, 0, 0, 4, 6, 2, 0, 0, 1, 0, 0]' : 0.18536}", "{'[2, 3, 0, 4, 6, 6, 0, 0, 0, 0, 4, 6, 2, 0, 0, 1, 0, 0]' : 0.184981}", "{'[2, 3, 0, 4, 6, 6, 0, 0, 0, 0, 4, 6, 2, 0, 0, 1, 0, 0]' : 0.184396}", "{'[2, 3, 0, 4, 6, 6, 0, 0, 0, 0, 4, 6, 2, 0, 0, 1, 0, 0]' : 0.184652}", "{'[2, 3, 0, 4, 6, 6, 0, 0, 0, 0, 4, 6, 2, 0, 0, 1, 0, 0]' : 0.184716}"]
returning from 'run': {'[2, 3, 0, 4, 6, 6, 0, 0, 0, 0, 4, 6, 2, 0, 0, 1, 0, 0]': ([0.184982, 0.185346, 0.185386, 0.185816, 0.184346, 0.185415, 0.184491, 0.184837, 0.185454, 0.185602, 0.184817, 0.185071, 0.18458, 0.185498, 0.185133, 0.184167, 0.185174, 0.185246, 0.184784, 0.185601, 0.18526, 0.184969, 0.184354, 0.185424, 0.184871, 0.18536, 0.184981, 0.184396, 0.184652, 0.184716], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 3, 0, 4, 6, 6, 0, 0, 0, 0, 4, 6, 2, 0, 0, 1, 0, 0]': ([0.184982, 0.185346, 0.185386, 0.185816, 0.184346, 0.185415, 0.184491, 0.184837, 0.185454, 0.185602, 0.184817, 0.185071, 0.18458, 0.185498, 0.185133, 0.184167, 0.185174, 0.185246, 0.184784, 0.185601, 0.18526, 0.184969, 0.184354, 0.185424, 0.184871, 0.18536, 0.184981, 0.184396, 0.184652, 0.184716], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Complete design, with measurements:
     T1_I T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J RT_K
477     5    0    0    1    6       1       0    5   0   7  25    1    0    1
483     5    1    0    6    6       1       1   10  23  26   0    0    1    1
516     1    0    6    1    6       0       0   29  21  23   0    0    1    0
528     0    0    1    2    1       1       0   19  29   0   5    2    0    0
549     6    6    0    0    6       0       0    2  15   3   0    1    1    0
646     0    1    6    0    1       1       1    6  15  25   0    0    0    0
657     0    1    1    0    4       0       1   28   0   6   3    2    0    0
781     2    2    6    2    2       0       1   17  20   7   0    1    0    1
962     6    2    6    3    1       0       0   28   6   0  14    0    0    0
1270    1    2    6    6    5       1       0    9   0  28  19    0    0    2
1365    1    1    0    0    0       0       1   18  22   0  16    0    0    0
1465    6    2    5    0    6       1       0    3  28   0  27    2    0    0
1652    4    1    0    0    3       1       0   26   0  29  11    0    0    2
1759    2    2    1    5    1       1       1   28   5   0   4    1    1    0
1769    6    0    6    6    4       1       0    0   4   0   6    1    0    1
1796    2    6    2    2    4       1       0   24   0  28  21    0    0    0
1985    3    0    0    6    2       0       1   16   2   8   0    0    0    0
1990    3    1    4    1    6       0       1    6   0   9   7    0    2    0
2263    5    1    0    3    3       0       1   29   0  29  29    0    1    1
2435    5    5    6    6    3       0       0   28  29  27   0    1    0    0
2545    0    0    1    0    4       0       0   10   7   0  28    0    0    1
2562    0    4    6    4    5       0       1    0   0  25  23    1    0    0
2628    0    0    1    0    6       0       0   27  12   0  28    0    2    0
2678    1    4    6    2    6       1       0    1  28   0   1    0    0    1
2715    3    0    0    0    3       0       1    0  10  19   0    0    2    0
2805    3    4    6    5    5       1       1   29   0   0  25    1    0    0
2869    2    1    1    4    6       0       0    0  12   0   8    1    0    0
2914    3    6    2    0    0       0       0   28  24   0   5    1    0    1
2996    5    4    3    4    5       0       1   11   0   0   1    0    0    0
3013    1    3    3    5    4       1       1    1  29   0  29    0    1    0
3087    0    3    1    5    6       0       1   25  21  15   0    0    0    0
3483    0    0    3    3    0       0       1   18   0  23   8    1    1    0
3664    5    0    3    6    1       1       0    6   0   6  27    0    0    2
3909    3    1    4    2    0       1       1   11   7  28   0    2    0    0
4053    6    4    6    0    0       1       1    1   0   5  29    0    1    0
4091    0    3    1    2    2       1       0    0   5  17   0    0    1    1
4153    2    0    4    6    6       0       0    0   0   4   6    2    0    0
     VEC1 VEC2  cost_mean
477     0    1 0.09077825
483     1    0 0.25263443
516     0    0 0.17295133
528     1    1 0.18663560
549     1    0 0.10724956
646     0    0 0.27636463
657     0    0 0.17441243
781     0    0 0.09887879
962     1    1 0.10658917
1270    1    1 0.17097527
1365    0    1 0.29479223
1465    1    1 0.18914467
1652    0    0 0.24109407
1759    1    1 0.10263121
1769    1    0 0.09076890
1796    1    0 0.17708553
1985    1    0 0.14749360
1990    1    1 0.26073033
2263    0    0 0.24697050
2435    1    1 0.09238323
2545    0    1 0.09352828
2562    0    1 0.10126411
2628    1    0 0.14059577
2678    1    1 0.19145653
2715    1    1 0.16141930
2805    1    1 0.09505017
2869    0    1 0.12866423
2914    1    0 0.09553589
2996    0    1 0.21530147
3013    0    0 0.22403223
3087    1    1 0.18310353
3483    0    1 0.08765076
3664    0    1 0.17389273
3909    0    0 0.25150960
4053    0    1 0.21440233
4091    1    1 0.12025563
4153    0    0 0.18502430

Heteroscedasticity Test p-value: 0.218047731856
Regression Step:                Df   Sum Sq  Mean Sq F value  Pr(>F)   
T1_I             1 0.000020 0.000020   0.016 0.90346   
T1_K             1 0.004049 0.004049   3.201 0.11141   
T2_I             1 0.000769 0.000769   0.608 0.45805   
T2_J             1 0.003777 0.003777   2.985 0.12228   
T2_K             1 0.000061 0.000061   0.048 0.83150   
ACOPY_x          1 0.007520 0.007520   5.944 0.04069 * 
ACOPY_y          1 0.024353 0.024353  19.250 0.00233 **
U1_I             1 0.000016 0.000016   0.012 0.91439   
U_I              1 0.004675 0.004675   3.695 0.09079 . 
U_J              1 0.007976 0.007976   6.304 0.03632 * 
U_K              1 0.000262 0.000262   0.207 0.66087   
RT_I             1 0.005684 0.005684   4.493 0.06686 . 
RT_J             1 0.003643 0.003643   2.880 0.12812   
RT_K             1 0.001811 0.001811   1.432 0.26576   
VEC1             1 0.002973 0.002973   2.350 0.16383   
VEC2             1 0.001783 0.001783   1.410 0.26918   
I(1/(1 + T1_I))  1 0.002931 0.002931   2.317 0.16646   
I(1/(1 + T1_K))  1 0.008776 0.008776   6.937 0.03000 * 
I(1/(1 + T2_I))  1 0.004532 0.004532   3.582 0.09504 . 
I(1/(1 + T2_J))  1 0.001558 0.001558   1.231 0.29941   
I(1/(1 + T2_K))  1 0.003297 0.003297   2.606 0.14511   
I(1/(1 + U1_I))  1 0.001082 0.001082   0.855 0.38209   
I(1/(1 + U_I))   1 0.022114 0.022114  17.480 0.00308 **
I(1/(1 + U_J))   1 0.001136 0.001136   0.898 0.37116   
I(1/(1 + U_K))   1 0.002678 0.002678   2.117 0.18374   
I(1/(1 + RT_I))  1 0.008064 0.008064   6.374 0.03555 * 
I(1/(1 + RT_J))  1 0.002143 0.002143   1.694 0.22931   
I(1/(1 + RT_K))  1 0.000001 0.000001   0.000 0.98332   
Residuals        8 0.010121 0.001265                   
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Predicting Best
Generating valid search space of size 4200 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Valid coordinates: 840
Tested coordinates: 30000
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Valid coordinates: 1680
Tested coordinates: 70000
Tested coordinates: 80000
Tested coordinates: 90000
Valid coordinates: 2520
Tested coordinates: 100000
Tested coordinates: 110000
Tested coordinates: 120000
Valid coordinates: 3360
Tested coordinates: 130000
Tested coordinates: 140000
Tested coordinates: 150000
Valid coordinates: 4200
Valid/Tested configurations: 4200/153029
Generated Search Space:
NULL
Identical predictions (tol = 1e-5): 1
Getting Best from Design
Response: ['cost_mean']
Design Names:  [1] "T1_I"      "T1_K"      "T2_I"      "T2_J"      "T2_K"      "ACOPY_x"  
 [7] "ACOPY_y"   "U1_I"      "U_I"       "U_J"       "U_K"       "RT_I"     
[13] "RT_J"      "RT_K"      "VEC1"      "VEC2"      "cost_mean"

Design Response:       cost_mean
477  0.09077825
483  0.25263443
516  0.17295133
528  0.18663560
549  0.10724956
646  0.27636463
657  0.17441243
781  0.09887879
962  0.10658917
1270 0.17097527
1365 0.29479223
1465 0.18914467
1652 0.24109407
1759 0.10263121
1769 0.09076890
1796 0.17708553
1985 0.14749360
1990 0.26073033
2263 0.24697050
2435 0.09238323
2545 0.09352828
2562 0.10126411
2628 0.14059577
2678 0.19145653
2715 0.16141930
2805 0.09505017
2869 0.12866423
2914 0.09553589
2996 0.21530147
3013 0.22403223
3087 0.18310353
3483 0.08765076
3664 0.17389273
3909 0.25150960
4053 0.21440233
4091 0.12025563
4153 0.18502430

Current Design Names: ['T1_I', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Getting fixed variables
Pruning Model
Best Predicted:      T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
2334    5    3    0    3    1    4       0       0   17   7   8   0    1    1
     RT_K SCR VEC1 VEC2
2334    0   1    1    1

Best From Design: [0, 3, 0, 3, 3, 0, 0, 1, 18, 0, 23, 8, 1, 1, 0, 1, 0, 1]
Pruned Factors: ['T1_I', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_K', 'RT_J', 'RT_K', 'VEC1', 'VEC2']
Fixed Factors: {'ACOPY_x': 0, 'ACOPY_y': 0, 'T1_J': 3, 'RT_I': 1, 'U_J': 8, 'U_I': 7, 'SCR': 1}
Length of requested configs: 1
Result was on Database, Returning Now
Starting Point (-O3):
0.16283083333333334
Predicted Best Point:
[5, 3, 0, 3, 1, 4, 0, 0, 17, 7, 8, 0, 1, 1, 0, 1, 1, 1]
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	38
        Max loop nest depth: 	4
        Additions: 		1535
        Multiplications: 	646
        Divisions: 		0
        Logical: 		0
        Reads: 			2977
        Writes: 		533
        Comparisons:		38
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest90.exe __orio_perftest90.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest90.exe  
Program Test Output: 
{'[5, 3, 0, 3, 1, 4, 0, 0, 17, 7, 8, 0, 1, 1, 0, 1, 1, 1]' : 0.107562}
{'[5, 3, 0, 3, 1, 4, 0, 0, 17, 7, 8, 0, 1, 1, 0, 1, 1, 1]' : 0.107548}
{'[5, 3, 0, 3, 1, 4, 0, 0, 17, 7, 8, 0, 1, 1, 0, 1, 1, 1]' : 0.107501}
{'[5, 3, 0, 3, 1, 4, 0, 0, 17, 7, 8, 0, 1, 1, 0, 1, 1, 1]' : 0.10764}
{'[5, 3, 0, 3, 1, 4, 0, 0, 17, 7, 8, 0, 1, 1, 0, 1, 1, 1]' : 0.106429}
{'[5, 3, 0, 3, 1, 4, 0, 0, 17, 7, 8, 0, 1, 1, 0, 1, 1, 1]' : 0.0926561}
{'[5, 3, 0, 3, 1, 4, 0, 0, 17, 7, 8, 0, 1, 1, 0, 1, 1, 1]' : 0.091428}
{'[5, 3, 0, 3, 1, 4, 0, 0, 17, 7, 8, 0, 1, 1, 0, 1, 1, 1]' : 0.0910089}
{'[5, 3, 0, 3, 1, 4, 0, 0, 17, 7, 8, 0, 1, 1, 0, 1, 1, 1]' : 0.0909629}
{'[5, 3, 0, 3, 1, 4, 0, 0, 17, 7, 8, 0, 1, 1, 0, 1, 1, 1]' : 0.0910749}
{'[5, 3, 0, 3, 1, 4, 0, 0, 17, 7, 8, 0, 1, 1, 0, 1, 1, 1]' : 0.091027}
{'[5, 3, 0, 3, 1, 4, 0, 0, 17, 7, 8, 0, 1, 1, 0, 1, 1, 1]' : 0.0910759}
{'[5, 3, 0, 3, 1, 4, 0, 0, 17, 7, 8, 0, 1, 1, 0, 1, 1, 1]' : 0.09128}
{'[5, 3, 0, 3, 1, 4, 0, 0, 17, 7, 8, 0, 1, 1, 0, 1, 1, 1]' : 0.0914829}
{'[5, 3, 0, 3, 1, 4, 0, 0, 17, 7, 8, 0, 1, 1, 0, 1, 1, 1]' : 0.09126}
{'[5, 3, 0, 3, 1, 4, 0, 0, 17, 7, 8, 0, 1, 1, 0, 1, 1, 1]' : 0.0910709}
{'[5, 3, 0, 3, 1, 4, 0, 0, 17, 7, 8, 0, 1, 1, 0, 1, 1, 1]' : 0.091063}
{'[5, 3, 0, 3, 1, 4, 0, 0, 17, 7, 8, 0, 1, 1, 0, 1, 1, 1]' : 0.0910511}
{'[5, 3, 0, 3, 1, 4, 0, 0, 17, 7, 8, 0, 1, 1, 0, 1, 1, 1]' : 0.0910559}
{'[5, 3, 0, 3, 1, 4, 0, 0, 17, 7, 8, 0, 1, 1, 0, 1, 1, 1]' : 0.091038}
{'[5, 3, 0, 3, 1, 4, 0, 0, 17, 7, 8, 0, 1, 1, 0, 1, 1, 1]' : 0.091049}
{'[5, 3, 0, 3, 1, 4, 0, 0, 17, 7, 8, 0, 1, 1, 0, 1, 1, 1]' : 0.090976}
{'[5, 3, 0, 3, 1, 4, 0, 0, 17, 7, 8, 0, 1, 1, 0, 1, 1, 1]' : 0.0910261}
{'[5, 3, 0, 3, 1, 4, 0, 0, 17, 7, 8, 0, 1, 1, 0, 1, 1, 1]' : 0.0913401}
{'[5, 3, 0, 3, 1, 4, 0, 0, 17, 7, 8, 0, 1, 1, 0, 1, 1, 1]' : 0.0910242}
{'[5, 3, 0, 3, 1, 4, 0, 0, 17, 7, 8, 0, 1, 1, 0, 1, 1, 1]' : 0.091023}
{'[5, 3, 0, 3, 1, 4, 0, 0, 17, 7, 8, 0, 1, 1, 0, 1, 1, 1]' : 0.0909891}
{'[5, 3, 0, 3, 1, 4, 0, 0, 17, 7, 8, 0, 1, 1, 0, 1, 1, 1]' : 0.091244}
{'[5, 3, 0, 3, 1, 4, 0, 0, 17, 7, 8, 0, 1, 1, 0, 1, 1, 1]' : 0.091362}
{'[5, 3, 0, 3, 1, 4, 0, 0, 17, 7, 8, 0, 1, 1, 0, 1, 1, 1]' : 0.091079}

out:
 ["{'[5, 3, 0, 3, 1, 4, 0, 0, 17, 7, 8, 0, 1, 1, 0, 1, 1, 1]' : 0.107562}", "{'[5, 3, 0, 3, 1, 4, 0, 0, 17, 7, 8, 0, 1, 1, 0, 1, 1, 1]' : 0.107548}", "{'[5, 3, 0, 3, 1, 4, 0, 0, 17, 7, 8, 0, 1, 1, 0, 1, 1, 1]' : 0.107501}", "{'[5, 3, 0, 3, 1, 4, 0, 0, 17, 7, 8, 0, 1, 1, 0, 1, 1, 1]' : 0.10764}", "{'[5, 3, 0, 3, 1, 4, 0, 0, 17, 7, 8, 0, 1, 1, 0, 1, 1, 1]' : 0.106429}", "{'[5, 3, 0, 3, 1, 4, 0, 0, 17, 7, 8, 0, 1, 1, 0, 1, 1, 1]' : 0.0926561}", "{'[5, 3, 0, 3, 1, 4, 0, 0, 17, 7, 8, 0, 1, 1, 0, 1, 1, 1]' : 0.091428}", "{'[5, 3, 0, 3, 1, 4, 0, 0, 17, 7, 8, 0, 1, 1, 0, 1, 1, 1]' : 0.0910089}", "{'[5, 3, 0, 3, 1, 4, 0, 0, 17, 7, 8, 0, 1, 1, 0, 1, 1, 1]' : 0.0909629}", "{'[5, 3, 0, 3, 1, 4, 0, 0, 17, 7, 8, 0, 1, 1, 0, 1, 1, 1]' : 0.0910749}", "{'[5, 3, 0, 3, 1, 4, 0, 0, 17, 7, 8, 0, 1, 1, 0, 1, 1, 1]' : 0.091027}", "{'[5, 3, 0, 3, 1, 4, 0, 0, 17, 7, 8, 0, 1, 1, 0, 1, 1, 1]' : 0.0910759}", "{'[5, 3, 0, 3, 1, 4, 0, 0, 17, 7, 8, 0, 1, 1, 0, 1, 1, 1]' : 0.09128}", "{'[5, 3, 0, 3, 1, 4, 0, 0, 17, 7, 8, 0, 1, 1, 0, 1, 1, 1]' : 0.0914829}", "{'[5, 3, 0, 3, 1, 4, 0, 0, 17, 7, 8, 0, 1, 1, 0, 1, 1, 1]' : 0.09126}", "{'[5, 3, 0, 3, 1, 4, 0, 0, 17, 7, 8, 0, 1, 1, 0, 1, 1, 1]' : 0.0910709}", "{'[5, 3, 0, 3, 1, 4, 0, 0, 17, 7, 8, 0, 1, 1, 0, 1, 1, 1]' : 0.091063}", "{'[5, 3, 0, 3, 1, 4, 0, 0, 17, 7, 8, 0, 1, 1, 0, 1, 1, 1]' : 0.0910511}", "{'[5, 3, 0, 3, 1, 4, 0, 0, 17, 7, 8, 0, 1, 1, 0, 1, 1, 1]' : 0.0910559}", "{'[5, 3, 0, 3, 1, 4, 0, 0, 17, 7, 8, 0, 1, 1, 0, 1, 1, 1]' : 0.091038}", "{'[5, 3, 0, 3, 1, 4, 0, 0, 17, 7, 8, 0, 1, 1, 0, 1, 1, 1]' : 0.091049}", "{'[5, 3, 0, 3, 1, 4, 0, 0, 17, 7, 8, 0, 1, 1, 0, 1, 1, 1]' : 0.090976}", "{'[5, 3, 0, 3, 1, 4, 0, 0, 17, 7, 8, 0, 1, 1, 0, 1, 1, 1]' : 0.0910261}", "{'[5, 3, 0, 3, 1, 4, 0, 0, 17, 7, 8, 0, 1, 1, 0, 1, 1, 1]' : 0.0913401}", "{'[5, 3, 0, 3, 1, 4, 0, 0, 17, 7, 8, 0, 1, 1, 0, 1, 1, 1]' : 0.0910242}", "{'[5, 3, 0, 3, 1, 4, 0, 0, 17, 7, 8, 0, 1, 1, 0, 1, 1, 1]' : 0.091023}", "{'[5, 3, 0, 3, 1, 4, 0, 0, 17, 7, 8, 0, 1, 1, 0, 1, 1, 1]' : 0.0909891}", "{'[5, 3, 0, 3, 1, 4, 0, 0, 17, 7, 8, 0, 1, 1, 0, 1, 1, 1]' : 0.091244}", "{'[5, 3, 0, 3, 1, 4, 0, 0, 17, 7, 8, 0, 1, 1, 0, 1, 1, 1]' : 0.091362}", "{'[5, 3, 0, 3, 1, 4, 0, 0, 17, 7, 8, 0, 1, 1, 0, 1, 1, 1]' : 0.091079}"]
returning from 'run': {'[5, 3, 0, 3, 1, 4, 0, 0, 17, 7, 8, 0, 1, 1, 0, 1, 1, 1]': ([0.107562, 0.107548, 0.107501, 0.10764, 0.106429, 0.0926561, 0.091428, 0.0910089, 0.0909629, 0.0910749, 0.091027, 0.0910759, 0.09128, 0.0914829, 0.09126, 0.0910709, 0.091063, 0.0910511, 0.0910559, 0.091038, 0.091049, 0.090976, 0.0910261, 0.0913401, 0.0910242, 0.091023, 0.0909891, 0.091244, 0.091362, 0.091079], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 3, 0, 3, 1, 4, 0, 0, 17, 7, 8, 0, 1, 1, 0, 1, 1, 1]': ([0.107562, 0.107548, 0.107501, 0.10764, 0.106429, 0.0926561, 0.091428, 0.0910089, 0.0909629, 0.0910749, 0.091027, 0.0910759, 0.09128, 0.0914829, 0.09126, 0.0910709, 0.091063, 0.0910511, 0.0910559, 0.091038, 0.091049, 0.090976, 0.0910261, 0.0913401, 0.0910242, 0.091023, 0.0909891, 0.091244, 0.091362, 0.091079], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Design Best Point:
[0, 3, 0, 3, 3, 0, 0, 1, 18, 0, 23, 8, 1, 1, 0, 1, 0, 1]
Length of requested configs: 1
Result was on Database, Returning Now
Fixed Factors: {'ACOPY_x': 0, 'ACOPY_y': 0, 'T1_J': 3, 'RT_I': 1, 'U_J': 8, 'U_I': 7, 'SCR': 1}
Slowdown (Design Best): 0.5382934026622724
Slowdown (Predicted Best): 0.5765345424955347
Budget: 74/180
Updating Global Best: 0.08765076333333338
Current Best Point: 
[0, 3, 0, 3, 3, 0, 0, 1, 18, 0, 23, 8, 1, 1, 0, 1, 0, 1]
Final Best Point: 
[0, 3, 0, 3, 3, 0, 0, 1, 18, 0, 23, 8, 1, 1, 0, 1, 0, 1]
Ending DOPT-ANOVA
Best Point: [0, 3, 0, 3, 3, 0, 0, 1, 18, 0, 23, 8, 1, 1, 0, 1, 0, 1]
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Speedup: 1.8577229352138358
----- end random search -----
----- begin random search summary -----
 total completed runs: 0
 total successful runs: 0
 total failed runs: 0
 speedup: 1.8577229352138358
----- end random search summary -----
----- begin summary -----
 best coordinate: [0, 3, 0, 3, 3, 0, 0, 1, 18, 0, 23, 8, 1, 1, 0, 1, 0, 1]={'ACOPY_x': False, 'ACOPY_y': True, 'RT_K': 1, 'T1_I': 1, 'T1_J': 64, 'T1_K': 1, 'U_K': 9, 'U_J': 24, 'U_I': 1, 'U1_I': 19, 'T2_K': 1, 'T2_J': 256, 'T2_I': 256, 'VEC2': True, 'VEC1': False, 'RT_I': 8, 'SCR': True, 'RT_J': 8}, cost=8.765076e-02, transfer_time=inf, inputs=[('N', 10000)], search_time=-1183.07, runs=74
----- end summary -----
Length of requested configs: 1
Result was on Database, Returning Now
----- the obtained best performance parameters -----
 ACOPY_x = False
 ACOPY_y = True
 RT_I = 8
 RT_J = 8
 RT_K = 1
 SCR = True
 T1_I = 1
 T1_J = 64
 T1_K = 1
 T2_I = 256
 T2_J = 256
 T2_K = 1
 U1_I = 19
 U_I = 1
 U_J = 24
 U_K = 9
 VEC1 = False
 VEC2 = True
 cost_mean = 0.08765076333333338
 points = 74
 speedup_O3 = 1.8577229352138358
 technique = DLMT
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	5
        Additions: 		1621
        Multiplications: 	774
        Divisions: 		0
        Logical: 		0
        Reads: 			3214
        Writes: 		552
        Comparisons:		19
        Gotos: 			0
        
----- finish optimizations -----

----- begin removing annotations from output-----
----- finished removing annotations from output-----

----- begin writing the output file(s) -----
--> writing output to: _atax2.src1.c
----- finished writing the output file(s) -----

====== END ORIO ======
