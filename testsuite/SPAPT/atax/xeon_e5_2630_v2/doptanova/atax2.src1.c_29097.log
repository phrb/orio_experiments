
====== START ORIO ======

----- begin reading the source file: atax2.src1.c -----
----- finished reading the source file -----

----- begin parsing annotations -----
----- finished parsing annotations -----

----- begin optimizations -----
Search_Space         = 8.234e+13
Number_of_Parameters = 18
Numeric_Parameters   = 13
Binary_Parameters    = 05
['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
[[1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [False, True], [False, True], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 8, 32], [1, 8, 32], [1, 8, 32], [False, True], [False, True], [False, True]]

----- begin empirical tuning for problem size -----
 N = 10000
Parameters: {'ACOPY_x': [0, 2], 'ACOPY_y': [0, 2], 'RT_K': [0, 3], 'T1_I': [0, 7], 'T1_J': [0, 7], 'T1_K': [0, 7], 'U_K': [0, 30], 'U_J': [0, 30], 'U_I': [0, 30], 'U1_I': [0, 30], 'T2_K': [0, 7], 'T2_J': [0, 7], 'T2_I': [0, 7], 'VEC2': [0, 2], 'VEC1': [0, 2], 'RT_I': [0, 3], 'SCR': [0, 2], 'RT_J': [0, 3]}
Parameter Range Values: {'ACOPY_x': [False, True], 'ACOPY_y': [False, True], 'RT_K': [1, 8, 32], 'T1_I': [1, 16, 32, 64, 128, 256, 512], 'T1_J': [1, 16, 32, 64, 128, 256, 512], 'T1_K': [1, 16, 32, 64, 128, 256, 512], 'U_K': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_J': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U1_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'T2_K': [1, 64, 128, 256, 512, 1024, 2048], 'T2_J': [1, 64, 128, 256, 512, 1024, 2048], 'T2_I': [1, 64, 128, 256, 512, 1024, 2048], 'VEC2': [False, True], 'VEC1': [False, True], 'RT_I': [1, 8, 32], 'SCR': [False, True], 'RT_J': [1, 8, 32]}

----- begin random search -----
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Inverse Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Starting DOPT-anova
Step 0
Generating valid search space of size 4600 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Valid coordinates: 920
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Valid coordinates: 1840
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Tested coordinates: 110000
Valid coordinates: 2760
Tested coordinates: 120000
Tested coordinates: 130000
Tested coordinates: 140000
Tested coordinates: 150000
Valid coordinates: 3680
Tested coordinates: 160000
Tested coordinates: 170000
Tested coordinates: 180000
Tested coordinates: 190000
Valid coordinates: 4600
Valid/Tested configurations: 4600/191693
Generated Search Space:
NULL
Clean Info:
Removed Factors: character(0)

Removed Inverse Factors: [1] "ACOPY_x" "ACOPY_y" "SCR"     "VEC1"    "VEC2"   

New Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
New Inverse Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
New Fixed Factors: {}
Full Model:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Fixed Factors: {}
Computing D-Optimal Design
Computing D-Optimal Design with 46 experiments
Design Formula:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Starting "optFederov" run
Using Search Space:
NULL
Data Dimensions: [1] 4600   18

     T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
84      6    2    6    5    0    5       0       0    0   0  29   9    0    1
217     3    1    1    1    6    1       0       0   24   0  19   0    2    0
336     6    2    0    5    6    1       0       1    3   8   0   3    0    1
353     1    0    1    2    2    3       0       1    9   6  22   0    0    0
472     6    0    0    5    5    6       0       1    0  29   4   0    0    2
611     0    2    0    0    2    0       0       1    5  26   0  27    0    0
639     2    0    0    1    0    2       1       0   22   6   0  25    1    1
968     6    5    2    0    3    1       0       1   28  13   1   0    2    0
1035    1    3    6    0    2    6       0       0   22  10   0   2    1    1
1070    1    5    2    0    0    2       1       0   13   0   0   9    0    2
1192    2    5    6    1    6    5       0       1   29  22   7   0    0    0
1214    6    4    6    0    5    6       1       1   24   8   0   0    0    0
1236    1    0    6    6    5    0       0       0   21  28   0   3    2    0
1451    0    0    1    6    0    4       1       1    7   4   1   0    0    0
1540    0    1    6    6    5    6       1       0    9   8   0   7    1    0
1619    4    1    0    0    6    4       0       0   16   0  13  29    2    0
1677    0    6    6    0    5    4       1       1    0   0  23  28    0    0
1837    0    6    1    6    6    0       0       0   26   2  10   0    1    0
1960    0    0    0    5    2    6       0       1    6   0   3   0    2    0
2151    6    6    4    0    5    0       1       1    2  28   0  27    1    0
2166    2    6    0    5    4    1       1       1   13   0  29  13    0    0
2383    4    5    6    6    0    6       0       0    8   6   0  27    2    0
2542    0    3    0    3    3    1       0       0   24  26   2   0    1    0
2562    1    3    4    5    1    0       1       1    6  12   8   0    0    1
2584    0    1    5    2    4    3       1       1   28  27   0  29    0    2
2591    4    1    5    5    6    0       0       1   27   0  28   0    0    0
2672    6    6    6    5    5    0       1       0    5   0   7  21    0    2
2701    0    5    1    1    5    2       0       0    0   0   9  24    0    1
2711    5    5    2    0    0    2       0       0    7  19  25   0    0    0
3142    4    6    5    5    0    0       0       1   25  29  29   0    0    2
3161    5    0    4    0    2    2       1       1    0   0  27   0    1    1
3174    0    0    6    2    6    0       1       1    2  16  20   0    2    0
3352    0    2    2    0    0    6       1       1   26  26  12   0    0    1
3385    6    0    5    6    5    6       1       0   29   1   9   0    2    0
3593    3    3    0    1    0    0       1       1    0   0  26   4    1    0
3729    0    6    0    2    0    6       1       0   24   3   0   3    0    1
3738    1    6    4    5    4    6       1       0    2  26   0  12    0    0
3963    2    6    0    1    6    6       1       0   10   0  15  26    0    2
4006    2    1    1    6    2    0       1       1    0   7   0   8    2    0
4048    6    0    0    0    6    1       1       0   28   0   6   7    0    1
4092    4    4    0    0    6    5       1       1   28   6  28   0    1    1
4416    1    0    6    2    2    0       1       0   15   0   7  28    0    0
4418    1    6    6    1    0    6       0       1    7   0   2  13    1    0
4505    0    4    1    1    2    0       0       1   28   0   0  21    1    0
4553    6    1    2    4    1    1       1       1    7   0  25   9    1    1
4557    2    0    1    4    2    5       0       0    3   0  29  28    0    0
     RT_K SCR VEC1 VEC2
84      1   0    0    0
217     0   0    0    1
336     1   1    1    0
353     1   0    0    0
472     0   0    1    0
611     2   1    0    1
639     0   0    0    0
968     0   0    0    1
1035    0   1    1    0
1070    0   0    1    0
1192    2   0    1    1
1214    0   0    0    0
1236    0   0    0    1
1451    2   1    0    1
1540    1   0    1    1
1619    0   0    1    1
1677    0   0    1    0
1837    0   1    0    0
1960    0   0    0    0
2151    1   0    1    0
2166    0   0    1    0
2383    0   0    1    1
2542    1   0    1    0
2562    0   1    1    1
2584    0   1    1    1
2591    0   1    0    0
2672    0   1    0    1
2701    1   0    0    0
2711    0   1    1    1
3142    0   1    0    0
3161    0   1    1    1
3174    0   1    1    0
3352    1   1    1    0
3385    0   1    1    0
3593    1   0    1    1
3729    0   0    1    1
3738    2   1    0    0
3963    0   1    0    1
4006    0   1    0    1
4048    1   1    1    0
4092    0   0    0    1
4416    2   0    1    0
4418    0   1    0    0
4505    1   1    1    0
4553    0   0    0    1
4557    2   0    1    1

D-Efficiency Approximation: [1] 0.366

Measuring design of size 46
Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	6
        Additions: 		293
        Multiplications: 	116
        Divisions: 		0
        Logical: 		0
        Reads: 			675
        Writes: 		86
        Comparisons:		13
        Gotos: 			0
        
 building the original code:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -DORIGINAL -o __orio_perftest_original.exe __orio_perftest1.c timer_cpu.o -lm
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest1.exe __orio_perftest1.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest1.exe  
Program Test Output: 
{'[6, 2, 6, 5, 0, 5, 0, 0, 0, 0, 29, 9, 0, 1, 1, 0, 0, 0]' : 0.242162}
{'[6, 2, 6, 5, 0, 5, 0, 0, 0, 0, 29, 9, 0, 1, 1, 0, 0, 0]' : 0.24199}
{'[6, 2, 6, 5, 0, 5, 0, 0, 0, 0, 29, 9, 0, 1, 1, 0, 0, 0]' : 0.239365}
{'[6, 2, 6, 5, 0, 5, 0, 0, 0, 0, 29, 9, 0, 1, 1, 0, 0, 0]' : 0.204882}
{'[6, 2, 6, 5, 0, 5, 0, 0, 0, 0, 29, 9, 0, 1, 1, 0, 0, 0]' : 0.203774}
{'[6, 2, 6, 5, 0, 5, 0, 0, 0, 0, 29, 9, 0, 1, 1, 0, 0, 0]' : 0.203977}
{'[6, 2, 6, 5, 0, 5, 0, 0, 0, 0, 29, 9, 0, 1, 1, 0, 0, 0]' : 0.204089}
{'[6, 2, 6, 5, 0, 5, 0, 0, 0, 0, 29, 9, 0, 1, 1, 0, 0, 0]' : 0.203989}
{'[6, 2, 6, 5, 0, 5, 0, 0, 0, 0, 29, 9, 0, 1, 1, 0, 0, 0]' : 0.203708}
{'[6, 2, 6, 5, 0, 5, 0, 0, 0, 0, 29, 9, 0, 1, 1, 0, 0, 0]' : 0.203833}
{'[6, 2, 6, 5, 0, 5, 0, 0, 0, 0, 29, 9, 0, 1, 1, 0, 0, 0]' : 0.203726}
{'[6, 2, 6, 5, 0, 5, 0, 0, 0, 0, 29, 9, 0, 1, 1, 0, 0, 0]' : 0.2041}
{'[6, 2, 6, 5, 0, 5, 0, 0, 0, 0, 29, 9, 0, 1, 1, 0, 0, 0]' : 0.204191}
{'[6, 2, 6, 5, 0, 5, 0, 0, 0, 0, 29, 9, 0, 1, 1, 0, 0, 0]' : 0.203977}
{'[6, 2, 6, 5, 0, 5, 0, 0, 0, 0, 29, 9, 0, 1, 1, 0, 0, 0]' : 0.20379}
{'[6, 2, 6, 5, 0, 5, 0, 0, 0, 0, 29, 9, 0, 1, 1, 0, 0, 0]' : 0.203971}
{'[6, 2, 6, 5, 0, 5, 0, 0, 0, 0, 29, 9, 0, 1, 1, 0, 0, 0]' : 0.203835}
{'[6, 2, 6, 5, 0, 5, 0, 0, 0, 0, 29, 9, 0, 1, 1, 0, 0, 0]' : 0.204249}
{'[6, 2, 6, 5, 0, 5, 0, 0, 0, 0, 29, 9, 0, 1, 1, 0, 0, 0]' : 0.203867}
{'[6, 2, 6, 5, 0, 5, 0, 0, 0, 0, 29, 9, 0, 1, 1, 0, 0, 0]' : 0.203814}
{'[6, 2, 6, 5, 0, 5, 0, 0, 0, 0, 29, 9, 0, 1, 1, 0, 0, 0]' : 0.203778}
{'[6, 2, 6, 5, 0, 5, 0, 0, 0, 0, 29, 9, 0, 1, 1, 0, 0, 0]' : 0.204082}
{'[6, 2, 6, 5, 0, 5, 0, 0, 0, 0, 29, 9, 0, 1, 1, 0, 0, 0]' : 0.20403}
{'[6, 2, 6, 5, 0, 5, 0, 0, 0, 0, 29, 9, 0, 1, 1, 0, 0, 0]' : 0.204031}
{'[6, 2, 6, 5, 0, 5, 0, 0, 0, 0, 29, 9, 0, 1, 1, 0, 0, 0]' : 0.204}
{'[6, 2, 6, 5, 0, 5, 0, 0, 0, 0, 29, 9, 0, 1, 1, 0, 0, 0]' : 0.203865}
{'[6, 2, 6, 5, 0, 5, 0, 0, 0, 0, 29, 9, 0, 1, 1, 0, 0, 0]' : 0.203803}
{'[6, 2, 6, 5, 0, 5, 0, 0, 0, 0, 29, 9, 0, 1, 1, 0, 0, 0]' : 0.20381}
{'[6, 2, 6, 5, 0, 5, 0, 0, 0, 0, 29, 9, 0, 1, 1, 0, 0, 0]' : 0.204295}
{'[6, 2, 6, 5, 0, 5, 0, 0, 0, 0, 29, 9, 0, 1, 1, 0, 0, 0]' : 0.203795}

out:
 ["{'[6, 2, 6, 5, 0, 5, 0, 0, 0, 0, 29, 9, 0, 1, 1, 0, 0, 0]' : 0.242162}", "{'[6, 2, 6, 5, 0, 5, 0, 0, 0, 0, 29, 9, 0, 1, 1, 0, 0, 0]' : 0.24199}", "{'[6, 2, 6, 5, 0, 5, 0, 0, 0, 0, 29, 9, 0, 1, 1, 0, 0, 0]' : 0.239365}", "{'[6, 2, 6, 5, 0, 5, 0, 0, 0, 0, 29, 9, 0, 1, 1, 0, 0, 0]' : 0.204882}", "{'[6, 2, 6, 5, 0, 5, 0, 0, 0, 0, 29, 9, 0, 1, 1, 0, 0, 0]' : 0.203774}", "{'[6, 2, 6, 5, 0, 5, 0, 0, 0, 0, 29, 9, 0, 1, 1, 0, 0, 0]' : 0.203977}", "{'[6, 2, 6, 5, 0, 5, 0, 0, 0, 0, 29, 9, 0, 1, 1, 0, 0, 0]' : 0.204089}", "{'[6, 2, 6, 5, 0, 5, 0, 0, 0, 0, 29, 9, 0, 1, 1, 0, 0, 0]' : 0.203989}", "{'[6, 2, 6, 5, 0, 5, 0, 0, 0, 0, 29, 9, 0, 1, 1, 0, 0, 0]' : 0.203708}", "{'[6, 2, 6, 5, 0, 5, 0, 0, 0, 0, 29, 9, 0, 1, 1, 0, 0, 0]' : 0.203833}", "{'[6, 2, 6, 5, 0, 5, 0, 0, 0, 0, 29, 9, 0, 1, 1, 0, 0, 0]' : 0.203726}", "{'[6, 2, 6, 5, 0, 5, 0, 0, 0, 0, 29, 9, 0, 1, 1, 0, 0, 0]' : 0.2041}", "{'[6, 2, 6, 5, 0, 5, 0, 0, 0, 0, 29, 9, 0, 1, 1, 0, 0, 0]' : 0.204191}", "{'[6, 2, 6, 5, 0, 5, 0, 0, 0, 0, 29, 9, 0, 1, 1, 0, 0, 0]' : 0.203977}", "{'[6, 2, 6, 5, 0, 5, 0, 0, 0, 0, 29, 9, 0, 1, 1, 0, 0, 0]' : 0.20379}", "{'[6, 2, 6, 5, 0, 5, 0, 0, 0, 0, 29, 9, 0, 1, 1, 0, 0, 0]' : 0.203971}", "{'[6, 2, 6, 5, 0, 5, 0, 0, 0, 0, 29, 9, 0, 1, 1, 0, 0, 0]' : 0.203835}", "{'[6, 2, 6, 5, 0, 5, 0, 0, 0, 0, 29, 9, 0, 1, 1, 0, 0, 0]' : 0.204249}", "{'[6, 2, 6, 5, 0, 5, 0, 0, 0, 0, 29, 9, 0, 1, 1, 0, 0, 0]' : 0.203867}", "{'[6, 2, 6, 5, 0, 5, 0, 0, 0, 0, 29, 9, 0, 1, 1, 0, 0, 0]' : 0.203814}", "{'[6, 2, 6, 5, 0, 5, 0, 0, 0, 0, 29, 9, 0, 1, 1, 0, 0, 0]' : 0.203778}", "{'[6, 2, 6, 5, 0, 5, 0, 0, 0, 0, 29, 9, 0, 1, 1, 0, 0, 0]' : 0.204082}", "{'[6, 2, 6, 5, 0, 5, 0, 0, 0, 0, 29, 9, 0, 1, 1, 0, 0, 0]' : 0.20403}", "{'[6, 2, 6, 5, 0, 5, 0, 0, 0, 0, 29, 9, 0, 1, 1, 0, 0, 0]' : 0.204031}", "{'[6, 2, 6, 5, 0, 5, 0, 0, 0, 0, 29, 9, 0, 1, 1, 0, 0, 0]' : 0.204}", "{'[6, 2, 6, 5, 0, 5, 0, 0, 0, 0, 29, 9, 0, 1, 1, 0, 0, 0]' : 0.203865}", "{'[6, 2, 6, 5, 0, 5, 0, 0, 0, 0, 29, 9, 0, 1, 1, 0, 0, 0]' : 0.203803}", "{'[6, 2, 6, 5, 0, 5, 0, 0, 0, 0, 29, 9, 0, 1, 1, 0, 0, 0]' : 0.20381}", "{'[6, 2, 6, 5, 0, 5, 0, 0, 0, 0, 29, 9, 0, 1, 1, 0, 0, 0]' : 0.204295}", "{'[6, 2, 6, 5, 0, 5, 0, 0, 0, 0, 29, 9, 0, 1, 1, 0, 0, 0]' : 0.203795}"]
returning from 'run': {'[6, 2, 6, 5, 0, 5, 0, 0, 0, 0, 29, 9, 0, 1, 1, 0, 0, 0]': ([0.242162, 0.24199, 0.239365, 0.204882, 0.203774, 0.203977, 0.204089, 0.203989, 0.203708, 0.203833, 0.203726, 0.2041, 0.204191, 0.203977, 0.20379, 0.203971, 0.203835, 0.204249, 0.203867, 0.203814, 0.203778, 0.204082, 0.20403, 0.204031, 0.204, 0.203865, 0.203803, 0.20381, 0.204295, 0.203795], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 2, 6, 5, 0, 5, 0, 0, 0, 0, 29, 9, 0, 1, 1, 0, 0, 0]': ([0.242162, 0.24199, 0.239365, 0.204882, 0.203774, 0.203977, 0.204089, 0.203989, 0.203708, 0.203833, 0.203726, 0.2041, 0.204191, 0.203977, 0.20379, 0.203971, 0.203835, 0.204249, 0.203867, 0.203814, 0.203778, 0.204082, 0.20403, 0.204031, 0.204, 0.203865, 0.203803, 0.20381, 0.204295, 0.203795], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	5
        Additions: 		4819
        Multiplications: 	1452
        Divisions: 		0
        Logical: 		0
        Reads: 			7461
        Writes: 		800
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest2.exe __orio_perftest2.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest2.exe  
Program Test Output: 
{'[3, 1, 1, 1, 6, 1, 0, 0, 24, 0, 19, 0, 2, 0, 0, 0, 0, 1]' : 0.18491}
{'[3, 1, 1, 1, 6, 1, 0, 0, 24, 0, 19, 0, 2, 0, 0, 0, 0, 1]' : 0.183538}
{'[3, 1, 1, 1, 6, 1, 0, 0, 24, 0, 19, 0, 2, 0, 0, 0, 0, 1]' : 0.183974}
{'[3, 1, 1, 1, 6, 1, 0, 0, 24, 0, 19, 0, 2, 0, 0, 0, 0, 1]' : 0.183305}
{'[3, 1, 1, 1, 6, 1, 0, 0, 24, 0, 19, 0, 2, 0, 0, 0, 0, 1]' : 0.182428}
{'[3, 1, 1, 1, 6, 1, 0, 0, 24, 0, 19, 0, 2, 0, 0, 0, 0, 1]' : 0.183522}
{'[3, 1, 1, 1, 6, 1, 0, 0, 24, 0, 19, 0, 2, 0, 0, 0, 0, 1]' : 0.183392}
{'[3, 1, 1, 1, 6, 1, 0, 0, 24, 0, 19, 0, 2, 0, 0, 0, 0, 1]' : 0.184458}
{'[3, 1, 1, 1, 6, 1, 0, 0, 24, 0, 19, 0, 2, 0, 0, 0, 0, 1]' : 0.184869}
{'[3, 1, 1, 1, 6, 1, 0, 0, 24, 0, 19, 0, 2, 0, 0, 0, 0, 1]' : 0.184271}
{'[3, 1, 1, 1, 6, 1, 0, 0, 24, 0, 19, 0, 2, 0, 0, 0, 0, 1]' : 0.184342}
{'[3, 1, 1, 1, 6, 1, 0, 0, 24, 0, 19, 0, 2, 0, 0, 0, 0, 1]' : 0.184742}
{'[3, 1, 1, 1, 6, 1, 0, 0, 24, 0, 19, 0, 2, 0, 0, 0, 0, 1]' : 0.184243}
{'[3, 1, 1, 1, 6, 1, 0, 0, 24, 0, 19, 0, 2, 0, 0, 0, 0, 1]' : 0.184151}
{'[3, 1, 1, 1, 6, 1, 0, 0, 24, 0, 19, 0, 2, 0, 0, 0, 0, 1]' : 0.184235}
{'[3, 1, 1, 1, 6, 1, 0, 0, 24, 0, 19, 0, 2, 0, 0, 0, 0, 1]' : 0.183707}
{'[3, 1, 1, 1, 6, 1, 0, 0, 24, 0, 19, 0, 2, 0, 0, 0, 0, 1]' : 0.183876}
{'[3, 1, 1, 1, 6, 1, 0, 0, 24, 0, 19, 0, 2, 0, 0, 0, 0, 1]' : 0.184107}
{'[3, 1, 1, 1, 6, 1, 0, 0, 24, 0, 19, 0, 2, 0, 0, 0, 0, 1]' : 0.183875}
{'[3, 1, 1, 1, 6, 1, 0, 0, 24, 0, 19, 0, 2, 0, 0, 0, 0, 1]' : 0.184523}
{'[3, 1, 1, 1, 6, 1, 0, 0, 24, 0, 19, 0, 2, 0, 0, 0, 0, 1]' : 0.185245}
{'[3, 1, 1, 1, 6, 1, 0, 0, 24, 0, 19, 0, 2, 0, 0, 0, 0, 1]' : 0.183698}
{'[3, 1, 1, 1, 6, 1, 0, 0, 24, 0, 19, 0, 2, 0, 0, 0, 0, 1]' : 0.183997}
{'[3, 1, 1, 1, 6, 1, 0, 0, 24, 0, 19, 0, 2, 0, 0, 0, 0, 1]' : 0.184821}
{'[3, 1, 1, 1, 6, 1, 0, 0, 24, 0, 19, 0, 2, 0, 0, 0, 0, 1]' : 0.185811}
{'[3, 1, 1, 1, 6, 1, 0, 0, 24, 0, 19, 0, 2, 0, 0, 0, 0, 1]' : 0.184687}
{'[3, 1, 1, 1, 6, 1, 0, 0, 24, 0, 19, 0, 2, 0, 0, 0, 0, 1]' : 0.183923}
{'[3, 1, 1, 1, 6, 1, 0, 0, 24, 0, 19, 0, 2, 0, 0, 0, 0, 1]' : 0.184476}
{'[3, 1, 1, 1, 6, 1, 0, 0, 24, 0, 19, 0, 2, 0, 0, 0, 0, 1]' : 0.18388}
{'[3, 1, 1, 1, 6, 1, 0, 0, 24, 0, 19, 0, 2, 0, 0, 0, 0, 1]' : 0.184408}

out:
 ["{'[3, 1, 1, 1, 6, 1, 0, 0, 24, 0, 19, 0, 2, 0, 0, 0, 0, 1]' : 0.18491}", "{'[3, 1, 1, 1, 6, 1, 0, 0, 24, 0, 19, 0, 2, 0, 0, 0, 0, 1]' : 0.183538}", "{'[3, 1, 1, 1, 6, 1, 0, 0, 24, 0, 19, 0, 2, 0, 0, 0, 0, 1]' : 0.183974}", "{'[3, 1, 1, 1, 6, 1, 0, 0, 24, 0, 19, 0, 2, 0, 0, 0, 0, 1]' : 0.183305}", "{'[3, 1, 1, 1, 6, 1, 0, 0, 24, 0, 19, 0, 2, 0, 0, 0, 0, 1]' : 0.182428}", "{'[3, 1, 1, 1, 6, 1, 0, 0, 24, 0, 19, 0, 2, 0, 0, 0, 0, 1]' : 0.183522}", "{'[3, 1, 1, 1, 6, 1, 0, 0, 24, 0, 19, 0, 2, 0, 0, 0, 0, 1]' : 0.183392}", "{'[3, 1, 1, 1, 6, 1, 0, 0, 24, 0, 19, 0, 2, 0, 0, 0, 0, 1]' : 0.184458}", "{'[3, 1, 1, 1, 6, 1, 0, 0, 24, 0, 19, 0, 2, 0, 0, 0, 0, 1]' : 0.184869}", "{'[3, 1, 1, 1, 6, 1, 0, 0, 24, 0, 19, 0, 2, 0, 0, 0, 0, 1]' : 0.184271}", "{'[3, 1, 1, 1, 6, 1, 0, 0, 24, 0, 19, 0, 2, 0, 0, 0, 0, 1]' : 0.184342}", "{'[3, 1, 1, 1, 6, 1, 0, 0, 24, 0, 19, 0, 2, 0, 0, 0, 0, 1]' : 0.184742}", "{'[3, 1, 1, 1, 6, 1, 0, 0, 24, 0, 19, 0, 2, 0, 0, 0, 0, 1]' : 0.184243}", "{'[3, 1, 1, 1, 6, 1, 0, 0, 24, 0, 19, 0, 2, 0, 0, 0, 0, 1]' : 0.184151}", "{'[3, 1, 1, 1, 6, 1, 0, 0, 24, 0, 19, 0, 2, 0, 0, 0, 0, 1]' : 0.184235}", "{'[3, 1, 1, 1, 6, 1, 0, 0, 24, 0, 19, 0, 2, 0, 0, 0, 0, 1]' : 0.183707}", "{'[3, 1, 1, 1, 6, 1, 0, 0, 24, 0, 19, 0, 2, 0, 0, 0, 0, 1]' : 0.183876}", "{'[3, 1, 1, 1, 6, 1, 0, 0, 24, 0, 19, 0, 2, 0, 0, 0, 0, 1]' : 0.184107}", "{'[3, 1, 1, 1, 6, 1, 0, 0, 24, 0, 19, 0, 2, 0, 0, 0, 0, 1]' : 0.183875}", "{'[3, 1, 1, 1, 6, 1, 0, 0, 24, 0, 19, 0, 2, 0, 0, 0, 0, 1]' : 0.184523}", "{'[3, 1, 1, 1, 6, 1, 0, 0, 24, 0, 19, 0, 2, 0, 0, 0, 0, 1]' : 0.185245}", "{'[3, 1, 1, 1, 6, 1, 0, 0, 24, 0, 19, 0, 2, 0, 0, 0, 0, 1]' : 0.183698}", "{'[3, 1, 1, 1, 6, 1, 0, 0, 24, 0, 19, 0, 2, 0, 0, 0, 0, 1]' : 0.183997}", "{'[3, 1, 1, 1, 6, 1, 0, 0, 24, 0, 19, 0, 2, 0, 0, 0, 0, 1]' : 0.184821}", "{'[3, 1, 1, 1, 6, 1, 0, 0, 24, 0, 19, 0, 2, 0, 0, 0, 0, 1]' : 0.185811}", "{'[3, 1, 1, 1, 6, 1, 0, 0, 24, 0, 19, 0, 2, 0, 0, 0, 0, 1]' : 0.184687}", "{'[3, 1, 1, 1, 6, 1, 0, 0, 24, 0, 19, 0, 2, 0, 0, 0, 0, 1]' : 0.183923}", "{'[3, 1, 1, 1, 6, 1, 0, 0, 24, 0, 19, 0, 2, 0, 0, 0, 0, 1]' : 0.184476}", "{'[3, 1, 1, 1, 6, 1, 0, 0, 24, 0, 19, 0, 2, 0, 0, 0, 0, 1]' : 0.18388}", "{'[3, 1, 1, 1, 6, 1, 0, 0, 24, 0, 19, 0, 2, 0, 0, 0, 0, 1]' : 0.184408}"]
returning from 'run': {'[3, 1, 1, 1, 6, 1, 0, 0, 24, 0, 19, 0, 2, 0, 0, 0, 0, 1]': ([0.18491, 0.183538, 0.183974, 0.183305, 0.182428, 0.183522, 0.183392, 0.184458, 0.184869, 0.184271, 0.184342, 0.184742, 0.184243, 0.184151, 0.184235, 0.183707, 0.183876, 0.184107, 0.183875, 0.184523, 0.185245, 0.183698, 0.183997, 0.184821, 0.185811, 0.184687, 0.183923, 0.184476, 0.18388, 0.184408], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 1, 1, 1, 6, 1, 0, 0, 24, 0, 19, 0, 2, 0, 0, 0, 0, 1]': ([0.18491, 0.183538, 0.183974, 0.183305, 0.182428, 0.183522, 0.183392, 0.184458, 0.184869, 0.184271, 0.184342, 0.184742, 0.184243, 0.184151, 0.184235, 0.183707, 0.183876, 0.184107, 0.183875, 0.184523, 0.185245, 0.183698, 0.183997, 0.184821, 0.185811, 0.184687, 0.183923, 0.184476, 0.18388, 0.184408], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	38
        Max loop nest depth: 	6
        Additions: 		853
        Multiplications: 	340
        Divisions: 		0
        Logical: 		0
        Reads: 			1798
        Writes: 		345
        Comparisons:		38
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest3.exe __orio_perftest3.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest3.exe  
Program Test Output: 
{'[6, 2, 0, 5, 6, 1, 0, 1, 3, 8, 0, 3, 0, 1, 1, 1, 1, 0]' : 0.171}
{'[6, 2, 0, 5, 6, 1, 0, 1, 3, 8, 0, 3, 0, 1, 1, 1, 1, 0]' : 0.170849}
{'[6, 2, 0, 5, 6, 1, 0, 1, 3, 8, 0, 3, 0, 1, 1, 1, 1, 0]' : 0.170764}
{'[6, 2, 0, 5, 6, 1, 0, 1, 3, 8, 0, 3, 0, 1, 1, 1, 1, 0]' : 0.161361}
{'[6, 2, 0, 5, 6, 1, 0, 1, 3, 8, 0, 3, 0, 1, 1, 1, 1, 0]' : 0.146624}
{'[6, 2, 0, 5, 6, 1, 0, 1, 3, 8, 0, 3, 0, 1, 1, 1, 1, 0]' : 0.146272}
{'[6, 2, 0, 5, 6, 1, 0, 1, 3, 8, 0, 3, 0, 1, 1, 1, 1, 0]' : 0.14613}
{'[6, 2, 0, 5, 6, 1, 0, 1, 3, 8, 0, 3, 0, 1, 1, 1, 1, 0]' : 0.146541}
{'[6, 2, 0, 5, 6, 1, 0, 1, 3, 8, 0, 3, 0, 1, 1, 1, 1, 0]' : 0.146171}
{'[6, 2, 0, 5, 6, 1, 0, 1, 3, 8, 0, 3, 0, 1, 1, 1, 1, 0]' : 0.146392}
{'[6, 2, 0, 5, 6, 1, 0, 1, 3, 8, 0, 3, 0, 1, 1, 1, 1, 0]' : 0.14669}
{'[6, 2, 0, 5, 6, 1, 0, 1, 3, 8, 0, 3, 0, 1, 1, 1, 1, 0]' : 0.146524}
{'[6, 2, 0, 5, 6, 1, 0, 1, 3, 8, 0, 3, 0, 1, 1, 1, 1, 0]' : 0.146224}
{'[6, 2, 0, 5, 6, 1, 0, 1, 3, 8, 0, 3, 0, 1, 1, 1, 1, 0]' : 0.1462}
{'[6, 2, 0, 5, 6, 1, 0, 1, 3, 8, 0, 3, 0, 1, 1, 1, 1, 0]' : 0.146673}
{'[6, 2, 0, 5, 6, 1, 0, 1, 3, 8, 0, 3, 0, 1, 1, 1, 1, 0]' : 0.146042}
{'[6, 2, 0, 5, 6, 1, 0, 1, 3, 8, 0, 3, 0, 1, 1, 1, 1, 0]' : 0.146177}
{'[6, 2, 0, 5, 6, 1, 0, 1, 3, 8, 0, 3, 0, 1, 1, 1, 1, 0]' : 0.146803}
{'[6, 2, 0, 5, 6, 1, 0, 1, 3, 8, 0, 3, 0, 1, 1, 1, 1, 0]' : 0.146143}
{'[6, 2, 0, 5, 6, 1, 0, 1, 3, 8, 0, 3, 0, 1, 1, 1, 1, 0]' : 0.146203}
{'[6, 2, 0, 5, 6, 1, 0, 1, 3, 8, 0, 3, 0, 1, 1, 1, 1, 0]' : 0.146244}
{'[6, 2, 0, 5, 6, 1, 0, 1, 3, 8, 0, 3, 0, 1, 1, 1, 1, 0]' : 0.146037}
{'[6, 2, 0, 5, 6, 1, 0, 1, 3, 8, 0, 3, 0, 1, 1, 1, 1, 0]' : 0.146214}
{'[6, 2, 0, 5, 6, 1, 0, 1, 3, 8, 0, 3, 0, 1, 1, 1, 1, 0]' : 0.146172}
{'[6, 2, 0, 5, 6, 1, 0, 1, 3, 8, 0, 3, 0, 1, 1, 1, 1, 0]' : 0.146712}
{'[6, 2, 0, 5, 6, 1, 0, 1, 3, 8, 0, 3, 0, 1, 1, 1, 1, 0]' : 0.146486}
{'[6, 2, 0, 5, 6, 1, 0, 1, 3, 8, 0, 3, 0, 1, 1, 1, 1, 0]' : 0.146907}
{'[6, 2, 0, 5, 6, 1, 0, 1, 3, 8, 0, 3, 0, 1, 1, 1, 1, 0]' : 0.146396}
{'[6, 2, 0, 5, 6, 1, 0, 1, 3, 8, 0, 3, 0, 1, 1, 1, 1, 0]' : 0.146098}
{'[6, 2, 0, 5, 6, 1, 0, 1, 3, 8, 0, 3, 0, 1, 1, 1, 1, 0]' : 0.146181}

out:
 ["{'[6, 2, 0, 5, 6, 1, 0, 1, 3, 8, 0, 3, 0, 1, 1, 1, 1, 0]' : 0.171}", "{'[6, 2, 0, 5, 6, 1, 0, 1, 3, 8, 0, 3, 0, 1, 1, 1, 1, 0]' : 0.170849}", "{'[6, 2, 0, 5, 6, 1, 0, 1, 3, 8, 0, 3, 0, 1, 1, 1, 1, 0]' : 0.170764}", "{'[6, 2, 0, 5, 6, 1, 0, 1, 3, 8, 0, 3, 0, 1, 1, 1, 1, 0]' : 0.161361}", "{'[6, 2, 0, 5, 6, 1, 0, 1, 3, 8, 0, 3, 0, 1, 1, 1, 1, 0]' : 0.146624}", "{'[6, 2, 0, 5, 6, 1, 0, 1, 3, 8, 0, 3, 0, 1, 1, 1, 1, 0]' : 0.146272}", "{'[6, 2, 0, 5, 6, 1, 0, 1, 3, 8, 0, 3, 0, 1, 1, 1, 1, 0]' : 0.14613}", "{'[6, 2, 0, 5, 6, 1, 0, 1, 3, 8, 0, 3, 0, 1, 1, 1, 1, 0]' : 0.146541}", "{'[6, 2, 0, 5, 6, 1, 0, 1, 3, 8, 0, 3, 0, 1, 1, 1, 1, 0]' : 0.146171}", "{'[6, 2, 0, 5, 6, 1, 0, 1, 3, 8, 0, 3, 0, 1, 1, 1, 1, 0]' : 0.146392}", "{'[6, 2, 0, 5, 6, 1, 0, 1, 3, 8, 0, 3, 0, 1, 1, 1, 1, 0]' : 0.14669}", "{'[6, 2, 0, 5, 6, 1, 0, 1, 3, 8, 0, 3, 0, 1, 1, 1, 1, 0]' : 0.146524}", "{'[6, 2, 0, 5, 6, 1, 0, 1, 3, 8, 0, 3, 0, 1, 1, 1, 1, 0]' : 0.146224}", "{'[6, 2, 0, 5, 6, 1, 0, 1, 3, 8, 0, 3, 0, 1, 1, 1, 1, 0]' : 0.1462}", "{'[6, 2, 0, 5, 6, 1, 0, 1, 3, 8, 0, 3, 0, 1, 1, 1, 1, 0]' : 0.146673}", "{'[6, 2, 0, 5, 6, 1, 0, 1, 3, 8, 0, 3, 0, 1, 1, 1, 1, 0]' : 0.146042}", "{'[6, 2, 0, 5, 6, 1, 0, 1, 3, 8, 0, 3, 0, 1, 1, 1, 1, 0]' : 0.146177}", "{'[6, 2, 0, 5, 6, 1, 0, 1, 3, 8, 0, 3, 0, 1, 1, 1, 1, 0]' : 0.146803}", "{'[6, 2, 0, 5, 6, 1, 0, 1, 3, 8, 0, 3, 0, 1, 1, 1, 1, 0]' : 0.146143}", "{'[6, 2, 0, 5, 6, 1, 0, 1, 3, 8, 0, 3, 0, 1, 1, 1, 1, 0]' : 0.146203}", "{'[6, 2, 0, 5, 6, 1, 0, 1, 3, 8, 0, 3, 0, 1, 1, 1, 1, 0]' : 0.146244}", "{'[6, 2, 0, 5, 6, 1, 0, 1, 3, 8, 0, 3, 0, 1, 1, 1, 1, 0]' : 0.146037}", "{'[6, 2, 0, 5, 6, 1, 0, 1, 3, 8, 0, 3, 0, 1, 1, 1, 1, 0]' : 0.146214}", "{'[6, 2, 0, 5, 6, 1, 0, 1, 3, 8, 0, 3, 0, 1, 1, 1, 1, 0]' : 0.146172}", "{'[6, 2, 0, 5, 6, 1, 0, 1, 3, 8, 0, 3, 0, 1, 1, 1, 1, 0]' : 0.146712}", "{'[6, 2, 0, 5, 6, 1, 0, 1, 3, 8, 0, 3, 0, 1, 1, 1, 1, 0]' : 0.146486}", "{'[6, 2, 0, 5, 6, 1, 0, 1, 3, 8, 0, 3, 0, 1, 1, 1, 1, 0]' : 0.146907}", "{'[6, 2, 0, 5, 6, 1, 0, 1, 3, 8, 0, 3, 0, 1, 1, 1, 1, 0]' : 0.146396}", "{'[6, 2, 0, 5, 6, 1, 0, 1, 3, 8, 0, 3, 0, 1, 1, 1, 1, 0]' : 0.146098}", "{'[6, 2, 0, 5, 6, 1, 0, 1, 3, 8, 0, 3, 0, 1, 1, 1, 1, 0]' : 0.146181}"]
returning from 'run': {'[6, 2, 0, 5, 6, 1, 0, 1, 3, 8, 0, 3, 0, 1, 1, 1, 1, 0]': ([0.171, 0.170849, 0.170764, 0.161361, 0.146624, 0.146272, 0.14613, 0.146541, 0.146171, 0.146392, 0.14669, 0.146524, 0.146224, 0.1462, 0.146673, 0.146042, 0.146177, 0.146803, 0.146143, 0.146203, 0.146244, 0.146037, 0.146214, 0.146172, 0.146712, 0.146486, 0.146907, 0.146396, 0.146098, 0.146181], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 2, 0, 5, 6, 1, 0, 1, 3, 8, 0, 3, 0, 1, 1, 1, 1, 0]': ([0.171, 0.170849, 0.170764, 0.161361, 0.146624, 0.146272, 0.14613, 0.146541, 0.146171, 0.146392, 0.14669, 0.146524, 0.146224, 0.1462, 0.146673, 0.146042, 0.146177, 0.146803, 0.146143, 0.146203, 0.146244, 0.146037, 0.146214, 0.146172, 0.146712, 0.146486, 0.146907, 0.146396, 0.146098, 0.146181], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	34
        Max loop nest depth: 	6
        Additions: 		1849
        Multiplications: 	512
        Divisions: 		0
        Logical: 		0
        Reads: 			3044
        Writes: 		359
        Comparisons:		34
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest4.exe __orio_perftest4.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest4.exe  
Program Test Output: 
{'[1, 0, 1, 2, 2, 3, 0, 1, 9, 6, 22, 0, 0, 0, 1, 0, 0, 0]' : 0.249905}
{'[1, 0, 1, 2, 2, 3, 0, 1, 9, 6, 22, 0, 0, 0, 1, 0, 0, 0]' : 0.24867}
{'[1, 0, 1, 2, 2, 3, 0, 1, 9, 6, 22, 0, 0, 0, 1, 0, 0, 0]' : 0.211925}
{'[1, 0, 1, 2, 2, 3, 0, 1, 9, 6, 22, 0, 0, 0, 1, 0, 0, 0]' : 0.210027}
{'[1, 0, 1, 2, 2, 3, 0, 1, 9, 6, 22, 0, 0, 0, 1, 0, 0, 0]' : 0.210055}
{'[1, 0, 1, 2, 2, 3, 0, 1, 9, 6, 22, 0, 0, 0, 1, 0, 0, 0]' : 0.210719}
{'[1, 0, 1, 2, 2, 3, 0, 1, 9, 6, 22, 0, 0, 0, 1, 0, 0, 0]' : 0.210394}
{'[1, 0, 1, 2, 2, 3, 0, 1, 9, 6, 22, 0, 0, 0, 1, 0, 0, 0]' : 0.21026}
{'[1, 0, 1, 2, 2, 3, 0, 1, 9, 6, 22, 0, 0, 0, 1, 0, 0, 0]' : 0.20996}
{'[1, 0, 1, 2, 2, 3, 0, 1, 9, 6, 22, 0, 0, 0, 1, 0, 0, 0]' : 0.210433}
{'[1, 0, 1, 2, 2, 3, 0, 1, 9, 6, 22, 0, 0, 0, 1, 0, 0, 0]' : 0.210783}
{'[1, 0, 1, 2, 2, 3, 0, 1, 9, 6, 22, 0, 0, 0, 1, 0, 0, 0]' : 0.210392}
{'[1, 0, 1, 2, 2, 3, 0, 1, 9, 6, 22, 0, 0, 0, 1, 0, 0, 0]' : 0.210175}
{'[1, 0, 1, 2, 2, 3, 0, 1, 9, 6, 22, 0, 0, 0, 1, 0, 0, 0]' : 0.210269}
{'[1, 0, 1, 2, 2, 3, 0, 1, 9, 6, 22, 0, 0, 0, 1, 0, 0, 0]' : 0.210267}
{'[1, 0, 1, 2, 2, 3, 0, 1, 9, 6, 22, 0, 0, 0, 1, 0, 0, 0]' : 0.210847}
{'[1, 0, 1, 2, 2, 3, 0, 1, 9, 6, 22, 0, 0, 0, 1, 0, 0, 0]' : 0.210435}
{'[1, 0, 1, 2, 2, 3, 0, 1, 9, 6, 22, 0, 0, 0, 1, 0, 0, 0]' : 0.210406}
{'[1, 0, 1, 2, 2, 3, 0, 1, 9, 6, 22, 0, 0, 0, 1, 0, 0, 0]' : 0.210195}
{'[1, 0, 1, 2, 2, 3, 0, 1, 9, 6, 22, 0, 0, 0, 1, 0, 0, 0]' : 0.210233}
{'[1, 0, 1, 2, 2, 3, 0, 1, 9, 6, 22, 0, 0, 0, 1, 0, 0, 0]' : 0.210549}
{'[1, 0, 1, 2, 2, 3, 0, 1, 9, 6, 22, 0, 0, 0, 1, 0, 0, 0]' : 0.210905}
{'[1, 0, 1, 2, 2, 3, 0, 1, 9, 6, 22, 0, 0, 0, 1, 0, 0, 0]' : 0.210584}
{'[1, 0, 1, 2, 2, 3, 0, 1, 9, 6, 22, 0, 0, 0, 1, 0, 0, 0]' : 0.210299}
{'[1, 0, 1, 2, 2, 3, 0, 1, 9, 6, 22, 0, 0, 0, 1, 0, 0, 0]' : 0.210576}
{'[1, 0, 1, 2, 2, 3, 0, 1, 9, 6, 22, 0, 0, 0, 1, 0, 0, 0]' : 0.210419}
{'[1, 0, 1, 2, 2, 3, 0, 1, 9, 6, 22, 0, 0, 0, 1, 0, 0, 0]' : 0.210268}
{'[1, 0, 1, 2, 2, 3, 0, 1, 9, 6, 22, 0, 0, 0, 1, 0, 0, 0]' : 0.21007}
{'[1, 0, 1, 2, 2, 3, 0, 1, 9, 6, 22, 0, 0, 0, 1, 0, 0, 0]' : 0.210158}
{'[1, 0, 1, 2, 2, 3, 0, 1, 9, 6, 22, 0, 0, 0, 1, 0, 0, 0]' : 0.210429}

out:
 ["{'[1, 0, 1, 2, 2, 3, 0, 1, 9, 6, 22, 0, 0, 0, 1, 0, 0, 0]' : 0.249905}", "{'[1, 0, 1, 2, 2, 3, 0, 1, 9, 6, 22, 0, 0, 0, 1, 0, 0, 0]' : 0.24867}", "{'[1, 0, 1, 2, 2, 3, 0, 1, 9, 6, 22, 0, 0, 0, 1, 0, 0, 0]' : 0.211925}", "{'[1, 0, 1, 2, 2, 3, 0, 1, 9, 6, 22, 0, 0, 0, 1, 0, 0, 0]' : 0.210027}", "{'[1, 0, 1, 2, 2, 3, 0, 1, 9, 6, 22, 0, 0, 0, 1, 0, 0, 0]' : 0.210055}", "{'[1, 0, 1, 2, 2, 3, 0, 1, 9, 6, 22, 0, 0, 0, 1, 0, 0, 0]' : 0.210719}", "{'[1, 0, 1, 2, 2, 3, 0, 1, 9, 6, 22, 0, 0, 0, 1, 0, 0, 0]' : 0.210394}", "{'[1, 0, 1, 2, 2, 3, 0, 1, 9, 6, 22, 0, 0, 0, 1, 0, 0, 0]' : 0.21026}", "{'[1, 0, 1, 2, 2, 3, 0, 1, 9, 6, 22, 0, 0, 0, 1, 0, 0, 0]' : 0.20996}", "{'[1, 0, 1, 2, 2, 3, 0, 1, 9, 6, 22, 0, 0, 0, 1, 0, 0, 0]' : 0.210433}", "{'[1, 0, 1, 2, 2, 3, 0, 1, 9, 6, 22, 0, 0, 0, 1, 0, 0, 0]' : 0.210783}", "{'[1, 0, 1, 2, 2, 3, 0, 1, 9, 6, 22, 0, 0, 0, 1, 0, 0, 0]' : 0.210392}", "{'[1, 0, 1, 2, 2, 3, 0, 1, 9, 6, 22, 0, 0, 0, 1, 0, 0, 0]' : 0.210175}", "{'[1, 0, 1, 2, 2, 3, 0, 1, 9, 6, 22, 0, 0, 0, 1, 0, 0, 0]' : 0.210269}", "{'[1, 0, 1, 2, 2, 3, 0, 1, 9, 6, 22, 0, 0, 0, 1, 0, 0, 0]' : 0.210267}", "{'[1, 0, 1, 2, 2, 3, 0, 1, 9, 6, 22, 0, 0, 0, 1, 0, 0, 0]' : 0.210847}", "{'[1, 0, 1, 2, 2, 3, 0, 1, 9, 6, 22, 0, 0, 0, 1, 0, 0, 0]' : 0.210435}", "{'[1, 0, 1, 2, 2, 3, 0, 1, 9, 6, 22, 0, 0, 0, 1, 0, 0, 0]' : 0.210406}", "{'[1, 0, 1, 2, 2, 3, 0, 1, 9, 6, 22, 0, 0, 0, 1, 0, 0, 0]' : 0.210195}", "{'[1, 0, 1, 2, 2, 3, 0, 1, 9, 6, 22, 0, 0, 0, 1, 0, 0, 0]' : 0.210233}", "{'[1, 0, 1, 2, 2, 3, 0, 1, 9, 6, 22, 0, 0, 0, 1, 0, 0, 0]' : 0.210549}", "{'[1, 0, 1, 2, 2, 3, 0, 1, 9, 6, 22, 0, 0, 0, 1, 0, 0, 0]' : 0.210905}", "{'[1, 0, 1, 2, 2, 3, 0, 1, 9, 6, 22, 0, 0, 0, 1, 0, 0, 0]' : 0.210584}", "{'[1, 0, 1, 2, 2, 3, 0, 1, 9, 6, 22, 0, 0, 0, 1, 0, 0, 0]' : 0.210299}", "{'[1, 0, 1, 2, 2, 3, 0, 1, 9, 6, 22, 0, 0, 0, 1, 0, 0, 0]' : 0.210576}", "{'[1, 0, 1, 2, 2, 3, 0, 1, 9, 6, 22, 0, 0, 0, 1, 0, 0, 0]' : 0.210419}", "{'[1, 0, 1, 2, 2, 3, 0, 1, 9, 6, 22, 0, 0, 0, 1, 0, 0, 0]' : 0.210268}", "{'[1, 0, 1, 2, 2, 3, 0, 1, 9, 6, 22, 0, 0, 0, 1, 0, 0, 0]' : 0.21007}", "{'[1, 0, 1, 2, 2, 3, 0, 1, 9, 6, 22, 0, 0, 0, 1, 0, 0, 0]' : 0.210158}", "{'[1, 0, 1, 2, 2, 3, 0, 1, 9, 6, 22, 0, 0, 0, 1, 0, 0, 0]' : 0.210429}"]
returning from 'run': {'[1, 0, 1, 2, 2, 3, 0, 1, 9, 6, 22, 0, 0, 0, 1, 0, 0, 0]': ([0.249905, 0.24867, 0.211925, 0.210027, 0.210055, 0.210719, 0.210394, 0.21026, 0.20996, 0.210433, 0.210783, 0.210392, 0.210175, 0.210269, 0.210267, 0.210847, 0.210435, 0.210406, 0.210195, 0.210233, 0.210549, 0.210905, 0.210584, 0.210299, 0.210576, 0.210419, 0.210268, 0.21007, 0.210158, 0.210429], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 1, 2, 2, 3, 0, 1, 9, 6, 22, 0, 0, 0, 1, 0, 0, 0]': ([0.249905, 0.24867, 0.211925, 0.210027, 0.210055, 0.210719, 0.210394, 0.21026, 0.20996, 0.210433, 0.210783, 0.210392, 0.210175, 0.210269, 0.210267, 0.210847, 0.210435, 0.210406, 0.210195, 0.210233, 0.210549, 0.210905, 0.210584, 0.210299, 0.210576, 0.210419, 0.210268, 0.21007, 0.210158, 0.210429], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	137
        Max loop nest depth: 	5
        Additions: 		8832
        Multiplications: 	2418
        Divisions: 		0
        Logical: 		0
        Reads: 			13603
        Writes: 		1578
        Comparisons:		137
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest5.exe __orio_perftest5.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest5.exe  
Program Test Output: 
{'[6, 0, 0, 5, 5, 6, 0, 1, 0, 29, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.253404}
{'[6, 0, 0, 5, 5, 6, 0, 1, 0, 29, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.258618}
{'[6, 0, 0, 5, 5, 6, 0, 1, 0, 29, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.259459}
{'[6, 0, 0, 5, 5, 6, 0, 1, 0, 29, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.254717}
{'[6, 0, 0, 5, 5, 6, 0, 1, 0, 29, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.25312}
{'[6, 0, 0, 5, 5, 6, 0, 1, 0, 29, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.262867}
{'[6, 0, 0, 5, 5, 6, 0, 1, 0, 29, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.252923}
{'[6, 0, 0, 5, 5, 6, 0, 1, 0, 29, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.255869}
{'[6, 0, 0, 5, 5, 6, 0, 1, 0, 29, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.255205}
{'[6, 0, 0, 5, 5, 6, 0, 1, 0, 29, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.255004}
{'[6, 0, 0, 5, 5, 6, 0, 1, 0, 29, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.256475}
{'[6, 0, 0, 5, 5, 6, 0, 1, 0, 29, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.260353}
{'[6, 0, 0, 5, 5, 6, 0, 1, 0, 29, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.254691}
{'[6, 0, 0, 5, 5, 6, 0, 1, 0, 29, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.259196}
{'[6, 0, 0, 5, 5, 6, 0, 1, 0, 29, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.25862}
{'[6, 0, 0, 5, 5, 6, 0, 1, 0, 29, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.254142}
{'[6, 0, 0, 5, 5, 6, 0, 1, 0, 29, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.254979}
{'[6, 0, 0, 5, 5, 6, 0, 1, 0, 29, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.260536}
{'[6, 0, 0, 5, 5, 6, 0, 1, 0, 29, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.265107}
{'[6, 0, 0, 5, 5, 6, 0, 1, 0, 29, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.252688}
{'[6, 0, 0, 5, 5, 6, 0, 1, 0, 29, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.25751}
{'[6, 0, 0, 5, 5, 6, 0, 1, 0, 29, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.260513}
{'[6, 0, 0, 5, 5, 6, 0, 1, 0, 29, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.260601}
{'[6, 0, 0, 5, 5, 6, 0, 1, 0, 29, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.255918}
{'[6, 0, 0, 5, 5, 6, 0, 1, 0, 29, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.258928}
{'[6, 0, 0, 5, 5, 6, 0, 1, 0, 29, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.256107}
{'[6, 0, 0, 5, 5, 6, 0, 1, 0, 29, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.256651}
{'[6, 0, 0, 5, 5, 6, 0, 1, 0, 29, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.255511}
{'[6, 0, 0, 5, 5, 6, 0, 1, 0, 29, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.256073}
{'[6, 0, 0, 5, 5, 6, 0, 1, 0, 29, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.259029}

out:
 ["{'[6, 0, 0, 5, 5, 6, 0, 1, 0, 29, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.253404}", "{'[6, 0, 0, 5, 5, 6, 0, 1, 0, 29, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.258618}", "{'[6, 0, 0, 5, 5, 6, 0, 1, 0, 29, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.259459}", "{'[6, 0, 0, 5, 5, 6, 0, 1, 0, 29, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.254717}", "{'[6, 0, 0, 5, 5, 6, 0, 1, 0, 29, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.25312}", "{'[6, 0, 0, 5, 5, 6, 0, 1, 0, 29, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.262867}", "{'[6, 0, 0, 5, 5, 6, 0, 1, 0, 29, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.252923}", "{'[6, 0, 0, 5, 5, 6, 0, 1, 0, 29, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.255869}", "{'[6, 0, 0, 5, 5, 6, 0, 1, 0, 29, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.255205}", "{'[6, 0, 0, 5, 5, 6, 0, 1, 0, 29, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.255004}", "{'[6, 0, 0, 5, 5, 6, 0, 1, 0, 29, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.256475}", "{'[6, 0, 0, 5, 5, 6, 0, 1, 0, 29, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.260353}", "{'[6, 0, 0, 5, 5, 6, 0, 1, 0, 29, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.254691}", "{'[6, 0, 0, 5, 5, 6, 0, 1, 0, 29, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.259196}", "{'[6, 0, 0, 5, 5, 6, 0, 1, 0, 29, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.25862}", "{'[6, 0, 0, 5, 5, 6, 0, 1, 0, 29, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.254142}", "{'[6, 0, 0, 5, 5, 6, 0, 1, 0, 29, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.254979}", "{'[6, 0, 0, 5, 5, 6, 0, 1, 0, 29, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.260536}", "{'[6, 0, 0, 5, 5, 6, 0, 1, 0, 29, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.265107}", "{'[6, 0, 0, 5, 5, 6, 0, 1, 0, 29, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.252688}", "{'[6, 0, 0, 5, 5, 6, 0, 1, 0, 29, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.25751}", "{'[6, 0, 0, 5, 5, 6, 0, 1, 0, 29, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.260513}", "{'[6, 0, 0, 5, 5, 6, 0, 1, 0, 29, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.260601}", "{'[6, 0, 0, 5, 5, 6, 0, 1, 0, 29, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.255918}", "{'[6, 0, 0, 5, 5, 6, 0, 1, 0, 29, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.258928}", "{'[6, 0, 0, 5, 5, 6, 0, 1, 0, 29, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.256107}", "{'[6, 0, 0, 5, 5, 6, 0, 1, 0, 29, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.256651}", "{'[6, 0, 0, 5, 5, 6, 0, 1, 0, 29, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.255511}", "{'[6, 0, 0, 5, 5, 6, 0, 1, 0, 29, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.256073}", "{'[6, 0, 0, 5, 5, 6, 0, 1, 0, 29, 4, 0, 0, 2, 0, 0, 1, 0]' : 0.259029}"]
returning from 'run': {'[6, 0, 0, 5, 5, 6, 0, 1, 0, 29, 4, 0, 0, 2, 0, 0, 1, 0]': ([0.253404, 0.258618, 0.259459, 0.254717, 0.25312, 0.262867, 0.252923, 0.255869, 0.255205, 0.255004, 0.256475, 0.260353, 0.254691, 0.259196, 0.25862, 0.254142, 0.254979, 0.260536, 0.265107, 0.252688, 0.25751, 0.260513, 0.260601, 0.255918, 0.258928, 0.256107, 0.256651, 0.255511, 0.256073, 0.259029], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 0, 5, 5, 6, 0, 1, 0, 29, 4, 0, 0, 2, 0, 0, 1, 0]': ([0.253404, 0.258618, 0.259459, 0.254717, 0.25312, 0.262867, 0.252923, 0.255869, 0.255205, 0.255004, 0.256475, 0.260353, 0.254691, 0.259196, 0.25862, 0.254142, 0.254979, 0.260536, 0.265107, 0.252688, 0.25751, 0.260513, 0.260601, 0.255918, 0.258928, 0.256107, 0.256651, 0.255511, 0.256073, 0.259029], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		3789
        Multiplications: 	1848
        Divisions: 		0
        Logical: 		0
        Reads: 			7146
        Writes: 		1172
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest6.exe __orio_perftest6.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest6.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest6.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest6.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest6.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	5
        Additions: 		3678
        Multiplications: 	1120
        Divisions: 		0
        Logical: 		0
        Reads: 			5799
        Writes: 		631
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest7.exe __orio_perftest7.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest7.exe  
Program Test Output: 
{'[2, 0, 0, 1, 0, 2, 1, 0, 22, 6, 0, 25, 1, 1, 0, 0, 0, 0]' : 0.128418}
{'[2, 0, 0, 1, 0, 2, 1, 0, 22, 6, 0, 25, 1, 1, 0, 0, 0, 0]' : 0.128387}
{'[2, 0, 0, 1, 0, 2, 1, 0, 22, 6, 0, 25, 1, 1, 0, 0, 0, 0]' : 0.128293}
{'[2, 0, 0, 1, 0, 2, 1, 0, 22, 6, 0, 25, 1, 1, 0, 0, 0, 0]' : 0.128189}
{'[2, 0, 0, 1, 0, 2, 1, 0, 22, 6, 0, 25, 1, 1, 0, 0, 0, 0]' : 0.128278}
{'[2, 0, 0, 1, 0, 2, 1, 0, 22, 6, 0, 25, 1, 1, 0, 0, 0, 0]' : 0.117552}
{'[2, 0, 0, 1, 0, 2, 1, 0, 22, 6, 0, 25, 1, 1, 0, 0, 0, 0]' : 0.108988}
{'[2, 0, 0, 1, 0, 2, 1, 0, 22, 6, 0, 25, 1, 1, 0, 0, 0, 0]' : 0.108599}
{'[2, 0, 0, 1, 0, 2, 1, 0, 22, 6, 0, 25, 1, 1, 0, 0, 0, 0]' : 0.108475}
{'[2, 0, 0, 1, 0, 2, 1, 0, 22, 6, 0, 25, 1, 1, 0, 0, 0, 0]' : 0.1086}
{'[2, 0, 0, 1, 0, 2, 1, 0, 22, 6, 0, 25, 1, 1, 0, 0, 0, 0]' : 0.108508}
{'[2, 0, 0, 1, 0, 2, 1, 0, 22, 6, 0, 25, 1, 1, 0, 0, 0, 0]' : 0.108515}
{'[2, 0, 0, 1, 0, 2, 1, 0, 22, 6, 0, 25, 1, 1, 0, 0, 0, 0]' : 0.108624}
{'[2, 0, 0, 1, 0, 2, 1, 0, 22, 6, 0, 25, 1, 1, 0, 0, 0, 0]' : 0.108596}
{'[2, 0, 0, 1, 0, 2, 1, 0, 22, 6, 0, 25, 1, 1, 0, 0, 0, 0]' : 0.108848}
{'[2, 0, 0, 1, 0, 2, 1, 0, 22, 6, 0, 25, 1, 1, 0, 0, 0, 0]' : 0.108827}
{'[2, 0, 0, 1, 0, 2, 1, 0, 22, 6, 0, 25, 1, 1, 0, 0, 0, 0]' : 0.108877}
{'[2, 0, 0, 1, 0, 2, 1, 0, 22, 6, 0, 25, 1, 1, 0, 0, 0, 0]' : 0.10872}
{'[2, 0, 0, 1, 0, 2, 1, 0, 22, 6, 0, 25, 1, 1, 0, 0, 0, 0]' : 0.108638}
{'[2, 0, 0, 1, 0, 2, 1, 0, 22, 6, 0, 25, 1, 1, 0, 0, 0, 0]' : 0.108541}
{'[2, 0, 0, 1, 0, 2, 1, 0, 22, 6, 0, 25, 1, 1, 0, 0, 0, 0]' : 0.108836}
{'[2, 0, 0, 1, 0, 2, 1, 0, 22, 6, 0, 25, 1, 1, 0, 0, 0, 0]' : 0.108611}
{'[2, 0, 0, 1, 0, 2, 1, 0, 22, 6, 0, 25, 1, 1, 0, 0, 0, 0]' : 0.108457}
{'[2, 0, 0, 1, 0, 2, 1, 0, 22, 6, 0, 25, 1, 1, 0, 0, 0, 0]' : 0.108704}
{'[2, 0, 0, 1, 0, 2, 1, 0, 22, 6, 0, 25, 1, 1, 0, 0, 0, 0]' : 0.109005}
{'[2, 0, 0, 1, 0, 2, 1, 0, 22, 6, 0, 25, 1, 1, 0, 0, 0, 0]' : 0.108777}
{'[2, 0, 0, 1, 0, 2, 1, 0, 22, 6, 0, 25, 1, 1, 0, 0, 0, 0]' : 0.108494}
{'[2, 0, 0, 1, 0, 2, 1, 0, 22, 6, 0, 25, 1, 1, 0, 0, 0, 0]' : 0.108581}
{'[2, 0, 0, 1, 0, 2, 1, 0, 22, 6, 0, 25, 1, 1, 0, 0, 0, 0]' : 0.108518}
{'[2, 0, 0, 1, 0, 2, 1, 0, 22, 6, 0, 25, 1, 1, 0, 0, 0, 0]' : 0.10855}

out:
 ["{'[2, 0, 0, 1, 0, 2, 1, 0, 22, 6, 0, 25, 1, 1, 0, 0, 0, 0]' : 0.128418}", "{'[2, 0, 0, 1, 0, 2, 1, 0, 22, 6, 0, 25, 1, 1, 0, 0, 0, 0]' : 0.128387}", "{'[2, 0, 0, 1, 0, 2, 1, 0, 22, 6, 0, 25, 1, 1, 0, 0, 0, 0]' : 0.128293}", "{'[2, 0, 0, 1, 0, 2, 1, 0, 22, 6, 0, 25, 1, 1, 0, 0, 0, 0]' : 0.128189}", "{'[2, 0, 0, 1, 0, 2, 1, 0, 22, 6, 0, 25, 1, 1, 0, 0, 0, 0]' : 0.128278}", "{'[2, 0, 0, 1, 0, 2, 1, 0, 22, 6, 0, 25, 1, 1, 0, 0, 0, 0]' : 0.117552}", "{'[2, 0, 0, 1, 0, 2, 1, 0, 22, 6, 0, 25, 1, 1, 0, 0, 0, 0]' : 0.108988}", "{'[2, 0, 0, 1, 0, 2, 1, 0, 22, 6, 0, 25, 1, 1, 0, 0, 0, 0]' : 0.108599}", "{'[2, 0, 0, 1, 0, 2, 1, 0, 22, 6, 0, 25, 1, 1, 0, 0, 0, 0]' : 0.108475}", "{'[2, 0, 0, 1, 0, 2, 1, 0, 22, 6, 0, 25, 1, 1, 0, 0, 0, 0]' : 0.1086}", "{'[2, 0, 0, 1, 0, 2, 1, 0, 22, 6, 0, 25, 1, 1, 0, 0, 0, 0]' : 0.108508}", "{'[2, 0, 0, 1, 0, 2, 1, 0, 22, 6, 0, 25, 1, 1, 0, 0, 0, 0]' : 0.108515}", "{'[2, 0, 0, 1, 0, 2, 1, 0, 22, 6, 0, 25, 1, 1, 0, 0, 0, 0]' : 0.108624}", "{'[2, 0, 0, 1, 0, 2, 1, 0, 22, 6, 0, 25, 1, 1, 0, 0, 0, 0]' : 0.108596}", "{'[2, 0, 0, 1, 0, 2, 1, 0, 22, 6, 0, 25, 1, 1, 0, 0, 0, 0]' : 0.108848}", "{'[2, 0, 0, 1, 0, 2, 1, 0, 22, 6, 0, 25, 1, 1, 0, 0, 0, 0]' : 0.108827}", "{'[2, 0, 0, 1, 0, 2, 1, 0, 22, 6, 0, 25, 1, 1, 0, 0, 0, 0]' : 0.108877}", "{'[2, 0, 0, 1, 0, 2, 1, 0, 22, 6, 0, 25, 1, 1, 0, 0, 0, 0]' : 0.10872}", "{'[2, 0, 0, 1, 0, 2, 1, 0, 22, 6, 0, 25, 1, 1, 0, 0, 0, 0]' : 0.108638}", "{'[2, 0, 0, 1, 0, 2, 1, 0, 22, 6, 0, 25, 1, 1, 0, 0, 0, 0]' : 0.108541}", "{'[2, 0, 0, 1, 0, 2, 1, 0, 22, 6, 0, 25, 1, 1, 0, 0, 0, 0]' : 0.108836}", "{'[2, 0, 0, 1, 0, 2, 1, 0, 22, 6, 0, 25, 1, 1, 0, 0, 0, 0]' : 0.108611}", "{'[2, 0, 0, 1, 0, 2, 1, 0, 22, 6, 0, 25, 1, 1, 0, 0, 0, 0]' : 0.108457}", "{'[2, 0, 0, 1, 0, 2, 1, 0, 22, 6, 0, 25, 1, 1, 0, 0, 0, 0]' : 0.108704}", "{'[2, 0, 0, 1, 0, 2, 1, 0, 22, 6, 0, 25, 1, 1, 0, 0, 0, 0]' : 0.109005}", "{'[2, 0, 0, 1, 0, 2, 1, 0, 22, 6, 0, 25, 1, 1, 0, 0, 0, 0]' : 0.108777}", "{'[2, 0, 0, 1, 0, 2, 1, 0, 22, 6, 0, 25, 1, 1, 0, 0, 0, 0]' : 0.108494}", "{'[2, 0, 0, 1, 0, 2, 1, 0, 22, 6, 0, 25, 1, 1, 0, 0, 0, 0]' : 0.108581}", "{'[2, 0, 0, 1, 0, 2, 1, 0, 22, 6, 0, 25, 1, 1, 0, 0, 0, 0]' : 0.108518}", "{'[2, 0, 0, 1, 0, 2, 1, 0, 22, 6, 0, 25, 1, 1, 0, 0, 0, 0]' : 0.10855}"]
returning from 'run': {'[2, 0, 0, 1, 0, 2, 1, 0, 22, 6, 0, 25, 1, 1, 0, 0, 0, 0]': ([0.128418, 0.128387, 0.128293, 0.128189, 0.128278, 0.117552, 0.108988, 0.108599, 0.108475, 0.1086, 0.108508, 0.108515, 0.108624, 0.108596, 0.108848, 0.108827, 0.108877, 0.10872, 0.108638, 0.108541, 0.108836, 0.108611, 0.108457, 0.108704, 0.109005, 0.108777, 0.108494, 0.108581, 0.108518, 0.10855], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 0, 0, 1, 0, 2, 1, 0, 22, 6, 0, 25, 1, 1, 0, 0, 0, 0]': ([0.128418, 0.128387, 0.128293, 0.128189, 0.128278, 0.117552, 0.108988, 0.108599, 0.108475, 0.1086, 0.108508, 0.108515, 0.108624, 0.108596, 0.108848, 0.108827, 0.108877, 0.10872, 0.108638, 0.108541, 0.108836, 0.108611, 0.108457, 0.108704, 0.109005, 0.108777, 0.108494, 0.108581, 0.108518, 0.10855], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = jjj
Code stats:
        Number of loops: 	56
        Max loop nest depth: 	5
        Additions: 		1324
        Multiplications: 	376
        Divisions: 		0
        Logical: 		0
        Reads: 			2642
        Writes: 		390
        Comparisons:		56
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest8.exe __orio_perftest8.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest8.exe  
Program Test Output: 
{'[6, 5, 2, 0, 3, 1, 0, 1, 28, 13, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.176968}
{'[6, 5, 2, 0, 3, 1, 0, 1, 28, 13, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.17764}
{'[6, 5, 2, 0, 3, 1, 0, 1, 28, 13, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.175419}
{'[6, 5, 2, 0, 3, 1, 0, 1, 28, 13, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.176101}
{'[6, 5, 2, 0, 3, 1, 0, 1, 28, 13, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.175051}
{'[6, 5, 2, 0, 3, 1, 0, 1, 28, 13, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.177495}
{'[6, 5, 2, 0, 3, 1, 0, 1, 28, 13, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.17369}
{'[6, 5, 2, 0, 3, 1, 0, 1, 28, 13, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.174829}
{'[6, 5, 2, 0, 3, 1, 0, 1, 28, 13, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.17621}
{'[6, 5, 2, 0, 3, 1, 0, 1, 28, 13, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.177319}
{'[6, 5, 2, 0, 3, 1, 0, 1, 28, 13, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.174304}
{'[6, 5, 2, 0, 3, 1, 0, 1, 28, 13, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.175321}
{'[6, 5, 2, 0, 3, 1, 0, 1, 28, 13, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.17523}
{'[6, 5, 2, 0, 3, 1, 0, 1, 28, 13, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.177311}
{'[6, 5, 2, 0, 3, 1, 0, 1, 28, 13, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.176045}
{'[6, 5, 2, 0, 3, 1, 0, 1, 28, 13, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.175176}
{'[6, 5, 2, 0, 3, 1, 0, 1, 28, 13, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.176576}
{'[6, 5, 2, 0, 3, 1, 0, 1, 28, 13, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.176029}
{'[6, 5, 2, 0, 3, 1, 0, 1, 28, 13, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.174599}
{'[6, 5, 2, 0, 3, 1, 0, 1, 28, 13, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.175074}
{'[6, 5, 2, 0, 3, 1, 0, 1, 28, 13, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.176495}
{'[6, 5, 2, 0, 3, 1, 0, 1, 28, 13, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.175832}
{'[6, 5, 2, 0, 3, 1, 0, 1, 28, 13, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.175138}
{'[6, 5, 2, 0, 3, 1, 0, 1, 28, 13, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.175669}
{'[6, 5, 2, 0, 3, 1, 0, 1, 28, 13, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.175186}
{'[6, 5, 2, 0, 3, 1, 0, 1, 28, 13, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.177118}
{'[6, 5, 2, 0, 3, 1, 0, 1, 28, 13, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.175039}
{'[6, 5, 2, 0, 3, 1, 0, 1, 28, 13, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.17725}
{'[6, 5, 2, 0, 3, 1, 0, 1, 28, 13, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.175926}
{'[6, 5, 2, 0, 3, 1, 0, 1, 28, 13, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.175688}

out:
 ["{'[6, 5, 2, 0, 3, 1, 0, 1, 28, 13, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.176968}", "{'[6, 5, 2, 0, 3, 1, 0, 1, 28, 13, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.17764}", "{'[6, 5, 2, 0, 3, 1, 0, 1, 28, 13, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.175419}", "{'[6, 5, 2, 0, 3, 1, 0, 1, 28, 13, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.176101}", "{'[6, 5, 2, 0, 3, 1, 0, 1, 28, 13, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.175051}", "{'[6, 5, 2, 0, 3, 1, 0, 1, 28, 13, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.177495}", "{'[6, 5, 2, 0, 3, 1, 0, 1, 28, 13, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.17369}", "{'[6, 5, 2, 0, 3, 1, 0, 1, 28, 13, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.174829}", "{'[6, 5, 2, 0, 3, 1, 0, 1, 28, 13, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.17621}", "{'[6, 5, 2, 0, 3, 1, 0, 1, 28, 13, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.177319}", "{'[6, 5, 2, 0, 3, 1, 0, 1, 28, 13, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.174304}", "{'[6, 5, 2, 0, 3, 1, 0, 1, 28, 13, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.175321}", "{'[6, 5, 2, 0, 3, 1, 0, 1, 28, 13, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.17523}", "{'[6, 5, 2, 0, 3, 1, 0, 1, 28, 13, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.177311}", "{'[6, 5, 2, 0, 3, 1, 0, 1, 28, 13, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.176045}", "{'[6, 5, 2, 0, 3, 1, 0, 1, 28, 13, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.175176}", "{'[6, 5, 2, 0, 3, 1, 0, 1, 28, 13, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.176576}", "{'[6, 5, 2, 0, 3, 1, 0, 1, 28, 13, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.176029}", "{'[6, 5, 2, 0, 3, 1, 0, 1, 28, 13, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.174599}", "{'[6, 5, 2, 0, 3, 1, 0, 1, 28, 13, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.175074}", "{'[6, 5, 2, 0, 3, 1, 0, 1, 28, 13, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.176495}", "{'[6, 5, 2, 0, 3, 1, 0, 1, 28, 13, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.175832}", "{'[6, 5, 2, 0, 3, 1, 0, 1, 28, 13, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.175138}", "{'[6, 5, 2, 0, 3, 1, 0, 1, 28, 13, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.175669}", "{'[6, 5, 2, 0, 3, 1, 0, 1, 28, 13, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.175186}", "{'[6, 5, 2, 0, 3, 1, 0, 1, 28, 13, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.177118}", "{'[6, 5, 2, 0, 3, 1, 0, 1, 28, 13, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.175039}", "{'[6, 5, 2, 0, 3, 1, 0, 1, 28, 13, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.17725}", "{'[6, 5, 2, 0, 3, 1, 0, 1, 28, 13, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.175926}", "{'[6, 5, 2, 0, 3, 1, 0, 1, 28, 13, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.175688}"]
returning from 'run': {'[6, 5, 2, 0, 3, 1, 0, 1, 28, 13, 1, 0, 2, 0, 0, 0, 0, 1]': ([0.176968, 0.17764, 0.175419, 0.176101, 0.175051, 0.177495, 0.17369, 0.174829, 0.17621, 0.177319, 0.174304, 0.175321, 0.17523, 0.177311, 0.176045, 0.175176, 0.176576, 0.176029, 0.174599, 0.175074, 0.176495, 0.175832, 0.175138, 0.175669, 0.175186, 0.177118, 0.175039, 0.17725, 0.175926, 0.175688], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 5, 2, 0, 3, 1, 0, 1, 28, 13, 1, 0, 2, 0, 0, 0, 0, 1]': ([0.176968, 0.17764, 0.175419, 0.176101, 0.175051, 0.177495, 0.17369, 0.174829, 0.17621, 0.177319, 0.174304, 0.175321, 0.17523, 0.177311, 0.176045, 0.175176, 0.176576, 0.176029, 0.174599, 0.175074, 0.176495, 0.175832, 0.175138, 0.175669, 0.175186, 0.177118, 0.175039, 0.17725, 0.175926, 0.175688], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	30
        Max loop nest depth: 	5
        Additions: 		1138
        Multiplications: 	520
        Divisions: 		0
        Logical: 		0
        Reads: 			2352
        Writes: 		442
        Comparisons:		30
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest9.exe __orio_perftest9.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest9.exe  
Program Test Output: 
{'[1, 3, 6, 0, 2, 6, 0, 0, 22, 10, 0, 2, 1, 1, 0, 1, 1, 0]' : 0.111749}
{'[1, 3, 6, 0, 2, 6, 0, 0, 22, 10, 0, 2, 1, 1, 0, 1, 1, 0]' : 0.111724}
{'[1, 3, 6, 0, 2, 6, 0, 0, 22, 10, 0, 2, 1, 1, 0, 1, 1, 0]' : 0.111619}
{'[1, 3, 6, 0, 2, 6, 0, 0, 22, 10, 0, 2, 1, 1, 0, 1, 1, 0]' : 0.111765}
{'[1, 3, 6, 0, 2, 6, 0, 0, 22, 10, 0, 2, 1, 1, 0, 1, 1, 0]' : 0.11126}
{'[1, 3, 6, 0, 2, 6, 0, 0, 22, 10, 0, 2, 1, 1, 0, 1, 1, 0]' : 0.0986352}
{'[1, 3, 6, 0, 2, 6, 0, 0, 22, 10, 0, 2, 1, 1, 0, 1, 1, 0]' : 0.0961509}
{'[1, 3, 6, 0, 2, 6, 0, 0, 22, 10, 0, 2, 1, 1, 0, 1, 1, 0]' : 0.0961101}
{'[1, 3, 6, 0, 2, 6, 0, 0, 22, 10, 0, 2, 1, 1, 0, 1, 1, 0]' : 0.0960932}
{'[1, 3, 6, 0, 2, 6, 0, 0, 22, 10, 0, 2, 1, 1, 0, 1, 1, 0]' : 0.0963929}
{'[1, 3, 6, 0, 2, 6, 0, 0, 22, 10, 0, 2, 1, 1, 0, 1, 1, 0]' : 0.096251}
{'[1, 3, 6, 0, 2, 6, 0, 0, 22, 10, 0, 2, 1, 1, 0, 1, 1, 0]' : 0.095983}
{'[1, 3, 6, 0, 2, 6, 0, 0, 22, 10, 0, 2, 1, 1, 0, 1, 1, 0]' : 0.096132}
{'[1, 3, 6, 0, 2, 6, 0, 0, 22, 10, 0, 2, 1, 1, 0, 1, 1, 0]' : 0.0960572}
{'[1, 3, 6, 0, 2, 6, 0, 0, 22, 10, 0, 2, 1, 1, 0, 1, 1, 0]' : 0.096153}
{'[1, 3, 6, 0, 2, 6, 0, 0, 22, 10, 0, 2, 1, 1, 0, 1, 1, 0]' : 0.095979}
{'[1, 3, 6, 0, 2, 6, 0, 0, 22, 10, 0, 2, 1, 1, 0, 1, 1, 0]' : 0.0960951}
{'[1, 3, 6, 0, 2, 6, 0, 0, 22, 10, 0, 2, 1, 1, 0, 1, 1, 0]' : 0.0960569}
{'[1, 3, 6, 0, 2, 6, 0, 0, 22, 10, 0, 2, 1, 1, 0, 1, 1, 0]' : 0.096153}
{'[1, 3, 6, 0, 2, 6, 0, 0, 22, 10, 0, 2, 1, 1, 0, 1, 1, 0]' : 0.095968}
{'[1, 3, 6, 0, 2, 6, 0, 0, 22, 10, 0, 2, 1, 1, 0, 1, 1, 0]' : 0.0965831}
{'[1, 3, 6, 0, 2, 6, 0, 0, 22, 10, 0, 2, 1, 1, 0, 1, 1, 0]' : 0.096252}
{'[1, 3, 6, 0, 2, 6, 0, 0, 22, 10, 0, 2, 1, 1, 0, 1, 1, 0]' : 0.0960801}
{'[1, 3, 6, 0, 2, 6, 0, 0, 22, 10, 0, 2, 1, 1, 0, 1, 1, 0]' : 0.0960109}
{'[1, 3, 6, 0, 2, 6, 0, 0, 22, 10, 0, 2, 1, 1, 0, 1, 1, 0]' : 0.096102}
{'[1, 3, 6, 0, 2, 6, 0, 0, 22, 10, 0, 2, 1, 1, 0, 1, 1, 0]' : 0.0961239}
{'[1, 3, 6, 0, 2, 6, 0, 0, 22, 10, 0, 2, 1, 1, 0, 1, 1, 0]' : 0.09623}
{'[1, 3, 6, 0, 2, 6, 0, 0, 22, 10, 0, 2, 1, 1, 0, 1, 1, 0]' : 0.0960279}
{'[1, 3, 6, 0, 2, 6, 0, 0, 22, 10, 0, 2, 1, 1, 0, 1, 1, 0]' : 0.0964088}
{'[1, 3, 6, 0, 2, 6, 0, 0, 22, 10, 0, 2, 1, 1, 0, 1, 1, 0]' : 0.096096}

out:
 ["{'[1, 3, 6, 0, 2, 6, 0, 0, 22, 10, 0, 2, 1, 1, 0, 1, 1, 0]' : 0.111749}", "{'[1, 3, 6, 0, 2, 6, 0, 0, 22, 10, 0, 2, 1, 1, 0, 1, 1, 0]' : 0.111724}", "{'[1, 3, 6, 0, 2, 6, 0, 0, 22, 10, 0, 2, 1, 1, 0, 1, 1, 0]' : 0.111619}", "{'[1, 3, 6, 0, 2, 6, 0, 0, 22, 10, 0, 2, 1, 1, 0, 1, 1, 0]' : 0.111765}", "{'[1, 3, 6, 0, 2, 6, 0, 0, 22, 10, 0, 2, 1, 1, 0, 1, 1, 0]' : 0.11126}", "{'[1, 3, 6, 0, 2, 6, 0, 0, 22, 10, 0, 2, 1, 1, 0, 1, 1, 0]' : 0.0986352}", "{'[1, 3, 6, 0, 2, 6, 0, 0, 22, 10, 0, 2, 1, 1, 0, 1, 1, 0]' : 0.0961509}", "{'[1, 3, 6, 0, 2, 6, 0, 0, 22, 10, 0, 2, 1, 1, 0, 1, 1, 0]' : 0.0961101}", "{'[1, 3, 6, 0, 2, 6, 0, 0, 22, 10, 0, 2, 1, 1, 0, 1, 1, 0]' : 0.0960932}", "{'[1, 3, 6, 0, 2, 6, 0, 0, 22, 10, 0, 2, 1, 1, 0, 1, 1, 0]' : 0.0963929}", "{'[1, 3, 6, 0, 2, 6, 0, 0, 22, 10, 0, 2, 1, 1, 0, 1, 1, 0]' : 0.096251}", "{'[1, 3, 6, 0, 2, 6, 0, 0, 22, 10, 0, 2, 1, 1, 0, 1, 1, 0]' : 0.095983}", "{'[1, 3, 6, 0, 2, 6, 0, 0, 22, 10, 0, 2, 1, 1, 0, 1, 1, 0]' : 0.096132}", "{'[1, 3, 6, 0, 2, 6, 0, 0, 22, 10, 0, 2, 1, 1, 0, 1, 1, 0]' : 0.0960572}", "{'[1, 3, 6, 0, 2, 6, 0, 0, 22, 10, 0, 2, 1, 1, 0, 1, 1, 0]' : 0.096153}", "{'[1, 3, 6, 0, 2, 6, 0, 0, 22, 10, 0, 2, 1, 1, 0, 1, 1, 0]' : 0.095979}", "{'[1, 3, 6, 0, 2, 6, 0, 0, 22, 10, 0, 2, 1, 1, 0, 1, 1, 0]' : 0.0960951}", "{'[1, 3, 6, 0, 2, 6, 0, 0, 22, 10, 0, 2, 1, 1, 0, 1, 1, 0]' : 0.0960569}", "{'[1, 3, 6, 0, 2, 6, 0, 0, 22, 10, 0, 2, 1, 1, 0, 1, 1, 0]' : 0.096153}", "{'[1, 3, 6, 0, 2, 6, 0, 0, 22, 10, 0, 2, 1, 1, 0, 1, 1, 0]' : 0.095968}", "{'[1, 3, 6, 0, 2, 6, 0, 0, 22, 10, 0, 2, 1, 1, 0, 1, 1, 0]' : 0.0965831}", "{'[1, 3, 6, 0, 2, 6, 0, 0, 22, 10, 0, 2, 1, 1, 0, 1, 1, 0]' : 0.096252}", "{'[1, 3, 6, 0, 2, 6, 0, 0, 22, 10, 0, 2, 1, 1, 0, 1, 1, 0]' : 0.0960801}", "{'[1, 3, 6, 0, 2, 6, 0, 0, 22, 10, 0, 2, 1, 1, 0, 1, 1, 0]' : 0.0960109}", "{'[1, 3, 6, 0, 2, 6, 0, 0, 22, 10, 0, 2, 1, 1, 0, 1, 1, 0]' : 0.096102}", "{'[1, 3, 6, 0, 2, 6, 0, 0, 22, 10, 0, 2, 1, 1, 0, 1, 1, 0]' : 0.0961239}", "{'[1, 3, 6, 0, 2, 6, 0, 0, 22, 10, 0, 2, 1, 1, 0, 1, 1, 0]' : 0.09623}", "{'[1, 3, 6, 0, 2, 6, 0, 0, 22, 10, 0, 2, 1, 1, 0, 1, 1, 0]' : 0.0960279}", "{'[1, 3, 6, 0, 2, 6, 0, 0, 22, 10, 0, 2, 1, 1, 0, 1, 1, 0]' : 0.0964088}", "{'[1, 3, 6, 0, 2, 6, 0, 0, 22, 10, 0, 2, 1, 1, 0, 1, 1, 0]' : 0.096096}"]
returning from 'run': {'[1, 3, 6, 0, 2, 6, 0, 0, 22, 10, 0, 2, 1, 1, 0, 1, 1, 0]': ([0.111749, 0.111724, 0.111619, 0.111765, 0.11126, 0.0986352, 0.0961509, 0.0961101, 0.0960932, 0.0963929, 0.096251, 0.095983, 0.096132, 0.0960572, 0.096153, 0.095979, 0.0960951, 0.0960569, 0.096153, 0.095968, 0.0965831, 0.096252, 0.0960801, 0.0960109, 0.096102, 0.0961239, 0.09623, 0.0960279, 0.0964088, 0.096096], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 3, 6, 0, 2, 6, 0, 0, 22, 10, 0, 2, 1, 1, 0, 1, 1, 0]': ([0.111749, 0.111724, 0.111619, 0.111765, 0.11126, 0.0986352, 0.0961509, 0.0961101, 0.0960932, 0.0963929, 0.096251, 0.095983, 0.096132, 0.0960572, 0.096153, 0.095979, 0.0960951, 0.0960569, 0.096153, 0.095968, 0.0965831, 0.096252, 0.0960801, 0.0960109, 0.096102, 0.0961239, 0.09623, 0.0960279, 0.0964088, 0.096096], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	5
        Additions: 		263
        Multiplications: 	86
        Divisions: 		0
        Logical: 		0
        Reads: 			578
        Writes: 		85
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest10.exe __orio_perftest10.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest10.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest10.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest10.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest10.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	68
        Max loop nest depth: 	6
        Additions: 		8405
        Multiplications: 	1968
        Divisions: 		0
        Logical: 		0
        Reads: 			12224
        Writes: 		1234
        Comparisons:		68
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest11.exe __orio_perftest11.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest11.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest11.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest11.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest11.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	47
        Max loop nest depth: 	5
        Additions: 		319
        Multiplications: 	40
        Divisions: 		0
        Logical: 		0
        Reads: 			773
        Writes: 		180
        Comparisons:		47
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest12.exe __orio_perftest12.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest12.exe  
Program Test Output: 
{'[6, 4, 6, 0, 5, 6, 1, 1, 24, 8, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.17479}
{'[6, 4, 6, 0, 5, 6, 1, 1, 24, 8, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.174944}
{'[6, 4, 6, 0, 5, 6, 1, 1, 24, 8, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.169406}
{'[6, 4, 6, 0, 5, 6, 1, 1, 24, 8, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.150331}
{'[6, 4, 6, 0, 5, 6, 1, 1, 24, 8, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.150363}
{'[6, 4, 6, 0, 5, 6, 1, 1, 24, 8, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.150594}
{'[6, 4, 6, 0, 5, 6, 1, 1, 24, 8, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.150303}
{'[6, 4, 6, 0, 5, 6, 1, 1, 24, 8, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.150335}
{'[6, 4, 6, 0, 5, 6, 1, 1, 24, 8, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.150508}
{'[6, 4, 6, 0, 5, 6, 1, 1, 24, 8, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.150563}
{'[6, 4, 6, 0, 5, 6, 1, 1, 24, 8, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.150611}
{'[6, 4, 6, 0, 5, 6, 1, 1, 24, 8, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.150322}
{'[6, 4, 6, 0, 5, 6, 1, 1, 24, 8, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.150485}
{'[6, 4, 6, 0, 5, 6, 1, 1, 24, 8, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.150271}
{'[6, 4, 6, 0, 5, 6, 1, 1, 24, 8, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.150492}
{'[6, 4, 6, 0, 5, 6, 1, 1, 24, 8, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.150506}
{'[6, 4, 6, 0, 5, 6, 1, 1, 24, 8, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.150338}
{'[6, 4, 6, 0, 5, 6, 1, 1, 24, 8, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.150507}
{'[6, 4, 6, 0, 5, 6, 1, 1, 24, 8, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.150284}
{'[6, 4, 6, 0, 5, 6, 1, 1, 24, 8, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.150341}
{'[6, 4, 6, 0, 5, 6, 1, 1, 24, 8, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.150466}
{'[6, 4, 6, 0, 5, 6, 1, 1, 24, 8, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.150499}
{'[6, 4, 6, 0, 5, 6, 1, 1, 24, 8, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.150755}
{'[6, 4, 6, 0, 5, 6, 1, 1, 24, 8, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.150318}
{'[6, 4, 6, 0, 5, 6, 1, 1, 24, 8, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.150493}
{'[6, 4, 6, 0, 5, 6, 1, 1, 24, 8, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.150467}
{'[6, 4, 6, 0, 5, 6, 1, 1, 24, 8, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.150346}
{'[6, 4, 6, 0, 5, 6, 1, 1, 24, 8, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.150546}
{'[6, 4, 6, 0, 5, 6, 1, 1, 24, 8, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.150286}
{'[6, 4, 6, 0, 5, 6, 1, 1, 24, 8, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.150984}

out:
 ["{'[6, 4, 6, 0, 5, 6, 1, 1, 24, 8, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.17479}", "{'[6, 4, 6, 0, 5, 6, 1, 1, 24, 8, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.174944}", "{'[6, 4, 6, 0, 5, 6, 1, 1, 24, 8, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.169406}", "{'[6, 4, 6, 0, 5, 6, 1, 1, 24, 8, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.150331}", "{'[6, 4, 6, 0, 5, 6, 1, 1, 24, 8, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.150363}", "{'[6, 4, 6, 0, 5, 6, 1, 1, 24, 8, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.150594}", "{'[6, 4, 6, 0, 5, 6, 1, 1, 24, 8, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.150303}", "{'[6, 4, 6, 0, 5, 6, 1, 1, 24, 8, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.150335}", "{'[6, 4, 6, 0, 5, 6, 1, 1, 24, 8, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.150508}", "{'[6, 4, 6, 0, 5, 6, 1, 1, 24, 8, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.150563}", "{'[6, 4, 6, 0, 5, 6, 1, 1, 24, 8, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.150611}", "{'[6, 4, 6, 0, 5, 6, 1, 1, 24, 8, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.150322}", "{'[6, 4, 6, 0, 5, 6, 1, 1, 24, 8, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.150485}", "{'[6, 4, 6, 0, 5, 6, 1, 1, 24, 8, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.150271}", "{'[6, 4, 6, 0, 5, 6, 1, 1, 24, 8, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.150492}", "{'[6, 4, 6, 0, 5, 6, 1, 1, 24, 8, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.150506}", "{'[6, 4, 6, 0, 5, 6, 1, 1, 24, 8, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.150338}", "{'[6, 4, 6, 0, 5, 6, 1, 1, 24, 8, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.150507}", "{'[6, 4, 6, 0, 5, 6, 1, 1, 24, 8, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.150284}", "{'[6, 4, 6, 0, 5, 6, 1, 1, 24, 8, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.150341}", "{'[6, 4, 6, 0, 5, 6, 1, 1, 24, 8, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.150466}", "{'[6, 4, 6, 0, 5, 6, 1, 1, 24, 8, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.150499}", "{'[6, 4, 6, 0, 5, 6, 1, 1, 24, 8, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.150755}", "{'[6, 4, 6, 0, 5, 6, 1, 1, 24, 8, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.150318}", "{'[6, 4, 6, 0, 5, 6, 1, 1, 24, 8, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.150493}", "{'[6, 4, 6, 0, 5, 6, 1, 1, 24, 8, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.150467}", "{'[6, 4, 6, 0, 5, 6, 1, 1, 24, 8, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.150346}", "{'[6, 4, 6, 0, 5, 6, 1, 1, 24, 8, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.150546}", "{'[6, 4, 6, 0, 5, 6, 1, 1, 24, 8, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.150286}", "{'[6, 4, 6, 0, 5, 6, 1, 1, 24, 8, 0, 0, 0, 0, 0, 0, 0, 0]' : 0.150984}"]
returning from 'run': {'[6, 4, 6, 0, 5, 6, 1, 1, 24, 8, 0, 0, 0, 0, 0, 0, 0, 0]': ([0.17479, 0.174944, 0.169406, 0.150331, 0.150363, 0.150594, 0.150303, 0.150335, 0.150508, 0.150563, 0.150611, 0.150322, 0.150485, 0.150271, 0.150492, 0.150506, 0.150338, 0.150507, 0.150284, 0.150341, 0.150466, 0.150499, 0.150755, 0.150318, 0.150493, 0.150467, 0.150346, 0.150546, 0.150286, 0.150984], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 4, 6, 0, 5, 6, 1, 1, 24, 8, 0, 0, 0, 0, 0, 0, 0, 0]': ([0.17479, 0.174944, 0.169406, 0.150331, 0.150363, 0.150594, 0.150303, 0.150335, 0.150508, 0.150563, 0.150611, 0.150322, 0.150485, 0.150271, 0.150492, 0.150506, 0.150338, 0.150507, 0.150284, 0.150341, 0.150466, 0.150499, 0.150755, 0.150318, 0.150493, 0.150467, 0.150346, 0.150546, 0.150286, 0.150984], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	5
        Additions: 		2219
        Multiplications: 	744
        Divisions: 		0
        Logical: 		0
        Reads: 			4006
        Writes: 		482
        Comparisons:		22
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest13.exe __orio_perftest13.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest13.exe  
Program Test Output: 
{'[1, 0, 6, 6, 5, 0, 0, 0, 21, 28, 0, 3, 2, 0, 0, 0, 0, 1]' : 0.176476}
{'[1, 0, 6, 6, 5, 0, 0, 0, 21, 28, 0, 3, 2, 0, 0, 0, 0, 1]' : 0.176294}
{'[1, 0, 6, 6, 5, 0, 0, 0, 21, 28, 0, 3, 2, 0, 0, 0, 0, 1]' : 0.176274}
{'[1, 0, 6, 6, 5, 0, 0, 0, 21, 28, 0, 3, 2, 0, 0, 0, 0, 1]' : 0.156189}
{'[1, 0, 6, 6, 5, 0, 0, 0, 21, 28, 0, 3, 2, 0, 0, 0, 0, 1]' : 0.148402}
{'[1, 0, 6, 6, 5, 0, 0, 0, 21, 28, 0, 3, 2, 0, 0, 0, 0, 1]' : 0.148335}
{'[1, 0, 6, 6, 5, 0, 0, 0, 21, 28, 0, 3, 2, 0, 0, 0, 0, 1]' : 0.148583}
{'[1, 0, 6, 6, 5, 0, 0, 0, 21, 28, 0, 3, 2, 0, 0, 0, 0, 1]' : 0.148659}
{'[1, 0, 6, 6, 5, 0, 0, 0, 21, 28, 0, 3, 2, 0, 0, 0, 0, 1]' : 0.148541}
{'[1, 0, 6, 6, 5, 0, 0, 0, 21, 28, 0, 3, 2, 0, 0, 0, 0, 1]' : 0.148459}
{'[1, 0, 6, 6, 5, 0, 0, 0, 21, 28, 0, 3, 2, 0, 0, 0, 0, 1]' : 0.148374}
{'[1, 0, 6, 6, 5, 0, 0, 0, 21, 28, 0, 3, 2, 0, 0, 0, 0, 1]' : 0.148399}
{'[1, 0, 6, 6, 5, 0, 0, 0, 21, 28, 0, 3, 2, 0, 0, 0, 0, 1]' : 0.148478}
{'[1, 0, 6, 6, 5, 0, 0, 0, 21, 28, 0, 3, 2, 0, 0, 0, 0, 1]' : 0.148594}
{'[1, 0, 6, 6, 5, 0, 0, 0, 21, 28, 0, 3, 2, 0, 0, 0, 0, 1]' : 0.14857}
{'[1, 0, 6, 6, 5, 0, 0, 0, 21, 28, 0, 3, 2, 0, 0, 0, 0, 1]' : 0.148583}
{'[1, 0, 6, 6, 5, 0, 0, 0, 21, 28, 0, 3, 2, 0, 0, 0, 0, 1]' : 0.148339}
{'[1, 0, 6, 6, 5, 0, 0, 0, 21, 28, 0, 3, 2, 0, 0, 0, 0, 1]' : 0.148326}
{'[1, 0, 6, 6, 5, 0, 0, 0, 21, 28, 0, 3, 2, 0, 0, 0, 0, 1]' : 0.148554}
{'[1, 0, 6, 6, 5, 0, 0, 0, 21, 28, 0, 3, 2, 0, 0, 0, 0, 1]' : 0.148488}
{'[1, 0, 6, 6, 5, 0, 0, 0, 21, 28, 0, 3, 2, 0, 0, 0, 0, 1]' : 0.148527}
{'[1, 0, 6, 6, 5, 0, 0, 0, 21, 28, 0, 3, 2, 0, 0, 0, 0, 1]' : 0.148951}
{'[1, 0, 6, 6, 5, 0, 0, 0, 21, 28, 0, 3, 2, 0, 0, 0, 0, 1]' : 0.148301}
{'[1, 0, 6, 6, 5, 0, 0, 0, 21, 28, 0, 3, 2, 0, 0, 0, 0, 1]' : 0.148464}
{'[1, 0, 6, 6, 5, 0, 0, 0, 21, 28, 0, 3, 2, 0, 0, 0, 0, 1]' : 0.148309}
{'[1, 0, 6, 6, 5, 0, 0, 0, 21, 28, 0, 3, 2, 0, 0, 0, 0, 1]' : 0.148391}
{'[1, 0, 6, 6, 5, 0, 0, 0, 21, 28, 0, 3, 2, 0, 0, 0, 0, 1]' : 0.148452}
{'[1, 0, 6, 6, 5, 0, 0, 0, 21, 28, 0, 3, 2, 0, 0, 0, 0, 1]' : 0.148343}
{'[1, 0, 6, 6, 5, 0, 0, 0, 21, 28, 0, 3, 2, 0, 0, 0, 0, 1]' : 0.14872}
{'[1, 0, 6, 6, 5, 0, 0, 0, 21, 28, 0, 3, 2, 0, 0, 0, 0, 1]' : 0.148547}

out:
 ["{'[1, 0, 6, 6, 5, 0, 0, 0, 21, 28, 0, 3, 2, 0, 0, 0, 0, 1]' : 0.176476}", "{'[1, 0, 6, 6, 5, 0, 0, 0, 21, 28, 0, 3, 2, 0, 0, 0, 0, 1]' : 0.176294}", "{'[1, 0, 6, 6, 5, 0, 0, 0, 21, 28, 0, 3, 2, 0, 0, 0, 0, 1]' : 0.176274}", "{'[1, 0, 6, 6, 5, 0, 0, 0, 21, 28, 0, 3, 2, 0, 0, 0, 0, 1]' : 0.156189}", "{'[1, 0, 6, 6, 5, 0, 0, 0, 21, 28, 0, 3, 2, 0, 0, 0, 0, 1]' : 0.148402}", "{'[1, 0, 6, 6, 5, 0, 0, 0, 21, 28, 0, 3, 2, 0, 0, 0, 0, 1]' : 0.148335}", "{'[1, 0, 6, 6, 5, 0, 0, 0, 21, 28, 0, 3, 2, 0, 0, 0, 0, 1]' : 0.148583}", "{'[1, 0, 6, 6, 5, 0, 0, 0, 21, 28, 0, 3, 2, 0, 0, 0, 0, 1]' : 0.148659}", "{'[1, 0, 6, 6, 5, 0, 0, 0, 21, 28, 0, 3, 2, 0, 0, 0, 0, 1]' : 0.148541}", "{'[1, 0, 6, 6, 5, 0, 0, 0, 21, 28, 0, 3, 2, 0, 0, 0, 0, 1]' : 0.148459}", "{'[1, 0, 6, 6, 5, 0, 0, 0, 21, 28, 0, 3, 2, 0, 0, 0, 0, 1]' : 0.148374}", "{'[1, 0, 6, 6, 5, 0, 0, 0, 21, 28, 0, 3, 2, 0, 0, 0, 0, 1]' : 0.148399}", "{'[1, 0, 6, 6, 5, 0, 0, 0, 21, 28, 0, 3, 2, 0, 0, 0, 0, 1]' : 0.148478}", "{'[1, 0, 6, 6, 5, 0, 0, 0, 21, 28, 0, 3, 2, 0, 0, 0, 0, 1]' : 0.148594}", "{'[1, 0, 6, 6, 5, 0, 0, 0, 21, 28, 0, 3, 2, 0, 0, 0, 0, 1]' : 0.14857}", "{'[1, 0, 6, 6, 5, 0, 0, 0, 21, 28, 0, 3, 2, 0, 0, 0, 0, 1]' : 0.148583}", "{'[1, 0, 6, 6, 5, 0, 0, 0, 21, 28, 0, 3, 2, 0, 0, 0, 0, 1]' : 0.148339}", "{'[1, 0, 6, 6, 5, 0, 0, 0, 21, 28, 0, 3, 2, 0, 0, 0, 0, 1]' : 0.148326}", "{'[1, 0, 6, 6, 5, 0, 0, 0, 21, 28, 0, 3, 2, 0, 0, 0, 0, 1]' : 0.148554}", "{'[1, 0, 6, 6, 5, 0, 0, 0, 21, 28, 0, 3, 2, 0, 0, 0, 0, 1]' : 0.148488}", "{'[1, 0, 6, 6, 5, 0, 0, 0, 21, 28, 0, 3, 2, 0, 0, 0, 0, 1]' : 0.148527}", "{'[1, 0, 6, 6, 5, 0, 0, 0, 21, 28, 0, 3, 2, 0, 0, 0, 0, 1]' : 0.148951}", "{'[1, 0, 6, 6, 5, 0, 0, 0, 21, 28, 0, 3, 2, 0, 0, 0, 0, 1]' : 0.148301}", "{'[1, 0, 6, 6, 5, 0, 0, 0, 21, 28, 0, 3, 2, 0, 0, 0, 0, 1]' : 0.148464}", "{'[1, 0, 6, 6, 5, 0, 0, 0, 21, 28, 0, 3, 2, 0, 0, 0, 0, 1]' : 0.148309}", "{'[1, 0, 6, 6, 5, 0, 0, 0, 21, 28, 0, 3, 2, 0, 0, 0, 0, 1]' : 0.148391}", "{'[1, 0, 6, 6, 5, 0, 0, 0, 21, 28, 0, 3, 2, 0, 0, 0, 0, 1]' : 0.148452}", "{'[1, 0, 6, 6, 5, 0, 0, 0, 21, 28, 0, 3, 2, 0, 0, 0, 0, 1]' : 0.148343}", "{'[1, 0, 6, 6, 5, 0, 0, 0, 21, 28, 0, 3, 2, 0, 0, 0, 0, 1]' : 0.14872}", "{'[1, 0, 6, 6, 5, 0, 0, 0, 21, 28, 0, 3, 2, 0, 0, 0, 0, 1]' : 0.148547}"]
returning from 'run': {'[1, 0, 6, 6, 5, 0, 0, 0, 21, 28, 0, 3, 2, 0, 0, 0, 0, 1]': ([0.176476, 0.176294, 0.176274, 0.156189, 0.148402, 0.148335, 0.148583, 0.148659, 0.148541, 0.148459, 0.148374, 0.148399, 0.148478, 0.148594, 0.14857, 0.148583, 0.148339, 0.148326, 0.148554, 0.148488, 0.148527, 0.148951, 0.148301, 0.148464, 0.148309, 0.148391, 0.148452, 0.148343, 0.14872, 0.148547], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 6, 6, 5, 0, 0, 0, 21, 28, 0, 3, 2, 0, 0, 0, 0, 1]': ([0.176476, 0.176294, 0.176274, 0.156189, 0.148402, 0.148335, 0.148583, 0.148659, 0.148541, 0.148459, 0.148374, 0.148399, 0.148478, 0.148594, 0.14857, 0.148583, 0.148339, 0.148326, 0.148554, 0.148488, 0.148527, 0.148951, 0.148301, 0.148464, 0.148309, 0.148391, 0.148452, 0.148343, 0.14872, 0.148547], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	35
        Max loop nest depth: 	5
        Additions: 		1158
        Multiplications: 	420
        Divisions: 		0
        Logical: 		0
        Reads: 			2389
        Writes: 		467
        Comparisons:		35
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest14.exe __orio_perftest14.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest14.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest14.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest14.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest14.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	57
        Max loop nest depth: 	5
        Additions: 		2294
        Multiplications: 	648
        Divisions: 		0
        Logical: 		0
        Reads: 			3872
        Writes: 		513
        Comparisons:		57
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest15.exe __orio_perftest15.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest15.exe  
Program Test Output: 
{'[0, 1, 6, 6, 5, 6, 1, 0, 9, 8, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.122609}
{'[0, 1, 6, 6, 5, 6, 1, 0, 9, 8, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.122645}
{'[0, 1, 6, 6, 5, 6, 1, 0, 9, 8, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.122462}
{'[0, 1, 6, 6, 5, 6, 1, 0, 9, 8, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.122371}
{'[0, 1, 6, 6, 5, 6, 1, 0, 9, 8, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.112418}
{'[0, 1, 6, 6, 5, 6, 1, 0, 9, 8, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.104967}
{'[0, 1, 6, 6, 5, 6, 1, 0, 9, 8, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.104757}
{'[0, 1, 6, 6, 5, 6, 1, 0, 9, 8, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.10492}
{'[0, 1, 6, 6, 5, 6, 1, 0, 9, 8, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.104796}
{'[0, 1, 6, 6, 5, 6, 1, 0, 9, 8, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.105081}
{'[0, 1, 6, 6, 5, 6, 1, 0, 9, 8, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.104806}
{'[0, 1, 6, 6, 5, 6, 1, 0, 9, 8, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.104801}
{'[0, 1, 6, 6, 5, 6, 1, 0, 9, 8, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.104845}
{'[0, 1, 6, 6, 5, 6, 1, 0, 9, 8, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.104942}
{'[0, 1, 6, 6, 5, 6, 1, 0, 9, 8, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.105064}
{'[0, 1, 6, 6, 5, 6, 1, 0, 9, 8, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.10548}
{'[0, 1, 6, 6, 5, 6, 1, 0, 9, 8, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.104783}
{'[0, 1, 6, 6, 5, 6, 1, 0, 9, 8, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.105208}
{'[0, 1, 6, 6, 5, 6, 1, 0, 9, 8, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.104754}
{'[0, 1, 6, 6, 5, 6, 1, 0, 9, 8, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.104899}
{'[0, 1, 6, 6, 5, 6, 1, 0, 9, 8, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.10484}
{'[0, 1, 6, 6, 5, 6, 1, 0, 9, 8, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.104784}
{'[0, 1, 6, 6, 5, 6, 1, 0, 9, 8, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.105031}
{'[0, 1, 6, 6, 5, 6, 1, 0, 9, 8, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.104769}
{'[0, 1, 6, 6, 5, 6, 1, 0, 9, 8, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.104968}
{'[0, 1, 6, 6, 5, 6, 1, 0, 9, 8, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.105165}
{'[0, 1, 6, 6, 5, 6, 1, 0, 9, 8, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.104925}
{'[0, 1, 6, 6, 5, 6, 1, 0, 9, 8, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.104869}
{'[0, 1, 6, 6, 5, 6, 1, 0, 9, 8, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.104878}
{'[0, 1, 6, 6, 5, 6, 1, 0, 9, 8, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.106517}

out:
 ["{'[0, 1, 6, 6, 5, 6, 1, 0, 9, 8, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.122609}", "{'[0, 1, 6, 6, 5, 6, 1, 0, 9, 8, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.122645}", "{'[0, 1, 6, 6, 5, 6, 1, 0, 9, 8, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.122462}", "{'[0, 1, 6, 6, 5, 6, 1, 0, 9, 8, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.122371}", "{'[0, 1, 6, 6, 5, 6, 1, 0, 9, 8, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.112418}", "{'[0, 1, 6, 6, 5, 6, 1, 0, 9, 8, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.104967}", "{'[0, 1, 6, 6, 5, 6, 1, 0, 9, 8, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.104757}", "{'[0, 1, 6, 6, 5, 6, 1, 0, 9, 8, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.10492}", "{'[0, 1, 6, 6, 5, 6, 1, 0, 9, 8, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.104796}", "{'[0, 1, 6, 6, 5, 6, 1, 0, 9, 8, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.105081}", "{'[0, 1, 6, 6, 5, 6, 1, 0, 9, 8, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.104806}", "{'[0, 1, 6, 6, 5, 6, 1, 0, 9, 8, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.104801}", "{'[0, 1, 6, 6, 5, 6, 1, 0, 9, 8, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.104845}", "{'[0, 1, 6, 6, 5, 6, 1, 0, 9, 8, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.104942}", "{'[0, 1, 6, 6, 5, 6, 1, 0, 9, 8, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.105064}", "{'[0, 1, 6, 6, 5, 6, 1, 0, 9, 8, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.10548}", "{'[0, 1, 6, 6, 5, 6, 1, 0, 9, 8, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.104783}", "{'[0, 1, 6, 6, 5, 6, 1, 0, 9, 8, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.105208}", "{'[0, 1, 6, 6, 5, 6, 1, 0, 9, 8, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.104754}", "{'[0, 1, 6, 6, 5, 6, 1, 0, 9, 8, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.104899}", "{'[0, 1, 6, 6, 5, 6, 1, 0, 9, 8, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.10484}", "{'[0, 1, 6, 6, 5, 6, 1, 0, 9, 8, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.104784}", "{'[0, 1, 6, 6, 5, 6, 1, 0, 9, 8, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.105031}", "{'[0, 1, 6, 6, 5, 6, 1, 0, 9, 8, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.104769}", "{'[0, 1, 6, 6, 5, 6, 1, 0, 9, 8, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.104968}", "{'[0, 1, 6, 6, 5, 6, 1, 0, 9, 8, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.105165}", "{'[0, 1, 6, 6, 5, 6, 1, 0, 9, 8, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.104925}", "{'[0, 1, 6, 6, 5, 6, 1, 0, 9, 8, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.104869}", "{'[0, 1, 6, 6, 5, 6, 1, 0, 9, 8, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.104878}", "{'[0, 1, 6, 6, 5, 6, 1, 0, 9, 8, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.106517}"]
returning from 'run': {'[0, 1, 6, 6, 5, 6, 1, 0, 9, 8, 0, 7, 1, 0, 1, 0, 1, 1]': ([0.122609, 0.122645, 0.122462, 0.122371, 0.112418, 0.104967, 0.104757, 0.10492, 0.104796, 0.105081, 0.104806, 0.104801, 0.104845, 0.104942, 0.105064, 0.10548, 0.104783, 0.105208, 0.104754, 0.104899, 0.10484, 0.104784, 0.105031, 0.104769, 0.104968, 0.105165, 0.104925, 0.104869, 0.104878, 0.106517], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 1, 6, 6, 5, 6, 1, 0, 9, 8, 0, 7, 1, 0, 1, 0, 1, 1]': ([0.122609, 0.122645, 0.122462, 0.122371, 0.112418, 0.104967, 0.104757, 0.10492, 0.104796, 0.105081, 0.104806, 0.104801, 0.104845, 0.104942, 0.105064, 0.10548, 0.104783, 0.105208, 0.104754, 0.104899, 0.10484, 0.104784, 0.105031, 0.104769, 0.104968, 0.105165, 0.104925, 0.104869, 0.104878, 0.106517], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	5
        Additions: 		10192
        Multiplications: 	3036
        Divisions: 		0
        Logical: 		0
        Reads: 			15387
        Writes: 		1591
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest16.exe __orio_perftest16.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest16.exe  
Program Test Output: 
{'[4, 1, 0, 0, 6, 4, 0, 0, 16, 0, 13, 29, 2, 0, 0, 0, 1, 1]' : 0.340473}
{'[4, 1, 0, 0, 6, 4, 0, 0, 16, 0, 13, 29, 2, 0, 0, 0, 1, 1]' : 0.339595}
{'[4, 1, 0, 0, 6, 4, 0, 0, 16, 0, 13, 29, 2, 0, 0, 0, 1, 1]' : 0.339898}
{'[4, 1, 0, 0, 6, 4, 0, 0, 16, 0, 13, 29, 2, 0, 0, 0, 1, 1]' : 0.340104}
{'[4, 1, 0, 0, 6, 4, 0, 0, 16, 0, 13, 29, 2, 0, 0, 0, 1, 1]' : 0.339952}
{'[4, 1, 0, 0, 6, 4, 0, 0, 16, 0, 13, 29, 2, 0, 0, 0, 1, 1]' : 0.339522}
{'[4, 1, 0, 0, 6, 4, 0, 0, 16, 0, 13, 29, 2, 0, 0, 0, 1, 1]' : 0.339829}
{'[4, 1, 0, 0, 6, 4, 0, 0, 16, 0, 13, 29, 2, 0, 0, 0, 1, 1]' : 0.34042}
{'[4, 1, 0, 0, 6, 4, 0, 0, 16, 0, 13, 29, 2, 0, 0, 0, 1, 1]' : 0.339976}
{'[4, 1, 0, 0, 6, 4, 0, 0, 16, 0, 13, 29, 2, 0, 0, 0, 1, 1]' : 0.339859}
{'[4, 1, 0, 0, 6, 4, 0, 0, 16, 0, 13, 29, 2, 0, 0, 0, 1, 1]' : 0.339574}
{'[4, 1, 0, 0, 6, 4, 0, 0, 16, 0, 13, 29, 2, 0, 0, 0, 1, 1]' : 0.336661}
{'[4, 1, 0, 0, 6, 4, 0, 0, 16, 0, 13, 29, 2, 0, 0, 0, 1, 1]' : 0.336404}
{'[4, 1, 0, 0, 6, 4, 0, 0, 16, 0, 13, 29, 2, 0, 0, 0, 1, 1]' : 0.336999}
{'[4, 1, 0, 0, 6, 4, 0, 0, 16, 0, 13, 29, 2, 0, 0, 0, 1, 1]' : 0.33646}
{'[4, 1, 0, 0, 6, 4, 0, 0, 16, 0, 13, 29, 2, 0, 0, 0, 1, 1]' : 0.336281}
{'[4, 1, 0, 0, 6, 4, 0, 0, 16, 0, 13, 29, 2, 0, 0, 0, 1, 1]' : 0.335815}
{'[4, 1, 0, 0, 6, 4, 0, 0, 16, 0, 13, 29, 2, 0, 0, 0, 1, 1]' : 0.333532}
{'[4, 1, 0, 0, 6, 4, 0, 0, 16, 0, 13, 29, 2, 0, 0, 0, 1, 1]' : 0.333481}
{'[4, 1, 0, 0, 6, 4, 0, 0, 16, 0, 13, 29, 2, 0, 0, 0, 1, 1]' : 0.333713}
{'[4, 1, 0, 0, 6, 4, 0, 0, 16, 0, 13, 29, 2, 0, 0, 0, 1, 1]' : 0.334428}
{'[4, 1, 0, 0, 6, 4, 0, 0, 16, 0, 13, 29, 2, 0, 0, 0, 1, 1]' : 0.333382}
{'[4, 1, 0, 0, 6, 4, 0, 0, 16, 0, 13, 29, 2, 0, 0, 0, 1, 1]' : 0.33341}
{'[4, 1, 0, 0, 6, 4, 0, 0, 16, 0, 13, 29, 2, 0, 0, 0, 1, 1]' : 0.334415}
{'[4, 1, 0, 0, 6, 4, 0, 0, 16, 0, 13, 29, 2, 0, 0, 0, 1, 1]' : 0.333621}
{'[4, 1, 0, 0, 6, 4, 0, 0, 16, 0, 13, 29, 2, 0, 0, 0, 1, 1]' : 0.333787}
{'[4, 1, 0, 0, 6, 4, 0, 0, 16, 0, 13, 29, 2, 0, 0, 0, 1, 1]' : 0.334063}
{'[4, 1, 0, 0, 6, 4, 0, 0, 16, 0, 13, 29, 2, 0, 0, 0, 1, 1]' : 0.33359}
{'[4, 1, 0, 0, 6, 4, 0, 0, 16, 0, 13, 29, 2, 0, 0, 0, 1, 1]' : 0.333715}
{'[4, 1, 0, 0, 6, 4, 0, 0, 16, 0, 13, 29, 2, 0, 0, 0, 1, 1]' : 0.333875}

out:
 ["{'[4, 1, 0, 0, 6, 4, 0, 0, 16, 0, 13, 29, 2, 0, 0, 0, 1, 1]' : 0.340473}", "{'[4, 1, 0, 0, 6, 4, 0, 0, 16, 0, 13, 29, 2, 0, 0, 0, 1, 1]' : 0.339595}", "{'[4, 1, 0, 0, 6, 4, 0, 0, 16, 0, 13, 29, 2, 0, 0, 0, 1, 1]' : 0.339898}", "{'[4, 1, 0, 0, 6, 4, 0, 0, 16, 0, 13, 29, 2, 0, 0, 0, 1, 1]' : 0.340104}", "{'[4, 1, 0, 0, 6, 4, 0, 0, 16, 0, 13, 29, 2, 0, 0, 0, 1, 1]' : 0.339952}", "{'[4, 1, 0, 0, 6, 4, 0, 0, 16, 0, 13, 29, 2, 0, 0, 0, 1, 1]' : 0.339522}", "{'[4, 1, 0, 0, 6, 4, 0, 0, 16, 0, 13, 29, 2, 0, 0, 0, 1, 1]' : 0.339829}", "{'[4, 1, 0, 0, 6, 4, 0, 0, 16, 0, 13, 29, 2, 0, 0, 0, 1, 1]' : 0.34042}", "{'[4, 1, 0, 0, 6, 4, 0, 0, 16, 0, 13, 29, 2, 0, 0, 0, 1, 1]' : 0.339976}", "{'[4, 1, 0, 0, 6, 4, 0, 0, 16, 0, 13, 29, 2, 0, 0, 0, 1, 1]' : 0.339859}", "{'[4, 1, 0, 0, 6, 4, 0, 0, 16, 0, 13, 29, 2, 0, 0, 0, 1, 1]' : 0.339574}", "{'[4, 1, 0, 0, 6, 4, 0, 0, 16, 0, 13, 29, 2, 0, 0, 0, 1, 1]' : 0.336661}", "{'[4, 1, 0, 0, 6, 4, 0, 0, 16, 0, 13, 29, 2, 0, 0, 0, 1, 1]' : 0.336404}", "{'[4, 1, 0, 0, 6, 4, 0, 0, 16, 0, 13, 29, 2, 0, 0, 0, 1, 1]' : 0.336999}", "{'[4, 1, 0, 0, 6, 4, 0, 0, 16, 0, 13, 29, 2, 0, 0, 0, 1, 1]' : 0.33646}", "{'[4, 1, 0, 0, 6, 4, 0, 0, 16, 0, 13, 29, 2, 0, 0, 0, 1, 1]' : 0.336281}", "{'[4, 1, 0, 0, 6, 4, 0, 0, 16, 0, 13, 29, 2, 0, 0, 0, 1, 1]' : 0.335815}", "{'[4, 1, 0, 0, 6, 4, 0, 0, 16, 0, 13, 29, 2, 0, 0, 0, 1, 1]' : 0.333532}", "{'[4, 1, 0, 0, 6, 4, 0, 0, 16, 0, 13, 29, 2, 0, 0, 0, 1, 1]' : 0.333481}", "{'[4, 1, 0, 0, 6, 4, 0, 0, 16, 0, 13, 29, 2, 0, 0, 0, 1, 1]' : 0.333713}", "{'[4, 1, 0, 0, 6, 4, 0, 0, 16, 0, 13, 29, 2, 0, 0, 0, 1, 1]' : 0.334428}", "{'[4, 1, 0, 0, 6, 4, 0, 0, 16, 0, 13, 29, 2, 0, 0, 0, 1, 1]' : 0.333382}", "{'[4, 1, 0, 0, 6, 4, 0, 0, 16, 0, 13, 29, 2, 0, 0, 0, 1, 1]' : 0.33341}", "{'[4, 1, 0, 0, 6, 4, 0, 0, 16, 0, 13, 29, 2, 0, 0, 0, 1, 1]' : 0.334415}", "{'[4, 1, 0, 0, 6, 4, 0, 0, 16, 0, 13, 29, 2, 0, 0, 0, 1, 1]' : 0.333621}", "{'[4, 1, 0, 0, 6, 4, 0, 0, 16, 0, 13, 29, 2, 0, 0, 0, 1, 1]' : 0.333787}", "{'[4, 1, 0, 0, 6, 4, 0, 0, 16, 0, 13, 29, 2, 0, 0, 0, 1, 1]' : 0.334063}", "{'[4, 1, 0, 0, 6, 4, 0, 0, 16, 0, 13, 29, 2, 0, 0, 0, 1, 1]' : 0.33359}", "{'[4, 1, 0, 0, 6, 4, 0, 0, 16, 0, 13, 29, 2, 0, 0, 0, 1, 1]' : 0.333715}", "{'[4, 1, 0, 0, 6, 4, 0, 0, 16, 0, 13, 29, 2, 0, 0, 0, 1, 1]' : 0.333875}"]
returning from 'run': {'[4, 1, 0, 0, 6, 4, 0, 0, 16, 0, 13, 29, 2, 0, 0, 0, 1, 1]': ([0.340473, 0.339595, 0.339898, 0.340104, 0.339952, 0.339522, 0.339829, 0.34042, 0.339976, 0.339859, 0.339574, 0.336661, 0.336404, 0.336999, 0.33646, 0.336281, 0.335815, 0.333532, 0.333481, 0.333713, 0.334428, 0.333382, 0.33341, 0.334415, 0.333621, 0.333787, 0.334063, 0.33359, 0.333715, 0.333875], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 1, 0, 0, 6, 4, 0, 0, 16, 0, 13, 29, 2, 0, 0, 0, 1, 1]': ([0.340473, 0.339595, 0.339898, 0.340104, 0.339952, 0.339522, 0.339829, 0.34042, 0.339976, 0.339859, 0.339574, 0.336661, 0.336404, 0.336999, 0.33646, 0.336281, 0.335815, 0.333532, 0.333481, 0.333713, 0.334428, 0.333382, 0.33341, 0.334415, 0.333621, 0.333787, 0.334063, 0.33359, 0.333715, 0.333875], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		380
        Multiplications: 	110
        Divisions: 		0
        Logical: 		0
        Reads: 			740
        Writes: 		85
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest17.exe __orio_perftest17.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest17.exe  
Program Test Output: 
{'[0, 6, 6, 0, 5, 4, 1, 1, 0, 0, 23, 28, 0, 0, 0, 0, 1, 0]' : 0.288405}
{'[0, 6, 6, 0, 5, 4, 1, 1, 0, 0, 23, 28, 0, 0, 0, 0, 1, 0]' : 0.288234}
{'[0, 6, 6, 0, 5, 4, 1, 1, 0, 0, 23, 28, 0, 0, 0, 0, 1, 0]' : 0.245728}
{'[0, 6, 6, 0, 5, 4, 1, 1, 0, 0, 23, 28, 0, 0, 0, 0, 1, 0]' : 0.241879}
{'[0, 6, 6, 0, 5, 4, 1, 1, 0, 0, 23, 28, 0, 0, 0, 0, 1, 0]' : 0.24231}
{'[0, 6, 6, 0, 5, 4, 1, 1, 0, 0, 23, 28, 0, 0, 0, 0, 1, 0]' : 0.241739}
{'[0, 6, 6, 0, 5, 4, 1, 1, 0, 0, 23, 28, 0, 0, 0, 0, 1, 0]' : 0.241712}
{'[0, 6, 6, 0, 5, 4, 1, 1, 0, 0, 23, 28, 0, 0, 0, 0, 1, 0]' : 0.241987}
{'[0, 6, 6, 0, 5, 4, 1, 1, 0, 0, 23, 28, 0, 0, 0, 0, 1, 0]' : 0.241569}
{'[0, 6, 6, 0, 5, 4, 1, 1, 0, 0, 23, 28, 0, 0, 0, 0, 1, 0]' : 0.241544}
{'[0, 6, 6, 0, 5, 4, 1, 1, 0, 0, 23, 28, 0, 0, 0, 0, 1, 0]' : 0.241557}
{'[0, 6, 6, 0, 5, 4, 1, 1, 0, 0, 23, 28, 0, 0, 0, 0, 1, 0]' : 0.242047}
{'[0, 6, 6, 0, 5, 4, 1, 1, 0, 0, 23, 28, 0, 0, 0, 0, 1, 0]' : 0.241991}
{'[0, 6, 6, 0, 5, 4, 1, 1, 0, 0, 23, 28, 0, 0, 0, 0, 1, 0]' : 0.241518}
{'[0, 6, 6, 0, 5, 4, 1, 1, 0, 0, 23, 28, 0, 0, 0, 0, 1, 0]' : 0.241728}
{'[0, 6, 6, 0, 5, 4, 1, 1, 0, 0, 23, 28, 0, 0, 0, 0, 1, 0]' : 0.241866}
{'[0, 6, 6, 0, 5, 4, 1, 1, 0, 0, 23, 28, 0, 0, 0, 0, 1, 0]' : 0.242189}
{'[0, 6, 6, 0, 5, 4, 1, 1, 0, 0, 23, 28, 0, 0, 0, 0, 1, 0]' : 0.241578}
{'[0, 6, 6, 0, 5, 4, 1, 1, 0, 0, 23, 28, 0, 0, 0, 0, 1, 0]' : 0.241819}
{'[0, 6, 6, 0, 5, 4, 1, 1, 0, 0, 23, 28, 0, 0, 0, 0, 1, 0]' : 0.241584}
{'[0, 6, 6, 0, 5, 4, 1, 1, 0, 0, 23, 28, 0, 0, 0, 0, 1, 0]' : 0.241768}
{'[0, 6, 6, 0, 5, 4, 1, 1, 0, 0, 23, 28, 0, 0, 0, 0, 1, 0]' : 0.241816}
{'[0, 6, 6, 0, 5, 4, 1, 1, 0, 0, 23, 28, 0, 0, 0, 0, 1, 0]' : 0.241982}
{'[0, 6, 6, 0, 5, 4, 1, 1, 0, 0, 23, 28, 0, 0, 0, 0, 1, 0]' : 0.241756}
{'[0, 6, 6, 0, 5, 4, 1, 1, 0, 0, 23, 28, 0, 0, 0, 0, 1, 0]' : 0.241829}
{'[0, 6, 6, 0, 5, 4, 1, 1, 0, 0, 23, 28, 0, 0, 0, 0, 1, 0]' : 0.242175}
{'[0, 6, 6, 0, 5, 4, 1, 1, 0, 0, 23, 28, 0, 0, 0, 0, 1, 0]' : 0.241643}
{'[0, 6, 6, 0, 5, 4, 1, 1, 0, 0, 23, 28, 0, 0, 0, 0, 1, 0]' : 0.241569}
{'[0, 6, 6, 0, 5, 4, 1, 1, 0, 0, 23, 28, 0, 0, 0, 0, 1, 0]' : 0.2419}
{'[0, 6, 6, 0, 5, 4, 1, 1, 0, 0, 23, 28, 0, 0, 0, 0, 1, 0]' : 0.241622}

out:
 ["{'[0, 6, 6, 0, 5, 4, 1, 1, 0, 0, 23, 28, 0, 0, 0, 0, 1, 0]' : 0.288405}", "{'[0, 6, 6, 0, 5, 4, 1, 1, 0, 0, 23, 28, 0, 0, 0, 0, 1, 0]' : 0.288234}", "{'[0, 6, 6, 0, 5, 4, 1, 1, 0, 0, 23, 28, 0, 0, 0, 0, 1, 0]' : 0.245728}", "{'[0, 6, 6, 0, 5, 4, 1, 1, 0, 0, 23, 28, 0, 0, 0, 0, 1, 0]' : 0.241879}", "{'[0, 6, 6, 0, 5, 4, 1, 1, 0, 0, 23, 28, 0, 0, 0, 0, 1, 0]' : 0.24231}", "{'[0, 6, 6, 0, 5, 4, 1, 1, 0, 0, 23, 28, 0, 0, 0, 0, 1, 0]' : 0.241739}", "{'[0, 6, 6, 0, 5, 4, 1, 1, 0, 0, 23, 28, 0, 0, 0, 0, 1, 0]' : 0.241712}", "{'[0, 6, 6, 0, 5, 4, 1, 1, 0, 0, 23, 28, 0, 0, 0, 0, 1, 0]' : 0.241987}", "{'[0, 6, 6, 0, 5, 4, 1, 1, 0, 0, 23, 28, 0, 0, 0, 0, 1, 0]' : 0.241569}", "{'[0, 6, 6, 0, 5, 4, 1, 1, 0, 0, 23, 28, 0, 0, 0, 0, 1, 0]' : 0.241544}", "{'[0, 6, 6, 0, 5, 4, 1, 1, 0, 0, 23, 28, 0, 0, 0, 0, 1, 0]' : 0.241557}", "{'[0, 6, 6, 0, 5, 4, 1, 1, 0, 0, 23, 28, 0, 0, 0, 0, 1, 0]' : 0.242047}", "{'[0, 6, 6, 0, 5, 4, 1, 1, 0, 0, 23, 28, 0, 0, 0, 0, 1, 0]' : 0.241991}", "{'[0, 6, 6, 0, 5, 4, 1, 1, 0, 0, 23, 28, 0, 0, 0, 0, 1, 0]' : 0.241518}", "{'[0, 6, 6, 0, 5, 4, 1, 1, 0, 0, 23, 28, 0, 0, 0, 0, 1, 0]' : 0.241728}", "{'[0, 6, 6, 0, 5, 4, 1, 1, 0, 0, 23, 28, 0, 0, 0, 0, 1, 0]' : 0.241866}", "{'[0, 6, 6, 0, 5, 4, 1, 1, 0, 0, 23, 28, 0, 0, 0, 0, 1, 0]' : 0.242189}", "{'[0, 6, 6, 0, 5, 4, 1, 1, 0, 0, 23, 28, 0, 0, 0, 0, 1, 0]' : 0.241578}", "{'[0, 6, 6, 0, 5, 4, 1, 1, 0, 0, 23, 28, 0, 0, 0, 0, 1, 0]' : 0.241819}", "{'[0, 6, 6, 0, 5, 4, 1, 1, 0, 0, 23, 28, 0, 0, 0, 0, 1, 0]' : 0.241584}", "{'[0, 6, 6, 0, 5, 4, 1, 1, 0, 0, 23, 28, 0, 0, 0, 0, 1, 0]' : 0.241768}", "{'[0, 6, 6, 0, 5, 4, 1, 1, 0, 0, 23, 28, 0, 0, 0, 0, 1, 0]' : 0.241816}", "{'[0, 6, 6, 0, 5, 4, 1, 1, 0, 0, 23, 28, 0, 0, 0, 0, 1, 0]' : 0.241982}", "{'[0, 6, 6, 0, 5, 4, 1, 1, 0, 0, 23, 28, 0, 0, 0, 0, 1, 0]' : 0.241756}", "{'[0, 6, 6, 0, 5, 4, 1, 1, 0, 0, 23, 28, 0, 0, 0, 0, 1, 0]' : 0.241829}", "{'[0, 6, 6, 0, 5, 4, 1, 1, 0, 0, 23, 28, 0, 0, 0, 0, 1, 0]' : 0.242175}", "{'[0, 6, 6, 0, 5, 4, 1, 1, 0, 0, 23, 28, 0, 0, 0, 0, 1, 0]' : 0.241643}", "{'[0, 6, 6, 0, 5, 4, 1, 1, 0, 0, 23, 28, 0, 0, 0, 0, 1, 0]' : 0.241569}", "{'[0, 6, 6, 0, 5, 4, 1, 1, 0, 0, 23, 28, 0, 0, 0, 0, 1, 0]' : 0.2419}", "{'[0, 6, 6, 0, 5, 4, 1, 1, 0, 0, 23, 28, 0, 0, 0, 0, 1, 0]' : 0.241622}"]
returning from 'run': {'[0, 6, 6, 0, 5, 4, 1, 1, 0, 0, 23, 28, 0, 0, 0, 0, 1, 0]': ([0.288405, 0.288234, 0.245728, 0.241879, 0.24231, 0.241739, 0.241712, 0.241987, 0.241569, 0.241544, 0.241557, 0.242047, 0.241991, 0.241518, 0.241728, 0.241866, 0.242189, 0.241578, 0.241819, 0.241584, 0.241768, 0.241816, 0.241982, 0.241756, 0.241829, 0.242175, 0.241643, 0.241569, 0.2419, 0.241622], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 6, 0, 5, 4, 1, 1, 0, 0, 23, 28, 0, 0, 0, 0, 1, 0]': ([0.288405, 0.288234, 0.245728, 0.241879, 0.24231, 0.241739, 0.241712, 0.241987, 0.241569, 0.241544, 0.241557, 0.242047, 0.241991, 0.241518, 0.241728, 0.241866, 0.242189, 0.241578, 0.241819, 0.241584, 0.241768, 0.241816, 0.241982, 0.241756, 0.241829, 0.242175, 0.241643, 0.241569, 0.2419, 0.241622], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	5
        Additions: 		730
        Multiplications: 	312
        Divisions: 		0
        Logical: 		0
        Reads: 			1495
        Writes: 		291
        Comparisons:		24
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest18.exe __orio_perftest18.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest18.exe  
Program Test Output: 
{'[0, 6, 1, 6, 6, 0, 0, 0, 26, 2, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.124152}
{'[0, 6, 1, 6, 6, 0, 0, 0, 26, 2, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.124358}
{'[0, 6, 1, 6, 6, 0, 0, 0, 26, 2, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.124082}
{'[0, 6, 1, 6, 6, 0, 0, 0, 26, 2, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.124052}
{'[0, 6, 1, 6, 6, 0, 0, 0, 26, 2, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.118839}
{'[0, 6, 1, 6, 6, 0, 0, 0, 26, 2, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.107877}
{'[0, 6, 1, 6, 6, 0, 0, 0, 26, 2, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.107965}
{'[0, 6, 1, 6, 6, 0, 0, 0, 26, 2, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.107897}
{'[0, 6, 1, 6, 6, 0, 0, 0, 26, 2, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.107978}
{'[0, 6, 1, 6, 6, 0, 0, 0, 26, 2, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.107993}
{'[0, 6, 1, 6, 6, 0, 0, 0, 26, 2, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.10792}
{'[0, 6, 1, 6, 6, 0, 0, 0, 26, 2, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.107983}
{'[0, 6, 1, 6, 6, 0, 0, 0, 26, 2, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.108104}
{'[0, 6, 1, 6, 6, 0, 0, 0, 26, 2, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.10825}
{'[0, 6, 1, 6, 6, 0, 0, 0, 26, 2, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.108056}
{'[0, 6, 1, 6, 6, 0, 0, 0, 26, 2, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.107978}
{'[0, 6, 1, 6, 6, 0, 0, 0, 26, 2, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.107991}
{'[0, 6, 1, 6, 6, 0, 0, 0, 26, 2, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.107904}
{'[0, 6, 1, 6, 6, 0, 0, 0, 26, 2, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.107981}
{'[0, 6, 1, 6, 6, 0, 0, 0, 26, 2, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.107976}
{'[0, 6, 1, 6, 6, 0, 0, 0, 26, 2, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.108296}
{'[0, 6, 1, 6, 6, 0, 0, 0, 26, 2, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.107842}
{'[0, 6, 1, 6, 6, 0, 0, 0, 26, 2, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.108322}
{'[0, 6, 1, 6, 6, 0, 0, 0, 26, 2, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.10829}
{'[0, 6, 1, 6, 6, 0, 0, 0, 26, 2, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.108138}
{'[0, 6, 1, 6, 6, 0, 0, 0, 26, 2, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.108128}
{'[0, 6, 1, 6, 6, 0, 0, 0, 26, 2, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.108145}
{'[0, 6, 1, 6, 6, 0, 0, 0, 26, 2, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.108041}
{'[0, 6, 1, 6, 6, 0, 0, 0, 26, 2, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.107975}
{'[0, 6, 1, 6, 6, 0, 0, 0, 26, 2, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.108064}

out:
 ["{'[0, 6, 1, 6, 6, 0, 0, 0, 26, 2, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.124152}", "{'[0, 6, 1, 6, 6, 0, 0, 0, 26, 2, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.124358}", "{'[0, 6, 1, 6, 6, 0, 0, 0, 26, 2, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.124082}", "{'[0, 6, 1, 6, 6, 0, 0, 0, 26, 2, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.124052}", "{'[0, 6, 1, 6, 6, 0, 0, 0, 26, 2, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.118839}", "{'[0, 6, 1, 6, 6, 0, 0, 0, 26, 2, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.107877}", "{'[0, 6, 1, 6, 6, 0, 0, 0, 26, 2, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.107965}", "{'[0, 6, 1, 6, 6, 0, 0, 0, 26, 2, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.107897}", "{'[0, 6, 1, 6, 6, 0, 0, 0, 26, 2, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.107978}", "{'[0, 6, 1, 6, 6, 0, 0, 0, 26, 2, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.107993}", "{'[0, 6, 1, 6, 6, 0, 0, 0, 26, 2, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.10792}", "{'[0, 6, 1, 6, 6, 0, 0, 0, 26, 2, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.107983}", "{'[0, 6, 1, 6, 6, 0, 0, 0, 26, 2, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.108104}", "{'[0, 6, 1, 6, 6, 0, 0, 0, 26, 2, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.10825}", "{'[0, 6, 1, 6, 6, 0, 0, 0, 26, 2, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.108056}", "{'[0, 6, 1, 6, 6, 0, 0, 0, 26, 2, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.107978}", "{'[0, 6, 1, 6, 6, 0, 0, 0, 26, 2, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.107991}", "{'[0, 6, 1, 6, 6, 0, 0, 0, 26, 2, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.107904}", "{'[0, 6, 1, 6, 6, 0, 0, 0, 26, 2, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.107981}", "{'[0, 6, 1, 6, 6, 0, 0, 0, 26, 2, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.107976}", "{'[0, 6, 1, 6, 6, 0, 0, 0, 26, 2, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.108296}", "{'[0, 6, 1, 6, 6, 0, 0, 0, 26, 2, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.107842}", "{'[0, 6, 1, 6, 6, 0, 0, 0, 26, 2, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.108322}", "{'[0, 6, 1, 6, 6, 0, 0, 0, 26, 2, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.10829}", "{'[0, 6, 1, 6, 6, 0, 0, 0, 26, 2, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.108138}", "{'[0, 6, 1, 6, 6, 0, 0, 0, 26, 2, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.108128}", "{'[0, 6, 1, 6, 6, 0, 0, 0, 26, 2, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.108145}", "{'[0, 6, 1, 6, 6, 0, 0, 0, 26, 2, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.108041}", "{'[0, 6, 1, 6, 6, 0, 0, 0, 26, 2, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.107975}", "{'[0, 6, 1, 6, 6, 0, 0, 0, 26, 2, 10, 0, 1, 0, 0, 1, 0, 0]' : 0.108064}"]
returning from 'run': {'[0, 6, 1, 6, 6, 0, 0, 0, 26, 2, 10, 0, 1, 0, 0, 1, 0, 0]': ([0.124152, 0.124358, 0.124082, 0.124052, 0.118839, 0.107877, 0.107965, 0.107897, 0.107978, 0.107993, 0.10792, 0.107983, 0.108104, 0.10825, 0.108056, 0.107978, 0.107991, 0.107904, 0.107981, 0.107976, 0.108296, 0.107842, 0.108322, 0.10829, 0.108138, 0.108128, 0.108145, 0.108041, 0.107975, 0.108064], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 1, 6, 6, 0, 0, 0, 26, 2, 10, 0, 1, 0, 0, 1, 0, 0]': ([0.124152, 0.124358, 0.124082, 0.124052, 0.118839, 0.107877, 0.107965, 0.107897, 0.107978, 0.107993, 0.10792, 0.107983, 0.108104, 0.10825, 0.108056, 0.107978, 0.107991, 0.107904, 0.107981, 0.107976, 0.108296, 0.107842, 0.108322, 0.10829, 0.108138, 0.108128, 0.108145, 0.108041, 0.107975, 0.108064], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	4
        Additions: 		1271
        Multiplications: 	396
        Divisions: 		0
        Logical: 		0
        Reads: 			2215
        Writes: 		250
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest19.exe __orio_perftest19.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest19.exe  
Program Test Output: 
{'[0, 0, 0, 5, 2, 6, 0, 1, 6, 0, 3, 0, 2, 0, 0, 0, 0, 0]' : 0.206201}
{'[0, 0, 0, 5, 2, 6, 0, 1, 6, 0, 3, 0, 2, 0, 0, 0, 0, 0]' : 0.20728}
{'[0, 0, 0, 5, 2, 6, 0, 1, 6, 0, 3, 0, 2, 0, 0, 0, 0, 0]' : 0.20355}
{'[0, 0, 0, 5, 2, 6, 0, 1, 6, 0, 3, 0, 2, 0, 0, 0, 0, 0]' : 0.185774}
{'[0, 0, 0, 5, 2, 6, 0, 1, 6, 0, 3, 0, 2, 0, 0, 0, 0, 0]' : 0.186049}
{'[0, 0, 0, 5, 2, 6, 0, 1, 6, 0, 3, 0, 2, 0, 0, 0, 0, 0]' : 0.186146}
{'[0, 0, 0, 5, 2, 6, 0, 1, 6, 0, 3, 0, 2, 0, 0, 0, 0, 0]' : 0.185603}
{'[0, 0, 0, 5, 2, 6, 0, 1, 6, 0, 3, 0, 2, 0, 0, 0, 0, 0]' : 0.186611}
{'[0, 0, 0, 5, 2, 6, 0, 1, 6, 0, 3, 0, 2, 0, 0, 0, 0, 0]' : 0.186547}
{'[0, 0, 0, 5, 2, 6, 0, 1, 6, 0, 3, 0, 2, 0, 0, 0, 0, 0]' : 0.186525}
{'[0, 0, 0, 5, 2, 6, 0, 1, 6, 0, 3, 0, 2, 0, 0, 0, 0, 0]' : 0.185836}
{'[0, 0, 0, 5, 2, 6, 0, 1, 6, 0, 3, 0, 2, 0, 0, 0, 0, 0]' : 0.185709}
{'[0, 0, 0, 5, 2, 6, 0, 1, 6, 0, 3, 0, 2, 0, 0, 0, 0, 0]' : 0.186311}
{'[0, 0, 0, 5, 2, 6, 0, 1, 6, 0, 3, 0, 2, 0, 0, 0, 0, 0]' : 0.186568}
{'[0, 0, 0, 5, 2, 6, 0, 1, 6, 0, 3, 0, 2, 0, 0, 0, 0, 0]' : 0.185743}
{'[0, 0, 0, 5, 2, 6, 0, 1, 6, 0, 3, 0, 2, 0, 0, 0, 0, 0]' : 0.186036}
{'[0, 0, 0, 5, 2, 6, 0, 1, 6, 0, 3, 0, 2, 0, 0, 0, 0, 0]' : 0.186532}
{'[0, 0, 0, 5, 2, 6, 0, 1, 6, 0, 3, 0, 2, 0, 0, 0, 0, 0]' : 0.186577}
{'[0, 0, 0, 5, 2, 6, 0, 1, 6, 0, 3, 0, 2, 0, 0, 0, 0, 0]' : 0.185865}
{'[0, 0, 0, 5, 2, 6, 0, 1, 6, 0, 3, 0, 2, 0, 0, 0, 0, 0]' : 0.186654}
{'[0, 0, 0, 5, 2, 6, 0, 1, 6, 0, 3, 0, 2, 0, 0, 0, 0, 0]' : 0.186308}
{'[0, 0, 0, 5, 2, 6, 0, 1, 6, 0, 3, 0, 2, 0, 0, 0, 0, 0]' : 0.18585}
{'[0, 0, 0, 5, 2, 6, 0, 1, 6, 0, 3, 0, 2, 0, 0, 0, 0, 0]' : 0.185796}
{'[0, 0, 0, 5, 2, 6, 0, 1, 6, 0, 3, 0, 2, 0, 0, 0, 0, 0]' : 0.185995}
{'[0, 0, 0, 5, 2, 6, 0, 1, 6, 0, 3, 0, 2, 0, 0, 0, 0, 0]' : 0.186446}
{'[0, 0, 0, 5, 2, 6, 0, 1, 6, 0, 3, 0, 2, 0, 0, 0, 0, 0]' : 0.186924}
{'[0, 0, 0, 5, 2, 6, 0, 1, 6, 0, 3, 0, 2, 0, 0, 0, 0, 0]' : 0.185717}
{'[0, 0, 0, 5, 2, 6, 0, 1, 6, 0, 3, 0, 2, 0, 0, 0, 0, 0]' : 0.186158}
{'[0, 0, 0, 5, 2, 6, 0, 1, 6, 0, 3, 0, 2, 0, 0, 0, 0, 0]' : 0.186517}
{'[0, 0, 0, 5, 2, 6, 0, 1, 6, 0, 3, 0, 2, 0, 0, 0, 0, 0]' : 0.186204}

out:
 ["{'[0, 0, 0, 5, 2, 6, 0, 1, 6, 0, 3, 0, 2, 0, 0, 0, 0, 0]' : 0.206201}", "{'[0, 0, 0, 5, 2, 6, 0, 1, 6, 0, 3, 0, 2, 0, 0, 0, 0, 0]' : 0.20728}", "{'[0, 0, 0, 5, 2, 6, 0, 1, 6, 0, 3, 0, 2, 0, 0, 0, 0, 0]' : 0.20355}", "{'[0, 0, 0, 5, 2, 6, 0, 1, 6, 0, 3, 0, 2, 0, 0, 0, 0, 0]' : 0.185774}", "{'[0, 0, 0, 5, 2, 6, 0, 1, 6, 0, 3, 0, 2, 0, 0, 0, 0, 0]' : 0.186049}", "{'[0, 0, 0, 5, 2, 6, 0, 1, 6, 0, 3, 0, 2, 0, 0, 0, 0, 0]' : 0.186146}", "{'[0, 0, 0, 5, 2, 6, 0, 1, 6, 0, 3, 0, 2, 0, 0, 0, 0, 0]' : 0.185603}", "{'[0, 0, 0, 5, 2, 6, 0, 1, 6, 0, 3, 0, 2, 0, 0, 0, 0, 0]' : 0.186611}", "{'[0, 0, 0, 5, 2, 6, 0, 1, 6, 0, 3, 0, 2, 0, 0, 0, 0, 0]' : 0.186547}", "{'[0, 0, 0, 5, 2, 6, 0, 1, 6, 0, 3, 0, 2, 0, 0, 0, 0, 0]' : 0.186525}", "{'[0, 0, 0, 5, 2, 6, 0, 1, 6, 0, 3, 0, 2, 0, 0, 0, 0, 0]' : 0.185836}", "{'[0, 0, 0, 5, 2, 6, 0, 1, 6, 0, 3, 0, 2, 0, 0, 0, 0, 0]' : 0.185709}", "{'[0, 0, 0, 5, 2, 6, 0, 1, 6, 0, 3, 0, 2, 0, 0, 0, 0, 0]' : 0.186311}", "{'[0, 0, 0, 5, 2, 6, 0, 1, 6, 0, 3, 0, 2, 0, 0, 0, 0, 0]' : 0.186568}", "{'[0, 0, 0, 5, 2, 6, 0, 1, 6, 0, 3, 0, 2, 0, 0, 0, 0, 0]' : 0.185743}", "{'[0, 0, 0, 5, 2, 6, 0, 1, 6, 0, 3, 0, 2, 0, 0, 0, 0, 0]' : 0.186036}", "{'[0, 0, 0, 5, 2, 6, 0, 1, 6, 0, 3, 0, 2, 0, 0, 0, 0, 0]' : 0.186532}", "{'[0, 0, 0, 5, 2, 6, 0, 1, 6, 0, 3, 0, 2, 0, 0, 0, 0, 0]' : 0.186577}", "{'[0, 0, 0, 5, 2, 6, 0, 1, 6, 0, 3, 0, 2, 0, 0, 0, 0, 0]' : 0.185865}", "{'[0, 0, 0, 5, 2, 6, 0, 1, 6, 0, 3, 0, 2, 0, 0, 0, 0, 0]' : 0.186654}", "{'[0, 0, 0, 5, 2, 6, 0, 1, 6, 0, 3, 0, 2, 0, 0, 0, 0, 0]' : 0.186308}", "{'[0, 0, 0, 5, 2, 6, 0, 1, 6, 0, 3, 0, 2, 0, 0, 0, 0, 0]' : 0.18585}", "{'[0, 0, 0, 5, 2, 6, 0, 1, 6, 0, 3, 0, 2, 0, 0, 0, 0, 0]' : 0.185796}", "{'[0, 0, 0, 5, 2, 6, 0, 1, 6, 0, 3, 0, 2, 0, 0, 0, 0, 0]' : 0.185995}", "{'[0, 0, 0, 5, 2, 6, 0, 1, 6, 0, 3, 0, 2, 0, 0, 0, 0, 0]' : 0.186446}", "{'[0, 0, 0, 5, 2, 6, 0, 1, 6, 0, 3, 0, 2, 0, 0, 0, 0, 0]' : 0.186924}", "{'[0, 0, 0, 5, 2, 6, 0, 1, 6, 0, 3, 0, 2, 0, 0, 0, 0, 0]' : 0.185717}", "{'[0, 0, 0, 5, 2, 6, 0, 1, 6, 0, 3, 0, 2, 0, 0, 0, 0, 0]' : 0.186158}", "{'[0, 0, 0, 5, 2, 6, 0, 1, 6, 0, 3, 0, 2, 0, 0, 0, 0, 0]' : 0.186517}", "{'[0, 0, 0, 5, 2, 6, 0, 1, 6, 0, 3, 0, 2, 0, 0, 0, 0, 0]' : 0.186204}"]
returning from 'run': {'[0, 0, 0, 5, 2, 6, 0, 1, 6, 0, 3, 0, 2, 0, 0, 0, 0, 0]': ([0.206201, 0.20728, 0.20355, 0.185774, 0.186049, 0.186146, 0.185603, 0.186611, 0.186547, 0.186525, 0.185836, 0.185709, 0.186311, 0.186568, 0.185743, 0.186036, 0.186532, 0.186577, 0.185865, 0.186654, 0.186308, 0.18585, 0.185796, 0.185995, 0.186446, 0.186924, 0.185717, 0.186158, 0.186517, 0.186204], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 0, 5, 2, 6, 0, 1, 6, 0, 3, 0, 2, 0, 0, 0, 0, 0]': ([0.206201, 0.20728, 0.20355, 0.185774, 0.186049, 0.186146, 0.185603, 0.186611, 0.186547, 0.186525, 0.185836, 0.185709, 0.186311, 0.186568, 0.185743, 0.186036, 0.186532, 0.186577, 0.185865, 0.186654, 0.186308, 0.18585, 0.185796, 0.185995, 0.186446, 0.186924, 0.185717, 0.186158, 0.186517, 0.186204], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	114
        Max loop nest depth: 	5
        Additions: 		3266
        Multiplications: 	684
        Divisions: 		0
        Logical: 		0
        Reads: 			5393
        Writes: 		701
        Comparisons:		114
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest20.exe __orio_perftest20.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest20.exe  
Program Test Output: 
{'[6, 6, 4, 0, 5, 0, 1, 1, 2, 28, 0, 27, 1, 0, 1, 0, 1, 0]' : 0.137637}
{'[6, 6, 4, 0, 5, 0, 1, 1, 2, 28, 0, 27, 1, 0, 1, 0, 1, 0]' : 0.137813}
{'[6, 6, 4, 0, 5, 0, 1, 1, 2, 28, 0, 27, 1, 0, 1, 0, 1, 0]' : 0.137333}
{'[6, 6, 4, 0, 5, 0, 1, 1, 2, 28, 0, 27, 1, 0, 1, 0, 1, 0]' : 0.120391}
{'[6, 6, 4, 0, 5, 0, 1, 1, 2, 28, 0, 27, 1, 0, 1, 0, 1, 0]' : 0.116874}
{'[6, 6, 4, 0, 5, 0, 1, 1, 2, 28, 0, 27, 1, 0, 1, 0, 1, 0]' : 0.117014}
{'[6, 6, 4, 0, 5, 0, 1, 1, 2, 28, 0, 27, 1, 0, 1, 0, 1, 0]' : 0.117106}
{'[6, 6, 4, 0, 5, 0, 1, 1, 2, 28, 0, 27, 1, 0, 1, 0, 1, 0]' : 0.117167}
{'[6, 6, 4, 0, 5, 0, 1, 1, 2, 28, 0, 27, 1, 0, 1, 0, 1, 0]' : 0.116932}
{'[6, 6, 4, 0, 5, 0, 1, 1, 2, 28, 0, 27, 1, 0, 1, 0, 1, 0]' : 0.117187}
{'[6, 6, 4, 0, 5, 0, 1, 1, 2, 28, 0, 27, 1, 0, 1, 0, 1, 0]' : 0.116893}
{'[6, 6, 4, 0, 5, 0, 1, 1, 2, 28, 0, 27, 1, 0, 1, 0, 1, 0]' : 0.116832}
{'[6, 6, 4, 0, 5, 0, 1, 1, 2, 28, 0, 27, 1, 0, 1, 0, 1, 0]' : 0.116902}
{'[6, 6, 4, 0, 5, 0, 1, 1, 2, 28, 0, 27, 1, 0, 1, 0, 1, 0]' : 0.117047}
{'[6, 6, 4, 0, 5, 0, 1, 1, 2, 28, 0, 27, 1, 0, 1, 0, 1, 0]' : 0.116871}
{'[6, 6, 4, 0, 5, 0, 1, 1, 2, 28, 0, 27, 1, 0, 1, 0, 1, 0]' : 0.117099}
{'[6, 6, 4, 0, 5, 0, 1, 1, 2, 28, 0, 27, 1, 0, 1, 0, 1, 0]' : 0.117096}
{'[6, 6, 4, 0, 5, 0, 1, 1, 2, 28, 0, 27, 1, 0, 1, 0, 1, 0]' : 0.117035}
{'[6, 6, 4, 0, 5, 0, 1, 1, 2, 28, 0, 27, 1, 0, 1, 0, 1, 0]' : 0.116842}
{'[6, 6, 4, 0, 5, 0, 1, 1, 2, 28, 0, 27, 1, 0, 1, 0, 1, 0]' : 0.116822}
{'[6, 6, 4, 0, 5, 0, 1, 1, 2, 28, 0, 27, 1, 0, 1, 0, 1, 0]' : 0.116839}
{'[6, 6, 4, 0, 5, 0, 1, 1, 2, 28, 0, 27, 1, 0, 1, 0, 1, 0]' : 0.116982}
{'[6, 6, 4, 0, 5, 0, 1, 1, 2, 28, 0, 27, 1, 0, 1, 0, 1, 0]' : 0.116856}
{'[6, 6, 4, 0, 5, 0, 1, 1, 2, 28, 0, 27, 1, 0, 1, 0, 1, 0]' : 0.116821}
{'[6, 6, 4, 0, 5, 0, 1, 1, 2, 28, 0, 27, 1, 0, 1, 0, 1, 0]' : 0.117515}
{'[6, 6, 4, 0, 5, 0, 1, 1, 2, 28, 0, 27, 1, 0, 1, 0, 1, 0]' : 0.117517}
{'[6, 6, 4, 0, 5, 0, 1, 1, 2, 28, 0, 27, 1, 0, 1, 0, 1, 0]' : 0.117042}
{'[6, 6, 4, 0, 5, 0, 1, 1, 2, 28, 0, 27, 1, 0, 1, 0, 1, 0]' : 0.116931}
{'[6, 6, 4, 0, 5, 0, 1, 1, 2, 28, 0, 27, 1, 0, 1, 0, 1, 0]' : 0.116995}
{'[6, 6, 4, 0, 5, 0, 1, 1, 2, 28, 0, 27, 1, 0, 1, 0, 1, 0]' : 0.117259}

out:
 ["{'[6, 6, 4, 0, 5, 0, 1, 1, 2, 28, 0, 27, 1, 0, 1, 0, 1, 0]' : 0.137637}", "{'[6, 6, 4, 0, 5, 0, 1, 1, 2, 28, 0, 27, 1, 0, 1, 0, 1, 0]' : 0.137813}", "{'[6, 6, 4, 0, 5, 0, 1, 1, 2, 28, 0, 27, 1, 0, 1, 0, 1, 0]' : 0.137333}", "{'[6, 6, 4, 0, 5, 0, 1, 1, 2, 28, 0, 27, 1, 0, 1, 0, 1, 0]' : 0.120391}", "{'[6, 6, 4, 0, 5, 0, 1, 1, 2, 28, 0, 27, 1, 0, 1, 0, 1, 0]' : 0.116874}", "{'[6, 6, 4, 0, 5, 0, 1, 1, 2, 28, 0, 27, 1, 0, 1, 0, 1, 0]' : 0.117014}", "{'[6, 6, 4, 0, 5, 0, 1, 1, 2, 28, 0, 27, 1, 0, 1, 0, 1, 0]' : 0.117106}", "{'[6, 6, 4, 0, 5, 0, 1, 1, 2, 28, 0, 27, 1, 0, 1, 0, 1, 0]' : 0.117167}", "{'[6, 6, 4, 0, 5, 0, 1, 1, 2, 28, 0, 27, 1, 0, 1, 0, 1, 0]' : 0.116932}", "{'[6, 6, 4, 0, 5, 0, 1, 1, 2, 28, 0, 27, 1, 0, 1, 0, 1, 0]' : 0.117187}", "{'[6, 6, 4, 0, 5, 0, 1, 1, 2, 28, 0, 27, 1, 0, 1, 0, 1, 0]' : 0.116893}", "{'[6, 6, 4, 0, 5, 0, 1, 1, 2, 28, 0, 27, 1, 0, 1, 0, 1, 0]' : 0.116832}", "{'[6, 6, 4, 0, 5, 0, 1, 1, 2, 28, 0, 27, 1, 0, 1, 0, 1, 0]' : 0.116902}", "{'[6, 6, 4, 0, 5, 0, 1, 1, 2, 28, 0, 27, 1, 0, 1, 0, 1, 0]' : 0.117047}", "{'[6, 6, 4, 0, 5, 0, 1, 1, 2, 28, 0, 27, 1, 0, 1, 0, 1, 0]' : 0.116871}", "{'[6, 6, 4, 0, 5, 0, 1, 1, 2, 28, 0, 27, 1, 0, 1, 0, 1, 0]' : 0.117099}", "{'[6, 6, 4, 0, 5, 0, 1, 1, 2, 28, 0, 27, 1, 0, 1, 0, 1, 0]' : 0.117096}", "{'[6, 6, 4, 0, 5, 0, 1, 1, 2, 28, 0, 27, 1, 0, 1, 0, 1, 0]' : 0.117035}", "{'[6, 6, 4, 0, 5, 0, 1, 1, 2, 28, 0, 27, 1, 0, 1, 0, 1, 0]' : 0.116842}", "{'[6, 6, 4, 0, 5, 0, 1, 1, 2, 28, 0, 27, 1, 0, 1, 0, 1, 0]' : 0.116822}", "{'[6, 6, 4, 0, 5, 0, 1, 1, 2, 28, 0, 27, 1, 0, 1, 0, 1, 0]' : 0.116839}", "{'[6, 6, 4, 0, 5, 0, 1, 1, 2, 28, 0, 27, 1, 0, 1, 0, 1, 0]' : 0.116982}", "{'[6, 6, 4, 0, 5, 0, 1, 1, 2, 28, 0, 27, 1, 0, 1, 0, 1, 0]' : 0.116856}", "{'[6, 6, 4, 0, 5, 0, 1, 1, 2, 28, 0, 27, 1, 0, 1, 0, 1, 0]' : 0.116821}", "{'[6, 6, 4, 0, 5, 0, 1, 1, 2, 28, 0, 27, 1, 0, 1, 0, 1, 0]' : 0.117515}", "{'[6, 6, 4, 0, 5, 0, 1, 1, 2, 28, 0, 27, 1, 0, 1, 0, 1, 0]' : 0.117517}", "{'[6, 6, 4, 0, 5, 0, 1, 1, 2, 28, 0, 27, 1, 0, 1, 0, 1, 0]' : 0.117042}", "{'[6, 6, 4, 0, 5, 0, 1, 1, 2, 28, 0, 27, 1, 0, 1, 0, 1, 0]' : 0.116931}", "{'[6, 6, 4, 0, 5, 0, 1, 1, 2, 28, 0, 27, 1, 0, 1, 0, 1, 0]' : 0.116995}", "{'[6, 6, 4, 0, 5, 0, 1, 1, 2, 28, 0, 27, 1, 0, 1, 0, 1, 0]' : 0.117259}"]
returning from 'run': {'[6, 6, 4, 0, 5, 0, 1, 1, 2, 28, 0, 27, 1, 0, 1, 0, 1, 0]': ([0.137637, 0.137813, 0.137333, 0.120391, 0.116874, 0.117014, 0.117106, 0.117167, 0.116932, 0.117187, 0.116893, 0.116832, 0.116902, 0.117047, 0.116871, 0.117099, 0.117096, 0.117035, 0.116842, 0.116822, 0.116839, 0.116982, 0.116856, 0.116821, 0.117515, 0.117517, 0.117042, 0.116931, 0.116995, 0.117259], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 4, 0, 5, 0, 1, 1, 2, 28, 0, 27, 1, 0, 1, 0, 1, 0]': ([0.137637, 0.137813, 0.137333, 0.120391, 0.116874, 0.117014, 0.117106, 0.117167, 0.116932, 0.117187, 0.116893, 0.116832, 0.116902, 0.117047, 0.116871, 0.117099, 0.117096, 0.117035, 0.116842, 0.116822, 0.116839, 0.116982, 0.116856, 0.116821, 0.117515, 0.117517, 0.117042, 0.116931, 0.116995, 0.117259], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		326
        Multiplications: 	92
        Divisions: 		0
        Logical: 		0
        Reads: 			672
        Writes: 		96
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest21.exe __orio_perftest21.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest21.exe  
Program Test Output: 
{'[2, 6, 0, 5, 4, 1, 1, 1, 13, 0, 29, 13, 0, 0, 0, 0, 1, 0]' : 0.309456}
{'[2, 6, 0, 5, 4, 1, 1, 1, 13, 0, 29, 13, 0, 0, 0, 0, 1, 0]' : 0.309449}
{'[2, 6, 0, 5, 4, 1, 1, 1, 13, 0, 29, 13, 0, 0, 0, 0, 1, 0]' : 0.266296}
{'[2, 6, 0, 5, 4, 1, 1, 1, 13, 0, 29, 13, 0, 0, 0, 0, 1, 0]' : 0.259753}
{'[2, 6, 0, 5, 4, 1, 1, 1, 13, 0, 29, 13, 0, 0, 0, 0, 1, 0]' : 0.25968}
{'[2, 6, 0, 5, 4, 1, 1, 1, 13, 0, 29, 13, 0, 0, 0, 0, 1, 0]' : 0.259412}
{'[2, 6, 0, 5, 4, 1, 1, 1, 13, 0, 29, 13, 0, 0, 0, 0, 1, 0]' : 0.259364}
{'[2, 6, 0, 5, 4, 1, 1, 1, 13, 0, 29, 13, 0, 0, 0, 0, 1, 0]' : 0.259365}
{'[2, 6, 0, 5, 4, 1, 1, 1, 13, 0, 29, 13, 0, 0, 0, 0, 1, 0]' : 0.259741}
{'[2, 6, 0, 5, 4, 1, 1, 1, 13, 0, 29, 13, 0, 0, 0, 0, 1, 0]' : 0.25973}
{'[2, 6, 0, 5, 4, 1, 1, 1, 13, 0, 29, 13, 0, 0, 0, 0, 1, 0]' : 0.259359}
{'[2, 6, 0, 5, 4, 1, 1, 1, 13, 0, 29, 13, 0, 0, 0, 0, 1, 0]' : 0.259547}
{'[2, 6, 0, 5, 4, 1, 1, 1, 13, 0, 29, 13, 0, 0, 0, 0, 1, 0]' : 0.259477}
{'[2, 6, 0, 5, 4, 1, 1, 1, 13, 0, 29, 13, 0, 0, 0, 0, 1, 0]' : 0.259805}
{'[2, 6, 0, 5, 4, 1, 1, 1, 13, 0, 29, 13, 0, 0, 0, 0, 1, 0]' : 0.259675}
{'[2, 6, 0, 5, 4, 1, 1, 1, 13, 0, 29, 13, 0, 0, 0, 0, 1, 0]' : 0.259574}
{'[2, 6, 0, 5, 4, 1, 1, 1, 13, 0, 29, 13, 0, 0, 0, 0, 1, 0]' : 0.259581}
{'[2, 6, 0, 5, 4, 1, 1, 1, 13, 0, 29, 13, 0, 0, 0, 0, 1, 0]' : 0.259722}
{'[2, 6, 0, 5, 4, 1, 1, 1, 13, 0, 29, 13, 0, 0, 0, 0, 1, 0]' : 0.259636}
{'[2, 6, 0, 5, 4, 1, 1, 1, 13, 0, 29, 13, 0, 0, 0, 0, 1, 0]' : 0.259777}
{'[2, 6, 0, 5, 4, 1, 1, 1, 13, 0, 29, 13, 0, 0, 0, 0, 1, 0]' : 0.259491}
{'[2, 6, 0, 5, 4, 1, 1, 1, 13, 0, 29, 13, 0, 0, 0, 0, 1, 0]' : 0.259818}
{'[2, 6, 0, 5, 4, 1, 1, 1, 13, 0, 29, 13, 0, 0, 0, 0, 1, 0]' : 0.259856}
{'[2, 6, 0, 5, 4, 1, 1, 1, 13, 0, 29, 13, 0, 0, 0, 0, 1, 0]' : 0.25955}
{'[2, 6, 0, 5, 4, 1, 1, 1, 13, 0, 29, 13, 0, 0, 0, 0, 1, 0]' : 0.259806}
{'[2, 6, 0, 5, 4, 1, 1, 1, 13, 0, 29, 13, 0, 0, 0, 0, 1, 0]' : 0.259649}
{'[2, 6, 0, 5, 4, 1, 1, 1, 13, 0, 29, 13, 0, 0, 0, 0, 1, 0]' : 0.260065}
{'[2, 6, 0, 5, 4, 1, 1, 1, 13, 0, 29, 13, 0, 0, 0, 0, 1, 0]' : 0.259378}
{'[2, 6, 0, 5, 4, 1, 1, 1, 13, 0, 29, 13, 0, 0, 0, 0, 1, 0]' : 0.25967}
{'[2, 6, 0, 5, 4, 1, 1, 1, 13, 0, 29, 13, 0, 0, 0, 0, 1, 0]' : 0.259565}

out:
 ["{'[2, 6, 0, 5, 4, 1, 1, 1, 13, 0, 29, 13, 0, 0, 0, 0, 1, 0]' : 0.309456}", "{'[2, 6, 0, 5, 4, 1, 1, 1, 13, 0, 29, 13, 0, 0, 0, 0, 1, 0]' : 0.309449}", "{'[2, 6, 0, 5, 4, 1, 1, 1, 13, 0, 29, 13, 0, 0, 0, 0, 1, 0]' : 0.266296}", "{'[2, 6, 0, 5, 4, 1, 1, 1, 13, 0, 29, 13, 0, 0, 0, 0, 1, 0]' : 0.259753}", "{'[2, 6, 0, 5, 4, 1, 1, 1, 13, 0, 29, 13, 0, 0, 0, 0, 1, 0]' : 0.25968}", "{'[2, 6, 0, 5, 4, 1, 1, 1, 13, 0, 29, 13, 0, 0, 0, 0, 1, 0]' : 0.259412}", "{'[2, 6, 0, 5, 4, 1, 1, 1, 13, 0, 29, 13, 0, 0, 0, 0, 1, 0]' : 0.259364}", "{'[2, 6, 0, 5, 4, 1, 1, 1, 13, 0, 29, 13, 0, 0, 0, 0, 1, 0]' : 0.259365}", "{'[2, 6, 0, 5, 4, 1, 1, 1, 13, 0, 29, 13, 0, 0, 0, 0, 1, 0]' : 0.259741}", "{'[2, 6, 0, 5, 4, 1, 1, 1, 13, 0, 29, 13, 0, 0, 0, 0, 1, 0]' : 0.25973}", "{'[2, 6, 0, 5, 4, 1, 1, 1, 13, 0, 29, 13, 0, 0, 0, 0, 1, 0]' : 0.259359}", "{'[2, 6, 0, 5, 4, 1, 1, 1, 13, 0, 29, 13, 0, 0, 0, 0, 1, 0]' : 0.259547}", "{'[2, 6, 0, 5, 4, 1, 1, 1, 13, 0, 29, 13, 0, 0, 0, 0, 1, 0]' : 0.259477}", "{'[2, 6, 0, 5, 4, 1, 1, 1, 13, 0, 29, 13, 0, 0, 0, 0, 1, 0]' : 0.259805}", "{'[2, 6, 0, 5, 4, 1, 1, 1, 13, 0, 29, 13, 0, 0, 0, 0, 1, 0]' : 0.259675}", "{'[2, 6, 0, 5, 4, 1, 1, 1, 13, 0, 29, 13, 0, 0, 0, 0, 1, 0]' : 0.259574}", "{'[2, 6, 0, 5, 4, 1, 1, 1, 13, 0, 29, 13, 0, 0, 0, 0, 1, 0]' : 0.259581}", "{'[2, 6, 0, 5, 4, 1, 1, 1, 13, 0, 29, 13, 0, 0, 0, 0, 1, 0]' : 0.259722}", "{'[2, 6, 0, 5, 4, 1, 1, 1, 13, 0, 29, 13, 0, 0, 0, 0, 1, 0]' : 0.259636}", "{'[2, 6, 0, 5, 4, 1, 1, 1, 13, 0, 29, 13, 0, 0, 0, 0, 1, 0]' : 0.259777}", "{'[2, 6, 0, 5, 4, 1, 1, 1, 13, 0, 29, 13, 0, 0, 0, 0, 1, 0]' : 0.259491}", "{'[2, 6, 0, 5, 4, 1, 1, 1, 13, 0, 29, 13, 0, 0, 0, 0, 1, 0]' : 0.259818}", "{'[2, 6, 0, 5, 4, 1, 1, 1, 13, 0, 29, 13, 0, 0, 0, 0, 1, 0]' : 0.259856}", "{'[2, 6, 0, 5, 4, 1, 1, 1, 13, 0, 29, 13, 0, 0, 0, 0, 1, 0]' : 0.25955}", "{'[2, 6, 0, 5, 4, 1, 1, 1, 13, 0, 29, 13, 0, 0, 0, 0, 1, 0]' : 0.259806}", "{'[2, 6, 0, 5, 4, 1, 1, 1, 13, 0, 29, 13, 0, 0, 0, 0, 1, 0]' : 0.259649}", "{'[2, 6, 0, 5, 4, 1, 1, 1, 13, 0, 29, 13, 0, 0, 0, 0, 1, 0]' : 0.260065}", "{'[2, 6, 0, 5, 4, 1, 1, 1, 13, 0, 29, 13, 0, 0, 0, 0, 1, 0]' : 0.259378}", "{'[2, 6, 0, 5, 4, 1, 1, 1, 13, 0, 29, 13, 0, 0, 0, 0, 1, 0]' : 0.25967}", "{'[2, 6, 0, 5, 4, 1, 1, 1, 13, 0, 29, 13, 0, 0, 0, 0, 1, 0]' : 0.259565}"]
returning from 'run': {'[2, 6, 0, 5, 4, 1, 1, 1, 13, 0, 29, 13, 0, 0, 0, 0, 1, 0]': ([0.309456, 0.309449, 0.266296, 0.259753, 0.25968, 0.259412, 0.259364, 0.259365, 0.259741, 0.25973, 0.259359, 0.259547, 0.259477, 0.259805, 0.259675, 0.259574, 0.259581, 0.259722, 0.259636, 0.259777, 0.259491, 0.259818, 0.259856, 0.25955, 0.259806, 0.259649, 0.260065, 0.259378, 0.25967, 0.259565], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 6, 0, 5, 4, 1, 1, 1, 13, 0, 29, 13, 0, 0, 0, 0, 1, 0]': ([0.309456, 0.309449, 0.266296, 0.259753, 0.25968, 0.259412, 0.259364, 0.259365, 0.259741, 0.25973, 0.259359, 0.259547, 0.259477, 0.259805, 0.259675, 0.259574, 0.259581, 0.259722, 0.259636, 0.259777, 0.259491, 0.259818, 0.259856, 0.25955, 0.259806, 0.259649, 0.260065, 0.259378, 0.25967, 0.259565], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	25
        Max loop nest depth: 	6
        Additions: 		8021
        Multiplications: 	2400
        Divisions: 		0
        Logical: 		0
        Reads: 			12243
        Writes: 		1284
        Comparisons:		25
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest22.exe __orio_perftest22.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest22.exe  
Program Test Output: 
{'[4, 5, 6, 6, 0, 6, 0, 0, 8, 6, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.185019}
{'[4, 5, 6, 6, 0, 6, 0, 0, 8, 6, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.18609}
{'[4, 5, 6, 6, 0, 6, 0, 0, 8, 6, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.185127}
{'[4, 5, 6, 6, 0, 6, 0, 0, 8, 6, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.185081}
{'[4, 5, 6, 6, 0, 6, 0, 0, 8, 6, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.185039}
{'[4, 5, 6, 6, 0, 6, 0, 0, 8, 6, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.185197}
{'[4, 5, 6, 6, 0, 6, 0, 0, 8, 6, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.185431}
{'[4, 5, 6, 6, 0, 6, 0, 0, 8, 6, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.185478}
{'[4, 5, 6, 6, 0, 6, 0, 0, 8, 6, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.185576}
{'[4, 5, 6, 6, 0, 6, 0, 0, 8, 6, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.185098}
{'[4, 5, 6, 6, 0, 6, 0, 0, 8, 6, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.184186}
{'[4, 5, 6, 6, 0, 6, 0, 0, 8, 6, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.185194}
{'[4, 5, 6, 6, 0, 6, 0, 0, 8, 6, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.185193}
{'[4, 5, 6, 6, 0, 6, 0, 0, 8, 6, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.185787}
{'[4, 5, 6, 6, 0, 6, 0, 0, 8, 6, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.185177}
{'[4, 5, 6, 6, 0, 6, 0, 0, 8, 6, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.185214}
{'[4, 5, 6, 6, 0, 6, 0, 0, 8, 6, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.185367}
{'[4, 5, 6, 6, 0, 6, 0, 0, 8, 6, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.184812}
{'[4, 5, 6, 6, 0, 6, 0, 0, 8, 6, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.185159}
{'[4, 5, 6, 6, 0, 6, 0, 0, 8, 6, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.18596}
{'[4, 5, 6, 6, 0, 6, 0, 0, 8, 6, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.184961}
{'[4, 5, 6, 6, 0, 6, 0, 0, 8, 6, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.18514}
{'[4, 5, 6, 6, 0, 6, 0, 0, 8, 6, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.185536}
{'[4, 5, 6, 6, 0, 6, 0, 0, 8, 6, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.185964}
{'[4, 5, 6, 6, 0, 6, 0, 0, 8, 6, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.184919}
{'[4, 5, 6, 6, 0, 6, 0, 0, 8, 6, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.18512}
{'[4, 5, 6, 6, 0, 6, 0, 0, 8, 6, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.185122}
{'[4, 5, 6, 6, 0, 6, 0, 0, 8, 6, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.184645}
{'[4, 5, 6, 6, 0, 6, 0, 0, 8, 6, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.18609}
{'[4, 5, 6, 6, 0, 6, 0, 0, 8, 6, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.185401}

out:
 ["{'[4, 5, 6, 6, 0, 6, 0, 0, 8, 6, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.185019}", "{'[4, 5, 6, 6, 0, 6, 0, 0, 8, 6, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.18609}", "{'[4, 5, 6, 6, 0, 6, 0, 0, 8, 6, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.185127}", "{'[4, 5, 6, 6, 0, 6, 0, 0, 8, 6, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.185081}", "{'[4, 5, 6, 6, 0, 6, 0, 0, 8, 6, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.185039}", "{'[4, 5, 6, 6, 0, 6, 0, 0, 8, 6, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.185197}", "{'[4, 5, 6, 6, 0, 6, 0, 0, 8, 6, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.185431}", "{'[4, 5, 6, 6, 0, 6, 0, 0, 8, 6, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.185478}", "{'[4, 5, 6, 6, 0, 6, 0, 0, 8, 6, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.185576}", "{'[4, 5, 6, 6, 0, 6, 0, 0, 8, 6, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.185098}", "{'[4, 5, 6, 6, 0, 6, 0, 0, 8, 6, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.184186}", "{'[4, 5, 6, 6, 0, 6, 0, 0, 8, 6, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.185194}", "{'[4, 5, 6, 6, 0, 6, 0, 0, 8, 6, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.185193}", "{'[4, 5, 6, 6, 0, 6, 0, 0, 8, 6, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.185787}", "{'[4, 5, 6, 6, 0, 6, 0, 0, 8, 6, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.185177}", "{'[4, 5, 6, 6, 0, 6, 0, 0, 8, 6, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.185214}", "{'[4, 5, 6, 6, 0, 6, 0, 0, 8, 6, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.185367}", "{'[4, 5, 6, 6, 0, 6, 0, 0, 8, 6, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.184812}", "{'[4, 5, 6, 6, 0, 6, 0, 0, 8, 6, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.185159}", "{'[4, 5, 6, 6, 0, 6, 0, 0, 8, 6, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.18596}", "{'[4, 5, 6, 6, 0, 6, 0, 0, 8, 6, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.184961}", "{'[4, 5, 6, 6, 0, 6, 0, 0, 8, 6, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.18514}", "{'[4, 5, 6, 6, 0, 6, 0, 0, 8, 6, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.185536}", "{'[4, 5, 6, 6, 0, 6, 0, 0, 8, 6, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.185964}", "{'[4, 5, 6, 6, 0, 6, 0, 0, 8, 6, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.184919}", "{'[4, 5, 6, 6, 0, 6, 0, 0, 8, 6, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.18512}", "{'[4, 5, 6, 6, 0, 6, 0, 0, 8, 6, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.185122}", "{'[4, 5, 6, 6, 0, 6, 0, 0, 8, 6, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.184645}", "{'[4, 5, 6, 6, 0, 6, 0, 0, 8, 6, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.18609}", "{'[4, 5, 6, 6, 0, 6, 0, 0, 8, 6, 0, 27, 2, 0, 0, 0, 1, 1]' : 0.185401}"]
returning from 'run': {'[4, 5, 6, 6, 0, 6, 0, 0, 8, 6, 0, 27, 2, 0, 0, 0, 1, 1]': ([0.185019, 0.18609, 0.185127, 0.185081, 0.185039, 0.185197, 0.185431, 0.185478, 0.185576, 0.185098, 0.184186, 0.185194, 0.185193, 0.185787, 0.185177, 0.185214, 0.185367, 0.184812, 0.185159, 0.18596, 0.184961, 0.18514, 0.185536, 0.185964, 0.184919, 0.18512, 0.185122, 0.184645, 0.18609, 0.185401], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 5, 6, 6, 0, 6, 0, 0, 8, 6, 0, 27, 2, 0, 0, 0, 1, 1]': ([0.185019, 0.18609, 0.185127, 0.185081, 0.185039, 0.185197, 0.185431, 0.185478, 0.185576, 0.185098, 0.184186, 0.185194, 0.185193, 0.185787, 0.185177, 0.185214, 0.185367, 0.184812, 0.185159, 0.18596, 0.184961, 0.18514, 0.185536, 0.185964, 0.184919, 0.18512, 0.185122, 0.184645, 0.18609, 0.185401], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	27
        Max loop nest depth: 	5
        Additions: 		2995
        Multiplications: 	936
        Divisions: 		0
        Logical: 		0
        Reads: 			4985
        Writes: 		580
        Comparisons:		27
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest23.exe __orio_perftest23.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest23.exe  
Program Test Output: 
{'[0, 3, 0, 3, 3, 1, 0, 0, 24, 26, 2, 0, 1, 0, 1, 0, 1, 0]' : 0.10889}
{'[0, 3, 0, 3, 3, 1, 0, 0, 24, 26, 2, 0, 1, 0, 1, 0, 1, 0]' : 0.108598}
{'[0, 3, 0, 3, 3, 1, 0, 0, 24, 26, 2, 0, 1, 0, 1, 0, 1, 0]' : 0.108264}
{'[0, 3, 0, 3, 3, 1, 0, 0, 24, 26, 2, 0, 1, 0, 1, 0, 1, 0]' : 0.108442}
{'[0, 3, 0, 3, 3, 1, 0, 0, 24, 26, 2, 0, 1, 0, 1, 0, 1, 0]' : 0.10835}
{'[0, 3, 0, 3, 3, 1, 0, 0, 24, 26, 2, 0, 1, 0, 1, 0, 1, 0]' : 0.108633}
{'[0, 3, 0, 3, 3, 1, 0, 0, 24, 26, 2, 0, 1, 0, 1, 0, 1, 0]' : 0.108501}
{'[0, 3, 0, 3, 3, 1, 0, 0, 24, 26, 2, 0, 1, 0, 1, 0, 1, 0]' : 0.108693}
{'[0, 3, 0, 3, 3, 1, 0, 0, 24, 26, 2, 0, 1, 0, 1, 0, 1, 0]' : 0.108318}
{'[0, 3, 0, 3, 3, 1, 0, 0, 24, 26, 2, 0, 1, 0, 1, 0, 1, 0]' : 0.108378}
{'[0, 3, 0, 3, 3, 1, 0, 0, 24, 26, 2, 0, 1, 0, 1, 0, 1, 0]' : 0.108336}
{'[0, 3, 0, 3, 3, 1, 0, 0, 24, 26, 2, 0, 1, 0, 1, 0, 1, 0]' : 0.108433}
{'[0, 3, 0, 3, 3, 1, 0, 0, 24, 26, 2, 0, 1, 0, 1, 0, 1, 0]' : 0.108238}
{'[0, 3, 0, 3, 3, 1, 0, 0, 24, 26, 2, 0, 1, 0, 1, 0, 1, 0]' : 0.108396}
{'[0, 3, 0, 3, 3, 1, 0, 0, 24, 26, 2, 0, 1, 0, 1, 0, 1, 0]' : 0.109064}
{'[0, 3, 0, 3, 3, 1, 0, 0, 24, 26, 2, 0, 1, 0, 1, 0, 1, 0]' : 0.108822}
{'[0, 3, 0, 3, 3, 1, 0, 0, 24, 26, 2, 0, 1, 0, 1, 0, 1, 0]' : 0.108512}
{'[0, 3, 0, 3, 3, 1, 0, 0, 24, 26, 2, 0, 1, 0, 1, 0, 1, 0]' : 0.108366}
{'[0, 3, 0, 3, 3, 1, 0, 0, 24, 26, 2, 0, 1, 0, 1, 0, 1, 0]' : 0.108223}
{'[0, 3, 0, 3, 3, 1, 0, 0, 24, 26, 2, 0, 1, 0, 1, 0, 1, 0]' : 0.108365}
{'[0, 3, 0, 3, 3, 1, 0, 0, 24, 26, 2, 0, 1, 0, 1, 0, 1, 0]' : 0.108304}
{'[0, 3, 0, 3, 3, 1, 0, 0, 24, 26, 2, 0, 1, 0, 1, 0, 1, 0]' : 0.109729}
{'[0, 3, 0, 3, 3, 1, 0, 0, 24, 26, 2, 0, 1, 0, 1, 0, 1, 0]' : 0.110918}
{'[0, 3, 0, 3, 3, 1, 0, 0, 24, 26, 2, 0, 1, 0, 1, 0, 1, 0]' : 0.110967}
{'[0, 3, 0, 3, 3, 1, 0, 0, 24, 26, 2, 0, 1, 0, 1, 0, 1, 0]' : 0.110727}
{'[0, 3, 0, 3, 3, 1, 0, 0, 24, 26, 2, 0, 1, 0, 1, 0, 1, 0]' : 0.110994}
{'[0, 3, 0, 3, 3, 1, 0, 0, 24, 26, 2, 0, 1, 0, 1, 0, 1, 0]' : 0.110944}
{'[0, 3, 0, 3, 3, 1, 0, 0, 24, 26, 2, 0, 1, 0, 1, 0, 1, 0]' : 0.110928}
{'[0, 3, 0, 3, 3, 1, 0, 0, 24, 26, 2, 0, 1, 0, 1, 0, 1, 0]' : 0.110791}
{'[0, 3, 0, 3, 3, 1, 0, 0, 24, 26, 2, 0, 1, 0, 1, 0, 1, 0]' : 0.110798}

out:
 ["{'[0, 3, 0, 3, 3, 1, 0, 0, 24, 26, 2, 0, 1, 0, 1, 0, 1, 0]' : 0.10889}", "{'[0, 3, 0, 3, 3, 1, 0, 0, 24, 26, 2, 0, 1, 0, 1, 0, 1, 0]' : 0.108598}", "{'[0, 3, 0, 3, 3, 1, 0, 0, 24, 26, 2, 0, 1, 0, 1, 0, 1, 0]' : 0.108264}", "{'[0, 3, 0, 3, 3, 1, 0, 0, 24, 26, 2, 0, 1, 0, 1, 0, 1, 0]' : 0.108442}", "{'[0, 3, 0, 3, 3, 1, 0, 0, 24, 26, 2, 0, 1, 0, 1, 0, 1, 0]' : 0.10835}", "{'[0, 3, 0, 3, 3, 1, 0, 0, 24, 26, 2, 0, 1, 0, 1, 0, 1, 0]' : 0.108633}", "{'[0, 3, 0, 3, 3, 1, 0, 0, 24, 26, 2, 0, 1, 0, 1, 0, 1, 0]' : 0.108501}", "{'[0, 3, 0, 3, 3, 1, 0, 0, 24, 26, 2, 0, 1, 0, 1, 0, 1, 0]' : 0.108693}", "{'[0, 3, 0, 3, 3, 1, 0, 0, 24, 26, 2, 0, 1, 0, 1, 0, 1, 0]' : 0.108318}", "{'[0, 3, 0, 3, 3, 1, 0, 0, 24, 26, 2, 0, 1, 0, 1, 0, 1, 0]' : 0.108378}", "{'[0, 3, 0, 3, 3, 1, 0, 0, 24, 26, 2, 0, 1, 0, 1, 0, 1, 0]' : 0.108336}", "{'[0, 3, 0, 3, 3, 1, 0, 0, 24, 26, 2, 0, 1, 0, 1, 0, 1, 0]' : 0.108433}", "{'[0, 3, 0, 3, 3, 1, 0, 0, 24, 26, 2, 0, 1, 0, 1, 0, 1, 0]' : 0.108238}", "{'[0, 3, 0, 3, 3, 1, 0, 0, 24, 26, 2, 0, 1, 0, 1, 0, 1, 0]' : 0.108396}", "{'[0, 3, 0, 3, 3, 1, 0, 0, 24, 26, 2, 0, 1, 0, 1, 0, 1, 0]' : 0.109064}", "{'[0, 3, 0, 3, 3, 1, 0, 0, 24, 26, 2, 0, 1, 0, 1, 0, 1, 0]' : 0.108822}", "{'[0, 3, 0, 3, 3, 1, 0, 0, 24, 26, 2, 0, 1, 0, 1, 0, 1, 0]' : 0.108512}", "{'[0, 3, 0, 3, 3, 1, 0, 0, 24, 26, 2, 0, 1, 0, 1, 0, 1, 0]' : 0.108366}", "{'[0, 3, 0, 3, 3, 1, 0, 0, 24, 26, 2, 0, 1, 0, 1, 0, 1, 0]' : 0.108223}", "{'[0, 3, 0, 3, 3, 1, 0, 0, 24, 26, 2, 0, 1, 0, 1, 0, 1, 0]' : 0.108365}", "{'[0, 3, 0, 3, 3, 1, 0, 0, 24, 26, 2, 0, 1, 0, 1, 0, 1, 0]' : 0.108304}", "{'[0, 3, 0, 3, 3, 1, 0, 0, 24, 26, 2, 0, 1, 0, 1, 0, 1, 0]' : 0.109729}", "{'[0, 3, 0, 3, 3, 1, 0, 0, 24, 26, 2, 0, 1, 0, 1, 0, 1, 0]' : 0.110918}", "{'[0, 3, 0, 3, 3, 1, 0, 0, 24, 26, 2, 0, 1, 0, 1, 0, 1, 0]' : 0.110967}", "{'[0, 3, 0, 3, 3, 1, 0, 0, 24, 26, 2, 0, 1, 0, 1, 0, 1, 0]' : 0.110727}", "{'[0, 3, 0, 3, 3, 1, 0, 0, 24, 26, 2, 0, 1, 0, 1, 0, 1, 0]' : 0.110994}", "{'[0, 3, 0, 3, 3, 1, 0, 0, 24, 26, 2, 0, 1, 0, 1, 0, 1, 0]' : 0.110944}", "{'[0, 3, 0, 3, 3, 1, 0, 0, 24, 26, 2, 0, 1, 0, 1, 0, 1, 0]' : 0.110928}", "{'[0, 3, 0, 3, 3, 1, 0, 0, 24, 26, 2, 0, 1, 0, 1, 0, 1, 0]' : 0.110791}", "{'[0, 3, 0, 3, 3, 1, 0, 0, 24, 26, 2, 0, 1, 0, 1, 0, 1, 0]' : 0.110798}"]
returning from 'run': {'[0, 3, 0, 3, 3, 1, 0, 0, 24, 26, 2, 0, 1, 0, 1, 0, 1, 0]': ([0.10889, 0.108598, 0.108264, 0.108442, 0.10835, 0.108633, 0.108501, 0.108693, 0.108318, 0.108378, 0.108336, 0.108433, 0.108238, 0.108396, 0.109064, 0.108822, 0.108512, 0.108366, 0.108223, 0.108365, 0.108304, 0.109729, 0.110918, 0.110967, 0.110727, 0.110994, 0.110944, 0.110928, 0.110791, 0.110798], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 3, 0, 3, 3, 1, 0, 0, 24, 26, 2, 0, 1, 0, 1, 0, 1, 0]': ([0.10889, 0.108598, 0.108264, 0.108442, 0.10835, 0.108633, 0.108501, 0.108693, 0.108318, 0.108378, 0.108336, 0.108433, 0.108238, 0.108396, 0.109064, 0.108822, 0.108512, 0.108366, 0.108223, 0.108365, 0.108304, 0.109729, 0.110918, 0.110967, 0.110727, 0.110994, 0.110944, 0.110928, 0.110791, 0.110798], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	56
        Max loop nest depth: 	5
        Additions: 		740
        Multiplications: 	252
        Divisions: 		0
        Logical: 		0
        Reads: 			1668
        Writes: 		349
        Comparisons:		56
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest24.exe __orio_perftest24.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest24.exe  
Program Test Output: 
{'[1, 3, 4, 5, 1, 0, 1, 1, 6, 12, 8, 0, 0, 1, 0, 1, 1, 1]' : 0.217047}
{'[1, 3, 4, 5, 1, 0, 1, 1, 6, 12, 8, 0, 0, 1, 0, 1, 1, 1]' : 0.211563}
{'[1, 3, 4, 5, 1, 0, 1, 1, 6, 12, 8, 0, 0, 1, 0, 1, 1, 1]' : 0.193997}
{'[1, 3, 4, 5, 1, 0, 1, 1, 6, 12, 8, 0, 0, 1, 0, 1, 1, 1]' : 0.191996}
{'[1, 3, 4, 5, 1, 0, 1, 1, 6, 12, 8, 0, 0, 1, 0, 1, 1, 1]' : 0.187978}
{'[1, 3, 4, 5, 1, 0, 1, 1, 6, 12, 8, 0, 0, 1, 0, 1, 1, 1]' : 0.188168}
{'[1, 3, 4, 5, 1, 0, 1, 1, 6, 12, 8, 0, 0, 1, 0, 1, 1, 1]' : 0.18793}
{'[1, 3, 4, 5, 1, 0, 1, 1, 6, 12, 8, 0, 0, 1, 0, 1, 1, 1]' : 0.18848}
{'[1, 3, 4, 5, 1, 0, 1, 1, 6, 12, 8, 0, 0, 1, 0, 1, 1, 1]' : 0.19158}
{'[1, 3, 4, 5, 1, 0, 1, 1, 6, 12, 8, 0, 0, 1, 0, 1, 1, 1]' : 0.193538}
{'[1, 3, 4, 5, 1, 0, 1, 1, 6, 12, 8, 0, 0, 1, 0, 1, 1, 1]' : 0.188189}
{'[1, 3, 4, 5, 1, 0, 1, 1, 6, 12, 8, 0, 0, 1, 0, 1, 1, 1]' : 0.194069}
{'[1, 3, 4, 5, 1, 0, 1, 1, 6, 12, 8, 0, 0, 1, 0, 1, 1, 1]' : 0.194038}
{'[1, 3, 4, 5, 1, 0, 1, 1, 6, 12, 8, 0, 0, 1, 0, 1, 1, 1]' : 0.191516}
{'[1, 3, 4, 5, 1, 0, 1, 1, 6, 12, 8, 0, 0, 1, 0, 1, 1, 1]' : 0.194016}
{'[1, 3, 4, 5, 1, 0, 1, 1, 6, 12, 8, 0, 0, 1, 0, 1, 1, 1]' : 0.189658}
{'[1, 3, 4, 5, 1, 0, 1, 1, 6, 12, 8, 0, 0, 1, 0, 1, 1, 1]' : 0.187993}
{'[1, 3, 4, 5, 1, 0, 1, 1, 6, 12, 8, 0, 0, 1, 0, 1, 1, 1]' : 0.187804}
{'[1, 3, 4, 5, 1, 0, 1, 1, 6, 12, 8, 0, 0, 1, 0, 1, 1, 1]' : 0.188612}
{'[1, 3, 4, 5, 1, 0, 1, 1, 6, 12, 8, 0, 0, 1, 0, 1, 1, 1]' : 0.194031}
{'[1, 3, 4, 5, 1, 0, 1, 1, 6, 12, 8, 0, 0, 1, 0, 1, 1, 1]' : 0.194408}
{'[1, 3, 4, 5, 1, 0, 1, 1, 6, 12, 8, 0, 0, 1, 0, 1, 1, 1]' : 0.190898}
{'[1, 3, 4, 5, 1, 0, 1, 1, 6, 12, 8, 0, 0, 1, 0, 1, 1, 1]' : 0.187991}
{'[1, 3, 4, 5, 1, 0, 1, 1, 6, 12, 8, 0, 0, 1, 0, 1, 1, 1]' : 0.183836}
{'[1, 3, 4, 5, 1, 0, 1, 1, 6, 12, 8, 0, 0, 1, 0, 1, 1, 1]' : 0.187854}
{'[1, 3, 4, 5, 1, 0, 1, 1, 6, 12, 8, 0, 0, 1, 0, 1, 1, 1]' : 0.187809}
{'[1, 3, 4, 5, 1, 0, 1, 1, 6, 12, 8, 0, 0, 1, 0, 1, 1, 1]' : 0.188059}
{'[1, 3, 4, 5, 1, 0, 1, 1, 6, 12, 8, 0, 0, 1, 0, 1, 1, 1]' : 0.187892}
{'[1, 3, 4, 5, 1, 0, 1, 1, 6, 12, 8, 0, 0, 1, 0, 1, 1, 1]' : 0.18779}
{'[1, 3, 4, 5, 1, 0, 1, 1, 6, 12, 8, 0, 0, 1, 0, 1, 1, 1]' : 0.19106}

out:
 ["{'[1, 3, 4, 5, 1, 0, 1, 1, 6, 12, 8, 0, 0, 1, 0, 1, 1, 1]' : 0.217047}", "{'[1, 3, 4, 5, 1, 0, 1, 1, 6, 12, 8, 0, 0, 1, 0, 1, 1, 1]' : 0.211563}", "{'[1, 3, 4, 5, 1, 0, 1, 1, 6, 12, 8, 0, 0, 1, 0, 1, 1, 1]' : 0.193997}", "{'[1, 3, 4, 5, 1, 0, 1, 1, 6, 12, 8, 0, 0, 1, 0, 1, 1, 1]' : 0.191996}", "{'[1, 3, 4, 5, 1, 0, 1, 1, 6, 12, 8, 0, 0, 1, 0, 1, 1, 1]' : 0.187978}", "{'[1, 3, 4, 5, 1, 0, 1, 1, 6, 12, 8, 0, 0, 1, 0, 1, 1, 1]' : 0.188168}", "{'[1, 3, 4, 5, 1, 0, 1, 1, 6, 12, 8, 0, 0, 1, 0, 1, 1, 1]' : 0.18793}", "{'[1, 3, 4, 5, 1, 0, 1, 1, 6, 12, 8, 0, 0, 1, 0, 1, 1, 1]' : 0.18848}", "{'[1, 3, 4, 5, 1, 0, 1, 1, 6, 12, 8, 0, 0, 1, 0, 1, 1, 1]' : 0.19158}", "{'[1, 3, 4, 5, 1, 0, 1, 1, 6, 12, 8, 0, 0, 1, 0, 1, 1, 1]' : 0.193538}", "{'[1, 3, 4, 5, 1, 0, 1, 1, 6, 12, 8, 0, 0, 1, 0, 1, 1, 1]' : 0.188189}", "{'[1, 3, 4, 5, 1, 0, 1, 1, 6, 12, 8, 0, 0, 1, 0, 1, 1, 1]' : 0.194069}", "{'[1, 3, 4, 5, 1, 0, 1, 1, 6, 12, 8, 0, 0, 1, 0, 1, 1, 1]' : 0.194038}", "{'[1, 3, 4, 5, 1, 0, 1, 1, 6, 12, 8, 0, 0, 1, 0, 1, 1, 1]' : 0.191516}", "{'[1, 3, 4, 5, 1, 0, 1, 1, 6, 12, 8, 0, 0, 1, 0, 1, 1, 1]' : 0.194016}", "{'[1, 3, 4, 5, 1, 0, 1, 1, 6, 12, 8, 0, 0, 1, 0, 1, 1, 1]' : 0.189658}", "{'[1, 3, 4, 5, 1, 0, 1, 1, 6, 12, 8, 0, 0, 1, 0, 1, 1, 1]' : 0.187993}", "{'[1, 3, 4, 5, 1, 0, 1, 1, 6, 12, 8, 0, 0, 1, 0, 1, 1, 1]' : 0.187804}", "{'[1, 3, 4, 5, 1, 0, 1, 1, 6, 12, 8, 0, 0, 1, 0, 1, 1, 1]' : 0.188612}", "{'[1, 3, 4, 5, 1, 0, 1, 1, 6, 12, 8, 0, 0, 1, 0, 1, 1, 1]' : 0.194031}", "{'[1, 3, 4, 5, 1, 0, 1, 1, 6, 12, 8, 0, 0, 1, 0, 1, 1, 1]' : 0.194408}", "{'[1, 3, 4, 5, 1, 0, 1, 1, 6, 12, 8, 0, 0, 1, 0, 1, 1, 1]' : 0.190898}", "{'[1, 3, 4, 5, 1, 0, 1, 1, 6, 12, 8, 0, 0, 1, 0, 1, 1, 1]' : 0.187991}", "{'[1, 3, 4, 5, 1, 0, 1, 1, 6, 12, 8, 0, 0, 1, 0, 1, 1, 1]' : 0.183836}", "{'[1, 3, 4, 5, 1, 0, 1, 1, 6, 12, 8, 0, 0, 1, 0, 1, 1, 1]' : 0.187854}", "{'[1, 3, 4, 5, 1, 0, 1, 1, 6, 12, 8, 0, 0, 1, 0, 1, 1, 1]' : 0.187809}", "{'[1, 3, 4, 5, 1, 0, 1, 1, 6, 12, 8, 0, 0, 1, 0, 1, 1, 1]' : 0.188059}", "{'[1, 3, 4, 5, 1, 0, 1, 1, 6, 12, 8, 0, 0, 1, 0, 1, 1, 1]' : 0.187892}", "{'[1, 3, 4, 5, 1, 0, 1, 1, 6, 12, 8, 0, 0, 1, 0, 1, 1, 1]' : 0.18779}", "{'[1, 3, 4, 5, 1, 0, 1, 1, 6, 12, 8, 0, 0, 1, 0, 1, 1, 1]' : 0.19106}"]
returning from 'run': {'[1, 3, 4, 5, 1, 0, 1, 1, 6, 12, 8, 0, 0, 1, 0, 1, 1, 1]': ([0.217047, 0.211563, 0.193997, 0.191996, 0.187978, 0.188168, 0.18793, 0.18848, 0.19158, 0.193538, 0.188189, 0.194069, 0.194038, 0.191516, 0.194016, 0.189658, 0.187993, 0.187804, 0.188612, 0.194031, 0.194408, 0.190898, 0.187991, 0.183836, 0.187854, 0.187809, 0.188059, 0.187892, 0.18779, 0.19106], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 3, 4, 5, 1, 0, 1, 1, 6, 12, 8, 0, 0, 1, 0, 1, 1, 1]': ([0.217047, 0.211563, 0.193997, 0.191996, 0.187978, 0.188168, 0.18793, 0.18848, 0.19158, 0.193538, 0.188189, 0.194069, 0.194038, 0.191516, 0.194016, 0.189658, 0.187993, 0.187804, 0.188612, 0.194031, 0.194408, 0.190898, 0.187991, 0.183836, 0.187854, 0.187809, 0.188059, 0.187892, 0.18779, 0.19106], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = kkk
Code stats:
        Number of loops: 	158
        Max loop nest depth: 	5
        Additions: 		11642
        Multiplications: 	3654
        Divisions: 		0
        Logical: 		0
        Reads: 			22269
        Writes: 		4269
        Comparisons:		158
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest25.exe __orio_perftest25.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest25.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest25.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest25.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest25.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	6
        Additions: 		196
        Multiplications: 	62
        Divisions: 		0
        Logical: 		0
        Reads: 			417
        Writes: 		93
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest26.exe __orio_perftest26.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest26.exe  
Program Test Output: 
{'[4, 1, 5, 5, 6, 0, 0, 1, 27, 0, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.244576}
{'[4, 1, 5, 5, 6, 0, 0, 1, 27, 0, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.244368}
{'[4, 1, 5, 5, 6, 0, 0, 1, 27, 0, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.21666}
{'[4, 1, 5, 5, 6, 0, 0, 1, 27, 0, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.203875}
{'[4, 1, 5, 5, 6, 0, 0, 1, 27, 0, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.203578}
{'[4, 1, 5, 5, 6, 0, 0, 1, 27, 0, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.203449}
{'[4, 1, 5, 5, 6, 0, 0, 1, 27, 0, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.203715}
{'[4, 1, 5, 5, 6, 0, 0, 1, 27, 0, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.203442}
{'[4, 1, 5, 5, 6, 0, 0, 1, 27, 0, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.203932}
{'[4, 1, 5, 5, 6, 0, 0, 1, 27, 0, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.203982}
{'[4, 1, 5, 5, 6, 0, 0, 1, 27, 0, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.203509}
{'[4, 1, 5, 5, 6, 0, 0, 1, 27, 0, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.203564}
{'[4, 1, 5, 5, 6, 0, 0, 1, 27, 0, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.203635}
{'[4, 1, 5, 5, 6, 0, 0, 1, 27, 0, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.203552}
{'[4, 1, 5, 5, 6, 0, 0, 1, 27, 0, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.203621}
{'[4, 1, 5, 5, 6, 0, 0, 1, 27, 0, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.204043}
{'[4, 1, 5, 5, 6, 0, 0, 1, 27, 0, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.209142}
{'[4, 1, 5, 5, 6, 0, 0, 1, 27, 0, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.209943}
{'[4, 1, 5, 5, 6, 0, 0, 1, 27, 0, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.210334}
{'[4, 1, 5, 5, 6, 0, 0, 1, 27, 0, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.20961}
{'[4, 1, 5, 5, 6, 0, 0, 1, 27, 0, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.203744}
{'[4, 1, 5, 5, 6, 0, 0, 1, 27, 0, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.203705}
{'[4, 1, 5, 5, 6, 0, 0, 1, 27, 0, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.203704}
{'[4, 1, 5, 5, 6, 0, 0, 1, 27, 0, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.203884}
{'[4, 1, 5, 5, 6, 0, 0, 1, 27, 0, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.20357}
{'[4, 1, 5, 5, 6, 0, 0, 1, 27, 0, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.203991}
{'[4, 1, 5, 5, 6, 0, 0, 1, 27, 0, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.203459}
{'[4, 1, 5, 5, 6, 0, 0, 1, 27, 0, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.203783}
{'[4, 1, 5, 5, 6, 0, 0, 1, 27, 0, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.203801}
{'[4, 1, 5, 5, 6, 0, 0, 1, 27, 0, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.203491}

out:
 ["{'[4, 1, 5, 5, 6, 0, 0, 1, 27, 0, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.244576}", "{'[4, 1, 5, 5, 6, 0, 0, 1, 27, 0, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.244368}", "{'[4, 1, 5, 5, 6, 0, 0, 1, 27, 0, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.21666}", "{'[4, 1, 5, 5, 6, 0, 0, 1, 27, 0, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.203875}", "{'[4, 1, 5, 5, 6, 0, 0, 1, 27, 0, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.203578}", "{'[4, 1, 5, 5, 6, 0, 0, 1, 27, 0, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.203449}", "{'[4, 1, 5, 5, 6, 0, 0, 1, 27, 0, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.203715}", "{'[4, 1, 5, 5, 6, 0, 0, 1, 27, 0, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.203442}", "{'[4, 1, 5, 5, 6, 0, 0, 1, 27, 0, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.203932}", "{'[4, 1, 5, 5, 6, 0, 0, 1, 27, 0, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.203982}", "{'[4, 1, 5, 5, 6, 0, 0, 1, 27, 0, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.203509}", "{'[4, 1, 5, 5, 6, 0, 0, 1, 27, 0, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.203564}", "{'[4, 1, 5, 5, 6, 0, 0, 1, 27, 0, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.203635}", "{'[4, 1, 5, 5, 6, 0, 0, 1, 27, 0, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.203552}", "{'[4, 1, 5, 5, 6, 0, 0, 1, 27, 0, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.203621}", "{'[4, 1, 5, 5, 6, 0, 0, 1, 27, 0, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.204043}", "{'[4, 1, 5, 5, 6, 0, 0, 1, 27, 0, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.209142}", "{'[4, 1, 5, 5, 6, 0, 0, 1, 27, 0, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.209943}", "{'[4, 1, 5, 5, 6, 0, 0, 1, 27, 0, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.210334}", "{'[4, 1, 5, 5, 6, 0, 0, 1, 27, 0, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.20961}", "{'[4, 1, 5, 5, 6, 0, 0, 1, 27, 0, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.203744}", "{'[4, 1, 5, 5, 6, 0, 0, 1, 27, 0, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.203705}", "{'[4, 1, 5, 5, 6, 0, 0, 1, 27, 0, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.203704}", "{'[4, 1, 5, 5, 6, 0, 0, 1, 27, 0, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.203884}", "{'[4, 1, 5, 5, 6, 0, 0, 1, 27, 0, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.20357}", "{'[4, 1, 5, 5, 6, 0, 0, 1, 27, 0, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.203991}", "{'[4, 1, 5, 5, 6, 0, 0, 1, 27, 0, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.203459}", "{'[4, 1, 5, 5, 6, 0, 0, 1, 27, 0, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.203783}", "{'[4, 1, 5, 5, 6, 0, 0, 1, 27, 0, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.203801}", "{'[4, 1, 5, 5, 6, 0, 0, 1, 27, 0, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.203491}"]
returning from 'run': {'[4, 1, 5, 5, 6, 0, 0, 1, 27, 0, 28, 0, 0, 0, 0, 1, 0, 0]': ([0.244576, 0.244368, 0.21666, 0.203875, 0.203578, 0.203449, 0.203715, 0.203442, 0.203932, 0.203982, 0.203509, 0.203564, 0.203635, 0.203552, 0.203621, 0.204043, 0.209142, 0.209943, 0.210334, 0.20961, 0.203744, 0.203705, 0.203704, 0.203884, 0.20357, 0.203991, 0.203459, 0.203783, 0.203801, 0.203491], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 1, 5, 5, 6, 0, 0, 1, 27, 0, 28, 0, 0, 0, 0, 1, 0, 0]': ([0.244576, 0.244368, 0.21666, 0.203875, 0.203578, 0.203449, 0.203715, 0.203442, 0.203932, 0.203982, 0.203509, 0.203564, 0.203635, 0.203552, 0.203621, 0.204043, 0.209142, 0.209943, 0.210334, 0.20961, 0.203744, 0.203705, 0.203704, 0.203884, 0.20357, 0.203991, 0.203459, 0.203783, 0.203801, 0.203491], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	6
        Additions: 		318
        Multiplications: 	110
        Divisions: 		0
        Logical: 		0
        Reads: 			701
        Writes: 		140
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest27.exe __orio_perftest27.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest27.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest27.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest27.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest27.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		288
        Multiplications: 	106
        Divisions: 		0
        Logical: 		0
        Reads: 			625
        Writes: 		81
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest28.exe __orio_perftest28.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest28.exe  
Program Test Output: 
{'[0, 5, 1, 1, 5, 2, 0, 0, 0, 0, 9, 24, 0, 1, 1, 0, 0, 0]' : 0.278874}
{'[0, 5, 1, 1, 5, 2, 0, 0, 0, 0, 9, 24, 0, 1, 1, 0, 0, 0]' : 0.278408}
{'[0, 5, 1, 1, 5, 2, 0, 0, 0, 0, 9, 24, 0, 1, 1, 0, 0, 0]' : 0.251904}
{'[0, 5, 1, 1, 5, 2, 0, 0, 0, 0, 9, 24, 0, 1, 1, 0, 0, 0]' : 0.233856}
{'[0, 5, 1, 1, 5, 2, 0, 0, 0, 0, 9, 24, 0, 1, 1, 0, 0, 0]' : 0.233948}
{'[0, 5, 1, 1, 5, 2, 0, 0, 0, 0, 9, 24, 0, 1, 1, 0, 0, 0]' : 0.234044}
{'[0, 5, 1, 1, 5, 2, 0, 0, 0, 0, 9, 24, 0, 1, 1, 0, 0, 0]' : 0.234466}
{'[0, 5, 1, 1, 5, 2, 0, 0, 0, 0, 9, 24, 0, 1, 1, 0, 0, 0]' : 0.233825}
{'[0, 5, 1, 1, 5, 2, 0, 0, 0, 0, 9, 24, 0, 1, 1, 0, 0, 0]' : 0.233823}
{'[0, 5, 1, 1, 5, 2, 0, 0, 0, 0, 9, 24, 0, 1, 1, 0, 0, 0]' : 0.234504}
{'[0, 5, 1, 1, 5, 2, 0, 0, 0, 0, 9, 24, 0, 1, 1, 0, 0, 0]' : 0.239257}
{'[0, 5, 1, 1, 5, 2, 0, 0, 0, 0, 9, 24, 0, 1, 1, 0, 0, 0]' : 0.241278}
{'[0, 5, 1, 1, 5, 2, 0, 0, 0, 0, 9, 24, 0, 1, 1, 0, 0, 0]' : 0.241239}
{'[0, 5, 1, 1, 5, 2, 0, 0, 0, 0, 9, 24, 0, 1, 1, 0, 0, 0]' : 0.241449}
{'[0, 5, 1, 1, 5, 2, 0, 0, 0, 0, 9, 24, 0, 1, 1, 0, 0, 0]' : 0.2415}
{'[0, 5, 1, 1, 5, 2, 0, 0, 0, 0, 9, 24, 0, 1, 1, 0, 0, 0]' : 0.241364}
{'[0, 5, 1, 1, 5, 2, 0, 0, 0, 0, 9, 24, 0, 1, 1, 0, 0, 0]' : 0.241272}
{'[0, 5, 1, 1, 5, 2, 0, 0, 0, 0, 9, 24, 0, 1, 1, 0, 0, 0]' : 0.239969}
{'[0, 5, 1, 1, 5, 2, 0, 0, 0, 0, 9, 24, 0, 1, 1, 0, 0, 0]' : 0.23409}
{'[0, 5, 1, 1, 5, 2, 0, 0, 0, 0, 9, 24, 0, 1, 1, 0, 0, 0]' : 0.233803}
{'[0, 5, 1, 1, 5, 2, 0, 0, 0, 0, 9, 24, 0, 1, 1, 0, 0, 0]' : 0.233686}
{'[0, 5, 1, 1, 5, 2, 0, 0, 0, 0, 9, 24, 0, 1, 1, 0, 0, 0]' : 0.233795}
{'[0, 5, 1, 1, 5, 2, 0, 0, 0, 0, 9, 24, 0, 1, 1, 0, 0, 0]' : 0.233863}
{'[0, 5, 1, 1, 5, 2, 0, 0, 0, 0, 9, 24, 0, 1, 1, 0, 0, 0]' : 0.234612}
{'[0, 5, 1, 1, 5, 2, 0, 0, 0, 0, 9, 24, 0, 1, 1, 0, 0, 0]' : 0.234211}
{'[0, 5, 1, 1, 5, 2, 0, 0, 0, 0, 9, 24, 0, 1, 1, 0, 0, 0]' : 0.233691}
{'[0, 5, 1, 1, 5, 2, 0, 0, 0, 0, 9, 24, 0, 1, 1, 0, 0, 0]' : 0.233949}
{'[0, 5, 1, 1, 5, 2, 0, 0, 0, 0, 9, 24, 0, 1, 1, 0, 0, 0]' : 0.233961}
{'[0, 5, 1, 1, 5, 2, 0, 0, 0, 0, 9, 24, 0, 1, 1, 0, 0, 0]' : 0.234273}
{'[0, 5, 1, 1, 5, 2, 0, 0, 0, 0, 9, 24, 0, 1, 1, 0, 0, 0]' : 0.234025}

out:
 ["{'[0, 5, 1, 1, 5, 2, 0, 0, 0, 0, 9, 24, 0, 1, 1, 0, 0, 0]' : 0.278874}", "{'[0, 5, 1, 1, 5, 2, 0, 0, 0, 0, 9, 24, 0, 1, 1, 0, 0, 0]' : 0.278408}", "{'[0, 5, 1, 1, 5, 2, 0, 0, 0, 0, 9, 24, 0, 1, 1, 0, 0, 0]' : 0.251904}", "{'[0, 5, 1, 1, 5, 2, 0, 0, 0, 0, 9, 24, 0, 1, 1, 0, 0, 0]' : 0.233856}", "{'[0, 5, 1, 1, 5, 2, 0, 0, 0, 0, 9, 24, 0, 1, 1, 0, 0, 0]' : 0.233948}", "{'[0, 5, 1, 1, 5, 2, 0, 0, 0, 0, 9, 24, 0, 1, 1, 0, 0, 0]' : 0.234044}", "{'[0, 5, 1, 1, 5, 2, 0, 0, 0, 0, 9, 24, 0, 1, 1, 0, 0, 0]' : 0.234466}", "{'[0, 5, 1, 1, 5, 2, 0, 0, 0, 0, 9, 24, 0, 1, 1, 0, 0, 0]' : 0.233825}", "{'[0, 5, 1, 1, 5, 2, 0, 0, 0, 0, 9, 24, 0, 1, 1, 0, 0, 0]' : 0.233823}", "{'[0, 5, 1, 1, 5, 2, 0, 0, 0, 0, 9, 24, 0, 1, 1, 0, 0, 0]' : 0.234504}", "{'[0, 5, 1, 1, 5, 2, 0, 0, 0, 0, 9, 24, 0, 1, 1, 0, 0, 0]' : 0.239257}", "{'[0, 5, 1, 1, 5, 2, 0, 0, 0, 0, 9, 24, 0, 1, 1, 0, 0, 0]' : 0.241278}", "{'[0, 5, 1, 1, 5, 2, 0, 0, 0, 0, 9, 24, 0, 1, 1, 0, 0, 0]' : 0.241239}", "{'[0, 5, 1, 1, 5, 2, 0, 0, 0, 0, 9, 24, 0, 1, 1, 0, 0, 0]' : 0.241449}", "{'[0, 5, 1, 1, 5, 2, 0, 0, 0, 0, 9, 24, 0, 1, 1, 0, 0, 0]' : 0.2415}", "{'[0, 5, 1, 1, 5, 2, 0, 0, 0, 0, 9, 24, 0, 1, 1, 0, 0, 0]' : 0.241364}", "{'[0, 5, 1, 1, 5, 2, 0, 0, 0, 0, 9, 24, 0, 1, 1, 0, 0, 0]' : 0.241272}", "{'[0, 5, 1, 1, 5, 2, 0, 0, 0, 0, 9, 24, 0, 1, 1, 0, 0, 0]' : 0.239969}", "{'[0, 5, 1, 1, 5, 2, 0, 0, 0, 0, 9, 24, 0, 1, 1, 0, 0, 0]' : 0.23409}", "{'[0, 5, 1, 1, 5, 2, 0, 0, 0, 0, 9, 24, 0, 1, 1, 0, 0, 0]' : 0.233803}", "{'[0, 5, 1, 1, 5, 2, 0, 0, 0, 0, 9, 24, 0, 1, 1, 0, 0, 0]' : 0.233686}", "{'[0, 5, 1, 1, 5, 2, 0, 0, 0, 0, 9, 24, 0, 1, 1, 0, 0, 0]' : 0.233795}", "{'[0, 5, 1, 1, 5, 2, 0, 0, 0, 0, 9, 24, 0, 1, 1, 0, 0, 0]' : 0.233863}", "{'[0, 5, 1, 1, 5, 2, 0, 0, 0, 0, 9, 24, 0, 1, 1, 0, 0, 0]' : 0.234612}", "{'[0, 5, 1, 1, 5, 2, 0, 0, 0, 0, 9, 24, 0, 1, 1, 0, 0, 0]' : 0.234211}", "{'[0, 5, 1, 1, 5, 2, 0, 0, 0, 0, 9, 24, 0, 1, 1, 0, 0, 0]' : 0.233691}", "{'[0, 5, 1, 1, 5, 2, 0, 0, 0, 0, 9, 24, 0, 1, 1, 0, 0, 0]' : 0.233949}", "{'[0, 5, 1, 1, 5, 2, 0, 0, 0, 0, 9, 24, 0, 1, 1, 0, 0, 0]' : 0.233961}", "{'[0, 5, 1, 1, 5, 2, 0, 0, 0, 0, 9, 24, 0, 1, 1, 0, 0, 0]' : 0.234273}", "{'[0, 5, 1, 1, 5, 2, 0, 0, 0, 0, 9, 24, 0, 1, 1, 0, 0, 0]' : 0.234025}"]
returning from 'run': {'[0, 5, 1, 1, 5, 2, 0, 0, 0, 0, 9, 24, 0, 1, 1, 0, 0, 0]': ([0.278874, 0.278408, 0.251904, 0.233856, 0.233948, 0.234044, 0.234466, 0.233825, 0.233823, 0.234504, 0.239257, 0.241278, 0.241239, 0.241449, 0.2415, 0.241364, 0.241272, 0.239969, 0.23409, 0.233803, 0.233686, 0.233795, 0.233863, 0.234612, 0.234211, 0.233691, 0.233949, 0.233961, 0.234273, 0.234025], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 5, 1, 1, 5, 2, 0, 0, 0, 0, 9, 24, 0, 1, 1, 0, 0, 0]': ([0.278874, 0.278408, 0.251904, 0.233856, 0.233948, 0.234044, 0.234466, 0.233825, 0.233823, 0.234504, 0.239257, 0.241278, 0.241239, 0.241449, 0.2415, 0.241364, 0.241272, 0.239969, 0.23409, 0.233803, 0.233686, 0.233795, 0.233863, 0.234612, 0.234211, 0.233691, 0.233949, 0.233961, 0.234273, 0.234025], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	17
        Max loop nest depth: 	5
        Additions: 		2405
        Multiplications: 	1176
        Divisions: 		0
        Logical: 		0
        Reads: 			4542
        Writes: 		736
        Comparisons:		17
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest29.exe __orio_perftest29.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest29.exe  
Program Test Output: 
{'[5, 5, 2, 0, 0, 2, 0, 0, 7, 19, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.160537}
{'[5, 5, 2, 0, 0, 2, 0, 0, 7, 19, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.160432}
{'[5, 5, 2, 0, 0, 2, 0, 0, 7, 19, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.160358}
{'[5, 5, 2, 0, 0, 2, 0, 0, 7, 19, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.144732}
{'[5, 5, 2, 0, 0, 2, 0, 0, 7, 19, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.136419}
{'[5, 5, 2, 0, 0, 2, 0, 0, 7, 19, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.136288}
{'[5, 5, 2, 0, 0, 2, 0, 0, 7, 19, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.136434}
{'[5, 5, 2, 0, 0, 2, 0, 0, 7, 19, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.136349}
{'[5, 5, 2, 0, 0, 2, 0, 0, 7, 19, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.136582}
{'[5, 5, 2, 0, 0, 2, 0, 0, 7, 19, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.13664}
{'[5, 5, 2, 0, 0, 2, 0, 0, 7, 19, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.137038}
{'[5, 5, 2, 0, 0, 2, 0, 0, 7, 19, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.136838}
{'[5, 5, 2, 0, 0, 2, 0, 0, 7, 19, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.136826}
{'[5, 5, 2, 0, 0, 2, 0, 0, 7, 19, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.137168}
{'[5, 5, 2, 0, 0, 2, 0, 0, 7, 19, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.137337}
{'[5, 5, 2, 0, 0, 2, 0, 0, 7, 19, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.137445}
{'[5, 5, 2, 0, 0, 2, 0, 0, 7, 19, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.137373}
{'[5, 5, 2, 0, 0, 2, 0, 0, 7, 19, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.137163}
{'[5, 5, 2, 0, 0, 2, 0, 0, 7, 19, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.136928}
{'[5, 5, 2, 0, 0, 2, 0, 0, 7, 19, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.136929}
{'[5, 5, 2, 0, 0, 2, 0, 0, 7, 19, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.136718}
{'[5, 5, 2, 0, 0, 2, 0, 0, 7, 19, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.136679}
{'[5, 5, 2, 0, 0, 2, 0, 0, 7, 19, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.136609}
{'[5, 5, 2, 0, 0, 2, 0, 0, 7, 19, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.136672}
{'[5, 5, 2, 0, 0, 2, 0, 0, 7, 19, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.136777}
{'[5, 5, 2, 0, 0, 2, 0, 0, 7, 19, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.136748}
{'[5, 5, 2, 0, 0, 2, 0, 0, 7, 19, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.136899}
{'[5, 5, 2, 0, 0, 2, 0, 0, 7, 19, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.136631}
{'[5, 5, 2, 0, 0, 2, 0, 0, 7, 19, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.136767}
{'[5, 5, 2, 0, 0, 2, 0, 0, 7, 19, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.136986}

out:
 ["{'[5, 5, 2, 0, 0, 2, 0, 0, 7, 19, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.160537}", "{'[5, 5, 2, 0, 0, 2, 0, 0, 7, 19, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.160432}", "{'[5, 5, 2, 0, 0, 2, 0, 0, 7, 19, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.160358}", "{'[5, 5, 2, 0, 0, 2, 0, 0, 7, 19, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.144732}", "{'[5, 5, 2, 0, 0, 2, 0, 0, 7, 19, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.136419}", "{'[5, 5, 2, 0, 0, 2, 0, 0, 7, 19, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.136288}", "{'[5, 5, 2, 0, 0, 2, 0, 0, 7, 19, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.136434}", "{'[5, 5, 2, 0, 0, 2, 0, 0, 7, 19, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.136349}", "{'[5, 5, 2, 0, 0, 2, 0, 0, 7, 19, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.136582}", "{'[5, 5, 2, 0, 0, 2, 0, 0, 7, 19, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.13664}", "{'[5, 5, 2, 0, 0, 2, 0, 0, 7, 19, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.137038}", "{'[5, 5, 2, 0, 0, 2, 0, 0, 7, 19, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.136838}", "{'[5, 5, 2, 0, 0, 2, 0, 0, 7, 19, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.136826}", "{'[5, 5, 2, 0, 0, 2, 0, 0, 7, 19, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.137168}", "{'[5, 5, 2, 0, 0, 2, 0, 0, 7, 19, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.137337}", "{'[5, 5, 2, 0, 0, 2, 0, 0, 7, 19, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.137445}", "{'[5, 5, 2, 0, 0, 2, 0, 0, 7, 19, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.137373}", "{'[5, 5, 2, 0, 0, 2, 0, 0, 7, 19, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.137163}", "{'[5, 5, 2, 0, 0, 2, 0, 0, 7, 19, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.136928}", "{'[5, 5, 2, 0, 0, 2, 0, 0, 7, 19, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.136929}", "{'[5, 5, 2, 0, 0, 2, 0, 0, 7, 19, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.136718}", "{'[5, 5, 2, 0, 0, 2, 0, 0, 7, 19, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.136679}", "{'[5, 5, 2, 0, 0, 2, 0, 0, 7, 19, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.136609}", "{'[5, 5, 2, 0, 0, 2, 0, 0, 7, 19, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.136672}", "{'[5, 5, 2, 0, 0, 2, 0, 0, 7, 19, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.136777}", "{'[5, 5, 2, 0, 0, 2, 0, 0, 7, 19, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.136748}", "{'[5, 5, 2, 0, 0, 2, 0, 0, 7, 19, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.136899}", "{'[5, 5, 2, 0, 0, 2, 0, 0, 7, 19, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.136631}", "{'[5, 5, 2, 0, 0, 2, 0, 0, 7, 19, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.136767}", "{'[5, 5, 2, 0, 0, 2, 0, 0, 7, 19, 25, 0, 0, 0, 0, 1, 1, 1]' : 0.136986}"]
returning from 'run': {'[5, 5, 2, 0, 0, 2, 0, 0, 7, 19, 25, 0, 0, 0, 0, 1, 1, 1]': ([0.160537, 0.160432, 0.160358, 0.144732, 0.136419, 0.136288, 0.136434, 0.136349, 0.136582, 0.13664, 0.137038, 0.136838, 0.136826, 0.137168, 0.137337, 0.137445, 0.137373, 0.137163, 0.136928, 0.136929, 0.136718, 0.136679, 0.136609, 0.136672, 0.136777, 0.136748, 0.136899, 0.136631, 0.136767, 0.136986], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 5, 2, 0, 0, 2, 0, 0, 7, 19, 25, 0, 0, 0, 0, 1, 1, 1]': ([0.160537, 0.160432, 0.160358, 0.144732, 0.136419, 0.136288, 0.136434, 0.136349, 0.136582, 0.13664, 0.137038, 0.136838, 0.136826, 0.137168, 0.137337, 0.137445, 0.137373, 0.137163, 0.136928, 0.136929, 0.136718, 0.136679, 0.136609, 0.136672, 0.136777, 0.136748, 0.136899, 0.136631, 0.136767, 0.136986], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	138
        Max loop nest depth: 	5
        Additions: 		9526
        Multiplications: 	3968
        Divisions: 		0
        Logical: 		0
        Reads: 			16656
        Writes: 		2478
        Comparisons:		138
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest30.exe __orio_perftest30.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest30.exe  
Program Test Output: 
{'[4, 6, 5, 5, 0, 0, 0, 1, 25, 29, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.312087}
{'[4, 6, 5, 5, 0, 0, 0, 1, 25, 29, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.293224}
{'[4, 6, 5, 5, 0, 0, 0, 1, 25, 29, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.275224}
{'[4, 6, 5, 5, 0, 0, 0, 1, 25, 29, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.271276}
{'[4, 6, 5, 5, 0, 0, 0, 1, 25, 29, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.271188}
{'[4, 6, 5, 5, 0, 0, 0, 1, 25, 29, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.273486}
{'[4, 6, 5, 5, 0, 0, 0, 1, 25, 29, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.272384}
{'[4, 6, 5, 5, 0, 0, 0, 1, 25, 29, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.268199}
{'[4, 6, 5, 5, 0, 0, 0, 1, 25, 29, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.269642}
{'[4, 6, 5, 5, 0, 0, 0, 1, 25, 29, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.275505}
{'[4, 6, 5, 5, 0, 0, 0, 1, 25, 29, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.279968}
{'[4, 6, 5, 5, 0, 0, 0, 1, 25, 29, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.27438}
{'[4, 6, 5, 5, 0, 0, 0, 1, 25, 29, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.275588}
{'[4, 6, 5, 5, 0, 0, 0, 1, 25, 29, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.27405}
{'[4, 6, 5, 5, 0, 0, 0, 1, 25, 29, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.26678}
{'[4, 6, 5, 5, 0, 0, 0, 1, 25, 29, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.275719}
{'[4, 6, 5, 5, 0, 0, 0, 1, 25, 29, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.264216}
{'[4, 6, 5, 5, 0, 0, 0, 1, 25, 29, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.271983}
{'[4, 6, 5, 5, 0, 0, 0, 1, 25, 29, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.271292}
{'[4, 6, 5, 5, 0, 0, 0, 1, 25, 29, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.272572}
{'[4, 6, 5, 5, 0, 0, 0, 1, 25, 29, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.27126}
{'[4, 6, 5, 5, 0, 0, 0, 1, 25, 29, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.269258}
{'[4, 6, 5, 5, 0, 0, 0, 1, 25, 29, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.270355}
{'[4, 6, 5, 5, 0, 0, 0, 1, 25, 29, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.272228}
{'[4, 6, 5, 5, 0, 0, 0, 1, 25, 29, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.277065}
{'[4, 6, 5, 5, 0, 0, 0, 1, 25, 29, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.270428}
{'[4, 6, 5, 5, 0, 0, 0, 1, 25, 29, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.273991}
{'[4, 6, 5, 5, 0, 0, 0, 1, 25, 29, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.276623}
{'[4, 6, 5, 5, 0, 0, 0, 1, 25, 29, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.275284}
{'[4, 6, 5, 5, 0, 0, 0, 1, 25, 29, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.269919}

out:
 ["{'[4, 6, 5, 5, 0, 0, 0, 1, 25, 29, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.312087}", "{'[4, 6, 5, 5, 0, 0, 0, 1, 25, 29, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.293224}", "{'[4, 6, 5, 5, 0, 0, 0, 1, 25, 29, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.275224}", "{'[4, 6, 5, 5, 0, 0, 0, 1, 25, 29, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.271276}", "{'[4, 6, 5, 5, 0, 0, 0, 1, 25, 29, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.271188}", "{'[4, 6, 5, 5, 0, 0, 0, 1, 25, 29, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.273486}", "{'[4, 6, 5, 5, 0, 0, 0, 1, 25, 29, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.272384}", "{'[4, 6, 5, 5, 0, 0, 0, 1, 25, 29, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.268199}", "{'[4, 6, 5, 5, 0, 0, 0, 1, 25, 29, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.269642}", "{'[4, 6, 5, 5, 0, 0, 0, 1, 25, 29, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.275505}", "{'[4, 6, 5, 5, 0, 0, 0, 1, 25, 29, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.279968}", "{'[4, 6, 5, 5, 0, 0, 0, 1, 25, 29, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.27438}", "{'[4, 6, 5, 5, 0, 0, 0, 1, 25, 29, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.275588}", "{'[4, 6, 5, 5, 0, 0, 0, 1, 25, 29, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.27405}", "{'[4, 6, 5, 5, 0, 0, 0, 1, 25, 29, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.26678}", "{'[4, 6, 5, 5, 0, 0, 0, 1, 25, 29, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.275719}", "{'[4, 6, 5, 5, 0, 0, 0, 1, 25, 29, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.264216}", "{'[4, 6, 5, 5, 0, 0, 0, 1, 25, 29, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.271983}", "{'[4, 6, 5, 5, 0, 0, 0, 1, 25, 29, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.271292}", "{'[4, 6, 5, 5, 0, 0, 0, 1, 25, 29, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.272572}", "{'[4, 6, 5, 5, 0, 0, 0, 1, 25, 29, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.27126}", "{'[4, 6, 5, 5, 0, 0, 0, 1, 25, 29, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.269258}", "{'[4, 6, 5, 5, 0, 0, 0, 1, 25, 29, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.270355}", "{'[4, 6, 5, 5, 0, 0, 0, 1, 25, 29, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.272228}", "{'[4, 6, 5, 5, 0, 0, 0, 1, 25, 29, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.277065}", "{'[4, 6, 5, 5, 0, 0, 0, 1, 25, 29, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.270428}", "{'[4, 6, 5, 5, 0, 0, 0, 1, 25, 29, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.273991}", "{'[4, 6, 5, 5, 0, 0, 0, 1, 25, 29, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.276623}", "{'[4, 6, 5, 5, 0, 0, 0, 1, 25, 29, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.275284}", "{'[4, 6, 5, 5, 0, 0, 0, 1, 25, 29, 29, 0, 0, 2, 0, 1, 0, 0]' : 0.269919}"]
returning from 'run': {'[4, 6, 5, 5, 0, 0, 0, 1, 25, 29, 29, 0, 0, 2, 0, 1, 0, 0]': ([0.312087, 0.293224, 0.275224, 0.271276, 0.271188, 0.273486, 0.272384, 0.268199, 0.269642, 0.275505, 0.279968, 0.27438, 0.275588, 0.27405, 0.26678, 0.275719, 0.264216, 0.271983, 0.271292, 0.272572, 0.27126, 0.269258, 0.270355, 0.272228, 0.277065, 0.270428, 0.273991, 0.276623, 0.275284, 0.269919], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 6, 5, 5, 0, 0, 0, 1, 25, 29, 29, 0, 0, 2, 0, 1, 0, 0]': ([0.312087, 0.293224, 0.275224, 0.271276, 0.271188, 0.273486, 0.272384, 0.268199, 0.269642, 0.275505, 0.279968, 0.27438, 0.275588, 0.27405, 0.26678, 0.275719, 0.264216, 0.271983, 0.271292, 0.272572, 0.27126, 0.269258, 0.270355, 0.272228, 0.277065, 0.270428, 0.273991, 0.276623, 0.275284, 0.269919], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = kkk
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	4
        Additions: 		393
        Multiplications: 	162
        Divisions: 		0
        Logical: 		0
        Reads: 			843
        Writes: 		161
        Comparisons:		18
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest31.exe __orio_perftest31.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest31.exe  
Program Test Output: 
{'[5, 0, 4, 0, 2, 2, 1, 1, 0, 0, 27, 0, 1, 1, 0, 1, 1, 1]' : 0.118311}
{'[5, 0, 4, 0, 2, 2, 1, 1, 0, 0, 27, 0, 1, 1, 0, 1, 1, 1]' : 0.118273}
{'[5, 0, 4, 0, 2, 2, 1, 1, 0, 0, 27, 0, 1, 1, 0, 1, 1, 1]' : 0.118235}
{'[5, 0, 4, 0, 2, 2, 1, 1, 0, 0, 27, 0, 1, 1, 0, 1, 1, 1]' : 0.118398}
{'[5, 0, 4, 0, 2, 2, 1, 1, 0, 0, 27, 0, 1, 1, 0, 1, 1, 1]' : 0.11828}
{'[5, 0, 4, 0, 2, 2, 1, 1, 0, 0, 27, 0, 1, 1, 0, 1, 1, 1]' : 0.106298}
{'[5, 0, 4, 0, 2, 2, 1, 1, 0, 0, 27, 0, 1, 1, 0, 1, 1, 1]' : 0.100373}
{'[5, 0, 4, 0, 2, 2, 1, 1, 0, 0, 27, 0, 1, 1, 0, 1, 1, 1]' : 0.100437}
{'[5, 0, 4, 0, 2, 2, 1, 1, 0, 0, 27, 0, 1, 1, 0, 1, 1, 1]' : 0.100315}
{'[5, 0, 4, 0, 2, 2, 1, 1, 0, 0, 27, 0, 1, 1, 0, 1, 1, 1]' : 0.100402}
{'[5, 0, 4, 0, 2, 2, 1, 1, 0, 0, 27, 0, 1, 1, 0, 1, 1, 1]' : 0.100449}
{'[5, 0, 4, 0, 2, 2, 1, 1, 0, 0, 27, 0, 1, 1, 0, 1, 1, 1]' : 0.100542}
{'[5, 0, 4, 0, 2, 2, 1, 1, 0, 0, 27, 0, 1, 1, 0, 1, 1, 1]' : 0.100467}
{'[5, 0, 4, 0, 2, 2, 1, 1, 0, 0, 27, 0, 1, 1, 0, 1, 1, 1]' : 0.10034}
{'[5, 0, 4, 0, 2, 2, 1, 1, 0, 0, 27, 0, 1, 1, 0, 1, 1, 1]' : 0.100891}
{'[5, 0, 4, 0, 2, 2, 1, 1, 0, 0, 27, 0, 1, 1, 0, 1, 1, 1]' : 0.100641}
{'[5, 0, 4, 0, 2, 2, 1, 1, 0, 0, 27, 0, 1, 1, 0, 1, 1, 1]' : 0.100409}
{'[5, 0, 4, 0, 2, 2, 1, 1, 0, 0, 27, 0, 1, 1, 0, 1, 1, 1]' : 0.100475}
{'[5, 0, 4, 0, 2, 2, 1, 1, 0, 0, 27, 0, 1, 1, 0, 1, 1, 1]' : 0.100589}
{'[5, 0, 4, 0, 2, 2, 1, 1, 0, 0, 27, 0, 1, 1, 0, 1, 1, 1]' : 0.1004}
{'[5, 0, 4, 0, 2, 2, 1, 1, 0, 0, 27, 0, 1, 1, 0, 1, 1, 1]' : 0.100484}
{'[5, 0, 4, 0, 2, 2, 1, 1, 0, 0, 27, 0, 1, 1, 0, 1, 1, 1]' : 0.100874}
{'[5, 0, 4, 0, 2, 2, 1, 1, 0, 0, 27, 0, 1, 1, 0, 1, 1, 1]' : 0.100464}
{'[5, 0, 4, 0, 2, 2, 1, 1, 0, 0, 27, 0, 1, 1, 0, 1, 1, 1]' : 0.100378}
{'[5, 0, 4, 0, 2, 2, 1, 1, 0, 0, 27, 0, 1, 1, 0, 1, 1, 1]' : 0.100644}
{'[5, 0, 4, 0, 2, 2, 1, 1, 0, 0, 27, 0, 1, 1, 0, 1, 1, 1]' : 0.101022}
{'[5, 0, 4, 0, 2, 2, 1, 1, 0, 0, 27, 0, 1, 1, 0, 1, 1, 1]' : 0.100739}
{'[5, 0, 4, 0, 2, 2, 1, 1, 0, 0, 27, 0, 1, 1, 0, 1, 1, 1]' : 0.100408}
{'[5, 0, 4, 0, 2, 2, 1, 1, 0, 0, 27, 0, 1, 1, 0, 1, 1, 1]' : 0.100655}
{'[5, 0, 4, 0, 2, 2, 1, 1, 0, 0, 27, 0, 1, 1, 0, 1, 1, 1]' : 0.100772}

out:
 ["{'[5, 0, 4, 0, 2, 2, 1, 1, 0, 0, 27, 0, 1, 1, 0, 1, 1, 1]' : 0.118311}", "{'[5, 0, 4, 0, 2, 2, 1, 1, 0, 0, 27, 0, 1, 1, 0, 1, 1, 1]' : 0.118273}", "{'[5, 0, 4, 0, 2, 2, 1, 1, 0, 0, 27, 0, 1, 1, 0, 1, 1, 1]' : 0.118235}", "{'[5, 0, 4, 0, 2, 2, 1, 1, 0, 0, 27, 0, 1, 1, 0, 1, 1, 1]' : 0.118398}", "{'[5, 0, 4, 0, 2, 2, 1, 1, 0, 0, 27, 0, 1, 1, 0, 1, 1, 1]' : 0.11828}", "{'[5, 0, 4, 0, 2, 2, 1, 1, 0, 0, 27, 0, 1, 1, 0, 1, 1, 1]' : 0.106298}", "{'[5, 0, 4, 0, 2, 2, 1, 1, 0, 0, 27, 0, 1, 1, 0, 1, 1, 1]' : 0.100373}", "{'[5, 0, 4, 0, 2, 2, 1, 1, 0, 0, 27, 0, 1, 1, 0, 1, 1, 1]' : 0.100437}", "{'[5, 0, 4, 0, 2, 2, 1, 1, 0, 0, 27, 0, 1, 1, 0, 1, 1, 1]' : 0.100315}", "{'[5, 0, 4, 0, 2, 2, 1, 1, 0, 0, 27, 0, 1, 1, 0, 1, 1, 1]' : 0.100402}", "{'[5, 0, 4, 0, 2, 2, 1, 1, 0, 0, 27, 0, 1, 1, 0, 1, 1, 1]' : 0.100449}", "{'[5, 0, 4, 0, 2, 2, 1, 1, 0, 0, 27, 0, 1, 1, 0, 1, 1, 1]' : 0.100542}", "{'[5, 0, 4, 0, 2, 2, 1, 1, 0, 0, 27, 0, 1, 1, 0, 1, 1, 1]' : 0.100467}", "{'[5, 0, 4, 0, 2, 2, 1, 1, 0, 0, 27, 0, 1, 1, 0, 1, 1, 1]' : 0.10034}", "{'[5, 0, 4, 0, 2, 2, 1, 1, 0, 0, 27, 0, 1, 1, 0, 1, 1, 1]' : 0.100891}", "{'[5, 0, 4, 0, 2, 2, 1, 1, 0, 0, 27, 0, 1, 1, 0, 1, 1, 1]' : 0.100641}", "{'[5, 0, 4, 0, 2, 2, 1, 1, 0, 0, 27, 0, 1, 1, 0, 1, 1, 1]' : 0.100409}", "{'[5, 0, 4, 0, 2, 2, 1, 1, 0, 0, 27, 0, 1, 1, 0, 1, 1, 1]' : 0.100475}", "{'[5, 0, 4, 0, 2, 2, 1, 1, 0, 0, 27, 0, 1, 1, 0, 1, 1, 1]' : 0.100589}", "{'[5, 0, 4, 0, 2, 2, 1, 1, 0, 0, 27, 0, 1, 1, 0, 1, 1, 1]' : 0.1004}", "{'[5, 0, 4, 0, 2, 2, 1, 1, 0, 0, 27, 0, 1, 1, 0, 1, 1, 1]' : 0.100484}", "{'[5, 0, 4, 0, 2, 2, 1, 1, 0, 0, 27, 0, 1, 1, 0, 1, 1, 1]' : 0.100874}", "{'[5, 0, 4, 0, 2, 2, 1, 1, 0, 0, 27, 0, 1, 1, 0, 1, 1, 1]' : 0.100464}", "{'[5, 0, 4, 0, 2, 2, 1, 1, 0, 0, 27, 0, 1, 1, 0, 1, 1, 1]' : 0.100378}", "{'[5, 0, 4, 0, 2, 2, 1, 1, 0, 0, 27, 0, 1, 1, 0, 1, 1, 1]' : 0.100644}", "{'[5, 0, 4, 0, 2, 2, 1, 1, 0, 0, 27, 0, 1, 1, 0, 1, 1, 1]' : 0.101022}", "{'[5, 0, 4, 0, 2, 2, 1, 1, 0, 0, 27, 0, 1, 1, 0, 1, 1, 1]' : 0.100739}", "{'[5, 0, 4, 0, 2, 2, 1, 1, 0, 0, 27, 0, 1, 1, 0, 1, 1, 1]' : 0.100408}", "{'[5, 0, 4, 0, 2, 2, 1, 1, 0, 0, 27, 0, 1, 1, 0, 1, 1, 1]' : 0.100655}", "{'[5, 0, 4, 0, 2, 2, 1, 1, 0, 0, 27, 0, 1, 1, 0, 1, 1, 1]' : 0.100772}"]
returning from 'run': {'[5, 0, 4, 0, 2, 2, 1, 1, 0, 0, 27, 0, 1, 1, 0, 1, 1, 1]': ([0.118311, 0.118273, 0.118235, 0.118398, 0.11828, 0.106298, 0.100373, 0.100437, 0.100315, 0.100402, 0.100449, 0.100542, 0.100467, 0.10034, 0.100891, 0.100641, 0.100409, 0.100475, 0.100589, 0.1004, 0.100484, 0.100874, 0.100464, 0.100378, 0.100644, 0.101022, 0.100739, 0.100408, 0.100655, 0.100772], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 0, 4, 0, 2, 2, 1, 1, 0, 0, 27, 0, 1, 1, 0, 1, 1, 1]': ([0.118311, 0.118273, 0.118235, 0.118398, 0.11828, 0.106298, 0.100373, 0.100437, 0.100315, 0.100402, 0.100449, 0.100542, 0.100467, 0.10034, 0.100891, 0.100641, 0.100409, 0.100475, 0.100589, 0.1004, 0.100484, 0.100874, 0.100464, 0.100378, 0.100644, 0.101022, 0.100739, 0.100408, 0.100655, 0.100772], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	110
        Max loop nest depth: 	4
        Additions: 		5863
        Multiplications: 	2300
        Divisions: 		0
        Logical: 		0
        Reads: 			10406
        Writes: 		1581
        Comparisons:		110
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest32.exe __orio_perftest32.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest32.exe  
Program Test Output: 
{'[0, 0, 6, 2, 6, 0, 1, 1, 2, 16, 20, 0, 2, 0, 0, 1, 1, 0]' : 0.218185}
{'[0, 0, 6, 2, 6, 0, 1, 1, 2, 16, 20, 0, 2, 0, 0, 1, 1, 0]' : 0.22027}
{'[0, 0, 6, 2, 6, 0, 1, 1, 2, 16, 20, 0, 2, 0, 0, 1, 1, 0]' : 0.217255}
{'[0, 0, 6, 2, 6, 0, 1, 1, 2, 16, 20, 0, 2, 0, 0, 1, 1, 0]' : 0.220038}
{'[0, 0, 6, 2, 6, 0, 1, 1, 2, 16, 20, 0, 2, 0, 0, 1, 1, 0]' : 0.217256}
{'[0, 0, 6, 2, 6, 0, 1, 1, 2, 16, 20, 0, 2, 0, 0, 1, 1, 0]' : 0.219083}
{'[0, 0, 6, 2, 6, 0, 1, 1, 2, 16, 20, 0, 2, 0, 0, 1, 1, 0]' : 0.220666}
{'[0, 0, 6, 2, 6, 0, 1, 1, 2, 16, 20, 0, 2, 0, 0, 1, 1, 0]' : 0.219632}
{'[0, 0, 6, 2, 6, 0, 1, 1, 2, 16, 20, 0, 2, 0, 0, 1, 1, 0]' : 0.218622}
{'[0, 0, 6, 2, 6, 0, 1, 1, 2, 16, 20, 0, 2, 0, 0, 1, 1, 0]' : 0.219331}
{'[0, 0, 6, 2, 6, 0, 1, 1, 2, 16, 20, 0, 2, 0, 0, 1, 1, 0]' : 0.221878}
{'[0, 0, 6, 2, 6, 0, 1, 1, 2, 16, 20, 0, 2, 0, 0, 1, 1, 0]' : 0.218482}
{'[0, 0, 6, 2, 6, 0, 1, 1, 2, 16, 20, 0, 2, 0, 0, 1, 1, 0]' : 0.220368}
{'[0, 0, 6, 2, 6, 0, 1, 1, 2, 16, 20, 0, 2, 0, 0, 1, 1, 0]' : 0.21993}
{'[0, 0, 6, 2, 6, 0, 1, 1, 2, 16, 20, 0, 2, 0, 0, 1, 1, 0]' : 0.221006}
{'[0, 0, 6, 2, 6, 0, 1, 1, 2, 16, 20, 0, 2, 0, 0, 1, 1, 0]' : 0.218936}
{'[0, 0, 6, 2, 6, 0, 1, 1, 2, 16, 20, 0, 2, 0, 0, 1, 1, 0]' : 0.21945}
{'[0, 0, 6, 2, 6, 0, 1, 1, 2, 16, 20, 0, 2, 0, 0, 1, 1, 0]' : 0.219183}
{'[0, 0, 6, 2, 6, 0, 1, 1, 2, 16, 20, 0, 2, 0, 0, 1, 1, 0]' : 0.21908}
{'[0, 0, 6, 2, 6, 0, 1, 1, 2, 16, 20, 0, 2, 0, 0, 1, 1, 0]' : 0.220799}
{'[0, 0, 6, 2, 6, 0, 1, 1, 2, 16, 20, 0, 2, 0, 0, 1, 1, 0]' : 0.220212}
{'[0, 0, 6, 2, 6, 0, 1, 1, 2, 16, 20, 0, 2, 0, 0, 1, 1, 0]' : 0.221319}
{'[0, 0, 6, 2, 6, 0, 1, 1, 2, 16, 20, 0, 2, 0, 0, 1, 1, 0]' : 0.220256}
{'[0, 0, 6, 2, 6, 0, 1, 1, 2, 16, 20, 0, 2, 0, 0, 1, 1, 0]' : 0.217893}
{'[0, 0, 6, 2, 6, 0, 1, 1, 2, 16, 20, 0, 2, 0, 0, 1, 1, 0]' : 0.223232}
{'[0, 0, 6, 2, 6, 0, 1, 1, 2, 16, 20, 0, 2, 0, 0, 1, 1, 0]' : 0.219254}
{'[0, 0, 6, 2, 6, 0, 1, 1, 2, 16, 20, 0, 2, 0, 0, 1, 1, 0]' : 0.220823}
{'[0, 0, 6, 2, 6, 0, 1, 1, 2, 16, 20, 0, 2, 0, 0, 1, 1, 0]' : 0.219478}
{'[0, 0, 6, 2, 6, 0, 1, 1, 2, 16, 20, 0, 2, 0, 0, 1, 1, 0]' : 0.221349}
{'[0, 0, 6, 2, 6, 0, 1, 1, 2, 16, 20, 0, 2, 0, 0, 1, 1, 0]' : 0.219911}

out:
 ["{'[0, 0, 6, 2, 6, 0, 1, 1, 2, 16, 20, 0, 2, 0, 0, 1, 1, 0]' : 0.218185}", "{'[0, 0, 6, 2, 6, 0, 1, 1, 2, 16, 20, 0, 2, 0, 0, 1, 1, 0]' : 0.22027}", "{'[0, 0, 6, 2, 6, 0, 1, 1, 2, 16, 20, 0, 2, 0, 0, 1, 1, 0]' : 0.217255}", "{'[0, 0, 6, 2, 6, 0, 1, 1, 2, 16, 20, 0, 2, 0, 0, 1, 1, 0]' : 0.220038}", "{'[0, 0, 6, 2, 6, 0, 1, 1, 2, 16, 20, 0, 2, 0, 0, 1, 1, 0]' : 0.217256}", "{'[0, 0, 6, 2, 6, 0, 1, 1, 2, 16, 20, 0, 2, 0, 0, 1, 1, 0]' : 0.219083}", "{'[0, 0, 6, 2, 6, 0, 1, 1, 2, 16, 20, 0, 2, 0, 0, 1, 1, 0]' : 0.220666}", "{'[0, 0, 6, 2, 6, 0, 1, 1, 2, 16, 20, 0, 2, 0, 0, 1, 1, 0]' : 0.219632}", "{'[0, 0, 6, 2, 6, 0, 1, 1, 2, 16, 20, 0, 2, 0, 0, 1, 1, 0]' : 0.218622}", "{'[0, 0, 6, 2, 6, 0, 1, 1, 2, 16, 20, 0, 2, 0, 0, 1, 1, 0]' : 0.219331}", "{'[0, 0, 6, 2, 6, 0, 1, 1, 2, 16, 20, 0, 2, 0, 0, 1, 1, 0]' : 0.221878}", "{'[0, 0, 6, 2, 6, 0, 1, 1, 2, 16, 20, 0, 2, 0, 0, 1, 1, 0]' : 0.218482}", "{'[0, 0, 6, 2, 6, 0, 1, 1, 2, 16, 20, 0, 2, 0, 0, 1, 1, 0]' : 0.220368}", "{'[0, 0, 6, 2, 6, 0, 1, 1, 2, 16, 20, 0, 2, 0, 0, 1, 1, 0]' : 0.21993}", "{'[0, 0, 6, 2, 6, 0, 1, 1, 2, 16, 20, 0, 2, 0, 0, 1, 1, 0]' : 0.221006}", "{'[0, 0, 6, 2, 6, 0, 1, 1, 2, 16, 20, 0, 2, 0, 0, 1, 1, 0]' : 0.218936}", "{'[0, 0, 6, 2, 6, 0, 1, 1, 2, 16, 20, 0, 2, 0, 0, 1, 1, 0]' : 0.21945}", "{'[0, 0, 6, 2, 6, 0, 1, 1, 2, 16, 20, 0, 2, 0, 0, 1, 1, 0]' : 0.219183}", "{'[0, 0, 6, 2, 6, 0, 1, 1, 2, 16, 20, 0, 2, 0, 0, 1, 1, 0]' : 0.21908}", "{'[0, 0, 6, 2, 6, 0, 1, 1, 2, 16, 20, 0, 2, 0, 0, 1, 1, 0]' : 0.220799}", "{'[0, 0, 6, 2, 6, 0, 1, 1, 2, 16, 20, 0, 2, 0, 0, 1, 1, 0]' : 0.220212}", "{'[0, 0, 6, 2, 6, 0, 1, 1, 2, 16, 20, 0, 2, 0, 0, 1, 1, 0]' : 0.221319}", "{'[0, 0, 6, 2, 6, 0, 1, 1, 2, 16, 20, 0, 2, 0, 0, 1, 1, 0]' : 0.220256}", "{'[0, 0, 6, 2, 6, 0, 1, 1, 2, 16, 20, 0, 2, 0, 0, 1, 1, 0]' : 0.217893}", "{'[0, 0, 6, 2, 6, 0, 1, 1, 2, 16, 20, 0, 2, 0, 0, 1, 1, 0]' : 0.223232}", "{'[0, 0, 6, 2, 6, 0, 1, 1, 2, 16, 20, 0, 2, 0, 0, 1, 1, 0]' : 0.219254}", "{'[0, 0, 6, 2, 6, 0, 1, 1, 2, 16, 20, 0, 2, 0, 0, 1, 1, 0]' : 0.220823}", "{'[0, 0, 6, 2, 6, 0, 1, 1, 2, 16, 20, 0, 2, 0, 0, 1, 1, 0]' : 0.219478}", "{'[0, 0, 6, 2, 6, 0, 1, 1, 2, 16, 20, 0, 2, 0, 0, 1, 1, 0]' : 0.221349}", "{'[0, 0, 6, 2, 6, 0, 1, 1, 2, 16, 20, 0, 2, 0, 0, 1, 1, 0]' : 0.219911}"]
returning from 'run': {'[0, 0, 6, 2, 6, 0, 1, 1, 2, 16, 20, 0, 2, 0, 0, 1, 1, 0]': ([0.218185, 0.22027, 0.217255, 0.220038, 0.217256, 0.219083, 0.220666, 0.219632, 0.218622, 0.219331, 0.221878, 0.218482, 0.220368, 0.21993, 0.221006, 0.218936, 0.21945, 0.219183, 0.21908, 0.220799, 0.220212, 0.221319, 0.220256, 0.217893, 0.223232, 0.219254, 0.220823, 0.219478, 0.221349, 0.219911], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 6, 2, 6, 0, 1, 1, 2, 16, 20, 0, 2, 0, 0, 1, 1, 0]': ([0.218185, 0.22027, 0.217255, 0.220038, 0.217256, 0.219083, 0.220666, 0.219632, 0.218622, 0.219331, 0.221878, 0.218482, 0.220368, 0.21993, 0.221006, 0.218936, 0.21945, 0.219183, 0.21908, 0.220799, 0.220212, 0.221319, 0.220256, 0.217893, 0.223232, 0.219254, 0.220823, 0.219478, 0.221349, 0.219911], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	98
        Max loop nest depth: 	4
        Additions: 		2252
        Multiplications: 	896
        Divisions: 		0
        Logical: 		0
        Reads: 			4664
        Writes: 		883
        Comparisons:		98
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest33.exe __orio_perftest33.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest33.exe  
Program Test Output: 
{'[0, 2, 2, 0, 0, 6, 1, 1, 26, 26, 12, 0, 0, 1, 1, 1, 1, 0]' : 0.266736}
{'[0, 2, 2, 0, 0, 6, 1, 1, 26, 26, 12, 0, 0, 1, 1, 1, 1, 0]' : 0.267137}
{'[0, 2, 2, 0, 0, 6, 1, 1, 26, 26, 12, 0, 0, 1, 1, 1, 1, 0]' : 0.266734}
{'[0, 2, 2, 0, 0, 6, 1, 1, 26, 26, 12, 0, 0, 1, 1, 1, 1, 0]' : 0.26706}
{'[0, 2, 2, 0, 0, 6, 1, 1, 26, 26, 12, 0, 0, 1, 1, 1, 1, 0]' : 0.266462}
{'[0, 2, 2, 0, 0, 6, 1, 1, 26, 26, 12, 0, 0, 1, 1, 1, 1, 0]' : 0.267149}
{'[0, 2, 2, 0, 0, 6, 1, 1, 26, 26, 12, 0, 0, 1, 1, 1, 1, 0]' : 0.266645}
{'[0, 2, 2, 0, 0, 6, 1, 1, 26, 26, 12, 0, 0, 1, 1, 1, 1, 0]' : 0.267687}
{'[0, 2, 2, 0, 0, 6, 1, 1, 26, 26, 12, 0, 0, 1, 1, 1, 1, 0]' : 0.266504}
{'[0, 2, 2, 0, 0, 6, 1, 1, 26, 26, 12, 0, 0, 1, 1, 1, 1, 0]' : 0.266636}
{'[0, 2, 2, 0, 0, 6, 1, 1, 26, 26, 12, 0, 0, 1, 1, 1, 1, 0]' : 0.266855}
{'[0, 2, 2, 0, 0, 6, 1, 1, 26, 26, 12, 0, 0, 1, 1, 1, 1, 0]' : 0.266864}
{'[0, 2, 2, 0, 0, 6, 1, 1, 26, 26, 12, 0, 0, 1, 1, 1, 1, 0]' : 0.266864}
{'[0, 2, 2, 0, 0, 6, 1, 1, 26, 26, 12, 0, 0, 1, 1, 1, 1, 0]' : 0.266923}
{'[0, 2, 2, 0, 0, 6, 1, 1, 26, 26, 12, 0, 0, 1, 1, 1, 1, 0]' : 0.267262}
{'[0, 2, 2, 0, 0, 6, 1, 1, 26, 26, 12, 0, 0, 1, 1, 1, 1, 0]' : 0.266866}
{'[0, 2, 2, 0, 0, 6, 1, 1, 26, 26, 12, 0, 0, 1, 1, 1, 1, 0]' : 0.267033}
{'[0, 2, 2, 0, 0, 6, 1, 1, 26, 26, 12, 0, 0, 1, 1, 1, 1, 0]' : 0.266838}
{'[0, 2, 2, 0, 0, 6, 1, 1, 26, 26, 12, 0, 0, 1, 1, 1, 1, 0]' : 0.266888}
{'[0, 2, 2, 0, 0, 6, 1, 1, 26, 26, 12, 0, 0, 1, 1, 1, 1, 0]' : 0.267227}
{'[0, 2, 2, 0, 0, 6, 1, 1, 26, 26, 12, 0, 0, 1, 1, 1, 1, 0]' : 0.267036}
{'[0, 2, 2, 0, 0, 6, 1, 1, 26, 26, 12, 0, 0, 1, 1, 1, 1, 0]' : 0.266877}
{'[0, 2, 2, 0, 0, 6, 1, 1, 26, 26, 12, 0, 0, 1, 1, 1, 1, 0]' : 0.267151}
{'[0, 2, 2, 0, 0, 6, 1, 1, 26, 26, 12, 0, 0, 1, 1, 1, 1, 0]' : 0.266673}
{'[0, 2, 2, 0, 0, 6, 1, 1, 26, 26, 12, 0, 0, 1, 1, 1, 1, 0]' : 0.267004}
{'[0, 2, 2, 0, 0, 6, 1, 1, 26, 26, 12, 0, 0, 1, 1, 1, 1, 0]' : 0.266723}
{'[0, 2, 2, 0, 0, 6, 1, 1, 26, 26, 12, 0, 0, 1, 1, 1, 1, 0]' : 0.266631}
{'[0, 2, 2, 0, 0, 6, 1, 1, 26, 26, 12, 0, 0, 1, 1, 1, 1, 0]' : 0.266868}
{'[0, 2, 2, 0, 0, 6, 1, 1, 26, 26, 12, 0, 0, 1, 1, 1, 1, 0]' : 0.267188}
{'[0, 2, 2, 0, 0, 6, 1, 1, 26, 26, 12, 0, 0, 1, 1, 1, 1, 0]' : 0.266986}

out:
 ["{'[0, 2, 2, 0, 0, 6, 1, 1, 26, 26, 12, 0, 0, 1, 1, 1, 1, 0]' : 0.266736}", "{'[0, 2, 2, 0, 0, 6, 1, 1, 26, 26, 12, 0, 0, 1, 1, 1, 1, 0]' : 0.267137}", "{'[0, 2, 2, 0, 0, 6, 1, 1, 26, 26, 12, 0, 0, 1, 1, 1, 1, 0]' : 0.266734}", "{'[0, 2, 2, 0, 0, 6, 1, 1, 26, 26, 12, 0, 0, 1, 1, 1, 1, 0]' : 0.26706}", "{'[0, 2, 2, 0, 0, 6, 1, 1, 26, 26, 12, 0, 0, 1, 1, 1, 1, 0]' : 0.266462}", "{'[0, 2, 2, 0, 0, 6, 1, 1, 26, 26, 12, 0, 0, 1, 1, 1, 1, 0]' : 0.267149}", "{'[0, 2, 2, 0, 0, 6, 1, 1, 26, 26, 12, 0, 0, 1, 1, 1, 1, 0]' : 0.266645}", "{'[0, 2, 2, 0, 0, 6, 1, 1, 26, 26, 12, 0, 0, 1, 1, 1, 1, 0]' : 0.267687}", "{'[0, 2, 2, 0, 0, 6, 1, 1, 26, 26, 12, 0, 0, 1, 1, 1, 1, 0]' : 0.266504}", "{'[0, 2, 2, 0, 0, 6, 1, 1, 26, 26, 12, 0, 0, 1, 1, 1, 1, 0]' : 0.266636}", "{'[0, 2, 2, 0, 0, 6, 1, 1, 26, 26, 12, 0, 0, 1, 1, 1, 1, 0]' : 0.266855}", "{'[0, 2, 2, 0, 0, 6, 1, 1, 26, 26, 12, 0, 0, 1, 1, 1, 1, 0]' : 0.266864}", "{'[0, 2, 2, 0, 0, 6, 1, 1, 26, 26, 12, 0, 0, 1, 1, 1, 1, 0]' : 0.266864}", "{'[0, 2, 2, 0, 0, 6, 1, 1, 26, 26, 12, 0, 0, 1, 1, 1, 1, 0]' : 0.266923}", "{'[0, 2, 2, 0, 0, 6, 1, 1, 26, 26, 12, 0, 0, 1, 1, 1, 1, 0]' : 0.267262}", "{'[0, 2, 2, 0, 0, 6, 1, 1, 26, 26, 12, 0, 0, 1, 1, 1, 1, 0]' : 0.266866}", "{'[0, 2, 2, 0, 0, 6, 1, 1, 26, 26, 12, 0, 0, 1, 1, 1, 1, 0]' : 0.267033}", "{'[0, 2, 2, 0, 0, 6, 1, 1, 26, 26, 12, 0, 0, 1, 1, 1, 1, 0]' : 0.266838}", "{'[0, 2, 2, 0, 0, 6, 1, 1, 26, 26, 12, 0, 0, 1, 1, 1, 1, 0]' : 0.266888}", "{'[0, 2, 2, 0, 0, 6, 1, 1, 26, 26, 12, 0, 0, 1, 1, 1, 1, 0]' : 0.267227}", "{'[0, 2, 2, 0, 0, 6, 1, 1, 26, 26, 12, 0, 0, 1, 1, 1, 1, 0]' : 0.267036}", "{'[0, 2, 2, 0, 0, 6, 1, 1, 26, 26, 12, 0, 0, 1, 1, 1, 1, 0]' : 0.266877}", "{'[0, 2, 2, 0, 0, 6, 1, 1, 26, 26, 12, 0, 0, 1, 1, 1, 1, 0]' : 0.267151}", "{'[0, 2, 2, 0, 0, 6, 1, 1, 26, 26, 12, 0, 0, 1, 1, 1, 1, 0]' : 0.266673}", "{'[0, 2, 2, 0, 0, 6, 1, 1, 26, 26, 12, 0, 0, 1, 1, 1, 1, 0]' : 0.267004}", "{'[0, 2, 2, 0, 0, 6, 1, 1, 26, 26, 12, 0, 0, 1, 1, 1, 1, 0]' : 0.266723}", "{'[0, 2, 2, 0, 0, 6, 1, 1, 26, 26, 12, 0, 0, 1, 1, 1, 1, 0]' : 0.266631}", "{'[0, 2, 2, 0, 0, 6, 1, 1, 26, 26, 12, 0, 0, 1, 1, 1, 1, 0]' : 0.266868}", "{'[0, 2, 2, 0, 0, 6, 1, 1, 26, 26, 12, 0, 0, 1, 1, 1, 1, 0]' : 0.267188}", "{'[0, 2, 2, 0, 0, 6, 1, 1, 26, 26, 12, 0, 0, 1, 1, 1, 1, 0]' : 0.266986}"]
returning from 'run': {'[0, 2, 2, 0, 0, 6, 1, 1, 26, 26, 12, 0, 0, 1, 1, 1, 1, 0]': ([0.266736, 0.267137, 0.266734, 0.26706, 0.266462, 0.267149, 0.266645, 0.267687, 0.266504, 0.266636, 0.266855, 0.266864, 0.266864, 0.266923, 0.267262, 0.266866, 0.267033, 0.266838, 0.266888, 0.267227, 0.267036, 0.266877, 0.267151, 0.266673, 0.267004, 0.266723, 0.266631, 0.266868, 0.267188, 0.266986], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 2, 0, 0, 6, 1, 1, 26, 26, 12, 0, 0, 1, 1, 1, 1, 0]': ([0.266736, 0.267137, 0.266734, 0.26706, 0.266462, 0.267149, 0.266645, 0.267687, 0.266504, 0.266636, 0.266855, 0.266864, 0.266864, 0.266923, 0.267262, 0.266866, 0.267033, 0.266838, 0.266888, 0.267227, 0.267036, 0.266877, 0.267151, 0.266673, 0.267004, 0.266723, 0.266631, 0.266868, 0.267188, 0.266986], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	31
        Max loop nest depth: 	6
        Additions: 		1854
        Multiplications: 	840
        Divisions: 		0
        Logical: 		0
        Reads: 			3591
        Writes: 		611
        Comparisons:		31
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest34.exe __orio_perftest34.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest34.exe  
Program Test Output: 
{'[6, 0, 5, 6, 5, 6, 1, 0, 29, 1, 9, 0, 2, 0, 0, 1, 1, 0]' : 0.188809}
{'[6, 0, 5, 6, 5, 6, 1, 0, 29, 1, 9, 0, 2, 0, 0, 1, 1, 0]' : 0.18944}
{'[6, 0, 5, 6, 5, 6, 1, 0, 29, 1, 9, 0, 2, 0, 0, 1, 1, 0]' : 0.189372}
{'[6, 0, 5, 6, 5, 6, 1, 0, 29, 1, 9, 0, 2, 0, 0, 1, 1, 0]' : 0.189597}
{'[6, 0, 5, 6, 5, 6, 1, 0, 29, 1, 9, 0, 2, 0, 0, 1, 1, 0]' : 0.189507}
{'[6, 0, 5, 6, 5, 6, 1, 0, 29, 1, 9, 0, 2, 0, 0, 1, 1, 0]' : 0.188994}
{'[6, 0, 5, 6, 5, 6, 1, 0, 29, 1, 9, 0, 2, 0, 0, 1, 1, 0]' : 0.18917}
{'[6, 0, 5, 6, 5, 6, 1, 0, 29, 1, 9, 0, 2, 0, 0, 1, 1, 0]' : 0.188954}
{'[6, 0, 5, 6, 5, 6, 1, 0, 29, 1, 9, 0, 2, 0, 0, 1, 1, 0]' : 0.189079}
{'[6, 0, 5, 6, 5, 6, 1, 0, 29, 1, 9, 0, 2, 0, 0, 1, 1, 0]' : 0.188956}
{'[6, 0, 5, 6, 5, 6, 1, 0, 29, 1, 9, 0, 2, 0, 0, 1, 1, 0]' : 0.189489}
{'[6, 0, 5, 6, 5, 6, 1, 0, 29, 1, 9, 0, 2, 0, 0, 1, 1, 0]' : 0.189769}
{'[6, 0, 5, 6, 5, 6, 1, 0, 29, 1, 9, 0, 2, 0, 0, 1, 1, 0]' : 0.189399}
{'[6, 0, 5, 6, 5, 6, 1, 0, 29, 1, 9, 0, 2, 0, 0, 1, 1, 0]' : 0.190672}
{'[6, 0, 5, 6, 5, 6, 1, 0, 29, 1, 9, 0, 2, 0, 0, 1, 1, 0]' : 0.18989}
{'[6, 0, 5, 6, 5, 6, 1, 0, 29, 1, 9, 0, 2, 0, 0, 1, 1, 0]' : 0.189537}
{'[6, 0, 5, 6, 5, 6, 1, 0, 29, 1, 9, 0, 2, 0, 0, 1, 1, 0]' : 0.18982}
{'[6, 0, 5, 6, 5, 6, 1, 0, 29, 1, 9, 0, 2, 0, 0, 1, 1, 0]' : 0.189502}
{'[6, 0, 5, 6, 5, 6, 1, 0, 29, 1, 9, 0, 2, 0, 0, 1, 1, 0]' : 0.189451}
{'[6, 0, 5, 6, 5, 6, 1, 0, 29, 1, 9, 0, 2, 0, 0, 1, 1, 0]' : 0.189971}
{'[6, 0, 5, 6, 5, 6, 1, 0, 29, 1, 9, 0, 2, 0, 0, 1, 1, 0]' : 0.189401}
{'[6, 0, 5, 6, 5, 6, 1, 0, 29, 1, 9, 0, 2, 0, 0, 1, 1, 0]' : 0.189511}
{'[6, 0, 5, 6, 5, 6, 1, 0, 29, 1, 9, 0, 2, 0, 0, 1, 1, 0]' : 0.189592}
{'[6, 0, 5, 6, 5, 6, 1, 0, 29, 1, 9, 0, 2, 0, 0, 1, 1, 0]' : 0.189329}
{'[6, 0, 5, 6, 5, 6, 1, 0, 29, 1, 9, 0, 2, 0, 0, 1, 1, 0]' : 0.188458}
{'[6, 0, 5, 6, 5, 6, 1, 0, 29, 1, 9, 0, 2, 0, 0, 1, 1, 0]' : 0.18808}
{'[6, 0, 5, 6, 5, 6, 1, 0, 29, 1, 9, 0, 2, 0, 0, 1, 1, 0]' : 0.187676}
{'[6, 0, 5, 6, 5, 6, 1, 0, 29, 1, 9, 0, 2, 0, 0, 1, 1, 0]' : 0.18741}
{'[6, 0, 5, 6, 5, 6, 1, 0, 29, 1, 9, 0, 2, 0, 0, 1, 1, 0]' : 0.188732}
{'[6, 0, 5, 6, 5, 6, 1, 0, 29, 1, 9, 0, 2, 0, 0, 1, 1, 0]' : 0.188021}

out:
 ["{'[6, 0, 5, 6, 5, 6, 1, 0, 29, 1, 9, 0, 2, 0, 0, 1, 1, 0]' : 0.188809}", "{'[6, 0, 5, 6, 5, 6, 1, 0, 29, 1, 9, 0, 2, 0, 0, 1, 1, 0]' : 0.18944}", "{'[6, 0, 5, 6, 5, 6, 1, 0, 29, 1, 9, 0, 2, 0, 0, 1, 1, 0]' : 0.189372}", "{'[6, 0, 5, 6, 5, 6, 1, 0, 29, 1, 9, 0, 2, 0, 0, 1, 1, 0]' : 0.189597}", "{'[6, 0, 5, 6, 5, 6, 1, 0, 29, 1, 9, 0, 2, 0, 0, 1, 1, 0]' : 0.189507}", "{'[6, 0, 5, 6, 5, 6, 1, 0, 29, 1, 9, 0, 2, 0, 0, 1, 1, 0]' : 0.188994}", "{'[6, 0, 5, 6, 5, 6, 1, 0, 29, 1, 9, 0, 2, 0, 0, 1, 1, 0]' : 0.18917}", "{'[6, 0, 5, 6, 5, 6, 1, 0, 29, 1, 9, 0, 2, 0, 0, 1, 1, 0]' : 0.188954}", "{'[6, 0, 5, 6, 5, 6, 1, 0, 29, 1, 9, 0, 2, 0, 0, 1, 1, 0]' : 0.189079}", "{'[6, 0, 5, 6, 5, 6, 1, 0, 29, 1, 9, 0, 2, 0, 0, 1, 1, 0]' : 0.188956}", "{'[6, 0, 5, 6, 5, 6, 1, 0, 29, 1, 9, 0, 2, 0, 0, 1, 1, 0]' : 0.189489}", "{'[6, 0, 5, 6, 5, 6, 1, 0, 29, 1, 9, 0, 2, 0, 0, 1, 1, 0]' : 0.189769}", "{'[6, 0, 5, 6, 5, 6, 1, 0, 29, 1, 9, 0, 2, 0, 0, 1, 1, 0]' : 0.189399}", "{'[6, 0, 5, 6, 5, 6, 1, 0, 29, 1, 9, 0, 2, 0, 0, 1, 1, 0]' : 0.190672}", "{'[6, 0, 5, 6, 5, 6, 1, 0, 29, 1, 9, 0, 2, 0, 0, 1, 1, 0]' : 0.18989}", "{'[6, 0, 5, 6, 5, 6, 1, 0, 29, 1, 9, 0, 2, 0, 0, 1, 1, 0]' : 0.189537}", "{'[6, 0, 5, 6, 5, 6, 1, 0, 29, 1, 9, 0, 2, 0, 0, 1, 1, 0]' : 0.18982}", "{'[6, 0, 5, 6, 5, 6, 1, 0, 29, 1, 9, 0, 2, 0, 0, 1, 1, 0]' : 0.189502}", "{'[6, 0, 5, 6, 5, 6, 1, 0, 29, 1, 9, 0, 2, 0, 0, 1, 1, 0]' : 0.189451}", "{'[6, 0, 5, 6, 5, 6, 1, 0, 29, 1, 9, 0, 2, 0, 0, 1, 1, 0]' : 0.189971}", "{'[6, 0, 5, 6, 5, 6, 1, 0, 29, 1, 9, 0, 2, 0, 0, 1, 1, 0]' : 0.189401}", "{'[6, 0, 5, 6, 5, 6, 1, 0, 29, 1, 9, 0, 2, 0, 0, 1, 1, 0]' : 0.189511}", "{'[6, 0, 5, 6, 5, 6, 1, 0, 29, 1, 9, 0, 2, 0, 0, 1, 1, 0]' : 0.189592}", "{'[6, 0, 5, 6, 5, 6, 1, 0, 29, 1, 9, 0, 2, 0, 0, 1, 1, 0]' : 0.189329}", "{'[6, 0, 5, 6, 5, 6, 1, 0, 29, 1, 9, 0, 2, 0, 0, 1, 1, 0]' : 0.188458}", "{'[6, 0, 5, 6, 5, 6, 1, 0, 29, 1, 9, 0, 2, 0, 0, 1, 1, 0]' : 0.18808}", "{'[6, 0, 5, 6, 5, 6, 1, 0, 29, 1, 9, 0, 2, 0, 0, 1, 1, 0]' : 0.187676}", "{'[6, 0, 5, 6, 5, 6, 1, 0, 29, 1, 9, 0, 2, 0, 0, 1, 1, 0]' : 0.18741}", "{'[6, 0, 5, 6, 5, 6, 1, 0, 29, 1, 9, 0, 2, 0, 0, 1, 1, 0]' : 0.188732}", "{'[6, 0, 5, 6, 5, 6, 1, 0, 29, 1, 9, 0, 2, 0, 0, 1, 1, 0]' : 0.188021}"]
returning from 'run': {'[6, 0, 5, 6, 5, 6, 1, 0, 29, 1, 9, 0, 2, 0, 0, 1, 1, 0]': ([0.188809, 0.18944, 0.189372, 0.189597, 0.189507, 0.188994, 0.18917, 0.188954, 0.189079, 0.188956, 0.189489, 0.189769, 0.189399, 0.190672, 0.18989, 0.189537, 0.18982, 0.189502, 0.189451, 0.189971, 0.189401, 0.189511, 0.189592, 0.189329, 0.188458, 0.18808, 0.187676, 0.18741, 0.188732, 0.188021], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 5, 6, 5, 6, 1, 0, 29, 1, 9, 0, 2, 0, 0, 1, 1, 0]': ([0.188809, 0.18944, 0.189372, 0.189597, 0.189507, 0.188994, 0.18917, 0.188954, 0.189079, 0.188956, 0.189489, 0.189769, 0.189399, 0.190672, 0.18989, 0.189537, 0.18982, 0.189502, 0.189451, 0.189971, 0.189401, 0.189511, 0.189592, 0.189329, 0.188458, 0.18808, 0.187676, 0.18741, 0.188732, 0.188021], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	4
        Additions: 		2316
        Multiplications: 	648
        Divisions: 		0
        Logical: 		0
        Reads: 			3620
        Writes: 		366
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest35.exe __orio_perftest35.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest35.exe  
Program Test Output: 
{'[3, 3, 0, 1, 0, 0, 1, 1, 0, 0, 26, 4, 1, 0, 1, 0, 1, 1]' : 0.144979}
{'[3, 3, 0, 1, 0, 0, 1, 1, 0, 0, 26, 4, 1, 0, 1, 0, 1, 1]' : 0.144963}
{'[3, 3, 0, 1, 0, 0, 1, 1, 0, 0, 26, 4, 1, 0, 1, 0, 1, 1]' : 0.144901}
{'[3, 3, 0, 1, 0, 0, 1, 1, 0, 0, 26, 4, 1, 0, 1, 0, 1, 1]' : 0.140037}
{'[3, 3, 0, 1, 0, 0, 1, 1, 0, 0, 26, 4, 1, 0, 1, 0, 1, 1]' : 0.122462}
{'[3, 3, 0, 1, 0, 0, 1, 1, 0, 0, 26, 4, 1, 0, 1, 0, 1, 1]' : 0.122165}
{'[3, 3, 0, 1, 0, 0, 1, 1, 0, 0, 26, 4, 1, 0, 1, 0, 1, 1]' : 0.122003}
{'[3, 3, 0, 1, 0, 0, 1, 1, 0, 0, 26, 4, 1, 0, 1, 0, 1, 1]' : 0.122297}
{'[3, 3, 0, 1, 0, 0, 1, 1, 0, 0, 26, 4, 1, 0, 1, 0, 1, 1]' : 0.122516}
{'[3, 3, 0, 1, 0, 0, 1, 1, 0, 0, 26, 4, 1, 0, 1, 0, 1, 1]' : 0.122233}
{'[3, 3, 0, 1, 0, 0, 1, 1, 0, 0, 26, 4, 1, 0, 1, 0, 1, 1]' : 0.122086}
{'[3, 3, 0, 1, 0, 0, 1, 1, 0, 0, 26, 4, 1, 0, 1, 0, 1, 1]' : 0.122071}
{'[3, 3, 0, 1, 0, 0, 1, 1, 0, 0, 26, 4, 1, 0, 1, 0, 1, 1]' : 0.122188}
{'[3, 3, 0, 1, 0, 0, 1, 1, 0, 0, 26, 4, 1, 0, 1, 0, 1, 1]' : 0.122091}
{'[3, 3, 0, 1, 0, 0, 1, 1, 0, 0, 26, 4, 1, 0, 1, 0, 1, 1]' : 0.122043}
{'[3, 3, 0, 1, 0, 0, 1, 1, 0, 0, 26, 4, 1, 0, 1, 0, 1, 1]' : 0.122133}
{'[3, 3, 0, 1, 0, 0, 1, 1, 0, 0, 26, 4, 1, 0, 1, 0, 1, 1]' : 0.122727}
{'[3, 3, 0, 1, 0, 0, 1, 1, 0, 0, 26, 4, 1, 0, 1, 0, 1, 1]' : 0.122312}
{'[3, 3, 0, 1, 0, 0, 1, 1, 0, 0, 26, 4, 1, 0, 1, 0, 1, 1]' : 0.122156}
{'[3, 3, 0, 1, 0, 0, 1, 1, 0, 0, 26, 4, 1, 0, 1, 0, 1, 1]' : 0.12236}
{'[3, 3, 0, 1, 0, 0, 1, 1, 0, 0, 26, 4, 1, 0, 1, 0, 1, 1]' : 0.122088}
{'[3, 3, 0, 1, 0, 0, 1, 1, 0, 0, 26, 4, 1, 0, 1, 0, 1, 1]' : 0.122032}
{'[3, 3, 0, 1, 0, 0, 1, 1, 0, 0, 26, 4, 1, 0, 1, 0, 1, 1]' : 0.121968}
{'[3, 3, 0, 1, 0, 0, 1, 1, 0, 0, 26, 4, 1, 0, 1, 0, 1, 1]' : 0.122153}
{'[3, 3, 0, 1, 0, 0, 1, 1, 0, 0, 26, 4, 1, 0, 1, 0, 1, 1]' : 0.122393}
{'[3, 3, 0, 1, 0, 0, 1, 1, 0, 0, 26, 4, 1, 0, 1, 0, 1, 1]' : 0.122536}
{'[3, 3, 0, 1, 0, 0, 1, 1, 0, 0, 26, 4, 1, 0, 1, 0, 1, 1]' : 0.122504}
{'[3, 3, 0, 1, 0, 0, 1, 1, 0, 0, 26, 4, 1, 0, 1, 0, 1, 1]' : 0.122109}
{'[3, 3, 0, 1, 0, 0, 1, 1, 0, 0, 26, 4, 1, 0, 1, 0, 1, 1]' : 0.122178}
{'[3, 3, 0, 1, 0, 0, 1, 1, 0, 0, 26, 4, 1, 0, 1, 0, 1, 1]' : 0.122064}

out:
 ["{'[3, 3, 0, 1, 0, 0, 1, 1, 0, 0, 26, 4, 1, 0, 1, 0, 1, 1]' : 0.144979}", "{'[3, 3, 0, 1, 0, 0, 1, 1, 0, 0, 26, 4, 1, 0, 1, 0, 1, 1]' : 0.144963}", "{'[3, 3, 0, 1, 0, 0, 1, 1, 0, 0, 26, 4, 1, 0, 1, 0, 1, 1]' : 0.144901}", "{'[3, 3, 0, 1, 0, 0, 1, 1, 0, 0, 26, 4, 1, 0, 1, 0, 1, 1]' : 0.140037}", "{'[3, 3, 0, 1, 0, 0, 1, 1, 0, 0, 26, 4, 1, 0, 1, 0, 1, 1]' : 0.122462}", "{'[3, 3, 0, 1, 0, 0, 1, 1, 0, 0, 26, 4, 1, 0, 1, 0, 1, 1]' : 0.122165}", "{'[3, 3, 0, 1, 0, 0, 1, 1, 0, 0, 26, 4, 1, 0, 1, 0, 1, 1]' : 0.122003}", "{'[3, 3, 0, 1, 0, 0, 1, 1, 0, 0, 26, 4, 1, 0, 1, 0, 1, 1]' : 0.122297}", "{'[3, 3, 0, 1, 0, 0, 1, 1, 0, 0, 26, 4, 1, 0, 1, 0, 1, 1]' : 0.122516}", "{'[3, 3, 0, 1, 0, 0, 1, 1, 0, 0, 26, 4, 1, 0, 1, 0, 1, 1]' : 0.122233}", "{'[3, 3, 0, 1, 0, 0, 1, 1, 0, 0, 26, 4, 1, 0, 1, 0, 1, 1]' : 0.122086}", "{'[3, 3, 0, 1, 0, 0, 1, 1, 0, 0, 26, 4, 1, 0, 1, 0, 1, 1]' : 0.122071}", "{'[3, 3, 0, 1, 0, 0, 1, 1, 0, 0, 26, 4, 1, 0, 1, 0, 1, 1]' : 0.122188}", "{'[3, 3, 0, 1, 0, 0, 1, 1, 0, 0, 26, 4, 1, 0, 1, 0, 1, 1]' : 0.122091}", "{'[3, 3, 0, 1, 0, 0, 1, 1, 0, 0, 26, 4, 1, 0, 1, 0, 1, 1]' : 0.122043}", "{'[3, 3, 0, 1, 0, 0, 1, 1, 0, 0, 26, 4, 1, 0, 1, 0, 1, 1]' : 0.122133}", "{'[3, 3, 0, 1, 0, 0, 1, 1, 0, 0, 26, 4, 1, 0, 1, 0, 1, 1]' : 0.122727}", "{'[3, 3, 0, 1, 0, 0, 1, 1, 0, 0, 26, 4, 1, 0, 1, 0, 1, 1]' : 0.122312}", "{'[3, 3, 0, 1, 0, 0, 1, 1, 0, 0, 26, 4, 1, 0, 1, 0, 1, 1]' : 0.122156}", "{'[3, 3, 0, 1, 0, 0, 1, 1, 0, 0, 26, 4, 1, 0, 1, 0, 1, 1]' : 0.12236}", "{'[3, 3, 0, 1, 0, 0, 1, 1, 0, 0, 26, 4, 1, 0, 1, 0, 1, 1]' : 0.122088}", "{'[3, 3, 0, 1, 0, 0, 1, 1, 0, 0, 26, 4, 1, 0, 1, 0, 1, 1]' : 0.122032}", "{'[3, 3, 0, 1, 0, 0, 1, 1, 0, 0, 26, 4, 1, 0, 1, 0, 1, 1]' : 0.121968}", "{'[3, 3, 0, 1, 0, 0, 1, 1, 0, 0, 26, 4, 1, 0, 1, 0, 1, 1]' : 0.122153}", "{'[3, 3, 0, 1, 0, 0, 1, 1, 0, 0, 26, 4, 1, 0, 1, 0, 1, 1]' : 0.122393}", "{'[3, 3, 0, 1, 0, 0, 1, 1, 0, 0, 26, 4, 1, 0, 1, 0, 1, 1]' : 0.122536}", "{'[3, 3, 0, 1, 0, 0, 1, 1, 0, 0, 26, 4, 1, 0, 1, 0, 1, 1]' : 0.122504}", "{'[3, 3, 0, 1, 0, 0, 1, 1, 0, 0, 26, 4, 1, 0, 1, 0, 1, 1]' : 0.122109}", "{'[3, 3, 0, 1, 0, 0, 1, 1, 0, 0, 26, 4, 1, 0, 1, 0, 1, 1]' : 0.122178}", "{'[3, 3, 0, 1, 0, 0, 1, 1, 0, 0, 26, 4, 1, 0, 1, 0, 1, 1]' : 0.122064}"]
returning from 'run': {'[3, 3, 0, 1, 0, 0, 1, 1, 0, 0, 26, 4, 1, 0, 1, 0, 1, 1]': ([0.144979, 0.144963, 0.144901, 0.140037, 0.122462, 0.122165, 0.122003, 0.122297, 0.122516, 0.122233, 0.122086, 0.122071, 0.122188, 0.122091, 0.122043, 0.122133, 0.122727, 0.122312, 0.122156, 0.12236, 0.122088, 0.122032, 0.121968, 0.122153, 0.122393, 0.122536, 0.122504, 0.122109, 0.122178, 0.122064], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 3, 0, 1, 0, 0, 1, 1, 0, 0, 26, 4, 1, 0, 1, 0, 1, 1]': ([0.144979, 0.144963, 0.144901, 0.140037, 0.122462, 0.122165, 0.122003, 0.122297, 0.122516, 0.122233, 0.122086, 0.122071, 0.122188, 0.122091, 0.122043, 0.122133, 0.122727, 0.122312, 0.122156, 0.12236, 0.122088, 0.122032, 0.121968, 0.122153, 0.122393, 0.122536, 0.122504, 0.122109, 0.122178, 0.122064], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	4
        Additions: 		507
        Multiplications: 	130
        Divisions: 		0
        Logical: 		0
        Reads: 			939
        Writes: 		152
        Comparisons:		20
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest36.exe __orio_perftest36.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest36.exe  
Program Test Output: 
{'[0, 6, 0, 2, 0, 6, 1, 0, 24, 3, 0, 3, 0, 1, 0, 0, 1, 1]' : 0.159433}
{'[0, 6, 0, 2, 0, 6, 1, 0, 24, 3, 0, 3, 0, 1, 0, 0, 1, 1]' : 0.159476}
{'[0, 6, 0, 2, 0, 6, 1, 0, 24, 3, 0, 3, 0, 1, 0, 0, 1, 1]' : 0.15937}
{'[0, 6, 0, 2, 0, 6, 1, 0, 24, 3, 0, 3, 0, 1, 0, 0, 1, 1]' : 0.14576}
{'[0, 6, 0, 2, 0, 6, 1, 0, 24, 3, 0, 3, 0, 1, 0, 0, 1, 1]' : 0.135192}
{'[0, 6, 0, 2, 0, 6, 1, 0, 24, 3, 0, 3, 0, 1, 0, 0, 1, 1]' : 0.135235}
{'[0, 6, 0, 2, 0, 6, 1, 0, 24, 3, 0, 3, 0, 1, 0, 0, 1, 1]' : 0.135147}
{'[0, 6, 0, 2, 0, 6, 1, 0, 24, 3, 0, 3, 0, 1, 0, 0, 1, 1]' : 0.135317}
{'[0, 6, 0, 2, 0, 6, 1, 0, 24, 3, 0, 3, 0, 1, 0, 0, 1, 1]' : 0.135561}
{'[0, 6, 0, 2, 0, 6, 1, 0, 24, 3, 0, 3, 0, 1, 0, 0, 1, 1]' : 0.135553}
{'[0, 6, 0, 2, 0, 6, 1, 0, 24, 3, 0, 3, 0, 1, 0, 0, 1, 1]' : 0.135222}
{'[0, 6, 0, 2, 0, 6, 1, 0, 24, 3, 0, 3, 0, 1, 0, 0, 1, 1]' : 0.13546}
{'[0, 6, 0, 2, 0, 6, 1, 0, 24, 3, 0, 3, 0, 1, 0, 0, 1, 1]' : 0.135668}
{'[0, 6, 0, 2, 0, 6, 1, 0, 24, 3, 0, 3, 0, 1, 0, 0, 1, 1]' : 0.135291}
{'[0, 6, 0, 2, 0, 6, 1, 0, 24, 3, 0, 3, 0, 1, 0, 0, 1, 1]' : 0.135267}
{'[0, 6, 0, 2, 0, 6, 1, 0, 24, 3, 0, 3, 0, 1, 0, 0, 1, 1]' : 0.135192}
{'[0, 6, 0, 2, 0, 6, 1, 0, 24, 3, 0, 3, 0, 1, 0, 0, 1, 1]' : 0.13517}
{'[0, 6, 0, 2, 0, 6, 1, 0, 24, 3, 0, 3, 0, 1, 0, 0, 1, 1]' : 0.135636}
{'[0, 6, 0, 2, 0, 6, 1, 0, 24, 3, 0, 3, 0, 1, 0, 0, 1, 1]' : 0.135247}
{'[0, 6, 0, 2, 0, 6, 1, 0, 24, 3, 0, 3, 0, 1, 0, 0, 1, 1]' : 0.135177}
{'[0, 6, 0, 2, 0, 6, 1, 0, 24, 3, 0, 3, 0, 1, 0, 0, 1, 1]' : 0.135243}
{'[0, 6, 0, 2, 0, 6, 1, 0, 24, 3, 0, 3, 0, 1, 0, 0, 1, 1]' : 0.135147}
{'[0, 6, 0, 2, 0, 6, 1, 0, 24, 3, 0, 3, 0, 1, 0, 0, 1, 1]' : 0.135147}
{'[0, 6, 0, 2, 0, 6, 1, 0, 24, 3, 0, 3, 0, 1, 0, 0, 1, 1]' : 0.135177}
{'[0, 6, 0, 2, 0, 6, 1, 0, 24, 3, 0, 3, 0, 1, 0, 0, 1, 1]' : 0.135103}
{'[0, 6, 0, 2, 0, 6, 1, 0, 24, 3, 0, 3, 0, 1, 0, 0, 1, 1]' : 0.135575}
{'[0, 6, 0, 2, 0, 6, 1, 0, 24, 3, 0, 3, 0, 1, 0, 0, 1, 1]' : 0.135416}
{'[0, 6, 0, 2, 0, 6, 1, 0, 24, 3, 0, 3, 0, 1, 0, 0, 1, 1]' : 0.135696}
{'[0, 6, 0, 2, 0, 6, 1, 0, 24, 3, 0, 3, 0, 1, 0, 0, 1, 1]' : 0.135147}
{'[0, 6, 0, 2, 0, 6, 1, 0, 24, 3, 0, 3, 0, 1, 0, 0, 1, 1]' : 0.135445}

out:
 ["{'[0, 6, 0, 2, 0, 6, 1, 0, 24, 3, 0, 3, 0, 1, 0, 0, 1, 1]' : 0.159433}", "{'[0, 6, 0, 2, 0, 6, 1, 0, 24, 3, 0, 3, 0, 1, 0, 0, 1, 1]' : 0.159476}", "{'[0, 6, 0, 2, 0, 6, 1, 0, 24, 3, 0, 3, 0, 1, 0, 0, 1, 1]' : 0.15937}", "{'[0, 6, 0, 2, 0, 6, 1, 0, 24, 3, 0, 3, 0, 1, 0, 0, 1, 1]' : 0.14576}", "{'[0, 6, 0, 2, 0, 6, 1, 0, 24, 3, 0, 3, 0, 1, 0, 0, 1, 1]' : 0.135192}", "{'[0, 6, 0, 2, 0, 6, 1, 0, 24, 3, 0, 3, 0, 1, 0, 0, 1, 1]' : 0.135235}", "{'[0, 6, 0, 2, 0, 6, 1, 0, 24, 3, 0, 3, 0, 1, 0, 0, 1, 1]' : 0.135147}", "{'[0, 6, 0, 2, 0, 6, 1, 0, 24, 3, 0, 3, 0, 1, 0, 0, 1, 1]' : 0.135317}", "{'[0, 6, 0, 2, 0, 6, 1, 0, 24, 3, 0, 3, 0, 1, 0, 0, 1, 1]' : 0.135561}", "{'[0, 6, 0, 2, 0, 6, 1, 0, 24, 3, 0, 3, 0, 1, 0, 0, 1, 1]' : 0.135553}", "{'[0, 6, 0, 2, 0, 6, 1, 0, 24, 3, 0, 3, 0, 1, 0, 0, 1, 1]' : 0.135222}", "{'[0, 6, 0, 2, 0, 6, 1, 0, 24, 3, 0, 3, 0, 1, 0, 0, 1, 1]' : 0.13546}", "{'[0, 6, 0, 2, 0, 6, 1, 0, 24, 3, 0, 3, 0, 1, 0, 0, 1, 1]' : 0.135668}", "{'[0, 6, 0, 2, 0, 6, 1, 0, 24, 3, 0, 3, 0, 1, 0, 0, 1, 1]' : 0.135291}", "{'[0, 6, 0, 2, 0, 6, 1, 0, 24, 3, 0, 3, 0, 1, 0, 0, 1, 1]' : 0.135267}", "{'[0, 6, 0, 2, 0, 6, 1, 0, 24, 3, 0, 3, 0, 1, 0, 0, 1, 1]' : 0.135192}", "{'[0, 6, 0, 2, 0, 6, 1, 0, 24, 3, 0, 3, 0, 1, 0, 0, 1, 1]' : 0.13517}", "{'[0, 6, 0, 2, 0, 6, 1, 0, 24, 3, 0, 3, 0, 1, 0, 0, 1, 1]' : 0.135636}", "{'[0, 6, 0, 2, 0, 6, 1, 0, 24, 3, 0, 3, 0, 1, 0, 0, 1, 1]' : 0.135247}", "{'[0, 6, 0, 2, 0, 6, 1, 0, 24, 3, 0, 3, 0, 1, 0, 0, 1, 1]' : 0.135177}", "{'[0, 6, 0, 2, 0, 6, 1, 0, 24, 3, 0, 3, 0, 1, 0, 0, 1, 1]' : 0.135243}", "{'[0, 6, 0, 2, 0, 6, 1, 0, 24, 3, 0, 3, 0, 1, 0, 0, 1, 1]' : 0.135147}", "{'[0, 6, 0, 2, 0, 6, 1, 0, 24, 3, 0, 3, 0, 1, 0, 0, 1, 1]' : 0.135147}", "{'[0, 6, 0, 2, 0, 6, 1, 0, 24, 3, 0, 3, 0, 1, 0, 0, 1, 1]' : 0.135177}", "{'[0, 6, 0, 2, 0, 6, 1, 0, 24, 3, 0, 3, 0, 1, 0, 0, 1, 1]' : 0.135103}", "{'[0, 6, 0, 2, 0, 6, 1, 0, 24, 3, 0, 3, 0, 1, 0, 0, 1, 1]' : 0.135575}", "{'[0, 6, 0, 2, 0, 6, 1, 0, 24, 3, 0, 3, 0, 1, 0, 0, 1, 1]' : 0.135416}", "{'[0, 6, 0, 2, 0, 6, 1, 0, 24, 3, 0, 3, 0, 1, 0, 0, 1, 1]' : 0.135696}", "{'[0, 6, 0, 2, 0, 6, 1, 0, 24, 3, 0, 3, 0, 1, 0, 0, 1, 1]' : 0.135147}", "{'[0, 6, 0, 2, 0, 6, 1, 0, 24, 3, 0, 3, 0, 1, 0, 0, 1, 1]' : 0.135445}"]
returning from 'run': {'[0, 6, 0, 2, 0, 6, 1, 0, 24, 3, 0, 3, 0, 1, 0, 0, 1, 1]': ([0.159433, 0.159476, 0.15937, 0.14576, 0.135192, 0.135235, 0.135147, 0.135317, 0.135561, 0.135553, 0.135222, 0.13546, 0.135668, 0.135291, 0.135267, 0.135192, 0.13517, 0.135636, 0.135247, 0.135177, 0.135243, 0.135147, 0.135147, 0.135177, 0.135103, 0.135575, 0.135416, 0.135696, 0.135147, 0.135445], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 0, 2, 0, 6, 1, 0, 24, 3, 0, 3, 0, 1, 0, 0, 1, 1]': ([0.159433, 0.159476, 0.15937, 0.14576, 0.135192, 0.135235, 0.135147, 0.135317, 0.135561, 0.135553, 0.135222, 0.13546, 0.135668, 0.135291, 0.135267, 0.135192, 0.13517, 0.135636, 0.135247, 0.135177, 0.135243, 0.135147, 0.135147, 0.135177, 0.135103, 0.135575, 0.135416, 0.135696, 0.135147, 0.135445], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	100
        Max loop nest depth: 	6
        Additions: 		6526
        Multiplications: 	2632
        Divisions: 		0
        Logical: 		0
        Reads: 			13102
        Writes: 		2545
        Comparisons:		100
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest37.exe __orio_perftest37.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest37.exe  
Program Test Output: 
{'[1, 6, 4, 5, 4, 6, 1, 0, 2, 26, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.214447}
{'[1, 6, 4, 5, 4, 6, 1, 0, 2, 26, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.21433}
{'[1, 6, 4, 5, 4, 6, 1, 0, 2, 26, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.208069}
{'[1, 6, 4, 5, 4, 6, 1, 0, 2, 26, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.180005}
{'[1, 6, 4, 5, 4, 6, 1, 0, 2, 26, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.180138}
{'[1, 6, 4, 5, 4, 6, 1, 0, 2, 26, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.181036}
{'[1, 6, 4, 5, 4, 6, 1, 0, 2, 26, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.180606}
{'[1, 6, 4, 5, 4, 6, 1, 0, 2, 26, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.180551}
{'[1, 6, 4, 5, 4, 6, 1, 0, 2, 26, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.180618}
{'[1, 6, 4, 5, 4, 6, 1, 0, 2, 26, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.180647}
{'[1, 6, 4, 5, 4, 6, 1, 0, 2, 26, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.180455}
{'[1, 6, 4, 5, 4, 6, 1, 0, 2, 26, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.180978}
{'[1, 6, 4, 5, 4, 6, 1, 0, 2, 26, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.180603}
{'[1, 6, 4, 5, 4, 6, 1, 0, 2, 26, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.18059}
{'[1, 6, 4, 5, 4, 6, 1, 0, 2, 26, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.180474}
{'[1, 6, 4, 5, 4, 6, 1, 0, 2, 26, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.180748}
{'[1, 6, 4, 5, 4, 6, 1, 0, 2, 26, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.180568}
{'[1, 6, 4, 5, 4, 6, 1, 0, 2, 26, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.180936}
{'[1, 6, 4, 5, 4, 6, 1, 0, 2, 26, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.180805}
{'[1, 6, 4, 5, 4, 6, 1, 0, 2, 26, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.180548}
{'[1, 6, 4, 5, 4, 6, 1, 0, 2, 26, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.180445}
{'[1, 6, 4, 5, 4, 6, 1, 0, 2, 26, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.180575}
{'[1, 6, 4, 5, 4, 6, 1, 0, 2, 26, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.180473}
{'[1, 6, 4, 5, 4, 6, 1, 0, 2, 26, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.180878}
{'[1, 6, 4, 5, 4, 6, 1, 0, 2, 26, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.180797}
{'[1, 6, 4, 5, 4, 6, 1, 0, 2, 26, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.180857}
{'[1, 6, 4, 5, 4, 6, 1, 0, 2, 26, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.181077}
{'[1, 6, 4, 5, 4, 6, 1, 0, 2, 26, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.180595}
{'[1, 6, 4, 5, 4, 6, 1, 0, 2, 26, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.18099}
{'[1, 6, 4, 5, 4, 6, 1, 0, 2, 26, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.180772}

out:
 ["{'[1, 6, 4, 5, 4, 6, 1, 0, 2, 26, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.214447}", "{'[1, 6, 4, 5, 4, 6, 1, 0, 2, 26, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.21433}", "{'[1, 6, 4, 5, 4, 6, 1, 0, 2, 26, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.208069}", "{'[1, 6, 4, 5, 4, 6, 1, 0, 2, 26, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.180005}", "{'[1, 6, 4, 5, 4, 6, 1, 0, 2, 26, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.180138}", "{'[1, 6, 4, 5, 4, 6, 1, 0, 2, 26, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.181036}", "{'[1, 6, 4, 5, 4, 6, 1, 0, 2, 26, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.180606}", "{'[1, 6, 4, 5, 4, 6, 1, 0, 2, 26, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.180551}", "{'[1, 6, 4, 5, 4, 6, 1, 0, 2, 26, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.180618}", "{'[1, 6, 4, 5, 4, 6, 1, 0, 2, 26, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.180647}", "{'[1, 6, 4, 5, 4, 6, 1, 0, 2, 26, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.180455}", "{'[1, 6, 4, 5, 4, 6, 1, 0, 2, 26, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.180978}", "{'[1, 6, 4, 5, 4, 6, 1, 0, 2, 26, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.180603}", "{'[1, 6, 4, 5, 4, 6, 1, 0, 2, 26, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.18059}", "{'[1, 6, 4, 5, 4, 6, 1, 0, 2, 26, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.180474}", "{'[1, 6, 4, 5, 4, 6, 1, 0, 2, 26, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.180748}", "{'[1, 6, 4, 5, 4, 6, 1, 0, 2, 26, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.180568}", "{'[1, 6, 4, 5, 4, 6, 1, 0, 2, 26, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.180936}", "{'[1, 6, 4, 5, 4, 6, 1, 0, 2, 26, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.180805}", "{'[1, 6, 4, 5, 4, 6, 1, 0, 2, 26, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.180548}", "{'[1, 6, 4, 5, 4, 6, 1, 0, 2, 26, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.180445}", "{'[1, 6, 4, 5, 4, 6, 1, 0, 2, 26, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.180575}", "{'[1, 6, 4, 5, 4, 6, 1, 0, 2, 26, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.180473}", "{'[1, 6, 4, 5, 4, 6, 1, 0, 2, 26, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.180878}", "{'[1, 6, 4, 5, 4, 6, 1, 0, 2, 26, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.180797}", "{'[1, 6, 4, 5, 4, 6, 1, 0, 2, 26, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.180857}", "{'[1, 6, 4, 5, 4, 6, 1, 0, 2, 26, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.181077}", "{'[1, 6, 4, 5, 4, 6, 1, 0, 2, 26, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.180595}", "{'[1, 6, 4, 5, 4, 6, 1, 0, 2, 26, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.18099}", "{'[1, 6, 4, 5, 4, 6, 1, 0, 2, 26, 0, 12, 0, 0, 2, 1, 0, 0]' : 0.180772}"]
returning from 'run': {'[1, 6, 4, 5, 4, 6, 1, 0, 2, 26, 0, 12, 0, 0, 2, 1, 0, 0]': ([0.214447, 0.21433, 0.208069, 0.180005, 0.180138, 0.181036, 0.180606, 0.180551, 0.180618, 0.180647, 0.180455, 0.180978, 0.180603, 0.18059, 0.180474, 0.180748, 0.180568, 0.180936, 0.180805, 0.180548, 0.180445, 0.180575, 0.180473, 0.180878, 0.180797, 0.180857, 0.181077, 0.180595, 0.18099, 0.180772], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 6, 4, 5, 4, 6, 1, 0, 2, 26, 0, 12, 0, 0, 2, 1, 0, 0]': ([0.214447, 0.21433, 0.208069, 0.180005, 0.180138, 0.181036, 0.180606, 0.180551, 0.180618, 0.180647, 0.180455, 0.180978, 0.180603, 0.18059, 0.180474, 0.180748, 0.180568, 0.180936, 0.180805, 0.180548, 0.180445, 0.180575, 0.180473, 0.180878, 0.180797, 0.180857, 0.181077, 0.180595, 0.18099, 0.180772], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	6
        Additions: 		348
        Multiplications: 	120
        Divisions: 		0
        Logical: 		0
        Reads: 			776
        Writes: 		160
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest38.exe __orio_perftest38.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest38.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest38.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest38.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest38.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	68
        Max loop nest depth: 	6
        Additions: 		2424
        Multiplications: 	902
        Divisions: 		0
        Logical: 		0
        Reads: 			4945
        Writes: 		945
        Comparisons:		68
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest39.exe __orio_perftest39.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest39.exe  
Program Test Output: 
{'[2, 1, 1, 6, 2, 0, 1, 1, 0, 7, 0, 8, 2, 0, 0, 1, 0, 1]' : 0.172136}
{'[2, 1, 1, 6, 2, 0, 1, 1, 0, 7, 0, 8, 2, 0, 0, 1, 0, 1]' : 0.173314}
{'[2, 1, 1, 6, 2, 0, 1, 1, 0, 7, 0, 8, 2, 0, 0, 1, 0, 1]' : 0.171965}
{'[2, 1, 1, 6, 2, 0, 1, 1, 0, 7, 0, 8, 2, 0, 0, 1, 0, 1]' : 0.172026}
{'[2, 1, 1, 6, 2, 0, 1, 1, 0, 7, 0, 8, 2, 0, 0, 1, 0, 1]' : 0.172342}
{'[2, 1, 1, 6, 2, 0, 1, 1, 0, 7, 0, 8, 2, 0, 0, 1, 0, 1]' : 0.172465}
{'[2, 1, 1, 6, 2, 0, 1, 1, 0, 7, 0, 8, 2, 0, 0, 1, 0, 1]' : 0.173279}
{'[2, 1, 1, 6, 2, 0, 1, 1, 0, 7, 0, 8, 2, 0, 0, 1, 0, 1]' : 0.172779}
{'[2, 1, 1, 6, 2, 0, 1, 1, 0, 7, 0, 8, 2, 0, 0, 1, 0, 1]' : 0.172985}
{'[2, 1, 1, 6, 2, 0, 1, 1, 0, 7, 0, 8, 2, 0, 0, 1, 0, 1]' : 0.172441}
{'[2, 1, 1, 6, 2, 0, 1, 1, 0, 7, 0, 8, 2, 0, 0, 1, 0, 1]' : 0.173325}
{'[2, 1, 1, 6, 2, 0, 1, 1, 0, 7, 0, 8, 2, 0, 0, 1, 0, 1]' : 0.171935}
{'[2, 1, 1, 6, 2, 0, 1, 1, 0, 7, 0, 8, 2, 0, 0, 1, 0, 1]' : 0.172079}
{'[2, 1, 1, 6, 2, 0, 1, 1, 0, 7, 0, 8, 2, 0, 0, 1, 0, 1]' : 0.172892}
{'[2, 1, 1, 6, 2, 0, 1, 1, 0, 7, 0, 8, 2, 0, 0, 1, 0, 1]' : 0.172802}
{'[2, 1, 1, 6, 2, 0, 1, 1, 0, 7, 0, 8, 2, 0, 0, 1, 0, 1]' : 0.172825}
{'[2, 1, 1, 6, 2, 0, 1, 1, 0, 7, 0, 8, 2, 0, 0, 1, 0, 1]' : 0.172562}
{'[2, 1, 1, 6, 2, 0, 1, 1, 0, 7, 0, 8, 2, 0, 0, 1, 0, 1]' : 0.172305}
{'[2, 1, 1, 6, 2, 0, 1, 1, 0, 7, 0, 8, 2, 0, 0, 1, 0, 1]' : 0.171902}
{'[2, 1, 1, 6, 2, 0, 1, 1, 0, 7, 0, 8, 2, 0, 0, 1, 0, 1]' : 0.171783}
{'[2, 1, 1, 6, 2, 0, 1, 1, 0, 7, 0, 8, 2, 0, 0, 1, 0, 1]' : 0.172117}
{'[2, 1, 1, 6, 2, 0, 1, 1, 0, 7, 0, 8, 2, 0, 0, 1, 0, 1]' : 0.172312}
{'[2, 1, 1, 6, 2, 0, 1, 1, 0, 7, 0, 8, 2, 0, 0, 1, 0, 1]' : 0.172178}
{'[2, 1, 1, 6, 2, 0, 1, 1, 0, 7, 0, 8, 2, 0, 0, 1, 0, 1]' : 0.17194}
{'[2, 1, 1, 6, 2, 0, 1, 1, 0, 7, 0, 8, 2, 0, 0, 1, 0, 1]' : 0.172276}
{'[2, 1, 1, 6, 2, 0, 1, 1, 0, 7, 0, 8, 2, 0, 0, 1, 0, 1]' : 0.17195}
{'[2, 1, 1, 6, 2, 0, 1, 1, 0, 7, 0, 8, 2, 0, 0, 1, 0, 1]' : 0.173232}
{'[2, 1, 1, 6, 2, 0, 1, 1, 0, 7, 0, 8, 2, 0, 0, 1, 0, 1]' : 0.172794}
{'[2, 1, 1, 6, 2, 0, 1, 1, 0, 7, 0, 8, 2, 0, 0, 1, 0, 1]' : 0.172265}
{'[2, 1, 1, 6, 2, 0, 1, 1, 0, 7, 0, 8, 2, 0, 0, 1, 0, 1]' : 0.171707}

out:
 ["{'[2, 1, 1, 6, 2, 0, 1, 1, 0, 7, 0, 8, 2, 0, 0, 1, 0, 1]' : 0.172136}", "{'[2, 1, 1, 6, 2, 0, 1, 1, 0, 7, 0, 8, 2, 0, 0, 1, 0, 1]' : 0.173314}", "{'[2, 1, 1, 6, 2, 0, 1, 1, 0, 7, 0, 8, 2, 0, 0, 1, 0, 1]' : 0.171965}", "{'[2, 1, 1, 6, 2, 0, 1, 1, 0, 7, 0, 8, 2, 0, 0, 1, 0, 1]' : 0.172026}", "{'[2, 1, 1, 6, 2, 0, 1, 1, 0, 7, 0, 8, 2, 0, 0, 1, 0, 1]' : 0.172342}", "{'[2, 1, 1, 6, 2, 0, 1, 1, 0, 7, 0, 8, 2, 0, 0, 1, 0, 1]' : 0.172465}", "{'[2, 1, 1, 6, 2, 0, 1, 1, 0, 7, 0, 8, 2, 0, 0, 1, 0, 1]' : 0.173279}", "{'[2, 1, 1, 6, 2, 0, 1, 1, 0, 7, 0, 8, 2, 0, 0, 1, 0, 1]' : 0.172779}", "{'[2, 1, 1, 6, 2, 0, 1, 1, 0, 7, 0, 8, 2, 0, 0, 1, 0, 1]' : 0.172985}", "{'[2, 1, 1, 6, 2, 0, 1, 1, 0, 7, 0, 8, 2, 0, 0, 1, 0, 1]' : 0.172441}", "{'[2, 1, 1, 6, 2, 0, 1, 1, 0, 7, 0, 8, 2, 0, 0, 1, 0, 1]' : 0.173325}", "{'[2, 1, 1, 6, 2, 0, 1, 1, 0, 7, 0, 8, 2, 0, 0, 1, 0, 1]' : 0.171935}", "{'[2, 1, 1, 6, 2, 0, 1, 1, 0, 7, 0, 8, 2, 0, 0, 1, 0, 1]' : 0.172079}", "{'[2, 1, 1, 6, 2, 0, 1, 1, 0, 7, 0, 8, 2, 0, 0, 1, 0, 1]' : 0.172892}", "{'[2, 1, 1, 6, 2, 0, 1, 1, 0, 7, 0, 8, 2, 0, 0, 1, 0, 1]' : 0.172802}", "{'[2, 1, 1, 6, 2, 0, 1, 1, 0, 7, 0, 8, 2, 0, 0, 1, 0, 1]' : 0.172825}", "{'[2, 1, 1, 6, 2, 0, 1, 1, 0, 7, 0, 8, 2, 0, 0, 1, 0, 1]' : 0.172562}", "{'[2, 1, 1, 6, 2, 0, 1, 1, 0, 7, 0, 8, 2, 0, 0, 1, 0, 1]' : 0.172305}", "{'[2, 1, 1, 6, 2, 0, 1, 1, 0, 7, 0, 8, 2, 0, 0, 1, 0, 1]' : 0.171902}", "{'[2, 1, 1, 6, 2, 0, 1, 1, 0, 7, 0, 8, 2, 0, 0, 1, 0, 1]' : 0.171783}", "{'[2, 1, 1, 6, 2, 0, 1, 1, 0, 7, 0, 8, 2, 0, 0, 1, 0, 1]' : 0.172117}", "{'[2, 1, 1, 6, 2, 0, 1, 1, 0, 7, 0, 8, 2, 0, 0, 1, 0, 1]' : 0.172312}", "{'[2, 1, 1, 6, 2, 0, 1, 1, 0, 7, 0, 8, 2, 0, 0, 1, 0, 1]' : 0.172178}", "{'[2, 1, 1, 6, 2, 0, 1, 1, 0, 7, 0, 8, 2, 0, 0, 1, 0, 1]' : 0.17194}", "{'[2, 1, 1, 6, 2, 0, 1, 1, 0, 7, 0, 8, 2, 0, 0, 1, 0, 1]' : 0.172276}", "{'[2, 1, 1, 6, 2, 0, 1, 1, 0, 7, 0, 8, 2, 0, 0, 1, 0, 1]' : 0.17195}", "{'[2, 1, 1, 6, 2, 0, 1, 1, 0, 7, 0, 8, 2, 0, 0, 1, 0, 1]' : 0.173232}", "{'[2, 1, 1, 6, 2, 0, 1, 1, 0, 7, 0, 8, 2, 0, 0, 1, 0, 1]' : 0.172794}", "{'[2, 1, 1, 6, 2, 0, 1, 1, 0, 7, 0, 8, 2, 0, 0, 1, 0, 1]' : 0.172265}", "{'[2, 1, 1, 6, 2, 0, 1, 1, 0, 7, 0, 8, 2, 0, 0, 1, 0, 1]' : 0.171707}"]
returning from 'run': {'[2, 1, 1, 6, 2, 0, 1, 1, 0, 7, 0, 8, 2, 0, 0, 1, 0, 1]': ([0.172136, 0.173314, 0.171965, 0.172026, 0.172342, 0.172465, 0.173279, 0.172779, 0.172985, 0.172441, 0.173325, 0.171935, 0.172079, 0.172892, 0.172802, 0.172825, 0.172562, 0.172305, 0.171902, 0.171783, 0.172117, 0.172312, 0.172178, 0.17194, 0.172276, 0.17195, 0.173232, 0.172794, 0.172265, 0.171707], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 1, 1, 6, 2, 0, 1, 1, 0, 7, 0, 8, 2, 0, 0, 1, 0, 1]': ([0.172136, 0.173314, 0.171965, 0.172026, 0.172342, 0.172465, 0.173279, 0.172779, 0.172985, 0.172441, 0.173325, 0.171935, 0.172079, 0.172892, 0.172802, 0.172825, 0.172562, 0.172305, 0.171902, 0.171783, 0.172117, 0.172312, 0.172178, 0.17194, 0.172276, 0.17195, 0.173232, 0.172794, 0.172265, 0.171707], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		186
        Multiplications: 	50
        Divisions: 		0
        Logical: 		0
        Reads: 			444
        Writes: 		118
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest40.exe __orio_perftest40.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest40.exe  
Program Test Output: 
{'[6, 0, 0, 0, 6, 1, 1, 0, 28, 0, 6, 7, 0, 1, 1, 1, 1, 0]' : 0.216388}
{'[6, 0, 0, 0, 6, 1, 1, 0, 28, 0, 6, 7, 0, 1, 1, 1, 1, 0]' : 0.216257}
{'[6, 0, 0, 0, 6, 1, 1, 0, 28, 0, 6, 7, 0, 1, 1, 1, 1, 0]' : 0.216274}
{'[6, 0, 0, 0, 6, 1, 1, 0, 28, 0, 6, 7, 0, 1, 1, 1, 1, 0]' : 0.187745}
{'[6, 0, 0, 0, 6, 1, 1, 0, 28, 0, 6, 7, 0, 1, 1, 1, 1, 0]' : 0.18158}
{'[6, 0, 0, 0, 6, 1, 1, 0, 28, 0, 6, 7, 0, 1, 1, 1, 1, 0]' : 0.18182}
{'[6, 0, 0, 0, 6, 1, 1, 0, 28, 0, 6, 7, 0, 1, 1, 1, 1, 0]' : 0.181757}
{'[6, 0, 0, 0, 6, 1, 1, 0, 28, 0, 6, 7, 0, 1, 1, 1, 1, 0]' : 0.182106}
{'[6, 0, 0, 0, 6, 1, 1, 0, 28, 0, 6, 7, 0, 1, 1, 1, 1, 0]' : 0.181776}
{'[6, 0, 0, 0, 6, 1, 1, 0, 28, 0, 6, 7, 0, 1, 1, 1, 1, 0]' : 0.181742}
{'[6, 0, 0, 0, 6, 1, 1, 0, 28, 0, 6, 7, 0, 1, 1, 1, 1, 0]' : 0.181546}
{'[6, 0, 0, 0, 6, 1, 1, 0, 28, 0, 6, 7, 0, 1, 1, 1, 1, 0]' : 0.181554}
{'[6, 0, 0, 0, 6, 1, 1, 0, 28, 0, 6, 7, 0, 1, 1, 1, 1, 0]' : 0.181807}
{'[6, 0, 0, 0, 6, 1, 1, 0, 28, 0, 6, 7, 0, 1, 1, 1, 1, 0]' : 0.18198}
{'[6, 0, 0, 0, 6, 1, 1, 0, 28, 0, 6, 7, 0, 1, 1, 1, 1, 0]' : 0.181715}
{'[6, 0, 0, 0, 6, 1, 1, 0, 28, 0, 6, 7, 0, 1, 1, 1, 1, 0]' : 0.181712}
{'[6, 0, 0, 0, 6, 1, 1, 0, 28, 0, 6, 7, 0, 1, 1, 1, 1, 0]' : 0.181583}
{'[6, 0, 0, 0, 6, 1, 1, 0, 28, 0, 6, 7, 0, 1, 1, 1, 1, 0]' : 0.181857}
{'[6, 0, 0, 0, 6, 1, 1, 0, 28, 0, 6, 7, 0, 1, 1, 1, 1, 0]' : 0.181786}
{'[6, 0, 0, 0, 6, 1, 1, 0, 28, 0, 6, 7, 0, 1, 1, 1, 1, 0]' : 0.181834}
{'[6, 0, 0, 0, 6, 1, 1, 0, 28, 0, 6, 7, 0, 1, 1, 1, 1, 0]' : 0.181836}
{'[6, 0, 0, 0, 6, 1, 1, 0, 28, 0, 6, 7, 0, 1, 1, 1, 1, 0]' : 0.182388}
{'[6, 0, 0, 0, 6, 1, 1, 0, 28, 0, 6, 7, 0, 1, 1, 1, 1, 0]' : 0.181613}
{'[6, 0, 0, 0, 6, 1, 1, 0, 28, 0, 6, 7, 0, 1, 1, 1, 1, 0]' : 0.181792}
{'[6, 0, 0, 0, 6, 1, 1, 0, 28, 0, 6, 7, 0, 1, 1, 1, 1, 0]' : 0.181623}
{'[6, 0, 0, 0, 6, 1, 1, 0, 28, 0, 6, 7, 0, 1, 1, 1, 1, 0]' : 0.182038}
{'[6, 0, 0, 0, 6, 1, 1, 0, 28, 0, 6, 7, 0, 1, 1, 1, 1, 0]' : 0.181673}
{'[6, 0, 0, 0, 6, 1, 1, 0, 28, 0, 6, 7, 0, 1, 1, 1, 1, 0]' : 0.181462}
{'[6, 0, 0, 0, 6, 1, 1, 0, 28, 0, 6, 7, 0, 1, 1, 1, 1, 0]' : 0.181618}
{'[6, 0, 0, 0, 6, 1, 1, 0, 28, 0, 6, 7, 0, 1, 1, 1, 1, 0]' : 0.18149}

out:
 ["{'[6, 0, 0, 0, 6, 1, 1, 0, 28, 0, 6, 7, 0, 1, 1, 1, 1, 0]' : 0.216388}", "{'[6, 0, 0, 0, 6, 1, 1, 0, 28, 0, 6, 7, 0, 1, 1, 1, 1, 0]' : 0.216257}", "{'[6, 0, 0, 0, 6, 1, 1, 0, 28, 0, 6, 7, 0, 1, 1, 1, 1, 0]' : 0.216274}", "{'[6, 0, 0, 0, 6, 1, 1, 0, 28, 0, 6, 7, 0, 1, 1, 1, 1, 0]' : 0.187745}", "{'[6, 0, 0, 0, 6, 1, 1, 0, 28, 0, 6, 7, 0, 1, 1, 1, 1, 0]' : 0.18158}", "{'[6, 0, 0, 0, 6, 1, 1, 0, 28, 0, 6, 7, 0, 1, 1, 1, 1, 0]' : 0.18182}", "{'[6, 0, 0, 0, 6, 1, 1, 0, 28, 0, 6, 7, 0, 1, 1, 1, 1, 0]' : 0.181757}", "{'[6, 0, 0, 0, 6, 1, 1, 0, 28, 0, 6, 7, 0, 1, 1, 1, 1, 0]' : 0.182106}", "{'[6, 0, 0, 0, 6, 1, 1, 0, 28, 0, 6, 7, 0, 1, 1, 1, 1, 0]' : 0.181776}", "{'[6, 0, 0, 0, 6, 1, 1, 0, 28, 0, 6, 7, 0, 1, 1, 1, 1, 0]' : 0.181742}", "{'[6, 0, 0, 0, 6, 1, 1, 0, 28, 0, 6, 7, 0, 1, 1, 1, 1, 0]' : 0.181546}", "{'[6, 0, 0, 0, 6, 1, 1, 0, 28, 0, 6, 7, 0, 1, 1, 1, 1, 0]' : 0.181554}", "{'[6, 0, 0, 0, 6, 1, 1, 0, 28, 0, 6, 7, 0, 1, 1, 1, 1, 0]' : 0.181807}", "{'[6, 0, 0, 0, 6, 1, 1, 0, 28, 0, 6, 7, 0, 1, 1, 1, 1, 0]' : 0.18198}", "{'[6, 0, 0, 0, 6, 1, 1, 0, 28, 0, 6, 7, 0, 1, 1, 1, 1, 0]' : 0.181715}", "{'[6, 0, 0, 0, 6, 1, 1, 0, 28, 0, 6, 7, 0, 1, 1, 1, 1, 0]' : 0.181712}", "{'[6, 0, 0, 0, 6, 1, 1, 0, 28, 0, 6, 7, 0, 1, 1, 1, 1, 0]' : 0.181583}", "{'[6, 0, 0, 0, 6, 1, 1, 0, 28, 0, 6, 7, 0, 1, 1, 1, 1, 0]' : 0.181857}", "{'[6, 0, 0, 0, 6, 1, 1, 0, 28, 0, 6, 7, 0, 1, 1, 1, 1, 0]' : 0.181786}", "{'[6, 0, 0, 0, 6, 1, 1, 0, 28, 0, 6, 7, 0, 1, 1, 1, 1, 0]' : 0.181834}", "{'[6, 0, 0, 0, 6, 1, 1, 0, 28, 0, 6, 7, 0, 1, 1, 1, 1, 0]' : 0.181836}", "{'[6, 0, 0, 0, 6, 1, 1, 0, 28, 0, 6, 7, 0, 1, 1, 1, 1, 0]' : 0.182388}", "{'[6, 0, 0, 0, 6, 1, 1, 0, 28, 0, 6, 7, 0, 1, 1, 1, 1, 0]' : 0.181613}", "{'[6, 0, 0, 0, 6, 1, 1, 0, 28, 0, 6, 7, 0, 1, 1, 1, 1, 0]' : 0.181792}", "{'[6, 0, 0, 0, 6, 1, 1, 0, 28, 0, 6, 7, 0, 1, 1, 1, 1, 0]' : 0.181623}", "{'[6, 0, 0, 0, 6, 1, 1, 0, 28, 0, 6, 7, 0, 1, 1, 1, 1, 0]' : 0.182038}", "{'[6, 0, 0, 0, 6, 1, 1, 0, 28, 0, 6, 7, 0, 1, 1, 1, 1, 0]' : 0.181673}", "{'[6, 0, 0, 0, 6, 1, 1, 0, 28, 0, 6, 7, 0, 1, 1, 1, 1, 0]' : 0.181462}", "{'[6, 0, 0, 0, 6, 1, 1, 0, 28, 0, 6, 7, 0, 1, 1, 1, 1, 0]' : 0.181618}", "{'[6, 0, 0, 0, 6, 1, 1, 0, 28, 0, 6, 7, 0, 1, 1, 1, 1, 0]' : 0.18149}"]
returning from 'run': {'[6, 0, 0, 0, 6, 1, 1, 0, 28, 0, 6, 7, 0, 1, 1, 1, 1, 0]': ([0.216388, 0.216257, 0.216274, 0.187745, 0.18158, 0.18182, 0.181757, 0.182106, 0.181776, 0.181742, 0.181546, 0.181554, 0.181807, 0.18198, 0.181715, 0.181712, 0.181583, 0.181857, 0.181786, 0.181834, 0.181836, 0.182388, 0.181613, 0.181792, 0.181623, 0.182038, 0.181673, 0.181462, 0.181618, 0.18149], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 0, 0, 6, 1, 1, 0, 28, 0, 6, 7, 0, 1, 1, 1, 1, 0]': ([0.216388, 0.216257, 0.216274, 0.187745, 0.18158, 0.18182, 0.181757, 0.182106, 0.181776, 0.181742, 0.181546, 0.181554, 0.181807, 0.18198, 0.181715, 0.181712, 0.181583, 0.181857, 0.181786, 0.181834, 0.181836, 0.182388, 0.181613, 0.181792, 0.181623, 0.182038, 0.181673, 0.181462, 0.181618, 0.18149], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	48
        Max loop nest depth: 	5
        Additions: 		1223
        Multiplications: 	288
        Divisions: 		0
        Logical: 		0
        Reads: 			2149
        Writes: 		312
        Comparisons:		48
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest41.exe __orio_perftest41.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest41.exe  
Program Test Output: 
{'[4, 4, 0, 0, 6, 5, 1, 1, 28, 6, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.115545}
{'[4, 4, 0, 0, 6, 5, 1, 1, 28, 6, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.115522}
{'[4, 4, 0, 0, 6, 5, 1, 1, 28, 6, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.115376}
{'[4, 4, 0, 0, 6, 5, 1, 1, 28, 6, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.115507}
{'[4, 4, 0, 0, 6, 5, 1, 1, 28, 6, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.10426}
{'[4, 4, 0, 0, 6, 5, 1, 1, 28, 6, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0982969}
{'[4, 4, 0, 0, 6, 5, 1, 1, 28, 6, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0980382}
{'[4, 4, 0, 0, 6, 5, 1, 1, 28, 6, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0983088}
{'[4, 4, 0, 0, 6, 5, 1, 1, 28, 6, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.09816}
{'[4, 4, 0, 0, 6, 5, 1, 1, 28, 6, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0982051}
{'[4, 4, 0, 0, 6, 5, 1, 1, 28, 6, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0980949}
{'[4, 4, 0, 0, 6, 5, 1, 1, 28, 6, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.098243}
{'[4, 4, 0, 0, 6, 5, 1, 1, 28, 6, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0982721}
{'[4, 4, 0, 0, 6, 5, 1, 1, 28, 6, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0986559}
{'[4, 4, 0, 0, 6, 5, 1, 1, 28, 6, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.09834}
{'[4, 4, 0, 0, 6, 5, 1, 1, 28, 6, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0982211}
{'[4, 4, 0, 0, 6, 5, 1, 1, 28, 6, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0981131}
{'[4, 4, 0, 0, 6, 5, 1, 1, 28, 6, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0981832}
{'[4, 4, 0, 0, 6, 5, 1, 1, 28, 6, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0981779}
{'[4, 4, 0, 0, 6, 5, 1, 1, 28, 6, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0983231}
{'[4, 4, 0, 0, 6, 5, 1, 1, 28, 6, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.098105}
{'[4, 4, 0, 0, 6, 5, 1, 1, 28, 6, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0982051}
{'[4, 4, 0, 0, 6, 5, 1, 1, 28, 6, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0980351}
{'[4, 4, 0, 0, 6, 5, 1, 1, 28, 6, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0984609}
{'[4, 4, 0, 0, 6, 5, 1, 1, 28, 6, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0984201}
{'[4, 4, 0, 0, 6, 5, 1, 1, 28, 6, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.09868}
{'[4, 4, 0, 0, 6, 5, 1, 1, 28, 6, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.098093}
{'[4, 4, 0, 0, 6, 5, 1, 1, 28, 6, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.098192}
{'[4, 4, 0, 0, 6, 5, 1, 1, 28, 6, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0982418}
{'[4, 4, 0, 0, 6, 5, 1, 1, 28, 6, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0981278}

out:
 ["{'[4, 4, 0, 0, 6, 5, 1, 1, 28, 6, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.115545}", "{'[4, 4, 0, 0, 6, 5, 1, 1, 28, 6, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.115522}", "{'[4, 4, 0, 0, 6, 5, 1, 1, 28, 6, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.115376}", "{'[4, 4, 0, 0, 6, 5, 1, 1, 28, 6, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.115507}", "{'[4, 4, 0, 0, 6, 5, 1, 1, 28, 6, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.10426}", "{'[4, 4, 0, 0, 6, 5, 1, 1, 28, 6, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0982969}", "{'[4, 4, 0, 0, 6, 5, 1, 1, 28, 6, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0980382}", "{'[4, 4, 0, 0, 6, 5, 1, 1, 28, 6, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0983088}", "{'[4, 4, 0, 0, 6, 5, 1, 1, 28, 6, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.09816}", "{'[4, 4, 0, 0, 6, 5, 1, 1, 28, 6, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0982051}", "{'[4, 4, 0, 0, 6, 5, 1, 1, 28, 6, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0980949}", "{'[4, 4, 0, 0, 6, 5, 1, 1, 28, 6, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.098243}", "{'[4, 4, 0, 0, 6, 5, 1, 1, 28, 6, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0982721}", "{'[4, 4, 0, 0, 6, 5, 1, 1, 28, 6, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0986559}", "{'[4, 4, 0, 0, 6, 5, 1, 1, 28, 6, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.09834}", "{'[4, 4, 0, 0, 6, 5, 1, 1, 28, 6, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0982211}", "{'[4, 4, 0, 0, 6, 5, 1, 1, 28, 6, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0981131}", "{'[4, 4, 0, 0, 6, 5, 1, 1, 28, 6, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0981832}", "{'[4, 4, 0, 0, 6, 5, 1, 1, 28, 6, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0981779}", "{'[4, 4, 0, 0, 6, 5, 1, 1, 28, 6, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0983231}", "{'[4, 4, 0, 0, 6, 5, 1, 1, 28, 6, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.098105}", "{'[4, 4, 0, 0, 6, 5, 1, 1, 28, 6, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0982051}", "{'[4, 4, 0, 0, 6, 5, 1, 1, 28, 6, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0980351}", "{'[4, 4, 0, 0, 6, 5, 1, 1, 28, 6, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0984609}", "{'[4, 4, 0, 0, 6, 5, 1, 1, 28, 6, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0984201}", "{'[4, 4, 0, 0, 6, 5, 1, 1, 28, 6, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.09868}", "{'[4, 4, 0, 0, 6, 5, 1, 1, 28, 6, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.098093}", "{'[4, 4, 0, 0, 6, 5, 1, 1, 28, 6, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.098192}", "{'[4, 4, 0, 0, 6, 5, 1, 1, 28, 6, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0982418}", "{'[4, 4, 0, 0, 6, 5, 1, 1, 28, 6, 28, 0, 1, 1, 0, 0, 0, 1]' : 0.0981278}"]
returning from 'run': {'[4, 4, 0, 0, 6, 5, 1, 1, 28, 6, 28, 0, 1, 1, 0, 0, 0, 1]': ([0.115545, 0.115522, 0.115376, 0.115507, 0.10426, 0.0982969, 0.0980382, 0.0983088, 0.09816, 0.0982051, 0.0980949, 0.098243, 0.0982721, 0.0986559, 0.09834, 0.0982211, 0.0981131, 0.0981832, 0.0981779, 0.0983231, 0.098105, 0.0982051, 0.0980351, 0.0984609, 0.0984201, 0.09868, 0.098093, 0.098192, 0.0982418, 0.0981278], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 4, 0, 0, 6, 5, 1, 1, 28, 6, 28, 0, 1, 1, 0, 0, 0, 1]': ([0.115545, 0.115522, 0.115376, 0.115507, 0.10426, 0.0982969, 0.0980382, 0.0983088, 0.09816, 0.0982051, 0.0980949, 0.098243, 0.0982721, 0.0986559, 0.09834, 0.0982211, 0.0981131, 0.0981832, 0.0981779, 0.0983231, 0.098105, 0.0982051, 0.0980351, 0.0984609, 0.0984201, 0.09868, 0.098093, 0.098192, 0.0982418, 0.0981278], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		416
        Multiplications: 	142
        Divisions: 		0
        Logical: 		0
        Reads: 			857
        Writes: 		119
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest42.exe __orio_perftest42.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest42.exe  
Program Test Output: 
{'[1, 0, 6, 2, 2, 0, 1, 0, 15, 0, 7, 28, 0, 0, 2, 0, 1, 0]' : 0.25686}
{'[1, 0, 6, 2, 2, 0, 1, 0, 15, 0, 7, 28, 0, 0, 2, 0, 1, 0]' : 0.257017}
{'[1, 0, 6, 2, 2, 0, 1, 0, 15, 0, 7, 28, 0, 0, 2, 0, 1, 0]' : 0.226285}
{'[1, 0, 6, 2, 2, 0, 1, 0, 15, 0, 7, 28, 0, 0, 2, 0, 1, 0]' : 0.217183}
{'[1, 0, 6, 2, 2, 0, 1, 0, 15, 0, 7, 28, 0, 0, 2, 0, 1, 0]' : 0.217162}
{'[1, 0, 6, 2, 2, 0, 1, 0, 15, 0, 7, 28, 0, 0, 2, 0, 1, 0]' : 0.21756}
{'[1, 0, 6, 2, 2, 0, 1, 0, 15, 0, 7, 28, 0, 0, 2, 0, 1, 0]' : 0.21707}
{'[1, 0, 6, 2, 2, 0, 1, 0, 15, 0, 7, 28, 0, 0, 2, 0, 1, 0]' : 0.217007}
{'[1, 0, 6, 2, 2, 0, 1, 0, 15, 0, 7, 28, 0, 0, 2, 0, 1, 0]' : 0.217093}
{'[1, 0, 6, 2, 2, 0, 1, 0, 15, 0, 7, 28, 0, 0, 2, 0, 1, 0]' : 0.217257}
{'[1, 0, 6, 2, 2, 0, 1, 0, 15, 0, 7, 28, 0, 0, 2, 0, 1, 0]' : 0.217591}
{'[1, 0, 6, 2, 2, 0, 1, 0, 15, 0, 7, 28, 0, 0, 2, 0, 1, 0]' : 0.217055}
{'[1, 0, 6, 2, 2, 0, 1, 0, 15, 0, 7, 28, 0, 0, 2, 0, 1, 0]' : 0.217182}
{'[1, 0, 6, 2, 2, 0, 1, 0, 15, 0, 7, 28, 0, 0, 2, 0, 1, 0]' : 0.217104}
{'[1, 0, 6, 2, 2, 0, 1, 0, 15, 0, 7, 28, 0, 0, 2, 0, 1, 0]' : 0.217004}
{'[1, 0, 6, 2, 2, 0, 1, 0, 15, 0, 7, 28, 0, 0, 2, 0, 1, 0]' : 0.21765}
{'[1, 0, 6, 2, 2, 0, 1, 0, 15, 0, 7, 28, 0, 0, 2, 0, 1, 0]' : 0.217016}
{'[1, 0, 6, 2, 2, 0, 1, 0, 15, 0, 7, 28, 0, 0, 2, 0, 1, 0]' : 0.217523}
{'[1, 0, 6, 2, 2, 0, 1, 0, 15, 0, 7, 28, 0, 0, 2, 0, 1, 0]' : 0.217222}
{'[1, 0, 6, 2, 2, 0, 1, 0, 15, 0, 7, 28, 0, 0, 2, 0, 1, 0]' : 0.21701}
{'[1, 0, 6, 2, 2, 0, 1, 0, 15, 0, 7, 28, 0, 0, 2, 0, 1, 0]' : 0.217411}
{'[1, 0, 6, 2, 2, 0, 1, 0, 15, 0, 7, 28, 0, 0, 2, 0, 1, 0]' : 0.217404}
{'[1, 0, 6, 2, 2, 0, 1, 0, 15, 0, 7, 28, 0, 0, 2, 0, 1, 0]' : 0.217031}
{'[1, 0, 6, 2, 2, 0, 1, 0, 15, 0, 7, 28, 0, 0, 2, 0, 1, 0]' : 0.217053}
{'[1, 0, 6, 2, 2, 0, 1, 0, 15, 0, 7, 28, 0, 0, 2, 0, 1, 0]' : 0.217352}
{'[1, 0, 6, 2, 2, 0, 1, 0, 15, 0, 7, 28, 0, 0, 2, 0, 1, 0]' : 0.217432}
{'[1, 0, 6, 2, 2, 0, 1, 0, 15, 0, 7, 28, 0, 0, 2, 0, 1, 0]' : 0.217035}
{'[1, 0, 6, 2, 2, 0, 1, 0, 15, 0, 7, 28, 0, 0, 2, 0, 1, 0]' : 0.217093}
{'[1, 0, 6, 2, 2, 0, 1, 0, 15, 0, 7, 28, 0, 0, 2, 0, 1, 0]' : 0.216956}
{'[1, 0, 6, 2, 2, 0, 1, 0, 15, 0, 7, 28, 0, 0, 2, 0, 1, 0]' : 0.217169}

out:
 ["{'[1, 0, 6, 2, 2, 0, 1, 0, 15, 0, 7, 28, 0, 0, 2, 0, 1, 0]' : 0.25686}", "{'[1, 0, 6, 2, 2, 0, 1, 0, 15, 0, 7, 28, 0, 0, 2, 0, 1, 0]' : 0.257017}", "{'[1, 0, 6, 2, 2, 0, 1, 0, 15, 0, 7, 28, 0, 0, 2, 0, 1, 0]' : 0.226285}", "{'[1, 0, 6, 2, 2, 0, 1, 0, 15, 0, 7, 28, 0, 0, 2, 0, 1, 0]' : 0.217183}", "{'[1, 0, 6, 2, 2, 0, 1, 0, 15, 0, 7, 28, 0, 0, 2, 0, 1, 0]' : 0.217162}", "{'[1, 0, 6, 2, 2, 0, 1, 0, 15, 0, 7, 28, 0, 0, 2, 0, 1, 0]' : 0.21756}", "{'[1, 0, 6, 2, 2, 0, 1, 0, 15, 0, 7, 28, 0, 0, 2, 0, 1, 0]' : 0.21707}", "{'[1, 0, 6, 2, 2, 0, 1, 0, 15, 0, 7, 28, 0, 0, 2, 0, 1, 0]' : 0.217007}", "{'[1, 0, 6, 2, 2, 0, 1, 0, 15, 0, 7, 28, 0, 0, 2, 0, 1, 0]' : 0.217093}", "{'[1, 0, 6, 2, 2, 0, 1, 0, 15, 0, 7, 28, 0, 0, 2, 0, 1, 0]' : 0.217257}", "{'[1, 0, 6, 2, 2, 0, 1, 0, 15, 0, 7, 28, 0, 0, 2, 0, 1, 0]' : 0.217591}", "{'[1, 0, 6, 2, 2, 0, 1, 0, 15, 0, 7, 28, 0, 0, 2, 0, 1, 0]' : 0.217055}", "{'[1, 0, 6, 2, 2, 0, 1, 0, 15, 0, 7, 28, 0, 0, 2, 0, 1, 0]' : 0.217182}", "{'[1, 0, 6, 2, 2, 0, 1, 0, 15, 0, 7, 28, 0, 0, 2, 0, 1, 0]' : 0.217104}", "{'[1, 0, 6, 2, 2, 0, 1, 0, 15, 0, 7, 28, 0, 0, 2, 0, 1, 0]' : 0.217004}", "{'[1, 0, 6, 2, 2, 0, 1, 0, 15, 0, 7, 28, 0, 0, 2, 0, 1, 0]' : 0.21765}", "{'[1, 0, 6, 2, 2, 0, 1, 0, 15, 0, 7, 28, 0, 0, 2, 0, 1, 0]' : 0.217016}", "{'[1, 0, 6, 2, 2, 0, 1, 0, 15, 0, 7, 28, 0, 0, 2, 0, 1, 0]' : 0.217523}", "{'[1, 0, 6, 2, 2, 0, 1, 0, 15, 0, 7, 28, 0, 0, 2, 0, 1, 0]' : 0.217222}", "{'[1, 0, 6, 2, 2, 0, 1, 0, 15, 0, 7, 28, 0, 0, 2, 0, 1, 0]' : 0.21701}", "{'[1, 0, 6, 2, 2, 0, 1, 0, 15, 0, 7, 28, 0, 0, 2, 0, 1, 0]' : 0.217411}", "{'[1, 0, 6, 2, 2, 0, 1, 0, 15, 0, 7, 28, 0, 0, 2, 0, 1, 0]' : 0.217404}", "{'[1, 0, 6, 2, 2, 0, 1, 0, 15, 0, 7, 28, 0, 0, 2, 0, 1, 0]' : 0.217031}", "{'[1, 0, 6, 2, 2, 0, 1, 0, 15, 0, 7, 28, 0, 0, 2, 0, 1, 0]' : 0.217053}", "{'[1, 0, 6, 2, 2, 0, 1, 0, 15, 0, 7, 28, 0, 0, 2, 0, 1, 0]' : 0.217352}", "{'[1, 0, 6, 2, 2, 0, 1, 0, 15, 0, 7, 28, 0, 0, 2, 0, 1, 0]' : 0.217432}", "{'[1, 0, 6, 2, 2, 0, 1, 0, 15, 0, 7, 28, 0, 0, 2, 0, 1, 0]' : 0.217035}", "{'[1, 0, 6, 2, 2, 0, 1, 0, 15, 0, 7, 28, 0, 0, 2, 0, 1, 0]' : 0.217093}", "{'[1, 0, 6, 2, 2, 0, 1, 0, 15, 0, 7, 28, 0, 0, 2, 0, 1, 0]' : 0.216956}", "{'[1, 0, 6, 2, 2, 0, 1, 0, 15, 0, 7, 28, 0, 0, 2, 0, 1, 0]' : 0.217169}"]
returning from 'run': {'[1, 0, 6, 2, 2, 0, 1, 0, 15, 0, 7, 28, 0, 0, 2, 0, 1, 0]': ([0.25686, 0.257017, 0.226285, 0.217183, 0.217162, 0.21756, 0.21707, 0.217007, 0.217093, 0.217257, 0.217591, 0.217055, 0.217182, 0.217104, 0.217004, 0.21765, 0.217016, 0.217523, 0.217222, 0.21701, 0.217411, 0.217404, 0.217031, 0.217053, 0.217352, 0.217432, 0.217035, 0.217093, 0.216956, 0.217169], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 6, 2, 2, 0, 1, 0, 15, 0, 7, 28, 0, 0, 2, 0, 1, 0]': ([0.25686, 0.257017, 0.226285, 0.217183, 0.217162, 0.21756, 0.21707, 0.217007, 0.217093, 0.217257, 0.217591, 0.217055, 0.217182, 0.217104, 0.217004, 0.21765, 0.217016, 0.217523, 0.217222, 0.21701, 0.217411, 0.217404, 0.217031, 0.217053, 0.217352, 0.217432, 0.217035, 0.217093, 0.216956, 0.217169], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	6
        Additions: 		860
        Multiplications: 	342
        Divisions: 		0
        Logical: 		0
        Reads: 			1719
        Writes: 		316
        Comparisons:		24
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest43.exe __orio_perftest43.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest43.exe  
Program Test Output: 
{'[1, 6, 6, 1, 0, 6, 0, 1, 7, 0, 2, 13, 1, 0, 0, 1, 0, 0]' : 0.113199}
{'[1, 6, 6, 1, 0, 6, 0, 1, 7, 0, 2, 13, 1, 0, 0, 1, 0, 0]' : 0.113139}
{'[1, 6, 6, 1, 0, 6, 0, 1, 7, 0, 2, 13, 1, 0, 0, 1, 0, 0]' : 0.113102}
{'[1, 6, 6, 1, 0, 6, 0, 1, 7, 0, 2, 13, 1, 0, 0, 1, 0, 0]' : 0.113075}
{'[1, 6, 6, 1, 0, 6, 0, 1, 7, 0, 2, 13, 1, 0, 0, 1, 0, 0]' : 0.110088}
{'[1, 6, 6, 1, 0, 6, 0, 1, 7, 0, 2, 13, 1, 0, 0, 1, 0, 0]' : 0.099694}
{'[1, 6, 6, 1, 0, 6, 0, 1, 7, 0, 2, 13, 1, 0, 0, 1, 0, 0]' : 0.099613}
{'[1, 6, 6, 1, 0, 6, 0, 1, 7, 0, 2, 13, 1, 0, 0, 1, 0, 0]' : 0.0996771}
{'[1, 6, 6, 1, 0, 6, 0, 1, 7, 0, 2, 13, 1, 0, 0, 1, 0, 0]' : 0.100261}
{'[1, 6, 6, 1, 0, 6, 0, 1, 7, 0, 2, 13, 1, 0, 0, 1, 0, 0]' : 0.099973}
{'[1, 6, 6, 1, 0, 6, 0, 1, 7, 0, 2, 13, 1, 0, 0, 1, 0, 0]' : 0.0996361}
{'[1, 6, 6, 1, 0, 6, 0, 1, 7, 0, 2, 13, 1, 0, 0, 1, 0, 0]' : 0.0995989}
{'[1, 6, 6, 1, 0, 6, 0, 1, 7, 0, 2, 13, 1, 0, 0, 1, 0, 0]' : 0.0996408}
{'[1, 6, 6, 1, 0, 6, 0, 1, 7, 0, 2, 13, 1, 0, 0, 1, 0, 0]' : 0.0996771}
{'[1, 6, 6, 1, 0, 6, 0, 1, 7, 0, 2, 13, 1, 0, 0, 1, 0, 0]' : 0.0997109}
{'[1, 6, 6, 1, 0, 6, 0, 1, 7, 0, 2, 13, 1, 0, 0, 1, 0, 0]' : 0.099678}
{'[1, 6, 6, 1, 0, 6, 0, 1, 7, 0, 2, 13, 1, 0, 0, 1, 0, 0]' : 0.0998821}
{'[1, 6, 6, 1, 0, 6, 0, 1, 7, 0, 2, 13, 1, 0, 0, 1, 0, 0]' : 0.0997219}
{'[1, 6, 6, 1, 0, 6, 0, 1, 7, 0, 2, 13, 1, 0, 0, 1, 0, 0]' : 0.099592}
{'[1, 6, 6, 1, 0, 6, 0, 1, 7, 0, 2, 13, 1, 0, 0, 1, 0, 0]' : 0.100203}
{'[1, 6, 6, 1, 0, 6, 0, 1, 7, 0, 2, 13, 1, 0, 0, 1, 0, 0]' : 0.099731}
{'[1, 6, 6, 1, 0, 6, 0, 1, 7, 0, 2, 13, 1, 0, 0, 1, 0, 0]' : 0.099649}
{'[1, 6, 6, 1, 0, 6, 0, 1, 7, 0, 2, 13, 1, 0, 0, 1, 0, 0]' : 0.0996671}
{'[1, 6, 6, 1, 0, 6, 0, 1, 7, 0, 2, 13, 1, 0, 0, 1, 0, 0]' : 0.0998592}
{'[1, 6, 6, 1, 0, 6, 0, 1, 7, 0, 2, 13, 1, 0, 0, 1, 0, 0]' : 0.099601}
{'[1, 6, 6, 1, 0, 6, 0, 1, 7, 0, 2, 13, 1, 0, 0, 1, 0, 0]' : 0.099601}
{'[1, 6, 6, 1, 0, 6, 0, 1, 7, 0, 2, 13, 1, 0, 0, 1, 0, 0]' : 0.099627}
{'[1, 6, 6, 1, 0, 6, 0, 1, 7, 0, 2, 13, 1, 0, 0, 1, 0, 0]' : 0.099606}
{'[1, 6, 6, 1, 0, 6, 0, 1, 7, 0, 2, 13, 1, 0, 0, 1, 0, 0]' : 0.0997019}
{'[1, 6, 6, 1, 0, 6, 0, 1, 7, 0, 2, 13, 1, 0, 0, 1, 0, 0]' : 0.099885}

out:
 ["{'[1, 6, 6, 1, 0, 6, 0, 1, 7, 0, 2, 13, 1, 0, 0, 1, 0, 0]' : 0.113199}", "{'[1, 6, 6, 1, 0, 6, 0, 1, 7, 0, 2, 13, 1, 0, 0, 1, 0, 0]' : 0.113139}", "{'[1, 6, 6, 1, 0, 6, 0, 1, 7, 0, 2, 13, 1, 0, 0, 1, 0, 0]' : 0.113102}", "{'[1, 6, 6, 1, 0, 6, 0, 1, 7, 0, 2, 13, 1, 0, 0, 1, 0, 0]' : 0.113075}", "{'[1, 6, 6, 1, 0, 6, 0, 1, 7, 0, 2, 13, 1, 0, 0, 1, 0, 0]' : 0.110088}", "{'[1, 6, 6, 1, 0, 6, 0, 1, 7, 0, 2, 13, 1, 0, 0, 1, 0, 0]' : 0.099694}", "{'[1, 6, 6, 1, 0, 6, 0, 1, 7, 0, 2, 13, 1, 0, 0, 1, 0, 0]' : 0.099613}", "{'[1, 6, 6, 1, 0, 6, 0, 1, 7, 0, 2, 13, 1, 0, 0, 1, 0, 0]' : 0.0996771}", "{'[1, 6, 6, 1, 0, 6, 0, 1, 7, 0, 2, 13, 1, 0, 0, 1, 0, 0]' : 0.100261}", "{'[1, 6, 6, 1, 0, 6, 0, 1, 7, 0, 2, 13, 1, 0, 0, 1, 0, 0]' : 0.099973}", "{'[1, 6, 6, 1, 0, 6, 0, 1, 7, 0, 2, 13, 1, 0, 0, 1, 0, 0]' : 0.0996361}", "{'[1, 6, 6, 1, 0, 6, 0, 1, 7, 0, 2, 13, 1, 0, 0, 1, 0, 0]' : 0.0995989}", "{'[1, 6, 6, 1, 0, 6, 0, 1, 7, 0, 2, 13, 1, 0, 0, 1, 0, 0]' : 0.0996408}", "{'[1, 6, 6, 1, 0, 6, 0, 1, 7, 0, 2, 13, 1, 0, 0, 1, 0, 0]' : 0.0996771}", "{'[1, 6, 6, 1, 0, 6, 0, 1, 7, 0, 2, 13, 1, 0, 0, 1, 0, 0]' : 0.0997109}", "{'[1, 6, 6, 1, 0, 6, 0, 1, 7, 0, 2, 13, 1, 0, 0, 1, 0, 0]' : 0.099678}", "{'[1, 6, 6, 1, 0, 6, 0, 1, 7, 0, 2, 13, 1, 0, 0, 1, 0, 0]' : 0.0998821}", "{'[1, 6, 6, 1, 0, 6, 0, 1, 7, 0, 2, 13, 1, 0, 0, 1, 0, 0]' : 0.0997219}", "{'[1, 6, 6, 1, 0, 6, 0, 1, 7, 0, 2, 13, 1, 0, 0, 1, 0, 0]' : 0.099592}", "{'[1, 6, 6, 1, 0, 6, 0, 1, 7, 0, 2, 13, 1, 0, 0, 1, 0, 0]' : 0.100203}", "{'[1, 6, 6, 1, 0, 6, 0, 1, 7, 0, 2, 13, 1, 0, 0, 1, 0, 0]' : 0.099731}", "{'[1, 6, 6, 1, 0, 6, 0, 1, 7, 0, 2, 13, 1, 0, 0, 1, 0, 0]' : 0.099649}", "{'[1, 6, 6, 1, 0, 6, 0, 1, 7, 0, 2, 13, 1, 0, 0, 1, 0, 0]' : 0.0996671}", "{'[1, 6, 6, 1, 0, 6, 0, 1, 7, 0, 2, 13, 1, 0, 0, 1, 0, 0]' : 0.0998592}", "{'[1, 6, 6, 1, 0, 6, 0, 1, 7, 0, 2, 13, 1, 0, 0, 1, 0, 0]' : 0.099601}", "{'[1, 6, 6, 1, 0, 6, 0, 1, 7, 0, 2, 13, 1, 0, 0, 1, 0, 0]' : 0.099601}", "{'[1, 6, 6, 1, 0, 6, 0, 1, 7, 0, 2, 13, 1, 0, 0, 1, 0, 0]' : 0.099627}", "{'[1, 6, 6, 1, 0, 6, 0, 1, 7, 0, 2, 13, 1, 0, 0, 1, 0, 0]' : 0.099606}", "{'[1, 6, 6, 1, 0, 6, 0, 1, 7, 0, 2, 13, 1, 0, 0, 1, 0, 0]' : 0.0997019}", "{'[1, 6, 6, 1, 0, 6, 0, 1, 7, 0, 2, 13, 1, 0, 0, 1, 0, 0]' : 0.099885}"]
returning from 'run': {'[1, 6, 6, 1, 0, 6, 0, 1, 7, 0, 2, 13, 1, 0, 0, 1, 0, 0]': ([0.113199, 0.113139, 0.113102, 0.113075, 0.110088, 0.099694, 0.099613, 0.0996771, 0.100261, 0.099973, 0.0996361, 0.0995989, 0.0996408, 0.0996771, 0.0997109, 0.099678, 0.0998821, 0.0997219, 0.099592, 0.100203, 0.099731, 0.099649, 0.0996671, 0.0998592, 0.099601, 0.099601, 0.099627, 0.099606, 0.0997019, 0.099885], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 6, 6, 1, 0, 6, 0, 1, 7, 0, 2, 13, 1, 0, 0, 1, 0, 0]': ([0.113199, 0.113139, 0.113102, 0.113075, 0.110088, 0.099694, 0.099613, 0.0996771, 0.100261, 0.099973, 0.0996361, 0.0995989, 0.0996408, 0.0996771, 0.0997109, 0.099678, 0.0998821, 0.0997219, 0.099592, 0.100203, 0.099731, 0.099649, 0.0996671, 0.0998592, 0.099601, 0.099601, 0.099627, 0.099606, 0.0997019, 0.099885], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = jjj
Code stats:
        Number of loops: 	17
        Max loop nest depth: 	4
        Additions: 		444
        Multiplications: 	162
        Divisions: 		0
        Logical: 		0
        Reads: 			948
        Writes: 		205
        Comparisons:		17
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest44.exe __orio_perftest44.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest44.exe  
Program Test Output: 
{'[0, 4, 1, 1, 2, 0, 0, 1, 28, 0, 0, 21, 1, 0, 1, 1, 1, 0]' : 0.133365}
{'[0, 4, 1, 1, 2, 0, 0, 1, 28, 0, 0, 21, 1, 0, 1, 1, 1, 0]' : 0.13347}
{'[0, 4, 1, 1, 2, 0, 0, 1, 28, 0, 0, 21, 1, 0, 1, 1, 1, 0]' : 0.133203}
{'[0, 4, 1, 1, 2, 0, 0, 1, 28, 0, 0, 21, 1, 0, 1, 1, 1, 0]' : 0.133155}
{'[0, 4, 1, 1, 2, 0, 0, 1, 28, 0, 0, 21, 1, 0, 1, 1, 1, 0]' : 0.125666}
{'[0, 4, 1, 1, 2, 0, 0, 1, 28, 0, 0, 21, 1, 0, 1, 1, 1, 0]' : 0.116002}
{'[0, 4, 1, 1, 2, 0, 0, 1, 28, 0, 0, 21, 1, 0, 1, 1, 1, 0]' : 0.115812}
{'[0, 4, 1, 1, 2, 0, 0, 1, 28, 0, 0, 21, 1, 0, 1, 1, 1, 0]' : 0.115852}
{'[0, 4, 1, 1, 2, 0, 0, 1, 28, 0, 0, 21, 1, 0, 1, 1, 1, 0]' : 0.115797}
{'[0, 4, 1, 1, 2, 0, 0, 1, 28, 0, 0, 21, 1, 0, 1, 1, 1, 0]' : 0.115844}
{'[0, 4, 1, 1, 2, 0, 0, 1, 28, 0, 0, 21, 1, 0, 1, 1, 1, 0]' : 0.115803}
{'[0, 4, 1, 1, 2, 0, 0, 1, 28, 0, 0, 21, 1, 0, 1, 1, 1, 0]' : 0.115809}
{'[0, 4, 1, 1, 2, 0, 0, 1, 28, 0, 0, 21, 1, 0, 1, 1, 1, 0]' : 0.11609}
{'[0, 4, 1, 1, 2, 0, 0, 1, 28, 0, 0, 21, 1, 0, 1, 1, 1, 0]' : 0.116117}
{'[0, 4, 1, 1, 2, 0, 0, 1, 28, 0, 0, 21, 1, 0, 1, 1, 1, 0]' : 0.115752}
{'[0, 4, 1, 1, 2, 0, 0, 1, 28, 0, 0, 21, 1, 0, 1, 1, 1, 0]' : 0.116033}
{'[0, 4, 1, 1, 2, 0, 0, 1, 28, 0, 0, 21, 1, 0, 1, 1, 1, 0]' : 0.116138}
{'[0, 4, 1, 1, 2, 0, 0, 1, 28, 0, 0, 21, 1, 0, 1, 1, 1, 0]' : 0.115786}
{'[0, 4, 1, 1, 2, 0, 0, 1, 28, 0, 0, 21, 1, 0, 1, 1, 1, 0]' : 0.115847}
{'[0, 4, 1, 1, 2, 0, 0, 1, 28, 0, 0, 21, 1, 0, 1, 1, 1, 0]' : 0.115713}
{'[0, 4, 1, 1, 2, 0, 0, 1, 28, 0, 0, 21, 1, 0, 1, 1, 1, 0]' : 0.115751}
{'[0, 4, 1, 1, 2, 0, 0, 1, 28, 0, 0, 21, 1, 0, 1, 1, 1, 0]' : 0.116007}
{'[0, 4, 1, 1, 2, 0, 0, 1, 28, 0, 0, 21, 1, 0, 1, 1, 1, 0]' : 0.1161}
{'[0, 4, 1, 1, 2, 0, 0, 1, 28, 0, 0, 21, 1, 0, 1, 1, 1, 0]' : 0.115932}
{'[0, 4, 1, 1, 2, 0, 0, 1, 28, 0, 0, 21, 1, 0, 1, 1, 1, 0]' : 0.115838}
{'[0, 4, 1, 1, 2, 0, 0, 1, 28, 0, 0, 21, 1, 0, 1, 1, 1, 0]' : 0.115931}
{'[0, 4, 1, 1, 2, 0, 0, 1, 28, 0, 0, 21, 1, 0, 1, 1, 1, 0]' : 0.115916}
{'[0, 4, 1, 1, 2, 0, 0, 1, 28, 0, 0, 21, 1, 0, 1, 1, 1, 0]' : 0.116027}
{'[0, 4, 1, 1, 2, 0, 0, 1, 28, 0, 0, 21, 1, 0, 1, 1, 1, 0]' : 0.115877}
{'[0, 4, 1, 1, 2, 0, 0, 1, 28, 0, 0, 21, 1, 0, 1, 1, 1, 0]' : 0.116137}

out:
 ["{'[0, 4, 1, 1, 2, 0, 0, 1, 28, 0, 0, 21, 1, 0, 1, 1, 1, 0]' : 0.133365}", "{'[0, 4, 1, 1, 2, 0, 0, 1, 28, 0, 0, 21, 1, 0, 1, 1, 1, 0]' : 0.13347}", "{'[0, 4, 1, 1, 2, 0, 0, 1, 28, 0, 0, 21, 1, 0, 1, 1, 1, 0]' : 0.133203}", "{'[0, 4, 1, 1, 2, 0, 0, 1, 28, 0, 0, 21, 1, 0, 1, 1, 1, 0]' : 0.133155}", "{'[0, 4, 1, 1, 2, 0, 0, 1, 28, 0, 0, 21, 1, 0, 1, 1, 1, 0]' : 0.125666}", "{'[0, 4, 1, 1, 2, 0, 0, 1, 28, 0, 0, 21, 1, 0, 1, 1, 1, 0]' : 0.116002}", "{'[0, 4, 1, 1, 2, 0, 0, 1, 28, 0, 0, 21, 1, 0, 1, 1, 1, 0]' : 0.115812}", "{'[0, 4, 1, 1, 2, 0, 0, 1, 28, 0, 0, 21, 1, 0, 1, 1, 1, 0]' : 0.115852}", "{'[0, 4, 1, 1, 2, 0, 0, 1, 28, 0, 0, 21, 1, 0, 1, 1, 1, 0]' : 0.115797}", "{'[0, 4, 1, 1, 2, 0, 0, 1, 28, 0, 0, 21, 1, 0, 1, 1, 1, 0]' : 0.115844}", "{'[0, 4, 1, 1, 2, 0, 0, 1, 28, 0, 0, 21, 1, 0, 1, 1, 1, 0]' : 0.115803}", "{'[0, 4, 1, 1, 2, 0, 0, 1, 28, 0, 0, 21, 1, 0, 1, 1, 1, 0]' : 0.115809}", "{'[0, 4, 1, 1, 2, 0, 0, 1, 28, 0, 0, 21, 1, 0, 1, 1, 1, 0]' : 0.11609}", "{'[0, 4, 1, 1, 2, 0, 0, 1, 28, 0, 0, 21, 1, 0, 1, 1, 1, 0]' : 0.116117}", "{'[0, 4, 1, 1, 2, 0, 0, 1, 28, 0, 0, 21, 1, 0, 1, 1, 1, 0]' : 0.115752}", "{'[0, 4, 1, 1, 2, 0, 0, 1, 28, 0, 0, 21, 1, 0, 1, 1, 1, 0]' : 0.116033}", "{'[0, 4, 1, 1, 2, 0, 0, 1, 28, 0, 0, 21, 1, 0, 1, 1, 1, 0]' : 0.116138}", "{'[0, 4, 1, 1, 2, 0, 0, 1, 28, 0, 0, 21, 1, 0, 1, 1, 1, 0]' : 0.115786}", "{'[0, 4, 1, 1, 2, 0, 0, 1, 28, 0, 0, 21, 1, 0, 1, 1, 1, 0]' : 0.115847}", "{'[0, 4, 1, 1, 2, 0, 0, 1, 28, 0, 0, 21, 1, 0, 1, 1, 1, 0]' : 0.115713}", "{'[0, 4, 1, 1, 2, 0, 0, 1, 28, 0, 0, 21, 1, 0, 1, 1, 1, 0]' : 0.115751}", "{'[0, 4, 1, 1, 2, 0, 0, 1, 28, 0, 0, 21, 1, 0, 1, 1, 1, 0]' : 0.116007}", "{'[0, 4, 1, 1, 2, 0, 0, 1, 28, 0, 0, 21, 1, 0, 1, 1, 1, 0]' : 0.1161}", "{'[0, 4, 1, 1, 2, 0, 0, 1, 28, 0, 0, 21, 1, 0, 1, 1, 1, 0]' : 0.115932}", "{'[0, 4, 1, 1, 2, 0, 0, 1, 28, 0, 0, 21, 1, 0, 1, 1, 1, 0]' : 0.115838}", "{'[0, 4, 1, 1, 2, 0, 0, 1, 28, 0, 0, 21, 1, 0, 1, 1, 1, 0]' : 0.115931}", "{'[0, 4, 1, 1, 2, 0, 0, 1, 28, 0, 0, 21, 1, 0, 1, 1, 1, 0]' : 0.115916}", "{'[0, 4, 1, 1, 2, 0, 0, 1, 28, 0, 0, 21, 1, 0, 1, 1, 1, 0]' : 0.116027}", "{'[0, 4, 1, 1, 2, 0, 0, 1, 28, 0, 0, 21, 1, 0, 1, 1, 1, 0]' : 0.115877}", "{'[0, 4, 1, 1, 2, 0, 0, 1, 28, 0, 0, 21, 1, 0, 1, 1, 1, 0]' : 0.116137}"]
returning from 'run': {'[0, 4, 1, 1, 2, 0, 0, 1, 28, 0, 0, 21, 1, 0, 1, 1, 1, 0]': ([0.133365, 0.13347, 0.133203, 0.133155, 0.125666, 0.116002, 0.115812, 0.115852, 0.115797, 0.115844, 0.115803, 0.115809, 0.11609, 0.116117, 0.115752, 0.116033, 0.116138, 0.115786, 0.115847, 0.115713, 0.115751, 0.116007, 0.1161, 0.115932, 0.115838, 0.115931, 0.115916, 0.116027, 0.115877, 0.116137], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 4, 1, 1, 2, 0, 0, 1, 28, 0, 0, 21, 1, 0, 1, 1, 1, 0]': ([0.133365, 0.13347, 0.133203, 0.133155, 0.125666, 0.116002, 0.115812, 0.115852, 0.115797, 0.115844, 0.115803, 0.115809, 0.11609, 0.116117, 0.115752, 0.116033, 0.116138, 0.115786, 0.115847, 0.115713, 0.115751, 0.116007, 0.1161, 0.115932, 0.115838, 0.115931, 0.115916, 0.116027, 0.115877, 0.116137], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = iii
Code stats:
        Number of loops: 	25
        Max loop nest depth: 	5
        Additions: 		1410
        Multiplications: 	342
        Divisions: 		0
        Logical: 		0
        Reads: 			2219
        Writes: 		246
        Comparisons:		25
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest45.exe __orio_perftest45.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest45.exe  
Program Test Output: 
{'[6, 1, 2, 4, 1, 1, 1, 1, 7, 0, 25, 9, 1, 1, 0, 0, 0, 1]' : 0.120398}
{'[6, 1, 2, 4, 1, 1, 1, 1, 7, 0, 25, 9, 1, 1, 0, 0, 0, 1]' : 0.120428}
{'[6, 1, 2, 4, 1, 1, 1, 1, 7, 0, 25, 9, 1, 1, 0, 0, 0, 1]' : 0.113224}
{'[6, 1, 2, 4, 1, 1, 1, 1, 7, 0, 25, 9, 1, 1, 0, 0, 0, 1]' : 0.108049}
{'[6, 1, 2, 4, 1, 1, 1, 1, 7, 0, 25, 9, 1, 1, 0, 0, 0, 1]' : 0.108025}
{'[6, 1, 2, 4, 1, 1, 1, 1, 7, 0, 25, 9, 1, 1, 0, 0, 0, 1]' : 0.108156}
{'[6, 1, 2, 4, 1, 1, 1, 1, 7, 0, 25, 9, 1, 1, 0, 0, 0, 1]' : 0.107903}
{'[6, 1, 2, 4, 1, 1, 1, 1, 7, 0, 25, 9, 1, 1, 0, 0, 0, 1]' : 0.103228}
{'[6, 1, 2, 4, 1, 1, 1, 1, 7, 0, 25, 9, 1, 1, 0, 0, 0, 1]' : 0.101579}
{'[6, 1, 2, 4, 1, 1, 1, 1, 7, 0, 25, 9, 1, 1, 0, 0, 0, 1]' : 0.101591}
{'[6, 1, 2, 4, 1, 1, 1, 1, 7, 0, 25, 9, 1, 1, 0, 0, 0, 1]' : 0.104809}
{'[6, 1, 2, 4, 1, 1, 1, 1, 7, 0, 25, 9, 1, 1, 0, 0, 0, 1]' : 0.104708}
{'[6, 1, 2, 4, 1, 1, 1, 1, 7, 0, 25, 9, 1, 1, 0, 0, 0, 1]' : 0.104718}
{'[6, 1, 2, 4, 1, 1, 1, 1, 7, 0, 25, 9, 1, 1, 0, 0, 0, 1]' : 0.104743}
{'[6, 1, 2, 4, 1, 1, 1, 1, 7, 0, 25, 9, 1, 1, 0, 0, 0, 1]' : 0.105575}
{'[6, 1, 2, 4, 1, 1, 1, 1, 7, 0, 25, 9, 1, 1, 0, 0, 0, 1]' : 0.107995}
{'[6, 1, 2, 4, 1, 1, 1, 1, 7, 0, 25, 9, 1, 1, 0, 0, 0, 1]' : 0.105997}
{'[6, 1, 2, 4, 1, 1, 1, 1, 7, 0, 25, 9, 1, 1, 0, 0, 0, 1]' : 0.104922}
{'[6, 1, 2, 4, 1, 1, 1, 1, 7, 0, 25, 9, 1, 1, 0, 0, 0, 1]' : 0.104532}
{'[6, 1, 2, 4, 1, 1, 1, 1, 7, 0, 25, 9, 1, 1, 0, 0, 0, 1]' : 0.10494}
{'[6, 1, 2, 4, 1, 1, 1, 1, 7, 0, 25, 9, 1, 1, 0, 0, 0, 1]' : 0.103582}
{'[6, 1, 2, 4, 1, 1, 1, 1, 7, 0, 25, 9, 1, 1, 0, 0, 0, 1]' : 0.101809}
{'[6, 1, 2, 4, 1, 1, 1, 1, 7, 0, 25, 9, 1, 1, 0, 0, 0, 1]' : 0.101471}
{'[6, 1, 2, 4, 1, 1, 1, 1, 7, 0, 25, 9, 1, 1, 0, 0, 0, 1]' : 0.101717}
{'[6, 1, 2, 4, 1, 1, 1, 1, 7, 0, 25, 9, 1, 1, 0, 0, 0, 1]' : 0.103759}
{'[6, 1, 2, 4, 1, 1, 1, 1, 7, 0, 25, 9, 1, 1, 0, 0, 0, 1]' : 0.104682}
{'[6, 1, 2, 4, 1, 1, 1, 1, 7, 0, 25, 9, 1, 1, 0, 0, 0, 1]' : 0.104619}
{'[6, 1, 2, 4, 1, 1, 1, 1, 7, 0, 25, 9, 1, 1, 0, 0, 0, 1]' : 0.104823}
{'[6, 1, 2, 4, 1, 1, 1, 1, 7, 0, 25, 9, 1, 1, 0, 0, 0, 1]' : 0.104667}
{'[6, 1, 2, 4, 1, 1, 1, 1, 7, 0, 25, 9, 1, 1, 0, 0, 0, 1]' : 0.10493}

out:
 ["{'[6, 1, 2, 4, 1, 1, 1, 1, 7, 0, 25, 9, 1, 1, 0, 0, 0, 1]' : 0.120398}", "{'[6, 1, 2, 4, 1, 1, 1, 1, 7, 0, 25, 9, 1, 1, 0, 0, 0, 1]' : 0.120428}", "{'[6, 1, 2, 4, 1, 1, 1, 1, 7, 0, 25, 9, 1, 1, 0, 0, 0, 1]' : 0.113224}", "{'[6, 1, 2, 4, 1, 1, 1, 1, 7, 0, 25, 9, 1, 1, 0, 0, 0, 1]' : 0.108049}", "{'[6, 1, 2, 4, 1, 1, 1, 1, 7, 0, 25, 9, 1, 1, 0, 0, 0, 1]' : 0.108025}", "{'[6, 1, 2, 4, 1, 1, 1, 1, 7, 0, 25, 9, 1, 1, 0, 0, 0, 1]' : 0.108156}", "{'[6, 1, 2, 4, 1, 1, 1, 1, 7, 0, 25, 9, 1, 1, 0, 0, 0, 1]' : 0.107903}", "{'[6, 1, 2, 4, 1, 1, 1, 1, 7, 0, 25, 9, 1, 1, 0, 0, 0, 1]' : 0.103228}", "{'[6, 1, 2, 4, 1, 1, 1, 1, 7, 0, 25, 9, 1, 1, 0, 0, 0, 1]' : 0.101579}", "{'[6, 1, 2, 4, 1, 1, 1, 1, 7, 0, 25, 9, 1, 1, 0, 0, 0, 1]' : 0.101591}", "{'[6, 1, 2, 4, 1, 1, 1, 1, 7, 0, 25, 9, 1, 1, 0, 0, 0, 1]' : 0.104809}", "{'[6, 1, 2, 4, 1, 1, 1, 1, 7, 0, 25, 9, 1, 1, 0, 0, 0, 1]' : 0.104708}", "{'[6, 1, 2, 4, 1, 1, 1, 1, 7, 0, 25, 9, 1, 1, 0, 0, 0, 1]' : 0.104718}", "{'[6, 1, 2, 4, 1, 1, 1, 1, 7, 0, 25, 9, 1, 1, 0, 0, 0, 1]' : 0.104743}", "{'[6, 1, 2, 4, 1, 1, 1, 1, 7, 0, 25, 9, 1, 1, 0, 0, 0, 1]' : 0.105575}", "{'[6, 1, 2, 4, 1, 1, 1, 1, 7, 0, 25, 9, 1, 1, 0, 0, 0, 1]' : 0.107995}", "{'[6, 1, 2, 4, 1, 1, 1, 1, 7, 0, 25, 9, 1, 1, 0, 0, 0, 1]' : 0.105997}", "{'[6, 1, 2, 4, 1, 1, 1, 1, 7, 0, 25, 9, 1, 1, 0, 0, 0, 1]' : 0.104922}", "{'[6, 1, 2, 4, 1, 1, 1, 1, 7, 0, 25, 9, 1, 1, 0, 0, 0, 1]' : 0.104532}", "{'[6, 1, 2, 4, 1, 1, 1, 1, 7, 0, 25, 9, 1, 1, 0, 0, 0, 1]' : 0.10494}", "{'[6, 1, 2, 4, 1, 1, 1, 1, 7, 0, 25, 9, 1, 1, 0, 0, 0, 1]' : 0.103582}", "{'[6, 1, 2, 4, 1, 1, 1, 1, 7, 0, 25, 9, 1, 1, 0, 0, 0, 1]' : 0.101809}", "{'[6, 1, 2, 4, 1, 1, 1, 1, 7, 0, 25, 9, 1, 1, 0, 0, 0, 1]' : 0.101471}", "{'[6, 1, 2, 4, 1, 1, 1, 1, 7, 0, 25, 9, 1, 1, 0, 0, 0, 1]' : 0.101717}", "{'[6, 1, 2, 4, 1, 1, 1, 1, 7, 0, 25, 9, 1, 1, 0, 0, 0, 1]' : 0.103759}", "{'[6, 1, 2, 4, 1, 1, 1, 1, 7, 0, 25, 9, 1, 1, 0, 0, 0, 1]' : 0.104682}", "{'[6, 1, 2, 4, 1, 1, 1, 1, 7, 0, 25, 9, 1, 1, 0, 0, 0, 1]' : 0.104619}", "{'[6, 1, 2, 4, 1, 1, 1, 1, 7, 0, 25, 9, 1, 1, 0, 0, 0, 1]' : 0.104823}", "{'[6, 1, 2, 4, 1, 1, 1, 1, 7, 0, 25, 9, 1, 1, 0, 0, 0, 1]' : 0.104667}", "{'[6, 1, 2, 4, 1, 1, 1, 1, 7, 0, 25, 9, 1, 1, 0, 0, 0, 1]' : 0.10493}"]
returning from 'run': {'[6, 1, 2, 4, 1, 1, 1, 1, 7, 0, 25, 9, 1, 1, 0, 0, 0, 1]': ([0.120398, 0.120428, 0.113224, 0.108049, 0.108025, 0.108156, 0.107903, 0.103228, 0.101579, 0.101591, 0.104809, 0.104708, 0.104718, 0.104743, 0.105575, 0.107995, 0.105997, 0.104922, 0.104532, 0.10494, 0.103582, 0.101809, 0.101471, 0.101717, 0.103759, 0.104682, 0.104619, 0.104823, 0.104667, 0.10493], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 1, 2, 4, 1, 1, 1, 1, 7, 0, 25, 9, 1, 1, 0, 0, 0, 1]': ([0.120398, 0.120428, 0.113224, 0.108049, 0.108025, 0.108156, 0.107903, 0.103228, 0.101579, 0.101591, 0.104809, 0.104708, 0.104718, 0.104743, 0.105575, 0.107995, 0.105997, 0.104922, 0.104532, 0.10494, 0.103582, 0.101809, 0.101471, 0.101717, 0.103759, 0.104682, 0.104619, 0.104823, 0.104667, 0.10493], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	6
        Additions: 		482
        Multiplications: 	186
        Divisions: 		0
        Logical: 		0
        Reads: 			1053
        Writes: 		135
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest46.exe __orio_perftest46.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest46.exe  
Program Test Output: 
{'[2, 0, 1, 4, 2, 5, 0, 0, 3, 0, 29, 28, 0, 0, 2, 0, 1, 1]' : 0.278636}
{'[2, 0, 1, 4, 2, 5, 0, 0, 3, 0, 29, 28, 0, 0, 2, 0, 1, 1]' : 0.278292}
{'[2, 0, 1, 4, 2, 5, 0, 0, 3, 0, 29, 28, 0, 0, 2, 0, 1, 1]' : 0.243838}
{'[2, 0, 1, 4, 2, 5, 0, 0, 3, 0, 29, 28, 0, 0, 2, 0, 1, 1]' : 0.232917}
{'[2, 0, 1, 4, 2, 5, 0, 0, 3, 0, 29, 28, 0, 0, 2, 0, 1, 1]' : 0.23305}
{'[2, 0, 1, 4, 2, 5, 0, 0, 3, 0, 29, 28, 0, 0, 2, 0, 1, 1]' : 0.23287}
{'[2, 0, 1, 4, 2, 5, 0, 0, 3, 0, 29, 28, 0, 0, 2, 0, 1, 1]' : 0.232981}
{'[2, 0, 1, 4, 2, 5, 0, 0, 3, 0, 29, 28, 0, 0, 2, 0, 1, 1]' : 0.233034}
{'[2, 0, 1, 4, 2, 5, 0, 0, 3, 0, 29, 28, 0, 0, 2, 0, 1, 1]' : 0.233155}
{'[2, 0, 1, 4, 2, 5, 0, 0, 3, 0, 29, 28, 0, 0, 2, 0, 1, 1]' : 0.233287}
{'[2, 0, 1, 4, 2, 5, 0, 0, 3, 0, 29, 28, 0, 0, 2, 0, 1, 1]' : 0.233011}
{'[2, 0, 1, 4, 2, 5, 0, 0, 3, 0, 29, 28, 0, 0, 2, 0, 1, 1]' : 0.233226}
{'[2, 0, 1, 4, 2, 5, 0, 0, 3, 0, 29, 28, 0, 0, 2, 0, 1, 1]' : 0.233077}
{'[2, 0, 1, 4, 2, 5, 0, 0, 3, 0, 29, 28, 0, 0, 2, 0, 1, 1]' : 0.233296}
{'[2, 0, 1, 4, 2, 5, 0, 0, 3, 0, 29, 28, 0, 0, 2, 0, 1, 1]' : 0.233199}
{'[2, 0, 1, 4, 2, 5, 0, 0, 3, 0, 29, 28, 0, 0, 2, 0, 1, 1]' : 0.233056}
{'[2, 0, 1, 4, 2, 5, 0, 0, 3, 0, 29, 28, 0, 0, 2, 0, 1, 1]' : 0.23355}
{'[2, 0, 1, 4, 2, 5, 0, 0, 3, 0, 29, 28, 0, 0, 2, 0, 1, 1]' : 0.233509}
{'[2, 0, 1, 4, 2, 5, 0, 0, 3, 0, 29, 28, 0, 0, 2, 0, 1, 1]' : 0.233168}
{'[2, 0, 1, 4, 2, 5, 0, 0, 3, 0, 29, 28, 0, 0, 2, 0, 1, 1]' : 0.232974}
{'[2, 0, 1, 4, 2, 5, 0, 0, 3, 0, 29, 28, 0, 0, 2, 0, 1, 1]' : 0.232978}
{'[2, 0, 1, 4, 2, 5, 0, 0, 3, 0, 29, 28, 0, 0, 2, 0, 1, 1]' : 0.233177}
{'[2, 0, 1, 4, 2, 5, 0, 0, 3, 0, 29, 28, 0, 0, 2, 0, 1, 1]' : 0.23295}
{'[2, 0, 1, 4, 2, 5, 0, 0, 3, 0, 29, 28, 0, 0, 2, 0, 1, 1]' : 0.233014}
{'[2, 0, 1, 4, 2, 5, 0, 0, 3, 0, 29, 28, 0, 0, 2, 0, 1, 1]' : 0.232911}
{'[2, 0, 1, 4, 2, 5, 0, 0, 3, 0, 29, 28, 0, 0, 2, 0, 1, 1]' : 0.233192}
{'[2, 0, 1, 4, 2, 5, 0, 0, 3, 0, 29, 28, 0, 0, 2, 0, 1, 1]' : 0.233376}
{'[2, 0, 1, 4, 2, 5, 0, 0, 3, 0, 29, 28, 0, 0, 2, 0, 1, 1]' : 0.232892}
{'[2, 0, 1, 4, 2, 5, 0, 0, 3, 0, 29, 28, 0, 0, 2, 0, 1, 1]' : 0.232998}
{'[2, 0, 1, 4, 2, 5, 0, 0, 3, 0, 29, 28, 0, 0, 2, 0, 1, 1]' : 0.233182}

out:
 ["{'[2, 0, 1, 4, 2, 5, 0, 0, 3, 0, 29, 28, 0, 0, 2, 0, 1, 1]' : 0.278636}", "{'[2, 0, 1, 4, 2, 5, 0, 0, 3, 0, 29, 28, 0, 0, 2, 0, 1, 1]' : 0.278292}", "{'[2, 0, 1, 4, 2, 5, 0, 0, 3, 0, 29, 28, 0, 0, 2, 0, 1, 1]' : 0.243838}", "{'[2, 0, 1, 4, 2, 5, 0, 0, 3, 0, 29, 28, 0, 0, 2, 0, 1, 1]' : 0.232917}", "{'[2, 0, 1, 4, 2, 5, 0, 0, 3, 0, 29, 28, 0, 0, 2, 0, 1, 1]' : 0.23305}", "{'[2, 0, 1, 4, 2, 5, 0, 0, 3, 0, 29, 28, 0, 0, 2, 0, 1, 1]' : 0.23287}", "{'[2, 0, 1, 4, 2, 5, 0, 0, 3, 0, 29, 28, 0, 0, 2, 0, 1, 1]' : 0.232981}", "{'[2, 0, 1, 4, 2, 5, 0, 0, 3, 0, 29, 28, 0, 0, 2, 0, 1, 1]' : 0.233034}", "{'[2, 0, 1, 4, 2, 5, 0, 0, 3, 0, 29, 28, 0, 0, 2, 0, 1, 1]' : 0.233155}", "{'[2, 0, 1, 4, 2, 5, 0, 0, 3, 0, 29, 28, 0, 0, 2, 0, 1, 1]' : 0.233287}", "{'[2, 0, 1, 4, 2, 5, 0, 0, 3, 0, 29, 28, 0, 0, 2, 0, 1, 1]' : 0.233011}", "{'[2, 0, 1, 4, 2, 5, 0, 0, 3, 0, 29, 28, 0, 0, 2, 0, 1, 1]' : 0.233226}", "{'[2, 0, 1, 4, 2, 5, 0, 0, 3, 0, 29, 28, 0, 0, 2, 0, 1, 1]' : 0.233077}", "{'[2, 0, 1, 4, 2, 5, 0, 0, 3, 0, 29, 28, 0, 0, 2, 0, 1, 1]' : 0.233296}", "{'[2, 0, 1, 4, 2, 5, 0, 0, 3, 0, 29, 28, 0, 0, 2, 0, 1, 1]' : 0.233199}", "{'[2, 0, 1, 4, 2, 5, 0, 0, 3, 0, 29, 28, 0, 0, 2, 0, 1, 1]' : 0.233056}", "{'[2, 0, 1, 4, 2, 5, 0, 0, 3, 0, 29, 28, 0, 0, 2, 0, 1, 1]' : 0.23355}", "{'[2, 0, 1, 4, 2, 5, 0, 0, 3, 0, 29, 28, 0, 0, 2, 0, 1, 1]' : 0.233509}", "{'[2, 0, 1, 4, 2, 5, 0, 0, 3, 0, 29, 28, 0, 0, 2, 0, 1, 1]' : 0.233168}", "{'[2, 0, 1, 4, 2, 5, 0, 0, 3, 0, 29, 28, 0, 0, 2, 0, 1, 1]' : 0.232974}", "{'[2, 0, 1, 4, 2, 5, 0, 0, 3, 0, 29, 28, 0, 0, 2, 0, 1, 1]' : 0.232978}", "{'[2, 0, 1, 4, 2, 5, 0, 0, 3, 0, 29, 28, 0, 0, 2, 0, 1, 1]' : 0.233177}", "{'[2, 0, 1, 4, 2, 5, 0, 0, 3, 0, 29, 28, 0, 0, 2, 0, 1, 1]' : 0.23295}", "{'[2, 0, 1, 4, 2, 5, 0, 0, 3, 0, 29, 28, 0, 0, 2, 0, 1, 1]' : 0.233014}", "{'[2, 0, 1, 4, 2, 5, 0, 0, 3, 0, 29, 28, 0, 0, 2, 0, 1, 1]' : 0.232911}", "{'[2, 0, 1, 4, 2, 5, 0, 0, 3, 0, 29, 28, 0, 0, 2, 0, 1, 1]' : 0.233192}", "{'[2, 0, 1, 4, 2, 5, 0, 0, 3, 0, 29, 28, 0, 0, 2, 0, 1, 1]' : 0.233376}", "{'[2, 0, 1, 4, 2, 5, 0, 0, 3, 0, 29, 28, 0, 0, 2, 0, 1, 1]' : 0.232892}", "{'[2, 0, 1, 4, 2, 5, 0, 0, 3, 0, 29, 28, 0, 0, 2, 0, 1, 1]' : 0.232998}", "{'[2, 0, 1, 4, 2, 5, 0, 0, 3, 0, 29, 28, 0, 0, 2, 0, 1, 1]' : 0.233182}"]
returning from 'run': {'[2, 0, 1, 4, 2, 5, 0, 0, 3, 0, 29, 28, 0, 0, 2, 0, 1, 1]': ([0.278636, 0.278292, 0.243838, 0.232917, 0.23305, 0.23287, 0.232981, 0.233034, 0.233155, 0.233287, 0.233011, 0.233226, 0.233077, 0.233296, 0.233199, 0.233056, 0.23355, 0.233509, 0.233168, 0.232974, 0.232978, 0.233177, 0.23295, 0.233014, 0.232911, 0.233192, 0.233376, 0.232892, 0.232998, 0.233182], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 0, 1, 4, 2, 5, 0, 0, 3, 0, 29, 28, 0, 0, 2, 0, 1, 1]': ([0.278636, 0.278292, 0.243838, 0.232917, 0.23305, 0.23287, 0.232981, 0.233034, 0.233155, 0.233287, 0.233011, 0.233226, 0.233077, 0.233296, 0.233199, 0.233056, 0.23355, 0.233509, 0.233168, 0.232974, 0.232978, 0.233177, 0.23295, 0.233014, 0.232911, 0.233192, 0.233376, 0.232892, 0.232998, 0.233182], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Complete design, with measurements:
     T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
84      6    2    6    5    0    5       0       0    0   0  29   9    0    1
217     3    1    1    1    6    1       0       0   24   0  19   0    2    0
336     6    2    0    5    6    1       0       1    3   8   0   3    0    1
353     1    0    1    2    2    3       0       1    9   6  22   0    0    0
472     6    0    0    5    5    6       0       1    0  29   4   0    0    2
639     2    0    0    1    0    2       1       0   22   6   0  25    1    1
968     6    5    2    0    3    1       0       1   28  13   1   0    2    0
1035    1    3    6    0    2    6       0       0   22  10   0   2    1    1
1214    6    4    6    0    5    6       1       1   24   8   0   0    0    0
1236    1    0    6    6    5    0       0       0   21  28   0   3    2    0
1540    0    1    6    6    5    6       1       0    9   8   0   7    1    0
1619    4    1    0    0    6    4       0       0   16   0  13  29    2    0
1677    0    6    6    0    5    4       1       1    0   0  23  28    0    0
1837    0    6    1    6    6    0       0       0   26   2  10   0    1    0
1960    0    0    0    5    2    6       0       1    6   0   3   0    2    0
2151    6    6    4    0    5    0       1       1    2  28   0  27    1    0
2166    2    6    0    5    4    1       1       1   13   0  29  13    0    0
2383    4    5    6    6    0    6       0       0    8   6   0  27    2    0
2542    0    3    0    3    3    1       0       0   24  26   2   0    1    0
2562    1    3    4    5    1    0       1       1    6  12   8   0    0    1
2591    4    1    5    5    6    0       0       1   27   0  28   0    0    0
2701    0    5    1    1    5    2       0       0    0   0   9  24    0    1
2711    5    5    2    0    0    2       0       0    7  19  25   0    0    0
3142    4    6    5    5    0    0       0       1   25  29  29   0    0    2
3161    5    0    4    0    2    2       1       1    0   0  27   0    1    1
3174    0    0    6    2    6    0       1       1    2  16  20   0    2    0
3352    0    2    2    0    0    6       1       1   26  26  12   0    0    1
3385    6    0    5    6    5    6       1       0   29   1   9   0    2    0
3593    3    3    0    1    0    0       1       1    0   0  26   4    1    0
3729    0    6    0    2    0    6       1       0   24   3   0   3    0    1
3738    1    6    4    5    4    6       1       0    2  26   0  12    0    0
4006    2    1    1    6    2    0       1       1    0   7   0   8    2    0
4048    6    0    0    0    6    1       1       0   28   0   6   7    0    1
4092    4    4    0    0    6    5       1       1   28   6  28   0    1    1
4416    1    0    6    2    2    0       1       0   15   0   7  28    0    0
4418    1    6    6    1    0    6       0       1    7   0   2  13    1    0
4505    0    4    1    1    2    0       0       1   28   0   0  21    1    0
4553    6    1    2    4    1    1       1       1    7   0  25   9    1    1
4557    2    0    1    4    2    5       0       0    3   0  29  28    0    0
     RT_K SCR VEC1 VEC2  cost_mean
84      1   0    0    0 0.20769260
217     0   0    0    1 0.18418047
336     1   1    1    0 0.14930767
353     1   0    0    0 0.21302023
472     0   0    1    0 0.25716047
639     0   0    0    0 0.11223353
968     0   0    0    1 0.17585760
1035    0   1    1    0 0.09880807
1214    0   0    0    0 0.15271513
1236    0   0    0    1 0.15153073
1540    1   0    1    1 0.10757847
1619    0   0    1    1 0.33656113
1677    0   0    1    0 0.24503480
1837    0   1    0    0 0.11055257
1960    0   0    0    0 0.18813440
2151    1   0    1    0 0.11918833
2166    0   0    1    0 0.26317490
2383    0   0    1    1 0.18526943
2542    1   0    1    0 0.10916407
2562    0   1    1    1 0.19166000
2591    0   1    0    0 0.20765540
2701    1   0    0    0 0.23943130
2711    0   1    1    1 0.13944340
3142    0   1    0    0 0.27450580
3161    0   1    1    1 0.10369883
3174    0   1    1    0 0.21977257
3352    1   1    1    0 0.26691690
3385    0   1    1    0 0.18918627
3593    1   0    1    1 0.12509160
3729    0   0    1    1 0.13808233
3738    2   1    0    0 0.18382037
4006    0   1    0    1 0.17243043
4048    1   1    1    0 0.18541173
4092    0   0    0    1 0.10074680
4416    2   0    1    0 0.22015957
4418    0   1    0    0 0.10186967
4505    1   1    1    0 0.11855900
4553    0   0    0    1 0.10605263
4557    2   0    1    1 0.23649320

Heteroscedasticity Test p-value: 0.0812965144338
Regression Step:                Df  Sum Sq Mean Sq F value   Pr(>F)    
T1_I             1 0.00000 0.00000   0.000 0.996203    
T1_J             1 0.00187 0.00187   1.640 0.241092    
T1_K             1 0.00007 0.00007   0.060 0.812850    
T2_I             1 0.00110 0.00110   0.967 0.358096    
T2_J             1 0.00204 0.00204   1.793 0.222448    
T2_K             1 0.00112 0.00112   0.984 0.354360    
ACOPY_x          1 0.00204 0.00204   1.795 0.222232    
ACOPY_y          1 0.00158 0.00158   1.390 0.276904    
U1_I             1 0.00159 0.00159   1.397 0.275882    
U_I              1 0.00054 0.00054   0.475 0.513003    
U_J              1 0.01654 0.01654  14.538 0.006603 ** 
U_K              1 0.02281 0.02281  20.048 0.002875 ** 
RT_I             1 0.00262 0.00262   2.307 0.172556    
RT_J             1 0.00030 0.00030   0.260 0.625564    
RT_K             1 0.00191 0.00191   1.681 0.235870    
SCR              1 0.00048 0.00048   0.425 0.535202    
VEC1             1 0.00055 0.00055   0.481 0.510236    
VEC2             1 0.00067 0.00067   0.586 0.468890    
I(1/(1 + T1_I))  1 0.00007 0.00007   0.060 0.813671    
I(1/(1 + T1_J))  1 0.00002 0.00002   0.020 0.891292    
I(1/(1 + T1_K))  1 0.00113 0.00113   0.994 0.351996    
I(1/(1 + T2_I))  1 0.00013 0.00013   0.117 0.742324    
I(1/(1 + T2_J))  1 0.00250 0.00250   2.197 0.181832    
I(1/(1 + T2_K))  1 0.00007 0.00007   0.060 0.813282    
I(1/(1 + U1_I))  1 0.00107 0.00107   0.944 0.363580    
I(1/(1 + U_I))   1 0.00265 0.00265   2.329 0.170784    
I(1/(1 + U_J))   1 0.01232 0.01232  10.831 0.013283 *  
I(1/(1 + U_K))   1 0.00002 0.00002   0.021 0.888026    
I(1/(1 + RT_I))  1 0.04796 0.04796  42.160 0.000336 ***
I(1/(1 + RT_J))  1 0.00296 0.00296   2.604 0.150631    
I(1/(1 + RT_K))  1 0.00028 0.00028   0.250 0.632438    
Residuals        7 0.00796 0.00114                     
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Predicting Best
Generating valid search space of size 4600 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Valid coordinates: 920
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Valid coordinates: 1840
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Tested coordinates: 110000
Valid coordinates: 2760
Tested coordinates: 120000
Tested coordinates: 130000
Tested coordinates: 140000
Tested coordinates: 150000
Valid coordinates: 3680
Tested coordinates: 160000
Tested coordinates: 170000
Tested coordinates: 180000
Valid coordinates: 4600
Valid/Tested configurations: 4600/187397
Generated Search Space:
NULL
Identical predictions (tol = 1e-5): 1
Getting Best from Design
Response: ['cost_mean']
Design Names:  [1] "T1_I"      "T1_J"      "T1_K"      "T2_I"      "T2_J"      "T2_K"     
 [7] "ACOPY_x"   "ACOPY_y"   "U1_I"      "U_I"       "U_J"       "U_K"      
[13] "RT_I"      "RT_J"      "RT_K"      "SCR"       "VEC1"      "VEC2"     
[19] "cost_mean"

Design Response:       cost_mean
84   0.20769260
217  0.18418047
336  0.14930767
353  0.21302023
472  0.25716047
639  0.11223353
968  0.17585760
1035 0.09880807
1214 0.15271513
1236 0.15153073
1540 0.10757847
1619 0.33656113
1677 0.24503480
1837 0.11055257
1960 0.18813440
2151 0.11918833
2166 0.26317490
2383 0.18526943
2542 0.10916407
2562 0.19166000
2591 0.20765540
2701 0.23943130
2711 0.13944340
3142 0.27450580
3161 0.10369883
3174 0.21977257
3352 0.26691690
3385 0.18918627
3593 0.12509160
3729 0.13808233
3738 0.18382037
4006 0.17243043
4048 0.18541173
4092 0.10074680
4416 0.22015957
4418 0.10186967
4505 0.11855900
4553 0.10605263
4557 0.23649320

Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Getting fixed variables
Pruning Model
Best Predicted:      T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
2817    6    6    3    4    0    2       0       0   25   3   0   4    1    1
     RT_K SCR VEC1 VEC2
2817    0   1    0    1

Best From Design: [1, 3, 6, 0, 2, 6, 0, 0, 22, 10, 0, 2, 1, 1, 0, 1, 1, 0]
Pruned Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Fixed Factors: {'U_K': 4, 'U_J': 0}
Length of requested configs: 1
Result was on Database, Returning Now
Starting Point (-O3):
0.16283083333333334
Predicted Best Point:
[6, 6, 3, 4, 0, 2, 0, 0, 25, 3, 0, 4, 1, 1, 0, 1, 0, 1]
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = iii
Code stats:
        Number of loops: 	27
        Max loop nest depth: 	5
        Additions: 		892
        Multiplications: 	390
        Divisions: 		0
        Logical: 		0
        Reads: 			1893
        Writes: 		377
        Comparisons:		27
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest47.exe __orio_perftest47.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest47.exe  
Program Test Output: 
{'[6, 6, 3, 4, 0, 2, 0, 0, 25, 3, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.107475}
{'[6, 6, 3, 4, 0, 2, 0, 0, 25, 3, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.107537}
{'[6, 6, 3, 4, 0, 2, 0, 0, 25, 3, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.10739}
{'[6, 6, 3, 4, 0, 2, 0, 0, 25, 3, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.107014}
{'[6, 6, 3, 4, 0, 2, 0, 0, 25, 3, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0987689}
{'[6, 6, 3, 4, 0, 2, 0, 0, 25, 3, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.098146}
{'[6, 6, 3, 4, 0, 2, 0, 0, 25, 3, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.09812}
{'[6, 6, 3, 4, 0, 2, 0, 0, 25, 3, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0981469}
{'[6, 6, 3, 4, 0, 2, 0, 0, 25, 3, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0981479}
{'[6, 6, 3, 4, 0, 2, 0, 0, 25, 3, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0981419}
{'[6, 6, 3, 4, 0, 2, 0, 0, 25, 3, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.098294}
{'[6, 6, 3, 4, 0, 2, 0, 0, 25, 3, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0981798}
{'[6, 6, 3, 4, 0, 2, 0, 0, 25, 3, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0981121}
{'[6, 6, 3, 4, 0, 2, 0, 0, 25, 3, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0985801}
{'[6, 6, 3, 4, 0, 2, 0, 0, 25, 3, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0981882}
{'[6, 6, 3, 4, 0, 2, 0, 0, 25, 3, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.098139}
{'[6, 6, 3, 4, 0, 2, 0, 0, 25, 3, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0982809}
{'[6, 6, 3, 4, 0, 2, 0, 0, 25, 3, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0981431}
{'[6, 6, 3, 4, 0, 2, 0, 0, 25, 3, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0981071}
{'[6, 6, 3, 4, 0, 2, 0, 0, 25, 3, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0981541}
{'[6, 6, 3, 4, 0, 2, 0, 0, 25, 3, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.098125}
{'[6, 6, 3, 4, 0, 2, 0, 0, 25, 3, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0981829}
{'[6, 6, 3, 4, 0, 2, 0, 0, 25, 3, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0960331}
{'[6, 6, 3, 4, 0, 2, 0, 0, 25, 3, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0959141}
{'[6, 6, 3, 4, 0, 2, 0, 0, 25, 3, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.095865}
{'[6, 6, 3, 4, 0, 2, 0, 0, 25, 3, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.095829}
{'[6, 6, 3, 4, 0, 2, 0, 0, 25, 3, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0959339}
{'[6, 6, 3, 4, 0, 2, 0, 0, 25, 3, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0958209}
{'[6, 6, 3, 4, 0, 2, 0, 0, 25, 3, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.095778}
{'[6, 6, 3, 4, 0, 2, 0, 0, 25, 3, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0958409}

out:
 ["{'[6, 6, 3, 4, 0, 2, 0, 0, 25, 3, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.107475}", "{'[6, 6, 3, 4, 0, 2, 0, 0, 25, 3, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.107537}", "{'[6, 6, 3, 4, 0, 2, 0, 0, 25, 3, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.10739}", "{'[6, 6, 3, 4, 0, 2, 0, 0, 25, 3, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.107014}", "{'[6, 6, 3, 4, 0, 2, 0, 0, 25, 3, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0987689}", "{'[6, 6, 3, 4, 0, 2, 0, 0, 25, 3, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.098146}", "{'[6, 6, 3, 4, 0, 2, 0, 0, 25, 3, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.09812}", "{'[6, 6, 3, 4, 0, 2, 0, 0, 25, 3, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0981469}", "{'[6, 6, 3, 4, 0, 2, 0, 0, 25, 3, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0981479}", "{'[6, 6, 3, 4, 0, 2, 0, 0, 25, 3, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0981419}", "{'[6, 6, 3, 4, 0, 2, 0, 0, 25, 3, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.098294}", "{'[6, 6, 3, 4, 0, 2, 0, 0, 25, 3, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0981798}", "{'[6, 6, 3, 4, 0, 2, 0, 0, 25, 3, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0981121}", "{'[6, 6, 3, 4, 0, 2, 0, 0, 25, 3, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0985801}", "{'[6, 6, 3, 4, 0, 2, 0, 0, 25, 3, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0981882}", "{'[6, 6, 3, 4, 0, 2, 0, 0, 25, 3, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.098139}", "{'[6, 6, 3, 4, 0, 2, 0, 0, 25, 3, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0982809}", "{'[6, 6, 3, 4, 0, 2, 0, 0, 25, 3, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0981431}", "{'[6, 6, 3, 4, 0, 2, 0, 0, 25, 3, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0981071}", "{'[6, 6, 3, 4, 0, 2, 0, 0, 25, 3, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0981541}", "{'[6, 6, 3, 4, 0, 2, 0, 0, 25, 3, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.098125}", "{'[6, 6, 3, 4, 0, 2, 0, 0, 25, 3, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0981829}", "{'[6, 6, 3, 4, 0, 2, 0, 0, 25, 3, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0960331}", "{'[6, 6, 3, 4, 0, 2, 0, 0, 25, 3, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0959141}", "{'[6, 6, 3, 4, 0, 2, 0, 0, 25, 3, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.095865}", "{'[6, 6, 3, 4, 0, 2, 0, 0, 25, 3, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.095829}", "{'[6, 6, 3, 4, 0, 2, 0, 0, 25, 3, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0959339}", "{'[6, 6, 3, 4, 0, 2, 0, 0, 25, 3, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0958209}", "{'[6, 6, 3, 4, 0, 2, 0, 0, 25, 3, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.095778}", "{'[6, 6, 3, 4, 0, 2, 0, 0, 25, 3, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0958409}"]
returning from 'run': {'[6, 6, 3, 4, 0, 2, 0, 0, 25, 3, 0, 4, 1, 1, 0, 1, 0, 1]': ([0.107475, 0.107537, 0.10739, 0.107014, 0.0987689, 0.098146, 0.09812, 0.0981469, 0.0981479, 0.0981419, 0.098294, 0.0981798, 0.0981121, 0.0985801, 0.0981882, 0.098139, 0.0982809, 0.0981431, 0.0981071, 0.0981541, 0.098125, 0.0981829, 0.0960331, 0.0959141, 0.095865, 0.095829, 0.0959339, 0.0958209, 0.095778, 0.0958409], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 3, 4, 0, 2, 0, 0, 25, 3, 0, 4, 1, 1, 0, 1, 0, 1]': ([0.107475, 0.107537, 0.10739, 0.107014, 0.0987689, 0.098146, 0.09812, 0.0981469, 0.0981479, 0.0981419, 0.098294, 0.0981798, 0.0981121, 0.0985801, 0.0981882, 0.098139, 0.0982809, 0.0981431, 0.0981071, 0.0981541, 0.098125, 0.0981829, 0.0960331, 0.0959141, 0.095865, 0.095829, 0.0959339, 0.0958209, 0.095778, 0.0958409], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Design Best Point:
[1, 3, 6, 0, 2, 6, 0, 0, 22, 10, 0, 2, 1, 1, 0, 1, 1, 0]
Length of requested configs: 1
Result was on Database, Returning Now
Fixed Factors: {'U_K': 4, 'U_J': 0}
Slowdown (Design Best): 0.6068142704340392
Slowdown (Predicted Best): 0.6068442811302118
Budget: 39/180
Updating Global Best: 0.09880807333333332
Current Best Point: 
[1, 3, 6, 0, 2, 6, 0, 0, 22, 10, 0, 2, 1, 1, 0, 1, 1, 0]
Step 1
Generating valid search space of size 4000 (does not spend evaluations)
Valid coordinates: 800
Valid coordinates: 1600
Valid coordinates: 2400
Tested coordinates: 10000
Valid coordinates: 3200
Valid coordinates: 4000
Valid/Tested configurations: 4000/16071
Generated Search Space:
NULL
Clean Info:
Removed Factors: character(0)

Removed Inverse Factors: [1] "ACOPY_x" "ACOPY_y" "SCR"     "VEC1"    "VEC2"   

New Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
New Inverse Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'RT_I', 'RT_J', 'RT_K']
New Fixed Factors: {'U_K': 4, 'U_J': 0}
Full Model:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Fixed Factors: {'U_K': 4, 'U_J': 0}
Computing D-Optimal Design
Computing D-Optimal Design with 40 experiments
Design Formula:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Starting "optFederov" run
Using Search Space:
NULL
Data Dimensions: [1] 4000   16

     T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I RT_I RT_J RT_K SCR
37      0    2    2    5    6    0       1       0   23  10    0    0    0   1
220     6    3    4    6    4    0       0       0    8   1    0    2    0   0
232     0    1    3    3    5    6       0       1   11  29    1    0    1   0
270     1    2    6    6    0    0       1       0    2   7    0    2    0   0
432     3    1    5    1    2    6       1       0    3   0    1    1    0   0
554     6    6    6    6    0    4       0       1    4   2    0    0    0   0
580     6    0    1    0    0    0       1       1   26  16    0    1    1   1
598     6    2    0    0    6    3       0       1    6  18    1    1    0   1
606     0    6    0    1    6    2       1       0   28   0    1    0    1   1
667     1    0    0    2    4    0       0       1    7  29    0    1    1   1
691     1    3    6    0    6    0       1       1   10   4    2    0    0   0
720     3    3    0    3    1    2       0       0    3   0    0    0    1   1
839     0    3    1    6    3    2       1       1    8   3    1    0    1   0
938     2    6    1    5    0    0       1       0    8  22    0    0    2   0
950     5    6    0    5    6    5       0       0   28  29    1    1    0   0
1177    6    0    6    5    6    6       1       1   29   0    0    0    1   0
1226    0    6    6    1    6    0       0       1   22  12    0    0    2   1
1563    0    1    0    0    0    6       1       0   13  23    0    2    0   1
1643    3    5    6    5    4    5       1       0   26  22    0    1    1   1
1717    0    0    2    2    2    0       1       0    5  26    1    0    0   1
2038    3    0    2    6    2    2       1       0    8  25    2    0    0   1
2247    1    0    1    1    0    5       0       0    1   4    2    0    0   0
2261    3    5    6    1    0    4       0       1   28   4    1    0    1   0
2270    1    6    1    0    4    6       0       1   20  19    0    2    0   1
2283    0    0    4    6    1    0       0       1   27  29    0    1    0   1
2303    6    3    2    5    5    1       1       1    0  28    0    2    0   0
2526    3    4    2    2    2    2       1       1   27  17    0    0    2   1
2558    6    2    6    0    2    6       0       0   24  29    2    0    0   1
2713    1    0    0    0    1    3       0       0    0   8    1    0    1   0
2748    2    0    0    6    0    4       1       1   13   0    0    0    2   0
2947    4    2    6    0    5    0       1       0   13  29    0    2    0   0
3123    3    1    0    5    2    0       1       1   19  12    2    0    0   0
3135    0    2    1    6    2    6       0       1    3   1    0    0    2   1
3303    0    5    2    0    6    1       1       1    0   0    2    0    0   1
3368    1    1    0    0    5    2       0       1    6  24    0    0    0   0
3592    0    0    6    3    1    4       0       1    4   0    0    2    0   0
3626    5    1    4    0    1    0       0       0    0   8    0    0    2   0
3773    2    5    6    2    0    6       1       1    0  22    0    0    0   1
3853    6    0    6    5    6    6       1       1    0  22    1    0    1   1
3913    2    1    3    5    0    1       0       1   25   5    1    0    0   1
     VEC1 VEC2
37      1    1
220     0    1
232     1    0
270     0    0
432     1    1
554     1    0
580     1    0
598     0    1
606     0    0
667     0    1
691     0    0
720     1    0
839     1    1
938     0    1
950     1    1
1177    1    1
1226    1    1
1563    0    1
1643    0    0
1717    0    0
2038    1    0
2247    1    0
2261    0    1
2270    1    1
2283    1    1
2303    0    0
2526    0    1
2558    0    1
2713    0    0
2748    0    1
2947    1    1
3123    1    0
3135    0    0
3303    0    0
3368    0    0
3592    0    1
3626    0    0
3773    0    0
3853    1    1
3913    0    0

D-Efficiency Approximation: [1] 0.424

Measuring design of size 40
Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Length of requested configs: 1
Code stats:
        Number of loops: 	29
        Max loop nest depth: 	5
        Additions: 		472
        Multiplications: 	168
        Divisions: 		0
        Logical: 		0
        Reads: 			1085
        Writes: 		251
        Comparisons:		29
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest48.exe __orio_perftest48.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest48.exe  
Program Test Output: 
{'[0, 2, 2, 5, 6, 0, 1, 0, 23, 10, 0, 4, 0, 0, 0, 1, 1, 1]' : 0.155554}
{'[0, 2, 2, 5, 6, 0, 1, 0, 23, 10, 0, 4, 0, 0, 0, 1, 1, 1]' : 0.15558}
{'[0, 2, 2, 5, 6, 0, 1, 0, 23, 10, 0, 4, 0, 0, 0, 1, 1, 1]' : 0.155608}
{'[0, 2, 2, 5, 6, 0, 1, 0, 23, 10, 0, 4, 0, 0, 0, 1, 1, 1]' : 0.153521}
{'[0, 2, 2, 5, 6, 0, 1, 0, 23, 10, 0, 4, 0, 0, 0, 1, 1, 1]' : 0.134106}
{'[0, 2, 2, 5, 6, 0, 1, 0, 23, 10, 0, 4, 0, 0, 0, 1, 1, 1]' : 0.133048}
{'[0, 2, 2, 5, 6, 0, 1, 0, 23, 10, 0, 4, 0, 0, 0, 1, 1, 1]' : 0.13321}
{'[0, 2, 2, 5, 6, 0, 1, 0, 23, 10, 0, 4, 0, 0, 0, 1, 1, 1]' : 0.13313}
{'[0, 2, 2, 5, 6, 0, 1, 0, 23, 10, 0, 4, 0, 0, 0, 1, 1, 1]' : 0.13293}
{'[0, 2, 2, 5, 6, 0, 1, 0, 23, 10, 0, 4, 0, 0, 0, 1, 1, 1]' : 0.133157}
{'[0, 2, 2, 5, 6, 0, 1, 0, 23, 10, 0, 4, 0, 0, 0, 1, 1, 1]' : 0.133075}
{'[0, 2, 2, 5, 6, 0, 1, 0, 23, 10, 0, 4, 0, 0, 0, 1, 1, 1]' : 0.133187}
{'[0, 2, 2, 5, 6, 0, 1, 0, 23, 10, 0, 4, 0, 0, 0, 1, 1, 1]' : 0.13298}
{'[0, 2, 2, 5, 6, 0, 1, 0, 23, 10, 0, 4, 0, 0, 0, 1, 1, 1]' : 0.132921}
{'[0, 2, 2, 5, 6, 0, 1, 0, 23, 10, 0, 4, 0, 0, 0, 1, 1, 1]' : 0.132903}
{'[0, 2, 2, 5, 6, 0, 1, 0, 23, 10, 0, 4, 0, 0, 0, 1, 1, 1]' : 0.133452}
{'[0, 2, 2, 5, 6, 0, 1, 0, 23, 10, 0, 4, 0, 0, 0, 1, 1, 1]' : 0.132982}
{'[0, 2, 2, 5, 6, 0, 1, 0, 23, 10, 0, 4, 0, 0, 0, 1, 1, 1]' : 0.132973}
{'[0, 2, 2, 5, 6, 0, 1, 0, 23, 10, 0, 4, 0, 0, 0, 1, 1, 1]' : 0.132939}
{'[0, 2, 2, 5, 6, 0, 1, 0, 23, 10, 0, 4, 0, 0, 0, 1, 1, 1]' : 0.133128}
{'[0, 2, 2, 5, 6, 0, 1, 0, 23, 10, 0, 4, 0, 0, 0, 1, 1, 1]' : 0.132858}
{'[0, 2, 2, 5, 6, 0, 1, 0, 23, 10, 0, 4, 0, 0, 0, 1, 1, 1]' : 0.132864}
{'[0, 2, 2, 5, 6, 0, 1, 0, 23, 10, 0, 4, 0, 0, 0, 1, 1, 1]' : 0.133009}
{'[0, 2, 2, 5, 6, 0, 1, 0, 23, 10, 0, 4, 0, 0, 0, 1, 1, 1]' : 0.13321}
{'[0, 2, 2, 5, 6, 0, 1, 0, 23, 10, 0, 4, 0, 0, 0, 1, 1, 1]' : 0.133215}
{'[0, 2, 2, 5, 6, 0, 1, 0, 23, 10, 0, 4, 0, 0, 0, 1, 1, 1]' : 0.133149}
{'[0, 2, 2, 5, 6, 0, 1, 0, 23, 10, 0, 4, 0, 0, 0, 1, 1, 1]' : 0.132929}
{'[0, 2, 2, 5, 6, 0, 1, 0, 23, 10, 0, 4, 0, 0, 0, 1, 1, 1]' : 0.133186}
{'[0, 2, 2, 5, 6, 0, 1, 0, 23, 10, 0, 4, 0, 0, 0, 1, 1, 1]' : 0.133157}
{'[0, 2, 2, 5, 6, 0, 1, 0, 23, 10, 0, 4, 0, 0, 0, 1, 1, 1]' : 0.133051}

out:
 ["{'[0, 2, 2, 5, 6, 0, 1, 0, 23, 10, 0, 4, 0, 0, 0, 1, 1, 1]' : 0.155554}", "{'[0, 2, 2, 5, 6, 0, 1, 0, 23, 10, 0, 4, 0, 0, 0, 1, 1, 1]' : 0.15558}", "{'[0, 2, 2, 5, 6, 0, 1, 0, 23, 10, 0, 4, 0, 0, 0, 1, 1, 1]' : 0.155608}", "{'[0, 2, 2, 5, 6, 0, 1, 0, 23, 10, 0, 4, 0, 0, 0, 1, 1, 1]' : 0.153521}", "{'[0, 2, 2, 5, 6, 0, 1, 0, 23, 10, 0, 4, 0, 0, 0, 1, 1, 1]' : 0.134106}", "{'[0, 2, 2, 5, 6, 0, 1, 0, 23, 10, 0, 4, 0, 0, 0, 1, 1, 1]' : 0.133048}", "{'[0, 2, 2, 5, 6, 0, 1, 0, 23, 10, 0, 4, 0, 0, 0, 1, 1, 1]' : 0.13321}", "{'[0, 2, 2, 5, 6, 0, 1, 0, 23, 10, 0, 4, 0, 0, 0, 1, 1, 1]' : 0.13313}", "{'[0, 2, 2, 5, 6, 0, 1, 0, 23, 10, 0, 4, 0, 0, 0, 1, 1, 1]' : 0.13293}", "{'[0, 2, 2, 5, 6, 0, 1, 0, 23, 10, 0, 4, 0, 0, 0, 1, 1, 1]' : 0.133157}", "{'[0, 2, 2, 5, 6, 0, 1, 0, 23, 10, 0, 4, 0, 0, 0, 1, 1, 1]' : 0.133075}", "{'[0, 2, 2, 5, 6, 0, 1, 0, 23, 10, 0, 4, 0, 0, 0, 1, 1, 1]' : 0.133187}", "{'[0, 2, 2, 5, 6, 0, 1, 0, 23, 10, 0, 4, 0, 0, 0, 1, 1, 1]' : 0.13298}", "{'[0, 2, 2, 5, 6, 0, 1, 0, 23, 10, 0, 4, 0, 0, 0, 1, 1, 1]' : 0.132921}", "{'[0, 2, 2, 5, 6, 0, 1, 0, 23, 10, 0, 4, 0, 0, 0, 1, 1, 1]' : 0.132903}", "{'[0, 2, 2, 5, 6, 0, 1, 0, 23, 10, 0, 4, 0, 0, 0, 1, 1, 1]' : 0.133452}", "{'[0, 2, 2, 5, 6, 0, 1, 0, 23, 10, 0, 4, 0, 0, 0, 1, 1, 1]' : 0.132982}", "{'[0, 2, 2, 5, 6, 0, 1, 0, 23, 10, 0, 4, 0, 0, 0, 1, 1, 1]' : 0.132973}", "{'[0, 2, 2, 5, 6, 0, 1, 0, 23, 10, 0, 4, 0, 0, 0, 1, 1, 1]' : 0.132939}", "{'[0, 2, 2, 5, 6, 0, 1, 0, 23, 10, 0, 4, 0, 0, 0, 1, 1, 1]' : 0.133128}", "{'[0, 2, 2, 5, 6, 0, 1, 0, 23, 10, 0, 4, 0, 0, 0, 1, 1, 1]' : 0.132858}", "{'[0, 2, 2, 5, 6, 0, 1, 0, 23, 10, 0, 4, 0, 0, 0, 1, 1, 1]' : 0.132864}", "{'[0, 2, 2, 5, 6, 0, 1, 0, 23, 10, 0, 4, 0, 0, 0, 1, 1, 1]' : 0.133009}", "{'[0, 2, 2, 5, 6, 0, 1, 0, 23, 10, 0, 4, 0, 0, 0, 1, 1, 1]' : 0.13321}", "{'[0, 2, 2, 5, 6, 0, 1, 0, 23, 10, 0, 4, 0, 0, 0, 1, 1, 1]' : 0.133215}", "{'[0, 2, 2, 5, 6, 0, 1, 0, 23, 10, 0, 4, 0, 0, 0, 1, 1, 1]' : 0.133149}", "{'[0, 2, 2, 5, 6, 0, 1, 0, 23, 10, 0, 4, 0, 0, 0, 1, 1, 1]' : 0.132929}", "{'[0, 2, 2, 5, 6, 0, 1, 0, 23, 10, 0, 4, 0, 0, 0, 1, 1, 1]' : 0.133186}", "{'[0, 2, 2, 5, 6, 0, 1, 0, 23, 10, 0, 4, 0, 0, 0, 1, 1, 1]' : 0.133157}", "{'[0, 2, 2, 5, 6, 0, 1, 0, 23, 10, 0, 4, 0, 0, 0, 1, 1, 1]' : 0.133051}"]
returning from 'run': {'[0, 2, 2, 5, 6, 0, 1, 0, 23, 10, 0, 4, 0, 0, 0, 1, 1, 1]': ([0.155554, 0.15558, 0.155608, 0.153521, 0.134106, 0.133048, 0.13321, 0.13313, 0.13293, 0.133157, 0.133075, 0.133187, 0.13298, 0.132921, 0.132903, 0.133452, 0.132982, 0.132973, 0.132939, 0.133128, 0.132858, 0.132864, 0.133009, 0.13321, 0.133215, 0.133149, 0.132929, 0.133186, 0.133157, 0.133051], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 2, 5, 6, 0, 1, 0, 23, 10, 0, 4, 0, 0, 0, 1, 1, 1]': ([0.155554, 0.15558, 0.155608, 0.153521, 0.134106, 0.133048, 0.13321, 0.13313, 0.13293, 0.133157, 0.133075, 0.133187, 0.13298, 0.132921, 0.132903, 0.133452, 0.132982, 0.132973, 0.132939, 0.133128, 0.132858, 0.132864, 0.133009, 0.13321, 0.133215, 0.133149, 0.132929, 0.133186, 0.133157, 0.133051], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	6
        Additions: 		664
        Multiplications: 	234
        Divisions: 		0
        Logical: 		0
        Reads: 			1356
        Writes: 		180
        Comparisons:		20
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest49.exe __orio_perftest49.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest49.exe  
Program Test Output: 
{'[6, 3, 4, 6, 4, 0, 0, 0, 8, 1, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.148994}
{'[6, 3, 4, 6, 4, 0, 0, 0, 8, 1, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.148899}
{'[6, 3, 4, 6, 4, 0, 0, 0, 8, 1, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.141853}
{'[6, 3, 4, 6, 4, 0, 0, 0, 8, 1, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.129683}
{'[6, 3, 4, 6, 4, 0, 0, 0, 8, 1, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.130168}
{'[6, 3, 4, 6, 4, 0, 0, 0, 8, 1, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.131906}
{'[6, 3, 4, 6, 4, 0, 0, 0, 8, 1, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.132451}
{'[6, 3, 4, 6, 4, 0, 0, 0, 8, 1, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.13588}
{'[6, 3, 4, 6, 4, 0, 0, 0, 8, 1, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.132519}
{'[6, 3, 4, 6, 4, 0, 0, 0, 8, 1, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.132157}
{'[6, 3, 4, 6, 4, 0, 0, 0, 8, 1, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.133412}
{'[6, 3, 4, 6, 4, 0, 0, 0, 8, 1, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.135892}
{'[6, 3, 4, 6, 4, 0, 0, 0, 8, 1, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.135894}
{'[6, 3, 4, 6, 4, 0, 0, 0, 8, 1, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.135885}
{'[6, 3, 4, 6, 4, 0, 0, 0, 8, 1, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.135901}
{'[6, 3, 4, 6, 4, 0, 0, 0, 8, 1, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.13587}
{'[6, 3, 4, 6, 4, 0, 0, 0, 8, 1, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.135901}
{'[6, 3, 4, 6, 4, 0, 0, 0, 8, 1, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.136124}
{'[6, 3, 4, 6, 4, 0, 0, 0, 8, 1, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.134676}
{'[6, 3, 4, 6, 4, 0, 0, 0, 8, 1, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.134612}
{'[6, 3, 4, 6, 4, 0, 0, 0, 8, 1, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.134611}
{'[6, 3, 4, 6, 4, 0, 0, 0, 8, 1, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.134653}
{'[6, 3, 4, 6, 4, 0, 0, 0, 8, 1, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.134582}
{'[6, 3, 4, 6, 4, 0, 0, 0, 8, 1, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.134581}
{'[6, 3, 4, 6, 4, 0, 0, 0, 8, 1, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.134873}
{'[6, 3, 4, 6, 4, 0, 0, 0, 8, 1, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.134691}
{'[6, 3, 4, 6, 4, 0, 0, 0, 8, 1, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.134624}
{'[6, 3, 4, 6, 4, 0, 0, 0, 8, 1, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.134624}
{'[6, 3, 4, 6, 4, 0, 0, 0, 8, 1, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.134558}
{'[6, 3, 4, 6, 4, 0, 0, 0, 8, 1, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.134699}

out:
 ["{'[6, 3, 4, 6, 4, 0, 0, 0, 8, 1, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.148994}", "{'[6, 3, 4, 6, 4, 0, 0, 0, 8, 1, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.148899}", "{'[6, 3, 4, 6, 4, 0, 0, 0, 8, 1, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.141853}", "{'[6, 3, 4, 6, 4, 0, 0, 0, 8, 1, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.129683}", "{'[6, 3, 4, 6, 4, 0, 0, 0, 8, 1, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.130168}", "{'[6, 3, 4, 6, 4, 0, 0, 0, 8, 1, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.131906}", "{'[6, 3, 4, 6, 4, 0, 0, 0, 8, 1, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.132451}", "{'[6, 3, 4, 6, 4, 0, 0, 0, 8, 1, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.13588}", "{'[6, 3, 4, 6, 4, 0, 0, 0, 8, 1, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.132519}", "{'[6, 3, 4, 6, 4, 0, 0, 0, 8, 1, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.132157}", "{'[6, 3, 4, 6, 4, 0, 0, 0, 8, 1, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.133412}", "{'[6, 3, 4, 6, 4, 0, 0, 0, 8, 1, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.135892}", "{'[6, 3, 4, 6, 4, 0, 0, 0, 8, 1, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.135894}", "{'[6, 3, 4, 6, 4, 0, 0, 0, 8, 1, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.135885}", "{'[6, 3, 4, 6, 4, 0, 0, 0, 8, 1, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.135901}", "{'[6, 3, 4, 6, 4, 0, 0, 0, 8, 1, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.13587}", "{'[6, 3, 4, 6, 4, 0, 0, 0, 8, 1, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.135901}", "{'[6, 3, 4, 6, 4, 0, 0, 0, 8, 1, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.136124}", "{'[6, 3, 4, 6, 4, 0, 0, 0, 8, 1, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.134676}", "{'[6, 3, 4, 6, 4, 0, 0, 0, 8, 1, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.134612}", "{'[6, 3, 4, 6, 4, 0, 0, 0, 8, 1, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.134611}", "{'[6, 3, 4, 6, 4, 0, 0, 0, 8, 1, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.134653}", "{'[6, 3, 4, 6, 4, 0, 0, 0, 8, 1, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.134582}", "{'[6, 3, 4, 6, 4, 0, 0, 0, 8, 1, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.134581}", "{'[6, 3, 4, 6, 4, 0, 0, 0, 8, 1, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.134873}", "{'[6, 3, 4, 6, 4, 0, 0, 0, 8, 1, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.134691}", "{'[6, 3, 4, 6, 4, 0, 0, 0, 8, 1, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.134624}", "{'[6, 3, 4, 6, 4, 0, 0, 0, 8, 1, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.134624}", "{'[6, 3, 4, 6, 4, 0, 0, 0, 8, 1, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.134558}", "{'[6, 3, 4, 6, 4, 0, 0, 0, 8, 1, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.134699}"]
returning from 'run': {'[6, 3, 4, 6, 4, 0, 0, 0, 8, 1, 0, 4, 0, 2, 0, 0, 0, 1]': ([0.148994, 0.148899, 0.141853, 0.129683, 0.130168, 0.131906, 0.132451, 0.13588, 0.132519, 0.132157, 0.133412, 0.135892, 0.135894, 0.135885, 0.135901, 0.13587, 0.135901, 0.136124, 0.134676, 0.134612, 0.134611, 0.134653, 0.134582, 0.134581, 0.134873, 0.134691, 0.134624, 0.134624, 0.134558, 0.134699], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 3, 4, 6, 4, 0, 0, 0, 8, 1, 0, 4, 0, 2, 0, 0, 0, 1]': ([0.148994, 0.148899, 0.141853, 0.129683, 0.130168, 0.131906, 0.132451, 0.13588, 0.132519, 0.132157, 0.133412, 0.135892, 0.135894, 0.135885, 0.135901, 0.13587, 0.135901, 0.136124, 0.134676, 0.134612, 0.134611, 0.134653, 0.134582, 0.134581, 0.134873, 0.134691, 0.134624, 0.134624, 0.134558, 0.134699], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	88
        Max loop nest depth: 	5
        Additions: 		3205
        Multiplications: 	702
        Divisions: 		0
        Logical: 		0
        Reads: 			5154
        Writes: 		639
        Comparisons:		88
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest50.exe __orio_perftest50.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest50.exe  
Program Test Output: 
{'[0, 1, 3, 3, 5, 6, 0, 1, 11, 29, 0, 4, 1, 0, 1, 0, 1, 0]' : 0.132229}
{'[0, 1, 3, 3, 5, 6, 0, 1, 11, 29, 0, 4, 1, 0, 1, 0, 1, 0]' : 0.132344}
{'[0, 1, 3, 3, 5, 6, 0, 1, 11, 29, 0, 4, 1, 0, 1, 0, 1, 0]' : 0.132137}
{'[0, 1, 3, 3, 5, 6, 0, 1, 11, 29, 0, 4, 1, 0, 1, 0, 1, 0]' : 0.131172}
{'[0, 1, 3, 3, 5, 6, 0, 1, 11, 29, 0, 4, 1, 0, 1, 0, 1, 0]' : 0.113149}
{'[0, 1, 3, 3, 5, 6, 0, 1, 11, 29, 0, 4, 1, 0, 1, 0, 1, 0]' : 0.111773}
{'[0, 1, 3, 3, 5, 6, 0, 1, 11, 29, 0, 4, 1, 0, 1, 0, 1, 0]' : 0.111531}
{'[0, 1, 3, 3, 5, 6, 0, 1, 11, 29, 0, 4, 1, 0, 1, 0, 1, 0]' : 0.111919}
{'[0, 1, 3, 3, 5, 6, 0, 1, 11, 29, 0, 4, 1, 0, 1, 0, 1, 0]' : 0.111646}
{'[0, 1, 3, 3, 5, 6, 0, 1, 11, 29, 0, 4, 1, 0, 1, 0, 1, 0]' : 0.112088}
{'[0, 1, 3, 3, 5, 6, 0, 1, 11, 29, 0, 4, 1, 0, 1, 0, 1, 0]' : 0.11165}
{'[0, 1, 3, 3, 5, 6, 0, 1, 11, 29, 0, 4, 1, 0, 1, 0, 1, 0]' : 0.11171}
{'[0, 1, 3, 3, 5, 6, 0, 1, 11, 29, 0, 4, 1, 0, 1, 0, 1, 0]' : 0.111569}
{'[0, 1, 3, 3, 5, 6, 0, 1, 11, 29, 0, 4, 1, 0, 1, 0, 1, 0]' : 0.111711}
{'[0, 1, 3, 3, 5, 6, 0, 1, 11, 29, 0, 4, 1, 0, 1, 0, 1, 0]' : 0.111591}
{'[0, 1, 3, 3, 5, 6, 0, 1, 11, 29, 0, 4, 1, 0, 1, 0, 1, 0]' : 0.111996}
{'[0, 1, 3, 3, 5, 6, 0, 1, 11, 29, 0, 4, 1, 0, 1, 0, 1, 0]' : 0.111628}
{'[0, 1, 3, 3, 5, 6, 0, 1, 11, 29, 0, 4, 1, 0, 1, 0, 1, 0]' : 0.111774}
{'[0, 1, 3, 3, 5, 6, 0, 1, 11, 29, 0, 4, 1, 0, 1, 0, 1, 0]' : 0.111645}
{'[0, 1, 3, 3, 5, 6, 0, 1, 11, 29, 0, 4, 1, 0, 1, 0, 1, 0]' : 0.1119}
{'[0, 1, 3, 3, 5, 6, 0, 1, 11, 29, 0, 4, 1, 0, 1, 0, 1, 0]' : 0.111989}
{'[0, 1, 3, 3, 5, 6, 0, 1, 11, 29, 0, 4, 1, 0, 1, 0, 1, 0]' : 0.1117}
{'[0, 1, 3, 3, 5, 6, 0, 1, 11, 29, 0, 4, 1, 0, 1, 0, 1, 0]' : 0.111539}
{'[0, 1, 3, 3, 5, 6, 0, 1, 11, 29, 0, 4, 1, 0, 1, 0, 1, 0]' : 0.111602}
{'[0, 1, 3, 3, 5, 6, 0, 1, 11, 29, 0, 4, 1, 0, 1, 0, 1, 0]' : 0.111579}
{'[0, 1, 3, 3, 5, 6, 0, 1, 11, 29, 0, 4, 1, 0, 1, 0, 1, 0]' : 0.11173}
{'[0, 1, 3, 3, 5, 6, 0, 1, 11, 29, 0, 4, 1, 0, 1, 0, 1, 0]' : 0.111535}
{'[0, 1, 3, 3, 5, 6, 0, 1, 11, 29, 0, 4, 1, 0, 1, 0, 1, 0]' : 0.111629}
{'[0, 1, 3, 3, 5, 6, 0, 1, 11, 29, 0, 4, 1, 0, 1, 0, 1, 0]' : 0.111612}
{'[0, 1, 3, 3, 5, 6, 0, 1, 11, 29, 0, 4, 1, 0, 1, 0, 1, 0]' : 0.111938}

out:
 ["{'[0, 1, 3, 3, 5, 6, 0, 1, 11, 29, 0, 4, 1, 0, 1, 0, 1, 0]' : 0.132229}", "{'[0, 1, 3, 3, 5, 6, 0, 1, 11, 29, 0, 4, 1, 0, 1, 0, 1, 0]' : 0.132344}", "{'[0, 1, 3, 3, 5, 6, 0, 1, 11, 29, 0, 4, 1, 0, 1, 0, 1, 0]' : 0.132137}", "{'[0, 1, 3, 3, 5, 6, 0, 1, 11, 29, 0, 4, 1, 0, 1, 0, 1, 0]' : 0.131172}", "{'[0, 1, 3, 3, 5, 6, 0, 1, 11, 29, 0, 4, 1, 0, 1, 0, 1, 0]' : 0.113149}", "{'[0, 1, 3, 3, 5, 6, 0, 1, 11, 29, 0, 4, 1, 0, 1, 0, 1, 0]' : 0.111773}", "{'[0, 1, 3, 3, 5, 6, 0, 1, 11, 29, 0, 4, 1, 0, 1, 0, 1, 0]' : 0.111531}", "{'[0, 1, 3, 3, 5, 6, 0, 1, 11, 29, 0, 4, 1, 0, 1, 0, 1, 0]' : 0.111919}", "{'[0, 1, 3, 3, 5, 6, 0, 1, 11, 29, 0, 4, 1, 0, 1, 0, 1, 0]' : 0.111646}", "{'[0, 1, 3, 3, 5, 6, 0, 1, 11, 29, 0, 4, 1, 0, 1, 0, 1, 0]' : 0.112088}", "{'[0, 1, 3, 3, 5, 6, 0, 1, 11, 29, 0, 4, 1, 0, 1, 0, 1, 0]' : 0.11165}", "{'[0, 1, 3, 3, 5, 6, 0, 1, 11, 29, 0, 4, 1, 0, 1, 0, 1, 0]' : 0.11171}", "{'[0, 1, 3, 3, 5, 6, 0, 1, 11, 29, 0, 4, 1, 0, 1, 0, 1, 0]' : 0.111569}", "{'[0, 1, 3, 3, 5, 6, 0, 1, 11, 29, 0, 4, 1, 0, 1, 0, 1, 0]' : 0.111711}", "{'[0, 1, 3, 3, 5, 6, 0, 1, 11, 29, 0, 4, 1, 0, 1, 0, 1, 0]' : 0.111591}", "{'[0, 1, 3, 3, 5, 6, 0, 1, 11, 29, 0, 4, 1, 0, 1, 0, 1, 0]' : 0.111996}", "{'[0, 1, 3, 3, 5, 6, 0, 1, 11, 29, 0, 4, 1, 0, 1, 0, 1, 0]' : 0.111628}", "{'[0, 1, 3, 3, 5, 6, 0, 1, 11, 29, 0, 4, 1, 0, 1, 0, 1, 0]' : 0.111774}", "{'[0, 1, 3, 3, 5, 6, 0, 1, 11, 29, 0, 4, 1, 0, 1, 0, 1, 0]' : 0.111645}", "{'[0, 1, 3, 3, 5, 6, 0, 1, 11, 29, 0, 4, 1, 0, 1, 0, 1, 0]' : 0.1119}", "{'[0, 1, 3, 3, 5, 6, 0, 1, 11, 29, 0, 4, 1, 0, 1, 0, 1, 0]' : 0.111989}", "{'[0, 1, 3, 3, 5, 6, 0, 1, 11, 29, 0, 4, 1, 0, 1, 0, 1, 0]' : 0.1117}", "{'[0, 1, 3, 3, 5, 6, 0, 1, 11, 29, 0, 4, 1, 0, 1, 0, 1, 0]' : 0.111539}", "{'[0, 1, 3, 3, 5, 6, 0, 1, 11, 29, 0, 4, 1, 0, 1, 0, 1, 0]' : 0.111602}", "{'[0, 1, 3, 3, 5, 6, 0, 1, 11, 29, 0, 4, 1, 0, 1, 0, 1, 0]' : 0.111579}", "{'[0, 1, 3, 3, 5, 6, 0, 1, 11, 29, 0, 4, 1, 0, 1, 0, 1, 0]' : 0.11173}", "{'[0, 1, 3, 3, 5, 6, 0, 1, 11, 29, 0, 4, 1, 0, 1, 0, 1, 0]' : 0.111535}", "{'[0, 1, 3, 3, 5, 6, 0, 1, 11, 29, 0, 4, 1, 0, 1, 0, 1, 0]' : 0.111629}", "{'[0, 1, 3, 3, 5, 6, 0, 1, 11, 29, 0, 4, 1, 0, 1, 0, 1, 0]' : 0.111612}", "{'[0, 1, 3, 3, 5, 6, 0, 1, 11, 29, 0, 4, 1, 0, 1, 0, 1, 0]' : 0.111938}"]
returning from 'run': {'[0, 1, 3, 3, 5, 6, 0, 1, 11, 29, 0, 4, 1, 0, 1, 0, 1, 0]': ([0.132229, 0.132344, 0.132137, 0.131172, 0.113149, 0.111773, 0.111531, 0.111919, 0.111646, 0.112088, 0.11165, 0.11171, 0.111569, 0.111711, 0.111591, 0.111996, 0.111628, 0.111774, 0.111645, 0.1119, 0.111989, 0.1117, 0.111539, 0.111602, 0.111579, 0.11173, 0.111535, 0.111629, 0.111612, 0.111938], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 1, 3, 3, 5, 6, 0, 1, 11, 29, 0, 4, 1, 0, 1, 0, 1, 0]': ([0.132229, 0.132344, 0.132137, 0.131172, 0.113149, 0.111773, 0.111531, 0.111919, 0.111646, 0.112088, 0.11165, 0.11171, 0.111569, 0.111711, 0.111591, 0.111996, 0.111628, 0.111774, 0.111645, 0.1119, 0.111989, 0.1117, 0.111539, 0.111602, 0.111579, 0.11173, 0.111535, 0.111629, 0.111612, 0.111938], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	25
        Max loop nest depth: 	5
        Additions: 		2515
        Multiplications: 	684
        Divisions: 		0
        Logical: 		0
        Reads: 			3954
        Writes: 		414
        Comparisons:		25
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest51.exe __orio_perftest51.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest51.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest51.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest51.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest51.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	5
        Additions: 		897
        Multiplications: 	252
        Divisions: 		0
        Logical: 		0
        Reads: 			1521
        Writes: 		188
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest52.exe __orio_perftest52.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest52.exe  
Program Test Output: 
{'[3, 1, 5, 1, 2, 6, 1, 0, 3, 0, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.136792}
{'[3, 1, 5, 1, 2, 6, 1, 0, 3, 0, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.136715}
{'[3, 1, 5, 1, 2, 6, 1, 0, 3, 0, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.136684}
{'[3, 1, 5, 1, 2, 6, 1, 0, 3, 0, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.126381}
{'[3, 1, 5, 1, 2, 6, 1, 0, 3, 0, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.115597}
{'[3, 1, 5, 1, 2, 6, 1, 0, 3, 0, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.115892}
{'[3, 1, 5, 1, 2, 6, 1, 0, 3, 0, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.115996}
{'[3, 1, 5, 1, 2, 6, 1, 0, 3, 0, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.11567}
{'[3, 1, 5, 1, 2, 6, 1, 0, 3, 0, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.115885}
{'[3, 1, 5, 1, 2, 6, 1, 0, 3, 0, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.115609}
{'[3, 1, 5, 1, 2, 6, 1, 0, 3, 0, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.115538}
{'[3, 1, 5, 1, 2, 6, 1, 0, 3, 0, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.115591}
{'[3, 1, 5, 1, 2, 6, 1, 0, 3, 0, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.115635}
{'[3, 1, 5, 1, 2, 6, 1, 0, 3, 0, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.115806}
{'[3, 1, 5, 1, 2, 6, 1, 0, 3, 0, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.115632}
{'[3, 1, 5, 1, 2, 6, 1, 0, 3, 0, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.116021}
{'[3, 1, 5, 1, 2, 6, 1, 0, 3, 0, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.115684}
{'[3, 1, 5, 1, 2, 6, 1, 0, 3, 0, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.115463}
{'[3, 1, 5, 1, 2, 6, 1, 0, 3, 0, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.115517}
{'[3, 1, 5, 1, 2, 6, 1, 0, 3, 0, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.115635}
{'[3, 1, 5, 1, 2, 6, 1, 0, 3, 0, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.115659}
{'[3, 1, 5, 1, 2, 6, 1, 0, 3, 0, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.115786}
{'[3, 1, 5, 1, 2, 6, 1, 0, 3, 0, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.115544}
{'[3, 1, 5, 1, 2, 6, 1, 0, 3, 0, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.1155}
{'[3, 1, 5, 1, 2, 6, 1, 0, 3, 0, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.11584}
{'[3, 1, 5, 1, 2, 6, 1, 0, 3, 0, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.115808}
{'[3, 1, 5, 1, 2, 6, 1, 0, 3, 0, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.115505}
{'[3, 1, 5, 1, 2, 6, 1, 0, 3, 0, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.115551}
{'[3, 1, 5, 1, 2, 6, 1, 0, 3, 0, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.115552}
{'[3, 1, 5, 1, 2, 6, 1, 0, 3, 0, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.115577}

out:
 ["{'[3, 1, 5, 1, 2, 6, 1, 0, 3, 0, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.136792}", "{'[3, 1, 5, 1, 2, 6, 1, 0, 3, 0, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.136715}", "{'[3, 1, 5, 1, 2, 6, 1, 0, 3, 0, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.136684}", "{'[3, 1, 5, 1, 2, 6, 1, 0, 3, 0, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.126381}", "{'[3, 1, 5, 1, 2, 6, 1, 0, 3, 0, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.115597}", "{'[3, 1, 5, 1, 2, 6, 1, 0, 3, 0, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.115892}", "{'[3, 1, 5, 1, 2, 6, 1, 0, 3, 0, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.115996}", "{'[3, 1, 5, 1, 2, 6, 1, 0, 3, 0, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.11567}", "{'[3, 1, 5, 1, 2, 6, 1, 0, 3, 0, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.115885}", "{'[3, 1, 5, 1, 2, 6, 1, 0, 3, 0, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.115609}", "{'[3, 1, 5, 1, 2, 6, 1, 0, 3, 0, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.115538}", "{'[3, 1, 5, 1, 2, 6, 1, 0, 3, 0, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.115591}", "{'[3, 1, 5, 1, 2, 6, 1, 0, 3, 0, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.115635}", "{'[3, 1, 5, 1, 2, 6, 1, 0, 3, 0, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.115806}", "{'[3, 1, 5, 1, 2, 6, 1, 0, 3, 0, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.115632}", "{'[3, 1, 5, 1, 2, 6, 1, 0, 3, 0, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.116021}", "{'[3, 1, 5, 1, 2, 6, 1, 0, 3, 0, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.115684}", "{'[3, 1, 5, 1, 2, 6, 1, 0, 3, 0, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.115463}", "{'[3, 1, 5, 1, 2, 6, 1, 0, 3, 0, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.115517}", "{'[3, 1, 5, 1, 2, 6, 1, 0, 3, 0, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.115635}", "{'[3, 1, 5, 1, 2, 6, 1, 0, 3, 0, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.115659}", "{'[3, 1, 5, 1, 2, 6, 1, 0, 3, 0, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.115786}", "{'[3, 1, 5, 1, 2, 6, 1, 0, 3, 0, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.115544}", "{'[3, 1, 5, 1, 2, 6, 1, 0, 3, 0, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.1155}", "{'[3, 1, 5, 1, 2, 6, 1, 0, 3, 0, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.11584}", "{'[3, 1, 5, 1, 2, 6, 1, 0, 3, 0, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.115808}", "{'[3, 1, 5, 1, 2, 6, 1, 0, 3, 0, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.115505}", "{'[3, 1, 5, 1, 2, 6, 1, 0, 3, 0, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.115551}", "{'[3, 1, 5, 1, 2, 6, 1, 0, 3, 0, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.115552}", "{'[3, 1, 5, 1, 2, 6, 1, 0, 3, 0, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.115577}"]
returning from 'run': {'[3, 1, 5, 1, 2, 6, 1, 0, 3, 0, 0, 4, 1, 1, 0, 0, 1, 1]': ([0.136792, 0.136715, 0.136684, 0.126381, 0.115597, 0.115892, 0.115996, 0.11567, 0.115885, 0.115609, 0.115538, 0.115591, 0.115635, 0.115806, 0.115632, 0.116021, 0.115684, 0.115463, 0.115517, 0.115635, 0.115659, 0.115786, 0.115544, 0.1155, 0.11584, 0.115808, 0.115505, 0.115551, 0.115552, 0.115577], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 1, 5, 1, 2, 6, 1, 0, 3, 0, 0, 4, 1, 1, 0, 0, 1, 1]': ([0.136792, 0.136715, 0.136684, 0.126381, 0.115597, 0.115892, 0.115996, 0.11567, 0.115885, 0.115609, 0.115538, 0.115591, 0.115635, 0.115806, 0.115632, 0.116021, 0.115684, 0.115463, 0.115517, 0.115635, 0.115659, 0.115786, 0.115544, 0.1155, 0.11584, 0.115808, 0.115505, 0.115551, 0.115552, 0.115577], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	28
        Max loop nest depth: 	5
        Additions: 		326
        Multiplications: 	56
        Divisions: 		0
        Logical: 		0
        Reads: 			598
        Writes: 		105
        Comparisons:		28
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest53.exe __orio_perftest53.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest53.exe  
Program Test Output: 
{'[6, 6, 6, 6, 0, 4, 0, 1, 4, 2, 0, 4, 0, 0, 0, 0, 1, 0]' : 0.231073}
{'[6, 6, 6, 6, 0, 4, 0, 1, 4, 2, 0, 4, 0, 0, 0, 0, 1, 0]' : 0.231058}
{'[6, 6, 6, 6, 0, 4, 0, 1, 4, 2, 0, 4, 0, 0, 0, 0, 1, 0]' : 0.206168}
{'[6, 6, 6, 6, 0, 4, 0, 1, 4, 2, 0, 4, 0, 0, 0, 0, 1, 0]' : 0.194163}
{'[6, 6, 6, 6, 0, 4, 0, 1, 4, 2, 0, 4, 0, 0, 0, 0, 1, 0]' : 0.197499}
{'[6, 6, 6, 6, 0, 4, 0, 1, 4, 2, 0, 4, 0, 0, 0, 0, 1, 0]' : 0.199594}
{'[6, 6, 6, 6, 0, 4, 0, 1, 4, 2, 0, 4, 0, 0, 0, 0, 1, 0]' : 0.199454}
{'[6, 6, 6, 6, 0, 4, 0, 1, 4, 2, 0, 4, 0, 0, 0, 0, 1, 0]' : 0.199605}
{'[6, 6, 6, 6, 0, 4, 0, 1, 4, 2, 0, 4, 0, 0, 0, 0, 1, 0]' : 0.19961}
{'[6, 6, 6, 6, 0, 4, 0, 1, 4, 2, 0, 4, 0, 0, 0, 0, 1, 0]' : 0.199477}
{'[6, 6, 6, 6, 0, 4, 0, 1, 4, 2, 0, 4, 0, 0, 0, 0, 1, 0]' : 0.199416}
{'[6, 6, 6, 6, 0, 4, 0, 1, 4, 2, 0, 4, 0, 0, 0, 0, 1, 0]' : 0.199727}
{'[6, 6, 6, 6, 0, 4, 0, 1, 4, 2, 0, 4, 0, 0, 0, 0, 1, 0]' : 0.199487}
{'[6, 6, 6, 6, 0, 4, 0, 1, 4, 2, 0, 4, 0, 0, 0, 0, 1, 0]' : 0.199555}
{'[6, 6, 6, 6, 0, 4, 0, 1, 4, 2, 0, 4, 0, 0, 0, 0, 1, 0]' : 0.199423}
{'[6, 6, 6, 6, 0, 4, 0, 1, 4, 2, 0, 4, 0, 0, 0, 0, 1, 0]' : 0.199447}
{'[6, 6, 6, 6, 0, 4, 0, 1, 4, 2, 0, 4, 0, 0, 0, 0, 1, 0]' : 0.194467}
{'[6, 6, 6, 6, 0, 4, 0, 1, 4, 2, 0, 4, 0, 0, 0, 0, 1, 0]' : 0.19428}
{'[6, 6, 6, 6, 0, 4, 0, 1, 4, 2, 0, 4, 0, 0, 0, 0, 1, 0]' : 0.194964}
{'[6, 6, 6, 6, 0, 4, 0, 1, 4, 2, 0, 4, 0, 0, 0, 0, 1, 0]' : 0.194267}
{'[6, 6, 6, 6, 0, 4, 0, 1, 4, 2, 0, 4, 0, 0, 0, 0, 1, 0]' : 0.194458}
{'[6, 6, 6, 6, 0, 4, 0, 1, 4, 2, 0, 4, 0, 0, 0, 0, 1, 0]' : 0.194178}
{'[6, 6, 6, 6, 0, 4, 0, 1, 4, 2, 0, 4, 0, 0, 0, 0, 1, 0]' : 0.194411}
{'[6, 6, 6, 6, 0, 4, 0, 1, 4, 2, 0, 4, 0, 0, 0, 0, 1, 0]' : 0.194466}
{'[6, 6, 6, 6, 0, 4, 0, 1, 4, 2, 0, 4, 0, 0, 0, 0, 1, 0]' : 0.194362}
{'[6, 6, 6, 6, 0, 4, 0, 1, 4, 2, 0, 4, 0, 0, 0, 0, 1, 0]' : 0.194201}
{'[6, 6, 6, 6, 0, 4, 0, 1, 4, 2, 0, 4, 0, 0, 0, 0, 1, 0]' : 0.194198}
{'[6, 6, 6, 6, 0, 4, 0, 1, 4, 2, 0, 4, 0, 0, 0, 0, 1, 0]' : 0.194243}
{'[6, 6, 6, 6, 0, 4, 0, 1, 4, 2, 0, 4, 0, 0, 0, 0, 1, 0]' : 0.194415}
{'[6, 6, 6, 6, 0, 4, 0, 1, 4, 2, 0, 4, 0, 0, 0, 0, 1, 0]' : 0.194473}

out:
 ["{'[6, 6, 6, 6, 0, 4, 0, 1, 4, 2, 0, 4, 0, 0, 0, 0, 1, 0]' : 0.231073}", "{'[6, 6, 6, 6, 0, 4, 0, 1, 4, 2, 0, 4, 0, 0, 0, 0, 1, 0]' : 0.231058}", "{'[6, 6, 6, 6, 0, 4, 0, 1, 4, 2, 0, 4, 0, 0, 0, 0, 1, 0]' : 0.206168}", "{'[6, 6, 6, 6, 0, 4, 0, 1, 4, 2, 0, 4, 0, 0, 0, 0, 1, 0]' : 0.194163}", "{'[6, 6, 6, 6, 0, 4, 0, 1, 4, 2, 0, 4, 0, 0, 0, 0, 1, 0]' : 0.197499}", "{'[6, 6, 6, 6, 0, 4, 0, 1, 4, 2, 0, 4, 0, 0, 0, 0, 1, 0]' : 0.199594}", "{'[6, 6, 6, 6, 0, 4, 0, 1, 4, 2, 0, 4, 0, 0, 0, 0, 1, 0]' : 0.199454}", "{'[6, 6, 6, 6, 0, 4, 0, 1, 4, 2, 0, 4, 0, 0, 0, 0, 1, 0]' : 0.199605}", "{'[6, 6, 6, 6, 0, 4, 0, 1, 4, 2, 0, 4, 0, 0, 0, 0, 1, 0]' : 0.19961}", "{'[6, 6, 6, 6, 0, 4, 0, 1, 4, 2, 0, 4, 0, 0, 0, 0, 1, 0]' : 0.199477}", "{'[6, 6, 6, 6, 0, 4, 0, 1, 4, 2, 0, 4, 0, 0, 0, 0, 1, 0]' : 0.199416}", "{'[6, 6, 6, 6, 0, 4, 0, 1, 4, 2, 0, 4, 0, 0, 0, 0, 1, 0]' : 0.199727}", "{'[6, 6, 6, 6, 0, 4, 0, 1, 4, 2, 0, 4, 0, 0, 0, 0, 1, 0]' : 0.199487}", "{'[6, 6, 6, 6, 0, 4, 0, 1, 4, 2, 0, 4, 0, 0, 0, 0, 1, 0]' : 0.199555}", "{'[6, 6, 6, 6, 0, 4, 0, 1, 4, 2, 0, 4, 0, 0, 0, 0, 1, 0]' : 0.199423}", "{'[6, 6, 6, 6, 0, 4, 0, 1, 4, 2, 0, 4, 0, 0, 0, 0, 1, 0]' : 0.199447}", "{'[6, 6, 6, 6, 0, 4, 0, 1, 4, 2, 0, 4, 0, 0, 0, 0, 1, 0]' : 0.194467}", "{'[6, 6, 6, 6, 0, 4, 0, 1, 4, 2, 0, 4, 0, 0, 0, 0, 1, 0]' : 0.19428}", "{'[6, 6, 6, 6, 0, 4, 0, 1, 4, 2, 0, 4, 0, 0, 0, 0, 1, 0]' : 0.194964}", "{'[6, 6, 6, 6, 0, 4, 0, 1, 4, 2, 0, 4, 0, 0, 0, 0, 1, 0]' : 0.194267}", "{'[6, 6, 6, 6, 0, 4, 0, 1, 4, 2, 0, 4, 0, 0, 0, 0, 1, 0]' : 0.194458}", "{'[6, 6, 6, 6, 0, 4, 0, 1, 4, 2, 0, 4, 0, 0, 0, 0, 1, 0]' : 0.194178}", "{'[6, 6, 6, 6, 0, 4, 0, 1, 4, 2, 0, 4, 0, 0, 0, 0, 1, 0]' : 0.194411}", "{'[6, 6, 6, 6, 0, 4, 0, 1, 4, 2, 0, 4, 0, 0, 0, 0, 1, 0]' : 0.194466}", "{'[6, 6, 6, 6, 0, 4, 0, 1, 4, 2, 0, 4, 0, 0, 0, 0, 1, 0]' : 0.194362}", "{'[6, 6, 6, 6, 0, 4, 0, 1, 4, 2, 0, 4, 0, 0, 0, 0, 1, 0]' : 0.194201}", "{'[6, 6, 6, 6, 0, 4, 0, 1, 4, 2, 0, 4, 0, 0, 0, 0, 1, 0]' : 0.194198}", "{'[6, 6, 6, 6, 0, 4, 0, 1, 4, 2, 0, 4, 0, 0, 0, 0, 1, 0]' : 0.194243}", "{'[6, 6, 6, 6, 0, 4, 0, 1, 4, 2, 0, 4, 0, 0, 0, 0, 1, 0]' : 0.194415}", "{'[6, 6, 6, 6, 0, 4, 0, 1, 4, 2, 0, 4, 0, 0, 0, 0, 1, 0]' : 0.194473}"]
returning from 'run': {'[6, 6, 6, 6, 0, 4, 0, 1, 4, 2, 0, 4, 0, 0, 0, 0, 1, 0]': ([0.231073, 0.231058, 0.206168, 0.194163, 0.197499, 0.199594, 0.199454, 0.199605, 0.19961, 0.199477, 0.199416, 0.199727, 0.199487, 0.199555, 0.199423, 0.199447, 0.194467, 0.19428, 0.194964, 0.194267, 0.194458, 0.194178, 0.194411, 0.194466, 0.194362, 0.194201, 0.194198, 0.194243, 0.194415, 0.194473], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 6, 6, 0, 4, 0, 1, 4, 2, 0, 4, 0, 0, 0, 0, 1, 0]': ([0.231073, 0.231058, 0.206168, 0.194163, 0.197499, 0.199594, 0.199454, 0.199605, 0.19961, 0.199477, 0.199416, 0.199727, 0.199487, 0.199555, 0.199423, 0.199447, 0.194467, 0.19428, 0.194964, 0.194267, 0.194458, 0.194178, 0.194411, 0.194466, 0.194362, 0.194201, 0.194198, 0.194243, 0.194415, 0.194473], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	47
        Max loop nest depth: 	4
        Additions: 		1401
        Multiplications: 	576
        Divisions: 		0
        Logical: 		0
        Reads: 			2865
        Writes: 		543
        Comparisons:		47
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest54.exe __orio_perftest54.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest54.exe  
Program Test Output: 
{'[6, 0, 1, 0, 0, 0, 1, 1, 26, 16, 0, 4, 0, 1, 1, 1, 1, 0]' : 0.18216}
{'[6, 0, 1, 0, 0, 0, 1, 1, 26, 16, 0, 4, 0, 1, 1, 1, 1, 0]' : 0.182059}
{'[6, 0, 1, 0, 0, 0, 1, 1, 26, 16, 0, 4, 0, 1, 1, 1, 1, 0]' : 0.182246}
{'[6, 0, 1, 0, 0, 0, 1, 1, 26, 16, 0, 4, 0, 1, 1, 1, 1, 0]' : 0.182441}
{'[6, 0, 1, 0, 0, 0, 1, 1, 26, 16, 0, 4, 0, 1, 1, 1, 1, 0]' : 0.183464}
{'[6, 0, 1, 0, 0, 0, 1, 1, 26, 16, 0, 4, 0, 1, 1, 1, 1, 0]' : 0.183534}
{'[6, 0, 1, 0, 0, 0, 1, 1, 26, 16, 0, 4, 0, 1, 1, 1, 1, 0]' : 0.183804}
{'[6, 0, 1, 0, 0, 0, 1, 1, 26, 16, 0, 4, 0, 1, 1, 1, 1, 0]' : 0.183603}
{'[6, 0, 1, 0, 0, 0, 1, 1, 26, 16, 0, 4, 0, 1, 1, 1, 1, 0]' : 0.183552}
{'[6, 0, 1, 0, 0, 0, 1, 1, 26, 16, 0, 4, 0, 1, 1, 1, 1, 0]' : 0.182327}
{'[6, 0, 1, 0, 0, 0, 1, 1, 26, 16, 0, 4, 0, 1, 1, 1, 1, 0]' : 0.181844}
{'[6, 0, 1, 0, 0, 0, 1, 1, 26, 16, 0, 4, 0, 1, 1, 1, 1, 0]' : 0.182413}
{'[6, 0, 1, 0, 0, 0, 1, 1, 26, 16, 0, 4, 0, 1, 1, 1, 1, 0]' : 0.182308}
{'[6, 0, 1, 0, 0, 0, 1, 1, 26, 16, 0, 4, 0, 1, 1, 1, 1, 0]' : 0.182262}
{'[6, 0, 1, 0, 0, 0, 1, 1, 26, 16, 0, 4, 0, 1, 1, 1, 1, 0]' : 0.182352}
{'[6, 0, 1, 0, 0, 0, 1, 1, 26, 16, 0, 4, 0, 1, 1, 1, 1, 0]' : 0.182421}
{'[6, 0, 1, 0, 0, 0, 1, 1, 26, 16, 0, 4, 0, 1, 1, 1, 1, 0]' : 0.182386}
{'[6, 0, 1, 0, 0, 0, 1, 1, 26, 16, 0, 4, 0, 1, 1, 1, 1, 0]' : 0.182197}
{'[6, 0, 1, 0, 0, 0, 1, 1, 26, 16, 0, 4, 0, 1, 1, 1, 1, 0]' : 0.18212}
{'[6, 0, 1, 0, 0, 0, 1, 1, 26, 16, 0, 4, 0, 1, 1, 1, 1, 0]' : 0.181959}
{'[6, 0, 1, 0, 0, 0, 1, 1, 26, 16, 0, 4, 0, 1, 1, 1, 1, 0]' : 0.182353}
{'[6, 0, 1, 0, 0, 0, 1, 1, 26, 16, 0, 4, 0, 1, 1, 1, 1, 0]' : 0.182341}
{'[6, 0, 1, 0, 0, 0, 1, 1, 26, 16, 0, 4, 0, 1, 1, 1, 1, 0]' : 0.182055}
{'[6, 0, 1, 0, 0, 0, 1, 1, 26, 16, 0, 4, 0, 1, 1, 1, 1, 0]' : 0.182094}
{'[6, 0, 1, 0, 0, 0, 1, 1, 26, 16, 0, 4, 0, 1, 1, 1, 1, 0]' : 0.181985}
{'[6, 0, 1, 0, 0, 0, 1, 1, 26, 16, 0, 4, 0, 1, 1, 1, 1, 0]' : 0.18206}
{'[6, 0, 1, 0, 0, 0, 1, 1, 26, 16, 0, 4, 0, 1, 1, 1, 1, 0]' : 0.182066}
{'[6, 0, 1, 0, 0, 0, 1, 1, 26, 16, 0, 4, 0, 1, 1, 1, 1, 0]' : 0.182478}
{'[6, 0, 1, 0, 0, 0, 1, 1, 26, 16, 0, 4, 0, 1, 1, 1, 1, 0]' : 0.182029}
{'[6, 0, 1, 0, 0, 0, 1, 1, 26, 16, 0, 4, 0, 1, 1, 1, 1, 0]' : 0.182155}

out:
 ["{'[6, 0, 1, 0, 0, 0, 1, 1, 26, 16, 0, 4, 0, 1, 1, 1, 1, 0]' : 0.18216}", "{'[6, 0, 1, 0, 0, 0, 1, 1, 26, 16, 0, 4, 0, 1, 1, 1, 1, 0]' : 0.182059}", "{'[6, 0, 1, 0, 0, 0, 1, 1, 26, 16, 0, 4, 0, 1, 1, 1, 1, 0]' : 0.182246}", "{'[6, 0, 1, 0, 0, 0, 1, 1, 26, 16, 0, 4, 0, 1, 1, 1, 1, 0]' : 0.182441}", "{'[6, 0, 1, 0, 0, 0, 1, 1, 26, 16, 0, 4, 0, 1, 1, 1, 1, 0]' : 0.183464}", "{'[6, 0, 1, 0, 0, 0, 1, 1, 26, 16, 0, 4, 0, 1, 1, 1, 1, 0]' : 0.183534}", "{'[6, 0, 1, 0, 0, 0, 1, 1, 26, 16, 0, 4, 0, 1, 1, 1, 1, 0]' : 0.183804}", "{'[6, 0, 1, 0, 0, 0, 1, 1, 26, 16, 0, 4, 0, 1, 1, 1, 1, 0]' : 0.183603}", "{'[6, 0, 1, 0, 0, 0, 1, 1, 26, 16, 0, 4, 0, 1, 1, 1, 1, 0]' : 0.183552}", "{'[6, 0, 1, 0, 0, 0, 1, 1, 26, 16, 0, 4, 0, 1, 1, 1, 1, 0]' : 0.182327}", "{'[6, 0, 1, 0, 0, 0, 1, 1, 26, 16, 0, 4, 0, 1, 1, 1, 1, 0]' : 0.181844}", "{'[6, 0, 1, 0, 0, 0, 1, 1, 26, 16, 0, 4, 0, 1, 1, 1, 1, 0]' : 0.182413}", "{'[6, 0, 1, 0, 0, 0, 1, 1, 26, 16, 0, 4, 0, 1, 1, 1, 1, 0]' : 0.182308}", "{'[6, 0, 1, 0, 0, 0, 1, 1, 26, 16, 0, 4, 0, 1, 1, 1, 1, 0]' : 0.182262}", "{'[6, 0, 1, 0, 0, 0, 1, 1, 26, 16, 0, 4, 0, 1, 1, 1, 1, 0]' : 0.182352}", "{'[6, 0, 1, 0, 0, 0, 1, 1, 26, 16, 0, 4, 0, 1, 1, 1, 1, 0]' : 0.182421}", "{'[6, 0, 1, 0, 0, 0, 1, 1, 26, 16, 0, 4, 0, 1, 1, 1, 1, 0]' : 0.182386}", "{'[6, 0, 1, 0, 0, 0, 1, 1, 26, 16, 0, 4, 0, 1, 1, 1, 1, 0]' : 0.182197}", "{'[6, 0, 1, 0, 0, 0, 1, 1, 26, 16, 0, 4, 0, 1, 1, 1, 1, 0]' : 0.18212}", "{'[6, 0, 1, 0, 0, 0, 1, 1, 26, 16, 0, 4, 0, 1, 1, 1, 1, 0]' : 0.181959}", "{'[6, 0, 1, 0, 0, 0, 1, 1, 26, 16, 0, 4, 0, 1, 1, 1, 1, 0]' : 0.182353}", "{'[6, 0, 1, 0, 0, 0, 1, 1, 26, 16, 0, 4, 0, 1, 1, 1, 1, 0]' : 0.182341}", "{'[6, 0, 1, 0, 0, 0, 1, 1, 26, 16, 0, 4, 0, 1, 1, 1, 1, 0]' : 0.182055}", "{'[6, 0, 1, 0, 0, 0, 1, 1, 26, 16, 0, 4, 0, 1, 1, 1, 1, 0]' : 0.182094}", "{'[6, 0, 1, 0, 0, 0, 1, 1, 26, 16, 0, 4, 0, 1, 1, 1, 1, 0]' : 0.181985}", "{'[6, 0, 1, 0, 0, 0, 1, 1, 26, 16, 0, 4, 0, 1, 1, 1, 1, 0]' : 0.18206}", "{'[6, 0, 1, 0, 0, 0, 1, 1, 26, 16, 0, 4, 0, 1, 1, 1, 1, 0]' : 0.182066}", "{'[6, 0, 1, 0, 0, 0, 1, 1, 26, 16, 0, 4, 0, 1, 1, 1, 1, 0]' : 0.182478}", "{'[6, 0, 1, 0, 0, 0, 1, 1, 26, 16, 0, 4, 0, 1, 1, 1, 1, 0]' : 0.182029}", "{'[6, 0, 1, 0, 0, 0, 1, 1, 26, 16, 0, 4, 0, 1, 1, 1, 1, 0]' : 0.182155}"]
returning from 'run': {'[6, 0, 1, 0, 0, 0, 1, 1, 26, 16, 0, 4, 0, 1, 1, 1, 1, 0]': ([0.18216, 0.182059, 0.182246, 0.182441, 0.183464, 0.183534, 0.183804, 0.183603, 0.183552, 0.182327, 0.181844, 0.182413, 0.182308, 0.182262, 0.182352, 0.182421, 0.182386, 0.182197, 0.18212, 0.181959, 0.182353, 0.182341, 0.182055, 0.182094, 0.181985, 0.18206, 0.182066, 0.182478, 0.182029, 0.182155], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 1, 0, 0, 0, 1, 1, 26, 16, 0, 4, 0, 1, 1, 1, 1, 0]': ([0.18216, 0.182059, 0.182246, 0.182441, 0.183464, 0.183534, 0.183804, 0.183603, 0.183552, 0.182327, 0.181844, 0.182413, 0.182308, 0.182262, 0.182352, 0.182421, 0.182386, 0.182197, 0.18212, 0.181959, 0.182353, 0.182341, 0.182055, 0.182094, 0.181985, 0.18206, 0.182066, 0.182478, 0.182029, 0.182155], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	105
        Max loop nest depth: 	5
        Additions: 		2595
        Multiplications: 	840
        Divisions: 		0
        Logical: 		0
        Reads: 			5371
        Writes: 		1096
        Comparisons:		105
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest55.exe __orio_perftest55.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest55.exe  
Program Test Output: 
{'[6, 2, 0, 0, 6, 3, 0, 1, 6, 18, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0929909}
{'[6, 2, 0, 0, 6, 3, 0, 1, 6, 18, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0928788}
{'[6, 2, 0, 0, 6, 3, 0, 1, 6, 18, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.092499}
{'[6, 2, 0, 0, 6, 3, 0, 1, 6, 18, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0931051}
{'[6, 2, 0, 0, 6, 3, 0, 1, 6, 18, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.092994}
{'[6, 2, 0, 0, 6, 3, 0, 1, 6, 18, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0929639}
{'[6, 2, 0, 0, 6, 3, 0, 1, 6, 18, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0929511}
{'[6, 2, 0, 0, 6, 3, 0, 1, 6, 18, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0930111}
{'[6, 2, 0, 0, 6, 3, 0, 1, 6, 18, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0929029}
{'[6, 2, 0, 0, 6, 3, 0, 1, 6, 18, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0930941}
{'[6, 2, 0, 0, 6, 3, 0, 1, 6, 18, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0931349}
{'[6, 2, 0, 0, 6, 3, 0, 1, 6, 18, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.093117}
{'[6, 2, 0, 0, 6, 3, 0, 1, 6, 18, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0933962}
{'[6, 2, 0, 0, 6, 3, 0, 1, 6, 18, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.093107}
{'[6, 2, 0, 0, 6, 3, 0, 1, 6, 18, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.093111}
{'[6, 2, 0, 0, 6, 3, 0, 1, 6, 18, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0928712}
{'[6, 2, 0, 0, 6, 3, 0, 1, 6, 18, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0930009}
{'[6, 2, 0, 0, 6, 3, 0, 1, 6, 18, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.093029}
{'[6, 2, 0, 0, 6, 3, 0, 1, 6, 18, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0931129}
{'[6, 2, 0, 0, 6, 3, 0, 1, 6, 18, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.092999}
{'[6, 2, 0, 0, 6, 3, 0, 1, 6, 18, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0930691}
{'[6, 2, 0, 0, 6, 3, 0, 1, 6, 18, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.09307}
{'[6, 2, 0, 0, 6, 3, 0, 1, 6, 18, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0929091}
{'[6, 2, 0, 0, 6, 3, 0, 1, 6, 18, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.093132}
{'[6, 2, 0, 0, 6, 3, 0, 1, 6, 18, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0932119}
{'[6, 2, 0, 0, 6, 3, 0, 1, 6, 18, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0932281}
{'[6, 2, 0, 0, 6, 3, 0, 1, 6, 18, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.092937}
{'[6, 2, 0, 0, 6, 3, 0, 1, 6, 18, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0932279}
{'[6, 2, 0, 0, 6, 3, 0, 1, 6, 18, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0929661}
{'[6, 2, 0, 0, 6, 3, 0, 1, 6, 18, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0934241}

out:
 ["{'[6, 2, 0, 0, 6, 3, 0, 1, 6, 18, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0929909}", "{'[6, 2, 0, 0, 6, 3, 0, 1, 6, 18, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0928788}", "{'[6, 2, 0, 0, 6, 3, 0, 1, 6, 18, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.092499}", "{'[6, 2, 0, 0, 6, 3, 0, 1, 6, 18, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0931051}", "{'[6, 2, 0, 0, 6, 3, 0, 1, 6, 18, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.092994}", "{'[6, 2, 0, 0, 6, 3, 0, 1, 6, 18, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0929639}", "{'[6, 2, 0, 0, 6, 3, 0, 1, 6, 18, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0929511}", "{'[6, 2, 0, 0, 6, 3, 0, 1, 6, 18, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0930111}", "{'[6, 2, 0, 0, 6, 3, 0, 1, 6, 18, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0929029}", "{'[6, 2, 0, 0, 6, 3, 0, 1, 6, 18, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0930941}", "{'[6, 2, 0, 0, 6, 3, 0, 1, 6, 18, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0931349}", "{'[6, 2, 0, 0, 6, 3, 0, 1, 6, 18, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.093117}", "{'[6, 2, 0, 0, 6, 3, 0, 1, 6, 18, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0933962}", "{'[6, 2, 0, 0, 6, 3, 0, 1, 6, 18, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.093107}", "{'[6, 2, 0, 0, 6, 3, 0, 1, 6, 18, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.093111}", "{'[6, 2, 0, 0, 6, 3, 0, 1, 6, 18, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0928712}", "{'[6, 2, 0, 0, 6, 3, 0, 1, 6, 18, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0930009}", "{'[6, 2, 0, 0, 6, 3, 0, 1, 6, 18, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.093029}", "{'[6, 2, 0, 0, 6, 3, 0, 1, 6, 18, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0931129}", "{'[6, 2, 0, 0, 6, 3, 0, 1, 6, 18, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.092999}", "{'[6, 2, 0, 0, 6, 3, 0, 1, 6, 18, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0930691}", "{'[6, 2, 0, 0, 6, 3, 0, 1, 6, 18, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.09307}", "{'[6, 2, 0, 0, 6, 3, 0, 1, 6, 18, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0929091}", "{'[6, 2, 0, 0, 6, 3, 0, 1, 6, 18, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.093132}", "{'[6, 2, 0, 0, 6, 3, 0, 1, 6, 18, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0932119}", "{'[6, 2, 0, 0, 6, 3, 0, 1, 6, 18, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0932281}", "{'[6, 2, 0, 0, 6, 3, 0, 1, 6, 18, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.092937}", "{'[6, 2, 0, 0, 6, 3, 0, 1, 6, 18, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0932279}", "{'[6, 2, 0, 0, 6, 3, 0, 1, 6, 18, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0929661}", "{'[6, 2, 0, 0, 6, 3, 0, 1, 6, 18, 0, 4, 1, 1, 0, 1, 0, 1]' : 0.0934241}"]
returning from 'run': {'[6, 2, 0, 0, 6, 3, 0, 1, 6, 18, 0, 4, 1, 1, 0, 1, 0, 1]': ([0.0929909, 0.0928788, 0.092499, 0.0931051, 0.092994, 0.0929639, 0.0929511, 0.0930111, 0.0929029, 0.0930941, 0.0931349, 0.093117, 0.0933962, 0.093107, 0.093111, 0.0928712, 0.0930009, 0.093029, 0.0931129, 0.092999, 0.0930691, 0.09307, 0.0929091, 0.093132, 0.0932119, 0.0932281, 0.092937, 0.0932279, 0.0929661, 0.0934241], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 2, 0, 0, 6, 3, 0, 1, 6, 18, 0, 4, 1, 1, 0, 1, 0, 1]': ([0.0929909, 0.0928788, 0.092499, 0.0931051, 0.092994, 0.0929639, 0.0929511, 0.0930111, 0.0929029, 0.0930941, 0.0931349, 0.093117, 0.0933962, 0.093107, 0.093111, 0.0928712, 0.0930009, 0.093029, 0.0931129, 0.092999, 0.0930691, 0.09307, 0.0929091, 0.093132, 0.0932119, 0.0932281, 0.092937, 0.0932279, 0.0929661, 0.0934241], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	5
        Additions: 		646
        Multiplications: 	270
        Divisions: 		0
        Logical: 		0
        Reads: 			1388
        Writes: 		286
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest56.exe __orio_perftest56.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest56.exe  
Program Test Output: 
{'[0, 6, 0, 1, 6, 2, 1, 0, 28, 0, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.115871}
{'[0, 6, 0, 1, 6, 2, 1, 0, 28, 0, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.115846}
{'[0, 6, 0, 1, 6, 2, 1, 0, 28, 0, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.115774}
{'[0, 6, 0, 1, 6, 2, 1, 0, 28, 0, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.115807}
{'[0, 6, 0, 1, 6, 2, 1, 0, 28, 0, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.113595}
{'[0, 6, 0, 1, 6, 2, 1, 0, 28, 0, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.0999758}
{'[0, 6, 0, 1, 6, 2, 1, 0, 28, 0, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.099715}
{'[0, 6, 0, 1, 6, 2, 1, 0, 28, 0, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.0991578}
{'[0, 6, 0, 1, 6, 2, 1, 0, 28, 0, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.09917}
{'[0, 6, 0, 1, 6, 2, 1, 0, 28, 0, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.0992892}
{'[0, 6, 0, 1, 6, 2, 1, 0, 28, 0, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.099031}
{'[0, 6, 0, 1, 6, 2, 1, 0, 28, 0, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.0992541}
{'[0, 6, 0, 1, 6, 2, 1, 0, 28, 0, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.099159}
{'[0, 6, 0, 1, 6, 2, 1, 0, 28, 0, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.099215}
{'[0, 6, 0, 1, 6, 2, 1, 0, 28, 0, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.099118}
{'[0, 6, 0, 1, 6, 2, 1, 0, 28, 0, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.0991759}
{'[0, 6, 0, 1, 6, 2, 1, 0, 28, 0, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.0993431}
{'[0, 6, 0, 1, 6, 2, 1, 0, 28, 0, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.0994501}
{'[0, 6, 0, 1, 6, 2, 1, 0, 28, 0, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.099447}
{'[0, 6, 0, 1, 6, 2, 1, 0, 28, 0, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.0992458}
{'[0, 6, 0, 1, 6, 2, 1, 0, 28, 0, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.099211}
{'[0, 6, 0, 1, 6, 2, 1, 0, 28, 0, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.0993989}
{'[0, 6, 0, 1, 6, 2, 1, 0, 28, 0, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.099107}
{'[0, 6, 0, 1, 6, 2, 1, 0, 28, 0, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.0990989}
{'[0, 6, 0, 1, 6, 2, 1, 0, 28, 0, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.0990629}
{'[0, 6, 0, 1, 6, 2, 1, 0, 28, 0, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.099232}
{'[0, 6, 0, 1, 6, 2, 1, 0, 28, 0, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.0992379}
{'[0, 6, 0, 1, 6, 2, 1, 0, 28, 0, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.099504}
{'[0, 6, 0, 1, 6, 2, 1, 0, 28, 0, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.0993478}
{'[0, 6, 0, 1, 6, 2, 1, 0, 28, 0, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.0991402}

out:
 ["{'[0, 6, 0, 1, 6, 2, 1, 0, 28, 0, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.115871}", "{'[0, 6, 0, 1, 6, 2, 1, 0, 28, 0, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.115846}", "{'[0, 6, 0, 1, 6, 2, 1, 0, 28, 0, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.115774}", "{'[0, 6, 0, 1, 6, 2, 1, 0, 28, 0, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.115807}", "{'[0, 6, 0, 1, 6, 2, 1, 0, 28, 0, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.113595}", "{'[0, 6, 0, 1, 6, 2, 1, 0, 28, 0, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.0999758}", "{'[0, 6, 0, 1, 6, 2, 1, 0, 28, 0, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.099715}", "{'[0, 6, 0, 1, 6, 2, 1, 0, 28, 0, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.0991578}", "{'[0, 6, 0, 1, 6, 2, 1, 0, 28, 0, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.09917}", "{'[0, 6, 0, 1, 6, 2, 1, 0, 28, 0, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.0992892}", "{'[0, 6, 0, 1, 6, 2, 1, 0, 28, 0, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.099031}", "{'[0, 6, 0, 1, 6, 2, 1, 0, 28, 0, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.0992541}", "{'[0, 6, 0, 1, 6, 2, 1, 0, 28, 0, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.099159}", "{'[0, 6, 0, 1, 6, 2, 1, 0, 28, 0, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.099215}", "{'[0, 6, 0, 1, 6, 2, 1, 0, 28, 0, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.099118}", "{'[0, 6, 0, 1, 6, 2, 1, 0, 28, 0, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.0991759}", "{'[0, 6, 0, 1, 6, 2, 1, 0, 28, 0, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.0993431}", "{'[0, 6, 0, 1, 6, 2, 1, 0, 28, 0, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.0994501}", "{'[0, 6, 0, 1, 6, 2, 1, 0, 28, 0, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.099447}", "{'[0, 6, 0, 1, 6, 2, 1, 0, 28, 0, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.0992458}", "{'[0, 6, 0, 1, 6, 2, 1, 0, 28, 0, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.099211}", "{'[0, 6, 0, 1, 6, 2, 1, 0, 28, 0, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.0993989}", "{'[0, 6, 0, 1, 6, 2, 1, 0, 28, 0, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.099107}", "{'[0, 6, 0, 1, 6, 2, 1, 0, 28, 0, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.0990989}", "{'[0, 6, 0, 1, 6, 2, 1, 0, 28, 0, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.0990629}", "{'[0, 6, 0, 1, 6, 2, 1, 0, 28, 0, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.099232}", "{'[0, 6, 0, 1, 6, 2, 1, 0, 28, 0, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.0992379}", "{'[0, 6, 0, 1, 6, 2, 1, 0, 28, 0, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.099504}", "{'[0, 6, 0, 1, 6, 2, 1, 0, 28, 0, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.0993478}", "{'[0, 6, 0, 1, 6, 2, 1, 0, 28, 0, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.0991402}"]
returning from 'run': {'[0, 6, 0, 1, 6, 2, 1, 0, 28, 0, 0, 4, 1, 0, 1, 1, 0, 0]': ([0.115871, 0.115846, 0.115774, 0.115807, 0.113595, 0.0999758, 0.099715, 0.0991578, 0.09917, 0.0992892, 0.099031, 0.0992541, 0.099159, 0.099215, 0.099118, 0.0991759, 0.0993431, 0.0994501, 0.099447, 0.0992458, 0.099211, 0.0993989, 0.099107, 0.0990989, 0.0990629, 0.099232, 0.0992379, 0.099504, 0.0993478, 0.0991402], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 0, 1, 6, 2, 1, 0, 28, 0, 0, 4, 1, 0, 1, 1, 0, 0]': ([0.115871, 0.115846, 0.115774, 0.115807, 0.113595, 0.0999758, 0.099715, 0.0991578, 0.09917, 0.0992892, 0.099031, 0.0992541, 0.099159, 0.099215, 0.099118, 0.0991759, 0.0993431, 0.0994501, 0.099447, 0.0992458, 0.099211, 0.0993989, 0.099107, 0.0990989, 0.0990629, 0.099232, 0.0992379, 0.099504, 0.0993478, 0.0991402], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		2138
        Multiplications: 	1054
        Divisions: 		0
        Logical: 		0
        Reads: 			4158
        Writes: 		704
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest57.exe __orio_perftest57.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest57.exe  
Program Test Output: 
{'[1, 0, 0, 2, 4, 0, 0, 1, 7, 29, 0, 4, 0, 1, 1, 1, 0, 1]' : 0.17643}
{'[1, 0, 0, 2, 4, 0, 0, 1, 7, 29, 0, 4, 0, 1, 1, 1, 0, 1]' : 0.176303}
{'[1, 0, 0, 2, 4, 0, 0, 1, 7, 29, 0, 4, 0, 1, 1, 1, 0, 1]' : 0.176544}
{'[1, 0, 0, 2, 4, 0, 0, 1, 7, 29, 0, 4, 0, 1, 1, 1, 0, 1]' : 0.156624}
{'[1, 0, 0, 2, 4, 0, 0, 1, 7, 29, 0, 4, 0, 1, 1, 1, 0, 1]' : 0.14826}
{'[1, 0, 0, 2, 4, 0, 0, 1, 7, 29, 0, 4, 0, 1, 1, 1, 0, 1]' : 0.148589}
{'[1, 0, 0, 2, 4, 0, 0, 1, 7, 29, 0, 4, 0, 1, 1, 1, 0, 1]' : 0.148265}
{'[1, 0, 0, 2, 4, 0, 0, 1, 7, 29, 0, 4, 0, 1, 1, 1, 0, 1]' : 0.148187}
{'[1, 0, 0, 2, 4, 0, 0, 1, 7, 29, 0, 4, 0, 1, 1, 1, 0, 1]' : 0.148281}
{'[1, 0, 0, 2, 4, 0, 0, 1, 7, 29, 0, 4, 0, 1, 1, 1, 0, 1]' : 0.148186}
{'[1, 0, 0, 2, 4, 0, 0, 1, 7, 29, 0, 4, 0, 1, 1, 1, 0, 1]' : 0.148299}
{'[1, 0, 0, 2, 4, 0, 0, 1, 7, 29, 0, 4, 0, 1, 1, 1, 0, 1]' : 0.148065}
{'[1, 0, 0, 2, 4, 0, 0, 1, 7, 29, 0, 4, 0, 1, 1, 1, 0, 1]' : 0.148416}
{'[1, 0, 0, 2, 4, 0, 0, 1, 7, 29, 0, 4, 0, 1, 1, 1, 0, 1]' : 0.148355}
{'[1, 0, 0, 2, 4, 0, 0, 1, 7, 29, 0, 4, 0, 1, 1, 1, 0, 1]' : 0.148299}
{'[1, 0, 0, 2, 4, 0, 0, 1, 7, 29, 0, 4, 0, 1, 1, 1, 0, 1]' : 0.148621}
{'[1, 0, 0, 2, 4, 0, 0, 1, 7, 29, 0, 4, 0, 1, 1, 1, 0, 1]' : 0.148148}
{'[1, 0, 0, 2, 4, 0, 0, 1, 7, 29, 0, 4, 0, 1, 1, 1, 0, 1]' : 0.148218}
{'[1, 0, 0, 2, 4, 0, 0, 1, 7, 29, 0, 4, 0, 1, 1, 1, 0, 1]' : 0.148148}
{'[1, 0, 0, 2, 4, 0, 0, 1, 7, 29, 0, 4, 0, 1, 1, 1, 0, 1]' : 0.148187}
{'[1, 0, 0, 2, 4, 0, 0, 1, 7, 29, 0, 4, 0, 1, 1, 1, 0, 1]' : 0.148604}
{'[1, 0, 0, 2, 4, 0, 0, 1, 7, 29, 0, 4, 0, 1, 1, 1, 0, 1]' : 0.148192}
{'[1, 0, 0, 2, 4, 0, 0, 1, 7, 29, 0, 4, 0, 1, 1, 1, 0, 1]' : 0.148298}
{'[1, 0, 0, 2, 4, 0, 0, 1, 7, 29, 0, 4, 0, 1, 1, 1, 0, 1]' : 0.148241}
{'[1, 0, 0, 2, 4, 0, 0, 1, 7, 29, 0, 4, 0, 1, 1, 1, 0, 1]' : 0.148264}
{'[1, 0, 0, 2, 4, 0, 0, 1, 7, 29, 0, 4, 0, 1, 1, 1, 0, 1]' : 0.148649}
{'[1, 0, 0, 2, 4, 0, 0, 1, 7, 29, 0, 4, 0, 1, 1, 1, 0, 1]' : 0.148257}
{'[1, 0, 0, 2, 4, 0, 0, 1, 7, 29, 0, 4, 0, 1, 1, 1, 0, 1]' : 0.148562}
{'[1, 0, 0, 2, 4, 0, 0, 1, 7, 29, 0, 4, 0, 1, 1, 1, 0, 1]' : 0.148392}
{'[1, 0, 0, 2, 4, 0, 0, 1, 7, 29, 0, 4, 0, 1, 1, 1, 0, 1]' : 0.14825}

out:
 ["{'[1, 0, 0, 2, 4, 0, 0, 1, 7, 29, 0, 4, 0, 1, 1, 1, 0, 1]' : 0.17643}", "{'[1, 0, 0, 2, 4, 0, 0, 1, 7, 29, 0, 4, 0, 1, 1, 1, 0, 1]' : 0.176303}", "{'[1, 0, 0, 2, 4, 0, 0, 1, 7, 29, 0, 4, 0, 1, 1, 1, 0, 1]' : 0.176544}", "{'[1, 0, 0, 2, 4, 0, 0, 1, 7, 29, 0, 4, 0, 1, 1, 1, 0, 1]' : 0.156624}", "{'[1, 0, 0, 2, 4, 0, 0, 1, 7, 29, 0, 4, 0, 1, 1, 1, 0, 1]' : 0.14826}", "{'[1, 0, 0, 2, 4, 0, 0, 1, 7, 29, 0, 4, 0, 1, 1, 1, 0, 1]' : 0.148589}", "{'[1, 0, 0, 2, 4, 0, 0, 1, 7, 29, 0, 4, 0, 1, 1, 1, 0, 1]' : 0.148265}", "{'[1, 0, 0, 2, 4, 0, 0, 1, 7, 29, 0, 4, 0, 1, 1, 1, 0, 1]' : 0.148187}", "{'[1, 0, 0, 2, 4, 0, 0, 1, 7, 29, 0, 4, 0, 1, 1, 1, 0, 1]' : 0.148281}", "{'[1, 0, 0, 2, 4, 0, 0, 1, 7, 29, 0, 4, 0, 1, 1, 1, 0, 1]' : 0.148186}", "{'[1, 0, 0, 2, 4, 0, 0, 1, 7, 29, 0, 4, 0, 1, 1, 1, 0, 1]' : 0.148299}", "{'[1, 0, 0, 2, 4, 0, 0, 1, 7, 29, 0, 4, 0, 1, 1, 1, 0, 1]' : 0.148065}", "{'[1, 0, 0, 2, 4, 0, 0, 1, 7, 29, 0, 4, 0, 1, 1, 1, 0, 1]' : 0.148416}", "{'[1, 0, 0, 2, 4, 0, 0, 1, 7, 29, 0, 4, 0, 1, 1, 1, 0, 1]' : 0.148355}", "{'[1, 0, 0, 2, 4, 0, 0, 1, 7, 29, 0, 4, 0, 1, 1, 1, 0, 1]' : 0.148299}", "{'[1, 0, 0, 2, 4, 0, 0, 1, 7, 29, 0, 4, 0, 1, 1, 1, 0, 1]' : 0.148621}", "{'[1, 0, 0, 2, 4, 0, 0, 1, 7, 29, 0, 4, 0, 1, 1, 1, 0, 1]' : 0.148148}", "{'[1, 0, 0, 2, 4, 0, 0, 1, 7, 29, 0, 4, 0, 1, 1, 1, 0, 1]' : 0.148218}", "{'[1, 0, 0, 2, 4, 0, 0, 1, 7, 29, 0, 4, 0, 1, 1, 1, 0, 1]' : 0.148148}", "{'[1, 0, 0, 2, 4, 0, 0, 1, 7, 29, 0, 4, 0, 1, 1, 1, 0, 1]' : 0.148187}", "{'[1, 0, 0, 2, 4, 0, 0, 1, 7, 29, 0, 4, 0, 1, 1, 1, 0, 1]' : 0.148604}", "{'[1, 0, 0, 2, 4, 0, 0, 1, 7, 29, 0, 4, 0, 1, 1, 1, 0, 1]' : 0.148192}", "{'[1, 0, 0, 2, 4, 0, 0, 1, 7, 29, 0, 4, 0, 1, 1, 1, 0, 1]' : 0.148298}", "{'[1, 0, 0, 2, 4, 0, 0, 1, 7, 29, 0, 4, 0, 1, 1, 1, 0, 1]' : 0.148241}", "{'[1, 0, 0, 2, 4, 0, 0, 1, 7, 29, 0, 4, 0, 1, 1, 1, 0, 1]' : 0.148264}", "{'[1, 0, 0, 2, 4, 0, 0, 1, 7, 29, 0, 4, 0, 1, 1, 1, 0, 1]' : 0.148649}", "{'[1, 0, 0, 2, 4, 0, 0, 1, 7, 29, 0, 4, 0, 1, 1, 1, 0, 1]' : 0.148257}", "{'[1, 0, 0, 2, 4, 0, 0, 1, 7, 29, 0, 4, 0, 1, 1, 1, 0, 1]' : 0.148562}", "{'[1, 0, 0, 2, 4, 0, 0, 1, 7, 29, 0, 4, 0, 1, 1, 1, 0, 1]' : 0.148392}", "{'[1, 0, 0, 2, 4, 0, 0, 1, 7, 29, 0, 4, 0, 1, 1, 1, 0, 1]' : 0.14825}"]
returning from 'run': {'[1, 0, 0, 2, 4, 0, 0, 1, 7, 29, 0, 4, 0, 1, 1, 1, 0, 1]': ([0.17643, 0.176303, 0.176544, 0.156624, 0.14826, 0.148589, 0.148265, 0.148187, 0.148281, 0.148186, 0.148299, 0.148065, 0.148416, 0.148355, 0.148299, 0.148621, 0.148148, 0.148218, 0.148148, 0.148187, 0.148604, 0.148192, 0.148298, 0.148241, 0.148264, 0.148649, 0.148257, 0.148562, 0.148392, 0.14825], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 0, 2, 4, 0, 0, 1, 7, 29, 0, 4, 0, 1, 1, 1, 0, 1]': ([0.17643, 0.176303, 0.176544, 0.156624, 0.14826, 0.148589, 0.148265, 0.148187, 0.148281, 0.148186, 0.148299, 0.148065, 0.148416, 0.148355, 0.148299, 0.148621, 0.148148, 0.148218, 0.148148, 0.148187, 0.148604, 0.148192, 0.148298, 0.148241, 0.148264, 0.148649, 0.148257, 0.148562, 0.148392, 0.14825], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	53
        Max loop nest depth: 	5
        Additions: 		2276
        Multiplications: 	532
        Divisions: 		0
        Logical: 		0
        Reads: 			3684
        Writes: 		412
        Comparisons:		53
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest58.exe __orio_perftest58.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest58.exe  
Program Test Output: 
{'[1, 3, 6, 0, 6, 0, 1, 1, 10, 4, 0, 4, 2, 0, 0, 0, 0, 0]' : 0.19761}
{'[1, 3, 6, 0, 6, 0, 1, 1, 10, 4, 0, 4, 2, 0, 0, 0, 0, 0]' : 0.198474}
{'[1, 3, 6, 0, 6, 0, 1, 1, 10, 4, 0, 4, 2, 0, 0, 0, 0, 0]' : 0.189006}
{'[1, 3, 6, 0, 6, 0, 1, 1, 10, 4, 0, 4, 2, 0, 0, 0, 0, 0]' : 0.167099}
{'[1, 3, 6, 0, 6, 0, 1, 1, 10, 4, 0, 4, 2, 0, 0, 0, 0, 0]' : 0.167838}
{'[1, 3, 6, 0, 6, 0, 1, 1, 10, 4, 0, 4, 2, 0, 0, 0, 0, 0]' : 0.167478}
{'[1, 3, 6, 0, 6, 0, 1, 1, 10, 4, 0, 4, 2, 0, 0, 0, 0, 0]' : 0.167216}
{'[1, 3, 6, 0, 6, 0, 1, 1, 10, 4, 0, 4, 2, 0, 0, 0, 0, 0]' : 0.167302}
{'[1, 3, 6, 0, 6, 0, 1, 1, 10, 4, 0, 4, 2, 0, 0, 0, 0, 0]' : 0.167059}
{'[1, 3, 6, 0, 6, 0, 1, 1, 10, 4, 0, 4, 2, 0, 0, 0, 0, 0]' : 0.167287}
{'[1, 3, 6, 0, 6, 0, 1, 1, 10, 4, 0, 4, 2, 0, 0, 0, 0, 0]' : 0.166968}
{'[1, 3, 6, 0, 6, 0, 1, 1, 10, 4, 0, 4, 2, 0, 0, 0, 0, 0]' : 0.167203}
{'[1, 3, 6, 0, 6, 0, 1, 1, 10, 4, 0, 4, 2, 0, 0, 0, 0, 0]' : 0.167673}
{'[1, 3, 6, 0, 6, 0, 1, 1, 10, 4, 0, 4, 2, 0, 0, 0, 0, 0]' : 0.167305}
{'[1, 3, 6, 0, 6, 0, 1, 1, 10, 4, 0, 4, 2, 0, 0, 0, 0, 0]' : 0.167361}
{'[1, 3, 6, 0, 6, 0, 1, 1, 10, 4, 0, 4, 2, 0, 0, 0, 0, 0]' : 0.16706}
{'[1, 3, 6, 0, 6, 0, 1, 1, 10, 4, 0, 4, 2, 0, 0, 0, 0, 0]' : 0.167102}
{'[1, 3, 6, 0, 6, 0, 1, 1, 10, 4, 0, 4, 2, 0, 0, 0, 0, 0]' : 0.167201}
{'[1, 3, 6, 0, 6, 0, 1, 1, 10, 4, 0, 4, 2, 0, 0, 0, 0, 0]' : 0.167279}
{'[1, 3, 6, 0, 6, 0, 1, 1, 10, 4, 0, 4, 2, 0, 0, 0, 0, 0]' : 0.167304}
{'[1, 3, 6, 0, 6, 0, 1, 1, 10, 4, 0, 4, 2, 0, 0, 0, 0, 0]' : 0.167057}
{'[1, 3, 6, 0, 6, 0, 1, 1, 10, 4, 0, 4, 2, 0, 0, 0, 0, 0]' : 0.167192}
{'[1, 3, 6, 0, 6, 0, 1, 1, 10, 4, 0, 4, 2, 0, 0, 0, 0, 0]' : 0.167429}
{'[1, 3, 6, 0, 6, 0, 1, 1, 10, 4, 0, 4, 2, 0, 0, 0, 0, 0]' : 0.167219}
{'[1, 3, 6, 0, 6, 0, 1, 1, 10, 4, 0, 4, 2, 0, 0, 0, 0, 0]' : 0.167377}
{'[1, 3, 6, 0, 6, 0, 1, 1, 10, 4, 0, 4, 2, 0, 0, 0, 0, 0]' : 0.167409}
{'[1, 3, 6, 0, 6, 0, 1, 1, 10, 4, 0, 4, 2, 0, 0, 0, 0, 0]' : 0.167196}
{'[1, 3, 6, 0, 6, 0, 1, 1, 10, 4, 0, 4, 2, 0, 0, 0, 0, 0]' : 0.167067}
{'[1, 3, 6, 0, 6, 0, 1, 1, 10, 4, 0, 4, 2, 0, 0, 0, 0, 0]' : 0.167409}
{'[1, 3, 6, 0, 6, 0, 1, 1, 10, 4, 0, 4, 2, 0, 0, 0, 0, 0]' : 0.167227}

out:
 ["{'[1, 3, 6, 0, 6, 0, 1, 1, 10, 4, 0, 4, 2, 0, 0, 0, 0, 0]' : 0.19761}", "{'[1, 3, 6, 0, 6, 0, 1, 1, 10, 4, 0, 4, 2, 0, 0, 0, 0, 0]' : 0.198474}", "{'[1, 3, 6, 0, 6, 0, 1, 1, 10, 4, 0, 4, 2, 0, 0, 0, 0, 0]' : 0.189006}", "{'[1, 3, 6, 0, 6, 0, 1, 1, 10, 4, 0, 4, 2, 0, 0, 0, 0, 0]' : 0.167099}", "{'[1, 3, 6, 0, 6, 0, 1, 1, 10, 4, 0, 4, 2, 0, 0, 0, 0, 0]' : 0.167838}", "{'[1, 3, 6, 0, 6, 0, 1, 1, 10, 4, 0, 4, 2, 0, 0, 0, 0, 0]' : 0.167478}", "{'[1, 3, 6, 0, 6, 0, 1, 1, 10, 4, 0, 4, 2, 0, 0, 0, 0, 0]' : 0.167216}", "{'[1, 3, 6, 0, 6, 0, 1, 1, 10, 4, 0, 4, 2, 0, 0, 0, 0, 0]' : 0.167302}", "{'[1, 3, 6, 0, 6, 0, 1, 1, 10, 4, 0, 4, 2, 0, 0, 0, 0, 0]' : 0.167059}", "{'[1, 3, 6, 0, 6, 0, 1, 1, 10, 4, 0, 4, 2, 0, 0, 0, 0, 0]' : 0.167287}", "{'[1, 3, 6, 0, 6, 0, 1, 1, 10, 4, 0, 4, 2, 0, 0, 0, 0, 0]' : 0.166968}", "{'[1, 3, 6, 0, 6, 0, 1, 1, 10, 4, 0, 4, 2, 0, 0, 0, 0, 0]' : 0.167203}", "{'[1, 3, 6, 0, 6, 0, 1, 1, 10, 4, 0, 4, 2, 0, 0, 0, 0, 0]' : 0.167673}", "{'[1, 3, 6, 0, 6, 0, 1, 1, 10, 4, 0, 4, 2, 0, 0, 0, 0, 0]' : 0.167305}", "{'[1, 3, 6, 0, 6, 0, 1, 1, 10, 4, 0, 4, 2, 0, 0, 0, 0, 0]' : 0.167361}", "{'[1, 3, 6, 0, 6, 0, 1, 1, 10, 4, 0, 4, 2, 0, 0, 0, 0, 0]' : 0.16706}", "{'[1, 3, 6, 0, 6, 0, 1, 1, 10, 4, 0, 4, 2, 0, 0, 0, 0, 0]' : 0.167102}", "{'[1, 3, 6, 0, 6, 0, 1, 1, 10, 4, 0, 4, 2, 0, 0, 0, 0, 0]' : 0.167201}", "{'[1, 3, 6, 0, 6, 0, 1, 1, 10, 4, 0, 4, 2, 0, 0, 0, 0, 0]' : 0.167279}", "{'[1, 3, 6, 0, 6, 0, 1, 1, 10, 4, 0, 4, 2, 0, 0, 0, 0, 0]' : 0.167304}", "{'[1, 3, 6, 0, 6, 0, 1, 1, 10, 4, 0, 4, 2, 0, 0, 0, 0, 0]' : 0.167057}", "{'[1, 3, 6, 0, 6, 0, 1, 1, 10, 4, 0, 4, 2, 0, 0, 0, 0, 0]' : 0.167192}", "{'[1, 3, 6, 0, 6, 0, 1, 1, 10, 4, 0, 4, 2, 0, 0, 0, 0, 0]' : 0.167429}", "{'[1, 3, 6, 0, 6, 0, 1, 1, 10, 4, 0, 4, 2, 0, 0, 0, 0, 0]' : 0.167219}", "{'[1, 3, 6, 0, 6, 0, 1, 1, 10, 4, 0, 4, 2, 0, 0, 0, 0, 0]' : 0.167377}", "{'[1, 3, 6, 0, 6, 0, 1, 1, 10, 4, 0, 4, 2, 0, 0, 0, 0, 0]' : 0.167409}", "{'[1, 3, 6, 0, 6, 0, 1, 1, 10, 4, 0, 4, 2, 0, 0, 0, 0, 0]' : 0.167196}", "{'[1, 3, 6, 0, 6, 0, 1, 1, 10, 4, 0, 4, 2, 0, 0, 0, 0, 0]' : 0.167067}", "{'[1, 3, 6, 0, 6, 0, 1, 1, 10, 4, 0, 4, 2, 0, 0, 0, 0, 0]' : 0.167409}", "{'[1, 3, 6, 0, 6, 0, 1, 1, 10, 4, 0, 4, 2, 0, 0, 0, 0, 0]' : 0.167227}"]
returning from 'run': {'[1, 3, 6, 0, 6, 0, 1, 1, 10, 4, 0, 4, 2, 0, 0, 0, 0, 0]': ([0.19761, 0.198474, 0.189006, 0.167099, 0.167838, 0.167478, 0.167216, 0.167302, 0.167059, 0.167287, 0.166968, 0.167203, 0.167673, 0.167305, 0.167361, 0.16706, 0.167102, 0.167201, 0.167279, 0.167304, 0.167057, 0.167192, 0.167429, 0.167219, 0.167377, 0.167409, 0.167196, 0.167067, 0.167409, 0.167227], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 3, 6, 0, 6, 0, 1, 1, 10, 4, 0, 4, 2, 0, 0, 0, 0, 0]': ([0.19761, 0.198474, 0.189006, 0.167099, 0.167838, 0.167478, 0.167216, 0.167302, 0.167059, 0.167287, 0.166968, 0.167203, 0.167673, 0.167305, 0.167361, 0.16706, 0.167102, 0.167201, 0.167279, 0.167304, 0.167057, 0.167192, 0.167429, 0.167219, 0.167377, 0.167409, 0.167196, 0.167067, 0.167409, 0.167227], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	5
        Additions: 		108
        Multiplications: 	30
        Divisions: 		0
        Logical: 		0
        Reads: 			286
        Writes: 		76
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest59.exe __orio_perftest59.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest59.exe  
Program Test Output: 
{'[3, 3, 0, 3, 1, 2, 0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 1, 0]' : 0.182389}
{'[3, 3, 0, 3, 1, 2, 0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 1, 0]' : 0.182188}
{'[3, 3, 0, 3, 1, 2, 0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 1, 0]' : 0.182218}
{'[3, 3, 0, 3, 1, 2, 0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 1, 0]' : 0.182232}
{'[3, 3, 0, 3, 1, 2, 0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 1, 0]' : 0.159196}
{'[3, 3, 0, 3, 1, 2, 0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 1, 0]' : 0.153119}
{'[3, 3, 0, 3, 1, 2, 0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 1, 0]' : 0.153127}
{'[3, 3, 0, 3, 1, 2, 0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 1, 0]' : 0.1534}
{'[3, 3, 0, 3, 1, 2, 0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 1, 0]' : 0.153261}
{'[3, 3, 0, 3, 1, 2, 0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 1, 0]' : 0.153267}
{'[3, 3, 0, 3, 1, 2, 0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 1, 0]' : 0.153315}
{'[3, 3, 0, 3, 1, 2, 0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 1, 0]' : 0.153198}
{'[3, 3, 0, 3, 1, 2, 0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 1, 0]' : 0.153195}
{'[3, 3, 0, 3, 1, 2, 0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 1, 0]' : 0.15317}
{'[3, 3, 0, 3, 1, 2, 0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 1, 0]' : 0.153375}
{'[3, 3, 0, 3, 1, 2, 0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 1, 0]' : 0.153328}
{'[3, 3, 0, 3, 1, 2, 0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 1, 0]' : 0.153244}
{'[3, 3, 0, 3, 1, 2, 0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 1, 0]' : 0.153218}
{'[3, 3, 0, 3, 1, 2, 0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 1, 0]' : 0.153284}
{'[3, 3, 0, 3, 1, 2, 0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 1, 0]' : 0.153223}
{'[3, 3, 0, 3, 1, 2, 0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 1, 0]' : 0.153381}
{'[3, 3, 0, 3, 1, 2, 0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 1, 0]' : 0.153757}
{'[3, 3, 0, 3, 1, 2, 0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 1, 0]' : 0.153828}
{'[3, 3, 0, 3, 1, 2, 0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 1, 0]' : 0.15364}
{'[3, 3, 0, 3, 1, 2, 0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 1, 0]' : 0.153268}
{'[3, 3, 0, 3, 1, 2, 0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 1, 0]' : 0.153307}
{'[3, 3, 0, 3, 1, 2, 0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 1, 0]' : 0.153429}
{'[3, 3, 0, 3, 1, 2, 0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 1, 0]' : 0.153568}
{'[3, 3, 0, 3, 1, 2, 0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 1, 0]' : 0.153701}
{'[3, 3, 0, 3, 1, 2, 0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 1, 0]' : 0.153805}

out:
 ["{'[3, 3, 0, 3, 1, 2, 0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 1, 0]' : 0.182389}", "{'[3, 3, 0, 3, 1, 2, 0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 1, 0]' : 0.182188}", "{'[3, 3, 0, 3, 1, 2, 0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 1, 0]' : 0.182218}", "{'[3, 3, 0, 3, 1, 2, 0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 1, 0]' : 0.182232}", "{'[3, 3, 0, 3, 1, 2, 0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 1, 0]' : 0.159196}", "{'[3, 3, 0, 3, 1, 2, 0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 1, 0]' : 0.153119}", "{'[3, 3, 0, 3, 1, 2, 0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 1, 0]' : 0.153127}", "{'[3, 3, 0, 3, 1, 2, 0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 1, 0]' : 0.1534}", "{'[3, 3, 0, 3, 1, 2, 0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 1, 0]' : 0.153261}", "{'[3, 3, 0, 3, 1, 2, 0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 1, 0]' : 0.153267}", "{'[3, 3, 0, 3, 1, 2, 0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 1, 0]' : 0.153315}", "{'[3, 3, 0, 3, 1, 2, 0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 1, 0]' : 0.153198}", "{'[3, 3, 0, 3, 1, 2, 0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 1, 0]' : 0.153195}", "{'[3, 3, 0, 3, 1, 2, 0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 1, 0]' : 0.15317}", "{'[3, 3, 0, 3, 1, 2, 0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 1, 0]' : 0.153375}", "{'[3, 3, 0, 3, 1, 2, 0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 1, 0]' : 0.153328}", "{'[3, 3, 0, 3, 1, 2, 0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 1, 0]' : 0.153244}", "{'[3, 3, 0, 3, 1, 2, 0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 1, 0]' : 0.153218}", "{'[3, 3, 0, 3, 1, 2, 0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 1, 0]' : 0.153284}", "{'[3, 3, 0, 3, 1, 2, 0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 1, 0]' : 0.153223}", "{'[3, 3, 0, 3, 1, 2, 0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 1, 0]' : 0.153381}", "{'[3, 3, 0, 3, 1, 2, 0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 1, 0]' : 0.153757}", "{'[3, 3, 0, 3, 1, 2, 0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 1, 0]' : 0.153828}", "{'[3, 3, 0, 3, 1, 2, 0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 1, 0]' : 0.15364}", "{'[3, 3, 0, 3, 1, 2, 0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 1, 0]' : 0.153268}", "{'[3, 3, 0, 3, 1, 2, 0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 1, 0]' : 0.153307}", "{'[3, 3, 0, 3, 1, 2, 0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 1, 0]' : 0.153429}", "{'[3, 3, 0, 3, 1, 2, 0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 1, 0]' : 0.153568}", "{'[3, 3, 0, 3, 1, 2, 0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 1, 0]' : 0.153701}", "{'[3, 3, 0, 3, 1, 2, 0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 1, 0]' : 0.153805}"]
returning from 'run': {'[3, 3, 0, 3, 1, 2, 0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 1, 0]': ([0.182389, 0.182188, 0.182218, 0.182232, 0.159196, 0.153119, 0.153127, 0.1534, 0.153261, 0.153267, 0.153315, 0.153198, 0.153195, 0.15317, 0.153375, 0.153328, 0.153244, 0.153218, 0.153284, 0.153223, 0.153381, 0.153757, 0.153828, 0.15364, 0.153268, 0.153307, 0.153429, 0.153568, 0.153701, 0.153805], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 3, 0, 3, 1, 2, 0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 1, 0]': ([0.182389, 0.182188, 0.182218, 0.182232, 0.159196, 0.153119, 0.153127, 0.1534, 0.153261, 0.153267, 0.153315, 0.153198, 0.153195, 0.15317, 0.153375, 0.153328, 0.153244, 0.153218, 0.153284, 0.153223, 0.153381, 0.153757, 0.153828, 0.15364, 0.153268, 0.153307, 0.153429, 0.153568, 0.153701, 0.153805], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	42
        Max loop nest depth: 	5
        Additions: 		1081
        Multiplications: 	234
        Divisions: 		0
        Logical: 		0
        Reads: 			1813
        Writes: 		244
        Comparisons:		42
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest60.exe __orio_perftest60.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest60.exe  
Program Test Output: 
{'[0, 3, 1, 6, 3, 2, 1, 1, 8, 3, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.132548}
{'[0, 3, 1, 6, 3, 2, 1, 1, 8, 3, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.132206}
{'[0, 3, 1, 6, 3, 2, 1, 1, 8, 3, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.122544}
{'[0, 3, 1, 6, 3, 2, 1, 1, 8, 3, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.118601}
{'[0, 3, 1, 6, 3, 2, 1, 1, 8, 3, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.116792}
{'[0, 3, 1, 6, 3, 2, 1, 1, 8, 3, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.116875}
{'[0, 3, 1, 6, 3, 2, 1, 1, 8, 3, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.117194}
{'[0, 3, 1, 6, 3, 2, 1, 1, 8, 3, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.116788}
{'[0, 3, 1, 6, 3, 2, 1, 1, 8, 3, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.117279}
{'[0, 3, 1, 6, 3, 2, 1, 1, 8, 3, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.119949}
{'[0, 3, 1, 6, 3, 2, 1, 1, 8, 3, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.119751}
{'[0, 3, 1, 6, 3, 2, 1, 1, 8, 3, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.119963}
{'[0, 3, 1, 6, 3, 2, 1, 1, 8, 3, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.119925}
{'[0, 3, 1, 6, 3, 2, 1, 1, 8, 3, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.119977}
{'[0, 3, 1, 6, 3, 2, 1, 1, 8, 3, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.119775}
{'[0, 3, 1, 6, 3, 2, 1, 1, 8, 3, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.119959}
{'[0, 3, 1, 6, 3, 2, 1, 1, 8, 3, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.119885}
{'[0, 3, 1, 6, 3, 2, 1, 1, 8, 3, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.120132}
{'[0, 3, 1, 6, 3, 2, 1, 1, 8, 3, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.119749}
{'[0, 3, 1, 6, 3, 2, 1, 1, 8, 3, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.119891}
{'[0, 3, 1, 6, 3, 2, 1, 1, 8, 3, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.119065}
{'[0, 3, 1, 6, 3, 2, 1, 1, 8, 3, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.117018}
{'[0, 3, 1, 6, 3, 2, 1, 1, 8, 3, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.116705}
{'[0, 3, 1, 6, 3, 2, 1, 1, 8, 3, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.116878}
{'[0, 3, 1, 6, 3, 2, 1, 1, 8, 3, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.116871}
{'[0, 3, 1, 6, 3, 2, 1, 1, 8, 3, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.118087}
{'[0, 3, 1, 6, 3, 2, 1, 1, 8, 3, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.119926}
{'[0, 3, 1, 6, 3, 2, 1, 1, 8, 3, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.120073}
{'[0, 3, 1, 6, 3, 2, 1, 1, 8, 3, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.119931}
{'[0, 3, 1, 6, 3, 2, 1, 1, 8, 3, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.120106}

out:
 ["{'[0, 3, 1, 6, 3, 2, 1, 1, 8, 3, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.132548}", "{'[0, 3, 1, 6, 3, 2, 1, 1, 8, 3, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.132206}", "{'[0, 3, 1, 6, 3, 2, 1, 1, 8, 3, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.122544}", "{'[0, 3, 1, 6, 3, 2, 1, 1, 8, 3, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.118601}", "{'[0, 3, 1, 6, 3, 2, 1, 1, 8, 3, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.116792}", "{'[0, 3, 1, 6, 3, 2, 1, 1, 8, 3, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.116875}", "{'[0, 3, 1, 6, 3, 2, 1, 1, 8, 3, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.117194}", "{'[0, 3, 1, 6, 3, 2, 1, 1, 8, 3, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.116788}", "{'[0, 3, 1, 6, 3, 2, 1, 1, 8, 3, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.117279}", "{'[0, 3, 1, 6, 3, 2, 1, 1, 8, 3, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.119949}", "{'[0, 3, 1, 6, 3, 2, 1, 1, 8, 3, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.119751}", "{'[0, 3, 1, 6, 3, 2, 1, 1, 8, 3, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.119963}", "{'[0, 3, 1, 6, 3, 2, 1, 1, 8, 3, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.119925}", "{'[0, 3, 1, 6, 3, 2, 1, 1, 8, 3, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.119977}", "{'[0, 3, 1, 6, 3, 2, 1, 1, 8, 3, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.119775}", "{'[0, 3, 1, 6, 3, 2, 1, 1, 8, 3, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.119959}", "{'[0, 3, 1, 6, 3, 2, 1, 1, 8, 3, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.119885}", "{'[0, 3, 1, 6, 3, 2, 1, 1, 8, 3, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.120132}", "{'[0, 3, 1, 6, 3, 2, 1, 1, 8, 3, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.119749}", "{'[0, 3, 1, 6, 3, 2, 1, 1, 8, 3, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.119891}", "{'[0, 3, 1, 6, 3, 2, 1, 1, 8, 3, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.119065}", "{'[0, 3, 1, 6, 3, 2, 1, 1, 8, 3, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.117018}", "{'[0, 3, 1, 6, 3, 2, 1, 1, 8, 3, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.116705}", "{'[0, 3, 1, 6, 3, 2, 1, 1, 8, 3, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.116878}", "{'[0, 3, 1, 6, 3, 2, 1, 1, 8, 3, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.116871}", "{'[0, 3, 1, 6, 3, 2, 1, 1, 8, 3, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.118087}", "{'[0, 3, 1, 6, 3, 2, 1, 1, 8, 3, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.119926}", "{'[0, 3, 1, 6, 3, 2, 1, 1, 8, 3, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.120073}", "{'[0, 3, 1, 6, 3, 2, 1, 1, 8, 3, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.119931}", "{'[0, 3, 1, 6, 3, 2, 1, 1, 8, 3, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.120106}"]
returning from 'run': {'[0, 3, 1, 6, 3, 2, 1, 1, 8, 3, 0, 4, 1, 0, 1, 0, 1, 1]': ([0.132548, 0.132206, 0.122544, 0.118601, 0.116792, 0.116875, 0.117194, 0.116788, 0.117279, 0.119949, 0.119751, 0.119963, 0.119925, 0.119977, 0.119775, 0.119959, 0.119885, 0.120132, 0.119749, 0.119891, 0.119065, 0.117018, 0.116705, 0.116878, 0.116871, 0.118087, 0.119926, 0.120073, 0.119931, 0.120106], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 3, 1, 6, 3, 2, 1, 1, 8, 3, 0, 4, 1, 0, 1, 0, 1, 1]': ([0.132548, 0.132206, 0.122544, 0.118601, 0.116792, 0.116875, 0.117194, 0.116788, 0.117279, 0.119949, 0.119751, 0.119963, 0.119925, 0.119977, 0.119775, 0.119959, 0.119885, 0.120132, 0.119749, 0.119891, 0.119065, 0.117018, 0.116705, 0.116878, 0.116871, 0.118087, 0.119926, 0.120073, 0.119931, 0.120106], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	86
        Max loop nest depth: 	5
        Additions: 		6714
        Multiplications: 	1872
        Divisions: 		0
        Logical: 		0
        Reads: 			10414
        Writes: 		1242
        Comparisons:		86
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest61.exe __orio_perftest61.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest61.exe  
Program Test Output: 
{'[2, 6, 1, 5, 0, 0, 1, 0, 8, 22, 0, 4, 0, 0, 2, 0, 0, 1]' : 0.235239}
{'[2, 6, 1, 5, 0, 0, 1, 0, 8, 22, 0, 4, 0, 0, 2, 0, 0, 1]' : 0.235237}
{'[2, 6, 1, 5, 0, 0, 1, 0, 8, 22, 0, 4, 0, 0, 2, 0, 0, 1]' : 0.235266}
{'[2, 6, 1, 5, 0, 0, 1, 0, 8, 22, 0, 4, 0, 0, 2, 0, 0, 1]' : 0.2351}
{'[2, 6, 1, 5, 0, 0, 1, 0, 8, 22, 0, 4, 0, 0, 2, 0, 0, 1]' : 0.234955}
{'[2, 6, 1, 5, 0, 0, 1, 0, 8, 22, 0, 4, 0, 0, 2, 0, 0, 1]' : 0.235171}
{'[2, 6, 1, 5, 0, 0, 1, 0, 8, 22, 0, 4, 0, 0, 2, 0, 0, 1]' : 0.235038}
{'[2, 6, 1, 5, 0, 0, 1, 0, 8, 22, 0, 4, 0, 0, 2, 0, 0, 1]' : 0.235479}
{'[2, 6, 1, 5, 0, 0, 1, 0, 8, 22, 0, 4, 0, 0, 2, 0, 0, 1]' : 0.235043}
{'[2, 6, 1, 5, 0, 0, 1, 0, 8, 22, 0, 4, 0, 0, 2, 0, 0, 1]' : 0.235474}
{'[2, 6, 1, 5, 0, 0, 1, 0, 8, 22, 0, 4, 0, 0, 2, 0, 0, 1]' : 0.23506}
{'[2, 6, 1, 5, 0, 0, 1, 0, 8, 22, 0, 4, 0, 0, 2, 0, 0, 1]' : 0.234989}
{'[2, 6, 1, 5, 0, 0, 1, 0, 8, 22, 0, 4, 0, 0, 2, 0, 0, 1]' : 0.235355}
{'[2, 6, 1, 5, 0, 0, 1, 0, 8, 22, 0, 4, 0, 0, 2, 0, 0, 1]' : 0.234884}
{'[2, 6, 1, 5, 0, 0, 1, 0, 8, 22, 0, 4, 0, 0, 2, 0, 0, 1]' : 0.235394}
{'[2, 6, 1, 5, 0, 0, 1, 0, 8, 22, 0, 4, 0, 0, 2, 0, 0, 1]' : 0.235447}
{'[2, 6, 1, 5, 0, 0, 1, 0, 8, 22, 0, 4, 0, 0, 2, 0, 0, 1]' : 0.235162}
{'[2, 6, 1, 5, 0, 0, 1, 0, 8, 22, 0, 4, 0, 0, 2, 0, 0, 1]' : 0.235487}
{'[2, 6, 1, 5, 0, 0, 1, 0, 8, 22, 0, 4, 0, 0, 2, 0, 0, 1]' : 0.234975}
{'[2, 6, 1, 5, 0, 0, 1, 0, 8, 22, 0, 4, 0, 0, 2, 0, 0, 1]' : 0.235073}
{'[2, 6, 1, 5, 0, 0, 1, 0, 8, 22, 0, 4, 0, 0, 2, 0, 0, 1]' : 0.234911}
{'[2, 6, 1, 5, 0, 0, 1, 0, 8, 22, 0, 4, 0, 0, 2, 0, 0, 1]' : 0.235662}
{'[2, 6, 1, 5, 0, 0, 1, 0, 8, 22, 0, 4, 0, 0, 2, 0, 0, 1]' : 0.234988}
{'[2, 6, 1, 5, 0, 0, 1, 0, 8, 22, 0, 4, 0, 0, 2, 0, 0, 1]' : 0.235036}
{'[2, 6, 1, 5, 0, 0, 1, 0, 8, 22, 0, 4, 0, 0, 2, 0, 0, 1]' : 0.234911}
{'[2, 6, 1, 5, 0, 0, 1, 0, 8, 22, 0, 4, 0, 0, 2, 0, 0, 1]' : 0.235761}
{'[2, 6, 1, 5, 0, 0, 1, 0, 8, 22, 0, 4, 0, 0, 2, 0, 0, 1]' : 0.235851}
{'[2, 6, 1, 5, 0, 0, 1, 0, 8, 22, 0, 4, 0, 0, 2, 0, 0, 1]' : 0.235349}
{'[2, 6, 1, 5, 0, 0, 1, 0, 8, 22, 0, 4, 0, 0, 2, 0, 0, 1]' : 0.235601}
{'[2, 6, 1, 5, 0, 0, 1, 0, 8, 22, 0, 4, 0, 0, 2, 0, 0, 1]' : 0.235081}

out:
 ["{'[2, 6, 1, 5, 0, 0, 1, 0, 8, 22, 0, 4, 0, 0, 2, 0, 0, 1]' : 0.235239}", "{'[2, 6, 1, 5, 0, 0, 1, 0, 8, 22, 0, 4, 0, 0, 2, 0, 0, 1]' : 0.235237}", "{'[2, 6, 1, 5, 0, 0, 1, 0, 8, 22, 0, 4, 0, 0, 2, 0, 0, 1]' : 0.235266}", "{'[2, 6, 1, 5, 0, 0, 1, 0, 8, 22, 0, 4, 0, 0, 2, 0, 0, 1]' : 0.2351}", "{'[2, 6, 1, 5, 0, 0, 1, 0, 8, 22, 0, 4, 0, 0, 2, 0, 0, 1]' : 0.234955}", "{'[2, 6, 1, 5, 0, 0, 1, 0, 8, 22, 0, 4, 0, 0, 2, 0, 0, 1]' : 0.235171}", "{'[2, 6, 1, 5, 0, 0, 1, 0, 8, 22, 0, 4, 0, 0, 2, 0, 0, 1]' : 0.235038}", "{'[2, 6, 1, 5, 0, 0, 1, 0, 8, 22, 0, 4, 0, 0, 2, 0, 0, 1]' : 0.235479}", "{'[2, 6, 1, 5, 0, 0, 1, 0, 8, 22, 0, 4, 0, 0, 2, 0, 0, 1]' : 0.235043}", "{'[2, 6, 1, 5, 0, 0, 1, 0, 8, 22, 0, 4, 0, 0, 2, 0, 0, 1]' : 0.235474}", "{'[2, 6, 1, 5, 0, 0, 1, 0, 8, 22, 0, 4, 0, 0, 2, 0, 0, 1]' : 0.23506}", "{'[2, 6, 1, 5, 0, 0, 1, 0, 8, 22, 0, 4, 0, 0, 2, 0, 0, 1]' : 0.234989}", "{'[2, 6, 1, 5, 0, 0, 1, 0, 8, 22, 0, 4, 0, 0, 2, 0, 0, 1]' : 0.235355}", "{'[2, 6, 1, 5, 0, 0, 1, 0, 8, 22, 0, 4, 0, 0, 2, 0, 0, 1]' : 0.234884}", "{'[2, 6, 1, 5, 0, 0, 1, 0, 8, 22, 0, 4, 0, 0, 2, 0, 0, 1]' : 0.235394}", "{'[2, 6, 1, 5, 0, 0, 1, 0, 8, 22, 0, 4, 0, 0, 2, 0, 0, 1]' : 0.235447}", "{'[2, 6, 1, 5, 0, 0, 1, 0, 8, 22, 0, 4, 0, 0, 2, 0, 0, 1]' : 0.235162}", "{'[2, 6, 1, 5, 0, 0, 1, 0, 8, 22, 0, 4, 0, 0, 2, 0, 0, 1]' : 0.235487}", "{'[2, 6, 1, 5, 0, 0, 1, 0, 8, 22, 0, 4, 0, 0, 2, 0, 0, 1]' : 0.234975}", "{'[2, 6, 1, 5, 0, 0, 1, 0, 8, 22, 0, 4, 0, 0, 2, 0, 0, 1]' : 0.235073}", "{'[2, 6, 1, 5, 0, 0, 1, 0, 8, 22, 0, 4, 0, 0, 2, 0, 0, 1]' : 0.234911}", "{'[2, 6, 1, 5, 0, 0, 1, 0, 8, 22, 0, 4, 0, 0, 2, 0, 0, 1]' : 0.235662}", "{'[2, 6, 1, 5, 0, 0, 1, 0, 8, 22, 0, 4, 0, 0, 2, 0, 0, 1]' : 0.234988}", "{'[2, 6, 1, 5, 0, 0, 1, 0, 8, 22, 0, 4, 0, 0, 2, 0, 0, 1]' : 0.235036}", "{'[2, 6, 1, 5, 0, 0, 1, 0, 8, 22, 0, 4, 0, 0, 2, 0, 0, 1]' : 0.234911}", "{'[2, 6, 1, 5, 0, 0, 1, 0, 8, 22, 0, 4, 0, 0, 2, 0, 0, 1]' : 0.235761}", "{'[2, 6, 1, 5, 0, 0, 1, 0, 8, 22, 0, 4, 0, 0, 2, 0, 0, 1]' : 0.235851}", "{'[2, 6, 1, 5, 0, 0, 1, 0, 8, 22, 0, 4, 0, 0, 2, 0, 0, 1]' : 0.235349}", "{'[2, 6, 1, 5, 0, 0, 1, 0, 8, 22, 0, 4, 0, 0, 2, 0, 0, 1]' : 0.235601}", "{'[2, 6, 1, 5, 0, 0, 1, 0, 8, 22, 0, 4, 0, 0, 2, 0, 0, 1]' : 0.235081}"]
returning from 'run': {'[2, 6, 1, 5, 0, 0, 1, 0, 8, 22, 0, 4, 0, 0, 2, 0, 0, 1]': ([0.235239, 0.235237, 0.235266, 0.2351, 0.234955, 0.235171, 0.235038, 0.235479, 0.235043, 0.235474, 0.23506, 0.234989, 0.235355, 0.234884, 0.235394, 0.235447, 0.235162, 0.235487, 0.234975, 0.235073, 0.234911, 0.235662, 0.234988, 0.235036, 0.234911, 0.235761, 0.235851, 0.235349, 0.235601, 0.235081], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 6, 1, 5, 0, 0, 1, 0, 8, 22, 0, 4, 0, 0, 2, 0, 0, 1]': ([0.235239, 0.235237, 0.235266, 0.2351, 0.234955, 0.235171, 0.235038, 0.235479, 0.235043, 0.235474, 0.23506, 0.234989, 0.235355, 0.234884, 0.235394, 0.235447, 0.235162, 0.235487, 0.234975, 0.235073, 0.234911, 0.235662, 0.234988, 0.235036, 0.234911, 0.235761, 0.235851, 0.235349, 0.235601, 0.235081], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	28
        Max loop nest depth: 	6
        Additions: 		3767
        Multiplications: 	1170
        Divisions: 		0
        Logical: 		0
        Reads: 			6206
        Writes: 		721
        Comparisons:		28
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest62.exe __orio_perftest62.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest62.exe  
Program Test Output: 
{'[5, 6, 0, 5, 6, 5, 0, 0, 28, 29, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.128552}
{'[5, 6, 0, 5, 6, 5, 0, 0, 28, 29, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.128568}
{'[5, 6, 0, 5, 6, 5, 0, 0, 28, 29, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.128354}
{'[5, 6, 0, 5, 6, 5, 0, 0, 28, 29, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.128513}
{'[5, 6, 0, 5, 6, 5, 0, 0, 28, 29, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.113022}
{'[5, 6, 0, 5, 6, 5, 0, 0, 28, 29, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.109178}
{'[5, 6, 0, 5, 6, 5, 0, 0, 28, 29, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.109041}
{'[5, 6, 0, 5, 6, 5, 0, 0, 28, 29, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.109202}
{'[5, 6, 0, 5, 6, 5, 0, 0, 28, 29, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.109194}
{'[5, 6, 0, 5, 6, 5, 0, 0, 28, 29, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.1095}
{'[5, 6, 0, 5, 6, 5, 0, 0, 28, 29, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.109114}
{'[5, 6, 0, 5, 6, 5, 0, 0, 28, 29, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.109433}
{'[5, 6, 0, 5, 6, 5, 0, 0, 28, 29, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.109153}
{'[5, 6, 0, 5, 6, 5, 0, 0, 28, 29, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.109122}
{'[5, 6, 0, 5, 6, 5, 0, 0, 28, 29, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.108967}
{'[5, 6, 0, 5, 6, 5, 0, 0, 28, 29, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.10923}
{'[5, 6, 0, 5, 6, 5, 0, 0, 28, 29, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.109114}
{'[5, 6, 0, 5, 6, 5, 0, 0, 28, 29, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.109159}
{'[5, 6, 0, 5, 6, 5, 0, 0, 28, 29, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.109013}
{'[5, 6, 0, 5, 6, 5, 0, 0, 28, 29, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.109393}
{'[5, 6, 0, 5, 6, 5, 0, 0, 28, 29, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.109349}
{'[5, 6, 0, 5, 6, 5, 0, 0, 28, 29, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.109043}
{'[5, 6, 0, 5, 6, 5, 0, 0, 28, 29, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.109412}
{'[5, 6, 0, 5, 6, 5, 0, 0, 28, 29, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.109146}
{'[5, 6, 0, 5, 6, 5, 0, 0, 28, 29, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.109234}
{'[5, 6, 0, 5, 6, 5, 0, 0, 28, 29, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.109044}
{'[5, 6, 0, 5, 6, 5, 0, 0, 28, 29, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.10893}
{'[5, 6, 0, 5, 6, 5, 0, 0, 28, 29, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.109299}
{'[5, 6, 0, 5, 6, 5, 0, 0, 28, 29, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.109106}
{'[5, 6, 0, 5, 6, 5, 0, 0, 28, 29, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.10952}

out:
 ["{'[5, 6, 0, 5, 6, 5, 0, 0, 28, 29, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.128552}", "{'[5, 6, 0, 5, 6, 5, 0, 0, 28, 29, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.128568}", "{'[5, 6, 0, 5, 6, 5, 0, 0, 28, 29, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.128354}", "{'[5, 6, 0, 5, 6, 5, 0, 0, 28, 29, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.128513}", "{'[5, 6, 0, 5, 6, 5, 0, 0, 28, 29, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.113022}", "{'[5, 6, 0, 5, 6, 5, 0, 0, 28, 29, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.109178}", "{'[5, 6, 0, 5, 6, 5, 0, 0, 28, 29, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.109041}", "{'[5, 6, 0, 5, 6, 5, 0, 0, 28, 29, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.109202}", "{'[5, 6, 0, 5, 6, 5, 0, 0, 28, 29, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.109194}", "{'[5, 6, 0, 5, 6, 5, 0, 0, 28, 29, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.1095}", "{'[5, 6, 0, 5, 6, 5, 0, 0, 28, 29, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.109114}", "{'[5, 6, 0, 5, 6, 5, 0, 0, 28, 29, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.109433}", "{'[5, 6, 0, 5, 6, 5, 0, 0, 28, 29, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.109153}", "{'[5, 6, 0, 5, 6, 5, 0, 0, 28, 29, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.109122}", "{'[5, 6, 0, 5, 6, 5, 0, 0, 28, 29, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.108967}", "{'[5, 6, 0, 5, 6, 5, 0, 0, 28, 29, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.10923}", "{'[5, 6, 0, 5, 6, 5, 0, 0, 28, 29, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.109114}", "{'[5, 6, 0, 5, 6, 5, 0, 0, 28, 29, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.109159}", "{'[5, 6, 0, 5, 6, 5, 0, 0, 28, 29, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.109013}", "{'[5, 6, 0, 5, 6, 5, 0, 0, 28, 29, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.109393}", "{'[5, 6, 0, 5, 6, 5, 0, 0, 28, 29, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.109349}", "{'[5, 6, 0, 5, 6, 5, 0, 0, 28, 29, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.109043}", "{'[5, 6, 0, 5, 6, 5, 0, 0, 28, 29, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.109412}", "{'[5, 6, 0, 5, 6, 5, 0, 0, 28, 29, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.109146}", "{'[5, 6, 0, 5, 6, 5, 0, 0, 28, 29, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.109234}", "{'[5, 6, 0, 5, 6, 5, 0, 0, 28, 29, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.109044}", "{'[5, 6, 0, 5, 6, 5, 0, 0, 28, 29, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.10893}", "{'[5, 6, 0, 5, 6, 5, 0, 0, 28, 29, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.109299}", "{'[5, 6, 0, 5, 6, 5, 0, 0, 28, 29, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.109106}", "{'[5, 6, 0, 5, 6, 5, 0, 0, 28, 29, 0, 4, 1, 1, 0, 0, 1, 1]' : 0.10952}"]
returning from 'run': {'[5, 6, 0, 5, 6, 5, 0, 0, 28, 29, 0, 4, 1, 1, 0, 0, 1, 1]': ([0.128552, 0.128568, 0.128354, 0.128513, 0.113022, 0.109178, 0.109041, 0.109202, 0.109194, 0.1095, 0.109114, 0.109433, 0.109153, 0.109122, 0.108967, 0.10923, 0.109114, 0.109159, 0.109013, 0.109393, 0.109349, 0.109043, 0.109412, 0.109146, 0.109234, 0.109044, 0.10893, 0.109299, 0.109106, 0.10952], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 6, 0, 5, 6, 5, 0, 0, 28, 29, 0, 4, 1, 1, 0, 0, 1, 1]': ([0.128552, 0.128568, 0.128354, 0.128513, 0.113022, 0.109178, 0.109041, 0.109202, 0.109194, 0.1095, 0.109114, 0.109433, 0.109153, 0.109122, 0.108967, 0.10923, 0.109114, 0.109159, 0.109013, 0.109393, 0.109349, 0.109043, 0.109412, 0.109146, 0.109234, 0.109044, 0.10893, 0.109299, 0.109106, 0.10952], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	6
        Additions: 		126
        Multiplications: 	18
        Divisions: 		0
        Logical: 		0
        Reads: 			279
        Writes: 		75
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest63.exe __orio_perftest63.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest63.exe  
Program Test Output: 
{'[6, 0, 6, 5, 6, 6, 1, 1, 29, 0, 0, 4, 0, 0, 1, 0, 1, 1]' : 0.266113}
{'[6, 0, 6, 5, 6, 6, 1, 1, 29, 0, 0, 4, 0, 0, 1, 0, 1, 1]' : 0.266037}
{'[6, 0, 6, 5, 6, 6, 1, 1, 29, 0, 0, 4, 0, 0, 1, 0, 1, 1]' : 0.256211}
{'[6, 0, 6, 5, 6, 6, 1, 1, 29, 0, 0, 4, 0, 0, 1, 0, 1, 1]' : 0.227738}
{'[6, 0, 6, 5, 6, 6, 1, 1, 29, 0, 0, 4, 0, 0, 1, 0, 1, 1]' : 0.222166}
{'[6, 0, 6, 5, 6, 6, 1, 1, 29, 0, 0, 4, 0, 0, 1, 0, 1, 1]' : 0.221987}
{'[6, 0, 6, 5, 6, 6, 1, 1, 29, 0, 0, 4, 0, 0, 1, 0, 1, 1]' : 0.222315}
{'[6, 0, 6, 5, 6, 6, 1, 1, 29, 0, 0, 4, 0, 0, 1, 0, 1, 1]' : 0.222199}
{'[6, 0, 6, 5, 6, 6, 1, 1, 29, 0, 0, 4, 0, 0, 1, 0, 1, 1]' : 0.222653}
{'[6, 0, 6, 5, 6, 6, 1, 1, 29, 0, 0, 4, 0, 0, 1, 0, 1, 1]' : 0.22225}
{'[6, 0, 6, 5, 6, 6, 1, 1, 29, 0, 0, 4, 0, 0, 1, 0, 1, 1]' : 0.222109}
{'[6, 0, 6, 5, 6, 6, 1, 1, 29, 0, 0, 4, 0, 0, 1, 0, 1, 1]' : 0.223041}
{'[6, 0, 6, 5, 6, 6, 1, 1, 29, 0, 0, 4, 0, 0, 1, 0, 1, 1]' : 0.223405}
{'[6, 0, 6, 5, 6, 6, 1, 1, 29, 0, 0, 4, 0, 0, 1, 0, 1, 1]' : 0.223191}
{'[6, 0, 6, 5, 6, 6, 1, 1, 29, 0, 0, 4, 0, 0, 1, 0, 1, 1]' : 0.224643}
{'[6, 0, 6, 5, 6, 6, 1, 1, 29, 0, 0, 4, 0, 0, 1, 0, 1, 1]' : 0.226721}
{'[6, 0, 6, 5, 6, 6, 1, 1, 29, 0, 0, 4, 0, 0, 1, 0, 1, 1]' : 0.223154}
{'[6, 0, 6, 5, 6, 6, 1, 1, 29, 0, 0, 4, 0, 0, 1, 0, 1, 1]' : 0.223427}
{'[6, 0, 6, 5, 6, 6, 1, 1, 29, 0, 0, 4, 0, 0, 1, 0, 1, 1]' : 0.223319}
{'[6, 0, 6, 5, 6, 6, 1, 1, 29, 0, 0, 4, 0, 0, 1, 0, 1, 1]' : 0.222809}
{'[6, 0, 6, 5, 6, 6, 1, 1, 29, 0, 0, 4, 0, 0, 1, 0, 1, 1]' : 0.222925}
{'[6, 0, 6, 5, 6, 6, 1, 1, 29, 0, 0, 4, 0, 0, 1, 0, 1, 1]' : 0.222732}
{'[6, 0, 6, 5, 6, 6, 1, 1, 29, 0, 0, 4, 0, 0, 1, 0, 1, 1]' : 0.22282}
{'[6, 0, 6, 5, 6, 6, 1, 1, 29, 0, 0, 4, 0, 0, 1, 0, 1, 1]' : 0.223758}
{'[6, 0, 6, 5, 6, 6, 1, 1, 29, 0, 0, 4, 0, 0, 1, 0, 1, 1]' : 0.223465}
{'[6, 0, 6, 5, 6, 6, 1, 1, 29, 0, 0, 4, 0, 0, 1, 0, 1, 1]' : 0.225048}
{'[6, 0, 6, 5, 6, 6, 1, 1, 29, 0, 0, 4, 0, 0, 1, 0, 1, 1]' : 0.223487}
{'[6, 0, 6, 5, 6, 6, 1, 1, 29, 0, 0, 4, 0, 0, 1, 0, 1, 1]' : 0.223102}
{'[6, 0, 6, 5, 6, 6, 1, 1, 29, 0, 0, 4, 0, 0, 1, 0, 1, 1]' : 0.223259}
{'[6, 0, 6, 5, 6, 6, 1, 1, 29, 0, 0, 4, 0, 0, 1, 0, 1, 1]' : 0.225463}

out:
 ["{'[6, 0, 6, 5, 6, 6, 1, 1, 29, 0, 0, 4, 0, 0, 1, 0, 1, 1]' : 0.266113}", "{'[6, 0, 6, 5, 6, 6, 1, 1, 29, 0, 0, 4, 0, 0, 1, 0, 1, 1]' : 0.266037}", "{'[6, 0, 6, 5, 6, 6, 1, 1, 29, 0, 0, 4, 0, 0, 1, 0, 1, 1]' : 0.256211}", "{'[6, 0, 6, 5, 6, 6, 1, 1, 29, 0, 0, 4, 0, 0, 1, 0, 1, 1]' : 0.227738}", "{'[6, 0, 6, 5, 6, 6, 1, 1, 29, 0, 0, 4, 0, 0, 1, 0, 1, 1]' : 0.222166}", "{'[6, 0, 6, 5, 6, 6, 1, 1, 29, 0, 0, 4, 0, 0, 1, 0, 1, 1]' : 0.221987}", "{'[6, 0, 6, 5, 6, 6, 1, 1, 29, 0, 0, 4, 0, 0, 1, 0, 1, 1]' : 0.222315}", "{'[6, 0, 6, 5, 6, 6, 1, 1, 29, 0, 0, 4, 0, 0, 1, 0, 1, 1]' : 0.222199}", "{'[6, 0, 6, 5, 6, 6, 1, 1, 29, 0, 0, 4, 0, 0, 1, 0, 1, 1]' : 0.222653}", "{'[6, 0, 6, 5, 6, 6, 1, 1, 29, 0, 0, 4, 0, 0, 1, 0, 1, 1]' : 0.22225}", "{'[6, 0, 6, 5, 6, 6, 1, 1, 29, 0, 0, 4, 0, 0, 1, 0, 1, 1]' : 0.222109}", "{'[6, 0, 6, 5, 6, 6, 1, 1, 29, 0, 0, 4, 0, 0, 1, 0, 1, 1]' : 0.223041}", "{'[6, 0, 6, 5, 6, 6, 1, 1, 29, 0, 0, 4, 0, 0, 1, 0, 1, 1]' : 0.223405}", "{'[6, 0, 6, 5, 6, 6, 1, 1, 29, 0, 0, 4, 0, 0, 1, 0, 1, 1]' : 0.223191}", "{'[6, 0, 6, 5, 6, 6, 1, 1, 29, 0, 0, 4, 0, 0, 1, 0, 1, 1]' : 0.224643}", "{'[6, 0, 6, 5, 6, 6, 1, 1, 29, 0, 0, 4, 0, 0, 1, 0, 1, 1]' : 0.226721}", "{'[6, 0, 6, 5, 6, 6, 1, 1, 29, 0, 0, 4, 0, 0, 1, 0, 1, 1]' : 0.223154}", "{'[6, 0, 6, 5, 6, 6, 1, 1, 29, 0, 0, 4, 0, 0, 1, 0, 1, 1]' : 0.223427}", "{'[6, 0, 6, 5, 6, 6, 1, 1, 29, 0, 0, 4, 0, 0, 1, 0, 1, 1]' : 0.223319}", "{'[6, 0, 6, 5, 6, 6, 1, 1, 29, 0, 0, 4, 0, 0, 1, 0, 1, 1]' : 0.222809}", "{'[6, 0, 6, 5, 6, 6, 1, 1, 29, 0, 0, 4, 0, 0, 1, 0, 1, 1]' : 0.222925}", "{'[6, 0, 6, 5, 6, 6, 1, 1, 29, 0, 0, 4, 0, 0, 1, 0, 1, 1]' : 0.222732}", "{'[6, 0, 6, 5, 6, 6, 1, 1, 29, 0, 0, 4, 0, 0, 1, 0, 1, 1]' : 0.22282}", "{'[6, 0, 6, 5, 6, 6, 1, 1, 29, 0, 0, 4, 0, 0, 1, 0, 1, 1]' : 0.223758}", "{'[6, 0, 6, 5, 6, 6, 1, 1, 29, 0, 0, 4, 0, 0, 1, 0, 1, 1]' : 0.223465}", "{'[6, 0, 6, 5, 6, 6, 1, 1, 29, 0, 0, 4, 0, 0, 1, 0, 1, 1]' : 0.225048}", "{'[6, 0, 6, 5, 6, 6, 1, 1, 29, 0, 0, 4, 0, 0, 1, 0, 1, 1]' : 0.223487}", "{'[6, 0, 6, 5, 6, 6, 1, 1, 29, 0, 0, 4, 0, 0, 1, 0, 1, 1]' : 0.223102}", "{'[6, 0, 6, 5, 6, 6, 1, 1, 29, 0, 0, 4, 0, 0, 1, 0, 1, 1]' : 0.223259}", "{'[6, 0, 6, 5, 6, 6, 1, 1, 29, 0, 0, 4, 0, 0, 1, 0, 1, 1]' : 0.225463}"]
returning from 'run': {'[6, 0, 6, 5, 6, 6, 1, 1, 29, 0, 0, 4, 0, 0, 1, 0, 1, 1]': ([0.266113, 0.266037, 0.256211, 0.227738, 0.222166, 0.221987, 0.222315, 0.222199, 0.222653, 0.22225, 0.222109, 0.223041, 0.223405, 0.223191, 0.224643, 0.226721, 0.223154, 0.223427, 0.223319, 0.222809, 0.222925, 0.222732, 0.22282, 0.223758, 0.223465, 0.225048, 0.223487, 0.223102, 0.223259, 0.225463], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 6, 5, 6, 6, 1, 1, 29, 0, 0, 4, 0, 0, 1, 0, 1, 1]': ([0.266113, 0.266037, 0.256211, 0.227738, 0.222166, 0.221987, 0.222315, 0.222199, 0.222653, 0.22225, 0.222109, 0.223041, 0.223405, 0.223191, 0.224643, 0.226721, 0.223154, 0.223427, 0.223319, 0.222809, 0.222925, 0.222732, 0.22282, 0.223758, 0.223465, 0.225048, 0.223487, 0.223102, 0.223259, 0.225463], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	43
        Max loop nest depth: 	5
        Additions: 		2217
        Multiplications: 	924
        Divisions: 		0
        Logical: 		0
        Reads: 			4343
        Writes: 		778
        Comparisons:		43
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest64.exe __orio_perftest64.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest64.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest64.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest64.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest64.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	39
        Max loop nest depth: 	3
        Additions: 		4012
        Multiplications: 	1900
        Divisions: 		0
        Logical: 		0
        Reads: 			7529
        Writes: 		1207
        Comparisons:		39
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest65.exe __orio_perftest65.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest65.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest65.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest65.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest65.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	90
        Max loop nest depth: 	6
        Additions: 		2836
        Multiplications: 	1056
        Divisions: 		0
        Logical: 		0
        Reads: 			5766
        Writes: 		1160
        Comparisons:		90
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest66.exe __orio_perftest66.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest66.exe  
Program Test Output: 
{'[3, 5, 6, 5, 4, 5, 1, 0, 26, 22, 0, 4, 0, 1, 1, 1, 0, 0]' : 0.16834}
{'[3, 5, 6, 5, 4, 5, 1, 0, 26, 22, 0, 4, 0, 1, 1, 1, 0, 0]' : 0.168208}
{'[3, 5, 6, 5, 4, 5, 1, 0, 26, 22, 0, 4, 0, 1, 1, 1, 0, 0]' : 0.154667}
{'[3, 5, 6, 5, 4, 5, 1, 0, 26, 22, 0, 4, 0, 1, 1, 1, 0, 0]' : 0.142447}
{'[3, 5, 6, 5, 4, 5, 1, 0, 26, 22, 0, 4, 0, 1, 1, 1, 0, 0]' : 0.142748}
{'[3, 5, 6, 5, 4, 5, 1, 0, 26, 22, 0, 4, 0, 1, 1, 1, 0, 0]' : 0.142156}
{'[3, 5, 6, 5, 4, 5, 1, 0, 26, 22, 0, 4, 0, 1, 1, 1, 0, 0]' : 0.142172}
{'[3, 5, 6, 5, 4, 5, 1, 0, 26, 22, 0, 4, 0, 1, 1, 1, 0, 0]' : 0.142253}
{'[3, 5, 6, 5, 4, 5, 1, 0, 26, 22, 0, 4, 0, 1, 1, 1, 0, 0]' : 0.142463}
{'[3, 5, 6, 5, 4, 5, 1, 0, 26, 22, 0, 4, 0, 1, 1, 1, 0, 0]' : 0.142263}
{'[3, 5, 6, 5, 4, 5, 1, 0, 26, 22, 0, 4, 0, 1, 1, 1, 0, 0]' : 0.14217}
{'[3, 5, 6, 5, 4, 5, 1, 0, 26, 22, 0, 4, 0, 1, 1, 1, 0, 0]' : 0.142845}
{'[3, 5, 6, 5, 4, 5, 1, 0, 26, 22, 0, 4, 0, 1, 1, 1, 0, 0]' : 0.142335}
{'[3, 5, 6, 5, 4, 5, 1, 0, 26, 22, 0, 4, 0, 1, 1, 1, 0, 0]' : 0.142081}
{'[3, 5, 6, 5, 4, 5, 1, 0, 26, 22, 0, 4, 0, 1, 1, 1, 0, 0]' : 0.142202}
{'[3, 5, 6, 5, 4, 5, 1, 0, 26, 22, 0, 4, 0, 1, 1, 1, 0, 0]' : 0.14252}
{'[3, 5, 6, 5, 4, 5, 1, 0, 26, 22, 0, 4, 0, 1, 1, 1, 0, 0]' : 0.14219}
{'[3, 5, 6, 5, 4, 5, 1, 0, 26, 22, 0, 4, 0, 1, 1, 1, 0, 0]' : 0.14215}
{'[3, 5, 6, 5, 4, 5, 1, 0, 26, 22, 0, 4, 0, 1, 1, 1, 0, 0]' : 0.142478}
{'[3, 5, 6, 5, 4, 5, 1, 0, 26, 22, 0, 4, 0, 1, 1, 1, 0, 0]' : 0.142503}
{'[3, 5, 6, 5, 4, 5, 1, 0, 26, 22, 0, 4, 0, 1, 1, 1, 0, 0]' : 0.142477}
{'[3, 5, 6, 5, 4, 5, 1, 0, 26, 22, 0, 4, 0, 1, 1, 1, 0, 0]' : 0.14208}
{'[3, 5, 6, 5, 4, 5, 1, 0, 26, 22, 0, 4, 0, 1, 1, 1, 0, 0]' : 0.142259}
{'[3, 5, 6, 5, 4, 5, 1, 0, 26, 22, 0, 4, 0, 1, 1, 1, 0, 0]' : 0.142444}
{'[3, 5, 6, 5, 4, 5, 1, 0, 26, 22, 0, 4, 0, 1, 1, 1, 0, 0]' : 0.142141}
{'[3, 5, 6, 5, 4, 5, 1, 0, 26, 22, 0, 4, 0, 1, 1, 1, 0, 0]' : 0.142457}
{'[3, 5, 6, 5, 4, 5, 1, 0, 26, 22, 0, 4, 0, 1, 1, 1, 0, 0]' : 0.142146}
{'[3, 5, 6, 5, 4, 5, 1, 0, 26, 22, 0, 4, 0, 1, 1, 1, 0, 0]' : 0.142818}
{'[3, 5, 6, 5, 4, 5, 1, 0, 26, 22, 0, 4, 0, 1, 1, 1, 0, 0]' : 0.142078}
{'[3, 5, 6, 5, 4, 5, 1, 0, 26, 22, 0, 4, 0, 1, 1, 1, 0, 0]' : 0.142299}

out:
 ["{'[3, 5, 6, 5, 4, 5, 1, 0, 26, 22, 0, 4, 0, 1, 1, 1, 0, 0]' : 0.16834}", "{'[3, 5, 6, 5, 4, 5, 1, 0, 26, 22, 0, 4, 0, 1, 1, 1, 0, 0]' : 0.168208}", "{'[3, 5, 6, 5, 4, 5, 1, 0, 26, 22, 0, 4, 0, 1, 1, 1, 0, 0]' : 0.154667}", "{'[3, 5, 6, 5, 4, 5, 1, 0, 26, 22, 0, 4, 0, 1, 1, 1, 0, 0]' : 0.142447}", "{'[3, 5, 6, 5, 4, 5, 1, 0, 26, 22, 0, 4, 0, 1, 1, 1, 0, 0]' : 0.142748}", "{'[3, 5, 6, 5, 4, 5, 1, 0, 26, 22, 0, 4, 0, 1, 1, 1, 0, 0]' : 0.142156}", "{'[3, 5, 6, 5, 4, 5, 1, 0, 26, 22, 0, 4, 0, 1, 1, 1, 0, 0]' : 0.142172}", "{'[3, 5, 6, 5, 4, 5, 1, 0, 26, 22, 0, 4, 0, 1, 1, 1, 0, 0]' : 0.142253}", "{'[3, 5, 6, 5, 4, 5, 1, 0, 26, 22, 0, 4, 0, 1, 1, 1, 0, 0]' : 0.142463}", "{'[3, 5, 6, 5, 4, 5, 1, 0, 26, 22, 0, 4, 0, 1, 1, 1, 0, 0]' : 0.142263}", "{'[3, 5, 6, 5, 4, 5, 1, 0, 26, 22, 0, 4, 0, 1, 1, 1, 0, 0]' : 0.14217}", "{'[3, 5, 6, 5, 4, 5, 1, 0, 26, 22, 0, 4, 0, 1, 1, 1, 0, 0]' : 0.142845}", "{'[3, 5, 6, 5, 4, 5, 1, 0, 26, 22, 0, 4, 0, 1, 1, 1, 0, 0]' : 0.142335}", "{'[3, 5, 6, 5, 4, 5, 1, 0, 26, 22, 0, 4, 0, 1, 1, 1, 0, 0]' : 0.142081}", "{'[3, 5, 6, 5, 4, 5, 1, 0, 26, 22, 0, 4, 0, 1, 1, 1, 0, 0]' : 0.142202}", "{'[3, 5, 6, 5, 4, 5, 1, 0, 26, 22, 0, 4, 0, 1, 1, 1, 0, 0]' : 0.14252}", "{'[3, 5, 6, 5, 4, 5, 1, 0, 26, 22, 0, 4, 0, 1, 1, 1, 0, 0]' : 0.14219}", "{'[3, 5, 6, 5, 4, 5, 1, 0, 26, 22, 0, 4, 0, 1, 1, 1, 0, 0]' : 0.14215}", "{'[3, 5, 6, 5, 4, 5, 1, 0, 26, 22, 0, 4, 0, 1, 1, 1, 0, 0]' : 0.142478}", "{'[3, 5, 6, 5, 4, 5, 1, 0, 26, 22, 0, 4, 0, 1, 1, 1, 0, 0]' : 0.142503}", "{'[3, 5, 6, 5, 4, 5, 1, 0, 26, 22, 0, 4, 0, 1, 1, 1, 0, 0]' : 0.142477}", "{'[3, 5, 6, 5, 4, 5, 1, 0, 26, 22, 0, 4, 0, 1, 1, 1, 0, 0]' : 0.14208}", "{'[3, 5, 6, 5, 4, 5, 1, 0, 26, 22, 0, 4, 0, 1, 1, 1, 0, 0]' : 0.142259}", "{'[3, 5, 6, 5, 4, 5, 1, 0, 26, 22, 0, 4, 0, 1, 1, 1, 0, 0]' : 0.142444}", "{'[3, 5, 6, 5, 4, 5, 1, 0, 26, 22, 0, 4, 0, 1, 1, 1, 0, 0]' : 0.142141}", "{'[3, 5, 6, 5, 4, 5, 1, 0, 26, 22, 0, 4, 0, 1, 1, 1, 0, 0]' : 0.142457}", "{'[3, 5, 6, 5, 4, 5, 1, 0, 26, 22, 0, 4, 0, 1, 1, 1, 0, 0]' : 0.142146}", "{'[3, 5, 6, 5, 4, 5, 1, 0, 26, 22, 0, 4, 0, 1, 1, 1, 0, 0]' : 0.142818}", "{'[3, 5, 6, 5, 4, 5, 1, 0, 26, 22, 0, 4, 0, 1, 1, 1, 0, 0]' : 0.142078}", "{'[3, 5, 6, 5, 4, 5, 1, 0, 26, 22, 0, 4, 0, 1, 1, 1, 0, 0]' : 0.142299}"]
returning from 'run': {'[3, 5, 6, 5, 4, 5, 1, 0, 26, 22, 0, 4, 0, 1, 1, 1, 0, 0]': ([0.16834, 0.168208, 0.154667, 0.142447, 0.142748, 0.142156, 0.142172, 0.142253, 0.142463, 0.142263, 0.14217, 0.142845, 0.142335, 0.142081, 0.142202, 0.14252, 0.14219, 0.14215, 0.142478, 0.142503, 0.142477, 0.14208, 0.142259, 0.142444, 0.142141, 0.142457, 0.142146, 0.142818, 0.142078, 0.142299], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 5, 6, 5, 4, 5, 1, 0, 26, 22, 0, 4, 0, 1, 1, 1, 0, 0]': ([0.16834, 0.168208, 0.154667, 0.142447, 0.142748, 0.142156, 0.142172, 0.142253, 0.142463, 0.142263, 0.14217, 0.142845, 0.142335, 0.142081, 0.142202, 0.14252, 0.14219, 0.14215, 0.142478, 0.142503, 0.142477, 0.14208, 0.142259, 0.142444, 0.142141, 0.142457, 0.142146, 0.142818, 0.142078, 0.142299], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	50
        Max loop nest depth: 	4
        Additions: 		1191
        Multiplications: 	504
        Divisions: 		0
        Logical: 		0
        Reads: 			2636
        Writes: 		527
        Comparisons:		50
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest67.exe __orio_perftest67.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest67.exe  
Program Test Output: 
{'[0, 0, 2, 2, 2, 0, 1, 0, 5, 26, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.123854}
{'[0, 0, 2, 2, 2, 0, 1, 0, 5, 26, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.123778}
{'[0, 0, 2, 2, 2, 0, 1, 0, 5, 26, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.12369}
{'[0, 0, 2, 2, 2, 0, 1, 0, 5, 26, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.123803}
{'[0, 0, 2, 2, 2, 0, 1, 0, 5, 26, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.113607}
{'[0, 0, 2, 2, 2, 0, 1, 0, 5, 26, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.106653}
{'[0, 0, 2, 2, 2, 0, 1, 0, 5, 26, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.106634}
{'[0, 0, 2, 2, 2, 0, 1, 0, 5, 26, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.106585}
{'[0, 0, 2, 2, 2, 0, 1, 0, 5, 26, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.106693}
{'[0, 0, 2, 2, 2, 0, 1, 0, 5, 26, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.106533}
{'[0, 0, 2, 2, 2, 0, 1, 0, 5, 26, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.106629}
{'[0, 0, 2, 2, 2, 0, 1, 0, 5, 26, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.107028}
{'[0, 0, 2, 2, 2, 0, 1, 0, 5, 26, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.106963}
{'[0, 0, 2, 2, 2, 0, 1, 0, 5, 26, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.106685}
{'[0, 0, 2, 2, 2, 0, 1, 0, 5, 26, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.106587}
{'[0, 0, 2, 2, 2, 0, 1, 0, 5, 26, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.106671}
{'[0, 0, 2, 2, 2, 0, 1, 0, 5, 26, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.106734}
{'[0, 0, 2, 2, 2, 0, 1, 0, 5, 26, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.106594}
{'[0, 0, 2, 2, 2, 0, 1, 0, 5, 26, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.106621}
{'[0, 0, 2, 2, 2, 0, 1, 0, 5, 26, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.106587}
{'[0, 0, 2, 2, 2, 0, 1, 0, 5, 26, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.106561}
{'[0, 0, 2, 2, 2, 0, 1, 0, 5, 26, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.106719}
{'[0, 0, 2, 2, 2, 0, 1, 0, 5, 26, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.106883}
{'[0, 0, 2, 2, 2, 0, 1, 0, 5, 26, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.106805}
{'[0, 0, 2, 2, 2, 0, 1, 0, 5, 26, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.106638}
{'[0, 0, 2, 2, 2, 0, 1, 0, 5, 26, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.10679}
{'[0, 0, 2, 2, 2, 0, 1, 0, 5, 26, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.10681}
{'[0, 0, 2, 2, 2, 0, 1, 0, 5, 26, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.10667}
{'[0, 0, 2, 2, 2, 0, 1, 0, 5, 26, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.106616}
{'[0, 0, 2, 2, 2, 0, 1, 0, 5, 26, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.106619}

out:
 ["{'[0, 0, 2, 2, 2, 0, 1, 0, 5, 26, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.123854}", "{'[0, 0, 2, 2, 2, 0, 1, 0, 5, 26, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.123778}", "{'[0, 0, 2, 2, 2, 0, 1, 0, 5, 26, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.12369}", "{'[0, 0, 2, 2, 2, 0, 1, 0, 5, 26, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.123803}", "{'[0, 0, 2, 2, 2, 0, 1, 0, 5, 26, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.113607}", "{'[0, 0, 2, 2, 2, 0, 1, 0, 5, 26, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.106653}", "{'[0, 0, 2, 2, 2, 0, 1, 0, 5, 26, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.106634}", "{'[0, 0, 2, 2, 2, 0, 1, 0, 5, 26, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.106585}", "{'[0, 0, 2, 2, 2, 0, 1, 0, 5, 26, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.106693}", "{'[0, 0, 2, 2, 2, 0, 1, 0, 5, 26, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.106533}", "{'[0, 0, 2, 2, 2, 0, 1, 0, 5, 26, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.106629}", "{'[0, 0, 2, 2, 2, 0, 1, 0, 5, 26, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.107028}", "{'[0, 0, 2, 2, 2, 0, 1, 0, 5, 26, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.106963}", "{'[0, 0, 2, 2, 2, 0, 1, 0, 5, 26, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.106685}", "{'[0, 0, 2, 2, 2, 0, 1, 0, 5, 26, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.106587}", "{'[0, 0, 2, 2, 2, 0, 1, 0, 5, 26, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.106671}", "{'[0, 0, 2, 2, 2, 0, 1, 0, 5, 26, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.106734}", "{'[0, 0, 2, 2, 2, 0, 1, 0, 5, 26, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.106594}", "{'[0, 0, 2, 2, 2, 0, 1, 0, 5, 26, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.106621}", "{'[0, 0, 2, 2, 2, 0, 1, 0, 5, 26, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.106587}", "{'[0, 0, 2, 2, 2, 0, 1, 0, 5, 26, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.106561}", "{'[0, 0, 2, 2, 2, 0, 1, 0, 5, 26, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.106719}", "{'[0, 0, 2, 2, 2, 0, 1, 0, 5, 26, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.106883}", "{'[0, 0, 2, 2, 2, 0, 1, 0, 5, 26, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.106805}", "{'[0, 0, 2, 2, 2, 0, 1, 0, 5, 26, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.106638}", "{'[0, 0, 2, 2, 2, 0, 1, 0, 5, 26, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.10679}", "{'[0, 0, 2, 2, 2, 0, 1, 0, 5, 26, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.10681}", "{'[0, 0, 2, 2, 2, 0, 1, 0, 5, 26, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.10667}", "{'[0, 0, 2, 2, 2, 0, 1, 0, 5, 26, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.106616}", "{'[0, 0, 2, 2, 2, 0, 1, 0, 5, 26, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.106619}"]
returning from 'run': {'[0, 0, 2, 2, 2, 0, 1, 0, 5, 26, 0, 4, 1, 0, 0, 1, 0, 0]': ([0.123854, 0.123778, 0.12369, 0.123803, 0.113607, 0.106653, 0.106634, 0.106585, 0.106693, 0.106533, 0.106629, 0.107028, 0.106963, 0.106685, 0.106587, 0.106671, 0.106734, 0.106594, 0.106621, 0.106587, 0.106561, 0.106719, 0.106883, 0.106805, 0.106638, 0.10679, 0.10681, 0.10667, 0.106616, 0.106619], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 2, 2, 2, 0, 1, 0, 5, 26, 0, 4, 1, 0, 0, 1, 0, 0]': ([0.123854, 0.123778, 0.12369, 0.123803, 0.113607, 0.106653, 0.106634, 0.106585, 0.106693, 0.106533, 0.106629, 0.107028, 0.106963, 0.106685, 0.106587, 0.106671, 0.106734, 0.106594, 0.106621, 0.106587, 0.106561, 0.106719, 0.106883, 0.106805, 0.106638, 0.10679, 0.10681, 0.10667, 0.106616, 0.106619], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	53
        Max loop nest depth: 	6
        Additions: 		1823
        Multiplications: 	826
        Divisions: 		0
        Logical: 		0
        Reads: 			3928
        Writes: 		744
        Comparisons:		53
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest68.exe __orio_perftest68.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest68.exe  
Program Test Output: 
{'[3, 0, 2, 6, 2, 2, 1, 0, 8, 25, 0, 4, 2, 0, 0, 1, 1, 0]' : 0.193646}
{'[3, 0, 2, 6, 2, 2, 1, 0, 8, 25, 0, 4, 2, 0, 0, 1, 1, 0]' : 0.193773}
{'[3, 0, 2, 6, 2, 2, 1, 0, 8, 25, 0, 4, 2, 0, 0, 1, 1, 0]' : 0.189015}
{'[3, 0, 2, 6, 2, 2, 1, 0, 8, 25, 0, 4, 2, 0, 0, 1, 1, 0]' : 0.171614}
{'[3, 0, 2, 6, 2, 2, 1, 0, 8, 25, 0, 4, 2, 0, 0, 1, 1, 0]' : 0.171538}
{'[3, 0, 2, 6, 2, 2, 1, 0, 8, 25, 0, 4, 2, 0, 0, 1, 1, 0]' : 0.17086}
{'[3, 0, 2, 6, 2, 2, 1, 0, 8, 25, 0, 4, 2, 0, 0, 1, 1, 0]' : 0.171328}
{'[3, 0, 2, 6, 2, 2, 1, 0, 8, 25, 0, 4, 2, 0, 0, 1, 1, 0]' : 0.171243}
{'[3, 0, 2, 6, 2, 2, 1, 0, 8, 25, 0, 4, 2, 0, 0, 1, 1, 0]' : 0.171491}
{'[3, 0, 2, 6, 2, 2, 1, 0, 8, 25, 0, 4, 2, 0, 0, 1, 1, 0]' : 0.171628}
{'[3, 0, 2, 6, 2, 2, 1, 0, 8, 25, 0, 4, 2, 0, 0, 1, 1, 0]' : 0.171727}
{'[3, 0, 2, 6, 2, 2, 1, 0, 8, 25, 0, 4, 2, 0, 0, 1, 1, 0]' : 0.171447}
{'[3, 0, 2, 6, 2, 2, 1, 0, 8, 25, 0, 4, 2, 0, 0, 1, 1, 0]' : 0.172102}
{'[3, 0, 2, 6, 2, 2, 1, 0, 8, 25, 0, 4, 2, 0, 0, 1, 1, 0]' : 0.171343}
{'[3, 0, 2, 6, 2, 2, 1, 0, 8, 25, 0, 4, 2, 0, 0, 1, 1, 0]' : 0.171128}
{'[3, 0, 2, 6, 2, 2, 1, 0, 8, 25, 0, 4, 2, 0, 0, 1, 1, 0]' : 0.171695}
{'[3, 0, 2, 6, 2, 2, 1, 0, 8, 25, 0, 4, 2, 0, 0, 1, 1, 0]' : 0.171794}
{'[3, 0, 2, 6, 2, 2, 1, 0, 8, 25, 0, 4, 2, 0, 0, 1, 1, 0]' : 0.171198}
{'[3, 0, 2, 6, 2, 2, 1, 0, 8, 25, 0, 4, 2, 0, 0, 1, 1, 0]' : 0.172431}
{'[3, 0, 2, 6, 2, 2, 1, 0, 8, 25, 0, 4, 2, 0, 0, 1, 1, 0]' : 0.174353}
{'[3, 0, 2, 6, 2, 2, 1, 0, 8, 25, 0, 4, 2, 0, 0, 1, 1, 0]' : 0.17245}
{'[3, 0, 2, 6, 2, 2, 1, 0, 8, 25, 0, 4, 2, 0, 0, 1, 1, 0]' : 0.17108}
{'[3, 0, 2, 6, 2, 2, 1, 0, 8, 25, 0, 4, 2, 0, 0, 1, 1, 0]' : 0.171181}
{'[3, 0, 2, 6, 2, 2, 1, 0, 8, 25, 0, 4, 2, 0, 0, 1, 1, 0]' : 0.171819}
{'[3, 0, 2, 6, 2, 2, 1, 0, 8, 25, 0, 4, 2, 0, 0, 1, 1, 0]' : 0.171258}
{'[3, 0, 2, 6, 2, 2, 1, 0, 8, 25, 0, 4, 2, 0, 0, 1, 1, 0]' : 0.171203}
{'[3, 0, 2, 6, 2, 2, 1, 0, 8, 25, 0, 4, 2, 0, 0, 1, 1, 0]' : 0.171607}
{'[3, 0, 2, 6, 2, 2, 1, 0, 8, 25, 0, 4, 2, 0, 0, 1, 1, 0]' : 0.171584}
{'[3, 0, 2, 6, 2, 2, 1, 0, 8, 25, 0, 4, 2, 0, 0, 1, 1, 0]' : 0.171137}
{'[3, 0, 2, 6, 2, 2, 1, 0, 8, 25, 0, 4, 2, 0, 0, 1, 1, 0]' : 0.1713}

out:
 ["{'[3, 0, 2, 6, 2, 2, 1, 0, 8, 25, 0, 4, 2, 0, 0, 1, 1, 0]' : 0.193646}", "{'[3, 0, 2, 6, 2, 2, 1, 0, 8, 25, 0, 4, 2, 0, 0, 1, 1, 0]' : 0.193773}", "{'[3, 0, 2, 6, 2, 2, 1, 0, 8, 25, 0, 4, 2, 0, 0, 1, 1, 0]' : 0.189015}", "{'[3, 0, 2, 6, 2, 2, 1, 0, 8, 25, 0, 4, 2, 0, 0, 1, 1, 0]' : 0.171614}", "{'[3, 0, 2, 6, 2, 2, 1, 0, 8, 25, 0, 4, 2, 0, 0, 1, 1, 0]' : 0.171538}", "{'[3, 0, 2, 6, 2, 2, 1, 0, 8, 25, 0, 4, 2, 0, 0, 1, 1, 0]' : 0.17086}", "{'[3, 0, 2, 6, 2, 2, 1, 0, 8, 25, 0, 4, 2, 0, 0, 1, 1, 0]' : 0.171328}", "{'[3, 0, 2, 6, 2, 2, 1, 0, 8, 25, 0, 4, 2, 0, 0, 1, 1, 0]' : 0.171243}", "{'[3, 0, 2, 6, 2, 2, 1, 0, 8, 25, 0, 4, 2, 0, 0, 1, 1, 0]' : 0.171491}", "{'[3, 0, 2, 6, 2, 2, 1, 0, 8, 25, 0, 4, 2, 0, 0, 1, 1, 0]' : 0.171628}", "{'[3, 0, 2, 6, 2, 2, 1, 0, 8, 25, 0, 4, 2, 0, 0, 1, 1, 0]' : 0.171727}", "{'[3, 0, 2, 6, 2, 2, 1, 0, 8, 25, 0, 4, 2, 0, 0, 1, 1, 0]' : 0.171447}", "{'[3, 0, 2, 6, 2, 2, 1, 0, 8, 25, 0, 4, 2, 0, 0, 1, 1, 0]' : 0.172102}", "{'[3, 0, 2, 6, 2, 2, 1, 0, 8, 25, 0, 4, 2, 0, 0, 1, 1, 0]' : 0.171343}", "{'[3, 0, 2, 6, 2, 2, 1, 0, 8, 25, 0, 4, 2, 0, 0, 1, 1, 0]' : 0.171128}", "{'[3, 0, 2, 6, 2, 2, 1, 0, 8, 25, 0, 4, 2, 0, 0, 1, 1, 0]' : 0.171695}", "{'[3, 0, 2, 6, 2, 2, 1, 0, 8, 25, 0, 4, 2, 0, 0, 1, 1, 0]' : 0.171794}", "{'[3, 0, 2, 6, 2, 2, 1, 0, 8, 25, 0, 4, 2, 0, 0, 1, 1, 0]' : 0.171198}", "{'[3, 0, 2, 6, 2, 2, 1, 0, 8, 25, 0, 4, 2, 0, 0, 1, 1, 0]' : 0.172431}", "{'[3, 0, 2, 6, 2, 2, 1, 0, 8, 25, 0, 4, 2, 0, 0, 1, 1, 0]' : 0.174353}", "{'[3, 0, 2, 6, 2, 2, 1, 0, 8, 25, 0, 4, 2, 0, 0, 1, 1, 0]' : 0.17245}", "{'[3, 0, 2, 6, 2, 2, 1, 0, 8, 25, 0, 4, 2, 0, 0, 1, 1, 0]' : 0.17108}", "{'[3, 0, 2, 6, 2, 2, 1, 0, 8, 25, 0, 4, 2, 0, 0, 1, 1, 0]' : 0.171181}", "{'[3, 0, 2, 6, 2, 2, 1, 0, 8, 25, 0, 4, 2, 0, 0, 1, 1, 0]' : 0.171819}", "{'[3, 0, 2, 6, 2, 2, 1, 0, 8, 25, 0, 4, 2, 0, 0, 1, 1, 0]' : 0.171258}", "{'[3, 0, 2, 6, 2, 2, 1, 0, 8, 25, 0, 4, 2, 0, 0, 1, 1, 0]' : 0.171203}", "{'[3, 0, 2, 6, 2, 2, 1, 0, 8, 25, 0, 4, 2, 0, 0, 1, 1, 0]' : 0.171607}", "{'[3, 0, 2, 6, 2, 2, 1, 0, 8, 25, 0, 4, 2, 0, 0, 1, 1, 0]' : 0.171584}", "{'[3, 0, 2, 6, 2, 2, 1, 0, 8, 25, 0, 4, 2, 0, 0, 1, 1, 0]' : 0.171137}", "{'[3, 0, 2, 6, 2, 2, 1, 0, 8, 25, 0, 4, 2, 0, 0, 1, 1, 0]' : 0.1713}"]
returning from 'run': {'[3, 0, 2, 6, 2, 2, 1, 0, 8, 25, 0, 4, 2, 0, 0, 1, 1, 0]': ([0.193646, 0.193773, 0.189015, 0.171614, 0.171538, 0.17086, 0.171328, 0.171243, 0.171491, 0.171628, 0.171727, 0.171447, 0.172102, 0.171343, 0.171128, 0.171695, 0.171794, 0.171198, 0.172431, 0.174353, 0.17245, 0.17108, 0.171181, 0.171819, 0.171258, 0.171203, 0.171607, 0.171584, 0.171137, 0.1713], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 0, 2, 6, 2, 2, 1, 0, 8, 25, 0, 4, 2, 0, 0, 1, 1, 0]': ([0.193646, 0.193773, 0.189015, 0.171614, 0.171538, 0.17086, 0.171328, 0.171243, 0.171491, 0.171628, 0.171727, 0.171447, 0.172102, 0.171343, 0.171128, 0.171695, 0.171794, 0.171198, 0.172431, 0.174353, 0.17245, 0.17108, 0.171181, 0.171819, 0.171258, 0.171203, 0.171607, 0.171584, 0.171137, 0.1713], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	6
        Additions: 		1619
        Multiplications: 	532
        Divisions: 		0
        Logical: 		0
        Reads: 			2840
        Writes: 		323
        Comparisons:		22
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest69.exe __orio_perftest69.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest69.exe  
Program Test Output: 
{'[1, 0, 1, 1, 0, 5, 0, 0, 1, 4, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.154136}
{'[1, 0, 1, 1, 0, 5, 0, 0, 1, 4, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.154037}
{'[1, 0, 1, 1, 0, 5, 0, 0, 1, 4, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.153995}
{'[1, 0, 1, 1, 0, 5, 0, 0, 1, 4, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.137203}
{'[1, 0, 1, 1, 0, 5, 0, 0, 1, 4, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.131822}
{'[1, 0, 1, 1, 0, 5, 0, 0, 1, 4, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.131287}
{'[1, 0, 1, 1, 0, 5, 0, 0, 1, 4, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.131205}
{'[1, 0, 1, 1, 0, 5, 0, 0, 1, 4, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.131308}
{'[1, 0, 1, 1, 0, 5, 0, 0, 1, 4, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.131221}
{'[1, 0, 1, 1, 0, 5, 0, 0, 1, 4, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.131327}
{'[1, 0, 1, 1, 0, 5, 0, 0, 1, 4, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.1313}
{'[1, 0, 1, 1, 0, 5, 0, 0, 1, 4, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.131588}
{'[1, 0, 1, 1, 0, 5, 0, 0, 1, 4, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.131458}
{'[1, 0, 1, 1, 0, 5, 0, 0, 1, 4, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.13128}
{'[1, 0, 1, 1, 0, 5, 0, 0, 1, 4, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.131204}
{'[1, 0, 1, 1, 0, 5, 0, 0, 1, 4, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.131217}
{'[1, 0, 1, 1, 0, 5, 0, 0, 1, 4, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.131452}
{'[1, 0, 1, 1, 0, 5, 0, 0, 1, 4, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.131256}
{'[1, 0, 1, 1, 0, 5, 0, 0, 1, 4, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.131255}
{'[1, 0, 1, 1, 0, 5, 0, 0, 1, 4, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.131404}
{'[1, 0, 1, 1, 0, 5, 0, 0, 1, 4, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.13155}
{'[1, 0, 1, 1, 0, 5, 0, 0, 1, 4, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.131495}
{'[1, 0, 1, 1, 0, 5, 0, 0, 1, 4, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.131972}
{'[1, 0, 1, 1, 0, 5, 0, 0, 1, 4, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.131212}
{'[1, 0, 1, 1, 0, 5, 0, 0, 1, 4, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.131463}
{'[1, 0, 1, 1, 0, 5, 0, 0, 1, 4, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.131156}
{'[1, 0, 1, 1, 0, 5, 0, 0, 1, 4, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.131268}
{'[1, 0, 1, 1, 0, 5, 0, 0, 1, 4, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.131456}
{'[1, 0, 1, 1, 0, 5, 0, 0, 1, 4, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.131793}
{'[1, 0, 1, 1, 0, 5, 0, 0, 1, 4, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.131509}

out:
 ["{'[1, 0, 1, 1, 0, 5, 0, 0, 1, 4, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.154136}", "{'[1, 0, 1, 1, 0, 5, 0, 0, 1, 4, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.154037}", "{'[1, 0, 1, 1, 0, 5, 0, 0, 1, 4, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.153995}", "{'[1, 0, 1, 1, 0, 5, 0, 0, 1, 4, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.137203}", "{'[1, 0, 1, 1, 0, 5, 0, 0, 1, 4, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.131822}", "{'[1, 0, 1, 1, 0, 5, 0, 0, 1, 4, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.131287}", "{'[1, 0, 1, 1, 0, 5, 0, 0, 1, 4, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.131205}", "{'[1, 0, 1, 1, 0, 5, 0, 0, 1, 4, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.131308}", "{'[1, 0, 1, 1, 0, 5, 0, 0, 1, 4, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.131221}", "{'[1, 0, 1, 1, 0, 5, 0, 0, 1, 4, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.131327}", "{'[1, 0, 1, 1, 0, 5, 0, 0, 1, 4, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.1313}", "{'[1, 0, 1, 1, 0, 5, 0, 0, 1, 4, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.131588}", "{'[1, 0, 1, 1, 0, 5, 0, 0, 1, 4, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.131458}", "{'[1, 0, 1, 1, 0, 5, 0, 0, 1, 4, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.13128}", "{'[1, 0, 1, 1, 0, 5, 0, 0, 1, 4, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.131204}", "{'[1, 0, 1, 1, 0, 5, 0, 0, 1, 4, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.131217}", "{'[1, 0, 1, 1, 0, 5, 0, 0, 1, 4, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.131452}", "{'[1, 0, 1, 1, 0, 5, 0, 0, 1, 4, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.131256}", "{'[1, 0, 1, 1, 0, 5, 0, 0, 1, 4, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.131255}", "{'[1, 0, 1, 1, 0, 5, 0, 0, 1, 4, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.131404}", "{'[1, 0, 1, 1, 0, 5, 0, 0, 1, 4, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.13155}", "{'[1, 0, 1, 1, 0, 5, 0, 0, 1, 4, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.131495}", "{'[1, 0, 1, 1, 0, 5, 0, 0, 1, 4, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.131972}", "{'[1, 0, 1, 1, 0, 5, 0, 0, 1, 4, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.131212}", "{'[1, 0, 1, 1, 0, 5, 0, 0, 1, 4, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.131463}", "{'[1, 0, 1, 1, 0, 5, 0, 0, 1, 4, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.131156}", "{'[1, 0, 1, 1, 0, 5, 0, 0, 1, 4, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.131268}", "{'[1, 0, 1, 1, 0, 5, 0, 0, 1, 4, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.131456}", "{'[1, 0, 1, 1, 0, 5, 0, 0, 1, 4, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.131793}", "{'[1, 0, 1, 1, 0, 5, 0, 0, 1, 4, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.131509}"]
returning from 'run': {'[1, 0, 1, 1, 0, 5, 0, 0, 1, 4, 0, 4, 2, 0, 0, 0, 1, 0]': ([0.154136, 0.154037, 0.153995, 0.137203, 0.131822, 0.131287, 0.131205, 0.131308, 0.131221, 0.131327, 0.1313, 0.131588, 0.131458, 0.13128, 0.131204, 0.131217, 0.131452, 0.131256, 0.131255, 0.131404, 0.13155, 0.131495, 0.131972, 0.131212, 0.131463, 0.131156, 0.131268, 0.131456, 0.131793, 0.131509], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 1, 1, 0, 5, 0, 0, 1, 4, 0, 4, 2, 0, 0, 0, 1, 0]': ([0.154136, 0.154037, 0.153995, 0.137203, 0.131822, 0.131287, 0.131205, 0.131308, 0.131221, 0.131327, 0.1313, 0.131588, 0.131458, 0.13128, 0.131204, 0.131217, 0.131452, 0.131256, 0.131255, 0.131404, 0.13155, 0.131495, 0.131972, 0.131212, 0.131463, 0.131156, 0.131268, 0.131456, 0.131793, 0.131509], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	32
        Max loop nest depth: 	4
        Additions: 		1129
        Multiplications: 	252
        Divisions: 		0
        Logical: 		0
        Reads: 			1852
        Writes: 		247
        Comparisons:		32
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest70.exe __orio_perftest70.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest70.exe  
Program Test Output: 
{'[3, 5, 6, 1, 0, 4, 0, 1, 28, 4, 0, 4, 1, 0, 1, 0, 0, 1]' : 0.125064}
{'[3, 5, 6, 1, 0, 4, 0, 1, 28, 4, 0, 4, 1, 0, 1, 0, 0, 1]' : 0.125557}
{'[3, 5, 6, 1, 0, 4, 0, 1, 28, 4, 0, 4, 1, 0, 1, 0, 0, 1]' : 0.125364}
{'[3, 5, 6, 1, 0, 4, 0, 1, 28, 4, 0, 4, 1, 0, 1, 0, 0, 1]' : 0.125506}
{'[3, 5, 6, 1, 0, 4, 0, 1, 28, 4, 0, 4, 1, 0, 1, 0, 0, 1]' : 0.113205}
{'[3, 5, 6, 1, 0, 4, 0, 1, 28, 4, 0, 4, 1, 0, 1, 0, 0, 1]' : 0.109296}
{'[3, 5, 6, 1, 0, 4, 0, 1, 28, 4, 0, 4, 1, 0, 1, 0, 0, 1]' : 0.108953}
{'[3, 5, 6, 1, 0, 4, 0, 1, 28, 4, 0, 4, 1, 0, 1, 0, 0, 1]' : 0.109338}
{'[3, 5, 6, 1, 0, 4, 0, 1, 28, 4, 0, 4, 1, 0, 1, 0, 0, 1]' : 0.109329}
{'[3, 5, 6, 1, 0, 4, 0, 1, 28, 4, 0, 4, 1, 0, 1, 0, 0, 1]' : 0.1092}
{'[3, 5, 6, 1, 0, 4, 0, 1, 28, 4, 0, 4, 1, 0, 1, 0, 0, 1]' : 0.109198}
{'[3, 5, 6, 1, 0, 4, 0, 1, 28, 4, 0, 4, 1, 0, 1, 0, 0, 1]' : 0.109065}
{'[3, 5, 6, 1, 0, 4, 0, 1, 28, 4, 0, 4, 1, 0, 1, 0, 0, 1]' : 0.109112}
{'[3, 5, 6, 1, 0, 4, 0, 1, 28, 4, 0, 4, 1, 0, 1, 0, 0, 1]' : 0.109152}
{'[3, 5, 6, 1, 0, 4, 0, 1, 28, 4, 0, 4, 1, 0, 1, 0, 0, 1]' : 0.109046}
{'[3, 5, 6, 1, 0, 4, 0, 1, 28, 4, 0, 4, 1, 0, 1, 0, 0, 1]' : 0.109036}
{'[3, 5, 6, 1, 0, 4, 0, 1, 28, 4, 0, 4, 1, 0, 1, 0, 0, 1]' : 0.109045}
{'[3, 5, 6, 1, 0, 4, 0, 1, 28, 4, 0, 4, 1, 0, 1, 0, 0, 1]' : 0.109741}
{'[3, 5, 6, 1, 0, 4, 0, 1, 28, 4, 0, 4, 1, 0, 1, 0, 0, 1]' : 0.109109}
{'[3, 5, 6, 1, 0, 4, 0, 1, 28, 4, 0, 4, 1, 0, 1, 0, 0, 1]' : 0.108891}
{'[3, 5, 6, 1, 0, 4, 0, 1, 28, 4, 0, 4, 1, 0, 1, 0, 0, 1]' : 0.109085}
{'[3, 5, 6, 1, 0, 4, 0, 1, 28, 4, 0, 4, 1, 0, 1, 0, 0, 1]' : 0.10933}
{'[3, 5, 6, 1, 0, 4, 0, 1, 28, 4, 0, 4, 1, 0, 1, 0, 0, 1]' : 0.109276}
{'[3, 5, 6, 1, 0, 4, 0, 1, 28, 4, 0, 4, 1, 0, 1, 0, 0, 1]' : 0.109021}
{'[3, 5, 6, 1, 0, 4, 0, 1, 28, 4, 0, 4, 1, 0, 1, 0, 0, 1]' : 0.109031}
{'[3, 5, 6, 1, 0, 4, 0, 1, 28, 4, 0, 4, 1, 0, 1, 0, 0, 1]' : 0.109019}
{'[3, 5, 6, 1, 0, 4, 0, 1, 28, 4, 0, 4, 1, 0, 1, 0, 0, 1]' : 0.10923}
{'[3, 5, 6, 1, 0, 4, 0, 1, 28, 4, 0, 4, 1, 0, 1, 0, 0, 1]' : 0.10937}
{'[3, 5, 6, 1, 0, 4, 0, 1, 28, 4, 0, 4, 1, 0, 1, 0, 0, 1]' : 0.109429}
{'[3, 5, 6, 1, 0, 4, 0, 1, 28, 4, 0, 4, 1, 0, 1, 0, 0, 1]' : 0.109123}

out:
 ["{'[3, 5, 6, 1, 0, 4, 0, 1, 28, 4, 0, 4, 1, 0, 1, 0, 0, 1]' : 0.125064}", "{'[3, 5, 6, 1, 0, 4, 0, 1, 28, 4, 0, 4, 1, 0, 1, 0, 0, 1]' : 0.125557}", "{'[3, 5, 6, 1, 0, 4, 0, 1, 28, 4, 0, 4, 1, 0, 1, 0, 0, 1]' : 0.125364}", "{'[3, 5, 6, 1, 0, 4, 0, 1, 28, 4, 0, 4, 1, 0, 1, 0, 0, 1]' : 0.125506}", "{'[3, 5, 6, 1, 0, 4, 0, 1, 28, 4, 0, 4, 1, 0, 1, 0, 0, 1]' : 0.113205}", "{'[3, 5, 6, 1, 0, 4, 0, 1, 28, 4, 0, 4, 1, 0, 1, 0, 0, 1]' : 0.109296}", "{'[3, 5, 6, 1, 0, 4, 0, 1, 28, 4, 0, 4, 1, 0, 1, 0, 0, 1]' : 0.108953}", "{'[3, 5, 6, 1, 0, 4, 0, 1, 28, 4, 0, 4, 1, 0, 1, 0, 0, 1]' : 0.109338}", "{'[3, 5, 6, 1, 0, 4, 0, 1, 28, 4, 0, 4, 1, 0, 1, 0, 0, 1]' : 0.109329}", "{'[3, 5, 6, 1, 0, 4, 0, 1, 28, 4, 0, 4, 1, 0, 1, 0, 0, 1]' : 0.1092}", "{'[3, 5, 6, 1, 0, 4, 0, 1, 28, 4, 0, 4, 1, 0, 1, 0, 0, 1]' : 0.109198}", "{'[3, 5, 6, 1, 0, 4, 0, 1, 28, 4, 0, 4, 1, 0, 1, 0, 0, 1]' : 0.109065}", "{'[3, 5, 6, 1, 0, 4, 0, 1, 28, 4, 0, 4, 1, 0, 1, 0, 0, 1]' : 0.109112}", "{'[3, 5, 6, 1, 0, 4, 0, 1, 28, 4, 0, 4, 1, 0, 1, 0, 0, 1]' : 0.109152}", "{'[3, 5, 6, 1, 0, 4, 0, 1, 28, 4, 0, 4, 1, 0, 1, 0, 0, 1]' : 0.109046}", "{'[3, 5, 6, 1, 0, 4, 0, 1, 28, 4, 0, 4, 1, 0, 1, 0, 0, 1]' : 0.109036}", "{'[3, 5, 6, 1, 0, 4, 0, 1, 28, 4, 0, 4, 1, 0, 1, 0, 0, 1]' : 0.109045}", "{'[3, 5, 6, 1, 0, 4, 0, 1, 28, 4, 0, 4, 1, 0, 1, 0, 0, 1]' : 0.109741}", "{'[3, 5, 6, 1, 0, 4, 0, 1, 28, 4, 0, 4, 1, 0, 1, 0, 0, 1]' : 0.109109}", "{'[3, 5, 6, 1, 0, 4, 0, 1, 28, 4, 0, 4, 1, 0, 1, 0, 0, 1]' : 0.108891}", "{'[3, 5, 6, 1, 0, 4, 0, 1, 28, 4, 0, 4, 1, 0, 1, 0, 0, 1]' : 0.109085}", "{'[3, 5, 6, 1, 0, 4, 0, 1, 28, 4, 0, 4, 1, 0, 1, 0, 0, 1]' : 0.10933}", "{'[3, 5, 6, 1, 0, 4, 0, 1, 28, 4, 0, 4, 1, 0, 1, 0, 0, 1]' : 0.109276}", "{'[3, 5, 6, 1, 0, 4, 0, 1, 28, 4, 0, 4, 1, 0, 1, 0, 0, 1]' : 0.109021}", "{'[3, 5, 6, 1, 0, 4, 0, 1, 28, 4, 0, 4, 1, 0, 1, 0, 0, 1]' : 0.109031}", "{'[3, 5, 6, 1, 0, 4, 0, 1, 28, 4, 0, 4, 1, 0, 1, 0, 0, 1]' : 0.109019}", "{'[3, 5, 6, 1, 0, 4, 0, 1, 28, 4, 0, 4, 1, 0, 1, 0, 0, 1]' : 0.10923}", "{'[3, 5, 6, 1, 0, 4, 0, 1, 28, 4, 0, 4, 1, 0, 1, 0, 0, 1]' : 0.10937}", "{'[3, 5, 6, 1, 0, 4, 0, 1, 28, 4, 0, 4, 1, 0, 1, 0, 0, 1]' : 0.109429}", "{'[3, 5, 6, 1, 0, 4, 0, 1, 28, 4, 0, 4, 1, 0, 1, 0, 0, 1]' : 0.109123}"]
returning from 'run': {'[3, 5, 6, 1, 0, 4, 0, 1, 28, 4, 0, 4, 1, 0, 1, 0, 0, 1]': ([0.125064, 0.125557, 0.125364, 0.125506, 0.113205, 0.109296, 0.108953, 0.109338, 0.109329, 0.1092, 0.109198, 0.109065, 0.109112, 0.109152, 0.109046, 0.109036, 0.109045, 0.109741, 0.109109, 0.108891, 0.109085, 0.10933, 0.109276, 0.109021, 0.109031, 0.109019, 0.10923, 0.10937, 0.109429, 0.109123], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 5, 6, 1, 0, 4, 0, 1, 28, 4, 0, 4, 1, 0, 1, 0, 0, 1]': ([0.125064, 0.125557, 0.125364, 0.125506, 0.113205, 0.109296, 0.108953, 0.109338, 0.109329, 0.1092, 0.109198, 0.109065, 0.109112, 0.109152, 0.109046, 0.109036, 0.109045, 0.109741, 0.109109, 0.108891, 0.109085, 0.10933, 0.109276, 0.109021, 0.109031, 0.109019, 0.10923, 0.10937, 0.109429, 0.109123], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	99
        Max loop nest depth: 	5
        Additions: 		4211
        Multiplications: 	1638
        Divisions: 		0
        Logical: 		0
        Reads: 			8183
        Writes: 		1499
        Comparisons:		99
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest71.exe __orio_perftest71.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest71.exe  
Program Test Output: 
{'[1, 6, 1, 0, 4, 6, 0, 1, 20, 19, 0, 4, 0, 2, 0, 1, 1, 1]' : 0.301899}
{'[1, 6, 1, 0, 4, 6, 0, 1, 20, 19, 0, 4, 0, 2, 0, 1, 1, 1]' : 0.29434}
{'[1, 6, 1, 0, 4, 6, 0, 1, 20, 19, 0, 4, 0, 2, 0, 1, 1, 1]' : 0.251377}
{'[1, 6, 1, 0, 4, 6, 0, 1, 20, 19, 0, 4, 0, 2, 0, 1, 1, 1]' : 0.251461}
{'[1, 6, 1, 0, 4, 6, 0, 1, 20, 19, 0, 4, 0, 2, 0, 1, 1, 1]' : 0.25167}
{'[1, 6, 1, 0, 4, 6, 0, 1, 20, 19, 0, 4, 0, 2, 0, 1, 1, 1]' : 0.251918}
{'[1, 6, 1, 0, 4, 6, 0, 1, 20, 19, 0, 4, 0, 2, 0, 1, 1, 1]' : 0.251564}
{'[1, 6, 1, 0, 4, 6, 0, 1, 20, 19, 0, 4, 0, 2, 0, 1, 1, 1]' : 0.251559}
{'[1, 6, 1, 0, 4, 6, 0, 1, 20, 19, 0, 4, 0, 2, 0, 1, 1, 1]' : 0.251602}
{'[1, 6, 1, 0, 4, 6, 0, 1, 20, 19, 0, 4, 0, 2, 0, 1, 1, 1]' : 0.251987}
{'[1, 6, 1, 0, 4, 6, 0, 1, 20, 19, 0, 4, 0, 2, 0, 1, 1, 1]' : 0.251623}
{'[1, 6, 1, 0, 4, 6, 0, 1, 20, 19, 0, 4, 0, 2, 0, 1, 1, 1]' : 0.25152}
{'[1, 6, 1, 0, 4, 6, 0, 1, 20, 19, 0, 4, 0, 2, 0, 1, 1, 1]' : 0.251754}
{'[1, 6, 1, 0, 4, 6, 0, 1, 20, 19, 0, 4, 0, 2, 0, 1, 1, 1]' : 0.251711}
{'[1, 6, 1, 0, 4, 6, 0, 1, 20, 19, 0, 4, 0, 2, 0, 1, 1, 1]' : 0.251597}
{'[1, 6, 1, 0, 4, 6, 0, 1, 20, 19, 0, 4, 0, 2, 0, 1, 1, 1]' : 0.25159}
{'[1, 6, 1, 0, 4, 6, 0, 1, 20, 19, 0, 4, 0, 2, 0, 1, 1, 1]' : 0.251577}
{'[1, 6, 1, 0, 4, 6, 0, 1, 20, 19, 0, 4, 0, 2, 0, 1, 1, 1]' : 0.25142}
{'[1, 6, 1, 0, 4, 6, 0, 1, 20, 19, 0, 4, 0, 2, 0, 1, 1, 1]' : 0.251893}
{'[1, 6, 1, 0, 4, 6, 0, 1, 20, 19, 0, 4, 0, 2, 0, 1, 1, 1]' : 0.251638}
{'[1, 6, 1, 0, 4, 6, 0, 1, 20, 19, 0, 4, 0, 2, 0, 1, 1, 1]' : 0.25153}
{'[1, 6, 1, 0, 4, 6, 0, 1, 20, 19, 0, 4, 0, 2, 0, 1, 1, 1]' : 0.251518}
{'[1, 6, 1, 0, 4, 6, 0, 1, 20, 19, 0, 4, 0, 2, 0, 1, 1, 1]' : 0.251727}
{'[1, 6, 1, 0, 4, 6, 0, 1, 20, 19, 0, 4, 0, 2, 0, 1, 1, 1]' : 0.251564}
{'[1, 6, 1, 0, 4, 6, 0, 1, 20, 19, 0, 4, 0, 2, 0, 1, 1, 1]' : 0.251747}
{'[1, 6, 1, 0, 4, 6, 0, 1, 20, 19, 0, 4, 0, 2, 0, 1, 1, 1]' : 0.251584}
{'[1, 6, 1, 0, 4, 6, 0, 1, 20, 19, 0, 4, 0, 2, 0, 1, 1, 1]' : 0.251616}
{'[1, 6, 1, 0, 4, 6, 0, 1, 20, 19, 0, 4, 0, 2, 0, 1, 1, 1]' : 0.251744}
{'[1, 6, 1, 0, 4, 6, 0, 1, 20, 19, 0, 4, 0, 2, 0, 1, 1, 1]' : 0.251651}
{'[1, 6, 1, 0, 4, 6, 0, 1, 20, 19, 0, 4, 0, 2, 0, 1, 1, 1]' : 0.251696}

out:
 ["{'[1, 6, 1, 0, 4, 6, 0, 1, 20, 19, 0, 4, 0, 2, 0, 1, 1, 1]' : 0.301899}", "{'[1, 6, 1, 0, 4, 6, 0, 1, 20, 19, 0, 4, 0, 2, 0, 1, 1, 1]' : 0.29434}", "{'[1, 6, 1, 0, 4, 6, 0, 1, 20, 19, 0, 4, 0, 2, 0, 1, 1, 1]' : 0.251377}", "{'[1, 6, 1, 0, 4, 6, 0, 1, 20, 19, 0, 4, 0, 2, 0, 1, 1, 1]' : 0.251461}", "{'[1, 6, 1, 0, 4, 6, 0, 1, 20, 19, 0, 4, 0, 2, 0, 1, 1, 1]' : 0.25167}", "{'[1, 6, 1, 0, 4, 6, 0, 1, 20, 19, 0, 4, 0, 2, 0, 1, 1, 1]' : 0.251918}", "{'[1, 6, 1, 0, 4, 6, 0, 1, 20, 19, 0, 4, 0, 2, 0, 1, 1, 1]' : 0.251564}", "{'[1, 6, 1, 0, 4, 6, 0, 1, 20, 19, 0, 4, 0, 2, 0, 1, 1, 1]' : 0.251559}", "{'[1, 6, 1, 0, 4, 6, 0, 1, 20, 19, 0, 4, 0, 2, 0, 1, 1, 1]' : 0.251602}", "{'[1, 6, 1, 0, 4, 6, 0, 1, 20, 19, 0, 4, 0, 2, 0, 1, 1, 1]' : 0.251987}", "{'[1, 6, 1, 0, 4, 6, 0, 1, 20, 19, 0, 4, 0, 2, 0, 1, 1, 1]' : 0.251623}", "{'[1, 6, 1, 0, 4, 6, 0, 1, 20, 19, 0, 4, 0, 2, 0, 1, 1, 1]' : 0.25152}", "{'[1, 6, 1, 0, 4, 6, 0, 1, 20, 19, 0, 4, 0, 2, 0, 1, 1, 1]' : 0.251754}", "{'[1, 6, 1, 0, 4, 6, 0, 1, 20, 19, 0, 4, 0, 2, 0, 1, 1, 1]' : 0.251711}", "{'[1, 6, 1, 0, 4, 6, 0, 1, 20, 19, 0, 4, 0, 2, 0, 1, 1, 1]' : 0.251597}", "{'[1, 6, 1, 0, 4, 6, 0, 1, 20, 19, 0, 4, 0, 2, 0, 1, 1, 1]' : 0.25159}", "{'[1, 6, 1, 0, 4, 6, 0, 1, 20, 19, 0, 4, 0, 2, 0, 1, 1, 1]' : 0.251577}", "{'[1, 6, 1, 0, 4, 6, 0, 1, 20, 19, 0, 4, 0, 2, 0, 1, 1, 1]' : 0.25142}", "{'[1, 6, 1, 0, 4, 6, 0, 1, 20, 19, 0, 4, 0, 2, 0, 1, 1, 1]' : 0.251893}", "{'[1, 6, 1, 0, 4, 6, 0, 1, 20, 19, 0, 4, 0, 2, 0, 1, 1, 1]' : 0.251638}", "{'[1, 6, 1, 0, 4, 6, 0, 1, 20, 19, 0, 4, 0, 2, 0, 1, 1, 1]' : 0.25153}", "{'[1, 6, 1, 0, 4, 6, 0, 1, 20, 19, 0, 4, 0, 2, 0, 1, 1, 1]' : 0.251518}", "{'[1, 6, 1, 0, 4, 6, 0, 1, 20, 19, 0, 4, 0, 2, 0, 1, 1, 1]' : 0.251727}", "{'[1, 6, 1, 0, 4, 6, 0, 1, 20, 19, 0, 4, 0, 2, 0, 1, 1, 1]' : 0.251564}", "{'[1, 6, 1, 0, 4, 6, 0, 1, 20, 19, 0, 4, 0, 2, 0, 1, 1, 1]' : 0.251747}", "{'[1, 6, 1, 0, 4, 6, 0, 1, 20, 19, 0, 4, 0, 2, 0, 1, 1, 1]' : 0.251584}", "{'[1, 6, 1, 0, 4, 6, 0, 1, 20, 19, 0, 4, 0, 2, 0, 1, 1, 1]' : 0.251616}", "{'[1, 6, 1, 0, 4, 6, 0, 1, 20, 19, 0, 4, 0, 2, 0, 1, 1, 1]' : 0.251744}", "{'[1, 6, 1, 0, 4, 6, 0, 1, 20, 19, 0, 4, 0, 2, 0, 1, 1, 1]' : 0.251651}", "{'[1, 6, 1, 0, 4, 6, 0, 1, 20, 19, 0, 4, 0, 2, 0, 1, 1, 1]' : 0.251696}"]
returning from 'run': {'[1, 6, 1, 0, 4, 6, 0, 1, 20, 19, 0, 4, 0, 2, 0, 1, 1, 1]': ([0.301899, 0.29434, 0.251377, 0.251461, 0.25167, 0.251918, 0.251564, 0.251559, 0.251602, 0.251987, 0.251623, 0.25152, 0.251754, 0.251711, 0.251597, 0.25159, 0.251577, 0.25142, 0.251893, 0.251638, 0.25153, 0.251518, 0.251727, 0.251564, 0.251747, 0.251584, 0.251616, 0.251744, 0.251651, 0.251696], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 6, 1, 0, 4, 6, 0, 1, 20, 19, 0, 4, 0, 2, 0, 1, 1, 1]': ([0.301899, 0.29434, 0.251377, 0.251461, 0.25167, 0.251918, 0.251564, 0.251559, 0.251602, 0.251987, 0.251623, 0.25152, 0.251754, 0.251711, 0.251597, 0.25159, 0.251577, 0.25142, 0.251893, 0.251638, 0.25153, 0.251518, 0.251727, 0.251564, 0.251747, 0.251584, 0.251616, 0.251744, 0.251651, 0.251696], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	137
        Max loop nest depth: 	4
        Additions: 		3216
        Multiplications: 	930
        Divisions: 		0
        Logical: 		0
        Reads: 			6639
        Writes: 		1404
        Comparisons:		137
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest72.exe __orio_perftest72.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest72.exe  
Program Test Output: 
{'[0, 0, 4, 6, 1, 0, 0, 1, 27, 29, 0, 4, 0, 1, 0, 1, 1, 1]' : 0.245357}
{'[0, 0, 4, 6, 1, 0, 0, 1, 27, 29, 0, 4, 0, 1, 0, 1, 1, 1]' : 0.244936}
{'[0, 0, 4, 6, 1, 0, 0, 1, 27, 29, 0, 4, 0, 1, 0, 1, 1, 1]' : 0.245818}
{'[0, 0, 4, 6, 1, 0, 0, 1, 27, 29, 0, 4, 0, 1, 0, 1, 1, 1]' : 0.245892}
{'[0, 0, 4, 6, 1, 0, 0, 1, 27, 29, 0, 4, 0, 1, 0, 1, 1, 1]' : 0.245184}
{'[0, 0, 4, 6, 1, 0, 0, 1, 27, 29, 0, 4, 0, 1, 0, 1, 1, 1]' : 0.247148}
{'[0, 0, 4, 6, 1, 0, 0, 1, 27, 29, 0, 4, 0, 1, 0, 1, 1, 1]' : 0.245493}
{'[0, 0, 4, 6, 1, 0, 0, 1, 27, 29, 0, 4, 0, 1, 0, 1, 1, 1]' : 0.247696}
{'[0, 0, 4, 6, 1, 0, 0, 1, 27, 29, 0, 4, 0, 1, 0, 1, 1, 1]' : 0.242992}
{'[0, 0, 4, 6, 1, 0, 0, 1, 27, 29, 0, 4, 0, 1, 0, 1, 1, 1]' : 0.245863}
{'[0, 0, 4, 6, 1, 0, 0, 1, 27, 29, 0, 4, 0, 1, 0, 1, 1, 1]' : 0.247082}
{'[0, 0, 4, 6, 1, 0, 0, 1, 27, 29, 0, 4, 0, 1, 0, 1, 1, 1]' : 0.247713}
{'[0, 0, 4, 6, 1, 0, 0, 1, 27, 29, 0, 4, 0, 1, 0, 1, 1, 1]' : 0.247933}
{'[0, 0, 4, 6, 1, 0, 0, 1, 27, 29, 0, 4, 0, 1, 0, 1, 1, 1]' : 0.250532}
{'[0, 0, 4, 6, 1, 0, 0, 1, 27, 29, 0, 4, 0, 1, 0, 1, 1, 1]' : 0.245956}
{'[0, 0, 4, 6, 1, 0, 0, 1, 27, 29, 0, 4, 0, 1, 0, 1, 1, 1]' : 0.244031}
{'[0, 0, 4, 6, 1, 0, 0, 1, 27, 29, 0, 4, 0, 1, 0, 1, 1, 1]' : 0.244888}
{'[0, 0, 4, 6, 1, 0, 0, 1, 27, 29, 0, 4, 0, 1, 0, 1, 1, 1]' : 0.245595}
{'[0, 0, 4, 6, 1, 0, 0, 1, 27, 29, 0, 4, 0, 1, 0, 1, 1, 1]' : 0.243469}
{'[0, 0, 4, 6, 1, 0, 0, 1, 27, 29, 0, 4, 0, 1, 0, 1, 1, 1]' : 0.243102}
{'[0, 0, 4, 6, 1, 0, 0, 1, 27, 29, 0, 4, 0, 1, 0, 1, 1, 1]' : 0.246198}
{'[0, 0, 4, 6, 1, 0, 0, 1, 27, 29, 0, 4, 0, 1, 0, 1, 1, 1]' : 0.248239}
{'[0, 0, 4, 6, 1, 0, 0, 1, 27, 29, 0, 4, 0, 1, 0, 1, 1, 1]' : 0.248445}
{'[0, 0, 4, 6, 1, 0, 0, 1, 27, 29, 0, 4, 0, 1, 0, 1, 1, 1]' : 0.247073}
{'[0, 0, 4, 6, 1, 0, 0, 1, 27, 29, 0, 4, 0, 1, 0, 1, 1, 1]' : 0.245623}
{'[0, 0, 4, 6, 1, 0, 0, 1, 27, 29, 0, 4, 0, 1, 0, 1, 1, 1]' : 0.245192}
{'[0, 0, 4, 6, 1, 0, 0, 1, 27, 29, 0, 4, 0, 1, 0, 1, 1, 1]' : 0.248847}
{'[0, 0, 4, 6, 1, 0, 0, 1, 27, 29, 0, 4, 0, 1, 0, 1, 1, 1]' : 0.24258}
{'[0, 0, 4, 6, 1, 0, 0, 1, 27, 29, 0, 4, 0, 1, 0, 1, 1, 1]' : 0.246568}
{'[0, 0, 4, 6, 1, 0, 0, 1, 27, 29, 0, 4, 0, 1, 0, 1, 1, 1]' : 0.251596}

out:
 ["{'[0, 0, 4, 6, 1, 0, 0, 1, 27, 29, 0, 4, 0, 1, 0, 1, 1, 1]' : 0.245357}", "{'[0, 0, 4, 6, 1, 0, 0, 1, 27, 29, 0, 4, 0, 1, 0, 1, 1, 1]' : 0.244936}", "{'[0, 0, 4, 6, 1, 0, 0, 1, 27, 29, 0, 4, 0, 1, 0, 1, 1, 1]' : 0.245818}", "{'[0, 0, 4, 6, 1, 0, 0, 1, 27, 29, 0, 4, 0, 1, 0, 1, 1, 1]' : 0.245892}", "{'[0, 0, 4, 6, 1, 0, 0, 1, 27, 29, 0, 4, 0, 1, 0, 1, 1, 1]' : 0.245184}", "{'[0, 0, 4, 6, 1, 0, 0, 1, 27, 29, 0, 4, 0, 1, 0, 1, 1, 1]' : 0.247148}", "{'[0, 0, 4, 6, 1, 0, 0, 1, 27, 29, 0, 4, 0, 1, 0, 1, 1, 1]' : 0.245493}", "{'[0, 0, 4, 6, 1, 0, 0, 1, 27, 29, 0, 4, 0, 1, 0, 1, 1, 1]' : 0.247696}", "{'[0, 0, 4, 6, 1, 0, 0, 1, 27, 29, 0, 4, 0, 1, 0, 1, 1, 1]' : 0.242992}", "{'[0, 0, 4, 6, 1, 0, 0, 1, 27, 29, 0, 4, 0, 1, 0, 1, 1, 1]' : 0.245863}", "{'[0, 0, 4, 6, 1, 0, 0, 1, 27, 29, 0, 4, 0, 1, 0, 1, 1, 1]' : 0.247082}", "{'[0, 0, 4, 6, 1, 0, 0, 1, 27, 29, 0, 4, 0, 1, 0, 1, 1, 1]' : 0.247713}", "{'[0, 0, 4, 6, 1, 0, 0, 1, 27, 29, 0, 4, 0, 1, 0, 1, 1, 1]' : 0.247933}", "{'[0, 0, 4, 6, 1, 0, 0, 1, 27, 29, 0, 4, 0, 1, 0, 1, 1, 1]' : 0.250532}", "{'[0, 0, 4, 6, 1, 0, 0, 1, 27, 29, 0, 4, 0, 1, 0, 1, 1, 1]' : 0.245956}", "{'[0, 0, 4, 6, 1, 0, 0, 1, 27, 29, 0, 4, 0, 1, 0, 1, 1, 1]' : 0.244031}", "{'[0, 0, 4, 6, 1, 0, 0, 1, 27, 29, 0, 4, 0, 1, 0, 1, 1, 1]' : 0.244888}", "{'[0, 0, 4, 6, 1, 0, 0, 1, 27, 29, 0, 4, 0, 1, 0, 1, 1, 1]' : 0.245595}", "{'[0, 0, 4, 6, 1, 0, 0, 1, 27, 29, 0, 4, 0, 1, 0, 1, 1, 1]' : 0.243469}", "{'[0, 0, 4, 6, 1, 0, 0, 1, 27, 29, 0, 4, 0, 1, 0, 1, 1, 1]' : 0.243102}", "{'[0, 0, 4, 6, 1, 0, 0, 1, 27, 29, 0, 4, 0, 1, 0, 1, 1, 1]' : 0.246198}", "{'[0, 0, 4, 6, 1, 0, 0, 1, 27, 29, 0, 4, 0, 1, 0, 1, 1, 1]' : 0.248239}", "{'[0, 0, 4, 6, 1, 0, 0, 1, 27, 29, 0, 4, 0, 1, 0, 1, 1, 1]' : 0.248445}", "{'[0, 0, 4, 6, 1, 0, 0, 1, 27, 29, 0, 4, 0, 1, 0, 1, 1, 1]' : 0.247073}", "{'[0, 0, 4, 6, 1, 0, 0, 1, 27, 29, 0, 4, 0, 1, 0, 1, 1, 1]' : 0.245623}", "{'[0, 0, 4, 6, 1, 0, 0, 1, 27, 29, 0, 4, 0, 1, 0, 1, 1, 1]' : 0.245192}", "{'[0, 0, 4, 6, 1, 0, 0, 1, 27, 29, 0, 4, 0, 1, 0, 1, 1, 1]' : 0.248847}", "{'[0, 0, 4, 6, 1, 0, 0, 1, 27, 29, 0, 4, 0, 1, 0, 1, 1, 1]' : 0.24258}", "{'[0, 0, 4, 6, 1, 0, 0, 1, 27, 29, 0, 4, 0, 1, 0, 1, 1, 1]' : 0.246568}", "{'[0, 0, 4, 6, 1, 0, 0, 1, 27, 29, 0, 4, 0, 1, 0, 1, 1, 1]' : 0.251596}"]
returning from 'run': {'[0, 0, 4, 6, 1, 0, 0, 1, 27, 29, 0, 4, 0, 1, 0, 1, 1, 1]': ([0.245357, 0.244936, 0.245818, 0.245892, 0.245184, 0.247148, 0.245493, 0.247696, 0.242992, 0.245863, 0.247082, 0.247713, 0.247933, 0.250532, 0.245956, 0.244031, 0.244888, 0.245595, 0.243469, 0.243102, 0.246198, 0.248239, 0.248445, 0.247073, 0.245623, 0.245192, 0.248847, 0.24258, 0.246568, 0.251596], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 4, 6, 1, 0, 0, 1, 27, 29, 0, 4, 0, 1, 0, 1, 1, 1]': ([0.245357, 0.244936, 0.245818, 0.245892, 0.245184, 0.247148, 0.245493, 0.247696, 0.242992, 0.245863, 0.247082, 0.247713, 0.247933, 0.250532, 0.245956, 0.244031, 0.244888, 0.245595, 0.243469, 0.243102, 0.246198, 0.248239, 0.248445, 0.247073, 0.245623, 0.245192, 0.248847, 0.24258, 0.246568, 0.251596], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	165
        Max loop nest depth: 	6
        Additions: 		9763
        Multiplications: 	2280
        Divisions: 		0
        Logical: 		0
        Reads: 			14499
        Writes: 		1591
        Comparisons:		165
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest73.exe __orio_perftest73.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest73.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest73.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest73.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest73.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = jjj
Code stats:
        Number of loops: 	73
        Max loop nest depth: 	6
        Additions: 		3003
        Multiplications: 	1254
        Divisions: 		0
        Logical: 		0
        Reads: 			5894
        Writes: 		1049
        Comparisons:		73
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest74.exe __orio_perftest74.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest74.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest74.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest74.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest74.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	27
        Max loop nest depth: 	5
        Additions: 		1838
        Multiplications: 	882
        Divisions: 		0
        Logical: 		0
        Reads: 			3877
        Writes: 		729
        Comparisons:		27
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest75.exe __orio_perftest75.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest75.exe  
Program Test Output: 
{'[6, 2, 6, 0, 2, 6, 0, 0, 24, 29, 0, 4, 2, 0, 0, 1, 0, 1]' : 0.169297}
{'[6, 2, 6, 0, 2, 6, 0, 0, 24, 29, 0, 4, 2, 0, 0, 1, 0, 1]' : 0.169792}
{'[6, 2, 6, 0, 2, 6, 0, 0, 24, 29, 0, 4, 2, 0, 0, 1, 0, 1]' : 0.169382}
{'[6, 2, 6, 0, 2, 6, 0, 0, 24, 29, 0, 4, 2, 0, 0, 1, 0, 1]' : 0.168852}
{'[6, 2, 6, 0, 2, 6, 0, 0, 24, 29, 0, 4, 2, 0, 0, 1, 0, 1]' : 0.169156}
{'[6, 2, 6, 0, 2, 6, 0, 0, 24, 29, 0, 4, 2, 0, 0, 1, 0, 1]' : 0.169877}
{'[6, 2, 6, 0, 2, 6, 0, 0, 24, 29, 0, 4, 2, 0, 0, 1, 0, 1]' : 0.16941}
{'[6, 2, 6, 0, 2, 6, 0, 0, 24, 29, 0, 4, 2, 0, 0, 1, 0, 1]' : 0.169738}
{'[6, 2, 6, 0, 2, 6, 0, 0, 24, 29, 0, 4, 2, 0, 0, 1, 0, 1]' : 0.169414}
{'[6, 2, 6, 0, 2, 6, 0, 0, 24, 29, 0, 4, 2, 0, 0, 1, 0, 1]' : 0.169112}
{'[6, 2, 6, 0, 2, 6, 0, 0, 24, 29, 0, 4, 2, 0, 0, 1, 0, 1]' : 0.16924}
{'[6, 2, 6, 0, 2, 6, 0, 0, 24, 29, 0, 4, 2, 0, 0, 1, 0, 1]' : 0.169636}
{'[6, 2, 6, 0, 2, 6, 0, 0, 24, 29, 0, 4, 2, 0, 0, 1, 0, 1]' : 0.169514}
{'[6, 2, 6, 0, 2, 6, 0, 0, 24, 29, 0, 4, 2, 0, 0, 1, 0, 1]' : 0.16954}
{'[6, 2, 6, 0, 2, 6, 0, 0, 24, 29, 0, 4, 2, 0, 0, 1, 0, 1]' : 0.169628}
{'[6, 2, 6, 0, 2, 6, 0, 0, 24, 29, 0, 4, 2, 0, 0, 1, 0, 1]' : 0.168954}
{'[6, 2, 6, 0, 2, 6, 0, 0, 24, 29, 0, 4, 2, 0, 0, 1, 0, 1]' : 0.169779}
{'[6, 2, 6, 0, 2, 6, 0, 0, 24, 29, 0, 4, 2, 0, 0, 1, 0, 1]' : 0.169599}
{'[6, 2, 6, 0, 2, 6, 0, 0, 24, 29, 0, 4, 2, 0, 0, 1, 0, 1]' : 0.169616}
{'[6, 2, 6, 0, 2, 6, 0, 0, 24, 29, 0, 4, 2, 0, 0, 1, 0, 1]' : 0.169663}
{'[6, 2, 6, 0, 2, 6, 0, 0, 24, 29, 0, 4, 2, 0, 0, 1, 0, 1]' : 0.169585}
{'[6, 2, 6, 0, 2, 6, 0, 0, 24, 29, 0, 4, 2, 0, 0, 1, 0, 1]' : 0.169104}
{'[6, 2, 6, 0, 2, 6, 0, 0, 24, 29, 0, 4, 2, 0, 0, 1, 0, 1]' : 0.169322}
{'[6, 2, 6, 0, 2, 6, 0, 0, 24, 29, 0, 4, 2, 0, 0, 1, 0, 1]' : 0.169122}
{'[6, 2, 6, 0, 2, 6, 0, 0, 24, 29, 0, 4, 2, 0, 0, 1, 0, 1]' : 0.170276}
{'[6, 2, 6, 0, 2, 6, 0, 0, 24, 29, 0, 4, 2, 0, 0, 1, 0, 1]' : 0.169501}
{'[6, 2, 6, 0, 2, 6, 0, 0, 24, 29, 0, 4, 2, 0, 0, 1, 0, 1]' : 0.170455}
{'[6, 2, 6, 0, 2, 6, 0, 0, 24, 29, 0, 4, 2, 0, 0, 1, 0, 1]' : 0.172445}
{'[6, 2, 6, 0, 2, 6, 0, 0, 24, 29, 0, 4, 2, 0, 0, 1, 0, 1]' : 0.173047}
{'[6, 2, 6, 0, 2, 6, 0, 0, 24, 29, 0, 4, 2, 0, 0, 1, 0, 1]' : 0.172463}

out:
 ["{'[6, 2, 6, 0, 2, 6, 0, 0, 24, 29, 0, 4, 2, 0, 0, 1, 0, 1]' : 0.169297}", "{'[6, 2, 6, 0, 2, 6, 0, 0, 24, 29, 0, 4, 2, 0, 0, 1, 0, 1]' : 0.169792}", "{'[6, 2, 6, 0, 2, 6, 0, 0, 24, 29, 0, 4, 2, 0, 0, 1, 0, 1]' : 0.169382}", "{'[6, 2, 6, 0, 2, 6, 0, 0, 24, 29, 0, 4, 2, 0, 0, 1, 0, 1]' : 0.168852}", "{'[6, 2, 6, 0, 2, 6, 0, 0, 24, 29, 0, 4, 2, 0, 0, 1, 0, 1]' : 0.169156}", "{'[6, 2, 6, 0, 2, 6, 0, 0, 24, 29, 0, 4, 2, 0, 0, 1, 0, 1]' : 0.169877}", "{'[6, 2, 6, 0, 2, 6, 0, 0, 24, 29, 0, 4, 2, 0, 0, 1, 0, 1]' : 0.16941}", "{'[6, 2, 6, 0, 2, 6, 0, 0, 24, 29, 0, 4, 2, 0, 0, 1, 0, 1]' : 0.169738}", "{'[6, 2, 6, 0, 2, 6, 0, 0, 24, 29, 0, 4, 2, 0, 0, 1, 0, 1]' : 0.169414}", "{'[6, 2, 6, 0, 2, 6, 0, 0, 24, 29, 0, 4, 2, 0, 0, 1, 0, 1]' : 0.169112}", "{'[6, 2, 6, 0, 2, 6, 0, 0, 24, 29, 0, 4, 2, 0, 0, 1, 0, 1]' : 0.16924}", "{'[6, 2, 6, 0, 2, 6, 0, 0, 24, 29, 0, 4, 2, 0, 0, 1, 0, 1]' : 0.169636}", "{'[6, 2, 6, 0, 2, 6, 0, 0, 24, 29, 0, 4, 2, 0, 0, 1, 0, 1]' : 0.169514}", "{'[6, 2, 6, 0, 2, 6, 0, 0, 24, 29, 0, 4, 2, 0, 0, 1, 0, 1]' : 0.16954}", "{'[6, 2, 6, 0, 2, 6, 0, 0, 24, 29, 0, 4, 2, 0, 0, 1, 0, 1]' : 0.169628}", "{'[6, 2, 6, 0, 2, 6, 0, 0, 24, 29, 0, 4, 2, 0, 0, 1, 0, 1]' : 0.168954}", "{'[6, 2, 6, 0, 2, 6, 0, 0, 24, 29, 0, 4, 2, 0, 0, 1, 0, 1]' : 0.169779}", "{'[6, 2, 6, 0, 2, 6, 0, 0, 24, 29, 0, 4, 2, 0, 0, 1, 0, 1]' : 0.169599}", "{'[6, 2, 6, 0, 2, 6, 0, 0, 24, 29, 0, 4, 2, 0, 0, 1, 0, 1]' : 0.169616}", "{'[6, 2, 6, 0, 2, 6, 0, 0, 24, 29, 0, 4, 2, 0, 0, 1, 0, 1]' : 0.169663}", "{'[6, 2, 6, 0, 2, 6, 0, 0, 24, 29, 0, 4, 2, 0, 0, 1, 0, 1]' : 0.169585}", "{'[6, 2, 6, 0, 2, 6, 0, 0, 24, 29, 0, 4, 2, 0, 0, 1, 0, 1]' : 0.169104}", "{'[6, 2, 6, 0, 2, 6, 0, 0, 24, 29, 0, 4, 2, 0, 0, 1, 0, 1]' : 0.169322}", "{'[6, 2, 6, 0, 2, 6, 0, 0, 24, 29, 0, 4, 2, 0, 0, 1, 0, 1]' : 0.169122}", "{'[6, 2, 6, 0, 2, 6, 0, 0, 24, 29, 0, 4, 2, 0, 0, 1, 0, 1]' : 0.170276}", "{'[6, 2, 6, 0, 2, 6, 0, 0, 24, 29, 0, 4, 2, 0, 0, 1, 0, 1]' : 0.169501}", "{'[6, 2, 6, 0, 2, 6, 0, 0, 24, 29, 0, 4, 2, 0, 0, 1, 0, 1]' : 0.170455}", "{'[6, 2, 6, 0, 2, 6, 0, 0, 24, 29, 0, 4, 2, 0, 0, 1, 0, 1]' : 0.172445}", "{'[6, 2, 6, 0, 2, 6, 0, 0, 24, 29, 0, 4, 2, 0, 0, 1, 0, 1]' : 0.173047}", "{'[6, 2, 6, 0, 2, 6, 0, 0, 24, 29, 0, 4, 2, 0, 0, 1, 0, 1]' : 0.172463}"]
returning from 'run': {'[6, 2, 6, 0, 2, 6, 0, 0, 24, 29, 0, 4, 2, 0, 0, 1, 0, 1]': ([0.169297, 0.169792, 0.169382, 0.168852, 0.169156, 0.169877, 0.16941, 0.169738, 0.169414, 0.169112, 0.16924, 0.169636, 0.169514, 0.16954, 0.169628, 0.168954, 0.169779, 0.169599, 0.169616, 0.169663, 0.169585, 0.169104, 0.169322, 0.169122, 0.170276, 0.169501, 0.170455, 0.172445, 0.173047, 0.172463], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 2, 6, 0, 2, 6, 0, 0, 24, 29, 0, 4, 2, 0, 0, 1, 0, 1]': ([0.169297, 0.169792, 0.169382, 0.168852, 0.169156, 0.169877, 0.16941, 0.169738, 0.169414, 0.169112, 0.16924, 0.169636, 0.169514, 0.16954, 0.169628, 0.168954, 0.169779, 0.169599, 0.169616, 0.169663, 0.169585, 0.169104, 0.169322, 0.169122, 0.170276, 0.169501, 0.170455, 0.172445, 0.173047, 0.172463], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	39
        Max loop nest depth: 	4
        Additions: 		1840
        Multiplications: 	540
        Divisions: 		0
        Logical: 		0
        Reads: 			3029
        Writes: 		360
        Comparisons:		39
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest76.exe __orio_perftest76.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest76.exe  
Program Test Output: 
{'[1, 0, 0, 0, 1, 3, 0, 0, 0, 8, 0, 4, 1, 0, 1, 0, 0, 0]' : 0.13384}
{'[1, 0, 0, 0, 1, 3, 0, 0, 0, 8, 0, 4, 1, 0, 1, 0, 0, 0]' : 0.133486}
{'[1, 0, 0, 0, 1, 3, 0, 0, 0, 8, 0, 4, 1, 0, 1, 0, 0, 0]' : 0.133339}
{'[1, 0, 0, 0, 1, 3, 0, 0, 0, 8, 0, 4, 1, 0, 1, 0, 0, 0]' : 0.11767}
{'[1, 0, 0, 0, 1, 3, 0, 0, 0, 8, 0, 4, 1, 0, 1, 0, 0, 0]' : 0.115971}
{'[1, 0, 0, 0, 1, 3, 0, 0, 0, 8, 0, 4, 1, 0, 1, 0, 0, 0]' : 0.116035}
{'[1, 0, 0, 0, 1, 3, 0, 0, 0, 8, 0, 4, 1, 0, 1, 0, 0, 0]' : 0.116159}
{'[1, 0, 0, 0, 1, 3, 0, 0, 0, 8, 0, 4, 1, 0, 1, 0, 0, 0]' : 0.116362}
{'[1, 0, 0, 0, 1, 3, 0, 0, 0, 8, 0, 4, 1, 0, 1, 0, 0, 0]' : 0.116136}
{'[1, 0, 0, 0, 1, 3, 0, 0, 0, 8, 0, 4, 1, 0, 1, 0, 0, 0]' : 0.115972}
{'[1, 0, 0, 0, 1, 3, 0, 0, 0, 8, 0, 4, 1, 0, 1, 0, 0, 0]' : 0.11597}
{'[1, 0, 0, 0, 1, 3, 0, 0, 0, 8, 0, 4, 1, 0, 1, 0, 0, 0]' : 0.116458}
{'[1, 0, 0, 0, 1, 3, 0, 0, 0, 8, 0, 4, 1, 0, 1, 0, 0, 0]' : 0.115923}
{'[1, 0, 0, 0, 1, 3, 0, 0, 0, 8, 0, 4, 1, 0, 1, 0, 0, 0]' : 0.115768}
{'[1, 0, 0, 0, 1, 3, 0, 0, 0, 8, 0, 4, 1, 0, 1, 0, 0, 0]' : 0.115615}
{'[1, 0, 0, 0, 1, 3, 0, 0, 0, 8, 0, 4, 1, 0, 1, 0, 0, 0]' : 0.116128}
{'[1, 0, 0, 0, 1, 3, 0, 0, 0, 8, 0, 4, 1, 0, 1, 0, 0, 0]' : 0.115977}
{'[1, 0, 0, 0, 1, 3, 0, 0, 0, 8, 0, 4, 1, 0, 1, 0, 0, 0]' : 0.115623}
{'[1, 0, 0, 0, 1, 3, 0, 0, 0, 8, 0, 4, 1, 0, 1, 0, 0, 0]' : 0.115565}
{'[1, 0, 0, 0, 1, 3, 0, 0, 0, 8, 0, 4, 1, 0, 1, 0, 0, 0]' : 0.115397}
{'[1, 0, 0, 0, 1, 3, 0, 0, 0, 8, 0, 4, 1, 0, 1, 0, 0, 0]' : 0.115475}
{'[1, 0, 0, 0, 1, 3, 0, 0, 0, 8, 0, 4, 1, 0, 1, 0, 0, 0]' : 0.115153}
{'[1, 0, 0, 0, 1, 3, 0, 0, 0, 8, 0, 4, 1, 0, 1, 0, 0, 0]' : 0.115091}
{'[1, 0, 0, 0, 1, 3, 0, 0, 0, 8, 0, 4, 1, 0, 1, 0, 0, 0]' : 0.1158}
{'[1, 0, 0, 0, 1, 3, 0, 0, 0, 8, 0, 4, 1, 0, 1, 0, 0, 0]' : 0.115393}
{'[1, 0, 0, 0, 1, 3, 0, 0, 0, 8, 0, 4, 1, 0, 1, 0, 0, 0]' : 0.115384}
{'[1, 0, 0, 0, 1, 3, 0, 0, 0, 8, 0, 4, 1, 0, 1, 0, 0, 0]' : 0.115377}
{'[1, 0, 0, 0, 1, 3, 0, 0, 0, 8, 0, 4, 1, 0, 1, 0, 0, 0]' : 0.115482}
{'[1, 0, 0, 0, 1, 3, 0, 0, 0, 8, 0, 4, 1, 0, 1, 0, 0, 0]' : 0.115462}
{'[1, 0, 0, 0, 1, 3, 0, 0, 0, 8, 0, 4, 1, 0, 1, 0, 0, 0]' : 0.115186}

out:
 ["{'[1, 0, 0, 0, 1, 3, 0, 0, 0, 8, 0, 4, 1, 0, 1, 0, 0, 0]' : 0.13384}", "{'[1, 0, 0, 0, 1, 3, 0, 0, 0, 8, 0, 4, 1, 0, 1, 0, 0, 0]' : 0.133486}", "{'[1, 0, 0, 0, 1, 3, 0, 0, 0, 8, 0, 4, 1, 0, 1, 0, 0, 0]' : 0.133339}", "{'[1, 0, 0, 0, 1, 3, 0, 0, 0, 8, 0, 4, 1, 0, 1, 0, 0, 0]' : 0.11767}", "{'[1, 0, 0, 0, 1, 3, 0, 0, 0, 8, 0, 4, 1, 0, 1, 0, 0, 0]' : 0.115971}", "{'[1, 0, 0, 0, 1, 3, 0, 0, 0, 8, 0, 4, 1, 0, 1, 0, 0, 0]' : 0.116035}", "{'[1, 0, 0, 0, 1, 3, 0, 0, 0, 8, 0, 4, 1, 0, 1, 0, 0, 0]' : 0.116159}", "{'[1, 0, 0, 0, 1, 3, 0, 0, 0, 8, 0, 4, 1, 0, 1, 0, 0, 0]' : 0.116362}", "{'[1, 0, 0, 0, 1, 3, 0, 0, 0, 8, 0, 4, 1, 0, 1, 0, 0, 0]' : 0.116136}", "{'[1, 0, 0, 0, 1, 3, 0, 0, 0, 8, 0, 4, 1, 0, 1, 0, 0, 0]' : 0.115972}", "{'[1, 0, 0, 0, 1, 3, 0, 0, 0, 8, 0, 4, 1, 0, 1, 0, 0, 0]' : 0.11597}", "{'[1, 0, 0, 0, 1, 3, 0, 0, 0, 8, 0, 4, 1, 0, 1, 0, 0, 0]' : 0.116458}", "{'[1, 0, 0, 0, 1, 3, 0, 0, 0, 8, 0, 4, 1, 0, 1, 0, 0, 0]' : 0.115923}", "{'[1, 0, 0, 0, 1, 3, 0, 0, 0, 8, 0, 4, 1, 0, 1, 0, 0, 0]' : 0.115768}", "{'[1, 0, 0, 0, 1, 3, 0, 0, 0, 8, 0, 4, 1, 0, 1, 0, 0, 0]' : 0.115615}", "{'[1, 0, 0, 0, 1, 3, 0, 0, 0, 8, 0, 4, 1, 0, 1, 0, 0, 0]' : 0.116128}", "{'[1, 0, 0, 0, 1, 3, 0, 0, 0, 8, 0, 4, 1, 0, 1, 0, 0, 0]' : 0.115977}", "{'[1, 0, 0, 0, 1, 3, 0, 0, 0, 8, 0, 4, 1, 0, 1, 0, 0, 0]' : 0.115623}", "{'[1, 0, 0, 0, 1, 3, 0, 0, 0, 8, 0, 4, 1, 0, 1, 0, 0, 0]' : 0.115565}", "{'[1, 0, 0, 0, 1, 3, 0, 0, 0, 8, 0, 4, 1, 0, 1, 0, 0, 0]' : 0.115397}", "{'[1, 0, 0, 0, 1, 3, 0, 0, 0, 8, 0, 4, 1, 0, 1, 0, 0, 0]' : 0.115475}", "{'[1, 0, 0, 0, 1, 3, 0, 0, 0, 8, 0, 4, 1, 0, 1, 0, 0, 0]' : 0.115153}", "{'[1, 0, 0, 0, 1, 3, 0, 0, 0, 8, 0, 4, 1, 0, 1, 0, 0, 0]' : 0.115091}", "{'[1, 0, 0, 0, 1, 3, 0, 0, 0, 8, 0, 4, 1, 0, 1, 0, 0, 0]' : 0.1158}", "{'[1, 0, 0, 0, 1, 3, 0, 0, 0, 8, 0, 4, 1, 0, 1, 0, 0, 0]' : 0.115393}", "{'[1, 0, 0, 0, 1, 3, 0, 0, 0, 8, 0, 4, 1, 0, 1, 0, 0, 0]' : 0.115384}", "{'[1, 0, 0, 0, 1, 3, 0, 0, 0, 8, 0, 4, 1, 0, 1, 0, 0, 0]' : 0.115377}", "{'[1, 0, 0, 0, 1, 3, 0, 0, 0, 8, 0, 4, 1, 0, 1, 0, 0, 0]' : 0.115482}", "{'[1, 0, 0, 0, 1, 3, 0, 0, 0, 8, 0, 4, 1, 0, 1, 0, 0, 0]' : 0.115462}", "{'[1, 0, 0, 0, 1, 3, 0, 0, 0, 8, 0, 4, 1, 0, 1, 0, 0, 0]' : 0.115186}"]
returning from 'run': {'[1, 0, 0, 0, 1, 3, 0, 0, 0, 8, 0, 4, 1, 0, 1, 0, 0, 0]': ([0.13384, 0.133486, 0.133339, 0.11767, 0.115971, 0.116035, 0.116159, 0.116362, 0.116136, 0.115972, 0.11597, 0.116458, 0.115923, 0.115768, 0.115615, 0.116128, 0.115977, 0.115623, 0.115565, 0.115397, 0.115475, 0.115153, 0.115091, 0.1158, 0.115393, 0.115384, 0.115377, 0.115482, 0.115462, 0.115186], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 0, 0, 1, 3, 0, 0, 0, 8, 0, 4, 1, 0, 1, 0, 0, 0]': ([0.13384, 0.133486, 0.133339, 0.11767, 0.115971, 0.116035, 0.116159, 0.116362, 0.116136, 0.115972, 0.11597, 0.116458, 0.115923, 0.115768, 0.115615, 0.116128, 0.115977, 0.115623, 0.115565, 0.115397, 0.115475, 0.115153, 0.115091, 0.1158, 0.115393, 0.115384, 0.115377, 0.115482, 0.115462, 0.115186], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	5
        Additions: 		267
        Multiplications: 	66
        Divisions: 		0
        Logical: 		0
        Reads: 			502
        Writes: 		73
        Comparisons:		10
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest77.exe __orio_perftest77.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest77.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest77.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest77.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest77.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	48
        Max loop nest depth: 	5
        Additions: 		9019
        Multiplications: 	2356
        Divisions: 		0
        Logical: 		0
        Reads: 			13377
        Writes: 		1362
        Comparisons:		48
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest78.exe __orio_perftest78.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest78.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest78.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest78.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest78.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	61
        Max loop nest depth: 	6
        Additions: 		2139
        Multiplications: 	644
        Divisions: 		0
        Logical: 		0
        Reads: 			3810
        Writes: 		498
        Comparisons:		61
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest79.exe __orio_perftest79.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest79.exe  
Program Test Output: 
{'[3, 1, 0, 5, 2, 0, 1, 1, 19, 12, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.21014}
{'[3, 1, 0, 5, 2, 0, 1, 1, 19, 12, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.209307}
{'[3, 1, 0, 5, 2, 0, 1, 1, 19, 12, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.185399}
{'[3, 1, 0, 5, 2, 0, 1, 1, 19, 12, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.183893}
{'[3, 1, 0, 5, 2, 0, 1, 1, 19, 12, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.184184}
{'[3, 1, 0, 5, 2, 0, 1, 1, 19, 12, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.184907}
{'[3, 1, 0, 5, 2, 0, 1, 1, 19, 12, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.184144}
{'[3, 1, 0, 5, 2, 0, 1, 1, 19, 12, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.183748}
{'[3, 1, 0, 5, 2, 0, 1, 1, 19, 12, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.184633}
{'[3, 1, 0, 5, 2, 0, 1, 1, 19, 12, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.184006}
{'[3, 1, 0, 5, 2, 0, 1, 1, 19, 12, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.18358}
{'[3, 1, 0, 5, 2, 0, 1, 1, 19, 12, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.184127}
{'[3, 1, 0, 5, 2, 0, 1, 1, 19, 12, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.183988}
{'[3, 1, 0, 5, 2, 0, 1, 1, 19, 12, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.184041}
{'[3, 1, 0, 5, 2, 0, 1, 1, 19, 12, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.184784}
{'[3, 1, 0, 5, 2, 0, 1, 1, 19, 12, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.18437}
{'[3, 1, 0, 5, 2, 0, 1, 1, 19, 12, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.184065}
{'[3, 1, 0, 5, 2, 0, 1, 1, 19, 12, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.184143}
{'[3, 1, 0, 5, 2, 0, 1, 1, 19, 12, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.184416}
{'[3, 1, 0, 5, 2, 0, 1, 1, 19, 12, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.183794}
{'[3, 1, 0, 5, 2, 0, 1, 1, 19, 12, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.185459}
{'[3, 1, 0, 5, 2, 0, 1, 1, 19, 12, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.185134}
{'[3, 1, 0, 5, 2, 0, 1, 1, 19, 12, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.184438}
{'[3, 1, 0, 5, 2, 0, 1, 1, 19, 12, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.185262}
{'[3, 1, 0, 5, 2, 0, 1, 1, 19, 12, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.188449}
{'[3, 1, 0, 5, 2, 0, 1, 1, 19, 12, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.188663}
{'[3, 1, 0, 5, 2, 0, 1, 1, 19, 12, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.187181}
{'[3, 1, 0, 5, 2, 0, 1, 1, 19, 12, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.183745}
{'[3, 1, 0, 5, 2, 0, 1, 1, 19, 12, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.184898}
{'[3, 1, 0, 5, 2, 0, 1, 1, 19, 12, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.184164}

out:
 ["{'[3, 1, 0, 5, 2, 0, 1, 1, 19, 12, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.21014}", "{'[3, 1, 0, 5, 2, 0, 1, 1, 19, 12, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.209307}", "{'[3, 1, 0, 5, 2, 0, 1, 1, 19, 12, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.185399}", "{'[3, 1, 0, 5, 2, 0, 1, 1, 19, 12, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.183893}", "{'[3, 1, 0, 5, 2, 0, 1, 1, 19, 12, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.184184}", "{'[3, 1, 0, 5, 2, 0, 1, 1, 19, 12, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.184907}", "{'[3, 1, 0, 5, 2, 0, 1, 1, 19, 12, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.184144}", "{'[3, 1, 0, 5, 2, 0, 1, 1, 19, 12, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.183748}", "{'[3, 1, 0, 5, 2, 0, 1, 1, 19, 12, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.184633}", "{'[3, 1, 0, 5, 2, 0, 1, 1, 19, 12, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.184006}", "{'[3, 1, 0, 5, 2, 0, 1, 1, 19, 12, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.18358}", "{'[3, 1, 0, 5, 2, 0, 1, 1, 19, 12, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.184127}", "{'[3, 1, 0, 5, 2, 0, 1, 1, 19, 12, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.183988}", "{'[3, 1, 0, 5, 2, 0, 1, 1, 19, 12, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.184041}", "{'[3, 1, 0, 5, 2, 0, 1, 1, 19, 12, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.184784}", "{'[3, 1, 0, 5, 2, 0, 1, 1, 19, 12, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.18437}", "{'[3, 1, 0, 5, 2, 0, 1, 1, 19, 12, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.184065}", "{'[3, 1, 0, 5, 2, 0, 1, 1, 19, 12, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.184143}", "{'[3, 1, 0, 5, 2, 0, 1, 1, 19, 12, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.184416}", "{'[3, 1, 0, 5, 2, 0, 1, 1, 19, 12, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.183794}", "{'[3, 1, 0, 5, 2, 0, 1, 1, 19, 12, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.185459}", "{'[3, 1, 0, 5, 2, 0, 1, 1, 19, 12, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.185134}", "{'[3, 1, 0, 5, 2, 0, 1, 1, 19, 12, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.184438}", "{'[3, 1, 0, 5, 2, 0, 1, 1, 19, 12, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.185262}", "{'[3, 1, 0, 5, 2, 0, 1, 1, 19, 12, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.188449}", "{'[3, 1, 0, 5, 2, 0, 1, 1, 19, 12, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.188663}", "{'[3, 1, 0, 5, 2, 0, 1, 1, 19, 12, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.187181}", "{'[3, 1, 0, 5, 2, 0, 1, 1, 19, 12, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.183745}", "{'[3, 1, 0, 5, 2, 0, 1, 1, 19, 12, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.184898}", "{'[3, 1, 0, 5, 2, 0, 1, 1, 19, 12, 0, 4, 2, 0, 0, 0, 1, 0]' : 0.184164}"]
returning from 'run': {'[3, 1, 0, 5, 2, 0, 1, 1, 19, 12, 0, 4, 2, 0, 0, 0, 1, 0]': ([0.21014, 0.209307, 0.185399, 0.183893, 0.184184, 0.184907, 0.184144, 0.183748, 0.184633, 0.184006, 0.18358, 0.184127, 0.183988, 0.184041, 0.184784, 0.18437, 0.184065, 0.184143, 0.184416, 0.183794, 0.185459, 0.185134, 0.184438, 0.185262, 0.188449, 0.188663, 0.187181, 0.183745, 0.184898, 0.184164], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 1, 0, 5, 2, 0, 1, 1, 19, 12, 0, 4, 2, 0, 0, 0, 1, 0]': ([0.21014, 0.209307, 0.185399, 0.183893, 0.184184, 0.184907, 0.184144, 0.183748, 0.184633, 0.184006, 0.18358, 0.184127, 0.183988, 0.184041, 0.184784, 0.18437, 0.184065, 0.184143, 0.184416, 0.183794, 0.185459, 0.185134, 0.184438, 0.185262, 0.188449, 0.188663, 0.187181, 0.183745, 0.184898, 0.184164], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	23
        Max loop nest depth: 	5
        Additions: 		664
        Multiplications: 	198
        Divisions: 		0
        Logical: 		0
        Reads: 			1423
        Writes: 		294
        Comparisons:		23
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest80.exe __orio_perftest80.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest80.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest80.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest80.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest80.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		921
        Multiplications: 	448
        Divisions: 		0
        Logical: 		0
        Reads: 			1910
        Writes: 		330
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest81.exe __orio_perftest81.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest81.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest81.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest81.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest81.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	117
        Max loop nest depth: 	5
        Additions: 		2047
        Multiplications: 	364
        Divisions: 		0
        Logical: 		0
        Reads: 			3375
        Writes: 		502
        Comparisons:		117
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest82.exe __orio_perftest82.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest82.exe  
Program Test Output: 
{'[1, 1, 0, 0, 5, 2, 0, 1, 6, 24, 0, 4, 0, 0, 0, 0, 0, 0]' : 0.411162}
{'[1, 1, 0, 0, 5, 2, 0, 1, 6, 24, 0, 4, 0, 0, 0, 0, 0, 0]' : 0.411504}
{'[1, 1, 0, 0, 5, 2, 0, 1, 6, 24, 0, 4, 0, 0, 0, 0, 0, 0]' : 0.411322}
{'[1, 1, 0, 0, 5, 2, 0, 1, 6, 24, 0, 4, 0, 0, 0, 0, 0, 0]' : 0.411551}
{'[1, 1, 0, 0, 5, 2, 0, 1, 6, 24, 0, 4, 0, 0, 0, 0, 0, 0]' : 0.411237}
{'[1, 1, 0, 0, 5, 2, 0, 1, 6, 24, 0, 4, 0, 0, 0, 0, 0, 0]' : 0.410953}
{'[1, 1, 0, 0, 5, 2, 0, 1, 6, 24, 0, 4, 0, 0, 0, 0, 0, 0]' : 0.411468}
{'[1, 1, 0, 0, 5, 2, 0, 1, 6, 24, 0, 4, 0, 0, 0, 0, 0, 0]' : 0.411737}
{'[1, 1, 0, 0, 5, 2, 0, 1, 6, 24, 0, 4, 0, 0, 0, 0, 0, 0]' : 0.411088}
{'[1, 1, 0, 0, 5, 2, 0, 1, 6, 24, 0, 4, 0, 0, 0, 0, 0, 0]' : 0.411831}
{'[1, 1, 0, 0, 5, 2, 0, 1, 6, 24, 0, 4, 0, 0, 0, 0, 0, 0]' : 0.412212}
{'[1, 1, 0, 0, 5, 2, 0, 1, 6, 24, 0, 4, 0, 0, 0, 0, 0, 0]' : 0.41125}
{'[1, 1, 0, 0, 5, 2, 0, 1, 6, 24, 0, 4, 0, 0, 0, 0, 0, 0]' : 0.411506}
{'[1, 1, 0, 0, 5, 2, 0, 1, 6, 24, 0, 4, 0, 0, 0, 0, 0, 0]' : 0.411173}
{'[1, 1, 0, 0, 5, 2, 0, 1, 6, 24, 0, 4, 0, 0, 0, 0, 0, 0]' : 0.411452}
{'[1, 1, 0, 0, 5, 2, 0, 1, 6, 24, 0, 4, 0, 0, 0, 0, 0, 0]' : 0.410855}
{'[1, 1, 0, 0, 5, 2, 0, 1, 6, 24, 0, 4, 0, 0, 0, 0, 0, 0]' : 0.411064}
{'[1, 1, 0, 0, 5, 2, 0, 1, 6, 24, 0, 4, 0, 0, 0, 0, 0, 0]' : 0.41144}
{'[1, 1, 0, 0, 5, 2, 0, 1, 6, 24, 0, 4, 0, 0, 0, 0, 0, 0]' : 0.411101}
{'[1, 1, 0, 0, 5, 2, 0, 1, 6, 24, 0, 4, 0, 0, 0, 0, 0, 0]' : 0.411164}
{'[1, 1, 0, 0, 5, 2, 0, 1, 6, 24, 0, 4, 0, 0, 0, 0, 0, 0]' : 0.411152}
{'[1, 1, 0, 0, 5, 2, 0, 1, 6, 24, 0, 4, 0, 0, 0, 0, 0, 0]' : 0.411137}
{'[1, 1, 0, 0, 5, 2, 0, 1, 6, 24, 0, 4, 0, 0, 0, 0, 0, 0]' : 0.4114}
{'[1, 1, 0, 0, 5, 2, 0, 1, 6, 24, 0, 4, 0, 0, 0, 0, 0, 0]' : 0.411252}
{'[1, 1, 0, 0, 5, 2, 0, 1, 6, 24, 0, 4, 0, 0, 0, 0, 0, 0]' : 0.411434}
{'[1, 1, 0, 0, 5, 2, 0, 1, 6, 24, 0, 4, 0, 0, 0, 0, 0, 0]' : 0.411262}
{'[1, 1, 0, 0, 5, 2, 0, 1, 6, 24, 0, 4, 0, 0, 0, 0, 0, 0]' : 0.411333}
{'[1, 1, 0, 0, 5, 2, 0, 1, 6, 24, 0, 4, 0, 0, 0, 0, 0, 0]' : 0.411695}
{'[1, 1, 0, 0, 5, 2, 0, 1, 6, 24, 0, 4, 0, 0, 0, 0, 0, 0]' : 0.411597}
{'[1, 1, 0, 0, 5, 2, 0, 1, 6, 24, 0, 4, 0, 0, 0, 0, 0, 0]' : 0.411029}

out:
 ["{'[1, 1, 0, 0, 5, 2, 0, 1, 6, 24, 0, 4, 0, 0, 0, 0, 0, 0]' : 0.411162}", "{'[1, 1, 0, 0, 5, 2, 0, 1, 6, 24, 0, 4, 0, 0, 0, 0, 0, 0]' : 0.411504}", "{'[1, 1, 0, 0, 5, 2, 0, 1, 6, 24, 0, 4, 0, 0, 0, 0, 0, 0]' : 0.411322}", "{'[1, 1, 0, 0, 5, 2, 0, 1, 6, 24, 0, 4, 0, 0, 0, 0, 0, 0]' : 0.411551}", "{'[1, 1, 0, 0, 5, 2, 0, 1, 6, 24, 0, 4, 0, 0, 0, 0, 0, 0]' : 0.411237}", "{'[1, 1, 0, 0, 5, 2, 0, 1, 6, 24, 0, 4, 0, 0, 0, 0, 0, 0]' : 0.410953}", "{'[1, 1, 0, 0, 5, 2, 0, 1, 6, 24, 0, 4, 0, 0, 0, 0, 0, 0]' : 0.411468}", "{'[1, 1, 0, 0, 5, 2, 0, 1, 6, 24, 0, 4, 0, 0, 0, 0, 0, 0]' : 0.411737}", "{'[1, 1, 0, 0, 5, 2, 0, 1, 6, 24, 0, 4, 0, 0, 0, 0, 0, 0]' : 0.411088}", "{'[1, 1, 0, 0, 5, 2, 0, 1, 6, 24, 0, 4, 0, 0, 0, 0, 0, 0]' : 0.411831}", "{'[1, 1, 0, 0, 5, 2, 0, 1, 6, 24, 0, 4, 0, 0, 0, 0, 0, 0]' : 0.412212}", "{'[1, 1, 0, 0, 5, 2, 0, 1, 6, 24, 0, 4, 0, 0, 0, 0, 0, 0]' : 0.41125}", "{'[1, 1, 0, 0, 5, 2, 0, 1, 6, 24, 0, 4, 0, 0, 0, 0, 0, 0]' : 0.411506}", "{'[1, 1, 0, 0, 5, 2, 0, 1, 6, 24, 0, 4, 0, 0, 0, 0, 0, 0]' : 0.411173}", "{'[1, 1, 0, 0, 5, 2, 0, 1, 6, 24, 0, 4, 0, 0, 0, 0, 0, 0]' : 0.411452}", "{'[1, 1, 0, 0, 5, 2, 0, 1, 6, 24, 0, 4, 0, 0, 0, 0, 0, 0]' : 0.410855}", "{'[1, 1, 0, 0, 5, 2, 0, 1, 6, 24, 0, 4, 0, 0, 0, 0, 0, 0]' : 0.411064}", "{'[1, 1, 0, 0, 5, 2, 0, 1, 6, 24, 0, 4, 0, 0, 0, 0, 0, 0]' : 0.41144}", "{'[1, 1, 0, 0, 5, 2, 0, 1, 6, 24, 0, 4, 0, 0, 0, 0, 0, 0]' : 0.411101}", "{'[1, 1, 0, 0, 5, 2, 0, 1, 6, 24, 0, 4, 0, 0, 0, 0, 0, 0]' : 0.411164}", "{'[1, 1, 0, 0, 5, 2, 0, 1, 6, 24, 0, 4, 0, 0, 0, 0, 0, 0]' : 0.411152}", "{'[1, 1, 0, 0, 5, 2, 0, 1, 6, 24, 0, 4, 0, 0, 0, 0, 0, 0]' : 0.411137}", "{'[1, 1, 0, 0, 5, 2, 0, 1, 6, 24, 0, 4, 0, 0, 0, 0, 0, 0]' : 0.4114}", "{'[1, 1, 0, 0, 5, 2, 0, 1, 6, 24, 0, 4, 0, 0, 0, 0, 0, 0]' : 0.411252}", "{'[1, 1, 0, 0, 5, 2, 0, 1, 6, 24, 0, 4, 0, 0, 0, 0, 0, 0]' : 0.411434}", "{'[1, 1, 0, 0, 5, 2, 0, 1, 6, 24, 0, 4, 0, 0, 0, 0, 0, 0]' : 0.411262}", "{'[1, 1, 0, 0, 5, 2, 0, 1, 6, 24, 0, 4, 0, 0, 0, 0, 0, 0]' : 0.411333}", "{'[1, 1, 0, 0, 5, 2, 0, 1, 6, 24, 0, 4, 0, 0, 0, 0, 0, 0]' : 0.411695}", "{'[1, 1, 0, 0, 5, 2, 0, 1, 6, 24, 0, 4, 0, 0, 0, 0, 0, 0]' : 0.411597}", "{'[1, 1, 0, 0, 5, 2, 0, 1, 6, 24, 0, 4, 0, 0, 0, 0, 0, 0]' : 0.411029}"]
returning from 'run': {'[1, 1, 0, 0, 5, 2, 0, 1, 6, 24, 0, 4, 0, 0, 0, 0, 0, 0]': ([0.411162, 0.411504, 0.411322, 0.411551, 0.411237, 0.410953, 0.411468, 0.411737, 0.411088, 0.411831, 0.412212, 0.41125, 0.411506, 0.411173, 0.411452, 0.410855, 0.411064, 0.41144, 0.411101, 0.411164, 0.411152, 0.411137, 0.4114, 0.411252, 0.411434, 0.411262, 0.411333, 0.411695, 0.411597, 0.411029], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 1, 0, 0, 5, 2, 0, 1, 6, 24, 0, 4, 0, 0, 0, 0, 0, 0]': ([0.411162, 0.411504, 0.411322, 0.411551, 0.411237, 0.410953, 0.411468, 0.411737, 0.411088, 0.411831, 0.412212, 0.41125, 0.411506, 0.411173, 0.411452, 0.410855, 0.411064, 0.41144, 0.411101, 0.411164, 0.411152, 0.411137, 0.4114, 0.411252, 0.411434, 0.411262, 0.411333, 0.411695, 0.411597, 0.411029], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		215
        Multiplications: 	78
        Divisions: 		0
        Logical: 		0
        Reads: 			516
        Writes: 		77
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest83.exe __orio_perftest83.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest83.exe  
Program Test Output: 
{'[0, 0, 6, 3, 1, 4, 0, 1, 4, 0, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.228261}
{'[0, 0, 6, 3, 1, 4, 0, 1, 4, 0, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.203486}
{'[0, 0, 6, 3, 1, 4, 0, 1, 4, 0, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.203244}
{'[0, 0, 6, 3, 1, 4, 0, 1, 4, 0, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.203234}
{'[0, 0, 6, 3, 1, 4, 0, 1, 4, 0, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.207106}
{'[0, 0, 6, 3, 1, 4, 0, 1, 4, 0, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.203212}
{'[0, 0, 6, 3, 1, 4, 0, 1, 4, 0, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.203171}
{'[0, 0, 6, 3, 1, 4, 0, 1, 4, 0, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.200918}
{'[0, 0, 6, 3, 1, 4, 0, 1, 4, 0, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.19654}
{'[0, 0, 6, 3, 1, 4, 0, 1, 4, 0, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.199682}
{'[0, 0, 6, 3, 1, 4, 0, 1, 4, 0, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.203205}
{'[0, 0, 6, 3, 1, 4, 0, 1, 4, 0, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.204061}
{'[0, 0, 6, 3, 1, 4, 0, 1, 4, 0, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.200854}
{'[0, 0, 6, 3, 1, 4, 0, 1, 4, 0, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.196563}
{'[0, 0, 6, 3, 1, 4, 0, 1, 4, 0, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.199676}
{'[0, 0, 6, 3, 1, 4, 0, 1, 4, 0, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.203268}
{'[0, 0, 6, 3, 1, 4, 0, 1, 4, 0, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.258029}
{'[0, 0, 6, 3, 1, 4, 0, 1, 4, 0, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.206984}
{'[0, 0, 6, 3, 1, 4, 0, 1, 4, 0, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.196697}
{'[0, 0, 6, 3, 1, 4, 0, 1, 4, 0, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.197508}
{'[0, 0, 6, 3, 1, 4, 0, 1, 4, 0, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.196722}
{'[0, 0, 6, 3, 1, 4, 0, 1, 4, 0, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.196846}
{'[0, 0, 6, 3, 1, 4, 0, 1, 4, 0, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.196783}
{'[0, 0, 6, 3, 1, 4, 0, 1, 4, 0, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.196747}
{'[0, 0, 6, 3, 1, 4, 0, 1, 4, 0, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.196849}
{'[0, 0, 6, 3, 1, 4, 0, 1, 4, 0, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.196722}
{'[0, 0, 6, 3, 1, 4, 0, 1, 4, 0, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.198182}
{'[0, 0, 6, 3, 1, 4, 0, 1, 4, 0, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.203484}
{'[0, 0, 6, 3, 1, 4, 0, 1, 4, 0, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.203512}
{'[0, 0, 6, 3, 1, 4, 0, 1, 4, 0, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.201625}

out:
 ["{'[0, 0, 6, 3, 1, 4, 0, 1, 4, 0, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.228261}", "{'[0, 0, 6, 3, 1, 4, 0, 1, 4, 0, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.203486}", "{'[0, 0, 6, 3, 1, 4, 0, 1, 4, 0, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.203244}", "{'[0, 0, 6, 3, 1, 4, 0, 1, 4, 0, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.203234}", "{'[0, 0, 6, 3, 1, 4, 0, 1, 4, 0, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.207106}", "{'[0, 0, 6, 3, 1, 4, 0, 1, 4, 0, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.203212}", "{'[0, 0, 6, 3, 1, 4, 0, 1, 4, 0, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.203171}", "{'[0, 0, 6, 3, 1, 4, 0, 1, 4, 0, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.200918}", "{'[0, 0, 6, 3, 1, 4, 0, 1, 4, 0, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.19654}", "{'[0, 0, 6, 3, 1, 4, 0, 1, 4, 0, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.199682}", "{'[0, 0, 6, 3, 1, 4, 0, 1, 4, 0, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.203205}", "{'[0, 0, 6, 3, 1, 4, 0, 1, 4, 0, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.204061}", "{'[0, 0, 6, 3, 1, 4, 0, 1, 4, 0, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.200854}", "{'[0, 0, 6, 3, 1, 4, 0, 1, 4, 0, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.196563}", "{'[0, 0, 6, 3, 1, 4, 0, 1, 4, 0, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.199676}", "{'[0, 0, 6, 3, 1, 4, 0, 1, 4, 0, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.203268}", "{'[0, 0, 6, 3, 1, 4, 0, 1, 4, 0, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.258029}", "{'[0, 0, 6, 3, 1, 4, 0, 1, 4, 0, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.206984}", "{'[0, 0, 6, 3, 1, 4, 0, 1, 4, 0, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.196697}", "{'[0, 0, 6, 3, 1, 4, 0, 1, 4, 0, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.197508}", "{'[0, 0, 6, 3, 1, 4, 0, 1, 4, 0, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.196722}", "{'[0, 0, 6, 3, 1, 4, 0, 1, 4, 0, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.196846}", "{'[0, 0, 6, 3, 1, 4, 0, 1, 4, 0, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.196783}", "{'[0, 0, 6, 3, 1, 4, 0, 1, 4, 0, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.196747}", "{'[0, 0, 6, 3, 1, 4, 0, 1, 4, 0, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.196849}", "{'[0, 0, 6, 3, 1, 4, 0, 1, 4, 0, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.196722}", "{'[0, 0, 6, 3, 1, 4, 0, 1, 4, 0, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.198182}", "{'[0, 0, 6, 3, 1, 4, 0, 1, 4, 0, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.203484}", "{'[0, 0, 6, 3, 1, 4, 0, 1, 4, 0, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.203512}", "{'[0, 0, 6, 3, 1, 4, 0, 1, 4, 0, 0, 4, 0, 2, 0, 0, 0, 1]' : 0.201625}"]
returning from 'run': {'[0, 0, 6, 3, 1, 4, 0, 1, 4, 0, 0, 4, 0, 2, 0, 0, 0, 1]': ([0.228261, 0.203486, 0.203244, 0.203234, 0.207106, 0.203212, 0.203171, 0.200918, 0.19654, 0.199682, 0.203205, 0.204061, 0.200854, 0.196563, 0.199676, 0.203268, 0.258029, 0.206984, 0.196697, 0.197508, 0.196722, 0.196846, 0.196783, 0.196747, 0.196849, 0.196722, 0.198182, 0.203484, 0.203512, 0.201625], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 6, 3, 1, 4, 0, 1, 4, 0, 0, 4, 0, 2, 0, 0, 0, 1]': ([0.228261, 0.203486, 0.203244, 0.203234, 0.207106, 0.203212, 0.203171, 0.200918, 0.19654, 0.199682, 0.203205, 0.204061, 0.200854, 0.196563, 0.199676, 0.203268, 0.258029, 0.206984, 0.196697, 0.197508, 0.196722, 0.196846, 0.196783, 0.196747, 0.196849, 0.196722, 0.198182, 0.203484, 0.203512, 0.201625], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	34
        Max loop nest depth: 	5
        Additions: 		2678
        Multiplications: 	780
        Divisions: 		0
        Logical: 		0
        Reads: 			4192
        Writes: 		469
        Comparisons:		34
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest84.exe __orio_perftest84.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest84.exe  
Program Test Output: 
{'[5, 1, 4, 0, 1, 0, 0, 0, 0, 8, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.15614}
{'[5, 1, 4, 0, 1, 0, 0, 0, 0, 8, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.156175}
{'[5, 1, 4, 0, 1, 0, 0, 0, 0, 8, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.156151}
{'[5, 1, 4, 0, 1, 0, 0, 0, 0, 8, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.13801}
{'[5, 1, 4, 0, 1, 0, 0, 0, 0, 8, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.132224}
{'[5, 1, 4, 0, 1, 0, 0, 0, 0, 8, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.132388}
{'[5, 1, 4, 0, 1, 0, 0, 0, 0, 8, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.13227}
{'[5, 1, 4, 0, 1, 0, 0, 0, 0, 8, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.132435}
{'[5, 1, 4, 0, 1, 0, 0, 0, 0, 8, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.132133}
{'[5, 1, 4, 0, 1, 0, 0, 0, 0, 8, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.132074}
{'[5, 1, 4, 0, 1, 0, 0, 0, 0, 8, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.132039}
{'[5, 1, 4, 0, 1, 0, 0, 0, 0, 8, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.132388}
{'[5, 1, 4, 0, 1, 0, 0, 0, 0, 8, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.132383}
{'[5, 1, 4, 0, 1, 0, 0, 0, 0, 8, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.13229}
{'[5, 1, 4, 0, 1, 0, 0, 0, 0, 8, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.132166}
{'[5, 1, 4, 0, 1, 0, 0, 0, 0, 8, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.135552}
{'[5, 1, 4, 0, 1, 0, 0, 0, 0, 8, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.136121}
{'[5, 1, 4, 0, 1, 0, 0, 0, 0, 8, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.136195}
{'[5, 1, 4, 0, 1, 0, 0, 0, 0, 8, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.136191}
{'[5, 1, 4, 0, 1, 0, 0, 0, 0, 8, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.13624}
{'[5, 1, 4, 0, 1, 0, 0, 0, 0, 8, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.136373}
{'[5, 1, 4, 0, 1, 0, 0, 0, 0, 8, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.136308}
{'[5, 1, 4, 0, 1, 0, 0, 0, 0, 8, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.136317}
{'[5, 1, 4, 0, 1, 0, 0, 0, 0, 8, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.136176}
{'[5, 1, 4, 0, 1, 0, 0, 0, 0, 8, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.136185}
{'[5, 1, 4, 0, 1, 0, 0, 0, 0, 8, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.136165}
{'[5, 1, 4, 0, 1, 0, 0, 0, 0, 8, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.136407}
{'[5, 1, 4, 0, 1, 0, 0, 0, 0, 8, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.136139}
{'[5, 1, 4, 0, 1, 0, 0, 0, 0, 8, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.136275}
{'[5, 1, 4, 0, 1, 0, 0, 0, 0, 8, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.136365}

out:
 ["{'[5, 1, 4, 0, 1, 0, 0, 0, 0, 8, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.15614}", "{'[5, 1, 4, 0, 1, 0, 0, 0, 0, 8, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.156175}", "{'[5, 1, 4, 0, 1, 0, 0, 0, 0, 8, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.156151}", "{'[5, 1, 4, 0, 1, 0, 0, 0, 0, 8, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.13801}", "{'[5, 1, 4, 0, 1, 0, 0, 0, 0, 8, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.132224}", "{'[5, 1, 4, 0, 1, 0, 0, 0, 0, 8, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.132388}", "{'[5, 1, 4, 0, 1, 0, 0, 0, 0, 8, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.13227}", "{'[5, 1, 4, 0, 1, 0, 0, 0, 0, 8, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.132435}", "{'[5, 1, 4, 0, 1, 0, 0, 0, 0, 8, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.132133}", "{'[5, 1, 4, 0, 1, 0, 0, 0, 0, 8, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.132074}", "{'[5, 1, 4, 0, 1, 0, 0, 0, 0, 8, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.132039}", "{'[5, 1, 4, 0, 1, 0, 0, 0, 0, 8, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.132388}", "{'[5, 1, 4, 0, 1, 0, 0, 0, 0, 8, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.132383}", "{'[5, 1, 4, 0, 1, 0, 0, 0, 0, 8, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.13229}", "{'[5, 1, 4, 0, 1, 0, 0, 0, 0, 8, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.132166}", "{'[5, 1, 4, 0, 1, 0, 0, 0, 0, 8, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.135552}", "{'[5, 1, 4, 0, 1, 0, 0, 0, 0, 8, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.136121}", "{'[5, 1, 4, 0, 1, 0, 0, 0, 0, 8, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.136195}", "{'[5, 1, 4, 0, 1, 0, 0, 0, 0, 8, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.136191}", "{'[5, 1, 4, 0, 1, 0, 0, 0, 0, 8, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.13624}", "{'[5, 1, 4, 0, 1, 0, 0, 0, 0, 8, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.136373}", "{'[5, 1, 4, 0, 1, 0, 0, 0, 0, 8, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.136308}", "{'[5, 1, 4, 0, 1, 0, 0, 0, 0, 8, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.136317}", "{'[5, 1, 4, 0, 1, 0, 0, 0, 0, 8, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.136176}", "{'[5, 1, 4, 0, 1, 0, 0, 0, 0, 8, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.136185}", "{'[5, 1, 4, 0, 1, 0, 0, 0, 0, 8, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.136165}", "{'[5, 1, 4, 0, 1, 0, 0, 0, 0, 8, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.136407}", "{'[5, 1, 4, 0, 1, 0, 0, 0, 0, 8, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.136139}", "{'[5, 1, 4, 0, 1, 0, 0, 0, 0, 8, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.136275}", "{'[5, 1, 4, 0, 1, 0, 0, 0, 0, 8, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.136365}"]
returning from 'run': {'[5, 1, 4, 0, 1, 0, 0, 0, 0, 8, 0, 4, 0, 0, 2, 0, 0, 0]': ([0.15614, 0.156175, 0.156151, 0.13801, 0.132224, 0.132388, 0.13227, 0.132435, 0.132133, 0.132074, 0.132039, 0.132388, 0.132383, 0.13229, 0.132166, 0.135552, 0.136121, 0.136195, 0.136191, 0.13624, 0.136373, 0.136308, 0.136317, 0.136176, 0.136185, 0.136165, 0.136407, 0.136139, 0.136275, 0.136365], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 1, 4, 0, 1, 0, 0, 0, 0, 8, 0, 4, 0, 0, 2, 0, 0, 0]': ([0.15614, 0.156175, 0.156151, 0.13801, 0.132224, 0.132388, 0.13227, 0.132435, 0.132133, 0.132074, 0.132039, 0.132388, 0.132383, 0.13229, 0.132166, 0.135552, 0.136121, 0.136195, 0.136191, 0.13624, 0.136373, 0.136308, 0.136317, 0.136176, 0.136185, 0.136165, 0.136407, 0.136139, 0.136275, 0.136365], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	133
        Max loop nest depth: 	6
        Additions: 		1827
        Multiplications: 	336
        Divisions: 		0
        Logical: 		0
        Reads: 			3883
        Writes: 		868
        Comparisons:		133
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest85.exe __orio_perftest85.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest85.exe  
Program Test Output: 
{'[2, 5, 6, 2, 0, 6, 1, 1, 0, 22, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.189469}
{'[2, 5, 6, 2, 0, 6, 1, 1, 0, 22, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.1901}
{'[2, 5, 6, 2, 0, 6, 1, 1, 0, 22, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.189622}
{'[2, 5, 6, 2, 0, 6, 1, 1, 0, 22, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.189586}
{'[2, 5, 6, 2, 0, 6, 1, 1, 0, 22, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.189674}
{'[2, 5, 6, 2, 0, 6, 1, 1, 0, 22, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.189671}
{'[2, 5, 6, 2, 0, 6, 1, 1, 0, 22, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.189415}
{'[2, 5, 6, 2, 0, 6, 1, 1, 0, 22, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.190292}
{'[2, 5, 6, 2, 0, 6, 1, 1, 0, 22, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.189542}
{'[2, 5, 6, 2, 0, 6, 1, 1, 0, 22, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.189601}
{'[2, 5, 6, 2, 0, 6, 1, 1, 0, 22, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.189426}
{'[2, 5, 6, 2, 0, 6, 1, 1, 0, 22, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.189686}
{'[2, 5, 6, 2, 0, 6, 1, 1, 0, 22, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.189717}
{'[2, 5, 6, 2, 0, 6, 1, 1, 0, 22, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.189734}
{'[2, 5, 6, 2, 0, 6, 1, 1, 0, 22, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.189585}
{'[2, 5, 6, 2, 0, 6, 1, 1, 0, 22, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.189496}
{'[2, 5, 6, 2, 0, 6, 1, 1, 0, 22, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.189506}
{'[2, 5, 6, 2, 0, 6, 1, 1, 0, 22, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.189513}
{'[2, 5, 6, 2, 0, 6, 1, 1, 0, 22, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.190123}
{'[2, 5, 6, 2, 0, 6, 1, 1, 0, 22, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.189876}
{'[2, 5, 6, 2, 0, 6, 1, 1, 0, 22, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.189391}
{'[2, 5, 6, 2, 0, 6, 1, 1, 0, 22, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.189433}
{'[2, 5, 6, 2, 0, 6, 1, 1, 0, 22, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.189496}
{'[2, 5, 6, 2, 0, 6, 1, 1, 0, 22, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.189484}
{'[2, 5, 6, 2, 0, 6, 1, 1, 0, 22, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.189844}
{'[2, 5, 6, 2, 0, 6, 1, 1, 0, 22, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.189659}
{'[2, 5, 6, 2, 0, 6, 1, 1, 0, 22, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.189685}
{'[2, 5, 6, 2, 0, 6, 1, 1, 0, 22, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.189509}
{'[2, 5, 6, 2, 0, 6, 1, 1, 0, 22, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.189587}
{'[2, 5, 6, 2, 0, 6, 1, 1, 0, 22, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.189655}

out:
 ["{'[2, 5, 6, 2, 0, 6, 1, 1, 0, 22, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.189469}", "{'[2, 5, 6, 2, 0, 6, 1, 1, 0, 22, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.1901}", "{'[2, 5, 6, 2, 0, 6, 1, 1, 0, 22, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.189622}", "{'[2, 5, 6, 2, 0, 6, 1, 1, 0, 22, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.189586}", "{'[2, 5, 6, 2, 0, 6, 1, 1, 0, 22, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.189674}", "{'[2, 5, 6, 2, 0, 6, 1, 1, 0, 22, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.189671}", "{'[2, 5, 6, 2, 0, 6, 1, 1, 0, 22, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.189415}", "{'[2, 5, 6, 2, 0, 6, 1, 1, 0, 22, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.190292}", "{'[2, 5, 6, 2, 0, 6, 1, 1, 0, 22, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.189542}", "{'[2, 5, 6, 2, 0, 6, 1, 1, 0, 22, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.189601}", "{'[2, 5, 6, 2, 0, 6, 1, 1, 0, 22, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.189426}", "{'[2, 5, 6, 2, 0, 6, 1, 1, 0, 22, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.189686}", "{'[2, 5, 6, 2, 0, 6, 1, 1, 0, 22, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.189717}", "{'[2, 5, 6, 2, 0, 6, 1, 1, 0, 22, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.189734}", "{'[2, 5, 6, 2, 0, 6, 1, 1, 0, 22, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.189585}", "{'[2, 5, 6, 2, 0, 6, 1, 1, 0, 22, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.189496}", "{'[2, 5, 6, 2, 0, 6, 1, 1, 0, 22, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.189506}", "{'[2, 5, 6, 2, 0, 6, 1, 1, 0, 22, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.189513}", "{'[2, 5, 6, 2, 0, 6, 1, 1, 0, 22, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.190123}", "{'[2, 5, 6, 2, 0, 6, 1, 1, 0, 22, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.189876}", "{'[2, 5, 6, 2, 0, 6, 1, 1, 0, 22, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.189391}", "{'[2, 5, 6, 2, 0, 6, 1, 1, 0, 22, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.189433}", "{'[2, 5, 6, 2, 0, 6, 1, 1, 0, 22, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.189496}", "{'[2, 5, 6, 2, 0, 6, 1, 1, 0, 22, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.189484}", "{'[2, 5, 6, 2, 0, 6, 1, 1, 0, 22, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.189844}", "{'[2, 5, 6, 2, 0, 6, 1, 1, 0, 22, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.189659}", "{'[2, 5, 6, 2, 0, 6, 1, 1, 0, 22, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.189685}", "{'[2, 5, 6, 2, 0, 6, 1, 1, 0, 22, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.189509}", "{'[2, 5, 6, 2, 0, 6, 1, 1, 0, 22, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.189587}", "{'[2, 5, 6, 2, 0, 6, 1, 1, 0, 22, 0, 4, 0, 0, 0, 1, 0, 0]' : 0.189655}"]
returning from 'run': {'[2, 5, 6, 2, 0, 6, 1, 1, 0, 22, 0, 4, 0, 0, 0, 1, 0, 0]': ([0.189469, 0.1901, 0.189622, 0.189586, 0.189674, 0.189671, 0.189415, 0.190292, 0.189542, 0.189601, 0.189426, 0.189686, 0.189717, 0.189734, 0.189585, 0.189496, 0.189506, 0.189513, 0.190123, 0.189876, 0.189391, 0.189433, 0.189496, 0.189484, 0.189844, 0.189659, 0.189685, 0.189509, 0.189587, 0.189655], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 5, 6, 2, 0, 6, 1, 1, 0, 22, 0, 4, 0, 0, 0, 1, 0, 0]': ([0.189469, 0.1901, 0.189622, 0.189586, 0.189674, 0.189671, 0.189415, 0.190292, 0.189542, 0.189601, 0.189426, 0.189686, 0.189717, 0.189734, 0.189585, 0.189496, 0.189506, 0.189513, 0.190123, 0.189876, 0.189391, 0.189433, 0.189496, 0.189484, 0.189844, 0.189659, 0.189685, 0.189509, 0.189587, 0.189655], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	96
        Max loop nest depth: 	6
        Additions: 		1581
        Multiplications: 	576
        Divisions: 		0
        Logical: 		0
        Reads: 			3486
        Writes: 		702
        Comparisons:		96
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest86.exe __orio_perftest86.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest86.exe  
Program Test Output: 
{'[6, 0, 6, 5, 6, 6, 1, 1, 0, 22, 0, 4, 1, 0, 1, 1, 1, 1]' : 0.10632}
{'[6, 0, 6, 5, 6, 6, 1, 1, 0, 22, 0, 4, 1, 0, 1, 1, 1, 1]' : 0.10613}
{'[6, 0, 6, 5, 6, 6, 1, 1, 0, 22, 0, 4, 1, 0, 1, 1, 1, 1]' : 0.105943}
{'[6, 0, 6, 5, 6, 6, 1, 1, 0, 22, 0, 4, 1, 0, 1, 1, 1, 1]' : 0.106172}
{'[6, 0, 6, 5, 6, 6, 1, 1, 0, 22, 0, 4, 1, 0, 1, 1, 1, 1]' : 0.106075}
{'[6, 0, 6, 5, 6, 6, 1, 1, 0, 22, 0, 4, 1, 0, 1, 1, 1, 1]' : 0.106076}
{'[6, 0, 6, 5, 6, 6, 1, 1, 0, 22, 0, 4, 1, 0, 1, 1, 1, 1]' : 0.106242}
{'[6, 0, 6, 5, 6, 6, 1, 1, 0, 22, 0, 4, 1, 0, 1, 1, 1, 1]' : 0.105999}
{'[6, 0, 6, 5, 6, 6, 1, 1, 0, 22, 0, 4, 1, 0, 1, 1, 1, 1]' : 0.106009}
{'[6, 0, 6, 5, 6, 6, 1, 1, 0, 22, 0, 4, 1, 0, 1, 1, 1, 1]' : 0.106194}
{'[6, 0, 6, 5, 6, 6, 1, 1, 0, 22, 0, 4, 1, 0, 1, 1, 1, 1]' : 0.106157}
{'[6, 0, 6, 5, 6, 6, 1, 1, 0, 22, 0, 4, 1, 0, 1, 1, 1, 1]' : 0.105999}
{'[6, 0, 6, 5, 6, 6, 1, 1, 0, 22, 0, 4, 1, 0, 1, 1, 1, 1]' : 0.105963}
{'[6, 0, 6, 5, 6, 6, 1, 1, 0, 22, 0, 4, 1, 0, 1, 1, 1, 1]' : 0.106057}
{'[6, 0, 6, 5, 6, 6, 1, 1, 0, 22, 0, 4, 1, 0, 1, 1, 1, 1]' : 0.105982}
{'[6, 0, 6, 5, 6, 6, 1, 1, 0, 22, 0, 4, 1, 0, 1, 1, 1, 1]' : 0.10602}
{'[6, 0, 6, 5, 6, 6, 1, 1, 0, 22, 0, 4, 1, 0, 1, 1, 1, 1]' : 0.105902}
{'[6, 0, 6, 5, 6, 6, 1, 1, 0, 22, 0, 4, 1, 0, 1, 1, 1, 1]' : 0.106004}
{'[6, 0, 6, 5, 6, 6, 1, 1, 0, 22, 0, 4, 1, 0, 1, 1, 1, 1]' : 0.106006}
{'[6, 0, 6, 5, 6, 6, 1, 1, 0, 22, 0, 4, 1, 0, 1, 1, 1, 1]' : 0.106125}
{'[6, 0, 6, 5, 6, 6, 1, 1, 0, 22, 0, 4, 1, 0, 1, 1, 1, 1]' : 0.106342}
{'[6, 0, 6, 5, 6, 6, 1, 1, 0, 22, 0, 4, 1, 0, 1, 1, 1, 1]' : 0.106436}
{'[6, 0, 6, 5, 6, 6, 1, 1, 0, 22, 0, 4, 1, 0, 1, 1, 1, 1]' : 0.106139}
{'[6, 0, 6, 5, 6, 6, 1, 1, 0, 22, 0, 4, 1, 0, 1, 1, 1, 1]' : 0.105996}
{'[6, 0, 6, 5, 6, 6, 1, 1, 0, 22, 0, 4, 1, 0, 1, 1, 1, 1]' : 0.105908}
{'[6, 0, 6, 5, 6, 6, 1, 1, 0, 22, 0, 4, 1, 0, 1, 1, 1, 1]' : 0.106015}
{'[6, 0, 6, 5, 6, 6, 1, 1, 0, 22, 0, 4, 1, 0, 1, 1, 1, 1]' : 0.10594}
{'[6, 0, 6, 5, 6, 6, 1, 1, 0, 22, 0, 4, 1, 0, 1, 1, 1, 1]' : 0.106086}
{'[6, 0, 6, 5, 6, 6, 1, 1, 0, 22, 0, 4, 1, 0, 1, 1, 1, 1]' : 0.105874}
{'[6, 0, 6, 5, 6, 6, 1, 1, 0, 22, 0, 4, 1, 0, 1, 1, 1, 1]' : 0.106169}

out:
 ["{'[6, 0, 6, 5, 6, 6, 1, 1, 0, 22, 0, 4, 1, 0, 1, 1, 1, 1]' : 0.10632}", "{'[6, 0, 6, 5, 6, 6, 1, 1, 0, 22, 0, 4, 1, 0, 1, 1, 1, 1]' : 0.10613}", "{'[6, 0, 6, 5, 6, 6, 1, 1, 0, 22, 0, 4, 1, 0, 1, 1, 1, 1]' : 0.105943}", "{'[6, 0, 6, 5, 6, 6, 1, 1, 0, 22, 0, 4, 1, 0, 1, 1, 1, 1]' : 0.106172}", "{'[6, 0, 6, 5, 6, 6, 1, 1, 0, 22, 0, 4, 1, 0, 1, 1, 1, 1]' : 0.106075}", "{'[6, 0, 6, 5, 6, 6, 1, 1, 0, 22, 0, 4, 1, 0, 1, 1, 1, 1]' : 0.106076}", "{'[6, 0, 6, 5, 6, 6, 1, 1, 0, 22, 0, 4, 1, 0, 1, 1, 1, 1]' : 0.106242}", "{'[6, 0, 6, 5, 6, 6, 1, 1, 0, 22, 0, 4, 1, 0, 1, 1, 1, 1]' : 0.105999}", "{'[6, 0, 6, 5, 6, 6, 1, 1, 0, 22, 0, 4, 1, 0, 1, 1, 1, 1]' : 0.106009}", "{'[6, 0, 6, 5, 6, 6, 1, 1, 0, 22, 0, 4, 1, 0, 1, 1, 1, 1]' : 0.106194}", "{'[6, 0, 6, 5, 6, 6, 1, 1, 0, 22, 0, 4, 1, 0, 1, 1, 1, 1]' : 0.106157}", "{'[6, 0, 6, 5, 6, 6, 1, 1, 0, 22, 0, 4, 1, 0, 1, 1, 1, 1]' : 0.105999}", "{'[6, 0, 6, 5, 6, 6, 1, 1, 0, 22, 0, 4, 1, 0, 1, 1, 1, 1]' : 0.105963}", "{'[6, 0, 6, 5, 6, 6, 1, 1, 0, 22, 0, 4, 1, 0, 1, 1, 1, 1]' : 0.106057}", "{'[6, 0, 6, 5, 6, 6, 1, 1, 0, 22, 0, 4, 1, 0, 1, 1, 1, 1]' : 0.105982}", "{'[6, 0, 6, 5, 6, 6, 1, 1, 0, 22, 0, 4, 1, 0, 1, 1, 1, 1]' : 0.10602}", "{'[6, 0, 6, 5, 6, 6, 1, 1, 0, 22, 0, 4, 1, 0, 1, 1, 1, 1]' : 0.105902}", "{'[6, 0, 6, 5, 6, 6, 1, 1, 0, 22, 0, 4, 1, 0, 1, 1, 1, 1]' : 0.106004}", "{'[6, 0, 6, 5, 6, 6, 1, 1, 0, 22, 0, 4, 1, 0, 1, 1, 1, 1]' : 0.106006}", "{'[6, 0, 6, 5, 6, 6, 1, 1, 0, 22, 0, 4, 1, 0, 1, 1, 1, 1]' : 0.106125}", "{'[6, 0, 6, 5, 6, 6, 1, 1, 0, 22, 0, 4, 1, 0, 1, 1, 1, 1]' : 0.106342}", "{'[6, 0, 6, 5, 6, 6, 1, 1, 0, 22, 0, 4, 1, 0, 1, 1, 1, 1]' : 0.106436}", "{'[6, 0, 6, 5, 6, 6, 1, 1, 0, 22, 0, 4, 1, 0, 1, 1, 1, 1]' : 0.106139}", "{'[6, 0, 6, 5, 6, 6, 1, 1, 0, 22, 0, 4, 1, 0, 1, 1, 1, 1]' : 0.105996}", "{'[6, 0, 6, 5, 6, 6, 1, 1, 0, 22, 0, 4, 1, 0, 1, 1, 1, 1]' : 0.105908}", "{'[6, 0, 6, 5, 6, 6, 1, 1, 0, 22, 0, 4, 1, 0, 1, 1, 1, 1]' : 0.106015}", "{'[6, 0, 6, 5, 6, 6, 1, 1, 0, 22, 0, 4, 1, 0, 1, 1, 1, 1]' : 0.10594}", "{'[6, 0, 6, 5, 6, 6, 1, 1, 0, 22, 0, 4, 1, 0, 1, 1, 1, 1]' : 0.106086}", "{'[6, 0, 6, 5, 6, 6, 1, 1, 0, 22, 0, 4, 1, 0, 1, 1, 1, 1]' : 0.105874}", "{'[6, 0, 6, 5, 6, 6, 1, 1, 0, 22, 0, 4, 1, 0, 1, 1, 1, 1]' : 0.106169}"]
returning from 'run': {'[6, 0, 6, 5, 6, 6, 1, 1, 0, 22, 0, 4, 1, 0, 1, 1, 1, 1]': ([0.10632, 0.10613, 0.105943, 0.106172, 0.106075, 0.106076, 0.106242, 0.105999, 0.106009, 0.106194, 0.106157, 0.105999, 0.105963, 0.106057, 0.105982, 0.10602, 0.105902, 0.106004, 0.106006, 0.106125, 0.106342, 0.106436, 0.106139, 0.105996, 0.105908, 0.106015, 0.10594, 0.106086, 0.105874, 0.106169], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 6, 5, 6, 6, 1, 1, 0, 22, 0, 4, 1, 0, 1, 1, 1, 1]': ([0.10632, 0.10613, 0.105943, 0.106172, 0.106075, 0.106076, 0.106242, 0.105999, 0.106009, 0.106194, 0.106157, 0.105999, 0.105963, 0.106057, 0.105982, 0.10602, 0.105902, 0.106004, 0.106006, 0.106125, 0.106342, 0.106436, 0.106139, 0.105996, 0.105908, 0.106015, 0.10594, 0.106086, 0.105874, 0.106169], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = kkk
Code stats:
        Number of loops: 	48
        Max loop nest depth: 	5
        Additions: 		808
        Multiplications: 	210
        Divisions: 		0
        Logical: 		0
        Reads: 			1714
        Writes: 		380
        Comparisons:		48
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest87.exe __orio_perftest87.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest87.exe  
Program Test Output: 
{'[2, 1, 3, 5, 0, 1, 0, 1, 25, 5, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.114401}
{'[2, 1, 3, 5, 0, 1, 0, 1, 25, 5, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.111687}
{'[2, 1, 3, 5, 0, 1, 0, 1, 25, 5, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.111518}
{'[2, 1, 3, 5, 0, 1, 0, 1, 25, 5, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.111449}
{'[2, 1, 3, 5, 0, 1, 0, 1, 25, 5, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.112384}
{'[2, 1, 3, 5, 0, 1, 0, 1, 25, 5, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.111548}
{'[2, 1, 3, 5, 0, 1, 0, 1, 25, 5, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.111437}
{'[2, 1, 3, 5, 0, 1, 0, 1, 25, 5, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.111353}
{'[2, 1, 3, 5, 0, 1, 0, 1, 25, 5, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.111829}
{'[2, 1, 3, 5, 0, 1, 0, 1, 25, 5, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.111642}
{'[2, 1, 3, 5, 0, 1, 0, 1, 25, 5, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.11179}
{'[2, 1, 3, 5, 0, 1, 0, 1, 25, 5, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.111591}
{'[2, 1, 3, 5, 0, 1, 0, 1, 25, 5, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.11153}
{'[2, 1, 3, 5, 0, 1, 0, 1, 25, 5, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.112432}
{'[2, 1, 3, 5, 0, 1, 0, 1, 25, 5, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.111425}
{'[2, 1, 3, 5, 0, 1, 0, 1, 25, 5, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.111378}
{'[2, 1, 3, 5, 0, 1, 0, 1, 25, 5, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.111613}
{'[2, 1, 3, 5, 0, 1, 0, 1, 25, 5, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.111398}
{'[2, 1, 3, 5, 0, 1, 0, 1, 25, 5, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.111541}
{'[2, 1, 3, 5, 0, 1, 0, 1, 25, 5, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.11177}
{'[2, 1, 3, 5, 0, 1, 0, 1, 25, 5, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.111837}
{'[2, 1, 3, 5, 0, 1, 0, 1, 25, 5, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.11163}
{'[2, 1, 3, 5, 0, 1, 0, 1, 25, 5, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.112379}
{'[2, 1, 3, 5, 0, 1, 0, 1, 25, 5, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.111464}
{'[2, 1, 3, 5, 0, 1, 0, 1, 25, 5, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.11224}
{'[2, 1, 3, 5, 0, 1, 0, 1, 25, 5, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.111405}
{'[2, 1, 3, 5, 0, 1, 0, 1, 25, 5, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.11179}
{'[2, 1, 3, 5, 0, 1, 0, 1, 25, 5, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.111932}
{'[2, 1, 3, 5, 0, 1, 0, 1, 25, 5, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.111676}
{'[2, 1, 3, 5, 0, 1, 0, 1, 25, 5, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.111775}

out:
 ["{'[2, 1, 3, 5, 0, 1, 0, 1, 25, 5, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.114401}", "{'[2, 1, 3, 5, 0, 1, 0, 1, 25, 5, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.111687}", "{'[2, 1, 3, 5, 0, 1, 0, 1, 25, 5, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.111518}", "{'[2, 1, 3, 5, 0, 1, 0, 1, 25, 5, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.111449}", "{'[2, 1, 3, 5, 0, 1, 0, 1, 25, 5, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.112384}", "{'[2, 1, 3, 5, 0, 1, 0, 1, 25, 5, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.111548}", "{'[2, 1, 3, 5, 0, 1, 0, 1, 25, 5, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.111437}", "{'[2, 1, 3, 5, 0, 1, 0, 1, 25, 5, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.111353}", "{'[2, 1, 3, 5, 0, 1, 0, 1, 25, 5, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.111829}", "{'[2, 1, 3, 5, 0, 1, 0, 1, 25, 5, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.111642}", "{'[2, 1, 3, 5, 0, 1, 0, 1, 25, 5, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.11179}", "{'[2, 1, 3, 5, 0, 1, 0, 1, 25, 5, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.111591}", "{'[2, 1, 3, 5, 0, 1, 0, 1, 25, 5, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.11153}", "{'[2, 1, 3, 5, 0, 1, 0, 1, 25, 5, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.112432}", "{'[2, 1, 3, 5, 0, 1, 0, 1, 25, 5, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.111425}", "{'[2, 1, 3, 5, 0, 1, 0, 1, 25, 5, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.111378}", "{'[2, 1, 3, 5, 0, 1, 0, 1, 25, 5, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.111613}", "{'[2, 1, 3, 5, 0, 1, 0, 1, 25, 5, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.111398}", "{'[2, 1, 3, 5, 0, 1, 0, 1, 25, 5, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.111541}", "{'[2, 1, 3, 5, 0, 1, 0, 1, 25, 5, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.11177}", "{'[2, 1, 3, 5, 0, 1, 0, 1, 25, 5, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.111837}", "{'[2, 1, 3, 5, 0, 1, 0, 1, 25, 5, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.11163}", "{'[2, 1, 3, 5, 0, 1, 0, 1, 25, 5, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.112379}", "{'[2, 1, 3, 5, 0, 1, 0, 1, 25, 5, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.111464}", "{'[2, 1, 3, 5, 0, 1, 0, 1, 25, 5, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.11224}", "{'[2, 1, 3, 5, 0, 1, 0, 1, 25, 5, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.111405}", "{'[2, 1, 3, 5, 0, 1, 0, 1, 25, 5, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.11179}", "{'[2, 1, 3, 5, 0, 1, 0, 1, 25, 5, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.111932}", "{'[2, 1, 3, 5, 0, 1, 0, 1, 25, 5, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.111676}", "{'[2, 1, 3, 5, 0, 1, 0, 1, 25, 5, 0, 4, 1, 0, 0, 1, 0, 0]' : 0.111775}"]
returning from 'run': {'[2, 1, 3, 5, 0, 1, 0, 1, 25, 5, 0, 4, 1, 0, 0, 1, 0, 0]': ([0.114401, 0.111687, 0.111518, 0.111449, 0.112384, 0.111548, 0.111437, 0.111353, 0.111829, 0.111642, 0.11179, 0.111591, 0.11153, 0.112432, 0.111425, 0.111378, 0.111613, 0.111398, 0.111541, 0.11177, 0.111837, 0.11163, 0.112379, 0.111464, 0.11224, 0.111405, 0.11179, 0.111932, 0.111676, 0.111775], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 1, 3, 5, 0, 1, 0, 1, 25, 5, 0, 4, 1, 0, 0, 1, 0, 0]': ([0.114401, 0.111687, 0.111518, 0.111449, 0.112384, 0.111548, 0.111437, 0.111353, 0.111829, 0.111642, 0.11179, 0.111591, 0.11153, 0.112432, 0.111425, 0.111378, 0.111613, 0.111398, 0.111541, 0.11177, 0.111837, 0.11163, 0.112379, 0.111464, 0.11224, 0.111405, 0.11179, 0.111932, 0.111676, 0.111775], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Complete design, with measurements:
     T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I RT_I RT_J RT_K SCR
37      0    2    2    5    6    0       1       0   23  10    0    0    0   1
220     6    3    4    6    4    0       0       0    8   1    0    2    0   0
232     0    1    3    3    5    6       0       1   11  29    1    0    1   0
432     3    1    5    1    2    6       1       0    3   0    1    1    0   0
554     6    6    6    6    0    4       0       1    4   2    0    0    0   0
580     6    0    1    0    0    0       1       1   26  16    0    1    1   1
598     6    2    0    0    6    3       0       1    6  18    1    1    0   1
606     0    6    0    1    6    2       1       0   28   0    1    0    1   1
667     1    0    0    2    4    0       0       1    7  29    0    1    1   1
691     1    3    6    0    6    0       1       1   10   4    2    0    0   0
720     3    3    0    3    1    2       0       0    3   0    0    0    1   1
839     0    3    1    6    3    2       1       1    8   3    1    0    1   0
938     2    6    1    5    0    0       1       0    8  22    0    0    2   0
950     5    6    0    5    6    5       0       0   28  29    1    1    0   0
1177    6    0    6    5    6    6       1       1   29   0    0    0    1   0
1643    3    5    6    5    4    5       1       0   26  22    0    1    1   1
1717    0    0    2    2    2    0       1       0    5  26    1    0    0   1
2038    3    0    2    6    2    2       1       0    8  25    2    0    0   1
2247    1    0    1    1    0    5       0       0    1   4    2    0    0   0
2261    3    5    6    1    0    4       0       1   28   4    1    0    1   0
2270    1    6    1    0    4    6       0       1   20  19    0    2    0   1
2283    0    0    4    6    1    0       0       1   27  29    0    1    0   1
2558    6    2    6    0    2    6       0       0   24  29    2    0    0   1
2713    1    0    0    0    1    3       0       0    0   8    1    0    1   0
3123    3    1    0    5    2    0       1       1   19  12    2    0    0   0
3368    1    1    0    0    5    2       0       1    6  24    0    0    0   0
3592    0    0    6    3    1    4       0       1    4   0    0    2    0   0
3626    5    1    4    0    1    0       0       0    0   8    0    0    2   0
3773    2    5    6    2    0    6       1       1    0  22    0    0    0   1
3853    6    0    6    5    6    6       1       1    0  22    1    0    1   1
3913    2    1    3    5    0    1       0       1   25   5    1    0    0   1
     VEC1 VEC2  cost_mean
37      1    1 0.13603373
220     0    1 0.13550577
232     1    0 0.11446717
432     1    1 0.11813550
554     1    0 0.19920463
580     1    0 0.18243560
598     0    1 0.09304818
606     0    0 0.10196601
667     0    1 0.15140447
691     0    0 0.17004690
720     1    0 0.15742103
839     1    1 0.11981477
938     0    1 0.23523263
950     1    1 0.11189683
1177    1    1 0.22738490
1643    0    0 0.14447967
1717    0    0 0.10920133
2038    1    0 0.17366577
2247    1    0 0.13386097
2261    0    1 0.11147070
2270    1    1 0.25473590
2283    1    1 0.24623470
2558    0    1 0.16981730
2713    0    0 0.11757323
3123    1    0 0.18643540
3368    0    0 0.41134537
3592    0    1 0.20343903
3626    0    0 0.13680917
3773    0    0 0.18964590
3853    1    1 0.10607600
3913    0    0 0.11179480

Heteroscedasticity Test p-value: 0.199862411034
Regression Step:                Df   Sum Sq  Mean Sq F value Pr(>F)  
T1_I             1 0.001434 0.001434   0.515 0.5246  
T1_J             1 0.000008 0.000008   0.003 0.9596  
T1_K             1 0.000001 0.000001   0.000 0.9890  
T2_I             1 0.000162 0.000162   0.058 0.8246  
T2_J             1 0.000344 0.000344   0.124 0.7484  
T2_K             1 0.000237 0.000237   0.085 0.7893  
ACOPY_x          1 0.000982 0.000982   0.353 0.5941  
ACOPY_y          1 0.012269 0.012269   4.411 0.1265  
U1_I             1 0.000012 0.000012   0.004 0.9508  
U_I              1 0.004888 0.004888   1.758 0.2768  
RT_I             1 0.014060 0.014060   5.056 0.1101  
RT_J             1 0.000571 0.000571   0.205 0.6814  
RT_K             1 0.010564 0.010564   3.799 0.1464  
SCR              1 0.017251 0.017251   6.203 0.0884 .
VEC1             1 0.000050 0.000050   0.018 0.9019  
VEC2             1 0.000140 0.000140   0.050 0.8367  
I(1/(1 + T1_I))  1 0.006737 0.006737   2.422 0.2175  
I(1/(1 + T1_J))  1 0.000709 0.000709   0.255 0.6483  
I(1/(1 + T1_K))  1 0.000076 0.000076   0.027 0.8790  
I(1/(1 + T2_I))  1 0.013283 0.013283   4.776 0.1167  
I(1/(1 + T2_J))  1 0.002324 0.002324   0.836 0.4281  
I(1/(1 + T2_K))  1 0.000881 0.000881   0.317 0.6128  
I(1/(1 + U1_I))  1 0.007837 0.007837   2.818 0.1918  
I(1/(1 + U_I))   1 0.008643 0.008643   3.108 0.1761  
I(1/(1 + RT_I))  1 0.011127 0.011127   4.001 0.1393  
I(1/(1 + RT_J))  1 0.002354 0.002354   0.847 0.4254  
I(1/(1 + RT_K))  1 0.000349 0.000349   0.126 0.7466  
Residuals        3 0.008343 0.002781                 
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Predicting Best
Generating valid search space of size 4000 (does not spend evaluations)
Valid coordinates: 800
Valid coordinates: 1600
Valid coordinates: 2400
Tested coordinates: 10000
Valid coordinates: 3200
Valid coordinates: 4000
Valid/Tested configurations: 4000/15983
Generated Search Space:
NULL
Identical predictions (tol = 1e-5): 1
Getting Best from Design
Response: ['cost_mean']
Design Names:  [1] "T1_I"      "T1_J"      "T1_K"      "T2_I"      "T2_J"      "T2_K"     
 [7] "ACOPY_x"   "ACOPY_y"   "U1_I"      "U_I"       "RT_I"      "RT_J"     
[13] "RT_K"      "SCR"       "VEC1"      "VEC2"      "cost_mean"

Design Response:       cost_mean
37   0.13603373
220  0.13550577
232  0.11446717
432  0.11813550
554  0.19920463
580  0.18243560
598  0.09304818
606  0.10196601
667  0.15140447
691  0.17004690
720  0.15742103
839  0.11981477
938  0.23523263
950  0.11189683
1177 0.22738490
1643 0.14447967
1717 0.10920133
2038 0.17366577
2247 0.13386097
2261 0.11147070
2270 0.25473590
2283 0.24623470
2558 0.16981730
2713 0.11757323
3123 0.18643540
3368 0.41134537
3592 0.20343903
3626 0.13680917
3773 0.18964590
3853 0.10607600
3913 0.11179480

Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Getting fixed variables
Pruning Model
Best Predicted:      T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
1573    5    6    2    3    4    3       0       0   12   7   0   4    1    1
     RT_K SCR VEC1 VEC2
1573    0   1    0    0

Best From Design: [6, 2, 0, 0, 6, 3, 0, 1, 6, 18, 0, 4, 1, 1, 0, 1, 0, 1]
Pruned Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'RT_I', 'RT_J', 'RT_K', 'VEC1', 'VEC2']
Fixed Factors: {'U_K': 4, 'U_J': 0, 'SCR': 1}
Length of requested configs: 1
Result was on Database, Returning Now
Starting Point (-O3):
0.16283083333333334
Predicted Best Point:
[5, 6, 2, 3, 4, 3, 0, 0, 12, 7, 0, 4, 1, 1, 0, 1, 0, 0]
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	27
        Max loop nest depth: 	5
        Additions: 		1111
        Multiplications: 	510
        Divisions: 		0
        Logical: 		0
        Reads: 			2285
        Writes: 		421
        Comparisons:		27
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest88.exe __orio_perftest88.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest88.exe  
Program Test Output: 
{'[5, 6, 2, 3, 4, 3, 0, 0, 12, 7, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.122896}
{'[5, 6, 2, 3, 4, 3, 0, 0, 12, 7, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.122207}
{'[5, 6, 2, 3, 4, 3, 0, 0, 12, 7, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.112188}
{'[5, 6, 2, 3, 4, 3, 0, 0, 12, 7, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.111204}
{'[5, 6, 2, 3, 4, 3, 0, 0, 12, 7, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.111206}
{'[5, 6, 2, 3, 4, 3, 0, 0, 12, 7, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.111489}
{'[5, 6, 2, 3, 4, 3, 0, 0, 12, 7, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.108916}
{'[5, 6, 2, 3, 4, 3, 0, 0, 12, 7, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.108416}
{'[5, 6, 2, 3, 4, 3, 0, 0, 12, 7, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.108444}
{'[5, 6, 2, 3, 4, 3, 0, 0, 12, 7, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.108446}
{'[5, 6, 2, 3, 4, 3, 0, 0, 12, 7, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.108684}
{'[5, 6, 2, 3, 4, 3, 0, 0, 12, 7, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.11038}
{'[5, 6, 2, 3, 4, 3, 0, 0, 12, 7, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.11124}
{'[5, 6, 2, 3, 4, 3, 0, 0, 12, 7, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.109011}
{'[5, 6, 2, 3, 4, 3, 0, 0, 12, 7, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.10847}
{'[5, 6, 2, 3, 4, 3, 0, 0, 12, 7, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.108905}
{'[5, 6, 2, 3, 4, 3, 0, 0, 12, 7, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.111295}
{'[5, 6, 2, 3, 4, 3, 0, 0, 12, 7, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.111213}
{'[5, 6, 2, 3, 4, 3, 0, 0, 12, 7, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.111262}
{'[5, 6, 2, 3, 4, 3, 0, 0, 12, 7, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.11126}
{'[5, 6, 2, 3, 4, 3, 0, 0, 12, 7, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.11126}
{'[5, 6, 2, 3, 4, 3, 0, 0, 12, 7, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.111218}
{'[5, 6, 2, 3, 4, 3, 0, 0, 12, 7, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.111235}
{'[5, 6, 2, 3, 4, 3, 0, 0, 12, 7, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.111412}
{'[5, 6, 2, 3, 4, 3, 0, 0, 12, 7, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.110911}
{'[5, 6, 2, 3, 4, 3, 0, 0, 12, 7, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.108509}
{'[5, 6, 2, 3, 4, 3, 0, 0, 12, 7, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.108477}
{'[5, 6, 2, 3, 4, 3, 0, 0, 12, 7, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.108458}
{'[5, 6, 2, 3, 4, 3, 0, 0, 12, 7, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.10845}
{'[5, 6, 2, 3, 4, 3, 0, 0, 12, 7, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.109967}

out:
 ["{'[5, 6, 2, 3, 4, 3, 0, 0, 12, 7, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.122896}", "{'[5, 6, 2, 3, 4, 3, 0, 0, 12, 7, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.122207}", "{'[5, 6, 2, 3, 4, 3, 0, 0, 12, 7, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.112188}", "{'[5, 6, 2, 3, 4, 3, 0, 0, 12, 7, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.111204}", "{'[5, 6, 2, 3, 4, 3, 0, 0, 12, 7, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.111206}", "{'[5, 6, 2, 3, 4, 3, 0, 0, 12, 7, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.111489}", "{'[5, 6, 2, 3, 4, 3, 0, 0, 12, 7, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.108916}", "{'[5, 6, 2, 3, 4, 3, 0, 0, 12, 7, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.108416}", "{'[5, 6, 2, 3, 4, 3, 0, 0, 12, 7, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.108444}", "{'[5, 6, 2, 3, 4, 3, 0, 0, 12, 7, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.108446}", "{'[5, 6, 2, 3, 4, 3, 0, 0, 12, 7, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.108684}", "{'[5, 6, 2, 3, 4, 3, 0, 0, 12, 7, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.11038}", "{'[5, 6, 2, 3, 4, 3, 0, 0, 12, 7, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.11124}", "{'[5, 6, 2, 3, 4, 3, 0, 0, 12, 7, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.109011}", "{'[5, 6, 2, 3, 4, 3, 0, 0, 12, 7, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.10847}", "{'[5, 6, 2, 3, 4, 3, 0, 0, 12, 7, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.108905}", "{'[5, 6, 2, 3, 4, 3, 0, 0, 12, 7, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.111295}", "{'[5, 6, 2, 3, 4, 3, 0, 0, 12, 7, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.111213}", "{'[5, 6, 2, 3, 4, 3, 0, 0, 12, 7, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.111262}", "{'[5, 6, 2, 3, 4, 3, 0, 0, 12, 7, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.11126}", "{'[5, 6, 2, 3, 4, 3, 0, 0, 12, 7, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.11126}", "{'[5, 6, 2, 3, 4, 3, 0, 0, 12, 7, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.111218}", "{'[5, 6, 2, 3, 4, 3, 0, 0, 12, 7, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.111235}", "{'[5, 6, 2, 3, 4, 3, 0, 0, 12, 7, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.111412}", "{'[5, 6, 2, 3, 4, 3, 0, 0, 12, 7, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.110911}", "{'[5, 6, 2, 3, 4, 3, 0, 0, 12, 7, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.108509}", "{'[5, 6, 2, 3, 4, 3, 0, 0, 12, 7, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.108477}", "{'[5, 6, 2, 3, 4, 3, 0, 0, 12, 7, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.108458}", "{'[5, 6, 2, 3, 4, 3, 0, 0, 12, 7, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.10845}", "{'[5, 6, 2, 3, 4, 3, 0, 0, 12, 7, 0, 4, 1, 1, 0, 1, 0, 0]' : 0.109967}"]
returning from 'run': {'[5, 6, 2, 3, 4, 3, 0, 0, 12, 7, 0, 4, 1, 1, 0, 1, 0, 0]': ([0.122896, 0.122207, 0.112188, 0.111204, 0.111206, 0.111489, 0.108916, 0.108416, 0.108444, 0.108446, 0.108684, 0.11038, 0.11124, 0.109011, 0.10847, 0.108905, 0.111295, 0.111213, 0.111262, 0.11126, 0.11126, 0.111218, 0.111235, 0.111412, 0.110911, 0.108509, 0.108477, 0.108458, 0.10845, 0.109967], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 6, 2, 3, 4, 3, 0, 0, 12, 7, 0, 4, 1, 1, 0, 1, 0, 0]': ([0.122896, 0.122207, 0.112188, 0.111204, 0.111206, 0.111489, 0.108916, 0.108416, 0.108444, 0.108446, 0.108684, 0.11038, 0.11124, 0.109011, 0.10847, 0.108905, 0.111295, 0.111213, 0.111262, 0.11126, 0.11126, 0.111218, 0.111235, 0.111412, 0.110911, 0.108509, 0.108477, 0.108458, 0.10845, 0.109967], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Design Best Point:
[6, 2, 0, 0, 6, 3, 0, 1, 6, 18, 0, 4, 1, 1, 0, 1, 0, 1]
Length of requested configs: 1
Result was on Database, Returning Now
Fixed Factors: {'U_K': 4, 'U_J': 0, 'SCR': 1}
Slowdown (Design Best): 0.5714407693055676
Slowdown (Predicted Best): 0.6810808763696476
Budget: 70/180
Updating Global Best: 0.09304817666666666
Current Best Point: 
[6, 2, 0, 0, 6, 3, 0, 1, 6, 18, 0, 4, 1, 1, 0, 1, 0, 1]
Final Best Point: 
[6, 2, 0, 0, 6, 3, 0, 1, 6, 18, 0, 4, 1, 1, 0, 1, 0, 1]
Ending DOPT-ANOVA
Best Point: [6, 2, 0, 0, 6, 3, 0, 1, 6, 18, 0, 4, 1, 1, 0, 1, 0, 1]
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Speedup: 1.749962644799094
----- end random search -----
----- begin random search summary -----
 total completed runs: 0
 total successful runs: 0
 total failed runs: 0
 speedup: 1.749962644799094
----- end random search summary -----
----- begin summary -----
 best coordinate: [6, 2, 0, 0, 6, 3, 0, 1, 6, 18, 0, 4, 1, 1, 0, 1, 0, 1]={'ACOPY_x': False, 'ACOPY_y': True, 'RT_K': 1, 'T1_I': 512, 'T1_J': 32, 'T1_K': 1, 'U_K': 5, 'U_J': 1, 'U_I': 19, 'U1_I': 7, 'T2_K': 256, 'T2_J': 2048, 'T2_I': 1, 'VEC2': True, 'VEC1': False, 'RT_I': 8, 'SCR': True, 'RT_J': 8}, cost=9.304818e-02, transfer_time=inf, inputs=[('N', 10000)], search_time=-1398.74, runs=70
----- end summary -----
Length of requested configs: 1
Result was on Database, Returning Now
----- the obtained best performance parameters -----
 ACOPY_x = False
 ACOPY_y = True
 RT_I = 8
 RT_J = 8
 RT_K = 1
 SCR = True
 T1_I = 512
 T1_J = 32
 T1_K = 1
 T2_I = 1
 T2_J = 2048
 T2_K = 256
 U1_I = 7
 U_I = 19
 U_J = 1
 U_K = 5
 VEC1 = False
 VEC2 = True
 cost_mean = 0.09304817666666666
 points = 70
 speedup_O3 = 1.749962644799094
 technique = DLMT
Code stats:
        Number of loops: 	105
        Max loop nest depth: 	5
        Additions: 		2595
        Multiplications: 	840
        Divisions: 		0
        Logical: 		0
        Reads: 			5371
        Writes: 		1096
        Comparisons:		105
        Gotos: 			0
        
----- finish optimizations -----

----- begin removing annotations from output-----
----- finished removing annotations from output-----

----- begin writing the output file(s) -----
--> writing output to: _atax2.src1.c
----- finished writing the output file(s) -----

====== END ORIO ======
