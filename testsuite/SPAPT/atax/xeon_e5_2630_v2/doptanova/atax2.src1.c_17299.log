
====== START ORIO ======

----- begin reading the source file: atax2.src1.c -----
----- finished reading the source file -----

----- begin parsing annotations -----
----- finished parsing annotations -----

----- begin optimizations -----
Search_Space         = 8.234e+13
Number_of_Parameters = 18
Numeric_Parameters   = 13
Binary_Parameters    = 05
['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
[[1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [False, True], [False, True], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 8, 32], [1, 8, 32], [1, 8, 32], [False, True], [False, True], [False, True]]

----- begin empirical tuning for problem size -----
 N = 10000
Parameters: {'ACOPY_x': [0, 2], 'ACOPY_y': [0, 2], 'RT_K': [0, 3], 'T1_I': [0, 7], 'T1_J': [0, 7], 'T1_K': [0, 7], 'U_K': [0, 30], 'U_J': [0, 30], 'U_I': [0, 30], 'U1_I': [0, 30], 'T2_K': [0, 7], 'T2_J': [0, 7], 'T2_I': [0, 7], 'VEC2': [0, 2], 'VEC1': [0, 2], 'RT_I': [0, 3], 'SCR': [0, 2], 'RT_J': [0, 3]}
Parameter Range Values: {'ACOPY_x': [False, True], 'ACOPY_y': [False, True], 'RT_K': [1, 8, 32], 'T1_I': [1, 16, 32, 64, 128, 256, 512], 'T1_J': [1, 16, 32, 64, 128, 256, 512], 'T1_K': [1, 16, 32, 64, 128, 256, 512], 'U_K': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_J': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U1_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'T2_K': [1, 64, 128, 256, 512, 1024, 2048], 'T2_J': [1, 64, 128, 256, 512, 1024, 2048], 'T2_I': [1, 64, 128, 256, 512, 1024, 2048], 'VEC2': [False, True], 'VEC1': [False, True], 'RT_I': [1, 8, 32], 'SCR': [False, True], 'RT_J': [1, 8, 32]}

----- begin random search -----
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Inverse Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Starting DOPT-anova
Step 0
Generating valid search space of size 4600 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Valid coordinates: 920
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Valid coordinates: 1840
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Tested coordinates: 110000
Valid coordinates: 2760
Tested coordinates: 120000
Tested coordinates: 130000
Tested coordinates: 140000
Tested coordinates: 150000
Valid coordinates: 3680
Tested coordinates: 160000
Tested coordinates: 170000
Tested coordinates: 180000
Tested coordinates: 190000
Valid coordinates: 4600
Valid/Tested configurations: 4600/190080
Generated Search Space:
NULL
Clean Info:
Removed Factors: character(0)

Removed Inverse Factors: [1] "ACOPY_x" "ACOPY_y" "SCR"     "VEC1"    "VEC2"   

New Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
New Inverse Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
New Fixed Factors: {}
Full Model:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Fixed Factors: {}
Computing D-Optimal Design
Computing D-Optimal Design with 46 experiments
Design Formula:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Starting "optFederov" run
Using Search Space:
NULL
Data Dimensions: [1] 4600   18

     T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
129     0    0    1    5    2    2       1       1    0   4   0  27    0    2
165     6    1    6    6    6    4       1       1   24   0  29  26    0    0
311     1    1    0    6    5    5       0       1   27  28  29   0    0    0
325     2    1    5    0    6    0       0       0    5   0  29   4    0    2
376     1    0    0    2    3    6       0       0   12   8  10   0    0    1
602     6    2    3    4    2    0       0       1   25   0  12   3    0    0
732     5    2    0    0    0    6       0       1   22   0  12  24    0    2
923     5    0    6    6    5    4       1       0    0  23   0  17    0    0
970     0    6    2    0    0    1       1       0    0  10  25   0    0    1
993     3    2    5    2    3    0       0       0   29   0   0  29    2    0
1019    0    2    0    3    3    4       0       0    0   0  29  29    0    0
1022    0    2    6    3    0    4       1       0   15   4   0   8    1    1
1046    5    0    5    0    6    4       1       0   28  23  28   0    1    0
1331    1    2    3    6    2    1       1       1   22   0  27  29    0    1
1346    2    0    0    3    3    0       1       1    0   0  26   6    2    0
2153    4    0    0    0    3    2       1       1    6   1  12   0    0    0
2196    0    2    0    0    4    0       1       0   15   0   8  24    2    0
2197    0    5    0    5    6    6       1       0   20   0   0   1    0    1
2410    2    6    3    5    0    6       1       0   29   2   0   4    0    0
2749    3    0    1    2    0    6       1       1    3   0  19   5    1    0
2795    2    1    1    2    6    0       0       1    0   4   3   0    0    0
2910    6    5    0    5    0    0       0       1   19  16   0  27    0    1
3158    6    4    5    0    2    0       0       1   28   8  28   0    1    1
3166    3    5    6    1    0    0       1       0   21  20  27   0    1    0
3240    1    6    0    1    6    1       1       1   28  21   0   2    0    1
3282    1    1    6    6    2    0       0       0    5   0   3   0    0    2
3322    0    2    4    2    4    0       0       1    7  28  28   0    0    0
3360    6    4    0    6    0    2       0       0    0  10   0   9    2    0
3439    2    4    2    6    3    1       1       0    1   0  17  14    1    1
3442    6    0    2    4    3    6       0       0    5  15   0   5    2    0
3510    6    1    0    0    4    6       1       1    0  29   0   2    1    1
3586    0    6    6    6    0    0       1       1   16   0   7  17    1    0
3626    6    6    2    6    6    6       1       0    1   2  24   0    0    2
3641    3    4    0    0    3    2       0       1    5   2   0  25    1    0
3710    1    1    5    1    2    4       1       1    1  28   0  28    0    0
3736    1    3    3    6    5    4       1       1   22  29   2   0    2    0
3746    2    0    2    6    0    0       0       1    2  21   0  28    1    0
3994    0    0    0    1    0    1       0       1   26  28   0  18    0    2
4006    1    0    6    0    6    4       0       1    7  13   0   5    0    0
4142    1    6    6    1    5    5       0       1    0   0   4  29    1    0
4252    1    4    2    0    4    2       0       0    0   0   3   1    0    0
4524    5    5    0    4    3    1       0       0   11   9   7   0    0    0
4554    1    3    6    6    0    6       0       1    2   6  22   0    0    0
4564    1    0    4    3    0    2       1       1    9   0   5  27    2    0
4571    0    0    2    0    2    5       0       0   28   2   0   1    0    0
4578    6    1    4    0    3    4       1       0    2   0   0   0    0    0
     RT_K SCR VEC1 VEC2
129     0   1    0    0
165     2   0    1    0
311     0   1    0    0
325     0   0    0    0
376     1   1    0    1
602     1   1    0    1
732     0   0    1    1
923     0   1    0    1
970     1   1    0    0
993     0   1    0    1
1019    0   1    1    0
1022    0   0    0    0
1046    1   0    0    1
1331    0   0    0    0
1346    0   0    0    1
2153    2   1    1    1
2196    0   1    0    0
2197    1   1    1    1
2410    2   0    0    0
2749    0   1    0    1
2795    0   0    1    1
2910    0   0    0    1
3158    0   0    1    0
3166    0   1    1    1
3240    1   1    1    1
3282    0   1    1    0
3322    2   1    0    1
3360    0   0    0    1
3439    0   0    0    1
3442    0   1    1    0
3510    0   0    0    0
3586    1   0    1    0
3626    0   0    0    1
3641    0   1    0    1
3710    1   0    1    1
3736    0   0    1    0
3746    1   1    1    0
3994    0   0    0    0
4006    0   1    0    0
4142    0   0    0    0
4252    2   1    1    0
4524    1   0    0    0
4554    0   1    1    1
4564    0   0    1    1
4571    0   0    1    1
4578    0   1    0    0

D-Efficiency Approximation: [1] 0.352

Measuring design of size 46
Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Length of requested configs: 1
Code stats:
        Number of loops: 	42
        Max loop nest depth: 	5
        Additions: 		2340
        Multiplications: 	732
        Divisions: 		0
        Logical: 		0
        Reads: 			4590
        Writes: 		867
        Comparisons:		42
        Gotos: 			0
        
 building the original code:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -DORIGINAL -o __orio_perftest_original.exe __orio_perftest1.c timer_cpu.o -lm
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest1.exe __orio_perftest1.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest1.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest1.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest1.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest1.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		450
        Multiplications: 	126
        Divisions: 		0
        Logical: 		0
        Reads: 			894
        Writes: 		124
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest2.exe __orio_perftest2.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest2.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest2.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest2.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest2.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	78
        Max loop nest depth: 	6
        Additions: 		4151
        Multiplications: 	1920
        Divisions: 		0
        Logical: 		0
        Reads: 			7974
        Writes: 		1330
        Comparisons:		78
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest3.exe __orio_perftest3.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest3.exe  
Program Test Output: 
{'[1, 1, 0, 6, 5, 5, 0, 1, 27, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.285469}
{'[1, 1, 0, 6, 5, 5, 0, 1, 27, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.280276}
{'[1, 1, 0, 6, 5, 5, 0, 1, 27, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.240699}
{'[1, 1, 0, 6, 5, 5, 0, 1, 27, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.246346}
{'[1, 1, 0, 6, 5, 5, 0, 1, 27, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.245384}
{'[1, 1, 0, 6, 5, 5, 0, 1, 27, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.238905}
{'[1, 1, 0, 6, 5, 5, 0, 1, 27, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.240946}
{'[1, 1, 0, 6, 5, 5, 0, 1, 27, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.252227}
{'[1, 1, 0, 6, 5, 5, 0, 1, 27, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.253718}
{'[1, 1, 0, 6, 5, 5, 0, 1, 27, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.24989}
{'[1, 1, 0, 6, 5, 5, 0, 1, 27, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.24644}
{'[1, 1, 0, 6, 5, 5, 0, 1, 27, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.249037}
{'[1, 1, 0, 6, 5, 5, 0, 1, 27, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.246181}
{'[1, 1, 0, 6, 5, 5, 0, 1, 27, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.24551}
{'[1, 1, 0, 6, 5, 5, 0, 1, 27, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.241502}
{'[1, 1, 0, 6, 5, 5, 0, 1, 27, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.253623}
{'[1, 1, 0, 6, 5, 5, 0, 1, 27, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.243139}
{'[1, 1, 0, 6, 5, 5, 0, 1, 27, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.246571}
{'[1, 1, 0, 6, 5, 5, 0, 1, 27, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.239988}
{'[1, 1, 0, 6, 5, 5, 0, 1, 27, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.246404}
{'[1, 1, 0, 6, 5, 5, 0, 1, 27, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.239527}
{'[1, 1, 0, 6, 5, 5, 0, 1, 27, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.248963}
{'[1, 1, 0, 6, 5, 5, 0, 1, 27, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.240699}
{'[1, 1, 0, 6, 5, 5, 0, 1, 27, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.2513}
{'[1, 1, 0, 6, 5, 5, 0, 1, 27, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.252089}
{'[1, 1, 0, 6, 5, 5, 0, 1, 27, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.249077}
{'[1, 1, 0, 6, 5, 5, 0, 1, 27, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.241252}
{'[1, 1, 0, 6, 5, 5, 0, 1, 27, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.246885}
{'[1, 1, 0, 6, 5, 5, 0, 1, 27, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.243121}
{'[1, 1, 0, 6, 5, 5, 0, 1, 27, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.248886}

out:
 ["{'[1, 1, 0, 6, 5, 5, 0, 1, 27, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.285469}", "{'[1, 1, 0, 6, 5, 5, 0, 1, 27, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.280276}", "{'[1, 1, 0, 6, 5, 5, 0, 1, 27, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.240699}", "{'[1, 1, 0, 6, 5, 5, 0, 1, 27, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.246346}", "{'[1, 1, 0, 6, 5, 5, 0, 1, 27, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.245384}", "{'[1, 1, 0, 6, 5, 5, 0, 1, 27, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.238905}", "{'[1, 1, 0, 6, 5, 5, 0, 1, 27, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.240946}", "{'[1, 1, 0, 6, 5, 5, 0, 1, 27, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.252227}", "{'[1, 1, 0, 6, 5, 5, 0, 1, 27, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.253718}", "{'[1, 1, 0, 6, 5, 5, 0, 1, 27, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.24989}", "{'[1, 1, 0, 6, 5, 5, 0, 1, 27, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.24644}", "{'[1, 1, 0, 6, 5, 5, 0, 1, 27, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.249037}", "{'[1, 1, 0, 6, 5, 5, 0, 1, 27, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.246181}", "{'[1, 1, 0, 6, 5, 5, 0, 1, 27, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.24551}", "{'[1, 1, 0, 6, 5, 5, 0, 1, 27, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.241502}", "{'[1, 1, 0, 6, 5, 5, 0, 1, 27, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.253623}", "{'[1, 1, 0, 6, 5, 5, 0, 1, 27, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.243139}", "{'[1, 1, 0, 6, 5, 5, 0, 1, 27, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.246571}", "{'[1, 1, 0, 6, 5, 5, 0, 1, 27, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.239988}", "{'[1, 1, 0, 6, 5, 5, 0, 1, 27, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.246404}", "{'[1, 1, 0, 6, 5, 5, 0, 1, 27, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.239527}", "{'[1, 1, 0, 6, 5, 5, 0, 1, 27, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.248963}", "{'[1, 1, 0, 6, 5, 5, 0, 1, 27, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.240699}", "{'[1, 1, 0, 6, 5, 5, 0, 1, 27, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.2513}", "{'[1, 1, 0, 6, 5, 5, 0, 1, 27, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.252089}", "{'[1, 1, 0, 6, 5, 5, 0, 1, 27, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.249077}", "{'[1, 1, 0, 6, 5, 5, 0, 1, 27, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.241252}", "{'[1, 1, 0, 6, 5, 5, 0, 1, 27, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.246885}", "{'[1, 1, 0, 6, 5, 5, 0, 1, 27, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.243121}", "{'[1, 1, 0, 6, 5, 5, 0, 1, 27, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.248886}"]
returning from 'run': {'[1, 1, 0, 6, 5, 5, 0, 1, 27, 28, 29, 0, 0, 0, 0, 1, 0, 0]': ([0.285469, 0.280276, 0.240699, 0.246346, 0.245384, 0.238905, 0.240946, 0.252227, 0.253718, 0.24989, 0.24644, 0.249037, 0.246181, 0.24551, 0.241502, 0.253623, 0.243139, 0.246571, 0.239988, 0.246404, 0.239527, 0.248963, 0.240699, 0.2513, 0.252089, 0.249077, 0.241252, 0.246885, 0.243121, 0.248886], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 1, 0, 6, 5, 5, 0, 1, 27, 28, 29, 0, 0, 0, 0, 1, 0, 0]': ([0.285469, 0.280276, 0.240699, 0.246346, 0.245384, 0.238905, 0.240946, 0.252227, 0.253718, 0.24989, 0.24644, 0.249037, 0.246181, 0.24551, 0.241502, 0.253623, 0.243139, 0.246571, 0.239988, 0.246404, 0.239527, 0.248963, 0.240699, 0.2513, 0.252089, 0.249077, 0.241252, 0.246885, 0.243121, 0.248886], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		330
        Multiplications: 	138
        Divisions: 		0
        Logical: 		0
        Reads: 			790
        Writes: 		101
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest4.exe __orio_perftest4.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest4.exe  
Program Test Output: 
{'[2, 1, 5, 0, 6, 0, 0, 0, 5, 0, 29, 4, 0, 2, 0, 0, 0, 0]' : 0.205121}
{'[2, 1, 5, 0, 6, 0, 0, 0, 5, 0, 29, 4, 0, 2, 0, 0, 0, 0]' : 0.198907}
{'[2, 1, 5, 0, 6, 0, 0, 0, 5, 0, 29, 4, 0, 2, 0, 0, 0, 0]' : 0.206855}
{'[2, 1, 5, 0, 6, 0, 0, 0, 5, 0, 29, 4, 0, 2, 0, 0, 0, 0]' : 0.202172}
{'[2, 1, 5, 0, 6, 0, 0, 0, 5, 0, 29, 4, 0, 2, 0, 0, 0, 0]' : 0.200654}
{'[2, 1, 5, 0, 6, 0, 0, 0, 5, 0, 29, 4, 0, 2, 0, 0, 0, 0]' : 0.204898}
{'[2, 1, 5, 0, 6, 0, 0, 0, 5, 0, 29, 4, 0, 2, 0, 0, 0, 0]' : 0.198453}
{'[2, 1, 5, 0, 6, 0, 0, 0, 5, 0, 29, 4, 0, 2, 0, 0, 0, 0]' : 0.208036}
{'[2, 1, 5, 0, 6, 0, 0, 0, 5, 0, 29, 4, 0, 2, 0, 0, 0, 0]' : 0.208339}
{'[2, 1, 5, 0, 6, 0, 0, 0, 5, 0, 29, 4, 0, 2, 0, 0, 0, 0]' : 0.204868}
{'[2, 1, 5, 0, 6, 0, 0, 0, 5, 0, 29, 4, 0, 2, 0, 0, 0, 0]' : 0.20409}
{'[2, 1, 5, 0, 6, 0, 0, 0, 5, 0, 29, 4, 0, 2, 0, 0, 0, 0]' : 0.19849}
{'[2, 1, 5, 0, 6, 0, 0, 0, 5, 0, 29, 4, 0, 2, 0, 0, 0, 0]' : 0.207878}
{'[2, 1, 5, 0, 6, 0, 0, 0, 5, 0, 29, 4, 0, 2, 0, 0, 0, 0]' : 0.208566}
{'[2, 1, 5, 0, 6, 0, 0, 0, 5, 0, 29, 4, 0, 2, 0, 0, 0, 0]' : 0.204876}
{'[2, 1, 5, 0, 6, 0, 0, 0, 5, 0, 29, 4, 0, 2, 0, 0, 0, 0]' : 0.201777}
{'[2, 1, 5, 0, 6, 0, 0, 0, 5, 0, 29, 4, 0, 2, 0, 0, 0, 0]' : 0.199019}
{'[2, 1, 5, 0, 6, 0, 0, 0, 5, 0, 29, 4, 0, 2, 0, 0, 0, 0]' : 0.207325}
{'[2, 1, 5, 0, 6, 0, 0, 0, 5, 0, 29, 4, 0, 2, 0, 0, 0, 0]' : 0.208418}
{'[2, 1, 5, 0, 6, 0, 0, 0, 5, 0, 29, 4, 0, 2, 0, 0, 0, 0]' : 0.208746}
{'[2, 1, 5, 0, 6, 0, 0, 0, 5, 0, 29, 4, 0, 2, 0, 0, 0, 0]' : 0.211784}
{'[2, 1, 5, 0, 6, 0, 0, 0, 5, 0, 29, 4, 0, 2, 0, 0, 0, 0]' : 0.210999}
{'[2, 1, 5, 0, 6, 0, 0, 0, 5, 0, 29, 4, 0, 2, 0, 0, 0, 0]' : 0.210994}
{'[2, 1, 5, 0, 6, 0, 0, 0, 5, 0, 29, 4, 0, 2, 0, 0, 0, 0]' : 0.211117}
{'[2, 1, 5, 0, 6, 0, 0, 0, 5, 0, 29, 4, 0, 2, 0, 0, 0, 0]' : 0.205822}
{'[2, 1, 5, 0, 6, 0, 0, 0, 5, 0, 29, 4, 0, 2, 0, 0, 0, 0]' : 0.205125}
{'[2, 1, 5, 0, 6, 0, 0, 0, 5, 0, 29, 4, 0, 2, 0, 0, 0, 0]' : 0.208275}
{'[2, 1, 5, 0, 6, 0, 0, 0, 5, 0, 29, 4, 0, 2, 0, 0, 0, 0]' : 0.211037}
{'[2, 1, 5, 0, 6, 0, 0, 0, 5, 0, 29, 4, 0, 2, 0, 0, 0, 0]' : 0.211159}
{'[2, 1, 5, 0, 6, 0, 0, 0, 5, 0, 29, 4, 0, 2, 0, 0, 0, 0]' : 0.210998}

out:
 ["{'[2, 1, 5, 0, 6, 0, 0, 0, 5, 0, 29, 4, 0, 2, 0, 0, 0, 0]' : 0.205121}", "{'[2, 1, 5, 0, 6, 0, 0, 0, 5, 0, 29, 4, 0, 2, 0, 0, 0, 0]' : 0.198907}", "{'[2, 1, 5, 0, 6, 0, 0, 0, 5, 0, 29, 4, 0, 2, 0, 0, 0, 0]' : 0.206855}", "{'[2, 1, 5, 0, 6, 0, 0, 0, 5, 0, 29, 4, 0, 2, 0, 0, 0, 0]' : 0.202172}", "{'[2, 1, 5, 0, 6, 0, 0, 0, 5, 0, 29, 4, 0, 2, 0, 0, 0, 0]' : 0.200654}", "{'[2, 1, 5, 0, 6, 0, 0, 0, 5, 0, 29, 4, 0, 2, 0, 0, 0, 0]' : 0.204898}", "{'[2, 1, 5, 0, 6, 0, 0, 0, 5, 0, 29, 4, 0, 2, 0, 0, 0, 0]' : 0.198453}", "{'[2, 1, 5, 0, 6, 0, 0, 0, 5, 0, 29, 4, 0, 2, 0, 0, 0, 0]' : 0.208036}", "{'[2, 1, 5, 0, 6, 0, 0, 0, 5, 0, 29, 4, 0, 2, 0, 0, 0, 0]' : 0.208339}", "{'[2, 1, 5, 0, 6, 0, 0, 0, 5, 0, 29, 4, 0, 2, 0, 0, 0, 0]' : 0.204868}", "{'[2, 1, 5, 0, 6, 0, 0, 0, 5, 0, 29, 4, 0, 2, 0, 0, 0, 0]' : 0.20409}", "{'[2, 1, 5, 0, 6, 0, 0, 0, 5, 0, 29, 4, 0, 2, 0, 0, 0, 0]' : 0.19849}", "{'[2, 1, 5, 0, 6, 0, 0, 0, 5, 0, 29, 4, 0, 2, 0, 0, 0, 0]' : 0.207878}", "{'[2, 1, 5, 0, 6, 0, 0, 0, 5, 0, 29, 4, 0, 2, 0, 0, 0, 0]' : 0.208566}", "{'[2, 1, 5, 0, 6, 0, 0, 0, 5, 0, 29, 4, 0, 2, 0, 0, 0, 0]' : 0.204876}", "{'[2, 1, 5, 0, 6, 0, 0, 0, 5, 0, 29, 4, 0, 2, 0, 0, 0, 0]' : 0.201777}", "{'[2, 1, 5, 0, 6, 0, 0, 0, 5, 0, 29, 4, 0, 2, 0, 0, 0, 0]' : 0.199019}", "{'[2, 1, 5, 0, 6, 0, 0, 0, 5, 0, 29, 4, 0, 2, 0, 0, 0, 0]' : 0.207325}", "{'[2, 1, 5, 0, 6, 0, 0, 0, 5, 0, 29, 4, 0, 2, 0, 0, 0, 0]' : 0.208418}", "{'[2, 1, 5, 0, 6, 0, 0, 0, 5, 0, 29, 4, 0, 2, 0, 0, 0, 0]' : 0.208746}", "{'[2, 1, 5, 0, 6, 0, 0, 0, 5, 0, 29, 4, 0, 2, 0, 0, 0, 0]' : 0.211784}", "{'[2, 1, 5, 0, 6, 0, 0, 0, 5, 0, 29, 4, 0, 2, 0, 0, 0, 0]' : 0.210999}", "{'[2, 1, 5, 0, 6, 0, 0, 0, 5, 0, 29, 4, 0, 2, 0, 0, 0, 0]' : 0.210994}", "{'[2, 1, 5, 0, 6, 0, 0, 0, 5, 0, 29, 4, 0, 2, 0, 0, 0, 0]' : 0.211117}", "{'[2, 1, 5, 0, 6, 0, 0, 0, 5, 0, 29, 4, 0, 2, 0, 0, 0, 0]' : 0.205822}", "{'[2, 1, 5, 0, 6, 0, 0, 0, 5, 0, 29, 4, 0, 2, 0, 0, 0, 0]' : 0.205125}", "{'[2, 1, 5, 0, 6, 0, 0, 0, 5, 0, 29, 4, 0, 2, 0, 0, 0, 0]' : 0.208275}", "{'[2, 1, 5, 0, 6, 0, 0, 0, 5, 0, 29, 4, 0, 2, 0, 0, 0, 0]' : 0.211037}", "{'[2, 1, 5, 0, 6, 0, 0, 0, 5, 0, 29, 4, 0, 2, 0, 0, 0, 0]' : 0.211159}", "{'[2, 1, 5, 0, 6, 0, 0, 0, 5, 0, 29, 4, 0, 2, 0, 0, 0, 0]' : 0.210998}"]
returning from 'run': {'[2, 1, 5, 0, 6, 0, 0, 0, 5, 0, 29, 4, 0, 2, 0, 0, 0, 0]': ([0.205121, 0.198907, 0.206855, 0.202172, 0.200654, 0.204898, 0.198453, 0.208036, 0.208339, 0.204868, 0.20409, 0.19849, 0.207878, 0.208566, 0.204876, 0.201777, 0.199019, 0.207325, 0.208418, 0.208746, 0.211784, 0.210999, 0.210994, 0.211117, 0.205822, 0.205125, 0.208275, 0.211037, 0.211159, 0.210998], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 1, 5, 0, 6, 0, 0, 0, 5, 0, 29, 4, 0, 2, 0, 0, 0, 0]': ([0.205121, 0.198907, 0.206855, 0.202172, 0.200654, 0.204898, 0.198453, 0.208036, 0.208339, 0.204868, 0.20409, 0.19849, 0.207878, 0.208566, 0.204876, 0.201777, 0.199019, 0.207325, 0.208418, 0.208746, 0.211784, 0.210999, 0.210994, 0.211117, 0.205822, 0.205125, 0.208275, 0.211037, 0.211159, 0.210998], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	36
        Max loop nest depth: 	5
        Additions: 		1440
        Multiplications: 	580
        Divisions: 		0
        Logical: 		0
        Reads: 			2744
        Writes: 		486
        Comparisons:		36
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest5.exe __orio_perftest5.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest5.exe  
Program Test Output: 
{'[1, 0, 0, 2, 3, 6, 0, 0, 12, 8, 10, 0, 0, 1, 1, 1, 0, 1]' : 0.117732}
{'[1, 0, 0, 2, 3, 6, 0, 0, 12, 8, 10, 0, 0, 1, 1, 1, 0, 1]' : 0.118264}
{'[1, 0, 0, 2, 3, 6, 0, 0, 12, 8, 10, 0, 0, 1, 1, 1, 0, 1]' : 0.117836}
{'[1, 0, 0, 2, 3, 6, 0, 0, 12, 8, 10, 0, 0, 1, 1, 1, 0, 1]' : 0.119376}
{'[1, 0, 0, 2, 3, 6, 0, 0, 12, 8, 10, 0, 0, 1, 1, 1, 0, 1]' : 0.12062}
{'[1, 0, 0, 2, 3, 6, 0, 0, 12, 8, 10, 0, 0, 1, 1, 1, 0, 1]' : 0.120659}
{'[1, 0, 0, 2, 3, 6, 0, 0, 12, 8, 10, 0, 0, 1, 1, 1, 0, 1]' : 0.120636}
{'[1, 0, 0, 2, 3, 6, 0, 0, 12, 8, 10, 0, 0, 1, 1, 1, 0, 1]' : 0.120658}
{'[1, 0, 0, 2, 3, 6, 0, 0, 12, 8, 10, 0, 0, 1, 1, 1, 0, 1]' : 0.12061}
{'[1, 0, 0, 2, 3, 6, 0, 0, 12, 8, 10, 0, 0, 1, 1, 1, 0, 1]' : 0.120593}
{'[1, 0, 0, 2, 3, 6, 0, 0, 12, 8, 10, 0, 0, 1, 1, 1, 0, 1]' : 0.12059}
{'[1, 0, 0, 2, 3, 6, 0, 0, 12, 8, 10, 0, 0, 1, 1, 1, 0, 1]' : 0.120627}
{'[1, 0, 0, 2, 3, 6, 0, 0, 12, 8, 10, 0, 0, 1, 1, 1, 0, 1]' : 0.12065}
{'[1, 0, 0, 2, 3, 6, 0, 0, 12, 8, 10, 0, 0, 1, 1, 1, 0, 1]' : 0.120607}
{'[1, 0, 0, 2, 3, 6, 0, 0, 12, 8, 10, 0, 0, 1, 1, 1, 0, 1]' : 0.120656}
{'[1, 0, 0, 2, 3, 6, 0, 0, 12, 8, 10, 0, 0, 1, 1, 1, 0, 1]' : 0.120515}
{'[1, 0, 0, 2, 3, 6, 0, 0, 12, 8, 10, 0, 0, 1, 1, 1, 0, 1]' : 0.117907}
{'[1, 0, 0, 2, 3, 6, 0, 0, 12, 8, 10, 0, 0, 1, 1, 1, 0, 1]' : 0.11806}
{'[1, 0, 0, 2, 3, 6, 0, 0, 12, 8, 10, 0, 0, 1, 1, 1, 0, 1]' : 0.117748}
{'[1, 0, 0, 2, 3, 6, 0, 0, 12, 8, 10, 0, 0, 1, 1, 1, 0, 1]' : 0.117779}
{'[1, 0, 0, 2, 3, 6, 0, 0, 12, 8, 10, 0, 0, 1, 1, 1, 0, 1]' : 0.12026}
{'[1, 0, 0, 2, 3, 6, 0, 0, 12, 8, 10, 0, 0, 1, 1, 1, 0, 1]' : 0.120643}
{'[1, 0, 0, 2, 3, 6, 0, 0, 12, 8, 10, 0, 0, 1, 1, 1, 0, 1]' : 0.12055}
{'[1, 0, 0, 2, 3, 6, 0, 0, 12, 8, 10, 0, 0, 1, 1, 1, 0, 1]' : 0.119907}
{'[1, 0, 0, 2, 3, 6, 0, 0, 12, 8, 10, 0, 0, 1, 1, 1, 0, 1]' : 0.119914}
{'[1, 0, 0, 2, 3, 6, 0, 0, 12, 8, 10, 0, 0, 1, 1, 1, 0, 1]' : 0.120546}
{'[1, 0, 0, 2, 3, 6, 0, 0, 12, 8, 10, 0, 0, 1, 1, 1, 0, 1]' : 0.120595}
{'[1, 0, 0, 2, 3, 6, 0, 0, 12, 8, 10, 0, 0, 1, 1, 1, 0, 1]' : 0.120611}
{'[1, 0, 0, 2, 3, 6, 0, 0, 12, 8, 10, 0, 0, 1, 1, 1, 0, 1]' : 0.120653}
{'[1, 0, 0, 2, 3, 6, 0, 0, 12, 8, 10, 0, 0, 1, 1, 1, 0, 1]' : 0.120559}

out:
 ["{'[1, 0, 0, 2, 3, 6, 0, 0, 12, 8, 10, 0, 0, 1, 1, 1, 0, 1]' : 0.117732}", "{'[1, 0, 0, 2, 3, 6, 0, 0, 12, 8, 10, 0, 0, 1, 1, 1, 0, 1]' : 0.118264}", "{'[1, 0, 0, 2, 3, 6, 0, 0, 12, 8, 10, 0, 0, 1, 1, 1, 0, 1]' : 0.117836}", "{'[1, 0, 0, 2, 3, 6, 0, 0, 12, 8, 10, 0, 0, 1, 1, 1, 0, 1]' : 0.119376}", "{'[1, 0, 0, 2, 3, 6, 0, 0, 12, 8, 10, 0, 0, 1, 1, 1, 0, 1]' : 0.12062}", "{'[1, 0, 0, 2, 3, 6, 0, 0, 12, 8, 10, 0, 0, 1, 1, 1, 0, 1]' : 0.120659}", "{'[1, 0, 0, 2, 3, 6, 0, 0, 12, 8, 10, 0, 0, 1, 1, 1, 0, 1]' : 0.120636}", "{'[1, 0, 0, 2, 3, 6, 0, 0, 12, 8, 10, 0, 0, 1, 1, 1, 0, 1]' : 0.120658}", "{'[1, 0, 0, 2, 3, 6, 0, 0, 12, 8, 10, 0, 0, 1, 1, 1, 0, 1]' : 0.12061}", "{'[1, 0, 0, 2, 3, 6, 0, 0, 12, 8, 10, 0, 0, 1, 1, 1, 0, 1]' : 0.120593}", "{'[1, 0, 0, 2, 3, 6, 0, 0, 12, 8, 10, 0, 0, 1, 1, 1, 0, 1]' : 0.12059}", "{'[1, 0, 0, 2, 3, 6, 0, 0, 12, 8, 10, 0, 0, 1, 1, 1, 0, 1]' : 0.120627}", "{'[1, 0, 0, 2, 3, 6, 0, 0, 12, 8, 10, 0, 0, 1, 1, 1, 0, 1]' : 0.12065}", "{'[1, 0, 0, 2, 3, 6, 0, 0, 12, 8, 10, 0, 0, 1, 1, 1, 0, 1]' : 0.120607}", "{'[1, 0, 0, 2, 3, 6, 0, 0, 12, 8, 10, 0, 0, 1, 1, 1, 0, 1]' : 0.120656}", "{'[1, 0, 0, 2, 3, 6, 0, 0, 12, 8, 10, 0, 0, 1, 1, 1, 0, 1]' : 0.120515}", "{'[1, 0, 0, 2, 3, 6, 0, 0, 12, 8, 10, 0, 0, 1, 1, 1, 0, 1]' : 0.117907}", "{'[1, 0, 0, 2, 3, 6, 0, 0, 12, 8, 10, 0, 0, 1, 1, 1, 0, 1]' : 0.11806}", "{'[1, 0, 0, 2, 3, 6, 0, 0, 12, 8, 10, 0, 0, 1, 1, 1, 0, 1]' : 0.117748}", "{'[1, 0, 0, 2, 3, 6, 0, 0, 12, 8, 10, 0, 0, 1, 1, 1, 0, 1]' : 0.117779}", "{'[1, 0, 0, 2, 3, 6, 0, 0, 12, 8, 10, 0, 0, 1, 1, 1, 0, 1]' : 0.12026}", "{'[1, 0, 0, 2, 3, 6, 0, 0, 12, 8, 10, 0, 0, 1, 1, 1, 0, 1]' : 0.120643}", "{'[1, 0, 0, 2, 3, 6, 0, 0, 12, 8, 10, 0, 0, 1, 1, 1, 0, 1]' : 0.12055}", "{'[1, 0, 0, 2, 3, 6, 0, 0, 12, 8, 10, 0, 0, 1, 1, 1, 0, 1]' : 0.119907}", "{'[1, 0, 0, 2, 3, 6, 0, 0, 12, 8, 10, 0, 0, 1, 1, 1, 0, 1]' : 0.119914}", "{'[1, 0, 0, 2, 3, 6, 0, 0, 12, 8, 10, 0, 0, 1, 1, 1, 0, 1]' : 0.120546}", "{'[1, 0, 0, 2, 3, 6, 0, 0, 12, 8, 10, 0, 0, 1, 1, 1, 0, 1]' : 0.120595}", "{'[1, 0, 0, 2, 3, 6, 0, 0, 12, 8, 10, 0, 0, 1, 1, 1, 0, 1]' : 0.120611}", "{'[1, 0, 0, 2, 3, 6, 0, 0, 12, 8, 10, 0, 0, 1, 1, 1, 0, 1]' : 0.120653}", "{'[1, 0, 0, 2, 3, 6, 0, 0, 12, 8, 10, 0, 0, 1, 1, 1, 0, 1]' : 0.120559}"]
returning from 'run': {'[1, 0, 0, 2, 3, 6, 0, 0, 12, 8, 10, 0, 0, 1, 1, 1, 0, 1]': ([0.117732, 0.118264, 0.117836, 0.119376, 0.12062, 0.120659, 0.120636, 0.120658, 0.12061, 0.120593, 0.12059, 0.120627, 0.12065, 0.120607, 0.120656, 0.120515, 0.117907, 0.11806, 0.117748, 0.117779, 0.12026, 0.120643, 0.12055, 0.119907, 0.119914, 0.120546, 0.120595, 0.120611, 0.120653, 0.120559], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 0, 2, 3, 6, 0, 0, 12, 8, 10, 0, 0, 1, 1, 1, 0, 1]': ([0.117732, 0.118264, 0.117836, 0.119376, 0.12062, 0.120659, 0.120636, 0.120658, 0.12061, 0.120593, 0.12059, 0.120627, 0.12065, 0.120607, 0.120656, 0.120515, 0.117907, 0.11806, 0.117748, 0.117779, 0.12026, 0.120643, 0.12055, 0.119907, 0.119914, 0.120546, 0.120595, 0.120611, 0.120653, 0.120559], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = iii
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		177
        Multiplications: 	44
        Divisions: 		0
        Logical: 		0
        Reads: 			391
        Writes: 		98
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest6.exe __orio_perftest6.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest6.exe  
Program Test Output: 
{'[6, 2, 3, 4, 2, 0, 0, 1, 25, 0, 12, 3, 0, 0, 1, 1, 0, 1]' : 0.222178}
{'[6, 2, 3, 4, 2, 0, 0, 1, 25, 0, 12, 3, 0, 0, 1, 1, 0, 1]' : 0.222144}
{'[6, 2, 3, 4, 2, 0, 0, 1, 25, 0, 12, 3, 0, 0, 1, 1, 0, 1]' : 0.221983}
{'[6, 2, 3, 4, 2, 0, 0, 1, 25, 0, 12, 3, 0, 0, 1, 1, 0, 1]' : 0.196944}
{'[6, 2, 3, 4, 2, 0, 0, 1, 25, 0, 12, 3, 0, 0, 1, 1, 0, 1]' : 0.196878}
{'[6, 2, 3, 4, 2, 0, 0, 1, 25, 0, 12, 3, 0, 0, 1, 1, 0, 1]' : 0.196857}
{'[6, 2, 3, 4, 2, 0, 0, 1, 25, 0, 12, 3, 0, 0, 1, 1, 0, 1]' : 0.193464}
{'[6, 2, 3, 4, 2, 0, 0, 1, 25, 0, 12, 3, 0, 0, 1, 1, 0, 1]' : 0.191597}
{'[6, 2, 3, 4, 2, 0, 0, 1, 25, 0, 12, 3, 0, 0, 1, 1, 0, 1]' : 0.191559}
{'[6, 2, 3, 4, 2, 0, 0, 1, 25, 0, 12, 3, 0, 0, 1, 1, 0, 1]' : 0.192807}
{'[6, 2, 3, 4, 2, 0, 0, 1, 25, 0, 12, 3, 0, 0, 1, 1, 0, 1]' : 0.19687}
{'[6, 2, 3, 4, 2, 0, 0, 1, 25, 0, 12, 3, 0, 0, 1, 1, 0, 1]' : 0.196881}
{'[6, 2, 3, 4, 2, 0, 0, 1, 25, 0, 12, 3, 0, 0, 1, 1, 0, 1]' : 0.196982}
{'[6, 2, 3, 4, 2, 0, 0, 1, 25, 0, 12, 3, 0, 0, 1, 1, 0, 1]' : 0.19698}
{'[6, 2, 3, 4, 2, 0, 0, 1, 25, 0, 12, 3, 0, 0, 1, 1, 0, 1]' : 0.19694}
{'[6, 2, 3, 4, 2, 0, 0, 1, 25, 0, 12, 3, 0, 0, 1, 1, 0, 1]' : 0.196979}
{'[6, 2, 3, 4, 2, 0, 0, 1, 25, 0, 12, 3, 0, 0, 1, 1, 0, 1]' : 0.196956}
{'[6, 2, 3, 4, 2, 0, 0, 1, 25, 0, 12, 3, 0, 0, 1, 1, 0, 1]' : 0.196935}
{'[6, 2, 3, 4, 2, 0, 0, 1, 25, 0, 12, 3, 0, 0, 1, 1, 0, 1]' : 0.196992}
{'[6, 2, 3, 4, 2, 0, 0, 1, 25, 0, 12, 3, 0, 0, 1, 1, 0, 1]' : 0.197142}
{'[6, 2, 3, 4, 2, 0, 0, 1, 25, 0, 12, 3, 0, 0, 1, 1, 0, 1]' : 0.1934}
{'[6, 2, 3, 4, 2, 0, 0, 1, 25, 0, 12, 3, 0, 0, 1, 1, 0, 1]' : 0.191001}
{'[6, 2, 3, 4, 2, 0, 0, 1, 25, 0, 12, 3, 0, 0, 1, 1, 0, 1]' : 0.193609}
{'[6, 2, 3, 4, 2, 0, 0, 1, 25, 0, 12, 3, 0, 0, 1, 1, 0, 1]' : 0.197371}
{'[6, 2, 3, 4, 2, 0, 0, 1, 25, 0, 12, 3, 0, 0, 1, 1, 0, 1]' : 0.197068}
{'[6, 2, 3, 4, 2, 0, 0, 1, 25, 0, 12, 3, 0, 0, 1, 1, 0, 1]' : 0.196919}
{'[6, 2, 3, 4, 2, 0, 0, 1, 25, 0, 12, 3, 0, 0, 1, 1, 0, 1]' : 0.195781}
{'[6, 2, 3, 4, 2, 0, 0, 1, 25, 0, 12, 3, 0, 0, 1, 1, 0, 1]' : 0.193631}
{'[6, 2, 3, 4, 2, 0, 0, 1, 25, 0, 12, 3, 0, 0, 1, 1, 0, 1]' : 0.197004}
{'[6, 2, 3, 4, 2, 0, 0, 1, 25, 0, 12, 3, 0, 0, 1, 1, 0, 1]' : 0.196963}

out:
 ["{'[6, 2, 3, 4, 2, 0, 0, 1, 25, 0, 12, 3, 0, 0, 1, 1, 0, 1]' : 0.222178}", "{'[6, 2, 3, 4, 2, 0, 0, 1, 25, 0, 12, 3, 0, 0, 1, 1, 0, 1]' : 0.222144}", "{'[6, 2, 3, 4, 2, 0, 0, 1, 25, 0, 12, 3, 0, 0, 1, 1, 0, 1]' : 0.221983}", "{'[6, 2, 3, 4, 2, 0, 0, 1, 25, 0, 12, 3, 0, 0, 1, 1, 0, 1]' : 0.196944}", "{'[6, 2, 3, 4, 2, 0, 0, 1, 25, 0, 12, 3, 0, 0, 1, 1, 0, 1]' : 0.196878}", "{'[6, 2, 3, 4, 2, 0, 0, 1, 25, 0, 12, 3, 0, 0, 1, 1, 0, 1]' : 0.196857}", "{'[6, 2, 3, 4, 2, 0, 0, 1, 25, 0, 12, 3, 0, 0, 1, 1, 0, 1]' : 0.193464}", "{'[6, 2, 3, 4, 2, 0, 0, 1, 25, 0, 12, 3, 0, 0, 1, 1, 0, 1]' : 0.191597}", "{'[6, 2, 3, 4, 2, 0, 0, 1, 25, 0, 12, 3, 0, 0, 1, 1, 0, 1]' : 0.191559}", "{'[6, 2, 3, 4, 2, 0, 0, 1, 25, 0, 12, 3, 0, 0, 1, 1, 0, 1]' : 0.192807}", "{'[6, 2, 3, 4, 2, 0, 0, 1, 25, 0, 12, 3, 0, 0, 1, 1, 0, 1]' : 0.19687}", "{'[6, 2, 3, 4, 2, 0, 0, 1, 25, 0, 12, 3, 0, 0, 1, 1, 0, 1]' : 0.196881}", "{'[6, 2, 3, 4, 2, 0, 0, 1, 25, 0, 12, 3, 0, 0, 1, 1, 0, 1]' : 0.196982}", "{'[6, 2, 3, 4, 2, 0, 0, 1, 25, 0, 12, 3, 0, 0, 1, 1, 0, 1]' : 0.19698}", "{'[6, 2, 3, 4, 2, 0, 0, 1, 25, 0, 12, 3, 0, 0, 1, 1, 0, 1]' : 0.19694}", "{'[6, 2, 3, 4, 2, 0, 0, 1, 25, 0, 12, 3, 0, 0, 1, 1, 0, 1]' : 0.196979}", "{'[6, 2, 3, 4, 2, 0, 0, 1, 25, 0, 12, 3, 0, 0, 1, 1, 0, 1]' : 0.196956}", "{'[6, 2, 3, 4, 2, 0, 0, 1, 25, 0, 12, 3, 0, 0, 1, 1, 0, 1]' : 0.196935}", "{'[6, 2, 3, 4, 2, 0, 0, 1, 25, 0, 12, 3, 0, 0, 1, 1, 0, 1]' : 0.196992}", "{'[6, 2, 3, 4, 2, 0, 0, 1, 25, 0, 12, 3, 0, 0, 1, 1, 0, 1]' : 0.197142}", "{'[6, 2, 3, 4, 2, 0, 0, 1, 25, 0, 12, 3, 0, 0, 1, 1, 0, 1]' : 0.1934}", "{'[6, 2, 3, 4, 2, 0, 0, 1, 25, 0, 12, 3, 0, 0, 1, 1, 0, 1]' : 0.191001}", "{'[6, 2, 3, 4, 2, 0, 0, 1, 25, 0, 12, 3, 0, 0, 1, 1, 0, 1]' : 0.193609}", "{'[6, 2, 3, 4, 2, 0, 0, 1, 25, 0, 12, 3, 0, 0, 1, 1, 0, 1]' : 0.197371}", "{'[6, 2, 3, 4, 2, 0, 0, 1, 25, 0, 12, 3, 0, 0, 1, 1, 0, 1]' : 0.197068}", "{'[6, 2, 3, 4, 2, 0, 0, 1, 25, 0, 12, 3, 0, 0, 1, 1, 0, 1]' : 0.196919}", "{'[6, 2, 3, 4, 2, 0, 0, 1, 25, 0, 12, 3, 0, 0, 1, 1, 0, 1]' : 0.195781}", "{'[6, 2, 3, 4, 2, 0, 0, 1, 25, 0, 12, 3, 0, 0, 1, 1, 0, 1]' : 0.193631}", "{'[6, 2, 3, 4, 2, 0, 0, 1, 25, 0, 12, 3, 0, 0, 1, 1, 0, 1]' : 0.197004}", "{'[6, 2, 3, 4, 2, 0, 0, 1, 25, 0, 12, 3, 0, 0, 1, 1, 0, 1]' : 0.196963}"]
returning from 'run': {'[6, 2, 3, 4, 2, 0, 0, 1, 25, 0, 12, 3, 0, 0, 1, 1, 0, 1]': ([0.222178, 0.222144, 0.221983, 0.196944, 0.196878, 0.196857, 0.193464, 0.191597, 0.191559, 0.192807, 0.19687, 0.196881, 0.196982, 0.19698, 0.19694, 0.196979, 0.196956, 0.196935, 0.196992, 0.197142, 0.1934, 0.191001, 0.193609, 0.197371, 0.197068, 0.196919, 0.195781, 0.193631, 0.197004, 0.196963], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 2, 3, 4, 2, 0, 0, 1, 25, 0, 12, 3, 0, 0, 1, 1, 0, 1]': ([0.222178, 0.222144, 0.221983, 0.196944, 0.196878, 0.196857, 0.193464, 0.191597, 0.191559, 0.192807, 0.19687, 0.196881, 0.196982, 0.19698, 0.19694, 0.196979, 0.196956, 0.196935, 0.196992, 0.197142, 0.1934, 0.191001, 0.193609, 0.197371, 0.197068, 0.196919, 0.195781, 0.193631, 0.197004, 0.196963], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		436
        Multiplications: 	144
        Divisions: 		0
        Logical: 		0
        Reads: 			943
        Writes: 		135
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest7.exe __orio_perftest7.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest7.exe  
Program Test Output: 
{'[5, 2, 0, 0, 0, 6, 0, 1, 22, 0, 12, 24, 0, 2, 0, 0, 1, 1]' : 0.24419}
{'[5, 2, 0, 0, 0, 6, 0, 1, 22, 0, 12, 24, 0, 2, 0, 0, 1, 1]' : 0.244287}
{'[5, 2, 0, 0, 0, 6, 0, 1, 22, 0, 12, 24, 0, 2, 0, 0, 1, 1]' : 0.220334}
{'[5, 2, 0, 0, 0, 6, 0, 1, 22, 0, 12, 24, 0, 2, 0, 0, 1, 1]' : 0.210165}
{'[5, 2, 0, 0, 0, 6, 0, 1, 22, 0, 12, 24, 0, 2, 0, 0, 1, 1]' : 0.21187}
{'[5, 2, 0, 0, 0, 6, 0, 1, 22, 0, 12, 24, 0, 2, 0, 0, 1, 1]' : 0.216277}
{'[5, 2, 0, 0, 0, 6, 0, 1, 22, 0, 12, 24, 0, 2, 0, 0, 1, 1]' : 0.216504}
{'[5, 2, 0, 0, 0, 6, 0, 1, 22, 0, 12, 24, 0, 2, 0, 0, 1, 1]' : 0.216363}
{'[5, 2, 0, 0, 0, 6, 0, 1, 22, 0, 12, 24, 0, 2, 0, 0, 1, 1]' : 0.213891}
{'[5, 2, 0, 0, 0, 6, 0, 1, 22, 0, 12, 24, 0, 2, 0, 0, 1, 1]' : 0.207743}
{'[5, 2, 0, 0, 0, 6, 0, 1, 22, 0, 12, 24, 0, 2, 0, 0, 1, 1]' : 0.209989}
{'[5, 2, 0, 0, 0, 6, 0, 1, 22, 0, 12, 24, 0, 2, 0, 0, 1, 1]' : 0.2102}
{'[5, 2, 0, 0, 0, 6, 0, 1, 22, 0, 12, 24, 0, 2, 0, 0, 1, 1]' : 0.209949}
{'[5, 2, 0, 0, 0, 6, 0, 1, 22, 0, 12, 24, 0, 2, 0, 0, 1, 1]' : 0.210339}
{'[5, 2, 0, 0, 0, 6, 0, 1, 22, 0, 12, 24, 0, 2, 0, 0, 1, 1]' : 0.215518}
{'[5, 2, 0, 0, 0, 6, 0, 1, 22, 0, 12, 24, 0, 2, 0, 0, 1, 1]' : 0.216502}
{'[5, 2, 0, 0, 0, 6, 0, 1, 22, 0, 12, 24, 0, 2, 0, 0, 1, 1]' : 0.213722}
{'[5, 2, 0, 0, 0, 6, 0, 1, 22, 0, 12, 24, 0, 2, 0, 0, 1, 1]' : 0.210076}
{'[5, 2, 0, 0, 0, 6, 0, 1, 22, 0, 12, 24, 0, 2, 0, 0, 1, 1]' : 0.21129}
{'[5, 2, 0, 0, 0, 6, 0, 1, 22, 0, 12, 24, 0, 2, 0, 0, 1, 1]' : 0.216311}
{'[5, 2, 0, 0, 0, 6, 0, 1, 22, 0, 12, 24, 0, 2, 0, 0, 1, 1]' : 0.216327}
{'[5, 2, 0, 0, 0, 6, 0, 1, 22, 0, 12, 24, 0, 2, 0, 0, 1, 1]' : 0.207815}
{'[5, 2, 0, 0, 0, 6, 0, 1, 22, 0, 12, 24, 0, 2, 0, 0, 1, 1]' : 0.203747}
{'[5, 2, 0, 0, 0, 6, 0, 1, 22, 0, 12, 24, 0, 2, 0, 0, 1, 1]' : 0.207169}
{'[5, 2, 0, 0, 0, 6, 0, 1, 22, 0, 12, 24, 0, 2, 0, 0, 1, 1]' : 0.210216}
{'[5, 2, 0, 0, 0, 6, 0, 1, 22, 0, 12, 24, 0, 2, 0, 0, 1, 1]' : 0.210281}
{'[5, 2, 0, 0, 0, 6, 0, 1, 22, 0, 12, 24, 0, 2, 0, 0, 1, 1]' : 0.210067}
{'[5, 2, 0, 0, 0, 6, 0, 1, 22, 0, 12, 24, 0, 2, 0, 0, 1, 1]' : 0.207393}
{'[5, 2, 0, 0, 0, 6, 0, 1, 22, 0, 12, 24, 0, 2, 0, 0, 1, 1]' : 0.207756}
{'[5, 2, 0, 0, 0, 6, 0, 1, 22, 0, 12, 24, 0, 2, 0, 0, 1, 1]' : 0.210353}

out:
 ["{'[5, 2, 0, 0, 0, 6, 0, 1, 22, 0, 12, 24, 0, 2, 0, 0, 1, 1]' : 0.24419}", "{'[5, 2, 0, 0, 0, 6, 0, 1, 22, 0, 12, 24, 0, 2, 0, 0, 1, 1]' : 0.244287}", "{'[5, 2, 0, 0, 0, 6, 0, 1, 22, 0, 12, 24, 0, 2, 0, 0, 1, 1]' : 0.220334}", "{'[5, 2, 0, 0, 0, 6, 0, 1, 22, 0, 12, 24, 0, 2, 0, 0, 1, 1]' : 0.210165}", "{'[5, 2, 0, 0, 0, 6, 0, 1, 22, 0, 12, 24, 0, 2, 0, 0, 1, 1]' : 0.21187}", "{'[5, 2, 0, 0, 0, 6, 0, 1, 22, 0, 12, 24, 0, 2, 0, 0, 1, 1]' : 0.216277}", "{'[5, 2, 0, 0, 0, 6, 0, 1, 22, 0, 12, 24, 0, 2, 0, 0, 1, 1]' : 0.216504}", "{'[5, 2, 0, 0, 0, 6, 0, 1, 22, 0, 12, 24, 0, 2, 0, 0, 1, 1]' : 0.216363}", "{'[5, 2, 0, 0, 0, 6, 0, 1, 22, 0, 12, 24, 0, 2, 0, 0, 1, 1]' : 0.213891}", "{'[5, 2, 0, 0, 0, 6, 0, 1, 22, 0, 12, 24, 0, 2, 0, 0, 1, 1]' : 0.207743}", "{'[5, 2, 0, 0, 0, 6, 0, 1, 22, 0, 12, 24, 0, 2, 0, 0, 1, 1]' : 0.209989}", "{'[5, 2, 0, 0, 0, 6, 0, 1, 22, 0, 12, 24, 0, 2, 0, 0, 1, 1]' : 0.2102}", "{'[5, 2, 0, 0, 0, 6, 0, 1, 22, 0, 12, 24, 0, 2, 0, 0, 1, 1]' : 0.209949}", "{'[5, 2, 0, 0, 0, 6, 0, 1, 22, 0, 12, 24, 0, 2, 0, 0, 1, 1]' : 0.210339}", "{'[5, 2, 0, 0, 0, 6, 0, 1, 22, 0, 12, 24, 0, 2, 0, 0, 1, 1]' : 0.215518}", "{'[5, 2, 0, 0, 0, 6, 0, 1, 22, 0, 12, 24, 0, 2, 0, 0, 1, 1]' : 0.216502}", "{'[5, 2, 0, 0, 0, 6, 0, 1, 22, 0, 12, 24, 0, 2, 0, 0, 1, 1]' : 0.213722}", "{'[5, 2, 0, 0, 0, 6, 0, 1, 22, 0, 12, 24, 0, 2, 0, 0, 1, 1]' : 0.210076}", "{'[5, 2, 0, 0, 0, 6, 0, 1, 22, 0, 12, 24, 0, 2, 0, 0, 1, 1]' : 0.21129}", "{'[5, 2, 0, 0, 0, 6, 0, 1, 22, 0, 12, 24, 0, 2, 0, 0, 1, 1]' : 0.216311}", "{'[5, 2, 0, 0, 0, 6, 0, 1, 22, 0, 12, 24, 0, 2, 0, 0, 1, 1]' : 0.216327}", "{'[5, 2, 0, 0, 0, 6, 0, 1, 22, 0, 12, 24, 0, 2, 0, 0, 1, 1]' : 0.207815}", "{'[5, 2, 0, 0, 0, 6, 0, 1, 22, 0, 12, 24, 0, 2, 0, 0, 1, 1]' : 0.203747}", "{'[5, 2, 0, 0, 0, 6, 0, 1, 22, 0, 12, 24, 0, 2, 0, 0, 1, 1]' : 0.207169}", "{'[5, 2, 0, 0, 0, 6, 0, 1, 22, 0, 12, 24, 0, 2, 0, 0, 1, 1]' : 0.210216}", "{'[5, 2, 0, 0, 0, 6, 0, 1, 22, 0, 12, 24, 0, 2, 0, 0, 1, 1]' : 0.210281}", "{'[5, 2, 0, 0, 0, 6, 0, 1, 22, 0, 12, 24, 0, 2, 0, 0, 1, 1]' : 0.210067}", "{'[5, 2, 0, 0, 0, 6, 0, 1, 22, 0, 12, 24, 0, 2, 0, 0, 1, 1]' : 0.207393}", "{'[5, 2, 0, 0, 0, 6, 0, 1, 22, 0, 12, 24, 0, 2, 0, 0, 1, 1]' : 0.207756}", "{'[5, 2, 0, 0, 0, 6, 0, 1, 22, 0, 12, 24, 0, 2, 0, 0, 1, 1]' : 0.210353}"]
returning from 'run': {'[5, 2, 0, 0, 0, 6, 0, 1, 22, 0, 12, 24, 0, 2, 0, 0, 1, 1]': ([0.24419, 0.244287, 0.220334, 0.210165, 0.21187, 0.216277, 0.216504, 0.216363, 0.213891, 0.207743, 0.209989, 0.2102, 0.209949, 0.210339, 0.215518, 0.216502, 0.213722, 0.210076, 0.21129, 0.216311, 0.216327, 0.207815, 0.203747, 0.207169, 0.210216, 0.210281, 0.210067, 0.207393, 0.207756, 0.210353], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 2, 0, 0, 0, 6, 0, 1, 22, 0, 12, 24, 0, 2, 0, 0, 1, 1]': ([0.24419, 0.244287, 0.220334, 0.210165, 0.21187, 0.216277, 0.216504, 0.216363, 0.213891, 0.207743, 0.209989, 0.2102, 0.209949, 0.210339, 0.215518, 0.216502, 0.213722, 0.210076, 0.21129, 0.216311, 0.216327, 0.207815, 0.203747, 0.207169, 0.210216, 0.210281, 0.210067, 0.207393, 0.207756, 0.210353], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	40
        Max loop nest depth: 	5
        Additions: 		2170
        Multiplications: 	1000
        Divisions: 		0
        Logical: 		0
        Reads: 			4332
        Writes: 		766
        Comparisons:		40
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest8.exe __orio_perftest8.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest8.exe  
Program Test Output: 
{'[5, 0, 6, 6, 5, 4, 1, 0, 0, 23, 0, 17, 0, 0, 0, 1, 0, 1]' : 0.145049}
{'[5, 0, 6, 6, 5, 4, 1, 0, 0, 23, 0, 17, 0, 0, 0, 1, 0, 1]' : 0.140264}
{'[5, 0, 6, 6, 5, 4, 1, 0, 0, 23, 0, 17, 0, 0, 0, 1, 0, 1]' : 0.139702}
{'[5, 0, 6, 6, 5, 4, 1, 0, 0, 23, 0, 17, 0, 0, 0, 1, 0, 1]' : 0.142996}
{'[5, 0, 6, 6, 5, 4, 1, 0, 0, 23, 0, 17, 0, 0, 0, 1, 0, 1]' : 0.14353}
{'[5, 0, 6, 6, 5, 4, 1, 0, 0, 23, 0, 17, 0, 0, 0, 1, 0, 1]' : 0.143242}
{'[5, 0, 6, 6, 5, 4, 1, 0, 0, 23, 0, 17, 0, 0, 0, 1, 0, 1]' : 0.144267}
{'[5, 0, 6, 6, 5, 4, 1, 0, 0, 23, 0, 17, 0, 0, 0, 1, 0, 1]' : 0.144217}
{'[5, 0, 6, 6, 5, 4, 1, 0, 0, 23, 0, 17, 0, 0, 0, 1, 0, 1]' : 0.143078}
{'[5, 0, 6, 6, 5, 4, 1, 0, 0, 23, 0, 17, 0, 0, 0, 1, 0, 1]' : 0.143418}
{'[5, 0, 6, 6, 5, 4, 1, 0, 0, 23, 0, 17, 0, 0, 0, 1, 0, 1]' : 0.146386}
{'[5, 0, 6, 6, 5, 4, 1, 0, 0, 23, 0, 17, 0, 0, 0, 1, 0, 1]' : 0.143389}
{'[5, 0, 6, 6, 5, 4, 1, 0, 0, 23, 0, 17, 0, 0, 0, 1, 0, 1]' : 0.143635}
{'[5, 0, 6, 6, 5, 4, 1, 0, 0, 23, 0, 17, 0, 0, 0, 1, 0, 1]' : 0.144378}
{'[5, 0, 6, 6, 5, 4, 1, 0, 0, 23, 0, 17, 0, 0, 0, 1, 0, 1]' : 0.144698}
{'[5, 0, 6, 6, 5, 4, 1, 0, 0, 23, 0, 17, 0, 0, 0, 1, 0, 1]' : 0.143359}
{'[5, 0, 6, 6, 5, 4, 1, 0, 0, 23, 0, 17, 0, 0, 0, 1, 0, 1]' : 0.143572}
{'[5, 0, 6, 6, 5, 4, 1, 0, 0, 23, 0, 17, 0, 0, 0, 1, 0, 1]' : 0.145849}
{'[5, 0, 6, 6, 5, 4, 1, 0, 0, 23, 0, 17, 0, 0, 0, 1, 0, 1]' : 0.143429}
{'[5, 0, 6, 6, 5, 4, 1, 0, 0, 23, 0, 17, 0, 0, 0, 1, 0, 1]' : 0.143678}
{'[5, 0, 6, 6, 5, 4, 1, 0, 0, 23, 0, 17, 0, 0, 0, 1, 0, 1]' : 0.144792}
{'[5, 0, 6, 6, 5, 4, 1, 0, 0, 23, 0, 17, 0, 0, 0, 1, 0, 1]' : 0.144963}
{'[5, 0, 6, 6, 5, 4, 1, 0, 0, 23, 0, 17, 0, 0, 0, 1, 0, 1]' : 0.14336}
{'[5, 0, 6, 6, 5, 4, 1, 0, 0, 23, 0, 17, 0, 0, 0, 1, 0, 1]' : 0.143354}
{'[5, 0, 6, 6, 5, 4, 1, 0, 0, 23, 0, 17, 0, 0, 0, 1, 0, 1]' : 0.145751}
{'[5, 0, 6, 6, 5, 4, 1, 0, 0, 23, 0, 17, 0, 0, 0, 1, 0, 1]' : 0.143494}
{'[5, 0, 6, 6, 5, 4, 1, 0, 0, 23, 0, 17, 0, 0, 0, 1, 0, 1]' : 0.143328}
{'[5, 0, 6, 6, 5, 4, 1, 0, 0, 23, 0, 17, 0, 0, 0, 1, 0, 1]' : 0.1449}
{'[5, 0, 6, 6, 5, 4, 1, 0, 0, 23, 0, 17, 0, 0, 0, 1, 0, 1]' : 0.144307}
{'[5, 0, 6, 6, 5, 4, 1, 0, 0, 23, 0, 17, 0, 0, 0, 1, 0, 1]' : 0.143551}

out:
 ["{'[5, 0, 6, 6, 5, 4, 1, 0, 0, 23, 0, 17, 0, 0, 0, 1, 0, 1]' : 0.145049}", "{'[5, 0, 6, 6, 5, 4, 1, 0, 0, 23, 0, 17, 0, 0, 0, 1, 0, 1]' : 0.140264}", "{'[5, 0, 6, 6, 5, 4, 1, 0, 0, 23, 0, 17, 0, 0, 0, 1, 0, 1]' : 0.139702}", "{'[5, 0, 6, 6, 5, 4, 1, 0, 0, 23, 0, 17, 0, 0, 0, 1, 0, 1]' : 0.142996}", "{'[5, 0, 6, 6, 5, 4, 1, 0, 0, 23, 0, 17, 0, 0, 0, 1, 0, 1]' : 0.14353}", "{'[5, 0, 6, 6, 5, 4, 1, 0, 0, 23, 0, 17, 0, 0, 0, 1, 0, 1]' : 0.143242}", "{'[5, 0, 6, 6, 5, 4, 1, 0, 0, 23, 0, 17, 0, 0, 0, 1, 0, 1]' : 0.144267}", "{'[5, 0, 6, 6, 5, 4, 1, 0, 0, 23, 0, 17, 0, 0, 0, 1, 0, 1]' : 0.144217}", "{'[5, 0, 6, 6, 5, 4, 1, 0, 0, 23, 0, 17, 0, 0, 0, 1, 0, 1]' : 0.143078}", "{'[5, 0, 6, 6, 5, 4, 1, 0, 0, 23, 0, 17, 0, 0, 0, 1, 0, 1]' : 0.143418}", "{'[5, 0, 6, 6, 5, 4, 1, 0, 0, 23, 0, 17, 0, 0, 0, 1, 0, 1]' : 0.146386}", "{'[5, 0, 6, 6, 5, 4, 1, 0, 0, 23, 0, 17, 0, 0, 0, 1, 0, 1]' : 0.143389}", "{'[5, 0, 6, 6, 5, 4, 1, 0, 0, 23, 0, 17, 0, 0, 0, 1, 0, 1]' : 0.143635}", "{'[5, 0, 6, 6, 5, 4, 1, 0, 0, 23, 0, 17, 0, 0, 0, 1, 0, 1]' : 0.144378}", "{'[5, 0, 6, 6, 5, 4, 1, 0, 0, 23, 0, 17, 0, 0, 0, 1, 0, 1]' : 0.144698}", "{'[5, 0, 6, 6, 5, 4, 1, 0, 0, 23, 0, 17, 0, 0, 0, 1, 0, 1]' : 0.143359}", "{'[5, 0, 6, 6, 5, 4, 1, 0, 0, 23, 0, 17, 0, 0, 0, 1, 0, 1]' : 0.143572}", "{'[5, 0, 6, 6, 5, 4, 1, 0, 0, 23, 0, 17, 0, 0, 0, 1, 0, 1]' : 0.145849}", "{'[5, 0, 6, 6, 5, 4, 1, 0, 0, 23, 0, 17, 0, 0, 0, 1, 0, 1]' : 0.143429}", "{'[5, 0, 6, 6, 5, 4, 1, 0, 0, 23, 0, 17, 0, 0, 0, 1, 0, 1]' : 0.143678}", "{'[5, 0, 6, 6, 5, 4, 1, 0, 0, 23, 0, 17, 0, 0, 0, 1, 0, 1]' : 0.144792}", "{'[5, 0, 6, 6, 5, 4, 1, 0, 0, 23, 0, 17, 0, 0, 0, 1, 0, 1]' : 0.144963}", "{'[5, 0, 6, 6, 5, 4, 1, 0, 0, 23, 0, 17, 0, 0, 0, 1, 0, 1]' : 0.14336}", "{'[5, 0, 6, 6, 5, 4, 1, 0, 0, 23, 0, 17, 0, 0, 0, 1, 0, 1]' : 0.143354}", "{'[5, 0, 6, 6, 5, 4, 1, 0, 0, 23, 0, 17, 0, 0, 0, 1, 0, 1]' : 0.145751}", "{'[5, 0, 6, 6, 5, 4, 1, 0, 0, 23, 0, 17, 0, 0, 0, 1, 0, 1]' : 0.143494}", "{'[5, 0, 6, 6, 5, 4, 1, 0, 0, 23, 0, 17, 0, 0, 0, 1, 0, 1]' : 0.143328}", "{'[5, 0, 6, 6, 5, 4, 1, 0, 0, 23, 0, 17, 0, 0, 0, 1, 0, 1]' : 0.1449}", "{'[5, 0, 6, 6, 5, 4, 1, 0, 0, 23, 0, 17, 0, 0, 0, 1, 0, 1]' : 0.144307}", "{'[5, 0, 6, 6, 5, 4, 1, 0, 0, 23, 0, 17, 0, 0, 0, 1, 0, 1]' : 0.143551}"]
returning from 'run': {'[5, 0, 6, 6, 5, 4, 1, 0, 0, 23, 0, 17, 0, 0, 0, 1, 0, 1]': ([0.145049, 0.140264, 0.139702, 0.142996, 0.14353, 0.143242, 0.144267, 0.144217, 0.143078, 0.143418, 0.146386, 0.143389, 0.143635, 0.144378, 0.144698, 0.143359, 0.143572, 0.145849, 0.143429, 0.143678, 0.144792, 0.144963, 0.14336, 0.143354, 0.145751, 0.143494, 0.143328, 0.1449, 0.144307, 0.143551], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 0, 6, 6, 5, 4, 1, 0, 0, 23, 0, 17, 0, 0, 0, 1, 0, 1]': ([0.145049, 0.140264, 0.139702, 0.142996, 0.14353, 0.143242, 0.144267, 0.144217, 0.143078, 0.143418, 0.146386, 0.143389, 0.143635, 0.144378, 0.144698, 0.143359, 0.143572, 0.145849, 0.143429, 0.143678, 0.144792, 0.144963, 0.14336, 0.143354, 0.145751, 0.143494, 0.143328, 0.1449, 0.144307, 0.143551], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	27
        Max loop nest depth: 	4
        Additions: 		917
        Multiplications: 	408
        Divisions: 		0
        Logical: 		0
        Reads: 			1907
        Writes: 		351
        Comparisons:		27
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest9.exe __orio_perftest9.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest9.exe  
Program Test Output: 
{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 10, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.113096}
{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 10, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.113244}
{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 10, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.113067}
{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 10, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.112972}
{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 10, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.112654}
{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 10, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.110108}
{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 10, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.111798}
{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 10, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.112999}
{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 10, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.112854}
{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 10, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.110995}
{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 10, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.110484}
{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 10, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.112947}
{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 10, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.113039}
{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 10, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.112877}
{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 10, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.112927}
{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 10, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.113163}
{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 10, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.113075}
{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 10, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.112911}
{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 10, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.113088}
{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 10, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.112852}
{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 10, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.112976}
{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 10, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.112874}
{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 10, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.112882}
{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 10, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.112958}
{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 10, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.113102}
{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 10, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.112891}
{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 10, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.112957}
{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 10, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.112966}
{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 10, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.113028}
{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 10, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.112585}

out:
 ["{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 10, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.113096}", "{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 10, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.113244}", "{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 10, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.113067}", "{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 10, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.112972}", "{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 10, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.112654}", "{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 10, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.110108}", "{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 10, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.111798}", "{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 10, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.112999}", "{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 10, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.112854}", "{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 10, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.110995}", "{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 10, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.110484}", "{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 10, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.112947}", "{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 10, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.113039}", "{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 10, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.112877}", "{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 10, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.112927}", "{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 10, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.113163}", "{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 10, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.113075}", "{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 10, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.112911}", "{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 10, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.113088}", "{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 10, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.112852}", "{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 10, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.112976}", "{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 10, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.112874}", "{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 10, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.112882}", "{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 10, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.112958}", "{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 10, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.113102}", "{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 10, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.112891}", "{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 10, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.112957}", "{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 10, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.112966}", "{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 10, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.113028}", "{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 10, 25, 0, 0, 1, 1, 1, 0, 0]' : 0.112585}"]
returning from 'run': {'[0, 6, 2, 0, 0, 1, 1, 0, 0, 10, 25, 0, 0, 1, 1, 1, 0, 0]': ([0.113096, 0.113244, 0.113067, 0.112972, 0.112654, 0.110108, 0.111798, 0.112999, 0.112854, 0.110995, 0.110484, 0.112947, 0.113039, 0.112877, 0.112927, 0.113163, 0.113075, 0.112911, 0.113088, 0.112852, 0.112976, 0.112874, 0.112882, 0.112958, 0.113102, 0.112891, 0.112957, 0.112966, 0.113028, 0.112585], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 2, 0, 0, 1, 1, 0, 0, 10, 25, 0, 0, 1, 1, 1, 0, 0]': ([0.113096, 0.113244, 0.113067, 0.112972, 0.112654, 0.110108, 0.111798, 0.112999, 0.112854, 0.110995, 0.110484, 0.112947, 0.113039, 0.112877, 0.112927, 0.113163, 0.113075, 0.112911, 0.113088, 0.112852, 0.112976, 0.112874, 0.112882, 0.112958, 0.113102, 0.112891, 0.112957, 0.112966, 0.113028, 0.112585], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	6
        Additions: 		4339
        Multiplications: 	2112
        Divisions: 		0
        Logical: 		0
        Reads: 			8168
        Writes: 		1324
        Comparisons:		18
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest10.exe __orio_perftest10.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest10.exe  
Program Test Output: 
{'[3, 2, 5, 2, 3, 0, 0, 0, 29, 0, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.197089}
{'[3, 2, 5, 2, 3, 0, 0, 0, 29, 0, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.196086}
{'[3, 2, 5, 2, 3, 0, 0, 0, 29, 0, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.17485}
{'[3, 2, 5, 2, 3, 0, 0, 0, 29, 0, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.173235}
{'[3, 2, 5, 2, 3, 0, 0, 0, 29, 0, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.172576}
{'[3, 2, 5, 2, 3, 0, 0, 0, 29, 0, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.172138}
{'[3, 2, 5, 2, 3, 0, 0, 0, 29, 0, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.172265}
{'[3, 2, 5, 2, 3, 0, 0, 0, 29, 0, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.172398}
{'[3, 2, 5, 2, 3, 0, 0, 0, 29, 0, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.172733}
{'[3, 2, 5, 2, 3, 0, 0, 0, 29, 0, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.172563}
{'[3, 2, 5, 2, 3, 0, 0, 0, 29, 0, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.172999}
{'[3, 2, 5, 2, 3, 0, 0, 0, 29, 0, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.173044}
{'[3, 2, 5, 2, 3, 0, 0, 0, 29, 0, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.172592}
{'[3, 2, 5, 2, 3, 0, 0, 0, 29, 0, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.172629}
{'[3, 2, 5, 2, 3, 0, 0, 0, 29, 0, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.17253}
{'[3, 2, 5, 2, 3, 0, 0, 0, 29, 0, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.173079}
{'[3, 2, 5, 2, 3, 0, 0, 0, 29, 0, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.173434}
{'[3, 2, 5, 2, 3, 0, 0, 0, 29, 0, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.172754}
{'[3, 2, 5, 2, 3, 0, 0, 0, 29, 0, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.172677}
{'[3, 2, 5, 2, 3, 0, 0, 0, 29, 0, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.172575}
{'[3, 2, 5, 2, 3, 0, 0, 0, 29, 0, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.172807}
{'[3, 2, 5, 2, 3, 0, 0, 0, 29, 0, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.172529}
{'[3, 2, 5, 2, 3, 0, 0, 0, 29, 0, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.172385}
{'[3, 2, 5, 2, 3, 0, 0, 0, 29, 0, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.173022}
{'[3, 2, 5, 2, 3, 0, 0, 0, 29, 0, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.172686}
{'[3, 2, 5, 2, 3, 0, 0, 0, 29, 0, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.17301}
{'[3, 2, 5, 2, 3, 0, 0, 0, 29, 0, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.172973}
{'[3, 2, 5, 2, 3, 0, 0, 0, 29, 0, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.172185}
{'[3, 2, 5, 2, 3, 0, 0, 0, 29, 0, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.172497}
{'[3, 2, 5, 2, 3, 0, 0, 0, 29, 0, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.173199}

out:
 ["{'[3, 2, 5, 2, 3, 0, 0, 0, 29, 0, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.197089}", "{'[3, 2, 5, 2, 3, 0, 0, 0, 29, 0, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.196086}", "{'[3, 2, 5, 2, 3, 0, 0, 0, 29, 0, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.17485}", "{'[3, 2, 5, 2, 3, 0, 0, 0, 29, 0, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.173235}", "{'[3, 2, 5, 2, 3, 0, 0, 0, 29, 0, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.172576}", "{'[3, 2, 5, 2, 3, 0, 0, 0, 29, 0, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.172138}", "{'[3, 2, 5, 2, 3, 0, 0, 0, 29, 0, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.172265}", "{'[3, 2, 5, 2, 3, 0, 0, 0, 29, 0, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.172398}", "{'[3, 2, 5, 2, 3, 0, 0, 0, 29, 0, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.172733}", "{'[3, 2, 5, 2, 3, 0, 0, 0, 29, 0, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.172563}", "{'[3, 2, 5, 2, 3, 0, 0, 0, 29, 0, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.172999}", "{'[3, 2, 5, 2, 3, 0, 0, 0, 29, 0, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.173044}", "{'[3, 2, 5, 2, 3, 0, 0, 0, 29, 0, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.172592}", "{'[3, 2, 5, 2, 3, 0, 0, 0, 29, 0, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.172629}", "{'[3, 2, 5, 2, 3, 0, 0, 0, 29, 0, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.17253}", "{'[3, 2, 5, 2, 3, 0, 0, 0, 29, 0, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.173079}", "{'[3, 2, 5, 2, 3, 0, 0, 0, 29, 0, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.173434}", "{'[3, 2, 5, 2, 3, 0, 0, 0, 29, 0, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.172754}", "{'[3, 2, 5, 2, 3, 0, 0, 0, 29, 0, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.172677}", "{'[3, 2, 5, 2, 3, 0, 0, 0, 29, 0, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.172575}", "{'[3, 2, 5, 2, 3, 0, 0, 0, 29, 0, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.172807}", "{'[3, 2, 5, 2, 3, 0, 0, 0, 29, 0, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.172529}", "{'[3, 2, 5, 2, 3, 0, 0, 0, 29, 0, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.172385}", "{'[3, 2, 5, 2, 3, 0, 0, 0, 29, 0, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.173022}", "{'[3, 2, 5, 2, 3, 0, 0, 0, 29, 0, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.172686}", "{'[3, 2, 5, 2, 3, 0, 0, 0, 29, 0, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.17301}", "{'[3, 2, 5, 2, 3, 0, 0, 0, 29, 0, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.172973}", "{'[3, 2, 5, 2, 3, 0, 0, 0, 29, 0, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.172185}", "{'[3, 2, 5, 2, 3, 0, 0, 0, 29, 0, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.172497}", "{'[3, 2, 5, 2, 3, 0, 0, 0, 29, 0, 0, 29, 2, 0, 0, 1, 0, 1]' : 0.173199}"]
returning from 'run': {'[3, 2, 5, 2, 3, 0, 0, 0, 29, 0, 0, 29, 2, 0, 0, 1, 0, 1]': ([0.197089, 0.196086, 0.17485, 0.173235, 0.172576, 0.172138, 0.172265, 0.172398, 0.172733, 0.172563, 0.172999, 0.173044, 0.172592, 0.172629, 0.17253, 0.173079, 0.173434, 0.172754, 0.172677, 0.172575, 0.172807, 0.172529, 0.172385, 0.173022, 0.172686, 0.17301, 0.172973, 0.172185, 0.172497, 0.173199], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 2, 5, 2, 3, 0, 0, 0, 29, 0, 0, 29, 2, 0, 0, 1, 0, 1]': ([0.197089, 0.196086, 0.17485, 0.173235, 0.172576, 0.172138, 0.172265, 0.172398, 0.172733, 0.172563, 0.172999, 0.173044, 0.172592, 0.172629, 0.17253, 0.173079, 0.173434, 0.172754, 0.172677, 0.172575, 0.172807, 0.172529, 0.172385, 0.173022, 0.172686, 0.17301, 0.172973, 0.172185, 0.172497, 0.173199], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	5
        Additions: 		315
        Multiplications: 	124
        Divisions: 		0
        Logical: 		0
        Reads: 			732
        Writes: 		149
        Comparisons:		10
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest11.exe __orio_perftest11.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest11.exe  
Program Test Output: 
{'[0, 2, 0, 3, 3, 4, 0, 0, 0, 0, 29, 29, 0, 0, 0, 1, 1, 0]' : 0.174051}
{'[0, 2, 0, 3, 3, 4, 0, 0, 0, 0, 29, 29, 0, 0, 0, 1, 1, 0]' : 0.173895}
{'[0, 2, 0, 3, 3, 4, 0, 0, 0, 0, 29, 29, 0, 0, 0, 1, 1, 0]' : 0.173908}
{'[0, 2, 0, 3, 3, 4, 0, 0, 0, 0, 29, 29, 0, 0, 0, 1, 1, 0]' : 0.174094}
{'[0, 2, 0, 3, 3, 4, 0, 0, 0, 0, 29, 29, 0, 0, 0, 1, 1, 0]' : 0.154306}
{'[0, 2, 0, 3, 3, 4, 0, 0, 0, 0, 29, 29, 0, 0, 0, 1, 1, 0]' : 0.146308}
{'[0, 2, 0, 3, 3, 4, 0, 0, 0, 0, 29, 29, 0, 0, 0, 1, 1, 0]' : 0.148619}
{'[0, 2, 0, 3, 3, 4, 0, 0, 0, 0, 29, 29, 0, 0, 0, 1, 1, 0]' : 0.150988}
{'[0, 2, 0, 3, 3, 4, 0, 0, 0, 0, 29, 29, 0, 0, 0, 1, 1, 0]' : 0.150987}
{'[0, 2, 0, 3, 3, 4, 0, 0, 0, 0, 29, 29, 0, 0, 0, 1, 1, 0]' : 0.150698}
{'[0, 2, 0, 3, 3, 4, 0, 0, 0, 0, 29, 29, 0, 0, 0, 1, 1, 0]' : 0.154716}
{'[0, 2, 0, 3, 3, 4, 0, 0, 0, 0, 29, 29, 0, 0, 0, 1, 1, 0]' : 0.1555}
{'[0, 2, 0, 3, 3, 4, 0, 0, 0, 0, 29, 29, 0, 0, 0, 1, 1, 0]' : 0.15068}
{'[0, 2, 0, 3, 3, 4, 0, 0, 0, 0, 29, 29, 0, 0, 0, 1, 1, 0]' : 0.15017}
{'[0, 2, 0, 3, 3, 4, 0, 0, 0, 0, 29, 29, 0, 0, 0, 1, 1, 0]' : 0.14625}
{'[0, 2, 0, 3, 3, 4, 0, 0, 0, 0, 29, 29, 0, 0, 0, 1, 1, 0]' : 0.146466}
{'[0, 2, 0, 3, 3, 4, 0, 0, 0, 0, 29, 29, 0, 0, 0, 1, 1, 0]' : 0.147908}
{'[0, 2, 0, 3, 3, 4, 0, 0, 0, 0, 29, 29, 0, 0, 0, 1, 1, 0]' : 0.150949}
{'[0, 2, 0, 3, 3, 4, 0, 0, 0, 0, 29, 29, 0, 0, 0, 1, 1, 0]' : 0.149279}
{'[0, 2, 0, 3, 3, 4, 0, 0, 0, 0, 29, 29, 0, 0, 0, 1, 1, 0]' : 0.146292}
{'[0, 2, 0, 3, 3, 4, 0, 0, 0, 0, 29, 29, 0, 0, 0, 1, 1, 0]' : 0.150943}
{'[0, 2, 0, 3, 3, 4, 0, 0, 0, 0, 29, 29, 0, 0, 0, 1, 1, 0]' : 0.150729}
{'[0, 2, 0, 3, 3, 4, 0, 0, 0, 0, 29, 29, 0, 0, 0, 1, 1, 0]' : 0.15097}
{'[0, 2, 0, 3, 3, 4, 0, 0, 0, 0, 29, 29, 0, 0, 0, 1, 1, 0]' : 0.151461}
{'[0, 2, 0, 3, 3, 4, 0, 0, 0, 0, 29, 29, 0, 0, 0, 1, 1, 0]' : 0.150779}
{'[0, 2, 0, 3, 3, 4, 0, 0, 0, 0, 29, 29, 0, 0, 0, 1, 1, 0]' : 0.150961}
{'[0, 2, 0, 3, 3, 4, 0, 0, 0, 0, 29, 29, 0, 0, 0, 1, 1, 0]' : 0.151651}
{'[0, 2, 0, 3, 3, 4, 0, 0, 0, 0, 29, 29, 0, 0, 0, 1, 1, 0]' : 0.155925}
{'[0, 2, 0, 3, 3, 4, 0, 0, 0, 0, 29, 29, 0, 0, 0, 1, 1, 0]' : 0.155599}
{'[0, 2, 0, 3, 3, 4, 0, 0, 0, 0, 29, 29, 0, 0, 0, 1, 1, 0]' : 0.149007}

out:
 ["{'[0, 2, 0, 3, 3, 4, 0, 0, 0, 0, 29, 29, 0, 0, 0, 1, 1, 0]' : 0.174051}", "{'[0, 2, 0, 3, 3, 4, 0, 0, 0, 0, 29, 29, 0, 0, 0, 1, 1, 0]' : 0.173895}", "{'[0, 2, 0, 3, 3, 4, 0, 0, 0, 0, 29, 29, 0, 0, 0, 1, 1, 0]' : 0.173908}", "{'[0, 2, 0, 3, 3, 4, 0, 0, 0, 0, 29, 29, 0, 0, 0, 1, 1, 0]' : 0.174094}", "{'[0, 2, 0, 3, 3, 4, 0, 0, 0, 0, 29, 29, 0, 0, 0, 1, 1, 0]' : 0.154306}", "{'[0, 2, 0, 3, 3, 4, 0, 0, 0, 0, 29, 29, 0, 0, 0, 1, 1, 0]' : 0.146308}", "{'[0, 2, 0, 3, 3, 4, 0, 0, 0, 0, 29, 29, 0, 0, 0, 1, 1, 0]' : 0.148619}", "{'[0, 2, 0, 3, 3, 4, 0, 0, 0, 0, 29, 29, 0, 0, 0, 1, 1, 0]' : 0.150988}", "{'[0, 2, 0, 3, 3, 4, 0, 0, 0, 0, 29, 29, 0, 0, 0, 1, 1, 0]' : 0.150987}", "{'[0, 2, 0, 3, 3, 4, 0, 0, 0, 0, 29, 29, 0, 0, 0, 1, 1, 0]' : 0.150698}", "{'[0, 2, 0, 3, 3, 4, 0, 0, 0, 0, 29, 29, 0, 0, 0, 1, 1, 0]' : 0.154716}", "{'[0, 2, 0, 3, 3, 4, 0, 0, 0, 0, 29, 29, 0, 0, 0, 1, 1, 0]' : 0.1555}", "{'[0, 2, 0, 3, 3, 4, 0, 0, 0, 0, 29, 29, 0, 0, 0, 1, 1, 0]' : 0.15068}", "{'[0, 2, 0, 3, 3, 4, 0, 0, 0, 0, 29, 29, 0, 0, 0, 1, 1, 0]' : 0.15017}", "{'[0, 2, 0, 3, 3, 4, 0, 0, 0, 0, 29, 29, 0, 0, 0, 1, 1, 0]' : 0.14625}", "{'[0, 2, 0, 3, 3, 4, 0, 0, 0, 0, 29, 29, 0, 0, 0, 1, 1, 0]' : 0.146466}", "{'[0, 2, 0, 3, 3, 4, 0, 0, 0, 0, 29, 29, 0, 0, 0, 1, 1, 0]' : 0.147908}", "{'[0, 2, 0, 3, 3, 4, 0, 0, 0, 0, 29, 29, 0, 0, 0, 1, 1, 0]' : 0.150949}", "{'[0, 2, 0, 3, 3, 4, 0, 0, 0, 0, 29, 29, 0, 0, 0, 1, 1, 0]' : 0.149279}", "{'[0, 2, 0, 3, 3, 4, 0, 0, 0, 0, 29, 29, 0, 0, 0, 1, 1, 0]' : 0.146292}", "{'[0, 2, 0, 3, 3, 4, 0, 0, 0, 0, 29, 29, 0, 0, 0, 1, 1, 0]' : 0.150943}", "{'[0, 2, 0, 3, 3, 4, 0, 0, 0, 0, 29, 29, 0, 0, 0, 1, 1, 0]' : 0.150729}", "{'[0, 2, 0, 3, 3, 4, 0, 0, 0, 0, 29, 29, 0, 0, 0, 1, 1, 0]' : 0.15097}", "{'[0, 2, 0, 3, 3, 4, 0, 0, 0, 0, 29, 29, 0, 0, 0, 1, 1, 0]' : 0.151461}", "{'[0, 2, 0, 3, 3, 4, 0, 0, 0, 0, 29, 29, 0, 0, 0, 1, 1, 0]' : 0.150779}", "{'[0, 2, 0, 3, 3, 4, 0, 0, 0, 0, 29, 29, 0, 0, 0, 1, 1, 0]' : 0.150961}", "{'[0, 2, 0, 3, 3, 4, 0, 0, 0, 0, 29, 29, 0, 0, 0, 1, 1, 0]' : 0.151651}", "{'[0, 2, 0, 3, 3, 4, 0, 0, 0, 0, 29, 29, 0, 0, 0, 1, 1, 0]' : 0.155925}", "{'[0, 2, 0, 3, 3, 4, 0, 0, 0, 0, 29, 29, 0, 0, 0, 1, 1, 0]' : 0.155599}", "{'[0, 2, 0, 3, 3, 4, 0, 0, 0, 0, 29, 29, 0, 0, 0, 1, 1, 0]' : 0.149007}"]
returning from 'run': {'[0, 2, 0, 3, 3, 4, 0, 0, 0, 0, 29, 29, 0, 0, 0, 1, 1, 0]': ([0.174051, 0.173895, 0.173908, 0.174094, 0.154306, 0.146308, 0.148619, 0.150988, 0.150987, 0.150698, 0.154716, 0.1555, 0.15068, 0.15017, 0.14625, 0.146466, 0.147908, 0.150949, 0.149279, 0.146292, 0.150943, 0.150729, 0.15097, 0.151461, 0.150779, 0.150961, 0.151651, 0.155925, 0.155599, 0.149007], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 0, 3, 3, 4, 0, 0, 0, 0, 29, 29, 0, 0, 0, 1, 1, 0]': ([0.174051, 0.173895, 0.173908, 0.174094, 0.154306, 0.146308, 0.148619, 0.150988, 0.150987, 0.150698, 0.154716, 0.1555, 0.15068, 0.15017, 0.14625, 0.146466, 0.147908, 0.150949, 0.149279, 0.146292, 0.150943, 0.150729, 0.15097, 0.151461, 0.150779, 0.150961, 0.151651, 0.155925, 0.155599, 0.149007], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	28
        Max loop nest depth: 	4
        Additions: 		1780
        Multiplications: 	504
        Divisions: 		0
        Logical: 		0
        Reads: 			2911
        Writes: 		339
        Comparisons:		28
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest12.exe __orio_perftest12.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest12.exe  
Program Test Output: 
{'[0, 2, 6, 3, 0, 4, 1, 0, 15, 4, 0, 8, 1, 1, 0, 0, 0, 0]' : 0.112805}
{'[0, 2, 6, 3, 0, 4, 1, 0, 15, 4, 0, 8, 1, 1, 0, 0, 0, 0]' : 0.113249}
{'[0, 2, 6, 3, 0, 4, 1, 0, 15, 4, 0, 8, 1, 1, 0, 0, 0, 0]' : 0.11261}
{'[0, 2, 6, 3, 0, 4, 1, 0, 15, 4, 0, 8, 1, 1, 0, 0, 0, 0]' : 0.112725}
{'[0, 2, 6, 3, 0, 4, 1, 0, 15, 4, 0, 8, 1, 1, 0, 0, 0, 0]' : 0.11263}
{'[0, 2, 6, 3, 0, 4, 1, 0, 15, 4, 0, 8, 1, 1, 0, 0, 0, 0]' : 0.112653}
{'[0, 2, 6, 3, 0, 4, 1, 0, 15, 4, 0, 8, 1, 1, 0, 0, 0, 0]' : 0.112613}
{'[0, 2, 6, 3, 0, 4, 1, 0, 15, 4, 0, 8, 1, 1, 0, 0, 0, 0]' : 0.112703}
{'[0, 2, 6, 3, 0, 4, 1, 0, 15, 4, 0, 8, 1, 1, 0, 0, 0, 0]' : 0.1126}
{'[0, 2, 6, 3, 0, 4, 1, 0, 15, 4, 0, 8, 1, 1, 0, 0, 0, 0]' : 0.111231}
{'[0, 2, 6, 3, 0, 4, 1, 0, 15, 4, 0, 8, 1, 1, 0, 0, 0, 0]' : 0.114045}
{'[0, 2, 6, 3, 0, 4, 1, 0, 15, 4, 0, 8, 1, 1, 0, 0, 0, 0]' : 0.115749}
{'[0, 2, 6, 3, 0, 4, 1, 0, 15, 4, 0, 8, 1, 1, 0, 0, 0, 0]' : 0.115607}
{'[0, 2, 6, 3, 0, 4, 1, 0, 15, 4, 0, 8, 1, 1, 0, 0, 0, 0]' : 0.11556}
{'[0, 2, 6, 3, 0, 4, 1, 0, 15, 4, 0, 8, 1, 1, 0, 0, 0, 0]' : 0.114622}
{'[0, 2, 6, 3, 0, 4, 1, 0, 15, 4, 0, 8, 1, 1, 0, 0, 0, 0]' : 0.114765}
{'[0, 2, 6, 3, 0, 4, 1, 0, 15, 4, 0, 8, 1, 1, 0, 0, 0, 0]' : 0.115623}
{'[0, 2, 6, 3, 0, 4, 1, 0, 15, 4, 0, 8, 1, 1, 0, 0, 0, 0]' : 0.115538}
{'[0, 2, 6, 3, 0, 4, 1, 0, 15, 4, 0, 8, 1, 1, 0, 0, 0, 0]' : 0.115561}
{'[0, 2, 6, 3, 0, 4, 1, 0, 15, 4, 0, 8, 1, 1, 0, 0, 0, 0]' : 0.115712}
{'[0, 2, 6, 3, 0, 4, 1, 0, 15, 4, 0, 8, 1, 1, 0, 0, 0, 0]' : 0.115603}
{'[0, 2, 6, 3, 0, 4, 1, 0, 15, 4, 0, 8, 1, 1, 0, 0, 0, 0]' : 0.114791}
{'[0, 2, 6, 3, 0, 4, 1, 0, 15, 4, 0, 8, 1, 1, 0, 0, 0, 0]' : 0.112635}
{'[0, 2, 6, 3, 0, 4, 1, 0, 15, 4, 0, 8, 1, 1, 0, 0, 0, 0]' : 0.114879}
{'[0, 2, 6, 3, 0, 4, 1, 0, 15, 4, 0, 8, 1, 1, 0, 0, 0, 0]' : 0.1156}
{'[0, 2, 6, 3, 0, 4, 1, 0, 15, 4, 0, 8, 1, 1, 0, 0, 0, 0]' : 0.115593}
{'[0, 2, 6, 3, 0, 4, 1, 0, 15, 4, 0, 8, 1, 1, 0, 0, 0, 0]' : 0.115641}
{'[0, 2, 6, 3, 0, 4, 1, 0, 15, 4, 0, 8, 1, 1, 0, 0, 0, 0]' : 0.115735}
{'[0, 2, 6, 3, 0, 4, 1, 0, 15, 4, 0, 8, 1, 1, 0, 0, 0, 0]' : 0.115568}
{'[0, 2, 6, 3, 0, 4, 1, 0, 15, 4, 0, 8, 1, 1, 0, 0, 0, 0]' : 0.11558}

out:
 ["{'[0, 2, 6, 3, 0, 4, 1, 0, 15, 4, 0, 8, 1, 1, 0, 0, 0, 0]' : 0.112805}", "{'[0, 2, 6, 3, 0, 4, 1, 0, 15, 4, 0, 8, 1, 1, 0, 0, 0, 0]' : 0.113249}", "{'[0, 2, 6, 3, 0, 4, 1, 0, 15, 4, 0, 8, 1, 1, 0, 0, 0, 0]' : 0.11261}", "{'[0, 2, 6, 3, 0, 4, 1, 0, 15, 4, 0, 8, 1, 1, 0, 0, 0, 0]' : 0.112725}", "{'[0, 2, 6, 3, 0, 4, 1, 0, 15, 4, 0, 8, 1, 1, 0, 0, 0, 0]' : 0.11263}", "{'[0, 2, 6, 3, 0, 4, 1, 0, 15, 4, 0, 8, 1, 1, 0, 0, 0, 0]' : 0.112653}", "{'[0, 2, 6, 3, 0, 4, 1, 0, 15, 4, 0, 8, 1, 1, 0, 0, 0, 0]' : 0.112613}", "{'[0, 2, 6, 3, 0, 4, 1, 0, 15, 4, 0, 8, 1, 1, 0, 0, 0, 0]' : 0.112703}", "{'[0, 2, 6, 3, 0, 4, 1, 0, 15, 4, 0, 8, 1, 1, 0, 0, 0, 0]' : 0.1126}", "{'[0, 2, 6, 3, 0, 4, 1, 0, 15, 4, 0, 8, 1, 1, 0, 0, 0, 0]' : 0.111231}", "{'[0, 2, 6, 3, 0, 4, 1, 0, 15, 4, 0, 8, 1, 1, 0, 0, 0, 0]' : 0.114045}", "{'[0, 2, 6, 3, 0, 4, 1, 0, 15, 4, 0, 8, 1, 1, 0, 0, 0, 0]' : 0.115749}", "{'[0, 2, 6, 3, 0, 4, 1, 0, 15, 4, 0, 8, 1, 1, 0, 0, 0, 0]' : 0.115607}", "{'[0, 2, 6, 3, 0, 4, 1, 0, 15, 4, 0, 8, 1, 1, 0, 0, 0, 0]' : 0.11556}", "{'[0, 2, 6, 3, 0, 4, 1, 0, 15, 4, 0, 8, 1, 1, 0, 0, 0, 0]' : 0.114622}", "{'[0, 2, 6, 3, 0, 4, 1, 0, 15, 4, 0, 8, 1, 1, 0, 0, 0, 0]' : 0.114765}", "{'[0, 2, 6, 3, 0, 4, 1, 0, 15, 4, 0, 8, 1, 1, 0, 0, 0, 0]' : 0.115623}", "{'[0, 2, 6, 3, 0, 4, 1, 0, 15, 4, 0, 8, 1, 1, 0, 0, 0, 0]' : 0.115538}", "{'[0, 2, 6, 3, 0, 4, 1, 0, 15, 4, 0, 8, 1, 1, 0, 0, 0, 0]' : 0.115561}", "{'[0, 2, 6, 3, 0, 4, 1, 0, 15, 4, 0, 8, 1, 1, 0, 0, 0, 0]' : 0.115712}", "{'[0, 2, 6, 3, 0, 4, 1, 0, 15, 4, 0, 8, 1, 1, 0, 0, 0, 0]' : 0.115603}", "{'[0, 2, 6, 3, 0, 4, 1, 0, 15, 4, 0, 8, 1, 1, 0, 0, 0, 0]' : 0.114791}", "{'[0, 2, 6, 3, 0, 4, 1, 0, 15, 4, 0, 8, 1, 1, 0, 0, 0, 0]' : 0.112635}", "{'[0, 2, 6, 3, 0, 4, 1, 0, 15, 4, 0, 8, 1, 1, 0, 0, 0, 0]' : 0.114879}", "{'[0, 2, 6, 3, 0, 4, 1, 0, 15, 4, 0, 8, 1, 1, 0, 0, 0, 0]' : 0.1156}", "{'[0, 2, 6, 3, 0, 4, 1, 0, 15, 4, 0, 8, 1, 1, 0, 0, 0, 0]' : 0.115593}", "{'[0, 2, 6, 3, 0, 4, 1, 0, 15, 4, 0, 8, 1, 1, 0, 0, 0, 0]' : 0.115641}", "{'[0, 2, 6, 3, 0, 4, 1, 0, 15, 4, 0, 8, 1, 1, 0, 0, 0, 0]' : 0.115735}", "{'[0, 2, 6, 3, 0, 4, 1, 0, 15, 4, 0, 8, 1, 1, 0, 0, 0, 0]' : 0.115568}", "{'[0, 2, 6, 3, 0, 4, 1, 0, 15, 4, 0, 8, 1, 1, 0, 0, 0, 0]' : 0.11558}"]
returning from 'run': {'[0, 2, 6, 3, 0, 4, 1, 0, 15, 4, 0, 8, 1, 1, 0, 0, 0, 0]': ([0.112805, 0.113249, 0.11261, 0.112725, 0.11263, 0.112653, 0.112613, 0.112703, 0.1126, 0.111231, 0.114045, 0.115749, 0.115607, 0.11556, 0.114622, 0.114765, 0.115623, 0.115538, 0.115561, 0.115712, 0.115603, 0.114791, 0.112635, 0.114879, 0.1156, 0.115593, 0.115641, 0.115735, 0.115568, 0.11558], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 6, 3, 0, 4, 1, 0, 15, 4, 0, 8, 1, 1, 0, 0, 0, 0]': ([0.112805, 0.113249, 0.11261, 0.112725, 0.11263, 0.112653, 0.112613, 0.112703, 0.1126, 0.111231, 0.114045, 0.115749, 0.115607, 0.11556, 0.114622, 0.114765, 0.115623, 0.115538, 0.115561, 0.115712, 0.115603, 0.114791, 0.112635, 0.114879, 0.1156, 0.115593, 0.115641, 0.115735, 0.115568, 0.11558], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	99
        Max loop nest depth: 	5
        Additions: 		9987
        Multiplications: 	2574
        Divisions: 		0
        Logical: 		0
        Reads: 			15055
        Writes: 		1651
        Comparisons:		99
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest13.exe __orio_perftest13.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest13.exe  
Program Test Output: 
{'[5, 0, 5, 0, 6, 4, 1, 0, 28, 23, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.132112}
{'[5, 0, 5, 0, 6, 4, 1, 0, 28, 23, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.1322}
{'[5, 0, 5, 0, 6, 4, 1, 0, 28, 23, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.131613}
{'[5, 0, 5, 0, 6, 4, 1, 0, 28, 23, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.12968}
{'[5, 0, 5, 0, 6, 4, 1, 0, 28, 23, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.135223}
{'[5, 0, 5, 0, 6, 4, 1, 0, 28, 23, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.135194}
{'[5, 0, 5, 0, 6, 4, 1, 0, 28, 23, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.135003}
{'[5, 0, 5, 0, 6, 4, 1, 0, 28, 23, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.135526}
{'[5, 0, 5, 0, 6, 4, 1, 0, 28, 23, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.135457}
{'[5, 0, 5, 0, 6, 4, 1, 0, 28, 23, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.135539}
{'[5, 0, 5, 0, 6, 4, 1, 0, 28, 23, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.135287}
{'[5, 0, 5, 0, 6, 4, 1, 0, 28, 23, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.135382}
{'[5, 0, 5, 0, 6, 4, 1, 0, 28, 23, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.135312}
{'[5, 0, 5, 0, 6, 4, 1, 0, 28, 23, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.13525}
{'[5, 0, 5, 0, 6, 4, 1, 0, 28, 23, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.135294}
{'[5, 0, 5, 0, 6, 4, 1, 0, 28, 23, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.135252}
{'[5, 0, 5, 0, 6, 4, 1, 0, 28, 23, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.135169}
{'[5, 0, 5, 0, 6, 4, 1, 0, 28, 23, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.135103}
{'[5, 0, 5, 0, 6, 4, 1, 0, 28, 23, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.135236}
{'[5, 0, 5, 0, 6, 4, 1, 0, 28, 23, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.135498}
{'[5, 0, 5, 0, 6, 4, 1, 0, 28, 23, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.135463}
{'[5, 0, 5, 0, 6, 4, 1, 0, 28, 23, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.135507}
{'[5, 0, 5, 0, 6, 4, 1, 0, 28, 23, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.133122}
{'[5, 0, 5, 0, 6, 4, 1, 0, 28, 23, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.131884}
{'[5, 0, 5, 0, 6, 4, 1, 0, 28, 23, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.131876}
{'[5, 0, 5, 0, 6, 4, 1, 0, 28, 23, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.131867}
{'[5, 0, 5, 0, 6, 4, 1, 0, 28, 23, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.133055}
{'[5, 0, 5, 0, 6, 4, 1, 0, 28, 23, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.13186}
{'[5, 0, 5, 0, 6, 4, 1, 0, 28, 23, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.13187}
{'[5, 0, 5, 0, 6, 4, 1, 0, 28, 23, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.132211}

out:
 ["{'[5, 0, 5, 0, 6, 4, 1, 0, 28, 23, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.132112}", "{'[5, 0, 5, 0, 6, 4, 1, 0, 28, 23, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.1322}", "{'[5, 0, 5, 0, 6, 4, 1, 0, 28, 23, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.131613}", "{'[5, 0, 5, 0, 6, 4, 1, 0, 28, 23, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.12968}", "{'[5, 0, 5, 0, 6, 4, 1, 0, 28, 23, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.135223}", "{'[5, 0, 5, 0, 6, 4, 1, 0, 28, 23, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.135194}", "{'[5, 0, 5, 0, 6, 4, 1, 0, 28, 23, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.135003}", "{'[5, 0, 5, 0, 6, 4, 1, 0, 28, 23, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.135526}", "{'[5, 0, 5, 0, 6, 4, 1, 0, 28, 23, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.135457}", "{'[5, 0, 5, 0, 6, 4, 1, 0, 28, 23, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.135539}", "{'[5, 0, 5, 0, 6, 4, 1, 0, 28, 23, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.135287}", "{'[5, 0, 5, 0, 6, 4, 1, 0, 28, 23, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.135382}", "{'[5, 0, 5, 0, 6, 4, 1, 0, 28, 23, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.135312}", "{'[5, 0, 5, 0, 6, 4, 1, 0, 28, 23, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.13525}", "{'[5, 0, 5, 0, 6, 4, 1, 0, 28, 23, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.135294}", "{'[5, 0, 5, 0, 6, 4, 1, 0, 28, 23, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.135252}", "{'[5, 0, 5, 0, 6, 4, 1, 0, 28, 23, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.135169}", "{'[5, 0, 5, 0, 6, 4, 1, 0, 28, 23, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.135103}", "{'[5, 0, 5, 0, 6, 4, 1, 0, 28, 23, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.135236}", "{'[5, 0, 5, 0, 6, 4, 1, 0, 28, 23, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.135498}", "{'[5, 0, 5, 0, 6, 4, 1, 0, 28, 23, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.135463}", "{'[5, 0, 5, 0, 6, 4, 1, 0, 28, 23, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.135507}", "{'[5, 0, 5, 0, 6, 4, 1, 0, 28, 23, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.133122}", "{'[5, 0, 5, 0, 6, 4, 1, 0, 28, 23, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.131884}", "{'[5, 0, 5, 0, 6, 4, 1, 0, 28, 23, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.131876}", "{'[5, 0, 5, 0, 6, 4, 1, 0, 28, 23, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.131867}", "{'[5, 0, 5, 0, 6, 4, 1, 0, 28, 23, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.133055}", "{'[5, 0, 5, 0, 6, 4, 1, 0, 28, 23, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.13186}", "{'[5, 0, 5, 0, 6, 4, 1, 0, 28, 23, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.13187}", "{'[5, 0, 5, 0, 6, 4, 1, 0, 28, 23, 28, 0, 1, 0, 1, 0, 0, 1]' : 0.132211}"]
returning from 'run': {'[5, 0, 5, 0, 6, 4, 1, 0, 28, 23, 28, 0, 1, 0, 1, 0, 0, 1]': ([0.132112, 0.1322, 0.131613, 0.12968, 0.135223, 0.135194, 0.135003, 0.135526, 0.135457, 0.135539, 0.135287, 0.135382, 0.135312, 0.13525, 0.135294, 0.135252, 0.135169, 0.135103, 0.135236, 0.135498, 0.135463, 0.135507, 0.133122, 0.131884, 0.131876, 0.131867, 0.133055, 0.13186, 0.13187, 0.132211], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 0, 5, 0, 6, 4, 1, 0, 28, 23, 28, 0, 1, 0, 1, 0, 0, 1]': ([0.132112, 0.1322, 0.131613, 0.12968, 0.135223, 0.135194, 0.135003, 0.135526, 0.135457, 0.135539, 0.135287, 0.135382, 0.135312, 0.13525, 0.135294, 0.135252, 0.135169, 0.135103, 0.135236, 0.135498, 0.135463, 0.135507, 0.133122, 0.131884, 0.131876, 0.131867, 0.133055, 0.13186, 0.13187, 0.132211], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = kkk
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		325
        Multiplications: 	78
        Divisions: 		0
        Logical: 		0
        Reads: 			619
        Writes: 		95
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest14.exe __orio_perftest14.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest14.exe  
Program Test Output: 
{'[1, 2, 3, 6, 2, 1, 1, 1, 22, 0, 27, 29, 0, 1, 0, 0, 0, 0]' : 0.292493}
{'[1, 2, 3, 6, 2, 1, 1, 1, 22, 0, 27, 29, 0, 1, 0, 0, 0, 0]' : 0.275723}
{'[1, 2, 3, 6, 2, 1, 1, 1, 22, 0, 27, 29, 0, 1, 0, 0, 0, 0]' : 0.256868}
{'[1, 2, 3, 6, 2, 1, 1, 1, 22, 0, 27, 29, 0, 1, 0, 0, 0, 0]' : 0.251961}
{'[1, 2, 3, 6, 2, 1, 1, 1, 22, 0, 27, 29, 0, 1, 0, 0, 0, 0]' : 0.251158}
{'[1, 2, 3, 6, 2, 1, 1, 1, 22, 0, 27, 29, 0, 1, 0, 0, 0, 0]' : 0.250463}
{'[1, 2, 3, 6, 2, 1, 1, 1, 22, 0, 27, 29, 0, 1, 0, 0, 0, 0]' : 0.243778}
{'[1, 2, 3, 6, 2, 1, 1, 1, 22, 0, 27, 29, 0, 1, 0, 0, 0, 0]' : 0.244152}
{'[1, 2, 3, 6, 2, 1, 1, 1, 22, 0, 27, 29, 0, 1, 0, 0, 0, 0]' : 0.245255}
{'[1, 2, 3, 6, 2, 1, 1, 1, 22, 0, 27, 29, 0, 1, 0, 0, 0, 0]' : 0.252325}
{'[1, 2, 3, 6, 2, 1, 1, 1, 22, 0, 27, 29, 0, 1, 0, 0, 0, 0]' : 0.251788}
{'[1, 2, 3, 6, 2, 1, 1, 1, 22, 0, 27, 29, 0, 1, 0, 0, 0, 0]' : 0.252064}
{'[1, 2, 3, 6, 2, 1, 1, 1, 22, 0, 27, 29, 0, 1, 0, 0, 0, 0]' : 0.251204}
{'[1, 2, 3, 6, 2, 1, 1, 1, 22, 0, 27, 29, 0, 1, 0, 0, 0, 0]' : 0.252211}
{'[1, 2, 3, 6, 2, 1, 1, 1, 22, 0, 27, 29, 0, 1, 0, 0, 0, 0]' : 0.251535}
{'[1, 2, 3, 6, 2, 1, 1, 1, 22, 0, 27, 29, 0, 1, 0, 0, 0, 0]' : 0.251933}
{'[1, 2, 3, 6, 2, 1, 1, 1, 22, 0, 27, 29, 0, 1, 0, 0, 0, 0]' : 0.251292}
{'[1, 2, 3, 6, 2, 1, 1, 1, 22, 0, 27, 29, 0, 1, 0, 0, 0, 0]' : 0.253856}
{'[1, 2, 3, 6, 2, 1, 1, 1, 22, 0, 27, 29, 0, 1, 0, 0, 0, 0]' : 0.258622}
{'[1, 2, 3, 6, 2, 1, 1, 1, 22, 0, 27, 29, 0, 1, 0, 0, 0, 0]' : 0.25858}
{'[1, 2, 3, 6, 2, 1, 1, 1, 22, 0, 27, 29, 0, 1, 0, 0, 0, 0]' : 0.258678}
{'[1, 2, 3, 6, 2, 1, 1, 1, 22, 0, 27, 29, 0, 1, 0, 0, 0, 0]' : 0.255764}
{'[1, 2, 3, 6, 2, 1, 1, 1, 22, 0, 27, 29, 0, 1, 0, 0, 0, 0]' : 0.251242}
{'[1, 2, 3, 6, 2, 1, 1, 1, 22, 0, 27, 29, 0, 1, 0, 0, 0, 0]' : 0.254785}
{'[1, 2, 3, 6, 2, 1, 1, 1, 22, 0, 27, 29, 0, 1, 0, 0, 0, 0]' : 0.258594}
{'[1, 2, 3, 6, 2, 1, 1, 1, 22, 0, 27, 29, 0, 1, 0, 0, 0, 0]' : 0.258905}
{'[1, 2, 3, 6, 2, 1, 1, 1, 22, 0, 27, 29, 0, 1, 0, 0, 0, 0]' : 0.258702}
{'[1, 2, 3, 6, 2, 1, 1, 1, 22, 0, 27, 29, 0, 1, 0, 0, 0, 0]' : 0.251249}
{'[1, 2, 3, 6, 2, 1, 1, 1, 22, 0, 27, 29, 0, 1, 0, 0, 0, 0]' : 0.251333}
{'[1, 2, 3, 6, 2, 1, 1, 1, 22, 0, 27, 29, 0, 1, 0, 0, 0, 0]' : 0.256075}

out:
 ["{'[1, 2, 3, 6, 2, 1, 1, 1, 22, 0, 27, 29, 0, 1, 0, 0, 0, 0]' : 0.292493}", "{'[1, 2, 3, 6, 2, 1, 1, 1, 22, 0, 27, 29, 0, 1, 0, 0, 0, 0]' : 0.275723}", "{'[1, 2, 3, 6, 2, 1, 1, 1, 22, 0, 27, 29, 0, 1, 0, 0, 0, 0]' : 0.256868}", "{'[1, 2, 3, 6, 2, 1, 1, 1, 22, 0, 27, 29, 0, 1, 0, 0, 0, 0]' : 0.251961}", "{'[1, 2, 3, 6, 2, 1, 1, 1, 22, 0, 27, 29, 0, 1, 0, 0, 0, 0]' : 0.251158}", "{'[1, 2, 3, 6, 2, 1, 1, 1, 22, 0, 27, 29, 0, 1, 0, 0, 0, 0]' : 0.250463}", "{'[1, 2, 3, 6, 2, 1, 1, 1, 22, 0, 27, 29, 0, 1, 0, 0, 0, 0]' : 0.243778}", "{'[1, 2, 3, 6, 2, 1, 1, 1, 22, 0, 27, 29, 0, 1, 0, 0, 0, 0]' : 0.244152}", "{'[1, 2, 3, 6, 2, 1, 1, 1, 22, 0, 27, 29, 0, 1, 0, 0, 0, 0]' : 0.245255}", "{'[1, 2, 3, 6, 2, 1, 1, 1, 22, 0, 27, 29, 0, 1, 0, 0, 0, 0]' : 0.252325}", "{'[1, 2, 3, 6, 2, 1, 1, 1, 22, 0, 27, 29, 0, 1, 0, 0, 0, 0]' : 0.251788}", "{'[1, 2, 3, 6, 2, 1, 1, 1, 22, 0, 27, 29, 0, 1, 0, 0, 0, 0]' : 0.252064}", "{'[1, 2, 3, 6, 2, 1, 1, 1, 22, 0, 27, 29, 0, 1, 0, 0, 0, 0]' : 0.251204}", "{'[1, 2, 3, 6, 2, 1, 1, 1, 22, 0, 27, 29, 0, 1, 0, 0, 0, 0]' : 0.252211}", "{'[1, 2, 3, 6, 2, 1, 1, 1, 22, 0, 27, 29, 0, 1, 0, 0, 0, 0]' : 0.251535}", "{'[1, 2, 3, 6, 2, 1, 1, 1, 22, 0, 27, 29, 0, 1, 0, 0, 0, 0]' : 0.251933}", "{'[1, 2, 3, 6, 2, 1, 1, 1, 22, 0, 27, 29, 0, 1, 0, 0, 0, 0]' : 0.251292}", "{'[1, 2, 3, 6, 2, 1, 1, 1, 22, 0, 27, 29, 0, 1, 0, 0, 0, 0]' : 0.253856}", "{'[1, 2, 3, 6, 2, 1, 1, 1, 22, 0, 27, 29, 0, 1, 0, 0, 0, 0]' : 0.258622}", "{'[1, 2, 3, 6, 2, 1, 1, 1, 22, 0, 27, 29, 0, 1, 0, 0, 0, 0]' : 0.25858}", "{'[1, 2, 3, 6, 2, 1, 1, 1, 22, 0, 27, 29, 0, 1, 0, 0, 0, 0]' : 0.258678}", "{'[1, 2, 3, 6, 2, 1, 1, 1, 22, 0, 27, 29, 0, 1, 0, 0, 0, 0]' : 0.255764}", "{'[1, 2, 3, 6, 2, 1, 1, 1, 22, 0, 27, 29, 0, 1, 0, 0, 0, 0]' : 0.251242}", "{'[1, 2, 3, 6, 2, 1, 1, 1, 22, 0, 27, 29, 0, 1, 0, 0, 0, 0]' : 0.254785}", "{'[1, 2, 3, 6, 2, 1, 1, 1, 22, 0, 27, 29, 0, 1, 0, 0, 0, 0]' : 0.258594}", "{'[1, 2, 3, 6, 2, 1, 1, 1, 22, 0, 27, 29, 0, 1, 0, 0, 0, 0]' : 0.258905}", "{'[1, 2, 3, 6, 2, 1, 1, 1, 22, 0, 27, 29, 0, 1, 0, 0, 0, 0]' : 0.258702}", "{'[1, 2, 3, 6, 2, 1, 1, 1, 22, 0, 27, 29, 0, 1, 0, 0, 0, 0]' : 0.251249}", "{'[1, 2, 3, 6, 2, 1, 1, 1, 22, 0, 27, 29, 0, 1, 0, 0, 0, 0]' : 0.251333}", "{'[1, 2, 3, 6, 2, 1, 1, 1, 22, 0, 27, 29, 0, 1, 0, 0, 0, 0]' : 0.256075}"]
returning from 'run': {'[1, 2, 3, 6, 2, 1, 1, 1, 22, 0, 27, 29, 0, 1, 0, 0, 0, 0]': ([0.292493, 0.275723, 0.256868, 0.251961, 0.251158, 0.250463, 0.243778, 0.244152, 0.245255, 0.252325, 0.251788, 0.252064, 0.251204, 0.252211, 0.251535, 0.251933, 0.251292, 0.253856, 0.258622, 0.25858, 0.258678, 0.255764, 0.251242, 0.254785, 0.258594, 0.258905, 0.258702, 0.251249, 0.251333, 0.256075], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 2, 3, 6, 2, 1, 1, 1, 22, 0, 27, 29, 0, 1, 0, 0, 0, 0]': ([0.292493, 0.275723, 0.256868, 0.251961, 0.251158, 0.250463, 0.243778, 0.244152, 0.245255, 0.252325, 0.251788, 0.252064, 0.251204, 0.252211, 0.251535, 0.251933, 0.251292, 0.253856, 0.258622, 0.25858, 0.258678, 0.255764, 0.251242, 0.254785, 0.258594, 0.258905, 0.258702, 0.251249, 0.251333, 0.256075], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	17
        Max loop nest depth: 	5
        Additions: 		8782
        Multiplications: 	2376
        Divisions: 		0
        Logical: 		0
        Reads: 			12959
        Writes: 		1239
        Comparisons:		17
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest15.exe __orio_perftest15.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest15.exe  
Program Test Output: 
{'[2, 0, 0, 3, 3, 0, 1, 1, 0, 0, 26, 6, 2, 0, 0, 0, 0, 1]' : 0.293183}
{'[2, 0, 0, 3, 3, 0, 1, 1, 0, 0, 26, 6, 2, 0, 0, 0, 0, 1]' : 0.280741}
{'[2, 0, 0, 3, 3, 0, 1, 1, 0, 0, 26, 6, 2, 0, 0, 0, 0, 1]' : 0.264575}
{'[2, 0, 0, 3, 3, 0, 1, 1, 0, 0, 26, 6, 2, 0, 0, 0, 0, 1]' : 0.261821}
{'[2, 0, 0, 3, 3, 0, 1, 1, 0, 0, 26, 6, 2, 0, 0, 0, 0, 1]' : 0.265771}
{'[2, 0, 0, 3, 3, 0, 1, 1, 0, 0, 26, 6, 2, 0, 0, 0, 0, 1]' : 0.271266}
{'[2, 0, 0, 3, 3, 0, 1, 1, 0, 0, 26, 6, 2, 0, 0, 0, 0, 1]' : 0.270297}
{'[2, 0, 0, 3, 3, 0, 1, 1, 0, 0, 26, 6, 2, 0, 0, 0, 0, 1]' : 0.268215}
{'[2, 0, 0, 3, 3, 0, 1, 1, 0, 0, 26, 6, 2, 0, 0, 0, 0, 1]' : 0.262583}
{'[2, 0, 0, 3, 3, 0, 1, 1, 0, 0, 26, 6, 2, 0, 0, 0, 0, 1]' : 0.264003}
{'[2, 0, 0, 3, 3, 0, 1, 1, 0, 0, 26, 6, 2, 0, 0, 0, 0, 1]' : 0.270149}
{'[2, 0, 0, 3, 3, 0, 1, 1, 0, 0, 26, 6, 2, 0, 0, 0, 0, 1]' : 0.260334}
{'[2, 0, 0, 3, 3, 0, 1, 1, 0, 0, 26, 6, 2, 0, 0, 0, 0, 1]' : 0.268463}
{'[2, 0, 0, 3, 3, 0, 1, 1, 0, 0, 26, 6, 2, 0, 0, 0, 0, 1]' : 0.270246}
{'[2, 0, 0, 3, 3, 0, 1, 1, 0, 0, 26, 6, 2, 0, 0, 0, 0, 1]' : 0.264863}
{'[2, 0, 0, 3, 3, 0, 1, 1, 0, 0, 26, 6, 2, 0, 0, 0, 0, 1]' : 0.267339}
{'[2, 0, 0, 3, 3, 0, 1, 1, 0, 0, 26, 6, 2, 0, 0, 0, 0, 1]' : 0.272907}
{'[2, 0, 0, 3, 3, 0, 1, 1, 0, 0, 26, 6, 2, 0, 0, 0, 0, 1]' : 0.270584}
{'[2, 0, 0, 3, 3, 0, 1, 1, 0, 0, 26, 6, 2, 0, 0, 0, 0, 1]' : 0.265313}
{'[2, 0, 0, 3, 3, 0, 1, 1, 0, 0, 26, 6, 2, 0, 0, 0, 0, 1]' : 0.270293}
{'[2, 0, 0, 3, 3, 0, 1, 1, 0, 0, 26, 6, 2, 0, 0, 0, 0, 1]' : 0.266488}
{'[2, 0, 0, 3, 3, 0, 1, 1, 0, 0, 26, 6, 2, 0, 0, 0, 0, 1]' : 0.265353}
{'[2, 0, 0, 3, 3, 0, 1, 1, 0, 0, 26, 6, 2, 0, 0, 0, 0, 1]' : 0.270689}
{'[2, 0, 0, 3, 3, 0, 1, 1, 0, 0, 26, 6, 2, 0, 0, 0, 0, 1]' : 0.266112}
{'[2, 0, 0, 3, 3, 0, 1, 1, 0, 0, 26, 6, 2, 0, 0, 0, 0, 1]' : 0.266971}
{'[2, 0, 0, 3, 3, 0, 1, 1, 0, 0, 26, 6, 2, 0, 0, 0, 0, 1]' : 0.266717}
{'[2, 0, 0, 3, 3, 0, 1, 1, 0, 0, 26, 6, 2, 0, 0, 0, 0, 1]' : 0.267499}
{'[2, 0, 0, 3, 3, 0, 1, 1, 0, 0, 26, 6, 2, 0, 0, 0, 0, 1]' : 0.26927}
{'[2, 0, 0, 3, 3, 0, 1, 1, 0, 0, 26, 6, 2, 0, 0, 0, 0, 1]' : 0.266858}
{'[2, 0, 0, 3, 3, 0, 1, 1, 0, 0, 26, 6, 2, 0, 0, 0, 0, 1]' : 0.272519}

out:
 ["{'[2, 0, 0, 3, 3, 0, 1, 1, 0, 0, 26, 6, 2, 0, 0, 0, 0, 1]' : 0.293183}", "{'[2, 0, 0, 3, 3, 0, 1, 1, 0, 0, 26, 6, 2, 0, 0, 0, 0, 1]' : 0.280741}", "{'[2, 0, 0, 3, 3, 0, 1, 1, 0, 0, 26, 6, 2, 0, 0, 0, 0, 1]' : 0.264575}", "{'[2, 0, 0, 3, 3, 0, 1, 1, 0, 0, 26, 6, 2, 0, 0, 0, 0, 1]' : 0.261821}", "{'[2, 0, 0, 3, 3, 0, 1, 1, 0, 0, 26, 6, 2, 0, 0, 0, 0, 1]' : 0.265771}", "{'[2, 0, 0, 3, 3, 0, 1, 1, 0, 0, 26, 6, 2, 0, 0, 0, 0, 1]' : 0.271266}", "{'[2, 0, 0, 3, 3, 0, 1, 1, 0, 0, 26, 6, 2, 0, 0, 0, 0, 1]' : 0.270297}", "{'[2, 0, 0, 3, 3, 0, 1, 1, 0, 0, 26, 6, 2, 0, 0, 0, 0, 1]' : 0.268215}", "{'[2, 0, 0, 3, 3, 0, 1, 1, 0, 0, 26, 6, 2, 0, 0, 0, 0, 1]' : 0.262583}", "{'[2, 0, 0, 3, 3, 0, 1, 1, 0, 0, 26, 6, 2, 0, 0, 0, 0, 1]' : 0.264003}", "{'[2, 0, 0, 3, 3, 0, 1, 1, 0, 0, 26, 6, 2, 0, 0, 0, 0, 1]' : 0.270149}", "{'[2, 0, 0, 3, 3, 0, 1, 1, 0, 0, 26, 6, 2, 0, 0, 0, 0, 1]' : 0.260334}", "{'[2, 0, 0, 3, 3, 0, 1, 1, 0, 0, 26, 6, 2, 0, 0, 0, 0, 1]' : 0.268463}", "{'[2, 0, 0, 3, 3, 0, 1, 1, 0, 0, 26, 6, 2, 0, 0, 0, 0, 1]' : 0.270246}", "{'[2, 0, 0, 3, 3, 0, 1, 1, 0, 0, 26, 6, 2, 0, 0, 0, 0, 1]' : 0.264863}", "{'[2, 0, 0, 3, 3, 0, 1, 1, 0, 0, 26, 6, 2, 0, 0, 0, 0, 1]' : 0.267339}", "{'[2, 0, 0, 3, 3, 0, 1, 1, 0, 0, 26, 6, 2, 0, 0, 0, 0, 1]' : 0.272907}", "{'[2, 0, 0, 3, 3, 0, 1, 1, 0, 0, 26, 6, 2, 0, 0, 0, 0, 1]' : 0.270584}", "{'[2, 0, 0, 3, 3, 0, 1, 1, 0, 0, 26, 6, 2, 0, 0, 0, 0, 1]' : 0.265313}", "{'[2, 0, 0, 3, 3, 0, 1, 1, 0, 0, 26, 6, 2, 0, 0, 0, 0, 1]' : 0.270293}", "{'[2, 0, 0, 3, 3, 0, 1, 1, 0, 0, 26, 6, 2, 0, 0, 0, 0, 1]' : 0.266488}", "{'[2, 0, 0, 3, 3, 0, 1, 1, 0, 0, 26, 6, 2, 0, 0, 0, 0, 1]' : 0.265353}", "{'[2, 0, 0, 3, 3, 0, 1, 1, 0, 0, 26, 6, 2, 0, 0, 0, 0, 1]' : 0.270689}", "{'[2, 0, 0, 3, 3, 0, 1, 1, 0, 0, 26, 6, 2, 0, 0, 0, 0, 1]' : 0.266112}", "{'[2, 0, 0, 3, 3, 0, 1, 1, 0, 0, 26, 6, 2, 0, 0, 0, 0, 1]' : 0.266971}", "{'[2, 0, 0, 3, 3, 0, 1, 1, 0, 0, 26, 6, 2, 0, 0, 0, 0, 1]' : 0.266717}", "{'[2, 0, 0, 3, 3, 0, 1, 1, 0, 0, 26, 6, 2, 0, 0, 0, 0, 1]' : 0.267499}", "{'[2, 0, 0, 3, 3, 0, 1, 1, 0, 0, 26, 6, 2, 0, 0, 0, 0, 1]' : 0.26927}", "{'[2, 0, 0, 3, 3, 0, 1, 1, 0, 0, 26, 6, 2, 0, 0, 0, 0, 1]' : 0.266858}", "{'[2, 0, 0, 3, 3, 0, 1, 1, 0, 0, 26, 6, 2, 0, 0, 0, 0, 1]' : 0.272519}"]
returning from 'run': {'[2, 0, 0, 3, 3, 0, 1, 1, 0, 0, 26, 6, 2, 0, 0, 0, 0, 1]': ([0.293183, 0.280741, 0.264575, 0.261821, 0.265771, 0.271266, 0.270297, 0.268215, 0.262583, 0.264003, 0.270149, 0.260334, 0.268463, 0.270246, 0.264863, 0.267339, 0.272907, 0.270584, 0.265313, 0.270293, 0.266488, 0.265353, 0.270689, 0.266112, 0.266971, 0.266717, 0.267499, 0.26927, 0.266858, 0.272519], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 0, 0, 3, 3, 0, 1, 1, 0, 0, 26, 6, 2, 0, 0, 0, 0, 1]': ([0.293183, 0.280741, 0.264575, 0.261821, 0.265771, 0.271266, 0.270297, 0.268215, 0.262583, 0.264003, 0.270149, 0.260334, 0.268463, 0.270246, 0.264863, 0.267339, 0.272907, 0.270584, 0.265313, 0.270293, 0.266488, 0.265353, 0.270689, 0.266112, 0.266971, 0.266717, 0.267499, 0.26927, 0.266858, 0.272519], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	26
        Max loop nest depth: 	4
        Additions: 		914
        Multiplications: 	276
        Divisions: 		0
        Logical: 		0
        Reads: 			1858
        Writes: 		358
        Comparisons:		26
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest16.exe __orio_perftest16.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest16.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest16.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest16.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest16.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	4
        Additions: 		4628
        Multiplications: 	2304
        Divisions: 		0
        Logical: 		0
        Reads: 			8558
        Writes: 		1317
        Comparisons:		10
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest17.exe __orio_perftest17.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest17.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest17.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest17.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest17.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		151
        Multiplications: 	38
        Divisions: 		0
        Logical: 		0
        Reads: 			367
        Writes: 		99
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest18.exe __orio_perftest18.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest18.exe  
Program Test Output: 
{'[0, 5, 0, 5, 6, 6, 1, 0, 20, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.187435}
{'[0, 5, 0, 5, 6, 6, 1, 0, 20, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.185447}
{'[0, 5, 0, 5, 6, 6, 1, 0, 20, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.181948}
{'[0, 5, 0, 5, 6, 6, 1, 0, 20, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.181102}
{'[0, 5, 0, 5, 6, 6, 1, 0, 20, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.181023}
{'[0, 5, 0, 5, 6, 6, 1, 0, 20, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.180849}
{'[0, 5, 0, 5, 6, 6, 1, 0, 20, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.180812}
{'[0, 5, 0, 5, 6, 6, 1, 0, 20, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.182364}
{'[0, 5, 0, 5, 6, 6, 1, 0, 20, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.186337}
{'[0, 5, 0, 5, 6, 6, 1, 0, 20, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.186374}
{'[0, 5, 0, 5, 6, 6, 1, 0, 20, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.183355}
{'[0, 5, 0, 5, 6, 6, 1, 0, 20, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.180925}
{'[0, 5, 0, 5, 6, 6, 1, 0, 20, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.180602}
{'[0, 5, 0, 5, 6, 6, 1, 0, 20, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.180971}
{'[0, 5, 0, 5, 6, 6, 1, 0, 20, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.181226}
{'[0, 5, 0, 5, 6, 6, 1, 0, 20, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.18133}
{'[0, 5, 0, 5, 6, 6, 1, 0, 20, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.181022}
{'[0, 5, 0, 5, 6, 6, 1, 0, 20, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.179412}
{'[0, 5, 0, 5, 6, 6, 1, 0, 20, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.176747}
{'[0, 5, 0, 5, 6, 6, 1, 0, 20, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.180964}
{'[0, 5, 0, 5, 6, 6, 1, 0, 20, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.181132}
{'[0, 5, 0, 5, 6, 6, 1, 0, 20, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.181325}
{'[0, 5, 0, 5, 6, 6, 1, 0, 20, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.180888}
{'[0, 5, 0, 5, 6, 6, 1, 0, 20, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.180753}
{'[0, 5, 0, 5, 6, 6, 1, 0, 20, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.185043}
{'[0, 5, 0, 5, 6, 6, 1, 0, 20, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.186354}
{'[0, 5, 0, 5, 6, 6, 1, 0, 20, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.186552}
{'[0, 5, 0, 5, 6, 6, 1, 0, 20, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.186375}
{'[0, 5, 0, 5, 6, 6, 1, 0, 20, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.182642}
{'[0, 5, 0, 5, 6, 6, 1, 0, 20, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.180609}

out:
 ["{'[0, 5, 0, 5, 6, 6, 1, 0, 20, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.187435}", "{'[0, 5, 0, 5, 6, 6, 1, 0, 20, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.185447}", "{'[0, 5, 0, 5, 6, 6, 1, 0, 20, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.181948}", "{'[0, 5, 0, 5, 6, 6, 1, 0, 20, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.181102}", "{'[0, 5, 0, 5, 6, 6, 1, 0, 20, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.181023}", "{'[0, 5, 0, 5, 6, 6, 1, 0, 20, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.180849}", "{'[0, 5, 0, 5, 6, 6, 1, 0, 20, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.180812}", "{'[0, 5, 0, 5, 6, 6, 1, 0, 20, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.182364}", "{'[0, 5, 0, 5, 6, 6, 1, 0, 20, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.186337}", "{'[0, 5, 0, 5, 6, 6, 1, 0, 20, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.186374}", "{'[0, 5, 0, 5, 6, 6, 1, 0, 20, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.183355}", "{'[0, 5, 0, 5, 6, 6, 1, 0, 20, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.180925}", "{'[0, 5, 0, 5, 6, 6, 1, 0, 20, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.180602}", "{'[0, 5, 0, 5, 6, 6, 1, 0, 20, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.180971}", "{'[0, 5, 0, 5, 6, 6, 1, 0, 20, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.181226}", "{'[0, 5, 0, 5, 6, 6, 1, 0, 20, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.18133}", "{'[0, 5, 0, 5, 6, 6, 1, 0, 20, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.181022}", "{'[0, 5, 0, 5, 6, 6, 1, 0, 20, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.179412}", "{'[0, 5, 0, 5, 6, 6, 1, 0, 20, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.176747}", "{'[0, 5, 0, 5, 6, 6, 1, 0, 20, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.180964}", "{'[0, 5, 0, 5, 6, 6, 1, 0, 20, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.181132}", "{'[0, 5, 0, 5, 6, 6, 1, 0, 20, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.181325}", "{'[0, 5, 0, 5, 6, 6, 1, 0, 20, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.180888}", "{'[0, 5, 0, 5, 6, 6, 1, 0, 20, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.180753}", "{'[0, 5, 0, 5, 6, 6, 1, 0, 20, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.185043}", "{'[0, 5, 0, 5, 6, 6, 1, 0, 20, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.186354}", "{'[0, 5, 0, 5, 6, 6, 1, 0, 20, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.186552}", "{'[0, 5, 0, 5, 6, 6, 1, 0, 20, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.186375}", "{'[0, 5, 0, 5, 6, 6, 1, 0, 20, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.182642}", "{'[0, 5, 0, 5, 6, 6, 1, 0, 20, 0, 0, 1, 0, 1, 1, 1, 1, 1]' : 0.180609}"]
returning from 'run': {'[0, 5, 0, 5, 6, 6, 1, 0, 20, 0, 0, 1, 0, 1, 1, 1, 1, 1]': ([0.187435, 0.185447, 0.181948, 0.181102, 0.181023, 0.180849, 0.180812, 0.182364, 0.186337, 0.186374, 0.183355, 0.180925, 0.180602, 0.180971, 0.181226, 0.18133, 0.181022, 0.179412, 0.176747, 0.180964, 0.181132, 0.181325, 0.180888, 0.180753, 0.185043, 0.186354, 0.186552, 0.186375, 0.182642, 0.180609], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 5, 0, 5, 6, 6, 1, 0, 20, 0, 0, 1, 0, 1, 1, 1, 1, 1]': ([0.187435, 0.185447, 0.181948, 0.181102, 0.181023, 0.180849, 0.180812, 0.182364, 0.186337, 0.186374, 0.183355, 0.180925, 0.180602, 0.180971, 0.181226, 0.18133, 0.181022, 0.179412, 0.176747, 0.180964, 0.181132, 0.181325, 0.180888, 0.180753, 0.185043, 0.186354, 0.186552, 0.186375, 0.182642, 0.180609], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	28
        Max loop nest depth: 	6
        Additions: 		1061
        Multiplications: 	312
        Divisions: 		0
        Logical: 		0
        Reads: 			1858
        Writes: 		251
        Comparisons:		28
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest19.exe __orio_perftest19.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest19.exe  
Program Test Output: 
{'[2, 6, 3, 5, 0, 6, 1, 0, 29, 2, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.191622}
{'[2, 6, 3, 5, 0, 6, 1, 0, 29, 2, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.191077}
{'[2, 6, 3, 5, 0, 6, 1, 0, 29, 2, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.164028}
{'[2, 6, 3, 5, 0, 6, 1, 0, 29, 2, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.161229}
{'[2, 6, 3, 5, 0, 6, 1, 0, 29, 2, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.161245}
{'[2, 6, 3, 5, 0, 6, 1, 0, 29, 2, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.161083}
{'[2, 6, 3, 5, 0, 6, 1, 0, 29, 2, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.161045}
{'[2, 6, 3, 5, 0, 6, 1, 0, 29, 2, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.161132}
{'[2, 6, 3, 5, 0, 6, 1, 0, 29, 2, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.161035}
{'[2, 6, 3, 5, 0, 6, 1, 0, 29, 2, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.161085}
{'[2, 6, 3, 5, 0, 6, 1, 0, 29, 2, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.161444}
{'[2, 6, 3, 5, 0, 6, 1, 0, 29, 2, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.16107}
{'[2, 6, 3, 5, 0, 6, 1, 0, 29, 2, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.161087}
{'[2, 6, 3, 5, 0, 6, 1, 0, 29, 2, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.161082}
{'[2, 6, 3, 5, 0, 6, 1, 0, 29, 2, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.161109}
{'[2, 6, 3, 5, 0, 6, 1, 0, 29, 2, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.161101}
{'[2, 6, 3, 5, 0, 6, 1, 0, 29, 2, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.161082}
{'[2, 6, 3, 5, 0, 6, 1, 0, 29, 2, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.16133}
{'[2, 6, 3, 5, 0, 6, 1, 0, 29, 2, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.161097}
{'[2, 6, 3, 5, 0, 6, 1, 0, 29, 2, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.161055}
{'[2, 6, 3, 5, 0, 6, 1, 0, 29, 2, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.16151}
{'[2, 6, 3, 5, 0, 6, 1, 0, 29, 2, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.161421}
{'[2, 6, 3, 5, 0, 6, 1, 0, 29, 2, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.161046}
{'[2, 6, 3, 5, 0, 6, 1, 0, 29, 2, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.161047}
{'[2, 6, 3, 5, 0, 6, 1, 0, 29, 2, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.161102}
{'[2, 6, 3, 5, 0, 6, 1, 0, 29, 2, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.161162}
{'[2, 6, 3, 5, 0, 6, 1, 0, 29, 2, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.160981}
{'[2, 6, 3, 5, 0, 6, 1, 0, 29, 2, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.161134}
{'[2, 6, 3, 5, 0, 6, 1, 0, 29, 2, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.161398}
{'[2, 6, 3, 5, 0, 6, 1, 0, 29, 2, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.161326}

out:
 ["{'[2, 6, 3, 5, 0, 6, 1, 0, 29, 2, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.191622}", "{'[2, 6, 3, 5, 0, 6, 1, 0, 29, 2, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.191077}", "{'[2, 6, 3, 5, 0, 6, 1, 0, 29, 2, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.164028}", "{'[2, 6, 3, 5, 0, 6, 1, 0, 29, 2, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.161229}", "{'[2, 6, 3, 5, 0, 6, 1, 0, 29, 2, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.161245}", "{'[2, 6, 3, 5, 0, 6, 1, 0, 29, 2, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.161083}", "{'[2, 6, 3, 5, 0, 6, 1, 0, 29, 2, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.161045}", "{'[2, 6, 3, 5, 0, 6, 1, 0, 29, 2, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.161132}", "{'[2, 6, 3, 5, 0, 6, 1, 0, 29, 2, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.161035}", "{'[2, 6, 3, 5, 0, 6, 1, 0, 29, 2, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.161085}", "{'[2, 6, 3, 5, 0, 6, 1, 0, 29, 2, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.161444}", "{'[2, 6, 3, 5, 0, 6, 1, 0, 29, 2, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.16107}", "{'[2, 6, 3, 5, 0, 6, 1, 0, 29, 2, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.161087}", "{'[2, 6, 3, 5, 0, 6, 1, 0, 29, 2, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.161082}", "{'[2, 6, 3, 5, 0, 6, 1, 0, 29, 2, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.161109}", "{'[2, 6, 3, 5, 0, 6, 1, 0, 29, 2, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.161101}", "{'[2, 6, 3, 5, 0, 6, 1, 0, 29, 2, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.161082}", "{'[2, 6, 3, 5, 0, 6, 1, 0, 29, 2, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.16133}", "{'[2, 6, 3, 5, 0, 6, 1, 0, 29, 2, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.161097}", "{'[2, 6, 3, 5, 0, 6, 1, 0, 29, 2, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.161055}", "{'[2, 6, 3, 5, 0, 6, 1, 0, 29, 2, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.16151}", "{'[2, 6, 3, 5, 0, 6, 1, 0, 29, 2, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.161421}", "{'[2, 6, 3, 5, 0, 6, 1, 0, 29, 2, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.161046}", "{'[2, 6, 3, 5, 0, 6, 1, 0, 29, 2, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.161047}", "{'[2, 6, 3, 5, 0, 6, 1, 0, 29, 2, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.161102}", "{'[2, 6, 3, 5, 0, 6, 1, 0, 29, 2, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.161162}", "{'[2, 6, 3, 5, 0, 6, 1, 0, 29, 2, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.160981}", "{'[2, 6, 3, 5, 0, 6, 1, 0, 29, 2, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.161134}", "{'[2, 6, 3, 5, 0, 6, 1, 0, 29, 2, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.161398}", "{'[2, 6, 3, 5, 0, 6, 1, 0, 29, 2, 0, 4, 0, 0, 2, 0, 0, 0]' : 0.161326}"]
returning from 'run': {'[2, 6, 3, 5, 0, 6, 1, 0, 29, 2, 0, 4, 0, 0, 2, 0, 0, 0]': ([0.191622, 0.191077, 0.164028, 0.161229, 0.161245, 0.161083, 0.161045, 0.161132, 0.161035, 0.161085, 0.161444, 0.16107, 0.161087, 0.161082, 0.161109, 0.161101, 0.161082, 0.16133, 0.161097, 0.161055, 0.16151, 0.161421, 0.161046, 0.161047, 0.161102, 0.161162, 0.160981, 0.161134, 0.161398, 0.161326], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 6, 3, 5, 0, 6, 1, 0, 29, 2, 0, 4, 0, 0, 2, 0, 0, 0]': ([0.191622, 0.191077, 0.164028, 0.161229, 0.161245, 0.161083, 0.161045, 0.161132, 0.161035, 0.161085, 0.161444, 0.16107, 0.161087, 0.161082, 0.161109, 0.161101, 0.161082, 0.16133, 0.161097, 0.161055, 0.16151, 0.161421, 0.161046, 0.161047, 0.161102, 0.161162, 0.160981, 0.161134, 0.161398, 0.161326], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	6
        Additions: 		1110
        Multiplications: 	504
        Divisions: 		0
        Logical: 		0
        Reads: 			2220
        Writes: 		386
        Comparisons:		22
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest20.exe __orio_perftest20.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest20.exe  
Program Test Output: 
{'[3, 0, 1, 2, 0, 6, 1, 1, 3, 0, 19, 5, 1, 0, 0, 1, 0, 1]' : 0.126863}
{'[3, 0, 1, 2, 0, 6, 1, 1, 3, 0, 19, 5, 1, 0, 0, 1, 0, 1]' : 0.126715}
{'[3, 0, 1, 2, 0, 6, 1, 1, 3, 0, 19, 5, 1, 0, 0, 1, 0, 1]' : 0.11988}
{'[3, 0, 1, 2, 0, 6, 1, 1, 3, 0, 19, 5, 1, 0, 0, 1, 0, 1]' : 0.110307}
{'[3, 0, 1, 2, 0, 6, 1, 1, 3, 0, 19, 5, 1, 0, 0, 1, 0, 1]' : 0.110347}
{'[3, 0, 1, 2, 0, 6, 1, 1, 3, 0, 19, 5, 1, 0, 0, 1, 0, 1]' : 0.110499}
{'[3, 0, 1, 2, 0, 6, 1, 1, 3, 0, 19, 5, 1, 0, 0, 1, 0, 1]' : 0.110568}
{'[3, 0, 1, 2, 0, 6, 1, 1, 3, 0, 19, 5, 1, 0, 0, 1, 0, 1]' : 0.110504}
{'[3, 0, 1, 2, 0, 6, 1, 1, 3, 0, 19, 5, 1, 0, 0, 1, 0, 1]' : 0.110474}
{'[3, 0, 1, 2, 0, 6, 1, 1, 3, 0, 19, 5, 1, 0, 0, 1, 0, 1]' : 0.11038}
{'[3, 0, 1, 2, 0, 6, 1, 1, 3, 0, 19, 5, 1, 0, 0, 1, 0, 1]' : 0.110432}
{'[3, 0, 1, 2, 0, 6, 1, 1, 3, 0, 19, 5, 1, 0, 0, 1, 0, 1]' : 0.110422}
{'[3, 0, 1, 2, 0, 6, 1, 1, 3, 0, 19, 5, 1, 0, 0, 1, 0, 1]' : 0.110498}
{'[3, 0, 1, 2, 0, 6, 1, 1, 3, 0, 19, 5, 1, 0, 0, 1, 0, 1]' : 0.110543}
{'[3, 0, 1, 2, 0, 6, 1, 1, 3, 0, 19, 5, 1, 0, 0, 1, 0, 1]' : 0.110477}
{'[3, 0, 1, 2, 0, 6, 1, 1, 3, 0, 19, 5, 1, 0, 0, 1, 0, 1]' : 0.110406}
{'[3, 0, 1, 2, 0, 6, 1, 1, 3, 0, 19, 5, 1, 0, 0, 1, 0, 1]' : 0.110523}
{'[3, 0, 1, 2, 0, 6, 1, 1, 3, 0, 19, 5, 1, 0, 0, 1, 0, 1]' : 0.110416}
{'[3, 0, 1, 2, 0, 6, 1, 1, 3, 0, 19, 5, 1, 0, 0, 1, 0, 1]' : 0.110928}
{'[3, 0, 1, 2, 0, 6, 1, 1, 3, 0, 19, 5, 1, 0, 0, 1, 0, 1]' : 0.110385}
{'[3, 0, 1, 2, 0, 6, 1, 1, 3, 0, 19, 5, 1, 0, 0, 1, 0, 1]' : 0.110468}
{'[3, 0, 1, 2, 0, 6, 1, 1, 3, 0, 19, 5, 1, 0, 0, 1, 0, 1]' : 0.11045}
{'[3, 0, 1, 2, 0, 6, 1, 1, 3, 0, 19, 5, 1, 0, 0, 1, 0, 1]' : 0.110416}
{'[3, 0, 1, 2, 0, 6, 1, 1, 3, 0, 19, 5, 1, 0, 0, 1, 0, 1]' : 0.110578}
{'[3, 0, 1, 2, 0, 6, 1, 1, 3, 0, 19, 5, 1, 0, 0, 1, 0, 1]' : 0.110662}
{'[3, 0, 1, 2, 0, 6, 1, 1, 3, 0, 19, 5, 1, 0, 0, 1, 0, 1]' : 0.111173}
{'[3, 0, 1, 2, 0, 6, 1, 1, 3, 0, 19, 5, 1, 0, 0, 1, 0, 1]' : 0.110652}
{'[3, 0, 1, 2, 0, 6, 1, 1, 3, 0, 19, 5, 1, 0, 0, 1, 0, 1]' : 0.110464}
{'[3, 0, 1, 2, 0, 6, 1, 1, 3, 0, 19, 5, 1, 0, 0, 1, 0, 1]' : 0.110421}
{'[3, 0, 1, 2, 0, 6, 1, 1, 3, 0, 19, 5, 1, 0, 0, 1, 0, 1]' : 0.110405}

out:
 ["{'[3, 0, 1, 2, 0, 6, 1, 1, 3, 0, 19, 5, 1, 0, 0, 1, 0, 1]' : 0.126863}", "{'[3, 0, 1, 2, 0, 6, 1, 1, 3, 0, 19, 5, 1, 0, 0, 1, 0, 1]' : 0.126715}", "{'[3, 0, 1, 2, 0, 6, 1, 1, 3, 0, 19, 5, 1, 0, 0, 1, 0, 1]' : 0.11988}", "{'[3, 0, 1, 2, 0, 6, 1, 1, 3, 0, 19, 5, 1, 0, 0, 1, 0, 1]' : 0.110307}", "{'[3, 0, 1, 2, 0, 6, 1, 1, 3, 0, 19, 5, 1, 0, 0, 1, 0, 1]' : 0.110347}", "{'[3, 0, 1, 2, 0, 6, 1, 1, 3, 0, 19, 5, 1, 0, 0, 1, 0, 1]' : 0.110499}", "{'[3, 0, 1, 2, 0, 6, 1, 1, 3, 0, 19, 5, 1, 0, 0, 1, 0, 1]' : 0.110568}", "{'[3, 0, 1, 2, 0, 6, 1, 1, 3, 0, 19, 5, 1, 0, 0, 1, 0, 1]' : 0.110504}", "{'[3, 0, 1, 2, 0, 6, 1, 1, 3, 0, 19, 5, 1, 0, 0, 1, 0, 1]' : 0.110474}", "{'[3, 0, 1, 2, 0, 6, 1, 1, 3, 0, 19, 5, 1, 0, 0, 1, 0, 1]' : 0.11038}", "{'[3, 0, 1, 2, 0, 6, 1, 1, 3, 0, 19, 5, 1, 0, 0, 1, 0, 1]' : 0.110432}", "{'[3, 0, 1, 2, 0, 6, 1, 1, 3, 0, 19, 5, 1, 0, 0, 1, 0, 1]' : 0.110422}", "{'[3, 0, 1, 2, 0, 6, 1, 1, 3, 0, 19, 5, 1, 0, 0, 1, 0, 1]' : 0.110498}", "{'[3, 0, 1, 2, 0, 6, 1, 1, 3, 0, 19, 5, 1, 0, 0, 1, 0, 1]' : 0.110543}", "{'[3, 0, 1, 2, 0, 6, 1, 1, 3, 0, 19, 5, 1, 0, 0, 1, 0, 1]' : 0.110477}", "{'[3, 0, 1, 2, 0, 6, 1, 1, 3, 0, 19, 5, 1, 0, 0, 1, 0, 1]' : 0.110406}", "{'[3, 0, 1, 2, 0, 6, 1, 1, 3, 0, 19, 5, 1, 0, 0, 1, 0, 1]' : 0.110523}", "{'[3, 0, 1, 2, 0, 6, 1, 1, 3, 0, 19, 5, 1, 0, 0, 1, 0, 1]' : 0.110416}", "{'[3, 0, 1, 2, 0, 6, 1, 1, 3, 0, 19, 5, 1, 0, 0, 1, 0, 1]' : 0.110928}", "{'[3, 0, 1, 2, 0, 6, 1, 1, 3, 0, 19, 5, 1, 0, 0, 1, 0, 1]' : 0.110385}", "{'[3, 0, 1, 2, 0, 6, 1, 1, 3, 0, 19, 5, 1, 0, 0, 1, 0, 1]' : 0.110468}", "{'[3, 0, 1, 2, 0, 6, 1, 1, 3, 0, 19, 5, 1, 0, 0, 1, 0, 1]' : 0.11045}", "{'[3, 0, 1, 2, 0, 6, 1, 1, 3, 0, 19, 5, 1, 0, 0, 1, 0, 1]' : 0.110416}", "{'[3, 0, 1, 2, 0, 6, 1, 1, 3, 0, 19, 5, 1, 0, 0, 1, 0, 1]' : 0.110578}", "{'[3, 0, 1, 2, 0, 6, 1, 1, 3, 0, 19, 5, 1, 0, 0, 1, 0, 1]' : 0.110662}", "{'[3, 0, 1, 2, 0, 6, 1, 1, 3, 0, 19, 5, 1, 0, 0, 1, 0, 1]' : 0.111173}", "{'[3, 0, 1, 2, 0, 6, 1, 1, 3, 0, 19, 5, 1, 0, 0, 1, 0, 1]' : 0.110652}", "{'[3, 0, 1, 2, 0, 6, 1, 1, 3, 0, 19, 5, 1, 0, 0, 1, 0, 1]' : 0.110464}", "{'[3, 0, 1, 2, 0, 6, 1, 1, 3, 0, 19, 5, 1, 0, 0, 1, 0, 1]' : 0.110421}", "{'[3, 0, 1, 2, 0, 6, 1, 1, 3, 0, 19, 5, 1, 0, 0, 1, 0, 1]' : 0.110405}"]
returning from 'run': {'[3, 0, 1, 2, 0, 6, 1, 1, 3, 0, 19, 5, 1, 0, 0, 1, 0, 1]': ([0.126863, 0.126715, 0.11988, 0.110307, 0.110347, 0.110499, 0.110568, 0.110504, 0.110474, 0.11038, 0.110432, 0.110422, 0.110498, 0.110543, 0.110477, 0.110406, 0.110523, 0.110416, 0.110928, 0.110385, 0.110468, 0.11045, 0.110416, 0.110578, 0.110662, 0.111173, 0.110652, 0.110464, 0.110421, 0.110405], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 0, 1, 2, 0, 6, 1, 1, 3, 0, 19, 5, 1, 0, 0, 1, 0, 1]': ([0.126863, 0.126715, 0.11988, 0.110307, 0.110347, 0.110499, 0.110568, 0.110504, 0.110474, 0.11038, 0.110432, 0.110422, 0.110498, 0.110543, 0.110477, 0.110406, 0.110523, 0.110416, 0.110928, 0.110385, 0.110468, 0.11045, 0.110416, 0.110578, 0.110662, 0.111173, 0.110652, 0.110464, 0.110421, 0.110405], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	29
        Max loop nest depth: 	6
        Additions: 		315
        Multiplications: 	72
        Divisions: 		0
        Logical: 		0
        Reads: 			667
        Writes: 		122
        Comparisons:		29
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest21.exe __orio_perftest21.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest21.exe  
Program Test Output: 
{'[2, 1, 1, 2, 6, 0, 0, 1, 0, 4, 3, 0, 0, 0, 0, 0, 1, 1]' : 0.215457}
{'[2, 1, 1, 2, 6, 0, 0, 1, 0, 4, 3, 0, 0, 0, 0, 0, 1, 1]' : 0.207413}
{'[2, 1, 1, 2, 6, 0, 0, 1, 0, 4, 3, 0, 0, 0, 0, 0, 1, 1]' : 0.183605}
{'[2, 1, 1, 2, 6, 0, 0, 1, 0, 4, 3, 0, 0, 0, 0, 0, 1, 1]' : 0.183337}
{'[2, 1, 1, 2, 6, 0, 0, 1, 0, 4, 3, 0, 0, 0, 0, 0, 1, 1]' : 0.183667}
{'[2, 1, 1, 2, 6, 0, 0, 1, 0, 4, 3, 0, 0, 0, 0, 0, 1, 1]' : 0.183373}
{'[2, 1, 1, 2, 6, 0, 0, 1, 0, 4, 3, 0, 0, 0, 0, 0, 1, 1]' : 0.183303}
{'[2, 1, 1, 2, 6, 0, 0, 1, 0, 4, 3, 0, 0, 0, 0, 0, 1, 1]' : 0.183333}
{'[2, 1, 1, 2, 6, 0, 0, 1, 0, 4, 3, 0, 0, 0, 0, 0, 1, 1]' : 0.183365}
{'[2, 1, 1, 2, 6, 0, 0, 1, 0, 4, 3, 0, 0, 0, 0, 0, 1, 1]' : 0.183363}
{'[2, 1, 1, 2, 6, 0, 0, 1, 0, 4, 3, 0, 0, 0, 0, 0, 1, 1]' : 0.183303}
{'[2, 1, 1, 2, 6, 0, 0, 1, 0, 4, 3, 0, 0, 0, 0, 0, 1, 1]' : 0.183748}
{'[2, 1, 1, 2, 6, 0, 0, 1, 0, 4, 3, 0, 0, 0, 0, 0, 1, 1]' : 0.183435}
{'[2, 1, 1, 2, 6, 0, 0, 1, 0, 4, 3, 0, 0, 0, 0, 0, 1, 1]' : 0.183723}
{'[2, 1, 1, 2, 6, 0, 0, 1, 0, 4, 3, 0, 0, 0, 0, 0, 1, 1]' : 0.183454}
{'[2, 1, 1, 2, 6, 0, 0, 1, 0, 4, 3, 0, 0, 0, 0, 0, 1, 1]' : 0.183368}
{'[2, 1, 1, 2, 6, 0, 0, 1, 0, 4, 3, 0, 0, 0, 0, 0, 1, 1]' : 0.183403}
{'[2, 1, 1, 2, 6, 0, 0, 1, 0, 4, 3, 0, 0, 0, 0, 0, 1, 1]' : 0.183387}
{'[2, 1, 1, 2, 6, 0, 0, 1, 0, 4, 3, 0, 0, 0, 0, 0, 1, 1]' : 0.183345}
{'[2, 1, 1, 2, 6, 0, 0, 1, 0, 4, 3, 0, 0, 0, 0, 0, 1, 1]' : 0.183265}
{'[2, 1, 1, 2, 6, 0, 0, 1, 0, 4, 3, 0, 0, 0, 0, 0, 1, 1]' : 0.183682}
{'[2, 1, 1, 2, 6, 0, 0, 1, 0, 4, 3, 0, 0, 0, 0, 0, 1, 1]' : 0.18341}
{'[2, 1, 1, 2, 6, 0, 0, 1, 0, 4, 3, 0, 0, 0, 0, 0, 1, 1]' : 0.1836}
{'[2, 1, 1, 2, 6, 0, 0, 1, 0, 4, 3, 0, 0, 0, 0, 0, 1, 1]' : 0.183452}
{'[2, 1, 1, 2, 6, 0, 0, 1, 0, 4, 3, 0, 0, 0, 0, 0, 1, 1]' : 0.183377}
{'[2, 1, 1, 2, 6, 0, 0, 1, 0, 4, 3, 0, 0, 0, 0, 0, 1, 1]' : 0.183336}
{'[2, 1, 1, 2, 6, 0, 0, 1, 0, 4, 3, 0, 0, 0, 0, 0, 1, 1]' : 0.183366}
{'[2, 1, 1, 2, 6, 0, 0, 1, 0, 4, 3, 0, 0, 0, 0, 0, 1, 1]' : 0.183455}
{'[2, 1, 1, 2, 6, 0, 0, 1, 0, 4, 3, 0, 0, 0, 0, 0, 1, 1]' : 0.183388}
{'[2, 1, 1, 2, 6, 0, 0, 1, 0, 4, 3, 0, 0, 0, 0, 0, 1, 1]' : 0.183575}

out:
 ["{'[2, 1, 1, 2, 6, 0, 0, 1, 0, 4, 3, 0, 0, 0, 0, 0, 1, 1]' : 0.215457}", "{'[2, 1, 1, 2, 6, 0, 0, 1, 0, 4, 3, 0, 0, 0, 0, 0, 1, 1]' : 0.207413}", "{'[2, 1, 1, 2, 6, 0, 0, 1, 0, 4, 3, 0, 0, 0, 0, 0, 1, 1]' : 0.183605}", "{'[2, 1, 1, 2, 6, 0, 0, 1, 0, 4, 3, 0, 0, 0, 0, 0, 1, 1]' : 0.183337}", "{'[2, 1, 1, 2, 6, 0, 0, 1, 0, 4, 3, 0, 0, 0, 0, 0, 1, 1]' : 0.183667}", "{'[2, 1, 1, 2, 6, 0, 0, 1, 0, 4, 3, 0, 0, 0, 0, 0, 1, 1]' : 0.183373}", "{'[2, 1, 1, 2, 6, 0, 0, 1, 0, 4, 3, 0, 0, 0, 0, 0, 1, 1]' : 0.183303}", "{'[2, 1, 1, 2, 6, 0, 0, 1, 0, 4, 3, 0, 0, 0, 0, 0, 1, 1]' : 0.183333}", "{'[2, 1, 1, 2, 6, 0, 0, 1, 0, 4, 3, 0, 0, 0, 0, 0, 1, 1]' : 0.183365}", "{'[2, 1, 1, 2, 6, 0, 0, 1, 0, 4, 3, 0, 0, 0, 0, 0, 1, 1]' : 0.183363}", "{'[2, 1, 1, 2, 6, 0, 0, 1, 0, 4, 3, 0, 0, 0, 0, 0, 1, 1]' : 0.183303}", "{'[2, 1, 1, 2, 6, 0, 0, 1, 0, 4, 3, 0, 0, 0, 0, 0, 1, 1]' : 0.183748}", "{'[2, 1, 1, 2, 6, 0, 0, 1, 0, 4, 3, 0, 0, 0, 0, 0, 1, 1]' : 0.183435}", "{'[2, 1, 1, 2, 6, 0, 0, 1, 0, 4, 3, 0, 0, 0, 0, 0, 1, 1]' : 0.183723}", "{'[2, 1, 1, 2, 6, 0, 0, 1, 0, 4, 3, 0, 0, 0, 0, 0, 1, 1]' : 0.183454}", "{'[2, 1, 1, 2, 6, 0, 0, 1, 0, 4, 3, 0, 0, 0, 0, 0, 1, 1]' : 0.183368}", "{'[2, 1, 1, 2, 6, 0, 0, 1, 0, 4, 3, 0, 0, 0, 0, 0, 1, 1]' : 0.183403}", "{'[2, 1, 1, 2, 6, 0, 0, 1, 0, 4, 3, 0, 0, 0, 0, 0, 1, 1]' : 0.183387}", "{'[2, 1, 1, 2, 6, 0, 0, 1, 0, 4, 3, 0, 0, 0, 0, 0, 1, 1]' : 0.183345}", "{'[2, 1, 1, 2, 6, 0, 0, 1, 0, 4, 3, 0, 0, 0, 0, 0, 1, 1]' : 0.183265}", "{'[2, 1, 1, 2, 6, 0, 0, 1, 0, 4, 3, 0, 0, 0, 0, 0, 1, 1]' : 0.183682}", "{'[2, 1, 1, 2, 6, 0, 0, 1, 0, 4, 3, 0, 0, 0, 0, 0, 1, 1]' : 0.18341}", "{'[2, 1, 1, 2, 6, 0, 0, 1, 0, 4, 3, 0, 0, 0, 0, 0, 1, 1]' : 0.1836}", "{'[2, 1, 1, 2, 6, 0, 0, 1, 0, 4, 3, 0, 0, 0, 0, 0, 1, 1]' : 0.183452}", "{'[2, 1, 1, 2, 6, 0, 0, 1, 0, 4, 3, 0, 0, 0, 0, 0, 1, 1]' : 0.183377}", "{'[2, 1, 1, 2, 6, 0, 0, 1, 0, 4, 3, 0, 0, 0, 0, 0, 1, 1]' : 0.183336}", "{'[2, 1, 1, 2, 6, 0, 0, 1, 0, 4, 3, 0, 0, 0, 0, 0, 1, 1]' : 0.183366}", "{'[2, 1, 1, 2, 6, 0, 0, 1, 0, 4, 3, 0, 0, 0, 0, 0, 1, 1]' : 0.183455}", "{'[2, 1, 1, 2, 6, 0, 0, 1, 0, 4, 3, 0, 0, 0, 0, 0, 1, 1]' : 0.183388}", "{'[2, 1, 1, 2, 6, 0, 0, 1, 0, 4, 3, 0, 0, 0, 0, 0, 1, 1]' : 0.183575}"]
returning from 'run': {'[2, 1, 1, 2, 6, 0, 0, 1, 0, 4, 3, 0, 0, 0, 0, 0, 1, 1]': ([0.215457, 0.207413, 0.183605, 0.183337, 0.183667, 0.183373, 0.183303, 0.183333, 0.183365, 0.183363, 0.183303, 0.183748, 0.183435, 0.183723, 0.183454, 0.183368, 0.183403, 0.183387, 0.183345, 0.183265, 0.183682, 0.18341, 0.1836, 0.183452, 0.183377, 0.183336, 0.183366, 0.183455, 0.183388, 0.183575], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 1, 1, 2, 6, 0, 0, 1, 0, 4, 3, 0, 0, 0, 0, 0, 1, 1]': ([0.215457, 0.207413, 0.183605, 0.183337, 0.183667, 0.183373, 0.183303, 0.183333, 0.183365, 0.183363, 0.183303, 0.183748, 0.183435, 0.183723, 0.183454, 0.183368, 0.183403, 0.183387, 0.183345, 0.183265, 0.183682, 0.18341, 0.1836, 0.183452, 0.183377, 0.183336, 0.183366, 0.183455, 0.183388, 0.183575], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	48
        Max loop nest depth: 	5
        Additions: 		4645
        Multiplications: 	1368
        Divisions: 		0
        Logical: 		0
        Reads: 			7330
        Writes: 		877
        Comparisons:		48
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest22.exe __orio_perftest22.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest22.exe  
Program Test Output: 
{'[6, 5, 0, 5, 0, 0, 0, 1, 19, 16, 0, 27, 0, 1, 0, 0, 0, 1]' : 0.105746}
{'[6, 5, 0, 5, 0, 0, 0, 1, 19, 16, 0, 27, 0, 1, 0, 0, 0, 1]' : 0.107385}
{'[6, 5, 0, 5, 0, 0, 0, 1, 19, 16, 0, 27, 0, 1, 0, 0, 0, 1]' : 0.108059}
{'[6, 5, 0, 5, 0, 0, 0, 1, 19, 16, 0, 27, 0, 1, 0, 0, 0, 1]' : 0.108047}
{'[6, 5, 0, 5, 0, 0, 0, 1, 19, 16, 0, 27, 0, 1, 0, 0, 0, 1]' : 0.108158}
{'[6, 5, 0, 5, 0, 0, 0, 1, 19, 16, 0, 27, 0, 1, 0, 0, 0, 1]' : 0.108359}
{'[6, 5, 0, 5, 0, 0, 0, 1, 19, 16, 0, 27, 0, 1, 0, 0, 0, 1]' : 0.108046}
{'[6, 5, 0, 5, 0, 0, 0, 1, 19, 16, 0, 27, 0, 1, 0, 0, 0, 1]' : 0.108114}
{'[6, 5, 0, 5, 0, 0, 0, 1, 19, 16, 0, 27, 0, 1, 0, 0, 0, 1]' : 0.10708}
{'[6, 5, 0, 5, 0, 0, 0, 1, 19, 16, 0, 27, 0, 1, 0, 0, 0, 1]' : 0.105229}
{'[6, 5, 0, 5, 0, 0, 0, 1, 19, 16, 0, 27, 0, 1, 0, 0, 0, 1]' : 0.107043}
{'[6, 5, 0, 5, 0, 0, 0, 1, 19, 16, 0, 27, 0, 1, 0, 0, 0, 1]' : 0.110794}
{'[6, 5, 0, 5, 0, 0, 0, 1, 19, 16, 0, 27, 0, 1, 0, 0, 0, 1]' : 0.11077}
{'[6, 5, 0, 5, 0, 0, 0, 1, 19, 16, 0, 27, 0, 1, 0, 0, 0, 1]' : 0.111023}
{'[6, 5, 0, 5, 0, 0, 0, 1, 19, 16, 0, 27, 0, 1, 0, 0, 0, 1]' : 0.110816}
{'[6, 5, 0, 5, 0, 0, 0, 1, 19, 16, 0, 27, 0, 1, 0, 0, 0, 1]' : 0.110841}
{'[6, 5, 0, 5, 0, 0, 0, 1, 19, 16, 0, 27, 0, 1, 0, 0, 0, 1]' : 0.110747}
{'[6, 5, 0, 5, 0, 0, 0, 1, 19, 16, 0, 27, 0, 1, 0, 0, 0, 1]' : 0.110127}
{'[6, 5, 0, 5, 0, 0, 0, 1, 19, 16, 0, 27, 0, 1, 0, 0, 0, 1]' : 0.108074}
{'[6, 5, 0, 5, 0, 0, 0, 1, 19, 16, 0, 27, 0, 1, 0, 0, 0, 1]' : 0.108787}
{'[6, 5, 0, 5, 0, 0, 0, 1, 19, 16, 0, 27, 0, 1, 0, 0, 0, 1]' : 0.110801}
{'[6, 5, 0, 5, 0, 0, 0, 1, 19, 16, 0, 27, 0, 1, 0, 0, 0, 1]' : 0.110808}
{'[6, 5, 0, 5, 0, 0, 0, 1, 19, 16, 0, 27, 0, 1, 0, 0, 0, 1]' : 0.110461}
{'[6, 5, 0, 5, 0, 0, 0, 1, 19, 16, 0, 27, 0, 1, 0, 0, 0, 1]' : 0.108296}
{'[6, 5, 0, 5, 0, 0, 0, 1, 19, 16, 0, 27, 0, 1, 0, 0, 0, 1]' : 0.108352}
{'[6, 5, 0, 5, 0, 0, 0, 1, 19, 16, 0, 27, 0, 1, 0, 0, 0, 1]' : 0.108246}
{'[6, 5, 0, 5, 0, 0, 0, 1, 19, 16, 0, 27, 0, 1, 0, 0, 0, 1]' : 0.108095}
{'[6, 5, 0, 5, 0, 0, 0, 1, 19, 16, 0, 27, 0, 1, 0, 0, 0, 1]' : 0.105533}
{'[6, 5, 0, 5, 0, 0, 0, 1, 19, 16, 0, 27, 0, 1, 0, 0, 0, 1]' : 0.105465}
{'[6, 5, 0, 5, 0, 0, 0, 1, 19, 16, 0, 27, 0, 1, 0, 0, 0, 1]' : 0.108009}

out:
 ["{'[6, 5, 0, 5, 0, 0, 0, 1, 19, 16, 0, 27, 0, 1, 0, 0, 0, 1]' : 0.105746}", "{'[6, 5, 0, 5, 0, 0, 0, 1, 19, 16, 0, 27, 0, 1, 0, 0, 0, 1]' : 0.107385}", "{'[6, 5, 0, 5, 0, 0, 0, 1, 19, 16, 0, 27, 0, 1, 0, 0, 0, 1]' : 0.108059}", "{'[6, 5, 0, 5, 0, 0, 0, 1, 19, 16, 0, 27, 0, 1, 0, 0, 0, 1]' : 0.108047}", "{'[6, 5, 0, 5, 0, 0, 0, 1, 19, 16, 0, 27, 0, 1, 0, 0, 0, 1]' : 0.108158}", "{'[6, 5, 0, 5, 0, 0, 0, 1, 19, 16, 0, 27, 0, 1, 0, 0, 0, 1]' : 0.108359}", "{'[6, 5, 0, 5, 0, 0, 0, 1, 19, 16, 0, 27, 0, 1, 0, 0, 0, 1]' : 0.108046}", "{'[6, 5, 0, 5, 0, 0, 0, 1, 19, 16, 0, 27, 0, 1, 0, 0, 0, 1]' : 0.108114}", "{'[6, 5, 0, 5, 0, 0, 0, 1, 19, 16, 0, 27, 0, 1, 0, 0, 0, 1]' : 0.10708}", "{'[6, 5, 0, 5, 0, 0, 0, 1, 19, 16, 0, 27, 0, 1, 0, 0, 0, 1]' : 0.105229}", "{'[6, 5, 0, 5, 0, 0, 0, 1, 19, 16, 0, 27, 0, 1, 0, 0, 0, 1]' : 0.107043}", "{'[6, 5, 0, 5, 0, 0, 0, 1, 19, 16, 0, 27, 0, 1, 0, 0, 0, 1]' : 0.110794}", "{'[6, 5, 0, 5, 0, 0, 0, 1, 19, 16, 0, 27, 0, 1, 0, 0, 0, 1]' : 0.11077}", "{'[6, 5, 0, 5, 0, 0, 0, 1, 19, 16, 0, 27, 0, 1, 0, 0, 0, 1]' : 0.111023}", "{'[6, 5, 0, 5, 0, 0, 0, 1, 19, 16, 0, 27, 0, 1, 0, 0, 0, 1]' : 0.110816}", "{'[6, 5, 0, 5, 0, 0, 0, 1, 19, 16, 0, 27, 0, 1, 0, 0, 0, 1]' : 0.110841}", "{'[6, 5, 0, 5, 0, 0, 0, 1, 19, 16, 0, 27, 0, 1, 0, 0, 0, 1]' : 0.110747}", "{'[6, 5, 0, 5, 0, 0, 0, 1, 19, 16, 0, 27, 0, 1, 0, 0, 0, 1]' : 0.110127}", "{'[6, 5, 0, 5, 0, 0, 0, 1, 19, 16, 0, 27, 0, 1, 0, 0, 0, 1]' : 0.108074}", "{'[6, 5, 0, 5, 0, 0, 0, 1, 19, 16, 0, 27, 0, 1, 0, 0, 0, 1]' : 0.108787}", "{'[6, 5, 0, 5, 0, 0, 0, 1, 19, 16, 0, 27, 0, 1, 0, 0, 0, 1]' : 0.110801}", "{'[6, 5, 0, 5, 0, 0, 0, 1, 19, 16, 0, 27, 0, 1, 0, 0, 0, 1]' : 0.110808}", "{'[6, 5, 0, 5, 0, 0, 0, 1, 19, 16, 0, 27, 0, 1, 0, 0, 0, 1]' : 0.110461}", "{'[6, 5, 0, 5, 0, 0, 0, 1, 19, 16, 0, 27, 0, 1, 0, 0, 0, 1]' : 0.108296}", "{'[6, 5, 0, 5, 0, 0, 0, 1, 19, 16, 0, 27, 0, 1, 0, 0, 0, 1]' : 0.108352}", "{'[6, 5, 0, 5, 0, 0, 0, 1, 19, 16, 0, 27, 0, 1, 0, 0, 0, 1]' : 0.108246}", "{'[6, 5, 0, 5, 0, 0, 0, 1, 19, 16, 0, 27, 0, 1, 0, 0, 0, 1]' : 0.108095}", "{'[6, 5, 0, 5, 0, 0, 0, 1, 19, 16, 0, 27, 0, 1, 0, 0, 0, 1]' : 0.105533}", "{'[6, 5, 0, 5, 0, 0, 0, 1, 19, 16, 0, 27, 0, 1, 0, 0, 0, 1]' : 0.105465}", "{'[6, 5, 0, 5, 0, 0, 0, 1, 19, 16, 0, 27, 0, 1, 0, 0, 0, 1]' : 0.108009}"]
returning from 'run': {'[6, 5, 0, 5, 0, 0, 0, 1, 19, 16, 0, 27, 0, 1, 0, 0, 0, 1]': ([0.105746, 0.107385, 0.108059, 0.108047, 0.108158, 0.108359, 0.108046, 0.108114, 0.10708, 0.105229, 0.107043, 0.110794, 0.11077, 0.111023, 0.110816, 0.110841, 0.110747, 0.110127, 0.108074, 0.108787, 0.110801, 0.110808, 0.110461, 0.108296, 0.108352, 0.108246, 0.108095, 0.105533, 0.105465, 0.108009], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 5, 0, 5, 0, 0, 0, 1, 19, 16, 0, 27, 0, 1, 0, 0, 0, 1]': ([0.105746, 0.107385, 0.108059, 0.108047, 0.108158, 0.108359, 0.108046, 0.108114, 0.10708, 0.105229, 0.107043, 0.110794, 0.11077, 0.111023, 0.110816, 0.110841, 0.110747, 0.110127, 0.108074, 0.108787, 0.110801, 0.110808, 0.110461, 0.108296, 0.108352, 0.108246, 0.108095, 0.105533, 0.105465, 0.108009], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = jjj
Code stats:
        Number of loops: 	62
        Max loop nest depth: 	4
        Additions: 		4802
        Multiplications: 	1404
        Divisions: 		0
        Logical: 		0
        Reads: 			7720
        Writes: 		892
        Comparisons:		62
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest23.exe __orio_perftest23.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest23.exe  
Program Test Output: 
{'[6, 4, 5, 0, 2, 0, 0, 1, 28, 8, 28, 0, 1, 1, 0, 0, 1, 0]' : 0.123675}
{'[6, 4, 5, 0, 2, 0, 0, 1, 28, 8, 28, 0, 1, 1, 0, 0, 1, 0]' : 0.123935}
{'[6, 4, 5, 0, 2, 0, 0, 1, 28, 8, 28, 0, 1, 1, 0, 0, 1, 0]' : 0.124902}
{'[6, 4, 5, 0, 2, 0, 0, 1, 28, 8, 28, 0, 1, 1, 0, 0, 1, 0]' : 0.126514}
{'[6, 4, 5, 0, 2, 0, 0, 1, 28, 8, 28, 0, 1, 1, 0, 0, 1, 0]' : 0.124148}
{'[6, 4, 5, 0, 2, 0, 0, 1, 28, 8, 28, 0, 1, 1, 0, 0, 1, 0]' : 0.12141}
{'[6, 4, 5, 0, 2, 0, 0, 1, 28, 8, 28, 0, 1, 1, 0, 0, 1, 0]' : 0.120648}
{'[6, 4, 5, 0, 2, 0, 0, 1, 28, 8, 28, 0, 1, 1, 0, 0, 1, 0]' : 0.121148}
{'[6, 4, 5, 0, 2, 0, 0, 1, 28, 8, 28, 0, 1, 1, 0, 0, 1, 0]' : 0.122172}
{'[6, 4, 5, 0, 2, 0, 0, 1, 28, 8, 28, 0, 1, 1, 0, 0, 1, 0]' : 0.12036}
{'[6, 4, 5, 0, 2, 0, 0, 1, 28, 8, 28, 0, 1, 1, 0, 0, 1, 0]' : 0.122457}
{'[6, 4, 5, 0, 2, 0, 0, 1, 28, 8, 28, 0, 1, 1, 0, 0, 1, 0]' : 0.126526}
{'[6, 4, 5, 0, 2, 0, 0, 1, 28, 8, 28, 0, 1, 1, 0, 0, 1, 0]' : 0.124899}
{'[6, 4, 5, 0, 2, 0, 0, 1, 28, 8, 28, 0, 1, 1, 0, 0, 1, 0]' : 0.123941}
{'[6, 4, 5, 0, 2, 0, 0, 1, 28, 8, 28, 0, 1, 1, 0, 0, 1, 0]' : 0.123767}
{'[6, 4, 5, 0, 2, 0, 0, 1, 28, 8, 28, 0, 1, 1, 0, 0, 1, 0]' : 0.123069}
{'[6, 4, 5, 0, 2, 0, 0, 1, 28, 8, 28, 0, 1, 1, 0, 0, 1, 0]' : 0.120438}
{'[6, 4, 5, 0, 2, 0, 0, 1, 28, 8, 28, 0, 1, 1, 0, 0, 1, 0]' : 0.120549}
{'[6, 4, 5, 0, 2, 0, 0, 1, 28, 8, 28, 0, 1, 1, 0, 0, 1, 0]' : 0.120921}
{'[6, 4, 5, 0, 2, 0, 0, 1, 28, 8, 28, 0, 1, 1, 0, 0, 1, 0]' : 0.123477}
{'[6, 4, 5, 0, 2, 0, 0, 1, 28, 8, 28, 0, 1, 1, 0, 0, 1, 0]' : 0.123689}
{'[6, 4, 5, 0, 2, 0, 0, 1, 28, 8, 28, 0, 1, 1, 0, 0, 1, 0]' : 0.1215}
{'[6, 4, 5, 0, 2, 0, 0, 1, 28, 8, 28, 0, 1, 1, 0, 0, 1, 0]' : 0.120869}
{'[6, 4, 5, 0, 2, 0, 0, 1, 28, 8, 28, 0, 1, 1, 0, 0, 1, 0]' : 0.123528}
{'[6, 4, 5, 0, 2, 0, 0, 1, 28, 8, 28, 0, 1, 1, 0, 0, 1, 0]' : 0.123653}
{'[6, 4, 5, 0, 2, 0, 0, 1, 28, 8, 28, 0, 1, 1, 0, 0, 1, 0]' : 0.123615}
{'[6, 4, 5, 0, 2, 0, 0, 1, 28, 8, 28, 0, 1, 1, 0, 0, 1, 0]' : 0.123965}
{'[6, 4, 5, 0, 2, 0, 0, 1, 28, 8, 28, 0, 1, 1, 0, 0, 1, 0]' : 0.126649}
{'[6, 4, 5, 0, 2, 0, 0, 1, 28, 8, 28, 0, 1, 1, 0, 0, 1, 0]' : 0.126189}
{'[6, 4, 5, 0, 2, 0, 0, 1, 28, 8, 28, 0, 1, 1, 0, 0, 1, 0]' : 0.121442}

out:
 ["{'[6, 4, 5, 0, 2, 0, 0, 1, 28, 8, 28, 0, 1, 1, 0, 0, 1, 0]' : 0.123675}", "{'[6, 4, 5, 0, 2, 0, 0, 1, 28, 8, 28, 0, 1, 1, 0, 0, 1, 0]' : 0.123935}", "{'[6, 4, 5, 0, 2, 0, 0, 1, 28, 8, 28, 0, 1, 1, 0, 0, 1, 0]' : 0.124902}", "{'[6, 4, 5, 0, 2, 0, 0, 1, 28, 8, 28, 0, 1, 1, 0, 0, 1, 0]' : 0.126514}", "{'[6, 4, 5, 0, 2, 0, 0, 1, 28, 8, 28, 0, 1, 1, 0, 0, 1, 0]' : 0.124148}", "{'[6, 4, 5, 0, 2, 0, 0, 1, 28, 8, 28, 0, 1, 1, 0, 0, 1, 0]' : 0.12141}", "{'[6, 4, 5, 0, 2, 0, 0, 1, 28, 8, 28, 0, 1, 1, 0, 0, 1, 0]' : 0.120648}", "{'[6, 4, 5, 0, 2, 0, 0, 1, 28, 8, 28, 0, 1, 1, 0, 0, 1, 0]' : 0.121148}", "{'[6, 4, 5, 0, 2, 0, 0, 1, 28, 8, 28, 0, 1, 1, 0, 0, 1, 0]' : 0.122172}", "{'[6, 4, 5, 0, 2, 0, 0, 1, 28, 8, 28, 0, 1, 1, 0, 0, 1, 0]' : 0.12036}", "{'[6, 4, 5, 0, 2, 0, 0, 1, 28, 8, 28, 0, 1, 1, 0, 0, 1, 0]' : 0.122457}", "{'[6, 4, 5, 0, 2, 0, 0, 1, 28, 8, 28, 0, 1, 1, 0, 0, 1, 0]' : 0.126526}", "{'[6, 4, 5, 0, 2, 0, 0, 1, 28, 8, 28, 0, 1, 1, 0, 0, 1, 0]' : 0.124899}", "{'[6, 4, 5, 0, 2, 0, 0, 1, 28, 8, 28, 0, 1, 1, 0, 0, 1, 0]' : 0.123941}", "{'[6, 4, 5, 0, 2, 0, 0, 1, 28, 8, 28, 0, 1, 1, 0, 0, 1, 0]' : 0.123767}", "{'[6, 4, 5, 0, 2, 0, 0, 1, 28, 8, 28, 0, 1, 1, 0, 0, 1, 0]' : 0.123069}", "{'[6, 4, 5, 0, 2, 0, 0, 1, 28, 8, 28, 0, 1, 1, 0, 0, 1, 0]' : 0.120438}", "{'[6, 4, 5, 0, 2, 0, 0, 1, 28, 8, 28, 0, 1, 1, 0, 0, 1, 0]' : 0.120549}", "{'[6, 4, 5, 0, 2, 0, 0, 1, 28, 8, 28, 0, 1, 1, 0, 0, 1, 0]' : 0.120921}", "{'[6, 4, 5, 0, 2, 0, 0, 1, 28, 8, 28, 0, 1, 1, 0, 0, 1, 0]' : 0.123477}", "{'[6, 4, 5, 0, 2, 0, 0, 1, 28, 8, 28, 0, 1, 1, 0, 0, 1, 0]' : 0.123689}", "{'[6, 4, 5, 0, 2, 0, 0, 1, 28, 8, 28, 0, 1, 1, 0, 0, 1, 0]' : 0.1215}", "{'[6, 4, 5, 0, 2, 0, 0, 1, 28, 8, 28, 0, 1, 1, 0, 0, 1, 0]' : 0.120869}", "{'[6, 4, 5, 0, 2, 0, 0, 1, 28, 8, 28, 0, 1, 1, 0, 0, 1, 0]' : 0.123528}", "{'[6, 4, 5, 0, 2, 0, 0, 1, 28, 8, 28, 0, 1, 1, 0, 0, 1, 0]' : 0.123653}", "{'[6, 4, 5, 0, 2, 0, 0, 1, 28, 8, 28, 0, 1, 1, 0, 0, 1, 0]' : 0.123615}", "{'[6, 4, 5, 0, 2, 0, 0, 1, 28, 8, 28, 0, 1, 1, 0, 0, 1, 0]' : 0.123965}", "{'[6, 4, 5, 0, 2, 0, 0, 1, 28, 8, 28, 0, 1, 1, 0, 0, 1, 0]' : 0.126649}", "{'[6, 4, 5, 0, 2, 0, 0, 1, 28, 8, 28, 0, 1, 1, 0, 0, 1, 0]' : 0.126189}", "{'[6, 4, 5, 0, 2, 0, 0, 1, 28, 8, 28, 0, 1, 1, 0, 0, 1, 0]' : 0.121442}"]
returning from 'run': {'[6, 4, 5, 0, 2, 0, 0, 1, 28, 8, 28, 0, 1, 1, 0, 0, 1, 0]': ([0.123675, 0.123935, 0.124902, 0.126514, 0.124148, 0.12141, 0.120648, 0.121148, 0.122172, 0.12036, 0.122457, 0.126526, 0.124899, 0.123941, 0.123767, 0.123069, 0.120438, 0.120549, 0.120921, 0.123477, 0.123689, 0.1215, 0.120869, 0.123528, 0.123653, 0.123615, 0.123965, 0.126649, 0.126189, 0.121442], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 4, 5, 0, 2, 0, 0, 1, 28, 8, 28, 0, 1, 1, 0, 0, 1, 0]': ([0.123675, 0.123935, 0.124902, 0.126514, 0.124148, 0.12141, 0.120648, 0.121148, 0.122172, 0.12036, 0.122457, 0.126526, 0.124899, 0.123941, 0.123767, 0.123069, 0.120438, 0.120549, 0.120921, 0.123477, 0.123689, 0.1215, 0.120869, 0.123528, 0.123653, 0.123615, 0.123965, 0.126649, 0.126189, 0.121442], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
Code stats:
        Number of loops: 	84
        Max loop nest depth: 	4
        Additions: 		5293
        Multiplications: 	1800
        Divisions: 		0
        Logical: 		0
        Reads: 			8892
        Writes: 		1307
        Comparisons:		84
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest24.exe __orio_perftest24.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest24.exe  
Program Test Output: 
{'[3, 5, 6, 1, 0, 0, 1, 0, 21, 20, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.105115}
{'[3, 5, 6, 1, 0, 0, 1, 0, 21, 20, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.105296}
{'[3, 5, 6, 1, 0, 0, 1, 0, 21, 20, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.105177}
{'[3, 5, 6, 1, 0, 0, 1, 0, 21, 20, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.105205}
{'[3, 5, 6, 1, 0, 0, 1, 0, 21, 20, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.099108}
{'[3, 5, 6, 1, 0, 0, 1, 0, 21, 20, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.0919209}
{'[3, 5, 6, 1, 0, 0, 1, 0, 21, 20, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.0924621}
{'[3, 5, 6, 1, 0, 0, 1, 0, 21, 20, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.092463}
{'[3, 5, 6, 1, 0, 0, 1, 0, 21, 20, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.092006}
{'[3, 5, 6, 1, 0, 0, 1, 0, 21, 20, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.091974}
{'[3, 5, 6, 1, 0, 0, 1, 0, 21, 20, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.0922561}
{'[3, 5, 6, 1, 0, 0, 1, 0, 21, 20, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.092495}
{'[3, 5, 6, 1, 0, 0, 1, 0, 21, 20, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.0924358}
{'[3, 5, 6, 1, 0, 0, 1, 0, 21, 20, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.0923958}
{'[3, 5, 6, 1, 0, 0, 1, 0, 21, 20, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.092746}
{'[3, 5, 6, 1, 0, 0, 1, 0, 21, 20, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.0924311}
{'[3, 5, 6, 1, 0, 0, 1, 0, 21, 20, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.0948591}
{'[3, 5, 6, 1, 0, 0, 1, 0, 21, 20, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.0946472}
{'[3, 5, 6, 1, 0, 0, 1, 0, 21, 20, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.0932889}
{'[3, 5, 6, 1, 0, 0, 1, 0, 21, 20, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.0930769}
{'[3, 5, 6, 1, 0, 0, 1, 0, 21, 20, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.092191}
{'[3, 5, 6, 1, 0, 0, 1, 0, 21, 20, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.0916331}
{'[3, 5, 6, 1, 0, 0, 1, 0, 21, 20, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.093257}
{'[3, 5, 6, 1, 0, 0, 1, 0, 21, 20, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.093158}
{'[3, 5, 6, 1, 0, 0, 1, 0, 21, 20, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.0932269}
{'[3, 5, 6, 1, 0, 0, 1, 0, 21, 20, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.0932088}
{'[3, 5, 6, 1, 0, 0, 1, 0, 21, 20, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.0935791}
{'[3, 5, 6, 1, 0, 0, 1, 0, 21, 20, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.0955031}
{'[3, 5, 6, 1, 0, 0, 1, 0, 21, 20, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.0955031}
{'[3, 5, 6, 1, 0, 0, 1, 0, 21, 20, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.0954819}

out:
 ["{'[3, 5, 6, 1, 0, 0, 1, 0, 21, 20, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.105115}", "{'[3, 5, 6, 1, 0, 0, 1, 0, 21, 20, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.105296}", "{'[3, 5, 6, 1, 0, 0, 1, 0, 21, 20, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.105177}", "{'[3, 5, 6, 1, 0, 0, 1, 0, 21, 20, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.105205}", "{'[3, 5, 6, 1, 0, 0, 1, 0, 21, 20, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.099108}", "{'[3, 5, 6, 1, 0, 0, 1, 0, 21, 20, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.0919209}", "{'[3, 5, 6, 1, 0, 0, 1, 0, 21, 20, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.0924621}", "{'[3, 5, 6, 1, 0, 0, 1, 0, 21, 20, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.092463}", "{'[3, 5, 6, 1, 0, 0, 1, 0, 21, 20, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.092006}", "{'[3, 5, 6, 1, 0, 0, 1, 0, 21, 20, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.091974}", "{'[3, 5, 6, 1, 0, 0, 1, 0, 21, 20, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.0922561}", "{'[3, 5, 6, 1, 0, 0, 1, 0, 21, 20, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.092495}", "{'[3, 5, 6, 1, 0, 0, 1, 0, 21, 20, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.0924358}", "{'[3, 5, 6, 1, 0, 0, 1, 0, 21, 20, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.0923958}", "{'[3, 5, 6, 1, 0, 0, 1, 0, 21, 20, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.092746}", "{'[3, 5, 6, 1, 0, 0, 1, 0, 21, 20, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.0924311}", "{'[3, 5, 6, 1, 0, 0, 1, 0, 21, 20, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.0948591}", "{'[3, 5, 6, 1, 0, 0, 1, 0, 21, 20, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.0946472}", "{'[3, 5, 6, 1, 0, 0, 1, 0, 21, 20, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.0932889}", "{'[3, 5, 6, 1, 0, 0, 1, 0, 21, 20, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.0930769}", "{'[3, 5, 6, 1, 0, 0, 1, 0, 21, 20, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.092191}", "{'[3, 5, 6, 1, 0, 0, 1, 0, 21, 20, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.0916331}", "{'[3, 5, 6, 1, 0, 0, 1, 0, 21, 20, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.093257}", "{'[3, 5, 6, 1, 0, 0, 1, 0, 21, 20, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.093158}", "{'[3, 5, 6, 1, 0, 0, 1, 0, 21, 20, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.0932269}", "{'[3, 5, 6, 1, 0, 0, 1, 0, 21, 20, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.0932088}", "{'[3, 5, 6, 1, 0, 0, 1, 0, 21, 20, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.0935791}", "{'[3, 5, 6, 1, 0, 0, 1, 0, 21, 20, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.0955031}", "{'[3, 5, 6, 1, 0, 0, 1, 0, 21, 20, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.0955031}", "{'[3, 5, 6, 1, 0, 0, 1, 0, 21, 20, 27, 0, 1, 0, 0, 1, 1, 1]' : 0.0954819}"]
returning from 'run': {'[3, 5, 6, 1, 0, 0, 1, 0, 21, 20, 27, 0, 1, 0, 0, 1, 1, 1]': ([0.105115, 0.105296, 0.105177, 0.105205, 0.099108, 0.0919209, 0.0924621, 0.092463, 0.092006, 0.091974, 0.0922561, 0.092495, 0.0924358, 0.0923958, 0.092746, 0.0924311, 0.0948591, 0.0946472, 0.0932889, 0.0930769, 0.092191, 0.0916331, 0.093257, 0.093158, 0.0932269, 0.0932088, 0.0935791, 0.0955031, 0.0955031, 0.0954819], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 5, 6, 1, 0, 0, 1, 0, 21, 20, 27, 0, 1, 0, 0, 1, 1, 1]': ([0.105115, 0.105296, 0.105177, 0.105205, 0.099108, 0.0919209, 0.0924621, 0.092463, 0.092006, 0.091974, 0.0922561, 0.092495, 0.0924358, 0.0923958, 0.092746, 0.0924311, 0.0948591, 0.0946472, 0.0932889, 0.0930769, 0.092191, 0.0916331, 0.093257, 0.093158, 0.0932269, 0.0932088, 0.0935791, 0.0955031, 0.0955031, 0.0954819], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	85
        Max loop nest depth: 	6
        Additions: 		1888
        Multiplications: 	736
        Divisions: 		0
        Logical: 		0
        Reads: 			3919
        Writes: 		753
        Comparisons:		85
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest25.exe __orio_perftest25.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest25.exe  
Program Test Output: 
{'[1, 6, 0, 1, 6, 1, 1, 1, 28, 21, 0, 2, 0, 1, 1, 1, 1, 1]' : 0.21925}
{'[1, 6, 0, 1, 6, 1, 1, 1, 28, 21, 0, 2, 0, 1, 1, 1, 1, 1]' : 0.219839}
{'[1, 6, 0, 1, 6, 1, 1, 1, 28, 21, 0, 2, 0, 1, 1, 1, 1, 1]' : 0.223644}
{'[1, 6, 0, 1, 6, 1, 1, 1, 28, 21, 0, 2, 0, 1, 1, 1, 1, 1]' : 0.223666}
{'[1, 6, 0, 1, 6, 1, 1, 1, 28, 21, 0, 2, 0, 1, 1, 1, 1, 1]' : 0.222713}
{'[1, 6, 0, 1, 6, 1, 1, 1, 28, 21, 0, 2, 0, 1, 1, 1, 1, 1]' : 0.216669}
{'[1, 6, 0, 1, 6, 1, 1, 1, 28, 21, 0, 2, 0, 1, 1, 1, 1, 1]' : 0.226867}
{'[1, 6, 0, 1, 6, 1, 1, 1, 28, 21, 0, 2, 0, 1, 1, 1, 1, 1]' : 0.223721}
{'[1, 6, 0, 1, 6, 1, 1, 1, 28, 21, 0, 2, 0, 1, 1, 1, 1, 1]' : 0.223731}
{'[1, 6, 0, 1, 6, 1, 1, 1, 28, 21, 0, 2, 0, 1, 1, 1, 1, 1]' : 0.219064}
{'[1, 6, 0, 1, 6, 1, 1, 1, 28, 21, 0, 2, 0, 1, 1, 1, 1, 1]' : 0.222217}
{'[1, 6, 0, 1, 6, 1, 1, 1, 28, 21, 0, 2, 0, 1, 1, 1, 1, 1]' : 0.225287}
{'[1, 6, 0, 1, 6, 1, 1, 1, 28, 21, 0, 2, 0, 1, 1, 1, 1, 1]' : 0.224101}
{'[1, 6, 0, 1, 6, 1, 1, 1, 28, 21, 0, 2, 0, 1, 1, 1, 1, 1]' : 0.223608}
{'[1, 6, 0, 1, 6, 1, 1, 1, 28, 21, 0, 2, 0, 1, 1, 1, 1, 1]' : 0.218645}
{'[1, 6, 0, 1, 6, 1, 1, 1, 28, 21, 0, 2, 0, 1, 1, 1, 1, 1]' : 0.223124}
{'[1, 6, 0, 1, 6, 1, 1, 1, 28, 21, 0, 2, 0, 1, 1, 1, 1, 1]' : 0.22347}
{'[1, 6, 0, 1, 6, 1, 1, 1, 28, 21, 0, 2, 0, 1, 1, 1, 1, 1]' : 0.224155}
{'[1, 6, 0, 1, 6, 1, 1, 1, 28, 21, 0, 2, 0, 1, 1, 1, 1, 1]' : 0.22183}
{'[1, 6, 0, 1, 6, 1, 1, 1, 28, 21, 0, 2, 0, 1, 1, 1, 1, 1]' : 0.219744}
{'[1, 6, 0, 1, 6, 1, 1, 1, 28, 21, 0, 2, 0, 1, 1, 1, 1, 1]' : 0.226226}
{'[1, 6, 0, 1, 6, 1, 1, 1, 28, 21, 0, 2, 0, 1, 1, 1, 1, 1]' : 0.223751}
{'[1, 6, 0, 1, 6, 1, 1, 1, 28, 21, 0, 2, 0, 1, 1, 1, 1, 1]' : 0.223831}
{'[1, 6, 0, 1, 6, 1, 1, 1, 28, 21, 0, 2, 0, 1, 1, 1, 1, 1]' : 0.217203}
{'[1, 6, 0, 1, 6, 1, 1, 1, 28, 21, 0, 2, 0, 1, 1, 1, 1, 1]' : 0.229607}
{'[1, 6, 0, 1, 6, 1, 1, 1, 28, 21, 0, 2, 0, 1, 1, 1, 1, 1]' : 0.225612}
{'[1, 6, 0, 1, 6, 1, 1, 1, 28, 21, 0, 2, 0, 1, 1, 1, 1, 1]' : 0.219473}
{'[1, 6, 0, 1, 6, 1, 1, 1, 28, 21, 0, 2, 0, 1, 1, 1, 1, 1]' : 0.217088}
{'[1, 6, 0, 1, 6, 1, 1, 1, 28, 21, 0, 2, 0, 1, 1, 1, 1, 1]' : 0.219803}
{'[1, 6, 0, 1, 6, 1, 1, 1, 28, 21, 0, 2, 0, 1, 1, 1, 1, 1]' : 0.223488}

out:
 ["{'[1, 6, 0, 1, 6, 1, 1, 1, 28, 21, 0, 2, 0, 1, 1, 1, 1, 1]' : 0.21925}", "{'[1, 6, 0, 1, 6, 1, 1, 1, 28, 21, 0, 2, 0, 1, 1, 1, 1, 1]' : 0.219839}", "{'[1, 6, 0, 1, 6, 1, 1, 1, 28, 21, 0, 2, 0, 1, 1, 1, 1, 1]' : 0.223644}", "{'[1, 6, 0, 1, 6, 1, 1, 1, 28, 21, 0, 2, 0, 1, 1, 1, 1, 1]' : 0.223666}", "{'[1, 6, 0, 1, 6, 1, 1, 1, 28, 21, 0, 2, 0, 1, 1, 1, 1, 1]' : 0.222713}", "{'[1, 6, 0, 1, 6, 1, 1, 1, 28, 21, 0, 2, 0, 1, 1, 1, 1, 1]' : 0.216669}", "{'[1, 6, 0, 1, 6, 1, 1, 1, 28, 21, 0, 2, 0, 1, 1, 1, 1, 1]' : 0.226867}", "{'[1, 6, 0, 1, 6, 1, 1, 1, 28, 21, 0, 2, 0, 1, 1, 1, 1, 1]' : 0.223721}", "{'[1, 6, 0, 1, 6, 1, 1, 1, 28, 21, 0, 2, 0, 1, 1, 1, 1, 1]' : 0.223731}", "{'[1, 6, 0, 1, 6, 1, 1, 1, 28, 21, 0, 2, 0, 1, 1, 1, 1, 1]' : 0.219064}", "{'[1, 6, 0, 1, 6, 1, 1, 1, 28, 21, 0, 2, 0, 1, 1, 1, 1, 1]' : 0.222217}", "{'[1, 6, 0, 1, 6, 1, 1, 1, 28, 21, 0, 2, 0, 1, 1, 1, 1, 1]' : 0.225287}", "{'[1, 6, 0, 1, 6, 1, 1, 1, 28, 21, 0, 2, 0, 1, 1, 1, 1, 1]' : 0.224101}", "{'[1, 6, 0, 1, 6, 1, 1, 1, 28, 21, 0, 2, 0, 1, 1, 1, 1, 1]' : 0.223608}", "{'[1, 6, 0, 1, 6, 1, 1, 1, 28, 21, 0, 2, 0, 1, 1, 1, 1, 1]' : 0.218645}", "{'[1, 6, 0, 1, 6, 1, 1, 1, 28, 21, 0, 2, 0, 1, 1, 1, 1, 1]' : 0.223124}", "{'[1, 6, 0, 1, 6, 1, 1, 1, 28, 21, 0, 2, 0, 1, 1, 1, 1, 1]' : 0.22347}", "{'[1, 6, 0, 1, 6, 1, 1, 1, 28, 21, 0, 2, 0, 1, 1, 1, 1, 1]' : 0.224155}", "{'[1, 6, 0, 1, 6, 1, 1, 1, 28, 21, 0, 2, 0, 1, 1, 1, 1, 1]' : 0.22183}", "{'[1, 6, 0, 1, 6, 1, 1, 1, 28, 21, 0, 2, 0, 1, 1, 1, 1, 1]' : 0.219744}", "{'[1, 6, 0, 1, 6, 1, 1, 1, 28, 21, 0, 2, 0, 1, 1, 1, 1, 1]' : 0.226226}", "{'[1, 6, 0, 1, 6, 1, 1, 1, 28, 21, 0, 2, 0, 1, 1, 1, 1, 1]' : 0.223751}", "{'[1, 6, 0, 1, 6, 1, 1, 1, 28, 21, 0, 2, 0, 1, 1, 1, 1, 1]' : 0.223831}", "{'[1, 6, 0, 1, 6, 1, 1, 1, 28, 21, 0, 2, 0, 1, 1, 1, 1, 1]' : 0.217203}", "{'[1, 6, 0, 1, 6, 1, 1, 1, 28, 21, 0, 2, 0, 1, 1, 1, 1, 1]' : 0.229607}", "{'[1, 6, 0, 1, 6, 1, 1, 1, 28, 21, 0, 2, 0, 1, 1, 1, 1, 1]' : 0.225612}", "{'[1, 6, 0, 1, 6, 1, 1, 1, 28, 21, 0, 2, 0, 1, 1, 1, 1, 1]' : 0.219473}", "{'[1, 6, 0, 1, 6, 1, 1, 1, 28, 21, 0, 2, 0, 1, 1, 1, 1, 1]' : 0.217088}", "{'[1, 6, 0, 1, 6, 1, 1, 1, 28, 21, 0, 2, 0, 1, 1, 1, 1, 1]' : 0.219803}", "{'[1, 6, 0, 1, 6, 1, 1, 1, 28, 21, 0, 2, 0, 1, 1, 1, 1, 1]' : 0.223488}"]
returning from 'run': {'[1, 6, 0, 1, 6, 1, 1, 1, 28, 21, 0, 2, 0, 1, 1, 1, 1, 1]': ([0.21925, 0.219839, 0.223644, 0.223666, 0.222713, 0.216669, 0.226867, 0.223721, 0.223731, 0.219064, 0.222217, 0.225287, 0.224101, 0.223608, 0.218645, 0.223124, 0.22347, 0.224155, 0.22183, 0.219744, 0.226226, 0.223751, 0.223831, 0.217203, 0.229607, 0.225612, 0.219473, 0.217088, 0.219803, 0.223488], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 6, 0, 1, 6, 1, 1, 1, 28, 21, 0, 2, 0, 1, 1, 1, 1, 1]': ([0.21925, 0.219839, 0.223644, 0.223666, 0.222713, 0.216669, 0.226867, 0.223721, 0.223731, 0.219064, 0.222217, 0.225287, 0.224101, 0.223608, 0.218645, 0.223124, 0.22347, 0.224155, 0.22183, 0.219744, 0.226226, 0.223751, 0.223831, 0.217203, 0.229607, 0.225612, 0.219473, 0.217088, 0.219803, 0.223488], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	6
        Additions: 		194
        Multiplications: 	76
        Divisions: 		0
        Logical: 		0
        Reads: 			416
        Writes: 		77
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest26.exe __orio_perftest26.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest26.exe  
Program Test Output: 
{'[1, 1, 6, 6, 2, 0, 0, 0, 5, 0, 3, 0, 0, 2, 0, 1, 1, 0]' : 0.184229}
{'[1, 1, 6, 6, 2, 0, 0, 0, 5, 0, 3, 0, 0, 2, 0, 1, 1, 0]' : 0.179768}
{'[1, 1, 6, 6, 2, 0, 0, 0, 5, 0, 3, 0, 0, 2, 0, 1, 1, 0]' : 0.183508}
{'[1, 1, 6, 6, 2, 0, 0, 0, 5, 0, 3, 0, 0, 2, 0, 1, 1, 0]' : 0.182735}
{'[1, 1, 6, 6, 2, 0, 0, 0, 5, 0, 3, 0, 0, 2, 0, 1, 1, 0]' : 0.179669}
{'[1, 1, 6, 6, 2, 0, 0, 0, 5, 0, 3, 0, 0, 2, 0, 1, 1, 0]' : 0.183729}
{'[1, 1, 6, 6, 2, 0, 0, 0, 5, 0, 3, 0, 0, 2, 0, 1, 1, 0]' : 0.177048}
{'[1, 1, 6, 6, 2, 0, 0, 0, 5, 0, 3, 0, 0, 2, 0, 1, 1, 0]' : 0.175331}
{'[1, 1, 6, 6, 2, 0, 0, 0, 5, 0, 3, 0, 0, 2, 0, 1, 1, 0]' : 0.179705}
{'[1, 1, 6, 6, 2, 0, 0, 0, 5, 0, 3, 0, 0, 2, 0, 1, 1, 0]' : 0.17922}
{'[1, 1, 6, 6, 2, 0, 0, 0, 5, 0, 3, 0, 0, 2, 0, 1, 1, 0]' : 0.176439}
{'[1, 1, 6, 6, 2, 0, 0, 0, 5, 0, 3, 0, 0, 2, 0, 1, 1, 0]' : 0.1751}
{'[1, 1, 6, 6, 2, 0, 0, 0, 5, 0, 3, 0, 0, 2, 0, 1, 1, 0]' : 0.173958}
{'[1, 1, 6, 6, 2, 0, 0, 0, 5, 0, 3, 0, 0, 2, 0, 1, 1, 0]' : 0.177247}
{'[1, 1, 6, 6, 2, 0, 0, 0, 5, 0, 3, 0, 0, 2, 0, 1, 1, 0]' : 0.179687}
{'[1, 1, 6, 6, 2, 0, 0, 0, 5, 0, 3, 0, 0, 2, 0, 1, 1, 0]' : 0.179453}
{'[1, 1, 6, 6, 2, 0, 0, 0, 5, 0, 3, 0, 0, 2, 0, 1, 1, 0]' : 0.179535}
{'[1, 1, 6, 6, 2, 0, 0, 0, 5, 0, 3, 0, 0, 2, 0, 1, 1, 0]' : 0.178498}
{'[1, 1, 6, 6, 2, 0, 0, 0, 5, 0, 3, 0, 0, 2, 0, 1, 1, 0]' : 0.174194}
{'[1, 1, 6, 6, 2, 0, 0, 0, 5, 0, 3, 0, 0, 2, 0, 1, 1, 0]' : 0.179382}
{'[1, 1, 6, 6, 2, 0, 0, 0, 5, 0, 3, 0, 0, 2, 0, 1, 1, 0]' : 0.179658}
{'[1, 1, 6, 6, 2, 0, 0, 0, 5, 0, 3, 0, 0, 2, 0, 1, 1, 0]' : 0.180113}
{'[1, 1, 6, 6, 2, 0, 0, 0, 5, 0, 3, 0, 0, 2, 0, 1, 1, 0]' : 0.184647}
{'[1, 1, 6, 6, 2, 0, 0, 0, 5, 0, 3, 0, 0, 2, 0, 1, 1, 0]' : 0.17988}
{'[1, 1, 6, 6, 2, 0, 0, 0, 5, 0, 3, 0, 0, 2, 0, 1, 1, 0]' : 0.179723}
{'[1, 1, 6, 6, 2, 0, 0, 0, 5, 0, 3, 0, 0, 2, 0, 1, 1, 0]' : 0.179329}
{'[1, 1, 6, 6, 2, 0, 0, 0, 5, 0, 3, 0, 0, 2, 0, 1, 1, 0]' : 0.177214}
{'[1, 1, 6, 6, 2, 0, 0, 0, 5, 0, 3, 0, 0, 2, 0, 1, 1, 0]' : 0.180243}
{'[1, 1, 6, 6, 2, 0, 0, 0, 5, 0, 3, 0, 0, 2, 0, 1, 1, 0]' : 0.184541}
{'[1, 1, 6, 6, 2, 0, 0, 0, 5, 0, 3, 0, 0, 2, 0, 1, 1, 0]' : 0.18254}

out:
 ["{'[1, 1, 6, 6, 2, 0, 0, 0, 5, 0, 3, 0, 0, 2, 0, 1, 1, 0]' : 0.184229}", "{'[1, 1, 6, 6, 2, 0, 0, 0, 5, 0, 3, 0, 0, 2, 0, 1, 1, 0]' : 0.179768}", "{'[1, 1, 6, 6, 2, 0, 0, 0, 5, 0, 3, 0, 0, 2, 0, 1, 1, 0]' : 0.183508}", "{'[1, 1, 6, 6, 2, 0, 0, 0, 5, 0, 3, 0, 0, 2, 0, 1, 1, 0]' : 0.182735}", "{'[1, 1, 6, 6, 2, 0, 0, 0, 5, 0, 3, 0, 0, 2, 0, 1, 1, 0]' : 0.179669}", "{'[1, 1, 6, 6, 2, 0, 0, 0, 5, 0, 3, 0, 0, 2, 0, 1, 1, 0]' : 0.183729}", "{'[1, 1, 6, 6, 2, 0, 0, 0, 5, 0, 3, 0, 0, 2, 0, 1, 1, 0]' : 0.177048}", "{'[1, 1, 6, 6, 2, 0, 0, 0, 5, 0, 3, 0, 0, 2, 0, 1, 1, 0]' : 0.175331}", "{'[1, 1, 6, 6, 2, 0, 0, 0, 5, 0, 3, 0, 0, 2, 0, 1, 1, 0]' : 0.179705}", "{'[1, 1, 6, 6, 2, 0, 0, 0, 5, 0, 3, 0, 0, 2, 0, 1, 1, 0]' : 0.17922}", "{'[1, 1, 6, 6, 2, 0, 0, 0, 5, 0, 3, 0, 0, 2, 0, 1, 1, 0]' : 0.176439}", "{'[1, 1, 6, 6, 2, 0, 0, 0, 5, 0, 3, 0, 0, 2, 0, 1, 1, 0]' : 0.1751}", "{'[1, 1, 6, 6, 2, 0, 0, 0, 5, 0, 3, 0, 0, 2, 0, 1, 1, 0]' : 0.173958}", "{'[1, 1, 6, 6, 2, 0, 0, 0, 5, 0, 3, 0, 0, 2, 0, 1, 1, 0]' : 0.177247}", "{'[1, 1, 6, 6, 2, 0, 0, 0, 5, 0, 3, 0, 0, 2, 0, 1, 1, 0]' : 0.179687}", "{'[1, 1, 6, 6, 2, 0, 0, 0, 5, 0, 3, 0, 0, 2, 0, 1, 1, 0]' : 0.179453}", "{'[1, 1, 6, 6, 2, 0, 0, 0, 5, 0, 3, 0, 0, 2, 0, 1, 1, 0]' : 0.179535}", "{'[1, 1, 6, 6, 2, 0, 0, 0, 5, 0, 3, 0, 0, 2, 0, 1, 1, 0]' : 0.178498}", "{'[1, 1, 6, 6, 2, 0, 0, 0, 5, 0, 3, 0, 0, 2, 0, 1, 1, 0]' : 0.174194}", "{'[1, 1, 6, 6, 2, 0, 0, 0, 5, 0, 3, 0, 0, 2, 0, 1, 1, 0]' : 0.179382}", "{'[1, 1, 6, 6, 2, 0, 0, 0, 5, 0, 3, 0, 0, 2, 0, 1, 1, 0]' : 0.179658}", "{'[1, 1, 6, 6, 2, 0, 0, 0, 5, 0, 3, 0, 0, 2, 0, 1, 1, 0]' : 0.180113}", "{'[1, 1, 6, 6, 2, 0, 0, 0, 5, 0, 3, 0, 0, 2, 0, 1, 1, 0]' : 0.184647}", "{'[1, 1, 6, 6, 2, 0, 0, 0, 5, 0, 3, 0, 0, 2, 0, 1, 1, 0]' : 0.17988}", "{'[1, 1, 6, 6, 2, 0, 0, 0, 5, 0, 3, 0, 0, 2, 0, 1, 1, 0]' : 0.179723}", "{'[1, 1, 6, 6, 2, 0, 0, 0, 5, 0, 3, 0, 0, 2, 0, 1, 1, 0]' : 0.179329}", "{'[1, 1, 6, 6, 2, 0, 0, 0, 5, 0, 3, 0, 0, 2, 0, 1, 1, 0]' : 0.177214}", "{'[1, 1, 6, 6, 2, 0, 0, 0, 5, 0, 3, 0, 0, 2, 0, 1, 1, 0]' : 0.180243}", "{'[1, 1, 6, 6, 2, 0, 0, 0, 5, 0, 3, 0, 0, 2, 0, 1, 1, 0]' : 0.184541}", "{'[1, 1, 6, 6, 2, 0, 0, 0, 5, 0, 3, 0, 0, 2, 0, 1, 1, 0]' : 0.18254}"]
returning from 'run': {'[1, 1, 6, 6, 2, 0, 0, 0, 5, 0, 3, 0, 0, 2, 0, 1, 1, 0]': ([0.184229, 0.179768, 0.183508, 0.182735, 0.179669, 0.183729, 0.177048, 0.175331, 0.179705, 0.17922, 0.176439, 0.1751, 0.173958, 0.177247, 0.179687, 0.179453, 0.179535, 0.178498, 0.174194, 0.179382, 0.179658, 0.180113, 0.184647, 0.17988, 0.179723, 0.179329, 0.177214, 0.180243, 0.184541, 0.18254], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 1, 6, 6, 2, 0, 0, 0, 5, 0, 3, 0, 0, 2, 0, 1, 1, 0]': ([0.184229, 0.179768, 0.183508, 0.182735, 0.179669, 0.183729, 0.177048, 0.175331, 0.179705, 0.17922, 0.176439, 0.1751, 0.173958, 0.177247, 0.179687, 0.179453, 0.179535, 0.178498, 0.174194, 0.179382, 0.179658, 0.180113, 0.184647, 0.17988, 0.179723, 0.179329, 0.177214, 0.180243, 0.184541, 0.18254], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	77
        Max loop nest depth: 	5
        Additions: 		7916
        Multiplications: 	3720
        Divisions: 		0
        Logical: 		0
        Reads: 			14735
        Writes: 		2339
        Comparisons:		77
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest27.exe __orio_perftest27.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest27.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest27.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest27.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest27.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	5
        Additions: 		3375
        Multiplications: 	1056
        Divisions: 		0
        Logical: 		0
        Reads: 			5479
        Writes: 		596
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest28.exe __orio_perftest28.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest28.exe  
Program Test Output: 
{'[6, 4, 0, 6, 0, 2, 0, 0, 0, 10, 0, 9, 2, 0, 0, 0, 0, 1]' : 0.192192}
{'[6, 4, 0, 6, 0, 2, 0, 0, 0, 10, 0, 9, 2, 0, 0, 0, 0, 1]' : 0.193038}
{'[6, 4, 0, 6, 0, 2, 0, 0, 0, 10, 0, 9, 2, 0, 0, 0, 0, 1]' : 0.192811}
{'[6, 4, 0, 6, 0, 2, 0, 0, 0, 10, 0, 9, 2, 0, 0, 0, 0, 1]' : 0.191719}
{'[6, 4, 0, 6, 0, 2, 0, 0, 0, 10, 0, 9, 2, 0, 0, 0, 0, 1]' : 0.192197}
{'[6, 4, 0, 6, 0, 2, 0, 0, 0, 10, 0, 9, 2, 0, 0, 0, 0, 1]' : 0.192811}
{'[6, 4, 0, 6, 0, 2, 0, 0, 0, 10, 0, 9, 2, 0, 0, 0, 0, 1]' : 0.192865}
{'[6, 4, 0, 6, 0, 2, 0, 0, 0, 10, 0, 9, 2, 0, 0, 0, 0, 1]' : 0.192348}
{'[6, 4, 0, 6, 0, 2, 0, 0, 0, 10, 0, 9, 2, 0, 0, 0, 0, 1]' : 0.192372}
{'[6, 4, 0, 6, 0, 2, 0, 0, 0, 10, 0, 9, 2, 0, 0, 0, 0, 1]' : 0.192647}
{'[6, 4, 0, 6, 0, 2, 0, 0, 0, 10, 0, 9, 2, 0, 0, 0, 0, 1]' : 0.192318}
{'[6, 4, 0, 6, 0, 2, 0, 0, 0, 10, 0, 9, 2, 0, 0, 0, 0, 1]' : 0.192786}
{'[6, 4, 0, 6, 0, 2, 0, 0, 0, 10, 0, 9, 2, 0, 0, 0, 0, 1]' : 0.192688}
{'[6, 4, 0, 6, 0, 2, 0, 0, 0, 10, 0, 9, 2, 0, 0, 0, 0, 1]' : 0.192234}
{'[6, 4, 0, 6, 0, 2, 0, 0, 0, 10, 0, 9, 2, 0, 0, 0, 0, 1]' : 0.190138}
{'[6, 4, 0, 6, 0, 2, 0, 0, 0, 10, 0, 9, 2, 0, 0, 0, 0, 1]' : 0.190949}
{'[6, 4, 0, 6, 0, 2, 0, 0, 0, 10, 0, 9, 2, 0, 0, 0, 0, 1]' : 0.191768}
{'[6, 4, 0, 6, 0, 2, 0, 0, 0, 10, 0, 9, 2, 0, 0, 0, 0, 1]' : 0.192322}
{'[6, 4, 0, 6, 0, 2, 0, 0, 0, 10, 0, 9, 2, 0, 0, 0, 0, 1]' : 0.191688}
{'[6, 4, 0, 6, 0, 2, 0, 0, 0, 10, 0, 9, 2, 0, 0, 0, 0, 1]' : 0.188863}
{'[6, 4, 0, 6, 0, 2, 0, 0, 0, 10, 0, 9, 2, 0, 0, 0, 0, 1]' : 0.19032}
{'[6, 4, 0, 6, 0, 2, 0, 0, 0, 10, 0, 9, 2, 0, 0, 0, 0, 1]' : 0.192329}
{'[6, 4, 0, 6, 0, 2, 0, 0, 0, 10, 0, 9, 2, 0, 0, 0, 0, 1]' : 0.19157}
{'[6, 4, 0, 6, 0, 2, 0, 0, 0, 10, 0, 9, 2, 0, 0, 0, 0, 1]' : 0.191569}
{'[6, 4, 0, 6, 0, 2, 0, 0, 0, 10, 0, 9, 2, 0, 0, 0, 0, 1]' : 0.192259}
{'[6, 4, 0, 6, 0, 2, 0, 0, 0, 10, 0, 9, 2, 0, 0, 0, 0, 1]' : 0.19189}
{'[6, 4, 0, 6, 0, 2, 0, 0, 0, 10, 0, 9, 2, 0, 0, 0, 0, 1]' : 0.19294}
{'[6, 4, 0, 6, 0, 2, 0, 0, 0, 10, 0, 9, 2, 0, 0, 0, 0, 1]' : 0.192796}
{'[6, 4, 0, 6, 0, 2, 0, 0, 0, 10, 0, 9, 2, 0, 0, 0, 0, 1]' : 0.190075}
{'[6, 4, 0, 6, 0, 2, 0, 0, 0, 10, 0, 9, 2, 0, 0, 0, 0, 1]' : 0.189193}

out:
 ["{'[6, 4, 0, 6, 0, 2, 0, 0, 0, 10, 0, 9, 2, 0, 0, 0, 0, 1]' : 0.192192}", "{'[6, 4, 0, 6, 0, 2, 0, 0, 0, 10, 0, 9, 2, 0, 0, 0, 0, 1]' : 0.193038}", "{'[6, 4, 0, 6, 0, 2, 0, 0, 0, 10, 0, 9, 2, 0, 0, 0, 0, 1]' : 0.192811}", "{'[6, 4, 0, 6, 0, 2, 0, 0, 0, 10, 0, 9, 2, 0, 0, 0, 0, 1]' : 0.191719}", "{'[6, 4, 0, 6, 0, 2, 0, 0, 0, 10, 0, 9, 2, 0, 0, 0, 0, 1]' : 0.192197}", "{'[6, 4, 0, 6, 0, 2, 0, 0, 0, 10, 0, 9, 2, 0, 0, 0, 0, 1]' : 0.192811}", "{'[6, 4, 0, 6, 0, 2, 0, 0, 0, 10, 0, 9, 2, 0, 0, 0, 0, 1]' : 0.192865}", "{'[6, 4, 0, 6, 0, 2, 0, 0, 0, 10, 0, 9, 2, 0, 0, 0, 0, 1]' : 0.192348}", "{'[6, 4, 0, 6, 0, 2, 0, 0, 0, 10, 0, 9, 2, 0, 0, 0, 0, 1]' : 0.192372}", "{'[6, 4, 0, 6, 0, 2, 0, 0, 0, 10, 0, 9, 2, 0, 0, 0, 0, 1]' : 0.192647}", "{'[6, 4, 0, 6, 0, 2, 0, 0, 0, 10, 0, 9, 2, 0, 0, 0, 0, 1]' : 0.192318}", "{'[6, 4, 0, 6, 0, 2, 0, 0, 0, 10, 0, 9, 2, 0, 0, 0, 0, 1]' : 0.192786}", "{'[6, 4, 0, 6, 0, 2, 0, 0, 0, 10, 0, 9, 2, 0, 0, 0, 0, 1]' : 0.192688}", "{'[6, 4, 0, 6, 0, 2, 0, 0, 0, 10, 0, 9, 2, 0, 0, 0, 0, 1]' : 0.192234}", "{'[6, 4, 0, 6, 0, 2, 0, 0, 0, 10, 0, 9, 2, 0, 0, 0, 0, 1]' : 0.190138}", "{'[6, 4, 0, 6, 0, 2, 0, 0, 0, 10, 0, 9, 2, 0, 0, 0, 0, 1]' : 0.190949}", "{'[6, 4, 0, 6, 0, 2, 0, 0, 0, 10, 0, 9, 2, 0, 0, 0, 0, 1]' : 0.191768}", "{'[6, 4, 0, 6, 0, 2, 0, 0, 0, 10, 0, 9, 2, 0, 0, 0, 0, 1]' : 0.192322}", "{'[6, 4, 0, 6, 0, 2, 0, 0, 0, 10, 0, 9, 2, 0, 0, 0, 0, 1]' : 0.191688}", "{'[6, 4, 0, 6, 0, 2, 0, 0, 0, 10, 0, 9, 2, 0, 0, 0, 0, 1]' : 0.188863}", "{'[6, 4, 0, 6, 0, 2, 0, 0, 0, 10, 0, 9, 2, 0, 0, 0, 0, 1]' : 0.19032}", "{'[6, 4, 0, 6, 0, 2, 0, 0, 0, 10, 0, 9, 2, 0, 0, 0, 0, 1]' : 0.192329}", "{'[6, 4, 0, 6, 0, 2, 0, 0, 0, 10, 0, 9, 2, 0, 0, 0, 0, 1]' : 0.19157}", "{'[6, 4, 0, 6, 0, 2, 0, 0, 0, 10, 0, 9, 2, 0, 0, 0, 0, 1]' : 0.191569}", "{'[6, 4, 0, 6, 0, 2, 0, 0, 0, 10, 0, 9, 2, 0, 0, 0, 0, 1]' : 0.192259}", "{'[6, 4, 0, 6, 0, 2, 0, 0, 0, 10, 0, 9, 2, 0, 0, 0, 0, 1]' : 0.19189}", "{'[6, 4, 0, 6, 0, 2, 0, 0, 0, 10, 0, 9, 2, 0, 0, 0, 0, 1]' : 0.19294}", "{'[6, 4, 0, 6, 0, 2, 0, 0, 0, 10, 0, 9, 2, 0, 0, 0, 0, 1]' : 0.192796}", "{'[6, 4, 0, 6, 0, 2, 0, 0, 0, 10, 0, 9, 2, 0, 0, 0, 0, 1]' : 0.190075}", "{'[6, 4, 0, 6, 0, 2, 0, 0, 0, 10, 0, 9, 2, 0, 0, 0, 0, 1]' : 0.189193}"]
returning from 'run': {'[6, 4, 0, 6, 0, 2, 0, 0, 0, 10, 0, 9, 2, 0, 0, 0, 0, 1]': ([0.192192, 0.193038, 0.192811, 0.191719, 0.192197, 0.192811, 0.192865, 0.192348, 0.192372, 0.192647, 0.192318, 0.192786, 0.192688, 0.192234, 0.190138, 0.190949, 0.191768, 0.192322, 0.191688, 0.188863, 0.19032, 0.192329, 0.19157, 0.191569, 0.192259, 0.19189, 0.19294, 0.192796, 0.190075, 0.189193], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 4, 0, 6, 0, 2, 0, 0, 0, 10, 0, 9, 2, 0, 0, 0, 0, 1]': ([0.192192, 0.193038, 0.192811, 0.191719, 0.192197, 0.192811, 0.192865, 0.192348, 0.192372, 0.192647, 0.192318, 0.192786, 0.192688, 0.192234, 0.190138, 0.190949, 0.191768, 0.192322, 0.191688, 0.188863, 0.19032, 0.192329, 0.19157, 0.191569, 0.192259, 0.19189, 0.19294, 0.192796, 0.190075, 0.189193], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	6
        Additions: 		1488
        Multiplications: 	432
        Divisions: 		0
        Logical: 		0
        Reads: 			2418
        Writes: 		275
        Comparisons:		22
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest29.exe __orio_perftest29.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest29.exe  
Program Test Output: 
{'[2, 4, 2, 6, 3, 1, 1, 0, 1, 0, 17, 14, 1, 1, 0, 0, 0, 1]' : 0.145486}
{'[2, 4, 2, 6, 3, 1, 1, 0, 1, 0, 17, 14, 1, 1, 0, 0, 0, 1]' : 0.143851}
{'[2, 4, 2, 6, 3, 1, 1, 0, 1, 0, 17, 14, 1, 1, 0, 0, 0, 1]' : 0.145392}
{'[2, 4, 2, 6, 3, 1, 1, 0, 1, 0, 17, 14, 1, 1, 0, 0, 0, 1]' : 0.145473}
{'[2, 4, 2, 6, 3, 1, 1, 0, 1, 0, 17, 14, 1, 1, 0, 0, 0, 1]' : 0.13209}
{'[2, 4, 2, 6, 3, 1, 1, 0, 1, 0, 17, 14, 1, 1, 0, 0, 0, 1]' : 0.126951}
{'[2, 4, 2, 6, 3, 1, 1, 0, 1, 0, 17, 14, 1, 1, 0, 0, 0, 1]' : 0.126804}
{'[2, 4, 2, 6, 3, 1, 1, 0, 1, 0, 17, 14, 1, 1, 0, 0, 0, 1]' : 0.126489}
{'[2, 4, 2, 6, 3, 1, 1, 0, 1, 0, 17, 14, 1, 1, 0, 0, 0, 1]' : 0.123195}
{'[2, 4, 2, 6, 3, 1, 1, 0, 1, 0, 17, 14, 1, 1, 0, 0, 0, 1]' : 0.123114}
{'[2, 4, 2, 6, 3, 1, 1, 0, 1, 0, 17, 14, 1, 1, 0, 0, 0, 1]' : 0.123001}
{'[2, 4, 2, 6, 3, 1, 1, 0, 1, 0, 17, 14, 1, 1, 0, 0, 0, 1]' : 0.129972}
{'[2, 4, 2, 6, 3, 1, 1, 0, 1, 0, 17, 14, 1, 1, 0, 0, 0, 1]' : 0.130026}
{'[2, 4, 2, 6, 3, 1, 1, 0, 1, 0, 17, 14, 1, 1, 0, 0, 0, 1]' : 0.128963}
{'[2, 4, 2, 6, 3, 1, 1, 0, 1, 0, 17, 14, 1, 1, 0, 0, 0, 1]' : 0.128992}
{'[2, 4, 2, 6, 3, 1, 1, 0, 1, 0, 17, 14, 1, 1, 0, 0, 0, 1]' : 0.126473}
{'[2, 4, 2, 6, 3, 1, 1, 0, 1, 0, 17, 14, 1, 1, 0, 0, 0, 1]' : 0.125714}
{'[2, 4, 2, 6, 3, 1, 1, 0, 1, 0, 17, 14, 1, 1, 0, 0, 0, 1]' : 0.123064}
{'[2, 4, 2, 6, 3, 1, 1, 0, 1, 0, 17, 14, 1, 1, 0, 0, 0, 1]' : 0.123855}
{'[2, 4, 2, 6, 3, 1, 1, 0, 1, 0, 17, 14, 1, 1, 0, 0, 0, 1]' : 0.126421}
{'[2, 4, 2, 6, 3, 1, 1, 0, 1, 0, 17, 14, 1, 1, 0, 0, 0, 1]' : 0.125979}
{'[2, 4, 2, 6, 3, 1, 1, 0, 1, 0, 17, 14, 1, 1, 0, 0, 0, 1]' : 0.122862}
{'[2, 4, 2, 6, 3, 1, 1, 0, 1, 0, 17, 14, 1, 1, 0, 0, 0, 1]' : 0.123869}
{'[2, 4, 2, 6, 3, 1, 1, 0, 1, 0, 17, 14, 1, 1, 0, 0, 0, 1]' : 0.129929}
{'[2, 4, 2, 6, 3, 1, 1, 0, 1, 0, 17, 14, 1, 1, 0, 0, 0, 1]' : 0.129669}
{'[2, 4, 2, 6, 3, 1, 1, 0, 1, 0, 17, 14, 1, 1, 0, 0, 0, 1]' : 0.126564}
{'[2, 4, 2, 6, 3, 1, 1, 0, 1, 0, 17, 14, 1, 1, 0, 0, 0, 1]' : 0.127225}
{'[2, 4, 2, 6, 3, 1, 1, 0, 1, 0, 17, 14, 1, 1, 0, 0, 0, 1]' : 0.129907}
{'[2, 4, 2, 6, 3, 1, 1, 0, 1, 0, 17, 14, 1, 1, 0, 0, 0, 1]' : 0.129635}
{'[2, 4, 2, 6, 3, 1, 1, 0, 1, 0, 17, 14, 1, 1, 0, 0, 0, 1]' : 0.124932}

out:
 ["{'[2, 4, 2, 6, 3, 1, 1, 0, 1, 0, 17, 14, 1, 1, 0, 0, 0, 1]' : 0.145486}", "{'[2, 4, 2, 6, 3, 1, 1, 0, 1, 0, 17, 14, 1, 1, 0, 0, 0, 1]' : 0.143851}", "{'[2, 4, 2, 6, 3, 1, 1, 0, 1, 0, 17, 14, 1, 1, 0, 0, 0, 1]' : 0.145392}", "{'[2, 4, 2, 6, 3, 1, 1, 0, 1, 0, 17, 14, 1, 1, 0, 0, 0, 1]' : 0.145473}", "{'[2, 4, 2, 6, 3, 1, 1, 0, 1, 0, 17, 14, 1, 1, 0, 0, 0, 1]' : 0.13209}", "{'[2, 4, 2, 6, 3, 1, 1, 0, 1, 0, 17, 14, 1, 1, 0, 0, 0, 1]' : 0.126951}", "{'[2, 4, 2, 6, 3, 1, 1, 0, 1, 0, 17, 14, 1, 1, 0, 0, 0, 1]' : 0.126804}", "{'[2, 4, 2, 6, 3, 1, 1, 0, 1, 0, 17, 14, 1, 1, 0, 0, 0, 1]' : 0.126489}", "{'[2, 4, 2, 6, 3, 1, 1, 0, 1, 0, 17, 14, 1, 1, 0, 0, 0, 1]' : 0.123195}", "{'[2, 4, 2, 6, 3, 1, 1, 0, 1, 0, 17, 14, 1, 1, 0, 0, 0, 1]' : 0.123114}", "{'[2, 4, 2, 6, 3, 1, 1, 0, 1, 0, 17, 14, 1, 1, 0, 0, 0, 1]' : 0.123001}", "{'[2, 4, 2, 6, 3, 1, 1, 0, 1, 0, 17, 14, 1, 1, 0, 0, 0, 1]' : 0.129972}", "{'[2, 4, 2, 6, 3, 1, 1, 0, 1, 0, 17, 14, 1, 1, 0, 0, 0, 1]' : 0.130026}", "{'[2, 4, 2, 6, 3, 1, 1, 0, 1, 0, 17, 14, 1, 1, 0, 0, 0, 1]' : 0.128963}", "{'[2, 4, 2, 6, 3, 1, 1, 0, 1, 0, 17, 14, 1, 1, 0, 0, 0, 1]' : 0.128992}", "{'[2, 4, 2, 6, 3, 1, 1, 0, 1, 0, 17, 14, 1, 1, 0, 0, 0, 1]' : 0.126473}", "{'[2, 4, 2, 6, 3, 1, 1, 0, 1, 0, 17, 14, 1, 1, 0, 0, 0, 1]' : 0.125714}", "{'[2, 4, 2, 6, 3, 1, 1, 0, 1, 0, 17, 14, 1, 1, 0, 0, 0, 1]' : 0.123064}", "{'[2, 4, 2, 6, 3, 1, 1, 0, 1, 0, 17, 14, 1, 1, 0, 0, 0, 1]' : 0.123855}", "{'[2, 4, 2, 6, 3, 1, 1, 0, 1, 0, 17, 14, 1, 1, 0, 0, 0, 1]' : 0.126421}", "{'[2, 4, 2, 6, 3, 1, 1, 0, 1, 0, 17, 14, 1, 1, 0, 0, 0, 1]' : 0.125979}", "{'[2, 4, 2, 6, 3, 1, 1, 0, 1, 0, 17, 14, 1, 1, 0, 0, 0, 1]' : 0.122862}", "{'[2, 4, 2, 6, 3, 1, 1, 0, 1, 0, 17, 14, 1, 1, 0, 0, 0, 1]' : 0.123869}", "{'[2, 4, 2, 6, 3, 1, 1, 0, 1, 0, 17, 14, 1, 1, 0, 0, 0, 1]' : 0.129929}", "{'[2, 4, 2, 6, 3, 1, 1, 0, 1, 0, 17, 14, 1, 1, 0, 0, 0, 1]' : 0.129669}", "{'[2, 4, 2, 6, 3, 1, 1, 0, 1, 0, 17, 14, 1, 1, 0, 0, 0, 1]' : 0.126564}", "{'[2, 4, 2, 6, 3, 1, 1, 0, 1, 0, 17, 14, 1, 1, 0, 0, 0, 1]' : 0.127225}", "{'[2, 4, 2, 6, 3, 1, 1, 0, 1, 0, 17, 14, 1, 1, 0, 0, 0, 1]' : 0.129907}", "{'[2, 4, 2, 6, 3, 1, 1, 0, 1, 0, 17, 14, 1, 1, 0, 0, 0, 1]' : 0.129635}", "{'[2, 4, 2, 6, 3, 1, 1, 0, 1, 0, 17, 14, 1, 1, 0, 0, 0, 1]' : 0.124932}"]
returning from 'run': {'[2, 4, 2, 6, 3, 1, 1, 0, 1, 0, 17, 14, 1, 1, 0, 0, 0, 1]': ([0.145486, 0.143851, 0.145392, 0.145473, 0.13209, 0.126951, 0.126804, 0.126489, 0.123195, 0.123114, 0.123001, 0.129972, 0.130026, 0.128963, 0.128992, 0.126473, 0.125714, 0.123064, 0.123855, 0.126421, 0.125979, 0.122862, 0.123869, 0.129929, 0.129669, 0.126564, 0.127225, 0.129907, 0.129635, 0.124932], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 4, 2, 6, 3, 1, 1, 0, 1, 0, 17, 14, 1, 1, 0, 0, 0, 1]': ([0.145486, 0.143851, 0.145392, 0.145473, 0.13209, 0.126951, 0.126804, 0.126489, 0.123195, 0.123114, 0.123001, 0.129972, 0.130026, 0.128963, 0.128992, 0.126473, 0.125714, 0.123064, 0.123855, 0.126421, 0.125979, 0.122862, 0.123869, 0.129929, 0.129669, 0.126564, 0.127225, 0.129907, 0.129635, 0.124932], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = iii
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	5
        Additions: 		1631
        Multiplications: 	784
        Divisions: 		0
        Logical: 		0
        Reads: 			3377
        Writes: 		610
        Comparisons:		24
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest30.exe __orio_perftest30.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest30.exe  
Program Test Output: 
{'[6, 0, 2, 4, 3, 6, 0, 0, 5, 15, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.17629}
{'[6, 0, 2, 4, 3, 6, 0, 0, 5, 15, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.176952}
{'[6, 0, 2, 4, 3, 6, 0, 0, 5, 15, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.175087}
{'[6, 0, 2, 4, 3, 6, 0, 0, 5, 15, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.175332}
{'[6, 0, 2, 4, 3, 6, 0, 0, 5, 15, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.177374}
{'[6, 0, 2, 4, 3, 6, 0, 0, 5, 15, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.176644}
{'[6, 0, 2, 4, 3, 6, 0, 0, 5, 15, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.174621}
{'[6, 0, 2, 4, 3, 6, 0, 0, 5, 15, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.177189}
{'[6, 0, 2, 4, 3, 6, 0, 0, 5, 15, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.176978}
{'[6, 0, 2, 4, 3, 6, 0, 0, 5, 15, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.174335}
{'[6, 0, 2, 4, 3, 6, 0, 0, 5, 15, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.179139}
{'[6, 0, 2, 4, 3, 6, 0, 0, 5, 15, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.177854}
{'[6, 0, 2, 4, 3, 6, 0, 0, 5, 15, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.17453}
{'[6, 0, 2, 4, 3, 6, 0, 0, 5, 15, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.178454}
{'[6, 0, 2, 4, 3, 6, 0, 0, 5, 15, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.176496}
{'[6, 0, 2, 4, 3, 6, 0, 0, 5, 15, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.175069}
{'[6, 0, 2, 4, 3, 6, 0, 0, 5, 15, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.178828}
{'[6, 0, 2, 4, 3, 6, 0, 0, 5, 15, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.177298}
{'[6, 0, 2, 4, 3, 6, 0, 0, 5, 15, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.175827}
{'[6, 0, 2, 4, 3, 6, 0, 0, 5, 15, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.178255}
{'[6, 0, 2, 4, 3, 6, 0, 0, 5, 15, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.176329}
{'[6, 0, 2, 4, 3, 6, 0, 0, 5, 15, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.177478}
{'[6, 0, 2, 4, 3, 6, 0, 0, 5, 15, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.177656}
{'[6, 0, 2, 4, 3, 6, 0, 0, 5, 15, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.175417}
{'[6, 0, 2, 4, 3, 6, 0, 0, 5, 15, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.177383}
{'[6, 0, 2, 4, 3, 6, 0, 0, 5, 15, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.17827}
{'[6, 0, 2, 4, 3, 6, 0, 0, 5, 15, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.175322}
{'[6, 0, 2, 4, 3, 6, 0, 0, 5, 15, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.178069}
{'[6, 0, 2, 4, 3, 6, 0, 0, 5, 15, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.178346}
{'[6, 0, 2, 4, 3, 6, 0, 0, 5, 15, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.175147}

out:
 ["{'[6, 0, 2, 4, 3, 6, 0, 0, 5, 15, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.17629}", "{'[6, 0, 2, 4, 3, 6, 0, 0, 5, 15, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.176952}", "{'[6, 0, 2, 4, 3, 6, 0, 0, 5, 15, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.175087}", "{'[6, 0, 2, 4, 3, 6, 0, 0, 5, 15, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.175332}", "{'[6, 0, 2, 4, 3, 6, 0, 0, 5, 15, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.177374}", "{'[6, 0, 2, 4, 3, 6, 0, 0, 5, 15, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.176644}", "{'[6, 0, 2, 4, 3, 6, 0, 0, 5, 15, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.174621}", "{'[6, 0, 2, 4, 3, 6, 0, 0, 5, 15, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.177189}", "{'[6, 0, 2, 4, 3, 6, 0, 0, 5, 15, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.176978}", "{'[6, 0, 2, 4, 3, 6, 0, 0, 5, 15, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.174335}", "{'[6, 0, 2, 4, 3, 6, 0, 0, 5, 15, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.179139}", "{'[6, 0, 2, 4, 3, 6, 0, 0, 5, 15, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.177854}", "{'[6, 0, 2, 4, 3, 6, 0, 0, 5, 15, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.17453}", "{'[6, 0, 2, 4, 3, 6, 0, 0, 5, 15, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.178454}", "{'[6, 0, 2, 4, 3, 6, 0, 0, 5, 15, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.176496}", "{'[6, 0, 2, 4, 3, 6, 0, 0, 5, 15, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.175069}", "{'[6, 0, 2, 4, 3, 6, 0, 0, 5, 15, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.178828}", "{'[6, 0, 2, 4, 3, 6, 0, 0, 5, 15, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.177298}", "{'[6, 0, 2, 4, 3, 6, 0, 0, 5, 15, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.175827}", "{'[6, 0, 2, 4, 3, 6, 0, 0, 5, 15, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.178255}", "{'[6, 0, 2, 4, 3, 6, 0, 0, 5, 15, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.176329}", "{'[6, 0, 2, 4, 3, 6, 0, 0, 5, 15, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.177478}", "{'[6, 0, 2, 4, 3, 6, 0, 0, 5, 15, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.177656}", "{'[6, 0, 2, 4, 3, 6, 0, 0, 5, 15, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.175417}", "{'[6, 0, 2, 4, 3, 6, 0, 0, 5, 15, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.177383}", "{'[6, 0, 2, 4, 3, 6, 0, 0, 5, 15, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.17827}", "{'[6, 0, 2, 4, 3, 6, 0, 0, 5, 15, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.175322}", "{'[6, 0, 2, 4, 3, 6, 0, 0, 5, 15, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.178069}", "{'[6, 0, 2, 4, 3, 6, 0, 0, 5, 15, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.178346}", "{'[6, 0, 2, 4, 3, 6, 0, 0, 5, 15, 0, 5, 2, 0, 0, 1, 1, 0]' : 0.175147}"]
returning from 'run': {'[6, 0, 2, 4, 3, 6, 0, 0, 5, 15, 0, 5, 2, 0, 0, 1, 1, 0]': ([0.17629, 0.176952, 0.175087, 0.175332, 0.177374, 0.176644, 0.174621, 0.177189, 0.176978, 0.174335, 0.179139, 0.177854, 0.17453, 0.178454, 0.176496, 0.175069, 0.178828, 0.177298, 0.175827, 0.178255, 0.176329, 0.177478, 0.177656, 0.175417, 0.177383, 0.17827, 0.175322, 0.178069, 0.178346, 0.175147], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 2, 4, 3, 6, 0, 0, 5, 15, 0, 5, 2, 0, 0, 1, 1, 0]': ([0.17629, 0.176952, 0.175087, 0.175332, 0.177374, 0.176644, 0.174621, 0.177189, 0.176978, 0.174335, 0.179139, 0.177854, 0.17453, 0.178454, 0.176496, 0.175069, 0.178828, 0.177298, 0.175827, 0.178255, 0.176329, 0.177478, 0.177656, 0.175417, 0.177383, 0.17827, 0.175322, 0.178069, 0.178346, 0.175147], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	177
        Max loop nest depth: 	5
        Additions: 		4474
        Multiplications: 	936
        Divisions: 		0
        Logical: 		0
        Reads: 			7205
        Writes: 		951
        Comparisons:		177
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest31.exe __orio_perftest31.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest31.exe  
Program Test Output: 
{'[6, 1, 0, 0, 4, 6, 1, 1, 0, 29, 0, 2, 1, 1, 0, 0, 0, 0]' : 0.134851}
{'[6, 1, 0, 0, 4, 6, 1, 1, 0, 29, 0, 2, 1, 1, 0, 0, 0, 0]' : 0.138715}
{'[6, 1, 0, 0, 4, 6, 1, 1, 0, 29, 0, 2, 1, 1, 0, 0, 0, 0]' : 0.137163}
{'[6, 1, 0, 0, 4, 6, 1, 1, 0, 29, 0, 2, 1, 1, 0, 0, 0, 0]' : 0.12403}
{'[6, 1, 0, 0, 4, 6, 1, 1, 0, 29, 0, 2, 1, 1, 0, 0, 0, 0]' : 0.12376}
{'[6, 1, 0, 0, 4, 6, 1, 1, 0, 29, 0, 2, 1, 1, 0, 0, 0, 0]' : 0.123145}
{'[6, 1, 0, 0, 4, 6, 1, 1, 0, 29, 0, 2, 1, 1, 0, 0, 0, 0]' : 0.120083}
{'[6, 1, 0, 0, 4, 6, 1, 1, 0, 29, 0, 2, 1, 1, 0, 0, 0, 0]' : 0.120411}
{'[6, 1, 0, 0, 4, 6, 1, 1, 0, 29, 0, 2, 1, 1, 0, 0, 0, 0]' : 0.120313}
{'[6, 1, 0, 0, 4, 6, 1, 1, 0, 29, 0, 2, 1, 1, 0, 0, 0, 0]' : 0.121852}
{'[6, 1, 0, 0, 4, 6, 1, 1, 0, 29, 0, 2, 1, 1, 0, 0, 0, 0]' : 0.124038}
{'[6, 1, 0, 0, 4, 6, 1, 1, 0, 29, 0, 2, 1, 1, 0, 0, 0, 0]' : 0.124203}
{'[6, 1, 0, 0, 4, 6, 1, 1, 0, 29, 0, 2, 1, 1, 0, 0, 0, 0]' : 0.124209}
{'[6, 1, 0, 0, 4, 6, 1, 1, 0, 29, 0, 2, 1, 1, 0, 0, 0, 0]' : 0.12417}
{'[6, 1, 0, 0, 4, 6, 1, 1, 0, 29, 0, 2, 1, 1, 0, 0, 0, 0]' : 0.120516}
{'[6, 1, 0, 0, 4, 6, 1, 1, 0, 29, 0, 2, 1, 1, 0, 0, 0, 0]' : 0.120937}
{'[6, 1, 0, 0, 4, 6, 1, 1, 0, 29, 0, 2, 1, 1, 0, 0, 0, 0]' : 0.120765}
{'[6, 1, 0, 0, 4, 6, 1, 1, 0, 29, 0, 2, 1, 1, 0, 0, 0, 0]' : 0.12168}
{'[6, 1, 0, 0, 4, 6, 1, 1, 0, 29, 0, 2, 1, 1, 0, 0, 0, 0]' : 0.120356}
{'[6, 1, 0, 0, 4, 6, 1, 1, 0, 29, 0, 2, 1, 1, 0, 0, 0, 0]' : 0.119337}
{'[6, 1, 0, 0, 4, 6, 1, 1, 0, 29, 0, 2, 1, 1, 0, 0, 0, 0]' : 0.120828}
{'[6, 1, 0, 0, 4, 6, 1, 1, 0, 29, 0, 2, 1, 1, 0, 0, 0, 0]' : 0.120745}
{'[6, 1, 0, 0, 4, 6, 1, 1, 0, 29, 0, 2, 1, 1, 0, 0, 0, 0]' : 0.118391}
{'[6, 1, 0, 0, 4, 6, 1, 1, 0, 29, 0, 2, 1, 1, 0, 0, 0, 0]' : 0.120057}
{'[6, 1, 0, 0, 4, 6, 1, 1, 0, 29, 0, 2, 1, 1, 0, 0, 0, 0]' : 0.120742}
{'[6, 1, 0, 0, 4, 6, 1, 1, 0, 29, 0, 2, 1, 1, 0, 0, 0, 0]' : 0.120575}
{'[6, 1, 0, 0, 4, 6, 1, 1, 0, 29, 0, 2, 1, 1, 0, 0, 0, 0]' : 0.121703}
{'[6, 1, 0, 0, 4, 6, 1, 1, 0, 29, 0, 2, 1, 1, 0, 0, 0, 0]' : 0.121272}
{'[6, 1, 0, 0, 4, 6, 1, 1, 0, 29, 0, 2, 1, 1, 0, 0, 0, 0]' : 0.120873}
{'[6, 1, 0, 0, 4, 6, 1, 1, 0, 29, 0, 2, 1, 1, 0, 0, 0, 0]' : 0.120778}

out:
 ["{'[6, 1, 0, 0, 4, 6, 1, 1, 0, 29, 0, 2, 1, 1, 0, 0, 0, 0]' : 0.134851}", "{'[6, 1, 0, 0, 4, 6, 1, 1, 0, 29, 0, 2, 1, 1, 0, 0, 0, 0]' : 0.138715}", "{'[6, 1, 0, 0, 4, 6, 1, 1, 0, 29, 0, 2, 1, 1, 0, 0, 0, 0]' : 0.137163}", "{'[6, 1, 0, 0, 4, 6, 1, 1, 0, 29, 0, 2, 1, 1, 0, 0, 0, 0]' : 0.12403}", "{'[6, 1, 0, 0, 4, 6, 1, 1, 0, 29, 0, 2, 1, 1, 0, 0, 0, 0]' : 0.12376}", "{'[6, 1, 0, 0, 4, 6, 1, 1, 0, 29, 0, 2, 1, 1, 0, 0, 0, 0]' : 0.123145}", "{'[6, 1, 0, 0, 4, 6, 1, 1, 0, 29, 0, 2, 1, 1, 0, 0, 0, 0]' : 0.120083}", "{'[6, 1, 0, 0, 4, 6, 1, 1, 0, 29, 0, 2, 1, 1, 0, 0, 0, 0]' : 0.120411}", "{'[6, 1, 0, 0, 4, 6, 1, 1, 0, 29, 0, 2, 1, 1, 0, 0, 0, 0]' : 0.120313}", "{'[6, 1, 0, 0, 4, 6, 1, 1, 0, 29, 0, 2, 1, 1, 0, 0, 0, 0]' : 0.121852}", "{'[6, 1, 0, 0, 4, 6, 1, 1, 0, 29, 0, 2, 1, 1, 0, 0, 0, 0]' : 0.124038}", "{'[6, 1, 0, 0, 4, 6, 1, 1, 0, 29, 0, 2, 1, 1, 0, 0, 0, 0]' : 0.124203}", "{'[6, 1, 0, 0, 4, 6, 1, 1, 0, 29, 0, 2, 1, 1, 0, 0, 0, 0]' : 0.124209}", "{'[6, 1, 0, 0, 4, 6, 1, 1, 0, 29, 0, 2, 1, 1, 0, 0, 0, 0]' : 0.12417}", "{'[6, 1, 0, 0, 4, 6, 1, 1, 0, 29, 0, 2, 1, 1, 0, 0, 0, 0]' : 0.120516}", "{'[6, 1, 0, 0, 4, 6, 1, 1, 0, 29, 0, 2, 1, 1, 0, 0, 0, 0]' : 0.120937}", "{'[6, 1, 0, 0, 4, 6, 1, 1, 0, 29, 0, 2, 1, 1, 0, 0, 0, 0]' : 0.120765}", "{'[6, 1, 0, 0, 4, 6, 1, 1, 0, 29, 0, 2, 1, 1, 0, 0, 0, 0]' : 0.12168}", "{'[6, 1, 0, 0, 4, 6, 1, 1, 0, 29, 0, 2, 1, 1, 0, 0, 0, 0]' : 0.120356}", "{'[6, 1, 0, 0, 4, 6, 1, 1, 0, 29, 0, 2, 1, 1, 0, 0, 0, 0]' : 0.119337}", "{'[6, 1, 0, 0, 4, 6, 1, 1, 0, 29, 0, 2, 1, 1, 0, 0, 0, 0]' : 0.120828}", "{'[6, 1, 0, 0, 4, 6, 1, 1, 0, 29, 0, 2, 1, 1, 0, 0, 0, 0]' : 0.120745}", "{'[6, 1, 0, 0, 4, 6, 1, 1, 0, 29, 0, 2, 1, 1, 0, 0, 0, 0]' : 0.118391}", "{'[6, 1, 0, 0, 4, 6, 1, 1, 0, 29, 0, 2, 1, 1, 0, 0, 0, 0]' : 0.120057}", "{'[6, 1, 0, 0, 4, 6, 1, 1, 0, 29, 0, 2, 1, 1, 0, 0, 0, 0]' : 0.120742}", "{'[6, 1, 0, 0, 4, 6, 1, 1, 0, 29, 0, 2, 1, 1, 0, 0, 0, 0]' : 0.120575}", "{'[6, 1, 0, 0, 4, 6, 1, 1, 0, 29, 0, 2, 1, 1, 0, 0, 0, 0]' : 0.121703}", "{'[6, 1, 0, 0, 4, 6, 1, 1, 0, 29, 0, 2, 1, 1, 0, 0, 0, 0]' : 0.121272}", "{'[6, 1, 0, 0, 4, 6, 1, 1, 0, 29, 0, 2, 1, 1, 0, 0, 0, 0]' : 0.120873}", "{'[6, 1, 0, 0, 4, 6, 1, 1, 0, 29, 0, 2, 1, 1, 0, 0, 0, 0]' : 0.120778}"]
returning from 'run': {'[6, 1, 0, 0, 4, 6, 1, 1, 0, 29, 0, 2, 1, 1, 0, 0, 0, 0]': ([0.134851, 0.138715, 0.137163, 0.12403, 0.12376, 0.123145, 0.120083, 0.120411, 0.120313, 0.121852, 0.124038, 0.124203, 0.124209, 0.12417, 0.120516, 0.120937, 0.120765, 0.12168, 0.120356, 0.119337, 0.120828, 0.120745, 0.118391, 0.120057, 0.120742, 0.120575, 0.121703, 0.121272, 0.120873, 0.120778], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 1, 0, 0, 4, 6, 1, 1, 0, 29, 0, 2, 1, 1, 0, 0, 0, 0]': ([0.134851, 0.138715, 0.137163, 0.12403, 0.12376, 0.123145, 0.120083, 0.120411, 0.120313, 0.121852, 0.124038, 0.124203, 0.124209, 0.12417, 0.120516, 0.120937, 0.120765, 0.12168, 0.120356, 0.119337, 0.120828, 0.120745, 0.118391, 0.120057, 0.120742, 0.120575, 0.121703, 0.121272, 0.120873, 0.120778], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	4
        Additions: 		1251
        Multiplications: 	306
        Divisions: 		0
        Logical: 		0
        Reads: 			1974
        Writes: 		224
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest32.exe __orio_perftest32.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest32.exe  
Program Test Output: 
{'[0, 6, 6, 6, 0, 0, 1, 1, 16, 0, 7, 17, 1, 0, 1, 0, 1, 0]' : 0.110394}
{'[0, 6, 6, 6, 0, 0, 1, 1, 16, 0, 7, 17, 1, 0, 1, 0, 1, 0]' : 0.108959}
{'[0, 6, 6, 6, 0, 0, 1, 1, 16, 0, 7, 17, 1, 0, 1, 0, 1, 0]' : 0.110133}
{'[0, 6, 6, 6, 0, 0, 1, 1, 16, 0, 7, 17, 1, 0, 1, 0, 1, 0]' : 0.110132}
{'[0, 6, 6, 6, 0, 0, 1, 1, 16, 0, 7, 17, 1, 0, 1, 0, 1, 0]' : 0.110195}
{'[0, 6, 6, 6, 0, 0, 1, 1, 16, 0, 7, 17, 1, 0, 1, 0, 1, 0]' : 0.108753}
{'[0, 6, 6, 6, 0, 0, 1, 1, 16, 0, 7, 17, 1, 0, 1, 0, 1, 0]' : 0.109797}
{'[0, 6, 6, 6, 0, 0, 1, 1, 16, 0, 7, 17, 1, 0, 1, 0, 1, 0]' : 0.110188}
{'[0, 6, 6, 6, 0, 0, 1, 1, 16, 0, 7, 17, 1, 0, 1, 0, 1, 0]' : 0.11012}
{'[0, 6, 6, 6, 0, 0, 1, 1, 16, 0, 7, 17, 1, 0, 1, 0, 1, 0]' : 0.110253}
{'[0, 6, 6, 6, 0, 0, 1, 1, 16, 0, 7, 17, 1, 0, 1, 0, 1, 0]' : 0.110076}
{'[0, 6, 6, 6, 0, 0, 1, 1, 16, 0, 7, 17, 1, 0, 1, 0, 1, 0]' : 0.11017}
{'[0, 6, 6, 6, 0, 0, 1, 1, 16, 0, 7, 17, 1, 0, 1, 0, 1, 0]' : 0.110193}
{'[0, 6, 6, 6, 0, 0, 1, 1, 16, 0, 7, 17, 1, 0, 1, 0, 1, 0]' : 0.110248}
{'[0, 6, 6, 6, 0, 0, 1, 1, 16, 0, 7, 17, 1, 0, 1, 0, 1, 0]' : 0.110057}
{'[0, 6, 6, 6, 0, 0, 1, 1, 16, 0, 7, 17, 1, 0, 1, 0, 1, 0]' : 0.111716}
{'[0, 6, 6, 6, 0, 0, 1, 1, 16, 0, 7, 17, 1, 0, 1, 0, 1, 0]' : 0.112739}
{'[0, 6, 6, 6, 0, 0, 1, 1, 16, 0, 7, 17, 1, 0, 1, 0, 1, 0]' : 0.112749}
{'[0, 6, 6, 6, 0, 0, 1, 1, 16, 0, 7, 17, 1, 0, 1, 0, 1, 0]' : 0.110848}
{'[0, 6, 6, 6, 0, 0, 1, 1, 16, 0, 7, 17, 1, 0, 1, 0, 1, 0]' : 0.110414}
{'[0, 6, 6, 6, 0, 0, 1, 1, 16, 0, 7, 17, 1, 0, 1, 0, 1, 0]' : 0.110215}
{'[0, 6, 6, 6, 0, 0, 1, 1, 16, 0, 7, 17, 1, 0, 1, 0, 1, 0]' : 0.110209}
{'[0, 6, 6, 6, 0, 0, 1, 1, 16, 0, 7, 17, 1, 0, 1, 0, 1, 0]' : 0.110027}
{'[0, 6, 6, 6, 0, 0, 1, 1, 16, 0, 7, 17, 1, 0, 1, 0, 1, 0]' : 0.110179}
{'[0, 6, 6, 6, 0, 0, 1, 1, 16, 0, 7, 17, 1, 0, 1, 0, 1, 0]' : 0.110207}
{'[0, 6, 6, 6, 0, 0, 1, 1, 16, 0, 7, 17, 1, 0, 1, 0, 1, 0]' : 0.110226}
{'[0, 6, 6, 6, 0, 0, 1, 1, 16, 0, 7, 17, 1, 0, 1, 0, 1, 0]' : 0.110089}
{'[0, 6, 6, 6, 0, 0, 1, 1, 16, 0, 7, 17, 1, 0, 1, 0, 1, 0]' : 0.110236}
{'[0, 6, 6, 6, 0, 0, 1, 1, 16, 0, 7, 17, 1, 0, 1, 0, 1, 0]' : 0.110236}
{'[0, 6, 6, 6, 0, 0, 1, 1, 16, 0, 7, 17, 1, 0, 1, 0, 1, 0]' : 0.110304}

out:
 ["{'[0, 6, 6, 6, 0, 0, 1, 1, 16, 0, 7, 17, 1, 0, 1, 0, 1, 0]' : 0.110394}", "{'[0, 6, 6, 6, 0, 0, 1, 1, 16, 0, 7, 17, 1, 0, 1, 0, 1, 0]' : 0.108959}", "{'[0, 6, 6, 6, 0, 0, 1, 1, 16, 0, 7, 17, 1, 0, 1, 0, 1, 0]' : 0.110133}", "{'[0, 6, 6, 6, 0, 0, 1, 1, 16, 0, 7, 17, 1, 0, 1, 0, 1, 0]' : 0.110132}", "{'[0, 6, 6, 6, 0, 0, 1, 1, 16, 0, 7, 17, 1, 0, 1, 0, 1, 0]' : 0.110195}", "{'[0, 6, 6, 6, 0, 0, 1, 1, 16, 0, 7, 17, 1, 0, 1, 0, 1, 0]' : 0.108753}", "{'[0, 6, 6, 6, 0, 0, 1, 1, 16, 0, 7, 17, 1, 0, 1, 0, 1, 0]' : 0.109797}", "{'[0, 6, 6, 6, 0, 0, 1, 1, 16, 0, 7, 17, 1, 0, 1, 0, 1, 0]' : 0.110188}", "{'[0, 6, 6, 6, 0, 0, 1, 1, 16, 0, 7, 17, 1, 0, 1, 0, 1, 0]' : 0.11012}", "{'[0, 6, 6, 6, 0, 0, 1, 1, 16, 0, 7, 17, 1, 0, 1, 0, 1, 0]' : 0.110253}", "{'[0, 6, 6, 6, 0, 0, 1, 1, 16, 0, 7, 17, 1, 0, 1, 0, 1, 0]' : 0.110076}", "{'[0, 6, 6, 6, 0, 0, 1, 1, 16, 0, 7, 17, 1, 0, 1, 0, 1, 0]' : 0.11017}", "{'[0, 6, 6, 6, 0, 0, 1, 1, 16, 0, 7, 17, 1, 0, 1, 0, 1, 0]' : 0.110193}", "{'[0, 6, 6, 6, 0, 0, 1, 1, 16, 0, 7, 17, 1, 0, 1, 0, 1, 0]' : 0.110248}", "{'[0, 6, 6, 6, 0, 0, 1, 1, 16, 0, 7, 17, 1, 0, 1, 0, 1, 0]' : 0.110057}", "{'[0, 6, 6, 6, 0, 0, 1, 1, 16, 0, 7, 17, 1, 0, 1, 0, 1, 0]' : 0.111716}", "{'[0, 6, 6, 6, 0, 0, 1, 1, 16, 0, 7, 17, 1, 0, 1, 0, 1, 0]' : 0.112739}", "{'[0, 6, 6, 6, 0, 0, 1, 1, 16, 0, 7, 17, 1, 0, 1, 0, 1, 0]' : 0.112749}", "{'[0, 6, 6, 6, 0, 0, 1, 1, 16, 0, 7, 17, 1, 0, 1, 0, 1, 0]' : 0.110848}", "{'[0, 6, 6, 6, 0, 0, 1, 1, 16, 0, 7, 17, 1, 0, 1, 0, 1, 0]' : 0.110414}", "{'[0, 6, 6, 6, 0, 0, 1, 1, 16, 0, 7, 17, 1, 0, 1, 0, 1, 0]' : 0.110215}", "{'[0, 6, 6, 6, 0, 0, 1, 1, 16, 0, 7, 17, 1, 0, 1, 0, 1, 0]' : 0.110209}", "{'[0, 6, 6, 6, 0, 0, 1, 1, 16, 0, 7, 17, 1, 0, 1, 0, 1, 0]' : 0.110027}", "{'[0, 6, 6, 6, 0, 0, 1, 1, 16, 0, 7, 17, 1, 0, 1, 0, 1, 0]' : 0.110179}", "{'[0, 6, 6, 6, 0, 0, 1, 1, 16, 0, 7, 17, 1, 0, 1, 0, 1, 0]' : 0.110207}", "{'[0, 6, 6, 6, 0, 0, 1, 1, 16, 0, 7, 17, 1, 0, 1, 0, 1, 0]' : 0.110226}", "{'[0, 6, 6, 6, 0, 0, 1, 1, 16, 0, 7, 17, 1, 0, 1, 0, 1, 0]' : 0.110089}", "{'[0, 6, 6, 6, 0, 0, 1, 1, 16, 0, 7, 17, 1, 0, 1, 0, 1, 0]' : 0.110236}", "{'[0, 6, 6, 6, 0, 0, 1, 1, 16, 0, 7, 17, 1, 0, 1, 0, 1, 0]' : 0.110236}", "{'[0, 6, 6, 6, 0, 0, 1, 1, 16, 0, 7, 17, 1, 0, 1, 0, 1, 0]' : 0.110304}"]
returning from 'run': {'[0, 6, 6, 6, 0, 0, 1, 1, 16, 0, 7, 17, 1, 0, 1, 0, 1, 0]': ([0.110394, 0.108959, 0.110133, 0.110132, 0.110195, 0.108753, 0.109797, 0.110188, 0.11012, 0.110253, 0.110076, 0.11017, 0.110193, 0.110248, 0.110057, 0.111716, 0.112739, 0.112749, 0.110848, 0.110414, 0.110215, 0.110209, 0.110027, 0.110179, 0.110207, 0.110226, 0.110089, 0.110236, 0.110236, 0.110304], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 6, 6, 0, 0, 1, 1, 16, 0, 7, 17, 1, 0, 1, 0, 1, 0]': ([0.110394, 0.108959, 0.110133, 0.110132, 0.110195, 0.108753, 0.109797, 0.110188, 0.11012, 0.110253, 0.110076, 0.11017, 0.110193, 0.110248, 0.110057, 0.111716, 0.112739, 0.112749, 0.110848, 0.110414, 0.110215, 0.110209, 0.110027, 0.110179, 0.110207, 0.110226, 0.110089, 0.110236, 0.110236, 0.110304], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	6
        Additions: 		917
        Multiplications: 	264
        Divisions: 		0
        Logical: 		0
        Reads: 			1636
        Writes: 		191
        Comparisons:		22
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest33.exe __orio_perftest33.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest33.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest33.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest33.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest33.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	38
        Max loop nest depth: 	5
        Additions: 		1946
        Multiplications: 	672
        Divisions: 		0
        Logical: 		0
        Reads: 			3890
        Writes: 		748
        Comparisons:		38
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest34.exe __orio_perftest34.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest34.exe  
Program Test Output: 
{'[3, 4, 0, 0, 3, 2, 0, 1, 5, 2, 0, 25, 1, 0, 0, 1, 0, 1]' : 0.100176}
{'[3, 4, 0, 0, 3, 2, 0, 1, 5, 2, 0, 25, 1, 0, 0, 1, 0, 1]' : 0.100246}
{'[3, 4, 0, 0, 3, 2, 0, 1, 5, 2, 0, 25, 1, 0, 0, 1, 0, 1]' : 0.099997}
{'[3, 4, 0, 0, 3, 2, 0, 1, 5, 2, 0, 25, 1, 0, 0, 1, 0, 1]' : 0.0990891}
{'[3, 4, 0, 0, 3, 2, 0, 1, 5, 2, 0, 25, 1, 0, 0, 1, 0, 1]' : 0.0978892}
{'[3, 4, 0, 0, 3, 2, 0, 1, 5, 2, 0, 25, 1, 0, 0, 1, 0, 1]' : 0.097846}
{'[3, 4, 0, 0, 3, 2, 0, 1, 5, 2, 0, 25, 1, 0, 0, 1, 0, 1]' : 0.0979941}
{'[3, 4, 0, 0, 3, 2, 0, 1, 5, 2, 0, 25, 1, 0, 0, 1, 0, 1]' : 0.0979831}
{'[3, 4, 0, 0, 3, 2, 0, 1, 5, 2, 0, 25, 1, 0, 0, 1, 0, 1]' : 0.0996711}
{'[3, 4, 0, 0, 3, 2, 0, 1, 5, 2, 0, 25, 1, 0, 0, 1, 0, 1]' : 0.100066}
{'[3, 4, 0, 0, 3, 2, 0, 1, 5, 2, 0, 25, 1, 0, 0, 1, 0, 1]' : 0.100005}
{'[3, 4, 0, 0, 3, 2, 0, 1, 5, 2, 0, 25, 1, 0, 0, 1, 0, 1]' : 0.099987}
{'[3, 4, 0, 0, 3, 2, 0, 1, 5, 2, 0, 25, 1, 0, 0, 1, 0, 1]' : 0.100328}
{'[3, 4, 0, 0, 3, 2, 0, 1, 5, 2, 0, 25, 1, 0, 0, 1, 0, 1]' : 0.100553}
{'[3, 4, 0, 0, 3, 2, 0, 1, 5, 2, 0, 25, 1, 0, 0, 1, 0, 1]' : 0.100267}
{'[3, 4, 0, 0, 3, 2, 0, 1, 5, 2, 0, 25, 1, 0, 0, 1, 0, 1]' : 0.099993}
{'[3, 4, 0, 0, 3, 2, 0, 1, 5, 2, 0, 25, 1, 0, 0, 1, 0, 1]' : 0.100013}
{'[3, 4, 0, 0, 3, 2, 0, 1, 5, 2, 0, 25, 1, 0, 0, 1, 0, 1]' : 0.100029}
{'[3, 4, 0, 0, 3, 2, 0, 1, 5, 2, 0, 25, 1, 0, 0, 1, 0, 1]' : 0.100733}
{'[3, 4, 0, 0, 3, 2, 0, 1, 5, 2, 0, 25, 1, 0, 0, 1, 0, 1]' : 0.10015}
{'[3, 4, 0, 0, 3, 2, 0, 1, 5, 2, 0, 25, 1, 0, 0, 1, 0, 1]' : 0.100045}
{'[3, 4, 0, 0, 3, 2, 0, 1, 5, 2, 0, 25, 1, 0, 0, 1, 0, 1]' : 0.0999451}
{'[3, 4, 0, 0, 3, 2, 0, 1, 5, 2, 0, 25, 1, 0, 0, 1, 0, 1]' : 0.100067}
{'[3, 4, 0, 0, 3, 2, 0, 1, 5, 2, 0, 25, 1, 0, 0, 1, 0, 1]' : 0.100421}
{'[3, 4, 0, 0, 3, 2, 0, 1, 5, 2, 0, 25, 1, 0, 0, 1, 0, 1]' : 0.100141}
{'[3, 4, 0, 0, 3, 2, 0, 1, 5, 2, 0, 25, 1, 0, 0, 1, 0, 1]' : 0.100017}
{'[3, 4, 0, 0, 3, 2, 0, 1, 5, 2, 0, 25, 1, 0, 0, 1, 0, 1]' : 0.100018}
{'[3, 4, 0, 0, 3, 2, 0, 1, 5, 2, 0, 25, 1, 0, 0, 1, 0, 1]' : 0.100037}
{'[3, 4, 0, 0, 3, 2, 0, 1, 5, 2, 0, 25, 1, 0, 0, 1, 0, 1]' : 0.100627}
{'[3, 4, 0, 0, 3, 2, 0, 1, 5, 2, 0, 25, 1, 0, 0, 1, 0, 1]' : 0.100142}

out:
 ["{'[3, 4, 0, 0, 3, 2, 0, 1, 5, 2, 0, 25, 1, 0, 0, 1, 0, 1]' : 0.100176}", "{'[3, 4, 0, 0, 3, 2, 0, 1, 5, 2, 0, 25, 1, 0, 0, 1, 0, 1]' : 0.100246}", "{'[3, 4, 0, 0, 3, 2, 0, 1, 5, 2, 0, 25, 1, 0, 0, 1, 0, 1]' : 0.099997}", "{'[3, 4, 0, 0, 3, 2, 0, 1, 5, 2, 0, 25, 1, 0, 0, 1, 0, 1]' : 0.0990891}", "{'[3, 4, 0, 0, 3, 2, 0, 1, 5, 2, 0, 25, 1, 0, 0, 1, 0, 1]' : 0.0978892}", "{'[3, 4, 0, 0, 3, 2, 0, 1, 5, 2, 0, 25, 1, 0, 0, 1, 0, 1]' : 0.097846}", "{'[3, 4, 0, 0, 3, 2, 0, 1, 5, 2, 0, 25, 1, 0, 0, 1, 0, 1]' : 0.0979941}", "{'[3, 4, 0, 0, 3, 2, 0, 1, 5, 2, 0, 25, 1, 0, 0, 1, 0, 1]' : 0.0979831}", "{'[3, 4, 0, 0, 3, 2, 0, 1, 5, 2, 0, 25, 1, 0, 0, 1, 0, 1]' : 0.0996711}", "{'[3, 4, 0, 0, 3, 2, 0, 1, 5, 2, 0, 25, 1, 0, 0, 1, 0, 1]' : 0.100066}", "{'[3, 4, 0, 0, 3, 2, 0, 1, 5, 2, 0, 25, 1, 0, 0, 1, 0, 1]' : 0.100005}", "{'[3, 4, 0, 0, 3, 2, 0, 1, 5, 2, 0, 25, 1, 0, 0, 1, 0, 1]' : 0.099987}", "{'[3, 4, 0, 0, 3, 2, 0, 1, 5, 2, 0, 25, 1, 0, 0, 1, 0, 1]' : 0.100328}", "{'[3, 4, 0, 0, 3, 2, 0, 1, 5, 2, 0, 25, 1, 0, 0, 1, 0, 1]' : 0.100553}", "{'[3, 4, 0, 0, 3, 2, 0, 1, 5, 2, 0, 25, 1, 0, 0, 1, 0, 1]' : 0.100267}", "{'[3, 4, 0, 0, 3, 2, 0, 1, 5, 2, 0, 25, 1, 0, 0, 1, 0, 1]' : 0.099993}", "{'[3, 4, 0, 0, 3, 2, 0, 1, 5, 2, 0, 25, 1, 0, 0, 1, 0, 1]' : 0.100013}", "{'[3, 4, 0, 0, 3, 2, 0, 1, 5, 2, 0, 25, 1, 0, 0, 1, 0, 1]' : 0.100029}", "{'[3, 4, 0, 0, 3, 2, 0, 1, 5, 2, 0, 25, 1, 0, 0, 1, 0, 1]' : 0.100733}", "{'[3, 4, 0, 0, 3, 2, 0, 1, 5, 2, 0, 25, 1, 0, 0, 1, 0, 1]' : 0.10015}", "{'[3, 4, 0, 0, 3, 2, 0, 1, 5, 2, 0, 25, 1, 0, 0, 1, 0, 1]' : 0.100045}", "{'[3, 4, 0, 0, 3, 2, 0, 1, 5, 2, 0, 25, 1, 0, 0, 1, 0, 1]' : 0.0999451}", "{'[3, 4, 0, 0, 3, 2, 0, 1, 5, 2, 0, 25, 1, 0, 0, 1, 0, 1]' : 0.100067}", "{'[3, 4, 0, 0, 3, 2, 0, 1, 5, 2, 0, 25, 1, 0, 0, 1, 0, 1]' : 0.100421}", "{'[3, 4, 0, 0, 3, 2, 0, 1, 5, 2, 0, 25, 1, 0, 0, 1, 0, 1]' : 0.100141}", "{'[3, 4, 0, 0, 3, 2, 0, 1, 5, 2, 0, 25, 1, 0, 0, 1, 0, 1]' : 0.100017}", "{'[3, 4, 0, 0, 3, 2, 0, 1, 5, 2, 0, 25, 1, 0, 0, 1, 0, 1]' : 0.100018}", "{'[3, 4, 0, 0, 3, 2, 0, 1, 5, 2, 0, 25, 1, 0, 0, 1, 0, 1]' : 0.100037}", "{'[3, 4, 0, 0, 3, 2, 0, 1, 5, 2, 0, 25, 1, 0, 0, 1, 0, 1]' : 0.100627}", "{'[3, 4, 0, 0, 3, 2, 0, 1, 5, 2, 0, 25, 1, 0, 0, 1, 0, 1]' : 0.100142}"]
returning from 'run': {'[3, 4, 0, 0, 3, 2, 0, 1, 5, 2, 0, 25, 1, 0, 0, 1, 0, 1]': ([0.100176, 0.100246, 0.099997, 0.0990891, 0.0978892, 0.097846, 0.0979941, 0.0979831, 0.0996711, 0.100066, 0.100005, 0.099987, 0.100328, 0.100553, 0.100267, 0.099993, 0.100013, 0.100029, 0.100733, 0.10015, 0.100045, 0.0999451, 0.100067, 0.100421, 0.100141, 0.100017, 0.100018, 0.100037, 0.100627, 0.100142], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 4, 0, 0, 3, 2, 0, 1, 5, 2, 0, 25, 1, 0, 0, 1, 0, 1]': ([0.100176, 0.100246, 0.099997, 0.0990891, 0.0978892, 0.097846, 0.0979941, 0.0979831, 0.0996711, 0.100066, 0.100005, 0.099987, 0.100328, 0.100553, 0.100267, 0.099993, 0.100013, 0.100029, 0.100733, 0.10015, 0.100045, 0.0999451, 0.100067, 0.100421, 0.100141, 0.100017, 0.100018, 0.100037, 0.100627, 0.100142], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	108
        Max loop nest depth: 	6
        Additions: 		2663
        Multiplications: 	540
        Divisions: 		0
        Logical: 		0
        Reads: 			4488
        Writes: 		616
        Comparisons:		108
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest35.exe __orio_perftest35.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest35.exe  
Program Test Output: 
{'[1, 1, 5, 1, 2, 4, 1, 1, 1, 28, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.267293}
{'[1, 1, 5, 1, 2, 4, 1, 1, 1, 28, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.264815}
{'[1, 1, 5, 1, 2, 4, 1, 1, 1, 28, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.238785}
{'[1, 1, 5, 1, 2, 4, 1, 1, 1, 28, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.238893}
{'[1, 1, 5, 1, 2, 4, 1, 1, 1, 28, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.238718}
{'[1, 1, 5, 1, 2, 4, 1, 1, 1, 28, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.238815}
{'[1, 1, 5, 1, 2, 4, 1, 1, 1, 28, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.238763}
{'[1, 1, 5, 1, 2, 4, 1, 1, 1, 28, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.236927}
{'[1, 1, 5, 1, 2, 4, 1, 1, 1, 28, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.231839}
{'[1, 1, 5, 1, 2, 4, 1, 1, 1, 28, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.232631}
{'[1, 1, 5, 1, 2, 4, 1, 1, 1, 28, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.231886}
{'[1, 1, 5, 1, 2, 4, 1, 1, 1, 28, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.232664}
{'[1, 1, 5, 1, 2, 4, 1, 1, 1, 28, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.231831}
{'[1, 1, 5, 1, 2, 4, 1, 1, 1, 28, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.232052}
{'[1, 1, 5, 1, 2, 4, 1, 1, 1, 28, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.232528}
{'[1, 1, 5, 1, 2, 4, 1, 1, 1, 28, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.232132}
{'[1, 1, 5, 1, 2, 4, 1, 1, 1, 28, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.232884}
{'[1, 1, 5, 1, 2, 4, 1, 1, 1, 28, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.231895}
{'[1, 1, 5, 1, 2, 4, 1, 1, 1, 28, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.232722}
{'[1, 1, 5, 1, 2, 4, 1, 1, 1, 28, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.231736}
{'[1, 1, 5, 1, 2, 4, 1, 1, 1, 28, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.232458}
{'[1, 1, 5, 1, 2, 4, 1, 1, 1, 28, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.231878}
{'[1, 1, 5, 1, 2, 4, 1, 1, 1, 28, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.232737}
{'[1, 1, 5, 1, 2, 4, 1, 1, 1, 28, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.231677}
{'[1, 1, 5, 1, 2, 4, 1, 1, 1, 28, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.232701}
{'[1, 1, 5, 1, 2, 4, 1, 1, 1, 28, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.23212}
{'[1, 1, 5, 1, 2, 4, 1, 1, 1, 28, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.231952}
{'[1, 1, 5, 1, 2, 4, 1, 1, 1, 28, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.232572}
{'[1, 1, 5, 1, 2, 4, 1, 1, 1, 28, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.231765}
{'[1, 1, 5, 1, 2, 4, 1, 1, 1, 28, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.232633}

out:
 ["{'[1, 1, 5, 1, 2, 4, 1, 1, 1, 28, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.267293}", "{'[1, 1, 5, 1, 2, 4, 1, 1, 1, 28, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.264815}", "{'[1, 1, 5, 1, 2, 4, 1, 1, 1, 28, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.238785}", "{'[1, 1, 5, 1, 2, 4, 1, 1, 1, 28, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.238893}", "{'[1, 1, 5, 1, 2, 4, 1, 1, 1, 28, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.238718}", "{'[1, 1, 5, 1, 2, 4, 1, 1, 1, 28, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.238815}", "{'[1, 1, 5, 1, 2, 4, 1, 1, 1, 28, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.238763}", "{'[1, 1, 5, 1, 2, 4, 1, 1, 1, 28, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.236927}", "{'[1, 1, 5, 1, 2, 4, 1, 1, 1, 28, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.231839}", "{'[1, 1, 5, 1, 2, 4, 1, 1, 1, 28, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.232631}", "{'[1, 1, 5, 1, 2, 4, 1, 1, 1, 28, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.231886}", "{'[1, 1, 5, 1, 2, 4, 1, 1, 1, 28, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.232664}", "{'[1, 1, 5, 1, 2, 4, 1, 1, 1, 28, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.231831}", "{'[1, 1, 5, 1, 2, 4, 1, 1, 1, 28, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.232052}", "{'[1, 1, 5, 1, 2, 4, 1, 1, 1, 28, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.232528}", "{'[1, 1, 5, 1, 2, 4, 1, 1, 1, 28, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.232132}", "{'[1, 1, 5, 1, 2, 4, 1, 1, 1, 28, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.232884}", "{'[1, 1, 5, 1, 2, 4, 1, 1, 1, 28, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.231895}", "{'[1, 1, 5, 1, 2, 4, 1, 1, 1, 28, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.232722}", "{'[1, 1, 5, 1, 2, 4, 1, 1, 1, 28, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.231736}", "{'[1, 1, 5, 1, 2, 4, 1, 1, 1, 28, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.232458}", "{'[1, 1, 5, 1, 2, 4, 1, 1, 1, 28, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.231878}", "{'[1, 1, 5, 1, 2, 4, 1, 1, 1, 28, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.232737}", "{'[1, 1, 5, 1, 2, 4, 1, 1, 1, 28, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.231677}", "{'[1, 1, 5, 1, 2, 4, 1, 1, 1, 28, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.232701}", "{'[1, 1, 5, 1, 2, 4, 1, 1, 1, 28, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.23212}", "{'[1, 1, 5, 1, 2, 4, 1, 1, 1, 28, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.231952}", "{'[1, 1, 5, 1, 2, 4, 1, 1, 1, 28, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.232572}", "{'[1, 1, 5, 1, 2, 4, 1, 1, 1, 28, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.231765}", "{'[1, 1, 5, 1, 2, 4, 1, 1, 1, 28, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.232633}"]
returning from 'run': {'[1, 1, 5, 1, 2, 4, 1, 1, 1, 28, 0, 28, 0, 0, 1, 0, 1, 1]': ([0.267293, 0.264815, 0.238785, 0.238893, 0.238718, 0.238815, 0.238763, 0.236927, 0.231839, 0.232631, 0.231886, 0.232664, 0.231831, 0.232052, 0.232528, 0.232132, 0.232884, 0.231895, 0.232722, 0.231736, 0.232458, 0.231878, 0.232737, 0.231677, 0.232701, 0.23212, 0.231952, 0.232572, 0.231765, 0.232633], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 1, 5, 1, 2, 4, 1, 1, 1, 28, 0, 28, 0, 0, 1, 0, 1, 1]': ([0.267293, 0.264815, 0.238785, 0.238893, 0.238718, 0.238815, 0.238763, 0.236927, 0.231839, 0.232631, 0.231886, 0.232664, 0.231831, 0.232052, 0.232528, 0.232132, 0.232884, 0.231895, 0.232722, 0.231736, 0.232458, 0.231878, 0.232737, 0.231677, 0.232701, 0.23212, 0.231952, 0.232572, 0.231765, 0.232633], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	182
        Max loop nest depth: 	6
        Additions: 		3118
        Multiplications: 	630
        Divisions: 		0
        Logical: 		0
        Reads: 			5516
        Writes: 		834
        Comparisons:		182
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest36.exe __orio_perftest36.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest36.exe  
Program Test Output: 
{'[1, 3, 3, 6, 5, 4, 1, 1, 22, 29, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.331539}
{'[1, 3, 3, 6, 5, 4, 1, 1, 22, 29, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.283511}
{'[1, 3, 3, 6, 5, 4, 1, 1, 22, 29, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.283516}
{'[1, 3, 3, 6, 5, 4, 1, 1, 22, 29, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.283788}
{'[1, 3, 3, 6, 5, 4, 1, 1, 22, 29, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.283497}
{'[1, 3, 3, 6, 5, 4, 1, 1, 22, 29, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.283764}
{'[1, 3, 3, 6, 5, 4, 1, 1, 22, 29, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.283726}
{'[1, 3, 3, 6, 5, 4, 1, 1, 22, 29, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.283508}
{'[1, 3, 3, 6, 5, 4, 1, 1, 22, 29, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.283643}
{'[1, 3, 3, 6, 5, 4, 1, 1, 22, 29, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.289457}
{'[1, 3, 3, 6, 5, 4, 1, 1, 22, 29, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.292891}
{'[1, 3, 3, 6, 5, 4, 1, 1, 22, 29, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.293}
{'[1, 3, 3, 6, 5, 4, 1, 1, 22, 29, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.292828}
{'[1, 3, 3, 6, 5, 4, 1, 1, 22, 29, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.2932}
{'[1, 3, 3, 6, 5, 4, 1, 1, 22, 29, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.292841}
{'[1, 3, 3, 6, 5, 4, 1, 1, 22, 29, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.293082}
{'[1, 3, 3, 6, 5, 4, 1, 1, 22, 29, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.293155}
{'[1, 3, 3, 6, 5, 4, 1, 1, 22, 29, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.292912}
{'[1, 3, 3, 6, 5, 4, 1, 1, 22, 29, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.292865}
{'[1, 3, 3, 6, 5, 4, 1, 1, 22, 29, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.292879}
{'[1, 3, 3, 6, 5, 4, 1, 1, 22, 29, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.293182}
{'[1, 3, 3, 6, 5, 4, 1, 1, 22, 29, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.292891}
{'[1, 3, 3, 6, 5, 4, 1, 1, 22, 29, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.292906}
{'[1, 3, 3, 6, 5, 4, 1, 1, 22, 29, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.292921}
{'[1, 3, 3, 6, 5, 4, 1, 1, 22, 29, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.292925}
{'[1, 3, 3, 6, 5, 4, 1, 1, 22, 29, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.287891}
{'[1, 3, 3, 6, 5, 4, 1, 1, 22, 29, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.283703}
{'[1, 3, 3, 6, 5, 4, 1, 1, 22, 29, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.283849}
{'[1, 3, 3, 6, 5, 4, 1, 1, 22, 29, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.283584}
{'[1, 3, 3, 6, 5, 4, 1, 1, 22, 29, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.283484}

out:
 ["{'[1, 3, 3, 6, 5, 4, 1, 1, 22, 29, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.331539}", "{'[1, 3, 3, 6, 5, 4, 1, 1, 22, 29, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.283511}", "{'[1, 3, 3, 6, 5, 4, 1, 1, 22, 29, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.283516}", "{'[1, 3, 3, 6, 5, 4, 1, 1, 22, 29, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.283788}", "{'[1, 3, 3, 6, 5, 4, 1, 1, 22, 29, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.283497}", "{'[1, 3, 3, 6, 5, 4, 1, 1, 22, 29, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.283764}", "{'[1, 3, 3, 6, 5, 4, 1, 1, 22, 29, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.283726}", "{'[1, 3, 3, 6, 5, 4, 1, 1, 22, 29, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.283508}", "{'[1, 3, 3, 6, 5, 4, 1, 1, 22, 29, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.283643}", "{'[1, 3, 3, 6, 5, 4, 1, 1, 22, 29, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.289457}", "{'[1, 3, 3, 6, 5, 4, 1, 1, 22, 29, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.292891}", "{'[1, 3, 3, 6, 5, 4, 1, 1, 22, 29, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.293}", "{'[1, 3, 3, 6, 5, 4, 1, 1, 22, 29, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.292828}", "{'[1, 3, 3, 6, 5, 4, 1, 1, 22, 29, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.2932}", "{'[1, 3, 3, 6, 5, 4, 1, 1, 22, 29, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.292841}", "{'[1, 3, 3, 6, 5, 4, 1, 1, 22, 29, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.293082}", "{'[1, 3, 3, 6, 5, 4, 1, 1, 22, 29, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.293155}", "{'[1, 3, 3, 6, 5, 4, 1, 1, 22, 29, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.292912}", "{'[1, 3, 3, 6, 5, 4, 1, 1, 22, 29, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.292865}", "{'[1, 3, 3, 6, 5, 4, 1, 1, 22, 29, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.292879}", "{'[1, 3, 3, 6, 5, 4, 1, 1, 22, 29, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.293182}", "{'[1, 3, 3, 6, 5, 4, 1, 1, 22, 29, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.292891}", "{'[1, 3, 3, 6, 5, 4, 1, 1, 22, 29, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.292906}", "{'[1, 3, 3, 6, 5, 4, 1, 1, 22, 29, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.292921}", "{'[1, 3, 3, 6, 5, 4, 1, 1, 22, 29, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.292925}", "{'[1, 3, 3, 6, 5, 4, 1, 1, 22, 29, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.287891}", "{'[1, 3, 3, 6, 5, 4, 1, 1, 22, 29, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.283703}", "{'[1, 3, 3, 6, 5, 4, 1, 1, 22, 29, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.283849}", "{'[1, 3, 3, 6, 5, 4, 1, 1, 22, 29, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.283584}", "{'[1, 3, 3, 6, 5, 4, 1, 1, 22, 29, 2, 0, 2, 0, 0, 0, 1, 0]' : 0.283484}"]
returning from 'run': {'[1, 3, 3, 6, 5, 4, 1, 1, 22, 29, 2, 0, 2, 0, 0, 0, 1, 0]': ([0.331539, 0.283511, 0.283516, 0.283788, 0.283497, 0.283764, 0.283726, 0.283508, 0.283643, 0.289457, 0.292891, 0.293, 0.292828, 0.2932, 0.292841, 0.293082, 0.293155, 0.292912, 0.292865, 0.292879, 0.293182, 0.292891, 0.292906, 0.292921, 0.292925, 0.287891, 0.283703, 0.283849, 0.283584, 0.283484], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 3, 3, 6, 5, 4, 1, 1, 22, 29, 2, 0, 2, 0, 0, 0, 1, 0]': ([0.331539, 0.283511, 0.283516, 0.283788, 0.283497, 0.283764, 0.283726, 0.283508, 0.283643, 0.289457, 0.292891, 0.293, 0.292828, 0.2932, 0.292841, 0.293082, 0.293155, 0.292912, 0.292865, 0.292879, 0.293182, 0.292891, 0.292906, 0.292921, 0.292925, 0.287891, 0.283703, 0.283849, 0.283584, 0.283484], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	64
        Max loop nest depth: 	5
        Additions: 		1423
        Multiplications: 	558
        Divisions: 		0
        Logical: 		0
        Reads: 			3052
        Writes: 		598
        Comparisons:		64
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest37.exe __orio_perftest37.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest37.exe  
Program Test Output: 
{'[2, 0, 2, 6, 0, 0, 0, 1, 2, 21, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.101629}
{'[2, 0, 2, 6, 0, 0, 0, 1, 2, 21, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.102706}
{'[2, 0, 2, 6, 0, 0, 0, 1, 2, 21, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.102548}
{'[2, 0, 2, 6, 0, 0, 0, 1, 2, 21, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.102527}
{'[2, 0, 2, 6, 0, 0, 0, 1, 2, 21, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.102503}
{'[2, 0, 2, 6, 0, 0, 0, 1, 2, 21, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.1025}
{'[2, 0, 2, 6, 0, 0, 0, 1, 2, 21, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.10247}
{'[2, 0, 2, 6, 0, 0, 0, 1, 2, 21, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.102571}
{'[2, 0, 2, 6, 0, 0, 0, 1, 2, 21, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.102455}
{'[2, 0, 2, 6, 0, 0, 0, 1, 2, 21, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.102435}
{'[2, 0, 2, 6, 0, 0, 0, 1, 2, 21, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.102521}
{'[2, 0, 2, 6, 0, 0, 0, 1, 2, 21, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.102475}
{'[2, 0, 2, 6, 0, 0, 0, 1, 2, 21, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.102623}
{'[2, 0, 2, 6, 0, 0, 0, 1, 2, 21, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.102415}
{'[2, 0, 2, 6, 0, 0, 0, 1, 2, 21, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.102405}
{'[2, 0, 2, 6, 0, 0, 0, 1, 2, 21, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.102479}
{'[2, 0, 2, 6, 0, 0, 0, 1, 2, 21, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.102372}
{'[2, 0, 2, 6, 0, 0, 0, 1, 2, 21, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.099566}
{'[2, 0, 2, 6, 0, 0, 0, 1, 2, 21, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.099416}
{'[2, 0, 2, 6, 0, 0, 0, 1, 2, 21, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.099556}
{'[2, 0, 2, 6, 0, 0, 0, 1, 2, 21, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.099478}
{'[2, 0, 2, 6, 0, 0, 0, 1, 2, 21, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.0998051}
{'[2, 0, 2, 6, 0, 0, 0, 1, 2, 21, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.101705}
{'[2, 0, 2, 6, 0, 0, 0, 1, 2, 21, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.101702}
{'[2, 0, 2, 6, 0, 0, 0, 1, 2, 21, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.101825}
{'[2, 0, 2, 6, 0, 0, 0, 1, 2, 21, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.101696}
{'[2, 0, 2, 6, 0, 0, 0, 1, 2, 21, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.101734}
{'[2, 0, 2, 6, 0, 0, 0, 1, 2, 21, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.10169}
{'[2, 0, 2, 6, 0, 0, 0, 1, 2, 21, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.101724}
{'[2, 0, 2, 6, 0, 0, 0, 1, 2, 21, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.101739}

out:
 ["{'[2, 0, 2, 6, 0, 0, 0, 1, 2, 21, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.101629}", "{'[2, 0, 2, 6, 0, 0, 0, 1, 2, 21, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.102706}", "{'[2, 0, 2, 6, 0, 0, 0, 1, 2, 21, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.102548}", "{'[2, 0, 2, 6, 0, 0, 0, 1, 2, 21, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.102527}", "{'[2, 0, 2, 6, 0, 0, 0, 1, 2, 21, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.102503}", "{'[2, 0, 2, 6, 0, 0, 0, 1, 2, 21, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.1025}", "{'[2, 0, 2, 6, 0, 0, 0, 1, 2, 21, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.10247}", "{'[2, 0, 2, 6, 0, 0, 0, 1, 2, 21, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.102571}", "{'[2, 0, 2, 6, 0, 0, 0, 1, 2, 21, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.102455}", "{'[2, 0, 2, 6, 0, 0, 0, 1, 2, 21, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.102435}", "{'[2, 0, 2, 6, 0, 0, 0, 1, 2, 21, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.102521}", "{'[2, 0, 2, 6, 0, 0, 0, 1, 2, 21, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.102475}", "{'[2, 0, 2, 6, 0, 0, 0, 1, 2, 21, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.102623}", "{'[2, 0, 2, 6, 0, 0, 0, 1, 2, 21, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.102415}", "{'[2, 0, 2, 6, 0, 0, 0, 1, 2, 21, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.102405}", "{'[2, 0, 2, 6, 0, 0, 0, 1, 2, 21, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.102479}", "{'[2, 0, 2, 6, 0, 0, 0, 1, 2, 21, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.102372}", "{'[2, 0, 2, 6, 0, 0, 0, 1, 2, 21, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.099566}", "{'[2, 0, 2, 6, 0, 0, 0, 1, 2, 21, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.099416}", "{'[2, 0, 2, 6, 0, 0, 0, 1, 2, 21, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.099556}", "{'[2, 0, 2, 6, 0, 0, 0, 1, 2, 21, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.099478}", "{'[2, 0, 2, 6, 0, 0, 0, 1, 2, 21, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.0998051}", "{'[2, 0, 2, 6, 0, 0, 0, 1, 2, 21, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.101705}", "{'[2, 0, 2, 6, 0, 0, 0, 1, 2, 21, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.101702}", "{'[2, 0, 2, 6, 0, 0, 0, 1, 2, 21, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.101825}", "{'[2, 0, 2, 6, 0, 0, 0, 1, 2, 21, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.101696}", "{'[2, 0, 2, 6, 0, 0, 0, 1, 2, 21, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.101734}", "{'[2, 0, 2, 6, 0, 0, 0, 1, 2, 21, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.10169}", "{'[2, 0, 2, 6, 0, 0, 0, 1, 2, 21, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.101724}", "{'[2, 0, 2, 6, 0, 0, 0, 1, 2, 21, 0, 28, 1, 0, 1, 1, 1, 0]' : 0.101739}"]
returning from 'run': {'[2, 0, 2, 6, 0, 0, 0, 1, 2, 21, 0, 28, 1, 0, 1, 1, 1, 0]': ([0.101629, 0.102706, 0.102548, 0.102527, 0.102503, 0.1025, 0.10247, 0.102571, 0.102455, 0.102435, 0.102521, 0.102475, 0.102623, 0.102415, 0.102405, 0.102479, 0.102372, 0.099566, 0.099416, 0.099556, 0.099478, 0.0998051, 0.101705, 0.101702, 0.101825, 0.101696, 0.101734, 0.10169, 0.101724, 0.101739], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 0, 2, 6, 0, 0, 0, 1, 2, 21, 0, 28, 1, 0, 1, 1, 1, 0]': ([0.101629, 0.102706, 0.102548, 0.102527, 0.102503, 0.1025, 0.10247, 0.102571, 0.102455, 0.102435, 0.102521, 0.102475, 0.102623, 0.102415, 0.102405, 0.102479, 0.102372, 0.099566, 0.099416, 0.099556, 0.099478, 0.0998051, 0.101705, 0.101702, 0.101825, 0.101696, 0.101734, 0.10169, 0.101724, 0.101739], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	129
        Max loop nest depth: 	4
        Additions: 		12415
        Multiplications: 	3120
        Divisions: 		0
        Logical: 		0
        Reads: 			18231
        Writes: 		1936
        Comparisons:		129
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest38.exe __orio_perftest38.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest38.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest38.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest38.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest38.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	71
        Max loop nest depth: 	4
        Additions: 		1211
        Multiplications: 	240
        Divisions: 		0
        Logical: 		0
        Reads: 			2506
        Writes: 		557
        Comparisons:		71
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest39.exe __orio_perftest39.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest39.exe  
Program Test Output: 
{'[1, 0, 6, 0, 6, 4, 0, 1, 7, 13, 0, 5, 0, 0, 0, 1, 0, 0]' : 0.171814}
{'[1, 0, 6, 0, 6, 4, 0, 1, 7, 13, 0, 5, 0, 0, 0, 1, 0, 0]' : 0.171265}
{'[1, 0, 6, 0, 6, 4, 0, 1, 7, 13, 0, 5, 0, 0, 0, 1, 0, 0]' : 0.157318}
{'[1, 0, 6, 0, 6, 4, 0, 1, 7, 13, 0, 5, 0, 0, 0, 1, 0, 0]' : 0.156557}
{'[1, 0, 6, 0, 6, 4, 0, 1, 7, 13, 0, 5, 0, 0, 0, 1, 0, 0]' : 0.156375}
{'[1, 0, 6, 0, 6, 4, 0, 1, 7, 13, 0, 5, 0, 0, 0, 1, 0, 0]' : 0.156358}
{'[1, 0, 6, 0, 6, 4, 0, 1, 7, 13, 0, 5, 0, 0, 0, 1, 0, 0]' : 0.156467}
{'[1, 0, 6, 0, 6, 4, 0, 1, 7, 13, 0, 5, 0, 0, 0, 1, 0, 0]' : 0.156305}
{'[1, 0, 6, 0, 6, 4, 0, 1, 7, 13, 0, 5, 0, 0, 0, 1, 0, 0]' : 0.156313}
{'[1, 0, 6, 0, 6, 4, 0, 1, 7, 13, 0, 5, 0, 0, 0, 1, 0, 0]' : 0.156453}
{'[1, 0, 6, 0, 6, 4, 0, 1, 7, 13, 0, 5, 0, 0, 0, 1, 0, 0]' : 0.156556}
{'[1, 0, 6, 0, 6, 4, 0, 1, 7, 13, 0, 5, 0, 0, 0, 1, 0, 0]' : 0.15639}
{'[1, 0, 6, 0, 6, 4, 0, 1, 7, 13, 0, 5, 0, 0, 0, 1, 0, 0]' : 0.156565}
{'[1, 0, 6, 0, 6, 4, 0, 1, 7, 13, 0, 5, 0, 0, 0, 1, 0, 0]' : 0.156307}
{'[1, 0, 6, 0, 6, 4, 0, 1, 7, 13, 0, 5, 0, 0, 0, 1, 0, 0]' : 0.156267}
{'[1, 0, 6, 0, 6, 4, 0, 1, 7, 13, 0, 5, 0, 0, 0, 1, 0, 0]' : 0.154017}
{'[1, 0, 6, 0, 6, 4, 0, 1, 7, 13, 0, 5, 0, 0, 0, 1, 0, 0]' : 0.155264}
{'[1, 0, 6, 0, 6, 4, 0, 1, 7, 13, 0, 5, 0, 0, 0, 1, 0, 0]' : 0.156314}
{'[1, 0, 6, 0, 6, 4, 0, 1, 7, 13, 0, 5, 0, 0, 0, 1, 0, 0]' : 0.156445}
{'[1, 0, 6, 0, 6, 4, 0, 1, 7, 13, 0, 5, 0, 0, 0, 1, 0, 0]' : 0.15662}
{'[1, 0, 6, 0, 6, 4, 0, 1, 7, 13, 0, 5, 0, 0, 0, 1, 0, 0]' : 0.156217}
{'[1, 0, 6, 0, 6, 4, 0, 1, 7, 13, 0, 5, 0, 0, 0, 1, 0, 0]' : 0.156286}
{'[1, 0, 6, 0, 6, 4, 0, 1, 7, 13, 0, 5, 0, 0, 0, 1, 0, 0]' : 0.156416}
{'[1, 0, 6, 0, 6, 4, 0, 1, 7, 13, 0, 5, 0, 0, 0, 1, 0, 0]' : 0.156342}
{'[1, 0, 6, 0, 6, 4, 0, 1, 7, 13, 0, 5, 0, 0, 0, 1, 0, 0]' : 0.156602}
{'[1, 0, 6, 0, 6, 4, 0, 1, 7, 13, 0, 5, 0, 0, 0, 1, 0, 0]' : 0.156399}
{'[1, 0, 6, 0, 6, 4, 0, 1, 7, 13, 0, 5, 0, 0, 0, 1, 0, 0]' : 0.156333}
{'[1, 0, 6, 0, 6, 4, 0, 1, 7, 13, 0, 5, 0, 0, 0, 1, 0, 0]' : 0.156273}
{'[1, 0, 6, 0, 6, 4, 0, 1, 7, 13, 0, 5, 0, 0, 0, 1, 0, 0]' : 0.154745}
{'[1, 0, 6, 0, 6, 4, 0, 1, 7, 13, 0, 5, 0, 0, 0, 1, 0, 0]' : 0.156019}

out:
 ["{'[1, 0, 6, 0, 6, 4, 0, 1, 7, 13, 0, 5, 0, 0, 0, 1, 0, 0]' : 0.171814}", "{'[1, 0, 6, 0, 6, 4, 0, 1, 7, 13, 0, 5, 0, 0, 0, 1, 0, 0]' : 0.171265}", "{'[1, 0, 6, 0, 6, 4, 0, 1, 7, 13, 0, 5, 0, 0, 0, 1, 0, 0]' : 0.157318}", "{'[1, 0, 6, 0, 6, 4, 0, 1, 7, 13, 0, 5, 0, 0, 0, 1, 0, 0]' : 0.156557}", "{'[1, 0, 6, 0, 6, 4, 0, 1, 7, 13, 0, 5, 0, 0, 0, 1, 0, 0]' : 0.156375}", "{'[1, 0, 6, 0, 6, 4, 0, 1, 7, 13, 0, 5, 0, 0, 0, 1, 0, 0]' : 0.156358}", "{'[1, 0, 6, 0, 6, 4, 0, 1, 7, 13, 0, 5, 0, 0, 0, 1, 0, 0]' : 0.156467}", "{'[1, 0, 6, 0, 6, 4, 0, 1, 7, 13, 0, 5, 0, 0, 0, 1, 0, 0]' : 0.156305}", "{'[1, 0, 6, 0, 6, 4, 0, 1, 7, 13, 0, 5, 0, 0, 0, 1, 0, 0]' : 0.156313}", "{'[1, 0, 6, 0, 6, 4, 0, 1, 7, 13, 0, 5, 0, 0, 0, 1, 0, 0]' : 0.156453}", "{'[1, 0, 6, 0, 6, 4, 0, 1, 7, 13, 0, 5, 0, 0, 0, 1, 0, 0]' : 0.156556}", "{'[1, 0, 6, 0, 6, 4, 0, 1, 7, 13, 0, 5, 0, 0, 0, 1, 0, 0]' : 0.15639}", "{'[1, 0, 6, 0, 6, 4, 0, 1, 7, 13, 0, 5, 0, 0, 0, 1, 0, 0]' : 0.156565}", "{'[1, 0, 6, 0, 6, 4, 0, 1, 7, 13, 0, 5, 0, 0, 0, 1, 0, 0]' : 0.156307}", "{'[1, 0, 6, 0, 6, 4, 0, 1, 7, 13, 0, 5, 0, 0, 0, 1, 0, 0]' : 0.156267}", "{'[1, 0, 6, 0, 6, 4, 0, 1, 7, 13, 0, 5, 0, 0, 0, 1, 0, 0]' : 0.154017}", "{'[1, 0, 6, 0, 6, 4, 0, 1, 7, 13, 0, 5, 0, 0, 0, 1, 0, 0]' : 0.155264}", "{'[1, 0, 6, 0, 6, 4, 0, 1, 7, 13, 0, 5, 0, 0, 0, 1, 0, 0]' : 0.156314}", "{'[1, 0, 6, 0, 6, 4, 0, 1, 7, 13, 0, 5, 0, 0, 0, 1, 0, 0]' : 0.156445}", "{'[1, 0, 6, 0, 6, 4, 0, 1, 7, 13, 0, 5, 0, 0, 0, 1, 0, 0]' : 0.15662}", "{'[1, 0, 6, 0, 6, 4, 0, 1, 7, 13, 0, 5, 0, 0, 0, 1, 0, 0]' : 0.156217}", "{'[1, 0, 6, 0, 6, 4, 0, 1, 7, 13, 0, 5, 0, 0, 0, 1, 0, 0]' : 0.156286}", "{'[1, 0, 6, 0, 6, 4, 0, 1, 7, 13, 0, 5, 0, 0, 0, 1, 0, 0]' : 0.156416}", "{'[1, 0, 6, 0, 6, 4, 0, 1, 7, 13, 0, 5, 0, 0, 0, 1, 0, 0]' : 0.156342}", "{'[1, 0, 6, 0, 6, 4, 0, 1, 7, 13, 0, 5, 0, 0, 0, 1, 0, 0]' : 0.156602}", "{'[1, 0, 6, 0, 6, 4, 0, 1, 7, 13, 0, 5, 0, 0, 0, 1, 0, 0]' : 0.156399}", "{'[1, 0, 6, 0, 6, 4, 0, 1, 7, 13, 0, 5, 0, 0, 0, 1, 0, 0]' : 0.156333}", "{'[1, 0, 6, 0, 6, 4, 0, 1, 7, 13, 0, 5, 0, 0, 0, 1, 0, 0]' : 0.156273}", "{'[1, 0, 6, 0, 6, 4, 0, 1, 7, 13, 0, 5, 0, 0, 0, 1, 0, 0]' : 0.154745}", "{'[1, 0, 6, 0, 6, 4, 0, 1, 7, 13, 0, 5, 0, 0, 0, 1, 0, 0]' : 0.156019}"]
returning from 'run': {'[1, 0, 6, 0, 6, 4, 0, 1, 7, 13, 0, 5, 0, 0, 0, 1, 0, 0]': ([0.171814, 0.171265, 0.157318, 0.156557, 0.156375, 0.156358, 0.156467, 0.156305, 0.156313, 0.156453, 0.156556, 0.15639, 0.156565, 0.156307, 0.156267, 0.154017, 0.155264, 0.156314, 0.156445, 0.15662, 0.156217, 0.156286, 0.156416, 0.156342, 0.156602, 0.156399, 0.156333, 0.156273, 0.154745, 0.156019], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 6, 0, 6, 4, 0, 1, 7, 13, 0, 5, 0, 0, 0, 1, 0, 0]': ([0.171814, 0.171265, 0.157318, 0.156557, 0.156375, 0.156358, 0.156467, 0.156305, 0.156313, 0.156453, 0.156556, 0.15639, 0.156565, 0.156307, 0.156267, 0.154017, 0.155264, 0.156314, 0.156445, 0.15662, 0.156217, 0.156286, 0.156416, 0.156342, 0.156602, 0.156399, 0.156333, 0.156273, 0.154745, 0.156019], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	25
        Max loop nest depth: 	6
        Additions: 		2753
        Multiplications: 	666
        Divisions: 		0
        Logical: 		0
        Reads: 			4093
        Writes: 		390
        Comparisons:		25
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest40.exe __orio_perftest40.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest40.exe  
Program Test Output: 
{'[1, 6, 6, 1, 5, 5, 0, 1, 0, 0, 4, 29, 1, 0, 0, 0, 0, 0]' : 0.116084}
{'[1, 6, 6, 1, 5, 5, 0, 1, 0, 0, 4, 29, 1, 0, 0, 0, 0, 0]' : 0.116032}
{'[1, 6, 6, 1, 5, 5, 0, 1, 0, 0, 4, 29, 1, 0, 0, 0, 0, 0]' : 0.115903}
{'[1, 6, 6, 1, 5, 5, 0, 1, 0, 0, 4, 29, 1, 0, 0, 0, 0, 0]' : 0.11597}
{'[1, 6, 6, 1, 5, 5, 0, 1, 0, 0, 4, 29, 1, 0, 0, 0, 0, 0]' : 0.115892}
{'[1, 6, 6, 1, 5, 5, 0, 1, 0, 0, 4, 29, 1, 0, 0, 0, 0, 0]' : 0.115795}
{'[1, 6, 6, 1, 5, 5, 0, 1, 0, 0, 4, 29, 1, 0, 0, 0, 0, 0]' : 0.116044}
{'[1, 6, 6, 1, 5, 5, 0, 1, 0, 0, 4, 29, 1, 0, 0, 0, 0, 0]' : 0.116107}
{'[1, 6, 6, 1, 5, 5, 0, 1, 0, 0, 4, 29, 1, 0, 0, 0, 0, 0]' : 0.115995}
{'[1, 6, 6, 1, 5, 5, 0, 1, 0, 0, 4, 29, 1, 0, 0, 0, 0, 0]' : 0.115856}
{'[1, 6, 6, 1, 5, 5, 0, 1, 0, 0, 4, 29, 1, 0, 0, 0, 0, 0]' : 0.115797}
{'[1, 6, 6, 1, 5, 5, 0, 1, 0, 0, 4, 29, 1, 0, 0, 0, 0, 0]' : 0.118741}
{'[1, 6, 6, 1, 5, 5, 0, 1, 0, 0, 4, 29, 1, 0, 0, 0, 0, 0]' : 0.118789}
{'[1, 6, 6, 1, 5, 5, 0, 1, 0, 0, 4, 29, 1, 0, 0, 0, 0, 0]' : 0.118635}
{'[1, 6, 6, 1, 5, 5, 0, 1, 0, 0, 4, 29, 1, 0, 0, 0, 0, 0]' : 0.11864}
{'[1, 6, 6, 1, 5, 5, 0, 1, 0, 0, 4, 29, 1, 0, 0, 0, 0, 0]' : 0.118928}
{'[1, 6, 6, 1, 5, 5, 0, 1, 0, 0, 4, 29, 1, 0, 0, 0, 0, 0]' : 0.118768}
{'[1, 6, 6, 1, 5, 5, 0, 1, 0, 0, 4, 29, 1, 0, 0, 0, 0, 0]' : 0.118661}
{'[1, 6, 6, 1, 5, 5, 0, 1, 0, 0, 4, 29, 1, 0, 0, 0, 0, 0]' : 0.116284}
{'[1, 6, 6, 1, 5, 5, 0, 1, 0, 0, 4, 29, 1, 0, 0, 0, 0, 0]' : 0.115966}
{'[1, 6, 6, 1, 5, 5, 0, 1, 0, 0, 4, 29, 1, 0, 0, 0, 0, 0]' : 0.118702}
{'[1, 6, 6, 1, 5, 5, 0, 1, 0, 0, 4, 29, 1, 0, 0, 0, 0, 0]' : 0.118639}
{'[1, 6, 6, 1, 5, 5, 0, 1, 0, 0, 4, 29, 1, 0, 0, 0, 0, 0]' : 0.118579}
{'[1, 6, 6, 1, 5, 5, 0, 1, 0, 0, 4, 29, 1, 0, 0, 0, 0, 0]' : 0.11747}
{'[1, 6, 6, 1, 5, 5, 0, 1, 0, 0, 4, 29, 1, 0, 0, 0, 0, 0]' : 0.11874}
{'[1, 6, 6, 1, 5, 5, 0, 1, 0, 0, 4, 29, 1, 0, 0, 0, 0, 0]' : 0.118663}
{'[1, 6, 6, 1, 5, 5, 0, 1, 0, 0, 4, 29, 1, 0, 0, 0, 0, 0]' : 0.11865}
{'[1, 6, 6, 1, 5, 5, 0, 1, 0, 0, 4, 29, 1, 0, 0, 0, 0, 0]' : 0.118799}
{'[1, 6, 6, 1, 5, 5, 0, 1, 0, 0, 4, 29, 1, 0, 0, 0, 0, 0]' : 0.118695}
{'[1, 6, 6, 1, 5, 5, 0, 1, 0, 0, 4, 29, 1, 0, 0, 0, 0, 0]' : 0.118731}

out:
 ["{'[1, 6, 6, 1, 5, 5, 0, 1, 0, 0, 4, 29, 1, 0, 0, 0, 0, 0]' : 0.116084}", "{'[1, 6, 6, 1, 5, 5, 0, 1, 0, 0, 4, 29, 1, 0, 0, 0, 0, 0]' : 0.116032}", "{'[1, 6, 6, 1, 5, 5, 0, 1, 0, 0, 4, 29, 1, 0, 0, 0, 0, 0]' : 0.115903}", "{'[1, 6, 6, 1, 5, 5, 0, 1, 0, 0, 4, 29, 1, 0, 0, 0, 0, 0]' : 0.11597}", "{'[1, 6, 6, 1, 5, 5, 0, 1, 0, 0, 4, 29, 1, 0, 0, 0, 0, 0]' : 0.115892}", "{'[1, 6, 6, 1, 5, 5, 0, 1, 0, 0, 4, 29, 1, 0, 0, 0, 0, 0]' : 0.115795}", "{'[1, 6, 6, 1, 5, 5, 0, 1, 0, 0, 4, 29, 1, 0, 0, 0, 0, 0]' : 0.116044}", "{'[1, 6, 6, 1, 5, 5, 0, 1, 0, 0, 4, 29, 1, 0, 0, 0, 0, 0]' : 0.116107}", "{'[1, 6, 6, 1, 5, 5, 0, 1, 0, 0, 4, 29, 1, 0, 0, 0, 0, 0]' : 0.115995}", "{'[1, 6, 6, 1, 5, 5, 0, 1, 0, 0, 4, 29, 1, 0, 0, 0, 0, 0]' : 0.115856}", "{'[1, 6, 6, 1, 5, 5, 0, 1, 0, 0, 4, 29, 1, 0, 0, 0, 0, 0]' : 0.115797}", "{'[1, 6, 6, 1, 5, 5, 0, 1, 0, 0, 4, 29, 1, 0, 0, 0, 0, 0]' : 0.118741}", "{'[1, 6, 6, 1, 5, 5, 0, 1, 0, 0, 4, 29, 1, 0, 0, 0, 0, 0]' : 0.118789}", "{'[1, 6, 6, 1, 5, 5, 0, 1, 0, 0, 4, 29, 1, 0, 0, 0, 0, 0]' : 0.118635}", "{'[1, 6, 6, 1, 5, 5, 0, 1, 0, 0, 4, 29, 1, 0, 0, 0, 0, 0]' : 0.11864}", "{'[1, 6, 6, 1, 5, 5, 0, 1, 0, 0, 4, 29, 1, 0, 0, 0, 0, 0]' : 0.118928}", "{'[1, 6, 6, 1, 5, 5, 0, 1, 0, 0, 4, 29, 1, 0, 0, 0, 0, 0]' : 0.118768}", "{'[1, 6, 6, 1, 5, 5, 0, 1, 0, 0, 4, 29, 1, 0, 0, 0, 0, 0]' : 0.118661}", "{'[1, 6, 6, 1, 5, 5, 0, 1, 0, 0, 4, 29, 1, 0, 0, 0, 0, 0]' : 0.116284}", "{'[1, 6, 6, 1, 5, 5, 0, 1, 0, 0, 4, 29, 1, 0, 0, 0, 0, 0]' : 0.115966}", "{'[1, 6, 6, 1, 5, 5, 0, 1, 0, 0, 4, 29, 1, 0, 0, 0, 0, 0]' : 0.118702}", "{'[1, 6, 6, 1, 5, 5, 0, 1, 0, 0, 4, 29, 1, 0, 0, 0, 0, 0]' : 0.118639}", "{'[1, 6, 6, 1, 5, 5, 0, 1, 0, 0, 4, 29, 1, 0, 0, 0, 0, 0]' : 0.118579}", "{'[1, 6, 6, 1, 5, 5, 0, 1, 0, 0, 4, 29, 1, 0, 0, 0, 0, 0]' : 0.11747}", "{'[1, 6, 6, 1, 5, 5, 0, 1, 0, 0, 4, 29, 1, 0, 0, 0, 0, 0]' : 0.11874}", "{'[1, 6, 6, 1, 5, 5, 0, 1, 0, 0, 4, 29, 1, 0, 0, 0, 0, 0]' : 0.118663}", "{'[1, 6, 6, 1, 5, 5, 0, 1, 0, 0, 4, 29, 1, 0, 0, 0, 0, 0]' : 0.11865}", "{'[1, 6, 6, 1, 5, 5, 0, 1, 0, 0, 4, 29, 1, 0, 0, 0, 0, 0]' : 0.118799}", "{'[1, 6, 6, 1, 5, 5, 0, 1, 0, 0, 4, 29, 1, 0, 0, 0, 0, 0]' : 0.118695}", "{'[1, 6, 6, 1, 5, 5, 0, 1, 0, 0, 4, 29, 1, 0, 0, 0, 0, 0]' : 0.118731}"]
returning from 'run': {'[1, 6, 6, 1, 5, 5, 0, 1, 0, 0, 4, 29, 1, 0, 0, 0, 0, 0]': ([0.116084, 0.116032, 0.115903, 0.11597, 0.115892, 0.115795, 0.116044, 0.116107, 0.115995, 0.115856, 0.115797, 0.118741, 0.118789, 0.118635, 0.11864, 0.118928, 0.118768, 0.118661, 0.116284, 0.115966, 0.118702, 0.118639, 0.118579, 0.11747, 0.11874, 0.118663, 0.11865, 0.118799, 0.118695, 0.118731], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 6, 6, 1, 5, 5, 0, 1, 0, 0, 4, 29, 1, 0, 0, 0, 0, 0]': ([0.116084, 0.116032, 0.115903, 0.11597, 0.115892, 0.115795, 0.116044, 0.116107, 0.115995, 0.115856, 0.115797, 0.118741, 0.118789, 0.118635, 0.11864, 0.118928, 0.118768, 0.118661, 0.116284, 0.115966, 0.118702, 0.118639, 0.118579, 0.11747, 0.11874, 0.118663, 0.11865, 0.118799, 0.118695, 0.118731], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		235
        Multiplications: 	80
        Divisions: 		0
        Logical: 		0
        Reads: 			590
        Writes: 		139
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest41.exe __orio_perftest41.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest41.exe  
Program Test Output: 
{'[1, 4, 2, 0, 4, 2, 0, 0, 0, 0, 3, 1, 0, 0, 2, 1, 1, 0]' : 0.187478}
{'[1, 4, 2, 0, 4, 2, 0, 0, 0, 0, 3, 1, 0, 0, 2, 1, 1, 0]' : 0.187322}
{'[1, 4, 2, 0, 4, 2, 0, 0, 0, 0, 3, 1, 0, 0, 2, 1, 1, 0]' : 0.165717}
{'[1, 4, 2, 0, 4, 2, 0, 0, 0, 0, 3, 1, 0, 0, 2, 1, 1, 0]' : 0.156879}
{'[1, 4, 2, 0, 4, 2, 0, 0, 0, 0, 3, 1, 0, 0, 2, 1, 1, 0]' : 0.156817}
{'[1, 4, 2, 0, 4, 2, 0, 0, 0, 0, 3, 1, 0, 0, 2, 1, 1, 0]' : 0.156858}
{'[1, 4, 2, 0, 4, 2, 0, 0, 0, 0, 3, 1, 0, 0, 2, 1, 1, 0]' : 0.157112}
{'[1, 4, 2, 0, 4, 2, 0, 0, 0, 0, 3, 1, 0, 0, 2, 1, 1, 0]' : 0.156856}
{'[1, 4, 2, 0, 4, 2, 0, 0, 0, 0, 3, 1, 0, 0, 2, 1, 1, 0]' : 0.157262}
{'[1, 4, 2, 0, 4, 2, 0, 0, 0, 0, 3, 1, 0, 0, 2, 1, 1, 0]' : 0.156932}
{'[1, 4, 2, 0, 4, 2, 0, 0, 0, 0, 3, 1, 0, 0, 2, 1, 1, 0]' : 0.157038}
{'[1, 4, 2, 0, 4, 2, 0, 0, 0, 0, 3, 1, 0, 0, 2, 1, 1, 0]' : 0.156865}
{'[1, 4, 2, 0, 4, 2, 0, 0, 0, 0, 3, 1, 0, 0, 2, 1, 1, 0]' : 0.156817}
{'[1, 4, 2, 0, 4, 2, 0, 0, 0, 0, 3, 1, 0, 0, 2, 1, 1, 0]' : 0.15721}
{'[1, 4, 2, 0, 4, 2, 0, 0, 0, 0, 3, 1, 0, 0, 2, 1, 1, 0]' : 0.156916}
{'[1, 4, 2, 0, 4, 2, 0, 0, 0, 0, 3, 1, 0, 0, 2, 1, 1, 0]' : 0.156896}
{'[1, 4, 2, 0, 4, 2, 0, 0, 0, 0, 3, 1, 0, 0, 2, 1, 1, 0]' : 0.156835}
{'[1, 4, 2, 0, 4, 2, 0, 0, 0, 0, 3, 1, 0, 0, 2, 1, 1, 0]' : 0.156873}
{'[1, 4, 2, 0, 4, 2, 0, 0, 0, 0, 3, 1, 0, 0, 2, 1, 1, 0]' : 0.156848}
{'[1, 4, 2, 0, 4, 2, 0, 0, 0, 0, 3, 1, 0, 0, 2, 1, 1, 0]' : 0.156827}
{'[1, 4, 2, 0, 4, 2, 0, 0, 0, 0, 3, 1, 0, 0, 2, 1, 1, 0]' : 0.156827}
{'[1, 4, 2, 0, 4, 2, 0, 0, 0, 0, 3, 1, 0, 0, 2, 1, 1, 0]' : 0.156912}
{'[1, 4, 2, 0, 4, 2, 0, 0, 0, 0, 3, 1, 0, 0, 2, 1, 1, 0]' : 0.157226}
{'[1, 4, 2, 0, 4, 2, 0, 0, 0, 0, 3, 1, 0, 0, 2, 1, 1, 0]' : 0.156824}
{'[1, 4, 2, 0, 4, 2, 0, 0, 0, 0, 3, 1, 0, 0, 2, 1, 1, 0]' : 0.156835}
{'[1, 4, 2, 0, 4, 2, 0, 0, 0, 0, 3, 1, 0, 0, 2, 1, 1, 0]' : 0.156833}
{'[1, 4, 2, 0, 4, 2, 0, 0, 0, 0, 3, 1, 0, 0, 2, 1, 1, 0]' : 0.156882}
{'[1, 4, 2, 0, 4, 2, 0, 0, 0, 0, 3, 1, 0, 0, 2, 1, 1, 0]' : 0.15723}
{'[1, 4, 2, 0, 4, 2, 0, 0, 0, 0, 3, 1, 0, 0, 2, 1, 1, 0]' : 0.156832}
{'[1, 4, 2, 0, 4, 2, 0, 0, 0, 0, 3, 1, 0, 0, 2, 1, 1, 0]' : 0.15689}

out:
 ["{'[1, 4, 2, 0, 4, 2, 0, 0, 0, 0, 3, 1, 0, 0, 2, 1, 1, 0]' : 0.187478}", "{'[1, 4, 2, 0, 4, 2, 0, 0, 0, 0, 3, 1, 0, 0, 2, 1, 1, 0]' : 0.187322}", "{'[1, 4, 2, 0, 4, 2, 0, 0, 0, 0, 3, 1, 0, 0, 2, 1, 1, 0]' : 0.165717}", "{'[1, 4, 2, 0, 4, 2, 0, 0, 0, 0, 3, 1, 0, 0, 2, 1, 1, 0]' : 0.156879}", "{'[1, 4, 2, 0, 4, 2, 0, 0, 0, 0, 3, 1, 0, 0, 2, 1, 1, 0]' : 0.156817}", "{'[1, 4, 2, 0, 4, 2, 0, 0, 0, 0, 3, 1, 0, 0, 2, 1, 1, 0]' : 0.156858}", "{'[1, 4, 2, 0, 4, 2, 0, 0, 0, 0, 3, 1, 0, 0, 2, 1, 1, 0]' : 0.157112}", "{'[1, 4, 2, 0, 4, 2, 0, 0, 0, 0, 3, 1, 0, 0, 2, 1, 1, 0]' : 0.156856}", "{'[1, 4, 2, 0, 4, 2, 0, 0, 0, 0, 3, 1, 0, 0, 2, 1, 1, 0]' : 0.157262}", "{'[1, 4, 2, 0, 4, 2, 0, 0, 0, 0, 3, 1, 0, 0, 2, 1, 1, 0]' : 0.156932}", "{'[1, 4, 2, 0, 4, 2, 0, 0, 0, 0, 3, 1, 0, 0, 2, 1, 1, 0]' : 0.157038}", "{'[1, 4, 2, 0, 4, 2, 0, 0, 0, 0, 3, 1, 0, 0, 2, 1, 1, 0]' : 0.156865}", "{'[1, 4, 2, 0, 4, 2, 0, 0, 0, 0, 3, 1, 0, 0, 2, 1, 1, 0]' : 0.156817}", "{'[1, 4, 2, 0, 4, 2, 0, 0, 0, 0, 3, 1, 0, 0, 2, 1, 1, 0]' : 0.15721}", "{'[1, 4, 2, 0, 4, 2, 0, 0, 0, 0, 3, 1, 0, 0, 2, 1, 1, 0]' : 0.156916}", "{'[1, 4, 2, 0, 4, 2, 0, 0, 0, 0, 3, 1, 0, 0, 2, 1, 1, 0]' : 0.156896}", "{'[1, 4, 2, 0, 4, 2, 0, 0, 0, 0, 3, 1, 0, 0, 2, 1, 1, 0]' : 0.156835}", "{'[1, 4, 2, 0, 4, 2, 0, 0, 0, 0, 3, 1, 0, 0, 2, 1, 1, 0]' : 0.156873}", "{'[1, 4, 2, 0, 4, 2, 0, 0, 0, 0, 3, 1, 0, 0, 2, 1, 1, 0]' : 0.156848}", "{'[1, 4, 2, 0, 4, 2, 0, 0, 0, 0, 3, 1, 0, 0, 2, 1, 1, 0]' : 0.156827}", "{'[1, 4, 2, 0, 4, 2, 0, 0, 0, 0, 3, 1, 0, 0, 2, 1, 1, 0]' : 0.156827}", "{'[1, 4, 2, 0, 4, 2, 0, 0, 0, 0, 3, 1, 0, 0, 2, 1, 1, 0]' : 0.156912}", "{'[1, 4, 2, 0, 4, 2, 0, 0, 0, 0, 3, 1, 0, 0, 2, 1, 1, 0]' : 0.157226}", "{'[1, 4, 2, 0, 4, 2, 0, 0, 0, 0, 3, 1, 0, 0, 2, 1, 1, 0]' : 0.156824}", "{'[1, 4, 2, 0, 4, 2, 0, 0, 0, 0, 3, 1, 0, 0, 2, 1, 1, 0]' : 0.156835}", "{'[1, 4, 2, 0, 4, 2, 0, 0, 0, 0, 3, 1, 0, 0, 2, 1, 1, 0]' : 0.156833}", "{'[1, 4, 2, 0, 4, 2, 0, 0, 0, 0, 3, 1, 0, 0, 2, 1, 1, 0]' : 0.156882}", "{'[1, 4, 2, 0, 4, 2, 0, 0, 0, 0, 3, 1, 0, 0, 2, 1, 1, 0]' : 0.15723}", "{'[1, 4, 2, 0, 4, 2, 0, 0, 0, 0, 3, 1, 0, 0, 2, 1, 1, 0]' : 0.156832}", "{'[1, 4, 2, 0, 4, 2, 0, 0, 0, 0, 3, 1, 0, 0, 2, 1, 1, 0]' : 0.15689}"]
returning from 'run': {'[1, 4, 2, 0, 4, 2, 0, 0, 0, 0, 3, 1, 0, 0, 2, 1, 1, 0]': ([0.187478, 0.187322, 0.165717, 0.156879, 0.156817, 0.156858, 0.157112, 0.156856, 0.157262, 0.156932, 0.157038, 0.156865, 0.156817, 0.15721, 0.156916, 0.156896, 0.156835, 0.156873, 0.156848, 0.156827, 0.156827, 0.156912, 0.157226, 0.156824, 0.156835, 0.156833, 0.156882, 0.15723, 0.156832, 0.15689], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 4, 2, 0, 4, 2, 0, 0, 0, 0, 3, 1, 0, 0, 2, 1, 1, 0]': ([0.187478, 0.187322, 0.165717, 0.156879, 0.156817, 0.156858, 0.157112, 0.156856, 0.157262, 0.156932, 0.157038, 0.156865, 0.156817, 0.15721, 0.156916, 0.156896, 0.156835, 0.156873, 0.156848, 0.156827, 0.156827, 0.156912, 0.157226, 0.156824, 0.156835, 0.156833, 0.156882, 0.15723, 0.156832, 0.15689], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = jjj
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	5
        Additions: 		1288
        Multiplications: 	396
        Divisions: 		0
        Logical: 		0
        Reads: 			2154
        Writes: 		258
        Comparisons:		18
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest42.exe __orio_perftest42.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest42.exe  
Program Test Output: 
{'[5, 5, 0, 4, 3, 1, 0, 0, 11, 9, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.124163}
{'[5, 5, 0, 4, 3, 1, 0, 0, 11, 9, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.124216}
{'[5, 5, 0, 4, 3, 1, 0, 0, 11, 9, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.124196}
{'[5, 5, 0, 4, 3, 1, 0, 0, 11, 9, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.118962}
{'[5, 5, 0, 4, 3, 1, 0, 0, 11, 9, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.109594}
{'[5, 5, 0, 4, 3, 1, 0, 0, 11, 9, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.109555}
{'[5, 5, 0, 4, 3, 1, 0, 0, 11, 9, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.109771}
{'[5, 5, 0, 4, 3, 1, 0, 0, 11, 9, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.109863}
{'[5, 5, 0, 4, 3, 1, 0, 0, 11, 9, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.109549}
{'[5, 5, 0, 4, 3, 1, 0, 0, 11, 9, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.1096}
{'[5, 5, 0, 4, 3, 1, 0, 0, 11, 9, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.107001}
{'[5, 5, 0, 4, 3, 1, 0, 0, 11, 9, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.108463}
{'[5, 5, 0, 4, 3, 1, 0, 0, 11, 9, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.109484}
{'[5, 5, 0, 4, 3, 1, 0, 0, 11, 9, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.109564}
{'[5, 5, 0, 4, 3, 1, 0, 0, 11, 9, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.10987}
{'[5, 5, 0, 4, 3, 1, 0, 0, 11, 9, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.109605}
{'[5, 5, 0, 4, 3, 1, 0, 0, 11, 9, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.109819}
{'[5, 5, 0, 4, 3, 1, 0, 0, 11, 9, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.109643}
{'[5, 5, 0, 4, 3, 1, 0, 0, 11, 9, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.109558}
{'[5, 5, 0, 4, 3, 1, 0, 0, 11, 9, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.1076}
{'[5, 5, 0, 4, 3, 1, 0, 0, 11, 9, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.108276}
{'[5, 5, 0, 4, 3, 1, 0, 0, 11, 9, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.109446}
{'[5, 5, 0, 4, 3, 1, 0, 0, 11, 9, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.109565}
{'[5, 5, 0, 4, 3, 1, 0, 0, 11, 9, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.109489}
{'[5, 5, 0, 4, 3, 1, 0, 0, 11, 9, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.109542}
{'[5, 5, 0, 4, 3, 1, 0, 0, 11, 9, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.110179}
{'[5, 5, 0, 4, 3, 1, 0, 0, 11, 9, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.109625}
{'[5, 5, 0, 4, 3, 1, 0, 0, 11, 9, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.109624}
{'[5, 5, 0, 4, 3, 1, 0, 0, 11, 9, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.109702}
{'[5, 5, 0, 4, 3, 1, 0, 0, 11, 9, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.110232}

out:
 ["{'[5, 5, 0, 4, 3, 1, 0, 0, 11, 9, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.124163}", "{'[5, 5, 0, 4, 3, 1, 0, 0, 11, 9, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.124216}", "{'[5, 5, 0, 4, 3, 1, 0, 0, 11, 9, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.124196}", "{'[5, 5, 0, 4, 3, 1, 0, 0, 11, 9, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.118962}", "{'[5, 5, 0, 4, 3, 1, 0, 0, 11, 9, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.109594}", "{'[5, 5, 0, 4, 3, 1, 0, 0, 11, 9, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.109555}", "{'[5, 5, 0, 4, 3, 1, 0, 0, 11, 9, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.109771}", "{'[5, 5, 0, 4, 3, 1, 0, 0, 11, 9, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.109863}", "{'[5, 5, 0, 4, 3, 1, 0, 0, 11, 9, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.109549}", "{'[5, 5, 0, 4, 3, 1, 0, 0, 11, 9, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.1096}", "{'[5, 5, 0, 4, 3, 1, 0, 0, 11, 9, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.107001}", "{'[5, 5, 0, 4, 3, 1, 0, 0, 11, 9, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.108463}", "{'[5, 5, 0, 4, 3, 1, 0, 0, 11, 9, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.109484}", "{'[5, 5, 0, 4, 3, 1, 0, 0, 11, 9, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.109564}", "{'[5, 5, 0, 4, 3, 1, 0, 0, 11, 9, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.10987}", "{'[5, 5, 0, 4, 3, 1, 0, 0, 11, 9, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.109605}", "{'[5, 5, 0, 4, 3, 1, 0, 0, 11, 9, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.109819}", "{'[5, 5, 0, 4, 3, 1, 0, 0, 11, 9, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.109643}", "{'[5, 5, 0, 4, 3, 1, 0, 0, 11, 9, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.109558}", "{'[5, 5, 0, 4, 3, 1, 0, 0, 11, 9, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.1076}", "{'[5, 5, 0, 4, 3, 1, 0, 0, 11, 9, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.108276}", "{'[5, 5, 0, 4, 3, 1, 0, 0, 11, 9, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.109446}", "{'[5, 5, 0, 4, 3, 1, 0, 0, 11, 9, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.109565}", "{'[5, 5, 0, 4, 3, 1, 0, 0, 11, 9, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.109489}", "{'[5, 5, 0, 4, 3, 1, 0, 0, 11, 9, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.109542}", "{'[5, 5, 0, 4, 3, 1, 0, 0, 11, 9, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.110179}", "{'[5, 5, 0, 4, 3, 1, 0, 0, 11, 9, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.109625}", "{'[5, 5, 0, 4, 3, 1, 0, 0, 11, 9, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.109624}", "{'[5, 5, 0, 4, 3, 1, 0, 0, 11, 9, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.109702}", "{'[5, 5, 0, 4, 3, 1, 0, 0, 11, 9, 7, 0, 0, 0, 1, 0, 0, 0]' : 0.110232}"]
returning from 'run': {'[5, 5, 0, 4, 3, 1, 0, 0, 11, 9, 7, 0, 0, 0, 1, 0, 0, 0]': ([0.124163, 0.124216, 0.124196, 0.118962, 0.109594, 0.109555, 0.109771, 0.109863, 0.109549, 0.1096, 0.107001, 0.108463, 0.109484, 0.109564, 0.10987, 0.109605, 0.109819, 0.109643, 0.109558, 0.1076, 0.108276, 0.109446, 0.109565, 0.109489, 0.109542, 0.110179, 0.109625, 0.109624, 0.109702, 0.110232], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 5, 0, 4, 3, 1, 0, 0, 11, 9, 7, 0, 0, 0, 1, 0, 0, 0]': ([0.124163, 0.124216, 0.124196, 0.118962, 0.109594, 0.109555, 0.109771, 0.109863, 0.109549, 0.1096, 0.107001, 0.108463, 0.109484, 0.109564, 0.10987, 0.109605, 0.109819, 0.109643, 0.109558, 0.1076, 0.108276, 0.109446, 0.109565, 0.109489, 0.109542, 0.110179, 0.109625, 0.109624, 0.109702, 0.110232], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	34
        Max loop nest depth: 	6
        Additions: 		932
        Multiplications: 	400
        Divisions: 		0
        Logical: 		0
        Reads: 			1916
        Writes: 		351
        Comparisons:		34
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest43.exe __orio_perftest43.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest43.exe  
Program Test Output: 
{'[1, 3, 6, 6, 0, 6, 0, 1, 2, 6, 22, 0, 0, 0, 0, 1, 1, 1]' : 0.176186}
{'[1, 3, 6, 6, 0, 6, 0, 1, 2, 6, 22, 0, 0, 0, 0, 1, 1, 1]' : 0.176128}
{'[1, 3, 6, 6, 0, 6, 0, 1, 2, 6, 22, 0, 0, 0, 0, 1, 1, 1]' : 0.164492}
{'[1, 3, 6, 6, 0, 6, 0, 1, 2, 6, 22, 0, 0, 0, 0, 1, 1, 1]' : 0.151995}
{'[1, 3, 6, 6, 0, 6, 0, 1, 2, 6, 22, 0, 0, 0, 0, 1, 1, 1]' : 0.151979}
{'[1, 3, 6, 6, 0, 6, 0, 1, 2, 6, 22, 0, 0, 0, 0, 1, 1, 1]' : 0.152323}
{'[1, 3, 6, 6, 0, 6, 0, 1, 2, 6, 22, 0, 0, 0, 0, 1, 1, 1]' : 0.152374}
{'[1, 3, 6, 6, 0, 6, 0, 1, 2, 6, 22, 0, 0, 0, 0, 1, 1, 1]' : 0.152266}
{'[1, 3, 6, 6, 0, 6, 0, 1, 2, 6, 22, 0, 0, 0, 0, 1, 1, 1]' : 0.152091}
{'[1, 3, 6, 6, 0, 6, 0, 1, 2, 6, 22, 0, 0, 0, 0, 1, 1, 1]' : 0.152247}
{'[1, 3, 6, 6, 0, 6, 0, 1, 2, 6, 22, 0, 0, 0, 0, 1, 1, 1]' : 0.152244}
{'[1, 3, 6, 6, 0, 6, 0, 1, 2, 6, 22, 0, 0, 0, 0, 1, 1, 1]' : 0.152124}
{'[1, 3, 6, 6, 0, 6, 0, 1, 2, 6, 22, 0, 0, 0, 0, 1, 1, 1]' : 0.150775}
{'[1, 3, 6, 6, 0, 6, 0, 1, 2, 6, 22, 0, 0, 0, 0, 1, 1, 1]' : 0.147786}
{'[1, 3, 6, 6, 0, 6, 0, 1, 2, 6, 22, 0, 0, 0, 0, 1, 1, 1]' : 0.147315}
{'[1, 3, 6, 6, 0, 6, 0, 1, 2, 6, 22, 0, 0, 0, 0, 1, 1, 1]' : 0.1475}
{'[1, 3, 6, 6, 0, 6, 0, 1, 2, 6, 22, 0, 0, 0, 0, 1, 1, 1]' : 0.147837}
{'[1, 3, 6, 6, 0, 6, 0, 1, 2, 6, 22, 0, 0, 0, 0, 1, 1, 1]' : 0.154158}
{'[1, 3, 6, 6, 0, 6, 0, 1, 2, 6, 22, 0, 0, 0, 0, 1, 1, 1]' : 0.147654}
{'[1, 3, 6, 6, 0, 6, 0, 1, 2, 6, 22, 0, 0, 0, 0, 1, 1, 1]' : 0.14739}
{'[1, 3, 6, 6, 0, 6, 0, 1, 2, 6, 22, 0, 0, 0, 0, 1, 1, 1]' : 0.151836}
{'[1, 3, 6, 6, 0, 6, 0, 1, 2, 6, 22, 0, 0, 0, 0, 1, 1, 1]' : 0.156275}
{'[1, 3, 6, 6, 0, 6, 0, 1, 2, 6, 22, 0, 0, 0, 0, 1, 1, 1]' : 0.156347}
{'[1, 3, 6, 6, 0, 6, 0, 1, 2, 6, 22, 0, 0, 0, 0, 1, 1, 1]' : 0.156477}
{'[1, 3, 6, 6, 0, 6, 0, 1, 2, 6, 22, 0, 0, 0, 0, 1, 1, 1]' : 0.152577}
{'[1, 3, 6, 6, 0, 6, 0, 1, 2, 6, 22, 0, 0, 0, 0, 1, 1, 1]' : 0.152113}
{'[1, 3, 6, 6, 0, 6, 0, 1, 2, 6, 22, 0, 0, 0, 0, 1, 1, 1]' : 0.152182}
{'[1, 3, 6, 6, 0, 6, 0, 1, 2, 6, 22, 0, 0, 0, 0, 1, 1, 1]' : 0.156445}
{'[1, 3, 6, 6, 0, 6, 0, 1, 2, 6, 22, 0, 0, 0, 0, 1, 1, 1]' : 0.156161}
{'[1, 3, 6, 6, 0, 6, 0, 1, 2, 6, 22, 0, 0, 0, 0, 1, 1, 1]' : 0.14851}

out:
 ["{'[1, 3, 6, 6, 0, 6, 0, 1, 2, 6, 22, 0, 0, 0, 0, 1, 1, 1]' : 0.176186}", "{'[1, 3, 6, 6, 0, 6, 0, 1, 2, 6, 22, 0, 0, 0, 0, 1, 1, 1]' : 0.176128}", "{'[1, 3, 6, 6, 0, 6, 0, 1, 2, 6, 22, 0, 0, 0, 0, 1, 1, 1]' : 0.164492}", "{'[1, 3, 6, 6, 0, 6, 0, 1, 2, 6, 22, 0, 0, 0, 0, 1, 1, 1]' : 0.151995}", "{'[1, 3, 6, 6, 0, 6, 0, 1, 2, 6, 22, 0, 0, 0, 0, 1, 1, 1]' : 0.151979}", "{'[1, 3, 6, 6, 0, 6, 0, 1, 2, 6, 22, 0, 0, 0, 0, 1, 1, 1]' : 0.152323}", "{'[1, 3, 6, 6, 0, 6, 0, 1, 2, 6, 22, 0, 0, 0, 0, 1, 1, 1]' : 0.152374}", "{'[1, 3, 6, 6, 0, 6, 0, 1, 2, 6, 22, 0, 0, 0, 0, 1, 1, 1]' : 0.152266}", "{'[1, 3, 6, 6, 0, 6, 0, 1, 2, 6, 22, 0, 0, 0, 0, 1, 1, 1]' : 0.152091}", "{'[1, 3, 6, 6, 0, 6, 0, 1, 2, 6, 22, 0, 0, 0, 0, 1, 1, 1]' : 0.152247}", "{'[1, 3, 6, 6, 0, 6, 0, 1, 2, 6, 22, 0, 0, 0, 0, 1, 1, 1]' : 0.152244}", "{'[1, 3, 6, 6, 0, 6, 0, 1, 2, 6, 22, 0, 0, 0, 0, 1, 1, 1]' : 0.152124}", "{'[1, 3, 6, 6, 0, 6, 0, 1, 2, 6, 22, 0, 0, 0, 0, 1, 1, 1]' : 0.150775}", "{'[1, 3, 6, 6, 0, 6, 0, 1, 2, 6, 22, 0, 0, 0, 0, 1, 1, 1]' : 0.147786}", "{'[1, 3, 6, 6, 0, 6, 0, 1, 2, 6, 22, 0, 0, 0, 0, 1, 1, 1]' : 0.147315}", "{'[1, 3, 6, 6, 0, 6, 0, 1, 2, 6, 22, 0, 0, 0, 0, 1, 1, 1]' : 0.1475}", "{'[1, 3, 6, 6, 0, 6, 0, 1, 2, 6, 22, 0, 0, 0, 0, 1, 1, 1]' : 0.147837}", "{'[1, 3, 6, 6, 0, 6, 0, 1, 2, 6, 22, 0, 0, 0, 0, 1, 1, 1]' : 0.154158}", "{'[1, 3, 6, 6, 0, 6, 0, 1, 2, 6, 22, 0, 0, 0, 0, 1, 1, 1]' : 0.147654}", "{'[1, 3, 6, 6, 0, 6, 0, 1, 2, 6, 22, 0, 0, 0, 0, 1, 1, 1]' : 0.14739}", "{'[1, 3, 6, 6, 0, 6, 0, 1, 2, 6, 22, 0, 0, 0, 0, 1, 1, 1]' : 0.151836}", "{'[1, 3, 6, 6, 0, 6, 0, 1, 2, 6, 22, 0, 0, 0, 0, 1, 1, 1]' : 0.156275}", "{'[1, 3, 6, 6, 0, 6, 0, 1, 2, 6, 22, 0, 0, 0, 0, 1, 1, 1]' : 0.156347}", "{'[1, 3, 6, 6, 0, 6, 0, 1, 2, 6, 22, 0, 0, 0, 0, 1, 1, 1]' : 0.156477}", "{'[1, 3, 6, 6, 0, 6, 0, 1, 2, 6, 22, 0, 0, 0, 0, 1, 1, 1]' : 0.152577}", "{'[1, 3, 6, 6, 0, 6, 0, 1, 2, 6, 22, 0, 0, 0, 0, 1, 1, 1]' : 0.152113}", "{'[1, 3, 6, 6, 0, 6, 0, 1, 2, 6, 22, 0, 0, 0, 0, 1, 1, 1]' : 0.152182}", "{'[1, 3, 6, 6, 0, 6, 0, 1, 2, 6, 22, 0, 0, 0, 0, 1, 1, 1]' : 0.156445}", "{'[1, 3, 6, 6, 0, 6, 0, 1, 2, 6, 22, 0, 0, 0, 0, 1, 1, 1]' : 0.156161}", "{'[1, 3, 6, 6, 0, 6, 0, 1, 2, 6, 22, 0, 0, 0, 0, 1, 1, 1]' : 0.14851}"]
returning from 'run': {'[1, 3, 6, 6, 0, 6, 0, 1, 2, 6, 22, 0, 0, 0, 0, 1, 1, 1]': ([0.176186, 0.176128, 0.164492, 0.151995, 0.151979, 0.152323, 0.152374, 0.152266, 0.152091, 0.152247, 0.152244, 0.152124, 0.150775, 0.147786, 0.147315, 0.1475, 0.147837, 0.154158, 0.147654, 0.14739, 0.151836, 0.156275, 0.156347, 0.156477, 0.152577, 0.152113, 0.152182, 0.156445, 0.156161, 0.14851], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 3, 6, 6, 0, 6, 0, 1, 2, 6, 22, 0, 0, 0, 0, 1, 1, 1]': ([0.176186, 0.176128, 0.164492, 0.151995, 0.151979, 0.152323, 0.152374, 0.152266, 0.152091, 0.152247, 0.152244, 0.152124, 0.150775, 0.147786, 0.147315, 0.1475, 0.147837, 0.154158, 0.147654, 0.14739, 0.151836, 0.156275, 0.156347, 0.156477, 0.152577, 0.152113, 0.152182, 0.156445, 0.156161, 0.14851], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = kkk
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	5
        Additions: 		9836
        Multiplications: 	2376
        Divisions: 		0
        Logical: 		0
        Reads: 			14006
        Writes: 		1260
        Comparisons:		20
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest44.exe __orio_perftest44.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest44.exe  
Program Test Output: 
{'[1, 0, 4, 3, 0, 2, 1, 1, 9, 0, 5, 27, 2, 0, 0, 0, 1, 1]' : 0.2019}
{'[1, 0, 4, 3, 0, 2, 1, 1, 9, 0, 5, 27, 2, 0, 0, 0, 1, 1]' : 0.204471}
{'[1, 0, 4, 3, 0, 2, 1, 1, 9, 0, 5, 27, 2, 0, 0, 0, 1, 1]' : 0.204438}
{'[1, 0, 4, 3, 0, 2, 1, 1, 9, 0, 5, 27, 2, 0, 0, 0, 1, 1]' : 0.204501}
{'[1, 0, 4, 3, 0, 2, 1, 1, 9, 0, 5, 27, 2, 0, 0, 0, 1, 1]' : 0.204473}
{'[1, 0, 4, 3, 0, 2, 1, 1, 9, 0, 5, 27, 2, 0, 0, 0, 1, 1]' : 0.202301}
{'[1, 0, 4, 3, 0, 2, 1, 1, 9, 0, 5, 27, 2, 0, 0, 0, 1, 1]' : 0.204493}
{'[1, 0, 4, 3, 0, 2, 1, 1, 9, 0, 5, 27, 2, 0, 0, 0, 1, 1]' : 0.204608}
{'[1, 0, 4, 3, 0, 2, 1, 1, 9, 0, 5, 27, 2, 0, 0, 0, 1, 1]' : 0.204445}
{'[1, 0, 4, 3, 0, 2, 1, 1, 9, 0, 5, 27, 2, 0, 0, 0, 1, 1]' : 0.204449}
{'[1, 0, 4, 3, 0, 2, 1, 1, 9, 0, 5, 27, 2, 0, 0, 0, 1, 1]' : 0.204467}
{'[1, 0, 4, 3, 0, 2, 1, 1, 9, 0, 5, 27, 2, 0, 0, 0, 1, 1]' : 0.204467}
{'[1, 0, 4, 3, 0, 2, 1, 1, 9, 0, 5, 27, 2, 0, 0, 0, 1, 1]' : 0.204439}
{'[1, 0, 4, 3, 0, 2, 1, 1, 9, 0, 5, 27, 2, 0, 0, 0, 1, 1]' : 0.204465}
{'[1, 0, 4, 3, 0, 2, 1, 1, 9, 0, 5, 27, 2, 0, 0, 0, 1, 1]' : 0.204447}
{'[1, 0, 4, 3, 0, 2, 1, 1, 9, 0, 5, 27, 2, 0, 0, 0, 1, 1]' : 0.204486}
{'[1, 0, 4, 3, 0, 2, 1, 1, 9, 0, 5, 27, 2, 0, 0, 0, 1, 1]' : 0.204447}
{'[1, 0, 4, 3, 0, 2, 1, 1, 9, 0, 5, 27, 2, 0, 0, 0, 1, 1]' : 0.204777}
{'[1, 0, 4, 3, 0, 2, 1, 1, 9, 0, 5, 27, 2, 0, 0, 0, 1, 1]' : 0.204417}
{'[1, 0, 4, 3, 0, 2, 1, 1, 9, 0, 5, 27, 2, 0, 0, 0, 1, 1]' : 0.204466}
{'[1, 0, 4, 3, 0, 2, 1, 1, 9, 0, 5, 27, 2, 0, 0, 0, 1, 1]' : 0.204517}
{'[1, 0, 4, 3, 0, 2, 1, 1, 9, 0, 5, 27, 2, 0, 0, 0, 1, 1]' : 0.204446}
{'[1, 0, 4, 3, 0, 2, 1, 1, 9, 0, 5, 27, 2, 0, 0, 0, 1, 1]' : 0.204515}
{'[1, 0, 4, 3, 0, 2, 1, 1, 9, 0, 5, 27, 2, 0, 0, 0, 1, 1]' : 0.20025}
{'[1, 0, 4, 3, 0, 2, 1, 1, 9, 0, 5, 27, 2, 0, 0, 0, 1, 1]' : 0.196457}
{'[1, 0, 4, 3, 0, 2, 1, 1, 9, 0, 5, 27, 2, 0, 0, 0, 1, 1]' : 0.198451}
{'[1, 0, 4, 3, 0, 2, 1, 1, 9, 0, 5, 27, 2, 0, 0, 0, 1, 1]' : 0.199282}
{'[1, 0, 4, 3, 0, 2, 1, 1, 9, 0, 5, 27, 2, 0, 0, 0, 1, 1]' : 0.201697}
{'[1, 0, 4, 3, 0, 2, 1, 1, 9, 0, 5, 27, 2, 0, 0, 0, 1, 1]' : 0.204403}
{'[1, 0, 4, 3, 0, 2, 1, 1, 9, 0, 5, 27, 2, 0, 0, 0, 1, 1]' : 0.20446}

out:
 ["{'[1, 0, 4, 3, 0, 2, 1, 1, 9, 0, 5, 27, 2, 0, 0, 0, 1, 1]' : 0.2019}", "{'[1, 0, 4, 3, 0, 2, 1, 1, 9, 0, 5, 27, 2, 0, 0, 0, 1, 1]' : 0.204471}", "{'[1, 0, 4, 3, 0, 2, 1, 1, 9, 0, 5, 27, 2, 0, 0, 0, 1, 1]' : 0.204438}", "{'[1, 0, 4, 3, 0, 2, 1, 1, 9, 0, 5, 27, 2, 0, 0, 0, 1, 1]' : 0.204501}", "{'[1, 0, 4, 3, 0, 2, 1, 1, 9, 0, 5, 27, 2, 0, 0, 0, 1, 1]' : 0.204473}", "{'[1, 0, 4, 3, 0, 2, 1, 1, 9, 0, 5, 27, 2, 0, 0, 0, 1, 1]' : 0.202301}", "{'[1, 0, 4, 3, 0, 2, 1, 1, 9, 0, 5, 27, 2, 0, 0, 0, 1, 1]' : 0.204493}", "{'[1, 0, 4, 3, 0, 2, 1, 1, 9, 0, 5, 27, 2, 0, 0, 0, 1, 1]' : 0.204608}", "{'[1, 0, 4, 3, 0, 2, 1, 1, 9, 0, 5, 27, 2, 0, 0, 0, 1, 1]' : 0.204445}", "{'[1, 0, 4, 3, 0, 2, 1, 1, 9, 0, 5, 27, 2, 0, 0, 0, 1, 1]' : 0.204449}", "{'[1, 0, 4, 3, 0, 2, 1, 1, 9, 0, 5, 27, 2, 0, 0, 0, 1, 1]' : 0.204467}", "{'[1, 0, 4, 3, 0, 2, 1, 1, 9, 0, 5, 27, 2, 0, 0, 0, 1, 1]' : 0.204467}", "{'[1, 0, 4, 3, 0, 2, 1, 1, 9, 0, 5, 27, 2, 0, 0, 0, 1, 1]' : 0.204439}", "{'[1, 0, 4, 3, 0, 2, 1, 1, 9, 0, 5, 27, 2, 0, 0, 0, 1, 1]' : 0.204465}", "{'[1, 0, 4, 3, 0, 2, 1, 1, 9, 0, 5, 27, 2, 0, 0, 0, 1, 1]' : 0.204447}", "{'[1, 0, 4, 3, 0, 2, 1, 1, 9, 0, 5, 27, 2, 0, 0, 0, 1, 1]' : 0.204486}", "{'[1, 0, 4, 3, 0, 2, 1, 1, 9, 0, 5, 27, 2, 0, 0, 0, 1, 1]' : 0.204447}", "{'[1, 0, 4, 3, 0, 2, 1, 1, 9, 0, 5, 27, 2, 0, 0, 0, 1, 1]' : 0.204777}", "{'[1, 0, 4, 3, 0, 2, 1, 1, 9, 0, 5, 27, 2, 0, 0, 0, 1, 1]' : 0.204417}", "{'[1, 0, 4, 3, 0, 2, 1, 1, 9, 0, 5, 27, 2, 0, 0, 0, 1, 1]' : 0.204466}", "{'[1, 0, 4, 3, 0, 2, 1, 1, 9, 0, 5, 27, 2, 0, 0, 0, 1, 1]' : 0.204517}", "{'[1, 0, 4, 3, 0, 2, 1, 1, 9, 0, 5, 27, 2, 0, 0, 0, 1, 1]' : 0.204446}", "{'[1, 0, 4, 3, 0, 2, 1, 1, 9, 0, 5, 27, 2, 0, 0, 0, 1, 1]' : 0.204515}", "{'[1, 0, 4, 3, 0, 2, 1, 1, 9, 0, 5, 27, 2, 0, 0, 0, 1, 1]' : 0.20025}", "{'[1, 0, 4, 3, 0, 2, 1, 1, 9, 0, 5, 27, 2, 0, 0, 0, 1, 1]' : 0.196457}", "{'[1, 0, 4, 3, 0, 2, 1, 1, 9, 0, 5, 27, 2, 0, 0, 0, 1, 1]' : 0.198451}", "{'[1, 0, 4, 3, 0, 2, 1, 1, 9, 0, 5, 27, 2, 0, 0, 0, 1, 1]' : 0.199282}", "{'[1, 0, 4, 3, 0, 2, 1, 1, 9, 0, 5, 27, 2, 0, 0, 0, 1, 1]' : 0.201697}", "{'[1, 0, 4, 3, 0, 2, 1, 1, 9, 0, 5, 27, 2, 0, 0, 0, 1, 1]' : 0.204403}", "{'[1, 0, 4, 3, 0, 2, 1, 1, 9, 0, 5, 27, 2, 0, 0, 0, 1, 1]' : 0.20446}"]
returning from 'run': {'[1, 0, 4, 3, 0, 2, 1, 1, 9, 0, 5, 27, 2, 0, 0, 0, 1, 1]': ([0.2019, 0.204471, 0.204438, 0.204501, 0.204473, 0.202301, 0.204493, 0.204608, 0.204445, 0.204449, 0.204467, 0.204467, 0.204439, 0.204465, 0.204447, 0.204486, 0.204447, 0.204777, 0.204417, 0.204466, 0.204517, 0.204446, 0.204515, 0.20025, 0.196457, 0.198451, 0.199282, 0.201697, 0.204403, 0.20446], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 4, 3, 0, 2, 1, 1, 9, 0, 5, 27, 2, 0, 0, 0, 1, 1]': ([0.2019, 0.204471, 0.204438, 0.204501, 0.204473, 0.202301, 0.204493, 0.204608, 0.204445, 0.204449, 0.204467, 0.204467, 0.204439, 0.204465, 0.204447, 0.204486, 0.204447, 0.204777, 0.204417, 0.204466, 0.204517, 0.204446, 0.204515, 0.20025, 0.196457, 0.198451, 0.199282, 0.201697, 0.204403, 0.20446], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	4
        Additions: 		158
        Multiplications: 	32
        Divisions: 		0
        Logical: 		0
        Reads: 			358
        Writes: 		93
        Comparisons:		16
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest45.exe __orio_perftest45.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest45.exe  
Program Test Output: 
{'[0, 0, 2, 0, 2, 5, 0, 0, 28, 2, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.138925}
{'[0, 0, 2, 0, 2, 5, 0, 0, 28, 2, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.13812}
{'[0, 0, 2, 0, 2, 5, 0, 0, 28, 2, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.119903}
{'[0, 0, 2, 0, 2, 5, 0, 0, 28, 2, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.118022}
{'[0, 0, 2, 0, 2, 5, 0, 0, 28, 2, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.118273}
{'[0, 0, 2, 0, 2, 5, 0, 0, 28, 2, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.118071}
{'[0, 0, 2, 0, 2, 5, 0, 0, 28, 2, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.117999}
{'[0, 0, 2, 0, 2, 5, 0, 0, 28, 2, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.118022}
{'[0, 0, 2, 0, 2, 5, 0, 0, 28, 2, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.118025}
{'[0, 0, 2, 0, 2, 5, 0, 0, 28, 2, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.118064}
{'[0, 0, 2, 0, 2, 5, 0, 0, 28, 2, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.118036}
{'[0, 0, 2, 0, 2, 5, 0, 0, 28, 2, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.118048}
{'[0, 0, 2, 0, 2, 5, 0, 0, 28, 2, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.118164}
{'[0, 0, 2, 0, 2, 5, 0, 0, 28, 2, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.11825}
{'[0, 0, 2, 0, 2, 5, 0, 0, 28, 2, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.118021}
{'[0, 0, 2, 0, 2, 5, 0, 0, 28, 2, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.118075}
{'[0, 0, 2, 0, 2, 5, 0, 0, 28, 2, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.118025}
{'[0, 0, 2, 0, 2, 5, 0, 0, 28, 2, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.118248}
{'[0, 0, 2, 0, 2, 5, 0, 0, 28, 2, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.118041}
{'[0, 0, 2, 0, 2, 5, 0, 0, 28, 2, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.118048}
{'[0, 0, 2, 0, 2, 5, 0, 0, 28, 2, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.118106}
{'[0, 0, 2, 0, 2, 5, 0, 0, 28, 2, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.117982}
{'[0, 0, 2, 0, 2, 5, 0, 0, 28, 2, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.11804}
{'[0, 0, 2, 0, 2, 5, 0, 0, 28, 2, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.118025}
{'[0, 0, 2, 0, 2, 5, 0, 0, 28, 2, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.118381}
{'[0, 0, 2, 0, 2, 5, 0, 0, 28, 2, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.118028}
{'[0, 0, 2, 0, 2, 5, 0, 0, 28, 2, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.118063}
{'[0, 0, 2, 0, 2, 5, 0, 0, 28, 2, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.11812}
{'[0, 0, 2, 0, 2, 5, 0, 0, 28, 2, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.118037}
{'[0, 0, 2, 0, 2, 5, 0, 0, 28, 2, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.11826}

out:
 ["{'[0, 0, 2, 0, 2, 5, 0, 0, 28, 2, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.138925}", "{'[0, 0, 2, 0, 2, 5, 0, 0, 28, 2, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.13812}", "{'[0, 0, 2, 0, 2, 5, 0, 0, 28, 2, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.119903}", "{'[0, 0, 2, 0, 2, 5, 0, 0, 28, 2, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.118022}", "{'[0, 0, 2, 0, 2, 5, 0, 0, 28, 2, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.118273}", "{'[0, 0, 2, 0, 2, 5, 0, 0, 28, 2, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.118071}", "{'[0, 0, 2, 0, 2, 5, 0, 0, 28, 2, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.117999}", "{'[0, 0, 2, 0, 2, 5, 0, 0, 28, 2, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.118022}", "{'[0, 0, 2, 0, 2, 5, 0, 0, 28, 2, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.118025}", "{'[0, 0, 2, 0, 2, 5, 0, 0, 28, 2, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.118064}", "{'[0, 0, 2, 0, 2, 5, 0, 0, 28, 2, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.118036}", "{'[0, 0, 2, 0, 2, 5, 0, 0, 28, 2, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.118048}", "{'[0, 0, 2, 0, 2, 5, 0, 0, 28, 2, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.118164}", "{'[0, 0, 2, 0, 2, 5, 0, 0, 28, 2, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.11825}", "{'[0, 0, 2, 0, 2, 5, 0, 0, 28, 2, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.118021}", "{'[0, 0, 2, 0, 2, 5, 0, 0, 28, 2, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.118075}", "{'[0, 0, 2, 0, 2, 5, 0, 0, 28, 2, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.118025}", "{'[0, 0, 2, 0, 2, 5, 0, 0, 28, 2, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.118248}", "{'[0, 0, 2, 0, 2, 5, 0, 0, 28, 2, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.118041}", "{'[0, 0, 2, 0, 2, 5, 0, 0, 28, 2, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.118048}", "{'[0, 0, 2, 0, 2, 5, 0, 0, 28, 2, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.118106}", "{'[0, 0, 2, 0, 2, 5, 0, 0, 28, 2, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.117982}", "{'[0, 0, 2, 0, 2, 5, 0, 0, 28, 2, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.11804}", "{'[0, 0, 2, 0, 2, 5, 0, 0, 28, 2, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.118025}", "{'[0, 0, 2, 0, 2, 5, 0, 0, 28, 2, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.118381}", "{'[0, 0, 2, 0, 2, 5, 0, 0, 28, 2, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.118028}", "{'[0, 0, 2, 0, 2, 5, 0, 0, 28, 2, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.118063}", "{'[0, 0, 2, 0, 2, 5, 0, 0, 28, 2, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.11812}", "{'[0, 0, 2, 0, 2, 5, 0, 0, 28, 2, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.118037}", "{'[0, 0, 2, 0, 2, 5, 0, 0, 28, 2, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.11826}"]
returning from 'run': {'[0, 0, 2, 0, 2, 5, 0, 0, 28, 2, 0, 1, 0, 0, 0, 0, 1, 1]': ([0.138925, 0.13812, 0.119903, 0.118022, 0.118273, 0.118071, 0.117999, 0.118022, 0.118025, 0.118064, 0.118036, 0.118048, 0.118164, 0.11825, 0.118021, 0.118075, 0.118025, 0.118248, 0.118041, 0.118048, 0.118106, 0.117982, 0.11804, 0.118025, 0.118381, 0.118028, 0.118063, 0.11812, 0.118037, 0.11826], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 2, 0, 2, 5, 0, 0, 28, 2, 0, 1, 0, 0, 0, 0, 1, 1]': ([0.138925, 0.13812, 0.119903, 0.118022, 0.118273, 0.118071, 0.117999, 0.118022, 0.118025, 0.118064, 0.118036, 0.118048, 0.118164, 0.11825, 0.118021, 0.118075, 0.118025, 0.118248, 0.118041, 0.118048, 0.118106, 0.117982, 0.11804, 0.118025, 0.118381, 0.118028, 0.118063, 0.11812, 0.118037, 0.11826], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	5
        Additions: 		39
        Multiplications: 	4
        Divisions: 		0
        Logical: 		0
        Reads: 			111
        Writes: 		34
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest46.exe __orio_perftest46.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest46.exe  
Program Test Output: 
{'[6, 1, 4, 0, 3, 4, 1, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.244327}
{'[6, 1, 4, 0, 3, 4, 1, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.221835}
{'[6, 1, 4, 0, 3, 4, 1, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.210592}
{'[6, 1, 4, 0, 3, 4, 1, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.21085}
{'[6, 1, 4, 0, 3, 4, 1, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.215913}
{'[6, 1, 4, 0, 3, 4, 1, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.217759}
{'[6, 1, 4, 0, 3, 4, 1, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.217731}
{'[6, 1, 4, 0, 3, 4, 1, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.21778}
{'[6, 1, 4, 0, 3, 4, 1, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.215308}
{'[6, 1, 4, 0, 3, 4, 1, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.217757}
{'[6, 1, 4, 0, 3, 4, 1, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.217155}
{'[6, 1, 4, 0, 3, 4, 1, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.21662}
{'[6, 1, 4, 0, 3, 4, 1, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.21777}
{'[6, 1, 4, 0, 3, 4, 1, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.217848}
{'[6, 1, 4, 0, 3, 4, 1, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.216891}
{'[6, 1, 4, 0, 3, 4, 1, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.212128}
{'[6, 1, 4, 0, 3, 4, 1, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.217731}
{'[6, 1, 4, 0, 3, 4, 1, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.212791}
{'[6, 1, 4, 0, 3, 4, 1, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.217041}
{'[6, 1, 4, 0, 3, 4, 1, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.21806}
{'[6, 1, 4, 0, 3, 4, 1, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.21779}
{'[6, 1, 4, 0, 3, 4, 1, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.217138}
{'[6, 1, 4, 0, 3, 4, 1, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.212849}
{'[6, 1, 4, 0, 3, 4, 1, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.215967}
{'[6, 1, 4, 0, 3, 4, 1, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.21073}
{'[6, 1, 4, 0, 3, 4, 1, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.21747}
{'[6, 1, 4, 0, 3, 4, 1, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.214911}
{'[6, 1, 4, 0, 3, 4, 1, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.215386}
{'[6, 1, 4, 0, 3, 4, 1, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.217903}
{'[6, 1, 4, 0, 3, 4, 1, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.217814}

out:
 ["{'[6, 1, 4, 0, 3, 4, 1, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.244327}", "{'[6, 1, 4, 0, 3, 4, 1, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.221835}", "{'[6, 1, 4, 0, 3, 4, 1, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.210592}", "{'[6, 1, 4, 0, 3, 4, 1, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.21085}", "{'[6, 1, 4, 0, 3, 4, 1, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.215913}", "{'[6, 1, 4, 0, 3, 4, 1, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.217759}", "{'[6, 1, 4, 0, 3, 4, 1, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.217731}", "{'[6, 1, 4, 0, 3, 4, 1, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.21778}", "{'[6, 1, 4, 0, 3, 4, 1, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.215308}", "{'[6, 1, 4, 0, 3, 4, 1, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.217757}", "{'[6, 1, 4, 0, 3, 4, 1, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.217155}", "{'[6, 1, 4, 0, 3, 4, 1, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.21662}", "{'[6, 1, 4, 0, 3, 4, 1, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.21777}", "{'[6, 1, 4, 0, 3, 4, 1, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.217848}", "{'[6, 1, 4, 0, 3, 4, 1, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.216891}", "{'[6, 1, 4, 0, 3, 4, 1, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.212128}", "{'[6, 1, 4, 0, 3, 4, 1, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.217731}", "{'[6, 1, 4, 0, 3, 4, 1, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.212791}", "{'[6, 1, 4, 0, 3, 4, 1, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.217041}", "{'[6, 1, 4, 0, 3, 4, 1, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.21806}", "{'[6, 1, 4, 0, 3, 4, 1, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.21779}", "{'[6, 1, 4, 0, 3, 4, 1, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.217138}", "{'[6, 1, 4, 0, 3, 4, 1, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.212849}", "{'[6, 1, 4, 0, 3, 4, 1, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.215967}", "{'[6, 1, 4, 0, 3, 4, 1, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.21073}", "{'[6, 1, 4, 0, 3, 4, 1, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.21747}", "{'[6, 1, 4, 0, 3, 4, 1, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.214911}", "{'[6, 1, 4, 0, 3, 4, 1, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.215386}", "{'[6, 1, 4, 0, 3, 4, 1, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.217903}", "{'[6, 1, 4, 0, 3, 4, 1, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.217814}"]
returning from 'run': {'[6, 1, 4, 0, 3, 4, 1, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0]': ([0.244327, 0.221835, 0.210592, 0.21085, 0.215913, 0.217759, 0.217731, 0.21778, 0.215308, 0.217757, 0.217155, 0.21662, 0.21777, 0.217848, 0.216891, 0.212128, 0.217731, 0.212791, 0.217041, 0.21806, 0.21779, 0.217138, 0.212849, 0.215967, 0.21073, 0.21747, 0.214911, 0.215386, 0.217903, 0.217814], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 1, 4, 0, 3, 4, 1, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0]': ([0.244327, 0.221835, 0.210592, 0.21085, 0.215913, 0.217759, 0.217731, 0.21778, 0.215308, 0.217757, 0.217155, 0.21662, 0.21777, 0.217848, 0.216891, 0.212128, 0.217731, 0.212791, 0.217041, 0.21806, 0.21779, 0.217138, 0.212849, 0.215967, 0.21073, 0.21747, 0.214911, 0.215386, 0.217903, 0.217814], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Complete design, with measurements:
     T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
311     1    1    0    6    5    5       0       1   27  28  29   0    0    0
325     2    1    5    0    6    0       0       0    5   0  29   4    0    2
376     1    0    0    2    3    6       0       0   12   8  10   0    0    1
602     6    2    3    4    2    0       0       1   25   0  12   3    0    0
732     5    2    0    0    0    6       0       1   22   0  12  24    0    2
923     5    0    6    6    5    4       1       0    0  23   0  17    0    0
970     0    6    2    0    0    1       1       0    0  10  25   0    0    1
993     3    2    5    2    3    0       0       0   29   0   0  29    2    0
1019    0    2    0    3    3    4       0       0    0   0  29  29    0    0
1022    0    2    6    3    0    4       1       0   15   4   0   8    1    1
1046    5    0    5    0    6    4       1       0   28  23  28   0    1    0
1331    1    2    3    6    2    1       1       1   22   0  27  29    0    1
1346    2    0    0    3    3    0       1       1    0   0  26   6    2    0
2197    0    5    0    5    6    6       1       0   20   0   0   1    0    1
2410    2    6    3    5    0    6       1       0   29   2   0   4    0    0
2749    3    0    1    2    0    6       1       1    3   0  19   5    1    0
2795    2    1    1    2    6    0       0       1    0   4   3   0    0    0
2910    6    5    0    5    0    0       0       1   19  16   0  27    0    1
3158    6    4    5    0    2    0       0       1   28   8  28   0    1    1
3166    3    5    6    1    0    0       1       0   21  20  27   0    1    0
3240    1    6    0    1    6    1       1       1   28  21   0   2    0    1
3282    1    1    6    6    2    0       0       0    5   0   3   0    0    2
3360    6    4    0    6    0    2       0       0    0  10   0   9    2    0
3439    2    4    2    6    3    1       1       0    1   0  17  14    1    1
3442    6    0    2    4    3    6       0       0    5  15   0   5    2    0
3510    6    1    0    0    4    6       1       1    0  29   0   2    1    1
3586    0    6    6    6    0    0       1       1   16   0   7  17    1    0
3641    3    4    0    0    3    2       0       1    5   2   0  25    1    0
3710    1    1    5    1    2    4       1       1    1  28   0  28    0    0
3736    1    3    3    6    5    4       1       1   22  29   2   0    2    0
3746    2    0    2    6    0    0       0       1    2  21   0  28    1    0
4006    1    0    6    0    6    4       0       1    7  13   0   5    0    0
4142    1    6    6    1    5    5       0       1    0   0   4  29    1    0
4252    1    4    2    0    4    2       0       0    0   0   3   1    0    0
4524    5    5    0    4    3    1       0       0   11   9   7   0    0    0
4554    1    3    6    6    0    6       0       1    2   6  22   0    0    0
4564    1    0    4    3    0    2       1       1    9   0   5  27    2    0
4571    0    0    2    0    2    5       0       0   28   2   0   1    0    0
4578    6    1    4    0    3    4       1       0    2   0   0   0    0    0
     RT_K SCR VEC1 VEC2  cost_mean
311     0   1    0    0 0.24846847
325     0   0    0    0 0.20615993
376     1   1    0    1 0.11987870
602     1   1    0    1 0.19829383
732     0   0    1    1 0.21388813
923     0   1    0    1 0.14379787
970     1   1    0    0 0.11267897
993     0   1    0    1 0.17438463
1019    0   1    1    0 0.15380297
1022    0   0    0    0 0.11434087
1046    1   0    0    1 0.13396817
1331    0   0    0    0 0.25508627
1346    0   0    0    1 0.26871407
2197    1   1    1    1 0.18239727
2410    2   0    0    0 0.16327217
2749    0   1    0    1 0.11190853
2795    0   0    1    1 0.18530960
2910    0   0    0    1 0.10857703
3158    0   0    1    0 0.12313517
3166    0   1    1    1 0.09493670
3240    1   1    1    1 0.22238090
3282    0   1    1    0 0.17954410
3360    0   0    0    1 0.19185650
3439    0   0    0    1 0.12919657
3442    0   1    1    0 0.17673230
3510    0   0    0    0 0.12301660
3586    1   0    1    0 0.11033540
3641    0   1    0    1 0.09981586
3710    1   0    1    1 0.23574340
3736    0   0    1    0 0.29023127
3746    1   1    1    0 0.10177567
4006    0   1    0    0 0.15725340
4142    0   0    0    0 0.11748517
4252    2   1    1    0 0.15925497
4524    1   0    0    0 0.11119187
4554    0   1    1    1 0.15385957
4564    0   0    1    1 0.20344783
4571    0   0    1    1 0.11951407
4578    0   1    0    0 0.21706150

Heteroscedasticity Test p-value: 0.902371955344
Regression Step:                Df   Sum Sq  Mean Sq F value   Pr(>F)    
T1_I             1 0.000783 0.000783   0.969 0.357657    
T1_J             1 0.006333 0.006333   7.840 0.026526 *  
T1_K             1 0.001939 0.001939   2.401 0.165222    
T2_I             1 0.003711 0.003711   4.594 0.069301 .  
T2_J             1 0.009014 0.009014  11.158 0.012414 *  
T2_K             1 0.000440 0.000440   0.545 0.484407    
ACOPY_x          1 0.004021 0.004021   4.978 0.060872 .  
ACOPY_y          1 0.005179 0.005179   6.411 0.039113 *  
U1_I             1 0.002745 0.002745   3.398 0.107808    
U_I              1 0.001692 0.001692   2.094 0.191091    
U_J              1 0.000174 0.000174   0.216 0.656367    
U_K              1 0.000049 0.000049   0.061 0.812372    
RT_I             1 0.000131 0.000131   0.162 0.698916    
RT_J             1 0.000703 0.000703   0.871 0.381798    
RT_K             1 0.000012 0.000012   0.015 0.906461    
SCR              1 0.000294 0.000294   0.364 0.565412    
VEC1             1 0.002176 0.002176   2.694 0.144726    
VEC2             1 0.000634 0.000634   0.784 0.405228    
I(1/(1 + T1_I))  1 0.004107 0.004107   5.085 0.058773 .  
I(1/(1 + T1_J))  1 0.012596 0.012596  15.592 0.005541 ** 
I(1/(1 + T1_K))  1 0.000046 0.000046   0.057 0.818329    
I(1/(1 + T2_I))  1 0.000032 0.000032   0.040 0.846795    
I(1/(1 + T2_J))  1 0.000011 0.000011   0.013 0.911333    
I(1/(1 + T2_K))  1 0.002759 0.002759   3.415 0.107094    
I(1/(1 + U1_I))  1 0.002382 0.002382   2.948 0.129671    
I(1/(1 + U_I))   1 0.002348 0.002348   2.906 0.132007    
I(1/(1 + U_J))   1 0.005721 0.005721   7.082 0.032410 *  
I(1/(1 + U_K))   1 0.001439 0.001439   1.781 0.223765    
I(1/(1 + RT_I))  1 0.024846 0.024846  30.757 0.000864 ***
I(1/(1 + RT_J))  1 0.002030 0.002030   2.513 0.156896    
I(1/(1 + RT_K))  1 0.000322 0.000322   0.398 0.548141    
Residuals        7 0.005655 0.000808                     
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Predicting Best
Generating valid search space of size 4600 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Valid coordinates: 920
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Valid coordinates: 1840
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Tested coordinates: 110000
Valid coordinates: 2760
Tested coordinates: 120000
Tested coordinates: 130000
Tested coordinates: 140000
Valid coordinates: 3680
Tested coordinates: 150000
Tested coordinates: 160000
Tested coordinates: 170000
Tested coordinates: 180000
Valid coordinates: 4600
Valid/Tested configurations: 4600/187819
Generated Search Space:
NULL
Identical predictions (tol = 1e-5): 1
Getting Best from Design
Response: ['cost_mean']
Design Names:  [1] "T1_I"      "T1_J"      "T1_K"      "T2_I"      "T2_J"      "T2_K"     
 [7] "ACOPY_x"   "ACOPY_y"   "U1_I"      "U_I"       "U_J"       "U_K"      
[13] "RT_I"      "RT_J"      "RT_K"      "SCR"       "VEC1"      "VEC2"     
[19] "cost_mean"

Design Response:       cost_mean
311  0.24846847
325  0.20615993
376  0.11987870
602  0.19829383
732  0.21388813
923  0.14379787
970  0.11267897
993  0.17438463
1019 0.15380297
1022 0.11434087
1046 0.13396817
1331 0.25508627
1346 0.26871407
2197 0.18239727
2410 0.16327217
2749 0.11190853
2795 0.18530960
2910 0.10857703
3158 0.12313517
3166 0.09493670
3240 0.22238090
3282 0.17954410
3360 0.19185650
3439 0.12919657
3442 0.17673230
3510 0.12301660
3586 0.11033540
3641 0.09981586
3710 0.23574340
3736 0.29023127
3746 0.10177567
4006 0.15725340
4142 0.11748517
4252 0.15925497
4524 0.11119187
4554 0.15385957
4564 0.20344783
4571 0.11951407
4578 0.21706150

Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Getting fixed variables
Pruning Model
Best Predicted:      T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
1690    4    6    0    0    0    0       1       0    1  22   7   0    1    1
     RT_K SCR VEC1 VEC2
1690    0   1    1    1

Best From Design: [3, 5, 6, 1, 0, 0, 1, 0, 21, 20, 27, 0, 1, 0, 0, 1, 1, 1]
Pruned Factors: ['T1_I', 'T1_K', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Fixed Factors: {'ACOPY_x': 1, 'T2_J': 0, 'T2_I': 0, 'T1_J': 6, 'ACOPY_y': 0}
Length of requested configs: 1
Result was on Database, Returning Now
Starting Point (-O3):
0.16283083333333334
Predicted Best Point:
[4, 6, 0, 0, 0, 0, 1, 0, 1, 22, 7, 0, 1, 1, 0, 1, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	40
        Max loop nest depth: 	4
        Additions: 		1318
        Multiplications: 	576
        Divisions: 		0
        Logical: 		0
        Reads: 			2748
        Writes: 		516
        Comparisons:		40
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest47.exe __orio_perftest47.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest47.exe  
Program Test Output: 
{'[4, 6, 0, 0, 0, 0, 1, 0, 1, 22, 7, 0, 1, 1, 0, 1, 1, 1]' : 0.101835}
{'[4, 6, 0, 0, 0, 0, 1, 0, 1, 22, 7, 0, 1, 1, 0, 1, 1, 1]' : 0.101704}
{'[4, 6, 0, 0, 0, 0, 1, 0, 1, 22, 7, 0, 1, 1, 0, 1, 1, 1]' : 0.10142}
{'[4, 6, 0, 0, 0, 0, 1, 0, 1, 22, 7, 0, 1, 1, 0, 1, 1, 1]' : 0.0901821}
{'[4, 6, 0, 0, 0, 0, 1, 0, 1, 22, 7, 0, 1, 1, 0, 1, 1, 1]' : 0.0878692}
{'[4, 6, 0, 0, 0, 0, 1, 0, 1, 22, 7, 0, 1, 1, 0, 1, 1, 1]' : 0.087903}
{'[4, 6, 0, 0, 0, 0, 1, 0, 1, 22, 7, 0, 1, 1, 0, 1, 1, 1]' : 0.0880311}
{'[4, 6, 0, 0, 0, 0, 1, 0, 1, 22, 7, 0, 1, 1, 0, 1, 1, 1]' : 0.087919}
{'[4, 6, 0, 0, 0, 0, 1, 0, 1, 22, 7, 0, 1, 1, 0, 1, 1, 1]' : 0.0878341}
{'[4, 6, 0, 0, 0, 0, 1, 0, 1, 22, 7, 0, 1, 1, 0, 1, 1, 1]' : 0.0878801}
{'[4, 6, 0, 0, 0, 0, 1, 0, 1, 22, 7, 0, 1, 1, 0, 1, 1, 1]' : 0.0878482}
{'[4, 6, 0, 0, 0, 0, 1, 0, 1, 22, 7, 0, 1, 1, 0, 1, 1, 1]' : 0.0879221}
{'[4, 6, 0, 0, 0, 0, 1, 0, 1, 22, 7, 0, 1, 1, 0, 1, 1, 1]' : 0.087929}
{'[4, 6, 0, 0, 0, 0, 1, 0, 1, 22, 7, 0, 1, 1, 0, 1, 1, 1]' : 0.0878451}
{'[4, 6, 0, 0, 0, 0, 1, 0, 1, 22, 7, 0, 1, 1, 0, 1, 1, 1]' : 0.087954}
{'[4, 6, 0, 0, 0, 0, 1, 0, 1, 22, 7, 0, 1, 1, 0, 1, 1, 1]' : 0.0878999}
{'[4, 6, 0, 0, 0, 0, 1, 0, 1, 22, 7, 0, 1, 1, 0, 1, 1, 1]' : 0.0883229}
{'[4, 6, 0, 0, 0, 0, 1, 0, 1, 22, 7, 0, 1, 1, 0, 1, 1, 1]' : 0.088414}
{'[4, 6, 0, 0, 0, 0, 1, 0, 1, 22, 7, 0, 1, 1, 0, 1, 1, 1]' : 0.0879171}
{'[4, 6, 0, 0, 0, 0, 1, 0, 1, 22, 7, 0, 1, 1, 0, 1, 1, 1]' : 0.0878561}
{'[4, 6, 0, 0, 0, 0, 1, 0, 1, 22, 7, 0, 1, 1, 0, 1, 1, 1]' : 0.0878849}
{'[4, 6, 0, 0, 0, 0, 1, 0, 1, 22, 7, 0, 1, 1, 0, 1, 1, 1]' : 0.08816}
{'[4, 6, 0, 0, 0, 0, 1, 0, 1, 22, 7, 0, 1, 1, 0, 1, 1, 1]' : 0.0880721}
{'[4, 6, 0, 0, 0, 0, 1, 0, 1, 22, 7, 0, 1, 1, 0, 1, 1, 1]' : 0.0878448}
{'[4, 6, 0, 0, 0, 0, 1, 0, 1, 22, 7, 0, 1, 1, 0, 1, 1, 1]' : 0.0878651}
{'[4, 6, 0, 0, 0, 0, 1, 0, 1, 22, 7, 0, 1, 1, 0, 1, 1, 1]' : 0.0879011}
{'[4, 6, 0, 0, 0, 0, 1, 0, 1, 22, 7, 0, 1, 1, 0, 1, 1, 1]' : 0.0878389}
{'[4, 6, 0, 0, 0, 0, 1, 0, 1, 22, 7, 0, 1, 1, 0, 1, 1, 1]' : 0.0879478}
{'[4, 6, 0, 0, 0, 0, 1, 0, 1, 22, 7, 0, 1, 1, 0, 1, 1, 1]' : 0.087868}
{'[4, 6, 0, 0, 0, 0, 1, 0, 1, 22, 7, 0, 1, 1, 0, 1, 1, 1]' : 0.087889}

out:
 ["{'[4, 6, 0, 0, 0, 0, 1, 0, 1, 22, 7, 0, 1, 1, 0, 1, 1, 1]' : 0.101835}", "{'[4, 6, 0, 0, 0, 0, 1, 0, 1, 22, 7, 0, 1, 1, 0, 1, 1, 1]' : 0.101704}", "{'[4, 6, 0, 0, 0, 0, 1, 0, 1, 22, 7, 0, 1, 1, 0, 1, 1, 1]' : 0.10142}", "{'[4, 6, 0, 0, 0, 0, 1, 0, 1, 22, 7, 0, 1, 1, 0, 1, 1, 1]' : 0.0901821}", "{'[4, 6, 0, 0, 0, 0, 1, 0, 1, 22, 7, 0, 1, 1, 0, 1, 1, 1]' : 0.0878692}", "{'[4, 6, 0, 0, 0, 0, 1, 0, 1, 22, 7, 0, 1, 1, 0, 1, 1, 1]' : 0.087903}", "{'[4, 6, 0, 0, 0, 0, 1, 0, 1, 22, 7, 0, 1, 1, 0, 1, 1, 1]' : 0.0880311}", "{'[4, 6, 0, 0, 0, 0, 1, 0, 1, 22, 7, 0, 1, 1, 0, 1, 1, 1]' : 0.087919}", "{'[4, 6, 0, 0, 0, 0, 1, 0, 1, 22, 7, 0, 1, 1, 0, 1, 1, 1]' : 0.0878341}", "{'[4, 6, 0, 0, 0, 0, 1, 0, 1, 22, 7, 0, 1, 1, 0, 1, 1, 1]' : 0.0878801}", "{'[4, 6, 0, 0, 0, 0, 1, 0, 1, 22, 7, 0, 1, 1, 0, 1, 1, 1]' : 0.0878482}", "{'[4, 6, 0, 0, 0, 0, 1, 0, 1, 22, 7, 0, 1, 1, 0, 1, 1, 1]' : 0.0879221}", "{'[4, 6, 0, 0, 0, 0, 1, 0, 1, 22, 7, 0, 1, 1, 0, 1, 1, 1]' : 0.087929}", "{'[4, 6, 0, 0, 0, 0, 1, 0, 1, 22, 7, 0, 1, 1, 0, 1, 1, 1]' : 0.0878451}", "{'[4, 6, 0, 0, 0, 0, 1, 0, 1, 22, 7, 0, 1, 1, 0, 1, 1, 1]' : 0.087954}", "{'[4, 6, 0, 0, 0, 0, 1, 0, 1, 22, 7, 0, 1, 1, 0, 1, 1, 1]' : 0.0878999}", "{'[4, 6, 0, 0, 0, 0, 1, 0, 1, 22, 7, 0, 1, 1, 0, 1, 1, 1]' : 0.0883229}", "{'[4, 6, 0, 0, 0, 0, 1, 0, 1, 22, 7, 0, 1, 1, 0, 1, 1, 1]' : 0.088414}", "{'[4, 6, 0, 0, 0, 0, 1, 0, 1, 22, 7, 0, 1, 1, 0, 1, 1, 1]' : 0.0879171}", "{'[4, 6, 0, 0, 0, 0, 1, 0, 1, 22, 7, 0, 1, 1, 0, 1, 1, 1]' : 0.0878561}", "{'[4, 6, 0, 0, 0, 0, 1, 0, 1, 22, 7, 0, 1, 1, 0, 1, 1, 1]' : 0.0878849}", "{'[4, 6, 0, 0, 0, 0, 1, 0, 1, 22, 7, 0, 1, 1, 0, 1, 1, 1]' : 0.08816}", "{'[4, 6, 0, 0, 0, 0, 1, 0, 1, 22, 7, 0, 1, 1, 0, 1, 1, 1]' : 0.0880721}", "{'[4, 6, 0, 0, 0, 0, 1, 0, 1, 22, 7, 0, 1, 1, 0, 1, 1, 1]' : 0.0878448}", "{'[4, 6, 0, 0, 0, 0, 1, 0, 1, 22, 7, 0, 1, 1, 0, 1, 1, 1]' : 0.0878651}", "{'[4, 6, 0, 0, 0, 0, 1, 0, 1, 22, 7, 0, 1, 1, 0, 1, 1, 1]' : 0.0879011}", "{'[4, 6, 0, 0, 0, 0, 1, 0, 1, 22, 7, 0, 1, 1, 0, 1, 1, 1]' : 0.0878389}", "{'[4, 6, 0, 0, 0, 0, 1, 0, 1, 22, 7, 0, 1, 1, 0, 1, 1, 1]' : 0.0879478}", "{'[4, 6, 0, 0, 0, 0, 1, 0, 1, 22, 7, 0, 1, 1, 0, 1, 1, 1]' : 0.087868}", "{'[4, 6, 0, 0, 0, 0, 1, 0, 1, 22, 7, 0, 1, 1, 0, 1, 1, 1]' : 0.087889}"]
returning from 'run': {'[4, 6, 0, 0, 0, 0, 1, 0, 1, 22, 7, 0, 1, 1, 0, 1, 1, 1]': ([0.101835, 0.101704, 0.10142, 0.0901821, 0.0878692, 0.087903, 0.0880311, 0.087919, 0.0878341, 0.0878801, 0.0878482, 0.0879221, 0.087929, 0.0878451, 0.087954, 0.0878999, 0.0883229, 0.088414, 0.0879171, 0.0878561, 0.0878849, 0.08816, 0.0880721, 0.0878448, 0.0878651, 0.0879011, 0.0878389, 0.0879478, 0.087868, 0.087889], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 6, 0, 0, 0, 0, 1, 0, 1, 22, 7, 0, 1, 1, 0, 1, 1, 1]': ([0.101835, 0.101704, 0.10142, 0.0901821, 0.0878692, 0.087903, 0.0880311, 0.087919, 0.0878341, 0.0878801, 0.0878482, 0.0879221, 0.087929, 0.0878451, 0.087954, 0.0878999, 0.0883229, 0.088414, 0.0879171, 0.0878561, 0.0878849, 0.08816, 0.0880721, 0.0878448, 0.0878651, 0.0879011, 0.0878389, 0.0879478, 0.087868, 0.087889], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Design Best Point:
[3, 5, 6, 1, 0, 0, 1, 0, 21, 20, 27, 0, 1, 0, 0, 1, 1, 1]
Length of requested configs: 1
Result was on Database, Returning Now
Fixed Factors: {'ACOPY_x': 1, 'T2_J': 0, 'T2_I': 0, 'T1_J': 6, 'ACOPY_y': 0}
Slowdown (Design Best): 0.583038818405605
Slowdown (Predicted Best): 0.5489864634564501
Budget: 39/180
Updating Global Best: 0.08939192333333332
Current Best Point: 
[4, 6, 0, 0, 0, 0, 1, 0, 1, 22, 7, 0, 1, 1, 0, 1, 1, 1]
Step 1
Generating valid search space of size 3400 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Valid coordinates: 680
Tested coordinates: 30000
Tested coordinates: 40000
Valid coordinates: 1360
Tested coordinates: 50000
Tested coordinates: 60000
Valid coordinates: 2040
Tested coordinates: 70000
Tested coordinates: 80000
Valid coordinates: 2720
Tested coordinates: 90000
Tested coordinates: 100000
Valid coordinates: 3400
Valid/Tested configurations: 3400/107960
Generated Search Space:
NULL
Clean Info:
Removed Factors: character(0)

Removed Inverse Factors: [1] "SCR"  "VEC1" "VEC2"

New Factors: ['T1_I', 'T1_K', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
New Inverse Factors: ['T1_I', 'T1_K', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
New Fixed Factors: {'ACOPY_x': 1, 'T2_J': 0, 'T2_I': 0, 'T1_J': 6, 'ACOPY_y': 0}
Full Model:  ~ T1_I + T1_K + T2_K + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Fixed Factors: {'ACOPY_x': 1, 'T2_J': 0, 'T2_I': 0, 'T1_J': 6, 'ACOPY_y': 0}
Computing D-Optimal Design
Computing D-Optimal Design with 34 experiments
Design Formula:  ~ T1_I + T1_K + T2_K + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Starting "optFederov" run
Using Search Space:
NULL
Data Dimensions: [1] 3400   13

     T1_I T1_K T2_K U1_I U_I U_J U_K RT_I RT_J RT_K SCR VEC1 VEC2
98      2    1    3   15   0   2   4    1    1    0   1    1    1
215     2    6    5   29  25  25   0    0    1    1   0    0    0
254     0    0    6   24   0   0   1    0    1    0   0    0    0
291     0    2    2   29   0   3   0    0    0    0   1    1    0
435     3    5    3   28  29   0  29    0    2    0   0    0    0
598     0    2    0    4   9   0  29    0    1    1   0    1    1
684     2    4    4    4   0   6   6    0    1    1   0    1    0
752     5    1    6   28   0   7  28    1    0    1   0    1    0
857     4    1    2    8   7   0   1    0    0    0   0    1    1
883     0    2    1    0   6  11   0    1    0    1   0    1    1
1030    1    0    5    6   7   0  29    0    0    1   1    1    0
1183    6    6    0   28   0  16   7    0    0    0   0    1    0
1396    6    6    6    5   0  20   0    0    2    0   0    1    0
1432    0    6    5   29  11   6   0    0    0    2   1    0    1
1634    4    2    1    0  29  29   0    0    0    0   0    0    0
1655    4    6    0    7  29   5   0    0    0    0   1    0    1
1743    3    6    0    4  11   0  28    1    1    0   1    1    0
1867    3    4    3   27   0  29  28    0    2    0   1    0    1
1976    6    2    0   28  23   0   3    0    2    0   1    1    1
1991    0    0    0   10   0  15  17    0    0    2   0    1    1
2064    2    5    6    6   0  26  27    2    0    0   0    1    1
2078    6    0    5   29  17  16   0    2    0    0   0    1    1
2332    0    1    0    4   0  27   1    1    0    1   0    0    1
2398    2    3    6    0   0   0   0    0    0    2   1    0    1
2466    0    1    6    2  22  24   0    1    1    0   1    1    0
2497    6    0    6   26   8   5   0    1    1    0   1    0    0
2500    6    6    0    4   3  15   0    2    0    0   0    0    0
2554    6    3    1    8   7   0  10    0    0    2   0    1    0
2560    2    1    0   16   4  10   0    0    2    0   0    0    1
2610    6    4    6   29   8   0  15    0    0    0   0    1    1
2790    2    6    0    0  17  10   0    0    2    0   1    1    1
3318    6    2    4    2  26   0   8    2    0    0   1    1    0
3340    4    3    6    0   0   8  12    1    0    0   0    0    0
3359    6    5    5    1   0   0  28    0    0    1   1    0    1

D-Efficiency Approximation: [1] 0.365

Measuring design of size 34
Current Design Names: ['T1_I', 'T1_K', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	5
        Additions: 		602
        Multiplications: 	252
        Divisions: 		0
        Logical: 		0
        Reads: 			1253
        Writes: 		246
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest48.exe __orio_perftest48.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest48.exe  
Program Test Output: 
{'[2, 6, 1, 0, 0, 3, 1, 0, 15, 0, 2, 4, 1, 1, 0, 1, 1, 1]' : 0.133881}
{'[2, 6, 1, 0, 0, 3, 1, 0, 15, 0, 2, 4, 1, 1, 0, 1, 1, 1]' : 0.133801}
{'[2, 6, 1, 0, 0, 3, 1, 0, 15, 0, 2, 4, 1, 1, 0, 1, 1, 1]' : 0.1339}
{'[2, 6, 1, 0, 0, 3, 1, 0, 15, 0, 2, 4, 1, 1, 0, 1, 1, 1]' : 0.12704}
{'[2, 6, 1, 0, 0, 3, 1, 0, 15, 0, 2, 4, 1, 1, 0, 1, 1, 1]' : 0.120645}
{'[2, 6, 1, 0, 0, 3, 1, 0, 15, 0, 2, 4, 1, 1, 0, 1, 1, 1]' : 0.120696}
{'[2, 6, 1, 0, 0, 3, 1, 0, 15, 0, 2, 4, 1, 1, 0, 1, 1, 1]' : 0.120787}
{'[2, 6, 1, 0, 0, 3, 1, 0, 15, 0, 2, 4, 1, 1, 0, 1, 1, 1]' : 0.120696}
{'[2, 6, 1, 0, 0, 3, 1, 0, 15, 0, 2, 4, 1, 1, 0, 1, 1, 1]' : 0.120725}
{'[2, 6, 1, 0, 0, 3, 1, 0, 15, 0, 2, 4, 1, 1, 0, 1, 1, 1]' : 0.120756}
{'[2, 6, 1, 0, 0, 3, 1, 0, 15, 0, 2, 4, 1, 1, 0, 1, 1, 1]' : 0.120836}
{'[2, 6, 1, 0, 0, 3, 1, 0, 15, 0, 2, 4, 1, 1, 0, 1, 1, 1]' : 0.120682}
{'[2, 6, 1, 0, 0, 3, 1, 0, 15, 0, 2, 4, 1, 1, 0, 1, 1, 1]' : 0.120726}
{'[2, 6, 1, 0, 0, 3, 1, 0, 15, 0, 2, 4, 1, 1, 0, 1, 1, 1]' : 0.120789}
{'[2, 6, 1, 0, 0, 3, 1, 0, 15, 0, 2, 4, 1, 1, 0, 1, 1, 1]' : 0.120677}
{'[2, 6, 1, 0, 0, 3, 1, 0, 15, 0, 2, 4, 1, 1, 0, 1, 1, 1]' : 0.120838}
{'[2, 6, 1, 0, 0, 3, 1, 0, 15, 0, 2, 4, 1, 1, 0, 1, 1, 1]' : 0.121046}
{'[2, 6, 1, 0, 0, 3, 1, 0, 15, 0, 2, 4, 1, 1, 0, 1, 1, 1]' : 0.120139}
{'[2, 6, 1, 0, 0, 3, 1, 0, 15, 0, 2, 4, 1, 1, 0, 1, 1, 1]' : 0.117601}
{'[2, 6, 1, 0, 0, 3, 1, 0, 15, 0, 2, 4, 1, 1, 0, 1, 1, 1]' : 0.120428}
{'[2, 6, 1, 0, 0, 3, 1, 0, 15, 0, 2, 4, 1, 1, 0, 1, 1, 1]' : 0.120697}
{'[2, 6, 1, 0, 0, 3, 1, 0, 15, 0, 2, 4, 1, 1, 0, 1, 1, 1]' : 0.120701}
{'[2, 6, 1, 0, 0, 3, 1, 0, 15, 0, 2, 4, 1, 1, 0, 1, 1, 1]' : 0.120626}
{'[2, 6, 1, 0, 0, 3, 1, 0, 15, 0, 2, 4, 1, 1, 0, 1, 1, 1]' : 0.120836}
{'[2, 6, 1, 0, 0, 3, 1, 0, 15, 0, 2, 4, 1, 1, 0, 1, 1, 1]' : 0.120699}
{'[2, 6, 1, 0, 0, 3, 1, 0, 15, 0, 2, 4, 1, 1, 0, 1, 1, 1]' : 0.120682}
{'[2, 6, 1, 0, 0, 3, 1, 0, 15, 0, 2, 4, 1, 1, 0, 1, 1, 1]' : 0.120671}
{'[2, 6, 1, 0, 0, 3, 1, 0, 15, 0, 2, 4, 1, 1, 0, 1, 1, 1]' : 0.120969}
{'[2, 6, 1, 0, 0, 3, 1, 0, 15, 0, 2, 4, 1, 1, 0, 1, 1, 1]' : 0.120701}
{'[2, 6, 1, 0, 0, 3, 1, 0, 15, 0, 2, 4, 1, 1, 0, 1, 1, 1]' : 0.12072}

out:
 ["{'[2, 6, 1, 0, 0, 3, 1, 0, 15, 0, 2, 4, 1, 1, 0, 1, 1, 1]' : 0.133881}", "{'[2, 6, 1, 0, 0, 3, 1, 0, 15, 0, 2, 4, 1, 1, 0, 1, 1, 1]' : 0.133801}", "{'[2, 6, 1, 0, 0, 3, 1, 0, 15, 0, 2, 4, 1, 1, 0, 1, 1, 1]' : 0.1339}", "{'[2, 6, 1, 0, 0, 3, 1, 0, 15, 0, 2, 4, 1, 1, 0, 1, 1, 1]' : 0.12704}", "{'[2, 6, 1, 0, 0, 3, 1, 0, 15, 0, 2, 4, 1, 1, 0, 1, 1, 1]' : 0.120645}", "{'[2, 6, 1, 0, 0, 3, 1, 0, 15, 0, 2, 4, 1, 1, 0, 1, 1, 1]' : 0.120696}", "{'[2, 6, 1, 0, 0, 3, 1, 0, 15, 0, 2, 4, 1, 1, 0, 1, 1, 1]' : 0.120787}", "{'[2, 6, 1, 0, 0, 3, 1, 0, 15, 0, 2, 4, 1, 1, 0, 1, 1, 1]' : 0.120696}", "{'[2, 6, 1, 0, 0, 3, 1, 0, 15, 0, 2, 4, 1, 1, 0, 1, 1, 1]' : 0.120725}", "{'[2, 6, 1, 0, 0, 3, 1, 0, 15, 0, 2, 4, 1, 1, 0, 1, 1, 1]' : 0.120756}", "{'[2, 6, 1, 0, 0, 3, 1, 0, 15, 0, 2, 4, 1, 1, 0, 1, 1, 1]' : 0.120836}", "{'[2, 6, 1, 0, 0, 3, 1, 0, 15, 0, 2, 4, 1, 1, 0, 1, 1, 1]' : 0.120682}", "{'[2, 6, 1, 0, 0, 3, 1, 0, 15, 0, 2, 4, 1, 1, 0, 1, 1, 1]' : 0.120726}", "{'[2, 6, 1, 0, 0, 3, 1, 0, 15, 0, 2, 4, 1, 1, 0, 1, 1, 1]' : 0.120789}", "{'[2, 6, 1, 0, 0, 3, 1, 0, 15, 0, 2, 4, 1, 1, 0, 1, 1, 1]' : 0.120677}", "{'[2, 6, 1, 0, 0, 3, 1, 0, 15, 0, 2, 4, 1, 1, 0, 1, 1, 1]' : 0.120838}", "{'[2, 6, 1, 0, 0, 3, 1, 0, 15, 0, 2, 4, 1, 1, 0, 1, 1, 1]' : 0.121046}", "{'[2, 6, 1, 0, 0, 3, 1, 0, 15, 0, 2, 4, 1, 1, 0, 1, 1, 1]' : 0.120139}", "{'[2, 6, 1, 0, 0, 3, 1, 0, 15, 0, 2, 4, 1, 1, 0, 1, 1, 1]' : 0.117601}", "{'[2, 6, 1, 0, 0, 3, 1, 0, 15, 0, 2, 4, 1, 1, 0, 1, 1, 1]' : 0.120428}", "{'[2, 6, 1, 0, 0, 3, 1, 0, 15, 0, 2, 4, 1, 1, 0, 1, 1, 1]' : 0.120697}", "{'[2, 6, 1, 0, 0, 3, 1, 0, 15, 0, 2, 4, 1, 1, 0, 1, 1, 1]' : 0.120701}", "{'[2, 6, 1, 0, 0, 3, 1, 0, 15, 0, 2, 4, 1, 1, 0, 1, 1, 1]' : 0.120626}", "{'[2, 6, 1, 0, 0, 3, 1, 0, 15, 0, 2, 4, 1, 1, 0, 1, 1, 1]' : 0.120836}", "{'[2, 6, 1, 0, 0, 3, 1, 0, 15, 0, 2, 4, 1, 1, 0, 1, 1, 1]' : 0.120699}", "{'[2, 6, 1, 0, 0, 3, 1, 0, 15, 0, 2, 4, 1, 1, 0, 1, 1, 1]' : 0.120682}", "{'[2, 6, 1, 0, 0, 3, 1, 0, 15, 0, 2, 4, 1, 1, 0, 1, 1, 1]' : 0.120671}", "{'[2, 6, 1, 0, 0, 3, 1, 0, 15, 0, 2, 4, 1, 1, 0, 1, 1, 1]' : 0.120969}", "{'[2, 6, 1, 0, 0, 3, 1, 0, 15, 0, 2, 4, 1, 1, 0, 1, 1, 1]' : 0.120701}", "{'[2, 6, 1, 0, 0, 3, 1, 0, 15, 0, 2, 4, 1, 1, 0, 1, 1, 1]' : 0.12072}"]
returning from 'run': {'[2, 6, 1, 0, 0, 3, 1, 0, 15, 0, 2, 4, 1, 1, 0, 1, 1, 1]': ([0.133881, 0.133801, 0.1339, 0.12704, 0.120645, 0.120696, 0.120787, 0.120696, 0.120725, 0.120756, 0.120836, 0.120682, 0.120726, 0.120789, 0.120677, 0.120838, 0.121046, 0.120139, 0.117601, 0.120428, 0.120697, 0.120701, 0.120626, 0.120836, 0.120699, 0.120682, 0.120671, 0.120969, 0.120701, 0.12072], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 6, 1, 0, 0, 3, 1, 0, 15, 0, 2, 4, 1, 1, 0, 1, 1, 1]': ([0.133881, 0.133801, 0.1339, 0.12704, 0.120645, 0.120696, 0.120787, 0.120696, 0.120725, 0.120756, 0.120836, 0.120682, 0.120726, 0.120789, 0.120677, 0.120838, 0.121046, 0.120139, 0.117601, 0.120428, 0.120697, 0.120701, 0.120626, 0.120836, 0.120699, 0.120682, 0.120671, 0.120969, 0.120701, 0.12072], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	44
        Max loop nest depth: 	5
        Additions: 		3352
        Multiplications: 	918
        Divisions: 		0
        Logical: 		0
        Reads: 			5357
        Writes: 		632
        Comparisons:		44
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest49.exe __orio_perftest49.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest49.exe  
Program Test Output: 
{'[2, 6, 6, 0, 0, 5, 1, 0, 29, 25, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.183085}
{'[2, 6, 6, 0, 0, 5, 1, 0, 29, 25, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.179815}
{'[2, 6, 6, 0, 0, 5, 1, 0, 29, 25, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.160781}
{'[2, 6, 6, 0, 0, 5, 1, 0, 29, 25, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.158973}
{'[2, 6, 6, 0, 0, 5, 1, 0, 29, 25, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.160512}
{'[2, 6, 6, 0, 0, 5, 1, 0, 29, 25, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.161023}
{'[2, 6, 6, 0, 0, 5, 1, 0, 29, 25, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.162729}
{'[2, 6, 6, 0, 0, 5, 1, 0, 29, 25, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.161211}
{'[2, 6, 6, 0, 0, 5, 1, 0, 29, 25, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.160655}
{'[2, 6, 6, 0, 0, 5, 1, 0, 29, 25, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.161524}
{'[2, 6, 6, 0, 0, 5, 1, 0, 29, 25, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.160729}
{'[2, 6, 6, 0, 0, 5, 1, 0, 29, 25, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.160549}
{'[2, 6, 6, 0, 0, 5, 1, 0, 29, 25, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.161961}
{'[2, 6, 6, 0, 0, 5, 1, 0, 29, 25, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.163138}
{'[2, 6, 6, 0, 0, 5, 1, 0, 29, 25, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.160796}
{'[2, 6, 6, 0, 0, 5, 1, 0, 29, 25, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.160944}
{'[2, 6, 6, 0, 0, 5, 1, 0, 29, 25, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.160609}
{'[2, 6, 6, 0, 0, 5, 1, 0, 29, 25, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.160939}
{'[2, 6, 6, 0, 0, 5, 1, 0, 29, 25, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.160885}
{'[2, 6, 6, 0, 0, 5, 1, 0, 29, 25, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.16421}
{'[2, 6, 6, 0, 0, 5, 1, 0, 29, 25, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.160649}
{'[2, 6, 6, 0, 0, 5, 1, 0, 29, 25, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.160892}
{'[2, 6, 6, 0, 0, 5, 1, 0, 29, 25, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.160959}
{'[2, 6, 6, 0, 0, 5, 1, 0, 29, 25, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.160548}
{'[2, 6, 6, 0, 0, 5, 1, 0, 29, 25, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.160593}
{'[2, 6, 6, 0, 0, 5, 1, 0, 29, 25, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.163858}
{'[2, 6, 6, 0, 0, 5, 1, 0, 29, 25, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.16177}
{'[2, 6, 6, 0, 0, 5, 1, 0, 29, 25, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.160707}
{'[2, 6, 6, 0, 0, 5, 1, 0, 29, 25, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.161033}
{'[2, 6, 6, 0, 0, 5, 1, 0, 29, 25, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.160837}

out:
 ["{'[2, 6, 6, 0, 0, 5, 1, 0, 29, 25, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.183085}", "{'[2, 6, 6, 0, 0, 5, 1, 0, 29, 25, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.179815}", "{'[2, 6, 6, 0, 0, 5, 1, 0, 29, 25, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.160781}", "{'[2, 6, 6, 0, 0, 5, 1, 0, 29, 25, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.158973}", "{'[2, 6, 6, 0, 0, 5, 1, 0, 29, 25, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.160512}", "{'[2, 6, 6, 0, 0, 5, 1, 0, 29, 25, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.161023}", "{'[2, 6, 6, 0, 0, 5, 1, 0, 29, 25, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.162729}", "{'[2, 6, 6, 0, 0, 5, 1, 0, 29, 25, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.161211}", "{'[2, 6, 6, 0, 0, 5, 1, 0, 29, 25, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.160655}", "{'[2, 6, 6, 0, 0, 5, 1, 0, 29, 25, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.161524}", "{'[2, 6, 6, 0, 0, 5, 1, 0, 29, 25, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.160729}", "{'[2, 6, 6, 0, 0, 5, 1, 0, 29, 25, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.160549}", "{'[2, 6, 6, 0, 0, 5, 1, 0, 29, 25, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.161961}", "{'[2, 6, 6, 0, 0, 5, 1, 0, 29, 25, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.163138}", "{'[2, 6, 6, 0, 0, 5, 1, 0, 29, 25, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.160796}", "{'[2, 6, 6, 0, 0, 5, 1, 0, 29, 25, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.160944}", "{'[2, 6, 6, 0, 0, 5, 1, 0, 29, 25, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.160609}", "{'[2, 6, 6, 0, 0, 5, 1, 0, 29, 25, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.160939}", "{'[2, 6, 6, 0, 0, 5, 1, 0, 29, 25, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.160885}", "{'[2, 6, 6, 0, 0, 5, 1, 0, 29, 25, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.16421}", "{'[2, 6, 6, 0, 0, 5, 1, 0, 29, 25, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.160649}", "{'[2, 6, 6, 0, 0, 5, 1, 0, 29, 25, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.160892}", "{'[2, 6, 6, 0, 0, 5, 1, 0, 29, 25, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.160959}", "{'[2, 6, 6, 0, 0, 5, 1, 0, 29, 25, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.160548}", "{'[2, 6, 6, 0, 0, 5, 1, 0, 29, 25, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.160593}", "{'[2, 6, 6, 0, 0, 5, 1, 0, 29, 25, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.163858}", "{'[2, 6, 6, 0, 0, 5, 1, 0, 29, 25, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.16177}", "{'[2, 6, 6, 0, 0, 5, 1, 0, 29, 25, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.160707}", "{'[2, 6, 6, 0, 0, 5, 1, 0, 29, 25, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.161033}", "{'[2, 6, 6, 0, 0, 5, 1, 0, 29, 25, 25, 0, 0, 1, 1, 0, 0, 0]' : 0.160837}"]
returning from 'run': {'[2, 6, 6, 0, 0, 5, 1, 0, 29, 25, 25, 0, 0, 1, 1, 0, 0, 0]': ([0.183085, 0.179815, 0.160781, 0.158973, 0.160512, 0.161023, 0.162729, 0.161211, 0.160655, 0.161524, 0.160729, 0.160549, 0.161961, 0.163138, 0.160796, 0.160944, 0.160609, 0.160939, 0.160885, 0.16421, 0.160649, 0.160892, 0.160959, 0.160548, 0.160593, 0.163858, 0.16177, 0.160707, 0.161033, 0.160837], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 6, 6, 0, 0, 5, 1, 0, 29, 25, 25, 0, 0, 1, 1, 0, 0, 0]': ([0.183085, 0.179815, 0.160781, 0.158973, 0.160512, 0.161023, 0.162729, 0.161211, 0.160655, 0.161524, 0.160729, 0.160549, 0.161961, 0.163138, 0.160796, 0.160944, 0.160609, 0.160939, 0.160885, 0.16421, 0.160649, 0.160892, 0.160959, 0.160548, 0.160593, 0.163858, 0.16177, 0.160707, 0.161033, 0.160837], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	3
        Additions: 		108
        Multiplications: 	22
        Divisions: 		0
        Logical: 		0
        Reads: 			236
        Writes: 		57
        Comparisons:		9
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest50.exe __orio_perftest50.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest50.exe  
Program Test Output: 
{'[0, 6, 0, 0, 0, 6, 1, 0, 24, 0, 0, 1, 0, 1, 0, 0, 0, 0]' : 0.263658}
{'[0, 6, 0, 0, 0, 6, 1, 0, 24, 0, 0, 1, 0, 1, 0, 0, 0, 0]' : 0.249457}
{'[0, 6, 0, 0, 0, 6, 1, 0, 24, 0, 0, 1, 0, 1, 0, 0, 0, 0]' : 0.22883}
{'[0, 6, 0, 0, 0, 6, 1, 0, 24, 0, 0, 1, 0, 1, 0, 0, 0, 0]' : 0.228526}
{'[0, 6, 0, 0, 0, 6, 1, 0, 24, 0, 0, 1, 0, 1, 0, 0, 0, 0]' : 0.231677}
{'[0, 6, 0, 0, 0, 6, 1, 0, 24, 0, 0, 1, 0, 1, 0, 0, 0, 0]' : 0.235837}
{'[0, 6, 0, 0, 0, 6, 1, 0, 24, 0, 0, 1, 0, 1, 0, 0, 0, 0]' : 0.232203}
{'[0, 6, 0, 0, 0, 6, 1, 0, 24, 0, 0, 1, 0, 1, 0, 0, 0, 0]' : 0.228936}
{'[0, 6, 0, 0, 0, 6, 1, 0, 24, 0, 0, 1, 0, 1, 0, 0, 0, 0]' : 0.228625}
{'[0, 6, 0, 0, 0, 6, 1, 0, 24, 0, 0, 1, 0, 1, 0, 0, 0, 0]' : 0.228691}
{'[0, 6, 0, 0, 0, 6, 1, 0, 24, 0, 0, 1, 0, 1, 0, 0, 0, 0]' : 0.226853}
{'[0, 6, 0, 0, 0, 6, 1, 0, 24, 0, 0, 1, 0, 1, 0, 0, 0, 0]' : 0.22866}
{'[0, 6, 0, 0, 0, 6, 1, 0, 24, 0, 0, 1, 0, 1, 0, 0, 0, 0]' : 0.228742}
{'[0, 6, 0, 0, 0, 6, 1, 0, 24, 0, 0, 1, 0, 1, 0, 0, 0, 0]' : 0.228849}
{'[0, 6, 0, 0, 0, 6, 1, 0, 24, 0, 0, 1, 0, 1, 0, 0, 0, 0]' : 0.228709}
{'[0, 6, 0, 0, 0, 6, 1, 0, 24, 0, 0, 1, 0, 1, 0, 0, 0, 0]' : 0.230125}
{'[0, 6, 0, 0, 0, 6, 1, 0, 24, 0, 0, 1, 0, 1, 0, 0, 0, 0]' : 0.228984}
{'[0, 6, 0, 0, 0, 6, 1, 0, 24, 0, 0, 1, 0, 1, 0, 0, 0, 0]' : 0.228857}
{'[0, 6, 0, 0, 0, 6, 1, 0, 24, 0, 0, 1, 0, 1, 0, 0, 0, 0]' : 0.228704}
{'[0, 6, 0, 0, 0, 6, 1, 0, 24, 0, 0, 1, 0, 1, 0, 0, 0, 0]' : 0.22899}
{'[0, 6, 0, 0, 0, 6, 1, 0, 24, 0, 0, 1, 0, 1, 0, 0, 0, 0]' : 0.228801}
{'[0, 6, 0, 0, 0, 6, 1, 0, 24, 0, 0, 1, 0, 1, 0, 0, 0, 0]' : 0.229107}
{'[0, 6, 0, 0, 0, 6, 1, 0, 24, 0, 0, 1, 0, 1, 0, 0, 0, 0]' : 0.22874}
{'[0, 6, 0, 0, 0, 6, 1, 0, 24, 0, 0, 1, 0, 1, 0, 0, 0, 0]' : 0.229312}
{'[0, 6, 0, 0, 0, 6, 1, 0, 24, 0, 0, 1, 0, 1, 0, 0, 0, 0]' : 0.229239}
{'[0, 6, 0, 0, 0, 6, 1, 0, 24, 0, 0, 1, 0, 1, 0, 0, 0, 0]' : 0.228935}
{'[0, 6, 0, 0, 0, 6, 1, 0, 24, 0, 0, 1, 0, 1, 0, 0, 0, 0]' : 0.228958}
{'[0, 6, 0, 0, 0, 6, 1, 0, 24, 0, 0, 1, 0, 1, 0, 0, 0, 0]' : 0.228733}
{'[0, 6, 0, 0, 0, 6, 1, 0, 24, 0, 0, 1, 0, 1, 0, 0, 0, 0]' : 0.229085}
{'[0, 6, 0, 0, 0, 6, 1, 0, 24, 0, 0, 1, 0, 1, 0, 0, 0, 0]' : 0.22858}

out:
 ["{'[0, 6, 0, 0, 0, 6, 1, 0, 24, 0, 0, 1, 0, 1, 0, 0, 0, 0]' : 0.263658}", "{'[0, 6, 0, 0, 0, 6, 1, 0, 24, 0, 0, 1, 0, 1, 0, 0, 0, 0]' : 0.249457}", "{'[0, 6, 0, 0, 0, 6, 1, 0, 24, 0, 0, 1, 0, 1, 0, 0, 0, 0]' : 0.22883}", "{'[0, 6, 0, 0, 0, 6, 1, 0, 24, 0, 0, 1, 0, 1, 0, 0, 0, 0]' : 0.228526}", "{'[0, 6, 0, 0, 0, 6, 1, 0, 24, 0, 0, 1, 0, 1, 0, 0, 0, 0]' : 0.231677}", "{'[0, 6, 0, 0, 0, 6, 1, 0, 24, 0, 0, 1, 0, 1, 0, 0, 0, 0]' : 0.235837}", "{'[0, 6, 0, 0, 0, 6, 1, 0, 24, 0, 0, 1, 0, 1, 0, 0, 0, 0]' : 0.232203}", "{'[0, 6, 0, 0, 0, 6, 1, 0, 24, 0, 0, 1, 0, 1, 0, 0, 0, 0]' : 0.228936}", "{'[0, 6, 0, 0, 0, 6, 1, 0, 24, 0, 0, 1, 0, 1, 0, 0, 0, 0]' : 0.228625}", "{'[0, 6, 0, 0, 0, 6, 1, 0, 24, 0, 0, 1, 0, 1, 0, 0, 0, 0]' : 0.228691}", "{'[0, 6, 0, 0, 0, 6, 1, 0, 24, 0, 0, 1, 0, 1, 0, 0, 0, 0]' : 0.226853}", "{'[0, 6, 0, 0, 0, 6, 1, 0, 24, 0, 0, 1, 0, 1, 0, 0, 0, 0]' : 0.22866}", "{'[0, 6, 0, 0, 0, 6, 1, 0, 24, 0, 0, 1, 0, 1, 0, 0, 0, 0]' : 0.228742}", "{'[0, 6, 0, 0, 0, 6, 1, 0, 24, 0, 0, 1, 0, 1, 0, 0, 0, 0]' : 0.228849}", "{'[0, 6, 0, 0, 0, 6, 1, 0, 24, 0, 0, 1, 0, 1, 0, 0, 0, 0]' : 0.228709}", "{'[0, 6, 0, 0, 0, 6, 1, 0, 24, 0, 0, 1, 0, 1, 0, 0, 0, 0]' : 0.230125}", "{'[0, 6, 0, 0, 0, 6, 1, 0, 24, 0, 0, 1, 0, 1, 0, 0, 0, 0]' : 0.228984}", "{'[0, 6, 0, 0, 0, 6, 1, 0, 24, 0, 0, 1, 0, 1, 0, 0, 0, 0]' : 0.228857}", "{'[0, 6, 0, 0, 0, 6, 1, 0, 24, 0, 0, 1, 0, 1, 0, 0, 0, 0]' : 0.228704}", "{'[0, 6, 0, 0, 0, 6, 1, 0, 24, 0, 0, 1, 0, 1, 0, 0, 0, 0]' : 0.22899}", "{'[0, 6, 0, 0, 0, 6, 1, 0, 24, 0, 0, 1, 0, 1, 0, 0, 0, 0]' : 0.228801}", "{'[0, 6, 0, 0, 0, 6, 1, 0, 24, 0, 0, 1, 0, 1, 0, 0, 0, 0]' : 0.229107}", "{'[0, 6, 0, 0, 0, 6, 1, 0, 24, 0, 0, 1, 0, 1, 0, 0, 0, 0]' : 0.22874}", "{'[0, 6, 0, 0, 0, 6, 1, 0, 24, 0, 0, 1, 0, 1, 0, 0, 0, 0]' : 0.229312}", "{'[0, 6, 0, 0, 0, 6, 1, 0, 24, 0, 0, 1, 0, 1, 0, 0, 0, 0]' : 0.229239}", "{'[0, 6, 0, 0, 0, 6, 1, 0, 24, 0, 0, 1, 0, 1, 0, 0, 0, 0]' : 0.228935}", "{'[0, 6, 0, 0, 0, 6, 1, 0, 24, 0, 0, 1, 0, 1, 0, 0, 0, 0]' : 0.228958}", "{'[0, 6, 0, 0, 0, 6, 1, 0, 24, 0, 0, 1, 0, 1, 0, 0, 0, 0]' : 0.228733}", "{'[0, 6, 0, 0, 0, 6, 1, 0, 24, 0, 0, 1, 0, 1, 0, 0, 0, 0]' : 0.229085}", "{'[0, 6, 0, 0, 0, 6, 1, 0, 24, 0, 0, 1, 0, 1, 0, 0, 0, 0]' : 0.22858}"]
returning from 'run': {'[0, 6, 0, 0, 0, 6, 1, 0, 24, 0, 0, 1, 0, 1, 0, 0, 0, 0]': ([0.263658, 0.249457, 0.22883, 0.228526, 0.231677, 0.235837, 0.232203, 0.228936, 0.228625, 0.228691, 0.226853, 0.22866, 0.228742, 0.228849, 0.228709, 0.230125, 0.228984, 0.228857, 0.228704, 0.22899, 0.228801, 0.229107, 0.22874, 0.229312, 0.229239, 0.228935, 0.228958, 0.228733, 0.229085, 0.22858], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 0, 0, 0, 6, 1, 0, 24, 0, 0, 1, 0, 1, 0, 0, 0, 0]': ([0.263658, 0.249457, 0.22883, 0.228526, 0.231677, 0.235837, 0.232203, 0.228936, 0.228625, 0.228691, 0.226853, 0.22866, 0.228742, 0.228849, 0.228709, 0.230125, 0.228984, 0.228857, 0.228704, 0.22899, 0.228801, 0.229107, 0.22874, 0.229312, 0.229239, 0.228935, 0.228958, 0.228733, 0.229085, 0.22858], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	4
        Additions: 		91
        Multiplications: 	12
        Divisions: 		0
        Logical: 		0
        Reads: 			204
        Writes: 		66
        Comparisons:		10
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest51.exe __orio_perftest51.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest51.exe  
Program Test Output: 
{'[0, 6, 2, 0, 0, 2, 1, 0, 29, 0, 3, 0, 0, 0, 0, 1, 1, 0]' : 0.256589}
{'[0, 6, 2, 0, 0, 2, 1, 0, 29, 0, 3, 0, 0, 0, 0, 1, 1, 0]' : 0.256416}
{'[0, 6, 2, 0, 0, 2, 1, 0, 29, 0, 3, 0, 0, 0, 0, 1, 1, 0]' : 0.256332}
{'[0, 6, 2, 0, 0, 2, 1, 0, 29, 0, 3, 0, 0, 0, 0, 1, 1, 0]' : 0.256114}
{'[0, 6, 2, 0, 0, 2, 1, 0, 29, 0, 3, 0, 0, 0, 0, 1, 1, 0]' : 0.256477}
{'[0, 6, 2, 0, 0, 2, 1, 0, 29, 0, 3, 0, 0, 0, 0, 1, 1, 0]' : 0.25664}
{'[0, 6, 2, 0, 0, 2, 1, 0, 29, 0, 3, 0, 0, 0, 0, 1, 1, 0]' : 0.256234}
{'[0, 6, 2, 0, 0, 2, 1, 0, 29, 0, 3, 0, 0, 0, 0, 1, 1, 0]' : 0.258707}
{'[0, 6, 2, 0, 0, 2, 1, 0, 29, 0, 3, 0, 0, 0, 0, 1, 1, 0]' : 0.256181}
{'[0, 6, 2, 0, 0, 2, 1, 0, 29, 0, 3, 0, 0, 0, 0, 1, 1, 0]' : 0.262065}
{'[0, 6, 2, 0, 0, 2, 1, 0, 29, 0, 3, 0, 0, 0, 0, 1, 1, 0]' : 0.253727}
{'[0, 6, 2, 0, 0, 2, 1, 0, 29, 0, 3, 0, 0, 0, 0, 1, 1, 0]' : 0.256005}
{'[0, 6, 2, 0, 0, 2, 1, 0, 29, 0, 3, 0, 0, 0, 0, 1, 1, 0]' : 0.256499}
{'[0, 6, 2, 0, 0, 2, 1, 0, 29, 0, 3, 0, 0, 0, 0, 1, 1, 0]' : 0.256127}
{'[0, 6, 2, 0, 0, 2, 1, 0, 29, 0, 3, 0, 0, 0, 0, 1, 1, 0]' : 0.256378}
{'[0, 6, 2, 0, 0, 2, 1, 0, 29, 0, 3, 0, 0, 0, 0, 1, 1, 0]' : 0.257123}
{'[0, 6, 2, 0, 0, 2, 1, 0, 29, 0, 3, 0, 0, 0, 0, 1, 1, 0]' : 0.256201}
{'[0, 6, 2, 0, 0, 2, 1, 0, 29, 0, 3, 0, 0, 0, 0, 1, 1, 0]' : 0.256359}
{'[0, 6, 2, 0, 0, 2, 1, 0, 29, 0, 3, 0, 0, 0, 0, 1, 1, 0]' : 0.256799}
{'[0, 6, 2, 0, 0, 2, 1, 0, 29, 0, 3, 0, 0, 0, 0, 1, 1, 0]' : 0.256107}
{'[0, 6, 2, 0, 0, 2, 1, 0, 29, 0, 3, 0, 0, 0, 0, 1, 1, 0]' : 0.256394}
{'[0, 6, 2, 0, 0, 2, 1, 0, 29, 0, 3, 0, 0, 0, 0, 1, 1, 0]' : 0.256227}
{'[0, 6, 2, 0, 0, 2, 1, 0, 29, 0, 3, 0, 0, 0, 0, 1, 1, 0]' : 0.256533}
{'[0, 6, 2, 0, 0, 2, 1, 0, 29, 0, 3, 0, 0, 0, 0, 1, 1, 0]' : 0.256105}
{'[0, 6, 2, 0, 0, 2, 1, 0, 29, 0, 3, 0, 0, 0, 0, 1, 1, 0]' : 0.257582}
{'[0, 6, 2, 0, 0, 2, 1, 0, 29, 0, 3, 0, 0, 0, 0, 1, 1, 0]' : 0.254407}
{'[0, 6, 2, 0, 0, 2, 1, 0, 29, 0, 3, 0, 0, 0, 0, 1, 1, 0]' : 0.255849}
{'[0, 6, 2, 0, 0, 2, 1, 0, 29, 0, 3, 0, 0, 0, 0, 1, 1, 0]' : 0.256288}
{'[0, 6, 2, 0, 0, 2, 1, 0, 29, 0, 3, 0, 0, 0, 0, 1, 1, 0]' : 0.258497}
{'[0, 6, 2, 0, 0, 2, 1, 0, 29, 0, 3, 0, 0, 0, 0, 1, 1, 0]' : 0.256241}

out:
 ["{'[0, 6, 2, 0, 0, 2, 1, 0, 29, 0, 3, 0, 0, 0, 0, 1, 1, 0]' : 0.256589}", "{'[0, 6, 2, 0, 0, 2, 1, 0, 29, 0, 3, 0, 0, 0, 0, 1, 1, 0]' : 0.256416}", "{'[0, 6, 2, 0, 0, 2, 1, 0, 29, 0, 3, 0, 0, 0, 0, 1, 1, 0]' : 0.256332}", "{'[0, 6, 2, 0, 0, 2, 1, 0, 29, 0, 3, 0, 0, 0, 0, 1, 1, 0]' : 0.256114}", "{'[0, 6, 2, 0, 0, 2, 1, 0, 29, 0, 3, 0, 0, 0, 0, 1, 1, 0]' : 0.256477}", "{'[0, 6, 2, 0, 0, 2, 1, 0, 29, 0, 3, 0, 0, 0, 0, 1, 1, 0]' : 0.25664}", "{'[0, 6, 2, 0, 0, 2, 1, 0, 29, 0, 3, 0, 0, 0, 0, 1, 1, 0]' : 0.256234}", "{'[0, 6, 2, 0, 0, 2, 1, 0, 29, 0, 3, 0, 0, 0, 0, 1, 1, 0]' : 0.258707}", "{'[0, 6, 2, 0, 0, 2, 1, 0, 29, 0, 3, 0, 0, 0, 0, 1, 1, 0]' : 0.256181}", "{'[0, 6, 2, 0, 0, 2, 1, 0, 29, 0, 3, 0, 0, 0, 0, 1, 1, 0]' : 0.262065}", "{'[0, 6, 2, 0, 0, 2, 1, 0, 29, 0, 3, 0, 0, 0, 0, 1, 1, 0]' : 0.253727}", "{'[0, 6, 2, 0, 0, 2, 1, 0, 29, 0, 3, 0, 0, 0, 0, 1, 1, 0]' : 0.256005}", "{'[0, 6, 2, 0, 0, 2, 1, 0, 29, 0, 3, 0, 0, 0, 0, 1, 1, 0]' : 0.256499}", "{'[0, 6, 2, 0, 0, 2, 1, 0, 29, 0, 3, 0, 0, 0, 0, 1, 1, 0]' : 0.256127}", "{'[0, 6, 2, 0, 0, 2, 1, 0, 29, 0, 3, 0, 0, 0, 0, 1, 1, 0]' : 0.256378}", "{'[0, 6, 2, 0, 0, 2, 1, 0, 29, 0, 3, 0, 0, 0, 0, 1, 1, 0]' : 0.257123}", "{'[0, 6, 2, 0, 0, 2, 1, 0, 29, 0, 3, 0, 0, 0, 0, 1, 1, 0]' : 0.256201}", "{'[0, 6, 2, 0, 0, 2, 1, 0, 29, 0, 3, 0, 0, 0, 0, 1, 1, 0]' : 0.256359}", "{'[0, 6, 2, 0, 0, 2, 1, 0, 29, 0, 3, 0, 0, 0, 0, 1, 1, 0]' : 0.256799}", "{'[0, 6, 2, 0, 0, 2, 1, 0, 29, 0, 3, 0, 0, 0, 0, 1, 1, 0]' : 0.256107}", "{'[0, 6, 2, 0, 0, 2, 1, 0, 29, 0, 3, 0, 0, 0, 0, 1, 1, 0]' : 0.256394}", "{'[0, 6, 2, 0, 0, 2, 1, 0, 29, 0, 3, 0, 0, 0, 0, 1, 1, 0]' : 0.256227}", "{'[0, 6, 2, 0, 0, 2, 1, 0, 29, 0, 3, 0, 0, 0, 0, 1, 1, 0]' : 0.256533}", "{'[0, 6, 2, 0, 0, 2, 1, 0, 29, 0, 3, 0, 0, 0, 0, 1, 1, 0]' : 0.256105}", "{'[0, 6, 2, 0, 0, 2, 1, 0, 29, 0, 3, 0, 0, 0, 0, 1, 1, 0]' : 0.257582}", "{'[0, 6, 2, 0, 0, 2, 1, 0, 29, 0, 3, 0, 0, 0, 0, 1, 1, 0]' : 0.254407}", "{'[0, 6, 2, 0, 0, 2, 1, 0, 29, 0, 3, 0, 0, 0, 0, 1, 1, 0]' : 0.255849}", "{'[0, 6, 2, 0, 0, 2, 1, 0, 29, 0, 3, 0, 0, 0, 0, 1, 1, 0]' : 0.256288}", "{'[0, 6, 2, 0, 0, 2, 1, 0, 29, 0, 3, 0, 0, 0, 0, 1, 1, 0]' : 0.258497}", "{'[0, 6, 2, 0, 0, 2, 1, 0, 29, 0, 3, 0, 0, 0, 0, 1, 1, 0]' : 0.256241}"]
returning from 'run': {'[0, 6, 2, 0, 0, 2, 1, 0, 29, 0, 3, 0, 0, 0, 0, 1, 1, 0]': ([0.256589, 0.256416, 0.256332, 0.256114, 0.256477, 0.25664, 0.256234, 0.258707, 0.256181, 0.262065, 0.253727, 0.256005, 0.256499, 0.256127, 0.256378, 0.257123, 0.256201, 0.256359, 0.256799, 0.256107, 0.256394, 0.256227, 0.256533, 0.256105, 0.257582, 0.254407, 0.255849, 0.256288, 0.258497, 0.256241], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 2, 0, 0, 2, 1, 0, 29, 0, 3, 0, 0, 0, 0, 1, 1, 0]': ([0.256589, 0.256416, 0.256332, 0.256114, 0.256477, 0.25664, 0.256234, 0.258707, 0.256181, 0.262065, 0.253727, 0.256005, 0.256499, 0.256127, 0.256378, 0.257123, 0.256201, 0.256359, 0.256799, 0.256107, 0.256394, 0.256227, 0.256533, 0.256105, 0.257582, 0.254407, 0.255849, 0.256288, 0.258497, 0.256241], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = kkk
Code stats:
        Number of loops: 	46
        Max loop nest depth: 	4
        Additions: 		14353
        Multiplications: 	3906
        Divisions: 		0
        Logical: 		0
        Reads: 			21121
        Writes: 		2137
        Comparisons:		46
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest52.exe __orio_perftest52.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest52.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest52.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest52.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest52.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	45
        Max loop nest depth: 	3
        Additions: 		3653
        Multiplications: 	1034
        Divisions: 		0
        Logical: 		0
        Reads: 			5774
        Writes: 		675
        Comparisons:		45
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest53.exe __orio_perftest53.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest53.exe  
Program Test Output: 
{'[0, 6, 2, 0, 0, 0, 1, 0, 4, 9, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.13123}
{'[0, 6, 2, 0, 0, 0, 1, 0, 4, 9, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.131}
{'[0, 6, 2, 0, 0, 0, 1, 0, 4, 9, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.130926}
{'[0, 6, 2, 0, 0, 0, 1, 0, 4, 9, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.130799}
{'[0, 6, 2, 0, 0, 0, 1, 0, 4, 9, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.130881}
{'[0, 6, 2, 0, 0, 0, 1, 0, 4, 9, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.130835}
{'[0, 6, 2, 0, 0, 0, 1, 0, 4, 9, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.130849}
{'[0, 6, 2, 0, 0, 0, 1, 0, 4, 9, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.130833}
{'[0, 6, 2, 0, 0, 0, 1, 0, 4, 9, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.131056}
{'[0, 6, 2, 0, 0, 0, 1, 0, 4, 9, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.131252}
{'[0, 6, 2, 0, 0, 0, 1, 0, 4, 9, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.130934}
{'[0, 6, 2, 0, 0, 0, 1, 0, 4, 9, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.130858}
{'[0, 6, 2, 0, 0, 0, 1, 0, 4, 9, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.13087}
{'[0, 6, 2, 0, 0, 0, 1, 0, 4, 9, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.130908}
{'[0, 6, 2, 0, 0, 0, 1, 0, 4, 9, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.130802}
{'[0, 6, 2, 0, 0, 0, 1, 0, 4, 9, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.130829}
{'[0, 6, 2, 0, 0, 0, 1, 0, 4, 9, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.130793}
{'[0, 6, 2, 0, 0, 0, 1, 0, 4, 9, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.130896}
{'[0, 6, 2, 0, 0, 0, 1, 0, 4, 9, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.130819}
{'[0, 6, 2, 0, 0, 0, 1, 0, 4, 9, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.130917}
{'[0, 6, 2, 0, 0, 0, 1, 0, 4, 9, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.130837}
{'[0, 6, 2, 0, 0, 0, 1, 0, 4, 9, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.130865}
{'[0, 6, 2, 0, 0, 0, 1, 0, 4, 9, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.130818}
{'[0, 6, 2, 0, 0, 0, 1, 0, 4, 9, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.130885}
{'[0, 6, 2, 0, 0, 0, 1, 0, 4, 9, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.13117}
{'[0, 6, 2, 0, 0, 0, 1, 0, 4, 9, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.130822}
{'[0, 6, 2, 0, 0, 0, 1, 0, 4, 9, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.130811}
{'[0, 6, 2, 0, 0, 0, 1, 0, 4, 9, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.130946}
{'[0, 6, 2, 0, 0, 0, 1, 0, 4, 9, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.130957}
{'[0, 6, 2, 0, 0, 0, 1, 0, 4, 9, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.130799}

out:
 ["{'[0, 6, 2, 0, 0, 0, 1, 0, 4, 9, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.13123}", "{'[0, 6, 2, 0, 0, 0, 1, 0, 4, 9, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.131}", "{'[0, 6, 2, 0, 0, 0, 1, 0, 4, 9, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.130926}", "{'[0, 6, 2, 0, 0, 0, 1, 0, 4, 9, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.130799}", "{'[0, 6, 2, 0, 0, 0, 1, 0, 4, 9, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.130881}", "{'[0, 6, 2, 0, 0, 0, 1, 0, 4, 9, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.130835}", "{'[0, 6, 2, 0, 0, 0, 1, 0, 4, 9, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.130849}", "{'[0, 6, 2, 0, 0, 0, 1, 0, 4, 9, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.130833}", "{'[0, 6, 2, 0, 0, 0, 1, 0, 4, 9, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.131056}", "{'[0, 6, 2, 0, 0, 0, 1, 0, 4, 9, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.131252}", "{'[0, 6, 2, 0, 0, 0, 1, 0, 4, 9, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.130934}", "{'[0, 6, 2, 0, 0, 0, 1, 0, 4, 9, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.130858}", "{'[0, 6, 2, 0, 0, 0, 1, 0, 4, 9, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.13087}", "{'[0, 6, 2, 0, 0, 0, 1, 0, 4, 9, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.130908}", "{'[0, 6, 2, 0, 0, 0, 1, 0, 4, 9, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.130802}", "{'[0, 6, 2, 0, 0, 0, 1, 0, 4, 9, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.130829}", "{'[0, 6, 2, 0, 0, 0, 1, 0, 4, 9, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.130793}", "{'[0, 6, 2, 0, 0, 0, 1, 0, 4, 9, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.130896}", "{'[0, 6, 2, 0, 0, 0, 1, 0, 4, 9, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.130819}", "{'[0, 6, 2, 0, 0, 0, 1, 0, 4, 9, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.130917}", "{'[0, 6, 2, 0, 0, 0, 1, 0, 4, 9, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.130837}", "{'[0, 6, 2, 0, 0, 0, 1, 0, 4, 9, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.130865}", "{'[0, 6, 2, 0, 0, 0, 1, 0, 4, 9, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.130818}", "{'[0, 6, 2, 0, 0, 0, 1, 0, 4, 9, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.130885}", "{'[0, 6, 2, 0, 0, 0, 1, 0, 4, 9, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.13117}", "{'[0, 6, 2, 0, 0, 0, 1, 0, 4, 9, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.130822}", "{'[0, 6, 2, 0, 0, 0, 1, 0, 4, 9, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.130811}", "{'[0, 6, 2, 0, 0, 0, 1, 0, 4, 9, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.130946}", "{'[0, 6, 2, 0, 0, 0, 1, 0, 4, 9, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.130957}", "{'[0, 6, 2, 0, 0, 0, 1, 0, 4, 9, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.130799}"]
returning from 'run': {'[0, 6, 2, 0, 0, 0, 1, 0, 4, 9, 0, 29, 0, 1, 1, 0, 1, 1]': ([0.13123, 0.131, 0.130926, 0.130799, 0.130881, 0.130835, 0.130849, 0.130833, 0.131056, 0.131252, 0.130934, 0.130858, 0.13087, 0.130908, 0.130802, 0.130829, 0.130793, 0.130896, 0.130819, 0.130917, 0.130837, 0.130865, 0.130818, 0.130885, 0.13117, 0.130822, 0.130811, 0.130946, 0.130957, 0.130799], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 2, 0, 0, 0, 1, 0, 4, 9, 0, 29, 0, 1, 1, 0, 1, 1]': ([0.13123, 0.131, 0.130926, 0.130799, 0.130881, 0.130835, 0.130849, 0.130833, 0.131056, 0.131252, 0.130934, 0.130858, 0.13087, 0.130908, 0.130802, 0.130829, 0.130793, 0.130896, 0.130819, 0.130917, 0.130837, 0.130865, 0.130818, 0.130885, 0.13117, 0.130822, 0.130811, 0.130946, 0.130957, 0.130799], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		160
        Multiplications: 	48
        Divisions: 		0
        Logical: 		0
        Reads: 			353
        Writes: 		59
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest54.exe __orio_perftest54.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest54.exe  
Program Test Output: 
{'[2, 6, 4, 0, 0, 4, 1, 0, 4, 0, 6, 6, 0, 1, 1, 0, 1, 0]' : 0.247591}
{'[2, 6, 4, 0, 0, 4, 1, 0, 4, 0, 6, 6, 0, 1, 1, 0, 1, 0]' : 0.247663}
{'[2, 6, 4, 0, 0, 4, 1, 0, 4, 0, 6, 6, 0, 1, 1, 0, 1, 0]' : 0.247486}
{'[2, 6, 4, 0, 0, 4, 1, 0, 4, 0, 6, 6, 0, 1, 1, 0, 1, 0]' : 0.247617}
{'[2, 6, 4, 0, 0, 4, 1, 0, 4, 0, 6, 6, 0, 1, 1, 0, 1, 0]' : 0.24778}
{'[2, 6, 4, 0, 0, 4, 1, 0, 4, 0, 6, 6, 0, 1, 1, 0, 1, 0]' : 0.247556}
{'[2, 6, 4, 0, 0, 4, 1, 0, 4, 0, 6, 6, 0, 1, 1, 0, 1, 0]' : 0.247524}
{'[2, 6, 4, 0, 0, 4, 1, 0, 4, 0, 6, 6, 0, 1, 1, 0, 1, 0]' : 0.247578}
{'[2, 6, 4, 0, 0, 4, 1, 0, 4, 0, 6, 6, 0, 1, 1, 0, 1, 0]' : 0.247579}
{'[2, 6, 4, 0, 0, 4, 1, 0, 4, 0, 6, 6, 0, 1, 1, 0, 1, 0]' : 0.247616}
{'[2, 6, 4, 0, 0, 4, 1, 0, 4, 0, 6, 6, 0, 1, 1, 0, 1, 0]' : 0.247466}
{'[2, 6, 4, 0, 0, 4, 1, 0, 4, 0, 6, 6, 0, 1, 1, 0, 1, 0]' : 0.2476}
{'[2, 6, 4, 0, 0, 4, 1, 0, 4, 0, 6, 6, 0, 1, 1, 0, 1, 0]' : 0.247768}
{'[2, 6, 4, 0, 0, 4, 1, 0, 4, 0, 6, 6, 0, 1, 1, 0, 1, 0]' : 0.247569}
{'[2, 6, 4, 0, 0, 4, 1, 0, 4, 0, 6, 6, 0, 1, 1, 0, 1, 0]' : 0.247513}
{'[2, 6, 4, 0, 0, 4, 1, 0, 4, 0, 6, 6, 0, 1, 1, 0, 1, 0]' : 0.247546}
{'[2, 6, 4, 0, 0, 4, 1, 0, 4, 0, 6, 6, 0, 1, 1, 0, 1, 0]' : 0.247575}
{'[2, 6, 4, 0, 0, 4, 1, 0, 4, 0, 6, 6, 0, 1, 1, 0, 1, 0]' : 0.247628}
{'[2, 6, 4, 0, 0, 4, 1, 0, 4, 0, 6, 6, 0, 1, 1, 0, 1, 0]' : 0.247515}
{'[2, 6, 4, 0, 0, 4, 1, 0, 4, 0, 6, 6, 0, 1, 1, 0, 1, 0]' : 0.2476}
{'[2, 6, 4, 0, 0, 4, 1, 0, 4, 0, 6, 6, 0, 1, 1, 0, 1, 0]' : 0.247732}
{'[2, 6, 4, 0, 0, 4, 1, 0, 4, 0, 6, 6, 0, 1, 1, 0, 1, 0]' : 0.247577}
{'[2, 6, 4, 0, 0, 4, 1, 0, 4, 0, 6, 6, 0, 1, 1, 0, 1, 0]' : 0.248016}
{'[2, 6, 4, 0, 0, 4, 1, 0, 4, 0, 6, 6, 0, 1, 1, 0, 1, 0]' : 0.24771}
{'[2, 6, 4, 0, 0, 4, 1, 0, 4, 0, 6, 6, 0, 1, 1, 0, 1, 0]' : 0.247628}
{'[2, 6, 4, 0, 0, 4, 1, 0, 4, 0, 6, 6, 0, 1, 1, 0, 1, 0]' : 0.247618}
{'[2, 6, 4, 0, 0, 4, 1, 0, 4, 0, 6, 6, 0, 1, 1, 0, 1, 0]' : 0.247516}
{'[2, 6, 4, 0, 0, 4, 1, 0, 4, 0, 6, 6, 0, 1, 1, 0, 1, 0]' : 0.247611}
{'[2, 6, 4, 0, 0, 4, 1, 0, 4, 0, 6, 6, 0, 1, 1, 0, 1, 0]' : 0.247697}
{'[2, 6, 4, 0, 0, 4, 1, 0, 4, 0, 6, 6, 0, 1, 1, 0, 1, 0]' : 0.247643}

out:
 ["{'[2, 6, 4, 0, 0, 4, 1, 0, 4, 0, 6, 6, 0, 1, 1, 0, 1, 0]' : 0.247591}", "{'[2, 6, 4, 0, 0, 4, 1, 0, 4, 0, 6, 6, 0, 1, 1, 0, 1, 0]' : 0.247663}", "{'[2, 6, 4, 0, 0, 4, 1, 0, 4, 0, 6, 6, 0, 1, 1, 0, 1, 0]' : 0.247486}", "{'[2, 6, 4, 0, 0, 4, 1, 0, 4, 0, 6, 6, 0, 1, 1, 0, 1, 0]' : 0.247617}", "{'[2, 6, 4, 0, 0, 4, 1, 0, 4, 0, 6, 6, 0, 1, 1, 0, 1, 0]' : 0.24778}", "{'[2, 6, 4, 0, 0, 4, 1, 0, 4, 0, 6, 6, 0, 1, 1, 0, 1, 0]' : 0.247556}", "{'[2, 6, 4, 0, 0, 4, 1, 0, 4, 0, 6, 6, 0, 1, 1, 0, 1, 0]' : 0.247524}", "{'[2, 6, 4, 0, 0, 4, 1, 0, 4, 0, 6, 6, 0, 1, 1, 0, 1, 0]' : 0.247578}", "{'[2, 6, 4, 0, 0, 4, 1, 0, 4, 0, 6, 6, 0, 1, 1, 0, 1, 0]' : 0.247579}", "{'[2, 6, 4, 0, 0, 4, 1, 0, 4, 0, 6, 6, 0, 1, 1, 0, 1, 0]' : 0.247616}", "{'[2, 6, 4, 0, 0, 4, 1, 0, 4, 0, 6, 6, 0, 1, 1, 0, 1, 0]' : 0.247466}", "{'[2, 6, 4, 0, 0, 4, 1, 0, 4, 0, 6, 6, 0, 1, 1, 0, 1, 0]' : 0.2476}", "{'[2, 6, 4, 0, 0, 4, 1, 0, 4, 0, 6, 6, 0, 1, 1, 0, 1, 0]' : 0.247768}", "{'[2, 6, 4, 0, 0, 4, 1, 0, 4, 0, 6, 6, 0, 1, 1, 0, 1, 0]' : 0.247569}", "{'[2, 6, 4, 0, 0, 4, 1, 0, 4, 0, 6, 6, 0, 1, 1, 0, 1, 0]' : 0.247513}", "{'[2, 6, 4, 0, 0, 4, 1, 0, 4, 0, 6, 6, 0, 1, 1, 0, 1, 0]' : 0.247546}", "{'[2, 6, 4, 0, 0, 4, 1, 0, 4, 0, 6, 6, 0, 1, 1, 0, 1, 0]' : 0.247575}", "{'[2, 6, 4, 0, 0, 4, 1, 0, 4, 0, 6, 6, 0, 1, 1, 0, 1, 0]' : 0.247628}", "{'[2, 6, 4, 0, 0, 4, 1, 0, 4, 0, 6, 6, 0, 1, 1, 0, 1, 0]' : 0.247515}", "{'[2, 6, 4, 0, 0, 4, 1, 0, 4, 0, 6, 6, 0, 1, 1, 0, 1, 0]' : 0.2476}", "{'[2, 6, 4, 0, 0, 4, 1, 0, 4, 0, 6, 6, 0, 1, 1, 0, 1, 0]' : 0.247732}", "{'[2, 6, 4, 0, 0, 4, 1, 0, 4, 0, 6, 6, 0, 1, 1, 0, 1, 0]' : 0.247577}", "{'[2, 6, 4, 0, 0, 4, 1, 0, 4, 0, 6, 6, 0, 1, 1, 0, 1, 0]' : 0.248016}", "{'[2, 6, 4, 0, 0, 4, 1, 0, 4, 0, 6, 6, 0, 1, 1, 0, 1, 0]' : 0.24771}", "{'[2, 6, 4, 0, 0, 4, 1, 0, 4, 0, 6, 6, 0, 1, 1, 0, 1, 0]' : 0.247628}", "{'[2, 6, 4, 0, 0, 4, 1, 0, 4, 0, 6, 6, 0, 1, 1, 0, 1, 0]' : 0.247618}", "{'[2, 6, 4, 0, 0, 4, 1, 0, 4, 0, 6, 6, 0, 1, 1, 0, 1, 0]' : 0.247516}", "{'[2, 6, 4, 0, 0, 4, 1, 0, 4, 0, 6, 6, 0, 1, 1, 0, 1, 0]' : 0.247611}", "{'[2, 6, 4, 0, 0, 4, 1, 0, 4, 0, 6, 6, 0, 1, 1, 0, 1, 0]' : 0.247697}", "{'[2, 6, 4, 0, 0, 4, 1, 0, 4, 0, 6, 6, 0, 1, 1, 0, 1, 0]' : 0.247643}"]
returning from 'run': {'[2, 6, 4, 0, 0, 4, 1, 0, 4, 0, 6, 6, 0, 1, 1, 0, 1, 0]': ([0.247591, 0.247663, 0.247486, 0.247617, 0.24778, 0.247556, 0.247524, 0.247578, 0.247579, 0.247616, 0.247466, 0.2476, 0.247768, 0.247569, 0.247513, 0.247546, 0.247575, 0.247628, 0.247515, 0.2476, 0.247732, 0.247577, 0.248016, 0.24771, 0.247628, 0.247618, 0.247516, 0.247611, 0.247697, 0.247643], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 6, 4, 0, 0, 4, 1, 0, 4, 0, 6, 6, 0, 1, 1, 0, 1, 0]': ([0.247591, 0.247663, 0.247486, 0.247617, 0.24778, 0.247556, 0.247524, 0.247578, 0.247579, 0.247616, 0.247466, 0.2476, 0.247768, 0.247569, 0.247513, 0.247546, 0.247575, 0.247628, 0.247515, 0.2476, 0.247732, 0.247577, 0.248016, 0.24771, 0.247628, 0.247618, 0.247516, 0.247611, 0.247697, 0.247643], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	23
        Max loop nest depth: 	5
        Additions: 		2857
        Multiplications: 	846
        Divisions: 		0
        Logical: 		0
        Reads: 			4556
        Writes: 		506
        Comparisons:		23
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest55.exe __orio_perftest55.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest55.exe  
Program Test Output: 
{'[5, 6, 1, 0, 0, 6, 1, 0, 28, 0, 7, 28, 1, 0, 1, 0, 1, 0]' : 0.116138}
{'[5, 6, 1, 0, 0, 6, 1, 0, 28, 0, 7, 28, 1, 0, 1, 0, 1, 0]' : 0.115833}
{'[5, 6, 1, 0, 0, 6, 1, 0, 28, 0, 7, 28, 1, 0, 1, 0, 1, 0]' : 0.115795}
{'[5, 6, 1, 0, 0, 6, 1, 0, 28, 0, 7, 28, 1, 0, 1, 0, 1, 0]' : 0.115991}
{'[5, 6, 1, 0, 0, 6, 1, 0, 28, 0, 7, 28, 1, 0, 1, 0, 1, 0]' : 0.11593}
{'[5, 6, 1, 0, 0, 6, 1, 0, 28, 0, 7, 28, 1, 0, 1, 0, 1, 0]' : 0.115792}
{'[5, 6, 1, 0, 0, 6, 1, 0, 28, 0, 7, 28, 1, 0, 1, 0, 1, 0]' : 0.115543}
{'[5, 6, 1, 0, 0, 6, 1, 0, 28, 0, 7, 28, 1, 0, 1, 0, 1, 0]' : 0.115969}
{'[5, 6, 1, 0, 0, 6, 1, 0, 28, 0, 7, 28, 1, 0, 1, 0, 1, 0]' : 0.115966}
{'[5, 6, 1, 0, 0, 6, 1, 0, 28, 0, 7, 28, 1, 0, 1, 0, 1, 0]' : 0.115945}
{'[5, 6, 1, 0, 0, 6, 1, 0, 28, 0, 7, 28, 1, 0, 1, 0, 1, 0]' : 0.115616}
{'[5, 6, 1, 0, 0, 6, 1, 0, 28, 0, 7, 28, 1, 0, 1, 0, 1, 0]' : 0.11589}
{'[5, 6, 1, 0, 0, 6, 1, 0, 28, 0, 7, 28, 1, 0, 1, 0, 1, 0]' : 0.116307}
{'[5, 6, 1, 0, 0, 6, 1, 0, 28, 0, 7, 28, 1, 0, 1, 0, 1, 0]' : 0.114128}
{'[5, 6, 1, 0, 0, 6, 1, 0, 28, 0, 7, 28, 1, 0, 1, 0, 1, 0]' : 0.115648}
{'[5, 6, 1, 0, 0, 6, 1, 0, 28, 0, 7, 28, 1, 0, 1, 0, 1, 0]' : 0.11582}
{'[5, 6, 1, 0, 0, 6, 1, 0, 28, 0, 7, 28, 1, 0, 1, 0, 1, 0]' : 0.115919}
{'[5, 6, 1, 0, 0, 6, 1, 0, 28, 0, 7, 28, 1, 0, 1, 0, 1, 0]' : 0.115899}
{'[5, 6, 1, 0, 0, 6, 1, 0, 28, 0, 7, 28, 1, 0, 1, 0, 1, 0]' : 0.115583}
{'[5, 6, 1, 0, 0, 6, 1, 0, 28, 0, 7, 28, 1, 0, 1, 0, 1, 0]' : 0.115927}
{'[5, 6, 1, 0, 0, 6, 1, 0, 28, 0, 7, 28, 1, 0, 1, 0, 1, 0]' : 0.115935}
{'[5, 6, 1, 0, 0, 6, 1, 0, 28, 0, 7, 28, 1, 0, 1, 0, 1, 0]' : 0.116019}
{'[5, 6, 1, 0, 0, 6, 1, 0, 28, 0, 7, 28, 1, 0, 1, 0, 1, 0]' : 0.11604}
{'[5, 6, 1, 0, 0, 6, 1, 0, 28, 0, 7, 28, 1, 0, 1, 0, 1, 0]' : 0.115798}
{'[5, 6, 1, 0, 0, 6, 1, 0, 28, 0, 7, 28, 1, 0, 1, 0, 1, 0]' : 0.115883}
{'[5, 6, 1, 0, 0, 6, 1, 0, 28, 0, 7, 28, 1, 0, 1, 0, 1, 0]' : 0.115764}
{'[5, 6, 1, 0, 0, 6, 1, 0, 28, 0, 7, 28, 1, 0, 1, 0, 1, 0]' : 0.116221}
{'[5, 6, 1, 0, 0, 6, 1, 0, 28, 0, 7, 28, 1, 0, 1, 0, 1, 0]' : 0.115865}
{'[5, 6, 1, 0, 0, 6, 1, 0, 28, 0, 7, 28, 1, 0, 1, 0, 1, 0]' : 0.115848}
{'[5, 6, 1, 0, 0, 6, 1, 0, 28, 0, 7, 28, 1, 0, 1, 0, 1, 0]' : 0.115612}

out:
 ["{'[5, 6, 1, 0, 0, 6, 1, 0, 28, 0, 7, 28, 1, 0, 1, 0, 1, 0]' : 0.116138}", "{'[5, 6, 1, 0, 0, 6, 1, 0, 28, 0, 7, 28, 1, 0, 1, 0, 1, 0]' : 0.115833}", "{'[5, 6, 1, 0, 0, 6, 1, 0, 28, 0, 7, 28, 1, 0, 1, 0, 1, 0]' : 0.115795}", "{'[5, 6, 1, 0, 0, 6, 1, 0, 28, 0, 7, 28, 1, 0, 1, 0, 1, 0]' : 0.115991}", "{'[5, 6, 1, 0, 0, 6, 1, 0, 28, 0, 7, 28, 1, 0, 1, 0, 1, 0]' : 0.11593}", "{'[5, 6, 1, 0, 0, 6, 1, 0, 28, 0, 7, 28, 1, 0, 1, 0, 1, 0]' : 0.115792}", "{'[5, 6, 1, 0, 0, 6, 1, 0, 28, 0, 7, 28, 1, 0, 1, 0, 1, 0]' : 0.115543}", "{'[5, 6, 1, 0, 0, 6, 1, 0, 28, 0, 7, 28, 1, 0, 1, 0, 1, 0]' : 0.115969}", "{'[5, 6, 1, 0, 0, 6, 1, 0, 28, 0, 7, 28, 1, 0, 1, 0, 1, 0]' : 0.115966}", "{'[5, 6, 1, 0, 0, 6, 1, 0, 28, 0, 7, 28, 1, 0, 1, 0, 1, 0]' : 0.115945}", "{'[5, 6, 1, 0, 0, 6, 1, 0, 28, 0, 7, 28, 1, 0, 1, 0, 1, 0]' : 0.115616}", "{'[5, 6, 1, 0, 0, 6, 1, 0, 28, 0, 7, 28, 1, 0, 1, 0, 1, 0]' : 0.11589}", "{'[5, 6, 1, 0, 0, 6, 1, 0, 28, 0, 7, 28, 1, 0, 1, 0, 1, 0]' : 0.116307}", "{'[5, 6, 1, 0, 0, 6, 1, 0, 28, 0, 7, 28, 1, 0, 1, 0, 1, 0]' : 0.114128}", "{'[5, 6, 1, 0, 0, 6, 1, 0, 28, 0, 7, 28, 1, 0, 1, 0, 1, 0]' : 0.115648}", "{'[5, 6, 1, 0, 0, 6, 1, 0, 28, 0, 7, 28, 1, 0, 1, 0, 1, 0]' : 0.11582}", "{'[5, 6, 1, 0, 0, 6, 1, 0, 28, 0, 7, 28, 1, 0, 1, 0, 1, 0]' : 0.115919}", "{'[5, 6, 1, 0, 0, 6, 1, 0, 28, 0, 7, 28, 1, 0, 1, 0, 1, 0]' : 0.115899}", "{'[5, 6, 1, 0, 0, 6, 1, 0, 28, 0, 7, 28, 1, 0, 1, 0, 1, 0]' : 0.115583}", "{'[5, 6, 1, 0, 0, 6, 1, 0, 28, 0, 7, 28, 1, 0, 1, 0, 1, 0]' : 0.115927}", "{'[5, 6, 1, 0, 0, 6, 1, 0, 28, 0, 7, 28, 1, 0, 1, 0, 1, 0]' : 0.115935}", "{'[5, 6, 1, 0, 0, 6, 1, 0, 28, 0, 7, 28, 1, 0, 1, 0, 1, 0]' : 0.116019}", "{'[5, 6, 1, 0, 0, 6, 1, 0, 28, 0, 7, 28, 1, 0, 1, 0, 1, 0]' : 0.11604}", "{'[5, 6, 1, 0, 0, 6, 1, 0, 28, 0, 7, 28, 1, 0, 1, 0, 1, 0]' : 0.115798}", "{'[5, 6, 1, 0, 0, 6, 1, 0, 28, 0, 7, 28, 1, 0, 1, 0, 1, 0]' : 0.115883}", "{'[5, 6, 1, 0, 0, 6, 1, 0, 28, 0, 7, 28, 1, 0, 1, 0, 1, 0]' : 0.115764}", "{'[5, 6, 1, 0, 0, 6, 1, 0, 28, 0, 7, 28, 1, 0, 1, 0, 1, 0]' : 0.116221}", "{'[5, 6, 1, 0, 0, 6, 1, 0, 28, 0, 7, 28, 1, 0, 1, 0, 1, 0]' : 0.115865}", "{'[5, 6, 1, 0, 0, 6, 1, 0, 28, 0, 7, 28, 1, 0, 1, 0, 1, 0]' : 0.115848}", "{'[5, 6, 1, 0, 0, 6, 1, 0, 28, 0, 7, 28, 1, 0, 1, 0, 1, 0]' : 0.115612}"]
returning from 'run': {'[5, 6, 1, 0, 0, 6, 1, 0, 28, 0, 7, 28, 1, 0, 1, 0, 1, 0]': ([0.116138, 0.115833, 0.115795, 0.115991, 0.11593, 0.115792, 0.115543, 0.115969, 0.115966, 0.115945, 0.115616, 0.11589, 0.116307, 0.114128, 0.115648, 0.11582, 0.115919, 0.115899, 0.115583, 0.115927, 0.115935, 0.116019, 0.11604, 0.115798, 0.115883, 0.115764, 0.116221, 0.115865, 0.115848, 0.115612], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 6, 1, 0, 0, 6, 1, 0, 28, 0, 7, 28, 1, 0, 1, 0, 1, 0]': ([0.116138, 0.115833, 0.115795, 0.115991, 0.11593, 0.115792, 0.115543, 0.115969, 0.115966, 0.115945, 0.115616, 0.11589, 0.116307, 0.114128, 0.115648, 0.11582, 0.115919, 0.115899, 0.115583, 0.115927, 0.115935, 0.116019, 0.11604, 0.115798, 0.115883, 0.115764, 0.116221, 0.115865, 0.115848, 0.115612], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	26
        Max loop nest depth: 	5
        Additions: 		299
        Multiplications: 	72
        Divisions: 		0
        Logical: 		0
        Reads: 			656
        Writes: 		127
        Comparisons:		26
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest56.exe __orio_perftest56.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest56.exe  
Program Test Output: 
{'[4, 6, 1, 0, 0, 2, 1, 0, 8, 7, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.164147}
{'[4, 6, 1, 0, 0, 2, 1, 0, 8, 7, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.163371}
{'[4, 6, 1, 0, 0, 2, 1, 0, 8, 7, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.140997}
{'[4, 6, 1, 0, 0, 2, 1, 0, 8, 7, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.138551}
{'[4, 6, 1, 0, 0, 2, 1, 0, 8, 7, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.138886}
{'[4, 6, 1, 0, 0, 2, 1, 0, 8, 7, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.138476}
{'[4, 6, 1, 0, 0, 2, 1, 0, 8, 7, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.138453}
{'[4, 6, 1, 0, 0, 2, 1, 0, 8, 7, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.138594}
{'[4, 6, 1, 0, 0, 2, 1, 0, 8, 7, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.138419}
{'[4, 6, 1, 0, 0, 2, 1, 0, 8, 7, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.138457}
{'[4, 6, 1, 0, 0, 2, 1, 0, 8, 7, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.138437}
{'[4, 6, 1, 0, 0, 2, 1, 0, 8, 7, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.138587}
{'[4, 6, 1, 0, 0, 2, 1, 0, 8, 7, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.138501}
{'[4, 6, 1, 0, 0, 2, 1, 0, 8, 7, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.138519}
{'[4, 6, 1, 0, 0, 2, 1, 0, 8, 7, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.138811}
{'[4, 6, 1, 0, 0, 2, 1, 0, 8, 7, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.138542}
{'[4, 6, 1, 0, 0, 2, 1, 0, 8, 7, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.138688}
{'[4, 6, 1, 0, 0, 2, 1, 0, 8, 7, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.138422}
{'[4, 6, 1, 0, 0, 2, 1, 0, 8, 7, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.13846}
{'[4, 6, 1, 0, 0, 2, 1, 0, 8, 7, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.13865}
{'[4, 6, 1, 0, 0, 2, 1, 0, 8, 7, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.138394}
{'[4, 6, 1, 0, 0, 2, 1, 0, 8, 7, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.138381}
{'[4, 6, 1, 0, 0, 2, 1, 0, 8, 7, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.138481}
{'[4, 6, 1, 0, 0, 2, 1, 0, 8, 7, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.138599}
{'[4, 6, 1, 0, 0, 2, 1, 0, 8, 7, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.138452}
{'[4, 6, 1, 0, 0, 2, 1, 0, 8, 7, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.138409}
{'[4, 6, 1, 0, 0, 2, 1, 0, 8, 7, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.138432}
{'[4, 6, 1, 0, 0, 2, 1, 0, 8, 7, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.138622}
{'[4, 6, 1, 0, 0, 2, 1, 0, 8, 7, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.138454}
{'[4, 6, 1, 0, 0, 2, 1, 0, 8, 7, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.138701}

out:
 ["{'[4, 6, 1, 0, 0, 2, 1, 0, 8, 7, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.164147}", "{'[4, 6, 1, 0, 0, 2, 1, 0, 8, 7, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.163371}", "{'[4, 6, 1, 0, 0, 2, 1, 0, 8, 7, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.140997}", "{'[4, 6, 1, 0, 0, 2, 1, 0, 8, 7, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.138551}", "{'[4, 6, 1, 0, 0, 2, 1, 0, 8, 7, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.138886}", "{'[4, 6, 1, 0, 0, 2, 1, 0, 8, 7, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.138476}", "{'[4, 6, 1, 0, 0, 2, 1, 0, 8, 7, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.138453}", "{'[4, 6, 1, 0, 0, 2, 1, 0, 8, 7, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.138594}", "{'[4, 6, 1, 0, 0, 2, 1, 0, 8, 7, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.138419}", "{'[4, 6, 1, 0, 0, 2, 1, 0, 8, 7, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.138457}", "{'[4, 6, 1, 0, 0, 2, 1, 0, 8, 7, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.138437}", "{'[4, 6, 1, 0, 0, 2, 1, 0, 8, 7, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.138587}", "{'[4, 6, 1, 0, 0, 2, 1, 0, 8, 7, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.138501}", "{'[4, 6, 1, 0, 0, 2, 1, 0, 8, 7, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.138519}", "{'[4, 6, 1, 0, 0, 2, 1, 0, 8, 7, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.138811}", "{'[4, 6, 1, 0, 0, 2, 1, 0, 8, 7, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.138542}", "{'[4, 6, 1, 0, 0, 2, 1, 0, 8, 7, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.138688}", "{'[4, 6, 1, 0, 0, 2, 1, 0, 8, 7, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.138422}", "{'[4, 6, 1, 0, 0, 2, 1, 0, 8, 7, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.13846}", "{'[4, 6, 1, 0, 0, 2, 1, 0, 8, 7, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.13865}", "{'[4, 6, 1, 0, 0, 2, 1, 0, 8, 7, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.138394}", "{'[4, 6, 1, 0, 0, 2, 1, 0, 8, 7, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.138381}", "{'[4, 6, 1, 0, 0, 2, 1, 0, 8, 7, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.138481}", "{'[4, 6, 1, 0, 0, 2, 1, 0, 8, 7, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.138599}", "{'[4, 6, 1, 0, 0, 2, 1, 0, 8, 7, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.138452}", "{'[4, 6, 1, 0, 0, 2, 1, 0, 8, 7, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.138409}", "{'[4, 6, 1, 0, 0, 2, 1, 0, 8, 7, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.138432}", "{'[4, 6, 1, 0, 0, 2, 1, 0, 8, 7, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.138622}", "{'[4, 6, 1, 0, 0, 2, 1, 0, 8, 7, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.138454}", "{'[4, 6, 1, 0, 0, 2, 1, 0, 8, 7, 0, 1, 0, 0, 0, 0, 1, 1]' : 0.138701}"]
returning from 'run': {'[4, 6, 1, 0, 0, 2, 1, 0, 8, 7, 0, 1, 0, 0, 0, 0, 1, 1]': ([0.164147, 0.163371, 0.140997, 0.138551, 0.138886, 0.138476, 0.138453, 0.138594, 0.138419, 0.138457, 0.138437, 0.138587, 0.138501, 0.138519, 0.138811, 0.138542, 0.138688, 0.138422, 0.13846, 0.13865, 0.138394, 0.138381, 0.138481, 0.138599, 0.138452, 0.138409, 0.138432, 0.138622, 0.138454, 0.138701], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 6, 1, 0, 0, 2, 1, 0, 8, 7, 0, 1, 0, 0, 0, 0, 1, 1]': ([0.164147, 0.163371, 0.140997, 0.138551, 0.138886, 0.138476, 0.138453, 0.138594, 0.138419, 0.138457, 0.138437, 0.138587, 0.138501, 0.138519, 0.138811, 0.138542, 0.138688, 0.138422, 0.13846, 0.13865, 0.138394, 0.138381, 0.138481, 0.138599, 0.138452, 0.138409, 0.138432, 0.138622, 0.138454, 0.138701], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	4
        Additions: 		1237
        Multiplications: 	352
        Divisions: 		0
        Logical: 		0
        Reads: 			1951
        Writes: 		205
        Comparisons:		10
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest57.exe __orio_perftest57.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest57.exe  
Program Test Output: 
{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 6, 11, 0, 1, 0, 1, 0, 1, 1]' : 0.127249}
{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 6, 11, 0, 1, 0, 1, 0, 1, 1]' : 0.128928}
{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 6, 11, 0, 1, 0, 1, 0, 1, 1]' : 0.127172}
{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 6, 11, 0, 1, 0, 1, 0, 1, 1]' : 0.127169}
{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 6, 11, 0, 1, 0, 1, 0, 1, 1]' : 0.116151}
{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 6, 11, 0, 1, 0, 1, 0, 1, 1]' : 0.111504}
{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 6, 11, 0, 1, 0, 1, 0, 1, 1]' : 0.110382}
{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 6, 11, 0, 1, 0, 1, 0, 1, 1]' : 0.108294}
{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 6, 11, 0, 1, 0, 1, 0, 1, 1]' : 0.108506}
{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 6, 11, 0, 1, 0, 1, 0, 1, 1]' : 0.108722}
{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 6, 11, 0, 1, 0, 1, 0, 1, 1]' : 0.108937}
{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 6, 11, 0, 1, 0, 1, 0, 1, 1]' : 0.111287}
{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 6, 11, 0, 1, 0, 1, 0, 1, 1]' : 0.111256}
{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 6, 11, 0, 1, 0, 1, 0, 1, 1]' : 0.111286}
{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 6, 11, 0, 1, 0, 1, 0, 1, 1]' : 0.111128}
{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 6, 11, 0, 1, 0, 1, 0, 1, 1]' : 0.11174}
{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 6, 11, 0, 1, 0, 1, 0, 1, 1]' : 0.111219}
{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 6, 11, 0, 1, 0, 1, 0, 1, 1]' : 0.111386}
{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 6, 11, 0, 1, 0, 1, 0, 1, 1]' : 0.109617}
{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 6, 11, 0, 1, 0, 1, 0, 1, 1]' : 0.108939}
{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 6, 11, 0, 1, 0, 1, 0, 1, 1]' : 0.1115}
{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 6, 11, 0, 1, 0, 1, 0, 1, 1]' : 0.111288}
{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 6, 11, 0, 1, 0, 1, 0, 1, 1]' : 0.111127}
{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 6, 11, 0, 1, 0, 1, 0, 1, 1]' : 0.111266}
{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 6, 11, 0, 1, 0, 1, 0, 1, 1]' : 0.113397}
{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 6, 11, 0, 1, 0, 1, 0, 1, 1]' : 0.114074}
{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 6, 11, 0, 1, 0, 1, 0, 1, 1]' : 0.113887}
{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 6, 11, 0, 1, 0, 1, 0, 1, 1]' : 0.114051}
{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 6, 11, 0, 1, 0, 1, 0, 1, 1]' : 0.114059}
{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 6, 11, 0, 1, 0, 1, 0, 1, 1]' : 0.113958}

out:
 ["{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 6, 11, 0, 1, 0, 1, 0, 1, 1]' : 0.127249}", "{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 6, 11, 0, 1, 0, 1, 0, 1, 1]' : 0.128928}", "{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 6, 11, 0, 1, 0, 1, 0, 1, 1]' : 0.127172}", "{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 6, 11, 0, 1, 0, 1, 0, 1, 1]' : 0.127169}", "{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 6, 11, 0, 1, 0, 1, 0, 1, 1]' : 0.116151}", "{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 6, 11, 0, 1, 0, 1, 0, 1, 1]' : 0.111504}", "{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 6, 11, 0, 1, 0, 1, 0, 1, 1]' : 0.110382}", "{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 6, 11, 0, 1, 0, 1, 0, 1, 1]' : 0.108294}", "{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 6, 11, 0, 1, 0, 1, 0, 1, 1]' : 0.108506}", "{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 6, 11, 0, 1, 0, 1, 0, 1, 1]' : 0.108722}", "{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 6, 11, 0, 1, 0, 1, 0, 1, 1]' : 0.108937}", "{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 6, 11, 0, 1, 0, 1, 0, 1, 1]' : 0.111287}", "{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 6, 11, 0, 1, 0, 1, 0, 1, 1]' : 0.111256}", "{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 6, 11, 0, 1, 0, 1, 0, 1, 1]' : 0.111286}", "{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 6, 11, 0, 1, 0, 1, 0, 1, 1]' : 0.111128}", "{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 6, 11, 0, 1, 0, 1, 0, 1, 1]' : 0.11174}", "{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 6, 11, 0, 1, 0, 1, 0, 1, 1]' : 0.111219}", "{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 6, 11, 0, 1, 0, 1, 0, 1, 1]' : 0.111386}", "{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 6, 11, 0, 1, 0, 1, 0, 1, 1]' : 0.109617}", "{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 6, 11, 0, 1, 0, 1, 0, 1, 1]' : 0.108939}", "{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 6, 11, 0, 1, 0, 1, 0, 1, 1]' : 0.1115}", "{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 6, 11, 0, 1, 0, 1, 0, 1, 1]' : 0.111288}", "{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 6, 11, 0, 1, 0, 1, 0, 1, 1]' : 0.111127}", "{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 6, 11, 0, 1, 0, 1, 0, 1, 1]' : 0.111266}", "{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 6, 11, 0, 1, 0, 1, 0, 1, 1]' : 0.113397}", "{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 6, 11, 0, 1, 0, 1, 0, 1, 1]' : 0.114074}", "{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 6, 11, 0, 1, 0, 1, 0, 1, 1]' : 0.113887}", "{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 6, 11, 0, 1, 0, 1, 0, 1, 1]' : 0.114051}", "{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 6, 11, 0, 1, 0, 1, 0, 1, 1]' : 0.114059}", "{'[0, 6, 2, 0, 0, 1, 1, 0, 0, 6, 11, 0, 1, 0, 1, 0, 1, 1]' : 0.113958}"]
returning from 'run': {'[0, 6, 2, 0, 0, 1, 1, 0, 0, 6, 11, 0, 1, 0, 1, 0, 1, 1]': ([0.127249, 0.128928, 0.127172, 0.127169, 0.116151, 0.111504, 0.110382, 0.108294, 0.108506, 0.108722, 0.108937, 0.111287, 0.111256, 0.111286, 0.111128, 0.11174, 0.111219, 0.111386, 0.109617, 0.108939, 0.1115, 0.111288, 0.111127, 0.111266, 0.113397, 0.114074, 0.113887, 0.114051, 0.114059, 0.113958], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 2, 0, 0, 1, 1, 0, 0, 6, 11, 0, 1, 0, 1, 0, 1, 1]': ([0.127249, 0.128928, 0.127172, 0.127169, 0.116151, 0.111504, 0.110382, 0.108294, 0.108506, 0.108722, 0.108937, 0.111287, 0.111256, 0.111286, 0.111128, 0.11174, 0.111219, 0.111386, 0.109617, 0.108939, 0.1115, 0.111288, 0.111127, 0.111266, 0.113397, 0.114074, 0.113887, 0.114051, 0.114059, 0.113958], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	40
        Max loop nest depth: 	4
        Additions: 		2123
        Multiplications: 	720
        Divisions: 		0
        Logical: 		0
        Reads: 			4734
        Writes: 		1078
        Comparisons:		40
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest58.exe __orio_perftest58.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest58.exe  
Program Test Output: 
{'[1, 6, 0, 0, 0, 5, 1, 0, 6, 7, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.11494}
{'[1, 6, 0, 0, 0, 5, 1, 0, 6, 7, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.115043}
{'[1, 6, 0, 0, 0, 5, 1, 0, 6, 7, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.114813}
{'[1, 6, 0, 0, 0, 5, 1, 0, 6, 7, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.114839}
{'[1, 6, 0, 0, 0, 5, 1, 0, 6, 7, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.11512}
{'[1, 6, 0, 0, 0, 5, 1, 0, 6, 7, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.115061}
{'[1, 6, 0, 0, 0, 5, 1, 0, 6, 7, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.11512}
{'[1, 6, 0, 0, 0, 5, 1, 0, 6, 7, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.114799}
{'[1, 6, 0, 0, 0, 5, 1, 0, 6, 7, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.114805}
{'[1, 6, 0, 0, 0, 5, 1, 0, 6, 7, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.114886}
{'[1, 6, 0, 0, 0, 5, 1, 0, 6, 7, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.114886}
{'[1, 6, 0, 0, 0, 5, 1, 0, 6, 7, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.114825}
{'[1, 6, 0, 0, 0, 5, 1, 0, 6, 7, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.115008}
{'[1, 6, 0, 0, 0, 5, 1, 0, 6, 7, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.11502}
{'[1, 6, 0, 0, 0, 5, 1, 0, 6, 7, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.115123}
{'[1, 6, 0, 0, 0, 5, 1, 0, 6, 7, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.115064}
{'[1, 6, 0, 0, 0, 5, 1, 0, 6, 7, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.114663}
{'[1, 6, 0, 0, 0, 5, 1, 0, 6, 7, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.11484}
{'[1, 6, 0, 0, 0, 5, 1, 0, 6, 7, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.1149}
{'[1, 6, 0, 0, 0, 5, 1, 0, 6, 7, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.114811}
{'[1, 6, 0, 0, 0, 5, 1, 0, 6, 7, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.114869}
{'[1, 6, 0, 0, 0, 5, 1, 0, 6, 7, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.115066}
{'[1, 6, 0, 0, 0, 5, 1, 0, 6, 7, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.114859}
{'[1, 6, 0, 0, 0, 5, 1, 0, 6, 7, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.114914}
{'[1, 6, 0, 0, 0, 5, 1, 0, 6, 7, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.115028}
{'[1, 6, 0, 0, 0, 5, 1, 0, 6, 7, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.115029}
{'[1, 6, 0, 0, 0, 5, 1, 0, 6, 7, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.114872}
{'[1, 6, 0, 0, 0, 5, 1, 0, 6, 7, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.114996}
{'[1, 6, 0, 0, 0, 5, 1, 0, 6, 7, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.114738}
{'[1, 6, 0, 0, 0, 5, 1, 0, 6, 7, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.114801}

out:
 ["{'[1, 6, 0, 0, 0, 5, 1, 0, 6, 7, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.11494}", "{'[1, 6, 0, 0, 0, 5, 1, 0, 6, 7, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.115043}", "{'[1, 6, 0, 0, 0, 5, 1, 0, 6, 7, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.114813}", "{'[1, 6, 0, 0, 0, 5, 1, 0, 6, 7, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.114839}", "{'[1, 6, 0, 0, 0, 5, 1, 0, 6, 7, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.11512}", "{'[1, 6, 0, 0, 0, 5, 1, 0, 6, 7, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.115061}", "{'[1, 6, 0, 0, 0, 5, 1, 0, 6, 7, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.11512}", "{'[1, 6, 0, 0, 0, 5, 1, 0, 6, 7, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.114799}", "{'[1, 6, 0, 0, 0, 5, 1, 0, 6, 7, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.114805}", "{'[1, 6, 0, 0, 0, 5, 1, 0, 6, 7, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.114886}", "{'[1, 6, 0, 0, 0, 5, 1, 0, 6, 7, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.114886}", "{'[1, 6, 0, 0, 0, 5, 1, 0, 6, 7, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.114825}", "{'[1, 6, 0, 0, 0, 5, 1, 0, 6, 7, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.115008}", "{'[1, 6, 0, 0, 0, 5, 1, 0, 6, 7, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.11502}", "{'[1, 6, 0, 0, 0, 5, 1, 0, 6, 7, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.115123}", "{'[1, 6, 0, 0, 0, 5, 1, 0, 6, 7, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.115064}", "{'[1, 6, 0, 0, 0, 5, 1, 0, 6, 7, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.114663}", "{'[1, 6, 0, 0, 0, 5, 1, 0, 6, 7, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.11484}", "{'[1, 6, 0, 0, 0, 5, 1, 0, 6, 7, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.1149}", "{'[1, 6, 0, 0, 0, 5, 1, 0, 6, 7, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.114811}", "{'[1, 6, 0, 0, 0, 5, 1, 0, 6, 7, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.114869}", "{'[1, 6, 0, 0, 0, 5, 1, 0, 6, 7, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.115066}", "{'[1, 6, 0, 0, 0, 5, 1, 0, 6, 7, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.114859}", "{'[1, 6, 0, 0, 0, 5, 1, 0, 6, 7, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.114914}", "{'[1, 6, 0, 0, 0, 5, 1, 0, 6, 7, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.115028}", "{'[1, 6, 0, 0, 0, 5, 1, 0, 6, 7, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.115029}", "{'[1, 6, 0, 0, 0, 5, 1, 0, 6, 7, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.114872}", "{'[1, 6, 0, 0, 0, 5, 1, 0, 6, 7, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.114996}", "{'[1, 6, 0, 0, 0, 5, 1, 0, 6, 7, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.114738}", "{'[1, 6, 0, 0, 0, 5, 1, 0, 6, 7, 0, 29, 0, 0, 1, 1, 1, 0]' : 0.114801}"]
returning from 'run': {'[1, 6, 0, 0, 0, 5, 1, 0, 6, 7, 0, 29, 0, 0, 1, 1, 1, 0]': ([0.11494, 0.115043, 0.114813, 0.114839, 0.11512, 0.115061, 0.11512, 0.114799, 0.114805, 0.114886, 0.114886, 0.114825, 0.115008, 0.11502, 0.115123, 0.115064, 0.114663, 0.11484, 0.1149, 0.114811, 0.114869, 0.115066, 0.114859, 0.114914, 0.115028, 0.115029, 0.114872, 0.114996, 0.114738, 0.114801], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 6, 0, 0, 0, 5, 1, 0, 6, 7, 0, 29, 0, 0, 1, 1, 1, 0]': ([0.11494, 0.115043, 0.114813, 0.114839, 0.11512, 0.115061, 0.11512, 0.114799, 0.114805, 0.114886, 0.114886, 0.114825, 0.115008, 0.11502, 0.115123, 0.115064, 0.114663, 0.11484, 0.1149, 0.114811, 0.114869, 0.115066, 0.114859, 0.114914, 0.115028, 0.115029, 0.114872, 0.114996, 0.114738, 0.114801], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		205
        Multiplications: 	54
        Divisions: 		0
        Logical: 		0
        Reads: 			438
        Writes: 		84
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest59.exe __orio_perftest59.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest59.exe  
Program Test Output: 
{'[6, 6, 6, 0, 0, 0, 1, 0, 28, 0, 16, 7, 0, 0, 0, 0, 1, 0]' : 0.258023}
{'[6, 6, 6, 0, 0, 0, 1, 0, 28, 0, 16, 7, 0, 0, 0, 0, 1, 0]' : 0.219434}
{'[6, 6, 6, 0, 0, 0, 1, 0, 28, 0, 16, 7, 0, 0, 0, 0, 1, 0]' : 0.216969}
{'[6, 6, 6, 0, 0, 0, 1, 0, 28, 0, 16, 7, 0, 0, 0, 0, 1, 0]' : 0.216936}
{'[6, 6, 6, 0, 0, 0, 1, 0, 28, 0, 16, 7, 0, 0, 0, 0, 1, 0]' : 0.216984}
{'[6, 6, 6, 0, 0, 0, 1, 0, 28, 0, 16, 7, 0, 0, 0, 0, 1, 0]' : 0.21695}
{'[6, 6, 6, 0, 0, 0, 1, 0, 28, 0, 16, 7, 0, 0, 0, 0, 1, 0]' : 0.216953}
{'[6, 6, 6, 0, 0, 0, 1, 0, 28, 0, 16, 7, 0, 0, 0, 0, 1, 0]' : 0.216955}
{'[6, 6, 6, 0, 0, 0, 1, 0, 28, 0, 16, 7, 0, 0, 0, 0, 1, 0]' : 0.217418}
{'[6, 6, 6, 0, 0, 0, 1, 0, 28, 0, 16, 7, 0, 0, 0, 0, 1, 0]' : 0.216953}
{'[6, 6, 6, 0, 0, 0, 1, 0, 28, 0, 16, 7, 0, 0, 0, 0, 1, 0]' : 0.21699}
{'[6, 6, 6, 0, 0, 0, 1, 0, 28, 0, 16, 7, 0, 0, 0, 0, 1, 0]' : 0.217446}
{'[6, 6, 6, 0, 0, 0, 1, 0, 28, 0, 16, 7, 0, 0, 0, 0, 1, 0]' : 0.216964}
{'[6, 6, 6, 0, 0, 0, 1, 0, 28, 0, 16, 7, 0, 0, 0, 0, 1, 0]' : 0.217015}
{'[6, 6, 6, 0, 0, 0, 1, 0, 28, 0, 16, 7, 0, 0, 0, 0, 1, 0]' : 0.216963}
{'[6, 6, 6, 0, 0, 0, 1, 0, 28, 0, 16, 7, 0, 0, 0, 0, 1, 0]' : 0.216988}
{'[6, 6, 6, 0, 0, 0, 1, 0, 28, 0, 16, 7, 0, 0, 0, 0, 1, 0]' : 0.217173}
{'[6, 6, 6, 0, 0, 0, 1, 0, 28, 0, 16, 7, 0, 0, 0, 0, 1, 0]' : 0.217299}
{'[6, 6, 6, 0, 0, 0, 1, 0, 28, 0, 16, 7, 0, 0, 0, 0, 1, 0]' : 0.217036}
{'[6, 6, 6, 0, 0, 0, 1, 0, 28, 0, 16, 7, 0, 0, 0, 0, 1, 0]' : 0.217005}
{'[6, 6, 6, 0, 0, 0, 1, 0, 28, 0, 16, 7, 0, 0, 0, 0, 1, 0]' : 0.216972}
{'[6, 6, 6, 0, 0, 0, 1, 0, 28, 0, 16, 7, 0, 0, 0, 0, 1, 0]' : 0.21696}
{'[6, 6, 6, 0, 0, 0, 1, 0, 28, 0, 16, 7, 0, 0, 0, 0, 1, 0]' : 0.217201}
{'[6, 6, 6, 0, 0, 0, 1, 0, 28, 0, 16, 7, 0, 0, 0, 0, 1, 0]' : 0.217009}
{'[6, 6, 6, 0, 0, 0, 1, 0, 28, 0, 16, 7, 0, 0, 0, 0, 1, 0]' : 0.217017}
{'[6, 6, 6, 0, 0, 0, 1, 0, 28, 0, 16, 7, 0, 0, 0, 0, 1, 0]' : 0.217023}
{'[6, 6, 6, 0, 0, 0, 1, 0, 28, 0, 16, 7, 0, 0, 0, 0, 1, 0]' : 0.217175}
{'[6, 6, 6, 0, 0, 0, 1, 0, 28, 0, 16, 7, 0, 0, 0, 0, 1, 0]' : 0.217058}
{'[6, 6, 6, 0, 0, 0, 1, 0, 28, 0, 16, 7, 0, 0, 0, 0, 1, 0]' : 0.216976}
{'[6, 6, 6, 0, 0, 0, 1, 0, 28, 0, 16, 7, 0, 0, 0, 0, 1, 0]' : 0.217275}

out:
 ["{'[6, 6, 6, 0, 0, 0, 1, 0, 28, 0, 16, 7, 0, 0, 0, 0, 1, 0]' : 0.258023}", "{'[6, 6, 6, 0, 0, 0, 1, 0, 28, 0, 16, 7, 0, 0, 0, 0, 1, 0]' : 0.219434}", "{'[6, 6, 6, 0, 0, 0, 1, 0, 28, 0, 16, 7, 0, 0, 0, 0, 1, 0]' : 0.216969}", "{'[6, 6, 6, 0, 0, 0, 1, 0, 28, 0, 16, 7, 0, 0, 0, 0, 1, 0]' : 0.216936}", "{'[6, 6, 6, 0, 0, 0, 1, 0, 28, 0, 16, 7, 0, 0, 0, 0, 1, 0]' : 0.216984}", "{'[6, 6, 6, 0, 0, 0, 1, 0, 28, 0, 16, 7, 0, 0, 0, 0, 1, 0]' : 0.21695}", "{'[6, 6, 6, 0, 0, 0, 1, 0, 28, 0, 16, 7, 0, 0, 0, 0, 1, 0]' : 0.216953}", "{'[6, 6, 6, 0, 0, 0, 1, 0, 28, 0, 16, 7, 0, 0, 0, 0, 1, 0]' : 0.216955}", "{'[6, 6, 6, 0, 0, 0, 1, 0, 28, 0, 16, 7, 0, 0, 0, 0, 1, 0]' : 0.217418}", "{'[6, 6, 6, 0, 0, 0, 1, 0, 28, 0, 16, 7, 0, 0, 0, 0, 1, 0]' : 0.216953}", "{'[6, 6, 6, 0, 0, 0, 1, 0, 28, 0, 16, 7, 0, 0, 0, 0, 1, 0]' : 0.21699}", "{'[6, 6, 6, 0, 0, 0, 1, 0, 28, 0, 16, 7, 0, 0, 0, 0, 1, 0]' : 0.217446}", "{'[6, 6, 6, 0, 0, 0, 1, 0, 28, 0, 16, 7, 0, 0, 0, 0, 1, 0]' : 0.216964}", "{'[6, 6, 6, 0, 0, 0, 1, 0, 28, 0, 16, 7, 0, 0, 0, 0, 1, 0]' : 0.217015}", "{'[6, 6, 6, 0, 0, 0, 1, 0, 28, 0, 16, 7, 0, 0, 0, 0, 1, 0]' : 0.216963}", "{'[6, 6, 6, 0, 0, 0, 1, 0, 28, 0, 16, 7, 0, 0, 0, 0, 1, 0]' : 0.216988}", "{'[6, 6, 6, 0, 0, 0, 1, 0, 28, 0, 16, 7, 0, 0, 0, 0, 1, 0]' : 0.217173}", "{'[6, 6, 6, 0, 0, 0, 1, 0, 28, 0, 16, 7, 0, 0, 0, 0, 1, 0]' : 0.217299}", "{'[6, 6, 6, 0, 0, 0, 1, 0, 28, 0, 16, 7, 0, 0, 0, 0, 1, 0]' : 0.217036}", "{'[6, 6, 6, 0, 0, 0, 1, 0, 28, 0, 16, 7, 0, 0, 0, 0, 1, 0]' : 0.217005}", "{'[6, 6, 6, 0, 0, 0, 1, 0, 28, 0, 16, 7, 0, 0, 0, 0, 1, 0]' : 0.216972}", "{'[6, 6, 6, 0, 0, 0, 1, 0, 28, 0, 16, 7, 0, 0, 0, 0, 1, 0]' : 0.21696}", "{'[6, 6, 6, 0, 0, 0, 1, 0, 28, 0, 16, 7, 0, 0, 0, 0, 1, 0]' : 0.217201}", "{'[6, 6, 6, 0, 0, 0, 1, 0, 28, 0, 16, 7, 0, 0, 0, 0, 1, 0]' : 0.217009}", "{'[6, 6, 6, 0, 0, 0, 1, 0, 28, 0, 16, 7, 0, 0, 0, 0, 1, 0]' : 0.217017}", "{'[6, 6, 6, 0, 0, 0, 1, 0, 28, 0, 16, 7, 0, 0, 0, 0, 1, 0]' : 0.217023}", "{'[6, 6, 6, 0, 0, 0, 1, 0, 28, 0, 16, 7, 0, 0, 0, 0, 1, 0]' : 0.217175}", "{'[6, 6, 6, 0, 0, 0, 1, 0, 28, 0, 16, 7, 0, 0, 0, 0, 1, 0]' : 0.217058}", "{'[6, 6, 6, 0, 0, 0, 1, 0, 28, 0, 16, 7, 0, 0, 0, 0, 1, 0]' : 0.216976}", "{'[6, 6, 6, 0, 0, 0, 1, 0, 28, 0, 16, 7, 0, 0, 0, 0, 1, 0]' : 0.217275}"]
returning from 'run': {'[6, 6, 6, 0, 0, 0, 1, 0, 28, 0, 16, 7, 0, 0, 0, 0, 1, 0]': ([0.258023, 0.219434, 0.216969, 0.216936, 0.216984, 0.21695, 0.216953, 0.216955, 0.217418, 0.216953, 0.21699, 0.217446, 0.216964, 0.217015, 0.216963, 0.216988, 0.217173, 0.217299, 0.217036, 0.217005, 0.216972, 0.21696, 0.217201, 0.217009, 0.217017, 0.217023, 0.217175, 0.217058, 0.216976, 0.217275], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 6, 0, 0, 0, 1, 0, 28, 0, 16, 7, 0, 0, 0, 0, 1, 0]': ([0.258023, 0.219434, 0.216969, 0.216936, 0.216984, 0.21695, 0.216953, 0.216955, 0.217418, 0.216953, 0.21699, 0.217446, 0.216964, 0.217015, 0.216963, 0.216988, 0.217173, 0.217299, 0.217036, 0.217005, 0.216972, 0.21696, 0.217201, 0.217009, 0.217017, 0.217023, 0.217175, 0.217058, 0.216976, 0.217275], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	5
        Additions: 		195
        Multiplications: 	66
        Divisions: 		0
        Logical: 		0
        Reads: 			451
        Writes: 		65
        Comparisons:		10
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest60.exe __orio_perftest60.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest60.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest60.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest60.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest60.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	53
        Max loop nest depth: 	4
        Additions: 		2657
        Multiplications: 	1066
        Divisions: 		0
        Logical: 		0
        Reads: 			5050
        Writes: 		897
        Comparisons:		53
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest61.exe __orio_perftest61.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest61.exe  
Program Test Output: 
{'[0, 6, 6, 0, 0, 5, 1, 0, 29, 11, 6, 0, 0, 0, 2, 1, 0, 1]' : 0.193313}
{'[0, 6, 6, 0, 0, 5, 1, 0, 29, 11, 6, 0, 0, 0, 2, 1, 0, 1]' : 0.19347}
{'[0, 6, 6, 0, 0, 5, 1, 0, 29, 11, 6, 0, 0, 0, 2, 1, 0, 1]' : 0.19338}
{'[0, 6, 6, 0, 0, 5, 1, 0, 29, 11, 6, 0, 0, 0, 2, 1, 0, 1]' : 0.18956}
{'[0, 6, 6, 0, 0, 5, 1, 0, 29, 11, 6, 0, 0, 0, 2, 1, 0, 1]' : 0.189183}
{'[0, 6, 6, 0, 0, 5, 1, 0, 29, 11, 6, 0, 0, 0, 2, 1, 0, 1]' : 0.192094}
{'[0, 6, 6, 0, 0, 5, 1, 0, 29, 11, 6, 0, 0, 0, 2, 1, 0, 1]' : 0.193503}
{'[0, 6, 6, 0, 0, 5, 1, 0, 29, 11, 6, 0, 0, 0, 2, 1, 0, 1]' : 0.189256}
{'[0, 6, 6, 0, 0, 5, 1, 0, 29, 11, 6, 0, 0, 0, 2, 1, 0, 1]' : 0.189189}
{'[0, 6, 6, 0, 0, 5, 1, 0, 29, 11, 6, 0, 0, 0, 2, 1, 0, 1]' : 0.189217}
{'[0, 6, 6, 0, 0, 5, 1, 0, 29, 11, 6, 0, 0, 0, 2, 1, 0, 1]' : 0.191313}
{'[0, 6, 6, 0, 0, 5, 1, 0, 29, 11, 6, 0, 0, 0, 2, 1, 0, 1]' : 0.193412}
{'[0, 6, 6, 0, 0, 5, 1, 0, 29, 11, 6, 0, 0, 0, 2, 1, 0, 1]' : 0.193519}
{'[0, 6, 6, 0, 0, 5, 1, 0, 29, 11, 6, 0, 0, 0, 2, 1, 0, 1]' : 0.193436}
{'[0, 6, 6, 0, 0, 5, 1, 0, 29, 11, 6, 0, 0, 0, 2, 1, 0, 1]' : 0.193444}
{'[0, 6, 6, 0, 0, 5, 1, 0, 29, 11, 6, 0, 0, 0, 2, 1, 0, 1]' : 0.193425}
{'[0, 6, 6, 0, 0, 5, 1, 0, 29, 11, 6, 0, 0, 0, 2, 1, 0, 1]' : 0.19338}
{'[0, 6, 6, 0, 0, 5, 1, 0, 29, 11, 6, 0, 0, 0, 2, 1, 0, 1]' : 0.193457}
{'[0, 6, 6, 0, 0, 5, 1, 0, 29, 11, 6, 0, 0, 0, 2, 1, 0, 1]' : 0.193662}
{'[0, 6, 6, 0, 0, 5, 1, 0, 29, 11, 6, 0, 0, 0, 2, 1, 0, 1]' : 0.193369}
{'[0, 6, 6, 0, 0, 5, 1, 0, 29, 11, 6, 0, 0, 0, 2, 1, 0, 1]' : 0.193597}
{'[0, 6, 6, 0, 0, 5, 1, 0, 29, 11, 6, 0, 0, 0, 2, 1, 0, 1]' : 0.193451}
{'[0, 6, 6, 0, 0, 5, 1, 0, 29, 11, 6, 0, 0, 0, 2, 1, 0, 1]' : 0.193441}
{'[0, 6, 6, 0, 0, 5, 1, 0, 29, 11, 6, 0, 0, 0, 2, 1, 0, 1]' : 0.193523}
{'[0, 6, 6, 0, 0, 5, 1, 0, 29, 11, 6, 0, 0, 0, 2, 1, 0, 1]' : 0.193525}
{'[0, 6, 6, 0, 0, 5, 1, 0, 29, 11, 6, 0, 0, 0, 2, 1, 0, 1]' : 0.193471}
{'[0, 6, 6, 0, 0, 5, 1, 0, 29, 11, 6, 0, 0, 0, 2, 1, 0, 1]' : 0.193483}
{'[0, 6, 6, 0, 0, 5, 1, 0, 29, 11, 6, 0, 0, 0, 2, 1, 0, 1]' : 0.193422}
{'[0, 6, 6, 0, 0, 5, 1, 0, 29, 11, 6, 0, 0, 0, 2, 1, 0, 1]' : 0.191828}
{'[0, 6, 6, 0, 0, 5, 1, 0, 29, 11, 6, 0, 0, 0, 2, 1, 0, 1]' : 0.193418}

out:
 ["{'[0, 6, 6, 0, 0, 5, 1, 0, 29, 11, 6, 0, 0, 0, 2, 1, 0, 1]' : 0.193313}", "{'[0, 6, 6, 0, 0, 5, 1, 0, 29, 11, 6, 0, 0, 0, 2, 1, 0, 1]' : 0.19347}", "{'[0, 6, 6, 0, 0, 5, 1, 0, 29, 11, 6, 0, 0, 0, 2, 1, 0, 1]' : 0.19338}", "{'[0, 6, 6, 0, 0, 5, 1, 0, 29, 11, 6, 0, 0, 0, 2, 1, 0, 1]' : 0.18956}", "{'[0, 6, 6, 0, 0, 5, 1, 0, 29, 11, 6, 0, 0, 0, 2, 1, 0, 1]' : 0.189183}", "{'[0, 6, 6, 0, 0, 5, 1, 0, 29, 11, 6, 0, 0, 0, 2, 1, 0, 1]' : 0.192094}", "{'[0, 6, 6, 0, 0, 5, 1, 0, 29, 11, 6, 0, 0, 0, 2, 1, 0, 1]' : 0.193503}", "{'[0, 6, 6, 0, 0, 5, 1, 0, 29, 11, 6, 0, 0, 0, 2, 1, 0, 1]' : 0.189256}", "{'[0, 6, 6, 0, 0, 5, 1, 0, 29, 11, 6, 0, 0, 0, 2, 1, 0, 1]' : 0.189189}", "{'[0, 6, 6, 0, 0, 5, 1, 0, 29, 11, 6, 0, 0, 0, 2, 1, 0, 1]' : 0.189217}", "{'[0, 6, 6, 0, 0, 5, 1, 0, 29, 11, 6, 0, 0, 0, 2, 1, 0, 1]' : 0.191313}", "{'[0, 6, 6, 0, 0, 5, 1, 0, 29, 11, 6, 0, 0, 0, 2, 1, 0, 1]' : 0.193412}", "{'[0, 6, 6, 0, 0, 5, 1, 0, 29, 11, 6, 0, 0, 0, 2, 1, 0, 1]' : 0.193519}", "{'[0, 6, 6, 0, 0, 5, 1, 0, 29, 11, 6, 0, 0, 0, 2, 1, 0, 1]' : 0.193436}", "{'[0, 6, 6, 0, 0, 5, 1, 0, 29, 11, 6, 0, 0, 0, 2, 1, 0, 1]' : 0.193444}", "{'[0, 6, 6, 0, 0, 5, 1, 0, 29, 11, 6, 0, 0, 0, 2, 1, 0, 1]' : 0.193425}", "{'[0, 6, 6, 0, 0, 5, 1, 0, 29, 11, 6, 0, 0, 0, 2, 1, 0, 1]' : 0.19338}", "{'[0, 6, 6, 0, 0, 5, 1, 0, 29, 11, 6, 0, 0, 0, 2, 1, 0, 1]' : 0.193457}", "{'[0, 6, 6, 0, 0, 5, 1, 0, 29, 11, 6, 0, 0, 0, 2, 1, 0, 1]' : 0.193662}", "{'[0, 6, 6, 0, 0, 5, 1, 0, 29, 11, 6, 0, 0, 0, 2, 1, 0, 1]' : 0.193369}", "{'[0, 6, 6, 0, 0, 5, 1, 0, 29, 11, 6, 0, 0, 0, 2, 1, 0, 1]' : 0.193597}", "{'[0, 6, 6, 0, 0, 5, 1, 0, 29, 11, 6, 0, 0, 0, 2, 1, 0, 1]' : 0.193451}", "{'[0, 6, 6, 0, 0, 5, 1, 0, 29, 11, 6, 0, 0, 0, 2, 1, 0, 1]' : 0.193441}", "{'[0, 6, 6, 0, 0, 5, 1, 0, 29, 11, 6, 0, 0, 0, 2, 1, 0, 1]' : 0.193523}", "{'[0, 6, 6, 0, 0, 5, 1, 0, 29, 11, 6, 0, 0, 0, 2, 1, 0, 1]' : 0.193525}", "{'[0, 6, 6, 0, 0, 5, 1, 0, 29, 11, 6, 0, 0, 0, 2, 1, 0, 1]' : 0.193471}", "{'[0, 6, 6, 0, 0, 5, 1, 0, 29, 11, 6, 0, 0, 0, 2, 1, 0, 1]' : 0.193483}", "{'[0, 6, 6, 0, 0, 5, 1, 0, 29, 11, 6, 0, 0, 0, 2, 1, 0, 1]' : 0.193422}", "{'[0, 6, 6, 0, 0, 5, 1, 0, 29, 11, 6, 0, 0, 0, 2, 1, 0, 1]' : 0.191828}", "{'[0, 6, 6, 0, 0, 5, 1, 0, 29, 11, 6, 0, 0, 0, 2, 1, 0, 1]' : 0.193418}"]
returning from 'run': {'[0, 6, 6, 0, 0, 5, 1, 0, 29, 11, 6, 0, 0, 0, 2, 1, 0, 1]': ([0.193313, 0.19347, 0.19338, 0.18956, 0.189183, 0.192094, 0.193503, 0.189256, 0.189189, 0.189217, 0.191313, 0.193412, 0.193519, 0.193436, 0.193444, 0.193425, 0.19338, 0.193457, 0.193662, 0.193369, 0.193597, 0.193451, 0.193441, 0.193523, 0.193525, 0.193471, 0.193483, 0.193422, 0.191828, 0.193418], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 6, 0, 0, 5, 1, 0, 29, 11, 6, 0, 0, 0, 2, 1, 0, 1]': ([0.193313, 0.19347, 0.19338, 0.18956, 0.189183, 0.192094, 0.193503, 0.189256, 0.189189, 0.189217, 0.191313, 0.193412, 0.193519, 0.193436, 0.193444, 0.193425, 0.19338, 0.193457, 0.193662, 0.193369, 0.193597, 0.193451, 0.193441, 0.193523, 0.193525, 0.193471, 0.193483, 0.193422, 0.191828, 0.193418], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	105
        Max loop nest depth: 	5
        Additions: 		8187
        Multiplications: 	1984
        Divisions: 		0
        Logical: 		0
        Reads: 			11951
        Writes: 		1265
        Comparisons:		105
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest62.exe __orio_perftest62.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest62.exe  
Program Test Output: 
{'[4, 6, 2, 0, 0, 1, 1, 0, 0, 29, 29, 0, 0, 0, 0, 0, 0, 0]' : 0.224044}
{'[4, 6, 2, 0, 0, 1, 1, 0, 0, 29, 29, 0, 0, 0, 0, 0, 0, 0]' : 0.224072}
{'[4, 6, 2, 0, 0, 1, 1, 0, 0, 29, 29, 0, 0, 0, 0, 0, 0, 0]' : 0.223796}
{'[4, 6, 2, 0, 0, 1, 1, 0, 0, 29, 29, 0, 0, 0, 0, 0, 0, 0]' : 0.223775}
{'[4, 6, 2, 0, 0, 1, 1, 0, 0, 29, 29, 0, 0, 0, 0, 0, 0, 0]' : 0.223781}
{'[4, 6, 2, 0, 0, 1, 1, 0, 0, 29, 29, 0, 0, 0, 0, 0, 0, 0]' : 0.223741}
{'[4, 6, 2, 0, 0, 1, 1, 0, 0, 29, 29, 0, 0, 0, 0, 0, 0, 0]' : 0.223934}
{'[4, 6, 2, 0, 0, 1, 1, 0, 0, 29, 29, 0, 0, 0, 0, 0, 0, 0]' : 0.223954}
{'[4, 6, 2, 0, 0, 1, 1, 0, 0, 29, 29, 0, 0, 0, 0, 0, 0, 0]' : 0.22378}
{'[4, 6, 2, 0, 0, 1, 1, 0, 0, 29, 29, 0, 0, 0, 0, 0, 0, 0]' : 0.223522}
{'[4, 6, 2, 0, 0, 1, 1, 0, 0, 29, 29, 0, 0, 0, 0, 0, 0, 0]' : 0.220922}
{'[4, 6, 2, 0, 0, 1, 1, 0, 0, 29, 29, 0, 0, 0, 0, 0, 0, 0]' : 0.223702}
{'[4, 6, 2, 0, 0, 1, 1, 0, 0, 29, 29, 0, 0, 0, 0, 0, 0, 0]' : 0.22403}
{'[4, 6, 2, 0, 0, 1, 1, 0, 0, 29, 29, 0, 0, 0, 0, 0, 0, 0]' : 0.223356}
{'[4, 6, 2, 0, 0, 1, 1, 0, 0, 29, 29, 0, 0, 0, 0, 0, 0, 0]' : 0.223449}
{'[4, 6, 2, 0, 0, 1, 1, 0, 0, 29, 29, 0, 0, 0, 0, 0, 0, 0]' : 0.223216}
{'[4, 6, 2, 0, 0, 1, 1, 0, 0, 29, 29, 0, 0, 0, 0, 0, 0, 0]' : 0.223479}
{'[4, 6, 2, 0, 0, 1, 1, 0, 0, 29, 29, 0, 0, 0, 0, 0, 0, 0]' : 0.218059}
{'[4, 6, 2, 0, 0, 1, 1, 0, 0, 29, 29, 0, 0, 0, 0, 0, 0, 0]' : 0.219084}
{'[4, 6, 2, 0, 0, 1, 1, 0, 0, 29, 29, 0, 0, 0, 0, 0, 0, 0]' : 0.223479}
{'[4, 6, 2, 0, 0, 1, 1, 0, 0, 29, 29, 0, 0, 0, 0, 0, 0, 0]' : 0.223267}
{'[4, 6, 2, 0, 0, 1, 1, 0, 0, 29, 29, 0, 0, 0, 0, 0, 0, 0]' : 0.224672}
{'[4, 6, 2, 0, 0, 1, 1, 0, 0, 29, 29, 0, 0, 0, 0, 0, 0, 0]' : 0.223911}
{'[4, 6, 2, 0, 0, 1, 1, 0, 0, 29, 29, 0, 0, 0, 0, 0, 0, 0]' : 0.223751}
{'[4, 6, 2, 0, 0, 1, 1, 0, 0, 29, 29, 0, 0, 0, 0, 0, 0, 0]' : 0.229248}
{'[4, 6, 2, 0, 0, 1, 1, 0, 0, 29, 29, 0, 0, 0, 0, 0, 0, 0]' : 0.229285}
{'[4, 6, 2, 0, 0, 1, 1, 0, 0, 29, 29, 0, 0, 0, 0, 0, 0, 0]' : 0.226649}
{'[4, 6, 2, 0, 0, 1, 1, 0, 0, 29, 29, 0, 0, 0, 0, 0, 0, 0]' : 0.223555}
{'[4, 6, 2, 0, 0, 1, 1, 0, 0, 29, 29, 0, 0, 0, 0, 0, 0, 0]' : 0.224691}
{'[4, 6, 2, 0, 0, 1, 1, 0, 0, 29, 29, 0, 0, 0, 0, 0, 0, 0]' : 0.229236}

out:
 ["{'[4, 6, 2, 0, 0, 1, 1, 0, 0, 29, 29, 0, 0, 0, 0, 0, 0, 0]' : 0.224044}", "{'[4, 6, 2, 0, 0, 1, 1, 0, 0, 29, 29, 0, 0, 0, 0, 0, 0, 0]' : 0.224072}", "{'[4, 6, 2, 0, 0, 1, 1, 0, 0, 29, 29, 0, 0, 0, 0, 0, 0, 0]' : 0.223796}", "{'[4, 6, 2, 0, 0, 1, 1, 0, 0, 29, 29, 0, 0, 0, 0, 0, 0, 0]' : 0.223775}", "{'[4, 6, 2, 0, 0, 1, 1, 0, 0, 29, 29, 0, 0, 0, 0, 0, 0, 0]' : 0.223781}", "{'[4, 6, 2, 0, 0, 1, 1, 0, 0, 29, 29, 0, 0, 0, 0, 0, 0, 0]' : 0.223741}", "{'[4, 6, 2, 0, 0, 1, 1, 0, 0, 29, 29, 0, 0, 0, 0, 0, 0, 0]' : 0.223934}", "{'[4, 6, 2, 0, 0, 1, 1, 0, 0, 29, 29, 0, 0, 0, 0, 0, 0, 0]' : 0.223954}", "{'[4, 6, 2, 0, 0, 1, 1, 0, 0, 29, 29, 0, 0, 0, 0, 0, 0, 0]' : 0.22378}", "{'[4, 6, 2, 0, 0, 1, 1, 0, 0, 29, 29, 0, 0, 0, 0, 0, 0, 0]' : 0.223522}", "{'[4, 6, 2, 0, 0, 1, 1, 0, 0, 29, 29, 0, 0, 0, 0, 0, 0, 0]' : 0.220922}", "{'[4, 6, 2, 0, 0, 1, 1, 0, 0, 29, 29, 0, 0, 0, 0, 0, 0, 0]' : 0.223702}", "{'[4, 6, 2, 0, 0, 1, 1, 0, 0, 29, 29, 0, 0, 0, 0, 0, 0, 0]' : 0.22403}", "{'[4, 6, 2, 0, 0, 1, 1, 0, 0, 29, 29, 0, 0, 0, 0, 0, 0, 0]' : 0.223356}", "{'[4, 6, 2, 0, 0, 1, 1, 0, 0, 29, 29, 0, 0, 0, 0, 0, 0, 0]' : 0.223449}", "{'[4, 6, 2, 0, 0, 1, 1, 0, 0, 29, 29, 0, 0, 0, 0, 0, 0, 0]' : 0.223216}", "{'[4, 6, 2, 0, 0, 1, 1, 0, 0, 29, 29, 0, 0, 0, 0, 0, 0, 0]' : 0.223479}", "{'[4, 6, 2, 0, 0, 1, 1, 0, 0, 29, 29, 0, 0, 0, 0, 0, 0, 0]' : 0.218059}", "{'[4, 6, 2, 0, 0, 1, 1, 0, 0, 29, 29, 0, 0, 0, 0, 0, 0, 0]' : 0.219084}", "{'[4, 6, 2, 0, 0, 1, 1, 0, 0, 29, 29, 0, 0, 0, 0, 0, 0, 0]' : 0.223479}", "{'[4, 6, 2, 0, 0, 1, 1, 0, 0, 29, 29, 0, 0, 0, 0, 0, 0, 0]' : 0.223267}", "{'[4, 6, 2, 0, 0, 1, 1, 0, 0, 29, 29, 0, 0, 0, 0, 0, 0, 0]' : 0.224672}", "{'[4, 6, 2, 0, 0, 1, 1, 0, 0, 29, 29, 0, 0, 0, 0, 0, 0, 0]' : 0.223911}", "{'[4, 6, 2, 0, 0, 1, 1, 0, 0, 29, 29, 0, 0, 0, 0, 0, 0, 0]' : 0.223751}", "{'[4, 6, 2, 0, 0, 1, 1, 0, 0, 29, 29, 0, 0, 0, 0, 0, 0, 0]' : 0.229248}", "{'[4, 6, 2, 0, 0, 1, 1, 0, 0, 29, 29, 0, 0, 0, 0, 0, 0, 0]' : 0.229285}", "{'[4, 6, 2, 0, 0, 1, 1, 0, 0, 29, 29, 0, 0, 0, 0, 0, 0, 0]' : 0.226649}", "{'[4, 6, 2, 0, 0, 1, 1, 0, 0, 29, 29, 0, 0, 0, 0, 0, 0, 0]' : 0.223555}", "{'[4, 6, 2, 0, 0, 1, 1, 0, 0, 29, 29, 0, 0, 0, 0, 0, 0, 0]' : 0.224691}", "{'[4, 6, 2, 0, 0, 1, 1, 0, 0, 29, 29, 0, 0, 0, 0, 0, 0, 0]' : 0.229236}"]
returning from 'run': {'[4, 6, 2, 0, 0, 1, 1, 0, 0, 29, 29, 0, 0, 0, 0, 0, 0, 0]': ([0.224044, 0.224072, 0.223796, 0.223775, 0.223781, 0.223741, 0.223934, 0.223954, 0.22378, 0.223522, 0.220922, 0.223702, 0.22403, 0.223356, 0.223449, 0.223216, 0.223479, 0.218059, 0.219084, 0.223479, 0.223267, 0.224672, 0.223911, 0.223751, 0.229248, 0.229285, 0.226649, 0.223555, 0.224691, 0.229236], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 6, 2, 0, 0, 1, 1, 0, 0, 29, 29, 0, 0, 0, 0, 0, 0, 0]': ([0.224044, 0.224072, 0.223796, 0.223775, 0.223781, 0.223741, 0.223934, 0.223954, 0.22378, 0.223522, 0.220922, 0.223702, 0.22403, 0.223356, 0.223449, 0.223216, 0.223479, 0.218059, 0.219084, 0.223479, 0.223267, 0.224672, 0.223911, 0.223751, 0.229248, 0.229285, 0.226649, 0.223555, 0.224691, 0.229236], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	104
        Max loop nest depth: 	4
        Additions: 		1979
        Multiplications: 	496
        Divisions: 		0
        Logical: 		0
        Reads: 			3606
        Writes: 		688
        Comparisons:		104
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest63.exe __orio_perftest63.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest63.exe  
Program Test Output: 
{'[4, 6, 6, 0, 0, 0, 1, 0, 7, 29, 5, 0, 0, 0, 0, 1, 0, 1]' : 0.238149}
{'[4, 6, 6, 0, 0, 0, 1, 0, 7, 29, 5, 0, 0, 0, 0, 1, 0, 1]' : 0.236363}
{'[4, 6, 6, 0, 0, 0, 1, 0, 7, 29, 5, 0, 0, 0, 0, 1, 0, 1]' : 0.202743}
{'[4, 6, 6, 0, 0, 0, 1, 0, 7, 29, 5, 0, 0, 0, 0, 1, 0, 1]' : 0.206901}
{'[4, 6, 6, 0, 0, 0, 1, 0, 7, 29, 5, 0, 0, 0, 0, 1, 0, 1]' : 0.207346}
{'[4, 6, 6, 0, 0, 0, 1, 0, 7, 29, 5, 0, 0, 0, 0, 1, 0, 1]' : 0.207565}
{'[4, 6, 6, 0, 0, 0, 1, 0, 7, 29, 5, 0, 0, 0, 0, 1, 0, 1]' : 0.207518}
{'[4, 6, 6, 0, 0, 0, 1, 0, 7, 29, 5, 0, 0, 0, 0, 1, 0, 1]' : 0.20738}
{'[4, 6, 6, 0, 0, 0, 1, 0, 7, 29, 5, 0, 0, 0, 0, 1, 0, 1]' : 0.207446}
{'[4, 6, 6, 0, 0, 0, 1, 0, 7, 29, 5, 0, 0, 0, 0, 1, 0, 1]' : 0.207386}
{'[4, 6, 6, 0, 0, 0, 1, 0, 7, 29, 5, 0, 0, 0, 0, 1, 0, 1]' : 0.207035}
{'[4, 6, 6, 0, 0, 0, 1, 0, 7, 29, 5, 0, 0, 0, 0, 1, 0, 1]' : 0.207582}
{'[4, 6, 6, 0, 0, 0, 1, 0, 7, 29, 5, 0, 0, 0, 0, 1, 0, 1]' : 0.207455}
{'[4, 6, 6, 0, 0, 0, 1, 0, 7, 29, 5, 0, 0, 0, 0, 1, 0, 1]' : 0.207067}
{'[4, 6, 6, 0, 0, 0, 1, 0, 7, 29, 5, 0, 0, 0, 0, 1, 0, 1]' : 0.207011}
{'[4, 6, 6, 0, 0, 0, 1, 0, 7, 29, 5, 0, 0, 0, 0, 1, 0, 1]' : 0.207354}
{'[4, 6, 6, 0, 0, 0, 1, 0, 7, 29, 5, 0, 0, 0, 0, 1, 0, 1]' : 0.207565}
{'[4, 6, 6, 0, 0, 0, 1, 0, 7, 29, 5, 0, 0, 0, 0, 1, 0, 1]' : 0.207836}
{'[4, 6, 6, 0, 0, 0, 1, 0, 7, 29, 5, 0, 0, 0, 0, 1, 0, 1]' : 0.207214}
{'[4, 6, 6, 0, 0, 0, 1, 0, 7, 29, 5, 0, 0, 0, 0, 1, 0, 1]' : 0.203882}
{'[4, 6, 6, 0, 0, 0, 1, 0, 7, 29, 5, 0, 0, 0, 0, 1, 0, 1]' : 0.206977}
{'[4, 6, 6, 0, 0, 0, 1, 0, 7, 29, 5, 0, 0, 0, 0, 1, 0, 1]' : 0.207089}
{'[4, 6, 6, 0, 0, 0, 1, 0, 7, 29, 5, 0, 0, 0, 0, 1, 0, 1]' : 0.207189}
{'[4, 6, 6, 0, 0, 0, 1, 0, 7, 29, 5, 0, 0, 0, 0, 1, 0, 1]' : 0.206954}
{'[4, 6, 6, 0, 0, 0, 1, 0, 7, 29, 5, 0, 0, 0, 0, 1, 0, 1]' : 0.203333}
{'[4, 6, 6, 0, 0, 0, 1, 0, 7, 29, 5, 0, 0, 0, 0, 1, 0, 1]' : 0.207201}
{'[4, 6, 6, 0, 0, 0, 1, 0, 7, 29, 5, 0, 0, 0, 0, 1, 0, 1]' : 0.207339}
{'[4, 6, 6, 0, 0, 0, 1, 0, 7, 29, 5, 0, 0, 0, 0, 1, 0, 1]' : 0.207548}
{'[4, 6, 6, 0, 0, 0, 1, 0, 7, 29, 5, 0, 0, 0, 0, 1, 0, 1]' : 0.206929}
{'[4, 6, 6, 0, 0, 0, 1, 0, 7, 29, 5, 0, 0, 0, 0, 1, 0, 1]' : 0.207107}

out:
 ["{'[4, 6, 6, 0, 0, 0, 1, 0, 7, 29, 5, 0, 0, 0, 0, 1, 0, 1]' : 0.238149}", "{'[4, 6, 6, 0, 0, 0, 1, 0, 7, 29, 5, 0, 0, 0, 0, 1, 0, 1]' : 0.236363}", "{'[4, 6, 6, 0, 0, 0, 1, 0, 7, 29, 5, 0, 0, 0, 0, 1, 0, 1]' : 0.202743}", "{'[4, 6, 6, 0, 0, 0, 1, 0, 7, 29, 5, 0, 0, 0, 0, 1, 0, 1]' : 0.206901}", "{'[4, 6, 6, 0, 0, 0, 1, 0, 7, 29, 5, 0, 0, 0, 0, 1, 0, 1]' : 0.207346}", "{'[4, 6, 6, 0, 0, 0, 1, 0, 7, 29, 5, 0, 0, 0, 0, 1, 0, 1]' : 0.207565}", "{'[4, 6, 6, 0, 0, 0, 1, 0, 7, 29, 5, 0, 0, 0, 0, 1, 0, 1]' : 0.207518}", "{'[4, 6, 6, 0, 0, 0, 1, 0, 7, 29, 5, 0, 0, 0, 0, 1, 0, 1]' : 0.20738}", "{'[4, 6, 6, 0, 0, 0, 1, 0, 7, 29, 5, 0, 0, 0, 0, 1, 0, 1]' : 0.207446}", "{'[4, 6, 6, 0, 0, 0, 1, 0, 7, 29, 5, 0, 0, 0, 0, 1, 0, 1]' : 0.207386}", "{'[4, 6, 6, 0, 0, 0, 1, 0, 7, 29, 5, 0, 0, 0, 0, 1, 0, 1]' : 0.207035}", "{'[4, 6, 6, 0, 0, 0, 1, 0, 7, 29, 5, 0, 0, 0, 0, 1, 0, 1]' : 0.207582}", "{'[4, 6, 6, 0, 0, 0, 1, 0, 7, 29, 5, 0, 0, 0, 0, 1, 0, 1]' : 0.207455}", "{'[4, 6, 6, 0, 0, 0, 1, 0, 7, 29, 5, 0, 0, 0, 0, 1, 0, 1]' : 0.207067}", "{'[4, 6, 6, 0, 0, 0, 1, 0, 7, 29, 5, 0, 0, 0, 0, 1, 0, 1]' : 0.207011}", "{'[4, 6, 6, 0, 0, 0, 1, 0, 7, 29, 5, 0, 0, 0, 0, 1, 0, 1]' : 0.207354}", "{'[4, 6, 6, 0, 0, 0, 1, 0, 7, 29, 5, 0, 0, 0, 0, 1, 0, 1]' : 0.207565}", "{'[4, 6, 6, 0, 0, 0, 1, 0, 7, 29, 5, 0, 0, 0, 0, 1, 0, 1]' : 0.207836}", "{'[4, 6, 6, 0, 0, 0, 1, 0, 7, 29, 5, 0, 0, 0, 0, 1, 0, 1]' : 0.207214}", "{'[4, 6, 6, 0, 0, 0, 1, 0, 7, 29, 5, 0, 0, 0, 0, 1, 0, 1]' : 0.203882}", "{'[4, 6, 6, 0, 0, 0, 1, 0, 7, 29, 5, 0, 0, 0, 0, 1, 0, 1]' : 0.206977}", "{'[4, 6, 6, 0, 0, 0, 1, 0, 7, 29, 5, 0, 0, 0, 0, 1, 0, 1]' : 0.207089}", "{'[4, 6, 6, 0, 0, 0, 1, 0, 7, 29, 5, 0, 0, 0, 0, 1, 0, 1]' : 0.207189}", "{'[4, 6, 6, 0, 0, 0, 1, 0, 7, 29, 5, 0, 0, 0, 0, 1, 0, 1]' : 0.206954}", "{'[4, 6, 6, 0, 0, 0, 1, 0, 7, 29, 5, 0, 0, 0, 0, 1, 0, 1]' : 0.203333}", "{'[4, 6, 6, 0, 0, 0, 1, 0, 7, 29, 5, 0, 0, 0, 0, 1, 0, 1]' : 0.207201}", "{'[4, 6, 6, 0, 0, 0, 1, 0, 7, 29, 5, 0, 0, 0, 0, 1, 0, 1]' : 0.207339}", "{'[4, 6, 6, 0, 0, 0, 1, 0, 7, 29, 5, 0, 0, 0, 0, 1, 0, 1]' : 0.207548}", "{'[4, 6, 6, 0, 0, 0, 1, 0, 7, 29, 5, 0, 0, 0, 0, 1, 0, 1]' : 0.206929}", "{'[4, 6, 6, 0, 0, 0, 1, 0, 7, 29, 5, 0, 0, 0, 0, 1, 0, 1]' : 0.207107}"]
returning from 'run': {'[4, 6, 6, 0, 0, 0, 1, 0, 7, 29, 5, 0, 0, 0, 0, 1, 0, 1]': ([0.238149, 0.236363, 0.202743, 0.206901, 0.207346, 0.207565, 0.207518, 0.20738, 0.207446, 0.207386, 0.207035, 0.207582, 0.207455, 0.207067, 0.207011, 0.207354, 0.207565, 0.207836, 0.207214, 0.203882, 0.206977, 0.207089, 0.207189, 0.206954, 0.203333, 0.207201, 0.207339, 0.207548, 0.206929, 0.207107], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 6, 6, 0, 0, 0, 1, 0, 7, 29, 5, 0, 0, 0, 0, 1, 0, 1]': ([0.238149, 0.236363, 0.202743, 0.206901, 0.207346, 0.207565, 0.207518, 0.20738, 0.207446, 0.207386, 0.207035, 0.207582, 0.207455, 0.207067, 0.207011, 0.207354, 0.207565, 0.207836, 0.207214, 0.203882, 0.206977, 0.207089, 0.207189, 0.206954, 0.203333, 0.207201, 0.207339, 0.207548, 0.206929, 0.207107], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	35
        Max loop nest depth: 	4
        Additions: 		3425
        Multiplications: 	1596
        Divisions: 		0
        Logical: 		0
        Reads: 			6679
        Writes: 		1143
        Comparisons:		35
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest64.exe __orio_perftest64.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest64.exe  
Program Test Output: 
{'[3, 6, 6, 0, 0, 0, 1, 0, 4, 11, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.109825}
{'[3, 6, 6, 0, 0, 0, 1, 0, 4, 11, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.105475}
{'[3, 6, 6, 0, 0, 0, 1, 0, 4, 11, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.104813}
{'[3, 6, 6, 0, 0, 0, 1, 0, 4, 11, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.107171}
{'[3, 6, 6, 0, 0, 0, 1, 0, 4, 11, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.106454}
{'[3, 6, 6, 0, 0, 0, 1, 0, 4, 11, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.103963}
{'[3, 6, 6, 0, 0, 0, 1, 0, 4, 11, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.103862}
{'[3, 6, 6, 0, 0, 0, 1, 0, 4, 11, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.105786}
{'[3, 6, 6, 0, 0, 0, 1, 0, 4, 11, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.107344}
{'[3, 6, 6, 0, 0, 0, 1, 0, 4, 11, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.107134}
{'[3, 6, 6, 0, 0, 0, 1, 0, 4, 11, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.106674}
{'[3, 6, 6, 0, 0, 0, 1, 0, 4, 11, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.104041}
{'[3, 6, 6, 0, 0, 0, 1, 0, 4, 11, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.106812}
{'[3, 6, 6, 0, 0, 0, 1, 0, 4, 11, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.106408}
{'[3, 6, 6, 0, 0, 0, 1, 0, 4, 11, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.104078}
{'[3, 6, 6, 0, 0, 0, 1, 0, 4, 11, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.104194}
{'[3, 6, 6, 0, 0, 0, 1, 0, 4, 11, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.104123}
{'[3, 6, 6, 0, 0, 0, 1, 0, 4, 11, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.107448}
{'[3, 6, 6, 0, 0, 0, 1, 0, 4, 11, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.106938}
{'[3, 6, 6, 0, 0, 0, 1, 0, 4, 11, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.105172}
{'[3, 6, 6, 0, 0, 0, 1, 0, 4, 11, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.105185}
{'[3, 6, 6, 0, 0, 0, 1, 0, 4, 11, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.104955}
{'[3, 6, 6, 0, 0, 0, 1, 0, 4, 11, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.103905}
{'[3, 6, 6, 0, 0, 0, 1, 0, 4, 11, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.103836}
{'[3, 6, 6, 0, 0, 0, 1, 0, 4, 11, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.104182}
{'[3, 6, 6, 0, 0, 0, 1, 0, 4, 11, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.104055}
{'[3, 6, 6, 0, 0, 0, 1, 0, 4, 11, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.10589}
{'[3, 6, 6, 0, 0, 0, 1, 0, 4, 11, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.107051}
{'[3, 6, 6, 0, 0, 0, 1, 0, 4, 11, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.106178}
{'[3, 6, 6, 0, 0, 0, 1, 0, 4, 11, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.104285}

out:
 ["{'[3, 6, 6, 0, 0, 0, 1, 0, 4, 11, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.109825}", "{'[3, 6, 6, 0, 0, 0, 1, 0, 4, 11, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.105475}", "{'[3, 6, 6, 0, 0, 0, 1, 0, 4, 11, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.104813}", "{'[3, 6, 6, 0, 0, 0, 1, 0, 4, 11, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.107171}", "{'[3, 6, 6, 0, 0, 0, 1, 0, 4, 11, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.106454}", "{'[3, 6, 6, 0, 0, 0, 1, 0, 4, 11, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.103963}", "{'[3, 6, 6, 0, 0, 0, 1, 0, 4, 11, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.103862}", "{'[3, 6, 6, 0, 0, 0, 1, 0, 4, 11, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.105786}", "{'[3, 6, 6, 0, 0, 0, 1, 0, 4, 11, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.107344}", "{'[3, 6, 6, 0, 0, 0, 1, 0, 4, 11, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.107134}", "{'[3, 6, 6, 0, 0, 0, 1, 0, 4, 11, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.106674}", "{'[3, 6, 6, 0, 0, 0, 1, 0, 4, 11, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.104041}", "{'[3, 6, 6, 0, 0, 0, 1, 0, 4, 11, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.106812}", "{'[3, 6, 6, 0, 0, 0, 1, 0, 4, 11, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.106408}", "{'[3, 6, 6, 0, 0, 0, 1, 0, 4, 11, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.104078}", "{'[3, 6, 6, 0, 0, 0, 1, 0, 4, 11, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.104194}", "{'[3, 6, 6, 0, 0, 0, 1, 0, 4, 11, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.104123}", "{'[3, 6, 6, 0, 0, 0, 1, 0, 4, 11, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.107448}", "{'[3, 6, 6, 0, 0, 0, 1, 0, 4, 11, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.106938}", "{'[3, 6, 6, 0, 0, 0, 1, 0, 4, 11, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.105172}", "{'[3, 6, 6, 0, 0, 0, 1, 0, 4, 11, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.105185}", "{'[3, 6, 6, 0, 0, 0, 1, 0, 4, 11, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.104955}", "{'[3, 6, 6, 0, 0, 0, 1, 0, 4, 11, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.103905}", "{'[3, 6, 6, 0, 0, 0, 1, 0, 4, 11, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.103836}", "{'[3, 6, 6, 0, 0, 0, 1, 0, 4, 11, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.104182}", "{'[3, 6, 6, 0, 0, 0, 1, 0, 4, 11, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.104055}", "{'[3, 6, 6, 0, 0, 0, 1, 0, 4, 11, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.10589}", "{'[3, 6, 6, 0, 0, 0, 1, 0, 4, 11, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.107051}", "{'[3, 6, 6, 0, 0, 0, 1, 0, 4, 11, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.106178}", "{'[3, 6, 6, 0, 0, 0, 1, 0, 4, 11, 0, 28, 1, 1, 0, 1, 1, 0]' : 0.104285}"]
returning from 'run': {'[3, 6, 6, 0, 0, 0, 1, 0, 4, 11, 0, 28, 1, 1, 0, 1, 1, 0]': ([0.109825, 0.105475, 0.104813, 0.107171, 0.106454, 0.103963, 0.103862, 0.105786, 0.107344, 0.107134, 0.106674, 0.104041, 0.106812, 0.106408, 0.104078, 0.104194, 0.104123, 0.107448, 0.106938, 0.105172, 0.105185, 0.104955, 0.103905, 0.103836, 0.104182, 0.104055, 0.10589, 0.107051, 0.106178, 0.104285], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 6, 6, 0, 0, 0, 1, 0, 4, 11, 0, 28, 1, 1, 0, 1, 1, 0]': ([0.109825, 0.105475, 0.104813, 0.107171, 0.106454, 0.103963, 0.103862, 0.105786, 0.107344, 0.107134, 0.106674, 0.104041, 0.106812, 0.106408, 0.104078, 0.104194, 0.104123, 0.107448, 0.106938, 0.105172, 0.105185, 0.104955, 0.103905, 0.103836, 0.104182, 0.104055, 0.10589, 0.107051, 0.106178, 0.104285], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	5
        Additions: 		372
        Multiplications: 	124
        Divisions: 		0
        Logical: 		0
        Reads: 			829
        Writes: 		181
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest65.exe __orio_perftest65.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest65.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest65.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest65.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest65.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	40
        Max loop nest depth: 	4
        Additions: 		3936
        Multiplications: 	1850
        Divisions: 		0
        Logical: 		0
        Reads: 			7389
        Writes: 		1198
        Comparisons:		40
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest66.exe __orio_perftest66.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest66.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest66.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest66.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest66.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	3
        Additions: 		281
        Multiplications: 	98
        Divisions: 		0
        Logical: 		0
        Reads: 			604
        Writes: 		86
        Comparisons:		8
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest67.exe __orio_perftest67.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest67.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest67.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest67.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest67.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	5
        Additions: 		13585
        Multiplications: 	3762
        Divisions: 		0
        Logical: 		0
        Reads: 			19945
        Writes: 		1950
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest68.exe __orio_perftest68.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest68.exe  
Program Test Output: 
{'[2, 6, 5, 0, 0, 6, 1, 0, 6, 0, 26, 27, 2, 0, 0, 0, 1, 1]' : 0.284833}
{'[2, 6, 5, 0, 0, 6, 1, 0, 6, 0, 26, 27, 2, 0, 0, 0, 1, 1]' : 0.284335}
{'[2, 6, 5, 0, 0, 6, 1, 0, 6, 0, 26, 27, 2, 0, 0, 0, 1, 1]' : 0.278486}
{'[2, 6, 5, 0, 0, 6, 1, 0, 6, 0, 26, 27, 2, 0, 0, 0, 1, 1]' : 0.279562}
{'[2, 6, 5, 0, 0, 6, 1, 0, 6, 0, 26, 27, 2, 0, 0, 0, 1, 1]' : 0.284592}
{'[2, 6, 5, 0, 0, 6, 1, 0, 6, 0, 26, 27, 2, 0, 0, 0, 1, 1]' : 0.282657}
{'[2, 6, 5, 0, 0, 6, 1, 0, 6, 0, 26, 27, 2, 0, 0, 0, 1, 1]' : 0.279571}
{'[2, 6, 5, 0, 0, 6, 1, 0, 6, 0, 26, 27, 2, 0, 0, 0, 1, 1]' : 0.281419}
{'[2, 6, 5, 0, 0, 6, 1, 0, 6, 0, 26, 27, 2, 0, 0, 0, 1, 1]' : 0.281731}
{'[2, 6, 5, 0, 0, 6, 1, 0, 6, 0, 26, 27, 2, 0, 0, 0, 1, 1]' : 0.285102}
{'[2, 6, 5, 0, 0, 6, 1, 0, 6, 0, 26, 27, 2, 0, 0, 0, 1, 1]' : 0.284272}
{'[2, 6, 5, 0, 0, 6, 1, 0, 6, 0, 26, 27, 2, 0, 0, 0, 1, 1]' : 0.282414}
{'[2, 6, 5, 0, 0, 6, 1, 0, 6, 0, 26, 27, 2, 0, 0, 0, 1, 1]' : 0.283674}
{'[2, 6, 5, 0, 0, 6, 1, 0, 6, 0, 26, 27, 2, 0, 0, 0, 1, 1]' : 0.282356}
{'[2, 6, 5, 0, 0, 6, 1, 0, 6, 0, 26, 27, 2, 0, 0, 0, 1, 1]' : 0.283371}
{'[2, 6, 5, 0, 0, 6, 1, 0, 6, 0, 26, 27, 2, 0, 0, 0, 1, 1]' : 0.280414}
{'[2, 6, 5, 0, 0, 6, 1, 0, 6, 0, 26, 27, 2, 0, 0, 0, 1, 1]' : 0.279479}
{'[2, 6, 5, 0, 0, 6, 1, 0, 6, 0, 26, 27, 2, 0, 0, 0, 1, 1]' : 0.283321}
{'[2, 6, 5, 0, 0, 6, 1, 0, 6, 0, 26, 27, 2, 0, 0, 0, 1, 1]' : 0.284058}
{'[2, 6, 5, 0, 0, 6, 1, 0, 6, 0, 26, 27, 2, 0, 0, 0, 1, 1]' : 0.279931}
{'[2, 6, 5, 0, 0, 6, 1, 0, 6, 0, 26, 27, 2, 0, 0, 0, 1, 1]' : 0.278905}
{'[2, 6, 5, 0, 0, 6, 1, 0, 6, 0, 26, 27, 2, 0, 0, 0, 1, 1]' : 0.282895}
{'[2, 6, 5, 0, 0, 6, 1, 0, 6, 0, 26, 27, 2, 0, 0, 0, 1, 1]' : 0.280142}
{'[2, 6, 5, 0, 0, 6, 1, 0, 6, 0, 26, 27, 2, 0, 0, 0, 1, 1]' : 0.279022}
{'[2, 6, 5, 0, 0, 6, 1, 0, 6, 0, 26, 27, 2, 0, 0, 0, 1, 1]' : 0.282582}
{'[2, 6, 5, 0, 0, 6, 1, 0, 6, 0, 26, 27, 2, 0, 0, 0, 1, 1]' : 0.284396}
{'[2, 6, 5, 0, 0, 6, 1, 0, 6, 0, 26, 27, 2, 0, 0, 0, 1, 1]' : 0.279133}
{'[2, 6, 5, 0, 0, 6, 1, 0, 6, 0, 26, 27, 2, 0, 0, 0, 1, 1]' : 0.276942}
{'[2, 6, 5, 0, 0, 6, 1, 0, 6, 0, 26, 27, 2, 0, 0, 0, 1, 1]' : 0.279106}
{'[2, 6, 5, 0, 0, 6, 1, 0, 6, 0, 26, 27, 2, 0, 0, 0, 1, 1]' : 0.281273}

out:
 ["{'[2, 6, 5, 0, 0, 6, 1, 0, 6, 0, 26, 27, 2, 0, 0, 0, 1, 1]' : 0.284833}", "{'[2, 6, 5, 0, 0, 6, 1, 0, 6, 0, 26, 27, 2, 0, 0, 0, 1, 1]' : 0.284335}", "{'[2, 6, 5, 0, 0, 6, 1, 0, 6, 0, 26, 27, 2, 0, 0, 0, 1, 1]' : 0.278486}", "{'[2, 6, 5, 0, 0, 6, 1, 0, 6, 0, 26, 27, 2, 0, 0, 0, 1, 1]' : 0.279562}", "{'[2, 6, 5, 0, 0, 6, 1, 0, 6, 0, 26, 27, 2, 0, 0, 0, 1, 1]' : 0.284592}", "{'[2, 6, 5, 0, 0, 6, 1, 0, 6, 0, 26, 27, 2, 0, 0, 0, 1, 1]' : 0.282657}", "{'[2, 6, 5, 0, 0, 6, 1, 0, 6, 0, 26, 27, 2, 0, 0, 0, 1, 1]' : 0.279571}", "{'[2, 6, 5, 0, 0, 6, 1, 0, 6, 0, 26, 27, 2, 0, 0, 0, 1, 1]' : 0.281419}", "{'[2, 6, 5, 0, 0, 6, 1, 0, 6, 0, 26, 27, 2, 0, 0, 0, 1, 1]' : 0.281731}", "{'[2, 6, 5, 0, 0, 6, 1, 0, 6, 0, 26, 27, 2, 0, 0, 0, 1, 1]' : 0.285102}", "{'[2, 6, 5, 0, 0, 6, 1, 0, 6, 0, 26, 27, 2, 0, 0, 0, 1, 1]' : 0.284272}", "{'[2, 6, 5, 0, 0, 6, 1, 0, 6, 0, 26, 27, 2, 0, 0, 0, 1, 1]' : 0.282414}", "{'[2, 6, 5, 0, 0, 6, 1, 0, 6, 0, 26, 27, 2, 0, 0, 0, 1, 1]' : 0.283674}", "{'[2, 6, 5, 0, 0, 6, 1, 0, 6, 0, 26, 27, 2, 0, 0, 0, 1, 1]' : 0.282356}", "{'[2, 6, 5, 0, 0, 6, 1, 0, 6, 0, 26, 27, 2, 0, 0, 0, 1, 1]' : 0.283371}", "{'[2, 6, 5, 0, 0, 6, 1, 0, 6, 0, 26, 27, 2, 0, 0, 0, 1, 1]' : 0.280414}", "{'[2, 6, 5, 0, 0, 6, 1, 0, 6, 0, 26, 27, 2, 0, 0, 0, 1, 1]' : 0.279479}", "{'[2, 6, 5, 0, 0, 6, 1, 0, 6, 0, 26, 27, 2, 0, 0, 0, 1, 1]' : 0.283321}", "{'[2, 6, 5, 0, 0, 6, 1, 0, 6, 0, 26, 27, 2, 0, 0, 0, 1, 1]' : 0.284058}", "{'[2, 6, 5, 0, 0, 6, 1, 0, 6, 0, 26, 27, 2, 0, 0, 0, 1, 1]' : 0.279931}", "{'[2, 6, 5, 0, 0, 6, 1, 0, 6, 0, 26, 27, 2, 0, 0, 0, 1, 1]' : 0.278905}", "{'[2, 6, 5, 0, 0, 6, 1, 0, 6, 0, 26, 27, 2, 0, 0, 0, 1, 1]' : 0.282895}", "{'[2, 6, 5, 0, 0, 6, 1, 0, 6, 0, 26, 27, 2, 0, 0, 0, 1, 1]' : 0.280142}", "{'[2, 6, 5, 0, 0, 6, 1, 0, 6, 0, 26, 27, 2, 0, 0, 0, 1, 1]' : 0.279022}", "{'[2, 6, 5, 0, 0, 6, 1, 0, 6, 0, 26, 27, 2, 0, 0, 0, 1, 1]' : 0.282582}", "{'[2, 6, 5, 0, 0, 6, 1, 0, 6, 0, 26, 27, 2, 0, 0, 0, 1, 1]' : 0.284396}", "{'[2, 6, 5, 0, 0, 6, 1, 0, 6, 0, 26, 27, 2, 0, 0, 0, 1, 1]' : 0.279133}", "{'[2, 6, 5, 0, 0, 6, 1, 0, 6, 0, 26, 27, 2, 0, 0, 0, 1, 1]' : 0.276942}", "{'[2, 6, 5, 0, 0, 6, 1, 0, 6, 0, 26, 27, 2, 0, 0, 0, 1, 1]' : 0.279106}", "{'[2, 6, 5, 0, 0, 6, 1, 0, 6, 0, 26, 27, 2, 0, 0, 0, 1, 1]' : 0.281273}"]
returning from 'run': {'[2, 6, 5, 0, 0, 6, 1, 0, 6, 0, 26, 27, 2, 0, 0, 0, 1, 1]': ([0.284833, 0.284335, 0.278486, 0.279562, 0.284592, 0.282657, 0.279571, 0.281419, 0.281731, 0.285102, 0.284272, 0.282414, 0.283674, 0.282356, 0.283371, 0.280414, 0.279479, 0.283321, 0.284058, 0.279931, 0.278905, 0.282895, 0.280142, 0.279022, 0.282582, 0.284396, 0.279133, 0.276942, 0.279106, 0.281273], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 6, 5, 0, 0, 6, 1, 0, 6, 0, 26, 27, 2, 0, 0, 0, 1, 1]': ([0.284833, 0.284335, 0.278486, 0.279562, 0.284592, 0.282657, 0.279571, 0.281419, 0.281731, 0.285102, 0.284272, 0.282414, 0.283674, 0.282356, 0.283371, 0.280414, 0.279479, 0.283321, 0.284058, 0.279931, 0.278905, 0.282895, 0.280142, 0.279022, 0.282582, 0.284396, 0.279133, 0.276942, 0.279106, 0.281273], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	75
        Max loop nest depth: 	4
        Additions: 		7672
        Multiplications: 	1938
        Divisions: 		0
        Logical: 		0
        Reads: 			11535
        Writes: 		1256
        Comparisons:		75
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest69.exe __orio_perftest69.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest69.exe  
Program Test Output: 
{'[6, 6, 0, 0, 0, 5, 1, 0, 29, 17, 16, 0, 2, 0, 0, 0, 1, 1]' : 0.32885}
{'[6, 6, 0, 0, 0, 5, 1, 0, 29, 17, 16, 0, 2, 0, 0, 0, 1, 1]' : 0.327695}
{'[6, 6, 0, 0, 0, 5, 1, 0, 29, 17, 16, 0, 2, 0, 0, 0, 1, 1]' : 0.321148}
{'[6, 6, 0, 0, 0, 5, 1, 0, 29, 17, 16, 0, 2, 0, 0, 0, 1, 1]' : 0.328873}
{'[6, 6, 0, 0, 0, 5, 1, 0, 29, 17, 16, 0, 2, 0, 0, 0, 1, 1]' : 0.322512}
{'[6, 6, 0, 0, 0, 5, 1, 0, 29, 17, 16, 0, 2, 0, 0, 0, 1, 1]' : 0.322306}
{'[6, 6, 0, 0, 0, 5, 1, 0, 29, 17, 16, 0, 2, 0, 0, 0, 1, 1]' : 0.328114}
{'[6, 6, 0, 0, 0, 5, 1, 0, 29, 17, 16, 0, 2, 0, 0, 0, 1, 1]' : 0.322994}
{'[6, 6, 0, 0, 0, 5, 1, 0, 29, 17, 16, 0, 2, 0, 0, 0, 1, 1]' : 0.322073}
{'[6, 6, 0, 0, 0, 5, 1, 0, 29, 17, 16, 0, 2, 0, 0, 0, 1, 1]' : 0.322618}
{'[6, 6, 0, 0, 0, 5, 1, 0, 29, 17, 16, 0, 2, 0, 0, 0, 1, 1]' : 0.32174}
{'[6, 6, 0, 0, 0, 5, 1, 0, 29, 17, 16, 0, 2, 0, 0, 0, 1, 1]' : 0.322649}
{'[6, 6, 0, 0, 0, 5, 1, 0, 29, 17, 16, 0, 2, 0, 0, 0, 1, 1]' : 0.32248}
{'[6, 6, 0, 0, 0, 5, 1, 0, 29, 17, 16, 0, 2, 0, 0, 0, 1, 1]' : 0.323019}
{'[6, 6, 0, 0, 0, 5, 1, 0, 29, 17, 16, 0, 2, 0, 0, 0, 1, 1]' : 0.321477}
{'[6, 6, 0, 0, 0, 5, 1, 0, 29, 17, 16, 0, 2, 0, 0, 0, 1, 1]' : 0.319754}
{'[6, 6, 0, 0, 0, 5, 1, 0, 29, 17, 16, 0, 2, 0, 0, 0, 1, 1]' : 0.321213}
{'[6, 6, 0, 0, 0, 5, 1, 0, 29, 17, 16, 0, 2, 0, 0, 0, 1, 1]' : 0.321972}
{'[6, 6, 0, 0, 0, 5, 1, 0, 29, 17, 16, 0, 2, 0, 0, 0, 1, 1]' : 0.324975}
{'[6, 6, 0, 0, 0, 5, 1, 0, 29, 17, 16, 0, 2, 0, 0, 0, 1, 1]' : 0.324933}
{'[6, 6, 0, 0, 0, 5, 1, 0, 29, 17, 16, 0, 2, 0, 0, 0, 1, 1]' : 0.324245}
{'[6, 6, 0, 0, 0, 5, 1, 0, 29, 17, 16, 0, 2, 0, 0, 0, 1, 1]' : 0.325089}
{'[6, 6, 0, 0, 0, 5, 1, 0, 29, 17, 16, 0, 2, 0, 0, 0, 1, 1]' : 0.323695}
{'[6, 6, 0, 0, 0, 5, 1, 0, 29, 17, 16, 0, 2, 0, 0, 0, 1, 1]' : 0.321708}
{'[6, 6, 0, 0, 0, 5, 1, 0, 29, 17, 16, 0, 2, 0, 0, 0, 1, 1]' : 0.323852}
{'[6, 6, 0, 0, 0, 5, 1, 0, 29, 17, 16, 0, 2, 0, 0, 0, 1, 1]' : 0.326089}
{'[6, 6, 0, 0, 0, 5, 1, 0, 29, 17, 16, 0, 2, 0, 0, 0, 1, 1]' : 0.32261}
{'[6, 6, 0, 0, 0, 5, 1, 0, 29, 17, 16, 0, 2, 0, 0, 0, 1, 1]' : 0.319779}
{'[6, 6, 0, 0, 0, 5, 1, 0, 29, 17, 16, 0, 2, 0, 0, 0, 1, 1]' : 0.324568}
{'[6, 6, 0, 0, 0, 5, 1, 0, 29, 17, 16, 0, 2, 0, 0, 0, 1, 1]' : 0.321821}

out:
 ["{'[6, 6, 0, 0, 0, 5, 1, 0, 29, 17, 16, 0, 2, 0, 0, 0, 1, 1]' : 0.32885}", "{'[6, 6, 0, 0, 0, 5, 1, 0, 29, 17, 16, 0, 2, 0, 0, 0, 1, 1]' : 0.327695}", "{'[6, 6, 0, 0, 0, 5, 1, 0, 29, 17, 16, 0, 2, 0, 0, 0, 1, 1]' : 0.321148}", "{'[6, 6, 0, 0, 0, 5, 1, 0, 29, 17, 16, 0, 2, 0, 0, 0, 1, 1]' : 0.328873}", "{'[6, 6, 0, 0, 0, 5, 1, 0, 29, 17, 16, 0, 2, 0, 0, 0, 1, 1]' : 0.322512}", "{'[6, 6, 0, 0, 0, 5, 1, 0, 29, 17, 16, 0, 2, 0, 0, 0, 1, 1]' : 0.322306}", "{'[6, 6, 0, 0, 0, 5, 1, 0, 29, 17, 16, 0, 2, 0, 0, 0, 1, 1]' : 0.328114}", "{'[6, 6, 0, 0, 0, 5, 1, 0, 29, 17, 16, 0, 2, 0, 0, 0, 1, 1]' : 0.322994}", "{'[6, 6, 0, 0, 0, 5, 1, 0, 29, 17, 16, 0, 2, 0, 0, 0, 1, 1]' : 0.322073}", "{'[6, 6, 0, 0, 0, 5, 1, 0, 29, 17, 16, 0, 2, 0, 0, 0, 1, 1]' : 0.322618}", "{'[6, 6, 0, 0, 0, 5, 1, 0, 29, 17, 16, 0, 2, 0, 0, 0, 1, 1]' : 0.32174}", "{'[6, 6, 0, 0, 0, 5, 1, 0, 29, 17, 16, 0, 2, 0, 0, 0, 1, 1]' : 0.322649}", "{'[6, 6, 0, 0, 0, 5, 1, 0, 29, 17, 16, 0, 2, 0, 0, 0, 1, 1]' : 0.32248}", "{'[6, 6, 0, 0, 0, 5, 1, 0, 29, 17, 16, 0, 2, 0, 0, 0, 1, 1]' : 0.323019}", "{'[6, 6, 0, 0, 0, 5, 1, 0, 29, 17, 16, 0, 2, 0, 0, 0, 1, 1]' : 0.321477}", "{'[6, 6, 0, 0, 0, 5, 1, 0, 29, 17, 16, 0, 2, 0, 0, 0, 1, 1]' : 0.319754}", "{'[6, 6, 0, 0, 0, 5, 1, 0, 29, 17, 16, 0, 2, 0, 0, 0, 1, 1]' : 0.321213}", "{'[6, 6, 0, 0, 0, 5, 1, 0, 29, 17, 16, 0, 2, 0, 0, 0, 1, 1]' : 0.321972}", "{'[6, 6, 0, 0, 0, 5, 1, 0, 29, 17, 16, 0, 2, 0, 0, 0, 1, 1]' : 0.324975}", "{'[6, 6, 0, 0, 0, 5, 1, 0, 29, 17, 16, 0, 2, 0, 0, 0, 1, 1]' : 0.324933}", "{'[6, 6, 0, 0, 0, 5, 1, 0, 29, 17, 16, 0, 2, 0, 0, 0, 1, 1]' : 0.324245}", "{'[6, 6, 0, 0, 0, 5, 1, 0, 29, 17, 16, 0, 2, 0, 0, 0, 1, 1]' : 0.325089}", "{'[6, 6, 0, 0, 0, 5, 1, 0, 29, 17, 16, 0, 2, 0, 0, 0, 1, 1]' : 0.323695}", "{'[6, 6, 0, 0, 0, 5, 1, 0, 29, 17, 16, 0, 2, 0, 0, 0, 1, 1]' : 0.321708}", "{'[6, 6, 0, 0, 0, 5, 1, 0, 29, 17, 16, 0, 2, 0, 0, 0, 1, 1]' : 0.323852}", "{'[6, 6, 0, 0, 0, 5, 1, 0, 29, 17, 16, 0, 2, 0, 0, 0, 1, 1]' : 0.326089}", "{'[6, 6, 0, 0, 0, 5, 1, 0, 29, 17, 16, 0, 2, 0, 0, 0, 1, 1]' : 0.32261}", "{'[6, 6, 0, 0, 0, 5, 1, 0, 29, 17, 16, 0, 2, 0, 0, 0, 1, 1]' : 0.319779}", "{'[6, 6, 0, 0, 0, 5, 1, 0, 29, 17, 16, 0, 2, 0, 0, 0, 1, 1]' : 0.324568}", "{'[6, 6, 0, 0, 0, 5, 1, 0, 29, 17, 16, 0, 2, 0, 0, 0, 1, 1]' : 0.321821}"]
returning from 'run': {'[6, 6, 0, 0, 0, 5, 1, 0, 29, 17, 16, 0, 2, 0, 0, 0, 1, 1]': ([0.32885, 0.327695, 0.321148, 0.328873, 0.322512, 0.322306, 0.328114, 0.322994, 0.322073, 0.322618, 0.32174, 0.322649, 0.32248, 0.323019, 0.321477, 0.319754, 0.321213, 0.321972, 0.324975, 0.324933, 0.324245, 0.325089, 0.323695, 0.321708, 0.323852, 0.326089, 0.32261, 0.319779, 0.324568, 0.321821], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 0, 0, 0, 5, 1, 0, 29, 17, 16, 0, 2, 0, 0, 0, 1, 1]': ([0.32885, 0.327695, 0.321148, 0.328873, 0.322512, 0.322306, 0.328114, 0.322994, 0.322073, 0.322618, 0.32174, 0.322649, 0.32248, 0.323019, 0.321477, 0.319754, 0.321213, 0.321972, 0.324975, 0.324933, 0.324245, 0.325089, 0.323695, 0.321708, 0.323852, 0.326089, 0.32261, 0.319779, 0.324568, 0.321821], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	3
        Additions: 		2316
        Multiplications: 	640
        Divisions: 		0
        Logical: 		0
        Reads: 			3542
        Writes: 		357
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest70.exe __orio_perftest70.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest70.exe  
Program Test Output: 
{'[0, 6, 1, 0, 0, 0, 1, 0, 4, 0, 27, 1, 1, 0, 1, 0, 0, 1]' : 0.127627}
{'[0, 6, 1, 0, 0, 0, 1, 0, 4, 0, 27, 1, 1, 0, 1, 0, 0, 1]' : 0.127346}
{'[0, 6, 1, 0, 0, 0, 1, 0, 4, 0, 27, 1, 1, 0, 1, 0, 0, 1]' : 0.123855}
{'[0, 6, 1, 0, 0, 0, 1, 0, 4, 0, 27, 1, 1, 0, 1, 0, 0, 1]' : 0.125119}
{'[0, 6, 1, 0, 0, 0, 1, 0, 4, 0, 27, 1, 1, 0, 1, 0, 0, 1]' : 0.126944}
{'[0, 6, 1, 0, 0, 0, 1, 0, 4, 0, 27, 1, 1, 0, 1, 0, 0, 1]' : 0.127246}
{'[0, 6, 1, 0, 0, 0, 1, 0, 4, 0, 27, 1, 1, 0, 1, 0, 0, 1]' : 0.127248}
{'[0, 6, 1, 0, 0, 0, 1, 0, 4, 0, 27, 1, 1, 0, 1, 0, 0, 1]' : 0.127779}
{'[0, 6, 1, 0, 0, 0, 1, 0, 4, 0, 27, 1, 1, 0, 1, 0, 0, 1]' : 0.127627}
{'[0, 6, 1, 0, 0, 0, 1, 0, 4, 0, 27, 1, 1, 0, 1, 0, 0, 1]' : 0.127462}
{'[0, 6, 1, 0, 0, 0, 1, 0, 4, 0, 27, 1, 1, 0, 1, 0, 0, 1]' : 0.127249}
{'[0, 6, 1, 0, 0, 0, 1, 0, 4, 0, 27, 1, 1, 0, 1, 0, 0, 1]' : 0.129537}
{'[0, 6, 1, 0, 0, 0, 1, 0, 4, 0, 27, 1, 1, 0, 1, 0, 0, 1]' : 0.130281}
{'[0, 6, 1, 0, 0, 0, 1, 0, 4, 0, 27, 1, 1, 0, 1, 0, 0, 1]' : 0.129547}
{'[0, 6, 1, 0, 0, 0, 1, 0, 4, 0, 27, 1, 1, 0, 1, 0, 0, 1]' : 0.127297}
{'[0, 6, 1, 0, 0, 0, 1, 0, 4, 0, 27, 1, 1, 0, 1, 0, 0, 1]' : 0.127697}
{'[0, 6, 1, 0, 0, 0, 1, 0, 4, 0, 27, 1, 1, 0, 1, 0, 0, 1]' : 0.127659}
{'[0, 6, 1, 0, 0, 0, 1, 0, 4, 0, 27, 1, 1, 0, 1, 0, 0, 1]' : 0.127579}
{'[0, 6, 1, 0, 0, 0, 1, 0, 4, 0, 27, 1, 1, 0, 1, 0, 0, 1]' : 0.127331}
{'[0, 6, 1, 0, 0, 0, 1, 0, 4, 0, 27, 1, 1, 0, 1, 0, 0, 1]' : 0.129775}
{'[0, 6, 1, 0, 0, 0, 1, 0, 4, 0, 27, 1, 1, 0, 1, 0, 0, 1]' : 0.130302}
{'[0, 6, 1, 0, 0, 0, 1, 0, 4, 0, 27, 1, 1, 0, 1, 0, 0, 1]' : 0.129225}
{'[0, 6, 1, 0, 0, 0, 1, 0, 4, 0, 27, 1, 1, 0, 1, 0, 0, 1]' : 0.127373}
{'[0, 6, 1, 0, 0, 0, 1, 0, 4, 0, 27, 1, 1, 0, 1, 0, 0, 1]' : 0.127531}
{'[0, 6, 1, 0, 0, 0, 1, 0, 4, 0, 27, 1, 1, 0, 1, 0, 0, 1]' : 0.130087}
{'[0, 6, 1, 0, 0, 0, 1, 0, 4, 0, 27, 1, 1, 0, 1, 0, 0, 1]' : 0.128978}
{'[0, 6, 1, 0, 0, 0, 1, 0, 4, 0, 27, 1, 1, 0, 1, 0, 0, 1]' : 0.127247}
{'[0, 6, 1, 0, 0, 0, 1, 0, 4, 0, 27, 1, 1, 0, 1, 0, 0, 1]' : 0.130292}
{'[0, 6, 1, 0, 0, 0, 1, 0, 4, 0, 27, 1, 1, 0, 1, 0, 0, 1]' : 0.130119}
{'[0, 6, 1, 0, 0, 0, 1, 0, 4, 0, 27, 1, 1, 0, 1, 0, 0, 1]' : 0.128255}

out:
 ["{'[0, 6, 1, 0, 0, 0, 1, 0, 4, 0, 27, 1, 1, 0, 1, 0, 0, 1]' : 0.127627}", "{'[0, 6, 1, 0, 0, 0, 1, 0, 4, 0, 27, 1, 1, 0, 1, 0, 0, 1]' : 0.127346}", "{'[0, 6, 1, 0, 0, 0, 1, 0, 4, 0, 27, 1, 1, 0, 1, 0, 0, 1]' : 0.123855}", "{'[0, 6, 1, 0, 0, 0, 1, 0, 4, 0, 27, 1, 1, 0, 1, 0, 0, 1]' : 0.125119}", "{'[0, 6, 1, 0, 0, 0, 1, 0, 4, 0, 27, 1, 1, 0, 1, 0, 0, 1]' : 0.126944}", "{'[0, 6, 1, 0, 0, 0, 1, 0, 4, 0, 27, 1, 1, 0, 1, 0, 0, 1]' : 0.127246}", "{'[0, 6, 1, 0, 0, 0, 1, 0, 4, 0, 27, 1, 1, 0, 1, 0, 0, 1]' : 0.127248}", "{'[0, 6, 1, 0, 0, 0, 1, 0, 4, 0, 27, 1, 1, 0, 1, 0, 0, 1]' : 0.127779}", "{'[0, 6, 1, 0, 0, 0, 1, 0, 4, 0, 27, 1, 1, 0, 1, 0, 0, 1]' : 0.127627}", "{'[0, 6, 1, 0, 0, 0, 1, 0, 4, 0, 27, 1, 1, 0, 1, 0, 0, 1]' : 0.127462}", "{'[0, 6, 1, 0, 0, 0, 1, 0, 4, 0, 27, 1, 1, 0, 1, 0, 0, 1]' : 0.127249}", "{'[0, 6, 1, 0, 0, 0, 1, 0, 4, 0, 27, 1, 1, 0, 1, 0, 0, 1]' : 0.129537}", "{'[0, 6, 1, 0, 0, 0, 1, 0, 4, 0, 27, 1, 1, 0, 1, 0, 0, 1]' : 0.130281}", "{'[0, 6, 1, 0, 0, 0, 1, 0, 4, 0, 27, 1, 1, 0, 1, 0, 0, 1]' : 0.129547}", "{'[0, 6, 1, 0, 0, 0, 1, 0, 4, 0, 27, 1, 1, 0, 1, 0, 0, 1]' : 0.127297}", "{'[0, 6, 1, 0, 0, 0, 1, 0, 4, 0, 27, 1, 1, 0, 1, 0, 0, 1]' : 0.127697}", "{'[0, 6, 1, 0, 0, 0, 1, 0, 4, 0, 27, 1, 1, 0, 1, 0, 0, 1]' : 0.127659}", "{'[0, 6, 1, 0, 0, 0, 1, 0, 4, 0, 27, 1, 1, 0, 1, 0, 0, 1]' : 0.127579}", "{'[0, 6, 1, 0, 0, 0, 1, 0, 4, 0, 27, 1, 1, 0, 1, 0, 0, 1]' : 0.127331}", "{'[0, 6, 1, 0, 0, 0, 1, 0, 4, 0, 27, 1, 1, 0, 1, 0, 0, 1]' : 0.129775}", "{'[0, 6, 1, 0, 0, 0, 1, 0, 4, 0, 27, 1, 1, 0, 1, 0, 0, 1]' : 0.130302}", "{'[0, 6, 1, 0, 0, 0, 1, 0, 4, 0, 27, 1, 1, 0, 1, 0, 0, 1]' : 0.129225}", "{'[0, 6, 1, 0, 0, 0, 1, 0, 4, 0, 27, 1, 1, 0, 1, 0, 0, 1]' : 0.127373}", "{'[0, 6, 1, 0, 0, 0, 1, 0, 4, 0, 27, 1, 1, 0, 1, 0, 0, 1]' : 0.127531}", "{'[0, 6, 1, 0, 0, 0, 1, 0, 4, 0, 27, 1, 1, 0, 1, 0, 0, 1]' : 0.130087}", "{'[0, 6, 1, 0, 0, 0, 1, 0, 4, 0, 27, 1, 1, 0, 1, 0, 0, 1]' : 0.128978}", "{'[0, 6, 1, 0, 0, 0, 1, 0, 4, 0, 27, 1, 1, 0, 1, 0, 0, 1]' : 0.127247}", "{'[0, 6, 1, 0, 0, 0, 1, 0, 4, 0, 27, 1, 1, 0, 1, 0, 0, 1]' : 0.130292}", "{'[0, 6, 1, 0, 0, 0, 1, 0, 4, 0, 27, 1, 1, 0, 1, 0, 0, 1]' : 0.130119}", "{'[0, 6, 1, 0, 0, 0, 1, 0, 4, 0, 27, 1, 1, 0, 1, 0, 0, 1]' : 0.128255}"]
returning from 'run': {'[0, 6, 1, 0, 0, 0, 1, 0, 4, 0, 27, 1, 1, 0, 1, 0, 0, 1]': ([0.127627, 0.127346, 0.123855, 0.125119, 0.126944, 0.127246, 0.127248, 0.127779, 0.127627, 0.127462, 0.127249, 0.129537, 0.130281, 0.129547, 0.127297, 0.127697, 0.127659, 0.127579, 0.127331, 0.129775, 0.130302, 0.129225, 0.127373, 0.127531, 0.130087, 0.128978, 0.127247, 0.130292, 0.130119, 0.128255], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 1, 0, 0, 0, 1, 0, 4, 0, 27, 1, 1, 0, 1, 0, 0, 1]': ([0.127627, 0.127346, 0.123855, 0.125119, 0.126944, 0.127246, 0.127248, 0.127779, 0.127627, 0.127462, 0.127249, 0.129537, 0.130281, 0.129547, 0.127297, 0.127697, 0.127659, 0.127579, 0.127331, 0.129775, 0.130302, 0.129225, 0.127373, 0.127531, 0.130087, 0.128978, 0.127247, 0.130292, 0.130119, 0.128255], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	5
        Additions: 		190
        Multiplications: 	68
        Divisions: 		0
        Logical: 		0
        Reads: 			520
        Writes: 		128
        Comparisons:		10
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest71.exe __orio_perftest71.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest71.exe  
Program Test Output: 
{'[2, 6, 3, 0, 0, 6, 1, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 1]' : 0.21662}
{'[2, 6, 3, 0, 0, 6, 1, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 1]' : 0.216586}
{'[2, 6, 3, 0, 0, 6, 1, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 1]' : 0.198297}
{'[2, 6, 3, 0, 0, 6, 1, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 1]' : 0.189217}
{'[2, 6, 3, 0, 0, 6, 1, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 1]' : 0.186835}
{'[2, 6, 3, 0, 0, 6, 1, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 1]' : 0.192389}
{'[2, 6, 3, 0, 0, 6, 1, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 1]' : 0.188266}
{'[2, 6, 3, 0, 0, 6, 1, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 1]' : 0.188608}
{'[2, 6, 3, 0, 0, 6, 1, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 1]' : 0.193111}
{'[2, 6, 3, 0, 0, 6, 1, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 1]' : 0.188011}
{'[2, 6, 3, 0, 0, 6, 1, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 1]' : 0.190784}
{'[2, 6, 3, 0, 0, 6, 1, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 1]' : 0.188977}
{'[2, 6, 3, 0, 0, 6, 1, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 1]' : 0.187243}
{'[2, 6, 3, 0, 0, 6, 1, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 1]' : 0.193044}
{'[2, 6, 3, 0, 0, 6, 1, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 1]' : 0.189975}
{'[2, 6, 3, 0, 0, 6, 1, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 1]' : 0.186509}
{'[2, 6, 3, 0, 0, 6, 1, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 1]' : 0.185665}
{'[2, 6, 3, 0, 0, 6, 1, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 1]' : 0.182446}
{'[2, 6, 3, 0, 0, 6, 1, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 1]' : 0.189619}
{'[2, 6, 3, 0, 0, 6, 1, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 1]' : 0.192055}
{'[2, 6, 3, 0, 0, 6, 1, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 1]' : 0.186917}
{'[2, 6, 3, 0, 0, 6, 1, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 1]' : 0.191584}
{'[2, 6, 3, 0, 0, 6, 1, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 1]' : 0.182854}
{'[2, 6, 3, 0, 0, 6, 1, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 1]' : 0.184998}
{'[2, 6, 3, 0, 0, 6, 1, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 1]' : 0.187941}
{'[2, 6, 3, 0, 0, 6, 1, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 1]' : 0.183203}
{'[2, 6, 3, 0, 0, 6, 1, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 1]' : 0.189323}
{'[2, 6, 3, 0, 0, 6, 1, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 1]' : 0.186902}
{'[2, 6, 3, 0, 0, 6, 1, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 1]' : 0.182435}
{'[2, 6, 3, 0, 0, 6, 1, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 1]' : 0.192797}

out:
 ["{'[2, 6, 3, 0, 0, 6, 1, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 1]' : 0.21662}", "{'[2, 6, 3, 0, 0, 6, 1, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 1]' : 0.216586}", "{'[2, 6, 3, 0, 0, 6, 1, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 1]' : 0.198297}", "{'[2, 6, 3, 0, 0, 6, 1, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 1]' : 0.189217}", "{'[2, 6, 3, 0, 0, 6, 1, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 1]' : 0.186835}", "{'[2, 6, 3, 0, 0, 6, 1, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 1]' : 0.192389}", "{'[2, 6, 3, 0, 0, 6, 1, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 1]' : 0.188266}", "{'[2, 6, 3, 0, 0, 6, 1, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 1]' : 0.188608}", "{'[2, 6, 3, 0, 0, 6, 1, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 1]' : 0.193111}", "{'[2, 6, 3, 0, 0, 6, 1, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 1]' : 0.188011}", "{'[2, 6, 3, 0, 0, 6, 1, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 1]' : 0.190784}", "{'[2, 6, 3, 0, 0, 6, 1, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 1]' : 0.188977}", "{'[2, 6, 3, 0, 0, 6, 1, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 1]' : 0.187243}", "{'[2, 6, 3, 0, 0, 6, 1, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 1]' : 0.193044}", "{'[2, 6, 3, 0, 0, 6, 1, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 1]' : 0.189975}", "{'[2, 6, 3, 0, 0, 6, 1, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 1]' : 0.186509}", "{'[2, 6, 3, 0, 0, 6, 1, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 1]' : 0.185665}", "{'[2, 6, 3, 0, 0, 6, 1, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 1]' : 0.182446}", "{'[2, 6, 3, 0, 0, 6, 1, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 1]' : 0.189619}", "{'[2, 6, 3, 0, 0, 6, 1, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 1]' : 0.192055}", "{'[2, 6, 3, 0, 0, 6, 1, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 1]' : 0.186917}", "{'[2, 6, 3, 0, 0, 6, 1, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 1]' : 0.191584}", "{'[2, 6, 3, 0, 0, 6, 1, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 1]' : 0.182854}", "{'[2, 6, 3, 0, 0, 6, 1, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 1]' : 0.184998}", "{'[2, 6, 3, 0, 0, 6, 1, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 1]' : 0.187941}", "{'[2, 6, 3, 0, 0, 6, 1, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 1]' : 0.183203}", "{'[2, 6, 3, 0, 0, 6, 1, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 1]' : 0.189323}", "{'[2, 6, 3, 0, 0, 6, 1, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 1]' : 0.186902}", "{'[2, 6, 3, 0, 0, 6, 1, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 1]' : 0.182435}", "{'[2, 6, 3, 0, 0, 6, 1, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 1]' : 0.192797}"]
returning from 'run': {'[2, 6, 3, 0, 0, 6, 1, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 1]': ([0.21662, 0.216586, 0.198297, 0.189217, 0.186835, 0.192389, 0.188266, 0.188608, 0.193111, 0.188011, 0.190784, 0.188977, 0.187243, 0.193044, 0.189975, 0.186509, 0.185665, 0.182446, 0.189619, 0.192055, 0.186917, 0.191584, 0.182854, 0.184998, 0.187941, 0.183203, 0.189323, 0.186902, 0.182435, 0.192797], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 6, 3, 0, 0, 6, 1, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 1]': ([0.21662, 0.216586, 0.198297, 0.189217, 0.186835, 0.192389, 0.188266, 0.188608, 0.193111, 0.188011, 0.190784, 0.188977, 0.187243, 0.193044, 0.189975, 0.186509, 0.185665, 0.182446, 0.189619, 0.192055, 0.186917, 0.191584, 0.182854, 0.184998, 0.187941, 0.183203, 0.189323, 0.186902, 0.182435, 0.192797], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	4
        Additions: 		321
        Multiplications: 	144
        Divisions: 		0
        Logical: 		0
        Reads: 			665
        Writes: 		125
        Comparisons:		9
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest72.exe __orio_perftest72.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest72.exe  
Program Test Output: 
{'[0, 6, 1, 0, 0, 6, 1, 0, 2, 22, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.12412}
{'[0, 6, 1, 0, 0, 6, 1, 0, 2, 22, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.124076}
{'[0, 6, 1, 0, 0, 6, 1, 0, 2, 22, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.124055}
{'[0, 6, 1, 0, 0, 6, 1, 0, 2, 22, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.113727}
{'[0, 6, 1, 0, 0, 6, 1, 0, 2, 22, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.107827}
{'[0, 6, 1, 0, 0, 6, 1, 0, 2, 22, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.105146}
{'[0, 6, 1, 0, 0, 6, 1, 0, 2, 22, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.105067}
{'[0, 6, 1, 0, 0, 6, 1, 0, 2, 22, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.107689}
{'[0, 6, 1, 0, 0, 6, 1, 0, 2, 22, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.107799}
{'[0, 6, 1, 0, 0, 6, 1, 0, 2, 22, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.105155}
{'[0, 6, 1, 0, 0, 6, 1, 0, 2, 22, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.104887}
{'[0, 6, 1, 0, 0, 6, 1, 0, 2, 22, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.106642}
{'[0, 6, 1, 0, 0, 6, 1, 0, 2, 22, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.110863}
{'[0, 6, 1, 0, 0, 6, 1, 0, 2, 22, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.110899}
{'[0, 6, 1, 0, 0, 6, 1, 0, 2, 22, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.108945}
{'[0, 6, 1, 0, 0, 6, 1, 0, 2, 22, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.108218}
{'[0, 6, 1, 0, 0, 6, 1, 0, 2, 22, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.108283}
{'[0, 6, 1, 0, 0, 6, 1, 0, 2, 22, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.107972}
{'[0, 6, 1, 0, 0, 6, 1, 0, 2, 22, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.106225}
{'[0, 6, 1, 0, 0, 6, 1, 0, 2, 22, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.104938}
{'[0, 6, 1, 0, 0, 6, 1, 0, 2, 22, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.10497}
{'[0, 6, 1, 0, 0, 6, 1, 0, 2, 22, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.110804}
{'[0, 6, 1, 0, 0, 6, 1, 0, 2, 22, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.110833}
{'[0, 6, 1, 0, 0, 6, 1, 0, 2, 22, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.109898}
{'[0, 6, 1, 0, 0, 6, 1, 0, 2, 22, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.108081}
{'[0, 6, 1, 0, 0, 6, 1, 0, 2, 22, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.107241}
{'[0, 6, 1, 0, 0, 6, 1, 0, 2, 22, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.108112}
{'[0, 6, 1, 0, 0, 6, 1, 0, 2, 22, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.107009}
{'[0, 6, 1, 0, 0, 6, 1, 0, 2, 22, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.1052}
{'[0, 6, 1, 0, 0, 6, 1, 0, 2, 22, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.105543}

out:
 ["{'[0, 6, 1, 0, 0, 6, 1, 0, 2, 22, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.12412}", "{'[0, 6, 1, 0, 0, 6, 1, 0, 2, 22, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.124076}", "{'[0, 6, 1, 0, 0, 6, 1, 0, 2, 22, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.124055}", "{'[0, 6, 1, 0, 0, 6, 1, 0, 2, 22, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.113727}", "{'[0, 6, 1, 0, 0, 6, 1, 0, 2, 22, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.107827}", "{'[0, 6, 1, 0, 0, 6, 1, 0, 2, 22, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.105146}", "{'[0, 6, 1, 0, 0, 6, 1, 0, 2, 22, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.105067}", "{'[0, 6, 1, 0, 0, 6, 1, 0, 2, 22, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.107689}", "{'[0, 6, 1, 0, 0, 6, 1, 0, 2, 22, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.107799}", "{'[0, 6, 1, 0, 0, 6, 1, 0, 2, 22, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.105155}", "{'[0, 6, 1, 0, 0, 6, 1, 0, 2, 22, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.104887}", "{'[0, 6, 1, 0, 0, 6, 1, 0, 2, 22, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.106642}", "{'[0, 6, 1, 0, 0, 6, 1, 0, 2, 22, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.110863}", "{'[0, 6, 1, 0, 0, 6, 1, 0, 2, 22, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.110899}", "{'[0, 6, 1, 0, 0, 6, 1, 0, 2, 22, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.108945}", "{'[0, 6, 1, 0, 0, 6, 1, 0, 2, 22, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.108218}", "{'[0, 6, 1, 0, 0, 6, 1, 0, 2, 22, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.108283}", "{'[0, 6, 1, 0, 0, 6, 1, 0, 2, 22, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.107972}", "{'[0, 6, 1, 0, 0, 6, 1, 0, 2, 22, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.106225}", "{'[0, 6, 1, 0, 0, 6, 1, 0, 2, 22, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.104938}", "{'[0, 6, 1, 0, 0, 6, 1, 0, 2, 22, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.10497}", "{'[0, 6, 1, 0, 0, 6, 1, 0, 2, 22, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.110804}", "{'[0, 6, 1, 0, 0, 6, 1, 0, 2, 22, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.110833}", "{'[0, 6, 1, 0, 0, 6, 1, 0, 2, 22, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.109898}", "{'[0, 6, 1, 0, 0, 6, 1, 0, 2, 22, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.108081}", "{'[0, 6, 1, 0, 0, 6, 1, 0, 2, 22, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.107241}", "{'[0, 6, 1, 0, 0, 6, 1, 0, 2, 22, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.108112}", "{'[0, 6, 1, 0, 0, 6, 1, 0, 2, 22, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.107009}", "{'[0, 6, 1, 0, 0, 6, 1, 0, 2, 22, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.1052}", "{'[0, 6, 1, 0, 0, 6, 1, 0, 2, 22, 24, 0, 1, 1, 0, 1, 1, 0]' : 0.105543}"]
returning from 'run': {'[0, 6, 1, 0, 0, 6, 1, 0, 2, 22, 24, 0, 1, 1, 0, 1, 1, 0]': ([0.12412, 0.124076, 0.124055, 0.113727, 0.107827, 0.105146, 0.105067, 0.107689, 0.107799, 0.105155, 0.104887, 0.106642, 0.110863, 0.110899, 0.108945, 0.108218, 0.108283, 0.107972, 0.106225, 0.104938, 0.10497, 0.110804, 0.110833, 0.109898, 0.108081, 0.107241, 0.108112, 0.107009, 0.1052, 0.105543], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 1, 0, 0, 6, 1, 0, 2, 22, 24, 0, 1, 1, 0, 1, 1, 0]': ([0.12412, 0.124076, 0.124055, 0.113727, 0.107827, 0.105146, 0.105067, 0.107689, 0.107799, 0.105155, 0.104887, 0.106642, 0.110863, 0.110899, 0.108945, 0.108218, 0.108283, 0.107972, 0.106225, 0.104938, 0.10497, 0.110804, 0.110833, 0.109898, 0.108081, 0.107241, 0.108112, 0.107009, 0.1052, 0.105543], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	29
        Max loop nest depth: 	4
        Additions: 		792
        Multiplications: 	324
        Divisions: 		0
        Logical: 		0
        Reads: 			1653
        Writes: 		328
        Comparisons:		29
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest73.exe __orio_perftest73.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest73.exe  
Program Test Output: 
{'[6, 6, 0, 0, 0, 6, 1, 0, 26, 8, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.117157}
{'[6, 6, 0, 0, 0, 6, 1, 0, 26, 8, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.117093}
{'[6, 6, 0, 0, 0, 6, 1, 0, 26, 8, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.117065}
{'[6, 6, 0, 0, 0, 6, 1, 0, 26, 8, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.116433}
{'[6, 6, 0, 0, 0, 6, 1, 0, 26, 8, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.107034}
{'[6, 6, 0, 0, 0, 6, 1, 0, 26, 8, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.102259}
{'[6, 6, 0, 0, 0, 6, 1, 0, 26, 8, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.10213}
{'[6, 6, 0, 0, 0, 6, 1, 0, 26, 8, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.102945}
{'[6, 6, 0, 0, 0, 6, 1, 0, 26, 8, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.104523}
{'[6, 6, 0, 0, 0, 6, 1, 0, 26, 8, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.103243}
{'[6, 6, 0, 0, 0, 6, 1, 0, 26, 8, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.102061}
{'[6, 6, 0, 0, 0, 6, 1, 0, 26, 8, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.101006}
{'[6, 6, 0, 0, 0, 6, 1, 0, 26, 8, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.101115}
{'[6, 6, 0, 0, 0, 6, 1, 0, 26, 8, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.102327}
{'[6, 6, 0, 0, 0, 6, 1, 0, 26, 8, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.101794}
{'[6, 6, 0, 0, 0, 6, 1, 0, 26, 8, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.0998189}
{'[6, 6, 0, 0, 0, 6, 1, 0, 26, 8, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.0998881}
{'[6, 6, 0, 0, 0, 6, 1, 0, 26, 8, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.102387}
{'[6, 6, 0, 0, 0, 6, 1, 0, 26, 8, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.104965}
{'[6, 6, 0, 0, 0, 6, 1, 0, 26, 8, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.104967}
{'[6, 6, 0, 0, 0, 6, 1, 0, 26, 8, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.103102}
{'[6, 6, 0, 0, 0, 6, 1, 0, 26, 8, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.100999}
{'[6, 6, 0, 0, 0, 6, 1, 0, 26, 8, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.10156}
{'[6, 6, 0, 0, 0, 6, 1, 0, 26, 8, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.102297}
{'[6, 6, 0, 0, 0, 6, 1, 0, 26, 8, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.101243}
{'[6, 6, 0, 0, 0, 6, 1, 0, 26, 8, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.0998111}
{'[6, 6, 0, 0, 0, 6, 1, 0, 26, 8, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.0995781}
{'[6, 6, 0, 0, 0, 6, 1, 0, 26, 8, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.103476}
{'[6, 6, 0, 0, 0, 6, 1, 0, 26, 8, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.104524}
{'[6, 6, 0, 0, 0, 6, 1, 0, 26, 8, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.102344}

out:
 ["{'[6, 6, 0, 0, 0, 6, 1, 0, 26, 8, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.117157}", "{'[6, 6, 0, 0, 0, 6, 1, 0, 26, 8, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.117093}", "{'[6, 6, 0, 0, 0, 6, 1, 0, 26, 8, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.117065}", "{'[6, 6, 0, 0, 0, 6, 1, 0, 26, 8, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.116433}", "{'[6, 6, 0, 0, 0, 6, 1, 0, 26, 8, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.107034}", "{'[6, 6, 0, 0, 0, 6, 1, 0, 26, 8, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.102259}", "{'[6, 6, 0, 0, 0, 6, 1, 0, 26, 8, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.10213}", "{'[6, 6, 0, 0, 0, 6, 1, 0, 26, 8, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.102945}", "{'[6, 6, 0, 0, 0, 6, 1, 0, 26, 8, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.104523}", "{'[6, 6, 0, 0, 0, 6, 1, 0, 26, 8, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.103243}", "{'[6, 6, 0, 0, 0, 6, 1, 0, 26, 8, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.102061}", "{'[6, 6, 0, 0, 0, 6, 1, 0, 26, 8, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.101006}", "{'[6, 6, 0, 0, 0, 6, 1, 0, 26, 8, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.101115}", "{'[6, 6, 0, 0, 0, 6, 1, 0, 26, 8, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.102327}", "{'[6, 6, 0, 0, 0, 6, 1, 0, 26, 8, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.101794}", "{'[6, 6, 0, 0, 0, 6, 1, 0, 26, 8, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.0998189}", "{'[6, 6, 0, 0, 0, 6, 1, 0, 26, 8, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.0998881}", "{'[6, 6, 0, 0, 0, 6, 1, 0, 26, 8, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.102387}", "{'[6, 6, 0, 0, 0, 6, 1, 0, 26, 8, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.104965}", "{'[6, 6, 0, 0, 0, 6, 1, 0, 26, 8, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.104967}", "{'[6, 6, 0, 0, 0, 6, 1, 0, 26, 8, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.103102}", "{'[6, 6, 0, 0, 0, 6, 1, 0, 26, 8, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.100999}", "{'[6, 6, 0, 0, 0, 6, 1, 0, 26, 8, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.10156}", "{'[6, 6, 0, 0, 0, 6, 1, 0, 26, 8, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.102297}", "{'[6, 6, 0, 0, 0, 6, 1, 0, 26, 8, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.101243}", "{'[6, 6, 0, 0, 0, 6, 1, 0, 26, 8, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.0998111}", "{'[6, 6, 0, 0, 0, 6, 1, 0, 26, 8, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.0995781}", "{'[6, 6, 0, 0, 0, 6, 1, 0, 26, 8, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.103476}", "{'[6, 6, 0, 0, 0, 6, 1, 0, 26, 8, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.104524}", "{'[6, 6, 0, 0, 0, 6, 1, 0, 26, 8, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.102344}"]
returning from 'run': {'[6, 6, 0, 0, 0, 6, 1, 0, 26, 8, 5, 0, 1, 1, 0, 1, 0, 0]': ([0.117157, 0.117093, 0.117065, 0.116433, 0.107034, 0.102259, 0.10213, 0.102945, 0.104523, 0.103243, 0.102061, 0.101006, 0.101115, 0.102327, 0.101794, 0.0998189, 0.0998881, 0.102387, 0.104965, 0.104967, 0.103102, 0.100999, 0.10156, 0.102297, 0.101243, 0.0998111, 0.0995781, 0.103476, 0.104524, 0.102344], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 0, 0, 0, 6, 1, 0, 26, 8, 5, 0, 1, 1, 0, 1, 0, 0]': ([0.117157, 0.117093, 0.117065, 0.116433, 0.107034, 0.102259, 0.10213, 0.102945, 0.104523, 0.103243, 0.102061, 0.101006, 0.101115, 0.102327, 0.101794, 0.0998189, 0.0998881, 0.102387, 0.104965, 0.104967, 0.103102, 0.100999, 0.10156, 0.102297, 0.101243, 0.0998111, 0.0995781, 0.103476, 0.104524, 0.102344], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	33
        Max loop nest depth: 	4
        Additions: 		5050
        Multiplications: 	1332
        Divisions: 		0
        Logical: 		0
        Reads: 			7586
        Writes: 		750
        Comparisons:		33
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest74.exe __orio_perftest74.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest74.exe  
Program Test Output: 
{'[6, 6, 6, 0, 0, 0, 1, 0, 4, 3, 15, 0, 2, 0, 0, 0, 0, 0]' : 0.245974}
{'[6, 6, 6, 0, 0, 0, 1, 0, 4, 3, 15, 0, 2, 0, 0, 0, 0, 0]' : 0.223779}
{'[6, 6, 6, 0, 0, 0, 1, 0, 4, 3, 15, 0, 2, 0, 0, 0, 0, 0]' : 0.219263}
{'[6, 6, 6, 0, 0, 0, 1, 0, 4, 3, 15, 0, 2, 0, 0, 0, 0, 0]' : 0.219535}
{'[6, 6, 6, 0, 0, 0, 1, 0, 4, 3, 15, 0, 2, 0, 0, 0, 0, 0]' : 0.219024}
{'[6, 6, 6, 0, 0, 0, 1, 0, 4, 3, 15, 0, 2, 0, 0, 0, 0, 0]' : 0.220444}
{'[6, 6, 6, 0, 0, 0, 1, 0, 4, 3, 15, 0, 2, 0, 0, 0, 0, 0]' : 0.233622}
{'[6, 6, 6, 0, 0, 0, 1, 0, 4, 3, 15, 0, 2, 0, 0, 0, 0, 0]' : 0.233822}
{'[6, 6, 6, 0, 0, 0, 1, 0, 4, 3, 15, 0, 2, 0, 0, 0, 0, 0]' : 0.231869}
{'[6, 6, 6, 0, 0, 0, 1, 0, 4, 3, 15, 0, 2, 0, 0, 0, 0, 0]' : 0.232653}
{'[6, 6, 6, 0, 0, 0, 1, 0, 4, 3, 15, 0, 2, 0, 0, 0, 0, 0]' : 0.232565}
{'[6, 6, 6, 0, 0, 0, 1, 0, 4, 3, 15, 0, 2, 0, 0, 0, 0, 0]' : 0.233239}
{'[6, 6, 6, 0, 0, 0, 1, 0, 4, 3, 15, 0, 2, 0, 0, 0, 0, 0]' : 0.234369}
{'[6, 6, 6, 0, 0, 0, 1, 0, 4, 3, 15, 0, 2, 0, 0, 0, 0, 0]' : 0.235608}
{'[6, 6, 6, 0, 0, 0, 1, 0, 4, 3, 15, 0, 2, 0, 0, 0, 0, 0]' : 0.233141}
{'[6, 6, 6, 0, 0, 0, 1, 0, 4, 3, 15, 0, 2, 0, 0, 0, 0, 0]' : 0.233792}
{'[6, 6, 6, 0, 0, 0, 1, 0, 4, 3, 15, 0, 2, 0, 0, 0, 0, 0]' : 0.233137}
{'[6, 6, 6, 0, 0, 0, 1, 0, 4, 3, 15, 0, 2, 0, 0, 0, 0, 0]' : 0.233312}
{'[6, 6, 6, 0, 0, 0, 1, 0, 4, 3, 15, 0, 2, 0, 0, 0, 0, 0]' : 0.231678}
{'[6, 6, 6, 0, 0, 0, 1, 0, 4, 3, 15, 0, 2, 0, 0, 0, 0, 0]' : 0.232932}
{'[6, 6, 6, 0, 0, 0, 1, 0, 4, 3, 15, 0, 2, 0, 0, 0, 0, 0]' : 0.23259}
{'[6, 6, 6, 0, 0, 0, 1, 0, 4, 3, 15, 0, 2, 0, 0, 0, 0, 0]' : 0.233768}
{'[6, 6, 6, 0, 0, 0, 1, 0, 4, 3, 15, 0, 2, 0, 0, 0, 0, 0]' : 0.234244}
{'[6, 6, 6, 0, 0, 0, 1, 0, 4, 3, 15, 0, 2, 0, 0, 0, 0, 0]' : 0.234511}
{'[6, 6, 6, 0, 0, 0, 1, 0, 4, 3, 15, 0, 2, 0, 0, 0, 0, 0]' : 0.232701}
{'[6, 6, 6, 0, 0, 0, 1, 0, 4, 3, 15, 0, 2, 0, 0, 0, 0, 0]' : 0.232721}
{'[6, 6, 6, 0, 0, 0, 1, 0, 4, 3, 15, 0, 2, 0, 0, 0, 0, 0]' : 0.23408}
{'[6, 6, 6, 0, 0, 0, 1, 0, 4, 3, 15, 0, 2, 0, 0, 0, 0, 0]' : 0.233141}
{'[6, 6, 6, 0, 0, 0, 1, 0, 4, 3, 15, 0, 2, 0, 0, 0, 0, 0]' : 0.233653}
{'[6, 6, 6, 0, 0, 0, 1, 0, 4, 3, 15, 0, 2, 0, 0, 0, 0, 0]' : 0.233853}

out:
 ["{'[6, 6, 6, 0, 0, 0, 1, 0, 4, 3, 15, 0, 2, 0, 0, 0, 0, 0]' : 0.245974}", "{'[6, 6, 6, 0, 0, 0, 1, 0, 4, 3, 15, 0, 2, 0, 0, 0, 0, 0]' : 0.223779}", "{'[6, 6, 6, 0, 0, 0, 1, 0, 4, 3, 15, 0, 2, 0, 0, 0, 0, 0]' : 0.219263}", "{'[6, 6, 6, 0, 0, 0, 1, 0, 4, 3, 15, 0, 2, 0, 0, 0, 0, 0]' : 0.219535}", "{'[6, 6, 6, 0, 0, 0, 1, 0, 4, 3, 15, 0, 2, 0, 0, 0, 0, 0]' : 0.219024}", "{'[6, 6, 6, 0, 0, 0, 1, 0, 4, 3, 15, 0, 2, 0, 0, 0, 0, 0]' : 0.220444}", "{'[6, 6, 6, 0, 0, 0, 1, 0, 4, 3, 15, 0, 2, 0, 0, 0, 0, 0]' : 0.233622}", "{'[6, 6, 6, 0, 0, 0, 1, 0, 4, 3, 15, 0, 2, 0, 0, 0, 0, 0]' : 0.233822}", "{'[6, 6, 6, 0, 0, 0, 1, 0, 4, 3, 15, 0, 2, 0, 0, 0, 0, 0]' : 0.231869}", "{'[6, 6, 6, 0, 0, 0, 1, 0, 4, 3, 15, 0, 2, 0, 0, 0, 0, 0]' : 0.232653}", "{'[6, 6, 6, 0, 0, 0, 1, 0, 4, 3, 15, 0, 2, 0, 0, 0, 0, 0]' : 0.232565}", "{'[6, 6, 6, 0, 0, 0, 1, 0, 4, 3, 15, 0, 2, 0, 0, 0, 0, 0]' : 0.233239}", "{'[6, 6, 6, 0, 0, 0, 1, 0, 4, 3, 15, 0, 2, 0, 0, 0, 0, 0]' : 0.234369}", "{'[6, 6, 6, 0, 0, 0, 1, 0, 4, 3, 15, 0, 2, 0, 0, 0, 0, 0]' : 0.235608}", "{'[6, 6, 6, 0, 0, 0, 1, 0, 4, 3, 15, 0, 2, 0, 0, 0, 0, 0]' : 0.233141}", "{'[6, 6, 6, 0, 0, 0, 1, 0, 4, 3, 15, 0, 2, 0, 0, 0, 0, 0]' : 0.233792}", "{'[6, 6, 6, 0, 0, 0, 1, 0, 4, 3, 15, 0, 2, 0, 0, 0, 0, 0]' : 0.233137}", "{'[6, 6, 6, 0, 0, 0, 1, 0, 4, 3, 15, 0, 2, 0, 0, 0, 0, 0]' : 0.233312}", "{'[6, 6, 6, 0, 0, 0, 1, 0, 4, 3, 15, 0, 2, 0, 0, 0, 0, 0]' : 0.231678}", "{'[6, 6, 6, 0, 0, 0, 1, 0, 4, 3, 15, 0, 2, 0, 0, 0, 0, 0]' : 0.232932}", "{'[6, 6, 6, 0, 0, 0, 1, 0, 4, 3, 15, 0, 2, 0, 0, 0, 0, 0]' : 0.23259}", "{'[6, 6, 6, 0, 0, 0, 1, 0, 4, 3, 15, 0, 2, 0, 0, 0, 0, 0]' : 0.233768}", "{'[6, 6, 6, 0, 0, 0, 1, 0, 4, 3, 15, 0, 2, 0, 0, 0, 0, 0]' : 0.234244}", "{'[6, 6, 6, 0, 0, 0, 1, 0, 4, 3, 15, 0, 2, 0, 0, 0, 0, 0]' : 0.234511}", "{'[6, 6, 6, 0, 0, 0, 1, 0, 4, 3, 15, 0, 2, 0, 0, 0, 0, 0]' : 0.232701}", "{'[6, 6, 6, 0, 0, 0, 1, 0, 4, 3, 15, 0, 2, 0, 0, 0, 0, 0]' : 0.232721}", "{'[6, 6, 6, 0, 0, 0, 1, 0, 4, 3, 15, 0, 2, 0, 0, 0, 0, 0]' : 0.23408}", "{'[6, 6, 6, 0, 0, 0, 1, 0, 4, 3, 15, 0, 2, 0, 0, 0, 0, 0]' : 0.233141}", "{'[6, 6, 6, 0, 0, 0, 1, 0, 4, 3, 15, 0, 2, 0, 0, 0, 0, 0]' : 0.233653}", "{'[6, 6, 6, 0, 0, 0, 1, 0, 4, 3, 15, 0, 2, 0, 0, 0, 0, 0]' : 0.233853}"]
returning from 'run': {'[6, 6, 6, 0, 0, 0, 1, 0, 4, 3, 15, 0, 2, 0, 0, 0, 0, 0]': ([0.245974, 0.223779, 0.219263, 0.219535, 0.219024, 0.220444, 0.233622, 0.233822, 0.231869, 0.232653, 0.232565, 0.233239, 0.234369, 0.235608, 0.233141, 0.233792, 0.233137, 0.233312, 0.231678, 0.232932, 0.23259, 0.233768, 0.234244, 0.234511, 0.232701, 0.232721, 0.23408, 0.233141, 0.233653, 0.233853], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 6, 0, 0, 0, 1, 0, 4, 3, 15, 0, 2, 0, 0, 0, 0, 0]': ([0.245974, 0.223779, 0.219263, 0.219535, 0.219024, 0.220444, 0.233622, 0.233822, 0.231869, 0.232653, 0.232565, 0.233239, 0.234369, 0.235608, 0.233141, 0.233792, 0.233137, 0.233312, 0.231678, 0.232932, 0.23259, 0.233768, 0.234244, 0.234511, 0.232701, 0.232721, 0.23408, 0.233141, 0.233653, 0.233853], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = kkk
Code stats:
        Number of loops: 	40
        Max loop nest depth: 	4
        Additions: 		2805
        Multiplications: 	810
        Divisions: 		0
        Logical: 		0
        Reads: 			4456
        Writes: 		516
        Comparisons:		40
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest75.exe __orio_perftest75.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest75.exe  
Program Test Output: 
{'[6, 6, 3, 0, 0, 1, 1, 0, 8, 7, 0, 10, 0, 0, 2, 0, 1, 0]' : 0.156682}
{'[6, 6, 3, 0, 0, 1, 1, 0, 8, 7, 0, 10, 0, 0, 2, 0, 1, 0]' : 0.155748}
{'[6, 6, 3, 0, 0, 1, 1, 0, 8, 7, 0, 10, 0, 0, 2, 0, 1, 0]' : 0.152641}
{'[6, 6, 3, 0, 0, 1, 1, 0, 8, 7, 0, 10, 0, 0, 2, 0, 1, 0]' : 0.152784}
{'[6, 6, 3, 0, 0, 1, 1, 0, 8, 7, 0, 10, 0, 0, 2, 0, 1, 0]' : 0.152778}
{'[6, 6, 3, 0, 0, 1, 1, 0, 8, 7, 0, 10, 0, 0, 2, 0, 1, 0]' : 0.153529}
{'[6, 6, 3, 0, 0, 1, 1, 0, 8, 7, 0, 10, 0, 0, 2, 0, 1, 0]' : 0.156529}
{'[6, 6, 3, 0, 0, 1, 1, 0, 8, 7, 0, 10, 0, 0, 2, 0, 1, 0]' : 0.156839}
{'[6, 6, 3, 0, 0, 1, 1, 0, 8, 7, 0, 10, 0, 0, 2, 0, 1, 0]' : 0.153554}
{'[6, 6, 3, 0, 0, 1, 1, 0, 8, 7, 0, 10, 0, 0, 2, 0, 1, 0]' : 0.152744}
{'[6, 6, 3, 0, 0, 1, 1, 0, 8, 7, 0, 10, 0, 0, 2, 0, 1, 0]' : 0.152732}
{'[6, 6, 3, 0, 0, 1, 1, 0, 8, 7, 0, 10, 0, 0, 2, 0, 1, 0]' : 0.152964}
{'[6, 6, 3, 0, 0, 1, 1, 0, 8, 7, 0, 10, 0, 0, 2, 0, 1, 0]' : 0.152636}
{'[6, 6, 3, 0, 0, 1, 1, 0, 8, 7, 0, 10, 0, 0, 2, 0, 1, 0]' : 0.152879}
{'[6, 6, 3, 0, 0, 1, 1, 0, 8, 7, 0, 10, 0, 0, 2, 0, 1, 0]' : 0.152717}
{'[6, 6, 3, 0, 0, 1, 1, 0, 8, 7, 0, 10, 0, 0, 2, 0, 1, 0]' : 0.151881}
{'[6, 6, 3, 0, 0, 1, 1, 0, 8, 7, 0, 10, 0, 0, 2, 0, 1, 0]' : 0.156565}
{'[6, 6, 3, 0, 0, 1, 1, 0, 8, 7, 0, 10, 0, 0, 2, 0, 1, 0]' : 0.152755}
{'[6, 6, 3, 0, 0, 1, 1, 0, 8, 7, 0, 10, 0, 0, 2, 0, 1, 0]' : 0.15331}
{'[6, 6, 3, 0, 0, 1, 1, 0, 8, 7, 0, 10, 0, 0, 2, 0, 1, 0]' : 0.152525}
{'[6, 6, 3, 0, 0, 1, 1, 0, 8, 7, 0, 10, 0, 0, 2, 0, 1, 0]' : 0.152766}
{'[6, 6, 3, 0, 0, 1, 1, 0, 8, 7, 0, 10, 0, 0, 2, 0, 1, 0]' : 0.152686}
{'[6, 6, 3, 0, 0, 1, 1, 0, 8, 7, 0, 10, 0, 0, 2, 0, 1, 0]' : 0.152638}
{'[6, 6, 3, 0, 0, 1, 1, 0, 8, 7, 0, 10, 0, 0, 2, 0, 1, 0]' : 0.152534}
{'[6, 6, 3, 0, 0, 1, 1, 0, 8, 7, 0, 10, 0, 0, 2, 0, 1, 0]' : 0.152701}
{'[6, 6, 3, 0, 0, 1, 1, 0, 8, 7, 0, 10, 0, 0, 2, 0, 1, 0]' : 0.152916}
{'[6, 6, 3, 0, 0, 1, 1, 0, 8, 7, 0, 10, 0, 0, 2, 0, 1, 0]' : 0.152542}
{'[6, 6, 3, 0, 0, 1, 1, 0, 8, 7, 0, 10, 0, 0, 2, 0, 1, 0]' : 0.15261}
{'[6, 6, 3, 0, 0, 1, 1, 0, 8, 7, 0, 10, 0, 0, 2, 0, 1, 0]' : 0.15268}
{'[6, 6, 3, 0, 0, 1, 1, 0, 8, 7, 0, 10, 0, 0, 2, 0, 1, 0]' : 0.152605}

out:
 ["{'[6, 6, 3, 0, 0, 1, 1, 0, 8, 7, 0, 10, 0, 0, 2, 0, 1, 0]' : 0.156682}", "{'[6, 6, 3, 0, 0, 1, 1, 0, 8, 7, 0, 10, 0, 0, 2, 0, 1, 0]' : 0.155748}", "{'[6, 6, 3, 0, 0, 1, 1, 0, 8, 7, 0, 10, 0, 0, 2, 0, 1, 0]' : 0.152641}", "{'[6, 6, 3, 0, 0, 1, 1, 0, 8, 7, 0, 10, 0, 0, 2, 0, 1, 0]' : 0.152784}", "{'[6, 6, 3, 0, 0, 1, 1, 0, 8, 7, 0, 10, 0, 0, 2, 0, 1, 0]' : 0.152778}", "{'[6, 6, 3, 0, 0, 1, 1, 0, 8, 7, 0, 10, 0, 0, 2, 0, 1, 0]' : 0.153529}", "{'[6, 6, 3, 0, 0, 1, 1, 0, 8, 7, 0, 10, 0, 0, 2, 0, 1, 0]' : 0.156529}", "{'[6, 6, 3, 0, 0, 1, 1, 0, 8, 7, 0, 10, 0, 0, 2, 0, 1, 0]' : 0.156839}", "{'[6, 6, 3, 0, 0, 1, 1, 0, 8, 7, 0, 10, 0, 0, 2, 0, 1, 0]' : 0.153554}", "{'[6, 6, 3, 0, 0, 1, 1, 0, 8, 7, 0, 10, 0, 0, 2, 0, 1, 0]' : 0.152744}", "{'[6, 6, 3, 0, 0, 1, 1, 0, 8, 7, 0, 10, 0, 0, 2, 0, 1, 0]' : 0.152732}", "{'[6, 6, 3, 0, 0, 1, 1, 0, 8, 7, 0, 10, 0, 0, 2, 0, 1, 0]' : 0.152964}", "{'[6, 6, 3, 0, 0, 1, 1, 0, 8, 7, 0, 10, 0, 0, 2, 0, 1, 0]' : 0.152636}", "{'[6, 6, 3, 0, 0, 1, 1, 0, 8, 7, 0, 10, 0, 0, 2, 0, 1, 0]' : 0.152879}", "{'[6, 6, 3, 0, 0, 1, 1, 0, 8, 7, 0, 10, 0, 0, 2, 0, 1, 0]' : 0.152717}", "{'[6, 6, 3, 0, 0, 1, 1, 0, 8, 7, 0, 10, 0, 0, 2, 0, 1, 0]' : 0.151881}", "{'[6, 6, 3, 0, 0, 1, 1, 0, 8, 7, 0, 10, 0, 0, 2, 0, 1, 0]' : 0.156565}", "{'[6, 6, 3, 0, 0, 1, 1, 0, 8, 7, 0, 10, 0, 0, 2, 0, 1, 0]' : 0.152755}", "{'[6, 6, 3, 0, 0, 1, 1, 0, 8, 7, 0, 10, 0, 0, 2, 0, 1, 0]' : 0.15331}", "{'[6, 6, 3, 0, 0, 1, 1, 0, 8, 7, 0, 10, 0, 0, 2, 0, 1, 0]' : 0.152525}", "{'[6, 6, 3, 0, 0, 1, 1, 0, 8, 7, 0, 10, 0, 0, 2, 0, 1, 0]' : 0.152766}", "{'[6, 6, 3, 0, 0, 1, 1, 0, 8, 7, 0, 10, 0, 0, 2, 0, 1, 0]' : 0.152686}", "{'[6, 6, 3, 0, 0, 1, 1, 0, 8, 7, 0, 10, 0, 0, 2, 0, 1, 0]' : 0.152638}", "{'[6, 6, 3, 0, 0, 1, 1, 0, 8, 7, 0, 10, 0, 0, 2, 0, 1, 0]' : 0.152534}", "{'[6, 6, 3, 0, 0, 1, 1, 0, 8, 7, 0, 10, 0, 0, 2, 0, 1, 0]' : 0.152701}", "{'[6, 6, 3, 0, 0, 1, 1, 0, 8, 7, 0, 10, 0, 0, 2, 0, 1, 0]' : 0.152916}", "{'[6, 6, 3, 0, 0, 1, 1, 0, 8, 7, 0, 10, 0, 0, 2, 0, 1, 0]' : 0.152542}", "{'[6, 6, 3, 0, 0, 1, 1, 0, 8, 7, 0, 10, 0, 0, 2, 0, 1, 0]' : 0.15261}", "{'[6, 6, 3, 0, 0, 1, 1, 0, 8, 7, 0, 10, 0, 0, 2, 0, 1, 0]' : 0.15268}", "{'[6, 6, 3, 0, 0, 1, 1, 0, 8, 7, 0, 10, 0, 0, 2, 0, 1, 0]' : 0.152605}"]
returning from 'run': {'[6, 6, 3, 0, 0, 1, 1, 0, 8, 7, 0, 10, 0, 0, 2, 0, 1, 0]': ([0.156682, 0.155748, 0.152641, 0.152784, 0.152778, 0.153529, 0.156529, 0.156839, 0.153554, 0.152744, 0.152732, 0.152964, 0.152636, 0.152879, 0.152717, 0.151881, 0.156565, 0.152755, 0.15331, 0.152525, 0.152766, 0.152686, 0.152638, 0.152534, 0.152701, 0.152916, 0.152542, 0.15261, 0.15268, 0.152605], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 3, 0, 0, 1, 1, 0, 8, 7, 0, 10, 0, 0, 2, 0, 1, 0]': ([0.156682, 0.155748, 0.152641, 0.152784, 0.152778, 0.153529, 0.156529, 0.156839, 0.153554, 0.152744, 0.152732, 0.152964, 0.152636, 0.152879, 0.152717, 0.151881, 0.156565, 0.152755, 0.15331, 0.152525, 0.152766, 0.152686, 0.152638, 0.152534, 0.152701, 0.152916, 0.152542, 0.15261, 0.15268, 0.152605], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	4
        Additions: 		1443
        Multiplications: 	396
        Divisions: 		0
        Logical: 		0
        Reads: 			2383
        Writes: 		270
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest76.exe __orio_perftest76.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest76.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest76.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest76.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest76.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	27
        Max loop nest depth: 	5
        Additions: 		1270
        Multiplications: 	360
        Divisions: 		0
        Logical: 		0
        Reads: 			2153
        Writes: 		296
        Comparisons:		27
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest77.exe __orio_perftest77.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest77.exe  
Program Test Output: 
{'[6, 6, 4, 0, 0, 6, 1, 0, 29, 8, 0, 15, 0, 0, 0, 0, 1, 1]' : 0.140889}
{'[6, 6, 4, 0, 0, 6, 1, 0, 29, 8, 0, 15, 0, 0, 0, 0, 1, 1]' : 0.140547}
{'[6, 6, 4, 0, 0, 6, 1, 0, 29, 8, 0, 15, 0, 0, 0, 0, 1, 1]' : 0.140467}
{'[6, 6, 4, 0, 0, 6, 1, 0, 29, 8, 0, 15, 0, 0, 0, 0, 1, 1]' : 0.140393}
{'[6, 6, 4, 0, 0, 6, 1, 0, 29, 8, 0, 15, 0, 0, 0, 0, 1, 1]' : 0.140486}
{'[6, 6, 4, 0, 0, 6, 1, 0, 29, 8, 0, 15, 0, 0, 0, 0, 1, 1]' : 0.14045}
{'[6, 6, 4, 0, 0, 6, 1, 0, 29, 8, 0, 15, 0, 0, 0, 0, 1, 1]' : 0.140475}
{'[6, 6, 4, 0, 0, 6, 1, 0, 29, 8, 0, 15, 0, 0, 0, 0, 1, 1]' : 0.140461}
{'[6, 6, 4, 0, 0, 6, 1, 0, 29, 8, 0, 15, 0, 0, 0, 0, 1, 1]' : 0.140774}
{'[6, 6, 4, 0, 0, 6, 1, 0, 29, 8, 0, 15, 0, 0, 0, 0, 1, 1]' : 0.14029}
{'[6, 6, 4, 0, 0, 6, 1, 0, 29, 8, 0, 15, 0, 0, 0, 0, 1, 1]' : 0.140386}
{'[6, 6, 4, 0, 0, 6, 1, 0, 29, 8, 0, 15, 0, 0, 0, 0, 1, 1]' : 0.141045}
{'[6, 6, 4, 0, 0, 6, 1, 0, 29, 8, 0, 15, 0, 0, 0, 0, 1, 1]' : 0.144006}
{'[6, 6, 4, 0, 0, 6, 1, 0, 29, 8, 0, 15, 0, 0, 0, 0, 1, 1]' : 0.143606}
{'[6, 6, 4, 0, 0, 6, 1, 0, 29, 8, 0, 15, 0, 0, 0, 0, 1, 1]' : 0.140452}
{'[6, 6, 4, 0, 0, 6, 1, 0, 29, 8, 0, 15, 0, 0, 0, 0, 1, 1]' : 0.140973}
{'[6, 6, 4, 0, 0, 6, 1, 0, 29, 8, 0, 15, 0, 0, 0, 0, 1, 1]' : 0.144075}
{'[6, 6, 4, 0, 0, 6, 1, 0, 29, 8, 0, 15, 0, 0, 0, 0, 1, 1]' : 0.144321}
{'[6, 6, 4, 0, 0, 6, 1, 0, 29, 8, 0, 15, 0, 0, 0, 0, 1, 1]' : 0.142023}
{'[6, 6, 4, 0, 0, 6, 1, 0, 29, 8, 0, 15, 0, 0, 0, 0, 1, 1]' : 0.140366}
{'[6, 6, 4, 0, 0, 6, 1, 0, 29, 8, 0, 15, 0, 0, 0, 0, 1, 1]' : 0.1404}
{'[6, 6, 4, 0, 0, 6, 1, 0, 29, 8, 0, 15, 0, 0, 0, 0, 1, 1]' : 0.140422}
{'[6, 6, 4, 0, 0, 6, 1, 0, 29, 8, 0, 15, 0, 0, 0, 0, 1, 1]' : 0.140321}
{'[6, 6, 4, 0, 0, 6, 1, 0, 29, 8, 0, 15, 0, 0, 0, 0, 1, 1]' : 0.140626}
{'[6, 6, 4, 0, 0, 6, 1, 0, 29, 8, 0, 15, 0, 0, 0, 0, 1, 1]' : 0.140952}
{'[6, 6, 4, 0, 0, 6, 1, 0, 29, 8, 0, 15, 0, 0, 0, 0, 1, 1]' : 0.142081}
{'[6, 6, 4, 0, 0, 6, 1, 0, 29, 8, 0, 15, 0, 0, 0, 0, 1, 1]' : 0.144035}
{'[6, 6, 4, 0, 0, 6, 1, 0, 29, 8, 0, 15, 0, 0, 0, 0, 1, 1]' : 0.144063}
{'[6, 6, 4, 0, 0, 6, 1, 0, 29, 8, 0, 15, 0, 0, 0, 0, 1, 1]' : 0.144003}
{'[6, 6, 4, 0, 0, 6, 1, 0, 29, 8, 0, 15, 0, 0, 0, 0, 1, 1]' : 0.140404}

out:
 ["{'[6, 6, 4, 0, 0, 6, 1, 0, 29, 8, 0, 15, 0, 0, 0, 0, 1, 1]' : 0.140889}", "{'[6, 6, 4, 0, 0, 6, 1, 0, 29, 8, 0, 15, 0, 0, 0, 0, 1, 1]' : 0.140547}", "{'[6, 6, 4, 0, 0, 6, 1, 0, 29, 8, 0, 15, 0, 0, 0, 0, 1, 1]' : 0.140467}", "{'[6, 6, 4, 0, 0, 6, 1, 0, 29, 8, 0, 15, 0, 0, 0, 0, 1, 1]' : 0.140393}", "{'[6, 6, 4, 0, 0, 6, 1, 0, 29, 8, 0, 15, 0, 0, 0, 0, 1, 1]' : 0.140486}", "{'[6, 6, 4, 0, 0, 6, 1, 0, 29, 8, 0, 15, 0, 0, 0, 0, 1, 1]' : 0.14045}", "{'[6, 6, 4, 0, 0, 6, 1, 0, 29, 8, 0, 15, 0, 0, 0, 0, 1, 1]' : 0.140475}", "{'[6, 6, 4, 0, 0, 6, 1, 0, 29, 8, 0, 15, 0, 0, 0, 0, 1, 1]' : 0.140461}", "{'[6, 6, 4, 0, 0, 6, 1, 0, 29, 8, 0, 15, 0, 0, 0, 0, 1, 1]' : 0.140774}", "{'[6, 6, 4, 0, 0, 6, 1, 0, 29, 8, 0, 15, 0, 0, 0, 0, 1, 1]' : 0.14029}", "{'[6, 6, 4, 0, 0, 6, 1, 0, 29, 8, 0, 15, 0, 0, 0, 0, 1, 1]' : 0.140386}", "{'[6, 6, 4, 0, 0, 6, 1, 0, 29, 8, 0, 15, 0, 0, 0, 0, 1, 1]' : 0.141045}", "{'[6, 6, 4, 0, 0, 6, 1, 0, 29, 8, 0, 15, 0, 0, 0, 0, 1, 1]' : 0.144006}", "{'[6, 6, 4, 0, 0, 6, 1, 0, 29, 8, 0, 15, 0, 0, 0, 0, 1, 1]' : 0.143606}", "{'[6, 6, 4, 0, 0, 6, 1, 0, 29, 8, 0, 15, 0, 0, 0, 0, 1, 1]' : 0.140452}", "{'[6, 6, 4, 0, 0, 6, 1, 0, 29, 8, 0, 15, 0, 0, 0, 0, 1, 1]' : 0.140973}", "{'[6, 6, 4, 0, 0, 6, 1, 0, 29, 8, 0, 15, 0, 0, 0, 0, 1, 1]' : 0.144075}", "{'[6, 6, 4, 0, 0, 6, 1, 0, 29, 8, 0, 15, 0, 0, 0, 0, 1, 1]' : 0.144321}", "{'[6, 6, 4, 0, 0, 6, 1, 0, 29, 8, 0, 15, 0, 0, 0, 0, 1, 1]' : 0.142023}", "{'[6, 6, 4, 0, 0, 6, 1, 0, 29, 8, 0, 15, 0, 0, 0, 0, 1, 1]' : 0.140366}", "{'[6, 6, 4, 0, 0, 6, 1, 0, 29, 8, 0, 15, 0, 0, 0, 0, 1, 1]' : 0.1404}", "{'[6, 6, 4, 0, 0, 6, 1, 0, 29, 8, 0, 15, 0, 0, 0, 0, 1, 1]' : 0.140422}", "{'[6, 6, 4, 0, 0, 6, 1, 0, 29, 8, 0, 15, 0, 0, 0, 0, 1, 1]' : 0.140321}", "{'[6, 6, 4, 0, 0, 6, 1, 0, 29, 8, 0, 15, 0, 0, 0, 0, 1, 1]' : 0.140626}", "{'[6, 6, 4, 0, 0, 6, 1, 0, 29, 8, 0, 15, 0, 0, 0, 0, 1, 1]' : 0.140952}", "{'[6, 6, 4, 0, 0, 6, 1, 0, 29, 8, 0, 15, 0, 0, 0, 0, 1, 1]' : 0.142081}", "{'[6, 6, 4, 0, 0, 6, 1, 0, 29, 8, 0, 15, 0, 0, 0, 0, 1, 1]' : 0.144035}", "{'[6, 6, 4, 0, 0, 6, 1, 0, 29, 8, 0, 15, 0, 0, 0, 0, 1, 1]' : 0.144063}", "{'[6, 6, 4, 0, 0, 6, 1, 0, 29, 8, 0, 15, 0, 0, 0, 0, 1, 1]' : 0.144003}", "{'[6, 6, 4, 0, 0, 6, 1, 0, 29, 8, 0, 15, 0, 0, 0, 0, 1, 1]' : 0.140404}"]
returning from 'run': {'[6, 6, 4, 0, 0, 6, 1, 0, 29, 8, 0, 15, 0, 0, 0, 0, 1, 1]': ([0.140889, 0.140547, 0.140467, 0.140393, 0.140486, 0.14045, 0.140475, 0.140461, 0.140774, 0.14029, 0.140386, 0.141045, 0.144006, 0.143606, 0.140452, 0.140973, 0.144075, 0.144321, 0.142023, 0.140366, 0.1404, 0.140422, 0.140321, 0.140626, 0.140952, 0.142081, 0.144035, 0.144063, 0.144003, 0.140404], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 4, 0, 0, 6, 1, 0, 29, 8, 0, 15, 0, 0, 0, 0, 1, 1]': ([0.140889, 0.140547, 0.140467, 0.140393, 0.140486, 0.14045, 0.140475, 0.140461, 0.140774, 0.14029, 0.140386, 0.141045, 0.144006, 0.143606, 0.140452, 0.140973, 0.144075, 0.144321, 0.142023, 0.140366, 0.1404, 0.140422, 0.140321, 0.140626, 0.140952, 0.142081, 0.144035, 0.144063, 0.144003, 0.140404], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	31
        Max loop nest depth: 	4
        Additions: 		2682
        Multiplications: 	1254
        Divisions: 		0
        Logical: 		0
        Reads: 			5042
        Writes: 		807
        Comparisons:		31
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest78.exe __orio_perftest78.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest78.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest78.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest78.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest78.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	53
        Max loop nest depth: 	5
        Additions: 		2817
        Multiplications: 	1320
        Divisions: 		0
        Logical: 		0
        Reads: 			5729
        Writes: 		1013
        Comparisons:		53
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest79.exe __orio_perftest79.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest79.exe  
Program Test Output: 
{'[6, 6, 2, 0, 0, 4, 1, 0, 2, 26, 0, 8, 2, 0, 0, 1, 1, 0]' : 0.194058}
{'[6, 6, 2, 0, 0, 4, 1, 0, 2, 26, 0, 8, 2, 0, 0, 1, 1, 0]' : 0.19373}
{'[6, 6, 2, 0, 0, 4, 1, 0, 2, 26, 0, 8, 2, 0, 0, 1, 1, 0]' : 0.172416}
{'[6, 6, 2, 0, 0, 4, 1, 0, 2, 26, 0, 8, 2, 0, 0, 1, 1, 0]' : 0.170498}
{'[6, 6, 2, 0, 0, 4, 1, 0, 2, 26, 0, 8, 2, 0, 0, 1, 1, 0]' : 0.170306}
{'[6, 6, 2, 0, 0, 4, 1, 0, 2, 26, 0, 8, 2, 0, 0, 1, 1, 0]' : 0.170321}
{'[6, 6, 2, 0, 0, 4, 1, 0, 2, 26, 0, 8, 2, 0, 0, 1, 1, 0]' : 0.170918}
{'[6, 6, 2, 0, 0, 4, 1, 0, 2, 26, 0, 8, 2, 0, 0, 1, 1, 0]' : 0.170172}
{'[6, 6, 2, 0, 0, 4, 1, 0, 2, 26, 0, 8, 2, 0, 0, 1, 1, 0]' : 0.170374}
{'[6, 6, 2, 0, 0, 4, 1, 0, 2, 26, 0, 8, 2, 0, 0, 1, 1, 0]' : 0.170599}
{'[6, 6, 2, 0, 0, 4, 1, 0, 2, 26, 0, 8, 2, 0, 0, 1, 1, 0]' : 0.170216}
{'[6, 6, 2, 0, 0, 4, 1, 0, 2, 26, 0, 8, 2, 0, 0, 1, 1, 0]' : 0.170667}
{'[6, 6, 2, 0, 0, 4, 1, 0, 2, 26, 0, 8, 2, 0, 0, 1, 1, 0]' : 0.170289}
{'[6, 6, 2, 0, 0, 4, 1, 0, 2, 26, 0, 8, 2, 0, 0, 1, 1, 0]' : 0.170338}
{'[6, 6, 2, 0, 0, 4, 1, 0, 2, 26, 0, 8, 2, 0, 0, 1, 1, 0]' : 0.17016}
{'[6, 6, 2, 0, 0, 4, 1, 0, 2, 26, 0, 8, 2, 0, 0, 1, 1, 0]' : 0.170613}
{'[6, 6, 2, 0, 0, 4, 1, 0, 2, 26, 0, 8, 2, 0, 0, 1, 1, 0]' : 0.170292}
{'[6, 6, 2, 0, 0, 4, 1, 0, 2, 26, 0, 8, 2, 0, 0, 1, 1, 0]' : 0.170096}
{'[6, 6, 2, 0, 0, 4, 1, 0, 2, 26, 0, 8, 2, 0, 0, 1, 1, 0]' : 0.17025}
{'[6, 6, 2, 0, 0, 4, 1, 0, 2, 26, 0, 8, 2, 0, 0, 1, 1, 0]' : 0.170447}
{'[6, 6, 2, 0, 0, 4, 1, 0, 2, 26, 0, 8, 2, 0, 0, 1, 1, 0]' : 0.170326}
{'[6, 6, 2, 0, 0, 4, 1, 0, 2, 26, 0, 8, 2, 0, 0, 1, 1, 0]' : 0.171145}
{'[6, 6, 2, 0, 0, 4, 1, 0, 2, 26, 0, 8, 2, 0, 0, 1, 1, 0]' : 0.170541}
{'[6, 6, 2, 0, 0, 4, 1, 0, 2, 26, 0, 8, 2, 0, 0, 1, 1, 0]' : 0.171}
{'[6, 6, 2, 0, 0, 4, 1, 0, 2, 26, 0, 8, 2, 0, 0, 1, 1, 0]' : 0.170037}
{'[6, 6, 2, 0, 0, 4, 1, 0, 2, 26, 0, 8, 2, 0, 0, 1, 1, 0]' : 0.170526}
{'[6, 6, 2, 0, 0, 4, 1, 0, 2, 26, 0, 8, 2, 0, 0, 1, 1, 0]' : 0.170301}
{'[6, 6, 2, 0, 0, 4, 1, 0, 2, 26, 0, 8, 2, 0, 0, 1, 1, 0]' : 0.170484}
{'[6, 6, 2, 0, 0, 4, 1, 0, 2, 26, 0, 8, 2, 0, 0, 1, 1, 0]' : 0.17043}
{'[6, 6, 2, 0, 0, 4, 1, 0, 2, 26, 0, 8, 2, 0, 0, 1, 1, 0]' : 0.17006}

out:
 ["{'[6, 6, 2, 0, 0, 4, 1, 0, 2, 26, 0, 8, 2, 0, 0, 1, 1, 0]' : 0.194058}", "{'[6, 6, 2, 0, 0, 4, 1, 0, 2, 26, 0, 8, 2, 0, 0, 1, 1, 0]' : 0.19373}", "{'[6, 6, 2, 0, 0, 4, 1, 0, 2, 26, 0, 8, 2, 0, 0, 1, 1, 0]' : 0.172416}", "{'[6, 6, 2, 0, 0, 4, 1, 0, 2, 26, 0, 8, 2, 0, 0, 1, 1, 0]' : 0.170498}", "{'[6, 6, 2, 0, 0, 4, 1, 0, 2, 26, 0, 8, 2, 0, 0, 1, 1, 0]' : 0.170306}", "{'[6, 6, 2, 0, 0, 4, 1, 0, 2, 26, 0, 8, 2, 0, 0, 1, 1, 0]' : 0.170321}", "{'[6, 6, 2, 0, 0, 4, 1, 0, 2, 26, 0, 8, 2, 0, 0, 1, 1, 0]' : 0.170918}", "{'[6, 6, 2, 0, 0, 4, 1, 0, 2, 26, 0, 8, 2, 0, 0, 1, 1, 0]' : 0.170172}", "{'[6, 6, 2, 0, 0, 4, 1, 0, 2, 26, 0, 8, 2, 0, 0, 1, 1, 0]' : 0.170374}", "{'[6, 6, 2, 0, 0, 4, 1, 0, 2, 26, 0, 8, 2, 0, 0, 1, 1, 0]' : 0.170599}", "{'[6, 6, 2, 0, 0, 4, 1, 0, 2, 26, 0, 8, 2, 0, 0, 1, 1, 0]' : 0.170216}", "{'[6, 6, 2, 0, 0, 4, 1, 0, 2, 26, 0, 8, 2, 0, 0, 1, 1, 0]' : 0.170667}", "{'[6, 6, 2, 0, 0, 4, 1, 0, 2, 26, 0, 8, 2, 0, 0, 1, 1, 0]' : 0.170289}", "{'[6, 6, 2, 0, 0, 4, 1, 0, 2, 26, 0, 8, 2, 0, 0, 1, 1, 0]' : 0.170338}", "{'[6, 6, 2, 0, 0, 4, 1, 0, 2, 26, 0, 8, 2, 0, 0, 1, 1, 0]' : 0.17016}", "{'[6, 6, 2, 0, 0, 4, 1, 0, 2, 26, 0, 8, 2, 0, 0, 1, 1, 0]' : 0.170613}", "{'[6, 6, 2, 0, 0, 4, 1, 0, 2, 26, 0, 8, 2, 0, 0, 1, 1, 0]' : 0.170292}", "{'[6, 6, 2, 0, 0, 4, 1, 0, 2, 26, 0, 8, 2, 0, 0, 1, 1, 0]' : 0.170096}", "{'[6, 6, 2, 0, 0, 4, 1, 0, 2, 26, 0, 8, 2, 0, 0, 1, 1, 0]' : 0.17025}", "{'[6, 6, 2, 0, 0, 4, 1, 0, 2, 26, 0, 8, 2, 0, 0, 1, 1, 0]' : 0.170447}", "{'[6, 6, 2, 0, 0, 4, 1, 0, 2, 26, 0, 8, 2, 0, 0, 1, 1, 0]' : 0.170326}", "{'[6, 6, 2, 0, 0, 4, 1, 0, 2, 26, 0, 8, 2, 0, 0, 1, 1, 0]' : 0.171145}", "{'[6, 6, 2, 0, 0, 4, 1, 0, 2, 26, 0, 8, 2, 0, 0, 1, 1, 0]' : 0.170541}", "{'[6, 6, 2, 0, 0, 4, 1, 0, 2, 26, 0, 8, 2, 0, 0, 1, 1, 0]' : 0.171}", "{'[6, 6, 2, 0, 0, 4, 1, 0, 2, 26, 0, 8, 2, 0, 0, 1, 1, 0]' : 0.170037}", "{'[6, 6, 2, 0, 0, 4, 1, 0, 2, 26, 0, 8, 2, 0, 0, 1, 1, 0]' : 0.170526}", "{'[6, 6, 2, 0, 0, 4, 1, 0, 2, 26, 0, 8, 2, 0, 0, 1, 1, 0]' : 0.170301}", "{'[6, 6, 2, 0, 0, 4, 1, 0, 2, 26, 0, 8, 2, 0, 0, 1, 1, 0]' : 0.170484}", "{'[6, 6, 2, 0, 0, 4, 1, 0, 2, 26, 0, 8, 2, 0, 0, 1, 1, 0]' : 0.17043}", "{'[6, 6, 2, 0, 0, 4, 1, 0, 2, 26, 0, 8, 2, 0, 0, 1, 1, 0]' : 0.17006}"]
returning from 'run': {'[6, 6, 2, 0, 0, 4, 1, 0, 2, 26, 0, 8, 2, 0, 0, 1, 1, 0]': ([0.194058, 0.19373, 0.172416, 0.170498, 0.170306, 0.170321, 0.170918, 0.170172, 0.170374, 0.170599, 0.170216, 0.170667, 0.170289, 0.170338, 0.17016, 0.170613, 0.170292, 0.170096, 0.17025, 0.170447, 0.170326, 0.171145, 0.170541, 0.171, 0.170037, 0.170526, 0.170301, 0.170484, 0.17043, 0.17006], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 2, 0, 0, 4, 1, 0, 2, 26, 0, 8, 2, 0, 0, 1, 1, 0]': ([0.194058, 0.19373, 0.172416, 0.170498, 0.170306, 0.170321, 0.170918, 0.170172, 0.170374, 0.170599, 0.170216, 0.170667, 0.170289, 0.170338, 0.17016, 0.170613, 0.170292, 0.170096, 0.17025, 0.170447, 0.170326, 0.171145, 0.170541, 0.171, 0.170037, 0.170526, 0.170301, 0.170484, 0.17043, 0.17006], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	5
        Additions: 		1493
        Multiplications: 	432
        Divisions: 		0
        Logical: 		0
        Reads: 			2410
        Writes: 		261
        Comparisons:		20
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest80.exe __orio_perftest80.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest80.exe  
Program Test Output: 
{'[4, 6, 3, 0, 0, 6, 1, 0, 0, 0, 8, 12, 1, 0, 0, 0, 0, 0]' : 0.112247}
{'[4, 6, 3, 0, 0, 6, 1, 0, 0, 0, 8, 12, 1, 0, 0, 0, 0, 0]' : 0.112179}
{'[4, 6, 3, 0, 0, 6, 1, 0, 0, 0, 8, 12, 1, 0, 0, 0, 0, 0]' : 0.112201}
{'[4, 6, 3, 0, 0, 6, 1, 0, 0, 0, 8, 12, 1, 0, 0, 0, 0, 0]' : 0.113742}
{'[4, 6, 3, 0, 0, 6, 1, 0, 0, 0, 8, 12, 1, 0, 0, 0, 0, 0]' : 0.112308}
{'[4, 6, 3, 0, 0, 6, 1, 0, 0, 0, 8, 12, 1, 0, 0, 0, 0, 0]' : 0.112048}
{'[4, 6, 3, 0, 0, 6, 1, 0, 0, 0, 8, 12, 1, 0, 0, 0, 0, 0]' : 0.112717}
{'[4, 6, 3, 0, 0, 6, 1, 0, 0, 0, 8, 12, 1, 0, 0, 0, 0, 0]' : 0.112554}
{'[4, 6, 3, 0, 0, 6, 1, 0, 0, 0, 8, 12, 1, 0, 0, 0, 0, 0]' : 0.112327}
{'[4, 6, 3, 0, 0, 6, 1, 0, 0, 0, 8, 12, 1, 0, 0, 0, 0, 0]' : 0.112049}
{'[4, 6, 3, 0, 0, 6, 1, 0, 0, 0, 8, 12, 1, 0, 0, 0, 0, 0]' : 0.11191}
{'[4, 6, 3, 0, 0, 6, 1, 0, 0, 0, 8, 12, 1, 0, 0, 0, 0, 0]' : 0.112148}
{'[4, 6, 3, 0, 0, 6, 1, 0, 0, 0, 8, 12, 1, 0, 0, 0, 0, 0]' : 0.114666}
{'[4, 6, 3, 0, 0, 6, 1, 0, 0, 0, 8, 12, 1, 0, 0, 0, 0, 0]' : 0.113661}
{'[4, 6, 3, 0, 0, 6, 1, 0, 0, 0, 8, 12, 1, 0, 0, 0, 0, 0]' : 0.112373}
{'[4, 6, 3, 0, 0, 6, 1, 0, 0, 0, 8, 12, 1, 0, 0, 0, 0, 0]' : 0.111944}
{'[4, 6, 3, 0, 0, 6, 1, 0, 0, 0, 8, 12, 1, 0, 0, 0, 0, 0]' : 0.11224}
{'[4, 6, 3, 0, 0, 6, 1, 0, 0, 0, 8, 12, 1, 0, 0, 0, 0, 0]' : 0.112077}
{'[4, 6, 3, 0, 0, 6, 1, 0, 0, 0, 8, 12, 1, 0, 0, 0, 0, 0]' : 0.111855}
{'[4, 6, 3, 0, 0, 6, 1, 0, 0, 0, 8, 12, 1, 0, 0, 0, 0, 0]' : 0.111774}
{'[4, 6, 3, 0, 0, 6, 1, 0, 0, 0, 8, 12, 1, 0, 0, 0, 0, 0]' : 0.109467}
{'[4, 6, 3, 0, 0, 6, 1, 0, 0, 0, 8, 12, 1, 0, 0, 0, 0, 0]' : 0.112304}
{'[4, 6, 3, 0, 0, 6, 1, 0, 0, 0, 8, 12, 1, 0, 0, 0, 0, 0]' : 0.111998}
{'[4, 6, 3, 0, 0, 6, 1, 0, 0, 0, 8, 12, 1, 0, 0, 0, 0, 0]' : 0.112227}
{'[4, 6, 3, 0, 0, 6, 1, 0, 0, 0, 8, 12, 1, 0, 0, 0, 0, 0]' : 0.112461}
{'[4, 6, 3, 0, 0, 6, 1, 0, 0, 0, 8, 12, 1, 0, 0, 0, 0, 0]' : 0.112366}
{'[4, 6, 3, 0, 0, 6, 1, 0, 0, 0, 8, 12, 1, 0, 0, 0, 0, 0]' : 0.112085}
{'[4, 6, 3, 0, 0, 6, 1, 0, 0, 0, 8, 12, 1, 0, 0, 0, 0, 0]' : 0.111926}
{'[4, 6, 3, 0, 0, 6, 1, 0, 0, 0, 8, 12, 1, 0, 0, 0, 0, 0]' : 0.112113}
{'[4, 6, 3, 0, 0, 6, 1, 0, 0, 0, 8, 12, 1, 0, 0, 0, 0, 0]' : 0.112386}

out:
 ["{'[4, 6, 3, 0, 0, 6, 1, 0, 0, 0, 8, 12, 1, 0, 0, 0, 0, 0]' : 0.112247}", "{'[4, 6, 3, 0, 0, 6, 1, 0, 0, 0, 8, 12, 1, 0, 0, 0, 0, 0]' : 0.112179}", "{'[4, 6, 3, 0, 0, 6, 1, 0, 0, 0, 8, 12, 1, 0, 0, 0, 0, 0]' : 0.112201}", "{'[4, 6, 3, 0, 0, 6, 1, 0, 0, 0, 8, 12, 1, 0, 0, 0, 0, 0]' : 0.113742}", "{'[4, 6, 3, 0, 0, 6, 1, 0, 0, 0, 8, 12, 1, 0, 0, 0, 0, 0]' : 0.112308}", "{'[4, 6, 3, 0, 0, 6, 1, 0, 0, 0, 8, 12, 1, 0, 0, 0, 0, 0]' : 0.112048}", "{'[4, 6, 3, 0, 0, 6, 1, 0, 0, 0, 8, 12, 1, 0, 0, 0, 0, 0]' : 0.112717}", "{'[4, 6, 3, 0, 0, 6, 1, 0, 0, 0, 8, 12, 1, 0, 0, 0, 0, 0]' : 0.112554}", "{'[4, 6, 3, 0, 0, 6, 1, 0, 0, 0, 8, 12, 1, 0, 0, 0, 0, 0]' : 0.112327}", "{'[4, 6, 3, 0, 0, 6, 1, 0, 0, 0, 8, 12, 1, 0, 0, 0, 0, 0]' : 0.112049}", "{'[4, 6, 3, 0, 0, 6, 1, 0, 0, 0, 8, 12, 1, 0, 0, 0, 0, 0]' : 0.11191}", "{'[4, 6, 3, 0, 0, 6, 1, 0, 0, 0, 8, 12, 1, 0, 0, 0, 0, 0]' : 0.112148}", "{'[4, 6, 3, 0, 0, 6, 1, 0, 0, 0, 8, 12, 1, 0, 0, 0, 0, 0]' : 0.114666}", "{'[4, 6, 3, 0, 0, 6, 1, 0, 0, 0, 8, 12, 1, 0, 0, 0, 0, 0]' : 0.113661}", "{'[4, 6, 3, 0, 0, 6, 1, 0, 0, 0, 8, 12, 1, 0, 0, 0, 0, 0]' : 0.112373}", "{'[4, 6, 3, 0, 0, 6, 1, 0, 0, 0, 8, 12, 1, 0, 0, 0, 0, 0]' : 0.111944}", "{'[4, 6, 3, 0, 0, 6, 1, 0, 0, 0, 8, 12, 1, 0, 0, 0, 0, 0]' : 0.11224}", "{'[4, 6, 3, 0, 0, 6, 1, 0, 0, 0, 8, 12, 1, 0, 0, 0, 0, 0]' : 0.112077}", "{'[4, 6, 3, 0, 0, 6, 1, 0, 0, 0, 8, 12, 1, 0, 0, 0, 0, 0]' : 0.111855}", "{'[4, 6, 3, 0, 0, 6, 1, 0, 0, 0, 8, 12, 1, 0, 0, 0, 0, 0]' : 0.111774}", "{'[4, 6, 3, 0, 0, 6, 1, 0, 0, 0, 8, 12, 1, 0, 0, 0, 0, 0]' : 0.109467}", "{'[4, 6, 3, 0, 0, 6, 1, 0, 0, 0, 8, 12, 1, 0, 0, 0, 0, 0]' : 0.112304}", "{'[4, 6, 3, 0, 0, 6, 1, 0, 0, 0, 8, 12, 1, 0, 0, 0, 0, 0]' : 0.111998}", "{'[4, 6, 3, 0, 0, 6, 1, 0, 0, 0, 8, 12, 1, 0, 0, 0, 0, 0]' : 0.112227}", "{'[4, 6, 3, 0, 0, 6, 1, 0, 0, 0, 8, 12, 1, 0, 0, 0, 0, 0]' : 0.112461}", "{'[4, 6, 3, 0, 0, 6, 1, 0, 0, 0, 8, 12, 1, 0, 0, 0, 0, 0]' : 0.112366}", "{'[4, 6, 3, 0, 0, 6, 1, 0, 0, 0, 8, 12, 1, 0, 0, 0, 0, 0]' : 0.112085}", "{'[4, 6, 3, 0, 0, 6, 1, 0, 0, 0, 8, 12, 1, 0, 0, 0, 0, 0]' : 0.111926}", "{'[4, 6, 3, 0, 0, 6, 1, 0, 0, 0, 8, 12, 1, 0, 0, 0, 0, 0]' : 0.112113}", "{'[4, 6, 3, 0, 0, 6, 1, 0, 0, 0, 8, 12, 1, 0, 0, 0, 0, 0]' : 0.112386}"]
returning from 'run': {'[4, 6, 3, 0, 0, 6, 1, 0, 0, 0, 8, 12, 1, 0, 0, 0, 0, 0]': ([0.112247, 0.112179, 0.112201, 0.113742, 0.112308, 0.112048, 0.112717, 0.112554, 0.112327, 0.112049, 0.11191, 0.112148, 0.114666, 0.113661, 0.112373, 0.111944, 0.11224, 0.112077, 0.111855, 0.111774, 0.109467, 0.112304, 0.111998, 0.112227, 0.112461, 0.112366, 0.112085, 0.111926, 0.112113, 0.112386], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 6, 3, 0, 0, 6, 1, 0, 0, 0, 8, 12, 1, 0, 0, 0, 0, 0]': ([0.112247, 0.112179, 0.112201, 0.113742, 0.112308, 0.112048, 0.112717, 0.112554, 0.112327, 0.112049, 0.11191, 0.112148, 0.114666, 0.113661, 0.112373, 0.111944, 0.11224, 0.112077, 0.111855, 0.111774, 0.109467, 0.112304, 0.111998, 0.112227, 0.112461, 0.112366, 0.112085, 0.111926, 0.112113, 0.112386], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		231
        Multiplications: 	78
        Divisions: 		0
        Logical: 		0
        Reads: 			611
        Writes: 		151
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest81.exe __orio_perftest81.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest81.exe  
Program Test Output: 
{'[6, 6, 5, 0, 0, 5, 1, 0, 1, 0, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.220976}
{'[6, 6, 5, 0, 0, 5, 1, 0, 1, 0, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.195619}
{'[6, 6, 5, 0, 0, 5, 1, 0, 1, 0, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.185531}
{'[6, 6, 5, 0, 0, 5, 1, 0, 1, 0, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.185419}
{'[6, 6, 5, 0, 0, 5, 1, 0, 1, 0, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.185451}
{'[6, 6, 5, 0, 0, 5, 1, 0, 1, 0, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.185838}
{'[6, 6, 5, 0, 0, 5, 1, 0, 1, 0, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.185461}
{'[6, 6, 5, 0, 0, 5, 1, 0, 1, 0, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.185768}
{'[6, 6, 5, 0, 0, 5, 1, 0, 1, 0, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.185688}
{'[6, 6, 5, 0, 0, 5, 1, 0, 1, 0, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.18556}
{'[6, 6, 5, 0, 0, 5, 1, 0, 1, 0, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.185833}
{'[6, 6, 5, 0, 0, 5, 1, 0, 1, 0, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.185506}
{'[6, 6, 5, 0, 0, 5, 1, 0, 1, 0, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.185455}
{'[6, 6, 5, 0, 0, 5, 1, 0, 1, 0, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.185761}
{'[6, 6, 5, 0, 0, 5, 1, 0, 1, 0, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.185463}
{'[6, 6, 5, 0, 0, 5, 1, 0, 1, 0, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.185472}
{'[6, 6, 5, 0, 0, 5, 1, 0, 1, 0, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.185484}
{'[6, 6, 5, 0, 0, 5, 1, 0, 1, 0, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.185478}
{'[6, 6, 5, 0, 0, 5, 1, 0, 1, 0, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.185465}
{'[6, 6, 5, 0, 0, 5, 1, 0, 1, 0, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.185444}
{'[6, 6, 5, 0, 0, 5, 1, 0, 1, 0, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.185716}
{'[6, 6, 5, 0, 0, 5, 1, 0, 1, 0, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.185878}
{'[6, 6, 5, 0, 0, 5, 1, 0, 1, 0, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.185457}
{'[6, 6, 5, 0, 0, 5, 1, 0, 1, 0, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.185519}
{'[6, 6, 5, 0, 0, 5, 1, 0, 1, 0, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.185506}
{'[6, 6, 5, 0, 0, 5, 1, 0, 1, 0, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.185543}
{'[6, 6, 5, 0, 0, 5, 1, 0, 1, 0, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.185471}
{'[6, 6, 5, 0, 0, 5, 1, 0, 1, 0, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.185505}
{'[6, 6, 5, 0, 0, 5, 1, 0, 1, 0, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.185512}
{'[6, 6, 5, 0, 0, 5, 1, 0, 1, 0, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.185734}

out:
 ["{'[6, 6, 5, 0, 0, 5, 1, 0, 1, 0, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.220976}", "{'[6, 6, 5, 0, 0, 5, 1, 0, 1, 0, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.195619}", "{'[6, 6, 5, 0, 0, 5, 1, 0, 1, 0, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.185531}", "{'[6, 6, 5, 0, 0, 5, 1, 0, 1, 0, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.185419}", "{'[6, 6, 5, 0, 0, 5, 1, 0, 1, 0, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.185451}", "{'[6, 6, 5, 0, 0, 5, 1, 0, 1, 0, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.185838}", "{'[6, 6, 5, 0, 0, 5, 1, 0, 1, 0, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.185461}", "{'[6, 6, 5, 0, 0, 5, 1, 0, 1, 0, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.185768}", "{'[6, 6, 5, 0, 0, 5, 1, 0, 1, 0, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.185688}", "{'[6, 6, 5, 0, 0, 5, 1, 0, 1, 0, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.18556}", "{'[6, 6, 5, 0, 0, 5, 1, 0, 1, 0, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.185833}", "{'[6, 6, 5, 0, 0, 5, 1, 0, 1, 0, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.185506}", "{'[6, 6, 5, 0, 0, 5, 1, 0, 1, 0, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.185455}", "{'[6, 6, 5, 0, 0, 5, 1, 0, 1, 0, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.185761}", "{'[6, 6, 5, 0, 0, 5, 1, 0, 1, 0, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.185463}", "{'[6, 6, 5, 0, 0, 5, 1, 0, 1, 0, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.185472}", "{'[6, 6, 5, 0, 0, 5, 1, 0, 1, 0, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.185484}", "{'[6, 6, 5, 0, 0, 5, 1, 0, 1, 0, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.185478}", "{'[6, 6, 5, 0, 0, 5, 1, 0, 1, 0, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.185465}", "{'[6, 6, 5, 0, 0, 5, 1, 0, 1, 0, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.185444}", "{'[6, 6, 5, 0, 0, 5, 1, 0, 1, 0, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.185716}", "{'[6, 6, 5, 0, 0, 5, 1, 0, 1, 0, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.185878}", "{'[6, 6, 5, 0, 0, 5, 1, 0, 1, 0, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.185457}", "{'[6, 6, 5, 0, 0, 5, 1, 0, 1, 0, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.185519}", "{'[6, 6, 5, 0, 0, 5, 1, 0, 1, 0, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.185506}", "{'[6, 6, 5, 0, 0, 5, 1, 0, 1, 0, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.185543}", "{'[6, 6, 5, 0, 0, 5, 1, 0, 1, 0, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.185471}", "{'[6, 6, 5, 0, 0, 5, 1, 0, 1, 0, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.185505}", "{'[6, 6, 5, 0, 0, 5, 1, 0, 1, 0, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.185512}", "{'[6, 6, 5, 0, 0, 5, 1, 0, 1, 0, 0, 28, 0, 0, 1, 1, 0, 1]' : 0.185734}"]
returning from 'run': {'[6, 6, 5, 0, 0, 5, 1, 0, 1, 0, 0, 28, 0, 0, 1, 1, 0, 1]': ([0.220976, 0.195619, 0.185531, 0.185419, 0.185451, 0.185838, 0.185461, 0.185768, 0.185688, 0.18556, 0.185833, 0.185506, 0.185455, 0.185761, 0.185463, 0.185472, 0.185484, 0.185478, 0.185465, 0.185444, 0.185716, 0.185878, 0.185457, 0.185519, 0.185506, 0.185543, 0.185471, 0.185505, 0.185512, 0.185734], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 5, 0, 0, 5, 1, 0, 1, 0, 0, 28, 0, 0, 1, 1, 0, 1]': ([0.220976, 0.195619, 0.185531, 0.185419, 0.185451, 0.185838, 0.185461, 0.185768, 0.185688, 0.18556, 0.185833, 0.185506, 0.185455, 0.185761, 0.185463, 0.185472, 0.185484, 0.185478, 0.185465, 0.185444, 0.185716, 0.185878, 0.185457, 0.185519, 0.185506, 0.185543, 0.185471, 0.185505, 0.185512, 0.185734], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Complete design, with measurements:
     T1_I T1_K T2_K U1_I U_I U_J U_K RT_I RT_J RT_K SCR VEC1 VEC2 cost_mean
98      2    1    3   15   0   2   4    1    1    0   1    1    1 0.1221330
215     2    6    5   29  25  25   0    0    1    1   0    0    0 0.1625638
254     0    0    6   24   0   0   1    0    1    0   0    0    0 0.2311134
291     0    2    2   29   0   3   0    0    0    0   1    1    0 0.2565734
598     0    2    0    4   9   0  29    0    1    1   0    1    1 0.1309066
684     2    4    4    4   0   6   6    0    1    1   0    1    0 0.2476173
752     5    1    6   28   0   7  28    1    0    1   0    1    0 0.1158208
857     4    1    2    8   7   0   1    0    0    0   0    1    1 0.1402964
883     0    2    1    0   6  11   0    1    0    1   0    1    1 0.1136493
1030    1    0    5    6   7   0  29    0    0    1   1    1    0 0.1149246
1183    6    6    0   28   0  16   7    0    0    0   0    1    0 0.2185040
1432    0    6    5   29  11   6   0    0    0    2   1    0    1 0.1925914
1634    4    2    1    0  29  29   0    0    0    0   0    0    0 0.2239813
1655    4    6    0    7  29   5   0    0    0    0   1    0    1 0.2088821
1743    3    6    0    4  11   0  28    1    1    0   1    1    0 0.1055746
2064    2    5    6    6   0  26  27    2    0    0   0    1    1 0.2816658
2078    6    0    5   29  17  16   0    2    0    0   0    1    1 0.3234950
2332    0    1    0    4   0  27   1    1    0    1   0    0    1 0.1280538
2398    2    3    6    0   0   0   0    0    0    2   1    0    1 0.1904404
2466    0    1    6    2  22  24   0    1    1    0   1    1    0 0.1093408
2497    6    0    6   26   8   5   0    1    1    0   1    0    0 0.1043048
2500    6    6    0    4   3  15   0    2    0    0   0    0    0 0.2316340
2554    6    3    1    8   7   0  10    0    0    2   0    1    0 0.1533823
2610    6    4    6   29   8   0  15    0    0    0   0    1    1 0.1414597
3318    6    2    4    2  26   0   8    2    0    0   1    1    0 0.1720537
3340    4    3    6    0   0   8  12    1    0    0   0    0    0 0.1122784
3359    6    5    5    1   0   0  28    0    0    1   1    0    1 0.1870838

Heteroscedasticity Test p-value: 0.849592829254
Regression Step:                Df   Sum Sq  Mean Sq F value Pr(>F)  
T1_I             1 0.001288 0.001288   1.018 0.3701  
T1_K             1 0.003916 0.003916   3.095 0.1533  
T2_K             1 0.000406 0.000406   0.321 0.6015  
U1_I             1 0.003897 0.003897   3.080 0.1541  
U_I              1 0.000012 0.000012   0.010 0.9268  
U_J              1 0.006064 0.006064   4.793 0.0938 .
U_K              1 0.003867 0.003867   3.057 0.1553  
RT_I             1 0.000614 0.000614   0.485 0.5245  
RT_J             1 0.004170 0.004170   3.296 0.1436  
RT_K             1 0.002230 0.002230   1.762 0.2551  
SCR              1 0.001584 0.001584   1.252 0.3258  
VEC1             1 0.000363 0.000363   0.287 0.6207  
VEC2             1 0.000191 0.000191   0.151 0.7172  
I(1/(1 + T1_I))  1 0.000389 0.000389   0.307 0.6088  
I(1/(1 + T1_K))  1 0.006870 0.006870   5.430 0.0802 .
I(1/(1 + T2_K))  1 0.003422 0.003422   2.704 0.1754  
I(1/(1 + U1_I))  1 0.000664 0.000664   0.525 0.5089  
I(1/(1 + U_I))   1 0.020662 0.020662  16.330 0.0156 *
I(1/(1 + U_J))   1 0.000600 0.000600   0.474 0.5288  
I(1/(1 + U_K))   1 0.012519 0.012519   9.894 0.0347 *
I(1/(1 + RT_I))  1 0.014864 0.014864  11.748 0.0266 *
I(1/(1 + RT_K))  1 0.003034 0.003034   2.398 0.1964  
Residuals        4 0.005061 0.001265                 
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Predicting Best
Generating valid search space of size 3400 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Valid coordinates: 680
Tested coordinates: 30000
Tested coordinates: 40000
Valid coordinates: 1360
Tested coordinates: 50000
Tested coordinates: 60000
Valid coordinates: 2040
Tested coordinates: 70000
Tested coordinates: 80000
Valid coordinates: 2720
Tested coordinates: 90000
Tested coordinates: 100000
Valid coordinates: 3400
Valid/Tested configurations: 3400/106350
Generated Search Space:
NULL
Identical predictions (tol = 1e-5): 1
Getting Best from Design
Response: ['cost_mean']
Design Names:  [1] "T1_I"      "T1_K"      "T2_K"      "U1_I"      "U_I"       "U_J"      
 [7] "U_K"       "RT_I"      "RT_J"      "RT_K"      "SCR"       "VEC1"     
[13] "VEC2"      "cost_mean"

Design Response:      cost_mean
98   0.1221330
215  0.1625638
254  0.2311134
291  0.2565734
598  0.1309066
684  0.2476173
752  0.1158208
857  0.1402964
883  0.1136493
1030 0.1149246
1183 0.2185040
1432 0.1925914
1634 0.2239813
1655 0.2088821
1743 0.1055746
2064 0.2816658
2078 0.3234950
2332 0.1280538
2398 0.1904404
2466 0.1093408
2497 0.1043048
2500 0.2316340
2554 0.1533823
2610 0.1414597
3318 0.1720537
3340 0.1122784
3359 0.1870838

Current Design Names: ['T1_I', 'T1_K', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Getting fixed variables
Pruning Model
Best Predicted:    T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
23    2    6    1    0    0    0       1       0   29  13   0  17    1    0
   RT_K SCR VEC1 VEC2
23    1   1    0    0

Best From Design: [6, 6, 0, 0, 0, 6, 1, 0, 26, 8, 5, 0, 1, 1, 0, 1, 0, 0]
Pruned Factors: ['T1_I', 'T1_K', 'T2_K', 'U1_I', 'U_I', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Fixed Factors: {'ACOPY_x': 1, 'ACOPY_y': 0, 'T1_J': 6, 'U_J': 0, 'T2_J': 0, 'T2_I': 0}
Length of requested configs: 1
Result was on Database, Returning Now
Starting Point (-O3):
0.16283083333333334
Predicted Best Point:
[2, 6, 1, 0, 0, 0, 1, 0, 29, 13, 0, 17, 1, 0, 1, 1, 0, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	66
        Max loop nest depth: 	4
        Additions: 		3440
        Multiplications: 	1288
        Divisions: 		0
        Logical: 		0
        Reads: 			7296
        Writes: 		1543
        Comparisons:		66
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest82.exe __orio_perftest82.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest82.exe  
Program Test Output: 
{'[2, 6, 1, 0, 0, 0, 1, 0, 29, 13, 0, 17, 1, 0, 1, 1, 0, 0]' : 0.120803}
{'[2, 6, 1, 0, 0, 0, 1, 0, 29, 13, 0, 17, 1, 0, 1, 1, 0, 0]' : 0.120735}
{'[2, 6, 1, 0, 0, 0, 1, 0, 29, 13, 0, 17, 1, 0, 1, 1, 0, 0]' : 0.1208}
{'[2, 6, 1, 0, 0, 0, 1, 0, 29, 13, 0, 17, 1, 0, 1, 1, 0, 0]' : 0.110227}
{'[2, 6, 1, 0, 0, 0, 1, 0, 29, 13, 0, 17, 1, 0, 1, 1, 0, 0]' : 0.103092}
{'[2, 6, 1, 0, 0, 0, 1, 0, 29, 13, 0, 17, 1, 0, 1, 1, 0, 0]' : 0.103075}
{'[2, 6, 1, 0, 0, 0, 1, 0, 29, 13, 0, 17, 1, 0, 1, 1, 0, 0]' : 0.102958}
{'[2, 6, 1, 0, 0, 0, 1, 0, 29, 13, 0, 17, 1, 0, 1, 1, 0, 0]' : 0.103127}
{'[2, 6, 1, 0, 0, 0, 1, 0, 29, 13, 0, 17, 1, 0, 1, 1, 0, 0]' : 0.10305}
{'[2, 6, 1, 0, 0, 0, 1, 0, 29, 13, 0, 17, 1, 0, 1, 1, 0, 0]' : 0.103095}
{'[2, 6, 1, 0, 0, 0, 1, 0, 29, 13, 0, 17, 1, 0, 1, 1, 0, 0]' : 0.103101}
{'[2, 6, 1, 0, 0, 0, 1, 0, 29, 13, 0, 17, 1, 0, 1, 1, 0, 0]' : 0.103131}
{'[2, 6, 1, 0, 0, 0, 1, 0, 29, 13, 0, 17, 1, 0, 1, 1, 0, 0]' : 0.103113}
{'[2, 6, 1, 0, 0, 0, 1, 0, 29, 13, 0, 17, 1, 0, 1, 1, 0, 0]' : 0.10328}
{'[2, 6, 1, 0, 0, 0, 1, 0, 29, 13, 0, 17, 1, 0, 1, 1, 0, 0]' : 0.10335}
{'[2, 6, 1, 0, 0, 0, 1, 0, 29, 13, 0, 17, 1, 0, 1, 1, 0, 0]' : 0.103016}
{'[2, 6, 1, 0, 0, 0, 1, 0, 29, 13, 0, 17, 1, 0, 1, 1, 0, 0]' : 0.103146}
{'[2, 6, 1, 0, 0, 0, 1, 0, 29, 13, 0, 17, 1, 0, 1, 1, 0, 0]' : 0.103105}
{'[2, 6, 1, 0, 0, 0, 1, 0, 29, 13, 0, 17, 1, 0, 1, 1, 0, 0]' : 0.103112}
{'[2, 6, 1, 0, 0, 0, 1, 0, 29, 13, 0, 17, 1, 0, 1, 1, 0, 0]' : 0.1034}
{'[2, 6, 1, 0, 0, 0, 1, 0, 29, 13, 0, 17, 1, 0, 1, 1, 0, 0]' : 0.103084}
{'[2, 6, 1, 0, 0, 0, 1, 0, 29, 13, 0, 17, 1, 0, 1, 1, 0, 0]' : 0.103085}
{'[2, 6, 1, 0, 0, 0, 1, 0, 29, 13, 0, 17, 1, 0, 1, 1, 0, 0]' : 0.103189}
{'[2, 6, 1, 0, 0, 0, 1, 0, 29, 13, 0, 17, 1, 0, 1, 1, 0, 0]' : 0.103113}
{'[2, 6, 1, 0, 0, 0, 1, 0, 29, 13, 0, 17, 1, 0, 1, 1, 0, 0]' : 0.103077}
{'[2, 6, 1, 0, 0, 0, 1, 0, 29, 13, 0, 17, 1, 0, 1, 1, 0, 0]' : 0.103043}
{'[2, 6, 1, 0, 0, 0, 1, 0, 29, 13, 0, 17, 1, 0, 1, 1, 0, 0]' : 0.103085}
{'[2, 6, 1, 0, 0, 0, 1, 0, 29, 13, 0, 17, 1, 0, 1, 1, 0, 0]' : 0.103106}
{'[2, 6, 1, 0, 0, 0, 1, 0, 29, 13, 0, 17, 1, 0, 1, 1, 0, 0]' : 0.103311}
{'[2, 6, 1, 0, 0, 0, 1, 0, 29, 13, 0, 17, 1, 0, 1, 1, 0, 0]' : 0.103208}

out:
 ["{'[2, 6, 1, 0, 0, 0, 1, 0, 29, 13, 0, 17, 1, 0, 1, 1, 0, 0]' : 0.120803}", "{'[2, 6, 1, 0, 0, 0, 1, 0, 29, 13, 0, 17, 1, 0, 1, 1, 0, 0]' : 0.120735}", "{'[2, 6, 1, 0, 0, 0, 1, 0, 29, 13, 0, 17, 1, 0, 1, 1, 0, 0]' : 0.1208}", "{'[2, 6, 1, 0, 0, 0, 1, 0, 29, 13, 0, 17, 1, 0, 1, 1, 0, 0]' : 0.110227}", "{'[2, 6, 1, 0, 0, 0, 1, 0, 29, 13, 0, 17, 1, 0, 1, 1, 0, 0]' : 0.103092}", "{'[2, 6, 1, 0, 0, 0, 1, 0, 29, 13, 0, 17, 1, 0, 1, 1, 0, 0]' : 0.103075}", "{'[2, 6, 1, 0, 0, 0, 1, 0, 29, 13, 0, 17, 1, 0, 1, 1, 0, 0]' : 0.102958}", "{'[2, 6, 1, 0, 0, 0, 1, 0, 29, 13, 0, 17, 1, 0, 1, 1, 0, 0]' : 0.103127}", "{'[2, 6, 1, 0, 0, 0, 1, 0, 29, 13, 0, 17, 1, 0, 1, 1, 0, 0]' : 0.10305}", "{'[2, 6, 1, 0, 0, 0, 1, 0, 29, 13, 0, 17, 1, 0, 1, 1, 0, 0]' : 0.103095}", "{'[2, 6, 1, 0, 0, 0, 1, 0, 29, 13, 0, 17, 1, 0, 1, 1, 0, 0]' : 0.103101}", "{'[2, 6, 1, 0, 0, 0, 1, 0, 29, 13, 0, 17, 1, 0, 1, 1, 0, 0]' : 0.103131}", "{'[2, 6, 1, 0, 0, 0, 1, 0, 29, 13, 0, 17, 1, 0, 1, 1, 0, 0]' : 0.103113}", "{'[2, 6, 1, 0, 0, 0, 1, 0, 29, 13, 0, 17, 1, 0, 1, 1, 0, 0]' : 0.10328}", "{'[2, 6, 1, 0, 0, 0, 1, 0, 29, 13, 0, 17, 1, 0, 1, 1, 0, 0]' : 0.10335}", "{'[2, 6, 1, 0, 0, 0, 1, 0, 29, 13, 0, 17, 1, 0, 1, 1, 0, 0]' : 0.103016}", "{'[2, 6, 1, 0, 0, 0, 1, 0, 29, 13, 0, 17, 1, 0, 1, 1, 0, 0]' : 0.103146}", "{'[2, 6, 1, 0, 0, 0, 1, 0, 29, 13, 0, 17, 1, 0, 1, 1, 0, 0]' : 0.103105}", "{'[2, 6, 1, 0, 0, 0, 1, 0, 29, 13, 0, 17, 1, 0, 1, 1, 0, 0]' : 0.103112}", "{'[2, 6, 1, 0, 0, 0, 1, 0, 29, 13, 0, 17, 1, 0, 1, 1, 0, 0]' : 0.1034}", "{'[2, 6, 1, 0, 0, 0, 1, 0, 29, 13, 0, 17, 1, 0, 1, 1, 0, 0]' : 0.103084}", "{'[2, 6, 1, 0, 0, 0, 1, 0, 29, 13, 0, 17, 1, 0, 1, 1, 0, 0]' : 0.103085}", "{'[2, 6, 1, 0, 0, 0, 1, 0, 29, 13, 0, 17, 1, 0, 1, 1, 0, 0]' : 0.103189}", "{'[2, 6, 1, 0, 0, 0, 1, 0, 29, 13, 0, 17, 1, 0, 1, 1, 0, 0]' : 0.103113}", "{'[2, 6, 1, 0, 0, 0, 1, 0, 29, 13, 0, 17, 1, 0, 1, 1, 0, 0]' : 0.103077}", "{'[2, 6, 1, 0, 0, 0, 1, 0, 29, 13, 0, 17, 1, 0, 1, 1, 0, 0]' : 0.103043}", "{'[2, 6, 1, 0, 0, 0, 1, 0, 29, 13, 0, 17, 1, 0, 1, 1, 0, 0]' : 0.103085}", "{'[2, 6, 1, 0, 0, 0, 1, 0, 29, 13, 0, 17, 1, 0, 1, 1, 0, 0]' : 0.103106}", "{'[2, 6, 1, 0, 0, 0, 1, 0, 29, 13, 0, 17, 1, 0, 1, 1, 0, 0]' : 0.103311}", "{'[2, 6, 1, 0, 0, 0, 1, 0, 29, 13, 0, 17, 1, 0, 1, 1, 0, 0]' : 0.103208}"]
returning from 'run': {'[2, 6, 1, 0, 0, 0, 1, 0, 29, 13, 0, 17, 1, 0, 1, 1, 0, 0]': ([0.120803, 0.120735, 0.1208, 0.110227, 0.103092, 0.103075, 0.102958, 0.103127, 0.10305, 0.103095, 0.103101, 0.103131, 0.103113, 0.10328, 0.10335, 0.103016, 0.103146, 0.103105, 0.103112, 0.1034, 0.103084, 0.103085, 0.103189, 0.103113, 0.103077, 0.103043, 0.103085, 0.103106, 0.103311, 0.103208], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 6, 1, 0, 0, 0, 1, 0, 29, 13, 0, 17, 1, 0, 1, 1, 0, 0]': ([0.120803, 0.120735, 0.1208, 0.110227, 0.103092, 0.103075, 0.102958, 0.103127, 0.10305, 0.103095, 0.103101, 0.103131, 0.103113, 0.10328, 0.10335, 0.103016, 0.103146, 0.103105, 0.103112, 0.1034, 0.103084, 0.103085, 0.103189, 0.103113, 0.103077, 0.103043, 0.103085, 0.103106, 0.103311, 0.103208], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Design Best Point:
[6, 6, 0, 0, 0, 6, 1, 0, 26, 8, 5, 0, 1, 1, 0, 1, 0, 0]
Length of requested configs: 1
Result was on Database, Returning Now
Fixed Factors: {'ACOPY_x': 1, 'ACOPY_y': 0, 'T1_J': 6, 'U_J': 0, 'T2_J': 0, 'T2_I': 0}
Slowdown (Design Best): 0.6405717999764584
Slowdown (Predicted Best): 0.6456633418117985
Budget: 66/180
Current Best Point: 
[4, 6, 0, 0, 0, 0, 1, 0, 1, 22, 7, 0, 1, 1, 0, 1, 1, 1]
Final Best Point: 
[4, 6, 0, 0, 0, 0, 1, 0, 1, 22, 7, 0, 1, 1, 0, 1, 1, 1]
Ending DOPT-ANOVA
Best Point: [4, 6, 0, 0, 0, 0, 1, 0, 1, 22, 7, 0, 1, 1, 0, 1, 1, 1]
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Speedup: 1.82153853795218
----- end random search -----
----- begin random search summary -----
 total completed runs: 0
 total successful runs: 0
 total failed runs: 0
 speedup: 1.82153853795218
----- end random search summary -----
----- begin summary -----
 best coordinate: [4, 6, 0, 0, 0, 0, 1, 0, 1, 22, 7, 0, 1, 1, 0, 1, 1, 1]={'ACOPY_x': True, 'ACOPY_y': False, 'RT_K': 1, 'T1_I': 128, 'T1_J': 512, 'T1_K': 1, 'U_K': 1, 'U_J': 8, 'U_I': 23, 'U1_I': 2, 'T2_K': 1, 'T2_J': 1, 'T2_I': 1, 'VEC2': True, 'VEC1': True, 'RT_I': 8, 'SCR': True, 'RT_J': 8}, cost=8.939192e-02, transfer_time=inf, inputs=[('N', 10000)], search_time=-779.38, runs=66
----- end summary -----
Length of requested configs: 1
Result was on Database, Returning Now
----- the obtained best performance parameters -----
 ACOPY_x = True
 ACOPY_y = False
 RT_I = 8
 RT_J = 8
 RT_K = 1
 SCR = True
 T1_I = 128
 T1_J = 512
 T1_K = 1
 T2_I = 1
 T2_J = 1
 T2_K = 1
 U1_I = 2
 U_I = 23
 U_J = 8
 U_K = 1
 VEC1 = True
 VEC2 = True
 cost_mean = 0.08939192333333332
 points = 66
 speedup_O3 = 1.82153853795218
 technique = DLMT
Code stats:
        Number of loops: 	40
        Max loop nest depth: 	4
        Additions: 		1318
        Multiplications: 	576
        Divisions: 		0
        Logical: 		0
        Reads: 			2748
        Writes: 		516
        Comparisons:		40
        Gotos: 			0
        
----- finish optimizations -----

----- begin removing annotations from output-----
----- finished removing annotations from output-----

----- begin writing the output file(s) -----
--> writing output to: _atax2.src1.c
----- finished writing the output file(s) -----

====== END ORIO ======
