
====== START ORIO ======

----- begin reading the source file: atax2.src1.c -----
----- finished reading the source file -----

----- begin parsing annotations -----
----- finished parsing annotations -----

----- begin optimizations -----
Search_Space         = 8.234e+13
Number_of_Parameters = 18
Numeric_Parameters   = 13
Binary_Parameters    = 05
['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
[[1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [False, True], [False, True], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 8, 32], [1, 8, 32], [1, 8, 32], [False, True], [False, True], [False, True]]

----- begin empirical tuning for problem size -----
 N = 10000
Parameters: {'ACOPY_x': [0, 2], 'ACOPY_y': [0, 2], 'RT_K': [0, 3], 'T1_I': [0, 7], 'T1_J': [0, 7], 'T1_K': [0, 7], 'U_K': [0, 30], 'U_J': [0, 30], 'U_I': [0, 30], 'U1_I': [0, 30], 'T2_K': [0, 7], 'T2_J': [0, 7], 'T2_I': [0, 7], 'VEC2': [0, 2], 'VEC1': [0, 2], 'RT_I': [0, 3], 'SCR': [0, 2], 'RT_J': [0, 3]}
Parameter Range Values: {'ACOPY_x': [False, True], 'ACOPY_y': [False, True], 'RT_K': [1, 8, 32], 'T1_I': [1, 16, 32, 64, 128, 256, 512], 'T1_J': [1, 16, 32, 64, 128, 256, 512], 'T1_K': [1, 16, 32, 64, 128, 256, 512], 'U_K': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_J': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U1_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'T2_K': [1, 64, 128, 256, 512, 1024, 2048], 'T2_J': [1, 64, 128, 256, 512, 1024, 2048], 'T2_I': [1, 64, 128, 256, 512, 1024, 2048], 'VEC2': [False, True], 'VEC1': [False, True], 'RT_I': [1, 8, 32], 'SCR': [False, True], 'RT_J': [1, 8, 32]}

----- begin random search -----
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Inverse Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Starting DOPT-anova
Step 0
Generating valid search space of size 4600 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Tested coordinates: 40000
Valid coordinates: 920
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Valid coordinates: 1840
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Tested coordinates: 110000
Valid coordinates: 2760
Tested coordinates: 120000
Tested coordinates: 130000
Tested coordinates: 140000
Tested coordinates: 150000
Valid coordinates: 3680
Tested coordinates: 160000
Tested coordinates: 170000
Tested coordinates: 180000
Tested coordinates: 190000
Valid coordinates: 4600
Valid/Tested configurations: 4600/192844
Generated Search Space:
NULL
Clean Info:
Removed Factors: character(0)

Removed Inverse Factors: [1] "ACOPY_x" "ACOPY_y" "SCR"     "VEC1"    "VEC2"   

New Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
New Inverse Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
New Fixed Factors: {}
Full Model:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Fixed Factors: {}
Computing D-Optimal Design
Computing D-Optimal Design with 46 experiments
Design Formula:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Starting "optFederov" run
Using Search Space:
NULL
Data Dimensions: [1] 4600   18

     T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
280     2    2    3    0    0    1       0       0   29   0   8   4    0    0
316     2    0    2    3    3    5       1       1    0   1   0  27    0    0
381     1    2    0    6    2    3       0       0   29  25  29   0    0    1
510     2    6    5    2    5    4       0       0    0   7   9   0    0    1
514     0    4    6    2    0    5       1       1    0   0  29  29    2    0
554     6    6    4    0    6    3       1       0   14   5   0   1    0    2
657     2    0    0    2    6    2       0       1    0  24  10   0    1    0
821     2    1    1    5    2    5       1       0   14  21   0   3    1    0
888     2    5    0    5    6    6       1       0    1  29  19   0    0    0
918     6    1    2    6    4    1       0       1    7   0  24  15    0    0
929     0    1    4    1    4    4       1       1   28  29   0  29    2    0
1017    6    6    4    0    4    5       1       1    9   5  26   0    0    1
1032    6    4    6    0    0    6       0       0    1  29   0  20    0    0
1480    6    0    4    6    1    3       1       1   23   0  20  12    0    0
1506    0    0    4    2    3    0       0       0   21  28   0   4    0    1
1612    6    0    0    4    5    2       1       0    8   0   5  29    0    0
1614    0    3    6    1    0    5       1       1   26   1  27   0    0    0
1623    0    0    5    5    4    0       0       0   16  29  11   0    0    0
1682    5    3    0    0    2    6       0       0    0   0  18  10    1    0
1750    2    1    1    2    3    5       0       0   13   6   0   5    2    0
1807    2    2    6    6    6    0       1       1    4  28   0  12    0    2
1820    2    0    6    6    6    5       0       1   29   0  17  10    0    1
1961    2    0    0    1    0    0       1       0    2   0   6  14    1    1
2026    2    4    0    0    3    1       0       1   21   1   0   0    0    2
2044    6    2    1    0    0    0       1       0   29  28  29   0    0    1
2065    1    2    4    0    6    3       0       0    2   0   2  27    0    0
2259    6    1    6    4    6    0       1       1   24   0  29   8    2    0
2465    3    3    5    1    0    5       1       0   24   0   0   0    0    1
2607    0    0    1    5    0    6       0       0    5  27   0   0    2    0
2624    5    0    0    0    2    6       0       1   15  18   9   0    2    0
2640    0    3    0    6    1    6       1       1   22  18   0  27    0    2
2642    5    1    6    6    4    0       0       0   28   4   0  22    2    0
2700    2    6    3    0    6    2       1       0   28  18   0  28    2    0
2719    0    6    2    0    6    1       0       0    6   0  16  15    0    2
2721    0    0    5    6    0    3       1       1    4   0  14  28    1    1
3006    4    3    0    2    6    5       0       1   21   3  28   0    0    0
3111    0    0    0    0    5    4       1       0   17   1   0   3    1    0
3596    5    0    6    3    4    6       0       1   24   0  29  28    1    0
3699    3    5    1    6    3    3       1       0   15   3   0   6    1    0
3879    5    3    1    6    6    6       1       0   25  14  12   0    0    2
4161    6    0    5    5    3    0       0       0    8   8  29   0    0    0
4303    0    2    1    1    5    0       1       0    0   0   3   1    0    1
4436    4    6    1    5    0    0       0       1   17  20   0  29    0    0
4449    5    0    0    6    2    1       0       1    0   0   8   9    1    1
4464    5    6    2    4    5    6       0       1   29   0   5   0    1    0
4488    3    0    2    1    0    1       0       1   10   0  19   4    0    2
     RT_K SCR VEC1 VEC2
280     2   0    0    1
316     0   1    1    1
381     1   1    0    1
510     1   1    0    1
514     0   0    1    1
554     0   0    0    0
657     1   0    1    0
821     1   0    1    1
888     2   1    1    0
918     2   0    1    1
929     0   1    0    0
1017    1   1    1    0
1032    1   0    1    1
1480    0   1    0    0
1506    0   0    1    1
1612    1   1    1    0
1614    2   0    1    0
1623    0   0    1    0
1682    1   0    0    0
1750    0   0    0    0
1807    0   1    0    0
1820    1   0    0    0
1961    0   1    0    0
2026    0   0    1    1
2044    0   1    1    1
2065    2   1    1    1
2259    0   0    0    1
2465    0   1    0    0
2607    0   1    0    0
2624    0   1    1    1
2640    0   1    0    1
2642    0   1    1    0
2700    0   0    1    0
2719    0   1    1    0
2721    0   0    1    0
3006    0   1    0    0
3111    1   1    0    1
3596    1   0    0    1
3699    0   1    1    1
3879    0   0    1    0
4161    2   0    0    1
4303    1   0    1    1
4436    1   0    0    1
4449    0   0    0    1
4464    0   1    1    1
4488    0   1    1    1

D-Efficiency Approximation: [1] 0.397

Measuring design of size 46
Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = kkk
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		298
        Multiplications: 	96
        Divisions: 		0
        Logical: 		0
        Reads: 			635
        Writes: 		109
        Comparisons:		11
        Gotos: 			0
        
 building the original code:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -DORIGINAL -o __orio_perftest_original.exe __orio_perftest1.c timer_cpu.o -lm
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest1.exe __orio_perftest1.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest1.exe  
Program Test Output: 
{'[2, 2, 3, 0, 0, 1, 0, 0, 29, 0, 8, 4, 0, 0, 2, 0, 0, 1]' : 0.218863}
{'[2, 2, 3, 0, 0, 1, 0, 0, 29, 0, 8, 4, 0, 0, 2, 0, 0, 1]' : 0.213717}
{'[2, 2, 3, 0, 0, 1, 0, 0, 29, 0, 8, 4, 0, 0, 2, 0, 0, 1]' : 0.183215}
{'[2, 2, 3, 0, 0, 1, 0, 0, 29, 0, 8, 4, 0, 0, 2, 0, 0, 1]' : 0.183102}
{'[2, 2, 3, 0, 0, 1, 0, 0, 29, 0, 8, 4, 0, 0, 2, 0, 0, 1]' : 0.183086}
{'[2, 2, 3, 0, 0, 1, 0, 0, 29, 0, 8, 4, 0, 0, 2, 0, 0, 1]' : 0.183094}
{'[2, 2, 3, 0, 0, 1, 0, 0, 29, 0, 8, 4, 0, 0, 2, 0, 0, 1]' : 0.183393}
{'[2, 2, 3, 0, 0, 1, 0, 0, 29, 0, 8, 4, 0, 0, 2, 0, 0, 1]' : 0.186604}
{'[2, 2, 3, 0, 0, 1, 0, 0, 29, 0, 8, 4, 0, 0, 2, 0, 0, 1]' : 0.18311}
{'[2, 2, 3, 0, 0, 1, 0, 0, 29, 0, 8, 4, 0, 0, 2, 0, 0, 1]' : 0.183098}
{'[2, 2, 3, 0, 0, 1, 0, 0, 29, 0, 8, 4, 0, 0, 2, 0, 0, 1]' : 0.183103}
{'[2, 2, 3, 0, 0, 1, 0, 0, 29, 0, 8, 4, 0, 0, 2, 0, 0, 1]' : 0.183104}
{'[2, 2, 3, 0, 0, 1, 0, 0, 29, 0, 8, 4, 0, 0, 2, 0, 0, 1]' : 0.183127}
{'[2, 2, 3, 0, 0, 1, 0, 0, 29, 0, 8, 4, 0, 0, 2, 0, 0, 1]' : 0.183066}
{'[2, 2, 3, 0, 0, 1, 0, 0, 29, 0, 8, 4, 0, 0, 2, 0, 0, 1]' : 0.183087}
{'[2, 2, 3, 0, 0, 1, 0, 0, 29, 0, 8, 4, 0, 0, 2, 0, 0, 1]' : 0.184302}
{'[2, 2, 3, 0, 0, 1, 0, 0, 29, 0, 8, 4, 0, 0, 2, 0, 0, 1]' : 0.18561}
{'[2, 2, 3, 0, 0, 1, 0, 0, 29, 0, 8, 4, 0, 0, 2, 0, 0, 1]' : 0.18333}
{'[2, 2, 3, 0, 0, 1, 0, 0, 29, 0, 8, 4, 0, 0, 2, 0, 0, 1]' : 0.183082}
{'[2, 2, 3, 0, 0, 1, 0, 0, 29, 0, 8, 4, 0, 0, 2, 0, 0, 1]' : 0.18314}
{'[2, 2, 3, 0, 0, 1, 0, 0, 29, 0, 8, 4, 0, 0, 2, 0, 0, 1]' : 0.183036}
{'[2, 2, 3, 0, 0, 1, 0, 0, 29, 0, 8, 4, 0, 0, 2, 0, 0, 1]' : 0.183396}
{'[2, 2, 3, 0, 0, 1, 0, 0, 29, 0, 8, 4, 0, 0, 2, 0, 0, 1]' : 0.183179}
{'[2, 2, 3, 0, 0, 1, 0, 0, 29, 0, 8, 4, 0, 0, 2, 0, 0, 1]' : 0.183102}
{'[2, 2, 3, 0, 0, 1, 0, 0, 29, 0, 8, 4, 0, 0, 2, 0, 0, 1]' : 0.186588}
{'[2, 2, 3, 0, 0, 1, 0, 0, 29, 0, 8, 4, 0, 0, 2, 0, 0, 1]' : 0.183191}
{'[2, 2, 3, 0, 0, 1, 0, 0, 29, 0, 8, 4, 0, 0, 2, 0, 0, 1]' : 0.183166}
{'[2, 2, 3, 0, 0, 1, 0, 0, 29, 0, 8, 4, 0, 0, 2, 0, 0, 1]' : 0.183236}
{'[2, 2, 3, 0, 0, 1, 0, 0, 29, 0, 8, 4, 0, 0, 2, 0, 0, 1]' : 0.183447}
{'[2, 2, 3, 0, 0, 1, 0, 0, 29, 0, 8, 4, 0, 0, 2, 0, 0, 1]' : 0.183193}

out:
 ["{'[2, 2, 3, 0, 0, 1, 0, 0, 29, 0, 8, 4, 0, 0, 2, 0, 0, 1]' : 0.218863}", "{'[2, 2, 3, 0, 0, 1, 0, 0, 29, 0, 8, 4, 0, 0, 2, 0, 0, 1]' : 0.213717}", "{'[2, 2, 3, 0, 0, 1, 0, 0, 29, 0, 8, 4, 0, 0, 2, 0, 0, 1]' : 0.183215}", "{'[2, 2, 3, 0, 0, 1, 0, 0, 29, 0, 8, 4, 0, 0, 2, 0, 0, 1]' : 0.183102}", "{'[2, 2, 3, 0, 0, 1, 0, 0, 29, 0, 8, 4, 0, 0, 2, 0, 0, 1]' : 0.183086}", "{'[2, 2, 3, 0, 0, 1, 0, 0, 29, 0, 8, 4, 0, 0, 2, 0, 0, 1]' : 0.183094}", "{'[2, 2, 3, 0, 0, 1, 0, 0, 29, 0, 8, 4, 0, 0, 2, 0, 0, 1]' : 0.183393}", "{'[2, 2, 3, 0, 0, 1, 0, 0, 29, 0, 8, 4, 0, 0, 2, 0, 0, 1]' : 0.186604}", "{'[2, 2, 3, 0, 0, 1, 0, 0, 29, 0, 8, 4, 0, 0, 2, 0, 0, 1]' : 0.18311}", "{'[2, 2, 3, 0, 0, 1, 0, 0, 29, 0, 8, 4, 0, 0, 2, 0, 0, 1]' : 0.183098}", "{'[2, 2, 3, 0, 0, 1, 0, 0, 29, 0, 8, 4, 0, 0, 2, 0, 0, 1]' : 0.183103}", "{'[2, 2, 3, 0, 0, 1, 0, 0, 29, 0, 8, 4, 0, 0, 2, 0, 0, 1]' : 0.183104}", "{'[2, 2, 3, 0, 0, 1, 0, 0, 29, 0, 8, 4, 0, 0, 2, 0, 0, 1]' : 0.183127}", "{'[2, 2, 3, 0, 0, 1, 0, 0, 29, 0, 8, 4, 0, 0, 2, 0, 0, 1]' : 0.183066}", "{'[2, 2, 3, 0, 0, 1, 0, 0, 29, 0, 8, 4, 0, 0, 2, 0, 0, 1]' : 0.183087}", "{'[2, 2, 3, 0, 0, 1, 0, 0, 29, 0, 8, 4, 0, 0, 2, 0, 0, 1]' : 0.184302}", "{'[2, 2, 3, 0, 0, 1, 0, 0, 29, 0, 8, 4, 0, 0, 2, 0, 0, 1]' : 0.18561}", "{'[2, 2, 3, 0, 0, 1, 0, 0, 29, 0, 8, 4, 0, 0, 2, 0, 0, 1]' : 0.18333}", "{'[2, 2, 3, 0, 0, 1, 0, 0, 29, 0, 8, 4, 0, 0, 2, 0, 0, 1]' : 0.183082}", "{'[2, 2, 3, 0, 0, 1, 0, 0, 29, 0, 8, 4, 0, 0, 2, 0, 0, 1]' : 0.18314}", "{'[2, 2, 3, 0, 0, 1, 0, 0, 29, 0, 8, 4, 0, 0, 2, 0, 0, 1]' : 0.183036}", "{'[2, 2, 3, 0, 0, 1, 0, 0, 29, 0, 8, 4, 0, 0, 2, 0, 0, 1]' : 0.183396}", "{'[2, 2, 3, 0, 0, 1, 0, 0, 29, 0, 8, 4, 0, 0, 2, 0, 0, 1]' : 0.183179}", "{'[2, 2, 3, 0, 0, 1, 0, 0, 29, 0, 8, 4, 0, 0, 2, 0, 0, 1]' : 0.183102}", "{'[2, 2, 3, 0, 0, 1, 0, 0, 29, 0, 8, 4, 0, 0, 2, 0, 0, 1]' : 0.186588}", "{'[2, 2, 3, 0, 0, 1, 0, 0, 29, 0, 8, 4, 0, 0, 2, 0, 0, 1]' : 0.183191}", "{'[2, 2, 3, 0, 0, 1, 0, 0, 29, 0, 8, 4, 0, 0, 2, 0, 0, 1]' : 0.183166}", "{'[2, 2, 3, 0, 0, 1, 0, 0, 29, 0, 8, 4, 0, 0, 2, 0, 0, 1]' : 0.183236}", "{'[2, 2, 3, 0, 0, 1, 0, 0, 29, 0, 8, 4, 0, 0, 2, 0, 0, 1]' : 0.183447}", "{'[2, 2, 3, 0, 0, 1, 0, 0, 29, 0, 8, 4, 0, 0, 2, 0, 0, 1]' : 0.183193}"]
returning from 'run': {'[2, 2, 3, 0, 0, 1, 0, 0, 29, 0, 8, 4, 0, 0, 2, 0, 0, 1]': ([0.218863, 0.213717, 0.183215, 0.183102, 0.183086, 0.183094, 0.183393, 0.186604, 0.18311, 0.183098, 0.183103, 0.183104, 0.183127, 0.183066, 0.183087, 0.184302, 0.18561, 0.18333, 0.183082, 0.18314, 0.183036, 0.183396, 0.183179, 0.183102, 0.186588, 0.183191, 0.183166, 0.183236, 0.183447, 0.183193], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 2, 3, 0, 0, 1, 0, 0, 29, 0, 8, 4, 0, 0, 2, 0, 0, 1]': ([0.218863, 0.213717, 0.183215, 0.183102, 0.183086, 0.183094, 0.183393, 0.186604, 0.18311, 0.183098, 0.183103, 0.183104, 0.183127, 0.183066, 0.183087, 0.184302, 0.18561, 0.18333, 0.183082, 0.18314, 0.183036, 0.183396, 0.183179, 0.183102, 0.186588, 0.183191, 0.183166, 0.183236, 0.183447, 0.183193], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	28
        Max loop nest depth: 	6
        Additions: 		758
        Multiplications: 	180
        Divisions: 		0
        Logical: 		0
        Reads: 			1624
        Writes: 		352
        Comparisons:		28
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest2.exe __orio_perftest2.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest2.exe  
Program Test Output: 
{'[2, 0, 2, 3, 3, 5, 1, 1, 0, 1, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.236963}
{'[2, 0, 2, 3, 3, 5, 1, 1, 0, 1, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.235955}
{'[2, 0, 2, 3, 3, 5, 1, 1, 0, 1, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.202567}
{'[2, 0, 2, 3, 3, 5, 1, 1, 0, 1, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.205472}
{'[2, 0, 2, 3, 3, 5, 1, 1, 0, 1, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.210489}
{'[2, 0, 2, 3, 3, 5, 1, 1, 0, 1, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.210468}
{'[2, 0, 2, 3, 3, 5, 1, 1, 0, 1, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.210416}
{'[2, 0, 2, 3, 3, 5, 1, 1, 0, 1, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.210512}
{'[2, 0, 2, 3, 3, 5, 1, 1, 0, 1, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.207079}
{'[2, 0, 2, 3, 3, 5, 1, 1, 0, 1, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.20998}
{'[2, 0, 2, 3, 3, 5, 1, 1, 0, 1, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.199767}
{'[2, 0, 2, 3, 3, 5, 1, 1, 0, 1, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.199579}
{'[2, 0, 2, 3, 3, 5, 1, 1, 0, 1, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.200051}
{'[2, 0, 2, 3, 3, 5, 1, 1, 0, 1, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.205635}
{'[2, 0, 2, 3, 3, 5, 1, 1, 0, 1, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.205096}
{'[2, 0, 2, 3, 3, 5, 1, 1, 0, 1, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.205514}
{'[2, 0, 2, 3, 3, 5, 1, 1, 0, 1, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.205243}
{'[2, 0, 2, 3, 3, 5, 1, 1, 0, 1, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.20493}
{'[2, 0, 2, 3, 3, 5, 1, 1, 0, 1, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.205568}
{'[2, 0, 2, 3, 3, 5, 1, 1, 0, 1, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.204987}
{'[2, 0, 2, 3, 3, 5, 1, 1, 0, 1, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.20543}
{'[2, 0, 2, 3, 3, 5, 1, 1, 0, 1, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.205169}
{'[2, 0, 2, 3, 3, 5, 1, 1, 0, 1, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.205068}
{'[2, 0, 2, 3, 3, 5, 1, 1, 0, 1, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.204892}
{'[2, 0, 2, 3, 3, 5, 1, 1, 0, 1, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.204798}
{'[2, 0, 2, 3, 3, 5, 1, 1, 0, 1, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.205208}
{'[2, 0, 2, 3, 3, 5, 1, 1, 0, 1, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.204964}
{'[2, 0, 2, 3, 3, 5, 1, 1, 0, 1, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.204841}
{'[2, 0, 2, 3, 3, 5, 1, 1, 0, 1, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.205147}
{'[2, 0, 2, 3, 3, 5, 1, 1, 0, 1, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.204893}

out:
 ["{'[2, 0, 2, 3, 3, 5, 1, 1, 0, 1, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.236963}", "{'[2, 0, 2, 3, 3, 5, 1, 1, 0, 1, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.235955}", "{'[2, 0, 2, 3, 3, 5, 1, 1, 0, 1, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.202567}", "{'[2, 0, 2, 3, 3, 5, 1, 1, 0, 1, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.205472}", "{'[2, 0, 2, 3, 3, 5, 1, 1, 0, 1, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.210489}", "{'[2, 0, 2, 3, 3, 5, 1, 1, 0, 1, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.210468}", "{'[2, 0, 2, 3, 3, 5, 1, 1, 0, 1, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.210416}", "{'[2, 0, 2, 3, 3, 5, 1, 1, 0, 1, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.210512}", "{'[2, 0, 2, 3, 3, 5, 1, 1, 0, 1, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.207079}", "{'[2, 0, 2, 3, 3, 5, 1, 1, 0, 1, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.20998}", "{'[2, 0, 2, 3, 3, 5, 1, 1, 0, 1, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.199767}", "{'[2, 0, 2, 3, 3, 5, 1, 1, 0, 1, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.199579}", "{'[2, 0, 2, 3, 3, 5, 1, 1, 0, 1, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.200051}", "{'[2, 0, 2, 3, 3, 5, 1, 1, 0, 1, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.205635}", "{'[2, 0, 2, 3, 3, 5, 1, 1, 0, 1, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.205096}", "{'[2, 0, 2, 3, 3, 5, 1, 1, 0, 1, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.205514}", "{'[2, 0, 2, 3, 3, 5, 1, 1, 0, 1, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.205243}", "{'[2, 0, 2, 3, 3, 5, 1, 1, 0, 1, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.20493}", "{'[2, 0, 2, 3, 3, 5, 1, 1, 0, 1, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.205568}", "{'[2, 0, 2, 3, 3, 5, 1, 1, 0, 1, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.204987}", "{'[2, 0, 2, 3, 3, 5, 1, 1, 0, 1, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.20543}", "{'[2, 0, 2, 3, 3, 5, 1, 1, 0, 1, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.205169}", "{'[2, 0, 2, 3, 3, 5, 1, 1, 0, 1, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.205068}", "{'[2, 0, 2, 3, 3, 5, 1, 1, 0, 1, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.204892}", "{'[2, 0, 2, 3, 3, 5, 1, 1, 0, 1, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.204798}", "{'[2, 0, 2, 3, 3, 5, 1, 1, 0, 1, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.205208}", "{'[2, 0, 2, 3, 3, 5, 1, 1, 0, 1, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.204964}", "{'[2, 0, 2, 3, 3, 5, 1, 1, 0, 1, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.204841}", "{'[2, 0, 2, 3, 3, 5, 1, 1, 0, 1, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.205147}", "{'[2, 0, 2, 3, 3, 5, 1, 1, 0, 1, 0, 27, 0, 0, 0, 1, 1, 1]' : 0.204893}"]
returning from 'run': {'[2, 0, 2, 3, 3, 5, 1, 1, 0, 1, 0, 27, 0, 0, 0, 1, 1, 1]': ([0.236963, 0.235955, 0.202567, 0.205472, 0.210489, 0.210468, 0.210416, 0.210512, 0.207079, 0.20998, 0.199767, 0.199579, 0.200051, 0.205635, 0.205096, 0.205514, 0.205243, 0.20493, 0.205568, 0.204987, 0.20543, 0.205169, 0.205068, 0.204892, 0.204798, 0.205208, 0.204964, 0.204841, 0.205147, 0.204893], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 0, 2, 3, 3, 5, 1, 1, 0, 1, 0, 27, 0, 0, 0, 1, 1, 1]': ([0.236963, 0.235955, 0.202567, 0.205472, 0.210489, 0.210468, 0.210416, 0.210512, 0.207079, 0.20998, 0.199767, 0.199579, 0.200051, 0.205635, 0.205096, 0.205514, 0.205243, 0.20493, 0.205568, 0.204987, 0.20543, 0.205169, 0.205068, 0.204892, 0.204798, 0.205208, 0.204964, 0.204841, 0.205147, 0.204893], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	72
        Max loop nest depth: 	6
        Additions: 		6353
        Multiplications: 	2592
        Divisions: 		0
        Logical: 		0
        Reads: 			11078
        Writes: 		1683
        Comparisons:		72
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest3.exe __orio_perftest3.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest3.exe  
Program Test Output: 
{'[1, 2, 0, 6, 2, 3, 0, 0, 29, 25, 29, 0, 0, 1, 1, 1, 0, 1]' : 0.172365}
{'[1, 2, 0, 6, 2, 3, 0, 0, 29, 25, 29, 0, 0, 1, 1, 1, 0, 1]' : 0.154267}
{'[1, 2, 0, 6, 2, 3, 0, 0, 29, 25, 29, 0, 0, 1, 1, 1, 0, 1]' : 0.153883}
{'[1, 2, 0, 6, 2, 3, 0, 0, 29, 25, 29, 0, 0, 1, 1, 1, 0, 1]' : 0.153834}
{'[1, 2, 0, 6, 2, 3, 0, 0, 29, 25, 29, 0, 0, 1, 1, 1, 0, 1]' : 0.154124}
{'[1, 2, 0, 6, 2, 3, 0, 0, 29, 25, 29, 0, 0, 1, 1, 1, 0, 1]' : 0.15408}
{'[1, 2, 0, 6, 2, 3, 0, 0, 29, 25, 29, 0, 0, 1, 1, 1, 0, 1]' : 0.154179}
{'[1, 2, 0, 6, 2, 3, 0, 0, 29, 25, 29, 0, 0, 1, 1, 1, 0, 1]' : 0.154105}
{'[1, 2, 0, 6, 2, 3, 0, 0, 29, 25, 29, 0, 0, 1, 1, 1, 0, 1]' : 0.154068}
{'[1, 2, 0, 6, 2, 3, 0, 0, 29, 25, 29, 0, 0, 1, 1, 1, 0, 1]' : 0.154021}
{'[1, 2, 0, 6, 2, 3, 0, 0, 29, 25, 29, 0, 0, 1, 1, 1, 0, 1]' : 0.153998}
{'[1, 2, 0, 6, 2, 3, 0, 0, 29, 25, 29, 0, 0, 1, 1, 1, 0, 1]' : 0.153944}
{'[1, 2, 0, 6, 2, 3, 0, 0, 29, 25, 29, 0, 0, 1, 1, 1, 0, 1]' : 0.154064}
{'[1, 2, 0, 6, 2, 3, 0, 0, 29, 25, 29, 0, 0, 1, 1, 1, 0, 1]' : 0.153508}
{'[1, 2, 0, 6, 2, 3, 0, 0, 29, 25, 29, 0, 0, 1, 1, 1, 0, 1]' : 0.149074}
{'[1, 2, 0, 6, 2, 3, 0, 0, 29, 25, 29, 0, 0, 1, 1, 1, 0, 1]' : 0.149546}
{'[1, 2, 0, 6, 2, 3, 0, 0, 29, 25, 29, 0, 0, 1, 1, 1, 0, 1]' : 0.14919}
{'[1, 2, 0, 6, 2, 3, 0, 0, 29, 25, 29, 0, 0, 1, 1, 1, 0, 1]' : 0.156842}
{'[1, 2, 0, 6, 2, 3, 0, 0, 29, 25, 29, 0, 0, 1, 1, 1, 0, 1]' : 0.157713}
{'[1, 2, 0, 6, 2, 3, 0, 0, 29, 25, 29, 0, 0, 1, 1, 1, 0, 1]' : 0.158042}
{'[1, 2, 0, 6, 2, 3, 0, 0, 29, 25, 29, 0, 0, 1, 1, 1, 0, 1]' : 0.155433}
{'[1, 2, 0, 6, 2, 3, 0, 0, 29, 25, 29, 0, 0, 1, 1, 1, 0, 1]' : 0.154028}
{'[1, 2, 0, 6, 2, 3, 0, 0, 29, 25, 29, 0, 0, 1, 1, 1, 0, 1]' : 0.154629}
{'[1, 2, 0, 6, 2, 3, 0, 0, 29, 25, 29, 0, 0, 1, 1, 1, 0, 1]' : 0.152406}
{'[1, 2, 0, 6, 2, 3, 0, 0, 29, 25, 29, 0, 0, 1, 1, 1, 0, 1]' : 0.149007}
{'[1, 2, 0, 6, 2, 3, 0, 0, 29, 25, 29, 0, 0, 1, 1, 1, 0, 1]' : 0.14945}
{'[1, 2, 0, 6, 2, 3, 0, 0, 29, 25, 29, 0, 0, 1, 1, 1, 0, 1]' : 0.149709}
{'[1, 2, 0, 6, 2, 3, 0, 0, 29, 25, 29, 0, 0, 1, 1, 1, 0, 1]' : 0.149097}
{'[1, 2, 0, 6, 2, 3, 0, 0, 29, 25, 29, 0, 0, 1, 1, 1, 0, 1]' : 0.149092}
{'[1, 2, 0, 6, 2, 3, 0, 0, 29, 25, 29, 0, 0, 1, 1, 1, 0, 1]' : 0.149039}

out:
 ["{'[1, 2, 0, 6, 2, 3, 0, 0, 29, 25, 29, 0, 0, 1, 1, 1, 0, 1]' : 0.172365}", "{'[1, 2, 0, 6, 2, 3, 0, 0, 29, 25, 29, 0, 0, 1, 1, 1, 0, 1]' : 0.154267}", "{'[1, 2, 0, 6, 2, 3, 0, 0, 29, 25, 29, 0, 0, 1, 1, 1, 0, 1]' : 0.153883}", "{'[1, 2, 0, 6, 2, 3, 0, 0, 29, 25, 29, 0, 0, 1, 1, 1, 0, 1]' : 0.153834}", "{'[1, 2, 0, 6, 2, 3, 0, 0, 29, 25, 29, 0, 0, 1, 1, 1, 0, 1]' : 0.154124}", "{'[1, 2, 0, 6, 2, 3, 0, 0, 29, 25, 29, 0, 0, 1, 1, 1, 0, 1]' : 0.15408}", "{'[1, 2, 0, 6, 2, 3, 0, 0, 29, 25, 29, 0, 0, 1, 1, 1, 0, 1]' : 0.154179}", "{'[1, 2, 0, 6, 2, 3, 0, 0, 29, 25, 29, 0, 0, 1, 1, 1, 0, 1]' : 0.154105}", "{'[1, 2, 0, 6, 2, 3, 0, 0, 29, 25, 29, 0, 0, 1, 1, 1, 0, 1]' : 0.154068}", "{'[1, 2, 0, 6, 2, 3, 0, 0, 29, 25, 29, 0, 0, 1, 1, 1, 0, 1]' : 0.154021}", "{'[1, 2, 0, 6, 2, 3, 0, 0, 29, 25, 29, 0, 0, 1, 1, 1, 0, 1]' : 0.153998}", "{'[1, 2, 0, 6, 2, 3, 0, 0, 29, 25, 29, 0, 0, 1, 1, 1, 0, 1]' : 0.153944}", "{'[1, 2, 0, 6, 2, 3, 0, 0, 29, 25, 29, 0, 0, 1, 1, 1, 0, 1]' : 0.154064}", "{'[1, 2, 0, 6, 2, 3, 0, 0, 29, 25, 29, 0, 0, 1, 1, 1, 0, 1]' : 0.153508}", "{'[1, 2, 0, 6, 2, 3, 0, 0, 29, 25, 29, 0, 0, 1, 1, 1, 0, 1]' : 0.149074}", "{'[1, 2, 0, 6, 2, 3, 0, 0, 29, 25, 29, 0, 0, 1, 1, 1, 0, 1]' : 0.149546}", "{'[1, 2, 0, 6, 2, 3, 0, 0, 29, 25, 29, 0, 0, 1, 1, 1, 0, 1]' : 0.14919}", "{'[1, 2, 0, 6, 2, 3, 0, 0, 29, 25, 29, 0, 0, 1, 1, 1, 0, 1]' : 0.156842}", "{'[1, 2, 0, 6, 2, 3, 0, 0, 29, 25, 29, 0, 0, 1, 1, 1, 0, 1]' : 0.157713}", "{'[1, 2, 0, 6, 2, 3, 0, 0, 29, 25, 29, 0, 0, 1, 1, 1, 0, 1]' : 0.158042}", "{'[1, 2, 0, 6, 2, 3, 0, 0, 29, 25, 29, 0, 0, 1, 1, 1, 0, 1]' : 0.155433}", "{'[1, 2, 0, 6, 2, 3, 0, 0, 29, 25, 29, 0, 0, 1, 1, 1, 0, 1]' : 0.154028}", "{'[1, 2, 0, 6, 2, 3, 0, 0, 29, 25, 29, 0, 0, 1, 1, 1, 0, 1]' : 0.154629}", "{'[1, 2, 0, 6, 2, 3, 0, 0, 29, 25, 29, 0, 0, 1, 1, 1, 0, 1]' : 0.152406}", "{'[1, 2, 0, 6, 2, 3, 0, 0, 29, 25, 29, 0, 0, 1, 1, 1, 0, 1]' : 0.149007}", "{'[1, 2, 0, 6, 2, 3, 0, 0, 29, 25, 29, 0, 0, 1, 1, 1, 0, 1]' : 0.14945}", "{'[1, 2, 0, 6, 2, 3, 0, 0, 29, 25, 29, 0, 0, 1, 1, 1, 0, 1]' : 0.149709}", "{'[1, 2, 0, 6, 2, 3, 0, 0, 29, 25, 29, 0, 0, 1, 1, 1, 0, 1]' : 0.149097}", "{'[1, 2, 0, 6, 2, 3, 0, 0, 29, 25, 29, 0, 0, 1, 1, 1, 0, 1]' : 0.149092}", "{'[1, 2, 0, 6, 2, 3, 0, 0, 29, 25, 29, 0, 0, 1, 1, 1, 0, 1]' : 0.149039}"]
returning from 'run': {'[1, 2, 0, 6, 2, 3, 0, 0, 29, 25, 29, 0, 0, 1, 1, 1, 0, 1]': ([0.172365, 0.154267, 0.153883, 0.153834, 0.154124, 0.15408, 0.154179, 0.154105, 0.154068, 0.154021, 0.153998, 0.153944, 0.154064, 0.153508, 0.149074, 0.149546, 0.14919, 0.156842, 0.157713, 0.158042, 0.155433, 0.154028, 0.154629, 0.152406, 0.149007, 0.14945, 0.149709, 0.149097, 0.149092, 0.149039], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 2, 0, 6, 2, 3, 0, 0, 29, 25, 29, 0, 0, 1, 1, 1, 0, 1]': ([0.172365, 0.154267, 0.153883, 0.153834, 0.154124, 0.15408, 0.154179, 0.154105, 0.154068, 0.154021, 0.153998, 0.153944, 0.154064, 0.153508, 0.149074, 0.149546, 0.14919, 0.156842, 0.157713, 0.158042, 0.155433, 0.154028, 0.154629, 0.152406, 0.149007, 0.14945, 0.149709, 0.149097, 0.149092, 0.149039], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	37
        Max loop nest depth: 	6
        Additions: 		1253
        Multiplications: 	504
        Divisions: 		0
        Logical: 		0
        Reads: 			2421
        Writes: 		431
        Comparisons:		37
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest4.exe __orio_perftest4.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest4.exe  
Program Test Output: 
{'[2, 6, 5, 2, 5, 4, 0, 0, 0, 7, 9, 0, 0, 1, 1, 1, 0, 1]' : 0.100879}
{'[2, 6, 5, 2, 5, 4, 0, 0, 0, 7, 9, 0, 0, 1, 1, 1, 0, 1]' : 0.100707}
{'[2, 6, 5, 2, 5, 4, 0, 0, 0, 7, 9, 0, 0, 1, 1, 1, 0, 1]' : 0.100686}
{'[2, 6, 5, 2, 5, 4, 0, 0, 0, 7, 9, 0, 0, 1, 1, 1, 0, 1]' : 0.100651}
{'[2, 6, 5, 2, 5, 4, 0, 0, 0, 7, 9, 0, 0, 1, 1, 1, 0, 1]' : 0.10038}
{'[2, 6, 5, 2, 5, 4, 0, 0, 0, 7, 9, 0, 0, 1, 1, 1, 0, 1]' : 0.100187}
{'[2, 6, 5, 2, 5, 4, 0, 0, 0, 7, 9, 0, 0, 1, 1, 1, 0, 1]' : 0.097013}
{'[2, 6, 5, 2, 5, 4, 0, 0, 0, 7, 9, 0, 0, 1, 1, 1, 0, 1]' : 0.0908639}
{'[2, 6, 5, 2, 5, 4, 0, 0, 0, 7, 9, 0, 0, 1, 1, 1, 0, 1]' : 0.0909569}
{'[2, 6, 5, 2, 5, 4, 0, 0, 0, 7, 9, 0, 0, 1, 1, 1, 0, 1]' : 0.091013}
{'[2, 6, 5, 2, 5, 4, 0, 0, 0, 7, 9, 0, 0, 1, 1, 1, 0, 1]' : 0.0909321}
{'[2, 6, 5, 2, 5, 4, 0, 0, 0, 7, 9, 0, 0, 1, 1, 1, 0, 1]' : 0.09076}
{'[2, 6, 5, 2, 5, 4, 0, 0, 0, 7, 9, 0, 0, 1, 1, 1, 0, 1]' : 0.0888171}
{'[2, 6, 5, 2, 5, 4, 0, 0, 0, 7, 9, 0, 0, 1, 1, 1, 0, 1]' : 0.088912}
{'[2, 6, 5, 2, 5, 4, 0, 0, 0, 7, 9, 0, 0, 1, 1, 1, 0, 1]' : 0.0888121}
{'[2, 6, 5, 2, 5, 4, 0, 0, 0, 7, 9, 0, 0, 1, 1, 1, 0, 1]' : 0.0889819}
{'[2, 6, 5, 2, 5, 4, 0, 0, 0, 7, 9, 0, 0, 1, 1, 1, 0, 1]' : 0.0883698}
{'[2, 6, 5, 2, 5, 4, 0, 0, 0, 7, 9, 0, 0, 1, 1, 1, 0, 1]' : 0.0882919}
{'[2, 6, 5, 2, 5, 4, 0, 0, 0, 7, 9, 0, 0, 1, 1, 1, 0, 1]' : 0.0887899}
{'[2, 6, 5, 2, 5, 4, 0, 0, 0, 7, 9, 0, 0, 1, 1, 1, 0, 1]' : 0.0888231}
{'[2, 6, 5, 2, 5, 4, 0, 0, 0, 7, 9, 0, 0, 1, 1, 1, 0, 1]' : 0.0887301}
{'[2, 6, 5, 2, 5, 4, 0, 0, 0, 7, 9, 0, 0, 1, 1, 1, 0, 1]' : 0.089138}
{'[2, 6, 5, 2, 5, 4, 0, 0, 0, 7, 9, 0, 0, 1, 1, 1, 0, 1]' : 0.0889049}
{'[2, 6, 5, 2, 5, 4, 0, 0, 0, 7, 9, 0, 0, 1, 1, 1, 0, 1]' : 0.0896919}
{'[2, 6, 5, 2, 5, 4, 0, 0, 0, 7, 9, 0, 0, 1, 1, 1, 0, 1]' : 0.0908592}
{'[2, 6, 5, 2, 5, 4, 0, 0, 0, 7, 9, 0, 0, 1, 1, 1, 0, 1]' : 0.089}
{'[2, 6, 5, 2, 5, 4, 0, 0, 0, 7, 9, 0, 0, 1, 1, 1, 0, 1]' : 0.0889618}
{'[2, 6, 5, 2, 5, 4, 0, 0, 0, 7, 9, 0, 0, 1, 1, 1, 0, 1]' : 0.0872118}
{'[2, 6, 5, 2, 5, 4, 0, 0, 0, 7, 9, 0, 0, 1, 1, 1, 0, 1]' : 0.0877881}
{'[2, 6, 5, 2, 5, 4, 0, 0, 0, 7, 9, 0, 0, 1, 1, 1, 0, 1]' : 0.088906}

out:
 ["{'[2, 6, 5, 2, 5, 4, 0, 0, 0, 7, 9, 0, 0, 1, 1, 1, 0, 1]' : 0.100879}", "{'[2, 6, 5, 2, 5, 4, 0, 0, 0, 7, 9, 0, 0, 1, 1, 1, 0, 1]' : 0.100707}", "{'[2, 6, 5, 2, 5, 4, 0, 0, 0, 7, 9, 0, 0, 1, 1, 1, 0, 1]' : 0.100686}", "{'[2, 6, 5, 2, 5, 4, 0, 0, 0, 7, 9, 0, 0, 1, 1, 1, 0, 1]' : 0.100651}", "{'[2, 6, 5, 2, 5, 4, 0, 0, 0, 7, 9, 0, 0, 1, 1, 1, 0, 1]' : 0.10038}", "{'[2, 6, 5, 2, 5, 4, 0, 0, 0, 7, 9, 0, 0, 1, 1, 1, 0, 1]' : 0.100187}", "{'[2, 6, 5, 2, 5, 4, 0, 0, 0, 7, 9, 0, 0, 1, 1, 1, 0, 1]' : 0.097013}", "{'[2, 6, 5, 2, 5, 4, 0, 0, 0, 7, 9, 0, 0, 1, 1, 1, 0, 1]' : 0.0908639}", "{'[2, 6, 5, 2, 5, 4, 0, 0, 0, 7, 9, 0, 0, 1, 1, 1, 0, 1]' : 0.0909569}", "{'[2, 6, 5, 2, 5, 4, 0, 0, 0, 7, 9, 0, 0, 1, 1, 1, 0, 1]' : 0.091013}", "{'[2, 6, 5, 2, 5, 4, 0, 0, 0, 7, 9, 0, 0, 1, 1, 1, 0, 1]' : 0.0909321}", "{'[2, 6, 5, 2, 5, 4, 0, 0, 0, 7, 9, 0, 0, 1, 1, 1, 0, 1]' : 0.09076}", "{'[2, 6, 5, 2, 5, 4, 0, 0, 0, 7, 9, 0, 0, 1, 1, 1, 0, 1]' : 0.0888171}", "{'[2, 6, 5, 2, 5, 4, 0, 0, 0, 7, 9, 0, 0, 1, 1, 1, 0, 1]' : 0.088912}", "{'[2, 6, 5, 2, 5, 4, 0, 0, 0, 7, 9, 0, 0, 1, 1, 1, 0, 1]' : 0.0888121}", "{'[2, 6, 5, 2, 5, 4, 0, 0, 0, 7, 9, 0, 0, 1, 1, 1, 0, 1]' : 0.0889819}", "{'[2, 6, 5, 2, 5, 4, 0, 0, 0, 7, 9, 0, 0, 1, 1, 1, 0, 1]' : 0.0883698}", "{'[2, 6, 5, 2, 5, 4, 0, 0, 0, 7, 9, 0, 0, 1, 1, 1, 0, 1]' : 0.0882919}", "{'[2, 6, 5, 2, 5, 4, 0, 0, 0, 7, 9, 0, 0, 1, 1, 1, 0, 1]' : 0.0887899}", "{'[2, 6, 5, 2, 5, 4, 0, 0, 0, 7, 9, 0, 0, 1, 1, 1, 0, 1]' : 0.0888231}", "{'[2, 6, 5, 2, 5, 4, 0, 0, 0, 7, 9, 0, 0, 1, 1, 1, 0, 1]' : 0.0887301}", "{'[2, 6, 5, 2, 5, 4, 0, 0, 0, 7, 9, 0, 0, 1, 1, 1, 0, 1]' : 0.089138}", "{'[2, 6, 5, 2, 5, 4, 0, 0, 0, 7, 9, 0, 0, 1, 1, 1, 0, 1]' : 0.0889049}", "{'[2, 6, 5, 2, 5, 4, 0, 0, 0, 7, 9, 0, 0, 1, 1, 1, 0, 1]' : 0.0896919}", "{'[2, 6, 5, 2, 5, 4, 0, 0, 0, 7, 9, 0, 0, 1, 1, 1, 0, 1]' : 0.0908592}", "{'[2, 6, 5, 2, 5, 4, 0, 0, 0, 7, 9, 0, 0, 1, 1, 1, 0, 1]' : 0.089}", "{'[2, 6, 5, 2, 5, 4, 0, 0, 0, 7, 9, 0, 0, 1, 1, 1, 0, 1]' : 0.0889618}", "{'[2, 6, 5, 2, 5, 4, 0, 0, 0, 7, 9, 0, 0, 1, 1, 1, 0, 1]' : 0.0872118}", "{'[2, 6, 5, 2, 5, 4, 0, 0, 0, 7, 9, 0, 0, 1, 1, 1, 0, 1]' : 0.0877881}", "{'[2, 6, 5, 2, 5, 4, 0, 0, 0, 7, 9, 0, 0, 1, 1, 1, 0, 1]' : 0.088906}"]
returning from 'run': {'[2, 6, 5, 2, 5, 4, 0, 0, 0, 7, 9, 0, 0, 1, 1, 1, 0, 1]': ([0.100879, 0.100707, 0.100686, 0.100651, 0.10038, 0.100187, 0.097013, 0.0908639, 0.0909569, 0.091013, 0.0909321, 0.09076, 0.0888171, 0.088912, 0.0888121, 0.0889819, 0.0883698, 0.0882919, 0.0887899, 0.0888231, 0.0887301, 0.089138, 0.0889049, 0.0896919, 0.0908592, 0.089, 0.0889618, 0.0872118, 0.0877881, 0.088906], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 6, 5, 2, 5, 4, 0, 0, 0, 7, 9, 0, 0, 1, 1, 1, 0, 1]': ([0.100879, 0.100707, 0.100686, 0.100651, 0.10038, 0.100187, 0.097013, 0.0908639, 0.0909569, 0.091013, 0.0909321, 0.09076, 0.0888171, 0.088912, 0.0888121, 0.0889819, 0.0883698, 0.0882919, 0.0887899, 0.0888231, 0.0887301, 0.089138, 0.0889049, 0.0896919, 0.0908592, 0.089, 0.0889618, 0.0872118, 0.0877881, 0.088906], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	5
        Additions: 		16864
        Multiplications: 	4092
        Divisions: 		0
        Logical: 		0
        Reads: 			23763
        Writes: 		2116
        Comparisons:		24
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest5.exe __orio_perftest5.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest5.exe  
Program Test Output: 
{'[0, 4, 6, 2, 0, 5, 1, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.273914}
{'[0, 4, 6, 2, 0, 5, 1, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.273217}
{'[0, 4, 6, 2, 0, 5, 1, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.275274}
{'[0, 4, 6, 2, 0, 5, 1, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.271741}
{'[0, 4, 6, 2, 0, 5, 1, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.270424}
{'[0, 4, 6, 2, 0, 5, 1, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.274336}
{'[0, 4, 6, 2, 0, 5, 1, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.274689}
{'[0, 4, 6, 2, 0, 5, 1, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.273576}
{'[0, 4, 6, 2, 0, 5, 1, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.271259}
{'[0, 4, 6, 2, 0, 5, 1, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.275549}
{'[0, 4, 6, 2, 0, 5, 1, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.27404}
{'[0, 4, 6, 2, 0, 5, 1, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.272979}
{'[0, 4, 6, 2, 0, 5, 1, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.272714}
{'[0, 4, 6, 2, 0, 5, 1, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.269502}
{'[0, 4, 6, 2, 0, 5, 1, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.272072}
{'[0, 4, 6, 2, 0, 5, 1, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.271833}
{'[0, 4, 6, 2, 0, 5, 1, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.275777}
{'[0, 4, 6, 2, 0, 5, 1, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.267982}
{'[0, 4, 6, 2, 0, 5, 1, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.270958}
{'[0, 4, 6, 2, 0, 5, 1, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.267513}
{'[0, 4, 6, 2, 0, 5, 1, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.270904}
{'[0, 4, 6, 2, 0, 5, 1, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.275689}
{'[0, 4, 6, 2, 0, 5, 1, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.272947}
{'[0, 4, 6, 2, 0, 5, 1, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.276312}
{'[0, 4, 6, 2, 0, 5, 1, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.273142}
{'[0, 4, 6, 2, 0, 5, 1, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.271401}
{'[0, 4, 6, 2, 0, 5, 1, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.275398}
{'[0, 4, 6, 2, 0, 5, 1, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.273397}
{'[0, 4, 6, 2, 0, 5, 1, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.275687}
{'[0, 4, 6, 2, 0, 5, 1, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.274238}

out:
 ["{'[0, 4, 6, 2, 0, 5, 1, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.273914}", "{'[0, 4, 6, 2, 0, 5, 1, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.273217}", "{'[0, 4, 6, 2, 0, 5, 1, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.275274}", "{'[0, 4, 6, 2, 0, 5, 1, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.271741}", "{'[0, 4, 6, 2, 0, 5, 1, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.270424}", "{'[0, 4, 6, 2, 0, 5, 1, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.274336}", "{'[0, 4, 6, 2, 0, 5, 1, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.274689}", "{'[0, 4, 6, 2, 0, 5, 1, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.273576}", "{'[0, 4, 6, 2, 0, 5, 1, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.271259}", "{'[0, 4, 6, 2, 0, 5, 1, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.275549}", "{'[0, 4, 6, 2, 0, 5, 1, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.27404}", "{'[0, 4, 6, 2, 0, 5, 1, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.272979}", "{'[0, 4, 6, 2, 0, 5, 1, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.272714}", "{'[0, 4, 6, 2, 0, 5, 1, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.269502}", "{'[0, 4, 6, 2, 0, 5, 1, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.272072}", "{'[0, 4, 6, 2, 0, 5, 1, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.271833}", "{'[0, 4, 6, 2, 0, 5, 1, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.275777}", "{'[0, 4, 6, 2, 0, 5, 1, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.267982}", "{'[0, 4, 6, 2, 0, 5, 1, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.270958}", "{'[0, 4, 6, 2, 0, 5, 1, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.267513}", "{'[0, 4, 6, 2, 0, 5, 1, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.270904}", "{'[0, 4, 6, 2, 0, 5, 1, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.275689}", "{'[0, 4, 6, 2, 0, 5, 1, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.272947}", "{'[0, 4, 6, 2, 0, 5, 1, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.276312}", "{'[0, 4, 6, 2, 0, 5, 1, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.273142}", "{'[0, 4, 6, 2, 0, 5, 1, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.271401}", "{'[0, 4, 6, 2, 0, 5, 1, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.275398}", "{'[0, 4, 6, 2, 0, 5, 1, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.273397}", "{'[0, 4, 6, 2, 0, 5, 1, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.275687}", "{'[0, 4, 6, 2, 0, 5, 1, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]' : 0.274238}"]
returning from 'run': {'[0, 4, 6, 2, 0, 5, 1, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]': ([0.273914, 0.273217, 0.275274, 0.271741, 0.270424, 0.274336, 0.274689, 0.273576, 0.271259, 0.275549, 0.27404, 0.272979, 0.272714, 0.269502, 0.272072, 0.271833, 0.275777, 0.267982, 0.270958, 0.267513, 0.270904, 0.275689, 0.272947, 0.276312, 0.273142, 0.271401, 0.275398, 0.273397, 0.275687, 0.274238], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 4, 6, 2, 0, 5, 1, 1, 0, 0, 29, 29, 2, 0, 0, 0, 1, 1]': ([0.273914, 0.273217, 0.275274, 0.271741, 0.270424, 0.274336, 0.274689, 0.273576, 0.271259, 0.275549, 0.27404, 0.272979, 0.272714, 0.269502, 0.272072, 0.271833, 0.275777, 0.267982, 0.270958, 0.267513, 0.270904, 0.275689, 0.272947, 0.276312, 0.273142, 0.271401, 0.275398, 0.273397, 0.275687, 0.274238], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	26
        Max loop nest depth: 	5
        Additions: 		1811
        Multiplications: 	490
        Divisions: 		0
        Logical: 		0
        Reads: 			2937
        Writes: 		327
        Comparisons:		26
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest6.exe __orio_perftest6.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest6.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest6.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest6.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest6.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	75
        Max loop nest depth: 	5
        Additions: 		5249
        Multiplications: 	1360
        Divisions: 		0
        Logical: 		0
        Reads: 			8197
        Writes: 		913
        Comparisons:		75
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest7.exe __orio_perftest7.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest7.exe  
Program Test Output: 
{'[2, 0, 0, 2, 6, 2, 0, 1, 0, 24, 10, 0, 1, 0, 1, 0, 1, 0]' : 0.119989}
{'[2, 0, 0, 2, 6, 2, 0, 1, 0, 24, 10, 0, 1, 0, 1, 0, 1, 0]' : 0.119607}
{'[2, 0, 0, 2, 6, 2, 0, 1, 0, 24, 10, 0, 1, 0, 1, 0, 1, 0]' : 0.11934}
{'[2, 0, 0, 2, 6, 2, 0, 1, 0, 24, 10, 0, 1, 0, 1, 0, 1, 0]' : 0.109251}
{'[2, 0, 0, 2, 6, 2, 0, 1, 0, 24, 10, 0, 1, 0, 1, 0, 1, 0]' : 0.105827}
{'[2, 0, 0, 2, 6, 2, 0, 1, 0, 24, 10, 0, 1, 0, 1, 0, 1, 0]' : 0.107564}
{'[2, 0, 0, 2, 6, 2, 0, 1, 0, 24, 10, 0, 1, 0, 1, 0, 1, 0]' : 0.108875}
{'[2, 0, 0, 2, 6, 2, 0, 1, 0, 24, 10, 0, 1, 0, 1, 0, 1, 0]' : 0.108835}
{'[2, 0, 0, 2, 6, 2, 0, 1, 0, 24, 10, 0, 1, 0, 1, 0, 1, 0]' : 0.108842}
{'[2, 0, 0, 2, 6, 2, 0, 1, 0, 24, 10, 0, 1, 0, 1, 0, 1, 0]' : 0.108924}
{'[2, 0, 0, 2, 6, 2, 0, 1, 0, 24, 10, 0, 1, 0, 1, 0, 1, 0]' : 0.108729}
{'[2, 0, 0, 2, 6, 2, 0, 1, 0, 24, 10, 0, 1, 0, 1, 0, 1, 0]' : 0.106761}
{'[2, 0, 0, 2, 6, 2, 0, 1, 0, 24, 10, 0, 1, 0, 1, 0, 1, 0]' : 0.106359}
{'[2, 0, 0, 2, 6, 2, 0, 1, 0, 24, 10, 0, 1, 0, 1, 0, 1, 0]' : 0.103799}
{'[2, 0, 0, 2, 6, 2, 0, 1, 0, 24, 10, 0, 1, 0, 1, 0, 1, 0]' : 0.105154}
{'[2, 0, 0, 2, 6, 2, 0, 1, 0, 24, 10, 0, 1, 0, 1, 0, 1, 0]' : 0.104282}
{'[2, 0, 0, 2, 6, 2, 0, 1, 0, 24, 10, 0, 1, 0, 1, 0, 1, 0]' : 0.108954}
{'[2, 0, 0, 2, 6, 2, 0, 1, 0, 24, 10, 0, 1, 0, 1, 0, 1, 0]' : 0.108941}
{'[2, 0, 0, 2, 6, 2, 0, 1, 0, 24, 10, 0, 1, 0, 1, 0, 1, 0]' : 0.108832}
{'[2, 0, 0, 2, 6, 2, 0, 1, 0, 24, 10, 0, 1, 0, 1, 0, 1, 0]' : 0.108944}
{'[2, 0, 0, 2, 6, 2, 0, 1, 0, 24, 10, 0, 1, 0, 1, 0, 1, 0]' : 0.107925}
{'[2, 0, 0, 2, 6, 2, 0, 1, 0, 24, 10, 0, 1, 0, 1, 0, 1, 0]' : 0.106399}
{'[2, 0, 0, 2, 6, 2, 0, 1, 0, 24, 10, 0, 1, 0, 1, 0, 1, 0]' : 0.106036}
{'[2, 0, 0, 2, 6, 2, 0, 1, 0, 24, 10, 0, 1, 0, 1, 0, 1, 0]' : 0.103703}
{'[2, 0, 0, 2, 6, 2, 0, 1, 0, 24, 10, 0, 1, 0, 1, 0, 1, 0]' : 0.103695}
{'[2, 0, 0, 2, 6, 2, 0, 1, 0, 24, 10, 0, 1, 0, 1, 0, 1, 0]' : 0.105949}
{'[2, 0, 0, 2, 6, 2, 0, 1, 0, 24, 10, 0, 1, 0, 1, 0, 1, 0]' : 0.106279}
{'[2, 0, 0, 2, 6, 2, 0, 1, 0, 24, 10, 0, 1, 0, 1, 0, 1, 0]' : 0.107555}
{'[2, 0, 0, 2, 6, 2, 0, 1, 0, 24, 10, 0, 1, 0, 1, 0, 1, 0]' : 0.109032}
{'[2, 0, 0, 2, 6, 2, 0, 1, 0, 24, 10, 0, 1, 0, 1, 0, 1, 0]' : 0.106765}

out:
 ["{'[2, 0, 0, 2, 6, 2, 0, 1, 0, 24, 10, 0, 1, 0, 1, 0, 1, 0]' : 0.119989}", "{'[2, 0, 0, 2, 6, 2, 0, 1, 0, 24, 10, 0, 1, 0, 1, 0, 1, 0]' : 0.119607}", "{'[2, 0, 0, 2, 6, 2, 0, 1, 0, 24, 10, 0, 1, 0, 1, 0, 1, 0]' : 0.11934}", "{'[2, 0, 0, 2, 6, 2, 0, 1, 0, 24, 10, 0, 1, 0, 1, 0, 1, 0]' : 0.109251}", "{'[2, 0, 0, 2, 6, 2, 0, 1, 0, 24, 10, 0, 1, 0, 1, 0, 1, 0]' : 0.105827}", "{'[2, 0, 0, 2, 6, 2, 0, 1, 0, 24, 10, 0, 1, 0, 1, 0, 1, 0]' : 0.107564}", "{'[2, 0, 0, 2, 6, 2, 0, 1, 0, 24, 10, 0, 1, 0, 1, 0, 1, 0]' : 0.108875}", "{'[2, 0, 0, 2, 6, 2, 0, 1, 0, 24, 10, 0, 1, 0, 1, 0, 1, 0]' : 0.108835}", "{'[2, 0, 0, 2, 6, 2, 0, 1, 0, 24, 10, 0, 1, 0, 1, 0, 1, 0]' : 0.108842}", "{'[2, 0, 0, 2, 6, 2, 0, 1, 0, 24, 10, 0, 1, 0, 1, 0, 1, 0]' : 0.108924}", "{'[2, 0, 0, 2, 6, 2, 0, 1, 0, 24, 10, 0, 1, 0, 1, 0, 1, 0]' : 0.108729}", "{'[2, 0, 0, 2, 6, 2, 0, 1, 0, 24, 10, 0, 1, 0, 1, 0, 1, 0]' : 0.106761}", "{'[2, 0, 0, 2, 6, 2, 0, 1, 0, 24, 10, 0, 1, 0, 1, 0, 1, 0]' : 0.106359}", "{'[2, 0, 0, 2, 6, 2, 0, 1, 0, 24, 10, 0, 1, 0, 1, 0, 1, 0]' : 0.103799}", "{'[2, 0, 0, 2, 6, 2, 0, 1, 0, 24, 10, 0, 1, 0, 1, 0, 1, 0]' : 0.105154}", "{'[2, 0, 0, 2, 6, 2, 0, 1, 0, 24, 10, 0, 1, 0, 1, 0, 1, 0]' : 0.104282}", "{'[2, 0, 0, 2, 6, 2, 0, 1, 0, 24, 10, 0, 1, 0, 1, 0, 1, 0]' : 0.108954}", "{'[2, 0, 0, 2, 6, 2, 0, 1, 0, 24, 10, 0, 1, 0, 1, 0, 1, 0]' : 0.108941}", "{'[2, 0, 0, 2, 6, 2, 0, 1, 0, 24, 10, 0, 1, 0, 1, 0, 1, 0]' : 0.108832}", "{'[2, 0, 0, 2, 6, 2, 0, 1, 0, 24, 10, 0, 1, 0, 1, 0, 1, 0]' : 0.108944}", "{'[2, 0, 0, 2, 6, 2, 0, 1, 0, 24, 10, 0, 1, 0, 1, 0, 1, 0]' : 0.107925}", "{'[2, 0, 0, 2, 6, 2, 0, 1, 0, 24, 10, 0, 1, 0, 1, 0, 1, 0]' : 0.106399}", "{'[2, 0, 0, 2, 6, 2, 0, 1, 0, 24, 10, 0, 1, 0, 1, 0, 1, 0]' : 0.106036}", "{'[2, 0, 0, 2, 6, 2, 0, 1, 0, 24, 10, 0, 1, 0, 1, 0, 1, 0]' : 0.103703}", "{'[2, 0, 0, 2, 6, 2, 0, 1, 0, 24, 10, 0, 1, 0, 1, 0, 1, 0]' : 0.103695}", "{'[2, 0, 0, 2, 6, 2, 0, 1, 0, 24, 10, 0, 1, 0, 1, 0, 1, 0]' : 0.105949}", "{'[2, 0, 0, 2, 6, 2, 0, 1, 0, 24, 10, 0, 1, 0, 1, 0, 1, 0]' : 0.106279}", "{'[2, 0, 0, 2, 6, 2, 0, 1, 0, 24, 10, 0, 1, 0, 1, 0, 1, 0]' : 0.107555}", "{'[2, 0, 0, 2, 6, 2, 0, 1, 0, 24, 10, 0, 1, 0, 1, 0, 1, 0]' : 0.109032}", "{'[2, 0, 0, 2, 6, 2, 0, 1, 0, 24, 10, 0, 1, 0, 1, 0, 1, 0]' : 0.106765}"]
returning from 'run': {'[2, 0, 0, 2, 6, 2, 0, 1, 0, 24, 10, 0, 1, 0, 1, 0, 1, 0]': ([0.119989, 0.119607, 0.11934, 0.109251, 0.105827, 0.107564, 0.108875, 0.108835, 0.108842, 0.108924, 0.108729, 0.106761, 0.106359, 0.103799, 0.105154, 0.104282, 0.108954, 0.108941, 0.108832, 0.108944, 0.107925, 0.106399, 0.106036, 0.103703, 0.103695, 0.105949, 0.106279, 0.107555, 0.109032, 0.106765], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 0, 0, 2, 6, 2, 0, 1, 0, 24, 10, 0, 1, 0, 1, 0, 1, 0]': ([0.119989, 0.119607, 0.11934, 0.109251, 0.105827, 0.107564, 0.108875, 0.108835, 0.108842, 0.108924, 0.108729, 0.106761, 0.106359, 0.103799, 0.105154, 0.104282, 0.108954, 0.108941, 0.108832, 0.108944, 0.107925, 0.106399, 0.106036, 0.103703, 0.103695, 0.105949, 0.106279, 0.107555, 0.109032, 0.106765], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	97
        Max loop nest depth: 	6
        Additions: 		3239
        Multiplications: 	868
        Divisions: 		0
        Logical: 		0
        Reads: 			5496
        Writes: 		773
        Comparisons:		97
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest8.exe __orio_perftest8.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest8.exe  
Program Test Output: 
{'[2, 1, 1, 5, 2, 5, 1, 0, 14, 21, 0, 3, 1, 0, 1, 0, 1, 1]' : 0.129321}
{'[2, 1, 1, 5, 2, 5, 1, 0, 14, 21, 0, 3, 1, 0, 1, 0, 1, 1]' : 0.129434}
{'[2, 1, 1, 5, 2, 5, 1, 0, 14, 21, 0, 3, 1, 0, 1, 0, 1, 1]' : 0.129121}
{'[2, 1, 1, 5, 2, 5, 1, 0, 14, 21, 0, 3, 1, 0, 1, 0, 1, 1]' : 0.124061}
{'[2, 1, 1, 5, 2, 5, 1, 0, 14, 21, 0, 3, 1, 0, 1, 0, 1, 1]' : 0.112638}
{'[2, 1, 1, 5, 2, 5, 1, 0, 14, 21, 0, 3, 1, 0, 1, 0, 1, 1]' : 0.112706}
{'[2, 1, 1, 5, 2, 5, 1, 0, 14, 21, 0, 3, 1, 0, 1, 0, 1, 1]' : 0.112304}
{'[2, 1, 1, 5, 2, 5, 1, 0, 14, 21, 0, 3, 1, 0, 1, 0, 1, 1]' : 0.10978}
{'[2, 1, 1, 5, 2, 5, 1, 0, 14, 21, 0, 3, 1, 0, 1, 0, 1, 1]' : 0.109764}
{'[2, 1, 1, 5, 2, 5, 1, 0, 14, 21, 0, 3, 1, 0, 1, 0, 1, 1]' : 0.112277}
{'[2, 1, 1, 5, 2, 5, 1, 0, 14, 21, 0, 3, 1, 0, 1, 0, 1, 1]' : 0.112771}
{'[2, 1, 1, 5, 2, 5, 1, 0, 14, 21, 0, 3, 1, 0, 1, 0, 1, 1]' : 0.113248}
{'[2, 1, 1, 5, 2, 5, 1, 0, 14, 21, 0, 3, 1, 0, 1, 0, 1, 1]' : 0.113043}
{'[2, 1, 1, 5, 2, 5, 1, 0, 14, 21, 0, 3, 1, 0, 1, 0, 1, 1]' : 0.1133}
{'[2, 1, 1, 5, 2, 5, 1, 0, 14, 21, 0, 3, 1, 0, 1, 0, 1, 1]' : 0.113558}
{'[2, 1, 1, 5, 2, 5, 1, 0, 14, 21, 0, 3, 1, 0, 1, 0, 1, 1]' : 0.112995}
{'[2, 1, 1, 5, 2, 5, 1, 0, 14, 21, 0, 3, 1, 0, 1, 0, 1, 1]' : 0.112286}
{'[2, 1, 1, 5, 2, 5, 1, 0, 14, 21, 0, 3, 1, 0, 1, 0, 1, 1]' : 0.111323}
{'[2, 1, 1, 5, 2, 5, 1, 0, 14, 21, 0, 3, 1, 0, 1, 0, 1, 1]' : 0.113133}
{'[2, 1, 1, 5, 2, 5, 1, 0, 14, 21, 0, 3, 1, 0, 1, 0, 1, 1]' : 0.113128}
{'[2, 1, 1, 5, 2, 5, 1, 0, 14, 21, 0, 3, 1, 0, 1, 0, 1, 1]' : 0.113044}
{'[2, 1, 1, 5, 2, 5, 1, 0, 14, 21, 0, 3, 1, 0, 1, 0, 1, 1]' : 0.11317}
{'[2, 1, 1, 5, 2, 5, 1, 0, 14, 21, 0, 3, 1, 0, 1, 0, 1, 1]' : 0.113073}
{'[2, 1, 1, 5, 2, 5, 1, 0, 14, 21, 0, 3, 1, 0, 1, 0, 1, 1]' : 0.113038}
{'[2, 1, 1, 5, 2, 5, 1, 0, 14, 21, 0, 3, 1, 0, 1, 0, 1, 1]' : 0.112986}
{'[2, 1, 1, 5, 2, 5, 1, 0, 14, 21, 0, 3, 1, 0, 1, 0, 1, 1]' : 0.113107}
{'[2, 1, 1, 5, 2, 5, 1, 0, 14, 21, 0, 3, 1, 0, 1, 0, 1, 1]' : 0.112282}
{'[2, 1, 1, 5, 2, 5, 1, 0, 14, 21, 0, 3, 1, 0, 1, 0, 1, 1]' : 0.111322}
{'[2, 1, 1, 5, 2, 5, 1, 0, 14, 21, 0, 3, 1, 0, 1, 0, 1, 1]' : 0.109878}
{'[2, 1, 1, 5, 2, 5, 1, 0, 14, 21, 0, 3, 1, 0, 1, 0, 1, 1]' : 0.110027}

out:
 ["{'[2, 1, 1, 5, 2, 5, 1, 0, 14, 21, 0, 3, 1, 0, 1, 0, 1, 1]' : 0.129321}", "{'[2, 1, 1, 5, 2, 5, 1, 0, 14, 21, 0, 3, 1, 0, 1, 0, 1, 1]' : 0.129434}", "{'[2, 1, 1, 5, 2, 5, 1, 0, 14, 21, 0, 3, 1, 0, 1, 0, 1, 1]' : 0.129121}", "{'[2, 1, 1, 5, 2, 5, 1, 0, 14, 21, 0, 3, 1, 0, 1, 0, 1, 1]' : 0.124061}", "{'[2, 1, 1, 5, 2, 5, 1, 0, 14, 21, 0, 3, 1, 0, 1, 0, 1, 1]' : 0.112638}", "{'[2, 1, 1, 5, 2, 5, 1, 0, 14, 21, 0, 3, 1, 0, 1, 0, 1, 1]' : 0.112706}", "{'[2, 1, 1, 5, 2, 5, 1, 0, 14, 21, 0, 3, 1, 0, 1, 0, 1, 1]' : 0.112304}", "{'[2, 1, 1, 5, 2, 5, 1, 0, 14, 21, 0, 3, 1, 0, 1, 0, 1, 1]' : 0.10978}", "{'[2, 1, 1, 5, 2, 5, 1, 0, 14, 21, 0, 3, 1, 0, 1, 0, 1, 1]' : 0.109764}", "{'[2, 1, 1, 5, 2, 5, 1, 0, 14, 21, 0, 3, 1, 0, 1, 0, 1, 1]' : 0.112277}", "{'[2, 1, 1, 5, 2, 5, 1, 0, 14, 21, 0, 3, 1, 0, 1, 0, 1, 1]' : 0.112771}", "{'[2, 1, 1, 5, 2, 5, 1, 0, 14, 21, 0, 3, 1, 0, 1, 0, 1, 1]' : 0.113248}", "{'[2, 1, 1, 5, 2, 5, 1, 0, 14, 21, 0, 3, 1, 0, 1, 0, 1, 1]' : 0.113043}", "{'[2, 1, 1, 5, 2, 5, 1, 0, 14, 21, 0, 3, 1, 0, 1, 0, 1, 1]' : 0.1133}", "{'[2, 1, 1, 5, 2, 5, 1, 0, 14, 21, 0, 3, 1, 0, 1, 0, 1, 1]' : 0.113558}", "{'[2, 1, 1, 5, 2, 5, 1, 0, 14, 21, 0, 3, 1, 0, 1, 0, 1, 1]' : 0.112995}", "{'[2, 1, 1, 5, 2, 5, 1, 0, 14, 21, 0, 3, 1, 0, 1, 0, 1, 1]' : 0.112286}", "{'[2, 1, 1, 5, 2, 5, 1, 0, 14, 21, 0, 3, 1, 0, 1, 0, 1, 1]' : 0.111323}", "{'[2, 1, 1, 5, 2, 5, 1, 0, 14, 21, 0, 3, 1, 0, 1, 0, 1, 1]' : 0.113133}", "{'[2, 1, 1, 5, 2, 5, 1, 0, 14, 21, 0, 3, 1, 0, 1, 0, 1, 1]' : 0.113128}", "{'[2, 1, 1, 5, 2, 5, 1, 0, 14, 21, 0, 3, 1, 0, 1, 0, 1, 1]' : 0.113044}", "{'[2, 1, 1, 5, 2, 5, 1, 0, 14, 21, 0, 3, 1, 0, 1, 0, 1, 1]' : 0.11317}", "{'[2, 1, 1, 5, 2, 5, 1, 0, 14, 21, 0, 3, 1, 0, 1, 0, 1, 1]' : 0.113073}", "{'[2, 1, 1, 5, 2, 5, 1, 0, 14, 21, 0, 3, 1, 0, 1, 0, 1, 1]' : 0.113038}", "{'[2, 1, 1, 5, 2, 5, 1, 0, 14, 21, 0, 3, 1, 0, 1, 0, 1, 1]' : 0.112986}", "{'[2, 1, 1, 5, 2, 5, 1, 0, 14, 21, 0, 3, 1, 0, 1, 0, 1, 1]' : 0.113107}", "{'[2, 1, 1, 5, 2, 5, 1, 0, 14, 21, 0, 3, 1, 0, 1, 0, 1, 1]' : 0.112282}", "{'[2, 1, 1, 5, 2, 5, 1, 0, 14, 21, 0, 3, 1, 0, 1, 0, 1, 1]' : 0.111322}", "{'[2, 1, 1, 5, 2, 5, 1, 0, 14, 21, 0, 3, 1, 0, 1, 0, 1, 1]' : 0.109878}", "{'[2, 1, 1, 5, 2, 5, 1, 0, 14, 21, 0, 3, 1, 0, 1, 0, 1, 1]' : 0.110027}"]
returning from 'run': {'[2, 1, 1, 5, 2, 5, 1, 0, 14, 21, 0, 3, 1, 0, 1, 0, 1, 1]': ([0.129321, 0.129434, 0.129121, 0.124061, 0.112638, 0.112706, 0.112304, 0.10978, 0.109764, 0.112277, 0.112771, 0.113248, 0.113043, 0.1133, 0.113558, 0.112995, 0.112286, 0.111323, 0.113133, 0.113128, 0.113044, 0.11317, 0.113073, 0.113038, 0.112986, 0.113107, 0.112282, 0.111322, 0.109878, 0.110027], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 1, 1, 5, 2, 5, 1, 0, 14, 21, 0, 3, 1, 0, 1, 0, 1, 1]': ([0.129321, 0.129434, 0.129121, 0.124061, 0.112638, 0.112706, 0.112304, 0.10978, 0.109764, 0.112277, 0.112771, 0.113248, 0.113043, 0.1133, 0.113558, 0.112995, 0.112286, 0.111323, 0.113133, 0.113128, 0.113044, 0.11317, 0.113073, 0.113038, 0.112986, 0.113107, 0.112282, 0.111322, 0.109878, 0.110027], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	109
        Max loop nest depth: 	6
        Additions: 		8563
        Multiplications: 	3348
        Divisions: 		0
        Logical: 		0
        Reads: 			14679
        Writes: 		2154
        Comparisons:		109
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest9.exe __orio_perftest9.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest9.exe  
Program Test Output: 
{'[2, 5, 0, 5, 6, 6, 1, 0, 1, 29, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.195999}
{'[2, 5, 0, 5, 6, 6, 1, 0, 1, 29, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.19642}
{'[2, 5, 0, 5, 6, 6, 1, 0, 1, 29, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.196027}
{'[2, 5, 0, 5, 6, 6, 1, 0, 1, 29, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.195998}
{'[2, 5, 0, 5, 6, 6, 1, 0, 1, 29, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.195689}
{'[2, 5, 0, 5, 6, 6, 1, 0, 1, 29, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.195785}
{'[2, 5, 0, 5, 6, 6, 1, 0, 1, 29, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.196341}
{'[2, 5, 0, 5, 6, 6, 1, 0, 1, 29, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.196307}
{'[2, 5, 0, 5, 6, 6, 1, 0, 1, 29, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.196259}
{'[2, 5, 0, 5, 6, 6, 1, 0, 1, 29, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.195902}
{'[2, 5, 0, 5, 6, 6, 1, 0, 1, 29, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.196226}
{'[2, 5, 0, 5, 6, 6, 1, 0, 1, 29, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.195784}
{'[2, 5, 0, 5, 6, 6, 1, 0, 1, 29, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.195923}
{'[2, 5, 0, 5, 6, 6, 1, 0, 1, 29, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.196143}
{'[2, 5, 0, 5, 6, 6, 1, 0, 1, 29, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.196484}
{'[2, 5, 0, 5, 6, 6, 1, 0, 1, 29, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.195742}
{'[2, 5, 0, 5, 6, 6, 1, 0, 1, 29, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.195923}
{'[2, 5, 0, 5, 6, 6, 1, 0, 1, 29, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.195773}
{'[2, 5, 0, 5, 6, 6, 1, 0, 1, 29, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.193289}
{'[2, 5, 0, 5, 6, 6, 1, 0, 1, 29, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.195445}
{'[2, 5, 0, 5, 6, 6, 1, 0, 1, 29, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.196089}
{'[2, 5, 0, 5, 6, 6, 1, 0, 1, 29, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.195864}
{'[2, 5, 0, 5, 6, 6, 1, 0, 1, 29, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.196505}
{'[2, 5, 0, 5, 6, 6, 1, 0, 1, 29, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.195949}
{'[2, 5, 0, 5, 6, 6, 1, 0, 1, 29, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.196321}
{'[2, 5, 0, 5, 6, 6, 1, 0, 1, 29, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.19596}
{'[2, 5, 0, 5, 6, 6, 1, 0, 1, 29, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.193028}
{'[2, 5, 0, 5, 6, 6, 1, 0, 1, 29, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.195544}
{'[2, 5, 0, 5, 6, 6, 1, 0, 1, 29, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.195113}
{'[2, 5, 0, 5, 6, 6, 1, 0, 1, 29, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.195546}

out:
 ["{'[2, 5, 0, 5, 6, 6, 1, 0, 1, 29, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.195999}", "{'[2, 5, 0, 5, 6, 6, 1, 0, 1, 29, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.19642}", "{'[2, 5, 0, 5, 6, 6, 1, 0, 1, 29, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.196027}", "{'[2, 5, 0, 5, 6, 6, 1, 0, 1, 29, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.195998}", "{'[2, 5, 0, 5, 6, 6, 1, 0, 1, 29, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.195689}", "{'[2, 5, 0, 5, 6, 6, 1, 0, 1, 29, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.195785}", "{'[2, 5, 0, 5, 6, 6, 1, 0, 1, 29, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.196341}", "{'[2, 5, 0, 5, 6, 6, 1, 0, 1, 29, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.196307}", "{'[2, 5, 0, 5, 6, 6, 1, 0, 1, 29, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.196259}", "{'[2, 5, 0, 5, 6, 6, 1, 0, 1, 29, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.195902}", "{'[2, 5, 0, 5, 6, 6, 1, 0, 1, 29, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.196226}", "{'[2, 5, 0, 5, 6, 6, 1, 0, 1, 29, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.195784}", "{'[2, 5, 0, 5, 6, 6, 1, 0, 1, 29, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.195923}", "{'[2, 5, 0, 5, 6, 6, 1, 0, 1, 29, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.196143}", "{'[2, 5, 0, 5, 6, 6, 1, 0, 1, 29, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.196484}", "{'[2, 5, 0, 5, 6, 6, 1, 0, 1, 29, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.195742}", "{'[2, 5, 0, 5, 6, 6, 1, 0, 1, 29, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.195923}", "{'[2, 5, 0, 5, 6, 6, 1, 0, 1, 29, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.195773}", "{'[2, 5, 0, 5, 6, 6, 1, 0, 1, 29, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.193289}", "{'[2, 5, 0, 5, 6, 6, 1, 0, 1, 29, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.195445}", "{'[2, 5, 0, 5, 6, 6, 1, 0, 1, 29, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.196089}", "{'[2, 5, 0, 5, 6, 6, 1, 0, 1, 29, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.195864}", "{'[2, 5, 0, 5, 6, 6, 1, 0, 1, 29, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.196505}", "{'[2, 5, 0, 5, 6, 6, 1, 0, 1, 29, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.195949}", "{'[2, 5, 0, 5, 6, 6, 1, 0, 1, 29, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.196321}", "{'[2, 5, 0, 5, 6, 6, 1, 0, 1, 29, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.19596}", "{'[2, 5, 0, 5, 6, 6, 1, 0, 1, 29, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.193028}", "{'[2, 5, 0, 5, 6, 6, 1, 0, 1, 29, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.195544}", "{'[2, 5, 0, 5, 6, 6, 1, 0, 1, 29, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.195113}", "{'[2, 5, 0, 5, 6, 6, 1, 0, 1, 29, 19, 0, 0, 0, 2, 1, 1, 0]' : 0.195546}"]
returning from 'run': {'[2, 5, 0, 5, 6, 6, 1, 0, 1, 29, 19, 0, 0, 0, 2, 1, 1, 0]': ([0.195999, 0.19642, 0.196027, 0.195998, 0.195689, 0.195785, 0.196341, 0.196307, 0.196259, 0.195902, 0.196226, 0.195784, 0.195923, 0.196143, 0.196484, 0.195742, 0.195923, 0.195773, 0.193289, 0.195445, 0.196089, 0.195864, 0.196505, 0.195949, 0.196321, 0.19596, 0.193028, 0.195544, 0.195113, 0.195546], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 5, 0, 5, 6, 6, 1, 0, 1, 29, 19, 0, 0, 0, 2, 1, 1, 0]': ([0.195999, 0.19642, 0.196027, 0.195998, 0.195689, 0.195785, 0.196341, 0.196307, 0.196259, 0.195902, 0.196226, 0.195784, 0.195923, 0.196143, 0.196484, 0.195742, 0.195923, 0.195773, 0.193289, 0.195445, 0.196089, 0.195864, 0.196505, 0.195949, 0.196321, 0.19596, 0.193028, 0.195544, 0.195113, 0.195546], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		381
        Multiplications: 	116
        Divisions: 		0
        Logical: 		0
        Reads: 			782
        Writes: 		105
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest10.exe __orio_perftest10.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest10.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest10.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest10.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest10.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	181
        Max loop nest depth: 	5
        Additions: 		12734
        Multiplications: 	4032
        Divisions: 		0
        Logical: 		0
        Reads: 			24391
        Writes: 		4648
        Comparisons:		181
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest11.exe __orio_perftest11.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest11.exe  
Program Test Output: 
{'[0, 1, 4, 1, 4, 4, 1, 1, 28, 29, 0, 29, 2, 0, 0, 1, 0, 0]' : 0.176371}
{'[0, 1, 4, 1, 4, 4, 1, 1, 28, 29, 0, 29, 2, 0, 0, 1, 0, 0]' : 0.174356}
{'[0, 1, 4, 1, 4, 4, 1, 1, 28, 29, 0, 29, 2, 0, 0, 1, 0, 0]' : 0.174062}
{'[0, 1, 4, 1, 4, 4, 1, 1, 28, 29, 0, 29, 2, 0, 0, 1, 0, 0]' : 0.176338}
{'[0, 1, 4, 1, 4, 4, 1, 1, 28, 29, 0, 29, 2, 0, 0, 1, 0, 0]' : 0.172653}
{'[0, 1, 4, 1, 4, 4, 1, 1, 28, 29, 0, 29, 2, 0, 0, 1, 0, 0]' : 0.175174}
{'[0, 1, 4, 1, 4, 4, 1, 1, 28, 29, 0, 29, 2, 0, 0, 1, 0, 0]' : 0.176204}
{'[0, 1, 4, 1, 4, 4, 1, 1, 28, 29, 0, 29, 2, 0, 0, 1, 0, 0]' : 0.173556}
{'[0, 1, 4, 1, 4, 4, 1, 1, 28, 29, 0, 29, 2, 0, 0, 1, 0, 0]' : 0.175946}
{'[0, 1, 4, 1, 4, 4, 1, 1, 28, 29, 0, 29, 2, 0, 0, 1, 0, 0]' : 0.175509}
{'[0, 1, 4, 1, 4, 4, 1, 1, 28, 29, 0, 29, 2, 0, 0, 1, 0, 0]' : 0.172784}
{'[0, 1, 4, 1, 4, 4, 1, 1, 28, 29, 0, 29, 2, 0, 0, 1, 0, 0]' : 0.175109}
{'[0, 1, 4, 1, 4, 4, 1, 1, 28, 29, 0, 29, 2, 0, 0, 1, 0, 0]' : 0.175256}
{'[0, 1, 4, 1, 4, 4, 1, 1, 28, 29, 0, 29, 2, 0, 0, 1, 0, 0]' : 0.172406}
{'[0, 1, 4, 1, 4, 4, 1, 1, 28, 29, 0, 29, 2, 0, 0, 1, 0, 0]' : 0.176843}
{'[0, 1, 4, 1, 4, 4, 1, 1, 28, 29, 0, 29, 2, 0, 0, 1, 0, 0]' : 0.172437}
{'[0, 1, 4, 1, 4, 4, 1, 1, 28, 29, 0, 29, 2, 0, 0, 1, 0, 0]' : 0.174442}
{'[0, 1, 4, 1, 4, 4, 1, 1, 28, 29, 0, 29, 2, 0, 0, 1, 0, 0]' : 0.176017}
{'[0, 1, 4, 1, 4, 4, 1, 1, 28, 29, 0, 29, 2, 0, 0, 1, 0, 0]' : 0.174656}
{'[0, 1, 4, 1, 4, 4, 1, 1, 28, 29, 0, 29, 2, 0, 0, 1, 0, 0]' : 0.173222}
{'[0, 1, 4, 1, 4, 4, 1, 1, 28, 29, 0, 29, 2, 0, 0, 1, 0, 0]' : 0.177236}
{'[0, 1, 4, 1, 4, 4, 1, 1, 28, 29, 0, 29, 2, 0, 0, 1, 0, 0]' : 0.17386}
{'[0, 1, 4, 1, 4, 4, 1, 1, 28, 29, 0, 29, 2, 0, 0, 1, 0, 0]' : 0.174041}
{'[0, 1, 4, 1, 4, 4, 1, 1, 28, 29, 0, 29, 2, 0, 0, 1, 0, 0]' : 0.175782}
{'[0, 1, 4, 1, 4, 4, 1, 1, 28, 29, 0, 29, 2, 0, 0, 1, 0, 0]' : 0.173472}
{'[0, 1, 4, 1, 4, 4, 1, 1, 28, 29, 0, 29, 2, 0, 0, 1, 0, 0]' : 0.177713}
{'[0, 1, 4, 1, 4, 4, 1, 1, 28, 29, 0, 29, 2, 0, 0, 1, 0, 0]' : 0.179908}
{'[0, 1, 4, 1, 4, 4, 1, 1, 28, 29, 0, 29, 2, 0, 0, 1, 0, 0]' : 0.176278}
{'[0, 1, 4, 1, 4, 4, 1, 1, 28, 29, 0, 29, 2, 0, 0, 1, 0, 0]' : 0.178795}
{'[0, 1, 4, 1, 4, 4, 1, 1, 28, 29, 0, 29, 2, 0, 0, 1, 0, 0]' : 0.178336}

out:
 ["{'[0, 1, 4, 1, 4, 4, 1, 1, 28, 29, 0, 29, 2, 0, 0, 1, 0, 0]' : 0.176371}", "{'[0, 1, 4, 1, 4, 4, 1, 1, 28, 29, 0, 29, 2, 0, 0, 1, 0, 0]' : 0.174356}", "{'[0, 1, 4, 1, 4, 4, 1, 1, 28, 29, 0, 29, 2, 0, 0, 1, 0, 0]' : 0.174062}", "{'[0, 1, 4, 1, 4, 4, 1, 1, 28, 29, 0, 29, 2, 0, 0, 1, 0, 0]' : 0.176338}", "{'[0, 1, 4, 1, 4, 4, 1, 1, 28, 29, 0, 29, 2, 0, 0, 1, 0, 0]' : 0.172653}", "{'[0, 1, 4, 1, 4, 4, 1, 1, 28, 29, 0, 29, 2, 0, 0, 1, 0, 0]' : 0.175174}", "{'[0, 1, 4, 1, 4, 4, 1, 1, 28, 29, 0, 29, 2, 0, 0, 1, 0, 0]' : 0.176204}", "{'[0, 1, 4, 1, 4, 4, 1, 1, 28, 29, 0, 29, 2, 0, 0, 1, 0, 0]' : 0.173556}", "{'[0, 1, 4, 1, 4, 4, 1, 1, 28, 29, 0, 29, 2, 0, 0, 1, 0, 0]' : 0.175946}", "{'[0, 1, 4, 1, 4, 4, 1, 1, 28, 29, 0, 29, 2, 0, 0, 1, 0, 0]' : 0.175509}", "{'[0, 1, 4, 1, 4, 4, 1, 1, 28, 29, 0, 29, 2, 0, 0, 1, 0, 0]' : 0.172784}", "{'[0, 1, 4, 1, 4, 4, 1, 1, 28, 29, 0, 29, 2, 0, 0, 1, 0, 0]' : 0.175109}", "{'[0, 1, 4, 1, 4, 4, 1, 1, 28, 29, 0, 29, 2, 0, 0, 1, 0, 0]' : 0.175256}", "{'[0, 1, 4, 1, 4, 4, 1, 1, 28, 29, 0, 29, 2, 0, 0, 1, 0, 0]' : 0.172406}", "{'[0, 1, 4, 1, 4, 4, 1, 1, 28, 29, 0, 29, 2, 0, 0, 1, 0, 0]' : 0.176843}", "{'[0, 1, 4, 1, 4, 4, 1, 1, 28, 29, 0, 29, 2, 0, 0, 1, 0, 0]' : 0.172437}", "{'[0, 1, 4, 1, 4, 4, 1, 1, 28, 29, 0, 29, 2, 0, 0, 1, 0, 0]' : 0.174442}", "{'[0, 1, 4, 1, 4, 4, 1, 1, 28, 29, 0, 29, 2, 0, 0, 1, 0, 0]' : 0.176017}", "{'[0, 1, 4, 1, 4, 4, 1, 1, 28, 29, 0, 29, 2, 0, 0, 1, 0, 0]' : 0.174656}", "{'[0, 1, 4, 1, 4, 4, 1, 1, 28, 29, 0, 29, 2, 0, 0, 1, 0, 0]' : 0.173222}", "{'[0, 1, 4, 1, 4, 4, 1, 1, 28, 29, 0, 29, 2, 0, 0, 1, 0, 0]' : 0.177236}", "{'[0, 1, 4, 1, 4, 4, 1, 1, 28, 29, 0, 29, 2, 0, 0, 1, 0, 0]' : 0.17386}", "{'[0, 1, 4, 1, 4, 4, 1, 1, 28, 29, 0, 29, 2, 0, 0, 1, 0, 0]' : 0.174041}", "{'[0, 1, 4, 1, 4, 4, 1, 1, 28, 29, 0, 29, 2, 0, 0, 1, 0, 0]' : 0.175782}", "{'[0, 1, 4, 1, 4, 4, 1, 1, 28, 29, 0, 29, 2, 0, 0, 1, 0, 0]' : 0.173472}", "{'[0, 1, 4, 1, 4, 4, 1, 1, 28, 29, 0, 29, 2, 0, 0, 1, 0, 0]' : 0.177713}", "{'[0, 1, 4, 1, 4, 4, 1, 1, 28, 29, 0, 29, 2, 0, 0, 1, 0, 0]' : 0.179908}", "{'[0, 1, 4, 1, 4, 4, 1, 1, 28, 29, 0, 29, 2, 0, 0, 1, 0, 0]' : 0.176278}", "{'[0, 1, 4, 1, 4, 4, 1, 1, 28, 29, 0, 29, 2, 0, 0, 1, 0, 0]' : 0.178795}", "{'[0, 1, 4, 1, 4, 4, 1, 1, 28, 29, 0, 29, 2, 0, 0, 1, 0, 0]' : 0.178336}"]
returning from 'run': {'[0, 1, 4, 1, 4, 4, 1, 1, 28, 29, 0, 29, 2, 0, 0, 1, 0, 0]': ([0.176371, 0.174356, 0.174062, 0.176338, 0.172653, 0.175174, 0.176204, 0.173556, 0.175946, 0.175509, 0.172784, 0.175109, 0.175256, 0.172406, 0.176843, 0.172437, 0.174442, 0.176017, 0.174656, 0.173222, 0.177236, 0.17386, 0.174041, 0.175782, 0.173472, 0.177713, 0.179908, 0.176278, 0.178795, 0.178336], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 1, 4, 1, 4, 4, 1, 1, 28, 29, 0, 29, 2, 0, 0, 1, 0, 0]': ([0.176371, 0.174356, 0.174062, 0.176338, 0.172653, 0.175174, 0.176204, 0.173556, 0.175946, 0.175509, 0.172784, 0.175109, 0.175256, 0.172406, 0.176843, 0.172437, 0.174442, 0.176017, 0.174656, 0.173222, 0.177236, 0.17386, 0.174041, 0.175782, 0.173472, 0.177713, 0.179908, 0.176278, 0.178795, 0.178336], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	36
        Max loop nest depth: 	5
        Additions: 		650
        Multiplications: 	224
        Divisions: 		0
        Logical: 		0
        Reads: 			1386
        Writes: 		280
        Comparisons:		36
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest12.exe __orio_perftest12.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest12.exe  
Program Test Output: 
{'[6, 6, 4, 0, 4, 5, 1, 1, 9, 5, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.159348}
{'[6, 6, 4, 0, 4, 5, 1, 1, 9, 5, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.157179}
{'[6, 6, 4, 0, 4, 5, 1, 1, 9, 5, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.155204}
{'[6, 6, 4, 0, 4, 5, 1, 1, 9, 5, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.164493}
{'[6, 6, 4, 0, 4, 5, 1, 1, 9, 5, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.163291}
{'[6, 6, 4, 0, 4, 5, 1, 1, 9, 5, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.160254}
{'[6, 6, 4, 0, 4, 5, 1, 1, 9, 5, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.160036}
{'[6, 6, 4, 0, 4, 5, 1, 1, 9, 5, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.158257}
{'[6, 6, 4, 0, 4, 5, 1, 1, 9, 5, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.154769}
{'[6, 6, 4, 0, 4, 5, 1, 1, 9, 5, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.159023}
{'[6, 6, 4, 0, 4, 5, 1, 1, 9, 5, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.15712}
{'[6, 6, 4, 0, 4, 5, 1, 1, 9, 5, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.155266}
{'[6, 6, 4, 0, 4, 5, 1, 1, 9, 5, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.15645}
{'[6, 6, 4, 0, 4, 5, 1, 1, 9, 5, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.155288}
{'[6, 6, 4, 0, 4, 5, 1, 1, 9, 5, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.154776}
{'[6, 6, 4, 0, 4, 5, 1, 1, 9, 5, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.155311}
{'[6, 6, 4, 0, 4, 5, 1, 1, 9, 5, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.155308}
{'[6, 6, 4, 0, 4, 5, 1, 1, 9, 5, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.155333}
{'[6, 6, 4, 0, 4, 5, 1, 1, 9, 5, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.155869}
{'[6, 6, 4, 0, 4, 5, 1, 1, 9, 5, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.160113}
{'[6, 6, 4, 0, 4, 5, 1, 1, 9, 5, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.159923}
{'[6, 6, 4, 0, 4, 5, 1, 1, 9, 5, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.159841}
{'[6, 6, 4, 0, 4, 5, 1, 1, 9, 5, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.160856}
{'[6, 6, 4, 0, 4, 5, 1, 1, 9, 5, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.158373}
{'[6, 6, 4, 0, 4, 5, 1, 1, 9, 5, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.155226}
{'[6, 6, 4, 0, 4, 5, 1, 1, 9, 5, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.159417}
{'[6, 6, 4, 0, 4, 5, 1, 1, 9, 5, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.16022}
{'[6, 6, 4, 0, 4, 5, 1, 1, 9, 5, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.160179}
{'[6, 6, 4, 0, 4, 5, 1, 1, 9, 5, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.15685}
{'[6, 6, 4, 0, 4, 5, 1, 1, 9, 5, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.155101}

out:
 ["{'[6, 6, 4, 0, 4, 5, 1, 1, 9, 5, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.159348}", "{'[6, 6, 4, 0, 4, 5, 1, 1, 9, 5, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.157179}", "{'[6, 6, 4, 0, 4, 5, 1, 1, 9, 5, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.155204}", "{'[6, 6, 4, 0, 4, 5, 1, 1, 9, 5, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.164493}", "{'[6, 6, 4, 0, 4, 5, 1, 1, 9, 5, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.163291}", "{'[6, 6, 4, 0, 4, 5, 1, 1, 9, 5, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.160254}", "{'[6, 6, 4, 0, 4, 5, 1, 1, 9, 5, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.160036}", "{'[6, 6, 4, 0, 4, 5, 1, 1, 9, 5, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.158257}", "{'[6, 6, 4, 0, 4, 5, 1, 1, 9, 5, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.154769}", "{'[6, 6, 4, 0, 4, 5, 1, 1, 9, 5, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.159023}", "{'[6, 6, 4, 0, 4, 5, 1, 1, 9, 5, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.15712}", "{'[6, 6, 4, 0, 4, 5, 1, 1, 9, 5, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.155266}", "{'[6, 6, 4, 0, 4, 5, 1, 1, 9, 5, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.15645}", "{'[6, 6, 4, 0, 4, 5, 1, 1, 9, 5, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.155288}", "{'[6, 6, 4, 0, 4, 5, 1, 1, 9, 5, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.154776}", "{'[6, 6, 4, 0, 4, 5, 1, 1, 9, 5, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.155311}", "{'[6, 6, 4, 0, 4, 5, 1, 1, 9, 5, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.155308}", "{'[6, 6, 4, 0, 4, 5, 1, 1, 9, 5, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.155333}", "{'[6, 6, 4, 0, 4, 5, 1, 1, 9, 5, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.155869}", "{'[6, 6, 4, 0, 4, 5, 1, 1, 9, 5, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.160113}", "{'[6, 6, 4, 0, 4, 5, 1, 1, 9, 5, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.159923}", "{'[6, 6, 4, 0, 4, 5, 1, 1, 9, 5, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.159841}", "{'[6, 6, 4, 0, 4, 5, 1, 1, 9, 5, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.160856}", "{'[6, 6, 4, 0, 4, 5, 1, 1, 9, 5, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.158373}", "{'[6, 6, 4, 0, 4, 5, 1, 1, 9, 5, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.155226}", "{'[6, 6, 4, 0, 4, 5, 1, 1, 9, 5, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.159417}", "{'[6, 6, 4, 0, 4, 5, 1, 1, 9, 5, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.16022}", "{'[6, 6, 4, 0, 4, 5, 1, 1, 9, 5, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.160179}", "{'[6, 6, 4, 0, 4, 5, 1, 1, 9, 5, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.15685}", "{'[6, 6, 4, 0, 4, 5, 1, 1, 9, 5, 26, 0, 0, 1, 1, 1, 1, 0]' : 0.155101}"]
returning from 'run': {'[6, 6, 4, 0, 4, 5, 1, 1, 9, 5, 26, 0, 0, 1, 1, 1, 1, 0]': ([0.159348, 0.157179, 0.155204, 0.164493, 0.163291, 0.160254, 0.160036, 0.158257, 0.154769, 0.159023, 0.15712, 0.155266, 0.15645, 0.155288, 0.154776, 0.155311, 0.155308, 0.155333, 0.155869, 0.160113, 0.159923, 0.159841, 0.160856, 0.158373, 0.155226, 0.159417, 0.16022, 0.160179, 0.15685, 0.155101], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 4, 0, 4, 5, 1, 1, 9, 5, 26, 0, 0, 1, 1, 1, 1, 0]': ([0.159348, 0.157179, 0.155204, 0.164493, 0.163291, 0.160254, 0.160036, 0.158257, 0.154769, 0.159023, 0.15712, 0.155266, 0.15645, 0.155288, 0.154776, 0.155311, 0.155308, 0.155333, 0.155869, 0.160113, 0.159923, 0.159841, 0.160856, 0.158373, 0.155226, 0.159417, 0.16022, 0.160179, 0.15685, 0.155101], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	77
        Max loop nest depth: 	5
        Additions: 		6839
        Multiplications: 	1922
        Divisions: 		0
        Logical: 		0
        Reads: 			10533
        Writes: 		1249
        Comparisons:		77
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest13.exe __orio_perftest13.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest13.exe  
Program Test Output: 
{'[6, 4, 6, 0, 0, 6, 0, 0, 1, 29, 0, 20, 0, 0, 1, 0, 1, 1]' : 0.172633}
{'[6, 4, 6, 0, 0, 6, 0, 0, 1, 29, 0, 20, 0, 0, 1, 0, 1, 1]' : 0.172716}
{'[6, 4, 6, 0, 0, 6, 0, 0, 1, 29, 0, 20, 0, 0, 1, 0, 1, 1]' : 0.162145}
{'[6, 4, 6, 0, 0, 6, 0, 0, 1, 29, 0, 20, 0, 0, 1, 0, 1, 1]' : 0.150476}
{'[6, 4, 6, 0, 0, 6, 0, 0, 1, 29, 0, 20, 0, 0, 1, 0, 1, 1]' : 0.150408}
{'[6, 4, 6, 0, 0, 6, 0, 0, 1, 29, 0, 20, 0, 0, 1, 0, 1, 1]' : 0.150411}
{'[6, 4, 6, 0, 0, 6, 0, 0, 1, 29, 0, 20, 0, 0, 1, 0, 1, 1]' : 0.150329}
{'[6, 4, 6, 0, 0, 6, 0, 0, 1, 29, 0, 20, 0, 0, 1, 0, 1, 1]' : 0.15029}
{'[6, 4, 6, 0, 0, 6, 0, 0, 1, 29, 0, 20, 0, 0, 1, 0, 1, 1]' : 0.15049}
{'[6, 4, 6, 0, 0, 6, 0, 0, 1, 29, 0, 20, 0, 0, 1, 0, 1, 1]' : 0.15039}
{'[6, 4, 6, 0, 0, 6, 0, 0, 1, 29, 0, 20, 0, 0, 1, 0, 1, 1]' : 0.150657}
{'[6, 4, 6, 0, 0, 6, 0, 0, 1, 29, 0, 20, 0, 0, 1, 0, 1, 1]' : 0.150431}
{'[6, 4, 6, 0, 0, 6, 0, 0, 1, 29, 0, 20, 0, 0, 1, 0, 1, 1]' : 0.150428}
{'[6, 4, 6, 0, 0, 6, 0, 0, 1, 29, 0, 20, 0, 0, 1, 0, 1, 1]' : 0.150758}
{'[6, 4, 6, 0, 0, 6, 0, 0, 1, 29, 0, 20, 0, 0, 1, 0, 1, 1]' : 0.150375}
{'[6, 4, 6, 0, 0, 6, 0, 0, 1, 29, 0, 20, 0, 0, 1, 0, 1, 1]' : 0.150269}
{'[6, 4, 6, 0, 0, 6, 0, 0, 1, 29, 0, 20, 0, 0, 1, 0, 1, 1]' : 0.150354}
{'[6, 4, 6, 0, 0, 6, 0, 0, 1, 29, 0, 20, 0, 0, 1, 0, 1, 1]' : 0.150318}
{'[6, 4, 6, 0, 0, 6, 0, 0, 1, 29, 0, 20, 0, 0, 1, 0, 1, 1]' : 0.150463}
{'[6, 4, 6, 0, 0, 6, 0, 0, 1, 29, 0, 20, 0, 0, 1, 0, 1, 1]' : 0.150345}
{'[6, 4, 6, 0, 0, 6, 0, 0, 1, 29, 0, 20, 0, 0, 1, 0, 1, 1]' : 0.150392}
{'[6, 4, 6, 0, 0, 6, 0, 0, 1, 29, 0, 20, 0, 0, 1, 0, 1, 1]' : 0.150355}
{'[6, 4, 6, 0, 0, 6, 0, 0, 1, 29, 0, 20, 0, 0, 1, 0, 1, 1]' : 0.150324}
{'[6, 4, 6, 0, 0, 6, 0, 0, 1, 29, 0, 20, 0, 0, 1, 0, 1, 1]' : 0.150454}
{'[6, 4, 6, 0, 0, 6, 0, 0, 1, 29, 0, 20, 0, 0, 1, 0, 1, 1]' : 0.150392}
{'[6, 4, 6, 0, 0, 6, 0, 0, 1, 29, 0, 20, 0, 0, 1, 0, 1, 1]' : 0.150367}
{'[6, 4, 6, 0, 0, 6, 0, 0, 1, 29, 0, 20, 0, 0, 1, 0, 1, 1]' : 0.150902}
{'[6, 4, 6, 0, 0, 6, 0, 0, 1, 29, 0, 20, 0, 0, 1, 0, 1, 1]' : 0.150465}
{'[6, 4, 6, 0, 0, 6, 0, 0, 1, 29, 0, 20, 0, 0, 1, 0, 1, 1]' : 0.150432}
{'[6, 4, 6, 0, 0, 6, 0, 0, 1, 29, 0, 20, 0, 0, 1, 0, 1, 1]' : 0.150419}

out:
 ["{'[6, 4, 6, 0, 0, 6, 0, 0, 1, 29, 0, 20, 0, 0, 1, 0, 1, 1]' : 0.172633}", "{'[6, 4, 6, 0, 0, 6, 0, 0, 1, 29, 0, 20, 0, 0, 1, 0, 1, 1]' : 0.172716}", "{'[6, 4, 6, 0, 0, 6, 0, 0, 1, 29, 0, 20, 0, 0, 1, 0, 1, 1]' : 0.162145}", "{'[6, 4, 6, 0, 0, 6, 0, 0, 1, 29, 0, 20, 0, 0, 1, 0, 1, 1]' : 0.150476}", "{'[6, 4, 6, 0, 0, 6, 0, 0, 1, 29, 0, 20, 0, 0, 1, 0, 1, 1]' : 0.150408}", "{'[6, 4, 6, 0, 0, 6, 0, 0, 1, 29, 0, 20, 0, 0, 1, 0, 1, 1]' : 0.150411}", "{'[6, 4, 6, 0, 0, 6, 0, 0, 1, 29, 0, 20, 0, 0, 1, 0, 1, 1]' : 0.150329}", "{'[6, 4, 6, 0, 0, 6, 0, 0, 1, 29, 0, 20, 0, 0, 1, 0, 1, 1]' : 0.15029}", "{'[6, 4, 6, 0, 0, 6, 0, 0, 1, 29, 0, 20, 0, 0, 1, 0, 1, 1]' : 0.15049}", "{'[6, 4, 6, 0, 0, 6, 0, 0, 1, 29, 0, 20, 0, 0, 1, 0, 1, 1]' : 0.15039}", "{'[6, 4, 6, 0, 0, 6, 0, 0, 1, 29, 0, 20, 0, 0, 1, 0, 1, 1]' : 0.150657}", "{'[6, 4, 6, 0, 0, 6, 0, 0, 1, 29, 0, 20, 0, 0, 1, 0, 1, 1]' : 0.150431}", "{'[6, 4, 6, 0, 0, 6, 0, 0, 1, 29, 0, 20, 0, 0, 1, 0, 1, 1]' : 0.150428}", "{'[6, 4, 6, 0, 0, 6, 0, 0, 1, 29, 0, 20, 0, 0, 1, 0, 1, 1]' : 0.150758}", "{'[6, 4, 6, 0, 0, 6, 0, 0, 1, 29, 0, 20, 0, 0, 1, 0, 1, 1]' : 0.150375}", "{'[6, 4, 6, 0, 0, 6, 0, 0, 1, 29, 0, 20, 0, 0, 1, 0, 1, 1]' : 0.150269}", "{'[6, 4, 6, 0, 0, 6, 0, 0, 1, 29, 0, 20, 0, 0, 1, 0, 1, 1]' : 0.150354}", "{'[6, 4, 6, 0, 0, 6, 0, 0, 1, 29, 0, 20, 0, 0, 1, 0, 1, 1]' : 0.150318}", "{'[6, 4, 6, 0, 0, 6, 0, 0, 1, 29, 0, 20, 0, 0, 1, 0, 1, 1]' : 0.150463}", "{'[6, 4, 6, 0, 0, 6, 0, 0, 1, 29, 0, 20, 0, 0, 1, 0, 1, 1]' : 0.150345}", "{'[6, 4, 6, 0, 0, 6, 0, 0, 1, 29, 0, 20, 0, 0, 1, 0, 1, 1]' : 0.150392}", "{'[6, 4, 6, 0, 0, 6, 0, 0, 1, 29, 0, 20, 0, 0, 1, 0, 1, 1]' : 0.150355}", "{'[6, 4, 6, 0, 0, 6, 0, 0, 1, 29, 0, 20, 0, 0, 1, 0, 1, 1]' : 0.150324}", "{'[6, 4, 6, 0, 0, 6, 0, 0, 1, 29, 0, 20, 0, 0, 1, 0, 1, 1]' : 0.150454}", "{'[6, 4, 6, 0, 0, 6, 0, 0, 1, 29, 0, 20, 0, 0, 1, 0, 1, 1]' : 0.150392}", "{'[6, 4, 6, 0, 0, 6, 0, 0, 1, 29, 0, 20, 0, 0, 1, 0, 1, 1]' : 0.150367}", "{'[6, 4, 6, 0, 0, 6, 0, 0, 1, 29, 0, 20, 0, 0, 1, 0, 1, 1]' : 0.150902}", "{'[6, 4, 6, 0, 0, 6, 0, 0, 1, 29, 0, 20, 0, 0, 1, 0, 1, 1]' : 0.150465}", "{'[6, 4, 6, 0, 0, 6, 0, 0, 1, 29, 0, 20, 0, 0, 1, 0, 1, 1]' : 0.150432}", "{'[6, 4, 6, 0, 0, 6, 0, 0, 1, 29, 0, 20, 0, 0, 1, 0, 1, 1]' : 0.150419}"]
returning from 'run': {'[6, 4, 6, 0, 0, 6, 0, 0, 1, 29, 0, 20, 0, 0, 1, 0, 1, 1]': ([0.172633, 0.172716, 0.162145, 0.150476, 0.150408, 0.150411, 0.150329, 0.15029, 0.15049, 0.15039, 0.150657, 0.150431, 0.150428, 0.150758, 0.150375, 0.150269, 0.150354, 0.150318, 0.150463, 0.150345, 0.150392, 0.150355, 0.150324, 0.150454, 0.150392, 0.150367, 0.150902, 0.150465, 0.150432, 0.150419], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 4, 6, 0, 0, 6, 0, 0, 1, 29, 0, 20, 0, 0, 1, 0, 1, 1]': ([0.172633, 0.172716, 0.162145, 0.150476, 0.150408, 0.150411, 0.150329, 0.15029, 0.15049, 0.15039, 0.150657, 0.150431, 0.150428, 0.150758, 0.150375, 0.150269, 0.150354, 0.150318, 0.150463, 0.150345, 0.150392, 0.150355, 0.150324, 0.150454, 0.150392, 0.150367, 0.150902, 0.150465, 0.150432, 0.150419], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	6
        Additions: 		287
        Multiplications: 	72
        Divisions: 		0
        Logical: 		0
        Reads: 			585
        Writes: 		125
        Comparisons:		15
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest14.exe __orio_perftest14.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest14.exe  
Program Test Output: 
{'[6, 0, 4, 6, 1, 3, 1, 1, 23, 0, 20, 12, 0, 0, 0, 1, 0, 0]' : 0.27872}
{'[6, 0, 4, 6, 1, 3, 1, 1, 23, 0, 20, 12, 0, 0, 0, 1, 0, 0]' : 0.234778}
{'[6, 0, 4, 6, 1, 3, 1, 1, 23, 0, 20, 12, 0, 0, 0, 1, 0, 0]' : 0.231892}
{'[6, 0, 4, 6, 1, 3, 1, 1, 23, 0, 20, 12, 0, 0, 0, 1, 0, 0]' : 0.231956}
{'[6, 0, 4, 6, 1, 3, 1, 1, 23, 0, 20, 12, 0, 0, 0, 1, 0, 0]' : 0.231924}
{'[6, 0, 4, 6, 1, 3, 1, 1, 23, 0, 20, 12, 0, 0, 0, 1, 0, 0]' : 0.231926}
{'[6, 0, 4, 6, 1, 3, 1, 1, 23, 0, 20, 12, 0, 0, 0, 1, 0, 0]' : 0.231912}
{'[6, 0, 4, 6, 1, 3, 1, 1, 23, 0, 20, 12, 0, 0, 0, 1, 0, 0]' : 0.231957}
{'[6, 0, 4, 6, 1, 3, 1, 1, 23, 0, 20, 12, 0, 0, 0, 1, 0, 0]' : 0.231967}
{'[6, 0, 4, 6, 1, 3, 1, 1, 23, 0, 20, 12, 0, 0, 0, 1, 0, 0]' : 0.232218}
{'[6, 0, 4, 6, 1, 3, 1, 1, 23, 0, 20, 12, 0, 0, 0, 1, 0, 0]' : 0.231893}
{'[6, 0, 4, 6, 1, 3, 1, 1, 23, 0, 20, 12, 0, 0, 0, 1, 0, 0]' : 0.231925}
{'[6, 0, 4, 6, 1, 3, 1, 1, 23, 0, 20, 12, 0, 0, 0, 1, 0, 0]' : 0.23196}
{'[6, 0, 4, 6, 1, 3, 1, 1, 23, 0, 20, 12, 0, 0, 0, 1, 0, 0]' : 0.231887}
{'[6, 0, 4, 6, 1, 3, 1, 1, 23, 0, 20, 12, 0, 0, 0, 1, 0, 0]' : 0.231925}
{'[6, 0, 4, 6, 1, 3, 1, 1, 23, 0, 20, 12, 0, 0, 0, 1, 0, 0]' : 0.232248}
{'[6, 0, 4, 6, 1, 3, 1, 1, 23, 0, 20, 12, 0, 0, 0, 1, 0, 0]' : 0.231913}
{'[6, 0, 4, 6, 1, 3, 1, 1, 23, 0, 20, 12, 0, 0, 0, 1, 0, 0]' : 0.23217}
{'[6, 0, 4, 6, 1, 3, 1, 1, 23, 0, 20, 12, 0, 0, 0, 1, 0, 0]' : 0.231973}
{'[6, 0, 4, 6, 1, 3, 1, 1, 23, 0, 20, 12, 0, 0, 0, 1, 0, 0]' : 0.231917}
{'[6, 0, 4, 6, 1, 3, 1, 1, 23, 0, 20, 12, 0, 0, 0, 1, 0, 0]' : 0.23196}
{'[6, 0, 4, 6, 1, 3, 1, 1, 23, 0, 20, 12, 0, 0, 0, 1, 0, 0]' : 0.23194}
{'[6, 0, 4, 6, 1, 3, 1, 1, 23, 0, 20, 12, 0, 0, 0, 1, 0, 0]' : 0.23196}
{'[6, 0, 4, 6, 1, 3, 1, 1, 23, 0, 20, 12, 0, 0, 0, 1, 0, 0]' : 0.231948}
{'[6, 0, 4, 6, 1, 3, 1, 1, 23, 0, 20, 12, 0, 0, 0, 1, 0, 0]' : 0.231966}
{'[6, 0, 4, 6, 1, 3, 1, 1, 23, 0, 20, 12, 0, 0, 0, 1, 0, 0]' : 0.232014}
{'[6, 0, 4, 6, 1, 3, 1, 1, 23, 0, 20, 12, 0, 0, 0, 1, 0, 0]' : 0.232175}
{'[6, 0, 4, 6, 1, 3, 1, 1, 23, 0, 20, 12, 0, 0, 0, 1, 0, 0]' : 0.231951}
{'[6, 0, 4, 6, 1, 3, 1, 1, 23, 0, 20, 12, 0, 0, 0, 1, 0, 0]' : 0.231948}
{'[6, 0, 4, 6, 1, 3, 1, 1, 23, 0, 20, 12, 0, 0, 0, 1, 0, 0]' : 0.232006}

out:
 ["{'[6, 0, 4, 6, 1, 3, 1, 1, 23, 0, 20, 12, 0, 0, 0, 1, 0, 0]' : 0.27872}", "{'[6, 0, 4, 6, 1, 3, 1, 1, 23, 0, 20, 12, 0, 0, 0, 1, 0, 0]' : 0.234778}", "{'[6, 0, 4, 6, 1, 3, 1, 1, 23, 0, 20, 12, 0, 0, 0, 1, 0, 0]' : 0.231892}", "{'[6, 0, 4, 6, 1, 3, 1, 1, 23, 0, 20, 12, 0, 0, 0, 1, 0, 0]' : 0.231956}", "{'[6, 0, 4, 6, 1, 3, 1, 1, 23, 0, 20, 12, 0, 0, 0, 1, 0, 0]' : 0.231924}", "{'[6, 0, 4, 6, 1, 3, 1, 1, 23, 0, 20, 12, 0, 0, 0, 1, 0, 0]' : 0.231926}", "{'[6, 0, 4, 6, 1, 3, 1, 1, 23, 0, 20, 12, 0, 0, 0, 1, 0, 0]' : 0.231912}", "{'[6, 0, 4, 6, 1, 3, 1, 1, 23, 0, 20, 12, 0, 0, 0, 1, 0, 0]' : 0.231957}", "{'[6, 0, 4, 6, 1, 3, 1, 1, 23, 0, 20, 12, 0, 0, 0, 1, 0, 0]' : 0.231967}", "{'[6, 0, 4, 6, 1, 3, 1, 1, 23, 0, 20, 12, 0, 0, 0, 1, 0, 0]' : 0.232218}", "{'[6, 0, 4, 6, 1, 3, 1, 1, 23, 0, 20, 12, 0, 0, 0, 1, 0, 0]' : 0.231893}", "{'[6, 0, 4, 6, 1, 3, 1, 1, 23, 0, 20, 12, 0, 0, 0, 1, 0, 0]' : 0.231925}", "{'[6, 0, 4, 6, 1, 3, 1, 1, 23, 0, 20, 12, 0, 0, 0, 1, 0, 0]' : 0.23196}", "{'[6, 0, 4, 6, 1, 3, 1, 1, 23, 0, 20, 12, 0, 0, 0, 1, 0, 0]' : 0.231887}", "{'[6, 0, 4, 6, 1, 3, 1, 1, 23, 0, 20, 12, 0, 0, 0, 1, 0, 0]' : 0.231925}", "{'[6, 0, 4, 6, 1, 3, 1, 1, 23, 0, 20, 12, 0, 0, 0, 1, 0, 0]' : 0.232248}", "{'[6, 0, 4, 6, 1, 3, 1, 1, 23, 0, 20, 12, 0, 0, 0, 1, 0, 0]' : 0.231913}", "{'[6, 0, 4, 6, 1, 3, 1, 1, 23, 0, 20, 12, 0, 0, 0, 1, 0, 0]' : 0.23217}", "{'[6, 0, 4, 6, 1, 3, 1, 1, 23, 0, 20, 12, 0, 0, 0, 1, 0, 0]' : 0.231973}", "{'[6, 0, 4, 6, 1, 3, 1, 1, 23, 0, 20, 12, 0, 0, 0, 1, 0, 0]' : 0.231917}", "{'[6, 0, 4, 6, 1, 3, 1, 1, 23, 0, 20, 12, 0, 0, 0, 1, 0, 0]' : 0.23196}", "{'[6, 0, 4, 6, 1, 3, 1, 1, 23, 0, 20, 12, 0, 0, 0, 1, 0, 0]' : 0.23194}", "{'[6, 0, 4, 6, 1, 3, 1, 1, 23, 0, 20, 12, 0, 0, 0, 1, 0, 0]' : 0.23196}", "{'[6, 0, 4, 6, 1, 3, 1, 1, 23, 0, 20, 12, 0, 0, 0, 1, 0, 0]' : 0.231948}", "{'[6, 0, 4, 6, 1, 3, 1, 1, 23, 0, 20, 12, 0, 0, 0, 1, 0, 0]' : 0.231966}", "{'[6, 0, 4, 6, 1, 3, 1, 1, 23, 0, 20, 12, 0, 0, 0, 1, 0, 0]' : 0.232014}", "{'[6, 0, 4, 6, 1, 3, 1, 1, 23, 0, 20, 12, 0, 0, 0, 1, 0, 0]' : 0.232175}", "{'[6, 0, 4, 6, 1, 3, 1, 1, 23, 0, 20, 12, 0, 0, 0, 1, 0, 0]' : 0.231951}", "{'[6, 0, 4, 6, 1, 3, 1, 1, 23, 0, 20, 12, 0, 0, 0, 1, 0, 0]' : 0.231948}", "{'[6, 0, 4, 6, 1, 3, 1, 1, 23, 0, 20, 12, 0, 0, 0, 1, 0, 0]' : 0.232006}"]
returning from 'run': {'[6, 0, 4, 6, 1, 3, 1, 1, 23, 0, 20, 12, 0, 0, 0, 1, 0, 0]': ([0.27872, 0.234778, 0.231892, 0.231956, 0.231924, 0.231926, 0.231912, 0.231957, 0.231967, 0.232218, 0.231893, 0.231925, 0.23196, 0.231887, 0.231925, 0.232248, 0.231913, 0.23217, 0.231973, 0.231917, 0.23196, 0.23194, 0.23196, 0.231948, 0.231966, 0.232014, 0.232175, 0.231951, 0.231948, 0.232006], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 4, 6, 1, 3, 1, 1, 23, 0, 20, 12, 0, 0, 0, 1, 0, 0]': ([0.27872, 0.234778, 0.231892, 0.231956, 0.231924, 0.231926, 0.231912, 0.231957, 0.231967, 0.232218, 0.231893, 0.231925, 0.23196, 0.231887, 0.231925, 0.232248, 0.231913, 0.23217, 0.231973, 0.231917, 0.23196, 0.23194, 0.23196, 0.231948, 0.231966, 0.232014, 0.232175, 0.231951, 0.231948, 0.232006], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	17
        Max loop nest depth: 	4
        Additions: 		2900
        Multiplications: 	900
        Divisions: 		0
        Logical: 		0
        Reads: 			4751
        Writes: 		550
        Comparisons:		17
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest15.exe __orio_perftest15.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest15.exe  
Program Test Output: 
{'[0, 0, 4, 2, 3, 0, 0, 0, 21, 28, 0, 4, 0, 1, 0, 0, 1, 1]' : 0.156276}
{'[0, 0, 4, 2, 3, 0, 0, 0, 21, 28, 0, 4, 0, 1, 0, 0, 1, 1]' : 0.157395}
{'[0, 0, 4, 2, 3, 0, 0, 0, 21, 28, 0, 4, 0, 1, 0, 0, 1, 1]' : 0.154723}
{'[0, 0, 4, 2, 3, 0, 0, 0, 21, 28, 0, 4, 0, 1, 0, 0, 1, 1]' : 0.152583}
{'[0, 0, 4, 2, 3, 0, 0, 0, 21, 28, 0, 4, 0, 1, 0, 0, 1, 1]' : 0.153356}
{'[0, 0, 4, 2, 3, 0, 0, 0, 21, 28, 0, 4, 0, 1, 0, 0, 1, 1]' : 0.153208}
{'[0, 0, 4, 2, 3, 0, 0, 0, 21, 28, 0, 4, 0, 1, 0, 0, 1, 1]' : 0.155007}
{'[0, 0, 4, 2, 3, 0, 0, 0, 21, 28, 0, 4, 0, 1, 0, 0, 1, 1]' : 0.155979}
{'[0, 0, 4, 2, 3, 0, 0, 0, 21, 28, 0, 4, 0, 1, 0, 0, 1, 1]' : 0.156187}
{'[0, 0, 4, 2, 3, 0, 0, 0, 21, 28, 0, 4, 0, 1, 0, 0, 1, 1]' : 0.156562}
{'[0, 0, 4, 2, 3, 0, 0, 0, 21, 28, 0, 4, 0, 1, 0, 0, 1, 1]' : 0.156564}
{'[0, 0, 4, 2, 3, 0, 0, 0, 21, 28, 0, 4, 0, 1, 0, 0, 1, 1]' : 0.156831}
{'[0, 0, 4, 2, 3, 0, 0, 0, 21, 28, 0, 4, 0, 1, 0, 0, 1, 1]' : 0.153}
{'[0, 0, 4, 2, 3, 0, 0, 0, 21, 28, 0, 4, 0, 1, 0, 0, 1, 1]' : 0.154005}
{'[0, 0, 4, 2, 3, 0, 0, 0, 21, 28, 0, 4, 0, 1, 0, 0, 1, 1]' : 0.154324}
{'[0, 0, 4, 2, 3, 0, 0, 0, 21, 28, 0, 4, 0, 1, 0, 0, 1, 1]' : 0.154079}
{'[0, 0, 4, 2, 3, 0, 0, 0, 21, 28, 0, 4, 0, 1, 0, 0, 1, 1]' : 0.154367}
{'[0, 0, 4, 2, 3, 0, 0, 0, 21, 28, 0, 4, 0, 1, 0, 0, 1, 1]' : 0.153316}
{'[0, 0, 4, 2, 3, 0, 0, 0, 21, 28, 0, 4, 0, 1, 0, 0, 1, 1]' : 0.1538}
{'[0, 0, 4, 2, 3, 0, 0, 0, 21, 28, 0, 4, 0, 1, 0, 0, 1, 1]' : 0.154433}
{'[0, 0, 4, 2, 3, 0, 0, 0, 21, 28, 0, 4, 0, 1, 0, 0, 1, 1]' : 0.156108}
{'[0, 0, 4, 2, 3, 0, 0, 0, 21, 28, 0, 4, 0, 1, 0, 0, 1, 1]' : 0.154741}
{'[0, 0, 4, 2, 3, 0, 0, 0, 21, 28, 0, 4, 0, 1, 0, 0, 1, 1]' : 0.154012}
{'[0, 0, 4, 2, 3, 0, 0, 0, 21, 28, 0, 4, 0, 1, 0, 0, 1, 1]' : 0.153534}
{'[0, 0, 4, 2, 3, 0, 0, 0, 21, 28, 0, 4, 0, 1, 0, 0, 1, 1]' : 0.153836}
{'[0, 0, 4, 2, 3, 0, 0, 0, 21, 28, 0, 4, 0, 1, 0, 0, 1, 1]' : 0.153498}
{'[0, 0, 4, 2, 3, 0, 0, 0, 21, 28, 0, 4, 0, 1, 0, 0, 1, 1]' : 0.153783}
{'[0, 0, 4, 2, 3, 0, 0, 0, 21, 28, 0, 4, 0, 1, 0, 0, 1, 1]' : 0.153883}
{'[0, 0, 4, 2, 3, 0, 0, 0, 21, 28, 0, 4, 0, 1, 0, 0, 1, 1]' : 0.156036}
{'[0, 0, 4, 2, 3, 0, 0, 0, 21, 28, 0, 4, 0, 1, 0, 0, 1, 1]' : 0.156489}

out:
 ["{'[0, 0, 4, 2, 3, 0, 0, 0, 21, 28, 0, 4, 0, 1, 0, 0, 1, 1]' : 0.156276}", "{'[0, 0, 4, 2, 3, 0, 0, 0, 21, 28, 0, 4, 0, 1, 0, 0, 1, 1]' : 0.157395}", "{'[0, 0, 4, 2, 3, 0, 0, 0, 21, 28, 0, 4, 0, 1, 0, 0, 1, 1]' : 0.154723}", "{'[0, 0, 4, 2, 3, 0, 0, 0, 21, 28, 0, 4, 0, 1, 0, 0, 1, 1]' : 0.152583}", "{'[0, 0, 4, 2, 3, 0, 0, 0, 21, 28, 0, 4, 0, 1, 0, 0, 1, 1]' : 0.153356}", "{'[0, 0, 4, 2, 3, 0, 0, 0, 21, 28, 0, 4, 0, 1, 0, 0, 1, 1]' : 0.153208}", "{'[0, 0, 4, 2, 3, 0, 0, 0, 21, 28, 0, 4, 0, 1, 0, 0, 1, 1]' : 0.155007}", "{'[0, 0, 4, 2, 3, 0, 0, 0, 21, 28, 0, 4, 0, 1, 0, 0, 1, 1]' : 0.155979}", "{'[0, 0, 4, 2, 3, 0, 0, 0, 21, 28, 0, 4, 0, 1, 0, 0, 1, 1]' : 0.156187}", "{'[0, 0, 4, 2, 3, 0, 0, 0, 21, 28, 0, 4, 0, 1, 0, 0, 1, 1]' : 0.156562}", "{'[0, 0, 4, 2, 3, 0, 0, 0, 21, 28, 0, 4, 0, 1, 0, 0, 1, 1]' : 0.156564}", "{'[0, 0, 4, 2, 3, 0, 0, 0, 21, 28, 0, 4, 0, 1, 0, 0, 1, 1]' : 0.156831}", "{'[0, 0, 4, 2, 3, 0, 0, 0, 21, 28, 0, 4, 0, 1, 0, 0, 1, 1]' : 0.153}", "{'[0, 0, 4, 2, 3, 0, 0, 0, 21, 28, 0, 4, 0, 1, 0, 0, 1, 1]' : 0.154005}", "{'[0, 0, 4, 2, 3, 0, 0, 0, 21, 28, 0, 4, 0, 1, 0, 0, 1, 1]' : 0.154324}", "{'[0, 0, 4, 2, 3, 0, 0, 0, 21, 28, 0, 4, 0, 1, 0, 0, 1, 1]' : 0.154079}", "{'[0, 0, 4, 2, 3, 0, 0, 0, 21, 28, 0, 4, 0, 1, 0, 0, 1, 1]' : 0.154367}", "{'[0, 0, 4, 2, 3, 0, 0, 0, 21, 28, 0, 4, 0, 1, 0, 0, 1, 1]' : 0.153316}", "{'[0, 0, 4, 2, 3, 0, 0, 0, 21, 28, 0, 4, 0, 1, 0, 0, 1, 1]' : 0.1538}", "{'[0, 0, 4, 2, 3, 0, 0, 0, 21, 28, 0, 4, 0, 1, 0, 0, 1, 1]' : 0.154433}", "{'[0, 0, 4, 2, 3, 0, 0, 0, 21, 28, 0, 4, 0, 1, 0, 0, 1, 1]' : 0.156108}", "{'[0, 0, 4, 2, 3, 0, 0, 0, 21, 28, 0, 4, 0, 1, 0, 0, 1, 1]' : 0.154741}", "{'[0, 0, 4, 2, 3, 0, 0, 0, 21, 28, 0, 4, 0, 1, 0, 0, 1, 1]' : 0.154012}", "{'[0, 0, 4, 2, 3, 0, 0, 0, 21, 28, 0, 4, 0, 1, 0, 0, 1, 1]' : 0.153534}", "{'[0, 0, 4, 2, 3, 0, 0, 0, 21, 28, 0, 4, 0, 1, 0, 0, 1, 1]' : 0.153836}", "{'[0, 0, 4, 2, 3, 0, 0, 0, 21, 28, 0, 4, 0, 1, 0, 0, 1, 1]' : 0.153498}", "{'[0, 0, 4, 2, 3, 0, 0, 0, 21, 28, 0, 4, 0, 1, 0, 0, 1, 1]' : 0.153783}", "{'[0, 0, 4, 2, 3, 0, 0, 0, 21, 28, 0, 4, 0, 1, 0, 0, 1, 1]' : 0.153883}", "{'[0, 0, 4, 2, 3, 0, 0, 0, 21, 28, 0, 4, 0, 1, 0, 0, 1, 1]' : 0.156036}", "{'[0, 0, 4, 2, 3, 0, 0, 0, 21, 28, 0, 4, 0, 1, 0, 0, 1, 1]' : 0.156489}"]
returning from 'run': {'[0, 0, 4, 2, 3, 0, 0, 0, 21, 28, 0, 4, 0, 1, 0, 0, 1, 1]': ([0.156276, 0.157395, 0.154723, 0.152583, 0.153356, 0.153208, 0.155007, 0.155979, 0.156187, 0.156562, 0.156564, 0.156831, 0.153, 0.154005, 0.154324, 0.154079, 0.154367, 0.153316, 0.1538, 0.154433, 0.156108, 0.154741, 0.154012, 0.153534, 0.153836, 0.153498, 0.153783, 0.153883, 0.156036, 0.156489], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 4, 2, 3, 0, 0, 0, 21, 28, 0, 4, 0, 1, 0, 0, 1, 1]': ([0.156276, 0.157395, 0.154723, 0.152583, 0.153356, 0.153208, 0.155007, 0.155979, 0.156187, 0.156562, 0.156564, 0.156831, 0.153, 0.154005, 0.154324, 0.154079, 0.154367, 0.153316, 0.1538, 0.154433, 0.156108, 0.154741, 0.154012, 0.153534, 0.153836, 0.153498, 0.153783, 0.153883, 0.156036, 0.156489], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = iii
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		281
        Multiplications: 	92
        Divisions: 		0
        Logical: 		0
        Reads: 			692
        Writes: 		165
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest16.exe __orio_perftest16.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest16.exe  
Program Test Output: 
{'[6, 0, 0, 4, 5, 2, 1, 0, 8, 0, 5, 29, 0, 0, 1, 1, 1, 0]' : 0.183872}
{'[6, 0, 0, 4, 5, 2, 1, 0, 8, 0, 5, 29, 0, 0, 1, 1, 1, 0]' : 0.183879}
{'[6, 0, 0, 4, 5, 2, 1, 0, 8, 0, 5, 29, 0, 0, 1, 1, 1, 0]' : 0.184814}
{'[6, 0, 0, 4, 5, 2, 1, 0, 8, 0, 5, 29, 0, 0, 1, 1, 1, 0]' : 0.184342}
{'[6, 0, 0, 4, 5, 2, 1, 0, 8, 0, 5, 29, 0, 0, 1, 1, 1, 0]' : 0.183903}
{'[6, 0, 0, 4, 5, 2, 1, 0, 8, 0, 5, 29, 0, 0, 1, 1, 1, 0]' : 0.183755}
{'[6, 0, 0, 4, 5, 2, 1, 0, 8, 0, 5, 29, 0, 0, 1, 1, 1, 0]' : 0.184025}
{'[6, 0, 0, 4, 5, 2, 1, 0, 8, 0, 5, 29, 0, 0, 1, 1, 1, 0]' : 0.183736}
{'[6, 0, 0, 4, 5, 2, 1, 0, 8, 0, 5, 29, 0, 0, 1, 1, 1, 0]' : 0.18599}
{'[6, 0, 0, 4, 5, 2, 1, 0, 8, 0, 5, 29, 0, 0, 1, 1, 1, 0]' : 0.189149}
{'[6, 0, 0, 4, 5, 2, 1, 0, 8, 0, 5, 29, 0, 0, 1, 1, 1, 0]' : 0.189141}
{'[6, 0, 0, 4, 5, 2, 1, 0, 8, 0, 5, 29, 0, 0, 1, 1, 1, 0]' : 0.186965}
{'[6, 0, 0, 4, 5, 2, 1, 0, 8, 0, 5, 29, 0, 0, 1, 1, 1, 0]' : 0.183737}
{'[6, 0, 0, 4, 5, 2, 1, 0, 8, 0, 5, 29, 0, 0, 1, 1, 1, 0]' : 0.183864}
{'[6, 0, 0, 4, 5, 2, 1, 0, 8, 0, 5, 29, 0, 0, 1, 1, 1, 0]' : 0.188067}
{'[6, 0, 0, 4, 5, 2, 1, 0, 8, 0, 5, 29, 0, 0, 1, 1, 1, 0]' : 0.1891}
{'[6, 0, 0, 4, 5, 2, 1, 0, 8, 0, 5, 29, 0, 0, 1, 1, 1, 0]' : 0.186818}
{'[6, 0, 0, 4, 5, 2, 1, 0, 8, 0, 5, 29, 0, 0, 1, 1, 1, 0]' : 0.183761}
{'[6, 0, 0, 4, 5, 2, 1, 0, 8, 0, 5, 29, 0, 0, 1, 1, 1, 0]' : 0.184589}
{'[6, 0, 0, 4, 5, 2, 1, 0, 8, 0, 5, 29, 0, 0, 1, 1, 1, 0]' : 0.185642}
{'[6, 0, 0, 4, 5, 2, 1, 0, 8, 0, 5, 29, 0, 0, 1, 1, 1, 0]' : 0.189088}
{'[6, 0, 0, 4, 5, 2, 1, 0, 8, 0, 5, 29, 0, 0, 1, 1, 1, 0]' : 0.189074}
{'[6, 0, 0, 4, 5, 2, 1, 0, 8, 0, 5, 29, 0, 0, 1, 1, 1, 0]' : 0.185456}
{'[6, 0, 0, 4, 5, 2, 1, 0, 8, 0, 5, 29, 0, 0, 1, 1, 1, 0]' : 0.183788}
{'[6, 0, 0, 4, 5, 2, 1, 0, 8, 0, 5, 29, 0, 0, 1, 1, 1, 0]' : 0.186545}
{'[6, 0, 0, 4, 5, 2, 1, 0, 8, 0, 5, 29, 0, 0, 1, 1, 1, 0]' : 0.188848}
{'[6, 0, 0, 4, 5, 2, 1, 0, 8, 0, 5, 29, 0, 0, 1, 1, 1, 0]' : 0.188767}
{'[6, 0, 0, 4, 5, 2, 1, 0, 8, 0, 5, 29, 0, 0, 1, 1, 1, 0]' : 0.187114}
{'[6, 0, 0, 4, 5, 2, 1, 0, 8, 0, 5, 29, 0, 0, 1, 1, 1, 0]' : 0.183589}
{'[6, 0, 0, 4, 5, 2, 1, 0, 8, 0, 5, 29, 0, 0, 1, 1, 1, 0]' : 0.183599}

out:
 ["{'[6, 0, 0, 4, 5, 2, 1, 0, 8, 0, 5, 29, 0, 0, 1, 1, 1, 0]' : 0.183872}", "{'[6, 0, 0, 4, 5, 2, 1, 0, 8, 0, 5, 29, 0, 0, 1, 1, 1, 0]' : 0.183879}", "{'[6, 0, 0, 4, 5, 2, 1, 0, 8, 0, 5, 29, 0, 0, 1, 1, 1, 0]' : 0.184814}", "{'[6, 0, 0, 4, 5, 2, 1, 0, 8, 0, 5, 29, 0, 0, 1, 1, 1, 0]' : 0.184342}", "{'[6, 0, 0, 4, 5, 2, 1, 0, 8, 0, 5, 29, 0, 0, 1, 1, 1, 0]' : 0.183903}", "{'[6, 0, 0, 4, 5, 2, 1, 0, 8, 0, 5, 29, 0, 0, 1, 1, 1, 0]' : 0.183755}", "{'[6, 0, 0, 4, 5, 2, 1, 0, 8, 0, 5, 29, 0, 0, 1, 1, 1, 0]' : 0.184025}", "{'[6, 0, 0, 4, 5, 2, 1, 0, 8, 0, 5, 29, 0, 0, 1, 1, 1, 0]' : 0.183736}", "{'[6, 0, 0, 4, 5, 2, 1, 0, 8, 0, 5, 29, 0, 0, 1, 1, 1, 0]' : 0.18599}", "{'[6, 0, 0, 4, 5, 2, 1, 0, 8, 0, 5, 29, 0, 0, 1, 1, 1, 0]' : 0.189149}", "{'[6, 0, 0, 4, 5, 2, 1, 0, 8, 0, 5, 29, 0, 0, 1, 1, 1, 0]' : 0.189141}", "{'[6, 0, 0, 4, 5, 2, 1, 0, 8, 0, 5, 29, 0, 0, 1, 1, 1, 0]' : 0.186965}", "{'[6, 0, 0, 4, 5, 2, 1, 0, 8, 0, 5, 29, 0, 0, 1, 1, 1, 0]' : 0.183737}", "{'[6, 0, 0, 4, 5, 2, 1, 0, 8, 0, 5, 29, 0, 0, 1, 1, 1, 0]' : 0.183864}", "{'[6, 0, 0, 4, 5, 2, 1, 0, 8, 0, 5, 29, 0, 0, 1, 1, 1, 0]' : 0.188067}", "{'[6, 0, 0, 4, 5, 2, 1, 0, 8, 0, 5, 29, 0, 0, 1, 1, 1, 0]' : 0.1891}", "{'[6, 0, 0, 4, 5, 2, 1, 0, 8, 0, 5, 29, 0, 0, 1, 1, 1, 0]' : 0.186818}", "{'[6, 0, 0, 4, 5, 2, 1, 0, 8, 0, 5, 29, 0, 0, 1, 1, 1, 0]' : 0.183761}", "{'[6, 0, 0, 4, 5, 2, 1, 0, 8, 0, 5, 29, 0, 0, 1, 1, 1, 0]' : 0.184589}", "{'[6, 0, 0, 4, 5, 2, 1, 0, 8, 0, 5, 29, 0, 0, 1, 1, 1, 0]' : 0.185642}", "{'[6, 0, 0, 4, 5, 2, 1, 0, 8, 0, 5, 29, 0, 0, 1, 1, 1, 0]' : 0.189088}", "{'[6, 0, 0, 4, 5, 2, 1, 0, 8, 0, 5, 29, 0, 0, 1, 1, 1, 0]' : 0.189074}", "{'[6, 0, 0, 4, 5, 2, 1, 0, 8, 0, 5, 29, 0, 0, 1, 1, 1, 0]' : 0.185456}", "{'[6, 0, 0, 4, 5, 2, 1, 0, 8, 0, 5, 29, 0, 0, 1, 1, 1, 0]' : 0.183788}", "{'[6, 0, 0, 4, 5, 2, 1, 0, 8, 0, 5, 29, 0, 0, 1, 1, 1, 0]' : 0.186545}", "{'[6, 0, 0, 4, 5, 2, 1, 0, 8, 0, 5, 29, 0, 0, 1, 1, 1, 0]' : 0.188848}", "{'[6, 0, 0, 4, 5, 2, 1, 0, 8, 0, 5, 29, 0, 0, 1, 1, 1, 0]' : 0.188767}", "{'[6, 0, 0, 4, 5, 2, 1, 0, 8, 0, 5, 29, 0, 0, 1, 1, 1, 0]' : 0.187114}", "{'[6, 0, 0, 4, 5, 2, 1, 0, 8, 0, 5, 29, 0, 0, 1, 1, 1, 0]' : 0.183589}", "{'[6, 0, 0, 4, 5, 2, 1, 0, 8, 0, 5, 29, 0, 0, 1, 1, 1, 0]' : 0.183599}"]
returning from 'run': {'[6, 0, 0, 4, 5, 2, 1, 0, 8, 0, 5, 29, 0, 0, 1, 1, 1, 0]': ([0.183872, 0.183879, 0.184814, 0.184342, 0.183903, 0.183755, 0.184025, 0.183736, 0.18599, 0.189149, 0.189141, 0.186965, 0.183737, 0.183864, 0.188067, 0.1891, 0.186818, 0.183761, 0.184589, 0.185642, 0.189088, 0.189074, 0.185456, 0.183788, 0.186545, 0.188848, 0.188767, 0.187114, 0.183589, 0.183599], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 0, 4, 5, 2, 1, 0, 8, 0, 5, 29, 0, 0, 1, 1, 1, 0]': ([0.183872, 0.183879, 0.184814, 0.184342, 0.183903, 0.183755, 0.184025, 0.183736, 0.18599, 0.189149, 0.189141, 0.186965, 0.183737, 0.183864, 0.188067, 0.1891, 0.186818, 0.183761, 0.184589, 0.185642, 0.189088, 0.189074, 0.185456, 0.183788, 0.186545, 0.188848, 0.188767, 0.187114, 0.183589, 0.183599], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	28
        Max loop nest depth: 	5
        Additions: 		1395
        Multiplications: 	366
        Divisions: 		0
        Logical: 		0
        Reads: 			2422
        Writes: 		282
        Comparisons:		28
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest17.exe __orio_perftest17.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest17.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest17.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest17.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest17.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		2855
        Multiplications: 	868
        Divisions: 		0
        Logical: 		0
        Reads: 			4549
        Writes: 		516
        Comparisons:		15
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest18.exe __orio_perftest18.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest18.exe  
Program Test Output: 
{'[0, 0, 5, 5, 4, 0, 0, 0, 16, 29, 11, 0, 0, 0, 0, 0, 1, 0]' : 0.213903}
{'[0, 0, 5, 5, 4, 0, 0, 0, 16, 29, 11, 0, 0, 0, 0, 0, 1, 0]' : 0.208333}
{'[0, 0, 5, 5, 4, 0, 0, 0, 16, 29, 11, 0, 0, 0, 0, 0, 1, 0]' : 0.193842}
{'[0, 0, 5, 5, 4, 0, 0, 0, 16, 29, 11, 0, 0, 0, 0, 0, 1, 0]' : 0.19333}
{'[0, 0, 5, 5, 4, 0, 0, 0, 16, 29, 11, 0, 0, 0, 0, 0, 1, 0]' : 0.193261}
{'[0, 0, 5, 5, 4, 0, 0, 0, 16, 29, 11, 0, 0, 0, 0, 0, 1, 0]' : 0.19315}
{'[0, 0, 5, 5, 4, 0, 0, 0, 16, 29, 11, 0, 0, 0, 0, 0, 1, 0]' : 0.196009}
{'[0, 0, 5, 5, 4, 0, 0, 0, 16, 29, 11, 0, 0, 0, 0, 0, 1, 0]' : 0.194018}
{'[0, 0, 5, 5, 4, 0, 0, 0, 16, 29, 11, 0, 0, 0, 0, 0, 1, 0]' : 0.192894}
{'[0, 0, 5, 5, 4, 0, 0, 0, 16, 29, 11, 0, 0, 0, 0, 0, 1, 0]' : 0.194303}
{'[0, 0, 5, 5, 4, 0, 0, 0, 16, 29, 11, 0, 0, 0, 0, 0, 1, 0]' : 0.191799}
{'[0, 0, 5, 5, 4, 0, 0, 0, 16, 29, 11, 0, 0, 0, 0, 0, 1, 0]' : 0.194949}
{'[0, 0, 5, 5, 4, 0, 0, 0, 16, 29, 11, 0, 0, 0, 0, 0, 1, 0]' : 0.192424}
{'[0, 0, 5, 5, 4, 0, 0, 0, 16, 29, 11, 0, 0, 0, 0, 0, 1, 0]' : 0.192821}
{'[0, 0, 5, 5, 4, 0, 0, 0, 16, 29, 11, 0, 0, 0, 0, 0, 1, 0]' : 0.192735}
{'[0, 0, 5, 5, 4, 0, 0, 0, 16, 29, 11, 0, 0, 0, 0, 0, 1, 0]' : 0.194931}
{'[0, 0, 5, 5, 4, 0, 0, 0, 16, 29, 11, 0, 0, 0, 0, 0, 1, 0]' : 0.193155}
{'[0, 0, 5, 5, 4, 0, 0, 0, 16, 29, 11, 0, 0, 0, 0, 0, 1, 0]' : 0.193817}
{'[0, 0, 5, 5, 4, 0, 0, 0, 16, 29, 11, 0, 0, 0, 0, 0, 1, 0]' : 0.194101}
{'[0, 0, 5, 5, 4, 0, 0, 0, 16, 29, 11, 0, 0, 0, 0, 0, 1, 0]' : 0.193397}
{'[0, 0, 5, 5, 4, 0, 0, 0, 16, 29, 11, 0, 0, 0, 0, 0, 1, 0]' : 0.193642}
{'[0, 0, 5, 5, 4, 0, 0, 0, 16, 29, 11, 0, 0, 0, 0, 0, 1, 0]' : 0.194746}
{'[0, 0, 5, 5, 4, 0, 0, 0, 16, 29, 11, 0, 0, 0, 0, 0, 1, 0]' : 0.193141}
{'[0, 0, 5, 5, 4, 0, 0, 0, 16, 29, 11, 0, 0, 0, 0, 0, 1, 0]' : 0.193951}
{'[0, 0, 5, 5, 4, 0, 0, 0, 16, 29, 11, 0, 0, 0, 0, 0, 1, 0]' : 0.193731}
{'[0, 0, 5, 5, 4, 0, 0, 0, 16, 29, 11, 0, 0, 0, 0, 0, 1, 0]' : 0.193828}
{'[0, 0, 5, 5, 4, 0, 0, 0, 16, 29, 11, 0, 0, 0, 0, 0, 1, 0]' : 0.192175}
{'[0, 0, 5, 5, 4, 0, 0, 0, 16, 29, 11, 0, 0, 0, 0, 0, 1, 0]' : 0.193717}
{'[0, 0, 5, 5, 4, 0, 0, 0, 16, 29, 11, 0, 0, 0, 0, 0, 1, 0]' : 0.194061}
{'[0, 0, 5, 5, 4, 0, 0, 0, 16, 29, 11, 0, 0, 0, 0, 0, 1, 0]' : 0.192965}

out:
 ["{'[0, 0, 5, 5, 4, 0, 0, 0, 16, 29, 11, 0, 0, 0, 0, 0, 1, 0]' : 0.213903}", "{'[0, 0, 5, 5, 4, 0, 0, 0, 16, 29, 11, 0, 0, 0, 0, 0, 1, 0]' : 0.208333}", "{'[0, 0, 5, 5, 4, 0, 0, 0, 16, 29, 11, 0, 0, 0, 0, 0, 1, 0]' : 0.193842}", "{'[0, 0, 5, 5, 4, 0, 0, 0, 16, 29, 11, 0, 0, 0, 0, 0, 1, 0]' : 0.19333}", "{'[0, 0, 5, 5, 4, 0, 0, 0, 16, 29, 11, 0, 0, 0, 0, 0, 1, 0]' : 0.193261}", "{'[0, 0, 5, 5, 4, 0, 0, 0, 16, 29, 11, 0, 0, 0, 0, 0, 1, 0]' : 0.19315}", "{'[0, 0, 5, 5, 4, 0, 0, 0, 16, 29, 11, 0, 0, 0, 0, 0, 1, 0]' : 0.196009}", "{'[0, 0, 5, 5, 4, 0, 0, 0, 16, 29, 11, 0, 0, 0, 0, 0, 1, 0]' : 0.194018}", "{'[0, 0, 5, 5, 4, 0, 0, 0, 16, 29, 11, 0, 0, 0, 0, 0, 1, 0]' : 0.192894}", "{'[0, 0, 5, 5, 4, 0, 0, 0, 16, 29, 11, 0, 0, 0, 0, 0, 1, 0]' : 0.194303}", "{'[0, 0, 5, 5, 4, 0, 0, 0, 16, 29, 11, 0, 0, 0, 0, 0, 1, 0]' : 0.191799}", "{'[0, 0, 5, 5, 4, 0, 0, 0, 16, 29, 11, 0, 0, 0, 0, 0, 1, 0]' : 0.194949}", "{'[0, 0, 5, 5, 4, 0, 0, 0, 16, 29, 11, 0, 0, 0, 0, 0, 1, 0]' : 0.192424}", "{'[0, 0, 5, 5, 4, 0, 0, 0, 16, 29, 11, 0, 0, 0, 0, 0, 1, 0]' : 0.192821}", "{'[0, 0, 5, 5, 4, 0, 0, 0, 16, 29, 11, 0, 0, 0, 0, 0, 1, 0]' : 0.192735}", "{'[0, 0, 5, 5, 4, 0, 0, 0, 16, 29, 11, 0, 0, 0, 0, 0, 1, 0]' : 0.194931}", "{'[0, 0, 5, 5, 4, 0, 0, 0, 16, 29, 11, 0, 0, 0, 0, 0, 1, 0]' : 0.193155}", "{'[0, 0, 5, 5, 4, 0, 0, 0, 16, 29, 11, 0, 0, 0, 0, 0, 1, 0]' : 0.193817}", "{'[0, 0, 5, 5, 4, 0, 0, 0, 16, 29, 11, 0, 0, 0, 0, 0, 1, 0]' : 0.194101}", "{'[0, 0, 5, 5, 4, 0, 0, 0, 16, 29, 11, 0, 0, 0, 0, 0, 1, 0]' : 0.193397}", "{'[0, 0, 5, 5, 4, 0, 0, 0, 16, 29, 11, 0, 0, 0, 0, 0, 1, 0]' : 0.193642}", "{'[0, 0, 5, 5, 4, 0, 0, 0, 16, 29, 11, 0, 0, 0, 0, 0, 1, 0]' : 0.194746}", "{'[0, 0, 5, 5, 4, 0, 0, 0, 16, 29, 11, 0, 0, 0, 0, 0, 1, 0]' : 0.193141}", "{'[0, 0, 5, 5, 4, 0, 0, 0, 16, 29, 11, 0, 0, 0, 0, 0, 1, 0]' : 0.193951}", "{'[0, 0, 5, 5, 4, 0, 0, 0, 16, 29, 11, 0, 0, 0, 0, 0, 1, 0]' : 0.193731}", "{'[0, 0, 5, 5, 4, 0, 0, 0, 16, 29, 11, 0, 0, 0, 0, 0, 1, 0]' : 0.193828}", "{'[0, 0, 5, 5, 4, 0, 0, 0, 16, 29, 11, 0, 0, 0, 0, 0, 1, 0]' : 0.192175}", "{'[0, 0, 5, 5, 4, 0, 0, 0, 16, 29, 11, 0, 0, 0, 0, 0, 1, 0]' : 0.193717}", "{'[0, 0, 5, 5, 4, 0, 0, 0, 16, 29, 11, 0, 0, 0, 0, 0, 1, 0]' : 0.194061}", "{'[0, 0, 5, 5, 4, 0, 0, 0, 16, 29, 11, 0, 0, 0, 0, 0, 1, 0]' : 0.192965}"]
returning from 'run': {'[0, 0, 5, 5, 4, 0, 0, 0, 16, 29, 11, 0, 0, 0, 0, 0, 1, 0]': ([0.213903, 0.208333, 0.193842, 0.19333, 0.193261, 0.19315, 0.196009, 0.194018, 0.192894, 0.194303, 0.191799, 0.194949, 0.192424, 0.192821, 0.192735, 0.194931, 0.193155, 0.193817, 0.194101, 0.193397, 0.193642, 0.194746, 0.193141, 0.193951, 0.193731, 0.193828, 0.192175, 0.193717, 0.194061, 0.192965], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 5, 5, 4, 0, 0, 0, 16, 29, 11, 0, 0, 0, 0, 0, 1, 0]': ([0.213903, 0.208333, 0.193842, 0.19333, 0.193261, 0.19315, 0.196009, 0.194018, 0.192894, 0.194303, 0.191799, 0.194949, 0.192424, 0.192821, 0.192735, 0.194931, 0.193155, 0.193817, 0.194101, 0.193397, 0.193642, 0.194746, 0.193141, 0.193951, 0.193731, 0.193828, 0.192175, 0.193717, 0.194061, 0.192965], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	5
        Additions: 		2300
        Multiplications: 	720
        Divisions: 		0
        Logical: 		0
        Reads: 			3750
        Writes: 		403
        Comparisons:		20
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest19.exe __orio_perftest19.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest19.exe  
Program Test Output: 
{'[5, 3, 0, 0, 2, 6, 0, 0, 0, 0, 18, 10, 1, 0, 1, 0, 0, 0]' : 0.110474}
{'[5, 3, 0, 0, 2, 6, 0, 0, 0, 0, 18, 10, 1, 0, 1, 0, 0, 0]' : 0.115624}
{'[5, 3, 0, 0, 2, 6, 0, 0, 0, 0, 18, 10, 1, 0, 1, 0, 0, 0]' : 0.111917}
{'[5, 3, 0, 0, 2, 6, 0, 0, 0, 0, 18, 10, 1, 0, 1, 0, 0, 0]' : 0.112578}
{'[5, 3, 0, 0, 2, 6, 0, 0, 0, 0, 18, 10, 1, 0, 1, 0, 0, 0]' : 0.112587}
{'[5, 3, 0, 0, 2, 6, 0, 0, 0, 0, 18, 10, 1, 0, 1, 0, 0, 0]' : 0.11154}
{'[5, 3, 0, 0, 2, 6, 0, 0, 0, 0, 18, 10, 1, 0, 1, 0, 0, 0]' : 0.10872}
{'[5, 3, 0, 0, 2, 6, 0, 0, 0, 0, 18, 10, 1, 0, 1, 0, 0, 0]' : 0.109334}
{'[5, 3, 0, 0, 2, 6, 0, 0, 0, 0, 18, 10, 1, 0, 1, 0, 0, 0]' : 0.109057}
{'[5, 3, 0, 0, 2, 6, 0, 0, 0, 0, 18, 10, 1, 0, 1, 0, 0, 0]' : 0.110165}
{'[5, 3, 0, 0, 2, 6, 0, 0, 0, 0, 18, 10, 1, 0, 1, 0, 0, 0]' : 0.112043}
{'[5, 3, 0, 0, 2, 6, 0, 0, 0, 0, 18, 10, 1, 0, 1, 0, 0, 0]' : 0.111896}
{'[5, 3, 0, 0, 2, 6, 0, 0, 0, 0, 18, 10, 1, 0, 1, 0, 0, 0]' : 0.109098}
{'[5, 3, 0, 0, 2, 6, 0, 0, 0, 0, 18, 10, 1, 0, 1, 0, 0, 0]' : 0.109225}
{'[5, 3, 0, 0, 2, 6, 0, 0, 0, 0, 18, 10, 1, 0, 1, 0, 0, 0]' : 0.109922}
{'[5, 3, 0, 0, 2, 6, 0, 0, 0, 0, 18, 10, 1, 0, 1, 0, 0, 0]' : 0.109395}
{'[5, 3, 0, 0, 2, 6, 0, 0, 0, 0, 18, 10, 1, 0, 1, 0, 0, 0]' : 0.109031}
{'[5, 3, 0, 0, 2, 6, 0, 0, 0, 0, 18, 10, 1, 0, 1, 0, 0, 0]' : 0.1092}
{'[5, 3, 0, 0, 2, 6, 0, 0, 0, 0, 18, 10, 1, 0, 1, 0, 0, 0]' : 0.109316}
{'[5, 3, 0, 0, 2, 6, 0, 0, 0, 0, 18, 10, 1, 0, 1, 0, 0, 0]' : 0.11076}
{'[5, 3, 0, 0, 2, 6, 0, 0, 0, 0, 18, 10, 1, 0, 1, 0, 0, 0]' : 0.108984}
{'[5, 3, 0, 0, 2, 6, 0, 0, 0, 0, 18, 10, 1, 0, 1, 0, 0, 0]' : 0.109217}
{'[5, 3, 0, 0, 2, 6, 0, 0, 0, 0, 18, 10, 1, 0, 1, 0, 0, 0]' : 0.108771}
{'[5, 3, 0, 0, 2, 6, 0, 0, 0, 0, 18, 10, 1, 0, 1, 0, 0, 0]' : 0.111156}
{'[5, 3, 0, 0, 2, 6, 0, 0, 0, 0, 18, 10, 1, 0, 1, 0, 0, 0]' : 0.110813}
{'[5, 3, 0, 0, 2, 6, 0, 0, 0, 0, 18, 10, 1, 0, 1, 0, 0, 0]' : 0.109377}
{'[5, 3, 0, 0, 2, 6, 0, 0, 0, 0, 18, 10, 1, 0, 1, 0, 0, 0]' : 0.108683}
{'[5, 3, 0, 0, 2, 6, 0, 0, 0, 0, 18, 10, 1, 0, 1, 0, 0, 0]' : 0.109174}
{'[5, 3, 0, 0, 2, 6, 0, 0, 0, 0, 18, 10, 1, 0, 1, 0, 0, 0]' : 0.11227}
{'[5, 3, 0, 0, 2, 6, 0, 0, 0, 0, 18, 10, 1, 0, 1, 0, 0, 0]' : 0.112531}

out:
 ["{'[5, 3, 0, 0, 2, 6, 0, 0, 0, 0, 18, 10, 1, 0, 1, 0, 0, 0]' : 0.110474}", "{'[5, 3, 0, 0, 2, 6, 0, 0, 0, 0, 18, 10, 1, 0, 1, 0, 0, 0]' : 0.115624}", "{'[5, 3, 0, 0, 2, 6, 0, 0, 0, 0, 18, 10, 1, 0, 1, 0, 0, 0]' : 0.111917}", "{'[5, 3, 0, 0, 2, 6, 0, 0, 0, 0, 18, 10, 1, 0, 1, 0, 0, 0]' : 0.112578}", "{'[5, 3, 0, 0, 2, 6, 0, 0, 0, 0, 18, 10, 1, 0, 1, 0, 0, 0]' : 0.112587}", "{'[5, 3, 0, 0, 2, 6, 0, 0, 0, 0, 18, 10, 1, 0, 1, 0, 0, 0]' : 0.11154}", "{'[5, 3, 0, 0, 2, 6, 0, 0, 0, 0, 18, 10, 1, 0, 1, 0, 0, 0]' : 0.10872}", "{'[5, 3, 0, 0, 2, 6, 0, 0, 0, 0, 18, 10, 1, 0, 1, 0, 0, 0]' : 0.109334}", "{'[5, 3, 0, 0, 2, 6, 0, 0, 0, 0, 18, 10, 1, 0, 1, 0, 0, 0]' : 0.109057}", "{'[5, 3, 0, 0, 2, 6, 0, 0, 0, 0, 18, 10, 1, 0, 1, 0, 0, 0]' : 0.110165}", "{'[5, 3, 0, 0, 2, 6, 0, 0, 0, 0, 18, 10, 1, 0, 1, 0, 0, 0]' : 0.112043}", "{'[5, 3, 0, 0, 2, 6, 0, 0, 0, 0, 18, 10, 1, 0, 1, 0, 0, 0]' : 0.111896}", "{'[5, 3, 0, 0, 2, 6, 0, 0, 0, 0, 18, 10, 1, 0, 1, 0, 0, 0]' : 0.109098}", "{'[5, 3, 0, 0, 2, 6, 0, 0, 0, 0, 18, 10, 1, 0, 1, 0, 0, 0]' : 0.109225}", "{'[5, 3, 0, 0, 2, 6, 0, 0, 0, 0, 18, 10, 1, 0, 1, 0, 0, 0]' : 0.109922}", "{'[5, 3, 0, 0, 2, 6, 0, 0, 0, 0, 18, 10, 1, 0, 1, 0, 0, 0]' : 0.109395}", "{'[5, 3, 0, 0, 2, 6, 0, 0, 0, 0, 18, 10, 1, 0, 1, 0, 0, 0]' : 0.109031}", "{'[5, 3, 0, 0, 2, 6, 0, 0, 0, 0, 18, 10, 1, 0, 1, 0, 0, 0]' : 0.1092}", "{'[5, 3, 0, 0, 2, 6, 0, 0, 0, 0, 18, 10, 1, 0, 1, 0, 0, 0]' : 0.109316}", "{'[5, 3, 0, 0, 2, 6, 0, 0, 0, 0, 18, 10, 1, 0, 1, 0, 0, 0]' : 0.11076}", "{'[5, 3, 0, 0, 2, 6, 0, 0, 0, 0, 18, 10, 1, 0, 1, 0, 0, 0]' : 0.108984}", "{'[5, 3, 0, 0, 2, 6, 0, 0, 0, 0, 18, 10, 1, 0, 1, 0, 0, 0]' : 0.109217}", "{'[5, 3, 0, 0, 2, 6, 0, 0, 0, 0, 18, 10, 1, 0, 1, 0, 0, 0]' : 0.108771}", "{'[5, 3, 0, 0, 2, 6, 0, 0, 0, 0, 18, 10, 1, 0, 1, 0, 0, 0]' : 0.111156}", "{'[5, 3, 0, 0, 2, 6, 0, 0, 0, 0, 18, 10, 1, 0, 1, 0, 0, 0]' : 0.110813}", "{'[5, 3, 0, 0, 2, 6, 0, 0, 0, 0, 18, 10, 1, 0, 1, 0, 0, 0]' : 0.109377}", "{'[5, 3, 0, 0, 2, 6, 0, 0, 0, 0, 18, 10, 1, 0, 1, 0, 0, 0]' : 0.108683}", "{'[5, 3, 0, 0, 2, 6, 0, 0, 0, 0, 18, 10, 1, 0, 1, 0, 0, 0]' : 0.109174}", "{'[5, 3, 0, 0, 2, 6, 0, 0, 0, 0, 18, 10, 1, 0, 1, 0, 0, 0]' : 0.11227}", "{'[5, 3, 0, 0, 2, 6, 0, 0, 0, 0, 18, 10, 1, 0, 1, 0, 0, 0]' : 0.112531}"]
returning from 'run': {'[5, 3, 0, 0, 2, 6, 0, 0, 0, 0, 18, 10, 1, 0, 1, 0, 0, 0]': ([0.110474, 0.115624, 0.111917, 0.112578, 0.112587, 0.11154, 0.10872, 0.109334, 0.109057, 0.110165, 0.112043, 0.111896, 0.109098, 0.109225, 0.109922, 0.109395, 0.109031, 0.1092, 0.109316, 0.11076, 0.108984, 0.109217, 0.108771, 0.111156, 0.110813, 0.109377, 0.108683, 0.109174, 0.11227, 0.112531], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 3, 0, 0, 2, 6, 0, 0, 0, 0, 18, 10, 1, 0, 1, 0, 0, 0]': ([0.110474, 0.115624, 0.111917, 0.112578, 0.112587, 0.11154, 0.10872, 0.109334, 0.109057, 0.110165, 0.112043, 0.111896, 0.109098, 0.109225, 0.109922, 0.109395, 0.109031, 0.1092, 0.109316, 0.11076, 0.108984, 0.109217, 0.108771, 0.111156, 0.110813, 0.109377, 0.108683, 0.109174, 0.11227, 0.112531], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	28
        Max loop nest depth: 	6
        Additions: 		2007
        Multiplications: 	640
        Divisions: 		0
        Logical: 		0
        Reads: 			3444
        Writes: 		400
        Comparisons:		28
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest20.exe __orio_perftest20.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest20.exe  
Program Test Output: 
{'[2, 1, 1, 2, 3, 5, 0, 0, 13, 6, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.236062}
{'[2, 1, 1, 2, 3, 5, 0, 0, 13, 6, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.235811}
{'[2, 1, 1, 2, 3, 5, 0, 0, 13, 6, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.224284}
{'[2, 1, 1, 2, 3, 5, 0, 0, 13, 6, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.213505}
{'[2, 1, 1, 2, 3, 5, 0, 0, 13, 6, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.210742}
{'[2, 1, 1, 2, 3, 5, 0, 0, 13, 6, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.208112}
{'[2, 1, 1, 2, 3, 5, 0, 0, 13, 6, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.209107}
{'[2, 1, 1, 2, 3, 5, 0, 0, 13, 6, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.20598}
{'[2, 1, 1, 2, 3, 5, 0, 0, 13, 6, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.210488}
{'[2, 1, 1, 2, 3, 5, 0, 0, 13, 6, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.205924}
{'[2, 1, 1, 2, 3, 5, 0, 0, 13, 6, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.212801}
{'[2, 1, 1, 2, 3, 5, 0, 0, 13, 6, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.21397}
{'[2, 1, 1, 2, 3, 5, 0, 0, 13, 6, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.210827}
{'[2, 1, 1, 2, 3, 5, 0, 0, 13, 6, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.212438}
{'[2, 1, 1, 2, 3, 5, 0, 0, 13, 6, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.210003}
{'[2, 1, 1, 2, 3, 5, 0, 0, 13, 6, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.213168}
{'[2, 1, 1, 2, 3, 5, 0, 0, 13, 6, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.210662}
{'[2, 1, 1, 2, 3, 5, 0, 0, 13, 6, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.212911}
{'[2, 1, 1, 2, 3, 5, 0, 0, 13, 6, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.211646}
{'[2, 1, 1, 2, 3, 5, 0, 0, 13, 6, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.211051}
{'[2, 1, 1, 2, 3, 5, 0, 0, 13, 6, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.211182}
{'[2, 1, 1, 2, 3, 5, 0, 0, 13, 6, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.205353}
{'[2, 1, 1, 2, 3, 5, 0, 0, 13, 6, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.207376}
{'[2, 1, 1, 2, 3, 5, 0, 0, 13, 6, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.206879}
{'[2, 1, 1, 2, 3, 5, 0, 0, 13, 6, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.207177}
{'[2, 1, 1, 2, 3, 5, 0, 0, 13, 6, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.207587}
{'[2, 1, 1, 2, 3, 5, 0, 0, 13, 6, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.206477}
{'[2, 1, 1, 2, 3, 5, 0, 0, 13, 6, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.210952}
{'[2, 1, 1, 2, 3, 5, 0, 0, 13, 6, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.205787}
{'[2, 1, 1, 2, 3, 5, 0, 0, 13, 6, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.208197}

out:
 ["{'[2, 1, 1, 2, 3, 5, 0, 0, 13, 6, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.236062}", "{'[2, 1, 1, 2, 3, 5, 0, 0, 13, 6, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.235811}", "{'[2, 1, 1, 2, 3, 5, 0, 0, 13, 6, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.224284}", "{'[2, 1, 1, 2, 3, 5, 0, 0, 13, 6, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.213505}", "{'[2, 1, 1, 2, 3, 5, 0, 0, 13, 6, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.210742}", "{'[2, 1, 1, 2, 3, 5, 0, 0, 13, 6, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.208112}", "{'[2, 1, 1, 2, 3, 5, 0, 0, 13, 6, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.209107}", "{'[2, 1, 1, 2, 3, 5, 0, 0, 13, 6, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.20598}", "{'[2, 1, 1, 2, 3, 5, 0, 0, 13, 6, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.210488}", "{'[2, 1, 1, 2, 3, 5, 0, 0, 13, 6, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.205924}", "{'[2, 1, 1, 2, 3, 5, 0, 0, 13, 6, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.212801}", "{'[2, 1, 1, 2, 3, 5, 0, 0, 13, 6, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.21397}", "{'[2, 1, 1, 2, 3, 5, 0, 0, 13, 6, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.210827}", "{'[2, 1, 1, 2, 3, 5, 0, 0, 13, 6, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.212438}", "{'[2, 1, 1, 2, 3, 5, 0, 0, 13, 6, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.210003}", "{'[2, 1, 1, 2, 3, 5, 0, 0, 13, 6, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.213168}", "{'[2, 1, 1, 2, 3, 5, 0, 0, 13, 6, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.210662}", "{'[2, 1, 1, 2, 3, 5, 0, 0, 13, 6, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.212911}", "{'[2, 1, 1, 2, 3, 5, 0, 0, 13, 6, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.211646}", "{'[2, 1, 1, 2, 3, 5, 0, 0, 13, 6, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.211051}", "{'[2, 1, 1, 2, 3, 5, 0, 0, 13, 6, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.211182}", "{'[2, 1, 1, 2, 3, 5, 0, 0, 13, 6, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.205353}", "{'[2, 1, 1, 2, 3, 5, 0, 0, 13, 6, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.207376}", "{'[2, 1, 1, 2, 3, 5, 0, 0, 13, 6, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.206879}", "{'[2, 1, 1, 2, 3, 5, 0, 0, 13, 6, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.207177}", "{'[2, 1, 1, 2, 3, 5, 0, 0, 13, 6, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.207587}", "{'[2, 1, 1, 2, 3, 5, 0, 0, 13, 6, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.206477}", "{'[2, 1, 1, 2, 3, 5, 0, 0, 13, 6, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.210952}", "{'[2, 1, 1, 2, 3, 5, 0, 0, 13, 6, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.205787}", "{'[2, 1, 1, 2, 3, 5, 0, 0, 13, 6, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.208197}"]
returning from 'run': {'[2, 1, 1, 2, 3, 5, 0, 0, 13, 6, 0, 5, 2, 0, 0, 0, 0, 0]': ([0.236062, 0.235811, 0.224284, 0.213505, 0.210742, 0.208112, 0.209107, 0.20598, 0.210488, 0.205924, 0.212801, 0.21397, 0.210827, 0.212438, 0.210003, 0.213168, 0.210662, 0.212911, 0.211646, 0.211051, 0.211182, 0.205353, 0.207376, 0.206879, 0.207177, 0.207587, 0.206477, 0.210952, 0.205787, 0.208197], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 1, 1, 2, 3, 5, 0, 0, 13, 6, 0, 5, 2, 0, 0, 0, 0, 0]': ([0.236062, 0.235811, 0.224284, 0.213505, 0.210742, 0.208112, 0.209107, 0.20598, 0.210488, 0.205924, 0.212801, 0.21397, 0.210827, 0.212438, 0.210003, 0.213168, 0.210662, 0.212911, 0.211646, 0.211051, 0.211182, 0.205353, 0.207376, 0.206879, 0.207177, 0.207587, 0.206477, 0.210952, 0.205787, 0.208197], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	164
        Max loop nest depth: 	6
        Additions: 		7974
        Multiplications: 	2760
        Divisions: 		0
        Logical: 		0
        Reads: 			15144
        Writes: 		2766
        Comparisons:		164
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest21.exe __orio_perftest21.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest21.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest21.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest21.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest21.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		238
        Multiplications: 	70
        Divisions: 		0
        Logical: 		0
        Reads: 			534
        Writes: 		97
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest22.exe __orio_perftest22.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest22.exe  
Program Test Output: 
{'[2, 0, 6, 6, 6, 5, 0, 1, 29, 0, 17, 10, 0, 1, 1, 0, 0, 0]' : 0.292688}
{'[2, 0, 6, 6, 6, 5, 0, 1, 29, 0, 17, 10, 0, 1, 1, 0, 0, 0]' : 0.292463}
{'[2, 0, 6, 6, 6, 5, 0, 1, 29, 0, 17, 10, 0, 1, 1, 0, 0, 0]' : 0.285023}
{'[2, 0, 6, 6, 6, 5, 0, 1, 29, 0, 17, 10, 0, 1, 1, 0, 0, 0]' : 0.260503}
{'[2, 0, 6, 6, 6, 5, 0, 1, 29, 0, 17, 10, 0, 1, 1, 0, 0, 0]' : 0.260508}
{'[2, 0, 6, 6, 6, 5, 0, 1, 29, 0, 17, 10, 0, 1, 1, 0, 0, 0]' : 0.260624}
{'[2, 0, 6, 6, 6, 5, 0, 1, 29, 0, 17, 10, 0, 1, 1, 0, 0, 0]' : 0.256898}
{'[2, 0, 6, 6, 6, 5, 0, 1, 29, 0, 17, 10, 0, 1, 1, 0, 0, 0]' : 0.254377}
{'[2, 0, 6, 6, 6, 5, 0, 1, 29, 0, 17, 10, 0, 1, 1, 0, 0, 0]' : 0.258337}
{'[2, 0, 6, 6, 6, 5, 0, 1, 29, 0, 17, 10, 0, 1, 1, 0, 0, 0]' : 0.260507}
{'[2, 0, 6, 6, 6, 5, 0, 1, 29, 0, 17, 10, 0, 1, 1, 0, 0, 0]' : 0.257412}
{'[2, 0, 6, 6, 6, 5, 0, 1, 29, 0, 17, 10, 0, 1, 1, 0, 0, 0]' : 0.253805}
{'[2, 0, 6, 6, 6, 5, 0, 1, 29, 0, 17, 10, 0, 1, 1, 0, 0, 0]' : 0.25904}
{'[2, 0, 6, 6, 6, 5, 0, 1, 29, 0, 17, 10, 0, 1, 1, 0, 0, 0]' : 0.258026}
{'[2, 0, 6, 6, 6, 5, 0, 1, 29, 0, 17, 10, 0, 1, 1, 0, 0, 0]' : 0.257944}
{'[2, 0, 6, 6, 6, 5, 0, 1, 29, 0, 17, 10, 0, 1, 1, 0, 0, 0]' : 0.254088}
{'[2, 0, 6, 6, 6, 5, 0, 1, 29, 0, 17, 10, 0, 1, 1, 0, 0, 0]' : 0.259839}
{'[2, 0, 6, 6, 6, 5, 0, 1, 29, 0, 17, 10, 0, 1, 1, 0, 0, 0]' : 0.26079}
{'[2, 0, 6, 6, 6, 5, 0, 1, 29, 0, 17, 10, 0, 1, 1, 0, 0, 0]' : 0.260543}
{'[2, 0, 6, 6, 6, 5, 0, 1, 29, 0, 17, 10, 0, 1, 1, 0, 0, 0]' : 0.2548}
{'[2, 0, 6, 6, 6, 5, 0, 1, 29, 0, 17, 10, 0, 1, 1, 0, 0, 0]' : 0.260546}
{'[2, 0, 6, 6, 6, 5, 0, 1, 29, 0, 17, 10, 0, 1, 1, 0, 0, 0]' : 0.260534}
{'[2, 0, 6, 6, 6, 5, 0, 1, 29, 0, 17, 10, 0, 1, 1, 0, 0, 0]' : 0.260494}
{'[2, 0, 6, 6, 6, 5, 0, 1, 29, 0, 17, 10, 0, 1, 1, 0, 0, 0]' : 0.254692}
{'[2, 0, 6, 6, 6, 5, 0, 1, 29, 0, 17, 10, 0, 1, 1, 0, 0, 0]' : 0.260516}
{'[2, 0, 6, 6, 6, 5, 0, 1, 29, 0, 17, 10, 0, 1, 1, 0, 0, 0]' : 0.258042}
{'[2, 0, 6, 6, 6, 5, 0, 1, 29, 0, 17, 10, 0, 1, 1, 0, 0, 0]' : 0.256509}
{'[2, 0, 6, 6, 6, 5, 0, 1, 29, 0, 17, 10, 0, 1, 1, 0, 0, 0]' : 0.255745}
{'[2, 0, 6, 6, 6, 5, 0, 1, 29, 0, 17, 10, 0, 1, 1, 0, 0, 0]' : 0.253761}
{'[2, 0, 6, 6, 6, 5, 0, 1, 29, 0, 17, 10, 0, 1, 1, 0, 0, 0]' : 0.256235}

out:
 ["{'[2, 0, 6, 6, 6, 5, 0, 1, 29, 0, 17, 10, 0, 1, 1, 0, 0, 0]' : 0.292688}", "{'[2, 0, 6, 6, 6, 5, 0, 1, 29, 0, 17, 10, 0, 1, 1, 0, 0, 0]' : 0.292463}", "{'[2, 0, 6, 6, 6, 5, 0, 1, 29, 0, 17, 10, 0, 1, 1, 0, 0, 0]' : 0.285023}", "{'[2, 0, 6, 6, 6, 5, 0, 1, 29, 0, 17, 10, 0, 1, 1, 0, 0, 0]' : 0.260503}", "{'[2, 0, 6, 6, 6, 5, 0, 1, 29, 0, 17, 10, 0, 1, 1, 0, 0, 0]' : 0.260508}", "{'[2, 0, 6, 6, 6, 5, 0, 1, 29, 0, 17, 10, 0, 1, 1, 0, 0, 0]' : 0.260624}", "{'[2, 0, 6, 6, 6, 5, 0, 1, 29, 0, 17, 10, 0, 1, 1, 0, 0, 0]' : 0.256898}", "{'[2, 0, 6, 6, 6, 5, 0, 1, 29, 0, 17, 10, 0, 1, 1, 0, 0, 0]' : 0.254377}", "{'[2, 0, 6, 6, 6, 5, 0, 1, 29, 0, 17, 10, 0, 1, 1, 0, 0, 0]' : 0.258337}", "{'[2, 0, 6, 6, 6, 5, 0, 1, 29, 0, 17, 10, 0, 1, 1, 0, 0, 0]' : 0.260507}", "{'[2, 0, 6, 6, 6, 5, 0, 1, 29, 0, 17, 10, 0, 1, 1, 0, 0, 0]' : 0.257412}", "{'[2, 0, 6, 6, 6, 5, 0, 1, 29, 0, 17, 10, 0, 1, 1, 0, 0, 0]' : 0.253805}", "{'[2, 0, 6, 6, 6, 5, 0, 1, 29, 0, 17, 10, 0, 1, 1, 0, 0, 0]' : 0.25904}", "{'[2, 0, 6, 6, 6, 5, 0, 1, 29, 0, 17, 10, 0, 1, 1, 0, 0, 0]' : 0.258026}", "{'[2, 0, 6, 6, 6, 5, 0, 1, 29, 0, 17, 10, 0, 1, 1, 0, 0, 0]' : 0.257944}", "{'[2, 0, 6, 6, 6, 5, 0, 1, 29, 0, 17, 10, 0, 1, 1, 0, 0, 0]' : 0.254088}", "{'[2, 0, 6, 6, 6, 5, 0, 1, 29, 0, 17, 10, 0, 1, 1, 0, 0, 0]' : 0.259839}", "{'[2, 0, 6, 6, 6, 5, 0, 1, 29, 0, 17, 10, 0, 1, 1, 0, 0, 0]' : 0.26079}", "{'[2, 0, 6, 6, 6, 5, 0, 1, 29, 0, 17, 10, 0, 1, 1, 0, 0, 0]' : 0.260543}", "{'[2, 0, 6, 6, 6, 5, 0, 1, 29, 0, 17, 10, 0, 1, 1, 0, 0, 0]' : 0.2548}", "{'[2, 0, 6, 6, 6, 5, 0, 1, 29, 0, 17, 10, 0, 1, 1, 0, 0, 0]' : 0.260546}", "{'[2, 0, 6, 6, 6, 5, 0, 1, 29, 0, 17, 10, 0, 1, 1, 0, 0, 0]' : 0.260534}", "{'[2, 0, 6, 6, 6, 5, 0, 1, 29, 0, 17, 10, 0, 1, 1, 0, 0, 0]' : 0.260494}", "{'[2, 0, 6, 6, 6, 5, 0, 1, 29, 0, 17, 10, 0, 1, 1, 0, 0, 0]' : 0.254692}", "{'[2, 0, 6, 6, 6, 5, 0, 1, 29, 0, 17, 10, 0, 1, 1, 0, 0, 0]' : 0.260516}", "{'[2, 0, 6, 6, 6, 5, 0, 1, 29, 0, 17, 10, 0, 1, 1, 0, 0, 0]' : 0.258042}", "{'[2, 0, 6, 6, 6, 5, 0, 1, 29, 0, 17, 10, 0, 1, 1, 0, 0, 0]' : 0.256509}", "{'[2, 0, 6, 6, 6, 5, 0, 1, 29, 0, 17, 10, 0, 1, 1, 0, 0, 0]' : 0.255745}", "{'[2, 0, 6, 6, 6, 5, 0, 1, 29, 0, 17, 10, 0, 1, 1, 0, 0, 0]' : 0.253761}", "{'[2, 0, 6, 6, 6, 5, 0, 1, 29, 0, 17, 10, 0, 1, 1, 0, 0, 0]' : 0.256235}"]
returning from 'run': {'[2, 0, 6, 6, 6, 5, 0, 1, 29, 0, 17, 10, 0, 1, 1, 0, 0, 0]': ([0.292688, 0.292463, 0.285023, 0.260503, 0.260508, 0.260624, 0.256898, 0.254377, 0.258337, 0.260507, 0.257412, 0.253805, 0.25904, 0.258026, 0.257944, 0.254088, 0.259839, 0.26079, 0.260543, 0.2548, 0.260546, 0.260534, 0.260494, 0.254692, 0.260516, 0.258042, 0.256509, 0.255745, 0.253761, 0.256235], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 0, 6, 6, 6, 5, 0, 1, 29, 0, 17, 10, 0, 1, 1, 0, 0, 0]': ([0.292688, 0.292463, 0.285023, 0.260503, 0.260508, 0.260624, 0.256898, 0.254377, 0.258337, 0.260507, 0.257412, 0.253805, 0.25904, 0.258026, 0.257944, 0.254088, 0.259839, 0.26079, 0.260543, 0.2548, 0.260546, 0.260534, 0.260494, 0.254692, 0.260516, 0.258042, 0.256509, 0.255745, 0.253761, 0.256235], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		912
        Multiplications: 	432
        Divisions: 		0
        Logical: 		0
        Reads: 			1872
        Writes: 		336
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest23.exe __orio_perftest23.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest23.exe  
Program Test Output: 
{'[2, 0, 0, 1, 0, 0, 1, 0, 2, 0, 6, 14, 1, 1, 0, 1, 0, 0]' : 0.103221}
{'[2, 0, 0, 1, 0, 0, 1, 0, 2, 0, 6, 14, 1, 1, 0, 1, 0, 0]' : 0.103167}
{'[2, 0, 0, 1, 0, 0, 1, 0, 2, 0, 6, 14, 1, 1, 0, 1, 0, 0]' : 0.098932}
{'[2, 0, 0, 1, 0, 0, 1, 0, 2, 0, 6, 14, 1, 1, 0, 1, 0, 0]' : 0.0902569}
{'[2, 0, 0, 1, 0, 0, 1, 0, 2, 0, 6, 14, 1, 1, 0, 1, 0, 0]' : 0.0903418}
{'[2, 0, 0, 1, 0, 0, 1, 0, 2, 0, 6, 14, 1, 1, 0, 1, 0, 0]' : 0.0903289}
{'[2, 0, 0, 1, 0, 0, 1, 0, 2, 0, 6, 14, 1, 1, 0, 1, 0, 0]' : 0.090394}
{'[2, 0, 0, 1, 0, 0, 1, 0, 2, 0, 6, 14, 1, 1, 0, 1, 0, 0]' : 0.0903518}
{'[2, 0, 0, 1, 0, 0, 1, 0, 2, 0, 6, 14, 1, 1, 0, 1, 0, 0]' : 0.090353}
{'[2, 0, 0, 1, 0, 0, 1, 0, 2, 0, 6, 14, 1, 1, 0, 1, 0, 0]' : 0.0903919}
{'[2, 0, 0, 1, 0, 0, 1, 0, 2, 0, 6, 14, 1, 1, 0, 1, 0, 0]' : 0.0903878}
{'[2, 0, 0, 1, 0, 0, 1, 0, 2, 0, 6, 14, 1, 1, 0, 1, 0, 0]' : 0.090344}
{'[2, 0, 0, 1, 0, 0, 1, 0, 2, 0, 6, 14, 1, 1, 0, 1, 0, 0]' : 0.0904629}
{'[2, 0, 0, 1, 0, 0, 1, 0, 2, 0, 6, 14, 1, 1, 0, 1, 0, 0]' : 0.0903699}
{'[2, 0, 0, 1, 0, 0, 1, 0, 2, 0, 6, 14, 1, 1, 0, 1, 0, 0]' : 0.0904839}
{'[2, 0, 0, 1, 0, 0, 1, 0, 2, 0, 6, 14, 1, 1, 0, 1, 0, 0]' : 0.090307}
{'[2, 0, 0, 1, 0, 0, 1, 0, 2, 0, 6, 14, 1, 1, 0, 1, 0, 0]' : 0.0903609}
{'[2, 0, 0, 1, 0, 0, 1, 0, 2, 0, 6, 14, 1, 1, 0, 1, 0, 0]' : 0.090368}
{'[2, 0, 0, 1, 0, 0, 1, 0, 2, 0, 6, 14, 1, 1, 0, 1, 0, 0]' : 0.0903859}
{'[2, 0, 0, 1, 0, 0, 1, 0, 2, 0, 6, 14, 1, 1, 0, 1, 0, 0]' : 0.0903599}
{'[2, 0, 0, 1, 0, 0, 1, 0, 2, 0, 6, 14, 1, 1, 0, 1, 0, 0]' : 0.0903778}
{'[2, 0, 0, 1, 0, 0, 1, 0, 2, 0, 6, 14, 1, 1, 0, 1, 0, 0]' : 0.0903571}
{'[2, 0, 0, 1, 0, 0, 1, 0, 2, 0, 6, 14, 1, 1, 0, 1, 0, 0]' : 0.0903499}
{'[2, 0, 0, 1, 0, 0, 1, 0, 2, 0, 6, 14, 1, 1, 0, 1, 0, 0]' : 0.090538}
{'[2, 0, 0, 1, 0, 0, 1, 0, 2, 0, 6, 14, 1, 1, 0, 1, 0, 0]' : 0.0903001}
{'[2, 0, 0, 1, 0, 0, 1, 0, 2, 0, 6, 14, 1, 1, 0, 1, 0, 0]' : 0.0904822}
{'[2, 0, 0, 1, 0, 0, 1, 0, 2, 0, 6, 14, 1, 1, 0, 1, 0, 0]' : 0.090399}
{'[2, 0, 0, 1, 0, 0, 1, 0, 2, 0, 6, 14, 1, 1, 0, 1, 0, 0]' : 0.0904479}
{'[2, 0, 0, 1, 0, 0, 1, 0, 2, 0, 6, 14, 1, 1, 0, 1, 0, 0]' : 0.0903819}
{'[2, 0, 0, 1, 0, 0, 1, 0, 2, 0, 6, 14, 1, 1, 0, 1, 0, 0]' : 0.0904181}

out:
 ["{'[2, 0, 0, 1, 0, 0, 1, 0, 2, 0, 6, 14, 1, 1, 0, 1, 0, 0]' : 0.103221}", "{'[2, 0, 0, 1, 0, 0, 1, 0, 2, 0, 6, 14, 1, 1, 0, 1, 0, 0]' : 0.103167}", "{'[2, 0, 0, 1, 0, 0, 1, 0, 2, 0, 6, 14, 1, 1, 0, 1, 0, 0]' : 0.098932}", "{'[2, 0, 0, 1, 0, 0, 1, 0, 2, 0, 6, 14, 1, 1, 0, 1, 0, 0]' : 0.0902569}", "{'[2, 0, 0, 1, 0, 0, 1, 0, 2, 0, 6, 14, 1, 1, 0, 1, 0, 0]' : 0.0903418}", "{'[2, 0, 0, 1, 0, 0, 1, 0, 2, 0, 6, 14, 1, 1, 0, 1, 0, 0]' : 0.0903289}", "{'[2, 0, 0, 1, 0, 0, 1, 0, 2, 0, 6, 14, 1, 1, 0, 1, 0, 0]' : 0.090394}", "{'[2, 0, 0, 1, 0, 0, 1, 0, 2, 0, 6, 14, 1, 1, 0, 1, 0, 0]' : 0.0903518}", "{'[2, 0, 0, 1, 0, 0, 1, 0, 2, 0, 6, 14, 1, 1, 0, 1, 0, 0]' : 0.090353}", "{'[2, 0, 0, 1, 0, 0, 1, 0, 2, 0, 6, 14, 1, 1, 0, 1, 0, 0]' : 0.0903919}", "{'[2, 0, 0, 1, 0, 0, 1, 0, 2, 0, 6, 14, 1, 1, 0, 1, 0, 0]' : 0.0903878}", "{'[2, 0, 0, 1, 0, 0, 1, 0, 2, 0, 6, 14, 1, 1, 0, 1, 0, 0]' : 0.090344}", "{'[2, 0, 0, 1, 0, 0, 1, 0, 2, 0, 6, 14, 1, 1, 0, 1, 0, 0]' : 0.0904629}", "{'[2, 0, 0, 1, 0, 0, 1, 0, 2, 0, 6, 14, 1, 1, 0, 1, 0, 0]' : 0.0903699}", "{'[2, 0, 0, 1, 0, 0, 1, 0, 2, 0, 6, 14, 1, 1, 0, 1, 0, 0]' : 0.0904839}", "{'[2, 0, 0, 1, 0, 0, 1, 0, 2, 0, 6, 14, 1, 1, 0, 1, 0, 0]' : 0.090307}", "{'[2, 0, 0, 1, 0, 0, 1, 0, 2, 0, 6, 14, 1, 1, 0, 1, 0, 0]' : 0.0903609}", "{'[2, 0, 0, 1, 0, 0, 1, 0, 2, 0, 6, 14, 1, 1, 0, 1, 0, 0]' : 0.090368}", "{'[2, 0, 0, 1, 0, 0, 1, 0, 2, 0, 6, 14, 1, 1, 0, 1, 0, 0]' : 0.0903859}", "{'[2, 0, 0, 1, 0, 0, 1, 0, 2, 0, 6, 14, 1, 1, 0, 1, 0, 0]' : 0.0903599}", "{'[2, 0, 0, 1, 0, 0, 1, 0, 2, 0, 6, 14, 1, 1, 0, 1, 0, 0]' : 0.0903778}", "{'[2, 0, 0, 1, 0, 0, 1, 0, 2, 0, 6, 14, 1, 1, 0, 1, 0, 0]' : 0.0903571}", "{'[2, 0, 0, 1, 0, 0, 1, 0, 2, 0, 6, 14, 1, 1, 0, 1, 0, 0]' : 0.0903499}", "{'[2, 0, 0, 1, 0, 0, 1, 0, 2, 0, 6, 14, 1, 1, 0, 1, 0, 0]' : 0.090538}", "{'[2, 0, 0, 1, 0, 0, 1, 0, 2, 0, 6, 14, 1, 1, 0, 1, 0, 0]' : 0.0903001}", "{'[2, 0, 0, 1, 0, 0, 1, 0, 2, 0, 6, 14, 1, 1, 0, 1, 0, 0]' : 0.0904822}", "{'[2, 0, 0, 1, 0, 0, 1, 0, 2, 0, 6, 14, 1, 1, 0, 1, 0, 0]' : 0.090399}", "{'[2, 0, 0, 1, 0, 0, 1, 0, 2, 0, 6, 14, 1, 1, 0, 1, 0, 0]' : 0.0904479}", "{'[2, 0, 0, 1, 0, 0, 1, 0, 2, 0, 6, 14, 1, 1, 0, 1, 0, 0]' : 0.0903819}", "{'[2, 0, 0, 1, 0, 0, 1, 0, 2, 0, 6, 14, 1, 1, 0, 1, 0, 0]' : 0.0904181}"]
returning from 'run': {'[2, 0, 0, 1, 0, 0, 1, 0, 2, 0, 6, 14, 1, 1, 0, 1, 0, 0]': ([0.103221, 0.103167, 0.098932, 0.0902569, 0.0903418, 0.0903289, 0.090394, 0.0903518, 0.090353, 0.0903919, 0.0903878, 0.090344, 0.0904629, 0.0903699, 0.0904839, 0.090307, 0.0903609, 0.090368, 0.0903859, 0.0903599, 0.0903778, 0.0903571, 0.0903499, 0.090538, 0.0903001, 0.0904822, 0.090399, 0.0904479, 0.0903819, 0.0904181], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 0, 0, 1, 0, 0, 1, 0, 2, 0, 6, 14, 1, 1, 0, 1, 0, 0]': ([0.103221, 0.103167, 0.098932, 0.0902569, 0.0903418, 0.0903289, 0.090394, 0.0903518, 0.090353, 0.0903919, 0.0903878, 0.090344, 0.0904629, 0.0903699, 0.0904839, 0.090307, 0.0903609, 0.090368, 0.0903859, 0.0903599, 0.0903778, 0.0903571, 0.0903499, 0.090538, 0.0903001, 0.0904822, 0.090399, 0.0904479, 0.0903819, 0.0904181], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	23
        Max loop nest depth: 	5
        Additions: 		602
        Multiplications: 	204
        Divisions: 		0
        Logical: 		0
        Reads: 			1279
        Writes: 		189
        Comparisons:		23
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest24.exe __orio_perftest24.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest24.exe  
Program Test Output: 
{'[2, 4, 0, 0, 3, 1, 0, 1, 21, 1, 0, 0, 0, 2, 0, 0, 1, 1]' : 0.20004}
{'[2, 4, 0, 0, 3, 1, 0, 1, 21, 1, 0, 0, 0, 2, 0, 0, 1, 1]' : 0.200546}
{'[2, 4, 0, 0, 3, 1, 0, 1, 21, 1, 0, 0, 0, 2, 0, 0, 1, 1]' : 0.190335}
{'[2, 4, 0, 0, 3, 1, 0, 1, 21, 1, 0, 0, 0, 2, 0, 0, 1, 1]' : 0.177166}
{'[2, 4, 0, 0, 3, 1, 0, 1, 21, 1, 0, 0, 0, 2, 0, 0, 1, 1]' : 0.177686}
{'[2, 4, 0, 0, 3, 1, 0, 1, 21, 1, 0, 0, 0, 2, 0, 0, 1, 1]' : 0.174624}
{'[2, 4, 0, 0, 3, 1, 0, 1, 21, 1, 0, 0, 0, 2, 0, 0, 1, 1]' : 0.173755}
{'[2, 4, 0, 0, 3, 1, 0, 1, 21, 1, 0, 0, 0, 2, 0, 0, 1, 1]' : 0.177503}
{'[2, 4, 0, 0, 3, 1, 0, 1, 21, 1, 0, 0, 0, 2, 0, 0, 1, 1]' : 0.177456}
{'[2, 4, 0, 0, 3, 1, 0, 1, 21, 1, 0, 0, 0, 2, 0, 0, 1, 1]' : 0.17705}
{'[2, 4, 0, 0, 3, 1, 0, 1, 21, 1, 0, 0, 0, 2, 0, 0, 1, 1]' : 0.176816}
{'[2, 4, 0, 0, 3, 1, 0, 1, 21, 1, 0, 0, 0, 2, 0, 0, 1, 1]' : 0.17504}
{'[2, 4, 0, 0, 3, 1, 0, 1, 21, 1, 0, 0, 0, 2, 0, 0, 1, 1]' : 0.176526}
{'[2, 4, 0, 0, 3, 1, 0, 1, 21, 1, 0, 0, 0, 2, 0, 0, 1, 1]' : 0.177503}
{'[2, 4, 0, 0, 3, 1, 0, 1, 21, 1, 0, 0, 0, 2, 0, 0, 1, 1]' : 0.177405}
{'[2, 4, 0, 0, 3, 1, 0, 1, 21, 1, 0, 0, 0, 2, 0, 0, 1, 1]' : 0.177093}
{'[2, 4, 0, 0, 3, 1, 0, 1, 21, 1, 0, 0, 0, 2, 0, 0, 1, 1]' : 0.176773}
{'[2, 4, 0, 0, 3, 1, 0, 1, 21, 1, 0, 0, 0, 2, 0, 0, 1, 1]' : 0.176353}
{'[2, 4, 0, 0, 3, 1, 0, 1, 21, 1, 0, 0, 0, 2, 0, 0, 1, 1]' : 0.174077}
{'[2, 4, 0, 0, 3, 1, 0, 1, 21, 1, 0, 0, 0, 2, 0, 0, 1, 1]' : 0.171368}
{'[2, 4, 0, 0, 3, 1, 0, 1, 21, 1, 0, 0, 0, 2, 0, 0, 1, 1]' : 0.172329}
{'[2, 4, 0, 0, 3, 1, 0, 1, 21, 1, 0, 0, 0, 2, 0, 0, 1, 1]' : 0.17279}
{'[2, 4, 0, 0, 3, 1, 0, 1, 21, 1, 0, 0, 0, 2, 0, 0, 1, 1]' : 0.172844}
{'[2, 4, 0, 0, 3, 1, 0, 1, 21, 1, 0, 0, 0, 2, 0, 0, 1, 1]' : 0.174203}
{'[2, 4, 0, 0, 3, 1, 0, 1, 21, 1, 0, 0, 0, 2, 0, 0, 1, 1]' : 0.17371}
{'[2, 4, 0, 0, 3, 1, 0, 1, 21, 1, 0, 0, 0, 2, 0, 0, 1, 1]' : 0.17237}
{'[2, 4, 0, 0, 3, 1, 0, 1, 21, 1, 0, 0, 0, 2, 0, 0, 1, 1]' : 0.173517}
{'[2, 4, 0, 0, 3, 1, 0, 1, 21, 1, 0, 0, 0, 2, 0, 0, 1, 1]' : 0.176835}
{'[2, 4, 0, 0, 3, 1, 0, 1, 21, 1, 0, 0, 0, 2, 0, 0, 1, 1]' : 0.176762}
{'[2, 4, 0, 0, 3, 1, 0, 1, 21, 1, 0, 0, 0, 2, 0, 0, 1, 1]' : 0.177569}

out:
 ["{'[2, 4, 0, 0, 3, 1, 0, 1, 21, 1, 0, 0, 0, 2, 0, 0, 1, 1]' : 0.20004}", "{'[2, 4, 0, 0, 3, 1, 0, 1, 21, 1, 0, 0, 0, 2, 0, 0, 1, 1]' : 0.200546}", "{'[2, 4, 0, 0, 3, 1, 0, 1, 21, 1, 0, 0, 0, 2, 0, 0, 1, 1]' : 0.190335}", "{'[2, 4, 0, 0, 3, 1, 0, 1, 21, 1, 0, 0, 0, 2, 0, 0, 1, 1]' : 0.177166}", "{'[2, 4, 0, 0, 3, 1, 0, 1, 21, 1, 0, 0, 0, 2, 0, 0, 1, 1]' : 0.177686}", "{'[2, 4, 0, 0, 3, 1, 0, 1, 21, 1, 0, 0, 0, 2, 0, 0, 1, 1]' : 0.174624}", "{'[2, 4, 0, 0, 3, 1, 0, 1, 21, 1, 0, 0, 0, 2, 0, 0, 1, 1]' : 0.173755}", "{'[2, 4, 0, 0, 3, 1, 0, 1, 21, 1, 0, 0, 0, 2, 0, 0, 1, 1]' : 0.177503}", "{'[2, 4, 0, 0, 3, 1, 0, 1, 21, 1, 0, 0, 0, 2, 0, 0, 1, 1]' : 0.177456}", "{'[2, 4, 0, 0, 3, 1, 0, 1, 21, 1, 0, 0, 0, 2, 0, 0, 1, 1]' : 0.17705}", "{'[2, 4, 0, 0, 3, 1, 0, 1, 21, 1, 0, 0, 0, 2, 0, 0, 1, 1]' : 0.176816}", "{'[2, 4, 0, 0, 3, 1, 0, 1, 21, 1, 0, 0, 0, 2, 0, 0, 1, 1]' : 0.17504}", "{'[2, 4, 0, 0, 3, 1, 0, 1, 21, 1, 0, 0, 0, 2, 0, 0, 1, 1]' : 0.176526}", "{'[2, 4, 0, 0, 3, 1, 0, 1, 21, 1, 0, 0, 0, 2, 0, 0, 1, 1]' : 0.177503}", "{'[2, 4, 0, 0, 3, 1, 0, 1, 21, 1, 0, 0, 0, 2, 0, 0, 1, 1]' : 0.177405}", "{'[2, 4, 0, 0, 3, 1, 0, 1, 21, 1, 0, 0, 0, 2, 0, 0, 1, 1]' : 0.177093}", "{'[2, 4, 0, 0, 3, 1, 0, 1, 21, 1, 0, 0, 0, 2, 0, 0, 1, 1]' : 0.176773}", "{'[2, 4, 0, 0, 3, 1, 0, 1, 21, 1, 0, 0, 0, 2, 0, 0, 1, 1]' : 0.176353}", "{'[2, 4, 0, 0, 3, 1, 0, 1, 21, 1, 0, 0, 0, 2, 0, 0, 1, 1]' : 0.174077}", "{'[2, 4, 0, 0, 3, 1, 0, 1, 21, 1, 0, 0, 0, 2, 0, 0, 1, 1]' : 0.171368}", "{'[2, 4, 0, 0, 3, 1, 0, 1, 21, 1, 0, 0, 0, 2, 0, 0, 1, 1]' : 0.172329}", "{'[2, 4, 0, 0, 3, 1, 0, 1, 21, 1, 0, 0, 0, 2, 0, 0, 1, 1]' : 0.17279}", "{'[2, 4, 0, 0, 3, 1, 0, 1, 21, 1, 0, 0, 0, 2, 0, 0, 1, 1]' : 0.172844}", "{'[2, 4, 0, 0, 3, 1, 0, 1, 21, 1, 0, 0, 0, 2, 0, 0, 1, 1]' : 0.174203}", "{'[2, 4, 0, 0, 3, 1, 0, 1, 21, 1, 0, 0, 0, 2, 0, 0, 1, 1]' : 0.17371}", "{'[2, 4, 0, 0, 3, 1, 0, 1, 21, 1, 0, 0, 0, 2, 0, 0, 1, 1]' : 0.17237}", "{'[2, 4, 0, 0, 3, 1, 0, 1, 21, 1, 0, 0, 0, 2, 0, 0, 1, 1]' : 0.173517}", "{'[2, 4, 0, 0, 3, 1, 0, 1, 21, 1, 0, 0, 0, 2, 0, 0, 1, 1]' : 0.176835}", "{'[2, 4, 0, 0, 3, 1, 0, 1, 21, 1, 0, 0, 0, 2, 0, 0, 1, 1]' : 0.176762}", "{'[2, 4, 0, 0, 3, 1, 0, 1, 21, 1, 0, 0, 0, 2, 0, 0, 1, 1]' : 0.177569}"]
returning from 'run': {'[2, 4, 0, 0, 3, 1, 0, 1, 21, 1, 0, 0, 0, 2, 0, 0, 1, 1]': ([0.20004, 0.200546, 0.190335, 0.177166, 0.177686, 0.174624, 0.173755, 0.177503, 0.177456, 0.17705, 0.176816, 0.17504, 0.176526, 0.177503, 0.177405, 0.177093, 0.176773, 0.176353, 0.174077, 0.171368, 0.172329, 0.17279, 0.172844, 0.174203, 0.17371, 0.17237, 0.173517, 0.176835, 0.176762, 0.177569], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 4, 0, 0, 3, 1, 0, 1, 21, 1, 0, 0, 0, 2, 0, 0, 1, 1]': ([0.20004, 0.200546, 0.190335, 0.177166, 0.177686, 0.174624, 0.173755, 0.177503, 0.177456, 0.17705, 0.176816, 0.17504, 0.176526, 0.177503, 0.177405, 0.177093, 0.176773, 0.176353, 0.174077, 0.171368, 0.172329, 0.17279, 0.172844, 0.174203, 0.17371, 0.17237, 0.173517, 0.176835, 0.176762, 0.177569], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	43
        Max loop nest depth: 	4
        Additions: 		1284
        Multiplications: 	540
        Divisions: 		0
        Logical: 		0
        Reads: 			2679
        Writes: 		526
        Comparisons:		43
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest25.exe __orio_perftest25.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest25.exe  
Program Test Output: 
{'[6, 2, 1, 0, 0, 0, 1, 0, 29, 28, 29, 0, 0, 1, 0, 1, 1, 1]' : 0.215445}
{'[6, 2, 1, 0, 0, 0, 1, 0, 29, 28, 29, 0, 0, 1, 0, 1, 1, 1]' : 0.213276}
{'[6, 2, 1, 0, 0, 0, 1, 0, 29, 28, 29, 0, 0, 1, 0, 1, 1, 1]' : 0.21389}
{'[6, 2, 1, 0, 0, 0, 1, 0, 29, 28, 29, 0, 0, 1, 0, 1, 1, 1]' : 0.210873}
{'[6, 2, 1, 0, 0, 0, 1, 0, 29, 28, 29, 0, 0, 1, 0, 1, 1, 1]' : 0.21028}
{'[6, 2, 1, 0, 0, 0, 1, 0, 29, 28, 29, 0, 0, 1, 0, 1, 1, 1]' : 0.216118}
{'[6, 2, 1, 0, 0, 0, 1, 0, 29, 28, 29, 0, 0, 1, 0, 1, 1, 1]' : 0.215762}
{'[6, 2, 1, 0, 0, 0, 1, 0, 29, 28, 29, 0, 0, 1, 0, 1, 1, 1]' : 0.216952}
{'[6, 2, 1, 0, 0, 0, 1, 0, 29, 28, 29, 0, 0, 1, 0, 1, 1, 1]' : 0.212446}
{'[6, 2, 1, 0, 0, 0, 1, 0, 29, 28, 29, 0, 0, 1, 0, 1, 1, 1]' : 0.213466}
{'[6, 2, 1, 0, 0, 0, 1, 0, 29, 28, 29, 0, 0, 1, 0, 1, 1, 1]' : 0.21613}
{'[6, 2, 1, 0, 0, 0, 1, 0, 29, 28, 29, 0, 0, 1, 0, 1, 1, 1]' : 0.218362}
{'[6, 2, 1, 0, 0, 0, 1, 0, 29, 28, 29, 0, 0, 1, 0, 1, 1, 1]' : 0.215295}
{'[6, 2, 1, 0, 0, 0, 1, 0, 29, 28, 29, 0, 0, 1, 0, 1, 1, 1]' : 0.210448}
{'[6, 2, 1, 0, 0, 0, 1, 0, 29, 28, 29, 0, 0, 1, 0, 1, 1, 1]' : 0.21371}
{'[6, 2, 1, 0, 0, 0, 1, 0, 29, 28, 29, 0, 0, 1, 0, 1, 1, 1]' : 0.212579}
{'[6, 2, 1, 0, 0, 0, 1, 0, 29, 28, 29, 0, 0, 1, 0, 1, 1, 1]' : 0.212338}
{'[6, 2, 1, 0, 0, 0, 1, 0, 29, 28, 29, 0, 0, 1, 0, 1, 1, 1]' : 0.215741}
{'[6, 2, 1, 0, 0, 0, 1, 0, 29, 28, 29, 0, 0, 1, 0, 1, 1, 1]' : 0.21046}
{'[6, 2, 1, 0, 0, 0, 1, 0, 29, 28, 29, 0, 0, 1, 0, 1, 1, 1]' : 0.215666}
{'[6, 2, 1, 0, 0, 0, 1, 0, 29, 28, 29, 0, 0, 1, 0, 1, 1, 1]' : 0.215714}
{'[6, 2, 1, 0, 0, 0, 1, 0, 29, 28, 29, 0, 0, 1, 0, 1, 1, 1]' : 0.217661}
{'[6, 2, 1, 0, 0, 0, 1, 0, 29, 28, 29, 0, 0, 1, 0, 1, 1, 1]' : 0.217564}
{'[6, 2, 1, 0, 0, 0, 1, 0, 29, 28, 29, 0, 0, 1, 0, 1, 1, 1]' : 0.217314}
{'[6, 2, 1, 0, 0, 0, 1, 0, 29, 28, 29, 0, 0, 1, 0, 1, 1, 1]' : 0.215536}
{'[6, 2, 1, 0, 0, 0, 1, 0, 29, 28, 29, 0, 0, 1, 0, 1, 1, 1]' : 0.216462}
{'[6, 2, 1, 0, 0, 0, 1, 0, 29, 28, 29, 0, 0, 1, 0, 1, 1, 1]' : 0.215635}
{'[6, 2, 1, 0, 0, 0, 1, 0, 29, 28, 29, 0, 0, 1, 0, 1, 1, 1]' : 0.215861}
{'[6, 2, 1, 0, 0, 0, 1, 0, 29, 28, 29, 0, 0, 1, 0, 1, 1, 1]' : 0.216384}
{'[6, 2, 1, 0, 0, 0, 1, 0, 29, 28, 29, 0, 0, 1, 0, 1, 1, 1]' : 0.212263}

out:
 ["{'[6, 2, 1, 0, 0, 0, 1, 0, 29, 28, 29, 0, 0, 1, 0, 1, 1, 1]' : 0.215445}", "{'[6, 2, 1, 0, 0, 0, 1, 0, 29, 28, 29, 0, 0, 1, 0, 1, 1, 1]' : 0.213276}", "{'[6, 2, 1, 0, 0, 0, 1, 0, 29, 28, 29, 0, 0, 1, 0, 1, 1, 1]' : 0.21389}", "{'[6, 2, 1, 0, 0, 0, 1, 0, 29, 28, 29, 0, 0, 1, 0, 1, 1, 1]' : 0.210873}", "{'[6, 2, 1, 0, 0, 0, 1, 0, 29, 28, 29, 0, 0, 1, 0, 1, 1, 1]' : 0.21028}", "{'[6, 2, 1, 0, 0, 0, 1, 0, 29, 28, 29, 0, 0, 1, 0, 1, 1, 1]' : 0.216118}", "{'[6, 2, 1, 0, 0, 0, 1, 0, 29, 28, 29, 0, 0, 1, 0, 1, 1, 1]' : 0.215762}", "{'[6, 2, 1, 0, 0, 0, 1, 0, 29, 28, 29, 0, 0, 1, 0, 1, 1, 1]' : 0.216952}", "{'[6, 2, 1, 0, 0, 0, 1, 0, 29, 28, 29, 0, 0, 1, 0, 1, 1, 1]' : 0.212446}", "{'[6, 2, 1, 0, 0, 0, 1, 0, 29, 28, 29, 0, 0, 1, 0, 1, 1, 1]' : 0.213466}", "{'[6, 2, 1, 0, 0, 0, 1, 0, 29, 28, 29, 0, 0, 1, 0, 1, 1, 1]' : 0.21613}", "{'[6, 2, 1, 0, 0, 0, 1, 0, 29, 28, 29, 0, 0, 1, 0, 1, 1, 1]' : 0.218362}", "{'[6, 2, 1, 0, 0, 0, 1, 0, 29, 28, 29, 0, 0, 1, 0, 1, 1, 1]' : 0.215295}", "{'[6, 2, 1, 0, 0, 0, 1, 0, 29, 28, 29, 0, 0, 1, 0, 1, 1, 1]' : 0.210448}", "{'[6, 2, 1, 0, 0, 0, 1, 0, 29, 28, 29, 0, 0, 1, 0, 1, 1, 1]' : 0.21371}", "{'[6, 2, 1, 0, 0, 0, 1, 0, 29, 28, 29, 0, 0, 1, 0, 1, 1, 1]' : 0.212579}", "{'[6, 2, 1, 0, 0, 0, 1, 0, 29, 28, 29, 0, 0, 1, 0, 1, 1, 1]' : 0.212338}", "{'[6, 2, 1, 0, 0, 0, 1, 0, 29, 28, 29, 0, 0, 1, 0, 1, 1, 1]' : 0.215741}", "{'[6, 2, 1, 0, 0, 0, 1, 0, 29, 28, 29, 0, 0, 1, 0, 1, 1, 1]' : 0.21046}", "{'[6, 2, 1, 0, 0, 0, 1, 0, 29, 28, 29, 0, 0, 1, 0, 1, 1, 1]' : 0.215666}", "{'[6, 2, 1, 0, 0, 0, 1, 0, 29, 28, 29, 0, 0, 1, 0, 1, 1, 1]' : 0.215714}", "{'[6, 2, 1, 0, 0, 0, 1, 0, 29, 28, 29, 0, 0, 1, 0, 1, 1, 1]' : 0.217661}", "{'[6, 2, 1, 0, 0, 0, 1, 0, 29, 28, 29, 0, 0, 1, 0, 1, 1, 1]' : 0.217564}", "{'[6, 2, 1, 0, 0, 0, 1, 0, 29, 28, 29, 0, 0, 1, 0, 1, 1, 1]' : 0.217314}", "{'[6, 2, 1, 0, 0, 0, 1, 0, 29, 28, 29, 0, 0, 1, 0, 1, 1, 1]' : 0.215536}", "{'[6, 2, 1, 0, 0, 0, 1, 0, 29, 28, 29, 0, 0, 1, 0, 1, 1, 1]' : 0.216462}", "{'[6, 2, 1, 0, 0, 0, 1, 0, 29, 28, 29, 0, 0, 1, 0, 1, 1, 1]' : 0.215635}", "{'[6, 2, 1, 0, 0, 0, 1, 0, 29, 28, 29, 0, 0, 1, 0, 1, 1, 1]' : 0.215861}", "{'[6, 2, 1, 0, 0, 0, 1, 0, 29, 28, 29, 0, 0, 1, 0, 1, 1, 1]' : 0.216384}", "{'[6, 2, 1, 0, 0, 0, 1, 0, 29, 28, 29, 0, 0, 1, 0, 1, 1, 1]' : 0.212263}"]
returning from 'run': {'[6, 2, 1, 0, 0, 0, 1, 0, 29, 28, 29, 0, 0, 1, 0, 1, 1, 1]': ([0.215445, 0.213276, 0.21389, 0.210873, 0.21028, 0.216118, 0.215762, 0.216952, 0.212446, 0.213466, 0.21613, 0.218362, 0.215295, 0.210448, 0.21371, 0.212579, 0.212338, 0.215741, 0.21046, 0.215666, 0.215714, 0.217661, 0.217564, 0.217314, 0.215536, 0.216462, 0.215635, 0.215861, 0.216384, 0.212263], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 2, 1, 0, 0, 0, 1, 0, 29, 28, 29, 0, 0, 1, 0, 1, 1, 1]': ([0.215445, 0.213276, 0.21389, 0.210873, 0.21028, 0.216118, 0.215762, 0.216952, 0.212446, 0.213466, 0.21613, 0.218362, 0.215295, 0.210448, 0.21371, 0.212579, 0.212338, 0.215741, 0.21046, 0.215666, 0.215714, 0.217661, 0.217564, 0.217314, 0.215536, 0.216462, 0.215635, 0.215861, 0.216384, 0.212263], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		368
        Multiplications: 	130
        Divisions: 		0
        Logical: 		0
        Reads: 			951
        Writes: 		230
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest26.exe __orio_perftest26.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest26.exe  
Program Test Output: 
{'[1, 2, 4, 0, 6, 3, 0, 0, 2, 0, 2, 27, 0, 0, 2, 1, 1, 1]' : 0.152678}
{'[1, 2, 4, 0, 6, 3, 0, 0, 2, 0, 2, 27, 0, 0, 2, 1, 1, 1]' : 0.148557}
{'[1, 2, 4, 0, 6, 3, 0, 0, 2, 0, 2, 27, 0, 0, 2, 1, 1, 1]' : 0.148005}
{'[1, 2, 4, 0, 6, 3, 0, 0, 2, 0, 2, 27, 0, 0, 2, 1, 1, 1]' : 0.153881}
{'[1, 2, 4, 0, 6, 3, 0, 0, 2, 0, 2, 27, 0, 0, 2, 1, 1, 1]' : 0.15682}
{'[1, 2, 4, 0, 6, 3, 0, 0, 2, 0, 2, 27, 0, 0, 2, 1, 1, 1]' : 0.156838}
{'[1, 2, 4, 0, 6, 3, 0, 0, 2, 0, 2, 27, 0, 0, 2, 1, 1, 1]' : 0.15689}
{'[1, 2, 4, 0, 6, 3, 0, 0, 2, 0, 2, 27, 0, 0, 2, 1, 1, 1]' : 0.152565}
{'[1, 2, 4, 0, 6, 3, 0, 0, 2, 0, 2, 27, 0, 0, 2, 1, 1, 1]' : 0.149297}
{'[1, 2, 4, 0, 6, 3, 0, 0, 2, 0, 2, 27, 0, 0, 2, 1, 1, 1]' : 0.149614}
{'[1, 2, 4, 0, 6, 3, 0, 0, 2, 0, 2, 27, 0, 0, 2, 1, 1, 1]' : 0.152415}
{'[1, 2, 4, 0, 6, 3, 0, 0, 2, 0, 2, 27, 0, 0, 2, 1, 1, 1]' : 0.152351}
{'[1, 2, 4, 0, 6, 3, 0, 0, 2, 0, 2, 27, 0, 0, 2, 1, 1, 1]' : 0.152733}
{'[1, 2, 4, 0, 6, 3, 0, 0, 2, 0, 2, 27, 0, 0, 2, 1, 1, 1]' : 0.156859}
{'[1, 2, 4, 0, 6, 3, 0, 0, 2, 0, 2, 27, 0, 0, 2, 1, 1, 1]' : 0.157032}
{'[1, 2, 4, 0, 6, 3, 0, 0, 2, 0, 2, 27, 0, 0, 2, 1, 1, 1]' : 0.154471}
{'[1, 2, 4, 0, 6, 3, 0, 0, 2, 0, 2, 27, 0, 0, 2, 1, 1, 1]' : 0.152829}
{'[1, 2, 4, 0, 6, 3, 0, 0, 2, 0, 2, 27, 0, 0, 2, 1, 1, 1]' : 0.14791}
{'[1, 2, 4, 0, 6, 3, 0, 0, 2, 0, 2, 27, 0, 0, 2, 1, 1, 1]' : 0.148074}
{'[1, 2, 4, 0, 6, 3, 0, 0, 2, 0, 2, 27, 0, 0, 2, 1, 1, 1]' : 0.150132}
{'[1, 2, 4, 0, 6, 3, 0, 0, 2, 0, 2, 27, 0, 0, 2, 1, 1, 1]' : 0.152523}
{'[1, 2, 4, 0, 6, 3, 0, 0, 2, 0, 2, 27, 0, 0, 2, 1, 1, 1]' : 0.152514}
{'[1, 2, 4, 0, 6, 3, 0, 0, 2, 0, 2, 27, 0, 0, 2, 1, 1, 1]' : 0.152672}
{'[1, 2, 4, 0, 6, 3, 0, 0, 2, 0, 2, 27, 0, 0, 2, 1, 1, 1]' : 0.15257}
{'[1, 2, 4, 0, 6, 3, 0, 0, 2, 0, 2, 27, 0, 0, 2, 1, 1, 1]' : 0.15238}
{'[1, 2, 4, 0, 6, 3, 0, 0, 2, 0, 2, 27, 0, 0, 2, 1, 1, 1]' : 0.15235}
{'[1, 2, 4, 0, 6, 3, 0, 0, 2, 0, 2, 27, 0, 0, 2, 1, 1, 1]' : 0.155923}
{'[1, 2, 4, 0, 6, 3, 0, 0, 2, 0, 2, 27, 0, 0, 2, 1, 1, 1]' : 0.147832}
{'[1, 2, 4, 0, 6, 3, 0, 0, 2, 0, 2, 27, 0, 0, 2, 1, 1, 1]' : 0.148183}
{'[1, 2, 4, 0, 6, 3, 0, 0, 2, 0, 2, 27, 0, 0, 2, 1, 1, 1]' : 0.150713}

out:
 ["{'[1, 2, 4, 0, 6, 3, 0, 0, 2, 0, 2, 27, 0, 0, 2, 1, 1, 1]' : 0.152678}", "{'[1, 2, 4, 0, 6, 3, 0, 0, 2, 0, 2, 27, 0, 0, 2, 1, 1, 1]' : 0.148557}", "{'[1, 2, 4, 0, 6, 3, 0, 0, 2, 0, 2, 27, 0, 0, 2, 1, 1, 1]' : 0.148005}", "{'[1, 2, 4, 0, 6, 3, 0, 0, 2, 0, 2, 27, 0, 0, 2, 1, 1, 1]' : 0.153881}", "{'[1, 2, 4, 0, 6, 3, 0, 0, 2, 0, 2, 27, 0, 0, 2, 1, 1, 1]' : 0.15682}", "{'[1, 2, 4, 0, 6, 3, 0, 0, 2, 0, 2, 27, 0, 0, 2, 1, 1, 1]' : 0.156838}", "{'[1, 2, 4, 0, 6, 3, 0, 0, 2, 0, 2, 27, 0, 0, 2, 1, 1, 1]' : 0.15689}", "{'[1, 2, 4, 0, 6, 3, 0, 0, 2, 0, 2, 27, 0, 0, 2, 1, 1, 1]' : 0.152565}", "{'[1, 2, 4, 0, 6, 3, 0, 0, 2, 0, 2, 27, 0, 0, 2, 1, 1, 1]' : 0.149297}", "{'[1, 2, 4, 0, 6, 3, 0, 0, 2, 0, 2, 27, 0, 0, 2, 1, 1, 1]' : 0.149614}", "{'[1, 2, 4, 0, 6, 3, 0, 0, 2, 0, 2, 27, 0, 0, 2, 1, 1, 1]' : 0.152415}", "{'[1, 2, 4, 0, 6, 3, 0, 0, 2, 0, 2, 27, 0, 0, 2, 1, 1, 1]' : 0.152351}", "{'[1, 2, 4, 0, 6, 3, 0, 0, 2, 0, 2, 27, 0, 0, 2, 1, 1, 1]' : 0.152733}", "{'[1, 2, 4, 0, 6, 3, 0, 0, 2, 0, 2, 27, 0, 0, 2, 1, 1, 1]' : 0.156859}", "{'[1, 2, 4, 0, 6, 3, 0, 0, 2, 0, 2, 27, 0, 0, 2, 1, 1, 1]' : 0.157032}", "{'[1, 2, 4, 0, 6, 3, 0, 0, 2, 0, 2, 27, 0, 0, 2, 1, 1, 1]' : 0.154471}", "{'[1, 2, 4, 0, 6, 3, 0, 0, 2, 0, 2, 27, 0, 0, 2, 1, 1, 1]' : 0.152829}", "{'[1, 2, 4, 0, 6, 3, 0, 0, 2, 0, 2, 27, 0, 0, 2, 1, 1, 1]' : 0.14791}", "{'[1, 2, 4, 0, 6, 3, 0, 0, 2, 0, 2, 27, 0, 0, 2, 1, 1, 1]' : 0.148074}", "{'[1, 2, 4, 0, 6, 3, 0, 0, 2, 0, 2, 27, 0, 0, 2, 1, 1, 1]' : 0.150132}", "{'[1, 2, 4, 0, 6, 3, 0, 0, 2, 0, 2, 27, 0, 0, 2, 1, 1, 1]' : 0.152523}", "{'[1, 2, 4, 0, 6, 3, 0, 0, 2, 0, 2, 27, 0, 0, 2, 1, 1, 1]' : 0.152514}", "{'[1, 2, 4, 0, 6, 3, 0, 0, 2, 0, 2, 27, 0, 0, 2, 1, 1, 1]' : 0.152672}", "{'[1, 2, 4, 0, 6, 3, 0, 0, 2, 0, 2, 27, 0, 0, 2, 1, 1, 1]' : 0.15257}", "{'[1, 2, 4, 0, 6, 3, 0, 0, 2, 0, 2, 27, 0, 0, 2, 1, 1, 1]' : 0.15238}", "{'[1, 2, 4, 0, 6, 3, 0, 0, 2, 0, 2, 27, 0, 0, 2, 1, 1, 1]' : 0.15235}", "{'[1, 2, 4, 0, 6, 3, 0, 0, 2, 0, 2, 27, 0, 0, 2, 1, 1, 1]' : 0.155923}", "{'[1, 2, 4, 0, 6, 3, 0, 0, 2, 0, 2, 27, 0, 0, 2, 1, 1, 1]' : 0.147832}", "{'[1, 2, 4, 0, 6, 3, 0, 0, 2, 0, 2, 27, 0, 0, 2, 1, 1, 1]' : 0.148183}", "{'[1, 2, 4, 0, 6, 3, 0, 0, 2, 0, 2, 27, 0, 0, 2, 1, 1, 1]' : 0.150713}"]
returning from 'run': {'[1, 2, 4, 0, 6, 3, 0, 0, 2, 0, 2, 27, 0, 0, 2, 1, 1, 1]': ([0.152678, 0.148557, 0.148005, 0.153881, 0.15682, 0.156838, 0.15689, 0.152565, 0.149297, 0.149614, 0.152415, 0.152351, 0.152733, 0.156859, 0.157032, 0.154471, 0.152829, 0.14791, 0.148074, 0.150132, 0.152523, 0.152514, 0.152672, 0.15257, 0.15238, 0.15235, 0.155923, 0.147832, 0.148183, 0.150713], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 2, 4, 0, 6, 3, 0, 0, 2, 0, 2, 27, 0, 0, 2, 1, 1, 1]': ([0.152678, 0.148557, 0.148005, 0.153881, 0.15682, 0.156838, 0.15689, 0.152565, 0.149297, 0.149614, 0.152415, 0.152351, 0.152733, 0.156859, 0.157032, 0.154471, 0.152829, 0.14791, 0.148074, 0.150132, 0.152523, 0.152514, 0.152672, 0.15257, 0.15238, 0.15235, 0.155923, 0.147832, 0.148183, 0.150713], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = iii
Code stats:
        Number of loops: 	25
        Max loop nest depth: 	5
        Additions: 		10740
        Multiplications: 	2706
        Divisions: 		0
        Logical: 		0
        Reads: 			15502
        Writes: 		1449
        Comparisons:		25
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest27.exe __orio_perftest27.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest27.exe  
Program Test Output: 
{'[6, 1, 6, 4, 6, 0, 1, 1, 24, 0, 29, 8, 2, 0, 0, 0, 0, 1]' : 0.211359}
{'[6, 1, 6, 4, 6, 0, 1, 1, 24, 0, 29, 8, 2, 0, 0, 0, 0, 1]' : 0.213143}
{'[6, 1, 6, 4, 6, 0, 1, 1, 24, 0, 29, 8, 2, 0, 0, 0, 0, 1]' : 0.204612}
{'[6, 1, 6, 4, 6, 0, 1, 1, 24, 0, 29, 8, 2, 0, 0, 0, 0, 1]' : 0.188582}
{'[6, 1, 6, 4, 6, 0, 1, 1, 24, 0, 29, 8, 2, 0, 0, 0, 0, 1]' : 0.190634}
{'[6, 1, 6, 4, 6, 0, 1, 1, 24, 0, 29, 8, 2, 0, 0, 0, 0, 1]' : 0.191737}
{'[6, 1, 6, 4, 6, 0, 1, 1, 24, 0, 29, 8, 2, 0, 0, 0, 0, 1]' : 0.19134}
{'[6, 1, 6, 4, 6, 0, 1, 1, 24, 0, 29, 8, 2, 0, 0, 0, 0, 1]' : 0.191978}
{'[6, 1, 6, 4, 6, 0, 1, 1, 24, 0, 29, 8, 2, 0, 0, 0, 0, 1]' : 0.192202}
{'[6, 1, 6, 4, 6, 0, 1, 1, 24, 0, 29, 8, 2, 0, 0, 0, 0, 1]' : 0.193394}
{'[6, 1, 6, 4, 6, 0, 1, 1, 24, 0, 29, 8, 2, 0, 0, 0, 0, 1]' : 0.193274}
{'[6, 1, 6, 4, 6, 0, 1, 1, 24, 0, 29, 8, 2, 0, 0, 0, 0, 1]' : 0.188634}
{'[6, 1, 6, 4, 6, 0, 1, 1, 24, 0, 29, 8, 2, 0, 0, 0, 0, 1]' : 0.191656}
{'[6, 1, 6, 4, 6, 0, 1, 1, 24, 0, 29, 8, 2, 0, 0, 0, 0, 1]' : 0.192233}
{'[6, 1, 6, 4, 6, 0, 1, 1, 24, 0, 29, 8, 2, 0, 0, 0, 0, 1]' : 0.190989}
{'[6, 1, 6, 4, 6, 0, 1, 1, 24, 0, 29, 8, 2, 0, 0, 0, 0, 1]' : 0.192225}
{'[6, 1, 6, 4, 6, 0, 1, 1, 24, 0, 29, 8, 2, 0, 0, 0, 0, 1]' : 0.191347}
{'[6, 1, 6, 4, 6, 0, 1, 1, 24, 0, 29, 8, 2, 0, 0, 0, 0, 1]' : 0.192037}
{'[6, 1, 6, 4, 6, 0, 1, 1, 24, 0, 29, 8, 2, 0, 0, 0, 0, 1]' : 0.190894}
{'[6, 1, 6, 4, 6, 0, 1, 1, 24, 0, 29, 8, 2, 0, 0, 0, 0, 1]' : 0.188726}
{'[6, 1, 6, 4, 6, 0, 1, 1, 24, 0, 29, 8, 2, 0, 0, 0, 0, 1]' : 0.192319}
{'[6, 1, 6, 4, 6, 0, 1, 1, 24, 0, 29, 8, 2, 0, 0, 0, 0, 1]' : 0.191922}
{'[6, 1, 6, 4, 6, 0, 1, 1, 24, 0, 29, 8, 2, 0, 0, 0, 0, 1]' : 0.19427}
{'[6, 1, 6, 4, 6, 0, 1, 1, 24, 0, 29, 8, 2, 0, 0, 0, 0, 1]' : 0.19146}
{'[6, 1, 6, 4, 6, 0, 1, 1, 24, 0, 29, 8, 2, 0, 0, 0, 0, 1]' : 0.18831}
{'[6, 1, 6, 4, 6, 0, 1, 1, 24, 0, 29, 8, 2, 0, 0, 0, 0, 1]' : 0.192182}
{'[6, 1, 6, 4, 6, 0, 1, 1, 24, 0, 29, 8, 2, 0, 0, 0, 0, 1]' : 0.190858}
{'[6, 1, 6, 4, 6, 0, 1, 1, 24, 0, 29, 8, 2, 0, 0, 0, 0, 1]' : 0.189132}
{'[6, 1, 6, 4, 6, 0, 1, 1, 24, 0, 29, 8, 2, 0, 0, 0, 0, 1]' : 0.192058}
{'[6, 1, 6, 4, 6, 0, 1, 1, 24, 0, 29, 8, 2, 0, 0, 0, 0, 1]' : 0.192112}

out:
 ["{'[6, 1, 6, 4, 6, 0, 1, 1, 24, 0, 29, 8, 2, 0, 0, 0, 0, 1]' : 0.211359}", "{'[6, 1, 6, 4, 6, 0, 1, 1, 24, 0, 29, 8, 2, 0, 0, 0, 0, 1]' : 0.213143}", "{'[6, 1, 6, 4, 6, 0, 1, 1, 24, 0, 29, 8, 2, 0, 0, 0, 0, 1]' : 0.204612}", "{'[6, 1, 6, 4, 6, 0, 1, 1, 24, 0, 29, 8, 2, 0, 0, 0, 0, 1]' : 0.188582}", "{'[6, 1, 6, 4, 6, 0, 1, 1, 24, 0, 29, 8, 2, 0, 0, 0, 0, 1]' : 0.190634}", "{'[6, 1, 6, 4, 6, 0, 1, 1, 24, 0, 29, 8, 2, 0, 0, 0, 0, 1]' : 0.191737}", "{'[6, 1, 6, 4, 6, 0, 1, 1, 24, 0, 29, 8, 2, 0, 0, 0, 0, 1]' : 0.19134}", "{'[6, 1, 6, 4, 6, 0, 1, 1, 24, 0, 29, 8, 2, 0, 0, 0, 0, 1]' : 0.191978}", "{'[6, 1, 6, 4, 6, 0, 1, 1, 24, 0, 29, 8, 2, 0, 0, 0, 0, 1]' : 0.192202}", "{'[6, 1, 6, 4, 6, 0, 1, 1, 24, 0, 29, 8, 2, 0, 0, 0, 0, 1]' : 0.193394}", "{'[6, 1, 6, 4, 6, 0, 1, 1, 24, 0, 29, 8, 2, 0, 0, 0, 0, 1]' : 0.193274}", "{'[6, 1, 6, 4, 6, 0, 1, 1, 24, 0, 29, 8, 2, 0, 0, 0, 0, 1]' : 0.188634}", "{'[6, 1, 6, 4, 6, 0, 1, 1, 24, 0, 29, 8, 2, 0, 0, 0, 0, 1]' : 0.191656}", "{'[6, 1, 6, 4, 6, 0, 1, 1, 24, 0, 29, 8, 2, 0, 0, 0, 0, 1]' : 0.192233}", "{'[6, 1, 6, 4, 6, 0, 1, 1, 24, 0, 29, 8, 2, 0, 0, 0, 0, 1]' : 0.190989}", "{'[6, 1, 6, 4, 6, 0, 1, 1, 24, 0, 29, 8, 2, 0, 0, 0, 0, 1]' : 0.192225}", "{'[6, 1, 6, 4, 6, 0, 1, 1, 24, 0, 29, 8, 2, 0, 0, 0, 0, 1]' : 0.191347}", "{'[6, 1, 6, 4, 6, 0, 1, 1, 24, 0, 29, 8, 2, 0, 0, 0, 0, 1]' : 0.192037}", "{'[6, 1, 6, 4, 6, 0, 1, 1, 24, 0, 29, 8, 2, 0, 0, 0, 0, 1]' : 0.190894}", "{'[6, 1, 6, 4, 6, 0, 1, 1, 24, 0, 29, 8, 2, 0, 0, 0, 0, 1]' : 0.188726}", "{'[6, 1, 6, 4, 6, 0, 1, 1, 24, 0, 29, 8, 2, 0, 0, 0, 0, 1]' : 0.192319}", "{'[6, 1, 6, 4, 6, 0, 1, 1, 24, 0, 29, 8, 2, 0, 0, 0, 0, 1]' : 0.191922}", "{'[6, 1, 6, 4, 6, 0, 1, 1, 24, 0, 29, 8, 2, 0, 0, 0, 0, 1]' : 0.19427}", "{'[6, 1, 6, 4, 6, 0, 1, 1, 24, 0, 29, 8, 2, 0, 0, 0, 0, 1]' : 0.19146}", "{'[6, 1, 6, 4, 6, 0, 1, 1, 24, 0, 29, 8, 2, 0, 0, 0, 0, 1]' : 0.18831}", "{'[6, 1, 6, 4, 6, 0, 1, 1, 24, 0, 29, 8, 2, 0, 0, 0, 0, 1]' : 0.192182}", "{'[6, 1, 6, 4, 6, 0, 1, 1, 24, 0, 29, 8, 2, 0, 0, 0, 0, 1]' : 0.190858}", "{'[6, 1, 6, 4, 6, 0, 1, 1, 24, 0, 29, 8, 2, 0, 0, 0, 0, 1]' : 0.189132}", "{'[6, 1, 6, 4, 6, 0, 1, 1, 24, 0, 29, 8, 2, 0, 0, 0, 0, 1]' : 0.192058}", "{'[6, 1, 6, 4, 6, 0, 1, 1, 24, 0, 29, 8, 2, 0, 0, 0, 0, 1]' : 0.192112}"]
returning from 'run': {'[6, 1, 6, 4, 6, 0, 1, 1, 24, 0, 29, 8, 2, 0, 0, 0, 0, 1]': ([0.211359, 0.213143, 0.204612, 0.188582, 0.190634, 0.191737, 0.19134, 0.191978, 0.192202, 0.193394, 0.193274, 0.188634, 0.191656, 0.192233, 0.190989, 0.192225, 0.191347, 0.192037, 0.190894, 0.188726, 0.192319, 0.191922, 0.19427, 0.19146, 0.18831, 0.192182, 0.190858, 0.189132, 0.192058, 0.192112], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 1, 6, 4, 6, 0, 1, 1, 24, 0, 29, 8, 2, 0, 0, 0, 0, 1]': ([0.211359, 0.213143, 0.204612, 0.188582, 0.190634, 0.191737, 0.19134, 0.191978, 0.192202, 0.193394, 0.193274, 0.188634, 0.191656, 0.192233, 0.190989, 0.192225, 0.191347, 0.192037, 0.190894, 0.188726, 0.192319, 0.191922, 0.19427, 0.19146, 0.18831, 0.192182, 0.190858, 0.189132, 0.192058, 0.192112], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	5
        Additions: 		94
        Multiplications: 	18
        Divisions: 		0
        Logical: 		0
        Reads: 			211
        Writes: 		61
        Comparisons:		10
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest28.exe __orio_perftest28.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest28.exe  
Program Test Output: 
{'[3, 3, 5, 1, 0, 5, 1, 0, 24, 0, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.194181}
{'[3, 3, 5, 1, 0, 5, 1, 0, 24, 0, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.194016}
{'[3, 3, 5, 1, 0, 5, 1, 0, 24, 0, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.194216}
{'[3, 3, 5, 1, 0, 5, 1, 0, 24, 0, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.194091}
{'[3, 3, 5, 1, 0, 5, 1, 0, 24, 0, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.1939}
{'[3, 3, 5, 1, 0, 5, 1, 0, 24, 0, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.19399}
{'[3, 3, 5, 1, 0, 5, 1, 0, 24, 0, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.19064}
{'[3, 3, 5, 1, 0, 5, 1, 0, 24, 0, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.189866}
{'[3, 3, 5, 1, 0, 5, 1, 0, 24, 0, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.194216}
{'[3, 3, 5, 1, 0, 5, 1, 0, 24, 0, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.193945}
{'[3, 3, 5, 1, 0, 5, 1, 0, 24, 0, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.192705}
{'[3, 3, 5, 1, 0, 5, 1, 0, 24, 0, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.193932}
{'[3, 3, 5, 1, 0, 5, 1, 0, 24, 0, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.194094}
{'[3, 3, 5, 1, 0, 5, 1, 0, 24, 0, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.194147}
{'[3, 3, 5, 1, 0, 5, 1, 0, 24, 0, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.18986}
{'[3, 3, 5, 1, 0, 5, 1, 0, 24, 0, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.193148}
{'[3, 3, 5, 1, 0, 5, 1, 0, 24, 0, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.193905}
{'[3, 3, 5, 1, 0, 5, 1, 0, 24, 0, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.19406}
{'[3, 3, 5, 1, 0, 5, 1, 0, 24, 0, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.194069}
{'[3, 3, 5, 1, 0, 5, 1, 0, 24, 0, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.190848}
{'[3, 3, 5, 1, 0, 5, 1, 0, 24, 0, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.190599}
{'[3, 3, 5, 1, 0, 5, 1, 0, 24, 0, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.195653}
{'[3, 3, 5, 1, 0, 5, 1, 0, 24, 0, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.199515}
{'[3, 3, 5, 1, 0, 5, 1, 0, 24, 0, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.199469}
{'[3, 3, 5, 1, 0, 5, 1, 0, 24, 0, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.199413}
{'[3, 3, 5, 1, 0, 5, 1, 0, 24, 0, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.199436}
{'[3, 3, 5, 1, 0, 5, 1, 0, 24, 0, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.19492}
{'[3, 3, 5, 1, 0, 5, 1, 0, 24, 0, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.187948}
{'[3, 3, 5, 1, 0, 5, 1, 0, 24, 0, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.195924}
{'[3, 3, 5, 1, 0, 5, 1, 0, 24, 0, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.193231}

out:
 ["{'[3, 3, 5, 1, 0, 5, 1, 0, 24, 0, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.194181}", "{'[3, 3, 5, 1, 0, 5, 1, 0, 24, 0, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.194016}", "{'[3, 3, 5, 1, 0, 5, 1, 0, 24, 0, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.194216}", "{'[3, 3, 5, 1, 0, 5, 1, 0, 24, 0, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.194091}", "{'[3, 3, 5, 1, 0, 5, 1, 0, 24, 0, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.1939}", "{'[3, 3, 5, 1, 0, 5, 1, 0, 24, 0, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.19399}", "{'[3, 3, 5, 1, 0, 5, 1, 0, 24, 0, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.19064}", "{'[3, 3, 5, 1, 0, 5, 1, 0, 24, 0, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.189866}", "{'[3, 3, 5, 1, 0, 5, 1, 0, 24, 0, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.194216}", "{'[3, 3, 5, 1, 0, 5, 1, 0, 24, 0, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.193945}", "{'[3, 3, 5, 1, 0, 5, 1, 0, 24, 0, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.192705}", "{'[3, 3, 5, 1, 0, 5, 1, 0, 24, 0, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.193932}", "{'[3, 3, 5, 1, 0, 5, 1, 0, 24, 0, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.194094}", "{'[3, 3, 5, 1, 0, 5, 1, 0, 24, 0, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.194147}", "{'[3, 3, 5, 1, 0, 5, 1, 0, 24, 0, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.18986}", "{'[3, 3, 5, 1, 0, 5, 1, 0, 24, 0, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.193148}", "{'[3, 3, 5, 1, 0, 5, 1, 0, 24, 0, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.193905}", "{'[3, 3, 5, 1, 0, 5, 1, 0, 24, 0, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.19406}", "{'[3, 3, 5, 1, 0, 5, 1, 0, 24, 0, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.194069}", "{'[3, 3, 5, 1, 0, 5, 1, 0, 24, 0, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.190848}", "{'[3, 3, 5, 1, 0, 5, 1, 0, 24, 0, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.190599}", "{'[3, 3, 5, 1, 0, 5, 1, 0, 24, 0, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.195653}", "{'[3, 3, 5, 1, 0, 5, 1, 0, 24, 0, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.199515}", "{'[3, 3, 5, 1, 0, 5, 1, 0, 24, 0, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.199469}", "{'[3, 3, 5, 1, 0, 5, 1, 0, 24, 0, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.199413}", "{'[3, 3, 5, 1, 0, 5, 1, 0, 24, 0, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.199436}", "{'[3, 3, 5, 1, 0, 5, 1, 0, 24, 0, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.19492}", "{'[3, 3, 5, 1, 0, 5, 1, 0, 24, 0, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.187948}", "{'[3, 3, 5, 1, 0, 5, 1, 0, 24, 0, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.195924}", "{'[3, 3, 5, 1, 0, 5, 1, 0, 24, 0, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.193231}"]
returning from 'run': {'[3, 3, 5, 1, 0, 5, 1, 0, 24, 0, 0, 0, 0, 1, 0, 1, 0, 0]': ([0.194181, 0.194016, 0.194216, 0.194091, 0.1939, 0.19399, 0.19064, 0.189866, 0.194216, 0.193945, 0.192705, 0.193932, 0.194094, 0.194147, 0.18986, 0.193148, 0.193905, 0.19406, 0.194069, 0.190848, 0.190599, 0.195653, 0.199515, 0.199469, 0.199413, 0.199436, 0.19492, 0.187948, 0.195924, 0.193231], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 3, 5, 1, 0, 5, 1, 0, 24, 0, 0, 0, 0, 1, 0, 1, 0, 0]': ([0.194181, 0.194016, 0.194216, 0.194091, 0.1939, 0.19399, 0.19064, 0.189866, 0.194216, 0.193945, 0.192705, 0.193932, 0.194094, 0.194147, 0.18986, 0.193148, 0.193905, 0.19406, 0.194069, 0.190848, 0.190599, 0.195653, 0.199515, 0.199469, 0.199413, 0.199436, 0.19492, 0.187948, 0.195924, 0.193231], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	5
        Additions: 		540
        Multiplications: 	244
        Divisions: 		0
        Logical: 		0
        Reads: 			1403
        Writes: 		325
        Comparisons:		18
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest29.exe __orio_perftest29.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest29.exe  
Program Test Output: 
{'[0, 0, 1, 5, 0, 6, 0, 0, 5, 27, 0, 0, 2, 0, 0, 1, 0, 0]' : 0.200255}
{'[0, 0, 1, 5, 0, 6, 0, 0, 5, 27, 0, 0, 2, 0, 0, 1, 0, 0]' : 0.200655}
{'[0, 0, 1, 5, 0, 6, 0, 0, 5, 27, 0, 0, 2, 0, 0, 1, 0, 0]' : 0.183899}
{'[0, 0, 1, 5, 0, 6, 0, 0, 5, 27, 0, 0, 2, 0, 0, 1, 0, 0]' : 0.183155}
{'[0, 0, 1, 5, 0, 6, 0, 0, 5, 27, 0, 0, 2, 0, 0, 1, 0, 0]' : 0.183722}
{'[0, 0, 1, 5, 0, 6, 0, 0, 5, 27, 0, 0, 2, 0, 0, 1, 0, 0]' : 0.18267}
{'[0, 0, 1, 5, 0, 6, 0, 0, 5, 27, 0, 0, 2, 0, 0, 1, 0, 0]' : 0.181996}
{'[0, 0, 1, 5, 0, 6, 0, 0, 5, 27, 0, 0, 2, 0, 0, 1, 0, 0]' : 0.182242}
{'[0, 0, 1, 5, 0, 6, 0, 0, 5, 27, 0, 0, 2, 0, 0, 1, 0, 0]' : 0.180275}
{'[0, 0, 1, 5, 0, 6, 0, 0, 5, 27, 0, 0, 2, 0, 0, 1, 0, 0]' : 0.179695}
{'[0, 0, 1, 5, 0, 6, 0, 0, 5, 27, 0, 0, 2, 0, 0, 1, 0, 0]' : 0.179367}
{'[0, 0, 1, 5, 0, 6, 0, 0, 5, 27, 0, 0, 2, 0, 0, 1, 0, 0]' : 0.177204}
{'[0, 0, 1, 5, 0, 6, 0, 0, 5, 27, 0, 0, 2, 0, 0, 1, 0, 0]' : 0.180741}
{'[0, 0, 1, 5, 0, 6, 0, 0, 5, 27, 0, 0, 2, 0, 0, 1, 0, 0]' : 0.181147}
{'[0, 0, 1, 5, 0, 6, 0, 0, 5, 27, 0, 0, 2, 0, 0, 1, 0, 0]' : 0.177508}
{'[0, 0, 1, 5, 0, 6, 0, 0, 5, 27, 0, 0, 2, 0, 0, 1, 0, 0]' : 0.179543}
{'[0, 0, 1, 5, 0, 6, 0, 0, 5, 27, 0, 0, 2, 0, 0, 1, 0, 0]' : 0.180775}
{'[0, 0, 1, 5, 0, 6, 0, 0, 5, 27, 0, 0, 2, 0, 0, 1, 0, 0]' : 0.180299}
{'[0, 0, 1, 5, 0, 6, 0, 0, 5, 27, 0, 0, 2, 0, 0, 1, 0, 0]' : 0.179655}
{'[0, 0, 1, 5, 0, 6, 0, 0, 5, 27, 0, 0, 2, 0, 0, 1, 0, 0]' : 0.180717}
{'[0, 0, 1, 5, 0, 6, 0, 0, 5, 27, 0, 0, 2, 0, 0, 1, 0, 0]' : 0.181898}
{'[0, 0, 1, 5, 0, 6, 0, 0, 5, 27, 0, 0, 2, 0, 0, 1, 0, 0]' : 0.179864}
{'[0, 0, 1, 5, 0, 6, 0, 0, 5, 27, 0, 0, 2, 0, 0, 1, 0, 0]' : 0.17804}
{'[0, 0, 1, 5, 0, 6, 0, 0, 5, 27, 0, 0, 2, 0, 0, 1, 0, 0]' : 0.180177}
{'[0, 0, 1, 5, 0, 6, 0, 0, 5, 27, 0, 0, 2, 0, 0, 1, 0, 0]' : 0.181036}
{'[0, 0, 1, 5, 0, 6, 0, 0, 5, 27, 0, 0, 2, 0, 0, 1, 0, 0]' : 0.18134}
{'[0, 0, 1, 5, 0, 6, 0, 0, 5, 27, 0, 0, 2, 0, 0, 1, 0, 0]' : 0.184084}
{'[0, 0, 1, 5, 0, 6, 0, 0, 5, 27, 0, 0, 2, 0, 0, 1, 0, 0]' : 0.184567}
{'[0, 0, 1, 5, 0, 6, 0, 0, 5, 27, 0, 0, 2, 0, 0, 1, 0, 0]' : 0.183754}
{'[0, 0, 1, 5, 0, 6, 0, 0, 5, 27, 0, 0, 2, 0, 0, 1, 0, 0]' : 0.183382}

out:
 ["{'[0, 0, 1, 5, 0, 6, 0, 0, 5, 27, 0, 0, 2, 0, 0, 1, 0, 0]' : 0.200255}", "{'[0, 0, 1, 5, 0, 6, 0, 0, 5, 27, 0, 0, 2, 0, 0, 1, 0, 0]' : 0.200655}", "{'[0, 0, 1, 5, 0, 6, 0, 0, 5, 27, 0, 0, 2, 0, 0, 1, 0, 0]' : 0.183899}", "{'[0, 0, 1, 5, 0, 6, 0, 0, 5, 27, 0, 0, 2, 0, 0, 1, 0, 0]' : 0.183155}", "{'[0, 0, 1, 5, 0, 6, 0, 0, 5, 27, 0, 0, 2, 0, 0, 1, 0, 0]' : 0.183722}", "{'[0, 0, 1, 5, 0, 6, 0, 0, 5, 27, 0, 0, 2, 0, 0, 1, 0, 0]' : 0.18267}", "{'[0, 0, 1, 5, 0, 6, 0, 0, 5, 27, 0, 0, 2, 0, 0, 1, 0, 0]' : 0.181996}", "{'[0, 0, 1, 5, 0, 6, 0, 0, 5, 27, 0, 0, 2, 0, 0, 1, 0, 0]' : 0.182242}", "{'[0, 0, 1, 5, 0, 6, 0, 0, 5, 27, 0, 0, 2, 0, 0, 1, 0, 0]' : 0.180275}", "{'[0, 0, 1, 5, 0, 6, 0, 0, 5, 27, 0, 0, 2, 0, 0, 1, 0, 0]' : 0.179695}", "{'[0, 0, 1, 5, 0, 6, 0, 0, 5, 27, 0, 0, 2, 0, 0, 1, 0, 0]' : 0.179367}", "{'[0, 0, 1, 5, 0, 6, 0, 0, 5, 27, 0, 0, 2, 0, 0, 1, 0, 0]' : 0.177204}", "{'[0, 0, 1, 5, 0, 6, 0, 0, 5, 27, 0, 0, 2, 0, 0, 1, 0, 0]' : 0.180741}", "{'[0, 0, 1, 5, 0, 6, 0, 0, 5, 27, 0, 0, 2, 0, 0, 1, 0, 0]' : 0.181147}", "{'[0, 0, 1, 5, 0, 6, 0, 0, 5, 27, 0, 0, 2, 0, 0, 1, 0, 0]' : 0.177508}", "{'[0, 0, 1, 5, 0, 6, 0, 0, 5, 27, 0, 0, 2, 0, 0, 1, 0, 0]' : 0.179543}", "{'[0, 0, 1, 5, 0, 6, 0, 0, 5, 27, 0, 0, 2, 0, 0, 1, 0, 0]' : 0.180775}", "{'[0, 0, 1, 5, 0, 6, 0, 0, 5, 27, 0, 0, 2, 0, 0, 1, 0, 0]' : 0.180299}", "{'[0, 0, 1, 5, 0, 6, 0, 0, 5, 27, 0, 0, 2, 0, 0, 1, 0, 0]' : 0.179655}", "{'[0, 0, 1, 5, 0, 6, 0, 0, 5, 27, 0, 0, 2, 0, 0, 1, 0, 0]' : 0.180717}", "{'[0, 0, 1, 5, 0, 6, 0, 0, 5, 27, 0, 0, 2, 0, 0, 1, 0, 0]' : 0.181898}", "{'[0, 0, 1, 5, 0, 6, 0, 0, 5, 27, 0, 0, 2, 0, 0, 1, 0, 0]' : 0.179864}", "{'[0, 0, 1, 5, 0, 6, 0, 0, 5, 27, 0, 0, 2, 0, 0, 1, 0, 0]' : 0.17804}", "{'[0, 0, 1, 5, 0, 6, 0, 0, 5, 27, 0, 0, 2, 0, 0, 1, 0, 0]' : 0.180177}", "{'[0, 0, 1, 5, 0, 6, 0, 0, 5, 27, 0, 0, 2, 0, 0, 1, 0, 0]' : 0.181036}", "{'[0, 0, 1, 5, 0, 6, 0, 0, 5, 27, 0, 0, 2, 0, 0, 1, 0, 0]' : 0.18134}", "{'[0, 0, 1, 5, 0, 6, 0, 0, 5, 27, 0, 0, 2, 0, 0, 1, 0, 0]' : 0.184084}", "{'[0, 0, 1, 5, 0, 6, 0, 0, 5, 27, 0, 0, 2, 0, 0, 1, 0, 0]' : 0.184567}", "{'[0, 0, 1, 5, 0, 6, 0, 0, 5, 27, 0, 0, 2, 0, 0, 1, 0, 0]' : 0.183754}", "{'[0, 0, 1, 5, 0, 6, 0, 0, 5, 27, 0, 0, 2, 0, 0, 1, 0, 0]' : 0.183382}"]
returning from 'run': {'[0, 0, 1, 5, 0, 6, 0, 0, 5, 27, 0, 0, 2, 0, 0, 1, 0, 0]': ([0.200255, 0.200655, 0.183899, 0.183155, 0.183722, 0.18267, 0.181996, 0.182242, 0.180275, 0.179695, 0.179367, 0.177204, 0.180741, 0.181147, 0.177508, 0.179543, 0.180775, 0.180299, 0.179655, 0.180717, 0.181898, 0.179864, 0.17804, 0.180177, 0.181036, 0.18134, 0.184084, 0.184567, 0.183754, 0.183382], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 1, 5, 0, 6, 0, 0, 5, 27, 0, 0, 2, 0, 0, 1, 0, 0]': ([0.200255, 0.200655, 0.183899, 0.183155, 0.183722, 0.18267, 0.181996, 0.182242, 0.180275, 0.179695, 0.179367, 0.177204, 0.180741, 0.181147, 0.177508, 0.179543, 0.180775, 0.180299, 0.179655, 0.180717, 0.181898, 0.179864, 0.17804, 0.180177, 0.181036, 0.18134, 0.184084, 0.184567, 0.183754, 0.183382], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	63
        Max loop nest depth: 	4
        Additions: 		2716
        Multiplications: 	1248
        Divisions: 		0
        Logical: 		0
        Reads: 			5517
        Writes: 		977
        Comparisons:		63
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest30.exe __orio_perftest30.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest30.exe  
Program Test Output: 
{'[5, 0, 0, 0, 2, 6, 0, 1, 15, 18, 9, 0, 2, 0, 0, 1, 1, 1]' : 0.163851}
{'[5, 0, 0, 0, 2, 6, 0, 1, 15, 18, 9, 0, 2, 0, 0, 1, 1, 1]' : 0.1649}
{'[5, 0, 0, 0, 2, 6, 0, 1, 15, 18, 9, 0, 2, 0, 0, 1, 1, 1]' : 0.164671}
{'[5, 0, 0, 0, 2, 6, 0, 1, 15, 18, 9, 0, 2, 0, 0, 1, 1, 1]' : 0.167476}
{'[5, 0, 0, 0, 2, 6, 0, 1, 15, 18, 9, 0, 2, 0, 0, 1, 1, 1]' : 0.16317}
{'[5, 0, 0, 0, 2, 6, 0, 1, 15, 18, 9, 0, 2, 0, 0, 1, 1, 1]' : 0.162354}
{'[5, 0, 0, 0, 2, 6, 0, 1, 15, 18, 9, 0, 2, 0, 0, 1, 1, 1]' : 0.163724}
{'[5, 0, 0, 0, 2, 6, 0, 1, 15, 18, 9, 0, 2, 0, 0, 1, 1, 1]' : 0.164233}
{'[5, 0, 0, 0, 2, 6, 0, 1, 15, 18, 9, 0, 2, 0, 0, 1, 1, 1]' : 0.164445}
{'[5, 0, 0, 0, 2, 6, 0, 1, 15, 18, 9, 0, 2, 0, 0, 1, 1, 1]' : 0.167318}
{'[5, 0, 0, 0, 2, 6, 0, 1, 15, 18, 9, 0, 2, 0, 0, 1, 1, 1]' : 0.164553}
{'[5, 0, 0, 0, 2, 6, 0, 1, 15, 18, 9, 0, 2, 0, 0, 1, 1, 1]' : 0.165173}
{'[5, 0, 0, 0, 2, 6, 0, 1, 15, 18, 9, 0, 2, 0, 0, 1, 1, 1]' : 0.164651}
{'[5, 0, 0, 0, 2, 6, 0, 1, 15, 18, 9, 0, 2, 0, 0, 1, 1, 1]' : 0.16507}
{'[5, 0, 0, 0, 2, 6, 0, 1, 15, 18, 9, 0, 2, 0, 0, 1, 1, 1]' : 0.166343}
{'[5, 0, 0, 0, 2, 6, 0, 1, 15, 18, 9, 0, 2, 0, 0, 1, 1, 1]' : 0.167414}
{'[5, 0, 0, 0, 2, 6, 0, 1, 15, 18, 9, 0, 2, 0, 0, 1, 1, 1]' : 0.167609}
{'[5, 0, 0, 0, 2, 6, 0, 1, 15, 18, 9, 0, 2, 0, 0, 1, 1, 1]' : 0.167287}
{'[5, 0, 0, 0, 2, 6, 0, 1, 15, 18, 9, 0, 2, 0, 0, 1, 1, 1]' : 0.167039}
{'[5, 0, 0, 0, 2, 6, 0, 1, 15, 18, 9, 0, 2, 0, 0, 1, 1, 1]' : 0.167143}
{'[5, 0, 0, 0, 2, 6, 0, 1, 15, 18, 9, 0, 2, 0, 0, 1, 1, 1]' : 0.16665}
{'[5, 0, 0, 0, 2, 6, 0, 1, 15, 18, 9, 0, 2, 0, 0, 1, 1, 1]' : 0.168577}
{'[5, 0, 0, 0, 2, 6, 0, 1, 15, 18, 9, 0, 2, 0, 0, 1, 1, 1]' : 0.166664}
{'[5, 0, 0, 0, 2, 6, 0, 1, 15, 18, 9, 0, 2, 0, 0, 1, 1, 1]' : 0.168646}
{'[5, 0, 0, 0, 2, 6, 0, 1, 15, 18, 9, 0, 2, 0, 0, 1, 1, 1]' : 0.167199}
{'[5, 0, 0, 0, 2, 6, 0, 1, 15, 18, 9, 0, 2, 0, 0, 1, 1, 1]' : 0.167477}
{'[5, 0, 0, 0, 2, 6, 0, 1, 15, 18, 9, 0, 2, 0, 0, 1, 1, 1]' : 0.164391}
{'[5, 0, 0, 0, 2, 6, 0, 1, 15, 18, 9, 0, 2, 0, 0, 1, 1, 1]' : 0.164664}
{'[5, 0, 0, 0, 2, 6, 0, 1, 15, 18, 9, 0, 2, 0, 0, 1, 1, 1]' : 0.167109}
{'[5, 0, 0, 0, 2, 6, 0, 1, 15, 18, 9, 0, 2, 0, 0, 1, 1, 1]' : 0.167022}

out:
 ["{'[5, 0, 0, 0, 2, 6, 0, 1, 15, 18, 9, 0, 2, 0, 0, 1, 1, 1]' : 0.163851}", "{'[5, 0, 0, 0, 2, 6, 0, 1, 15, 18, 9, 0, 2, 0, 0, 1, 1, 1]' : 0.1649}", "{'[5, 0, 0, 0, 2, 6, 0, 1, 15, 18, 9, 0, 2, 0, 0, 1, 1, 1]' : 0.164671}", "{'[5, 0, 0, 0, 2, 6, 0, 1, 15, 18, 9, 0, 2, 0, 0, 1, 1, 1]' : 0.167476}", "{'[5, 0, 0, 0, 2, 6, 0, 1, 15, 18, 9, 0, 2, 0, 0, 1, 1, 1]' : 0.16317}", "{'[5, 0, 0, 0, 2, 6, 0, 1, 15, 18, 9, 0, 2, 0, 0, 1, 1, 1]' : 0.162354}", "{'[5, 0, 0, 0, 2, 6, 0, 1, 15, 18, 9, 0, 2, 0, 0, 1, 1, 1]' : 0.163724}", "{'[5, 0, 0, 0, 2, 6, 0, 1, 15, 18, 9, 0, 2, 0, 0, 1, 1, 1]' : 0.164233}", "{'[5, 0, 0, 0, 2, 6, 0, 1, 15, 18, 9, 0, 2, 0, 0, 1, 1, 1]' : 0.164445}", "{'[5, 0, 0, 0, 2, 6, 0, 1, 15, 18, 9, 0, 2, 0, 0, 1, 1, 1]' : 0.167318}", "{'[5, 0, 0, 0, 2, 6, 0, 1, 15, 18, 9, 0, 2, 0, 0, 1, 1, 1]' : 0.164553}", "{'[5, 0, 0, 0, 2, 6, 0, 1, 15, 18, 9, 0, 2, 0, 0, 1, 1, 1]' : 0.165173}", "{'[5, 0, 0, 0, 2, 6, 0, 1, 15, 18, 9, 0, 2, 0, 0, 1, 1, 1]' : 0.164651}", "{'[5, 0, 0, 0, 2, 6, 0, 1, 15, 18, 9, 0, 2, 0, 0, 1, 1, 1]' : 0.16507}", "{'[5, 0, 0, 0, 2, 6, 0, 1, 15, 18, 9, 0, 2, 0, 0, 1, 1, 1]' : 0.166343}", "{'[5, 0, 0, 0, 2, 6, 0, 1, 15, 18, 9, 0, 2, 0, 0, 1, 1, 1]' : 0.167414}", "{'[5, 0, 0, 0, 2, 6, 0, 1, 15, 18, 9, 0, 2, 0, 0, 1, 1, 1]' : 0.167609}", "{'[5, 0, 0, 0, 2, 6, 0, 1, 15, 18, 9, 0, 2, 0, 0, 1, 1, 1]' : 0.167287}", "{'[5, 0, 0, 0, 2, 6, 0, 1, 15, 18, 9, 0, 2, 0, 0, 1, 1, 1]' : 0.167039}", "{'[5, 0, 0, 0, 2, 6, 0, 1, 15, 18, 9, 0, 2, 0, 0, 1, 1, 1]' : 0.167143}", "{'[5, 0, 0, 0, 2, 6, 0, 1, 15, 18, 9, 0, 2, 0, 0, 1, 1, 1]' : 0.16665}", "{'[5, 0, 0, 0, 2, 6, 0, 1, 15, 18, 9, 0, 2, 0, 0, 1, 1, 1]' : 0.168577}", "{'[5, 0, 0, 0, 2, 6, 0, 1, 15, 18, 9, 0, 2, 0, 0, 1, 1, 1]' : 0.166664}", "{'[5, 0, 0, 0, 2, 6, 0, 1, 15, 18, 9, 0, 2, 0, 0, 1, 1, 1]' : 0.168646}", "{'[5, 0, 0, 0, 2, 6, 0, 1, 15, 18, 9, 0, 2, 0, 0, 1, 1, 1]' : 0.167199}", "{'[5, 0, 0, 0, 2, 6, 0, 1, 15, 18, 9, 0, 2, 0, 0, 1, 1, 1]' : 0.167477}", "{'[5, 0, 0, 0, 2, 6, 0, 1, 15, 18, 9, 0, 2, 0, 0, 1, 1, 1]' : 0.164391}", "{'[5, 0, 0, 0, 2, 6, 0, 1, 15, 18, 9, 0, 2, 0, 0, 1, 1, 1]' : 0.164664}", "{'[5, 0, 0, 0, 2, 6, 0, 1, 15, 18, 9, 0, 2, 0, 0, 1, 1, 1]' : 0.167109}", "{'[5, 0, 0, 0, 2, 6, 0, 1, 15, 18, 9, 0, 2, 0, 0, 1, 1, 1]' : 0.167022}"]
returning from 'run': {'[5, 0, 0, 0, 2, 6, 0, 1, 15, 18, 9, 0, 2, 0, 0, 1, 1, 1]': ([0.163851, 0.1649, 0.164671, 0.167476, 0.16317, 0.162354, 0.163724, 0.164233, 0.164445, 0.167318, 0.164553, 0.165173, 0.164651, 0.16507, 0.166343, 0.167414, 0.167609, 0.167287, 0.167039, 0.167143, 0.16665, 0.168577, 0.166664, 0.168646, 0.167199, 0.167477, 0.164391, 0.164664, 0.167109, 0.167022], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 0, 0, 0, 2, 6, 0, 1, 15, 18, 9, 0, 2, 0, 0, 1, 1, 1]': ([0.163851, 0.1649, 0.164671, 0.167476, 0.16317, 0.162354, 0.163724, 0.164233, 0.164445, 0.167318, 0.164553, 0.165173, 0.164651, 0.16507, 0.166343, 0.167414, 0.167609, 0.167287, 0.167039, 0.167143, 0.16665, 0.168577, 0.166664, 0.168646, 0.167199, 0.167477, 0.164391, 0.164664, 0.167109, 0.167022], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	111
        Max loop nest depth: 	4
        Additions: 		7723
        Multiplications: 	2440
        Divisions: 		0
        Logical: 		0
        Reads: 			14833
        Writes: 		2840
        Comparisons:		111
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest31.exe __orio_perftest31.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest31.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest31.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest31.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest31.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	25
        Max loop nest depth: 	6
        Additions: 		3951
        Multiplications: 	1900
        Divisions: 		0
        Logical: 		0
        Reads: 			7565
        Writes: 		1262
        Comparisons:		25
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest32.exe __orio_perftest32.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest32.exe  
Program Test Output: 
{'[5, 1, 6, 6, 4, 0, 0, 0, 28, 4, 0, 22, 2, 0, 0, 1, 1, 0]' : 0.196486}
{'[5, 1, 6, 6, 4, 0, 0, 0, 28, 4, 0, 22, 2, 0, 0, 1, 1, 0]' : 0.182019}
{'[5, 1, 6, 6, 4, 0, 0, 0, 28, 4, 0, 22, 2, 0, 0, 1, 1, 0]' : 0.173202}
{'[5, 1, 6, 6, 4, 0, 0, 0, 28, 4, 0, 22, 2, 0, 0, 1, 1, 0]' : 0.172425}
{'[5, 1, 6, 6, 4, 0, 0, 0, 28, 4, 0, 22, 2, 0, 0, 1, 1, 0]' : 0.172465}
{'[5, 1, 6, 6, 4, 0, 0, 0, 28, 4, 0, 22, 2, 0, 0, 1, 1, 0]' : 0.173239}
{'[5, 1, 6, 6, 4, 0, 0, 0, 28, 4, 0, 22, 2, 0, 0, 1, 1, 0]' : 0.173302}
{'[5, 1, 6, 6, 4, 0, 0, 0, 28, 4, 0, 22, 2, 0, 0, 1, 1, 0]' : 0.172797}
{'[5, 1, 6, 6, 4, 0, 0, 0, 28, 4, 0, 22, 2, 0, 0, 1, 1, 0]' : 0.173301}
{'[5, 1, 6, 6, 4, 0, 0, 0, 28, 4, 0, 22, 2, 0, 0, 1, 1, 0]' : 0.173094}
{'[5, 1, 6, 6, 4, 0, 0, 0, 28, 4, 0, 22, 2, 0, 0, 1, 1, 0]' : 0.173023}
{'[5, 1, 6, 6, 4, 0, 0, 0, 28, 4, 0, 22, 2, 0, 0, 1, 1, 0]' : 0.173116}
{'[5, 1, 6, 6, 4, 0, 0, 0, 28, 4, 0, 22, 2, 0, 0, 1, 1, 0]' : 0.173316}
{'[5, 1, 6, 6, 4, 0, 0, 0, 28, 4, 0, 22, 2, 0, 0, 1, 1, 0]' : 0.17295}
{'[5, 1, 6, 6, 4, 0, 0, 0, 28, 4, 0, 22, 2, 0, 0, 1, 1, 0]' : 0.172866}
{'[5, 1, 6, 6, 4, 0, 0, 0, 28, 4, 0, 22, 2, 0, 0, 1, 1, 0]' : 0.172495}
{'[5, 1, 6, 6, 4, 0, 0, 0, 28, 4, 0, 22, 2, 0, 0, 1, 1, 0]' : 0.173066}
{'[5, 1, 6, 6, 4, 0, 0, 0, 28, 4, 0, 22, 2, 0, 0, 1, 1, 0]' : 0.172947}
{'[5, 1, 6, 6, 4, 0, 0, 0, 28, 4, 0, 22, 2, 0, 0, 1, 1, 0]' : 0.172813}
{'[5, 1, 6, 6, 4, 0, 0, 0, 28, 4, 0, 22, 2, 0, 0, 1, 1, 0]' : 0.173412}
{'[5, 1, 6, 6, 4, 0, 0, 0, 28, 4, 0, 22, 2, 0, 0, 1, 1, 0]' : 0.172573}
{'[5, 1, 6, 6, 4, 0, 0, 0, 28, 4, 0, 22, 2, 0, 0, 1, 1, 0]' : 0.173019}
{'[5, 1, 6, 6, 4, 0, 0, 0, 28, 4, 0, 22, 2, 0, 0, 1, 1, 0]' : 0.173253}
{'[5, 1, 6, 6, 4, 0, 0, 0, 28, 4, 0, 22, 2, 0, 0, 1, 1, 0]' : 0.173508}
{'[5, 1, 6, 6, 4, 0, 0, 0, 28, 4, 0, 22, 2, 0, 0, 1, 1, 0]' : 0.173025}
{'[5, 1, 6, 6, 4, 0, 0, 0, 28, 4, 0, 22, 2, 0, 0, 1, 1, 0]' : 0.173185}
{'[5, 1, 6, 6, 4, 0, 0, 0, 28, 4, 0, 22, 2, 0, 0, 1, 1, 0]' : 0.173153}
{'[5, 1, 6, 6, 4, 0, 0, 0, 28, 4, 0, 22, 2, 0, 0, 1, 1, 0]' : 0.172763}
{'[5, 1, 6, 6, 4, 0, 0, 0, 28, 4, 0, 22, 2, 0, 0, 1, 1, 0]' : 0.173271}
{'[5, 1, 6, 6, 4, 0, 0, 0, 28, 4, 0, 22, 2, 0, 0, 1, 1, 0]' : 0.17337}

out:
 ["{'[5, 1, 6, 6, 4, 0, 0, 0, 28, 4, 0, 22, 2, 0, 0, 1, 1, 0]' : 0.196486}", "{'[5, 1, 6, 6, 4, 0, 0, 0, 28, 4, 0, 22, 2, 0, 0, 1, 1, 0]' : 0.182019}", "{'[5, 1, 6, 6, 4, 0, 0, 0, 28, 4, 0, 22, 2, 0, 0, 1, 1, 0]' : 0.173202}", "{'[5, 1, 6, 6, 4, 0, 0, 0, 28, 4, 0, 22, 2, 0, 0, 1, 1, 0]' : 0.172425}", "{'[5, 1, 6, 6, 4, 0, 0, 0, 28, 4, 0, 22, 2, 0, 0, 1, 1, 0]' : 0.172465}", "{'[5, 1, 6, 6, 4, 0, 0, 0, 28, 4, 0, 22, 2, 0, 0, 1, 1, 0]' : 0.173239}", "{'[5, 1, 6, 6, 4, 0, 0, 0, 28, 4, 0, 22, 2, 0, 0, 1, 1, 0]' : 0.173302}", "{'[5, 1, 6, 6, 4, 0, 0, 0, 28, 4, 0, 22, 2, 0, 0, 1, 1, 0]' : 0.172797}", "{'[5, 1, 6, 6, 4, 0, 0, 0, 28, 4, 0, 22, 2, 0, 0, 1, 1, 0]' : 0.173301}", "{'[5, 1, 6, 6, 4, 0, 0, 0, 28, 4, 0, 22, 2, 0, 0, 1, 1, 0]' : 0.173094}", "{'[5, 1, 6, 6, 4, 0, 0, 0, 28, 4, 0, 22, 2, 0, 0, 1, 1, 0]' : 0.173023}", "{'[5, 1, 6, 6, 4, 0, 0, 0, 28, 4, 0, 22, 2, 0, 0, 1, 1, 0]' : 0.173116}", "{'[5, 1, 6, 6, 4, 0, 0, 0, 28, 4, 0, 22, 2, 0, 0, 1, 1, 0]' : 0.173316}", "{'[5, 1, 6, 6, 4, 0, 0, 0, 28, 4, 0, 22, 2, 0, 0, 1, 1, 0]' : 0.17295}", "{'[5, 1, 6, 6, 4, 0, 0, 0, 28, 4, 0, 22, 2, 0, 0, 1, 1, 0]' : 0.172866}", "{'[5, 1, 6, 6, 4, 0, 0, 0, 28, 4, 0, 22, 2, 0, 0, 1, 1, 0]' : 0.172495}", "{'[5, 1, 6, 6, 4, 0, 0, 0, 28, 4, 0, 22, 2, 0, 0, 1, 1, 0]' : 0.173066}", "{'[5, 1, 6, 6, 4, 0, 0, 0, 28, 4, 0, 22, 2, 0, 0, 1, 1, 0]' : 0.172947}", "{'[5, 1, 6, 6, 4, 0, 0, 0, 28, 4, 0, 22, 2, 0, 0, 1, 1, 0]' : 0.172813}", "{'[5, 1, 6, 6, 4, 0, 0, 0, 28, 4, 0, 22, 2, 0, 0, 1, 1, 0]' : 0.173412}", "{'[5, 1, 6, 6, 4, 0, 0, 0, 28, 4, 0, 22, 2, 0, 0, 1, 1, 0]' : 0.172573}", "{'[5, 1, 6, 6, 4, 0, 0, 0, 28, 4, 0, 22, 2, 0, 0, 1, 1, 0]' : 0.173019}", "{'[5, 1, 6, 6, 4, 0, 0, 0, 28, 4, 0, 22, 2, 0, 0, 1, 1, 0]' : 0.173253}", "{'[5, 1, 6, 6, 4, 0, 0, 0, 28, 4, 0, 22, 2, 0, 0, 1, 1, 0]' : 0.173508}", "{'[5, 1, 6, 6, 4, 0, 0, 0, 28, 4, 0, 22, 2, 0, 0, 1, 1, 0]' : 0.173025}", "{'[5, 1, 6, 6, 4, 0, 0, 0, 28, 4, 0, 22, 2, 0, 0, 1, 1, 0]' : 0.173185}", "{'[5, 1, 6, 6, 4, 0, 0, 0, 28, 4, 0, 22, 2, 0, 0, 1, 1, 0]' : 0.173153}", "{'[5, 1, 6, 6, 4, 0, 0, 0, 28, 4, 0, 22, 2, 0, 0, 1, 1, 0]' : 0.172763}", "{'[5, 1, 6, 6, 4, 0, 0, 0, 28, 4, 0, 22, 2, 0, 0, 1, 1, 0]' : 0.173271}", "{'[5, 1, 6, 6, 4, 0, 0, 0, 28, 4, 0, 22, 2, 0, 0, 1, 1, 0]' : 0.17337}"]
returning from 'run': {'[5, 1, 6, 6, 4, 0, 0, 0, 28, 4, 0, 22, 2, 0, 0, 1, 1, 0]': ([0.196486, 0.182019, 0.173202, 0.172425, 0.172465, 0.173239, 0.173302, 0.172797, 0.173301, 0.173094, 0.173023, 0.173116, 0.173316, 0.17295, 0.172866, 0.172495, 0.173066, 0.172947, 0.172813, 0.173412, 0.172573, 0.173019, 0.173253, 0.173508, 0.173025, 0.173185, 0.173153, 0.172763, 0.173271, 0.17337], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 1, 6, 6, 4, 0, 0, 0, 28, 4, 0, 22, 2, 0, 0, 1, 1, 0]': ([0.196486, 0.182019, 0.173202, 0.172425, 0.172465, 0.173239, 0.173302, 0.172797, 0.173301, 0.173094, 0.173023, 0.173116, 0.173316, 0.17295, 0.172866, 0.172495, 0.173066, 0.172947, 0.172813, 0.173412, 0.172573, 0.173019, 0.173253, 0.173508, 0.173025, 0.173185, 0.173153, 0.172763, 0.173271, 0.17337], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	48
        Max loop nest depth: 	5
        Additions: 		10977
        Multiplications: 	3224
        Divisions: 		0
        Logical: 		0
        Reads: 			16721
        Writes: 		1783
        Comparisons:		48
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest33.exe __orio_perftest33.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest33.exe  
Program Test Output: 
{'[2, 6, 3, 0, 6, 2, 1, 0, 28, 18, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.25084}
{'[2, 6, 3, 0, 6, 2, 1, 0, 28, 18, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.247398}
{'[2, 6, 3, 0, 6, 2, 1, 0, 28, 18, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.219084}
{'[2, 6, 3, 0, 6, 2, 1, 0, 28, 18, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.222847}
{'[2, 6, 3, 0, 6, 2, 1, 0, 28, 18, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.213143}
{'[2, 6, 3, 0, 6, 2, 1, 0, 28, 18, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.219369}
{'[2, 6, 3, 0, 6, 2, 1, 0, 28, 18, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.218893}
{'[2, 6, 3, 0, 6, 2, 1, 0, 28, 18, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.22014}
{'[2, 6, 3, 0, 6, 2, 1, 0, 28, 18, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.2168}
{'[2, 6, 3, 0, 6, 2, 1, 0, 28, 18, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.217773}
{'[2, 6, 3, 0, 6, 2, 1, 0, 28, 18, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.22098}
{'[2, 6, 3, 0, 6, 2, 1, 0, 28, 18, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.215772}
{'[2, 6, 3, 0, 6, 2, 1, 0, 28, 18, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.214966}
{'[2, 6, 3, 0, 6, 2, 1, 0, 28, 18, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.2111}
{'[2, 6, 3, 0, 6, 2, 1, 0, 28, 18, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.220637}
{'[2, 6, 3, 0, 6, 2, 1, 0, 28, 18, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.219017}
{'[2, 6, 3, 0, 6, 2, 1, 0, 28, 18, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.219118}
{'[2, 6, 3, 0, 6, 2, 1, 0, 28, 18, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.218135}
{'[2, 6, 3, 0, 6, 2, 1, 0, 28, 18, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.215396}
{'[2, 6, 3, 0, 6, 2, 1, 0, 28, 18, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.222272}
{'[2, 6, 3, 0, 6, 2, 1, 0, 28, 18, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.21705}
{'[2, 6, 3, 0, 6, 2, 1, 0, 28, 18, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.219891}
{'[2, 6, 3, 0, 6, 2, 1, 0, 28, 18, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.215635}
{'[2, 6, 3, 0, 6, 2, 1, 0, 28, 18, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.217038}
{'[2, 6, 3, 0, 6, 2, 1, 0, 28, 18, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.213078}
{'[2, 6, 3, 0, 6, 2, 1, 0, 28, 18, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.215744}
{'[2, 6, 3, 0, 6, 2, 1, 0, 28, 18, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.216169}
{'[2, 6, 3, 0, 6, 2, 1, 0, 28, 18, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.214789}
{'[2, 6, 3, 0, 6, 2, 1, 0, 28, 18, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.220204}
{'[2, 6, 3, 0, 6, 2, 1, 0, 28, 18, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.217179}

out:
 ["{'[2, 6, 3, 0, 6, 2, 1, 0, 28, 18, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.25084}", "{'[2, 6, 3, 0, 6, 2, 1, 0, 28, 18, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.247398}", "{'[2, 6, 3, 0, 6, 2, 1, 0, 28, 18, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.219084}", "{'[2, 6, 3, 0, 6, 2, 1, 0, 28, 18, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.222847}", "{'[2, 6, 3, 0, 6, 2, 1, 0, 28, 18, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.213143}", "{'[2, 6, 3, 0, 6, 2, 1, 0, 28, 18, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.219369}", "{'[2, 6, 3, 0, 6, 2, 1, 0, 28, 18, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.218893}", "{'[2, 6, 3, 0, 6, 2, 1, 0, 28, 18, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.22014}", "{'[2, 6, 3, 0, 6, 2, 1, 0, 28, 18, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.2168}", "{'[2, 6, 3, 0, 6, 2, 1, 0, 28, 18, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.217773}", "{'[2, 6, 3, 0, 6, 2, 1, 0, 28, 18, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.22098}", "{'[2, 6, 3, 0, 6, 2, 1, 0, 28, 18, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.215772}", "{'[2, 6, 3, 0, 6, 2, 1, 0, 28, 18, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.214966}", "{'[2, 6, 3, 0, 6, 2, 1, 0, 28, 18, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.2111}", "{'[2, 6, 3, 0, 6, 2, 1, 0, 28, 18, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.220637}", "{'[2, 6, 3, 0, 6, 2, 1, 0, 28, 18, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.219017}", "{'[2, 6, 3, 0, 6, 2, 1, 0, 28, 18, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.219118}", "{'[2, 6, 3, 0, 6, 2, 1, 0, 28, 18, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.218135}", "{'[2, 6, 3, 0, 6, 2, 1, 0, 28, 18, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.215396}", "{'[2, 6, 3, 0, 6, 2, 1, 0, 28, 18, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.222272}", "{'[2, 6, 3, 0, 6, 2, 1, 0, 28, 18, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.21705}", "{'[2, 6, 3, 0, 6, 2, 1, 0, 28, 18, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.219891}", "{'[2, 6, 3, 0, 6, 2, 1, 0, 28, 18, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.215635}", "{'[2, 6, 3, 0, 6, 2, 1, 0, 28, 18, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.217038}", "{'[2, 6, 3, 0, 6, 2, 1, 0, 28, 18, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.213078}", "{'[2, 6, 3, 0, 6, 2, 1, 0, 28, 18, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.215744}", "{'[2, 6, 3, 0, 6, 2, 1, 0, 28, 18, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.216169}", "{'[2, 6, 3, 0, 6, 2, 1, 0, 28, 18, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.214789}", "{'[2, 6, 3, 0, 6, 2, 1, 0, 28, 18, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.220204}", "{'[2, 6, 3, 0, 6, 2, 1, 0, 28, 18, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.217179}"]
returning from 'run': {'[2, 6, 3, 0, 6, 2, 1, 0, 28, 18, 0, 28, 2, 0, 0, 0, 1, 0]': ([0.25084, 0.247398, 0.219084, 0.222847, 0.213143, 0.219369, 0.218893, 0.22014, 0.2168, 0.217773, 0.22098, 0.215772, 0.214966, 0.2111, 0.220637, 0.219017, 0.219118, 0.218135, 0.215396, 0.222272, 0.21705, 0.219891, 0.215635, 0.217038, 0.213078, 0.215744, 0.216169, 0.214789, 0.220204, 0.217179], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 6, 3, 0, 6, 2, 1, 0, 28, 18, 0, 28, 2, 0, 0, 0, 1, 0]': ([0.25084, 0.247398, 0.219084, 0.222847, 0.213143, 0.219369, 0.218893, 0.22014, 0.2168, 0.217773, 0.22098, 0.215772, 0.214966, 0.2111, 0.220637, 0.219017, 0.219118, 0.218135, 0.215396, 0.222272, 0.21705, 0.219891, 0.215635, 0.217038, 0.213078, 0.215744, 0.216169, 0.214789, 0.220204, 0.217179], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		334
        Multiplications: 	134
        Divisions: 		0
        Logical: 		0
        Reads: 			734
        Writes: 		139
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest34.exe __orio_perftest34.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest34.exe  
Program Test Output: 
{'[0, 6, 2, 0, 6, 1, 0, 0, 6, 0, 16, 15, 0, 2, 0, 1, 1, 0]' : 0.183551}
{'[0, 6, 2, 0, 6, 1, 0, 0, 6, 0, 16, 15, 0, 2, 0, 1, 1, 0]' : 0.185659}
{'[0, 6, 2, 0, 6, 1, 0, 0, 6, 0, 16, 15, 0, 2, 0, 1, 1, 0]' : 0.184749}
{'[0, 6, 2, 0, 6, 1, 0, 0, 6, 0, 16, 15, 0, 2, 0, 1, 1, 0]' : 0.173852}
{'[0, 6, 2, 0, 6, 1, 0, 0, 6, 0, 16, 15, 0, 2, 0, 1, 1, 0]' : 0.158804}
{'[0, 6, 2, 0, 6, 1, 0, 0, 6, 0, 16, 15, 0, 2, 0, 1, 1, 0]' : 0.158933}
{'[0, 6, 2, 0, 6, 1, 0, 0, 6, 0, 16, 15, 0, 2, 0, 1, 1, 0]' : 0.158636}
{'[0, 6, 2, 0, 6, 1, 0, 0, 6, 0, 16, 15, 0, 2, 0, 1, 1, 0]' : 0.158598}
{'[0, 6, 2, 0, 6, 1, 0, 0, 6, 0, 16, 15, 0, 2, 0, 1, 1, 0]' : 0.158798}
{'[0, 6, 2, 0, 6, 1, 0, 0, 6, 0, 16, 15, 0, 2, 0, 1, 1, 0]' : 0.159167}
{'[0, 6, 2, 0, 6, 1, 0, 0, 6, 0, 16, 15, 0, 2, 0, 1, 1, 0]' : 0.15787}
{'[0, 6, 2, 0, 6, 1, 0, 0, 6, 0, 16, 15, 0, 2, 0, 1, 1, 0]' : 0.158458}
{'[0, 6, 2, 0, 6, 1, 0, 0, 6, 0, 16, 15, 0, 2, 0, 1, 1, 0]' : 0.158838}
{'[0, 6, 2, 0, 6, 1, 0, 0, 6, 0, 16, 15, 0, 2, 0, 1, 1, 0]' : 0.158777}
{'[0, 6, 2, 0, 6, 1, 0, 0, 6, 0, 16, 15, 0, 2, 0, 1, 1, 0]' : 0.158757}
{'[0, 6, 2, 0, 6, 1, 0, 0, 6, 0, 16, 15, 0, 2, 0, 1, 1, 0]' : 0.158804}
{'[0, 6, 2, 0, 6, 1, 0, 0, 6, 0, 16, 15, 0, 2, 0, 1, 1, 0]' : 0.159007}
{'[0, 6, 2, 0, 6, 1, 0, 0, 6, 0, 16, 15, 0, 2, 0, 1, 1, 0]' : 0.158844}
{'[0, 6, 2, 0, 6, 1, 0, 0, 6, 0, 16, 15, 0, 2, 0, 1, 1, 0]' : 0.15882}
{'[0, 6, 2, 0, 6, 1, 0, 0, 6, 0, 16, 15, 0, 2, 0, 1, 1, 0]' : 0.158782}
{'[0, 6, 2, 0, 6, 1, 0, 0, 6, 0, 16, 15, 0, 2, 0, 1, 1, 0]' : 0.162444}
{'[0, 6, 2, 0, 6, 1, 0, 0, 6, 0, 16, 15, 0, 2, 0, 1, 1, 0]' : 0.159202}
{'[0, 6, 2, 0, 6, 1, 0, 0, 6, 0, 16, 15, 0, 2, 0, 1, 1, 0]' : 0.158672}
{'[0, 6, 2, 0, 6, 1, 0, 0, 6, 0, 16, 15, 0, 2, 0, 1, 1, 0]' : 0.156604}
{'[0, 6, 2, 0, 6, 1, 0, 0, 6, 0, 16, 15, 0, 2, 0, 1, 1, 0]' : 0.156667}
{'[0, 6, 2, 0, 6, 1, 0, 0, 6, 0, 16, 15, 0, 2, 0, 1, 1, 0]' : 0.159206}
{'[0, 6, 2, 0, 6, 1, 0, 0, 6, 0, 16, 15, 0, 2, 0, 1, 1, 0]' : 0.158786}
{'[0, 6, 2, 0, 6, 1, 0, 0, 6, 0, 16, 15, 0, 2, 0, 1, 1, 0]' : 0.158981}
{'[0, 6, 2, 0, 6, 1, 0, 0, 6, 0, 16, 15, 0, 2, 0, 1, 1, 0]' : 0.158724}
{'[0, 6, 2, 0, 6, 1, 0, 0, 6, 0, 16, 15, 0, 2, 0, 1, 1, 0]' : 0.158841}

out:
 ["{'[0, 6, 2, 0, 6, 1, 0, 0, 6, 0, 16, 15, 0, 2, 0, 1, 1, 0]' : 0.183551}", "{'[0, 6, 2, 0, 6, 1, 0, 0, 6, 0, 16, 15, 0, 2, 0, 1, 1, 0]' : 0.185659}", "{'[0, 6, 2, 0, 6, 1, 0, 0, 6, 0, 16, 15, 0, 2, 0, 1, 1, 0]' : 0.184749}", "{'[0, 6, 2, 0, 6, 1, 0, 0, 6, 0, 16, 15, 0, 2, 0, 1, 1, 0]' : 0.173852}", "{'[0, 6, 2, 0, 6, 1, 0, 0, 6, 0, 16, 15, 0, 2, 0, 1, 1, 0]' : 0.158804}", "{'[0, 6, 2, 0, 6, 1, 0, 0, 6, 0, 16, 15, 0, 2, 0, 1, 1, 0]' : 0.158933}", "{'[0, 6, 2, 0, 6, 1, 0, 0, 6, 0, 16, 15, 0, 2, 0, 1, 1, 0]' : 0.158636}", "{'[0, 6, 2, 0, 6, 1, 0, 0, 6, 0, 16, 15, 0, 2, 0, 1, 1, 0]' : 0.158598}", "{'[0, 6, 2, 0, 6, 1, 0, 0, 6, 0, 16, 15, 0, 2, 0, 1, 1, 0]' : 0.158798}", "{'[0, 6, 2, 0, 6, 1, 0, 0, 6, 0, 16, 15, 0, 2, 0, 1, 1, 0]' : 0.159167}", "{'[0, 6, 2, 0, 6, 1, 0, 0, 6, 0, 16, 15, 0, 2, 0, 1, 1, 0]' : 0.15787}", "{'[0, 6, 2, 0, 6, 1, 0, 0, 6, 0, 16, 15, 0, 2, 0, 1, 1, 0]' : 0.158458}", "{'[0, 6, 2, 0, 6, 1, 0, 0, 6, 0, 16, 15, 0, 2, 0, 1, 1, 0]' : 0.158838}", "{'[0, 6, 2, 0, 6, 1, 0, 0, 6, 0, 16, 15, 0, 2, 0, 1, 1, 0]' : 0.158777}", "{'[0, 6, 2, 0, 6, 1, 0, 0, 6, 0, 16, 15, 0, 2, 0, 1, 1, 0]' : 0.158757}", "{'[0, 6, 2, 0, 6, 1, 0, 0, 6, 0, 16, 15, 0, 2, 0, 1, 1, 0]' : 0.158804}", "{'[0, 6, 2, 0, 6, 1, 0, 0, 6, 0, 16, 15, 0, 2, 0, 1, 1, 0]' : 0.159007}", "{'[0, 6, 2, 0, 6, 1, 0, 0, 6, 0, 16, 15, 0, 2, 0, 1, 1, 0]' : 0.158844}", "{'[0, 6, 2, 0, 6, 1, 0, 0, 6, 0, 16, 15, 0, 2, 0, 1, 1, 0]' : 0.15882}", "{'[0, 6, 2, 0, 6, 1, 0, 0, 6, 0, 16, 15, 0, 2, 0, 1, 1, 0]' : 0.158782}", "{'[0, 6, 2, 0, 6, 1, 0, 0, 6, 0, 16, 15, 0, 2, 0, 1, 1, 0]' : 0.162444}", "{'[0, 6, 2, 0, 6, 1, 0, 0, 6, 0, 16, 15, 0, 2, 0, 1, 1, 0]' : 0.159202}", "{'[0, 6, 2, 0, 6, 1, 0, 0, 6, 0, 16, 15, 0, 2, 0, 1, 1, 0]' : 0.158672}", "{'[0, 6, 2, 0, 6, 1, 0, 0, 6, 0, 16, 15, 0, 2, 0, 1, 1, 0]' : 0.156604}", "{'[0, 6, 2, 0, 6, 1, 0, 0, 6, 0, 16, 15, 0, 2, 0, 1, 1, 0]' : 0.156667}", "{'[0, 6, 2, 0, 6, 1, 0, 0, 6, 0, 16, 15, 0, 2, 0, 1, 1, 0]' : 0.159206}", "{'[0, 6, 2, 0, 6, 1, 0, 0, 6, 0, 16, 15, 0, 2, 0, 1, 1, 0]' : 0.158786}", "{'[0, 6, 2, 0, 6, 1, 0, 0, 6, 0, 16, 15, 0, 2, 0, 1, 1, 0]' : 0.158981}", "{'[0, 6, 2, 0, 6, 1, 0, 0, 6, 0, 16, 15, 0, 2, 0, 1, 1, 0]' : 0.158724}", "{'[0, 6, 2, 0, 6, 1, 0, 0, 6, 0, 16, 15, 0, 2, 0, 1, 1, 0]' : 0.158841}"]
returning from 'run': {'[0, 6, 2, 0, 6, 1, 0, 0, 6, 0, 16, 15, 0, 2, 0, 1, 1, 0]': ([0.183551, 0.185659, 0.184749, 0.173852, 0.158804, 0.158933, 0.158636, 0.158598, 0.158798, 0.159167, 0.15787, 0.158458, 0.158838, 0.158777, 0.158757, 0.158804, 0.159007, 0.158844, 0.15882, 0.158782, 0.162444, 0.159202, 0.158672, 0.156604, 0.156667, 0.159206, 0.158786, 0.158981, 0.158724, 0.158841], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 2, 0, 6, 1, 0, 0, 6, 0, 16, 15, 0, 2, 0, 1, 1, 0]': ([0.183551, 0.185659, 0.184749, 0.173852, 0.158804, 0.158933, 0.158636, 0.158598, 0.158798, 0.159167, 0.15787, 0.158458, 0.158838, 0.158777, 0.158757, 0.158804, 0.159007, 0.158844, 0.15882, 0.158782, 0.162444, 0.159202, 0.158672, 0.156604, 0.156667, 0.159206, 0.158786, 0.158981, 0.158724, 0.158841], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = kkk
Code stats:
        Number of loops: 	17
        Max loop nest depth: 	4
        Additions: 		2770
        Multiplications: 	684
        Divisions: 		0
        Logical: 		0
        Reads: 			4117
        Writes: 		391
        Comparisons:		17
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest35.exe __orio_perftest35.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest35.exe  
Program Test Output: 
{'[0, 0, 5, 6, 0, 3, 1, 1, 4, 0, 14, 28, 1, 1, 0, 0, 1, 0]' : 0.109662}
{'[0, 0, 5, 6, 0, 3, 1, 1, 4, 0, 14, 28, 1, 1, 0, 0, 1, 0]' : 0.109213}
{'[0, 0, 5, 6, 0, 3, 1, 1, 4, 0, 14, 28, 1, 1, 0, 0, 1, 0]' : 0.109396}
{'[0, 0, 5, 6, 0, 3, 1, 1, 4, 0, 14, 28, 1, 1, 0, 0, 1, 0]' : 0.109659}
{'[0, 0, 5, 6, 0, 3, 1, 1, 4, 0, 14, 28, 1, 1, 0, 0, 1, 0]' : 0.110414}
{'[0, 0, 5, 6, 0, 3, 1, 1, 4, 0, 14, 28, 1, 1, 0, 0, 1, 0]' : 0.111824}
{'[0, 0, 5, 6, 0, 3, 1, 1, 4, 0, 14, 28, 1, 1, 0, 0, 1, 0]' : 0.111576}
{'[0, 0, 5, 6, 0, 3, 1, 1, 4, 0, 14, 28, 1, 1, 0, 0, 1, 0]' : 0.111704}
{'[0, 0, 5, 6, 0, 3, 1, 1, 4, 0, 14, 28, 1, 1, 0, 0, 1, 0]' : 0.111668}
{'[0, 0, 5, 6, 0, 3, 1, 1, 4, 0, 14, 28, 1, 1, 0, 0, 1, 0]' : 0.111794}
{'[0, 0, 5, 6, 0, 3, 1, 1, 4, 0, 14, 28, 1, 1, 0, 0, 1, 0]' : 0.111545}
{'[0, 0, 5, 6, 0, 3, 1, 1, 4, 0, 14, 28, 1, 1, 0, 0, 1, 0]' : 0.111803}
{'[0, 0, 5, 6, 0, 3, 1, 1, 4, 0, 14, 28, 1, 1, 0, 0, 1, 0]' : 0.111717}
{'[0, 0, 5, 6, 0, 3, 1, 1, 4, 0, 14, 28, 1, 1, 0, 0, 1, 0]' : 0.110263}
{'[0, 0, 5, 6, 0, 3, 1, 1, 4, 0, 14, 28, 1, 1, 0, 0, 1, 0]' : 0.109945}
{'[0, 0, 5, 6, 0, 3, 1, 1, 4, 0, 14, 28, 1, 1, 0, 0, 1, 0]' : 0.109354}
{'[0, 0, 5, 6, 0, 3, 1, 1, 4, 0, 14, 28, 1, 1, 0, 0, 1, 0]' : 0.109166}
{'[0, 0, 5, 6, 0, 3, 1, 1, 4, 0, 14, 28, 1, 1, 0, 0, 1, 0]' : 0.108683}
{'[0, 0, 5, 6, 0, 3, 1, 1, 4, 0, 14, 28, 1, 1, 0, 0, 1, 0]' : 0.106713}
{'[0, 0, 5, 6, 0, 3, 1, 1, 4, 0, 14, 28, 1, 1, 0, 0, 1, 0]' : 0.109195}
{'[0, 0, 5, 6, 0, 3, 1, 1, 4, 0, 14, 28, 1, 1, 0, 0, 1, 0]' : 0.109149}
{'[0, 0, 5, 6, 0, 3, 1, 1, 4, 0, 14, 28, 1, 1, 0, 0, 1, 0]' : 0.109337}
{'[0, 0, 5, 6, 0, 3, 1, 1, 4, 0, 14, 28, 1, 1, 0, 0, 1, 0]' : 0.109376}
{'[0, 0, 5, 6, 0, 3, 1, 1, 4, 0, 14, 28, 1, 1, 0, 0, 1, 0]' : 0.110683}
{'[0, 0, 5, 6, 0, 3, 1, 1, 4, 0, 14, 28, 1, 1, 0, 0, 1, 0]' : 0.109534}
{'[0, 0, 5, 6, 0, 3, 1, 1, 4, 0, 14, 28, 1, 1, 0, 0, 1, 0]' : 0.106376}
{'[0, 0, 5, 6, 0, 3, 1, 1, 4, 0, 14, 28, 1, 1, 0, 0, 1, 0]' : 0.10619}
{'[0, 0, 5, 6, 0, 3, 1, 1, 4, 0, 14, 28, 1, 1, 0, 0, 1, 0]' : 0.106789}
{'[0, 0, 5, 6, 0, 3, 1, 1, 4, 0, 14, 28, 1, 1, 0, 0, 1, 0]' : 0.109477}
{'[0, 0, 5, 6, 0, 3, 1, 1, 4, 0, 14, 28, 1, 1, 0, 0, 1, 0]' : 0.109076}

out:
 ["{'[0, 0, 5, 6, 0, 3, 1, 1, 4, 0, 14, 28, 1, 1, 0, 0, 1, 0]' : 0.109662}", "{'[0, 0, 5, 6, 0, 3, 1, 1, 4, 0, 14, 28, 1, 1, 0, 0, 1, 0]' : 0.109213}", "{'[0, 0, 5, 6, 0, 3, 1, 1, 4, 0, 14, 28, 1, 1, 0, 0, 1, 0]' : 0.109396}", "{'[0, 0, 5, 6, 0, 3, 1, 1, 4, 0, 14, 28, 1, 1, 0, 0, 1, 0]' : 0.109659}", "{'[0, 0, 5, 6, 0, 3, 1, 1, 4, 0, 14, 28, 1, 1, 0, 0, 1, 0]' : 0.110414}", "{'[0, 0, 5, 6, 0, 3, 1, 1, 4, 0, 14, 28, 1, 1, 0, 0, 1, 0]' : 0.111824}", "{'[0, 0, 5, 6, 0, 3, 1, 1, 4, 0, 14, 28, 1, 1, 0, 0, 1, 0]' : 0.111576}", "{'[0, 0, 5, 6, 0, 3, 1, 1, 4, 0, 14, 28, 1, 1, 0, 0, 1, 0]' : 0.111704}", "{'[0, 0, 5, 6, 0, 3, 1, 1, 4, 0, 14, 28, 1, 1, 0, 0, 1, 0]' : 0.111668}", "{'[0, 0, 5, 6, 0, 3, 1, 1, 4, 0, 14, 28, 1, 1, 0, 0, 1, 0]' : 0.111794}", "{'[0, 0, 5, 6, 0, 3, 1, 1, 4, 0, 14, 28, 1, 1, 0, 0, 1, 0]' : 0.111545}", "{'[0, 0, 5, 6, 0, 3, 1, 1, 4, 0, 14, 28, 1, 1, 0, 0, 1, 0]' : 0.111803}", "{'[0, 0, 5, 6, 0, 3, 1, 1, 4, 0, 14, 28, 1, 1, 0, 0, 1, 0]' : 0.111717}", "{'[0, 0, 5, 6, 0, 3, 1, 1, 4, 0, 14, 28, 1, 1, 0, 0, 1, 0]' : 0.110263}", "{'[0, 0, 5, 6, 0, 3, 1, 1, 4, 0, 14, 28, 1, 1, 0, 0, 1, 0]' : 0.109945}", "{'[0, 0, 5, 6, 0, 3, 1, 1, 4, 0, 14, 28, 1, 1, 0, 0, 1, 0]' : 0.109354}", "{'[0, 0, 5, 6, 0, 3, 1, 1, 4, 0, 14, 28, 1, 1, 0, 0, 1, 0]' : 0.109166}", "{'[0, 0, 5, 6, 0, 3, 1, 1, 4, 0, 14, 28, 1, 1, 0, 0, 1, 0]' : 0.108683}", "{'[0, 0, 5, 6, 0, 3, 1, 1, 4, 0, 14, 28, 1, 1, 0, 0, 1, 0]' : 0.106713}", "{'[0, 0, 5, 6, 0, 3, 1, 1, 4, 0, 14, 28, 1, 1, 0, 0, 1, 0]' : 0.109195}", "{'[0, 0, 5, 6, 0, 3, 1, 1, 4, 0, 14, 28, 1, 1, 0, 0, 1, 0]' : 0.109149}", "{'[0, 0, 5, 6, 0, 3, 1, 1, 4, 0, 14, 28, 1, 1, 0, 0, 1, 0]' : 0.109337}", "{'[0, 0, 5, 6, 0, 3, 1, 1, 4, 0, 14, 28, 1, 1, 0, 0, 1, 0]' : 0.109376}", "{'[0, 0, 5, 6, 0, 3, 1, 1, 4, 0, 14, 28, 1, 1, 0, 0, 1, 0]' : 0.110683}", "{'[0, 0, 5, 6, 0, 3, 1, 1, 4, 0, 14, 28, 1, 1, 0, 0, 1, 0]' : 0.109534}", "{'[0, 0, 5, 6, 0, 3, 1, 1, 4, 0, 14, 28, 1, 1, 0, 0, 1, 0]' : 0.106376}", "{'[0, 0, 5, 6, 0, 3, 1, 1, 4, 0, 14, 28, 1, 1, 0, 0, 1, 0]' : 0.10619}", "{'[0, 0, 5, 6, 0, 3, 1, 1, 4, 0, 14, 28, 1, 1, 0, 0, 1, 0]' : 0.106789}", "{'[0, 0, 5, 6, 0, 3, 1, 1, 4, 0, 14, 28, 1, 1, 0, 0, 1, 0]' : 0.109477}", "{'[0, 0, 5, 6, 0, 3, 1, 1, 4, 0, 14, 28, 1, 1, 0, 0, 1, 0]' : 0.109076}"]
returning from 'run': {'[0, 0, 5, 6, 0, 3, 1, 1, 4, 0, 14, 28, 1, 1, 0, 0, 1, 0]': ([0.109662, 0.109213, 0.109396, 0.109659, 0.110414, 0.111824, 0.111576, 0.111704, 0.111668, 0.111794, 0.111545, 0.111803, 0.111717, 0.110263, 0.109945, 0.109354, 0.109166, 0.108683, 0.106713, 0.109195, 0.109149, 0.109337, 0.109376, 0.110683, 0.109534, 0.106376, 0.10619, 0.106789, 0.109477, 0.109076], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 5, 6, 0, 3, 1, 1, 4, 0, 14, 28, 1, 1, 0, 0, 1, 0]': ([0.109662, 0.109213, 0.109396, 0.109659, 0.110414, 0.111824, 0.111576, 0.111704, 0.111668, 0.111794, 0.111545, 0.111803, 0.111717, 0.110263, 0.109945, 0.109354, 0.109166, 0.108683, 0.106713, 0.109195, 0.109149, 0.109337, 0.109376, 0.110683, 0.109534, 0.106376, 0.10619, 0.106789, 0.109477, 0.109076], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = iii
Code stats:
        Number of loops: 	27
        Max loop nest depth: 	5
        Additions: 		747
        Multiplications: 	310
        Divisions: 		0
        Logical: 		0
        Reads: 			1541
        Writes: 		291
        Comparisons:		27
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest36.exe __orio_perftest36.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest36.exe  
Program Test Output: 
{'[4, 3, 0, 2, 6, 5, 0, 1, 21, 3, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.172478}
{'[4, 3, 0, 2, 6, 5, 0, 1, 21, 3, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.172307}
{'[4, 3, 0, 2, 6, 5, 0, 1, 21, 3, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.147972}
{'[4, 3, 0, 2, 6, 5, 0, 1, 21, 3, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.144581}
{'[4, 3, 0, 2, 6, 5, 0, 1, 21, 3, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.144592}
{'[4, 3, 0, 2, 6, 5, 0, 1, 21, 3, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.144679}
{'[4, 3, 0, 2, 6, 5, 0, 1, 21, 3, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.144591}
{'[4, 3, 0, 2, 6, 5, 0, 1, 21, 3, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.144586}
{'[4, 3, 0, 2, 6, 5, 0, 1, 21, 3, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.144543}
{'[4, 3, 0, 2, 6, 5, 0, 1, 21, 3, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.14457}
{'[4, 3, 0, 2, 6, 5, 0, 1, 21, 3, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.14457}
{'[4, 3, 0, 2, 6, 5, 0, 1, 21, 3, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.14457}
{'[4, 3, 0, 2, 6, 5, 0, 1, 21, 3, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.144626}
{'[4, 3, 0, 2, 6, 5, 0, 1, 21, 3, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.144553}
{'[4, 3, 0, 2, 6, 5, 0, 1, 21, 3, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.144815}
{'[4, 3, 0, 2, 6, 5, 0, 1, 21, 3, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.144653}
{'[4, 3, 0, 2, 6, 5, 0, 1, 21, 3, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.144618}
{'[4, 3, 0, 2, 6, 5, 0, 1, 21, 3, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.144582}
{'[4, 3, 0, 2, 6, 5, 0, 1, 21, 3, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.144679}
{'[4, 3, 0, 2, 6, 5, 0, 1, 21, 3, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.144599}
{'[4, 3, 0, 2, 6, 5, 0, 1, 21, 3, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.144557}
{'[4, 3, 0, 2, 6, 5, 0, 1, 21, 3, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.144597}
{'[4, 3, 0, 2, 6, 5, 0, 1, 21, 3, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.144582}
{'[4, 3, 0, 2, 6, 5, 0, 1, 21, 3, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.144623}
{'[4, 3, 0, 2, 6, 5, 0, 1, 21, 3, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.144777}
{'[4, 3, 0, 2, 6, 5, 0, 1, 21, 3, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.144722}
{'[4, 3, 0, 2, 6, 5, 0, 1, 21, 3, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.144727}
{'[4, 3, 0, 2, 6, 5, 0, 1, 21, 3, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.144625}
{'[4, 3, 0, 2, 6, 5, 0, 1, 21, 3, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.144807}
{'[4, 3, 0, 2, 6, 5, 0, 1, 21, 3, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.144612}

out:
 ["{'[4, 3, 0, 2, 6, 5, 0, 1, 21, 3, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.172478}", "{'[4, 3, 0, 2, 6, 5, 0, 1, 21, 3, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.172307}", "{'[4, 3, 0, 2, 6, 5, 0, 1, 21, 3, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.147972}", "{'[4, 3, 0, 2, 6, 5, 0, 1, 21, 3, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.144581}", "{'[4, 3, 0, 2, 6, 5, 0, 1, 21, 3, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.144592}", "{'[4, 3, 0, 2, 6, 5, 0, 1, 21, 3, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.144679}", "{'[4, 3, 0, 2, 6, 5, 0, 1, 21, 3, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.144591}", "{'[4, 3, 0, 2, 6, 5, 0, 1, 21, 3, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.144586}", "{'[4, 3, 0, 2, 6, 5, 0, 1, 21, 3, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.144543}", "{'[4, 3, 0, 2, 6, 5, 0, 1, 21, 3, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.14457}", "{'[4, 3, 0, 2, 6, 5, 0, 1, 21, 3, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.14457}", "{'[4, 3, 0, 2, 6, 5, 0, 1, 21, 3, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.14457}", "{'[4, 3, 0, 2, 6, 5, 0, 1, 21, 3, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.144626}", "{'[4, 3, 0, 2, 6, 5, 0, 1, 21, 3, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.144553}", "{'[4, 3, 0, 2, 6, 5, 0, 1, 21, 3, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.144815}", "{'[4, 3, 0, 2, 6, 5, 0, 1, 21, 3, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.144653}", "{'[4, 3, 0, 2, 6, 5, 0, 1, 21, 3, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.144618}", "{'[4, 3, 0, 2, 6, 5, 0, 1, 21, 3, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.144582}", "{'[4, 3, 0, 2, 6, 5, 0, 1, 21, 3, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.144679}", "{'[4, 3, 0, 2, 6, 5, 0, 1, 21, 3, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.144599}", "{'[4, 3, 0, 2, 6, 5, 0, 1, 21, 3, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.144557}", "{'[4, 3, 0, 2, 6, 5, 0, 1, 21, 3, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.144597}", "{'[4, 3, 0, 2, 6, 5, 0, 1, 21, 3, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.144582}", "{'[4, 3, 0, 2, 6, 5, 0, 1, 21, 3, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.144623}", "{'[4, 3, 0, 2, 6, 5, 0, 1, 21, 3, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.144777}", "{'[4, 3, 0, 2, 6, 5, 0, 1, 21, 3, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.144722}", "{'[4, 3, 0, 2, 6, 5, 0, 1, 21, 3, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.144727}", "{'[4, 3, 0, 2, 6, 5, 0, 1, 21, 3, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.144625}", "{'[4, 3, 0, 2, 6, 5, 0, 1, 21, 3, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.144807}", "{'[4, 3, 0, 2, 6, 5, 0, 1, 21, 3, 28, 0, 0, 0, 0, 1, 0, 0]' : 0.144612}"]
returning from 'run': {'[4, 3, 0, 2, 6, 5, 0, 1, 21, 3, 28, 0, 0, 0, 0, 1, 0, 0]': ([0.172478, 0.172307, 0.147972, 0.144581, 0.144592, 0.144679, 0.144591, 0.144586, 0.144543, 0.14457, 0.14457, 0.14457, 0.144626, 0.144553, 0.144815, 0.144653, 0.144618, 0.144582, 0.144679, 0.144599, 0.144557, 0.144597, 0.144582, 0.144623, 0.144777, 0.144722, 0.144727, 0.144625, 0.144807, 0.144612], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 3, 0, 2, 6, 5, 0, 1, 21, 3, 28, 0, 0, 0, 0, 1, 0, 0]': ([0.172478, 0.172307, 0.147972, 0.144581, 0.144592, 0.144679, 0.144591, 0.144586, 0.144543, 0.14457, 0.14457, 0.14457, 0.144626, 0.144553, 0.144815, 0.144653, 0.144618, 0.144582, 0.144679, 0.144599, 0.144557, 0.144597, 0.144582, 0.144623, 0.144777, 0.144722, 0.144727, 0.144625, 0.144807, 0.144612], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	3
        Additions: 		494
        Multiplications: 	224
        Divisions: 		0
        Logical: 		0
        Reads: 			1034
        Writes: 		201
        Comparisons:		10
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest37.exe __orio_perftest37.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest37.exe  
Program Test Output: 
{'[0, 0, 0, 0, 5, 4, 1, 0, 17, 1, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.112544}
{'[0, 0, 0, 0, 5, 4, 1, 0, 17, 1, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.112567}
{'[0, 0, 0, 0, 5, 4, 1, 0, 17, 1, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.101968}
{'[0, 0, 0, 0, 5, 4, 1, 0, 17, 1, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.0958538}
{'[0, 0, 0, 0, 5, 4, 1, 0, 17, 1, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.0958459}
{'[0, 0, 0, 0, 5, 4, 1, 0, 17, 1, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.095921}
{'[0, 0, 0, 0, 5, 4, 1, 0, 17, 1, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.09584}
{'[0, 0, 0, 0, 5, 4, 1, 0, 17, 1, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.0958681}
{'[0, 0, 0, 0, 5, 4, 1, 0, 17, 1, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.0958111}
{'[0, 0, 0, 0, 5, 4, 1, 0, 17, 1, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.095906}
{'[0, 0, 0, 0, 5, 4, 1, 0, 17, 1, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.0957952}
{'[0, 0, 0, 0, 5, 4, 1, 0, 17, 1, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.095876}
{'[0, 0, 0, 0, 5, 4, 1, 0, 17, 1, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.095854}
{'[0, 0, 0, 0, 5, 4, 1, 0, 17, 1, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.0989871}
{'[0, 0, 0, 0, 5, 4, 1, 0, 17, 1, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.0989218}
{'[0, 0, 0, 0, 5, 4, 1, 0, 17, 1, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.098942}
{'[0, 0, 0, 0, 5, 4, 1, 0, 17, 1, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.099159}
{'[0, 0, 0, 0, 5, 4, 1, 0, 17, 1, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.098913}
{'[0, 0, 0, 0, 5, 4, 1, 0, 17, 1, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.0989568}
{'[0, 0, 0, 0, 5, 4, 1, 0, 17, 1, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.0989411}
{'[0, 0, 0, 0, 5, 4, 1, 0, 17, 1, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.09905}
{'[0, 0, 0, 0, 5, 4, 1, 0, 17, 1, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.099164}
{'[0, 0, 0, 0, 5, 4, 1, 0, 17, 1, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.099148}
{'[0, 0, 0, 0, 5, 4, 1, 0, 17, 1, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.099148}
{'[0, 0, 0, 0, 5, 4, 1, 0, 17, 1, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.0990701}
{'[0, 0, 0, 0, 5, 4, 1, 0, 17, 1, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.098983}
{'[0, 0, 0, 0, 5, 4, 1, 0, 17, 1, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.0988641}
{'[0, 0, 0, 0, 5, 4, 1, 0, 17, 1, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.098964}
{'[0, 0, 0, 0, 5, 4, 1, 0, 17, 1, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.0989108}
{'[0, 0, 0, 0, 5, 4, 1, 0, 17, 1, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.0989721}

out:
 ["{'[0, 0, 0, 0, 5, 4, 1, 0, 17, 1, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.112544}", "{'[0, 0, 0, 0, 5, 4, 1, 0, 17, 1, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.112567}", "{'[0, 0, 0, 0, 5, 4, 1, 0, 17, 1, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.101968}", "{'[0, 0, 0, 0, 5, 4, 1, 0, 17, 1, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.0958538}", "{'[0, 0, 0, 0, 5, 4, 1, 0, 17, 1, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.0958459}", "{'[0, 0, 0, 0, 5, 4, 1, 0, 17, 1, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.095921}", "{'[0, 0, 0, 0, 5, 4, 1, 0, 17, 1, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.09584}", "{'[0, 0, 0, 0, 5, 4, 1, 0, 17, 1, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.0958681}", "{'[0, 0, 0, 0, 5, 4, 1, 0, 17, 1, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.0958111}", "{'[0, 0, 0, 0, 5, 4, 1, 0, 17, 1, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.095906}", "{'[0, 0, 0, 0, 5, 4, 1, 0, 17, 1, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.0957952}", "{'[0, 0, 0, 0, 5, 4, 1, 0, 17, 1, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.095876}", "{'[0, 0, 0, 0, 5, 4, 1, 0, 17, 1, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.095854}", "{'[0, 0, 0, 0, 5, 4, 1, 0, 17, 1, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.0989871}", "{'[0, 0, 0, 0, 5, 4, 1, 0, 17, 1, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.0989218}", "{'[0, 0, 0, 0, 5, 4, 1, 0, 17, 1, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.098942}", "{'[0, 0, 0, 0, 5, 4, 1, 0, 17, 1, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.099159}", "{'[0, 0, 0, 0, 5, 4, 1, 0, 17, 1, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.098913}", "{'[0, 0, 0, 0, 5, 4, 1, 0, 17, 1, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.0989568}", "{'[0, 0, 0, 0, 5, 4, 1, 0, 17, 1, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.0989411}", "{'[0, 0, 0, 0, 5, 4, 1, 0, 17, 1, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.09905}", "{'[0, 0, 0, 0, 5, 4, 1, 0, 17, 1, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.099164}", "{'[0, 0, 0, 0, 5, 4, 1, 0, 17, 1, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.099148}", "{'[0, 0, 0, 0, 5, 4, 1, 0, 17, 1, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.099148}", "{'[0, 0, 0, 0, 5, 4, 1, 0, 17, 1, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.0990701}", "{'[0, 0, 0, 0, 5, 4, 1, 0, 17, 1, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.098983}", "{'[0, 0, 0, 0, 5, 4, 1, 0, 17, 1, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.0988641}", "{'[0, 0, 0, 0, 5, 4, 1, 0, 17, 1, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.098964}", "{'[0, 0, 0, 0, 5, 4, 1, 0, 17, 1, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.0989108}", "{'[0, 0, 0, 0, 5, 4, 1, 0, 17, 1, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.0989721}"]
returning from 'run': {'[0, 0, 0, 0, 5, 4, 1, 0, 17, 1, 0, 3, 1, 0, 1, 1, 0, 1]': ([0.112544, 0.112567, 0.101968, 0.0958538, 0.0958459, 0.095921, 0.09584, 0.0958681, 0.0958111, 0.095906, 0.0957952, 0.095876, 0.095854, 0.0989871, 0.0989218, 0.098942, 0.099159, 0.098913, 0.0989568, 0.0989411, 0.09905, 0.099164, 0.099148, 0.099148, 0.0990701, 0.098983, 0.0988641, 0.098964, 0.0989108, 0.0989721], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 0, 0, 5, 4, 1, 0, 17, 1, 0, 3, 1, 0, 1, 1, 0, 1]': ([0.112544, 0.112567, 0.101968, 0.0958538, 0.0958459, 0.095921, 0.09584, 0.0958681, 0.0958111, 0.095906, 0.0957952, 0.095876, 0.095854, 0.0989871, 0.0989218, 0.098942, 0.099159, 0.098913, 0.0989568, 0.0989411, 0.09905, 0.099164, 0.099148, 0.099148, 0.0990701, 0.098983, 0.0988641, 0.098964, 0.0989108, 0.0989721], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = iii
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	5
        Additions: 		2430
        Multiplications: 	702
        Divisions: 		0
        Logical: 		0
        Reads: 			3889
        Writes: 		433
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest38.exe __orio_perftest38.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest38.exe  
Program Test Output: 
{'[5, 0, 6, 3, 4, 6, 0, 1, 24, 0, 29, 28, 1, 0, 1, 0, 0, 1]' : 0.119732}
{'[5, 0, 6, 3, 4, 6, 0, 1, 24, 0, 29, 28, 1, 0, 1, 0, 0, 1]' : 0.116962}
{'[5, 0, 6, 3, 4, 6, 0, 1, 24, 0, 29, 28, 1, 0, 1, 0, 0, 1]' : 0.116346}
{'[5, 0, 6, 3, 4, 6, 0, 1, 24, 0, 29, 28, 1, 0, 1, 0, 0, 1]' : 0.116544}
{'[5, 0, 6, 3, 4, 6, 0, 1, 24, 0, 29, 28, 1, 0, 1, 0, 0, 1]' : 0.119668}
{'[5, 0, 6, 3, 4, 6, 0, 1, 24, 0, 29, 28, 1, 0, 1, 0, 0, 1]' : 0.119719}
{'[5, 0, 6, 3, 4, 6, 0, 1, 24, 0, 29, 28, 1, 0, 1, 0, 0, 1]' : 0.119503}
{'[5, 0, 6, 3, 4, 6, 0, 1, 24, 0, 29, 28, 1, 0, 1, 0, 0, 1]' : 0.119684}
{'[5, 0, 6, 3, 4, 6, 0, 1, 24, 0, 29, 28, 1, 0, 1, 0, 0, 1]' : 0.119166}
{'[5, 0, 6, 3, 4, 6, 0, 1, 24, 0, 29, 28, 1, 0, 1, 0, 0, 1]' : 0.116392}
{'[5, 0, 6, 3, 4, 6, 0, 1, 24, 0, 29, 28, 1, 0, 1, 0, 0, 1]' : 0.116322}
{'[5, 0, 6, 3, 4, 6, 0, 1, 24, 0, 29, 28, 1, 0, 1, 0, 0, 1]' : 0.116601}
{'[5, 0, 6, 3, 4, 6, 0, 1, 24, 0, 29, 28, 1, 0, 1, 0, 0, 1]' : 0.115799}
{'[5, 0, 6, 3, 4, 6, 0, 1, 24, 0, 29, 28, 1, 0, 1, 0, 0, 1]' : 0.116875}
{'[5, 0, 6, 3, 4, 6, 0, 1, 24, 0, 29, 28, 1, 0, 1, 0, 0, 1]' : 0.116403}
{'[5, 0, 6, 3, 4, 6, 0, 1, 24, 0, 29, 28, 1, 0, 1, 0, 0, 1]' : 0.116419}
{'[5, 0, 6, 3, 4, 6, 0, 1, 24, 0, 29, 28, 1, 0, 1, 0, 0, 1]' : 0.116646}
{'[5, 0, 6, 3, 4, 6, 0, 1, 24, 0, 29, 28, 1, 0, 1, 0, 0, 1]' : 0.116674}
{'[5, 0, 6, 3, 4, 6, 0, 1, 24, 0, 29, 28, 1, 0, 1, 0, 0, 1]' : 0.116339}
{'[5, 0, 6, 3, 4, 6, 0, 1, 24, 0, 29, 28, 1, 0, 1, 0, 0, 1]' : 0.116462}
{'[5, 0, 6, 3, 4, 6, 0, 1, 24, 0, 29, 28, 1, 0, 1, 0, 0, 1]' : 0.119027}
{'[5, 0, 6, 3, 4, 6, 0, 1, 24, 0, 29, 28, 1, 0, 1, 0, 0, 1]' : 0.11968}
{'[5, 0, 6, 3, 4, 6, 0, 1, 24, 0, 29, 28, 1, 0, 1, 0, 0, 1]' : 0.11889}
{'[5, 0, 6, 3, 4, 6, 0, 1, 24, 0, 29, 28, 1, 0, 1, 0, 0, 1]' : 0.116483}
{'[5, 0, 6, 3, 4, 6, 0, 1, 24, 0, 29, 28, 1, 0, 1, 0, 0, 1]' : 0.11646}
{'[5, 0, 6, 3, 4, 6, 0, 1, 24, 0, 29, 28, 1, 0, 1, 0, 0, 1]' : 0.115576}
{'[5, 0, 6, 3, 4, 6, 0, 1, 24, 0, 29, 28, 1, 0, 1, 0, 0, 1]' : 0.113711}
{'[5, 0, 6, 3, 4, 6, 0, 1, 24, 0, 29, 28, 1, 0, 1, 0, 0, 1]' : 0.113395}
{'[5, 0, 6, 3, 4, 6, 0, 1, 24, 0, 29, 28, 1, 0, 1, 0, 0, 1]' : 0.112894}
{'[5, 0, 6, 3, 4, 6, 0, 1, 24, 0, 29, 28, 1, 0, 1, 0, 0, 1]' : 0.117147}

out:
 ["{'[5, 0, 6, 3, 4, 6, 0, 1, 24, 0, 29, 28, 1, 0, 1, 0, 0, 1]' : 0.119732}", "{'[5, 0, 6, 3, 4, 6, 0, 1, 24, 0, 29, 28, 1, 0, 1, 0, 0, 1]' : 0.116962}", "{'[5, 0, 6, 3, 4, 6, 0, 1, 24, 0, 29, 28, 1, 0, 1, 0, 0, 1]' : 0.116346}", "{'[5, 0, 6, 3, 4, 6, 0, 1, 24, 0, 29, 28, 1, 0, 1, 0, 0, 1]' : 0.116544}", "{'[5, 0, 6, 3, 4, 6, 0, 1, 24, 0, 29, 28, 1, 0, 1, 0, 0, 1]' : 0.119668}", "{'[5, 0, 6, 3, 4, 6, 0, 1, 24, 0, 29, 28, 1, 0, 1, 0, 0, 1]' : 0.119719}", "{'[5, 0, 6, 3, 4, 6, 0, 1, 24, 0, 29, 28, 1, 0, 1, 0, 0, 1]' : 0.119503}", "{'[5, 0, 6, 3, 4, 6, 0, 1, 24, 0, 29, 28, 1, 0, 1, 0, 0, 1]' : 0.119684}", "{'[5, 0, 6, 3, 4, 6, 0, 1, 24, 0, 29, 28, 1, 0, 1, 0, 0, 1]' : 0.119166}", "{'[5, 0, 6, 3, 4, 6, 0, 1, 24, 0, 29, 28, 1, 0, 1, 0, 0, 1]' : 0.116392}", "{'[5, 0, 6, 3, 4, 6, 0, 1, 24, 0, 29, 28, 1, 0, 1, 0, 0, 1]' : 0.116322}", "{'[5, 0, 6, 3, 4, 6, 0, 1, 24, 0, 29, 28, 1, 0, 1, 0, 0, 1]' : 0.116601}", "{'[5, 0, 6, 3, 4, 6, 0, 1, 24, 0, 29, 28, 1, 0, 1, 0, 0, 1]' : 0.115799}", "{'[5, 0, 6, 3, 4, 6, 0, 1, 24, 0, 29, 28, 1, 0, 1, 0, 0, 1]' : 0.116875}", "{'[5, 0, 6, 3, 4, 6, 0, 1, 24, 0, 29, 28, 1, 0, 1, 0, 0, 1]' : 0.116403}", "{'[5, 0, 6, 3, 4, 6, 0, 1, 24, 0, 29, 28, 1, 0, 1, 0, 0, 1]' : 0.116419}", "{'[5, 0, 6, 3, 4, 6, 0, 1, 24, 0, 29, 28, 1, 0, 1, 0, 0, 1]' : 0.116646}", "{'[5, 0, 6, 3, 4, 6, 0, 1, 24, 0, 29, 28, 1, 0, 1, 0, 0, 1]' : 0.116674}", "{'[5, 0, 6, 3, 4, 6, 0, 1, 24, 0, 29, 28, 1, 0, 1, 0, 0, 1]' : 0.116339}", "{'[5, 0, 6, 3, 4, 6, 0, 1, 24, 0, 29, 28, 1, 0, 1, 0, 0, 1]' : 0.116462}", "{'[5, 0, 6, 3, 4, 6, 0, 1, 24, 0, 29, 28, 1, 0, 1, 0, 0, 1]' : 0.119027}", "{'[5, 0, 6, 3, 4, 6, 0, 1, 24, 0, 29, 28, 1, 0, 1, 0, 0, 1]' : 0.11968}", "{'[5, 0, 6, 3, 4, 6, 0, 1, 24, 0, 29, 28, 1, 0, 1, 0, 0, 1]' : 0.11889}", "{'[5, 0, 6, 3, 4, 6, 0, 1, 24, 0, 29, 28, 1, 0, 1, 0, 0, 1]' : 0.116483}", "{'[5, 0, 6, 3, 4, 6, 0, 1, 24, 0, 29, 28, 1, 0, 1, 0, 0, 1]' : 0.11646}", "{'[5, 0, 6, 3, 4, 6, 0, 1, 24, 0, 29, 28, 1, 0, 1, 0, 0, 1]' : 0.115576}", "{'[5, 0, 6, 3, 4, 6, 0, 1, 24, 0, 29, 28, 1, 0, 1, 0, 0, 1]' : 0.113711}", "{'[5, 0, 6, 3, 4, 6, 0, 1, 24, 0, 29, 28, 1, 0, 1, 0, 0, 1]' : 0.113395}", "{'[5, 0, 6, 3, 4, 6, 0, 1, 24, 0, 29, 28, 1, 0, 1, 0, 0, 1]' : 0.112894}", "{'[5, 0, 6, 3, 4, 6, 0, 1, 24, 0, 29, 28, 1, 0, 1, 0, 0, 1]' : 0.117147}"]
returning from 'run': {'[5, 0, 6, 3, 4, 6, 0, 1, 24, 0, 29, 28, 1, 0, 1, 0, 0, 1]': ([0.119732, 0.116962, 0.116346, 0.116544, 0.119668, 0.119719, 0.119503, 0.119684, 0.119166, 0.116392, 0.116322, 0.116601, 0.115799, 0.116875, 0.116403, 0.116419, 0.116646, 0.116674, 0.116339, 0.116462, 0.119027, 0.11968, 0.11889, 0.116483, 0.11646, 0.115576, 0.113711, 0.113395, 0.112894, 0.117147], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 0, 6, 3, 4, 6, 0, 1, 24, 0, 29, 28, 1, 0, 1, 0, 0, 1]': ([0.119732, 0.116962, 0.116346, 0.116544, 0.119668, 0.119719, 0.119503, 0.119684, 0.119166, 0.116392, 0.116322, 0.116601, 0.115799, 0.116875, 0.116403, 0.116419, 0.116646, 0.116674, 0.116339, 0.116462, 0.119027, 0.11968, 0.11889, 0.116483, 0.11646, 0.115576, 0.113711, 0.113395, 0.112894, 0.117147], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = jjj
Code stats:
        Number of loops: 	31
        Max loop nest depth: 	6
        Additions: 		610
        Multiplications: 	234
        Divisions: 		0
        Logical: 		0
        Reads: 			1368
        Writes: 		299
        Comparisons:		31
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest39.exe __orio_perftest39.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest39.exe  
Program Test Output: 
{'[3, 5, 1, 6, 3, 3, 1, 0, 15, 3, 0, 6, 1, 0, 0, 1, 1, 1]' : 0.130197}
{'[3, 5, 1, 6, 3, 3, 1, 0, 15, 3, 0, 6, 1, 0, 0, 1, 1, 1]' : 0.130104}
{'[3, 5, 1, 6, 3, 3, 1, 0, 15, 3, 0, 6, 1, 0, 0, 1, 1, 1]' : 0.120379}
{'[3, 5, 1, 6, 3, 3, 1, 0, 15, 3, 0, 6, 1, 0, 0, 1, 1, 1]' : 0.112913}
{'[3, 5, 1, 6, 3, 3, 1, 0, 15, 3, 0, 6, 1, 0, 0, 1, 1, 1]' : 0.112861}
{'[3, 5, 1, 6, 3, 3, 1, 0, 15, 3, 0, 6, 1, 0, 0, 1, 1, 1]' : 0.11292}
{'[3, 5, 1, 6, 3, 3, 1, 0, 15, 3, 0, 6, 1, 0, 0, 1, 1, 1]' : 0.112886}
{'[3, 5, 1, 6, 3, 3, 1, 0, 15, 3, 0, 6, 1, 0, 0, 1, 1, 1]' : 0.112908}
{'[3, 5, 1, 6, 3, 3, 1, 0, 15, 3, 0, 6, 1, 0, 0, 1, 1, 1]' : 0.113128}
{'[3, 5, 1, 6, 3, 3, 1, 0, 15, 3, 0, 6, 1, 0, 0, 1, 1, 1]' : 0.113317}
{'[3, 5, 1, 6, 3, 3, 1, 0, 15, 3, 0, 6, 1, 0, 0, 1, 1, 1]' : 0.112805}
{'[3, 5, 1, 6, 3, 3, 1, 0, 15, 3, 0, 6, 1, 0, 0, 1, 1, 1]' : 0.112861}
{'[3, 5, 1, 6, 3, 3, 1, 0, 15, 3, 0, 6, 1, 0, 0, 1, 1, 1]' : 0.11289}
{'[3, 5, 1, 6, 3, 3, 1, 0, 15, 3, 0, 6, 1, 0, 0, 1, 1, 1]' : 0.113149}
{'[3, 5, 1, 6, 3, 3, 1, 0, 15, 3, 0, 6, 1, 0, 0, 1, 1, 1]' : 0.112832}
{'[3, 5, 1, 6, 3, 3, 1, 0, 15, 3, 0, 6, 1, 0, 0, 1, 1, 1]' : 0.112899}
{'[3, 5, 1, 6, 3, 3, 1, 0, 15, 3, 0, 6, 1, 0, 0, 1, 1, 1]' : 0.112848}
{'[3, 5, 1, 6, 3, 3, 1, 0, 15, 3, 0, 6, 1, 0, 0, 1, 1, 1]' : 0.112824}
{'[3, 5, 1, 6, 3, 3, 1, 0, 15, 3, 0, 6, 1, 0, 0, 1, 1, 1]' : 0.112894}
{'[3, 5, 1, 6, 3, 3, 1, 0, 15, 3, 0, 6, 1, 0, 0, 1, 1, 1]' : 0.112854}
{'[3, 5, 1, 6, 3, 3, 1, 0, 15, 3, 0, 6, 1, 0, 0, 1, 1, 1]' : 0.11286}
{'[3, 5, 1, 6, 3, 3, 1, 0, 15, 3, 0, 6, 1, 0, 0, 1, 1, 1]' : 0.112864}
{'[3, 5, 1, 6, 3, 3, 1, 0, 15, 3, 0, 6, 1, 0, 0, 1, 1, 1]' : 0.112917}
{'[3, 5, 1, 6, 3, 3, 1, 0, 15, 3, 0, 6, 1, 0, 0, 1, 1, 1]' : 0.11288}
{'[3, 5, 1, 6, 3, 3, 1, 0, 15, 3, 0, 6, 1, 0, 0, 1, 1, 1]' : 0.112927}
{'[3, 5, 1, 6, 3, 3, 1, 0, 15, 3, 0, 6, 1, 0, 0, 1, 1, 1]' : 0.112914}
{'[3, 5, 1, 6, 3, 3, 1, 0, 15, 3, 0, 6, 1, 0, 0, 1, 1, 1]' : 0.11286}
{'[3, 5, 1, 6, 3, 3, 1, 0, 15, 3, 0, 6, 1, 0, 0, 1, 1, 1]' : 0.112934}
{'[3, 5, 1, 6, 3, 3, 1, 0, 15, 3, 0, 6, 1, 0, 0, 1, 1, 1]' : 0.112824}
{'[3, 5, 1, 6, 3, 3, 1, 0, 15, 3, 0, 6, 1, 0, 0, 1, 1, 1]' : 0.112965}

out:
 ["{'[3, 5, 1, 6, 3, 3, 1, 0, 15, 3, 0, 6, 1, 0, 0, 1, 1, 1]' : 0.130197}", "{'[3, 5, 1, 6, 3, 3, 1, 0, 15, 3, 0, 6, 1, 0, 0, 1, 1, 1]' : 0.130104}", "{'[3, 5, 1, 6, 3, 3, 1, 0, 15, 3, 0, 6, 1, 0, 0, 1, 1, 1]' : 0.120379}", "{'[3, 5, 1, 6, 3, 3, 1, 0, 15, 3, 0, 6, 1, 0, 0, 1, 1, 1]' : 0.112913}", "{'[3, 5, 1, 6, 3, 3, 1, 0, 15, 3, 0, 6, 1, 0, 0, 1, 1, 1]' : 0.112861}", "{'[3, 5, 1, 6, 3, 3, 1, 0, 15, 3, 0, 6, 1, 0, 0, 1, 1, 1]' : 0.11292}", "{'[3, 5, 1, 6, 3, 3, 1, 0, 15, 3, 0, 6, 1, 0, 0, 1, 1, 1]' : 0.112886}", "{'[3, 5, 1, 6, 3, 3, 1, 0, 15, 3, 0, 6, 1, 0, 0, 1, 1, 1]' : 0.112908}", "{'[3, 5, 1, 6, 3, 3, 1, 0, 15, 3, 0, 6, 1, 0, 0, 1, 1, 1]' : 0.113128}", "{'[3, 5, 1, 6, 3, 3, 1, 0, 15, 3, 0, 6, 1, 0, 0, 1, 1, 1]' : 0.113317}", "{'[3, 5, 1, 6, 3, 3, 1, 0, 15, 3, 0, 6, 1, 0, 0, 1, 1, 1]' : 0.112805}", "{'[3, 5, 1, 6, 3, 3, 1, 0, 15, 3, 0, 6, 1, 0, 0, 1, 1, 1]' : 0.112861}", "{'[3, 5, 1, 6, 3, 3, 1, 0, 15, 3, 0, 6, 1, 0, 0, 1, 1, 1]' : 0.11289}", "{'[3, 5, 1, 6, 3, 3, 1, 0, 15, 3, 0, 6, 1, 0, 0, 1, 1, 1]' : 0.113149}", "{'[3, 5, 1, 6, 3, 3, 1, 0, 15, 3, 0, 6, 1, 0, 0, 1, 1, 1]' : 0.112832}", "{'[3, 5, 1, 6, 3, 3, 1, 0, 15, 3, 0, 6, 1, 0, 0, 1, 1, 1]' : 0.112899}", "{'[3, 5, 1, 6, 3, 3, 1, 0, 15, 3, 0, 6, 1, 0, 0, 1, 1, 1]' : 0.112848}", "{'[3, 5, 1, 6, 3, 3, 1, 0, 15, 3, 0, 6, 1, 0, 0, 1, 1, 1]' : 0.112824}", "{'[3, 5, 1, 6, 3, 3, 1, 0, 15, 3, 0, 6, 1, 0, 0, 1, 1, 1]' : 0.112894}", "{'[3, 5, 1, 6, 3, 3, 1, 0, 15, 3, 0, 6, 1, 0, 0, 1, 1, 1]' : 0.112854}", "{'[3, 5, 1, 6, 3, 3, 1, 0, 15, 3, 0, 6, 1, 0, 0, 1, 1, 1]' : 0.11286}", "{'[3, 5, 1, 6, 3, 3, 1, 0, 15, 3, 0, 6, 1, 0, 0, 1, 1, 1]' : 0.112864}", "{'[3, 5, 1, 6, 3, 3, 1, 0, 15, 3, 0, 6, 1, 0, 0, 1, 1, 1]' : 0.112917}", "{'[3, 5, 1, 6, 3, 3, 1, 0, 15, 3, 0, 6, 1, 0, 0, 1, 1, 1]' : 0.11288}", "{'[3, 5, 1, 6, 3, 3, 1, 0, 15, 3, 0, 6, 1, 0, 0, 1, 1, 1]' : 0.112927}", "{'[3, 5, 1, 6, 3, 3, 1, 0, 15, 3, 0, 6, 1, 0, 0, 1, 1, 1]' : 0.112914}", "{'[3, 5, 1, 6, 3, 3, 1, 0, 15, 3, 0, 6, 1, 0, 0, 1, 1, 1]' : 0.11286}", "{'[3, 5, 1, 6, 3, 3, 1, 0, 15, 3, 0, 6, 1, 0, 0, 1, 1, 1]' : 0.112934}", "{'[3, 5, 1, 6, 3, 3, 1, 0, 15, 3, 0, 6, 1, 0, 0, 1, 1, 1]' : 0.112824}", "{'[3, 5, 1, 6, 3, 3, 1, 0, 15, 3, 0, 6, 1, 0, 0, 1, 1, 1]' : 0.112965}"]
returning from 'run': {'[3, 5, 1, 6, 3, 3, 1, 0, 15, 3, 0, 6, 1, 0, 0, 1, 1, 1]': ([0.130197, 0.130104, 0.120379, 0.112913, 0.112861, 0.11292, 0.112886, 0.112908, 0.113128, 0.113317, 0.112805, 0.112861, 0.11289, 0.113149, 0.112832, 0.112899, 0.112848, 0.112824, 0.112894, 0.112854, 0.11286, 0.112864, 0.112917, 0.11288, 0.112927, 0.112914, 0.11286, 0.112934, 0.112824, 0.112965], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 5, 1, 6, 3, 3, 1, 0, 15, 3, 0, 6, 1, 0, 0, 1, 1, 1]': ([0.130197, 0.130104, 0.120379, 0.112913, 0.112861, 0.11292, 0.112886, 0.112908, 0.113128, 0.113317, 0.112805, 0.112861, 0.11289, 0.113149, 0.112832, 0.112899, 0.112848, 0.112824, 0.112894, 0.112854, 0.11286, 0.112864, 0.112917, 0.11288, 0.112927, 0.112914, 0.11286, 0.112934, 0.112824, 0.112965], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	34
        Max loop nest depth: 	6
        Additions: 		4097
        Multiplications: 	1056
        Divisions: 		0
        Logical: 		0
        Reads: 			6194
        Writes: 		658
        Comparisons:		34
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest40.exe __orio_perftest40.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest40.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest40.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest40.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest40.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	5
        Additions: 		4160
        Multiplications: 	1280
        Divisions: 		0
        Logical: 		0
        Reads: 			6586
        Writes: 		706
        Comparisons:		18
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest41.exe __orio_perftest41.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest41.exe  
Program Test Output: 
{'[6, 0, 5, 5, 3, 0, 0, 0, 8, 8, 29, 0, 0, 0, 2, 0, 0, 1]' : 0.159597}
{'[6, 0, 5, 5, 3, 0, 0, 0, 8, 8, 29, 0, 0, 0, 2, 0, 0, 1]' : 0.157219}
{'[6, 0, 5, 5, 3, 0, 0, 0, 8, 8, 29, 0, 0, 0, 2, 0, 0, 1]' : 0.135767}
{'[6, 0, 5, 5, 3, 0, 0, 0, 8, 8, 29, 0, 0, 0, 2, 0, 0, 1]' : 0.1353}
{'[6, 0, 5, 5, 3, 0, 0, 0, 8, 8, 29, 0, 0, 0, 2, 0, 0, 1]' : 0.135266}
{'[6, 0, 5, 5, 3, 0, 0, 0, 8, 8, 29, 0, 0, 0, 2, 0, 0, 1]' : 0.135363}
{'[6, 0, 5, 5, 3, 0, 0, 0, 8, 8, 29, 0, 0, 0, 2, 0, 0, 1]' : 0.135291}
{'[6, 0, 5, 5, 3, 0, 0, 0, 8, 8, 29, 0, 0, 0, 2, 0, 0, 1]' : 0.135315}
{'[6, 0, 5, 5, 3, 0, 0, 0, 8, 8, 29, 0, 0, 0, 2, 0, 0, 1]' : 0.135259}
{'[6, 0, 5, 5, 3, 0, 0, 0, 8, 8, 29, 0, 0, 0, 2, 0, 0, 1]' : 0.135263}
{'[6, 0, 5, 5, 3, 0, 0, 0, 8, 8, 29, 0, 0, 0, 2, 0, 0, 1]' : 0.135239}
{'[6, 0, 5, 5, 3, 0, 0, 0, 8, 8, 29, 0, 0, 0, 2, 0, 0, 1]' : 0.135765}
{'[6, 0, 5, 5, 3, 0, 0, 0, 8, 8, 29, 0, 0, 0, 2, 0, 0, 1]' : 0.135276}
{'[6, 0, 5, 5, 3, 0, 0, 0, 8, 8, 29, 0, 0, 0, 2, 0, 0, 1]' : 0.135326}
{'[6, 0, 5, 5, 3, 0, 0, 0, 8, 8, 29, 0, 0, 0, 2, 0, 0, 1]' : 0.135806}
{'[6, 0, 5, 5, 3, 0, 0, 0, 8, 8, 29, 0, 0, 0, 2, 0, 0, 1]' : 0.135981}
{'[6, 0, 5, 5, 3, 0, 0, 0, 8, 8, 29, 0, 0, 0, 2, 0, 0, 1]' : 0.135234}
{'[6, 0, 5, 5, 3, 0, 0, 0, 8, 8, 29, 0, 0, 0, 2, 0, 0, 1]' : 0.13527}
{'[6, 0, 5, 5, 3, 0, 0, 0, 8, 8, 29, 0, 0, 0, 2, 0, 0, 1]' : 0.136296}
{'[6, 0, 5, 5, 3, 0, 0, 0, 8, 8, 29, 0, 0, 0, 2, 0, 0, 1]' : 0.140751}
{'[6, 0, 5, 5, 3, 0, 0, 0, 8, 8, 29, 0, 0, 0, 2, 0, 0, 1]' : 0.140774}
{'[6, 0, 5, 5, 3, 0, 0, 0, 8, 8, 29, 0, 0, 0, 2, 0, 0, 1]' : 0.140703}
{'[6, 0, 5, 5, 3, 0, 0, 0, 8, 8, 29, 0, 0, 0, 2, 0, 0, 1]' : 0.14076}
{'[6, 0, 5, 5, 3, 0, 0, 0, 8, 8, 29, 0, 0, 0, 2, 0, 0, 1]' : 0.140751}
{'[6, 0, 5, 5, 3, 0, 0, 0, 8, 8, 29, 0, 0, 0, 2, 0, 0, 1]' : 0.140759}
{'[6, 0, 5, 5, 3, 0, 0, 0, 8, 8, 29, 0, 0, 0, 2, 0, 0, 1]' : 0.140733}
{'[6, 0, 5, 5, 3, 0, 0, 0, 8, 8, 29, 0, 0, 0, 2, 0, 0, 1]' : 0.14074}
{'[6, 0, 5, 5, 3, 0, 0, 0, 8, 8, 29, 0, 0, 0, 2, 0, 0, 1]' : 0.140838}
{'[6, 0, 5, 5, 3, 0, 0, 0, 8, 8, 29, 0, 0, 0, 2, 0, 0, 1]' : 0.140756}
{'[6, 0, 5, 5, 3, 0, 0, 0, 8, 8, 29, 0, 0, 0, 2, 0, 0, 1]' : 0.141167}

out:
 ["{'[6, 0, 5, 5, 3, 0, 0, 0, 8, 8, 29, 0, 0, 0, 2, 0, 0, 1]' : 0.159597}", "{'[6, 0, 5, 5, 3, 0, 0, 0, 8, 8, 29, 0, 0, 0, 2, 0, 0, 1]' : 0.157219}", "{'[6, 0, 5, 5, 3, 0, 0, 0, 8, 8, 29, 0, 0, 0, 2, 0, 0, 1]' : 0.135767}", "{'[6, 0, 5, 5, 3, 0, 0, 0, 8, 8, 29, 0, 0, 0, 2, 0, 0, 1]' : 0.1353}", "{'[6, 0, 5, 5, 3, 0, 0, 0, 8, 8, 29, 0, 0, 0, 2, 0, 0, 1]' : 0.135266}", "{'[6, 0, 5, 5, 3, 0, 0, 0, 8, 8, 29, 0, 0, 0, 2, 0, 0, 1]' : 0.135363}", "{'[6, 0, 5, 5, 3, 0, 0, 0, 8, 8, 29, 0, 0, 0, 2, 0, 0, 1]' : 0.135291}", "{'[6, 0, 5, 5, 3, 0, 0, 0, 8, 8, 29, 0, 0, 0, 2, 0, 0, 1]' : 0.135315}", "{'[6, 0, 5, 5, 3, 0, 0, 0, 8, 8, 29, 0, 0, 0, 2, 0, 0, 1]' : 0.135259}", "{'[6, 0, 5, 5, 3, 0, 0, 0, 8, 8, 29, 0, 0, 0, 2, 0, 0, 1]' : 0.135263}", "{'[6, 0, 5, 5, 3, 0, 0, 0, 8, 8, 29, 0, 0, 0, 2, 0, 0, 1]' : 0.135239}", "{'[6, 0, 5, 5, 3, 0, 0, 0, 8, 8, 29, 0, 0, 0, 2, 0, 0, 1]' : 0.135765}", "{'[6, 0, 5, 5, 3, 0, 0, 0, 8, 8, 29, 0, 0, 0, 2, 0, 0, 1]' : 0.135276}", "{'[6, 0, 5, 5, 3, 0, 0, 0, 8, 8, 29, 0, 0, 0, 2, 0, 0, 1]' : 0.135326}", "{'[6, 0, 5, 5, 3, 0, 0, 0, 8, 8, 29, 0, 0, 0, 2, 0, 0, 1]' : 0.135806}", "{'[6, 0, 5, 5, 3, 0, 0, 0, 8, 8, 29, 0, 0, 0, 2, 0, 0, 1]' : 0.135981}", "{'[6, 0, 5, 5, 3, 0, 0, 0, 8, 8, 29, 0, 0, 0, 2, 0, 0, 1]' : 0.135234}", "{'[6, 0, 5, 5, 3, 0, 0, 0, 8, 8, 29, 0, 0, 0, 2, 0, 0, 1]' : 0.13527}", "{'[6, 0, 5, 5, 3, 0, 0, 0, 8, 8, 29, 0, 0, 0, 2, 0, 0, 1]' : 0.136296}", "{'[6, 0, 5, 5, 3, 0, 0, 0, 8, 8, 29, 0, 0, 0, 2, 0, 0, 1]' : 0.140751}", "{'[6, 0, 5, 5, 3, 0, 0, 0, 8, 8, 29, 0, 0, 0, 2, 0, 0, 1]' : 0.140774}", "{'[6, 0, 5, 5, 3, 0, 0, 0, 8, 8, 29, 0, 0, 0, 2, 0, 0, 1]' : 0.140703}", "{'[6, 0, 5, 5, 3, 0, 0, 0, 8, 8, 29, 0, 0, 0, 2, 0, 0, 1]' : 0.14076}", "{'[6, 0, 5, 5, 3, 0, 0, 0, 8, 8, 29, 0, 0, 0, 2, 0, 0, 1]' : 0.140751}", "{'[6, 0, 5, 5, 3, 0, 0, 0, 8, 8, 29, 0, 0, 0, 2, 0, 0, 1]' : 0.140759}", "{'[6, 0, 5, 5, 3, 0, 0, 0, 8, 8, 29, 0, 0, 0, 2, 0, 0, 1]' : 0.140733}", "{'[6, 0, 5, 5, 3, 0, 0, 0, 8, 8, 29, 0, 0, 0, 2, 0, 0, 1]' : 0.14074}", "{'[6, 0, 5, 5, 3, 0, 0, 0, 8, 8, 29, 0, 0, 0, 2, 0, 0, 1]' : 0.140838}", "{'[6, 0, 5, 5, 3, 0, 0, 0, 8, 8, 29, 0, 0, 0, 2, 0, 0, 1]' : 0.140756}", "{'[6, 0, 5, 5, 3, 0, 0, 0, 8, 8, 29, 0, 0, 0, 2, 0, 0, 1]' : 0.141167}"]
returning from 'run': {'[6, 0, 5, 5, 3, 0, 0, 0, 8, 8, 29, 0, 0, 0, 2, 0, 0, 1]': ([0.159597, 0.157219, 0.135767, 0.1353, 0.135266, 0.135363, 0.135291, 0.135315, 0.135259, 0.135263, 0.135239, 0.135765, 0.135276, 0.135326, 0.135806, 0.135981, 0.135234, 0.13527, 0.136296, 0.140751, 0.140774, 0.140703, 0.14076, 0.140751, 0.140759, 0.140733, 0.14074, 0.140838, 0.140756, 0.141167], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 5, 5, 3, 0, 0, 0, 8, 8, 29, 0, 0, 0, 2, 0, 0, 1]': ([0.159597, 0.157219, 0.135767, 0.1353, 0.135266, 0.135363, 0.135291, 0.135315, 0.135259, 0.135263, 0.135239, 0.135765, 0.135276, 0.135326, 0.135806, 0.135981, 0.135234, 0.13527, 0.136296, 0.140751, 0.140774, 0.140703, 0.14076, 0.140751, 0.140759, 0.140733, 0.14074, 0.140838, 0.140756, 0.141167], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	5
        Additions: 		126
        Multiplications: 	38
        Divisions: 		0
        Logical: 		0
        Reads: 			292
        Writes: 		50
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest42.exe __orio_perftest42.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest42.exe  
Program Test Output: 
{'[0, 2, 1, 1, 5, 0, 1, 0, 0, 0, 3, 1, 0, 1, 1, 0, 1, 1]' : 0.246557}
{'[0, 2, 1, 1, 5, 0, 1, 0, 0, 0, 3, 1, 0, 1, 1, 0, 1, 1]' : 0.246274}
{'[0, 2, 1, 1, 5, 0, 1, 0, 0, 0, 3, 1, 0, 1, 1, 0, 1, 1]' : 0.245654}
{'[0, 2, 1, 1, 5, 0, 1, 0, 0, 0, 3, 1, 0, 1, 1, 0, 1, 1]' : 0.213693}
{'[0, 2, 1, 1, 5, 0, 1, 0, 0, 0, 3, 1, 0, 1, 1, 0, 1, 1]' : 0.212356}
{'[0, 2, 1, 1, 5, 0, 1, 0, 0, 0, 3, 1, 0, 1, 1, 0, 1, 1]' : 0.212397}
{'[0, 2, 1, 1, 5, 0, 1, 0, 0, 0, 3, 1, 0, 1, 1, 0, 1, 1]' : 0.212421}
{'[0, 2, 1, 1, 5, 0, 1, 0, 0, 0, 3, 1, 0, 1, 1, 0, 1, 1]' : 0.216929}
{'[0, 2, 1, 1, 5, 0, 1, 0, 0, 0, 3, 1, 0, 1, 1, 0, 1, 1]' : 0.213411}
{'[0, 2, 1, 1, 5, 0, 1, 0, 0, 0, 3, 1, 0, 1, 1, 0, 1, 1]' : 0.213928}
{'[0, 2, 1, 1, 5, 0, 1, 0, 0, 0, 3, 1, 0, 1, 1, 0, 1, 1]' : 0.21869}
{'[0, 2, 1, 1, 5, 0, 1, 0, 0, 0, 3, 1, 0, 1, 1, 0, 1, 1]' : 0.218471}
{'[0, 2, 1, 1, 5, 0, 1, 0, 0, 0, 3, 1, 0, 1, 1, 0, 1, 1]' : 0.215561}
{'[0, 2, 1, 1, 5, 0, 1, 0, 0, 0, 3, 1, 0, 1, 1, 0, 1, 1]' : 0.212344}
{'[0, 2, 1, 1, 5, 0, 1, 0, 0, 0, 3, 1, 0, 1, 1, 0, 1, 1]' : 0.212906}
{'[0, 2, 1, 1, 5, 0, 1, 0, 0, 0, 3, 1, 0, 1, 1, 0, 1, 1]' : 0.212236}
{'[0, 2, 1, 1, 5, 0, 1, 0, 0, 0, 3, 1, 0, 1, 1, 0, 1, 1]' : 0.214171}
{'[0, 2, 1, 1, 5, 0, 1, 0, 0, 0, 3, 1, 0, 1, 1, 0, 1, 1]' : 0.218782}
{'[0, 2, 1, 1, 5, 0, 1, 0, 0, 0, 3, 1, 0, 1, 1, 0, 1, 1]' : 0.218435}
{'[0, 2, 1, 1, 5, 0, 1, 0, 0, 0, 3, 1, 0, 1, 1, 0, 1, 1]' : 0.218437}
{'[0, 2, 1, 1, 5, 0, 1, 0, 0, 0, 3, 1, 0, 1, 1, 0, 1, 1]' : 0.218508}
{'[0, 2, 1, 1, 5, 0, 1, 0, 0, 0, 3, 1, 0, 1, 1, 0, 1, 1]' : 0.214629}
{'[0, 2, 1, 1, 5, 0, 1, 0, 0, 0, 3, 1, 0, 1, 1, 0, 1, 1]' : 0.212807}
{'[0, 2, 1, 1, 5, 0, 1, 0, 0, 0, 3, 1, 0, 1, 1, 0, 1, 1]' : 0.210094}
{'[0, 2, 1, 1, 5, 0, 1, 0, 0, 0, 3, 1, 0, 1, 1, 0, 1, 1]' : 0.212395}
{'[0, 2, 1, 1, 5, 0, 1, 0, 0, 0, 3, 1, 0, 1, 1, 0, 1, 1]' : 0.21231}
{'[0, 2, 1, 1, 5, 0, 1, 0, 0, 0, 3, 1, 0, 1, 1, 0, 1, 1]' : 0.213297}
{'[0, 2, 1, 1, 5, 0, 1, 0, 0, 0, 3, 1, 0, 1, 1, 0, 1, 1]' : 0.212898}
{'[0, 2, 1, 1, 5, 0, 1, 0, 0, 0, 3, 1, 0, 1, 1, 0, 1, 1]' : 0.213214}
{'[0, 2, 1, 1, 5, 0, 1, 0, 0, 0, 3, 1, 0, 1, 1, 0, 1, 1]' : 0.21246}

out:
 ["{'[0, 2, 1, 1, 5, 0, 1, 0, 0, 0, 3, 1, 0, 1, 1, 0, 1, 1]' : 0.246557}", "{'[0, 2, 1, 1, 5, 0, 1, 0, 0, 0, 3, 1, 0, 1, 1, 0, 1, 1]' : 0.246274}", "{'[0, 2, 1, 1, 5, 0, 1, 0, 0, 0, 3, 1, 0, 1, 1, 0, 1, 1]' : 0.245654}", "{'[0, 2, 1, 1, 5, 0, 1, 0, 0, 0, 3, 1, 0, 1, 1, 0, 1, 1]' : 0.213693}", "{'[0, 2, 1, 1, 5, 0, 1, 0, 0, 0, 3, 1, 0, 1, 1, 0, 1, 1]' : 0.212356}", "{'[0, 2, 1, 1, 5, 0, 1, 0, 0, 0, 3, 1, 0, 1, 1, 0, 1, 1]' : 0.212397}", "{'[0, 2, 1, 1, 5, 0, 1, 0, 0, 0, 3, 1, 0, 1, 1, 0, 1, 1]' : 0.212421}", "{'[0, 2, 1, 1, 5, 0, 1, 0, 0, 0, 3, 1, 0, 1, 1, 0, 1, 1]' : 0.216929}", "{'[0, 2, 1, 1, 5, 0, 1, 0, 0, 0, 3, 1, 0, 1, 1, 0, 1, 1]' : 0.213411}", "{'[0, 2, 1, 1, 5, 0, 1, 0, 0, 0, 3, 1, 0, 1, 1, 0, 1, 1]' : 0.213928}", "{'[0, 2, 1, 1, 5, 0, 1, 0, 0, 0, 3, 1, 0, 1, 1, 0, 1, 1]' : 0.21869}", "{'[0, 2, 1, 1, 5, 0, 1, 0, 0, 0, 3, 1, 0, 1, 1, 0, 1, 1]' : 0.218471}", "{'[0, 2, 1, 1, 5, 0, 1, 0, 0, 0, 3, 1, 0, 1, 1, 0, 1, 1]' : 0.215561}", "{'[0, 2, 1, 1, 5, 0, 1, 0, 0, 0, 3, 1, 0, 1, 1, 0, 1, 1]' : 0.212344}", "{'[0, 2, 1, 1, 5, 0, 1, 0, 0, 0, 3, 1, 0, 1, 1, 0, 1, 1]' : 0.212906}", "{'[0, 2, 1, 1, 5, 0, 1, 0, 0, 0, 3, 1, 0, 1, 1, 0, 1, 1]' : 0.212236}", "{'[0, 2, 1, 1, 5, 0, 1, 0, 0, 0, 3, 1, 0, 1, 1, 0, 1, 1]' : 0.214171}", "{'[0, 2, 1, 1, 5, 0, 1, 0, 0, 0, 3, 1, 0, 1, 1, 0, 1, 1]' : 0.218782}", "{'[0, 2, 1, 1, 5, 0, 1, 0, 0, 0, 3, 1, 0, 1, 1, 0, 1, 1]' : 0.218435}", "{'[0, 2, 1, 1, 5, 0, 1, 0, 0, 0, 3, 1, 0, 1, 1, 0, 1, 1]' : 0.218437}", "{'[0, 2, 1, 1, 5, 0, 1, 0, 0, 0, 3, 1, 0, 1, 1, 0, 1, 1]' : 0.218508}", "{'[0, 2, 1, 1, 5, 0, 1, 0, 0, 0, 3, 1, 0, 1, 1, 0, 1, 1]' : 0.214629}", "{'[0, 2, 1, 1, 5, 0, 1, 0, 0, 0, 3, 1, 0, 1, 1, 0, 1, 1]' : 0.212807}", "{'[0, 2, 1, 1, 5, 0, 1, 0, 0, 0, 3, 1, 0, 1, 1, 0, 1, 1]' : 0.210094}", "{'[0, 2, 1, 1, 5, 0, 1, 0, 0, 0, 3, 1, 0, 1, 1, 0, 1, 1]' : 0.212395}", "{'[0, 2, 1, 1, 5, 0, 1, 0, 0, 0, 3, 1, 0, 1, 1, 0, 1, 1]' : 0.21231}", "{'[0, 2, 1, 1, 5, 0, 1, 0, 0, 0, 3, 1, 0, 1, 1, 0, 1, 1]' : 0.213297}", "{'[0, 2, 1, 1, 5, 0, 1, 0, 0, 0, 3, 1, 0, 1, 1, 0, 1, 1]' : 0.212898}", "{'[0, 2, 1, 1, 5, 0, 1, 0, 0, 0, 3, 1, 0, 1, 1, 0, 1, 1]' : 0.213214}", "{'[0, 2, 1, 1, 5, 0, 1, 0, 0, 0, 3, 1, 0, 1, 1, 0, 1, 1]' : 0.21246}"]
returning from 'run': {'[0, 2, 1, 1, 5, 0, 1, 0, 0, 0, 3, 1, 0, 1, 1, 0, 1, 1]': ([0.246557, 0.246274, 0.245654, 0.213693, 0.212356, 0.212397, 0.212421, 0.216929, 0.213411, 0.213928, 0.21869, 0.218471, 0.215561, 0.212344, 0.212906, 0.212236, 0.214171, 0.218782, 0.218435, 0.218437, 0.218508, 0.214629, 0.212807, 0.210094, 0.212395, 0.21231, 0.213297, 0.212898, 0.213214, 0.21246], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 1, 1, 5, 0, 1, 0, 0, 0, 3, 1, 0, 1, 1, 0, 1, 1]': ([0.246557, 0.246274, 0.245654, 0.213693, 0.212356, 0.212397, 0.212421, 0.216929, 0.213411, 0.213928, 0.21869, 0.218471, 0.215561, 0.212344, 0.212906, 0.212236, 0.214171, 0.218782, 0.218435, 0.218437, 0.218508, 0.214629, 0.212807, 0.210094, 0.212395, 0.21231, 0.213297, 0.212898, 0.213214, 0.21246], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	58
        Max loop nest depth: 	5
        Additions: 		1853
        Multiplications: 	396
        Divisions: 		0
        Logical: 		0
        Reads: 			3040
        Writes: 		403
        Comparisons:		58
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest43.exe __orio_perftest43.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest43.exe  
Program Test Output: 
{'[4, 6, 1, 5, 0, 0, 0, 1, 17, 20, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.260385}
{'[4, 6, 1, 5, 0, 0, 0, 1, 17, 20, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.227383}
{'[4, 6, 1, 5, 0, 0, 0, 1, 17, 20, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.222588}
{'[4, 6, 1, 5, 0, 0, 0, 1, 17, 20, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.222629}
{'[4, 6, 1, 5, 0, 0, 0, 1, 17, 20, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.226064}
{'[4, 6, 1, 5, 0, 0, 0, 1, 17, 20, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.226754}
{'[4, 6, 1, 5, 0, 0, 0, 1, 17, 20, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.226865}
{'[4, 6, 1, 5, 0, 0, 0, 1, 17, 20, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.226716}
{'[4, 6, 1, 5, 0, 0, 0, 1, 17, 20, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.226725}
{'[4, 6, 1, 5, 0, 0, 0, 1, 17, 20, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.226704}
{'[4, 6, 1, 5, 0, 0, 0, 1, 17, 20, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.226695}
{'[4, 6, 1, 5, 0, 0, 0, 1, 17, 20, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.226677}
{'[4, 6, 1, 5, 0, 0, 0, 1, 17, 20, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.226692}
{'[4, 6, 1, 5, 0, 0, 0, 1, 17, 20, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.226687}
{'[4, 6, 1, 5, 0, 0, 0, 1, 17, 20, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.226641}
{'[4, 6, 1, 5, 0, 0, 0, 1, 17, 20, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.227201}
{'[4, 6, 1, 5, 0, 0, 0, 1, 17, 20, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.227012}
{'[4, 6, 1, 5, 0, 0, 0, 1, 17, 20, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.22731}
{'[4, 6, 1, 5, 0, 0, 0, 1, 17, 20, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.226999}
{'[4, 6, 1, 5, 0, 0, 0, 1, 17, 20, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.226885}
{'[4, 6, 1, 5, 0, 0, 0, 1, 17, 20, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.226649}
{'[4, 6, 1, 5, 0, 0, 0, 1, 17, 20, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.227024}
{'[4, 6, 1, 5, 0, 0, 0, 1, 17, 20, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.22691}
{'[4, 6, 1, 5, 0, 0, 0, 1, 17, 20, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.227167}
{'[4, 6, 1, 5, 0, 0, 0, 1, 17, 20, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.226864}
{'[4, 6, 1, 5, 0, 0, 0, 1, 17, 20, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.22674}
{'[4, 6, 1, 5, 0, 0, 0, 1, 17, 20, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.226756}
{'[4, 6, 1, 5, 0, 0, 0, 1, 17, 20, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.226709}
{'[4, 6, 1, 5, 0, 0, 0, 1, 17, 20, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.226582}
{'[4, 6, 1, 5, 0, 0, 0, 1, 17, 20, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.226604}

out:
 ["{'[4, 6, 1, 5, 0, 0, 0, 1, 17, 20, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.260385}", "{'[4, 6, 1, 5, 0, 0, 0, 1, 17, 20, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.227383}", "{'[4, 6, 1, 5, 0, 0, 0, 1, 17, 20, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.222588}", "{'[4, 6, 1, 5, 0, 0, 0, 1, 17, 20, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.222629}", "{'[4, 6, 1, 5, 0, 0, 0, 1, 17, 20, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.226064}", "{'[4, 6, 1, 5, 0, 0, 0, 1, 17, 20, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.226754}", "{'[4, 6, 1, 5, 0, 0, 0, 1, 17, 20, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.226865}", "{'[4, 6, 1, 5, 0, 0, 0, 1, 17, 20, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.226716}", "{'[4, 6, 1, 5, 0, 0, 0, 1, 17, 20, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.226725}", "{'[4, 6, 1, 5, 0, 0, 0, 1, 17, 20, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.226704}", "{'[4, 6, 1, 5, 0, 0, 0, 1, 17, 20, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.226695}", "{'[4, 6, 1, 5, 0, 0, 0, 1, 17, 20, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.226677}", "{'[4, 6, 1, 5, 0, 0, 0, 1, 17, 20, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.226692}", "{'[4, 6, 1, 5, 0, 0, 0, 1, 17, 20, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.226687}", "{'[4, 6, 1, 5, 0, 0, 0, 1, 17, 20, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.226641}", "{'[4, 6, 1, 5, 0, 0, 0, 1, 17, 20, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.227201}", "{'[4, 6, 1, 5, 0, 0, 0, 1, 17, 20, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.227012}", "{'[4, 6, 1, 5, 0, 0, 0, 1, 17, 20, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.22731}", "{'[4, 6, 1, 5, 0, 0, 0, 1, 17, 20, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.226999}", "{'[4, 6, 1, 5, 0, 0, 0, 1, 17, 20, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.226885}", "{'[4, 6, 1, 5, 0, 0, 0, 1, 17, 20, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.226649}", "{'[4, 6, 1, 5, 0, 0, 0, 1, 17, 20, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.227024}", "{'[4, 6, 1, 5, 0, 0, 0, 1, 17, 20, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.22691}", "{'[4, 6, 1, 5, 0, 0, 0, 1, 17, 20, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.227167}", "{'[4, 6, 1, 5, 0, 0, 0, 1, 17, 20, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.226864}", "{'[4, 6, 1, 5, 0, 0, 0, 1, 17, 20, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.22674}", "{'[4, 6, 1, 5, 0, 0, 0, 1, 17, 20, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.226756}", "{'[4, 6, 1, 5, 0, 0, 0, 1, 17, 20, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.226709}", "{'[4, 6, 1, 5, 0, 0, 0, 1, 17, 20, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.226582}", "{'[4, 6, 1, 5, 0, 0, 0, 1, 17, 20, 0, 29, 0, 0, 1, 0, 0, 1]' : 0.226604}"]
returning from 'run': {'[4, 6, 1, 5, 0, 0, 0, 1, 17, 20, 0, 29, 0, 0, 1, 0, 0, 1]': ([0.260385, 0.227383, 0.222588, 0.222629, 0.226064, 0.226754, 0.226865, 0.226716, 0.226725, 0.226704, 0.226695, 0.226677, 0.226692, 0.226687, 0.226641, 0.227201, 0.227012, 0.22731, 0.226999, 0.226885, 0.226649, 0.227024, 0.22691, 0.227167, 0.226864, 0.22674, 0.226756, 0.226709, 0.226582, 0.226604], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 6, 1, 5, 0, 0, 0, 1, 17, 20, 0, 29, 0, 0, 1, 0, 0, 1]': ([0.260385, 0.227383, 0.222588, 0.222629, 0.226064, 0.226754, 0.226865, 0.226716, 0.226725, 0.226704, 0.226695, 0.226677, 0.226692, 0.226687, 0.226641, 0.227201, 0.227012, 0.22731, 0.226999, 0.226885, 0.226649, 0.227024, 0.22691, 0.227167, 0.226864, 0.22674, 0.226756, 0.226709, 0.226582, 0.226604], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	23
        Max loop nest depth: 	5
        Additions: 		1875
        Multiplications: 	522
        Divisions: 		0
        Logical: 		0
        Reads: 			3027
        Writes: 		328
        Comparisons:		23
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest44.exe __orio_perftest44.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest44.exe  
Program Test Output: 
{'[5, 0, 0, 6, 2, 1, 0, 1, 0, 0, 8, 9, 1, 1, 0, 0, 0, 1]' : 0.111253}
{'[5, 0, 0, 6, 2, 1, 0, 1, 0, 0, 8, 9, 1, 1, 0, 0, 0, 1]' : 0.111212}
{'[5, 0, 0, 6, 2, 1, 0, 1, 0, 0, 8, 9, 1, 1, 0, 0, 0, 1]' : 0.11121}
{'[5, 0, 0, 6, 2, 1, 0, 1, 0, 0, 8, 9, 1, 1, 0, 0, 0, 1]' : 0.11128}
{'[5, 0, 0, 6, 2, 1, 0, 1, 0, 0, 8, 9, 1, 1, 0, 0, 0, 1]' : 0.104756}
{'[5, 0, 0, 6, 2, 1, 0, 1, 0, 0, 8, 9, 1, 1, 0, 0, 0, 1]' : 0.0975878}
{'[5, 0, 0, 6, 2, 1, 0, 1, 0, 0, 8, 9, 1, 1, 0, 0, 0, 1]' : 0.0964592}
{'[5, 0, 0, 6, 2, 1, 0, 1, 0, 0, 8, 9, 1, 1, 0, 0, 0, 1]' : 0.0942152}
{'[5, 0, 0, 6, 2, 1, 0, 1, 0, 0, 8, 9, 1, 1, 0, 0, 0, 1]' : 0.0950179}
{'[5, 0, 0, 6, 2, 1, 0, 1, 0, 0, 8, 9, 1, 1, 0, 0, 0, 1]' : 0.09426}
{'[5, 0, 0, 6, 2, 1, 0, 1, 0, 0, 8, 9, 1, 1, 0, 0, 0, 1]' : 0.0947781}
{'[5, 0, 0, 6, 2, 1, 0, 1, 0, 0, 8, 9, 1, 1, 0, 0, 0, 1]' : 0.0948951}
{'[5, 0, 0, 6, 2, 1, 0, 1, 0, 0, 8, 9, 1, 1, 0, 0, 0, 1]' : 0.0970712}
{'[5, 0, 0, 6, 2, 1, 0, 1, 0, 0, 8, 9, 1, 1, 0, 0, 0, 1]' : 0.097558}
{'[5, 0, 0, 6, 2, 1, 0, 1, 0, 0, 8, 9, 1, 1, 0, 0, 0, 1]' : 0.097743}
{'[5, 0, 0, 6, 2, 1, 0, 1, 0, 0, 8, 9, 1, 1, 0, 0, 0, 1]' : 0.0977981}
{'[5, 0, 0, 6, 2, 1, 0, 1, 0, 0, 8, 9, 1, 1, 0, 0, 0, 1]' : 0.0958052}
{'[5, 0, 0, 6, 2, 1, 0, 1, 0, 0, 8, 9, 1, 1, 0, 0, 0, 1]' : 0.096312}
{'[5, 0, 0, 6, 2, 1, 0, 1, 0, 0, 8, 9, 1, 1, 0, 0, 0, 1]' : 0.0972352}
{'[5, 0, 0, 6, 2, 1, 0, 1, 0, 0, 8, 9, 1, 1, 0, 0, 0, 1]' : 0.0972469}
{'[5, 0, 0, 6, 2, 1, 0, 1, 0, 0, 8, 9, 1, 1, 0, 0, 0, 1]' : 0.098139}
{'[5, 0, 0, 6, 2, 1, 0, 1, 0, 0, 8, 9, 1, 1, 0, 0, 0, 1]' : 0.098109}
{'[5, 0, 0, 6, 2, 1, 0, 1, 0, 0, 8, 9, 1, 1, 0, 0, 0, 1]' : 0.098182}
{'[5, 0, 0, 6, 2, 1, 0, 1, 0, 0, 8, 9, 1, 1, 0, 0, 0, 1]' : 0.0980761}
{'[5, 0, 0, 6, 2, 1, 0, 1, 0, 0, 8, 9, 1, 1, 0, 0, 0, 1]' : 0.098779}
{'[5, 0, 0, 6, 2, 1, 0, 1, 0, 0, 8, 9, 1, 1, 0, 0, 0, 1]' : 0.0980909}
{'[5, 0, 0, 6, 2, 1, 0, 1, 0, 0, 8, 9, 1, 1, 0, 0, 0, 1]' : 0.0959051}
{'[5, 0, 0, 6, 2, 1, 0, 1, 0, 0, 8, 9, 1, 1, 0, 0, 0, 1]' : 0.096498}
{'[5, 0, 0, 6, 2, 1, 0, 1, 0, 0, 8, 9, 1, 1, 0, 0, 0, 1]' : 0.097136}
{'[5, 0, 0, 6, 2, 1, 0, 1, 0, 0, 8, 9, 1, 1, 0, 0, 0, 1]' : 0.0971332}

out:
 ["{'[5, 0, 0, 6, 2, 1, 0, 1, 0, 0, 8, 9, 1, 1, 0, 0, 0, 1]' : 0.111253}", "{'[5, 0, 0, 6, 2, 1, 0, 1, 0, 0, 8, 9, 1, 1, 0, 0, 0, 1]' : 0.111212}", "{'[5, 0, 0, 6, 2, 1, 0, 1, 0, 0, 8, 9, 1, 1, 0, 0, 0, 1]' : 0.11121}", "{'[5, 0, 0, 6, 2, 1, 0, 1, 0, 0, 8, 9, 1, 1, 0, 0, 0, 1]' : 0.11128}", "{'[5, 0, 0, 6, 2, 1, 0, 1, 0, 0, 8, 9, 1, 1, 0, 0, 0, 1]' : 0.104756}", "{'[5, 0, 0, 6, 2, 1, 0, 1, 0, 0, 8, 9, 1, 1, 0, 0, 0, 1]' : 0.0975878}", "{'[5, 0, 0, 6, 2, 1, 0, 1, 0, 0, 8, 9, 1, 1, 0, 0, 0, 1]' : 0.0964592}", "{'[5, 0, 0, 6, 2, 1, 0, 1, 0, 0, 8, 9, 1, 1, 0, 0, 0, 1]' : 0.0942152}", "{'[5, 0, 0, 6, 2, 1, 0, 1, 0, 0, 8, 9, 1, 1, 0, 0, 0, 1]' : 0.0950179}", "{'[5, 0, 0, 6, 2, 1, 0, 1, 0, 0, 8, 9, 1, 1, 0, 0, 0, 1]' : 0.09426}", "{'[5, 0, 0, 6, 2, 1, 0, 1, 0, 0, 8, 9, 1, 1, 0, 0, 0, 1]' : 0.0947781}", "{'[5, 0, 0, 6, 2, 1, 0, 1, 0, 0, 8, 9, 1, 1, 0, 0, 0, 1]' : 0.0948951}", "{'[5, 0, 0, 6, 2, 1, 0, 1, 0, 0, 8, 9, 1, 1, 0, 0, 0, 1]' : 0.0970712}", "{'[5, 0, 0, 6, 2, 1, 0, 1, 0, 0, 8, 9, 1, 1, 0, 0, 0, 1]' : 0.097558}", "{'[5, 0, 0, 6, 2, 1, 0, 1, 0, 0, 8, 9, 1, 1, 0, 0, 0, 1]' : 0.097743}", "{'[5, 0, 0, 6, 2, 1, 0, 1, 0, 0, 8, 9, 1, 1, 0, 0, 0, 1]' : 0.0977981}", "{'[5, 0, 0, 6, 2, 1, 0, 1, 0, 0, 8, 9, 1, 1, 0, 0, 0, 1]' : 0.0958052}", "{'[5, 0, 0, 6, 2, 1, 0, 1, 0, 0, 8, 9, 1, 1, 0, 0, 0, 1]' : 0.096312}", "{'[5, 0, 0, 6, 2, 1, 0, 1, 0, 0, 8, 9, 1, 1, 0, 0, 0, 1]' : 0.0972352}", "{'[5, 0, 0, 6, 2, 1, 0, 1, 0, 0, 8, 9, 1, 1, 0, 0, 0, 1]' : 0.0972469}", "{'[5, 0, 0, 6, 2, 1, 0, 1, 0, 0, 8, 9, 1, 1, 0, 0, 0, 1]' : 0.098139}", "{'[5, 0, 0, 6, 2, 1, 0, 1, 0, 0, 8, 9, 1, 1, 0, 0, 0, 1]' : 0.098109}", "{'[5, 0, 0, 6, 2, 1, 0, 1, 0, 0, 8, 9, 1, 1, 0, 0, 0, 1]' : 0.098182}", "{'[5, 0, 0, 6, 2, 1, 0, 1, 0, 0, 8, 9, 1, 1, 0, 0, 0, 1]' : 0.0980761}", "{'[5, 0, 0, 6, 2, 1, 0, 1, 0, 0, 8, 9, 1, 1, 0, 0, 0, 1]' : 0.098779}", "{'[5, 0, 0, 6, 2, 1, 0, 1, 0, 0, 8, 9, 1, 1, 0, 0, 0, 1]' : 0.0980909}", "{'[5, 0, 0, 6, 2, 1, 0, 1, 0, 0, 8, 9, 1, 1, 0, 0, 0, 1]' : 0.0959051}", "{'[5, 0, 0, 6, 2, 1, 0, 1, 0, 0, 8, 9, 1, 1, 0, 0, 0, 1]' : 0.096498}", "{'[5, 0, 0, 6, 2, 1, 0, 1, 0, 0, 8, 9, 1, 1, 0, 0, 0, 1]' : 0.097136}", "{'[5, 0, 0, 6, 2, 1, 0, 1, 0, 0, 8, 9, 1, 1, 0, 0, 0, 1]' : 0.0971332}"]
returning from 'run': {'[5, 0, 0, 6, 2, 1, 0, 1, 0, 0, 8, 9, 1, 1, 0, 0, 0, 1]': ([0.111253, 0.111212, 0.11121, 0.11128, 0.104756, 0.0975878, 0.0964592, 0.0942152, 0.0950179, 0.09426, 0.0947781, 0.0948951, 0.0970712, 0.097558, 0.097743, 0.0977981, 0.0958052, 0.096312, 0.0972352, 0.0972469, 0.098139, 0.098109, 0.098182, 0.0980761, 0.098779, 0.0980909, 0.0959051, 0.096498, 0.097136, 0.0971332], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 0, 0, 6, 2, 1, 0, 1, 0, 0, 8, 9, 1, 1, 0, 0, 0, 1]': ([0.111253, 0.111212, 0.11121, 0.11128, 0.104756, 0.0975878, 0.0964592, 0.0942152, 0.0950179, 0.09426, 0.0947781, 0.0948951, 0.0970712, 0.097558, 0.097743, 0.0977981, 0.0958052, 0.096312, 0.0972352, 0.0972469, 0.098139, 0.098109, 0.098182, 0.0980761, 0.098779, 0.0980909, 0.0959051, 0.096498, 0.097136, 0.0971332], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	6
        Additions: 		395
        Multiplications: 	144
        Divisions: 		0
        Logical: 		0
        Reads: 			872
        Writes: 		197
        Comparisons:		24
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest45.exe __orio_perftest45.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest45.exe  
Program Test Output: 
{'[5, 6, 2, 4, 5, 6, 0, 1, 29, 0, 5, 0, 1, 0, 0, 1, 1, 1]' : 0.104478}
{'[5, 6, 2, 4, 5, 6, 0, 1, 29, 0, 5, 0, 1, 0, 0, 1, 1, 1]' : 0.105136}
{'[5, 6, 2, 4, 5, 6, 0, 1, 29, 0, 5, 0, 1, 0, 0, 1, 1, 1]' : 0.105143}
{'[5, 6, 2, 4, 5, 6, 0, 1, 29, 0, 5, 0, 1, 0, 0, 1, 1, 1]' : 0.105164}
{'[5, 6, 2, 4, 5, 6, 0, 1, 29, 0, 5, 0, 1, 0, 0, 1, 1, 1]' : 0.105094}
{'[5, 6, 2, 4, 5, 6, 0, 1, 29, 0, 5, 0, 1, 0, 0, 1, 1, 1]' : 0.105222}
{'[5, 6, 2, 4, 5, 6, 0, 1, 29, 0, 5, 0, 1, 0, 0, 1, 1, 1]' : 0.105092}
{'[5, 6, 2, 4, 5, 6, 0, 1, 29, 0, 5, 0, 1, 0, 0, 1, 1, 1]' : 0.104584}
{'[5, 6, 2, 4, 5, 6, 0, 1, 29, 0, 5, 0, 1, 0, 0, 1, 1, 1]' : 0.102849}
{'[5, 6, 2, 4, 5, 6, 0, 1, 29, 0, 5, 0, 1, 0, 0, 1, 1, 1]' : 0.10071}
{'[5, 6, 2, 4, 5, 6, 0, 1, 29, 0, 5, 0, 1, 0, 0, 1, 1, 1]' : 0.103462}
{'[5, 6, 2, 4, 5, 6, 0, 1, 29, 0, 5, 0, 1, 0, 0, 1, 1, 1]' : 0.105033}
{'[5, 6, 2, 4, 5, 6, 0, 1, 29, 0, 5, 0, 1, 0, 0, 1, 1, 1]' : 0.105066}
{'[5, 6, 2, 4, 5, 6, 0, 1, 29, 0, 5, 0, 1, 0, 0, 1, 1, 1]' : 0.105153}
{'[5, 6, 2, 4, 5, 6, 0, 1, 29, 0, 5, 0, 1, 0, 0, 1, 1, 1]' : 0.104996}
{'[5, 6, 2, 4, 5, 6, 0, 1, 29, 0, 5, 0, 1, 0, 0, 1, 1, 1]' : 0.105147}
{'[5, 6, 2, 4, 5, 6, 0, 1, 29, 0, 5, 0, 1, 0, 0, 1, 1, 1]' : 0.104969}
{'[5, 6, 2, 4, 5, 6, 0, 1, 29, 0, 5, 0, 1, 0, 0, 1, 1, 1]' : 0.105019}
{'[5, 6, 2, 4, 5, 6, 0, 1, 29, 0, 5, 0, 1, 0, 0, 1, 1, 1]' : 0.105148}
{'[5, 6, 2, 4, 5, 6, 0, 1, 29, 0, 5, 0, 1, 0, 0, 1, 1, 1]' : 0.105165}
{'[5, 6, 2, 4, 5, 6, 0, 1, 29, 0, 5, 0, 1, 0, 0, 1, 1, 1]' : 0.1054}
{'[5, 6, 2, 4, 5, 6, 0, 1, 29, 0, 5, 0, 1, 0, 0, 1, 1, 1]' : 0.105276}
{'[5, 6, 2, 4, 5, 6, 0, 1, 29, 0, 5, 0, 1, 0, 0, 1, 1, 1]' : 0.102984}
{'[5, 6, 2, 4, 5, 6, 0, 1, 29, 0, 5, 0, 1, 0, 0, 1, 1, 1]' : 0.10328}
{'[5, 6, 2, 4, 5, 6, 0, 1, 29, 0, 5, 0, 1, 0, 0, 1, 1, 1]' : 0.103522}
{'[5, 6, 2, 4, 5, 6, 0, 1, 29, 0, 5, 0, 1, 0, 0, 1, 1, 1]' : 0.105004}
{'[5, 6, 2, 4, 5, 6, 0, 1, 29, 0, 5, 0, 1, 0, 0, 1, 1, 1]' : 0.10502}
{'[5, 6, 2, 4, 5, 6, 0, 1, 29, 0, 5, 0, 1, 0, 0, 1, 1, 1]' : 0.105012}
{'[5, 6, 2, 4, 5, 6, 0, 1, 29, 0, 5, 0, 1, 0, 0, 1, 1, 1]' : 0.10495}
{'[5, 6, 2, 4, 5, 6, 0, 1, 29, 0, 5, 0, 1, 0, 0, 1, 1, 1]' : 0.104427}

out:
 ["{'[5, 6, 2, 4, 5, 6, 0, 1, 29, 0, 5, 0, 1, 0, 0, 1, 1, 1]' : 0.104478}", "{'[5, 6, 2, 4, 5, 6, 0, 1, 29, 0, 5, 0, 1, 0, 0, 1, 1, 1]' : 0.105136}", "{'[5, 6, 2, 4, 5, 6, 0, 1, 29, 0, 5, 0, 1, 0, 0, 1, 1, 1]' : 0.105143}", "{'[5, 6, 2, 4, 5, 6, 0, 1, 29, 0, 5, 0, 1, 0, 0, 1, 1, 1]' : 0.105164}", "{'[5, 6, 2, 4, 5, 6, 0, 1, 29, 0, 5, 0, 1, 0, 0, 1, 1, 1]' : 0.105094}", "{'[5, 6, 2, 4, 5, 6, 0, 1, 29, 0, 5, 0, 1, 0, 0, 1, 1, 1]' : 0.105222}", "{'[5, 6, 2, 4, 5, 6, 0, 1, 29, 0, 5, 0, 1, 0, 0, 1, 1, 1]' : 0.105092}", "{'[5, 6, 2, 4, 5, 6, 0, 1, 29, 0, 5, 0, 1, 0, 0, 1, 1, 1]' : 0.104584}", "{'[5, 6, 2, 4, 5, 6, 0, 1, 29, 0, 5, 0, 1, 0, 0, 1, 1, 1]' : 0.102849}", "{'[5, 6, 2, 4, 5, 6, 0, 1, 29, 0, 5, 0, 1, 0, 0, 1, 1, 1]' : 0.10071}", "{'[5, 6, 2, 4, 5, 6, 0, 1, 29, 0, 5, 0, 1, 0, 0, 1, 1, 1]' : 0.103462}", "{'[5, 6, 2, 4, 5, 6, 0, 1, 29, 0, 5, 0, 1, 0, 0, 1, 1, 1]' : 0.105033}", "{'[5, 6, 2, 4, 5, 6, 0, 1, 29, 0, 5, 0, 1, 0, 0, 1, 1, 1]' : 0.105066}", "{'[5, 6, 2, 4, 5, 6, 0, 1, 29, 0, 5, 0, 1, 0, 0, 1, 1, 1]' : 0.105153}", "{'[5, 6, 2, 4, 5, 6, 0, 1, 29, 0, 5, 0, 1, 0, 0, 1, 1, 1]' : 0.104996}", "{'[5, 6, 2, 4, 5, 6, 0, 1, 29, 0, 5, 0, 1, 0, 0, 1, 1, 1]' : 0.105147}", "{'[5, 6, 2, 4, 5, 6, 0, 1, 29, 0, 5, 0, 1, 0, 0, 1, 1, 1]' : 0.104969}", "{'[5, 6, 2, 4, 5, 6, 0, 1, 29, 0, 5, 0, 1, 0, 0, 1, 1, 1]' : 0.105019}", "{'[5, 6, 2, 4, 5, 6, 0, 1, 29, 0, 5, 0, 1, 0, 0, 1, 1, 1]' : 0.105148}", "{'[5, 6, 2, 4, 5, 6, 0, 1, 29, 0, 5, 0, 1, 0, 0, 1, 1, 1]' : 0.105165}", "{'[5, 6, 2, 4, 5, 6, 0, 1, 29, 0, 5, 0, 1, 0, 0, 1, 1, 1]' : 0.1054}", "{'[5, 6, 2, 4, 5, 6, 0, 1, 29, 0, 5, 0, 1, 0, 0, 1, 1, 1]' : 0.105276}", "{'[5, 6, 2, 4, 5, 6, 0, 1, 29, 0, 5, 0, 1, 0, 0, 1, 1, 1]' : 0.102984}", "{'[5, 6, 2, 4, 5, 6, 0, 1, 29, 0, 5, 0, 1, 0, 0, 1, 1, 1]' : 0.10328}", "{'[5, 6, 2, 4, 5, 6, 0, 1, 29, 0, 5, 0, 1, 0, 0, 1, 1, 1]' : 0.103522}", "{'[5, 6, 2, 4, 5, 6, 0, 1, 29, 0, 5, 0, 1, 0, 0, 1, 1, 1]' : 0.105004}", "{'[5, 6, 2, 4, 5, 6, 0, 1, 29, 0, 5, 0, 1, 0, 0, 1, 1, 1]' : 0.10502}", "{'[5, 6, 2, 4, 5, 6, 0, 1, 29, 0, 5, 0, 1, 0, 0, 1, 1, 1]' : 0.105012}", "{'[5, 6, 2, 4, 5, 6, 0, 1, 29, 0, 5, 0, 1, 0, 0, 1, 1, 1]' : 0.10495}", "{'[5, 6, 2, 4, 5, 6, 0, 1, 29, 0, 5, 0, 1, 0, 0, 1, 1, 1]' : 0.104427}"]
returning from 'run': {'[5, 6, 2, 4, 5, 6, 0, 1, 29, 0, 5, 0, 1, 0, 0, 1, 1, 1]': ([0.104478, 0.105136, 0.105143, 0.105164, 0.105094, 0.105222, 0.105092, 0.104584, 0.102849, 0.10071, 0.103462, 0.105033, 0.105066, 0.105153, 0.104996, 0.105147, 0.104969, 0.105019, 0.105148, 0.105165, 0.1054, 0.105276, 0.102984, 0.10328, 0.103522, 0.105004, 0.10502, 0.105012, 0.10495, 0.104427], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 6, 2, 4, 5, 6, 0, 1, 29, 0, 5, 0, 1, 0, 0, 1, 1, 1]': ([0.104478, 0.105136, 0.105143, 0.105164, 0.105094, 0.105222, 0.105092, 0.104584, 0.102849, 0.10071, 0.103462, 0.105033, 0.105066, 0.105153, 0.104996, 0.105147, 0.104969, 0.105019, 0.105148, 0.105165, 0.1054, 0.105276, 0.102984, 0.10328, 0.103522, 0.105004, 0.10502, 0.105012, 0.10495, 0.104427], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	5
        Additions: 		215
        Multiplications: 	76
        Divisions: 		0
        Logical: 		0
        Reads: 			474
        Writes: 		96
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest46.exe __orio_perftest46.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest46.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest46.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest46.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest46.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Complete design, with measurements:
     T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
280     2    2    3    0    0    1       0       0   29   0   8   4    0    0
316     2    0    2    3    3    5       1       1    0   1   0  27    0    0
381     1    2    0    6    2    3       0       0   29  25  29   0    0    1
510     2    6    5    2    5    4       0       0    0   7   9   0    0    1
514     0    4    6    2    0    5       1       1    0   0  29  29    2    0
657     2    0    0    2    6    2       0       1    0  24  10   0    1    0
821     2    1    1    5    2    5       1       0   14  21   0   3    1    0
888     2    5    0    5    6    6       1       0    1  29  19   0    0    0
929     0    1    4    1    4    4       1       1   28  29   0  29    2    0
1017    6    6    4    0    4    5       1       1    9   5  26   0    0    1
1032    6    4    6    0    0    6       0       0    1  29   0  20    0    0
1480    6    0    4    6    1    3       1       1   23   0  20  12    0    0
1506    0    0    4    2    3    0       0       0   21  28   0   4    0    1
1612    6    0    0    4    5    2       1       0    8   0   5  29    0    0
1623    0    0    5    5    4    0       0       0   16  29  11   0    0    0
1682    5    3    0    0    2    6       0       0    0   0  18  10    1    0
1750    2    1    1    2    3    5       0       0   13   6   0   5    2    0
1820    2    0    6    6    6    5       0       1   29   0  17  10    0    1
1961    2    0    0    1    0    0       1       0    2   0   6  14    1    1
2026    2    4    0    0    3    1       0       1   21   1   0   0    0    2
2044    6    2    1    0    0    0       1       0   29  28  29   0    0    1
2065    1    2    4    0    6    3       0       0    2   0   2  27    0    0
2259    6    1    6    4    6    0       1       1   24   0  29   8    2    0
2465    3    3    5    1    0    5       1       0   24   0   0   0    0    1
2607    0    0    1    5    0    6       0       0    5  27   0   0    2    0
2624    5    0    0    0    2    6       0       1   15  18   9   0    2    0
2642    5    1    6    6    4    0       0       0   28   4   0  22    2    0
2700    2    6    3    0    6    2       1       0   28  18   0  28    2    0
2719    0    6    2    0    6    1       0       0    6   0  16  15    0    2
2721    0    0    5    6    0    3       1       1    4   0  14  28    1    1
3006    4    3    0    2    6    5       0       1   21   3  28   0    0    0
3111    0    0    0    0    5    4       1       0   17   1   0   3    1    0
3596    5    0    6    3    4    6       0       1   24   0  29  28    1    0
3699    3    5    1    6    3    3       1       0   15   3   0   6    1    0
4161    6    0    5    5    3    0       0       0    8   8  29   0    0    0
4303    0    2    1    1    5    0       1       0    0   0   3   1    0    1
4436    4    6    1    5    0    0       0       1   17  20   0  29    0    0
4449    5    0    0    6    2    1       0       1    0   0   8   9    1    1
4464    5    6    2    4    5    6       0       1   29   0   5   0    1    0
     RT_K SCR VEC1 VEC2  cost_mean
280     2   0    0    1 0.18572557
316     0   1    1    1 0.20755603
381     1   1    0    1 0.15355790
510     1   1    0    1 0.09180062
514     0   0    1    1 0.27294880
657     1   0    1    0 0.10837157
821     1   0    1    1 0.11440393
888     2   1    1    0 0.19577927
929     0   1    0    0 0.17529207
1017    1   1    1    0 0.15795580
1032    1   0    1    1 0.15230627
1480    0   1    0    0 0.23363097
1506    0   0    1    1 0.15473050
1612    1   1    1    0 0.18583390
1623    0   0    1    0 0.19477097
1682    1   0    0    0 0.11042860
1750    0   0    0    0 0.21188197
1820    1   0    0    0 0.26117630
1961    0   1    0    0 0.09152068
2026    0   0    1    1 0.17760147
2044    0   1    1    1 0.21465437
2065    2   1    1    1 0.15225370
2259    0   0    0    1 0.19318730
2465    0   1    0    0 0.19399790
2607    0   1    0    0 0.18245540
2624    0   1    1    1 0.16589410
2642    0   1    1    0 0.17411513
2700    0   0    1    0 0.21968190
2719    0   1    1    0 0.16186103
2721    0   0    1    0 0.10970937
3006    0   1    0    0 0.14659310
3111    1   1    0    1 0.09895817
3596    1   0    0    1 0.11705063
3699    0   1    1    1 0.11431380
4161    2   0    0    1 0.13895217
4303    1   0    1    1 0.21754217
4436    1   0    0    1 0.22765390
4449    0   0    0    1 0.09899141
4464    0   1    1    1 0.10458350

Heteroscedasticity Test p-value: 0.0806522251769
Regression Step:                Df  Sum Sq Mean Sq F value   Pr(>F)    
T1_I             1 0.00040 0.00040   0.438 0.529376    
T1_J             1 0.00026 0.00026   0.286 0.609293    
T1_K             1 0.00547 0.00547   5.954 0.044759 *  
T2_I             1 0.00005 0.00005   0.055 0.821965    
T2_J             1 0.00067 0.00067   0.732 0.420469    
T2_K             1 0.00063 0.00063   0.690 0.433478    
ACOPY_x          1 0.00304 0.00304   3.310 0.111687    
ACOPY_y          1 0.00154 0.00154   1.677 0.236456    
U1_I             1 0.00396 0.00396   4.316 0.076366 .  
U_I              1 0.00106 0.00106   1.151 0.318843    
U_J              1 0.00033 0.00033   0.363 0.566073    
U_K              1 0.00160 0.00160   1.745 0.228079    
RT_I             1 0.00100 0.00100   1.084 0.332361    
RT_J             1 0.00127 0.00127   1.379 0.278618    
RT_K             1 0.00092 0.00092   0.999 0.350884    
SCR              1 0.00175 0.00175   1.909 0.209582    
VEC1             1 0.00016 0.00016   0.170 0.692693    
VEC2             1 0.00250 0.00250   2.719 0.143143    
I(1/(1 + T1_I))  1 0.00006 0.00006   0.060 0.813059    
I(1/(1 + T1_J))  1 0.00238 0.00238   2.590 0.151577    
I(1/(1 + T1_K))  1 0.00167 0.00167   1.823 0.219013    
I(1/(1 + T2_I))  1 0.00015 0.00015   0.164 0.697946    
I(1/(1 + T2_J))  1 0.00094 0.00094   1.021 0.345975    
I(1/(1 + T2_K))  1 0.00216 0.00216   2.349 0.169195    
I(1/(1 + U1_I))  1 0.00121 0.00121   1.318 0.288724    
I(1/(1 + U_I))   1 0.00029 0.00029   0.313 0.593001    
I(1/(1 + U_J))   1 0.00108 0.00108   1.177 0.313958    
I(1/(1 + U_K))   1 0.00041 0.00041   0.445 0.526144    
I(1/(1 + RT_I))  1 0.04404 0.04404  47.947 0.000226 ***
I(1/(1 + RT_J))  1 0.00003 0.00003   0.028 0.870955    
I(1/(1 + RT_K))  1 0.00070 0.00070   0.757 0.413127    
Residuals        7 0.00643 0.00092                     
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Predicting Best
Generating valid search space of size 4600 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Valid coordinates: 920
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Valid coordinates: 1840
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Tested coordinates: 110000
Valid coordinates: 2760
Tested coordinates: 120000
Tested coordinates: 130000
Tested coordinates: 140000
Tested coordinates: 150000
Valid coordinates: 3680
Tested coordinates: 160000
Tested coordinates: 170000
Tested coordinates: 180000
Tested coordinates: 190000
Valid coordinates: 4600
Valid/Tested configurations: 4600/191462
Generated Search Space:
NULL
Identical predictions (tol = 1e-5): 1
Getting Best from Design
Response: ['cost_mean']
Design Names:  [1] "T1_I"      "T1_J"      "T1_K"      "T2_I"      "T2_J"      "T2_K"     
 [7] "ACOPY_x"   "ACOPY_y"   "U1_I"      "U_I"       "U_J"       "U_K"      
[13] "RT_I"      "RT_J"      "RT_K"      "SCR"       "VEC1"      "VEC2"     
[19] "cost_mean"

Design Response:       cost_mean
280  0.18572557
316  0.20755603
381  0.15355790
510  0.09180062
514  0.27294880
657  0.10837157
821  0.11440393
888  0.19577927
929  0.17529207
1017 0.15795580
1032 0.15230627
1480 0.23363097
1506 0.15473050
1612 0.18583390
1623 0.19477097
1682 0.11042860
1750 0.21188197
1820 0.26117630
1961 0.09152068
2026 0.17760147
2044 0.21465437
2065 0.15225370
2259 0.19318730
2465 0.19399790
2607 0.18245540
2624 0.16589410
2642 0.17411513
2700 0.21968190
2719 0.16186103
2721 0.10970937
3006 0.14659310
3111 0.09895817
3596 0.11705063
3699 0.11431380
4161 0.13895217
4303 0.21754217
4436 0.22765390
4449 0.09899141
4464 0.10458350

Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Getting fixed variables
Pruning Model
Best Predicted:      T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
2564    0    1    5    1    4    3       0       1    1  18   0   0    1    1
     RT_K SCR VEC1 VEC2
2564    0   1    0    1

Best From Design: [2, 0, 0, 1, 0, 0, 1, 0, 2, 0, 6, 14, 1, 1, 0, 1, 0, 0]
Pruned Factors: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Fixed Factors: {'U1_I': 1, 'T1_K': 5}
Length of requested configs: 1
Result was on Database, Returning Now
Starting Point (-O3):
0.16283083333333334
Predicted Best Point:
[0, 1, 5, 1, 4, 3, 0, 1, 1, 18, 0, 0, 1, 1, 0, 1, 0, 1]
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = kkk
Code stats:
        Number of loops: 	66
        Max loop nest depth: 	5
        Additions: 		1332
        Multiplications: 	560
        Divisions: 		0
        Logical: 		0
        Reads: 			2920
        Writes: 		567
        Comparisons:		66
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest47.exe __orio_perftest47.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest47.exe  
Program Test Output: 
{'[0, 1, 5, 1, 4, 3, 0, 1, 1, 18, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.12054}
{'[0, 1, 5, 1, 4, 3, 0, 1, 1, 18, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.120712}
{'[0, 1, 5, 1, 4, 3, 0, 1, 1, 18, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.106787}
{'[0, 1, 5, 1, 4, 3, 0, 1, 1, 18, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.101298}
{'[0, 1, 5, 1, 4, 3, 0, 1, 1, 18, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.1013}
{'[0, 1, 5, 1, 4, 3, 0, 1, 1, 18, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.101658}
{'[0, 1, 5, 1, 4, 3, 0, 1, 1, 18, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.101258}
{'[0, 1, 5, 1, 4, 3, 0, 1, 1, 18, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.101343}
{'[0, 1, 5, 1, 4, 3, 0, 1, 1, 18, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.101238}
{'[0, 1, 5, 1, 4, 3, 0, 1, 1, 18, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.10127}
{'[0, 1, 5, 1, 4, 3, 0, 1, 1, 18, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.101233}
{'[0, 1, 5, 1, 4, 3, 0, 1, 1, 18, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.101367}
{'[0, 1, 5, 1, 4, 3, 0, 1, 1, 18, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.101313}
{'[0, 1, 5, 1, 4, 3, 0, 1, 1, 18, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.101242}
{'[0, 1, 5, 1, 4, 3, 0, 1, 1, 18, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.101315}
{'[0, 1, 5, 1, 4, 3, 0, 1, 1, 18, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.101475}
{'[0, 1, 5, 1, 4, 3, 0, 1, 1, 18, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.101259}
{'[0, 1, 5, 1, 4, 3, 0, 1, 1, 18, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.101306}
{'[0, 1, 5, 1, 4, 3, 0, 1, 1, 18, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.101892}
{'[0, 1, 5, 1, 4, 3, 0, 1, 1, 18, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.101545}
{'[0, 1, 5, 1, 4, 3, 0, 1, 1, 18, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.101512}
{'[0, 1, 5, 1, 4, 3, 0, 1, 1, 18, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.101301}
{'[0, 1, 5, 1, 4, 3, 0, 1, 1, 18, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.101296}
{'[0, 1, 5, 1, 4, 3, 0, 1, 1, 18, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.101225}
{'[0, 1, 5, 1, 4, 3, 0, 1, 1, 18, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.101274}
{'[0, 1, 5, 1, 4, 3, 0, 1, 1, 18, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.101215}
{'[0, 1, 5, 1, 4, 3, 0, 1, 1, 18, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.101289}
{'[0, 1, 5, 1, 4, 3, 0, 1, 1, 18, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.101284}
{'[0, 1, 5, 1, 4, 3, 0, 1, 1, 18, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.101227}
{'[0, 1, 5, 1, 4, 3, 0, 1, 1, 18, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.101249}

out:
 ["{'[0, 1, 5, 1, 4, 3, 0, 1, 1, 18, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.12054}", "{'[0, 1, 5, 1, 4, 3, 0, 1, 1, 18, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.120712}", "{'[0, 1, 5, 1, 4, 3, 0, 1, 1, 18, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.106787}", "{'[0, 1, 5, 1, 4, 3, 0, 1, 1, 18, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.101298}", "{'[0, 1, 5, 1, 4, 3, 0, 1, 1, 18, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.1013}", "{'[0, 1, 5, 1, 4, 3, 0, 1, 1, 18, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.101658}", "{'[0, 1, 5, 1, 4, 3, 0, 1, 1, 18, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.101258}", "{'[0, 1, 5, 1, 4, 3, 0, 1, 1, 18, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.101343}", "{'[0, 1, 5, 1, 4, 3, 0, 1, 1, 18, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.101238}", "{'[0, 1, 5, 1, 4, 3, 0, 1, 1, 18, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.10127}", "{'[0, 1, 5, 1, 4, 3, 0, 1, 1, 18, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.101233}", "{'[0, 1, 5, 1, 4, 3, 0, 1, 1, 18, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.101367}", "{'[0, 1, 5, 1, 4, 3, 0, 1, 1, 18, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.101313}", "{'[0, 1, 5, 1, 4, 3, 0, 1, 1, 18, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.101242}", "{'[0, 1, 5, 1, 4, 3, 0, 1, 1, 18, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.101315}", "{'[0, 1, 5, 1, 4, 3, 0, 1, 1, 18, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.101475}", "{'[0, 1, 5, 1, 4, 3, 0, 1, 1, 18, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.101259}", "{'[0, 1, 5, 1, 4, 3, 0, 1, 1, 18, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.101306}", "{'[0, 1, 5, 1, 4, 3, 0, 1, 1, 18, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.101892}", "{'[0, 1, 5, 1, 4, 3, 0, 1, 1, 18, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.101545}", "{'[0, 1, 5, 1, 4, 3, 0, 1, 1, 18, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.101512}", "{'[0, 1, 5, 1, 4, 3, 0, 1, 1, 18, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.101301}", "{'[0, 1, 5, 1, 4, 3, 0, 1, 1, 18, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.101296}", "{'[0, 1, 5, 1, 4, 3, 0, 1, 1, 18, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.101225}", "{'[0, 1, 5, 1, 4, 3, 0, 1, 1, 18, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.101274}", "{'[0, 1, 5, 1, 4, 3, 0, 1, 1, 18, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.101215}", "{'[0, 1, 5, 1, 4, 3, 0, 1, 1, 18, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.101289}", "{'[0, 1, 5, 1, 4, 3, 0, 1, 1, 18, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.101284}", "{'[0, 1, 5, 1, 4, 3, 0, 1, 1, 18, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.101227}", "{'[0, 1, 5, 1, 4, 3, 0, 1, 1, 18, 0, 0, 1, 1, 0, 1, 0, 1]' : 0.101249}"]
returning from 'run': {'[0, 1, 5, 1, 4, 3, 0, 1, 1, 18, 0, 0, 1, 1, 0, 1, 0, 1]': ([0.12054, 0.120712, 0.106787, 0.101298, 0.1013, 0.101658, 0.101258, 0.101343, 0.101238, 0.10127, 0.101233, 0.101367, 0.101313, 0.101242, 0.101315, 0.101475, 0.101259, 0.101306, 0.101892, 0.101545, 0.101512, 0.101301, 0.101296, 0.101225, 0.101274, 0.101215, 0.101289, 0.101284, 0.101227, 0.101249], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 1, 5, 1, 4, 3, 0, 1, 1, 18, 0, 0, 1, 1, 0, 1, 0, 1]': ([0.12054, 0.120712, 0.106787, 0.101298, 0.1013, 0.101658, 0.101258, 0.101343, 0.101238, 0.10127, 0.101233, 0.101367, 0.101313, 0.101242, 0.101315, 0.101475, 0.101259, 0.101306, 0.101892, 0.101545, 0.101512, 0.101301, 0.101296, 0.101225, 0.101274, 0.101215, 0.101289, 0.101284, 0.101227, 0.101249], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Design Best Point:
[2, 0, 0, 1, 0, 0, 1, 0, 2, 0, 6, 14, 1, 1, 0, 1, 0, 0]
Length of requested configs: 1
Result was on Database, Returning Now
Fixed Factors: {'U1_I': 1, 'T1_K': 5}
Slowdown (Design Best): 0.5620599088010565
Slowdown (Predicted Best): 0.6313757120119552
Budget: 39/180
Updating Global Best: 0.09152068333333337
Current Best Point: 
[2, 0, 0, 1, 0, 0, 1, 0, 2, 0, 6, 14, 1, 1, 0, 1, 0, 0]
Step 1
Generating valid search space of size 4000 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Tested coordinates: 40000
Valid coordinates: 800
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Tested coordinates: 80000
Valid coordinates: 1600
Tested coordinates: 90000
Tested coordinates: 100000
Tested coordinates: 110000
Tested coordinates: 120000
Valid coordinates: 2400
Tested coordinates: 130000
Tested coordinates: 140000
Tested coordinates: 150000
Tested coordinates: 160000
Valid coordinates: 3200
Tested coordinates: 170000
Tested coordinates: 180000
Tested coordinates: 190000
Tested coordinates: 200000
Valid coordinates: 4000
Valid/Tested configurations: 4000/208745
Generated Search Space:
NULL
Clean Info:
Removed Factors: character(0)

Removed Inverse Factors: [1] "ACOPY_x" "ACOPY_y" "SCR"     "VEC1"    "VEC2"   

New Factors: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
New Inverse Factors: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'T2_K', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
New Fixed Factors: {'U1_I': 1, 'T1_K': 5}
Full Model:  ~ T1_I + T1_J + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Fixed Factors: {'U1_I': 1, 'T1_K': 5}
Computing D-Optimal Design
Computing D-Optimal Design with 40 experiments
Design Formula:  ~ T1_I + T1_J + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Starting "optFederov" run
Using Search Space:
NULL
Data Dimensions: [1] 4000   16

