
====== START ORIO ======

----- begin reading the source file: atax2.src1.c -----
----- finished reading the source file -----

----- begin parsing annotations -----
----- finished parsing annotations -----

----- begin optimizations -----
Search_Space         = 8.234e+13
Number_of_Parameters = 18
Numeric_Parameters   = 13
Binary_Parameters    = 05
['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
[[1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [False, True], [False, True], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 8, 32], [1, 8, 32], [1, 8, 32], [False, True], [False, True], [False, True]]

----- begin empirical tuning for problem size -----
 N = 10000
Parameters: {'ACOPY_x': [0, 2], 'ACOPY_y': [0, 2], 'RT_K': [0, 3], 'T1_I': [0, 7], 'T1_J': [0, 7], 'T1_K': [0, 7], 'U_K': [0, 30], 'U_J': [0, 30], 'U_I': [0, 30], 'U1_I': [0, 30], 'T2_K': [0, 7], 'T2_J': [0, 7], 'T2_I': [0, 7], 'VEC2': [0, 2], 'VEC1': [0, 2], 'RT_I': [0, 3], 'SCR': [0, 2], 'RT_J': [0, 3]}
Parameter Range Values: {'ACOPY_x': [False, True], 'ACOPY_y': [False, True], 'RT_K': [1, 8, 32], 'T1_I': [1, 16, 32, 64, 128, 256, 512], 'T1_J': [1, 16, 32, 64, 128, 256, 512], 'T1_K': [1, 16, 32, 64, 128, 256, 512], 'U_K': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_J': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U1_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'T2_K': [1, 64, 128, 256, 512, 1024, 2048], 'T2_J': [1, 64, 128, 256, 512, 1024, 2048], 'T2_I': [1, 64, 128, 256, 512, 1024, 2048], 'VEC2': [False, True], 'VEC1': [False, True], 'RT_I': [1, 8, 32], 'SCR': [False, True], 'RT_J': [1, 8, 32]}

----- begin random search -----
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Inverse Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Starting DOPT-anova
Step 0
Generating valid search space of size 4600 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Valid coordinates: 920
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Valid coordinates: 1840
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Tested coordinates: 110000
Valid coordinates: 2760
Tested coordinates: 120000
Tested coordinates: 130000
Tested coordinates: 140000
Tested coordinates: 150000
Valid coordinates: 3680
Tested coordinates: 160000
Tested coordinates: 170000
Tested coordinates: 180000
Tested coordinates: 190000
Valid coordinates: 4600
Valid/Tested configurations: 4600/193436
Generated Search Space:
NULL
Clean Info:
Removed Factors: character(0)

Removed Inverse Factors: [1] "ACOPY_x" "ACOPY_y" "SCR"     "VEC1"    "VEC2"   

New Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
New Inverse Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
New Fixed Factors: {}
Full Model:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Fixed Factors: {}
Computing D-Optimal Design
Computing D-Optimal Design with 46 experiments
Design Formula:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Starting "optFederov" run
Using Search Space:
NULL
Data Dimensions: [1] 4600   18

     T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
600     0    1    0    3    6    6       0       0   14   2   0  18    0    0
601     0    0    1    2    3    5       0       0    0   3   9   0    1    1
622     3    5    4    4    5    6       0       1   25  29   0  29    2    0
650     3    1    6    6    2    6       1       1    2  29  29   0    0    1
652     6    6    0    0    0    6       0       0   25   3  25   0    0    0
696     0    6    0    6    0    1       1       0   20   1   3   0    0    1
721     6    1    4    4    3    2       0       1   29   0   3   3    0    0
729     0    2    6    2    5    4       0       0    8  24  10   0    0    0
803     2    6    4    0    5    0       0       0   12   0  29  27    0    2
852     2    4    0    2    2    0       1       1    0   0  13  23    0    0
888     2    0    3    0    5    6       1       1    0   0  12   4    2    0
938     5    6    6    3    0    5       1       1    0   9   0   9    1    0
992     2    1    6    5    6    5       0       0   29   0  29  29    2    0
1021    0    0    2    2    0    6       0       1   18   0   5   0    1    1
1037    6    0    0    6    6    0       1       0   27  22  21   0    1    0
1071    0    0    0    0    6    3       0       1    0   0  27  28    2    0
1215    3    4    3    2    0    2       1       1   26  27   0  16    0    0
1286    6    1    0    4    6    5       1       0    4  14   0  12    0    1
1389    5    0    4    6    0    0       1       1    0  23   0  28    0    0
1470    6    1    2    0    2    5       1       0   29   0   8  27    0    2
1528    6    2    3    0    1    1       0       0    0  17   0   3    0    2
1536    2    3    6    0    3    0       1       0   29  23   0   0    0    0
1872    1    1    3    0    0    0       0       0    4  19   4   0    0    1
1874    6    5    6    0    6    0       1       1   16  10   0  12    1    1
2043    4    2    1    0    0    3       1       0    6   0  26  22    1    0
2196    0    6    1    2    5    1       1       0   29   0  29   0    0    2
2396    0    3    1    3    1    0       0       1   18   3  28   0    2    0
2411    0    6    4    3    5    6       1       1   19   0  24  20    0    0
2577    3    2    2    6    6    3       1       1    2   2   7   0    2    0
2840    3    0    4    6    2    2       1       0   27   5   0  22    1    1
2919    6    2    1    6    6    0       0       1   29  12   0  27    1    1
2934    6    0    6    4    2    0       1       1    3  27  12   0    0    0
3110    1    6    6    6    0    6       0       0   12   0   6  19    2    0
3191    5    6    1    4    4    2       1       0   14   0  24   0    1    0
3538    4    0    1    5    3    3       1       0    9   6   0  27    0    0
3669    5    0    4    3    0    5       0       1   24   3   0  23    0    2
3826    0    3    4    6    4    6       1       0    0   0  11  27    0    2
4026    2    5    2    6    0    5       1       0   29  28  28   0    0    0
4039    4    3    0    6    1    6       0       0   20   0   0   5    1    0
4040    2    5    0    3    6    5       0       1   27   4   8   0    0    2
4142    0    3    0    0    1    3       1       1    5  26   0  21    2    0
4164    2    0    4    1    1    3       1       0   13   0   0   7    0    1
4304    6    6    2    4    6    4       1       0    4   8   0  23    0    0
4311    6    6    4    5    6    6       0       1    9   5   0   0    0    1
4442    0    0    3    6    4    0       0       1   18  10   0  13    0    0
4446    0    1    5    2    0    0       1       1   25   0  26   5    0    1
     RT_K SCR VEC1 VEC2
600     2   1    1    0
601     0   0    0    0
622     0   0    1    1
650     1   1    0    0
652     1   0    1    1
696     0   0    1    1
721     2   0    0    1
729     0   0    0    0
803     0   1    0    0
852     2   1    0    1
888     0   0    1    1
938     1   0    1    1
992     0   0    1    0
1021    0   1    0    0
1037    0   1    0    1
1071    0   1    0    0
1215    0   1    1    0
1286    1   0    0    1
1389    1   1    1    1
1470    0   1    0    0
1528    0   1    1    1
1536    1   1    0    1
1872    1   0    1    1
1874    0   0    1    0
2043    0   0    1    1
2196    0   0    0    1
2396    0   1    1    0
2411    0   0    0    1
2577    0   1    0    1
2840    0   1    1    1
2919    0   0    0    1
2934    2   1    1    1
3110    0   1    0    1
3191    1   1    1    0
3538    0   1    1    0
3669    0   0    0    0
3826    0   0    1    0
4026    2   1    0    1
4039    0   0    0    0
4040    0   1    1    0
4142    0   0    1    1
4164    0   1    1    0
4304    2   0    0    0
4311    0   1    1    1
4442    1   0    0    0
4446    1   1    1    1

D-Efficiency Approximation: [1] 0.287

Measuring design of size 46
Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Length of requested configs: 1
Code stats:
        Number of loops: 	23
        Max loop nest depth: 	5
        Additions: 		1129
        Multiplications: 	424
        Divisions: 		0
        Logical: 		0
        Reads: 			2587
        Writes: 		578
        Comparisons:		23
        Gotos: 			0
        
 building the original code:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -DORIGINAL -o __orio_perftest_original.exe __orio_perftest1.c timer_cpu.o -lm
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest1.exe __orio_perftest1.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest1.exe  
Program Test Output: 
{'[0, 1, 0, 3, 6, 6, 0, 0, 14, 2, 0, 18, 0, 0, 2, 1, 1, 0]' : 0.112553}
{'[0, 1, 0, 3, 6, 6, 0, 0, 14, 2, 0, 18, 0, 0, 2, 1, 1, 0]' : 0.112541}
{'[0, 1, 0, 3, 6, 6, 0, 0, 14, 2, 0, 18, 0, 0, 2, 1, 1, 0]' : 0.112343}
{'[0, 1, 0, 3, 6, 6, 0, 0, 14, 2, 0, 18, 0, 0, 2, 1, 1, 0]' : 0.112394}
{'[0, 1, 0, 3, 6, 6, 0, 0, 14, 2, 0, 18, 0, 0, 2, 1, 1, 0]' : 0.10285}
{'[0, 1, 0, 3, 6, 6, 0, 0, 14, 2, 0, 18, 0, 0, 2, 1, 1, 0]' : 0.0968981}
{'[0, 1, 0, 3, 6, 6, 0, 0, 14, 2, 0, 18, 0, 0, 2, 1, 1, 0]' : 0.097014}
{'[0, 1, 0, 3, 6, 6, 0, 0, 14, 2, 0, 18, 0, 0, 2, 1, 1, 0]' : 0.0966001}
{'[0, 1, 0, 3, 6, 6, 0, 0, 14, 2, 0, 18, 0, 0, 2, 1, 1, 0]' : 0.0966349}
{'[0, 1, 0, 3, 6, 6, 0, 0, 14, 2, 0, 18, 0, 0, 2, 1, 1, 0]' : 0.096591}
{'[0, 1, 0, 3, 6, 6, 0, 0, 14, 2, 0, 18, 0, 0, 2, 1, 1, 0]' : 0.0965021}
{'[0, 1, 0, 3, 6, 6, 0, 0, 14, 2, 0, 18, 0, 0, 2, 1, 1, 0]' : 0.0965769}
{'[0, 1, 0, 3, 6, 6, 0, 0, 14, 2, 0, 18, 0, 0, 2, 1, 1, 0]' : 0.0966358}
{'[0, 1, 0, 3, 6, 6, 0, 0, 14, 2, 0, 18, 0, 0, 2, 1, 1, 0]' : 0.096643}
{'[0, 1, 0, 3, 6, 6, 0, 0, 14, 2, 0, 18, 0, 0, 2, 1, 1, 0]' : 0.0966761}
{'[0, 1, 0, 3, 6, 6, 0, 0, 14, 2, 0, 18, 0, 0, 2, 1, 1, 0]' : 0.0966032}
{'[0, 1, 0, 3, 6, 6, 0, 0, 14, 2, 0, 18, 0, 0, 2, 1, 1, 0]' : 0.096729}
{'[0, 1, 0, 3, 6, 6, 0, 0, 14, 2, 0, 18, 0, 0, 2, 1, 1, 0]' : 0.096812}
{'[0, 1, 0, 3, 6, 6, 0, 0, 14, 2, 0, 18, 0, 0, 2, 1, 1, 0]' : 0.0964971}
{'[0, 1, 0, 3, 6, 6, 0, 0, 14, 2, 0, 18, 0, 0, 2, 1, 1, 0]' : 0.0965931}
{'[0, 1, 0, 3, 6, 6, 0, 0, 14, 2, 0, 18, 0, 0, 2, 1, 1, 0]' : 0.096648}
{'[0, 1, 0, 3, 6, 6, 0, 0, 14, 2, 0, 18, 0, 0, 2, 1, 1, 0]' : 0.0965309}
{'[0, 1, 0, 3, 6, 6, 0, 0, 14, 2, 0, 18, 0, 0, 2, 1, 1, 0]' : 0.0965571}
{'[0, 1, 0, 3, 6, 6, 0, 0, 14, 2, 0, 18, 0, 0, 2, 1, 1, 0]' : 0.096611}
{'[0, 1, 0, 3, 6, 6, 0, 0, 14, 2, 0, 18, 0, 0, 2, 1, 1, 0]' : 0.0965559}
{'[0, 1, 0, 3, 6, 6, 0, 0, 14, 2, 0, 18, 0, 0, 2, 1, 1, 0]' : 0.096879}
{'[0, 1, 0, 3, 6, 6, 0, 0, 14, 2, 0, 18, 0, 0, 2, 1, 1, 0]' : 0.0966301}
{'[0, 1, 0, 3, 6, 6, 0, 0, 14, 2, 0, 18, 0, 0, 2, 1, 1, 0]' : 0.0969968}
{'[0, 1, 0, 3, 6, 6, 0, 0, 14, 2, 0, 18, 0, 0, 2, 1, 1, 0]' : 0.096869}
{'[0, 1, 0, 3, 6, 6, 0, 0, 14, 2, 0, 18, 0, 0, 2, 1, 1, 0]' : 0.0965922}

out:
 ["{'[0, 1, 0, 3, 6, 6, 0, 0, 14, 2, 0, 18, 0, 0, 2, 1, 1, 0]' : 0.112553}", "{'[0, 1, 0, 3, 6, 6, 0, 0, 14, 2, 0, 18, 0, 0, 2, 1, 1, 0]' : 0.112541}", "{'[0, 1, 0, 3, 6, 6, 0, 0, 14, 2, 0, 18, 0, 0, 2, 1, 1, 0]' : 0.112343}", "{'[0, 1, 0, 3, 6, 6, 0, 0, 14, 2, 0, 18, 0, 0, 2, 1, 1, 0]' : 0.112394}", "{'[0, 1, 0, 3, 6, 6, 0, 0, 14, 2, 0, 18, 0, 0, 2, 1, 1, 0]' : 0.10285}", "{'[0, 1, 0, 3, 6, 6, 0, 0, 14, 2, 0, 18, 0, 0, 2, 1, 1, 0]' : 0.0968981}", "{'[0, 1, 0, 3, 6, 6, 0, 0, 14, 2, 0, 18, 0, 0, 2, 1, 1, 0]' : 0.097014}", "{'[0, 1, 0, 3, 6, 6, 0, 0, 14, 2, 0, 18, 0, 0, 2, 1, 1, 0]' : 0.0966001}", "{'[0, 1, 0, 3, 6, 6, 0, 0, 14, 2, 0, 18, 0, 0, 2, 1, 1, 0]' : 0.0966349}", "{'[0, 1, 0, 3, 6, 6, 0, 0, 14, 2, 0, 18, 0, 0, 2, 1, 1, 0]' : 0.096591}", "{'[0, 1, 0, 3, 6, 6, 0, 0, 14, 2, 0, 18, 0, 0, 2, 1, 1, 0]' : 0.0965021}", "{'[0, 1, 0, 3, 6, 6, 0, 0, 14, 2, 0, 18, 0, 0, 2, 1, 1, 0]' : 0.0965769}", "{'[0, 1, 0, 3, 6, 6, 0, 0, 14, 2, 0, 18, 0, 0, 2, 1, 1, 0]' : 0.0966358}", "{'[0, 1, 0, 3, 6, 6, 0, 0, 14, 2, 0, 18, 0, 0, 2, 1, 1, 0]' : 0.096643}", "{'[0, 1, 0, 3, 6, 6, 0, 0, 14, 2, 0, 18, 0, 0, 2, 1, 1, 0]' : 0.0966761}", "{'[0, 1, 0, 3, 6, 6, 0, 0, 14, 2, 0, 18, 0, 0, 2, 1, 1, 0]' : 0.0966032}", "{'[0, 1, 0, 3, 6, 6, 0, 0, 14, 2, 0, 18, 0, 0, 2, 1, 1, 0]' : 0.096729}", "{'[0, 1, 0, 3, 6, 6, 0, 0, 14, 2, 0, 18, 0, 0, 2, 1, 1, 0]' : 0.096812}", "{'[0, 1, 0, 3, 6, 6, 0, 0, 14, 2, 0, 18, 0, 0, 2, 1, 1, 0]' : 0.0964971}", "{'[0, 1, 0, 3, 6, 6, 0, 0, 14, 2, 0, 18, 0, 0, 2, 1, 1, 0]' : 0.0965931}", "{'[0, 1, 0, 3, 6, 6, 0, 0, 14, 2, 0, 18, 0, 0, 2, 1, 1, 0]' : 0.096648}", "{'[0, 1, 0, 3, 6, 6, 0, 0, 14, 2, 0, 18, 0, 0, 2, 1, 1, 0]' : 0.0965309}", "{'[0, 1, 0, 3, 6, 6, 0, 0, 14, 2, 0, 18, 0, 0, 2, 1, 1, 0]' : 0.0965571}", "{'[0, 1, 0, 3, 6, 6, 0, 0, 14, 2, 0, 18, 0, 0, 2, 1, 1, 0]' : 0.096611}", "{'[0, 1, 0, 3, 6, 6, 0, 0, 14, 2, 0, 18, 0, 0, 2, 1, 1, 0]' : 0.0965559}", "{'[0, 1, 0, 3, 6, 6, 0, 0, 14, 2, 0, 18, 0, 0, 2, 1, 1, 0]' : 0.096879}", "{'[0, 1, 0, 3, 6, 6, 0, 0, 14, 2, 0, 18, 0, 0, 2, 1, 1, 0]' : 0.0966301}", "{'[0, 1, 0, 3, 6, 6, 0, 0, 14, 2, 0, 18, 0, 0, 2, 1, 1, 0]' : 0.0969968}", "{'[0, 1, 0, 3, 6, 6, 0, 0, 14, 2, 0, 18, 0, 0, 2, 1, 1, 0]' : 0.096869}", "{'[0, 1, 0, 3, 6, 6, 0, 0, 14, 2, 0, 18, 0, 0, 2, 1, 1, 0]' : 0.0965922}"]
returning from 'run': {'[0, 1, 0, 3, 6, 6, 0, 0, 14, 2, 0, 18, 0, 0, 2, 1, 1, 0]': ([0.112553, 0.112541, 0.112343, 0.112394, 0.10285, 0.0968981, 0.097014, 0.0966001, 0.0966349, 0.096591, 0.0965021, 0.0965769, 0.0966358, 0.096643, 0.0966761, 0.0966032, 0.096729, 0.096812, 0.0964971, 0.0965931, 0.096648, 0.0965309, 0.0965571, 0.096611, 0.0965559, 0.096879, 0.0966301, 0.0969968, 0.096869, 0.0965922], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 1, 0, 3, 6, 6, 0, 0, 14, 2, 0, 18, 0, 0, 2, 1, 1, 0]': ([0.112553, 0.112541, 0.112343, 0.112394, 0.10285, 0.0968981, 0.097014, 0.0966001, 0.0966349, 0.096591, 0.0965021, 0.0965769, 0.0966358, 0.096643, 0.0966761, 0.0966032, 0.096729, 0.096812, 0.0964971, 0.0965931, 0.096648, 0.0965309, 0.0965571, 0.096611, 0.0965559, 0.096879, 0.0966301, 0.0969968, 0.096869, 0.0965922], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	32
        Max loop nest depth: 	5
        Additions: 		1691
        Multiplications: 	520
        Divisions: 		0
        Logical: 		0
        Reads: 			2850
        Writes: 		331
        Comparisons:		32
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest2.exe __orio_perftest2.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest2.exe  
Program Test Output: 
{'[0, 0, 1, 2, 3, 5, 0, 0, 0, 3, 9, 0, 1, 1, 0, 0, 0, 0]' : 0.114906}
{'[0, 0, 1, 2, 3, 5, 0, 0, 0, 3, 9, 0, 1, 1, 0, 0, 0, 0]' : 0.115304}
{'[0, 0, 1, 2, 3, 5, 0, 0, 0, 3, 9, 0, 1, 1, 0, 0, 0, 0]' : 0.114826}
{'[0, 0, 1, 2, 3, 5, 0, 0, 0, 3, 9, 0, 1, 1, 0, 0, 0, 0]' : 0.114662}
{'[0, 0, 1, 2, 3, 5, 0, 0, 0, 3, 9, 0, 1, 1, 0, 0, 0, 0]' : 0.115025}
{'[0, 0, 1, 2, 3, 5, 0, 0, 0, 3, 9, 0, 1, 1, 0, 0, 0, 0]' : 0.11486}
{'[0, 0, 1, 2, 3, 5, 0, 0, 0, 3, 9, 0, 1, 1, 0, 0, 0, 0]' : 0.115776}
{'[0, 0, 1, 2, 3, 5, 0, 0, 0, 3, 9, 0, 1, 1, 0, 0, 0, 0]' : 0.114759}
{'[0, 0, 1, 2, 3, 5, 0, 0, 0, 3, 9, 0, 1, 1, 0, 0, 0, 0]' : 0.115365}
{'[0, 0, 1, 2, 3, 5, 0, 0, 0, 3, 9, 0, 1, 1, 0, 0, 0, 0]' : 0.115013}
{'[0, 0, 1, 2, 3, 5, 0, 0, 0, 3, 9, 0, 1, 1, 0, 0, 0, 0]' : 0.114801}
{'[0, 0, 1, 2, 3, 5, 0, 0, 0, 3, 9, 0, 1, 1, 0, 0, 0, 0]' : 0.114688}
{'[0, 0, 1, 2, 3, 5, 0, 0, 0, 3, 9, 0, 1, 1, 0, 0, 0, 0]' : 0.115024}
{'[0, 0, 1, 2, 3, 5, 0, 0, 0, 3, 9, 0, 1, 1, 0, 0, 0, 0]' : 0.114914}
{'[0, 0, 1, 2, 3, 5, 0, 0, 0, 3, 9, 0, 1, 1, 0, 0, 0, 0]' : 0.114958}
{'[0, 0, 1, 2, 3, 5, 0, 0, 0, 3, 9, 0, 1, 1, 0, 0, 0, 0]' : 0.11497}
{'[0, 0, 1, 2, 3, 5, 0, 0, 0, 3, 9, 0, 1, 1, 0, 0, 0, 0]' : 0.115221}
{'[0, 0, 1, 2, 3, 5, 0, 0, 0, 3, 9, 0, 1, 1, 0, 0, 0, 0]' : 0.115033}
{'[0, 0, 1, 2, 3, 5, 0, 0, 0, 3, 9, 0, 1, 1, 0, 0, 0, 0]' : 0.115158}
{'[0, 0, 1, 2, 3, 5, 0, 0, 0, 3, 9, 0, 1, 1, 0, 0, 0, 0]' : 0.114669}
{'[0, 0, 1, 2, 3, 5, 0, 0, 0, 3, 9, 0, 1, 1, 0, 0, 0, 0]' : 0.115097}
{'[0, 0, 1, 2, 3, 5, 0, 0, 0, 3, 9, 0, 1, 1, 0, 0, 0, 0]' : 0.114995}
{'[0, 0, 1, 2, 3, 5, 0, 0, 0, 3, 9, 0, 1, 1, 0, 0, 0, 0]' : 0.114929}
{'[0, 0, 1, 2, 3, 5, 0, 0, 0, 3, 9, 0, 1, 1, 0, 0, 0, 0]' : 0.114952}
{'[0, 0, 1, 2, 3, 5, 0, 0, 0, 3, 9, 0, 1, 1, 0, 0, 0, 0]' : 0.115045}
{'[0, 0, 1, 2, 3, 5, 0, 0, 0, 3, 9, 0, 1, 1, 0, 0, 0, 0]' : 0.11503}
{'[0, 0, 1, 2, 3, 5, 0, 0, 0, 3, 9, 0, 1, 1, 0, 0, 0, 0]' : 0.114879}
{'[0, 0, 1, 2, 3, 5, 0, 0, 0, 3, 9, 0, 1, 1, 0, 0, 0, 0]' : 0.114622}
{'[0, 0, 1, 2, 3, 5, 0, 0, 0, 3, 9, 0, 1, 1, 0, 0, 0, 0]' : 0.115062}
{'[0, 0, 1, 2, 3, 5, 0, 0, 0, 3, 9, 0, 1, 1, 0, 0, 0, 0]' : 0.115112}

out:
 ["{'[0, 0, 1, 2, 3, 5, 0, 0, 0, 3, 9, 0, 1, 1, 0, 0, 0, 0]' : 0.114906}", "{'[0, 0, 1, 2, 3, 5, 0, 0, 0, 3, 9, 0, 1, 1, 0, 0, 0, 0]' : 0.115304}", "{'[0, 0, 1, 2, 3, 5, 0, 0, 0, 3, 9, 0, 1, 1, 0, 0, 0, 0]' : 0.114826}", "{'[0, 0, 1, 2, 3, 5, 0, 0, 0, 3, 9, 0, 1, 1, 0, 0, 0, 0]' : 0.114662}", "{'[0, 0, 1, 2, 3, 5, 0, 0, 0, 3, 9, 0, 1, 1, 0, 0, 0, 0]' : 0.115025}", "{'[0, 0, 1, 2, 3, 5, 0, 0, 0, 3, 9, 0, 1, 1, 0, 0, 0, 0]' : 0.11486}", "{'[0, 0, 1, 2, 3, 5, 0, 0, 0, 3, 9, 0, 1, 1, 0, 0, 0, 0]' : 0.115776}", "{'[0, 0, 1, 2, 3, 5, 0, 0, 0, 3, 9, 0, 1, 1, 0, 0, 0, 0]' : 0.114759}", "{'[0, 0, 1, 2, 3, 5, 0, 0, 0, 3, 9, 0, 1, 1, 0, 0, 0, 0]' : 0.115365}", "{'[0, 0, 1, 2, 3, 5, 0, 0, 0, 3, 9, 0, 1, 1, 0, 0, 0, 0]' : 0.115013}", "{'[0, 0, 1, 2, 3, 5, 0, 0, 0, 3, 9, 0, 1, 1, 0, 0, 0, 0]' : 0.114801}", "{'[0, 0, 1, 2, 3, 5, 0, 0, 0, 3, 9, 0, 1, 1, 0, 0, 0, 0]' : 0.114688}", "{'[0, 0, 1, 2, 3, 5, 0, 0, 0, 3, 9, 0, 1, 1, 0, 0, 0, 0]' : 0.115024}", "{'[0, 0, 1, 2, 3, 5, 0, 0, 0, 3, 9, 0, 1, 1, 0, 0, 0, 0]' : 0.114914}", "{'[0, 0, 1, 2, 3, 5, 0, 0, 0, 3, 9, 0, 1, 1, 0, 0, 0, 0]' : 0.114958}", "{'[0, 0, 1, 2, 3, 5, 0, 0, 0, 3, 9, 0, 1, 1, 0, 0, 0, 0]' : 0.11497}", "{'[0, 0, 1, 2, 3, 5, 0, 0, 0, 3, 9, 0, 1, 1, 0, 0, 0, 0]' : 0.115221}", "{'[0, 0, 1, 2, 3, 5, 0, 0, 0, 3, 9, 0, 1, 1, 0, 0, 0, 0]' : 0.115033}", "{'[0, 0, 1, 2, 3, 5, 0, 0, 0, 3, 9, 0, 1, 1, 0, 0, 0, 0]' : 0.115158}", "{'[0, 0, 1, 2, 3, 5, 0, 0, 0, 3, 9, 0, 1, 1, 0, 0, 0, 0]' : 0.114669}", "{'[0, 0, 1, 2, 3, 5, 0, 0, 0, 3, 9, 0, 1, 1, 0, 0, 0, 0]' : 0.115097}", "{'[0, 0, 1, 2, 3, 5, 0, 0, 0, 3, 9, 0, 1, 1, 0, 0, 0, 0]' : 0.114995}", "{'[0, 0, 1, 2, 3, 5, 0, 0, 0, 3, 9, 0, 1, 1, 0, 0, 0, 0]' : 0.114929}", "{'[0, 0, 1, 2, 3, 5, 0, 0, 0, 3, 9, 0, 1, 1, 0, 0, 0, 0]' : 0.114952}", "{'[0, 0, 1, 2, 3, 5, 0, 0, 0, 3, 9, 0, 1, 1, 0, 0, 0, 0]' : 0.115045}", "{'[0, 0, 1, 2, 3, 5, 0, 0, 0, 3, 9, 0, 1, 1, 0, 0, 0, 0]' : 0.11503}", "{'[0, 0, 1, 2, 3, 5, 0, 0, 0, 3, 9, 0, 1, 1, 0, 0, 0, 0]' : 0.114879}", "{'[0, 0, 1, 2, 3, 5, 0, 0, 0, 3, 9, 0, 1, 1, 0, 0, 0, 0]' : 0.114622}", "{'[0, 0, 1, 2, 3, 5, 0, 0, 0, 3, 9, 0, 1, 1, 0, 0, 0, 0]' : 0.115062}", "{'[0, 0, 1, 2, 3, 5, 0, 0, 0, 3, 9, 0, 1, 1, 0, 0, 0, 0]' : 0.115112}"]
returning from 'run': {'[0, 0, 1, 2, 3, 5, 0, 0, 0, 3, 9, 0, 1, 1, 0, 0, 0, 0]': ([0.114906, 0.115304, 0.114826, 0.114662, 0.115025, 0.11486, 0.115776, 0.114759, 0.115365, 0.115013, 0.114801, 0.114688, 0.115024, 0.114914, 0.114958, 0.11497, 0.115221, 0.115033, 0.115158, 0.114669, 0.115097, 0.114995, 0.114929, 0.114952, 0.115045, 0.11503, 0.114879, 0.114622, 0.115062, 0.115112], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 1, 2, 3, 5, 0, 0, 0, 3, 9, 0, 1, 1, 0, 0, 0, 0]': ([0.114906, 0.115304, 0.114826, 0.114662, 0.115025, 0.11486, 0.115776, 0.114759, 0.115365, 0.115013, 0.114801, 0.114688, 0.115024, 0.114914, 0.114958, 0.11497, 0.115221, 0.115033, 0.115158, 0.114669, 0.115097, 0.114995, 0.114929, 0.114952, 0.115045, 0.11503, 0.114879, 0.114622, 0.115062, 0.115112], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	150
        Max loop nest depth: 	6
        Additions: 		18212
        Multiplications: 	4032
        Divisions: 		0
        Logical: 		0
        Reads: 			25874
        Writes: 		2541
        Comparisons:		150
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest3.exe __orio_perftest3.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest3.exe  
Program Test Output: 
{'[3, 5, 4, 4, 5, 6, 0, 1, 25, 29, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.202299}
{'[3, 5, 4, 4, 5, 6, 0, 1, 25, 29, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.202867}
{'[3, 5, 4, 4, 5, 6, 0, 1, 25, 29, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.190469}
{'[3, 5, 4, 4, 5, 6, 0, 1, 25, 29, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.177942}
{'[3, 5, 4, 4, 5, 6, 0, 1, 25, 29, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.177202}
{'[3, 5, 4, 4, 5, 6, 0, 1, 25, 29, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.177037}
{'[3, 5, 4, 4, 5, 6, 0, 1, 25, 29, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.178105}
{'[3, 5, 4, 4, 5, 6, 0, 1, 25, 29, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.178398}
{'[3, 5, 4, 4, 5, 6, 0, 1, 25, 29, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.177724}
{'[3, 5, 4, 4, 5, 6, 0, 1, 25, 29, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.178041}
{'[3, 5, 4, 4, 5, 6, 0, 1, 25, 29, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.178557}
{'[3, 5, 4, 4, 5, 6, 0, 1, 25, 29, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.17861}
{'[3, 5, 4, 4, 5, 6, 0, 1, 25, 29, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.177745}
{'[3, 5, 4, 4, 5, 6, 0, 1, 25, 29, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.179125}
{'[3, 5, 4, 4, 5, 6, 0, 1, 25, 29, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.178747}
{'[3, 5, 4, 4, 5, 6, 0, 1, 25, 29, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.178152}
{'[3, 5, 4, 4, 5, 6, 0, 1, 25, 29, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.177427}
{'[3, 5, 4, 4, 5, 6, 0, 1, 25, 29, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.178035}
{'[3, 5, 4, 4, 5, 6, 0, 1, 25, 29, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.177628}
{'[3, 5, 4, 4, 5, 6, 0, 1, 25, 29, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.1787}
{'[3, 5, 4, 4, 5, 6, 0, 1, 25, 29, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.17744}
{'[3, 5, 4, 4, 5, 6, 0, 1, 25, 29, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.177549}
{'[3, 5, 4, 4, 5, 6, 0, 1, 25, 29, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.178009}
{'[3, 5, 4, 4, 5, 6, 0, 1, 25, 29, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.177891}
{'[3, 5, 4, 4, 5, 6, 0, 1, 25, 29, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.177614}
{'[3, 5, 4, 4, 5, 6, 0, 1, 25, 29, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.178715}
{'[3, 5, 4, 4, 5, 6, 0, 1, 25, 29, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.177842}
{'[3, 5, 4, 4, 5, 6, 0, 1, 25, 29, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.177802}
{'[3, 5, 4, 4, 5, 6, 0, 1, 25, 29, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.17724}
{'[3, 5, 4, 4, 5, 6, 0, 1, 25, 29, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.17788}

out:
 ["{'[3, 5, 4, 4, 5, 6, 0, 1, 25, 29, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.202299}", "{'[3, 5, 4, 4, 5, 6, 0, 1, 25, 29, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.202867}", "{'[3, 5, 4, 4, 5, 6, 0, 1, 25, 29, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.190469}", "{'[3, 5, 4, 4, 5, 6, 0, 1, 25, 29, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.177942}", "{'[3, 5, 4, 4, 5, 6, 0, 1, 25, 29, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.177202}", "{'[3, 5, 4, 4, 5, 6, 0, 1, 25, 29, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.177037}", "{'[3, 5, 4, 4, 5, 6, 0, 1, 25, 29, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.178105}", "{'[3, 5, 4, 4, 5, 6, 0, 1, 25, 29, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.178398}", "{'[3, 5, 4, 4, 5, 6, 0, 1, 25, 29, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.177724}", "{'[3, 5, 4, 4, 5, 6, 0, 1, 25, 29, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.178041}", "{'[3, 5, 4, 4, 5, 6, 0, 1, 25, 29, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.178557}", "{'[3, 5, 4, 4, 5, 6, 0, 1, 25, 29, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.17861}", "{'[3, 5, 4, 4, 5, 6, 0, 1, 25, 29, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.177745}", "{'[3, 5, 4, 4, 5, 6, 0, 1, 25, 29, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.179125}", "{'[3, 5, 4, 4, 5, 6, 0, 1, 25, 29, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.178747}", "{'[3, 5, 4, 4, 5, 6, 0, 1, 25, 29, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.178152}", "{'[3, 5, 4, 4, 5, 6, 0, 1, 25, 29, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.177427}", "{'[3, 5, 4, 4, 5, 6, 0, 1, 25, 29, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.178035}", "{'[3, 5, 4, 4, 5, 6, 0, 1, 25, 29, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.177628}", "{'[3, 5, 4, 4, 5, 6, 0, 1, 25, 29, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.1787}", "{'[3, 5, 4, 4, 5, 6, 0, 1, 25, 29, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.17744}", "{'[3, 5, 4, 4, 5, 6, 0, 1, 25, 29, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.177549}", "{'[3, 5, 4, 4, 5, 6, 0, 1, 25, 29, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.178009}", "{'[3, 5, 4, 4, 5, 6, 0, 1, 25, 29, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.177891}", "{'[3, 5, 4, 4, 5, 6, 0, 1, 25, 29, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.177614}", "{'[3, 5, 4, 4, 5, 6, 0, 1, 25, 29, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.178715}", "{'[3, 5, 4, 4, 5, 6, 0, 1, 25, 29, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.177842}", "{'[3, 5, 4, 4, 5, 6, 0, 1, 25, 29, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.177802}", "{'[3, 5, 4, 4, 5, 6, 0, 1, 25, 29, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.17724}", "{'[3, 5, 4, 4, 5, 6, 0, 1, 25, 29, 0, 29, 2, 0, 0, 0, 1, 1]' : 0.17788}"]
returning from 'run': {'[3, 5, 4, 4, 5, 6, 0, 1, 25, 29, 0, 29, 2, 0, 0, 0, 1, 1]': ([0.202299, 0.202867, 0.190469, 0.177942, 0.177202, 0.177037, 0.178105, 0.178398, 0.177724, 0.178041, 0.178557, 0.17861, 0.177745, 0.179125, 0.178747, 0.178152, 0.177427, 0.178035, 0.177628, 0.1787, 0.17744, 0.177549, 0.178009, 0.177891, 0.177614, 0.178715, 0.177842, 0.177802, 0.17724, 0.17788], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 5, 4, 4, 5, 6, 0, 1, 25, 29, 0, 29, 2, 0, 0, 0, 1, 1]': ([0.202299, 0.202867, 0.190469, 0.177942, 0.177202, 0.177037, 0.178105, 0.178398, 0.177724, 0.178041, 0.178557, 0.17861, 0.177745, 0.179125, 0.178747, 0.178152, 0.177427, 0.178035, 0.177628, 0.1787, 0.17744, 0.177549, 0.178009, 0.177891, 0.177614, 0.178715, 0.177842, 0.177802, 0.17724, 0.17788], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	111
        Max loop nest depth: 	6
        Additions: 		2476
        Multiplications: 	992
        Divisions: 		0
        Logical: 		0
        Reads: 			5107
        Writes: 		948
        Comparisons:		111
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest4.exe __orio_perftest4.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest4.exe  
Program Test Output: 
{'[3, 1, 6, 6, 2, 6, 1, 1, 2, 29, 29, 0, 0, 1, 1, 1, 0, 0]' : 0.316098}
{'[3, 1, 6, 6, 2, 6, 1, 1, 2, 29, 29, 0, 0, 1, 1, 1, 0, 0]' : 0.30956}
{'[3, 1, 6, 6, 2, 6, 1, 1, 2, 29, 29, 0, 0, 1, 1, 1, 0, 0]' : 0.273156}
{'[3, 1, 6, 6, 2, 6, 1, 1, 2, 29, 29, 0, 0, 1, 1, 1, 0, 0]' : 0.267374}
{'[3, 1, 6, 6, 2, 6, 1, 1, 2, 29, 29, 0, 0, 1, 1, 1, 0, 0]' : 0.279237}
{'[3, 1, 6, 6, 2, 6, 1, 1, 2, 29, 29, 0, 0, 1, 1, 1, 0, 0]' : 0.274298}
{'[3, 1, 6, 6, 2, 6, 1, 1, 2, 29, 29, 0, 0, 1, 1, 1, 0, 0]' : 0.269749}
{'[3, 1, 6, 6, 2, 6, 1, 1, 2, 29, 29, 0, 0, 1, 1, 1, 0, 0]' : 0.268896}
{'[3, 1, 6, 6, 2, 6, 1, 1, 2, 29, 29, 0, 0, 1, 1, 1, 0, 0]' : 0.26983}
{'[3, 1, 6, 6, 2, 6, 1, 1, 2, 29, 29, 0, 0, 1, 1, 1, 0, 0]' : 0.269348}
{'[3, 1, 6, 6, 2, 6, 1, 1, 2, 29, 29, 0, 0, 1, 1, 1, 0, 0]' : 0.266338}
{'[3, 1, 6, 6, 2, 6, 1, 1, 2, 29, 29, 0, 0, 1, 1, 1, 0, 0]' : 0.268182}
{'[3, 1, 6, 6, 2, 6, 1, 1, 2, 29, 29, 0, 0, 1, 1, 1, 0, 0]' : 0.270508}
{'[3, 1, 6, 6, 2, 6, 1, 1, 2, 29, 29, 0, 0, 1, 1, 1, 0, 0]' : 0.266944}
{'[3, 1, 6, 6, 2, 6, 1, 1, 2, 29, 29, 0, 0, 1, 1, 1, 0, 0]' : 0.272069}
{'[3, 1, 6, 6, 2, 6, 1, 1, 2, 29, 29, 0, 0, 1, 1, 1, 0, 0]' : 0.270478}
{'[3, 1, 6, 6, 2, 6, 1, 1, 2, 29, 29, 0, 0, 1, 1, 1, 0, 0]' : 0.264962}
{'[3, 1, 6, 6, 2, 6, 1, 1, 2, 29, 29, 0, 0, 1, 1, 1, 0, 0]' : 0.272112}
{'[3, 1, 6, 6, 2, 6, 1, 1, 2, 29, 29, 0, 0, 1, 1, 1, 0, 0]' : 0.270645}
{'[3, 1, 6, 6, 2, 6, 1, 1, 2, 29, 29, 0, 0, 1, 1, 1, 0, 0]' : 0.26771}
{'[3, 1, 6, 6, 2, 6, 1, 1, 2, 29, 29, 0, 0, 1, 1, 1, 0, 0]' : 0.268016}
{'[3, 1, 6, 6, 2, 6, 1, 1, 2, 29, 29, 0, 0, 1, 1, 1, 0, 0]' : 0.272088}
{'[3, 1, 6, 6, 2, 6, 1, 1, 2, 29, 29, 0, 0, 1, 1, 1, 0, 0]' : 0.268408}
{'[3, 1, 6, 6, 2, 6, 1, 1, 2, 29, 29, 0, 0, 1, 1, 1, 0, 0]' : 0.268969}
{'[3, 1, 6, 6, 2, 6, 1, 1, 2, 29, 29, 0, 0, 1, 1, 1, 0, 0]' : 0.267645}
{'[3, 1, 6, 6, 2, 6, 1, 1, 2, 29, 29, 0, 0, 1, 1, 1, 0, 0]' : 0.274216}
{'[3, 1, 6, 6, 2, 6, 1, 1, 2, 29, 29, 0, 0, 1, 1, 1, 0, 0]' : 0.270741}
{'[3, 1, 6, 6, 2, 6, 1, 1, 2, 29, 29, 0, 0, 1, 1, 1, 0, 0]' : 0.267804}
{'[3, 1, 6, 6, 2, 6, 1, 1, 2, 29, 29, 0, 0, 1, 1, 1, 0, 0]' : 0.27075}
{'[3, 1, 6, 6, 2, 6, 1, 1, 2, 29, 29, 0, 0, 1, 1, 1, 0, 0]' : 0.26988}

out:
 ["{'[3, 1, 6, 6, 2, 6, 1, 1, 2, 29, 29, 0, 0, 1, 1, 1, 0, 0]' : 0.316098}", "{'[3, 1, 6, 6, 2, 6, 1, 1, 2, 29, 29, 0, 0, 1, 1, 1, 0, 0]' : 0.30956}", "{'[3, 1, 6, 6, 2, 6, 1, 1, 2, 29, 29, 0, 0, 1, 1, 1, 0, 0]' : 0.273156}", "{'[3, 1, 6, 6, 2, 6, 1, 1, 2, 29, 29, 0, 0, 1, 1, 1, 0, 0]' : 0.267374}", "{'[3, 1, 6, 6, 2, 6, 1, 1, 2, 29, 29, 0, 0, 1, 1, 1, 0, 0]' : 0.279237}", "{'[3, 1, 6, 6, 2, 6, 1, 1, 2, 29, 29, 0, 0, 1, 1, 1, 0, 0]' : 0.274298}", "{'[3, 1, 6, 6, 2, 6, 1, 1, 2, 29, 29, 0, 0, 1, 1, 1, 0, 0]' : 0.269749}", "{'[3, 1, 6, 6, 2, 6, 1, 1, 2, 29, 29, 0, 0, 1, 1, 1, 0, 0]' : 0.268896}", "{'[3, 1, 6, 6, 2, 6, 1, 1, 2, 29, 29, 0, 0, 1, 1, 1, 0, 0]' : 0.26983}", "{'[3, 1, 6, 6, 2, 6, 1, 1, 2, 29, 29, 0, 0, 1, 1, 1, 0, 0]' : 0.269348}", "{'[3, 1, 6, 6, 2, 6, 1, 1, 2, 29, 29, 0, 0, 1, 1, 1, 0, 0]' : 0.266338}", "{'[3, 1, 6, 6, 2, 6, 1, 1, 2, 29, 29, 0, 0, 1, 1, 1, 0, 0]' : 0.268182}", "{'[3, 1, 6, 6, 2, 6, 1, 1, 2, 29, 29, 0, 0, 1, 1, 1, 0, 0]' : 0.270508}", "{'[3, 1, 6, 6, 2, 6, 1, 1, 2, 29, 29, 0, 0, 1, 1, 1, 0, 0]' : 0.266944}", "{'[3, 1, 6, 6, 2, 6, 1, 1, 2, 29, 29, 0, 0, 1, 1, 1, 0, 0]' : 0.272069}", "{'[3, 1, 6, 6, 2, 6, 1, 1, 2, 29, 29, 0, 0, 1, 1, 1, 0, 0]' : 0.270478}", "{'[3, 1, 6, 6, 2, 6, 1, 1, 2, 29, 29, 0, 0, 1, 1, 1, 0, 0]' : 0.264962}", "{'[3, 1, 6, 6, 2, 6, 1, 1, 2, 29, 29, 0, 0, 1, 1, 1, 0, 0]' : 0.272112}", "{'[3, 1, 6, 6, 2, 6, 1, 1, 2, 29, 29, 0, 0, 1, 1, 1, 0, 0]' : 0.270645}", "{'[3, 1, 6, 6, 2, 6, 1, 1, 2, 29, 29, 0, 0, 1, 1, 1, 0, 0]' : 0.26771}", "{'[3, 1, 6, 6, 2, 6, 1, 1, 2, 29, 29, 0, 0, 1, 1, 1, 0, 0]' : 0.268016}", "{'[3, 1, 6, 6, 2, 6, 1, 1, 2, 29, 29, 0, 0, 1, 1, 1, 0, 0]' : 0.272088}", "{'[3, 1, 6, 6, 2, 6, 1, 1, 2, 29, 29, 0, 0, 1, 1, 1, 0, 0]' : 0.268408}", "{'[3, 1, 6, 6, 2, 6, 1, 1, 2, 29, 29, 0, 0, 1, 1, 1, 0, 0]' : 0.268969}", "{'[3, 1, 6, 6, 2, 6, 1, 1, 2, 29, 29, 0, 0, 1, 1, 1, 0, 0]' : 0.267645}", "{'[3, 1, 6, 6, 2, 6, 1, 1, 2, 29, 29, 0, 0, 1, 1, 1, 0, 0]' : 0.274216}", "{'[3, 1, 6, 6, 2, 6, 1, 1, 2, 29, 29, 0, 0, 1, 1, 1, 0, 0]' : 0.270741}", "{'[3, 1, 6, 6, 2, 6, 1, 1, 2, 29, 29, 0, 0, 1, 1, 1, 0, 0]' : 0.267804}", "{'[3, 1, 6, 6, 2, 6, 1, 1, 2, 29, 29, 0, 0, 1, 1, 1, 0, 0]' : 0.27075}", "{'[3, 1, 6, 6, 2, 6, 1, 1, 2, 29, 29, 0, 0, 1, 1, 1, 0, 0]' : 0.26988}"]
returning from 'run': {'[3, 1, 6, 6, 2, 6, 1, 1, 2, 29, 29, 0, 0, 1, 1, 1, 0, 0]': ([0.316098, 0.30956, 0.273156, 0.267374, 0.279237, 0.274298, 0.269749, 0.268896, 0.26983, 0.269348, 0.266338, 0.268182, 0.270508, 0.266944, 0.272069, 0.270478, 0.264962, 0.272112, 0.270645, 0.26771, 0.268016, 0.272088, 0.268408, 0.268969, 0.267645, 0.274216, 0.270741, 0.267804, 0.27075, 0.26988], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 1, 6, 6, 2, 6, 1, 1, 2, 29, 29, 0, 0, 1, 1, 1, 0, 0]': ([0.316098, 0.30956, 0.273156, 0.267374, 0.279237, 0.274298, 0.269749, 0.268896, 0.26983, 0.269348, 0.266338, 0.268182, 0.270508, 0.266944, 0.272069, 0.270478, 0.264962, 0.272112, 0.270645, 0.26771, 0.268016, 0.272088, 0.268408, 0.268969, 0.267645, 0.274216, 0.270741, 0.267804, 0.27075, 0.26988], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	17
        Max loop nest depth: 	4
        Additions: 		1119
        Multiplications: 	360
        Divisions: 		0
        Logical: 		0
        Reads: 			2009
        Writes: 		259
        Comparisons:		17
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest5.exe __orio_perftest5.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest5.exe  
Program Test Output: 
{'[6, 6, 0, 0, 0, 6, 0, 0, 25, 3, 25, 0, 0, 0, 1, 0, 1, 1]' : 0.112417}
{'[6, 6, 0, 0, 0, 6, 0, 0, 25, 3, 25, 0, 0, 0, 1, 0, 1, 1]' : 0.113189}
{'[6, 6, 0, 0, 0, 6, 0, 0, 25, 3, 25, 0, 0, 0, 1, 0, 1, 1]' : 0.114268}
{'[6, 6, 0, 0, 0, 6, 0, 0, 25, 3, 25, 0, 0, 0, 1, 0, 1, 1]' : 0.112484}
{'[6, 6, 0, 0, 0, 6, 0, 0, 25, 3, 25, 0, 0, 0, 1, 0, 1, 1]' : 0.112216}
{'[6, 6, 0, 0, 0, 6, 0, 0, 25, 3, 25, 0, 0, 0, 1, 0, 1, 1]' : 0.112241}
{'[6, 6, 0, 0, 0, 6, 0, 0, 25, 3, 25, 0, 0, 0, 1, 0, 1, 1]' : 0.112293}
{'[6, 6, 0, 0, 0, 6, 0, 0, 25, 3, 25, 0, 0, 0, 1, 0, 1, 1]' : 0.112306}
{'[6, 6, 0, 0, 0, 6, 0, 0, 25, 3, 25, 0, 0, 0, 1, 0, 1, 1]' : 0.112381}
{'[6, 6, 0, 0, 0, 6, 0, 0, 25, 3, 25, 0, 0, 0, 1, 0, 1, 1]' : 0.112291}
{'[6, 6, 0, 0, 0, 6, 0, 0, 25, 3, 25, 0, 0, 0, 1, 0, 1, 1]' : 0.113035}
{'[6, 6, 0, 0, 0, 6, 0, 0, 25, 3, 25, 0, 0, 0, 1, 0, 1, 1]' : 0.11431}
{'[6, 6, 0, 0, 0, 6, 0, 0, 25, 3, 25, 0, 0, 0, 1, 0, 1, 1]' : 0.112617}
{'[6, 6, 0, 0, 0, 6, 0, 0, 25, 3, 25, 0, 0, 0, 1, 0, 1, 1]' : 0.112352}
{'[6, 6, 0, 0, 0, 6, 0, 0, 25, 3, 25, 0, 0, 0, 1, 0, 1, 1]' : 0.112285}
{'[6, 6, 0, 0, 0, 6, 0, 0, 25, 3, 25, 0, 0, 0, 1, 0, 1, 1]' : 0.112247}
{'[6, 6, 0, 0, 0, 6, 0, 0, 25, 3, 25, 0, 0, 0, 1, 0, 1, 1]' : 0.112503}
{'[6, 6, 0, 0, 0, 6, 0, 0, 25, 3, 25, 0, 0, 0, 1, 0, 1, 1]' : 0.112571}
{'[6, 6, 0, 0, 0, 6, 0, 0, 25, 3, 25, 0, 0, 0, 1, 0, 1, 1]' : 0.112277}
{'[6, 6, 0, 0, 0, 6, 0, 0, 25, 3, 25, 0, 0, 0, 1, 0, 1, 1]' : 0.113112}
{'[6, 6, 0, 0, 0, 6, 0, 0, 25, 3, 25, 0, 0, 0, 1, 0, 1, 1]' : 0.114038}
{'[6, 6, 0, 0, 0, 6, 0, 0, 25, 3, 25, 0, 0, 0, 1, 0, 1, 1]' : 0.11249}
{'[6, 6, 0, 0, 0, 6, 0, 0, 25, 3, 25, 0, 0, 0, 1, 0, 1, 1]' : 0.112354}
{'[6, 6, 0, 0, 0, 6, 0, 0, 25, 3, 25, 0, 0, 0, 1, 0, 1, 1]' : 0.112379}
{'[6, 6, 0, 0, 0, 6, 0, 0, 25, 3, 25, 0, 0, 0, 1, 0, 1, 1]' : 0.112299}
{'[6, 6, 0, 0, 0, 6, 0, 0, 25, 3, 25, 0, 0, 0, 1, 0, 1, 1]' : 0.112291}
{'[6, 6, 0, 0, 0, 6, 0, 0, 25, 3, 25, 0, 0, 0, 1, 0, 1, 1]' : 0.112356}
{'[6, 6, 0, 0, 0, 6, 0, 0, 25, 3, 25, 0, 0, 0, 1, 0, 1, 1]' : 0.112271}
{'[6, 6, 0, 0, 0, 6, 0, 0, 25, 3, 25, 0, 0, 0, 1, 0, 1, 1]' : 0.113331}
{'[6, 6, 0, 0, 0, 6, 0, 0, 25, 3, 25, 0, 0, 0, 1, 0, 1, 1]' : 0.113796}

out:
 ["{'[6, 6, 0, 0, 0, 6, 0, 0, 25, 3, 25, 0, 0, 0, 1, 0, 1, 1]' : 0.112417}", "{'[6, 6, 0, 0, 0, 6, 0, 0, 25, 3, 25, 0, 0, 0, 1, 0, 1, 1]' : 0.113189}", "{'[6, 6, 0, 0, 0, 6, 0, 0, 25, 3, 25, 0, 0, 0, 1, 0, 1, 1]' : 0.114268}", "{'[6, 6, 0, 0, 0, 6, 0, 0, 25, 3, 25, 0, 0, 0, 1, 0, 1, 1]' : 0.112484}", "{'[6, 6, 0, 0, 0, 6, 0, 0, 25, 3, 25, 0, 0, 0, 1, 0, 1, 1]' : 0.112216}", "{'[6, 6, 0, 0, 0, 6, 0, 0, 25, 3, 25, 0, 0, 0, 1, 0, 1, 1]' : 0.112241}", "{'[6, 6, 0, 0, 0, 6, 0, 0, 25, 3, 25, 0, 0, 0, 1, 0, 1, 1]' : 0.112293}", "{'[6, 6, 0, 0, 0, 6, 0, 0, 25, 3, 25, 0, 0, 0, 1, 0, 1, 1]' : 0.112306}", "{'[6, 6, 0, 0, 0, 6, 0, 0, 25, 3, 25, 0, 0, 0, 1, 0, 1, 1]' : 0.112381}", "{'[6, 6, 0, 0, 0, 6, 0, 0, 25, 3, 25, 0, 0, 0, 1, 0, 1, 1]' : 0.112291}", "{'[6, 6, 0, 0, 0, 6, 0, 0, 25, 3, 25, 0, 0, 0, 1, 0, 1, 1]' : 0.113035}", "{'[6, 6, 0, 0, 0, 6, 0, 0, 25, 3, 25, 0, 0, 0, 1, 0, 1, 1]' : 0.11431}", "{'[6, 6, 0, 0, 0, 6, 0, 0, 25, 3, 25, 0, 0, 0, 1, 0, 1, 1]' : 0.112617}", "{'[6, 6, 0, 0, 0, 6, 0, 0, 25, 3, 25, 0, 0, 0, 1, 0, 1, 1]' : 0.112352}", "{'[6, 6, 0, 0, 0, 6, 0, 0, 25, 3, 25, 0, 0, 0, 1, 0, 1, 1]' : 0.112285}", "{'[6, 6, 0, 0, 0, 6, 0, 0, 25, 3, 25, 0, 0, 0, 1, 0, 1, 1]' : 0.112247}", "{'[6, 6, 0, 0, 0, 6, 0, 0, 25, 3, 25, 0, 0, 0, 1, 0, 1, 1]' : 0.112503}", "{'[6, 6, 0, 0, 0, 6, 0, 0, 25, 3, 25, 0, 0, 0, 1, 0, 1, 1]' : 0.112571}", "{'[6, 6, 0, 0, 0, 6, 0, 0, 25, 3, 25, 0, 0, 0, 1, 0, 1, 1]' : 0.112277}", "{'[6, 6, 0, 0, 0, 6, 0, 0, 25, 3, 25, 0, 0, 0, 1, 0, 1, 1]' : 0.113112}", "{'[6, 6, 0, 0, 0, 6, 0, 0, 25, 3, 25, 0, 0, 0, 1, 0, 1, 1]' : 0.114038}", "{'[6, 6, 0, 0, 0, 6, 0, 0, 25, 3, 25, 0, 0, 0, 1, 0, 1, 1]' : 0.11249}", "{'[6, 6, 0, 0, 0, 6, 0, 0, 25, 3, 25, 0, 0, 0, 1, 0, 1, 1]' : 0.112354}", "{'[6, 6, 0, 0, 0, 6, 0, 0, 25, 3, 25, 0, 0, 0, 1, 0, 1, 1]' : 0.112379}", "{'[6, 6, 0, 0, 0, 6, 0, 0, 25, 3, 25, 0, 0, 0, 1, 0, 1, 1]' : 0.112299}", "{'[6, 6, 0, 0, 0, 6, 0, 0, 25, 3, 25, 0, 0, 0, 1, 0, 1, 1]' : 0.112291}", "{'[6, 6, 0, 0, 0, 6, 0, 0, 25, 3, 25, 0, 0, 0, 1, 0, 1, 1]' : 0.112356}", "{'[6, 6, 0, 0, 0, 6, 0, 0, 25, 3, 25, 0, 0, 0, 1, 0, 1, 1]' : 0.112271}", "{'[6, 6, 0, 0, 0, 6, 0, 0, 25, 3, 25, 0, 0, 0, 1, 0, 1, 1]' : 0.113331}", "{'[6, 6, 0, 0, 0, 6, 0, 0, 25, 3, 25, 0, 0, 0, 1, 0, 1, 1]' : 0.113796}"]
returning from 'run': {'[6, 6, 0, 0, 0, 6, 0, 0, 25, 3, 25, 0, 0, 0, 1, 0, 1, 1]': ([0.112417, 0.113189, 0.114268, 0.112484, 0.112216, 0.112241, 0.112293, 0.112306, 0.112381, 0.112291, 0.113035, 0.11431, 0.112617, 0.112352, 0.112285, 0.112247, 0.112503, 0.112571, 0.112277, 0.113112, 0.114038, 0.11249, 0.112354, 0.112379, 0.112299, 0.112291, 0.112356, 0.112271, 0.113331, 0.113796], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 0, 0, 0, 6, 0, 0, 25, 3, 25, 0, 0, 0, 1, 0, 1, 1]': ([0.112417, 0.113189, 0.114268, 0.112484, 0.112216, 0.112241, 0.112293, 0.112306, 0.112381, 0.112291, 0.113035, 0.11431, 0.112617, 0.112352, 0.112285, 0.112247, 0.112503, 0.112571, 0.112277, 0.113112, 0.114038, 0.11249, 0.112354, 0.112379, 0.112299, 0.112291, 0.112356, 0.112271, 0.113331, 0.113796], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	4
        Additions: 		226
        Multiplications: 	54
        Divisions: 		0
        Logical: 		0
        Reads: 			477
        Writes: 		94
        Comparisons:		16
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest6.exe __orio_perftest6.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest6.exe  
Program Test Output: 
{'[0, 6, 0, 6, 0, 1, 1, 0, 20, 1, 3, 0, 0, 1, 0, 0, 1, 1]' : 0.154553}
{'[0, 6, 0, 6, 0, 1, 1, 0, 20, 1, 3, 0, 0, 1, 0, 0, 1, 1]' : 0.154504}
{'[0, 6, 0, 6, 0, 1, 1, 0, 20, 1, 3, 0, 0, 1, 0, 0, 1, 1]' : 0.154409}
{'[0, 6, 0, 6, 0, 1, 1, 0, 20, 1, 3, 0, 0, 1, 0, 0, 1, 1]' : 0.143912}
{'[0, 6, 0, 6, 0, 1, 1, 0, 20, 1, 3, 0, 0, 1, 0, 0, 1, 1]' : 0.130714}
{'[0, 6, 0, 6, 0, 1, 1, 0, 20, 1, 3, 0, 0, 1, 0, 0, 1, 1]' : 0.130733}
{'[0, 6, 0, 6, 0, 1, 1, 0, 20, 1, 3, 0, 0, 1, 0, 0, 1, 1]' : 0.131041}
{'[0, 6, 0, 6, 0, 1, 1, 0, 20, 1, 3, 0, 0, 1, 0, 0, 1, 1]' : 0.130911}
{'[0, 6, 0, 6, 0, 1, 1, 0, 20, 1, 3, 0, 0, 1, 0, 0, 1, 1]' : 0.131187}
{'[0, 6, 0, 6, 0, 1, 1, 0, 20, 1, 3, 0, 0, 1, 0, 0, 1, 1]' : 0.131117}
{'[0, 6, 0, 6, 0, 1, 1, 0, 20, 1, 3, 0, 0, 1, 0, 0, 1, 1]' : 0.130924}
{'[0, 6, 0, 6, 0, 1, 1, 0, 20, 1, 3, 0, 0, 1, 0, 0, 1, 1]' : 0.130751}
{'[0, 6, 0, 6, 0, 1, 1, 0, 20, 1, 3, 0, 0, 1, 0, 0, 1, 1]' : 0.130748}
{'[0, 6, 0, 6, 0, 1, 1, 0, 20, 1, 3, 0, 0, 1, 0, 0, 1, 1]' : 0.130729}
{'[0, 6, 0, 6, 0, 1, 1, 0, 20, 1, 3, 0, 0, 1, 0, 0, 1, 1]' : 0.1309}
{'[0, 6, 0, 6, 0, 1, 1, 0, 20, 1, 3, 0, 0, 1, 0, 0, 1, 1]' : 0.131054}
{'[0, 6, 0, 6, 0, 1, 1, 0, 20, 1, 3, 0, 0, 1, 0, 0, 1, 1]' : 0.130814}
{'[0, 6, 0, 6, 0, 1, 1, 0, 20, 1, 3, 0, 0, 1, 0, 0, 1, 1]' : 0.130984}
{'[0, 6, 0, 6, 0, 1, 1, 0, 20, 1, 3, 0, 0, 1, 0, 0, 1, 1]' : 0.130844}
{'[0, 6, 0, 6, 0, 1, 1, 0, 20, 1, 3, 0, 0, 1, 0, 0, 1, 1]' : 0.132006}
{'[0, 6, 0, 6, 0, 1, 1, 0, 20, 1, 3, 0, 0, 1, 0, 0, 1, 1]' : 0.13486}
{'[0, 6, 0, 6, 0, 1, 1, 0, 20, 1, 3, 0, 0, 1, 0, 0, 1, 1]' : 0.134755}
{'[0, 6, 0, 6, 0, 1, 1, 0, 20, 1, 3, 0, 0, 1, 0, 0, 1, 1]' : 0.134926}
{'[0, 6, 0, 6, 0, 1, 1, 0, 20, 1, 3, 0, 0, 1, 0, 0, 1, 1]' : 0.135364}
{'[0, 6, 0, 6, 0, 1, 1, 0, 20, 1, 3, 0, 0, 1, 0, 0, 1, 1]' : 0.135131}
{'[0, 6, 0, 6, 0, 1, 1, 0, 20, 1, 3, 0, 0, 1, 0, 0, 1, 1]' : 0.135088}
{'[0, 6, 0, 6, 0, 1, 1, 0, 20, 1, 3, 0, 0, 1, 0, 0, 1, 1]' : 0.134801}
{'[0, 6, 0, 6, 0, 1, 1, 0, 20, 1, 3, 0, 0, 1, 0, 0, 1, 1]' : 0.134774}
{'[0, 6, 0, 6, 0, 1, 1, 0, 20, 1, 3, 0, 0, 1, 0, 0, 1, 1]' : 0.134855}
{'[0, 6, 0, 6, 0, 1, 1, 0, 20, 1, 3, 0, 0, 1, 0, 0, 1, 1]' : 0.135081}

out:
 ["{'[0, 6, 0, 6, 0, 1, 1, 0, 20, 1, 3, 0, 0, 1, 0, 0, 1, 1]' : 0.154553}", "{'[0, 6, 0, 6, 0, 1, 1, 0, 20, 1, 3, 0, 0, 1, 0, 0, 1, 1]' : 0.154504}", "{'[0, 6, 0, 6, 0, 1, 1, 0, 20, 1, 3, 0, 0, 1, 0, 0, 1, 1]' : 0.154409}", "{'[0, 6, 0, 6, 0, 1, 1, 0, 20, 1, 3, 0, 0, 1, 0, 0, 1, 1]' : 0.143912}", "{'[0, 6, 0, 6, 0, 1, 1, 0, 20, 1, 3, 0, 0, 1, 0, 0, 1, 1]' : 0.130714}", "{'[0, 6, 0, 6, 0, 1, 1, 0, 20, 1, 3, 0, 0, 1, 0, 0, 1, 1]' : 0.130733}", "{'[0, 6, 0, 6, 0, 1, 1, 0, 20, 1, 3, 0, 0, 1, 0, 0, 1, 1]' : 0.131041}", "{'[0, 6, 0, 6, 0, 1, 1, 0, 20, 1, 3, 0, 0, 1, 0, 0, 1, 1]' : 0.130911}", "{'[0, 6, 0, 6, 0, 1, 1, 0, 20, 1, 3, 0, 0, 1, 0, 0, 1, 1]' : 0.131187}", "{'[0, 6, 0, 6, 0, 1, 1, 0, 20, 1, 3, 0, 0, 1, 0, 0, 1, 1]' : 0.131117}", "{'[0, 6, 0, 6, 0, 1, 1, 0, 20, 1, 3, 0, 0, 1, 0, 0, 1, 1]' : 0.130924}", "{'[0, 6, 0, 6, 0, 1, 1, 0, 20, 1, 3, 0, 0, 1, 0, 0, 1, 1]' : 0.130751}", "{'[0, 6, 0, 6, 0, 1, 1, 0, 20, 1, 3, 0, 0, 1, 0, 0, 1, 1]' : 0.130748}", "{'[0, 6, 0, 6, 0, 1, 1, 0, 20, 1, 3, 0, 0, 1, 0, 0, 1, 1]' : 0.130729}", "{'[0, 6, 0, 6, 0, 1, 1, 0, 20, 1, 3, 0, 0, 1, 0, 0, 1, 1]' : 0.1309}", "{'[0, 6, 0, 6, 0, 1, 1, 0, 20, 1, 3, 0, 0, 1, 0, 0, 1, 1]' : 0.131054}", "{'[0, 6, 0, 6, 0, 1, 1, 0, 20, 1, 3, 0, 0, 1, 0, 0, 1, 1]' : 0.130814}", "{'[0, 6, 0, 6, 0, 1, 1, 0, 20, 1, 3, 0, 0, 1, 0, 0, 1, 1]' : 0.130984}", "{'[0, 6, 0, 6, 0, 1, 1, 0, 20, 1, 3, 0, 0, 1, 0, 0, 1, 1]' : 0.130844}", "{'[0, 6, 0, 6, 0, 1, 1, 0, 20, 1, 3, 0, 0, 1, 0, 0, 1, 1]' : 0.132006}", "{'[0, 6, 0, 6, 0, 1, 1, 0, 20, 1, 3, 0, 0, 1, 0, 0, 1, 1]' : 0.13486}", "{'[0, 6, 0, 6, 0, 1, 1, 0, 20, 1, 3, 0, 0, 1, 0, 0, 1, 1]' : 0.134755}", "{'[0, 6, 0, 6, 0, 1, 1, 0, 20, 1, 3, 0, 0, 1, 0, 0, 1, 1]' : 0.134926}", "{'[0, 6, 0, 6, 0, 1, 1, 0, 20, 1, 3, 0, 0, 1, 0, 0, 1, 1]' : 0.135364}", "{'[0, 6, 0, 6, 0, 1, 1, 0, 20, 1, 3, 0, 0, 1, 0, 0, 1, 1]' : 0.135131}", "{'[0, 6, 0, 6, 0, 1, 1, 0, 20, 1, 3, 0, 0, 1, 0, 0, 1, 1]' : 0.135088}", "{'[0, 6, 0, 6, 0, 1, 1, 0, 20, 1, 3, 0, 0, 1, 0, 0, 1, 1]' : 0.134801}", "{'[0, 6, 0, 6, 0, 1, 1, 0, 20, 1, 3, 0, 0, 1, 0, 0, 1, 1]' : 0.134774}", "{'[0, 6, 0, 6, 0, 1, 1, 0, 20, 1, 3, 0, 0, 1, 0, 0, 1, 1]' : 0.134855}", "{'[0, 6, 0, 6, 0, 1, 1, 0, 20, 1, 3, 0, 0, 1, 0, 0, 1, 1]' : 0.135081}"]
returning from 'run': {'[0, 6, 0, 6, 0, 1, 1, 0, 20, 1, 3, 0, 0, 1, 0, 0, 1, 1]': ([0.154553, 0.154504, 0.154409, 0.143912, 0.130714, 0.130733, 0.131041, 0.130911, 0.131187, 0.131117, 0.130924, 0.130751, 0.130748, 0.130729, 0.1309, 0.131054, 0.130814, 0.130984, 0.130844, 0.132006, 0.13486, 0.134755, 0.134926, 0.135364, 0.135131, 0.135088, 0.134801, 0.134774, 0.134855, 0.135081], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 0, 6, 0, 1, 1, 0, 20, 1, 3, 0, 0, 1, 0, 0, 1, 1]': ([0.154553, 0.154504, 0.154409, 0.143912, 0.130714, 0.130733, 0.131041, 0.130911, 0.131187, 0.131117, 0.130924, 0.130751, 0.130748, 0.130729, 0.1309, 0.131054, 0.130814, 0.130984, 0.130844, 0.132006, 0.13486, 0.134755, 0.134926, 0.135364, 0.135131, 0.135088, 0.134801, 0.134774, 0.134855, 0.135081], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = kkk
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		313
        Multiplications: 	74
        Divisions: 		0
        Logical: 		0
        Reads: 			596
        Writes: 		99
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest7.exe __orio_perftest7.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest7.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest7.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest7.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest7.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	17
        Max loop nest depth: 	5
        Additions: 		2217
        Multiplications: 	676
        Divisions: 		0
        Logical: 		0
        Reads: 			3571
        Writes: 		408
        Comparisons:		17
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest8.exe __orio_perftest8.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest8.exe  
Program Test Output: 
{'[0, 2, 6, 2, 5, 4, 0, 0, 8, 24, 10, 0, 0, 0, 0, 0, 0, 0]' : 0.16157}
{'[0, 2, 6, 2, 5, 4, 0, 0, 8, 24, 10, 0, 0, 0, 0, 0, 0, 0]' : 0.161908}
{'[0, 2, 6, 2, 5, 4, 0, 0, 8, 24, 10, 0, 0, 0, 0, 0, 0, 0]' : 0.161535}
{'[0, 2, 6, 2, 5, 4, 0, 0, 8, 24, 10, 0, 0, 0, 0, 0, 0, 0]' : 0.161385}
{'[0, 2, 6, 2, 5, 4, 0, 0, 8, 24, 10, 0, 0, 0, 0, 0, 0, 0]' : 0.161815}
{'[0, 2, 6, 2, 5, 4, 0, 0, 8, 24, 10, 0, 0, 0, 0, 0, 0, 0]' : 0.161721}
{'[0, 2, 6, 2, 5, 4, 0, 0, 8, 24, 10, 0, 0, 0, 0, 0, 0, 0]' : 0.161686}
{'[0, 2, 6, 2, 5, 4, 0, 0, 8, 24, 10, 0, 0, 0, 0, 0, 0, 0]' : 0.161406}
{'[0, 2, 6, 2, 5, 4, 0, 0, 8, 24, 10, 0, 0, 0, 0, 0, 0, 0]' : 0.161828}
{'[0, 2, 6, 2, 5, 4, 0, 0, 8, 24, 10, 0, 0, 0, 0, 0, 0, 0]' : 0.161752}
{'[0, 2, 6, 2, 5, 4, 0, 0, 8, 24, 10, 0, 0, 0, 0, 0, 0, 0]' : 0.161666}
{'[0, 2, 6, 2, 5, 4, 0, 0, 8, 24, 10, 0, 0, 0, 0, 0, 0, 0]' : 0.161508}
{'[0, 2, 6, 2, 5, 4, 0, 0, 8, 24, 10, 0, 0, 0, 0, 0, 0, 0]' : 0.161509}
{'[0, 2, 6, 2, 5, 4, 0, 0, 8, 24, 10, 0, 0, 0, 0, 0, 0, 0]' : 0.161466}
{'[0, 2, 6, 2, 5, 4, 0, 0, 8, 24, 10, 0, 0, 0, 0, 0, 0, 0]' : 0.16199}
{'[0, 2, 6, 2, 5, 4, 0, 0, 8, 24, 10, 0, 0, 0, 0, 0, 0, 0]' : 0.161607}
{'[0, 2, 6, 2, 5, 4, 0, 0, 8, 24, 10, 0, 0, 0, 0, 0, 0, 0]' : 0.161543}
{'[0, 2, 6, 2, 5, 4, 0, 0, 8, 24, 10, 0, 0, 0, 0, 0, 0, 0]' : 0.161333}
{'[0, 2, 6, 2, 5, 4, 0, 0, 8, 24, 10, 0, 0, 0, 0, 0, 0, 0]' : 0.161775}
{'[0, 2, 6, 2, 5, 4, 0, 0, 8, 24, 10, 0, 0, 0, 0, 0, 0, 0]' : 0.161482}
{'[0, 2, 6, 2, 5, 4, 0, 0, 8, 24, 10, 0, 0, 0, 0, 0, 0, 0]' : 0.161342}
{'[0, 2, 6, 2, 5, 4, 0, 0, 8, 24, 10, 0, 0, 0, 0, 0, 0, 0]' : 0.161367}
{'[0, 2, 6, 2, 5, 4, 0, 0, 8, 24, 10, 0, 0, 0, 0, 0, 0, 0]' : 0.161516}
{'[0, 2, 6, 2, 5, 4, 0, 0, 8, 24, 10, 0, 0, 0, 0, 0, 0, 0]' : 0.161343}
{'[0, 2, 6, 2, 5, 4, 0, 0, 8, 24, 10, 0, 0, 0, 0, 0, 0, 0]' : 0.161339}
{'[0, 2, 6, 2, 5, 4, 0, 0, 8, 24, 10, 0, 0, 0, 0, 0, 0, 0]' : 0.162254}
{'[0, 2, 6, 2, 5, 4, 0, 0, 8, 24, 10, 0, 0, 0, 0, 0, 0, 0]' : 0.162045}
{'[0, 2, 6, 2, 5, 4, 0, 0, 8, 24, 10, 0, 0, 0, 0, 0, 0, 0]' : 0.161345}
{'[0, 2, 6, 2, 5, 4, 0, 0, 8, 24, 10, 0, 0, 0, 0, 0, 0, 0]' : 0.161413}
{'[0, 2, 6, 2, 5, 4, 0, 0, 8, 24, 10, 0, 0, 0, 0, 0, 0, 0]' : 0.161628}

out:
 ["{'[0, 2, 6, 2, 5, 4, 0, 0, 8, 24, 10, 0, 0, 0, 0, 0, 0, 0]' : 0.16157}", "{'[0, 2, 6, 2, 5, 4, 0, 0, 8, 24, 10, 0, 0, 0, 0, 0, 0, 0]' : 0.161908}", "{'[0, 2, 6, 2, 5, 4, 0, 0, 8, 24, 10, 0, 0, 0, 0, 0, 0, 0]' : 0.161535}", "{'[0, 2, 6, 2, 5, 4, 0, 0, 8, 24, 10, 0, 0, 0, 0, 0, 0, 0]' : 0.161385}", "{'[0, 2, 6, 2, 5, 4, 0, 0, 8, 24, 10, 0, 0, 0, 0, 0, 0, 0]' : 0.161815}", "{'[0, 2, 6, 2, 5, 4, 0, 0, 8, 24, 10, 0, 0, 0, 0, 0, 0, 0]' : 0.161721}", "{'[0, 2, 6, 2, 5, 4, 0, 0, 8, 24, 10, 0, 0, 0, 0, 0, 0, 0]' : 0.161686}", "{'[0, 2, 6, 2, 5, 4, 0, 0, 8, 24, 10, 0, 0, 0, 0, 0, 0, 0]' : 0.161406}", "{'[0, 2, 6, 2, 5, 4, 0, 0, 8, 24, 10, 0, 0, 0, 0, 0, 0, 0]' : 0.161828}", "{'[0, 2, 6, 2, 5, 4, 0, 0, 8, 24, 10, 0, 0, 0, 0, 0, 0, 0]' : 0.161752}", "{'[0, 2, 6, 2, 5, 4, 0, 0, 8, 24, 10, 0, 0, 0, 0, 0, 0, 0]' : 0.161666}", "{'[0, 2, 6, 2, 5, 4, 0, 0, 8, 24, 10, 0, 0, 0, 0, 0, 0, 0]' : 0.161508}", "{'[0, 2, 6, 2, 5, 4, 0, 0, 8, 24, 10, 0, 0, 0, 0, 0, 0, 0]' : 0.161509}", "{'[0, 2, 6, 2, 5, 4, 0, 0, 8, 24, 10, 0, 0, 0, 0, 0, 0, 0]' : 0.161466}", "{'[0, 2, 6, 2, 5, 4, 0, 0, 8, 24, 10, 0, 0, 0, 0, 0, 0, 0]' : 0.16199}", "{'[0, 2, 6, 2, 5, 4, 0, 0, 8, 24, 10, 0, 0, 0, 0, 0, 0, 0]' : 0.161607}", "{'[0, 2, 6, 2, 5, 4, 0, 0, 8, 24, 10, 0, 0, 0, 0, 0, 0, 0]' : 0.161543}", "{'[0, 2, 6, 2, 5, 4, 0, 0, 8, 24, 10, 0, 0, 0, 0, 0, 0, 0]' : 0.161333}", "{'[0, 2, 6, 2, 5, 4, 0, 0, 8, 24, 10, 0, 0, 0, 0, 0, 0, 0]' : 0.161775}", "{'[0, 2, 6, 2, 5, 4, 0, 0, 8, 24, 10, 0, 0, 0, 0, 0, 0, 0]' : 0.161482}", "{'[0, 2, 6, 2, 5, 4, 0, 0, 8, 24, 10, 0, 0, 0, 0, 0, 0, 0]' : 0.161342}", "{'[0, 2, 6, 2, 5, 4, 0, 0, 8, 24, 10, 0, 0, 0, 0, 0, 0, 0]' : 0.161367}", "{'[0, 2, 6, 2, 5, 4, 0, 0, 8, 24, 10, 0, 0, 0, 0, 0, 0, 0]' : 0.161516}", "{'[0, 2, 6, 2, 5, 4, 0, 0, 8, 24, 10, 0, 0, 0, 0, 0, 0, 0]' : 0.161343}", "{'[0, 2, 6, 2, 5, 4, 0, 0, 8, 24, 10, 0, 0, 0, 0, 0, 0, 0]' : 0.161339}", "{'[0, 2, 6, 2, 5, 4, 0, 0, 8, 24, 10, 0, 0, 0, 0, 0, 0, 0]' : 0.162254}", "{'[0, 2, 6, 2, 5, 4, 0, 0, 8, 24, 10, 0, 0, 0, 0, 0, 0, 0]' : 0.162045}", "{'[0, 2, 6, 2, 5, 4, 0, 0, 8, 24, 10, 0, 0, 0, 0, 0, 0, 0]' : 0.161345}", "{'[0, 2, 6, 2, 5, 4, 0, 0, 8, 24, 10, 0, 0, 0, 0, 0, 0, 0]' : 0.161413}", "{'[0, 2, 6, 2, 5, 4, 0, 0, 8, 24, 10, 0, 0, 0, 0, 0, 0, 0]' : 0.161628}"]
returning from 'run': {'[0, 2, 6, 2, 5, 4, 0, 0, 8, 24, 10, 0, 0, 0, 0, 0, 0, 0]': ([0.16157, 0.161908, 0.161535, 0.161385, 0.161815, 0.161721, 0.161686, 0.161406, 0.161828, 0.161752, 0.161666, 0.161508, 0.161509, 0.161466, 0.16199, 0.161607, 0.161543, 0.161333, 0.161775, 0.161482, 0.161342, 0.161367, 0.161516, 0.161343, 0.161339, 0.162254, 0.162045, 0.161345, 0.161413, 0.161628], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 6, 2, 5, 4, 0, 0, 8, 24, 10, 0, 0, 0, 0, 0, 0, 0]': ([0.16157, 0.161908, 0.161535, 0.161385, 0.161815, 0.161721, 0.161686, 0.161406, 0.161828, 0.161752, 0.161666, 0.161508, 0.161509, 0.161466, 0.16199, 0.161607, 0.161543, 0.161333, 0.161775, 0.161482, 0.161342, 0.161367, 0.161516, 0.161343, 0.161339, 0.162254, 0.162045, 0.161345, 0.161413, 0.161628], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		452
        Multiplications: 	184
        Divisions: 		0
        Logical: 		0
        Reads: 			1000
        Writes: 		191
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest9.exe __orio_perftest9.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest9.exe  
Program Test Output: 
{'[2, 6, 4, 0, 5, 0, 0, 0, 12, 0, 29, 27, 0, 2, 0, 1, 0, 0]' : 0.179263}
{'[2, 6, 4, 0, 5, 0, 0, 0, 12, 0, 29, 27, 0, 2, 0, 1, 0, 0]' : 0.179101}
{'[2, 6, 4, 0, 5, 0, 0, 0, 12, 0, 29, 27, 0, 2, 0, 1, 0, 0]' : 0.179125}
{'[2, 6, 4, 0, 5, 0, 0, 0, 12, 0, 29, 27, 0, 2, 0, 1, 0, 0]' : 0.165208}
{'[2, 6, 4, 0, 5, 0, 0, 0, 12, 0, 29, 27, 0, 2, 0, 1, 0, 0]' : 0.150675}
{'[2, 6, 4, 0, 5, 0, 0, 0, 12, 0, 29, 27, 0, 2, 0, 1, 0, 0]' : 0.15102}
{'[2, 6, 4, 0, 5, 0, 0, 0, 12, 0, 29, 27, 0, 2, 0, 1, 0, 0]' : 0.150644}
{'[2, 6, 4, 0, 5, 0, 0, 0, 12, 0, 29, 27, 0, 2, 0, 1, 0, 0]' : 0.150782}
{'[2, 6, 4, 0, 5, 0, 0, 0, 12, 0, 29, 27, 0, 2, 0, 1, 0, 0]' : 0.150589}
{'[2, 6, 4, 0, 5, 0, 0, 0, 12, 0, 29, 27, 0, 2, 0, 1, 0, 0]' : 0.15057}
{'[2, 6, 4, 0, 5, 0, 0, 0, 12, 0, 29, 27, 0, 2, 0, 1, 0, 0]' : 0.150732}
{'[2, 6, 4, 0, 5, 0, 0, 0, 12, 0, 29, 27, 0, 2, 0, 1, 0, 0]' : 0.150854}
{'[2, 6, 4, 0, 5, 0, 0, 0, 12, 0, 29, 27, 0, 2, 0, 1, 0, 0]' : 0.15109}
{'[2, 6, 4, 0, 5, 0, 0, 0, 12, 0, 29, 27, 0, 2, 0, 1, 0, 0]' : 0.150619}
{'[2, 6, 4, 0, 5, 0, 0, 0, 12, 0, 29, 27, 0, 2, 0, 1, 0, 0]' : 0.150617}
{'[2, 6, 4, 0, 5, 0, 0, 0, 12, 0, 29, 27, 0, 2, 0, 1, 0, 0]' : 0.150676}
{'[2, 6, 4, 0, 5, 0, 0, 0, 12, 0, 29, 27, 0, 2, 0, 1, 0, 0]' : 0.150672}
{'[2, 6, 4, 0, 5, 0, 0, 0, 12, 0, 29, 27, 0, 2, 0, 1, 0, 0]' : 0.150657}
{'[2, 6, 4, 0, 5, 0, 0, 0, 12, 0, 29, 27, 0, 2, 0, 1, 0, 0]' : 0.150674}
{'[2, 6, 4, 0, 5, 0, 0, 0, 12, 0, 29, 27, 0, 2, 0, 1, 0, 0]' : 0.151211}
{'[2, 6, 4, 0, 5, 0, 0, 0, 12, 0, 29, 27, 0, 2, 0, 1, 0, 0]' : 0.150817}
{'[2, 6, 4, 0, 5, 0, 0, 0, 12, 0, 29, 27, 0, 2, 0, 1, 0, 0]' : 0.15057}
{'[2, 6, 4, 0, 5, 0, 0, 0, 12, 0, 29, 27, 0, 2, 0, 1, 0, 0]' : 0.150616}
{'[2, 6, 4, 0, 5, 0, 0, 0, 12, 0, 29, 27, 0, 2, 0, 1, 0, 0]' : 0.150895}
{'[2, 6, 4, 0, 5, 0, 0, 0, 12, 0, 29, 27, 0, 2, 0, 1, 0, 0]' : 0.151072}
{'[2, 6, 4, 0, 5, 0, 0, 0, 12, 0, 29, 27, 0, 2, 0, 1, 0, 0]' : 0.150673}
{'[2, 6, 4, 0, 5, 0, 0, 0, 12, 0, 29, 27, 0, 2, 0, 1, 0, 0]' : 0.150876}
{'[2, 6, 4, 0, 5, 0, 0, 0, 12, 0, 29, 27, 0, 2, 0, 1, 0, 0]' : 0.150847}
{'[2, 6, 4, 0, 5, 0, 0, 0, 12, 0, 29, 27, 0, 2, 0, 1, 0, 0]' : 0.150582}
{'[2, 6, 4, 0, 5, 0, 0, 0, 12, 0, 29, 27, 0, 2, 0, 1, 0, 0]' : 0.150673}

out:
 ["{'[2, 6, 4, 0, 5, 0, 0, 0, 12, 0, 29, 27, 0, 2, 0, 1, 0, 0]' : 0.179263}", "{'[2, 6, 4, 0, 5, 0, 0, 0, 12, 0, 29, 27, 0, 2, 0, 1, 0, 0]' : 0.179101}", "{'[2, 6, 4, 0, 5, 0, 0, 0, 12, 0, 29, 27, 0, 2, 0, 1, 0, 0]' : 0.179125}", "{'[2, 6, 4, 0, 5, 0, 0, 0, 12, 0, 29, 27, 0, 2, 0, 1, 0, 0]' : 0.165208}", "{'[2, 6, 4, 0, 5, 0, 0, 0, 12, 0, 29, 27, 0, 2, 0, 1, 0, 0]' : 0.150675}", "{'[2, 6, 4, 0, 5, 0, 0, 0, 12, 0, 29, 27, 0, 2, 0, 1, 0, 0]' : 0.15102}", "{'[2, 6, 4, 0, 5, 0, 0, 0, 12, 0, 29, 27, 0, 2, 0, 1, 0, 0]' : 0.150644}", "{'[2, 6, 4, 0, 5, 0, 0, 0, 12, 0, 29, 27, 0, 2, 0, 1, 0, 0]' : 0.150782}", "{'[2, 6, 4, 0, 5, 0, 0, 0, 12, 0, 29, 27, 0, 2, 0, 1, 0, 0]' : 0.150589}", "{'[2, 6, 4, 0, 5, 0, 0, 0, 12, 0, 29, 27, 0, 2, 0, 1, 0, 0]' : 0.15057}", "{'[2, 6, 4, 0, 5, 0, 0, 0, 12, 0, 29, 27, 0, 2, 0, 1, 0, 0]' : 0.150732}", "{'[2, 6, 4, 0, 5, 0, 0, 0, 12, 0, 29, 27, 0, 2, 0, 1, 0, 0]' : 0.150854}", "{'[2, 6, 4, 0, 5, 0, 0, 0, 12, 0, 29, 27, 0, 2, 0, 1, 0, 0]' : 0.15109}", "{'[2, 6, 4, 0, 5, 0, 0, 0, 12, 0, 29, 27, 0, 2, 0, 1, 0, 0]' : 0.150619}", "{'[2, 6, 4, 0, 5, 0, 0, 0, 12, 0, 29, 27, 0, 2, 0, 1, 0, 0]' : 0.150617}", "{'[2, 6, 4, 0, 5, 0, 0, 0, 12, 0, 29, 27, 0, 2, 0, 1, 0, 0]' : 0.150676}", "{'[2, 6, 4, 0, 5, 0, 0, 0, 12, 0, 29, 27, 0, 2, 0, 1, 0, 0]' : 0.150672}", "{'[2, 6, 4, 0, 5, 0, 0, 0, 12, 0, 29, 27, 0, 2, 0, 1, 0, 0]' : 0.150657}", "{'[2, 6, 4, 0, 5, 0, 0, 0, 12, 0, 29, 27, 0, 2, 0, 1, 0, 0]' : 0.150674}", "{'[2, 6, 4, 0, 5, 0, 0, 0, 12, 0, 29, 27, 0, 2, 0, 1, 0, 0]' : 0.151211}", "{'[2, 6, 4, 0, 5, 0, 0, 0, 12, 0, 29, 27, 0, 2, 0, 1, 0, 0]' : 0.150817}", "{'[2, 6, 4, 0, 5, 0, 0, 0, 12, 0, 29, 27, 0, 2, 0, 1, 0, 0]' : 0.15057}", "{'[2, 6, 4, 0, 5, 0, 0, 0, 12, 0, 29, 27, 0, 2, 0, 1, 0, 0]' : 0.150616}", "{'[2, 6, 4, 0, 5, 0, 0, 0, 12, 0, 29, 27, 0, 2, 0, 1, 0, 0]' : 0.150895}", "{'[2, 6, 4, 0, 5, 0, 0, 0, 12, 0, 29, 27, 0, 2, 0, 1, 0, 0]' : 0.151072}", "{'[2, 6, 4, 0, 5, 0, 0, 0, 12, 0, 29, 27, 0, 2, 0, 1, 0, 0]' : 0.150673}", "{'[2, 6, 4, 0, 5, 0, 0, 0, 12, 0, 29, 27, 0, 2, 0, 1, 0, 0]' : 0.150876}", "{'[2, 6, 4, 0, 5, 0, 0, 0, 12, 0, 29, 27, 0, 2, 0, 1, 0, 0]' : 0.150847}", "{'[2, 6, 4, 0, 5, 0, 0, 0, 12, 0, 29, 27, 0, 2, 0, 1, 0, 0]' : 0.150582}", "{'[2, 6, 4, 0, 5, 0, 0, 0, 12, 0, 29, 27, 0, 2, 0, 1, 0, 0]' : 0.150673}"]
returning from 'run': {'[2, 6, 4, 0, 5, 0, 0, 0, 12, 0, 29, 27, 0, 2, 0, 1, 0, 0]': ([0.179263, 0.179101, 0.179125, 0.165208, 0.150675, 0.15102, 0.150644, 0.150782, 0.150589, 0.15057, 0.150732, 0.150854, 0.15109, 0.150619, 0.150617, 0.150676, 0.150672, 0.150657, 0.150674, 0.151211, 0.150817, 0.15057, 0.150616, 0.150895, 0.151072, 0.150673, 0.150876, 0.150847, 0.150582, 0.150673], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 6, 4, 0, 5, 0, 0, 0, 12, 0, 29, 27, 0, 2, 0, 1, 0, 0]': ([0.179263, 0.179101, 0.179125, 0.165208, 0.150675, 0.15102, 0.150644, 0.150782, 0.150589, 0.15057, 0.150732, 0.150854, 0.15109, 0.150619, 0.150617, 0.150676, 0.150672, 0.150657, 0.150674, 0.151211, 0.150817, 0.15057, 0.150616, 0.150895, 0.151072, 0.150673, 0.150876, 0.150847, 0.150582, 0.150673], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = jjj
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	5
        Additions: 		262
        Multiplications: 	94
        Divisions: 		0
        Logical: 		0
        Reads: 			632
        Writes: 		138
        Comparisons:		9
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest10.exe __orio_perftest10.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest10.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest10.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest10.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest10.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	5
        Additions: 		5153
        Multiplications: 	1320
        Divisions: 		0
        Logical: 		0
        Reads: 			7692
        Writes: 		730
        Comparisons:		24
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest11.exe __orio_perftest11.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest11.exe  
Program Test Output: 
{'[2, 0, 3, 0, 5, 6, 1, 1, 0, 0, 12, 4, 2, 0, 0, 0, 1, 1]' : 0.278428}
{'[2, 0, 3, 0, 5, 6, 1, 1, 0, 0, 12, 4, 2, 0, 0, 0, 1, 1]' : 0.276086}
{'[2, 0, 3, 0, 5, 6, 1, 1, 0, 0, 12, 4, 2, 0, 0, 0, 1, 1]' : 0.248868}
{'[2, 0, 3, 0, 5, 6, 1, 1, 0, 0, 12, 4, 2, 0, 0, 0, 1, 1]' : 0.24856}
{'[2, 0, 3, 0, 5, 6, 1, 1, 0, 0, 12, 4, 2, 0, 0, 0, 1, 1]' : 0.249175}
{'[2, 0, 3, 0, 5, 6, 1, 1, 0, 0, 12, 4, 2, 0, 0, 0, 1, 1]' : 0.248795}
{'[2, 0, 3, 0, 5, 6, 1, 1, 0, 0, 12, 4, 2, 0, 0, 0, 1, 1]' : 0.248815}
{'[2, 0, 3, 0, 5, 6, 1, 1, 0, 0, 12, 4, 2, 0, 0, 0, 1, 1]' : 0.248849}
{'[2, 0, 3, 0, 5, 6, 1, 1, 0, 0, 12, 4, 2, 0, 0, 0, 1, 1]' : 0.248548}
{'[2, 0, 3, 0, 5, 6, 1, 1, 0, 0, 12, 4, 2, 0, 0, 0, 1, 1]' : 0.249456}
{'[2, 0, 3, 0, 5, 6, 1, 1, 0, 0, 12, 4, 2, 0, 0, 0, 1, 1]' : 0.248954}
{'[2, 0, 3, 0, 5, 6, 1, 1, 0, 0, 12, 4, 2, 0, 0, 0, 1, 1]' : 0.248475}
{'[2, 0, 3, 0, 5, 6, 1, 1, 0, 0, 12, 4, 2, 0, 0, 0, 1, 1]' : 0.248698}
{'[2, 0, 3, 0, 5, 6, 1, 1, 0, 0, 12, 4, 2, 0, 0, 0, 1, 1]' : 0.248898}
{'[2, 0, 3, 0, 5, 6, 1, 1, 0, 0, 12, 4, 2, 0, 0, 0, 1, 1]' : 0.248708}
{'[2, 0, 3, 0, 5, 6, 1, 1, 0, 0, 12, 4, 2, 0, 0, 0, 1, 1]' : 0.248623}
{'[2, 0, 3, 0, 5, 6, 1, 1, 0, 0, 12, 4, 2, 0, 0, 0, 1, 1]' : 0.248743}
{'[2, 0, 3, 0, 5, 6, 1, 1, 0, 0, 12, 4, 2, 0, 0, 0, 1, 1]' : 0.248638}
{'[2, 0, 3, 0, 5, 6, 1, 1, 0, 0, 12, 4, 2, 0, 0, 0, 1, 1]' : 0.249121}
{'[2, 0, 3, 0, 5, 6, 1, 1, 0, 0, 12, 4, 2, 0, 0, 0, 1, 1]' : 0.248981}
{'[2, 0, 3, 0, 5, 6, 1, 1, 0, 0, 12, 4, 2, 0, 0, 0, 1, 1]' : 0.248804}
{'[2, 0, 3, 0, 5, 6, 1, 1, 0, 0, 12, 4, 2, 0, 0, 0, 1, 1]' : 0.248356}
{'[2, 0, 3, 0, 5, 6, 1, 1, 0, 0, 12, 4, 2, 0, 0, 0, 1, 1]' : 0.248891}
{'[2, 0, 3, 0, 5, 6, 1, 1, 0, 0, 12, 4, 2, 0, 0, 0, 1, 1]' : 0.249289}
{'[2, 0, 3, 0, 5, 6, 1, 1, 0, 0, 12, 4, 2, 0, 0, 0, 1, 1]' : 0.248828}
{'[2, 0, 3, 0, 5, 6, 1, 1, 0, 0, 12, 4, 2, 0, 0, 0, 1, 1]' : 0.248773}
{'[2, 0, 3, 0, 5, 6, 1, 1, 0, 0, 12, 4, 2, 0, 0, 0, 1, 1]' : 0.248945}
{'[2, 0, 3, 0, 5, 6, 1, 1, 0, 0, 12, 4, 2, 0, 0, 0, 1, 1]' : 0.248908}
{'[2, 0, 3, 0, 5, 6, 1, 1, 0, 0, 12, 4, 2, 0, 0, 0, 1, 1]' : 0.248534}
{'[2, 0, 3, 0, 5, 6, 1, 1, 0, 0, 12, 4, 2, 0, 0, 0, 1, 1]' : 0.248879}

out:
 ["{'[2, 0, 3, 0, 5, 6, 1, 1, 0, 0, 12, 4, 2, 0, 0, 0, 1, 1]' : 0.278428}", "{'[2, 0, 3, 0, 5, 6, 1, 1, 0, 0, 12, 4, 2, 0, 0, 0, 1, 1]' : 0.276086}", "{'[2, 0, 3, 0, 5, 6, 1, 1, 0, 0, 12, 4, 2, 0, 0, 0, 1, 1]' : 0.248868}", "{'[2, 0, 3, 0, 5, 6, 1, 1, 0, 0, 12, 4, 2, 0, 0, 0, 1, 1]' : 0.24856}", "{'[2, 0, 3, 0, 5, 6, 1, 1, 0, 0, 12, 4, 2, 0, 0, 0, 1, 1]' : 0.249175}", "{'[2, 0, 3, 0, 5, 6, 1, 1, 0, 0, 12, 4, 2, 0, 0, 0, 1, 1]' : 0.248795}", "{'[2, 0, 3, 0, 5, 6, 1, 1, 0, 0, 12, 4, 2, 0, 0, 0, 1, 1]' : 0.248815}", "{'[2, 0, 3, 0, 5, 6, 1, 1, 0, 0, 12, 4, 2, 0, 0, 0, 1, 1]' : 0.248849}", "{'[2, 0, 3, 0, 5, 6, 1, 1, 0, 0, 12, 4, 2, 0, 0, 0, 1, 1]' : 0.248548}", "{'[2, 0, 3, 0, 5, 6, 1, 1, 0, 0, 12, 4, 2, 0, 0, 0, 1, 1]' : 0.249456}", "{'[2, 0, 3, 0, 5, 6, 1, 1, 0, 0, 12, 4, 2, 0, 0, 0, 1, 1]' : 0.248954}", "{'[2, 0, 3, 0, 5, 6, 1, 1, 0, 0, 12, 4, 2, 0, 0, 0, 1, 1]' : 0.248475}", "{'[2, 0, 3, 0, 5, 6, 1, 1, 0, 0, 12, 4, 2, 0, 0, 0, 1, 1]' : 0.248698}", "{'[2, 0, 3, 0, 5, 6, 1, 1, 0, 0, 12, 4, 2, 0, 0, 0, 1, 1]' : 0.248898}", "{'[2, 0, 3, 0, 5, 6, 1, 1, 0, 0, 12, 4, 2, 0, 0, 0, 1, 1]' : 0.248708}", "{'[2, 0, 3, 0, 5, 6, 1, 1, 0, 0, 12, 4, 2, 0, 0, 0, 1, 1]' : 0.248623}", "{'[2, 0, 3, 0, 5, 6, 1, 1, 0, 0, 12, 4, 2, 0, 0, 0, 1, 1]' : 0.248743}", "{'[2, 0, 3, 0, 5, 6, 1, 1, 0, 0, 12, 4, 2, 0, 0, 0, 1, 1]' : 0.248638}", "{'[2, 0, 3, 0, 5, 6, 1, 1, 0, 0, 12, 4, 2, 0, 0, 0, 1, 1]' : 0.249121}", "{'[2, 0, 3, 0, 5, 6, 1, 1, 0, 0, 12, 4, 2, 0, 0, 0, 1, 1]' : 0.248981}", "{'[2, 0, 3, 0, 5, 6, 1, 1, 0, 0, 12, 4, 2, 0, 0, 0, 1, 1]' : 0.248804}", "{'[2, 0, 3, 0, 5, 6, 1, 1, 0, 0, 12, 4, 2, 0, 0, 0, 1, 1]' : 0.248356}", "{'[2, 0, 3, 0, 5, 6, 1, 1, 0, 0, 12, 4, 2, 0, 0, 0, 1, 1]' : 0.248891}", "{'[2, 0, 3, 0, 5, 6, 1, 1, 0, 0, 12, 4, 2, 0, 0, 0, 1, 1]' : 0.249289}", "{'[2, 0, 3, 0, 5, 6, 1, 1, 0, 0, 12, 4, 2, 0, 0, 0, 1, 1]' : 0.248828}", "{'[2, 0, 3, 0, 5, 6, 1, 1, 0, 0, 12, 4, 2, 0, 0, 0, 1, 1]' : 0.248773}", "{'[2, 0, 3, 0, 5, 6, 1, 1, 0, 0, 12, 4, 2, 0, 0, 0, 1, 1]' : 0.248945}", "{'[2, 0, 3, 0, 5, 6, 1, 1, 0, 0, 12, 4, 2, 0, 0, 0, 1, 1]' : 0.248908}", "{'[2, 0, 3, 0, 5, 6, 1, 1, 0, 0, 12, 4, 2, 0, 0, 0, 1, 1]' : 0.248534}", "{'[2, 0, 3, 0, 5, 6, 1, 1, 0, 0, 12, 4, 2, 0, 0, 0, 1, 1]' : 0.248879}"]
returning from 'run': {'[2, 0, 3, 0, 5, 6, 1, 1, 0, 0, 12, 4, 2, 0, 0, 0, 1, 1]': ([0.278428, 0.276086, 0.248868, 0.24856, 0.249175, 0.248795, 0.248815, 0.248849, 0.248548, 0.249456, 0.248954, 0.248475, 0.248698, 0.248898, 0.248708, 0.248623, 0.248743, 0.248638, 0.249121, 0.248981, 0.248804, 0.248356, 0.248891, 0.249289, 0.248828, 0.248773, 0.248945, 0.248908, 0.248534, 0.248879], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 0, 3, 0, 5, 6, 1, 1, 0, 0, 12, 4, 2, 0, 0, 0, 1, 1]': ([0.278428, 0.276086, 0.248868, 0.24856, 0.249175, 0.248795, 0.248815, 0.248849, 0.248548, 0.249456, 0.248954, 0.248475, 0.248698, 0.248898, 0.248708, 0.248623, 0.248743, 0.248638, 0.249121, 0.248981, 0.248804, 0.248356, 0.248891, 0.249289, 0.248828, 0.248773, 0.248945, 0.248908, 0.248534, 0.248879], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = iii
Code stats:
        Number of loops: 	56
        Max loop nest depth: 	5
        Additions: 		1587
        Multiplications: 	342
        Divisions: 		0
        Logical: 		0
        Reads: 			2633
        Writes: 		339
        Comparisons:		56
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest12.exe __orio_perftest12.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest12.exe  
Program Test Output: 
{'[5, 6, 6, 3, 0, 5, 1, 1, 0, 9, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.13625}
{'[5, 6, 6, 3, 0, 5, 1, 1, 0, 9, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.136162}
{'[5, 6, 6, 3, 0, 5, 1, 1, 0, 9, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.136004}
{'[5, 6, 6, 3, 0, 5, 1, 1, 0, 9, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.136232}
{'[5, 6, 6, 3, 0, 5, 1, 1, 0, 9, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.123412}
{'[5, 6, 6, 3, 0, 5, 1, 1, 0, 9, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.116183}
{'[5, 6, 6, 3, 0, 5, 1, 1, 0, 9, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.1164}
{'[5, 6, 6, 3, 0, 5, 1, 1, 0, 9, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.116133}
{'[5, 6, 6, 3, 0, 5, 1, 1, 0, 9, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.11604}
{'[5, 6, 6, 3, 0, 5, 1, 1, 0, 9, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.116118}
{'[5, 6, 6, 3, 0, 5, 1, 1, 0, 9, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.115995}
{'[5, 6, 6, 3, 0, 5, 1, 1, 0, 9, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.116124}
{'[5, 6, 6, 3, 0, 5, 1, 1, 0, 9, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.116459}
{'[5, 6, 6, 3, 0, 5, 1, 1, 0, 9, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.116304}
{'[5, 6, 6, 3, 0, 5, 1, 1, 0, 9, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.115979}
{'[5, 6, 6, 3, 0, 5, 1, 1, 0, 9, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.116273}
{'[5, 6, 6, 3, 0, 5, 1, 1, 0, 9, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.116396}
{'[5, 6, 6, 3, 0, 5, 1, 1, 0, 9, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.116049}
{'[5, 6, 6, 3, 0, 5, 1, 1, 0, 9, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.115981}
{'[5, 6, 6, 3, 0, 5, 1, 1, 0, 9, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.116009}
{'[5, 6, 6, 3, 0, 5, 1, 1, 0, 9, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.116039}
{'[5, 6, 6, 3, 0, 5, 1, 1, 0, 9, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.116256}
{'[5, 6, 6, 3, 0, 5, 1, 1, 0, 9, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.115865}
{'[5, 6, 6, 3, 0, 5, 1, 1, 0, 9, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.116288}
{'[5, 6, 6, 3, 0, 5, 1, 1, 0, 9, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.116228}
{'[5, 6, 6, 3, 0, 5, 1, 1, 0, 9, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.116314}
{'[5, 6, 6, 3, 0, 5, 1, 1, 0, 9, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.115996}
{'[5, 6, 6, 3, 0, 5, 1, 1, 0, 9, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.116151}
{'[5, 6, 6, 3, 0, 5, 1, 1, 0, 9, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.116243}
{'[5, 6, 6, 3, 0, 5, 1, 1, 0, 9, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.116102}

out:
 ["{'[5, 6, 6, 3, 0, 5, 1, 1, 0, 9, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.13625}", "{'[5, 6, 6, 3, 0, 5, 1, 1, 0, 9, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.136162}", "{'[5, 6, 6, 3, 0, 5, 1, 1, 0, 9, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.136004}", "{'[5, 6, 6, 3, 0, 5, 1, 1, 0, 9, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.136232}", "{'[5, 6, 6, 3, 0, 5, 1, 1, 0, 9, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.123412}", "{'[5, 6, 6, 3, 0, 5, 1, 1, 0, 9, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.116183}", "{'[5, 6, 6, 3, 0, 5, 1, 1, 0, 9, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.1164}", "{'[5, 6, 6, 3, 0, 5, 1, 1, 0, 9, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.116133}", "{'[5, 6, 6, 3, 0, 5, 1, 1, 0, 9, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.11604}", "{'[5, 6, 6, 3, 0, 5, 1, 1, 0, 9, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.116118}", "{'[5, 6, 6, 3, 0, 5, 1, 1, 0, 9, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.115995}", "{'[5, 6, 6, 3, 0, 5, 1, 1, 0, 9, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.116124}", "{'[5, 6, 6, 3, 0, 5, 1, 1, 0, 9, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.116459}", "{'[5, 6, 6, 3, 0, 5, 1, 1, 0, 9, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.116304}", "{'[5, 6, 6, 3, 0, 5, 1, 1, 0, 9, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.115979}", "{'[5, 6, 6, 3, 0, 5, 1, 1, 0, 9, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.116273}", "{'[5, 6, 6, 3, 0, 5, 1, 1, 0, 9, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.116396}", "{'[5, 6, 6, 3, 0, 5, 1, 1, 0, 9, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.116049}", "{'[5, 6, 6, 3, 0, 5, 1, 1, 0, 9, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.115981}", "{'[5, 6, 6, 3, 0, 5, 1, 1, 0, 9, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.116009}", "{'[5, 6, 6, 3, 0, 5, 1, 1, 0, 9, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.116039}", "{'[5, 6, 6, 3, 0, 5, 1, 1, 0, 9, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.116256}", "{'[5, 6, 6, 3, 0, 5, 1, 1, 0, 9, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.115865}", "{'[5, 6, 6, 3, 0, 5, 1, 1, 0, 9, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.116288}", "{'[5, 6, 6, 3, 0, 5, 1, 1, 0, 9, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.116228}", "{'[5, 6, 6, 3, 0, 5, 1, 1, 0, 9, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.116314}", "{'[5, 6, 6, 3, 0, 5, 1, 1, 0, 9, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.115996}", "{'[5, 6, 6, 3, 0, 5, 1, 1, 0, 9, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.116151}", "{'[5, 6, 6, 3, 0, 5, 1, 1, 0, 9, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.116243}", "{'[5, 6, 6, 3, 0, 5, 1, 1, 0, 9, 0, 9, 1, 0, 1, 0, 1, 1]' : 0.116102}"]
returning from 'run': {'[5, 6, 6, 3, 0, 5, 1, 1, 0, 9, 0, 9, 1, 0, 1, 0, 1, 1]': ([0.13625, 0.136162, 0.136004, 0.136232, 0.123412, 0.116183, 0.1164, 0.116133, 0.11604, 0.116118, 0.115995, 0.116124, 0.116459, 0.116304, 0.115979, 0.116273, 0.116396, 0.116049, 0.115981, 0.116009, 0.116039, 0.116256, 0.115865, 0.116288, 0.116228, 0.116314, 0.115996, 0.116151, 0.116243, 0.116102], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 6, 6, 3, 0, 5, 1, 1, 0, 9, 0, 9, 1, 0, 1, 0, 1, 1]': ([0.13625, 0.136162, 0.136004, 0.136232, 0.123412, 0.116183, 0.1164, 0.116133, 0.11604, 0.116118, 0.115995, 0.116124, 0.116459, 0.116304, 0.115979, 0.116273, 0.116396, 0.116049, 0.115981, 0.116009, 0.116039, 0.116256, 0.115865, 0.116288, 0.116228, 0.116314, 0.115996, 0.116151, 0.116243, 0.116102], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	6
        Additions: 		13814
        Multiplications: 	4092
        Divisions: 		0
        Logical: 		0
        Reads: 			20690
        Writes: 		2126
        Comparisons:		22
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest13.exe __orio_perftest13.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest13.exe  
Program Test Output: 
{'[2, 1, 6, 5, 6, 5, 0, 0, 29, 0, 29, 29, 2, 0, 0, 0, 1, 0]' : 0.273651}
{'[2, 1, 6, 5, 6, 5, 0, 0, 29, 0, 29, 29, 2, 0, 0, 0, 1, 0]' : 0.271337}
{'[2, 1, 6, 5, 6, 5, 0, 0, 29, 0, 29, 29, 2, 0, 0, 0, 1, 0]' : 0.238129}
{'[2, 1, 6, 5, 6, 5, 0, 0, 29, 0, 29, 29, 2, 0, 0, 0, 1, 0]' : 0.235439}
{'[2, 1, 6, 5, 6, 5, 0, 0, 29, 0, 29, 29, 2, 0, 0, 0, 1, 0]' : 0.237666}
{'[2, 1, 6, 5, 6, 5, 0, 0, 29, 0, 29, 29, 2, 0, 0, 0, 1, 0]' : 0.236127}
{'[2, 1, 6, 5, 6, 5, 0, 0, 29, 0, 29, 29, 2, 0, 0, 0, 1, 0]' : 0.237779}
{'[2, 1, 6, 5, 6, 5, 0, 0, 29, 0, 29, 29, 2, 0, 0, 0, 1, 0]' : 0.235633}
{'[2, 1, 6, 5, 6, 5, 0, 0, 29, 0, 29, 29, 2, 0, 0, 0, 1, 0]' : 0.237003}
{'[2, 1, 6, 5, 6, 5, 0, 0, 29, 0, 29, 29, 2, 0, 0, 0, 1, 0]' : 0.236783}
{'[2, 1, 6, 5, 6, 5, 0, 0, 29, 0, 29, 29, 2, 0, 0, 0, 1, 0]' : 0.236135}
{'[2, 1, 6, 5, 6, 5, 0, 0, 29, 0, 29, 29, 2, 0, 0, 0, 1, 0]' : 0.235135}
{'[2, 1, 6, 5, 6, 5, 0, 0, 29, 0, 29, 29, 2, 0, 0, 0, 1, 0]' : 0.23822}
{'[2, 1, 6, 5, 6, 5, 0, 0, 29, 0, 29, 29, 2, 0, 0, 0, 1, 0]' : 0.236837}
{'[2, 1, 6, 5, 6, 5, 0, 0, 29, 0, 29, 29, 2, 0, 0, 0, 1, 0]' : 0.237092}
{'[2, 1, 6, 5, 6, 5, 0, 0, 29, 0, 29, 29, 2, 0, 0, 0, 1, 0]' : 0.235736}
{'[2, 1, 6, 5, 6, 5, 0, 0, 29, 0, 29, 29, 2, 0, 0, 0, 1, 0]' : 0.235567}
{'[2, 1, 6, 5, 6, 5, 0, 0, 29, 0, 29, 29, 2, 0, 0, 0, 1, 0]' : 0.235136}
{'[2, 1, 6, 5, 6, 5, 0, 0, 29, 0, 29, 29, 2, 0, 0, 0, 1, 0]' : 0.240231}
{'[2, 1, 6, 5, 6, 5, 0, 0, 29, 0, 29, 29, 2, 0, 0, 0, 1, 0]' : 0.235564}
{'[2, 1, 6, 5, 6, 5, 0, 0, 29, 0, 29, 29, 2, 0, 0, 0, 1, 0]' : 0.237637}
{'[2, 1, 6, 5, 6, 5, 0, 0, 29, 0, 29, 29, 2, 0, 0, 0, 1, 0]' : 0.238047}
{'[2, 1, 6, 5, 6, 5, 0, 0, 29, 0, 29, 29, 2, 0, 0, 0, 1, 0]' : 0.235879}
{'[2, 1, 6, 5, 6, 5, 0, 0, 29, 0, 29, 29, 2, 0, 0, 0, 1, 0]' : 0.235119}
{'[2, 1, 6, 5, 6, 5, 0, 0, 29, 0, 29, 29, 2, 0, 0, 0, 1, 0]' : 0.235672}
{'[2, 1, 6, 5, 6, 5, 0, 0, 29, 0, 29, 29, 2, 0, 0, 0, 1, 0]' : 0.236193}
{'[2, 1, 6, 5, 6, 5, 0, 0, 29, 0, 29, 29, 2, 0, 0, 0, 1, 0]' : 0.237659}
{'[2, 1, 6, 5, 6, 5, 0, 0, 29, 0, 29, 29, 2, 0, 0, 0, 1, 0]' : 0.234939}
{'[2, 1, 6, 5, 6, 5, 0, 0, 29, 0, 29, 29, 2, 0, 0, 0, 1, 0]' : 0.236426}
{'[2, 1, 6, 5, 6, 5, 0, 0, 29, 0, 29, 29, 2, 0, 0, 0, 1, 0]' : 0.235665}

out:
 ["{'[2, 1, 6, 5, 6, 5, 0, 0, 29, 0, 29, 29, 2, 0, 0, 0, 1, 0]' : 0.273651}", "{'[2, 1, 6, 5, 6, 5, 0, 0, 29, 0, 29, 29, 2, 0, 0, 0, 1, 0]' : 0.271337}", "{'[2, 1, 6, 5, 6, 5, 0, 0, 29, 0, 29, 29, 2, 0, 0, 0, 1, 0]' : 0.238129}", "{'[2, 1, 6, 5, 6, 5, 0, 0, 29, 0, 29, 29, 2, 0, 0, 0, 1, 0]' : 0.235439}", "{'[2, 1, 6, 5, 6, 5, 0, 0, 29, 0, 29, 29, 2, 0, 0, 0, 1, 0]' : 0.237666}", "{'[2, 1, 6, 5, 6, 5, 0, 0, 29, 0, 29, 29, 2, 0, 0, 0, 1, 0]' : 0.236127}", "{'[2, 1, 6, 5, 6, 5, 0, 0, 29, 0, 29, 29, 2, 0, 0, 0, 1, 0]' : 0.237779}", "{'[2, 1, 6, 5, 6, 5, 0, 0, 29, 0, 29, 29, 2, 0, 0, 0, 1, 0]' : 0.235633}", "{'[2, 1, 6, 5, 6, 5, 0, 0, 29, 0, 29, 29, 2, 0, 0, 0, 1, 0]' : 0.237003}", "{'[2, 1, 6, 5, 6, 5, 0, 0, 29, 0, 29, 29, 2, 0, 0, 0, 1, 0]' : 0.236783}", "{'[2, 1, 6, 5, 6, 5, 0, 0, 29, 0, 29, 29, 2, 0, 0, 0, 1, 0]' : 0.236135}", "{'[2, 1, 6, 5, 6, 5, 0, 0, 29, 0, 29, 29, 2, 0, 0, 0, 1, 0]' : 0.235135}", "{'[2, 1, 6, 5, 6, 5, 0, 0, 29, 0, 29, 29, 2, 0, 0, 0, 1, 0]' : 0.23822}", "{'[2, 1, 6, 5, 6, 5, 0, 0, 29, 0, 29, 29, 2, 0, 0, 0, 1, 0]' : 0.236837}", "{'[2, 1, 6, 5, 6, 5, 0, 0, 29, 0, 29, 29, 2, 0, 0, 0, 1, 0]' : 0.237092}", "{'[2, 1, 6, 5, 6, 5, 0, 0, 29, 0, 29, 29, 2, 0, 0, 0, 1, 0]' : 0.235736}", "{'[2, 1, 6, 5, 6, 5, 0, 0, 29, 0, 29, 29, 2, 0, 0, 0, 1, 0]' : 0.235567}", "{'[2, 1, 6, 5, 6, 5, 0, 0, 29, 0, 29, 29, 2, 0, 0, 0, 1, 0]' : 0.235136}", "{'[2, 1, 6, 5, 6, 5, 0, 0, 29, 0, 29, 29, 2, 0, 0, 0, 1, 0]' : 0.240231}", "{'[2, 1, 6, 5, 6, 5, 0, 0, 29, 0, 29, 29, 2, 0, 0, 0, 1, 0]' : 0.235564}", "{'[2, 1, 6, 5, 6, 5, 0, 0, 29, 0, 29, 29, 2, 0, 0, 0, 1, 0]' : 0.237637}", "{'[2, 1, 6, 5, 6, 5, 0, 0, 29, 0, 29, 29, 2, 0, 0, 0, 1, 0]' : 0.238047}", "{'[2, 1, 6, 5, 6, 5, 0, 0, 29, 0, 29, 29, 2, 0, 0, 0, 1, 0]' : 0.235879}", "{'[2, 1, 6, 5, 6, 5, 0, 0, 29, 0, 29, 29, 2, 0, 0, 0, 1, 0]' : 0.235119}", "{'[2, 1, 6, 5, 6, 5, 0, 0, 29, 0, 29, 29, 2, 0, 0, 0, 1, 0]' : 0.235672}", "{'[2, 1, 6, 5, 6, 5, 0, 0, 29, 0, 29, 29, 2, 0, 0, 0, 1, 0]' : 0.236193}", "{'[2, 1, 6, 5, 6, 5, 0, 0, 29, 0, 29, 29, 2, 0, 0, 0, 1, 0]' : 0.237659}", "{'[2, 1, 6, 5, 6, 5, 0, 0, 29, 0, 29, 29, 2, 0, 0, 0, 1, 0]' : 0.234939}", "{'[2, 1, 6, 5, 6, 5, 0, 0, 29, 0, 29, 29, 2, 0, 0, 0, 1, 0]' : 0.236426}", "{'[2, 1, 6, 5, 6, 5, 0, 0, 29, 0, 29, 29, 2, 0, 0, 0, 1, 0]' : 0.235665}"]
returning from 'run': {'[2, 1, 6, 5, 6, 5, 0, 0, 29, 0, 29, 29, 2, 0, 0, 0, 1, 0]': ([0.273651, 0.271337, 0.238129, 0.235439, 0.237666, 0.236127, 0.237779, 0.235633, 0.237003, 0.236783, 0.236135, 0.235135, 0.23822, 0.236837, 0.237092, 0.235736, 0.235567, 0.235136, 0.240231, 0.235564, 0.237637, 0.238047, 0.235879, 0.235119, 0.235672, 0.236193, 0.237659, 0.234939, 0.236426, 0.235665], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 1, 6, 5, 6, 5, 0, 0, 29, 0, 29, 29, 2, 0, 0, 0, 1, 0]': ([0.273651, 0.271337, 0.238129, 0.235439, 0.237666, 0.236127, 0.237779, 0.235633, 0.237003, 0.236783, 0.236135, 0.235135, 0.23822, 0.236837, 0.237092, 0.235736, 0.235567, 0.235136, 0.240231, 0.235564, 0.237637, 0.238047, 0.235879, 0.235119, 0.235672, 0.236193, 0.237659, 0.234939, 0.236426, 0.235665], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	17
        Max loop nest depth: 	5
        Additions: 		390
        Multiplications: 	162
        Divisions: 		0
        Logical: 		0
        Reads: 			838
        Writes: 		171
        Comparisons:		17
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest14.exe __orio_perftest14.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest14.exe  
Program Test Output: 
{'[0, 0, 2, 2, 0, 6, 0, 1, 18, 0, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.110407}
{'[0, 0, 2, 2, 0, 6, 0, 1, 18, 0, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.11036}
{'[0, 0, 2, 2, 0, 6, 0, 1, 18, 0, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.110304}
{'[0, 0, 2, 2, 0, 6, 0, 1, 18, 0, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.11039}
{'[0, 0, 2, 2, 0, 6, 0, 1, 18, 0, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.102809}
{'[0, 0, 2, 2, 0, 6, 0, 1, 18, 0, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.0934269}
{'[0, 0, 2, 2, 0, 6, 0, 1, 18, 0, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.093451}
{'[0, 0, 2, 2, 0, 6, 0, 1, 18, 0, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.09343}
{'[0, 0, 2, 2, 0, 6, 0, 1, 18, 0, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.093539}
{'[0, 0, 2, 2, 0, 6, 0, 1, 18, 0, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.0933988}
{'[0, 0, 2, 2, 0, 6, 0, 1, 18, 0, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.0933471}
{'[0, 0, 2, 2, 0, 6, 0, 1, 18, 0, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.0937262}
{'[0, 0, 2, 2, 0, 6, 0, 1, 18, 0, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.0937338}
{'[0, 0, 2, 2, 0, 6, 0, 1, 18, 0, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.0934079}
{'[0, 0, 2, 2, 0, 6, 0, 1, 18, 0, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.0934429}
{'[0, 0, 2, 2, 0, 6, 0, 1, 18, 0, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.0934248}
{'[0, 0, 2, 2, 0, 6, 0, 1, 18, 0, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.0934191}
{'[0, 0, 2, 2, 0, 6, 0, 1, 18, 0, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.093632}
{'[0, 0, 2, 2, 0, 6, 0, 1, 18, 0, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.0933712}
{'[0, 0, 2, 2, 0, 6, 0, 1, 18, 0, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.0936699}
{'[0, 0, 2, 2, 0, 6, 0, 1, 18, 0, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.093364}
{'[0, 0, 2, 2, 0, 6, 0, 1, 18, 0, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.0933561}
{'[0, 0, 2, 2, 0, 6, 0, 1, 18, 0, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.0934949}
{'[0, 0, 2, 2, 0, 6, 0, 1, 18, 0, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.0936511}
{'[0, 0, 2, 2, 0, 6, 0, 1, 18, 0, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.0937171}
{'[0, 0, 2, 2, 0, 6, 0, 1, 18, 0, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.0936139}
{'[0, 0, 2, 2, 0, 6, 0, 1, 18, 0, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.09342}
{'[0, 0, 2, 2, 0, 6, 0, 1, 18, 0, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.09342}
{'[0, 0, 2, 2, 0, 6, 0, 1, 18, 0, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.0934498}
{'[0, 0, 2, 2, 0, 6, 0, 1, 18, 0, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.0934131}

out:
 ["{'[0, 0, 2, 2, 0, 6, 0, 1, 18, 0, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.110407}", "{'[0, 0, 2, 2, 0, 6, 0, 1, 18, 0, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.11036}", "{'[0, 0, 2, 2, 0, 6, 0, 1, 18, 0, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.110304}", "{'[0, 0, 2, 2, 0, 6, 0, 1, 18, 0, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.11039}", "{'[0, 0, 2, 2, 0, 6, 0, 1, 18, 0, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.102809}", "{'[0, 0, 2, 2, 0, 6, 0, 1, 18, 0, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.0934269}", "{'[0, 0, 2, 2, 0, 6, 0, 1, 18, 0, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.093451}", "{'[0, 0, 2, 2, 0, 6, 0, 1, 18, 0, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.09343}", "{'[0, 0, 2, 2, 0, 6, 0, 1, 18, 0, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.093539}", "{'[0, 0, 2, 2, 0, 6, 0, 1, 18, 0, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.0933988}", "{'[0, 0, 2, 2, 0, 6, 0, 1, 18, 0, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.0933471}", "{'[0, 0, 2, 2, 0, 6, 0, 1, 18, 0, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.0937262}", "{'[0, 0, 2, 2, 0, 6, 0, 1, 18, 0, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.0937338}", "{'[0, 0, 2, 2, 0, 6, 0, 1, 18, 0, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.0934079}", "{'[0, 0, 2, 2, 0, 6, 0, 1, 18, 0, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.0934429}", "{'[0, 0, 2, 2, 0, 6, 0, 1, 18, 0, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.0934248}", "{'[0, 0, 2, 2, 0, 6, 0, 1, 18, 0, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.0934191}", "{'[0, 0, 2, 2, 0, 6, 0, 1, 18, 0, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.093632}", "{'[0, 0, 2, 2, 0, 6, 0, 1, 18, 0, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.0933712}", "{'[0, 0, 2, 2, 0, 6, 0, 1, 18, 0, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.0936699}", "{'[0, 0, 2, 2, 0, 6, 0, 1, 18, 0, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.093364}", "{'[0, 0, 2, 2, 0, 6, 0, 1, 18, 0, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.0933561}", "{'[0, 0, 2, 2, 0, 6, 0, 1, 18, 0, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.0934949}", "{'[0, 0, 2, 2, 0, 6, 0, 1, 18, 0, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.0936511}", "{'[0, 0, 2, 2, 0, 6, 0, 1, 18, 0, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.0937171}", "{'[0, 0, 2, 2, 0, 6, 0, 1, 18, 0, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.0936139}", "{'[0, 0, 2, 2, 0, 6, 0, 1, 18, 0, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.09342}", "{'[0, 0, 2, 2, 0, 6, 0, 1, 18, 0, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.09342}", "{'[0, 0, 2, 2, 0, 6, 0, 1, 18, 0, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.0934498}", "{'[0, 0, 2, 2, 0, 6, 0, 1, 18, 0, 5, 0, 1, 1, 0, 1, 0, 0]' : 0.0934131}"]
returning from 'run': {'[0, 0, 2, 2, 0, 6, 0, 1, 18, 0, 5, 0, 1, 1, 0, 1, 0, 0]': ([0.110407, 0.11036, 0.110304, 0.11039, 0.102809, 0.0934269, 0.093451, 0.09343, 0.093539, 0.0933988, 0.0933471, 0.0937262, 0.0937338, 0.0934079, 0.0934429, 0.0934248, 0.0934191, 0.093632, 0.0933712, 0.0936699, 0.093364, 0.0933561, 0.0934949, 0.0936511, 0.0937171, 0.0936139, 0.09342, 0.09342, 0.0934498, 0.0934131], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 2, 2, 0, 6, 0, 1, 18, 0, 5, 0, 1, 1, 0, 1, 0, 0]': ([0.110407, 0.11036, 0.110304, 0.11039, 0.102809, 0.0934269, 0.093451, 0.09343, 0.093539, 0.0933988, 0.0933471, 0.0937262, 0.0937338, 0.0934079, 0.0934429, 0.0934248, 0.0934191, 0.093632, 0.0933712, 0.0936699, 0.093364, 0.0933561, 0.0934949, 0.0936511, 0.0937171, 0.0936139, 0.09342, 0.09342, 0.0934498, 0.0934131], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	88
        Max loop nest depth: 	5
        Additions: 		4633
        Multiplications: 	1536
        Divisions: 		0
        Logical: 		0
        Reads: 			7850
        Writes: 		1194
        Comparisons:		88
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest15.exe __orio_perftest15.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest15.exe  
Program Test Output: 
{'[6, 0, 0, 6, 6, 0, 1, 0, 27, 22, 21, 0, 1, 0, 0, 1, 0, 1]' : 0.11502}
{'[6, 0, 0, 6, 6, 0, 1, 0, 27, 22, 21, 0, 1, 0, 0, 1, 0, 1]' : 0.114998}
{'[6, 0, 0, 6, 6, 0, 1, 0, 27, 22, 21, 0, 1, 0, 0, 1, 0, 1]' : 0.114941}
{'[6, 0, 0, 6, 6, 0, 1, 0, 27, 22, 21, 0, 1, 0, 0, 1, 0, 1]' : 0.114054}
{'[6, 0, 0, 6, 6, 0, 1, 0, 27, 22, 21, 0, 1, 0, 0, 1, 0, 1]' : 0.099694}
{'[6, 0, 0, 6, 6, 0, 1, 0, 27, 22, 21, 0, 1, 0, 0, 1, 0, 1]' : 0.0979171}
{'[6, 0, 0, 6, 6, 0, 1, 0, 27, 22, 21, 0, 1, 0, 0, 1, 0, 1]' : 0.097924}
{'[6, 0, 0, 6, 6, 0, 1, 0, 27, 22, 21, 0, 1, 0, 0, 1, 0, 1]' : 0.0981572}
{'[6, 0, 0, 6, 6, 0, 1, 0, 27, 22, 21, 0, 1, 0, 0, 1, 0, 1]' : 0.0981419}
{'[6, 0, 0, 6, 6, 0, 1, 0, 27, 22, 21, 0, 1, 0, 0, 1, 0, 1]' : 0.098089}
{'[6, 0, 0, 6, 6, 0, 1, 0, 27, 22, 21, 0, 1, 0, 0, 1, 0, 1]' : 0.097822}
{'[6, 0, 0, 6, 6, 0, 1, 0, 27, 22, 21, 0, 1, 0, 0, 1, 0, 1]' : 0.098083}
{'[6, 0, 0, 6, 6, 0, 1, 0, 27, 22, 21, 0, 1, 0, 0, 1, 0, 1]' : 0.0978892}
{'[6, 0, 0, 6, 6, 0, 1, 0, 27, 22, 21, 0, 1, 0, 0, 1, 0, 1]' : 0.0980978}
{'[6, 0, 0, 6, 6, 0, 1, 0, 27, 22, 21, 0, 1, 0, 0, 1, 0, 1]' : 0.0978432}
{'[6, 0, 0, 6, 6, 0, 1, 0, 27, 22, 21, 0, 1, 0, 0, 1, 0, 1]' : 0.0981479}
{'[6, 0, 0, 6, 6, 0, 1, 0, 27, 22, 21, 0, 1, 0, 0, 1, 0, 1]' : 0.0978091}
{'[6, 0, 0, 6, 6, 0, 1, 0, 27, 22, 21, 0, 1, 0, 0, 1, 0, 1]' : 0.0979321}
{'[6, 0, 0, 6, 6, 0, 1, 0, 27, 22, 21, 0, 1, 0, 0, 1, 0, 1]' : 0.0982192}
{'[6, 0, 0, 6, 6, 0, 1, 0, 27, 22, 21, 0, 1, 0, 0, 1, 0, 1]' : 0.0980489}
{'[6, 0, 0, 6, 6, 0, 1, 0, 27, 22, 21, 0, 1, 0, 0, 1, 0, 1]' : 0.0977941}
{'[6, 0, 0, 6, 6, 0, 1, 0, 27, 22, 21, 0, 1, 0, 0, 1, 0, 1]' : 0.098026}
{'[6, 0, 0, 6, 6, 0, 1, 0, 27, 22, 21, 0, 1, 0, 0, 1, 0, 1]' : 0.0978739}
{'[6, 0, 0, 6, 6, 0, 1, 0, 27, 22, 21, 0, 1, 0, 0, 1, 0, 1]' : 0.097944}
{'[6, 0, 0, 6, 6, 0, 1, 0, 27, 22, 21, 0, 1, 0, 0, 1, 0, 1]' : 0.097872}
{'[6, 0, 0, 6, 6, 0, 1, 0, 27, 22, 21, 0, 1, 0, 0, 1, 0, 1]' : 0.0979359}
{'[6, 0, 0, 6, 6, 0, 1, 0, 27, 22, 21, 0, 1, 0, 0, 1, 0, 1]' : 0.0978329}
{'[6, 0, 0, 6, 6, 0, 1, 0, 27, 22, 21, 0, 1, 0, 0, 1, 0, 1]' : 0.0980661}
{'[6, 0, 0, 6, 6, 0, 1, 0, 27, 22, 21, 0, 1, 0, 0, 1, 0, 1]' : 0.097976}
{'[6, 0, 0, 6, 6, 0, 1, 0, 27, 22, 21, 0, 1, 0, 0, 1, 0, 1]' : 0.0981851}

out:
 ["{'[6, 0, 0, 6, 6, 0, 1, 0, 27, 22, 21, 0, 1, 0, 0, 1, 0, 1]' : 0.11502}", "{'[6, 0, 0, 6, 6, 0, 1, 0, 27, 22, 21, 0, 1, 0, 0, 1, 0, 1]' : 0.114998}", "{'[6, 0, 0, 6, 6, 0, 1, 0, 27, 22, 21, 0, 1, 0, 0, 1, 0, 1]' : 0.114941}", "{'[6, 0, 0, 6, 6, 0, 1, 0, 27, 22, 21, 0, 1, 0, 0, 1, 0, 1]' : 0.114054}", "{'[6, 0, 0, 6, 6, 0, 1, 0, 27, 22, 21, 0, 1, 0, 0, 1, 0, 1]' : 0.099694}", "{'[6, 0, 0, 6, 6, 0, 1, 0, 27, 22, 21, 0, 1, 0, 0, 1, 0, 1]' : 0.0979171}", "{'[6, 0, 0, 6, 6, 0, 1, 0, 27, 22, 21, 0, 1, 0, 0, 1, 0, 1]' : 0.097924}", "{'[6, 0, 0, 6, 6, 0, 1, 0, 27, 22, 21, 0, 1, 0, 0, 1, 0, 1]' : 0.0981572}", "{'[6, 0, 0, 6, 6, 0, 1, 0, 27, 22, 21, 0, 1, 0, 0, 1, 0, 1]' : 0.0981419}", "{'[6, 0, 0, 6, 6, 0, 1, 0, 27, 22, 21, 0, 1, 0, 0, 1, 0, 1]' : 0.098089}", "{'[6, 0, 0, 6, 6, 0, 1, 0, 27, 22, 21, 0, 1, 0, 0, 1, 0, 1]' : 0.097822}", "{'[6, 0, 0, 6, 6, 0, 1, 0, 27, 22, 21, 0, 1, 0, 0, 1, 0, 1]' : 0.098083}", "{'[6, 0, 0, 6, 6, 0, 1, 0, 27, 22, 21, 0, 1, 0, 0, 1, 0, 1]' : 0.0978892}", "{'[6, 0, 0, 6, 6, 0, 1, 0, 27, 22, 21, 0, 1, 0, 0, 1, 0, 1]' : 0.0980978}", "{'[6, 0, 0, 6, 6, 0, 1, 0, 27, 22, 21, 0, 1, 0, 0, 1, 0, 1]' : 0.0978432}", "{'[6, 0, 0, 6, 6, 0, 1, 0, 27, 22, 21, 0, 1, 0, 0, 1, 0, 1]' : 0.0981479}", "{'[6, 0, 0, 6, 6, 0, 1, 0, 27, 22, 21, 0, 1, 0, 0, 1, 0, 1]' : 0.0978091}", "{'[6, 0, 0, 6, 6, 0, 1, 0, 27, 22, 21, 0, 1, 0, 0, 1, 0, 1]' : 0.0979321}", "{'[6, 0, 0, 6, 6, 0, 1, 0, 27, 22, 21, 0, 1, 0, 0, 1, 0, 1]' : 0.0982192}", "{'[6, 0, 0, 6, 6, 0, 1, 0, 27, 22, 21, 0, 1, 0, 0, 1, 0, 1]' : 0.0980489}", "{'[6, 0, 0, 6, 6, 0, 1, 0, 27, 22, 21, 0, 1, 0, 0, 1, 0, 1]' : 0.0977941}", "{'[6, 0, 0, 6, 6, 0, 1, 0, 27, 22, 21, 0, 1, 0, 0, 1, 0, 1]' : 0.098026}", "{'[6, 0, 0, 6, 6, 0, 1, 0, 27, 22, 21, 0, 1, 0, 0, 1, 0, 1]' : 0.0978739}", "{'[6, 0, 0, 6, 6, 0, 1, 0, 27, 22, 21, 0, 1, 0, 0, 1, 0, 1]' : 0.097944}", "{'[6, 0, 0, 6, 6, 0, 1, 0, 27, 22, 21, 0, 1, 0, 0, 1, 0, 1]' : 0.097872}", "{'[6, 0, 0, 6, 6, 0, 1, 0, 27, 22, 21, 0, 1, 0, 0, 1, 0, 1]' : 0.0979359}", "{'[6, 0, 0, 6, 6, 0, 1, 0, 27, 22, 21, 0, 1, 0, 0, 1, 0, 1]' : 0.0978329}", "{'[6, 0, 0, 6, 6, 0, 1, 0, 27, 22, 21, 0, 1, 0, 0, 1, 0, 1]' : 0.0980661}", "{'[6, 0, 0, 6, 6, 0, 1, 0, 27, 22, 21, 0, 1, 0, 0, 1, 0, 1]' : 0.097976}", "{'[6, 0, 0, 6, 6, 0, 1, 0, 27, 22, 21, 0, 1, 0, 0, 1, 0, 1]' : 0.0981851}"]
returning from 'run': {'[6, 0, 0, 6, 6, 0, 1, 0, 27, 22, 21, 0, 1, 0, 0, 1, 0, 1]': ([0.11502, 0.114998, 0.114941, 0.114054, 0.099694, 0.0979171, 0.097924, 0.0981572, 0.0981419, 0.098089, 0.097822, 0.098083, 0.0978892, 0.0980978, 0.0978432, 0.0981479, 0.0978091, 0.0979321, 0.0982192, 0.0980489, 0.0977941, 0.098026, 0.0978739, 0.097944, 0.097872, 0.0979359, 0.0978329, 0.0980661, 0.097976, 0.0981851], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 0, 6, 6, 0, 1, 0, 27, 22, 21, 0, 1, 0, 0, 1, 0, 1]': ([0.11502, 0.114998, 0.114941, 0.114054, 0.099694, 0.0979171, 0.097924, 0.0981572, 0.0981419, 0.098089, 0.097822, 0.098083, 0.0978892, 0.0980978, 0.0978432, 0.0981479, 0.0978091, 0.0979321, 0.0982192, 0.0980489, 0.0977941, 0.098026, 0.0978739, 0.097944, 0.097872, 0.0979359, 0.0978329, 0.0980661, 0.097976, 0.0981851], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	3
        Additions: 		7618
        Multiplications: 	3776
        Divisions: 		0
        Logical: 		0
        Reads: 			13818
        Writes: 		2065
        Comparisons:		10
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest16.exe __orio_perftest16.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest16.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest16.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest16.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest16.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	159
        Max loop nest depth: 	6
        Additions: 		4993
        Multiplications: 	1102
        Divisions: 		0
        Logical: 		0
        Reads: 			9960
        Writes: 		2119
        Comparisons:		159
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest17.exe __orio_perftest17.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest17.exe  
Program Test Output: 
{'[3, 4, 3, 2, 0, 2, 1, 1, 26, 27, 0, 16, 0, 0, 0, 1, 1, 0]' : 0.343571}
{'[3, 4, 3, 2, 0, 2, 1, 1, 26, 27, 0, 16, 0, 0, 0, 1, 1, 0]' : 0.313722}
{'[3, 4, 3, 2, 0, 2, 1, 1, 26, 27, 0, 16, 0, 0, 0, 1, 1, 0]' : 0.292276}
{'[3, 4, 3, 2, 0, 2, 1, 1, 26, 27, 0, 16, 0, 0, 0, 1, 1, 0]' : 0.292383}
{'[3, 4, 3, 2, 0, 2, 1, 1, 26, 27, 0, 16, 0, 0, 0, 1, 1, 0]' : 0.292889}
{'[3, 4, 3, 2, 0, 2, 1, 1, 26, 27, 0, 16, 0, 0, 0, 1, 1, 0]' : 0.292493}
{'[3, 4, 3, 2, 0, 2, 1, 1, 26, 27, 0, 16, 0, 0, 0, 1, 1, 0]' : 0.292411}
{'[3, 4, 3, 2, 0, 2, 1, 1, 26, 27, 0, 16, 0, 0, 0, 1, 1, 0]' : 0.292635}
{'[3, 4, 3, 2, 0, 2, 1, 1, 26, 27, 0, 16, 0, 0, 0, 1, 1, 0]' : 0.292244}
{'[3, 4, 3, 2, 0, 2, 1, 1, 26, 27, 0, 16, 0, 0, 0, 1, 1, 0]' : 0.292122}
{'[3, 4, 3, 2, 0, 2, 1, 1, 26, 27, 0, 16, 0, 0, 0, 1, 1, 0]' : 0.292223}
{'[3, 4, 3, 2, 0, 2, 1, 1, 26, 27, 0, 16, 0, 0, 0, 1, 1, 0]' : 0.292926}
{'[3, 4, 3, 2, 0, 2, 1, 1, 26, 27, 0, 16, 0, 0, 0, 1, 1, 0]' : 0.292263}
{'[3, 4, 3, 2, 0, 2, 1, 1, 26, 27, 0, 16, 0, 0, 0, 1, 1, 0]' : 0.292338}
{'[3, 4, 3, 2, 0, 2, 1, 1, 26, 27, 0, 16, 0, 0, 0, 1, 1, 0]' : 0.292595}
{'[3, 4, 3, 2, 0, 2, 1, 1, 26, 27, 0, 16, 0, 0, 0, 1, 1, 0]' : 0.292335}
{'[3, 4, 3, 2, 0, 2, 1, 1, 26, 27, 0, 16, 0, 0, 0, 1, 1, 0]' : 0.292323}
{'[3, 4, 3, 2, 0, 2, 1, 1, 26, 27, 0, 16, 0, 0, 0, 1, 1, 0]' : 0.292305}
{'[3, 4, 3, 2, 0, 2, 1, 1, 26, 27, 0, 16, 0, 0, 0, 1, 1, 0]' : 0.292606}
{'[3, 4, 3, 2, 0, 2, 1, 1, 26, 27, 0, 16, 0, 0, 0, 1, 1, 0]' : 0.292607}
{'[3, 4, 3, 2, 0, 2, 1, 1, 26, 27, 0, 16, 0, 0, 0, 1, 1, 0]' : 0.292372}
{'[3, 4, 3, 2, 0, 2, 1, 1, 26, 27, 0, 16, 0, 0, 0, 1, 1, 0]' : 0.292201}
{'[3, 4, 3, 2, 0, 2, 1, 1, 26, 27, 0, 16, 0, 0, 0, 1, 1, 0]' : 0.292771}
{'[3, 4, 3, 2, 0, 2, 1, 1, 26, 27, 0, 16, 0, 0, 0, 1, 1, 0]' : 0.292371}
{'[3, 4, 3, 2, 0, 2, 1, 1, 26, 27, 0, 16, 0, 0, 0, 1, 1, 0]' : 0.292224}
{'[3, 4, 3, 2, 0, 2, 1, 1, 26, 27, 0, 16, 0, 0, 0, 1, 1, 0]' : 0.292412}
{'[3, 4, 3, 2, 0, 2, 1, 1, 26, 27, 0, 16, 0, 0, 0, 1, 1, 0]' : 0.292549}
{'[3, 4, 3, 2, 0, 2, 1, 1, 26, 27, 0, 16, 0, 0, 0, 1, 1, 0]' : 0.292448}
{'[3, 4, 3, 2, 0, 2, 1, 1, 26, 27, 0, 16, 0, 0, 0, 1, 1, 0]' : 0.292169}
{'[3, 4, 3, 2, 0, 2, 1, 1, 26, 27, 0, 16, 0, 0, 0, 1, 1, 0]' : 0.292092}

out:
 ["{'[3, 4, 3, 2, 0, 2, 1, 1, 26, 27, 0, 16, 0, 0, 0, 1, 1, 0]' : 0.343571}", "{'[3, 4, 3, 2, 0, 2, 1, 1, 26, 27, 0, 16, 0, 0, 0, 1, 1, 0]' : 0.313722}", "{'[3, 4, 3, 2, 0, 2, 1, 1, 26, 27, 0, 16, 0, 0, 0, 1, 1, 0]' : 0.292276}", "{'[3, 4, 3, 2, 0, 2, 1, 1, 26, 27, 0, 16, 0, 0, 0, 1, 1, 0]' : 0.292383}", "{'[3, 4, 3, 2, 0, 2, 1, 1, 26, 27, 0, 16, 0, 0, 0, 1, 1, 0]' : 0.292889}", "{'[3, 4, 3, 2, 0, 2, 1, 1, 26, 27, 0, 16, 0, 0, 0, 1, 1, 0]' : 0.292493}", "{'[3, 4, 3, 2, 0, 2, 1, 1, 26, 27, 0, 16, 0, 0, 0, 1, 1, 0]' : 0.292411}", "{'[3, 4, 3, 2, 0, 2, 1, 1, 26, 27, 0, 16, 0, 0, 0, 1, 1, 0]' : 0.292635}", "{'[3, 4, 3, 2, 0, 2, 1, 1, 26, 27, 0, 16, 0, 0, 0, 1, 1, 0]' : 0.292244}", "{'[3, 4, 3, 2, 0, 2, 1, 1, 26, 27, 0, 16, 0, 0, 0, 1, 1, 0]' : 0.292122}", "{'[3, 4, 3, 2, 0, 2, 1, 1, 26, 27, 0, 16, 0, 0, 0, 1, 1, 0]' : 0.292223}", "{'[3, 4, 3, 2, 0, 2, 1, 1, 26, 27, 0, 16, 0, 0, 0, 1, 1, 0]' : 0.292926}", "{'[3, 4, 3, 2, 0, 2, 1, 1, 26, 27, 0, 16, 0, 0, 0, 1, 1, 0]' : 0.292263}", "{'[3, 4, 3, 2, 0, 2, 1, 1, 26, 27, 0, 16, 0, 0, 0, 1, 1, 0]' : 0.292338}", "{'[3, 4, 3, 2, 0, 2, 1, 1, 26, 27, 0, 16, 0, 0, 0, 1, 1, 0]' : 0.292595}", "{'[3, 4, 3, 2, 0, 2, 1, 1, 26, 27, 0, 16, 0, 0, 0, 1, 1, 0]' : 0.292335}", "{'[3, 4, 3, 2, 0, 2, 1, 1, 26, 27, 0, 16, 0, 0, 0, 1, 1, 0]' : 0.292323}", "{'[3, 4, 3, 2, 0, 2, 1, 1, 26, 27, 0, 16, 0, 0, 0, 1, 1, 0]' : 0.292305}", "{'[3, 4, 3, 2, 0, 2, 1, 1, 26, 27, 0, 16, 0, 0, 0, 1, 1, 0]' : 0.292606}", "{'[3, 4, 3, 2, 0, 2, 1, 1, 26, 27, 0, 16, 0, 0, 0, 1, 1, 0]' : 0.292607}", "{'[3, 4, 3, 2, 0, 2, 1, 1, 26, 27, 0, 16, 0, 0, 0, 1, 1, 0]' : 0.292372}", "{'[3, 4, 3, 2, 0, 2, 1, 1, 26, 27, 0, 16, 0, 0, 0, 1, 1, 0]' : 0.292201}", "{'[3, 4, 3, 2, 0, 2, 1, 1, 26, 27, 0, 16, 0, 0, 0, 1, 1, 0]' : 0.292771}", "{'[3, 4, 3, 2, 0, 2, 1, 1, 26, 27, 0, 16, 0, 0, 0, 1, 1, 0]' : 0.292371}", "{'[3, 4, 3, 2, 0, 2, 1, 1, 26, 27, 0, 16, 0, 0, 0, 1, 1, 0]' : 0.292224}", "{'[3, 4, 3, 2, 0, 2, 1, 1, 26, 27, 0, 16, 0, 0, 0, 1, 1, 0]' : 0.292412}", "{'[3, 4, 3, 2, 0, 2, 1, 1, 26, 27, 0, 16, 0, 0, 0, 1, 1, 0]' : 0.292549}", "{'[3, 4, 3, 2, 0, 2, 1, 1, 26, 27, 0, 16, 0, 0, 0, 1, 1, 0]' : 0.292448}", "{'[3, 4, 3, 2, 0, 2, 1, 1, 26, 27, 0, 16, 0, 0, 0, 1, 1, 0]' : 0.292169}", "{'[3, 4, 3, 2, 0, 2, 1, 1, 26, 27, 0, 16, 0, 0, 0, 1, 1, 0]' : 0.292092}"]
returning from 'run': {'[3, 4, 3, 2, 0, 2, 1, 1, 26, 27, 0, 16, 0, 0, 0, 1, 1, 0]': ([0.343571, 0.313722, 0.292276, 0.292383, 0.292889, 0.292493, 0.292411, 0.292635, 0.292244, 0.292122, 0.292223, 0.292926, 0.292263, 0.292338, 0.292595, 0.292335, 0.292323, 0.292305, 0.292606, 0.292607, 0.292372, 0.292201, 0.292771, 0.292371, 0.292224, 0.292412, 0.292549, 0.292448, 0.292169, 0.292092], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 4, 3, 2, 0, 2, 1, 1, 26, 27, 0, 16, 0, 0, 0, 1, 1, 0]': ([0.343571, 0.313722, 0.292276, 0.292383, 0.292889, 0.292493, 0.292411, 0.292635, 0.292244, 0.292122, 0.292223, 0.292926, 0.292263, 0.292338, 0.292595, 0.292335, 0.292323, 0.292305, 0.292606, 0.292607, 0.292372, 0.292201, 0.292771, 0.292371, 0.292224, 0.292412, 0.292549, 0.292448, 0.292169, 0.292092], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = iii
Code stats:
        Number of loops: 	63
        Max loop nest depth: 	5
        Additions: 		3569
        Multiplications: 	960
        Divisions: 		0
        Logical: 		0
        Reads: 			5653
        Writes: 		696
        Comparisons:		63
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest18.exe __orio_perftest18.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest18.exe  
Program Test Output: 
{'[6, 1, 0, 4, 6, 5, 1, 0, 4, 14, 0, 12, 0, 1, 1, 0, 0, 1]' : 0.187975}
{'[6, 1, 0, 4, 6, 5, 1, 0, 4, 14, 0, 12, 0, 1, 1, 0, 0, 1]' : 0.186863}
{'[6, 1, 0, 4, 6, 5, 1, 0, 4, 14, 0, 12, 0, 1, 1, 0, 0, 1]' : 0.180466}
{'[6, 1, 0, 4, 6, 5, 1, 0, 4, 14, 0, 12, 0, 1, 1, 0, 0, 1]' : 0.157864}
{'[6, 1, 0, 4, 6, 5, 1, 0, 4, 14, 0, 12, 0, 1, 1, 0, 0, 1]' : 0.157545}
{'[6, 1, 0, 4, 6, 5, 1, 0, 4, 14, 0, 12, 0, 1, 1, 0, 0, 1]' : 0.157942}
{'[6, 1, 0, 4, 6, 5, 1, 0, 4, 14, 0, 12, 0, 1, 1, 0, 0, 1]' : 0.157706}
{'[6, 1, 0, 4, 6, 5, 1, 0, 4, 14, 0, 12, 0, 1, 1, 0, 0, 1]' : 0.157506}
{'[6, 1, 0, 4, 6, 5, 1, 0, 4, 14, 0, 12, 0, 1, 1, 0, 0, 1]' : 0.157735}
{'[6, 1, 0, 4, 6, 5, 1, 0, 4, 14, 0, 12, 0, 1, 1, 0, 0, 1]' : 0.157646}
{'[6, 1, 0, 4, 6, 5, 1, 0, 4, 14, 0, 12, 0, 1, 1, 0, 0, 1]' : 0.157395}
{'[6, 1, 0, 4, 6, 5, 1, 0, 4, 14, 0, 12, 0, 1, 1, 0, 0, 1]' : 0.157595}
{'[6, 1, 0, 4, 6, 5, 1, 0, 4, 14, 0, 12, 0, 1, 1, 0, 0, 1]' : 0.157842}
{'[6, 1, 0, 4, 6, 5, 1, 0, 4, 14, 0, 12, 0, 1, 1, 0, 0, 1]' : 0.157899}
{'[6, 1, 0, 4, 6, 5, 1, 0, 4, 14, 0, 12, 0, 1, 1, 0, 0, 1]' : 0.157584}
{'[6, 1, 0, 4, 6, 5, 1, 0, 4, 14, 0, 12, 0, 1, 1, 0, 0, 1]' : 0.157531}
{'[6, 1, 0, 4, 6, 5, 1, 0, 4, 14, 0, 12, 0, 1, 1, 0, 0, 1]' : 0.157472}
{'[6, 1, 0, 4, 6, 5, 1, 0, 4, 14, 0, 12, 0, 1, 1, 0, 0, 1]' : 0.157742}
{'[6, 1, 0, 4, 6, 5, 1, 0, 4, 14, 0, 12, 0, 1, 1, 0, 0, 1]' : 0.157954}
{'[6, 1, 0, 4, 6, 5, 1, 0, 4, 14, 0, 12, 0, 1, 1, 0, 0, 1]' : 0.157882}
{'[6, 1, 0, 4, 6, 5, 1, 0, 4, 14, 0, 12, 0, 1, 1, 0, 0, 1]' : 0.157824}
{'[6, 1, 0, 4, 6, 5, 1, 0, 4, 14, 0, 12, 0, 1, 1, 0, 0, 1]' : 0.157641}
{'[6, 1, 0, 4, 6, 5, 1, 0, 4, 14, 0, 12, 0, 1, 1, 0, 0, 1]' : 0.157713}
{'[6, 1, 0, 4, 6, 5, 1, 0, 4, 14, 0, 12, 0, 1, 1, 0, 0, 1]' : 0.157705}
{'[6, 1, 0, 4, 6, 5, 1, 0, 4, 14, 0, 12, 0, 1, 1, 0, 0, 1]' : 0.15768}
{'[6, 1, 0, 4, 6, 5, 1, 0, 4, 14, 0, 12, 0, 1, 1, 0, 0, 1]' : 0.157616}
{'[6, 1, 0, 4, 6, 5, 1, 0, 4, 14, 0, 12, 0, 1, 1, 0, 0, 1]' : 0.157664}
{'[6, 1, 0, 4, 6, 5, 1, 0, 4, 14, 0, 12, 0, 1, 1, 0, 0, 1]' : 0.157642}
{'[6, 1, 0, 4, 6, 5, 1, 0, 4, 14, 0, 12, 0, 1, 1, 0, 0, 1]' : 0.157748}
{'[6, 1, 0, 4, 6, 5, 1, 0, 4, 14, 0, 12, 0, 1, 1, 0, 0, 1]' : 0.157557}

out:
 ["{'[6, 1, 0, 4, 6, 5, 1, 0, 4, 14, 0, 12, 0, 1, 1, 0, 0, 1]' : 0.187975}", "{'[6, 1, 0, 4, 6, 5, 1, 0, 4, 14, 0, 12, 0, 1, 1, 0, 0, 1]' : 0.186863}", "{'[6, 1, 0, 4, 6, 5, 1, 0, 4, 14, 0, 12, 0, 1, 1, 0, 0, 1]' : 0.180466}", "{'[6, 1, 0, 4, 6, 5, 1, 0, 4, 14, 0, 12, 0, 1, 1, 0, 0, 1]' : 0.157864}", "{'[6, 1, 0, 4, 6, 5, 1, 0, 4, 14, 0, 12, 0, 1, 1, 0, 0, 1]' : 0.157545}", "{'[6, 1, 0, 4, 6, 5, 1, 0, 4, 14, 0, 12, 0, 1, 1, 0, 0, 1]' : 0.157942}", "{'[6, 1, 0, 4, 6, 5, 1, 0, 4, 14, 0, 12, 0, 1, 1, 0, 0, 1]' : 0.157706}", "{'[6, 1, 0, 4, 6, 5, 1, 0, 4, 14, 0, 12, 0, 1, 1, 0, 0, 1]' : 0.157506}", "{'[6, 1, 0, 4, 6, 5, 1, 0, 4, 14, 0, 12, 0, 1, 1, 0, 0, 1]' : 0.157735}", "{'[6, 1, 0, 4, 6, 5, 1, 0, 4, 14, 0, 12, 0, 1, 1, 0, 0, 1]' : 0.157646}", "{'[6, 1, 0, 4, 6, 5, 1, 0, 4, 14, 0, 12, 0, 1, 1, 0, 0, 1]' : 0.157395}", "{'[6, 1, 0, 4, 6, 5, 1, 0, 4, 14, 0, 12, 0, 1, 1, 0, 0, 1]' : 0.157595}", "{'[6, 1, 0, 4, 6, 5, 1, 0, 4, 14, 0, 12, 0, 1, 1, 0, 0, 1]' : 0.157842}", "{'[6, 1, 0, 4, 6, 5, 1, 0, 4, 14, 0, 12, 0, 1, 1, 0, 0, 1]' : 0.157899}", "{'[6, 1, 0, 4, 6, 5, 1, 0, 4, 14, 0, 12, 0, 1, 1, 0, 0, 1]' : 0.157584}", "{'[6, 1, 0, 4, 6, 5, 1, 0, 4, 14, 0, 12, 0, 1, 1, 0, 0, 1]' : 0.157531}", "{'[6, 1, 0, 4, 6, 5, 1, 0, 4, 14, 0, 12, 0, 1, 1, 0, 0, 1]' : 0.157472}", "{'[6, 1, 0, 4, 6, 5, 1, 0, 4, 14, 0, 12, 0, 1, 1, 0, 0, 1]' : 0.157742}", "{'[6, 1, 0, 4, 6, 5, 1, 0, 4, 14, 0, 12, 0, 1, 1, 0, 0, 1]' : 0.157954}", "{'[6, 1, 0, 4, 6, 5, 1, 0, 4, 14, 0, 12, 0, 1, 1, 0, 0, 1]' : 0.157882}", "{'[6, 1, 0, 4, 6, 5, 1, 0, 4, 14, 0, 12, 0, 1, 1, 0, 0, 1]' : 0.157824}", "{'[6, 1, 0, 4, 6, 5, 1, 0, 4, 14, 0, 12, 0, 1, 1, 0, 0, 1]' : 0.157641}", "{'[6, 1, 0, 4, 6, 5, 1, 0, 4, 14, 0, 12, 0, 1, 1, 0, 0, 1]' : 0.157713}", "{'[6, 1, 0, 4, 6, 5, 1, 0, 4, 14, 0, 12, 0, 1, 1, 0, 0, 1]' : 0.157705}", "{'[6, 1, 0, 4, 6, 5, 1, 0, 4, 14, 0, 12, 0, 1, 1, 0, 0, 1]' : 0.15768}", "{'[6, 1, 0, 4, 6, 5, 1, 0, 4, 14, 0, 12, 0, 1, 1, 0, 0, 1]' : 0.157616}", "{'[6, 1, 0, 4, 6, 5, 1, 0, 4, 14, 0, 12, 0, 1, 1, 0, 0, 1]' : 0.157664}", "{'[6, 1, 0, 4, 6, 5, 1, 0, 4, 14, 0, 12, 0, 1, 1, 0, 0, 1]' : 0.157642}", "{'[6, 1, 0, 4, 6, 5, 1, 0, 4, 14, 0, 12, 0, 1, 1, 0, 0, 1]' : 0.157748}", "{'[6, 1, 0, 4, 6, 5, 1, 0, 4, 14, 0, 12, 0, 1, 1, 0, 0, 1]' : 0.157557}"]
returning from 'run': {'[6, 1, 0, 4, 6, 5, 1, 0, 4, 14, 0, 12, 0, 1, 1, 0, 0, 1]': ([0.187975, 0.186863, 0.180466, 0.157864, 0.157545, 0.157942, 0.157706, 0.157506, 0.157735, 0.157646, 0.157395, 0.157595, 0.157842, 0.157899, 0.157584, 0.157531, 0.157472, 0.157742, 0.157954, 0.157882, 0.157824, 0.157641, 0.157713, 0.157705, 0.15768, 0.157616, 0.157664, 0.157642, 0.157748, 0.157557], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 1, 0, 4, 6, 5, 1, 0, 4, 14, 0, 12, 0, 1, 1, 0, 0, 1]': ([0.187975, 0.186863, 0.180466, 0.157864, 0.157545, 0.157942, 0.157706, 0.157506, 0.157735, 0.157646, 0.157395, 0.157595, 0.157842, 0.157899, 0.157584, 0.157531, 0.157472, 0.157742, 0.157954, 0.157882, 0.157824, 0.157641, 0.157713, 0.157705, 0.15768, 0.157616, 0.157664, 0.157642, 0.157748, 0.157557], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	61
        Max loop nest depth: 	5
        Additions: 		1177
        Multiplications: 	450
        Divisions: 		0
        Logical: 		0
        Reads: 			2563
        Writes: 		511
        Comparisons:		61
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest19.exe __orio_perftest19.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest19.exe  
Program Test Output: 
{'[5, 0, 4, 6, 0, 0, 1, 1, 0, 23, 0, 28, 0, 0, 1, 1, 1, 1]' : 0.201619}
{'[5, 0, 4, 6, 0, 0, 1, 1, 0, 23, 0, 28, 0, 0, 1, 1, 1, 1]' : 0.201562}
{'[5, 0, 4, 6, 0, 0, 1, 1, 0, 23, 0, 28, 0, 0, 1, 1, 1, 1]' : 0.184376}
{'[5, 0, 4, 6, 0, 0, 1, 1, 0, 23, 0, 28, 0, 0, 1, 1, 1, 1]' : 0.174882}
{'[5, 0, 4, 6, 0, 0, 1, 1, 0, 23, 0, 28, 0, 0, 1, 1, 1, 1]' : 0.175216}
{'[5, 0, 4, 6, 0, 0, 1, 1, 0, 23, 0, 28, 0, 0, 1, 1, 1, 1]' : 0.175016}
{'[5, 0, 4, 6, 0, 0, 1, 1, 0, 23, 0, 28, 0, 0, 1, 1, 1, 1]' : 0.175144}
{'[5, 0, 4, 6, 0, 0, 1, 1, 0, 23, 0, 28, 0, 0, 1, 1, 1, 1]' : 0.175202}
{'[5, 0, 4, 6, 0, 0, 1, 1, 0, 23, 0, 28, 0, 0, 1, 1, 1, 1]' : 0.175099}
{'[5, 0, 4, 6, 0, 0, 1, 1, 0, 23, 0, 28, 0, 0, 1, 1, 1, 1]' : 0.174795}
{'[5, 0, 4, 6, 0, 0, 1, 1, 0, 23, 0, 28, 0, 0, 1, 1, 1, 1]' : 0.174767}
{'[5, 0, 4, 6, 0, 0, 1, 1, 0, 23, 0, 28, 0, 0, 1, 1, 1, 1]' : 0.175514}
{'[5, 0, 4, 6, 0, 0, 1, 1, 0, 23, 0, 28, 0, 0, 1, 1, 1, 1]' : 0.175246}
{'[5, 0, 4, 6, 0, 0, 1, 1, 0, 23, 0, 28, 0, 0, 1, 1, 1, 1]' : 0.175261}
{'[5, 0, 4, 6, 0, 0, 1, 1, 0, 23, 0, 28, 0, 0, 1, 1, 1, 1]' : 0.174957}
{'[5, 0, 4, 6, 0, 0, 1, 1, 0, 23, 0, 28, 0, 0, 1, 1, 1, 1]' : 0.174949}
{'[5, 0, 4, 6, 0, 0, 1, 1, 0, 23, 0, 28, 0, 0, 1, 1, 1, 1]' : 0.175006}
{'[5, 0, 4, 6, 0, 0, 1, 1, 0, 23, 0, 28, 0, 0, 1, 1, 1, 1]' : 0.17521}
{'[5, 0, 4, 6, 0, 0, 1, 1, 0, 23, 0, 28, 0, 0, 1, 1, 1, 1]' : 0.174996}
{'[5, 0, 4, 6, 0, 0, 1, 1, 0, 23, 0, 28, 0, 0, 1, 1, 1, 1]' : 0.175797}
{'[5, 0, 4, 6, 0, 0, 1, 1, 0, 23, 0, 28, 0, 0, 1, 1, 1, 1]' : 0.175004}
{'[5, 0, 4, 6, 0, 0, 1, 1, 0, 23, 0, 28, 0, 0, 1, 1, 1, 1]' : 0.175318}
{'[5, 0, 4, 6, 0, 0, 1, 1, 0, 23, 0, 28, 0, 0, 1, 1, 1, 1]' : 0.175295}
{'[5, 0, 4, 6, 0, 0, 1, 1, 0, 23, 0, 28, 0, 0, 1, 1, 1, 1]' : 0.175137}
{'[5, 0, 4, 6, 0, 0, 1, 1, 0, 23, 0, 28, 0, 0, 1, 1, 1, 1]' : 0.175184}
{'[5, 0, 4, 6, 0, 0, 1, 1, 0, 23, 0, 28, 0, 0, 1, 1, 1, 1]' : 0.175629}
{'[5, 0, 4, 6, 0, 0, 1, 1, 0, 23, 0, 28, 0, 0, 1, 1, 1, 1]' : 0.174957}
{'[5, 0, 4, 6, 0, 0, 1, 1, 0, 23, 0, 28, 0, 0, 1, 1, 1, 1]' : 0.175015}
{'[5, 0, 4, 6, 0, 0, 1, 1, 0, 23, 0, 28, 0, 0, 1, 1, 1, 1]' : 0.17517}
{'[5, 0, 4, 6, 0, 0, 1, 1, 0, 23, 0, 28, 0, 0, 1, 1, 1, 1]' : 0.174976}

out:
 ["{'[5, 0, 4, 6, 0, 0, 1, 1, 0, 23, 0, 28, 0, 0, 1, 1, 1, 1]' : 0.201619}", "{'[5, 0, 4, 6, 0, 0, 1, 1, 0, 23, 0, 28, 0, 0, 1, 1, 1, 1]' : 0.201562}", "{'[5, 0, 4, 6, 0, 0, 1, 1, 0, 23, 0, 28, 0, 0, 1, 1, 1, 1]' : 0.184376}", "{'[5, 0, 4, 6, 0, 0, 1, 1, 0, 23, 0, 28, 0, 0, 1, 1, 1, 1]' : 0.174882}", "{'[5, 0, 4, 6, 0, 0, 1, 1, 0, 23, 0, 28, 0, 0, 1, 1, 1, 1]' : 0.175216}", "{'[5, 0, 4, 6, 0, 0, 1, 1, 0, 23, 0, 28, 0, 0, 1, 1, 1, 1]' : 0.175016}", "{'[5, 0, 4, 6, 0, 0, 1, 1, 0, 23, 0, 28, 0, 0, 1, 1, 1, 1]' : 0.175144}", "{'[5, 0, 4, 6, 0, 0, 1, 1, 0, 23, 0, 28, 0, 0, 1, 1, 1, 1]' : 0.175202}", "{'[5, 0, 4, 6, 0, 0, 1, 1, 0, 23, 0, 28, 0, 0, 1, 1, 1, 1]' : 0.175099}", "{'[5, 0, 4, 6, 0, 0, 1, 1, 0, 23, 0, 28, 0, 0, 1, 1, 1, 1]' : 0.174795}", "{'[5, 0, 4, 6, 0, 0, 1, 1, 0, 23, 0, 28, 0, 0, 1, 1, 1, 1]' : 0.174767}", "{'[5, 0, 4, 6, 0, 0, 1, 1, 0, 23, 0, 28, 0, 0, 1, 1, 1, 1]' : 0.175514}", "{'[5, 0, 4, 6, 0, 0, 1, 1, 0, 23, 0, 28, 0, 0, 1, 1, 1, 1]' : 0.175246}", "{'[5, 0, 4, 6, 0, 0, 1, 1, 0, 23, 0, 28, 0, 0, 1, 1, 1, 1]' : 0.175261}", "{'[5, 0, 4, 6, 0, 0, 1, 1, 0, 23, 0, 28, 0, 0, 1, 1, 1, 1]' : 0.174957}", "{'[5, 0, 4, 6, 0, 0, 1, 1, 0, 23, 0, 28, 0, 0, 1, 1, 1, 1]' : 0.174949}", "{'[5, 0, 4, 6, 0, 0, 1, 1, 0, 23, 0, 28, 0, 0, 1, 1, 1, 1]' : 0.175006}", "{'[5, 0, 4, 6, 0, 0, 1, 1, 0, 23, 0, 28, 0, 0, 1, 1, 1, 1]' : 0.17521}", "{'[5, 0, 4, 6, 0, 0, 1, 1, 0, 23, 0, 28, 0, 0, 1, 1, 1, 1]' : 0.174996}", "{'[5, 0, 4, 6, 0, 0, 1, 1, 0, 23, 0, 28, 0, 0, 1, 1, 1, 1]' : 0.175797}", "{'[5, 0, 4, 6, 0, 0, 1, 1, 0, 23, 0, 28, 0, 0, 1, 1, 1, 1]' : 0.175004}", "{'[5, 0, 4, 6, 0, 0, 1, 1, 0, 23, 0, 28, 0, 0, 1, 1, 1, 1]' : 0.175318}", "{'[5, 0, 4, 6, 0, 0, 1, 1, 0, 23, 0, 28, 0, 0, 1, 1, 1, 1]' : 0.175295}", "{'[5, 0, 4, 6, 0, 0, 1, 1, 0, 23, 0, 28, 0, 0, 1, 1, 1, 1]' : 0.175137}", "{'[5, 0, 4, 6, 0, 0, 1, 1, 0, 23, 0, 28, 0, 0, 1, 1, 1, 1]' : 0.175184}", "{'[5, 0, 4, 6, 0, 0, 1, 1, 0, 23, 0, 28, 0, 0, 1, 1, 1, 1]' : 0.175629}", "{'[5, 0, 4, 6, 0, 0, 1, 1, 0, 23, 0, 28, 0, 0, 1, 1, 1, 1]' : 0.174957}", "{'[5, 0, 4, 6, 0, 0, 1, 1, 0, 23, 0, 28, 0, 0, 1, 1, 1, 1]' : 0.175015}", "{'[5, 0, 4, 6, 0, 0, 1, 1, 0, 23, 0, 28, 0, 0, 1, 1, 1, 1]' : 0.17517}", "{'[5, 0, 4, 6, 0, 0, 1, 1, 0, 23, 0, 28, 0, 0, 1, 1, 1, 1]' : 0.174976}"]
returning from 'run': {'[5, 0, 4, 6, 0, 0, 1, 1, 0, 23, 0, 28, 0, 0, 1, 1, 1, 1]': ([0.201619, 0.201562, 0.184376, 0.174882, 0.175216, 0.175016, 0.175144, 0.175202, 0.175099, 0.174795, 0.174767, 0.175514, 0.175246, 0.175261, 0.174957, 0.174949, 0.175006, 0.17521, 0.174996, 0.175797, 0.175004, 0.175318, 0.175295, 0.175137, 0.175184, 0.175629, 0.174957, 0.175015, 0.17517, 0.174976], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 0, 4, 6, 0, 0, 1, 1, 0, 23, 0, 28, 0, 0, 1, 1, 1, 1]': ([0.201619, 0.201562, 0.184376, 0.174882, 0.175216, 0.175016, 0.175144, 0.175202, 0.175099, 0.174795, 0.174767, 0.175514, 0.175246, 0.175261, 0.174957, 0.174949, 0.175006, 0.17521, 0.174996, 0.175797, 0.175004, 0.175318, 0.175295, 0.175137, 0.175184, 0.175629, 0.174957, 0.175015, 0.17517, 0.174976], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		372
        Multiplications: 	122
        Divisions: 		0
        Logical: 		0
        Reads: 			819
        Writes: 		178
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest20.exe __orio_perftest20.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest20.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest20.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest20.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest20.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = kkk
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	5
        Additions: 		2924
        Multiplications: 	1444
        Divisions: 		0
        Logical: 		0
        Reads: 			5529
        Writes: 		880
        Comparisons:		18
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest21.exe __orio_perftest21.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest21.exe  
Program Test Output: 
{'[6, 2, 3, 0, 1, 1, 0, 0, 0, 17, 0, 3, 0, 2, 0, 1, 1, 1]' : 0.12767}
{'[6, 2, 3, 0, 1, 1, 0, 0, 0, 17, 0, 3, 0, 2, 0, 1, 1, 1]' : 0.126458}
{'[6, 2, 3, 0, 1, 1, 0, 0, 0, 17, 0, 3, 0, 2, 0, 1, 1, 1]' : 0.126091}
{'[6, 2, 3, 0, 1, 1, 0, 0, 0, 17, 0, 3, 0, 2, 0, 1, 1, 1]' : 0.123511}
{'[6, 2, 3, 0, 1, 1, 0, 0, 0, 17, 0, 3, 0, 2, 0, 1, 1, 1]' : 0.106993}
{'[6, 2, 3, 0, 1, 1, 0, 0, 0, 17, 0, 3, 0, 2, 0, 1, 1, 1]' : 0.106968}
{'[6, 2, 3, 0, 1, 1, 0, 0, 0, 17, 0, 3, 0, 2, 0, 1, 1, 1]' : 0.106823}
{'[6, 2, 3, 0, 1, 1, 0, 0, 0, 17, 0, 3, 0, 2, 0, 1, 1, 1]' : 0.106805}
{'[6, 2, 3, 0, 1, 1, 0, 0, 0, 17, 0, 3, 0, 2, 0, 1, 1, 1]' : 0.106942}
{'[6, 2, 3, 0, 1, 1, 0, 0, 0, 17, 0, 3, 0, 2, 0, 1, 1, 1]' : 0.106894}
{'[6, 2, 3, 0, 1, 1, 0, 0, 0, 17, 0, 3, 0, 2, 0, 1, 1, 1]' : 0.107006}
{'[6, 2, 3, 0, 1, 1, 0, 0, 0, 17, 0, 3, 0, 2, 0, 1, 1, 1]' : 0.106929}
{'[6, 2, 3, 0, 1, 1, 0, 0, 0, 17, 0, 3, 0, 2, 0, 1, 1, 1]' : 0.107142}
{'[6, 2, 3, 0, 1, 1, 0, 0, 0, 17, 0, 3, 0, 2, 0, 1, 1, 1]' : 0.107338}
{'[6, 2, 3, 0, 1, 1, 0, 0, 0, 17, 0, 3, 0, 2, 0, 1, 1, 1]' : 0.107176}
{'[6, 2, 3, 0, 1, 1, 0, 0, 0, 17, 0, 3, 0, 2, 0, 1, 1, 1]' : 0.106849}
{'[6, 2, 3, 0, 1, 1, 0, 0, 0, 17, 0, 3, 0, 2, 0, 1, 1, 1]' : 0.106802}
{'[6, 2, 3, 0, 1, 1, 0, 0, 0, 17, 0, 3, 0, 2, 0, 1, 1, 1]' : 0.107343}
{'[6, 2, 3, 0, 1, 1, 0, 0, 0, 17, 0, 3, 0, 2, 0, 1, 1, 1]' : 0.107033}
{'[6, 2, 3, 0, 1, 1, 0, 0, 0, 17, 0, 3, 0, 2, 0, 1, 1, 1]' : 0.107007}
{'[6, 2, 3, 0, 1, 1, 0, 0, 0, 17, 0, 3, 0, 2, 0, 1, 1, 1]' : 0.106867}
{'[6, 2, 3, 0, 1, 1, 0, 0, 0, 17, 0, 3, 0, 2, 0, 1, 1, 1]' : 0.106847}
{'[6, 2, 3, 0, 1, 1, 0, 0, 0, 17, 0, 3, 0, 2, 0, 1, 1, 1]' : 0.106971}
{'[6, 2, 3, 0, 1, 1, 0, 0, 0, 17, 0, 3, 0, 2, 0, 1, 1, 1]' : 0.107038}
{'[6, 2, 3, 0, 1, 1, 0, 0, 0, 17, 0, 3, 0, 2, 0, 1, 1, 1]' : 0.107224}
{'[6, 2, 3, 0, 1, 1, 0, 0, 0, 17, 0, 3, 0, 2, 0, 1, 1, 1]' : 0.106966}
{'[6, 2, 3, 0, 1, 1, 0, 0, 0, 17, 0, 3, 0, 2, 0, 1, 1, 1]' : 0.106881}
{'[6, 2, 3, 0, 1, 1, 0, 0, 0, 17, 0, 3, 0, 2, 0, 1, 1, 1]' : 0.107059}
{'[6, 2, 3, 0, 1, 1, 0, 0, 0, 17, 0, 3, 0, 2, 0, 1, 1, 1]' : 0.107143}
{'[6, 2, 3, 0, 1, 1, 0, 0, 0, 17, 0, 3, 0, 2, 0, 1, 1, 1]' : 0.10704}

out:
 ["{'[6, 2, 3, 0, 1, 1, 0, 0, 0, 17, 0, 3, 0, 2, 0, 1, 1, 1]' : 0.12767}", "{'[6, 2, 3, 0, 1, 1, 0, 0, 0, 17, 0, 3, 0, 2, 0, 1, 1, 1]' : 0.126458}", "{'[6, 2, 3, 0, 1, 1, 0, 0, 0, 17, 0, 3, 0, 2, 0, 1, 1, 1]' : 0.126091}", "{'[6, 2, 3, 0, 1, 1, 0, 0, 0, 17, 0, 3, 0, 2, 0, 1, 1, 1]' : 0.123511}", "{'[6, 2, 3, 0, 1, 1, 0, 0, 0, 17, 0, 3, 0, 2, 0, 1, 1, 1]' : 0.106993}", "{'[6, 2, 3, 0, 1, 1, 0, 0, 0, 17, 0, 3, 0, 2, 0, 1, 1, 1]' : 0.106968}", "{'[6, 2, 3, 0, 1, 1, 0, 0, 0, 17, 0, 3, 0, 2, 0, 1, 1, 1]' : 0.106823}", "{'[6, 2, 3, 0, 1, 1, 0, 0, 0, 17, 0, 3, 0, 2, 0, 1, 1, 1]' : 0.106805}", "{'[6, 2, 3, 0, 1, 1, 0, 0, 0, 17, 0, 3, 0, 2, 0, 1, 1, 1]' : 0.106942}", "{'[6, 2, 3, 0, 1, 1, 0, 0, 0, 17, 0, 3, 0, 2, 0, 1, 1, 1]' : 0.106894}", "{'[6, 2, 3, 0, 1, 1, 0, 0, 0, 17, 0, 3, 0, 2, 0, 1, 1, 1]' : 0.107006}", "{'[6, 2, 3, 0, 1, 1, 0, 0, 0, 17, 0, 3, 0, 2, 0, 1, 1, 1]' : 0.106929}", "{'[6, 2, 3, 0, 1, 1, 0, 0, 0, 17, 0, 3, 0, 2, 0, 1, 1, 1]' : 0.107142}", "{'[6, 2, 3, 0, 1, 1, 0, 0, 0, 17, 0, 3, 0, 2, 0, 1, 1, 1]' : 0.107338}", "{'[6, 2, 3, 0, 1, 1, 0, 0, 0, 17, 0, 3, 0, 2, 0, 1, 1, 1]' : 0.107176}", "{'[6, 2, 3, 0, 1, 1, 0, 0, 0, 17, 0, 3, 0, 2, 0, 1, 1, 1]' : 0.106849}", "{'[6, 2, 3, 0, 1, 1, 0, 0, 0, 17, 0, 3, 0, 2, 0, 1, 1, 1]' : 0.106802}", "{'[6, 2, 3, 0, 1, 1, 0, 0, 0, 17, 0, 3, 0, 2, 0, 1, 1, 1]' : 0.107343}", "{'[6, 2, 3, 0, 1, 1, 0, 0, 0, 17, 0, 3, 0, 2, 0, 1, 1, 1]' : 0.107033}", "{'[6, 2, 3, 0, 1, 1, 0, 0, 0, 17, 0, 3, 0, 2, 0, 1, 1, 1]' : 0.107007}", "{'[6, 2, 3, 0, 1, 1, 0, 0, 0, 17, 0, 3, 0, 2, 0, 1, 1, 1]' : 0.106867}", "{'[6, 2, 3, 0, 1, 1, 0, 0, 0, 17, 0, 3, 0, 2, 0, 1, 1, 1]' : 0.106847}", "{'[6, 2, 3, 0, 1, 1, 0, 0, 0, 17, 0, 3, 0, 2, 0, 1, 1, 1]' : 0.106971}", "{'[6, 2, 3, 0, 1, 1, 0, 0, 0, 17, 0, 3, 0, 2, 0, 1, 1, 1]' : 0.107038}", "{'[6, 2, 3, 0, 1, 1, 0, 0, 0, 17, 0, 3, 0, 2, 0, 1, 1, 1]' : 0.107224}", "{'[6, 2, 3, 0, 1, 1, 0, 0, 0, 17, 0, 3, 0, 2, 0, 1, 1, 1]' : 0.106966}", "{'[6, 2, 3, 0, 1, 1, 0, 0, 0, 17, 0, 3, 0, 2, 0, 1, 1, 1]' : 0.106881}", "{'[6, 2, 3, 0, 1, 1, 0, 0, 0, 17, 0, 3, 0, 2, 0, 1, 1, 1]' : 0.107059}", "{'[6, 2, 3, 0, 1, 1, 0, 0, 0, 17, 0, 3, 0, 2, 0, 1, 1, 1]' : 0.107143}", "{'[6, 2, 3, 0, 1, 1, 0, 0, 0, 17, 0, 3, 0, 2, 0, 1, 1, 1]' : 0.10704}"]
returning from 'run': {'[6, 2, 3, 0, 1, 1, 0, 0, 0, 17, 0, 3, 0, 2, 0, 1, 1, 1]': ([0.12767, 0.126458, 0.126091, 0.123511, 0.106993, 0.106968, 0.106823, 0.106805, 0.106942, 0.106894, 0.107006, 0.106929, 0.107142, 0.107338, 0.107176, 0.106849, 0.106802, 0.107343, 0.107033, 0.107007, 0.106867, 0.106847, 0.106971, 0.107038, 0.107224, 0.106966, 0.106881, 0.107059, 0.107143, 0.10704], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 2, 3, 0, 1, 1, 0, 0, 0, 17, 0, 3, 0, 2, 0, 1, 1, 1]': ([0.12767, 0.126458, 0.126091, 0.123511, 0.106993, 0.106968, 0.106823, 0.106805, 0.106942, 0.106894, 0.107006, 0.106929, 0.107142, 0.107338, 0.107176, 0.106849, 0.106802, 0.107343, 0.107033, 0.107007, 0.106867, 0.106847, 0.106971, 0.107038, 0.107224, 0.106966, 0.106881, 0.107059, 0.107143, 0.10704], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	42
        Max loop nest depth: 	5
        Additions: 		1169
        Multiplications: 	500
        Divisions: 		0
        Logical: 		0
        Reads: 			2524
        Writes: 		508
        Comparisons:		42
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest22.exe __orio_perftest22.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest22.exe  
Program Test Output: 
{'[2, 3, 6, 0, 3, 0, 1, 0, 29, 23, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.17848}
{'[2, 3, 6, 0, 3, 0, 1, 0, 29, 23, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.178126}
{'[2, 3, 6, 0, 3, 0, 1, 0, 29, 23, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.158534}
{'[2, 3, 6, 0, 3, 0, 1, 0, 29, 23, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.155898}
{'[2, 3, 6, 0, 3, 0, 1, 0, 29, 23, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.156478}
{'[2, 3, 6, 0, 3, 0, 1, 0, 29, 23, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.156489}
{'[2, 3, 6, 0, 3, 0, 1, 0, 29, 23, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.15952}
{'[2, 3, 6, 0, 3, 0, 1, 0, 29, 23, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.161108}
{'[2, 3, 6, 0, 3, 0, 1, 0, 29, 23, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.161176}
{'[2, 3, 6, 0, 3, 0, 1, 0, 29, 23, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.161147}
{'[2, 3, 6, 0, 3, 0, 1, 0, 29, 23, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.161129}
{'[2, 3, 6, 0, 3, 0, 1, 0, 29, 23, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.161165}
{'[2, 3, 6, 0, 3, 0, 1, 0, 29, 23, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.160612}
{'[2, 3, 6, 0, 3, 0, 1, 0, 29, 23, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.161071}
{'[2, 3, 6, 0, 3, 0, 1, 0, 29, 23, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.161213}
{'[2, 3, 6, 0, 3, 0, 1, 0, 29, 23, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.159812}
{'[2, 3, 6, 0, 3, 0, 1, 0, 29, 23, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.161146}
{'[2, 3, 6, 0, 3, 0, 1, 0, 29, 23, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.161114}
{'[2, 3, 6, 0, 3, 0, 1, 0, 29, 23, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.161229}
{'[2, 3, 6, 0, 3, 0, 1, 0, 29, 23, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.161249}
{'[2, 3, 6, 0, 3, 0, 1, 0, 29, 23, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.16111}
{'[2, 3, 6, 0, 3, 0, 1, 0, 29, 23, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.160327}
{'[2, 3, 6, 0, 3, 0, 1, 0, 29, 23, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.156503}
{'[2, 3, 6, 0, 3, 0, 1, 0, 29, 23, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.156346}
{'[2, 3, 6, 0, 3, 0, 1, 0, 29, 23, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.156676}
{'[2, 3, 6, 0, 3, 0, 1, 0, 29, 23, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.160747}
{'[2, 3, 6, 0, 3, 0, 1, 0, 29, 23, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.161097}
{'[2, 3, 6, 0, 3, 0, 1, 0, 29, 23, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.161191}
{'[2, 3, 6, 0, 3, 0, 1, 0, 29, 23, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.161091}
{'[2, 3, 6, 0, 3, 0, 1, 0, 29, 23, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.161259}

out:
 ["{'[2, 3, 6, 0, 3, 0, 1, 0, 29, 23, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.17848}", "{'[2, 3, 6, 0, 3, 0, 1, 0, 29, 23, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.178126}", "{'[2, 3, 6, 0, 3, 0, 1, 0, 29, 23, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.158534}", "{'[2, 3, 6, 0, 3, 0, 1, 0, 29, 23, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.155898}", "{'[2, 3, 6, 0, 3, 0, 1, 0, 29, 23, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.156478}", "{'[2, 3, 6, 0, 3, 0, 1, 0, 29, 23, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.156489}", "{'[2, 3, 6, 0, 3, 0, 1, 0, 29, 23, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.15952}", "{'[2, 3, 6, 0, 3, 0, 1, 0, 29, 23, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.161108}", "{'[2, 3, 6, 0, 3, 0, 1, 0, 29, 23, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.161176}", "{'[2, 3, 6, 0, 3, 0, 1, 0, 29, 23, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.161147}", "{'[2, 3, 6, 0, 3, 0, 1, 0, 29, 23, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.161129}", "{'[2, 3, 6, 0, 3, 0, 1, 0, 29, 23, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.161165}", "{'[2, 3, 6, 0, 3, 0, 1, 0, 29, 23, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.160612}", "{'[2, 3, 6, 0, 3, 0, 1, 0, 29, 23, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.161071}", "{'[2, 3, 6, 0, 3, 0, 1, 0, 29, 23, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.161213}", "{'[2, 3, 6, 0, 3, 0, 1, 0, 29, 23, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.159812}", "{'[2, 3, 6, 0, 3, 0, 1, 0, 29, 23, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.161146}", "{'[2, 3, 6, 0, 3, 0, 1, 0, 29, 23, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.161114}", "{'[2, 3, 6, 0, 3, 0, 1, 0, 29, 23, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.161229}", "{'[2, 3, 6, 0, 3, 0, 1, 0, 29, 23, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.161249}", "{'[2, 3, 6, 0, 3, 0, 1, 0, 29, 23, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.16111}", "{'[2, 3, 6, 0, 3, 0, 1, 0, 29, 23, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.160327}", "{'[2, 3, 6, 0, 3, 0, 1, 0, 29, 23, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.156503}", "{'[2, 3, 6, 0, 3, 0, 1, 0, 29, 23, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.156346}", "{'[2, 3, 6, 0, 3, 0, 1, 0, 29, 23, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.156676}", "{'[2, 3, 6, 0, 3, 0, 1, 0, 29, 23, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.160747}", "{'[2, 3, 6, 0, 3, 0, 1, 0, 29, 23, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.161097}", "{'[2, 3, 6, 0, 3, 0, 1, 0, 29, 23, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.161191}", "{'[2, 3, 6, 0, 3, 0, 1, 0, 29, 23, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.161091}", "{'[2, 3, 6, 0, 3, 0, 1, 0, 29, 23, 0, 0, 0, 0, 1, 1, 0, 1]' : 0.161259}"]
returning from 'run': {'[2, 3, 6, 0, 3, 0, 1, 0, 29, 23, 0, 0, 0, 0, 1, 1, 0, 1]': ([0.17848, 0.178126, 0.158534, 0.155898, 0.156478, 0.156489, 0.15952, 0.161108, 0.161176, 0.161147, 0.161129, 0.161165, 0.160612, 0.161071, 0.161213, 0.159812, 0.161146, 0.161114, 0.161229, 0.161249, 0.16111, 0.160327, 0.156503, 0.156346, 0.156676, 0.160747, 0.161097, 0.161191, 0.161091, 0.161259], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 3, 6, 0, 3, 0, 1, 0, 29, 23, 0, 0, 0, 0, 1, 1, 0, 1]': ([0.17848, 0.178126, 0.158534, 0.155898, 0.156478, 0.156489, 0.15952, 0.161108, 0.161176, 0.161147, 0.161129, 0.161165, 0.160612, 0.161071, 0.161213, 0.159812, 0.161146, 0.161114, 0.161229, 0.161249, 0.16111, 0.160327, 0.156503, 0.156346, 0.156676, 0.160747, 0.161097, 0.161191, 0.161091, 0.161259], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	57
        Max loop nest depth: 	4
        Additions: 		3423
        Multiplications: 	966
        Divisions: 		0
        Logical: 		0
        Reads: 			5503
        Writes: 		696
        Comparisons:		57
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest23.exe __orio_perftest23.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest23.exe  
Program Test Output: 
{'[1, 1, 3, 0, 0, 0, 0, 0, 4, 19, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.194329}
{'[1, 1, 3, 0, 0, 0, 0, 0, 4, 19, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.194309}
{'[1, 1, 3, 0, 0, 0, 0, 0, 4, 19, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.194043}
{'[1, 1, 3, 0, 0, 0, 0, 0, 4, 19, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.193949}
{'[1, 1, 3, 0, 0, 0, 0, 0, 4, 19, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.194148}
{'[1, 1, 3, 0, 0, 0, 0, 0, 4, 19, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.194209}
{'[1, 1, 3, 0, 0, 0, 0, 0, 4, 19, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.194138}
{'[1, 1, 3, 0, 0, 0, 0, 0, 4, 19, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.194122}
{'[1, 1, 3, 0, 0, 0, 0, 0, 4, 19, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.194077}
{'[1, 1, 3, 0, 0, 0, 0, 0, 4, 19, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.193901}
{'[1, 1, 3, 0, 0, 0, 0, 0, 4, 19, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.194514}
{'[1, 1, 3, 0, 0, 0, 0, 0, 4, 19, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.194736}
{'[1, 1, 3, 0, 0, 0, 0, 0, 4, 19, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.194783}
{'[1, 1, 3, 0, 0, 0, 0, 0, 4, 19, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.194842}
{'[1, 1, 3, 0, 0, 0, 0, 0, 4, 19, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.194462}
{'[1, 1, 3, 0, 0, 0, 0, 0, 4, 19, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.194898}
{'[1, 1, 3, 0, 0, 0, 0, 0, 4, 19, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.194695}
{'[1, 1, 3, 0, 0, 0, 0, 0, 4, 19, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.194614}
{'[1, 1, 3, 0, 0, 0, 0, 0, 4, 19, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.194544}
{'[1, 1, 3, 0, 0, 0, 0, 0, 4, 19, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.194501}
{'[1, 1, 3, 0, 0, 0, 0, 0, 4, 19, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.194619}
{'[1, 1, 3, 0, 0, 0, 0, 0, 4, 19, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.194893}
{'[1, 1, 3, 0, 0, 0, 0, 0, 4, 19, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.194612}
{'[1, 1, 3, 0, 0, 0, 0, 0, 4, 19, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.195013}
{'[1, 1, 3, 0, 0, 0, 0, 0, 4, 19, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.194478}
{'[1, 1, 3, 0, 0, 0, 0, 0, 4, 19, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.194494}
{'[1, 1, 3, 0, 0, 0, 0, 0, 4, 19, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.195013}
{'[1, 1, 3, 0, 0, 0, 0, 0, 4, 19, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.194871}
{'[1, 1, 3, 0, 0, 0, 0, 0, 4, 19, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.194744}
{'[1, 1, 3, 0, 0, 0, 0, 0, 4, 19, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.194513}

out:
 ["{'[1, 1, 3, 0, 0, 0, 0, 0, 4, 19, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.194329}", "{'[1, 1, 3, 0, 0, 0, 0, 0, 4, 19, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.194309}", "{'[1, 1, 3, 0, 0, 0, 0, 0, 4, 19, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.194043}", "{'[1, 1, 3, 0, 0, 0, 0, 0, 4, 19, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.193949}", "{'[1, 1, 3, 0, 0, 0, 0, 0, 4, 19, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.194148}", "{'[1, 1, 3, 0, 0, 0, 0, 0, 4, 19, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.194209}", "{'[1, 1, 3, 0, 0, 0, 0, 0, 4, 19, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.194138}", "{'[1, 1, 3, 0, 0, 0, 0, 0, 4, 19, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.194122}", "{'[1, 1, 3, 0, 0, 0, 0, 0, 4, 19, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.194077}", "{'[1, 1, 3, 0, 0, 0, 0, 0, 4, 19, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.193901}", "{'[1, 1, 3, 0, 0, 0, 0, 0, 4, 19, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.194514}", "{'[1, 1, 3, 0, 0, 0, 0, 0, 4, 19, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.194736}", "{'[1, 1, 3, 0, 0, 0, 0, 0, 4, 19, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.194783}", "{'[1, 1, 3, 0, 0, 0, 0, 0, 4, 19, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.194842}", "{'[1, 1, 3, 0, 0, 0, 0, 0, 4, 19, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.194462}", "{'[1, 1, 3, 0, 0, 0, 0, 0, 4, 19, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.194898}", "{'[1, 1, 3, 0, 0, 0, 0, 0, 4, 19, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.194695}", "{'[1, 1, 3, 0, 0, 0, 0, 0, 4, 19, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.194614}", "{'[1, 1, 3, 0, 0, 0, 0, 0, 4, 19, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.194544}", "{'[1, 1, 3, 0, 0, 0, 0, 0, 4, 19, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.194501}", "{'[1, 1, 3, 0, 0, 0, 0, 0, 4, 19, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.194619}", "{'[1, 1, 3, 0, 0, 0, 0, 0, 4, 19, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.194893}", "{'[1, 1, 3, 0, 0, 0, 0, 0, 4, 19, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.194612}", "{'[1, 1, 3, 0, 0, 0, 0, 0, 4, 19, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.195013}", "{'[1, 1, 3, 0, 0, 0, 0, 0, 4, 19, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.194478}", "{'[1, 1, 3, 0, 0, 0, 0, 0, 4, 19, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.194494}", "{'[1, 1, 3, 0, 0, 0, 0, 0, 4, 19, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.195013}", "{'[1, 1, 3, 0, 0, 0, 0, 0, 4, 19, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.194871}", "{'[1, 1, 3, 0, 0, 0, 0, 0, 4, 19, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.194744}", "{'[1, 1, 3, 0, 0, 0, 0, 0, 4, 19, 4, 0, 0, 1, 1, 0, 1, 1]' : 0.194513}"]
returning from 'run': {'[1, 1, 3, 0, 0, 0, 0, 0, 4, 19, 4, 0, 0, 1, 1, 0, 1, 1]': ([0.194329, 0.194309, 0.194043, 0.193949, 0.194148, 0.194209, 0.194138, 0.194122, 0.194077, 0.193901, 0.194514, 0.194736, 0.194783, 0.194842, 0.194462, 0.194898, 0.194695, 0.194614, 0.194544, 0.194501, 0.194619, 0.194893, 0.194612, 0.195013, 0.194478, 0.194494, 0.195013, 0.194871, 0.194744, 0.194513], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 1, 3, 0, 0, 0, 0, 0, 4, 19, 4, 0, 0, 1, 1, 0, 1, 1]': ([0.194329, 0.194309, 0.194043, 0.193949, 0.194148, 0.194209, 0.194138, 0.194122, 0.194077, 0.193901, 0.194514, 0.194736, 0.194783, 0.194842, 0.194462, 0.194898, 0.194695, 0.194614, 0.194544, 0.194501, 0.194619, 0.194893, 0.194612, 0.195013, 0.194478, 0.194494, 0.195013, 0.194871, 0.194744, 0.194513], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	83
        Max loop nest depth: 	5
        Additions: 		3936
        Multiplications: 	880
        Divisions: 		0
        Logical: 		0
        Reads: 			6004
        Writes: 		679
        Comparisons:		83
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest24.exe __orio_perftest24.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest24.exe  
Program Test Output: 
{'[6, 5, 6, 0, 6, 0, 1, 1, 16, 10, 0, 12, 1, 1, 0, 0, 1, 0]' : 0.108214}
{'[6, 5, 6, 0, 6, 0, 1, 1, 16, 10, 0, 12, 1, 1, 0, 0, 1, 0]' : 0.108539}
{'[6, 5, 6, 0, 6, 0, 1, 1, 16, 10, 0, 12, 1, 1, 0, 0, 1, 0]' : 0.108035}
{'[6, 5, 6, 0, 6, 0, 1, 1, 16, 10, 0, 12, 1, 1, 0, 0, 1, 0]' : 0.108354}
{'[6, 5, 6, 0, 6, 0, 1, 1, 16, 10, 0, 12, 1, 1, 0, 0, 1, 0]' : 0.108284}
{'[6, 5, 6, 0, 6, 0, 1, 1, 16, 10, 0, 12, 1, 1, 0, 0, 1, 0]' : 0.108398}
{'[6, 5, 6, 0, 6, 0, 1, 1, 16, 10, 0, 12, 1, 1, 0, 0, 1, 0]' : 0.108254}
{'[6, 5, 6, 0, 6, 0, 1, 1, 16, 10, 0, 12, 1, 1, 0, 0, 1, 0]' : 0.108376}
{'[6, 5, 6, 0, 6, 0, 1, 1, 16, 10, 0, 12, 1, 1, 0, 0, 1, 0]' : 0.107944}
{'[6, 5, 6, 0, 6, 0, 1, 1, 16, 10, 0, 12, 1, 1, 0, 0, 1, 0]' : 0.108161}
{'[6, 5, 6, 0, 6, 0, 1, 1, 16, 10, 0, 12, 1, 1, 0, 0, 1, 0]' : 0.1081}
{'[6, 5, 6, 0, 6, 0, 1, 1, 16, 10, 0, 12, 1, 1, 0, 0, 1, 0]' : 0.108383}
{'[6, 5, 6, 0, 6, 0, 1, 1, 16, 10, 0, 12, 1, 1, 0, 0, 1, 0]' : 0.108087}
{'[6, 5, 6, 0, 6, 0, 1, 1, 16, 10, 0, 12, 1, 1, 0, 0, 1, 0]' : 0.108369}
{'[6, 5, 6, 0, 6, 0, 1, 1, 16, 10, 0, 12, 1, 1, 0, 0, 1, 0]' : 0.108045}
{'[6, 5, 6, 0, 6, 0, 1, 1, 16, 10, 0, 12, 1, 1, 0, 0, 1, 0]' : 0.108057}
{'[6, 5, 6, 0, 6, 0, 1, 1, 16, 10, 0, 12, 1, 1, 0, 0, 1, 0]' : 0.108205}
{'[6, 5, 6, 0, 6, 0, 1, 1, 16, 10, 0, 12, 1, 1, 0, 0, 1, 0]' : 0.108233}
{'[6, 5, 6, 0, 6, 0, 1, 1, 16, 10, 0, 12, 1, 1, 0, 0, 1, 0]' : 0.108379}
{'[6, 5, 6, 0, 6, 0, 1, 1, 16, 10, 0, 12, 1, 1, 0, 0, 1, 0]' : 0.1081}
{'[6, 5, 6, 0, 6, 0, 1, 1, 16, 10, 0, 12, 1, 1, 0, 0, 1, 0]' : 0.108161}
{'[6, 5, 6, 0, 6, 0, 1, 1, 16, 10, 0, 12, 1, 1, 0, 0, 1, 0]' : 0.108056}
{'[6, 5, 6, 0, 6, 0, 1, 1, 16, 10, 0, 12, 1, 1, 0, 0, 1, 0]' : 0.108535}
{'[6, 5, 6, 0, 6, 0, 1, 1, 16, 10, 0, 12, 1, 1, 0, 0, 1, 0]' : 0.108351}
{'[6, 5, 6, 0, 6, 0, 1, 1, 16, 10, 0, 12, 1, 1, 0, 0, 1, 0]' : 0.108044}
{'[6, 5, 6, 0, 6, 0, 1, 1, 16, 10, 0, 12, 1, 1, 0, 0, 1, 0]' : 0.108302}
{'[6, 5, 6, 0, 6, 0, 1, 1, 16, 10, 0, 12, 1, 1, 0, 0, 1, 0]' : 0.108183}
{'[6, 5, 6, 0, 6, 0, 1, 1, 16, 10, 0, 12, 1, 1, 0, 0, 1, 0]' : 0.108323}
{'[6, 5, 6, 0, 6, 0, 1, 1, 16, 10, 0, 12, 1, 1, 0, 0, 1, 0]' : 0.10819}
{'[6, 5, 6, 0, 6, 0, 1, 1, 16, 10, 0, 12, 1, 1, 0, 0, 1, 0]' : 0.108144}

out:
 ["{'[6, 5, 6, 0, 6, 0, 1, 1, 16, 10, 0, 12, 1, 1, 0, 0, 1, 0]' : 0.108214}", "{'[6, 5, 6, 0, 6, 0, 1, 1, 16, 10, 0, 12, 1, 1, 0, 0, 1, 0]' : 0.108539}", "{'[6, 5, 6, 0, 6, 0, 1, 1, 16, 10, 0, 12, 1, 1, 0, 0, 1, 0]' : 0.108035}", "{'[6, 5, 6, 0, 6, 0, 1, 1, 16, 10, 0, 12, 1, 1, 0, 0, 1, 0]' : 0.108354}", "{'[6, 5, 6, 0, 6, 0, 1, 1, 16, 10, 0, 12, 1, 1, 0, 0, 1, 0]' : 0.108284}", "{'[6, 5, 6, 0, 6, 0, 1, 1, 16, 10, 0, 12, 1, 1, 0, 0, 1, 0]' : 0.108398}", "{'[6, 5, 6, 0, 6, 0, 1, 1, 16, 10, 0, 12, 1, 1, 0, 0, 1, 0]' : 0.108254}", "{'[6, 5, 6, 0, 6, 0, 1, 1, 16, 10, 0, 12, 1, 1, 0, 0, 1, 0]' : 0.108376}", "{'[6, 5, 6, 0, 6, 0, 1, 1, 16, 10, 0, 12, 1, 1, 0, 0, 1, 0]' : 0.107944}", "{'[6, 5, 6, 0, 6, 0, 1, 1, 16, 10, 0, 12, 1, 1, 0, 0, 1, 0]' : 0.108161}", "{'[6, 5, 6, 0, 6, 0, 1, 1, 16, 10, 0, 12, 1, 1, 0, 0, 1, 0]' : 0.1081}", "{'[6, 5, 6, 0, 6, 0, 1, 1, 16, 10, 0, 12, 1, 1, 0, 0, 1, 0]' : 0.108383}", "{'[6, 5, 6, 0, 6, 0, 1, 1, 16, 10, 0, 12, 1, 1, 0, 0, 1, 0]' : 0.108087}", "{'[6, 5, 6, 0, 6, 0, 1, 1, 16, 10, 0, 12, 1, 1, 0, 0, 1, 0]' : 0.108369}", "{'[6, 5, 6, 0, 6, 0, 1, 1, 16, 10, 0, 12, 1, 1, 0, 0, 1, 0]' : 0.108045}", "{'[6, 5, 6, 0, 6, 0, 1, 1, 16, 10, 0, 12, 1, 1, 0, 0, 1, 0]' : 0.108057}", "{'[6, 5, 6, 0, 6, 0, 1, 1, 16, 10, 0, 12, 1, 1, 0, 0, 1, 0]' : 0.108205}", "{'[6, 5, 6, 0, 6, 0, 1, 1, 16, 10, 0, 12, 1, 1, 0, 0, 1, 0]' : 0.108233}", "{'[6, 5, 6, 0, 6, 0, 1, 1, 16, 10, 0, 12, 1, 1, 0, 0, 1, 0]' : 0.108379}", "{'[6, 5, 6, 0, 6, 0, 1, 1, 16, 10, 0, 12, 1, 1, 0, 0, 1, 0]' : 0.1081}", "{'[6, 5, 6, 0, 6, 0, 1, 1, 16, 10, 0, 12, 1, 1, 0, 0, 1, 0]' : 0.108161}", "{'[6, 5, 6, 0, 6, 0, 1, 1, 16, 10, 0, 12, 1, 1, 0, 0, 1, 0]' : 0.108056}", "{'[6, 5, 6, 0, 6, 0, 1, 1, 16, 10, 0, 12, 1, 1, 0, 0, 1, 0]' : 0.108535}", "{'[6, 5, 6, 0, 6, 0, 1, 1, 16, 10, 0, 12, 1, 1, 0, 0, 1, 0]' : 0.108351}", "{'[6, 5, 6, 0, 6, 0, 1, 1, 16, 10, 0, 12, 1, 1, 0, 0, 1, 0]' : 0.108044}", "{'[6, 5, 6, 0, 6, 0, 1, 1, 16, 10, 0, 12, 1, 1, 0, 0, 1, 0]' : 0.108302}", "{'[6, 5, 6, 0, 6, 0, 1, 1, 16, 10, 0, 12, 1, 1, 0, 0, 1, 0]' : 0.108183}", "{'[6, 5, 6, 0, 6, 0, 1, 1, 16, 10, 0, 12, 1, 1, 0, 0, 1, 0]' : 0.108323}", "{'[6, 5, 6, 0, 6, 0, 1, 1, 16, 10, 0, 12, 1, 1, 0, 0, 1, 0]' : 0.10819}", "{'[6, 5, 6, 0, 6, 0, 1, 1, 16, 10, 0, 12, 1, 1, 0, 0, 1, 0]' : 0.108144}"]
returning from 'run': {'[6, 5, 6, 0, 6, 0, 1, 1, 16, 10, 0, 12, 1, 1, 0, 0, 1, 0]': ([0.108214, 0.108539, 0.108035, 0.108354, 0.108284, 0.108398, 0.108254, 0.108376, 0.107944, 0.108161, 0.1081, 0.108383, 0.108087, 0.108369, 0.108045, 0.108057, 0.108205, 0.108233, 0.108379, 0.1081, 0.108161, 0.108056, 0.108535, 0.108351, 0.108044, 0.108302, 0.108183, 0.108323, 0.10819, 0.108144], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 5, 6, 0, 6, 0, 1, 1, 16, 10, 0, 12, 1, 1, 0, 0, 1, 0]': ([0.108214, 0.108539, 0.108035, 0.108354, 0.108284, 0.108398, 0.108254, 0.108376, 0.107944, 0.108161, 0.1081, 0.108383, 0.108087, 0.108369, 0.108045, 0.108057, 0.108205, 0.108233, 0.108379, 0.1081, 0.108161, 0.108056, 0.108535, 0.108351, 0.108044, 0.108302, 0.108183, 0.108323, 0.10819, 0.108144], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	5
        Additions: 		3282
        Multiplications: 	936
        Divisions: 		0
        Logical: 		0
        Reads: 			5143
        Writes: 		537
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest25.exe __orio_perftest25.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest25.exe  
Program Test Output: 
{'[4, 2, 1, 0, 0, 3, 1, 0, 6, 0, 26, 22, 1, 0, 0, 0, 1, 1]' : 0.124093}
{'[4, 2, 1, 0, 0, 3, 1, 0, 6, 0, 26, 22, 1, 0, 0, 0, 1, 1]' : 0.124442}
{'[4, 2, 1, 0, 0, 3, 1, 0, 6, 0, 26, 22, 1, 0, 0, 0, 1, 1]' : 0.124256}
{'[4, 2, 1, 0, 0, 3, 1, 0, 6, 0, 26, 22, 1, 0, 0, 0, 1, 1]' : 0.124392}
{'[4, 2, 1, 0, 0, 3, 1, 0, 6, 0, 26, 22, 1, 0, 0, 0, 1, 1]' : 0.124611}
{'[4, 2, 1, 0, 0, 3, 1, 0, 6, 0, 26, 22, 1, 0, 0, 0, 1, 1]' : 0.124209}
{'[4, 2, 1, 0, 0, 3, 1, 0, 6, 0, 26, 22, 1, 0, 0, 0, 1, 1]' : 0.124093}
{'[4, 2, 1, 0, 0, 3, 1, 0, 6, 0, 26, 22, 1, 0, 0, 0, 1, 1]' : 0.124091}
{'[4, 2, 1, 0, 0, 3, 1, 0, 6, 0, 26, 22, 1, 0, 0, 0, 1, 1]' : 0.124198}
{'[4, 2, 1, 0, 0, 3, 1, 0, 6, 0, 26, 22, 1, 0, 0, 0, 1, 1]' : 0.124137}
{'[4, 2, 1, 0, 0, 3, 1, 0, 6, 0, 26, 22, 1, 0, 0, 0, 1, 1]' : 0.124127}
{'[4, 2, 1, 0, 0, 3, 1, 0, 6, 0, 26, 22, 1, 0, 0, 0, 1, 1]' : 0.124146}
{'[4, 2, 1, 0, 0, 3, 1, 0, 6, 0, 26, 22, 1, 0, 0, 0, 1, 1]' : 0.124692}
{'[4, 2, 1, 0, 0, 3, 1, 0, 6, 0, 26, 22, 1, 0, 0, 0, 1, 1]' : 0.12448}
{'[4, 2, 1, 0, 0, 3, 1, 0, 6, 0, 26, 22, 1, 0, 0, 0, 1, 1]' : 0.124092}
{'[4, 2, 1, 0, 0, 3, 1, 0, 6, 0, 26, 22, 1, 0, 0, 0, 1, 1]' : 0.124173}
{'[4, 2, 1, 0, 0, 3, 1, 0, 6, 0, 26, 22, 1, 0, 0, 0, 1, 1]' : 0.124555}
{'[4, 2, 1, 0, 0, 3, 1, 0, 6, 0, 26, 22, 1, 0, 0, 0, 1, 1]' : 0.124161}
{'[4, 2, 1, 0, 0, 3, 1, 0, 6, 0, 26, 22, 1, 0, 0, 0, 1, 1]' : 0.124361}
{'[4, 2, 1, 0, 0, 3, 1, 0, 6, 0, 26, 22, 1, 0, 0, 0, 1, 1]' : 0.124145}
{'[4, 2, 1, 0, 0, 3, 1, 0, 6, 0, 26, 22, 1, 0, 0, 0, 1, 1]' : 0.124242}
{'[4, 2, 1, 0, 0, 3, 1, 0, 6, 0, 26, 22, 1, 0, 0, 0, 1, 1]' : 0.124415}
{'[4, 2, 1, 0, 0, 3, 1, 0, 6, 0, 26, 22, 1, 0, 0, 0, 1, 1]' : 0.12428}
{'[4, 2, 1, 0, 0, 3, 1, 0, 6, 0, 26, 22, 1, 0, 0, 0, 1, 1]' : 0.124096}
{'[4, 2, 1, 0, 0, 3, 1, 0, 6, 0, 26, 22, 1, 0, 0, 0, 1, 1]' : 0.124178}
{'[4, 2, 1, 0, 0, 3, 1, 0, 6, 0, 26, 22, 1, 0, 0, 0, 1, 1]' : 0.124214}
{'[4, 2, 1, 0, 0, 3, 1, 0, 6, 0, 26, 22, 1, 0, 0, 0, 1, 1]' : 0.124226}
{'[4, 2, 1, 0, 0, 3, 1, 0, 6, 0, 26, 22, 1, 0, 0, 0, 1, 1]' : 0.124137}
{'[4, 2, 1, 0, 0, 3, 1, 0, 6, 0, 26, 22, 1, 0, 0, 0, 1, 1]' : 0.124194}
{'[4, 2, 1, 0, 0, 3, 1, 0, 6, 0, 26, 22, 1, 0, 0, 0, 1, 1]' : 0.124346}

out:
 ["{'[4, 2, 1, 0, 0, 3, 1, 0, 6, 0, 26, 22, 1, 0, 0, 0, 1, 1]' : 0.124093}", "{'[4, 2, 1, 0, 0, 3, 1, 0, 6, 0, 26, 22, 1, 0, 0, 0, 1, 1]' : 0.124442}", "{'[4, 2, 1, 0, 0, 3, 1, 0, 6, 0, 26, 22, 1, 0, 0, 0, 1, 1]' : 0.124256}", "{'[4, 2, 1, 0, 0, 3, 1, 0, 6, 0, 26, 22, 1, 0, 0, 0, 1, 1]' : 0.124392}", "{'[4, 2, 1, 0, 0, 3, 1, 0, 6, 0, 26, 22, 1, 0, 0, 0, 1, 1]' : 0.124611}", "{'[4, 2, 1, 0, 0, 3, 1, 0, 6, 0, 26, 22, 1, 0, 0, 0, 1, 1]' : 0.124209}", "{'[4, 2, 1, 0, 0, 3, 1, 0, 6, 0, 26, 22, 1, 0, 0, 0, 1, 1]' : 0.124093}", "{'[4, 2, 1, 0, 0, 3, 1, 0, 6, 0, 26, 22, 1, 0, 0, 0, 1, 1]' : 0.124091}", "{'[4, 2, 1, 0, 0, 3, 1, 0, 6, 0, 26, 22, 1, 0, 0, 0, 1, 1]' : 0.124198}", "{'[4, 2, 1, 0, 0, 3, 1, 0, 6, 0, 26, 22, 1, 0, 0, 0, 1, 1]' : 0.124137}", "{'[4, 2, 1, 0, 0, 3, 1, 0, 6, 0, 26, 22, 1, 0, 0, 0, 1, 1]' : 0.124127}", "{'[4, 2, 1, 0, 0, 3, 1, 0, 6, 0, 26, 22, 1, 0, 0, 0, 1, 1]' : 0.124146}", "{'[4, 2, 1, 0, 0, 3, 1, 0, 6, 0, 26, 22, 1, 0, 0, 0, 1, 1]' : 0.124692}", "{'[4, 2, 1, 0, 0, 3, 1, 0, 6, 0, 26, 22, 1, 0, 0, 0, 1, 1]' : 0.12448}", "{'[4, 2, 1, 0, 0, 3, 1, 0, 6, 0, 26, 22, 1, 0, 0, 0, 1, 1]' : 0.124092}", "{'[4, 2, 1, 0, 0, 3, 1, 0, 6, 0, 26, 22, 1, 0, 0, 0, 1, 1]' : 0.124173}", "{'[4, 2, 1, 0, 0, 3, 1, 0, 6, 0, 26, 22, 1, 0, 0, 0, 1, 1]' : 0.124555}", "{'[4, 2, 1, 0, 0, 3, 1, 0, 6, 0, 26, 22, 1, 0, 0, 0, 1, 1]' : 0.124161}", "{'[4, 2, 1, 0, 0, 3, 1, 0, 6, 0, 26, 22, 1, 0, 0, 0, 1, 1]' : 0.124361}", "{'[4, 2, 1, 0, 0, 3, 1, 0, 6, 0, 26, 22, 1, 0, 0, 0, 1, 1]' : 0.124145}", "{'[4, 2, 1, 0, 0, 3, 1, 0, 6, 0, 26, 22, 1, 0, 0, 0, 1, 1]' : 0.124242}", "{'[4, 2, 1, 0, 0, 3, 1, 0, 6, 0, 26, 22, 1, 0, 0, 0, 1, 1]' : 0.124415}", "{'[4, 2, 1, 0, 0, 3, 1, 0, 6, 0, 26, 22, 1, 0, 0, 0, 1, 1]' : 0.12428}", "{'[4, 2, 1, 0, 0, 3, 1, 0, 6, 0, 26, 22, 1, 0, 0, 0, 1, 1]' : 0.124096}", "{'[4, 2, 1, 0, 0, 3, 1, 0, 6, 0, 26, 22, 1, 0, 0, 0, 1, 1]' : 0.124178}", "{'[4, 2, 1, 0, 0, 3, 1, 0, 6, 0, 26, 22, 1, 0, 0, 0, 1, 1]' : 0.124214}", "{'[4, 2, 1, 0, 0, 3, 1, 0, 6, 0, 26, 22, 1, 0, 0, 0, 1, 1]' : 0.124226}", "{'[4, 2, 1, 0, 0, 3, 1, 0, 6, 0, 26, 22, 1, 0, 0, 0, 1, 1]' : 0.124137}", "{'[4, 2, 1, 0, 0, 3, 1, 0, 6, 0, 26, 22, 1, 0, 0, 0, 1, 1]' : 0.124194}", "{'[4, 2, 1, 0, 0, 3, 1, 0, 6, 0, 26, 22, 1, 0, 0, 0, 1, 1]' : 0.124346}"]
returning from 'run': {'[4, 2, 1, 0, 0, 3, 1, 0, 6, 0, 26, 22, 1, 0, 0, 0, 1, 1]': ([0.124093, 0.124442, 0.124256, 0.124392, 0.124611, 0.124209, 0.124093, 0.124091, 0.124198, 0.124137, 0.124127, 0.124146, 0.124692, 0.12448, 0.124092, 0.124173, 0.124555, 0.124161, 0.124361, 0.124145, 0.124242, 0.124415, 0.12428, 0.124096, 0.124178, 0.124214, 0.124226, 0.124137, 0.124194, 0.124346], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 2, 1, 0, 0, 3, 1, 0, 6, 0, 26, 22, 1, 0, 0, 0, 1, 1]': ([0.124093, 0.124442, 0.124256, 0.124392, 0.124611, 0.124209, 0.124093, 0.124091, 0.124198, 0.124137, 0.124127, 0.124146, 0.124692, 0.12448, 0.124092, 0.124173, 0.124555, 0.124161, 0.124361, 0.124145, 0.124242, 0.124415, 0.12428, 0.124096, 0.124178, 0.124214, 0.124226, 0.124137, 0.124194, 0.124346], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	5
        Additions: 		222
        Multiplications: 	66
        Divisions: 		0
        Logical: 		0
        Reads: 			504
        Writes: 		90
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest26.exe __orio_perftest26.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest26.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest26.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest26.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest26.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	33
        Max loop nest depth: 	4
        Additions: 		4706
        Multiplications: 	2294
        Divisions: 		0
        Logical: 		0
        Reads: 			8828
        Writes: 		1394
        Comparisons:		33
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest27.exe __orio_perftest27.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest27.exe  
Program Test Output: 
{'[0, 3, 1, 3, 1, 0, 0, 1, 18, 3, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.264698}
{'[0, 3, 1, 3, 1, 0, 0, 1, 18, 3, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.249166}
{'[0, 3, 1, 3, 1, 0, 0, 1, 18, 3, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.250367}
{'[0, 3, 1, 3, 1, 0, 0, 1, 18, 3, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.248452}
{'[0, 3, 1, 3, 1, 0, 0, 1, 18, 3, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.249053}
{'[0, 3, 1, 3, 1, 0, 0, 1, 18, 3, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.24555}
{'[0, 3, 1, 3, 1, 0, 0, 1, 18, 3, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.241594}
{'[0, 3, 1, 3, 1, 0, 0, 1, 18, 3, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.24109}
{'[0, 3, 1, 3, 1, 0, 0, 1, 18, 3, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.246992}
{'[0, 3, 1, 3, 1, 0, 0, 1, 18, 3, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.248376}
{'[0, 3, 1, 3, 1, 0, 0, 1, 18, 3, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.247172}
{'[0, 3, 1, 3, 1, 0, 0, 1, 18, 3, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.24872}
{'[0, 3, 1, 3, 1, 0, 0, 1, 18, 3, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.250104}
{'[0, 3, 1, 3, 1, 0, 0, 1, 18, 3, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.247768}
{'[0, 3, 1, 3, 1, 0, 0, 1, 18, 3, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.25055}
{'[0, 3, 1, 3, 1, 0, 0, 1, 18, 3, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.251095}
{'[0, 3, 1, 3, 1, 0, 0, 1, 18, 3, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.249825}
{'[0, 3, 1, 3, 1, 0, 0, 1, 18, 3, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.246443}
{'[0, 3, 1, 3, 1, 0, 0, 1, 18, 3, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.246227}
{'[0, 3, 1, 3, 1, 0, 0, 1, 18, 3, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.247812}
{'[0, 3, 1, 3, 1, 0, 0, 1, 18, 3, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.249735}
{'[0, 3, 1, 3, 1, 0, 0, 1, 18, 3, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.249469}
{'[0, 3, 1, 3, 1, 0, 0, 1, 18, 3, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.247092}
{'[0, 3, 1, 3, 1, 0, 0, 1, 18, 3, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.241732}
{'[0, 3, 1, 3, 1, 0, 0, 1, 18, 3, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.245869}
{'[0, 3, 1, 3, 1, 0, 0, 1, 18, 3, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.247664}
{'[0, 3, 1, 3, 1, 0, 0, 1, 18, 3, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.249796}
{'[0, 3, 1, 3, 1, 0, 0, 1, 18, 3, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.251733}
{'[0, 3, 1, 3, 1, 0, 0, 1, 18, 3, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.250174}
{'[0, 3, 1, 3, 1, 0, 0, 1, 18, 3, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.245637}

out:
 ["{'[0, 3, 1, 3, 1, 0, 0, 1, 18, 3, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.264698}", "{'[0, 3, 1, 3, 1, 0, 0, 1, 18, 3, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.249166}", "{'[0, 3, 1, 3, 1, 0, 0, 1, 18, 3, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.250367}", "{'[0, 3, 1, 3, 1, 0, 0, 1, 18, 3, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.248452}", "{'[0, 3, 1, 3, 1, 0, 0, 1, 18, 3, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.249053}", "{'[0, 3, 1, 3, 1, 0, 0, 1, 18, 3, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.24555}", "{'[0, 3, 1, 3, 1, 0, 0, 1, 18, 3, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.241594}", "{'[0, 3, 1, 3, 1, 0, 0, 1, 18, 3, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.24109}", "{'[0, 3, 1, 3, 1, 0, 0, 1, 18, 3, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.246992}", "{'[0, 3, 1, 3, 1, 0, 0, 1, 18, 3, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.248376}", "{'[0, 3, 1, 3, 1, 0, 0, 1, 18, 3, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.247172}", "{'[0, 3, 1, 3, 1, 0, 0, 1, 18, 3, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.24872}", "{'[0, 3, 1, 3, 1, 0, 0, 1, 18, 3, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.250104}", "{'[0, 3, 1, 3, 1, 0, 0, 1, 18, 3, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.247768}", "{'[0, 3, 1, 3, 1, 0, 0, 1, 18, 3, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.25055}", "{'[0, 3, 1, 3, 1, 0, 0, 1, 18, 3, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.251095}", "{'[0, 3, 1, 3, 1, 0, 0, 1, 18, 3, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.249825}", "{'[0, 3, 1, 3, 1, 0, 0, 1, 18, 3, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.246443}", "{'[0, 3, 1, 3, 1, 0, 0, 1, 18, 3, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.246227}", "{'[0, 3, 1, 3, 1, 0, 0, 1, 18, 3, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.247812}", "{'[0, 3, 1, 3, 1, 0, 0, 1, 18, 3, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.249735}", "{'[0, 3, 1, 3, 1, 0, 0, 1, 18, 3, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.249469}", "{'[0, 3, 1, 3, 1, 0, 0, 1, 18, 3, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.247092}", "{'[0, 3, 1, 3, 1, 0, 0, 1, 18, 3, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.241732}", "{'[0, 3, 1, 3, 1, 0, 0, 1, 18, 3, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.245869}", "{'[0, 3, 1, 3, 1, 0, 0, 1, 18, 3, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.247664}", "{'[0, 3, 1, 3, 1, 0, 0, 1, 18, 3, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.249796}", "{'[0, 3, 1, 3, 1, 0, 0, 1, 18, 3, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.251733}", "{'[0, 3, 1, 3, 1, 0, 0, 1, 18, 3, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.250174}", "{'[0, 3, 1, 3, 1, 0, 0, 1, 18, 3, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.245637}"]
returning from 'run': {'[0, 3, 1, 3, 1, 0, 0, 1, 18, 3, 28, 0, 2, 0, 0, 1, 1, 0]': ([0.264698, 0.249166, 0.250367, 0.248452, 0.249053, 0.24555, 0.241594, 0.24109, 0.246992, 0.248376, 0.247172, 0.24872, 0.250104, 0.247768, 0.25055, 0.251095, 0.249825, 0.246443, 0.246227, 0.247812, 0.249735, 0.249469, 0.247092, 0.241732, 0.245869, 0.247664, 0.249796, 0.251733, 0.250174, 0.245637], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 3, 1, 3, 1, 0, 0, 1, 18, 3, 28, 0, 2, 0, 0, 1, 1, 0]': ([0.264698, 0.249166, 0.250367, 0.248452, 0.249053, 0.24555, 0.241594, 0.24109, 0.246992, 0.248376, 0.247172, 0.24872, 0.250104, 0.247768, 0.25055, 0.251095, 0.249825, 0.246443, 0.246227, 0.247812, 0.249735, 0.249469, 0.247092, 0.241732, 0.245869, 0.247664, 0.249796, 0.251733, 0.250174, 0.245637], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	5
        Additions: 		359
        Multiplications: 	96
        Divisions: 		0
        Logical: 		0
        Reads: 			726
        Writes: 		109
        Comparisons:		15
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest28.exe __orio_perftest28.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest28.exe  
Program Test Output: 
{'[0, 6, 4, 3, 5, 6, 1, 1, 19, 0, 24, 20, 0, 0, 0, 0, 0, 1]' : 0.272365}
{'[0, 6, 4, 3, 5, 6, 1, 1, 19, 0, 24, 20, 0, 0, 0, 0, 0, 1]' : 0.27225}
{'[0, 6, 4, 3, 5, 6, 1, 1, 19, 0, 24, 20, 0, 0, 0, 0, 0, 1]' : 0.244326}
{'[0, 6, 4, 3, 5, 6, 1, 1, 19, 0, 24, 20, 0, 0, 0, 0, 0, 1]' : 0.228117}
{'[0, 6, 4, 3, 5, 6, 1, 1, 19, 0, 24, 20, 0, 0, 0, 0, 0, 1]' : 0.228423}
{'[0, 6, 4, 3, 5, 6, 1, 1, 19, 0, 24, 20, 0, 0, 0, 0, 0, 1]' : 0.228492}
{'[0, 6, 4, 3, 5, 6, 1, 1, 19, 0, 24, 20, 0, 0, 0, 0, 0, 1]' : 0.228432}
{'[0, 6, 4, 3, 5, 6, 1, 1, 19, 0, 24, 20, 0, 0, 0, 0, 0, 1]' : 0.228753}
{'[0, 6, 4, 3, 5, 6, 1, 1, 19, 0, 24, 20, 0, 0, 0, 0, 0, 1]' : 0.228533}
{'[0, 6, 4, 3, 5, 6, 1, 1, 19, 0, 24, 20, 0, 0, 0, 0, 0, 1]' : 0.228404}
{'[0, 6, 4, 3, 5, 6, 1, 1, 19, 0, 24, 20, 0, 0, 0, 0, 0, 1]' : 0.2285}
{'[0, 6, 4, 3, 5, 6, 1, 1, 19, 0, 24, 20, 0, 0, 0, 0, 0, 1]' : 0.228502}
{'[0, 6, 4, 3, 5, 6, 1, 1, 19, 0, 24, 20, 0, 0, 0, 0, 0, 1]' : 0.229003}
{'[0, 6, 4, 3, 5, 6, 1, 1, 19, 0, 24, 20, 0, 0, 0, 0, 0, 1]' : 0.228463}
{'[0, 6, 4, 3, 5, 6, 1, 1, 19, 0, 24, 20, 0, 0, 0, 0, 0, 1]' : 0.228544}
{'[0, 6, 4, 3, 5, 6, 1, 1, 19, 0, 24, 20, 0, 0, 0, 0, 0, 1]' : 0.228392}
{'[0, 6, 4, 3, 5, 6, 1, 1, 19, 0, 24, 20, 0, 0, 0, 0, 0, 1]' : 0.228735}
{'[0, 6, 4, 3, 5, 6, 1, 1, 19, 0, 24, 20, 0, 0, 0, 0, 0, 1]' : 0.229262}
{'[0, 6, 4, 3, 5, 6, 1, 1, 19, 0, 24, 20, 0, 0, 0, 0, 0, 1]' : 0.228586}
{'[0, 6, 4, 3, 5, 6, 1, 1, 19, 0, 24, 20, 0, 0, 0, 0, 0, 1]' : 0.228709}
{'[0, 6, 4, 3, 5, 6, 1, 1, 19, 0, 24, 20, 0, 0, 0, 0, 0, 1]' : 0.228413}
{'[0, 6, 4, 3, 5, 6, 1, 1, 19, 0, 24, 20, 0, 0, 0, 0, 0, 1]' : 0.228664}
{'[0, 6, 4, 3, 5, 6, 1, 1, 19, 0, 24, 20, 0, 0, 0, 0, 0, 1]' : 0.228765}
{'[0, 6, 4, 3, 5, 6, 1, 1, 19, 0, 24, 20, 0, 0, 0, 0, 0, 1]' : 0.228472}
{'[0, 6, 4, 3, 5, 6, 1, 1, 19, 0, 24, 20, 0, 0, 0, 0, 0, 1]' : 0.228456}
{'[0, 6, 4, 3, 5, 6, 1, 1, 19, 0, 24, 20, 0, 0, 0, 0, 0, 1]' : 0.22862}
{'[0, 6, 4, 3, 5, 6, 1, 1, 19, 0, 24, 20, 0, 0, 0, 0, 0, 1]' : 0.228935}
{'[0, 6, 4, 3, 5, 6, 1, 1, 19, 0, 24, 20, 0, 0, 0, 0, 0, 1]' : 0.228622}
{'[0, 6, 4, 3, 5, 6, 1, 1, 19, 0, 24, 20, 0, 0, 0, 0, 0, 1]' : 0.228608}
{'[0, 6, 4, 3, 5, 6, 1, 1, 19, 0, 24, 20, 0, 0, 0, 0, 0, 1]' : 0.228369}

out:
 ["{'[0, 6, 4, 3, 5, 6, 1, 1, 19, 0, 24, 20, 0, 0, 0, 0, 0, 1]' : 0.272365}", "{'[0, 6, 4, 3, 5, 6, 1, 1, 19, 0, 24, 20, 0, 0, 0, 0, 0, 1]' : 0.27225}", "{'[0, 6, 4, 3, 5, 6, 1, 1, 19, 0, 24, 20, 0, 0, 0, 0, 0, 1]' : 0.244326}", "{'[0, 6, 4, 3, 5, 6, 1, 1, 19, 0, 24, 20, 0, 0, 0, 0, 0, 1]' : 0.228117}", "{'[0, 6, 4, 3, 5, 6, 1, 1, 19, 0, 24, 20, 0, 0, 0, 0, 0, 1]' : 0.228423}", "{'[0, 6, 4, 3, 5, 6, 1, 1, 19, 0, 24, 20, 0, 0, 0, 0, 0, 1]' : 0.228492}", "{'[0, 6, 4, 3, 5, 6, 1, 1, 19, 0, 24, 20, 0, 0, 0, 0, 0, 1]' : 0.228432}", "{'[0, 6, 4, 3, 5, 6, 1, 1, 19, 0, 24, 20, 0, 0, 0, 0, 0, 1]' : 0.228753}", "{'[0, 6, 4, 3, 5, 6, 1, 1, 19, 0, 24, 20, 0, 0, 0, 0, 0, 1]' : 0.228533}", "{'[0, 6, 4, 3, 5, 6, 1, 1, 19, 0, 24, 20, 0, 0, 0, 0, 0, 1]' : 0.228404}", "{'[0, 6, 4, 3, 5, 6, 1, 1, 19, 0, 24, 20, 0, 0, 0, 0, 0, 1]' : 0.2285}", "{'[0, 6, 4, 3, 5, 6, 1, 1, 19, 0, 24, 20, 0, 0, 0, 0, 0, 1]' : 0.228502}", "{'[0, 6, 4, 3, 5, 6, 1, 1, 19, 0, 24, 20, 0, 0, 0, 0, 0, 1]' : 0.229003}", "{'[0, 6, 4, 3, 5, 6, 1, 1, 19, 0, 24, 20, 0, 0, 0, 0, 0, 1]' : 0.228463}", "{'[0, 6, 4, 3, 5, 6, 1, 1, 19, 0, 24, 20, 0, 0, 0, 0, 0, 1]' : 0.228544}", "{'[0, 6, 4, 3, 5, 6, 1, 1, 19, 0, 24, 20, 0, 0, 0, 0, 0, 1]' : 0.228392}", "{'[0, 6, 4, 3, 5, 6, 1, 1, 19, 0, 24, 20, 0, 0, 0, 0, 0, 1]' : 0.228735}", "{'[0, 6, 4, 3, 5, 6, 1, 1, 19, 0, 24, 20, 0, 0, 0, 0, 0, 1]' : 0.229262}", "{'[0, 6, 4, 3, 5, 6, 1, 1, 19, 0, 24, 20, 0, 0, 0, 0, 0, 1]' : 0.228586}", "{'[0, 6, 4, 3, 5, 6, 1, 1, 19, 0, 24, 20, 0, 0, 0, 0, 0, 1]' : 0.228709}", "{'[0, 6, 4, 3, 5, 6, 1, 1, 19, 0, 24, 20, 0, 0, 0, 0, 0, 1]' : 0.228413}", "{'[0, 6, 4, 3, 5, 6, 1, 1, 19, 0, 24, 20, 0, 0, 0, 0, 0, 1]' : 0.228664}", "{'[0, 6, 4, 3, 5, 6, 1, 1, 19, 0, 24, 20, 0, 0, 0, 0, 0, 1]' : 0.228765}", "{'[0, 6, 4, 3, 5, 6, 1, 1, 19, 0, 24, 20, 0, 0, 0, 0, 0, 1]' : 0.228472}", "{'[0, 6, 4, 3, 5, 6, 1, 1, 19, 0, 24, 20, 0, 0, 0, 0, 0, 1]' : 0.228456}", "{'[0, 6, 4, 3, 5, 6, 1, 1, 19, 0, 24, 20, 0, 0, 0, 0, 0, 1]' : 0.22862}", "{'[0, 6, 4, 3, 5, 6, 1, 1, 19, 0, 24, 20, 0, 0, 0, 0, 0, 1]' : 0.228935}", "{'[0, 6, 4, 3, 5, 6, 1, 1, 19, 0, 24, 20, 0, 0, 0, 0, 0, 1]' : 0.228622}", "{'[0, 6, 4, 3, 5, 6, 1, 1, 19, 0, 24, 20, 0, 0, 0, 0, 0, 1]' : 0.228608}", "{'[0, 6, 4, 3, 5, 6, 1, 1, 19, 0, 24, 20, 0, 0, 0, 0, 0, 1]' : 0.228369}"]
returning from 'run': {'[0, 6, 4, 3, 5, 6, 1, 1, 19, 0, 24, 20, 0, 0, 0, 0, 0, 1]': ([0.272365, 0.27225, 0.244326, 0.228117, 0.228423, 0.228492, 0.228432, 0.228753, 0.228533, 0.228404, 0.2285, 0.228502, 0.229003, 0.228463, 0.228544, 0.228392, 0.228735, 0.229262, 0.228586, 0.228709, 0.228413, 0.228664, 0.228765, 0.228472, 0.228456, 0.22862, 0.228935, 0.228622, 0.228608, 0.228369], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 4, 3, 5, 6, 1, 1, 19, 0, 24, 20, 0, 0, 0, 0, 0, 1]': ([0.272365, 0.27225, 0.244326, 0.228117, 0.228423, 0.228492, 0.228432, 0.228753, 0.228533, 0.228404, 0.2285, 0.228502, 0.229003, 0.228463, 0.228544, 0.228392, 0.228735, 0.229262, 0.228586, 0.228709, 0.228413, 0.228664, 0.228765, 0.228472, 0.228456, 0.22862, 0.228935, 0.228622, 0.228608, 0.228369], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	47
        Max loop nest depth: 	6
        Additions: 		1667
        Multiplications: 	720
        Divisions: 		0
        Logical: 		0
        Reads: 			3329
        Writes: 		583
        Comparisons:		47
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest29.exe __orio_perftest29.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest29.exe  
Program Test Output: 
{'[3, 2, 2, 6, 6, 3, 1, 1, 2, 2, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.172077}
{'[3, 2, 2, 6, 6, 3, 1, 1, 2, 2, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.172557}
{'[3, 2, 2, 6, 6, 3, 1, 1, 2, 2, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.17382}
{'[3, 2, 2, 6, 6, 3, 1, 1, 2, 2, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.172615}
{'[3, 2, 2, 6, 6, 3, 1, 1, 2, 2, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.170566}
{'[3, 2, 2, 6, 6, 3, 1, 1, 2, 2, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.172484}
{'[3, 2, 2, 6, 6, 3, 1, 1, 2, 2, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.170704}
{'[3, 2, 2, 6, 6, 3, 1, 1, 2, 2, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.172463}
{'[3, 2, 2, 6, 6, 3, 1, 1, 2, 2, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.172184}
{'[3, 2, 2, 6, 6, 3, 1, 1, 2, 2, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.172651}
{'[3, 2, 2, 6, 6, 3, 1, 1, 2, 2, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.173674}
{'[3, 2, 2, 6, 6, 3, 1, 1, 2, 2, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.171415}
{'[3, 2, 2, 6, 6, 3, 1, 1, 2, 2, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.171119}
{'[3, 2, 2, 6, 6, 3, 1, 1, 2, 2, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.172889}
{'[3, 2, 2, 6, 6, 3, 1, 1, 2, 2, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.170722}
{'[3, 2, 2, 6, 6, 3, 1, 1, 2, 2, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.169547}
{'[3, 2, 2, 6, 6, 3, 1, 1, 2, 2, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.171484}
{'[3, 2, 2, 6, 6, 3, 1, 1, 2, 2, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.171188}
{'[3, 2, 2, 6, 6, 3, 1, 1, 2, 2, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.170494}
{'[3, 2, 2, 6, 6, 3, 1, 1, 2, 2, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.171134}
{'[3, 2, 2, 6, 6, 3, 1, 1, 2, 2, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.171656}
{'[3, 2, 2, 6, 6, 3, 1, 1, 2, 2, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.172106}
{'[3, 2, 2, 6, 6, 3, 1, 1, 2, 2, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.172382}
{'[3, 2, 2, 6, 6, 3, 1, 1, 2, 2, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.171374}
{'[3, 2, 2, 6, 6, 3, 1, 1, 2, 2, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.17163}
{'[3, 2, 2, 6, 6, 3, 1, 1, 2, 2, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.170845}
{'[3, 2, 2, 6, 6, 3, 1, 1, 2, 2, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.173094}
{'[3, 2, 2, 6, 6, 3, 1, 1, 2, 2, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.172944}
{'[3, 2, 2, 6, 6, 3, 1, 1, 2, 2, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.16982}
{'[3, 2, 2, 6, 6, 3, 1, 1, 2, 2, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.17175}

out:
 ["{'[3, 2, 2, 6, 6, 3, 1, 1, 2, 2, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.172077}", "{'[3, 2, 2, 6, 6, 3, 1, 1, 2, 2, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.172557}", "{'[3, 2, 2, 6, 6, 3, 1, 1, 2, 2, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.17382}", "{'[3, 2, 2, 6, 6, 3, 1, 1, 2, 2, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.172615}", "{'[3, 2, 2, 6, 6, 3, 1, 1, 2, 2, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.170566}", "{'[3, 2, 2, 6, 6, 3, 1, 1, 2, 2, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.172484}", "{'[3, 2, 2, 6, 6, 3, 1, 1, 2, 2, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.170704}", "{'[3, 2, 2, 6, 6, 3, 1, 1, 2, 2, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.172463}", "{'[3, 2, 2, 6, 6, 3, 1, 1, 2, 2, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.172184}", "{'[3, 2, 2, 6, 6, 3, 1, 1, 2, 2, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.172651}", "{'[3, 2, 2, 6, 6, 3, 1, 1, 2, 2, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.173674}", "{'[3, 2, 2, 6, 6, 3, 1, 1, 2, 2, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.171415}", "{'[3, 2, 2, 6, 6, 3, 1, 1, 2, 2, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.171119}", "{'[3, 2, 2, 6, 6, 3, 1, 1, 2, 2, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.172889}", "{'[3, 2, 2, 6, 6, 3, 1, 1, 2, 2, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.170722}", "{'[3, 2, 2, 6, 6, 3, 1, 1, 2, 2, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.169547}", "{'[3, 2, 2, 6, 6, 3, 1, 1, 2, 2, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.171484}", "{'[3, 2, 2, 6, 6, 3, 1, 1, 2, 2, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.171188}", "{'[3, 2, 2, 6, 6, 3, 1, 1, 2, 2, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.170494}", "{'[3, 2, 2, 6, 6, 3, 1, 1, 2, 2, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.171134}", "{'[3, 2, 2, 6, 6, 3, 1, 1, 2, 2, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.171656}", "{'[3, 2, 2, 6, 6, 3, 1, 1, 2, 2, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.172106}", "{'[3, 2, 2, 6, 6, 3, 1, 1, 2, 2, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.172382}", "{'[3, 2, 2, 6, 6, 3, 1, 1, 2, 2, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.171374}", "{'[3, 2, 2, 6, 6, 3, 1, 1, 2, 2, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.17163}", "{'[3, 2, 2, 6, 6, 3, 1, 1, 2, 2, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.170845}", "{'[3, 2, 2, 6, 6, 3, 1, 1, 2, 2, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.173094}", "{'[3, 2, 2, 6, 6, 3, 1, 1, 2, 2, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.172944}", "{'[3, 2, 2, 6, 6, 3, 1, 1, 2, 2, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.16982}", "{'[3, 2, 2, 6, 6, 3, 1, 1, 2, 2, 7, 0, 2, 0, 0, 1, 0, 1]' : 0.17175}"]
returning from 'run': {'[3, 2, 2, 6, 6, 3, 1, 1, 2, 2, 7, 0, 2, 0, 0, 1, 0, 1]': ([0.172077, 0.172557, 0.17382, 0.172615, 0.170566, 0.172484, 0.170704, 0.172463, 0.172184, 0.172651, 0.173674, 0.171415, 0.171119, 0.172889, 0.170722, 0.169547, 0.171484, 0.171188, 0.170494, 0.171134, 0.171656, 0.172106, 0.172382, 0.171374, 0.17163, 0.170845, 0.173094, 0.172944, 0.16982, 0.17175], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 2, 2, 6, 6, 3, 1, 1, 2, 2, 7, 0, 2, 0, 0, 1, 0, 1]': ([0.172077, 0.172557, 0.17382, 0.172615, 0.170566, 0.172484, 0.170704, 0.172463, 0.172184, 0.172651, 0.173674, 0.171415, 0.171119, 0.172889, 0.170722, 0.169547, 0.171484, 0.171188, 0.170494, 0.171134, 0.171656, 0.172106, 0.172382, 0.171374, 0.17163, 0.170845, 0.173094, 0.172944, 0.16982, 0.17175], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = kkk
Code stats:
        Number of loops: 	30
        Max loop nest depth: 	5
        Additions: 		2143
        Multiplications: 	960
        Divisions: 		0
        Logical: 		0
        Reads: 			4308
        Writes: 		790
        Comparisons:		30
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest30.exe __orio_perftest30.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest30.exe  
Program Test Output: 
{'[3, 0, 4, 6, 2, 2, 1, 0, 27, 5, 0, 22, 1, 1, 0, 1, 1, 1]' : 0.111796}
{'[3, 0, 4, 6, 2, 2, 1, 0, 27, 5, 0, 22, 1, 1, 0, 1, 1, 1]' : 0.111935}
{'[3, 0, 4, 6, 2, 2, 1, 0, 27, 5, 0, 22, 1, 1, 0, 1, 1, 1]' : 0.111837}
{'[3, 0, 4, 6, 2, 2, 1, 0, 27, 5, 0, 22, 1, 1, 0, 1, 1, 1]' : 0.111862}
{'[3, 0, 4, 6, 2, 2, 1, 0, 27, 5, 0, 22, 1, 1, 0, 1, 1, 1]' : 0.110889}
{'[3, 0, 4, 6, 2, 2, 1, 0, 27, 5, 0, 22, 1, 1, 0, 1, 1, 1]' : 0.0969269}
{'[3, 0, 4, 6, 2, 2, 1, 0, 27, 5, 0, 22, 1, 1, 0, 1, 1, 1]' : 0.0953059}
{'[3, 0, 4, 6, 2, 2, 1, 0, 27, 5, 0, 22, 1, 1, 0, 1, 1, 1]' : 0.0954659}
{'[3, 0, 4, 6, 2, 2, 1, 0, 27, 5, 0, 22, 1, 1, 0, 1, 1, 1]' : 0.0952458}
{'[3, 0, 4, 6, 2, 2, 1, 0, 27, 5, 0, 22, 1, 1, 0, 1, 1, 1]' : 0.0953441}
{'[3, 0, 4, 6, 2, 2, 1, 0, 27, 5, 0, 22, 1, 1, 0, 1, 1, 1]' : 0.0953181}
{'[3, 0, 4, 6, 2, 2, 1, 0, 27, 5, 0, 22, 1, 1, 0, 1, 1, 1]' : 0.0954249}
{'[3, 0, 4, 6, 2, 2, 1, 0, 27, 5, 0, 22, 1, 1, 0, 1, 1, 1]' : 0.0952182}
{'[3, 0, 4, 6, 2, 2, 1, 0, 27, 5, 0, 22, 1, 1, 0, 1, 1, 1]' : 0.095356}
{'[3, 0, 4, 6, 2, 2, 1, 0, 27, 5, 0, 22, 1, 1, 0, 1, 1, 1]' : 0.0952802}
{'[3, 0, 4, 6, 2, 2, 1, 0, 27, 5, 0, 22, 1, 1, 0, 1, 1, 1]' : 0.0955069}
{'[3, 0, 4, 6, 2, 2, 1, 0, 27, 5, 0, 22, 1, 1, 0, 1, 1, 1]' : 0.095834}
{'[3, 0, 4, 6, 2, 2, 1, 0, 27, 5, 0, 22, 1, 1, 0, 1, 1, 1]' : 0.095479}
{'[3, 0, 4, 6, 2, 2, 1, 0, 27, 5, 0, 22, 1, 1, 0, 1, 1, 1]' : 0.095329}
{'[3, 0, 4, 6, 2, 2, 1, 0, 27, 5, 0, 22, 1, 1, 0, 1, 1, 1]' : 0.0953171}
{'[3, 0, 4, 6, 2, 2, 1, 0, 27, 5, 0, 22, 1, 1, 0, 1, 1, 1]' : 0.0953169}
{'[3, 0, 4, 6, 2, 2, 1, 0, 27, 5, 0, 22, 1, 1, 0, 1, 1, 1]' : 0.0967751}
{'[3, 0, 4, 6, 2, 2, 1, 0, 27, 5, 0, 22, 1, 1, 0, 1, 1, 1]' : 0.100532}
{'[3, 0, 4, 6, 2, 2, 1, 0, 27, 5, 0, 22, 1, 1, 0, 1, 1, 1]' : 0.100494}
{'[3, 0, 4, 6, 2, 2, 1, 0, 27, 5, 0, 22, 1, 1, 0, 1, 1, 1]' : 0.100385}
{'[3, 0, 4, 6, 2, 2, 1, 0, 27, 5, 0, 22, 1, 1, 0, 1, 1, 1]' : 0.100325}
{'[3, 0, 4, 6, 2, 2, 1, 0, 27, 5, 0, 22, 1, 1, 0, 1, 1, 1]' : 0.100639}
{'[3, 0, 4, 6, 2, 2, 1, 0, 27, 5, 0, 22, 1, 1, 0, 1, 1, 1]' : 0.100556}
{'[3, 0, 4, 6, 2, 2, 1, 0, 27, 5, 0, 22, 1, 1, 0, 1, 1, 1]' : 0.100565}
{'[3, 0, 4, 6, 2, 2, 1, 0, 27, 5, 0, 22, 1, 1, 0, 1, 1, 1]' : 0.100292}

out:
 ["{'[3, 0, 4, 6, 2, 2, 1, 0, 27, 5, 0, 22, 1, 1, 0, 1, 1, 1]' : 0.111796}", "{'[3, 0, 4, 6, 2, 2, 1, 0, 27, 5, 0, 22, 1, 1, 0, 1, 1, 1]' : 0.111935}", "{'[3, 0, 4, 6, 2, 2, 1, 0, 27, 5, 0, 22, 1, 1, 0, 1, 1, 1]' : 0.111837}", "{'[3, 0, 4, 6, 2, 2, 1, 0, 27, 5, 0, 22, 1, 1, 0, 1, 1, 1]' : 0.111862}", "{'[3, 0, 4, 6, 2, 2, 1, 0, 27, 5, 0, 22, 1, 1, 0, 1, 1, 1]' : 0.110889}", "{'[3, 0, 4, 6, 2, 2, 1, 0, 27, 5, 0, 22, 1, 1, 0, 1, 1, 1]' : 0.0969269}", "{'[3, 0, 4, 6, 2, 2, 1, 0, 27, 5, 0, 22, 1, 1, 0, 1, 1, 1]' : 0.0953059}", "{'[3, 0, 4, 6, 2, 2, 1, 0, 27, 5, 0, 22, 1, 1, 0, 1, 1, 1]' : 0.0954659}", "{'[3, 0, 4, 6, 2, 2, 1, 0, 27, 5, 0, 22, 1, 1, 0, 1, 1, 1]' : 0.0952458}", "{'[3, 0, 4, 6, 2, 2, 1, 0, 27, 5, 0, 22, 1, 1, 0, 1, 1, 1]' : 0.0953441}", "{'[3, 0, 4, 6, 2, 2, 1, 0, 27, 5, 0, 22, 1, 1, 0, 1, 1, 1]' : 0.0953181}", "{'[3, 0, 4, 6, 2, 2, 1, 0, 27, 5, 0, 22, 1, 1, 0, 1, 1, 1]' : 0.0954249}", "{'[3, 0, 4, 6, 2, 2, 1, 0, 27, 5, 0, 22, 1, 1, 0, 1, 1, 1]' : 0.0952182}", "{'[3, 0, 4, 6, 2, 2, 1, 0, 27, 5, 0, 22, 1, 1, 0, 1, 1, 1]' : 0.095356}", "{'[3, 0, 4, 6, 2, 2, 1, 0, 27, 5, 0, 22, 1, 1, 0, 1, 1, 1]' : 0.0952802}", "{'[3, 0, 4, 6, 2, 2, 1, 0, 27, 5, 0, 22, 1, 1, 0, 1, 1, 1]' : 0.0955069}", "{'[3, 0, 4, 6, 2, 2, 1, 0, 27, 5, 0, 22, 1, 1, 0, 1, 1, 1]' : 0.095834}", "{'[3, 0, 4, 6, 2, 2, 1, 0, 27, 5, 0, 22, 1, 1, 0, 1, 1, 1]' : 0.095479}", "{'[3, 0, 4, 6, 2, 2, 1, 0, 27, 5, 0, 22, 1, 1, 0, 1, 1, 1]' : 0.095329}", "{'[3, 0, 4, 6, 2, 2, 1, 0, 27, 5, 0, 22, 1, 1, 0, 1, 1, 1]' : 0.0953171}", "{'[3, 0, 4, 6, 2, 2, 1, 0, 27, 5, 0, 22, 1, 1, 0, 1, 1, 1]' : 0.0953169}", "{'[3, 0, 4, 6, 2, 2, 1, 0, 27, 5, 0, 22, 1, 1, 0, 1, 1, 1]' : 0.0967751}", "{'[3, 0, 4, 6, 2, 2, 1, 0, 27, 5, 0, 22, 1, 1, 0, 1, 1, 1]' : 0.100532}", "{'[3, 0, 4, 6, 2, 2, 1, 0, 27, 5, 0, 22, 1, 1, 0, 1, 1, 1]' : 0.100494}", "{'[3, 0, 4, 6, 2, 2, 1, 0, 27, 5, 0, 22, 1, 1, 0, 1, 1, 1]' : 0.100385}", "{'[3, 0, 4, 6, 2, 2, 1, 0, 27, 5, 0, 22, 1, 1, 0, 1, 1, 1]' : 0.100325}", "{'[3, 0, 4, 6, 2, 2, 1, 0, 27, 5, 0, 22, 1, 1, 0, 1, 1, 1]' : 0.100639}", "{'[3, 0, 4, 6, 2, 2, 1, 0, 27, 5, 0, 22, 1, 1, 0, 1, 1, 1]' : 0.100556}", "{'[3, 0, 4, 6, 2, 2, 1, 0, 27, 5, 0, 22, 1, 1, 0, 1, 1, 1]' : 0.100565}", "{'[3, 0, 4, 6, 2, 2, 1, 0, 27, 5, 0, 22, 1, 1, 0, 1, 1, 1]' : 0.100292}"]
returning from 'run': {'[3, 0, 4, 6, 2, 2, 1, 0, 27, 5, 0, 22, 1, 1, 0, 1, 1, 1]': ([0.111796, 0.111935, 0.111837, 0.111862, 0.110889, 0.0969269, 0.0953059, 0.0954659, 0.0952458, 0.0953441, 0.0953181, 0.0954249, 0.0952182, 0.095356, 0.0952802, 0.0955069, 0.095834, 0.095479, 0.095329, 0.0953171, 0.0953169, 0.0967751, 0.100532, 0.100494, 0.100385, 0.100325, 0.100639, 0.100556, 0.100565, 0.100292], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 0, 4, 6, 2, 2, 1, 0, 27, 5, 0, 22, 1, 1, 0, 1, 1, 1]': ([0.111796, 0.111935, 0.111837, 0.111862, 0.110889, 0.0969269, 0.0953059, 0.0954659, 0.0952458, 0.0953441, 0.0953181, 0.0954249, 0.0952182, 0.095356, 0.0952802, 0.0955069, 0.095834, 0.095479, 0.095329, 0.0953171, 0.0953169, 0.0967751, 0.100532, 0.100494, 0.100385, 0.100325, 0.100639, 0.100556, 0.100565, 0.100292], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	82
        Max loop nest depth: 	6
        Additions: 		7128
        Multiplications: 	1672
        Divisions: 		0
        Logical: 		0
        Reads: 			10602
        Writes: 		1127
        Comparisons:		82
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest31.exe __orio_perftest31.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest31.exe  
Program Test Output: 
{'[6, 2, 1, 6, 6, 0, 0, 1, 29, 12, 0, 27, 1, 1, 0, 0, 0, 1]' : 0.0993881}
{'[6, 2, 1, 6, 6, 0, 0, 1, 29, 12, 0, 27, 1, 1, 0, 0, 0, 1]' : 0.0994961}
{'[6, 2, 1, 6, 6, 0, 0, 1, 29, 12, 0, 27, 1, 1, 0, 0, 0, 1]' : 0.0991499}
{'[6, 2, 1, 6, 6, 0, 0, 1, 29, 12, 0, 27, 1, 1, 0, 0, 0, 1]' : 0.0993881}
{'[6, 2, 1, 6, 6, 0, 0, 1, 29, 12, 0, 27, 1, 1, 0, 0, 0, 1]' : 0.0991681}
{'[6, 2, 1, 6, 6, 0, 0, 1, 29, 12, 0, 27, 1, 1, 0, 0, 0, 1]' : 0.0994689}
{'[6, 2, 1, 6, 6, 0, 0, 1, 29, 12, 0, 27, 1, 1, 0, 0, 0, 1]' : 0.0994232}
{'[6, 2, 1, 6, 6, 0, 0, 1, 29, 12, 0, 27, 1, 1, 0, 0, 0, 1]' : 0.0992489}
{'[6, 2, 1, 6, 6, 0, 0, 1, 29, 12, 0, 27, 1, 1, 0, 0, 0, 1]' : 0.099242}
{'[6, 2, 1, 6, 6, 0, 0, 1, 29, 12, 0, 27, 1, 1, 0, 0, 0, 1]' : 0.0991578}
{'[6, 2, 1, 6, 6, 0, 0, 1, 29, 12, 0, 27, 1, 1, 0, 0, 0, 1]' : 0.0993631}
{'[6, 2, 1, 6, 6, 0, 0, 1, 29, 12, 0, 27, 1, 1, 0, 0, 0, 1]' : 0.099247}
{'[6, 2, 1, 6, 6, 0, 0, 1, 29, 12, 0, 27, 1, 1, 0, 0, 0, 1]' : 0.099355}
{'[6, 2, 1, 6, 6, 0, 0, 1, 29, 12, 0, 27, 1, 1, 0, 0, 0, 1]' : 0.0994561}
{'[6, 2, 1, 6, 6, 0, 0, 1, 29, 12, 0, 27, 1, 1, 0, 0, 0, 1]' : 0.0991781}
{'[6, 2, 1, 6, 6, 0, 0, 1, 29, 12, 0, 27, 1, 1, 0, 0, 0, 1]' : 0.0992551}
{'[6, 2, 1, 6, 6, 0, 0, 1, 29, 12, 0, 27, 1, 1, 0, 0, 0, 1]' : 0.0993962}
{'[6, 2, 1, 6, 6, 0, 0, 1, 29, 12, 0, 27, 1, 1, 0, 0, 0, 1]' : 0.0994089}
{'[6, 2, 1, 6, 6, 0, 0, 1, 29, 12, 0, 27, 1, 1, 0, 0, 0, 1]' : 0.099478}
{'[6, 2, 1, 6, 6, 0, 0, 1, 29, 12, 0, 27, 1, 1, 0, 0, 0, 1]' : 0.0992191}
{'[6, 2, 1, 6, 6, 0, 0, 1, 29, 12, 0, 27, 1, 1, 0, 0, 0, 1]' : 0.0992789}
{'[6, 2, 1, 6, 6, 0, 0, 1, 29, 12, 0, 27, 1, 1, 0, 0, 0, 1]' : 0.099268}
{'[6, 2, 1, 6, 6, 0, 0, 1, 29, 12, 0, 27, 1, 1, 0, 0, 0, 1]' : 0.099164}
{'[6, 2, 1, 6, 6, 0, 0, 1, 29, 12, 0, 27, 1, 1, 0, 0, 0, 1]' : 0.0991321}
{'[6, 2, 1, 6, 6, 0, 0, 1, 29, 12, 0, 27, 1, 1, 0, 0, 0, 1]' : 0.099256}
{'[6, 2, 1, 6, 6, 0, 0, 1, 29, 12, 0, 27, 1, 1, 0, 0, 0, 1]' : 0.099174}
{'[6, 2, 1, 6, 6, 0, 0, 1, 29, 12, 0, 27, 1, 1, 0, 0, 0, 1]' : 0.0991971}
{'[6, 2, 1, 6, 6, 0, 0, 1, 29, 12, 0, 27, 1, 1, 0, 0, 0, 1]' : 0.0995789}
{'[6, 2, 1, 6, 6, 0, 0, 1, 29, 12, 0, 27, 1, 1, 0, 0, 0, 1]' : 0.0995901}
{'[6, 2, 1, 6, 6, 0, 0, 1, 29, 12, 0, 27, 1, 1, 0, 0, 0, 1]' : 0.0991921}

out:
 ["{'[6, 2, 1, 6, 6, 0, 0, 1, 29, 12, 0, 27, 1, 1, 0, 0, 0, 1]' : 0.0993881}", "{'[6, 2, 1, 6, 6, 0, 0, 1, 29, 12, 0, 27, 1, 1, 0, 0, 0, 1]' : 0.0994961}", "{'[6, 2, 1, 6, 6, 0, 0, 1, 29, 12, 0, 27, 1, 1, 0, 0, 0, 1]' : 0.0991499}", "{'[6, 2, 1, 6, 6, 0, 0, 1, 29, 12, 0, 27, 1, 1, 0, 0, 0, 1]' : 0.0993881}", "{'[6, 2, 1, 6, 6, 0, 0, 1, 29, 12, 0, 27, 1, 1, 0, 0, 0, 1]' : 0.0991681}", "{'[6, 2, 1, 6, 6, 0, 0, 1, 29, 12, 0, 27, 1, 1, 0, 0, 0, 1]' : 0.0994689}", "{'[6, 2, 1, 6, 6, 0, 0, 1, 29, 12, 0, 27, 1, 1, 0, 0, 0, 1]' : 0.0994232}", "{'[6, 2, 1, 6, 6, 0, 0, 1, 29, 12, 0, 27, 1, 1, 0, 0, 0, 1]' : 0.0992489}", "{'[6, 2, 1, 6, 6, 0, 0, 1, 29, 12, 0, 27, 1, 1, 0, 0, 0, 1]' : 0.099242}", "{'[6, 2, 1, 6, 6, 0, 0, 1, 29, 12, 0, 27, 1, 1, 0, 0, 0, 1]' : 0.0991578}", "{'[6, 2, 1, 6, 6, 0, 0, 1, 29, 12, 0, 27, 1, 1, 0, 0, 0, 1]' : 0.0993631}", "{'[6, 2, 1, 6, 6, 0, 0, 1, 29, 12, 0, 27, 1, 1, 0, 0, 0, 1]' : 0.099247}", "{'[6, 2, 1, 6, 6, 0, 0, 1, 29, 12, 0, 27, 1, 1, 0, 0, 0, 1]' : 0.099355}", "{'[6, 2, 1, 6, 6, 0, 0, 1, 29, 12, 0, 27, 1, 1, 0, 0, 0, 1]' : 0.0994561}", "{'[6, 2, 1, 6, 6, 0, 0, 1, 29, 12, 0, 27, 1, 1, 0, 0, 0, 1]' : 0.0991781}", "{'[6, 2, 1, 6, 6, 0, 0, 1, 29, 12, 0, 27, 1, 1, 0, 0, 0, 1]' : 0.0992551}", "{'[6, 2, 1, 6, 6, 0, 0, 1, 29, 12, 0, 27, 1, 1, 0, 0, 0, 1]' : 0.0993962}", "{'[6, 2, 1, 6, 6, 0, 0, 1, 29, 12, 0, 27, 1, 1, 0, 0, 0, 1]' : 0.0994089}", "{'[6, 2, 1, 6, 6, 0, 0, 1, 29, 12, 0, 27, 1, 1, 0, 0, 0, 1]' : 0.099478}", "{'[6, 2, 1, 6, 6, 0, 0, 1, 29, 12, 0, 27, 1, 1, 0, 0, 0, 1]' : 0.0992191}", "{'[6, 2, 1, 6, 6, 0, 0, 1, 29, 12, 0, 27, 1, 1, 0, 0, 0, 1]' : 0.0992789}", "{'[6, 2, 1, 6, 6, 0, 0, 1, 29, 12, 0, 27, 1, 1, 0, 0, 0, 1]' : 0.099268}", "{'[6, 2, 1, 6, 6, 0, 0, 1, 29, 12, 0, 27, 1, 1, 0, 0, 0, 1]' : 0.099164}", "{'[6, 2, 1, 6, 6, 0, 0, 1, 29, 12, 0, 27, 1, 1, 0, 0, 0, 1]' : 0.0991321}", "{'[6, 2, 1, 6, 6, 0, 0, 1, 29, 12, 0, 27, 1, 1, 0, 0, 0, 1]' : 0.099256}", "{'[6, 2, 1, 6, 6, 0, 0, 1, 29, 12, 0, 27, 1, 1, 0, 0, 0, 1]' : 0.099174}", "{'[6, 2, 1, 6, 6, 0, 0, 1, 29, 12, 0, 27, 1, 1, 0, 0, 0, 1]' : 0.0991971}", "{'[6, 2, 1, 6, 6, 0, 0, 1, 29, 12, 0, 27, 1, 1, 0, 0, 0, 1]' : 0.0995789}", "{'[6, 2, 1, 6, 6, 0, 0, 1, 29, 12, 0, 27, 1, 1, 0, 0, 0, 1]' : 0.0995901}", "{'[6, 2, 1, 6, 6, 0, 0, 1, 29, 12, 0, 27, 1, 1, 0, 0, 0, 1]' : 0.0991921}"]
returning from 'run': {'[6, 2, 1, 6, 6, 0, 0, 1, 29, 12, 0, 27, 1, 1, 0, 0, 0, 1]': ([0.0993881, 0.0994961, 0.0991499, 0.0993881, 0.0991681, 0.0994689, 0.0994232, 0.0992489, 0.099242, 0.0991578, 0.0993631, 0.099247, 0.099355, 0.0994561, 0.0991781, 0.0992551, 0.0993962, 0.0994089, 0.099478, 0.0992191, 0.0992789, 0.099268, 0.099164, 0.0991321, 0.099256, 0.099174, 0.0991971, 0.0995789, 0.0995901, 0.0991921], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 2, 1, 6, 6, 0, 0, 1, 29, 12, 0, 27, 1, 1, 0, 0, 0, 1]': ([0.0993881, 0.0994961, 0.0991499, 0.0993881, 0.0991681, 0.0994689, 0.0994232, 0.0992489, 0.099242, 0.0991578, 0.0993631, 0.099247, 0.099355, 0.0994561, 0.0991781, 0.0992551, 0.0993962, 0.0994089, 0.099478, 0.0992191, 0.0992789, 0.099268, 0.099164, 0.0991321, 0.099256, 0.099174, 0.0991971, 0.0995789, 0.0995901, 0.0991921], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = iii
Code stats:
        Number of loops: 	156
        Max loop nest depth: 	4
        Additions: 		7073
        Multiplications: 	2668
        Divisions: 		0
        Logical: 		0
        Reads: 			12694
        Writes: 		2045
        Comparisons:		156
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest32.exe __orio_perftest32.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest32.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest32.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest32.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest32.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	6
        Additions: 		3897
        Multiplications: 	1914
        Divisions: 		0
        Logical: 		0
        Reads: 			7379
        Writes: 		1183
        Comparisons:		20
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest33.exe __orio_perftest33.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest33.exe  
Program Test Output: 
{'[1, 6, 6, 6, 0, 6, 0, 0, 12, 0, 6, 19, 2, 0, 0, 1, 0, 1]' : 0.174286}
{'[1, 6, 6, 6, 0, 6, 0, 0, 12, 0, 6, 19, 2, 0, 0, 1, 0, 1]' : 0.174076}
{'[1, 6, 6, 6, 0, 6, 0, 0, 12, 0, 6, 19, 2, 0, 0, 1, 0, 1]' : 0.158998}
{'[1, 6, 6, 6, 0, 6, 0, 0, 12, 0, 6, 19, 2, 0, 0, 1, 0, 1]' : 0.14602}
{'[1, 6, 6, 6, 0, 6, 0, 0, 12, 0, 6, 19, 2, 0, 0, 1, 0, 1]' : 0.146173}
{'[1, 6, 6, 6, 0, 6, 0, 0, 12, 0, 6, 19, 2, 0, 0, 1, 0, 1]' : 0.146207}
{'[1, 6, 6, 6, 0, 6, 0, 0, 12, 0, 6, 19, 2, 0, 0, 1, 0, 1]' : 0.146317}
{'[1, 6, 6, 6, 0, 6, 0, 0, 12, 0, 6, 19, 2, 0, 0, 1, 0, 1]' : 0.145952}
{'[1, 6, 6, 6, 0, 6, 0, 0, 12, 0, 6, 19, 2, 0, 0, 1, 0, 1]' : 0.146002}
{'[1, 6, 6, 6, 0, 6, 0, 0, 12, 0, 6, 19, 2, 0, 0, 1, 0, 1]' : 0.145922}
{'[1, 6, 6, 6, 0, 6, 0, 0, 12, 0, 6, 19, 2, 0, 0, 1, 0, 1]' : 0.145898}
{'[1, 6, 6, 6, 0, 6, 0, 0, 12, 0, 6, 19, 2, 0, 0, 1, 0, 1]' : 0.146405}
{'[1, 6, 6, 6, 0, 6, 0, 0, 12, 0, 6, 19, 2, 0, 0, 1, 0, 1]' : 0.145988}
{'[1, 6, 6, 6, 0, 6, 0, 0, 12, 0, 6, 19, 2, 0, 0, 1, 0, 1]' : 0.146093}
{'[1, 6, 6, 6, 0, 6, 0, 0, 12, 0, 6, 19, 2, 0, 0, 1, 0, 1]' : 0.145873}
{'[1, 6, 6, 6, 0, 6, 0, 0, 12, 0, 6, 19, 2, 0, 0, 1, 0, 1]' : 0.146029}
{'[1, 6, 6, 6, 0, 6, 0, 0, 12, 0, 6, 19, 2, 0, 0, 1, 0, 1]' : 0.14598}
{'[1, 6, 6, 6, 0, 6, 0, 0, 12, 0, 6, 19, 2, 0, 0, 1, 0, 1]' : 0.145997}
{'[1, 6, 6, 6, 0, 6, 0, 0, 12, 0, 6, 19, 2, 0, 0, 1, 0, 1]' : 0.14608}
{'[1, 6, 6, 6, 0, 6, 0, 0, 12, 0, 6, 19, 2, 0, 0, 1, 0, 1]' : 0.146367}
{'[1, 6, 6, 6, 0, 6, 0, 0, 12, 0, 6, 19, 2, 0, 0, 1, 0, 1]' : 0.145979}
{'[1, 6, 6, 6, 0, 6, 0, 0, 12, 0, 6, 19, 2, 0, 0, 1, 0, 1]' : 0.146107}
{'[1, 6, 6, 6, 0, 6, 0, 0, 12, 0, 6, 19, 2, 0, 0, 1, 0, 1]' : 0.14607}
{'[1, 6, 6, 6, 0, 6, 0, 0, 12, 0, 6, 19, 2, 0, 0, 1, 0, 1]' : 0.14592}
{'[1, 6, 6, 6, 0, 6, 0, 0, 12, 0, 6, 19, 2, 0, 0, 1, 0, 1]' : 0.145901}
{'[1, 6, 6, 6, 0, 6, 0, 0, 12, 0, 6, 19, 2, 0, 0, 1, 0, 1]' : 0.146129}
{'[1, 6, 6, 6, 0, 6, 0, 0, 12, 0, 6, 19, 2, 0, 0, 1, 0, 1]' : 0.146357}
{'[1, 6, 6, 6, 0, 6, 0, 0, 12, 0, 6, 19, 2, 0, 0, 1, 0, 1]' : 0.146364}
{'[1, 6, 6, 6, 0, 6, 0, 0, 12, 0, 6, 19, 2, 0, 0, 1, 0, 1]' : 0.146153}
{'[1, 6, 6, 6, 0, 6, 0, 0, 12, 0, 6, 19, 2, 0, 0, 1, 0, 1]' : 0.148416}

out:
 ["{'[1, 6, 6, 6, 0, 6, 0, 0, 12, 0, 6, 19, 2, 0, 0, 1, 0, 1]' : 0.174286}", "{'[1, 6, 6, 6, 0, 6, 0, 0, 12, 0, 6, 19, 2, 0, 0, 1, 0, 1]' : 0.174076}", "{'[1, 6, 6, 6, 0, 6, 0, 0, 12, 0, 6, 19, 2, 0, 0, 1, 0, 1]' : 0.158998}", "{'[1, 6, 6, 6, 0, 6, 0, 0, 12, 0, 6, 19, 2, 0, 0, 1, 0, 1]' : 0.14602}", "{'[1, 6, 6, 6, 0, 6, 0, 0, 12, 0, 6, 19, 2, 0, 0, 1, 0, 1]' : 0.146173}", "{'[1, 6, 6, 6, 0, 6, 0, 0, 12, 0, 6, 19, 2, 0, 0, 1, 0, 1]' : 0.146207}", "{'[1, 6, 6, 6, 0, 6, 0, 0, 12, 0, 6, 19, 2, 0, 0, 1, 0, 1]' : 0.146317}", "{'[1, 6, 6, 6, 0, 6, 0, 0, 12, 0, 6, 19, 2, 0, 0, 1, 0, 1]' : 0.145952}", "{'[1, 6, 6, 6, 0, 6, 0, 0, 12, 0, 6, 19, 2, 0, 0, 1, 0, 1]' : 0.146002}", "{'[1, 6, 6, 6, 0, 6, 0, 0, 12, 0, 6, 19, 2, 0, 0, 1, 0, 1]' : 0.145922}", "{'[1, 6, 6, 6, 0, 6, 0, 0, 12, 0, 6, 19, 2, 0, 0, 1, 0, 1]' : 0.145898}", "{'[1, 6, 6, 6, 0, 6, 0, 0, 12, 0, 6, 19, 2, 0, 0, 1, 0, 1]' : 0.146405}", "{'[1, 6, 6, 6, 0, 6, 0, 0, 12, 0, 6, 19, 2, 0, 0, 1, 0, 1]' : 0.145988}", "{'[1, 6, 6, 6, 0, 6, 0, 0, 12, 0, 6, 19, 2, 0, 0, 1, 0, 1]' : 0.146093}", "{'[1, 6, 6, 6, 0, 6, 0, 0, 12, 0, 6, 19, 2, 0, 0, 1, 0, 1]' : 0.145873}", "{'[1, 6, 6, 6, 0, 6, 0, 0, 12, 0, 6, 19, 2, 0, 0, 1, 0, 1]' : 0.146029}", "{'[1, 6, 6, 6, 0, 6, 0, 0, 12, 0, 6, 19, 2, 0, 0, 1, 0, 1]' : 0.14598}", "{'[1, 6, 6, 6, 0, 6, 0, 0, 12, 0, 6, 19, 2, 0, 0, 1, 0, 1]' : 0.145997}", "{'[1, 6, 6, 6, 0, 6, 0, 0, 12, 0, 6, 19, 2, 0, 0, 1, 0, 1]' : 0.14608}", "{'[1, 6, 6, 6, 0, 6, 0, 0, 12, 0, 6, 19, 2, 0, 0, 1, 0, 1]' : 0.146367}", "{'[1, 6, 6, 6, 0, 6, 0, 0, 12, 0, 6, 19, 2, 0, 0, 1, 0, 1]' : 0.145979}", "{'[1, 6, 6, 6, 0, 6, 0, 0, 12, 0, 6, 19, 2, 0, 0, 1, 0, 1]' : 0.146107}", "{'[1, 6, 6, 6, 0, 6, 0, 0, 12, 0, 6, 19, 2, 0, 0, 1, 0, 1]' : 0.14607}", "{'[1, 6, 6, 6, 0, 6, 0, 0, 12, 0, 6, 19, 2, 0, 0, 1, 0, 1]' : 0.14592}", "{'[1, 6, 6, 6, 0, 6, 0, 0, 12, 0, 6, 19, 2, 0, 0, 1, 0, 1]' : 0.145901}", "{'[1, 6, 6, 6, 0, 6, 0, 0, 12, 0, 6, 19, 2, 0, 0, 1, 0, 1]' : 0.146129}", "{'[1, 6, 6, 6, 0, 6, 0, 0, 12, 0, 6, 19, 2, 0, 0, 1, 0, 1]' : 0.146357}", "{'[1, 6, 6, 6, 0, 6, 0, 0, 12, 0, 6, 19, 2, 0, 0, 1, 0, 1]' : 0.146364}", "{'[1, 6, 6, 6, 0, 6, 0, 0, 12, 0, 6, 19, 2, 0, 0, 1, 0, 1]' : 0.146153}", "{'[1, 6, 6, 6, 0, 6, 0, 0, 12, 0, 6, 19, 2, 0, 0, 1, 0, 1]' : 0.148416}"]
returning from 'run': {'[1, 6, 6, 6, 0, 6, 0, 0, 12, 0, 6, 19, 2, 0, 0, 1, 0, 1]': ([0.174286, 0.174076, 0.158998, 0.14602, 0.146173, 0.146207, 0.146317, 0.145952, 0.146002, 0.145922, 0.145898, 0.146405, 0.145988, 0.146093, 0.145873, 0.146029, 0.14598, 0.145997, 0.14608, 0.146367, 0.145979, 0.146107, 0.14607, 0.14592, 0.145901, 0.146129, 0.146357, 0.146364, 0.146153, 0.148416], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 6, 6, 6, 0, 6, 0, 0, 12, 0, 6, 19, 2, 0, 0, 1, 0, 1]': ([0.174286, 0.174076, 0.158998, 0.14602, 0.146173, 0.146207, 0.146317, 0.145952, 0.146002, 0.145922, 0.145898, 0.146405, 0.145988, 0.146093, 0.145873, 0.146029, 0.14598, 0.145997, 0.14608, 0.146367, 0.145979, 0.146107, 0.14607, 0.14592, 0.145901, 0.146129, 0.146357, 0.146364, 0.146153, 0.148416], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	6
        Additions: 		1397
        Multiplications: 	630
        Divisions: 		0
        Logical: 		0
        Reads: 			2723
        Writes: 		462
        Comparisons:		22
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest34.exe __orio_perftest34.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest34.exe  
Program Test Output: 
{'[5, 6, 1, 4, 4, 2, 1, 0, 14, 0, 24, 0, 1, 0, 1, 1, 1, 0]' : 0.0917652}
{'[5, 6, 1, 4, 4, 2, 1, 0, 14, 0, 24, 0, 1, 0, 1, 1, 1, 0]' : 0.091784}
{'[5, 6, 1, 4, 4, 2, 1, 0, 14, 0, 24, 0, 1, 0, 1, 1, 1, 0]' : 0.0915251}
{'[5, 6, 1, 4, 4, 2, 1, 0, 14, 0, 24, 0, 1, 0, 1, 1, 1, 0]' : 0.091671}
{'[5, 6, 1, 4, 4, 2, 1, 0, 14, 0, 24, 0, 1, 0, 1, 1, 1, 0]' : 0.0916202}
{'[5, 6, 1, 4, 4, 2, 1, 0, 14, 0, 24, 0, 1, 0, 1, 1, 1, 0]' : 0.0916479}
{'[5, 6, 1, 4, 4, 2, 1, 0, 14, 0, 24, 0, 1, 0, 1, 1, 1, 0]' : 0.0916991}
{'[5, 6, 1, 4, 4, 2, 1, 0, 14, 0, 24, 0, 1, 0, 1, 1, 1, 0]' : 0.091429}
{'[5, 6, 1, 4, 4, 2, 1, 0, 14, 0, 24, 0, 1, 0, 1, 1, 1, 0]' : 0.091713}
{'[5, 6, 1, 4, 4, 2, 1, 0, 14, 0, 24, 0, 1, 0, 1, 1, 1, 0]' : 0.09148}
{'[5, 6, 1, 4, 4, 2, 1, 0, 14, 0, 24, 0, 1, 0, 1, 1, 1, 0]' : 0.0916231}
{'[5, 6, 1, 4, 4, 2, 1, 0, 14, 0, 24, 0, 1, 0, 1, 1, 1, 0]' : 0.0915411}
{'[5, 6, 1, 4, 4, 2, 1, 0, 14, 0, 24, 0, 1, 0, 1, 1, 1, 0]' : 0.0918341}
{'[5, 6, 1, 4, 4, 2, 1, 0, 14, 0, 24, 0, 1, 0, 1, 1, 1, 0]' : 0.091573}
{'[5, 6, 1, 4, 4, 2, 1, 0, 14, 0, 24, 0, 1, 0, 1, 1, 1, 0]' : 0.0915349}
{'[5, 6, 1, 4, 4, 2, 1, 0, 14, 0, 24, 0, 1, 0, 1, 1, 1, 0]' : 0.091469}
{'[5, 6, 1, 4, 4, 2, 1, 0, 14, 0, 24, 0, 1, 0, 1, 1, 1, 0]' : 0.0916002}
{'[5, 6, 1, 4, 4, 2, 1, 0, 14, 0, 24, 0, 1, 0, 1, 1, 1, 0]' : 0.0915849}
{'[5, 6, 1, 4, 4, 2, 1, 0, 14, 0, 24, 0, 1, 0, 1, 1, 1, 0]' : 0.0916541}
{'[5, 6, 1, 4, 4, 2, 1, 0, 14, 0, 24, 0, 1, 0, 1, 1, 1, 0]' : 0.0915589}
{'[5, 6, 1, 4, 4, 2, 1, 0, 14, 0, 24, 0, 1, 0, 1, 1, 1, 0]' : 0.091681}
{'[5, 6, 1, 4, 4, 2, 1, 0, 14, 0, 24, 0, 1, 0, 1, 1, 1, 0]' : 0.0915132}
{'[5, 6, 1, 4, 4, 2, 1, 0, 14, 0, 24, 0, 1, 0, 1, 1, 1, 0]' : 0.0914009}
{'[5, 6, 1, 4, 4, 2, 1, 0, 14, 0, 24, 0, 1, 0, 1, 1, 1, 0]' : 0.0914881}
{'[5, 6, 1, 4, 4, 2, 1, 0, 14, 0, 24, 0, 1, 0, 1, 1, 1, 0]' : 0.0915339}
{'[5, 6, 1, 4, 4, 2, 1, 0, 14, 0, 24, 0, 1, 0, 1, 1, 1, 0]' : 0.0915132}
{'[5, 6, 1, 4, 4, 2, 1, 0, 14, 0, 24, 0, 1, 0, 1, 1, 1, 0]' : 0.0915308}
{'[5, 6, 1, 4, 4, 2, 1, 0, 14, 0, 24, 0, 1, 0, 1, 1, 1, 0]' : 0.091645}
{'[5, 6, 1, 4, 4, 2, 1, 0, 14, 0, 24, 0, 1, 0, 1, 1, 1, 0]' : 0.0915248}
{'[5, 6, 1, 4, 4, 2, 1, 0, 14, 0, 24, 0, 1, 0, 1, 1, 1, 0]' : 0.091692}

out:
 ["{'[5, 6, 1, 4, 4, 2, 1, 0, 14, 0, 24, 0, 1, 0, 1, 1, 1, 0]' : 0.0917652}", "{'[5, 6, 1, 4, 4, 2, 1, 0, 14, 0, 24, 0, 1, 0, 1, 1, 1, 0]' : 0.091784}", "{'[5, 6, 1, 4, 4, 2, 1, 0, 14, 0, 24, 0, 1, 0, 1, 1, 1, 0]' : 0.0915251}", "{'[5, 6, 1, 4, 4, 2, 1, 0, 14, 0, 24, 0, 1, 0, 1, 1, 1, 0]' : 0.091671}", "{'[5, 6, 1, 4, 4, 2, 1, 0, 14, 0, 24, 0, 1, 0, 1, 1, 1, 0]' : 0.0916202}", "{'[5, 6, 1, 4, 4, 2, 1, 0, 14, 0, 24, 0, 1, 0, 1, 1, 1, 0]' : 0.0916479}", "{'[5, 6, 1, 4, 4, 2, 1, 0, 14, 0, 24, 0, 1, 0, 1, 1, 1, 0]' : 0.0916991}", "{'[5, 6, 1, 4, 4, 2, 1, 0, 14, 0, 24, 0, 1, 0, 1, 1, 1, 0]' : 0.091429}", "{'[5, 6, 1, 4, 4, 2, 1, 0, 14, 0, 24, 0, 1, 0, 1, 1, 1, 0]' : 0.091713}", "{'[5, 6, 1, 4, 4, 2, 1, 0, 14, 0, 24, 0, 1, 0, 1, 1, 1, 0]' : 0.09148}", "{'[5, 6, 1, 4, 4, 2, 1, 0, 14, 0, 24, 0, 1, 0, 1, 1, 1, 0]' : 0.0916231}", "{'[5, 6, 1, 4, 4, 2, 1, 0, 14, 0, 24, 0, 1, 0, 1, 1, 1, 0]' : 0.0915411}", "{'[5, 6, 1, 4, 4, 2, 1, 0, 14, 0, 24, 0, 1, 0, 1, 1, 1, 0]' : 0.0918341}", "{'[5, 6, 1, 4, 4, 2, 1, 0, 14, 0, 24, 0, 1, 0, 1, 1, 1, 0]' : 0.091573}", "{'[5, 6, 1, 4, 4, 2, 1, 0, 14, 0, 24, 0, 1, 0, 1, 1, 1, 0]' : 0.0915349}", "{'[5, 6, 1, 4, 4, 2, 1, 0, 14, 0, 24, 0, 1, 0, 1, 1, 1, 0]' : 0.091469}", "{'[5, 6, 1, 4, 4, 2, 1, 0, 14, 0, 24, 0, 1, 0, 1, 1, 1, 0]' : 0.0916002}", "{'[5, 6, 1, 4, 4, 2, 1, 0, 14, 0, 24, 0, 1, 0, 1, 1, 1, 0]' : 0.0915849}", "{'[5, 6, 1, 4, 4, 2, 1, 0, 14, 0, 24, 0, 1, 0, 1, 1, 1, 0]' : 0.0916541}", "{'[5, 6, 1, 4, 4, 2, 1, 0, 14, 0, 24, 0, 1, 0, 1, 1, 1, 0]' : 0.0915589}", "{'[5, 6, 1, 4, 4, 2, 1, 0, 14, 0, 24, 0, 1, 0, 1, 1, 1, 0]' : 0.091681}", "{'[5, 6, 1, 4, 4, 2, 1, 0, 14, 0, 24, 0, 1, 0, 1, 1, 1, 0]' : 0.0915132}", "{'[5, 6, 1, 4, 4, 2, 1, 0, 14, 0, 24, 0, 1, 0, 1, 1, 1, 0]' : 0.0914009}", "{'[5, 6, 1, 4, 4, 2, 1, 0, 14, 0, 24, 0, 1, 0, 1, 1, 1, 0]' : 0.0914881}", "{'[5, 6, 1, 4, 4, 2, 1, 0, 14, 0, 24, 0, 1, 0, 1, 1, 1, 0]' : 0.0915339}", "{'[5, 6, 1, 4, 4, 2, 1, 0, 14, 0, 24, 0, 1, 0, 1, 1, 1, 0]' : 0.0915132}", "{'[5, 6, 1, 4, 4, 2, 1, 0, 14, 0, 24, 0, 1, 0, 1, 1, 1, 0]' : 0.0915308}", "{'[5, 6, 1, 4, 4, 2, 1, 0, 14, 0, 24, 0, 1, 0, 1, 1, 1, 0]' : 0.091645}", "{'[5, 6, 1, 4, 4, 2, 1, 0, 14, 0, 24, 0, 1, 0, 1, 1, 1, 0]' : 0.0915248}", "{'[5, 6, 1, 4, 4, 2, 1, 0, 14, 0, 24, 0, 1, 0, 1, 1, 1, 0]' : 0.091692}"]
returning from 'run': {'[5, 6, 1, 4, 4, 2, 1, 0, 14, 0, 24, 0, 1, 0, 1, 1, 1, 0]': ([0.0917652, 0.091784, 0.0915251, 0.091671, 0.0916202, 0.0916479, 0.0916991, 0.091429, 0.091713, 0.09148, 0.0916231, 0.0915411, 0.0918341, 0.091573, 0.0915349, 0.091469, 0.0916002, 0.0915849, 0.0916541, 0.0915589, 0.091681, 0.0915132, 0.0914009, 0.0914881, 0.0915339, 0.0915132, 0.0915308, 0.091645, 0.0915248, 0.091692], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 6, 1, 4, 4, 2, 1, 0, 14, 0, 24, 0, 1, 0, 1, 1, 1, 0]': ([0.0917652, 0.091784, 0.0915251, 0.091671, 0.0916202, 0.0916479, 0.0916991, 0.091429, 0.091713, 0.09148, 0.0916231, 0.0915411, 0.0918341, 0.091573, 0.0915349, 0.091469, 0.0916002, 0.0915849, 0.0916541, 0.0915589, 0.091681, 0.0915132, 0.0914009, 0.0914881, 0.0915339, 0.0915132, 0.0915308, 0.091645, 0.0915248, 0.091692], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	26
        Max loop nest depth: 	6
        Additions: 		1119
        Multiplications: 	480
        Divisions: 		0
        Logical: 		0
        Reads: 			2340
        Writes: 		455
        Comparisons:		26
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest35.exe __orio_perftest35.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest35.exe  
Program Test Output: 
{'[4, 0, 1, 5, 3, 3, 1, 0, 9, 6, 0, 27, 0, 0, 0, 1, 1, 0]' : 0.138599}
{'[4, 0, 1, 5, 3, 3, 1, 0, 9, 6, 0, 27, 0, 0, 0, 1, 1, 0]' : 0.138491}
{'[4, 0, 1, 5, 3, 3, 1, 0, 9, 6, 0, 27, 0, 0, 0, 1, 1, 0]' : 0.138611}
{'[4, 0, 1, 5, 3, 3, 1, 0, 9, 6, 0, 27, 0, 0, 0, 1, 1, 0]' : 0.131373}
{'[4, 0, 1, 5, 3, 3, 1, 0, 9, 6, 0, 27, 0, 0, 0, 1, 1, 0]' : 0.117038}
{'[4, 0, 1, 5, 3, 3, 1, 0, 9, 6, 0, 27, 0, 0, 0, 1, 1, 0]' : 0.116854}
{'[4, 0, 1, 5, 3, 3, 1, 0, 9, 6, 0, 27, 0, 0, 0, 1, 1, 0]' : 0.116817}
{'[4, 0, 1, 5, 3, 3, 1, 0, 9, 6, 0, 27, 0, 0, 0, 1, 1, 0]' : 0.117139}
{'[4, 0, 1, 5, 3, 3, 1, 0, 9, 6, 0, 27, 0, 0, 0, 1, 1, 0]' : 0.118017}
{'[4, 0, 1, 5, 3, 3, 1, 0, 9, 6, 0, 27, 0, 0, 0, 1, 1, 0]' : 0.117914}
{'[4, 0, 1, 5, 3, 3, 1, 0, 9, 6, 0, 27, 0, 0, 0, 1, 1, 0]' : 0.11817}
{'[4, 0, 1, 5, 3, 3, 1, 0, 9, 6, 0, 27, 0, 0, 0, 1, 1, 0]' : 0.118237}
{'[4, 0, 1, 5, 3, 3, 1, 0, 9, 6, 0, 27, 0, 0, 0, 1, 1, 0]' : 0.11785}
{'[4, 0, 1, 5, 3, 3, 1, 0, 9, 6, 0, 27, 0, 0, 0, 1, 1, 0]' : 0.117123}
{'[4, 0, 1, 5, 3, 3, 1, 0, 9, 6, 0, 27, 0, 0, 0, 1, 1, 0]' : 0.11684}
{'[4, 0, 1, 5, 3, 3, 1, 0, 9, 6, 0, 27, 0, 0, 0, 1, 1, 0]' : 0.116811}
{'[4, 0, 1, 5, 3, 3, 1, 0, 9, 6, 0, 27, 0, 0, 0, 1, 1, 0]' : 0.11734}
{'[4, 0, 1, 5, 3, 3, 1, 0, 9, 6, 0, 27, 0, 0, 0, 1, 1, 0]' : 0.117982}
{'[4, 0, 1, 5, 3, 3, 1, 0, 9, 6, 0, 27, 0, 0, 0, 1, 1, 0]' : 0.118281}
{'[4, 0, 1, 5, 3, 3, 1, 0, 9, 6, 0, 27, 0, 0, 0, 1, 1, 0]' : 0.117925}
{'[4, 0, 1, 5, 3, 3, 1, 0, 9, 6, 0, 27, 0, 0, 0, 1, 1, 0]' : 0.117967}
{'[4, 0, 1, 5, 3, 3, 1, 0, 9, 6, 0, 27, 0, 0, 0, 1, 1, 0]' : 0.118104}
{'[4, 0, 1, 5, 3, 3, 1, 0, 9, 6, 0, 27, 0, 0, 0, 1, 1, 0]' : 0.117223}
{'[4, 0, 1, 5, 3, 3, 1, 0, 9, 6, 0, 27, 0, 0, 0, 1, 1, 0]' : 0.117284}
{'[4, 0, 1, 5, 3, 3, 1, 0, 9, 6, 0, 27, 0, 0, 0, 1, 1, 0]' : 0.116805}
{'[4, 0, 1, 5, 3, 3, 1, 0, 9, 6, 0, 27, 0, 0, 0, 1, 1, 0]' : 0.117919}
{'[4, 0, 1, 5, 3, 3, 1, 0, 9, 6, 0, 27, 0, 0, 0, 1, 1, 0]' : 0.11811}
{'[4, 0, 1, 5, 3, 3, 1, 0, 9, 6, 0, 27, 0, 0, 0, 1, 1, 0]' : 0.118205}
{'[4, 0, 1, 5, 3, 3, 1, 0, 9, 6, 0, 27, 0, 0, 0, 1, 1, 0]' : 0.118224}
{'[4, 0, 1, 5, 3, 3, 1, 0, 9, 6, 0, 27, 0, 0, 0, 1, 1, 0]' : 0.11824}

out:
 ["{'[4, 0, 1, 5, 3, 3, 1, 0, 9, 6, 0, 27, 0, 0, 0, 1, 1, 0]' : 0.138599}", "{'[4, 0, 1, 5, 3, 3, 1, 0, 9, 6, 0, 27, 0, 0, 0, 1, 1, 0]' : 0.138491}", "{'[4, 0, 1, 5, 3, 3, 1, 0, 9, 6, 0, 27, 0, 0, 0, 1, 1, 0]' : 0.138611}", "{'[4, 0, 1, 5, 3, 3, 1, 0, 9, 6, 0, 27, 0, 0, 0, 1, 1, 0]' : 0.131373}", "{'[4, 0, 1, 5, 3, 3, 1, 0, 9, 6, 0, 27, 0, 0, 0, 1, 1, 0]' : 0.117038}", "{'[4, 0, 1, 5, 3, 3, 1, 0, 9, 6, 0, 27, 0, 0, 0, 1, 1, 0]' : 0.116854}", "{'[4, 0, 1, 5, 3, 3, 1, 0, 9, 6, 0, 27, 0, 0, 0, 1, 1, 0]' : 0.116817}", "{'[4, 0, 1, 5, 3, 3, 1, 0, 9, 6, 0, 27, 0, 0, 0, 1, 1, 0]' : 0.117139}", "{'[4, 0, 1, 5, 3, 3, 1, 0, 9, 6, 0, 27, 0, 0, 0, 1, 1, 0]' : 0.118017}", "{'[4, 0, 1, 5, 3, 3, 1, 0, 9, 6, 0, 27, 0, 0, 0, 1, 1, 0]' : 0.117914}", "{'[4, 0, 1, 5, 3, 3, 1, 0, 9, 6, 0, 27, 0, 0, 0, 1, 1, 0]' : 0.11817}", "{'[4, 0, 1, 5, 3, 3, 1, 0, 9, 6, 0, 27, 0, 0, 0, 1, 1, 0]' : 0.118237}", "{'[4, 0, 1, 5, 3, 3, 1, 0, 9, 6, 0, 27, 0, 0, 0, 1, 1, 0]' : 0.11785}", "{'[4, 0, 1, 5, 3, 3, 1, 0, 9, 6, 0, 27, 0, 0, 0, 1, 1, 0]' : 0.117123}", "{'[4, 0, 1, 5, 3, 3, 1, 0, 9, 6, 0, 27, 0, 0, 0, 1, 1, 0]' : 0.11684}", "{'[4, 0, 1, 5, 3, 3, 1, 0, 9, 6, 0, 27, 0, 0, 0, 1, 1, 0]' : 0.116811}", "{'[4, 0, 1, 5, 3, 3, 1, 0, 9, 6, 0, 27, 0, 0, 0, 1, 1, 0]' : 0.11734}", "{'[4, 0, 1, 5, 3, 3, 1, 0, 9, 6, 0, 27, 0, 0, 0, 1, 1, 0]' : 0.117982}", "{'[4, 0, 1, 5, 3, 3, 1, 0, 9, 6, 0, 27, 0, 0, 0, 1, 1, 0]' : 0.118281}", "{'[4, 0, 1, 5, 3, 3, 1, 0, 9, 6, 0, 27, 0, 0, 0, 1, 1, 0]' : 0.117925}", "{'[4, 0, 1, 5, 3, 3, 1, 0, 9, 6, 0, 27, 0, 0, 0, 1, 1, 0]' : 0.117967}", "{'[4, 0, 1, 5, 3, 3, 1, 0, 9, 6, 0, 27, 0, 0, 0, 1, 1, 0]' : 0.118104}", "{'[4, 0, 1, 5, 3, 3, 1, 0, 9, 6, 0, 27, 0, 0, 0, 1, 1, 0]' : 0.117223}", "{'[4, 0, 1, 5, 3, 3, 1, 0, 9, 6, 0, 27, 0, 0, 0, 1, 1, 0]' : 0.117284}", "{'[4, 0, 1, 5, 3, 3, 1, 0, 9, 6, 0, 27, 0, 0, 0, 1, 1, 0]' : 0.116805}", "{'[4, 0, 1, 5, 3, 3, 1, 0, 9, 6, 0, 27, 0, 0, 0, 1, 1, 0]' : 0.117919}", "{'[4, 0, 1, 5, 3, 3, 1, 0, 9, 6, 0, 27, 0, 0, 0, 1, 1, 0]' : 0.11811}", "{'[4, 0, 1, 5, 3, 3, 1, 0, 9, 6, 0, 27, 0, 0, 0, 1, 1, 0]' : 0.118205}", "{'[4, 0, 1, 5, 3, 3, 1, 0, 9, 6, 0, 27, 0, 0, 0, 1, 1, 0]' : 0.118224}", "{'[4, 0, 1, 5, 3, 3, 1, 0, 9, 6, 0, 27, 0, 0, 0, 1, 1, 0]' : 0.11824}"]
returning from 'run': {'[4, 0, 1, 5, 3, 3, 1, 0, 9, 6, 0, 27, 0, 0, 0, 1, 1, 0]': ([0.138599, 0.138491, 0.138611, 0.131373, 0.117038, 0.116854, 0.116817, 0.117139, 0.118017, 0.117914, 0.11817, 0.118237, 0.11785, 0.117123, 0.11684, 0.116811, 0.11734, 0.117982, 0.118281, 0.117925, 0.117967, 0.118104, 0.117223, 0.117284, 0.116805, 0.117919, 0.11811, 0.118205, 0.118224, 0.11824], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 0, 1, 5, 3, 3, 1, 0, 9, 6, 0, 27, 0, 0, 0, 1, 1, 0]': ([0.138599, 0.138491, 0.138611, 0.131373, 0.117038, 0.116854, 0.116817, 0.117139, 0.118017, 0.117914, 0.11817, 0.118237, 0.11785, 0.117123, 0.11684, 0.116811, 0.11734, 0.117982, 0.118281, 0.117925, 0.117967, 0.118104, 0.117223, 0.117284, 0.116805, 0.117919, 0.11811, 0.118205, 0.118224, 0.11824], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = iii
Code stats:
        Number of loops: 	31
        Max loop nest depth: 	5
        Additions: 		2099
        Multiplications: 	570
        Divisions: 		0
        Logical: 		0
        Reads: 			3441
        Writes: 		388
        Comparisons:		31
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest36.exe __orio_perftest36.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest36.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest36.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest36.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest36.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	5
        Additions: 		338
        Multiplications: 	122
        Divisions: 		0
        Logical: 		0
        Reads: 			726
        Writes: 		87
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest37.exe __orio_perftest37.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest37.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest37.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest37.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest37.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	106
        Max loop nest depth: 	6
        Additions: 		9919
        Multiplications: 	3780
        Divisions: 		0
        Logical: 		0
        Reads: 			16890
        Writes: 		2479
        Comparisons:		106
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest38.exe __orio_perftest38.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest38.exe  
Program Test Output: 
{'[2, 5, 2, 6, 0, 5, 1, 0, 29, 28, 28, 0, 0, 0, 2, 1, 0, 1]' : 0.228917}
{'[2, 5, 2, 6, 0, 5, 1, 0, 29, 28, 28, 0, 0, 0, 2, 1, 0, 1]' : 0.2261}
{'[2, 5, 2, 6, 0, 5, 1, 0, 29, 28, 28, 0, 0, 0, 2, 1, 0, 1]' : 0.194184}
{'[2, 5, 2, 6, 0, 5, 1, 0, 29, 28, 28, 0, 0, 0, 2, 1, 0, 1]' : 0.194295}
{'[2, 5, 2, 6, 0, 5, 1, 0, 29, 28, 28, 0, 0, 0, 2, 1, 0, 1]' : 0.193566}
{'[2, 5, 2, 6, 0, 5, 1, 0, 29, 28, 28, 0, 0, 0, 2, 1, 0, 1]' : 0.193858}
{'[2, 5, 2, 6, 0, 5, 1, 0, 29, 28, 28, 0, 0, 0, 2, 1, 0, 1]' : 0.193988}
{'[2, 5, 2, 6, 0, 5, 1, 0, 29, 28, 28, 0, 0, 0, 2, 1, 0, 1]' : 0.193637}
{'[2, 5, 2, 6, 0, 5, 1, 0, 29, 28, 28, 0, 0, 0, 2, 1, 0, 1]' : 0.193598}
{'[2, 5, 2, 6, 0, 5, 1, 0, 29, 28, 28, 0, 0, 0, 2, 1, 0, 1]' : 0.193506}
{'[2, 5, 2, 6, 0, 5, 1, 0, 29, 28, 28, 0, 0, 0, 2, 1, 0, 1]' : 0.193769}
{'[2, 5, 2, 6, 0, 5, 1, 0, 29, 28, 28, 0, 0, 0, 2, 1, 0, 1]' : 0.193857}
{'[2, 5, 2, 6, 0, 5, 1, 0, 29, 28, 28, 0, 0, 0, 2, 1, 0, 1]' : 0.19384}
{'[2, 5, 2, 6, 0, 5, 1, 0, 29, 28, 28, 0, 0, 0, 2, 1, 0, 1]' : 0.193712}
{'[2, 5, 2, 6, 0, 5, 1, 0, 29, 28, 28, 0, 0, 0, 2, 1, 0, 1]' : 0.193597}
{'[2, 5, 2, 6, 0, 5, 1, 0, 29, 28, 28, 0, 0, 0, 2, 1, 0, 1]' : 0.193891}
{'[2, 5, 2, 6, 0, 5, 1, 0, 29, 28, 28, 0, 0, 0, 2, 1, 0, 1]' : 0.193626}
{'[2, 5, 2, 6, 0, 5, 1, 0, 29, 28, 28, 0, 0, 0, 2, 1, 0, 1]' : 0.194287}
{'[2, 5, 2, 6, 0, 5, 1, 0, 29, 28, 28, 0, 0, 0, 2, 1, 0, 1]' : 0.193687}
{'[2, 5, 2, 6, 0, 5, 1, 0, 29, 28, 28, 0, 0, 0, 2, 1, 0, 1]' : 0.194048}
{'[2, 5, 2, 6, 0, 5, 1, 0, 29, 28, 28, 0, 0, 0, 2, 1, 0, 1]' : 0.193628}
{'[2, 5, 2, 6, 0, 5, 1, 0, 29, 28, 28, 0, 0, 0, 2, 1, 0, 1]' : 0.193565}
{'[2, 5, 2, 6, 0, 5, 1, 0, 29, 28, 28, 0, 0, 0, 2, 1, 0, 1]' : 0.193819}
{'[2, 5, 2, 6, 0, 5, 1, 0, 29, 28, 28, 0, 0, 0, 2, 1, 0, 1]' : 0.19442}
{'[2, 5, 2, 6, 0, 5, 1, 0, 29, 28, 28, 0, 0, 0, 2, 1, 0, 1]' : 0.193771}
{'[2, 5, 2, 6, 0, 5, 1, 0, 29, 28, 28, 0, 0, 0, 2, 1, 0, 1]' : 0.193682}
{'[2, 5, 2, 6, 0, 5, 1, 0, 29, 28, 28, 0, 0, 0, 2, 1, 0, 1]' : 0.193774}
{'[2, 5, 2, 6, 0, 5, 1, 0, 29, 28, 28, 0, 0, 0, 2, 1, 0, 1]' : 0.193933}
{'[2, 5, 2, 6, 0, 5, 1, 0, 29, 28, 28, 0, 0, 0, 2, 1, 0, 1]' : 0.194021}
{'[2, 5, 2, 6, 0, 5, 1, 0, 29, 28, 28, 0, 0, 0, 2, 1, 0, 1]' : 0.193948}

out:
 ["{'[2, 5, 2, 6, 0, 5, 1, 0, 29, 28, 28, 0, 0, 0, 2, 1, 0, 1]' : 0.228917}", "{'[2, 5, 2, 6, 0, 5, 1, 0, 29, 28, 28, 0, 0, 0, 2, 1, 0, 1]' : 0.2261}", "{'[2, 5, 2, 6, 0, 5, 1, 0, 29, 28, 28, 0, 0, 0, 2, 1, 0, 1]' : 0.194184}", "{'[2, 5, 2, 6, 0, 5, 1, 0, 29, 28, 28, 0, 0, 0, 2, 1, 0, 1]' : 0.194295}", "{'[2, 5, 2, 6, 0, 5, 1, 0, 29, 28, 28, 0, 0, 0, 2, 1, 0, 1]' : 0.193566}", "{'[2, 5, 2, 6, 0, 5, 1, 0, 29, 28, 28, 0, 0, 0, 2, 1, 0, 1]' : 0.193858}", "{'[2, 5, 2, 6, 0, 5, 1, 0, 29, 28, 28, 0, 0, 0, 2, 1, 0, 1]' : 0.193988}", "{'[2, 5, 2, 6, 0, 5, 1, 0, 29, 28, 28, 0, 0, 0, 2, 1, 0, 1]' : 0.193637}", "{'[2, 5, 2, 6, 0, 5, 1, 0, 29, 28, 28, 0, 0, 0, 2, 1, 0, 1]' : 0.193598}", "{'[2, 5, 2, 6, 0, 5, 1, 0, 29, 28, 28, 0, 0, 0, 2, 1, 0, 1]' : 0.193506}", "{'[2, 5, 2, 6, 0, 5, 1, 0, 29, 28, 28, 0, 0, 0, 2, 1, 0, 1]' : 0.193769}", "{'[2, 5, 2, 6, 0, 5, 1, 0, 29, 28, 28, 0, 0, 0, 2, 1, 0, 1]' : 0.193857}", "{'[2, 5, 2, 6, 0, 5, 1, 0, 29, 28, 28, 0, 0, 0, 2, 1, 0, 1]' : 0.19384}", "{'[2, 5, 2, 6, 0, 5, 1, 0, 29, 28, 28, 0, 0, 0, 2, 1, 0, 1]' : 0.193712}", "{'[2, 5, 2, 6, 0, 5, 1, 0, 29, 28, 28, 0, 0, 0, 2, 1, 0, 1]' : 0.193597}", "{'[2, 5, 2, 6, 0, 5, 1, 0, 29, 28, 28, 0, 0, 0, 2, 1, 0, 1]' : 0.193891}", "{'[2, 5, 2, 6, 0, 5, 1, 0, 29, 28, 28, 0, 0, 0, 2, 1, 0, 1]' : 0.193626}", "{'[2, 5, 2, 6, 0, 5, 1, 0, 29, 28, 28, 0, 0, 0, 2, 1, 0, 1]' : 0.194287}", "{'[2, 5, 2, 6, 0, 5, 1, 0, 29, 28, 28, 0, 0, 0, 2, 1, 0, 1]' : 0.193687}", "{'[2, 5, 2, 6, 0, 5, 1, 0, 29, 28, 28, 0, 0, 0, 2, 1, 0, 1]' : 0.194048}", "{'[2, 5, 2, 6, 0, 5, 1, 0, 29, 28, 28, 0, 0, 0, 2, 1, 0, 1]' : 0.193628}", "{'[2, 5, 2, 6, 0, 5, 1, 0, 29, 28, 28, 0, 0, 0, 2, 1, 0, 1]' : 0.193565}", "{'[2, 5, 2, 6, 0, 5, 1, 0, 29, 28, 28, 0, 0, 0, 2, 1, 0, 1]' : 0.193819}", "{'[2, 5, 2, 6, 0, 5, 1, 0, 29, 28, 28, 0, 0, 0, 2, 1, 0, 1]' : 0.19442}", "{'[2, 5, 2, 6, 0, 5, 1, 0, 29, 28, 28, 0, 0, 0, 2, 1, 0, 1]' : 0.193771}", "{'[2, 5, 2, 6, 0, 5, 1, 0, 29, 28, 28, 0, 0, 0, 2, 1, 0, 1]' : 0.193682}", "{'[2, 5, 2, 6, 0, 5, 1, 0, 29, 28, 28, 0, 0, 0, 2, 1, 0, 1]' : 0.193774}", "{'[2, 5, 2, 6, 0, 5, 1, 0, 29, 28, 28, 0, 0, 0, 2, 1, 0, 1]' : 0.193933}", "{'[2, 5, 2, 6, 0, 5, 1, 0, 29, 28, 28, 0, 0, 0, 2, 1, 0, 1]' : 0.194021}", "{'[2, 5, 2, 6, 0, 5, 1, 0, 29, 28, 28, 0, 0, 0, 2, 1, 0, 1]' : 0.193948}"]
returning from 'run': {'[2, 5, 2, 6, 0, 5, 1, 0, 29, 28, 28, 0, 0, 0, 2, 1, 0, 1]': ([0.228917, 0.2261, 0.194184, 0.194295, 0.193566, 0.193858, 0.193988, 0.193637, 0.193598, 0.193506, 0.193769, 0.193857, 0.19384, 0.193712, 0.193597, 0.193891, 0.193626, 0.194287, 0.193687, 0.194048, 0.193628, 0.193565, 0.193819, 0.19442, 0.193771, 0.193682, 0.193774, 0.193933, 0.194021, 0.193948], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 5, 2, 6, 0, 5, 1, 0, 29, 28, 28, 0, 0, 0, 2, 1, 0, 1]': ([0.228917, 0.2261, 0.194184, 0.194295, 0.193566, 0.193858, 0.193988, 0.193637, 0.193598, 0.193506, 0.193769, 0.193857, 0.19384, 0.193712, 0.193597, 0.193891, 0.193626, 0.194287, 0.193687, 0.194048, 0.193628, 0.193565, 0.193819, 0.19442, 0.193771, 0.193682, 0.193774, 0.193933, 0.194021, 0.193948], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	5
        Additions: 		483
        Multiplications: 	144
        Divisions: 		0
        Logical: 		0
        Reads: 			876
        Writes: 		128
        Comparisons:		16
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest39.exe __orio_perftest39.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest39.exe  
Program Test Output: 
{'[4, 3, 0, 6, 1, 6, 0, 0, 20, 0, 0, 5, 1, 0, 0, 0, 0, 0]' : 0.137368}
{'[4, 3, 0, 6, 1, 6, 0, 0, 20, 0, 0, 5, 1, 0, 0, 0, 0, 0]' : 0.137402}
{'[4, 3, 0, 6, 1, 6, 0, 0, 20, 0, 0, 5, 1, 0, 0, 0, 0, 0]' : 0.137244}
{'[4, 3, 0, 6, 1, 6, 0, 0, 20, 0, 0, 5, 1, 0, 0, 0, 0, 0]' : 0.137464}
{'[4, 3, 0, 6, 1, 6, 0, 0, 20, 0, 0, 5, 1, 0, 0, 0, 0, 0]' : 0.125644}
{'[4, 3, 0, 6, 1, 6, 0, 0, 20, 0, 0, 5, 1, 0, 0, 0, 0, 0]' : 0.115926}
{'[4, 3, 0, 6, 1, 6, 0, 0, 20, 0, 0, 5, 1, 0, 0, 0, 0, 0]' : 0.115811}
{'[4, 3, 0, 6, 1, 6, 0, 0, 20, 0, 0, 5, 1, 0, 0, 0, 0, 0]' : 0.116196}
{'[4, 3, 0, 6, 1, 6, 0, 0, 20, 0, 0, 5, 1, 0, 0, 0, 0, 0]' : 0.116118}
{'[4, 3, 0, 6, 1, 6, 0, 0, 20, 0, 0, 5, 1, 0, 0, 0, 0, 0]' : 0.116348}
{'[4, 3, 0, 6, 1, 6, 0, 0, 20, 0, 0, 5, 1, 0, 0, 0, 0, 0]' : 0.116447}
{'[4, 3, 0, 6, 1, 6, 0, 0, 20, 0, 0, 5, 1, 0, 0, 0, 0, 0]' : 0.116927}
{'[4, 3, 0, 6, 1, 6, 0, 0, 20, 0, 0, 5, 1, 0, 0, 0, 0, 0]' : 0.116679}
{'[4, 3, 0, 6, 1, 6, 0, 0, 20, 0, 0, 5, 1, 0, 0, 0, 0, 0]' : 0.116501}
{'[4, 3, 0, 6, 1, 6, 0, 0, 20, 0, 0, 5, 1, 0, 0, 0, 0, 0]' : 0.1164}
{'[4, 3, 0, 6, 1, 6, 0, 0, 20, 0, 0, 5, 1, 0, 0, 0, 0, 0]' : 0.116647}
{'[4, 3, 0, 6, 1, 6, 0, 0, 20, 0, 0, 5, 1, 0, 0, 0, 0, 0]' : 0.117493}
{'[4, 3, 0, 6, 1, 6, 0, 0, 20, 0, 0, 5, 1, 0, 0, 0, 0, 0]' : 0.116638}
{'[4, 3, 0, 6, 1, 6, 0, 0, 20, 0, 0, 5, 1, 0, 0, 0, 0, 0]' : 0.117032}
{'[4, 3, 0, 6, 1, 6, 0, 0, 20, 0, 0, 5, 1, 0, 0, 0, 0, 0]' : 0.116128}
{'[4, 3, 0, 6, 1, 6, 0, 0, 20, 0, 0, 5, 1, 0, 0, 0, 0, 0]' : 0.116393}
{'[4, 3, 0, 6, 1, 6, 0, 0, 20, 0, 0, 5, 1, 0, 0, 0, 0, 0]' : 0.11599}
{'[4, 3, 0, 6, 1, 6, 0, 0, 20, 0, 0, 5, 1, 0, 0, 0, 0, 0]' : 0.116152}
{'[4, 3, 0, 6, 1, 6, 0, 0, 20, 0, 0, 5, 1, 0, 0, 0, 0, 0]' : 0.116019}
{'[4, 3, 0, 6, 1, 6, 0, 0, 20, 0, 0, 5, 1, 0, 0, 0, 0, 0]' : 0.116088}
{'[4, 3, 0, 6, 1, 6, 0, 0, 20, 0, 0, 5, 1, 0, 0, 0, 0, 0]' : 0.116205}
{'[4, 3, 0, 6, 1, 6, 0, 0, 20, 0, 0, 5, 1, 0, 0, 0, 0, 0]' : 0.116001}
{'[4, 3, 0, 6, 1, 6, 0, 0, 20, 0, 0, 5, 1, 0, 0, 0, 0, 0]' : 0.116385}
{'[4, 3, 0, 6, 1, 6, 0, 0, 20, 0, 0, 5, 1, 0, 0, 0, 0, 0]' : 0.115997}
{'[4, 3, 0, 6, 1, 6, 0, 0, 20, 0, 0, 5, 1, 0, 0, 0, 0, 0]' : 0.116191}

out:
 ["{'[4, 3, 0, 6, 1, 6, 0, 0, 20, 0, 0, 5, 1, 0, 0, 0, 0, 0]' : 0.137368}", "{'[4, 3, 0, 6, 1, 6, 0, 0, 20, 0, 0, 5, 1, 0, 0, 0, 0, 0]' : 0.137402}", "{'[4, 3, 0, 6, 1, 6, 0, 0, 20, 0, 0, 5, 1, 0, 0, 0, 0, 0]' : 0.137244}", "{'[4, 3, 0, 6, 1, 6, 0, 0, 20, 0, 0, 5, 1, 0, 0, 0, 0, 0]' : 0.137464}", "{'[4, 3, 0, 6, 1, 6, 0, 0, 20, 0, 0, 5, 1, 0, 0, 0, 0, 0]' : 0.125644}", "{'[4, 3, 0, 6, 1, 6, 0, 0, 20, 0, 0, 5, 1, 0, 0, 0, 0, 0]' : 0.115926}", "{'[4, 3, 0, 6, 1, 6, 0, 0, 20, 0, 0, 5, 1, 0, 0, 0, 0, 0]' : 0.115811}", "{'[4, 3, 0, 6, 1, 6, 0, 0, 20, 0, 0, 5, 1, 0, 0, 0, 0, 0]' : 0.116196}", "{'[4, 3, 0, 6, 1, 6, 0, 0, 20, 0, 0, 5, 1, 0, 0, 0, 0, 0]' : 0.116118}", "{'[4, 3, 0, 6, 1, 6, 0, 0, 20, 0, 0, 5, 1, 0, 0, 0, 0, 0]' : 0.116348}", "{'[4, 3, 0, 6, 1, 6, 0, 0, 20, 0, 0, 5, 1, 0, 0, 0, 0, 0]' : 0.116447}", "{'[4, 3, 0, 6, 1, 6, 0, 0, 20, 0, 0, 5, 1, 0, 0, 0, 0, 0]' : 0.116927}", "{'[4, 3, 0, 6, 1, 6, 0, 0, 20, 0, 0, 5, 1, 0, 0, 0, 0, 0]' : 0.116679}", "{'[4, 3, 0, 6, 1, 6, 0, 0, 20, 0, 0, 5, 1, 0, 0, 0, 0, 0]' : 0.116501}", "{'[4, 3, 0, 6, 1, 6, 0, 0, 20, 0, 0, 5, 1, 0, 0, 0, 0, 0]' : 0.1164}", "{'[4, 3, 0, 6, 1, 6, 0, 0, 20, 0, 0, 5, 1, 0, 0, 0, 0, 0]' : 0.116647}", "{'[4, 3, 0, 6, 1, 6, 0, 0, 20, 0, 0, 5, 1, 0, 0, 0, 0, 0]' : 0.117493}", "{'[4, 3, 0, 6, 1, 6, 0, 0, 20, 0, 0, 5, 1, 0, 0, 0, 0, 0]' : 0.116638}", "{'[4, 3, 0, 6, 1, 6, 0, 0, 20, 0, 0, 5, 1, 0, 0, 0, 0, 0]' : 0.117032}", "{'[4, 3, 0, 6, 1, 6, 0, 0, 20, 0, 0, 5, 1, 0, 0, 0, 0, 0]' : 0.116128}", "{'[4, 3, 0, 6, 1, 6, 0, 0, 20, 0, 0, 5, 1, 0, 0, 0, 0, 0]' : 0.116393}", "{'[4, 3, 0, 6, 1, 6, 0, 0, 20, 0, 0, 5, 1, 0, 0, 0, 0, 0]' : 0.11599}", "{'[4, 3, 0, 6, 1, 6, 0, 0, 20, 0, 0, 5, 1, 0, 0, 0, 0, 0]' : 0.116152}", "{'[4, 3, 0, 6, 1, 6, 0, 0, 20, 0, 0, 5, 1, 0, 0, 0, 0, 0]' : 0.116019}", "{'[4, 3, 0, 6, 1, 6, 0, 0, 20, 0, 0, 5, 1, 0, 0, 0, 0, 0]' : 0.116088}", "{'[4, 3, 0, 6, 1, 6, 0, 0, 20, 0, 0, 5, 1, 0, 0, 0, 0, 0]' : 0.116205}", "{'[4, 3, 0, 6, 1, 6, 0, 0, 20, 0, 0, 5, 1, 0, 0, 0, 0, 0]' : 0.116001}", "{'[4, 3, 0, 6, 1, 6, 0, 0, 20, 0, 0, 5, 1, 0, 0, 0, 0, 0]' : 0.116385}", "{'[4, 3, 0, 6, 1, 6, 0, 0, 20, 0, 0, 5, 1, 0, 0, 0, 0, 0]' : 0.115997}", "{'[4, 3, 0, 6, 1, 6, 0, 0, 20, 0, 0, 5, 1, 0, 0, 0, 0, 0]' : 0.116191}"]
returning from 'run': {'[4, 3, 0, 6, 1, 6, 0, 0, 20, 0, 0, 5, 1, 0, 0, 0, 0, 0]': ([0.137368, 0.137402, 0.137244, 0.137464, 0.125644, 0.115926, 0.115811, 0.116196, 0.116118, 0.116348, 0.116447, 0.116927, 0.116679, 0.116501, 0.1164, 0.116647, 0.117493, 0.116638, 0.117032, 0.116128, 0.116393, 0.11599, 0.116152, 0.116019, 0.116088, 0.116205, 0.116001, 0.116385, 0.115997, 0.116191], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 3, 0, 6, 1, 6, 0, 0, 20, 0, 0, 5, 1, 0, 0, 0, 0, 0]': ([0.137368, 0.137402, 0.137244, 0.137464, 0.125644, 0.115926, 0.115811, 0.116196, 0.116118, 0.116348, 0.116447, 0.116927, 0.116679, 0.116501, 0.1164, 0.116647, 0.117493, 0.116638, 0.117032, 0.116128, 0.116393, 0.11599, 0.116152, 0.116019, 0.116088, 0.116205, 0.116001, 0.116385, 0.115997, 0.116191], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	40
        Max loop nest depth: 	6
        Additions: 		1271
        Multiplications: 	516
        Divisions: 		0
        Logical: 		0
        Reads: 			2472
        Writes: 		436
        Comparisons:		40
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest40.exe __orio_perftest40.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest40.exe  
Program Test Output: 
{'[2, 5, 0, 3, 6, 5, 0, 1, 27, 4, 8, 0, 0, 2, 0, 1, 1, 0]' : 0.171911}
{'[2, 5, 0, 3, 6, 5, 0, 1, 27, 4, 8, 0, 0, 2, 0, 1, 1, 0]' : 0.171956}
{'[2, 5, 0, 3, 6, 5, 0, 1, 27, 4, 8, 0, 0, 2, 0, 1, 1, 0]' : 0.171888}
{'[2, 5, 0, 3, 6, 5, 0, 1, 27, 4, 8, 0, 0, 2, 0, 1, 1, 0]' : 0.152988}
{'[2, 5, 0, 3, 6, 5, 0, 1, 27, 4, 8, 0, 0, 2, 0, 1, 1, 0]' : 0.144303}
{'[2, 5, 0, 3, 6, 5, 0, 1, 27, 4, 8, 0, 0, 2, 0, 1, 1, 0]' : 0.144112}
{'[2, 5, 0, 3, 6, 5, 0, 1, 27, 4, 8, 0, 0, 2, 0, 1, 1, 0]' : 0.144501}
{'[2, 5, 0, 3, 6, 5, 0, 1, 27, 4, 8, 0, 0, 2, 0, 1, 1, 0]' : 0.144366}
{'[2, 5, 0, 3, 6, 5, 0, 1, 27, 4, 8, 0, 0, 2, 0, 1, 1, 0]' : 0.144494}
{'[2, 5, 0, 3, 6, 5, 0, 1, 27, 4, 8, 0, 0, 2, 0, 1, 1, 0]' : 0.144544}
{'[2, 5, 0, 3, 6, 5, 0, 1, 27, 4, 8, 0, 0, 2, 0, 1, 1, 0]' : 0.144363}
{'[2, 5, 0, 3, 6, 5, 0, 1, 27, 4, 8, 0, 0, 2, 0, 1, 1, 0]' : 0.144376}
{'[2, 5, 0, 3, 6, 5, 0, 1, 27, 4, 8, 0, 0, 2, 0, 1, 1, 0]' : 0.14431}
{'[2, 5, 0, 3, 6, 5, 0, 1, 27, 4, 8, 0, 0, 2, 0, 1, 1, 0]' : 0.146049}
{'[2, 5, 0, 3, 6, 5, 0, 1, 27, 4, 8, 0, 0, 2, 0, 1, 1, 0]' : 0.144357}
{'[2, 5, 0, 3, 6, 5, 0, 1, 27, 4, 8, 0, 0, 2, 0, 1, 1, 0]' : 0.144704}
{'[2, 5, 0, 3, 6, 5, 0, 1, 27, 4, 8, 0, 0, 2, 0, 1, 1, 0]' : 0.146144}
{'[2, 5, 0, 3, 6, 5, 0, 1, 27, 4, 8, 0, 0, 2, 0, 1, 1, 0]' : 0.146124}
{'[2, 5, 0, 3, 6, 5, 0, 1, 27, 4, 8, 0, 0, 2, 0, 1, 1, 0]' : 0.146917}
{'[2, 5, 0, 3, 6, 5, 0, 1, 27, 4, 8, 0, 0, 2, 0, 1, 1, 0]' : 0.145261}
{'[2, 5, 0, 3, 6, 5, 0, 1, 27, 4, 8, 0, 0, 2, 0, 1, 1, 0]' : 0.144702}
{'[2, 5, 0, 3, 6, 5, 0, 1, 27, 4, 8, 0, 0, 2, 0, 1, 1, 0]' : 0.145042}
{'[2, 5, 0, 3, 6, 5, 0, 1, 27, 4, 8, 0, 0, 2, 0, 1, 1, 0]' : 0.146794}
{'[2, 5, 0, 3, 6, 5, 0, 1, 27, 4, 8, 0, 0, 2, 0, 1, 1, 0]' : 0.146637}
{'[2, 5, 0, 3, 6, 5, 0, 1, 27, 4, 8, 0, 0, 2, 0, 1, 1, 0]' : 0.144742}
{'[2, 5, 0, 3, 6, 5, 0, 1, 27, 4, 8, 0, 0, 2, 0, 1, 1, 0]' : 0.14475}
{'[2, 5, 0, 3, 6, 5, 0, 1, 27, 4, 8, 0, 0, 2, 0, 1, 1, 0]' : 0.144258}
{'[2, 5, 0, 3, 6, 5, 0, 1, 27, 4, 8, 0, 0, 2, 0, 1, 1, 0]' : 0.144568}
{'[2, 5, 0, 3, 6, 5, 0, 1, 27, 4, 8, 0, 0, 2, 0, 1, 1, 0]' : 0.144555}
{'[2, 5, 0, 3, 6, 5, 0, 1, 27, 4, 8, 0, 0, 2, 0, 1, 1, 0]' : 0.14473}

out:
 ["{'[2, 5, 0, 3, 6, 5, 0, 1, 27, 4, 8, 0, 0, 2, 0, 1, 1, 0]' : 0.171911}", "{'[2, 5, 0, 3, 6, 5, 0, 1, 27, 4, 8, 0, 0, 2, 0, 1, 1, 0]' : 0.171956}", "{'[2, 5, 0, 3, 6, 5, 0, 1, 27, 4, 8, 0, 0, 2, 0, 1, 1, 0]' : 0.171888}", "{'[2, 5, 0, 3, 6, 5, 0, 1, 27, 4, 8, 0, 0, 2, 0, 1, 1, 0]' : 0.152988}", "{'[2, 5, 0, 3, 6, 5, 0, 1, 27, 4, 8, 0, 0, 2, 0, 1, 1, 0]' : 0.144303}", "{'[2, 5, 0, 3, 6, 5, 0, 1, 27, 4, 8, 0, 0, 2, 0, 1, 1, 0]' : 0.144112}", "{'[2, 5, 0, 3, 6, 5, 0, 1, 27, 4, 8, 0, 0, 2, 0, 1, 1, 0]' : 0.144501}", "{'[2, 5, 0, 3, 6, 5, 0, 1, 27, 4, 8, 0, 0, 2, 0, 1, 1, 0]' : 0.144366}", "{'[2, 5, 0, 3, 6, 5, 0, 1, 27, 4, 8, 0, 0, 2, 0, 1, 1, 0]' : 0.144494}", "{'[2, 5, 0, 3, 6, 5, 0, 1, 27, 4, 8, 0, 0, 2, 0, 1, 1, 0]' : 0.144544}", "{'[2, 5, 0, 3, 6, 5, 0, 1, 27, 4, 8, 0, 0, 2, 0, 1, 1, 0]' : 0.144363}", "{'[2, 5, 0, 3, 6, 5, 0, 1, 27, 4, 8, 0, 0, 2, 0, 1, 1, 0]' : 0.144376}", "{'[2, 5, 0, 3, 6, 5, 0, 1, 27, 4, 8, 0, 0, 2, 0, 1, 1, 0]' : 0.14431}", "{'[2, 5, 0, 3, 6, 5, 0, 1, 27, 4, 8, 0, 0, 2, 0, 1, 1, 0]' : 0.146049}", "{'[2, 5, 0, 3, 6, 5, 0, 1, 27, 4, 8, 0, 0, 2, 0, 1, 1, 0]' : 0.144357}", "{'[2, 5, 0, 3, 6, 5, 0, 1, 27, 4, 8, 0, 0, 2, 0, 1, 1, 0]' : 0.144704}", "{'[2, 5, 0, 3, 6, 5, 0, 1, 27, 4, 8, 0, 0, 2, 0, 1, 1, 0]' : 0.146144}", "{'[2, 5, 0, 3, 6, 5, 0, 1, 27, 4, 8, 0, 0, 2, 0, 1, 1, 0]' : 0.146124}", "{'[2, 5, 0, 3, 6, 5, 0, 1, 27, 4, 8, 0, 0, 2, 0, 1, 1, 0]' : 0.146917}", "{'[2, 5, 0, 3, 6, 5, 0, 1, 27, 4, 8, 0, 0, 2, 0, 1, 1, 0]' : 0.145261}", "{'[2, 5, 0, 3, 6, 5, 0, 1, 27, 4, 8, 0, 0, 2, 0, 1, 1, 0]' : 0.144702}", "{'[2, 5, 0, 3, 6, 5, 0, 1, 27, 4, 8, 0, 0, 2, 0, 1, 1, 0]' : 0.145042}", "{'[2, 5, 0, 3, 6, 5, 0, 1, 27, 4, 8, 0, 0, 2, 0, 1, 1, 0]' : 0.146794}", "{'[2, 5, 0, 3, 6, 5, 0, 1, 27, 4, 8, 0, 0, 2, 0, 1, 1, 0]' : 0.146637}", "{'[2, 5, 0, 3, 6, 5, 0, 1, 27, 4, 8, 0, 0, 2, 0, 1, 1, 0]' : 0.144742}", "{'[2, 5, 0, 3, 6, 5, 0, 1, 27, 4, 8, 0, 0, 2, 0, 1, 1, 0]' : 0.14475}", "{'[2, 5, 0, 3, 6, 5, 0, 1, 27, 4, 8, 0, 0, 2, 0, 1, 1, 0]' : 0.144258}", "{'[2, 5, 0, 3, 6, 5, 0, 1, 27, 4, 8, 0, 0, 2, 0, 1, 1, 0]' : 0.144568}", "{'[2, 5, 0, 3, 6, 5, 0, 1, 27, 4, 8, 0, 0, 2, 0, 1, 1, 0]' : 0.144555}", "{'[2, 5, 0, 3, 6, 5, 0, 1, 27, 4, 8, 0, 0, 2, 0, 1, 1, 0]' : 0.14473}"]
returning from 'run': {'[2, 5, 0, 3, 6, 5, 0, 1, 27, 4, 8, 0, 0, 2, 0, 1, 1, 0]': ([0.171911, 0.171956, 0.171888, 0.152988, 0.144303, 0.144112, 0.144501, 0.144366, 0.144494, 0.144544, 0.144363, 0.144376, 0.14431, 0.146049, 0.144357, 0.144704, 0.146144, 0.146124, 0.146917, 0.145261, 0.144702, 0.145042, 0.146794, 0.146637, 0.144742, 0.14475, 0.144258, 0.144568, 0.144555, 0.14473], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 5, 0, 3, 6, 5, 0, 1, 27, 4, 8, 0, 0, 2, 0, 1, 1, 0]': ([0.171911, 0.171956, 0.171888, 0.152988, 0.144303, 0.144112, 0.144501, 0.144366, 0.144494, 0.144544, 0.144363, 0.144376, 0.14431, 0.146049, 0.144357, 0.144704, 0.146144, 0.146124, 0.146917, 0.145261, 0.144702, 0.145042, 0.146794, 0.146637, 0.144742, 0.14475, 0.144258, 0.144568, 0.144555, 0.14473], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	3
        Additions: 		6624
        Multiplications: 	1536
        Divisions: 		0
        Logical: 		0
        Reads: 			9302
        Writes: 		808
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest41.exe __orio_perftest41.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest41.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest41.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest41.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest41.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	6
        Additions: 		136
        Multiplications: 	34
        Divisions: 		0
        Logical: 		0
        Reads: 			317
        Writes: 		81
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest42.exe __orio_perftest42.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest42.exe  
Program Test Output: 
{'[2, 0, 4, 1, 1, 3, 1, 0, 13, 0, 0, 7, 0, 1, 0, 1, 1, 0]' : 0.196033}
{'[2, 0, 4, 1, 1, 3, 1, 0, 13, 0, 0, 7, 0, 1, 0, 1, 1, 0]' : 0.195993}
{'[2, 0, 4, 1, 1, 3, 1, 0, 13, 0, 0, 7, 0, 1, 0, 1, 1, 0]' : 0.195991}
{'[2, 0, 4, 1, 1, 3, 1, 0, 13, 0, 0, 7, 0, 1, 0, 1, 1, 0]' : 0.185692}
{'[2, 0, 4, 1, 1, 3, 1, 0, 13, 0, 0, 7, 0, 1, 0, 1, 1, 0]' : 0.163868}
{'[2, 0, 4, 1, 1, 3, 1, 0, 13, 0, 0, 7, 0, 1, 0, 1, 1, 0]' : 0.164216}
{'[2, 0, 4, 1, 1, 3, 1, 0, 13, 0, 0, 7, 0, 1, 0, 1, 1, 0]' : 0.164391}
{'[2, 0, 4, 1, 1, 3, 1, 0, 13, 0, 0, 7, 0, 1, 0, 1, 1, 0]' : 0.163915}
{'[2, 0, 4, 1, 1, 3, 1, 0, 13, 0, 0, 7, 0, 1, 0, 1, 1, 0]' : 0.16386}
{'[2, 0, 4, 1, 1, 3, 1, 0, 13, 0, 0, 7, 0, 1, 0, 1, 1, 0]' : 0.164052}
{'[2, 0, 4, 1, 1, 3, 1, 0, 13, 0, 0, 7, 0, 1, 0, 1, 1, 0]' : 0.163982}
{'[2, 0, 4, 1, 1, 3, 1, 0, 13, 0, 0, 7, 0, 1, 0, 1, 1, 0]' : 0.163949}
{'[2, 0, 4, 1, 1, 3, 1, 0, 13, 0, 0, 7, 0, 1, 0, 1, 1, 0]' : 0.163938}
{'[2, 0, 4, 1, 1, 3, 1, 0, 13, 0, 0, 7, 0, 1, 0, 1, 1, 0]' : 0.16423}
{'[2, 0, 4, 1, 1, 3, 1, 0, 13, 0, 0, 7, 0, 1, 0, 1, 1, 0]' : 0.163941}
{'[2, 0, 4, 1, 1, 3, 1, 0, 13, 0, 0, 7, 0, 1, 0, 1, 1, 0]' : 0.16399}
{'[2, 0, 4, 1, 1, 3, 1, 0, 13, 0, 0, 7, 0, 1, 0, 1, 1, 0]' : 0.163857}
{'[2, 0, 4, 1, 1, 3, 1, 0, 13, 0, 0, 7, 0, 1, 0, 1, 1, 0]' : 0.164226}
{'[2, 0, 4, 1, 1, 3, 1, 0, 13, 0, 0, 7, 0, 1, 0, 1, 1, 0]' : 0.164082}
{'[2, 0, 4, 1, 1, 3, 1, 0, 13, 0, 0, 7, 0, 1, 0, 1, 1, 0]' : 0.164203}
{'[2, 0, 4, 1, 1, 3, 1, 0, 13, 0, 0, 7, 0, 1, 0, 1, 1, 0]' : 0.164133}
{'[2, 0, 4, 1, 1, 3, 1, 0, 13, 0, 0, 7, 0, 1, 0, 1, 1, 0]' : 0.164124}
{'[2, 0, 4, 1, 1, 3, 1, 0, 13, 0, 0, 7, 0, 1, 0, 1, 1, 0]' : 0.1639}
{'[2, 0, 4, 1, 1, 3, 1, 0, 13, 0, 0, 7, 0, 1, 0, 1, 1, 0]' : 0.164002}
{'[2, 0, 4, 1, 1, 3, 1, 0, 13, 0, 0, 7, 0, 1, 0, 1, 1, 0]' : 0.164221}
{'[2, 0, 4, 1, 1, 3, 1, 0, 13, 0, 0, 7, 0, 1, 0, 1, 1, 0]' : 0.164052}
{'[2, 0, 4, 1, 1, 3, 1, 0, 13, 0, 0, 7, 0, 1, 0, 1, 1, 0]' : 0.16439}
{'[2, 0, 4, 1, 1, 3, 1, 0, 13, 0, 0, 7, 0, 1, 0, 1, 1, 0]' : 0.164762}
{'[2, 0, 4, 1, 1, 3, 1, 0, 13, 0, 0, 7, 0, 1, 0, 1, 1, 0]' : 0.16395}
{'[2, 0, 4, 1, 1, 3, 1, 0, 13, 0, 0, 7, 0, 1, 0, 1, 1, 0]' : 0.164011}

out:
 ["{'[2, 0, 4, 1, 1, 3, 1, 0, 13, 0, 0, 7, 0, 1, 0, 1, 1, 0]' : 0.196033}", "{'[2, 0, 4, 1, 1, 3, 1, 0, 13, 0, 0, 7, 0, 1, 0, 1, 1, 0]' : 0.195993}", "{'[2, 0, 4, 1, 1, 3, 1, 0, 13, 0, 0, 7, 0, 1, 0, 1, 1, 0]' : 0.195991}", "{'[2, 0, 4, 1, 1, 3, 1, 0, 13, 0, 0, 7, 0, 1, 0, 1, 1, 0]' : 0.185692}", "{'[2, 0, 4, 1, 1, 3, 1, 0, 13, 0, 0, 7, 0, 1, 0, 1, 1, 0]' : 0.163868}", "{'[2, 0, 4, 1, 1, 3, 1, 0, 13, 0, 0, 7, 0, 1, 0, 1, 1, 0]' : 0.164216}", "{'[2, 0, 4, 1, 1, 3, 1, 0, 13, 0, 0, 7, 0, 1, 0, 1, 1, 0]' : 0.164391}", "{'[2, 0, 4, 1, 1, 3, 1, 0, 13, 0, 0, 7, 0, 1, 0, 1, 1, 0]' : 0.163915}", "{'[2, 0, 4, 1, 1, 3, 1, 0, 13, 0, 0, 7, 0, 1, 0, 1, 1, 0]' : 0.16386}", "{'[2, 0, 4, 1, 1, 3, 1, 0, 13, 0, 0, 7, 0, 1, 0, 1, 1, 0]' : 0.164052}", "{'[2, 0, 4, 1, 1, 3, 1, 0, 13, 0, 0, 7, 0, 1, 0, 1, 1, 0]' : 0.163982}", "{'[2, 0, 4, 1, 1, 3, 1, 0, 13, 0, 0, 7, 0, 1, 0, 1, 1, 0]' : 0.163949}", "{'[2, 0, 4, 1, 1, 3, 1, 0, 13, 0, 0, 7, 0, 1, 0, 1, 1, 0]' : 0.163938}", "{'[2, 0, 4, 1, 1, 3, 1, 0, 13, 0, 0, 7, 0, 1, 0, 1, 1, 0]' : 0.16423}", "{'[2, 0, 4, 1, 1, 3, 1, 0, 13, 0, 0, 7, 0, 1, 0, 1, 1, 0]' : 0.163941}", "{'[2, 0, 4, 1, 1, 3, 1, 0, 13, 0, 0, 7, 0, 1, 0, 1, 1, 0]' : 0.16399}", "{'[2, 0, 4, 1, 1, 3, 1, 0, 13, 0, 0, 7, 0, 1, 0, 1, 1, 0]' : 0.163857}", "{'[2, 0, 4, 1, 1, 3, 1, 0, 13, 0, 0, 7, 0, 1, 0, 1, 1, 0]' : 0.164226}", "{'[2, 0, 4, 1, 1, 3, 1, 0, 13, 0, 0, 7, 0, 1, 0, 1, 1, 0]' : 0.164082}", "{'[2, 0, 4, 1, 1, 3, 1, 0, 13, 0, 0, 7, 0, 1, 0, 1, 1, 0]' : 0.164203}", "{'[2, 0, 4, 1, 1, 3, 1, 0, 13, 0, 0, 7, 0, 1, 0, 1, 1, 0]' : 0.164133}", "{'[2, 0, 4, 1, 1, 3, 1, 0, 13, 0, 0, 7, 0, 1, 0, 1, 1, 0]' : 0.164124}", "{'[2, 0, 4, 1, 1, 3, 1, 0, 13, 0, 0, 7, 0, 1, 0, 1, 1, 0]' : 0.1639}", "{'[2, 0, 4, 1, 1, 3, 1, 0, 13, 0, 0, 7, 0, 1, 0, 1, 1, 0]' : 0.164002}", "{'[2, 0, 4, 1, 1, 3, 1, 0, 13, 0, 0, 7, 0, 1, 0, 1, 1, 0]' : 0.164221}", "{'[2, 0, 4, 1, 1, 3, 1, 0, 13, 0, 0, 7, 0, 1, 0, 1, 1, 0]' : 0.164052}", "{'[2, 0, 4, 1, 1, 3, 1, 0, 13, 0, 0, 7, 0, 1, 0, 1, 1, 0]' : 0.16439}", "{'[2, 0, 4, 1, 1, 3, 1, 0, 13, 0, 0, 7, 0, 1, 0, 1, 1, 0]' : 0.164762}", "{'[2, 0, 4, 1, 1, 3, 1, 0, 13, 0, 0, 7, 0, 1, 0, 1, 1, 0]' : 0.16395}", "{'[2, 0, 4, 1, 1, 3, 1, 0, 13, 0, 0, 7, 0, 1, 0, 1, 1, 0]' : 0.164011}"]
returning from 'run': {'[2, 0, 4, 1, 1, 3, 1, 0, 13, 0, 0, 7, 0, 1, 0, 1, 1, 0]': ([0.196033, 0.195993, 0.195991, 0.185692, 0.163868, 0.164216, 0.164391, 0.163915, 0.16386, 0.164052, 0.163982, 0.163949, 0.163938, 0.16423, 0.163941, 0.16399, 0.163857, 0.164226, 0.164082, 0.164203, 0.164133, 0.164124, 0.1639, 0.164002, 0.164221, 0.164052, 0.16439, 0.164762, 0.16395, 0.164011], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 0, 4, 1, 1, 3, 1, 0, 13, 0, 0, 7, 0, 1, 0, 1, 1, 0]': ([0.196033, 0.195993, 0.195991, 0.185692, 0.163868, 0.164216, 0.164391, 0.163915, 0.16386, 0.164052, 0.163982, 0.163949, 0.163938, 0.16423, 0.163941, 0.16399, 0.163857, 0.164226, 0.164082, 0.164203, 0.164133, 0.164124, 0.1639, 0.164002, 0.164221, 0.164052, 0.16439, 0.164762, 0.16395, 0.164011], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = iii
Code stats:
        Number of loops: 	47
        Max loop nest depth: 	5
        Additions: 		3997
        Multiplications: 	1160
        Divisions: 		0
        Logical: 		0
        Reads: 			6253
        Writes: 		700
        Comparisons:		47
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest43.exe __orio_perftest43.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest43.exe  
Program Test Output: 
{'[6, 6, 2, 4, 6, 4, 1, 0, 4, 8, 0, 23, 0, 0, 2, 0, 0, 0]' : 0.185236}
{'[6, 6, 2, 4, 6, 4, 1, 0, 4, 8, 0, 23, 0, 0, 2, 0, 0, 0]' : 0.178071}
{'[6, 6, 2, 4, 6, 4, 1, 0, 4, 8, 0, 23, 0, 0, 2, 0, 0, 0]' : 0.161431}
{'[6, 6, 2, 4, 6, 4, 1, 0, 4, 8, 0, 23, 0, 0, 2, 0, 0, 0]' : 0.162041}
{'[6, 6, 2, 4, 6, 4, 1, 0, 4, 8, 0, 23, 0, 0, 2, 0, 0, 0]' : 0.162051}
{'[6, 6, 2, 4, 6, 4, 1, 0, 4, 8, 0, 23, 0, 0, 2, 0, 0, 0]' : 0.162321}
{'[6, 6, 2, 4, 6, 4, 1, 0, 4, 8, 0, 23, 0, 0, 2, 0, 0, 0]' : 0.162598}
{'[6, 6, 2, 4, 6, 4, 1, 0, 4, 8, 0, 23, 0, 0, 2, 0, 0, 0]' : 0.162011}
{'[6, 6, 2, 4, 6, 4, 1, 0, 4, 8, 0, 23, 0, 0, 2, 0, 0, 0]' : 0.162198}
{'[6, 6, 2, 4, 6, 4, 1, 0, 4, 8, 0, 23, 0, 0, 2, 0, 0, 0]' : 0.162108}
{'[6, 6, 2, 4, 6, 4, 1, 0, 4, 8, 0, 23, 0, 0, 2, 0, 0, 0]' : 0.162076}
{'[6, 6, 2, 4, 6, 4, 1, 0, 4, 8, 0, 23, 0, 0, 2, 0, 0, 0]' : 0.161954}
{'[6, 6, 2, 4, 6, 4, 1, 0, 4, 8, 0, 23, 0, 0, 2, 0, 0, 0]' : 0.165025}
{'[6, 6, 2, 4, 6, 4, 1, 0, 4, 8, 0, 23, 0, 0, 2, 0, 0, 0]' : 0.162129}
{'[6, 6, 2, 4, 6, 4, 1, 0, 4, 8, 0, 23, 0, 0, 2, 0, 0, 0]' : 0.162031}
{'[6, 6, 2, 4, 6, 4, 1, 0, 4, 8, 0, 23, 0, 0, 2, 0, 0, 0]' : 0.162322}
{'[6, 6, 2, 4, 6, 4, 1, 0, 4, 8, 0, 23, 0, 0, 2, 0, 0, 0]' : 0.162511}
{'[6, 6, 2, 4, 6, 4, 1, 0, 4, 8, 0, 23, 0, 0, 2, 0, 0, 0]' : 0.16125}
{'[6, 6, 2, 4, 6, 4, 1, 0, 4, 8, 0, 23, 0, 0, 2, 0, 0, 0]' : 0.160861}
{'[6, 6, 2, 4, 6, 4, 1, 0, 4, 8, 0, 23, 0, 0, 2, 0, 0, 0]' : 0.162005}
{'[6, 6, 2, 4, 6, 4, 1, 0, 4, 8, 0, 23, 0, 0, 2, 0, 0, 0]' : 0.162318}
{'[6, 6, 2, 4, 6, 4, 1, 0, 4, 8, 0, 23, 0, 0, 2, 0, 0, 0]' : 0.165531}
{'[6, 6, 2, 4, 6, 4, 1, 0, 4, 8, 0, 23, 0, 0, 2, 0, 0, 0]' : 0.167239}
{'[6, 6, 2, 4, 6, 4, 1, 0, 4, 8, 0, 23, 0, 0, 2, 0, 0, 0]' : 0.167187}
{'[6, 6, 2, 4, 6, 4, 1, 0, 4, 8, 0, 23, 0, 0, 2, 0, 0, 0]' : 0.163708}
{'[6, 6, 2, 4, 6, 4, 1, 0, 4, 8, 0, 23, 0, 0, 2, 0, 0, 0]' : 0.162385}
{'[6, 6, 2, 4, 6, 4, 1, 0, 4, 8, 0, 23, 0, 0, 2, 0, 0, 0]' : 0.162011}
{'[6, 6, 2, 4, 6, 4, 1, 0, 4, 8, 0, 23, 0, 0, 2, 0, 0, 0]' : 0.162179}
{'[6, 6, 2, 4, 6, 4, 1, 0, 4, 8, 0, 23, 0, 0, 2, 0, 0, 0]' : 0.161962}
{'[6, 6, 2, 4, 6, 4, 1, 0, 4, 8, 0, 23, 0, 0, 2, 0, 0, 0]' : 0.162239}

out:
 ["{'[6, 6, 2, 4, 6, 4, 1, 0, 4, 8, 0, 23, 0, 0, 2, 0, 0, 0]' : 0.185236}", "{'[6, 6, 2, 4, 6, 4, 1, 0, 4, 8, 0, 23, 0, 0, 2, 0, 0, 0]' : 0.178071}", "{'[6, 6, 2, 4, 6, 4, 1, 0, 4, 8, 0, 23, 0, 0, 2, 0, 0, 0]' : 0.161431}", "{'[6, 6, 2, 4, 6, 4, 1, 0, 4, 8, 0, 23, 0, 0, 2, 0, 0, 0]' : 0.162041}", "{'[6, 6, 2, 4, 6, 4, 1, 0, 4, 8, 0, 23, 0, 0, 2, 0, 0, 0]' : 0.162051}", "{'[6, 6, 2, 4, 6, 4, 1, 0, 4, 8, 0, 23, 0, 0, 2, 0, 0, 0]' : 0.162321}", "{'[6, 6, 2, 4, 6, 4, 1, 0, 4, 8, 0, 23, 0, 0, 2, 0, 0, 0]' : 0.162598}", "{'[6, 6, 2, 4, 6, 4, 1, 0, 4, 8, 0, 23, 0, 0, 2, 0, 0, 0]' : 0.162011}", "{'[6, 6, 2, 4, 6, 4, 1, 0, 4, 8, 0, 23, 0, 0, 2, 0, 0, 0]' : 0.162198}", "{'[6, 6, 2, 4, 6, 4, 1, 0, 4, 8, 0, 23, 0, 0, 2, 0, 0, 0]' : 0.162108}", "{'[6, 6, 2, 4, 6, 4, 1, 0, 4, 8, 0, 23, 0, 0, 2, 0, 0, 0]' : 0.162076}", "{'[6, 6, 2, 4, 6, 4, 1, 0, 4, 8, 0, 23, 0, 0, 2, 0, 0, 0]' : 0.161954}", "{'[6, 6, 2, 4, 6, 4, 1, 0, 4, 8, 0, 23, 0, 0, 2, 0, 0, 0]' : 0.165025}", "{'[6, 6, 2, 4, 6, 4, 1, 0, 4, 8, 0, 23, 0, 0, 2, 0, 0, 0]' : 0.162129}", "{'[6, 6, 2, 4, 6, 4, 1, 0, 4, 8, 0, 23, 0, 0, 2, 0, 0, 0]' : 0.162031}", "{'[6, 6, 2, 4, 6, 4, 1, 0, 4, 8, 0, 23, 0, 0, 2, 0, 0, 0]' : 0.162322}", "{'[6, 6, 2, 4, 6, 4, 1, 0, 4, 8, 0, 23, 0, 0, 2, 0, 0, 0]' : 0.162511}", "{'[6, 6, 2, 4, 6, 4, 1, 0, 4, 8, 0, 23, 0, 0, 2, 0, 0, 0]' : 0.16125}", "{'[6, 6, 2, 4, 6, 4, 1, 0, 4, 8, 0, 23, 0, 0, 2, 0, 0, 0]' : 0.160861}", "{'[6, 6, 2, 4, 6, 4, 1, 0, 4, 8, 0, 23, 0, 0, 2, 0, 0, 0]' : 0.162005}", "{'[6, 6, 2, 4, 6, 4, 1, 0, 4, 8, 0, 23, 0, 0, 2, 0, 0, 0]' : 0.162318}", "{'[6, 6, 2, 4, 6, 4, 1, 0, 4, 8, 0, 23, 0, 0, 2, 0, 0, 0]' : 0.165531}", "{'[6, 6, 2, 4, 6, 4, 1, 0, 4, 8, 0, 23, 0, 0, 2, 0, 0, 0]' : 0.167239}", "{'[6, 6, 2, 4, 6, 4, 1, 0, 4, 8, 0, 23, 0, 0, 2, 0, 0, 0]' : 0.167187}", "{'[6, 6, 2, 4, 6, 4, 1, 0, 4, 8, 0, 23, 0, 0, 2, 0, 0, 0]' : 0.163708}", "{'[6, 6, 2, 4, 6, 4, 1, 0, 4, 8, 0, 23, 0, 0, 2, 0, 0, 0]' : 0.162385}", "{'[6, 6, 2, 4, 6, 4, 1, 0, 4, 8, 0, 23, 0, 0, 2, 0, 0, 0]' : 0.162011}", "{'[6, 6, 2, 4, 6, 4, 1, 0, 4, 8, 0, 23, 0, 0, 2, 0, 0, 0]' : 0.162179}", "{'[6, 6, 2, 4, 6, 4, 1, 0, 4, 8, 0, 23, 0, 0, 2, 0, 0, 0]' : 0.161962}", "{'[6, 6, 2, 4, 6, 4, 1, 0, 4, 8, 0, 23, 0, 0, 2, 0, 0, 0]' : 0.162239}"]
returning from 'run': {'[6, 6, 2, 4, 6, 4, 1, 0, 4, 8, 0, 23, 0, 0, 2, 0, 0, 0]': ([0.185236, 0.178071, 0.161431, 0.162041, 0.162051, 0.162321, 0.162598, 0.162011, 0.162198, 0.162108, 0.162076, 0.161954, 0.165025, 0.162129, 0.162031, 0.162322, 0.162511, 0.16125, 0.160861, 0.162005, 0.162318, 0.165531, 0.167239, 0.167187, 0.163708, 0.162385, 0.162011, 0.162179, 0.161962, 0.162239], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 2, 4, 6, 4, 1, 0, 4, 8, 0, 23, 0, 0, 2, 0, 0, 0]': ([0.185236, 0.178071, 0.161431, 0.162041, 0.162051, 0.162321, 0.162598, 0.162011, 0.162198, 0.162108, 0.162076, 0.161954, 0.165025, 0.162129, 0.162031, 0.162322, 0.162511, 0.16125, 0.160861, 0.162005, 0.162318, 0.165531, 0.167239, 0.167187, 0.163708, 0.162385, 0.162011, 0.162179, 0.161962, 0.162239], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	34
        Max loop nest depth: 	6
        Additions: 		400
        Multiplications: 	140
        Divisions: 		0
        Logical: 		0
        Reads: 			931
        Writes: 		206
        Comparisons:		34
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest44.exe __orio_perftest44.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest44.exe  
Program Test Output: 
{'[6, 6, 4, 5, 6, 6, 0, 1, 9, 5, 0, 0, 0, 1, 0, 1, 1, 1]' : 0.163922}
{'[6, 6, 4, 5, 6, 6, 0, 1, 9, 5, 0, 0, 0, 1, 0, 1, 1, 1]' : 0.164238}
{'[6, 6, 4, 5, 6, 6, 0, 1, 9, 5, 0, 0, 0, 1, 0, 1, 1, 1]' : 0.163962}
{'[6, 6, 4, 5, 6, 6, 0, 1, 9, 5, 0, 0, 0, 1, 0, 1, 1, 1]' : 0.149554}
{'[6, 6, 4, 5, 6, 6, 0, 1, 9, 5, 0, 0, 0, 1, 0, 1, 1, 1]' : 0.142378}
{'[6, 6, 4, 5, 6, 6, 0, 1, 9, 5, 0, 0, 0, 1, 0, 1, 1, 1]' : 0.141842}
{'[6, 6, 4, 5, 6, 6, 0, 1, 9, 5, 0, 0, 0, 1, 0, 1, 1, 1]' : 0.142116}
{'[6, 6, 4, 5, 6, 6, 0, 1, 9, 5, 0, 0, 0, 1, 0, 1, 1, 1]' : 0.141841}
{'[6, 6, 4, 5, 6, 6, 0, 1, 9, 5, 0, 0, 0, 1, 0, 1, 1, 1]' : 0.142094}
{'[6, 6, 4, 5, 6, 6, 0, 1, 9, 5, 0, 0, 0, 1, 0, 1, 1, 1]' : 0.141983}
{'[6, 6, 4, 5, 6, 6, 0, 1, 9, 5, 0, 0, 0, 1, 0, 1, 1, 1]' : 0.142131}
{'[6, 6, 4, 5, 6, 6, 0, 1, 9, 5, 0, 0, 0, 1, 0, 1, 1, 1]' : 0.14446}
{'[6, 6, 4, 5, 6, 6, 0, 1, 9, 5, 0, 0, 0, 1, 0, 1, 1, 1]' : 0.142305}
{'[6, 6, 4, 5, 6, 6, 0, 1, 9, 5, 0, 0, 0, 1, 0, 1, 1, 1]' : 0.140434}
{'[6, 6, 4, 5, 6, 6, 0, 1, 9, 5, 0, 0, 0, 1, 0, 1, 1, 1]' : 0.137903}
{'[6, 6, 4, 5, 6, 6, 0, 1, 9, 5, 0, 0, 0, 1, 0, 1, 1, 1]' : 0.145152}
{'[6, 6, 4, 5, 6, 6, 0, 1, 9, 5, 0, 0, 0, 1, 0, 1, 1, 1]' : 0.146408}
{'[6, 6, 4, 5, 6, 6, 0, 1, 9, 5, 0, 0, 0, 1, 0, 1, 1, 1]' : 0.146184}
{'[6, 6, 4, 5, 6, 6, 0, 1, 9, 5, 0, 0, 0, 1, 0, 1, 1, 1]' : 0.145051}
{'[6, 6, 4, 5, 6, 6, 0, 1, 9, 5, 0, 0, 0, 1, 0, 1, 1, 1]' : 0.146204}
{'[6, 6, 4, 5, 6, 6, 0, 1, 9, 5, 0, 0, 0, 1, 0, 1, 1, 1]' : 0.146099}
{'[6, 6, 4, 5, 6, 6, 0, 1, 9, 5, 0, 0, 0, 1, 0, 1, 1, 1]' : 0.146144}
{'[6, 6, 4, 5, 6, 6, 0, 1, 9, 5, 0, 0, 0, 1, 0, 1, 1, 1]' : 0.141923}
{'[6, 6, 4, 5, 6, 6, 0, 1, 9, 5, 0, 0, 0, 1, 0, 1, 1, 1]' : 0.140342}
{'[6, 6, 4, 5, 6, 6, 0, 1, 9, 5, 0, 0, 0, 1, 0, 1, 1, 1]' : 0.137859}
{'[6, 6, 4, 5, 6, 6, 0, 1, 9, 5, 0, 0, 0, 1, 0, 1, 1, 1]' : 0.140075}
{'[6, 6, 4, 5, 6, 6, 0, 1, 9, 5, 0, 0, 0, 1, 0, 1, 1, 1]' : 0.14185}
{'[6, 6, 4, 5, 6, 6, 0, 1, 9, 5, 0, 0, 0, 1, 0, 1, 1, 1]' : 0.141988}
{'[6, 6, 4, 5, 6, 6, 0, 1, 9, 5, 0, 0, 0, 1, 0, 1, 1, 1]' : 0.140349}
{'[6, 6, 4, 5, 6, 6, 0, 1, 9, 5, 0, 0, 0, 1, 0, 1, 1, 1]' : 0.137973}

out:
 ["{'[6, 6, 4, 5, 6, 6, 0, 1, 9, 5, 0, 0, 0, 1, 0, 1, 1, 1]' : 0.163922}", "{'[6, 6, 4, 5, 6, 6, 0, 1, 9, 5, 0, 0, 0, 1, 0, 1, 1, 1]' : 0.164238}", "{'[6, 6, 4, 5, 6, 6, 0, 1, 9, 5, 0, 0, 0, 1, 0, 1, 1, 1]' : 0.163962}", "{'[6, 6, 4, 5, 6, 6, 0, 1, 9, 5, 0, 0, 0, 1, 0, 1, 1, 1]' : 0.149554}", "{'[6, 6, 4, 5, 6, 6, 0, 1, 9, 5, 0, 0, 0, 1, 0, 1, 1, 1]' : 0.142378}", "{'[6, 6, 4, 5, 6, 6, 0, 1, 9, 5, 0, 0, 0, 1, 0, 1, 1, 1]' : 0.141842}", "{'[6, 6, 4, 5, 6, 6, 0, 1, 9, 5, 0, 0, 0, 1, 0, 1, 1, 1]' : 0.142116}", "{'[6, 6, 4, 5, 6, 6, 0, 1, 9, 5, 0, 0, 0, 1, 0, 1, 1, 1]' : 0.141841}", "{'[6, 6, 4, 5, 6, 6, 0, 1, 9, 5, 0, 0, 0, 1, 0, 1, 1, 1]' : 0.142094}", "{'[6, 6, 4, 5, 6, 6, 0, 1, 9, 5, 0, 0, 0, 1, 0, 1, 1, 1]' : 0.141983}", "{'[6, 6, 4, 5, 6, 6, 0, 1, 9, 5, 0, 0, 0, 1, 0, 1, 1, 1]' : 0.142131}", "{'[6, 6, 4, 5, 6, 6, 0, 1, 9, 5, 0, 0, 0, 1, 0, 1, 1, 1]' : 0.14446}", "{'[6, 6, 4, 5, 6, 6, 0, 1, 9, 5, 0, 0, 0, 1, 0, 1, 1, 1]' : 0.142305}", "{'[6, 6, 4, 5, 6, 6, 0, 1, 9, 5, 0, 0, 0, 1, 0, 1, 1, 1]' : 0.140434}", "{'[6, 6, 4, 5, 6, 6, 0, 1, 9, 5, 0, 0, 0, 1, 0, 1, 1, 1]' : 0.137903}", "{'[6, 6, 4, 5, 6, 6, 0, 1, 9, 5, 0, 0, 0, 1, 0, 1, 1, 1]' : 0.145152}", "{'[6, 6, 4, 5, 6, 6, 0, 1, 9, 5, 0, 0, 0, 1, 0, 1, 1, 1]' : 0.146408}", "{'[6, 6, 4, 5, 6, 6, 0, 1, 9, 5, 0, 0, 0, 1, 0, 1, 1, 1]' : 0.146184}", "{'[6, 6, 4, 5, 6, 6, 0, 1, 9, 5, 0, 0, 0, 1, 0, 1, 1, 1]' : 0.145051}", "{'[6, 6, 4, 5, 6, 6, 0, 1, 9, 5, 0, 0, 0, 1, 0, 1, 1, 1]' : 0.146204}", "{'[6, 6, 4, 5, 6, 6, 0, 1, 9, 5, 0, 0, 0, 1, 0, 1, 1, 1]' : 0.146099}", "{'[6, 6, 4, 5, 6, 6, 0, 1, 9, 5, 0, 0, 0, 1, 0, 1, 1, 1]' : 0.146144}", "{'[6, 6, 4, 5, 6, 6, 0, 1, 9, 5, 0, 0, 0, 1, 0, 1, 1, 1]' : 0.141923}", "{'[6, 6, 4, 5, 6, 6, 0, 1, 9, 5, 0, 0, 0, 1, 0, 1, 1, 1]' : 0.140342}", "{'[6, 6, 4, 5, 6, 6, 0, 1, 9, 5, 0, 0, 0, 1, 0, 1, 1, 1]' : 0.137859}", "{'[6, 6, 4, 5, 6, 6, 0, 1, 9, 5, 0, 0, 0, 1, 0, 1, 1, 1]' : 0.140075}", "{'[6, 6, 4, 5, 6, 6, 0, 1, 9, 5, 0, 0, 0, 1, 0, 1, 1, 1]' : 0.14185}", "{'[6, 6, 4, 5, 6, 6, 0, 1, 9, 5, 0, 0, 0, 1, 0, 1, 1, 1]' : 0.141988}", "{'[6, 6, 4, 5, 6, 6, 0, 1, 9, 5, 0, 0, 0, 1, 0, 1, 1, 1]' : 0.140349}", "{'[6, 6, 4, 5, 6, 6, 0, 1, 9, 5, 0, 0, 0, 1, 0, 1, 1, 1]' : 0.137973}"]
returning from 'run': {'[6, 6, 4, 5, 6, 6, 0, 1, 9, 5, 0, 0, 0, 1, 0, 1, 1, 1]': ([0.163922, 0.164238, 0.163962, 0.149554, 0.142378, 0.141842, 0.142116, 0.141841, 0.142094, 0.141983, 0.142131, 0.14446, 0.142305, 0.140434, 0.137903, 0.145152, 0.146408, 0.146184, 0.145051, 0.146204, 0.146099, 0.146144, 0.141923, 0.140342, 0.137859, 0.140075, 0.14185, 0.141988, 0.140349, 0.137973], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 4, 5, 6, 6, 0, 1, 9, 5, 0, 0, 0, 1, 0, 1, 1, 1]': ([0.163922, 0.164238, 0.163962, 0.149554, 0.142378, 0.141842, 0.142116, 0.141841, 0.142094, 0.141983, 0.142131, 0.14446, 0.142305, 0.140434, 0.137903, 0.145152, 0.146408, 0.146184, 0.145051, 0.146204, 0.146099, 0.146144, 0.141923, 0.140342, 0.137859, 0.140075, 0.14185, 0.141988, 0.140349, 0.137973], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	37
        Max loop nest depth: 	4
        Additions: 		1021
        Multiplications: 	216
        Divisions: 		0
        Logical: 		0
        Reads: 			1707
        Writes: 		238
        Comparisons:		37
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest45.exe __orio_perftest45.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest45.exe  
Program Test Output: 
{'[0, 0, 3, 6, 4, 0, 0, 1, 18, 10, 0, 13, 0, 0, 1, 0, 0, 0]' : 0.182124}
{'[0, 0, 3, 6, 4, 0, 0, 1, 18, 10, 0, 13, 0, 0, 1, 0, 0, 0]' : 0.169813}
{'[0, 0, 3, 6, 4, 0, 0, 1, 18, 10, 0, 13, 0, 0, 1, 0, 0, 0]' : 0.16979}
{'[0, 0, 3, 6, 4, 0, 0, 1, 18, 10, 0, 13, 0, 0, 1, 0, 0, 0]' : 0.169529}
{'[0, 0, 3, 6, 4, 0, 0, 1, 18, 10, 0, 13, 0, 0, 1, 0, 0, 0]' : 0.16943}
{'[0, 0, 3, 6, 4, 0, 0, 1, 18, 10, 0, 13, 0, 0, 1, 0, 0, 0]' : 0.169544}
{'[0, 0, 3, 6, 4, 0, 0, 1, 18, 10, 0, 13, 0, 0, 1, 0, 0, 0]' : 0.169599}
{'[0, 0, 3, 6, 4, 0, 0, 1, 18, 10, 0, 13, 0, 0, 1, 0, 0, 0]' : 0.16972}
{'[0, 0, 3, 6, 4, 0, 0, 1, 18, 10, 0, 13, 0, 0, 1, 0, 0, 0]' : 0.169687}
{'[0, 0, 3, 6, 4, 0, 0, 1, 18, 10, 0, 13, 0, 0, 1, 0, 0, 0]' : 0.170049}
{'[0, 0, 3, 6, 4, 0, 0, 1, 18, 10, 0, 13, 0, 0, 1, 0, 0, 0]' : 0.169481}
{'[0, 0, 3, 6, 4, 0, 0, 1, 18, 10, 0, 13, 0, 0, 1, 0, 0, 0]' : 0.169873}
{'[0, 0, 3, 6, 4, 0, 0, 1, 18, 10, 0, 13, 0, 0, 1, 0, 0, 0]' : 0.169381}
{'[0, 0, 3, 6, 4, 0, 0, 1, 18, 10, 0, 13, 0, 0, 1, 0, 0, 0]' : 0.169569}
{'[0, 0, 3, 6, 4, 0, 0, 1, 18, 10, 0, 13, 0, 0, 1, 0, 0, 0]' : 0.169473}
{'[0, 0, 3, 6, 4, 0, 0, 1, 18, 10, 0, 13, 0, 0, 1, 0, 0, 0]' : 0.169969}
{'[0, 0, 3, 6, 4, 0, 0, 1, 18, 10, 0, 13, 0, 0, 1, 0, 0, 0]' : 0.169723}
{'[0, 0, 3, 6, 4, 0, 0, 1, 18, 10, 0, 13, 0, 0, 1, 0, 0, 0]' : 0.16957}
{'[0, 0, 3, 6, 4, 0, 0, 1, 18, 10, 0, 13, 0, 0, 1, 0, 0, 0]' : 0.169974}
{'[0, 0, 3, 6, 4, 0, 0, 1, 18, 10, 0, 13, 0, 0, 1, 0, 0, 0]' : 0.169393}
{'[0, 0, 3, 6, 4, 0, 0, 1, 18, 10, 0, 13, 0, 0, 1, 0, 0, 0]' : 0.169417}
{'[0, 0, 3, 6, 4, 0, 0, 1, 18, 10, 0, 13, 0, 0, 1, 0, 0, 0]' : 0.169737}
{'[0, 0, 3, 6, 4, 0, 0, 1, 18, 10, 0, 13, 0, 0, 1, 0, 0, 0]' : 0.169781}
{'[0, 0, 3, 6, 4, 0, 0, 1, 18, 10, 0, 13, 0, 0, 1, 0, 0, 0]' : 0.169487}
{'[0, 0, 3, 6, 4, 0, 0, 1, 18, 10, 0, 13, 0, 0, 1, 0, 0, 0]' : 0.169494}
{'[0, 0, 3, 6, 4, 0, 0, 1, 18, 10, 0, 13, 0, 0, 1, 0, 0, 0]' : 0.16946}
{'[0, 0, 3, 6, 4, 0, 0, 1, 18, 10, 0, 13, 0, 0, 1, 0, 0, 0]' : 0.169481}
{'[0, 0, 3, 6, 4, 0, 0, 1, 18, 10, 0, 13, 0, 0, 1, 0, 0, 0]' : 0.169526}
{'[0, 0, 3, 6, 4, 0, 0, 1, 18, 10, 0, 13, 0, 0, 1, 0, 0, 0]' : 0.169777}
{'[0, 0, 3, 6, 4, 0, 0, 1, 18, 10, 0, 13, 0, 0, 1, 0, 0, 0]' : 0.169656}

out:
 ["{'[0, 0, 3, 6, 4, 0, 0, 1, 18, 10, 0, 13, 0, 0, 1, 0, 0, 0]' : 0.182124}", "{'[0, 0, 3, 6, 4, 0, 0, 1, 18, 10, 0, 13, 0, 0, 1, 0, 0, 0]' : 0.169813}", "{'[0, 0, 3, 6, 4, 0, 0, 1, 18, 10, 0, 13, 0, 0, 1, 0, 0, 0]' : 0.16979}", "{'[0, 0, 3, 6, 4, 0, 0, 1, 18, 10, 0, 13, 0, 0, 1, 0, 0, 0]' : 0.169529}", "{'[0, 0, 3, 6, 4, 0, 0, 1, 18, 10, 0, 13, 0, 0, 1, 0, 0, 0]' : 0.16943}", "{'[0, 0, 3, 6, 4, 0, 0, 1, 18, 10, 0, 13, 0, 0, 1, 0, 0, 0]' : 0.169544}", "{'[0, 0, 3, 6, 4, 0, 0, 1, 18, 10, 0, 13, 0, 0, 1, 0, 0, 0]' : 0.169599}", "{'[0, 0, 3, 6, 4, 0, 0, 1, 18, 10, 0, 13, 0, 0, 1, 0, 0, 0]' : 0.16972}", "{'[0, 0, 3, 6, 4, 0, 0, 1, 18, 10, 0, 13, 0, 0, 1, 0, 0, 0]' : 0.169687}", "{'[0, 0, 3, 6, 4, 0, 0, 1, 18, 10, 0, 13, 0, 0, 1, 0, 0, 0]' : 0.170049}", "{'[0, 0, 3, 6, 4, 0, 0, 1, 18, 10, 0, 13, 0, 0, 1, 0, 0, 0]' : 0.169481}", "{'[0, 0, 3, 6, 4, 0, 0, 1, 18, 10, 0, 13, 0, 0, 1, 0, 0, 0]' : 0.169873}", "{'[0, 0, 3, 6, 4, 0, 0, 1, 18, 10, 0, 13, 0, 0, 1, 0, 0, 0]' : 0.169381}", "{'[0, 0, 3, 6, 4, 0, 0, 1, 18, 10, 0, 13, 0, 0, 1, 0, 0, 0]' : 0.169569}", "{'[0, 0, 3, 6, 4, 0, 0, 1, 18, 10, 0, 13, 0, 0, 1, 0, 0, 0]' : 0.169473}", "{'[0, 0, 3, 6, 4, 0, 0, 1, 18, 10, 0, 13, 0, 0, 1, 0, 0, 0]' : 0.169969}", "{'[0, 0, 3, 6, 4, 0, 0, 1, 18, 10, 0, 13, 0, 0, 1, 0, 0, 0]' : 0.169723}", "{'[0, 0, 3, 6, 4, 0, 0, 1, 18, 10, 0, 13, 0, 0, 1, 0, 0, 0]' : 0.16957}", "{'[0, 0, 3, 6, 4, 0, 0, 1, 18, 10, 0, 13, 0, 0, 1, 0, 0, 0]' : 0.169974}", "{'[0, 0, 3, 6, 4, 0, 0, 1, 18, 10, 0, 13, 0, 0, 1, 0, 0, 0]' : 0.169393}", "{'[0, 0, 3, 6, 4, 0, 0, 1, 18, 10, 0, 13, 0, 0, 1, 0, 0, 0]' : 0.169417}", "{'[0, 0, 3, 6, 4, 0, 0, 1, 18, 10, 0, 13, 0, 0, 1, 0, 0, 0]' : 0.169737}", "{'[0, 0, 3, 6, 4, 0, 0, 1, 18, 10, 0, 13, 0, 0, 1, 0, 0, 0]' : 0.169781}", "{'[0, 0, 3, 6, 4, 0, 0, 1, 18, 10, 0, 13, 0, 0, 1, 0, 0, 0]' : 0.169487}", "{'[0, 0, 3, 6, 4, 0, 0, 1, 18, 10, 0, 13, 0, 0, 1, 0, 0, 0]' : 0.169494}", "{'[0, 0, 3, 6, 4, 0, 0, 1, 18, 10, 0, 13, 0, 0, 1, 0, 0, 0]' : 0.16946}", "{'[0, 0, 3, 6, 4, 0, 0, 1, 18, 10, 0, 13, 0, 0, 1, 0, 0, 0]' : 0.169481}", "{'[0, 0, 3, 6, 4, 0, 0, 1, 18, 10, 0, 13, 0, 0, 1, 0, 0, 0]' : 0.169526}", "{'[0, 0, 3, 6, 4, 0, 0, 1, 18, 10, 0, 13, 0, 0, 1, 0, 0, 0]' : 0.169777}", "{'[0, 0, 3, 6, 4, 0, 0, 1, 18, 10, 0, 13, 0, 0, 1, 0, 0, 0]' : 0.169656}"]
returning from 'run': {'[0, 0, 3, 6, 4, 0, 0, 1, 18, 10, 0, 13, 0, 0, 1, 0, 0, 0]': ([0.182124, 0.169813, 0.16979, 0.169529, 0.16943, 0.169544, 0.169599, 0.16972, 0.169687, 0.170049, 0.169481, 0.169873, 0.169381, 0.169569, 0.169473, 0.169969, 0.169723, 0.16957, 0.169974, 0.169393, 0.169417, 0.169737, 0.169781, 0.169487, 0.169494, 0.16946, 0.169481, 0.169526, 0.169777, 0.169656], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 3, 6, 4, 0, 0, 1, 18, 10, 0, 13, 0, 0, 1, 0, 0, 0]': ([0.182124, 0.169813, 0.16979, 0.169529, 0.16943, 0.169544, 0.169599, 0.16972, 0.169687, 0.170049, 0.169481, 0.169873, 0.169381, 0.169569, 0.169473, 0.169969, 0.169723, 0.16957, 0.169974, 0.169393, 0.169417, 0.169737, 0.169781, 0.169487, 0.169494, 0.16946, 0.169481, 0.169526, 0.169777, 0.169656], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		152
        Multiplications: 	32
        Divisions: 		0
        Logical: 		0
        Reads: 			347
        Writes: 		92
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest46.exe __orio_perftest46.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest46.exe  
Program Test Output: 
{'[0, 1, 5, 2, 0, 0, 1, 1, 25, 0, 26, 5, 0, 1, 1, 1, 1, 1]' : 0.223955}
{'[0, 1, 5, 2, 0, 0, 1, 1, 25, 0, 26, 5, 0, 1, 1, 1, 1, 1]' : 0.223805}
{'[0, 1, 5, 2, 0, 0, 1, 1, 25, 0, 26, 5, 0, 1, 1, 1, 1, 1]' : 0.223735}
{'[0, 1, 5, 2, 0, 0, 1, 1, 25, 0, 26, 5, 0, 1, 1, 1, 1, 1]' : 0.191404}
{'[0, 1, 5, 2, 0, 0, 1, 1, 25, 0, 26, 5, 0, 1, 1, 1, 1, 1]' : 0.187423}
{'[0, 1, 5, 2, 0, 0, 1, 1, 25, 0, 26, 5, 0, 1, 1, 1, 1, 1]' : 0.187736}
{'[0, 1, 5, 2, 0, 0, 1, 1, 25, 0, 26, 5, 0, 1, 1, 1, 1, 1]' : 0.187703}
{'[0, 1, 5, 2, 0, 0, 1, 1, 25, 0, 26, 5, 0, 1, 1, 1, 1, 1]' : 0.187396}
{'[0, 1, 5, 2, 0, 0, 1, 1, 25, 0, 26, 5, 0, 1, 1, 1, 1, 1]' : 0.187963}
{'[0, 1, 5, 2, 0, 0, 1, 1, 25, 0, 26, 5, 0, 1, 1, 1, 1, 1]' : 0.187733}
{'[0, 1, 5, 2, 0, 0, 1, 1, 25, 0, 26, 5, 0, 1, 1, 1, 1, 1]' : 0.187584}
{'[0, 1, 5, 2, 0, 0, 1, 1, 25, 0, 26, 5, 0, 1, 1, 1, 1, 1]' : 0.187621}
{'[0, 1, 5, 2, 0, 0, 1, 1, 25, 0, 26, 5, 0, 1, 1, 1, 1, 1]' : 0.187587}
{'[0, 1, 5, 2, 0, 0, 1, 1, 25, 0, 26, 5, 0, 1, 1, 1, 1, 1]' : 0.187587}
{'[0, 1, 5, 2, 0, 0, 1, 1, 25, 0, 26, 5, 0, 1, 1, 1, 1, 1]' : 0.188128}
{'[0, 1, 5, 2, 0, 0, 1, 1, 25, 0, 26, 5, 0, 1, 1, 1, 1, 1]' : 0.187575}
{'[0, 1, 5, 2, 0, 0, 1, 1, 25, 0, 26, 5, 0, 1, 1, 1, 1, 1]' : 0.187767}
{'[0, 1, 5, 2, 0, 0, 1, 1, 25, 0, 26, 5, 0, 1, 1, 1, 1, 1]' : 0.18758}
{'[0, 1, 5, 2, 0, 0, 1, 1, 25, 0, 26, 5, 0, 1, 1, 1, 1, 1]' : 0.187466}
{'[0, 1, 5, 2, 0, 0, 1, 1, 25, 0, 26, 5, 0, 1, 1, 1, 1, 1]' : 0.187663}
{'[0, 1, 5, 2, 0, 0, 1, 1, 25, 0, 26, 5, 0, 1, 1, 1, 1, 1]' : 0.187905}
{'[0, 1, 5, 2, 0, 0, 1, 1, 25, 0, 26, 5, 0, 1, 1, 1, 1, 1]' : 0.187723}
{'[0, 1, 5, 2, 0, 0, 1, 1, 25, 0, 26, 5, 0, 1, 1, 1, 1, 1]' : 0.187743}
{'[0, 1, 5, 2, 0, 0, 1, 1, 25, 0, 26, 5, 0, 1, 1, 1, 1, 1]' : 0.187514}
{'[0, 1, 5, 2, 0, 0, 1, 1, 25, 0, 26, 5, 0, 1, 1, 1, 1, 1]' : 0.187717}
{'[0, 1, 5, 2, 0, 0, 1, 1, 25, 0, 26, 5, 0, 1, 1, 1, 1, 1]' : 0.18755}
{'[0, 1, 5, 2, 0, 0, 1, 1, 25, 0, 26, 5, 0, 1, 1, 1, 1, 1]' : 0.187952}
{'[0, 1, 5, 2, 0, 0, 1, 1, 25, 0, 26, 5, 0, 1, 1, 1, 1, 1]' : 0.187599}
{'[0, 1, 5, 2, 0, 0, 1, 1, 25, 0, 26, 5, 0, 1, 1, 1, 1, 1]' : 0.188083}
{'[0, 1, 5, 2, 0, 0, 1, 1, 25, 0, 26, 5, 0, 1, 1, 1, 1, 1]' : 0.187451}

out:
 ["{'[0, 1, 5, 2, 0, 0, 1, 1, 25, 0, 26, 5, 0, 1, 1, 1, 1, 1]' : 0.223955}", "{'[0, 1, 5, 2, 0, 0, 1, 1, 25, 0, 26, 5, 0, 1, 1, 1, 1, 1]' : 0.223805}", "{'[0, 1, 5, 2, 0, 0, 1, 1, 25, 0, 26, 5, 0, 1, 1, 1, 1, 1]' : 0.223735}", "{'[0, 1, 5, 2, 0, 0, 1, 1, 25, 0, 26, 5, 0, 1, 1, 1, 1, 1]' : 0.191404}", "{'[0, 1, 5, 2, 0, 0, 1, 1, 25, 0, 26, 5, 0, 1, 1, 1, 1, 1]' : 0.187423}", "{'[0, 1, 5, 2, 0, 0, 1, 1, 25, 0, 26, 5, 0, 1, 1, 1, 1, 1]' : 0.187736}", "{'[0, 1, 5, 2, 0, 0, 1, 1, 25, 0, 26, 5, 0, 1, 1, 1, 1, 1]' : 0.187703}", "{'[0, 1, 5, 2, 0, 0, 1, 1, 25, 0, 26, 5, 0, 1, 1, 1, 1, 1]' : 0.187396}", "{'[0, 1, 5, 2, 0, 0, 1, 1, 25, 0, 26, 5, 0, 1, 1, 1, 1, 1]' : 0.187963}", "{'[0, 1, 5, 2, 0, 0, 1, 1, 25, 0, 26, 5, 0, 1, 1, 1, 1, 1]' : 0.187733}", "{'[0, 1, 5, 2, 0, 0, 1, 1, 25, 0, 26, 5, 0, 1, 1, 1, 1, 1]' : 0.187584}", "{'[0, 1, 5, 2, 0, 0, 1, 1, 25, 0, 26, 5, 0, 1, 1, 1, 1, 1]' : 0.187621}", "{'[0, 1, 5, 2, 0, 0, 1, 1, 25, 0, 26, 5, 0, 1, 1, 1, 1, 1]' : 0.187587}", "{'[0, 1, 5, 2, 0, 0, 1, 1, 25, 0, 26, 5, 0, 1, 1, 1, 1, 1]' : 0.187587}", "{'[0, 1, 5, 2, 0, 0, 1, 1, 25, 0, 26, 5, 0, 1, 1, 1, 1, 1]' : 0.188128}", "{'[0, 1, 5, 2, 0, 0, 1, 1, 25, 0, 26, 5, 0, 1, 1, 1, 1, 1]' : 0.187575}", "{'[0, 1, 5, 2, 0, 0, 1, 1, 25, 0, 26, 5, 0, 1, 1, 1, 1, 1]' : 0.187767}", "{'[0, 1, 5, 2, 0, 0, 1, 1, 25, 0, 26, 5, 0, 1, 1, 1, 1, 1]' : 0.18758}", "{'[0, 1, 5, 2, 0, 0, 1, 1, 25, 0, 26, 5, 0, 1, 1, 1, 1, 1]' : 0.187466}", "{'[0, 1, 5, 2, 0, 0, 1, 1, 25, 0, 26, 5, 0, 1, 1, 1, 1, 1]' : 0.187663}", "{'[0, 1, 5, 2, 0, 0, 1, 1, 25, 0, 26, 5, 0, 1, 1, 1, 1, 1]' : 0.187905}", "{'[0, 1, 5, 2, 0, 0, 1, 1, 25, 0, 26, 5, 0, 1, 1, 1, 1, 1]' : 0.187723}", "{'[0, 1, 5, 2, 0, 0, 1, 1, 25, 0, 26, 5, 0, 1, 1, 1, 1, 1]' : 0.187743}", "{'[0, 1, 5, 2, 0, 0, 1, 1, 25, 0, 26, 5, 0, 1, 1, 1, 1, 1]' : 0.187514}", "{'[0, 1, 5, 2, 0, 0, 1, 1, 25, 0, 26, 5, 0, 1, 1, 1, 1, 1]' : 0.187717}", "{'[0, 1, 5, 2, 0, 0, 1, 1, 25, 0, 26, 5, 0, 1, 1, 1, 1, 1]' : 0.18755}", "{'[0, 1, 5, 2, 0, 0, 1, 1, 25, 0, 26, 5, 0, 1, 1, 1, 1, 1]' : 0.187952}", "{'[0, 1, 5, 2, 0, 0, 1, 1, 25, 0, 26, 5, 0, 1, 1, 1, 1, 1]' : 0.187599}", "{'[0, 1, 5, 2, 0, 0, 1, 1, 25, 0, 26, 5, 0, 1, 1, 1, 1, 1]' : 0.188083}", "{'[0, 1, 5, 2, 0, 0, 1, 1, 25, 0, 26, 5, 0, 1, 1, 1, 1, 1]' : 0.187451}"]
returning from 'run': {'[0, 1, 5, 2, 0, 0, 1, 1, 25, 0, 26, 5, 0, 1, 1, 1, 1, 1]': ([0.223955, 0.223805, 0.223735, 0.191404, 0.187423, 0.187736, 0.187703, 0.187396, 0.187963, 0.187733, 0.187584, 0.187621, 0.187587, 0.187587, 0.188128, 0.187575, 0.187767, 0.18758, 0.187466, 0.187663, 0.187905, 0.187723, 0.187743, 0.187514, 0.187717, 0.18755, 0.187952, 0.187599, 0.188083, 0.187451], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 1, 5, 2, 0, 0, 1, 1, 25, 0, 26, 5, 0, 1, 1, 1, 1, 1]': ([0.223955, 0.223805, 0.223735, 0.191404, 0.187423, 0.187736, 0.187703, 0.187396, 0.187963, 0.187733, 0.187584, 0.187621, 0.187587, 0.187587, 0.188128, 0.187575, 0.187767, 0.18758, 0.187466, 0.187663, 0.187905, 0.187723, 0.187743, 0.187514, 0.187717, 0.18755, 0.187952, 0.187599, 0.188083, 0.187451], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Complete design, with measurements:
     T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
600     0    1    0    3    6    6       0       0   14   2   0  18    0    0
601     0    0    1    2    3    5       0       0    0   3   9   0    1    1
622     3    5    4    4    5    6       0       1   25  29   0  29    2    0
650     3    1    6    6    2    6       1       1    2  29  29   0    0    1
652     6    6    0    0    0    6       0       0   25   3  25   0    0    0
696     0    6    0    6    0    1       1       0   20   1   3   0    0    1
729     0    2    6    2    5    4       0       0    8  24  10   0    0    0
803     2    6    4    0    5    0       0       0   12   0  29  27    0    2
888     2    0    3    0    5    6       1       1    0   0  12   4    2    0
938     5    6    6    3    0    5       1       1    0   9   0   9    1    0
992     2    1    6    5    6    5       0       0   29   0  29  29    2    0
1021    0    0    2    2    0    6       0       1   18   0   5   0    1    1
1037    6    0    0    6    6    0       1       0   27  22  21   0    1    0
1215    3    4    3    2    0    2       1       1   26  27   0  16    0    0
1286    6    1    0    4    6    5       1       0    4  14   0  12    0    1
1389    5    0    4    6    0    0       1       1    0  23   0  28    0    0
1528    6    2    3    0    1    1       0       0    0  17   0   3    0    2
1536    2    3    6    0    3    0       1       0   29  23   0   0    0    0
1872    1    1    3    0    0    0       0       0    4  19   4   0    0    1
1874    6    5    6    0    6    0       1       1   16  10   0  12    1    1
2043    4    2    1    0    0    3       1       0    6   0  26  22    1    0
2396    0    3    1    3    1    0       0       1   18   3  28   0    2    0
2411    0    6    4    3    5    6       1       1   19   0  24  20    0    0
2577    3    2    2    6    6    3       1       1    2   2   7   0    2    0
2840    3    0    4    6    2    2       1       0   27   5   0  22    1    1
2919    6    2    1    6    6    0       0       1   29  12   0  27    1    1
3110    1    6    6    6    0    6       0       0   12   0   6  19    2    0
3191    5    6    1    4    4    2       1       0   14   0  24   0    1    0
3538    4    0    1    5    3    3       1       0    9   6   0  27    0    0
4026    2    5    2    6    0    5       1       0   29  28  28   0    0    0
4039    4    3    0    6    1    6       0       0   20   0   0   5    1    0
4040    2    5    0    3    6    5       0       1   27   4   8   0    0    2
4164    2    0    4    1    1    3       1       0   13   0   0   7    0    1
4304    6    6    2    4    6    4       1       0    4   8   0  23    0    0
4311    6    6    4    5    6    6       0       1    9   5   0   0    0    1
4442    0    0    3    6    4    0       0       1   18  10   0  13    0    0
4446    0    1    5    2    0    0       1       1   25   0  26   5    0    1
     RT_K SCR VEC1 VEC2  cost_mean
600     2   1    1    0 0.09898525
601     0   0    0    0 0.11498850
622     0   0    1    1 0.18002640
650     1   1    0    0 0.27286703
652     1   0    1    1 0.11270000
696     0   0    1    1 0.13508233
729     0   0    0    0 0.16160257
803     0   1    0    0 0.15408000
888     0   0    1    1 0.25072087
938     1   0    1    1 0.11906617
992     0   0    1    0 0.23894787
1021    0   1    0    0 0.09605302
1037    0   1    0    1 0.10027782
1215    0   1    1    0 0.29482920
1286    1   0    0    1 0.16043113
1389    1   1    1    1 0.17720997
1528    0   1    1    1 0.10952720
1536    1   1    0    1 0.16110143
1872    1   0    1    1 0.19450213
1874    0   0    1    0 0.10822687
2043    0   0    1    1 0.12425940
2396    0   1    1    0 0.24833183
2411    0   0    0    1 0.23202383
2577    0   1    0    1 0.17177960
2840    0   1    1    1 0.09955170
2919    0   0    0    1 0.09931063
3110    0   1    0    1 0.14846863
3191    1   1    1    0 0.09159436
3538    0   1    1    0 0.12018310
4026    2   1    0    1 0.19608413
4039    0   0    0    0 0.11946113
4040    0   1    1    0 0.14794820
4164    0   1    1    0 0.16799847
4304    2   0    0    0 0.16396630
4311    0   1    1    1 0.14482547
4442    1   0    0    0 0.17005023
4446    1   1    1    1 0.19142160

Heteroscedasticity Test p-value: 0.168770066635
Regression Step:                Df   Sum Sq  Mean Sq F value Pr(>F)  
T1_I             1 0.011007 0.011007   5.697 0.0626 .
T1_J             1 0.000103 0.000103   0.053 0.8268  
T1_K             1 0.009669 0.009669   5.005 0.0755 .
T2_I             1 0.000241 0.000241   0.125 0.7383  
T2_J             1 0.000003 0.000003   0.002 0.9699  
T2_K             1 0.000440 0.000440   0.228 0.6534  
ACOPY_x          1 0.005100 0.005100   2.640 0.1652  
ACOPY_y          1 0.008766 0.008766   4.537 0.0864 .
U1_I             1 0.000016 0.000016   0.008 0.9311  
U_I              1 0.008476 0.008476   4.387 0.0904 .
U_J              1 0.009311 0.009311   4.819 0.0796 .
U_K              1 0.002007 0.002007   1.039 0.3548  
RT_I             1 0.000029 0.000029   0.015 0.9066  
RT_J             1 0.000416 0.000416   0.215 0.6623  
RT_K             1 0.000651 0.000651   0.337 0.5868  
SCR              1 0.000050 0.000050   0.026 0.8785  
VEC1             1 0.001252 0.001252   0.648 0.4573  
VEC2             1 0.000697 0.000697   0.361 0.5742  
I(1/(1 + T1_I))  1 0.008661 0.008661   4.483 0.0878 .
I(1/(1 + T1_J))  1 0.002394 0.002394   1.239 0.3163  
I(1/(1 + T1_K))  1 0.000599 0.000599   0.310 0.6016  
I(1/(1 + T2_I))  1 0.000228 0.000228   0.118 0.7452  
I(1/(1 + T2_J))  1 0.000096 0.000096   0.050 0.8324  
I(1/(1 + T2_K))  1 0.001299 0.001299   0.672 0.4495  
I(1/(1 + U1_I))  1 0.000323 0.000323   0.167 0.6996  
I(1/(1 + U_I))   1 0.000022 0.000022   0.012 0.9183  
I(1/(1 + U_J))   1 0.001083 0.001083   0.561 0.4877  
I(1/(1 + U_K))   1 0.002234 0.002234   1.156 0.3314  
I(1/(1 + RT_I))  1 0.016612 0.016612   8.598 0.0325 *
I(1/(1 + RT_J))  1 0.001594 0.001594   0.825 0.4054  
I(1/(1 + RT_K))  1 0.000017 0.000017   0.009 0.9283  
Residuals        5 0.009660 0.001932                 
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Predicting Best
Generating valid search space of size 4600 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Valid coordinates: 920
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Valid coordinates: 1840
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Tested coordinates: 110000
Valid coordinates: 2760
Tested coordinates: 120000
Tested coordinates: 130000
Tested coordinates: 140000
Tested coordinates: 150000
Valid coordinates: 3680
Tested coordinates: 160000
Tested coordinates: 170000
Tested coordinates: 180000
Valid coordinates: 4600
Valid/Tested configurations: 4600/187831
Generated Search Space:
NULL
Identical predictions (tol = 1e-5): 1
Getting Best from Design
Response: ['cost_mean']
Design Names:  [1] "T1_I"      "T1_J"      "T1_K"      "T2_I"      "T2_J"      "T2_K"     
 [7] "ACOPY_x"   "ACOPY_y"   "U1_I"      "U_I"       "U_J"       "U_K"      
[13] "RT_I"      "RT_J"      "RT_K"      "SCR"       "VEC1"      "VEC2"     
[19] "cost_mean"

Design Response:       cost_mean
600  0.09898525
601  0.11498850
622  0.18002640
650  0.27286703
652  0.11270000
696  0.13508233
729  0.16160257
803  0.15408000
888  0.25072087
938  0.11906617
992  0.23894787
1021 0.09605302
1037 0.10027782
1215 0.29482920
1286 0.16043113
1389 0.17720997
1528 0.10952720
1536 0.16110143
1872 0.19450213
1874 0.10822687
2043 0.12425940
2396 0.24833183
2411 0.23202383
2577 0.17177960
2840 0.09955170
2919 0.09931063
3110 0.14846863
3191 0.09159436
3538 0.12018310
4026 0.19608413
4039 0.11946113
4040 0.14794820
4164 0.16799847
4304 0.16396630
4311 0.14482547
4442 0.17005023
4446 0.19142160

Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Getting fixed variables
Pruning Model
Best Predicted:      T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
2847    0    0    5    4    3    5       0       0   20   4   0  20    1    0
     RT_K SCR VEC1 VEC2
2847    1   1    1    1

Best From Design: [5, 6, 1, 4, 4, 2, 1, 0, 14, 0, 24, 0, 1, 0, 1, 1, 1, 0]
Pruned Factors: ['T1_J', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'U1_I', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Fixed Factors: {'U_J': 0, 'U_I': 4, 'T1_I': 0, 'ACOPY_y': 0, 'T1_K': 5}
Length of requested configs: 1
Result was on Database, Returning Now
Starting Point (-O3):
0.16283083333333334
Predicted Best Point:
[0, 0, 5, 4, 3, 5, 0, 0, 20, 4, 0, 20, 1, 0, 1, 1, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	35
        Max loop nest depth: 	5
        Additions: 		2134
        Multiplications: 	868
        Divisions: 		0
        Logical: 		0
        Reads: 			4569
        Writes: 		949
        Comparisons:		35
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest47.exe __orio_perftest47.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest47.exe  
Program Test Output: 
{'[0, 0, 5, 4, 3, 5, 0, 0, 20, 4, 0, 20, 1, 0, 1, 1, 1, 1]' : 0.108594}
{'[0, 0, 5, 4, 3, 5, 0, 0, 20, 4, 0, 20, 1, 0, 1, 1, 1, 1]' : 0.105385}
{'[0, 0, 5, 4, 3, 5, 0, 0, 20, 4, 0, 20, 1, 0, 1, 1, 1, 1]' : 0.0999119}
{'[0, 0, 5, 4, 3, 5, 0, 0, 20, 4, 0, 20, 1, 0, 1, 1, 1, 1]' : 0.0999019}
{'[0, 0, 5, 4, 3, 5, 0, 0, 20, 4, 0, 20, 1, 0, 1, 1, 1, 1]' : 0.100247}
{'[0, 0, 5, 4, 3, 5, 0, 0, 20, 4, 0, 20, 1, 0, 1, 1, 1, 1]' : 0.10023}
{'[0, 0, 5, 4, 3, 5, 0, 0, 20, 4, 0, 20, 1, 0, 1, 1, 1, 1]' : 0.10024}
{'[0, 0, 5, 4, 3, 5, 0, 0, 20, 4, 0, 20, 1, 0, 1, 1, 1, 1]' : 0.100226}
{'[0, 0, 5, 4, 3, 5, 0, 0, 20, 4, 0, 20, 1, 0, 1, 1, 1, 1]' : 0.100242}
{'[0, 0, 5, 4, 3, 5, 0, 0, 20, 4, 0, 20, 1, 0, 1, 1, 1, 1]' : 0.100366}
{'[0, 0, 5, 4, 3, 5, 0, 0, 20, 4, 0, 20, 1, 0, 1, 1, 1, 1]' : 0.100239}
{'[0, 0, 5, 4, 3, 5, 0, 0, 20, 4, 0, 20, 1, 0, 1, 1, 1, 1]' : 0.100252}
{'[0, 0, 5, 4, 3, 5, 0, 0, 20, 4, 0, 20, 1, 0, 1, 1, 1, 1]' : 0.100263}
{'[0, 0, 5, 4, 3, 5, 0, 0, 20, 4, 0, 20, 1, 0, 1, 1, 1, 1]' : 0.100283}
{'[0, 0, 5, 4, 3, 5, 0, 0, 20, 4, 0, 20, 1, 0, 1, 1, 1, 1]' : 0.100423}
{'[0, 0, 5, 4, 3, 5, 0, 0, 20, 4, 0, 20, 1, 0, 1, 1, 1, 1]' : 0.100198}
{'[0, 0, 5, 4, 3, 5, 0, 0, 20, 4, 0, 20, 1, 0, 1, 1, 1, 1]' : 0.10022}
{'[0, 0, 5, 4, 3, 5, 0, 0, 20, 4, 0, 20, 1, 0, 1, 1, 1, 1]' : 0.100223}
{'[0, 0, 5, 4, 3, 5, 0, 0, 20, 4, 0, 20, 1, 0, 1, 1, 1, 1]' : 0.100292}
{'[0, 0, 5, 4, 3, 5, 0, 0, 20, 4, 0, 20, 1, 0, 1, 1, 1, 1]' : 0.100363}
{'[0, 0, 5, 4, 3, 5, 0, 0, 20, 4, 0, 20, 1, 0, 1, 1, 1, 1]' : 0.10052}
{'[0, 0, 5, 4, 3, 5, 0, 0, 20, 4, 0, 20, 1, 0, 1, 1, 1, 1]' : 0.10026}
{'[0, 0, 5, 4, 3, 5, 0, 0, 20, 4, 0, 20, 1, 0, 1, 1, 1, 1]' : 0.100309}
{'[0, 0, 5, 4, 3, 5, 0, 0, 20, 4, 0, 20, 1, 0, 1, 1, 1, 1]' : 0.100247}
{'[0, 0, 5, 4, 3, 5, 0, 0, 20, 4, 0, 20, 1, 0, 1, 1, 1, 1]' : 0.100347}
{'[0, 0, 5, 4, 3, 5, 0, 0, 20, 4, 0, 20, 1, 0, 1, 1, 1, 1]' : 0.100279}
{'[0, 0, 5, 4, 3, 5, 0, 0, 20, 4, 0, 20, 1, 0, 1, 1, 1, 1]' : 0.100207}
{'[0, 0, 5, 4, 3, 5, 0, 0, 20, 4, 0, 20, 1, 0, 1, 1, 1, 1]' : 0.100304}
{'[0, 0, 5, 4, 3, 5, 0, 0, 20, 4, 0, 20, 1, 0, 1, 1, 1, 1]' : 0.100228}
{'[0, 0, 5, 4, 3, 5, 0, 0, 20, 4, 0, 20, 1, 0, 1, 1, 1, 1]' : 0.10047}

out:
 ["{'[0, 0, 5, 4, 3, 5, 0, 0, 20, 4, 0, 20, 1, 0, 1, 1, 1, 1]' : 0.108594}", "{'[0, 0, 5, 4, 3, 5, 0, 0, 20, 4, 0, 20, 1, 0, 1, 1, 1, 1]' : 0.105385}", "{'[0, 0, 5, 4, 3, 5, 0, 0, 20, 4, 0, 20, 1, 0, 1, 1, 1, 1]' : 0.0999119}", "{'[0, 0, 5, 4, 3, 5, 0, 0, 20, 4, 0, 20, 1, 0, 1, 1, 1, 1]' : 0.0999019}", "{'[0, 0, 5, 4, 3, 5, 0, 0, 20, 4, 0, 20, 1, 0, 1, 1, 1, 1]' : 0.100247}", "{'[0, 0, 5, 4, 3, 5, 0, 0, 20, 4, 0, 20, 1, 0, 1, 1, 1, 1]' : 0.10023}", "{'[0, 0, 5, 4, 3, 5, 0, 0, 20, 4, 0, 20, 1, 0, 1, 1, 1, 1]' : 0.10024}", "{'[0, 0, 5, 4, 3, 5, 0, 0, 20, 4, 0, 20, 1, 0, 1, 1, 1, 1]' : 0.100226}", "{'[0, 0, 5, 4, 3, 5, 0, 0, 20, 4, 0, 20, 1, 0, 1, 1, 1, 1]' : 0.100242}", "{'[0, 0, 5, 4, 3, 5, 0, 0, 20, 4, 0, 20, 1, 0, 1, 1, 1, 1]' : 0.100366}", "{'[0, 0, 5, 4, 3, 5, 0, 0, 20, 4, 0, 20, 1, 0, 1, 1, 1, 1]' : 0.100239}", "{'[0, 0, 5, 4, 3, 5, 0, 0, 20, 4, 0, 20, 1, 0, 1, 1, 1, 1]' : 0.100252}", "{'[0, 0, 5, 4, 3, 5, 0, 0, 20, 4, 0, 20, 1, 0, 1, 1, 1, 1]' : 0.100263}", "{'[0, 0, 5, 4, 3, 5, 0, 0, 20, 4, 0, 20, 1, 0, 1, 1, 1, 1]' : 0.100283}", "{'[0, 0, 5, 4, 3, 5, 0, 0, 20, 4, 0, 20, 1, 0, 1, 1, 1, 1]' : 0.100423}", "{'[0, 0, 5, 4, 3, 5, 0, 0, 20, 4, 0, 20, 1, 0, 1, 1, 1, 1]' : 0.100198}", "{'[0, 0, 5, 4, 3, 5, 0, 0, 20, 4, 0, 20, 1, 0, 1, 1, 1, 1]' : 0.10022}", "{'[0, 0, 5, 4, 3, 5, 0, 0, 20, 4, 0, 20, 1, 0, 1, 1, 1, 1]' : 0.100223}", "{'[0, 0, 5, 4, 3, 5, 0, 0, 20, 4, 0, 20, 1, 0, 1, 1, 1, 1]' : 0.100292}", "{'[0, 0, 5, 4, 3, 5, 0, 0, 20, 4, 0, 20, 1, 0, 1, 1, 1, 1]' : 0.100363}", "{'[0, 0, 5, 4, 3, 5, 0, 0, 20, 4, 0, 20, 1, 0, 1, 1, 1, 1]' : 0.10052}", "{'[0, 0, 5, 4, 3, 5, 0, 0, 20, 4, 0, 20, 1, 0, 1, 1, 1, 1]' : 0.10026}", "{'[0, 0, 5, 4, 3, 5, 0, 0, 20, 4, 0, 20, 1, 0, 1, 1, 1, 1]' : 0.100309}", "{'[0, 0, 5, 4, 3, 5, 0, 0, 20, 4, 0, 20, 1, 0, 1, 1, 1, 1]' : 0.100247}", "{'[0, 0, 5, 4, 3, 5, 0, 0, 20, 4, 0, 20, 1, 0, 1, 1, 1, 1]' : 0.100347}", "{'[0, 0, 5, 4, 3, 5, 0, 0, 20, 4, 0, 20, 1, 0, 1, 1, 1, 1]' : 0.100279}", "{'[0, 0, 5, 4, 3, 5, 0, 0, 20, 4, 0, 20, 1, 0, 1, 1, 1, 1]' : 0.100207}", "{'[0, 0, 5, 4, 3, 5, 0, 0, 20, 4, 0, 20, 1, 0, 1, 1, 1, 1]' : 0.100304}", "{'[0, 0, 5, 4, 3, 5, 0, 0, 20, 4, 0, 20, 1, 0, 1, 1, 1, 1]' : 0.100228}", "{'[0, 0, 5, 4, 3, 5, 0, 0, 20, 4, 0, 20, 1, 0, 1, 1, 1, 1]' : 0.10047}"]
returning from 'run': {'[0, 0, 5, 4, 3, 5, 0, 0, 20, 4, 0, 20, 1, 0, 1, 1, 1, 1]': ([0.108594, 0.105385, 0.0999119, 0.0999019, 0.100247, 0.10023, 0.10024, 0.100226, 0.100242, 0.100366, 0.100239, 0.100252, 0.100263, 0.100283, 0.100423, 0.100198, 0.10022, 0.100223, 0.100292, 0.100363, 0.10052, 0.10026, 0.100309, 0.100247, 0.100347, 0.100279, 0.100207, 0.100304, 0.100228, 0.10047], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 5, 4, 3, 5, 0, 0, 20, 4, 0, 20, 1, 0, 1, 1, 1, 1]': ([0.108594, 0.105385, 0.0999119, 0.0999019, 0.100247, 0.10023, 0.10024, 0.100226, 0.100242, 0.100366, 0.100239, 0.100252, 0.100263, 0.100283, 0.100423, 0.100198, 0.10022, 0.100223, 0.100292, 0.100363, 0.10052, 0.10026, 0.100309, 0.100247, 0.100347, 0.100279, 0.100207, 0.100304, 0.100228, 0.10047], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Design Best Point:
[5, 6, 1, 4, 4, 2, 1, 0, 14, 0, 24, 0, 1, 0, 1, 1, 1, 0]
Length of requested configs: 1
Result was on Database, Returning Now
Fixed Factors: {'U_J': 0, 'U_I': 4, 'T1_I': 0, 'ACOPY_y': 0, 'T1_K': 5}
Slowdown (Design Best): 0.5625123620116992
Slowdown (Predicted Best): 0.6184886768988265
Budget: 37/180
Updating Global Best: 0.09159435666666665
Current Best Point: 
[5, 6, 1, 4, 4, 2, 1, 0, 14, 0, 24, 0, 1, 0, 1, 1, 1, 0]
Step 1
Generating valid search space of size 3300 (does not spend evaluations)
Valid coordinates: 660
Valid coordinates: 1320
Valid coordinates: 1980
Tested coordinates: 10000
Valid coordinates: 2640
Valid coordinates: 3300
Valid/Tested configurations: 3300/13973
Generated Search Space:
NULL
Clean Info:
Removed Factors: character(0)

Removed Inverse Factors: [1] "ACOPY_x" "SCR"     "VEC1"    "VEC2"   

New Factors: ['T1_J', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'U1_I', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
New Inverse Factors: ['T1_J', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_K', 'RT_I', 'RT_J', 'RT_K']
New Fixed Factors: {'U_J': 0, 'U_I': 4, 'T1_I': 0, 'ACOPY_y': 0, 'T1_K': 5}
Full Model:  ~ T1_J + T2_I + T2_J + T2_K + ACOPY_x + U1_I + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_J)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Fixed Factors: {'U_J': 0, 'U_I': 4, 'T1_I': 0, 'ACOPY_y': 0, 'T1_K': 5}
Computing D-Optimal Design
Computing D-Optimal Design with 33 experiments
Design Formula:  ~ T1_J + T2_I + T2_J + T2_K + ACOPY_x + U1_I + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_J)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Starting "optFederov" run
Using Search Space:
NULL
Data Dimensions: [1] 3300   13

     T1_J T2_I T2_J T2_K ACOPY_x U1_I U_K RT_I RT_J RT_K SCR VEC1 VEC2
32      1    6    6    0       0   16   0    0    1    1   1    1    0
82      0    5    6    4       0    0  29    0    0    2   1    1    0
113     4    0    2    3       1   10  28    0    0    1   0    1    1
186     2    2    6    3       0   29   8    2    0    0   1    0    0
353     0    0    0    3       0   23   0    1    0    0   1    1    0
360     1    5    4    4       0    0   0    0    0    0   1    0    1
495     4    0    3    5       0   29  29    1    1    0   0    0    0
671     2    5    0    6       1   27  27    0    1    0   1    0    1
674     2    5    4    0       1    3  29    1    1    0   0    0    1
716     5    2    6    3       0   28  29    0    2    0   1    0    0
803     6    1    0    6       0   23  27    0    1    0   0    1    1
823     6    1    4    0       1    0  15    2    0    0   0    0    1
904     2    4    0    3       1    7   5    0    0    2   1    1    1
1045    6    6    6    0       1   27   2    0    0    0   1    1    0
1123    4    4    3    6       0    5   4    1    0    1   1    0    0
1188    6    2    0    0       0    0  29    1    0    0   1    1    0
1235    6    1    6    6       1    2   5    0    1    0   0    0    0
1346    0    2    6    5       1    0  20    2    0    0   1    1    0
1547    6    5    0    5       0   16   4    0    2    0   1    0    1
1678    0    0    2    3       1    6   2    0    1    1   1    0    0
1714    0    3    5    0       0   19   1    0    0    0   0    0    1
2058    1    4    2    0       1   29   8    0    0    2   0    1    0
2060    3    0    6    0       1   24   0    0    0    2   1    1    1
2390    3    0    1    6       0    0  19    0    2    0   1    1    0
2497    0    0    0    6       1   16  10    0    0    0   1    0    1
2600    4    6    0    6       1   17   0    0    0    2   0    0    0
2806    2    0    6    6       0    7  24    0    0    0   0    1    0
2840    0    4    5    6       1   29  28    1    0    1   0    1    1
2992    2    2    4    0       0    0  10    0    1    1   1    0    0
3053    0    3    5    6       1    7   0    0    2    0   1    0    1
3108    0    5    4    6       0   17   3    2    0    0   1    1    1
3129    0    6    0    0       1    7   1    0    2    0   1    1    0
3148    2    0    6    3       1    0   7    1    0    1   0    1    1

D-Efficiency Approximation: [1] 0.432

Measuring design of size 33
Current Design Names: ['T1_J', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'U1_I', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	5
        Additions: 		505
        Multiplications: 	216
        Divisions: 		0
        Logical: 		0
        Reads: 			1109
        Writes: 		230
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest48.exe __orio_perftest48.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest48.exe  
Program Test Output: 
{'[0, 1, 5, 6, 6, 0, 0, 0, 16, 4, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.103899}
{'[0, 1, 5, 6, 6, 0, 0, 0, 16, 4, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.103736}
{'[0, 1, 5, 6, 6, 0, 0, 0, 16, 4, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.103694}
{'[0, 1, 5, 6, 6, 0, 0, 0, 16, 4, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.103767}
{'[0, 1, 5, 6, 6, 0, 0, 0, 16, 4, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.103718}
{'[0, 1, 5, 6, 6, 0, 0, 0, 16, 4, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.101119}
{'[0, 1, 5, 6, 6, 0, 0, 0, 16, 4, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.089983}
{'[0, 1, 5, 6, 6, 0, 0, 0, 16, 4, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.089659}
{'[0, 1, 5, 6, 6, 0, 0, 0, 16, 4, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.089582}
{'[0, 1, 5, 6, 6, 0, 0, 0, 16, 4, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.0894148}
{'[0, 1, 5, 6, 6, 0, 0, 0, 16, 4, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.0896461}
{'[0, 1, 5, 6, 6, 0, 0, 0, 16, 4, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.089498}
{'[0, 1, 5, 6, 6, 0, 0, 0, 16, 4, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.089452}
{'[0, 1, 5, 6, 6, 0, 0, 0, 16, 4, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.089386}
{'[0, 1, 5, 6, 6, 0, 0, 0, 16, 4, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.089483}
{'[0, 1, 5, 6, 6, 0, 0, 0, 16, 4, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.089349}
{'[0, 1, 5, 6, 6, 0, 0, 0, 16, 4, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.089498}
{'[0, 1, 5, 6, 6, 0, 0, 0, 16, 4, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.0895}
{'[0, 1, 5, 6, 6, 0, 0, 0, 16, 4, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.0893991}
{'[0, 1, 5, 6, 6, 0, 0, 0, 16, 4, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.0896289}
{'[0, 1, 5, 6, 6, 0, 0, 0, 16, 4, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.089623}
{'[0, 1, 5, 6, 6, 0, 0, 0, 16, 4, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.089937}
{'[0, 1, 5, 6, 6, 0, 0, 0, 16, 4, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.089437}
{'[0, 1, 5, 6, 6, 0, 0, 0, 16, 4, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.089401}
{'[0, 1, 5, 6, 6, 0, 0, 0, 16, 4, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.0894661}
{'[0, 1, 5, 6, 6, 0, 0, 0, 16, 4, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.0894859}
{'[0, 1, 5, 6, 6, 0, 0, 0, 16, 4, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.092783}
{'[0, 1, 5, 6, 6, 0, 0, 0, 16, 4, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.092041}
{'[0, 1, 5, 6, 6, 0, 0, 0, 16, 4, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.0920942}
{'[0, 1, 5, 6, 6, 0, 0, 0, 16, 4, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.0919631}

out:
 ["{'[0, 1, 5, 6, 6, 0, 0, 0, 16, 4, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.103899}", "{'[0, 1, 5, 6, 6, 0, 0, 0, 16, 4, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.103736}", "{'[0, 1, 5, 6, 6, 0, 0, 0, 16, 4, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.103694}", "{'[0, 1, 5, 6, 6, 0, 0, 0, 16, 4, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.103767}", "{'[0, 1, 5, 6, 6, 0, 0, 0, 16, 4, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.103718}", "{'[0, 1, 5, 6, 6, 0, 0, 0, 16, 4, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.101119}", "{'[0, 1, 5, 6, 6, 0, 0, 0, 16, 4, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.089983}", "{'[0, 1, 5, 6, 6, 0, 0, 0, 16, 4, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.089659}", "{'[0, 1, 5, 6, 6, 0, 0, 0, 16, 4, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.089582}", "{'[0, 1, 5, 6, 6, 0, 0, 0, 16, 4, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.0894148}", "{'[0, 1, 5, 6, 6, 0, 0, 0, 16, 4, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.0896461}", "{'[0, 1, 5, 6, 6, 0, 0, 0, 16, 4, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.089498}", "{'[0, 1, 5, 6, 6, 0, 0, 0, 16, 4, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.089452}", "{'[0, 1, 5, 6, 6, 0, 0, 0, 16, 4, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.089386}", "{'[0, 1, 5, 6, 6, 0, 0, 0, 16, 4, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.089483}", "{'[0, 1, 5, 6, 6, 0, 0, 0, 16, 4, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.089349}", "{'[0, 1, 5, 6, 6, 0, 0, 0, 16, 4, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.089498}", "{'[0, 1, 5, 6, 6, 0, 0, 0, 16, 4, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.0895}", "{'[0, 1, 5, 6, 6, 0, 0, 0, 16, 4, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.0893991}", "{'[0, 1, 5, 6, 6, 0, 0, 0, 16, 4, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.0896289}", "{'[0, 1, 5, 6, 6, 0, 0, 0, 16, 4, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.089623}", "{'[0, 1, 5, 6, 6, 0, 0, 0, 16, 4, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.089937}", "{'[0, 1, 5, 6, 6, 0, 0, 0, 16, 4, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.089437}", "{'[0, 1, 5, 6, 6, 0, 0, 0, 16, 4, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.089401}", "{'[0, 1, 5, 6, 6, 0, 0, 0, 16, 4, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.0894661}", "{'[0, 1, 5, 6, 6, 0, 0, 0, 16, 4, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.0894859}", "{'[0, 1, 5, 6, 6, 0, 0, 0, 16, 4, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.092783}", "{'[0, 1, 5, 6, 6, 0, 0, 0, 16, 4, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.092041}", "{'[0, 1, 5, 6, 6, 0, 0, 0, 16, 4, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.0920942}", "{'[0, 1, 5, 6, 6, 0, 0, 0, 16, 4, 0, 0, 0, 1, 1, 1, 1, 0]' : 0.0919631}"]
returning from 'run': {'[0, 1, 5, 6, 6, 0, 0, 0, 16, 4, 0, 0, 0, 1, 1, 1, 1, 0]': ([0.103899, 0.103736, 0.103694, 0.103767, 0.103718, 0.101119, 0.089983, 0.089659, 0.089582, 0.0894148, 0.0896461, 0.089498, 0.089452, 0.089386, 0.089483, 0.089349, 0.089498, 0.0895, 0.0893991, 0.0896289, 0.089623, 0.089937, 0.089437, 0.089401, 0.0894661, 0.0894859, 0.092783, 0.092041, 0.0920942, 0.0919631], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 1, 5, 6, 6, 0, 0, 0, 16, 4, 0, 0, 0, 1, 1, 1, 1, 0]': ([0.103899, 0.103736, 0.103694, 0.103767, 0.103718, 0.101119, 0.089983, 0.089659, 0.089582, 0.0894148, 0.0896461, 0.089498, 0.089452, 0.089386, 0.089483, 0.089349, 0.089498, 0.0895, 0.0893991, 0.0896289, 0.089623, 0.089937, 0.089437, 0.089401, 0.0894661, 0.0894859, 0.092783, 0.092041, 0.0920942, 0.0919631], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	26
        Max loop nest depth: 	5
        Additions: 		2008
        Multiplications: 	768
        Divisions: 		0
        Logical: 		0
        Reads: 			4436
        Writes: 		957
        Comparisons:		26
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest49.exe __orio_perftest49.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest49.exe  
Program Test Output: 
{'[0, 0, 5, 5, 6, 4, 0, 0, 0, 4, 0, 29, 0, 0, 2, 1, 1, 0]' : 0.116187}
{'[0, 0, 5, 5, 6, 4, 0, 0, 0, 4, 0, 29, 0, 0, 2, 1, 1, 0]' : 0.115959}
{'[0, 0, 5, 5, 6, 4, 0, 0, 0, 4, 0, 29, 0, 0, 2, 1, 1, 0]' : 0.115993}
{'[0, 0, 5, 5, 6, 4, 0, 0, 0, 4, 0, 29, 0, 0, 2, 1, 1, 0]' : 0.115786}
{'[0, 0, 5, 5, 6, 4, 0, 0, 0, 4, 0, 29, 0, 0, 2, 1, 1, 0]' : 0.115907}
{'[0, 0, 5, 5, 6, 4, 0, 0, 0, 4, 0, 29, 0, 0, 2, 1, 1, 0]' : 0.115008}
{'[0, 0, 5, 5, 6, 4, 0, 0, 0, 4, 0, 29, 0, 0, 2, 1, 1, 0]' : 0.113506}
{'[0, 0, 5, 5, 6, 4, 0, 0, 0, 4, 0, 29, 0, 0, 2, 1, 1, 0]' : 0.112949}
{'[0, 0, 5, 5, 6, 4, 0, 0, 0, 4, 0, 29, 0, 0, 2, 1, 1, 0]' : 0.112819}
{'[0, 0, 5, 5, 6, 4, 0, 0, 0, 4, 0, 29, 0, 0, 2, 1, 1, 0]' : 0.112898}
{'[0, 0, 5, 5, 6, 4, 0, 0, 0, 4, 0, 29, 0, 0, 2, 1, 1, 0]' : 0.112877}
{'[0, 0, 5, 5, 6, 4, 0, 0, 0, 4, 0, 29, 0, 0, 2, 1, 1, 0]' : 0.113408}
{'[0, 0, 5, 5, 6, 4, 0, 0, 0, 4, 0, 29, 0, 0, 2, 1, 1, 0]' : 0.112846}
{'[0, 0, 5, 5, 6, 4, 0, 0, 0, 4, 0, 29, 0, 0, 2, 1, 1, 0]' : 0.112937}
{'[0, 0, 5, 5, 6, 4, 0, 0, 0, 4, 0, 29, 0, 0, 2, 1, 1, 0]' : 0.112962}
{'[0, 0, 5, 5, 6, 4, 0, 0, 0, 4, 0, 29, 0, 0, 2, 1, 1, 0]' : 0.113116}
{'[0, 0, 5, 5, 6, 4, 0, 0, 0, 4, 0, 29, 0, 0, 2, 1, 1, 0]' : 0.113143}
{'[0, 0, 5, 5, 6, 4, 0, 0, 0, 4, 0, 29, 0, 0, 2, 1, 1, 0]' : 0.11285}
{'[0, 0, 5, 5, 6, 4, 0, 0, 0, 4, 0, 29, 0, 0, 2, 1, 1, 0]' : 0.112877}
{'[0, 0, 5, 5, 6, 4, 0, 0, 0, 4, 0, 29, 0, 0, 2, 1, 1, 0]' : 0.113014}
{'[0, 0, 5, 5, 6, 4, 0, 0, 0, 4, 0, 29, 0, 0, 2, 1, 1, 0]' : 0.113139}
{'[0, 0, 5, 5, 6, 4, 0, 0, 0, 4, 0, 29, 0, 0, 2, 1, 1, 0]' : 0.112826}
{'[0, 0, 5, 5, 6, 4, 0, 0, 0, 4, 0, 29, 0, 0, 2, 1, 1, 0]' : 0.113068}
{'[0, 0, 5, 5, 6, 4, 0, 0, 0, 4, 0, 29, 0, 0, 2, 1, 1, 0]' : 0.112851}
{'[0, 0, 5, 5, 6, 4, 0, 0, 0, 4, 0, 29, 0, 0, 2, 1, 1, 0]' : 0.112985}
{'[0, 0, 5, 5, 6, 4, 0, 0, 0, 4, 0, 29, 0, 0, 2, 1, 1, 0]' : 0.112977}
{'[0, 0, 5, 5, 6, 4, 0, 0, 0, 4, 0, 29, 0, 0, 2, 1, 1, 0]' : 0.113167}
{'[0, 0, 5, 5, 6, 4, 0, 0, 0, 4, 0, 29, 0, 0, 2, 1, 1, 0]' : 0.113008}
{'[0, 0, 5, 5, 6, 4, 0, 0, 0, 4, 0, 29, 0, 0, 2, 1, 1, 0]' : 0.112802}
{'[0, 0, 5, 5, 6, 4, 0, 0, 0, 4, 0, 29, 0, 0, 2, 1, 1, 0]' : 0.113263}

out:
 ["{'[0, 0, 5, 5, 6, 4, 0, 0, 0, 4, 0, 29, 0, 0, 2, 1, 1, 0]' : 0.116187}", "{'[0, 0, 5, 5, 6, 4, 0, 0, 0, 4, 0, 29, 0, 0, 2, 1, 1, 0]' : 0.115959}", "{'[0, 0, 5, 5, 6, 4, 0, 0, 0, 4, 0, 29, 0, 0, 2, 1, 1, 0]' : 0.115993}", "{'[0, 0, 5, 5, 6, 4, 0, 0, 0, 4, 0, 29, 0, 0, 2, 1, 1, 0]' : 0.115786}", "{'[0, 0, 5, 5, 6, 4, 0, 0, 0, 4, 0, 29, 0, 0, 2, 1, 1, 0]' : 0.115907}", "{'[0, 0, 5, 5, 6, 4, 0, 0, 0, 4, 0, 29, 0, 0, 2, 1, 1, 0]' : 0.115008}", "{'[0, 0, 5, 5, 6, 4, 0, 0, 0, 4, 0, 29, 0, 0, 2, 1, 1, 0]' : 0.113506}", "{'[0, 0, 5, 5, 6, 4, 0, 0, 0, 4, 0, 29, 0, 0, 2, 1, 1, 0]' : 0.112949}", "{'[0, 0, 5, 5, 6, 4, 0, 0, 0, 4, 0, 29, 0, 0, 2, 1, 1, 0]' : 0.112819}", "{'[0, 0, 5, 5, 6, 4, 0, 0, 0, 4, 0, 29, 0, 0, 2, 1, 1, 0]' : 0.112898}", "{'[0, 0, 5, 5, 6, 4, 0, 0, 0, 4, 0, 29, 0, 0, 2, 1, 1, 0]' : 0.112877}", "{'[0, 0, 5, 5, 6, 4, 0, 0, 0, 4, 0, 29, 0, 0, 2, 1, 1, 0]' : 0.113408}", "{'[0, 0, 5, 5, 6, 4, 0, 0, 0, 4, 0, 29, 0, 0, 2, 1, 1, 0]' : 0.112846}", "{'[0, 0, 5, 5, 6, 4, 0, 0, 0, 4, 0, 29, 0, 0, 2, 1, 1, 0]' : 0.112937}", "{'[0, 0, 5, 5, 6, 4, 0, 0, 0, 4, 0, 29, 0, 0, 2, 1, 1, 0]' : 0.112962}", "{'[0, 0, 5, 5, 6, 4, 0, 0, 0, 4, 0, 29, 0, 0, 2, 1, 1, 0]' : 0.113116}", "{'[0, 0, 5, 5, 6, 4, 0, 0, 0, 4, 0, 29, 0, 0, 2, 1, 1, 0]' : 0.113143}", "{'[0, 0, 5, 5, 6, 4, 0, 0, 0, 4, 0, 29, 0, 0, 2, 1, 1, 0]' : 0.11285}", "{'[0, 0, 5, 5, 6, 4, 0, 0, 0, 4, 0, 29, 0, 0, 2, 1, 1, 0]' : 0.112877}", "{'[0, 0, 5, 5, 6, 4, 0, 0, 0, 4, 0, 29, 0, 0, 2, 1, 1, 0]' : 0.113014}", "{'[0, 0, 5, 5, 6, 4, 0, 0, 0, 4, 0, 29, 0, 0, 2, 1, 1, 0]' : 0.113139}", "{'[0, 0, 5, 5, 6, 4, 0, 0, 0, 4, 0, 29, 0, 0, 2, 1, 1, 0]' : 0.112826}", "{'[0, 0, 5, 5, 6, 4, 0, 0, 0, 4, 0, 29, 0, 0, 2, 1, 1, 0]' : 0.113068}", "{'[0, 0, 5, 5, 6, 4, 0, 0, 0, 4, 0, 29, 0, 0, 2, 1, 1, 0]' : 0.112851}", "{'[0, 0, 5, 5, 6, 4, 0, 0, 0, 4, 0, 29, 0, 0, 2, 1, 1, 0]' : 0.112985}", "{'[0, 0, 5, 5, 6, 4, 0, 0, 0, 4, 0, 29, 0, 0, 2, 1, 1, 0]' : 0.112977}", "{'[0, 0, 5, 5, 6, 4, 0, 0, 0, 4, 0, 29, 0, 0, 2, 1, 1, 0]' : 0.113167}", "{'[0, 0, 5, 5, 6, 4, 0, 0, 0, 4, 0, 29, 0, 0, 2, 1, 1, 0]' : 0.113008}", "{'[0, 0, 5, 5, 6, 4, 0, 0, 0, 4, 0, 29, 0, 0, 2, 1, 1, 0]' : 0.112802}", "{'[0, 0, 5, 5, 6, 4, 0, 0, 0, 4, 0, 29, 0, 0, 2, 1, 1, 0]' : 0.113263}"]
returning from 'run': {'[0, 0, 5, 5, 6, 4, 0, 0, 0, 4, 0, 29, 0, 0, 2, 1, 1, 0]': ([0.116187, 0.115959, 0.115993, 0.115786, 0.115907, 0.115008, 0.113506, 0.112949, 0.112819, 0.112898, 0.112877, 0.113408, 0.112846, 0.112937, 0.112962, 0.113116, 0.113143, 0.11285, 0.112877, 0.113014, 0.113139, 0.112826, 0.113068, 0.112851, 0.112985, 0.112977, 0.113167, 0.113008, 0.112802, 0.113263], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 5, 5, 6, 4, 0, 0, 0, 4, 0, 29, 0, 0, 2, 1, 1, 0]': ([0.116187, 0.115959, 0.115993, 0.115786, 0.115907, 0.115008, 0.113506, 0.112949, 0.112819, 0.112898, 0.112877, 0.113408, 0.112846, 0.112937, 0.112962, 0.113116, 0.113143, 0.11285, 0.112877, 0.113014, 0.113139, 0.112826, 0.113068, 0.112851, 0.112985, 0.112977, 0.113167, 0.113008, 0.112802, 0.113263], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = jjj
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = kkk
Code stats:
        Number of loops: 	30
        Max loop nest depth: 	3
        Additions: 		1590
        Multiplications: 	468
        Divisions: 		0
        Logical: 		0
        Reads: 			2684
        Writes: 		343
        Comparisons:		30
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest50.exe __orio_perftest50.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest50.exe  
Program Test Output: 
{'[0, 4, 5, 0, 2, 3, 1, 0, 10, 4, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.147822}
{'[0, 4, 5, 0, 2, 3, 1, 0, 10, 4, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.148014}
{'[0, 4, 5, 0, 2, 3, 1, 0, 10, 4, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.147865}
{'[0, 4, 5, 0, 2, 3, 1, 0, 10, 4, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.14527}
{'[0, 4, 5, 0, 2, 3, 1, 0, 10, 4, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.125739}
{'[0, 4, 5, 0, 2, 3, 1, 0, 10, 4, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.125287}
{'[0, 4, 5, 0, 2, 3, 1, 0, 10, 4, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.12543}
{'[0, 4, 5, 0, 2, 3, 1, 0, 10, 4, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.125277}
{'[0, 4, 5, 0, 2, 3, 1, 0, 10, 4, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.125106}
{'[0, 4, 5, 0, 2, 3, 1, 0, 10, 4, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.125282}
{'[0, 4, 5, 0, 2, 3, 1, 0, 10, 4, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.125798}
{'[0, 4, 5, 0, 2, 3, 1, 0, 10, 4, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.125104}
{'[0, 4, 5, 0, 2, 3, 1, 0, 10, 4, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.125175}
{'[0, 4, 5, 0, 2, 3, 1, 0, 10, 4, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.125107}
{'[0, 4, 5, 0, 2, 3, 1, 0, 10, 4, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.125111}
{'[0, 4, 5, 0, 2, 3, 1, 0, 10, 4, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.12515}
{'[0, 4, 5, 0, 2, 3, 1, 0, 10, 4, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.125075}
{'[0, 4, 5, 0, 2, 3, 1, 0, 10, 4, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.125236}
{'[0, 4, 5, 0, 2, 3, 1, 0, 10, 4, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.125481}
{'[0, 4, 5, 0, 2, 3, 1, 0, 10, 4, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.125403}
{'[0, 4, 5, 0, 2, 3, 1, 0, 10, 4, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.125466}
{'[0, 4, 5, 0, 2, 3, 1, 0, 10, 4, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.125371}
{'[0, 4, 5, 0, 2, 3, 1, 0, 10, 4, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.125123}
{'[0, 4, 5, 0, 2, 3, 1, 0, 10, 4, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.12521}
{'[0, 4, 5, 0, 2, 3, 1, 0, 10, 4, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.125094}
{'[0, 4, 5, 0, 2, 3, 1, 0, 10, 4, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.125255}
{'[0, 4, 5, 0, 2, 3, 1, 0, 10, 4, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.125247}
{'[0, 4, 5, 0, 2, 3, 1, 0, 10, 4, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.125491}
{'[0, 4, 5, 0, 2, 3, 1, 0, 10, 4, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.125389}
{'[0, 4, 5, 0, 2, 3, 1, 0, 10, 4, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.125214}

out:
 ["{'[0, 4, 5, 0, 2, 3, 1, 0, 10, 4, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.147822}", "{'[0, 4, 5, 0, 2, 3, 1, 0, 10, 4, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.148014}", "{'[0, 4, 5, 0, 2, 3, 1, 0, 10, 4, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.147865}", "{'[0, 4, 5, 0, 2, 3, 1, 0, 10, 4, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.14527}", "{'[0, 4, 5, 0, 2, 3, 1, 0, 10, 4, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.125739}", "{'[0, 4, 5, 0, 2, 3, 1, 0, 10, 4, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.125287}", "{'[0, 4, 5, 0, 2, 3, 1, 0, 10, 4, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.12543}", "{'[0, 4, 5, 0, 2, 3, 1, 0, 10, 4, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.125277}", "{'[0, 4, 5, 0, 2, 3, 1, 0, 10, 4, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.125106}", "{'[0, 4, 5, 0, 2, 3, 1, 0, 10, 4, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.125282}", "{'[0, 4, 5, 0, 2, 3, 1, 0, 10, 4, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.125798}", "{'[0, 4, 5, 0, 2, 3, 1, 0, 10, 4, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.125104}", "{'[0, 4, 5, 0, 2, 3, 1, 0, 10, 4, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.125175}", "{'[0, 4, 5, 0, 2, 3, 1, 0, 10, 4, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.125107}", "{'[0, 4, 5, 0, 2, 3, 1, 0, 10, 4, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.125111}", "{'[0, 4, 5, 0, 2, 3, 1, 0, 10, 4, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.12515}", "{'[0, 4, 5, 0, 2, 3, 1, 0, 10, 4, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.125075}", "{'[0, 4, 5, 0, 2, 3, 1, 0, 10, 4, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.125236}", "{'[0, 4, 5, 0, 2, 3, 1, 0, 10, 4, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.125481}", "{'[0, 4, 5, 0, 2, 3, 1, 0, 10, 4, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.125403}", "{'[0, 4, 5, 0, 2, 3, 1, 0, 10, 4, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.125466}", "{'[0, 4, 5, 0, 2, 3, 1, 0, 10, 4, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.125371}", "{'[0, 4, 5, 0, 2, 3, 1, 0, 10, 4, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.125123}", "{'[0, 4, 5, 0, 2, 3, 1, 0, 10, 4, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.12521}", "{'[0, 4, 5, 0, 2, 3, 1, 0, 10, 4, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.125094}", "{'[0, 4, 5, 0, 2, 3, 1, 0, 10, 4, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.125255}", "{'[0, 4, 5, 0, 2, 3, 1, 0, 10, 4, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.125247}", "{'[0, 4, 5, 0, 2, 3, 1, 0, 10, 4, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.125491}", "{'[0, 4, 5, 0, 2, 3, 1, 0, 10, 4, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.125389}", "{'[0, 4, 5, 0, 2, 3, 1, 0, 10, 4, 0, 28, 0, 0, 1, 0, 1, 1]' : 0.125214}"]
returning from 'run': {'[0, 4, 5, 0, 2, 3, 1, 0, 10, 4, 0, 28, 0, 0, 1, 0, 1, 1]': ([0.147822, 0.148014, 0.147865, 0.14527, 0.125739, 0.125287, 0.12543, 0.125277, 0.125106, 0.125282, 0.125798, 0.125104, 0.125175, 0.125107, 0.125111, 0.12515, 0.125075, 0.125236, 0.125481, 0.125403, 0.125466, 0.125371, 0.125123, 0.12521, 0.125094, 0.125255, 0.125247, 0.125491, 0.125389, 0.125214], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 4, 5, 0, 2, 3, 1, 0, 10, 4, 0, 28, 0, 0, 1, 0, 1, 1]': ([0.147822, 0.148014, 0.147865, 0.14527, 0.125739, 0.125287, 0.12543, 0.125277, 0.125106, 0.125282, 0.125798, 0.125104, 0.125175, 0.125107, 0.125111, 0.12515, 0.125075, 0.125236, 0.125481, 0.125403, 0.125466, 0.125371, 0.125123, 0.12521, 0.125094, 0.125255, 0.125247, 0.125491, 0.125389, 0.125214], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = kkk
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	5
        Additions: 		1779
        Multiplications: 	836
        Divisions: 		0
        Logical: 		0
        Reads: 			3578
        Writes: 		642
        Comparisons:		24
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest51.exe __orio_perftest51.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest51.exe  
Program Test Output: 
{'[0, 2, 5, 2, 6, 3, 0, 0, 29, 4, 0, 8, 2, 0, 0, 1, 0, 0]' : 0.196684}
{'[0, 2, 5, 2, 6, 3, 0, 0, 29, 4, 0, 8, 2, 0, 0, 1, 0, 0]' : 0.196397}
{'[0, 2, 5, 2, 6, 3, 0, 0, 29, 4, 0, 8, 2, 0, 0, 1, 0, 0]' : 0.19466}
{'[0, 2, 5, 2, 6, 3, 0, 0, 29, 4, 0, 8, 2, 0, 0, 1, 0, 0]' : 0.1735}
{'[0, 2, 5, 2, 6, 3, 0, 0, 29, 4, 0, 8, 2, 0, 0, 1, 0, 0]' : 0.173063}
{'[0, 2, 5, 2, 6, 3, 0, 0, 29, 4, 0, 8, 2, 0, 0, 1, 0, 0]' : 0.173428}
{'[0, 2, 5, 2, 6, 3, 0, 0, 29, 4, 0, 8, 2, 0, 0, 1, 0, 0]' : 0.173546}
{'[0, 2, 5, 2, 6, 3, 0, 0, 29, 4, 0, 8, 2, 0, 0, 1, 0, 0]' : 0.173604}
{'[0, 2, 5, 2, 6, 3, 0, 0, 29, 4, 0, 8, 2, 0, 0, 1, 0, 0]' : 0.173534}
{'[0, 2, 5, 2, 6, 3, 0, 0, 29, 4, 0, 8, 2, 0, 0, 1, 0, 0]' : 0.173253}
{'[0, 2, 5, 2, 6, 3, 0, 0, 29, 4, 0, 8, 2, 0, 0, 1, 0, 0]' : 0.173565}
{'[0, 2, 5, 2, 6, 3, 0, 0, 29, 4, 0, 8, 2, 0, 0, 1, 0, 0]' : 0.173208}
{'[0, 2, 5, 2, 6, 3, 0, 0, 29, 4, 0, 8, 2, 0, 0, 1, 0, 0]' : 0.173914}
{'[0, 2, 5, 2, 6, 3, 0, 0, 29, 4, 0, 8, 2, 0, 0, 1, 0, 0]' : 0.173038}
{'[0, 2, 5, 2, 6, 3, 0, 0, 29, 4, 0, 8, 2, 0, 0, 1, 0, 0]' : 0.173189}
{'[0, 2, 5, 2, 6, 3, 0, 0, 29, 4, 0, 8, 2, 0, 0, 1, 0, 0]' : 0.173523}
{'[0, 2, 5, 2, 6, 3, 0, 0, 29, 4, 0, 8, 2, 0, 0, 1, 0, 0]' : 0.17283}
{'[0, 2, 5, 2, 6, 3, 0, 0, 29, 4, 0, 8, 2, 0, 0, 1, 0, 0]' : 0.173043}
{'[0, 2, 5, 2, 6, 3, 0, 0, 29, 4, 0, 8, 2, 0, 0, 1, 0, 0]' : 0.173692}
{'[0, 2, 5, 2, 6, 3, 0, 0, 29, 4, 0, 8, 2, 0, 0, 1, 0, 0]' : 0.172661}
{'[0, 2, 5, 2, 6, 3, 0, 0, 29, 4, 0, 8, 2, 0, 0, 1, 0, 0]' : 0.173085}
{'[0, 2, 5, 2, 6, 3, 0, 0, 29, 4, 0, 8, 2, 0, 0, 1, 0, 0]' : 0.174028}
{'[0, 2, 5, 2, 6, 3, 0, 0, 29, 4, 0, 8, 2, 0, 0, 1, 0, 0]' : 0.173049}
{'[0, 2, 5, 2, 6, 3, 0, 0, 29, 4, 0, 8, 2, 0, 0, 1, 0, 0]' : 0.173442}
{'[0, 2, 5, 2, 6, 3, 0, 0, 29, 4, 0, 8, 2, 0, 0, 1, 0, 0]' : 0.172895}
{'[0, 2, 5, 2, 6, 3, 0, 0, 29, 4, 0, 8, 2, 0, 0, 1, 0, 0]' : 0.173029}
{'[0, 2, 5, 2, 6, 3, 0, 0, 29, 4, 0, 8, 2, 0, 0, 1, 0, 0]' : 0.173562}
{'[0, 2, 5, 2, 6, 3, 0, 0, 29, 4, 0, 8, 2, 0, 0, 1, 0, 0]' : 0.173625}
{'[0, 2, 5, 2, 6, 3, 0, 0, 29, 4, 0, 8, 2, 0, 0, 1, 0, 0]' : 0.173593}
{'[0, 2, 5, 2, 6, 3, 0, 0, 29, 4, 0, 8, 2, 0, 0, 1, 0, 0]' : 0.173179}

out:
 ["{'[0, 2, 5, 2, 6, 3, 0, 0, 29, 4, 0, 8, 2, 0, 0, 1, 0, 0]' : 0.196684}", "{'[0, 2, 5, 2, 6, 3, 0, 0, 29, 4, 0, 8, 2, 0, 0, 1, 0, 0]' : 0.196397}", "{'[0, 2, 5, 2, 6, 3, 0, 0, 29, 4, 0, 8, 2, 0, 0, 1, 0, 0]' : 0.19466}", "{'[0, 2, 5, 2, 6, 3, 0, 0, 29, 4, 0, 8, 2, 0, 0, 1, 0, 0]' : 0.1735}", "{'[0, 2, 5, 2, 6, 3, 0, 0, 29, 4, 0, 8, 2, 0, 0, 1, 0, 0]' : 0.173063}", "{'[0, 2, 5, 2, 6, 3, 0, 0, 29, 4, 0, 8, 2, 0, 0, 1, 0, 0]' : 0.173428}", "{'[0, 2, 5, 2, 6, 3, 0, 0, 29, 4, 0, 8, 2, 0, 0, 1, 0, 0]' : 0.173546}", "{'[0, 2, 5, 2, 6, 3, 0, 0, 29, 4, 0, 8, 2, 0, 0, 1, 0, 0]' : 0.173604}", "{'[0, 2, 5, 2, 6, 3, 0, 0, 29, 4, 0, 8, 2, 0, 0, 1, 0, 0]' : 0.173534}", "{'[0, 2, 5, 2, 6, 3, 0, 0, 29, 4, 0, 8, 2, 0, 0, 1, 0, 0]' : 0.173253}", "{'[0, 2, 5, 2, 6, 3, 0, 0, 29, 4, 0, 8, 2, 0, 0, 1, 0, 0]' : 0.173565}", "{'[0, 2, 5, 2, 6, 3, 0, 0, 29, 4, 0, 8, 2, 0, 0, 1, 0, 0]' : 0.173208}", "{'[0, 2, 5, 2, 6, 3, 0, 0, 29, 4, 0, 8, 2, 0, 0, 1, 0, 0]' : 0.173914}", "{'[0, 2, 5, 2, 6, 3, 0, 0, 29, 4, 0, 8, 2, 0, 0, 1, 0, 0]' : 0.173038}", "{'[0, 2, 5, 2, 6, 3, 0, 0, 29, 4, 0, 8, 2, 0, 0, 1, 0, 0]' : 0.173189}", "{'[0, 2, 5, 2, 6, 3, 0, 0, 29, 4, 0, 8, 2, 0, 0, 1, 0, 0]' : 0.173523}", "{'[0, 2, 5, 2, 6, 3, 0, 0, 29, 4, 0, 8, 2, 0, 0, 1, 0, 0]' : 0.17283}", "{'[0, 2, 5, 2, 6, 3, 0, 0, 29, 4, 0, 8, 2, 0, 0, 1, 0, 0]' : 0.173043}", "{'[0, 2, 5, 2, 6, 3, 0, 0, 29, 4, 0, 8, 2, 0, 0, 1, 0, 0]' : 0.173692}", "{'[0, 2, 5, 2, 6, 3, 0, 0, 29, 4, 0, 8, 2, 0, 0, 1, 0, 0]' : 0.172661}", "{'[0, 2, 5, 2, 6, 3, 0, 0, 29, 4, 0, 8, 2, 0, 0, 1, 0, 0]' : 0.173085}", "{'[0, 2, 5, 2, 6, 3, 0, 0, 29, 4, 0, 8, 2, 0, 0, 1, 0, 0]' : 0.174028}", "{'[0, 2, 5, 2, 6, 3, 0, 0, 29, 4, 0, 8, 2, 0, 0, 1, 0, 0]' : 0.173049}", "{'[0, 2, 5, 2, 6, 3, 0, 0, 29, 4, 0, 8, 2, 0, 0, 1, 0, 0]' : 0.173442}", "{'[0, 2, 5, 2, 6, 3, 0, 0, 29, 4, 0, 8, 2, 0, 0, 1, 0, 0]' : 0.172895}", "{'[0, 2, 5, 2, 6, 3, 0, 0, 29, 4, 0, 8, 2, 0, 0, 1, 0, 0]' : 0.173029}", "{'[0, 2, 5, 2, 6, 3, 0, 0, 29, 4, 0, 8, 2, 0, 0, 1, 0, 0]' : 0.173562}", "{'[0, 2, 5, 2, 6, 3, 0, 0, 29, 4, 0, 8, 2, 0, 0, 1, 0, 0]' : 0.173625}", "{'[0, 2, 5, 2, 6, 3, 0, 0, 29, 4, 0, 8, 2, 0, 0, 1, 0, 0]' : 0.173593}", "{'[0, 2, 5, 2, 6, 3, 0, 0, 29, 4, 0, 8, 2, 0, 0, 1, 0, 0]' : 0.173179}"]
returning from 'run': {'[0, 2, 5, 2, 6, 3, 0, 0, 29, 4, 0, 8, 2, 0, 0, 1, 0, 0]': ([0.196684, 0.196397, 0.19466, 0.1735, 0.173063, 0.173428, 0.173546, 0.173604, 0.173534, 0.173253, 0.173565, 0.173208, 0.173914, 0.173038, 0.173189, 0.173523, 0.17283, 0.173043, 0.173692, 0.172661, 0.173085, 0.174028, 0.173049, 0.173442, 0.172895, 0.173029, 0.173562, 0.173625, 0.173593, 0.173179], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 5, 2, 6, 3, 0, 0, 29, 4, 0, 8, 2, 0, 0, 1, 0, 0]': ([0.196684, 0.196397, 0.19466, 0.1735, 0.173063, 0.173428, 0.173546, 0.173604, 0.173534, 0.173253, 0.173565, 0.173208, 0.173914, 0.173038, 0.173189, 0.173523, 0.17283, 0.173043, 0.173692, 0.172661, 0.173085, 0.174028, 0.173049, 0.173442, 0.172895, 0.173029, 0.173562, 0.173625, 0.173593, 0.173179], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = kkk
Code stats:
        Number of loops: 	6
        Max loop nest depth: 	3
        Additions: 		99
        Multiplications: 	32
        Divisions: 		0
        Logical: 		0
        Reads: 			260
        Writes: 		76
        Comparisons:		6
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest52.exe __orio_perftest52.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest52.exe  
Program Test Output: 
{'[0, 0, 5, 0, 0, 3, 0, 0, 23, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.124552}
{'[0, 0, 5, 0, 0, 3, 0, 0, 23, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.124432}
{'[0, 0, 5, 0, 0, 3, 0, 0, 23, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.124268}
{'[0, 0, 5, 0, 0, 3, 0, 0, 23, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.124224}
{'[0, 0, 5, 0, 0, 3, 0, 0, 23, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.122823}
{'[0, 0, 5, 0, 0, 3, 0, 0, 23, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.108924}
{'[0, 0, 5, 0, 0, 3, 0, 0, 23, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.108436}
{'[0, 0, 5, 0, 0, 3, 0, 0, 23, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.107971}
{'[0, 0, 5, 0, 0, 3, 0, 0, 23, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.107768}
{'[0, 0, 5, 0, 0, 3, 0, 0, 23, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.107882}
{'[0, 0, 5, 0, 0, 3, 0, 0, 23, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.107977}
{'[0, 0, 5, 0, 0, 3, 0, 0, 23, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.107849}
{'[0, 0, 5, 0, 0, 3, 0, 0, 23, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.108026}
{'[0, 0, 5, 0, 0, 3, 0, 0, 23, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.107904}
{'[0, 0, 5, 0, 0, 3, 0, 0, 23, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.107916}
{'[0, 0, 5, 0, 0, 3, 0, 0, 23, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.108213}
{'[0, 0, 5, 0, 0, 3, 0, 0, 23, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.107889}
{'[0, 0, 5, 0, 0, 3, 0, 0, 23, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.107854}
{'[0, 0, 5, 0, 0, 3, 0, 0, 23, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.108012}
{'[0, 0, 5, 0, 0, 3, 0, 0, 23, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.107919}
{'[0, 0, 5, 0, 0, 3, 0, 0, 23, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.108062}
{'[0, 0, 5, 0, 0, 3, 0, 0, 23, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.107695}
{'[0, 0, 5, 0, 0, 3, 0, 0, 23, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.107803}
{'[0, 0, 5, 0, 0, 3, 0, 0, 23, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.107762}
{'[0, 0, 5, 0, 0, 3, 0, 0, 23, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.107819}
{'[0, 0, 5, 0, 0, 3, 0, 0, 23, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.108325}
{'[0, 0, 5, 0, 0, 3, 0, 0, 23, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.108113}
{'[0, 0, 5, 0, 0, 3, 0, 0, 23, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.107833}
{'[0, 0, 5, 0, 0, 3, 0, 0, 23, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.107882}
{'[0, 0, 5, 0, 0, 3, 0, 0, 23, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.10808}

out:
 ["{'[0, 0, 5, 0, 0, 3, 0, 0, 23, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.124552}", "{'[0, 0, 5, 0, 0, 3, 0, 0, 23, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.124432}", "{'[0, 0, 5, 0, 0, 3, 0, 0, 23, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.124268}", "{'[0, 0, 5, 0, 0, 3, 0, 0, 23, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.124224}", "{'[0, 0, 5, 0, 0, 3, 0, 0, 23, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.122823}", "{'[0, 0, 5, 0, 0, 3, 0, 0, 23, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.108924}", "{'[0, 0, 5, 0, 0, 3, 0, 0, 23, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.108436}", "{'[0, 0, 5, 0, 0, 3, 0, 0, 23, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.107971}", "{'[0, 0, 5, 0, 0, 3, 0, 0, 23, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.107768}", "{'[0, 0, 5, 0, 0, 3, 0, 0, 23, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.107882}", "{'[0, 0, 5, 0, 0, 3, 0, 0, 23, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.107977}", "{'[0, 0, 5, 0, 0, 3, 0, 0, 23, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.107849}", "{'[0, 0, 5, 0, 0, 3, 0, 0, 23, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.108026}", "{'[0, 0, 5, 0, 0, 3, 0, 0, 23, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.107904}", "{'[0, 0, 5, 0, 0, 3, 0, 0, 23, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.107916}", "{'[0, 0, 5, 0, 0, 3, 0, 0, 23, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.108213}", "{'[0, 0, 5, 0, 0, 3, 0, 0, 23, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.107889}", "{'[0, 0, 5, 0, 0, 3, 0, 0, 23, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.107854}", "{'[0, 0, 5, 0, 0, 3, 0, 0, 23, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.108012}", "{'[0, 0, 5, 0, 0, 3, 0, 0, 23, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.107919}", "{'[0, 0, 5, 0, 0, 3, 0, 0, 23, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.108062}", "{'[0, 0, 5, 0, 0, 3, 0, 0, 23, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.107695}", "{'[0, 0, 5, 0, 0, 3, 0, 0, 23, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.107803}", "{'[0, 0, 5, 0, 0, 3, 0, 0, 23, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.107762}", "{'[0, 0, 5, 0, 0, 3, 0, 0, 23, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.107819}", "{'[0, 0, 5, 0, 0, 3, 0, 0, 23, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.108325}", "{'[0, 0, 5, 0, 0, 3, 0, 0, 23, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.108113}", "{'[0, 0, 5, 0, 0, 3, 0, 0, 23, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.107833}", "{'[0, 0, 5, 0, 0, 3, 0, 0, 23, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.107882}", "{'[0, 0, 5, 0, 0, 3, 0, 0, 23, 4, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.10808}"]
returning from 'run': {'[0, 0, 5, 0, 0, 3, 0, 0, 23, 4, 0, 0, 1, 0, 0, 1, 1, 0]': ([0.124552, 0.124432, 0.124268, 0.124224, 0.122823, 0.108924, 0.108436, 0.107971, 0.107768, 0.107882, 0.107977, 0.107849, 0.108026, 0.107904, 0.107916, 0.108213, 0.107889, 0.107854, 0.108012, 0.107919, 0.108062, 0.107695, 0.107803, 0.107762, 0.107819, 0.108325, 0.108113, 0.107833, 0.107882, 0.10808], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 5, 0, 0, 3, 0, 0, 23, 4, 0, 0, 1, 0, 0, 1, 1, 0]': ([0.124552, 0.124432, 0.124268, 0.124224, 0.122823, 0.108924, 0.108436, 0.107971, 0.107768, 0.107882, 0.107977, 0.107849, 0.108026, 0.107904, 0.107916, 0.108213, 0.107889, 0.107854, 0.108012, 0.107919, 0.108062, 0.107695, 0.107803, 0.107762, 0.107819, 0.108325, 0.108113, 0.107833, 0.107882, 0.10808], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	5
        Additions: 		92
        Multiplications: 	24
        Divisions: 		0
        Logical: 		0
        Reads: 			256
        Writes: 		72
        Comparisons:		16
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest53.exe __orio_perftest53.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest53.exe  
Program Test Output: 
{'[0, 1, 5, 5, 4, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.10542}
{'[0, 1, 5, 5, 4, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.105232}
{'[0, 1, 5, 5, 4, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.105234}
{'[0, 1, 5, 5, 4, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.105222}
{'[0, 1, 5, 5, 4, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.105235}
{'[0, 1, 5, 5, 4, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.103611}
{'[0, 1, 5, 5, 4, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.0919471}
{'[0, 1, 5, 5, 4, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.0911829}
{'[0, 1, 5, 5, 4, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.091352}
{'[0, 1, 5, 5, 4, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.0913069}
{'[0, 1, 5, 5, 4, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.091239}
{'[0, 1, 5, 5, 4, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.0915999}
{'[0, 1, 5, 5, 4, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.0911601}
{'[0, 1, 5, 5, 4, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.091361}
{'[0, 1, 5, 5, 4, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.091373}
{'[0, 1, 5, 5, 4, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.091295}
{'[0, 1, 5, 5, 4, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.09113}
{'[0, 1, 5, 5, 4, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.0917852}
{'[0, 1, 5, 5, 4, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.091285}
{'[0, 1, 5, 5, 4, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.0913949}
{'[0, 1, 5, 5, 4, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.0913949}
{'[0, 1, 5, 5, 4, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.0916231}
{'[0, 1, 5, 5, 4, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.0914631}
{'[0, 1, 5, 5, 4, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.0911798}
{'[0, 1, 5, 5, 4, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.091157}
{'[0, 1, 5, 5, 4, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.0914161}
{'[0, 1, 5, 5, 4, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.091289}
{'[0, 1, 5, 5, 4, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.091408}
{'[0, 1, 5, 5, 4, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.0913842}
{'[0, 1, 5, 5, 4, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.0912359}

out:
 ["{'[0, 1, 5, 5, 4, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.10542}", "{'[0, 1, 5, 5, 4, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.105232}", "{'[0, 1, 5, 5, 4, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.105234}", "{'[0, 1, 5, 5, 4, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.105222}", "{'[0, 1, 5, 5, 4, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.105235}", "{'[0, 1, 5, 5, 4, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.103611}", "{'[0, 1, 5, 5, 4, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.0919471}", "{'[0, 1, 5, 5, 4, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.0911829}", "{'[0, 1, 5, 5, 4, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.091352}", "{'[0, 1, 5, 5, 4, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.0913069}", "{'[0, 1, 5, 5, 4, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.091239}", "{'[0, 1, 5, 5, 4, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.0915999}", "{'[0, 1, 5, 5, 4, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.0911601}", "{'[0, 1, 5, 5, 4, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.091361}", "{'[0, 1, 5, 5, 4, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.091373}", "{'[0, 1, 5, 5, 4, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.091295}", "{'[0, 1, 5, 5, 4, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.09113}", "{'[0, 1, 5, 5, 4, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.0917852}", "{'[0, 1, 5, 5, 4, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.091285}", "{'[0, 1, 5, 5, 4, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.0913949}", "{'[0, 1, 5, 5, 4, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.0913949}", "{'[0, 1, 5, 5, 4, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.0916231}", "{'[0, 1, 5, 5, 4, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.0914631}", "{'[0, 1, 5, 5, 4, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.0911798}", "{'[0, 1, 5, 5, 4, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.091157}", "{'[0, 1, 5, 5, 4, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.0914161}", "{'[0, 1, 5, 5, 4, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.091289}", "{'[0, 1, 5, 5, 4, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.091408}", "{'[0, 1, 5, 5, 4, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.0913842}", "{'[0, 1, 5, 5, 4, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 1, 0, 1]' : 0.0912359}"]
returning from 'run': {'[0, 1, 5, 5, 4, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 1, 0, 1]': ([0.10542, 0.105232, 0.105234, 0.105222, 0.105235, 0.103611, 0.0919471, 0.0911829, 0.091352, 0.0913069, 0.091239, 0.0915999, 0.0911601, 0.091361, 0.091373, 0.091295, 0.09113, 0.0917852, 0.091285, 0.0913949, 0.0913949, 0.0916231, 0.0914631, 0.0911798, 0.091157, 0.0914161, 0.091289, 0.091408, 0.0913842, 0.0912359], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 1, 5, 5, 4, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 1, 0, 1]': ([0.10542, 0.105232, 0.105234, 0.105222, 0.105235, 0.103611, 0.0919471, 0.0911829, 0.091352, 0.0913069, 0.091239, 0.0915999, 0.0911601, 0.091361, 0.091373, 0.091295, 0.09113, 0.0917852, 0.091285, 0.0913949, 0.0913949, 0.0916231, 0.0914631, 0.0911798, 0.091157, 0.0914161, 0.091289, 0.091408, 0.0913842, 0.0912359], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		2142
        Multiplications: 	640
        Divisions: 		0
        Logical: 		0
        Reads: 			3337
        Writes: 		374
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest54.exe __orio_perftest54.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest54.exe  
Program Test Output: 
{'[0, 4, 5, 0, 3, 5, 0, 0, 29, 4, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.128211}
{'[0, 4, 5, 0, 3, 5, 0, 0, 29, 4, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.128139}
{'[0, 4, 5, 0, 3, 5, 0, 0, 29, 4, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.127958}
{'[0, 4, 5, 0, 3, 5, 0, 0, 29, 4, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.117617}
{'[0, 4, 5, 0, 3, 5, 0, 0, 29, 4, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.112317}
{'[0, 4, 5, 0, 3, 5, 0, 0, 29, 4, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.111949}
{'[0, 4, 5, 0, 3, 5, 0, 0, 29, 4, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.109107}
{'[0, 4, 5, 0, 3, 5, 0, 0, 29, 4, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.1095}
{'[0, 4, 5, 0, 3, 5, 0, 0, 29, 4, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.109515}
{'[0, 4, 5, 0, 3, 5, 0, 0, 29, 4, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.109315}
{'[0, 4, 5, 0, 3, 5, 0, 0, 29, 4, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.109175}
{'[0, 4, 5, 0, 3, 5, 0, 0, 29, 4, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.109269}
{'[0, 4, 5, 0, 3, 5, 0, 0, 29, 4, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.109313}
{'[0, 4, 5, 0, 3, 5, 0, 0, 29, 4, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.109304}
{'[0, 4, 5, 0, 3, 5, 0, 0, 29, 4, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.10931}
{'[0, 4, 5, 0, 3, 5, 0, 0, 29, 4, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.109314}
{'[0, 4, 5, 0, 3, 5, 0, 0, 29, 4, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.109283}
{'[0, 4, 5, 0, 3, 5, 0, 0, 29, 4, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.109569}
{'[0, 4, 5, 0, 3, 5, 0, 0, 29, 4, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.1096}
{'[0, 4, 5, 0, 3, 5, 0, 0, 29, 4, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.109384}
{'[0, 4, 5, 0, 3, 5, 0, 0, 29, 4, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.109247}
{'[0, 4, 5, 0, 3, 5, 0, 0, 29, 4, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.109482}
{'[0, 4, 5, 0, 3, 5, 0, 0, 29, 4, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.109137}
{'[0, 4, 5, 0, 3, 5, 0, 0, 29, 4, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.109402}
{'[0, 4, 5, 0, 3, 5, 0, 0, 29, 4, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.109523}
{'[0, 4, 5, 0, 3, 5, 0, 0, 29, 4, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.109255}
{'[0, 4, 5, 0, 3, 5, 0, 0, 29, 4, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.109229}
{'[0, 4, 5, 0, 3, 5, 0, 0, 29, 4, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.109529}
{'[0, 4, 5, 0, 3, 5, 0, 0, 29, 4, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.109448}
{'[0, 4, 5, 0, 3, 5, 0, 0, 29, 4, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.109315}

out:
 ["{'[0, 4, 5, 0, 3, 5, 0, 0, 29, 4, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.128211}", "{'[0, 4, 5, 0, 3, 5, 0, 0, 29, 4, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.128139}", "{'[0, 4, 5, 0, 3, 5, 0, 0, 29, 4, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.127958}", "{'[0, 4, 5, 0, 3, 5, 0, 0, 29, 4, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.117617}", "{'[0, 4, 5, 0, 3, 5, 0, 0, 29, 4, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.112317}", "{'[0, 4, 5, 0, 3, 5, 0, 0, 29, 4, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.111949}", "{'[0, 4, 5, 0, 3, 5, 0, 0, 29, 4, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.109107}", "{'[0, 4, 5, 0, 3, 5, 0, 0, 29, 4, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.1095}", "{'[0, 4, 5, 0, 3, 5, 0, 0, 29, 4, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.109515}", "{'[0, 4, 5, 0, 3, 5, 0, 0, 29, 4, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.109315}", "{'[0, 4, 5, 0, 3, 5, 0, 0, 29, 4, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.109175}", "{'[0, 4, 5, 0, 3, 5, 0, 0, 29, 4, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.109269}", "{'[0, 4, 5, 0, 3, 5, 0, 0, 29, 4, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.109313}", "{'[0, 4, 5, 0, 3, 5, 0, 0, 29, 4, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.109304}", "{'[0, 4, 5, 0, 3, 5, 0, 0, 29, 4, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.10931}", "{'[0, 4, 5, 0, 3, 5, 0, 0, 29, 4, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.109314}", "{'[0, 4, 5, 0, 3, 5, 0, 0, 29, 4, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.109283}", "{'[0, 4, 5, 0, 3, 5, 0, 0, 29, 4, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.109569}", "{'[0, 4, 5, 0, 3, 5, 0, 0, 29, 4, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.1096}", "{'[0, 4, 5, 0, 3, 5, 0, 0, 29, 4, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.109384}", "{'[0, 4, 5, 0, 3, 5, 0, 0, 29, 4, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.109247}", "{'[0, 4, 5, 0, 3, 5, 0, 0, 29, 4, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.109482}", "{'[0, 4, 5, 0, 3, 5, 0, 0, 29, 4, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.109137}", "{'[0, 4, 5, 0, 3, 5, 0, 0, 29, 4, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.109402}", "{'[0, 4, 5, 0, 3, 5, 0, 0, 29, 4, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.109523}", "{'[0, 4, 5, 0, 3, 5, 0, 0, 29, 4, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.109255}", "{'[0, 4, 5, 0, 3, 5, 0, 0, 29, 4, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.109229}", "{'[0, 4, 5, 0, 3, 5, 0, 0, 29, 4, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.109529}", "{'[0, 4, 5, 0, 3, 5, 0, 0, 29, 4, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.109448}", "{'[0, 4, 5, 0, 3, 5, 0, 0, 29, 4, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.109315}"]
returning from 'run': {'[0, 4, 5, 0, 3, 5, 0, 0, 29, 4, 0, 29, 1, 1, 0, 0, 0, 0]': ([0.128211, 0.128139, 0.127958, 0.117617, 0.112317, 0.111949, 0.109107, 0.1095, 0.109515, 0.109315, 0.109175, 0.109269, 0.109313, 0.109304, 0.10931, 0.109314, 0.109283, 0.109569, 0.1096, 0.109384, 0.109247, 0.109482, 0.109137, 0.109402, 0.109523, 0.109255, 0.109229, 0.109529, 0.109448, 0.109315], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 4, 5, 0, 3, 5, 0, 0, 29, 4, 0, 29, 1, 1, 0, 0, 0, 0]': ([0.128211, 0.128139, 0.127958, 0.117617, 0.112317, 0.111949, 0.109107, 0.1095, 0.109515, 0.109315, 0.109175, 0.109269, 0.109313, 0.109304, 0.10931, 0.109314, 0.109283, 0.109569, 0.1096, 0.109384, 0.109247, 0.109482, 0.109137, 0.109402, 0.109523, 0.109255, 0.109229, 0.109529, 0.109448, 0.109315], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	23
        Max loop nest depth: 	5
        Additions: 		1072
        Multiplications: 	444
        Divisions: 		0
        Logical: 		0
        Reads: 			2257
        Writes: 		453
        Comparisons:		23
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest55.exe __orio_perftest55.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest55.exe  
Program Test Output: 
{'[0, 2, 5, 5, 0, 6, 1, 0, 27, 4, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.137437}
{'[0, 2, 5, 5, 0, 6, 1, 0, 27, 4, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.136687}
{'[0, 2, 5, 5, 0, 6, 1, 0, 27, 4, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.136621}
{'[0, 2, 5, 5, 0, 6, 1, 0, 27, 4, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.134854}
{'[0, 2, 5, 5, 0, 6, 1, 0, 27, 4, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.116844}
{'[0, 2, 5, 5, 0, 6, 1, 0, 27, 4, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.115624}
{'[0, 2, 5, 5, 0, 6, 1, 0, 27, 4, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.115391}
{'[0, 2, 5, 5, 0, 6, 1, 0, 27, 4, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.115573}
{'[0, 2, 5, 5, 0, 6, 1, 0, 27, 4, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.115596}
{'[0, 2, 5, 5, 0, 6, 1, 0, 27, 4, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.115622}
{'[0, 2, 5, 5, 0, 6, 1, 0, 27, 4, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.115523}
{'[0, 2, 5, 5, 0, 6, 1, 0, 27, 4, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.115606}
{'[0, 2, 5, 5, 0, 6, 1, 0, 27, 4, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.115801}
{'[0, 2, 5, 5, 0, 6, 1, 0, 27, 4, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.115675}
{'[0, 2, 5, 5, 0, 6, 1, 0, 27, 4, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.115616}
{'[0, 2, 5, 5, 0, 6, 1, 0, 27, 4, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.115556}
{'[0, 2, 5, 5, 0, 6, 1, 0, 27, 4, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.115535}
{'[0, 2, 5, 5, 0, 6, 1, 0, 27, 4, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.115802}
{'[0, 2, 5, 5, 0, 6, 1, 0, 27, 4, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.115631}
{'[0, 2, 5, 5, 0, 6, 1, 0, 27, 4, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.115492}
{'[0, 2, 5, 5, 0, 6, 1, 0, 27, 4, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.115627}
{'[0, 2, 5, 5, 0, 6, 1, 0, 27, 4, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.115888}
{'[0, 2, 5, 5, 0, 6, 1, 0, 27, 4, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.115925}
{'[0, 2, 5, 5, 0, 6, 1, 0, 27, 4, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.115616}
{'[0, 2, 5, 5, 0, 6, 1, 0, 27, 4, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.115484}
{'[0, 2, 5, 5, 0, 6, 1, 0, 27, 4, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.115513}
{'[0, 2, 5, 5, 0, 6, 1, 0, 27, 4, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.115528}
{'[0, 2, 5, 5, 0, 6, 1, 0, 27, 4, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.115499}
{'[0, 2, 5, 5, 0, 6, 1, 0, 27, 4, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.115508}
{'[0, 2, 5, 5, 0, 6, 1, 0, 27, 4, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.11559}

out:
 ["{'[0, 2, 5, 5, 0, 6, 1, 0, 27, 4, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.137437}", "{'[0, 2, 5, 5, 0, 6, 1, 0, 27, 4, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.136687}", "{'[0, 2, 5, 5, 0, 6, 1, 0, 27, 4, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.136621}", "{'[0, 2, 5, 5, 0, 6, 1, 0, 27, 4, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.134854}", "{'[0, 2, 5, 5, 0, 6, 1, 0, 27, 4, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.116844}", "{'[0, 2, 5, 5, 0, 6, 1, 0, 27, 4, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.115624}", "{'[0, 2, 5, 5, 0, 6, 1, 0, 27, 4, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.115391}", "{'[0, 2, 5, 5, 0, 6, 1, 0, 27, 4, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.115573}", "{'[0, 2, 5, 5, 0, 6, 1, 0, 27, 4, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.115596}", "{'[0, 2, 5, 5, 0, 6, 1, 0, 27, 4, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.115622}", "{'[0, 2, 5, 5, 0, 6, 1, 0, 27, 4, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.115523}", "{'[0, 2, 5, 5, 0, 6, 1, 0, 27, 4, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.115606}", "{'[0, 2, 5, 5, 0, 6, 1, 0, 27, 4, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.115801}", "{'[0, 2, 5, 5, 0, 6, 1, 0, 27, 4, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.115675}", "{'[0, 2, 5, 5, 0, 6, 1, 0, 27, 4, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.115616}", "{'[0, 2, 5, 5, 0, 6, 1, 0, 27, 4, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.115556}", "{'[0, 2, 5, 5, 0, 6, 1, 0, 27, 4, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.115535}", "{'[0, 2, 5, 5, 0, 6, 1, 0, 27, 4, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.115802}", "{'[0, 2, 5, 5, 0, 6, 1, 0, 27, 4, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.115631}", "{'[0, 2, 5, 5, 0, 6, 1, 0, 27, 4, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.115492}", "{'[0, 2, 5, 5, 0, 6, 1, 0, 27, 4, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.115627}", "{'[0, 2, 5, 5, 0, 6, 1, 0, 27, 4, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.115888}", "{'[0, 2, 5, 5, 0, 6, 1, 0, 27, 4, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.115925}", "{'[0, 2, 5, 5, 0, 6, 1, 0, 27, 4, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.115616}", "{'[0, 2, 5, 5, 0, 6, 1, 0, 27, 4, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.115484}", "{'[0, 2, 5, 5, 0, 6, 1, 0, 27, 4, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.115513}", "{'[0, 2, 5, 5, 0, 6, 1, 0, 27, 4, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.115528}", "{'[0, 2, 5, 5, 0, 6, 1, 0, 27, 4, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.115499}", "{'[0, 2, 5, 5, 0, 6, 1, 0, 27, 4, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.115508}", "{'[0, 2, 5, 5, 0, 6, 1, 0, 27, 4, 0, 27, 0, 1, 0, 1, 0, 1]' : 0.11559}"]
returning from 'run': {'[0, 2, 5, 5, 0, 6, 1, 0, 27, 4, 0, 27, 0, 1, 0, 1, 0, 1]': ([0.137437, 0.136687, 0.136621, 0.134854, 0.116844, 0.115624, 0.115391, 0.115573, 0.115596, 0.115622, 0.115523, 0.115606, 0.115801, 0.115675, 0.115616, 0.115556, 0.115535, 0.115802, 0.115631, 0.115492, 0.115627, 0.115888, 0.115925, 0.115616, 0.115484, 0.115513, 0.115528, 0.115499, 0.115508, 0.11559], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 5, 5, 0, 6, 1, 0, 27, 4, 0, 27, 0, 1, 0, 1, 0, 1]': ([0.137437, 0.136687, 0.136621, 0.134854, 0.116844, 0.115624, 0.115391, 0.115573, 0.115596, 0.115622, 0.115523, 0.115606, 0.115801, 0.115675, 0.115616, 0.115556, 0.115535, 0.115802, 0.115631, 0.115492, 0.115627, 0.115888, 0.115925, 0.115616, 0.115484, 0.115513, 0.115528, 0.115499, 0.115508, 0.11559], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	31
        Max loop nest depth: 	5
        Additions: 		3709
        Multiplications: 	1092
        Divisions: 		0
        Logical: 		0
        Reads: 			5872
        Writes: 		639
        Comparisons:		31
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest56.exe __orio_perftest56.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest56.exe  
Program Test Output: 
{'[0, 2, 5, 5, 4, 0, 1, 0, 3, 4, 0, 29, 1, 1, 0, 0, 0, 1]' : 0.13429}
{'[0, 2, 5, 5, 4, 0, 1, 0, 3, 4, 0, 29, 1, 1, 0, 0, 0, 1]' : 0.134258}
{'[0, 2, 5, 5, 4, 0, 1, 0, 3, 4, 0, 29, 1, 1, 0, 0, 0, 1]' : 0.134088}
{'[0, 2, 5, 5, 4, 0, 1, 0, 3, 4, 0, 29, 1, 1, 0, 0, 0, 1]' : 0.134204}
{'[0, 2, 5, 5, 4, 0, 1, 0, 3, 4, 0, 29, 1, 1, 0, 0, 0, 1]' : 0.121705}
{'[0, 2, 5, 5, 4, 0, 1, 0, 3, 4, 0, 29, 1, 1, 0, 0, 0, 1]' : 0.113812}
{'[0, 2, 5, 5, 4, 0, 1, 0, 3, 4, 0, 29, 1, 1, 0, 0, 0, 1]' : 0.113648}
{'[0, 2, 5, 5, 4, 0, 1, 0, 3, 4, 0, 29, 1, 1, 0, 0, 0, 1]' : 0.113534}
{'[0, 2, 5, 5, 4, 0, 1, 0, 3, 4, 0, 29, 1, 1, 0, 0, 0, 1]' : 0.113651}
{'[0, 2, 5, 5, 4, 0, 1, 0, 3, 4, 0, 29, 1, 1, 0, 0, 0, 1]' : 0.113808}
{'[0, 2, 5, 5, 4, 0, 1, 0, 3, 4, 0, 29, 1, 1, 0, 0, 0, 1]' : 0.113286}
{'[0, 2, 5, 5, 4, 0, 1, 0, 3, 4, 0, 29, 1, 1, 0, 0, 0, 1]' : 0.113612}
{'[0, 2, 5, 5, 4, 0, 1, 0, 3, 4, 0, 29, 1, 1, 0, 0, 0, 1]' : 0.11358}
{'[0, 2, 5, 5, 4, 0, 1, 0, 3, 4, 0, 29, 1, 1, 0, 0, 0, 1]' : 0.113792}
{'[0, 2, 5, 5, 4, 0, 1, 0, 3, 4, 0, 29, 1, 1, 0, 0, 0, 1]' : 0.113629}
{'[0, 2, 5, 5, 4, 0, 1, 0, 3, 4, 0, 29, 1, 1, 0, 0, 0, 1]' : 0.113747}
{'[0, 2, 5, 5, 4, 0, 1, 0, 3, 4, 0, 29, 1, 1, 0, 0, 0, 1]' : 0.113443}
{'[0, 2, 5, 5, 4, 0, 1, 0, 3, 4, 0, 29, 1, 1, 0, 0, 0, 1]' : 0.113884}
{'[0, 2, 5, 5, 4, 0, 1, 0, 3, 4, 0, 29, 1, 1, 0, 0, 0, 1]' : 0.113338}
{'[0, 2, 5, 5, 4, 0, 1, 0, 3, 4, 0, 29, 1, 1, 0, 0, 0, 1]' : 0.113447}
{'[0, 2, 5, 5, 4, 0, 1, 0, 3, 4, 0, 29, 1, 1, 0, 0, 0, 1]' : 0.113467}
{'[0, 2, 5, 5, 4, 0, 1, 0, 3, 4, 0, 29, 1, 1, 0, 0, 0, 1]' : 0.1135}
{'[0, 2, 5, 5, 4, 0, 1, 0, 3, 4, 0, 29, 1, 1, 0, 0, 0, 1]' : 0.113469}
{'[0, 2, 5, 5, 4, 0, 1, 0, 3, 4, 0, 29, 1, 1, 0, 0, 0, 1]' : 0.113494}
{'[0, 2, 5, 5, 4, 0, 1, 0, 3, 4, 0, 29, 1, 1, 0, 0, 0, 1]' : 0.113756}
{'[0, 2, 5, 5, 4, 0, 1, 0, 3, 4, 0, 29, 1, 1, 0, 0, 0, 1]' : 0.113762}
{'[0, 2, 5, 5, 4, 0, 1, 0, 3, 4, 0, 29, 1, 1, 0, 0, 0, 1]' : 0.113415}
{'[0, 2, 5, 5, 4, 0, 1, 0, 3, 4, 0, 29, 1, 1, 0, 0, 0, 1]' : 0.113601}
{'[0, 2, 5, 5, 4, 0, 1, 0, 3, 4, 0, 29, 1, 1, 0, 0, 0, 1]' : 0.113545}
{'[0, 2, 5, 5, 4, 0, 1, 0, 3, 4, 0, 29, 1, 1, 0, 0, 0, 1]' : 0.113743}

out:
 ["{'[0, 2, 5, 5, 4, 0, 1, 0, 3, 4, 0, 29, 1, 1, 0, 0, 0, 1]' : 0.13429}", "{'[0, 2, 5, 5, 4, 0, 1, 0, 3, 4, 0, 29, 1, 1, 0, 0, 0, 1]' : 0.134258}", "{'[0, 2, 5, 5, 4, 0, 1, 0, 3, 4, 0, 29, 1, 1, 0, 0, 0, 1]' : 0.134088}", "{'[0, 2, 5, 5, 4, 0, 1, 0, 3, 4, 0, 29, 1, 1, 0, 0, 0, 1]' : 0.134204}", "{'[0, 2, 5, 5, 4, 0, 1, 0, 3, 4, 0, 29, 1, 1, 0, 0, 0, 1]' : 0.121705}", "{'[0, 2, 5, 5, 4, 0, 1, 0, 3, 4, 0, 29, 1, 1, 0, 0, 0, 1]' : 0.113812}", "{'[0, 2, 5, 5, 4, 0, 1, 0, 3, 4, 0, 29, 1, 1, 0, 0, 0, 1]' : 0.113648}", "{'[0, 2, 5, 5, 4, 0, 1, 0, 3, 4, 0, 29, 1, 1, 0, 0, 0, 1]' : 0.113534}", "{'[0, 2, 5, 5, 4, 0, 1, 0, 3, 4, 0, 29, 1, 1, 0, 0, 0, 1]' : 0.113651}", "{'[0, 2, 5, 5, 4, 0, 1, 0, 3, 4, 0, 29, 1, 1, 0, 0, 0, 1]' : 0.113808}", "{'[0, 2, 5, 5, 4, 0, 1, 0, 3, 4, 0, 29, 1, 1, 0, 0, 0, 1]' : 0.113286}", "{'[0, 2, 5, 5, 4, 0, 1, 0, 3, 4, 0, 29, 1, 1, 0, 0, 0, 1]' : 0.113612}", "{'[0, 2, 5, 5, 4, 0, 1, 0, 3, 4, 0, 29, 1, 1, 0, 0, 0, 1]' : 0.11358}", "{'[0, 2, 5, 5, 4, 0, 1, 0, 3, 4, 0, 29, 1, 1, 0, 0, 0, 1]' : 0.113792}", "{'[0, 2, 5, 5, 4, 0, 1, 0, 3, 4, 0, 29, 1, 1, 0, 0, 0, 1]' : 0.113629}", "{'[0, 2, 5, 5, 4, 0, 1, 0, 3, 4, 0, 29, 1, 1, 0, 0, 0, 1]' : 0.113747}", "{'[0, 2, 5, 5, 4, 0, 1, 0, 3, 4, 0, 29, 1, 1, 0, 0, 0, 1]' : 0.113443}", "{'[0, 2, 5, 5, 4, 0, 1, 0, 3, 4, 0, 29, 1, 1, 0, 0, 0, 1]' : 0.113884}", "{'[0, 2, 5, 5, 4, 0, 1, 0, 3, 4, 0, 29, 1, 1, 0, 0, 0, 1]' : 0.113338}", "{'[0, 2, 5, 5, 4, 0, 1, 0, 3, 4, 0, 29, 1, 1, 0, 0, 0, 1]' : 0.113447}", "{'[0, 2, 5, 5, 4, 0, 1, 0, 3, 4, 0, 29, 1, 1, 0, 0, 0, 1]' : 0.113467}", "{'[0, 2, 5, 5, 4, 0, 1, 0, 3, 4, 0, 29, 1, 1, 0, 0, 0, 1]' : 0.1135}", "{'[0, 2, 5, 5, 4, 0, 1, 0, 3, 4, 0, 29, 1, 1, 0, 0, 0, 1]' : 0.113469}", "{'[0, 2, 5, 5, 4, 0, 1, 0, 3, 4, 0, 29, 1, 1, 0, 0, 0, 1]' : 0.113494}", "{'[0, 2, 5, 5, 4, 0, 1, 0, 3, 4, 0, 29, 1, 1, 0, 0, 0, 1]' : 0.113756}", "{'[0, 2, 5, 5, 4, 0, 1, 0, 3, 4, 0, 29, 1, 1, 0, 0, 0, 1]' : 0.113762}", "{'[0, 2, 5, 5, 4, 0, 1, 0, 3, 4, 0, 29, 1, 1, 0, 0, 0, 1]' : 0.113415}", "{'[0, 2, 5, 5, 4, 0, 1, 0, 3, 4, 0, 29, 1, 1, 0, 0, 0, 1]' : 0.113601}", "{'[0, 2, 5, 5, 4, 0, 1, 0, 3, 4, 0, 29, 1, 1, 0, 0, 0, 1]' : 0.113545}", "{'[0, 2, 5, 5, 4, 0, 1, 0, 3, 4, 0, 29, 1, 1, 0, 0, 0, 1]' : 0.113743}"]
returning from 'run': {'[0, 2, 5, 5, 4, 0, 1, 0, 3, 4, 0, 29, 1, 1, 0, 0, 0, 1]': ([0.13429, 0.134258, 0.134088, 0.134204, 0.121705, 0.113812, 0.113648, 0.113534, 0.113651, 0.113808, 0.113286, 0.113612, 0.11358, 0.113792, 0.113629, 0.113747, 0.113443, 0.113884, 0.113338, 0.113447, 0.113467, 0.1135, 0.113469, 0.113494, 0.113756, 0.113762, 0.113415, 0.113601, 0.113545, 0.113743], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 5, 5, 4, 0, 1, 0, 3, 4, 0, 29, 1, 1, 0, 0, 0, 1]': ([0.13429, 0.134258, 0.134088, 0.134204, 0.121705, 0.113812, 0.113648, 0.113534, 0.113651, 0.113808, 0.113286, 0.113612, 0.11358, 0.113792, 0.113629, 0.113747, 0.113443, 0.113884, 0.113338, 0.113447, 0.113467, 0.1135, 0.113469, 0.113494, 0.113756, 0.113762, 0.113415, 0.113601, 0.113545, 0.113743], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = kkk
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	5
        Additions: 		1683
        Multiplications: 	768
        Divisions: 		0
        Logical: 		0
        Reads: 			3427
        Writes: 		627
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest57.exe __orio_perftest57.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest57.exe  
Program Test Output: 
{'[0, 5, 5, 2, 6, 3, 0, 0, 28, 4, 0, 29, 0, 2, 0, 1, 0, 0]' : 0.144076}
{'[0, 5, 5, 2, 6, 3, 0, 0, 28, 4, 0, 29, 0, 2, 0, 1, 0, 0]' : 0.143899}
{'[0, 5, 5, 2, 6, 3, 0, 0, 28, 4, 0, 29, 0, 2, 0, 1, 0, 0]' : 0.143865}
{'[0, 5, 5, 2, 6, 3, 0, 0, 28, 4, 0, 29, 0, 2, 0, 1, 0, 0]' : 0.142574}
{'[0, 5, 5, 2, 6, 3, 0, 0, 28, 4, 0, 29, 0, 2, 0, 1, 0, 0]' : 0.122666}
{'[0, 5, 5, 2, 6, 3, 0, 0, 28, 4, 0, 29, 0, 2, 0, 1, 0, 0]' : 0.121325}
{'[0, 5, 5, 2, 6, 3, 0, 0, 28, 4, 0, 29, 0, 2, 0, 1, 0, 0]' : 0.121177}
{'[0, 5, 5, 2, 6, 3, 0, 0, 28, 4, 0, 29, 0, 2, 0, 1, 0, 0]' : 0.121182}
{'[0, 5, 5, 2, 6, 3, 0, 0, 28, 4, 0, 29, 0, 2, 0, 1, 0, 0]' : 0.121074}
{'[0, 5, 5, 2, 6, 3, 0, 0, 28, 4, 0, 29, 0, 2, 0, 1, 0, 0]' : 0.12159}
{'[0, 5, 5, 2, 6, 3, 0, 0, 28, 4, 0, 29, 0, 2, 0, 1, 0, 0]' : 0.1212}
{'[0, 5, 5, 2, 6, 3, 0, 0, 28, 4, 0, 29, 0, 2, 0, 1, 0, 0]' : 0.121412}
{'[0, 5, 5, 2, 6, 3, 0, 0, 28, 4, 0, 29, 0, 2, 0, 1, 0, 0]' : 0.121324}
{'[0, 5, 5, 2, 6, 3, 0, 0, 28, 4, 0, 29, 0, 2, 0, 1, 0, 0]' : 0.121136}
{'[0, 5, 5, 2, 6, 3, 0, 0, 28, 4, 0, 29, 0, 2, 0, 1, 0, 0]' : 0.121098}
{'[0, 5, 5, 2, 6, 3, 0, 0, 28, 4, 0, 29, 0, 2, 0, 1, 0, 0]' : 0.121168}
{'[0, 5, 5, 2, 6, 3, 0, 0, 28, 4, 0, 29, 0, 2, 0, 1, 0, 0]' : 0.121179}
{'[0, 5, 5, 2, 6, 3, 0, 0, 28, 4, 0, 29, 0, 2, 0, 1, 0, 0]' : 0.12132}
{'[0, 5, 5, 2, 6, 3, 0, 0, 28, 4, 0, 29, 0, 2, 0, 1, 0, 0]' : 0.12121}
{'[0, 5, 5, 2, 6, 3, 0, 0, 28, 4, 0, 29, 0, 2, 0, 1, 0, 0]' : 0.121121}
{'[0, 5, 5, 2, 6, 3, 0, 0, 28, 4, 0, 29, 0, 2, 0, 1, 0, 0]' : 0.12125}
{'[0, 5, 5, 2, 6, 3, 0, 0, 28, 4, 0, 29, 0, 2, 0, 1, 0, 0]' : 0.121433}
{'[0, 5, 5, 2, 6, 3, 0, 0, 28, 4, 0, 29, 0, 2, 0, 1, 0, 0]' : 0.121074}
{'[0, 5, 5, 2, 6, 3, 0, 0, 28, 4, 0, 29, 0, 2, 0, 1, 0, 0]' : 0.121197}
{'[0, 5, 5, 2, 6, 3, 0, 0, 28, 4, 0, 29, 0, 2, 0, 1, 0, 0]' : 0.121165}
{'[0, 5, 5, 2, 6, 3, 0, 0, 28, 4, 0, 29, 0, 2, 0, 1, 0, 0]' : 0.12113}
{'[0, 5, 5, 2, 6, 3, 0, 0, 28, 4, 0, 29, 0, 2, 0, 1, 0, 0]' : 0.121584}
{'[0, 5, 5, 2, 6, 3, 0, 0, 28, 4, 0, 29, 0, 2, 0, 1, 0, 0]' : 0.121431}
{'[0, 5, 5, 2, 6, 3, 0, 0, 28, 4, 0, 29, 0, 2, 0, 1, 0, 0]' : 0.121164}
{'[0, 5, 5, 2, 6, 3, 0, 0, 28, 4, 0, 29, 0, 2, 0, 1, 0, 0]' : 0.12141}

out:
 ["{'[0, 5, 5, 2, 6, 3, 0, 0, 28, 4, 0, 29, 0, 2, 0, 1, 0, 0]' : 0.144076}", "{'[0, 5, 5, 2, 6, 3, 0, 0, 28, 4, 0, 29, 0, 2, 0, 1, 0, 0]' : 0.143899}", "{'[0, 5, 5, 2, 6, 3, 0, 0, 28, 4, 0, 29, 0, 2, 0, 1, 0, 0]' : 0.143865}", "{'[0, 5, 5, 2, 6, 3, 0, 0, 28, 4, 0, 29, 0, 2, 0, 1, 0, 0]' : 0.142574}", "{'[0, 5, 5, 2, 6, 3, 0, 0, 28, 4, 0, 29, 0, 2, 0, 1, 0, 0]' : 0.122666}", "{'[0, 5, 5, 2, 6, 3, 0, 0, 28, 4, 0, 29, 0, 2, 0, 1, 0, 0]' : 0.121325}", "{'[0, 5, 5, 2, 6, 3, 0, 0, 28, 4, 0, 29, 0, 2, 0, 1, 0, 0]' : 0.121177}", "{'[0, 5, 5, 2, 6, 3, 0, 0, 28, 4, 0, 29, 0, 2, 0, 1, 0, 0]' : 0.121182}", "{'[0, 5, 5, 2, 6, 3, 0, 0, 28, 4, 0, 29, 0, 2, 0, 1, 0, 0]' : 0.121074}", "{'[0, 5, 5, 2, 6, 3, 0, 0, 28, 4, 0, 29, 0, 2, 0, 1, 0, 0]' : 0.12159}", "{'[0, 5, 5, 2, 6, 3, 0, 0, 28, 4, 0, 29, 0, 2, 0, 1, 0, 0]' : 0.1212}", "{'[0, 5, 5, 2, 6, 3, 0, 0, 28, 4, 0, 29, 0, 2, 0, 1, 0, 0]' : 0.121412}", "{'[0, 5, 5, 2, 6, 3, 0, 0, 28, 4, 0, 29, 0, 2, 0, 1, 0, 0]' : 0.121324}", "{'[0, 5, 5, 2, 6, 3, 0, 0, 28, 4, 0, 29, 0, 2, 0, 1, 0, 0]' : 0.121136}", "{'[0, 5, 5, 2, 6, 3, 0, 0, 28, 4, 0, 29, 0, 2, 0, 1, 0, 0]' : 0.121098}", "{'[0, 5, 5, 2, 6, 3, 0, 0, 28, 4, 0, 29, 0, 2, 0, 1, 0, 0]' : 0.121168}", "{'[0, 5, 5, 2, 6, 3, 0, 0, 28, 4, 0, 29, 0, 2, 0, 1, 0, 0]' : 0.121179}", "{'[0, 5, 5, 2, 6, 3, 0, 0, 28, 4, 0, 29, 0, 2, 0, 1, 0, 0]' : 0.12132}", "{'[0, 5, 5, 2, 6, 3, 0, 0, 28, 4, 0, 29, 0, 2, 0, 1, 0, 0]' : 0.12121}", "{'[0, 5, 5, 2, 6, 3, 0, 0, 28, 4, 0, 29, 0, 2, 0, 1, 0, 0]' : 0.121121}", "{'[0, 5, 5, 2, 6, 3, 0, 0, 28, 4, 0, 29, 0, 2, 0, 1, 0, 0]' : 0.12125}", "{'[0, 5, 5, 2, 6, 3, 0, 0, 28, 4, 0, 29, 0, 2, 0, 1, 0, 0]' : 0.121433}", "{'[0, 5, 5, 2, 6, 3, 0, 0, 28, 4, 0, 29, 0, 2, 0, 1, 0, 0]' : 0.121074}", "{'[0, 5, 5, 2, 6, 3, 0, 0, 28, 4, 0, 29, 0, 2, 0, 1, 0, 0]' : 0.121197}", "{'[0, 5, 5, 2, 6, 3, 0, 0, 28, 4, 0, 29, 0, 2, 0, 1, 0, 0]' : 0.121165}", "{'[0, 5, 5, 2, 6, 3, 0, 0, 28, 4, 0, 29, 0, 2, 0, 1, 0, 0]' : 0.12113}", "{'[0, 5, 5, 2, 6, 3, 0, 0, 28, 4, 0, 29, 0, 2, 0, 1, 0, 0]' : 0.121584}", "{'[0, 5, 5, 2, 6, 3, 0, 0, 28, 4, 0, 29, 0, 2, 0, 1, 0, 0]' : 0.121431}", "{'[0, 5, 5, 2, 6, 3, 0, 0, 28, 4, 0, 29, 0, 2, 0, 1, 0, 0]' : 0.121164}", "{'[0, 5, 5, 2, 6, 3, 0, 0, 28, 4, 0, 29, 0, 2, 0, 1, 0, 0]' : 0.12141}"]
returning from 'run': {'[0, 5, 5, 2, 6, 3, 0, 0, 28, 4, 0, 29, 0, 2, 0, 1, 0, 0]': ([0.144076, 0.143899, 0.143865, 0.142574, 0.122666, 0.121325, 0.121177, 0.121182, 0.121074, 0.12159, 0.1212, 0.121412, 0.121324, 0.121136, 0.121098, 0.121168, 0.121179, 0.12132, 0.12121, 0.121121, 0.12125, 0.121433, 0.121074, 0.121197, 0.121165, 0.12113, 0.121584, 0.121431, 0.121164, 0.12141], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 5, 5, 2, 6, 3, 0, 0, 28, 4, 0, 29, 0, 2, 0, 1, 0, 0]': ([0.144076, 0.143899, 0.143865, 0.142574, 0.122666, 0.121325, 0.121177, 0.121182, 0.121074, 0.12159, 0.1212, 0.121412, 0.121324, 0.121136, 0.121098, 0.121168, 0.121179, 0.12132, 0.12121, 0.121121, 0.12125, 0.121433, 0.121074, 0.121197, 0.121165, 0.12113, 0.121584, 0.121431, 0.121164, 0.12141], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	5
        Additions: 		1478
        Multiplications: 	456
        Divisions: 		0
        Logical: 		0
        Reads: 			2501
        Writes: 		310
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest58.exe __orio_perftest58.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest58.exe  
Program Test Output: 
{'[0, 6, 5, 1, 0, 6, 0, 0, 23, 4, 0, 27, 0, 1, 0, 0, 1, 1]' : 0.125704}
{'[0, 6, 5, 1, 0, 6, 0, 0, 23, 4, 0, 27, 0, 1, 0, 0, 1, 1]' : 0.125177}
{'[0, 6, 5, 1, 0, 6, 0, 0, 23, 4, 0, 27, 0, 1, 0, 0, 1, 1]' : 0.125116}
{'[0, 6, 5, 1, 0, 6, 0, 0, 23, 4, 0, 27, 0, 1, 0, 0, 1, 1]' : 0.125329}
{'[0, 6, 5, 1, 0, 6, 0, 0, 23, 4, 0, 27, 0, 1, 0, 0, 1, 1]' : 0.125079}
{'[0, 6, 5, 1, 0, 6, 0, 0, 23, 4, 0, 27, 0, 1, 0, 0, 1, 1]' : 0.130727}
{'[0, 6, 5, 1, 0, 6, 0, 0, 23, 4, 0, 27, 0, 1, 0, 0, 1, 1]' : 0.125179}
{'[0, 6, 5, 1, 0, 6, 0, 0, 23, 4, 0, 27, 0, 1, 0, 0, 1, 1]' : 0.125584}
{'[0, 6, 5, 1, 0, 6, 0, 0, 23, 4, 0, 27, 0, 1, 0, 0, 1, 1]' : 0.125334}
{'[0, 6, 5, 1, 0, 6, 0, 0, 23, 4, 0, 27, 0, 1, 0, 0, 1, 1]' : 0.125084}
{'[0, 6, 5, 1, 0, 6, 0, 0, 23, 4, 0, 27, 0, 1, 0, 0, 1, 1]' : 0.125099}
{'[0, 6, 5, 1, 0, 6, 0, 0, 23, 4, 0, 27, 0, 1, 0, 0, 1, 1]' : 0.12503}
{'[0, 6, 5, 1, 0, 6, 0, 0, 23, 4, 0, 27, 0, 1, 0, 0, 1, 1]' : 0.124976}
{'[0, 6, 5, 1, 0, 6, 0, 0, 23, 4, 0, 27, 0, 1, 0, 0, 1, 1]' : 0.125849}
{'[0, 6, 5, 1, 0, 6, 0, 0, 23, 4, 0, 27, 0, 1, 0, 0, 1, 1]' : 0.125008}
{'[0, 6, 5, 1, 0, 6, 0, 0, 23, 4, 0, 27, 0, 1, 0, 0, 1, 1]' : 0.125054}
{'[0, 6, 5, 1, 0, 6, 0, 0, 23, 4, 0, 27, 0, 1, 0, 0, 1, 1]' : 0.126562}
{'[0, 6, 5, 1, 0, 6, 0, 0, 23, 4, 0, 27, 0, 1, 0, 0, 1, 1]' : 0.126699}
{'[0, 6, 5, 1, 0, 6, 0, 0, 23, 4, 0, 27, 0, 1, 0, 0, 1, 1]' : 0.126783}
{'[0, 6, 5, 1, 0, 6, 0, 0, 23, 4, 0, 27, 0, 1, 0, 0, 1, 1]' : 0.126446}
{'[0, 6, 5, 1, 0, 6, 0, 0, 23, 4, 0, 27, 0, 1, 0, 0, 1, 1]' : 0.126636}
{'[0, 6, 5, 1, 0, 6, 0, 0, 23, 4, 0, 27, 0, 1, 0, 0, 1, 1]' : 0.126639}
{'[0, 6, 5, 1, 0, 6, 0, 0, 23, 4, 0, 27, 0, 1, 0, 0, 1, 1]' : 0.126505}
{'[0, 6, 5, 1, 0, 6, 0, 0, 23, 4, 0, 27, 0, 1, 0, 0, 1, 1]' : 0.126571}
{'[0, 6, 5, 1, 0, 6, 0, 0, 23, 4, 0, 27, 0, 1, 0, 0, 1, 1]' : 0.126625}
{'[0, 6, 5, 1, 0, 6, 0, 0, 23, 4, 0, 27, 0, 1, 0, 0, 1, 1]' : 0.126839}
{'[0, 6, 5, 1, 0, 6, 0, 0, 23, 4, 0, 27, 0, 1, 0, 0, 1, 1]' : 0.126844}
{'[0, 6, 5, 1, 0, 6, 0, 0, 23, 4, 0, 27, 0, 1, 0, 0, 1, 1]' : 0.126722}
{'[0, 6, 5, 1, 0, 6, 0, 0, 23, 4, 0, 27, 0, 1, 0, 0, 1, 1]' : 0.126549}
{'[0, 6, 5, 1, 0, 6, 0, 0, 23, 4, 0, 27, 0, 1, 0, 0, 1, 1]' : 0.126563}

out:
 ["{'[0, 6, 5, 1, 0, 6, 0, 0, 23, 4, 0, 27, 0, 1, 0, 0, 1, 1]' : 0.125704}", "{'[0, 6, 5, 1, 0, 6, 0, 0, 23, 4, 0, 27, 0, 1, 0, 0, 1, 1]' : 0.125177}", "{'[0, 6, 5, 1, 0, 6, 0, 0, 23, 4, 0, 27, 0, 1, 0, 0, 1, 1]' : 0.125116}", "{'[0, 6, 5, 1, 0, 6, 0, 0, 23, 4, 0, 27, 0, 1, 0, 0, 1, 1]' : 0.125329}", "{'[0, 6, 5, 1, 0, 6, 0, 0, 23, 4, 0, 27, 0, 1, 0, 0, 1, 1]' : 0.125079}", "{'[0, 6, 5, 1, 0, 6, 0, 0, 23, 4, 0, 27, 0, 1, 0, 0, 1, 1]' : 0.130727}", "{'[0, 6, 5, 1, 0, 6, 0, 0, 23, 4, 0, 27, 0, 1, 0, 0, 1, 1]' : 0.125179}", "{'[0, 6, 5, 1, 0, 6, 0, 0, 23, 4, 0, 27, 0, 1, 0, 0, 1, 1]' : 0.125584}", "{'[0, 6, 5, 1, 0, 6, 0, 0, 23, 4, 0, 27, 0, 1, 0, 0, 1, 1]' : 0.125334}", "{'[0, 6, 5, 1, 0, 6, 0, 0, 23, 4, 0, 27, 0, 1, 0, 0, 1, 1]' : 0.125084}", "{'[0, 6, 5, 1, 0, 6, 0, 0, 23, 4, 0, 27, 0, 1, 0, 0, 1, 1]' : 0.125099}", "{'[0, 6, 5, 1, 0, 6, 0, 0, 23, 4, 0, 27, 0, 1, 0, 0, 1, 1]' : 0.12503}", "{'[0, 6, 5, 1, 0, 6, 0, 0, 23, 4, 0, 27, 0, 1, 0, 0, 1, 1]' : 0.124976}", "{'[0, 6, 5, 1, 0, 6, 0, 0, 23, 4, 0, 27, 0, 1, 0, 0, 1, 1]' : 0.125849}", "{'[0, 6, 5, 1, 0, 6, 0, 0, 23, 4, 0, 27, 0, 1, 0, 0, 1, 1]' : 0.125008}", "{'[0, 6, 5, 1, 0, 6, 0, 0, 23, 4, 0, 27, 0, 1, 0, 0, 1, 1]' : 0.125054}", "{'[0, 6, 5, 1, 0, 6, 0, 0, 23, 4, 0, 27, 0, 1, 0, 0, 1, 1]' : 0.126562}", "{'[0, 6, 5, 1, 0, 6, 0, 0, 23, 4, 0, 27, 0, 1, 0, 0, 1, 1]' : 0.126699}", "{'[0, 6, 5, 1, 0, 6, 0, 0, 23, 4, 0, 27, 0, 1, 0, 0, 1, 1]' : 0.126783}", "{'[0, 6, 5, 1, 0, 6, 0, 0, 23, 4, 0, 27, 0, 1, 0, 0, 1, 1]' : 0.126446}", "{'[0, 6, 5, 1, 0, 6, 0, 0, 23, 4, 0, 27, 0, 1, 0, 0, 1, 1]' : 0.126636}", "{'[0, 6, 5, 1, 0, 6, 0, 0, 23, 4, 0, 27, 0, 1, 0, 0, 1, 1]' : 0.126639}", "{'[0, 6, 5, 1, 0, 6, 0, 0, 23, 4, 0, 27, 0, 1, 0, 0, 1, 1]' : 0.126505}", "{'[0, 6, 5, 1, 0, 6, 0, 0, 23, 4, 0, 27, 0, 1, 0, 0, 1, 1]' : 0.126571}", "{'[0, 6, 5, 1, 0, 6, 0, 0, 23, 4, 0, 27, 0, 1, 0, 0, 1, 1]' : 0.126625}", "{'[0, 6, 5, 1, 0, 6, 0, 0, 23, 4, 0, 27, 0, 1, 0, 0, 1, 1]' : 0.126839}", "{'[0, 6, 5, 1, 0, 6, 0, 0, 23, 4, 0, 27, 0, 1, 0, 0, 1, 1]' : 0.126844}", "{'[0, 6, 5, 1, 0, 6, 0, 0, 23, 4, 0, 27, 0, 1, 0, 0, 1, 1]' : 0.126722}", "{'[0, 6, 5, 1, 0, 6, 0, 0, 23, 4, 0, 27, 0, 1, 0, 0, 1, 1]' : 0.126549}", "{'[0, 6, 5, 1, 0, 6, 0, 0, 23, 4, 0, 27, 0, 1, 0, 0, 1, 1]' : 0.126563}"]
returning from 'run': {'[0, 6, 5, 1, 0, 6, 0, 0, 23, 4, 0, 27, 0, 1, 0, 0, 1, 1]': ([0.125704, 0.125177, 0.125116, 0.125329, 0.125079, 0.130727, 0.125179, 0.125584, 0.125334, 0.125084, 0.125099, 0.12503, 0.124976, 0.125849, 0.125008, 0.125054, 0.126562, 0.126699, 0.126783, 0.126446, 0.126636, 0.126639, 0.126505, 0.126571, 0.126625, 0.126839, 0.126844, 0.126722, 0.126549, 0.126563], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 5, 1, 0, 6, 0, 0, 23, 4, 0, 27, 0, 1, 0, 0, 1, 1]': ([0.125704, 0.125177, 0.125116, 0.125329, 0.125079, 0.130727, 0.125179, 0.125584, 0.125334, 0.125084, 0.125099, 0.12503, 0.124976, 0.125849, 0.125008, 0.125054, 0.126562, 0.126699, 0.126783, 0.126446, 0.126636, 0.126639, 0.126505, 0.126571, 0.126625, 0.126839, 0.126844, 0.126722, 0.126549, 0.126563], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	27
        Max loop nest depth: 	4
        Additions: 		4536
        Multiplications: 	1368
        Divisions: 		0
        Logical: 		0
        Reads: 			7142
        Writes: 		765
        Comparisons:		27
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest59.exe __orio_perftest59.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest59.exe  
Program Test Output: 
{'[0, 6, 5, 1, 4, 0, 1, 0, 0, 4, 0, 15, 2, 0, 0, 0, 0, 1]' : 0.206881}
{'[0, 6, 5, 1, 4, 0, 1, 0, 0, 4, 0, 15, 2, 0, 0, 0, 0, 1]' : 0.208449}
{'[0, 6, 5, 1, 4, 0, 1, 0, 0, 4, 0, 15, 2, 0, 0, 0, 0, 1]' : 0.189326}
{'[0, 6, 5, 1, 4, 0, 1, 0, 0, 4, 0, 15, 2, 0, 0, 0, 0, 1]' : 0.181941}
{'[0, 6, 5, 1, 4, 0, 1, 0, 0, 4, 0, 15, 2, 0, 0, 0, 0, 1]' : 0.18302}
{'[0, 6, 5, 1, 4, 0, 1, 0, 0, 4, 0, 15, 2, 0, 0, 0, 0, 1]' : 0.182689}
{'[0, 6, 5, 1, 4, 0, 1, 0, 0, 4, 0, 15, 2, 0, 0, 0, 0, 1]' : 0.182289}
{'[0, 6, 5, 1, 4, 0, 1, 0, 0, 4, 0, 15, 2, 0, 0, 0, 0, 1]' : 0.182382}
{'[0, 6, 5, 1, 4, 0, 1, 0, 0, 4, 0, 15, 2, 0, 0, 0, 0, 1]' : 0.181573}
{'[0, 6, 5, 1, 4, 0, 1, 0, 0, 4, 0, 15, 2, 0, 0, 0, 0, 1]' : 0.183012}
{'[0, 6, 5, 1, 4, 0, 1, 0, 0, 4, 0, 15, 2, 0, 0, 0, 0, 1]' : 0.183079}
{'[0, 6, 5, 1, 4, 0, 1, 0, 0, 4, 0, 15, 2, 0, 0, 0, 0, 1]' : 0.181927}
{'[0, 6, 5, 1, 4, 0, 1, 0, 0, 4, 0, 15, 2, 0, 0, 0, 0, 1]' : 0.182541}
{'[0, 6, 5, 1, 4, 0, 1, 0, 0, 4, 0, 15, 2, 0, 0, 0, 0, 1]' : 0.182577}
{'[0, 6, 5, 1, 4, 0, 1, 0, 0, 4, 0, 15, 2, 0, 0, 0, 0, 1]' : 0.181738}
{'[0, 6, 5, 1, 4, 0, 1, 0, 0, 4, 0, 15, 2, 0, 0, 0, 0, 1]' : 0.182863}
{'[0, 6, 5, 1, 4, 0, 1, 0, 0, 4, 0, 15, 2, 0, 0, 0, 0, 1]' : 0.182598}
{'[0, 6, 5, 1, 4, 0, 1, 0, 0, 4, 0, 15, 2, 0, 0, 0, 0, 1]' : 0.182386}
{'[0, 6, 5, 1, 4, 0, 1, 0, 0, 4, 0, 15, 2, 0, 0, 0, 0, 1]' : 0.182357}
{'[0, 6, 5, 1, 4, 0, 1, 0, 0, 4, 0, 15, 2, 0, 0, 0, 0, 1]' : 0.18235}
{'[0, 6, 5, 1, 4, 0, 1, 0, 0, 4, 0, 15, 2, 0, 0, 0, 0, 1]' : 0.182714}
{'[0, 6, 5, 1, 4, 0, 1, 0, 0, 4, 0, 15, 2, 0, 0, 0, 0, 1]' : 0.182885}
{'[0, 6, 5, 1, 4, 0, 1, 0, 0, 4, 0, 15, 2, 0, 0, 0, 0, 1]' : 0.182395}
{'[0, 6, 5, 1, 4, 0, 1, 0, 0, 4, 0, 15, 2, 0, 0, 0, 0, 1]' : 0.182337}
{'[0, 6, 5, 1, 4, 0, 1, 0, 0, 4, 0, 15, 2, 0, 0, 0, 0, 1]' : 0.186507}
{'[0, 6, 5, 1, 4, 0, 1, 0, 0, 4, 0, 15, 2, 0, 0, 0, 0, 1]' : 0.186762}
{'[0, 6, 5, 1, 4, 0, 1, 0, 0, 4, 0, 15, 2, 0, 0, 0, 0, 1]' : 0.186236}
{'[0, 6, 5, 1, 4, 0, 1, 0, 0, 4, 0, 15, 2, 0, 0, 0, 0, 1]' : 0.186324}
{'[0, 6, 5, 1, 4, 0, 1, 0, 0, 4, 0, 15, 2, 0, 0, 0, 0, 1]' : 0.186504}
{'[0, 6, 5, 1, 4, 0, 1, 0, 0, 4, 0, 15, 2, 0, 0, 0, 0, 1]' : 0.186953}

out:
 ["{'[0, 6, 5, 1, 4, 0, 1, 0, 0, 4, 0, 15, 2, 0, 0, 0, 0, 1]' : 0.206881}", "{'[0, 6, 5, 1, 4, 0, 1, 0, 0, 4, 0, 15, 2, 0, 0, 0, 0, 1]' : 0.208449}", "{'[0, 6, 5, 1, 4, 0, 1, 0, 0, 4, 0, 15, 2, 0, 0, 0, 0, 1]' : 0.189326}", "{'[0, 6, 5, 1, 4, 0, 1, 0, 0, 4, 0, 15, 2, 0, 0, 0, 0, 1]' : 0.181941}", "{'[0, 6, 5, 1, 4, 0, 1, 0, 0, 4, 0, 15, 2, 0, 0, 0, 0, 1]' : 0.18302}", "{'[0, 6, 5, 1, 4, 0, 1, 0, 0, 4, 0, 15, 2, 0, 0, 0, 0, 1]' : 0.182689}", "{'[0, 6, 5, 1, 4, 0, 1, 0, 0, 4, 0, 15, 2, 0, 0, 0, 0, 1]' : 0.182289}", "{'[0, 6, 5, 1, 4, 0, 1, 0, 0, 4, 0, 15, 2, 0, 0, 0, 0, 1]' : 0.182382}", "{'[0, 6, 5, 1, 4, 0, 1, 0, 0, 4, 0, 15, 2, 0, 0, 0, 0, 1]' : 0.181573}", "{'[0, 6, 5, 1, 4, 0, 1, 0, 0, 4, 0, 15, 2, 0, 0, 0, 0, 1]' : 0.183012}", "{'[0, 6, 5, 1, 4, 0, 1, 0, 0, 4, 0, 15, 2, 0, 0, 0, 0, 1]' : 0.183079}", "{'[0, 6, 5, 1, 4, 0, 1, 0, 0, 4, 0, 15, 2, 0, 0, 0, 0, 1]' : 0.181927}", "{'[0, 6, 5, 1, 4, 0, 1, 0, 0, 4, 0, 15, 2, 0, 0, 0, 0, 1]' : 0.182541}", "{'[0, 6, 5, 1, 4, 0, 1, 0, 0, 4, 0, 15, 2, 0, 0, 0, 0, 1]' : 0.182577}", "{'[0, 6, 5, 1, 4, 0, 1, 0, 0, 4, 0, 15, 2, 0, 0, 0, 0, 1]' : 0.181738}", "{'[0, 6, 5, 1, 4, 0, 1, 0, 0, 4, 0, 15, 2, 0, 0, 0, 0, 1]' : 0.182863}", "{'[0, 6, 5, 1, 4, 0, 1, 0, 0, 4, 0, 15, 2, 0, 0, 0, 0, 1]' : 0.182598}", "{'[0, 6, 5, 1, 4, 0, 1, 0, 0, 4, 0, 15, 2, 0, 0, 0, 0, 1]' : 0.182386}", "{'[0, 6, 5, 1, 4, 0, 1, 0, 0, 4, 0, 15, 2, 0, 0, 0, 0, 1]' : 0.182357}", "{'[0, 6, 5, 1, 4, 0, 1, 0, 0, 4, 0, 15, 2, 0, 0, 0, 0, 1]' : 0.18235}", "{'[0, 6, 5, 1, 4, 0, 1, 0, 0, 4, 0, 15, 2, 0, 0, 0, 0, 1]' : 0.182714}", "{'[0, 6, 5, 1, 4, 0, 1, 0, 0, 4, 0, 15, 2, 0, 0, 0, 0, 1]' : 0.182885}", "{'[0, 6, 5, 1, 4, 0, 1, 0, 0, 4, 0, 15, 2, 0, 0, 0, 0, 1]' : 0.182395}", "{'[0, 6, 5, 1, 4, 0, 1, 0, 0, 4, 0, 15, 2, 0, 0, 0, 0, 1]' : 0.182337}", "{'[0, 6, 5, 1, 4, 0, 1, 0, 0, 4, 0, 15, 2, 0, 0, 0, 0, 1]' : 0.186507}", "{'[0, 6, 5, 1, 4, 0, 1, 0, 0, 4, 0, 15, 2, 0, 0, 0, 0, 1]' : 0.186762}", "{'[0, 6, 5, 1, 4, 0, 1, 0, 0, 4, 0, 15, 2, 0, 0, 0, 0, 1]' : 0.186236}", "{'[0, 6, 5, 1, 4, 0, 1, 0, 0, 4, 0, 15, 2, 0, 0, 0, 0, 1]' : 0.186324}", "{'[0, 6, 5, 1, 4, 0, 1, 0, 0, 4, 0, 15, 2, 0, 0, 0, 0, 1]' : 0.186504}", "{'[0, 6, 5, 1, 4, 0, 1, 0, 0, 4, 0, 15, 2, 0, 0, 0, 0, 1]' : 0.186953}"]
returning from 'run': {'[0, 6, 5, 1, 4, 0, 1, 0, 0, 4, 0, 15, 2, 0, 0, 0, 0, 1]': ([0.206881, 0.208449, 0.189326, 0.181941, 0.18302, 0.182689, 0.182289, 0.182382, 0.181573, 0.183012, 0.183079, 0.181927, 0.182541, 0.182577, 0.181738, 0.182863, 0.182598, 0.182386, 0.182357, 0.18235, 0.182714, 0.182885, 0.182395, 0.182337, 0.186507, 0.186762, 0.186236, 0.186324, 0.186504, 0.186953], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 5, 1, 4, 0, 1, 0, 0, 4, 0, 15, 2, 0, 0, 0, 0, 1]': ([0.206881, 0.208449, 0.189326, 0.181941, 0.18302, 0.182689, 0.182289, 0.182382, 0.181573, 0.183012, 0.183079, 0.181927, 0.182541, 0.182577, 0.181738, 0.182863, 0.182598, 0.182386, 0.182357, 0.18235, 0.182714, 0.182885, 0.182395, 0.182337, 0.186507, 0.186762, 0.186236, 0.186324, 0.186504, 0.186953], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = kkk
Code stats:
        Number of loops: 	31
        Max loop nest depth: 	4
        Additions: 		1224
        Multiplications: 	480
        Divisions: 		0
        Logical: 		0
        Reads: 			2695
        Writes: 		573
        Comparisons:		31
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest60.exe __orio_perftest60.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest60.exe  
Program Test Output: 
{'[0, 2, 5, 4, 0, 3, 1, 0, 7, 4, 0, 5, 0, 0, 2, 1, 1, 1]' : 0.134393}
{'[0, 2, 5, 4, 0, 3, 1, 0, 7, 4, 0, 5, 0, 0, 2, 1, 1, 1]' : 0.133958}
{'[0, 2, 5, 4, 0, 3, 1, 0, 7, 4, 0, 5, 0, 0, 2, 1, 1, 1]' : 0.133769}
{'[0, 2, 5, 4, 0, 3, 1, 0, 7, 4, 0, 5, 0, 0, 2, 1, 1, 1]' : 0.133893}
{'[0, 2, 5, 4, 0, 3, 1, 0, 7, 4, 0, 5, 0, 0, 2, 1, 1, 1]' : 0.133873}
{'[0, 2, 5, 4, 0, 3, 1, 0, 7, 4, 0, 5, 0, 0, 2, 1, 1, 1]' : 0.13389}
{'[0, 2, 5, 4, 0, 3, 1, 0, 7, 4, 0, 5, 0, 0, 2, 1, 1, 1]' : 0.133774}
{'[0, 2, 5, 4, 0, 3, 1, 0, 7, 4, 0, 5, 0, 0, 2, 1, 1, 1]' : 0.133849}
{'[0, 2, 5, 4, 0, 3, 1, 0, 7, 4, 0, 5, 0, 0, 2, 1, 1, 1]' : 0.134241}
{'[0, 2, 5, 4, 0, 3, 1, 0, 7, 4, 0, 5, 0, 0, 2, 1, 1, 1]' : 0.133742}
{'[0, 2, 5, 4, 0, 3, 1, 0, 7, 4, 0, 5, 0, 0, 2, 1, 1, 1]' : 0.1339}
{'[0, 2, 5, 4, 0, 3, 1, 0, 7, 4, 0, 5, 0, 0, 2, 1, 1, 1]' : 0.134185}
{'[0, 2, 5, 4, 0, 3, 1, 0, 7, 4, 0, 5, 0, 0, 2, 1, 1, 1]' : 0.13379}
{'[0, 2, 5, 4, 0, 3, 1, 0, 7, 4, 0, 5, 0, 0, 2, 1, 1, 1]' : 0.133831}
{'[0, 2, 5, 4, 0, 3, 1, 0, 7, 4, 0, 5, 0, 0, 2, 1, 1, 1]' : 0.133782}
{'[0, 2, 5, 4, 0, 3, 1, 0, 7, 4, 0, 5, 0, 0, 2, 1, 1, 1]' : 0.133841}
{'[0, 2, 5, 4, 0, 3, 1, 0, 7, 4, 0, 5, 0, 0, 2, 1, 1, 1]' : 0.133963}
{'[0, 2, 5, 4, 0, 3, 1, 0, 7, 4, 0, 5, 0, 0, 2, 1, 1, 1]' : 0.134084}
{'[0, 2, 5, 4, 0, 3, 1, 0, 7, 4, 0, 5, 0, 0, 2, 1, 1, 1]' : 0.133887}
{'[0, 2, 5, 4, 0, 3, 1, 0, 7, 4, 0, 5, 0, 0, 2, 1, 1, 1]' : 0.134013}
{'[0, 2, 5, 4, 0, 3, 1, 0, 7, 4, 0, 5, 0, 0, 2, 1, 1, 1]' : 0.133766}
{'[0, 2, 5, 4, 0, 3, 1, 0, 7, 4, 0, 5, 0, 0, 2, 1, 1, 1]' : 0.133783}
{'[0, 2, 5, 4, 0, 3, 1, 0, 7, 4, 0, 5, 0, 0, 2, 1, 1, 1]' : 0.134071}
{'[0, 2, 5, 4, 0, 3, 1, 0, 7, 4, 0, 5, 0, 0, 2, 1, 1, 1]' : 0.133766}
{'[0, 2, 5, 4, 0, 3, 1, 0, 7, 4, 0, 5, 0, 0, 2, 1, 1, 1]' : 0.133931}
{'[0, 2, 5, 4, 0, 3, 1, 0, 7, 4, 0, 5, 0, 0, 2, 1, 1, 1]' : 0.134269}
{'[0, 2, 5, 4, 0, 3, 1, 0, 7, 4, 0, 5, 0, 0, 2, 1, 1, 1]' : 0.133914}
{'[0, 2, 5, 4, 0, 3, 1, 0, 7, 4, 0, 5, 0, 0, 2, 1, 1, 1]' : 0.1338}
{'[0, 2, 5, 4, 0, 3, 1, 0, 7, 4, 0, 5, 0, 0, 2, 1, 1, 1]' : 0.133843}
{'[0, 2, 5, 4, 0, 3, 1, 0, 7, 4, 0, 5, 0, 0, 2, 1, 1, 1]' : 0.133993}

out:
 ["{'[0, 2, 5, 4, 0, 3, 1, 0, 7, 4, 0, 5, 0, 0, 2, 1, 1, 1]' : 0.134393}", "{'[0, 2, 5, 4, 0, 3, 1, 0, 7, 4, 0, 5, 0, 0, 2, 1, 1, 1]' : 0.133958}", "{'[0, 2, 5, 4, 0, 3, 1, 0, 7, 4, 0, 5, 0, 0, 2, 1, 1, 1]' : 0.133769}", "{'[0, 2, 5, 4, 0, 3, 1, 0, 7, 4, 0, 5, 0, 0, 2, 1, 1, 1]' : 0.133893}", "{'[0, 2, 5, 4, 0, 3, 1, 0, 7, 4, 0, 5, 0, 0, 2, 1, 1, 1]' : 0.133873}", "{'[0, 2, 5, 4, 0, 3, 1, 0, 7, 4, 0, 5, 0, 0, 2, 1, 1, 1]' : 0.13389}", "{'[0, 2, 5, 4, 0, 3, 1, 0, 7, 4, 0, 5, 0, 0, 2, 1, 1, 1]' : 0.133774}", "{'[0, 2, 5, 4, 0, 3, 1, 0, 7, 4, 0, 5, 0, 0, 2, 1, 1, 1]' : 0.133849}", "{'[0, 2, 5, 4, 0, 3, 1, 0, 7, 4, 0, 5, 0, 0, 2, 1, 1, 1]' : 0.134241}", "{'[0, 2, 5, 4, 0, 3, 1, 0, 7, 4, 0, 5, 0, 0, 2, 1, 1, 1]' : 0.133742}", "{'[0, 2, 5, 4, 0, 3, 1, 0, 7, 4, 0, 5, 0, 0, 2, 1, 1, 1]' : 0.1339}", "{'[0, 2, 5, 4, 0, 3, 1, 0, 7, 4, 0, 5, 0, 0, 2, 1, 1, 1]' : 0.134185}", "{'[0, 2, 5, 4, 0, 3, 1, 0, 7, 4, 0, 5, 0, 0, 2, 1, 1, 1]' : 0.13379}", "{'[0, 2, 5, 4, 0, 3, 1, 0, 7, 4, 0, 5, 0, 0, 2, 1, 1, 1]' : 0.133831}", "{'[0, 2, 5, 4, 0, 3, 1, 0, 7, 4, 0, 5, 0, 0, 2, 1, 1, 1]' : 0.133782}", "{'[0, 2, 5, 4, 0, 3, 1, 0, 7, 4, 0, 5, 0, 0, 2, 1, 1, 1]' : 0.133841}", "{'[0, 2, 5, 4, 0, 3, 1, 0, 7, 4, 0, 5, 0, 0, 2, 1, 1, 1]' : 0.133963}", "{'[0, 2, 5, 4, 0, 3, 1, 0, 7, 4, 0, 5, 0, 0, 2, 1, 1, 1]' : 0.134084}", "{'[0, 2, 5, 4, 0, 3, 1, 0, 7, 4, 0, 5, 0, 0, 2, 1, 1, 1]' : 0.133887}", "{'[0, 2, 5, 4, 0, 3, 1, 0, 7, 4, 0, 5, 0, 0, 2, 1, 1, 1]' : 0.134013}", "{'[0, 2, 5, 4, 0, 3, 1, 0, 7, 4, 0, 5, 0, 0, 2, 1, 1, 1]' : 0.133766}", "{'[0, 2, 5, 4, 0, 3, 1, 0, 7, 4, 0, 5, 0, 0, 2, 1, 1, 1]' : 0.133783}", "{'[0, 2, 5, 4, 0, 3, 1, 0, 7, 4, 0, 5, 0, 0, 2, 1, 1, 1]' : 0.134071}", "{'[0, 2, 5, 4, 0, 3, 1, 0, 7, 4, 0, 5, 0, 0, 2, 1, 1, 1]' : 0.133766}", "{'[0, 2, 5, 4, 0, 3, 1, 0, 7, 4, 0, 5, 0, 0, 2, 1, 1, 1]' : 0.133931}", "{'[0, 2, 5, 4, 0, 3, 1, 0, 7, 4, 0, 5, 0, 0, 2, 1, 1, 1]' : 0.134269}", "{'[0, 2, 5, 4, 0, 3, 1, 0, 7, 4, 0, 5, 0, 0, 2, 1, 1, 1]' : 0.133914}", "{'[0, 2, 5, 4, 0, 3, 1, 0, 7, 4, 0, 5, 0, 0, 2, 1, 1, 1]' : 0.1338}", "{'[0, 2, 5, 4, 0, 3, 1, 0, 7, 4, 0, 5, 0, 0, 2, 1, 1, 1]' : 0.133843}", "{'[0, 2, 5, 4, 0, 3, 1, 0, 7, 4, 0, 5, 0, 0, 2, 1, 1, 1]' : 0.133993}"]
returning from 'run': {'[0, 2, 5, 4, 0, 3, 1, 0, 7, 4, 0, 5, 0, 0, 2, 1, 1, 1]': ([0.134393, 0.133958, 0.133769, 0.133893, 0.133873, 0.13389, 0.133774, 0.133849, 0.134241, 0.133742, 0.1339, 0.134185, 0.13379, 0.133831, 0.133782, 0.133841, 0.133963, 0.134084, 0.133887, 0.134013, 0.133766, 0.133783, 0.134071, 0.133766, 0.133931, 0.134269, 0.133914, 0.1338, 0.133843, 0.133993], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 5, 4, 0, 3, 1, 0, 7, 4, 0, 5, 0, 0, 2, 1, 1, 1]': ([0.134393, 0.133958, 0.133769, 0.133893, 0.133873, 0.13389, 0.133774, 0.133849, 0.134241, 0.133742, 0.1339, 0.134185, 0.13379, 0.133831, 0.133782, 0.133841, 0.133963, 0.134084, 0.133887, 0.134013, 0.133766, 0.133783, 0.134071, 0.133766, 0.133931, 0.134269, 0.133914, 0.1338, 0.133843, 0.133993], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	23
        Max loop nest depth: 	5
        Additions: 		238
        Multiplications: 	60
        Divisions: 		0
        Logical: 		0
        Reads: 			561
        Writes: 		149
        Comparisons:		23
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest61.exe __orio_perftest61.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest61.exe  
Program Test Output: 
{'[0, 6, 5, 6, 6, 0, 1, 0, 27, 4, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.143633}
{'[0, 6, 5, 6, 6, 0, 1, 0, 27, 4, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.148058}
{'[0, 6, 5, 6, 6, 0, 1, 0, 27, 4, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.148036}
{'[0, 6, 5, 6, 6, 0, 1, 0, 27, 4, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.14512}
{'[0, 6, 5, 6, 6, 0, 1, 0, 27, 4, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.125502}
{'[0, 6, 5, 6, 6, 0, 1, 0, 27, 4, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.125234}
{'[0, 6, 5, 6, 6, 0, 1, 0, 27, 4, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.125227}
{'[0, 6, 5, 6, 6, 0, 1, 0, 27, 4, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.125324}
{'[0, 6, 5, 6, 6, 0, 1, 0, 27, 4, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.125607}
{'[0, 6, 5, 6, 6, 0, 1, 0, 27, 4, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.125406}
{'[0, 6, 5, 6, 6, 0, 1, 0, 27, 4, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.125199}
{'[0, 6, 5, 6, 6, 0, 1, 0, 27, 4, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.125283}
{'[0, 6, 5, 6, 6, 0, 1, 0, 27, 4, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.125219}
{'[0, 6, 5, 6, 6, 0, 1, 0, 27, 4, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.125395}
{'[0, 6, 5, 6, 6, 0, 1, 0, 27, 4, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.125395}
{'[0, 6, 5, 6, 6, 0, 1, 0, 27, 4, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.125545}
{'[0, 6, 5, 6, 6, 0, 1, 0, 27, 4, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.125362}
{'[0, 6, 5, 6, 6, 0, 1, 0, 27, 4, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.125517}
{'[0, 6, 5, 6, 6, 0, 1, 0, 27, 4, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.125233}
{'[0, 6, 5, 6, 6, 0, 1, 0, 27, 4, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.125429}
{'[0, 6, 5, 6, 6, 0, 1, 0, 27, 4, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.125199}
{'[0, 6, 5, 6, 6, 0, 1, 0, 27, 4, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.125189}
{'[0, 6, 5, 6, 6, 0, 1, 0, 27, 4, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.125141}
{'[0, 6, 5, 6, 6, 0, 1, 0, 27, 4, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.125411}
{'[0, 6, 5, 6, 6, 0, 1, 0, 27, 4, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.125359}
{'[0, 6, 5, 6, 6, 0, 1, 0, 27, 4, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.125362}
{'[0, 6, 5, 6, 6, 0, 1, 0, 27, 4, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.125392}
{'[0, 6, 5, 6, 6, 0, 1, 0, 27, 4, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.125458}
{'[0, 6, 5, 6, 6, 0, 1, 0, 27, 4, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.125497}
{'[0, 6, 5, 6, 6, 0, 1, 0, 27, 4, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.125214}

out:
 ["{'[0, 6, 5, 6, 6, 0, 1, 0, 27, 4, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.143633}", "{'[0, 6, 5, 6, 6, 0, 1, 0, 27, 4, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.148058}", "{'[0, 6, 5, 6, 6, 0, 1, 0, 27, 4, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.148036}", "{'[0, 6, 5, 6, 6, 0, 1, 0, 27, 4, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.14512}", "{'[0, 6, 5, 6, 6, 0, 1, 0, 27, 4, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.125502}", "{'[0, 6, 5, 6, 6, 0, 1, 0, 27, 4, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.125234}", "{'[0, 6, 5, 6, 6, 0, 1, 0, 27, 4, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.125227}", "{'[0, 6, 5, 6, 6, 0, 1, 0, 27, 4, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.125324}", "{'[0, 6, 5, 6, 6, 0, 1, 0, 27, 4, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.125607}", "{'[0, 6, 5, 6, 6, 0, 1, 0, 27, 4, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.125406}", "{'[0, 6, 5, 6, 6, 0, 1, 0, 27, 4, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.125199}", "{'[0, 6, 5, 6, 6, 0, 1, 0, 27, 4, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.125283}", "{'[0, 6, 5, 6, 6, 0, 1, 0, 27, 4, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.125219}", "{'[0, 6, 5, 6, 6, 0, 1, 0, 27, 4, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.125395}", "{'[0, 6, 5, 6, 6, 0, 1, 0, 27, 4, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.125395}", "{'[0, 6, 5, 6, 6, 0, 1, 0, 27, 4, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.125545}", "{'[0, 6, 5, 6, 6, 0, 1, 0, 27, 4, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.125362}", "{'[0, 6, 5, 6, 6, 0, 1, 0, 27, 4, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.125517}", "{'[0, 6, 5, 6, 6, 0, 1, 0, 27, 4, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.125233}", "{'[0, 6, 5, 6, 6, 0, 1, 0, 27, 4, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.125429}", "{'[0, 6, 5, 6, 6, 0, 1, 0, 27, 4, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.125199}", "{'[0, 6, 5, 6, 6, 0, 1, 0, 27, 4, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.125189}", "{'[0, 6, 5, 6, 6, 0, 1, 0, 27, 4, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.125141}", "{'[0, 6, 5, 6, 6, 0, 1, 0, 27, 4, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.125411}", "{'[0, 6, 5, 6, 6, 0, 1, 0, 27, 4, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.125359}", "{'[0, 6, 5, 6, 6, 0, 1, 0, 27, 4, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.125362}", "{'[0, 6, 5, 6, 6, 0, 1, 0, 27, 4, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.125392}", "{'[0, 6, 5, 6, 6, 0, 1, 0, 27, 4, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.125458}", "{'[0, 6, 5, 6, 6, 0, 1, 0, 27, 4, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.125497}", "{'[0, 6, 5, 6, 6, 0, 1, 0, 27, 4, 0, 2, 0, 0, 0, 1, 1, 0]' : 0.125214}"]
returning from 'run': {'[0, 6, 5, 6, 6, 0, 1, 0, 27, 4, 0, 2, 0, 0, 0, 1, 1, 0]': ([0.143633, 0.148058, 0.148036, 0.14512, 0.125502, 0.125234, 0.125227, 0.125324, 0.125607, 0.125406, 0.125199, 0.125283, 0.125219, 0.125395, 0.125395, 0.125545, 0.125362, 0.125517, 0.125233, 0.125429, 0.125199, 0.125189, 0.125141, 0.125411, 0.125359, 0.125362, 0.125392, 0.125458, 0.125497, 0.125214], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 5, 6, 6, 0, 1, 0, 27, 4, 0, 2, 0, 0, 0, 1, 1, 0]': ([0.143633, 0.148058, 0.148036, 0.14512, 0.125502, 0.125234, 0.125227, 0.125324, 0.125607, 0.125406, 0.125199, 0.125283, 0.125219, 0.125395, 0.125395, 0.125545, 0.125362, 0.125517, 0.125233, 0.125429, 0.125199, 0.125189, 0.125141, 0.125411, 0.125359, 0.125362, 0.125392, 0.125458, 0.125497, 0.125214], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	38
        Max loop nest depth: 	5
        Additions: 		1056
        Multiplications: 	420
        Divisions: 		0
        Logical: 		0
        Reads: 			2260
        Writes: 		462
        Comparisons:		38
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest62.exe __orio_perftest62.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest62.exe  
Program Test Output: 
{'[0, 4, 5, 4, 3, 6, 0, 0, 5, 4, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.0916679}
{'[0, 4, 5, 4, 3, 6, 0, 0, 5, 4, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.0916331}
{'[0, 4, 5, 4, 3, 6, 0, 0, 5, 4, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.091573}
{'[0, 4, 5, 4, 3, 6, 0, 0, 5, 4, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.09184}
{'[0, 4, 5, 4, 3, 6, 0, 0, 5, 4, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.0913579}
{'[0, 4, 5, 4, 3, 6, 0, 0, 5, 4, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.0913301}
{'[0, 4, 5, 4, 3, 6, 0, 0, 5, 4, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.0915811}
{'[0, 4, 5, 4, 3, 6, 0, 0, 5, 4, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.0914299}
{'[0, 4, 5, 4, 3, 6, 0, 0, 5, 4, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.0915051}
{'[0, 4, 5, 4, 3, 6, 0, 0, 5, 4, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.091327}
{'[0, 4, 5, 4, 3, 6, 0, 0, 5, 4, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.0915542}
{'[0, 4, 5, 4, 3, 6, 0, 0, 5, 4, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.0916259}
{'[0, 4, 5, 4, 3, 6, 0, 0, 5, 4, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.0914369}
{'[0, 4, 5, 4, 3, 6, 0, 0, 5, 4, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.0914881}
{'[0, 4, 5, 4, 3, 6, 0, 0, 5, 4, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.091548}
{'[0, 4, 5, 4, 3, 6, 0, 0, 5, 4, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.0914562}
{'[0, 4, 5, 4, 3, 6, 0, 0, 5, 4, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.0913348}
{'[0, 4, 5, 4, 3, 6, 0, 0, 5, 4, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.091404}
{'[0, 4, 5, 4, 3, 6, 0, 0, 5, 4, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.091363}
{'[0, 4, 5, 4, 3, 6, 0, 0, 5, 4, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.0914361}
{'[0, 4, 5, 4, 3, 6, 0, 0, 5, 4, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.0914221}
{'[0, 4, 5, 4, 3, 6, 0, 0, 5, 4, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.0914159}
{'[0, 4, 5, 4, 3, 6, 0, 0, 5, 4, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.091526}
{'[0, 4, 5, 4, 3, 6, 0, 0, 5, 4, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.091634}
{'[0, 4, 5, 4, 3, 6, 0, 0, 5, 4, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.091574}
{'[0, 4, 5, 4, 3, 6, 0, 0, 5, 4, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.0917852}
{'[0, 4, 5, 4, 3, 6, 0, 0, 5, 4, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.0916209}
{'[0, 4, 5, 4, 3, 6, 0, 0, 5, 4, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.0913689}
{'[0, 4, 5, 4, 3, 6, 0, 0, 5, 4, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.0914249}
{'[0, 4, 5, 4, 3, 6, 0, 0, 5, 4, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.0914481}

out:
 ["{'[0, 4, 5, 4, 3, 6, 0, 0, 5, 4, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.0916679}", "{'[0, 4, 5, 4, 3, 6, 0, 0, 5, 4, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.0916331}", "{'[0, 4, 5, 4, 3, 6, 0, 0, 5, 4, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.091573}", "{'[0, 4, 5, 4, 3, 6, 0, 0, 5, 4, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.09184}", "{'[0, 4, 5, 4, 3, 6, 0, 0, 5, 4, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.0913579}", "{'[0, 4, 5, 4, 3, 6, 0, 0, 5, 4, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.0913301}", "{'[0, 4, 5, 4, 3, 6, 0, 0, 5, 4, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.0915811}", "{'[0, 4, 5, 4, 3, 6, 0, 0, 5, 4, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.0914299}", "{'[0, 4, 5, 4, 3, 6, 0, 0, 5, 4, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.0915051}", "{'[0, 4, 5, 4, 3, 6, 0, 0, 5, 4, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.091327}", "{'[0, 4, 5, 4, 3, 6, 0, 0, 5, 4, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.0915542}", "{'[0, 4, 5, 4, 3, 6, 0, 0, 5, 4, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.0916259}", "{'[0, 4, 5, 4, 3, 6, 0, 0, 5, 4, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.0914369}", "{'[0, 4, 5, 4, 3, 6, 0, 0, 5, 4, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.0914881}", "{'[0, 4, 5, 4, 3, 6, 0, 0, 5, 4, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.091548}", "{'[0, 4, 5, 4, 3, 6, 0, 0, 5, 4, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.0914562}", "{'[0, 4, 5, 4, 3, 6, 0, 0, 5, 4, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.0913348}", "{'[0, 4, 5, 4, 3, 6, 0, 0, 5, 4, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.091404}", "{'[0, 4, 5, 4, 3, 6, 0, 0, 5, 4, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.091363}", "{'[0, 4, 5, 4, 3, 6, 0, 0, 5, 4, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.0914361}", "{'[0, 4, 5, 4, 3, 6, 0, 0, 5, 4, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.0914221}", "{'[0, 4, 5, 4, 3, 6, 0, 0, 5, 4, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.0914159}", "{'[0, 4, 5, 4, 3, 6, 0, 0, 5, 4, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.091526}", "{'[0, 4, 5, 4, 3, 6, 0, 0, 5, 4, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.091634}", "{'[0, 4, 5, 4, 3, 6, 0, 0, 5, 4, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.091574}", "{'[0, 4, 5, 4, 3, 6, 0, 0, 5, 4, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.0917852}", "{'[0, 4, 5, 4, 3, 6, 0, 0, 5, 4, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.0916209}", "{'[0, 4, 5, 4, 3, 6, 0, 0, 5, 4, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.0913689}", "{'[0, 4, 5, 4, 3, 6, 0, 0, 5, 4, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.0914249}", "{'[0, 4, 5, 4, 3, 6, 0, 0, 5, 4, 0, 4, 1, 0, 1, 1, 0, 0]' : 0.0914481}"]
returning from 'run': {'[0, 4, 5, 4, 3, 6, 0, 0, 5, 4, 0, 4, 1, 0, 1, 1, 0, 0]': ([0.0916679, 0.0916331, 0.091573, 0.09184, 0.0913579, 0.0913301, 0.0915811, 0.0914299, 0.0915051, 0.091327, 0.0915542, 0.0916259, 0.0914369, 0.0914881, 0.091548, 0.0914562, 0.0913348, 0.091404, 0.091363, 0.0914361, 0.0914221, 0.0914159, 0.091526, 0.091634, 0.091574, 0.0917852, 0.0916209, 0.0913689, 0.0914249, 0.0914481], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 4, 5, 4, 3, 6, 0, 0, 5, 4, 0, 4, 1, 0, 1, 1, 0, 0]': ([0.0916679, 0.0916331, 0.091573, 0.09184, 0.0913579, 0.0913301, 0.0915811, 0.0914299, 0.0915051, 0.091327, 0.0915542, 0.0916259, 0.0914369, 0.0914881, 0.091548, 0.0914562, 0.0913348, 0.091404, 0.091363, 0.0914361, 0.0914221, 0.0914159, 0.091526, 0.091634, 0.091574, 0.0917852, 0.0916209, 0.0913689, 0.0914249, 0.0914481], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	4
        Additions: 		1943
        Multiplications: 	896
        Divisions: 		0
        Logical: 		0
        Reads: 			3936
        Writes: 		713
        Comparisons:		20
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest63.exe __orio_perftest63.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest63.exe  
Program Test Output: 
{'[0, 6, 5, 2, 0, 0, 0, 0, 0, 4, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.124141}
{'[0, 6, 5, 2, 0, 0, 0, 0, 0, 4, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.124118}
{'[0, 6, 5, 2, 0, 0, 0, 0, 0, 4, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.123967}
{'[0, 6, 5, 2, 0, 0, 0, 0, 0, 4, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.112623}
{'[0, 6, 5, 2, 0, 0, 0, 0, 0, 4, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.107551}
{'[0, 6, 5, 2, 0, 0, 0, 0, 0, 4, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.107557}
{'[0, 6, 5, 2, 0, 0, 0, 0, 0, 4, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.107568}
{'[0, 6, 5, 2, 0, 0, 0, 0, 0, 4, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.107616}
{'[0, 6, 5, 2, 0, 0, 0, 0, 0, 4, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.107636}
{'[0, 6, 5, 2, 0, 0, 0, 0, 0, 4, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.107649}
{'[0, 6, 5, 2, 0, 0, 0, 0, 0, 4, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.107828}
{'[0, 6, 5, 2, 0, 0, 0, 0, 0, 4, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.108042}
{'[0, 6, 5, 2, 0, 0, 0, 0, 0, 4, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.107928}
{'[0, 6, 5, 2, 0, 0, 0, 0, 0, 4, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.10775}
{'[0, 6, 5, 2, 0, 0, 0, 0, 0, 4, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.107552}
{'[0, 6, 5, 2, 0, 0, 0, 0, 0, 4, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.107784}
{'[0, 6, 5, 2, 0, 0, 0, 0, 0, 4, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.107541}
{'[0, 6, 5, 2, 0, 0, 0, 0, 0, 4, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.108062}
{'[0, 6, 5, 2, 0, 0, 0, 0, 0, 4, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.107586}
{'[0, 6, 5, 2, 0, 0, 0, 0, 0, 4, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.107767}
{'[0, 6, 5, 2, 0, 0, 0, 0, 0, 4, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.107861}
{'[0, 6, 5, 2, 0, 0, 0, 0, 0, 4, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.107759}
{'[0, 6, 5, 2, 0, 0, 0, 0, 0, 4, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.107574}
{'[0, 6, 5, 2, 0, 0, 0, 0, 0, 4, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.107706}
{'[0, 6, 5, 2, 0, 0, 0, 0, 0, 4, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.107567}
{'[0, 6, 5, 2, 0, 0, 0, 0, 0, 4, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.107602}
{'[0, 6, 5, 2, 0, 0, 0, 0, 0, 4, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.107719}
{'[0, 6, 5, 2, 0, 0, 0, 0, 0, 4, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.107604}
{'[0, 6, 5, 2, 0, 0, 0, 0, 0, 4, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.107732}
{'[0, 6, 5, 2, 0, 0, 0, 0, 0, 4, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.107637}

out:
 ["{'[0, 6, 5, 2, 0, 0, 0, 0, 0, 4, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.124141}", "{'[0, 6, 5, 2, 0, 0, 0, 0, 0, 4, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.124118}", "{'[0, 6, 5, 2, 0, 0, 0, 0, 0, 4, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.123967}", "{'[0, 6, 5, 2, 0, 0, 0, 0, 0, 4, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.112623}", "{'[0, 6, 5, 2, 0, 0, 0, 0, 0, 4, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.107551}", "{'[0, 6, 5, 2, 0, 0, 0, 0, 0, 4, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.107557}", "{'[0, 6, 5, 2, 0, 0, 0, 0, 0, 4, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.107568}", "{'[0, 6, 5, 2, 0, 0, 0, 0, 0, 4, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.107616}", "{'[0, 6, 5, 2, 0, 0, 0, 0, 0, 4, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.107636}", "{'[0, 6, 5, 2, 0, 0, 0, 0, 0, 4, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.107649}", "{'[0, 6, 5, 2, 0, 0, 0, 0, 0, 4, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.107828}", "{'[0, 6, 5, 2, 0, 0, 0, 0, 0, 4, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.108042}", "{'[0, 6, 5, 2, 0, 0, 0, 0, 0, 4, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.107928}", "{'[0, 6, 5, 2, 0, 0, 0, 0, 0, 4, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.10775}", "{'[0, 6, 5, 2, 0, 0, 0, 0, 0, 4, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.107552}", "{'[0, 6, 5, 2, 0, 0, 0, 0, 0, 4, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.107784}", "{'[0, 6, 5, 2, 0, 0, 0, 0, 0, 4, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.107541}", "{'[0, 6, 5, 2, 0, 0, 0, 0, 0, 4, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.108062}", "{'[0, 6, 5, 2, 0, 0, 0, 0, 0, 4, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.107586}", "{'[0, 6, 5, 2, 0, 0, 0, 0, 0, 4, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.107767}", "{'[0, 6, 5, 2, 0, 0, 0, 0, 0, 4, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.107861}", "{'[0, 6, 5, 2, 0, 0, 0, 0, 0, 4, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.107759}", "{'[0, 6, 5, 2, 0, 0, 0, 0, 0, 4, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.107574}", "{'[0, 6, 5, 2, 0, 0, 0, 0, 0, 4, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.107706}", "{'[0, 6, 5, 2, 0, 0, 0, 0, 0, 4, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.107567}", "{'[0, 6, 5, 2, 0, 0, 0, 0, 0, 4, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.107602}", "{'[0, 6, 5, 2, 0, 0, 0, 0, 0, 4, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.107719}", "{'[0, 6, 5, 2, 0, 0, 0, 0, 0, 4, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.107604}", "{'[0, 6, 5, 2, 0, 0, 0, 0, 0, 4, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.107732}", "{'[0, 6, 5, 2, 0, 0, 0, 0, 0, 4, 0, 29, 1, 0, 0, 1, 1, 0]' : 0.107637}"]
returning from 'run': {'[0, 6, 5, 2, 0, 0, 0, 0, 0, 4, 0, 29, 1, 0, 0, 1, 1, 0]': ([0.124141, 0.124118, 0.123967, 0.112623, 0.107551, 0.107557, 0.107568, 0.107616, 0.107636, 0.107649, 0.107828, 0.108042, 0.107928, 0.10775, 0.107552, 0.107784, 0.107541, 0.108062, 0.107586, 0.107767, 0.107861, 0.107759, 0.107574, 0.107706, 0.107567, 0.107602, 0.107719, 0.107604, 0.107732, 0.107637], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 5, 2, 0, 0, 0, 0, 0, 4, 0, 29, 1, 0, 0, 1, 1, 0]': ([0.124141, 0.124118, 0.123967, 0.112623, 0.107551, 0.107557, 0.107568, 0.107616, 0.107636, 0.107649, 0.107828, 0.108042, 0.107928, 0.10775, 0.107552, 0.107784, 0.107541, 0.108062, 0.107586, 0.107767, 0.107861, 0.107759, 0.107574, 0.107706, 0.107567, 0.107602, 0.107719, 0.107604, 0.107732, 0.107637], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	25
        Max loop nest depth: 	5
        Additions: 		669
        Multiplications: 	180
        Divisions: 		0
        Logical: 		0
        Reads: 			1173
        Writes: 		156
        Comparisons:		25
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest64.exe __orio_perftest64.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest64.exe  
Program Test Output: 
{'[0, 6, 5, 1, 6, 6, 1, 0, 2, 4, 0, 5, 0, 1, 0, 0, 0, 0]' : 0.154276}
{'[0, 6, 5, 1, 6, 6, 1, 0, 2, 4, 0, 5, 0, 1, 0, 0, 0, 0]' : 0.154037}
{'[0, 6, 5, 1, 6, 6, 1, 0, 2, 4, 0, 5, 0, 1, 0, 0, 0, 0]' : 0.137032}
{'[0, 6, 5, 1, 6, 6, 1, 0, 2, 4, 0, 5, 0, 1, 0, 0, 0, 0]' : 0.135092}
{'[0, 6, 5, 1, 6, 6, 1, 0, 2, 4, 0, 5, 0, 1, 0, 0, 0, 0]' : 0.138867}
{'[0, 6, 5, 1, 6, 6, 1, 0, 2, 4, 0, 5, 0, 1, 0, 0, 0, 0]' : 0.138887}
{'[0, 6, 5, 1, 6, 6, 1, 0, 2, 4, 0, 5, 0, 1, 0, 0, 0, 0]' : 0.13885}
{'[0, 6, 5, 1, 6, 6, 1, 0, 2, 4, 0, 5, 0, 1, 0, 0, 0, 0]' : 0.1389}
{'[0, 6, 5, 1, 6, 6, 1, 0, 2, 4, 0, 5, 0, 1, 0, 0, 0, 0]' : 0.138796}
{'[0, 6, 5, 1, 6, 6, 1, 0, 2, 4, 0, 5, 0, 1, 0, 0, 0, 0]' : 0.138777}
{'[0, 6, 5, 1, 6, 6, 1, 0, 2, 4, 0, 5, 0, 1, 0, 0, 0, 0]' : 0.139382}
{'[0, 6, 5, 1, 6, 6, 1, 0, 2, 4, 0, 5, 0, 1, 0, 0, 0, 0]' : 0.138831}
{'[0, 6, 5, 1, 6, 6, 1, 0, 2, 4, 0, 5, 0, 1, 0, 0, 0, 0]' : 0.138792}
{'[0, 6, 5, 1, 6, 6, 1, 0, 2, 4, 0, 5, 0, 1, 0, 0, 0, 0]' : 0.138868}
{'[0, 6, 5, 1, 6, 6, 1, 0, 2, 4, 0, 5, 0, 1, 0, 0, 0, 0]' : 0.139162}
{'[0, 6, 5, 1, 6, 6, 1, 0, 2, 4, 0, 5, 0, 1, 0, 0, 0, 0]' : 0.138798}
{'[0, 6, 5, 1, 6, 6, 1, 0, 2, 4, 0, 5, 0, 1, 0, 0, 0, 0]' : 0.138968}
{'[0, 6, 5, 1, 6, 6, 1, 0, 2, 4, 0, 5, 0, 1, 0, 0, 0, 0]' : 0.138839}
{'[0, 6, 5, 1, 6, 6, 1, 0, 2, 4, 0, 5, 0, 1, 0, 0, 0, 0]' : 0.138838}
{'[0, 6, 5, 1, 6, 6, 1, 0, 2, 4, 0, 5, 0, 1, 0, 0, 0, 0]' : 0.138737}
{'[0, 6, 5, 1, 6, 6, 1, 0, 2, 4, 0, 5, 0, 1, 0, 0, 0, 0]' : 0.138928}
{'[0, 6, 5, 1, 6, 6, 1, 0, 2, 4, 0, 5, 0, 1, 0, 0, 0, 0]' : 0.138819}
{'[0, 6, 5, 1, 6, 6, 1, 0, 2, 4, 0, 5, 0, 1, 0, 0, 0, 0]' : 0.138902}
{'[0, 6, 5, 1, 6, 6, 1, 0, 2, 4, 0, 5, 0, 1, 0, 0, 0, 0]' : 0.138808}
{'[0, 6, 5, 1, 6, 6, 1, 0, 2, 4, 0, 5, 0, 1, 0, 0, 0, 0]' : 0.138772}
{'[0, 6, 5, 1, 6, 6, 1, 0, 2, 4, 0, 5, 0, 1, 0, 0, 0, 0]' : 0.13888}
{'[0, 6, 5, 1, 6, 6, 1, 0, 2, 4, 0, 5, 0, 1, 0, 0, 0, 0]' : 0.138768}
{'[0, 6, 5, 1, 6, 6, 1, 0, 2, 4, 0, 5, 0, 1, 0, 0, 0, 0]' : 0.13883}
{'[0, 6, 5, 1, 6, 6, 1, 0, 2, 4, 0, 5, 0, 1, 0, 0, 0, 0]' : 0.139082}
{'[0, 6, 5, 1, 6, 6, 1, 0, 2, 4, 0, 5, 0, 1, 0, 0, 0, 0]' : 0.138371}

out:
 ["{'[0, 6, 5, 1, 6, 6, 1, 0, 2, 4, 0, 5, 0, 1, 0, 0, 0, 0]' : 0.154276}", "{'[0, 6, 5, 1, 6, 6, 1, 0, 2, 4, 0, 5, 0, 1, 0, 0, 0, 0]' : 0.154037}", "{'[0, 6, 5, 1, 6, 6, 1, 0, 2, 4, 0, 5, 0, 1, 0, 0, 0, 0]' : 0.137032}", "{'[0, 6, 5, 1, 6, 6, 1, 0, 2, 4, 0, 5, 0, 1, 0, 0, 0, 0]' : 0.135092}", "{'[0, 6, 5, 1, 6, 6, 1, 0, 2, 4, 0, 5, 0, 1, 0, 0, 0, 0]' : 0.138867}", "{'[0, 6, 5, 1, 6, 6, 1, 0, 2, 4, 0, 5, 0, 1, 0, 0, 0, 0]' : 0.138887}", "{'[0, 6, 5, 1, 6, 6, 1, 0, 2, 4, 0, 5, 0, 1, 0, 0, 0, 0]' : 0.13885}", "{'[0, 6, 5, 1, 6, 6, 1, 0, 2, 4, 0, 5, 0, 1, 0, 0, 0, 0]' : 0.1389}", "{'[0, 6, 5, 1, 6, 6, 1, 0, 2, 4, 0, 5, 0, 1, 0, 0, 0, 0]' : 0.138796}", "{'[0, 6, 5, 1, 6, 6, 1, 0, 2, 4, 0, 5, 0, 1, 0, 0, 0, 0]' : 0.138777}", "{'[0, 6, 5, 1, 6, 6, 1, 0, 2, 4, 0, 5, 0, 1, 0, 0, 0, 0]' : 0.139382}", "{'[0, 6, 5, 1, 6, 6, 1, 0, 2, 4, 0, 5, 0, 1, 0, 0, 0, 0]' : 0.138831}", "{'[0, 6, 5, 1, 6, 6, 1, 0, 2, 4, 0, 5, 0, 1, 0, 0, 0, 0]' : 0.138792}", "{'[0, 6, 5, 1, 6, 6, 1, 0, 2, 4, 0, 5, 0, 1, 0, 0, 0, 0]' : 0.138868}", "{'[0, 6, 5, 1, 6, 6, 1, 0, 2, 4, 0, 5, 0, 1, 0, 0, 0, 0]' : 0.139162}", "{'[0, 6, 5, 1, 6, 6, 1, 0, 2, 4, 0, 5, 0, 1, 0, 0, 0, 0]' : 0.138798}", "{'[0, 6, 5, 1, 6, 6, 1, 0, 2, 4, 0, 5, 0, 1, 0, 0, 0, 0]' : 0.138968}", "{'[0, 6, 5, 1, 6, 6, 1, 0, 2, 4, 0, 5, 0, 1, 0, 0, 0, 0]' : 0.138839}", "{'[0, 6, 5, 1, 6, 6, 1, 0, 2, 4, 0, 5, 0, 1, 0, 0, 0, 0]' : 0.138838}", "{'[0, 6, 5, 1, 6, 6, 1, 0, 2, 4, 0, 5, 0, 1, 0, 0, 0, 0]' : 0.138737}", "{'[0, 6, 5, 1, 6, 6, 1, 0, 2, 4, 0, 5, 0, 1, 0, 0, 0, 0]' : 0.138928}", "{'[0, 6, 5, 1, 6, 6, 1, 0, 2, 4, 0, 5, 0, 1, 0, 0, 0, 0]' : 0.138819}", "{'[0, 6, 5, 1, 6, 6, 1, 0, 2, 4, 0, 5, 0, 1, 0, 0, 0, 0]' : 0.138902}", "{'[0, 6, 5, 1, 6, 6, 1, 0, 2, 4, 0, 5, 0, 1, 0, 0, 0, 0]' : 0.138808}", "{'[0, 6, 5, 1, 6, 6, 1, 0, 2, 4, 0, 5, 0, 1, 0, 0, 0, 0]' : 0.138772}", "{'[0, 6, 5, 1, 6, 6, 1, 0, 2, 4, 0, 5, 0, 1, 0, 0, 0, 0]' : 0.13888}", "{'[0, 6, 5, 1, 6, 6, 1, 0, 2, 4, 0, 5, 0, 1, 0, 0, 0, 0]' : 0.138768}", "{'[0, 6, 5, 1, 6, 6, 1, 0, 2, 4, 0, 5, 0, 1, 0, 0, 0, 0]' : 0.13883}", "{'[0, 6, 5, 1, 6, 6, 1, 0, 2, 4, 0, 5, 0, 1, 0, 0, 0, 0]' : 0.139082}", "{'[0, 6, 5, 1, 6, 6, 1, 0, 2, 4, 0, 5, 0, 1, 0, 0, 0, 0]' : 0.138371}"]
returning from 'run': {'[0, 6, 5, 1, 6, 6, 1, 0, 2, 4, 0, 5, 0, 1, 0, 0, 0, 0]': ([0.154276, 0.154037, 0.137032, 0.135092, 0.138867, 0.138887, 0.13885, 0.1389, 0.138796, 0.138777, 0.139382, 0.138831, 0.138792, 0.138868, 0.139162, 0.138798, 0.138968, 0.138839, 0.138838, 0.138737, 0.138928, 0.138819, 0.138902, 0.138808, 0.138772, 0.13888, 0.138768, 0.13883, 0.139082, 0.138371], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 5, 1, 6, 6, 1, 0, 2, 4, 0, 5, 0, 1, 0, 0, 0, 0]': ([0.154276, 0.154037, 0.137032, 0.135092, 0.138867, 0.138887, 0.13885, 0.1389, 0.138796, 0.138777, 0.139382, 0.138831, 0.138792, 0.138868, 0.139162, 0.138798, 0.138968, 0.138839, 0.138838, 0.138737, 0.138928, 0.138819, 0.138902, 0.138808, 0.138772, 0.13888, 0.138768, 0.13883, 0.139082, 0.138371], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	30
        Max loop nest depth: 	5
        Additions: 		3636
        Multiplications: 	1748
        Divisions: 		0
        Logical: 		0
        Reads: 			7008
        Writes: 		1160
        Comparisons:		30
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest65.exe __orio_perftest65.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest65.exe  
Program Test Output: 
{'[0, 0, 5, 2, 6, 5, 1, 0, 0, 4, 0, 20, 2, 0, 0, 1, 1, 0]' : 0.179704}
{'[0, 0, 5, 2, 6, 5, 1, 0, 0, 4, 0, 20, 2, 0, 0, 1, 1, 0]' : 0.178918}
{'[0, 0, 5, 2, 6, 5, 1, 0, 0, 4, 0, 20, 2, 0, 0, 1, 1, 0]' : 0.178771}
{'[0, 0, 5, 2, 6, 5, 1, 0, 0, 4, 0, 20, 2, 0, 0, 1, 1, 0]' : 0.178332}
{'[0, 0, 5, 2, 6, 5, 1, 0, 0, 4, 0, 20, 2, 0, 0, 1, 1, 0]' : 0.179847}
{'[0, 0, 5, 2, 6, 5, 1, 0, 0, 4, 0, 20, 2, 0, 0, 1, 1, 0]' : 0.178559}
{'[0, 0, 5, 2, 6, 5, 1, 0, 0, 4, 0, 20, 2, 0, 0, 1, 1, 0]' : 0.178927}
{'[0, 0, 5, 2, 6, 5, 1, 0, 0, 4, 0, 20, 2, 0, 0, 1, 1, 0]' : 0.179193}
{'[0, 0, 5, 2, 6, 5, 1, 0, 0, 4, 0, 20, 2, 0, 0, 1, 1, 0]' : 0.178796}
{'[0, 0, 5, 2, 6, 5, 1, 0, 0, 4, 0, 20, 2, 0, 0, 1, 1, 0]' : 0.179313}
{'[0, 0, 5, 2, 6, 5, 1, 0, 0, 4, 0, 20, 2, 0, 0, 1, 1, 0]' : 0.180058}
{'[0, 0, 5, 2, 6, 5, 1, 0, 0, 4, 0, 20, 2, 0, 0, 1, 1, 0]' : 0.178941}
{'[0, 0, 5, 2, 6, 5, 1, 0, 0, 4, 0, 20, 2, 0, 0, 1, 1, 0]' : 0.179661}
{'[0, 0, 5, 2, 6, 5, 1, 0, 0, 4, 0, 20, 2, 0, 0, 1, 1, 0]' : 0.179388}
{'[0, 0, 5, 2, 6, 5, 1, 0, 0, 4, 0, 20, 2, 0, 0, 1, 1, 0]' : 0.179283}
{'[0, 0, 5, 2, 6, 5, 1, 0, 0, 4, 0, 20, 2, 0, 0, 1, 1, 0]' : 0.179257}
{'[0, 0, 5, 2, 6, 5, 1, 0, 0, 4, 0, 20, 2, 0, 0, 1, 1, 0]' : 0.17978}
{'[0, 0, 5, 2, 6, 5, 1, 0, 0, 4, 0, 20, 2, 0, 0, 1, 1, 0]' : 0.178752}
{'[0, 0, 5, 2, 6, 5, 1, 0, 0, 4, 0, 20, 2, 0, 0, 1, 1, 0]' : 0.179053}
{'[0, 0, 5, 2, 6, 5, 1, 0, 0, 4, 0, 20, 2, 0, 0, 1, 1, 0]' : 0.179744}
{'[0, 0, 5, 2, 6, 5, 1, 0, 0, 4, 0, 20, 2, 0, 0, 1, 1, 0]' : 0.178968}
{'[0, 0, 5, 2, 6, 5, 1, 0, 0, 4, 0, 20, 2, 0, 0, 1, 1, 0]' : 0.179929}
{'[0, 0, 5, 2, 6, 5, 1, 0, 0, 4, 0, 20, 2, 0, 0, 1, 1, 0]' : 0.178535}
{'[0, 0, 5, 2, 6, 5, 1, 0, 0, 4, 0, 20, 2, 0, 0, 1, 1, 0]' : 0.179402}
{'[0, 0, 5, 2, 6, 5, 1, 0, 0, 4, 0, 20, 2, 0, 0, 1, 1, 0]' : 0.179164}
{'[0, 0, 5, 2, 6, 5, 1, 0, 0, 4, 0, 20, 2, 0, 0, 1, 1, 0]' : 0.179408}
{'[0, 0, 5, 2, 6, 5, 1, 0, 0, 4, 0, 20, 2, 0, 0, 1, 1, 0]' : 0.178842}
{'[0, 0, 5, 2, 6, 5, 1, 0, 0, 4, 0, 20, 2, 0, 0, 1, 1, 0]' : 0.179306}
{'[0, 0, 5, 2, 6, 5, 1, 0, 0, 4, 0, 20, 2, 0, 0, 1, 1, 0]' : 0.180029}
{'[0, 0, 5, 2, 6, 5, 1, 0, 0, 4, 0, 20, 2, 0, 0, 1, 1, 0]' : 0.179419}

out:
 ["{'[0, 0, 5, 2, 6, 5, 1, 0, 0, 4, 0, 20, 2, 0, 0, 1, 1, 0]' : 0.179704}", "{'[0, 0, 5, 2, 6, 5, 1, 0, 0, 4, 0, 20, 2, 0, 0, 1, 1, 0]' : 0.178918}", "{'[0, 0, 5, 2, 6, 5, 1, 0, 0, 4, 0, 20, 2, 0, 0, 1, 1, 0]' : 0.178771}", "{'[0, 0, 5, 2, 6, 5, 1, 0, 0, 4, 0, 20, 2, 0, 0, 1, 1, 0]' : 0.178332}", "{'[0, 0, 5, 2, 6, 5, 1, 0, 0, 4, 0, 20, 2, 0, 0, 1, 1, 0]' : 0.179847}", "{'[0, 0, 5, 2, 6, 5, 1, 0, 0, 4, 0, 20, 2, 0, 0, 1, 1, 0]' : 0.178559}", "{'[0, 0, 5, 2, 6, 5, 1, 0, 0, 4, 0, 20, 2, 0, 0, 1, 1, 0]' : 0.178927}", "{'[0, 0, 5, 2, 6, 5, 1, 0, 0, 4, 0, 20, 2, 0, 0, 1, 1, 0]' : 0.179193}", "{'[0, 0, 5, 2, 6, 5, 1, 0, 0, 4, 0, 20, 2, 0, 0, 1, 1, 0]' : 0.178796}", "{'[0, 0, 5, 2, 6, 5, 1, 0, 0, 4, 0, 20, 2, 0, 0, 1, 1, 0]' : 0.179313}", "{'[0, 0, 5, 2, 6, 5, 1, 0, 0, 4, 0, 20, 2, 0, 0, 1, 1, 0]' : 0.180058}", "{'[0, 0, 5, 2, 6, 5, 1, 0, 0, 4, 0, 20, 2, 0, 0, 1, 1, 0]' : 0.178941}", "{'[0, 0, 5, 2, 6, 5, 1, 0, 0, 4, 0, 20, 2, 0, 0, 1, 1, 0]' : 0.179661}", "{'[0, 0, 5, 2, 6, 5, 1, 0, 0, 4, 0, 20, 2, 0, 0, 1, 1, 0]' : 0.179388}", "{'[0, 0, 5, 2, 6, 5, 1, 0, 0, 4, 0, 20, 2, 0, 0, 1, 1, 0]' : 0.179283}", "{'[0, 0, 5, 2, 6, 5, 1, 0, 0, 4, 0, 20, 2, 0, 0, 1, 1, 0]' : 0.179257}", "{'[0, 0, 5, 2, 6, 5, 1, 0, 0, 4, 0, 20, 2, 0, 0, 1, 1, 0]' : 0.17978}", "{'[0, 0, 5, 2, 6, 5, 1, 0, 0, 4, 0, 20, 2, 0, 0, 1, 1, 0]' : 0.178752}", "{'[0, 0, 5, 2, 6, 5, 1, 0, 0, 4, 0, 20, 2, 0, 0, 1, 1, 0]' : 0.179053}", "{'[0, 0, 5, 2, 6, 5, 1, 0, 0, 4, 0, 20, 2, 0, 0, 1, 1, 0]' : 0.179744}", "{'[0, 0, 5, 2, 6, 5, 1, 0, 0, 4, 0, 20, 2, 0, 0, 1, 1, 0]' : 0.178968}", "{'[0, 0, 5, 2, 6, 5, 1, 0, 0, 4, 0, 20, 2, 0, 0, 1, 1, 0]' : 0.179929}", "{'[0, 0, 5, 2, 6, 5, 1, 0, 0, 4, 0, 20, 2, 0, 0, 1, 1, 0]' : 0.178535}", "{'[0, 0, 5, 2, 6, 5, 1, 0, 0, 4, 0, 20, 2, 0, 0, 1, 1, 0]' : 0.179402}", "{'[0, 0, 5, 2, 6, 5, 1, 0, 0, 4, 0, 20, 2, 0, 0, 1, 1, 0]' : 0.179164}", "{'[0, 0, 5, 2, 6, 5, 1, 0, 0, 4, 0, 20, 2, 0, 0, 1, 1, 0]' : 0.179408}", "{'[0, 0, 5, 2, 6, 5, 1, 0, 0, 4, 0, 20, 2, 0, 0, 1, 1, 0]' : 0.178842}", "{'[0, 0, 5, 2, 6, 5, 1, 0, 0, 4, 0, 20, 2, 0, 0, 1, 1, 0]' : 0.179306}", "{'[0, 0, 5, 2, 6, 5, 1, 0, 0, 4, 0, 20, 2, 0, 0, 1, 1, 0]' : 0.180029}", "{'[0, 0, 5, 2, 6, 5, 1, 0, 0, 4, 0, 20, 2, 0, 0, 1, 1, 0]' : 0.179419}"]
returning from 'run': {'[0, 0, 5, 2, 6, 5, 1, 0, 0, 4, 0, 20, 2, 0, 0, 1, 1, 0]': ([0.179704, 0.178918, 0.178771, 0.178332, 0.179847, 0.178559, 0.178927, 0.179193, 0.178796, 0.179313, 0.180058, 0.178941, 0.179661, 0.179388, 0.179283, 0.179257, 0.17978, 0.178752, 0.179053, 0.179744, 0.178968, 0.179929, 0.178535, 0.179402, 0.179164, 0.179408, 0.178842, 0.179306, 0.180029, 0.179419], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 5, 2, 6, 5, 1, 0, 0, 4, 0, 20, 2, 0, 0, 1, 1, 0]': ([0.179704, 0.178918, 0.178771, 0.178332, 0.179847, 0.178559, 0.178927, 0.179193, 0.178796, 0.179313, 0.180058, 0.178941, 0.179661, 0.179388, 0.179283, 0.179257, 0.17978, 0.178752, 0.179053, 0.179744, 0.178968, 0.179929, 0.178535, 0.179402, 0.179164, 0.179408, 0.178842, 0.179306, 0.180029, 0.179419], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	5
        Additions: 		1021
        Multiplications: 	468
        Divisions: 		0
        Logical: 		0
        Reads: 			2073
        Writes: 		375
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest66.exe __orio_perftest66.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest66.exe  
Program Test Output: 
{'[0, 6, 5, 5, 0, 5, 0, 0, 16, 4, 0, 4, 0, 2, 0, 1, 0, 1]' : 0.121951}
{'[0, 6, 5, 5, 0, 5, 0, 0, 16, 4, 0, 4, 0, 2, 0, 1, 0, 1]' : 0.121984}
{'[0, 6, 5, 5, 0, 5, 0, 0, 16, 4, 0, 4, 0, 2, 0, 1, 0, 1]' : 0.121908}
{'[0, 6, 5, 5, 0, 5, 0, 0, 16, 4, 0, 4, 0, 2, 0, 1, 0, 1]' : 0.122002}
{'[0, 6, 5, 5, 0, 5, 0, 0, 16, 4, 0, 4, 0, 2, 0, 1, 0, 1]' : 0.11678}
{'[0, 6, 5, 5, 0, 5, 0, 0, 16, 4, 0, 4, 0, 2, 0, 1, 0, 1]' : 0.102933}
{'[0, 6, 5, 5, 0, 5, 0, 0, 16, 4, 0, 4, 0, 2, 0, 1, 0, 1]' : 0.102879}
{'[0, 6, 5, 5, 0, 5, 0, 0, 16, 4, 0, 4, 0, 2, 0, 1, 0, 1]' : 0.102941}
{'[0, 6, 5, 5, 0, 5, 0, 0, 16, 4, 0, 4, 0, 2, 0, 1, 0, 1]' : 0.1029}
{'[0, 6, 5, 5, 0, 5, 0, 0, 16, 4, 0, 4, 0, 2, 0, 1, 0, 1]' : 0.103243}
{'[0, 6, 5, 5, 0, 5, 0, 0, 16, 4, 0, 4, 0, 2, 0, 1, 0, 1]' : 0.103007}
{'[0, 6, 5, 5, 0, 5, 0, 0, 16, 4, 0, 4, 0, 2, 0, 1, 0, 1]' : 0.10296}
{'[0, 6, 5, 5, 0, 5, 0, 0, 16, 4, 0, 4, 0, 2, 0, 1, 0, 1]' : 0.102912}
{'[0, 6, 5, 5, 0, 5, 0, 0, 16, 4, 0, 4, 0, 2, 0, 1, 0, 1]' : 0.10297}
{'[0, 6, 5, 5, 0, 5, 0, 0, 16, 4, 0, 4, 0, 2, 0, 1, 0, 1]' : 0.103112}
{'[0, 6, 5, 5, 0, 5, 0, 0, 16, 4, 0, 4, 0, 2, 0, 1, 0, 1]' : 0.103138}
{'[0, 6, 5, 5, 0, 5, 0, 0, 16, 4, 0, 4, 0, 2, 0, 1, 0, 1]' : 0.10292}
{'[0, 6, 5, 5, 0, 5, 0, 0, 16, 4, 0, 4, 0, 2, 0, 1, 0, 1]' : 0.103141}
{'[0, 6, 5, 5, 0, 5, 0, 0, 16, 4, 0, 4, 0, 2, 0, 1, 0, 1]' : 0.102947}
{'[0, 6, 5, 5, 0, 5, 0, 0, 16, 4, 0, 4, 0, 2, 0, 1, 0, 1]' : 0.103092}
{'[0, 6, 5, 5, 0, 5, 0, 0, 16, 4, 0, 4, 0, 2, 0, 1, 0, 1]' : 0.102874}
{'[0, 6, 5, 5, 0, 5, 0, 0, 16, 4, 0, 4, 0, 2, 0, 1, 0, 1]' : 0.103094}
{'[0, 6, 5, 5, 0, 5, 0, 0, 16, 4, 0, 4, 0, 2, 0, 1, 0, 1]' : 0.102927}
{'[0, 6, 5, 5, 0, 5, 0, 0, 16, 4, 0, 4, 0, 2, 0, 1, 0, 1]' : 0.102981}
{'[0, 6, 5, 5, 0, 5, 0, 0, 16, 4, 0, 4, 0, 2, 0, 1, 0, 1]' : 0.1029}
{'[0, 6, 5, 5, 0, 5, 0, 0, 16, 4, 0, 4, 0, 2, 0, 1, 0, 1]' : 0.103044}
{'[0, 6, 5, 5, 0, 5, 0, 0, 16, 4, 0, 4, 0, 2, 0, 1, 0, 1]' : 0.103075}
{'[0, 6, 5, 5, 0, 5, 0, 0, 16, 4, 0, 4, 0, 2, 0, 1, 0, 1]' : 0.102977}
{'[0, 6, 5, 5, 0, 5, 0, 0, 16, 4, 0, 4, 0, 2, 0, 1, 0, 1]' : 0.102981}
{'[0, 6, 5, 5, 0, 5, 0, 0, 16, 4, 0, 4, 0, 2, 0, 1, 0, 1]' : 0.103101}

out:
 ["{'[0, 6, 5, 5, 0, 5, 0, 0, 16, 4, 0, 4, 0, 2, 0, 1, 0, 1]' : 0.121951}", "{'[0, 6, 5, 5, 0, 5, 0, 0, 16, 4, 0, 4, 0, 2, 0, 1, 0, 1]' : 0.121984}", "{'[0, 6, 5, 5, 0, 5, 0, 0, 16, 4, 0, 4, 0, 2, 0, 1, 0, 1]' : 0.121908}", "{'[0, 6, 5, 5, 0, 5, 0, 0, 16, 4, 0, 4, 0, 2, 0, 1, 0, 1]' : 0.122002}", "{'[0, 6, 5, 5, 0, 5, 0, 0, 16, 4, 0, 4, 0, 2, 0, 1, 0, 1]' : 0.11678}", "{'[0, 6, 5, 5, 0, 5, 0, 0, 16, 4, 0, 4, 0, 2, 0, 1, 0, 1]' : 0.102933}", "{'[0, 6, 5, 5, 0, 5, 0, 0, 16, 4, 0, 4, 0, 2, 0, 1, 0, 1]' : 0.102879}", "{'[0, 6, 5, 5, 0, 5, 0, 0, 16, 4, 0, 4, 0, 2, 0, 1, 0, 1]' : 0.102941}", "{'[0, 6, 5, 5, 0, 5, 0, 0, 16, 4, 0, 4, 0, 2, 0, 1, 0, 1]' : 0.1029}", "{'[0, 6, 5, 5, 0, 5, 0, 0, 16, 4, 0, 4, 0, 2, 0, 1, 0, 1]' : 0.103243}", "{'[0, 6, 5, 5, 0, 5, 0, 0, 16, 4, 0, 4, 0, 2, 0, 1, 0, 1]' : 0.103007}", "{'[0, 6, 5, 5, 0, 5, 0, 0, 16, 4, 0, 4, 0, 2, 0, 1, 0, 1]' : 0.10296}", "{'[0, 6, 5, 5, 0, 5, 0, 0, 16, 4, 0, 4, 0, 2, 0, 1, 0, 1]' : 0.102912}", "{'[0, 6, 5, 5, 0, 5, 0, 0, 16, 4, 0, 4, 0, 2, 0, 1, 0, 1]' : 0.10297}", "{'[0, 6, 5, 5, 0, 5, 0, 0, 16, 4, 0, 4, 0, 2, 0, 1, 0, 1]' : 0.103112}", "{'[0, 6, 5, 5, 0, 5, 0, 0, 16, 4, 0, 4, 0, 2, 0, 1, 0, 1]' : 0.103138}", "{'[0, 6, 5, 5, 0, 5, 0, 0, 16, 4, 0, 4, 0, 2, 0, 1, 0, 1]' : 0.10292}", "{'[0, 6, 5, 5, 0, 5, 0, 0, 16, 4, 0, 4, 0, 2, 0, 1, 0, 1]' : 0.103141}", "{'[0, 6, 5, 5, 0, 5, 0, 0, 16, 4, 0, 4, 0, 2, 0, 1, 0, 1]' : 0.102947}", "{'[0, 6, 5, 5, 0, 5, 0, 0, 16, 4, 0, 4, 0, 2, 0, 1, 0, 1]' : 0.103092}", "{'[0, 6, 5, 5, 0, 5, 0, 0, 16, 4, 0, 4, 0, 2, 0, 1, 0, 1]' : 0.102874}", "{'[0, 6, 5, 5, 0, 5, 0, 0, 16, 4, 0, 4, 0, 2, 0, 1, 0, 1]' : 0.103094}", "{'[0, 6, 5, 5, 0, 5, 0, 0, 16, 4, 0, 4, 0, 2, 0, 1, 0, 1]' : 0.102927}", "{'[0, 6, 5, 5, 0, 5, 0, 0, 16, 4, 0, 4, 0, 2, 0, 1, 0, 1]' : 0.102981}", "{'[0, 6, 5, 5, 0, 5, 0, 0, 16, 4, 0, 4, 0, 2, 0, 1, 0, 1]' : 0.1029}", "{'[0, 6, 5, 5, 0, 5, 0, 0, 16, 4, 0, 4, 0, 2, 0, 1, 0, 1]' : 0.103044}", "{'[0, 6, 5, 5, 0, 5, 0, 0, 16, 4, 0, 4, 0, 2, 0, 1, 0, 1]' : 0.103075}", "{'[0, 6, 5, 5, 0, 5, 0, 0, 16, 4, 0, 4, 0, 2, 0, 1, 0, 1]' : 0.102977}", "{'[0, 6, 5, 5, 0, 5, 0, 0, 16, 4, 0, 4, 0, 2, 0, 1, 0, 1]' : 0.102981}", "{'[0, 6, 5, 5, 0, 5, 0, 0, 16, 4, 0, 4, 0, 2, 0, 1, 0, 1]' : 0.103101}"]
returning from 'run': {'[0, 6, 5, 5, 0, 5, 0, 0, 16, 4, 0, 4, 0, 2, 0, 1, 0, 1]': ([0.121951, 0.121984, 0.121908, 0.122002, 0.11678, 0.102933, 0.102879, 0.102941, 0.1029, 0.103243, 0.103007, 0.10296, 0.102912, 0.10297, 0.103112, 0.103138, 0.10292, 0.103141, 0.102947, 0.103092, 0.102874, 0.103094, 0.102927, 0.102981, 0.1029, 0.103044, 0.103075, 0.102977, 0.102981, 0.103101], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 5, 5, 0, 5, 0, 0, 16, 4, 0, 4, 0, 2, 0, 1, 0, 1]': ([0.121951, 0.121984, 0.121908, 0.122002, 0.11678, 0.102933, 0.102879, 0.102941, 0.1029, 0.103243, 0.103007, 0.10296, 0.102912, 0.10297, 0.103112, 0.103138, 0.10292, 0.103141, 0.102947, 0.103092, 0.102874, 0.103094, 0.102927, 0.102981, 0.1029, 0.103044, 0.103075, 0.102977, 0.102981, 0.103101], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = kkk
Code stats:
        Number of loops: 	30
        Max loop nest depth: 	3
        Additions: 		670
        Multiplications: 	240
        Divisions: 		0
        Logical: 		0
        Reads: 			1438
        Writes: 		300
        Comparisons:		30
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest67.exe __orio_perftest67.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest67.exe  
Program Test Output: 
{'[0, 0, 5, 0, 2, 3, 1, 0, 6, 4, 0, 2, 0, 1, 1, 1, 0, 0]' : 0.12879}
{'[0, 0, 5, 0, 2, 3, 1, 0, 6, 4, 0, 2, 0, 1, 1, 1, 0, 0]' : 0.128681}
{'[0, 0, 5, 0, 2, 3, 1, 0, 6, 4, 0, 2, 0, 1, 1, 1, 0, 0]' : 0.12869}
{'[0, 0, 5, 0, 2, 3, 1, 0, 6, 4, 0, 2, 0, 1, 1, 1, 0, 0]' : 0.127754}
{'[0, 0, 5, 0, 2, 3, 1, 0, 6, 4, 0, 2, 0, 1, 1, 1, 0, 0]' : 0.111065}
{'[0, 0, 5, 0, 2, 3, 1, 0, 6, 4, 0, 2, 0, 1, 1, 1, 0, 0]' : 0.10931}
{'[0, 0, 5, 0, 2, 3, 1, 0, 6, 4, 0, 2, 0, 1, 1, 1, 0, 0]' : 0.109277}
{'[0, 0, 5, 0, 2, 3, 1, 0, 6, 4, 0, 2, 0, 1, 1, 1, 0, 0]' : 0.109421}
{'[0, 0, 5, 0, 2, 3, 1, 0, 6, 4, 0, 2, 0, 1, 1, 1, 0, 0]' : 0.109482}
{'[0, 0, 5, 0, 2, 3, 1, 0, 6, 4, 0, 2, 0, 1, 1, 1, 0, 0]' : 0.109556}
{'[0, 0, 5, 0, 2, 3, 1, 0, 6, 4, 0, 2, 0, 1, 1, 1, 0, 0]' : 0.109462}
{'[0, 0, 5, 0, 2, 3, 1, 0, 6, 4, 0, 2, 0, 1, 1, 1, 0, 0]' : 0.109305}
{'[0, 0, 5, 0, 2, 3, 1, 0, 6, 4, 0, 2, 0, 1, 1, 1, 0, 0]' : 0.109259}
{'[0, 0, 5, 0, 2, 3, 1, 0, 6, 4, 0, 2, 0, 1, 1, 1, 0, 0]' : 0.109727}
{'[0, 0, 5, 0, 2, 3, 1, 0, 6, 4, 0, 2, 0, 1, 1, 1, 0, 0]' : 0.109461}
{'[0, 0, 5, 0, 2, 3, 1, 0, 6, 4, 0, 2, 0, 1, 1, 1, 0, 0]' : 0.109303}
{'[0, 0, 5, 0, 2, 3, 1, 0, 6, 4, 0, 2, 0, 1, 1, 1, 0, 0]' : 0.109268}
{'[0, 0, 5, 0, 2, 3, 1, 0, 6, 4, 0, 2, 0, 1, 1, 1, 0, 0]' : 0.109311}
{'[0, 0, 5, 0, 2, 3, 1, 0, 6, 4, 0, 2, 0, 1, 1, 1, 0, 0]' : 0.109521}
{'[0, 0, 5, 0, 2, 3, 1, 0, 6, 4, 0, 2, 0, 1, 1, 1, 0, 0]' : 0.1095}
{'[0, 0, 5, 0, 2, 3, 1, 0, 6, 4, 0, 2, 0, 1, 1, 1, 0, 0]' : 0.109406}
{'[0, 0, 5, 0, 2, 3, 1, 0, 6, 4, 0, 2, 0, 1, 1, 1, 0, 0]' : 0.109282}
{'[0, 0, 5, 0, 2, 3, 1, 0, 6, 4, 0, 2, 0, 1, 1, 1, 0, 0]' : 0.109353}
{'[0, 0, 5, 0, 2, 3, 1, 0, 6, 4, 0, 2, 0, 1, 1, 1, 0, 0]' : 0.109297}
{'[0, 0, 5, 0, 2, 3, 1, 0, 6, 4, 0, 2, 0, 1, 1, 1, 0, 0]' : 0.10923}
{'[0, 0, 5, 0, 2, 3, 1, 0, 6, 4, 0, 2, 0, 1, 1, 1, 0, 0]' : 0.109254}
{'[0, 0, 5, 0, 2, 3, 1, 0, 6, 4, 0, 2, 0, 1, 1, 1, 0, 0]' : 0.109361}
{'[0, 0, 5, 0, 2, 3, 1, 0, 6, 4, 0, 2, 0, 1, 1, 1, 0, 0]' : 0.10958}
{'[0, 0, 5, 0, 2, 3, 1, 0, 6, 4, 0, 2, 0, 1, 1, 1, 0, 0]' : 0.109446}
{'[0, 0, 5, 0, 2, 3, 1, 0, 6, 4, 0, 2, 0, 1, 1, 1, 0, 0]' : 0.109674}

out:
 ["{'[0, 0, 5, 0, 2, 3, 1, 0, 6, 4, 0, 2, 0, 1, 1, 1, 0, 0]' : 0.12879}", "{'[0, 0, 5, 0, 2, 3, 1, 0, 6, 4, 0, 2, 0, 1, 1, 1, 0, 0]' : 0.128681}", "{'[0, 0, 5, 0, 2, 3, 1, 0, 6, 4, 0, 2, 0, 1, 1, 1, 0, 0]' : 0.12869}", "{'[0, 0, 5, 0, 2, 3, 1, 0, 6, 4, 0, 2, 0, 1, 1, 1, 0, 0]' : 0.127754}", "{'[0, 0, 5, 0, 2, 3, 1, 0, 6, 4, 0, 2, 0, 1, 1, 1, 0, 0]' : 0.111065}", "{'[0, 0, 5, 0, 2, 3, 1, 0, 6, 4, 0, 2, 0, 1, 1, 1, 0, 0]' : 0.10931}", "{'[0, 0, 5, 0, 2, 3, 1, 0, 6, 4, 0, 2, 0, 1, 1, 1, 0, 0]' : 0.109277}", "{'[0, 0, 5, 0, 2, 3, 1, 0, 6, 4, 0, 2, 0, 1, 1, 1, 0, 0]' : 0.109421}", "{'[0, 0, 5, 0, 2, 3, 1, 0, 6, 4, 0, 2, 0, 1, 1, 1, 0, 0]' : 0.109482}", "{'[0, 0, 5, 0, 2, 3, 1, 0, 6, 4, 0, 2, 0, 1, 1, 1, 0, 0]' : 0.109556}", "{'[0, 0, 5, 0, 2, 3, 1, 0, 6, 4, 0, 2, 0, 1, 1, 1, 0, 0]' : 0.109462}", "{'[0, 0, 5, 0, 2, 3, 1, 0, 6, 4, 0, 2, 0, 1, 1, 1, 0, 0]' : 0.109305}", "{'[0, 0, 5, 0, 2, 3, 1, 0, 6, 4, 0, 2, 0, 1, 1, 1, 0, 0]' : 0.109259}", "{'[0, 0, 5, 0, 2, 3, 1, 0, 6, 4, 0, 2, 0, 1, 1, 1, 0, 0]' : 0.109727}", "{'[0, 0, 5, 0, 2, 3, 1, 0, 6, 4, 0, 2, 0, 1, 1, 1, 0, 0]' : 0.109461}", "{'[0, 0, 5, 0, 2, 3, 1, 0, 6, 4, 0, 2, 0, 1, 1, 1, 0, 0]' : 0.109303}", "{'[0, 0, 5, 0, 2, 3, 1, 0, 6, 4, 0, 2, 0, 1, 1, 1, 0, 0]' : 0.109268}", "{'[0, 0, 5, 0, 2, 3, 1, 0, 6, 4, 0, 2, 0, 1, 1, 1, 0, 0]' : 0.109311}", "{'[0, 0, 5, 0, 2, 3, 1, 0, 6, 4, 0, 2, 0, 1, 1, 1, 0, 0]' : 0.109521}", "{'[0, 0, 5, 0, 2, 3, 1, 0, 6, 4, 0, 2, 0, 1, 1, 1, 0, 0]' : 0.1095}", "{'[0, 0, 5, 0, 2, 3, 1, 0, 6, 4, 0, 2, 0, 1, 1, 1, 0, 0]' : 0.109406}", "{'[0, 0, 5, 0, 2, 3, 1, 0, 6, 4, 0, 2, 0, 1, 1, 1, 0, 0]' : 0.109282}", "{'[0, 0, 5, 0, 2, 3, 1, 0, 6, 4, 0, 2, 0, 1, 1, 1, 0, 0]' : 0.109353}", "{'[0, 0, 5, 0, 2, 3, 1, 0, 6, 4, 0, 2, 0, 1, 1, 1, 0, 0]' : 0.109297}", "{'[0, 0, 5, 0, 2, 3, 1, 0, 6, 4, 0, 2, 0, 1, 1, 1, 0, 0]' : 0.10923}", "{'[0, 0, 5, 0, 2, 3, 1, 0, 6, 4, 0, 2, 0, 1, 1, 1, 0, 0]' : 0.109254}", "{'[0, 0, 5, 0, 2, 3, 1, 0, 6, 4, 0, 2, 0, 1, 1, 1, 0, 0]' : 0.109361}", "{'[0, 0, 5, 0, 2, 3, 1, 0, 6, 4, 0, 2, 0, 1, 1, 1, 0, 0]' : 0.10958}", "{'[0, 0, 5, 0, 2, 3, 1, 0, 6, 4, 0, 2, 0, 1, 1, 1, 0, 0]' : 0.109446}", "{'[0, 0, 5, 0, 2, 3, 1, 0, 6, 4, 0, 2, 0, 1, 1, 1, 0, 0]' : 0.109674}"]
returning from 'run': {'[0, 0, 5, 0, 2, 3, 1, 0, 6, 4, 0, 2, 0, 1, 1, 1, 0, 0]': ([0.12879, 0.128681, 0.12869, 0.127754, 0.111065, 0.10931, 0.109277, 0.109421, 0.109482, 0.109556, 0.109462, 0.109305, 0.109259, 0.109727, 0.109461, 0.109303, 0.109268, 0.109311, 0.109521, 0.1095, 0.109406, 0.109282, 0.109353, 0.109297, 0.10923, 0.109254, 0.109361, 0.10958, 0.109446, 0.109674], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 5, 0, 2, 3, 1, 0, 6, 4, 0, 2, 0, 1, 1, 1, 0, 0]': ([0.12879, 0.128681, 0.12869, 0.127754, 0.111065, 0.10931, 0.109277, 0.109421, 0.109482, 0.109556, 0.109462, 0.109305, 0.109259, 0.109727, 0.109461, 0.109303, 0.109268, 0.109311, 0.109521, 0.1095, 0.109406, 0.109282, 0.109353, 0.109297, 0.10923, 0.109254, 0.109361, 0.10958, 0.109446, 0.109674], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		196
        Multiplications: 	48
        Divisions: 		0
        Logical: 		0
        Reads: 			415
        Writes: 		89
        Comparisons:		15
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest68.exe __orio_perftest68.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest68.exe  
Program Test Output: 
{'[0, 0, 5, 3, 5, 0, 0, 0, 19, 4, 0, 1, 0, 0, 0, 0, 0, 1]' : 0.12743}
{'[0, 0, 5, 3, 5, 0, 0, 0, 19, 4, 0, 1, 0, 0, 0, 0, 0, 1]' : 0.127325}
{'[0, 0, 5, 3, 5, 0, 0, 0, 19, 4, 0, 1, 0, 0, 0, 0, 0, 1]' : 0.127498}
{'[0, 0, 5, 3, 5, 0, 0, 0, 19, 4, 0, 1, 0, 0, 0, 0, 0, 1]' : 0.126383}
{'[0, 0, 5, 3, 5, 0, 0, 0, 19, 4, 0, 1, 0, 0, 0, 0, 0, 1]' : 0.111193}
{'[0, 0, 5, 3, 5, 0, 0, 0, 19, 4, 0, 1, 0, 0, 0, 0, 0, 1]' : 0.109722}
{'[0, 0, 5, 3, 5, 0, 0, 0, 19, 4, 0, 1, 0, 0, 0, 0, 0, 1]' : 0.109424}
{'[0, 0, 5, 3, 5, 0, 0, 0, 19, 4, 0, 1, 0, 0, 0, 0, 0, 1]' : 0.109}
{'[0, 0, 5, 3, 5, 0, 0, 0, 19, 4, 0, 1, 0, 0, 0, 0, 0, 1]' : 0.108955}
{'[0, 0, 5, 3, 5, 0, 0, 0, 19, 4, 0, 1, 0, 0, 0, 0, 0, 1]' : 0.109012}
{'[0, 0, 5, 3, 5, 0, 0, 0, 19, 4, 0, 1, 0, 0, 0, 0, 0, 1]' : 0.109082}
{'[0, 0, 5, 3, 5, 0, 0, 0, 19, 4, 0, 1, 0, 0, 0, 0, 0, 1]' : 0.109276}
{'[0, 0, 5, 3, 5, 0, 0, 0, 19, 4, 0, 1, 0, 0, 0, 0, 0, 1]' : 0.108983}
{'[0, 0, 5, 3, 5, 0, 0, 0, 19, 4, 0, 1, 0, 0, 0, 0, 0, 1]' : 0.109222}
{'[0, 0, 5, 3, 5, 0, 0, 0, 19, 4, 0, 1, 0, 0, 0, 0, 0, 1]' : 0.10895}
{'[0, 0, 5, 3, 5, 0, 0, 0, 19, 4, 0, 1, 0, 0, 0, 0, 0, 1]' : 0.109395}
{'[0, 0, 5, 3, 5, 0, 0, 0, 19, 4, 0, 1, 0, 0, 0, 0, 0, 1]' : 0.109147}
{'[0, 0, 5, 3, 5, 0, 0, 0, 19, 4, 0, 1, 0, 0, 0, 0, 0, 1]' : 0.108993}
{'[0, 0, 5, 3, 5, 0, 0, 0, 19, 4, 0, 1, 0, 0, 0, 0, 0, 1]' : 0.109065}
{'[0, 0, 5, 3, 5, 0, 0, 0, 19, 4, 0, 1, 0, 0, 0, 0, 0, 1]' : 0.109035}
{'[0, 0, 5, 3, 5, 0, 0, 0, 19, 4, 0, 1, 0, 0, 0, 0, 0, 1]' : 0.109318}
{'[0, 0, 5, 3, 5, 0, 0, 0, 19, 4, 0, 1, 0, 0, 0, 0, 0, 1]' : 0.10895}
{'[0, 0, 5, 3, 5, 0, 0, 0, 19, 4, 0, 1, 0, 0, 0, 0, 0, 1]' : 0.108996}
{'[0, 0, 5, 3, 5, 0, 0, 0, 19, 4, 0, 1, 0, 0, 0, 0, 0, 1]' : 0.109201}
{'[0, 0, 5, 3, 5, 0, 0, 0, 19, 4, 0, 1, 0, 0, 0, 0, 0, 1]' : 0.109179}
{'[0, 0, 5, 3, 5, 0, 0, 0, 19, 4, 0, 1, 0, 0, 0, 0, 0, 1]' : 0.109214}
{'[0, 0, 5, 3, 5, 0, 0, 0, 19, 4, 0, 1, 0, 0, 0, 0, 0, 1]' : 0.109158}
{'[0, 0, 5, 3, 5, 0, 0, 0, 19, 4, 0, 1, 0, 0, 0, 0, 0, 1]' : 0.109034}
{'[0, 0, 5, 3, 5, 0, 0, 0, 19, 4, 0, 1, 0, 0, 0, 0, 0, 1]' : 0.109115}
{'[0, 0, 5, 3, 5, 0, 0, 0, 19, 4, 0, 1, 0, 0, 0, 0, 0, 1]' : 0.1092}

out:
 ["{'[0, 0, 5, 3, 5, 0, 0, 0, 19, 4, 0, 1, 0, 0, 0, 0, 0, 1]' : 0.12743}", "{'[0, 0, 5, 3, 5, 0, 0, 0, 19, 4, 0, 1, 0, 0, 0, 0, 0, 1]' : 0.127325}", "{'[0, 0, 5, 3, 5, 0, 0, 0, 19, 4, 0, 1, 0, 0, 0, 0, 0, 1]' : 0.127498}", "{'[0, 0, 5, 3, 5, 0, 0, 0, 19, 4, 0, 1, 0, 0, 0, 0, 0, 1]' : 0.126383}", "{'[0, 0, 5, 3, 5, 0, 0, 0, 19, 4, 0, 1, 0, 0, 0, 0, 0, 1]' : 0.111193}", "{'[0, 0, 5, 3, 5, 0, 0, 0, 19, 4, 0, 1, 0, 0, 0, 0, 0, 1]' : 0.109722}", "{'[0, 0, 5, 3, 5, 0, 0, 0, 19, 4, 0, 1, 0, 0, 0, 0, 0, 1]' : 0.109424}", "{'[0, 0, 5, 3, 5, 0, 0, 0, 19, 4, 0, 1, 0, 0, 0, 0, 0, 1]' : 0.109}", "{'[0, 0, 5, 3, 5, 0, 0, 0, 19, 4, 0, 1, 0, 0, 0, 0, 0, 1]' : 0.108955}", "{'[0, 0, 5, 3, 5, 0, 0, 0, 19, 4, 0, 1, 0, 0, 0, 0, 0, 1]' : 0.109012}", "{'[0, 0, 5, 3, 5, 0, 0, 0, 19, 4, 0, 1, 0, 0, 0, 0, 0, 1]' : 0.109082}", "{'[0, 0, 5, 3, 5, 0, 0, 0, 19, 4, 0, 1, 0, 0, 0, 0, 0, 1]' : 0.109276}", "{'[0, 0, 5, 3, 5, 0, 0, 0, 19, 4, 0, 1, 0, 0, 0, 0, 0, 1]' : 0.108983}", "{'[0, 0, 5, 3, 5, 0, 0, 0, 19, 4, 0, 1, 0, 0, 0, 0, 0, 1]' : 0.109222}", "{'[0, 0, 5, 3, 5, 0, 0, 0, 19, 4, 0, 1, 0, 0, 0, 0, 0, 1]' : 0.10895}", "{'[0, 0, 5, 3, 5, 0, 0, 0, 19, 4, 0, 1, 0, 0, 0, 0, 0, 1]' : 0.109395}", "{'[0, 0, 5, 3, 5, 0, 0, 0, 19, 4, 0, 1, 0, 0, 0, 0, 0, 1]' : 0.109147}", "{'[0, 0, 5, 3, 5, 0, 0, 0, 19, 4, 0, 1, 0, 0, 0, 0, 0, 1]' : 0.108993}", "{'[0, 0, 5, 3, 5, 0, 0, 0, 19, 4, 0, 1, 0, 0, 0, 0, 0, 1]' : 0.109065}", "{'[0, 0, 5, 3, 5, 0, 0, 0, 19, 4, 0, 1, 0, 0, 0, 0, 0, 1]' : 0.109035}", "{'[0, 0, 5, 3, 5, 0, 0, 0, 19, 4, 0, 1, 0, 0, 0, 0, 0, 1]' : 0.109318}", "{'[0, 0, 5, 3, 5, 0, 0, 0, 19, 4, 0, 1, 0, 0, 0, 0, 0, 1]' : 0.10895}", "{'[0, 0, 5, 3, 5, 0, 0, 0, 19, 4, 0, 1, 0, 0, 0, 0, 0, 1]' : 0.108996}", "{'[0, 0, 5, 3, 5, 0, 0, 0, 19, 4, 0, 1, 0, 0, 0, 0, 0, 1]' : 0.109201}", "{'[0, 0, 5, 3, 5, 0, 0, 0, 19, 4, 0, 1, 0, 0, 0, 0, 0, 1]' : 0.109179}", "{'[0, 0, 5, 3, 5, 0, 0, 0, 19, 4, 0, 1, 0, 0, 0, 0, 0, 1]' : 0.109214}", "{'[0, 0, 5, 3, 5, 0, 0, 0, 19, 4, 0, 1, 0, 0, 0, 0, 0, 1]' : 0.109158}", "{'[0, 0, 5, 3, 5, 0, 0, 0, 19, 4, 0, 1, 0, 0, 0, 0, 0, 1]' : 0.109034}", "{'[0, 0, 5, 3, 5, 0, 0, 0, 19, 4, 0, 1, 0, 0, 0, 0, 0, 1]' : 0.109115}", "{'[0, 0, 5, 3, 5, 0, 0, 0, 19, 4, 0, 1, 0, 0, 0, 0, 0, 1]' : 0.1092}"]
returning from 'run': {'[0, 0, 5, 3, 5, 0, 0, 0, 19, 4, 0, 1, 0, 0, 0, 0, 0, 1]': ([0.12743, 0.127325, 0.127498, 0.126383, 0.111193, 0.109722, 0.109424, 0.109, 0.108955, 0.109012, 0.109082, 0.109276, 0.108983, 0.109222, 0.10895, 0.109395, 0.109147, 0.108993, 0.109065, 0.109035, 0.109318, 0.10895, 0.108996, 0.109201, 0.109179, 0.109214, 0.109158, 0.109034, 0.109115, 0.1092], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 5, 3, 5, 0, 0, 0, 19, 4, 0, 1, 0, 0, 0, 0, 0, 1]': ([0.12743, 0.127325, 0.127498, 0.126383, 0.111193, 0.109722, 0.109424, 0.109, 0.108955, 0.109012, 0.109082, 0.109276, 0.108983, 0.109222, 0.10895, 0.109395, 0.109147, 0.108993, 0.109065, 0.109035, 0.109318, 0.10895, 0.108996, 0.109201, 0.109179, 0.109214, 0.109158, 0.109034, 0.109115, 0.1092], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	33
        Max loop nest depth: 	5
        Additions: 		1778
        Multiplications: 	516
        Divisions: 		0
        Logical: 		0
        Reads: 			2943
        Writes: 		370
        Comparisons:		33
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest69.exe __orio_perftest69.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest69.exe  
Program Test Output: 
{'[0, 1, 5, 4, 2, 0, 1, 0, 29, 4, 0, 8, 0, 0, 2, 0, 1, 0]' : 0.18283}
{'[0, 1, 5, 4, 2, 0, 1, 0, 29, 4, 0, 8, 0, 0, 2, 0, 1, 0]' : 0.18284}
{'[0, 1, 5, 4, 2, 0, 1, 0, 29, 4, 0, 8, 0, 0, 2, 0, 1, 0]' : 0.180211}
{'[0, 1, 5, 4, 2, 0, 1, 0, 29, 4, 0, 8, 0, 0, 2, 0, 1, 0]' : 0.154255}
{'[0, 1, 5, 4, 2, 0, 1, 0, 29, 4, 0, 8, 0, 0, 2, 0, 1, 0]' : 0.154128}
{'[0, 1, 5, 4, 2, 0, 1, 0, 29, 4, 0, 8, 0, 0, 2, 0, 1, 0]' : 0.154291}
{'[0, 1, 5, 4, 2, 0, 1, 0, 29, 4, 0, 8, 0, 0, 2, 0, 1, 0]' : 0.153845}
{'[0, 1, 5, 4, 2, 0, 1, 0, 29, 4, 0, 8, 0, 0, 2, 0, 1, 0]' : 0.153874}
{'[0, 1, 5, 4, 2, 0, 1, 0, 29, 4, 0, 8, 0, 0, 2, 0, 1, 0]' : 0.153791}
{'[0, 1, 5, 4, 2, 0, 1, 0, 29, 4, 0, 8, 0, 0, 2, 0, 1, 0]' : 0.153742}
{'[0, 1, 5, 4, 2, 0, 1, 0, 29, 4, 0, 8, 0, 0, 2, 0, 1, 0]' : 0.153903}
{'[0, 1, 5, 4, 2, 0, 1, 0, 29, 4, 0, 8, 0, 0, 2, 0, 1, 0]' : 0.153992}
{'[0, 1, 5, 4, 2, 0, 1, 0, 29, 4, 0, 8, 0, 0, 2, 0, 1, 0]' : 0.154168}
{'[0, 1, 5, 4, 2, 0, 1, 0, 29, 4, 0, 8, 0, 0, 2, 0, 1, 0]' : 0.153743}
{'[0, 1, 5, 4, 2, 0, 1, 0, 29, 4, 0, 8, 0, 0, 2, 0, 1, 0]' : 0.153845}
{'[0, 1, 5, 4, 2, 0, 1, 0, 29, 4, 0, 8, 0, 0, 2, 0, 1, 0]' : 0.154174}
{'[0, 1, 5, 4, 2, 0, 1, 0, 29, 4, 0, 8, 0, 0, 2, 0, 1, 0]' : 0.153852}
{'[0, 1, 5, 4, 2, 0, 1, 0, 29, 4, 0, 8, 0, 0, 2, 0, 1, 0]' : 0.15389}
{'[0, 1, 5, 4, 2, 0, 1, 0, 29, 4, 0, 8, 0, 0, 2, 0, 1, 0]' : 0.154028}
{'[0, 1, 5, 4, 2, 0, 1, 0, 29, 4, 0, 8, 0, 0, 2, 0, 1, 0]' : 0.15432}
{'[0, 1, 5, 4, 2, 0, 1, 0, 29, 4, 0, 8, 0, 0, 2, 0, 1, 0]' : 0.153906}
{'[0, 1, 5, 4, 2, 0, 1, 0, 29, 4, 0, 8, 0, 0, 2, 0, 1, 0]' : 0.153725}
{'[0, 1, 5, 4, 2, 0, 1, 0, 29, 4, 0, 8, 0, 0, 2, 0, 1, 0]' : 0.153911}
{'[0, 1, 5, 4, 2, 0, 1, 0, 29, 4, 0, 8, 0, 0, 2, 0, 1, 0]' : 0.153949}
{'[0, 1, 5, 4, 2, 0, 1, 0, 29, 4, 0, 8, 0, 0, 2, 0, 1, 0]' : 0.154182}
{'[0, 1, 5, 4, 2, 0, 1, 0, 29, 4, 0, 8, 0, 0, 2, 0, 1, 0]' : 0.153977}
{'[0, 1, 5, 4, 2, 0, 1, 0, 29, 4, 0, 8, 0, 0, 2, 0, 1, 0]' : 0.154275}
{'[0, 1, 5, 4, 2, 0, 1, 0, 29, 4, 0, 8, 0, 0, 2, 0, 1, 0]' : 0.153991}
{'[0, 1, 5, 4, 2, 0, 1, 0, 29, 4, 0, 8, 0, 0, 2, 0, 1, 0]' : 0.153659}
{'[0, 1, 5, 4, 2, 0, 1, 0, 29, 4, 0, 8, 0, 0, 2, 0, 1, 0]' : 0.15384}

out:
 ["{'[0, 1, 5, 4, 2, 0, 1, 0, 29, 4, 0, 8, 0, 0, 2, 0, 1, 0]' : 0.18283}", "{'[0, 1, 5, 4, 2, 0, 1, 0, 29, 4, 0, 8, 0, 0, 2, 0, 1, 0]' : 0.18284}", "{'[0, 1, 5, 4, 2, 0, 1, 0, 29, 4, 0, 8, 0, 0, 2, 0, 1, 0]' : 0.180211}", "{'[0, 1, 5, 4, 2, 0, 1, 0, 29, 4, 0, 8, 0, 0, 2, 0, 1, 0]' : 0.154255}", "{'[0, 1, 5, 4, 2, 0, 1, 0, 29, 4, 0, 8, 0, 0, 2, 0, 1, 0]' : 0.154128}", "{'[0, 1, 5, 4, 2, 0, 1, 0, 29, 4, 0, 8, 0, 0, 2, 0, 1, 0]' : 0.154291}", "{'[0, 1, 5, 4, 2, 0, 1, 0, 29, 4, 0, 8, 0, 0, 2, 0, 1, 0]' : 0.153845}", "{'[0, 1, 5, 4, 2, 0, 1, 0, 29, 4, 0, 8, 0, 0, 2, 0, 1, 0]' : 0.153874}", "{'[0, 1, 5, 4, 2, 0, 1, 0, 29, 4, 0, 8, 0, 0, 2, 0, 1, 0]' : 0.153791}", "{'[0, 1, 5, 4, 2, 0, 1, 0, 29, 4, 0, 8, 0, 0, 2, 0, 1, 0]' : 0.153742}", "{'[0, 1, 5, 4, 2, 0, 1, 0, 29, 4, 0, 8, 0, 0, 2, 0, 1, 0]' : 0.153903}", "{'[0, 1, 5, 4, 2, 0, 1, 0, 29, 4, 0, 8, 0, 0, 2, 0, 1, 0]' : 0.153992}", "{'[0, 1, 5, 4, 2, 0, 1, 0, 29, 4, 0, 8, 0, 0, 2, 0, 1, 0]' : 0.154168}", "{'[0, 1, 5, 4, 2, 0, 1, 0, 29, 4, 0, 8, 0, 0, 2, 0, 1, 0]' : 0.153743}", "{'[0, 1, 5, 4, 2, 0, 1, 0, 29, 4, 0, 8, 0, 0, 2, 0, 1, 0]' : 0.153845}", "{'[0, 1, 5, 4, 2, 0, 1, 0, 29, 4, 0, 8, 0, 0, 2, 0, 1, 0]' : 0.154174}", "{'[0, 1, 5, 4, 2, 0, 1, 0, 29, 4, 0, 8, 0, 0, 2, 0, 1, 0]' : 0.153852}", "{'[0, 1, 5, 4, 2, 0, 1, 0, 29, 4, 0, 8, 0, 0, 2, 0, 1, 0]' : 0.15389}", "{'[0, 1, 5, 4, 2, 0, 1, 0, 29, 4, 0, 8, 0, 0, 2, 0, 1, 0]' : 0.154028}", "{'[0, 1, 5, 4, 2, 0, 1, 0, 29, 4, 0, 8, 0, 0, 2, 0, 1, 0]' : 0.15432}", "{'[0, 1, 5, 4, 2, 0, 1, 0, 29, 4, 0, 8, 0, 0, 2, 0, 1, 0]' : 0.153906}", "{'[0, 1, 5, 4, 2, 0, 1, 0, 29, 4, 0, 8, 0, 0, 2, 0, 1, 0]' : 0.153725}", "{'[0, 1, 5, 4, 2, 0, 1, 0, 29, 4, 0, 8, 0, 0, 2, 0, 1, 0]' : 0.153911}", "{'[0, 1, 5, 4, 2, 0, 1, 0, 29, 4, 0, 8, 0, 0, 2, 0, 1, 0]' : 0.153949}", "{'[0, 1, 5, 4, 2, 0, 1, 0, 29, 4, 0, 8, 0, 0, 2, 0, 1, 0]' : 0.154182}", "{'[0, 1, 5, 4, 2, 0, 1, 0, 29, 4, 0, 8, 0, 0, 2, 0, 1, 0]' : 0.153977}", "{'[0, 1, 5, 4, 2, 0, 1, 0, 29, 4, 0, 8, 0, 0, 2, 0, 1, 0]' : 0.154275}", "{'[0, 1, 5, 4, 2, 0, 1, 0, 29, 4, 0, 8, 0, 0, 2, 0, 1, 0]' : 0.153991}", "{'[0, 1, 5, 4, 2, 0, 1, 0, 29, 4, 0, 8, 0, 0, 2, 0, 1, 0]' : 0.153659}", "{'[0, 1, 5, 4, 2, 0, 1, 0, 29, 4, 0, 8, 0, 0, 2, 0, 1, 0]' : 0.15384}"]
returning from 'run': {'[0, 1, 5, 4, 2, 0, 1, 0, 29, 4, 0, 8, 0, 0, 2, 0, 1, 0]': ([0.18283, 0.18284, 0.180211, 0.154255, 0.154128, 0.154291, 0.153845, 0.153874, 0.153791, 0.153742, 0.153903, 0.153992, 0.154168, 0.153743, 0.153845, 0.154174, 0.153852, 0.15389, 0.154028, 0.15432, 0.153906, 0.153725, 0.153911, 0.153949, 0.154182, 0.153977, 0.154275, 0.153991, 0.153659, 0.15384], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 1, 5, 4, 2, 0, 1, 0, 29, 4, 0, 8, 0, 0, 2, 0, 1, 0]': ([0.18283, 0.18284, 0.180211, 0.154255, 0.154128, 0.154291, 0.153845, 0.153874, 0.153791, 0.153742, 0.153903, 0.153992, 0.154168, 0.153743, 0.153845, 0.154174, 0.153852, 0.15389, 0.154028, 0.15432, 0.153906, 0.153725, 0.153911, 0.153949, 0.154182, 0.153977, 0.154275, 0.153991, 0.153659, 0.15384], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	4
        Additions: 		960
        Multiplications: 	408
        Divisions: 		0
        Logical: 		0
        Reads: 			2114
        Writes: 		440
        Comparisons:		22
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest70.exe __orio_perftest70.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest70.exe  
Program Test Output: 
{'[0, 3, 5, 0, 6, 0, 1, 0, 24, 4, 0, 0, 0, 0, 2, 1, 1, 1]' : 0.147915}
{'[0, 3, 5, 0, 6, 0, 1, 0, 24, 4, 0, 0, 0, 0, 2, 1, 1, 1]' : 0.147802}
{'[0, 3, 5, 0, 6, 0, 1, 0, 24, 4, 0, 0, 0, 0, 2, 1, 1, 1]' : 0.147796}
{'[0, 3, 5, 0, 6, 0, 1, 0, 24, 4, 0, 0, 0, 0, 2, 1, 1, 1]' : 0.132335}
{'[0, 3, 5, 0, 6, 0, 1, 0, 24, 4, 0, 0, 0, 0, 2, 1, 1, 1]' : 0.124466}
{'[0, 3, 5, 0, 6, 0, 1, 0, 24, 4, 0, 0, 0, 0, 2, 1, 1, 1]' : 0.12454}
{'[0, 3, 5, 0, 6, 0, 1, 0, 24, 4, 0, 0, 0, 0, 2, 1, 1, 1]' : 0.124416}
{'[0, 3, 5, 0, 6, 0, 1, 0, 24, 4, 0, 0, 0, 0, 2, 1, 1, 1]' : 0.124669}
{'[0, 3, 5, 0, 6, 0, 1, 0, 24, 4, 0, 0, 0, 0, 2, 1, 1, 1]' : 0.124519}
{'[0, 3, 5, 0, 6, 0, 1, 0, 24, 4, 0, 0, 0, 0, 2, 1, 1, 1]' : 0.124428}
{'[0, 3, 5, 0, 6, 0, 1, 0, 24, 4, 0, 0, 0, 0, 2, 1, 1, 1]' : 0.124824}
{'[0, 3, 5, 0, 6, 0, 1, 0, 24, 4, 0, 0, 0, 0, 2, 1, 1, 1]' : 0.124655}
{'[0, 3, 5, 0, 6, 0, 1, 0, 24, 4, 0, 0, 0, 0, 2, 1, 1, 1]' : 0.124554}
{'[0, 3, 5, 0, 6, 0, 1, 0, 24, 4, 0, 0, 0, 0, 2, 1, 1, 1]' : 0.124784}
{'[0, 3, 5, 0, 6, 0, 1, 0, 24, 4, 0, 0, 0, 0, 2, 1, 1, 1]' : 0.124447}
{'[0, 3, 5, 0, 6, 0, 1, 0, 24, 4, 0, 0, 0, 0, 2, 1, 1, 1]' : 0.124613}
{'[0, 3, 5, 0, 6, 0, 1, 0, 24, 4, 0, 0, 0, 0, 2, 1, 1, 1]' : 0.125227}
{'[0, 3, 5, 0, 6, 0, 1, 0, 24, 4, 0, 0, 0, 0, 2, 1, 1, 1]' : 0.124593}
{'[0, 3, 5, 0, 6, 0, 1, 0, 24, 4, 0, 0, 0, 0, 2, 1, 1, 1]' : 0.124463}
{'[0, 3, 5, 0, 6, 0, 1, 0, 24, 4, 0, 0, 0, 0, 2, 1, 1, 1]' : 0.124838}
{'[0, 3, 5, 0, 6, 0, 1, 0, 24, 4, 0, 0, 0, 0, 2, 1, 1, 1]' : 0.124656}
{'[0, 3, 5, 0, 6, 0, 1, 0, 24, 4, 0, 0, 0, 0, 2, 1, 1, 1]' : 0.124475}
{'[0, 3, 5, 0, 6, 0, 1, 0, 24, 4, 0, 0, 0, 0, 2, 1, 1, 1]' : 0.124601}
{'[0, 3, 5, 0, 6, 0, 1, 0, 24, 4, 0, 0, 0, 0, 2, 1, 1, 1]' : 0.124569}
{'[0, 3, 5, 0, 6, 0, 1, 0, 24, 4, 0, 0, 0, 0, 2, 1, 1, 1]' : 0.124457}
{'[0, 3, 5, 0, 6, 0, 1, 0, 24, 4, 0, 0, 0, 0, 2, 1, 1, 1]' : 0.124782}
{'[0, 3, 5, 0, 6, 0, 1, 0, 24, 4, 0, 0, 0, 0, 2, 1, 1, 1]' : 0.124402}
{'[0, 3, 5, 0, 6, 0, 1, 0, 24, 4, 0, 0, 0, 0, 2, 1, 1, 1]' : 0.124446}
{'[0, 3, 5, 0, 6, 0, 1, 0, 24, 4, 0, 0, 0, 0, 2, 1, 1, 1]' : 0.12503}
{'[0, 3, 5, 0, 6, 0, 1, 0, 24, 4, 0, 0, 0, 0, 2, 1, 1, 1]' : 0.124552}

out:
 ["{'[0, 3, 5, 0, 6, 0, 1, 0, 24, 4, 0, 0, 0, 0, 2, 1, 1, 1]' : 0.147915}", "{'[0, 3, 5, 0, 6, 0, 1, 0, 24, 4, 0, 0, 0, 0, 2, 1, 1, 1]' : 0.147802}", "{'[0, 3, 5, 0, 6, 0, 1, 0, 24, 4, 0, 0, 0, 0, 2, 1, 1, 1]' : 0.147796}", "{'[0, 3, 5, 0, 6, 0, 1, 0, 24, 4, 0, 0, 0, 0, 2, 1, 1, 1]' : 0.132335}", "{'[0, 3, 5, 0, 6, 0, 1, 0, 24, 4, 0, 0, 0, 0, 2, 1, 1, 1]' : 0.124466}", "{'[0, 3, 5, 0, 6, 0, 1, 0, 24, 4, 0, 0, 0, 0, 2, 1, 1, 1]' : 0.12454}", "{'[0, 3, 5, 0, 6, 0, 1, 0, 24, 4, 0, 0, 0, 0, 2, 1, 1, 1]' : 0.124416}", "{'[0, 3, 5, 0, 6, 0, 1, 0, 24, 4, 0, 0, 0, 0, 2, 1, 1, 1]' : 0.124669}", "{'[0, 3, 5, 0, 6, 0, 1, 0, 24, 4, 0, 0, 0, 0, 2, 1, 1, 1]' : 0.124519}", "{'[0, 3, 5, 0, 6, 0, 1, 0, 24, 4, 0, 0, 0, 0, 2, 1, 1, 1]' : 0.124428}", "{'[0, 3, 5, 0, 6, 0, 1, 0, 24, 4, 0, 0, 0, 0, 2, 1, 1, 1]' : 0.124824}", "{'[0, 3, 5, 0, 6, 0, 1, 0, 24, 4, 0, 0, 0, 0, 2, 1, 1, 1]' : 0.124655}", "{'[0, 3, 5, 0, 6, 0, 1, 0, 24, 4, 0, 0, 0, 0, 2, 1, 1, 1]' : 0.124554}", "{'[0, 3, 5, 0, 6, 0, 1, 0, 24, 4, 0, 0, 0, 0, 2, 1, 1, 1]' : 0.124784}", "{'[0, 3, 5, 0, 6, 0, 1, 0, 24, 4, 0, 0, 0, 0, 2, 1, 1, 1]' : 0.124447}", "{'[0, 3, 5, 0, 6, 0, 1, 0, 24, 4, 0, 0, 0, 0, 2, 1, 1, 1]' : 0.124613}", "{'[0, 3, 5, 0, 6, 0, 1, 0, 24, 4, 0, 0, 0, 0, 2, 1, 1, 1]' : 0.125227}", "{'[0, 3, 5, 0, 6, 0, 1, 0, 24, 4, 0, 0, 0, 0, 2, 1, 1, 1]' : 0.124593}", "{'[0, 3, 5, 0, 6, 0, 1, 0, 24, 4, 0, 0, 0, 0, 2, 1, 1, 1]' : 0.124463}", "{'[0, 3, 5, 0, 6, 0, 1, 0, 24, 4, 0, 0, 0, 0, 2, 1, 1, 1]' : 0.124838}", "{'[0, 3, 5, 0, 6, 0, 1, 0, 24, 4, 0, 0, 0, 0, 2, 1, 1, 1]' : 0.124656}", "{'[0, 3, 5, 0, 6, 0, 1, 0, 24, 4, 0, 0, 0, 0, 2, 1, 1, 1]' : 0.124475}", "{'[0, 3, 5, 0, 6, 0, 1, 0, 24, 4, 0, 0, 0, 0, 2, 1, 1, 1]' : 0.124601}", "{'[0, 3, 5, 0, 6, 0, 1, 0, 24, 4, 0, 0, 0, 0, 2, 1, 1, 1]' : 0.124569}", "{'[0, 3, 5, 0, 6, 0, 1, 0, 24, 4, 0, 0, 0, 0, 2, 1, 1, 1]' : 0.124457}", "{'[0, 3, 5, 0, 6, 0, 1, 0, 24, 4, 0, 0, 0, 0, 2, 1, 1, 1]' : 0.124782}", "{'[0, 3, 5, 0, 6, 0, 1, 0, 24, 4, 0, 0, 0, 0, 2, 1, 1, 1]' : 0.124402}", "{'[0, 3, 5, 0, 6, 0, 1, 0, 24, 4, 0, 0, 0, 0, 2, 1, 1, 1]' : 0.124446}", "{'[0, 3, 5, 0, 6, 0, 1, 0, 24, 4, 0, 0, 0, 0, 2, 1, 1, 1]' : 0.12503}", "{'[0, 3, 5, 0, 6, 0, 1, 0, 24, 4, 0, 0, 0, 0, 2, 1, 1, 1]' : 0.124552}"]
returning from 'run': {'[0, 3, 5, 0, 6, 0, 1, 0, 24, 4, 0, 0, 0, 0, 2, 1, 1, 1]': ([0.147915, 0.147802, 0.147796, 0.132335, 0.124466, 0.12454, 0.124416, 0.124669, 0.124519, 0.124428, 0.124824, 0.124655, 0.124554, 0.124784, 0.124447, 0.124613, 0.125227, 0.124593, 0.124463, 0.124838, 0.124656, 0.124475, 0.124601, 0.124569, 0.124457, 0.124782, 0.124402, 0.124446, 0.12503, 0.124552], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 3, 5, 0, 6, 0, 1, 0, 24, 4, 0, 0, 0, 0, 2, 1, 1, 1]': ([0.147915, 0.147802, 0.147796, 0.132335, 0.124466, 0.12454, 0.124416, 0.124669, 0.124519, 0.124428, 0.124824, 0.124655, 0.124554, 0.124784, 0.124447, 0.124613, 0.125227, 0.124593, 0.124463, 0.124838, 0.124656, 0.124475, 0.124601, 0.124569, 0.124457, 0.124782, 0.124402, 0.124446, 0.12503, 0.124552], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	17
        Max loop nest depth: 	4
        Additions: 		1379
        Multiplications: 	648
        Divisions: 		0
        Logical: 		0
        Reads: 			2813
        Writes: 		495
        Comparisons:		17
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest71.exe __orio_perftest71.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest71.exe  
Program Test Output: 
{'[0, 3, 5, 0, 1, 6, 0, 0, 0, 4, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.119715}
{'[0, 3, 5, 0, 1, 6, 0, 0, 0, 4, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.11973}
{'[0, 3, 5, 0, 1, 6, 0, 0, 0, 4, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.110822}
{'[0, 3, 5, 0, 1, 6, 0, 0, 0, 4, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.107193}
{'[0, 3, 5, 0, 1, 6, 0, 0, 0, 4, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.107244}
{'[0, 3, 5, 0, 1, 6, 0, 0, 0, 4, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.107585}
{'[0, 3, 5, 0, 1, 6, 0, 0, 0, 4, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.104441}
{'[0, 3, 5, 0, 1, 6, 0, 0, 0, 4, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.107515}
{'[0, 3, 5, 0, 1, 6, 0, 0, 0, 4, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.107747}
{'[0, 3, 5, 0, 1, 6, 0, 0, 0, 4, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.107016}
{'[0, 3, 5, 0, 1, 6, 0, 0, 0, 4, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.104465}
{'[0, 3, 5, 0, 1, 6, 0, 0, 0, 4, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.10472}
{'[0, 3, 5, 0, 1, 6, 0, 0, 0, 4, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.107128}
{'[0, 3, 5, 0, 1, 6, 0, 0, 0, 4, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.1078}
{'[0, 3, 5, 0, 1, 6, 0, 0, 0, 4, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.10782}
{'[0, 3, 5, 0, 1, 6, 0, 0, 0, 4, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.107801}
{'[0, 3, 5, 0, 1, 6, 0, 0, 0, 4, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.107341}
{'[0, 3, 5, 0, 1, 6, 0, 0, 0, 4, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.10454}
{'[0, 3, 5, 0, 1, 6, 0, 0, 0, 4, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.10447}
{'[0, 3, 5, 0, 1, 6, 0, 0, 0, 4, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.104487}
{'[0, 3, 5, 0, 1, 6, 0, 0, 0, 4, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.104475}
{'[0, 3, 5, 0, 1, 6, 0, 0, 0, 4, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.105716}
{'[0, 3, 5, 0, 1, 6, 0, 0, 0, 4, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.107759}
{'[0, 3, 5, 0, 1, 6, 0, 0, 0, 4, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.107774}
{'[0, 3, 5, 0, 1, 6, 0, 0, 0, 4, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.104079}
{'[0, 3, 5, 0, 1, 6, 0, 0, 0, 4, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.101719}
{'[0, 3, 5, 0, 1, 6, 0, 0, 0, 4, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.103722}
{'[0, 3, 5, 0, 1, 6, 0, 0, 0, 4, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.104527}
{'[0, 3, 5, 0, 1, 6, 0, 0, 0, 4, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.104451}
{'[0, 3, 5, 0, 1, 6, 0, 0, 0, 4, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.104552}

out:
 ["{'[0, 3, 5, 0, 1, 6, 0, 0, 0, 4, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.119715}", "{'[0, 3, 5, 0, 1, 6, 0, 0, 0, 4, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.11973}", "{'[0, 3, 5, 0, 1, 6, 0, 0, 0, 4, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.110822}", "{'[0, 3, 5, 0, 1, 6, 0, 0, 0, 4, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.107193}", "{'[0, 3, 5, 0, 1, 6, 0, 0, 0, 4, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.107244}", "{'[0, 3, 5, 0, 1, 6, 0, 0, 0, 4, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.107585}", "{'[0, 3, 5, 0, 1, 6, 0, 0, 0, 4, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.104441}", "{'[0, 3, 5, 0, 1, 6, 0, 0, 0, 4, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.107515}", "{'[0, 3, 5, 0, 1, 6, 0, 0, 0, 4, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.107747}", "{'[0, 3, 5, 0, 1, 6, 0, 0, 0, 4, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.107016}", "{'[0, 3, 5, 0, 1, 6, 0, 0, 0, 4, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.104465}", "{'[0, 3, 5, 0, 1, 6, 0, 0, 0, 4, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.10472}", "{'[0, 3, 5, 0, 1, 6, 0, 0, 0, 4, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.107128}", "{'[0, 3, 5, 0, 1, 6, 0, 0, 0, 4, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.1078}", "{'[0, 3, 5, 0, 1, 6, 0, 0, 0, 4, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.10782}", "{'[0, 3, 5, 0, 1, 6, 0, 0, 0, 4, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.107801}", "{'[0, 3, 5, 0, 1, 6, 0, 0, 0, 4, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.107341}", "{'[0, 3, 5, 0, 1, 6, 0, 0, 0, 4, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.10454}", "{'[0, 3, 5, 0, 1, 6, 0, 0, 0, 4, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.10447}", "{'[0, 3, 5, 0, 1, 6, 0, 0, 0, 4, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.104487}", "{'[0, 3, 5, 0, 1, 6, 0, 0, 0, 4, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.104475}", "{'[0, 3, 5, 0, 1, 6, 0, 0, 0, 4, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.105716}", "{'[0, 3, 5, 0, 1, 6, 0, 0, 0, 4, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.107759}", "{'[0, 3, 5, 0, 1, 6, 0, 0, 0, 4, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.107774}", "{'[0, 3, 5, 0, 1, 6, 0, 0, 0, 4, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.104079}", "{'[0, 3, 5, 0, 1, 6, 0, 0, 0, 4, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.101719}", "{'[0, 3, 5, 0, 1, 6, 0, 0, 0, 4, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.103722}", "{'[0, 3, 5, 0, 1, 6, 0, 0, 0, 4, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.104527}", "{'[0, 3, 5, 0, 1, 6, 0, 0, 0, 4, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.104451}", "{'[0, 3, 5, 0, 1, 6, 0, 0, 0, 4, 0, 19, 0, 2, 0, 1, 1, 0]' : 0.104552}"]
returning from 'run': {'[0, 3, 5, 0, 1, 6, 0, 0, 0, 4, 0, 19, 0, 2, 0, 1, 1, 0]': ([0.119715, 0.11973, 0.110822, 0.107193, 0.107244, 0.107585, 0.104441, 0.107515, 0.107747, 0.107016, 0.104465, 0.10472, 0.107128, 0.1078, 0.10782, 0.107801, 0.107341, 0.10454, 0.10447, 0.104487, 0.104475, 0.105716, 0.107759, 0.107774, 0.104079, 0.101719, 0.103722, 0.104527, 0.104451, 0.104552], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 3, 5, 0, 1, 6, 0, 0, 0, 4, 0, 19, 0, 2, 0, 1, 1, 0]': ([0.119715, 0.11973, 0.110822, 0.107193, 0.107244, 0.107585, 0.104441, 0.107515, 0.107747, 0.107016, 0.104465, 0.10472, 0.107128, 0.1078, 0.10782, 0.107801, 0.107341, 0.10454, 0.10447, 0.104487, 0.104475, 0.105716, 0.107759, 0.107774, 0.104079, 0.101719, 0.103722, 0.104527, 0.104451, 0.104552], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	4
        Additions: 		392
        Multiplications: 	156
        Divisions: 		0
        Logical: 		0
        Reads: 			882
        Writes: 		199
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest72.exe __orio_perftest72.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest72.exe  
Program Test Output: 
{'[0, 0, 5, 0, 0, 6, 1, 0, 16, 4, 0, 10, 0, 0, 0, 1, 0, 1]' : 0.106928}
{'[0, 0, 5, 0, 0, 6, 1, 0, 16, 4, 0, 10, 0, 0, 0, 1, 0, 1]' : 0.107953}
{'[0, 0, 5, 0, 0, 6, 1, 0, 16, 4, 0, 10, 0, 0, 0, 1, 0, 1]' : 0.108203}
{'[0, 0, 5, 0, 0, 6, 1, 0, 16, 4, 0, 10, 0, 0, 0, 1, 0, 1]' : 0.107999}
{'[0, 0, 5, 0, 0, 6, 1, 0, 16, 4, 0, 10, 0, 0, 0, 1, 0, 1]' : 0.107932}
{'[0, 0, 5, 0, 0, 6, 1, 0, 16, 4, 0, 10, 0, 0, 0, 1, 0, 1]' : 0.101905}
{'[0, 0, 5, 0, 0, 6, 1, 0, 16, 4, 0, 10, 0, 0, 0, 1, 0, 1]' : 0.093622}
{'[0, 0, 5, 0, 0, 6, 1, 0, 16, 4, 0, 10, 0, 0, 0, 1, 0, 1]' : 0.0940661}
{'[0, 0, 5, 0, 0, 6, 1, 0, 16, 4, 0, 10, 0, 0, 0, 1, 0, 1]' : 0.093714}
{'[0, 0, 5, 0, 0, 6, 1, 0, 16, 4, 0, 10, 0, 0, 0, 1, 0, 1]' : 0.093868}
{'[0, 0, 5, 0, 0, 6, 1, 0, 16, 4, 0, 10, 0, 0, 0, 1, 0, 1]' : 0.0937052}
{'[0, 0, 5, 0, 0, 6, 1, 0, 16, 4, 0, 10, 0, 0, 0, 1, 0, 1]' : 0.093559}
{'[0, 0, 5, 0, 0, 6, 1, 0, 16, 4, 0, 10, 0, 0, 0, 1, 0, 1]' : 0.0936999}
{'[0, 0, 5, 0, 0, 6, 1, 0, 16, 4, 0, 10, 0, 0, 0, 1, 0, 1]' : 0.0936189}
{'[0, 0, 5, 0, 0, 6, 1, 0, 16, 4, 0, 10, 0, 0, 0, 1, 0, 1]' : 0.0935709}
{'[0, 0, 5, 0, 0, 6, 1, 0, 16, 4, 0, 10, 0, 0, 0, 1, 0, 1]' : 0.0935218}
{'[0, 0, 5, 0, 0, 6, 1, 0, 16, 4, 0, 10, 0, 0, 0, 1, 0, 1]' : 0.0935922}
{'[0, 0, 5, 0, 0, 6, 1, 0, 16, 4, 0, 10, 0, 0, 0, 1, 0, 1]' : 0.0938749}
{'[0, 0, 5, 0, 0, 6, 1, 0, 16, 4, 0, 10, 0, 0, 0, 1, 0, 1]' : 0.0937161}
{'[0, 0, 5, 0, 0, 6, 1, 0, 16, 4, 0, 10, 0, 0, 0, 1, 0, 1]' : 0.0936069}
{'[0, 0, 5, 0, 0, 6, 1, 0, 16, 4, 0, 10, 0, 0, 0, 1, 0, 1]' : 0.0934992}
{'[0, 0, 5, 0, 0, 6, 1, 0, 16, 4, 0, 10, 0, 0, 0, 1, 0, 1]' : 0.0938759}
{'[0, 0, 5, 0, 0, 6, 1, 0, 16, 4, 0, 10, 0, 0, 0, 1, 0, 1]' : 0.093962}
{'[0, 0, 5, 0, 0, 6, 1, 0, 16, 4, 0, 10, 0, 0, 0, 1, 0, 1]' : 0.0935421}
{'[0, 0, 5, 0, 0, 6, 1, 0, 16, 4, 0, 10, 0, 0, 0, 1, 0, 1]' : 0.093991}
{'[0, 0, 5, 0, 0, 6, 1, 0, 16, 4, 0, 10, 0, 0, 0, 1, 0, 1]' : 0.093591}
{'[0, 0, 5, 0, 0, 6, 1, 0, 16, 4, 0, 10, 0, 0, 0, 1, 0, 1]' : 0.0935621}
{'[0, 0, 5, 0, 0, 6, 1, 0, 16, 4, 0, 10, 0, 0, 0, 1, 0, 1]' : 0.093565}
{'[0, 0, 5, 0, 0, 6, 1, 0, 16, 4, 0, 10, 0, 0, 0, 1, 0, 1]' : 0.0937049}
{'[0, 0, 5, 0, 0, 6, 1, 0, 16, 4, 0, 10, 0, 0, 0, 1, 0, 1]' : 0.0935948}

out:
 ["{'[0, 0, 5, 0, 0, 6, 1, 0, 16, 4, 0, 10, 0, 0, 0, 1, 0, 1]' : 0.106928}", "{'[0, 0, 5, 0, 0, 6, 1, 0, 16, 4, 0, 10, 0, 0, 0, 1, 0, 1]' : 0.107953}", "{'[0, 0, 5, 0, 0, 6, 1, 0, 16, 4, 0, 10, 0, 0, 0, 1, 0, 1]' : 0.108203}", "{'[0, 0, 5, 0, 0, 6, 1, 0, 16, 4, 0, 10, 0, 0, 0, 1, 0, 1]' : 0.107999}", "{'[0, 0, 5, 0, 0, 6, 1, 0, 16, 4, 0, 10, 0, 0, 0, 1, 0, 1]' : 0.107932}", "{'[0, 0, 5, 0, 0, 6, 1, 0, 16, 4, 0, 10, 0, 0, 0, 1, 0, 1]' : 0.101905}", "{'[0, 0, 5, 0, 0, 6, 1, 0, 16, 4, 0, 10, 0, 0, 0, 1, 0, 1]' : 0.093622}", "{'[0, 0, 5, 0, 0, 6, 1, 0, 16, 4, 0, 10, 0, 0, 0, 1, 0, 1]' : 0.0940661}", "{'[0, 0, 5, 0, 0, 6, 1, 0, 16, 4, 0, 10, 0, 0, 0, 1, 0, 1]' : 0.093714}", "{'[0, 0, 5, 0, 0, 6, 1, 0, 16, 4, 0, 10, 0, 0, 0, 1, 0, 1]' : 0.093868}", "{'[0, 0, 5, 0, 0, 6, 1, 0, 16, 4, 0, 10, 0, 0, 0, 1, 0, 1]' : 0.0937052}", "{'[0, 0, 5, 0, 0, 6, 1, 0, 16, 4, 0, 10, 0, 0, 0, 1, 0, 1]' : 0.093559}", "{'[0, 0, 5, 0, 0, 6, 1, 0, 16, 4, 0, 10, 0, 0, 0, 1, 0, 1]' : 0.0936999}", "{'[0, 0, 5, 0, 0, 6, 1, 0, 16, 4, 0, 10, 0, 0, 0, 1, 0, 1]' : 0.0936189}", "{'[0, 0, 5, 0, 0, 6, 1, 0, 16, 4, 0, 10, 0, 0, 0, 1, 0, 1]' : 0.0935709}", "{'[0, 0, 5, 0, 0, 6, 1, 0, 16, 4, 0, 10, 0, 0, 0, 1, 0, 1]' : 0.0935218}", "{'[0, 0, 5, 0, 0, 6, 1, 0, 16, 4, 0, 10, 0, 0, 0, 1, 0, 1]' : 0.0935922}", "{'[0, 0, 5, 0, 0, 6, 1, 0, 16, 4, 0, 10, 0, 0, 0, 1, 0, 1]' : 0.0938749}", "{'[0, 0, 5, 0, 0, 6, 1, 0, 16, 4, 0, 10, 0, 0, 0, 1, 0, 1]' : 0.0937161}", "{'[0, 0, 5, 0, 0, 6, 1, 0, 16, 4, 0, 10, 0, 0, 0, 1, 0, 1]' : 0.0936069}", "{'[0, 0, 5, 0, 0, 6, 1, 0, 16, 4, 0, 10, 0, 0, 0, 1, 0, 1]' : 0.0934992}", "{'[0, 0, 5, 0, 0, 6, 1, 0, 16, 4, 0, 10, 0, 0, 0, 1, 0, 1]' : 0.0938759}", "{'[0, 0, 5, 0, 0, 6, 1, 0, 16, 4, 0, 10, 0, 0, 0, 1, 0, 1]' : 0.093962}", "{'[0, 0, 5, 0, 0, 6, 1, 0, 16, 4, 0, 10, 0, 0, 0, 1, 0, 1]' : 0.0935421}", "{'[0, 0, 5, 0, 0, 6, 1, 0, 16, 4, 0, 10, 0, 0, 0, 1, 0, 1]' : 0.093991}", "{'[0, 0, 5, 0, 0, 6, 1, 0, 16, 4, 0, 10, 0, 0, 0, 1, 0, 1]' : 0.093591}", "{'[0, 0, 5, 0, 0, 6, 1, 0, 16, 4, 0, 10, 0, 0, 0, 1, 0, 1]' : 0.0935621}", "{'[0, 0, 5, 0, 0, 6, 1, 0, 16, 4, 0, 10, 0, 0, 0, 1, 0, 1]' : 0.093565}", "{'[0, 0, 5, 0, 0, 6, 1, 0, 16, 4, 0, 10, 0, 0, 0, 1, 0, 1]' : 0.0937049}", "{'[0, 0, 5, 0, 0, 6, 1, 0, 16, 4, 0, 10, 0, 0, 0, 1, 0, 1]' : 0.0935948}"]
returning from 'run': {'[0, 0, 5, 0, 0, 6, 1, 0, 16, 4, 0, 10, 0, 0, 0, 1, 0, 1]': ([0.106928, 0.107953, 0.108203, 0.107999, 0.107932, 0.101905, 0.093622, 0.0940661, 0.093714, 0.093868, 0.0937052, 0.093559, 0.0936999, 0.0936189, 0.0935709, 0.0935218, 0.0935922, 0.0938749, 0.0937161, 0.0936069, 0.0934992, 0.0938759, 0.093962, 0.0935421, 0.093991, 0.093591, 0.0935621, 0.093565, 0.0937049, 0.0935948], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 5, 0, 0, 6, 1, 0, 16, 4, 0, 10, 0, 0, 0, 1, 0, 1]': ([0.106928, 0.107953, 0.108203, 0.107999, 0.107932, 0.101905, 0.093622, 0.0940661, 0.093714, 0.093868, 0.0937052, 0.093559, 0.0936999, 0.0936189, 0.0935709, 0.0935218, 0.0935922, 0.0938749, 0.0937161, 0.0936069, 0.0934992, 0.0938759, 0.093962, 0.0935421, 0.093991, 0.093591, 0.0935621, 0.093565, 0.0937049, 0.0935948], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	23
        Max loop nest depth: 	5
        Additions: 		1352
        Multiplications: 	408
        Divisions: 		0
        Logical: 		0
        Reads: 			2279
        Writes: 		281
        Comparisons:		23
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest73.exe __orio_perftest73.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest73.exe  
Program Test Output: 
{'[0, 4, 5, 6, 0, 6, 1, 0, 17, 4, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.167031}
{'[0, 4, 5, 6, 0, 6, 1, 0, 17, 4, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.167377}
{'[0, 4, 5, 6, 0, 6, 1, 0, 17, 4, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.166747}
{'[0, 4, 5, 6, 0, 6, 1, 0, 17, 4, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.143888}
{'[0, 4, 5, 6, 0, 6, 1, 0, 17, 4, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.141263}
{'[0, 4, 5, 6, 0, 6, 1, 0, 17, 4, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.141383}
{'[0, 4, 5, 6, 0, 6, 1, 0, 17, 4, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.14164}
{'[0, 4, 5, 6, 0, 6, 1, 0, 17, 4, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.141721}
{'[0, 4, 5, 6, 0, 6, 1, 0, 17, 4, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.141647}
{'[0, 4, 5, 6, 0, 6, 1, 0, 17, 4, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.141435}
{'[0, 4, 5, 6, 0, 6, 1, 0, 17, 4, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.141505}
{'[0, 4, 5, 6, 0, 6, 1, 0, 17, 4, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.141537}
{'[0, 4, 5, 6, 0, 6, 1, 0, 17, 4, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.141759}
{'[0, 4, 5, 6, 0, 6, 1, 0, 17, 4, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.141424}
{'[0, 4, 5, 6, 0, 6, 1, 0, 17, 4, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.141796}
{'[0, 4, 5, 6, 0, 6, 1, 0, 17, 4, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.141736}
{'[0, 4, 5, 6, 0, 6, 1, 0, 17, 4, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.141454}
{'[0, 4, 5, 6, 0, 6, 1, 0, 17, 4, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.141468}
{'[0, 4, 5, 6, 0, 6, 1, 0, 17, 4, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.141744}
{'[0, 4, 5, 6, 0, 6, 1, 0, 17, 4, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.141752}
{'[0, 4, 5, 6, 0, 6, 1, 0, 17, 4, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.141467}
{'[0, 4, 5, 6, 0, 6, 1, 0, 17, 4, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.141485}
{'[0, 4, 5, 6, 0, 6, 1, 0, 17, 4, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.141783}
{'[0, 4, 5, 6, 0, 6, 1, 0, 17, 4, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.141727}
{'[0, 4, 5, 6, 0, 6, 1, 0, 17, 4, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.141545}
{'[0, 4, 5, 6, 0, 6, 1, 0, 17, 4, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.141663}
{'[0, 4, 5, 6, 0, 6, 1, 0, 17, 4, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.141592}
{'[0, 4, 5, 6, 0, 6, 1, 0, 17, 4, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.141532}
{'[0, 4, 5, 6, 0, 6, 1, 0, 17, 4, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.141418}
{'[0, 4, 5, 6, 0, 6, 1, 0, 17, 4, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.142075}

out:
 ["{'[0, 4, 5, 6, 0, 6, 1, 0, 17, 4, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.167031}", "{'[0, 4, 5, 6, 0, 6, 1, 0, 17, 4, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.167377}", "{'[0, 4, 5, 6, 0, 6, 1, 0, 17, 4, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.166747}", "{'[0, 4, 5, 6, 0, 6, 1, 0, 17, 4, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.143888}", "{'[0, 4, 5, 6, 0, 6, 1, 0, 17, 4, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.141263}", "{'[0, 4, 5, 6, 0, 6, 1, 0, 17, 4, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.141383}", "{'[0, 4, 5, 6, 0, 6, 1, 0, 17, 4, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.14164}", "{'[0, 4, 5, 6, 0, 6, 1, 0, 17, 4, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.141721}", "{'[0, 4, 5, 6, 0, 6, 1, 0, 17, 4, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.141647}", "{'[0, 4, 5, 6, 0, 6, 1, 0, 17, 4, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.141435}", "{'[0, 4, 5, 6, 0, 6, 1, 0, 17, 4, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.141505}", "{'[0, 4, 5, 6, 0, 6, 1, 0, 17, 4, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.141537}", "{'[0, 4, 5, 6, 0, 6, 1, 0, 17, 4, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.141759}", "{'[0, 4, 5, 6, 0, 6, 1, 0, 17, 4, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.141424}", "{'[0, 4, 5, 6, 0, 6, 1, 0, 17, 4, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.141796}", "{'[0, 4, 5, 6, 0, 6, 1, 0, 17, 4, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.141736}", "{'[0, 4, 5, 6, 0, 6, 1, 0, 17, 4, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.141454}", "{'[0, 4, 5, 6, 0, 6, 1, 0, 17, 4, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.141468}", "{'[0, 4, 5, 6, 0, 6, 1, 0, 17, 4, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.141744}", "{'[0, 4, 5, 6, 0, 6, 1, 0, 17, 4, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.141752}", "{'[0, 4, 5, 6, 0, 6, 1, 0, 17, 4, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.141467}", "{'[0, 4, 5, 6, 0, 6, 1, 0, 17, 4, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.141485}", "{'[0, 4, 5, 6, 0, 6, 1, 0, 17, 4, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.141783}", "{'[0, 4, 5, 6, 0, 6, 1, 0, 17, 4, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.141727}", "{'[0, 4, 5, 6, 0, 6, 1, 0, 17, 4, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.141545}", "{'[0, 4, 5, 6, 0, 6, 1, 0, 17, 4, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.141663}", "{'[0, 4, 5, 6, 0, 6, 1, 0, 17, 4, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.141592}", "{'[0, 4, 5, 6, 0, 6, 1, 0, 17, 4, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.141532}", "{'[0, 4, 5, 6, 0, 6, 1, 0, 17, 4, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.141418}", "{'[0, 4, 5, 6, 0, 6, 1, 0, 17, 4, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.142075}"]
returning from 'run': {'[0, 4, 5, 6, 0, 6, 1, 0, 17, 4, 0, 0, 0, 0, 2, 0, 0, 0]': ([0.167031, 0.167377, 0.166747, 0.143888, 0.141263, 0.141383, 0.14164, 0.141721, 0.141647, 0.141435, 0.141505, 0.141537, 0.141759, 0.141424, 0.141796, 0.141736, 0.141454, 0.141468, 0.141744, 0.141752, 0.141467, 0.141485, 0.141783, 0.141727, 0.141545, 0.141663, 0.141592, 0.141532, 0.141418, 0.142075], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 4, 5, 6, 0, 6, 1, 0, 17, 4, 0, 0, 0, 0, 2, 0, 0, 0]': ([0.167031, 0.167377, 0.166747, 0.143888, 0.141263, 0.141383, 0.14164, 0.141721, 0.141647, 0.141435, 0.141505, 0.141537, 0.141759, 0.141424, 0.141796, 0.141736, 0.141454, 0.141468, 0.141744, 0.141752, 0.141467, 0.141485, 0.141783, 0.141727, 0.141545, 0.141663, 0.141592, 0.141532, 0.141418, 0.142075], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	4
        Additions: 		1059
        Multiplications: 	324
        Divisions: 		0
        Logical: 		0
        Reads: 			1778
        Writes: 		216
        Comparisons:		18
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest74.exe __orio_perftest74.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest74.exe  
Program Test Output: 
{'[0, 2, 5, 0, 6, 6, 0, 0, 7, 4, 0, 24, 0, 0, 0, 0, 1, 0]' : 0.155394}
{'[0, 2, 5, 0, 6, 6, 0, 0, 7, 4, 0, 24, 0, 0, 0, 0, 1, 0]' : 0.155038}
{'[0, 2, 5, 0, 6, 6, 0, 0, 7, 4, 0, 24, 0, 0, 0, 0, 1, 0]' : 0.147955}
{'[0, 2, 5, 0, 6, 6, 0, 0, 7, 4, 0, 24, 0, 0, 0, 0, 1, 0]' : 0.129832}
{'[0, 2, 5, 0, 6, 6, 0, 0, 7, 4, 0, 24, 0, 0, 0, 0, 1, 0]' : 0.129907}
{'[0, 2, 5, 0, 6, 6, 0, 0, 7, 4, 0, 24, 0, 0, 0, 0, 1, 0]' : 0.129899}
{'[0, 2, 5, 0, 6, 6, 0, 0, 7, 4, 0, 24, 0, 0, 0, 0, 1, 0]' : 0.129896}
{'[0, 2, 5, 0, 6, 6, 0, 0, 7, 4, 0, 24, 0, 0, 0, 0, 1, 0]' : 0.129961}
{'[0, 2, 5, 0, 6, 6, 0, 0, 7, 4, 0, 24, 0, 0, 0, 0, 1, 0]' : 0.130168}
{'[0, 2, 5, 0, 6, 6, 0, 0, 7, 4, 0, 24, 0, 0, 0, 0, 1, 0]' : 0.129888}
{'[0, 2, 5, 0, 6, 6, 0, 0, 7, 4, 0, 24, 0, 0, 0, 0, 1, 0]' : 0.130231}
{'[0, 2, 5, 0, 6, 6, 0, 0, 7, 4, 0, 24, 0, 0, 0, 0, 1, 0]' : 0.129738}
{'[0, 2, 5, 0, 6, 6, 0, 0, 7, 4, 0, 24, 0, 0, 0, 0, 1, 0]' : 0.12974}
{'[0, 2, 5, 0, 6, 6, 0, 0, 7, 4, 0, 24, 0, 0, 0, 0, 1, 0]' : 0.129656}
{'[0, 2, 5, 0, 6, 6, 0, 0, 7, 4, 0, 24, 0, 0, 0, 0, 1, 0]' : 0.129927}
{'[0, 2, 5, 0, 6, 6, 0, 0, 7, 4, 0, 24, 0, 0, 0, 0, 1, 0]' : 0.129913}
{'[0, 2, 5, 0, 6, 6, 0, 0, 7, 4, 0, 24, 0, 0, 0, 0, 1, 0]' : 0.129664}
{'[0, 2, 5, 0, 6, 6, 0, 0, 7, 4, 0, 24, 0, 0, 0, 0, 1, 0]' : 0.129624}
{'[0, 2, 5, 0, 6, 6, 0, 0, 7, 4, 0, 24, 0, 0, 0, 0, 1, 0]' : 0.129927}
{'[0, 2, 5, 0, 6, 6, 0, 0, 7, 4, 0, 24, 0, 0, 0, 0, 1, 0]' : 0.130109}
{'[0, 2, 5, 0, 6, 6, 0, 0, 7, 4, 0, 24, 0, 0, 0, 0, 1, 0]' : 0.129625}
{'[0, 2, 5, 0, 6, 6, 0, 0, 7, 4, 0, 24, 0, 0, 0, 0, 1, 0]' : 0.129965}
{'[0, 2, 5, 0, 6, 6, 0, 0, 7, 4, 0, 24, 0, 0, 0, 0, 1, 0]' : 0.129958}
{'[0, 2, 5, 0, 6, 6, 0, 0, 7, 4, 0, 24, 0, 0, 0, 0, 1, 0]' : 0.130025}
{'[0, 2, 5, 0, 6, 6, 0, 0, 7, 4, 0, 24, 0, 0, 0, 0, 1, 0]' : 0.130146}
{'[0, 2, 5, 0, 6, 6, 0, 0, 7, 4, 0, 24, 0, 0, 0, 0, 1, 0]' : 0.129919}
{'[0, 2, 5, 0, 6, 6, 0, 0, 7, 4, 0, 24, 0, 0, 0, 0, 1, 0]' : 0.130206}
{'[0, 2, 5, 0, 6, 6, 0, 0, 7, 4, 0, 24, 0, 0, 0, 0, 1, 0]' : 0.130142}
{'[0, 2, 5, 0, 6, 6, 0, 0, 7, 4, 0, 24, 0, 0, 0, 0, 1, 0]' : 0.129851}
{'[0, 2, 5, 0, 6, 6, 0, 0, 7, 4, 0, 24, 0, 0, 0, 0, 1, 0]' : 0.129876}

out:
 ["{'[0, 2, 5, 0, 6, 6, 0, 0, 7, 4, 0, 24, 0, 0, 0, 0, 1, 0]' : 0.155394}", "{'[0, 2, 5, 0, 6, 6, 0, 0, 7, 4, 0, 24, 0, 0, 0, 0, 1, 0]' : 0.155038}", "{'[0, 2, 5, 0, 6, 6, 0, 0, 7, 4, 0, 24, 0, 0, 0, 0, 1, 0]' : 0.147955}", "{'[0, 2, 5, 0, 6, 6, 0, 0, 7, 4, 0, 24, 0, 0, 0, 0, 1, 0]' : 0.129832}", "{'[0, 2, 5, 0, 6, 6, 0, 0, 7, 4, 0, 24, 0, 0, 0, 0, 1, 0]' : 0.129907}", "{'[0, 2, 5, 0, 6, 6, 0, 0, 7, 4, 0, 24, 0, 0, 0, 0, 1, 0]' : 0.129899}", "{'[0, 2, 5, 0, 6, 6, 0, 0, 7, 4, 0, 24, 0, 0, 0, 0, 1, 0]' : 0.129896}", "{'[0, 2, 5, 0, 6, 6, 0, 0, 7, 4, 0, 24, 0, 0, 0, 0, 1, 0]' : 0.129961}", "{'[0, 2, 5, 0, 6, 6, 0, 0, 7, 4, 0, 24, 0, 0, 0, 0, 1, 0]' : 0.130168}", "{'[0, 2, 5, 0, 6, 6, 0, 0, 7, 4, 0, 24, 0, 0, 0, 0, 1, 0]' : 0.129888}", "{'[0, 2, 5, 0, 6, 6, 0, 0, 7, 4, 0, 24, 0, 0, 0, 0, 1, 0]' : 0.130231}", "{'[0, 2, 5, 0, 6, 6, 0, 0, 7, 4, 0, 24, 0, 0, 0, 0, 1, 0]' : 0.129738}", "{'[0, 2, 5, 0, 6, 6, 0, 0, 7, 4, 0, 24, 0, 0, 0, 0, 1, 0]' : 0.12974}", "{'[0, 2, 5, 0, 6, 6, 0, 0, 7, 4, 0, 24, 0, 0, 0, 0, 1, 0]' : 0.129656}", "{'[0, 2, 5, 0, 6, 6, 0, 0, 7, 4, 0, 24, 0, 0, 0, 0, 1, 0]' : 0.129927}", "{'[0, 2, 5, 0, 6, 6, 0, 0, 7, 4, 0, 24, 0, 0, 0, 0, 1, 0]' : 0.129913}", "{'[0, 2, 5, 0, 6, 6, 0, 0, 7, 4, 0, 24, 0, 0, 0, 0, 1, 0]' : 0.129664}", "{'[0, 2, 5, 0, 6, 6, 0, 0, 7, 4, 0, 24, 0, 0, 0, 0, 1, 0]' : 0.129624}", "{'[0, 2, 5, 0, 6, 6, 0, 0, 7, 4, 0, 24, 0, 0, 0, 0, 1, 0]' : 0.129927}", "{'[0, 2, 5, 0, 6, 6, 0, 0, 7, 4, 0, 24, 0, 0, 0, 0, 1, 0]' : 0.130109}", "{'[0, 2, 5, 0, 6, 6, 0, 0, 7, 4, 0, 24, 0, 0, 0, 0, 1, 0]' : 0.129625}", "{'[0, 2, 5, 0, 6, 6, 0, 0, 7, 4, 0, 24, 0, 0, 0, 0, 1, 0]' : 0.129965}", "{'[0, 2, 5, 0, 6, 6, 0, 0, 7, 4, 0, 24, 0, 0, 0, 0, 1, 0]' : 0.129958}", "{'[0, 2, 5, 0, 6, 6, 0, 0, 7, 4, 0, 24, 0, 0, 0, 0, 1, 0]' : 0.130025}", "{'[0, 2, 5, 0, 6, 6, 0, 0, 7, 4, 0, 24, 0, 0, 0, 0, 1, 0]' : 0.130146}", "{'[0, 2, 5, 0, 6, 6, 0, 0, 7, 4, 0, 24, 0, 0, 0, 0, 1, 0]' : 0.129919}", "{'[0, 2, 5, 0, 6, 6, 0, 0, 7, 4, 0, 24, 0, 0, 0, 0, 1, 0]' : 0.130206}", "{'[0, 2, 5, 0, 6, 6, 0, 0, 7, 4, 0, 24, 0, 0, 0, 0, 1, 0]' : 0.130142}", "{'[0, 2, 5, 0, 6, 6, 0, 0, 7, 4, 0, 24, 0, 0, 0, 0, 1, 0]' : 0.129851}", "{'[0, 2, 5, 0, 6, 6, 0, 0, 7, 4, 0, 24, 0, 0, 0, 0, 1, 0]' : 0.129876}"]
returning from 'run': {'[0, 2, 5, 0, 6, 6, 0, 0, 7, 4, 0, 24, 0, 0, 0, 0, 1, 0]': ([0.155394, 0.155038, 0.147955, 0.129832, 0.129907, 0.129899, 0.129896, 0.129961, 0.130168, 0.129888, 0.130231, 0.129738, 0.12974, 0.129656, 0.129927, 0.129913, 0.129664, 0.129624, 0.129927, 0.130109, 0.129625, 0.129965, 0.129958, 0.130025, 0.130146, 0.129919, 0.130206, 0.130142, 0.129851, 0.129876], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 5, 0, 6, 6, 0, 0, 7, 4, 0, 24, 0, 0, 0, 0, 1, 0]': ([0.155394, 0.155038, 0.147955, 0.129832, 0.129907, 0.129899, 0.129896, 0.129961, 0.130168, 0.129888, 0.130231, 0.129738, 0.12974, 0.129656, 0.129927, 0.129913, 0.129664, 0.129624, 0.129927, 0.130109, 0.129625, 0.129965, 0.129958, 0.130025, 0.130146, 0.129919, 0.130206, 0.130142, 0.129851, 0.129876], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	42
        Max loop nest depth: 	5
        Additions: 		3689
        Multiplications: 	1092
        Divisions: 		0
        Logical: 		0
        Reads: 			5955
        Writes: 		705
        Comparisons:		42
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest75.exe __orio_perftest75.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest75.exe  
Program Test Output: 
{'[0, 0, 5, 4, 5, 6, 1, 0, 29, 4, 0, 28, 1, 0, 1, 0, 1, 1]' : 0.117337}
{'[0, 0, 5, 4, 5, 6, 1, 0, 29, 4, 0, 28, 1, 0, 1, 0, 1, 1]' : 0.117191}
{'[0, 0, 5, 4, 5, 6, 1, 0, 29, 4, 0, 28, 1, 0, 1, 0, 1, 1]' : 0.117011}
{'[0, 0, 5, 4, 5, 6, 1, 0, 29, 4, 0, 28, 1, 0, 1, 0, 1, 1]' : 0.117065}
{'[0, 0, 5, 4, 5, 6, 1, 0, 29, 4, 0, 28, 1, 0, 1, 0, 1, 1]' : 0.117086}
{'[0, 0, 5, 4, 5, 6, 1, 0, 29, 4, 0, 28, 1, 0, 1, 0, 1, 1]' : 0.117304}
{'[0, 0, 5, 4, 5, 6, 1, 0, 29, 4, 0, 28, 1, 0, 1, 0, 1, 1]' : 0.11709}
{'[0, 0, 5, 4, 5, 6, 1, 0, 29, 4, 0, 28, 1, 0, 1, 0, 1, 1]' : 0.117554}
{'[0, 0, 5, 4, 5, 6, 1, 0, 29, 4, 0, 28, 1, 0, 1, 0, 1, 1]' : 0.117242}
{'[0, 0, 5, 4, 5, 6, 1, 0, 29, 4, 0, 28, 1, 0, 1, 0, 1, 1]' : 0.117154}
{'[0, 0, 5, 4, 5, 6, 1, 0, 29, 4, 0, 28, 1, 0, 1, 0, 1, 1]' : 0.117063}
{'[0, 0, 5, 4, 5, 6, 1, 0, 29, 4, 0, 28, 1, 0, 1, 0, 1, 1]' : 0.117246}
{'[0, 0, 5, 4, 5, 6, 1, 0, 29, 4, 0, 28, 1, 0, 1, 0, 1, 1]' : 0.117004}
{'[0, 0, 5, 4, 5, 6, 1, 0, 29, 4, 0, 28, 1, 0, 1, 0, 1, 1]' : 0.117123}
{'[0, 0, 5, 4, 5, 6, 1, 0, 29, 4, 0, 28, 1, 0, 1, 0, 1, 1]' : 0.116953}
{'[0, 0, 5, 4, 5, 6, 1, 0, 29, 4, 0, 28, 1, 0, 1, 0, 1, 1]' : 0.117056}
{'[0, 0, 5, 4, 5, 6, 1, 0, 29, 4, 0, 28, 1, 0, 1, 0, 1, 1]' : 0.117184}
{'[0, 0, 5, 4, 5, 6, 1, 0, 29, 4, 0, 28, 1, 0, 1, 0, 1, 1]' : 0.117283}
{'[0, 0, 5, 4, 5, 6, 1, 0, 29, 4, 0, 28, 1, 0, 1, 0, 1, 1]' : 0.117521}
{'[0, 0, 5, 4, 5, 6, 1, 0, 29, 4, 0, 28, 1, 0, 1, 0, 1, 1]' : 0.117098}
{'[0, 0, 5, 4, 5, 6, 1, 0, 29, 4, 0, 28, 1, 0, 1, 0, 1, 1]' : 0.117478}
{'[0, 0, 5, 4, 5, 6, 1, 0, 29, 4, 0, 28, 1, 0, 1, 0, 1, 1]' : 0.117046}
{'[0, 0, 5, 4, 5, 6, 1, 0, 29, 4, 0, 28, 1, 0, 1, 0, 1, 1]' : 0.11694}
{'[0, 0, 5, 4, 5, 6, 1, 0, 29, 4, 0, 28, 1, 0, 1, 0, 1, 1]' : 0.117132}
{'[0, 0, 5, 4, 5, 6, 1, 0, 29, 4, 0, 28, 1, 0, 1, 0, 1, 1]' : 0.117094}
{'[0, 0, 5, 4, 5, 6, 1, 0, 29, 4, 0, 28, 1, 0, 1, 0, 1, 1]' : 0.117063}
{'[0, 0, 5, 4, 5, 6, 1, 0, 29, 4, 0, 28, 1, 0, 1, 0, 1, 1]' : 0.117177}
{'[0, 0, 5, 4, 5, 6, 1, 0, 29, 4, 0, 28, 1, 0, 1, 0, 1, 1]' : 0.117412}
{'[0, 0, 5, 4, 5, 6, 1, 0, 29, 4, 0, 28, 1, 0, 1, 0, 1, 1]' : 0.117224}
{'[0, 0, 5, 4, 5, 6, 1, 0, 29, 4, 0, 28, 1, 0, 1, 0, 1, 1]' : 0.117086}

out:
 ["{'[0, 0, 5, 4, 5, 6, 1, 0, 29, 4, 0, 28, 1, 0, 1, 0, 1, 1]' : 0.117337}", "{'[0, 0, 5, 4, 5, 6, 1, 0, 29, 4, 0, 28, 1, 0, 1, 0, 1, 1]' : 0.117191}", "{'[0, 0, 5, 4, 5, 6, 1, 0, 29, 4, 0, 28, 1, 0, 1, 0, 1, 1]' : 0.117011}", "{'[0, 0, 5, 4, 5, 6, 1, 0, 29, 4, 0, 28, 1, 0, 1, 0, 1, 1]' : 0.117065}", "{'[0, 0, 5, 4, 5, 6, 1, 0, 29, 4, 0, 28, 1, 0, 1, 0, 1, 1]' : 0.117086}", "{'[0, 0, 5, 4, 5, 6, 1, 0, 29, 4, 0, 28, 1, 0, 1, 0, 1, 1]' : 0.117304}", "{'[0, 0, 5, 4, 5, 6, 1, 0, 29, 4, 0, 28, 1, 0, 1, 0, 1, 1]' : 0.11709}", "{'[0, 0, 5, 4, 5, 6, 1, 0, 29, 4, 0, 28, 1, 0, 1, 0, 1, 1]' : 0.117554}", "{'[0, 0, 5, 4, 5, 6, 1, 0, 29, 4, 0, 28, 1, 0, 1, 0, 1, 1]' : 0.117242}", "{'[0, 0, 5, 4, 5, 6, 1, 0, 29, 4, 0, 28, 1, 0, 1, 0, 1, 1]' : 0.117154}", "{'[0, 0, 5, 4, 5, 6, 1, 0, 29, 4, 0, 28, 1, 0, 1, 0, 1, 1]' : 0.117063}", "{'[0, 0, 5, 4, 5, 6, 1, 0, 29, 4, 0, 28, 1, 0, 1, 0, 1, 1]' : 0.117246}", "{'[0, 0, 5, 4, 5, 6, 1, 0, 29, 4, 0, 28, 1, 0, 1, 0, 1, 1]' : 0.117004}", "{'[0, 0, 5, 4, 5, 6, 1, 0, 29, 4, 0, 28, 1, 0, 1, 0, 1, 1]' : 0.117123}", "{'[0, 0, 5, 4, 5, 6, 1, 0, 29, 4, 0, 28, 1, 0, 1, 0, 1, 1]' : 0.116953}", "{'[0, 0, 5, 4, 5, 6, 1, 0, 29, 4, 0, 28, 1, 0, 1, 0, 1, 1]' : 0.117056}", "{'[0, 0, 5, 4, 5, 6, 1, 0, 29, 4, 0, 28, 1, 0, 1, 0, 1, 1]' : 0.117184}", "{'[0, 0, 5, 4, 5, 6, 1, 0, 29, 4, 0, 28, 1, 0, 1, 0, 1, 1]' : 0.117283}", "{'[0, 0, 5, 4, 5, 6, 1, 0, 29, 4, 0, 28, 1, 0, 1, 0, 1, 1]' : 0.117521}", "{'[0, 0, 5, 4, 5, 6, 1, 0, 29, 4, 0, 28, 1, 0, 1, 0, 1, 1]' : 0.117098}", "{'[0, 0, 5, 4, 5, 6, 1, 0, 29, 4, 0, 28, 1, 0, 1, 0, 1, 1]' : 0.117478}", "{'[0, 0, 5, 4, 5, 6, 1, 0, 29, 4, 0, 28, 1, 0, 1, 0, 1, 1]' : 0.117046}", "{'[0, 0, 5, 4, 5, 6, 1, 0, 29, 4, 0, 28, 1, 0, 1, 0, 1, 1]' : 0.11694}", "{'[0, 0, 5, 4, 5, 6, 1, 0, 29, 4, 0, 28, 1, 0, 1, 0, 1, 1]' : 0.117132}", "{'[0, 0, 5, 4, 5, 6, 1, 0, 29, 4, 0, 28, 1, 0, 1, 0, 1, 1]' : 0.117094}", "{'[0, 0, 5, 4, 5, 6, 1, 0, 29, 4, 0, 28, 1, 0, 1, 0, 1, 1]' : 0.117063}", "{'[0, 0, 5, 4, 5, 6, 1, 0, 29, 4, 0, 28, 1, 0, 1, 0, 1, 1]' : 0.117177}", "{'[0, 0, 5, 4, 5, 6, 1, 0, 29, 4, 0, 28, 1, 0, 1, 0, 1, 1]' : 0.117412}", "{'[0, 0, 5, 4, 5, 6, 1, 0, 29, 4, 0, 28, 1, 0, 1, 0, 1, 1]' : 0.117224}", "{'[0, 0, 5, 4, 5, 6, 1, 0, 29, 4, 0, 28, 1, 0, 1, 0, 1, 1]' : 0.117086}"]
returning from 'run': {'[0, 0, 5, 4, 5, 6, 1, 0, 29, 4, 0, 28, 1, 0, 1, 0, 1, 1]': ([0.117337, 0.117191, 0.117011, 0.117065, 0.117086, 0.117304, 0.11709, 0.117554, 0.117242, 0.117154, 0.117063, 0.117246, 0.117004, 0.117123, 0.116953, 0.117056, 0.117184, 0.117283, 0.117521, 0.117098, 0.117478, 0.117046, 0.11694, 0.117132, 0.117094, 0.117063, 0.117177, 0.117412, 0.117224, 0.117086], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 5, 4, 5, 6, 1, 0, 29, 4, 0, 28, 1, 0, 1, 0, 1, 1]': ([0.117337, 0.117191, 0.117011, 0.117065, 0.117086, 0.117304, 0.11709, 0.117554, 0.117242, 0.117154, 0.117063, 0.117246, 0.117004, 0.117123, 0.116953, 0.117056, 0.117184, 0.117283, 0.117521, 0.117098, 0.117478, 0.117046, 0.11694, 0.117132, 0.117094, 0.117063, 0.117177, 0.117412, 0.117224, 0.117086], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	28
        Max loop nest depth: 	5
        Additions: 		930
        Multiplications: 	348
        Divisions: 		0
        Logical: 		0
        Reads: 			2038
        Writes: 		434
        Comparisons:		28
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest76.exe __orio_perftest76.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest76.exe  
Program Test Output: 
{'[0, 2, 5, 2, 4, 0, 0, 0, 0, 4, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.110205}
{'[0, 2, 5, 2, 4, 0, 0, 0, 0, 4, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.110693}
{'[0, 2, 5, 2, 4, 0, 0, 0, 0, 4, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.110668}
{'[0, 2, 5, 2, 4, 0, 0, 0, 0, 4, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.11075}
{'[0, 2, 5, 2, 4, 0, 0, 0, 0, 4, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.0996411}
{'[0, 2, 5, 2, 4, 0, 0, 0, 0, 4, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.0945671}
{'[0, 2, 5, 2, 4, 0, 0, 0, 0, 4, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.0945828}
{'[0, 2, 5, 2, 4, 0, 0, 0, 0, 4, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.0944219}
{'[0, 2, 5, 2, 4, 0, 0, 0, 0, 4, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.094382}
{'[0, 2, 5, 2, 4, 0, 0, 0, 0, 4, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.0944009}
{'[0, 2, 5, 2, 4, 0, 0, 0, 0, 4, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.0943708}
{'[0, 2, 5, 2, 4, 0, 0, 0, 0, 4, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.094449}
{'[0, 2, 5, 2, 4, 0, 0, 0, 0, 4, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.0944891}
{'[0, 2, 5, 2, 4, 0, 0, 0, 0, 4, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.094378}
{'[0, 2, 5, 2, 4, 0, 0, 0, 0, 4, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.094804}
{'[0, 2, 5, 2, 4, 0, 0, 0, 0, 4, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.0944319}
{'[0, 2, 5, 2, 4, 0, 0, 0, 0, 4, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.0944879}
{'[0, 2, 5, 2, 4, 0, 0, 0, 0, 4, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.0946369}
{'[0, 2, 5, 2, 4, 0, 0, 0, 0, 4, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.094425}
{'[0, 2, 5, 2, 4, 0, 0, 0, 0, 4, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.0943191}
{'[0, 2, 5, 2, 4, 0, 0, 0, 0, 4, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.094466}
{'[0, 2, 5, 2, 4, 0, 0, 0, 0, 4, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.094516}
{'[0, 2, 5, 2, 4, 0, 0, 0, 0, 4, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.0943561}
{'[0, 2, 5, 2, 4, 0, 0, 0, 0, 4, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.094466}
{'[0, 2, 5, 2, 4, 0, 0, 0, 0, 4, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.094418}
{'[0, 2, 5, 2, 4, 0, 0, 0, 0, 4, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.0944259}
{'[0, 2, 5, 2, 4, 0, 0, 0, 0, 4, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.0944669}
{'[0, 2, 5, 2, 4, 0, 0, 0, 0, 4, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.0945401}
{'[0, 2, 5, 2, 4, 0, 0, 0, 0, 4, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.09483}
{'[0, 2, 5, 2, 4, 0, 0, 0, 0, 4, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.0948288}

out:
 ["{'[0, 2, 5, 2, 4, 0, 0, 0, 0, 4, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.110205}", "{'[0, 2, 5, 2, 4, 0, 0, 0, 0, 4, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.110693}", "{'[0, 2, 5, 2, 4, 0, 0, 0, 0, 4, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.110668}", "{'[0, 2, 5, 2, 4, 0, 0, 0, 0, 4, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.11075}", "{'[0, 2, 5, 2, 4, 0, 0, 0, 0, 4, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.0996411}", "{'[0, 2, 5, 2, 4, 0, 0, 0, 0, 4, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.0945671}", "{'[0, 2, 5, 2, 4, 0, 0, 0, 0, 4, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.0945828}", "{'[0, 2, 5, 2, 4, 0, 0, 0, 0, 4, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.0944219}", "{'[0, 2, 5, 2, 4, 0, 0, 0, 0, 4, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.094382}", "{'[0, 2, 5, 2, 4, 0, 0, 0, 0, 4, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.0944009}", "{'[0, 2, 5, 2, 4, 0, 0, 0, 0, 4, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.0943708}", "{'[0, 2, 5, 2, 4, 0, 0, 0, 0, 4, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.094449}", "{'[0, 2, 5, 2, 4, 0, 0, 0, 0, 4, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.0944891}", "{'[0, 2, 5, 2, 4, 0, 0, 0, 0, 4, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.094378}", "{'[0, 2, 5, 2, 4, 0, 0, 0, 0, 4, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.094804}", "{'[0, 2, 5, 2, 4, 0, 0, 0, 0, 4, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.0944319}", "{'[0, 2, 5, 2, 4, 0, 0, 0, 0, 4, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.0944879}", "{'[0, 2, 5, 2, 4, 0, 0, 0, 0, 4, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.0946369}", "{'[0, 2, 5, 2, 4, 0, 0, 0, 0, 4, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.094425}", "{'[0, 2, 5, 2, 4, 0, 0, 0, 0, 4, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.0943191}", "{'[0, 2, 5, 2, 4, 0, 0, 0, 0, 4, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.094466}", "{'[0, 2, 5, 2, 4, 0, 0, 0, 0, 4, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.094516}", "{'[0, 2, 5, 2, 4, 0, 0, 0, 0, 4, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.0943561}", "{'[0, 2, 5, 2, 4, 0, 0, 0, 0, 4, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.094466}", "{'[0, 2, 5, 2, 4, 0, 0, 0, 0, 4, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.094418}", "{'[0, 2, 5, 2, 4, 0, 0, 0, 0, 4, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.0944259}", "{'[0, 2, 5, 2, 4, 0, 0, 0, 0, 4, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.0944669}", "{'[0, 2, 5, 2, 4, 0, 0, 0, 0, 4, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.0945401}", "{'[0, 2, 5, 2, 4, 0, 0, 0, 0, 4, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.09483}", "{'[0, 2, 5, 2, 4, 0, 0, 0, 0, 4, 0, 10, 0, 1, 1, 1, 0, 0]' : 0.0948288}"]
returning from 'run': {'[0, 2, 5, 2, 4, 0, 0, 0, 0, 4, 0, 10, 0, 1, 1, 1, 0, 0]': ([0.110205, 0.110693, 0.110668, 0.11075, 0.0996411, 0.0945671, 0.0945828, 0.0944219, 0.094382, 0.0944009, 0.0943708, 0.094449, 0.0944891, 0.094378, 0.094804, 0.0944319, 0.0944879, 0.0946369, 0.094425, 0.0943191, 0.094466, 0.094516, 0.0943561, 0.094466, 0.094418, 0.0944259, 0.0944669, 0.0945401, 0.09483, 0.0948288], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 5, 2, 4, 0, 0, 0, 0, 4, 0, 10, 0, 1, 1, 1, 0, 0]': ([0.110205, 0.110693, 0.110668, 0.11075, 0.0996411, 0.0945671, 0.0945828, 0.0944219, 0.094382, 0.0944009, 0.0943708, 0.094449, 0.0944891, 0.094378, 0.094804, 0.0944319, 0.0944879, 0.0946369, 0.094425, 0.0943191, 0.094466, 0.094516, 0.0943561, 0.094466, 0.094418, 0.0944259, 0.0944669, 0.0945401, 0.09483, 0.0948288], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	5
        Additions: 		932
        Multiplications: 	396
        Divisions: 		0
        Logical: 		0
        Reads: 			1827
        Writes: 		313
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest77.exe __orio_perftest77.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest77.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest77.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest77.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest77.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	5
        Additions: 		992
        Multiplications: 	456
        Divisions: 		0
        Logical: 		0
        Reads: 			2164
        Writes: 		425
        Comparisons:		24
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest78.exe __orio_perftest78.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest78.exe  
Program Test Output: 
{'[0, 0, 5, 5, 4, 6, 0, 0, 17, 4, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.154283}
{'[0, 0, 5, 5, 4, 6, 0, 0, 17, 4, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.154298}
{'[0, 0, 5, 5, 4, 6, 0, 0, 17, 4, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.154172}
{'[0, 0, 5, 5, 4, 6, 0, 0, 17, 4, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.140851}
{'[0, 0, 5, 5, 4, 6, 0, 0, 17, 4, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.13784}
{'[0, 0, 5, 5, 4, 6, 0, 0, 17, 4, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.137986}
{'[0, 0, 5, 5, 4, 6, 0, 0, 17, 4, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.13881}
{'[0, 0, 5, 5, 4, 6, 0, 0, 17, 4, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.137875}
{'[0, 0, 5, 5, 4, 6, 0, 0, 17, 4, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.137907}
{'[0, 0, 5, 5, 4, 6, 0, 0, 17, 4, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.137607}
{'[0, 0, 5, 5, 4, 6, 0, 0, 17, 4, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.137687}
{'[0, 0, 5, 5, 4, 6, 0, 0, 17, 4, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138049}
{'[0, 0, 5, 5, 4, 6, 0, 0, 17, 4, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138427}
{'[0, 0, 5, 5, 4, 6, 0, 0, 17, 4, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.137351}
{'[0, 0, 5, 5, 4, 6, 0, 0, 17, 4, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138137}
{'[0, 0, 5, 5, 4, 6, 0, 0, 17, 4, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138248}
{'[0, 0, 5, 5, 4, 6, 0, 0, 17, 4, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138065}
{'[0, 0, 5, 5, 4, 6, 0, 0, 17, 4, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138115}
{'[0, 0, 5, 5, 4, 6, 0, 0, 17, 4, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.137848}
{'[0, 0, 5, 5, 4, 6, 0, 0, 17, 4, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.137457}
{'[0, 0, 5, 5, 4, 6, 0, 0, 17, 4, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.13743}
{'[0, 0, 5, 5, 4, 6, 0, 0, 17, 4, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138488}
{'[0, 0, 5, 5, 4, 6, 0, 0, 17, 4, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138097}
{'[0, 0, 5, 5, 4, 6, 0, 0, 17, 4, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138816}
{'[0, 0, 5, 5, 4, 6, 0, 0, 17, 4, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.137444}
{'[0, 0, 5, 5, 4, 6, 0, 0, 17, 4, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.13796}
{'[0, 0, 5, 5, 4, 6, 0, 0, 17, 4, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.137649}
{'[0, 0, 5, 5, 4, 6, 0, 0, 17, 4, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138297}
{'[0, 0, 5, 5, 4, 6, 0, 0, 17, 4, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138943}
{'[0, 0, 5, 5, 4, 6, 0, 0, 17, 4, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.137969}

out:
 ["{'[0, 0, 5, 5, 4, 6, 0, 0, 17, 4, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.154283}", "{'[0, 0, 5, 5, 4, 6, 0, 0, 17, 4, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.154298}", "{'[0, 0, 5, 5, 4, 6, 0, 0, 17, 4, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.154172}", "{'[0, 0, 5, 5, 4, 6, 0, 0, 17, 4, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.140851}", "{'[0, 0, 5, 5, 4, 6, 0, 0, 17, 4, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.13784}", "{'[0, 0, 5, 5, 4, 6, 0, 0, 17, 4, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.137986}", "{'[0, 0, 5, 5, 4, 6, 0, 0, 17, 4, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.13881}", "{'[0, 0, 5, 5, 4, 6, 0, 0, 17, 4, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.137875}", "{'[0, 0, 5, 5, 4, 6, 0, 0, 17, 4, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.137907}", "{'[0, 0, 5, 5, 4, 6, 0, 0, 17, 4, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.137607}", "{'[0, 0, 5, 5, 4, 6, 0, 0, 17, 4, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.137687}", "{'[0, 0, 5, 5, 4, 6, 0, 0, 17, 4, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138049}", "{'[0, 0, 5, 5, 4, 6, 0, 0, 17, 4, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138427}", "{'[0, 0, 5, 5, 4, 6, 0, 0, 17, 4, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.137351}", "{'[0, 0, 5, 5, 4, 6, 0, 0, 17, 4, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138137}", "{'[0, 0, 5, 5, 4, 6, 0, 0, 17, 4, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138248}", "{'[0, 0, 5, 5, 4, 6, 0, 0, 17, 4, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138065}", "{'[0, 0, 5, 5, 4, 6, 0, 0, 17, 4, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138115}", "{'[0, 0, 5, 5, 4, 6, 0, 0, 17, 4, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.137848}", "{'[0, 0, 5, 5, 4, 6, 0, 0, 17, 4, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.137457}", "{'[0, 0, 5, 5, 4, 6, 0, 0, 17, 4, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.13743}", "{'[0, 0, 5, 5, 4, 6, 0, 0, 17, 4, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138488}", "{'[0, 0, 5, 5, 4, 6, 0, 0, 17, 4, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138097}", "{'[0, 0, 5, 5, 4, 6, 0, 0, 17, 4, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138816}", "{'[0, 0, 5, 5, 4, 6, 0, 0, 17, 4, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.137444}", "{'[0, 0, 5, 5, 4, 6, 0, 0, 17, 4, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.13796}", "{'[0, 0, 5, 5, 4, 6, 0, 0, 17, 4, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.137649}", "{'[0, 0, 5, 5, 4, 6, 0, 0, 17, 4, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138297}", "{'[0, 0, 5, 5, 4, 6, 0, 0, 17, 4, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138943}", "{'[0, 0, 5, 5, 4, 6, 0, 0, 17, 4, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.137969}"]
returning from 'run': {'[0, 0, 5, 5, 4, 6, 0, 0, 17, 4, 0, 3, 2, 0, 0, 1, 1, 1]': ([0.154283, 0.154298, 0.154172, 0.140851, 0.13784, 0.137986, 0.13881, 0.137875, 0.137907, 0.137607, 0.137687, 0.138049, 0.138427, 0.137351, 0.138137, 0.138248, 0.138065, 0.138115, 0.137848, 0.137457, 0.13743, 0.138488, 0.138097, 0.138816, 0.137444, 0.13796, 0.137649, 0.138297, 0.138943, 0.137969], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 5, 5, 4, 6, 0, 0, 17, 4, 0, 3, 2, 0, 0, 1, 1, 1]': ([0.154283, 0.154298, 0.154172, 0.140851, 0.13784, 0.137986, 0.13881, 0.137875, 0.137907, 0.137607, 0.137687, 0.138049, 0.138427, 0.137351, 0.138137, 0.138248, 0.138065, 0.138115, 0.137848, 0.137457, 0.13743, 0.138488, 0.138097, 0.138816, 0.137444, 0.13796, 0.137649, 0.138297, 0.138943, 0.137969], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		898
        Multiplications: 	420
        Divisions: 		0
        Logical: 		0
        Reads: 			1791
        Writes: 		310
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest79.exe __orio_perftest79.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest79.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest79.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest79.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest79.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = kkk
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	4
        Additions: 		929
        Multiplications: 	288
        Divisions: 		0
        Logical: 		0
        Reads: 			1535
        Writes: 		173
        Comparisons:		10
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest80.exe __orio_perftest80.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest80.exe  
Program Test Output: 
{'[0, 2, 5, 0, 6, 3, 1, 0, 0, 4, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.12212}
{'[0, 2, 5, 0, 6, 3, 1, 0, 0, 4, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.122061}
{'[0, 2, 5, 0, 6, 3, 1, 0, 0, 4, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.121834}
{'[0, 2, 5, 0, 6, 3, 1, 0, 0, 4, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.121981}
{'[0, 2, 5, 0, 6, 3, 1, 0, 0, 4, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.121023}
{'[0, 2, 5, 0, 6, 3, 1, 0, 0, 4, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.106728}
{'[0, 2, 5, 0, 6, 3, 1, 0, 0, 4, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.10467}
{'[0, 2, 5, 0, 6, 3, 1, 0, 0, 4, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.104902}
{'[0, 2, 5, 0, 6, 3, 1, 0, 0, 4, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.104968}
{'[0, 2, 5, 0, 6, 3, 1, 0, 0, 4, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.104799}
{'[0, 2, 5, 0, 6, 3, 1, 0, 0, 4, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.104624}
{'[0, 2, 5, 0, 6, 3, 1, 0, 0, 4, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.104806}
{'[0, 2, 5, 0, 6, 3, 1, 0, 0, 4, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.105183}
{'[0, 2, 5, 0, 6, 3, 1, 0, 0, 4, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.105402}
{'[0, 2, 5, 0, 6, 3, 1, 0, 0, 4, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.104773}
{'[0, 2, 5, 0, 6, 3, 1, 0, 0, 4, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.104754}
{'[0, 2, 5, 0, 6, 3, 1, 0, 0, 4, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.104727}
{'[0, 2, 5, 0, 6, 3, 1, 0, 0, 4, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.104825}
{'[0, 2, 5, 0, 6, 3, 1, 0, 0, 4, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.104462}
{'[0, 2, 5, 0, 6, 3, 1, 0, 0, 4, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.104558}
{'[0, 2, 5, 0, 6, 3, 1, 0, 0, 4, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.104619}
{'[0, 2, 5, 0, 6, 3, 1, 0, 0, 4, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.104319}
{'[0, 2, 5, 0, 6, 3, 1, 0, 0, 4, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.104478}
{'[0, 2, 5, 0, 6, 3, 1, 0, 0, 4, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.104917}
{'[0, 2, 5, 0, 6, 3, 1, 0, 0, 4, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.104598}
{'[0, 2, 5, 0, 6, 3, 1, 0, 0, 4, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.104398}
{'[0, 2, 5, 0, 6, 3, 1, 0, 0, 4, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.104326}
{'[0, 2, 5, 0, 6, 3, 1, 0, 0, 4, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.104413}
{'[0, 2, 5, 0, 6, 3, 1, 0, 0, 4, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.104463}
{'[0, 2, 5, 0, 6, 3, 1, 0, 0, 4, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.104425}

out:
 ["{'[0, 2, 5, 0, 6, 3, 1, 0, 0, 4, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.12212}", "{'[0, 2, 5, 0, 6, 3, 1, 0, 0, 4, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.122061}", "{'[0, 2, 5, 0, 6, 3, 1, 0, 0, 4, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.121834}", "{'[0, 2, 5, 0, 6, 3, 1, 0, 0, 4, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.121981}", "{'[0, 2, 5, 0, 6, 3, 1, 0, 0, 4, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.121023}", "{'[0, 2, 5, 0, 6, 3, 1, 0, 0, 4, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.106728}", "{'[0, 2, 5, 0, 6, 3, 1, 0, 0, 4, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.10467}", "{'[0, 2, 5, 0, 6, 3, 1, 0, 0, 4, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.104902}", "{'[0, 2, 5, 0, 6, 3, 1, 0, 0, 4, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.104968}", "{'[0, 2, 5, 0, 6, 3, 1, 0, 0, 4, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.104799}", "{'[0, 2, 5, 0, 6, 3, 1, 0, 0, 4, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.104624}", "{'[0, 2, 5, 0, 6, 3, 1, 0, 0, 4, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.104806}", "{'[0, 2, 5, 0, 6, 3, 1, 0, 0, 4, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.105183}", "{'[0, 2, 5, 0, 6, 3, 1, 0, 0, 4, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.105402}", "{'[0, 2, 5, 0, 6, 3, 1, 0, 0, 4, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.104773}", "{'[0, 2, 5, 0, 6, 3, 1, 0, 0, 4, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.104754}", "{'[0, 2, 5, 0, 6, 3, 1, 0, 0, 4, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.104727}", "{'[0, 2, 5, 0, 6, 3, 1, 0, 0, 4, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.104825}", "{'[0, 2, 5, 0, 6, 3, 1, 0, 0, 4, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.104462}", "{'[0, 2, 5, 0, 6, 3, 1, 0, 0, 4, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.104558}", "{'[0, 2, 5, 0, 6, 3, 1, 0, 0, 4, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.104619}", "{'[0, 2, 5, 0, 6, 3, 1, 0, 0, 4, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.104319}", "{'[0, 2, 5, 0, 6, 3, 1, 0, 0, 4, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.104478}", "{'[0, 2, 5, 0, 6, 3, 1, 0, 0, 4, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.104917}", "{'[0, 2, 5, 0, 6, 3, 1, 0, 0, 4, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.104598}", "{'[0, 2, 5, 0, 6, 3, 1, 0, 0, 4, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.104398}", "{'[0, 2, 5, 0, 6, 3, 1, 0, 0, 4, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.104326}", "{'[0, 2, 5, 0, 6, 3, 1, 0, 0, 4, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.104413}", "{'[0, 2, 5, 0, 6, 3, 1, 0, 0, 4, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.104463}", "{'[0, 2, 5, 0, 6, 3, 1, 0, 0, 4, 0, 7, 1, 0, 1, 0, 1, 1]' : 0.104425}"]
returning from 'run': {'[0, 2, 5, 0, 6, 3, 1, 0, 0, 4, 0, 7, 1, 0, 1, 0, 1, 1]': ([0.12212, 0.122061, 0.121834, 0.121981, 0.121023, 0.106728, 0.10467, 0.104902, 0.104968, 0.104799, 0.104624, 0.104806, 0.105183, 0.105402, 0.104773, 0.104754, 0.104727, 0.104825, 0.104462, 0.104558, 0.104619, 0.104319, 0.104478, 0.104917, 0.104598, 0.104398, 0.104326, 0.104413, 0.104463, 0.104425], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 5, 0, 6, 3, 1, 0, 0, 4, 0, 7, 1, 0, 1, 0, 1, 1]': ([0.12212, 0.122061, 0.121834, 0.121981, 0.121023, 0.106728, 0.10467, 0.104902, 0.104968, 0.104799, 0.104624, 0.104806, 0.105183, 0.105402, 0.104773, 0.104754, 0.104727, 0.104825, 0.104462, 0.104558, 0.104619, 0.104319, 0.104478, 0.104917, 0.104598, 0.104398, 0.104326, 0.104413, 0.104463, 0.104425], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Complete design, with measurements:
     T1_J T2_I T2_J T2_K ACOPY_x U1_I U_K RT_I RT_J RT_K SCR VEC1 VEC2
32      1    6    6    0       0   16   0    0    1    1   1    1    0
82      0    5    6    4       0    0  29    0    0    2   1    1    0
113     4    0    2    3       1   10  28    0    0    1   0    1    1
186     2    2    6    3       0   29   8    2    0    0   1    0    0
353     0    0    0    3       0   23   0    1    0    0   1    1    0
360     1    5    4    4       0    0   0    0    0    0   1    0    1
495     4    0    3    5       0   29  29    1    1    0   0    0    0
671     2    5    0    6       1   27  27    0    1    0   1    0    1
674     2    5    4    0       1    3  29    1    1    0   0    0    1
716     5    2    6    3       0   28  29    0    2    0   1    0    0
803     6    1    0    6       0   23  27    0    1    0   0    1    1
823     6    1    4    0       1    0  15    2    0    0   0    0    1
904     2    4    0    3       1    7   5    0    0    2   1    1    1
1045    6    6    6    0       1   27   2    0    0    0   1    1    0
1123    4    4    3    6       0    5   4    1    0    1   1    0    0
1188    6    2    0    0       0    0  29    1    0    0   1    1    0
1235    6    1    6    6       1    2   5    0    1    0   0    0    0
1346    0    2    6    5       1    0  20    2    0    0   1    1    0
1547    6    5    0    5       0   16   4    0    2    0   1    0    1
1678    0    0    2    3       1    6   2    0    1    1   1    0    0
1714    0    3    5    0       0   19   1    0    0    0   0    0    1
2058    1    4    2    0       1   29   8    0    0    2   0    1    0
2060    3    0    6    0       1   24   0    0    0    2   1    1    1
2390    3    0    1    6       0    0  19    0    2    0   1    1    0
2497    0    0    0    6       1   16  10    0    0    0   1    0    1
2600    4    6    0    6       1   17   0    0    0    2   0    0    0
2806    2    0    6    6       0    7  24    0    0    0   0    1    0
2840    0    4    5    6       1   29  28    1    0    1   0    1    1
2992    2    2    4    0       0    0  10    0    1    1   1    0    0
3108    0    5    4    6       0   17   3    2    0    0   1    1    1
3148    2    0    6    3       1    0   7    1    0    1   0    1    1
      cost_mean
32   0.09265477
82   0.11357093
113  0.12821973
186  0.17559397
353  0.11067377
360  0.09409724
495  0.11169053
671  0.11842213
674  0.11661693
716  0.12428113
803  0.12607707
823  0.18518650
904  0.13392647
1045 0.12813153
1123 0.09150374
1188 0.10950090
1235 0.13969630
1346 0.17924263
1547 0.10598913
1678 0.11200087
1714 0.11161517
2058 0.15677123
2060 0.12719513
2390 0.10694513
2497 0.09631813
2600 0.14421980
2806 0.13220600
2840 0.11717390
2992 0.09681391
3108 0.13973687
3148 0.10760520

Heteroscedasticity Test p-value: 0.353177066059
Regression Step:                Df   Sum Sq  Mean Sq F value   Pr(>F)    
T1_J             1 0.000289 0.000289   7.378 0.026401 *  
T2_I             1 0.000060 0.000060   1.529 0.251306    
T2_J             1 0.000922 0.000922  23.571 0.001264 ** 
T2_K             1 0.000001 0.000001   0.016 0.903497    
ACOPY_x          1 0.002511 0.002511  64.172 4.32e-05 ***
U1_I             1 0.000315 0.000315   8.063 0.021825 *  
U_K              1 0.000034 0.000034   0.881 0.375420    
RT_I             1 0.004393 0.004393 112.265 5.50e-06 ***
RT_J             1 0.000138 0.000138   3.532 0.097015 .  
RT_K             1 0.000108 0.000108   2.770 0.134638    
SCR              1 0.000068 0.000068   1.734 0.224349    
VEC1             1 0.000039 0.000039   0.996 0.347474    
VEC2             1 0.000502 0.000502  12.821 0.007181 ** 
I(1/(1 + T1_J))  1 0.000000 0.000000   0.002 0.969882    
I(1/(1 + T2_I))  1 0.001830 0.001830  46.774 0.000132 ***
I(1/(1 + T2_J))  1 0.000008 0.000008   0.202 0.664673    
I(1/(1 + T2_K))  1 0.000154 0.000154   3.929 0.082772 .  
I(1/(1 + U1_I))  1 0.000003 0.000003   0.070 0.798146    
I(1/(1 + U_K))   1 0.000004 0.000004   0.098 0.762484    
I(1/(1 + RT_I))  1 0.005630 0.005630 143.896 2.15e-06 ***
I(1/(1 + RT_J))  1 0.000218 0.000218   5.572 0.045915 *  
I(1/(1 + RT_K))  1 0.000507 0.000507  12.954 0.006991 ** 
Residuals        8 0.000313 0.000039                     
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Predicting Best
Generating valid search space of size 3300 (does not spend evaluations)
Valid coordinates: 660
Valid coordinates: 1320
Valid coordinates: 1980
Tested coordinates: 10000
Valid coordinates: 2640
Valid coordinates: 3300
Valid/Tested configurations: 3300/14092
Generated Search Space:
NULL
Identical predictions (tol = 1e-5): 1
Getting Best from Design
Response: ['cost_mean']
Design Names:  [1] "T1_J"      "T2_I"      "T2_J"      "T2_K"      "ACOPY_x"   "U1_I"     
 [7] "U_K"       "RT_I"      "RT_J"      "RT_K"      "SCR"       "VEC1"     
[13] "VEC2"      "cost_mean"

Design Response:       cost_mean
32   0.09265477
82   0.11357093
113  0.12821973
186  0.17559397
353  0.11067377
360  0.09409724
495  0.11169053
671  0.11842213
674  0.11661693
716  0.12428113
803  0.12607707
823  0.18518650
904  0.13392647
1045 0.12813153
1123 0.09150374
1188 0.10950090
1235 0.13969630
1346 0.17924263
1547 0.10598913
1678 0.11200087
1714 0.11161517
2058 0.15677123
2060 0.12719513
2390 0.10694513
2497 0.09631813
2600 0.14421980
2806 0.13220600
2840 0.11717390
2992 0.09681391
3108 0.13973687
3148 0.10760520

Current Design Names: ['T1_J', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'U1_I', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Getting fixed variables
Pruning Model
Best Predicted:     T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
164    0    0    5    5    5    0       0       0    8   4   0   5    1    0
    RT_K SCR VEC1 VEC2
164    1   1    0    1

Best From Design: [0, 4, 5, 4, 3, 6, 0, 0, 5, 4, 0, 4, 1, 0, 1, 1, 0, 0]
Pruned Factors: ['T2_I', 'T2_K', 'U_K', 'RT_K', 'SCR', 'VEC1']
Fixed Factors: {'ACOPY_x': 0, 'ACOPY_y': 0, 'T1_I': 0, 'RT_I': 1, 'T1_K': 5, 'U_J': 0, 'U_I': 4, 'T2_J': 5, 'U1_I': 8, 'VEC2': 1, 'RT_J': 0, 'T1_J': 0}
Length of requested configs: 1
Result was on Database, Returning Now
Starting Point (-O3):
0.16283083333333334
Predicted Best Point:
[0, 0, 5, 5, 5, 0, 0, 0, 8, 4, 0, 5, 1, 0, 1, 1, 0, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	32
        Max loop nest depth: 	4
        Additions: 		1108
        Multiplications: 	448
        Divisions: 		0
        Logical: 		0
        Reads: 			2418
        Writes: 		508
        Comparisons:		32
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest81.exe __orio_perftest81.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest81.exe  
Program Test Output: 
{'[0, 0, 5, 5, 5, 0, 0, 0, 8, 4, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.106776}
{'[0, 0, 5, 5, 5, 0, 0, 0, 8, 4, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.106629}
{'[0, 0, 5, 5, 5, 0, 0, 0, 8, 4, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.10552}
{'[0, 0, 5, 5, 5, 0, 0, 0, 8, 4, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.0967081}
{'[0, 0, 5, 5, 5, 0, 0, 0, 8, 4, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.0967321}
{'[0, 0, 5, 5, 5, 0, 0, 0, 8, 4, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.09534}
{'[0, 0, 5, 5, 5, 0, 0, 0, 8, 4, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.098628}
{'[0, 0, 5, 5, 5, 0, 0, 0, 8, 4, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.098598}
{'[0, 0, 5, 5, 5, 0, 0, 0, 8, 4, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.0980251}
{'[0, 0, 5, 5, 5, 0, 0, 0, 8, 4, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.0968418}
{'[0, 0, 5, 5, 5, 0, 0, 0, 8, 4, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.096554}
{'[0, 0, 5, 5, 5, 0, 0, 0, 8, 4, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.096643}
{'[0, 0, 5, 5, 5, 0, 0, 0, 8, 4, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.0965509}
{'[0, 0, 5, 5, 5, 0, 0, 0, 8, 4, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.0965719}
{'[0, 0, 5, 5, 5, 0, 0, 0, 8, 4, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.096622}
{'[0, 0, 5, 5, 5, 0, 0, 0, 8, 4, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.0965679}
{'[0, 0, 5, 5, 5, 0, 0, 0, 8, 4, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.0985541}
{'[0, 0, 5, 5, 5, 0, 0, 0, 8, 4, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.0986311}
{'[0, 0, 5, 5, 5, 0, 0, 0, 8, 4, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.0985651}
{'[0, 0, 5, 5, 5, 0, 0, 0, 8, 4, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.0986199}
{'[0, 0, 5, 5, 5, 0, 0, 0, 8, 4, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.0970759}
{'[0, 0, 5, 5, 5, 0, 0, 0, 8, 4, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.096154}
{'[0, 0, 5, 5, 5, 0, 0, 0, 8, 4, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.0966709}
{'[0, 0, 5, 5, 5, 0, 0, 0, 8, 4, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.096554}
{'[0, 0, 5, 5, 5, 0, 0, 0, 8, 4, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.0965471}
{'[0, 0, 5, 5, 5, 0, 0, 0, 8, 4, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.0965889}
{'[0, 0, 5, 5, 5, 0, 0, 0, 8, 4, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.0977859}
{'[0, 0, 5, 5, 5, 0, 0, 0, 8, 4, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.098644}
{'[0, 0, 5, 5, 5, 0, 0, 0, 8, 4, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.098572}
{'[0, 0, 5, 5, 5, 0, 0, 0, 8, 4, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.0986731}

out:
 ["{'[0, 0, 5, 5, 5, 0, 0, 0, 8, 4, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.106776}", "{'[0, 0, 5, 5, 5, 0, 0, 0, 8, 4, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.106629}", "{'[0, 0, 5, 5, 5, 0, 0, 0, 8, 4, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.10552}", "{'[0, 0, 5, 5, 5, 0, 0, 0, 8, 4, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.0967081}", "{'[0, 0, 5, 5, 5, 0, 0, 0, 8, 4, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.0967321}", "{'[0, 0, 5, 5, 5, 0, 0, 0, 8, 4, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.09534}", "{'[0, 0, 5, 5, 5, 0, 0, 0, 8, 4, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.098628}", "{'[0, 0, 5, 5, 5, 0, 0, 0, 8, 4, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.098598}", "{'[0, 0, 5, 5, 5, 0, 0, 0, 8, 4, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.0980251}", "{'[0, 0, 5, 5, 5, 0, 0, 0, 8, 4, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.0968418}", "{'[0, 0, 5, 5, 5, 0, 0, 0, 8, 4, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.096554}", "{'[0, 0, 5, 5, 5, 0, 0, 0, 8, 4, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.096643}", "{'[0, 0, 5, 5, 5, 0, 0, 0, 8, 4, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.0965509}", "{'[0, 0, 5, 5, 5, 0, 0, 0, 8, 4, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.0965719}", "{'[0, 0, 5, 5, 5, 0, 0, 0, 8, 4, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.096622}", "{'[0, 0, 5, 5, 5, 0, 0, 0, 8, 4, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.0965679}", "{'[0, 0, 5, 5, 5, 0, 0, 0, 8, 4, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.0985541}", "{'[0, 0, 5, 5, 5, 0, 0, 0, 8, 4, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.0986311}", "{'[0, 0, 5, 5, 5, 0, 0, 0, 8, 4, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.0985651}", "{'[0, 0, 5, 5, 5, 0, 0, 0, 8, 4, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.0986199}", "{'[0, 0, 5, 5, 5, 0, 0, 0, 8, 4, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.0970759}", "{'[0, 0, 5, 5, 5, 0, 0, 0, 8, 4, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.096154}", "{'[0, 0, 5, 5, 5, 0, 0, 0, 8, 4, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.0966709}", "{'[0, 0, 5, 5, 5, 0, 0, 0, 8, 4, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.096554}", "{'[0, 0, 5, 5, 5, 0, 0, 0, 8, 4, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.0965471}", "{'[0, 0, 5, 5, 5, 0, 0, 0, 8, 4, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.0965889}", "{'[0, 0, 5, 5, 5, 0, 0, 0, 8, 4, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.0977859}", "{'[0, 0, 5, 5, 5, 0, 0, 0, 8, 4, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.098644}", "{'[0, 0, 5, 5, 5, 0, 0, 0, 8, 4, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.098572}", "{'[0, 0, 5, 5, 5, 0, 0, 0, 8, 4, 0, 5, 1, 0, 1, 1, 0, 1]' : 0.0986731}"]
returning from 'run': {'[0, 0, 5, 5, 5, 0, 0, 0, 8, 4, 0, 5, 1, 0, 1, 1, 0, 1]': ([0.106776, 0.106629, 0.10552, 0.0967081, 0.0967321, 0.09534, 0.098628, 0.098598, 0.0980251, 0.0968418, 0.096554, 0.096643, 0.0965509, 0.0965719, 0.096622, 0.0965679, 0.0985541, 0.0986311, 0.0985651, 0.0986199, 0.0970759, 0.096154, 0.0966709, 0.096554, 0.0965471, 0.0965889, 0.0977859, 0.098644, 0.098572, 0.0986731], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 5, 5, 5, 0, 0, 0, 8, 4, 0, 5, 1, 0, 1, 1, 0, 1]': ([0.106776, 0.106629, 0.10552, 0.0967081, 0.0967321, 0.09534, 0.098628, 0.098598, 0.0980251, 0.0968418, 0.096554, 0.096643, 0.0965509, 0.0965719, 0.096622, 0.0965679, 0.0985541, 0.0986311, 0.0985651, 0.0986199, 0.0970759, 0.096154, 0.0966709, 0.096554, 0.0965471, 0.0965889, 0.0977859, 0.098644, 0.098572, 0.0986731], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Design Best Point:
[0, 4, 5, 4, 3, 6, 0, 0, 5, 4, 0, 4, 1, 0, 1, 1, 0, 0]
Length of requested configs: 1
Result was on Database, Returning Now
Fixed Factors: {'ACOPY_x': 0, 'ACOPY_y': 0, 'T1_I': 0, 'RT_I': 1, 'T1_K': 5, 'U_J': 0, 'U_I': 4, 'T2_J': 5, 'U1_I': 8, 'VEC2': 1, 'RT_J': 0, 'T1_J': 0}
Slowdown (Design Best): 0.561955874450478
Slowdown (Predicted Best): 0.6032730901702688
Budget: 68/180
Updating Global Best: 0.09150374333333337
Current Best Point: 
[0, 4, 5, 4, 3, 6, 0, 0, 5, 4, 0, 4, 1, 0, 1, 1, 0, 0]
Final Best Point: 
[0, 4, 5, 4, 3, 6, 0, 0, 5, 4, 0, 4, 1, 0, 1, 1, 0, 0]
Ending DOPT-ANOVA
Best Point: [0, 4, 5, 4, 3, 6, 0, 0, 5, 4, 0, 4, 1, 0, 1, 1, 0, 0]
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Speedup: 1.7794991483590665
----- end random search -----
----- begin random search summary -----
 total completed runs: 0
 total successful runs: 0
 total failed runs: 0
 speedup: 1.7794991483590665
----- end random search summary -----
----- begin summary -----
 best coordinate: [0, 4, 5, 4, 3, 6, 0, 0, 5, 4, 0, 4, 1, 0, 1, 1, 0, 0]={'ACOPY_x': False, 'ACOPY_y': False, 'RT_K': 8, 'T1_I': 1, 'T1_J': 128, 'T1_K': 256, 'U_K': 5, 'U_J': 1, 'U_I': 5, 'U1_I': 6, 'T2_K': 2048, 'T2_J': 256, 'T2_I': 512, 'VEC2': False, 'VEC1': False, 'RT_I': 8, 'SCR': True, 'RT_J': 1}, cost=9.150374e-02, transfer_time=inf, inputs=[('N', 10000)], search_time=-715.10, runs=68
----- end summary -----
Length of requested configs: 1
Result was on Database, Returning Now
----- the obtained best performance parameters -----
 ACOPY_x = False
 ACOPY_y = False
 RT_I = 8
 RT_J = 1
 RT_K = 8
 SCR = True
 T1_I = 1
 T1_J = 128
 T1_K = 256
 T2_I = 512
 T2_J = 256
 T2_K = 2048
 U1_I = 6
 U_I = 5
 U_J = 1
 U_K = 5
 VEC1 = False
 VEC2 = False
 cost_mean = 0.09150374333333337
 points = 68
 speedup_O3 = 1.7794991483590665
 technique = DLMT
Code stats:
        Number of loops: 	38
        Max loop nest depth: 	5
        Additions: 		1056
        Multiplications: 	420
        Divisions: 		0
        Logical: 		0
        Reads: 			2260
        Writes: 		462
        Comparisons:		38
        Gotos: 			0
        
----- finish optimizations -----

----- begin removing annotations from output-----
----- finished removing annotations from output-----

----- begin writing the output file(s) -----
--> writing output to: _atax2.src1.c
----- finished writing the output file(s) -----

====== END ORIO ======
