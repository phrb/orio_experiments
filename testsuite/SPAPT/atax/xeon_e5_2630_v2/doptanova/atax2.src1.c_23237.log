
====== START ORIO ======

----- begin reading the source file: atax2.src1.c -----
----- finished reading the source file -----

----- begin parsing annotations -----
----- finished parsing annotations -----

----- begin optimizations -----
Search_Space         = 8.234e+13
Number_of_Parameters = 18
Numeric_Parameters   = 13
Binary_Parameters    = 05
['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
[[1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [False, True], [False, True], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 8, 32], [1, 8, 32], [1, 8, 32], [False, True], [False, True], [False, True]]

----- begin empirical tuning for problem size -----
 N = 10000
Parameters: {'ACOPY_x': [0, 2], 'ACOPY_y': [0, 2], 'RT_K': [0, 3], 'T1_I': [0, 7], 'T1_J': [0, 7], 'T1_K': [0, 7], 'U_K': [0, 30], 'U_J': [0, 30], 'U_I': [0, 30], 'U1_I': [0, 30], 'T2_K': [0, 7], 'T2_J': [0, 7], 'T2_I': [0, 7], 'VEC2': [0, 2], 'VEC1': [0, 2], 'RT_I': [0, 3], 'SCR': [0, 2], 'RT_J': [0, 3]}
Parameter Range Values: {'ACOPY_x': [False, True], 'ACOPY_y': [False, True], 'RT_K': [1, 8, 32], 'T1_I': [1, 16, 32, 64, 128, 256, 512], 'T1_J': [1, 16, 32, 64, 128, 256, 512], 'T1_K': [1, 16, 32, 64, 128, 256, 512], 'U_K': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_J': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U1_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'T2_K': [1, 64, 128, 256, 512, 1024, 2048], 'T2_J': [1, 64, 128, 256, 512, 1024, 2048], 'T2_I': [1, 64, 128, 256, 512, 1024, 2048], 'VEC2': [False, True], 'VEC1': [False, True], 'RT_I': [1, 8, 32], 'SCR': [False, True], 'RT_J': [1, 8, 32]}

----- begin random search -----
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Inverse Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Starting DOPT-anova
Step 0
Generating valid search space of size 4600 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Valid coordinates: 920
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Valid coordinates: 1840
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Valid coordinates: 2760
Tested coordinates: 110000
Tested coordinates: 120000
Tested coordinates: 130000
Tested coordinates: 140000
Valid coordinates: 3680
Tested coordinates: 150000
Tested coordinates: 160000
Tested coordinates: 170000
Tested coordinates: 180000
Valid coordinates: 4600
Valid/Tested configurations: 4600/187368
Generated Search Space:
NULL
Clean Info:
Removed Factors: character(0)

Removed Inverse Factors: [1] "ACOPY_x" "ACOPY_y" "SCR"     "VEC1"    "VEC2"   

New Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
New Inverse Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
New Fixed Factors: {}
Full Model:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Fixed Factors: {}
Computing D-Optimal Design
Computing D-Optimal Design with 46 experiments
Design Formula:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Starting "optFederov" run
Using Search Space:
NULL
Data Dimensions: [1] 4600   18

     T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
15      3    0    1    6    4    0       1       1    8  28   0  20    0    2
204     2    5    6    1    3    4       0       1   20  10   0   5    2    0
219     4    1    3    2    5    0       1       0   26  25   0   0    2    0
290     2    0    0    2    0    0       1       1    0   0   3  17    0    0
377     2    1    5    0    0    3       1       1    0   0  11   5    1    1
436     0    1    1    5    2    2       1       1    8   4  29   0    1    1
700     6    0    5    0    1    5       1       1    7   0  27  15    2    0
756     1    0    6    1    6    0       0       0   26  25  27   0    0    1
795     6    1    2    5    2    6       0       1   20  24   7   0    0    0
1043    4    6    3    3    5    5       0       1    1  27   0   3    1    1
1060    0    6    3    0    6    1       0       0   29   0  19   2    0    0
1133    0    1    6    2    2    6       0       0    6  18   0  27    0    0
1178    3    6    5    1    4    0       1       0   25   0   1  29    1    0
1592    0    0    6    3    5    0       1       0    0  28  23   0    0    1
1656    0    0    1    0    2    6       0       0   15   0   9  10    0    1
1948    1    2    5    6    2    0       0       0   17   0  29   8    0    2
2076    5    1    1    0    6    0       0       1    1   3   3   0    0    2
2182    1    0    5    6    6    4       1       0   24   0   5  18    1    1
2215    0    0    6    0    4    6       1       1    2  15   0   2    0    2
2333    1    1    1    6    4    1       1       0    0   0  29   1    2    0
2393    4    2    5    0    0    6       0       1   11  28  27   0    1    0
2517    1    2    4    4    1    2       0       1    3   0   0   0    0    1
2522    6    3    2    4    4    1       1       0    4   0  26   9    0    0
2582    1    6    4    0    5    2       1       0    3  28   0   0    0    0
2704    0    0    1    2    0    2       1       0   21  22   0   7    1    0
2827    2    2    0    2    6    2       0       1    5   2  12   0    2    0
2929    6    0    0    0    4    1       0       1    0   0  24  26    1    0
3049    3    2    2    6    6    6       0       0    0  27   0  29    1    0
3085    6    6    0    0    4    4       1       0   28  13   4   0    0    2
3283    2    0    4    3    0    6       0       0    0   7  29   0    0    0
3357    2    6    1    6    0    5       0       0    3   5  28   0    0    1
3359    5    6    1    6    6    0       0       0    3   0   9   4    0    0
3465    6    2    6    6    6    4       1       1   24  21   0  18    0    1
3813    0    1    0    2    6    6       1       1   13   0   0   3    1    0
4017    3    0    2    0    6    2       1       1   18   3   0  18    0    0
4039    6    5    0    6    6    3       0       1   24   0   0  16    0    2
4074    3    0    0    1    6    0       0       0   25   0  23   9    1    0
4196    6    6    5    0    0    0       1       0    3  18   0  24    0    1
4347    0    5    5    6    0    0       0       1   27   0   9  28    2    0
4351    0    2    0    0    6    0       0       0   16  14   0  27    0    0
4370    4    0    5    4    0    0       1       0   20   2   0   0    1    1
4382    3    4    1    4    6    6       1       1   25   0  29  29    0    0
4454    0    1    3    1    0    2       0       0    2   0  16  29    0    2
4489    2    4    0    6    6    2       1       0   14  25   4   0    0    0
4565    2    2    0    0    1    3       0       0   23  22   0  15    0    1
4588    1    2    4    6    2    0       0       1   29   3   0   4    1    0
     RT_K SCR VEC1 VEC2
15      0   0    0    0
204     0   0    0    0
219     0   0    1    0
290     2   1    1    0
377     0   0    0    0
436     0   1    0    0
700     0   0    0    1
756     0   0    1    1
795     2   1    0    0
1043    0   0    1    0
1060    1   1    0    0
1133    1   1    1    0
1178    1   0    1    1
1592    1   1    0    1
1656    0   0    1    1
1948    0   1    1    0
2076    0   0    1    1
2182    0   1    0    0
2215    0   1    0    1
2333    0   0    1    0
2393    1   0    1    0
2517    1   0    0    0
2522    2   1    1    1
2582    2   0    0    1
2704    1   1    0    1
2827    0   1    1    1
2929    0   1    1    0
3049    1   1    0    1
3085    0   1    0    0
3283    0   0    1    0
3357    1   0    1    1
3359    0   1    0    0
3465    1   0    1    0
3813    0   1    1    1
4017    1   1    1    0
4039    0   0    0    0
4074    1   0    0    1
4196    0   0    0    0
4347    0   1    1    1
4351    2   0    0    0
4370    0   1    1    0
4382    0   1    0    1
4454    0   0    0    1
4489    0   0    0    1
4565    0   1    0    1
4588    0   0    1    1

D-Efficiency Approximation: [1] 0.402

Measuring design of size 46
Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Length of requested configs: 1
Code stats:
        Number of loops: 	162
        Max loop nest depth: 	5
        Additions: 		14020
        Multiplications: 	3240
        Divisions: 		0
        Logical: 		0
        Reads: 			20256
        Writes: 		2074
        Comparisons:		162
        Gotos: 			0
        
 building the original code:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -DORIGINAL -o __orio_perftest_original.exe __orio_perftest1.c timer_cpu.o -lm
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest1.exe __orio_perftest1.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest1.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest1.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest1.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest1.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = jjj
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	68
        Max loop nest depth: 	5
        Additions: 		3072
        Multiplications: 	704
        Divisions: 		0
        Logical: 		0
        Reads: 			4852
        Writes: 		549
        Comparisons:		68
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest2.exe __orio_perftest2.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest2.exe  
Program Test Output: 
{'[2, 5, 6, 1, 3, 4, 0, 1, 20, 10, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.20432}
{'[2, 5, 6, 1, 3, 4, 0, 1, 20, 10, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.204109}
{'[2, 5, 6, 1, 3, 4, 0, 1, 20, 10, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.195654}
{'[2, 5, 6, 1, 3, 4, 0, 1, 20, 10, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.178865}
{'[2, 5, 6, 1, 3, 4, 0, 1, 20, 10, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.182461}
{'[2, 5, 6, 1, 3, 4, 0, 1, 20, 10, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.186286}
{'[2, 5, 6, 1, 3, 4, 0, 1, 20, 10, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.186458}
{'[2, 5, 6, 1, 3, 4, 0, 1, 20, 10, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.187142}
{'[2, 5, 6, 1, 3, 4, 0, 1, 20, 10, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.186411}
{'[2, 5, 6, 1, 3, 4, 0, 1, 20, 10, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.186689}
{'[2, 5, 6, 1, 3, 4, 0, 1, 20, 10, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.18565}
{'[2, 5, 6, 1, 3, 4, 0, 1, 20, 10, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.18623}
{'[2, 5, 6, 1, 3, 4, 0, 1, 20, 10, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.185017}
{'[2, 5, 6, 1, 3, 4, 0, 1, 20, 10, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.186113}
{'[2, 5, 6, 1, 3, 4, 0, 1, 20, 10, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.18669}
{'[2, 5, 6, 1, 3, 4, 0, 1, 20, 10, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.186561}
{'[2, 5, 6, 1, 3, 4, 0, 1, 20, 10, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.18612}
{'[2, 5, 6, 1, 3, 4, 0, 1, 20, 10, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.1863}
{'[2, 5, 6, 1, 3, 4, 0, 1, 20, 10, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.18635}
{'[2, 5, 6, 1, 3, 4, 0, 1, 20, 10, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.186851}
{'[2, 5, 6, 1, 3, 4, 0, 1, 20, 10, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.186907}
{'[2, 5, 6, 1, 3, 4, 0, 1, 20, 10, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.186548}
{'[2, 5, 6, 1, 3, 4, 0, 1, 20, 10, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.184713}
{'[2, 5, 6, 1, 3, 4, 0, 1, 20, 10, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.184212}
{'[2, 5, 6, 1, 3, 4, 0, 1, 20, 10, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.181876}
{'[2, 5, 6, 1, 3, 4, 0, 1, 20, 10, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.18176}
{'[2, 5, 6, 1, 3, 4, 0, 1, 20, 10, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.186386}
{'[2, 5, 6, 1, 3, 4, 0, 1, 20, 10, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.18625}
{'[2, 5, 6, 1, 3, 4, 0, 1, 20, 10, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.187187}
{'[2, 5, 6, 1, 3, 4, 0, 1, 20, 10, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.186282}

out:
 ["{'[2, 5, 6, 1, 3, 4, 0, 1, 20, 10, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.20432}", "{'[2, 5, 6, 1, 3, 4, 0, 1, 20, 10, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.204109}", "{'[2, 5, 6, 1, 3, 4, 0, 1, 20, 10, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.195654}", "{'[2, 5, 6, 1, 3, 4, 0, 1, 20, 10, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.178865}", "{'[2, 5, 6, 1, 3, 4, 0, 1, 20, 10, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.182461}", "{'[2, 5, 6, 1, 3, 4, 0, 1, 20, 10, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.186286}", "{'[2, 5, 6, 1, 3, 4, 0, 1, 20, 10, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.186458}", "{'[2, 5, 6, 1, 3, 4, 0, 1, 20, 10, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.187142}", "{'[2, 5, 6, 1, 3, 4, 0, 1, 20, 10, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.186411}", "{'[2, 5, 6, 1, 3, 4, 0, 1, 20, 10, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.186689}", "{'[2, 5, 6, 1, 3, 4, 0, 1, 20, 10, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.18565}", "{'[2, 5, 6, 1, 3, 4, 0, 1, 20, 10, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.18623}", "{'[2, 5, 6, 1, 3, 4, 0, 1, 20, 10, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.185017}", "{'[2, 5, 6, 1, 3, 4, 0, 1, 20, 10, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.186113}", "{'[2, 5, 6, 1, 3, 4, 0, 1, 20, 10, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.18669}", "{'[2, 5, 6, 1, 3, 4, 0, 1, 20, 10, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.186561}", "{'[2, 5, 6, 1, 3, 4, 0, 1, 20, 10, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.18612}", "{'[2, 5, 6, 1, 3, 4, 0, 1, 20, 10, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.1863}", "{'[2, 5, 6, 1, 3, 4, 0, 1, 20, 10, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.18635}", "{'[2, 5, 6, 1, 3, 4, 0, 1, 20, 10, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.186851}", "{'[2, 5, 6, 1, 3, 4, 0, 1, 20, 10, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.186907}", "{'[2, 5, 6, 1, 3, 4, 0, 1, 20, 10, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.186548}", "{'[2, 5, 6, 1, 3, 4, 0, 1, 20, 10, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.184713}", "{'[2, 5, 6, 1, 3, 4, 0, 1, 20, 10, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.184212}", "{'[2, 5, 6, 1, 3, 4, 0, 1, 20, 10, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.181876}", "{'[2, 5, 6, 1, 3, 4, 0, 1, 20, 10, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.18176}", "{'[2, 5, 6, 1, 3, 4, 0, 1, 20, 10, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.186386}", "{'[2, 5, 6, 1, 3, 4, 0, 1, 20, 10, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.18625}", "{'[2, 5, 6, 1, 3, 4, 0, 1, 20, 10, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.187187}", "{'[2, 5, 6, 1, 3, 4, 0, 1, 20, 10, 0, 5, 2, 0, 0, 0, 0, 0]' : 0.186282}"]
returning from 'run': {'[2, 5, 6, 1, 3, 4, 0, 1, 20, 10, 0, 5, 2, 0, 0, 0, 0, 0]': ([0.20432, 0.204109, 0.195654, 0.178865, 0.182461, 0.186286, 0.186458, 0.187142, 0.186411, 0.186689, 0.18565, 0.18623, 0.185017, 0.186113, 0.18669, 0.186561, 0.18612, 0.1863, 0.18635, 0.186851, 0.186907, 0.186548, 0.184713, 0.184212, 0.181876, 0.18176, 0.186386, 0.18625, 0.187187, 0.186282], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 5, 6, 1, 3, 4, 0, 1, 20, 10, 0, 5, 2, 0, 0, 0, 0, 0]': ([0.20432, 0.204109, 0.195654, 0.178865, 0.182461, 0.186286, 0.186458, 0.187142, 0.186411, 0.186689, 0.18565, 0.18623, 0.185017, 0.186113, 0.18669, 0.186561, 0.18612, 0.1863, 0.18635, 0.186851, 0.186907, 0.186548, 0.184713, 0.184212, 0.181876, 0.18176, 0.186386, 0.18625, 0.187187, 0.186282], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = iii
Code stats:
        Number of loops: 	49
        Max loop nest depth: 	5
        Additions: 		806
        Multiplications: 	236
        Divisions: 		0
        Logical: 		0
        Reads: 			1828
        Writes: 		303
        Comparisons:		49
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest3.exe __orio_perftest3.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest3.exe  
Program Test Output: 
{'[4, 1, 3, 2, 5, 0, 1, 0, 26, 25, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.190444}
{'[4, 1, 3, 2, 5, 0, 1, 0, 26, 25, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.191777}
{'[4, 1, 3, 2, 5, 0, 1, 0, 26, 25, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.189573}
{'[4, 1, 3, 2, 5, 0, 1, 0, 26, 25, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.187293}
{'[4, 1, 3, 2, 5, 0, 1, 0, 26, 25, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.187482}
{'[4, 1, 3, 2, 5, 0, 1, 0, 26, 25, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.190705}
{'[4, 1, 3, 2, 5, 0, 1, 0, 26, 25, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.19134}
{'[4, 1, 3, 2, 5, 0, 1, 0, 26, 25, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.191319}
{'[4, 1, 3, 2, 5, 0, 1, 0, 26, 25, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.191863}
{'[4, 1, 3, 2, 5, 0, 1, 0, 26, 25, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.19184}
{'[4, 1, 3, 2, 5, 0, 1, 0, 26, 25, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.191719}
{'[4, 1, 3, 2, 5, 0, 1, 0, 26, 25, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.190071}
{'[4, 1, 3, 2, 5, 0, 1, 0, 26, 25, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.192442}
{'[4, 1, 3, 2, 5, 0, 1, 0, 26, 25, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.191931}
{'[4, 1, 3, 2, 5, 0, 1, 0, 26, 25, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.191782}
{'[4, 1, 3, 2, 5, 0, 1, 0, 26, 25, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.191426}
{'[4, 1, 3, 2, 5, 0, 1, 0, 26, 25, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.191196}
{'[4, 1, 3, 2, 5, 0, 1, 0, 26, 25, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.19159}
{'[4, 1, 3, 2, 5, 0, 1, 0, 26, 25, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.188557}
{'[4, 1, 3, 2, 5, 0, 1, 0, 26, 25, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.191263}
{'[4, 1, 3, 2, 5, 0, 1, 0, 26, 25, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.191909}
{'[4, 1, 3, 2, 5, 0, 1, 0, 26, 25, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.189232}
{'[4, 1, 3, 2, 5, 0, 1, 0, 26, 25, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.187941}
{'[4, 1, 3, 2, 5, 0, 1, 0, 26, 25, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.188625}
{'[4, 1, 3, 2, 5, 0, 1, 0, 26, 25, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.19186}
{'[4, 1, 3, 2, 5, 0, 1, 0, 26, 25, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.191757}
{'[4, 1, 3, 2, 5, 0, 1, 0, 26, 25, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.191943}
{'[4, 1, 3, 2, 5, 0, 1, 0, 26, 25, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.190884}
{'[4, 1, 3, 2, 5, 0, 1, 0, 26, 25, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.191942}
{'[4, 1, 3, 2, 5, 0, 1, 0, 26, 25, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.192354}

out:
 ["{'[4, 1, 3, 2, 5, 0, 1, 0, 26, 25, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.190444}", "{'[4, 1, 3, 2, 5, 0, 1, 0, 26, 25, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.191777}", "{'[4, 1, 3, 2, 5, 0, 1, 0, 26, 25, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.189573}", "{'[4, 1, 3, 2, 5, 0, 1, 0, 26, 25, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.187293}", "{'[4, 1, 3, 2, 5, 0, 1, 0, 26, 25, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.187482}", "{'[4, 1, 3, 2, 5, 0, 1, 0, 26, 25, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.190705}", "{'[4, 1, 3, 2, 5, 0, 1, 0, 26, 25, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.19134}", "{'[4, 1, 3, 2, 5, 0, 1, 0, 26, 25, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.191319}", "{'[4, 1, 3, 2, 5, 0, 1, 0, 26, 25, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.191863}", "{'[4, 1, 3, 2, 5, 0, 1, 0, 26, 25, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.19184}", "{'[4, 1, 3, 2, 5, 0, 1, 0, 26, 25, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.191719}", "{'[4, 1, 3, 2, 5, 0, 1, 0, 26, 25, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.190071}", "{'[4, 1, 3, 2, 5, 0, 1, 0, 26, 25, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.192442}", "{'[4, 1, 3, 2, 5, 0, 1, 0, 26, 25, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.191931}", "{'[4, 1, 3, 2, 5, 0, 1, 0, 26, 25, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.191782}", "{'[4, 1, 3, 2, 5, 0, 1, 0, 26, 25, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.191426}", "{'[4, 1, 3, 2, 5, 0, 1, 0, 26, 25, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.191196}", "{'[4, 1, 3, 2, 5, 0, 1, 0, 26, 25, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.19159}", "{'[4, 1, 3, 2, 5, 0, 1, 0, 26, 25, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.188557}", "{'[4, 1, 3, 2, 5, 0, 1, 0, 26, 25, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.191263}", "{'[4, 1, 3, 2, 5, 0, 1, 0, 26, 25, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.191909}", "{'[4, 1, 3, 2, 5, 0, 1, 0, 26, 25, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.189232}", "{'[4, 1, 3, 2, 5, 0, 1, 0, 26, 25, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.187941}", "{'[4, 1, 3, 2, 5, 0, 1, 0, 26, 25, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.188625}", "{'[4, 1, 3, 2, 5, 0, 1, 0, 26, 25, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.19186}", "{'[4, 1, 3, 2, 5, 0, 1, 0, 26, 25, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.191757}", "{'[4, 1, 3, 2, 5, 0, 1, 0, 26, 25, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.191943}", "{'[4, 1, 3, 2, 5, 0, 1, 0, 26, 25, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.190884}", "{'[4, 1, 3, 2, 5, 0, 1, 0, 26, 25, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.191942}", "{'[4, 1, 3, 2, 5, 0, 1, 0, 26, 25, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.192354}"]
returning from 'run': {'[4, 1, 3, 2, 5, 0, 1, 0, 26, 25, 0, 0, 2, 0, 0, 0, 1, 0]': ([0.190444, 0.191777, 0.189573, 0.187293, 0.187482, 0.190705, 0.19134, 0.191319, 0.191863, 0.19184, 0.191719, 0.190071, 0.192442, 0.191931, 0.191782, 0.191426, 0.191196, 0.19159, 0.188557, 0.191263, 0.191909, 0.189232, 0.187941, 0.188625, 0.19186, 0.191757, 0.191943, 0.190884, 0.191942, 0.192354], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 1, 3, 2, 5, 0, 1, 0, 26, 25, 0, 0, 2, 0, 0, 0, 1, 0]': ([0.190444, 0.191777, 0.189573, 0.187293, 0.187482, 0.190705, 0.19134, 0.191319, 0.191863, 0.19184, 0.191719, 0.190071, 0.192442, 0.191931, 0.191782, 0.191426, 0.191196, 0.19159, 0.188557, 0.191263, 0.191909, 0.189232, 0.187941, 0.188625, 0.19186, 0.191757, 0.191943, 0.190884, 0.191942, 0.192354], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	7
        Max loop nest depth: 	4
        Additions: 		192
        Multiplications: 	74
        Divisions: 		0
        Logical: 		0
        Reads: 			508
        Writes: 		120
        Comparisons:		7
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest4.exe __orio_perftest4.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest4.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest4.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest4.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest4.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = kkk
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	4
        Additions: 		1078
        Multiplications: 	270
        Divisions: 		0
        Logical: 		0
        Reads: 			1720
        Writes: 		184
        Comparisons:		20
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest5.exe __orio_perftest5.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest5.exe  
Program Test Output: 
{'[2, 1, 5, 0, 0, 3, 1, 1, 0, 0, 11, 5, 1, 1, 0, 0, 0, 0]' : 0.111999}
{'[2, 1, 5, 0, 0, 3, 1, 1, 0, 0, 11, 5, 1, 1, 0, 0, 0, 0]' : 0.111838}
{'[2, 1, 5, 0, 0, 3, 1, 1, 0, 0, 11, 5, 1, 1, 0, 0, 0, 0]' : 0.111597}
{'[2, 1, 5, 0, 0, 3, 1, 1, 0, 0, 11, 5, 1, 1, 0, 0, 0, 0]' : 0.111829}
{'[2, 1, 5, 0, 0, 3, 1, 1, 0, 0, 11, 5, 1, 1, 0, 0, 0, 0]' : 0.111827}
{'[2, 1, 5, 0, 0, 3, 1, 1, 0, 0, 11, 5, 1, 1, 0, 0, 0, 0]' : 0.111808}
{'[2, 1, 5, 0, 0, 3, 1, 1, 0, 0, 11, 5, 1, 1, 0, 0, 0, 0]' : 0.111657}
{'[2, 1, 5, 0, 0, 3, 1, 1, 0, 0, 11, 5, 1, 1, 0, 0, 0, 0]' : 0.111898}
{'[2, 1, 5, 0, 0, 3, 1, 1, 0, 0, 11, 5, 1, 1, 0, 0, 0, 0]' : 0.112109}
{'[2, 1, 5, 0, 0, 3, 1, 1, 0, 0, 11, 5, 1, 1, 0, 0, 0, 0]' : 0.111782}
{'[2, 1, 5, 0, 0, 3, 1, 1, 0, 0, 11, 5, 1, 1, 0, 0, 0, 0]' : 0.111649}
{'[2, 1, 5, 0, 0, 3, 1, 1, 0, 0, 11, 5, 1, 1, 0, 0, 0, 0]' : 0.111881}
{'[2, 1, 5, 0, 0, 3, 1, 1, 0, 0, 11, 5, 1, 1, 0, 0, 0, 0]' : 0.111956}
{'[2, 1, 5, 0, 0, 3, 1, 1, 0, 0, 11, 5, 1, 1, 0, 0, 0, 0]' : 0.11181}
{'[2, 1, 5, 0, 0, 3, 1, 1, 0, 0, 11, 5, 1, 1, 0, 0, 0, 0]' : 0.111705}
{'[2, 1, 5, 0, 0, 3, 1, 1, 0, 0, 11, 5, 1, 1, 0, 0, 0, 0]' : 0.111822}
{'[2, 1, 5, 0, 0, 3, 1, 1, 0, 0, 11, 5, 1, 1, 0, 0, 0, 0]' : 0.111938}
{'[2, 1, 5, 0, 0, 3, 1, 1, 0, 0, 11, 5, 1, 1, 0, 0, 0, 0]' : 0.11149}
{'[2, 1, 5, 0, 0, 3, 1, 1, 0, 0, 11, 5, 1, 1, 0, 0, 0, 0]' : 0.111312}
{'[2, 1, 5, 0, 0, 3, 1, 1, 0, 0, 11, 5, 1, 1, 0, 0, 0, 0]' : 0.111529}
{'[2, 1, 5, 0, 0, 3, 1, 1, 0, 0, 11, 5, 1, 1, 0, 0, 0, 0]' : 0.111555}
{'[2, 1, 5, 0, 0, 3, 1, 1, 0, 0, 11, 5, 1, 1, 0, 0, 0, 0]' : 0.109477}
{'[2, 1, 5, 0, 0, 3, 1, 1, 0, 0, 11, 5, 1, 1, 0, 0, 0, 0]' : 0.111463}
{'[2, 1, 5, 0, 0, 3, 1, 1, 0, 0, 11, 5, 1, 1, 0, 0, 0, 0]' : 0.111779}
{'[2, 1, 5, 0, 0, 3, 1, 1, 0, 0, 11, 5, 1, 1, 0, 0, 0, 0]' : 0.111833}
{'[2, 1, 5, 0, 0, 3, 1, 1, 0, 0, 11, 5, 1, 1, 0, 0, 0, 0]' : 0.112018}
{'[2, 1, 5, 0, 0, 3, 1, 1, 0, 0, 11, 5, 1, 1, 0, 0, 0, 0]' : 0.111604}
{'[2, 1, 5, 0, 0, 3, 1, 1, 0, 0, 11, 5, 1, 1, 0, 0, 0, 0]' : 0.111575}
{'[2, 1, 5, 0, 0, 3, 1, 1, 0, 0, 11, 5, 1, 1, 0, 0, 0, 0]' : 0.111644}
{'[2, 1, 5, 0, 0, 3, 1, 1, 0, 0, 11, 5, 1, 1, 0, 0, 0, 0]' : 0.111499}

out:
 ["{'[2, 1, 5, 0, 0, 3, 1, 1, 0, 0, 11, 5, 1, 1, 0, 0, 0, 0]' : 0.111999}", "{'[2, 1, 5, 0, 0, 3, 1, 1, 0, 0, 11, 5, 1, 1, 0, 0, 0, 0]' : 0.111838}", "{'[2, 1, 5, 0, 0, 3, 1, 1, 0, 0, 11, 5, 1, 1, 0, 0, 0, 0]' : 0.111597}", "{'[2, 1, 5, 0, 0, 3, 1, 1, 0, 0, 11, 5, 1, 1, 0, 0, 0, 0]' : 0.111829}", "{'[2, 1, 5, 0, 0, 3, 1, 1, 0, 0, 11, 5, 1, 1, 0, 0, 0, 0]' : 0.111827}", "{'[2, 1, 5, 0, 0, 3, 1, 1, 0, 0, 11, 5, 1, 1, 0, 0, 0, 0]' : 0.111808}", "{'[2, 1, 5, 0, 0, 3, 1, 1, 0, 0, 11, 5, 1, 1, 0, 0, 0, 0]' : 0.111657}", "{'[2, 1, 5, 0, 0, 3, 1, 1, 0, 0, 11, 5, 1, 1, 0, 0, 0, 0]' : 0.111898}", "{'[2, 1, 5, 0, 0, 3, 1, 1, 0, 0, 11, 5, 1, 1, 0, 0, 0, 0]' : 0.112109}", "{'[2, 1, 5, 0, 0, 3, 1, 1, 0, 0, 11, 5, 1, 1, 0, 0, 0, 0]' : 0.111782}", "{'[2, 1, 5, 0, 0, 3, 1, 1, 0, 0, 11, 5, 1, 1, 0, 0, 0, 0]' : 0.111649}", "{'[2, 1, 5, 0, 0, 3, 1, 1, 0, 0, 11, 5, 1, 1, 0, 0, 0, 0]' : 0.111881}", "{'[2, 1, 5, 0, 0, 3, 1, 1, 0, 0, 11, 5, 1, 1, 0, 0, 0, 0]' : 0.111956}", "{'[2, 1, 5, 0, 0, 3, 1, 1, 0, 0, 11, 5, 1, 1, 0, 0, 0, 0]' : 0.11181}", "{'[2, 1, 5, 0, 0, 3, 1, 1, 0, 0, 11, 5, 1, 1, 0, 0, 0, 0]' : 0.111705}", "{'[2, 1, 5, 0, 0, 3, 1, 1, 0, 0, 11, 5, 1, 1, 0, 0, 0, 0]' : 0.111822}", "{'[2, 1, 5, 0, 0, 3, 1, 1, 0, 0, 11, 5, 1, 1, 0, 0, 0, 0]' : 0.111938}", "{'[2, 1, 5, 0, 0, 3, 1, 1, 0, 0, 11, 5, 1, 1, 0, 0, 0, 0]' : 0.11149}", "{'[2, 1, 5, 0, 0, 3, 1, 1, 0, 0, 11, 5, 1, 1, 0, 0, 0, 0]' : 0.111312}", "{'[2, 1, 5, 0, 0, 3, 1, 1, 0, 0, 11, 5, 1, 1, 0, 0, 0, 0]' : 0.111529}", "{'[2, 1, 5, 0, 0, 3, 1, 1, 0, 0, 11, 5, 1, 1, 0, 0, 0, 0]' : 0.111555}", "{'[2, 1, 5, 0, 0, 3, 1, 1, 0, 0, 11, 5, 1, 1, 0, 0, 0, 0]' : 0.109477}", "{'[2, 1, 5, 0, 0, 3, 1, 1, 0, 0, 11, 5, 1, 1, 0, 0, 0, 0]' : 0.111463}", "{'[2, 1, 5, 0, 0, 3, 1, 1, 0, 0, 11, 5, 1, 1, 0, 0, 0, 0]' : 0.111779}", "{'[2, 1, 5, 0, 0, 3, 1, 1, 0, 0, 11, 5, 1, 1, 0, 0, 0, 0]' : 0.111833}", "{'[2, 1, 5, 0, 0, 3, 1, 1, 0, 0, 11, 5, 1, 1, 0, 0, 0, 0]' : 0.112018}", "{'[2, 1, 5, 0, 0, 3, 1, 1, 0, 0, 11, 5, 1, 1, 0, 0, 0, 0]' : 0.111604}", "{'[2, 1, 5, 0, 0, 3, 1, 1, 0, 0, 11, 5, 1, 1, 0, 0, 0, 0]' : 0.111575}", "{'[2, 1, 5, 0, 0, 3, 1, 1, 0, 0, 11, 5, 1, 1, 0, 0, 0, 0]' : 0.111644}", "{'[2, 1, 5, 0, 0, 3, 1, 1, 0, 0, 11, 5, 1, 1, 0, 0, 0, 0]' : 0.111499}"]
returning from 'run': {'[2, 1, 5, 0, 0, 3, 1, 1, 0, 0, 11, 5, 1, 1, 0, 0, 0, 0]': ([0.111999, 0.111838, 0.111597, 0.111829, 0.111827, 0.111808, 0.111657, 0.111898, 0.112109, 0.111782, 0.111649, 0.111881, 0.111956, 0.11181, 0.111705, 0.111822, 0.111938, 0.11149, 0.111312, 0.111529, 0.111555, 0.109477, 0.111463, 0.111779, 0.111833, 0.112018, 0.111604, 0.111575, 0.111644, 0.111499], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 1, 5, 0, 0, 3, 1, 1, 0, 0, 11, 5, 1, 1, 0, 0, 0, 0]': ([0.111999, 0.111838, 0.111597, 0.111829, 0.111827, 0.111808, 0.111657, 0.111898, 0.112109, 0.111782, 0.111649, 0.111881, 0.111956, 0.11181, 0.111705, 0.111822, 0.111938, 0.11149, 0.111312, 0.111529, 0.111555, 0.109477, 0.111463, 0.111779, 0.111833, 0.112018, 0.111604, 0.111575, 0.111644, 0.111499], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	45
        Max loop nest depth: 	5
        Additions: 		694
        Multiplications: 	252
        Divisions: 		0
        Logical: 		0
        Reads: 			1505
        Writes: 		304
        Comparisons:		45
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest6.exe __orio_perftest6.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest6.exe  
Program Test Output: 
{'[0, 1, 1, 5, 2, 2, 1, 1, 8, 4, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.120355}
{'[0, 1, 1, 5, 2, 2, 1, 1, 8, 4, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.120313}
{'[0, 1, 1, 5, 2, 2, 1, 1, 8, 4, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.119999}
{'[0, 1, 1, 5, 2, 2, 1, 1, 8, 4, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.108658}
{'[0, 1, 1, 5, 2, 2, 1, 1, 8, 4, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.107571}
{'[0, 1, 1, 5, 2, 2, 1, 1, 8, 4, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.107607}
{'[0, 1, 1, 5, 2, 2, 1, 1, 8, 4, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.107644}
{'[0, 1, 1, 5, 2, 2, 1, 1, 8, 4, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.107595}
{'[0, 1, 1, 5, 2, 2, 1, 1, 8, 4, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.107593}
{'[0, 1, 1, 5, 2, 2, 1, 1, 8, 4, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.107599}
{'[0, 1, 1, 5, 2, 2, 1, 1, 8, 4, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.107786}
{'[0, 1, 1, 5, 2, 2, 1, 1, 8, 4, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.107632}
{'[0, 1, 1, 5, 2, 2, 1, 1, 8, 4, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.107588}
{'[0, 1, 1, 5, 2, 2, 1, 1, 8, 4, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.107615}
{'[0, 1, 1, 5, 2, 2, 1, 1, 8, 4, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.105691}
{'[0, 1, 1, 5, 2, 2, 1, 1, 8, 4, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.103305}
{'[0, 1, 1, 5, 2, 2, 1, 1, 8, 4, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.105061}
{'[0, 1, 1, 5, 2, 2, 1, 1, 8, 4, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.105025}
{'[0, 1, 1, 5, 2, 2, 1, 1, 8, 4, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.105075}
{'[0, 1, 1, 5, 2, 2, 1, 1, 8, 4, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.105048}
{'[0, 1, 1, 5, 2, 2, 1, 1, 8, 4, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.105096}
{'[0, 1, 1, 5, 2, 2, 1, 1, 8, 4, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.105188}
{'[0, 1, 1, 5, 2, 2, 1, 1, 8, 4, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.10508}
{'[0, 1, 1, 5, 2, 2, 1, 1, 8, 4, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.105045}
{'[0, 1, 1, 5, 2, 2, 1, 1, 8, 4, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.105094}
{'[0, 1, 1, 5, 2, 2, 1, 1, 8, 4, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.10509}
{'[0, 1, 1, 5, 2, 2, 1, 1, 8, 4, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.105076}
{'[0, 1, 1, 5, 2, 2, 1, 1, 8, 4, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.105063}
{'[0, 1, 1, 5, 2, 2, 1, 1, 8, 4, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.105165}
{'[0, 1, 1, 5, 2, 2, 1, 1, 8, 4, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.105333}

out:
 ["{'[0, 1, 1, 5, 2, 2, 1, 1, 8, 4, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.120355}", "{'[0, 1, 1, 5, 2, 2, 1, 1, 8, 4, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.120313}", "{'[0, 1, 1, 5, 2, 2, 1, 1, 8, 4, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.119999}", "{'[0, 1, 1, 5, 2, 2, 1, 1, 8, 4, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.108658}", "{'[0, 1, 1, 5, 2, 2, 1, 1, 8, 4, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.107571}", "{'[0, 1, 1, 5, 2, 2, 1, 1, 8, 4, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.107607}", "{'[0, 1, 1, 5, 2, 2, 1, 1, 8, 4, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.107644}", "{'[0, 1, 1, 5, 2, 2, 1, 1, 8, 4, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.107595}", "{'[0, 1, 1, 5, 2, 2, 1, 1, 8, 4, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.107593}", "{'[0, 1, 1, 5, 2, 2, 1, 1, 8, 4, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.107599}", "{'[0, 1, 1, 5, 2, 2, 1, 1, 8, 4, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.107786}", "{'[0, 1, 1, 5, 2, 2, 1, 1, 8, 4, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.107632}", "{'[0, 1, 1, 5, 2, 2, 1, 1, 8, 4, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.107588}", "{'[0, 1, 1, 5, 2, 2, 1, 1, 8, 4, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.107615}", "{'[0, 1, 1, 5, 2, 2, 1, 1, 8, 4, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.105691}", "{'[0, 1, 1, 5, 2, 2, 1, 1, 8, 4, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.103305}", "{'[0, 1, 1, 5, 2, 2, 1, 1, 8, 4, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.105061}", "{'[0, 1, 1, 5, 2, 2, 1, 1, 8, 4, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.105025}", "{'[0, 1, 1, 5, 2, 2, 1, 1, 8, 4, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.105075}", "{'[0, 1, 1, 5, 2, 2, 1, 1, 8, 4, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.105048}", "{'[0, 1, 1, 5, 2, 2, 1, 1, 8, 4, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.105096}", "{'[0, 1, 1, 5, 2, 2, 1, 1, 8, 4, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.105188}", "{'[0, 1, 1, 5, 2, 2, 1, 1, 8, 4, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.10508}", "{'[0, 1, 1, 5, 2, 2, 1, 1, 8, 4, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.105045}", "{'[0, 1, 1, 5, 2, 2, 1, 1, 8, 4, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.105094}", "{'[0, 1, 1, 5, 2, 2, 1, 1, 8, 4, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.10509}", "{'[0, 1, 1, 5, 2, 2, 1, 1, 8, 4, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.105076}", "{'[0, 1, 1, 5, 2, 2, 1, 1, 8, 4, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.105063}", "{'[0, 1, 1, 5, 2, 2, 1, 1, 8, 4, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.105165}", "{'[0, 1, 1, 5, 2, 2, 1, 1, 8, 4, 29, 0, 1, 1, 0, 1, 0, 0]' : 0.105333}"]
returning from 'run': {'[0, 1, 1, 5, 2, 2, 1, 1, 8, 4, 29, 0, 1, 1, 0, 1, 0, 0]': ([0.120355, 0.120313, 0.119999, 0.108658, 0.107571, 0.107607, 0.107644, 0.107595, 0.107593, 0.107599, 0.107786, 0.107632, 0.107588, 0.107615, 0.105691, 0.103305, 0.105061, 0.105025, 0.105075, 0.105048, 0.105096, 0.105188, 0.10508, 0.105045, 0.105094, 0.10509, 0.105076, 0.105063, 0.105165, 0.105333], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 1, 1, 5, 2, 2, 1, 1, 8, 4, 29, 0, 1, 1, 0, 1, 0, 0]': ([0.120355, 0.120313, 0.119999, 0.108658, 0.107571, 0.107607, 0.107644, 0.107595, 0.107593, 0.107599, 0.107786, 0.107632, 0.107588, 0.107615, 0.105691, 0.103305, 0.105061, 0.105025, 0.105075, 0.105048, 0.105096, 0.105188, 0.10508, 0.105045, 0.105094, 0.10509, 0.105076, 0.105063, 0.105165, 0.105333], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	25
        Max loop nest depth: 	5
        Additions: 		12258
        Multiplications: 	3036
        Divisions: 		0
        Logical: 		0
        Reads: 			17514
        Writes: 		1597
        Comparisons:		25
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest7.exe __orio_perftest7.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest7.exe  
Program Test Output: 
{'[6, 0, 5, 0, 1, 5, 1, 1, 7, 0, 27, 15, 2, 0, 0, 0, 0, 1]' : 0.315514}
{'[6, 0, 5, 0, 1, 5, 1, 1, 7, 0, 27, 15, 2, 0, 0, 0, 0, 1]' : 0.302117}
{'[6, 0, 5, 0, 1, 5, 1, 1, 7, 0, 27, 15, 2, 0, 0, 0, 0, 1]' : 0.292291}
{'[6, 0, 5, 0, 1, 5, 1, 1, 7, 0, 27, 15, 2, 0, 0, 0, 0, 1]' : 0.293497}
{'[6, 0, 5, 0, 1, 5, 1, 1, 7, 0, 27, 15, 2, 0, 0, 0, 0, 1]' : 0.291683}
{'[6, 0, 5, 0, 1, 5, 1, 1, 7, 0, 27, 15, 2, 0, 0, 0, 0, 1]' : 0.291378}
{'[6, 0, 5, 0, 1, 5, 1, 1, 7, 0, 27, 15, 2, 0, 0, 0, 0, 1]' : 0.291299}
{'[6, 0, 5, 0, 1, 5, 1, 1, 7, 0, 27, 15, 2, 0, 0, 0, 0, 1]' : 0.291986}
{'[6, 0, 5, 0, 1, 5, 1, 1, 7, 0, 27, 15, 2, 0, 0, 0, 0, 1]' : 0.292431}
{'[6, 0, 5, 0, 1, 5, 1, 1, 7, 0, 27, 15, 2, 0, 0, 0, 0, 1]' : 0.290781}
{'[6, 0, 5, 0, 1, 5, 1, 1, 7, 0, 27, 15, 2, 0, 0, 0, 0, 1]' : 0.29159}
{'[6, 0, 5, 0, 1, 5, 1, 1, 7, 0, 27, 15, 2, 0, 0, 0, 0, 1]' : 0.291223}
{'[6, 0, 5, 0, 1, 5, 1, 1, 7, 0, 27, 15, 2, 0, 0, 0, 0, 1]' : 0.292536}
{'[6, 0, 5, 0, 1, 5, 1, 1, 7, 0, 27, 15, 2, 0, 0, 0, 0, 1]' : 0.29266}
{'[6, 0, 5, 0, 1, 5, 1, 1, 7, 0, 27, 15, 2, 0, 0, 0, 0, 1]' : 0.290455}
{'[6, 0, 5, 0, 1, 5, 1, 1, 7, 0, 27, 15, 2, 0, 0, 0, 0, 1]' : 0.287777}
{'[6, 0, 5, 0, 1, 5, 1, 1, 7, 0, 27, 15, 2, 0, 0, 0, 0, 1]' : 0.29201}
{'[6, 0, 5, 0, 1, 5, 1, 1, 7, 0, 27, 15, 2, 0, 0, 0, 0, 1]' : 0.290654}
{'[6, 0, 5, 0, 1, 5, 1, 1, 7, 0, 27, 15, 2, 0, 0, 0, 0, 1]' : 0.292143}
{'[6, 0, 5, 0, 1, 5, 1, 1, 7, 0, 27, 15, 2, 0, 0, 0, 0, 1]' : 0.291498}
{'[6, 0, 5, 0, 1, 5, 1, 1, 7, 0, 27, 15, 2, 0, 0, 0, 0, 1]' : 0.291402}
{'[6, 0, 5, 0, 1, 5, 1, 1, 7, 0, 27, 15, 2, 0, 0, 0, 0, 1]' : 0.292763}
{'[6, 0, 5, 0, 1, 5, 1, 1, 7, 0, 27, 15, 2, 0, 0, 0, 0, 1]' : 0.291741}
{'[6, 0, 5, 0, 1, 5, 1, 1, 7, 0, 27, 15, 2, 0, 0, 0, 0, 1]' : 0.292536}
{'[6, 0, 5, 0, 1, 5, 1, 1, 7, 0, 27, 15, 2, 0, 0, 0, 0, 1]' : 0.291811}
{'[6, 0, 5, 0, 1, 5, 1, 1, 7, 0, 27, 15, 2, 0, 0, 0, 0, 1]' : 0.29075}
{'[6, 0, 5, 0, 1, 5, 1, 1, 7, 0, 27, 15, 2, 0, 0, 0, 0, 1]' : 0.291198}
{'[6, 0, 5, 0, 1, 5, 1, 1, 7, 0, 27, 15, 2, 0, 0, 0, 0, 1]' : 0.291454}
{'[6, 0, 5, 0, 1, 5, 1, 1, 7, 0, 27, 15, 2, 0, 0, 0, 0, 1]' : 0.29213}
{'[6, 0, 5, 0, 1, 5, 1, 1, 7, 0, 27, 15, 2, 0, 0, 0, 0, 1]' : 0.292719}

out:
 ["{'[6, 0, 5, 0, 1, 5, 1, 1, 7, 0, 27, 15, 2, 0, 0, 0, 0, 1]' : 0.315514}", "{'[6, 0, 5, 0, 1, 5, 1, 1, 7, 0, 27, 15, 2, 0, 0, 0, 0, 1]' : 0.302117}", "{'[6, 0, 5, 0, 1, 5, 1, 1, 7, 0, 27, 15, 2, 0, 0, 0, 0, 1]' : 0.292291}", "{'[6, 0, 5, 0, 1, 5, 1, 1, 7, 0, 27, 15, 2, 0, 0, 0, 0, 1]' : 0.293497}", "{'[6, 0, 5, 0, 1, 5, 1, 1, 7, 0, 27, 15, 2, 0, 0, 0, 0, 1]' : 0.291683}", "{'[6, 0, 5, 0, 1, 5, 1, 1, 7, 0, 27, 15, 2, 0, 0, 0, 0, 1]' : 0.291378}", "{'[6, 0, 5, 0, 1, 5, 1, 1, 7, 0, 27, 15, 2, 0, 0, 0, 0, 1]' : 0.291299}", "{'[6, 0, 5, 0, 1, 5, 1, 1, 7, 0, 27, 15, 2, 0, 0, 0, 0, 1]' : 0.291986}", "{'[6, 0, 5, 0, 1, 5, 1, 1, 7, 0, 27, 15, 2, 0, 0, 0, 0, 1]' : 0.292431}", "{'[6, 0, 5, 0, 1, 5, 1, 1, 7, 0, 27, 15, 2, 0, 0, 0, 0, 1]' : 0.290781}", "{'[6, 0, 5, 0, 1, 5, 1, 1, 7, 0, 27, 15, 2, 0, 0, 0, 0, 1]' : 0.29159}", "{'[6, 0, 5, 0, 1, 5, 1, 1, 7, 0, 27, 15, 2, 0, 0, 0, 0, 1]' : 0.291223}", "{'[6, 0, 5, 0, 1, 5, 1, 1, 7, 0, 27, 15, 2, 0, 0, 0, 0, 1]' : 0.292536}", "{'[6, 0, 5, 0, 1, 5, 1, 1, 7, 0, 27, 15, 2, 0, 0, 0, 0, 1]' : 0.29266}", "{'[6, 0, 5, 0, 1, 5, 1, 1, 7, 0, 27, 15, 2, 0, 0, 0, 0, 1]' : 0.290455}", "{'[6, 0, 5, 0, 1, 5, 1, 1, 7, 0, 27, 15, 2, 0, 0, 0, 0, 1]' : 0.287777}", "{'[6, 0, 5, 0, 1, 5, 1, 1, 7, 0, 27, 15, 2, 0, 0, 0, 0, 1]' : 0.29201}", "{'[6, 0, 5, 0, 1, 5, 1, 1, 7, 0, 27, 15, 2, 0, 0, 0, 0, 1]' : 0.290654}", "{'[6, 0, 5, 0, 1, 5, 1, 1, 7, 0, 27, 15, 2, 0, 0, 0, 0, 1]' : 0.292143}", "{'[6, 0, 5, 0, 1, 5, 1, 1, 7, 0, 27, 15, 2, 0, 0, 0, 0, 1]' : 0.291498}", "{'[6, 0, 5, 0, 1, 5, 1, 1, 7, 0, 27, 15, 2, 0, 0, 0, 0, 1]' : 0.291402}", "{'[6, 0, 5, 0, 1, 5, 1, 1, 7, 0, 27, 15, 2, 0, 0, 0, 0, 1]' : 0.292763}", "{'[6, 0, 5, 0, 1, 5, 1, 1, 7, 0, 27, 15, 2, 0, 0, 0, 0, 1]' : 0.291741}", "{'[6, 0, 5, 0, 1, 5, 1, 1, 7, 0, 27, 15, 2, 0, 0, 0, 0, 1]' : 0.292536}", "{'[6, 0, 5, 0, 1, 5, 1, 1, 7, 0, 27, 15, 2, 0, 0, 0, 0, 1]' : 0.291811}", "{'[6, 0, 5, 0, 1, 5, 1, 1, 7, 0, 27, 15, 2, 0, 0, 0, 0, 1]' : 0.29075}", "{'[6, 0, 5, 0, 1, 5, 1, 1, 7, 0, 27, 15, 2, 0, 0, 0, 0, 1]' : 0.291198}", "{'[6, 0, 5, 0, 1, 5, 1, 1, 7, 0, 27, 15, 2, 0, 0, 0, 0, 1]' : 0.291454}", "{'[6, 0, 5, 0, 1, 5, 1, 1, 7, 0, 27, 15, 2, 0, 0, 0, 0, 1]' : 0.29213}", "{'[6, 0, 5, 0, 1, 5, 1, 1, 7, 0, 27, 15, 2, 0, 0, 0, 0, 1]' : 0.292719}"]
returning from 'run': {'[6, 0, 5, 0, 1, 5, 1, 1, 7, 0, 27, 15, 2, 0, 0, 0, 0, 1]': ([0.315514, 0.302117, 0.292291, 0.293497, 0.291683, 0.291378, 0.291299, 0.291986, 0.292431, 0.290781, 0.29159, 0.291223, 0.292536, 0.29266, 0.290455, 0.287777, 0.29201, 0.290654, 0.292143, 0.291498, 0.291402, 0.292763, 0.291741, 0.292536, 0.291811, 0.29075, 0.291198, 0.291454, 0.29213, 0.292719], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 5, 0, 1, 5, 1, 1, 7, 0, 27, 15, 2, 0, 0, 0, 0, 1]': ([0.315514, 0.302117, 0.292291, 0.293497, 0.291683, 0.291378, 0.291299, 0.291986, 0.292431, 0.290781, 0.29159, 0.291223, 0.292536, 0.29266, 0.290455, 0.287777, 0.29201, 0.290654, 0.292143, 0.291498, 0.291402, 0.292763, 0.291741, 0.292536, 0.291811, 0.29075, 0.291198, 0.291454, 0.29213, 0.292719], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	68
        Max loop nest depth: 	5
        Additions: 		7246
        Multiplications: 	2052
        Divisions: 		0
        Logical: 		0
        Reads: 			11122
        Writes: 		1305
        Comparisons:		68
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest8.exe __orio_perftest8.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest8.exe  
Program Test Output: 
{'[1, 0, 6, 1, 6, 0, 0, 0, 26, 25, 27, 0, 0, 1, 0, 0, 1, 1]' : 0.169177}
{'[1, 0, 6, 1, 6, 0, 0, 0, 26, 25, 27, 0, 0, 1, 0, 0, 1, 1]' : 0.169107}
{'[1, 0, 6, 1, 6, 0, 0, 0, 26, 25, 27, 0, 0, 1, 0, 0, 1, 1]' : 0.168973}
{'[1, 0, 6, 1, 6, 0, 0, 0, 26, 25, 27, 0, 0, 1, 0, 0, 1, 1]' : 0.169197}
{'[1, 0, 6, 1, 6, 0, 0, 0, 26, 25, 27, 0, 0, 1, 0, 0, 1, 1]' : 0.169238}
{'[1, 0, 6, 1, 6, 0, 0, 0, 26, 25, 27, 0, 0, 1, 0, 0, 1, 1]' : 0.169233}
{'[1, 0, 6, 1, 6, 0, 0, 0, 26, 25, 27, 0, 0, 1, 0, 0, 1, 1]' : 0.169097}
{'[1, 0, 6, 1, 6, 0, 0, 0, 26, 25, 27, 0, 0, 1, 0, 0, 1, 1]' : 0.169358}
{'[1, 0, 6, 1, 6, 0, 0, 0, 26, 25, 27, 0, 0, 1, 0, 0, 1, 1]' : 0.169242}
{'[1, 0, 6, 1, 6, 0, 0, 0, 26, 25, 27, 0, 0, 1, 0, 0, 1, 1]' : 0.169224}
{'[1, 0, 6, 1, 6, 0, 0, 0, 26, 25, 27, 0, 0, 1, 0, 0, 1, 1]' : 0.173394}
{'[1, 0, 6, 1, 6, 0, 0, 0, 26, 25, 27, 0, 0, 1, 0, 0, 1, 1]' : 0.174039}
{'[1, 0, 6, 1, 6, 0, 0, 0, 26, 25, 27, 0, 0, 1, 0, 0, 1, 1]' : 0.174011}
{'[1, 0, 6, 1, 6, 0, 0, 0, 26, 25, 27, 0, 0, 1, 0, 0, 1, 1]' : 0.169013}
{'[1, 0, 6, 1, 6, 0, 0, 0, 26, 25, 27, 0, 0, 1, 0, 0, 1, 1]' : 0.169394}
{'[1, 0, 6, 1, 6, 0, 0, 0, 26, 25, 27, 0, 0, 1, 0, 0, 1, 1]' : 0.169356}
{'[1, 0, 6, 1, 6, 0, 0, 0, 26, 25, 27, 0, 0, 1, 0, 0, 1, 1]' : 0.169165}
{'[1, 0, 6, 1, 6, 0, 0, 0, 26, 25, 27, 0, 0, 1, 0, 0, 1, 1]' : 0.169311}
{'[1, 0, 6, 1, 6, 0, 0, 0, 26, 25, 27, 0, 0, 1, 0, 0, 1, 1]' : 0.169539}
{'[1, 0, 6, 1, 6, 0, 0, 0, 26, 25, 27, 0, 0, 1, 0, 0, 1, 1]' : 0.168978}
{'[1, 0, 6, 1, 6, 0, 0, 0, 26, 25, 27, 0, 0, 1, 0, 0, 1, 1]' : 0.169133}
{'[1, 0, 6, 1, 6, 0, 0, 0, 26, 25, 27, 0, 0, 1, 0, 0, 1, 1]' : 0.170056}
{'[1, 0, 6, 1, 6, 0, 0, 0, 26, 25, 27, 0, 0, 1, 0, 0, 1, 1]' : 0.174037}
{'[1, 0, 6, 1, 6, 0, 0, 0, 26, 25, 27, 0, 0, 1, 0, 0, 1, 1]' : 0.170614}
{'[1, 0, 6, 1, 6, 0, 0, 0, 26, 25, 27, 0, 0, 1, 0, 0, 1, 1]' : 0.170238}
{'[1, 0, 6, 1, 6, 0, 0, 0, 26, 25, 27, 0, 0, 1, 0, 0, 1, 1]' : 0.174052}
{'[1, 0, 6, 1, 6, 0, 0, 0, 26, 25, 27, 0, 0, 1, 0, 0, 1, 1]' : 0.170375}
{'[1, 0, 6, 1, 6, 0, 0, 0, 26, 25, 27, 0, 0, 1, 0, 0, 1, 1]' : 0.170791}
{'[1, 0, 6, 1, 6, 0, 0, 0, 26, 25, 27, 0, 0, 1, 0, 0, 1, 1]' : 0.172807}
{'[1, 0, 6, 1, 6, 0, 0, 0, 26, 25, 27, 0, 0, 1, 0, 0, 1, 1]' : 0.174213}

out:
 ["{'[1, 0, 6, 1, 6, 0, 0, 0, 26, 25, 27, 0, 0, 1, 0, 0, 1, 1]' : 0.169177}", "{'[1, 0, 6, 1, 6, 0, 0, 0, 26, 25, 27, 0, 0, 1, 0, 0, 1, 1]' : 0.169107}", "{'[1, 0, 6, 1, 6, 0, 0, 0, 26, 25, 27, 0, 0, 1, 0, 0, 1, 1]' : 0.168973}", "{'[1, 0, 6, 1, 6, 0, 0, 0, 26, 25, 27, 0, 0, 1, 0, 0, 1, 1]' : 0.169197}", "{'[1, 0, 6, 1, 6, 0, 0, 0, 26, 25, 27, 0, 0, 1, 0, 0, 1, 1]' : 0.169238}", "{'[1, 0, 6, 1, 6, 0, 0, 0, 26, 25, 27, 0, 0, 1, 0, 0, 1, 1]' : 0.169233}", "{'[1, 0, 6, 1, 6, 0, 0, 0, 26, 25, 27, 0, 0, 1, 0, 0, 1, 1]' : 0.169097}", "{'[1, 0, 6, 1, 6, 0, 0, 0, 26, 25, 27, 0, 0, 1, 0, 0, 1, 1]' : 0.169358}", "{'[1, 0, 6, 1, 6, 0, 0, 0, 26, 25, 27, 0, 0, 1, 0, 0, 1, 1]' : 0.169242}", "{'[1, 0, 6, 1, 6, 0, 0, 0, 26, 25, 27, 0, 0, 1, 0, 0, 1, 1]' : 0.169224}", "{'[1, 0, 6, 1, 6, 0, 0, 0, 26, 25, 27, 0, 0, 1, 0, 0, 1, 1]' : 0.173394}", "{'[1, 0, 6, 1, 6, 0, 0, 0, 26, 25, 27, 0, 0, 1, 0, 0, 1, 1]' : 0.174039}", "{'[1, 0, 6, 1, 6, 0, 0, 0, 26, 25, 27, 0, 0, 1, 0, 0, 1, 1]' : 0.174011}", "{'[1, 0, 6, 1, 6, 0, 0, 0, 26, 25, 27, 0, 0, 1, 0, 0, 1, 1]' : 0.169013}", "{'[1, 0, 6, 1, 6, 0, 0, 0, 26, 25, 27, 0, 0, 1, 0, 0, 1, 1]' : 0.169394}", "{'[1, 0, 6, 1, 6, 0, 0, 0, 26, 25, 27, 0, 0, 1, 0, 0, 1, 1]' : 0.169356}", "{'[1, 0, 6, 1, 6, 0, 0, 0, 26, 25, 27, 0, 0, 1, 0, 0, 1, 1]' : 0.169165}", "{'[1, 0, 6, 1, 6, 0, 0, 0, 26, 25, 27, 0, 0, 1, 0, 0, 1, 1]' : 0.169311}", "{'[1, 0, 6, 1, 6, 0, 0, 0, 26, 25, 27, 0, 0, 1, 0, 0, 1, 1]' : 0.169539}", "{'[1, 0, 6, 1, 6, 0, 0, 0, 26, 25, 27, 0, 0, 1, 0, 0, 1, 1]' : 0.168978}", "{'[1, 0, 6, 1, 6, 0, 0, 0, 26, 25, 27, 0, 0, 1, 0, 0, 1, 1]' : 0.169133}", "{'[1, 0, 6, 1, 6, 0, 0, 0, 26, 25, 27, 0, 0, 1, 0, 0, 1, 1]' : 0.170056}", "{'[1, 0, 6, 1, 6, 0, 0, 0, 26, 25, 27, 0, 0, 1, 0, 0, 1, 1]' : 0.174037}", "{'[1, 0, 6, 1, 6, 0, 0, 0, 26, 25, 27, 0, 0, 1, 0, 0, 1, 1]' : 0.170614}", "{'[1, 0, 6, 1, 6, 0, 0, 0, 26, 25, 27, 0, 0, 1, 0, 0, 1, 1]' : 0.170238}", "{'[1, 0, 6, 1, 6, 0, 0, 0, 26, 25, 27, 0, 0, 1, 0, 0, 1, 1]' : 0.174052}", "{'[1, 0, 6, 1, 6, 0, 0, 0, 26, 25, 27, 0, 0, 1, 0, 0, 1, 1]' : 0.170375}", "{'[1, 0, 6, 1, 6, 0, 0, 0, 26, 25, 27, 0, 0, 1, 0, 0, 1, 1]' : 0.170791}", "{'[1, 0, 6, 1, 6, 0, 0, 0, 26, 25, 27, 0, 0, 1, 0, 0, 1, 1]' : 0.172807}", "{'[1, 0, 6, 1, 6, 0, 0, 0, 26, 25, 27, 0, 0, 1, 0, 0, 1, 1]' : 0.174213}"]
returning from 'run': {'[1, 0, 6, 1, 6, 0, 0, 0, 26, 25, 27, 0, 0, 1, 0, 0, 1, 1]': ([0.169177, 0.169107, 0.168973, 0.169197, 0.169238, 0.169233, 0.169097, 0.169358, 0.169242, 0.169224, 0.173394, 0.174039, 0.174011, 0.169013, 0.169394, 0.169356, 0.169165, 0.169311, 0.169539, 0.168978, 0.169133, 0.170056, 0.174037, 0.170614, 0.170238, 0.174052, 0.170375, 0.170791, 0.172807, 0.174213], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 6, 1, 6, 0, 0, 0, 26, 25, 27, 0, 0, 1, 0, 0, 1, 1]': ([0.169177, 0.169107, 0.168973, 0.169197, 0.169238, 0.169233, 0.169097, 0.169358, 0.169242, 0.169224, 0.173394, 0.174039, 0.174011, 0.169013, 0.169394, 0.169356, 0.169165, 0.169311, 0.169539, 0.168978, 0.169133, 0.170056, 0.174037, 0.170614, 0.170238, 0.174052, 0.170375, 0.170791, 0.172807, 0.174213], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	72
        Max loop nest depth: 	6
        Additions: 		4734
        Multiplications: 	2132
        Divisions: 		0
        Logical: 		0
        Reads: 			9000
        Writes: 		1499
        Comparisons:		72
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest9.exe __orio_perftest9.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest9.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest9.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest9.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest9.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	145
        Max loop nest depth: 	6
        Additions: 		4346
        Multiplications: 	1036
        Divisions: 		0
        Logical: 		0
        Reads: 			7045
        Writes: 		904
        Comparisons:		145
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest10.exe __orio_perftest10.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest10.exe  
Program Test Output: 
{'[4, 6, 3, 3, 5, 5, 0, 1, 1, 27, 0, 3, 1, 1, 0, 0, 1, 0]' : 0.129068}
{'[4, 6, 3, 3, 5, 5, 0, 1, 1, 27, 0, 3, 1, 1, 0, 0, 1, 0]' : 0.128985}
{'[4, 6, 3, 3, 5, 5, 0, 1, 1, 27, 0, 3, 1, 1, 0, 0, 1, 0]' : 0.128863}
{'[4, 6, 3, 3, 5, 5, 0, 1, 1, 27, 0, 3, 1, 1, 0, 0, 1, 0]' : 0.127198}
{'[4, 6, 3, 3, 5, 5, 0, 1, 1, 27, 0, 3, 1, 1, 0, 0, 1, 0]' : 0.112956}
{'[4, 6, 3, 3, 5, 5, 0, 1, 1, 27, 0, 3, 1, 1, 0, 0, 1, 0]' : 0.114169}
{'[4, 6, 3, 3, 5, 5, 0, 1, 1, 27, 0, 3, 1, 1, 0, 0, 1, 0]' : 0.115409}
{'[4, 6, 3, 3, 5, 5, 0, 1, 1, 27, 0, 3, 1, 1, 0, 0, 1, 0]' : 0.114244}
{'[4, 6, 3, 3, 5, 5, 0, 1, 1, 27, 0, 3, 1, 1, 0, 0, 1, 0]' : 0.113573}
{'[4, 6, 3, 3, 5, 5, 0, 1, 1, 27, 0, 3, 1, 1, 0, 0, 1, 0]' : 0.113832}
{'[4, 6, 3, 3, 5, 5, 0, 1, 1, 27, 0, 3, 1, 1, 0, 0, 1, 0]' : 0.11602}
{'[4, 6, 3, 3, 5, 5, 0, 1, 1, 27, 0, 3, 1, 1, 0, 0, 1, 0]' : 0.11605}
{'[4, 6, 3, 3, 5, 5, 0, 1, 1, 27, 0, 3, 1, 1, 0, 0, 1, 0]' : 0.114885}
{'[4, 6, 3, 3, 5, 5, 0, 1, 1, 27, 0, 3, 1, 1, 0, 0, 1, 0]' : 0.113284}
{'[4, 6, 3, 3, 5, 5, 0, 1, 1, 27, 0, 3, 1, 1, 0, 0, 1, 0]' : 0.115406}
{'[4, 6, 3, 3, 5, 5, 0, 1, 1, 27, 0, 3, 1, 1, 0, 0, 1, 0]' : 0.115869}
{'[4, 6, 3, 3, 5, 5, 0, 1, 1, 27, 0, 3, 1, 1, 0, 0, 1, 0]' : 0.113125}
{'[4, 6, 3, 3, 5, 5, 0, 1, 1, 27, 0, 3, 1, 1, 0, 0, 1, 0]' : 0.113167}
{'[4, 6, 3, 3, 5, 5, 0, 1, 1, 27, 0, 3, 1, 1, 0, 0, 1, 0]' : 0.114581}
{'[4, 6, 3, 3, 5, 5, 0, 1, 1, 27, 0, 3, 1, 1, 0, 0, 1, 0]' : 0.116022}
{'[4, 6, 3, 3, 5, 5, 0, 1, 1, 27, 0, 3, 1, 1, 0, 0, 1, 0]' : 0.115977}
{'[4, 6, 3, 3, 5, 5, 0, 1, 1, 27, 0, 3, 1, 1, 0, 0, 1, 0]' : 0.114945}
{'[4, 6, 3, 3, 5, 5, 0, 1, 1, 27, 0, 3, 1, 1, 0, 0, 1, 0]' : 0.113424}
{'[4, 6, 3, 3, 5, 5, 0, 1, 1, 27, 0, 3, 1, 1, 0, 0, 1, 0]' : 0.115648}
{'[4, 6, 3, 3, 5, 5, 0, 1, 1, 27, 0, 3, 1, 1, 0, 0, 1, 0]' : 0.11332}
{'[4, 6, 3, 3, 5, 5, 0, 1, 1, 27, 0, 3, 1, 1, 0, 0, 1, 0]' : 0.113298}
{'[4, 6, 3, 3, 5, 5, 0, 1, 1, 27, 0, 3, 1, 1, 0, 0, 1, 0]' : 0.112349}
{'[4, 6, 3, 3, 5, 5, 0, 1, 1, 27, 0, 3, 1, 1, 0, 0, 1, 0]' : 0.114552}
{'[4, 6, 3, 3, 5, 5, 0, 1, 1, 27, 0, 3, 1, 1, 0, 0, 1, 0]' : 0.115959}
{'[4, 6, 3, 3, 5, 5, 0, 1, 1, 27, 0, 3, 1, 1, 0, 0, 1, 0]' : 0.115999}

out:
 ["{'[4, 6, 3, 3, 5, 5, 0, 1, 1, 27, 0, 3, 1, 1, 0, 0, 1, 0]' : 0.129068}", "{'[4, 6, 3, 3, 5, 5, 0, 1, 1, 27, 0, 3, 1, 1, 0, 0, 1, 0]' : 0.128985}", "{'[4, 6, 3, 3, 5, 5, 0, 1, 1, 27, 0, 3, 1, 1, 0, 0, 1, 0]' : 0.128863}", "{'[4, 6, 3, 3, 5, 5, 0, 1, 1, 27, 0, 3, 1, 1, 0, 0, 1, 0]' : 0.127198}", "{'[4, 6, 3, 3, 5, 5, 0, 1, 1, 27, 0, 3, 1, 1, 0, 0, 1, 0]' : 0.112956}", "{'[4, 6, 3, 3, 5, 5, 0, 1, 1, 27, 0, 3, 1, 1, 0, 0, 1, 0]' : 0.114169}", "{'[4, 6, 3, 3, 5, 5, 0, 1, 1, 27, 0, 3, 1, 1, 0, 0, 1, 0]' : 0.115409}", "{'[4, 6, 3, 3, 5, 5, 0, 1, 1, 27, 0, 3, 1, 1, 0, 0, 1, 0]' : 0.114244}", "{'[4, 6, 3, 3, 5, 5, 0, 1, 1, 27, 0, 3, 1, 1, 0, 0, 1, 0]' : 0.113573}", "{'[4, 6, 3, 3, 5, 5, 0, 1, 1, 27, 0, 3, 1, 1, 0, 0, 1, 0]' : 0.113832}", "{'[4, 6, 3, 3, 5, 5, 0, 1, 1, 27, 0, 3, 1, 1, 0, 0, 1, 0]' : 0.11602}", "{'[4, 6, 3, 3, 5, 5, 0, 1, 1, 27, 0, 3, 1, 1, 0, 0, 1, 0]' : 0.11605}", "{'[4, 6, 3, 3, 5, 5, 0, 1, 1, 27, 0, 3, 1, 1, 0, 0, 1, 0]' : 0.114885}", "{'[4, 6, 3, 3, 5, 5, 0, 1, 1, 27, 0, 3, 1, 1, 0, 0, 1, 0]' : 0.113284}", "{'[4, 6, 3, 3, 5, 5, 0, 1, 1, 27, 0, 3, 1, 1, 0, 0, 1, 0]' : 0.115406}", "{'[4, 6, 3, 3, 5, 5, 0, 1, 1, 27, 0, 3, 1, 1, 0, 0, 1, 0]' : 0.115869}", "{'[4, 6, 3, 3, 5, 5, 0, 1, 1, 27, 0, 3, 1, 1, 0, 0, 1, 0]' : 0.113125}", "{'[4, 6, 3, 3, 5, 5, 0, 1, 1, 27, 0, 3, 1, 1, 0, 0, 1, 0]' : 0.113167}", "{'[4, 6, 3, 3, 5, 5, 0, 1, 1, 27, 0, 3, 1, 1, 0, 0, 1, 0]' : 0.114581}", "{'[4, 6, 3, 3, 5, 5, 0, 1, 1, 27, 0, 3, 1, 1, 0, 0, 1, 0]' : 0.116022}", "{'[4, 6, 3, 3, 5, 5, 0, 1, 1, 27, 0, 3, 1, 1, 0, 0, 1, 0]' : 0.115977}", "{'[4, 6, 3, 3, 5, 5, 0, 1, 1, 27, 0, 3, 1, 1, 0, 0, 1, 0]' : 0.114945}", "{'[4, 6, 3, 3, 5, 5, 0, 1, 1, 27, 0, 3, 1, 1, 0, 0, 1, 0]' : 0.113424}", "{'[4, 6, 3, 3, 5, 5, 0, 1, 1, 27, 0, 3, 1, 1, 0, 0, 1, 0]' : 0.115648}", "{'[4, 6, 3, 3, 5, 5, 0, 1, 1, 27, 0, 3, 1, 1, 0, 0, 1, 0]' : 0.11332}", "{'[4, 6, 3, 3, 5, 5, 0, 1, 1, 27, 0, 3, 1, 1, 0, 0, 1, 0]' : 0.113298}", "{'[4, 6, 3, 3, 5, 5, 0, 1, 1, 27, 0, 3, 1, 1, 0, 0, 1, 0]' : 0.112349}", "{'[4, 6, 3, 3, 5, 5, 0, 1, 1, 27, 0, 3, 1, 1, 0, 0, 1, 0]' : 0.114552}", "{'[4, 6, 3, 3, 5, 5, 0, 1, 1, 27, 0, 3, 1, 1, 0, 0, 1, 0]' : 0.115959}", "{'[4, 6, 3, 3, 5, 5, 0, 1, 1, 27, 0, 3, 1, 1, 0, 0, 1, 0]' : 0.115999}"]
returning from 'run': {'[4, 6, 3, 3, 5, 5, 0, 1, 1, 27, 0, 3, 1, 1, 0, 0, 1, 0]': ([0.129068, 0.128985, 0.128863, 0.127198, 0.112956, 0.114169, 0.115409, 0.114244, 0.113573, 0.113832, 0.11602, 0.11605, 0.114885, 0.113284, 0.115406, 0.115869, 0.113125, 0.113167, 0.114581, 0.116022, 0.115977, 0.114945, 0.113424, 0.115648, 0.11332, 0.113298, 0.112349, 0.114552, 0.115959, 0.115999], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 6, 3, 3, 5, 5, 0, 1, 1, 27, 0, 3, 1, 1, 0, 0, 1, 0]': ([0.129068, 0.128985, 0.128863, 0.127198, 0.112956, 0.114169, 0.115409, 0.114244, 0.113573, 0.113832, 0.11602, 0.11605, 0.114885, 0.113284, 0.115406, 0.115869, 0.113125, 0.113167, 0.114581, 0.116022, 0.115977, 0.114945, 0.113424, 0.115648, 0.11332, 0.113298, 0.112349, 0.114552, 0.115959, 0.115999], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = kkk
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		212
        Multiplications: 	66
        Divisions: 		0
        Logical: 		0
        Reads: 			470
        Writes: 		113
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest11.exe __orio_perftest11.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest11.exe  
Program Test Output: 
{'[0, 6, 3, 0, 6, 1, 0, 0, 29, 0, 19, 2, 0, 0, 1, 1, 0, 0]' : 0.180172}
{'[0, 6, 3, 0, 6, 1, 0, 0, 29, 0, 19, 2, 0, 0, 1, 1, 0, 0]' : 0.180063}
{'[0, 6, 3, 0, 6, 1, 0, 0, 29, 0, 19, 2, 0, 0, 1, 1, 0, 0]' : 0.180068}
{'[0, 6, 3, 0, 6, 1, 0, 0, 29, 0, 19, 2, 0, 0, 1, 1, 0, 0]' : 0.165849}
{'[0, 6, 3, 0, 6, 1, 0, 0, 29, 0, 19, 2, 0, 0, 1, 1, 0, 0]' : 0.151465}
{'[0, 6, 3, 0, 6, 1, 0, 0, 29, 0, 19, 2, 0, 0, 1, 1, 0, 0]' : 0.156148}
{'[0, 6, 3, 0, 6, 1, 0, 0, 29, 0, 19, 2, 0, 0, 1, 1, 0, 0]' : 0.156887}
{'[0, 6, 3, 0, 6, 1, 0, 0, 29, 0, 19, 2, 0, 0, 1, 1, 0, 0]' : 0.156841}
{'[0, 6, 3, 0, 6, 1, 0, 0, 29, 0, 19, 2, 0, 0, 1, 1, 0, 0]' : 0.156828}
{'[0, 6, 3, 0, 6, 1, 0, 0, 29, 0, 19, 2, 0, 0, 1, 1, 0, 0]' : 0.156986}
{'[0, 6, 3, 0, 6, 1, 0, 0, 29, 0, 19, 2, 0, 0, 1, 1, 0, 0]' : 0.15565}
{'[0, 6, 3, 0, 6, 1, 0, 0, 29, 0, 19, 2, 0, 0, 1, 1, 0, 0]' : 0.154168}
{'[0, 6, 3, 0, 6, 1, 0, 0, 29, 0, 19, 2, 0, 0, 1, 1, 0, 0]' : 0.156998}
{'[0, 6, 3, 0, 6, 1, 0, 0, 29, 0, 19, 2, 0, 0, 1, 1, 0, 0]' : 0.152885}
{'[0, 6, 3, 0, 6, 1, 0, 0, 29, 0, 19, 2, 0, 0, 1, 1, 0, 0]' : 0.1527}
{'[0, 6, 3, 0, 6, 1, 0, 0, 29, 0, 19, 2, 0, 0, 1, 1, 0, 0]' : 0.156813}
{'[0, 6, 3, 0, 6, 1, 0, 0, 29, 0, 19, 2, 0, 0, 1, 1, 0, 0]' : 0.156816}
{'[0, 6, 3, 0, 6, 1, 0, 0, 29, 0, 19, 2, 0, 0, 1, 1, 0, 0]' : 0.156523}
{'[0, 6, 3, 0, 6, 1, 0, 0, 29, 0, 19, 2, 0, 0, 1, 1, 0, 0]' : 0.154155}
{'[0, 6, 3, 0, 6, 1, 0, 0, 29, 0, 19, 2, 0, 0, 1, 1, 0, 0]' : 0.151411}
{'[0, 6, 3, 0, 6, 1, 0, 0, 29, 0, 19, 2, 0, 0, 1, 1, 0, 0]' : 0.151606}
{'[0, 6, 3, 0, 6, 1, 0, 0, 29, 0, 19, 2, 0, 0, 1, 1, 0, 0]' : 0.155702}
{'[0, 6, 3, 0, 6, 1, 0, 0, 29, 0, 19, 2, 0, 0, 1, 1, 0, 0]' : 0.156932}
{'[0, 6, 3, 0, 6, 1, 0, 0, 29, 0, 19, 2, 0, 0, 1, 1, 0, 0]' : 0.156908}
{'[0, 6, 3, 0, 6, 1, 0, 0, 29, 0, 19, 2, 0, 0, 1, 1, 0, 0]' : 0.156959}
{'[0, 6, 3, 0, 6, 1, 0, 0, 29, 0, 19, 2, 0, 0, 1, 1, 0, 0]' : 0.151581}
{'[0, 6, 3, 0, 6, 1, 0, 0, 29, 0, 19, 2, 0, 0, 1, 1, 0, 0]' : 0.15139}
{'[0, 6, 3, 0, 6, 1, 0, 0, 29, 0, 19, 2, 0, 0, 1, 1, 0, 0]' : 0.153051}
{'[0, 6, 3, 0, 6, 1, 0, 0, 29, 0, 19, 2, 0, 0, 1, 1, 0, 0]' : 0.156854}
{'[0, 6, 3, 0, 6, 1, 0, 0, 29, 0, 19, 2, 0, 0, 1, 1, 0, 0]' : 0.156924}

out:
 ["{'[0, 6, 3, 0, 6, 1, 0, 0, 29, 0, 19, 2, 0, 0, 1, 1, 0, 0]' : 0.180172}", "{'[0, 6, 3, 0, 6, 1, 0, 0, 29, 0, 19, 2, 0, 0, 1, 1, 0, 0]' : 0.180063}", "{'[0, 6, 3, 0, 6, 1, 0, 0, 29, 0, 19, 2, 0, 0, 1, 1, 0, 0]' : 0.180068}", "{'[0, 6, 3, 0, 6, 1, 0, 0, 29, 0, 19, 2, 0, 0, 1, 1, 0, 0]' : 0.165849}", "{'[0, 6, 3, 0, 6, 1, 0, 0, 29, 0, 19, 2, 0, 0, 1, 1, 0, 0]' : 0.151465}", "{'[0, 6, 3, 0, 6, 1, 0, 0, 29, 0, 19, 2, 0, 0, 1, 1, 0, 0]' : 0.156148}", "{'[0, 6, 3, 0, 6, 1, 0, 0, 29, 0, 19, 2, 0, 0, 1, 1, 0, 0]' : 0.156887}", "{'[0, 6, 3, 0, 6, 1, 0, 0, 29, 0, 19, 2, 0, 0, 1, 1, 0, 0]' : 0.156841}", "{'[0, 6, 3, 0, 6, 1, 0, 0, 29, 0, 19, 2, 0, 0, 1, 1, 0, 0]' : 0.156828}", "{'[0, 6, 3, 0, 6, 1, 0, 0, 29, 0, 19, 2, 0, 0, 1, 1, 0, 0]' : 0.156986}", "{'[0, 6, 3, 0, 6, 1, 0, 0, 29, 0, 19, 2, 0, 0, 1, 1, 0, 0]' : 0.15565}", "{'[0, 6, 3, 0, 6, 1, 0, 0, 29, 0, 19, 2, 0, 0, 1, 1, 0, 0]' : 0.154168}", "{'[0, 6, 3, 0, 6, 1, 0, 0, 29, 0, 19, 2, 0, 0, 1, 1, 0, 0]' : 0.156998}", "{'[0, 6, 3, 0, 6, 1, 0, 0, 29, 0, 19, 2, 0, 0, 1, 1, 0, 0]' : 0.152885}", "{'[0, 6, 3, 0, 6, 1, 0, 0, 29, 0, 19, 2, 0, 0, 1, 1, 0, 0]' : 0.1527}", "{'[0, 6, 3, 0, 6, 1, 0, 0, 29, 0, 19, 2, 0, 0, 1, 1, 0, 0]' : 0.156813}", "{'[0, 6, 3, 0, 6, 1, 0, 0, 29, 0, 19, 2, 0, 0, 1, 1, 0, 0]' : 0.156816}", "{'[0, 6, 3, 0, 6, 1, 0, 0, 29, 0, 19, 2, 0, 0, 1, 1, 0, 0]' : 0.156523}", "{'[0, 6, 3, 0, 6, 1, 0, 0, 29, 0, 19, 2, 0, 0, 1, 1, 0, 0]' : 0.154155}", "{'[0, 6, 3, 0, 6, 1, 0, 0, 29, 0, 19, 2, 0, 0, 1, 1, 0, 0]' : 0.151411}", "{'[0, 6, 3, 0, 6, 1, 0, 0, 29, 0, 19, 2, 0, 0, 1, 1, 0, 0]' : 0.151606}", "{'[0, 6, 3, 0, 6, 1, 0, 0, 29, 0, 19, 2, 0, 0, 1, 1, 0, 0]' : 0.155702}", "{'[0, 6, 3, 0, 6, 1, 0, 0, 29, 0, 19, 2, 0, 0, 1, 1, 0, 0]' : 0.156932}", "{'[0, 6, 3, 0, 6, 1, 0, 0, 29, 0, 19, 2, 0, 0, 1, 1, 0, 0]' : 0.156908}", "{'[0, 6, 3, 0, 6, 1, 0, 0, 29, 0, 19, 2, 0, 0, 1, 1, 0, 0]' : 0.156959}", "{'[0, 6, 3, 0, 6, 1, 0, 0, 29, 0, 19, 2, 0, 0, 1, 1, 0, 0]' : 0.151581}", "{'[0, 6, 3, 0, 6, 1, 0, 0, 29, 0, 19, 2, 0, 0, 1, 1, 0, 0]' : 0.15139}", "{'[0, 6, 3, 0, 6, 1, 0, 0, 29, 0, 19, 2, 0, 0, 1, 1, 0, 0]' : 0.153051}", "{'[0, 6, 3, 0, 6, 1, 0, 0, 29, 0, 19, 2, 0, 0, 1, 1, 0, 0]' : 0.156854}", "{'[0, 6, 3, 0, 6, 1, 0, 0, 29, 0, 19, 2, 0, 0, 1, 1, 0, 0]' : 0.156924}"]
returning from 'run': {'[0, 6, 3, 0, 6, 1, 0, 0, 29, 0, 19, 2, 0, 0, 1, 1, 0, 0]': ([0.180172, 0.180063, 0.180068, 0.165849, 0.151465, 0.156148, 0.156887, 0.156841, 0.156828, 0.156986, 0.15565, 0.154168, 0.156998, 0.152885, 0.1527, 0.156813, 0.156816, 0.156523, 0.154155, 0.151411, 0.151606, 0.155702, 0.156932, 0.156908, 0.156959, 0.151581, 0.15139, 0.153051, 0.156854, 0.156924], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 3, 0, 6, 1, 0, 0, 29, 0, 19, 2, 0, 0, 1, 1, 0, 0]': ([0.180172, 0.180063, 0.180068, 0.165849, 0.151465, 0.156148, 0.156887, 0.156841, 0.156828, 0.156986, 0.15565, 0.154168, 0.156998, 0.152885, 0.1527, 0.156813, 0.156816, 0.156523, 0.154155, 0.151411, 0.151606, 0.155702, 0.156932, 0.156908, 0.156959, 0.151581, 0.15139, 0.153051, 0.156854, 0.156924], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	57
        Max loop nest depth: 	5
        Additions: 		4413
        Multiplications: 	1520
        Divisions: 		0
        Logical: 		0
        Reads: 			9533
        Writes: 		2138
        Comparisons:		57
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest12.exe __orio_perftest12.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest12.exe  
Program Test Output: 
{'[0, 1, 6, 2, 2, 6, 0, 0, 6, 18, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.116943}
{'[0, 1, 6, 2, 2, 6, 0, 0, 6, 18, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.116914}
{'[0, 1, 6, 2, 2, 6, 0, 0, 6, 18, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.11691}
{'[0, 1, 6, 2, 2, 6, 0, 0, 6, 18, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.108984}
{'[0, 1, 6, 2, 2, 6, 0, 0, 6, 18, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.100709}
{'[0, 1, 6, 2, 2, 6, 0, 0, 6, 18, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.100773}
{'[0, 1, 6, 2, 2, 6, 0, 0, 6, 18, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.100753}
{'[0, 1, 6, 2, 2, 6, 0, 0, 6, 18, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.100746}
{'[0, 1, 6, 2, 2, 6, 0, 0, 6, 18, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.100669}
{'[0, 1, 6, 2, 2, 6, 0, 0, 6, 18, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.10074}
{'[0, 1, 6, 2, 2, 6, 0, 0, 6, 18, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.100827}
{'[0, 1, 6, 2, 2, 6, 0, 0, 6, 18, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.10865}
{'[0, 1, 6, 2, 2, 6, 0, 0, 6, 18, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.100883}
{'[0, 1, 6, 2, 2, 6, 0, 0, 6, 18, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.10071}
{'[0, 1, 6, 2, 2, 6, 0, 0, 6, 18, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.100722}
{'[0, 1, 6, 2, 2, 6, 0, 0, 6, 18, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.100688}
{'[0, 1, 6, 2, 2, 6, 0, 0, 6, 18, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.100724}
{'[0, 1, 6, 2, 2, 6, 0, 0, 6, 18, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.100743}
{'[0, 1, 6, 2, 2, 6, 0, 0, 6, 18, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.100794}
{'[0, 1, 6, 2, 2, 6, 0, 0, 6, 18, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.101035}
{'[0, 1, 6, 2, 2, 6, 0, 0, 6, 18, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.100733}
{'[0, 1, 6, 2, 2, 6, 0, 0, 6, 18, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.100721}
{'[0, 1, 6, 2, 2, 6, 0, 0, 6, 18, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.100742}
{'[0, 1, 6, 2, 2, 6, 0, 0, 6, 18, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.100747}
{'[0, 1, 6, 2, 2, 6, 0, 0, 6, 18, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.100708}
{'[0, 1, 6, 2, 2, 6, 0, 0, 6, 18, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.100763}
{'[0, 1, 6, 2, 2, 6, 0, 0, 6, 18, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.102672}
{'[0, 1, 6, 2, 2, 6, 0, 0, 6, 18, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.101206}
{'[0, 1, 6, 2, 2, 6, 0, 0, 6, 18, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.101148}
{'[0, 1, 6, 2, 2, 6, 0, 0, 6, 18, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.101275}

out:
 ["{'[0, 1, 6, 2, 2, 6, 0, 0, 6, 18, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.116943}", "{'[0, 1, 6, 2, 2, 6, 0, 0, 6, 18, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.116914}", "{'[0, 1, 6, 2, 2, 6, 0, 0, 6, 18, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.11691}", "{'[0, 1, 6, 2, 2, 6, 0, 0, 6, 18, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.108984}", "{'[0, 1, 6, 2, 2, 6, 0, 0, 6, 18, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.100709}", "{'[0, 1, 6, 2, 2, 6, 0, 0, 6, 18, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.100773}", "{'[0, 1, 6, 2, 2, 6, 0, 0, 6, 18, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.100753}", "{'[0, 1, 6, 2, 2, 6, 0, 0, 6, 18, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.100746}", "{'[0, 1, 6, 2, 2, 6, 0, 0, 6, 18, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.100669}", "{'[0, 1, 6, 2, 2, 6, 0, 0, 6, 18, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.10074}", "{'[0, 1, 6, 2, 2, 6, 0, 0, 6, 18, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.100827}", "{'[0, 1, 6, 2, 2, 6, 0, 0, 6, 18, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.10865}", "{'[0, 1, 6, 2, 2, 6, 0, 0, 6, 18, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.100883}", "{'[0, 1, 6, 2, 2, 6, 0, 0, 6, 18, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.10071}", "{'[0, 1, 6, 2, 2, 6, 0, 0, 6, 18, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.100722}", "{'[0, 1, 6, 2, 2, 6, 0, 0, 6, 18, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.100688}", "{'[0, 1, 6, 2, 2, 6, 0, 0, 6, 18, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.100724}", "{'[0, 1, 6, 2, 2, 6, 0, 0, 6, 18, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.100743}", "{'[0, 1, 6, 2, 2, 6, 0, 0, 6, 18, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.100794}", "{'[0, 1, 6, 2, 2, 6, 0, 0, 6, 18, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.101035}", "{'[0, 1, 6, 2, 2, 6, 0, 0, 6, 18, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.100733}", "{'[0, 1, 6, 2, 2, 6, 0, 0, 6, 18, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.100721}", "{'[0, 1, 6, 2, 2, 6, 0, 0, 6, 18, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.100742}", "{'[0, 1, 6, 2, 2, 6, 0, 0, 6, 18, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.100747}", "{'[0, 1, 6, 2, 2, 6, 0, 0, 6, 18, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.100708}", "{'[0, 1, 6, 2, 2, 6, 0, 0, 6, 18, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.100763}", "{'[0, 1, 6, 2, 2, 6, 0, 0, 6, 18, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.102672}", "{'[0, 1, 6, 2, 2, 6, 0, 0, 6, 18, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.101206}", "{'[0, 1, 6, 2, 2, 6, 0, 0, 6, 18, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.101148}", "{'[0, 1, 6, 2, 2, 6, 0, 0, 6, 18, 0, 27, 0, 0, 1, 1, 1, 0]' : 0.101275}"]
returning from 'run': {'[0, 1, 6, 2, 2, 6, 0, 0, 6, 18, 0, 27, 0, 0, 1, 1, 1, 0]': ([0.116943, 0.116914, 0.11691, 0.108984, 0.100709, 0.100773, 0.100753, 0.100746, 0.100669, 0.10074, 0.100827, 0.10865, 0.100883, 0.10071, 0.100722, 0.100688, 0.100724, 0.100743, 0.100794, 0.101035, 0.100733, 0.100721, 0.100742, 0.100747, 0.100708, 0.100763, 0.102672, 0.101206, 0.101148, 0.101275], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 1, 6, 2, 2, 6, 0, 0, 6, 18, 0, 27, 0, 0, 1, 1, 1, 0]': ([0.116943, 0.116914, 0.11691, 0.108984, 0.100709, 0.100773, 0.100753, 0.100746, 0.100669, 0.10074, 0.100827, 0.10865, 0.100883, 0.10071, 0.100722, 0.100688, 0.100724, 0.100743, 0.100794, 0.101035, 0.100733, 0.100721, 0.100742, 0.100747, 0.100708, 0.100763, 0.102672, 0.101206, 0.101148, 0.101275], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	4
        Additions: 		2511
        Multiplications: 	756
        Divisions: 		0
        Logical: 		0
        Reads: 			4060
        Writes: 		468
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest13.exe __orio_perftest13.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest13.exe  
Program Test Output: 
{'[3, 6, 5, 1, 4, 0, 1, 0, 25, 0, 1, 29, 1, 0, 1, 0, 1, 1]' : 0.117078}
{'[3, 6, 5, 1, 4, 0, 1, 0, 25, 0, 1, 29, 1, 0, 1, 0, 1, 1]' : 0.115737}
{'[3, 6, 5, 1, 4, 0, 1, 0, 25, 0, 1, 29, 1, 0, 1, 0, 1, 1]' : 0.116916}
{'[3, 6, 5, 1, 4, 0, 1, 0, 25, 0, 1, 29, 1, 0, 1, 0, 1, 1]' : 0.116974}
{'[3, 6, 5, 1, 4, 0, 1, 0, 25, 0, 1, 29, 1, 0, 1, 0, 1, 1]' : 0.117035}
{'[3, 6, 5, 1, 4, 0, 1, 0, 25, 0, 1, 29, 1, 0, 1, 0, 1, 1]' : 0.117825}
{'[3, 6, 5, 1, 4, 0, 1, 0, 25, 0, 1, 29, 1, 0, 1, 0, 1, 1]' : 0.119881}
{'[3, 6, 5, 1, 4, 0, 1, 0, 25, 0, 1, 29, 1, 0, 1, 0, 1, 1]' : 0.119971}
{'[3, 6, 5, 1, 4, 0, 1, 0, 25, 0, 1, 29, 1, 0, 1, 0, 1, 1]' : 0.119979}
{'[3, 6, 5, 1, 4, 0, 1, 0, 25, 0, 1, 29, 1, 0, 1, 0, 1, 1]' : 0.120061}
{'[3, 6, 5, 1, 4, 0, 1, 0, 25, 0, 1, 29, 1, 0, 1, 0, 1, 1]' : 0.117157}
{'[3, 6, 5, 1, 4, 0, 1, 0, 25, 0, 1, 29, 1, 0, 1, 0, 1, 1]' : 0.116928}
{'[3, 6, 5, 1, 4, 0, 1, 0, 25, 0, 1, 29, 1, 0, 1, 0, 1, 1]' : 0.117003}
{'[3, 6, 5, 1, 4, 0, 1, 0, 25, 0, 1, 29, 1, 0, 1, 0, 1, 1]' : 0.117175}
{'[3, 6, 5, 1, 4, 0, 1, 0, 25, 0, 1, 29, 1, 0, 1, 0, 1, 1]' : 0.1193}
{'[3, 6, 5, 1, 4, 0, 1, 0, 25, 0, 1, 29, 1, 0, 1, 0, 1, 1]' : 0.119971}
{'[3, 6, 5, 1, 4, 0, 1, 0, 25, 0, 1, 29, 1, 0, 1, 0, 1, 1]' : 0.120058}
{'[3, 6, 5, 1, 4, 0, 1, 0, 25, 0, 1, 29, 1, 0, 1, 0, 1, 1]' : 0.117809}
{'[3, 6, 5, 1, 4, 0, 1, 0, 25, 0, 1, 29, 1, 0, 1, 0, 1, 1]' : 0.117115}
{'[3, 6, 5, 1, 4, 0, 1, 0, 25, 0, 1, 29, 1, 0, 1, 0, 1, 1]' : 0.117086}
{'[3, 6, 5, 1, 4, 0, 1, 0, 25, 0, 1, 29, 1, 0, 1, 0, 1, 1]' : 0.117103}
{'[3, 6, 5, 1, 4, 0, 1, 0, 25, 0, 1, 29, 1, 0, 1, 0, 1, 1]' : 0.11701}
{'[3, 6, 5, 1, 4, 0, 1, 0, 25, 0, 1, 29, 1, 0, 1, 0, 1, 1]' : 0.116916}
{'[3, 6, 5, 1, 4, 0, 1, 0, 25, 0, 1, 29, 1, 0, 1, 0, 1, 1]' : 0.116896}
{'[3, 6, 5, 1, 4, 0, 1, 0, 25, 0, 1, 29, 1, 0, 1, 0, 1, 1]' : 0.116862}
{'[3, 6, 5, 1, 4, 0, 1, 0, 25, 0, 1, 29, 1, 0, 1, 0, 1, 1]' : 0.116891}
{'[3, 6, 5, 1, 4, 0, 1, 0, 25, 0, 1, 29, 1, 0, 1, 0, 1, 1]' : 0.116988}
{'[3, 6, 5, 1, 4, 0, 1, 0, 25, 0, 1, 29, 1, 0, 1, 0, 1, 1]' : 0.116881}
{'[3, 6, 5, 1, 4, 0, 1, 0, 25, 0, 1, 29, 1, 0, 1, 0, 1, 1]' : 0.117266}
{'[3, 6, 5, 1, 4, 0, 1, 0, 25, 0, 1, 29, 1, 0, 1, 0, 1, 1]' : 0.117191}

out:
 ["{'[3, 6, 5, 1, 4, 0, 1, 0, 25, 0, 1, 29, 1, 0, 1, 0, 1, 1]' : 0.117078}", "{'[3, 6, 5, 1, 4, 0, 1, 0, 25, 0, 1, 29, 1, 0, 1, 0, 1, 1]' : 0.115737}", "{'[3, 6, 5, 1, 4, 0, 1, 0, 25, 0, 1, 29, 1, 0, 1, 0, 1, 1]' : 0.116916}", "{'[3, 6, 5, 1, 4, 0, 1, 0, 25, 0, 1, 29, 1, 0, 1, 0, 1, 1]' : 0.116974}", "{'[3, 6, 5, 1, 4, 0, 1, 0, 25, 0, 1, 29, 1, 0, 1, 0, 1, 1]' : 0.117035}", "{'[3, 6, 5, 1, 4, 0, 1, 0, 25, 0, 1, 29, 1, 0, 1, 0, 1, 1]' : 0.117825}", "{'[3, 6, 5, 1, 4, 0, 1, 0, 25, 0, 1, 29, 1, 0, 1, 0, 1, 1]' : 0.119881}", "{'[3, 6, 5, 1, 4, 0, 1, 0, 25, 0, 1, 29, 1, 0, 1, 0, 1, 1]' : 0.119971}", "{'[3, 6, 5, 1, 4, 0, 1, 0, 25, 0, 1, 29, 1, 0, 1, 0, 1, 1]' : 0.119979}", "{'[3, 6, 5, 1, 4, 0, 1, 0, 25, 0, 1, 29, 1, 0, 1, 0, 1, 1]' : 0.120061}", "{'[3, 6, 5, 1, 4, 0, 1, 0, 25, 0, 1, 29, 1, 0, 1, 0, 1, 1]' : 0.117157}", "{'[3, 6, 5, 1, 4, 0, 1, 0, 25, 0, 1, 29, 1, 0, 1, 0, 1, 1]' : 0.116928}", "{'[3, 6, 5, 1, 4, 0, 1, 0, 25, 0, 1, 29, 1, 0, 1, 0, 1, 1]' : 0.117003}", "{'[3, 6, 5, 1, 4, 0, 1, 0, 25, 0, 1, 29, 1, 0, 1, 0, 1, 1]' : 0.117175}", "{'[3, 6, 5, 1, 4, 0, 1, 0, 25, 0, 1, 29, 1, 0, 1, 0, 1, 1]' : 0.1193}", "{'[3, 6, 5, 1, 4, 0, 1, 0, 25, 0, 1, 29, 1, 0, 1, 0, 1, 1]' : 0.119971}", "{'[3, 6, 5, 1, 4, 0, 1, 0, 25, 0, 1, 29, 1, 0, 1, 0, 1, 1]' : 0.120058}", "{'[3, 6, 5, 1, 4, 0, 1, 0, 25, 0, 1, 29, 1, 0, 1, 0, 1, 1]' : 0.117809}", "{'[3, 6, 5, 1, 4, 0, 1, 0, 25, 0, 1, 29, 1, 0, 1, 0, 1, 1]' : 0.117115}", "{'[3, 6, 5, 1, 4, 0, 1, 0, 25, 0, 1, 29, 1, 0, 1, 0, 1, 1]' : 0.117086}", "{'[3, 6, 5, 1, 4, 0, 1, 0, 25, 0, 1, 29, 1, 0, 1, 0, 1, 1]' : 0.117103}", "{'[3, 6, 5, 1, 4, 0, 1, 0, 25, 0, 1, 29, 1, 0, 1, 0, 1, 1]' : 0.11701}", "{'[3, 6, 5, 1, 4, 0, 1, 0, 25, 0, 1, 29, 1, 0, 1, 0, 1, 1]' : 0.116916}", "{'[3, 6, 5, 1, 4, 0, 1, 0, 25, 0, 1, 29, 1, 0, 1, 0, 1, 1]' : 0.116896}", "{'[3, 6, 5, 1, 4, 0, 1, 0, 25, 0, 1, 29, 1, 0, 1, 0, 1, 1]' : 0.116862}", "{'[3, 6, 5, 1, 4, 0, 1, 0, 25, 0, 1, 29, 1, 0, 1, 0, 1, 1]' : 0.116891}", "{'[3, 6, 5, 1, 4, 0, 1, 0, 25, 0, 1, 29, 1, 0, 1, 0, 1, 1]' : 0.116988}", "{'[3, 6, 5, 1, 4, 0, 1, 0, 25, 0, 1, 29, 1, 0, 1, 0, 1, 1]' : 0.116881}", "{'[3, 6, 5, 1, 4, 0, 1, 0, 25, 0, 1, 29, 1, 0, 1, 0, 1, 1]' : 0.117266}", "{'[3, 6, 5, 1, 4, 0, 1, 0, 25, 0, 1, 29, 1, 0, 1, 0, 1, 1]' : 0.117191}"]
returning from 'run': {'[3, 6, 5, 1, 4, 0, 1, 0, 25, 0, 1, 29, 1, 0, 1, 0, 1, 1]': ([0.117078, 0.115737, 0.116916, 0.116974, 0.117035, 0.117825, 0.119881, 0.119971, 0.119979, 0.120061, 0.117157, 0.116928, 0.117003, 0.117175, 0.1193, 0.119971, 0.120058, 0.117809, 0.117115, 0.117086, 0.117103, 0.11701, 0.116916, 0.116896, 0.116862, 0.116891, 0.116988, 0.116881, 0.117266, 0.117191], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 6, 5, 1, 4, 0, 1, 0, 25, 0, 1, 29, 1, 0, 1, 0, 1, 1]': ([0.117078, 0.115737, 0.116916, 0.116974, 0.117035, 0.117825, 0.119881, 0.119971, 0.119979, 0.120061, 0.117157, 0.116928, 0.117003, 0.117175, 0.1193, 0.119971, 0.120058, 0.117809, 0.117115, 0.117086, 0.117103, 0.11701, 0.116916, 0.116896, 0.116862, 0.116891, 0.116988, 0.116881, 0.117266, 0.117191], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	44
        Max loop nest depth: 	4
        Additions: 		2200
        Multiplications: 	1020
        Divisions: 		0
        Logical: 		0
        Reads: 			4400
        Writes: 		769
        Comparisons:		44
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest14.exe __orio_perftest14.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest14.exe  
Program Test Output: 
{'[0, 0, 6, 3, 5, 0, 1, 0, 0, 28, 23, 0, 0, 1, 1, 1, 0, 1]' : 0.180731}
{'[0, 0, 6, 3, 5, 0, 1, 0, 0, 28, 23, 0, 0, 1, 1, 1, 0, 1]' : 0.179884}
{'[0, 0, 6, 3, 5, 0, 1, 0, 0, 28, 23, 0, 0, 1, 1, 1, 0, 1]' : 0.159999}
{'[0, 0, 6, 3, 5, 0, 1, 0, 0, 28, 23, 0, 0, 1, 1, 1, 0, 1]' : 0.158101}
{'[0, 0, 6, 3, 5, 0, 1, 0, 0, 28, 23, 0, 0, 1, 1, 1, 0, 1]' : 0.157832}
{'[0, 0, 6, 3, 5, 0, 1, 0, 0, 28, 23, 0, 0, 1, 1, 1, 0, 1]' : 0.157975}
{'[0, 0, 6, 3, 5, 0, 1, 0, 0, 28, 23, 0, 0, 1, 1, 1, 0, 1]' : 0.157909}
{'[0, 0, 6, 3, 5, 0, 1, 0, 0, 28, 23, 0, 0, 1, 1, 1, 0, 1]' : 0.158065}
{'[0, 0, 6, 3, 5, 0, 1, 0, 0, 28, 23, 0, 0, 1, 1, 1, 0, 1]' : 0.158259}
{'[0, 0, 6, 3, 5, 0, 1, 0, 0, 28, 23, 0, 0, 1, 1, 1, 0, 1]' : 0.158161}
{'[0, 0, 6, 3, 5, 0, 1, 0, 0, 28, 23, 0, 0, 1, 1, 1, 0, 1]' : 0.158667}
{'[0, 0, 6, 3, 5, 0, 1, 0, 0, 28, 23, 0, 0, 1, 1, 1, 0, 1]' : 0.158937}
{'[0, 0, 6, 3, 5, 0, 1, 0, 0, 28, 23, 0, 0, 1, 1, 1, 0, 1]' : 0.158055}
{'[0, 0, 6, 3, 5, 0, 1, 0, 0, 28, 23, 0, 0, 1, 1, 1, 0, 1]' : 0.158416}
{'[0, 0, 6, 3, 5, 0, 1, 0, 0, 28, 23, 0, 0, 1, 1, 1, 0, 1]' : 0.157853}
{'[0, 0, 6, 3, 5, 0, 1, 0, 0, 28, 23, 0, 0, 1, 1, 1, 0, 1]' : 0.158303}
{'[0, 0, 6, 3, 5, 0, 1, 0, 0, 28, 23, 0, 0, 1, 1, 1, 0, 1]' : 0.158243}
{'[0, 0, 6, 3, 5, 0, 1, 0, 0, 28, 23, 0, 0, 1, 1, 1, 0, 1]' : 0.158006}
{'[0, 0, 6, 3, 5, 0, 1, 0, 0, 28, 23, 0, 0, 1, 1, 1, 0, 1]' : 0.158098}
{'[0, 0, 6, 3, 5, 0, 1, 0, 0, 28, 23, 0, 0, 1, 1, 1, 0, 1]' : 0.157979}
{'[0, 0, 6, 3, 5, 0, 1, 0, 0, 28, 23, 0, 0, 1, 1, 1, 0, 1]' : 0.158248}
{'[0, 0, 6, 3, 5, 0, 1, 0, 0, 28, 23, 0, 0, 1, 1, 1, 0, 1]' : 0.158637}
{'[0, 0, 6, 3, 5, 0, 1, 0, 0, 28, 23, 0, 0, 1, 1, 1, 0, 1]' : 0.158011}
{'[0, 0, 6, 3, 5, 0, 1, 0, 0, 28, 23, 0, 0, 1, 1, 1, 0, 1]' : 0.158311}
{'[0, 0, 6, 3, 5, 0, 1, 0, 0, 28, 23, 0, 0, 1, 1, 1, 0, 1]' : 0.15783}
{'[0, 0, 6, 3, 5, 0, 1, 0, 0, 28, 23, 0, 0, 1, 1, 1, 0, 1]' : 0.158457}
{'[0, 0, 6, 3, 5, 0, 1, 0, 0, 28, 23, 0, 0, 1, 1, 1, 0, 1]' : 0.158532}
{'[0, 0, 6, 3, 5, 0, 1, 0, 0, 28, 23, 0, 0, 1, 1, 1, 0, 1]' : 0.158313}
{'[0, 0, 6, 3, 5, 0, 1, 0, 0, 28, 23, 0, 0, 1, 1, 1, 0, 1]' : 0.157766}
{'[0, 0, 6, 3, 5, 0, 1, 0, 0, 28, 23, 0, 0, 1, 1, 1, 0, 1]' : 0.157973}

out:
 ["{'[0, 0, 6, 3, 5, 0, 1, 0, 0, 28, 23, 0, 0, 1, 1, 1, 0, 1]' : 0.180731}", "{'[0, 0, 6, 3, 5, 0, 1, 0, 0, 28, 23, 0, 0, 1, 1, 1, 0, 1]' : 0.179884}", "{'[0, 0, 6, 3, 5, 0, 1, 0, 0, 28, 23, 0, 0, 1, 1, 1, 0, 1]' : 0.159999}", "{'[0, 0, 6, 3, 5, 0, 1, 0, 0, 28, 23, 0, 0, 1, 1, 1, 0, 1]' : 0.158101}", "{'[0, 0, 6, 3, 5, 0, 1, 0, 0, 28, 23, 0, 0, 1, 1, 1, 0, 1]' : 0.157832}", "{'[0, 0, 6, 3, 5, 0, 1, 0, 0, 28, 23, 0, 0, 1, 1, 1, 0, 1]' : 0.157975}", "{'[0, 0, 6, 3, 5, 0, 1, 0, 0, 28, 23, 0, 0, 1, 1, 1, 0, 1]' : 0.157909}", "{'[0, 0, 6, 3, 5, 0, 1, 0, 0, 28, 23, 0, 0, 1, 1, 1, 0, 1]' : 0.158065}", "{'[0, 0, 6, 3, 5, 0, 1, 0, 0, 28, 23, 0, 0, 1, 1, 1, 0, 1]' : 0.158259}", "{'[0, 0, 6, 3, 5, 0, 1, 0, 0, 28, 23, 0, 0, 1, 1, 1, 0, 1]' : 0.158161}", "{'[0, 0, 6, 3, 5, 0, 1, 0, 0, 28, 23, 0, 0, 1, 1, 1, 0, 1]' : 0.158667}", "{'[0, 0, 6, 3, 5, 0, 1, 0, 0, 28, 23, 0, 0, 1, 1, 1, 0, 1]' : 0.158937}", "{'[0, 0, 6, 3, 5, 0, 1, 0, 0, 28, 23, 0, 0, 1, 1, 1, 0, 1]' : 0.158055}", "{'[0, 0, 6, 3, 5, 0, 1, 0, 0, 28, 23, 0, 0, 1, 1, 1, 0, 1]' : 0.158416}", "{'[0, 0, 6, 3, 5, 0, 1, 0, 0, 28, 23, 0, 0, 1, 1, 1, 0, 1]' : 0.157853}", "{'[0, 0, 6, 3, 5, 0, 1, 0, 0, 28, 23, 0, 0, 1, 1, 1, 0, 1]' : 0.158303}", "{'[0, 0, 6, 3, 5, 0, 1, 0, 0, 28, 23, 0, 0, 1, 1, 1, 0, 1]' : 0.158243}", "{'[0, 0, 6, 3, 5, 0, 1, 0, 0, 28, 23, 0, 0, 1, 1, 1, 0, 1]' : 0.158006}", "{'[0, 0, 6, 3, 5, 0, 1, 0, 0, 28, 23, 0, 0, 1, 1, 1, 0, 1]' : 0.158098}", "{'[0, 0, 6, 3, 5, 0, 1, 0, 0, 28, 23, 0, 0, 1, 1, 1, 0, 1]' : 0.157979}", "{'[0, 0, 6, 3, 5, 0, 1, 0, 0, 28, 23, 0, 0, 1, 1, 1, 0, 1]' : 0.158248}", "{'[0, 0, 6, 3, 5, 0, 1, 0, 0, 28, 23, 0, 0, 1, 1, 1, 0, 1]' : 0.158637}", "{'[0, 0, 6, 3, 5, 0, 1, 0, 0, 28, 23, 0, 0, 1, 1, 1, 0, 1]' : 0.158011}", "{'[0, 0, 6, 3, 5, 0, 1, 0, 0, 28, 23, 0, 0, 1, 1, 1, 0, 1]' : 0.158311}", "{'[0, 0, 6, 3, 5, 0, 1, 0, 0, 28, 23, 0, 0, 1, 1, 1, 0, 1]' : 0.15783}", "{'[0, 0, 6, 3, 5, 0, 1, 0, 0, 28, 23, 0, 0, 1, 1, 1, 0, 1]' : 0.158457}", "{'[0, 0, 6, 3, 5, 0, 1, 0, 0, 28, 23, 0, 0, 1, 1, 1, 0, 1]' : 0.158532}", "{'[0, 0, 6, 3, 5, 0, 1, 0, 0, 28, 23, 0, 0, 1, 1, 1, 0, 1]' : 0.158313}", "{'[0, 0, 6, 3, 5, 0, 1, 0, 0, 28, 23, 0, 0, 1, 1, 1, 0, 1]' : 0.157766}", "{'[0, 0, 6, 3, 5, 0, 1, 0, 0, 28, 23, 0, 0, 1, 1, 1, 0, 1]' : 0.157973}"]
returning from 'run': {'[0, 0, 6, 3, 5, 0, 1, 0, 0, 28, 23, 0, 0, 1, 1, 1, 0, 1]': ([0.180731, 0.179884, 0.159999, 0.158101, 0.157832, 0.157975, 0.157909, 0.158065, 0.158259, 0.158161, 0.158667, 0.158937, 0.158055, 0.158416, 0.157853, 0.158303, 0.158243, 0.158006, 0.158098, 0.157979, 0.158248, 0.158637, 0.158011, 0.158311, 0.15783, 0.158457, 0.158532, 0.158313, 0.157766, 0.157973], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 6, 3, 5, 0, 1, 0, 0, 28, 23, 0, 0, 1, 1, 1, 0, 1]': ([0.180731, 0.179884, 0.159999, 0.158101, 0.157832, 0.157975, 0.157909, 0.158065, 0.158259, 0.158161, 0.158667, 0.158937, 0.158055, 0.158416, 0.157853, 0.158303, 0.158243, 0.158006, 0.158098, 0.157979, 0.158248, 0.158637, 0.158011, 0.158311, 0.15783, 0.158457, 0.158532, 0.158313, 0.157766, 0.157973], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		191
        Multiplications: 	62
        Divisions: 		0
        Logical: 		0
        Reads: 			443
        Writes: 		81
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest15.exe __orio_perftest15.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest15.exe  
Program Test Output: 
{'[0, 0, 1, 0, 2, 6, 0, 0, 15, 0, 9, 10, 0, 1, 0, 0, 1, 1]' : 0.22192}
{'[0, 0, 1, 0, 2, 6, 0, 0, 15, 0, 9, 10, 0, 1, 0, 0, 1, 1]' : 0.209094}
{'[0, 0, 1, 0, 2, 6, 0, 0, 15, 0, 9, 10, 0, 1, 0, 0, 1, 1]' : 0.213406}
{'[0, 0, 1, 0, 2, 6, 0, 0, 15, 0, 9, 10, 0, 1, 0, 0, 1, 1]' : 0.213255}
{'[0, 0, 1, 0, 2, 6, 0, 0, 15, 0, 9, 10, 0, 1, 0, 0, 1, 1]' : 0.213228}
{'[0, 0, 1, 0, 2, 6, 0, 0, 15, 0, 9, 10, 0, 1, 0, 0, 1, 1]' : 0.211092}
{'[0, 0, 1, 0, 2, 6, 0, 0, 15, 0, 9, 10, 0, 1, 0, 0, 1, 1]' : 0.21123}
{'[0, 0, 1, 0, 2, 6, 0, 0, 15, 0, 9, 10, 0, 1, 0, 0, 1, 1]' : 0.213279}
{'[0, 0, 1, 0, 2, 6, 0, 0, 15, 0, 9, 10, 0, 1, 0, 0, 1, 1]' : 0.213496}
{'[0, 0, 1, 0, 2, 6, 0, 0, 15, 0, 9, 10, 0, 1, 0, 0, 1, 1]' : 0.213151}
{'[0, 0, 1, 0, 2, 6, 0, 0, 15, 0, 9, 10, 0, 1, 0, 0, 1, 1]' : 0.208133}
{'[0, 0, 1, 0, 2, 6, 0, 0, 15, 0, 9, 10, 0, 1, 0, 0, 1, 1]' : 0.213156}
{'[0, 0, 1, 0, 2, 6, 0, 0, 15, 0, 9, 10, 0, 1, 0, 0, 1, 1]' : 0.213178}
{'[0, 0, 1, 0, 2, 6, 0, 0, 15, 0, 9, 10, 0, 1, 0, 0, 1, 1]' : 0.21343}
{'[0, 0, 1, 0, 2, 6, 0, 0, 15, 0, 9, 10, 0, 1, 0, 0, 1, 1]' : 0.213062}
{'[0, 0, 1, 0, 2, 6, 0, 0, 15, 0, 9, 10, 0, 1, 0, 0, 1, 1]' : 0.213172}
{'[0, 0, 1, 0, 2, 6, 0, 0, 15, 0, 9, 10, 0, 1, 0, 0, 1, 1]' : 0.211759}
{'[0, 0, 1, 0, 2, 6, 0, 0, 15, 0, 9, 10, 0, 1, 0, 0, 1, 1]' : 0.206522}
{'[0, 0, 1, 0, 2, 6, 0, 0, 15, 0, 9, 10, 0, 1, 0, 0, 1, 1]' : 0.212849}
{'[0, 0, 1, 0, 2, 6, 0, 0, 15, 0, 9, 10, 0, 1, 0, 0, 1, 1]' : 0.213096}
{'[0, 0, 1, 0, 2, 6, 0, 0, 15, 0, 9, 10, 0, 1, 0, 0, 1, 1]' : 0.215757}
{'[0, 0, 1, 0, 2, 6, 0, 0, 15, 0, 9, 10, 0, 1, 0, 0, 1, 1]' : 0.213127}
{'[0, 0, 1, 0, 2, 6, 0, 0, 15, 0, 9, 10, 0, 1, 0, 0, 1, 1]' : 0.213346}
{'[0, 0, 1, 0, 2, 6, 0, 0, 15, 0, 9, 10, 0, 1, 0, 0, 1, 1]' : 0.213705}
{'[0, 0, 1, 0, 2, 6, 0, 0, 15, 0, 9, 10, 0, 1, 0, 0, 1, 1]' : 0.213098}
{'[0, 0, 1, 0, 2, 6, 0, 0, 15, 0, 9, 10, 0, 1, 0, 0, 1, 1]' : 0.208018}
{'[0, 0, 1, 0, 2, 6, 0, 0, 15, 0, 9, 10, 0, 1, 0, 0, 1, 1]' : 0.206642}
{'[0, 0, 1, 0, 2, 6, 0, 0, 15, 0, 9, 10, 0, 1, 0, 0, 1, 1]' : 0.212631}
{'[0, 0, 1, 0, 2, 6, 0, 0, 15, 0, 9, 10, 0, 1, 0, 0, 1, 1]' : 0.219632}
{'[0, 0, 1, 0, 2, 6, 0, 0, 15, 0, 9, 10, 0, 1, 0, 0, 1, 1]' : 0.209527}

out:
 ["{'[0, 0, 1, 0, 2, 6, 0, 0, 15, 0, 9, 10, 0, 1, 0, 0, 1, 1]' : 0.22192}", "{'[0, 0, 1, 0, 2, 6, 0, 0, 15, 0, 9, 10, 0, 1, 0, 0, 1, 1]' : 0.209094}", "{'[0, 0, 1, 0, 2, 6, 0, 0, 15, 0, 9, 10, 0, 1, 0, 0, 1, 1]' : 0.213406}", "{'[0, 0, 1, 0, 2, 6, 0, 0, 15, 0, 9, 10, 0, 1, 0, 0, 1, 1]' : 0.213255}", "{'[0, 0, 1, 0, 2, 6, 0, 0, 15, 0, 9, 10, 0, 1, 0, 0, 1, 1]' : 0.213228}", "{'[0, 0, 1, 0, 2, 6, 0, 0, 15, 0, 9, 10, 0, 1, 0, 0, 1, 1]' : 0.211092}", "{'[0, 0, 1, 0, 2, 6, 0, 0, 15, 0, 9, 10, 0, 1, 0, 0, 1, 1]' : 0.21123}", "{'[0, 0, 1, 0, 2, 6, 0, 0, 15, 0, 9, 10, 0, 1, 0, 0, 1, 1]' : 0.213279}", "{'[0, 0, 1, 0, 2, 6, 0, 0, 15, 0, 9, 10, 0, 1, 0, 0, 1, 1]' : 0.213496}", "{'[0, 0, 1, 0, 2, 6, 0, 0, 15, 0, 9, 10, 0, 1, 0, 0, 1, 1]' : 0.213151}", "{'[0, 0, 1, 0, 2, 6, 0, 0, 15, 0, 9, 10, 0, 1, 0, 0, 1, 1]' : 0.208133}", "{'[0, 0, 1, 0, 2, 6, 0, 0, 15, 0, 9, 10, 0, 1, 0, 0, 1, 1]' : 0.213156}", "{'[0, 0, 1, 0, 2, 6, 0, 0, 15, 0, 9, 10, 0, 1, 0, 0, 1, 1]' : 0.213178}", "{'[0, 0, 1, 0, 2, 6, 0, 0, 15, 0, 9, 10, 0, 1, 0, 0, 1, 1]' : 0.21343}", "{'[0, 0, 1, 0, 2, 6, 0, 0, 15, 0, 9, 10, 0, 1, 0, 0, 1, 1]' : 0.213062}", "{'[0, 0, 1, 0, 2, 6, 0, 0, 15, 0, 9, 10, 0, 1, 0, 0, 1, 1]' : 0.213172}", "{'[0, 0, 1, 0, 2, 6, 0, 0, 15, 0, 9, 10, 0, 1, 0, 0, 1, 1]' : 0.211759}", "{'[0, 0, 1, 0, 2, 6, 0, 0, 15, 0, 9, 10, 0, 1, 0, 0, 1, 1]' : 0.206522}", "{'[0, 0, 1, 0, 2, 6, 0, 0, 15, 0, 9, 10, 0, 1, 0, 0, 1, 1]' : 0.212849}", "{'[0, 0, 1, 0, 2, 6, 0, 0, 15, 0, 9, 10, 0, 1, 0, 0, 1, 1]' : 0.213096}", "{'[0, 0, 1, 0, 2, 6, 0, 0, 15, 0, 9, 10, 0, 1, 0, 0, 1, 1]' : 0.215757}", "{'[0, 0, 1, 0, 2, 6, 0, 0, 15, 0, 9, 10, 0, 1, 0, 0, 1, 1]' : 0.213127}", "{'[0, 0, 1, 0, 2, 6, 0, 0, 15, 0, 9, 10, 0, 1, 0, 0, 1, 1]' : 0.213346}", "{'[0, 0, 1, 0, 2, 6, 0, 0, 15, 0, 9, 10, 0, 1, 0, 0, 1, 1]' : 0.213705}", "{'[0, 0, 1, 0, 2, 6, 0, 0, 15, 0, 9, 10, 0, 1, 0, 0, 1, 1]' : 0.213098}", "{'[0, 0, 1, 0, 2, 6, 0, 0, 15, 0, 9, 10, 0, 1, 0, 0, 1, 1]' : 0.208018}", "{'[0, 0, 1, 0, 2, 6, 0, 0, 15, 0, 9, 10, 0, 1, 0, 0, 1, 1]' : 0.206642}", "{'[0, 0, 1, 0, 2, 6, 0, 0, 15, 0, 9, 10, 0, 1, 0, 0, 1, 1]' : 0.212631}", "{'[0, 0, 1, 0, 2, 6, 0, 0, 15, 0, 9, 10, 0, 1, 0, 0, 1, 1]' : 0.219632}", "{'[0, 0, 1, 0, 2, 6, 0, 0, 15, 0, 9, 10, 0, 1, 0, 0, 1, 1]' : 0.209527}"]
returning from 'run': {'[0, 0, 1, 0, 2, 6, 0, 0, 15, 0, 9, 10, 0, 1, 0, 0, 1, 1]': ([0.22192, 0.209094, 0.213406, 0.213255, 0.213228, 0.211092, 0.21123, 0.213279, 0.213496, 0.213151, 0.208133, 0.213156, 0.213178, 0.21343, 0.213062, 0.213172, 0.211759, 0.206522, 0.212849, 0.213096, 0.215757, 0.213127, 0.213346, 0.213705, 0.213098, 0.208018, 0.206642, 0.212631, 0.219632, 0.209527], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 1, 0, 2, 6, 0, 0, 15, 0, 9, 10, 0, 1, 0, 0, 1, 1]': ([0.22192, 0.209094, 0.213406, 0.213255, 0.213228, 0.211092, 0.21123, 0.213279, 0.213496, 0.213151, 0.208133, 0.213156, 0.213178, 0.21343, 0.213062, 0.213172, 0.211759, 0.206522, 0.212849, 0.213096, 0.215757, 0.213127, 0.213346, 0.213705, 0.213098, 0.208018, 0.206642, 0.212631, 0.219632, 0.209527], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	6
        Additions: 		365
        Multiplications: 	146
        Divisions: 		0
        Logical: 		0
        Reads: 			776
        Writes: 		144
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest16.exe __orio_perftest16.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest16.exe  
Program Test Output: 
{'[1, 2, 5, 6, 2, 0, 0, 0, 17, 0, 29, 8, 0, 2, 0, 1, 1, 0]' : 0.200015}
{'[1, 2, 5, 6, 2, 0, 0, 0, 17, 0, 29, 8, 0, 2, 0, 1, 1, 0]' : 0.192144}
{'[1, 2, 5, 6, 2, 0, 0, 0, 17, 0, 29, 8, 0, 2, 0, 1, 1, 0]' : 0.166418}
{'[1, 2, 5, 6, 2, 0, 0, 0, 17, 0, 29, 8, 0, 2, 0, 1, 1, 0]' : 0.16646}
{'[1, 2, 5, 6, 2, 0, 0, 0, 17, 0, 29, 8, 0, 2, 0, 1, 1, 0]' : 0.166479}
{'[1, 2, 5, 6, 2, 0, 0, 0, 17, 0, 29, 8, 0, 2, 0, 1, 1, 0]' : 0.166534}
{'[1, 2, 5, 6, 2, 0, 0, 0, 17, 0, 29, 8, 0, 2, 0, 1, 1, 0]' : 0.166527}
{'[1, 2, 5, 6, 2, 0, 0, 0, 17, 0, 29, 8, 0, 2, 0, 1, 1, 0]' : 0.166525}
{'[1, 2, 5, 6, 2, 0, 0, 0, 17, 0, 29, 8, 0, 2, 0, 1, 1, 0]' : 0.167205}
{'[1, 2, 5, 6, 2, 0, 0, 0, 17, 0, 29, 8, 0, 2, 0, 1, 1, 0]' : 0.166748}
{'[1, 2, 5, 6, 2, 0, 0, 0, 17, 0, 29, 8, 0, 2, 0, 1, 1, 0]' : 0.166522}
{'[1, 2, 5, 6, 2, 0, 0, 0, 17, 0, 29, 8, 0, 2, 0, 1, 1, 0]' : 0.166526}
{'[1, 2, 5, 6, 2, 0, 0, 0, 17, 0, 29, 8, 0, 2, 0, 1, 1, 0]' : 0.166513}
{'[1, 2, 5, 6, 2, 0, 0, 0, 17, 0, 29, 8, 0, 2, 0, 1, 1, 0]' : 0.16686}
{'[1, 2, 5, 6, 2, 0, 0, 0, 17, 0, 29, 8, 0, 2, 0, 1, 1, 0]' : 0.166565}
{'[1, 2, 5, 6, 2, 0, 0, 0, 17, 0, 29, 8, 0, 2, 0, 1, 1, 0]' : 0.166546}
{'[1, 2, 5, 6, 2, 0, 0, 0, 17, 0, 29, 8, 0, 2, 0, 1, 1, 0]' : 0.166549}
{'[1, 2, 5, 6, 2, 0, 0, 0, 17, 0, 29, 8, 0, 2, 0, 1, 1, 0]' : 0.167125}
{'[1, 2, 5, 6, 2, 0, 0, 0, 17, 0, 29, 8, 0, 2, 0, 1, 1, 0]' : 0.166572}
{'[1, 2, 5, 6, 2, 0, 0, 0, 17, 0, 29, 8, 0, 2, 0, 1, 1, 0]' : 0.166535}
{'[1, 2, 5, 6, 2, 0, 0, 0, 17, 0, 29, 8, 0, 2, 0, 1, 1, 0]' : 0.166543}
{'[1, 2, 5, 6, 2, 0, 0, 0, 17, 0, 29, 8, 0, 2, 0, 1, 1, 0]' : 0.166786}
{'[1, 2, 5, 6, 2, 0, 0, 0, 17, 0, 29, 8, 0, 2, 0, 1, 1, 0]' : 0.166578}
{'[1, 2, 5, 6, 2, 0, 0, 0, 17, 0, 29, 8, 0, 2, 0, 1, 1, 0]' : 0.166539}
{'[1, 2, 5, 6, 2, 0, 0, 0, 17, 0, 29, 8, 0, 2, 0, 1, 1, 0]' : 0.166563}
{'[1, 2, 5, 6, 2, 0, 0, 0, 17, 0, 29, 8, 0, 2, 0, 1, 1, 0]' : 0.166515}
{'[1, 2, 5, 6, 2, 0, 0, 0, 17, 0, 29, 8, 0, 2, 0, 1, 1, 0]' : 0.166995}
{'[1, 2, 5, 6, 2, 0, 0, 0, 17, 0, 29, 8, 0, 2, 0, 1, 1, 0]' : 0.166702}
{'[1, 2, 5, 6, 2, 0, 0, 0, 17, 0, 29, 8, 0, 2, 0, 1, 1, 0]' : 0.166619}
{'[1, 2, 5, 6, 2, 0, 0, 0, 17, 0, 29, 8, 0, 2, 0, 1, 1, 0]' : 0.166587}

out:
 ["{'[1, 2, 5, 6, 2, 0, 0, 0, 17, 0, 29, 8, 0, 2, 0, 1, 1, 0]' : 0.200015}", "{'[1, 2, 5, 6, 2, 0, 0, 0, 17, 0, 29, 8, 0, 2, 0, 1, 1, 0]' : 0.192144}", "{'[1, 2, 5, 6, 2, 0, 0, 0, 17, 0, 29, 8, 0, 2, 0, 1, 1, 0]' : 0.166418}", "{'[1, 2, 5, 6, 2, 0, 0, 0, 17, 0, 29, 8, 0, 2, 0, 1, 1, 0]' : 0.16646}", "{'[1, 2, 5, 6, 2, 0, 0, 0, 17, 0, 29, 8, 0, 2, 0, 1, 1, 0]' : 0.166479}", "{'[1, 2, 5, 6, 2, 0, 0, 0, 17, 0, 29, 8, 0, 2, 0, 1, 1, 0]' : 0.166534}", "{'[1, 2, 5, 6, 2, 0, 0, 0, 17, 0, 29, 8, 0, 2, 0, 1, 1, 0]' : 0.166527}", "{'[1, 2, 5, 6, 2, 0, 0, 0, 17, 0, 29, 8, 0, 2, 0, 1, 1, 0]' : 0.166525}", "{'[1, 2, 5, 6, 2, 0, 0, 0, 17, 0, 29, 8, 0, 2, 0, 1, 1, 0]' : 0.167205}", "{'[1, 2, 5, 6, 2, 0, 0, 0, 17, 0, 29, 8, 0, 2, 0, 1, 1, 0]' : 0.166748}", "{'[1, 2, 5, 6, 2, 0, 0, 0, 17, 0, 29, 8, 0, 2, 0, 1, 1, 0]' : 0.166522}", "{'[1, 2, 5, 6, 2, 0, 0, 0, 17, 0, 29, 8, 0, 2, 0, 1, 1, 0]' : 0.166526}", "{'[1, 2, 5, 6, 2, 0, 0, 0, 17, 0, 29, 8, 0, 2, 0, 1, 1, 0]' : 0.166513}", "{'[1, 2, 5, 6, 2, 0, 0, 0, 17, 0, 29, 8, 0, 2, 0, 1, 1, 0]' : 0.16686}", "{'[1, 2, 5, 6, 2, 0, 0, 0, 17, 0, 29, 8, 0, 2, 0, 1, 1, 0]' : 0.166565}", "{'[1, 2, 5, 6, 2, 0, 0, 0, 17, 0, 29, 8, 0, 2, 0, 1, 1, 0]' : 0.166546}", "{'[1, 2, 5, 6, 2, 0, 0, 0, 17, 0, 29, 8, 0, 2, 0, 1, 1, 0]' : 0.166549}", "{'[1, 2, 5, 6, 2, 0, 0, 0, 17, 0, 29, 8, 0, 2, 0, 1, 1, 0]' : 0.167125}", "{'[1, 2, 5, 6, 2, 0, 0, 0, 17, 0, 29, 8, 0, 2, 0, 1, 1, 0]' : 0.166572}", "{'[1, 2, 5, 6, 2, 0, 0, 0, 17, 0, 29, 8, 0, 2, 0, 1, 1, 0]' : 0.166535}", "{'[1, 2, 5, 6, 2, 0, 0, 0, 17, 0, 29, 8, 0, 2, 0, 1, 1, 0]' : 0.166543}", "{'[1, 2, 5, 6, 2, 0, 0, 0, 17, 0, 29, 8, 0, 2, 0, 1, 1, 0]' : 0.166786}", "{'[1, 2, 5, 6, 2, 0, 0, 0, 17, 0, 29, 8, 0, 2, 0, 1, 1, 0]' : 0.166578}", "{'[1, 2, 5, 6, 2, 0, 0, 0, 17, 0, 29, 8, 0, 2, 0, 1, 1, 0]' : 0.166539}", "{'[1, 2, 5, 6, 2, 0, 0, 0, 17, 0, 29, 8, 0, 2, 0, 1, 1, 0]' : 0.166563}", "{'[1, 2, 5, 6, 2, 0, 0, 0, 17, 0, 29, 8, 0, 2, 0, 1, 1, 0]' : 0.166515}", "{'[1, 2, 5, 6, 2, 0, 0, 0, 17, 0, 29, 8, 0, 2, 0, 1, 1, 0]' : 0.166995}", "{'[1, 2, 5, 6, 2, 0, 0, 0, 17, 0, 29, 8, 0, 2, 0, 1, 1, 0]' : 0.166702}", "{'[1, 2, 5, 6, 2, 0, 0, 0, 17, 0, 29, 8, 0, 2, 0, 1, 1, 0]' : 0.166619}", "{'[1, 2, 5, 6, 2, 0, 0, 0, 17, 0, 29, 8, 0, 2, 0, 1, 1, 0]' : 0.166587}"]
returning from 'run': {'[1, 2, 5, 6, 2, 0, 0, 0, 17, 0, 29, 8, 0, 2, 0, 1, 1, 0]': ([0.200015, 0.192144, 0.166418, 0.16646, 0.166479, 0.166534, 0.166527, 0.166525, 0.167205, 0.166748, 0.166522, 0.166526, 0.166513, 0.16686, 0.166565, 0.166546, 0.166549, 0.167125, 0.166572, 0.166535, 0.166543, 0.166786, 0.166578, 0.166539, 0.166563, 0.166515, 0.166995, 0.166702, 0.166619, 0.166587], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 2, 5, 6, 2, 0, 0, 0, 17, 0, 29, 8, 0, 2, 0, 1, 1, 0]': ([0.200015, 0.192144, 0.166418, 0.16646, 0.166479, 0.166534, 0.166527, 0.166525, 0.167205, 0.166748, 0.166522, 0.166526, 0.166513, 0.16686, 0.166565, 0.166546, 0.166549, 0.167125, 0.166572, 0.166535, 0.166543, 0.166786, 0.166578, 0.166539, 0.166563, 0.166515, 0.166995, 0.166702, 0.166619, 0.166587], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	35
        Max loop nest depth: 	5
        Additions: 		1246
        Multiplications: 	380
        Divisions: 		0
        Logical: 		0
        Reads: 			2277
        Writes: 		300
        Comparisons:		35
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest17.exe __orio_perftest17.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest17.exe  
Program Test Output: 
{'[5, 1, 1, 0, 6, 0, 0, 1, 1, 3, 3, 0, 0, 2, 0, 0, 1, 1]' : 0.218364}
{'[5, 1, 1, 0, 6, 0, 0, 1, 1, 3, 3, 0, 0, 2, 0, 0, 1, 1]' : 0.216374}
{'[5, 1, 1, 0, 6, 0, 0, 1, 1, 3, 3, 0, 0, 2, 0, 0, 1, 1]' : 0.183539}
{'[5, 1, 1, 0, 6, 0, 0, 1, 1, 3, 3, 0, 0, 2, 0, 0, 1, 1]' : 0.181771}
{'[5, 1, 1, 0, 6, 0, 0, 1, 1, 3, 3, 0, 0, 2, 0, 0, 1, 1]' : 0.181837}
{'[5, 1, 1, 0, 6, 0, 0, 1, 1, 3, 3, 0, 0, 2, 0, 0, 1, 1]' : 0.181862}
{'[5, 1, 1, 0, 6, 0, 0, 1, 1, 3, 3, 0, 0, 2, 0, 0, 1, 1]' : 0.181921}
{'[5, 1, 1, 0, 6, 0, 0, 1, 1, 3, 3, 0, 0, 2, 0, 0, 1, 1]' : 0.182031}
{'[5, 1, 1, 0, 6, 0, 0, 1, 1, 3, 3, 0, 0, 2, 0, 0, 1, 1]' : 0.182452}
{'[5, 1, 1, 0, 6, 0, 0, 1, 1, 3, 3, 0, 0, 2, 0, 0, 1, 1]' : 0.181884}
{'[5, 1, 1, 0, 6, 0, 0, 1, 1, 3, 3, 0, 0, 2, 0, 0, 1, 1]' : 0.18179}
{'[5, 1, 1, 0, 6, 0, 0, 1, 1, 3, 3, 0, 0, 2, 0, 0, 1, 1]' : 0.181841}
{'[5, 1, 1, 0, 6, 0, 0, 1, 1, 3, 3, 0, 0, 2, 0, 0, 1, 1]' : 0.181877}
{'[5, 1, 1, 0, 6, 0, 0, 1, 1, 3, 3, 0, 0, 2, 0, 0, 1, 1]' : 0.181822}
{'[5, 1, 1, 0, 6, 0, 0, 1, 1, 3, 3, 0, 0, 2, 0, 0, 1, 1]' : 0.182547}
{'[5, 1, 1, 0, 6, 0, 0, 1, 1, 3, 3, 0, 0, 2, 0, 0, 1, 1]' : 0.185531}
{'[5, 1, 1, 0, 6, 0, 0, 1, 1, 3, 3, 0, 0, 2, 0, 0, 1, 1]' : 0.186239}
{'[5, 1, 1, 0, 6, 0, 0, 1, 1, 3, 3, 0, 0, 2, 0, 0, 1, 1]' : 0.185754}
{'[5, 1, 1, 0, 6, 0, 0, 1, 1, 3, 3, 0, 0, 2, 0, 0, 1, 1]' : 0.185659}
{'[5, 1, 1, 0, 6, 0, 0, 1, 1, 3, 3, 0, 0, 2, 0, 0, 1, 1]' : 0.18552}
{'[5, 1, 1, 0, 6, 0, 0, 1, 1, 3, 3, 0, 0, 2, 0, 0, 1, 1]' : 0.185709}
{'[5, 1, 1, 0, 6, 0, 0, 1, 1, 3, 3, 0, 0, 2, 0, 0, 1, 1]' : 0.185614}
{'[5, 1, 1, 0, 6, 0, 0, 1, 1, 3, 3, 0, 0, 2, 0, 0, 1, 1]' : 0.185648}
{'[5, 1, 1, 0, 6, 0, 0, 1, 1, 3, 3, 0, 0, 2, 0, 0, 1, 1]' : 0.185606}
{'[5, 1, 1, 0, 6, 0, 0, 1, 1, 3, 3, 0, 0, 2, 0, 0, 1, 1]' : 0.186117}
{'[5, 1, 1, 0, 6, 0, 0, 1, 1, 3, 3, 0, 0, 2, 0, 0, 1, 1]' : 0.185681}
{'[5, 1, 1, 0, 6, 0, 0, 1, 1, 3, 3, 0, 0, 2, 0, 0, 1, 1]' : 0.1856}
{'[5, 1, 1, 0, 6, 0, 0, 1, 1, 3, 3, 0, 0, 2, 0, 0, 1, 1]' : 0.18568}
{'[5, 1, 1, 0, 6, 0, 0, 1, 1, 3, 3, 0, 0, 2, 0, 0, 1, 1]' : 0.185687}
{'[5, 1, 1, 0, 6, 0, 0, 1, 1, 3, 3, 0, 0, 2, 0, 0, 1, 1]' : 0.185599}

out:
 ["{'[5, 1, 1, 0, 6, 0, 0, 1, 1, 3, 3, 0, 0, 2, 0, 0, 1, 1]' : 0.218364}", "{'[5, 1, 1, 0, 6, 0, 0, 1, 1, 3, 3, 0, 0, 2, 0, 0, 1, 1]' : 0.216374}", "{'[5, 1, 1, 0, 6, 0, 0, 1, 1, 3, 3, 0, 0, 2, 0, 0, 1, 1]' : 0.183539}", "{'[5, 1, 1, 0, 6, 0, 0, 1, 1, 3, 3, 0, 0, 2, 0, 0, 1, 1]' : 0.181771}", "{'[5, 1, 1, 0, 6, 0, 0, 1, 1, 3, 3, 0, 0, 2, 0, 0, 1, 1]' : 0.181837}", "{'[5, 1, 1, 0, 6, 0, 0, 1, 1, 3, 3, 0, 0, 2, 0, 0, 1, 1]' : 0.181862}", "{'[5, 1, 1, 0, 6, 0, 0, 1, 1, 3, 3, 0, 0, 2, 0, 0, 1, 1]' : 0.181921}", "{'[5, 1, 1, 0, 6, 0, 0, 1, 1, 3, 3, 0, 0, 2, 0, 0, 1, 1]' : 0.182031}", "{'[5, 1, 1, 0, 6, 0, 0, 1, 1, 3, 3, 0, 0, 2, 0, 0, 1, 1]' : 0.182452}", "{'[5, 1, 1, 0, 6, 0, 0, 1, 1, 3, 3, 0, 0, 2, 0, 0, 1, 1]' : 0.181884}", "{'[5, 1, 1, 0, 6, 0, 0, 1, 1, 3, 3, 0, 0, 2, 0, 0, 1, 1]' : 0.18179}", "{'[5, 1, 1, 0, 6, 0, 0, 1, 1, 3, 3, 0, 0, 2, 0, 0, 1, 1]' : 0.181841}", "{'[5, 1, 1, 0, 6, 0, 0, 1, 1, 3, 3, 0, 0, 2, 0, 0, 1, 1]' : 0.181877}", "{'[5, 1, 1, 0, 6, 0, 0, 1, 1, 3, 3, 0, 0, 2, 0, 0, 1, 1]' : 0.181822}", "{'[5, 1, 1, 0, 6, 0, 0, 1, 1, 3, 3, 0, 0, 2, 0, 0, 1, 1]' : 0.182547}", "{'[5, 1, 1, 0, 6, 0, 0, 1, 1, 3, 3, 0, 0, 2, 0, 0, 1, 1]' : 0.185531}", "{'[5, 1, 1, 0, 6, 0, 0, 1, 1, 3, 3, 0, 0, 2, 0, 0, 1, 1]' : 0.186239}", "{'[5, 1, 1, 0, 6, 0, 0, 1, 1, 3, 3, 0, 0, 2, 0, 0, 1, 1]' : 0.185754}", "{'[5, 1, 1, 0, 6, 0, 0, 1, 1, 3, 3, 0, 0, 2, 0, 0, 1, 1]' : 0.185659}", "{'[5, 1, 1, 0, 6, 0, 0, 1, 1, 3, 3, 0, 0, 2, 0, 0, 1, 1]' : 0.18552}", "{'[5, 1, 1, 0, 6, 0, 0, 1, 1, 3, 3, 0, 0, 2, 0, 0, 1, 1]' : 0.185709}", "{'[5, 1, 1, 0, 6, 0, 0, 1, 1, 3, 3, 0, 0, 2, 0, 0, 1, 1]' : 0.185614}", "{'[5, 1, 1, 0, 6, 0, 0, 1, 1, 3, 3, 0, 0, 2, 0, 0, 1, 1]' : 0.185648}", "{'[5, 1, 1, 0, 6, 0, 0, 1, 1, 3, 3, 0, 0, 2, 0, 0, 1, 1]' : 0.185606}", "{'[5, 1, 1, 0, 6, 0, 0, 1, 1, 3, 3, 0, 0, 2, 0, 0, 1, 1]' : 0.186117}", "{'[5, 1, 1, 0, 6, 0, 0, 1, 1, 3, 3, 0, 0, 2, 0, 0, 1, 1]' : 0.185681}", "{'[5, 1, 1, 0, 6, 0, 0, 1, 1, 3, 3, 0, 0, 2, 0, 0, 1, 1]' : 0.1856}", "{'[5, 1, 1, 0, 6, 0, 0, 1, 1, 3, 3, 0, 0, 2, 0, 0, 1, 1]' : 0.18568}", "{'[5, 1, 1, 0, 6, 0, 0, 1, 1, 3, 3, 0, 0, 2, 0, 0, 1, 1]' : 0.185687}", "{'[5, 1, 1, 0, 6, 0, 0, 1, 1, 3, 3, 0, 0, 2, 0, 0, 1, 1]' : 0.185599}"]
returning from 'run': {'[5, 1, 1, 0, 6, 0, 0, 1, 1, 3, 3, 0, 0, 2, 0, 0, 1, 1]': ([0.218364, 0.216374, 0.183539, 0.181771, 0.181837, 0.181862, 0.181921, 0.182031, 0.182452, 0.181884, 0.18179, 0.181841, 0.181877, 0.181822, 0.182547, 0.185531, 0.186239, 0.185754, 0.185659, 0.18552, 0.185709, 0.185614, 0.185648, 0.185606, 0.186117, 0.185681, 0.1856, 0.18568, 0.185687, 0.185599], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 1, 1, 0, 6, 0, 0, 1, 1, 3, 3, 0, 0, 2, 0, 0, 1, 1]': ([0.218364, 0.216374, 0.183539, 0.181771, 0.181837, 0.181862, 0.181921, 0.182031, 0.182452, 0.181884, 0.18179, 0.181841, 0.181877, 0.181822, 0.182547, 0.185531, 0.186239, 0.185754, 0.185659, 0.18552, 0.185709, 0.185614, 0.185648, 0.185606, 0.186117, 0.185681, 0.1856, 0.18568, 0.185687, 0.185599], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	6
        Additions: 		1146
        Multiplications: 	504
        Divisions: 		0
        Logical: 		0
        Reads: 			2306
        Writes: 		428
        Comparisons:		20
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest18.exe __orio_perftest18.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest18.exe  
Program Test Output: 
{'[1, 0, 5, 6, 6, 4, 1, 0, 24, 0, 5, 18, 1, 1, 0, 1, 0, 0]' : 0.122337}
{'[1, 0, 5, 6, 6, 4, 1, 0, 24, 0, 5, 18, 1, 1, 0, 1, 0, 0]' : 0.122665}
{'[1, 0, 5, 6, 6, 4, 1, 0, 24, 0, 5, 18, 1, 1, 0, 1, 0, 0]' : 0.121704}
{'[1, 0, 5, 6, 6, 4, 1, 0, 24, 0, 5, 18, 1, 1, 0, 1, 0, 0]' : 0.122304}
{'[1, 0, 5, 6, 6, 4, 1, 0, 24, 0, 5, 18, 1, 1, 0, 1, 0, 0]' : 0.108204}
{'[1, 0, 5, 6, 6, 4, 1, 0, 24, 0, 5, 18, 1, 1, 0, 1, 0, 0]' : 0.107564}
{'[1, 0, 5, 6, 6, 4, 1, 0, 24, 0, 5, 18, 1, 1, 0, 1, 0, 0]' : 0.10752}
{'[1, 0, 5, 6, 6, 4, 1, 0, 24, 0, 5, 18, 1, 1, 0, 1, 0, 0]' : 0.106129}
{'[1, 0, 5, 6, 6, 4, 1, 0, 24, 0, 5, 18, 1, 1, 0, 1, 0, 0]' : 0.110527}
{'[1, 0, 5, 6, 6, 4, 1, 0, 24, 0, 5, 18, 1, 1, 0, 1, 0, 0]' : 0.109839}
{'[1, 0, 5, 6, 6, 4, 1, 0, 24, 0, 5, 18, 1, 1, 0, 1, 0, 0]' : 0.107832}
{'[1, 0, 5, 6, 6, 4, 1, 0, 24, 0, 5, 18, 1, 1, 0, 1, 0, 0]' : 0.107471}
{'[1, 0, 5, 6, 6, 4, 1, 0, 24, 0, 5, 18, 1, 1, 0, 1, 0, 0]' : 0.109252}
{'[1, 0, 5, 6, 6, 4, 1, 0, 24, 0, 5, 18, 1, 1, 0, 1, 0, 0]' : 0.109994}
{'[1, 0, 5, 6, 6, 4, 1, 0, 24, 0, 5, 18, 1, 1, 0, 1, 0, 0]' : 0.109974}
{'[1, 0, 5, 6, 6, 4, 1, 0, 24, 0, 5, 18, 1, 1, 0, 1, 0, 0]' : 0.109172}
{'[1, 0, 5, 6, 6, 4, 1, 0, 24, 0, 5, 18, 1, 1, 0, 1, 0, 0]' : 0.108989}
{'[1, 0, 5, 6, 6, 4, 1, 0, 24, 0, 5, 18, 1, 1, 0, 1, 0, 0]' : 0.11038}
{'[1, 0, 5, 6, 6, 4, 1, 0, 24, 0, 5, 18, 1, 1, 0, 1, 0, 0]' : 0.110204}
{'[1, 0, 5, 6, 6, 4, 1, 0, 24, 0, 5, 18, 1, 1, 0, 1, 0, 0]' : 0.110689}
{'[1, 0, 5, 6, 6, 4, 1, 0, 24, 0, 5, 18, 1, 1, 0, 1, 0, 0]' : 0.110017}
{'[1, 0, 5, 6, 6, 4, 1, 0, 24, 0, 5, 18, 1, 1, 0, 1, 0, 0]' : 0.110812}
{'[1, 0, 5, 6, 6, 4, 1, 0, 24, 0, 5, 18, 1, 1, 0, 1, 0, 0]' : 0.108383}
{'[1, 0, 5, 6, 6, 4, 1, 0, 24, 0, 5, 18, 1, 1, 0, 1, 0, 0]' : 0.10766}
{'[1, 0, 5, 6, 6, 4, 1, 0, 24, 0, 5, 18, 1, 1, 0, 1, 0, 0]' : 0.107827}
{'[1, 0, 5, 6, 6, 4, 1, 0, 24, 0, 5, 18, 1, 1, 0, 1, 0, 0]' : 0.108687}
{'[1, 0, 5, 6, 6, 4, 1, 0, 24, 0, 5, 18, 1, 1, 0, 1, 0, 0]' : 0.110074}
{'[1, 0, 5, 6, 6, 4, 1, 0, 24, 0, 5, 18, 1, 1, 0, 1, 0, 0]' : 0.110001}
{'[1, 0, 5, 6, 6, 4, 1, 0, 24, 0, 5, 18, 1, 1, 0, 1, 0, 0]' : 0.109701}
{'[1, 0, 5, 6, 6, 4, 1, 0, 24, 0, 5, 18, 1, 1, 0, 1, 0, 0]' : 0.107643}

out:
 ["{'[1, 0, 5, 6, 6, 4, 1, 0, 24, 0, 5, 18, 1, 1, 0, 1, 0, 0]' : 0.122337}", "{'[1, 0, 5, 6, 6, 4, 1, 0, 24, 0, 5, 18, 1, 1, 0, 1, 0, 0]' : 0.122665}", "{'[1, 0, 5, 6, 6, 4, 1, 0, 24, 0, 5, 18, 1, 1, 0, 1, 0, 0]' : 0.121704}", "{'[1, 0, 5, 6, 6, 4, 1, 0, 24, 0, 5, 18, 1, 1, 0, 1, 0, 0]' : 0.122304}", "{'[1, 0, 5, 6, 6, 4, 1, 0, 24, 0, 5, 18, 1, 1, 0, 1, 0, 0]' : 0.108204}", "{'[1, 0, 5, 6, 6, 4, 1, 0, 24, 0, 5, 18, 1, 1, 0, 1, 0, 0]' : 0.107564}", "{'[1, 0, 5, 6, 6, 4, 1, 0, 24, 0, 5, 18, 1, 1, 0, 1, 0, 0]' : 0.10752}", "{'[1, 0, 5, 6, 6, 4, 1, 0, 24, 0, 5, 18, 1, 1, 0, 1, 0, 0]' : 0.106129}", "{'[1, 0, 5, 6, 6, 4, 1, 0, 24, 0, 5, 18, 1, 1, 0, 1, 0, 0]' : 0.110527}", "{'[1, 0, 5, 6, 6, 4, 1, 0, 24, 0, 5, 18, 1, 1, 0, 1, 0, 0]' : 0.109839}", "{'[1, 0, 5, 6, 6, 4, 1, 0, 24, 0, 5, 18, 1, 1, 0, 1, 0, 0]' : 0.107832}", "{'[1, 0, 5, 6, 6, 4, 1, 0, 24, 0, 5, 18, 1, 1, 0, 1, 0, 0]' : 0.107471}", "{'[1, 0, 5, 6, 6, 4, 1, 0, 24, 0, 5, 18, 1, 1, 0, 1, 0, 0]' : 0.109252}", "{'[1, 0, 5, 6, 6, 4, 1, 0, 24, 0, 5, 18, 1, 1, 0, 1, 0, 0]' : 0.109994}", "{'[1, 0, 5, 6, 6, 4, 1, 0, 24, 0, 5, 18, 1, 1, 0, 1, 0, 0]' : 0.109974}", "{'[1, 0, 5, 6, 6, 4, 1, 0, 24, 0, 5, 18, 1, 1, 0, 1, 0, 0]' : 0.109172}", "{'[1, 0, 5, 6, 6, 4, 1, 0, 24, 0, 5, 18, 1, 1, 0, 1, 0, 0]' : 0.108989}", "{'[1, 0, 5, 6, 6, 4, 1, 0, 24, 0, 5, 18, 1, 1, 0, 1, 0, 0]' : 0.11038}", "{'[1, 0, 5, 6, 6, 4, 1, 0, 24, 0, 5, 18, 1, 1, 0, 1, 0, 0]' : 0.110204}", "{'[1, 0, 5, 6, 6, 4, 1, 0, 24, 0, 5, 18, 1, 1, 0, 1, 0, 0]' : 0.110689}", "{'[1, 0, 5, 6, 6, 4, 1, 0, 24, 0, 5, 18, 1, 1, 0, 1, 0, 0]' : 0.110017}", "{'[1, 0, 5, 6, 6, 4, 1, 0, 24, 0, 5, 18, 1, 1, 0, 1, 0, 0]' : 0.110812}", "{'[1, 0, 5, 6, 6, 4, 1, 0, 24, 0, 5, 18, 1, 1, 0, 1, 0, 0]' : 0.108383}", "{'[1, 0, 5, 6, 6, 4, 1, 0, 24, 0, 5, 18, 1, 1, 0, 1, 0, 0]' : 0.10766}", "{'[1, 0, 5, 6, 6, 4, 1, 0, 24, 0, 5, 18, 1, 1, 0, 1, 0, 0]' : 0.107827}", "{'[1, 0, 5, 6, 6, 4, 1, 0, 24, 0, 5, 18, 1, 1, 0, 1, 0, 0]' : 0.108687}", "{'[1, 0, 5, 6, 6, 4, 1, 0, 24, 0, 5, 18, 1, 1, 0, 1, 0, 0]' : 0.110074}", "{'[1, 0, 5, 6, 6, 4, 1, 0, 24, 0, 5, 18, 1, 1, 0, 1, 0, 0]' : 0.110001}", "{'[1, 0, 5, 6, 6, 4, 1, 0, 24, 0, 5, 18, 1, 1, 0, 1, 0, 0]' : 0.109701}", "{'[1, 0, 5, 6, 6, 4, 1, 0, 24, 0, 5, 18, 1, 1, 0, 1, 0, 0]' : 0.107643}"]
returning from 'run': {'[1, 0, 5, 6, 6, 4, 1, 0, 24, 0, 5, 18, 1, 1, 0, 1, 0, 0]': ([0.122337, 0.122665, 0.121704, 0.122304, 0.108204, 0.107564, 0.10752, 0.106129, 0.110527, 0.109839, 0.107832, 0.107471, 0.109252, 0.109994, 0.109974, 0.109172, 0.108989, 0.11038, 0.110204, 0.110689, 0.110017, 0.110812, 0.108383, 0.10766, 0.107827, 0.108687, 0.110074, 0.110001, 0.109701, 0.107643], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 5, 6, 6, 4, 1, 0, 24, 0, 5, 18, 1, 1, 0, 1, 0, 0]': ([0.122337, 0.122665, 0.121704, 0.122304, 0.108204, 0.107564, 0.10752, 0.106129, 0.110527, 0.109839, 0.107832, 0.107471, 0.109252, 0.109994, 0.109974, 0.109172, 0.108989, 0.11038, 0.110204, 0.110689, 0.110017, 0.110812, 0.108383, 0.10766, 0.107827, 0.108687, 0.110074, 0.110001, 0.109701, 0.107643], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	97
        Max loop nest depth: 	4
        Additions: 		3199
        Multiplications: 	1224
        Divisions: 		0
        Logical: 		0
        Reads: 			6243
        Writes: 		1133
        Comparisons:		97
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest19.exe __orio_perftest19.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest19.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest19.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest19.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest19.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	23
        Max loop nest depth: 	6
        Additions: 		8455
        Multiplications: 	2244
        Divisions: 		0
        Logical: 		0
        Reads: 			12426
        Writes: 		1174
        Comparisons:		23
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest20.exe __orio_perftest20.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest20.exe  
Program Test Output: 
{'[1, 1, 1, 6, 4, 1, 1, 0, 0, 0, 29, 1, 2, 0, 0, 0, 1, 0]' : 0.300354}
{'[1, 1, 1, 6, 4, 1, 1, 0, 0, 0, 29, 1, 2, 0, 0, 0, 1, 0]' : 0.297076}
{'[1, 1, 1, 6, 4, 1, 1, 0, 0, 0, 29, 1, 2, 0, 0, 0, 1, 0]' : 0.265536}
{'[1, 1, 1, 6, 4, 1, 1, 0, 0, 0, 29, 1, 2, 0, 0, 0, 1, 0]' : 0.269217}
{'[1, 1, 1, 6, 4, 1, 1, 0, 0, 0, 29, 1, 2, 0, 0, 0, 1, 0]' : 0.26915}
{'[1, 1, 1, 6, 4, 1, 1, 0, 0, 0, 29, 1, 2, 0, 0, 0, 1, 0]' : 0.269124}
{'[1, 1, 1, 6, 4, 1, 1, 0, 0, 0, 29, 1, 2, 0, 0, 0, 1, 0]' : 0.269005}
{'[1, 1, 1, 6, 4, 1, 1, 0, 0, 0, 29, 1, 2, 0, 0, 0, 1, 0]' : 0.262031}
{'[1, 1, 1, 6, 4, 1, 1, 0, 0, 0, 29, 1, 2, 0, 0, 0, 1, 0]' : 0.268211}
{'[1, 1, 1, 6, 4, 1, 1, 0, 0, 0, 29, 1, 2, 0, 0, 0, 1, 0]' : 0.267488}
{'[1, 1, 1, 6, 4, 1, 1, 0, 0, 0, 29, 1, 2, 0, 0, 0, 1, 0]' : 0.269148}
{'[1, 1, 1, 6, 4, 1, 1, 0, 0, 0, 29, 1, 2, 0, 0, 0, 1, 0]' : 0.269184}
{'[1, 1, 1, 6, 4, 1, 1, 0, 0, 0, 29, 1, 2, 0, 0, 0, 1, 0]' : 0.269157}
{'[1, 1, 1, 6, 4, 1, 1, 0, 0, 0, 29, 1, 2, 0, 0, 0, 1, 0]' : 0.269367}
{'[1, 1, 1, 6, 4, 1, 1, 0, 0, 0, 29, 1, 2, 0, 0, 0, 1, 0]' : 0.269237}
{'[1, 1, 1, 6, 4, 1, 1, 0, 0, 0, 29, 1, 2, 0, 0, 0, 1, 0]' : 0.269181}
{'[1, 1, 1, 6, 4, 1, 1, 0, 0, 0, 29, 1, 2, 0, 0, 0, 1, 0]' : 0.269214}
{'[1, 1, 1, 6, 4, 1, 1, 0, 0, 0, 29, 1, 2, 0, 0, 0, 1, 0]' : 0.269196}
{'[1, 1, 1, 6, 4, 1, 1, 0, 0, 0, 29, 1, 2, 0, 0, 0, 1, 0]' : 0.26919}
{'[1, 1, 1, 6, 4, 1, 1, 0, 0, 0, 29, 1, 2, 0, 0, 0, 1, 0]' : 0.268627}
{'[1, 1, 1, 6, 4, 1, 1, 0, 0, 0, 29, 1, 2, 0, 0, 0, 1, 0]' : 0.262116}
{'[1, 1, 1, 6, 4, 1, 1, 0, 0, 0, 29, 1, 2, 0, 0, 0, 1, 0]' : 0.268262}
{'[1, 1, 1, 6, 4, 1, 1, 0, 0, 0, 29, 1, 2, 0, 0, 0, 1, 0]' : 0.266164}
{'[1, 1, 1, 6, 4, 1, 1, 0, 0, 0, 29, 1, 2, 0, 0, 0, 1, 0]' : 0.268939}
{'[1, 1, 1, 6, 4, 1, 1, 0, 0, 0, 29, 1, 2, 0, 0, 0, 1, 0]' : 0.269167}
{'[1, 1, 1, 6, 4, 1, 1, 0, 0, 0, 29, 1, 2, 0, 0, 0, 1, 0]' : 0.269153}
{'[1, 1, 1, 6, 4, 1, 1, 0, 0, 0, 29, 1, 2, 0, 0, 0, 1, 0]' : 0.267772}
{'[1, 1, 1, 6, 4, 1, 1, 0, 0, 0, 29, 1, 2, 0, 0, 0, 1, 0]' : 0.269218}
{'[1, 1, 1, 6, 4, 1, 1, 0, 0, 0, 29, 1, 2, 0, 0, 0, 1, 0]' : 0.269393}
{'[1, 1, 1, 6, 4, 1, 1, 0, 0, 0, 29, 1, 2, 0, 0, 0, 1, 0]' : 0.26915}

out:
 ["{'[1, 1, 1, 6, 4, 1, 1, 0, 0, 0, 29, 1, 2, 0, 0, 0, 1, 0]' : 0.300354}", "{'[1, 1, 1, 6, 4, 1, 1, 0, 0, 0, 29, 1, 2, 0, 0, 0, 1, 0]' : 0.297076}", "{'[1, 1, 1, 6, 4, 1, 1, 0, 0, 0, 29, 1, 2, 0, 0, 0, 1, 0]' : 0.265536}", "{'[1, 1, 1, 6, 4, 1, 1, 0, 0, 0, 29, 1, 2, 0, 0, 0, 1, 0]' : 0.269217}", "{'[1, 1, 1, 6, 4, 1, 1, 0, 0, 0, 29, 1, 2, 0, 0, 0, 1, 0]' : 0.26915}", "{'[1, 1, 1, 6, 4, 1, 1, 0, 0, 0, 29, 1, 2, 0, 0, 0, 1, 0]' : 0.269124}", "{'[1, 1, 1, 6, 4, 1, 1, 0, 0, 0, 29, 1, 2, 0, 0, 0, 1, 0]' : 0.269005}", "{'[1, 1, 1, 6, 4, 1, 1, 0, 0, 0, 29, 1, 2, 0, 0, 0, 1, 0]' : 0.262031}", "{'[1, 1, 1, 6, 4, 1, 1, 0, 0, 0, 29, 1, 2, 0, 0, 0, 1, 0]' : 0.268211}", "{'[1, 1, 1, 6, 4, 1, 1, 0, 0, 0, 29, 1, 2, 0, 0, 0, 1, 0]' : 0.267488}", "{'[1, 1, 1, 6, 4, 1, 1, 0, 0, 0, 29, 1, 2, 0, 0, 0, 1, 0]' : 0.269148}", "{'[1, 1, 1, 6, 4, 1, 1, 0, 0, 0, 29, 1, 2, 0, 0, 0, 1, 0]' : 0.269184}", "{'[1, 1, 1, 6, 4, 1, 1, 0, 0, 0, 29, 1, 2, 0, 0, 0, 1, 0]' : 0.269157}", "{'[1, 1, 1, 6, 4, 1, 1, 0, 0, 0, 29, 1, 2, 0, 0, 0, 1, 0]' : 0.269367}", "{'[1, 1, 1, 6, 4, 1, 1, 0, 0, 0, 29, 1, 2, 0, 0, 0, 1, 0]' : 0.269237}", "{'[1, 1, 1, 6, 4, 1, 1, 0, 0, 0, 29, 1, 2, 0, 0, 0, 1, 0]' : 0.269181}", "{'[1, 1, 1, 6, 4, 1, 1, 0, 0, 0, 29, 1, 2, 0, 0, 0, 1, 0]' : 0.269214}", "{'[1, 1, 1, 6, 4, 1, 1, 0, 0, 0, 29, 1, 2, 0, 0, 0, 1, 0]' : 0.269196}", "{'[1, 1, 1, 6, 4, 1, 1, 0, 0, 0, 29, 1, 2, 0, 0, 0, 1, 0]' : 0.26919}", "{'[1, 1, 1, 6, 4, 1, 1, 0, 0, 0, 29, 1, 2, 0, 0, 0, 1, 0]' : 0.268627}", "{'[1, 1, 1, 6, 4, 1, 1, 0, 0, 0, 29, 1, 2, 0, 0, 0, 1, 0]' : 0.262116}", "{'[1, 1, 1, 6, 4, 1, 1, 0, 0, 0, 29, 1, 2, 0, 0, 0, 1, 0]' : 0.268262}", "{'[1, 1, 1, 6, 4, 1, 1, 0, 0, 0, 29, 1, 2, 0, 0, 0, 1, 0]' : 0.266164}", "{'[1, 1, 1, 6, 4, 1, 1, 0, 0, 0, 29, 1, 2, 0, 0, 0, 1, 0]' : 0.268939}", "{'[1, 1, 1, 6, 4, 1, 1, 0, 0, 0, 29, 1, 2, 0, 0, 0, 1, 0]' : 0.269167}", "{'[1, 1, 1, 6, 4, 1, 1, 0, 0, 0, 29, 1, 2, 0, 0, 0, 1, 0]' : 0.269153}", "{'[1, 1, 1, 6, 4, 1, 1, 0, 0, 0, 29, 1, 2, 0, 0, 0, 1, 0]' : 0.267772}", "{'[1, 1, 1, 6, 4, 1, 1, 0, 0, 0, 29, 1, 2, 0, 0, 0, 1, 0]' : 0.269218}", "{'[1, 1, 1, 6, 4, 1, 1, 0, 0, 0, 29, 1, 2, 0, 0, 0, 1, 0]' : 0.269393}", "{'[1, 1, 1, 6, 4, 1, 1, 0, 0, 0, 29, 1, 2, 0, 0, 0, 1, 0]' : 0.26915}"]
returning from 'run': {'[1, 1, 1, 6, 4, 1, 1, 0, 0, 0, 29, 1, 2, 0, 0, 0, 1, 0]': ([0.300354, 0.297076, 0.265536, 0.269217, 0.26915, 0.269124, 0.269005, 0.262031, 0.268211, 0.267488, 0.269148, 0.269184, 0.269157, 0.269367, 0.269237, 0.269181, 0.269214, 0.269196, 0.26919, 0.268627, 0.262116, 0.268262, 0.266164, 0.268939, 0.269167, 0.269153, 0.267772, 0.269218, 0.269393, 0.26915], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 1, 1, 6, 4, 1, 1, 0, 0, 0, 29, 1, 2, 0, 0, 0, 1, 0]': ([0.300354, 0.297076, 0.265536, 0.269217, 0.26915, 0.269124, 0.269005, 0.262031, 0.268211, 0.267488, 0.269148, 0.269184, 0.269157, 0.269367, 0.269237, 0.269181, 0.269214, 0.269196, 0.26919, 0.268627, 0.262116, 0.268262, 0.266164, 0.268939, 0.269167, 0.269153, 0.267772, 0.269218, 0.269393, 0.26915], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	86
        Max loop nest depth: 	5
        Additions: 		10272
        Multiplications: 	2812
        Divisions: 		0
        Logical: 		0
        Reads: 			15674
        Writes: 		1687
        Comparisons:		86
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest21.exe __orio_perftest21.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest21.exe  
Program Test Output: 
{'[4, 2, 5, 0, 0, 6, 0, 1, 11, 28, 27, 0, 1, 0, 1, 0, 1, 0]' : 0.137734}
{'[4, 2, 5, 0, 0, 6, 0, 1, 11, 28, 27, 0, 1, 0, 1, 0, 1, 0]' : 0.13729}
{'[4, 2, 5, 0, 0, 6, 0, 1, 11, 28, 27, 0, 1, 0, 1, 0, 1, 0]' : 0.137116}
{'[4, 2, 5, 0, 0, 6, 0, 1, 11, 28, 27, 0, 1, 0, 1, 0, 1, 0]' : 0.129916}
{'[4, 2, 5, 0, 0, 6, 0, 1, 11, 28, 27, 0, 1, 0, 1, 0, 1, 0]' : 0.120776}
{'[4, 2, 5, 0, 0, 6, 0, 1, 11, 28, 27, 0, 1, 0, 1, 0, 1, 0]' : 0.122881}
{'[4, 2, 5, 0, 0, 6, 0, 1, 11, 28, 27, 0, 1, 0, 1, 0, 1, 0]' : 0.12278}
{'[4, 2, 5, 0, 0, 6, 0, 1, 11, 28, 27, 0, 1, 0, 1, 0, 1, 0]' : 0.122992}
{'[4, 2, 5, 0, 0, 6, 0, 1, 11, 28, 27, 0, 1, 0, 1, 0, 1, 0]' : 0.123066}
{'[4, 2, 5, 0, 0, 6, 0, 1, 11, 28, 27, 0, 1, 0, 1, 0, 1, 0]' : 0.123029}
{'[4, 2, 5, 0, 0, 6, 0, 1, 11, 28, 27, 0, 1, 0, 1, 0, 1, 0]' : 0.123242}
{'[4, 2, 5, 0, 0, 6, 0, 1, 11, 28, 27, 0, 1, 0, 1, 0, 1, 0]' : 0.123178}
{'[4, 2, 5, 0, 0, 6, 0, 1, 11, 28, 27, 0, 1, 0, 1, 0, 1, 0]' : 0.120871}
{'[4, 2, 5, 0, 0, 6, 0, 1, 11, 28, 27, 0, 1, 0, 1, 0, 1, 0]' : 0.123229}
{'[4, 2, 5, 0, 0, 6, 0, 1, 11, 28, 27, 0, 1, 0, 1, 0, 1, 0]' : 0.122828}
{'[4, 2, 5, 0, 0, 6, 0, 1, 11, 28, 27, 0, 1, 0, 1, 0, 1, 0]' : 0.121044}
{'[4, 2, 5, 0, 0, 6, 0, 1, 11, 28, 27, 0, 1, 0, 1, 0, 1, 0]' : 0.12364}
{'[4, 2, 5, 0, 0, 6, 0, 1, 11, 28, 27, 0, 1, 0, 1, 0, 1, 0]' : 0.123317}
{'[4, 2, 5, 0, 0, 6, 0, 1, 11, 28, 27, 0, 1, 0, 1, 0, 1, 0]' : 0.123197}
{'[4, 2, 5, 0, 0, 6, 0, 1, 11, 28, 27, 0, 1, 0, 1, 0, 1, 0]' : 0.123365}
{'[4, 2, 5, 0, 0, 6, 0, 1, 11, 28, 27, 0, 1, 0, 1, 0, 1, 0]' : 0.119858}
{'[4, 2, 5, 0, 0, 6, 0, 1, 11, 28, 27, 0, 1, 0, 1, 0, 1, 0]' : 0.120056}
{'[4, 2, 5, 0, 0, 6, 0, 1, 11, 28, 27, 0, 1, 0, 1, 0, 1, 0]' : 0.119988}
{'[4, 2, 5, 0, 0, 6, 0, 1, 11, 28, 27, 0, 1, 0, 1, 0, 1, 0]' : 0.120196}
{'[4, 2, 5, 0, 0, 6, 0, 1, 11, 28, 27, 0, 1, 0, 1, 0, 1, 0]' : 0.122497}
{'[4, 2, 5, 0, 0, 6, 0, 1, 11, 28, 27, 0, 1, 0, 1, 0, 1, 0]' : 0.123402}
{'[4, 2, 5, 0, 0, 6, 0, 1, 11, 28, 27, 0, 1, 0, 1, 0, 1, 0]' : 0.123189}
{'[4, 2, 5, 0, 0, 6, 0, 1, 11, 28, 27, 0, 1, 0, 1, 0, 1, 0]' : 0.123458}
{'[4, 2, 5, 0, 0, 6, 0, 1, 11, 28, 27, 0, 1, 0, 1, 0, 1, 0]' : 0.123422}
{'[4, 2, 5, 0, 0, 6, 0, 1, 11, 28, 27, 0, 1, 0, 1, 0, 1, 0]' : 0.123332}

out:
 ["{'[4, 2, 5, 0, 0, 6, 0, 1, 11, 28, 27, 0, 1, 0, 1, 0, 1, 0]' : 0.137734}", "{'[4, 2, 5, 0, 0, 6, 0, 1, 11, 28, 27, 0, 1, 0, 1, 0, 1, 0]' : 0.13729}", "{'[4, 2, 5, 0, 0, 6, 0, 1, 11, 28, 27, 0, 1, 0, 1, 0, 1, 0]' : 0.137116}", "{'[4, 2, 5, 0, 0, 6, 0, 1, 11, 28, 27, 0, 1, 0, 1, 0, 1, 0]' : 0.129916}", "{'[4, 2, 5, 0, 0, 6, 0, 1, 11, 28, 27, 0, 1, 0, 1, 0, 1, 0]' : 0.120776}", "{'[4, 2, 5, 0, 0, 6, 0, 1, 11, 28, 27, 0, 1, 0, 1, 0, 1, 0]' : 0.122881}", "{'[4, 2, 5, 0, 0, 6, 0, 1, 11, 28, 27, 0, 1, 0, 1, 0, 1, 0]' : 0.12278}", "{'[4, 2, 5, 0, 0, 6, 0, 1, 11, 28, 27, 0, 1, 0, 1, 0, 1, 0]' : 0.122992}", "{'[4, 2, 5, 0, 0, 6, 0, 1, 11, 28, 27, 0, 1, 0, 1, 0, 1, 0]' : 0.123066}", "{'[4, 2, 5, 0, 0, 6, 0, 1, 11, 28, 27, 0, 1, 0, 1, 0, 1, 0]' : 0.123029}", "{'[4, 2, 5, 0, 0, 6, 0, 1, 11, 28, 27, 0, 1, 0, 1, 0, 1, 0]' : 0.123242}", "{'[4, 2, 5, 0, 0, 6, 0, 1, 11, 28, 27, 0, 1, 0, 1, 0, 1, 0]' : 0.123178}", "{'[4, 2, 5, 0, 0, 6, 0, 1, 11, 28, 27, 0, 1, 0, 1, 0, 1, 0]' : 0.120871}", "{'[4, 2, 5, 0, 0, 6, 0, 1, 11, 28, 27, 0, 1, 0, 1, 0, 1, 0]' : 0.123229}", "{'[4, 2, 5, 0, 0, 6, 0, 1, 11, 28, 27, 0, 1, 0, 1, 0, 1, 0]' : 0.122828}", "{'[4, 2, 5, 0, 0, 6, 0, 1, 11, 28, 27, 0, 1, 0, 1, 0, 1, 0]' : 0.121044}", "{'[4, 2, 5, 0, 0, 6, 0, 1, 11, 28, 27, 0, 1, 0, 1, 0, 1, 0]' : 0.12364}", "{'[4, 2, 5, 0, 0, 6, 0, 1, 11, 28, 27, 0, 1, 0, 1, 0, 1, 0]' : 0.123317}", "{'[4, 2, 5, 0, 0, 6, 0, 1, 11, 28, 27, 0, 1, 0, 1, 0, 1, 0]' : 0.123197}", "{'[4, 2, 5, 0, 0, 6, 0, 1, 11, 28, 27, 0, 1, 0, 1, 0, 1, 0]' : 0.123365}", "{'[4, 2, 5, 0, 0, 6, 0, 1, 11, 28, 27, 0, 1, 0, 1, 0, 1, 0]' : 0.119858}", "{'[4, 2, 5, 0, 0, 6, 0, 1, 11, 28, 27, 0, 1, 0, 1, 0, 1, 0]' : 0.120056}", "{'[4, 2, 5, 0, 0, 6, 0, 1, 11, 28, 27, 0, 1, 0, 1, 0, 1, 0]' : 0.119988}", "{'[4, 2, 5, 0, 0, 6, 0, 1, 11, 28, 27, 0, 1, 0, 1, 0, 1, 0]' : 0.120196}", "{'[4, 2, 5, 0, 0, 6, 0, 1, 11, 28, 27, 0, 1, 0, 1, 0, 1, 0]' : 0.122497}", "{'[4, 2, 5, 0, 0, 6, 0, 1, 11, 28, 27, 0, 1, 0, 1, 0, 1, 0]' : 0.123402}", "{'[4, 2, 5, 0, 0, 6, 0, 1, 11, 28, 27, 0, 1, 0, 1, 0, 1, 0]' : 0.123189}", "{'[4, 2, 5, 0, 0, 6, 0, 1, 11, 28, 27, 0, 1, 0, 1, 0, 1, 0]' : 0.123458}", "{'[4, 2, 5, 0, 0, 6, 0, 1, 11, 28, 27, 0, 1, 0, 1, 0, 1, 0]' : 0.123422}", "{'[4, 2, 5, 0, 0, 6, 0, 1, 11, 28, 27, 0, 1, 0, 1, 0, 1, 0]' : 0.123332}"]
returning from 'run': {'[4, 2, 5, 0, 0, 6, 0, 1, 11, 28, 27, 0, 1, 0, 1, 0, 1, 0]': ([0.137734, 0.13729, 0.137116, 0.129916, 0.120776, 0.122881, 0.12278, 0.122992, 0.123066, 0.123029, 0.123242, 0.123178, 0.120871, 0.123229, 0.122828, 0.121044, 0.12364, 0.123317, 0.123197, 0.123365, 0.119858, 0.120056, 0.119988, 0.120196, 0.122497, 0.123402, 0.123189, 0.123458, 0.123422, 0.123332], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 2, 5, 0, 0, 6, 0, 1, 11, 28, 27, 0, 1, 0, 1, 0, 1, 0]': ([0.137734, 0.13729, 0.137116, 0.129916, 0.120776, 0.122881, 0.12278, 0.122992, 0.123066, 0.123029, 0.123242, 0.123178, 0.120871, 0.123229, 0.122828, 0.121044, 0.12364, 0.123317, 0.123197, 0.123365, 0.119858, 0.120056, 0.119988, 0.120196, 0.122497, 0.123402, 0.123189, 0.123458, 0.123422, 0.123332], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = kkk
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	6
        Additions: 		129
        Multiplications: 	34
        Divisions: 		0
        Logical: 		0
        Reads: 			291
        Writes: 		51
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest22.exe __orio_perftest22.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest22.exe  
Program Test Output: 
{'[1, 2, 4, 4, 1, 2, 0, 1, 3, 0, 0, 0, 0, 1, 1, 0, 0, 0]' : 0.292936}
{'[1, 2, 4, 4, 1, 2, 0, 1, 3, 0, 0, 0, 0, 1, 1, 0, 0, 0]' : 0.281571}
{'[1, 2, 4, 4, 1, 2, 0, 1, 3, 0, 0, 0, 0, 1, 1, 0, 0, 0]' : 0.252222}
{'[1, 2, 4, 4, 1, 2, 0, 1, 3, 0, 0, 0, 0, 1, 1, 0, 0, 0]' : 0.254507}
{'[1, 2, 4, 4, 1, 2, 0, 1, 3, 0, 0, 0, 0, 1, 1, 0, 0, 0]' : 0.259874}
{'[1, 2, 4, 4, 1, 2, 0, 1, 3, 0, 0, 0, 0, 1, 1, 0, 0, 0]' : 0.253406}
{'[1, 2, 4, 4, 1, 2, 0, 1, 3, 0, 0, 0, 0, 1, 1, 0, 0, 0]' : 0.252193}
{'[1, 2, 4, 4, 1, 2, 0, 1, 3, 0, 0, 0, 0, 1, 1, 0, 0, 0]' : 0.255094}
{'[1, 2, 4, 4, 1, 2, 0, 1, 3, 0, 0, 0, 0, 1, 1, 0, 0, 0]' : 0.25998}
{'[1, 2, 4, 4, 1, 2, 0, 1, 3, 0, 0, 0, 0, 1, 1, 0, 0, 0]' : 0.25991}
{'[1, 2, 4, 4, 1, 2, 0, 1, 3, 0, 0, 0, 0, 1, 1, 0, 0, 0]' : 0.256473}
{'[1, 2, 4, 4, 1, 2, 0, 1, 3, 0, 0, 0, 0, 1, 1, 0, 0, 0]' : 0.255385}
{'[1, 2, 4, 4, 1, 2, 0, 1, 3, 0, 0, 0, 0, 1, 1, 0, 0, 0]' : 0.253661}
{'[1, 2, 4, 4, 1, 2, 0, 1, 3, 0, 0, 0, 0, 1, 1, 0, 0, 0]' : 0.249415}
{'[1, 2, 4, 4, 1, 2, 0, 1, 3, 0, 0, 0, 0, 1, 1, 0, 0, 0]' : 0.252203}
{'[1, 2, 4, 4, 1, 2, 0, 1, 3, 0, 0, 0, 0, 1, 1, 0, 0, 0]' : 0.256155}
{'[1, 2, 4, 4, 1, 2, 0, 1, 3, 0, 0, 0, 0, 1, 1, 0, 0, 0]' : 0.251728}
{'[1, 2, 4, 4, 1, 2, 0, 1, 3, 0, 0, 0, 0, 1, 1, 0, 0, 0]' : 0.255876}
{'[1, 2, 4, 4, 1, 2, 0, 1, 3, 0, 0, 0, 0, 1, 1, 0, 0, 0]' : 0.255674}
{'[1, 2, 4, 4, 1, 2, 0, 1, 3, 0, 0, 0, 0, 1, 1, 0, 0, 0]' : 0.256365}
{'[1, 2, 4, 4, 1, 2, 0, 1, 3, 0, 0, 0, 0, 1, 1, 0, 0, 0]' : 0.259602}
{'[1, 2, 4, 4, 1, 2, 0, 1, 3, 0, 0, 0, 0, 1, 1, 0, 0, 0]' : 0.251027}
{'[1, 2, 4, 4, 1, 2, 0, 1, 3, 0, 0, 0, 0, 1, 1, 0, 0, 0]' : 0.252165}
{'[1, 2, 4, 4, 1, 2, 0, 1, 3, 0, 0, 0, 0, 1, 1, 0, 0, 0]' : 0.257218}
{'[1, 2, 4, 4, 1, 2, 0, 1, 3, 0, 0, 0, 0, 1, 1, 0, 0, 0]' : 0.259779}
{'[1, 2, 4, 4, 1, 2, 0, 1, 3, 0, 0, 0, 0, 1, 1, 0, 0, 0]' : 0.259715}
{'[1, 2, 4, 4, 1, 2, 0, 1, 3, 0, 0, 0, 0, 1, 1, 0, 0, 0]' : 0.254159}
{'[1, 2, 4, 4, 1, 2, 0, 1, 3, 0, 0, 0, 0, 1, 1, 0, 0, 0]' : 0.258032}
{'[1, 2, 4, 4, 1, 2, 0, 1, 3, 0, 0, 0, 0, 1, 1, 0, 0, 0]' : 0.259725}
{'[1, 2, 4, 4, 1, 2, 0, 1, 3, 0, 0, 0, 0, 1, 1, 0, 0, 0]' : 0.253499}

out:
 ["{'[1, 2, 4, 4, 1, 2, 0, 1, 3, 0, 0, 0, 0, 1, 1, 0, 0, 0]' : 0.292936}", "{'[1, 2, 4, 4, 1, 2, 0, 1, 3, 0, 0, 0, 0, 1, 1, 0, 0, 0]' : 0.281571}", "{'[1, 2, 4, 4, 1, 2, 0, 1, 3, 0, 0, 0, 0, 1, 1, 0, 0, 0]' : 0.252222}", "{'[1, 2, 4, 4, 1, 2, 0, 1, 3, 0, 0, 0, 0, 1, 1, 0, 0, 0]' : 0.254507}", "{'[1, 2, 4, 4, 1, 2, 0, 1, 3, 0, 0, 0, 0, 1, 1, 0, 0, 0]' : 0.259874}", "{'[1, 2, 4, 4, 1, 2, 0, 1, 3, 0, 0, 0, 0, 1, 1, 0, 0, 0]' : 0.253406}", "{'[1, 2, 4, 4, 1, 2, 0, 1, 3, 0, 0, 0, 0, 1, 1, 0, 0, 0]' : 0.252193}", "{'[1, 2, 4, 4, 1, 2, 0, 1, 3, 0, 0, 0, 0, 1, 1, 0, 0, 0]' : 0.255094}", "{'[1, 2, 4, 4, 1, 2, 0, 1, 3, 0, 0, 0, 0, 1, 1, 0, 0, 0]' : 0.25998}", "{'[1, 2, 4, 4, 1, 2, 0, 1, 3, 0, 0, 0, 0, 1, 1, 0, 0, 0]' : 0.25991}", "{'[1, 2, 4, 4, 1, 2, 0, 1, 3, 0, 0, 0, 0, 1, 1, 0, 0, 0]' : 0.256473}", "{'[1, 2, 4, 4, 1, 2, 0, 1, 3, 0, 0, 0, 0, 1, 1, 0, 0, 0]' : 0.255385}", "{'[1, 2, 4, 4, 1, 2, 0, 1, 3, 0, 0, 0, 0, 1, 1, 0, 0, 0]' : 0.253661}", "{'[1, 2, 4, 4, 1, 2, 0, 1, 3, 0, 0, 0, 0, 1, 1, 0, 0, 0]' : 0.249415}", "{'[1, 2, 4, 4, 1, 2, 0, 1, 3, 0, 0, 0, 0, 1, 1, 0, 0, 0]' : 0.252203}", "{'[1, 2, 4, 4, 1, 2, 0, 1, 3, 0, 0, 0, 0, 1, 1, 0, 0, 0]' : 0.256155}", "{'[1, 2, 4, 4, 1, 2, 0, 1, 3, 0, 0, 0, 0, 1, 1, 0, 0, 0]' : 0.251728}", "{'[1, 2, 4, 4, 1, 2, 0, 1, 3, 0, 0, 0, 0, 1, 1, 0, 0, 0]' : 0.255876}", "{'[1, 2, 4, 4, 1, 2, 0, 1, 3, 0, 0, 0, 0, 1, 1, 0, 0, 0]' : 0.255674}", "{'[1, 2, 4, 4, 1, 2, 0, 1, 3, 0, 0, 0, 0, 1, 1, 0, 0, 0]' : 0.256365}", "{'[1, 2, 4, 4, 1, 2, 0, 1, 3, 0, 0, 0, 0, 1, 1, 0, 0, 0]' : 0.259602}", "{'[1, 2, 4, 4, 1, 2, 0, 1, 3, 0, 0, 0, 0, 1, 1, 0, 0, 0]' : 0.251027}", "{'[1, 2, 4, 4, 1, 2, 0, 1, 3, 0, 0, 0, 0, 1, 1, 0, 0, 0]' : 0.252165}", "{'[1, 2, 4, 4, 1, 2, 0, 1, 3, 0, 0, 0, 0, 1, 1, 0, 0, 0]' : 0.257218}", "{'[1, 2, 4, 4, 1, 2, 0, 1, 3, 0, 0, 0, 0, 1, 1, 0, 0, 0]' : 0.259779}", "{'[1, 2, 4, 4, 1, 2, 0, 1, 3, 0, 0, 0, 0, 1, 1, 0, 0, 0]' : 0.259715}", "{'[1, 2, 4, 4, 1, 2, 0, 1, 3, 0, 0, 0, 0, 1, 1, 0, 0, 0]' : 0.254159}", "{'[1, 2, 4, 4, 1, 2, 0, 1, 3, 0, 0, 0, 0, 1, 1, 0, 0, 0]' : 0.258032}", "{'[1, 2, 4, 4, 1, 2, 0, 1, 3, 0, 0, 0, 0, 1, 1, 0, 0, 0]' : 0.259725}", "{'[1, 2, 4, 4, 1, 2, 0, 1, 3, 0, 0, 0, 0, 1, 1, 0, 0, 0]' : 0.253499}"]
returning from 'run': {'[1, 2, 4, 4, 1, 2, 0, 1, 3, 0, 0, 0, 0, 1, 1, 0, 0, 0]': ([0.292936, 0.281571, 0.252222, 0.254507, 0.259874, 0.253406, 0.252193, 0.255094, 0.25998, 0.25991, 0.256473, 0.255385, 0.253661, 0.249415, 0.252203, 0.256155, 0.251728, 0.255876, 0.255674, 0.256365, 0.259602, 0.251027, 0.252165, 0.257218, 0.259779, 0.259715, 0.254159, 0.258032, 0.259725, 0.253499], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 2, 4, 4, 1, 2, 0, 1, 3, 0, 0, 0, 0, 1, 1, 0, 0, 0]': ([0.292936, 0.281571, 0.252222, 0.254507, 0.259874, 0.253406, 0.252193, 0.255094, 0.25998, 0.25991, 0.256473, 0.255385, 0.253661, 0.249415, 0.252203, 0.256155, 0.251728, 0.255876, 0.255674, 0.256365, 0.259602, 0.251027, 0.252165, 0.257218, 0.259779, 0.259715, 0.254159, 0.258032, 0.259725, 0.253499], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = iii
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		408
        Multiplications: 	142
        Divisions: 		0
        Logical: 		0
        Reads: 			953
        Writes: 		205
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest23.exe __orio_perftest23.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest23.exe  
Program Test Output: 
{'[6, 3, 2, 4, 4, 1, 1, 0, 4, 0, 26, 9, 0, 0, 2, 1, 1, 1]' : 0.172977}
{'[6, 3, 2, 4, 4, 1, 1, 0, 4, 0, 26, 9, 0, 0, 2, 1, 1, 1]' : 0.175487}
{'[6, 3, 2, 4, 4, 1, 1, 0, 4, 0, 26, 9, 0, 0, 2, 1, 1, 1]' : 0.175387}
{'[6, 3, 2, 4, 4, 1, 1, 0, 4, 0, 26, 9, 0, 0, 2, 1, 1, 1]' : 0.178717}
{'[6, 3, 2, 4, 4, 1, 1, 0, 4, 0, 26, 9, 0, 0, 2, 1, 1, 1]' : 0.180689}
{'[6, 3, 2, 4, 4, 1, 1, 0, 4, 0, 26, 9, 0, 0, 2, 1, 1, 1]' : 0.18074}
{'[6, 3, 2, 4, 4, 1, 1, 0, 4, 0, 26, 9, 0, 0, 2, 1, 1, 1]' : 0.18073}
{'[6, 3, 2, 4, 4, 1, 1, 0, 4, 0, 26, 9, 0, 0, 2, 1, 1, 1]' : 0.180866}
{'[6, 3, 2, 4, 4, 1, 1, 0, 4, 0, 26, 9, 0, 0, 2, 1, 1, 1]' : 0.180781}
{'[6, 3, 2, 4, 4, 1, 1, 0, 4, 0, 26, 9, 0, 0, 2, 1, 1, 1]' : 0.180856}
{'[6, 3, 2, 4, 4, 1, 1, 0, 4, 0, 26, 9, 0, 0, 2, 1, 1, 1]' : 0.178717}
{'[6, 3, 2, 4, 4, 1, 1, 0, 4, 0, 26, 9, 0, 0, 2, 1, 1, 1]' : 0.176914}
{'[6, 3, 2, 4, 4, 1, 1, 0, 4, 0, 26, 9, 0, 0, 2, 1, 1, 1]' : 0.180732}
{'[6, 3, 2, 4, 4, 1, 1, 0, 4, 0, 26, 9, 0, 0, 2, 1, 1, 1]' : 0.176332}
{'[6, 3, 2, 4, 4, 1, 1, 0, 4, 0, 26, 9, 0, 0, 2, 1, 1, 1]' : 0.175883}
{'[6, 3, 2, 4, 4, 1, 1, 0, 4, 0, 26, 9, 0, 0, 2, 1, 1, 1]' : 0.175091}
{'[6, 3, 2, 4, 4, 1, 1, 0, 4, 0, 26, 9, 0, 0, 2, 1, 1, 1]' : 0.17021}
{'[6, 3, 2, 4, 4, 1, 1, 0, 4, 0, 26, 9, 0, 0, 2, 1, 1, 1]' : 0.173054}
{'[6, 3, 2, 4, 4, 1, 1, 0, 4, 0, 26, 9, 0, 0, 2, 1, 1, 1]' : 0.175613}
{'[6, 3, 2, 4, 4, 1, 1, 0, 4, 0, 26, 9, 0, 0, 2, 1, 1, 1]' : 0.175984}
{'[6, 3, 2, 4, 4, 1, 1, 0, 4, 0, 26, 9, 0, 0, 2, 1, 1, 1]' : 0.176006}
{'[6, 3, 2, 4, 4, 1, 1, 0, 4, 0, 26, 9, 0, 0, 2, 1, 1, 1]' : 0.175514}
{'[6, 3, 2, 4, 4, 1, 1, 0, 4, 0, 26, 9, 0, 0, 2, 1, 1, 1]' : 0.173304}
{'[6, 3, 2, 4, 4, 1, 1, 0, 4, 0, 26, 9, 0, 0, 2, 1, 1, 1]' : 0.174682}
{'[6, 3, 2, 4, 4, 1, 1, 0, 4, 0, 26, 9, 0, 0, 2, 1, 1, 1]' : 0.175631}
{'[6, 3, 2, 4, 4, 1, 1, 0, 4, 0, 26, 9, 0, 0, 2, 1, 1, 1]' : 0.175506}
{'[6, 3, 2, 4, 4, 1, 1, 0, 4, 0, 26, 9, 0, 0, 2, 1, 1, 1]' : 0.176189}
{'[6, 3, 2, 4, 4, 1, 1, 0, 4, 0, 26, 9, 0, 0, 2, 1, 1, 1]' : 0.175581}
{'[6, 3, 2, 4, 4, 1, 1, 0, 4, 0, 26, 9, 0, 0, 2, 1, 1, 1]' : 0.173743}
{'[6, 3, 2, 4, 4, 1, 1, 0, 4, 0, 26, 9, 0, 0, 2, 1, 1, 1]' : 0.170512}

out:
 ["{'[6, 3, 2, 4, 4, 1, 1, 0, 4, 0, 26, 9, 0, 0, 2, 1, 1, 1]' : 0.172977}", "{'[6, 3, 2, 4, 4, 1, 1, 0, 4, 0, 26, 9, 0, 0, 2, 1, 1, 1]' : 0.175487}", "{'[6, 3, 2, 4, 4, 1, 1, 0, 4, 0, 26, 9, 0, 0, 2, 1, 1, 1]' : 0.175387}", "{'[6, 3, 2, 4, 4, 1, 1, 0, 4, 0, 26, 9, 0, 0, 2, 1, 1, 1]' : 0.178717}", "{'[6, 3, 2, 4, 4, 1, 1, 0, 4, 0, 26, 9, 0, 0, 2, 1, 1, 1]' : 0.180689}", "{'[6, 3, 2, 4, 4, 1, 1, 0, 4, 0, 26, 9, 0, 0, 2, 1, 1, 1]' : 0.18074}", "{'[6, 3, 2, 4, 4, 1, 1, 0, 4, 0, 26, 9, 0, 0, 2, 1, 1, 1]' : 0.18073}", "{'[6, 3, 2, 4, 4, 1, 1, 0, 4, 0, 26, 9, 0, 0, 2, 1, 1, 1]' : 0.180866}", "{'[6, 3, 2, 4, 4, 1, 1, 0, 4, 0, 26, 9, 0, 0, 2, 1, 1, 1]' : 0.180781}", "{'[6, 3, 2, 4, 4, 1, 1, 0, 4, 0, 26, 9, 0, 0, 2, 1, 1, 1]' : 0.180856}", "{'[6, 3, 2, 4, 4, 1, 1, 0, 4, 0, 26, 9, 0, 0, 2, 1, 1, 1]' : 0.178717}", "{'[6, 3, 2, 4, 4, 1, 1, 0, 4, 0, 26, 9, 0, 0, 2, 1, 1, 1]' : 0.176914}", "{'[6, 3, 2, 4, 4, 1, 1, 0, 4, 0, 26, 9, 0, 0, 2, 1, 1, 1]' : 0.180732}", "{'[6, 3, 2, 4, 4, 1, 1, 0, 4, 0, 26, 9, 0, 0, 2, 1, 1, 1]' : 0.176332}", "{'[6, 3, 2, 4, 4, 1, 1, 0, 4, 0, 26, 9, 0, 0, 2, 1, 1, 1]' : 0.175883}", "{'[6, 3, 2, 4, 4, 1, 1, 0, 4, 0, 26, 9, 0, 0, 2, 1, 1, 1]' : 0.175091}", "{'[6, 3, 2, 4, 4, 1, 1, 0, 4, 0, 26, 9, 0, 0, 2, 1, 1, 1]' : 0.17021}", "{'[6, 3, 2, 4, 4, 1, 1, 0, 4, 0, 26, 9, 0, 0, 2, 1, 1, 1]' : 0.173054}", "{'[6, 3, 2, 4, 4, 1, 1, 0, 4, 0, 26, 9, 0, 0, 2, 1, 1, 1]' : 0.175613}", "{'[6, 3, 2, 4, 4, 1, 1, 0, 4, 0, 26, 9, 0, 0, 2, 1, 1, 1]' : 0.175984}", "{'[6, 3, 2, 4, 4, 1, 1, 0, 4, 0, 26, 9, 0, 0, 2, 1, 1, 1]' : 0.176006}", "{'[6, 3, 2, 4, 4, 1, 1, 0, 4, 0, 26, 9, 0, 0, 2, 1, 1, 1]' : 0.175514}", "{'[6, 3, 2, 4, 4, 1, 1, 0, 4, 0, 26, 9, 0, 0, 2, 1, 1, 1]' : 0.173304}", "{'[6, 3, 2, 4, 4, 1, 1, 0, 4, 0, 26, 9, 0, 0, 2, 1, 1, 1]' : 0.174682}", "{'[6, 3, 2, 4, 4, 1, 1, 0, 4, 0, 26, 9, 0, 0, 2, 1, 1, 1]' : 0.175631}", "{'[6, 3, 2, 4, 4, 1, 1, 0, 4, 0, 26, 9, 0, 0, 2, 1, 1, 1]' : 0.175506}", "{'[6, 3, 2, 4, 4, 1, 1, 0, 4, 0, 26, 9, 0, 0, 2, 1, 1, 1]' : 0.176189}", "{'[6, 3, 2, 4, 4, 1, 1, 0, 4, 0, 26, 9, 0, 0, 2, 1, 1, 1]' : 0.175581}", "{'[6, 3, 2, 4, 4, 1, 1, 0, 4, 0, 26, 9, 0, 0, 2, 1, 1, 1]' : 0.173743}", "{'[6, 3, 2, 4, 4, 1, 1, 0, 4, 0, 26, 9, 0, 0, 2, 1, 1, 1]' : 0.170512}"]
returning from 'run': {'[6, 3, 2, 4, 4, 1, 1, 0, 4, 0, 26, 9, 0, 0, 2, 1, 1, 1]': ([0.172977, 0.175487, 0.175387, 0.178717, 0.180689, 0.18074, 0.18073, 0.180866, 0.180781, 0.180856, 0.178717, 0.176914, 0.180732, 0.176332, 0.175883, 0.175091, 0.17021, 0.173054, 0.175613, 0.175984, 0.176006, 0.175514, 0.173304, 0.174682, 0.175631, 0.175506, 0.176189, 0.175581, 0.173743, 0.170512], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 3, 2, 4, 4, 1, 1, 0, 4, 0, 26, 9, 0, 0, 2, 1, 1, 1]': ([0.172977, 0.175487, 0.175387, 0.178717, 0.180689, 0.18074, 0.18073, 0.180866, 0.180781, 0.180856, 0.178717, 0.176914, 0.180732, 0.176332, 0.175883, 0.175091, 0.17021, 0.173054, 0.175613, 0.175984, 0.176006, 0.175514, 0.173304, 0.174682, 0.175631, 0.175506, 0.176189, 0.175581, 0.173743, 0.170512], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = kkk
Code stats:
        Number of loops: 	47
        Max loop nest depth: 	5
        Additions: 		7002
        Multiplications: 	2040
        Divisions: 		0
        Logical: 		0
        Reads: 			10783
        Writes: 		1185
        Comparisons:		47
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest24.exe __orio_perftest24.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest24.exe  
Program Test Output: 
{'[1, 6, 4, 0, 5, 2, 1, 0, 3, 28, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.211705}
{'[1, 6, 4, 0, 5, 2, 1, 0, 3, 28, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.211673}
{'[1, 6, 4, 0, 5, 2, 1, 0, 3, 28, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.2075}
{'[1, 6, 4, 0, 5, 2, 1, 0, 3, 28, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.205133}
{'[1, 6, 4, 0, 5, 2, 1, 0, 3, 28, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.20656}
{'[1, 6, 4, 0, 5, 2, 1, 0, 3, 28, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.211492}
{'[1, 6, 4, 0, 5, 2, 1, 0, 3, 28, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.211798}
{'[1, 6, 4, 0, 5, 2, 1, 0, 3, 28, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.211626}
{'[1, 6, 4, 0, 5, 2, 1, 0, 3, 28, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.209404}
{'[1, 6, 4, 0, 5, 2, 1, 0, 3, 28, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.20858}
{'[1, 6, 4, 0, 5, 2, 1, 0, 3, 28, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.211565}
{'[1, 6, 4, 0, 5, 2, 1, 0, 3, 28, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.211665}
{'[1, 6, 4, 0, 5, 2, 1, 0, 3, 28, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.211556}
{'[1, 6, 4, 0, 5, 2, 1, 0, 3, 28, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.211531}
{'[1, 6, 4, 0, 5, 2, 1, 0, 3, 28, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.211634}
{'[1, 6, 4, 0, 5, 2, 1, 0, 3, 28, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.211782}
{'[1, 6, 4, 0, 5, 2, 1, 0, 3, 28, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.211599}
{'[1, 6, 4, 0, 5, 2, 1, 0, 3, 28, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.210859}
{'[1, 6, 4, 0, 5, 2, 1, 0, 3, 28, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.202569}
{'[1, 6, 4, 0, 5, 2, 1, 0, 3, 28, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.211225}
{'[1, 6, 4, 0, 5, 2, 1, 0, 3, 28, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.211548}
{'[1, 6, 4, 0, 5, 2, 1, 0, 3, 28, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.211689}
{'[1, 6, 4, 0, 5, 2, 1, 0, 3, 28, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.211587}
{'[1, 6, 4, 0, 5, 2, 1, 0, 3, 28, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.208655}
{'[1, 6, 4, 0, 5, 2, 1, 0, 3, 28, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.21164}
{'[1, 6, 4, 0, 5, 2, 1, 0, 3, 28, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.211777}
{'[1, 6, 4, 0, 5, 2, 1, 0, 3, 28, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.211604}
{'[1, 6, 4, 0, 5, 2, 1, 0, 3, 28, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.211604}
{'[1, 6, 4, 0, 5, 2, 1, 0, 3, 28, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.211661}
{'[1, 6, 4, 0, 5, 2, 1, 0, 3, 28, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.211596}

out:
 ["{'[1, 6, 4, 0, 5, 2, 1, 0, 3, 28, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.211705}", "{'[1, 6, 4, 0, 5, 2, 1, 0, 3, 28, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.211673}", "{'[1, 6, 4, 0, 5, 2, 1, 0, 3, 28, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.2075}", "{'[1, 6, 4, 0, 5, 2, 1, 0, 3, 28, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.205133}", "{'[1, 6, 4, 0, 5, 2, 1, 0, 3, 28, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.20656}", "{'[1, 6, 4, 0, 5, 2, 1, 0, 3, 28, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.211492}", "{'[1, 6, 4, 0, 5, 2, 1, 0, 3, 28, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.211798}", "{'[1, 6, 4, 0, 5, 2, 1, 0, 3, 28, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.211626}", "{'[1, 6, 4, 0, 5, 2, 1, 0, 3, 28, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.209404}", "{'[1, 6, 4, 0, 5, 2, 1, 0, 3, 28, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.20858}", "{'[1, 6, 4, 0, 5, 2, 1, 0, 3, 28, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.211565}", "{'[1, 6, 4, 0, 5, 2, 1, 0, 3, 28, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.211665}", "{'[1, 6, 4, 0, 5, 2, 1, 0, 3, 28, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.211556}", "{'[1, 6, 4, 0, 5, 2, 1, 0, 3, 28, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.211531}", "{'[1, 6, 4, 0, 5, 2, 1, 0, 3, 28, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.211634}", "{'[1, 6, 4, 0, 5, 2, 1, 0, 3, 28, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.211782}", "{'[1, 6, 4, 0, 5, 2, 1, 0, 3, 28, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.211599}", "{'[1, 6, 4, 0, 5, 2, 1, 0, 3, 28, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.210859}", "{'[1, 6, 4, 0, 5, 2, 1, 0, 3, 28, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.202569}", "{'[1, 6, 4, 0, 5, 2, 1, 0, 3, 28, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.211225}", "{'[1, 6, 4, 0, 5, 2, 1, 0, 3, 28, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.211548}", "{'[1, 6, 4, 0, 5, 2, 1, 0, 3, 28, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.211689}", "{'[1, 6, 4, 0, 5, 2, 1, 0, 3, 28, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.211587}", "{'[1, 6, 4, 0, 5, 2, 1, 0, 3, 28, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.208655}", "{'[1, 6, 4, 0, 5, 2, 1, 0, 3, 28, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.21164}", "{'[1, 6, 4, 0, 5, 2, 1, 0, 3, 28, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.211777}", "{'[1, 6, 4, 0, 5, 2, 1, 0, 3, 28, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.211604}", "{'[1, 6, 4, 0, 5, 2, 1, 0, 3, 28, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.211604}", "{'[1, 6, 4, 0, 5, 2, 1, 0, 3, 28, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.211661}", "{'[1, 6, 4, 0, 5, 2, 1, 0, 3, 28, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.211596}"]
returning from 'run': {'[1, 6, 4, 0, 5, 2, 1, 0, 3, 28, 0, 0, 0, 0, 2, 0, 0, 1]': ([0.211705, 0.211673, 0.2075, 0.205133, 0.20656, 0.211492, 0.211798, 0.211626, 0.209404, 0.20858, 0.211565, 0.211665, 0.211556, 0.211531, 0.211634, 0.211782, 0.211599, 0.210859, 0.202569, 0.211225, 0.211548, 0.211689, 0.211587, 0.208655, 0.21164, 0.211777, 0.211604, 0.211604, 0.211661, 0.211596], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 6, 4, 0, 5, 2, 1, 0, 3, 28, 0, 0, 0, 0, 2, 0, 0, 1]': ([0.211705, 0.211673, 0.2075, 0.205133, 0.20656, 0.211492, 0.211798, 0.211626, 0.209404, 0.20858, 0.211565, 0.211665, 0.211556, 0.211531, 0.211634, 0.211782, 0.211599, 0.210859, 0.202569, 0.211225, 0.211548, 0.211689, 0.211587, 0.208655, 0.21164, 0.211777, 0.211604, 0.211604, 0.211661, 0.211596], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	68
        Max loop nest depth: 	5
        Additions: 		3055
        Multiplications: 	1152
        Divisions: 		0
        Logical: 		0
        Reads: 			6522
        Writes: 		1405
        Comparisons:		68
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest25.exe __orio_perftest25.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest25.exe  
Program Test Output: 
{'[0, 0, 1, 2, 0, 2, 1, 0, 21, 22, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.0986631}
{'[0, 0, 1, 2, 0, 2, 1, 0, 21, 22, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.098279}
{'[0, 0, 1, 2, 0, 2, 1, 0, 21, 22, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.096334}
{'[0, 0, 1, 2, 0, 2, 1, 0, 21, 22, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.09636}
{'[0, 0, 1, 2, 0, 2, 1, 0, 21, 22, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.096453}
{'[0, 0, 1, 2, 0, 2, 1, 0, 21, 22, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.0962341}
{'[0, 0, 1, 2, 0, 2, 1, 0, 21, 22, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.0965149}
{'[0, 0, 1, 2, 0, 2, 1, 0, 21, 22, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.0965481}
{'[0, 0, 1, 2, 0, 2, 1, 0, 21, 22, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.0962989}
{'[0, 0, 1, 2, 0, 2, 1, 0, 21, 22, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.0975211}
{'[0, 0, 1, 2, 0, 2, 1, 0, 21, 22, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.0991819}
{'[0, 0, 1, 2, 0, 2, 1, 0, 21, 22, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.0992289}
{'[0, 0, 1, 2, 0, 2, 1, 0, 21, 22, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.0992641}
{'[0, 0, 1, 2, 0, 2, 1, 0, 21, 22, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.100072}
{'[0, 0, 1, 2, 0, 2, 1, 0, 21, 22, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.0994682}
{'[0, 0, 1, 2, 0, 2, 1, 0, 21, 22, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.0991559}
{'[0, 0, 1, 2, 0, 2, 1, 0, 21, 22, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.09921}
{'[0, 0, 1, 2, 0, 2, 1, 0, 21, 22, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.097038}
{'[0, 0, 1, 2, 0, 2, 1, 0, 21, 22, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.0966451}
{'[0, 0, 1, 2, 0, 2, 1, 0, 21, 22, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.0972121}
{'[0, 0, 1, 2, 0, 2, 1, 0, 21, 22, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.0992081}
{'[0, 0, 1, 2, 0, 2, 1, 0, 21, 22, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.0991619}
{'[0, 0, 1, 2, 0, 2, 1, 0, 21, 22, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.0991571}
{'[0, 0, 1, 2, 0, 2, 1, 0, 21, 22, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.0992742}
{'[0, 0, 1, 2, 0, 2, 1, 0, 21, 22, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.099654}
{'[0, 0, 1, 2, 0, 2, 1, 0, 21, 22, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.09919}
{'[0, 0, 1, 2, 0, 2, 1, 0, 21, 22, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.0991399}
{'[0, 0, 1, 2, 0, 2, 1, 0, 21, 22, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.0971539}
{'[0, 0, 1, 2, 0, 2, 1, 0, 21, 22, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.0965481}
{'[0, 0, 1, 2, 0, 2, 1, 0, 21, 22, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.097425}

out:
 ["{'[0, 0, 1, 2, 0, 2, 1, 0, 21, 22, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.0986631}", "{'[0, 0, 1, 2, 0, 2, 1, 0, 21, 22, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.098279}", "{'[0, 0, 1, 2, 0, 2, 1, 0, 21, 22, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.096334}", "{'[0, 0, 1, 2, 0, 2, 1, 0, 21, 22, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.09636}", "{'[0, 0, 1, 2, 0, 2, 1, 0, 21, 22, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.096453}", "{'[0, 0, 1, 2, 0, 2, 1, 0, 21, 22, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.0962341}", "{'[0, 0, 1, 2, 0, 2, 1, 0, 21, 22, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.0965149}", "{'[0, 0, 1, 2, 0, 2, 1, 0, 21, 22, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.0965481}", "{'[0, 0, 1, 2, 0, 2, 1, 0, 21, 22, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.0962989}", "{'[0, 0, 1, 2, 0, 2, 1, 0, 21, 22, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.0975211}", "{'[0, 0, 1, 2, 0, 2, 1, 0, 21, 22, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.0991819}", "{'[0, 0, 1, 2, 0, 2, 1, 0, 21, 22, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.0992289}", "{'[0, 0, 1, 2, 0, 2, 1, 0, 21, 22, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.0992641}", "{'[0, 0, 1, 2, 0, 2, 1, 0, 21, 22, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.100072}", "{'[0, 0, 1, 2, 0, 2, 1, 0, 21, 22, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.0994682}", "{'[0, 0, 1, 2, 0, 2, 1, 0, 21, 22, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.0991559}", "{'[0, 0, 1, 2, 0, 2, 1, 0, 21, 22, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.09921}", "{'[0, 0, 1, 2, 0, 2, 1, 0, 21, 22, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.097038}", "{'[0, 0, 1, 2, 0, 2, 1, 0, 21, 22, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.0966451}", "{'[0, 0, 1, 2, 0, 2, 1, 0, 21, 22, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.0972121}", "{'[0, 0, 1, 2, 0, 2, 1, 0, 21, 22, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.0992081}", "{'[0, 0, 1, 2, 0, 2, 1, 0, 21, 22, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.0991619}", "{'[0, 0, 1, 2, 0, 2, 1, 0, 21, 22, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.0991571}", "{'[0, 0, 1, 2, 0, 2, 1, 0, 21, 22, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.0992742}", "{'[0, 0, 1, 2, 0, 2, 1, 0, 21, 22, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.099654}", "{'[0, 0, 1, 2, 0, 2, 1, 0, 21, 22, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.09919}", "{'[0, 0, 1, 2, 0, 2, 1, 0, 21, 22, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.0991399}", "{'[0, 0, 1, 2, 0, 2, 1, 0, 21, 22, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.0971539}", "{'[0, 0, 1, 2, 0, 2, 1, 0, 21, 22, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.0965481}", "{'[0, 0, 1, 2, 0, 2, 1, 0, 21, 22, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.097425}"]
returning from 'run': {'[0, 0, 1, 2, 0, 2, 1, 0, 21, 22, 0, 7, 1, 0, 1, 1, 0, 1]': ([0.0986631, 0.098279, 0.096334, 0.09636, 0.096453, 0.0962341, 0.0965149, 0.0965481, 0.0962989, 0.0975211, 0.0991819, 0.0992289, 0.0992641, 0.100072, 0.0994682, 0.0991559, 0.09921, 0.097038, 0.0966451, 0.0972121, 0.0992081, 0.0991619, 0.0991571, 0.0992742, 0.099654, 0.09919, 0.0991399, 0.0971539, 0.0965481, 0.097425], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 1, 2, 0, 2, 1, 0, 21, 22, 0, 7, 1, 0, 1, 1, 0, 1]': ([0.0986631, 0.098279, 0.096334, 0.09636, 0.096453, 0.0962341, 0.0965149, 0.0965481, 0.0962989, 0.0975211, 0.0991819, 0.0992289, 0.0992641, 0.100072, 0.0994682, 0.0991559, 0.09921, 0.097038, 0.0966451, 0.0972121, 0.0992081, 0.0991619, 0.0991571, 0.0992742, 0.099654, 0.09919, 0.0991399, 0.0971539, 0.0965481, 0.097425], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	35
        Max loop nest depth: 	6
        Additions: 		2270
        Multiplications: 	1080
        Divisions: 		0
        Logical: 		0
        Reads: 			4462
        Writes: 		753
        Comparisons:		35
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest26.exe __orio_perftest26.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest26.exe  
Program Test Output: 
{'[2, 2, 0, 2, 6, 2, 0, 1, 5, 2, 12, 0, 2, 0, 0, 1, 1, 1]' : 0.221897}
{'[2, 2, 0, 2, 6, 2, 0, 1, 5, 2, 12, 0, 2, 0, 0, 1, 1, 1]' : 0.211614}
{'[2, 2, 0, 2, 6, 2, 0, 1, 5, 2, 12, 0, 2, 0, 0, 1, 1, 1]' : 0.198119}
{'[2, 2, 0, 2, 6, 2, 0, 1, 5, 2, 12, 0, 2, 0, 0, 1, 1, 1]' : 0.19738}
{'[2, 2, 0, 2, 6, 2, 0, 1, 5, 2, 12, 0, 2, 0, 0, 1, 1, 1]' : 0.197887}
{'[2, 2, 0, 2, 6, 2, 0, 1, 5, 2, 12, 0, 2, 0, 0, 1, 1, 1]' : 0.200956}
{'[2, 2, 0, 2, 6, 2, 0, 1, 5, 2, 12, 0, 2, 0, 0, 1, 1, 1]' : 0.196965}
{'[2, 2, 0, 2, 6, 2, 0, 1, 5, 2, 12, 0, 2, 0, 0, 1, 1, 1]' : 0.20095}
{'[2, 2, 0, 2, 6, 2, 0, 1, 5, 2, 12, 0, 2, 0, 0, 1, 1, 1]' : 0.202354}
{'[2, 2, 0, 2, 6, 2, 0, 1, 5, 2, 12, 0, 2, 0, 0, 1, 1, 1]' : 0.201318}
{'[2, 2, 0, 2, 6, 2, 0, 1, 5, 2, 12, 0, 2, 0, 0, 1, 1, 1]' : 0.202174}
{'[2, 2, 0, 2, 6, 2, 0, 1, 5, 2, 12, 0, 2, 0, 0, 1, 1, 1]' : 0.198172}
{'[2, 2, 0, 2, 6, 2, 0, 1, 5, 2, 12, 0, 2, 0, 0, 1, 1, 1]' : 0.197014}
{'[2, 2, 0, 2, 6, 2, 0, 1, 5, 2, 12, 0, 2, 0, 0, 1, 1, 1]' : 0.203767}
{'[2, 2, 0, 2, 6, 2, 0, 1, 5, 2, 12, 0, 2, 0, 0, 1, 1, 1]' : 0.201099}
{'[2, 2, 0, 2, 6, 2, 0, 1, 5, 2, 12, 0, 2, 0, 0, 1, 1, 1]' : 0.202815}
{'[2, 2, 0, 2, 6, 2, 0, 1, 5, 2, 12, 0, 2, 0, 0, 1, 1, 1]' : 0.198697}
{'[2, 2, 0, 2, 6, 2, 0, 1, 5, 2, 12, 0, 2, 0, 0, 1, 1, 1]' : 0.198054}
{'[2, 2, 0, 2, 6, 2, 0, 1, 5, 2, 12, 0, 2, 0, 0, 1, 1, 1]' : 0.200296}
{'[2, 2, 0, 2, 6, 2, 0, 1, 5, 2, 12, 0, 2, 0, 0, 1, 1, 1]' : 0.199666}
{'[2, 2, 0, 2, 6, 2, 0, 1, 5, 2, 12, 0, 2, 0, 0, 1, 1, 1]' : 0.201225}
{'[2, 2, 0, 2, 6, 2, 0, 1, 5, 2, 12, 0, 2, 0, 0, 1, 1, 1]' : 0.196902}
{'[2, 2, 0, 2, 6, 2, 0, 1, 5, 2, 12, 0, 2, 0, 0, 1, 1, 1]' : 0.200232}
{'[2, 2, 0, 2, 6, 2, 0, 1, 5, 2, 12, 0, 2, 0, 0, 1, 1, 1]' : 0.201942}
{'[2, 2, 0, 2, 6, 2, 0, 1, 5, 2, 12, 0, 2, 0, 0, 1, 1, 1]' : 0.202504}
{'[2, 2, 0, 2, 6, 2, 0, 1, 5, 2, 12, 0, 2, 0, 0, 1, 1, 1]' : 0.204296}
{'[2, 2, 0, 2, 6, 2, 0, 1, 5, 2, 12, 0, 2, 0, 0, 1, 1, 1]' : 0.201044}
{'[2, 2, 0, 2, 6, 2, 0, 1, 5, 2, 12, 0, 2, 0, 0, 1, 1, 1]' : 0.201217}
{'[2, 2, 0, 2, 6, 2, 0, 1, 5, 2, 12, 0, 2, 0, 0, 1, 1, 1]' : 0.202987}
{'[2, 2, 0, 2, 6, 2, 0, 1, 5, 2, 12, 0, 2, 0, 0, 1, 1, 1]' : 0.202706}

out:
 ["{'[2, 2, 0, 2, 6, 2, 0, 1, 5, 2, 12, 0, 2, 0, 0, 1, 1, 1]' : 0.221897}", "{'[2, 2, 0, 2, 6, 2, 0, 1, 5, 2, 12, 0, 2, 0, 0, 1, 1, 1]' : 0.211614}", "{'[2, 2, 0, 2, 6, 2, 0, 1, 5, 2, 12, 0, 2, 0, 0, 1, 1, 1]' : 0.198119}", "{'[2, 2, 0, 2, 6, 2, 0, 1, 5, 2, 12, 0, 2, 0, 0, 1, 1, 1]' : 0.19738}", "{'[2, 2, 0, 2, 6, 2, 0, 1, 5, 2, 12, 0, 2, 0, 0, 1, 1, 1]' : 0.197887}", "{'[2, 2, 0, 2, 6, 2, 0, 1, 5, 2, 12, 0, 2, 0, 0, 1, 1, 1]' : 0.200956}", "{'[2, 2, 0, 2, 6, 2, 0, 1, 5, 2, 12, 0, 2, 0, 0, 1, 1, 1]' : 0.196965}", "{'[2, 2, 0, 2, 6, 2, 0, 1, 5, 2, 12, 0, 2, 0, 0, 1, 1, 1]' : 0.20095}", "{'[2, 2, 0, 2, 6, 2, 0, 1, 5, 2, 12, 0, 2, 0, 0, 1, 1, 1]' : 0.202354}", "{'[2, 2, 0, 2, 6, 2, 0, 1, 5, 2, 12, 0, 2, 0, 0, 1, 1, 1]' : 0.201318}", "{'[2, 2, 0, 2, 6, 2, 0, 1, 5, 2, 12, 0, 2, 0, 0, 1, 1, 1]' : 0.202174}", "{'[2, 2, 0, 2, 6, 2, 0, 1, 5, 2, 12, 0, 2, 0, 0, 1, 1, 1]' : 0.198172}", "{'[2, 2, 0, 2, 6, 2, 0, 1, 5, 2, 12, 0, 2, 0, 0, 1, 1, 1]' : 0.197014}", "{'[2, 2, 0, 2, 6, 2, 0, 1, 5, 2, 12, 0, 2, 0, 0, 1, 1, 1]' : 0.203767}", "{'[2, 2, 0, 2, 6, 2, 0, 1, 5, 2, 12, 0, 2, 0, 0, 1, 1, 1]' : 0.201099}", "{'[2, 2, 0, 2, 6, 2, 0, 1, 5, 2, 12, 0, 2, 0, 0, 1, 1, 1]' : 0.202815}", "{'[2, 2, 0, 2, 6, 2, 0, 1, 5, 2, 12, 0, 2, 0, 0, 1, 1, 1]' : 0.198697}", "{'[2, 2, 0, 2, 6, 2, 0, 1, 5, 2, 12, 0, 2, 0, 0, 1, 1, 1]' : 0.198054}", "{'[2, 2, 0, 2, 6, 2, 0, 1, 5, 2, 12, 0, 2, 0, 0, 1, 1, 1]' : 0.200296}", "{'[2, 2, 0, 2, 6, 2, 0, 1, 5, 2, 12, 0, 2, 0, 0, 1, 1, 1]' : 0.199666}", "{'[2, 2, 0, 2, 6, 2, 0, 1, 5, 2, 12, 0, 2, 0, 0, 1, 1, 1]' : 0.201225}", "{'[2, 2, 0, 2, 6, 2, 0, 1, 5, 2, 12, 0, 2, 0, 0, 1, 1, 1]' : 0.196902}", "{'[2, 2, 0, 2, 6, 2, 0, 1, 5, 2, 12, 0, 2, 0, 0, 1, 1, 1]' : 0.200232}", "{'[2, 2, 0, 2, 6, 2, 0, 1, 5, 2, 12, 0, 2, 0, 0, 1, 1, 1]' : 0.201942}", "{'[2, 2, 0, 2, 6, 2, 0, 1, 5, 2, 12, 0, 2, 0, 0, 1, 1, 1]' : 0.202504}", "{'[2, 2, 0, 2, 6, 2, 0, 1, 5, 2, 12, 0, 2, 0, 0, 1, 1, 1]' : 0.204296}", "{'[2, 2, 0, 2, 6, 2, 0, 1, 5, 2, 12, 0, 2, 0, 0, 1, 1, 1]' : 0.201044}", "{'[2, 2, 0, 2, 6, 2, 0, 1, 5, 2, 12, 0, 2, 0, 0, 1, 1, 1]' : 0.201217}", "{'[2, 2, 0, 2, 6, 2, 0, 1, 5, 2, 12, 0, 2, 0, 0, 1, 1, 1]' : 0.202987}", "{'[2, 2, 0, 2, 6, 2, 0, 1, 5, 2, 12, 0, 2, 0, 0, 1, 1, 1]' : 0.202706}"]
returning from 'run': {'[2, 2, 0, 2, 6, 2, 0, 1, 5, 2, 12, 0, 2, 0, 0, 1, 1, 1]': ([0.221897, 0.211614, 0.198119, 0.19738, 0.197887, 0.200956, 0.196965, 0.20095, 0.202354, 0.201318, 0.202174, 0.198172, 0.197014, 0.203767, 0.201099, 0.202815, 0.198697, 0.198054, 0.200296, 0.199666, 0.201225, 0.196902, 0.200232, 0.201942, 0.202504, 0.204296, 0.201044, 0.201217, 0.202987, 0.202706], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 2, 0, 2, 6, 2, 0, 1, 5, 2, 12, 0, 2, 0, 0, 1, 1, 1]': ([0.221897, 0.211614, 0.198119, 0.19738, 0.197887, 0.200956, 0.196965, 0.20095, 0.202354, 0.201318, 0.202174, 0.198172, 0.197014, 0.203767, 0.201099, 0.202815, 0.198697, 0.198054, 0.200296, 0.199666, 0.201225, 0.196902, 0.200232, 0.201942, 0.202504, 0.204296, 0.201044, 0.201217, 0.202987, 0.202706], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	4
        Additions: 		2177
        Multiplications: 	972
        Divisions: 		0
        Logical: 		0
        Reads: 			4178
        Writes: 		690
        Comparisons:		20
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest27.exe __orio_perftest27.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest27.exe  
Program Test Output: 
{'[6, 0, 0, 0, 4, 1, 0, 1, 0, 0, 24, 26, 1, 0, 0, 1, 1, 0]' : 0.112708}
{'[6, 0, 0, 0, 4, 1, 0, 1, 0, 0, 24, 26, 1, 0, 0, 1, 1, 0]' : 0.11299}
{'[6, 0, 0, 0, 4, 1, 0, 1, 0, 0, 24, 26, 1, 0, 0, 1, 1, 0]' : 0.112874}
{'[6, 0, 0, 0, 4, 1, 0, 1, 0, 0, 24, 26, 1, 0, 0, 1, 1, 0]' : 0.112831}
{'[6, 0, 0, 0, 4, 1, 0, 1, 0, 0, 24, 26, 1, 0, 0, 1, 1, 0]' : 0.11286}
{'[6, 0, 0, 0, 4, 1, 0, 1, 0, 0, 24, 26, 1, 0, 0, 1, 1, 0]' : 0.112474}
{'[6, 0, 0, 0, 4, 1, 0, 1, 0, 0, 24, 26, 1, 0, 0, 1, 1, 0]' : 0.112469}
{'[6, 0, 0, 0, 4, 1, 0, 1, 0, 0, 24, 26, 1, 0, 0, 1, 1, 0]' : 0.113461}
{'[6, 0, 0, 0, 4, 1, 0, 1, 0, 0, 24, 26, 1, 0, 0, 1, 1, 0]' : 0.115384}
{'[6, 0, 0, 0, 4, 1, 0, 1, 0, 0, 24, 26, 1, 0, 0, 1, 1, 0]' : 0.115293}
{'[6, 0, 0, 0, 4, 1, 0, 1, 0, 0, 24, 26, 1, 0, 0, 1, 1, 0]' : 0.115313}
{'[6, 0, 0, 0, 4, 1, 0, 1, 0, 0, 24, 26, 1, 0, 0, 1, 1, 0]' : 0.115372}
{'[6, 0, 0, 0, 4, 1, 0, 1, 0, 0, 24, 26, 1, 0, 0, 1, 1, 0]' : 0.115465}
{'[6, 0, 0, 0, 4, 1, 0, 1, 0, 0, 24, 26, 1, 0, 0, 1, 1, 0]' : 0.115306}
{'[6, 0, 0, 0, 4, 1, 0, 1, 0, 0, 24, 26, 1, 0, 0, 1, 1, 0]' : 0.113267}
{'[6, 0, 0, 0, 4, 1, 0, 1, 0, 0, 24, 26, 1, 0, 0, 1, 1, 0]' : 0.112575}
{'[6, 0, 0, 0, 4, 1, 0, 1, 0, 0, 24, 26, 1, 0, 0, 1, 1, 0]' : 0.112346}
{'[6, 0, 0, 0, 4, 1, 0, 1, 0, 0, 24, 26, 1, 0, 0, 1, 1, 0]' : 0.112356}
{'[6, 0, 0, 0, 4, 1, 0, 1, 0, 0, 24, 26, 1, 0, 0, 1, 1, 0]' : 0.115235}
{'[6, 0, 0, 0, 4, 1, 0, 1, 0, 0, 24, 26, 1, 0, 0, 1, 1, 0]' : 0.115497}
{'[6, 0, 0, 0, 4, 1, 0, 1, 0, 0, 24, 26, 1, 0, 0, 1, 1, 0]' : 0.110846}
{'[6, 0, 0, 0, 4, 1, 0, 1, 0, 0, 24, 26, 1, 0, 0, 1, 1, 0]' : 0.112422}
{'[6, 0, 0, 0, 4, 1, 0, 1, 0, 0, 24, 26, 1, 0, 0, 1, 1, 0]' : 0.112563}
{'[6, 0, 0, 0, 4, 1, 0, 1, 0, 0, 24, 26, 1, 0, 0, 1, 1, 0]' : 0.112502}
{'[6, 0, 0, 0, 4, 1, 0, 1, 0, 0, 24, 26, 1, 0, 0, 1, 1, 0]' : 0.11244}
{'[6, 0, 0, 0, 4, 1, 0, 1, 0, 0, 24, 26, 1, 0, 0, 1, 1, 0]' : 0.114634}
{'[6, 0, 0, 0, 4, 1, 0, 1, 0, 0, 24, 26, 1, 0, 0, 1, 1, 0]' : 0.115321}
{'[6, 0, 0, 0, 4, 1, 0, 1, 0, 0, 24, 26, 1, 0, 0, 1, 1, 0]' : 0.115328}
{'[6, 0, 0, 0, 4, 1, 0, 1, 0, 0, 24, 26, 1, 0, 0, 1, 1, 0]' : 0.115578}
{'[6, 0, 0, 0, 4, 1, 0, 1, 0, 0, 24, 26, 1, 0, 0, 1, 1, 0]' : 0.112778}

out:
 ["{'[6, 0, 0, 0, 4, 1, 0, 1, 0, 0, 24, 26, 1, 0, 0, 1, 1, 0]' : 0.112708}", "{'[6, 0, 0, 0, 4, 1, 0, 1, 0, 0, 24, 26, 1, 0, 0, 1, 1, 0]' : 0.11299}", "{'[6, 0, 0, 0, 4, 1, 0, 1, 0, 0, 24, 26, 1, 0, 0, 1, 1, 0]' : 0.112874}", "{'[6, 0, 0, 0, 4, 1, 0, 1, 0, 0, 24, 26, 1, 0, 0, 1, 1, 0]' : 0.112831}", "{'[6, 0, 0, 0, 4, 1, 0, 1, 0, 0, 24, 26, 1, 0, 0, 1, 1, 0]' : 0.11286}", "{'[6, 0, 0, 0, 4, 1, 0, 1, 0, 0, 24, 26, 1, 0, 0, 1, 1, 0]' : 0.112474}", "{'[6, 0, 0, 0, 4, 1, 0, 1, 0, 0, 24, 26, 1, 0, 0, 1, 1, 0]' : 0.112469}", "{'[6, 0, 0, 0, 4, 1, 0, 1, 0, 0, 24, 26, 1, 0, 0, 1, 1, 0]' : 0.113461}", "{'[6, 0, 0, 0, 4, 1, 0, 1, 0, 0, 24, 26, 1, 0, 0, 1, 1, 0]' : 0.115384}", "{'[6, 0, 0, 0, 4, 1, 0, 1, 0, 0, 24, 26, 1, 0, 0, 1, 1, 0]' : 0.115293}", "{'[6, 0, 0, 0, 4, 1, 0, 1, 0, 0, 24, 26, 1, 0, 0, 1, 1, 0]' : 0.115313}", "{'[6, 0, 0, 0, 4, 1, 0, 1, 0, 0, 24, 26, 1, 0, 0, 1, 1, 0]' : 0.115372}", "{'[6, 0, 0, 0, 4, 1, 0, 1, 0, 0, 24, 26, 1, 0, 0, 1, 1, 0]' : 0.115465}", "{'[6, 0, 0, 0, 4, 1, 0, 1, 0, 0, 24, 26, 1, 0, 0, 1, 1, 0]' : 0.115306}", "{'[6, 0, 0, 0, 4, 1, 0, 1, 0, 0, 24, 26, 1, 0, 0, 1, 1, 0]' : 0.113267}", "{'[6, 0, 0, 0, 4, 1, 0, 1, 0, 0, 24, 26, 1, 0, 0, 1, 1, 0]' : 0.112575}", "{'[6, 0, 0, 0, 4, 1, 0, 1, 0, 0, 24, 26, 1, 0, 0, 1, 1, 0]' : 0.112346}", "{'[6, 0, 0, 0, 4, 1, 0, 1, 0, 0, 24, 26, 1, 0, 0, 1, 1, 0]' : 0.112356}", "{'[6, 0, 0, 0, 4, 1, 0, 1, 0, 0, 24, 26, 1, 0, 0, 1, 1, 0]' : 0.115235}", "{'[6, 0, 0, 0, 4, 1, 0, 1, 0, 0, 24, 26, 1, 0, 0, 1, 1, 0]' : 0.115497}", "{'[6, 0, 0, 0, 4, 1, 0, 1, 0, 0, 24, 26, 1, 0, 0, 1, 1, 0]' : 0.110846}", "{'[6, 0, 0, 0, 4, 1, 0, 1, 0, 0, 24, 26, 1, 0, 0, 1, 1, 0]' : 0.112422}", "{'[6, 0, 0, 0, 4, 1, 0, 1, 0, 0, 24, 26, 1, 0, 0, 1, 1, 0]' : 0.112563}", "{'[6, 0, 0, 0, 4, 1, 0, 1, 0, 0, 24, 26, 1, 0, 0, 1, 1, 0]' : 0.112502}", "{'[6, 0, 0, 0, 4, 1, 0, 1, 0, 0, 24, 26, 1, 0, 0, 1, 1, 0]' : 0.11244}", "{'[6, 0, 0, 0, 4, 1, 0, 1, 0, 0, 24, 26, 1, 0, 0, 1, 1, 0]' : 0.114634}", "{'[6, 0, 0, 0, 4, 1, 0, 1, 0, 0, 24, 26, 1, 0, 0, 1, 1, 0]' : 0.115321}", "{'[6, 0, 0, 0, 4, 1, 0, 1, 0, 0, 24, 26, 1, 0, 0, 1, 1, 0]' : 0.115328}", "{'[6, 0, 0, 0, 4, 1, 0, 1, 0, 0, 24, 26, 1, 0, 0, 1, 1, 0]' : 0.115578}", "{'[6, 0, 0, 0, 4, 1, 0, 1, 0, 0, 24, 26, 1, 0, 0, 1, 1, 0]' : 0.112778}"]
returning from 'run': {'[6, 0, 0, 0, 4, 1, 0, 1, 0, 0, 24, 26, 1, 0, 0, 1, 1, 0]': ([0.112708, 0.11299, 0.112874, 0.112831, 0.11286, 0.112474, 0.112469, 0.113461, 0.115384, 0.115293, 0.115313, 0.115372, 0.115465, 0.115306, 0.113267, 0.112575, 0.112346, 0.112356, 0.115235, 0.115497, 0.110846, 0.112422, 0.112563, 0.112502, 0.11244, 0.114634, 0.115321, 0.115328, 0.115578, 0.112778], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 0, 0, 4, 1, 0, 1, 0, 0, 24, 26, 1, 0, 0, 1, 1, 0]': ([0.112708, 0.11299, 0.112874, 0.112831, 0.11286, 0.112474, 0.112469, 0.113461, 0.115384, 0.115293, 0.115313, 0.115372, 0.115465, 0.115306, 0.113267, 0.112575, 0.112346, 0.112356, 0.115235, 0.115497, 0.110846, 0.112422, 0.112563, 0.112502, 0.11244, 0.114634, 0.115321, 0.115328, 0.115578, 0.112778], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	84
        Max loop nest depth: 	6
        Additions: 		8060
        Multiplications: 	2960
        Divisions: 		0
        Logical: 		0
        Reads: 			17233
        Writes: 		3759
        Comparisons:		84
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest28.exe __orio_perftest28.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest28.exe  
Program Test Output: 
{'[3, 2, 2, 6, 6, 6, 0, 0, 0, 27, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.0935972}
{'[3, 2, 2, 6, 6, 6, 0, 0, 0, 27, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.0944769}
{'[3, 2, 2, 6, 6, 6, 0, 0, 0, 27, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.095506}
{'[3, 2, 2, 6, 6, 6, 0, 0, 0, 27, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.095047}
{'[3, 2, 2, 6, 6, 6, 0, 0, 0, 27, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.0950038}
{'[3, 2, 2, 6, 6, 6, 0, 0, 0, 27, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.09514}
{'[3, 2, 2, 6, 6, 6, 0, 0, 0, 27, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.093385}
{'[3, 2, 2, 6, 6, 6, 0, 0, 0, 27, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.0948269}
{'[3, 2, 2, 6, 6, 6, 0, 0, 0, 27, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.094944}
{'[3, 2, 2, 6, 6, 6, 0, 0, 0, 27, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.094908}
{'[3, 2, 2, 6, 6, 6, 0, 0, 0, 27, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.0947649}
{'[3, 2, 2, 6, 6, 6, 0, 0, 0, 27, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.0947568}
{'[3, 2, 2, 6, 6, 6, 0, 0, 0, 27, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.096983}
{'[3, 2, 2, 6, 6, 6, 0, 0, 0, 27, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.0969472}
{'[3, 2, 2, 6, 6, 6, 0, 0, 0, 27, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.0969169}
{'[3, 2, 2, 6, 6, 6, 0, 0, 0, 27, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.0968809}
{'[3, 2, 2, 6, 6, 6, 0, 0, 0, 27, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.0971582}
{'[3, 2, 2, 6, 6, 6, 0, 0, 0, 27, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.097126}
{'[3, 2, 2, 6, 6, 6, 0, 0, 0, 27, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.0953231}
{'[3, 2, 2, 6, 6, 6, 0, 0, 0, 27, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.09463}
{'[3, 2, 2, 6, 6, 6, 0, 0, 0, 27, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.092941}
{'[3, 2, 2, 6, 6, 6, 0, 0, 0, 27, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.093107}
{'[3, 2, 2, 6, 6, 6, 0, 0, 0, 27, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.0947011}
{'[3, 2, 2, 6, 6, 6, 0, 0, 0, 27, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.0969691}
{'[3, 2, 2, 6, 6, 6, 0, 0, 0, 27, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.097054}
{'[3, 2, 2, 6, 6, 6, 0, 0, 0, 27, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.0969329}
{'[3, 2, 2, 6, 6, 6, 0, 0, 0, 27, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.0969589}
{'[3, 2, 2, 6, 6, 6, 0, 0, 0, 27, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.097017}
{'[3, 2, 2, 6, 6, 6, 0, 0, 0, 27, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.096967}
{'[3, 2, 2, 6, 6, 6, 0, 0, 0, 27, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.0969391}

out:
 ["{'[3, 2, 2, 6, 6, 6, 0, 0, 0, 27, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.0935972}", "{'[3, 2, 2, 6, 6, 6, 0, 0, 0, 27, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.0944769}", "{'[3, 2, 2, 6, 6, 6, 0, 0, 0, 27, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.095506}", "{'[3, 2, 2, 6, 6, 6, 0, 0, 0, 27, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.095047}", "{'[3, 2, 2, 6, 6, 6, 0, 0, 0, 27, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.0950038}", "{'[3, 2, 2, 6, 6, 6, 0, 0, 0, 27, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.09514}", "{'[3, 2, 2, 6, 6, 6, 0, 0, 0, 27, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.093385}", "{'[3, 2, 2, 6, 6, 6, 0, 0, 0, 27, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.0948269}", "{'[3, 2, 2, 6, 6, 6, 0, 0, 0, 27, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.094944}", "{'[3, 2, 2, 6, 6, 6, 0, 0, 0, 27, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.094908}", "{'[3, 2, 2, 6, 6, 6, 0, 0, 0, 27, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.0947649}", "{'[3, 2, 2, 6, 6, 6, 0, 0, 0, 27, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.0947568}", "{'[3, 2, 2, 6, 6, 6, 0, 0, 0, 27, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.096983}", "{'[3, 2, 2, 6, 6, 6, 0, 0, 0, 27, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.0969472}", "{'[3, 2, 2, 6, 6, 6, 0, 0, 0, 27, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.0969169}", "{'[3, 2, 2, 6, 6, 6, 0, 0, 0, 27, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.0968809}", "{'[3, 2, 2, 6, 6, 6, 0, 0, 0, 27, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.0971582}", "{'[3, 2, 2, 6, 6, 6, 0, 0, 0, 27, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.097126}", "{'[3, 2, 2, 6, 6, 6, 0, 0, 0, 27, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.0953231}", "{'[3, 2, 2, 6, 6, 6, 0, 0, 0, 27, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.09463}", "{'[3, 2, 2, 6, 6, 6, 0, 0, 0, 27, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.092941}", "{'[3, 2, 2, 6, 6, 6, 0, 0, 0, 27, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.093107}", "{'[3, 2, 2, 6, 6, 6, 0, 0, 0, 27, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.0947011}", "{'[3, 2, 2, 6, 6, 6, 0, 0, 0, 27, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.0969691}", "{'[3, 2, 2, 6, 6, 6, 0, 0, 0, 27, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.097054}", "{'[3, 2, 2, 6, 6, 6, 0, 0, 0, 27, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.0969329}", "{'[3, 2, 2, 6, 6, 6, 0, 0, 0, 27, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.0969589}", "{'[3, 2, 2, 6, 6, 6, 0, 0, 0, 27, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.097017}", "{'[3, 2, 2, 6, 6, 6, 0, 0, 0, 27, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.096967}", "{'[3, 2, 2, 6, 6, 6, 0, 0, 0, 27, 0, 29, 1, 0, 1, 1, 0, 1]' : 0.0969391}"]
returning from 'run': {'[3, 2, 2, 6, 6, 6, 0, 0, 0, 27, 0, 29, 1, 0, 1, 1, 0, 1]': ([0.0935972, 0.0944769, 0.095506, 0.095047, 0.0950038, 0.09514, 0.093385, 0.0948269, 0.094944, 0.094908, 0.0947649, 0.0947568, 0.096983, 0.0969472, 0.0969169, 0.0968809, 0.0971582, 0.097126, 0.0953231, 0.09463, 0.092941, 0.093107, 0.0947011, 0.0969691, 0.097054, 0.0969329, 0.0969589, 0.097017, 0.096967, 0.0969391], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 2, 2, 6, 6, 6, 0, 0, 0, 27, 0, 29, 1, 0, 1, 1, 0, 1]': ([0.0935972, 0.0944769, 0.095506, 0.095047, 0.0950038, 0.09514, 0.093385, 0.0948269, 0.094944, 0.094908, 0.0947649, 0.0947568, 0.096983, 0.0969472, 0.0969169, 0.0968809, 0.0971582, 0.097126, 0.0953231, 0.09463, 0.092941, 0.093107, 0.0947011, 0.0969691, 0.097054, 0.0969329, 0.0969589, 0.097017, 0.096967, 0.0969391], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	28
        Max loop nest depth: 	4
        Additions: 		2171
        Multiplications: 	990
        Divisions: 		0
        Logical: 		0
        Reads: 			4097
        Writes: 		677
        Comparisons:		28
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest29.exe __orio_perftest29.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest29.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest29.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest29.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest29.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	29
        Max loop nest depth: 	6
        Additions: 		1872
        Multiplications: 	576
        Divisions: 		0
        Logical: 		0
        Reads: 			3083
        Writes: 		357
        Comparisons:		29
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest30.exe __orio_perftest30.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest30.exe  
Program Test Output: 
{'[2, 0, 4, 3, 0, 6, 0, 0, 0, 7, 29, 0, 0, 0, 0, 0, 1, 0]' : 0.183654}
{'[2, 0, 4, 3, 0, 6, 0, 0, 0, 7, 29, 0, 0, 0, 0, 0, 1, 0]' : 0.175285}
{'[2, 0, 4, 3, 0, 6, 0, 0, 0, 7, 29, 0, 0, 0, 0, 0, 1, 0]' : 0.175583}
{'[2, 0, 4, 3, 0, 6, 0, 0, 0, 7, 29, 0, 0, 0, 0, 0, 1, 0]' : 0.175678}
{'[2, 0, 4, 3, 0, 6, 0, 0, 0, 7, 29, 0, 0, 0, 0, 0, 1, 0]' : 0.171979}
{'[2, 0, 4, 3, 0, 6, 0, 0, 0, 7, 29, 0, 0, 0, 0, 0, 1, 0]' : 0.175115}
{'[2, 0, 4, 3, 0, 6, 0, 0, 0, 7, 29, 0, 0, 0, 0, 0, 1, 0]' : 0.175244}
{'[2, 0, 4, 3, 0, 6, 0, 0, 0, 7, 29, 0, 0, 0, 0, 0, 1, 0]' : 0.1781}
{'[2, 0, 4, 3, 0, 6, 0, 0, 0, 7, 29, 0, 0, 0, 0, 0, 1, 0]' : 0.179591}
{'[2, 0, 4, 3, 0, 6, 0, 0, 0, 7, 29, 0, 0, 0, 0, 0, 1, 0]' : 0.174084}
{'[2, 0, 4, 3, 0, 6, 0, 0, 0, 7, 29, 0, 0, 0, 0, 0, 1, 0]' : 0.176538}
{'[2, 0, 4, 3, 0, 6, 0, 0, 0, 7, 29, 0, 0, 0, 0, 0, 1, 0]' : 0.180603}
{'[2, 0, 4, 3, 0, 6, 0, 0, 0, 7, 29, 0, 0, 0, 0, 0, 1, 0]' : 0.180471}
{'[2, 0, 4, 3, 0, 6, 0, 0, 0, 7, 29, 0, 0, 0, 0, 0, 1, 0]' : 0.180439}
{'[2, 0, 4, 3, 0, 6, 0, 0, 0, 7, 29, 0, 0, 0, 0, 0, 1, 0]' : 0.177721}
{'[2, 0, 4, 3, 0, 6, 0, 0, 0, 7, 29, 0, 0, 0, 0, 0, 1, 0]' : 0.1727}
{'[2, 0, 4, 3, 0, 6, 0, 0, 0, 7, 29, 0, 0, 0, 0, 0, 1, 0]' : 0.176374}
{'[2, 0, 4, 3, 0, 6, 0, 0, 0, 7, 29, 0, 0, 0, 0, 0, 1, 0]' : 0.180472}
{'[2, 0, 4, 3, 0, 6, 0, 0, 0, 7, 29, 0, 0, 0, 0, 0, 1, 0]' : 0.180746}
{'[2, 0, 4, 3, 0, 6, 0, 0, 0, 7, 29, 0, 0, 0, 0, 0, 1, 0]' : 0.180588}
{'[2, 0, 4, 3, 0, 6, 0, 0, 0, 7, 29, 0, 0, 0, 0, 0, 1, 0]' : 0.178676}
{'[2, 0, 4, 3, 0, 6, 0, 0, 0, 7, 29, 0, 0, 0, 0, 0, 1, 0]' : 0.175879}
{'[2, 0, 4, 3, 0, 6, 0, 0, 0, 7, 29, 0, 0, 0, 0, 0, 1, 0]' : 0.175221}
{'[2, 0, 4, 3, 0, 6, 0, 0, 0, 7, 29, 0, 0, 0, 0, 0, 1, 0]' : 0.175294}
{'[2, 0, 4, 3, 0, 6, 0, 0, 0, 7, 29, 0, 0, 0, 0, 0, 1, 0]' : 0.178447}
{'[2, 0, 4, 3, 0, 6, 0, 0, 0, 7, 29, 0, 0, 0, 0, 0, 1, 0]' : 0.178742}
{'[2, 0, 4, 3, 0, 6, 0, 0, 0, 7, 29, 0, 0, 0, 0, 0, 1, 0]' : 0.173063}
{'[2, 0, 4, 3, 0, 6, 0, 0, 0, 7, 29, 0, 0, 0, 0, 0, 1, 0]' : 0.178133}
{'[2, 0, 4, 3, 0, 6, 0, 0, 0, 7, 29, 0, 0, 0, 0, 0, 1, 0]' : 0.180441}
{'[2, 0, 4, 3, 0, 6, 0, 0, 0, 7, 29, 0, 0, 0, 0, 0, 1, 0]' : 0.180618}

out:
 ["{'[2, 0, 4, 3, 0, 6, 0, 0, 0, 7, 29, 0, 0, 0, 0, 0, 1, 0]' : 0.183654}", "{'[2, 0, 4, 3, 0, 6, 0, 0, 0, 7, 29, 0, 0, 0, 0, 0, 1, 0]' : 0.175285}", "{'[2, 0, 4, 3, 0, 6, 0, 0, 0, 7, 29, 0, 0, 0, 0, 0, 1, 0]' : 0.175583}", "{'[2, 0, 4, 3, 0, 6, 0, 0, 0, 7, 29, 0, 0, 0, 0, 0, 1, 0]' : 0.175678}", "{'[2, 0, 4, 3, 0, 6, 0, 0, 0, 7, 29, 0, 0, 0, 0, 0, 1, 0]' : 0.171979}", "{'[2, 0, 4, 3, 0, 6, 0, 0, 0, 7, 29, 0, 0, 0, 0, 0, 1, 0]' : 0.175115}", "{'[2, 0, 4, 3, 0, 6, 0, 0, 0, 7, 29, 0, 0, 0, 0, 0, 1, 0]' : 0.175244}", "{'[2, 0, 4, 3, 0, 6, 0, 0, 0, 7, 29, 0, 0, 0, 0, 0, 1, 0]' : 0.1781}", "{'[2, 0, 4, 3, 0, 6, 0, 0, 0, 7, 29, 0, 0, 0, 0, 0, 1, 0]' : 0.179591}", "{'[2, 0, 4, 3, 0, 6, 0, 0, 0, 7, 29, 0, 0, 0, 0, 0, 1, 0]' : 0.174084}", "{'[2, 0, 4, 3, 0, 6, 0, 0, 0, 7, 29, 0, 0, 0, 0, 0, 1, 0]' : 0.176538}", "{'[2, 0, 4, 3, 0, 6, 0, 0, 0, 7, 29, 0, 0, 0, 0, 0, 1, 0]' : 0.180603}", "{'[2, 0, 4, 3, 0, 6, 0, 0, 0, 7, 29, 0, 0, 0, 0, 0, 1, 0]' : 0.180471}", "{'[2, 0, 4, 3, 0, 6, 0, 0, 0, 7, 29, 0, 0, 0, 0, 0, 1, 0]' : 0.180439}", "{'[2, 0, 4, 3, 0, 6, 0, 0, 0, 7, 29, 0, 0, 0, 0, 0, 1, 0]' : 0.177721}", "{'[2, 0, 4, 3, 0, 6, 0, 0, 0, 7, 29, 0, 0, 0, 0, 0, 1, 0]' : 0.1727}", "{'[2, 0, 4, 3, 0, 6, 0, 0, 0, 7, 29, 0, 0, 0, 0, 0, 1, 0]' : 0.176374}", "{'[2, 0, 4, 3, 0, 6, 0, 0, 0, 7, 29, 0, 0, 0, 0, 0, 1, 0]' : 0.180472}", "{'[2, 0, 4, 3, 0, 6, 0, 0, 0, 7, 29, 0, 0, 0, 0, 0, 1, 0]' : 0.180746}", "{'[2, 0, 4, 3, 0, 6, 0, 0, 0, 7, 29, 0, 0, 0, 0, 0, 1, 0]' : 0.180588}", "{'[2, 0, 4, 3, 0, 6, 0, 0, 0, 7, 29, 0, 0, 0, 0, 0, 1, 0]' : 0.178676}", "{'[2, 0, 4, 3, 0, 6, 0, 0, 0, 7, 29, 0, 0, 0, 0, 0, 1, 0]' : 0.175879}", "{'[2, 0, 4, 3, 0, 6, 0, 0, 0, 7, 29, 0, 0, 0, 0, 0, 1, 0]' : 0.175221}", "{'[2, 0, 4, 3, 0, 6, 0, 0, 0, 7, 29, 0, 0, 0, 0, 0, 1, 0]' : 0.175294}", "{'[2, 0, 4, 3, 0, 6, 0, 0, 0, 7, 29, 0, 0, 0, 0, 0, 1, 0]' : 0.178447}", "{'[2, 0, 4, 3, 0, 6, 0, 0, 0, 7, 29, 0, 0, 0, 0, 0, 1, 0]' : 0.178742}", "{'[2, 0, 4, 3, 0, 6, 0, 0, 0, 7, 29, 0, 0, 0, 0, 0, 1, 0]' : 0.173063}", "{'[2, 0, 4, 3, 0, 6, 0, 0, 0, 7, 29, 0, 0, 0, 0, 0, 1, 0]' : 0.178133}", "{'[2, 0, 4, 3, 0, 6, 0, 0, 0, 7, 29, 0, 0, 0, 0, 0, 1, 0]' : 0.180441}", "{'[2, 0, 4, 3, 0, 6, 0, 0, 0, 7, 29, 0, 0, 0, 0, 0, 1, 0]' : 0.180618}"]
returning from 'run': {'[2, 0, 4, 3, 0, 6, 0, 0, 0, 7, 29, 0, 0, 0, 0, 0, 1, 0]': ([0.183654, 0.175285, 0.175583, 0.175678, 0.171979, 0.175115, 0.175244, 0.1781, 0.179591, 0.174084, 0.176538, 0.180603, 0.180471, 0.180439, 0.177721, 0.1727, 0.176374, 0.180472, 0.180746, 0.180588, 0.178676, 0.175879, 0.175221, 0.175294, 0.178447, 0.178742, 0.173063, 0.178133, 0.180441, 0.180618], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 0, 4, 3, 0, 6, 0, 0, 0, 7, 29, 0, 0, 0, 0, 0, 1, 0]': ([0.183654, 0.175285, 0.175583, 0.175678, 0.171979, 0.175115, 0.175244, 0.1781, 0.179591, 0.174084, 0.176538, 0.180603, 0.180471, 0.180439, 0.177721, 0.1727, 0.176374, 0.180472, 0.180746, 0.180588, 0.178676, 0.175879, 0.175221, 0.175294, 0.178447, 0.178742, 0.173063, 0.178133, 0.180441, 0.180618], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	32
        Max loop nest depth: 	6
        Additions: 		2139
        Multiplications: 	658
        Divisions: 		0
        Logical: 		0
        Reads: 			3618
        Writes: 		435
        Comparisons:		32
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest31.exe __orio_perftest31.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest31.exe  
Program Test Output: 
{'[2, 6, 1, 6, 0, 5, 0, 0, 3, 5, 28, 0, 0, 1, 1, 0, 1, 1]' : 0.120263}
{'[2, 6, 1, 6, 0, 5, 0, 0, 3, 5, 28, 0, 0, 1, 1, 0, 1, 1]' : 0.120531}
{'[2, 6, 1, 6, 0, 5, 0, 0, 3, 5, 28, 0, 0, 1, 1, 0, 1, 1]' : 0.121922}
{'[2, 6, 1, 6, 0, 5, 0, 0, 3, 5, 28, 0, 0, 1, 1, 0, 1, 1]' : 0.123202}
{'[2, 6, 1, 6, 0, 5, 0, 0, 3, 5, 28, 0, 0, 1, 1, 0, 1, 1]' : 0.123206}
{'[2, 6, 1, 6, 0, 5, 0, 0, 3, 5, 28, 0, 0, 1, 1, 0, 1, 1]' : 0.122262}
{'[2, 6, 1, 6, 0, 5, 0, 0, 3, 5, 28, 0, 0, 1, 1, 0, 1, 1]' : 0.121607}
{'[2, 6, 1, 6, 0, 5, 0, 0, 3, 5, 28, 0, 0, 1, 1, 0, 1, 1]' : 0.123235}
{'[2, 6, 1, 6, 0, 5, 0, 0, 3, 5, 28, 0, 0, 1, 1, 0, 1, 1]' : 0.123104}
{'[2, 6, 1, 6, 0, 5, 0, 0, 3, 5, 28, 0, 0, 1, 1, 0, 1, 1]' : 0.123195}
{'[2, 6, 1, 6, 0, 5, 0, 0, 3, 5, 28, 0, 0, 1, 1, 0, 1, 1]' : 0.123349}
{'[2, 6, 1, 6, 0, 5, 0, 0, 3, 5, 28, 0, 0, 1, 1, 0, 1, 1]' : 0.123147}
{'[2, 6, 1, 6, 0, 5, 0, 0, 3, 5, 28, 0, 0, 1, 1, 0, 1, 1]' : 0.120367}
{'[2, 6, 1, 6, 0, 5, 0, 0, 3, 5, 28, 0, 0, 1, 1, 0, 1, 1]' : 0.120327}
{'[2, 6, 1, 6, 0, 5, 0, 0, 3, 5, 28, 0, 0, 1, 1, 0, 1, 1]' : 0.121195}
{'[2, 6, 1, 6, 0, 5, 0, 0, 3, 5, 28, 0, 0, 1, 1, 0, 1, 1]' : 0.123164}
{'[2, 6, 1, 6, 0, 5, 0, 0, 3, 5, 28, 0, 0, 1, 1, 0, 1, 1]' : 0.123171}
{'[2, 6, 1, 6, 0, 5, 0, 0, 3, 5, 28, 0, 0, 1, 1, 0, 1, 1]' : 0.123199}
{'[2, 6, 1, 6, 0, 5, 0, 0, 3, 5, 28, 0, 0, 1, 1, 0, 1, 1]' : 0.123156}
{'[2, 6, 1, 6, 0, 5, 0, 0, 3, 5, 28, 0, 0, 1, 1, 0, 1, 1]' : 0.123078}
{'[2, 6, 1, 6, 0, 5, 0, 0, 3, 5, 28, 0, 0, 1, 1, 0, 1, 1]' : 0.123166}
{'[2, 6, 1, 6, 0, 5, 0, 0, 3, 5, 28, 0, 0, 1, 1, 0, 1, 1]' : 0.123209}
{'[2, 6, 1, 6, 0, 5, 0, 0, 3, 5, 28, 0, 0, 1, 1, 0, 1, 1]' : 0.123194}
{'[2, 6, 1, 6, 0, 5, 0, 0, 3, 5, 28, 0, 0, 1, 1, 0, 1, 1]' : 0.123223}
{'[2, 6, 1, 6, 0, 5, 0, 0, 3, 5, 28, 0, 0, 1, 1, 0, 1, 1]' : 0.123161}
{'[2, 6, 1, 6, 0, 5, 0, 0, 3, 5, 28, 0, 0, 1, 1, 0, 1, 1]' : 0.123185}
{'[2, 6, 1, 6, 0, 5, 0, 0, 3, 5, 28, 0, 0, 1, 1, 0, 1, 1]' : 0.123531}
{'[2, 6, 1, 6, 0, 5, 0, 0, 3, 5, 28, 0, 0, 1, 1, 0, 1, 1]' : 0.123361}
{'[2, 6, 1, 6, 0, 5, 0, 0, 3, 5, 28, 0, 0, 1, 1, 0, 1, 1]' : 0.123675}
{'[2, 6, 1, 6, 0, 5, 0, 0, 3, 5, 28, 0, 0, 1, 1, 0, 1, 1]' : 0.123926}

out:
 ["{'[2, 6, 1, 6, 0, 5, 0, 0, 3, 5, 28, 0, 0, 1, 1, 0, 1, 1]' : 0.120263}", "{'[2, 6, 1, 6, 0, 5, 0, 0, 3, 5, 28, 0, 0, 1, 1, 0, 1, 1]' : 0.120531}", "{'[2, 6, 1, 6, 0, 5, 0, 0, 3, 5, 28, 0, 0, 1, 1, 0, 1, 1]' : 0.121922}", "{'[2, 6, 1, 6, 0, 5, 0, 0, 3, 5, 28, 0, 0, 1, 1, 0, 1, 1]' : 0.123202}", "{'[2, 6, 1, 6, 0, 5, 0, 0, 3, 5, 28, 0, 0, 1, 1, 0, 1, 1]' : 0.123206}", "{'[2, 6, 1, 6, 0, 5, 0, 0, 3, 5, 28, 0, 0, 1, 1, 0, 1, 1]' : 0.122262}", "{'[2, 6, 1, 6, 0, 5, 0, 0, 3, 5, 28, 0, 0, 1, 1, 0, 1, 1]' : 0.121607}", "{'[2, 6, 1, 6, 0, 5, 0, 0, 3, 5, 28, 0, 0, 1, 1, 0, 1, 1]' : 0.123235}", "{'[2, 6, 1, 6, 0, 5, 0, 0, 3, 5, 28, 0, 0, 1, 1, 0, 1, 1]' : 0.123104}", "{'[2, 6, 1, 6, 0, 5, 0, 0, 3, 5, 28, 0, 0, 1, 1, 0, 1, 1]' : 0.123195}", "{'[2, 6, 1, 6, 0, 5, 0, 0, 3, 5, 28, 0, 0, 1, 1, 0, 1, 1]' : 0.123349}", "{'[2, 6, 1, 6, 0, 5, 0, 0, 3, 5, 28, 0, 0, 1, 1, 0, 1, 1]' : 0.123147}", "{'[2, 6, 1, 6, 0, 5, 0, 0, 3, 5, 28, 0, 0, 1, 1, 0, 1, 1]' : 0.120367}", "{'[2, 6, 1, 6, 0, 5, 0, 0, 3, 5, 28, 0, 0, 1, 1, 0, 1, 1]' : 0.120327}", "{'[2, 6, 1, 6, 0, 5, 0, 0, 3, 5, 28, 0, 0, 1, 1, 0, 1, 1]' : 0.121195}", "{'[2, 6, 1, 6, 0, 5, 0, 0, 3, 5, 28, 0, 0, 1, 1, 0, 1, 1]' : 0.123164}", "{'[2, 6, 1, 6, 0, 5, 0, 0, 3, 5, 28, 0, 0, 1, 1, 0, 1, 1]' : 0.123171}", "{'[2, 6, 1, 6, 0, 5, 0, 0, 3, 5, 28, 0, 0, 1, 1, 0, 1, 1]' : 0.123199}", "{'[2, 6, 1, 6, 0, 5, 0, 0, 3, 5, 28, 0, 0, 1, 1, 0, 1, 1]' : 0.123156}", "{'[2, 6, 1, 6, 0, 5, 0, 0, 3, 5, 28, 0, 0, 1, 1, 0, 1, 1]' : 0.123078}", "{'[2, 6, 1, 6, 0, 5, 0, 0, 3, 5, 28, 0, 0, 1, 1, 0, 1, 1]' : 0.123166}", "{'[2, 6, 1, 6, 0, 5, 0, 0, 3, 5, 28, 0, 0, 1, 1, 0, 1, 1]' : 0.123209}", "{'[2, 6, 1, 6, 0, 5, 0, 0, 3, 5, 28, 0, 0, 1, 1, 0, 1, 1]' : 0.123194}", "{'[2, 6, 1, 6, 0, 5, 0, 0, 3, 5, 28, 0, 0, 1, 1, 0, 1, 1]' : 0.123223}", "{'[2, 6, 1, 6, 0, 5, 0, 0, 3, 5, 28, 0, 0, 1, 1, 0, 1, 1]' : 0.123161}", "{'[2, 6, 1, 6, 0, 5, 0, 0, 3, 5, 28, 0, 0, 1, 1, 0, 1, 1]' : 0.123185}", "{'[2, 6, 1, 6, 0, 5, 0, 0, 3, 5, 28, 0, 0, 1, 1, 0, 1, 1]' : 0.123531}", "{'[2, 6, 1, 6, 0, 5, 0, 0, 3, 5, 28, 0, 0, 1, 1, 0, 1, 1]' : 0.123361}", "{'[2, 6, 1, 6, 0, 5, 0, 0, 3, 5, 28, 0, 0, 1, 1, 0, 1, 1]' : 0.123675}", "{'[2, 6, 1, 6, 0, 5, 0, 0, 3, 5, 28, 0, 0, 1, 1, 0, 1, 1]' : 0.123926}"]
returning from 'run': {'[2, 6, 1, 6, 0, 5, 0, 0, 3, 5, 28, 0, 0, 1, 1, 0, 1, 1]': ([0.120263, 0.120531, 0.121922, 0.123202, 0.123206, 0.122262, 0.121607, 0.123235, 0.123104, 0.123195, 0.123349, 0.123147, 0.120367, 0.120327, 0.121195, 0.123164, 0.123171, 0.123199, 0.123156, 0.123078, 0.123166, 0.123209, 0.123194, 0.123223, 0.123161, 0.123185, 0.123531, 0.123361, 0.123675, 0.123926], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 6, 1, 6, 0, 5, 0, 0, 3, 5, 28, 0, 0, 1, 1, 0, 1, 1]': ([0.120263, 0.120531, 0.121922, 0.123202, 0.123206, 0.122262, 0.121607, 0.123235, 0.123104, 0.123195, 0.123349, 0.123147, 0.120367, 0.120327, 0.121195, 0.123164, 0.123171, 0.123199, 0.123156, 0.123078, 0.123166, 0.123209, 0.123194, 0.123223, 0.123161, 0.123185, 0.123531, 0.123361, 0.123675, 0.123926], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	6
        Additions: 		121
        Multiplications: 	34
        Divisions: 		0
        Logical: 		0
        Reads: 			267
        Writes: 		61
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest32.exe __orio_perftest32.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest32.exe  
Program Test Output: 
{'[5, 6, 1, 6, 6, 0, 0, 0, 3, 0, 9, 4, 0, 0, 0, 1, 0, 0]' : 0.227404}
{'[5, 6, 1, 6, 6, 0, 0, 0, 3, 0, 9, 4, 0, 0, 0, 1, 0, 0]' : 0.226941}
{'[5, 6, 1, 6, 6, 0, 0, 0, 3, 0, 9, 4, 0, 0, 0, 1, 0, 0]' : 0.203}
{'[5, 6, 1, 6, 6, 0, 0, 0, 3, 0, 9, 4, 0, 0, 0, 1, 0, 0]' : 0.196477}
{'[5, 6, 1, 6, 6, 0, 0, 0, 3, 0, 9, 4, 0, 0, 0, 1, 0, 0]' : 0.196147}
{'[5, 6, 1, 6, 6, 0, 0, 0, 3, 0, 9, 4, 0, 0, 0, 1, 0, 0]' : 0.196265}
{'[5, 6, 1, 6, 6, 0, 0, 0, 3, 0, 9, 4, 0, 0, 0, 1, 0, 0]' : 0.19617}
{'[5, 6, 1, 6, 6, 0, 0, 0, 3, 0, 9, 4, 0, 0, 0, 1, 0, 0]' : 0.196299}
{'[5, 6, 1, 6, 6, 0, 0, 0, 3, 0, 9, 4, 0, 0, 0, 1, 0, 0]' : 0.198904}
{'[5, 6, 1, 6, 6, 0, 0, 0, 3, 0, 9, 4, 0, 0, 0, 1, 0, 0]' : 0.201808}
{'[5, 6, 1, 6, 6, 0, 0, 0, 3, 0, 9, 4, 0, 0, 0, 1, 0, 0]' : 0.202051}
{'[5, 6, 1, 6, 6, 0, 0, 0, 3, 0, 9, 4, 0, 0, 0, 1, 0, 0]' : 0.201805}
{'[5, 6, 1, 6, 6, 0, 0, 0, 3, 0, 9, 4, 0, 0, 0, 1, 0, 0]' : 0.201861}
{'[5, 6, 1, 6, 6, 0, 0, 0, 3, 0, 9, 4, 0, 0, 0, 1, 0, 0]' : 0.196919}
{'[5, 6, 1, 6, 6, 0, 0, 0, 3, 0, 9, 4, 0, 0, 0, 1, 0, 0]' : 0.1965}
{'[5, 6, 1, 6, 6, 0, 0, 0, 3, 0, 9, 4, 0, 0, 0, 1, 0, 0]' : 0.196384}
{'[5, 6, 1, 6, 6, 0, 0, 0, 3, 0, 9, 4, 0, 0, 0, 1, 0, 0]' : 0.196367}
{'[5, 6, 1, 6, 6, 0, 0, 0, 3, 0, 9, 4, 0, 0, 0, 1, 0, 0]' : 0.196304}
{'[5, 6, 1, 6, 6, 0, 0, 0, 3, 0, 9, 4, 0, 0, 0, 1, 0, 0]' : 0.19317}
{'[5, 6, 1, 6, 6, 0, 0, 0, 3, 0, 9, 4, 0, 0, 0, 1, 0, 0]' : 0.196591}
{'[5, 6, 1, 6, 6, 0, 0, 0, 3, 0, 9, 4, 0, 0, 0, 1, 0, 0]' : 0.196579}
{'[5, 6, 1, 6, 6, 0, 0, 0, 3, 0, 9, 4, 0, 0, 0, 1, 0, 0]' : 0.196569}
{'[5, 6, 1, 6, 6, 0, 0, 0, 3, 0, 9, 4, 0, 0, 0, 1, 0, 0]' : 0.191185}
{'[5, 6, 1, 6, 6, 0, 0, 0, 3, 0, 9, 4, 0, 0, 0, 1, 0, 0]' : 0.191534}
{'[5, 6, 1, 6, 6, 0, 0, 0, 3, 0, 9, 4, 0, 0, 0, 1, 0, 0]' : 0.196492}
{'[5, 6, 1, 6, 6, 0, 0, 0, 3, 0, 9, 4, 0, 0, 0, 1, 0, 0]' : 0.196809}
{'[5, 6, 1, 6, 6, 0, 0, 0, 3, 0, 9, 4, 0, 0, 0, 1, 0, 0]' : 0.19643}
{'[5, 6, 1, 6, 6, 0, 0, 0, 3, 0, 9, 4, 0, 0, 0, 1, 0, 0]' : 0.196356}
{'[5, 6, 1, 6, 6, 0, 0, 0, 3, 0, 9, 4, 0, 0, 0, 1, 0, 0]' : 0.194274}
{'[5, 6, 1, 6, 6, 0, 0, 0, 3, 0, 9, 4, 0, 0, 0, 1, 0, 0]' : 0.196226}

out:
 ["{'[5, 6, 1, 6, 6, 0, 0, 0, 3, 0, 9, 4, 0, 0, 0, 1, 0, 0]' : 0.227404}", "{'[5, 6, 1, 6, 6, 0, 0, 0, 3, 0, 9, 4, 0, 0, 0, 1, 0, 0]' : 0.226941}", "{'[5, 6, 1, 6, 6, 0, 0, 0, 3, 0, 9, 4, 0, 0, 0, 1, 0, 0]' : 0.203}", "{'[5, 6, 1, 6, 6, 0, 0, 0, 3, 0, 9, 4, 0, 0, 0, 1, 0, 0]' : 0.196477}", "{'[5, 6, 1, 6, 6, 0, 0, 0, 3, 0, 9, 4, 0, 0, 0, 1, 0, 0]' : 0.196147}", "{'[5, 6, 1, 6, 6, 0, 0, 0, 3, 0, 9, 4, 0, 0, 0, 1, 0, 0]' : 0.196265}", "{'[5, 6, 1, 6, 6, 0, 0, 0, 3, 0, 9, 4, 0, 0, 0, 1, 0, 0]' : 0.19617}", "{'[5, 6, 1, 6, 6, 0, 0, 0, 3, 0, 9, 4, 0, 0, 0, 1, 0, 0]' : 0.196299}", "{'[5, 6, 1, 6, 6, 0, 0, 0, 3, 0, 9, 4, 0, 0, 0, 1, 0, 0]' : 0.198904}", "{'[5, 6, 1, 6, 6, 0, 0, 0, 3, 0, 9, 4, 0, 0, 0, 1, 0, 0]' : 0.201808}", "{'[5, 6, 1, 6, 6, 0, 0, 0, 3, 0, 9, 4, 0, 0, 0, 1, 0, 0]' : 0.202051}", "{'[5, 6, 1, 6, 6, 0, 0, 0, 3, 0, 9, 4, 0, 0, 0, 1, 0, 0]' : 0.201805}", "{'[5, 6, 1, 6, 6, 0, 0, 0, 3, 0, 9, 4, 0, 0, 0, 1, 0, 0]' : 0.201861}", "{'[5, 6, 1, 6, 6, 0, 0, 0, 3, 0, 9, 4, 0, 0, 0, 1, 0, 0]' : 0.196919}", "{'[5, 6, 1, 6, 6, 0, 0, 0, 3, 0, 9, 4, 0, 0, 0, 1, 0, 0]' : 0.1965}", "{'[5, 6, 1, 6, 6, 0, 0, 0, 3, 0, 9, 4, 0, 0, 0, 1, 0, 0]' : 0.196384}", "{'[5, 6, 1, 6, 6, 0, 0, 0, 3, 0, 9, 4, 0, 0, 0, 1, 0, 0]' : 0.196367}", "{'[5, 6, 1, 6, 6, 0, 0, 0, 3, 0, 9, 4, 0, 0, 0, 1, 0, 0]' : 0.196304}", "{'[5, 6, 1, 6, 6, 0, 0, 0, 3, 0, 9, 4, 0, 0, 0, 1, 0, 0]' : 0.19317}", "{'[5, 6, 1, 6, 6, 0, 0, 0, 3, 0, 9, 4, 0, 0, 0, 1, 0, 0]' : 0.196591}", "{'[5, 6, 1, 6, 6, 0, 0, 0, 3, 0, 9, 4, 0, 0, 0, 1, 0, 0]' : 0.196579}", "{'[5, 6, 1, 6, 6, 0, 0, 0, 3, 0, 9, 4, 0, 0, 0, 1, 0, 0]' : 0.196569}", "{'[5, 6, 1, 6, 6, 0, 0, 0, 3, 0, 9, 4, 0, 0, 0, 1, 0, 0]' : 0.191185}", "{'[5, 6, 1, 6, 6, 0, 0, 0, 3, 0, 9, 4, 0, 0, 0, 1, 0, 0]' : 0.191534}", "{'[5, 6, 1, 6, 6, 0, 0, 0, 3, 0, 9, 4, 0, 0, 0, 1, 0, 0]' : 0.196492}", "{'[5, 6, 1, 6, 6, 0, 0, 0, 3, 0, 9, 4, 0, 0, 0, 1, 0, 0]' : 0.196809}", "{'[5, 6, 1, 6, 6, 0, 0, 0, 3, 0, 9, 4, 0, 0, 0, 1, 0, 0]' : 0.19643}", "{'[5, 6, 1, 6, 6, 0, 0, 0, 3, 0, 9, 4, 0, 0, 0, 1, 0, 0]' : 0.196356}", "{'[5, 6, 1, 6, 6, 0, 0, 0, 3, 0, 9, 4, 0, 0, 0, 1, 0, 0]' : 0.194274}", "{'[5, 6, 1, 6, 6, 0, 0, 0, 3, 0, 9, 4, 0, 0, 0, 1, 0, 0]' : 0.196226}"]
returning from 'run': {'[5, 6, 1, 6, 6, 0, 0, 0, 3, 0, 9, 4, 0, 0, 0, 1, 0, 0]': ([0.227404, 0.226941, 0.203, 0.196477, 0.196147, 0.196265, 0.19617, 0.196299, 0.198904, 0.201808, 0.202051, 0.201805, 0.201861, 0.196919, 0.1965, 0.196384, 0.196367, 0.196304, 0.19317, 0.196591, 0.196579, 0.196569, 0.191185, 0.191534, 0.196492, 0.196809, 0.19643, 0.196356, 0.194274, 0.196226], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 6, 1, 6, 6, 0, 0, 0, 3, 0, 9, 4, 0, 0, 0, 1, 0, 0]': ([0.227404, 0.226941, 0.203, 0.196477, 0.196147, 0.196265, 0.19617, 0.196299, 0.198904, 0.201808, 0.202051, 0.201805, 0.201861, 0.196919, 0.1965, 0.196384, 0.196367, 0.196304, 0.19317, 0.196591, 0.196579, 0.196569, 0.191185, 0.191534, 0.196492, 0.196809, 0.19643, 0.196356, 0.194274, 0.196226], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	85
        Max loop nest depth: 	6
        Additions: 		3312
        Multiplications: 	736
        Divisions: 		0
        Logical: 		0
        Reads: 			5268
        Writes: 		659
        Comparisons:		85
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest33.exe __orio_perftest33.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest33.exe  
Program Test Output: 
{'[6, 2, 6, 6, 6, 4, 1, 1, 24, 21, 0, 18, 0, 1, 1, 0, 1, 0]' : 0.206334}
{'[6, 2, 6, 6, 6, 4, 1, 1, 24, 21, 0, 18, 0, 1, 1, 0, 1, 0]' : 0.21078}
{'[6, 2, 6, 6, 6, 4, 1, 1, 24, 21, 0, 18, 0, 1, 1, 0, 1, 0]' : 0.212696}
{'[6, 2, 6, 6, 6, 4, 1, 1, 24, 21, 0, 18, 0, 1, 1, 0, 1, 0]' : 0.213661}
{'[6, 2, 6, 6, 6, 4, 1, 1, 24, 21, 0, 18, 0, 1, 1, 0, 1, 0]' : 0.206136}
{'[6, 2, 6, 6, 6, 4, 1, 1, 24, 21, 0, 18, 0, 1, 1, 0, 1, 0]' : 0.206551}
{'[6, 2, 6, 6, 6, 4, 1, 1, 24, 21, 0, 18, 0, 1, 1, 0, 1, 0]' : 0.211855}
{'[6, 2, 6, 6, 6, 4, 1, 1, 24, 21, 0, 18, 0, 1, 1, 0, 1, 0]' : 0.212703}
{'[6, 2, 6, 6, 6, 4, 1, 1, 24, 21, 0, 18, 0, 1, 1, 0, 1, 0]' : 0.213506}
{'[6, 2, 6, 6, 6, 4, 1, 1, 24, 21, 0, 18, 0, 1, 1, 0, 1, 0]' : 0.212748}
{'[6, 2, 6, 6, 6, 4, 1, 1, 24, 21, 0, 18, 0, 1, 1, 0, 1, 0]' : 0.210597}
{'[6, 2, 6, 6, 6, 4, 1, 1, 24, 21, 0, 18, 0, 1, 1, 0, 1, 0]' : 0.213749}
{'[6, 2, 6, 6, 6, 4, 1, 1, 24, 21, 0, 18, 0, 1, 1, 0, 1, 0]' : 0.211191}
{'[6, 2, 6, 6, 6, 4, 1, 1, 24, 21, 0, 18, 0, 1, 1, 0, 1, 0]' : 0.210955}
{'[6, 2, 6, 6, 6, 4, 1, 1, 24, 21, 0, 18, 0, 1, 1, 0, 1, 0]' : 0.212891}
{'[6, 2, 6, 6, 6, 4, 1, 1, 24, 21, 0, 18, 0, 1, 1, 0, 1, 0]' : 0.214857}
{'[6, 2, 6, 6, 6, 4, 1, 1, 24, 21, 0, 18, 0, 1, 1, 0, 1, 0]' : 0.21566}
{'[6, 2, 6, 6, 6, 4, 1, 1, 24, 21, 0, 18, 0, 1, 1, 0, 1, 0]' : 0.209174}
{'[6, 2, 6, 6, 6, 4, 1, 1, 24, 21, 0, 18, 0, 1, 1, 0, 1, 0]' : 0.218508}
{'[6, 2, 6, 6, 6, 4, 1, 1, 24, 21, 0, 18, 0, 1, 1, 0, 1, 0]' : 0.214617}
{'[6, 2, 6, 6, 6, 4, 1, 1, 24, 21, 0, 18, 0, 1, 1, 0, 1, 0]' : 0.214291}
{'[6, 2, 6, 6, 6, 4, 1, 1, 24, 21, 0, 18, 0, 1, 1, 0, 1, 0]' : 0.219069}
{'[6, 2, 6, 6, 6, 4, 1, 1, 24, 21, 0, 18, 0, 1, 1, 0, 1, 0]' : 0.215765}
{'[6, 2, 6, 6, 6, 4, 1, 1, 24, 21, 0, 18, 0, 1, 1, 0, 1, 0]' : 0.212629}
{'[6, 2, 6, 6, 6, 4, 1, 1, 24, 21, 0, 18, 0, 1, 1, 0, 1, 0]' : 0.207339}
{'[6, 2, 6, 6, 6, 4, 1, 1, 24, 21, 0, 18, 0, 1, 1, 0, 1, 0]' : 0.212584}
{'[6, 2, 6, 6, 6, 4, 1, 1, 24, 21, 0, 18, 0, 1, 1, 0, 1, 0]' : 0.208957}
{'[6, 2, 6, 6, 6, 4, 1, 1, 24, 21, 0, 18, 0, 1, 1, 0, 1, 0]' : 0.213891}
{'[6, 2, 6, 6, 6, 4, 1, 1, 24, 21, 0, 18, 0, 1, 1, 0, 1, 0]' : 0.21881}
{'[6, 2, 6, 6, 6, 4, 1, 1, 24, 21, 0, 18, 0, 1, 1, 0, 1, 0]' : 0.214911}

out:
 ["{'[6, 2, 6, 6, 6, 4, 1, 1, 24, 21, 0, 18, 0, 1, 1, 0, 1, 0]' : 0.206334}", "{'[6, 2, 6, 6, 6, 4, 1, 1, 24, 21, 0, 18, 0, 1, 1, 0, 1, 0]' : 0.21078}", "{'[6, 2, 6, 6, 6, 4, 1, 1, 24, 21, 0, 18, 0, 1, 1, 0, 1, 0]' : 0.212696}", "{'[6, 2, 6, 6, 6, 4, 1, 1, 24, 21, 0, 18, 0, 1, 1, 0, 1, 0]' : 0.213661}", "{'[6, 2, 6, 6, 6, 4, 1, 1, 24, 21, 0, 18, 0, 1, 1, 0, 1, 0]' : 0.206136}", "{'[6, 2, 6, 6, 6, 4, 1, 1, 24, 21, 0, 18, 0, 1, 1, 0, 1, 0]' : 0.206551}", "{'[6, 2, 6, 6, 6, 4, 1, 1, 24, 21, 0, 18, 0, 1, 1, 0, 1, 0]' : 0.211855}", "{'[6, 2, 6, 6, 6, 4, 1, 1, 24, 21, 0, 18, 0, 1, 1, 0, 1, 0]' : 0.212703}", "{'[6, 2, 6, 6, 6, 4, 1, 1, 24, 21, 0, 18, 0, 1, 1, 0, 1, 0]' : 0.213506}", "{'[6, 2, 6, 6, 6, 4, 1, 1, 24, 21, 0, 18, 0, 1, 1, 0, 1, 0]' : 0.212748}", "{'[6, 2, 6, 6, 6, 4, 1, 1, 24, 21, 0, 18, 0, 1, 1, 0, 1, 0]' : 0.210597}", "{'[6, 2, 6, 6, 6, 4, 1, 1, 24, 21, 0, 18, 0, 1, 1, 0, 1, 0]' : 0.213749}", "{'[6, 2, 6, 6, 6, 4, 1, 1, 24, 21, 0, 18, 0, 1, 1, 0, 1, 0]' : 0.211191}", "{'[6, 2, 6, 6, 6, 4, 1, 1, 24, 21, 0, 18, 0, 1, 1, 0, 1, 0]' : 0.210955}", "{'[6, 2, 6, 6, 6, 4, 1, 1, 24, 21, 0, 18, 0, 1, 1, 0, 1, 0]' : 0.212891}", "{'[6, 2, 6, 6, 6, 4, 1, 1, 24, 21, 0, 18, 0, 1, 1, 0, 1, 0]' : 0.214857}", "{'[6, 2, 6, 6, 6, 4, 1, 1, 24, 21, 0, 18, 0, 1, 1, 0, 1, 0]' : 0.21566}", "{'[6, 2, 6, 6, 6, 4, 1, 1, 24, 21, 0, 18, 0, 1, 1, 0, 1, 0]' : 0.209174}", "{'[6, 2, 6, 6, 6, 4, 1, 1, 24, 21, 0, 18, 0, 1, 1, 0, 1, 0]' : 0.218508}", "{'[6, 2, 6, 6, 6, 4, 1, 1, 24, 21, 0, 18, 0, 1, 1, 0, 1, 0]' : 0.214617}", "{'[6, 2, 6, 6, 6, 4, 1, 1, 24, 21, 0, 18, 0, 1, 1, 0, 1, 0]' : 0.214291}", "{'[6, 2, 6, 6, 6, 4, 1, 1, 24, 21, 0, 18, 0, 1, 1, 0, 1, 0]' : 0.219069}", "{'[6, 2, 6, 6, 6, 4, 1, 1, 24, 21, 0, 18, 0, 1, 1, 0, 1, 0]' : 0.215765}", "{'[6, 2, 6, 6, 6, 4, 1, 1, 24, 21, 0, 18, 0, 1, 1, 0, 1, 0]' : 0.212629}", "{'[6, 2, 6, 6, 6, 4, 1, 1, 24, 21, 0, 18, 0, 1, 1, 0, 1, 0]' : 0.207339}", "{'[6, 2, 6, 6, 6, 4, 1, 1, 24, 21, 0, 18, 0, 1, 1, 0, 1, 0]' : 0.212584}", "{'[6, 2, 6, 6, 6, 4, 1, 1, 24, 21, 0, 18, 0, 1, 1, 0, 1, 0]' : 0.208957}", "{'[6, 2, 6, 6, 6, 4, 1, 1, 24, 21, 0, 18, 0, 1, 1, 0, 1, 0]' : 0.213891}", "{'[6, 2, 6, 6, 6, 4, 1, 1, 24, 21, 0, 18, 0, 1, 1, 0, 1, 0]' : 0.21881}", "{'[6, 2, 6, 6, 6, 4, 1, 1, 24, 21, 0, 18, 0, 1, 1, 0, 1, 0]' : 0.214911}"]
returning from 'run': {'[6, 2, 6, 6, 6, 4, 1, 1, 24, 21, 0, 18, 0, 1, 1, 0, 1, 0]': ([0.206334, 0.21078, 0.212696, 0.213661, 0.206136, 0.206551, 0.211855, 0.212703, 0.213506, 0.212748, 0.210597, 0.213749, 0.211191, 0.210955, 0.212891, 0.214857, 0.21566, 0.209174, 0.218508, 0.214617, 0.214291, 0.219069, 0.215765, 0.212629, 0.207339, 0.212584, 0.208957, 0.213891, 0.21881, 0.214911], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 2, 6, 6, 6, 4, 1, 1, 24, 21, 0, 18, 0, 1, 1, 0, 1, 0]': ([0.206334, 0.21078, 0.212696, 0.213661, 0.206136, 0.206551, 0.211855, 0.212703, 0.213506, 0.212748, 0.210597, 0.213749, 0.211191, 0.210955, 0.212891, 0.214857, 0.21566, 0.209174, 0.218508, 0.214617, 0.214291, 0.219069, 0.215765, 0.212629, 0.207339, 0.212584, 0.208957, 0.213891, 0.21881, 0.214911], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	23
        Max loop nest depth: 	5
        Additions: 		330
        Multiplications: 	108
        Divisions: 		0
        Logical: 		0
        Reads: 			759
        Writes: 		173
        Comparisons:		23
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest34.exe __orio_perftest34.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest34.exe  
Program Test Output: 
{'[0, 1, 0, 2, 6, 6, 1, 1, 13, 0, 0, 3, 1, 0, 0, 1, 1, 1]' : 0.0985501}
{'[0, 1, 0, 2, 6, 6, 1, 1, 13, 0, 0, 3, 1, 0, 0, 1, 1, 1]' : 0.09656}
{'[0, 1, 0, 2, 6, 6, 1, 1, 13, 0, 0, 3, 1, 0, 0, 1, 1, 1]' : 0.0966301}
{'[0, 1, 0, 2, 6, 6, 1, 1, 13, 0, 0, 3, 1, 0, 0, 1, 1, 1]' : 0.0961189}
{'[0, 1, 0, 2, 6, 6, 1, 1, 13, 0, 0, 3, 1, 0, 0, 1, 1, 1]' : 0.0959461}
{'[0, 1, 0, 2, 6, 6, 1, 1, 13, 0, 0, 3, 1, 0, 0, 1, 1, 1]' : 0.096061}
{'[0, 1, 0, 2, 6, 6, 1, 1, 13, 0, 0, 3, 1, 0, 0, 1, 1, 1]' : 0.095999}
{'[0, 1, 0, 2, 6, 6, 1, 1, 13, 0, 0, 3, 1, 0, 0, 1, 1, 1]' : 0.096271}
{'[0, 1, 0, 2, 6, 6, 1, 1, 13, 0, 0, 3, 1, 0, 0, 1, 1, 1]' : 0.0966611}
{'[0, 1, 0, 2, 6, 6, 1, 1, 13, 0, 0, 3, 1, 0, 0, 1, 1, 1]' : 0.096117}
{'[0, 1, 0, 2, 6, 6, 1, 1, 13, 0, 0, 3, 1, 0, 0, 1, 1, 1]' : 0.0973189}
{'[0, 1, 0, 2, 6, 6, 1, 1, 13, 0, 0, 3, 1, 0, 0, 1, 1, 1]' : 0.0983732}
{'[0, 1, 0, 2, 6, 6, 1, 1, 13, 0, 0, 3, 1, 0, 0, 1, 1, 1]' : 0.098434}
{'[0, 1, 0, 2, 6, 6, 1, 1, 13, 0, 0, 3, 1, 0, 0, 1, 1, 1]' : 0.098556}
{'[0, 1, 0, 2, 6, 6, 1, 1, 13, 0, 0, 3, 1, 0, 0, 1, 1, 1]' : 0.098397}
{'[0, 1, 0, 2, 6, 6, 1, 1, 13, 0, 0, 3, 1, 0, 0, 1, 1, 1]' : 0.0984409}
{'[0, 1, 0, 2, 6, 6, 1, 1, 13, 0, 0, 3, 1, 0, 0, 1, 1, 1]' : 0.09847}
{'[0, 1, 0, 2, 6, 6, 1, 1, 13, 0, 0, 3, 1, 0, 0, 1, 1, 1]' : 0.0985241}
{'[0, 1, 0, 2, 6, 6, 1, 1, 13, 0, 0, 3, 1, 0, 0, 1, 1, 1]' : 0.098408}
{'[0, 1, 0, 2, 6, 6, 1, 1, 13, 0, 0, 3, 1, 0, 0, 1, 1, 1]' : 0.0984871}
{'[0, 1, 0, 2, 6, 6, 1, 1, 13, 0, 0, 3, 1, 0, 0, 1, 1, 1]' : 0.098393}
{'[0, 1, 0, 2, 6, 6, 1, 1, 13, 0, 0, 3, 1, 0, 0, 1, 1, 1]' : 0.098352}
{'[0, 1, 0, 2, 6, 6, 1, 1, 13, 0, 0, 3, 1, 0, 0, 1, 1, 1]' : 0.0984261}
{'[0, 1, 0, 2, 6, 6, 1, 1, 13, 0, 0, 3, 1, 0, 0, 1, 1, 1]' : 0.096904}
{'[0, 1, 0, 2, 6, 6, 1, 1, 13, 0, 0, 3, 1, 0, 0, 1, 1, 1]' : 0.098218}
{'[0, 1, 0, 2, 6, 6, 1, 1, 13, 0, 0, 3, 1, 0, 0, 1, 1, 1]' : 0.0983469}
{'[0, 1, 0, 2, 6, 6, 1, 1, 13, 0, 0, 3, 1, 0, 0, 1, 1, 1]' : 0.0983901}
{'[0, 1, 0, 2, 6, 6, 1, 1, 13, 0, 0, 3, 1, 0, 0, 1, 1, 1]' : 0.098387}
{'[0, 1, 0, 2, 6, 6, 1, 1, 13, 0, 0, 3, 1, 0, 0, 1, 1, 1]' : 0.0963361}
{'[0, 1, 0, 2, 6, 6, 1, 1, 13, 0, 0, 3, 1, 0, 0, 1, 1, 1]' : 0.0963731}

out:
 ["{'[0, 1, 0, 2, 6, 6, 1, 1, 13, 0, 0, 3, 1, 0, 0, 1, 1, 1]' : 0.0985501}", "{'[0, 1, 0, 2, 6, 6, 1, 1, 13, 0, 0, 3, 1, 0, 0, 1, 1, 1]' : 0.09656}", "{'[0, 1, 0, 2, 6, 6, 1, 1, 13, 0, 0, 3, 1, 0, 0, 1, 1, 1]' : 0.0966301}", "{'[0, 1, 0, 2, 6, 6, 1, 1, 13, 0, 0, 3, 1, 0, 0, 1, 1, 1]' : 0.0961189}", "{'[0, 1, 0, 2, 6, 6, 1, 1, 13, 0, 0, 3, 1, 0, 0, 1, 1, 1]' : 0.0959461}", "{'[0, 1, 0, 2, 6, 6, 1, 1, 13, 0, 0, 3, 1, 0, 0, 1, 1, 1]' : 0.096061}", "{'[0, 1, 0, 2, 6, 6, 1, 1, 13, 0, 0, 3, 1, 0, 0, 1, 1, 1]' : 0.095999}", "{'[0, 1, 0, 2, 6, 6, 1, 1, 13, 0, 0, 3, 1, 0, 0, 1, 1, 1]' : 0.096271}", "{'[0, 1, 0, 2, 6, 6, 1, 1, 13, 0, 0, 3, 1, 0, 0, 1, 1, 1]' : 0.0966611}", "{'[0, 1, 0, 2, 6, 6, 1, 1, 13, 0, 0, 3, 1, 0, 0, 1, 1, 1]' : 0.096117}", "{'[0, 1, 0, 2, 6, 6, 1, 1, 13, 0, 0, 3, 1, 0, 0, 1, 1, 1]' : 0.0973189}", "{'[0, 1, 0, 2, 6, 6, 1, 1, 13, 0, 0, 3, 1, 0, 0, 1, 1, 1]' : 0.0983732}", "{'[0, 1, 0, 2, 6, 6, 1, 1, 13, 0, 0, 3, 1, 0, 0, 1, 1, 1]' : 0.098434}", "{'[0, 1, 0, 2, 6, 6, 1, 1, 13, 0, 0, 3, 1, 0, 0, 1, 1, 1]' : 0.098556}", "{'[0, 1, 0, 2, 6, 6, 1, 1, 13, 0, 0, 3, 1, 0, 0, 1, 1, 1]' : 0.098397}", "{'[0, 1, 0, 2, 6, 6, 1, 1, 13, 0, 0, 3, 1, 0, 0, 1, 1, 1]' : 0.0984409}", "{'[0, 1, 0, 2, 6, 6, 1, 1, 13, 0, 0, 3, 1, 0, 0, 1, 1, 1]' : 0.09847}", "{'[0, 1, 0, 2, 6, 6, 1, 1, 13, 0, 0, 3, 1, 0, 0, 1, 1, 1]' : 0.0985241}", "{'[0, 1, 0, 2, 6, 6, 1, 1, 13, 0, 0, 3, 1, 0, 0, 1, 1, 1]' : 0.098408}", "{'[0, 1, 0, 2, 6, 6, 1, 1, 13, 0, 0, 3, 1, 0, 0, 1, 1, 1]' : 0.0984871}", "{'[0, 1, 0, 2, 6, 6, 1, 1, 13, 0, 0, 3, 1, 0, 0, 1, 1, 1]' : 0.098393}", "{'[0, 1, 0, 2, 6, 6, 1, 1, 13, 0, 0, 3, 1, 0, 0, 1, 1, 1]' : 0.098352}", "{'[0, 1, 0, 2, 6, 6, 1, 1, 13, 0, 0, 3, 1, 0, 0, 1, 1, 1]' : 0.0984261}", "{'[0, 1, 0, 2, 6, 6, 1, 1, 13, 0, 0, 3, 1, 0, 0, 1, 1, 1]' : 0.096904}", "{'[0, 1, 0, 2, 6, 6, 1, 1, 13, 0, 0, 3, 1, 0, 0, 1, 1, 1]' : 0.098218}", "{'[0, 1, 0, 2, 6, 6, 1, 1, 13, 0, 0, 3, 1, 0, 0, 1, 1, 1]' : 0.0983469}", "{'[0, 1, 0, 2, 6, 6, 1, 1, 13, 0, 0, 3, 1, 0, 0, 1, 1, 1]' : 0.0983901}", "{'[0, 1, 0, 2, 6, 6, 1, 1, 13, 0, 0, 3, 1, 0, 0, 1, 1, 1]' : 0.098387}", "{'[0, 1, 0, 2, 6, 6, 1, 1, 13, 0, 0, 3, 1, 0, 0, 1, 1, 1]' : 0.0963361}", "{'[0, 1, 0, 2, 6, 6, 1, 1, 13, 0, 0, 3, 1, 0, 0, 1, 1, 1]' : 0.0963731}"]
returning from 'run': {'[0, 1, 0, 2, 6, 6, 1, 1, 13, 0, 0, 3, 1, 0, 0, 1, 1, 1]': ([0.0985501, 0.09656, 0.0966301, 0.0961189, 0.0959461, 0.096061, 0.095999, 0.096271, 0.0966611, 0.096117, 0.0973189, 0.0983732, 0.098434, 0.098556, 0.098397, 0.0984409, 0.09847, 0.0985241, 0.098408, 0.0984871, 0.098393, 0.098352, 0.0984261, 0.096904, 0.098218, 0.0983469, 0.0983901, 0.098387, 0.0963361, 0.0963731], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 1, 0, 2, 6, 6, 1, 1, 13, 0, 0, 3, 1, 0, 0, 1, 1, 1]': ([0.0985501, 0.09656, 0.0966301, 0.0961189, 0.0959461, 0.096061, 0.095999, 0.096271, 0.0966611, 0.096117, 0.0973189, 0.0983732, 0.098434, 0.098556, 0.098397, 0.0984409, 0.09847, 0.0985241, 0.098408, 0.0984871, 0.098393, 0.098352, 0.0984261, 0.096904, 0.098218, 0.0983469, 0.0983901, 0.098387, 0.0963361, 0.0963731], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	30
        Max loop nest depth: 	5
        Additions: 		351
        Multiplications: 	90
        Divisions: 		0
        Logical: 		0
        Reads: 			807
        Writes: 		191
        Comparisons:		30
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest35.exe __orio_perftest35.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest35.exe  
Program Test Output: 
{'[3, 0, 2, 0, 6, 2, 1, 1, 18, 3, 0, 18, 0, 0, 1, 1, 1, 0]' : 0.193473}
{'[3, 0, 2, 0, 6, 2, 1, 1, 18, 3, 0, 18, 0, 0, 1, 1, 1, 0]' : 0.193643}
{'[3, 0, 2, 0, 6, 2, 1, 1, 18, 3, 0, 18, 0, 0, 1, 1, 1, 0]' : 0.193637}
{'[3, 0, 2, 0, 6, 2, 1, 1, 18, 3, 0, 18, 0, 0, 1, 1, 1, 0]' : 0.193529}
{'[3, 0, 2, 0, 6, 2, 1, 1, 18, 3, 0, 18, 0, 0, 1, 1, 1, 0]' : 0.193528}
{'[3, 0, 2, 0, 6, 2, 1, 1, 18, 3, 0, 18, 0, 0, 1, 1, 1, 0]' : 0.193426}
{'[3, 0, 2, 0, 6, 2, 1, 1, 18, 3, 0, 18, 0, 0, 1, 1, 1, 0]' : 0.19344}
{'[3, 0, 2, 0, 6, 2, 1, 1, 18, 3, 0, 18, 0, 0, 1, 1, 1, 0]' : 0.193515}
{'[3, 0, 2, 0, 6, 2, 1, 1, 18, 3, 0, 18, 0, 0, 1, 1, 1, 0]' : 0.19336}
{'[3, 0, 2, 0, 6, 2, 1, 1, 18, 3, 0, 18, 0, 0, 1, 1, 1, 0]' : 0.190968}
{'[3, 0, 2, 0, 6, 2, 1, 1, 18, 3, 0, 18, 0, 0, 1, 1, 1, 0]' : 0.193374}
{'[3, 0, 2, 0, 6, 2, 1, 1, 18, 3, 0, 18, 0, 0, 1, 1, 1, 0]' : 0.193406}
{'[3, 0, 2, 0, 6, 2, 1, 1, 18, 3, 0, 18, 0, 0, 1, 1, 1, 0]' : 0.193662}
{'[3, 0, 2, 0, 6, 2, 1, 1, 18, 3, 0, 18, 0, 0, 1, 1, 1, 0]' : 0.193507}
{'[3, 0, 2, 0, 6, 2, 1, 1, 18, 3, 0, 18, 0, 0, 1, 1, 1, 0]' : 0.193505}
{'[3, 0, 2, 0, 6, 2, 1, 1, 18, 3, 0, 18, 0, 0, 1, 1, 1, 0]' : 0.189765}
{'[3, 0, 2, 0, 6, 2, 1, 1, 18, 3, 0, 18, 0, 0, 1, 1, 1, 0]' : 0.18894}
{'[3, 0, 2, 0, 6, 2, 1, 1, 18, 3, 0, 18, 0, 0, 1, 1, 1, 0]' : 0.186726}
{'[3, 0, 2, 0, 6, 2, 1, 1, 18, 3, 0, 18, 0, 0, 1, 1, 1, 0]' : 0.19428}
{'[3, 0, 2, 0, 6, 2, 1, 1, 18, 3, 0, 18, 0, 0, 1, 1, 1, 0]' : 0.194327}
{'[3, 0, 2, 0, 6, 2, 1, 1, 18, 3, 0, 18, 0, 0, 1, 1, 1, 0]' : 0.194377}
{'[3, 0, 2, 0, 6, 2, 1, 1, 18, 3, 0, 18, 0, 0, 1, 1, 1, 0]' : 0.194416}
{'[3, 0, 2, 0, 6, 2, 1, 1, 18, 3, 0, 18, 0, 0, 1, 1, 1, 0]' : 0.194008}
{'[3, 0, 2, 0, 6, 2, 1, 1, 18, 3, 0, 18, 0, 0, 1, 1, 1, 0]' : 0.185807}
{'[3, 0, 2, 0, 6, 2, 1, 1, 18, 3, 0, 18, 0, 0, 1, 1, 1, 0]' : 0.182987}
{'[3, 0, 2, 0, 6, 2, 1, 1, 18, 3, 0, 18, 0, 0, 1, 1, 1, 0]' : 0.187122}
{'[3, 0, 2, 0, 6, 2, 1, 1, 18, 3, 0, 18, 0, 0, 1, 1, 1, 0]' : 0.194393}
{'[3, 0, 2, 0, 6, 2, 1, 1, 18, 3, 0, 18, 0, 0, 1, 1, 1, 0]' : 0.194305}
{'[3, 0, 2, 0, 6, 2, 1, 1, 18, 3, 0, 18, 0, 0, 1, 1, 1, 0]' : 0.190323}
{'[3, 0, 2, 0, 6, 2, 1, 1, 18, 3, 0, 18, 0, 0, 1, 1, 1, 0]' : 0.188824}

out:
 ["{'[3, 0, 2, 0, 6, 2, 1, 1, 18, 3, 0, 18, 0, 0, 1, 1, 1, 0]' : 0.193473}", "{'[3, 0, 2, 0, 6, 2, 1, 1, 18, 3, 0, 18, 0, 0, 1, 1, 1, 0]' : 0.193643}", "{'[3, 0, 2, 0, 6, 2, 1, 1, 18, 3, 0, 18, 0, 0, 1, 1, 1, 0]' : 0.193637}", "{'[3, 0, 2, 0, 6, 2, 1, 1, 18, 3, 0, 18, 0, 0, 1, 1, 1, 0]' : 0.193529}", "{'[3, 0, 2, 0, 6, 2, 1, 1, 18, 3, 0, 18, 0, 0, 1, 1, 1, 0]' : 0.193528}", "{'[3, 0, 2, 0, 6, 2, 1, 1, 18, 3, 0, 18, 0, 0, 1, 1, 1, 0]' : 0.193426}", "{'[3, 0, 2, 0, 6, 2, 1, 1, 18, 3, 0, 18, 0, 0, 1, 1, 1, 0]' : 0.19344}", "{'[3, 0, 2, 0, 6, 2, 1, 1, 18, 3, 0, 18, 0, 0, 1, 1, 1, 0]' : 0.193515}", "{'[3, 0, 2, 0, 6, 2, 1, 1, 18, 3, 0, 18, 0, 0, 1, 1, 1, 0]' : 0.19336}", "{'[3, 0, 2, 0, 6, 2, 1, 1, 18, 3, 0, 18, 0, 0, 1, 1, 1, 0]' : 0.190968}", "{'[3, 0, 2, 0, 6, 2, 1, 1, 18, 3, 0, 18, 0, 0, 1, 1, 1, 0]' : 0.193374}", "{'[3, 0, 2, 0, 6, 2, 1, 1, 18, 3, 0, 18, 0, 0, 1, 1, 1, 0]' : 0.193406}", "{'[3, 0, 2, 0, 6, 2, 1, 1, 18, 3, 0, 18, 0, 0, 1, 1, 1, 0]' : 0.193662}", "{'[3, 0, 2, 0, 6, 2, 1, 1, 18, 3, 0, 18, 0, 0, 1, 1, 1, 0]' : 0.193507}", "{'[3, 0, 2, 0, 6, 2, 1, 1, 18, 3, 0, 18, 0, 0, 1, 1, 1, 0]' : 0.193505}", "{'[3, 0, 2, 0, 6, 2, 1, 1, 18, 3, 0, 18, 0, 0, 1, 1, 1, 0]' : 0.189765}", "{'[3, 0, 2, 0, 6, 2, 1, 1, 18, 3, 0, 18, 0, 0, 1, 1, 1, 0]' : 0.18894}", "{'[3, 0, 2, 0, 6, 2, 1, 1, 18, 3, 0, 18, 0, 0, 1, 1, 1, 0]' : 0.186726}", "{'[3, 0, 2, 0, 6, 2, 1, 1, 18, 3, 0, 18, 0, 0, 1, 1, 1, 0]' : 0.19428}", "{'[3, 0, 2, 0, 6, 2, 1, 1, 18, 3, 0, 18, 0, 0, 1, 1, 1, 0]' : 0.194327}", "{'[3, 0, 2, 0, 6, 2, 1, 1, 18, 3, 0, 18, 0, 0, 1, 1, 1, 0]' : 0.194377}", "{'[3, 0, 2, 0, 6, 2, 1, 1, 18, 3, 0, 18, 0, 0, 1, 1, 1, 0]' : 0.194416}", "{'[3, 0, 2, 0, 6, 2, 1, 1, 18, 3, 0, 18, 0, 0, 1, 1, 1, 0]' : 0.194008}", "{'[3, 0, 2, 0, 6, 2, 1, 1, 18, 3, 0, 18, 0, 0, 1, 1, 1, 0]' : 0.185807}", "{'[3, 0, 2, 0, 6, 2, 1, 1, 18, 3, 0, 18, 0, 0, 1, 1, 1, 0]' : 0.182987}", "{'[3, 0, 2, 0, 6, 2, 1, 1, 18, 3, 0, 18, 0, 0, 1, 1, 1, 0]' : 0.187122}", "{'[3, 0, 2, 0, 6, 2, 1, 1, 18, 3, 0, 18, 0, 0, 1, 1, 1, 0]' : 0.194393}", "{'[3, 0, 2, 0, 6, 2, 1, 1, 18, 3, 0, 18, 0, 0, 1, 1, 1, 0]' : 0.194305}", "{'[3, 0, 2, 0, 6, 2, 1, 1, 18, 3, 0, 18, 0, 0, 1, 1, 1, 0]' : 0.190323}", "{'[3, 0, 2, 0, 6, 2, 1, 1, 18, 3, 0, 18, 0, 0, 1, 1, 1, 0]' : 0.188824}"]
returning from 'run': {'[3, 0, 2, 0, 6, 2, 1, 1, 18, 3, 0, 18, 0, 0, 1, 1, 1, 0]': ([0.193473, 0.193643, 0.193637, 0.193529, 0.193528, 0.193426, 0.19344, 0.193515, 0.19336, 0.190968, 0.193374, 0.193406, 0.193662, 0.193507, 0.193505, 0.189765, 0.18894, 0.186726, 0.19428, 0.194327, 0.194377, 0.194416, 0.194008, 0.185807, 0.182987, 0.187122, 0.194393, 0.194305, 0.190323, 0.188824], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 0, 2, 0, 6, 2, 1, 1, 18, 3, 0, 18, 0, 0, 1, 1, 1, 0]': ([0.193473, 0.193643, 0.193637, 0.193529, 0.193528, 0.193426, 0.19344, 0.193515, 0.19336, 0.190968, 0.193374, 0.193406, 0.193662, 0.193507, 0.193505, 0.189765, 0.18894, 0.186726, 0.19428, 0.194327, 0.194377, 0.194416, 0.194008, 0.185807, 0.182987, 0.187122, 0.194393, 0.194305, 0.190323, 0.188824], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		325
        Multiplications: 	102
        Divisions: 		0
        Logical: 		0
        Reads: 			704
        Writes: 		108
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest36.exe __orio_perftest36.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest36.exe  
Program Test Output: 
{'[6, 5, 0, 6, 6, 3, 0, 1, 24, 0, 0, 16, 0, 2, 0, 0, 0, 0]' : 0.224068}
{'[6, 5, 0, 6, 6, 3, 0, 1, 24, 0, 0, 16, 0, 2, 0, 0, 0, 0]' : 0.224556}
{'[6, 5, 0, 6, 6, 3, 0, 1, 24, 0, 0, 16, 0, 2, 0, 0, 0, 0]' : 0.224918}
{'[6, 5, 0, 6, 6, 3, 0, 1, 24, 0, 0, 16, 0, 2, 0, 0, 0, 0]' : 0.224681}
{'[6, 5, 0, 6, 6, 3, 0, 1, 24, 0, 0, 16, 0, 2, 0, 0, 0, 0]' : 0.224665}
{'[6, 5, 0, 6, 6, 3, 0, 1, 24, 0, 0, 16, 0, 2, 0, 0, 0, 0]' : 0.225098}
{'[6, 5, 0, 6, 6, 3, 0, 1, 24, 0, 0, 16, 0, 2, 0, 0, 0, 0]' : 0.224743}
{'[6, 5, 0, 6, 6, 3, 0, 1, 24, 0, 0, 16, 0, 2, 0, 0, 0, 0]' : 0.225525}
{'[6, 5, 0, 6, 6, 3, 0, 1, 24, 0, 0, 16, 0, 2, 0, 0, 0, 0]' : 0.224541}
{'[6, 5, 0, 6, 6, 3, 0, 1, 24, 0, 0, 16, 0, 2, 0, 0, 0, 0]' : 0.224691}
{'[6, 5, 0, 6, 6, 3, 0, 1, 24, 0, 0, 16, 0, 2, 0, 0, 0, 0]' : 0.224708}
{'[6, 5, 0, 6, 6, 3, 0, 1, 24, 0, 0, 16, 0, 2, 0, 0, 0, 0]' : 0.224924}
{'[6, 5, 0, 6, 6, 3, 0, 1, 24, 0, 0, 16, 0, 2, 0, 0, 0, 0]' : 0.225069}
{'[6, 5, 0, 6, 6, 3, 0, 1, 24, 0, 0, 16, 0, 2, 0, 0, 0, 0]' : 0.224661}
{'[6, 5, 0, 6, 6, 3, 0, 1, 24, 0, 0, 16, 0, 2, 0, 0, 0, 0]' : 0.224987}
{'[6, 5, 0, 6, 6, 3, 0, 1, 24, 0, 0, 16, 0, 2, 0, 0, 0, 0]' : 0.224606}
{'[6, 5, 0, 6, 6, 3, 0, 1, 24, 0, 0, 16, 0, 2, 0, 0, 0, 0]' : 0.224924}
{'[6, 5, 0, 6, 6, 3, 0, 1, 24, 0, 0, 16, 0, 2, 0, 0, 0, 0]' : 0.224739}
{'[6, 5, 0, 6, 6, 3, 0, 1, 24, 0, 0, 16, 0, 2, 0, 0, 0, 0]' : 0.224874}
{'[6, 5, 0, 6, 6, 3, 0, 1, 24, 0, 0, 16, 0, 2, 0, 0, 0, 0]' : 0.224733}
{'[6, 5, 0, 6, 6, 3, 0, 1, 24, 0, 0, 16, 0, 2, 0, 0, 0, 0]' : 0.225729}
{'[6, 5, 0, 6, 6, 3, 0, 1, 24, 0, 0, 16, 0, 2, 0, 0, 0, 0]' : 0.224674}
{'[6, 5, 0, 6, 6, 3, 0, 1, 24, 0, 0, 16, 0, 2, 0, 0, 0, 0]' : 0.224774}
{'[6, 5, 0, 6, 6, 3, 0, 1, 24, 0, 0, 16, 0, 2, 0, 0, 0, 0]' : 0.226981}
{'[6, 5, 0, 6, 6, 3, 0, 1, 24, 0, 0, 16, 0, 2, 0, 0, 0, 0]' : 0.228585}
{'[6, 5, 0, 6, 6, 3, 0, 1, 24, 0, 0, 16, 0, 2, 0, 0, 0, 0]' : 0.222215}
{'[6, 5, 0, 6, 6, 3, 0, 1, 24, 0, 0, 16, 0, 2, 0, 0, 0, 0]' : 0.231582}
{'[6, 5, 0, 6, 6, 3, 0, 1, 24, 0, 0, 16, 0, 2, 0, 0, 0, 0]' : 0.227788}
{'[6, 5, 0, 6, 6, 3, 0, 1, 24, 0, 0, 16, 0, 2, 0, 0, 0, 0]' : 0.2308}
{'[6, 5, 0, 6, 6, 3, 0, 1, 24, 0, 0, 16, 0, 2, 0, 0, 0, 0]' : 0.224927}

out:
 ["{'[6, 5, 0, 6, 6, 3, 0, 1, 24, 0, 0, 16, 0, 2, 0, 0, 0, 0]' : 0.224068}", "{'[6, 5, 0, 6, 6, 3, 0, 1, 24, 0, 0, 16, 0, 2, 0, 0, 0, 0]' : 0.224556}", "{'[6, 5, 0, 6, 6, 3, 0, 1, 24, 0, 0, 16, 0, 2, 0, 0, 0, 0]' : 0.224918}", "{'[6, 5, 0, 6, 6, 3, 0, 1, 24, 0, 0, 16, 0, 2, 0, 0, 0, 0]' : 0.224681}", "{'[6, 5, 0, 6, 6, 3, 0, 1, 24, 0, 0, 16, 0, 2, 0, 0, 0, 0]' : 0.224665}", "{'[6, 5, 0, 6, 6, 3, 0, 1, 24, 0, 0, 16, 0, 2, 0, 0, 0, 0]' : 0.225098}", "{'[6, 5, 0, 6, 6, 3, 0, 1, 24, 0, 0, 16, 0, 2, 0, 0, 0, 0]' : 0.224743}", "{'[6, 5, 0, 6, 6, 3, 0, 1, 24, 0, 0, 16, 0, 2, 0, 0, 0, 0]' : 0.225525}", "{'[6, 5, 0, 6, 6, 3, 0, 1, 24, 0, 0, 16, 0, 2, 0, 0, 0, 0]' : 0.224541}", "{'[6, 5, 0, 6, 6, 3, 0, 1, 24, 0, 0, 16, 0, 2, 0, 0, 0, 0]' : 0.224691}", "{'[6, 5, 0, 6, 6, 3, 0, 1, 24, 0, 0, 16, 0, 2, 0, 0, 0, 0]' : 0.224708}", "{'[6, 5, 0, 6, 6, 3, 0, 1, 24, 0, 0, 16, 0, 2, 0, 0, 0, 0]' : 0.224924}", "{'[6, 5, 0, 6, 6, 3, 0, 1, 24, 0, 0, 16, 0, 2, 0, 0, 0, 0]' : 0.225069}", "{'[6, 5, 0, 6, 6, 3, 0, 1, 24, 0, 0, 16, 0, 2, 0, 0, 0, 0]' : 0.224661}", "{'[6, 5, 0, 6, 6, 3, 0, 1, 24, 0, 0, 16, 0, 2, 0, 0, 0, 0]' : 0.224987}", "{'[6, 5, 0, 6, 6, 3, 0, 1, 24, 0, 0, 16, 0, 2, 0, 0, 0, 0]' : 0.224606}", "{'[6, 5, 0, 6, 6, 3, 0, 1, 24, 0, 0, 16, 0, 2, 0, 0, 0, 0]' : 0.224924}", "{'[6, 5, 0, 6, 6, 3, 0, 1, 24, 0, 0, 16, 0, 2, 0, 0, 0, 0]' : 0.224739}", "{'[6, 5, 0, 6, 6, 3, 0, 1, 24, 0, 0, 16, 0, 2, 0, 0, 0, 0]' : 0.224874}", "{'[6, 5, 0, 6, 6, 3, 0, 1, 24, 0, 0, 16, 0, 2, 0, 0, 0, 0]' : 0.224733}", "{'[6, 5, 0, 6, 6, 3, 0, 1, 24, 0, 0, 16, 0, 2, 0, 0, 0, 0]' : 0.225729}", "{'[6, 5, 0, 6, 6, 3, 0, 1, 24, 0, 0, 16, 0, 2, 0, 0, 0, 0]' : 0.224674}", "{'[6, 5, 0, 6, 6, 3, 0, 1, 24, 0, 0, 16, 0, 2, 0, 0, 0, 0]' : 0.224774}", "{'[6, 5, 0, 6, 6, 3, 0, 1, 24, 0, 0, 16, 0, 2, 0, 0, 0, 0]' : 0.226981}", "{'[6, 5, 0, 6, 6, 3, 0, 1, 24, 0, 0, 16, 0, 2, 0, 0, 0, 0]' : 0.228585}", "{'[6, 5, 0, 6, 6, 3, 0, 1, 24, 0, 0, 16, 0, 2, 0, 0, 0, 0]' : 0.222215}", "{'[6, 5, 0, 6, 6, 3, 0, 1, 24, 0, 0, 16, 0, 2, 0, 0, 0, 0]' : 0.231582}", "{'[6, 5, 0, 6, 6, 3, 0, 1, 24, 0, 0, 16, 0, 2, 0, 0, 0, 0]' : 0.227788}", "{'[6, 5, 0, 6, 6, 3, 0, 1, 24, 0, 0, 16, 0, 2, 0, 0, 0, 0]' : 0.2308}", "{'[6, 5, 0, 6, 6, 3, 0, 1, 24, 0, 0, 16, 0, 2, 0, 0, 0, 0]' : 0.224927}"]
returning from 'run': {'[6, 5, 0, 6, 6, 3, 0, 1, 24, 0, 0, 16, 0, 2, 0, 0, 0, 0]': ([0.224068, 0.224556, 0.224918, 0.224681, 0.224665, 0.225098, 0.224743, 0.225525, 0.224541, 0.224691, 0.224708, 0.224924, 0.225069, 0.224661, 0.224987, 0.224606, 0.224924, 0.224739, 0.224874, 0.224733, 0.225729, 0.224674, 0.224774, 0.226981, 0.228585, 0.222215, 0.231582, 0.227788, 0.2308, 0.224927], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 5, 0, 6, 6, 3, 0, 1, 24, 0, 0, 16, 0, 2, 0, 0, 0, 0]': ([0.224068, 0.224556, 0.224918, 0.224681, 0.224665, 0.225098, 0.224743, 0.225525, 0.224541, 0.224691, 0.224708, 0.224924, 0.225069, 0.224661, 0.224987, 0.224606, 0.224924, 0.224739, 0.224874, 0.224733, 0.225729, 0.224674, 0.224774, 0.226981, 0.228585, 0.222215, 0.231582, 0.227788, 0.2308, 0.224927], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		1915
        Multiplications: 	594
        Divisions: 		0
        Logical: 		0
        Reads: 			3131
        Writes: 		360
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest37.exe __orio_perftest37.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest37.exe  
Program Test Output: 
{'[3, 0, 0, 1, 6, 0, 0, 0, 25, 0, 23, 9, 1, 0, 1, 0, 0, 1]' : 0.135238}
{'[3, 0, 0, 1, 6, 0, 0, 0, 25, 0, 23, 9, 1, 0, 1, 0, 0, 1]' : 0.135247}
{'[3, 0, 0, 1, 6, 0, 0, 0, 25, 0, 23, 9, 1, 0, 1, 0, 0, 1]' : 0.118096}
{'[3, 0, 0, 1, 6, 0, 0, 0, 25, 0, 23, 9, 1, 0, 1, 0, 0, 1]' : 0.113641}
{'[3, 0, 0, 1, 6, 0, 0, 0, 25, 0, 23, 9, 1, 0, 1, 0, 0, 1]' : 0.113598}
{'[3, 0, 0, 1, 6, 0, 0, 0, 25, 0, 23, 9, 1, 0, 1, 0, 0, 1]' : 0.113695}
{'[3, 0, 0, 1, 6, 0, 0, 0, 25, 0, 23, 9, 1, 0, 1, 0, 0, 1]' : 0.113539}
{'[3, 0, 0, 1, 6, 0, 0, 0, 25, 0, 23, 9, 1, 0, 1, 0, 0, 1]' : 0.113821}
{'[3, 0, 0, 1, 6, 0, 0, 0, 25, 0, 23, 9, 1, 0, 1, 0, 0, 1]' : 0.114558}
{'[3, 0, 0, 1, 6, 0, 0, 0, 25, 0, 23, 9, 1, 0, 1, 0, 0, 1]' : 0.113763}
{'[3, 0, 0, 1, 6, 0, 0, 0, 25, 0, 23, 9, 1, 0, 1, 0, 0, 1]' : 0.113886}
{'[3, 0, 0, 1, 6, 0, 0, 0, 25, 0, 23, 9, 1, 0, 1, 0, 0, 1]' : 0.11374}
{'[3, 0, 0, 1, 6, 0, 0, 0, 25, 0, 23, 9, 1, 0, 1, 0, 0, 1]' : 0.113698}
{'[3, 0, 0, 1, 6, 0, 0, 0, 25, 0, 23, 9, 1, 0, 1, 0, 0, 1]' : 0.113725}
{'[3, 0, 0, 1, 6, 0, 0, 0, 25, 0, 23, 9, 1, 0, 1, 0, 0, 1]' : 0.113617}
{'[3, 0, 0, 1, 6, 0, 0, 0, 25, 0, 23, 9, 1, 0, 1, 0, 0, 1]' : 0.113744}
{'[3, 0, 0, 1, 6, 0, 0, 0, 25, 0, 23, 9, 1, 0, 1, 0, 0, 1]' : 0.113969}
{'[3, 0, 0, 1, 6, 0, 0, 0, 25, 0, 23, 9, 1, 0, 1, 0, 0, 1]' : 0.11372}
{'[3, 0, 0, 1, 6, 0, 0, 0, 25, 0, 23, 9, 1, 0, 1, 0, 0, 1]' : 0.11362}
{'[3, 0, 0, 1, 6, 0, 0, 0, 25, 0, 23, 9, 1, 0, 1, 0, 0, 1]' : 0.114009}
{'[3, 0, 0, 1, 6, 0, 0, 0, 25, 0, 23, 9, 1, 0, 1, 0, 0, 1]' : 0.113739}
{'[3, 0, 0, 1, 6, 0, 0, 0, 25, 0, 23, 9, 1, 0, 1, 0, 0, 1]' : 0.114349}
{'[3, 0, 0, 1, 6, 0, 0, 0, 25, 0, 23, 9, 1, 0, 1, 0, 0, 1]' : 0.113569}
{'[3, 0, 0, 1, 6, 0, 0, 0, 25, 0, 23, 9, 1, 0, 1, 0, 0, 1]' : 0.11375}
{'[3, 0, 0, 1, 6, 0, 0, 0, 25, 0, 23, 9, 1, 0, 1, 0, 0, 1]' : 0.113706}
{'[3, 0, 0, 1, 6, 0, 0, 0, 25, 0, 23, 9, 1, 0, 1, 0, 0, 1]' : 0.113677}
{'[3, 0, 0, 1, 6, 0, 0, 0, 25, 0, 23, 9, 1, 0, 1, 0, 0, 1]' : 0.113554}
{'[3, 0, 0, 1, 6, 0, 0, 0, 25, 0, 23, 9, 1, 0, 1, 0, 0, 1]' : 0.113797}
{'[3, 0, 0, 1, 6, 0, 0, 0, 25, 0, 23, 9, 1, 0, 1, 0, 0, 1]' : 0.113706}
{'[3, 0, 0, 1, 6, 0, 0, 0, 25, 0, 23, 9, 1, 0, 1, 0, 0, 1]' : 0.113735}

out:
 ["{'[3, 0, 0, 1, 6, 0, 0, 0, 25, 0, 23, 9, 1, 0, 1, 0, 0, 1]' : 0.135238}", "{'[3, 0, 0, 1, 6, 0, 0, 0, 25, 0, 23, 9, 1, 0, 1, 0, 0, 1]' : 0.135247}", "{'[3, 0, 0, 1, 6, 0, 0, 0, 25, 0, 23, 9, 1, 0, 1, 0, 0, 1]' : 0.118096}", "{'[3, 0, 0, 1, 6, 0, 0, 0, 25, 0, 23, 9, 1, 0, 1, 0, 0, 1]' : 0.113641}", "{'[3, 0, 0, 1, 6, 0, 0, 0, 25, 0, 23, 9, 1, 0, 1, 0, 0, 1]' : 0.113598}", "{'[3, 0, 0, 1, 6, 0, 0, 0, 25, 0, 23, 9, 1, 0, 1, 0, 0, 1]' : 0.113695}", "{'[3, 0, 0, 1, 6, 0, 0, 0, 25, 0, 23, 9, 1, 0, 1, 0, 0, 1]' : 0.113539}", "{'[3, 0, 0, 1, 6, 0, 0, 0, 25, 0, 23, 9, 1, 0, 1, 0, 0, 1]' : 0.113821}", "{'[3, 0, 0, 1, 6, 0, 0, 0, 25, 0, 23, 9, 1, 0, 1, 0, 0, 1]' : 0.114558}", "{'[3, 0, 0, 1, 6, 0, 0, 0, 25, 0, 23, 9, 1, 0, 1, 0, 0, 1]' : 0.113763}", "{'[3, 0, 0, 1, 6, 0, 0, 0, 25, 0, 23, 9, 1, 0, 1, 0, 0, 1]' : 0.113886}", "{'[3, 0, 0, 1, 6, 0, 0, 0, 25, 0, 23, 9, 1, 0, 1, 0, 0, 1]' : 0.11374}", "{'[3, 0, 0, 1, 6, 0, 0, 0, 25, 0, 23, 9, 1, 0, 1, 0, 0, 1]' : 0.113698}", "{'[3, 0, 0, 1, 6, 0, 0, 0, 25, 0, 23, 9, 1, 0, 1, 0, 0, 1]' : 0.113725}", "{'[3, 0, 0, 1, 6, 0, 0, 0, 25, 0, 23, 9, 1, 0, 1, 0, 0, 1]' : 0.113617}", "{'[3, 0, 0, 1, 6, 0, 0, 0, 25, 0, 23, 9, 1, 0, 1, 0, 0, 1]' : 0.113744}", "{'[3, 0, 0, 1, 6, 0, 0, 0, 25, 0, 23, 9, 1, 0, 1, 0, 0, 1]' : 0.113969}", "{'[3, 0, 0, 1, 6, 0, 0, 0, 25, 0, 23, 9, 1, 0, 1, 0, 0, 1]' : 0.11372}", "{'[3, 0, 0, 1, 6, 0, 0, 0, 25, 0, 23, 9, 1, 0, 1, 0, 0, 1]' : 0.11362}", "{'[3, 0, 0, 1, 6, 0, 0, 0, 25, 0, 23, 9, 1, 0, 1, 0, 0, 1]' : 0.114009}", "{'[3, 0, 0, 1, 6, 0, 0, 0, 25, 0, 23, 9, 1, 0, 1, 0, 0, 1]' : 0.113739}", "{'[3, 0, 0, 1, 6, 0, 0, 0, 25, 0, 23, 9, 1, 0, 1, 0, 0, 1]' : 0.114349}", "{'[3, 0, 0, 1, 6, 0, 0, 0, 25, 0, 23, 9, 1, 0, 1, 0, 0, 1]' : 0.113569}", "{'[3, 0, 0, 1, 6, 0, 0, 0, 25, 0, 23, 9, 1, 0, 1, 0, 0, 1]' : 0.11375}", "{'[3, 0, 0, 1, 6, 0, 0, 0, 25, 0, 23, 9, 1, 0, 1, 0, 0, 1]' : 0.113706}", "{'[3, 0, 0, 1, 6, 0, 0, 0, 25, 0, 23, 9, 1, 0, 1, 0, 0, 1]' : 0.113677}", "{'[3, 0, 0, 1, 6, 0, 0, 0, 25, 0, 23, 9, 1, 0, 1, 0, 0, 1]' : 0.113554}", "{'[3, 0, 0, 1, 6, 0, 0, 0, 25, 0, 23, 9, 1, 0, 1, 0, 0, 1]' : 0.113797}", "{'[3, 0, 0, 1, 6, 0, 0, 0, 25, 0, 23, 9, 1, 0, 1, 0, 0, 1]' : 0.113706}", "{'[3, 0, 0, 1, 6, 0, 0, 0, 25, 0, 23, 9, 1, 0, 1, 0, 0, 1]' : 0.113735}"]
returning from 'run': {'[3, 0, 0, 1, 6, 0, 0, 0, 25, 0, 23, 9, 1, 0, 1, 0, 0, 1]': ([0.135238, 0.135247, 0.118096, 0.113641, 0.113598, 0.113695, 0.113539, 0.113821, 0.114558, 0.113763, 0.113886, 0.11374, 0.113698, 0.113725, 0.113617, 0.113744, 0.113969, 0.11372, 0.11362, 0.114009, 0.113739, 0.114349, 0.113569, 0.11375, 0.113706, 0.113677, 0.113554, 0.113797, 0.113706, 0.113735], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 0, 0, 1, 6, 0, 0, 0, 25, 0, 23, 9, 1, 0, 1, 0, 0, 1]': ([0.135238, 0.135247, 0.118096, 0.113641, 0.113598, 0.113695, 0.113539, 0.113821, 0.114558, 0.113763, 0.113886, 0.11374, 0.113698, 0.113725, 0.113617, 0.113744, 0.113969, 0.11372, 0.11362, 0.114009, 0.113739, 0.114349, 0.113569, 0.11375, 0.113706, 0.113677, 0.113554, 0.113797, 0.113706, 0.113735], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	35
        Max loop nest depth: 	4
        Additions: 		4782
        Multiplications: 	1360
        Divisions: 		0
        Logical: 		0
        Reads: 			7355
        Writes: 		795
        Comparisons:		35
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest38.exe __orio_perftest38.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest38.exe  
Program Test Output: 
{'[6, 6, 5, 0, 0, 0, 1, 0, 3, 18, 0, 24, 0, 1, 0, 0, 0, 0]' : 0.171406}
{'[6, 6, 5, 0, 0, 0, 1, 0, 3, 18, 0, 24, 0, 1, 0, 0, 0, 0]' : 0.168908}
{'[6, 6, 5, 0, 0, 0, 1, 0, 3, 18, 0, 24, 0, 1, 0, 0, 0, 0]' : 0.145652}
{'[6, 6, 5, 0, 0, 0, 1, 0, 3, 18, 0, 24, 0, 1, 0, 0, 0, 0]' : 0.144882}
{'[6, 6, 5, 0, 0, 0, 1, 0, 3, 18, 0, 24, 0, 1, 0, 0, 0, 0]' : 0.144959}
{'[6, 6, 5, 0, 0, 0, 1, 0, 3, 18, 0, 24, 0, 1, 0, 0, 0, 0]' : 0.144951}
{'[6, 6, 5, 0, 0, 0, 1, 0, 3, 18, 0, 24, 0, 1, 0, 0, 0, 0]' : 0.144993}
{'[6, 6, 5, 0, 0, 0, 1, 0, 3, 18, 0, 24, 0, 1, 0, 0, 0, 0]' : 0.145717}
{'[6, 6, 5, 0, 0, 0, 1, 0, 3, 18, 0, 24, 0, 1, 0, 0, 0, 0]' : 0.144912}
{'[6, 6, 5, 0, 0, 0, 1, 0, 3, 18, 0, 24, 0, 1, 0, 0, 0, 0]' : 0.145123}
{'[6, 6, 5, 0, 0, 0, 1, 0, 3, 18, 0, 24, 0, 1, 0, 0, 0, 0]' : 0.144896}
{'[6, 6, 5, 0, 0, 0, 1, 0, 3, 18, 0, 24, 0, 1, 0, 0, 0, 0]' : 0.144952}
{'[6, 6, 5, 0, 0, 0, 1, 0, 3, 18, 0, 24, 0, 1, 0, 0, 0, 0]' : 0.144854}
{'[6, 6, 5, 0, 0, 0, 1, 0, 3, 18, 0, 24, 0, 1, 0, 0, 0, 0]' : 0.145155}
{'[6, 6, 5, 0, 0, 0, 1, 0, 3, 18, 0, 24, 0, 1, 0, 0, 0, 0]' : 0.144941}
{'[6, 6, 5, 0, 0, 0, 1, 0, 3, 18, 0, 24, 0, 1, 0, 0, 0, 0]' : 0.145018}
{'[6, 6, 5, 0, 0, 0, 1, 0, 3, 18, 0, 24, 0, 1, 0, 0, 0, 0]' : 0.144866}
{'[6, 6, 5, 0, 0, 0, 1, 0, 3, 18, 0, 24, 0, 1, 0, 0, 0, 0]' : 0.144947}
{'[6, 6, 5, 0, 0, 0, 1, 0, 3, 18, 0, 24, 0, 1, 0, 0, 0, 0]' : 0.145569}
{'[6, 6, 5, 0, 0, 0, 1, 0, 3, 18, 0, 24, 0, 1, 0, 0, 0, 0]' : 0.145014}
{'[6, 6, 5, 0, 0, 0, 1, 0, 3, 18, 0, 24, 0, 1, 0, 0, 0, 0]' : 0.144988}
{'[6, 6, 5, 0, 0, 0, 1, 0, 3, 18, 0, 24, 0, 1, 0, 0, 0, 0]' : 0.144936}
{'[6, 6, 5, 0, 0, 0, 1, 0, 3, 18, 0, 24, 0, 1, 0, 0, 0, 0]' : 0.144961}
{'[6, 6, 5, 0, 0, 0, 1, 0, 3, 18, 0, 24, 0, 1, 0, 0, 0, 0]' : 0.145268}
{'[6, 6, 5, 0, 0, 0, 1, 0, 3, 18, 0, 24, 0, 1, 0, 0, 0, 0]' : 0.14511}
{'[6, 6, 5, 0, 0, 0, 1, 0, 3, 18, 0, 24, 0, 1, 0, 0, 0, 0]' : 0.144943}
{'[6, 6, 5, 0, 0, 0, 1, 0, 3, 18, 0, 24, 0, 1, 0, 0, 0, 0]' : 0.145223}
{'[6, 6, 5, 0, 0, 0, 1, 0, 3, 18, 0, 24, 0, 1, 0, 0, 0, 0]' : 0.144961}
{'[6, 6, 5, 0, 0, 0, 1, 0, 3, 18, 0, 24, 0, 1, 0, 0, 0, 0]' : 0.145647}
{'[6, 6, 5, 0, 0, 0, 1, 0, 3, 18, 0, 24, 0, 1, 0, 0, 0, 0]' : 0.145241}

out:
 ["{'[6, 6, 5, 0, 0, 0, 1, 0, 3, 18, 0, 24, 0, 1, 0, 0, 0, 0]' : 0.171406}", "{'[6, 6, 5, 0, 0, 0, 1, 0, 3, 18, 0, 24, 0, 1, 0, 0, 0, 0]' : 0.168908}", "{'[6, 6, 5, 0, 0, 0, 1, 0, 3, 18, 0, 24, 0, 1, 0, 0, 0, 0]' : 0.145652}", "{'[6, 6, 5, 0, 0, 0, 1, 0, 3, 18, 0, 24, 0, 1, 0, 0, 0, 0]' : 0.144882}", "{'[6, 6, 5, 0, 0, 0, 1, 0, 3, 18, 0, 24, 0, 1, 0, 0, 0, 0]' : 0.144959}", "{'[6, 6, 5, 0, 0, 0, 1, 0, 3, 18, 0, 24, 0, 1, 0, 0, 0, 0]' : 0.144951}", "{'[6, 6, 5, 0, 0, 0, 1, 0, 3, 18, 0, 24, 0, 1, 0, 0, 0, 0]' : 0.144993}", "{'[6, 6, 5, 0, 0, 0, 1, 0, 3, 18, 0, 24, 0, 1, 0, 0, 0, 0]' : 0.145717}", "{'[6, 6, 5, 0, 0, 0, 1, 0, 3, 18, 0, 24, 0, 1, 0, 0, 0, 0]' : 0.144912}", "{'[6, 6, 5, 0, 0, 0, 1, 0, 3, 18, 0, 24, 0, 1, 0, 0, 0, 0]' : 0.145123}", "{'[6, 6, 5, 0, 0, 0, 1, 0, 3, 18, 0, 24, 0, 1, 0, 0, 0, 0]' : 0.144896}", "{'[6, 6, 5, 0, 0, 0, 1, 0, 3, 18, 0, 24, 0, 1, 0, 0, 0, 0]' : 0.144952}", "{'[6, 6, 5, 0, 0, 0, 1, 0, 3, 18, 0, 24, 0, 1, 0, 0, 0, 0]' : 0.144854}", "{'[6, 6, 5, 0, 0, 0, 1, 0, 3, 18, 0, 24, 0, 1, 0, 0, 0, 0]' : 0.145155}", "{'[6, 6, 5, 0, 0, 0, 1, 0, 3, 18, 0, 24, 0, 1, 0, 0, 0, 0]' : 0.144941}", "{'[6, 6, 5, 0, 0, 0, 1, 0, 3, 18, 0, 24, 0, 1, 0, 0, 0, 0]' : 0.145018}", "{'[6, 6, 5, 0, 0, 0, 1, 0, 3, 18, 0, 24, 0, 1, 0, 0, 0, 0]' : 0.144866}", "{'[6, 6, 5, 0, 0, 0, 1, 0, 3, 18, 0, 24, 0, 1, 0, 0, 0, 0]' : 0.144947}", "{'[6, 6, 5, 0, 0, 0, 1, 0, 3, 18, 0, 24, 0, 1, 0, 0, 0, 0]' : 0.145569}", "{'[6, 6, 5, 0, 0, 0, 1, 0, 3, 18, 0, 24, 0, 1, 0, 0, 0, 0]' : 0.145014}", "{'[6, 6, 5, 0, 0, 0, 1, 0, 3, 18, 0, 24, 0, 1, 0, 0, 0, 0]' : 0.144988}", "{'[6, 6, 5, 0, 0, 0, 1, 0, 3, 18, 0, 24, 0, 1, 0, 0, 0, 0]' : 0.144936}", "{'[6, 6, 5, 0, 0, 0, 1, 0, 3, 18, 0, 24, 0, 1, 0, 0, 0, 0]' : 0.144961}", "{'[6, 6, 5, 0, 0, 0, 1, 0, 3, 18, 0, 24, 0, 1, 0, 0, 0, 0]' : 0.145268}", "{'[6, 6, 5, 0, 0, 0, 1, 0, 3, 18, 0, 24, 0, 1, 0, 0, 0, 0]' : 0.14511}", "{'[6, 6, 5, 0, 0, 0, 1, 0, 3, 18, 0, 24, 0, 1, 0, 0, 0, 0]' : 0.144943}", "{'[6, 6, 5, 0, 0, 0, 1, 0, 3, 18, 0, 24, 0, 1, 0, 0, 0, 0]' : 0.145223}", "{'[6, 6, 5, 0, 0, 0, 1, 0, 3, 18, 0, 24, 0, 1, 0, 0, 0, 0]' : 0.144961}", "{'[6, 6, 5, 0, 0, 0, 1, 0, 3, 18, 0, 24, 0, 1, 0, 0, 0, 0]' : 0.145647}", "{'[6, 6, 5, 0, 0, 0, 1, 0, 3, 18, 0, 24, 0, 1, 0, 0, 0, 0]' : 0.145241}"]
returning from 'run': {'[6, 6, 5, 0, 0, 0, 1, 0, 3, 18, 0, 24, 0, 1, 0, 0, 0, 0]': ([0.171406, 0.168908, 0.145652, 0.144882, 0.144959, 0.144951, 0.144993, 0.145717, 0.144912, 0.145123, 0.144896, 0.144952, 0.144854, 0.145155, 0.144941, 0.145018, 0.144866, 0.144947, 0.145569, 0.145014, 0.144988, 0.144936, 0.144961, 0.145268, 0.14511, 0.144943, 0.145223, 0.144961, 0.145647, 0.145241], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 5, 0, 0, 0, 1, 0, 3, 18, 0, 24, 0, 1, 0, 0, 0, 0]': ([0.171406, 0.168908, 0.145652, 0.144882, 0.144959, 0.144951, 0.144993, 0.145717, 0.144912, 0.145123, 0.144896, 0.144952, 0.144854, 0.145155, 0.144941, 0.145018, 0.144866, 0.144947, 0.145569, 0.145014, 0.144988, 0.144936, 0.144961, 0.145268, 0.14511, 0.144943, 0.145223, 0.144961, 0.145647, 0.145241], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	4
        Additions: 		5641
        Multiplications: 	2706
        Divisions: 		0
        Logical: 		0
        Reads: 			10454
        Writes: 		1642
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest39.exe __orio_perftest39.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest39.exe  
Program Test Output: 
{'[0, 5, 5, 6, 0, 0, 0, 1, 27, 0, 9, 28, 2, 0, 0, 1, 1, 1]' : 0.176443}
{'[0, 5, 5, 6, 0, 0, 0, 1, 27, 0, 9, 28, 2, 0, 0, 1, 1, 1]' : 0.176497}
{'[0, 5, 5, 6, 0, 0, 0, 1, 27, 0, 9, 28, 2, 0, 0, 1, 1, 1]' : 0.159143}
{'[0, 5, 5, 6, 0, 0, 0, 1, 27, 0, 9, 28, 2, 0, 0, 1, 1, 1]' : 0.156264}
{'[0, 5, 5, 6, 0, 0, 0, 1, 27, 0, 9, 28, 2, 0, 0, 1, 1, 1]' : 0.156532}
{'[0, 5, 5, 6, 0, 0, 0, 1, 27, 0, 9, 28, 2, 0, 0, 1, 1, 1]' : 0.157093}
{'[0, 5, 5, 6, 0, 0, 0, 1, 27, 0, 9, 28, 2, 0, 0, 1, 1, 1]' : 0.156053}
{'[0, 5, 5, 6, 0, 0, 0, 1, 27, 0, 9, 28, 2, 0, 0, 1, 1, 1]' : 0.155715}
{'[0, 5, 5, 6, 0, 0, 0, 1, 27, 0, 9, 28, 2, 0, 0, 1, 1, 1]' : 0.156526}
{'[0, 5, 5, 6, 0, 0, 0, 1, 27, 0, 9, 28, 2, 0, 0, 1, 1, 1]' : 0.156365}
{'[0, 5, 5, 6, 0, 0, 0, 1, 27, 0, 9, 28, 2, 0, 0, 1, 1, 1]' : 0.155411}
{'[0, 5, 5, 6, 0, 0, 0, 1, 27, 0, 9, 28, 2, 0, 0, 1, 1, 1]' : 0.15698}
{'[0, 5, 5, 6, 0, 0, 0, 1, 27, 0, 9, 28, 2, 0, 0, 1, 1, 1]' : 0.158195}
{'[0, 5, 5, 6, 0, 0, 0, 1, 27, 0, 9, 28, 2, 0, 0, 1, 1, 1]' : 0.15558}
{'[0, 5, 5, 6, 0, 0, 0, 1, 27, 0, 9, 28, 2, 0, 0, 1, 1, 1]' : 0.155261}
{'[0, 5, 5, 6, 0, 0, 0, 1, 27, 0, 9, 28, 2, 0, 0, 1, 1, 1]' : 0.156139}
{'[0, 5, 5, 6, 0, 0, 0, 1, 27, 0, 9, 28, 2, 0, 0, 1, 1, 1]' : 0.15545}
{'[0, 5, 5, 6, 0, 0, 0, 1, 27, 0, 9, 28, 2, 0, 0, 1, 1, 1]' : 0.156746}
{'[0, 5, 5, 6, 0, 0, 0, 1, 27, 0, 9, 28, 2, 0, 0, 1, 1, 1]' : 0.15613}
{'[0, 5, 5, 6, 0, 0, 0, 1, 27, 0, 9, 28, 2, 0, 0, 1, 1, 1]' : 0.156826}
{'[0, 5, 5, 6, 0, 0, 0, 1, 27, 0, 9, 28, 2, 0, 0, 1, 1, 1]' : 0.156546}
{'[0, 5, 5, 6, 0, 0, 0, 1, 27, 0, 9, 28, 2, 0, 0, 1, 1, 1]' : 0.156458}
{'[0, 5, 5, 6, 0, 0, 0, 1, 27, 0, 9, 28, 2, 0, 0, 1, 1, 1]' : 0.156365}
{'[0, 5, 5, 6, 0, 0, 0, 1, 27, 0, 9, 28, 2, 0, 0, 1, 1, 1]' : 0.156335}
{'[0, 5, 5, 6, 0, 0, 0, 1, 27, 0, 9, 28, 2, 0, 0, 1, 1, 1]' : 0.157207}
{'[0, 5, 5, 6, 0, 0, 0, 1, 27, 0, 9, 28, 2, 0, 0, 1, 1, 1]' : 0.156997}
{'[0, 5, 5, 6, 0, 0, 0, 1, 27, 0, 9, 28, 2, 0, 0, 1, 1, 1]' : 0.155534}
{'[0, 5, 5, 6, 0, 0, 0, 1, 27, 0, 9, 28, 2, 0, 0, 1, 1, 1]' : 0.155675}
{'[0, 5, 5, 6, 0, 0, 0, 1, 27, 0, 9, 28, 2, 0, 0, 1, 1, 1]' : 0.156577}
{'[0, 5, 5, 6, 0, 0, 0, 1, 27, 0, 9, 28, 2, 0, 0, 1, 1, 1]' : 0.155999}

out:
 ["{'[0, 5, 5, 6, 0, 0, 0, 1, 27, 0, 9, 28, 2, 0, 0, 1, 1, 1]' : 0.176443}", "{'[0, 5, 5, 6, 0, 0, 0, 1, 27, 0, 9, 28, 2, 0, 0, 1, 1, 1]' : 0.176497}", "{'[0, 5, 5, 6, 0, 0, 0, 1, 27, 0, 9, 28, 2, 0, 0, 1, 1, 1]' : 0.159143}", "{'[0, 5, 5, 6, 0, 0, 0, 1, 27, 0, 9, 28, 2, 0, 0, 1, 1, 1]' : 0.156264}", "{'[0, 5, 5, 6, 0, 0, 0, 1, 27, 0, 9, 28, 2, 0, 0, 1, 1, 1]' : 0.156532}", "{'[0, 5, 5, 6, 0, 0, 0, 1, 27, 0, 9, 28, 2, 0, 0, 1, 1, 1]' : 0.157093}", "{'[0, 5, 5, 6, 0, 0, 0, 1, 27, 0, 9, 28, 2, 0, 0, 1, 1, 1]' : 0.156053}", "{'[0, 5, 5, 6, 0, 0, 0, 1, 27, 0, 9, 28, 2, 0, 0, 1, 1, 1]' : 0.155715}", "{'[0, 5, 5, 6, 0, 0, 0, 1, 27, 0, 9, 28, 2, 0, 0, 1, 1, 1]' : 0.156526}", "{'[0, 5, 5, 6, 0, 0, 0, 1, 27, 0, 9, 28, 2, 0, 0, 1, 1, 1]' : 0.156365}", "{'[0, 5, 5, 6, 0, 0, 0, 1, 27, 0, 9, 28, 2, 0, 0, 1, 1, 1]' : 0.155411}", "{'[0, 5, 5, 6, 0, 0, 0, 1, 27, 0, 9, 28, 2, 0, 0, 1, 1, 1]' : 0.15698}", "{'[0, 5, 5, 6, 0, 0, 0, 1, 27, 0, 9, 28, 2, 0, 0, 1, 1, 1]' : 0.158195}", "{'[0, 5, 5, 6, 0, 0, 0, 1, 27, 0, 9, 28, 2, 0, 0, 1, 1, 1]' : 0.15558}", "{'[0, 5, 5, 6, 0, 0, 0, 1, 27, 0, 9, 28, 2, 0, 0, 1, 1, 1]' : 0.155261}", "{'[0, 5, 5, 6, 0, 0, 0, 1, 27, 0, 9, 28, 2, 0, 0, 1, 1, 1]' : 0.156139}", "{'[0, 5, 5, 6, 0, 0, 0, 1, 27, 0, 9, 28, 2, 0, 0, 1, 1, 1]' : 0.15545}", "{'[0, 5, 5, 6, 0, 0, 0, 1, 27, 0, 9, 28, 2, 0, 0, 1, 1, 1]' : 0.156746}", "{'[0, 5, 5, 6, 0, 0, 0, 1, 27, 0, 9, 28, 2, 0, 0, 1, 1, 1]' : 0.15613}", "{'[0, 5, 5, 6, 0, 0, 0, 1, 27, 0, 9, 28, 2, 0, 0, 1, 1, 1]' : 0.156826}", "{'[0, 5, 5, 6, 0, 0, 0, 1, 27, 0, 9, 28, 2, 0, 0, 1, 1, 1]' : 0.156546}", "{'[0, 5, 5, 6, 0, 0, 0, 1, 27, 0, 9, 28, 2, 0, 0, 1, 1, 1]' : 0.156458}", "{'[0, 5, 5, 6, 0, 0, 0, 1, 27, 0, 9, 28, 2, 0, 0, 1, 1, 1]' : 0.156365}", "{'[0, 5, 5, 6, 0, 0, 0, 1, 27, 0, 9, 28, 2, 0, 0, 1, 1, 1]' : 0.156335}", "{'[0, 5, 5, 6, 0, 0, 0, 1, 27, 0, 9, 28, 2, 0, 0, 1, 1, 1]' : 0.157207}", "{'[0, 5, 5, 6, 0, 0, 0, 1, 27, 0, 9, 28, 2, 0, 0, 1, 1, 1]' : 0.156997}", "{'[0, 5, 5, 6, 0, 0, 0, 1, 27, 0, 9, 28, 2, 0, 0, 1, 1, 1]' : 0.155534}", "{'[0, 5, 5, 6, 0, 0, 0, 1, 27, 0, 9, 28, 2, 0, 0, 1, 1, 1]' : 0.155675}", "{'[0, 5, 5, 6, 0, 0, 0, 1, 27, 0, 9, 28, 2, 0, 0, 1, 1, 1]' : 0.156577}", "{'[0, 5, 5, 6, 0, 0, 0, 1, 27, 0, 9, 28, 2, 0, 0, 1, 1, 1]' : 0.155999}"]
returning from 'run': {'[0, 5, 5, 6, 0, 0, 0, 1, 27, 0, 9, 28, 2, 0, 0, 1, 1, 1]': ([0.176443, 0.176497, 0.159143, 0.156264, 0.156532, 0.157093, 0.156053, 0.155715, 0.156526, 0.156365, 0.155411, 0.15698, 0.158195, 0.15558, 0.155261, 0.156139, 0.15545, 0.156746, 0.15613, 0.156826, 0.156546, 0.156458, 0.156365, 0.156335, 0.157207, 0.156997, 0.155534, 0.155675, 0.156577, 0.155999], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 5, 5, 6, 0, 0, 0, 1, 27, 0, 9, 28, 2, 0, 0, 1, 1, 1]': ([0.176443, 0.176497, 0.159143, 0.156264, 0.156532, 0.157093, 0.156053, 0.155715, 0.156526, 0.156365, 0.155411, 0.15698, 0.158195, 0.15558, 0.155261, 0.156139, 0.15545, 0.156746, 0.15613, 0.156826, 0.156546, 0.156458, 0.156365, 0.156335, 0.157207, 0.156997, 0.155534, 0.155675, 0.156577, 0.155999], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		3546
        Multiplications: 	1056
        Divisions: 		0
        Logical: 		0
        Reads: 			5420
        Writes: 		586
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest40.exe __orio_perftest40.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest40.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest40.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest40.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest40.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	5
        Additions: 		493
        Multiplications: 	216
        Divisions: 		0
        Logical: 		0
        Reads: 			1057
        Writes: 		216
        Comparisons:		16
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest41.exe __orio_perftest41.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest41.exe  
Program Test Output: 
{'[4, 0, 5, 4, 0, 0, 1, 0, 20, 2, 0, 0, 1, 1, 0, 1, 1, 0]' : 0.101209}
{'[4, 0, 5, 4, 0, 0, 1, 0, 20, 2, 0, 0, 1, 1, 0, 1, 1, 0]' : 0.101024}
{'[4, 0, 5, 4, 0, 0, 1, 0, 20, 2, 0, 0, 1, 1, 0, 1, 1, 0]' : 0.100935}
{'[4, 0, 5, 4, 0, 0, 1, 0, 20, 2, 0, 0, 1, 1, 0, 1, 1, 0]' : 0.100934}
{'[4, 0, 5, 4, 0, 0, 1, 0, 20, 2, 0, 0, 1, 1, 0, 1, 1, 0]' : 0.100977}
{'[4, 0, 5, 4, 0, 0, 1, 0, 20, 2, 0, 0, 1, 1, 0, 1, 1, 0]' : 0.102133}
{'[4, 0, 5, 4, 0, 0, 1, 0, 20, 2, 0, 0, 1, 1, 0, 1, 1, 0]' : 0.101095}
{'[4, 0, 5, 4, 0, 0, 1, 0, 20, 2, 0, 0, 1, 1, 0, 1, 1, 0]' : 0.100896}
{'[4, 0, 5, 4, 0, 0, 1, 0, 20, 2, 0, 0, 1, 1, 0, 1, 1, 0]' : 0.100992}
{'[4, 0, 5, 4, 0, 0, 1, 0, 20, 2, 0, 0, 1, 1, 0, 1, 1, 0]' : 0.101277}
{'[4, 0, 5, 4, 0, 0, 1, 0, 20, 2, 0, 0, 1, 1, 0, 1, 1, 0]' : 0.100204}
{'[4, 0, 5, 4, 0, 0, 1, 0, 20, 2, 0, 0, 1, 1, 0, 1, 1, 0]' : 0.100251}
{'[4, 0, 5, 4, 0, 0, 1, 0, 20, 2, 0, 0, 1, 1, 0, 1, 1, 0]' : 0.100983}
{'[4, 0, 5, 4, 0, 0, 1, 0, 20, 2, 0, 0, 1, 1, 0, 1, 1, 0]' : 0.100962}
{'[4, 0, 5, 4, 0, 0, 1, 0, 20, 2, 0, 0, 1, 1, 0, 1, 1, 0]' : 0.100943}
{'[4, 0, 5, 4, 0, 0, 1, 0, 20, 2, 0, 0, 1, 1, 0, 1, 1, 0]' : 0.101884}
{'[4, 0, 5, 4, 0, 0, 1, 0, 20, 2, 0, 0, 1, 1, 0, 1, 1, 0]' : 0.102575}
{'[4, 0, 5, 4, 0, 0, 1, 0, 20, 2, 0, 0, 1, 1, 0, 1, 1, 0]' : 0.104002}
{'[4, 0, 5, 4, 0, 0, 1, 0, 20, 2, 0, 0, 1, 1, 0, 1, 1, 0]' : 0.107679}
{'[4, 0, 5, 4, 0, 0, 1, 0, 20, 2, 0, 0, 1, 1, 0, 1, 1, 0]' : 0.103892}
{'[4, 0, 5, 4, 0, 0, 1, 0, 20, 2, 0, 0, 1, 1, 0, 1, 1, 0]' : 0.103782}
{'[4, 0, 5, 4, 0, 0, 1, 0, 20, 2, 0, 0, 1, 1, 0, 1, 1, 0]' : 0.100843}
{'[4, 0, 5, 4, 0, 0, 1, 0, 20, 2, 0, 0, 1, 1, 0, 1, 1, 0]' : 0.100736}
{'[4, 0, 5, 4, 0, 0, 1, 0, 20, 2, 0, 0, 1, 1, 0, 1, 1, 0]' : 0.100925}
{'[4, 0, 5, 4, 0, 0, 1, 0, 20, 2, 0, 0, 1, 1, 0, 1, 1, 0]' : 0.101209}
{'[4, 0, 5, 4, 0, 0, 1, 0, 20, 2, 0, 0, 1, 1, 0, 1, 1, 0]' : 0.102089}
{'[4, 0, 5, 4, 0, 0, 1, 0, 20, 2, 0, 0, 1, 1, 0, 1, 1, 0]' : 0.101631}
{'[4, 0, 5, 4, 0, 0, 1, 0, 20, 2, 0, 0, 1, 1, 0, 1, 1, 0]' : 0.103616}
{'[4, 0, 5, 4, 0, 0, 1, 0, 20, 2, 0, 0, 1, 1, 0, 1, 1, 0]' : 0.101264}
{'[4, 0, 5, 4, 0, 0, 1, 0, 20, 2, 0, 0, 1, 1, 0, 1, 1, 0]' : 0.101212}

out:
 ["{'[4, 0, 5, 4, 0, 0, 1, 0, 20, 2, 0, 0, 1, 1, 0, 1, 1, 0]' : 0.101209}", "{'[4, 0, 5, 4, 0, 0, 1, 0, 20, 2, 0, 0, 1, 1, 0, 1, 1, 0]' : 0.101024}", "{'[4, 0, 5, 4, 0, 0, 1, 0, 20, 2, 0, 0, 1, 1, 0, 1, 1, 0]' : 0.100935}", "{'[4, 0, 5, 4, 0, 0, 1, 0, 20, 2, 0, 0, 1, 1, 0, 1, 1, 0]' : 0.100934}", "{'[4, 0, 5, 4, 0, 0, 1, 0, 20, 2, 0, 0, 1, 1, 0, 1, 1, 0]' : 0.100977}", "{'[4, 0, 5, 4, 0, 0, 1, 0, 20, 2, 0, 0, 1, 1, 0, 1, 1, 0]' : 0.102133}", "{'[4, 0, 5, 4, 0, 0, 1, 0, 20, 2, 0, 0, 1, 1, 0, 1, 1, 0]' : 0.101095}", "{'[4, 0, 5, 4, 0, 0, 1, 0, 20, 2, 0, 0, 1, 1, 0, 1, 1, 0]' : 0.100896}", "{'[4, 0, 5, 4, 0, 0, 1, 0, 20, 2, 0, 0, 1, 1, 0, 1, 1, 0]' : 0.100992}", "{'[4, 0, 5, 4, 0, 0, 1, 0, 20, 2, 0, 0, 1, 1, 0, 1, 1, 0]' : 0.101277}", "{'[4, 0, 5, 4, 0, 0, 1, 0, 20, 2, 0, 0, 1, 1, 0, 1, 1, 0]' : 0.100204}", "{'[4, 0, 5, 4, 0, 0, 1, 0, 20, 2, 0, 0, 1, 1, 0, 1, 1, 0]' : 0.100251}", "{'[4, 0, 5, 4, 0, 0, 1, 0, 20, 2, 0, 0, 1, 1, 0, 1, 1, 0]' : 0.100983}", "{'[4, 0, 5, 4, 0, 0, 1, 0, 20, 2, 0, 0, 1, 1, 0, 1, 1, 0]' : 0.100962}", "{'[4, 0, 5, 4, 0, 0, 1, 0, 20, 2, 0, 0, 1, 1, 0, 1, 1, 0]' : 0.100943}", "{'[4, 0, 5, 4, 0, 0, 1, 0, 20, 2, 0, 0, 1, 1, 0, 1, 1, 0]' : 0.101884}", "{'[4, 0, 5, 4, 0, 0, 1, 0, 20, 2, 0, 0, 1, 1, 0, 1, 1, 0]' : 0.102575}", "{'[4, 0, 5, 4, 0, 0, 1, 0, 20, 2, 0, 0, 1, 1, 0, 1, 1, 0]' : 0.104002}", "{'[4, 0, 5, 4, 0, 0, 1, 0, 20, 2, 0, 0, 1, 1, 0, 1, 1, 0]' : 0.107679}", "{'[4, 0, 5, 4, 0, 0, 1, 0, 20, 2, 0, 0, 1, 1, 0, 1, 1, 0]' : 0.103892}", "{'[4, 0, 5, 4, 0, 0, 1, 0, 20, 2, 0, 0, 1, 1, 0, 1, 1, 0]' : 0.103782}", "{'[4, 0, 5, 4, 0, 0, 1, 0, 20, 2, 0, 0, 1, 1, 0, 1, 1, 0]' : 0.100843}", "{'[4, 0, 5, 4, 0, 0, 1, 0, 20, 2, 0, 0, 1, 1, 0, 1, 1, 0]' : 0.100736}", "{'[4, 0, 5, 4, 0, 0, 1, 0, 20, 2, 0, 0, 1, 1, 0, 1, 1, 0]' : 0.100925}", "{'[4, 0, 5, 4, 0, 0, 1, 0, 20, 2, 0, 0, 1, 1, 0, 1, 1, 0]' : 0.101209}", "{'[4, 0, 5, 4, 0, 0, 1, 0, 20, 2, 0, 0, 1, 1, 0, 1, 1, 0]' : 0.102089}", "{'[4, 0, 5, 4, 0, 0, 1, 0, 20, 2, 0, 0, 1, 1, 0, 1, 1, 0]' : 0.101631}", "{'[4, 0, 5, 4, 0, 0, 1, 0, 20, 2, 0, 0, 1, 1, 0, 1, 1, 0]' : 0.103616}", "{'[4, 0, 5, 4, 0, 0, 1, 0, 20, 2, 0, 0, 1, 1, 0, 1, 1, 0]' : 0.101264}", "{'[4, 0, 5, 4, 0, 0, 1, 0, 20, 2, 0, 0, 1, 1, 0, 1, 1, 0]' : 0.101212}"]
returning from 'run': {'[4, 0, 5, 4, 0, 0, 1, 0, 20, 2, 0, 0, 1, 1, 0, 1, 1, 0]': ([0.101209, 0.101024, 0.100935, 0.100934, 0.100977, 0.102133, 0.101095, 0.100896, 0.100992, 0.101277, 0.100204, 0.100251, 0.100983, 0.100962, 0.100943, 0.101884, 0.102575, 0.104002, 0.107679, 0.103892, 0.103782, 0.100843, 0.100736, 0.100925, 0.101209, 0.102089, 0.101631, 0.103616, 0.101264, 0.101212], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 0, 5, 4, 0, 0, 1, 0, 20, 2, 0, 0, 1, 1, 0, 1, 1, 0]': ([0.101209, 0.101024, 0.100935, 0.100934, 0.100977, 0.102133, 0.101095, 0.100896, 0.100992, 0.101277, 0.100204, 0.100251, 0.100983, 0.100962, 0.100943, 0.101884, 0.102575, 0.104002, 0.107679, 0.103892, 0.103782, 0.100843, 0.100736, 0.100925, 0.101209, 0.102089, 0.101631, 0.103616, 0.101264, 0.101212], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	6
        Additions: 		456
        Multiplications: 	124
        Divisions: 		0
        Logical: 		0
        Reads: 			944
        Writes: 		195
        Comparisons:		16
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest42.exe __orio_perftest42.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest42.exe  
Program Test Output: 
{'[3, 4, 1, 4, 6, 6, 1, 1, 25, 0, 29, 29, 0, 0, 0, 1, 0, 1]' : 0.416199}
{'[3, 4, 1, 4, 6, 6, 1, 1, 25, 0, 29, 29, 0, 0, 0, 1, 0, 1]' : 0.360198}
{'[3, 4, 1, 4, 6, 6, 1, 1, 25, 0, 29, 29, 0, 0, 0, 1, 0, 1]' : 0.363247}
{'[3, 4, 1, 4, 6, 6, 1, 1, 25, 0, 29, 29, 0, 0, 0, 1, 0, 1]' : 0.368234}
{'[3, 4, 1, 4, 6, 6, 1, 1, 25, 0, 29, 29, 0, 0, 0, 1, 0, 1]' : 0.368359}
{'[3, 4, 1, 4, 6, 6, 1, 1, 25, 0, 29, 29, 0, 0, 0, 1, 0, 1]' : 0.368222}
{'[3, 4, 1, 4, 6, 6, 1, 1, 25, 0, 29, 29, 0, 0, 0, 1, 0, 1]' : 0.368235}
{'[3, 4, 1, 4, 6, 6, 1, 1, 25, 0, 29, 29, 0, 0, 0, 1, 0, 1]' : 0.368519}
{'[3, 4, 1, 4, 6, 6, 1, 1, 25, 0, 29, 29, 0, 0, 0, 1, 0, 1]' : 0.368164}
{'[3, 4, 1, 4, 6, 6, 1, 1, 25, 0, 29, 29, 0, 0, 0, 1, 0, 1]' : 0.368319}
{'[3, 4, 1, 4, 6, 6, 1, 1, 25, 0, 29, 29, 0, 0, 0, 1, 0, 1]' : 0.368423}
{'[3, 4, 1, 4, 6, 6, 1, 1, 25, 0, 29, 29, 0, 0, 0, 1, 0, 1]' : 0.360572}
{'[3, 4, 1, 4, 6, 6, 1, 1, 25, 0, 29, 29, 0, 0, 0, 1, 0, 1]' : 0.3682}
{'[3, 4, 1, 4, 6, 6, 1, 1, 25, 0, 29, 29, 0, 0, 0, 1, 0, 1]' : 0.368218}
{'[3, 4, 1, 4, 6, 6, 1, 1, 25, 0, 29, 29, 0, 0, 0, 1, 0, 1]' : 0.368227}
{'[3, 4, 1, 4, 6, 6, 1, 1, 25, 0, 29, 29, 0, 0, 0, 1, 0, 1]' : 0.368428}
{'[3, 4, 1, 4, 6, 6, 1, 1, 25, 0, 29, 29, 0, 0, 0, 1, 0, 1]' : 0.368218}
{'[3, 4, 1, 4, 6, 6, 1, 1, 25, 0, 29, 29, 0, 0, 0, 1, 0, 1]' : 0.368158}
{'[3, 4, 1, 4, 6, 6, 1, 1, 25, 0, 29, 29, 0, 0, 0, 1, 0, 1]' : 0.368177}
{'[3, 4, 1, 4, 6, 6, 1, 1, 25, 0, 29, 29, 0, 0, 0, 1, 0, 1]' : 0.368186}
{'[3, 4, 1, 4, 6, 6, 1, 1, 25, 0, 29, 29, 0, 0, 0, 1, 0, 1]' : 0.368312}
{'[3, 4, 1, 4, 6, 6, 1, 1, 25, 0, 29, 29, 0, 0, 0, 1, 0, 1]' : 0.368164}
{'[3, 4, 1, 4, 6, 6, 1, 1, 25, 0, 29, 29, 0, 0, 0, 1, 0, 1]' : 0.366299}
{'[3, 4, 1, 4, 6, 6, 1, 1, 25, 0, 29, 29, 0, 0, 0, 1, 0, 1]' : 0.368158}
{'[3, 4, 1, 4, 6, 6, 1, 1, 25, 0, 29, 29, 0, 0, 0, 1, 0, 1]' : 0.368239}
{'[3, 4, 1, 4, 6, 6, 1, 1, 25, 0, 29, 29, 0, 0, 0, 1, 0, 1]' : 0.36816}
{'[3, 4, 1, 4, 6, 6, 1, 1, 25, 0, 29, 29, 0, 0, 0, 1, 0, 1]' : 0.368361}
{'[3, 4, 1, 4, 6, 6, 1, 1, 25, 0, 29, 29, 0, 0, 0, 1, 0, 1]' : 0.368194}
{'[3, 4, 1, 4, 6, 6, 1, 1, 25, 0, 29, 29, 0, 0, 0, 1, 0, 1]' : 0.368204}
{'[3, 4, 1, 4, 6, 6, 1, 1, 25, 0, 29, 29, 0, 0, 0, 1, 0, 1]' : 0.368194}

out:
 ["{'[3, 4, 1, 4, 6, 6, 1, 1, 25, 0, 29, 29, 0, 0, 0, 1, 0, 1]' : 0.416199}", "{'[3, 4, 1, 4, 6, 6, 1, 1, 25, 0, 29, 29, 0, 0, 0, 1, 0, 1]' : 0.360198}", "{'[3, 4, 1, 4, 6, 6, 1, 1, 25, 0, 29, 29, 0, 0, 0, 1, 0, 1]' : 0.363247}", "{'[3, 4, 1, 4, 6, 6, 1, 1, 25, 0, 29, 29, 0, 0, 0, 1, 0, 1]' : 0.368234}", "{'[3, 4, 1, 4, 6, 6, 1, 1, 25, 0, 29, 29, 0, 0, 0, 1, 0, 1]' : 0.368359}", "{'[3, 4, 1, 4, 6, 6, 1, 1, 25, 0, 29, 29, 0, 0, 0, 1, 0, 1]' : 0.368222}", "{'[3, 4, 1, 4, 6, 6, 1, 1, 25, 0, 29, 29, 0, 0, 0, 1, 0, 1]' : 0.368235}", "{'[3, 4, 1, 4, 6, 6, 1, 1, 25, 0, 29, 29, 0, 0, 0, 1, 0, 1]' : 0.368519}", "{'[3, 4, 1, 4, 6, 6, 1, 1, 25, 0, 29, 29, 0, 0, 0, 1, 0, 1]' : 0.368164}", "{'[3, 4, 1, 4, 6, 6, 1, 1, 25, 0, 29, 29, 0, 0, 0, 1, 0, 1]' : 0.368319}", "{'[3, 4, 1, 4, 6, 6, 1, 1, 25, 0, 29, 29, 0, 0, 0, 1, 0, 1]' : 0.368423}", "{'[3, 4, 1, 4, 6, 6, 1, 1, 25, 0, 29, 29, 0, 0, 0, 1, 0, 1]' : 0.360572}", "{'[3, 4, 1, 4, 6, 6, 1, 1, 25, 0, 29, 29, 0, 0, 0, 1, 0, 1]' : 0.3682}", "{'[3, 4, 1, 4, 6, 6, 1, 1, 25, 0, 29, 29, 0, 0, 0, 1, 0, 1]' : 0.368218}", "{'[3, 4, 1, 4, 6, 6, 1, 1, 25, 0, 29, 29, 0, 0, 0, 1, 0, 1]' : 0.368227}", "{'[3, 4, 1, 4, 6, 6, 1, 1, 25, 0, 29, 29, 0, 0, 0, 1, 0, 1]' : 0.368428}", "{'[3, 4, 1, 4, 6, 6, 1, 1, 25, 0, 29, 29, 0, 0, 0, 1, 0, 1]' : 0.368218}", "{'[3, 4, 1, 4, 6, 6, 1, 1, 25, 0, 29, 29, 0, 0, 0, 1, 0, 1]' : 0.368158}", "{'[3, 4, 1, 4, 6, 6, 1, 1, 25, 0, 29, 29, 0, 0, 0, 1, 0, 1]' : 0.368177}", "{'[3, 4, 1, 4, 6, 6, 1, 1, 25, 0, 29, 29, 0, 0, 0, 1, 0, 1]' : 0.368186}", "{'[3, 4, 1, 4, 6, 6, 1, 1, 25, 0, 29, 29, 0, 0, 0, 1, 0, 1]' : 0.368312}", "{'[3, 4, 1, 4, 6, 6, 1, 1, 25, 0, 29, 29, 0, 0, 0, 1, 0, 1]' : 0.368164}", "{'[3, 4, 1, 4, 6, 6, 1, 1, 25, 0, 29, 29, 0, 0, 0, 1, 0, 1]' : 0.366299}", "{'[3, 4, 1, 4, 6, 6, 1, 1, 25, 0, 29, 29, 0, 0, 0, 1, 0, 1]' : 0.368158}", "{'[3, 4, 1, 4, 6, 6, 1, 1, 25, 0, 29, 29, 0, 0, 0, 1, 0, 1]' : 0.368239}", "{'[3, 4, 1, 4, 6, 6, 1, 1, 25, 0, 29, 29, 0, 0, 0, 1, 0, 1]' : 0.36816}", "{'[3, 4, 1, 4, 6, 6, 1, 1, 25, 0, 29, 29, 0, 0, 0, 1, 0, 1]' : 0.368361}", "{'[3, 4, 1, 4, 6, 6, 1, 1, 25, 0, 29, 29, 0, 0, 0, 1, 0, 1]' : 0.368194}", "{'[3, 4, 1, 4, 6, 6, 1, 1, 25, 0, 29, 29, 0, 0, 0, 1, 0, 1]' : 0.368204}", "{'[3, 4, 1, 4, 6, 6, 1, 1, 25, 0, 29, 29, 0, 0, 0, 1, 0, 1]' : 0.368194}"]
returning from 'run': {'[3, 4, 1, 4, 6, 6, 1, 1, 25, 0, 29, 29, 0, 0, 0, 1, 0, 1]': ([0.416199, 0.360198, 0.363247, 0.368234, 0.368359, 0.368222, 0.368235, 0.368519, 0.368164, 0.368319, 0.368423, 0.360572, 0.3682, 0.368218, 0.368227, 0.368428, 0.368218, 0.368158, 0.368177, 0.368186, 0.368312, 0.368164, 0.366299, 0.368158, 0.368239, 0.36816, 0.368361, 0.368194, 0.368204, 0.368194], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 4, 1, 4, 6, 6, 1, 1, 25, 0, 29, 29, 0, 0, 0, 1, 0, 1]': ([0.416199, 0.360198, 0.363247, 0.368234, 0.368359, 0.368222, 0.368235, 0.368519, 0.368164, 0.368319, 0.368423, 0.360572, 0.3682, 0.368218, 0.368227, 0.368428, 0.368218, 0.368158, 0.368177, 0.368186, 0.368312, 0.368164, 0.366299, 0.368158, 0.368239, 0.36816, 0.368361, 0.368194, 0.368204, 0.368194], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		400
        Multiplications: 	162
        Divisions: 		0
        Logical: 		0
        Reads: 			918
        Writes: 		117
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest43.exe __orio_perftest43.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest43.exe  
Program Test Output: 
{'[0, 1, 3, 1, 0, 2, 0, 0, 2, 0, 16, 29, 0, 2, 0, 0, 0, 1]' : 0.184046}
{'[0, 1, 3, 1, 0, 2, 0, 0, 2, 0, 16, 29, 0, 2, 0, 0, 0, 1]' : 0.182926}
{'[0, 1, 3, 1, 0, 2, 0, 0, 2, 0, 16, 29, 0, 2, 0, 0, 0, 1]' : 0.177563}
{'[0, 1, 3, 1, 0, 2, 0, 0, 2, 0, 16, 29, 0, 2, 0, 0, 0, 1]' : 0.173309}
{'[0, 1, 3, 1, 0, 2, 0, 0, 2, 0, 16, 29, 0, 2, 0, 0, 0, 1]' : 0.173221}
{'[0, 1, 3, 1, 0, 2, 0, 0, 2, 0, 16, 29, 0, 2, 0, 0, 0, 1]' : 0.180348}
{'[0, 1, 3, 1, 0, 2, 0, 0, 2, 0, 16, 29, 0, 2, 0, 0, 0, 1]' : 0.183809}
{'[0, 1, 3, 1, 0, 2, 0, 0, 2, 0, 16, 29, 0, 2, 0, 0, 0, 1]' : 0.183415}
{'[0, 1, 3, 1, 0, 2, 0, 0, 2, 0, 16, 29, 0, 2, 0, 0, 0, 1]' : 0.183562}
{'[0, 1, 3, 1, 0, 2, 0, 0, 2, 0, 16, 29, 0, 2, 0, 0, 0, 1]' : 0.179188}
{'[0, 1, 3, 1, 0, 2, 0, 0, 2, 0, 16, 29, 0, 2, 0, 0, 0, 1]' : 0.179705}
{'[0, 1, 3, 1, 0, 2, 0, 0, 2, 0, 16, 29, 0, 2, 0, 0, 0, 1]' : 0.183508}
{'[0, 1, 3, 1, 0, 2, 0, 0, 2, 0, 16, 29, 0, 2, 0, 0, 0, 1]' : 0.178835}
{'[0, 1, 3, 1, 0, 2, 0, 0, 2, 0, 16, 29, 0, 2, 0, 0, 0, 1]' : 0.180903}
{'[0, 1, 3, 1, 0, 2, 0, 0, 2, 0, 16, 29, 0, 2, 0, 0, 0, 1]' : 0.183783}
{'[0, 1, 3, 1, 0, 2, 0, 0, 2, 0, 16, 29, 0, 2, 0, 0, 0, 1]' : 0.180997}
{'[0, 1, 3, 1, 0, 2, 0, 0, 2, 0, 16, 29, 0, 2, 0, 0, 0, 1]' : 0.182108}
{'[0, 1, 3, 1, 0, 2, 0, 0, 2, 0, 16, 29, 0, 2, 0, 0, 0, 1]' : 0.181707}
{'[0, 1, 3, 1, 0, 2, 0, 0, 2, 0, 16, 29, 0, 2, 0, 0, 0, 1]' : 0.178969}
{'[0, 1, 3, 1, 0, 2, 0, 0, 2, 0, 16, 29, 0, 2, 0, 0, 0, 1]' : 0.183499}
{'[0, 1, 3, 1, 0, 2, 0, 0, 2, 0, 16, 29, 0, 2, 0, 0, 0, 1]' : 0.181139}
{'[0, 1, 3, 1, 0, 2, 0, 0, 2, 0, 16, 29, 0, 2, 0, 0, 0, 1]' : 0.179675}
{'[0, 1, 3, 1, 0, 2, 0, 0, 2, 0, 16, 29, 0, 2, 0, 0, 0, 1]' : 0.182854}
{'[0, 1, 3, 1, 0, 2, 0, 0, 2, 0, 16, 29, 0, 2, 0, 0, 0, 1]' : 0.177768}
{'[0, 1, 3, 1, 0, 2, 0, 0, 2, 0, 16, 29, 0, 2, 0, 0, 0, 1]' : 0.177145}
{'[0, 1, 3, 1, 0, 2, 0, 0, 2, 0, 16, 29, 0, 2, 0, 0, 0, 1]' : 0.183778}
{'[0, 1, 3, 1, 0, 2, 0, 0, 2, 0, 16, 29, 0, 2, 0, 0, 0, 1]' : 0.179269}
{'[0, 1, 3, 1, 0, 2, 0, 0, 2, 0, 16, 29, 0, 2, 0, 0, 0, 1]' : 0.182086}
{'[0, 1, 3, 1, 0, 2, 0, 0, 2, 0, 16, 29, 0, 2, 0, 0, 0, 1]' : 0.18381}
{'[0, 1, 3, 1, 0, 2, 0, 0, 2, 0, 16, 29, 0, 2, 0, 0, 0, 1]' : 0.183769}

out:
 ["{'[0, 1, 3, 1, 0, 2, 0, 0, 2, 0, 16, 29, 0, 2, 0, 0, 0, 1]' : 0.184046}", "{'[0, 1, 3, 1, 0, 2, 0, 0, 2, 0, 16, 29, 0, 2, 0, 0, 0, 1]' : 0.182926}", "{'[0, 1, 3, 1, 0, 2, 0, 0, 2, 0, 16, 29, 0, 2, 0, 0, 0, 1]' : 0.177563}", "{'[0, 1, 3, 1, 0, 2, 0, 0, 2, 0, 16, 29, 0, 2, 0, 0, 0, 1]' : 0.173309}", "{'[0, 1, 3, 1, 0, 2, 0, 0, 2, 0, 16, 29, 0, 2, 0, 0, 0, 1]' : 0.173221}", "{'[0, 1, 3, 1, 0, 2, 0, 0, 2, 0, 16, 29, 0, 2, 0, 0, 0, 1]' : 0.180348}", "{'[0, 1, 3, 1, 0, 2, 0, 0, 2, 0, 16, 29, 0, 2, 0, 0, 0, 1]' : 0.183809}", "{'[0, 1, 3, 1, 0, 2, 0, 0, 2, 0, 16, 29, 0, 2, 0, 0, 0, 1]' : 0.183415}", "{'[0, 1, 3, 1, 0, 2, 0, 0, 2, 0, 16, 29, 0, 2, 0, 0, 0, 1]' : 0.183562}", "{'[0, 1, 3, 1, 0, 2, 0, 0, 2, 0, 16, 29, 0, 2, 0, 0, 0, 1]' : 0.179188}", "{'[0, 1, 3, 1, 0, 2, 0, 0, 2, 0, 16, 29, 0, 2, 0, 0, 0, 1]' : 0.179705}", "{'[0, 1, 3, 1, 0, 2, 0, 0, 2, 0, 16, 29, 0, 2, 0, 0, 0, 1]' : 0.183508}", "{'[0, 1, 3, 1, 0, 2, 0, 0, 2, 0, 16, 29, 0, 2, 0, 0, 0, 1]' : 0.178835}", "{'[0, 1, 3, 1, 0, 2, 0, 0, 2, 0, 16, 29, 0, 2, 0, 0, 0, 1]' : 0.180903}", "{'[0, 1, 3, 1, 0, 2, 0, 0, 2, 0, 16, 29, 0, 2, 0, 0, 0, 1]' : 0.183783}", "{'[0, 1, 3, 1, 0, 2, 0, 0, 2, 0, 16, 29, 0, 2, 0, 0, 0, 1]' : 0.180997}", "{'[0, 1, 3, 1, 0, 2, 0, 0, 2, 0, 16, 29, 0, 2, 0, 0, 0, 1]' : 0.182108}", "{'[0, 1, 3, 1, 0, 2, 0, 0, 2, 0, 16, 29, 0, 2, 0, 0, 0, 1]' : 0.181707}", "{'[0, 1, 3, 1, 0, 2, 0, 0, 2, 0, 16, 29, 0, 2, 0, 0, 0, 1]' : 0.178969}", "{'[0, 1, 3, 1, 0, 2, 0, 0, 2, 0, 16, 29, 0, 2, 0, 0, 0, 1]' : 0.183499}", "{'[0, 1, 3, 1, 0, 2, 0, 0, 2, 0, 16, 29, 0, 2, 0, 0, 0, 1]' : 0.181139}", "{'[0, 1, 3, 1, 0, 2, 0, 0, 2, 0, 16, 29, 0, 2, 0, 0, 0, 1]' : 0.179675}", "{'[0, 1, 3, 1, 0, 2, 0, 0, 2, 0, 16, 29, 0, 2, 0, 0, 0, 1]' : 0.182854}", "{'[0, 1, 3, 1, 0, 2, 0, 0, 2, 0, 16, 29, 0, 2, 0, 0, 0, 1]' : 0.177768}", "{'[0, 1, 3, 1, 0, 2, 0, 0, 2, 0, 16, 29, 0, 2, 0, 0, 0, 1]' : 0.177145}", "{'[0, 1, 3, 1, 0, 2, 0, 0, 2, 0, 16, 29, 0, 2, 0, 0, 0, 1]' : 0.183778}", "{'[0, 1, 3, 1, 0, 2, 0, 0, 2, 0, 16, 29, 0, 2, 0, 0, 0, 1]' : 0.179269}", "{'[0, 1, 3, 1, 0, 2, 0, 0, 2, 0, 16, 29, 0, 2, 0, 0, 0, 1]' : 0.182086}", "{'[0, 1, 3, 1, 0, 2, 0, 0, 2, 0, 16, 29, 0, 2, 0, 0, 0, 1]' : 0.18381}", "{'[0, 1, 3, 1, 0, 2, 0, 0, 2, 0, 16, 29, 0, 2, 0, 0, 0, 1]' : 0.183769}"]
returning from 'run': {'[0, 1, 3, 1, 0, 2, 0, 0, 2, 0, 16, 29, 0, 2, 0, 0, 0, 1]': ([0.184046, 0.182926, 0.177563, 0.173309, 0.173221, 0.180348, 0.183809, 0.183415, 0.183562, 0.179188, 0.179705, 0.183508, 0.178835, 0.180903, 0.183783, 0.180997, 0.182108, 0.181707, 0.178969, 0.183499, 0.181139, 0.179675, 0.182854, 0.177768, 0.177145, 0.183778, 0.179269, 0.182086, 0.18381, 0.183769], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 1, 3, 1, 0, 2, 0, 0, 2, 0, 16, 29, 0, 2, 0, 0, 0, 1]': ([0.184046, 0.182926, 0.177563, 0.173309, 0.173221, 0.180348, 0.183809, 0.183415, 0.183562, 0.179188, 0.179705, 0.183508, 0.178835, 0.180903, 0.183783, 0.180997, 0.182108, 0.181707, 0.178969, 0.183499, 0.181139, 0.179675, 0.182854, 0.177768, 0.177145, 0.183778, 0.179269, 0.182086, 0.18381, 0.183769], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	95
        Max loop nest depth: 	6
        Additions: 		1883
        Multiplications: 	378
        Divisions: 		0
        Logical: 		0
        Reads: 			3204
        Writes: 		532
        Comparisons:		95
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest44.exe __orio_perftest44.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest44.exe  
Program Test Output: 
{'[2, 4, 0, 6, 6, 2, 1, 0, 14, 25, 4, 0, 0, 0, 0, 0, 0, 1]' : 0.236931}
{'[2, 4, 0, 6, 6, 2, 1, 0, 14, 25, 4, 0, 0, 0, 0, 0, 0, 1]' : 0.215628}
{'[2, 4, 0, 6, 6, 2, 1, 0, 14, 25, 4, 0, 0, 0, 0, 0, 0, 1]' : 0.2007}
{'[2, 4, 0, 6, 6, 2, 1, 0, 14, 25, 4, 0, 0, 0, 0, 0, 0, 1]' : 0.199666}
{'[2, 4, 0, 6, 6, 2, 1, 0, 14, 25, 4, 0, 0, 0, 0, 0, 0, 1]' : 0.19987}
{'[2, 4, 0, 6, 6, 2, 1, 0, 14, 25, 4, 0, 0, 0, 0, 0, 0, 1]' : 0.199784}
{'[2, 4, 0, 6, 6, 2, 1, 0, 14, 25, 4, 0, 0, 0, 0, 0, 0, 1]' : 0.199501}
{'[2, 4, 0, 6, 6, 2, 1, 0, 14, 25, 4, 0, 0, 0, 0, 0, 0, 1]' : 0.200631}
{'[2, 4, 0, 6, 6, 2, 1, 0, 14, 25, 4, 0, 0, 0, 0, 0, 0, 1]' : 0.199796}
{'[2, 4, 0, 6, 6, 2, 1, 0, 14, 25, 4, 0, 0, 0, 0, 0, 0, 1]' : 0.199966}
{'[2, 4, 0, 6, 6, 2, 1, 0, 14, 25, 4, 0, 0, 0, 0, 0, 0, 1]' : 0.199782}
{'[2, 4, 0, 6, 6, 2, 1, 0, 14, 25, 4, 0, 0, 0, 0, 0, 0, 1]' : 0.199761}
{'[2, 4, 0, 6, 6, 2, 1, 0, 14, 25, 4, 0, 0, 0, 0, 0, 0, 1]' : 0.199444}
{'[2, 4, 0, 6, 6, 2, 1, 0, 14, 25, 4, 0, 0, 0, 0, 0, 0, 1]' : 0.199432}
{'[2, 4, 0, 6, 6, 2, 1, 0, 14, 25, 4, 0, 0, 0, 0, 0, 0, 1]' : 0.200216}
{'[2, 4, 0, 6, 6, 2, 1, 0, 14, 25, 4, 0, 0, 0, 0, 0, 0, 1]' : 0.199689}
{'[2, 4, 0, 6, 6, 2, 1, 0, 14, 25, 4, 0, 0, 0, 0, 0, 0, 1]' : 0.199661}
{'[2, 4, 0, 6, 6, 2, 1, 0, 14, 25, 4, 0, 0, 0, 0, 0, 0, 1]' : 0.199912}
{'[2, 4, 0, 6, 6, 2, 1, 0, 14, 25, 4, 0, 0, 0, 0, 0, 0, 1]' : 0.199435}
{'[2, 4, 0, 6, 6, 2, 1, 0, 14, 25, 4, 0, 0, 0, 0, 0, 0, 1]' : 0.199895}
{'[2, 4, 0, 6, 6, 2, 1, 0, 14, 25, 4, 0, 0, 0, 0, 0, 0, 1]' : 0.19963}
{'[2, 4, 0, 6, 6, 2, 1, 0, 14, 25, 4, 0, 0, 0, 0, 0, 0, 1]' : 0.199742}
{'[2, 4, 0, 6, 6, 2, 1, 0, 14, 25, 4, 0, 0, 0, 0, 0, 0, 1]' : 0.200236}
{'[2, 4, 0, 6, 6, 2, 1, 0, 14, 25, 4, 0, 0, 0, 0, 0, 0, 1]' : 0.199847}
{'[2, 4, 0, 6, 6, 2, 1, 0, 14, 25, 4, 0, 0, 0, 0, 0, 0, 1]' : 0.199908}
{'[2, 4, 0, 6, 6, 2, 1, 0, 14, 25, 4, 0, 0, 0, 0, 0, 0, 1]' : 0.199923}
{'[2, 4, 0, 6, 6, 2, 1, 0, 14, 25, 4, 0, 0, 0, 0, 0, 0, 1]' : 0.19961}
{'[2, 4, 0, 6, 6, 2, 1, 0, 14, 25, 4, 0, 0, 0, 0, 0, 0, 1]' : 0.199676}
{'[2, 4, 0, 6, 6, 2, 1, 0, 14, 25, 4, 0, 0, 0, 0, 0, 0, 1]' : 0.1995}
{'[2, 4, 0, 6, 6, 2, 1, 0, 14, 25, 4, 0, 0, 0, 0, 0, 0, 1]' : 0.200099}

out:
 ["{'[2, 4, 0, 6, 6, 2, 1, 0, 14, 25, 4, 0, 0, 0, 0, 0, 0, 1]' : 0.236931}", "{'[2, 4, 0, 6, 6, 2, 1, 0, 14, 25, 4, 0, 0, 0, 0, 0, 0, 1]' : 0.215628}", "{'[2, 4, 0, 6, 6, 2, 1, 0, 14, 25, 4, 0, 0, 0, 0, 0, 0, 1]' : 0.2007}", "{'[2, 4, 0, 6, 6, 2, 1, 0, 14, 25, 4, 0, 0, 0, 0, 0, 0, 1]' : 0.199666}", "{'[2, 4, 0, 6, 6, 2, 1, 0, 14, 25, 4, 0, 0, 0, 0, 0, 0, 1]' : 0.19987}", "{'[2, 4, 0, 6, 6, 2, 1, 0, 14, 25, 4, 0, 0, 0, 0, 0, 0, 1]' : 0.199784}", "{'[2, 4, 0, 6, 6, 2, 1, 0, 14, 25, 4, 0, 0, 0, 0, 0, 0, 1]' : 0.199501}", "{'[2, 4, 0, 6, 6, 2, 1, 0, 14, 25, 4, 0, 0, 0, 0, 0, 0, 1]' : 0.200631}", "{'[2, 4, 0, 6, 6, 2, 1, 0, 14, 25, 4, 0, 0, 0, 0, 0, 0, 1]' : 0.199796}", "{'[2, 4, 0, 6, 6, 2, 1, 0, 14, 25, 4, 0, 0, 0, 0, 0, 0, 1]' : 0.199966}", "{'[2, 4, 0, 6, 6, 2, 1, 0, 14, 25, 4, 0, 0, 0, 0, 0, 0, 1]' : 0.199782}", "{'[2, 4, 0, 6, 6, 2, 1, 0, 14, 25, 4, 0, 0, 0, 0, 0, 0, 1]' : 0.199761}", "{'[2, 4, 0, 6, 6, 2, 1, 0, 14, 25, 4, 0, 0, 0, 0, 0, 0, 1]' : 0.199444}", "{'[2, 4, 0, 6, 6, 2, 1, 0, 14, 25, 4, 0, 0, 0, 0, 0, 0, 1]' : 0.199432}", "{'[2, 4, 0, 6, 6, 2, 1, 0, 14, 25, 4, 0, 0, 0, 0, 0, 0, 1]' : 0.200216}", "{'[2, 4, 0, 6, 6, 2, 1, 0, 14, 25, 4, 0, 0, 0, 0, 0, 0, 1]' : 0.199689}", "{'[2, 4, 0, 6, 6, 2, 1, 0, 14, 25, 4, 0, 0, 0, 0, 0, 0, 1]' : 0.199661}", "{'[2, 4, 0, 6, 6, 2, 1, 0, 14, 25, 4, 0, 0, 0, 0, 0, 0, 1]' : 0.199912}", "{'[2, 4, 0, 6, 6, 2, 1, 0, 14, 25, 4, 0, 0, 0, 0, 0, 0, 1]' : 0.199435}", "{'[2, 4, 0, 6, 6, 2, 1, 0, 14, 25, 4, 0, 0, 0, 0, 0, 0, 1]' : 0.199895}", "{'[2, 4, 0, 6, 6, 2, 1, 0, 14, 25, 4, 0, 0, 0, 0, 0, 0, 1]' : 0.19963}", "{'[2, 4, 0, 6, 6, 2, 1, 0, 14, 25, 4, 0, 0, 0, 0, 0, 0, 1]' : 0.199742}", "{'[2, 4, 0, 6, 6, 2, 1, 0, 14, 25, 4, 0, 0, 0, 0, 0, 0, 1]' : 0.200236}", "{'[2, 4, 0, 6, 6, 2, 1, 0, 14, 25, 4, 0, 0, 0, 0, 0, 0, 1]' : 0.199847}", "{'[2, 4, 0, 6, 6, 2, 1, 0, 14, 25, 4, 0, 0, 0, 0, 0, 0, 1]' : 0.199908}", "{'[2, 4, 0, 6, 6, 2, 1, 0, 14, 25, 4, 0, 0, 0, 0, 0, 0, 1]' : 0.199923}", "{'[2, 4, 0, 6, 6, 2, 1, 0, 14, 25, 4, 0, 0, 0, 0, 0, 0, 1]' : 0.19961}", "{'[2, 4, 0, 6, 6, 2, 1, 0, 14, 25, 4, 0, 0, 0, 0, 0, 0, 1]' : 0.199676}", "{'[2, 4, 0, 6, 6, 2, 1, 0, 14, 25, 4, 0, 0, 0, 0, 0, 0, 1]' : 0.1995}", "{'[2, 4, 0, 6, 6, 2, 1, 0, 14, 25, 4, 0, 0, 0, 0, 0, 0, 1]' : 0.200099}"]
returning from 'run': {'[2, 4, 0, 6, 6, 2, 1, 0, 14, 25, 4, 0, 0, 0, 0, 0, 0, 1]': ([0.236931, 0.215628, 0.2007, 0.199666, 0.19987, 0.199784, 0.199501, 0.200631, 0.199796, 0.199966, 0.199782, 0.199761, 0.199444, 0.199432, 0.200216, 0.199689, 0.199661, 0.199912, 0.199435, 0.199895, 0.19963, 0.199742, 0.200236, 0.199847, 0.199908, 0.199923, 0.19961, 0.199676, 0.1995, 0.200099], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 4, 0, 6, 6, 2, 1, 0, 14, 25, 4, 0, 0, 0, 0, 0, 0, 1]': ([0.236931, 0.215628, 0.2007, 0.199666, 0.19987, 0.199784, 0.199501, 0.200631, 0.199796, 0.199966, 0.199782, 0.199761, 0.199444, 0.199432, 0.200216, 0.199689, 0.199661, 0.199912, 0.199435, 0.199895, 0.19963, 0.199742, 0.200236, 0.199847, 0.199908, 0.199923, 0.19961, 0.199676, 0.1995, 0.200099], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	5
        Additions: 		2574
        Multiplications: 	1248
        Divisions: 		0
        Logical: 		0
        Reads: 			4979
        Writes: 		846
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest45.exe __orio_perftest45.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest45.exe  
Program Test Output: 
{'[2, 2, 0, 0, 1, 3, 0, 0, 23, 22, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.119291}
{'[2, 2, 0, 0, 1, 3, 0, 0, 23, 22, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.118769}
{'[2, 2, 0, 0, 1, 3, 0, 0, 23, 22, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.117547}
{'[2, 2, 0, 0, 1, 3, 0, 0, 23, 22, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.115852}
{'[2, 2, 0, 0, 1, 3, 0, 0, 23, 22, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.115829}
{'[2, 2, 0, 0, 1, 3, 0, 0, 23, 22, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.115503}
{'[2, 2, 0, 0, 1, 3, 0, 0, 23, 22, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.115925}
{'[2, 2, 0, 0, 1, 3, 0, 0, 23, 22, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.115701}
{'[2, 2, 0, 0, 1, 3, 0, 0, 23, 22, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.116533}
{'[2, 2, 0, 0, 1, 3, 0, 0, 23, 22, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.115452}
{'[2, 2, 0, 0, 1, 3, 0, 0, 23, 22, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.115473}
{'[2, 2, 0, 0, 1, 3, 0, 0, 23, 22, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.115538}
{'[2, 2, 0, 0, 1, 3, 0, 0, 23, 22, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.11734}
{'[2, 2, 0, 0, 1, 3, 0, 0, 23, 22, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.118824}
{'[2, 2, 0, 0, 1, 3, 0, 0, 23, 22, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.118797}
{'[2, 2, 0, 0, 1, 3, 0, 0, 23, 22, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.119333}
{'[2, 2, 0, 0, 1, 3, 0, 0, 23, 22, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.119545}
{'[2, 2, 0, 0, 1, 3, 0, 0, 23, 22, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.119017}
{'[2, 2, 0, 0, 1, 3, 0, 0, 23, 22, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.118787}
{'[2, 2, 0, 0, 1, 3, 0, 0, 23, 22, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.118826}
{'[2, 2, 0, 0, 1, 3, 0, 0, 23, 22, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.118948}
{'[2, 2, 0, 0, 1, 3, 0, 0, 23, 22, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.121678}
{'[2, 2, 0, 0, 1, 3, 0, 0, 23, 22, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.121778}
{'[2, 2, 0, 0, 1, 3, 0, 0, 23, 22, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.121781}
{'[2, 2, 0, 0, 1, 3, 0, 0, 23, 22, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.121836}
{'[2, 2, 0, 0, 1, 3, 0, 0, 23, 22, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.121817}
{'[2, 2, 0, 0, 1, 3, 0, 0, 23, 22, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.121851}
{'[2, 2, 0, 0, 1, 3, 0, 0, 23, 22, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.121794}
{'[2, 2, 0, 0, 1, 3, 0, 0, 23, 22, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.120729}
{'[2, 2, 0, 0, 1, 3, 0, 0, 23, 22, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.121049}

out:
 ["{'[2, 2, 0, 0, 1, 3, 0, 0, 23, 22, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.119291}", "{'[2, 2, 0, 0, 1, 3, 0, 0, 23, 22, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.118769}", "{'[2, 2, 0, 0, 1, 3, 0, 0, 23, 22, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.117547}", "{'[2, 2, 0, 0, 1, 3, 0, 0, 23, 22, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.115852}", "{'[2, 2, 0, 0, 1, 3, 0, 0, 23, 22, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.115829}", "{'[2, 2, 0, 0, 1, 3, 0, 0, 23, 22, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.115503}", "{'[2, 2, 0, 0, 1, 3, 0, 0, 23, 22, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.115925}", "{'[2, 2, 0, 0, 1, 3, 0, 0, 23, 22, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.115701}", "{'[2, 2, 0, 0, 1, 3, 0, 0, 23, 22, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.116533}", "{'[2, 2, 0, 0, 1, 3, 0, 0, 23, 22, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.115452}", "{'[2, 2, 0, 0, 1, 3, 0, 0, 23, 22, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.115473}", "{'[2, 2, 0, 0, 1, 3, 0, 0, 23, 22, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.115538}", "{'[2, 2, 0, 0, 1, 3, 0, 0, 23, 22, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.11734}", "{'[2, 2, 0, 0, 1, 3, 0, 0, 23, 22, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.118824}", "{'[2, 2, 0, 0, 1, 3, 0, 0, 23, 22, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.118797}", "{'[2, 2, 0, 0, 1, 3, 0, 0, 23, 22, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.119333}", "{'[2, 2, 0, 0, 1, 3, 0, 0, 23, 22, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.119545}", "{'[2, 2, 0, 0, 1, 3, 0, 0, 23, 22, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.119017}", "{'[2, 2, 0, 0, 1, 3, 0, 0, 23, 22, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.118787}", "{'[2, 2, 0, 0, 1, 3, 0, 0, 23, 22, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.118826}", "{'[2, 2, 0, 0, 1, 3, 0, 0, 23, 22, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.118948}", "{'[2, 2, 0, 0, 1, 3, 0, 0, 23, 22, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.121678}", "{'[2, 2, 0, 0, 1, 3, 0, 0, 23, 22, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.121778}", "{'[2, 2, 0, 0, 1, 3, 0, 0, 23, 22, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.121781}", "{'[2, 2, 0, 0, 1, 3, 0, 0, 23, 22, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.121836}", "{'[2, 2, 0, 0, 1, 3, 0, 0, 23, 22, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.121817}", "{'[2, 2, 0, 0, 1, 3, 0, 0, 23, 22, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.121851}", "{'[2, 2, 0, 0, 1, 3, 0, 0, 23, 22, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.121794}", "{'[2, 2, 0, 0, 1, 3, 0, 0, 23, 22, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.120729}", "{'[2, 2, 0, 0, 1, 3, 0, 0, 23, 22, 0, 15, 0, 1, 0, 1, 0, 1]' : 0.121049}"]
returning from 'run': {'[2, 2, 0, 0, 1, 3, 0, 0, 23, 22, 0, 15, 0, 1, 0, 1, 0, 1]': ([0.119291, 0.118769, 0.117547, 0.115852, 0.115829, 0.115503, 0.115925, 0.115701, 0.116533, 0.115452, 0.115473, 0.115538, 0.11734, 0.118824, 0.118797, 0.119333, 0.119545, 0.119017, 0.118787, 0.118826, 0.118948, 0.121678, 0.121778, 0.121781, 0.121836, 0.121817, 0.121851, 0.121794, 0.120729, 0.121049], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 2, 0, 0, 1, 3, 0, 0, 23, 22, 0, 15, 0, 1, 0, 1, 0, 1]': ([0.119291, 0.118769, 0.117547, 0.115852, 0.115829, 0.115503, 0.115925, 0.115701, 0.116533, 0.115452, 0.115473, 0.115538, 0.11734, 0.118824, 0.118797, 0.119333, 0.119545, 0.119017, 0.118787, 0.118826, 0.118948, 0.121678, 0.121778, 0.121781, 0.121836, 0.121817, 0.121851, 0.121794, 0.120729, 0.121049], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	43
        Max loop nest depth: 	6
        Additions: 		882
        Multiplications: 	182
        Divisions: 		0
        Logical: 		0
        Reads: 			1561
        Writes: 		250
        Comparisons:		43
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest46.exe __orio_perftest46.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest46.exe  
Program Test Output: 
{'[1, 2, 4, 6, 2, 0, 0, 1, 29, 3, 0, 4, 1, 0, 0, 0, 1, 1]' : 0.11175}
{'[1, 2, 4, 6, 2, 0, 0, 1, 29, 3, 0, 4, 1, 0, 0, 0, 1, 1]' : 0.111301}
{'[1, 2, 4, 6, 2, 0, 0, 1, 29, 3, 0, 4, 1, 0, 0, 0, 1, 1]' : 0.111299}
{'[1, 2, 4, 6, 2, 0, 0, 1, 29, 3, 0, 4, 1, 0, 0, 0, 1, 1]' : 0.110212}
{'[1, 2, 4, 6, 2, 0, 0, 1, 29, 3, 0, 4, 1, 0, 0, 0, 1, 1]' : 0.101919}
{'[1, 2, 4, 6, 2, 0, 0, 1, 29, 3, 0, 4, 1, 0, 0, 0, 1, 1]' : 0.10173}
{'[1, 2, 4, 6, 2, 0, 0, 1, 29, 3, 0, 4, 1, 0, 0, 0, 1, 1]' : 0.101839}
{'[1, 2, 4, 6, 2, 0, 0, 1, 29, 3, 0, 4, 1, 0, 0, 0, 1, 1]' : 0.101902}
{'[1, 2, 4, 6, 2, 0, 0, 1, 29, 3, 0, 4, 1, 0, 0, 0, 1, 1]' : 0.101746}
{'[1, 2, 4, 6, 2, 0, 0, 1, 29, 3, 0, 4, 1, 0, 0, 0, 1, 1]' : 0.101735}
{'[1, 2, 4, 6, 2, 0, 0, 1, 29, 3, 0, 4, 1, 0, 0, 0, 1, 1]' : 0.101627}
{'[1, 2, 4, 6, 2, 0, 0, 1, 29, 3, 0, 4, 1, 0, 0, 0, 1, 1]' : 0.101706}
{'[1, 2, 4, 6, 2, 0, 0, 1, 29, 3, 0, 4, 1, 0, 0, 0, 1, 1]' : 0.101832}
{'[1, 2, 4, 6, 2, 0, 0, 1, 29, 3, 0, 4, 1, 0, 0, 0, 1, 1]' : 0.101745}
{'[1, 2, 4, 6, 2, 0, 0, 1, 29, 3, 0, 4, 1, 0, 0, 0, 1, 1]' : 0.101772}
{'[1, 2, 4, 6, 2, 0, 0, 1, 29, 3, 0, 4, 1, 0, 0, 0, 1, 1]' : 0.10165}
{'[1, 2, 4, 6, 2, 0, 0, 1, 29, 3, 0, 4, 1, 0, 0, 0, 1, 1]' : 0.099596}
{'[1, 2, 4, 6, 2, 0, 0, 1, 29, 3, 0, 4, 1, 0, 0, 0, 1, 1]' : 0.0999649}
{'[1, 2, 4, 6, 2, 0, 0, 1, 29, 3, 0, 4, 1, 0, 0, 0, 1, 1]' : 0.0996652}
{'[1, 2, 4, 6, 2, 0, 0, 1, 29, 3, 0, 4, 1, 0, 0, 0, 1, 1]' : 0.099952}
{'[1, 2, 4, 6, 2, 0, 0, 1, 29, 3, 0, 4, 1, 0, 0, 0, 1, 1]' : 0.09972}
{'[1, 2, 4, 6, 2, 0, 0, 1, 29, 3, 0, 4, 1, 0, 0, 0, 1, 1]' : 0.09972}
{'[1, 2, 4, 6, 2, 0, 0, 1, 29, 3, 0, 4, 1, 0, 0, 0, 1, 1]' : 0.101858}
{'[1, 2, 4, 6, 2, 0, 0, 1, 29, 3, 0, 4, 1, 0, 0, 0, 1, 1]' : 0.101705}
{'[1, 2, 4, 6, 2, 0, 0, 1, 29, 3, 0, 4, 1, 0, 0, 0, 1, 1]' : 0.101755}
{'[1, 2, 4, 6, 2, 0, 0, 1, 29, 3, 0, 4, 1, 0, 0, 0, 1, 1]' : 0.101725}
{'[1, 2, 4, 6, 2, 0, 0, 1, 29, 3, 0, 4, 1, 0, 0, 0, 1, 1]' : 0.100384}
{'[1, 2, 4, 6, 2, 0, 0, 1, 29, 3, 0, 4, 1, 0, 0, 0, 1, 1]' : 0.101714}
{'[1, 2, 4, 6, 2, 0, 0, 1, 29, 3, 0, 4, 1, 0, 0, 0, 1, 1]' : 0.101655}
{'[1, 2, 4, 6, 2, 0, 0, 1, 29, 3, 0, 4, 1, 0, 0, 0, 1, 1]' : 0.101754}

out:
 ["{'[1, 2, 4, 6, 2, 0, 0, 1, 29, 3, 0, 4, 1, 0, 0, 0, 1, 1]' : 0.11175}", "{'[1, 2, 4, 6, 2, 0, 0, 1, 29, 3, 0, 4, 1, 0, 0, 0, 1, 1]' : 0.111301}", "{'[1, 2, 4, 6, 2, 0, 0, 1, 29, 3, 0, 4, 1, 0, 0, 0, 1, 1]' : 0.111299}", "{'[1, 2, 4, 6, 2, 0, 0, 1, 29, 3, 0, 4, 1, 0, 0, 0, 1, 1]' : 0.110212}", "{'[1, 2, 4, 6, 2, 0, 0, 1, 29, 3, 0, 4, 1, 0, 0, 0, 1, 1]' : 0.101919}", "{'[1, 2, 4, 6, 2, 0, 0, 1, 29, 3, 0, 4, 1, 0, 0, 0, 1, 1]' : 0.10173}", "{'[1, 2, 4, 6, 2, 0, 0, 1, 29, 3, 0, 4, 1, 0, 0, 0, 1, 1]' : 0.101839}", "{'[1, 2, 4, 6, 2, 0, 0, 1, 29, 3, 0, 4, 1, 0, 0, 0, 1, 1]' : 0.101902}", "{'[1, 2, 4, 6, 2, 0, 0, 1, 29, 3, 0, 4, 1, 0, 0, 0, 1, 1]' : 0.101746}", "{'[1, 2, 4, 6, 2, 0, 0, 1, 29, 3, 0, 4, 1, 0, 0, 0, 1, 1]' : 0.101735}", "{'[1, 2, 4, 6, 2, 0, 0, 1, 29, 3, 0, 4, 1, 0, 0, 0, 1, 1]' : 0.101627}", "{'[1, 2, 4, 6, 2, 0, 0, 1, 29, 3, 0, 4, 1, 0, 0, 0, 1, 1]' : 0.101706}", "{'[1, 2, 4, 6, 2, 0, 0, 1, 29, 3, 0, 4, 1, 0, 0, 0, 1, 1]' : 0.101832}", "{'[1, 2, 4, 6, 2, 0, 0, 1, 29, 3, 0, 4, 1, 0, 0, 0, 1, 1]' : 0.101745}", "{'[1, 2, 4, 6, 2, 0, 0, 1, 29, 3, 0, 4, 1, 0, 0, 0, 1, 1]' : 0.101772}", "{'[1, 2, 4, 6, 2, 0, 0, 1, 29, 3, 0, 4, 1, 0, 0, 0, 1, 1]' : 0.10165}", "{'[1, 2, 4, 6, 2, 0, 0, 1, 29, 3, 0, 4, 1, 0, 0, 0, 1, 1]' : 0.099596}", "{'[1, 2, 4, 6, 2, 0, 0, 1, 29, 3, 0, 4, 1, 0, 0, 0, 1, 1]' : 0.0999649}", "{'[1, 2, 4, 6, 2, 0, 0, 1, 29, 3, 0, 4, 1, 0, 0, 0, 1, 1]' : 0.0996652}", "{'[1, 2, 4, 6, 2, 0, 0, 1, 29, 3, 0, 4, 1, 0, 0, 0, 1, 1]' : 0.099952}", "{'[1, 2, 4, 6, 2, 0, 0, 1, 29, 3, 0, 4, 1, 0, 0, 0, 1, 1]' : 0.09972}", "{'[1, 2, 4, 6, 2, 0, 0, 1, 29, 3, 0, 4, 1, 0, 0, 0, 1, 1]' : 0.09972}", "{'[1, 2, 4, 6, 2, 0, 0, 1, 29, 3, 0, 4, 1, 0, 0, 0, 1, 1]' : 0.101858}", "{'[1, 2, 4, 6, 2, 0, 0, 1, 29, 3, 0, 4, 1, 0, 0, 0, 1, 1]' : 0.101705}", "{'[1, 2, 4, 6, 2, 0, 0, 1, 29, 3, 0, 4, 1, 0, 0, 0, 1, 1]' : 0.101755}", "{'[1, 2, 4, 6, 2, 0, 0, 1, 29, 3, 0, 4, 1, 0, 0, 0, 1, 1]' : 0.101725}", "{'[1, 2, 4, 6, 2, 0, 0, 1, 29, 3, 0, 4, 1, 0, 0, 0, 1, 1]' : 0.100384}", "{'[1, 2, 4, 6, 2, 0, 0, 1, 29, 3, 0, 4, 1, 0, 0, 0, 1, 1]' : 0.101714}", "{'[1, 2, 4, 6, 2, 0, 0, 1, 29, 3, 0, 4, 1, 0, 0, 0, 1, 1]' : 0.101655}", "{'[1, 2, 4, 6, 2, 0, 0, 1, 29, 3, 0, 4, 1, 0, 0, 0, 1, 1]' : 0.101754}"]
returning from 'run': {'[1, 2, 4, 6, 2, 0, 0, 1, 29, 3, 0, 4, 1, 0, 0, 0, 1, 1]': ([0.11175, 0.111301, 0.111299, 0.110212, 0.101919, 0.10173, 0.101839, 0.101902, 0.101746, 0.101735, 0.101627, 0.101706, 0.101832, 0.101745, 0.101772, 0.10165, 0.099596, 0.0999649, 0.0996652, 0.099952, 0.09972, 0.09972, 0.101858, 0.101705, 0.101755, 0.101725, 0.100384, 0.101714, 0.101655, 0.101754], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 2, 4, 6, 2, 0, 0, 1, 29, 3, 0, 4, 1, 0, 0, 0, 1, 1]': ([0.11175, 0.111301, 0.111299, 0.110212, 0.101919, 0.10173, 0.101839, 0.101902, 0.101746, 0.101735, 0.101627, 0.101706, 0.101832, 0.101745, 0.101772, 0.10165, 0.099596, 0.0999649, 0.0996652, 0.099952, 0.09972, 0.09972, 0.101858, 0.101705, 0.101755, 0.101725, 0.100384, 0.101714, 0.101655, 0.101754], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Complete design, with measurements:
     T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
204     2    5    6    1    3    4       0       1   20  10   0   5    2    0
219     4    1    3    2    5    0       1       0   26  25   0   0    2    0
377     2    1    5    0    0    3       1       1    0   0  11   5    1    1
436     0    1    1    5    2    2       1       1    8   4  29   0    1    1
700     6    0    5    0    1    5       1       1    7   0  27  15    2    0
756     1    0    6    1    6    0       0       0   26  25  27   0    0    1
1043    4    6    3    3    5    5       0       1    1  27   0   3    1    1
1060    0    6    3    0    6    1       0       0   29   0  19   2    0    0
1133    0    1    6    2    2    6       0       0    6  18   0  27    0    0
1178    3    6    5    1    4    0       1       0   25   0   1  29    1    0
1592    0    0    6    3    5    0       1       0    0  28  23   0    0    1
1656    0    0    1    0    2    6       0       0   15   0   9  10    0    1
1948    1    2    5    6    2    0       0       0   17   0  29   8    0    2
2076    5    1    1    0    6    0       0       1    1   3   3   0    0    2
2182    1    0    5    6    6    4       1       0   24   0   5  18    1    1
2333    1    1    1    6    4    1       1       0    0   0  29   1    2    0
2393    4    2    5    0    0    6       0       1   11  28  27   0    1    0
2517    1    2    4    4    1    2       0       1    3   0   0   0    0    1
2522    6    3    2    4    4    1       1       0    4   0  26   9    0    0
2582    1    6    4    0    5    2       1       0    3  28   0   0    0    0
2704    0    0    1    2    0    2       1       0   21  22   0   7    1    0
2827    2    2    0    2    6    2       0       1    5   2  12   0    2    0
2929    6    0    0    0    4    1       0       1    0   0  24  26    1    0
3049    3    2    2    6    6    6       0       0    0  27   0  29    1    0
3283    2    0    4    3    0    6       0       0    0   7  29   0    0    0
3357    2    6    1    6    0    5       0       0    3   5  28   0    0    1
3359    5    6    1    6    6    0       0       0    3   0   9   4    0    0
3465    6    2    6    6    6    4       1       1   24  21   0  18    0    1
3813    0    1    0    2    6    6       1       1   13   0   0   3    1    0
4017    3    0    2    0    6    2       1       1   18   3   0  18    0    0
4039    6    5    0    6    6    3       0       1   24   0   0  16    0    2
4074    3    0    0    1    6    0       0       0   25   0  23   9    1    0
4196    6    6    5    0    0    0       1       0    3  18   0  24    0    1
4347    0    5    5    6    0    0       0       1   27   0   9  28    2    0
4370    4    0    5    4    0    0       1       0   20   2   0   0    1    1
4382    3    4    1    4    6    6       1       1   25   0  29  29    0    0
4454    0    1    3    1    0    2       0       0    2   0  16  29    0    2
4489    2    4    0    6    6    2       1       0   14  25   4   0    0    0
4565    2    2    0    0    1    3       0       0   23  22   0  15    0    1
4588    1    2    4    6    2    0       0       1   29   3   0   4    1    0
     RT_K SCR VEC1 VEC2  cost_mean
204     0   0    0    0 0.18707993
219     0   0    1    0 0.19080200
377     0   0    0    0 0.11166277
436     0   1    0    0 0.10753300
700     0   0    0    1 0.29280090
756     0   0    1    1 0.17047873
1043    0   0    1    0 0.11640590
1060    1   1    0    0 0.15791110
1133    1   1    1    0 0.10302107
1178    1   0    1    1 0.11770210
1592    1   1    0    1 0.15971837
1656    0   0    1    1 0.21256637
1948    0   1    1    0 0.16859317
2076    0   0    1    1 0.18625187
2182    0   1    0    0 0.11078517
2333    0   0    1    0 0.27026757
2393    1   0    1    0 0.12416297
2517    1   0    0    0 0.25765163
2522    2   1    1    1 0.17641427
2582    2   0    0    1 0.21049390
2704    1   1    0    1 0.09805315
2827    0   1    1    1 0.20154163
2929    0   1    1    0 0.11368293
3049    1   1    0    1 0.09559696
3283    0   0    1    0 0.17751597
3357    1   0    1    1 0.12267703
3359    0   1    0    0 0.19899403
3465    1   0    1    0 0.21258050
3813    0   1    1    1 0.09754833
4017    1   1    1    0 0.19201910
4039    0   0    0    0 0.22545887
4074    1   0    0    1 0.11535020
4196    0   0    0    0 0.14676643
4347    0   1    1    1 0.15776807
4370    0   1    1    0 0.10173847
4382    0   1    0    1 0.36909293
4454    0   0    0    1 0.18088980
4489    0   0    0    1 0.20159570
4565    0   1    0    1 0.11870477
4588    0   0    1    1 0.10256444

Heteroscedasticity Test p-value: 0.14107755001
Regression Step:                Df  Sum Sq Mean Sq F value   Pr(>F)    
T1_I             1 0.00524 0.00524   3.437 0.100848    
T1_J             1 0.00087 0.00087   0.568 0.472777    
T1_K             1 0.00062 0.00062   0.406 0.541865    
T2_I             1 0.00049 0.00049   0.323 0.585338    
T2_J             1 0.00398 0.00398   2.612 0.144711    
T2_K             1 0.00184 0.00184   1.210 0.303329    
ACOPY_x          1 0.00244 0.00244   1.602 0.241284    
ACOPY_y          1 0.00283 0.00283   1.859 0.209833    
U1_I             1 0.00014 0.00014   0.093 0.768601    
U_I              1 0.00713 0.00713   4.678 0.062502 .  
U_J              1 0.00983 0.00983   6.448 0.034749 *  
U_K              1 0.00003 0.00003   0.019 0.894391    
RT_I             1 0.00227 0.00227   1.491 0.256891    
RT_J             1 0.00001 0.00001   0.004 0.952869    
RT_K             1 0.00343 0.00343   2.251 0.171941    
SCR              1 0.01150 0.01150   7.544 0.025191 *  
VEC1             1 0.00339 0.00339   2.225 0.174166    
VEC2             1 0.00097 0.00097   0.634 0.448962    
I(1/(1 + T1_I))  1 0.00003 0.00003   0.022 0.886127    
I(1/(1 + T1_J))  1 0.00194 0.00194   1.272 0.292151    
I(1/(1 + T1_K))  1 0.00494 0.00494   3.243 0.109399    
I(1/(1 + T2_I))  1 0.00018 0.00018   0.118 0.739572    
I(1/(1 + T2_J))  1 0.00268 0.00268   1.758 0.221520    
I(1/(1 + T2_K))  1 0.00472 0.00472   3.094 0.116643    
I(1/(1 + U1_I))  1 0.00184 0.00184   1.205 0.304211    
I(1/(1 + U_I))   1 0.00353 0.00353   2.315 0.166610    
I(1/(1 + U_J))   1 0.00240 0.00240   1.574 0.245040    
I(1/(1 + U_K))   1 0.00930 0.00930   6.097 0.038752 *  
I(1/(1 + RT_I))  1 0.04369 0.04369  28.662 0.000683 ***
I(1/(1 + RT_J))  1 0.00038 0.00038   0.252 0.629468    
I(1/(1 + RT_K))  1 0.00014 0.00014   0.095 0.766180    
Residuals        8 0.01220 0.00152                     
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Predicting Best
Generating valid search space of size 4600 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Valid coordinates: 920
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Valid coordinates: 1840
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Tested coordinates: 110000
Valid coordinates: 2760
Tested coordinates: 120000
Tested coordinates: 130000
Tested coordinates: 140000
Tested coordinates: 150000
Valid coordinates: 3680
Tested coordinates: 160000
Tested coordinates: 170000
Tested coordinates: 180000
Tested coordinates: 190000
Valid coordinates: 4600
Valid/Tested configurations: 4600/192365
Generated Search Space:
NULL
Identical predictions (tol = 1e-5): 1
Getting Best from Design
Response: ['cost_mean']
Design Names:  [1] "T1_I"      "T1_J"      "T1_K"      "T2_I"      "T2_J"      "T2_K"     
 [7] "ACOPY_x"   "ACOPY_y"   "U1_I"      "U_I"       "U_J"       "U_K"      
[13] "RT_I"      "RT_J"      "RT_K"      "SCR"       "VEC1"      "VEC2"     
[19] "cost_mean"

Design Response:       cost_mean
204  0.18707993
219  0.19080200
377  0.11166277
436  0.10753300
700  0.29280090
756  0.17047873
1043 0.11640590
1060 0.15791110
1133 0.10302107
1178 0.11770210
1592 0.15971837
1656 0.21256637
1948 0.16859317
2076 0.18625187
2182 0.11078517
2333 0.27026757
2393 0.12416297
2517 0.25765163
2522 0.17641427
2582 0.21049390
2704 0.09805315
2827 0.20154163
2929 0.11368293
3049 0.09559696
3283 0.17751597
3357 0.12267703
3359 0.19899403
3465 0.21258050
3813 0.09754833
4017 0.19201910
4039 0.22545887
4074 0.11535020
4196 0.14676643
4347 0.15776807
4370 0.10173847
4382 0.36909293
4454 0.18088980
4489 0.20159570
4565 0.11870477
4588 0.10256444

Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Getting fixed variables
Pruning Model
Best Predicted:      T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
1398    5    5    0    0    0    3       0       0    0  15   0   6    1    1
     RT_K SCR VEC1 VEC2
1398    0   0    1    1

Best From Design: [3, 2, 2, 6, 6, 6, 0, 0, 0, 27, 0, 29, 1, 0, 1, 1, 0, 1]
Pruned Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'VEC1', 'VEC2']
Fixed Factors: {'U_J': 0, 'U_I': 15, 'SCR': 0}
Length of requested configs: 1
Result was on Database, Returning Now
Starting Point (-O3):
0.16283083333333334
Predicted Best Point:
[5, 5, 0, 0, 0, 3, 0, 0, 0, 15, 0, 6, 1, 1, 0, 0, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	23
        Max loop nest depth: 	4
        Additions: 		2716
        Multiplications: 	850
        Divisions: 		0
        Logical: 		0
        Reads: 			4481
        Writes: 		506
        Comparisons:		23
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest47.exe __orio_perftest47.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest47.exe  
Program Test Output: 
{'[5, 5, 0, 0, 0, 3, 0, 0, 0, 15, 0, 6, 1, 1, 0, 0, 1, 1]' : 0.130646}
{'[5, 5, 0, 0, 0, 3, 0, 0, 0, 15, 0, 6, 1, 1, 0, 0, 1, 1]' : 0.130699}
{'[5, 5, 0, 0, 0, 3, 0, 0, 0, 15, 0, 6, 1, 1, 0, 0, 1, 1]' : 0.128839}
{'[5, 5, 0, 0, 0, 3, 0, 0, 0, 15, 0, 6, 1, 1, 0, 0, 1, 1]' : 0.11138}
{'[5, 5, 0, 0, 0, 3, 0, 0, 0, 15, 0, 6, 1, 1, 0, 0, 1, 1]' : 0.110946}
{'[5, 5, 0, 0, 0, 3, 0, 0, 0, 15, 0, 6, 1, 1, 0, 0, 1, 1]' : 0.110305}
{'[5, 5, 0, 0, 0, 3, 0, 0, 0, 15, 0, 6, 1, 1, 0, 0, 1, 1]' : 0.110136}
{'[5, 5, 0, 0, 0, 3, 0, 0, 0, 15, 0, 6, 1, 1, 0, 0, 1, 1]' : 0.110383}
{'[5, 5, 0, 0, 0, 3, 0, 0, 0, 15, 0, 6, 1, 1, 0, 0, 1, 1]' : 0.110511}
{'[5, 5, 0, 0, 0, 3, 0, 0, 0, 15, 0, 6, 1, 1, 0, 0, 1, 1]' : 0.110445}
{'[5, 5, 0, 0, 0, 3, 0, 0, 0, 15, 0, 6, 1, 1, 0, 0, 1, 1]' : 0.110112}
{'[5, 5, 0, 0, 0, 3, 0, 0, 0, 15, 0, 6, 1, 1, 0, 0, 1, 1]' : 0.110703}
{'[5, 5, 0, 0, 0, 3, 0, 0, 0, 15, 0, 6, 1, 1, 0, 0, 1, 1]' : 0.110325}
{'[5, 5, 0, 0, 0, 3, 0, 0, 0, 15, 0, 6, 1, 1, 0, 0, 1, 1]' : 0.110326}
{'[5, 5, 0, 0, 0, 3, 0, 0, 0, 15, 0, 6, 1, 1, 0, 0, 1, 1]' : 0.110181}
{'[5, 5, 0, 0, 0, 3, 0, 0, 0, 15, 0, 6, 1, 1, 0, 0, 1, 1]' : 0.110329}
{'[5, 5, 0, 0, 0, 3, 0, 0, 0, 15, 0, 6, 1, 1, 0, 0, 1, 1]' : 0.110318}
{'[5, 5, 0, 0, 0, 3, 0, 0, 0, 15, 0, 6, 1, 1, 0, 0, 1, 1]' : 0.111078}
{'[5, 5, 0, 0, 0, 3, 0, 0, 0, 15, 0, 6, 1, 1, 0, 0, 1, 1]' : 0.11024}
{'[5, 5, 0, 0, 0, 3, 0, 0, 0, 15, 0, 6, 1, 1, 0, 0, 1, 1]' : 0.110312}
{'[5, 5, 0, 0, 0, 3, 0, 0, 0, 15, 0, 6, 1, 1, 0, 0, 1, 1]' : 0.110372}
{'[5, 5, 0, 0, 0, 3, 0, 0, 0, 15, 0, 6, 1, 1, 0, 0, 1, 1]' : 0.110305}
{'[5, 5, 0, 0, 0, 3, 0, 0, 0, 15, 0, 6, 1, 1, 0, 0, 1, 1]' : 0.110169}
{'[5, 5, 0, 0, 0, 3, 0, 0, 0, 15, 0, 6, 1, 1, 0, 0, 1, 1]' : 0.11029}
{'[5, 5, 0, 0, 0, 3, 0, 0, 0, 15, 0, 6, 1, 1, 0, 0, 1, 1]' : 0.110251}
{'[5, 5, 0, 0, 0, 3, 0, 0, 0, 15, 0, 6, 1, 1, 0, 0, 1, 1]' : 0.110285}
{'[5, 5, 0, 0, 0, 3, 0, 0, 0, 15, 0, 6, 1, 1, 0, 0, 1, 1]' : 0.110118}
{'[5, 5, 0, 0, 0, 3, 0, 0, 0, 15, 0, 6, 1, 1, 0, 0, 1, 1]' : 0.110335}
{'[5, 5, 0, 0, 0, 3, 0, 0, 0, 15, 0, 6, 1, 1, 0, 0, 1, 1]' : 0.110431}
{'[5, 5, 0, 0, 0, 3, 0, 0, 0, 15, 0, 6, 1, 1, 0, 0, 1, 1]' : 0.110679}

out:
 ["{'[5, 5, 0, 0, 0, 3, 0, 0, 0, 15, 0, 6, 1, 1, 0, 0, 1, 1]' : 0.130646}", "{'[5, 5, 0, 0, 0, 3, 0, 0, 0, 15, 0, 6, 1, 1, 0, 0, 1, 1]' : 0.130699}", "{'[5, 5, 0, 0, 0, 3, 0, 0, 0, 15, 0, 6, 1, 1, 0, 0, 1, 1]' : 0.128839}", "{'[5, 5, 0, 0, 0, 3, 0, 0, 0, 15, 0, 6, 1, 1, 0, 0, 1, 1]' : 0.11138}", "{'[5, 5, 0, 0, 0, 3, 0, 0, 0, 15, 0, 6, 1, 1, 0, 0, 1, 1]' : 0.110946}", "{'[5, 5, 0, 0, 0, 3, 0, 0, 0, 15, 0, 6, 1, 1, 0, 0, 1, 1]' : 0.110305}", "{'[5, 5, 0, 0, 0, 3, 0, 0, 0, 15, 0, 6, 1, 1, 0, 0, 1, 1]' : 0.110136}", "{'[5, 5, 0, 0, 0, 3, 0, 0, 0, 15, 0, 6, 1, 1, 0, 0, 1, 1]' : 0.110383}", "{'[5, 5, 0, 0, 0, 3, 0, 0, 0, 15, 0, 6, 1, 1, 0, 0, 1, 1]' : 0.110511}", "{'[5, 5, 0, 0, 0, 3, 0, 0, 0, 15, 0, 6, 1, 1, 0, 0, 1, 1]' : 0.110445}", "{'[5, 5, 0, 0, 0, 3, 0, 0, 0, 15, 0, 6, 1, 1, 0, 0, 1, 1]' : 0.110112}", "{'[5, 5, 0, 0, 0, 3, 0, 0, 0, 15, 0, 6, 1, 1, 0, 0, 1, 1]' : 0.110703}", "{'[5, 5, 0, 0, 0, 3, 0, 0, 0, 15, 0, 6, 1, 1, 0, 0, 1, 1]' : 0.110325}", "{'[5, 5, 0, 0, 0, 3, 0, 0, 0, 15, 0, 6, 1, 1, 0, 0, 1, 1]' : 0.110326}", "{'[5, 5, 0, 0, 0, 3, 0, 0, 0, 15, 0, 6, 1, 1, 0, 0, 1, 1]' : 0.110181}", "{'[5, 5, 0, 0, 0, 3, 0, 0, 0, 15, 0, 6, 1, 1, 0, 0, 1, 1]' : 0.110329}", "{'[5, 5, 0, 0, 0, 3, 0, 0, 0, 15, 0, 6, 1, 1, 0, 0, 1, 1]' : 0.110318}", "{'[5, 5, 0, 0, 0, 3, 0, 0, 0, 15, 0, 6, 1, 1, 0, 0, 1, 1]' : 0.111078}", "{'[5, 5, 0, 0, 0, 3, 0, 0, 0, 15, 0, 6, 1, 1, 0, 0, 1, 1]' : 0.11024}", "{'[5, 5, 0, 0, 0, 3, 0, 0, 0, 15, 0, 6, 1, 1, 0, 0, 1, 1]' : 0.110312}", "{'[5, 5, 0, 0, 0, 3, 0, 0, 0, 15, 0, 6, 1, 1, 0, 0, 1, 1]' : 0.110372}", "{'[5, 5, 0, 0, 0, 3, 0, 0, 0, 15, 0, 6, 1, 1, 0, 0, 1, 1]' : 0.110305}", "{'[5, 5, 0, 0, 0, 3, 0, 0, 0, 15, 0, 6, 1, 1, 0, 0, 1, 1]' : 0.110169}", "{'[5, 5, 0, 0, 0, 3, 0, 0, 0, 15, 0, 6, 1, 1, 0, 0, 1, 1]' : 0.11029}", "{'[5, 5, 0, 0, 0, 3, 0, 0, 0, 15, 0, 6, 1, 1, 0, 0, 1, 1]' : 0.110251}", "{'[5, 5, 0, 0, 0, 3, 0, 0, 0, 15, 0, 6, 1, 1, 0, 0, 1, 1]' : 0.110285}", "{'[5, 5, 0, 0, 0, 3, 0, 0, 0, 15, 0, 6, 1, 1, 0, 0, 1, 1]' : 0.110118}", "{'[5, 5, 0, 0, 0, 3, 0, 0, 0, 15, 0, 6, 1, 1, 0, 0, 1, 1]' : 0.110335}", "{'[5, 5, 0, 0, 0, 3, 0, 0, 0, 15, 0, 6, 1, 1, 0, 0, 1, 1]' : 0.110431}", "{'[5, 5, 0, 0, 0, 3, 0, 0, 0, 15, 0, 6, 1, 1, 0, 0, 1, 1]' : 0.110679}"]
returning from 'run': {'[5, 5, 0, 0, 0, 3, 0, 0, 0, 15, 0, 6, 1, 1, 0, 0, 1, 1]': ([0.130646, 0.130699, 0.128839, 0.11138, 0.110946, 0.110305, 0.110136, 0.110383, 0.110511, 0.110445, 0.110112, 0.110703, 0.110325, 0.110326, 0.110181, 0.110329, 0.110318, 0.111078, 0.11024, 0.110312, 0.110372, 0.110305, 0.110169, 0.11029, 0.110251, 0.110285, 0.110118, 0.110335, 0.110431, 0.110679], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 5, 0, 0, 0, 3, 0, 0, 0, 15, 0, 6, 1, 1, 0, 0, 1, 1]': ([0.130646, 0.130699, 0.128839, 0.11138, 0.110946, 0.110305, 0.110136, 0.110383, 0.110511, 0.110445, 0.110112, 0.110703, 0.110325, 0.110326, 0.110181, 0.110329, 0.110318, 0.111078, 0.11024, 0.110312, 0.110372, 0.110305, 0.110169, 0.11029, 0.110251, 0.110285, 0.110118, 0.110335, 0.110431, 0.110679], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Design Best Point:
[3, 2, 2, 6, 6, 6, 0, 0, 0, 27, 0, 29, 1, 0, 1, 1, 0, 1]
Length of requested configs: 1
Result was on Database, Returning Now
Fixed Factors: {'U_J': 0, 'U_I': 15, 'SCR': 0}
Slowdown (Design Best): 0.5870937424832524
Slowdown (Predicted Best): 0.6901741582521739
Budget: 40/180
Updating Global Best: 0.0955969633333334
Current Best Point: 
[3, 2, 2, 6, 6, 6, 0, 0, 0, 27, 0, 29, 1, 0, 1, 1, 0, 1]
Step 1
Generating valid search space of size 3900 (does not spend evaluations)
Valid coordinates: 780
Valid coordinates: 1560
Valid coordinates: 2340
Tested coordinates: 10000
Valid coordinates: 3120
Valid coordinates: 3900
Valid/Tested configurations: 3900/15043
Generated Search Space:
NULL
Clean Info:
Removed Factors: character(0)

Removed Inverse Factors: [1] "ACOPY_x" "ACOPY_y" "VEC1"    "VEC2"   

New Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'VEC1', 'VEC2']
New Inverse Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_K', 'RT_I', 'RT_J', 'RT_K']
New Fixed Factors: {'U_J': 0, 'U_I': 15, 'SCR': 0}
Full Model:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_K + RT_I + RT_J + RT_K + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Fixed Factors: {'U_J': 0, 'U_I': 15, 'SCR': 0}
Computing D-Optimal Design
Computing D-Optimal Design with 39 experiments
Design Formula:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_K + RT_I + RT_J + RT_K + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Starting "optFederov" run
Using Search Space:
NULL
Data Dimensions: [1] 3900   15

     T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_K RT_I RT_J RT_K VEC1
330     5    6    0    0    6    0       1       0   13   7    0    2    0    1
334     0    0    3    6    1    2       0       0   29  24    1    0    1    0
338     5    3    0    6    3    0       0       1    0   0    0    0    0    0
359     5    0    0    0    6    6       1       0    0  25    0    0    2    1
422     1    5    1    2    6    2       0       0   17   0    0    2    0    1
511     0    6    5    2    5    3       0       0   29  14    0    1    0    1
526     1    3    3    2    2    2       1       1    0   4    0    1    1    1
560     0    0    0    5    3    0       0       0   20   3    0    0    2    1
576     3    1    0    2    6    0       0       1    5   5    2    0    0    1
583     3    2    3    0    6    1       1       0   29  15    0    2    0    0
752     1    2    4    0    1    0       1       1    3  15    1    1    0    1
848     6    2    2    6    0    6       1       0   21   0    0    1    1    1
968     2    4    0    2    3    2       1       0   18  29    1    0    0    0
1112    0    2    4    6    2    2       0       1    4  29    0    2    0    1
1276    1    0    5    5    6    0       1       0    7   0    0    0    2    0
1362    0    2    6    0    6    5       1       1   29   5    0    0    0    1
1439    0    6    0    5    0    6       1       0   11   0    0    0    2    0
1476    3    0    1    2    0    6       0       0    3  21    0    0    0    1
1563    1    0    0    2    0    3       1       1    7   9    0    1    1    1
1691    4    0    3    2    0    0       1       0    0   4    0    2    0    0
1776    3    0    5    1    0    6       0       1   15  28    0    2    0    0
1821    3    6    0    0    0    3       0       1   21   0    2    0    0    0
1842    6    0    0    4    3    0       0       1   27  18    1    0    1    1
1980    4    5    5    0    0    0       1       1   22  26    0    0    1    1
2087    3    3    2    2    1    6       0       0   29  20    0    0    1    0
2310    5    0    0    0    2    2       0       1    8   3    0    1    1    0
2546    6    0    6    6    0    5       1       0    7   7    0    0    2    0
2777    0    4    4    2    2    0       0       1   15   0    2    0    0    1
2881    3    6    4    3    0    4       0       0   25  26    0    1    0    0
3041    0    0    4    0    1    3       1       1    4   4    2    0    0    0
3043    0    5    2    2    6    5       0       0    7   4    1    0    1    1
3070    6    4    6    6    6    5       0       0    0  24    1    0    0    0
3160    5    2    6    6    2    6       1       0   15   0    0    2    0    1
3180    1    6    6    6    5    6       0       1    0   9    0    0    2    1
3424    6    6    4    0    0    6       1       1   26   0    1    1    0    1
3427    3    0    1    6    6    3       1       1   29  29    2    0    0    1
3460    6    4    5    4    6    4       0       1   29   0    1    0    0    0
3599    0    2    0    6    0    1       1       1   26  17    1    1    0    1
3879    6    4    5    0    2    0       1       0    0   0    1    1    0    1
     VEC2
330     0
334     1
338     1
359     0
422     0
511     0
526     0
560     1
576     1
583     1
752     0
848     1
968     1
1112    0
1276    0
1362    0
1439    1
1476    1
1563    1
1691    0
1776    1
1821    0
1842    0
1980    1
2087    0
2310    1
2546    0
2777    0
2881    0
3041    1
3043    1
3070    0
3160    1
3180    1
3424    1
3427    0
3460    1
3599    1
3879    1

D-Efficiency Approximation: [1] 0.408

Measuring design of size 39
Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Length of requested configs: 1
Code stats:
        Number of loops: 	62
        Max loop nest depth: 	5
        Additions: 		5317
        Multiplications: 	1394
        Divisions: 		0
        Logical: 		0
        Reads: 			8065
        Writes: 		873
        Comparisons:		62
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest48.exe __orio_perftest48.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest48.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest48.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest48.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest48.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	57
        Max loop nest depth: 	5
        Additions: 		6040
        Multiplications: 	1750
        Divisions: 		0
        Logical: 		0
        Reads: 			9427
        Writes: 		1098
        Comparisons:		57
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest49.exe __orio_perftest49.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest49.exe  
Program Test Output: 
{'[0, 0, 3, 6, 1, 2, 0, 0, 29, 15, 0, 24, 1, 0, 1, 0, 0, 1]' : 0.114218}
{'[0, 0, 3, 6, 1, 2, 0, 0, 29, 15, 0, 24, 1, 0, 1, 0, 0, 1]' : 0.112483}
{'[0, 0, 3, 6, 1, 2, 0, 0, 29, 15, 0, 24, 1, 0, 1, 0, 0, 1]' : 0.115885}
{'[0, 0, 3, 6, 1, 2, 0, 0, 29, 15, 0, 24, 1, 0, 1, 0, 0, 1]' : 0.115921}
{'[0, 0, 3, 6, 1, 2, 0, 0, 29, 15, 0, 24, 1, 0, 1, 0, 0, 1]' : 0.115962}
{'[0, 0, 3, 6, 1, 2, 0, 0, 29, 15, 0, 24, 1, 0, 1, 0, 0, 1]' : 0.116028}
{'[0, 0, 3, 6, 1, 2, 0, 0, 29, 15, 0, 24, 1, 0, 1, 0, 0, 1]' : 0.116413}
{'[0, 0, 3, 6, 1, 2, 0, 0, 29, 15, 0, 24, 1, 0, 1, 0, 0, 1]' : 0.115851}
{'[0, 0, 3, 6, 1, 2, 0, 0, 29, 15, 0, 24, 1, 0, 1, 0, 0, 1]' : 0.115895}
{'[0, 0, 3, 6, 1, 2, 0, 0, 29, 15, 0, 24, 1, 0, 1, 0, 0, 1]' : 0.115935}
{'[0, 0, 3, 6, 1, 2, 0, 0, 29, 15, 0, 24, 1, 0, 1, 0, 0, 1]' : 0.11604}
{'[0, 0, 3, 6, 1, 2, 0, 0, 29, 15, 0, 24, 1, 0, 1, 0, 0, 1]' : 0.115853}
{'[0, 0, 3, 6, 1, 2, 0, 0, 29, 15, 0, 24, 1, 0, 1, 0, 0, 1]' : 0.115841}
{'[0, 0, 3, 6, 1, 2, 0, 0, 29, 15, 0, 24, 1, 0, 1, 0, 0, 1]' : 0.115859}
{'[0, 0, 3, 6, 1, 2, 0, 0, 29, 15, 0, 24, 1, 0, 1, 0, 0, 1]' : 0.115939}
{'[0, 0, 3, 6, 1, 2, 0, 0, 29, 15, 0, 24, 1, 0, 1, 0, 0, 1]' : 0.115968}
{'[0, 0, 3, 6, 1, 2, 0, 0, 29, 15, 0, 24, 1, 0, 1, 0, 0, 1]' : 0.115896}
{'[0, 0, 3, 6, 1, 2, 0, 0, 29, 15, 0, 24, 1, 0, 1, 0, 0, 1]' : 0.115993}
{'[0, 0, 3, 6, 1, 2, 0, 0, 29, 15, 0, 24, 1, 0, 1, 0, 0, 1]' : 0.115883}
{'[0, 0, 3, 6, 1, 2, 0, 0, 29, 15, 0, 24, 1, 0, 1, 0, 0, 1]' : 0.115964}
{'[0, 0, 3, 6, 1, 2, 0, 0, 29, 15, 0, 24, 1, 0, 1, 0, 0, 1]' : 0.115956}
{'[0, 0, 3, 6, 1, 2, 0, 0, 29, 15, 0, 24, 1, 0, 1, 0, 0, 1]' : 0.115865}
{'[0, 0, 3, 6, 1, 2, 0, 0, 29, 15, 0, 24, 1, 0, 1, 0, 0, 1]' : 0.11581}
{'[0, 0, 3, 6, 1, 2, 0, 0, 29, 15, 0, 24, 1, 0, 1, 0, 0, 1]' : 0.116308}
{'[0, 0, 3, 6, 1, 2, 0, 0, 29, 15, 0, 24, 1, 0, 1, 0, 0, 1]' : 0.116061}
{'[0, 0, 3, 6, 1, 2, 0, 0, 29, 15, 0, 24, 1, 0, 1, 0, 0, 1]' : 0.11593}
{'[0, 0, 3, 6, 1, 2, 0, 0, 29, 15, 0, 24, 1, 0, 1, 0, 0, 1]' : 0.115882}
{'[0, 0, 3, 6, 1, 2, 0, 0, 29, 15, 0, 24, 1, 0, 1, 0, 0, 1]' : 0.115874}
{'[0, 0, 3, 6, 1, 2, 0, 0, 29, 15, 0, 24, 1, 0, 1, 0, 0, 1]' : 0.113626}
{'[0, 0, 3, 6, 1, 2, 0, 0, 29, 15, 0, 24, 1, 0, 1, 0, 0, 1]' : 0.113663}

out:
 ["{'[0, 0, 3, 6, 1, 2, 0, 0, 29, 15, 0, 24, 1, 0, 1, 0, 0, 1]' : 0.114218}", "{'[0, 0, 3, 6, 1, 2, 0, 0, 29, 15, 0, 24, 1, 0, 1, 0, 0, 1]' : 0.112483}", "{'[0, 0, 3, 6, 1, 2, 0, 0, 29, 15, 0, 24, 1, 0, 1, 0, 0, 1]' : 0.115885}", "{'[0, 0, 3, 6, 1, 2, 0, 0, 29, 15, 0, 24, 1, 0, 1, 0, 0, 1]' : 0.115921}", "{'[0, 0, 3, 6, 1, 2, 0, 0, 29, 15, 0, 24, 1, 0, 1, 0, 0, 1]' : 0.115962}", "{'[0, 0, 3, 6, 1, 2, 0, 0, 29, 15, 0, 24, 1, 0, 1, 0, 0, 1]' : 0.116028}", "{'[0, 0, 3, 6, 1, 2, 0, 0, 29, 15, 0, 24, 1, 0, 1, 0, 0, 1]' : 0.116413}", "{'[0, 0, 3, 6, 1, 2, 0, 0, 29, 15, 0, 24, 1, 0, 1, 0, 0, 1]' : 0.115851}", "{'[0, 0, 3, 6, 1, 2, 0, 0, 29, 15, 0, 24, 1, 0, 1, 0, 0, 1]' : 0.115895}", "{'[0, 0, 3, 6, 1, 2, 0, 0, 29, 15, 0, 24, 1, 0, 1, 0, 0, 1]' : 0.115935}", "{'[0, 0, 3, 6, 1, 2, 0, 0, 29, 15, 0, 24, 1, 0, 1, 0, 0, 1]' : 0.11604}", "{'[0, 0, 3, 6, 1, 2, 0, 0, 29, 15, 0, 24, 1, 0, 1, 0, 0, 1]' : 0.115853}", "{'[0, 0, 3, 6, 1, 2, 0, 0, 29, 15, 0, 24, 1, 0, 1, 0, 0, 1]' : 0.115841}", "{'[0, 0, 3, 6, 1, 2, 0, 0, 29, 15, 0, 24, 1, 0, 1, 0, 0, 1]' : 0.115859}", "{'[0, 0, 3, 6, 1, 2, 0, 0, 29, 15, 0, 24, 1, 0, 1, 0, 0, 1]' : 0.115939}", "{'[0, 0, 3, 6, 1, 2, 0, 0, 29, 15, 0, 24, 1, 0, 1, 0, 0, 1]' : 0.115968}", "{'[0, 0, 3, 6, 1, 2, 0, 0, 29, 15, 0, 24, 1, 0, 1, 0, 0, 1]' : 0.115896}", "{'[0, 0, 3, 6, 1, 2, 0, 0, 29, 15, 0, 24, 1, 0, 1, 0, 0, 1]' : 0.115993}", "{'[0, 0, 3, 6, 1, 2, 0, 0, 29, 15, 0, 24, 1, 0, 1, 0, 0, 1]' : 0.115883}", "{'[0, 0, 3, 6, 1, 2, 0, 0, 29, 15, 0, 24, 1, 0, 1, 0, 0, 1]' : 0.115964}", "{'[0, 0, 3, 6, 1, 2, 0, 0, 29, 15, 0, 24, 1, 0, 1, 0, 0, 1]' : 0.115956}", "{'[0, 0, 3, 6, 1, 2, 0, 0, 29, 15, 0, 24, 1, 0, 1, 0, 0, 1]' : 0.115865}", "{'[0, 0, 3, 6, 1, 2, 0, 0, 29, 15, 0, 24, 1, 0, 1, 0, 0, 1]' : 0.11581}", "{'[0, 0, 3, 6, 1, 2, 0, 0, 29, 15, 0, 24, 1, 0, 1, 0, 0, 1]' : 0.116308}", "{'[0, 0, 3, 6, 1, 2, 0, 0, 29, 15, 0, 24, 1, 0, 1, 0, 0, 1]' : 0.116061}", "{'[0, 0, 3, 6, 1, 2, 0, 0, 29, 15, 0, 24, 1, 0, 1, 0, 0, 1]' : 0.11593}", "{'[0, 0, 3, 6, 1, 2, 0, 0, 29, 15, 0, 24, 1, 0, 1, 0, 0, 1]' : 0.115882}", "{'[0, 0, 3, 6, 1, 2, 0, 0, 29, 15, 0, 24, 1, 0, 1, 0, 0, 1]' : 0.115874}", "{'[0, 0, 3, 6, 1, 2, 0, 0, 29, 15, 0, 24, 1, 0, 1, 0, 0, 1]' : 0.113626}", "{'[0, 0, 3, 6, 1, 2, 0, 0, 29, 15, 0, 24, 1, 0, 1, 0, 0, 1]' : 0.113663}"]
returning from 'run': {'[0, 0, 3, 6, 1, 2, 0, 0, 29, 15, 0, 24, 1, 0, 1, 0, 0, 1]': ([0.114218, 0.112483, 0.115885, 0.115921, 0.115962, 0.116028, 0.116413, 0.115851, 0.115895, 0.115935, 0.11604, 0.115853, 0.115841, 0.115859, 0.115939, 0.115968, 0.115896, 0.115993, 0.115883, 0.115964, 0.115956, 0.115865, 0.11581, 0.116308, 0.116061, 0.11593, 0.115882, 0.115874, 0.113626, 0.113663], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 3, 6, 1, 2, 0, 0, 29, 15, 0, 24, 1, 0, 1, 0, 0, 1]': ([0.114218, 0.112483, 0.115885, 0.115921, 0.115962, 0.116028, 0.116413, 0.115851, 0.115895, 0.115935, 0.11604, 0.115853, 0.115841, 0.115859, 0.115939, 0.115968, 0.115896, 0.115993, 0.115883, 0.115964, 0.115956, 0.115865, 0.11581, 0.116308, 0.116061, 0.11593, 0.115882, 0.115874, 0.113626, 0.113663], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	6
        Additions: 		201
        Multiplications: 	68
        Divisions: 		0
        Logical: 		0
        Reads: 			467
        Writes: 		82
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest50.exe __orio_perftest50.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest50.exe  
Program Test Output: 
{'[5, 3, 0, 6, 3, 0, 0, 1, 0, 15, 0, 0, 0, 0, 0, 0, 0, 1]' : 0.140907}
{'[5, 3, 0, 6, 3, 0, 0, 1, 0, 15, 0, 0, 0, 0, 0, 0, 0, 1]' : 0.140817}
{'[5, 3, 0, 6, 3, 0, 0, 1, 0, 15, 0, 0, 0, 0, 0, 0, 0, 1]' : 0.140756}
{'[5, 3, 0, 6, 3, 0, 0, 1, 0, 15, 0, 0, 0, 0, 0, 0, 0, 1]' : 0.137681}
{'[5, 3, 0, 6, 3, 0, 0, 1, 0, 15, 0, 0, 0, 0, 0, 0, 0, 1]' : 0.121291}
{'[5, 3, 0, 6, 3, 0, 0, 1, 0, 15, 0, 0, 0, 0, 0, 0, 0, 1]' : 0.121122}
{'[5, 3, 0, 6, 3, 0, 0, 1, 0, 15, 0, 0, 0, 0, 0, 0, 0, 1]' : 0.121011}
{'[5, 3, 0, 6, 3, 0, 0, 1, 0, 15, 0, 0, 0, 0, 0, 0, 0, 1]' : 0.121088}
{'[5, 3, 0, 6, 3, 0, 0, 1, 0, 15, 0, 0, 0, 0, 0, 0, 0, 1]' : 0.121798}
{'[5, 3, 0, 6, 3, 0, 0, 1, 0, 15, 0, 0, 0, 0, 0, 0, 0, 1]' : 0.121025}
{'[5, 3, 0, 6, 3, 0, 0, 1, 0, 15, 0, 0, 0, 0, 0, 0, 0, 1]' : 0.121058}
{'[5, 3, 0, 6, 3, 0, 0, 1, 0, 15, 0, 0, 0, 0, 0, 0, 0, 1]' : 0.121065}
{'[5, 3, 0, 6, 3, 0, 0, 1, 0, 15, 0, 0, 0, 0, 0, 0, 0, 1]' : 0.121084}
{'[5, 3, 0, 6, 3, 0, 0, 1, 0, 15, 0, 0, 0, 0, 0, 0, 0, 1]' : 0.12132}
{'[5, 3, 0, 6, 3, 0, 0, 1, 0, 15, 0, 0, 0, 0, 0, 0, 0, 1]' : 0.121104}
{'[5, 3, 0, 6, 3, 0, 0, 1, 0, 15, 0, 0, 0, 0, 0, 0, 0, 1]' : 0.121059}
{'[5, 3, 0, 6, 3, 0, 0, 1, 0, 15, 0, 0, 0, 0, 0, 0, 0, 1]' : 0.121069}
{'[5, 3, 0, 6, 3, 0, 0, 1, 0, 15, 0, 0, 0, 0, 0, 0, 0, 1]' : 0.121068}
{'[5, 3, 0, 6, 3, 0, 0, 1, 0, 15, 0, 0, 0, 0, 0, 0, 0, 1]' : 0.121075}
{'[5, 3, 0, 6, 3, 0, 0, 1, 0, 15, 0, 0, 0, 0, 0, 0, 0, 1]' : 0.12104}
{'[5, 3, 0, 6, 3, 0, 0, 1, 0, 15, 0, 0, 0, 0, 0, 0, 0, 1]' : 0.121679}
{'[5, 3, 0, 6, 3, 0, 0, 1, 0, 15, 0, 0, 0, 0, 0, 0, 0, 1]' : 0.121034}
{'[5, 3, 0, 6, 3, 0, 0, 1, 0, 15, 0, 0, 0, 0, 0, 0, 0, 1]' : 0.1211}
{'[5, 3, 0, 6, 3, 0, 0, 1, 0, 15, 0, 0, 0, 0, 0, 0, 0, 1]' : 0.121061}
{'[5, 3, 0, 6, 3, 0, 0, 1, 0, 15, 0, 0, 0, 0, 0, 0, 0, 1]' : 0.120978}
{'[5, 3, 0, 6, 3, 0, 0, 1, 0, 15, 0, 0, 0, 0, 0, 0, 0, 1]' : 0.121022}
{'[5, 3, 0, 6, 3, 0, 0, 1, 0, 15, 0, 0, 0, 0, 0, 0, 0, 1]' : 0.121321}
{'[5, 3, 0, 6, 3, 0, 0, 1, 0, 15, 0, 0, 0, 0, 0, 0, 0, 1]' : 0.121028}
{'[5, 3, 0, 6, 3, 0, 0, 1, 0, 15, 0, 0, 0, 0, 0, 0, 0, 1]' : 0.121028}
{'[5, 3, 0, 6, 3, 0, 0, 1, 0, 15, 0, 0, 0, 0, 0, 0, 0, 1]' : 0.121196}

out:
 ["{'[5, 3, 0, 6, 3, 0, 0, 1, 0, 15, 0, 0, 0, 0, 0, 0, 0, 1]' : 0.140907}", "{'[5, 3, 0, 6, 3, 0, 0, 1, 0, 15, 0, 0, 0, 0, 0, 0, 0, 1]' : 0.140817}", "{'[5, 3, 0, 6, 3, 0, 0, 1, 0, 15, 0, 0, 0, 0, 0, 0, 0, 1]' : 0.140756}", "{'[5, 3, 0, 6, 3, 0, 0, 1, 0, 15, 0, 0, 0, 0, 0, 0, 0, 1]' : 0.137681}", "{'[5, 3, 0, 6, 3, 0, 0, 1, 0, 15, 0, 0, 0, 0, 0, 0, 0, 1]' : 0.121291}", "{'[5, 3, 0, 6, 3, 0, 0, 1, 0, 15, 0, 0, 0, 0, 0, 0, 0, 1]' : 0.121122}", "{'[5, 3, 0, 6, 3, 0, 0, 1, 0, 15, 0, 0, 0, 0, 0, 0, 0, 1]' : 0.121011}", "{'[5, 3, 0, 6, 3, 0, 0, 1, 0, 15, 0, 0, 0, 0, 0, 0, 0, 1]' : 0.121088}", "{'[5, 3, 0, 6, 3, 0, 0, 1, 0, 15, 0, 0, 0, 0, 0, 0, 0, 1]' : 0.121798}", "{'[5, 3, 0, 6, 3, 0, 0, 1, 0, 15, 0, 0, 0, 0, 0, 0, 0, 1]' : 0.121025}", "{'[5, 3, 0, 6, 3, 0, 0, 1, 0, 15, 0, 0, 0, 0, 0, 0, 0, 1]' : 0.121058}", "{'[5, 3, 0, 6, 3, 0, 0, 1, 0, 15, 0, 0, 0, 0, 0, 0, 0, 1]' : 0.121065}", "{'[5, 3, 0, 6, 3, 0, 0, 1, 0, 15, 0, 0, 0, 0, 0, 0, 0, 1]' : 0.121084}", "{'[5, 3, 0, 6, 3, 0, 0, 1, 0, 15, 0, 0, 0, 0, 0, 0, 0, 1]' : 0.12132}", "{'[5, 3, 0, 6, 3, 0, 0, 1, 0, 15, 0, 0, 0, 0, 0, 0, 0, 1]' : 0.121104}", "{'[5, 3, 0, 6, 3, 0, 0, 1, 0, 15, 0, 0, 0, 0, 0, 0, 0, 1]' : 0.121059}", "{'[5, 3, 0, 6, 3, 0, 0, 1, 0, 15, 0, 0, 0, 0, 0, 0, 0, 1]' : 0.121069}", "{'[5, 3, 0, 6, 3, 0, 0, 1, 0, 15, 0, 0, 0, 0, 0, 0, 0, 1]' : 0.121068}", "{'[5, 3, 0, 6, 3, 0, 0, 1, 0, 15, 0, 0, 0, 0, 0, 0, 0, 1]' : 0.121075}", "{'[5, 3, 0, 6, 3, 0, 0, 1, 0, 15, 0, 0, 0, 0, 0, 0, 0, 1]' : 0.12104}", "{'[5, 3, 0, 6, 3, 0, 0, 1, 0, 15, 0, 0, 0, 0, 0, 0, 0, 1]' : 0.121679}", "{'[5, 3, 0, 6, 3, 0, 0, 1, 0, 15, 0, 0, 0, 0, 0, 0, 0, 1]' : 0.121034}", "{'[5, 3, 0, 6, 3, 0, 0, 1, 0, 15, 0, 0, 0, 0, 0, 0, 0, 1]' : 0.1211}", "{'[5, 3, 0, 6, 3, 0, 0, 1, 0, 15, 0, 0, 0, 0, 0, 0, 0, 1]' : 0.121061}", "{'[5, 3, 0, 6, 3, 0, 0, 1, 0, 15, 0, 0, 0, 0, 0, 0, 0, 1]' : 0.120978}", "{'[5, 3, 0, 6, 3, 0, 0, 1, 0, 15, 0, 0, 0, 0, 0, 0, 0, 1]' : 0.121022}", "{'[5, 3, 0, 6, 3, 0, 0, 1, 0, 15, 0, 0, 0, 0, 0, 0, 0, 1]' : 0.121321}", "{'[5, 3, 0, 6, 3, 0, 0, 1, 0, 15, 0, 0, 0, 0, 0, 0, 0, 1]' : 0.121028}", "{'[5, 3, 0, 6, 3, 0, 0, 1, 0, 15, 0, 0, 0, 0, 0, 0, 0, 1]' : 0.121028}", "{'[5, 3, 0, 6, 3, 0, 0, 1, 0, 15, 0, 0, 0, 0, 0, 0, 0, 1]' : 0.121196}"]
returning from 'run': {'[5, 3, 0, 6, 3, 0, 0, 1, 0, 15, 0, 0, 0, 0, 0, 0, 0, 1]': ([0.140907, 0.140817, 0.140756, 0.137681, 0.121291, 0.121122, 0.121011, 0.121088, 0.121798, 0.121025, 0.121058, 0.121065, 0.121084, 0.12132, 0.121104, 0.121059, 0.121069, 0.121068, 0.121075, 0.12104, 0.121679, 0.121034, 0.1211, 0.121061, 0.120978, 0.121022, 0.121321, 0.121028, 0.121028, 0.121196], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 3, 0, 6, 3, 0, 0, 1, 0, 15, 0, 0, 0, 0, 0, 0, 0, 1]': ([0.140907, 0.140817, 0.140756, 0.137681, 0.121291, 0.121122, 0.121011, 0.121088, 0.121798, 0.121025, 0.121058, 0.121065, 0.121084, 0.12132, 0.121104, 0.121059, 0.121069, 0.121068, 0.121075, 0.12104, 0.121679, 0.121034, 0.1211, 0.121061, 0.120978, 0.121022, 0.121321, 0.121028, 0.121028, 0.121196], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	63
        Max loop nest depth: 	4
        Additions: 		7125
        Multiplications: 	2040
        Divisions: 		0
        Logical: 		0
        Reads: 			10841
        Writes: 		1182
        Comparisons:		63
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest51.exe __orio_perftest51.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest51.exe  
Program Test Output: 
{'[5, 0, 0, 0, 6, 6, 1, 0, 0, 15, 0, 25, 0, 0, 2, 0, 1, 0]' : 0.189251}
{'[5, 0, 0, 0, 6, 6, 1, 0, 0, 15, 0, 25, 0, 0, 2, 0, 1, 0]' : 0.189559}
{'[5, 0, 0, 0, 6, 6, 1, 0, 0, 15, 0, 25, 0, 0, 2, 0, 1, 0]' : 0.178595}
{'[5, 0, 0, 0, 6, 6, 1, 0, 0, 15, 0, 25, 0, 0, 2, 0, 1, 0]' : 0.1668}
{'[5, 0, 0, 0, 6, 6, 1, 0, 0, 15, 0, 25, 0, 0, 2, 0, 1, 0]' : 0.166698}
{'[5, 0, 0, 0, 6, 6, 1, 0, 0, 15, 0, 25, 0, 0, 2, 0, 1, 0]' : 0.166925}
{'[5, 0, 0, 0, 6, 6, 1, 0, 0, 15, 0, 25, 0, 0, 2, 0, 1, 0]' : 0.170481}
{'[5, 0, 0, 0, 6, 6, 1, 0, 0, 15, 0, 25, 0, 0, 2, 0, 1, 0]' : 0.171642}
{'[5, 0, 0, 0, 6, 6, 1, 0, 0, 15, 0, 25, 0, 0, 2, 0, 1, 0]' : 0.170346}
{'[5, 0, 0, 0, 6, 6, 1, 0, 0, 15, 0, 25, 0, 0, 2, 0, 1, 0]' : 0.167911}
{'[5, 0, 0, 0, 6, 6, 1, 0, 0, 15, 0, 25, 0, 0, 2, 0, 1, 0]' : 0.167453}
{'[5, 0, 0, 0, 6, 6, 1, 0, 0, 15, 0, 25, 0, 0, 2, 0, 1, 0]' : 0.16752}
{'[5, 0, 0, 0, 6, 6, 1, 0, 0, 15, 0, 25, 0, 0, 2, 0, 1, 0]' : 0.16358}
{'[5, 0, 0, 0, 6, 6, 1, 0, 0, 15, 0, 25, 0, 0, 2, 0, 1, 0]' : 0.163186}
{'[5, 0, 0, 0, 6, 6, 1, 0, 0, 15, 0, 25, 0, 0, 2, 0, 1, 0]' : 0.163075}
{'[5, 0, 0, 0, 6, 6, 1, 0, 0, 15, 0, 25, 0, 0, 2, 0, 1, 0]' : 0.167075}
{'[5, 0, 0, 0, 6, 6, 1, 0, 0, 15, 0, 25, 0, 0, 2, 0, 1, 0]' : 0.170225}
{'[5, 0, 0, 0, 6, 6, 1, 0, 0, 15, 0, 25, 0, 0, 2, 0, 1, 0]' : 0.164312}
{'[5, 0, 0, 0, 6, 6, 1, 0, 0, 15, 0, 25, 0, 0, 2, 0, 1, 0]' : 0.167307}
{'[5, 0, 0, 0, 6, 6, 1, 0, 0, 15, 0, 25, 0, 0, 2, 0, 1, 0]' : 0.167682}
{'[5, 0, 0, 0, 6, 6, 1, 0, 0, 15, 0, 25, 0, 0, 2, 0, 1, 0]' : 0.164}
{'[5, 0, 0, 0, 6, 6, 1, 0, 0, 15, 0, 25, 0, 0, 2, 0, 1, 0]' : 0.167394}
{'[5, 0, 0, 0, 6, 6, 1, 0, 0, 15, 0, 25, 0, 0, 2, 0, 1, 0]' : 0.167647}
{'[5, 0, 0, 0, 6, 6, 1, 0, 0, 15, 0, 25, 0, 0, 2, 0, 1, 0]' : 0.163856}
{'[5, 0, 0, 0, 6, 6, 1, 0, 0, 15, 0, 25, 0, 0, 2, 0, 1, 0]' : 0.17135}
{'[5, 0, 0, 0, 6, 6, 1, 0, 0, 15, 0, 25, 0, 0, 2, 0, 1, 0]' : 0.16864}
{'[5, 0, 0, 0, 6, 6, 1, 0, 0, 15, 0, 25, 0, 0, 2, 0, 1, 0]' : 0.165684}
{'[5, 0, 0, 0, 6, 6, 1, 0, 0, 15, 0, 25, 0, 0, 2, 0, 1, 0]' : 0.164153}
{'[5, 0, 0, 0, 6, 6, 1, 0, 0, 15, 0, 25, 0, 0, 2, 0, 1, 0]' : 0.162912}
{'[5, 0, 0, 0, 6, 6, 1, 0, 0, 15, 0, 25, 0, 0, 2, 0, 1, 0]' : 0.163456}

out:
 ["{'[5, 0, 0, 0, 6, 6, 1, 0, 0, 15, 0, 25, 0, 0, 2, 0, 1, 0]' : 0.189251}", "{'[5, 0, 0, 0, 6, 6, 1, 0, 0, 15, 0, 25, 0, 0, 2, 0, 1, 0]' : 0.189559}", "{'[5, 0, 0, 0, 6, 6, 1, 0, 0, 15, 0, 25, 0, 0, 2, 0, 1, 0]' : 0.178595}", "{'[5, 0, 0, 0, 6, 6, 1, 0, 0, 15, 0, 25, 0, 0, 2, 0, 1, 0]' : 0.1668}", "{'[5, 0, 0, 0, 6, 6, 1, 0, 0, 15, 0, 25, 0, 0, 2, 0, 1, 0]' : 0.166698}", "{'[5, 0, 0, 0, 6, 6, 1, 0, 0, 15, 0, 25, 0, 0, 2, 0, 1, 0]' : 0.166925}", "{'[5, 0, 0, 0, 6, 6, 1, 0, 0, 15, 0, 25, 0, 0, 2, 0, 1, 0]' : 0.170481}", "{'[5, 0, 0, 0, 6, 6, 1, 0, 0, 15, 0, 25, 0, 0, 2, 0, 1, 0]' : 0.171642}", "{'[5, 0, 0, 0, 6, 6, 1, 0, 0, 15, 0, 25, 0, 0, 2, 0, 1, 0]' : 0.170346}", "{'[5, 0, 0, 0, 6, 6, 1, 0, 0, 15, 0, 25, 0, 0, 2, 0, 1, 0]' : 0.167911}", "{'[5, 0, 0, 0, 6, 6, 1, 0, 0, 15, 0, 25, 0, 0, 2, 0, 1, 0]' : 0.167453}", "{'[5, 0, 0, 0, 6, 6, 1, 0, 0, 15, 0, 25, 0, 0, 2, 0, 1, 0]' : 0.16752}", "{'[5, 0, 0, 0, 6, 6, 1, 0, 0, 15, 0, 25, 0, 0, 2, 0, 1, 0]' : 0.16358}", "{'[5, 0, 0, 0, 6, 6, 1, 0, 0, 15, 0, 25, 0, 0, 2, 0, 1, 0]' : 0.163186}", "{'[5, 0, 0, 0, 6, 6, 1, 0, 0, 15, 0, 25, 0, 0, 2, 0, 1, 0]' : 0.163075}", "{'[5, 0, 0, 0, 6, 6, 1, 0, 0, 15, 0, 25, 0, 0, 2, 0, 1, 0]' : 0.167075}", "{'[5, 0, 0, 0, 6, 6, 1, 0, 0, 15, 0, 25, 0, 0, 2, 0, 1, 0]' : 0.170225}", "{'[5, 0, 0, 0, 6, 6, 1, 0, 0, 15, 0, 25, 0, 0, 2, 0, 1, 0]' : 0.164312}", "{'[5, 0, 0, 0, 6, 6, 1, 0, 0, 15, 0, 25, 0, 0, 2, 0, 1, 0]' : 0.167307}", "{'[5, 0, 0, 0, 6, 6, 1, 0, 0, 15, 0, 25, 0, 0, 2, 0, 1, 0]' : 0.167682}", "{'[5, 0, 0, 0, 6, 6, 1, 0, 0, 15, 0, 25, 0, 0, 2, 0, 1, 0]' : 0.164}", "{'[5, 0, 0, 0, 6, 6, 1, 0, 0, 15, 0, 25, 0, 0, 2, 0, 1, 0]' : 0.167394}", "{'[5, 0, 0, 0, 6, 6, 1, 0, 0, 15, 0, 25, 0, 0, 2, 0, 1, 0]' : 0.167647}", "{'[5, 0, 0, 0, 6, 6, 1, 0, 0, 15, 0, 25, 0, 0, 2, 0, 1, 0]' : 0.163856}", "{'[5, 0, 0, 0, 6, 6, 1, 0, 0, 15, 0, 25, 0, 0, 2, 0, 1, 0]' : 0.17135}", "{'[5, 0, 0, 0, 6, 6, 1, 0, 0, 15, 0, 25, 0, 0, 2, 0, 1, 0]' : 0.16864}", "{'[5, 0, 0, 0, 6, 6, 1, 0, 0, 15, 0, 25, 0, 0, 2, 0, 1, 0]' : 0.165684}", "{'[5, 0, 0, 0, 6, 6, 1, 0, 0, 15, 0, 25, 0, 0, 2, 0, 1, 0]' : 0.164153}", "{'[5, 0, 0, 0, 6, 6, 1, 0, 0, 15, 0, 25, 0, 0, 2, 0, 1, 0]' : 0.162912}", "{'[5, 0, 0, 0, 6, 6, 1, 0, 0, 15, 0, 25, 0, 0, 2, 0, 1, 0]' : 0.163456}"]
returning from 'run': {'[5, 0, 0, 0, 6, 6, 1, 0, 0, 15, 0, 25, 0, 0, 2, 0, 1, 0]': ([0.189251, 0.189559, 0.178595, 0.1668, 0.166698, 0.166925, 0.170481, 0.171642, 0.170346, 0.167911, 0.167453, 0.16752, 0.16358, 0.163186, 0.163075, 0.167075, 0.170225, 0.164312, 0.167307, 0.167682, 0.164, 0.167394, 0.167647, 0.163856, 0.17135, 0.16864, 0.165684, 0.164153, 0.162912, 0.163456], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 0, 0, 0, 6, 6, 1, 0, 0, 15, 0, 25, 0, 0, 2, 0, 1, 0]': ([0.189251, 0.189559, 0.178595, 0.1668, 0.166698, 0.166925, 0.170481, 0.171642, 0.170346, 0.167911, 0.167453, 0.16752, 0.16358, 0.163186, 0.163075, 0.167075, 0.170225, 0.164312, 0.167307, 0.167682, 0.164, 0.167394, 0.167647, 0.163856, 0.17135, 0.16864, 0.165684, 0.164153, 0.162912, 0.163456], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	6
        Additions: 		3825
        Multiplications: 	1156
        Divisions: 		0
        Logical: 		0
        Reads: 			5990
        Writes: 		657
        Comparisons:		20
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest52.exe __orio_perftest52.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest52.exe  
Program Test Output: 
{'[1, 5, 1, 2, 6, 2, 0, 0, 17, 15, 0, 0, 0, 2, 0, 0, 1, 0]' : 0.146983}
{'[1, 5, 1, 2, 6, 2, 0, 0, 17, 15, 0, 0, 0, 2, 0, 0, 1, 0]' : 0.147265}
{'[1, 5, 1, 2, 6, 2, 0, 0, 17, 15, 0, 0, 0, 2, 0, 0, 1, 0]' : 0.147776}
{'[1, 5, 1, 2, 6, 2, 0, 0, 17, 15, 0, 0, 0, 2, 0, 0, 1, 0]' : 0.147017}
{'[1, 5, 1, 2, 6, 2, 0, 0, 17, 15, 0, 0, 0, 2, 0, 0, 1, 0]' : 0.147537}
{'[1, 5, 1, 2, 6, 2, 0, 0, 17, 15, 0, 0, 0, 2, 0, 0, 1, 0]' : 0.147511}
{'[1, 5, 1, 2, 6, 2, 0, 0, 17, 15, 0, 0, 0, 2, 0, 0, 1, 0]' : 0.147854}
{'[1, 5, 1, 2, 6, 2, 0, 0, 17, 15, 0, 0, 0, 2, 0, 0, 1, 0]' : 0.147256}
{'[1, 5, 1, 2, 6, 2, 0, 0, 17, 15, 0, 0, 0, 2, 0, 0, 1, 0]' : 0.147701}
{'[1, 5, 1, 2, 6, 2, 0, 0, 17, 15, 0, 0, 0, 2, 0, 0, 1, 0]' : 0.147652}
{'[1, 5, 1, 2, 6, 2, 0, 0, 17, 15, 0, 0, 0, 2, 0, 0, 1, 0]' : 0.145604}
{'[1, 5, 1, 2, 6, 2, 0, 0, 17, 15, 0, 0, 0, 2, 0, 0, 1, 0]' : 0.146439}
{'[1, 5, 1, 2, 6, 2, 0, 0, 17, 15, 0, 0, 0, 2, 0, 0, 1, 0]' : 0.146693}
{'[1, 5, 1, 2, 6, 2, 0, 0, 17, 15, 0, 0, 0, 2, 0, 0, 1, 0]' : 0.14582}
{'[1, 5, 1, 2, 6, 2, 0, 0, 17, 15, 0, 0, 0, 2, 0, 0, 1, 0]' : 0.145578}
{'[1, 5, 1, 2, 6, 2, 0, 0, 17, 15, 0, 0, 0, 2, 0, 0, 1, 0]' : 0.146179}
{'[1, 5, 1, 2, 6, 2, 0, 0, 17, 15, 0, 0, 0, 2, 0, 0, 1, 0]' : 0.146956}
{'[1, 5, 1, 2, 6, 2, 0, 0, 17, 15, 0, 0, 0, 2, 0, 0, 1, 0]' : 0.145721}
{'[1, 5, 1, 2, 6, 2, 0, 0, 17, 15, 0, 0, 0, 2, 0, 0, 1, 0]' : 0.14627}
{'[1, 5, 1, 2, 6, 2, 0, 0, 17, 15, 0, 0, 0, 2, 0, 0, 1, 0]' : 0.146525}
{'[1, 5, 1, 2, 6, 2, 0, 0, 17, 15, 0, 0, 0, 2, 0, 0, 1, 0]' : 0.146062}
{'[1, 5, 1, 2, 6, 2, 0, 0, 17, 15, 0, 0, 0, 2, 0, 0, 1, 0]' : 0.145518}
{'[1, 5, 1, 2, 6, 2, 0, 0, 17, 15, 0, 0, 0, 2, 0, 0, 1, 0]' : 0.14553}
{'[1, 5, 1, 2, 6, 2, 0, 0, 17, 15, 0, 0, 0, 2, 0, 0, 1, 0]' : 0.145776}
{'[1, 5, 1, 2, 6, 2, 0, 0, 17, 15, 0, 0, 0, 2, 0, 0, 1, 0]' : 0.145901}
{'[1, 5, 1, 2, 6, 2, 0, 0, 17, 15, 0, 0, 0, 2, 0, 0, 1, 0]' : 0.145582}
{'[1, 5, 1, 2, 6, 2, 0, 0, 17, 15, 0, 0, 0, 2, 0, 0, 1, 0]' : 0.146642}
{'[1, 5, 1, 2, 6, 2, 0, 0, 17, 15, 0, 0, 0, 2, 0, 0, 1, 0]' : 0.145984}
{'[1, 5, 1, 2, 6, 2, 0, 0, 17, 15, 0, 0, 0, 2, 0, 0, 1, 0]' : 0.145935}
{'[1, 5, 1, 2, 6, 2, 0, 0, 17, 15, 0, 0, 0, 2, 0, 0, 1, 0]' : 0.146342}

out:
 ["{'[1, 5, 1, 2, 6, 2, 0, 0, 17, 15, 0, 0, 0, 2, 0, 0, 1, 0]' : 0.146983}", "{'[1, 5, 1, 2, 6, 2, 0, 0, 17, 15, 0, 0, 0, 2, 0, 0, 1, 0]' : 0.147265}", "{'[1, 5, 1, 2, 6, 2, 0, 0, 17, 15, 0, 0, 0, 2, 0, 0, 1, 0]' : 0.147776}", "{'[1, 5, 1, 2, 6, 2, 0, 0, 17, 15, 0, 0, 0, 2, 0, 0, 1, 0]' : 0.147017}", "{'[1, 5, 1, 2, 6, 2, 0, 0, 17, 15, 0, 0, 0, 2, 0, 0, 1, 0]' : 0.147537}", "{'[1, 5, 1, 2, 6, 2, 0, 0, 17, 15, 0, 0, 0, 2, 0, 0, 1, 0]' : 0.147511}", "{'[1, 5, 1, 2, 6, 2, 0, 0, 17, 15, 0, 0, 0, 2, 0, 0, 1, 0]' : 0.147854}", "{'[1, 5, 1, 2, 6, 2, 0, 0, 17, 15, 0, 0, 0, 2, 0, 0, 1, 0]' : 0.147256}", "{'[1, 5, 1, 2, 6, 2, 0, 0, 17, 15, 0, 0, 0, 2, 0, 0, 1, 0]' : 0.147701}", "{'[1, 5, 1, 2, 6, 2, 0, 0, 17, 15, 0, 0, 0, 2, 0, 0, 1, 0]' : 0.147652}", "{'[1, 5, 1, 2, 6, 2, 0, 0, 17, 15, 0, 0, 0, 2, 0, 0, 1, 0]' : 0.145604}", "{'[1, 5, 1, 2, 6, 2, 0, 0, 17, 15, 0, 0, 0, 2, 0, 0, 1, 0]' : 0.146439}", "{'[1, 5, 1, 2, 6, 2, 0, 0, 17, 15, 0, 0, 0, 2, 0, 0, 1, 0]' : 0.146693}", "{'[1, 5, 1, 2, 6, 2, 0, 0, 17, 15, 0, 0, 0, 2, 0, 0, 1, 0]' : 0.14582}", "{'[1, 5, 1, 2, 6, 2, 0, 0, 17, 15, 0, 0, 0, 2, 0, 0, 1, 0]' : 0.145578}", "{'[1, 5, 1, 2, 6, 2, 0, 0, 17, 15, 0, 0, 0, 2, 0, 0, 1, 0]' : 0.146179}", "{'[1, 5, 1, 2, 6, 2, 0, 0, 17, 15, 0, 0, 0, 2, 0, 0, 1, 0]' : 0.146956}", "{'[1, 5, 1, 2, 6, 2, 0, 0, 17, 15, 0, 0, 0, 2, 0, 0, 1, 0]' : 0.145721}", "{'[1, 5, 1, 2, 6, 2, 0, 0, 17, 15, 0, 0, 0, 2, 0, 0, 1, 0]' : 0.14627}", "{'[1, 5, 1, 2, 6, 2, 0, 0, 17, 15, 0, 0, 0, 2, 0, 0, 1, 0]' : 0.146525}", "{'[1, 5, 1, 2, 6, 2, 0, 0, 17, 15, 0, 0, 0, 2, 0, 0, 1, 0]' : 0.146062}", "{'[1, 5, 1, 2, 6, 2, 0, 0, 17, 15, 0, 0, 0, 2, 0, 0, 1, 0]' : 0.145518}", "{'[1, 5, 1, 2, 6, 2, 0, 0, 17, 15, 0, 0, 0, 2, 0, 0, 1, 0]' : 0.14553}", "{'[1, 5, 1, 2, 6, 2, 0, 0, 17, 15, 0, 0, 0, 2, 0, 0, 1, 0]' : 0.145776}", "{'[1, 5, 1, 2, 6, 2, 0, 0, 17, 15, 0, 0, 0, 2, 0, 0, 1, 0]' : 0.145901}", "{'[1, 5, 1, 2, 6, 2, 0, 0, 17, 15, 0, 0, 0, 2, 0, 0, 1, 0]' : 0.145582}", "{'[1, 5, 1, 2, 6, 2, 0, 0, 17, 15, 0, 0, 0, 2, 0, 0, 1, 0]' : 0.146642}", "{'[1, 5, 1, 2, 6, 2, 0, 0, 17, 15, 0, 0, 0, 2, 0, 0, 1, 0]' : 0.145984}", "{'[1, 5, 1, 2, 6, 2, 0, 0, 17, 15, 0, 0, 0, 2, 0, 0, 1, 0]' : 0.145935}", "{'[1, 5, 1, 2, 6, 2, 0, 0, 17, 15, 0, 0, 0, 2, 0, 0, 1, 0]' : 0.146342}"]
returning from 'run': {'[1, 5, 1, 2, 6, 2, 0, 0, 17, 15, 0, 0, 0, 2, 0, 0, 1, 0]': ([0.146983, 0.147265, 0.147776, 0.147017, 0.147537, 0.147511, 0.147854, 0.147256, 0.147701, 0.147652, 0.145604, 0.146439, 0.146693, 0.14582, 0.145578, 0.146179, 0.146956, 0.145721, 0.14627, 0.146525, 0.146062, 0.145518, 0.14553, 0.145776, 0.145901, 0.145582, 0.146642, 0.145984, 0.145935, 0.146342], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 5, 1, 2, 6, 2, 0, 0, 17, 15, 0, 0, 0, 2, 0, 0, 1, 0]': ([0.146983, 0.147265, 0.147776, 0.147017, 0.147537, 0.147511, 0.147854, 0.147256, 0.147701, 0.147652, 0.145604, 0.146439, 0.146693, 0.14582, 0.145578, 0.146179, 0.146956, 0.145721, 0.14627, 0.146525, 0.146062, 0.145518, 0.14553, 0.145776, 0.145901, 0.145582, 0.146642, 0.145984, 0.145935, 0.146342], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = kkk
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	5
        Additions: 		2816
        Multiplications: 	850
        Divisions: 		0
        Logical: 		0
        Reads: 			4485
        Writes: 		514
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest53.exe __orio_perftest53.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest53.exe  
Program Test Output: 
{'[0, 6, 5, 2, 5, 3, 0, 0, 29, 15, 0, 14, 0, 1, 0, 0, 1, 0]' : 0.113129}
{'[0, 6, 5, 2, 5, 3, 0, 0, 29, 15, 0, 14, 0, 1, 0, 0, 1, 0]' : 0.110466}
{'[0, 6, 5, 2, 5, 3, 0, 0, 29, 15, 0, 14, 0, 1, 0, 0, 1, 0]' : 0.109617}
{'[0, 6, 5, 2, 5, 3, 0, 0, 29, 15, 0, 14, 0, 1, 0, 0, 1, 0]' : 0.10973}
{'[0, 6, 5, 2, 5, 3, 0, 0, 29, 15, 0, 14, 0, 1, 0, 0, 1, 0]' : 0.110306}
{'[0, 6, 5, 2, 5, 3, 0, 0, 29, 15, 0, 14, 0, 1, 0, 0, 1, 0]' : 0.109917}
{'[0, 6, 5, 2, 5, 3, 0, 0, 29, 15, 0, 14, 0, 1, 0, 0, 1, 0]' : 0.109594}
{'[0, 6, 5, 2, 5, 3, 0, 0, 29, 15, 0, 14, 0, 1, 0, 0, 1, 0]' : 0.109625}
{'[0, 6, 5, 2, 5, 3, 0, 0, 29, 15, 0, 14, 0, 1, 0, 0, 1, 0]' : 0.111077}
{'[0, 6, 5, 2, 5, 3, 0, 0, 29, 15, 0, 14, 0, 1, 0, 0, 1, 0]' : 0.112809}
{'[0, 6, 5, 2, 5, 3, 0, 0, 29, 15, 0, 14, 0, 1, 0, 0, 1, 0]' : 0.11296}
{'[0, 6, 5, 2, 5, 3, 0, 0, 29, 15, 0, 14, 0, 1, 0, 0, 1, 0]' : 0.113061}
{'[0, 6, 5, 2, 5, 3, 0, 0, 29, 15, 0, 14, 0, 1, 0, 0, 1, 0]' : 0.111636}
{'[0, 6, 5, 2, 5, 3, 0, 0, 29, 15, 0, 14, 0, 1, 0, 0, 1, 0]' : 0.109844}
{'[0, 6, 5, 2, 5, 3, 0, 0, 29, 15, 0, 14, 0, 1, 0, 0, 1, 0]' : 0.112885}
{'[0, 6, 5, 2, 5, 3, 0, 0, 29, 15, 0, 14, 0, 1, 0, 0, 1, 0]' : 0.113254}
{'[0, 6, 5, 2, 5, 3, 0, 0, 29, 15, 0, 14, 0, 1, 0, 0, 1, 0]' : 0.113289}
{'[0, 6, 5, 2, 5, 3, 0, 0, 29, 15, 0, 14, 0, 1, 0, 0, 1, 0]' : 0.113074}
{'[0, 6, 5, 2, 5, 3, 0, 0, 29, 15, 0, 14, 0, 1, 0, 0, 1, 0]' : 0.113253}
{'[0, 6, 5, 2, 5, 3, 0, 0, 29, 15, 0, 14, 0, 1, 0, 0, 1, 0]' : 0.110494}
{'[0, 6, 5, 2, 5, 3, 0, 0, 29, 15, 0, 14, 0, 1, 0, 0, 1, 0]' : 0.109583}
{'[0, 6, 5, 2, 5, 3, 0, 0, 29, 15, 0, 14, 0, 1, 0, 0, 1, 0]' : 0.109703}
{'[0, 6, 5, 2, 5, 3, 0, 0, 29, 15, 0, 14, 0, 1, 0, 0, 1, 0]' : 0.109798}
{'[0, 6, 5, 2, 5, 3, 0, 0, 29, 15, 0, 14, 0, 1, 0, 0, 1, 0]' : 0.10974}
{'[0, 6, 5, 2, 5, 3, 0, 0, 29, 15, 0, 14, 0, 1, 0, 0, 1, 0]' : 0.109858}
{'[0, 6, 5, 2, 5, 3, 0, 0, 29, 15, 0, 14, 0, 1, 0, 0, 1, 0]' : 0.109849}
{'[0, 6, 5, 2, 5, 3, 0, 0, 29, 15, 0, 14, 0, 1, 0, 0, 1, 0]' : 0.111212}
{'[0, 6, 5, 2, 5, 3, 0, 0, 29, 15, 0, 14, 0, 1, 0, 0, 1, 0]' : 0.112976}
{'[0, 6, 5, 2, 5, 3, 0, 0, 29, 15, 0, 14, 0, 1, 0, 0, 1, 0]' : 0.110815}
{'[0, 6, 5, 2, 5, 3, 0, 0, 29, 15, 0, 14, 0, 1, 0, 0, 1, 0]' : 0.109615}

out:
 ["{'[0, 6, 5, 2, 5, 3, 0, 0, 29, 15, 0, 14, 0, 1, 0, 0, 1, 0]' : 0.113129}", "{'[0, 6, 5, 2, 5, 3, 0, 0, 29, 15, 0, 14, 0, 1, 0, 0, 1, 0]' : 0.110466}", "{'[0, 6, 5, 2, 5, 3, 0, 0, 29, 15, 0, 14, 0, 1, 0, 0, 1, 0]' : 0.109617}", "{'[0, 6, 5, 2, 5, 3, 0, 0, 29, 15, 0, 14, 0, 1, 0, 0, 1, 0]' : 0.10973}", "{'[0, 6, 5, 2, 5, 3, 0, 0, 29, 15, 0, 14, 0, 1, 0, 0, 1, 0]' : 0.110306}", "{'[0, 6, 5, 2, 5, 3, 0, 0, 29, 15, 0, 14, 0, 1, 0, 0, 1, 0]' : 0.109917}", "{'[0, 6, 5, 2, 5, 3, 0, 0, 29, 15, 0, 14, 0, 1, 0, 0, 1, 0]' : 0.109594}", "{'[0, 6, 5, 2, 5, 3, 0, 0, 29, 15, 0, 14, 0, 1, 0, 0, 1, 0]' : 0.109625}", "{'[0, 6, 5, 2, 5, 3, 0, 0, 29, 15, 0, 14, 0, 1, 0, 0, 1, 0]' : 0.111077}", "{'[0, 6, 5, 2, 5, 3, 0, 0, 29, 15, 0, 14, 0, 1, 0, 0, 1, 0]' : 0.112809}", "{'[0, 6, 5, 2, 5, 3, 0, 0, 29, 15, 0, 14, 0, 1, 0, 0, 1, 0]' : 0.11296}", "{'[0, 6, 5, 2, 5, 3, 0, 0, 29, 15, 0, 14, 0, 1, 0, 0, 1, 0]' : 0.113061}", "{'[0, 6, 5, 2, 5, 3, 0, 0, 29, 15, 0, 14, 0, 1, 0, 0, 1, 0]' : 0.111636}", "{'[0, 6, 5, 2, 5, 3, 0, 0, 29, 15, 0, 14, 0, 1, 0, 0, 1, 0]' : 0.109844}", "{'[0, 6, 5, 2, 5, 3, 0, 0, 29, 15, 0, 14, 0, 1, 0, 0, 1, 0]' : 0.112885}", "{'[0, 6, 5, 2, 5, 3, 0, 0, 29, 15, 0, 14, 0, 1, 0, 0, 1, 0]' : 0.113254}", "{'[0, 6, 5, 2, 5, 3, 0, 0, 29, 15, 0, 14, 0, 1, 0, 0, 1, 0]' : 0.113289}", "{'[0, 6, 5, 2, 5, 3, 0, 0, 29, 15, 0, 14, 0, 1, 0, 0, 1, 0]' : 0.113074}", "{'[0, 6, 5, 2, 5, 3, 0, 0, 29, 15, 0, 14, 0, 1, 0, 0, 1, 0]' : 0.113253}", "{'[0, 6, 5, 2, 5, 3, 0, 0, 29, 15, 0, 14, 0, 1, 0, 0, 1, 0]' : 0.110494}", "{'[0, 6, 5, 2, 5, 3, 0, 0, 29, 15, 0, 14, 0, 1, 0, 0, 1, 0]' : 0.109583}", "{'[0, 6, 5, 2, 5, 3, 0, 0, 29, 15, 0, 14, 0, 1, 0, 0, 1, 0]' : 0.109703}", "{'[0, 6, 5, 2, 5, 3, 0, 0, 29, 15, 0, 14, 0, 1, 0, 0, 1, 0]' : 0.109798}", "{'[0, 6, 5, 2, 5, 3, 0, 0, 29, 15, 0, 14, 0, 1, 0, 0, 1, 0]' : 0.10974}", "{'[0, 6, 5, 2, 5, 3, 0, 0, 29, 15, 0, 14, 0, 1, 0, 0, 1, 0]' : 0.109858}", "{'[0, 6, 5, 2, 5, 3, 0, 0, 29, 15, 0, 14, 0, 1, 0, 0, 1, 0]' : 0.109849}", "{'[0, 6, 5, 2, 5, 3, 0, 0, 29, 15, 0, 14, 0, 1, 0, 0, 1, 0]' : 0.111212}", "{'[0, 6, 5, 2, 5, 3, 0, 0, 29, 15, 0, 14, 0, 1, 0, 0, 1, 0]' : 0.112976}", "{'[0, 6, 5, 2, 5, 3, 0, 0, 29, 15, 0, 14, 0, 1, 0, 0, 1, 0]' : 0.110815}", "{'[0, 6, 5, 2, 5, 3, 0, 0, 29, 15, 0, 14, 0, 1, 0, 0, 1, 0]' : 0.109615}"]
returning from 'run': {'[0, 6, 5, 2, 5, 3, 0, 0, 29, 15, 0, 14, 0, 1, 0, 0, 1, 0]': ([0.113129, 0.110466, 0.109617, 0.10973, 0.110306, 0.109917, 0.109594, 0.109625, 0.111077, 0.112809, 0.11296, 0.113061, 0.111636, 0.109844, 0.112885, 0.113254, 0.113289, 0.113074, 0.113253, 0.110494, 0.109583, 0.109703, 0.109798, 0.10974, 0.109858, 0.109849, 0.111212, 0.112976, 0.110815, 0.109615], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 5, 2, 5, 3, 0, 0, 29, 15, 0, 14, 0, 1, 0, 0, 1, 0]': ([0.113129, 0.110466, 0.109617, 0.10973, 0.110306, 0.109917, 0.109594, 0.109625, 0.111077, 0.112809, 0.11296, 0.113061, 0.111636, 0.109844, 0.112885, 0.113254, 0.113289, 0.113074, 0.113253, 0.110494, 0.109583, 0.109703, 0.109798, 0.10974, 0.109858, 0.109849, 0.111212, 0.112976, 0.110815, 0.109615], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	68
        Max loop nest depth: 	6
        Additions: 		2425
        Multiplications: 	544
        Divisions: 		0
        Logical: 		0
        Reads: 			3889
        Writes: 		478
        Comparisons:		68
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest54.exe __orio_perftest54.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest54.exe  
Program Test Output: 
{'[1, 3, 3, 2, 2, 2, 1, 1, 0, 15, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.241312}
{'[1, 3, 3, 2, 2, 2, 1, 1, 0, 15, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.232534}
{'[1, 3, 3, 2, 2, 2, 1, 1, 0, 15, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.208472}
{'[1, 3, 3, 2, 2, 2, 1, 1, 0, 15, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.214732}
{'[1, 3, 3, 2, 2, 2, 1, 1, 0, 15, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.213001}
{'[1, 3, 3, 2, 2, 2, 1, 1, 0, 15, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.20704}
{'[1, 3, 3, 2, 2, 2, 1, 1, 0, 15, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.211077}
{'[1, 3, 3, 2, 2, 2, 1, 1, 0, 15, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.207025}
{'[1, 3, 3, 2, 2, 2, 1, 1, 0, 15, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.217375}
{'[1, 3, 3, 2, 2, 2, 1, 1, 0, 15, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.210558}
{'[1, 3, 3, 2, 2, 2, 1, 1, 0, 15, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.208929}
{'[1, 3, 3, 2, 2, 2, 1, 1, 0, 15, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.211162}
{'[1, 3, 3, 2, 2, 2, 1, 1, 0, 15, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.207392}
{'[1, 3, 3, 2, 2, 2, 1, 1, 0, 15, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.212055}
{'[1, 3, 3, 2, 2, 2, 1, 1, 0, 15, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.204752}
{'[1, 3, 3, 2, 2, 2, 1, 1, 0, 15, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.210451}
{'[1, 3, 3, 2, 2, 2, 1, 1, 0, 15, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.207963}
{'[1, 3, 3, 2, 2, 2, 1, 1, 0, 15, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.207766}
{'[1, 3, 3, 2, 2, 2, 1, 1, 0, 15, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.214923}
{'[1, 3, 3, 2, 2, 2, 1, 1, 0, 15, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.205011}
{'[1, 3, 3, 2, 2, 2, 1, 1, 0, 15, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.210944}
{'[1, 3, 3, 2, 2, 2, 1, 1, 0, 15, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.207018}
{'[1, 3, 3, 2, 2, 2, 1, 1, 0, 15, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.212613}
{'[1, 3, 3, 2, 2, 2, 1, 1, 0, 15, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.213154}
{'[1, 3, 3, 2, 2, 2, 1, 1, 0, 15, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.206815}
{'[1, 3, 3, 2, 2, 2, 1, 1, 0, 15, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.2111}
{'[1, 3, 3, 2, 2, 2, 1, 1, 0, 15, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.206397}
{'[1, 3, 3, 2, 2, 2, 1, 1, 0, 15, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.210676}
{'[1, 3, 3, 2, 2, 2, 1, 1, 0, 15, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.210356}
{'[1, 3, 3, 2, 2, 2, 1, 1, 0, 15, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.208273}

out:
 ["{'[1, 3, 3, 2, 2, 2, 1, 1, 0, 15, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.241312}", "{'[1, 3, 3, 2, 2, 2, 1, 1, 0, 15, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.232534}", "{'[1, 3, 3, 2, 2, 2, 1, 1, 0, 15, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.208472}", "{'[1, 3, 3, 2, 2, 2, 1, 1, 0, 15, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.214732}", "{'[1, 3, 3, 2, 2, 2, 1, 1, 0, 15, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.213001}", "{'[1, 3, 3, 2, 2, 2, 1, 1, 0, 15, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.20704}", "{'[1, 3, 3, 2, 2, 2, 1, 1, 0, 15, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.211077}", "{'[1, 3, 3, 2, 2, 2, 1, 1, 0, 15, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.207025}", "{'[1, 3, 3, 2, 2, 2, 1, 1, 0, 15, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.217375}", "{'[1, 3, 3, 2, 2, 2, 1, 1, 0, 15, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.210558}", "{'[1, 3, 3, 2, 2, 2, 1, 1, 0, 15, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.208929}", "{'[1, 3, 3, 2, 2, 2, 1, 1, 0, 15, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.211162}", "{'[1, 3, 3, 2, 2, 2, 1, 1, 0, 15, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.207392}", "{'[1, 3, 3, 2, 2, 2, 1, 1, 0, 15, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.212055}", "{'[1, 3, 3, 2, 2, 2, 1, 1, 0, 15, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.204752}", "{'[1, 3, 3, 2, 2, 2, 1, 1, 0, 15, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.210451}", "{'[1, 3, 3, 2, 2, 2, 1, 1, 0, 15, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.207963}", "{'[1, 3, 3, 2, 2, 2, 1, 1, 0, 15, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.207766}", "{'[1, 3, 3, 2, 2, 2, 1, 1, 0, 15, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.214923}", "{'[1, 3, 3, 2, 2, 2, 1, 1, 0, 15, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.205011}", "{'[1, 3, 3, 2, 2, 2, 1, 1, 0, 15, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.210944}", "{'[1, 3, 3, 2, 2, 2, 1, 1, 0, 15, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.207018}", "{'[1, 3, 3, 2, 2, 2, 1, 1, 0, 15, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.212613}", "{'[1, 3, 3, 2, 2, 2, 1, 1, 0, 15, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.213154}", "{'[1, 3, 3, 2, 2, 2, 1, 1, 0, 15, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.206815}", "{'[1, 3, 3, 2, 2, 2, 1, 1, 0, 15, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.2111}", "{'[1, 3, 3, 2, 2, 2, 1, 1, 0, 15, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.206397}", "{'[1, 3, 3, 2, 2, 2, 1, 1, 0, 15, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.210676}", "{'[1, 3, 3, 2, 2, 2, 1, 1, 0, 15, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.210356}", "{'[1, 3, 3, 2, 2, 2, 1, 1, 0, 15, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.208273}"]
returning from 'run': {'[1, 3, 3, 2, 2, 2, 1, 1, 0, 15, 0, 4, 0, 1, 1, 0, 1, 0]': ([0.241312, 0.232534, 0.208472, 0.214732, 0.213001, 0.20704, 0.211077, 0.207025, 0.217375, 0.210558, 0.208929, 0.211162, 0.207392, 0.212055, 0.204752, 0.210451, 0.207963, 0.207766, 0.214923, 0.205011, 0.210944, 0.207018, 0.212613, 0.213154, 0.206815, 0.2111, 0.206397, 0.210676, 0.210356, 0.208273], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 3, 3, 2, 2, 2, 1, 1, 0, 15, 0, 4, 0, 1, 1, 0, 1, 0]': ([0.241312, 0.232534, 0.208472, 0.214732, 0.213001, 0.20704, 0.211077, 0.207025, 0.217375, 0.210558, 0.208929, 0.211162, 0.207392, 0.212055, 0.204752, 0.210451, 0.207963, 0.207766, 0.214923, 0.205011, 0.210944, 0.207018, 0.212613, 0.213154, 0.206815, 0.2111, 0.206397, 0.210676, 0.210356, 0.208273], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		3782
        Multiplications: 	1122
        Divisions: 		0
        Logical: 		0
        Reads: 			5771
        Writes: 		629
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest55.exe __orio_perftest55.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest55.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest55.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest55.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest55.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	52
        Max loop nest depth: 	6
        Additions: 		2503
        Multiplications: 	784
        Divisions: 		0
        Logical: 		0
        Reads: 			4412
        Writes: 		581
        Comparisons:		52
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest56.exe __orio_perftest56.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest56.exe  
Program Test Output: 
{'[3, 1, 0, 2, 6, 0, 0, 1, 5, 15, 0, 5, 2, 0, 0, 0, 1, 1]' : 0.205439}
{'[3, 1, 0, 2, 6, 0, 0, 1, 5, 15, 0, 5, 2, 0, 0, 0, 1, 1]' : 0.204418}
{'[3, 1, 0, 2, 6, 0, 0, 1, 5, 15, 0, 5, 2, 0, 0, 0, 1, 1]' : 0.18656}
{'[3, 1, 0, 2, 6, 0, 0, 1, 5, 15, 0, 5, 2, 0, 0, 0, 1, 1]' : 0.184638}
{'[3, 1, 0, 2, 6, 0, 0, 1, 5, 15, 0, 5, 2, 0, 0, 0, 1, 1]' : 0.188854}
{'[3, 1, 0, 2, 6, 0, 0, 1, 5, 15, 0, 5, 2, 0, 0, 0, 1, 1]' : 0.188351}
{'[3, 1, 0, 2, 6, 0, 0, 1, 5, 15, 0, 5, 2, 0, 0, 0, 1, 1]' : 0.185319}
{'[3, 1, 0, 2, 6, 0, 0, 1, 5, 15, 0, 5, 2, 0, 0, 0, 1, 1]' : 0.185944}
{'[3, 1, 0, 2, 6, 0, 0, 1, 5, 15, 0, 5, 2, 0, 0, 0, 1, 1]' : 0.183783}
{'[3, 1, 0, 2, 6, 0, 0, 1, 5, 15, 0, 5, 2, 0, 0, 0, 1, 1]' : 0.183514}
{'[3, 1, 0, 2, 6, 0, 0, 1, 5, 15, 0, 5, 2, 0, 0, 0, 1, 1]' : 0.187582}
{'[3, 1, 0, 2, 6, 0, 0, 1, 5, 15, 0, 5, 2, 0, 0, 0, 1, 1]' : 0.188962}
{'[3, 1, 0, 2, 6, 0, 0, 1, 5, 15, 0, 5, 2, 0, 0, 0, 1, 1]' : 0.189176}
{'[3, 1, 0, 2, 6, 0, 0, 1, 5, 15, 0, 5, 2, 0, 0, 0, 1, 1]' : 0.188786}
{'[3, 1, 0, 2, 6, 0, 0, 1, 5, 15, 0, 5, 2, 0, 0, 0, 1, 1]' : 0.188505}
{'[3, 1, 0, 2, 6, 0, 0, 1, 5, 15, 0, 5, 2, 0, 0, 0, 1, 1]' : 0.18956}
{'[3, 1, 0, 2, 6, 0, 0, 1, 5, 15, 0, 5, 2, 0, 0, 0, 1, 1]' : 0.188392}
{'[3, 1, 0, 2, 6, 0, 0, 1, 5, 15, 0, 5, 2, 0, 0, 0, 1, 1]' : 0.185215}
{'[3, 1, 0, 2, 6, 0, 0, 1, 5, 15, 0, 5, 2, 0, 0, 0, 1, 1]' : 0.187067}
{'[3, 1, 0, 2, 6, 0, 0, 1, 5, 15, 0, 5, 2, 0, 0, 0, 1, 1]' : 0.188353}
{'[3, 1, 0, 2, 6, 0, 0, 1, 5, 15, 0, 5, 2, 0, 0, 0, 1, 1]' : 0.189159}
{'[3, 1, 0, 2, 6, 0, 0, 1, 5, 15, 0, 5, 2, 0, 0, 0, 1, 1]' : 0.188487}
{'[3, 1, 0, 2, 6, 0, 0, 1, 5, 15, 0, 5, 2, 0, 0, 0, 1, 1]' : 0.188644}
{'[3, 1, 0, 2, 6, 0, 0, 1, 5, 15, 0, 5, 2, 0, 0, 0, 1, 1]' : 0.184342}
{'[3, 1, 0, 2, 6, 0, 0, 1, 5, 15, 0, 5, 2, 0, 0, 0, 1, 1]' : 0.184922}
{'[3, 1, 0, 2, 6, 0, 0, 1, 5, 15, 0, 5, 2, 0, 0, 0, 1, 1]' : 0.185383}
{'[3, 1, 0, 2, 6, 0, 0, 1, 5, 15, 0, 5, 2, 0, 0, 0, 1, 1]' : 0.185853}
{'[3, 1, 0, 2, 6, 0, 0, 1, 5, 15, 0, 5, 2, 0, 0, 0, 1, 1]' : 0.185586}
{'[3, 1, 0, 2, 6, 0, 0, 1, 5, 15, 0, 5, 2, 0, 0, 0, 1, 1]' : 0.184676}
{'[3, 1, 0, 2, 6, 0, 0, 1, 5, 15, 0, 5, 2, 0, 0, 0, 1, 1]' : 0.184954}

out:
 ["{'[3, 1, 0, 2, 6, 0, 0, 1, 5, 15, 0, 5, 2, 0, 0, 0, 1, 1]' : 0.205439}", "{'[3, 1, 0, 2, 6, 0, 0, 1, 5, 15, 0, 5, 2, 0, 0, 0, 1, 1]' : 0.204418}", "{'[3, 1, 0, 2, 6, 0, 0, 1, 5, 15, 0, 5, 2, 0, 0, 0, 1, 1]' : 0.18656}", "{'[3, 1, 0, 2, 6, 0, 0, 1, 5, 15, 0, 5, 2, 0, 0, 0, 1, 1]' : 0.184638}", "{'[3, 1, 0, 2, 6, 0, 0, 1, 5, 15, 0, 5, 2, 0, 0, 0, 1, 1]' : 0.188854}", "{'[3, 1, 0, 2, 6, 0, 0, 1, 5, 15, 0, 5, 2, 0, 0, 0, 1, 1]' : 0.188351}", "{'[3, 1, 0, 2, 6, 0, 0, 1, 5, 15, 0, 5, 2, 0, 0, 0, 1, 1]' : 0.185319}", "{'[3, 1, 0, 2, 6, 0, 0, 1, 5, 15, 0, 5, 2, 0, 0, 0, 1, 1]' : 0.185944}", "{'[3, 1, 0, 2, 6, 0, 0, 1, 5, 15, 0, 5, 2, 0, 0, 0, 1, 1]' : 0.183783}", "{'[3, 1, 0, 2, 6, 0, 0, 1, 5, 15, 0, 5, 2, 0, 0, 0, 1, 1]' : 0.183514}", "{'[3, 1, 0, 2, 6, 0, 0, 1, 5, 15, 0, 5, 2, 0, 0, 0, 1, 1]' : 0.187582}", "{'[3, 1, 0, 2, 6, 0, 0, 1, 5, 15, 0, 5, 2, 0, 0, 0, 1, 1]' : 0.188962}", "{'[3, 1, 0, 2, 6, 0, 0, 1, 5, 15, 0, 5, 2, 0, 0, 0, 1, 1]' : 0.189176}", "{'[3, 1, 0, 2, 6, 0, 0, 1, 5, 15, 0, 5, 2, 0, 0, 0, 1, 1]' : 0.188786}", "{'[3, 1, 0, 2, 6, 0, 0, 1, 5, 15, 0, 5, 2, 0, 0, 0, 1, 1]' : 0.188505}", "{'[3, 1, 0, 2, 6, 0, 0, 1, 5, 15, 0, 5, 2, 0, 0, 0, 1, 1]' : 0.18956}", "{'[3, 1, 0, 2, 6, 0, 0, 1, 5, 15, 0, 5, 2, 0, 0, 0, 1, 1]' : 0.188392}", "{'[3, 1, 0, 2, 6, 0, 0, 1, 5, 15, 0, 5, 2, 0, 0, 0, 1, 1]' : 0.185215}", "{'[3, 1, 0, 2, 6, 0, 0, 1, 5, 15, 0, 5, 2, 0, 0, 0, 1, 1]' : 0.187067}", "{'[3, 1, 0, 2, 6, 0, 0, 1, 5, 15, 0, 5, 2, 0, 0, 0, 1, 1]' : 0.188353}", "{'[3, 1, 0, 2, 6, 0, 0, 1, 5, 15, 0, 5, 2, 0, 0, 0, 1, 1]' : 0.189159}", "{'[3, 1, 0, 2, 6, 0, 0, 1, 5, 15, 0, 5, 2, 0, 0, 0, 1, 1]' : 0.188487}", "{'[3, 1, 0, 2, 6, 0, 0, 1, 5, 15, 0, 5, 2, 0, 0, 0, 1, 1]' : 0.188644}", "{'[3, 1, 0, 2, 6, 0, 0, 1, 5, 15, 0, 5, 2, 0, 0, 0, 1, 1]' : 0.184342}", "{'[3, 1, 0, 2, 6, 0, 0, 1, 5, 15, 0, 5, 2, 0, 0, 0, 1, 1]' : 0.184922}", "{'[3, 1, 0, 2, 6, 0, 0, 1, 5, 15, 0, 5, 2, 0, 0, 0, 1, 1]' : 0.185383}", "{'[3, 1, 0, 2, 6, 0, 0, 1, 5, 15, 0, 5, 2, 0, 0, 0, 1, 1]' : 0.185853}", "{'[3, 1, 0, 2, 6, 0, 0, 1, 5, 15, 0, 5, 2, 0, 0, 0, 1, 1]' : 0.185586}", "{'[3, 1, 0, 2, 6, 0, 0, 1, 5, 15, 0, 5, 2, 0, 0, 0, 1, 1]' : 0.184676}", "{'[3, 1, 0, 2, 6, 0, 0, 1, 5, 15, 0, 5, 2, 0, 0, 0, 1, 1]' : 0.184954}"]
returning from 'run': {'[3, 1, 0, 2, 6, 0, 0, 1, 5, 15, 0, 5, 2, 0, 0, 0, 1, 1]': ([0.205439, 0.204418, 0.18656, 0.184638, 0.188854, 0.188351, 0.185319, 0.185944, 0.183783, 0.183514, 0.187582, 0.188962, 0.189176, 0.188786, 0.188505, 0.18956, 0.188392, 0.185215, 0.187067, 0.188353, 0.189159, 0.188487, 0.188644, 0.184342, 0.184922, 0.185383, 0.185853, 0.185586, 0.184676, 0.184954], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 1, 0, 2, 6, 0, 0, 1, 5, 15, 0, 5, 2, 0, 0, 0, 1, 1]': ([0.205439, 0.204418, 0.18656, 0.184638, 0.188854, 0.188351, 0.185319, 0.185944, 0.183783, 0.183514, 0.187582, 0.188962, 0.189176, 0.188786, 0.188505, 0.18956, 0.188392, 0.185215, 0.187067, 0.188353, 0.189159, 0.188487, 0.188644, 0.184342, 0.184922, 0.185383, 0.185853, 0.185586, 0.184676, 0.184954], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = kkk
Code stats:
        Number of loops: 	34
        Max loop nest depth: 	5
        Additions: 		6170
        Multiplications: 	1666
        Divisions: 		0
        Logical: 		0
        Reads: 			9309
        Writes: 		974
        Comparisons:		34
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest57.exe __orio_perftest57.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest57.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest57.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest57.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest57.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	108
        Max loop nest depth: 	5
        Additions: 		5635
        Multiplications: 	1250
        Divisions: 		0
        Logical: 		0
        Reads: 			8438
        Writes: 		921
        Comparisons:		108
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest58.exe __orio_perftest58.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest58.exe  
Program Test Output: 
{'[1, 2, 4, 0, 1, 0, 1, 1, 3, 15, 0, 15, 1, 1, 0, 0, 1, 0]' : 0.108069}
{'[1, 2, 4, 0, 1, 0, 1, 1, 3, 15, 0, 15, 1, 1, 0, 0, 1, 0]' : 0.108833}
{'[1, 2, 4, 0, 1, 0, 1, 1, 3, 15, 0, 15, 1, 1, 0, 0, 1, 0]' : 0.107798}
{'[1, 2, 4, 0, 1, 0, 1, 1, 3, 15, 0, 15, 1, 1, 0, 0, 1, 0]' : 0.108}
{'[1, 2, 4, 0, 1, 0, 1, 1, 3, 15, 0, 15, 1, 1, 0, 0, 1, 0]' : 0.108084}
{'[1, 2, 4, 0, 1, 0, 1, 1, 3, 15, 0, 15, 1, 1, 0, 0, 1, 0]' : 0.105447}
{'[1, 2, 4, 0, 1, 0, 1, 1, 3, 15, 0, 15, 1, 1, 0, 0, 1, 0]' : 0.10826}
{'[1, 2, 4, 0, 1, 0, 1, 1, 3, 15, 0, 15, 1, 1, 0, 0, 1, 0]' : 0.108464}
{'[1, 2, 4, 0, 1, 0, 1, 1, 3, 15, 0, 15, 1, 1, 0, 0, 1, 0]' : 0.108466}
{'[1, 2, 4, 0, 1, 0, 1, 1, 3, 15, 0, 15, 1, 1, 0, 0, 1, 0]' : 0.108346}
{'[1, 2, 4, 0, 1, 0, 1, 1, 3, 15, 0, 15, 1, 1, 0, 0, 1, 0]' : 0.105798}
{'[1, 2, 4, 0, 1, 0, 1, 1, 3, 15, 0, 15, 1, 1, 0, 0, 1, 0]' : 0.108994}
{'[1, 2, 4, 0, 1, 0, 1, 1, 3, 15, 0, 15, 1, 1, 0, 0, 1, 0]' : 0.108529}
{'[1, 2, 4, 0, 1, 0, 1, 1, 3, 15, 0, 15, 1, 1, 0, 0, 1, 0]' : 0.108399}
{'[1, 2, 4, 0, 1, 0, 1, 1, 3, 15, 0, 15, 1, 1, 0, 0, 1, 0]' : 0.10865}
{'[1, 2, 4, 0, 1, 0, 1, 1, 3, 15, 0, 15, 1, 1, 0, 0, 1, 0]' : 0.109816}
{'[1, 2, 4, 0, 1, 0, 1, 1, 3, 15, 0, 15, 1, 1, 0, 0, 1, 0]' : 0.108496}
{'[1, 2, 4, 0, 1, 0, 1, 1, 3, 15, 0, 15, 1, 1, 0, 0, 1, 0]' : 0.108395}
{'[1, 2, 4, 0, 1, 0, 1, 1, 3, 15, 0, 15, 1, 1, 0, 0, 1, 0]' : 0.108531}
{'[1, 2, 4, 0, 1, 0, 1, 1, 3, 15, 0, 15, 1, 1, 0, 0, 1, 0]' : 0.108505}
{'[1, 2, 4, 0, 1, 0, 1, 1, 3, 15, 0, 15, 1, 1, 0, 0, 1, 0]' : 0.109376}
{'[1, 2, 4, 0, 1, 0, 1, 1, 3, 15, 0, 15, 1, 1, 0, 0, 1, 0]' : 0.108362}
{'[1, 2, 4, 0, 1, 0, 1, 1, 3, 15, 0, 15, 1, 1, 0, 0, 1, 0]' : 0.108419}
{'[1, 2, 4, 0, 1, 0, 1, 1, 3, 15, 0, 15, 1, 1, 0, 0, 1, 0]' : 0.108577}
{'[1, 2, 4, 0, 1, 0, 1, 1, 3, 15, 0, 15, 1, 1, 0, 0, 1, 0]' : 0.109292}
{'[1, 2, 4, 0, 1, 0, 1, 1, 3, 15, 0, 15, 1, 1, 0, 0, 1, 0]' : 0.108865}
{'[1, 2, 4, 0, 1, 0, 1, 1, 3, 15, 0, 15, 1, 1, 0, 0, 1, 0]' : 0.108428}
{'[1, 2, 4, 0, 1, 0, 1, 1, 3, 15, 0, 15, 1, 1, 0, 0, 1, 0]' : 0.10852}
{'[1, 2, 4, 0, 1, 0, 1, 1, 3, 15, 0, 15, 1, 1, 0, 0, 1, 0]' : 0.107267}
{'[1, 2, 4, 0, 1, 0, 1, 1, 3, 15, 0, 15, 1, 1, 0, 0, 1, 0]' : 0.10652}

out:
 ["{'[1, 2, 4, 0, 1, 0, 1, 1, 3, 15, 0, 15, 1, 1, 0, 0, 1, 0]' : 0.108069}", "{'[1, 2, 4, 0, 1, 0, 1, 1, 3, 15, 0, 15, 1, 1, 0, 0, 1, 0]' : 0.108833}", "{'[1, 2, 4, 0, 1, 0, 1, 1, 3, 15, 0, 15, 1, 1, 0, 0, 1, 0]' : 0.107798}", "{'[1, 2, 4, 0, 1, 0, 1, 1, 3, 15, 0, 15, 1, 1, 0, 0, 1, 0]' : 0.108}", "{'[1, 2, 4, 0, 1, 0, 1, 1, 3, 15, 0, 15, 1, 1, 0, 0, 1, 0]' : 0.108084}", "{'[1, 2, 4, 0, 1, 0, 1, 1, 3, 15, 0, 15, 1, 1, 0, 0, 1, 0]' : 0.105447}", "{'[1, 2, 4, 0, 1, 0, 1, 1, 3, 15, 0, 15, 1, 1, 0, 0, 1, 0]' : 0.10826}", "{'[1, 2, 4, 0, 1, 0, 1, 1, 3, 15, 0, 15, 1, 1, 0, 0, 1, 0]' : 0.108464}", "{'[1, 2, 4, 0, 1, 0, 1, 1, 3, 15, 0, 15, 1, 1, 0, 0, 1, 0]' : 0.108466}", "{'[1, 2, 4, 0, 1, 0, 1, 1, 3, 15, 0, 15, 1, 1, 0, 0, 1, 0]' : 0.108346}", "{'[1, 2, 4, 0, 1, 0, 1, 1, 3, 15, 0, 15, 1, 1, 0, 0, 1, 0]' : 0.105798}", "{'[1, 2, 4, 0, 1, 0, 1, 1, 3, 15, 0, 15, 1, 1, 0, 0, 1, 0]' : 0.108994}", "{'[1, 2, 4, 0, 1, 0, 1, 1, 3, 15, 0, 15, 1, 1, 0, 0, 1, 0]' : 0.108529}", "{'[1, 2, 4, 0, 1, 0, 1, 1, 3, 15, 0, 15, 1, 1, 0, 0, 1, 0]' : 0.108399}", "{'[1, 2, 4, 0, 1, 0, 1, 1, 3, 15, 0, 15, 1, 1, 0, 0, 1, 0]' : 0.10865}", "{'[1, 2, 4, 0, 1, 0, 1, 1, 3, 15, 0, 15, 1, 1, 0, 0, 1, 0]' : 0.109816}", "{'[1, 2, 4, 0, 1, 0, 1, 1, 3, 15, 0, 15, 1, 1, 0, 0, 1, 0]' : 0.108496}", "{'[1, 2, 4, 0, 1, 0, 1, 1, 3, 15, 0, 15, 1, 1, 0, 0, 1, 0]' : 0.108395}", "{'[1, 2, 4, 0, 1, 0, 1, 1, 3, 15, 0, 15, 1, 1, 0, 0, 1, 0]' : 0.108531}", "{'[1, 2, 4, 0, 1, 0, 1, 1, 3, 15, 0, 15, 1, 1, 0, 0, 1, 0]' : 0.108505}", "{'[1, 2, 4, 0, 1, 0, 1, 1, 3, 15, 0, 15, 1, 1, 0, 0, 1, 0]' : 0.109376}", "{'[1, 2, 4, 0, 1, 0, 1, 1, 3, 15, 0, 15, 1, 1, 0, 0, 1, 0]' : 0.108362}", "{'[1, 2, 4, 0, 1, 0, 1, 1, 3, 15, 0, 15, 1, 1, 0, 0, 1, 0]' : 0.108419}", "{'[1, 2, 4, 0, 1, 0, 1, 1, 3, 15, 0, 15, 1, 1, 0, 0, 1, 0]' : 0.108577}", "{'[1, 2, 4, 0, 1, 0, 1, 1, 3, 15, 0, 15, 1, 1, 0, 0, 1, 0]' : 0.109292}", "{'[1, 2, 4, 0, 1, 0, 1, 1, 3, 15, 0, 15, 1, 1, 0, 0, 1, 0]' : 0.108865}", "{'[1, 2, 4, 0, 1, 0, 1, 1, 3, 15, 0, 15, 1, 1, 0, 0, 1, 0]' : 0.108428}", "{'[1, 2, 4, 0, 1, 0, 1, 1, 3, 15, 0, 15, 1, 1, 0, 0, 1, 0]' : 0.10852}", "{'[1, 2, 4, 0, 1, 0, 1, 1, 3, 15, 0, 15, 1, 1, 0, 0, 1, 0]' : 0.107267}", "{'[1, 2, 4, 0, 1, 0, 1, 1, 3, 15, 0, 15, 1, 1, 0, 0, 1, 0]' : 0.10652}"]
returning from 'run': {'[1, 2, 4, 0, 1, 0, 1, 1, 3, 15, 0, 15, 1, 1, 0, 0, 1, 0]': ([0.108069, 0.108833, 0.107798, 0.108, 0.108084, 0.105447, 0.10826, 0.108464, 0.108466, 0.108346, 0.105798, 0.108994, 0.108529, 0.108399, 0.10865, 0.109816, 0.108496, 0.108395, 0.108531, 0.108505, 0.109376, 0.108362, 0.108419, 0.108577, 0.109292, 0.108865, 0.108428, 0.10852, 0.107267, 0.10652], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 2, 4, 0, 1, 0, 1, 1, 3, 15, 0, 15, 1, 1, 0, 0, 1, 0]': ([0.108069, 0.108833, 0.107798, 0.108, 0.108084, 0.105447, 0.10826, 0.108464, 0.108466, 0.108346, 0.105798, 0.108994, 0.108529, 0.108399, 0.10865, 0.109816, 0.108496, 0.108395, 0.108531, 0.108505, 0.109376, 0.108362, 0.108419, 0.108577, 0.109292, 0.108865, 0.108428, 0.10852, 0.107267, 0.10652], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	35
        Max loop nest depth: 	6
        Additions: 		2107
        Multiplications: 	578
        Divisions: 		0
        Logical: 		0
        Reads: 			3446
        Writes: 		425
        Comparisons:		35
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest59.exe __orio_perftest59.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest59.exe  
Program Test Output: 
{'[6, 2, 2, 6, 0, 6, 1, 0, 21, 15, 0, 0, 0, 1, 1, 0, 1, 1]' : 0.186733}
{'[6, 2, 2, 6, 0, 6, 1, 0, 21, 15, 0, 0, 0, 1, 1, 0, 1, 1]' : 0.183266}
{'[6, 2, 2, 6, 0, 6, 1, 0, 21, 15, 0, 0, 0, 1, 1, 0, 1, 1]' : 0.157951}
{'[6, 2, 2, 6, 0, 6, 1, 0, 21, 15, 0, 0, 0, 1, 1, 0, 1, 1]' : 0.157766}
{'[6, 2, 2, 6, 0, 6, 1, 0, 21, 15, 0, 0, 0, 1, 1, 0, 1, 1]' : 0.157953}
{'[6, 2, 2, 6, 0, 6, 1, 0, 21, 15, 0, 0, 0, 1, 1, 0, 1, 1]' : 0.158104}
{'[6, 2, 2, 6, 0, 6, 1, 0, 21, 15, 0, 0, 0, 1, 1, 0, 1, 1]' : 0.158043}
{'[6, 2, 2, 6, 0, 6, 1, 0, 21, 15, 0, 0, 0, 1, 1, 0, 1, 1]' : 0.158129}
{'[6, 2, 2, 6, 0, 6, 1, 0, 21, 15, 0, 0, 0, 1, 1, 0, 1, 1]' : 0.158063}
{'[6, 2, 2, 6, 0, 6, 1, 0, 21, 15, 0, 0, 0, 1, 1, 0, 1, 1]' : 0.158479}
{'[6, 2, 2, 6, 0, 6, 1, 0, 21, 15, 0, 0, 0, 1, 1, 0, 1, 1]' : 0.15764}
{'[6, 2, 2, 6, 0, 6, 1, 0, 21, 15, 0, 0, 0, 1, 1, 0, 1, 1]' : 0.158034}
{'[6, 2, 2, 6, 0, 6, 1, 0, 21, 15, 0, 0, 0, 1, 1, 0, 1, 1]' : 0.158518}
{'[6, 2, 2, 6, 0, 6, 1, 0, 21, 15, 0, 0, 0, 1, 1, 0, 1, 1]' : 0.157673}
{'[6, 2, 2, 6, 0, 6, 1, 0, 21, 15, 0, 0, 0, 1, 1, 0, 1, 1]' : 0.15845}
{'[6, 2, 2, 6, 0, 6, 1, 0, 21, 15, 0, 0, 0, 1, 1, 0, 1, 1]' : 0.157812}
{'[6, 2, 2, 6, 0, 6, 1, 0, 21, 15, 0, 0, 0, 1, 1, 0, 1, 1]' : 0.157815}
{'[6, 2, 2, 6, 0, 6, 1, 0, 21, 15, 0, 0, 0, 1, 1, 0, 1, 1]' : 0.157727}
{'[6, 2, 2, 6, 0, 6, 1, 0, 21, 15, 0, 0, 0, 1, 1, 0, 1, 1]' : 0.158687}
{'[6, 2, 2, 6, 0, 6, 1, 0, 21, 15, 0, 0, 0, 1, 1, 0, 1, 1]' : 0.1582}
{'[6, 2, 2, 6, 0, 6, 1, 0, 21, 15, 0, 0, 0, 1, 1, 0, 1, 1]' : 0.158114}
{'[6, 2, 2, 6, 0, 6, 1, 0, 21, 15, 0, 0, 0, 1, 1, 0, 1, 1]' : 0.157921}
{'[6, 2, 2, 6, 0, 6, 1, 0, 21, 15, 0, 0, 0, 1, 1, 0, 1, 1]' : 0.157637}
{'[6, 2, 2, 6, 0, 6, 1, 0, 21, 15, 0, 0, 0, 1, 1, 0, 1, 1]' : 0.158054}
{'[6, 2, 2, 6, 0, 6, 1, 0, 21, 15, 0, 0, 0, 1, 1, 0, 1, 1]' : 0.157768}
{'[6, 2, 2, 6, 0, 6, 1, 0, 21, 15, 0, 0, 0, 1, 1, 0, 1, 1]' : 0.157654}
{'[6, 2, 2, 6, 0, 6, 1, 0, 21, 15, 0, 0, 0, 1, 1, 0, 1, 1]' : 0.157719}
{'[6, 2, 2, 6, 0, 6, 1, 0, 21, 15, 0, 0, 0, 1, 1, 0, 1, 1]' : 0.157752}
{'[6, 2, 2, 6, 0, 6, 1, 0, 21, 15, 0, 0, 0, 1, 1, 0, 1, 1]' : 0.158512}
{'[6, 2, 2, 6, 0, 6, 1, 0, 21, 15, 0, 0, 0, 1, 1, 0, 1, 1]' : 0.157707}

out:
 ["{'[6, 2, 2, 6, 0, 6, 1, 0, 21, 15, 0, 0, 0, 1, 1, 0, 1, 1]' : 0.186733}", "{'[6, 2, 2, 6, 0, 6, 1, 0, 21, 15, 0, 0, 0, 1, 1, 0, 1, 1]' : 0.183266}", "{'[6, 2, 2, 6, 0, 6, 1, 0, 21, 15, 0, 0, 0, 1, 1, 0, 1, 1]' : 0.157951}", "{'[6, 2, 2, 6, 0, 6, 1, 0, 21, 15, 0, 0, 0, 1, 1, 0, 1, 1]' : 0.157766}", "{'[6, 2, 2, 6, 0, 6, 1, 0, 21, 15, 0, 0, 0, 1, 1, 0, 1, 1]' : 0.157953}", "{'[6, 2, 2, 6, 0, 6, 1, 0, 21, 15, 0, 0, 0, 1, 1, 0, 1, 1]' : 0.158104}", "{'[6, 2, 2, 6, 0, 6, 1, 0, 21, 15, 0, 0, 0, 1, 1, 0, 1, 1]' : 0.158043}", "{'[6, 2, 2, 6, 0, 6, 1, 0, 21, 15, 0, 0, 0, 1, 1, 0, 1, 1]' : 0.158129}", "{'[6, 2, 2, 6, 0, 6, 1, 0, 21, 15, 0, 0, 0, 1, 1, 0, 1, 1]' : 0.158063}", "{'[6, 2, 2, 6, 0, 6, 1, 0, 21, 15, 0, 0, 0, 1, 1, 0, 1, 1]' : 0.158479}", "{'[6, 2, 2, 6, 0, 6, 1, 0, 21, 15, 0, 0, 0, 1, 1, 0, 1, 1]' : 0.15764}", "{'[6, 2, 2, 6, 0, 6, 1, 0, 21, 15, 0, 0, 0, 1, 1, 0, 1, 1]' : 0.158034}", "{'[6, 2, 2, 6, 0, 6, 1, 0, 21, 15, 0, 0, 0, 1, 1, 0, 1, 1]' : 0.158518}", "{'[6, 2, 2, 6, 0, 6, 1, 0, 21, 15, 0, 0, 0, 1, 1, 0, 1, 1]' : 0.157673}", "{'[6, 2, 2, 6, 0, 6, 1, 0, 21, 15, 0, 0, 0, 1, 1, 0, 1, 1]' : 0.15845}", "{'[6, 2, 2, 6, 0, 6, 1, 0, 21, 15, 0, 0, 0, 1, 1, 0, 1, 1]' : 0.157812}", "{'[6, 2, 2, 6, 0, 6, 1, 0, 21, 15, 0, 0, 0, 1, 1, 0, 1, 1]' : 0.157815}", "{'[6, 2, 2, 6, 0, 6, 1, 0, 21, 15, 0, 0, 0, 1, 1, 0, 1, 1]' : 0.157727}", "{'[6, 2, 2, 6, 0, 6, 1, 0, 21, 15, 0, 0, 0, 1, 1, 0, 1, 1]' : 0.158687}", "{'[6, 2, 2, 6, 0, 6, 1, 0, 21, 15, 0, 0, 0, 1, 1, 0, 1, 1]' : 0.1582}", "{'[6, 2, 2, 6, 0, 6, 1, 0, 21, 15, 0, 0, 0, 1, 1, 0, 1, 1]' : 0.158114}", "{'[6, 2, 2, 6, 0, 6, 1, 0, 21, 15, 0, 0, 0, 1, 1, 0, 1, 1]' : 0.157921}", "{'[6, 2, 2, 6, 0, 6, 1, 0, 21, 15, 0, 0, 0, 1, 1, 0, 1, 1]' : 0.157637}", "{'[6, 2, 2, 6, 0, 6, 1, 0, 21, 15, 0, 0, 0, 1, 1, 0, 1, 1]' : 0.158054}", "{'[6, 2, 2, 6, 0, 6, 1, 0, 21, 15, 0, 0, 0, 1, 1, 0, 1, 1]' : 0.157768}", "{'[6, 2, 2, 6, 0, 6, 1, 0, 21, 15, 0, 0, 0, 1, 1, 0, 1, 1]' : 0.157654}", "{'[6, 2, 2, 6, 0, 6, 1, 0, 21, 15, 0, 0, 0, 1, 1, 0, 1, 1]' : 0.157719}", "{'[6, 2, 2, 6, 0, 6, 1, 0, 21, 15, 0, 0, 0, 1, 1, 0, 1, 1]' : 0.157752}", "{'[6, 2, 2, 6, 0, 6, 1, 0, 21, 15, 0, 0, 0, 1, 1, 0, 1, 1]' : 0.158512}", "{'[6, 2, 2, 6, 0, 6, 1, 0, 21, 15, 0, 0, 0, 1, 1, 0, 1, 1]' : 0.157707}"]
returning from 'run': {'[6, 2, 2, 6, 0, 6, 1, 0, 21, 15, 0, 0, 0, 1, 1, 0, 1, 1]': ([0.186733, 0.183266, 0.157951, 0.157766, 0.157953, 0.158104, 0.158043, 0.158129, 0.158063, 0.158479, 0.15764, 0.158034, 0.158518, 0.157673, 0.15845, 0.157812, 0.157815, 0.157727, 0.158687, 0.1582, 0.158114, 0.157921, 0.157637, 0.158054, 0.157768, 0.157654, 0.157719, 0.157752, 0.158512, 0.157707], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 2, 2, 6, 0, 6, 1, 0, 21, 15, 0, 0, 0, 1, 1, 0, 1, 1]': ([0.186733, 0.183266, 0.157951, 0.157766, 0.157953, 0.158104, 0.158043, 0.158129, 0.158063, 0.158479, 0.15764, 0.158034, 0.158518, 0.157673, 0.15845, 0.157812, 0.157815, 0.157727, 0.158687, 0.1582, 0.158114, 0.157921, 0.157637, 0.158054, 0.157768, 0.157654, 0.157719, 0.157752, 0.158512, 0.157707], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	43
        Max loop nest depth: 	6
        Additions: 		5445
        Multiplications: 	1600
        Divisions: 		0
        Logical: 		0
        Reads: 			8516
        Writes: 		954
        Comparisons:		43
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest60.exe __orio_perftest60.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest60.exe  
Program Test Output: 
{'[2, 4, 0, 2, 3, 2, 1, 0, 18, 15, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.132954}
{'[2, 4, 0, 2, 3, 2, 1, 0, 18, 15, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.132864}
{'[2, 4, 0, 2, 3, 2, 1, 0, 18, 15, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.119508}
{'[2, 4, 0, 2, 3, 2, 1, 0, 18, 15, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.114693}
{'[2, 4, 0, 2, 3, 2, 1, 0, 18, 15, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.11471}
{'[2, 4, 0, 2, 3, 2, 1, 0, 18, 15, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.114712}
{'[2, 4, 0, 2, 3, 2, 1, 0, 18, 15, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.114721}
{'[2, 4, 0, 2, 3, 2, 1, 0, 18, 15, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.115505}
{'[2, 4, 0, 2, 3, 2, 1, 0, 18, 15, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.11484}
{'[2, 4, 0, 2, 3, 2, 1, 0, 18, 15, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.114914}
{'[2, 4, 0, 2, 3, 2, 1, 0, 18, 15, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.114761}
{'[2, 4, 0, 2, 3, 2, 1, 0, 18, 15, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.114867}
{'[2, 4, 0, 2, 3, 2, 1, 0, 18, 15, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.114868}
{'[2, 4, 0, 2, 3, 2, 1, 0, 18, 15, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.115062}
{'[2, 4, 0, 2, 3, 2, 1, 0, 18, 15, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.1137}
{'[2, 4, 0, 2, 3, 2, 1, 0, 18, 15, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.113413}
{'[2, 4, 0, 2, 3, 2, 1, 0, 18, 15, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.113424}
{'[2, 4, 0, 2, 3, 2, 1, 0, 18, 15, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.113387}
{'[2, 4, 0, 2, 3, 2, 1, 0, 18, 15, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.113726}
{'[2, 4, 0, 2, 3, 2, 1, 0, 18, 15, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.113419}
{'[2, 4, 0, 2, 3, 2, 1, 0, 18, 15, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.113765}
{'[2, 4, 0, 2, 3, 2, 1, 0, 18, 15, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.113694}
{'[2, 4, 0, 2, 3, 2, 1, 0, 18, 15, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.11332}
{'[2, 4, 0, 2, 3, 2, 1, 0, 18, 15, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.113458}
{'[2, 4, 0, 2, 3, 2, 1, 0, 18, 15, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.113449}
{'[2, 4, 0, 2, 3, 2, 1, 0, 18, 15, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.113468}
{'[2, 4, 0, 2, 3, 2, 1, 0, 18, 15, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.113324}
{'[2, 4, 0, 2, 3, 2, 1, 0, 18, 15, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.113445}
{'[2, 4, 0, 2, 3, 2, 1, 0, 18, 15, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.113433}
{'[2, 4, 0, 2, 3, 2, 1, 0, 18, 15, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.113457}

out:
 ["{'[2, 4, 0, 2, 3, 2, 1, 0, 18, 15, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.132954}", "{'[2, 4, 0, 2, 3, 2, 1, 0, 18, 15, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.132864}", "{'[2, 4, 0, 2, 3, 2, 1, 0, 18, 15, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.119508}", "{'[2, 4, 0, 2, 3, 2, 1, 0, 18, 15, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.114693}", "{'[2, 4, 0, 2, 3, 2, 1, 0, 18, 15, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.11471}", "{'[2, 4, 0, 2, 3, 2, 1, 0, 18, 15, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.114712}", "{'[2, 4, 0, 2, 3, 2, 1, 0, 18, 15, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.114721}", "{'[2, 4, 0, 2, 3, 2, 1, 0, 18, 15, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.115505}", "{'[2, 4, 0, 2, 3, 2, 1, 0, 18, 15, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.11484}", "{'[2, 4, 0, 2, 3, 2, 1, 0, 18, 15, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.114914}", "{'[2, 4, 0, 2, 3, 2, 1, 0, 18, 15, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.114761}", "{'[2, 4, 0, 2, 3, 2, 1, 0, 18, 15, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.114867}", "{'[2, 4, 0, 2, 3, 2, 1, 0, 18, 15, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.114868}", "{'[2, 4, 0, 2, 3, 2, 1, 0, 18, 15, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.115062}", "{'[2, 4, 0, 2, 3, 2, 1, 0, 18, 15, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.1137}", "{'[2, 4, 0, 2, 3, 2, 1, 0, 18, 15, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.113413}", "{'[2, 4, 0, 2, 3, 2, 1, 0, 18, 15, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.113424}", "{'[2, 4, 0, 2, 3, 2, 1, 0, 18, 15, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.113387}", "{'[2, 4, 0, 2, 3, 2, 1, 0, 18, 15, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.113726}", "{'[2, 4, 0, 2, 3, 2, 1, 0, 18, 15, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.113419}", "{'[2, 4, 0, 2, 3, 2, 1, 0, 18, 15, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.113765}", "{'[2, 4, 0, 2, 3, 2, 1, 0, 18, 15, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.113694}", "{'[2, 4, 0, 2, 3, 2, 1, 0, 18, 15, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.11332}", "{'[2, 4, 0, 2, 3, 2, 1, 0, 18, 15, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.113458}", "{'[2, 4, 0, 2, 3, 2, 1, 0, 18, 15, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.113449}", "{'[2, 4, 0, 2, 3, 2, 1, 0, 18, 15, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.113468}", "{'[2, 4, 0, 2, 3, 2, 1, 0, 18, 15, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.113324}", "{'[2, 4, 0, 2, 3, 2, 1, 0, 18, 15, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.113445}", "{'[2, 4, 0, 2, 3, 2, 1, 0, 18, 15, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.113433}", "{'[2, 4, 0, 2, 3, 2, 1, 0, 18, 15, 0, 29, 1, 0, 0, 0, 0, 1]' : 0.113457}"]
returning from 'run': {'[2, 4, 0, 2, 3, 2, 1, 0, 18, 15, 0, 29, 1, 0, 0, 0, 0, 1]': ([0.132954, 0.132864, 0.119508, 0.114693, 0.11471, 0.114712, 0.114721, 0.115505, 0.11484, 0.114914, 0.114761, 0.114867, 0.114868, 0.115062, 0.1137, 0.113413, 0.113424, 0.113387, 0.113726, 0.113419, 0.113765, 0.113694, 0.11332, 0.113458, 0.113449, 0.113468, 0.113324, 0.113445, 0.113433, 0.113457], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 4, 0, 2, 3, 2, 1, 0, 18, 15, 0, 29, 1, 0, 0, 0, 0, 1]': ([0.132954, 0.132864, 0.119508, 0.114693, 0.11471, 0.114712, 0.114721, 0.115505, 0.11484, 0.114914, 0.114761, 0.114867, 0.114868, 0.115062, 0.1137, 0.113413, 0.113424, 0.113387, 0.113726, 0.113419, 0.113765, 0.113694, 0.11332, 0.113458, 0.113449, 0.113468, 0.113324, 0.113445, 0.113433, 0.113457], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = kkk
Code stats:
        Number of loops: 	83
        Max loop nest depth: 	5
        Additions: 		8658
        Multiplications: 	2176
        Divisions: 		0
        Logical: 		0
        Reads: 			12797
        Writes: 		1314
        Comparisons:		83
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest61.exe __orio_perftest61.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest61.exe  
Program Test Output: 
{'[0, 2, 4, 6, 2, 2, 0, 1, 4, 15, 0, 29, 0, 2, 0, 0, 1, 0]' : 0.18501}
{'[0, 2, 4, 6, 2, 2, 0, 1, 4, 15, 0, 29, 0, 2, 0, 0, 1, 0]' : 0.18959}
{'[0, 2, 4, 6, 2, 2, 0, 1, 4, 15, 0, 29, 0, 2, 0, 0, 1, 0]' : 0.190937}
{'[0, 2, 4, 6, 2, 2, 0, 1, 4, 15, 0, 29, 0, 2, 0, 0, 1, 0]' : 0.188002}
{'[0, 2, 4, 6, 2, 2, 0, 1, 4, 15, 0, 29, 0, 2, 0, 0, 1, 0]' : 0.188742}
{'[0, 2, 4, 6, 2, 2, 0, 1, 4, 15, 0, 29, 0, 2, 0, 0, 1, 0]' : 0.188747}
{'[0, 2, 4, 6, 2, 2, 0, 1, 4, 15, 0, 29, 0, 2, 0, 0, 1, 0]' : 0.186895}
{'[0, 2, 4, 6, 2, 2, 0, 1, 4, 15, 0, 29, 0, 2, 0, 0, 1, 0]' : 0.183678}
{'[0, 2, 4, 6, 2, 2, 0, 1, 4, 15, 0, 29, 0, 2, 0, 0, 1, 0]' : 0.184421}
{'[0, 2, 4, 6, 2, 2, 0, 1, 4, 15, 0, 29, 0, 2, 0, 0, 1, 0]' : 0.188929}
{'[0, 2, 4, 6, 2, 2, 0, 1, 4, 15, 0, 29, 0, 2, 0, 0, 1, 0]' : 0.188963}
{'[0, 2, 4, 6, 2, 2, 0, 1, 4, 15, 0, 29, 0, 2, 0, 0, 1, 0]' : 0.189449}
{'[0, 2, 4, 6, 2, 2, 0, 1, 4, 15, 0, 29, 0, 2, 0, 0, 1, 0]' : 0.186905}
{'[0, 2, 4, 6, 2, 2, 0, 1, 4, 15, 0, 29, 0, 2, 0, 0, 1, 0]' : 0.182412}
{'[0, 2, 4, 6, 2, 2, 0, 1, 4, 15, 0, 29, 0, 2, 0, 0, 1, 0]' : 0.183331}
{'[0, 2, 4, 6, 2, 2, 0, 1, 4, 15, 0, 29, 0, 2, 0, 0, 1, 0]' : 0.183561}
{'[0, 2, 4, 6, 2, 2, 0, 1, 4, 15, 0, 29, 0, 2, 0, 0, 1, 0]' : 0.184525}
{'[0, 2, 4, 6, 2, 2, 0, 1, 4, 15, 0, 29, 0, 2, 0, 0, 1, 0]' : 0.18789}
{'[0, 2, 4, 6, 2, 2, 0, 1, 4, 15, 0, 29, 0, 2, 0, 0, 1, 0]' : 0.184933}
{'[0, 2, 4, 6, 2, 2, 0, 1, 4, 15, 0, 29, 0, 2, 0, 0, 1, 0]' : 0.184341}
{'[0, 2, 4, 6, 2, 2, 0, 1, 4, 15, 0, 29, 0, 2, 0, 0, 1, 0]' : 0.183574}
{'[0, 2, 4, 6, 2, 2, 0, 1, 4, 15, 0, 29, 0, 2, 0, 0, 1, 0]' : 0.183979}
{'[0, 2, 4, 6, 2, 2, 0, 1, 4, 15, 0, 29, 0, 2, 0, 0, 1, 0]' : 0.187554}
{'[0, 2, 4, 6, 2, 2, 0, 1, 4, 15, 0, 29, 0, 2, 0, 0, 1, 0]' : 0.189528}
{'[0, 2, 4, 6, 2, 2, 0, 1, 4, 15, 0, 29, 0, 2, 0, 0, 1, 0]' : 0.187927}
{'[0, 2, 4, 6, 2, 2, 0, 1, 4, 15, 0, 29, 0, 2, 0, 0, 1, 0]' : 0.188683}
{'[0, 2, 4, 6, 2, 2, 0, 1, 4, 15, 0, 29, 0, 2, 0, 0, 1, 0]' : 0.188564}
{'[0, 2, 4, 6, 2, 2, 0, 1, 4, 15, 0, 29, 0, 2, 0, 0, 1, 0]' : 0.189174}
{'[0, 2, 4, 6, 2, 2, 0, 1, 4, 15, 0, 29, 0, 2, 0, 0, 1, 0]' : 0.189863}
{'[0, 2, 4, 6, 2, 2, 0, 1, 4, 15, 0, 29, 0, 2, 0, 0, 1, 0]' : 0.18408}

out:
 ["{'[0, 2, 4, 6, 2, 2, 0, 1, 4, 15, 0, 29, 0, 2, 0, 0, 1, 0]' : 0.18501}", "{'[0, 2, 4, 6, 2, 2, 0, 1, 4, 15, 0, 29, 0, 2, 0, 0, 1, 0]' : 0.18959}", "{'[0, 2, 4, 6, 2, 2, 0, 1, 4, 15, 0, 29, 0, 2, 0, 0, 1, 0]' : 0.190937}", "{'[0, 2, 4, 6, 2, 2, 0, 1, 4, 15, 0, 29, 0, 2, 0, 0, 1, 0]' : 0.188002}", "{'[0, 2, 4, 6, 2, 2, 0, 1, 4, 15, 0, 29, 0, 2, 0, 0, 1, 0]' : 0.188742}", "{'[0, 2, 4, 6, 2, 2, 0, 1, 4, 15, 0, 29, 0, 2, 0, 0, 1, 0]' : 0.188747}", "{'[0, 2, 4, 6, 2, 2, 0, 1, 4, 15, 0, 29, 0, 2, 0, 0, 1, 0]' : 0.186895}", "{'[0, 2, 4, 6, 2, 2, 0, 1, 4, 15, 0, 29, 0, 2, 0, 0, 1, 0]' : 0.183678}", "{'[0, 2, 4, 6, 2, 2, 0, 1, 4, 15, 0, 29, 0, 2, 0, 0, 1, 0]' : 0.184421}", "{'[0, 2, 4, 6, 2, 2, 0, 1, 4, 15, 0, 29, 0, 2, 0, 0, 1, 0]' : 0.188929}", "{'[0, 2, 4, 6, 2, 2, 0, 1, 4, 15, 0, 29, 0, 2, 0, 0, 1, 0]' : 0.188963}", "{'[0, 2, 4, 6, 2, 2, 0, 1, 4, 15, 0, 29, 0, 2, 0, 0, 1, 0]' : 0.189449}", "{'[0, 2, 4, 6, 2, 2, 0, 1, 4, 15, 0, 29, 0, 2, 0, 0, 1, 0]' : 0.186905}", "{'[0, 2, 4, 6, 2, 2, 0, 1, 4, 15, 0, 29, 0, 2, 0, 0, 1, 0]' : 0.182412}", "{'[0, 2, 4, 6, 2, 2, 0, 1, 4, 15, 0, 29, 0, 2, 0, 0, 1, 0]' : 0.183331}", "{'[0, 2, 4, 6, 2, 2, 0, 1, 4, 15, 0, 29, 0, 2, 0, 0, 1, 0]' : 0.183561}", "{'[0, 2, 4, 6, 2, 2, 0, 1, 4, 15, 0, 29, 0, 2, 0, 0, 1, 0]' : 0.184525}", "{'[0, 2, 4, 6, 2, 2, 0, 1, 4, 15, 0, 29, 0, 2, 0, 0, 1, 0]' : 0.18789}", "{'[0, 2, 4, 6, 2, 2, 0, 1, 4, 15, 0, 29, 0, 2, 0, 0, 1, 0]' : 0.184933}", "{'[0, 2, 4, 6, 2, 2, 0, 1, 4, 15, 0, 29, 0, 2, 0, 0, 1, 0]' : 0.184341}", "{'[0, 2, 4, 6, 2, 2, 0, 1, 4, 15, 0, 29, 0, 2, 0, 0, 1, 0]' : 0.183574}", "{'[0, 2, 4, 6, 2, 2, 0, 1, 4, 15, 0, 29, 0, 2, 0, 0, 1, 0]' : 0.183979}", "{'[0, 2, 4, 6, 2, 2, 0, 1, 4, 15, 0, 29, 0, 2, 0, 0, 1, 0]' : 0.187554}", "{'[0, 2, 4, 6, 2, 2, 0, 1, 4, 15, 0, 29, 0, 2, 0, 0, 1, 0]' : 0.189528}", "{'[0, 2, 4, 6, 2, 2, 0, 1, 4, 15, 0, 29, 0, 2, 0, 0, 1, 0]' : 0.187927}", "{'[0, 2, 4, 6, 2, 2, 0, 1, 4, 15, 0, 29, 0, 2, 0, 0, 1, 0]' : 0.188683}", "{'[0, 2, 4, 6, 2, 2, 0, 1, 4, 15, 0, 29, 0, 2, 0, 0, 1, 0]' : 0.188564}", "{'[0, 2, 4, 6, 2, 2, 0, 1, 4, 15, 0, 29, 0, 2, 0, 0, 1, 0]' : 0.189174}", "{'[0, 2, 4, 6, 2, 2, 0, 1, 4, 15, 0, 29, 0, 2, 0, 0, 1, 0]' : 0.189863}", "{'[0, 2, 4, 6, 2, 2, 0, 1, 4, 15, 0, 29, 0, 2, 0, 0, 1, 0]' : 0.18408}"]
returning from 'run': {'[0, 2, 4, 6, 2, 2, 0, 1, 4, 15, 0, 29, 0, 2, 0, 0, 1, 0]': ([0.18501, 0.18959, 0.190937, 0.188002, 0.188742, 0.188747, 0.186895, 0.183678, 0.184421, 0.188929, 0.188963, 0.189449, 0.186905, 0.182412, 0.183331, 0.183561, 0.184525, 0.18789, 0.184933, 0.184341, 0.183574, 0.183979, 0.187554, 0.189528, 0.187927, 0.188683, 0.188564, 0.189174, 0.189863, 0.18408], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 4, 6, 2, 2, 0, 1, 4, 15, 0, 29, 0, 2, 0, 0, 1, 0]': ([0.18501, 0.18959, 0.190937, 0.188002, 0.188742, 0.188747, 0.186895, 0.183678, 0.184421, 0.188929, 0.188963, 0.189449, 0.186905, 0.182412, 0.183331, 0.183561, 0.184525, 0.18789, 0.184933, 0.184341, 0.183574, 0.183979, 0.187554, 0.189528, 0.187927, 0.188683, 0.188564, 0.189174, 0.189863, 0.18408], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	33
        Max loop nest depth: 	5
        Additions: 		3935
        Multiplications: 	1156
        Divisions: 		0
        Logical: 		0
        Reads: 			6157
        Writes: 		687
        Comparisons:		33
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest62.exe __orio_perftest62.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest62.exe  
Program Test Output: 
{'[1, 0, 5, 5, 6, 0, 1, 0, 7, 15, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.147931}
{'[1, 0, 5, 5, 6, 0, 1, 0, 7, 15, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.145665}
{'[1, 0, 5, 5, 6, 0, 1, 0, 7, 15, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.148227}
{'[1, 0, 5, 5, 6, 0, 1, 0, 7, 15, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.149098}
{'[1, 0, 5, 5, 6, 0, 1, 0, 7, 15, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.149299}
{'[1, 0, 5, 5, 6, 0, 1, 0, 7, 15, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.14908}
{'[1, 0, 5, 5, 6, 0, 1, 0, 7, 15, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.1494}
{'[1, 0, 5, 5, 6, 0, 1, 0, 7, 15, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.147827}
{'[1, 0, 5, 5, 6, 0, 1, 0, 7, 15, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.149166}
{'[1, 0, 5, 5, 6, 0, 1, 0, 7, 15, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.149357}
{'[1, 0, 5, 5, 6, 0, 1, 0, 7, 15, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.149101}
{'[1, 0, 5, 5, 6, 0, 1, 0, 7, 15, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.149413}
{'[1, 0, 5, 5, 6, 0, 1, 0, 7, 15, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.149181}
{'[1, 0, 5, 5, 6, 0, 1, 0, 7, 15, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.149123}
{'[1, 0, 5, 5, 6, 0, 1, 0, 7, 15, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.148939}
{'[1, 0, 5, 5, 6, 0, 1, 0, 7, 15, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.149479}
{'[1, 0, 5, 5, 6, 0, 1, 0, 7, 15, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.149519}
{'[1, 0, 5, 5, 6, 0, 1, 0, 7, 15, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.14937}
{'[1, 0, 5, 5, 6, 0, 1, 0, 7, 15, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.148982}
{'[1, 0, 5, 5, 6, 0, 1, 0, 7, 15, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.149003}
{'[1, 0, 5, 5, 6, 0, 1, 0, 7, 15, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.149042}
{'[1, 0, 5, 5, 6, 0, 1, 0, 7, 15, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.149649}
{'[1, 0, 5, 5, 6, 0, 1, 0, 7, 15, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.149419}
{'[1, 0, 5, 5, 6, 0, 1, 0, 7, 15, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.149924}
{'[1, 0, 5, 5, 6, 0, 1, 0, 7, 15, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.14984}
{'[1, 0, 5, 5, 6, 0, 1, 0, 7, 15, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.149165}
{'[1, 0, 5, 5, 6, 0, 1, 0, 7, 15, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.149015}
{'[1, 0, 5, 5, 6, 0, 1, 0, 7, 15, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.147297}
{'[1, 0, 5, 5, 6, 0, 1, 0, 7, 15, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.14982}
{'[1, 0, 5, 5, 6, 0, 1, 0, 7, 15, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.149675}

out:
 ["{'[1, 0, 5, 5, 6, 0, 1, 0, 7, 15, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.147931}", "{'[1, 0, 5, 5, 6, 0, 1, 0, 7, 15, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.145665}", "{'[1, 0, 5, 5, 6, 0, 1, 0, 7, 15, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.148227}", "{'[1, 0, 5, 5, 6, 0, 1, 0, 7, 15, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.149098}", "{'[1, 0, 5, 5, 6, 0, 1, 0, 7, 15, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.149299}", "{'[1, 0, 5, 5, 6, 0, 1, 0, 7, 15, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.14908}", "{'[1, 0, 5, 5, 6, 0, 1, 0, 7, 15, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.1494}", "{'[1, 0, 5, 5, 6, 0, 1, 0, 7, 15, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.147827}", "{'[1, 0, 5, 5, 6, 0, 1, 0, 7, 15, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.149166}", "{'[1, 0, 5, 5, 6, 0, 1, 0, 7, 15, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.149357}", "{'[1, 0, 5, 5, 6, 0, 1, 0, 7, 15, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.149101}", "{'[1, 0, 5, 5, 6, 0, 1, 0, 7, 15, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.149413}", "{'[1, 0, 5, 5, 6, 0, 1, 0, 7, 15, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.149181}", "{'[1, 0, 5, 5, 6, 0, 1, 0, 7, 15, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.149123}", "{'[1, 0, 5, 5, 6, 0, 1, 0, 7, 15, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.148939}", "{'[1, 0, 5, 5, 6, 0, 1, 0, 7, 15, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.149479}", "{'[1, 0, 5, 5, 6, 0, 1, 0, 7, 15, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.149519}", "{'[1, 0, 5, 5, 6, 0, 1, 0, 7, 15, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.14937}", "{'[1, 0, 5, 5, 6, 0, 1, 0, 7, 15, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.148982}", "{'[1, 0, 5, 5, 6, 0, 1, 0, 7, 15, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.149003}", "{'[1, 0, 5, 5, 6, 0, 1, 0, 7, 15, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.149042}", "{'[1, 0, 5, 5, 6, 0, 1, 0, 7, 15, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.149649}", "{'[1, 0, 5, 5, 6, 0, 1, 0, 7, 15, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.149419}", "{'[1, 0, 5, 5, 6, 0, 1, 0, 7, 15, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.149924}", "{'[1, 0, 5, 5, 6, 0, 1, 0, 7, 15, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.14984}", "{'[1, 0, 5, 5, 6, 0, 1, 0, 7, 15, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.149165}", "{'[1, 0, 5, 5, 6, 0, 1, 0, 7, 15, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.149015}", "{'[1, 0, 5, 5, 6, 0, 1, 0, 7, 15, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.147297}", "{'[1, 0, 5, 5, 6, 0, 1, 0, 7, 15, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.14982}", "{'[1, 0, 5, 5, 6, 0, 1, 0, 7, 15, 0, 0, 0, 0, 2, 0, 0, 0]' : 0.149675}"]
returning from 'run': {'[1, 0, 5, 5, 6, 0, 1, 0, 7, 15, 0, 0, 0, 0, 2, 0, 0, 0]': ([0.147931, 0.145665, 0.148227, 0.149098, 0.149299, 0.14908, 0.1494, 0.147827, 0.149166, 0.149357, 0.149101, 0.149413, 0.149181, 0.149123, 0.148939, 0.149479, 0.149519, 0.14937, 0.148982, 0.149003, 0.149042, 0.149649, 0.149419, 0.149924, 0.14984, 0.149165, 0.149015, 0.147297, 0.14982, 0.149675], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 5, 5, 6, 0, 1, 0, 7, 15, 0, 0, 0, 0, 2, 0, 0, 0]': ([0.147931, 0.145665, 0.148227, 0.149098, 0.149299, 0.14908, 0.1494, 0.147827, 0.149166, 0.149357, 0.149101, 0.149413, 0.149181, 0.149123, 0.148939, 0.149479, 0.149519, 0.14937, 0.148982, 0.149003, 0.149042, 0.149649, 0.149419, 0.149924, 0.14984, 0.149165, 0.149015, 0.147297, 0.14982, 0.149675], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	99
        Max loop nest depth: 	4
        Additions: 		1597
        Multiplications: 	272
        Divisions: 		0
        Logical: 		0
        Reads: 			2721
        Writes: 		436
        Comparisons:		99
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest63.exe __orio_perftest63.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest63.exe  
Program Test Output: 
{'[0, 2, 6, 0, 6, 5, 1, 1, 29, 15, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.188027}
{'[0, 2, 6, 0, 6, 5, 1, 1, 29, 15, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.182861}
{'[0, 2, 6, 0, 6, 5, 1, 1, 29, 15, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.187652}
{'[0, 2, 6, 0, 6, 5, 1, 1, 29, 15, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.187746}
{'[0, 2, 6, 0, 6, 5, 1, 1, 29, 15, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.187901}
{'[0, 2, 6, 0, 6, 5, 1, 1, 29, 15, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.187804}
{'[0, 2, 6, 0, 6, 5, 1, 1, 29, 15, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.184409}
{'[0, 2, 6, 0, 6, 5, 1, 1, 29, 15, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.186351}
{'[0, 2, 6, 0, 6, 5, 1, 1, 29, 15, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.182582}
{'[0, 2, 6, 0, 6, 5, 1, 1, 29, 15, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.182507}
{'[0, 2, 6, 0, 6, 5, 1, 1, 29, 15, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.182746}
{'[0, 2, 6, 0, 6, 5, 1, 1, 29, 15, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.183226}
{'[0, 2, 6, 0, 6, 5, 1, 1, 29, 15, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.181446}
{'[0, 2, 6, 0, 6, 5, 1, 1, 29, 15, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.18748}
{'[0, 2, 6, 0, 6, 5, 1, 1, 29, 15, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.187665}
{'[0, 2, 6, 0, 6, 5, 1, 1, 29, 15, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.187875}
{'[0, 2, 6, 0, 6, 5, 1, 1, 29, 15, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.187954}
{'[0, 2, 6, 0, 6, 5, 1, 1, 29, 15, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.183159}
{'[0, 2, 6, 0, 6, 5, 1, 1, 29, 15, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.186021}
{'[0, 2, 6, 0, 6, 5, 1, 1, 29, 15, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.187568}
{'[0, 2, 6, 0, 6, 5, 1, 1, 29, 15, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.187733}
{'[0, 2, 6, 0, 6, 5, 1, 1, 29, 15, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.187691}
{'[0, 2, 6, 0, 6, 5, 1, 1, 29, 15, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.187702}
{'[0, 2, 6, 0, 6, 5, 1, 1, 29, 15, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.187661}
{'[0, 2, 6, 0, 6, 5, 1, 1, 29, 15, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.187533}
{'[0, 2, 6, 0, 6, 5, 1, 1, 29, 15, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.187728}
{'[0, 2, 6, 0, 6, 5, 1, 1, 29, 15, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.187635}
{'[0, 2, 6, 0, 6, 5, 1, 1, 29, 15, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.188075}
{'[0, 2, 6, 0, 6, 5, 1, 1, 29, 15, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.182212}
{'[0, 2, 6, 0, 6, 5, 1, 1, 29, 15, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.1875}

out:
 ["{'[0, 2, 6, 0, 6, 5, 1, 1, 29, 15, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.188027}", "{'[0, 2, 6, 0, 6, 5, 1, 1, 29, 15, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.182861}", "{'[0, 2, 6, 0, 6, 5, 1, 1, 29, 15, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.187652}", "{'[0, 2, 6, 0, 6, 5, 1, 1, 29, 15, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.187746}", "{'[0, 2, 6, 0, 6, 5, 1, 1, 29, 15, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.187901}", "{'[0, 2, 6, 0, 6, 5, 1, 1, 29, 15, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.187804}", "{'[0, 2, 6, 0, 6, 5, 1, 1, 29, 15, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.184409}", "{'[0, 2, 6, 0, 6, 5, 1, 1, 29, 15, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.186351}", "{'[0, 2, 6, 0, 6, 5, 1, 1, 29, 15, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.182582}", "{'[0, 2, 6, 0, 6, 5, 1, 1, 29, 15, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.182507}", "{'[0, 2, 6, 0, 6, 5, 1, 1, 29, 15, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.182746}", "{'[0, 2, 6, 0, 6, 5, 1, 1, 29, 15, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.183226}", "{'[0, 2, 6, 0, 6, 5, 1, 1, 29, 15, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.181446}", "{'[0, 2, 6, 0, 6, 5, 1, 1, 29, 15, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.18748}", "{'[0, 2, 6, 0, 6, 5, 1, 1, 29, 15, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.187665}", "{'[0, 2, 6, 0, 6, 5, 1, 1, 29, 15, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.187875}", "{'[0, 2, 6, 0, 6, 5, 1, 1, 29, 15, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.187954}", "{'[0, 2, 6, 0, 6, 5, 1, 1, 29, 15, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.183159}", "{'[0, 2, 6, 0, 6, 5, 1, 1, 29, 15, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.186021}", "{'[0, 2, 6, 0, 6, 5, 1, 1, 29, 15, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.187568}", "{'[0, 2, 6, 0, 6, 5, 1, 1, 29, 15, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.187733}", "{'[0, 2, 6, 0, 6, 5, 1, 1, 29, 15, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.187691}", "{'[0, 2, 6, 0, 6, 5, 1, 1, 29, 15, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.187702}", "{'[0, 2, 6, 0, 6, 5, 1, 1, 29, 15, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.187661}", "{'[0, 2, 6, 0, 6, 5, 1, 1, 29, 15, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.187533}", "{'[0, 2, 6, 0, 6, 5, 1, 1, 29, 15, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.187728}", "{'[0, 2, 6, 0, 6, 5, 1, 1, 29, 15, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.187635}", "{'[0, 2, 6, 0, 6, 5, 1, 1, 29, 15, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.188075}", "{'[0, 2, 6, 0, 6, 5, 1, 1, 29, 15, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.182212}", "{'[0, 2, 6, 0, 6, 5, 1, 1, 29, 15, 0, 5, 0, 0, 0, 0, 1, 0]' : 0.1875}"]
returning from 'run': {'[0, 2, 6, 0, 6, 5, 1, 1, 29, 15, 0, 5, 0, 0, 0, 0, 1, 0]': ([0.188027, 0.182861, 0.187652, 0.187746, 0.187901, 0.187804, 0.184409, 0.186351, 0.182582, 0.182507, 0.182746, 0.183226, 0.181446, 0.18748, 0.187665, 0.187875, 0.187954, 0.183159, 0.186021, 0.187568, 0.187733, 0.187691, 0.187702, 0.187661, 0.187533, 0.187728, 0.187635, 0.188075, 0.182212, 0.1875], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 6, 0, 6, 5, 1, 1, 29, 15, 0, 5, 0, 0, 0, 0, 1, 0]': ([0.188027, 0.182861, 0.187652, 0.187746, 0.187901, 0.187804, 0.184409, 0.186351, 0.182582, 0.182507, 0.182746, 0.183226, 0.181446, 0.18748, 0.187665, 0.187875, 0.187954, 0.183159, 0.186021, 0.187568, 0.187733, 0.187691, 0.187702, 0.187661, 0.187533, 0.187728, 0.187635, 0.188075, 0.182212, 0.1875], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	32
        Max loop nest depth: 	4
        Additions: 		3936
        Multiplications: 	1156
        Divisions: 		0
        Logical: 		0
        Reads: 			6170
        Writes: 		695
        Comparisons:		32
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest64.exe __orio_perftest64.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest64.exe  
Program Test Output: 
{'[0, 6, 0, 5, 0, 6, 1, 0, 11, 15, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.171814}
{'[0, 6, 0, 5, 0, 6, 1, 0, 11, 15, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.165203}
{'[0, 6, 0, 5, 0, 6, 1, 0, 11, 15, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.148289}
{'[0, 6, 0, 5, 0, 6, 1, 0, 11, 15, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.148166}
{'[0, 6, 0, 5, 0, 6, 1, 0, 11, 15, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.14907}
{'[0, 6, 0, 5, 0, 6, 1, 0, 11, 15, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.148082}
{'[0, 6, 0, 5, 0, 6, 1, 0, 11, 15, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.148356}
{'[0, 6, 0, 5, 0, 6, 1, 0, 11, 15, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.147617}
{'[0, 6, 0, 5, 0, 6, 1, 0, 11, 15, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.147566}
{'[0, 6, 0, 5, 0, 6, 1, 0, 11, 15, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.147582}
{'[0, 6, 0, 5, 0, 6, 1, 0, 11, 15, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.147494}
{'[0, 6, 0, 5, 0, 6, 1, 0, 11, 15, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.148063}
{'[0, 6, 0, 5, 0, 6, 1, 0, 11, 15, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.147613}
{'[0, 6, 0, 5, 0, 6, 1, 0, 11, 15, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.147568}
{'[0, 6, 0, 5, 0, 6, 1, 0, 11, 15, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.147649}
{'[0, 6, 0, 5, 0, 6, 1, 0, 11, 15, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.147737}
{'[0, 6, 0, 5, 0, 6, 1, 0, 11, 15, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.148303}
{'[0, 6, 0, 5, 0, 6, 1, 0, 11, 15, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.147466}
{'[0, 6, 0, 5, 0, 6, 1, 0, 11, 15, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.14751}
{'[0, 6, 0, 5, 0, 6, 1, 0, 11, 15, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.147616}
{'[0, 6, 0, 5, 0, 6, 1, 0, 11, 15, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.147478}
{'[0, 6, 0, 5, 0, 6, 1, 0, 11, 15, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.147526}
{'[0, 6, 0, 5, 0, 6, 1, 0, 11, 15, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.147652}
{'[0, 6, 0, 5, 0, 6, 1, 0, 11, 15, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.147528}
{'[0, 6, 0, 5, 0, 6, 1, 0, 11, 15, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.147649}
{'[0, 6, 0, 5, 0, 6, 1, 0, 11, 15, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.147568}
{'[0, 6, 0, 5, 0, 6, 1, 0, 11, 15, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.147736}
{'[0, 6, 0, 5, 0, 6, 1, 0, 11, 15, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.14828}
{'[0, 6, 0, 5, 0, 6, 1, 0, 11, 15, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.147496}
{'[0, 6, 0, 5, 0, 6, 1, 0, 11, 15, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.147565}

out:
 ["{'[0, 6, 0, 5, 0, 6, 1, 0, 11, 15, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.171814}", "{'[0, 6, 0, 5, 0, 6, 1, 0, 11, 15, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.165203}", "{'[0, 6, 0, 5, 0, 6, 1, 0, 11, 15, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.148289}", "{'[0, 6, 0, 5, 0, 6, 1, 0, 11, 15, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.148166}", "{'[0, 6, 0, 5, 0, 6, 1, 0, 11, 15, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.14907}", "{'[0, 6, 0, 5, 0, 6, 1, 0, 11, 15, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.148082}", "{'[0, 6, 0, 5, 0, 6, 1, 0, 11, 15, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.148356}", "{'[0, 6, 0, 5, 0, 6, 1, 0, 11, 15, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.147617}", "{'[0, 6, 0, 5, 0, 6, 1, 0, 11, 15, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.147566}", "{'[0, 6, 0, 5, 0, 6, 1, 0, 11, 15, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.147582}", "{'[0, 6, 0, 5, 0, 6, 1, 0, 11, 15, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.147494}", "{'[0, 6, 0, 5, 0, 6, 1, 0, 11, 15, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.148063}", "{'[0, 6, 0, 5, 0, 6, 1, 0, 11, 15, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.147613}", "{'[0, 6, 0, 5, 0, 6, 1, 0, 11, 15, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.147568}", "{'[0, 6, 0, 5, 0, 6, 1, 0, 11, 15, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.147649}", "{'[0, 6, 0, 5, 0, 6, 1, 0, 11, 15, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.147737}", "{'[0, 6, 0, 5, 0, 6, 1, 0, 11, 15, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.148303}", "{'[0, 6, 0, 5, 0, 6, 1, 0, 11, 15, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.147466}", "{'[0, 6, 0, 5, 0, 6, 1, 0, 11, 15, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.14751}", "{'[0, 6, 0, 5, 0, 6, 1, 0, 11, 15, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.147616}", "{'[0, 6, 0, 5, 0, 6, 1, 0, 11, 15, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.147478}", "{'[0, 6, 0, 5, 0, 6, 1, 0, 11, 15, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.147526}", "{'[0, 6, 0, 5, 0, 6, 1, 0, 11, 15, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.147652}", "{'[0, 6, 0, 5, 0, 6, 1, 0, 11, 15, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.147528}", "{'[0, 6, 0, 5, 0, 6, 1, 0, 11, 15, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.147649}", "{'[0, 6, 0, 5, 0, 6, 1, 0, 11, 15, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.147568}", "{'[0, 6, 0, 5, 0, 6, 1, 0, 11, 15, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.147736}", "{'[0, 6, 0, 5, 0, 6, 1, 0, 11, 15, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.14828}", "{'[0, 6, 0, 5, 0, 6, 1, 0, 11, 15, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.147496}", "{'[0, 6, 0, 5, 0, 6, 1, 0, 11, 15, 0, 0, 0, 0, 2, 0, 0, 1]' : 0.147565}"]
returning from 'run': {'[0, 6, 0, 5, 0, 6, 1, 0, 11, 15, 0, 0, 0, 0, 2, 0, 0, 1]': ([0.171814, 0.165203, 0.148289, 0.148166, 0.14907, 0.148082, 0.148356, 0.147617, 0.147566, 0.147582, 0.147494, 0.148063, 0.147613, 0.147568, 0.147649, 0.147737, 0.148303, 0.147466, 0.14751, 0.147616, 0.147478, 0.147526, 0.147652, 0.147528, 0.147649, 0.147568, 0.147736, 0.14828, 0.147496, 0.147565], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 0, 5, 0, 6, 1, 0, 11, 15, 0, 0, 0, 0, 2, 0, 0, 1]': ([0.171814, 0.165203, 0.148289, 0.148166, 0.14907, 0.148082, 0.148356, 0.147617, 0.147566, 0.147582, 0.147494, 0.148063, 0.147613, 0.147568, 0.147649, 0.147737, 0.148303, 0.147466, 0.14751, 0.147616, 0.147478, 0.147526, 0.147652, 0.147528, 0.147649, 0.147568, 0.147736, 0.14828, 0.147496, 0.147565], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	6
        Additions: 		2714
        Multiplications: 	816
        Divisions: 		0
        Logical: 		0
        Reads: 			4258
        Writes: 		473
        Comparisons:		16
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest65.exe __orio_perftest65.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest65.exe  
Program Test Output: 
{'[3, 0, 1, 2, 0, 6, 0, 0, 3, 15, 0, 21, 0, 0, 0, 0, 1, 1]' : 0.141842}
{'[3, 0, 1, 2, 0, 6, 0, 0, 3, 15, 0, 21, 0, 0, 0, 0, 1, 1]' : 0.14162}
{'[3, 0, 1, 2, 0, 6, 0, 0, 3, 15, 0, 21, 0, 0, 0, 0, 1, 1]' : 0.141523}
{'[3, 0, 1, 2, 0, 6, 0, 0, 3, 15, 0, 21, 0, 0, 0, 0, 1, 1]' : 0.133571}
{'[3, 0, 1, 2, 0, 6, 0, 0, 3, 15, 0, 21, 0, 0, 0, 0, 1, 1]' : 0.123887}
{'[3, 0, 1, 2, 0, 6, 0, 0, 3, 15, 0, 21, 0, 0, 0, 0, 1, 1]' : 0.125343}
{'[3, 0, 1, 2, 0, 6, 0, 0, 3, 15, 0, 21, 0, 0, 0, 0, 1, 1]' : 0.125362}
{'[3, 0, 1, 2, 0, 6, 0, 0, 3, 15, 0, 21, 0, 0, 0, 0, 1, 1]' : 0.125355}
{'[3, 0, 1, 2, 0, 6, 0, 0, 3, 15, 0, 21, 0, 0, 0, 0, 1, 1]' : 0.125696}
{'[3, 0, 1, 2, 0, 6, 0, 0, 3, 15, 0, 21, 0, 0, 0, 0, 1, 1]' : 0.125725}
{'[3, 0, 1, 2, 0, 6, 0, 0, 3, 15, 0, 21, 0, 0, 0, 0, 1, 1]' : 0.125407}
{'[3, 0, 1, 2, 0, 6, 0, 0, 3, 15, 0, 21, 0, 0, 0, 0, 1, 1]' : 0.125383}
{'[3, 0, 1, 2, 0, 6, 0, 0, 3, 15, 0, 21, 0, 0, 0, 0, 1, 1]' : 0.123955}
{'[3, 0, 1, 2, 0, 6, 0, 0, 3, 15, 0, 21, 0, 0, 0, 0, 1, 1]' : 0.122131}
{'[3, 0, 1, 2, 0, 6, 0, 0, 3, 15, 0, 21, 0, 0, 0, 0, 1, 1]' : 0.122253}
{'[3, 0, 1, 2, 0, 6, 0, 0, 3, 15, 0, 21, 0, 0, 0, 0, 1, 1]' : 0.122072}
{'[3, 0, 1, 2, 0, 6, 0, 0, 3, 15, 0, 21, 0, 0, 0, 0, 1, 1]' : 0.123757}
{'[3, 0, 1, 2, 0, 6, 0, 0, 3, 15, 0, 21, 0, 0, 0, 0, 1, 1]' : 0.124979}
{'[3, 0, 1, 2, 0, 6, 0, 0, 3, 15, 0, 21, 0, 0, 0, 0, 1, 1]' : 0.122856}
{'[3, 0, 1, 2, 0, 6, 0, 0, 3, 15, 0, 21, 0, 0, 0, 0, 1, 1]' : 0.122243}
{'[3, 0, 1, 2, 0, 6, 0, 0, 3, 15, 0, 21, 0, 0, 0, 0, 1, 1]' : 0.123243}
{'[3, 0, 1, 2, 0, 6, 0, 0, 3, 15, 0, 21, 0, 0, 0, 0, 1, 1]' : 0.125091}
{'[3, 0, 1, 2, 0, 6, 0, 0, 3, 15, 0, 21, 0, 0, 0, 0, 1, 1]' : 0.122613}
{'[3, 0, 1, 2, 0, 6, 0, 0, 3, 15, 0, 21, 0, 0, 0, 0, 1, 1]' : 0.121971}
{'[3, 0, 1, 2, 0, 6, 0, 0, 3, 15, 0, 21, 0, 0, 0, 0, 1, 1]' : 0.123136}
{'[3, 0, 1, 2, 0, 6, 0, 0, 3, 15, 0, 21, 0, 0, 0, 0, 1, 1]' : 0.124959}
{'[3, 0, 1, 2, 0, 6, 0, 0, 3, 15, 0, 21, 0, 0, 0, 0, 1, 1]' : 0.123064}
{'[3, 0, 1, 2, 0, 6, 0, 0, 3, 15, 0, 21, 0, 0, 0, 0, 1, 1]' : 0.12196}
{'[3, 0, 1, 2, 0, 6, 0, 0, 3, 15, 0, 21, 0, 0, 0, 0, 1, 1]' : 0.122995}
{'[3, 0, 1, 2, 0, 6, 0, 0, 3, 15, 0, 21, 0, 0, 0, 0, 1, 1]' : 0.124699}

out:
 ["{'[3, 0, 1, 2, 0, 6, 0, 0, 3, 15, 0, 21, 0, 0, 0, 0, 1, 1]' : 0.141842}", "{'[3, 0, 1, 2, 0, 6, 0, 0, 3, 15, 0, 21, 0, 0, 0, 0, 1, 1]' : 0.14162}", "{'[3, 0, 1, 2, 0, 6, 0, 0, 3, 15, 0, 21, 0, 0, 0, 0, 1, 1]' : 0.141523}", "{'[3, 0, 1, 2, 0, 6, 0, 0, 3, 15, 0, 21, 0, 0, 0, 0, 1, 1]' : 0.133571}", "{'[3, 0, 1, 2, 0, 6, 0, 0, 3, 15, 0, 21, 0, 0, 0, 0, 1, 1]' : 0.123887}", "{'[3, 0, 1, 2, 0, 6, 0, 0, 3, 15, 0, 21, 0, 0, 0, 0, 1, 1]' : 0.125343}", "{'[3, 0, 1, 2, 0, 6, 0, 0, 3, 15, 0, 21, 0, 0, 0, 0, 1, 1]' : 0.125362}", "{'[3, 0, 1, 2, 0, 6, 0, 0, 3, 15, 0, 21, 0, 0, 0, 0, 1, 1]' : 0.125355}", "{'[3, 0, 1, 2, 0, 6, 0, 0, 3, 15, 0, 21, 0, 0, 0, 0, 1, 1]' : 0.125696}", "{'[3, 0, 1, 2, 0, 6, 0, 0, 3, 15, 0, 21, 0, 0, 0, 0, 1, 1]' : 0.125725}", "{'[3, 0, 1, 2, 0, 6, 0, 0, 3, 15, 0, 21, 0, 0, 0, 0, 1, 1]' : 0.125407}", "{'[3, 0, 1, 2, 0, 6, 0, 0, 3, 15, 0, 21, 0, 0, 0, 0, 1, 1]' : 0.125383}", "{'[3, 0, 1, 2, 0, 6, 0, 0, 3, 15, 0, 21, 0, 0, 0, 0, 1, 1]' : 0.123955}", "{'[3, 0, 1, 2, 0, 6, 0, 0, 3, 15, 0, 21, 0, 0, 0, 0, 1, 1]' : 0.122131}", "{'[3, 0, 1, 2, 0, 6, 0, 0, 3, 15, 0, 21, 0, 0, 0, 0, 1, 1]' : 0.122253}", "{'[3, 0, 1, 2, 0, 6, 0, 0, 3, 15, 0, 21, 0, 0, 0, 0, 1, 1]' : 0.122072}", "{'[3, 0, 1, 2, 0, 6, 0, 0, 3, 15, 0, 21, 0, 0, 0, 0, 1, 1]' : 0.123757}", "{'[3, 0, 1, 2, 0, 6, 0, 0, 3, 15, 0, 21, 0, 0, 0, 0, 1, 1]' : 0.124979}", "{'[3, 0, 1, 2, 0, 6, 0, 0, 3, 15, 0, 21, 0, 0, 0, 0, 1, 1]' : 0.122856}", "{'[3, 0, 1, 2, 0, 6, 0, 0, 3, 15, 0, 21, 0, 0, 0, 0, 1, 1]' : 0.122243}", "{'[3, 0, 1, 2, 0, 6, 0, 0, 3, 15, 0, 21, 0, 0, 0, 0, 1, 1]' : 0.123243}", "{'[3, 0, 1, 2, 0, 6, 0, 0, 3, 15, 0, 21, 0, 0, 0, 0, 1, 1]' : 0.125091}", "{'[3, 0, 1, 2, 0, 6, 0, 0, 3, 15, 0, 21, 0, 0, 0, 0, 1, 1]' : 0.122613}", "{'[3, 0, 1, 2, 0, 6, 0, 0, 3, 15, 0, 21, 0, 0, 0, 0, 1, 1]' : 0.121971}", "{'[3, 0, 1, 2, 0, 6, 0, 0, 3, 15, 0, 21, 0, 0, 0, 0, 1, 1]' : 0.123136}", "{'[3, 0, 1, 2, 0, 6, 0, 0, 3, 15, 0, 21, 0, 0, 0, 0, 1, 1]' : 0.124959}", "{'[3, 0, 1, 2, 0, 6, 0, 0, 3, 15, 0, 21, 0, 0, 0, 0, 1, 1]' : 0.123064}", "{'[3, 0, 1, 2, 0, 6, 0, 0, 3, 15, 0, 21, 0, 0, 0, 0, 1, 1]' : 0.12196}", "{'[3, 0, 1, 2, 0, 6, 0, 0, 3, 15, 0, 21, 0, 0, 0, 0, 1, 1]' : 0.122995}", "{'[3, 0, 1, 2, 0, 6, 0, 0, 3, 15, 0, 21, 0, 0, 0, 0, 1, 1]' : 0.124699}"]
returning from 'run': {'[3, 0, 1, 2, 0, 6, 0, 0, 3, 15, 0, 21, 0, 0, 0, 0, 1, 1]': ([0.141842, 0.14162, 0.141523, 0.133571, 0.123887, 0.125343, 0.125362, 0.125355, 0.125696, 0.125725, 0.125407, 0.125383, 0.123955, 0.122131, 0.122253, 0.122072, 0.123757, 0.124979, 0.122856, 0.122243, 0.123243, 0.125091, 0.122613, 0.121971, 0.123136, 0.124959, 0.123064, 0.12196, 0.122995, 0.124699], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 0, 1, 2, 0, 6, 0, 0, 3, 15, 0, 21, 0, 0, 0, 0, 1, 1]': ([0.141842, 0.14162, 0.141523, 0.133571, 0.123887, 0.125343, 0.125362, 0.125355, 0.125696, 0.125725, 0.125407, 0.125383, 0.123955, 0.122131, 0.122253, 0.122072, 0.123757, 0.124979, 0.122856, 0.122243, 0.123243, 0.125091, 0.122613, 0.121971, 0.123136, 0.124959, 0.123064, 0.12196, 0.122995, 0.124699], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	46
        Max loop nest depth: 	5
        Additions: 		2213
        Multiplications: 	544
        Divisions: 		0
        Logical: 		0
        Reads: 			3542
        Writes: 		431
        Comparisons:		46
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest66.exe __orio_perftest66.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest66.exe  
Program Test Output: 
{'[1, 0, 0, 2, 0, 3, 1, 1, 7, 15, 0, 9, 0, 1, 1, 0, 1, 1]' : 0.154333}
{'[1, 0, 0, 2, 0, 3, 1, 1, 7, 15, 0, 9, 0, 1, 1, 0, 1, 1]' : 0.158007}
{'[1, 0, 0, 2, 0, 3, 1, 1, 7, 15, 0, 9, 0, 1, 1, 0, 1, 1]' : 0.160067}
{'[1, 0, 0, 2, 0, 3, 1, 1, 7, 15, 0, 9, 0, 1, 1, 0, 1, 1]' : 0.154402}
{'[1, 0, 0, 2, 0, 3, 1, 1, 7, 15, 0, 9, 0, 1, 1, 0, 1, 1]' : 0.157853}
{'[1, 0, 0, 2, 0, 3, 1, 1, 7, 15, 0, 9, 0, 1, 1, 0, 1, 1]' : 0.156827}
{'[1, 0, 0, 2, 0, 3, 1, 1, 7, 15, 0, 9, 0, 1, 1, 0, 1, 1]' : 0.152559}
{'[1, 0, 0, 2, 0, 3, 1, 1, 7, 15, 0, 9, 0, 1, 1, 0, 1, 1]' : 0.157864}
{'[1, 0, 0, 2, 0, 3, 1, 1, 7, 15, 0, 9, 0, 1, 1, 0, 1, 1]' : 0.159815}
{'[1, 0, 0, 2, 0, 3, 1, 1, 7, 15, 0, 9, 0, 1, 1, 0, 1, 1]' : 0.156878}
{'[1, 0, 0, 2, 0, 3, 1, 1, 7, 15, 0, 9, 0, 1, 1, 0, 1, 1]' : 0.157386}
{'[1, 0, 0, 2, 0, 3, 1, 1, 7, 15, 0, 9, 0, 1, 1, 0, 1, 1]' : 0.15685}
{'[1, 0, 0, 2, 0, 3, 1, 1, 7, 15, 0, 9, 0, 1, 1, 0, 1, 1]' : 0.152336}
{'[1, 0, 0, 2, 0, 3, 1, 1, 7, 15, 0, 9, 0, 1, 1, 0, 1, 1]' : 0.155273}
{'[1, 0, 0, 2, 0, 3, 1, 1, 7, 15, 0, 9, 0, 1, 1, 0, 1, 1]' : 0.15819}
{'[1, 0, 0, 2, 0, 3, 1, 1, 7, 15, 0, 9, 0, 1, 1, 0, 1, 1]' : 0.160499}
{'[1, 0, 0, 2, 0, 3, 1, 1, 7, 15, 0, 9, 0, 1, 1, 0, 1, 1]' : 0.153622}
{'[1, 0, 0, 2, 0, 3, 1, 1, 7, 15, 0, 9, 0, 1, 1, 0, 1, 1]' : 0.153653}
{'[1, 0, 0, 2, 0, 3, 1, 1, 7, 15, 0, 9, 0, 1, 1, 0, 1, 1]' : 0.150741}
{'[1, 0, 0, 2, 0, 3, 1, 1, 7, 15, 0, 9, 0, 1, 1, 0, 1, 1]' : 0.148878}
{'[1, 0, 0, 2, 0, 3, 1, 1, 7, 15, 0, 9, 0, 1, 1, 0, 1, 1]' : 0.157962}
{'[1, 0, 0, 2, 0, 3, 1, 1, 7, 15, 0, 9, 0, 1, 1, 0, 1, 1]' : 0.158693}
{'[1, 0, 0, 2, 0, 3, 1, 1, 7, 15, 0, 9, 0, 1, 1, 0, 1, 1]' : 0.15455}
{'[1, 0, 0, 2, 0, 3, 1, 1, 7, 15, 0, 9, 0, 1, 1, 0, 1, 1]' : 0.157622}
{'[1, 0, 0, 2, 0, 3, 1, 1, 7, 15, 0, 9, 0, 1, 1, 0, 1, 1]' : 0.154252}
{'[1, 0, 0, 2, 0, 3, 1, 1, 7, 15, 0, 9, 0, 1, 1, 0, 1, 1]' : 0.153399}
{'[1, 0, 0, 2, 0, 3, 1, 1, 7, 15, 0, 9, 0, 1, 1, 0, 1, 1]' : 0.156156}
{'[1, 0, 0, 2, 0, 3, 1, 1, 7, 15, 0, 9, 0, 1, 1, 0, 1, 1]' : 0.158548}
{'[1, 0, 0, 2, 0, 3, 1, 1, 7, 15, 0, 9, 0, 1, 1, 0, 1, 1]' : 0.160664}
{'[1, 0, 0, 2, 0, 3, 1, 1, 7, 15, 0, 9, 0, 1, 1, 0, 1, 1]' : 0.158566}

out:
 ["{'[1, 0, 0, 2, 0, 3, 1, 1, 7, 15, 0, 9, 0, 1, 1, 0, 1, 1]' : 0.154333}", "{'[1, 0, 0, 2, 0, 3, 1, 1, 7, 15, 0, 9, 0, 1, 1, 0, 1, 1]' : 0.158007}", "{'[1, 0, 0, 2, 0, 3, 1, 1, 7, 15, 0, 9, 0, 1, 1, 0, 1, 1]' : 0.160067}", "{'[1, 0, 0, 2, 0, 3, 1, 1, 7, 15, 0, 9, 0, 1, 1, 0, 1, 1]' : 0.154402}", "{'[1, 0, 0, 2, 0, 3, 1, 1, 7, 15, 0, 9, 0, 1, 1, 0, 1, 1]' : 0.157853}", "{'[1, 0, 0, 2, 0, 3, 1, 1, 7, 15, 0, 9, 0, 1, 1, 0, 1, 1]' : 0.156827}", "{'[1, 0, 0, 2, 0, 3, 1, 1, 7, 15, 0, 9, 0, 1, 1, 0, 1, 1]' : 0.152559}", "{'[1, 0, 0, 2, 0, 3, 1, 1, 7, 15, 0, 9, 0, 1, 1, 0, 1, 1]' : 0.157864}", "{'[1, 0, 0, 2, 0, 3, 1, 1, 7, 15, 0, 9, 0, 1, 1, 0, 1, 1]' : 0.159815}", "{'[1, 0, 0, 2, 0, 3, 1, 1, 7, 15, 0, 9, 0, 1, 1, 0, 1, 1]' : 0.156878}", "{'[1, 0, 0, 2, 0, 3, 1, 1, 7, 15, 0, 9, 0, 1, 1, 0, 1, 1]' : 0.157386}", "{'[1, 0, 0, 2, 0, 3, 1, 1, 7, 15, 0, 9, 0, 1, 1, 0, 1, 1]' : 0.15685}", "{'[1, 0, 0, 2, 0, 3, 1, 1, 7, 15, 0, 9, 0, 1, 1, 0, 1, 1]' : 0.152336}", "{'[1, 0, 0, 2, 0, 3, 1, 1, 7, 15, 0, 9, 0, 1, 1, 0, 1, 1]' : 0.155273}", "{'[1, 0, 0, 2, 0, 3, 1, 1, 7, 15, 0, 9, 0, 1, 1, 0, 1, 1]' : 0.15819}", "{'[1, 0, 0, 2, 0, 3, 1, 1, 7, 15, 0, 9, 0, 1, 1, 0, 1, 1]' : 0.160499}", "{'[1, 0, 0, 2, 0, 3, 1, 1, 7, 15, 0, 9, 0, 1, 1, 0, 1, 1]' : 0.153622}", "{'[1, 0, 0, 2, 0, 3, 1, 1, 7, 15, 0, 9, 0, 1, 1, 0, 1, 1]' : 0.153653}", "{'[1, 0, 0, 2, 0, 3, 1, 1, 7, 15, 0, 9, 0, 1, 1, 0, 1, 1]' : 0.150741}", "{'[1, 0, 0, 2, 0, 3, 1, 1, 7, 15, 0, 9, 0, 1, 1, 0, 1, 1]' : 0.148878}", "{'[1, 0, 0, 2, 0, 3, 1, 1, 7, 15, 0, 9, 0, 1, 1, 0, 1, 1]' : 0.157962}", "{'[1, 0, 0, 2, 0, 3, 1, 1, 7, 15, 0, 9, 0, 1, 1, 0, 1, 1]' : 0.158693}", "{'[1, 0, 0, 2, 0, 3, 1, 1, 7, 15, 0, 9, 0, 1, 1, 0, 1, 1]' : 0.15455}", "{'[1, 0, 0, 2, 0, 3, 1, 1, 7, 15, 0, 9, 0, 1, 1, 0, 1, 1]' : 0.157622}", "{'[1, 0, 0, 2, 0, 3, 1, 1, 7, 15, 0, 9, 0, 1, 1, 0, 1, 1]' : 0.154252}", "{'[1, 0, 0, 2, 0, 3, 1, 1, 7, 15, 0, 9, 0, 1, 1, 0, 1, 1]' : 0.153399}", "{'[1, 0, 0, 2, 0, 3, 1, 1, 7, 15, 0, 9, 0, 1, 1, 0, 1, 1]' : 0.156156}", "{'[1, 0, 0, 2, 0, 3, 1, 1, 7, 15, 0, 9, 0, 1, 1, 0, 1, 1]' : 0.158548}", "{'[1, 0, 0, 2, 0, 3, 1, 1, 7, 15, 0, 9, 0, 1, 1, 0, 1, 1]' : 0.160664}", "{'[1, 0, 0, 2, 0, 3, 1, 1, 7, 15, 0, 9, 0, 1, 1, 0, 1, 1]' : 0.158566}"]
returning from 'run': {'[1, 0, 0, 2, 0, 3, 1, 1, 7, 15, 0, 9, 0, 1, 1, 0, 1, 1]': ([0.154333, 0.158007, 0.160067, 0.154402, 0.157853, 0.156827, 0.152559, 0.157864, 0.159815, 0.156878, 0.157386, 0.15685, 0.152336, 0.155273, 0.15819, 0.160499, 0.153622, 0.153653, 0.150741, 0.148878, 0.157962, 0.158693, 0.15455, 0.157622, 0.154252, 0.153399, 0.156156, 0.158548, 0.160664, 0.158566], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 0, 2, 0, 3, 1, 1, 7, 15, 0, 9, 0, 1, 1, 0, 1, 1]': ([0.154333, 0.158007, 0.160067, 0.154402, 0.157853, 0.156827, 0.152559, 0.157864, 0.159815, 0.156878, 0.157386, 0.15685, 0.152336, 0.155273, 0.15819, 0.160499, 0.153622, 0.153653, 0.150741, 0.148878, 0.157962, 0.158693, 0.15455, 0.157622, 0.154252, 0.153399, 0.156156, 0.158548, 0.160664, 0.158566], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = iii
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		4245
        Multiplications: 	1292
        Divisions: 		0
        Logical: 		0
        Reads: 			6580
        Writes: 		688
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest67.exe __orio_perftest67.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest67.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest67.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest67.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest67.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
Code stats:
        Number of loops: 	79
        Max loop nest depth: 	5
        Additions: 		8427
        Multiplications: 	2108
        Divisions: 		0
        Logical: 		0
        Reads: 			12517
        Writes: 		1333
        Comparisons:		79
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest68.exe __orio_perftest68.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest68.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest68.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest68.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest68.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	54
        Max loop nest depth: 	4
        Additions: 		763
        Multiplications: 	196
        Divisions: 		0
        Logical: 		0
        Reads: 			1706
        Writes: 		283
        Comparisons:		54
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest69.exe __orio_perftest69.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest69.exe  
Program Test Output: 
{'[3, 6, 0, 0, 0, 3, 0, 1, 21, 15, 0, 0, 2, 0, 0, 0, 0, 0]' : 0.167204}
{'[3, 6, 0, 0, 0, 3, 0, 1, 21, 15, 0, 0, 2, 0, 0, 0, 0, 0]' : 0.169015}
{'[3, 6, 0, 0, 0, 3, 0, 1, 21, 15, 0, 0, 2, 0, 0, 0, 0, 0]' : 0.166827}
{'[3, 6, 0, 0, 0, 3, 0, 1, 21, 15, 0, 0, 2, 0, 0, 0, 0, 0]' : 0.154011}
{'[3, 6, 0, 0, 0, 3, 0, 1, 21, 15, 0, 0, 2, 0, 0, 0, 0, 0]' : 0.153132}
{'[3, 6, 0, 0, 0, 3, 0, 1, 21, 15, 0, 0, 2, 0, 0, 0, 0, 0]' : 0.152447}
{'[3, 6, 0, 0, 0, 3, 0, 1, 21, 15, 0, 0, 2, 0, 0, 0, 0, 0]' : 0.153122}
{'[3, 6, 0, 0, 0, 3, 0, 1, 21, 15, 0, 0, 2, 0, 0, 0, 0, 0]' : 0.150646}
{'[3, 6, 0, 0, 0, 3, 0, 1, 21, 15, 0, 0, 2, 0, 0, 0, 0, 0]' : 0.150441}
{'[3, 6, 0, 0, 0, 3, 0, 1, 21, 15, 0, 0, 2, 0, 0, 0, 0, 0]' : 0.153431}
{'[3, 6, 0, 0, 0, 3, 0, 1, 21, 15, 0, 0, 2, 0, 0, 0, 0, 0]' : 0.152167}
{'[3, 6, 0, 0, 0, 3, 0, 1, 21, 15, 0, 0, 2, 0, 0, 0, 0, 0]' : 0.150448}
{'[3, 6, 0, 0, 0, 3, 0, 1, 21, 15, 0, 0, 2, 0, 0, 0, 0, 0]' : 0.152458}
{'[3, 6, 0, 0, 0, 3, 0, 1, 21, 15, 0, 0, 2, 0, 0, 0, 0, 0]' : 0.153233}
{'[3, 6, 0, 0, 0, 3, 0, 1, 21, 15, 0, 0, 2, 0, 0, 0, 0, 0]' : 0.152844}
{'[3, 6, 0, 0, 0, 3, 0, 1, 21, 15, 0, 0, 2, 0, 0, 0, 0, 0]' : 0.152911}
{'[3, 6, 0, 0, 0, 3, 0, 1, 21, 15, 0, 0, 2, 0, 0, 0, 0, 0]' : 0.153706}
{'[3, 6, 0, 0, 0, 3, 0, 1, 21, 15, 0, 0, 2, 0, 0, 0, 0, 0]' : 0.151557}
{'[3, 6, 0, 0, 0, 3, 0, 1, 21, 15, 0, 0, 2, 0, 0, 0, 0, 0]' : 0.152134}
{'[3, 6, 0, 0, 0, 3, 0, 1, 21, 15, 0, 0, 2, 0, 0, 0, 0, 0]' : 0.151633}
{'[3, 6, 0, 0, 0, 3, 0, 1, 21, 15, 0, 0, 2, 0, 0, 0, 0, 0]' : 0.152743}
{'[3, 6, 0, 0, 0, 3, 0, 1, 21, 15, 0, 0, 2, 0, 0, 0, 0, 0]' : 0.153339}
{'[3, 6, 0, 0, 0, 3, 0, 1, 21, 15, 0, 0, 2, 0, 0, 0, 0, 0]' : 0.153372}
{'[3, 6, 0, 0, 0, 3, 0, 1, 21, 15, 0, 0, 2, 0, 0, 0, 0, 0]' : 0.150916}
{'[3, 6, 0, 0, 0, 3, 0, 1, 21, 15, 0, 0, 2, 0, 0, 0, 0, 0]' : 0.151046}
{'[3, 6, 0, 0, 0, 3, 0, 1, 21, 15, 0, 0, 2, 0, 0, 0, 0, 0]' : 0.155365}
{'[3, 6, 0, 0, 0, 3, 0, 1, 21, 15, 0, 0, 2, 0, 0, 0, 0, 0]' : 0.151621}
{'[3, 6, 0, 0, 0, 3, 0, 1, 21, 15, 0, 0, 2, 0, 0, 0, 0, 0]' : 0.14973}
{'[3, 6, 0, 0, 0, 3, 0, 1, 21, 15, 0, 0, 2, 0, 0, 0, 0, 0]' : 0.150308}
{'[3, 6, 0, 0, 0, 3, 0, 1, 21, 15, 0, 0, 2, 0, 0, 0, 0, 0]' : 0.15306}

out:
 ["{'[3, 6, 0, 0, 0, 3, 0, 1, 21, 15, 0, 0, 2, 0, 0, 0, 0, 0]' : 0.167204}", "{'[3, 6, 0, 0, 0, 3, 0, 1, 21, 15, 0, 0, 2, 0, 0, 0, 0, 0]' : 0.169015}", "{'[3, 6, 0, 0, 0, 3, 0, 1, 21, 15, 0, 0, 2, 0, 0, 0, 0, 0]' : 0.166827}", "{'[3, 6, 0, 0, 0, 3, 0, 1, 21, 15, 0, 0, 2, 0, 0, 0, 0, 0]' : 0.154011}", "{'[3, 6, 0, 0, 0, 3, 0, 1, 21, 15, 0, 0, 2, 0, 0, 0, 0, 0]' : 0.153132}", "{'[3, 6, 0, 0, 0, 3, 0, 1, 21, 15, 0, 0, 2, 0, 0, 0, 0, 0]' : 0.152447}", "{'[3, 6, 0, 0, 0, 3, 0, 1, 21, 15, 0, 0, 2, 0, 0, 0, 0, 0]' : 0.153122}", "{'[3, 6, 0, 0, 0, 3, 0, 1, 21, 15, 0, 0, 2, 0, 0, 0, 0, 0]' : 0.150646}", "{'[3, 6, 0, 0, 0, 3, 0, 1, 21, 15, 0, 0, 2, 0, 0, 0, 0, 0]' : 0.150441}", "{'[3, 6, 0, 0, 0, 3, 0, 1, 21, 15, 0, 0, 2, 0, 0, 0, 0, 0]' : 0.153431}", "{'[3, 6, 0, 0, 0, 3, 0, 1, 21, 15, 0, 0, 2, 0, 0, 0, 0, 0]' : 0.152167}", "{'[3, 6, 0, 0, 0, 3, 0, 1, 21, 15, 0, 0, 2, 0, 0, 0, 0, 0]' : 0.150448}", "{'[3, 6, 0, 0, 0, 3, 0, 1, 21, 15, 0, 0, 2, 0, 0, 0, 0, 0]' : 0.152458}", "{'[3, 6, 0, 0, 0, 3, 0, 1, 21, 15, 0, 0, 2, 0, 0, 0, 0, 0]' : 0.153233}", "{'[3, 6, 0, 0, 0, 3, 0, 1, 21, 15, 0, 0, 2, 0, 0, 0, 0, 0]' : 0.152844}", "{'[3, 6, 0, 0, 0, 3, 0, 1, 21, 15, 0, 0, 2, 0, 0, 0, 0, 0]' : 0.152911}", "{'[3, 6, 0, 0, 0, 3, 0, 1, 21, 15, 0, 0, 2, 0, 0, 0, 0, 0]' : 0.153706}", "{'[3, 6, 0, 0, 0, 3, 0, 1, 21, 15, 0, 0, 2, 0, 0, 0, 0, 0]' : 0.151557}", "{'[3, 6, 0, 0, 0, 3, 0, 1, 21, 15, 0, 0, 2, 0, 0, 0, 0, 0]' : 0.152134}", "{'[3, 6, 0, 0, 0, 3, 0, 1, 21, 15, 0, 0, 2, 0, 0, 0, 0, 0]' : 0.151633}", "{'[3, 6, 0, 0, 0, 3, 0, 1, 21, 15, 0, 0, 2, 0, 0, 0, 0, 0]' : 0.152743}", "{'[3, 6, 0, 0, 0, 3, 0, 1, 21, 15, 0, 0, 2, 0, 0, 0, 0, 0]' : 0.153339}", "{'[3, 6, 0, 0, 0, 3, 0, 1, 21, 15, 0, 0, 2, 0, 0, 0, 0, 0]' : 0.153372}", "{'[3, 6, 0, 0, 0, 3, 0, 1, 21, 15, 0, 0, 2, 0, 0, 0, 0, 0]' : 0.150916}", "{'[3, 6, 0, 0, 0, 3, 0, 1, 21, 15, 0, 0, 2, 0, 0, 0, 0, 0]' : 0.151046}", "{'[3, 6, 0, 0, 0, 3, 0, 1, 21, 15, 0, 0, 2, 0, 0, 0, 0, 0]' : 0.155365}", "{'[3, 6, 0, 0, 0, 3, 0, 1, 21, 15, 0, 0, 2, 0, 0, 0, 0, 0]' : 0.151621}", "{'[3, 6, 0, 0, 0, 3, 0, 1, 21, 15, 0, 0, 2, 0, 0, 0, 0, 0]' : 0.14973}", "{'[3, 6, 0, 0, 0, 3, 0, 1, 21, 15, 0, 0, 2, 0, 0, 0, 0, 0]' : 0.150308}", "{'[3, 6, 0, 0, 0, 3, 0, 1, 21, 15, 0, 0, 2, 0, 0, 0, 0, 0]' : 0.15306}"]
returning from 'run': {'[3, 6, 0, 0, 0, 3, 0, 1, 21, 15, 0, 0, 2, 0, 0, 0, 0, 0]': ([0.167204, 0.169015, 0.166827, 0.154011, 0.153132, 0.152447, 0.153122, 0.150646, 0.150441, 0.153431, 0.152167, 0.150448, 0.152458, 0.153233, 0.152844, 0.152911, 0.153706, 0.151557, 0.152134, 0.151633, 0.152743, 0.153339, 0.153372, 0.150916, 0.151046, 0.155365, 0.151621, 0.14973, 0.150308, 0.15306], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 6, 0, 0, 0, 3, 0, 1, 21, 15, 0, 0, 2, 0, 0, 0, 0, 0]': ([0.167204, 0.169015, 0.166827, 0.154011, 0.153132, 0.152447, 0.153122, 0.150646, 0.150441, 0.153431, 0.152167, 0.150448, 0.152458, 0.153233, 0.152844, 0.152911, 0.153706, 0.151557, 0.152134, 0.151633, 0.152743, 0.153339, 0.153372, 0.150916, 0.151046, 0.155365, 0.151621, 0.14973, 0.150308, 0.15306], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = iii
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		1485
        Multiplications: 	450
        Divisions: 		0
        Logical: 		0
        Reads: 			2443
        Writes: 		305
        Comparisons:		15
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest70.exe __orio_perftest70.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest70.exe  
Program Test Output: 
{'[6, 0, 0, 4, 3, 0, 0, 1, 27, 15, 0, 18, 1, 0, 1, 0, 1, 0]' : 0.112183}
{'[6, 0, 0, 4, 3, 0, 0, 1, 27, 15, 0, 18, 1, 0, 1, 0, 1, 0]' : 0.115417}
{'[6, 0, 0, 4, 3, 0, 0, 1, 27, 15, 0, 18, 1, 0, 1, 0, 1, 0]' : 0.115292}
{'[6, 0, 0, 4, 3, 0, 0, 1, 27, 15, 0, 18, 1, 0, 1, 0, 1, 0]' : 0.115451}
{'[6, 0, 0, 4, 3, 0, 0, 1, 27, 15, 0, 18, 1, 0, 1, 0, 1, 0]' : 0.115293}
{'[6, 0, 0, 4, 3, 0, 0, 1, 27, 15, 0, 18, 1, 0, 1, 0, 1, 0]' : 0.115704}
{'[6, 0, 0, 4, 3, 0, 0, 1, 27, 15, 0, 18, 1, 0, 1, 0, 1, 0]' : 0.115053}
{'[6, 0, 0, 4, 3, 0, 0, 1, 27, 15, 0, 18, 1, 0, 1, 0, 1, 0]' : 0.11544}
{'[6, 0, 0, 4, 3, 0, 0, 1, 27, 15, 0, 18, 1, 0, 1, 0, 1, 0]' : 0.115496}
{'[6, 0, 0, 4, 3, 0, 0, 1, 27, 15, 0, 18, 1, 0, 1, 0, 1, 0]' : 0.11433}
{'[6, 0, 0, 4, 3, 0, 0, 1, 27, 15, 0, 18, 1, 0, 1, 0, 1, 0]' : 0.115007}
{'[6, 0, 0, 4, 3, 0, 0, 1, 27, 15, 0, 18, 1, 0, 1, 0, 1, 0]' : 0.115181}
{'[6, 0, 0, 4, 3, 0, 0, 1, 27, 15, 0, 18, 1, 0, 1, 0, 1, 0]' : 0.115294}
{'[6, 0, 0, 4, 3, 0, 0, 1, 27, 15, 0, 18, 1, 0, 1, 0, 1, 0]' : 0.115462}
{'[6, 0, 0, 4, 3, 0, 0, 1, 27, 15, 0, 18, 1, 0, 1, 0, 1, 0]' : 0.115334}
{'[6, 0, 0, 4, 3, 0, 0, 1, 27, 15, 0, 18, 1, 0, 1, 0, 1, 0]' : 0.115366}
{'[6, 0, 0, 4, 3, 0, 0, 1, 27, 15, 0, 18, 1, 0, 1, 0, 1, 0]' : 0.115918}
{'[6, 0, 0, 4, 3, 0, 0, 1, 27, 15, 0, 18, 1, 0, 1, 0, 1, 0]' : 0.115362}
{'[6, 0, 0, 4, 3, 0, 0, 1, 27, 15, 0, 18, 1, 0, 1, 0, 1, 0]' : 0.115296}
{'[6, 0, 0, 4, 3, 0, 0, 1, 27, 15, 0, 18, 1, 0, 1, 0, 1, 0]' : 0.11516}
{'[6, 0, 0, 4, 3, 0, 0, 1, 27, 15, 0, 18, 1, 0, 1, 0, 1, 0]' : 0.115166}
{'[6, 0, 0, 4, 3, 0, 0, 1, 27, 15, 0, 18, 1, 0, 1, 0, 1, 0]' : 0.115259}
{'[6, 0, 0, 4, 3, 0, 0, 1, 27, 15, 0, 18, 1, 0, 1, 0, 1, 0]' : 0.115132}
{'[6, 0, 0, 4, 3, 0, 0, 1, 27, 15, 0, 18, 1, 0, 1, 0, 1, 0]' : 0.115835}
{'[6, 0, 0, 4, 3, 0, 0, 1, 27, 15, 0, 18, 1, 0, 1, 0, 1, 0]' : 0.115303}
{'[6, 0, 0, 4, 3, 0, 0, 1, 27, 15, 0, 18, 1, 0, 1, 0, 1, 0]' : 0.115678}
{'[6, 0, 0, 4, 3, 0, 0, 1, 27, 15, 0, 18, 1, 0, 1, 0, 1, 0]' : 0.115033}
{'[6, 0, 0, 4, 3, 0, 0, 1, 27, 15, 0, 18, 1, 0, 1, 0, 1, 0]' : 0.115386}
{'[6, 0, 0, 4, 3, 0, 0, 1, 27, 15, 0, 18, 1, 0, 1, 0, 1, 0]' : 0.115368}
{'[6, 0, 0, 4, 3, 0, 0, 1, 27, 15, 0, 18, 1, 0, 1, 0, 1, 0]' : 0.115495}

out:
 ["{'[6, 0, 0, 4, 3, 0, 0, 1, 27, 15, 0, 18, 1, 0, 1, 0, 1, 0]' : 0.112183}", "{'[6, 0, 0, 4, 3, 0, 0, 1, 27, 15, 0, 18, 1, 0, 1, 0, 1, 0]' : 0.115417}", "{'[6, 0, 0, 4, 3, 0, 0, 1, 27, 15, 0, 18, 1, 0, 1, 0, 1, 0]' : 0.115292}", "{'[6, 0, 0, 4, 3, 0, 0, 1, 27, 15, 0, 18, 1, 0, 1, 0, 1, 0]' : 0.115451}", "{'[6, 0, 0, 4, 3, 0, 0, 1, 27, 15, 0, 18, 1, 0, 1, 0, 1, 0]' : 0.115293}", "{'[6, 0, 0, 4, 3, 0, 0, 1, 27, 15, 0, 18, 1, 0, 1, 0, 1, 0]' : 0.115704}", "{'[6, 0, 0, 4, 3, 0, 0, 1, 27, 15, 0, 18, 1, 0, 1, 0, 1, 0]' : 0.115053}", "{'[6, 0, 0, 4, 3, 0, 0, 1, 27, 15, 0, 18, 1, 0, 1, 0, 1, 0]' : 0.11544}", "{'[6, 0, 0, 4, 3, 0, 0, 1, 27, 15, 0, 18, 1, 0, 1, 0, 1, 0]' : 0.115496}", "{'[6, 0, 0, 4, 3, 0, 0, 1, 27, 15, 0, 18, 1, 0, 1, 0, 1, 0]' : 0.11433}", "{'[6, 0, 0, 4, 3, 0, 0, 1, 27, 15, 0, 18, 1, 0, 1, 0, 1, 0]' : 0.115007}", "{'[6, 0, 0, 4, 3, 0, 0, 1, 27, 15, 0, 18, 1, 0, 1, 0, 1, 0]' : 0.115181}", "{'[6, 0, 0, 4, 3, 0, 0, 1, 27, 15, 0, 18, 1, 0, 1, 0, 1, 0]' : 0.115294}", "{'[6, 0, 0, 4, 3, 0, 0, 1, 27, 15, 0, 18, 1, 0, 1, 0, 1, 0]' : 0.115462}", "{'[6, 0, 0, 4, 3, 0, 0, 1, 27, 15, 0, 18, 1, 0, 1, 0, 1, 0]' : 0.115334}", "{'[6, 0, 0, 4, 3, 0, 0, 1, 27, 15, 0, 18, 1, 0, 1, 0, 1, 0]' : 0.115366}", "{'[6, 0, 0, 4, 3, 0, 0, 1, 27, 15, 0, 18, 1, 0, 1, 0, 1, 0]' : 0.115918}", "{'[6, 0, 0, 4, 3, 0, 0, 1, 27, 15, 0, 18, 1, 0, 1, 0, 1, 0]' : 0.115362}", "{'[6, 0, 0, 4, 3, 0, 0, 1, 27, 15, 0, 18, 1, 0, 1, 0, 1, 0]' : 0.115296}", "{'[6, 0, 0, 4, 3, 0, 0, 1, 27, 15, 0, 18, 1, 0, 1, 0, 1, 0]' : 0.11516}", "{'[6, 0, 0, 4, 3, 0, 0, 1, 27, 15, 0, 18, 1, 0, 1, 0, 1, 0]' : 0.115166}", "{'[6, 0, 0, 4, 3, 0, 0, 1, 27, 15, 0, 18, 1, 0, 1, 0, 1, 0]' : 0.115259}", "{'[6, 0, 0, 4, 3, 0, 0, 1, 27, 15, 0, 18, 1, 0, 1, 0, 1, 0]' : 0.115132}", "{'[6, 0, 0, 4, 3, 0, 0, 1, 27, 15, 0, 18, 1, 0, 1, 0, 1, 0]' : 0.115835}", "{'[6, 0, 0, 4, 3, 0, 0, 1, 27, 15, 0, 18, 1, 0, 1, 0, 1, 0]' : 0.115303}", "{'[6, 0, 0, 4, 3, 0, 0, 1, 27, 15, 0, 18, 1, 0, 1, 0, 1, 0]' : 0.115678}", "{'[6, 0, 0, 4, 3, 0, 0, 1, 27, 15, 0, 18, 1, 0, 1, 0, 1, 0]' : 0.115033}", "{'[6, 0, 0, 4, 3, 0, 0, 1, 27, 15, 0, 18, 1, 0, 1, 0, 1, 0]' : 0.115386}", "{'[6, 0, 0, 4, 3, 0, 0, 1, 27, 15, 0, 18, 1, 0, 1, 0, 1, 0]' : 0.115368}", "{'[6, 0, 0, 4, 3, 0, 0, 1, 27, 15, 0, 18, 1, 0, 1, 0, 1, 0]' : 0.115495}"]
returning from 'run': {'[6, 0, 0, 4, 3, 0, 0, 1, 27, 15, 0, 18, 1, 0, 1, 0, 1, 0]': ([0.112183, 0.115417, 0.115292, 0.115451, 0.115293, 0.115704, 0.115053, 0.11544, 0.115496, 0.11433, 0.115007, 0.115181, 0.115294, 0.115462, 0.115334, 0.115366, 0.115918, 0.115362, 0.115296, 0.11516, 0.115166, 0.115259, 0.115132, 0.115835, 0.115303, 0.115678, 0.115033, 0.115386, 0.115368, 0.115495], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 0, 4, 3, 0, 0, 1, 27, 15, 0, 18, 1, 0, 1, 0, 1, 0]': ([0.112183, 0.115417, 0.115292, 0.115451, 0.115293, 0.115704, 0.115053, 0.11544, 0.115496, 0.11433, 0.115007, 0.115181, 0.115294, 0.115462, 0.115334, 0.115366, 0.115918, 0.115362, 0.115296, 0.11516, 0.115166, 0.115259, 0.115132, 0.115835, 0.115303, 0.115678, 0.115033, 0.115386, 0.115368, 0.115495], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	64
        Max loop nest depth: 	4
        Additions: 		1525
        Multiplications: 	306
        Divisions: 		0
        Logical: 		0
        Reads: 			2610
        Writes: 		380
        Comparisons:		64
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest71.exe __orio_perftest71.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest71.exe  
Program Test Output: 
{'[4, 5, 5, 0, 0, 0, 1, 1, 22, 15, 0, 26, 0, 0, 1, 0, 1, 1]' : 0.169755}
{'[4, 5, 5, 0, 0, 0, 1, 1, 22, 15, 0, 26, 0, 0, 1, 0, 1, 1]' : 0.169213}
{'[4, 5, 5, 0, 0, 0, 1, 1, 22, 15, 0, 26, 0, 0, 1, 0, 1, 1]' : 0.169765}
{'[4, 5, 5, 0, 0, 0, 1, 1, 22, 15, 0, 26, 0, 0, 1, 0, 1, 1]' : 0.169361}
{'[4, 5, 5, 0, 0, 0, 1, 1, 22, 15, 0, 26, 0, 0, 1, 0, 1, 1]' : 0.170456}
{'[4, 5, 5, 0, 0, 0, 1, 1, 22, 15, 0, 26, 0, 0, 1, 0, 1, 1]' : 0.171049}
{'[4, 5, 5, 0, 0, 0, 1, 1, 22, 15, 0, 26, 0, 0, 1, 0, 1, 1]' : 0.173578}
{'[4, 5, 5, 0, 0, 0, 1, 1, 22, 15, 0, 26, 0, 0, 1, 0, 1, 1]' : 0.173693}
{'[4, 5, 5, 0, 0, 0, 1, 1, 22, 15, 0, 26, 0, 0, 1, 0, 1, 1]' : 0.171912}
{'[4, 5, 5, 0, 0, 0, 1, 1, 22, 15, 0, 26, 0, 0, 1, 0, 1, 1]' : 0.169338}
{'[4, 5, 5, 0, 0, 0, 1, 1, 22, 15, 0, 26, 0, 0, 1, 0, 1, 1]' : 0.170604}
{'[4, 5, 5, 0, 0, 0, 1, 1, 22, 15, 0, 26, 0, 0, 1, 0, 1, 1]' : 0.169688}
{'[4, 5, 5, 0, 0, 0, 1, 1, 22, 15, 0, 26, 0, 0, 1, 0, 1, 1]' : 0.16953}
{'[4, 5, 5, 0, 0, 0, 1, 1, 22, 15, 0, 26, 0, 0, 1, 0, 1, 1]' : 0.169173}
{'[4, 5, 5, 0, 0, 0, 1, 1, 22, 15, 0, 26, 0, 0, 1, 0, 1, 1]' : 0.169459}
{'[4, 5, 5, 0, 0, 0, 1, 1, 22, 15, 0, 26, 0, 0, 1, 0, 1, 1]' : 0.169528}
{'[4, 5, 5, 0, 0, 0, 1, 1, 22, 15, 0, 26, 0, 0, 1, 0, 1, 1]' : 0.170219}
{'[4, 5, 5, 0, 0, 0, 1, 1, 22, 15, 0, 26, 0, 0, 1, 0, 1, 1]' : 0.169922}
{'[4, 5, 5, 0, 0, 0, 1, 1, 22, 15, 0, 26, 0, 0, 1, 0, 1, 1]' : 0.165489}
{'[4, 5, 5, 0, 0, 0, 1, 1, 22, 15, 0, 26, 0, 0, 1, 0, 1, 1]' : 0.165474}
{'[4, 5, 5, 0, 0, 0, 1, 1, 22, 15, 0, 26, 0, 0, 1, 0, 1, 1]' : 0.167452}
{'[4, 5, 5, 0, 0, 0, 1, 1, 22, 15, 0, 26, 0, 0, 1, 0, 1, 1]' : 0.169638}
{'[4, 5, 5, 0, 0, 0, 1, 1, 22, 15, 0, 26, 0, 0, 1, 0, 1, 1]' : 0.170186}
{'[4, 5, 5, 0, 0, 0, 1, 1, 22, 15, 0, 26, 0, 0, 1, 0, 1, 1]' : 0.167454}
{'[4, 5, 5, 0, 0, 0, 1, 1, 22, 15, 0, 26, 0, 0, 1, 0, 1, 1]' : 0.164569}
{'[4, 5, 5, 0, 0, 0, 1, 1, 22, 15, 0, 26, 0, 0, 1, 0, 1, 1]' : 0.164948}
{'[4, 5, 5, 0, 0, 0, 1, 1, 22, 15, 0, 26, 0, 0, 1, 0, 1, 1]' : 0.16525}
{'[4, 5, 5, 0, 0, 0, 1, 1, 22, 15, 0, 26, 0, 0, 1, 0, 1, 1]' : 0.164929}
{'[4, 5, 5, 0, 0, 0, 1, 1, 22, 15, 0, 26, 0, 0, 1, 0, 1, 1]' : 0.165553}
{'[4, 5, 5, 0, 0, 0, 1, 1, 22, 15, 0, 26, 0, 0, 1, 0, 1, 1]' : 0.164947}

out:
 ["{'[4, 5, 5, 0, 0, 0, 1, 1, 22, 15, 0, 26, 0, 0, 1, 0, 1, 1]' : 0.169755}", "{'[4, 5, 5, 0, 0, 0, 1, 1, 22, 15, 0, 26, 0, 0, 1, 0, 1, 1]' : 0.169213}", "{'[4, 5, 5, 0, 0, 0, 1, 1, 22, 15, 0, 26, 0, 0, 1, 0, 1, 1]' : 0.169765}", "{'[4, 5, 5, 0, 0, 0, 1, 1, 22, 15, 0, 26, 0, 0, 1, 0, 1, 1]' : 0.169361}", "{'[4, 5, 5, 0, 0, 0, 1, 1, 22, 15, 0, 26, 0, 0, 1, 0, 1, 1]' : 0.170456}", "{'[4, 5, 5, 0, 0, 0, 1, 1, 22, 15, 0, 26, 0, 0, 1, 0, 1, 1]' : 0.171049}", "{'[4, 5, 5, 0, 0, 0, 1, 1, 22, 15, 0, 26, 0, 0, 1, 0, 1, 1]' : 0.173578}", "{'[4, 5, 5, 0, 0, 0, 1, 1, 22, 15, 0, 26, 0, 0, 1, 0, 1, 1]' : 0.173693}", "{'[4, 5, 5, 0, 0, 0, 1, 1, 22, 15, 0, 26, 0, 0, 1, 0, 1, 1]' : 0.171912}", "{'[4, 5, 5, 0, 0, 0, 1, 1, 22, 15, 0, 26, 0, 0, 1, 0, 1, 1]' : 0.169338}", "{'[4, 5, 5, 0, 0, 0, 1, 1, 22, 15, 0, 26, 0, 0, 1, 0, 1, 1]' : 0.170604}", "{'[4, 5, 5, 0, 0, 0, 1, 1, 22, 15, 0, 26, 0, 0, 1, 0, 1, 1]' : 0.169688}", "{'[4, 5, 5, 0, 0, 0, 1, 1, 22, 15, 0, 26, 0, 0, 1, 0, 1, 1]' : 0.16953}", "{'[4, 5, 5, 0, 0, 0, 1, 1, 22, 15, 0, 26, 0, 0, 1, 0, 1, 1]' : 0.169173}", "{'[4, 5, 5, 0, 0, 0, 1, 1, 22, 15, 0, 26, 0, 0, 1, 0, 1, 1]' : 0.169459}", "{'[4, 5, 5, 0, 0, 0, 1, 1, 22, 15, 0, 26, 0, 0, 1, 0, 1, 1]' : 0.169528}", "{'[4, 5, 5, 0, 0, 0, 1, 1, 22, 15, 0, 26, 0, 0, 1, 0, 1, 1]' : 0.170219}", "{'[4, 5, 5, 0, 0, 0, 1, 1, 22, 15, 0, 26, 0, 0, 1, 0, 1, 1]' : 0.169922}", "{'[4, 5, 5, 0, 0, 0, 1, 1, 22, 15, 0, 26, 0, 0, 1, 0, 1, 1]' : 0.165489}", "{'[4, 5, 5, 0, 0, 0, 1, 1, 22, 15, 0, 26, 0, 0, 1, 0, 1, 1]' : 0.165474}", "{'[4, 5, 5, 0, 0, 0, 1, 1, 22, 15, 0, 26, 0, 0, 1, 0, 1, 1]' : 0.167452}", "{'[4, 5, 5, 0, 0, 0, 1, 1, 22, 15, 0, 26, 0, 0, 1, 0, 1, 1]' : 0.169638}", "{'[4, 5, 5, 0, 0, 0, 1, 1, 22, 15, 0, 26, 0, 0, 1, 0, 1, 1]' : 0.170186}", "{'[4, 5, 5, 0, 0, 0, 1, 1, 22, 15, 0, 26, 0, 0, 1, 0, 1, 1]' : 0.167454}", "{'[4, 5, 5, 0, 0, 0, 1, 1, 22, 15, 0, 26, 0, 0, 1, 0, 1, 1]' : 0.164569}", "{'[4, 5, 5, 0, 0, 0, 1, 1, 22, 15, 0, 26, 0, 0, 1, 0, 1, 1]' : 0.164948}", "{'[4, 5, 5, 0, 0, 0, 1, 1, 22, 15, 0, 26, 0, 0, 1, 0, 1, 1]' : 0.16525}", "{'[4, 5, 5, 0, 0, 0, 1, 1, 22, 15, 0, 26, 0, 0, 1, 0, 1, 1]' : 0.164929}", "{'[4, 5, 5, 0, 0, 0, 1, 1, 22, 15, 0, 26, 0, 0, 1, 0, 1, 1]' : 0.165553}", "{'[4, 5, 5, 0, 0, 0, 1, 1, 22, 15, 0, 26, 0, 0, 1, 0, 1, 1]' : 0.164947}"]
returning from 'run': {'[4, 5, 5, 0, 0, 0, 1, 1, 22, 15, 0, 26, 0, 0, 1, 0, 1, 1]': ([0.169755, 0.169213, 0.169765, 0.169361, 0.170456, 0.171049, 0.173578, 0.173693, 0.171912, 0.169338, 0.170604, 0.169688, 0.16953, 0.169173, 0.169459, 0.169528, 0.170219, 0.169922, 0.165489, 0.165474, 0.167452, 0.169638, 0.170186, 0.167454, 0.164569, 0.164948, 0.16525, 0.164929, 0.165553, 0.164947], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 5, 5, 0, 0, 0, 1, 1, 22, 15, 0, 26, 0, 0, 1, 0, 1, 1]': ([0.169755, 0.169213, 0.169765, 0.169361, 0.170456, 0.171049, 0.173578, 0.173693, 0.171912, 0.169338, 0.170604, 0.169688, 0.16953, 0.169173, 0.169459, 0.169528, 0.170219, 0.169922, 0.165489, 0.165474, 0.167452, 0.169638, 0.170186, 0.167454, 0.164569, 0.164948, 0.16525, 0.164929, 0.165553, 0.164947], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	50
        Max loop nest depth: 	6
        Additions: 		3748
        Multiplications: 	1054
        Divisions: 		0
        Logical: 		0
        Reads: 			5776
        Writes: 		675
        Comparisons:		50
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest72.exe __orio_perftest72.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest72.exe  
Program Test Output: 
{'[3, 3, 2, 2, 1, 6, 0, 0, 29, 15, 0, 20, 0, 0, 1, 0, 0, 0]' : 0.12745}
{'[3, 3, 2, 2, 1, 6, 0, 0, 29, 15, 0, 20, 0, 0, 1, 0, 0, 0]' : 0.128154}
{'[3, 3, 2, 2, 1, 6, 0, 0, 29, 15, 0, 20, 0, 0, 1, 0, 0, 0]' : 0.127268}
{'[3, 3, 2, 2, 1, 6, 0, 0, 29, 15, 0, 20, 0, 0, 1, 0, 0, 0]' : 0.127223}
{'[3, 3, 2, 2, 1, 6, 0, 0, 29, 15, 0, 20, 0, 0, 1, 0, 0, 0]' : 0.127558}
{'[3, 3, 2, 2, 1, 6, 0, 0, 29, 15, 0, 20, 0, 0, 1, 0, 0, 0]' : 0.127441}
{'[3, 3, 2, 2, 1, 6, 0, 0, 29, 15, 0, 20, 0, 0, 1, 0, 0, 0]' : 0.127403}
{'[3, 3, 2, 2, 1, 6, 0, 0, 29, 15, 0, 20, 0, 0, 1, 0, 0, 0]' : 0.127232}
{'[3, 3, 2, 2, 1, 6, 0, 0, 29, 15, 0, 20, 0, 0, 1, 0, 0, 0]' : 0.127255}
{'[3, 3, 2, 2, 1, 6, 0, 0, 29, 15, 0, 20, 0, 0, 1, 0, 0, 0]' : 0.127884}
{'[3, 3, 2, 2, 1, 6, 0, 0, 29, 15, 0, 20, 0, 0, 1, 0, 0, 0]' : 0.127958}
{'[3, 3, 2, 2, 1, 6, 0, 0, 29, 15, 0, 20, 0, 0, 1, 0, 0, 0]' : 0.127592}
{'[3, 3, 2, 2, 1, 6, 0, 0, 29, 15, 0, 20, 0, 0, 1, 0, 0, 0]' : 0.127707}
{'[3, 3, 2, 2, 1, 6, 0, 0, 29, 15, 0, 20, 0, 0, 1, 0, 0, 0]' : 0.127651}
{'[3, 3, 2, 2, 1, 6, 0, 0, 29, 15, 0, 20, 0, 0, 1, 0, 0, 0]' : 0.127306}
{'[3, 3, 2, 2, 1, 6, 0, 0, 29, 15, 0, 20, 0, 0, 1, 0, 0, 0]' : 0.12717}
{'[3, 3, 2, 2, 1, 6, 0, 0, 29, 15, 0, 20, 0, 0, 1, 0, 0, 0]' : 0.127189}
{'[3, 3, 2, 2, 1, 6, 0, 0, 29, 15, 0, 20, 0, 0, 1, 0, 0, 0]' : 0.127861}
{'[3, 3, 2, 2, 1, 6, 0, 0, 29, 15, 0, 20, 0, 0, 1, 0, 0, 0]' : 0.127313}
{'[3, 3, 2, 2, 1, 6, 0, 0, 29, 15, 0, 20, 0, 0, 1, 0, 0, 0]' : 0.127525}
{'[3, 3, 2, 2, 1, 6, 0, 0, 29, 15, 0, 20, 0, 0, 1, 0, 0, 0]' : 0.127525}
{'[3, 3, 2, 2, 1, 6, 0, 0, 29, 15, 0, 20, 0, 0, 1, 0, 0, 0]' : 0.127421}
{'[3, 3, 2, 2, 1, 6, 0, 0, 29, 15, 0, 20, 0, 0, 1, 0, 0, 0]' : 0.127212}
{'[3, 3, 2, 2, 1, 6, 0, 0, 29, 15, 0, 20, 0, 0, 1, 0, 0, 0]' : 0.127241}
{'[3, 3, 2, 2, 1, 6, 0, 0, 29, 15, 0, 20, 0, 0, 1, 0, 0, 0]' : 0.127299}
{'[3, 3, 2, 2, 1, 6, 0, 0, 29, 15, 0, 20, 0, 0, 1, 0, 0, 0]' : 0.127541}
{'[3, 3, 2, 2, 1, 6, 0, 0, 29, 15, 0, 20, 0, 0, 1, 0, 0, 0]' : 0.127034}
{'[3, 3, 2, 2, 1, 6, 0, 0, 29, 15, 0, 20, 0, 0, 1, 0, 0, 0]' : 0.12799}
{'[3, 3, 2, 2, 1, 6, 0, 0, 29, 15, 0, 20, 0, 0, 1, 0, 0, 0]' : 0.127417}
{'[3, 3, 2, 2, 1, 6, 0, 0, 29, 15, 0, 20, 0, 0, 1, 0, 0, 0]' : 0.127648}

out:
 ["{'[3, 3, 2, 2, 1, 6, 0, 0, 29, 15, 0, 20, 0, 0, 1, 0, 0, 0]' : 0.12745}", "{'[3, 3, 2, 2, 1, 6, 0, 0, 29, 15, 0, 20, 0, 0, 1, 0, 0, 0]' : 0.128154}", "{'[3, 3, 2, 2, 1, 6, 0, 0, 29, 15, 0, 20, 0, 0, 1, 0, 0, 0]' : 0.127268}", "{'[3, 3, 2, 2, 1, 6, 0, 0, 29, 15, 0, 20, 0, 0, 1, 0, 0, 0]' : 0.127223}", "{'[3, 3, 2, 2, 1, 6, 0, 0, 29, 15, 0, 20, 0, 0, 1, 0, 0, 0]' : 0.127558}", "{'[3, 3, 2, 2, 1, 6, 0, 0, 29, 15, 0, 20, 0, 0, 1, 0, 0, 0]' : 0.127441}", "{'[3, 3, 2, 2, 1, 6, 0, 0, 29, 15, 0, 20, 0, 0, 1, 0, 0, 0]' : 0.127403}", "{'[3, 3, 2, 2, 1, 6, 0, 0, 29, 15, 0, 20, 0, 0, 1, 0, 0, 0]' : 0.127232}", "{'[3, 3, 2, 2, 1, 6, 0, 0, 29, 15, 0, 20, 0, 0, 1, 0, 0, 0]' : 0.127255}", "{'[3, 3, 2, 2, 1, 6, 0, 0, 29, 15, 0, 20, 0, 0, 1, 0, 0, 0]' : 0.127884}", "{'[3, 3, 2, 2, 1, 6, 0, 0, 29, 15, 0, 20, 0, 0, 1, 0, 0, 0]' : 0.127958}", "{'[3, 3, 2, 2, 1, 6, 0, 0, 29, 15, 0, 20, 0, 0, 1, 0, 0, 0]' : 0.127592}", "{'[3, 3, 2, 2, 1, 6, 0, 0, 29, 15, 0, 20, 0, 0, 1, 0, 0, 0]' : 0.127707}", "{'[3, 3, 2, 2, 1, 6, 0, 0, 29, 15, 0, 20, 0, 0, 1, 0, 0, 0]' : 0.127651}", "{'[3, 3, 2, 2, 1, 6, 0, 0, 29, 15, 0, 20, 0, 0, 1, 0, 0, 0]' : 0.127306}", "{'[3, 3, 2, 2, 1, 6, 0, 0, 29, 15, 0, 20, 0, 0, 1, 0, 0, 0]' : 0.12717}", "{'[3, 3, 2, 2, 1, 6, 0, 0, 29, 15, 0, 20, 0, 0, 1, 0, 0, 0]' : 0.127189}", "{'[3, 3, 2, 2, 1, 6, 0, 0, 29, 15, 0, 20, 0, 0, 1, 0, 0, 0]' : 0.127861}", "{'[3, 3, 2, 2, 1, 6, 0, 0, 29, 15, 0, 20, 0, 0, 1, 0, 0, 0]' : 0.127313}", "{'[3, 3, 2, 2, 1, 6, 0, 0, 29, 15, 0, 20, 0, 0, 1, 0, 0, 0]' : 0.127525}", "{'[3, 3, 2, 2, 1, 6, 0, 0, 29, 15, 0, 20, 0, 0, 1, 0, 0, 0]' : 0.127525}", "{'[3, 3, 2, 2, 1, 6, 0, 0, 29, 15, 0, 20, 0, 0, 1, 0, 0, 0]' : 0.127421}", "{'[3, 3, 2, 2, 1, 6, 0, 0, 29, 15, 0, 20, 0, 0, 1, 0, 0, 0]' : 0.127212}", "{'[3, 3, 2, 2, 1, 6, 0, 0, 29, 15, 0, 20, 0, 0, 1, 0, 0, 0]' : 0.127241}", "{'[3, 3, 2, 2, 1, 6, 0, 0, 29, 15, 0, 20, 0, 0, 1, 0, 0, 0]' : 0.127299}", "{'[3, 3, 2, 2, 1, 6, 0, 0, 29, 15, 0, 20, 0, 0, 1, 0, 0, 0]' : 0.127541}", "{'[3, 3, 2, 2, 1, 6, 0, 0, 29, 15, 0, 20, 0, 0, 1, 0, 0, 0]' : 0.127034}", "{'[3, 3, 2, 2, 1, 6, 0, 0, 29, 15, 0, 20, 0, 0, 1, 0, 0, 0]' : 0.12799}", "{'[3, 3, 2, 2, 1, 6, 0, 0, 29, 15, 0, 20, 0, 0, 1, 0, 0, 0]' : 0.127417}", "{'[3, 3, 2, 2, 1, 6, 0, 0, 29, 15, 0, 20, 0, 0, 1, 0, 0, 0]' : 0.127648}"]
returning from 'run': {'[3, 3, 2, 2, 1, 6, 0, 0, 29, 15, 0, 20, 0, 0, 1, 0, 0, 0]': ([0.12745, 0.128154, 0.127268, 0.127223, 0.127558, 0.127441, 0.127403, 0.127232, 0.127255, 0.127884, 0.127958, 0.127592, 0.127707, 0.127651, 0.127306, 0.12717, 0.127189, 0.127861, 0.127313, 0.127525, 0.127525, 0.127421, 0.127212, 0.127241, 0.127299, 0.127541, 0.127034, 0.12799, 0.127417, 0.127648], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 3, 2, 2, 1, 6, 0, 0, 29, 15, 0, 20, 0, 0, 1, 0, 0, 0]': ([0.12745, 0.128154, 0.127268, 0.127223, 0.127558, 0.127441, 0.127403, 0.127232, 0.127255, 0.127884, 0.127958, 0.127592, 0.127707, 0.127651, 0.127306, 0.12717, 0.127189, 0.127861, 0.127313, 0.127525, 0.127525, 0.127421, 0.127212, 0.127241, 0.127299, 0.127541, 0.127034, 0.12799, 0.127417, 0.127648], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	49
        Max loop nest depth: 	4
        Additions: 		2304
        Multiplications: 	578
        Divisions: 		0
        Logical: 		0
        Reads: 			3733
        Writes: 		454
        Comparisons:		49
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest73.exe __orio_perftest73.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest73.exe  
Program Test Output: 
{'[5, 0, 0, 0, 2, 2, 0, 1, 8, 15, 0, 3, 0, 1, 1, 0, 0, 1]' : 0.160602}
{'[5, 0, 0, 0, 2, 2, 0, 1, 8, 15, 0, 3, 0, 1, 1, 0, 0, 1]' : 0.159942}
{'[5, 0, 0, 0, 2, 2, 0, 1, 8, 15, 0, 3, 0, 1, 1, 0, 0, 1]' : 0.159589}
{'[5, 0, 0, 0, 2, 2, 0, 1, 8, 15, 0, 3, 0, 1, 1, 0, 0, 1]' : 0.159338}
{'[5, 0, 0, 0, 2, 2, 0, 1, 8, 15, 0, 3, 0, 1, 1, 0, 0, 1]' : 0.159598}
{'[5, 0, 0, 0, 2, 2, 0, 1, 8, 15, 0, 3, 0, 1, 1, 0, 0, 1]' : 0.159865}
{'[5, 0, 0, 0, 2, 2, 0, 1, 8, 15, 0, 3, 0, 1, 1, 0, 0, 1]' : 0.159796}
{'[5, 0, 0, 0, 2, 2, 0, 1, 8, 15, 0, 3, 0, 1, 1, 0, 0, 1]' : 0.159423}
{'[5, 0, 0, 0, 2, 2, 0, 1, 8, 15, 0, 3, 0, 1, 1, 0, 0, 1]' : 0.162479}
{'[5, 0, 0, 0, 2, 2, 0, 1, 8, 15, 0, 3, 0, 1, 1, 0, 0, 1]' : 0.16388}
{'[5, 0, 0, 0, 2, 2, 0, 1, 8, 15, 0, 3, 0, 1, 1, 0, 0, 1]' : 0.163834}
{'[5, 0, 0, 0, 2, 2, 0, 1, 8, 15, 0, 3, 0, 1, 1, 0, 0, 1]' : 0.162815}
{'[5, 0, 0, 0, 2, 2, 0, 1, 8, 15, 0, 3, 0, 1, 1, 0, 0, 1]' : 0.163822}
{'[5, 0, 0, 0, 2, 2, 0, 1, 8, 15, 0, 3, 0, 1, 1, 0, 0, 1]' : 0.160446}
{'[5, 0, 0, 0, 2, 2, 0, 1, 8, 15, 0, 3, 0, 1, 1, 0, 0, 1]' : 0.158764}
{'[5, 0, 0, 0, 2, 2, 0, 1, 8, 15, 0, 3, 0, 1, 1, 0, 0, 1]' : 0.157127}
{'[5, 0, 0, 0, 2, 2, 0, 1, 8, 15, 0, 3, 0, 1, 1, 0, 0, 1]' : 0.156894}
{'[5, 0, 0, 0, 2, 2, 0, 1, 8, 15, 0, 3, 0, 1, 1, 0, 0, 1]' : 0.157444}
{'[5, 0, 0, 0, 2, 2, 0, 1, 8, 15, 0, 3, 0, 1, 1, 0, 0, 1]' : 0.156881}
{'[5, 0, 0, 0, 2, 2, 0, 1, 8, 15, 0, 3, 0, 1, 1, 0, 0, 1]' : 0.15719}
{'[5, 0, 0, 0, 2, 2, 0, 1, 8, 15, 0, 3, 0, 1, 1, 0, 0, 1]' : 0.157454}
{'[5, 0, 0, 0, 2, 2, 0, 1, 8, 15, 0, 3, 0, 1, 1, 0, 0, 1]' : 0.16125}
{'[5, 0, 0, 0, 2, 2, 0, 1, 8, 15, 0, 3, 0, 1, 1, 0, 0, 1]' : 0.161146}
{'[5, 0, 0, 0, 2, 2, 0, 1, 8, 15, 0, 3, 0, 1, 1, 0, 0, 1]' : 0.160949}
{'[5, 0, 0, 0, 2, 2, 0, 1, 8, 15, 0, 3, 0, 1, 1, 0, 0, 1]' : 0.157183}
{'[5, 0, 0, 0, 2, 2, 0, 1, 8, 15, 0, 3, 0, 1, 1, 0, 0, 1]' : 0.157267}
{'[5, 0, 0, 0, 2, 2, 0, 1, 8, 15, 0, 3, 0, 1, 1, 0, 0, 1]' : 0.157209}
{'[5, 0, 0, 0, 2, 2, 0, 1, 8, 15, 0, 3, 0, 1, 1, 0, 0, 1]' : 0.156915}
{'[5, 0, 0, 0, 2, 2, 0, 1, 8, 15, 0, 3, 0, 1, 1, 0, 0, 1]' : 0.157025}
{'[5, 0, 0, 0, 2, 2, 0, 1, 8, 15, 0, 3, 0, 1, 1, 0, 0, 1]' : 0.156883}

out:
 ["{'[5, 0, 0, 0, 2, 2, 0, 1, 8, 15, 0, 3, 0, 1, 1, 0, 0, 1]' : 0.160602}", "{'[5, 0, 0, 0, 2, 2, 0, 1, 8, 15, 0, 3, 0, 1, 1, 0, 0, 1]' : 0.159942}", "{'[5, 0, 0, 0, 2, 2, 0, 1, 8, 15, 0, 3, 0, 1, 1, 0, 0, 1]' : 0.159589}", "{'[5, 0, 0, 0, 2, 2, 0, 1, 8, 15, 0, 3, 0, 1, 1, 0, 0, 1]' : 0.159338}", "{'[5, 0, 0, 0, 2, 2, 0, 1, 8, 15, 0, 3, 0, 1, 1, 0, 0, 1]' : 0.159598}", "{'[5, 0, 0, 0, 2, 2, 0, 1, 8, 15, 0, 3, 0, 1, 1, 0, 0, 1]' : 0.159865}", "{'[5, 0, 0, 0, 2, 2, 0, 1, 8, 15, 0, 3, 0, 1, 1, 0, 0, 1]' : 0.159796}", "{'[5, 0, 0, 0, 2, 2, 0, 1, 8, 15, 0, 3, 0, 1, 1, 0, 0, 1]' : 0.159423}", "{'[5, 0, 0, 0, 2, 2, 0, 1, 8, 15, 0, 3, 0, 1, 1, 0, 0, 1]' : 0.162479}", "{'[5, 0, 0, 0, 2, 2, 0, 1, 8, 15, 0, 3, 0, 1, 1, 0, 0, 1]' : 0.16388}", "{'[5, 0, 0, 0, 2, 2, 0, 1, 8, 15, 0, 3, 0, 1, 1, 0, 0, 1]' : 0.163834}", "{'[5, 0, 0, 0, 2, 2, 0, 1, 8, 15, 0, 3, 0, 1, 1, 0, 0, 1]' : 0.162815}", "{'[5, 0, 0, 0, 2, 2, 0, 1, 8, 15, 0, 3, 0, 1, 1, 0, 0, 1]' : 0.163822}", "{'[5, 0, 0, 0, 2, 2, 0, 1, 8, 15, 0, 3, 0, 1, 1, 0, 0, 1]' : 0.160446}", "{'[5, 0, 0, 0, 2, 2, 0, 1, 8, 15, 0, 3, 0, 1, 1, 0, 0, 1]' : 0.158764}", "{'[5, 0, 0, 0, 2, 2, 0, 1, 8, 15, 0, 3, 0, 1, 1, 0, 0, 1]' : 0.157127}", "{'[5, 0, 0, 0, 2, 2, 0, 1, 8, 15, 0, 3, 0, 1, 1, 0, 0, 1]' : 0.156894}", "{'[5, 0, 0, 0, 2, 2, 0, 1, 8, 15, 0, 3, 0, 1, 1, 0, 0, 1]' : 0.157444}", "{'[5, 0, 0, 0, 2, 2, 0, 1, 8, 15, 0, 3, 0, 1, 1, 0, 0, 1]' : 0.156881}", "{'[5, 0, 0, 0, 2, 2, 0, 1, 8, 15, 0, 3, 0, 1, 1, 0, 0, 1]' : 0.15719}", "{'[5, 0, 0, 0, 2, 2, 0, 1, 8, 15, 0, 3, 0, 1, 1, 0, 0, 1]' : 0.157454}", "{'[5, 0, 0, 0, 2, 2, 0, 1, 8, 15, 0, 3, 0, 1, 1, 0, 0, 1]' : 0.16125}", "{'[5, 0, 0, 0, 2, 2, 0, 1, 8, 15, 0, 3, 0, 1, 1, 0, 0, 1]' : 0.161146}", "{'[5, 0, 0, 0, 2, 2, 0, 1, 8, 15, 0, 3, 0, 1, 1, 0, 0, 1]' : 0.160949}", "{'[5, 0, 0, 0, 2, 2, 0, 1, 8, 15, 0, 3, 0, 1, 1, 0, 0, 1]' : 0.157183}", "{'[5, 0, 0, 0, 2, 2, 0, 1, 8, 15, 0, 3, 0, 1, 1, 0, 0, 1]' : 0.157267}", "{'[5, 0, 0, 0, 2, 2, 0, 1, 8, 15, 0, 3, 0, 1, 1, 0, 0, 1]' : 0.157209}", "{'[5, 0, 0, 0, 2, 2, 0, 1, 8, 15, 0, 3, 0, 1, 1, 0, 0, 1]' : 0.156915}", "{'[5, 0, 0, 0, 2, 2, 0, 1, 8, 15, 0, 3, 0, 1, 1, 0, 0, 1]' : 0.157025}", "{'[5, 0, 0, 0, 2, 2, 0, 1, 8, 15, 0, 3, 0, 1, 1, 0, 0, 1]' : 0.156883}"]
returning from 'run': {'[5, 0, 0, 0, 2, 2, 0, 1, 8, 15, 0, 3, 0, 1, 1, 0, 0, 1]': ([0.160602, 0.159942, 0.159589, 0.159338, 0.159598, 0.159865, 0.159796, 0.159423, 0.162479, 0.16388, 0.163834, 0.162815, 0.163822, 0.160446, 0.158764, 0.157127, 0.156894, 0.157444, 0.156881, 0.15719, 0.157454, 0.16125, 0.161146, 0.160949, 0.157183, 0.157267, 0.157209, 0.156915, 0.157025, 0.156883], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 0, 0, 0, 2, 2, 0, 1, 8, 15, 0, 3, 0, 1, 1, 0, 0, 1]': ([0.160602, 0.159942, 0.159589, 0.159338, 0.159598, 0.159865, 0.159796, 0.159423, 0.162479, 0.16388, 0.163834, 0.162815, 0.163822, 0.160446, 0.158764, 0.157127, 0.156894, 0.157444, 0.156881, 0.15719, 0.157454, 0.16125, 0.161146, 0.160949, 0.157183, 0.157267, 0.157209, 0.156915, 0.157025, 0.156883], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	48
        Max loop nest depth: 	6
        Additions: 		4985
        Multiplications: 	1428
        Divisions: 		0
        Logical: 		0
        Reads: 			7588
        Writes: 		836
        Comparisons:		48
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest74.exe __orio_perftest74.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest74.exe  
Program Test Output: 
{'[6, 0, 6, 6, 0, 5, 1, 0, 7, 15, 0, 7, 0, 0, 2, 0, 0, 0]' : 0.129292}
{'[6, 0, 6, 6, 0, 5, 1, 0, 7, 15, 0, 7, 0, 0, 2, 0, 0, 0]' : 0.129108}
{'[6, 0, 6, 6, 0, 5, 1, 0, 7, 15, 0, 7, 0, 0, 2, 0, 0, 0]' : 0.132212}
{'[6, 0, 6, 6, 0, 5, 1, 0, 7, 15, 0, 7, 0, 0, 2, 0, 0, 0]' : 0.132619}
{'[6, 0, 6, 6, 0, 5, 1, 0, 7, 15, 0, 7, 0, 0, 2, 0, 0, 0]' : 0.132887}
{'[6, 0, 6, 6, 0, 5, 1, 0, 7, 15, 0, 7, 0, 0, 2, 0, 0, 0]' : 0.132993}
{'[6, 0, 6, 6, 0, 5, 1, 0, 7, 15, 0, 7, 0, 0, 2, 0, 0, 0]' : 0.132649}
{'[6, 0, 6, 6, 0, 5, 1, 0, 7, 15, 0, 7, 0, 0, 2, 0, 0, 0]' : 0.132719}
{'[6, 0, 6, 6, 0, 5, 1, 0, 7, 15, 0, 7, 0, 0, 2, 0, 0, 0]' : 0.132761}
{'[6, 0, 6, 6, 0, 5, 1, 0, 7, 15, 0, 7, 0, 0, 2, 0, 0, 0]' : 0.133026}
{'[6, 0, 6, 6, 0, 5, 1, 0, 7, 15, 0, 7, 0, 0, 2, 0, 0, 0]' : 0.132602}
{'[6, 0, 6, 6, 0, 5, 1, 0, 7, 15, 0, 7, 0, 0, 2, 0, 0, 0]' : 0.13266}
{'[6, 0, 6, 6, 0, 5, 1, 0, 7, 15, 0, 7, 0, 0, 2, 0, 0, 0]' : 0.132784}
{'[6, 0, 6, 6, 0, 5, 1, 0, 7, 15, 0, 7, 0, 0, 2, 0, 0, 0]' : 0.130422}
{'[6, 0, 6, 6, 0, 5, 1, 0, 7, 15, 0, 7, 0, 0, 2, 0, 0, 0]' : 0.129325}
{'[6, 0, 6, 6, 0, 5, 1, 0, 7, 15, 0, 7, 0, 0, 2, 0, 0, 0]' : 0.129137}
{'[6, 0, 6, 6, 0, 5, 1, 0, 7, 15, 0, 7, 0, 0, 2, 0, 0, 0]' : 0.129273}
{'[6, 0, 6, 6, 0, 5, 1, 0, 7, 15, 0, 7, 0, 0, 2, 0, 0, 0]' : 0.131725}
{'[6, 0, 6, 6, 0, 5, 1, 0, 7, 15, 0, 7, 0, 0, 2, 0, 0, 0]' : 0.131626}
{'[6, 0, 6, 6, 0, 5, 1, 0, 7, 15, 0, 7, 0, 0, 2, 0, 0, 0]' : 0.129361}
{'[6, 0, 6, 6, 0, 5, 1, 0, 7, 15, 0, 7, 0, 0, 2, 0, 0, 0]' : 0.129374}
{'[6, 0, 6, 6, 0, 5, 1, 0, 7, 15, 0, 7, 0, 0, 2, 0, 0, 0]' : 0.129557}
{'[6, 0, 6, 6, 0, 5, 1, 0, 7, 15, 0, 7, 0, 0, 2, 0, 0, 0]' : 0.130597}
{'[6, 0, 6, 6, 0, 5, 1, 0, 7, 15, 0, 7, 0, 0, 2, 0, 0, 0]' : 0.132577}
{'[6, 0, 6, 6, 0, 5, 1, 0, 7, 15, 0, 7, 0, 0, 2, 0, 0, 0]' : 0.133197}
{'[6, 0, 6, 6, 0, 5, 1, 0, 7, 15, 0, 7, 0, 0, 2, 0, 0, 0]' : 0.13268}
{'[6, 0, 6, 6, 0, 5, 1, 0, 7, 15, 0, 7, 0, 0, 2, 0, 0, 0]' : 0.132577}
{'[6, 0, 6, 6, 0, 5, 1, 0, 7, 15, 0, 7, 0, 0, 2, 0, 0, 0]' : 0.132689}
{'[6, 0, 6, 6, 0, 5, 1, 0, 7, 15, 0, 7, 0, 0, 2, 0, 0, 0]' : 0.132887}
{'[6, 0, 6, 6, 0, 5, 1, 0, 7, 15, 0, 7, 0, 0, 2, 0, 0, 0]' : 0.132853}

out:
 ["{'[6, 0, 6, 6, 0, 5, 1, 0, 7, 15, 0, 7, 0, 0, 2, 0, 0, 0]' : 0.129292}", "{'[6, 0, 6, 6, 0, 5, 1, 0, 7, 15, 0, 7, 0, 0, 2, 0, 0, 0]' : 0.129108}", "{'[6, 0, 6, 6, 0, 5, 1, 0, 7, 15, 0, 7, 0, 0, 2, 0, 0, 0]' : 0.132212}", "{'[6, 0, 6, 6, 0, 5, 1, 0, 7, 15, 0, 7, 0, 0, 2, 0, 0, 0]' : 0.132619}", "{'[6, 0, 6, 6, 0, 5, 1, 0, 7, 15, 0, 7, 0, 0, 2, 0, 0, 0]' : 0.132887}", "{'[6, 0, 6, 6, 0, 5, 1, 0, 7, 15, 0, 7, 0, 0, 2, 0, 0, 0]' : 0.132993}", "{'[6, 0, 6, 6, 0, 5, 1, 0, 7, 15, 0, 7, 0, 0, 2, 0, 0, 0]' : 0.132649}", "{'[6, 0, 6, 6, 0, 5, 1, 0, 7, 15, 0, 7, 0, 0, 2, 0, 0, 0]' : 0.132719}", "{'[6, 0, 6, 6, 0, 5, 1, 0, 7, 15, 0, 7, 0, 0, 2, 0, 0, 0]' : 0.132761}", "{'[6, 0, 6, 6, 0, 5, 1, 0, 7, 15, 0, 7, 0, 0, 2, 0, 0, 0]' : 0.133026}", "{'[6, 0, 6, 6, 0, 5, 1, 0, 7, 15, 0, 7, 0, 0, 2, 0, 0, 0]' : 0.132602}", "{'[6, 0, 6, 6, 0, 5, 1, 0, 7, 15, 0, 7, 0, 0, 2, 0, 0, 0]' : 0.13266}", "{'[6, 0, 6, 6, 0, 5, 1, 0, 7, 15, 0, 7, 0, 0, 2, 0, 0, 0]' : 0.132784}", "{'[6, 0, 6, 6, 0, 5, 1, 0, 7, 15, 0, 7, 0, 0, 2, 0, 0, 0]' : 0.130422}", "{'[6, 0, 6, 6, 0, 5, 1, 0, 7, 15, 0, 7, 0, 0, 2, 0, 0, 0]' : 0.129325}", "{'[6, 0, 6, 6, 0, 5, 1, 0, 7, 15, 0, 7, 0, 0, 2, 0, 0, 0]' : 0.129137}", "{'[6, 0, 6, 6, 0, 5, 1, 0, 7, 15, 0, 7, 0, 0, 2, 0, 0, 0]' : 0.129273}", "{'[6, 0, 6, 6, 0, 5, 1, 0, 7, 15, 0, 7, 0, 0, 2, 0, 0, 0]' : 0.131725}", "{'[6, 0, 6, 6, 0, 5, 1, 0, 7, 15, 0, 7, 0, 0, 2, 0, 0, 0]' : 0.131626}", "{'[6, 0, 6, 6, 0, 5, 1, 0, 7, 15, 0, 7, 0, 0, 2, 0, 0, 0]' : 0.129361}", "{'[6, 0, 6, 6, 0, 5, 1, 0, 7, 15, 0, 7, 0, 0, 2, 0, 0, 0]' : 0.129374}", "{'[6, 0, 6, 6, 0, 5, 1, 0, 7, 15, 0, 7, 0, 0, 2, 0, 0, 0]' : 0.129557}", "{'[6, 0, 6, 6, 0, 5, 1, 0, 7, 15, 0, 7, 0, 0, 2, 0, 0, 0]' : 0.130597}", "{'[6, 0, 6, 6, 0, 5, 1, 0, 7, 15, 0, 7, 0, 0, 2, 0, 0, 0]' : 0.132577}", "{'[6, 0, 6, 6, 0, 5, 1, 0, 7, 15, 0, 7, 0, 0, 2, 0, 0, 0]' : 0.133197}", "{'[6, 0, 6, 6, 0, 5, 1, 0, 7, 15, 0, 7, 0, 0, 2, 0, 0, 0]' : 0.13268}", "{'[6, 0, 6, 6, 0, 5, 1, 0, 7, 15, 0, 7, 0, 0, 2, 0, 0, 0]' : 0.132577}", "{'[6, 0, 6, 6, 0, 5, 1, 0, 7, 15, 0, 7, 0, 0, 2, 0, 0, 0]' : 0.132689}", "{'[6, 0, 6, 6, 0, 5, 1, 0, 7, 15, 0, 7, 0, 0, 2, 0, 0, 0]' : 0.132887}", "{'[6, 0, 6, 6, 0, 5, 1, 0, 7, 15, 0, 7, 0, 0, 2, 0, 0, 0]' : 0.132853}"]
returning from 'run': {'[6, 0, 6, 6, 0, 5, 1, 0, 7, 15, 0, 7, 0, 0, 2, 0, 0, 0]': ([0.129292, 0.129108, 0.132212, 0.132619, 0.132887, 0.132993, 0.132649, 0.132719, 0.132761, 0.133026, 0.132602, 0.13266, 0.132784, 0.130422, 0.129325, 0.129137, 0.129273, 0.131725, 0.131626, 0.129361, 0.129374, 0.129557, 0.130597, 0.132577, 0.133197, 0.13268, 0.132577, 0.132689, 0.132887, 0.132853], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 6, 6, 0, 5, 1, 0, 7, 15, 0, 7, 0, 0, 2, 0, 0, 0]': ([0.129292, 0.129108, 0.132212, 0.132619, 0.132887, 0.132993, 0.132649, 0.132719, 0.132761, 0.133026, 0.132602, 0.13266, 0.132784, 0.130422, 0.129325, 0.129137, 0.129273, 0.131725, 0.131626, 0.129361, 0.129374, 0.129557, 0.130597, 0.132577, 0.133197, 0.13268, 0.132577, 0.132689, 0.132887, 0.132853], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = jjj
Code stats:
        Number of loops: 	54
        Max loop nest depth: 	4
        Additions: 		757
        Multiplications: 	196
        Divisions: 		0
        Logical: 		0
        Reads: 			1700
        Writes: 		280
        Comparisons:		54
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest75.exe __orio_perftest75.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest75.exe  
Program Test Output: 
{'[0, 4, 4, 2, 2, 0, 0, 1, 15, 15, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.166354}
{'[0, 4, 4, 2, 2, 0, 0, 1, 15, 15, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.163905}
{'[0, 4, 4, 2, 2, 0, 0, 1, 15, 15, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.147446}
{'[0, 4, 4, 2, 2, 0, 0, 1, 15, 15, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.146981}
{'[0, 4, 4, 2, 2, 0, 0, 1, 15, 15, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.147397}
{'[0, 4, 4, 2, 2, 0, 0, 1, 15, 15, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.148057}
{'[0, 4, 4, 2, 2, 0, 0, 1, 15, 15, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.147407}
{'[0, 4, 4, 2, 2, 0, 0, 1, 15, 15, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.147297}
{'[0, 4, 4, 2, 2, 0, 0, 1, 15, 15, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.147281}
{'[0, 4, 4, 2, 2, 0, 0, 1, 15, 15, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.147415}
{'[0, 4, 4, 2, 2, 0, 0, 1, 15, 15, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.147803}
{'[0, 4, 4, 2, 2, 0, 0, 1, 15, 15, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.146559}
{'[0, 4, 4, 2, 2, 0, 0, 1, 15, 15, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.1481}
{'[0, 4, 4, 2, 2, 0, 0, 1, 15, 15, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.14766}
{'[0, 4, 4, 2, 2, 0, 0, 1, 15, 15, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.148009}
{'[0, 4, 4, 2, 2, 0, 0, 1, 15, 15, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.146739}
{'[0, 4, 4, 2, 2, 0, 0, 1, 15, 15, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.147139}
{'[0, 4, 4, 2, 2, 0, 0, 1, 15, 15, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.148695}
{'[0, 4, 4, 2, 2, 0, 0, 1, 15, 15, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.147246}
{'[0, 4, 4, 2, 2, 0, 0, 1, 15, 15, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.147095}
{'[0, 4, 4, 2, 2, 0, 0, 1, 15, 15, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.14701}
{'[0, 4, 4, 2, 2, 0, 0, 1, 15, 15, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.147778}
{'[0, 4, 4, 2, 2, 0, 0, 1, 15, 15, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.147347}
{'[0, 4, 4, 2, 2, 0, 0, 1, 15, 15, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.147137}
{'[0, 4, 4, 2, 2, 0, 0, 1, 15, 15, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.147507}
{'[0, 4, 4, 2, 2, 0, 0, 1, 15, 15, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.147639}
{'[0, 4, 4, 2, 2, 0, 0, 1, 15, 15, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.147512}
{'[0, 4, 4, 2, 2, 0, 0, 1, 15, 15, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.146783}
{'[0, 4, 4, 2, 2, 0, 0, 1, 15, 15, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.148251}
{'[0, 4, 4, 2, 2, 0, 0, 1, 15, 15, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.147162}

out:
 ["{'[0, 4, 4, 2, 2, 0, 0, 1, 15, 15, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.166354}", "{'[0, 4, 4, 2, 2, 0, 0, 1, 15, 15, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.163905}", "{'[0, 4, 4, 2, 2, 0, 0, 1, 15, 15, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.147446}", "{'[0, 4, 4, 2, 2, 0, 0, 1, 15, 15, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.146981}", "{'[0, 4, 4, 2, 2, 0, 0, 1, 15, 15, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.147397}", "{'[0, 4, 4, 2, 2, 0, 0, 1, 15, 15, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.148057}", "{'[0, 4, 4, 2, 2, 0, 0, 1, 15, 15, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.147407}", "{'[0, 4, 4, 2, 2, 0, 0, 1, 15, 15, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.147297}", "{'[0, 4, 4, 2, 2, 0, 0, 1, 15, 15, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.147281}", "{'[0, 4, 4, 2, 2, 0, 0, 1, 15, 15, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.147415}", "{'[0, 4, 4, 2, 2, 0, 0, 1, 15, 15, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.147803}", "{'[0, 4, 4, 2, 2, 0, 0, 1, 15, 15, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.146559}", "{'[0, 4, 4, 2, 2, 0, 0, 1, 15, 15, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.1481}", "{'[0, 4, 4, 2, 2, 0, 0, 1, 15, 15, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.14766}", "{'[0, 4, 4, 2, 2, 0, 0, 1, 15, 15, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.148009}", "{'[0, 4, 4, 2, 2, 0, 0, 1, 15, 15, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.146739}", "{'[0, 4, 4, 2, 2, 0, 0, 1, 15, 15, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.147139}", "{'[0, 4, 4, 2, 2, 0, 0, 1, 15, 15, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.148695}", "{'[0, 4, 4, 2, 2, 0, 0, 1, 15, 15, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.147246}", "{'[0, 4, 4, 2, 2, 0, 0, 1, 15, 15, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.147095}", "{'[0, 4, 4, 2, 2, 0, 0, 1, 15, 15, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.14701}", "{'[0, 4, 4, 2, 2, 0, 0, 1, 15, 15, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.147778}", "{'[0, 4, 4, 2, 2, 0, 0, 1, 15, 15, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.147347}", "{'[0, 4, 4, 2, 2, 0, 0, 1, 15, 15, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.147137}", "{'[0, 4, 4, 2, 2, 0, 0, 1, 15, 15, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.147507}", "{'[0, 4, 4, 2, 2, 0, 0, 1, 15, 15, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.147639}", "{'[0, 4, 4, 2, 2, 0, 0, 1, 15, 15, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.147512}", "{'[0, 4, 4, 2, 2, 0, 0, 1, 15, 15, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.146783}", "{'[0, 4, 4, 2, 2, 0, 0, 1, 15, 15, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.148251}", "{'[0, 4, 4, 2, 2, 0, 0, 1, 15, 15, 0, 0, 2, 0, 0, 0, 1, 0]' : 0.147162}"]
returning from 'run': {'[0, 4, 4, 2, 2, 0, 0, 1, 15, 15, 0, 0, 2, 0, 0, 0, 1, 0]': ([0.166354, 0.163905, 0.147446, 0.146981, 0.147397, 0.148057, 0.147407, 0.147297, 0.147281, 0.147415, 0.147803, 0.146559, 0.1481, 0.14766, 0.148009, 0.146739, 0.147139, 0.148695, 0.147246, 0.147095, 0.14701, 0.147778, 0.147347, 0.147137, 0.147507, 0.147639, 0.147512, 0.146783, 0.148251, 0.147162], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 4, 4, 2, 2, 0, 0, 1, 15, 15, 0, 0, 2, 0, 0, 0, 1, 0]': ([0.166354, 0.163905, 0.147446, 0.146981, 0.147397, 0.148057, 0.147407, 0.147297, 0.147281, 0.147415, 0.147803, 0.146559, 0.1481, 0.14766, 0.148009, 0.146739, 0.147139, 0.148695, 0.147246, 0.147095, 0.14701, 0.147778, 0.147347, 0.147137, 0.147507, 0.147639, 0.147512, 0.146783, 0.148251, 0.147162], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	6
        Additions: 		4195
        Multiplications: 	1258
        Divisions: 		0
        Logical: 		0
        Reads: 			6518
        Writes: 		713
        Comparisons:		20
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest76.exe __orio_perftest76.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest76.exe  
Program Test Output: 
{'[3, 6, 4, 3, 0, 4, 0, 0, 25, 15, 0, 26, 0, 1, 0, 0, 0, 0]' : 0.129784}
{'[3, 6, 4, 3, 0, 4, 0, 0, 25, 15, 0, 26, 0, 1, 0, 0, 0, 0]' : 0.129761}
{'[3, 6, 4, 3, 0, 4, 0, 0, 25, 15, 0, 26, 0, 1, 0, 0, 0, 0]' : 0.129608}
{'[3, 6, 4, 3, 0, 4, 0, 0, 25, 15, 0, 26, 0, 1, 0, 0, 0, 0]' : 0.129793}
{'[3, 6, 4, 3, 0, 4, 0, 0, 25, 15, 0, 26, 0, 1, 0, 0, 0, 0]' : 0.129649}
{'[3, 6, 4, 3, 0, 4, 0, 0, 25, 15, 0, 26, 0, 1, 0, 0, 0, 0]' : 0.127383}
{'[3, 6, 4, 3, 0, 4, 0, 0, 25, 15, 0, 26, 0, 1, 0, 0, 0, 0]' : 0.126248}
{'[3, 6, 4, 3, 0, 4, 0, 0, 25, 15, 0, 26, 0, 1, 0, 0, 0, 0]' : 0.126166}
{'[3, 6, 4, 3, 0, 4, 0, 0, 25, 15, 0, 26, 0, 1, 0, 0, 0, 0]' : 0.126538}
{'[3, 6, 4, 3, 0, 4, 0, 0, 25, 15, 0, 26, 0, 1, 0, 0, 0, 0]' : 0.126798}
{'[3, 6, 4, 3, 0, 4, 0, 0, 25, 15, 0, 26, 0, 1, 0, 0, 0, 0]' : 0.126038}
{'[3, 6, 4, 3, 0, 4, 0, 0, 25, 15, 0, 26, 0, 1, 0, 0, 0, 0]' : 0.126335}
{'[3, 6, 4, 3, 0, 4, 0, 0, 25, 15, 0, 26, 0, 1, 0, 0, 0, 0]' : 0.126284}
{'[3, 6, 4, 3, 0, 4, 0, 0, 25, 15, 0, 26, 0, 1, 0, 0, 0, 0]' : 0.12918}
{'[3, 6, 4, 3, 0, 4, 0, 0, 25, 15, 0, 26, 0, 1, 0, 0, 0, 0]' : 0.126127}
{'[3, 6, 4, 3, 0, 4, 0, 0, 25, 15, 0, 26, 0, 1, 0, 0, 0, 0]' : 0.126171}
{'[3, 6, 4, 3, 0, 4, 0, 0, 25, 15, 0, 26, 0, 1, 0, 0, 0, 0]' : 0.126618}
{'[3, 6, 4, 3, 0, 4, 0, 0, 25, 15, 0, 26, 0, 1, 0, 0, 0, 0]' : 0.126744}
{'[3, 6, 4, 3, 0, 4, 0, 0, 25, 15, 0, 26, 0, 1, 0, 0, 0, 0]' : 0.126179}
{'[3, 6, 4, 3, 0, 4, 0, 0, 25, 15, 0, 26, 0, 1, 0, 0, 0, 0]' : 0.126494}
{'[3, 6, 4, 3, 0, 4, 0, 0, 25, 15, 0, 26, 0, 1, 0, 0, 0, 0]' : 0.126532}
{'[3, 6, 4, 3, 0, 4, 0, 0, 25, 15, 0, 26, 0, 1, 0, 0, 0, 0]' : 0.125989}
{'[3, 6, 4, 3, 0, 4, 0, 0, 25, 15, 0, 26, 0, 1, 0, 0, 0, 0]' : 0.126134}
{'[3, 6, 4, 3, 0, 4, 0, 0, 25, 15, 0, 26, 0, 1, 0, 0, 0, 0]' : 0.126466}
{'[3, 6, 4, 3, 0, 4, 0, 0, 25, 15, 0, 26, 0, 1, 0, 0, 0, 0]' : 0.126781}
{'[3, 6, 4, 3, 0, 4, 0, 0, 25, 15, 0, 26, 0, 1, 0, 0, 0, 0]' : 0.126678}
{'[3, 6, 4, 3, 0, 4, 0, 0, 25, 15, 0, 26, 0, 1, 0, 0, 0, 0]' : 0.12657}
{'[3, 6, 4, 3, 0, 4, 0, 0, 25, 15, 0, 26, 0, 1, 0, 0, 0, 0]' : 0.126486}
{'[3, 6, 4, 3, 0, 4, 0, 0, 25, 15, 0, 26, 0, 1, 0, 0, 0, 0]' : 0.126603}
{'[3, 6, 4, 3, 0, 4, 0, 0, 25, 15, 0, 26, 0, 1, 0, 0, 0, 0]' : 0.128229}

out:
 ["{'[3, 6, 4, 3, 0, 4, 0, 0, 25, 15, 0, 26, 0, 1, 0, 0, 0, 0]' : 0.129784}", "{'[3, 6, 4, 3, 0, 4, 0, 0, 25, 15, 0, 26, 0, 1, 0, 0, 0, 0]' : 0.129761}", "{'[3, 6, 4, 3, 0, 4, 0, 0, 25, 15, 0, 26, 0, 1, 0, 0, 0, 0]' : 0.129608}", "{'[3, 6, 4, 3, 0, 4, 0, 0, 25, 15, 0, 26, 0, 1, 0, 0, 0, 0]' : 0.129793}", "{'[3, 6, 4, 3, 0, 4, 0, 0, 25, 15, 0, 26, 0, 1, 0, 0, 0, 0]' : 0.129649}", "{'[3, 6, 4, 3, 0, 4, 0, 0, 25, 15, 0, 26, 0, 1, 0, 0, 0, 0]' : 0.127383}", "{'[3, 6, 4, 3, 0, 4, 0, 0, 25, 15, 0, 26, 0, 1, 0, 0, 0, 0]' : 0.126248}", "{'[3, 6, 4, 3, 0, 4, 0, 0, 25, 15, 0, 26, 0, 1, 0, 0, 0, 0]' : 0.126166}", "{'[3, 6, 4, 3, 0, 4, 0, 0, 25, 15, 0, 26, 0, 1, 0, 0, 0, 0]' : 0.126538}", "{'[3, 6, 4, 3, 0, 4, 0, 0, 25, 15, 0, 26, 0, 1, 0, 0, 0, 0]' : 0.126798}", "{'[3, 6, 4, 3, 0, 4, 0, 0, 25, 15, 0, 26, 0, 1, 0, 0, 0, 0]' : 0.126038}", "{'[3, 6, 4, 3, 0, 4, 0, 0, 25, 15, 0, 26, 0, 1, 0, 0, 0, 0]' : 0.126335}", "{'[3, 6, 4, 3, 0, 4, 0, 0, 25, 15, 0, 26, 0, 1, 0, 0, 0, 0]' : 0.126284}", "{'[3, 6, 4, 3, 0, 4, 0, 0, 25, 15, 0, 26, 0, 1, 0, 0, 0, 0]' : 0.12918}", "{'[3, 6, 4, 3, 0, 4, 0, 0, 25, 15, 0, 26, 0, 1, 0, 0, 0, 0]' : 0.126127}", "{'[3, 6, 4, 3, 0, 4, 0, 0, 25, 15, 0, 26, 0, 1, 0, 0, 0, 0]' : 0.126171}", "{'[3, 6, 4, 3, 0, 4, 0, 0, 25, 15, 0, 26, 0, 1, 0, 0, 0, 0]' : 0.126618}", "{'[3, 6, 4, 3, 0, 4, 0, 0, 25, 15, 0, 26, 0, 1, 0, 0, 0, 0]' : 0.126744}", "{'[3, 6, 4, 3, 0, 4, 0, 0, 25, 15, 0, 26, 0, 1, 0, 0, 0, 0]' : 0.126179}", "{'[3, 6, 4, 3, 0, 4, 0, 0, 25, 15, 0, 26, 0, 1, 0, 0, 0, 0]' : 0.126494}", "{'[3, 6, 4, 3, 0, 4, 0, 0, 25, 15, 0, 26, 0, 1, 0, 0, 0, 0]' : 0.126532}", "{'[3, 6, 4, 3, 0, 4, 0, 0, 25, 15, 0, 26, 0, 1, 0, 0, 0, 0]' : 0.125989}", "{'[3, 6, 4, 3, 0, 4, 0, 0, 25, 15, 0, 26, 0, 1, 0, 0, 0, 0]' : 0.126134}", "{'[3, 6, 4, 3, 0, 4, 0, 0, 25, 15, 0, 26, 0, 1, 0, 0, 0, 0]' : 0.126466}", "{'[3, 6, 4, 3, 0, 4, 0, 0, 25, 15, 0, 26, 0, 1, 0, 0, 0, 0]' : 0.126781}", "{'[3, 6, 4, 3, 0, 4, 0, 0, 25, 15, 0, 26, 0, 1, 0, 0, 0, 0]' : 0.126678}", "{'[3, 6, 4, 3, 0, 4, 0, 0, 25, 15, 0, 26, 0, 1, 0, 0, 0, 0]' : 0.12657}", "{'[3, 6, 4, 3, 0, 4, 0, 0, 25, 15, 0, 26, 0, 1, 0, 0, 0, 0]' : 0.126486}", "{'[3, 6, 4, 3, 0, 4, 0, 0, 25, 15, 0, 26, 0, 1, 0, 0, 0, 0]' : 0.126603}", "{'[3, 6, 4, 3, 0, 4, 0, 0, 25, 15, 0, 26, 0, 1, 0, 0, 0, 0]' : 0.128229}"]
returning from 'run': {'[3, 6, 4, 3, 0, 4, 0, 0, 25, 15, 0, 26, 0, 1, 0, 0, 0, 0]': ([0.129784, 0.129761, 0.129608, 0.129793, 0.129649, 0.127383, 0.126248, 0.126166, 0.126538, 0.126798, 0.126038, 0.126335, 0.126284, 0.12918, 0.126127, 0.126171, 0.126618, 0.126744, 0.126179, 0.126494, 0.126532, 0.125989, 0.126134, 0.126466, 0.126781, 0.126678, 0.12657, 0.126486, 0.126603, 0.128229], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 6, 4, 3, 0, 4, 0, 0, 25, 15, 0, 26, 0, 1, 0, 0, 0, 0]': ([0.129784, 0.129761, 0.129608, 0.129793, 0.129649, 0.127383, 0.126248, 0.126166, 0.126538, 0.126798, 0.126038, 0.126335, 0.126284, 0.12918, 0.126127, 0.126171, 0.126618, 0.126744, 0.126179, 0.126494, 0.126532, 0.125989, 0.126134, 0.126466, 0.126781, 0.126678, 0.12657, 0.126486, 0.126603, 0.128229], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		1764
        Multiplications: 	448
        Divisions: 		0
        Logical: 		0
        Reads: 			2773
        Writes: 		262
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest77.exe __orio_perftest77.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest77.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest77.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest77.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest77.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	60
        Max loop nest depth: 	5
        Additions: 		2647
        Multiplications: 	750
        Divisions: 		0
        Logical: 		0
        Reads: 			4410
        Writes: 		585
        Comparisons:		60
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest78.exe __orio_perftest78.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest78.exe  
Program Test Output: 
{'[0, 5, 2, 2, 6, 5, 0, 0, 7, 15, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.129947}
{'[0, 5, 2, 2, 6, 5, 0, 0, 7, 15, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.129855}
{'[0, 5, 2, 2, 6, 5, 0, 0, 7, 15, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.129828}
{'[0, 5, 2, 2, 6, 5, 0, 0, 7, 15, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.126444}
{'[0, 5, 2, 2, 6, 5, 0, 0, 7, 15, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.115364}
{'[0, 5, 2, 2, 6, 5, 0, 0, 7, 15, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.115644}
{'[0, 5, 2, 2, 6, 5, 0, 0, 7, 15, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.118095}
{'[0, 5, 2, 2, 6, 5, 0, 0, 7, 15, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.118175}
{'[0, 5, 2, 2, 6, 5, 0, 0, 7, 15, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.118289}
{'[0, 5, 2, 2, 6, 5, 0, 0, 7, 15, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.1182}
{'[0, 5, 2, 2, 6, 5, 0, 0, 7, 15, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.11828}
{'[0, 5, 2, 2, 6, 5, 0, 0, 7, 15, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.118431}
{'[0, 5, 2, 2, 6, 5, 0, 0, 7, 15, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.118269}
{'[0, 5, 2, 2, 6, 5, 0, 0, 7, 15, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.118367}
{'[0, 5, 2, 2, 6, 5, 0, 0, 7, 15, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.118533}
{'[0, 5, 2, 2, 6, 5, 0, 0, 7, 15, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.118274}
{'[0, 5, 2, 2, 6, 5, 0, 0, 7, 15, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.11815}
{'[0, 5, 2, 2, 6, 5, 0, 0, 7, 15, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.11592}
{'[0, 5, 2, 2, 6, 5, 0, 0, 7, 15, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.115731}
{'[0, 5, 2, 2, 6, 5, 0, 0, 7, 15, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.116039}
{'[0, 5, 2, 2, 6, 5, 0, 0, 7, 15, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.11581}
{'[0, 5, 2, 2, 6, 5, 0, 0, 7, 15, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.115933}
{'[0, 5, 2, 2, 6, 5, 0, 0, 7, 15, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.115732}
{'[0, 5, 2, 2, 6, 5, 0, 0, 7, 15, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.116986}
{'[0, 5, 2, 2, 6, 5, 0, 0, 7, 15, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.118395}
{'[0, 5, 2, 2, 6, 5, 0, 0, 7, 15, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.118179}
{'[0, 5, 2, 2, 6, 5, 0, 0, 7, 15, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.115905}
{'[0, 5, 2, 2, 6, 5, 0, 0, 7, 15, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.115504}
{'[0, 5, 2, 2, 6, 5, 0, 0, 7, 15, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.115803}
{'[0, 5, 2, 2, 6, 5, 0, 0, 7, 15, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.115855}

out:
 ["{'[0, 5, 2, 2, 6, 5, 0, 0, 7, 15, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.129947}", "{'[0, 5, 2, 2, 6, 5, 0, 0, 7, 15, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.129855}", "{'[0, 5, 2, 2, 6, 5, 0, 0, 7, 15, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.129828}", "{'[0, 5, 2, 2, 6, 5, 0, 0, 7, 15, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.126444}", "{'[0, 5, 2, 2, 6, 5, 0, 0, 7, 15, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.115364}", "{'[0, 5, 2, 2, 6, 5, 0, 0, 7, 15, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.115644}", "{'[0, 5, 2, 2, 6, 5, 0, 0, 7, 15, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.118095}", "{'[0, 5, 2, 2, 6, 5, 0, 0, 7, 15, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.118175}", "{'[0, 5, 2, 2, 6, 5, 0, 0, 7, 15, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.118289}", "{'[0, 5, 2, 2, 6, 5, 0, 0, 7, 15, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.1182}", "{'[0, 5, 2, 2, 6, 5, 0, 0, 7, 15, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.11828}", "{'[0, 5, 2, 2, 6, 5, 0, 0, 7, 15, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.118431}", "{'[0, 5, 2, 2, 6, 5, 0, 0, 7, 15, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.118269}", "{'[0, 5, 2, 2, 6, 5, 0, 0, 7, 15, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.118367}", "{'[0, 5, 2, 2, 6, 5, 0, 0, 7, 15, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.118533}", "{'[0, 5, 2, 2, 6, 5, 0, 0, 7, 15, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.118274}", "{'[0, 5, 2, 2, 6, 5, 0, 0, 7, 15, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.11815}", "{'[0, 5, 2, 2, 6, 5, 0, 0, 7, 15, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.11592}", "{'[0, 5, 2, 2, 6, 5, 0, 0, 7, 15, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.115731}", "{'[0, 5, 2, 2, 6, 5, 0, 0, 7, 15, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.116039}", "{'[0, 5, 2, 2, 6, 5, 0, 0, 7, 15, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.11581}", "{'[0, 5, 2, 2, 6, 5, 0, 0, 7, 15, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.115933}", "{'[0, 5, 2, 2, 6, 5, 0, 0, 7, 15, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.115732}", "{'[0, 5, 2, 2, 6, 5, 0, 0, 7, 15, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.116986}", "{'[0, 5, 2, 2, 6, 5, 0, 0, 7, 15, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.118395}", "{'[0, 5, 2, 2, 6, 5, 0, 0, 7, 15, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.118179}", "{'[0, 5, 2, 2, 6, 5, 0, 0, 7, 15, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.115905}", "{'[0, 5, 2, 2, 6, 5, 0, 0, 7, 15, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.115504}", "{'[0, 5, 2, 2, 6, 5, 0, 0, 7, 15, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.115803}", "{'[0, 5, 2, 2, 6, 5, 0, 0, 7, 15, 0, 4, 1, 0, 1, 0, 1, 1]' : 0.115855}"]
returning from 'run': {'[0, 5, 2, 2, 6, 5, 0, 0, 7, 15, 0, 4, 1, 0, 1, 0, 1, 1]': ([0.129947, 0.129855, 0.129828, 0.126444, 0.115364, 0.115644, 0.118095, 0.118175, 0.118289, 0.1182, 0.11828, 0.118431, 0.118269, 0.118367, 0.118533, 0.118274, 0.11815, 0.11592, 0.115731, 0.116039, 0.11581, 0.115933, 0.115732, 0.116986, 0.118395, 0.118179, 0.115905, 0.115504, 0.115803, 0.115855], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 5, 2, 2, 6, 5, 0, 0, 7, 15, 0, 4, 1, 0, 1, 0, 1, 1]': ([0.129947, 0.129855, 0.129828, 0.126444, 0.115364, 0.115644, 0.118095, 0.118175, 0.118289, 0.1182, 0.11828, 0.118431, 0.118269, 0.118367, 0.118533, 0.118274, 0.11815, 0.11592, 0.115731, 0.116039, 0.11581, 0.115933, 0.115732, 0.116986, 0.118395, 0.118179, 0.115905, 0.115504, 0.115803, 0.115855], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	27
        Max loop nest depth: 	6
        Additions: 		4489
        Multiplications: 	1350
        Divisions: 		0
        Logical: 		0
        Reads: 			6977
        Writes: 		748
        Comparisons:		27
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest79.exe __orio_perftest79.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest79.exe  
Program Test Output: 
{'[6, 4, 6, 6, 6, 5, 0, 0, 0, 15, 0, 24, 1, 0, 0, 0, 0, 0]' : 0.138577}
{'[6, 4, 6, 6, 6, 5, 0, 0, 0, 15, 0, 24, 1, 0, 0, 0, 0, 0]' : 0.138662}
{'[6, 4, 6, 6, 6, 5, 0, 0, 0, 15, 0, 24, 1, 0, 0, 0, 0, 0]' : 0.138515}
{'[6, 4, 6, 6, 6, 5, 0, 0, 0, 15, 0, 24, 1, 0, 0, 0, 0, 0]' : 0.135108}
{'[6, 4, 6, 6, 6, 5, 0, 0, 0, 15, 0, 24, 1, 0, 0, 0, 0, 0]' : 0.120828}
{'[6, 4, 6, 6, 6, 5, 0, 0, 0, 15, 0, 24, 1, 0, 0, 0, 0, 0]' : 0.120744}
{'[6, 4, 6, 6, 6, 5, 0, 0, 0, 15, 0, 24, 1, 0, 0, 0, 0, 0]' : 0.120744}
{'[6, 4, 6, 6, 6, 5, 0, 0, 0, 15, 0, 24, 1, 0, 0, 0, 0, 0]' : 0.120657}
{'[6, 4, 6, 6, 6, 5, 0, 0, 0, 15, 0, 24, 1, 0, 0, 0, 0, 0]' : 0.120537}
{'[6, 4, 6, 6, 6, 5, 0, 0, 0, 15, 0, 24, 1, 0, 0, 0, 0, 0]' : 0.120842}
{'[6, 4, 6, 6, 6, 5, 0, 0, 0, 15, 0, 24, 1, 0, 0, 0, 0, 0]' : 0.121236}
{'[6, 4, 6, 6, 6, 5, 0, 0, 0, 15, 0, 24, 1, 0, 0, 0, 0, 0]' : 0.120657}
{'[6, 4, 6, 6, 6, 5, 0, 0, 0, 15, 0, 24, 1, 0, 0, 0, 0, 0]' : 0.121265}
{'[6, 4, 6, 6, 6, 5, 0, 0, 0, 15, 0, 24, 1, 0, 0, 0, 0, 0]' : 0.121204}
{'[6, 4, 6, 6, 6, 5, 0, 0, 0, 15, 0, 24, 1, 0, 0, 0, 0, 0]' : 0.121234}
{'[6, 4, 6, 6, 6, 5, 0, 0, 0, 15, 0, 24, 1, 0, 0, 0, 0, 0]' : 0.123071}
{'[6, 4, 6, 6, 6, 5, 0, 0, 0, 15, 0, 24, 1, 0, 0, 0, 0, 0]' : 0.124497}
{'[6, 4, 6, 6, 6, 5, 0, 0, 0, 15, 0, 24, 1, 0, 0, 0, 0, 0]' : 0.124458}
{'[6, 4, 6, 6, 6, 5, 0, 0, 0, 15, 0, 24, 1, 0, 0, 0, 0, 0]' : 0.12164}
{'[6, 4, 6, 6, 6, 5, 0, 0, 0, 15, 0, 24, 1, 0, 0, 0, 0, 0]' : 0.121496}
{'[6, 4, 6, 6, 6, 5, 0, 0, 0, 15, 0, 24, 1, 0, 0, 0, 0, 0]' : 0.121093}
{'[6, 4, 6, 6, 6, 5, 0, 0, 0, 15, 0, 24, 1, 0, 0, 0, 0, 0]' : 0.121137}
{'[6, 4, 6, 6, 6, 5, 0, 0, 0, 15, 0, 24, 1, 0, 0, 0, 0, 0]' : 0.121073}
{'[6, 4, 6, 6, 6, 5, 0, 0, 0, 15, 0, 24, 1, 0, 0, 0, 0, 0]' : 0.121386}
{'[6, 4, 6, 6, 6, 5, 0, 0, 0, 15, 0, 24, 1, 0, 0, 0, 0, 0]' : 0.121407}
{'[6, 4, 6, 6, 6, 5, 0, 0, 0, 15, 0, 24, 1, 0, 0, 0, 0, 0]' : 0.121098}
{'[6, 4, 6, 6, 6, 5, 0, 0, 0, 15, 0, 24, 1, 0, 0, 0, 0, 0]' : 0.121136}
{'[6, 4, 6, 6, 6, 5, 0, 0, 0, 15, 0, 24, 1, 0, 0, 0, 0, 0]' : 0.121718}
{'[6, 4, 6, 6, 6, 5, 0, 0, 0, 15, 0, 24, 1, 0, 0, 0, 0, 0]' : 0.124465}
{'[6, 4, 6, 6, 6, 5, 0, 0, 0, 15, 0, 24, 1, 0, 0, 0, 0, 0]' : 0.124521}

out:
 ["{'[6, 4, 6, 6, 6, 5, 0, 0, 0, 15, 0, 24, 1, 0, 0, 0, 0, 0]' : 0.138577}", "{'[6, 4, 6, 6, 6, 5, 0, 0, 0, 15, 0, 24, 1, 0, 0, 0, 0, 0]' : 0.138662}", "{'[6, 4, 6, 6, 6, 5, 0, 0, 0, 15, 0, 24, 1, 0, 0, 0, 0, 0]' : 0.138515}", "{'[6, 4, 6, 6, 6, 5, 0, 0, 0, 15, 0, 24, 1, 0, 0, 0, 0, 0]' : 0.135108}", "{'[6, 4, 6, 6, 6, 5, 0, 0, 0, 15, 0, 24, 1, 0, 0, 0, 0, 0]' : 0.120828}", "{'[6, 4, 6, 6, 6, 5, 0, 0, 0, 15, 0, 24, 1, 0, 0, 0, 0, 0]' : 0.120744}", "{'[6, 4, 6, 6, 6, 5, 0, 0, 0, 15, 0, 24, 1, 0, 0, 0, 0, 0]' : 0.120744}", "{'[6, 4, 6, 6, 6, 5, 0, 0, 0, 15, 0, 24, 1, 0, 0, 0, 0, 0]' : 0.120657}", "{'[6, 4, 6, 6, 6, 5, 0, 0, 0, 15, 0, 24, 1, 0, 0, 0, 0, 0]' : 0.120537}", "{'[6, 4, 6, 6, 6, 5, 0, 0, 0, 15, 0, 24, 1, 0, 0, 0, 0, 0]' : 0.120842}", "{'[6, 4, 6, 6, 6, 5, 0, 0, 0, 15, 0, 24, 1, 0, 0, 0, 0, 0]' : 0.121236}", "{'[6, 4, 6, 6, 6, 5, 0, 0, 0, 15, 0, 24, 1, 0, 0, 0, 0, 0]' : 0.120657}", "{'[6, 4, 6, 6, 6, 5, 0, 0, 0, 15, 0, 24, 1, 0, 0, 0, 0, 0]' : 0.121265}", "{'[6, 4, 6, 6, 6, 5, 0, 0, 0, 15, 0, 24, 1, 0, 0, 0, 0, 0]' : 0.121204}", "{'[6, 4, 6, 6, 6, 5, 0, 0, 0, 15, 0, 24, 1, 0, 0, 0, 0, 0]' : 0.121234}", "{'[6, 4, 6, 6, 6, 5, 0, 0, 0, 15, 0, 24, 1, 0, 0, 0, 0, 0]' : 0.123071}", "{'[6, 4, 6, 6, 6, 5, 0, 0, 0, 15, 0, 24, 1, 0, 0, 0, 0, 0]' : 0.124497}", "{'[6, 4, 6, 6, 6, 5, 0, 0, 0, 15, 0, 24, 1, 0, 0, 0, 0, 0]' : 0.124458}", "{'[6, 4, 6, 6, 6, 5, 0, 0, 0, 15, 0, 24, 1, 0, 0, 0, 0, 0]' : 0.12164}", "{'[6, 4, 6, 6, 6, 5, 0, 0, 0, 15, 0, 24, 1, 0, 0, 0, 0, 0]' : 0.121496}", "{'[6, 4, 6, 6, 6, 5, 0, 0, 0, 15, 0, 24, 1, 0, 0, 0, 0, 0]' : 0.121093}", "{'[6, 4, 6, 6, 6, 5, 0, 0, 0, 15, 0, 24, 1, 0, 0, 0, 0, 0]' : 0.121137}", "{'[6, 4, 6, 6, 6, 5, 0, 0, 0, 15, 0, 24, 1, 0, 0, 0, 0, 0]' : 0.121073}", "{'[6, 4, 6, 6, 6, 5, 0, 0, 0, 15, 0, 24, 1, 0, 0, 0, 0, 0]' : 0.121386}", "{'[6, 4, 6, 6, 6, 5, 0, 0, 0, 15, 0, 24, 1, 0, 0, 0, 0, 0]' : 0.121407}", "{'[6, 4, 6, 6, 6, 5, 0, 0, 0, 15, 0, 24, 1, 0, 0, 0, 0, 0]' : 0.121098}", "{'[6, 4, 6, 6, 6, 5, 0, 0, 0, 15, 0, 24, 1, 0, 0, 0, 0, 0]' : 0.121136}", "{'[6, 4, 6, 6, 6, 5, 0, 0, 0, 15, 0, 24, 1, 0, 0, 0, 0, 0]' : 0.121718}", "{'[6, 4, 6, 6, 6, 5, 0, 0, 0, 15, 0, 24, 1, 0, 0, 0, 0, 0]' : 0.124465}", "{'[6, 4, 6, 6, 6, 5, 0, 0, 0, 15, 0, 24, 1, 0, 0, 0, 0, 0]' : 0.124521}"]
returning from 'run': {'[6, 4, 6, 6, 6, 5, 0, 0, 0, 15, 0, 24, 1, 0, 0, 0, 0, 0]': ([0.138577, 0.138662, 0.138515, 0.135108, 0.120828, 0.120744, 0.120744, 0.120657, 0.120537, 0.120842, 0.121236, 0.120657, 0.121265, 0.121204, 0.121234, 0.123071, 0.124497, 0.124458, 0.12164, 0.121496, 0.121093, 0.121137, 0.121073, 0.121386, 0.121407, 0.121098, 0.121136, 0.121718, 0.124465, 0.124521], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 4, 6, 6, 6, 5, 0, 0, 0, 15, 0, 24, 1, 0, 0, 0, 0, 0]': ([0.138577, 0.138662, 0.138515, 0.135108, 0.120828, 0.120744, 0.120744, 0.120657, 0.120537, 0.120842, 0.121236, 0.120657, 0.121265, 0.121204, 0.121234, 0.123071, 0.124497, 0.124458, 0.12164, 0.121496, 0.121093, 0.121137, 0.121073, 0.121386, 0.121407, 0.121098, 0.121136, 0.121718, 0.124465, 0.124521], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	35
        Max loop nest depth: 	6
        Additions: 		4350
        Multiplications: 	1122
        Divisions: 		0
        Logical: 		0
        Reads: 			6558
        Writes: 		689
        Comparisons:		35
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest80.exe __orio_perftest80.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest80.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest80.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest80.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest80.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	51
        Max loop nest depth: 	6
        Additions: 		5004
        Multiplications: 	1122
        Divisions: 		0
        Logical: 		0
        Reads: 			7263
        Writes: 		720
        Comparisons:		51
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest81.exe __orio_perftest81.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest81.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest81.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest81.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest81.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	75
        Max loop nest depth: 	5
        Additions: 		1950
        Multiplications: 	450
        Divisions: 		0
        Logical: 		0
        Reads: 			3393
        Writes: 		484
        Comparisons:		75
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest82.exe __orio_perftest82.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest82.exe  
Program Test Output: 
{'[6, 6, 4, 0, 0, 6, 1, 1, 26, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.101114}
{'[6, 6, 4, 0, 0, 6, 1, 1, 26, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.100639}
{'[6, 6, 4, 0, 0, 6, 1, 1, 26, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.098644}
{'[6, 6, 4, 0, 0, 6, 1, 1, 26, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.097708}
{'[6, 6, 4, 0, 0, 6, 1, 1, 26, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.102392}
{'[6, 6, 4, 0, 0, 6, 1, 1, 26, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.101495}
{'[6, 6, 4, 0, 0, 6, 1, 1, 26, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.100049}
{'[6, 6, 4, 0, 0, 6, 1, 1, 26, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.10039}
{'[6, 6, 4, 0, 0, 6, 1, 1, 26, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.100409}
{'[6, 6, 4, 0, 0, 6, 1, 1, 26, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.100429}
{'[6, 6, 4, 0, 0, 6, 1, 1, 26, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.099967}
{'[6, 6, 4, 0, 0, 6, 1, 1, 26, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.100289}
{'[6, 6, 4, 0, 0, 6, 1, 1, 26, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.100159}
{'[6, 6, 4, 0, 0, 6, 1, 1, 26, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.100374}
{'[6, 6, 4, 0, 0, 6, 1, 1, 26, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.101617}
{'[6, 6, 4, 0, 0, 6, 1, 1, 26, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.099201}
{'[6, 6, 4, 0, 0, 6, 1, 1, 26, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.097914}
{'[6, 6, 4, 0, 0, 6, 1, 1, 26, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.0976889}
{'[6, 6, 4, 0, 0, 6, 1, 1, 26, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.0974262}
{'[6, 6, 4, 0, 0, 6, 1, 1, 26, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.100303}
{'[6, 6, 4, 0, 0, 6, 1, 1, 26, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.100209}
{'[6, 6, 4, 0, 0, 6, 1, 1, 26, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.100206}
{'[6, 6, 4, 0, 0, 6, 1, 1, 26, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.0999911}
{'[6, 6, 4, 0, 0, 6, 1, 1, 26, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.10011}
{'[6, 6, 4, 0, 0, 6, 1, 1, 26, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.101403}
{'[6, 6, 4, 0, 0, 6, 1, 1, 26, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.103223}
{'[6, 6, 4, 0, 0, 6, 1, 1, 26, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.0987329}
{'[6, 6, 4, 0, 0, 6, 1, 1, 26, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.097815}
{'[6, 6, 4, 0, 0, 6, 1, 1, 26, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.097708}
{'[6, 6, 4, 0, 0, 6, 1, 1, 26, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.100181}

out:
 ["{'[6, 6, 4, 0, 0, 6, 1, 1, 26, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.101114}", "{'[6, 6, 4, 0, 0, 6, 1, 1, 26, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.100639}", "{'[6, 6, 4, 0, 0, 6, 1, 1, 26, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.098644}", "{'[6, 6, 4, 0, 0, 6, 1, 1, 26, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.097708}", "{'[6, 6, 4, 0, 0, 6, 1, 1, 26, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.102392}", "{'[6, 6, 4, 0, 0, 6, 1, 1, 26, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.101495}", "{'[6, 6, 4, 0, 0, 6, 1, 1, 26, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.100049}", "{'[6, 6, 4, 0, 0, 6, 1, 1, 26, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.10039}", "{'[6, 6, 4, 0, 0, 6, 1, 1, 26, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.100409}", "{'[6, 6, 4, 0, 0, 6, 1, 1, 26, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.100429}", "{'[6, 6, 4, 0, 0, 6, 1, 1, 26, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.099967}", "{'[6, 6, 4, 0, 0, 6, 1, 1, 26, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.100289}", "{'[6, 6, 4, 0, 0, 6, 1, 1, 26, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.100159}", "{'[6, 6, 4, 0, 0, 6, 1, 1, 26, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.100374}", "{'[6, 6, 4, 0, 0, 6, 1, 1, 26, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.101617}", "{'[6, 6, 4, 0, 0, 6, 1, 1, 26, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.099201}", "{'[6, 6, 4, 0, 0, 6, 1, 1, 26, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.097914}", "{'[6, 6, 4, 0, 0, 6, 1, 1, 26, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.0976889}", "{'[6, 6, 4, 0, 0, 6, 1, 1, 26, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.0974262}", "{'[6, 6, 4, 0, 0, 6, 1, 1, 26, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.100303}", "{'[6, 6, 4, 0, 0, 6, 1, 1, 26, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.100209}", "{'[6, 6, 4, 0, 0, 6, 1, 1, 26, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.100206}", "{'[6, 6, 4, 0, 0, 6, 1, 1, 26, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.0999911}", "{'[6, 6, 4, 0, 0, 6, 1, 1, 26, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.10011}", "{'[6, 6, 4, 0, 0, 6, 1, 1, 26, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.101403}", "{'[6, 6, 4, 0, 0, 6, 1, 1, 26, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.103223}", "{'[6, 6, 4, 0, 0, 6, 1, 1, 26, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.0987329}", "{'[6, 6, 4, 0, 0, 6, 1, 1, 26, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.097815}", "{'[6, 6, 4, 0, 0, 6, 1, 1, 26, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.097708}", "{'[6, 6, 4, 0, 0, 6, 1, 1, 26, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.100181}"]
returning from 'run': {'[6, 6, 4, 0, 0, 6, 1, 1, 26, 15, 0, 0, 1, 1, 0, 0, 1, 1]': ([0.101114, 0.100639, 0.098644, 0.097708, 0.102392, 0.101495, 0.100049, 0.10039, 0.100409, 0.100429, 0.099967, 0.100289, 0.100159, 0.100374, 0.101617, 0.099201, 0.097914, 0.0976889, 0.0974262, 0.100303, 0.100209, 0.100206, 0.0999911, 0.10011, 0.101403, 0.103223, 0.0987329, 0.097815, 0.097708, 0.100181], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 4, 0, 0, 6, 1, 1, 26, 15, 0, 0, 1, 1, 0, 0, 1, 1]': ([0.101114, 0.100639, 0.098644, 0.097708, 0.102392, 0.101495, 0.100049, 0.10039, 0.100409, 0.100429, 0.099967, 0.100289, 0.100159, 0.100374, 0.101617, 0.099201, 0.097914, 0.0976889, 0.0974262, 0.100303, 0.100209, 0.100206, 0.0999911, 0.10011, 0.101403, 0.103223, 0.0987329, 0.097815, 0.097708, 0.100181], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	109
        Max loop nest depth: 	6
        Additions: 		14086
        Multiplications: 	3136
        Divisions: 		0
        Logical: 		0
        Reads: 			19964
        Writes: 		1892
        Comparisons:		109
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest83.exe __orio_perftest83.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest83.exe  
Program Test Output: 
{'[3, 0, 1, 6, 6, 3, 1, 1, 29, 15, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.191974}
{'[3, 0, 1, 6, 6, 3, 1, 1, 29, 15, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.191073}
{'[3, 0, 1, 6, 6, 3, 1, 1, 29, 15, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.191343}
{'[3, 0, 1, 6, 6, 3, 1, 1, 29, 15, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.191724}
{'[3, 0, 1, 6, 6, 3, 1, 1, 29, 15, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.190576}
{'[3, 0, 1, 6, 6, 3, 1, 1, 29, 15, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.192162}
{'[3, 0, 1, 6, 6, 3, 1, 1, 29, 15, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.191018}
{'[3, 0, 1, 6, 6, 3, 1, 1, 29, 15, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.194158}
{'[3, 0, 1, 6, 6, 3, 1, 1, 29, 15, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.190598}
{'[3, 0, 1, 6, 6, 3, 1, 1, 29, 15, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.192062}
{'[3, 0, 1, 6, 6, 3, 1, 1, 29, 15, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.190924}
{'[3, 0, 1, 6, 6, 3, 1, 1, 29, 15, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.191589}
{'[3, 0, 1, 6, 6, 3, 1, 1, 29, 15, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.191522}
{'[3, 0, 1, 6, 6, 3, 1, 1, 29, 15, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.190817}
{'[3, 0, 1, 6, 6, 3, 1, 1, 29, 15, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.193086}
{'[3, 0, 1, 6, 6, 3, 1, 1, 29, 15, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.191707}
{'[3, 0, 1, 6, 6, 3, 1, 1, 29, 15, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.191552}
{'[3, 0, 1, 6, 6, 3, 1, 1, 29, 15, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.191659}
{'[3, 0, 1, 6, 6, 3, 1, 1, 29, 15, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.19193}
{'[3, 0, 1, 6, 6, 3, 1, 1, 29, 15, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.191918}
{'[3, 0, 1, 6, 6, 3, 1, 1, 29, 15, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.190443}
{'[3, 0, 1, 6, 6, 3, 1, 1, 29, 15, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.192258}
{'[3, 0, 1, 6, 6, 3, 1, 1, 29, 15, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.19022}
{'[3, 0, 1, 6, 6, 3, 1, 1, 29, 15, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.19299}
{'[3, 0, 1, 6, 6, 3, 1, 1, 29, 15, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.190853}
{'[3, 0, 1, 6, 6, 3, 1, 1, 29, 15, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.191955}
{'[3, 0, 1, 6, 6, 3, 1, 1, 29, 15, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.191236}
{'[3, 0, 1, 6, 6, 3, 1, 1, 29, 15, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.191533}
{'[3, 0, 1, 6, 6, 3, 1, 1, 29, 15, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.191885}
{'[3, 0, 1, 6, 6, 3, 1, 1, 29, 15, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.189806}

out:
 ["{'[3, 0, 1, 6, 6, 3, 1, 1, 29, 15, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.191974}", "{'[3, 0, 1, 6, 6, 3, 1, 1, 29, 15, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.191073}", "{'[3, 0, 1, 6, 6, 3, 1, 1, 29, 15, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.191343}", "{'[3, 0, 1, 6, 6, 3, 1, 1, 29, 15, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.191724}", "{'[3, 0, 1, 6, 6, 3, 1, 1, 29, 15, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.190576}", "{'[3, 0, 1, 6, 6, 3, 1, 1, 29, 15, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.192162}", "{'[3, 0, 1, 6, 6, 3, 1, 1, 29, 15, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.191018}", "{'[3, 0, 1, 6, 6, 3, 1, 1, 29, 15, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.194158}", "{'[3, 0, 1, 6, 6, 3, 1, 1, 29, 15, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.190598}", "{'[3, 0, 1, 6, 6, 3, 1, 1, 29, 15, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.192062}", "{'[3, 0, 1, 6, 6, 3, 1, 1, 29, 15, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.190924}", "{'[3, 0, 1, 6, 6, 3, 1, 1, 29, 15, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.191589}", "{'[3, 0, 1, 6, 6, 3, 1, 1, 29, 15, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.191522}", "{'[3, 0, 1, 6, 6, 3, 1, 1, 29, 15, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.190817}", "{'[3, 0, 1, 6, 6, 3, 1, 1, 29, 15, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.193086}", "{'[3, 0, 1, 6, 6, 3, 1, 1, 29, 15, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.191707}", "{'[3, 0, 1, 6, 6, 3, 1, 1, 29, 15, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.191552}", "{'[3, 0, 1, 6, 6, 3, 1, 1, 29, 15, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.191659}", "{'[3, 0, 1, 6, 6, 3, 1, 1, 29, 15, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.19193}", "{'[3, 0, 1, 6, 6, 3, 1, 1, 29, 15, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.191918}", "{'[3, 0, 1, 6, 6, 3, 1, 1, 29, 15, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.190443}", "{'[3, 0, 1, 6, 6, 3, 1, 1, 29, 15, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.192258}", "{'[3, 0, 1, 6, 6, 3, 1, 1, 29, 15, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.19022}", "{'[3, 0, 1, 6, 6, 3, 1, 1, 29, 15, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.19299}", "{'[3, 0, 1, 6, 6, 3, 1, 1, 29, 15, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.190853}", "{'[3, 0, 1, 6, 6, 3, 1, 1, 29, 15, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.191955}", "{'[3, 0, 1, 6, 6, 3, 1, 1, 29, 15, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.191236}", "{'[3, 0, 1, 6, 6, 3, 1, 1, 29, 15, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.191533}", "{'[3, 0, 1, 6, 6, 3, 1, 1, 29, 15, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.191885}", "{'[3, 0, 1, 6, 6, 3, 1, 1, 29, 15, 0, 29, 2, 0, 0, 0, 1, 0]' : 0.189806}"]
returning from 'run': {'[3, 0, 1, 6, 6, 3, 1, 1, 29, 15, 0, 29, 2, 0, 0, 0, 1, 0]': ([0.191974, 0.191073, 0.191343, 0.191724, 0.190576, 0.192162, 0.191018, 0.194158, 0.190598, 0.192062, 0.190924, 0.191589, 0.191522, 0.190817, 0.193086, 0.191707, 0.191552, 0.191659, 0.19193, 0.191918, 0.190443, 0.192258, 0.19022, 0.19299, 0.190853, 0.191955, 0.191236, 0.191533, 0.191885, 0.189806], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 0, 1, 6, 6, 3, 1, 1, 29, 15, 0, 29, 2, 0, 0, 0, 1, 0]': ([0.191974, 0.191073, 0.191343, 0.191724, 0.190576, 0.192162, 0.191018, 0.194158, 0.190598, 0.192062, 0.190924, 0.191589, 0.191522, 0.190817, 0.193086, 0.191707, 0.191552, 0.191659, 0.19193, 0.191918, 0.190443, 0.192258, 0.19022, 0.19299, 0.190853, 0.191955, 0.191236, 0.191533, 0.191885, 0.189806], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = iii
Code stats:
        Number of loops: 	60
        Max loop nest depth: 	5
        Additions: 		525
        Multiplications: 	100
        Divisions: 		0
        Logical: 		0
        Reads: 			1248
        Writes: 		261
        Comparisons:		60
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest84.exe __orio_perftest84.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest84.exe  
Program Test Output: 
{'[6, 4, 5, 4, 6, 4, 0, 1, 29, 15, 0, 0, 1, 0, 0, 0, 0, 1]' : 0.109342}
{'[6, 4, 5, 4, 6, 4, 0, 1, 29, 15, 0, 0, 1, 0, 0, 0, 0, 1]' : 0.108989}
{'[6, 4, 5, 4, 6, 4, 0, 1, 29, 15, 0, 0, 1, 0, 0, 0, 0, 1]' : 0.108791}
{'[6, 4, 5, 4, 6, 4, 0, 1, 29, 15, 0, 0, 1, 0, 0, 0, 0, 1]' : 0.108864}
{'[6, 4, 5, 4, 6, 4, 0, 1, 29, 15, 0, 0, 1, 0, 0, 0, 0, 1]' : 0.104154}
{'[6, 4, 5, 4, 6, 4, 0, 1, 29, 15, 0, 0, 1, 0, 0, 0, 0, 1]' : 0.0974441}
{'[6, 4, 5, 4, 6, 4, 0, 1, 29, 15, 0, 0, 1, 0, 0, 0, 0, 1]' : 0.0954089}
{'[6, 4, 5, 4, 6, 4, 0, 1, 29, 15, 0, 0, 1, 0, 0, 0, 0, 1]' : 0.0950561}
{'[6, 4, 5, 4, 6, 4, 0, 1, 29, 15, 0, 0, 1, 0, 0, 0, 0, 1]' : 0.0952621}
{'[6, 4, 5, 4, 6, 4, 0, 1, 29, 15, 0, 0, 1, 0, 0, 0, 0, 1]' : 0.0952299}
{'[6, 4, 5, 4, 6, 4, 0, 1, 29, 15, 0, 0, 1, 0, 0, 0, 0, 1]' : 0.0967879}
{'[6, 4, 5, 4, 6, 4, 0, 1, 29, 15, 0, 0, 1, 0, 0, 0, 0, 1]' : 0.0974581}
{'[6, 4, 5, 4, 6, 4, 0, 1, 29, 15, 0, 0, 1, 0, 0, 0, 0, 1]' : 0.0972879}
{'[6, 4, 5, 4, 6, 4, 0, 1, 29, 15, 0, 0, 1, 0, 0, 0, 0, 1]' : 0.0972741}
{'[6, 4, 5, 4, 6, 4, 0, 1, 29, 15, 0, 0, 1, 0, 0, 0, 0, 1]' : 0.0973661}
{'[6, 4, 5, 4, 6, 4, 0, 1, 29, 15, 0, 0, 1, 0, 0, 0, 0, 1]' : 0.097409}
{'[6, 4, 5, 4, 6, 4, 0, 1, 29, 15, 0, 0, 1, 0, 0, 0, 0, 1]' : 0.09727}
{'[6, 4, 5, 4, 6, 4, 0, 1, 29, 15, 0, 0, 1, 0, 0, 0, 0, 1]' : 0.097271}
{'[6, 4, 5, 4, 6, 4, 0, 1, 29, 15, 0, 0, 1, 0, 0, 0, 0, 1]' : 0.0956581}
{'[6, 4, 5, 4, 6, 4, 0, 1, 29, 15, 0, 0, 1, 0, 0, 0, 0, 1]' : 0.09519}
{'[6, 4, 5, 4, 6, 4, 0, 1, 29, 15, 0, 0, 1, 0, 0, 0, 0, 1]' : 0.095962}
{'[6, 4, 5, 4, 6, 4, 0, 1, 29, 15, 0, 0, 1, 0, 0, 0, 0, 1]' : 0.0963528}
{'[6, 4, 5, 4, 6, 4, 0, 1, 29, 15, 0, 0, 1, 0, 0, 0, 0, 1]' : 0.0951178}
{'[6, 4, 5, 4, 6, 4, 0, 1, 29, 15, 0, 0, 1, 0, 0, 0, 0, 1]' : 0.095124}
{'[6, 4, 5, 4, 6, 4, 0, 1, 29, 15, 0, 0, 1, 0, 0, 0, 0, 1]' : 0.094974}
{'[6, 4, 5, 4, 6, 4, 0, 1, 29, 15, 0, 0, 1, 0, 0, 0, 0, 1]' : 0.0952601}
{'[6, 4, 5, 4, 6, 4, 0, 1, 29, 15, 0, 0, 1, 0, 0, 0, 0, 1]' : 0.0959289}
{'[6, 4, 5, 4, 6, 4, 0, 1, 29, 15, 0, 0, 1, 0, 0, 0, 0, 1]' : 0.0952401}
{'[6, 4, 5, 4, 6, 4, 0, 1, 29, 15, 0, 0, 1, 0, 0, 0, 0, 1]' : 0.0950401}
{'[6, 4, 5, 4, 6, 4, 0, 1, 29, 15, 0, 0, 1, 0, 0, 0, 0, 1]' : 0.0952058}

out:
 ["{'[6, 4, 5, 4, 6, 4, 0, 1, 29, 15, 0, 0, 1, 0, 0, 0, 0, 1]' : 0.109342}", "{'[6, 4, 5, 4, 6, 4, 0, 1, 29, 15, 0, 0, 1, 0, 0, 0, 0, 1]' : 0.108989}", "{'[6, 4, 5, 4, 6, 4, 0, 1, 29, 15, 0, 0, 1, 0, 0, 0, 0, 1]' : 0.108791}", "{'[6, 4, 5, 4, 6, 4, 0, 1, 29, 15, 0, 0, 1, 0, 0, 0, 0, 1]' : 0.108864}", "{'[6, 4, 5, 4, 6, 4, 0, 1, 29, 15, 0, 0, 1, 0, 0, 0, 0, 1]' : 0.104154}", "{'[6, 4, 5, 4, 6, 4, 0, 1, 29, 15, 0, 0, 1, 0, 0, 0, 0, 1]' : 0.0974441}", "{'[6, 4, 5, 4, 6, 4, 0, 1, 29, 15, 0, 0, 1, 0, 0, 0, 0, 1]' : 0.0954089}", "{'[6, 4, 5, 4, 6, 4, 0, 1, 29, 15, 0, 0, 1, 0, 0, 0, 0, 1]' : 0.0950561}", "{'[6, 4, 5, 4, 6, 4, 0, 1, 29, 15, 0, 0, 1, 0, 0, 0, 0, 1]' : 0.0952621}", "{'[6, 4, 5, 4, 6, 4, 0, 1, 29, 15, 0, 0, 1, 0, 0, 0, 0, 1]' : 0.0952299}", "{'[6, 4, 5, 4, 6, 4, 0, 1, 29, 15, 0, 0, 1, 0, 0, 0, 0, 1]' : 0.0967879}", "{'[6, 4, 5, 4, 6, 4, 0, 1, 29, 15, 0, 0, 1, 0, 0, 0, 0, 1]' : 0.0974581}", "{'[6, 4, 5, 4, 6, 4, 0, 1, 29, 15, 0, 0, 1, 0, 0, 0, 0, 1]' : 0.0972879}", "{'[6, 4, 5, 4, 6, 4, 0, 1, 29, 15, 0, 0, 1, 0, 0, 0, 0, 1]' : 0.0972741}", "{'[6, 4, 5, 4, 6, 4, 0, 1, 29, 15, 0, 0, 1, 0, 0, 0, 0, 1]' : 0.0973661}", "{'[6, 4, 5, 4, 6, 4, 0, 1, 29, 15, 0, 0, 1, 0, 0, 0, 0, 1]' : 0.097409}", "{'[6, 4, 5, 4, 6, 4, 0, 1, 29, 15, 0, 0, 1, 0, 0, 0, 0, 1]' : 0.09727}", "{'[6, 4, 5, 4, 6, 4, 0, 1, 29, 15, 0, 0, 1, 0, 0, 0, 0, 1]' : 0.097271}", "{'[6, 4, 5, 4, 6, 4, 0, 1, 29, 15, 0, 0, 1, 0, 0, 0, 0, 1]' : 0.0956581}", "{'[6, 4, 5, 4, 6, 4, 0, 1, 29, 15, 0, 0, 1, 0, 0, 0, 0, 1]' : 0.09519}", "{'[6, 4, 5, 4, 6, 4, 0, 1, 29, 15, 0, 0, 1, 0, 0, 0, 0, 1]' : 0.095962}", "{'[6, 4, 5, 4, 6, 4, 0, 1, 29, 15, 0, 0, 1, 0, 0, 0, 0, 1]' : 0.0963528}", "{'[6, 4, 5, 4, 6, 4, 0, 1, 29, 15, 0, 0, 1, 0, 0, 0, 0, 1]' : 0.0951178}", "{'[6, 4, 5, 4, 6, 4, 0, 1, 29, 15, 0, 0, 1, 0, 0, 0, 0, 1]' : 0.095124}", "{'[6, 4, 5, 4, 6, 4, 0, 1, 29, 15, 0, 0, 1, 0, 0, 0, 0, 1]' : 0.094974}", "{'[6, 4, 5, 4, 6, 4, 0, 1, 29, 15, 0, 0, 1, 0, 0, 0, 0, 1]' : 0.0952601}", "{'[6, 4, 5, 4, 6, 4, 0, 1, 29, 15, 0, 0, 1, 0, 0, 0, 0, 1]' : 0.0959289}", "{'[6, 4, 5, 4, 6, 4, 0, 1, 29, 15, 0, 0, 1, 0, 0, 0, 0, 1]' : 0.0952401}", "{'[6, 4, 5, 4, 6, 4, 0, 1, 29, 15, 0, 0, 1, 0, 0, 0, 0, 1]' : 0.0950401}", "{'[6, 4, 5, 4, 6, 4, 0, 1, 29, 15, 0, 0, 1, 0, 0, 0, 0, 1]' : 0.0952058}"]
returning from 'run': {'[6, 4, 5, 4, 6, 4, 0, 1, 29, 15, 0, 0, 1, 0, 0, 0, 0, 1]': ([0.109342, 0.108989, 0.108791, 0.108864, 0.104154, 0.0974441, 0.0954089, 0.0950561, 0.0952621, 0.0952299, 0.0967879, 0.0974581, 0.0972879, 0.0972741, 0.0973661, 0.097409, 0.09727, 0.097271, 0.0956581, 0.09519, 0.095962, 0.0963528, 0.0951178, 0.095124, 0.094974, 0.0952601, 0.0959289, 0.0952401, 0.0950401, 0.0952058], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 4, 5, 4, 6, 4, 0, 1, 29, 15, 0, 0, 1, 0, 0, 0, 0, 1]': ([0.109342, 0.108989, 0.108791, 0.108864, 0.104154, 0.0974441, 0.0954089, 0.0950561, 0.0952621, 0.0952299, 0.0967879, 0.0974581, 0.0972879, 0.0972741, 0.0973661, 0.097409, 0.09727, 0.097271, 0.0956581, 0.09519, 0.095962, 0.0963528, 0.0951178, 0.095124, 0.094974, 0.0952601, 0.0959289, 0.0952401, 0.0950401, 0.0952058], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	105
        Max loop nest depth: 	4
        Additions: 		6087
        Multiplications: 	1350
        Divisions: 		0
        Logical: 		0
        Reads: 			9177
        Writes: 		1045
        Comparisons:		105
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest85.exe __orio_perftest85.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest85.exe  
Program Test Output: 
{'[0, 2, 0, 6, 0, 1, 1, 1, 26, 15, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.098994}
{'[0, 2, 0, 6, 0, 1, 1, 1, 26, 15, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.100688}
{'[0, 2, 0, 6, 0, 1, 1, 1, 26, 15, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.10054}
{'[0, 2, 0, 6, 0, 1, 1, 1, 26, 15, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.098552}
{'[0, 2, 0, 6, 0, 1, 1, 1, 26, 15, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.0965161}
{'[0, 2, 0, 6, 0, 1, 1, 1, 26, 15, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.0973971}
{'[0, 2, 0, 6, 0, 1, 1, 1, 26, 15, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.0959539}
{'[0, 2, 0, 6, 0, 1, 1, 1, 26, 15, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.0961189}
{'[0, 2, 0, 6, 0, 1, 1, 1, 26, 15, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.0964742}
{'[0, 2, 0, 6, 0, 1, 1, 1, 26, 15, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.10027}
{'[0, 2, 0, 6, 0, 1, 1, 1, 26, 15, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.0988219}
{'[0, 2, 0, 6, 0, 1, 1, 1, 26, 15, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.099221}
{'[0, 2, 0, 6, 0, 1, 1, 1, 26, 15, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.0990522}
{'[0, 2, 0, 6, 0, 1, 1, 1, 26, 15, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.0990889}
{'[0, 2, 0, 6, 0, 1, 1, 1, 26, 15, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.101525}
{'[0, 2, 0, 6, 0, 1, 1, 1, 26, 15, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.0991089}
{'[0, 2, 0, 6, 0, 1, 1, 1, 26, 15, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.0991509}
{'[0, 2, 0, 6, 0, 1, 1, 1, 26, 15, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.0992079}
{'[0, 2, 0, 6, 0, 1, 1, 1, 26, 15, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.0989702}
{'[0, 2, 0, 6, 0, 1, 1, 1, 26, 15, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.101692}
{'[0, 2, 0, 6, 0, 1, 1, 1, 26, 15, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.101678}
{'[0, 2, 0, 6, 0, 1, 1, 1, 26, 15, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.101616}
{'[0, 2, 0, 6, 0, 1, 1, 1, 26, 15, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.10159}
{'[0, 2, 0, 6, 0, 1, 1, 1, 26, 15, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.101607}
{'[0, 2, 0, 6, 0, 1, 1, 1, 26, 15, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.101573}
{'[0, 2, 0, 6, 0, 1, 1, 1, 26, 15, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.0989859}
{'[0, 2, 0, 6, 0, 1, 1, 1, 26, 15, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.0990801}
{'[0, 2, 0, 6, 0, 1, 1, 1, 26, 15, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.099196}
{'[0, 2, 0, 6, 0, 1, 1, 1, 26, 15, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.0993931}
{'[0, 2, 0, 6, 0, 1, 1, 1, 26, 15, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.100916}

out:
 ["{'[0, 2, 0, 6, 0, 1, 1, 1, 26, 15, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.098994}", "{'[0, 2, 0, 6, 0, 1, 1, 1, 26, 15, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.100688}", "{'[0, 2, 0, 6, 0, 1, 1, 1, 26, 15, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.10054}", "{'[0, 2, 0, 6, 0, 1, 1, 1, 26, 15, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.098552}", "{'[0, 2, 0, 6, 0, 1, 1, 1, 26, 15, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.0965161}", "{'[0, 2, 0, 6, 0, 1, 1, 1, 26, 15, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.0973971}", "{'[0, 2, 0, 6, 0, 1, 1, 1, 26, 15, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.0959539}", "{'[0, 2, 0, 6, 0, 1, 1, 1, 26, 15, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.0961189}", "{'[0, 2, 0, 6, 0, 1, 1, 1, 26, 15, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.0964742}", "{'[0, 2, 0, 6, 0, 1, 1, 1, 26, 15, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.10027}", "{'[0, 2, 0, 6, 0, 1, 1, 1, 26, 15, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.0988219}", "{'[0, 2, 0, 6, 0, 1, 1, 1, 26, 15, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.099221}", "{'[0, 2, 0, 6, 0, 1, 1, 1, 26, 15, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.0990522}", "{'[0, 2, 0, 6, 0, 1, 1, 1, 26, 15, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.0990889}", "{'[0, 2, 0, 6, 0, 1, 1, 1, 26, 15, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.101525}", "{'[0, 2, 0, 6, 0, 1, 1, 1, 26, 15, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.0991089}", "{'[0, 2, 0, 6, 0, 1, 1, 1, 26, 15, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.0991509}", "{'[0, 2, 0, 6, 0, 1, 1, 1, 26, 15, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.0992079}", "{'[0, 2, 0, 6, 0, 1, 1, 1, 26, 15, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.0989702}", "{'[0, 2, 0, 6, 0, 1, 1, 1, 26, 15, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.101692}", "{'[0, 2, 0, 6, 0, 1, 1, 1, 26, 15, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.101678}", "{'[0, 2, 0, 6, 0, 1, 1, 1, 26, 15, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.101616}", "{'[0, 2, 0, 6, 0, 1, 1, 1, 26, 15, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.10159}", "{'[0, 2, 0, 6, 0, 1, 1, 1, 26, 15, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.101607}", "{'[0, 2, 0, 6, 0, 1, 1, 1, 26, 15, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.101573}", "{'[0, 2, 0, 6, 0, 1, 1, 1, 26, 15, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.0989859}", "{'[0, 2, 0, 6, 0, 1, 1, 1, 26, 15, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.0990801}", "{'[0, 2, 0, 6, 0, 1, 1, 1, 26, 15, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.099196}", "{'[0, 2, 0, 6, 0, 1, 1, 1, 26, 15, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.0993931}", "{'[0, 2, 0, 6, 0, 1, 1, 1, 26, 15, 0, 17, 1, 1, 0, 0, 1, 1]' : 0.100916}"]
returning from 'run': {'[0, 2, 0, 6, 0, 1, 1, 1, 26, 15, 0, 17, 1, 1, 0, 0, 1, 1]': ([0.098994, 0.100688, 0.10054, 0.098552, 0.0965161, 0.0973971, 0.0959539, 0.0961189, 0.0964742, 0.10027, 0.0988219, 0.099221, 0.0990522, 0.0990889, 0.101525, 0.0991089, 0.0991509, 0.0992079, 0.0989702, 0.101692, 0.101678, 0.101616, 0.10159, 0.101607, 0.101573, 0.0989859, 0.0990801, 0.099196, 0.0993931, 0.100916], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 0, 6, 0, 1, 1, 1, 26, 15, 0, 17, 1, 1, 0, 0, 1, 1]': ([0.098994, 0.100688, 0.10054, 0.098552, 0.0965161, 0.0973971, 0.0959539, 0.0961189, 0.0964742, 0.10027, 0.0988219, 0.099221, 0.0990522, 0.0990889, 0.101525, 0.0991089, 0.0991509, 0.0992079, 0.0989702, 0.101692, 0.101678, 0.101616, 0.10159, 0.101607, 0.101573, 0.0989859, 0.0990801, 0.099196, 0.0993931, 0.100916], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = jjj
Code stats:
        Number of loops: 	35
        Max loop nest depth: 	4
        Additions: 		1716
        Multiplications: 	450
        Divisions: 		0
        Logical: 		0
        Reads: 			2825
        Writes: 		339
        Comparisons:		35
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest86.exe __orio_perftest86.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest86.exe  
Program Test Output: 
{'[6, 4, 5, 0, 2, 0, 1, 0, 0, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.110488}
{'[6, 4, 5, 0, 2, 0, 1, 0, 0, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.110512}
{'[6, 4, 5, 0, 2, 0, 1, 0, 0, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.110393}
{'[6, 4, 5, 0, 2, 0, 1, 0, 0, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.110425}
{'[6, 4, 5, 0, 2, 0, 1, 0, 0, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.10624}
{'[6, 4, 5, 0, 2, 0, 1, 0, 0, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.096477}
{'[6, 4, 5, 0, 2, 0, 1, 0, 0, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.0965621}
{'[6, 4, 5, 0, 2, 0, 1, 0, 0, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.0966878}
{'[6, 4, 5, 0, 2, 0, 1, 0, 0, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.0946488}
{'[6, 4, 5, 0, 2, 0, 1, 0, 0, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.0941792}
{'[6, 4, 5, 0, 2, 0, 1, 0, 0, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.093991}
{'[6, 4, 5, 0, 2, 0, 1, 0, 0, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.0945461}
{'[6, 4, 5, 0, 2, 0, 1, 0, 0, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.0960319}
{'[6, 4, 5, 0, 2, 0, 1, 0, 0, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.0967028}
{'[6, 4, 5, 0, 2, 0, 1, 0, 0, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.0964298}
{'[6, 4, 5, 0, 2, 0, 1, 0, 0, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.096993}
{'[6, 4, 5, 0, 2, 0, 1, 0, 0, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.0969701}
{'[6, 4, 5, 0, 2, 0, 1, 0, 0, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.09675}
{'[6, 4, 5, 0, 2, 0, 1, 0, 0, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.0956948}
{'[6, 4, 5, 0, 2, 0, 1, 0, 0, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.094131}
{'[6, 4, 5, 0, 2, 0, 1, 0, 0, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.0941632}
{'[6, 4, 5, 0, 2, 0, 1, 0, 0, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.0940728}
{'[6, 4, 5, 0, 2, 0, 1, 0, 0, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.0949192}
{'[6, 4, 5, 0, 2, 0, 1, 0, 0, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.096549}
{'[6, 4, 5, 0, 2, 0, 1, 0, 0, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.096658}
{'[6, 4, 5, 0, 2, 0, 1, 0, 0, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.096555}
{'[6, 4, 5, 0, 2, 0, 1, 0, 0, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.096595}
{'[6, 4, 5, 0, 2, 0, 1, 0, 0, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.0970688}
{'[6, 4, 5, 0, 2, 0, 1, 0, 0, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.099381}
{'[6, 4, 5, 0, 2, 0, 1, 0, 0, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.0972159}

out:
 ["{'[6, 4, 5, 0, 2, 0, 1, 0, 0, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.110488}", "{'[6, 4, 5, 0, 2, 0, 1, 0, 0, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.110512}", "{'[6, 4, 5, 0, 2, 0, 1, 0, 0, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.110393}", "{'[6, 4, 5, 0, 2, 0, 1, 0, 0, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.110425}", "{'[6, 4, 5, 0, 2, 0, 1, 0, 0, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.10624}", "{'[6, 4, 5, 0, 2, 0, 1, 0, 0, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.096477}", "{'[6, 4, 5, 0, 2, 0, 1, 0, 0, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.0965621}", "{'[6, 4, 5, 0, 2, 0, 1, 0, 0, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.0966878}", "{'[6, 4, 5, 0, 2, 0, 1, 0, 0, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.0946488}", "{'[6, 4, 5, 0, 2, 0, 1, 0, 0, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.0941792}", "{'[6, 4, 5, 0, 2, 0, 1, 0, 0, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.093991}", "{'[6, 4, 5, 0, 2, 0, 1, 0, 0, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.0945461}", "{'[6, 4, 5, 0, 2, 0, 1, 0, 0, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.0960319}", "{'[6, 4, 5, 0, 2, 0, 1, 0, 0, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.0967028}", "{'[6, 4, 5, 0, 2, 0, 1, 0, 0, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.0964298}", "{'[6, 4, 5, 0, 2, 0, 1, 0, 0, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.096993}", "{'[6, 4, 5, 0, 2, 0, 1, 0, 0, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.0969701}", "{'[6, 4, 5, 0, 2, 0, 1, 0, 0, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.09675}", "{'[6, 4, 5, 0, 2, 0, 1, 0, 0, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.0956948}", "{'[6, 4, 5, 0, 2, 0, 1, 0, 0, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.094131}", "{'[6, 4, 5, 0, 2, 0, 1, 0, 0, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.0941632}", "{'[6, 4, 5, 0, 2, 0, 1, 0, 0, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.0940728}", "{'[6, 4, 5, 0, 2, 0, 1, 0, 0, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.0949192}", "{'[6, 4, 5, 0, 2, 0, 1, 0, 0, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.096549}", "{'[6, 4, 5, 0, 2, 0, 1, 0, 0, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.096658}", "{'[6, 4, 5, 0, 2, 0, 1, 0, 0, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.096555}", "{'[6, 4, 5, 0, 2, 0, 1, 0, 0, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.096595}", "{'[6, 4, 5, 0, 2, 0, 1, 0, 0, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.0970688}", "{'[6, 4, 5, 0, 2, 0, 1, 0, 0, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.099381}", "{'[6, 4, 5, 0, 2, 0, 1, 0, 0, 15, 0, 0, 1, 1, 0, 0, 1, 1]' : 0.0972159}"]
returning from 'run': {'[6, 4, 5, 0, 2, 0, 1, 0, 0, 15, 0, 0, 1, 1, 0, 0, 1, 1]': ([0.110488, 0.110512, 0.110393, 0.110425, 0.10624, 0.096477, 0.0965621, 0.0966878, 0.0946488, 0.0941792, 0.093991, 0.0945461, 0.0960319, 0.0967028, 0.0964298, 0.096993, 0.0969701, 0.09675, 0.0956948, 0.094131, 0.0941632, 0.0940728, 0.0949192, 0.096549, 0.096658, 0.096555, 0.096595, 0.0970688, 0.099381, 0.0972159], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 4, 5, 0, 2, 0, 1, 0, 0, 15, 0, 0, 1, 1, 0, 0, 1, 1]': ([0.110488, 0.110512, 0.110393, 0.110425, 0.10624, 0.096477, 0.0965621, 0.0966878, 0.0946488, 0.0941792, 0.093991, 0.0945461, 0.0960319, 0.0967028, 0.0964298, 0.096993, 0.0969701, 0.09675, 0.0956948, 0.094131, 0.0941632, 0.0940728, 0.0949192, 0.096549, 0.096658, 0.096555, 0.096595, 0.0970688, 0.099381, 0.0972159], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Complete design, with measurements:
     T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_K RT_I RT_J RT_K VEC1
334     0    0    3    6    1    2       0       0   29  24    1    0    1    0
338     5    3    0    6    3    0       0       1    0   0    0    0    0    0
359     5    0    0    0    6    6       1       0    0  25    0    0    2    1
422     1    5    1    2    6    2       0       0   17   0    0    2    0    1
511     0    6    5    2    5    3       0       0   29  14    0    1    0    1
526     1    3    3    2    2    2       1       1    0   4    0    1    1    1
576     3    1    0    2    6    0       0       1    5   5    2    0    0    1
752     1    2    4    0    1    0       1       1    3  15    1    1    0    1
848     6    2    2    6    0    6       1       0   21   0    0    1    1    1
968     2    4    0    2    3    2       1       0   18  29    1    0    0    0
1112    0    2    4    6    2    2       0       1    4  29    0    2    0    1
1276    1    0    5    5    6    0       1       0    7   0    0    0    2    0
1362    0    2    6    0    6    5       1       1   29   5    0    0    0    1
1439    0    6    0    5    0    6       1       0   11   0    0    0    2    0
1476    3    0    1    2    0    6       0       0    3  21    0    0    0    1
1563    1    0    0    2    0    3       1       1    7   9    0    1    1    1
1821    3    6    0    0    0    3       0       1   21   0    2    0    0    0
1842    6    0    0    4    3    0       0       1   27  18    1    0    1    1
1980    4    5    5    0    0    0       1       1   22  26    0    0    1    1
2087    3    3    2    2    1    6       0       0   29  20    0    0    1    0
2310    5    0    0    0    2    2       0       1    8   3    0    1    1    0
2546    6    0    6    6    0    5       1       0    7   7    0    0    2    0
2777    0    4    4    2    2    0       0       1   15   0    2    0    0    1
2881    3    6    4    3    0    4       0       0   25  26    0    1    0    0
3043    0    5    2    2    6    5       0       0    7   4    1    0    1    1
3070    6    4    6    6    6    5       0       0    0  24    1    0    0    0
3424    6    6    4    0    0    6       1       1   26   0    1    1    0    1
3427    3    0    1    6    6    3       1       1   29  29    2    0    0    1
3460    6    4    5    4    6    4       0       1   29   0    1    0    0    0
3599    0    2    0    6    0    1       1       1   26  17    1    1    0    1
3879    6    4    5    0    2    0       1       0    0   0    1    1    0    1
     VEC2  cost_mean
334     1 0.11562673
338     1 0.12366283
359     0 0.16862383
422     0 0.14652030
511     0 0.11110563
526     0 0.21169587
576     1 0.18801413
752     0 0.10825020
848     1 0.15979603
968     1 0.11549537
1112    0 0.18680623
1276    0 0.14900020
1362    0 0.18614833
1439    1 0.14917473
1476    1 0.12595637
1563    1 0.15621483
1821    0 0.15382890
1842    0 0.11522313
1980    1 0.16873773
2087    0 0.12748227
2310    1 0.15943367
2546    0 0.13160563
2777    0 0.14862370
2881    0 0.12714553
3043    1 0.11866457
3070    0 0.12383353
3424    1 0.09992624
3427    0 0.19155237
3460    1 0.09805730
3599    1 0.09943261
3879    1 0.09826771

Heteroscedasticity Test p-value: 0.351782940753
Regression Step:                Df   Sum Sq  Mean Sq F value Pr(>F)  
T1_I             1 0.001308 0.001308   1.916 0.2385  
T1_J             1 0.002388 0.002388   3.498 0.1348  
T1_K             1 0.000088 0.000088   0.129 0.7376  
T2_I             1 0.000464 0.000464   0.679 0.4562  
T2_J             1 0.000607 0.000607   0.889 0.3992  
T2_K             1 0.000174 0.000174   0.255 0.6399  
ACOPY_x          1 0.000729 0.000729   1.069 0.3596  
ACOPY_y          1 0.002927 0.002927   4.289 0.1071  
U1_I             1 0.001363 0.001363   1.997 0.2305  
U_K              1 0.000131 0.000131   0.192 0.6842  
RT_I             1 0.000740 0.000740   1.085 0.3564  
RT_J             1 0.000006 0.000006   0.008 0.9324  
RT_K             1 0.001279 0.001279   1.875 0.2428  
VEC1             1 0.000087 0.000087   0.128 0.7389  
VEC2             1 0.001332 0.001332   1.952 0.2349  
I(1/(1 + T1_I))  1 0.001979 0.001979   2.900 0.1638  
I(1/(1 + T1_J))  1 0.000336 0.000336   0.492 0.5216  
I(1/(1 + T1_K))  1 0.000000 0.000000   0.000 0.9957  
I(1/(1 + T2_I))  1 0.000779 0.000779   1.141 0.3456  
I(1/(1 + T2_J))  1 0.000629 0.000629   0.921 0.3915  
I(1/(1 + T2_K))  1 0.001620 0.001620   2.374 0.1982  
I(1/(1 + U1_I))  1 0.000158 0.000158   0.232 0.6554  
I(1/(1 + U_K))   1 0.000746 0.000746   1.094 0.3547  
I(1/(1 + RT_I))  1 0.006143 0.006143   9.001 0.0399 *
I(1/(1 + RT_J))  1 0.000111 0.000111   0.162 0.7078  
I(1/(1 + RT_K))  1 0.000678 0.000678   0.994 0.3752  
Residuals        4 0.002730 0.000683                 
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Predicting Best
Generating valid search space of size 3900 (does not spend evaluations)
Valid coordinates: 780
Valid coordinates: 1560
Valid coordinates: 2340
Tested coordinates: 10000
Valid coordinates: 3120
Valid coordinates: 3900
Valid/Tested configurations: 3900/15601
Generated Search Space:
NULL
Identical predictions (tol = 1e-5): 1
Getting Best from Design
Response: ['cost_mean']
Design Names:  [1] "T1_I"      "T1_J"      "T1_K"      "T2_I"      "T2_J"      "T2_K"     
 [7] "ACOPY_x"   "ACOPY_y"   "U1_I"      "U_K"       "RT_I"      "RT_J"     
[13] "RT_K"      "VEC1"      "VEC2"      "cost_mean"

Design Response:       cost_mean
334  0.11562673
338  0.12366283
359  0.16862383
422  0.14652030
511  0.11110563
526  0.21169587
576  0.18801413
752  0.10825020
848  0.15979603
968  0.11549537
1112 0.18680623
1276 0.14900020
1362 0.18614833
1439 0.14917473
1476 0.12595637
1563 0.15621483
1821 0.15382890
1842 0.11522313
1980 0.16873773
2087 0.12748227
2310 0.15943367
2546 0.13160563
2777 0.14862370
2881 0.12714553
3043 0.11866457
3070 0.12383353
3424 0.09992624
3427 0.19155237
3460 0.09805730
3599 0.09943261
3879 0.09826771

Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Getting fixed variables
Pruning Model
Best Predicted:      T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
1280    6    3    1    4    0    0       0       1   24  15   0  14    1    1
     RT_K SCR VEC1 VEC2
1280    0   0    1    0

Best From Design: [6, 4, 5, 4, 6, 4, 0, 1, 29, 15, 0, 0, 1, 0, 0, 0, 0, 1]
Pruned Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_K', 'RT_J', 'RT_K', 'VEC1', 'VEC2']
Fixed Factors: {'U_J': 0, 'U_I': 15, 'RT_I': 1, 'SCR': 0}
Length of requested configs: 1
Result was on Database, Returning Now
Starting Point (-O3):
0.16283083333333334
Predicted Best Point:
[6, 3, 1, 4, 0, 0, 0, 1, 24, 15, 0, 14, 1, 1, 0, 0, 1, 0]
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = iii
Code stats:
        Number of loops: 	90
        Max loop nest depth: 	4
        Additions: 		5281
        Multiplications: 	1250
        Divisions: 		0
        Logical: 		0
        Reads: 			8014
        Writes: 		888
        Comparisons:		90
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest87.exe __orio_perftest87.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest87.exe  
Program Test Output: 
{'[6, 3, 1, 4, 0, 0, 0, 1, 24, 15, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.111225}
{'[6, 3, 1, 4, 0, 0, 0, 1, 24, 15, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.110894}
{'[6, 3, 1, 4, 0, 0, 0, 1, 24, 15, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.112598}
{'[6, 3, 1, 4, 0, 0, 0, 1, 24, 15, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.112441}
{'[6, 3, 1, 4, 0, 0, 0, 1, 24, 15, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.110728}
{'[6, 3, 1, 4, 0, 0, 0, 1, 24, 15, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.110584}
{'[6, 3, 1, 4, 0, 0, 0, 1, 24, 15, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.111558}
{'[6, 3, 1, 4, 0, 0, 0, 1, 24, 15, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.117164}
{'[6, 3, 1, 4, 0, 0, 0, 1, 24, 15, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.115083}
{'[6, 3, 1, 4, 0, 0, 0, 1, 24, 15, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.113137}
{'[6, 3, 1, 4, 0, 0, 0, 1, 24, 15, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.111018}
{'[6, 3, 1, 4, 0, 0, 0, 1, 24, 15, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.113378}
{'[6, 3, 1, 4, 0, 0, 0, 1, 24, 15, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.111978}
{'[6, 3, 1, 4, 0, 0, 0, 1, 24, 15, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.110578}
{'[6, 3, 1, 4, 0, 0, 0, 1, 24, 15, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.110616}
{'[6, 3, 1, 4, 0, 0, 0, 1, 24, 15, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.112719}
{'[6, 3, 1, 4, 0, 0, 0, 1, 24, 15, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.117102}
{'[6, 3, 1, 4, 0, 0, 0, 1, 24, 15, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.114738}
{'[6, 3, 1, 4, 0, 0, 0, 1, 24, 15, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.11369}
{'[6, 3, 1, 4, 0, 0, 0, 1, 24, 15, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.113896}
{'[6, 3, 1, 4, 0, 0, 0, 1, 24, 15, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.116904}
{'[6, 3, 1, 4, 0, 0, 0, 1, 24, 15, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.114425}
{'[6, 3, 1, 4, 0, 0, 0, 1, 24, 15, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.114273}
{'[6, 3, 1, 4, 0, 0, 0, 1, 24, 15, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.11379}
{'[6, 3, 1, 4, 0, 0, 0, 1, 24, 15, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.115668}
{'[6, 3, 1, 4, 0, 0, 0, 1, 24, 15, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.116987}
{'[6, 3, 1, 4, 0, 0, 0, 1, 24, 15, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.116558}
{'[6, 3, 1, 4, 0, 0, 0, 1, 24, 15, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.113837}
{'[6, 3, 1, 4, 0, 0, 0, 1, 24, 15, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.114532}
{'[6, 3, 1, 4, 0, 0, 0, 1, 24, 15, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.117094}

out:
 ["{'[6, 3, 1, 4, 0, 0, 0, 1, 24, 15, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.111225}", "{'[6, 3, 1, 4, 0, 0, 0, 1, 24, 15, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.110894}", "{'[6, 3, 1, 4, 0, 0, 0, 1, 24, 15, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.112598}", "{'[6, 3, 1, 4, 0, 0, 0, 1, 24, 15, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.112441}", "{'[6, 3, 1, 4, 0, 0, 0, 1, 24, 15, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.110728}", "{'[6, 3, 1, 4, 0, 0, 0, 1, 24, 15, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.110584}", "{'[6, 3, 1, 4, 0, 0, 0, 1, 24, 15, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.111558}", "{'[6, 3, 1, 4, 0, 0, 0, 1, 24, 15, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.117164}", "{'[6, 3, 1, 4, 0, 0, 0, 1, 24, 15, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.115083}", "{'[6, 3, 1, 4, 0, 0, 0, 1, 24, 15, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.113137}", "{'[6, 3, 1, 4, 0, 0, 0, 1, 24, 15, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.111018}", "{'[6, 3, 1, 4, 0, 0, 0, 1, 24, 15, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.113378}", "{'[6, 3, 1, 4, 0, 0, 0, 1, 24, 15, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.111978}", "{'[6, 3, 1, 4, 0, 0, 0, 1, 24, 15, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.110578}", "{'[6, 3, 1, 4, 0, 0, 0, 1, 24, 15, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.110616}", "{'[6, 3, 1, 4, 0, 0, 0, 1, 24, 15, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.112719}", "{'[6, 3, 1, 4, 0, 0, 0, 1, 24, 15, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.117102}", "{'[6, 3, 1, 4, 0, 0, 0, 1, 24, 15, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.114738}", "{'[6, 3, 1, 4, 0, 0, 0, 1, 24, 15, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.11369}", "{'[6, 3, 1, 4, 0, 0, 0, 1, 24, 15, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.113896}", "{'[6, 3, 1, 4, 0, 0, 0, 1, 24, 15, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.116904}", "{'[6, 3, 1, 4, 0, 0, 0, 1, 24, 15, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.114425}", "{'[6, 3, 1, 4, 0, 0, 0, 1, 24, 15, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.114273}", "{'[6, 3, 1, 4, 0, 0, 0, 1, 24, 15, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.11379}", "{'[6, 3, 1, 4, 0, 0, 0, 1, 24, 15, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.115668}", "{'[6, 3, 1, 4, 0, 0, 0, 1, 24, 15, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.116987}", "{'[6, 3, 1, 4, 0, 0, 0, 1, 24, 15, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.116558}", "{'[6, 3, 1, 4, 0, 0, 0, 1, 24, 15, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.113837}", "{'[6, 3, 1, 4, 0, 0, 0, 1, 24, 15, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.114532}", "{'[6, 3, 1, 4, 0, 0, 0, 1, 24, 15, 0, 14, 1, 1, 0, 0, 1, 0]' : 0.117094}"]
returning from 'run': {'[6, 3, 1, 4, 0, 0, 0, 1, 24, 15, 0, 14, 1, 1, 0, 0, 1, 0]': ([0.111225, 0.110894, 0.112598, 0.112441, 0.110728, 0.110584, 0.111558, 0.117164, 0.115083, 0.113137, 0.111018, 0.113378, 0.111978, 0.110578, 0.110616, 0.112719, 0.117102, 0.114738, 0.11369, 0.113896, 0.116904, 0.114425, 0.114273, 0.11379, 0.115668, 0.116987, 0.116558, 0.113837, 0.114532, 0.117094], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 3, 1, 4, 0, 0, 0, 1, 24, 15, 0, 14, 1, 1, 0, 0, 1, 0]': ([0.111225, 0.110894, 0.112598, 0.112441, 0.110728, 0.110584, 0.111558, 0.117164, 0.115083, 0.113137, 0.111018, 0.113378, 0.111978, 0.110578, 0.110616, 0.112719, 0.117102, 0.114738, 0.11369, 0.113896, 0.116904, 0.114425, 0.114273, 0.11379, 0.115668, 0.116987, 0.116558, 0.113837, 0.114532, 0.117094], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Design Best Point:
[6, 4, 5, 4, 6, 4, 0, 1, 29, 15, 0, 0, 1, 0, 0, 0, 0, 1]
Length of requested configs: 1
Result was on Database, Returning Now
Fixed Factors: {'U_J': 0, 'U_I': 15, 'RT_I': 1, 'SCR': 0}
Slowdown (Design Best): 0.6022034934006151
Slowdown (Predicted Best): 0.6979007866036837
Budget: 71/180
Current Best Point: 
[3, 2, 2, 6, 6, 6, 0, 0, 0, 27, 0, 29, 1, 0, 1, 1, 0, 1]
Final Best Point: 
[3, 2, 2, 6, 6, 6, 0, 0, 0, 27, 0, 29, 1, 0, 1, 1, 0, 1]
Ending DOPT-ANOVA
Best Point: [3, 2, 2, 6, 6, 6, 0, 0, 0, 27, 0, 29, 1, 0, 1, 1, 0, 1]
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Speedup: 1.703305498999636
----- end random search -----
----- begin random search summary -----
 total completed runs: 0
 total successful runs: 0
 total failed runs: 0
 speedup: 1.703305498999636
----- end random search summary -----
----- begin summary -----
 best coordinate: [3, 2, 2, 6, 6, 6, 0, 0, 0, 27, 0, 29, 1, 0, 1, 1, 0, 1]={'ACOPY_x': False, 'ACOPY_y': False, 'RT_K': 8, 'T1_I': 64, 'T1_J': 32, 'T1_K': 32, 'U_K': 30, 'U_J': 1, 'U_I': 28, 'U1_I': 1, 'T2_K': 2048, 'T2_J': 2048, 'T2_I': 2048, 'VEC2': True, 'VEC1': False, 'RT_I': 8, 'SCR': True, 'RT_J': 1}, cost=9.559696e-02, transfer_time=inf, inputs=[('N', 10000)], search_time=-1069.28, runs=71
----- end summary -----
Length of requested configs: 1
Result was on Database, Returning Now
----- the obtained best performance parameters -----
 ACOPY_x = False
 ACOPY_y = False
 RT_I = 8
 RT_J = 1
 RT_K = 8
 SCR = True
 T1_I = 64
 T1_J = 32
 T1_K = 32
 T2_I = 2048
 T2_J = 2048
 T2_K = 2048
 U1_I = 1
 U_I = 28
 U_J = 1
 U_K = 30
 VEC1 = False
 VEC2 = True
 cost_mean = 0.0955969633333334
 points = 71
 speedup_O3 = 1.703305498999636
 technique = DLMT
Code stats:
        Number of loops: 	84
        Max loop nest depth: 	6
        Additions: 		8060
        Multiplications: 	2960
        Divisions: 		0
        Logical: 		0
        Reads: 			17233
        Writes: 		3759
        Comparisons:		84
        Gotos: 			0
        
----- finish optimizations -----

----- begin removing annotations from output-----
----- finished removing annotations from output-----

----- begin writing the output file(s) -----
--> writing output to: _atax2.src1.c
----- finished writing the output file(s) -----

====== END ORIO ======
