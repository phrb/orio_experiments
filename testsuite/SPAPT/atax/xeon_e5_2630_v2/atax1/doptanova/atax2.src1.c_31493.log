
====== START ORIO ======

----- begin reading the source file: atax2.src1.c -----
----- finished reading the source file -----

----- begin parsing annotations -----
----- finished parsing annotations -----

----- begin optimizations -----
Search_Space         = 8.234e+13
Number_of_Parameters = 18
Numeric_Parameters   = 13
Binary_Parameters    = 05
['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
[[1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [False, True], [False, True], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 8, 32], [1, 8, 32], [1, 8, 32], [False, True], [False, True], [False, True]]

----- begin empirical tuning for problem size -----
 N = 10000
Parameters: {'ACOPY_x': [0, 2], 'ACOPY_y': [0, 2], 'RT_K': [0, 3], 'T1_I': [0, 7], 'T1_J': [0, 7], 'T1_K': [0, 7], 'U_K': [0, 30], 'U_J': [0, 30], 'U_I': [0, 30], 'U1_I': [0, 30], 'T2_K': [0, 7], 'T2_J': [0, 7], 'T2_I': [0, 7], 'VEC2': [0, 2], 'VEC1': [0, 2], 'RT_I': [0, 3], 'SCR': [0, 2], 'RT_J': [0, 3]}
Parameter Range Values: {'ACOPY_x': [False, True], 'ACOPY_y': [False, True], 'RT_K': [1, 8, 32], 'T1_I': [1, 16, 32, 64, 128, 256, 512], 'T1_J': [1, 16, 32, 64, 128, 256, 512], 'T1_K': [1, 16, 32, 64, 128, 256, 512], 'U_K': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_J': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U1_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'T2_K': [1, 64, 128, 256, 512, 1024, 2048], 'T2_J': [1, 64, 128, 256, 512, 1024, 2048], 'T2_I': [1, 64, 128, 256, 512, 1024, 2048], 'VEC2': [False, True], 'VEC1': [False, True], 'RT_I': [1, 8, 32], 'SCR': [False, True], 'RT_J': [1, 8, 32]}

----- begin random search -----
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Inverse Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Starting DOPT-anova
Step 0
Generating valid search space of size 4600 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Valid coordinates: 920
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Valid coordinates: 1840
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Valid coordinates: 2760
Tested coordinates: 110000
Tested coordinates: 120000
Tested coordinates: 130000
Tested coordinates: 140000
Valid coordinates: 3680
Tested coordinates: 150000
Tested coordinates: 160000
Tested coordinates: 170000
Tested coordinates: 180000
Valid coordinates: 4600
Valid/Tested configurations: 4600/186206
Generated Search Space:
NULL
Clean Info:
Removed Factors: character(0)

Removed Inverse Factors: [1] "ACOPY_x" "ACOPY_y" "SCR"     "VEC1"    "VEC2"   

New Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
New Inverse Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
New Fixed Factors: {}
Full Model:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Fixed Factors: {}
Computing D-Optimal Design
Computing D-Optimal Design with 46 experiments
Design Formula:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Starting "optFederov" run
Using Search Space:
NULL
Data Dimensions: [1] 4600   18

     T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
24      6    5    4    0    3    3       1       0    0   0  27   3    1    0
81      0    6    3    2    5    6       0       1   26  16   7   0    0    1
85      4    4    1    3    0    2       1       0    5  29   0  27    0    0
130     6    1    0    0    5    0       1       0   26   0  12   7    0    0
281     0    4    6    2    2    4       0       0    8   0   4   6    2    0
351     2    1    5    6    6    4       1       0   27   0   6  27    0    0
382     2    6    6    0    6    6       1       0   23  29   0  27    0    2
446     0    3    3    4    1    2       1       1   29   0  26  19    0    2
563     1    0    2    3    6    0       1       0    9   0   7  11    1    0
613     0    4    4    1    5    2       1       0    9   0   0   0    1    0
792     3    1    2    1    1    2       0       0   26  15   5   0    2    0
902     6    0    0    6    3    3       0       0   27   7   3   0    1    0
918     6    0    2    4    4    0       0       0   15   1   0   0    0    2
1052    1    6    1    6    0    6       0       0    1   0  23   7    0    0
1241    2    1    2    0    6    1       0       0    2  13   0   6    1    1
1312    0    0    5    6    1    0       0       0   14   0   5  27    0    1
1314    6    2    1    0    1    6       0       1   11   0  18  28    0    1
1322    4    2    5    5    3    0       1       0   15  27  25   0    0    0
1332    3    6    2    6    0    0       1       1    0   0   1   0    2    0
1337    5    0    2    0    3    0       1       0    0   6   0  28    1    0
1443    3    2    1    5    6    6       0       0    0  12  25   0    0    1
1452    1    6    0    4    6    0       1       0   28  28  28   0    0    1
1532    4    6    0    5    0    2       1       1    0  15  12   0    0    0
1555    1    1    2    0    4    0       1       1    8   1   0  26    0    0
1832    0    2    4    6    5    5       0       1    9   3   3   0    0    2
1856    1    0    3    2    2    6       0       1    0  23  10   0    0    0
1944    4    4    6    2    3    6       1       1    8   5   0   6    0    1
1945    2    2    0    0    1    3       0       1   22   0   7   8    1    0
1993    5    3    0    6    0    6       1       1    8  28   8   0    1    0
2158    2    1    5    4    0    0       1       0   23   4  23   0    1    1
2164    1    2    0    5    2    6       1       0    0   0   0  29    1    1
2223    2    0    6    5    2    6       1       1   27   2  26   0    0    0
2371    0    1    0    1    0    6       1       1   24   0   2   4    2    0
2528    0    5    2    6    6    0       0       1   17  22   0  21    0    0
2557    0    0    3    0    1    6       1       0   22  26  19   0    2    0
2616    0    2    6    4    4    0       0       0    0  28   0  12    0    0
2781    2    6    0    6    6    5       0       1    2  11   0  29    2    0
2885    1    0    5    3    0    0       0       0    3   1   0   8    0    1
2993    2    0    5    0    4    4       0       1    0  28  12   0    0    1
3330    2    0    1    5    3    2       1       0    3   0  11   6    0    2
3570    0    6    6    2    0    0       0       1   10   0  20  29    1    0
3761    0    0    3    3    0    2       1       0   27   1   0  20    0    0
3788    6    0    3    6    6    4       0       1   29  25   0   6    1    1
4057    0    0    0    0    2    2       0       0    8   7  27   0    0    0
4138    5    6    3    0    0    4       0       0   28   0   0   1    0    0
4288    4    0    6    4    6    5       0       1   14   0  25  29    2    0
     RT_K SCR VEC1 VEC2
24      1   0    0    0
81      1   1    1    0
85      1   0    1    0
130     0   1    0    0
281     0   1    0    1
351     2   1    1    0
382     0   0    0    1
446     0   1    1    0
563     1   0    1    0
613     0   1    0    1
792     0   0    0    0
902     0   0    1    0
918     0   1    1    1
1052    0   1    0    0
1241    0   0    1    0
1312    1   0    1    1
1314    1   0    1    1
1322    2   0    1    1
1332    0   0    1    0
1337    1   1    0    1
1443    1   0    1    1
1452    1   0    0    0
1532    2   0    0    1
1555    0   0    0    1
1832    0   1    0    0
1856    2   1    1    1
1944    0   1    1    0
1945    1   1    1    1
1993    1   0    0    0
2158    0   1    1    1
2164    0   0    0    0
2223    1   0    0    0
2371    0   0    1    0
2528    2   1    0    0
2557    0   1    1    0
2616    1   0    1    0
2781    0   1    1    1
2885    1   1    0    0
2993    0   1    1    0
3330    0   1    0    1
3570    0   0    0    0
3761    0   0    0    1
3788    0   0    0    1
4057    2   1    0    0
4138    2   0    1    0
4288    0   1    0    0

D-Efficiency Approximation: [1] 0.463

Measuring design of size 46
Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = jjj
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	5
        Additions: 		2669
        Multiplications: 	756
        Divisions: 		0
        Logical: 		0
        Reads: 			4215
        Writes: 		427
        Comparisons:		22
        Gotos: 			0
        
 building the original code:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -DORIGINAL -o __orio_perftest_original.exe __orio_perftest1.c timer_cpu.o -lm
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest1.exe __orio_perftest1.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest1.exe  
Program Test Output: 
{'[6, 5, 4, 0, 3, 3, 1, 0, 0, 0, 27, 3, 1, 0, 1, 0, 0, 0]' : 0.14281}
{'[6, 5, 4, 0, 3, 3, 1, 0, 0, 0, 27, 3, 1, 0, 1, 0, 0, 0]' : 0.14254}
{'[6, 5, 4, 0, 3, 3, 1, 0, 0, 0, 27, 3, 1, 0, 1, 0, 0, 0]' : 0.142507}
{'[6, 5, 4, 0, 3, 3, 1, 0, 0, 0, 27, 3, 1, 0, 1, 0, 0, 0]' : 0.129658}
{'[6, 5, 4, 0, 3, 3, 1, 0, 0, 0, 27, 3, 1, 0, 1, 0, 0, 0]' : 0.120375}
{'[6, 5, 4, 0, 3, 3, 1, 0, 0, 0, 27, 3, 1, 0, 1, 0, 0, 0]' : 0.120341}
{'[6, 5, 4, 0, 3, 3, 1, 0, 0, 0, 27, 3, 1, 0, 1, 0, 0, 0]' : 0.120646}
{'[6, 5, 4, 0, 3, 3, 1, 0, 0, 0, 27, 3, 1, 0, 1, 0, 0, 0]' : 0.121042}
{'[6, 5, 4, 0, 3, 3, 1, 0, 0, 0, 27, 3, 1, 0, 1, 0, 0, 0]' : 0.12037}
{'[6, 5, 4, 0, 3, 3, 1, 0, 0, 0, 27, 3, 1, 0, 1, 0, 0, 0]' : 0.120245}
{'[6, 5, 4, 0, 3, 3, 1, 0, 0, 0, 27, 3, 1, 0, 1, 0, 0, 0]' : 0.119919}
{'[6, 5, 4, 0, 3, 3, 1, 0, 0, 0, 27, 3, 1, 0, 1, 0, 0, 0]' : 0.12042}
{'[6, 5, 4, 0, 3, 3, 1, 0, 0, 0, 27, 3, 1, 0, 1, 0, 0, 0]' : 0.120723}
{'[6, 5, 4, 0, 3, 3, 1, 0, 0, 0, 27, 3, 1, 0, 1, 0, 0, 0]' : 0.121153}
{'[6, 5, 4, 0, 3, 3, 1, 0, 0, 0, 27, 3, 1, 0, 1, 0, 0, 0]' : 0.120086}
{'[6, 5, 4, 0, 3, 3, 1, 0, 0, 0, 27, 3, 1, 0, 1, 0, 0, 0]' : 0.120531}
{'[6, 5, 4, 0, 3, 3, 1, 0, 0, 0, 27, 3, 1, 0, 1, 0, 0, 0]' : 0.120382}
{'[6, 5, 4, 0, 3, 3, 1, 0, 0, 0, 27, 3, 1, 0, 1, 0, 0, 0]' : 0.120326}
{'[6, 5, 4, 0, 3, 3, 1, 0, 0, 0, 27, 3, 1, 0, 1, 0, 0, 0]' : 0.120008}
{'[6, 5, 4, 0, 3, 3, 1, 0, 0, 0, 27, 3, 1, 0, 1, 0, 0, 0]' : 0.121803}
{'[6, 5, 4, 0, 3, 3, 1, 0, 0, 0, 27, 3, 1, 0, 1, 0, 0, 0]' : 0.120587}
{'[6, 5, 4, 0, 3, 3, 1, 0, 0, 0, 27, 3, 1, 0, 1, 0, 0, 0]' : 0.120147}
{'[6, 5, 4, 0, 3, 3, 1, 0, 0, 0, 27, 3, 1, 0, 1, 0, 0, 0]' : 0.120167}
{'[6, 5, 4, 0, 3, 3, 1, 0, 0, 0, 27, 3, 1, 0, 1, 0, 0, 0]' : 0.120334}
{'[6, 5, 4, 0, 3, 3, 1, 0, 0, 0, 27, 3, 1, 0, 1, 0, 0, 0]' : 0.120546}
{'[6, 5, 4, 0, 3, 3, 1, 0, 0, 0, 27, 3, 1, 0, 1, 0, 0, 0]' : 0.120167}
{'[6, 5, 4, 0, 3, 3, 1, 0, 0, 0, 27, 3, 1, 0, 1, 0, 0, 0]' : 0.120008}
{'[6, 5, 4, 0, 3, 3, 1, 0, 0, 0, 27, 3, 1, 0, 1, 0, 0, 0]' : 0.120344}
{'[6, 5, 4, 0, 3, 3, 1, 0, 0, 0, 27, 3, 1, 0, 1, 0, 0, 0]' : 0.120451}
{'[6, 5, 4, 0, 3, 3, 1, 0, 0, 0, 27, 3, 1, 0, 1, 0, 0, 0]' : 0.120203}

out:
 ["{'[6, 5, 4, 0, 3, 3, 1, 0, 0, 0, 27, 3, 1, 0, 1, 0, 0, 0]' : 0.14281}", "{'[6, 5, 4, 0, 3, 3, 1, 0, 0, 0, 27, 3, 1, 0, 1, 0, 0, 0]' : 0.14254}", "{'[6, 5, 4, 0, 3, 3, 1, 0, 0, 0, 27, 3, 1, 0, 1, 0, 0, 0]' : 0.142507}", "{'[6, 5, 4, 0, 3, 3, 1, 0, 0, 0, 27, 3, 1, 0, 1, 0, 0, 0]' : 0.129658}", "{'[6, 5, 4, 0, 3, 3, 1, 0, 0, 0, 27, 3, 1, 0, 1, 0, 0, 0]' : 0.120375}", "{'[6, 5, 4, 0, 3, 3, 1, 0, 0, 0, 27, 3, 1, 0, 1, 0, 0, 0]' : 0.120341}", "{'[6, 5, 4, 0, 3, 3, 1, 0, 0, 0, 27, 3, 1, 0, 1, 0, 0, 0]' : 0.120646}", "{'[6, 5, 4, 0, 3, 3, 1, 0, 0, 0, 27, 3, 1, 0, 1, 0, 0, 0]' : 0.121042}", "{'[6, 5, 4, 0, 3, 3, 1, 0, 0, 0, 27, 3, 1, 0, 1, 0, 0, 0]' : 0.12037}", "{'[6, 5, 4, 0, 3, 3, 1, 0, 0, 0, 27, 3, 1, 0, 1, 0, 0, 0]' : 0.120245}", "{'[6, 5, 4, 0, 3, 3, 1, 0, 0, 0, 27, 3, 1, 0, 1, 0, 0, 0]' : 0.119919}", "{'[6, 5, 4, 0, 3, 3, 1, 0, 0, 0, 27, 3, 1, 0, 1, 0, 0, 0]' : 0.12042}", "{'[6, 5, 4, 0, 3, 3, 1, 0, 0, 0, 27, 3, 1, 0, 1, 0, 0, 0]' : 0.120723}", "{'[6, 5, 4, 0, 3, 3, 1, 0, 0, 0, 27, 3, 1, 0, 1, 0, 0, 0]' : 0.121153}", "{'[6, 5, 4, 0, 3, 3, 1, 0, 0, 0, 27, 3, 1, 0, 1, 0, 0, 0]' : 0.120086}", "{'[6, 5, 4, 0, 3, 3, 1, 0, 0, 0, 27, 3, 1, 0, 1, 0, 0, 0]' : 0.120531}", "{'[6, 5, 4, 0, 3, 3, 1, 0, 0, 0, 27, 3, 1, 0, 1, 0, 0, 0]' : 0.120382}", "{'[6, 5, 4, 0, 3, 3, 1, 0, 0, 0, 27, 3, 1, 0, 1, 0, 0, 0]' : 0.120326}", "{'[6, 5, 4, 0, 3, 3, 1, 0, 0, 0, 27, 3, 1, 0, 1, 0, 0, 0]' : 0.120008}", "{'[6, 5, 4, 0, 3, 3, 1, 0, 0, 0, 27, 3, 1, 0, 1, 0, 0, 0]' : 0.121803}", "{'[6, 5, 4, 0, 3, 3, 1, 0, 0, 0, 27, 3, 1, 0, 1, 0, 0, 0]' : 0.120587}", "{'[6, 5, 4, 0, 3, 3, 1, 0, 0, 0, 27, 3, 1, 0, 1, 0, 0, 0]' : 0.120147}", "{'[6, 5, 4, 0, 3, 3, 1, 0, 0, 0, 27, 3, 1, 0, 1, 0, 0, 0]' : 0.120167}", "{'[6, 5, 4, 0, 3, 3, 1, 0, 0, 0, 27, 3, 1, 0, 1, 0, 0, 0]' : 0.120334}", "{'[6, 5, 4, 0, 3, 3, 1, 0, 0, 0, 27, 3, 1, 0, 1, 0, 0, 0]' : 0.120546}", "{'[6, 5, 4, 0, 3, 3, 1, 0, 0, 0, 27, 3, 1, 0, 1, 0, 0, 0]' : 0.120167}", "{'[6, 5, 4, 0, 3, 3, 1, 0, 0, 0, 27, 3, 1, 0, 1, 0, 0, 0]' : 0.120008}", "{'[6, 5, 4, 0, 3, 3, 1, 0, 0, 0, 27, 3, 1, 0, 1, 0, 0, 0]' : 0.120344}", "{'[6, 5, 4, 0, 3, 3, 1, 0, 0, 0, 27, 3, 1, 0, 1, 0, 0, 0]' : 0.120451}", "{'[6, 5, 4, 0, 3, 3, 1, 0, 0, 0, 27, 3, 1, 0, 1, 0, 0, 0]' : 0.120203}"]
returning from 'run': {'[6, 5, 4, 0, 3, 3, 1, 0, 0, 0, 27, 3, 1, 0, 1, 0, 0, 0]': ([0.14281, 0.14254, 0.142507, 0.129658, 0.120375, 0.120341, 0.120646, 0.121042, 0.12037, 0.120245, 0.119919, 0.12042, 0.120723, 0.121153, 0.120086, 0.120531, 0.120382, 0.120326, 0.120008, 0.121803, 0.120587, 0.120147, 0.120167, 0.120334, 0.120546, 0.120167, 0.120008, 0.120344, 0.120451, 0.120203], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 5, 4, 0, 3, 3, 1, 0, 0, 0, 27, 3, 1, 0, 1, 0, 0, 0]': ([0.14281, 0.14254, 0.142507, 0.129658, 0.120375, 0.120341, 0.120646, 0.121042, 0.12037, 0.120245, 0.119919, 0.12042, 0.120723, 0.121153, 0.120086, 0.120531, 0.120382, 0.120326, 0.120008, 0.121803, 0.120587, 0.120147, 0.120167, 0.120334, 0.120546, 0.120167, 0.120008, 0.120344, 0.120451, 0.120203], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	89
        Max loop nest depth: 	5
        Additions: 		2429
        Multiplications: 	900
        Divisions: 		0
        Logical: 		0
        Reads: 			4527
        Writes: 		789
        Comparisons:		89
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest2.exe __orio_perftest2.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest2.exe  
Program Test Output: 
{'[0, 6, 3, 2, 5, 6, 0, 1, 26, 16, 7, 0, 0, 1, 1, 1, 1, 0]' : 0.184616}
{'[0, 6, 3, 2, 5, 6, 0, 1, 26, 16, 7, 0, 0, 1, 1, 1, 1, 0]' : 0.169405}
{'[0, 6, 3, 2, 5, 6, 0, 1, 26, 16, 7, 0, 0, 1, 1, 1, 1, 0]' : 0.163504}
{'[0, 6, 3, 2, 5, 6, 0, 1, 26, 16, 7, 0, 0, 1, 1, 1, 1, 0]' : 0.160852}
{'[0, 6, 3, 2, 5, 6, 0, 1, 26, 16, 7, 0, 0, 1, 1, 1, 1, 0]' : 0.16082}
{'[0, 6, 3, 2, 5, 6, 0, 1, 26, 16, 7, 0, 0, 1, 1, 1, 1, 0]' : 0.161419}
{'[0, 6, 3, 2, 5, 6, 0, 1, 26, 16, 7, 0, 0, 1, 1, 1, 1, 0]' : 0.16104}
{'[0, 6, 3, 2, 5, 6, 0, 1, 26, 16, 7, 0, 0, 1, 1, 1, 1, 0]' : 0.16086}
{'[0, 6, 3, 2, 5, 6, 0, 1, 26, 16, 7, 0, 0, 1, 1, 1, 1, 0]' : 0.162747}
{'[0, 6, 3, 2, 5, 6, 0, 1, 26, 16, 7, 0, 0, 1, 1, 1, 1, 0]' : 0.164115}
{'[0, 6, 3, 2, 5, 6, 0, 1, 26, 16, 7, 0, 0, 1, 1, 1, 1, 0]' : 0.160719}
{'[0, 6, 3, 2, 5, 6, 0, 1, 26, 16, 7, 0, 0, 1, 1, 1, 1, 0]' : 0.162395}
{'[0, 6, 3, 2, 5, 6, 0, 1, 26, 16, 7, 0, 0, 1, 1, 1, 1, 0]' : 0.161988}
{'[0, 6, 3, 2, 5, 6, 0, 1, 26, 16, 7, 0, 0, 1, 1, 1, 1, 0]' : 0.160998}
{'[0, 6, 3, 2, 5, 6, 0, 1, 26, 16, 7, 0, 0, 1, 1, 1, 1, 0]' : 0.16231}
{'[0, 6, 3, 2, 5, 6, 0, 1, 26, 16, 7, 0, 0, 1, 1, 1, 1, 0]' : 0.161591}
{'[0, 6, 3, 2, 5, 6, 0, 1, 26, 16, 7, 0, 0, 1, 1, 1, 1, 0]' : 0.156012}
{'[0, 6, 3, 2, 5, 6, 0, 1, 26, 16, 7, 0, 0, 1, 1, 1, 1, 0]' : 0.158656}
{'[0, 6, 3, 2, 5, 6, 0, 1, 26, 16, 7, 0, 0, 1, 1, 1, 1, 0]' : 0.160806}
{'[0, 6, 3, 2, 5, 6, 0, 1, 26, 16, 7, 0, 0, 1, 1, 1, 1, 0]' : 0.156563}
{'[0, 6, 3, 2, 5, 6, 0, 1, 26, 16, 7, 0, 0, 1, 1, 1, 1, 0]' : 0.159333}
{'[0, 6, 3, 2, 5, 6, 0, 1, 26, 16, 7, 0, 0, 1, 1, 1, 1, 0]' : 0.162568}
{'[0, 6, 3, 2, 5, 6, 0, 1, 26, 16, 7, 0, 0, 1, 1, 1, 1, 0]' : 0.158116}
{'[0, 6, 3, 2, 5, 6, 0, 1, 26, 16, 7, 0, 0, 1, 1, 1, 1, 0]' : 0.160509}
{'[0, 6, 3, 2, 5, 6, 0, 1, 26, 16, 7, 0, 0, 1, 1, 1, 1, 0]' : 0.161078}
{'[0, 6, 3, 2, 5, 6, 0, 1, 26, 16, 7, 0, 0, 1, 1, 1, 1, 0]' : 0.16042}
{'[0, 6, 3, 2, 5, 6, 0, 1, 26, 16, 7, 0, 0, 1, 1, 1, 1, 0]' : 0.157093}
{'[0, 6, 3, 2, 5, 6, 0, 1, 26, 16, 7, 0, 0, 1, 1, 1, 1, 0]' : 0.164564}
{'[0, 6, 3, 2, 5, 6, 0, 1, 26, 16, 7, 0, 0, 1, 1, 1, 1, 0]' : 0.161487}
{'[0, 6, 3, 2, 5, 6, 0, 1, 26, 16, 7, 0, 0, 1, 1, 1, 1, 0]' : 0.160417}

out:
 ["{'[0, 6, 3, 2, 5, 6, 0, 1, 26, 16, 7, 0, 0, 1, 1, 1, 1, 0]' : 0.184616}", "{'[0, 6, 3, 2, 5, 6, 0, 1, 26, 16, 7, 0, 0, 1, 1, 1, 1, 0]' : 0.169405}", "{'[0, 6, 3, 2, 5, 6, 0, 1, 26, 16, 7, 0, 0, 1, 1, 1, 1, 0]' : 0.163504}", "{'[0, 6, 3, 2, 5, 6, 0, 1, 26, 16, 7, 0, 0, 1, 1, 1, 1, 0]' : 0.160852}", "{'[0, 6, 3, 2, 5, 6, 0, 1, 26, 16, 7, 0, 0, 1, 1, 1, 1, 0]' : 0.16082}", "{'[0, 6, 3, 2, 5, 6, 0, 1, 26, 16, 7, 0, 0, 1, 1, 1, 1, 0]' : 0.161419}", "{'[0, 6, 3, 2, 5, 6, 0, 1, 26, 16, 7, 0, 0, 1, 1, 1, 1, 0]' : 0.16104}", "{'[0, 6, 3, 2, 5, 6, 0, 1, 26, 16, 7, 0, 0, 1, 1, 1, 1, 0]' : 0.16086}", "{'[0, 6, 3, 2, 5, 6, 0, 1, 26, 16, 7, 0, 0, 1, 1, 1, 1, 0]' : 0.162747}", "{'[0, 6, 3, 2, 5, 6, 0, 1, 26, 16, 7, 0, 0, 1, 1, 1, 1, 0]' : 0.164115}", "{'[0, 6, 3, 2, 5, 6, 0, 1, 26, 16, 7, 0, 0, 1, 1, 1, 1, 0]' : 0.160719}", "{'[0, 6, 3, 2, 5, 6, 0, 1, 26, 16, 7, 0, 0, 1, 1, 1, 1, 0]' : 0.162395}", "{'[0, 6, 3, 2, 5, 6, 0, 1, 26, 16, 7, 0, 0, 1, 1, 1, 1, 0]' : 0.161988}", "{'[0, 6, 3, 2, 5, 6, 0, 1, 26, 16, 7, 0, 0, 1, 1, 1, 1, 0]' : 0.160998}", "{'[0, 6, 3, 2, 5, 6, 0, 1, 26, 16, 7, 0, 0, 1, 1, 1, 1, 0]' : 0.16231}", "{'[0, 6, 3, 2, 5, 6, 0, 1, 26, 16, 7, 0, 0, 1, 1, 1, 1, 0]' : 0.161591}", "{'[0, 6, 3, 2, 5, 6, 0, 1, 26, 16, 7, 0, 0, 1, 1, 1, 1, 0]' : 0.156012}", "{'[0, 6, 3, 2, 5, 6, 0, 1, 26, 16, 7, 0, 0, 1, 1, 1, 1, 0]' : 0.158656}", "{'[0, 6, 3, 2, 5, 6, 0, 1, 26, 16, 7, 0, 0, 1, 1, 1, 1, 0]' : 0.160806}", "{'[0, 6, 3, 2, 5, 6, 0, 1, 26, 16, 7, 0, 0, 1, 1, 1, 1, 0]' : 0.156563}", "{'[0, 6, 3, 2, 5, 6, 0, 1, 26, 16, 7, 0, 0, 1, 1, 1, 1, 0]' : 0.159333}", "{'[0, 6, 3, 2, 5, 6, 0, 1, 26, 16, 7, 0, 0, 1, 1, 1, 1, 0]' : 0.162568}", "{'[0, 6, 3, 2, 5, 6, 0, 1, 26, 16, 7, 0, 0, 1, 1, 1, 1, 0]' : 0.158116}", "{'[0, 6, 3, 2, 5, 6, 0, 1, 26, 16, 7, 0, 0, 1, 1, 1, 1, 0]' : 0.160509}", "{'[0, 6, 3, 2, 5, 6, 0, 1, 26, 16, 7, 0, 0, 1, 1, 1, 1, 0]' : 0.161078}", "{'[0, 6, 3, 2, 5, 6, 0, 1, 26, 16, 7, 0, 0, 1, 1, 1, 1, 0]' : 0.16042}", "{'[0, 6, 3, 2, 5, 6, 0, 1, 26, 16, 7, 0, 0, 1, 1, 1, 1, 0]' : 0.157093}", "{'[0, 6, 3, 2, 5, 6, 0, 1, 26, 16, 7, 0, 0, 1, 1, 1, 1, 0]' : 0.164564}", "{'[0, 6, 3, 2, 5, 6, 0, 1, 26, 16, 7, 0, 0, 1, 1, 1, 1, 0]' : 0.161487}", "{'[0, 6, 3, 2, 5, 6, 0, 1, 26, 16, 7, 0, 0, 1, 1, 1, 1, 0]' : 0.160417}"]
returning from 'run': {'[0, 6, 3, 2, 5, 6, 0, 1, 26, 16, 7, 0, 0, 1, 1, 1, 1, 0]': ([0.184616, 0.169405, 0.163504, 0.160852, 0.16082, 0.161419, 0.16104, 0.16086, 0.162747, 0.164115, 0.160719, 0.162395, 0.161988, 0.160998, 0.16231, 0.161591, 0.156012, 0.158656, 0.160806, 0.156563, 0.159333, 0.162568, 0.158116, 0.160509, 0.161078, 0.16042, 0.157093, 0.164564, 0.161487, 0.160417], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 3, 2, 5, 6, 0, 1, 26, 16, 7, 0, 0, 1, 1, 1, 1, 0]': ([0.184616, 0.169405, 0.163504, 0.160852, 0.16082, 0.161419, 0.16104, 0.16086, 0.162747, 0.164115, 0.160719, 0.162395, 0.161988, 0.160998, 0.16231, 0.161591, 0.156012, 0.158656, 0.160806, 0.156563, 0.159333, 0.162568, 0.158116, 0.160509, 0.161078, 0.16042, 0.157093, 0.164564, 0.161487, 0.160417], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	109
        Max loop nest depth: 	6
        Additions: 		8492
        Multiplications: 	2356
        Divisions: 		0
        Logical: 		0
        Reads: 			12927
        Writes: 		1468
        Comparisons:		109
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest3.exe __orio_perftest3.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest3.exe  
Program Test Output: 
{'[4, 4, 1, 3, 0, 2, 1, 0, 5, 29, 0, 27, 0, 0, 1, 0, 1, 0]' : 0.22837}
{'[4, 4, 1, 3, 0, 2, 1, 0, 5, 29, 0, 27, 0, 0, 1, 0, 1, 0]' : 0.228404}
{'[4, 4, 1, 3, 0, 2, 1, 0, 5, 29, 0, 27, 0, 0, 1, 0, 1, 0]' : 0.222557}
{'[4, 4, 1, 3, 0, 2, 1, 0, 5, 29, 0, 27, 0, 0, 1, 0, 1, 0]' : 0.224713}
{'[4, 4, 1, 3, 0, 2, 1, 0, 5, 29, 0, 27, 0, 0, 1, 0, 1, 0]' : 0.22197}
{'[4, 4, 1, 3, 0, 2, 1, 0, 5, 29, 0, 27, 0, 0, 1, 0, 1, 0]' : 0.231202}
{'[4, 4, 1, 3, 0, 2, 1, 0, 5, 29, 0, 27, 0, 0, 1, 0, 1, 0]' : 0.226554}
{'[4, 4, 1, 3, 0, 2, 1, 0, 5, 29, 0, 27, 0, 0, 1, 0, 1, 0]' : 0.230151}
{'[4, 4, 1, 3, 0, 2, 1, 0, 5, 29, 0, 27, 0, 0, 1, 0, 1, 0]' : 0.231969}
{'[4, 4, 1, 3, 0, 2, 1, 0, 5, 29, 0, 27, 0, 0, 1, 0, 1, 0]' : 0.232369}
{'[4, 4, 1, 3, 0, 2, 1, 0, 5, 29, 0, 27, 0, 0, 1, 0, 1, 0]' : 0.231357}
{'[4, 4, 1, 3, 0, 2, 1, 0, 5, 29, 0, 27, 0, 0, 1, 0, 1, 0]' : 0.22504}
{'[4, 4, 1, 3, 0, 2, 1, 0, 5, 29, 0, 27, 0, 0, 1, 0, 1, 0]' : 0.232389}
{'[4, 4, 1, 3, 0, 2, 1, 0, 5, 29, 0, 27, 0, 0, 1, 0, 1, 0]' : 0.232221}
{'[4, 4, 1, 3, 0, 2, 1, 0, 5, 29, 0, 27, 0, 0, 1, 0, 1, 0]' : 0.232044}
{'[4, 4, 1, 3, 0, 2, 1, 0, 5, 29, 0, 27, 0, 0, 1, 0, 1, 0]' : 0.231925}
{'[4, 4, 1, 3, 0, 2, 1, 0, 5, 29, 0, 27, 0, 0, 1, 0, 1, 0]' : 0.233146}
{'[4, 4, 1, 3, 0, 2, 1, 0, 5, 29, 0, 27, 0, 0, 1, 0, 1, 0]' : 0.232435}
{'[4, 4, 1, 3, 0, 2, 1, 0, 5, 29, 0, 27, 0, 0, 1, 0, 1, 0]' : 0.232515}
{'[4, 4, 1, 3, 0, 2, 1, 0, 5, 29, 0, 27, 0, 0, 1, 0, 1, 0]' : 0.231787}
{'[4, 4, 1, 3, 0, 2, 1, 0, 5, 29, 0, 27, 0, 0, 1, 0, 1, 0]' : 0.229985}
{'[4, 4, 1, 3, 0, 2, 1, 0, 5, 29, 0, 27, 0, 0, 1, 0, 1, 0]' : 0.232206}
{'[4, 4, 1, 3, 0, 2, 1, 0, 5, 29, 0, 27, 0, 0, 1, 0, 1, 0]' : 0.229758}
{'[4, 4, 1, 3, 0, 2, 1, 0, 5, 29, 0, 27, 0, 0, 1, 0, 1, 0]' : 0.23243}
{'[4, 4, 1, 3, 0, 2, 1, 0, 5, 29, 0, 27, 0, 0, 1, 0, 1, 0]' : 0.231913}
{'[4, 4, 1, 3, 0, 2, 1, 0, 5, 29, 0, 27, 0, 0, 1, 0, 1, 0]' : 0.232262}
{'[4, 4, 1, 3, 0, 2, 1, 0, 5, 29, 0, 27, 0, 0, 1, 0, 1, 0]' : 0.232711}
{'[4, 4, 1, 3, 0, 2, 1, 0, 5, 29, 0, 27, 0, 0, 1, 0, 1, 0]' : 0.2295}
{'[4, 4, 1, 3, 0, 2, 1, 0, 5, 29, 0, 27, 0, 0, 1, 0, 1, 0]' : 0.226231}
{'[4, 4, 1, 3, 0, 2, 1, 0, 5, 29, 0, 27, 0, 0, 1, 0, 1, 0]' : 0.232129}

out:
 ["{'[4, 4, 1, 3, 0, 2, 1, 0, 5, 29, 0, 27, 0, 0, 1, 0, 1, 0]' : 0.22837}", "{'[4, 4, 1, 3, 0, 2, 1, 0, 5, 29, 0, 27, 0, 0, 1, 0, 1, 0]' : 0.228404}", "{'[4, 4, 1, 3, 0, 2, 1, 0, 5, 29, 0, 27, 0, 0, 1, 0, 1, 0]' : 0.222557}", "{'[4, 4, 1, 3, 0, 2, 1, 0, 5, 29, 0, 27, 0, 0, 1, 0, 1, 0]' : 0.224713}", "{'[4, 4, 1, 3, 0, 2, 1, 0, 5, 29, 0, 27, 0, 0, 1, 0, 1, 0]' : 0.22197}", "{'[4, 4, 1, 3, 0, 2, 1, 0, 5, 29, 0, 27, 0, 0, 1, 0, 1, 0]' : 0.231202}", "{'[4, 4, 1, 3, 0, 2, 1, 0, 5, 29, 0, 27, 0, 0, 1, 0, 1, 0]' : 0.226554}", "{'[4, 4, 1, 3, 0, 2, 1, 0, 5, 29, 0, 27, 0, 0, 1, 0, 1, 0]' : 0.230151}", "{'[4, 4, 1, 3, 0, 2, 1, 0, 5, 29, 0, 27, 0, 0, 1, 0, 1, 0]' : 0.231969}", "{'[4, 4, 1, 3, 0, 2, 1, 0, 5, 29, 0, 27, 0, 0, 1, 0, 1, 0]' : 0.232369}", "{'[4, 4, 1, 3, 0, 2, 1, 0, 5, 29, 0, 27, 0, 0, 1, 0, 1, 0]' : 0.231357}", "{'[4, 4, 1, 3, 0, 2, 1, 0, 5, 29, 0, 27, 0, 0, 1, 0, 1, 0]' : 0.22504}", "{'[4, 4, 1, 3, 0, 2, 1, 0, 5, 29, 0, 27, 0, 0, 1, 0, 1, 0]' : 0.232389}", "{'[4, 4, 1, 3, 0, 2, 1, 0, 5, 29, 0, 27, 0, 0, 1, 0, 1, 0]' : 0.232221}", "{'[4, 4, 1, 3, 0, 2, 1, 0, 5, 29, 0, 27, 0, 0, 1, 0, 1, 0]' : 0.232044}", "{'[4, 4, 1, 3, 0, 2, 1, 0, 5, 29, 0, 27, 0, 0, 1, 0, 1, 0]' : 0.231925}", "{'[4, 4, 1, 3, 0, 2, 1, 0, 5, 29, 0, 27, 0, 0, 1, 0, 1, 0]' : 0.233146}", "{'[4, 4, 1, 3, 0, 2, 1, 0, 5, 29, 0, 27, 0, 0, 1, 0, 1, 0]' : 0.232435}", "{'[4, 4, 1, 3, 0, 2, 1, 0, 5, 29, 0, 27, 0, 0, 1, 0, 1, 0]' : 0.232515}", "{'[4, 4, 1, 3, 0, 2, 1, 0, 5, 29, 0, 27, 0, 0, 1, 0, 1, 0]' : 0.231787}", "{'[4, 4, 1, 3, 0, 2, 1, 0, 5, 29, 0, 27, 0, 0, 1, 0, 1, 0]' : 0.229985}", "{'[4, 4, 1, 3, 0, 2, 1, 0, 5, 29, 0, 27, 0, 0, 1, 0, 1, 0]' : 0.232206}", "{'[4, 4, 1, 3, 0, 2, 1, 0, 5, 29, 0, 27, 0, 0, 1, 0, 1, 0]' : 0.229758}", "{'[4, 4, 1, 3, 0, 2, 1, 0, 5, 29, 0, 27, 0, 0, 1, 0, 1, 0]' : 0.23243}", "{'[4, 4, 1, 3, 0, 2, 1, 0, 5, 29, 0, 27, 0, 0, 1, 0, 1, 0]' : 0.231913}", "{'[4, 4, 1, 3, 0, 2, 1, 0, 5, 29, 0, 27, 0, 0, 1, 0, 1, 0]' : 0.232262}", "{'[4, 4, 1, 3, 0, 2, 1, 0, 5, 29, 0, 27, 0, 0, 1, 0, 1, 0]' : 0.232711}", "{'[4, 4, 1, 3, 0, 2, 1, 0, 5, 29, 0, 27, 0, 0, 1, 0, 1, 0]' : 0.2295}", "{'[4, 4, 1, 3, 0, 2, 1, 0, 5, 29, 0, 27, 0, 0, 1, 0, 1, 0]' : 0.226231}", "{'[4, 4, 1, 3, 0, 2, 1, 0, 5, 29, 0, 27, 0, 0, 1, 0, 1, 0]' : 0.232129}"]
returning from 'run': {'[4, 4, 1, 3, 0, 2, 1, 0, 5, 29, 0, 27, 0, 0, 1, 0, 1, 0]': ([0.22837, 0.228404, 0.222557, 0.224713, 0.22197, 0.231202, 0.226554, 0.230151, 0.231969, 0.232369, 0.231357, 0.22504, 0.232389, 0.232221, 0.232044, 0.231925, 0.233146, 0.232435, 0.232515, 0.231787, 0.229985, 0.232206, 0.229758, 0.23243, 0.231913, 0.232262, 0.232711, 0.2295, 0.226231, 0.232129], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 4, 1, 3, 0, 2, 1, 0, 5, 29, 0, 27, 0, 0, 1, 0, 1, 0]': ([0.22837, 0.228404, 0.222557, 0.224713, 0.22197, 0.231202, 0.226554, 0.230151, 0.231969, 0.232369, 0.231357, 0.22504, 0.232389, 0.232221, 0.232044, 0.231925, 0.233146, 0.232435, 0.232515, 0.231787, 0.229985, 0.232206, 0.229758, 0.23243, 0.231913, 0.232262, 0.232711, 0.2295, 0.226231, 0.232129], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	5
        Additions: 		175
        Multiplications: 	46
        Divisions: 		0
        Logical: 		0
        Reads: 			384
        Writes: 		95
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest4.exe __orio_perftest4.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest4.exe  
Program Test Output: 
{'[6, 1, 0, 0, 5, 0, 1, 0, 26, 0, 12, 7, 0, 0, 0, 1, 0, 0]' : 0.185514}
{'[6, 1, 0, 0, 5, 0, 1, 0, 26, 0, 12, 7, 0, 0, 0, 1, 0, 0]' : 0.185482}
{'[6, 1, 0, 0, 5, 0, 1, 0, 26, 0, 12, 7, 0, 0, 0, 1, 0, 0]' : 0.182653}
{'[6, 1, 0, 0, 5, 0, 1, 0, 26, 0, 12, 7, 0, 0, 0, 1, 0, 0]' : 0.185536}
{'[6, 1, 0, 0, 5, 0, 1, 0, 26, 0, 12, 7, 0, 0, 0, 1, 0, 0]' : 0.185648}
{'[6, 1, 0, 0, 5, 0, 1, 0, 26, 0, 12, 7, 0, 0, 0, 1, 0, 0]' : 0.185644}
{'[6, 1, 0, 0, 5, 0, 1, 0, 26, 0, 12, 7, 0, 0, 0, 1, 0, 0]' : 0.185553}
{'[6, 1, 0, 0, 5, 0, 1, 0, 26, 0, 12, 7, 0, 0, 0, 1, 0, 0]' : 0.18573}
{'[6, 1, 0, 0, 5, 0, 1, 0, 26, 0, 12, 7, 0, 0, 0, 1, 0, 0]' : 0.185694}
{'[6, 1, 0, 0, 5, 0, 1, 0, 26, 0, 12, 7, 0, 0, 0, 1, 0, 0]' : 0.185411}
{'[6, 1, 0, 0, 5, 0, 1, 0, 26, 0, 12, 7, 0, 0, 0, 1, 0, 0]' : 0.185573}
{'[6, 1, 0, 0, 5, 0, 1, 0, 26, 0, 12, 7, 0, 0, 0, 1, 0, 0]' : 0.186011}
{'[6, 1, 0, 0, 5, 0, 1, 0, 26, 0, 12, 7, 0, 0, 0, 1, 0, 0]' : 0.185527}
{'[6, 1, 0, 0, 5, 0, 1, 0, 26, 0, 12, 7, 0, 0, 0, 1, 0, 0]' : 0.183567}
{'[6, 1, 0, 0, 5, 0, 1, 0, 26, 0, 12, 7, 0, 0, 0, 1, 0, 0]' : 0.185418}
{'[6, 1, 0, 0, 5, 0, 1, 0, 26, 0, 12, 7, 0, 0, 0, 1, 0, 0]' : 0.185409}
{'[6, 1, 0, 0, 5, 0, 1, 0, 26, 0, 12, 7, 0, 0, 0, 1, 0, 0]' : 0.185468}
{'[6, 1, 0, 0, 5, 0, 1, 0, 26, 0, 12, 7, 0, 0, 0, 1, 0, 0]' : 0.185956}
{'[6, 1, 0, 0, 5, 0, 1, 0, 26, 0, 12, 7, 0, 0, 0, 1, 0, 0]' : 0.185766}
{'[6, 1, 0, 0, 5, 0, 1, 0, 26, 0, 12, 7, 0, 0, 0, 1, 0, 0]' : 0.185518}
{'[6, 1, 0, 0, 5, 0, 1, 0, 26, 0, 12, 7, 0, 0, 0, 1, 0, 0]' : 0.185584}
{'[6, 1, 0, 0, 5, 0, 1, 0, 26, 0, 12, 7, 0, 0, 0, 1, 0, 0]' : 0.185826}
{'[6, 1, 0, 0, 5, 0, 1, 0, 26, 0, 12, 7, 0, 0, 0, 1, 0, 0]' : 0.185489}
{'[6, 1, 0, 0, 5, 0, 1, 0, 26, 0, 12, 7, 0, 0, 0, 1, 0, 0]' : 0.185078}
{'[6, 1, 0, 0, 5, 0, 1, 0, 26, 0, 12, 7, 0, 0, 0, 1, 0, 0]' : 0.184254}
{'[6, 1, 0, 0, 5, 0, 1, 0, 26, 0, 12, 7, 0, 0, 0, 1, 0, 0]' : 0.185471}
{'[6, 1, 0, 0, 5, 0, 1, 0, 26, 0, 12, 7, 0, 0, 0, 1, 0, 0]' : 0.185644}
{'[6, 1, 0, 0, 5, 0, 1, 0, 26, 0, 12, 7, 0, 0, 0, 1, 0, 0]' : 0.185397}
{'[6, 1, 0, 0, 5, 0, 1, 0, 26, 0, 12, 7, 0, 0, 0, 1, 0, 0]' : 0.185606}
{'[6, 1, 0, 0, 5, 0, 1, 0, 26, 0, 12, 7, 0, 0, 0, 1, 0, 0]' : 0.18566}

out:
 ["{'[6, 1, 0, 0, 5, 0, 1, 0, 26, 0, 12, 7, 0, 0, 0, 1, 0, 0]' : 0.185514}", "{'[6, 1, 0, 0, 5, 0, 1, 0, 26, 0, 12, 7, 0, 0, 0, 1, 0, 0]' : 0.185482}", "{'[6, 1, 0, 0, 5, 0, 1, 0, 26, 0, 12, 7, 0, 0, 0, 1, 0, 0]' : 0.182653}", "{'[6, 1, 0, 0, 5, 0, 1, 0, 26, 0, 12, 7, 0, 0, 0, 1, 0, 0]' : 0.185536}", "{'[6, 1, 0, 0, 5, 0, 1, 0, 26, 0, 12, 7, 0, 0, 0, 1, 0, 0]' : 0.185648}", "{'[6, 1, 0, 0, 5, 0, 1, 0, 26, 0, 12, 7, 0, 0, 0, 1, 0, 0]' : 0.185644}", "{'[6, 1, 0, 0, 5, 0, 1, 0, 26, 0, 12, 7, 0, 0, 0, 1, 0, 0]' : 0.185553}", "{'[6, 1, 0, 0, 5, 0, 1, 0, 26, 0, 12, 7, 0, 0, 0, 1, 0, 0]' : 0.18573}", "{'[6, 1, 0, 0, 5, 0, 1, 0, 26, 0, 12, 7, 0, 0, 0, 1, 0, 0]' : 0.185694}", "{'[6, 1, 0, 0, 5, 0, 1, 0, 26, 0, 12, 7, 0, 0, 0, 1, 0, 0]' : 0.185411}", "{'[6, 1, 0, 0, 5, 0, 1, 0, 26, 0, 12, 7, 0, 0, 0, 1, 0, 0]' : 0.185573}", "{'[6, 1, 0, 0, 5, 0, 1, 0, 26, 0, 12, 7, 0, 0, 0, 1, 0, 0]' : 0.186011}", "{'[6, 1, 0, 0, 5, 0, 1, 0, 26, 0, 12, 7, 0, 0, 0, 1, 0, 0]' : 0.185527}", "{'[6, 1, 0, 0, 5, 0, 1, 0, 26, 0, 12, 7, 0, 0, 0, 1, 0, 0]' : 0.183567}", "{'[6, 1, 0, 0, 5, 0, 1, 0, 26, 0, 12, 7, 0, 0, 0, 1, 0, 0]' : 0.185418}", "{'[6, 1, 0, 0, 5, 0, 1, 0, 26, 0, 12, 7, 0, 0, 0, 1, 0, 0]' : 0.185409}", "{'[6, 1, 0, 0, 5, 0, 1, 0, 26, 0, 12, 7, 0, 0, 0, 1, 0, 0]' : 0.185468}", "{'[6, 1, 0, 0, 5, 0, 1, 0, 26, 0, 12, 7, 0, 0, 0, 1, 0, 0]' : 0.185956}", "{'[6, 1, 0, 0, 5, 0, 1, 0, 26, 0, 12, 7, 0, 0, 0, 1, 0, 0]' : 0.185766}", "{'[6, 1, 0, 0, 5, 0, 1, 0, 26, 0, 12, 7, 0, 0, 0, 1, 0, 0]' : 0.185518}", "{'[6, 1, 0, 0, 5, 0, 1, 0, 26, 0, 12, 7, 0, 0, 0, 1, 0, 0]' : 0.185584}", "{'[6, 1, 0, 0, 5, 0, 1, 0, 26, 0, 12, 7, 0, 0, 0, 1, 0, 0]' : 0.185826}", "{'[6, 1, 0, 0, 5, 0, 1, 0, 26, 0, 12, 7, 0, 0, 0, 1, 0, 0]' : 0.185489}", "{'[6, 1, 0, 0, 5, 0, 1, 0, 26, 0, 12, 7, 0, 0, 0, 1, 0, 0]' : 0.185078}", "{'[6, 1, 0, 0, 5, 0, 1, 0, 26, 0, 12, 7, 0, 0, 0, 1, 0, 0]' : 0.184254}", "{'[6, 1, 0, 0, 5, 0, 1, 0, 26, 0, 12, 7, 0, 0, 0, 1, 0, 0]' : 0.185471}", "{'[6, 1, 0, 0, 5, 0, 1, 0, 26, 0, 12, 7, 0, 0, 0, 1, 0, 0]' : 0.185644}", "{'[6, 1, 0, 0, 5, 0, 1, 0, 26, 0, 12, 7, 0, 0, 0, 1, 0, 0]' : 0.185397}", "{'[6, 1, 0, 0, 5, 0, 1, 0, 26, 0, 12, 7, 0, 0, 0, 1, 0, 0]' : 0.185606}", "{'[6, 1, 0, 0, 5, 0, 1, 0, 26, 0, 12, 7, 0, 0, 0, 1, 0, 0]' : 0.18566}"]
returning from 'run': {'[6, 1, 0, 0, 5, 0, 1, 0, 26, 0, 12, 7, 0, 0, 0, 1, 0, 0]': ([0.185514, 0.185482, 0.182653, 0.185536, 0.185648, 0.185644, 0.185553, 0.18573, 0.185694, 0.185411, 0.185573, 0.186011, 0.185527, 0.183567, 0.185418, 0.185409, 0.185468, 0.185956, 0.185766, 0.185518, 0.185584, 0.185826, 0.185489, 0.185078, 0.184254, 0.185471, 0.185644, 0.185397, 0.185606, 0.18566], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 1, 0, 0, 5, 0, 1, 0, 26, 0, 12, 7, 0, 0, 0, 1, 0, 0]': ([0.185514, 0.185482, 0.182653, 0.185536, 0.185648, 0.185644, 0.185553, 0.18573, 0.185694, 0.185411, 0.185573, 0.186011, 0.185527, 0.183567, 0.185418, 0.185409, 0.185468, 0.185956, 0.185766, 0.185518, 0.185584, 0.185826, 0.185489, 0.185078, 0.184254, 0.185471, 0.185644, 0.185397, 0.185606, 0.18566], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = jjj
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	17
        Max loop nest depth: 	4
        Additions: 		1878
        Multiplications: 	924
        Divisions: 		0
        Logical: 		0
        Reads: 			3721
        Writes: 		624
        Comparisons:		17
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest5.exe __orio_perftest5.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest5.exe  
Program Test Output: 
{'[0, 4, 6, 2, 2, 4, 0, 0, 8, 0, 4, 6, 2, 0, 0, 1, 0, 1]' : 0.182108}
{'[0, 4, 6, 2, 2, 4, 0, 0, 8, 0, 4, 6, 2, 0, 0, 1, 0, 1]' : 0.183467}
{'[0, 4, 6, 2, 2, 4, 0, 0, 8, 0, 4, 6, 2, 0, 0, 1, 0, 1]' : 0.181065}
{'[0, 4, 6, 2, 2, 4, 0, 0, 8, 0, 4, 6, 2, 0, 0, 1, 0, 1]' : 0.179987}
{'[0, 4, 6, 2, 2, 4, 0, 0, 8, 0, 4, 6, 2, 0, 0, 1, 0, 1]' : 0.184905}
{'[0, 4, 6, 2, 2, 4, 0, 0, 8, 0, 4, 6, 2, 0, 0, 1, 0, 1]' : 0.182569}
{'[0, 4, 6, 2, 2, 4, 0, 0, 8, 0, 4, 6, 2, 0, 0, 1, 0, 1]' : 0.182898}
{'[0, 4, 6, 2, 2, 4, 0, 0, 8, 0, 4, 6, 2, 0, 0, 1, 0, 1]' : 0.181483}
{'[0, 4, 6, 2, 2, 4, 0, 0, 8, 0, 4, 6, 2, 0, 0, 1, 0, 1]' : 0.181792}
{'[0, 4, 6, 2, 2, 4, 0, 0, 8, 0, 4, 6, 2, 0, 0, 1, 0, 1]' : 0.181779}
{'[0, 4, 6, 2, 2, 4, 0, 0, 8, 0, 4, 6, 2, 0, 0, 1, 0, 1]' : 0.1789}
{'[0, 4, 6, 2, 2, 4, 0, 0, 8, 0, 4, 6, 2, 0, 0, 1, 0, 1]' : 0.17843}
{'[0, 4, 6, 2, 2, 4, 0, 0, 8, 0, 4, 6, 2, 0, 0, 1, 0, 1]' : 0.181193}
{'[0, 4, 6, 2, 2, 4, 0, 0, 8, 0, 4, 6, 2, 0, 0, 1, 0, 1]' : 0.181716}
{'[0, 4, 6, 2, 2, 4, 0, 0, 8, 0, 4, 6, 2, 0, 0, 1, 0, 1]' : 0.18115}
{'[0, 4, 6, 2, 2, 4, 0, 0, 8, 0, 4, 6, 2, 0, 0, 1, 0, 1]' : 0.181876}
{'[0, 4, 6, 2, 2, 4, 0, 0, 8, 0, 4, 6, 2, 0, 0, 1, 0, 1]' : 0.179366}
{'[0, 4, 6, 2, 2, 4, 0, 0, 8, 0, 4, 6, 2, 0, 0, 1, 0, 1]' : 0.178487}
{'[0, 4, 6, 2, 2, 4, 0, 0, 8, 0, 4, 6, 2, 0, 0, 1, 0, 1]' : 0.183979}
{'[0, 4, 6, 2, 2, 4, 0, 0, 8, 0, 4, 6, 2, 0, 0, 1, 0, 1]' : 0.182848}
{'[0, 4, 6, 2, 2, 4, 0, 0, 8, 0, 4, 6, 2, 0, 0, 1, 0, 1]' : 0.183023}
{'[0, 4, 6, 2, 2, 4, 0, 0, 8, 0, 4, 6, 2, 0, 0, 1, 0, 1]' : 0.18342}
{'[0, 4, 6, 2, 2, 4, 0, 0, 8, 0, 4, 6, 2, 0, 0, 1, 0, 1]' : 0.181957}
{'[0, 4, 6, 2, 2, 4, 0, 0, 8, 0, 4, 6, 2, 0, 0, 1, 0, 1]' : 0.184169}
{'[0, 4, 6, 2, 2, 4, 0, 0, 8, 0, 4, 6, 2, 0, 0, 1, 0, 1]' : 0.185292}
{'[0, 4, 6, 2, 2, 4, 0, 0, 8, 0, 4, 6, 2, 0, 0, 1, 0, 1]' : 0.185835}
{'[0, 4, 6, 2, 2, 4, 0, 0, 8, 0, 4, 6, 2, 0, 0, 1, 0, 1]' : 0.186148}
{'[0, 4, 6, 2, 2, 4, 0, 0, 8, 0, 4, 6, 2, 0, 0, 1, 0, 1]' : 0.186469}
{'[0, 4, 6, 2, 2, 4, 0, 0, 8, 0, 4, 6, 2, 0, 0, 1, 0, 1]' : 0.185606}
{'[0, 4, 6, 2, 2, 4, 0, 0, 8, 0, 4, 6, 2, 0, 0, 1, 0, 1]' : 0.183198}

out:
 ["{'[0, 4, 6, 2, 2, 4, 0, 0, 8, 0, 4, 6, 2, 0, 0, 1, 0, 1]' : 0.182108}", "{'[0, 4, 6, 2, 2, 4, 0, 0, 8, 0, 4, 6, 2, 0, 0, 1, 0, 1]' : 0.183467}", "{'[0, 4, 6, 2, 2, 4, 0, 0, 8, 0, 4, 6, 2, 0, 0, 1, 0, 1]' : 0.181065}", "{'[0, 4, 6, 2, 2, 4, 0, 0, 8, 0, 4, 6, 2, 0, 0, 1, 0, 1]' : 0.179987}", "{'[0, 4, 6, 2, 2, 4, 0, 0, 8, 0, 4, 6, 2, 0, 0, 1, 0, 1]' : 0.184905}", "{'[0, 4, 6, 2, 2, 4, 0, 0, 8, 0, 4, 6, 2, 0, 0, 1, 0, 1]' : 0.182569}", "{'[0, 4, 6, 2, 2, 4, 0, 0, 8, 0, 4, 6, 2, 0, 0, 1, 0, 1]' : 0.182898}", "{'[0, 4, 6, 2, 2, 4, 0, 0, 8, 0, 4, 6, 2, 0, 0, 1, 0, 1]' : 0.181483}", "{'[0, 4, 6, 2, 2, 4, 0, 0, 8, 0, 4, 6, 2, 0, 0, 1, 0, 1]' : 0.181792}", "{'[0, 4, 6, 2, 2, 4, 0, 0, 8, 0, 4, 6, 2, 0, 0, 1, 0, 1]' : 0.181779}", "{'[0, 4, 6, 2, 2, 4, 0, 0, 8, 0, 4, 6, 2, 0, 0, 1, 0, 1]' : 0.1789}", "{'[0, 4, 6, 2, 2, 4, 0, 0, 8, 0, 4, 6, 2, 0, 0, 1, 0, 1]' : 0.17843}", "{'[0, 4, 6, 2, 2, 4, 0, 0, 8, 0, 4, 6, 2, 0, 0, 1, 0, 1]' : 0.181193}", "{'[0, 4, 6, 2, 2, 4, 0, 0, 8, 0, 4, 6, 2, 0, 0, 1, 0, 1]' : 0.181716}", "{'[0, 4, 6, 2, 2, 4, 0, 0, 8, 0, 4, 6, 2, 0, 0, 1, 0, 1]' : 0.18115}", "{'[0, 4, 6, 2, 2, 4, 0, 0, 8, 0, 4, 6, 2, 0, 0, 1, 0, 1]' : 0.181876}", "{'[0, 4, 6, 2, 2, 4, 0, 0, 8, 0, 4, 6, 2, 0, 0, 1, 0, 1]' : 0.179366}", "{'[0, 4, 6, 2, 2, 4, 0, 0, 8, 0, 4, 6, 2, 0, 0, 1, 0, 1]' : 0.178487}", "{'[0, 4, 6, 2, 2, 4, 0, 0, 8, 0, 4, 6, 2, 0, 0, 1, 0, 1]' : 0.183979}", "{'[0, 4, 6, 2, 2, 4, 0, 0, 8, 0, 4, 6, 2, 0, 0, 1, 0, 1]' : 0.182848}", "{'[0, 4, 6, 2, 2, 4, 0, 0, 8, 0, 4, 6, 2, 0, 0, 1, 0, 1]' : 0.183023}", "{'[0, 4, 6, 2, 2, 4, 0, 0, 8, 0, 4, 6, 2, 0, 0, 1, 0, 1]' : 0.18342}", "{'[0, 4, 6, 2, 2, 4, 0, 0, 8, 0, 4, 6, 2, 0, 0, 1, 0, 1]' : 0.181957}", "{'[0, 4, 6, 2, 2, 4, 0, 0, 8, 0, 4, 6, 2, 0, 0, 1, 0, 1]' : 0.184169}", "{'[0, 4, 6, 2, 2, 4, 0, 0, 8, 0, 4, 6, 2, 0, 0, 1, 0, 1]' : 0.185292}", "{'[0, 4, 6, 2, 2, 4, 0, 0, 8, 0, 4, 6, 2, 0, 0, 1, 0, 1]' : 0.185835}", "{'[0, 4, 6, 2, 2, 4, 0, 0, 8, 0, 4, 6, 2, 0, 0, 1, 0, 1]' : 0.186148}", "{'[0, 4, 6, 2, 2, 4, 0, 0, 8, 0, 4, 6, 2, 0, 0, 1, 0, 1]' : 0.186469}", "{'[0, 4, 6, 2, 2, 4, 0, 0, 8, 0, 4, 6, 2, 0, 0, 1, 0, 1]' : 0.185606}", "{'[0, 4, 6, 2, 2, 4, 0, 0, 8, 0, 4, 6, 2, 0, 0, 1, 0, 1]' : 0.183198}"]
returning from 'run': {'[0, 4, 6, 2, 2, 4, 0, 0, 8, 0, 4, 6, 2, 0, 0, 1, 0, 1]': ([0.182108, 0.183467, 0.181065, 0.179987, 0.184905, 0.182569, 0.182898, 0.181483, 0.181792, 0.181779, 0.1789, 0.17843, 0.181193, 0.181716, 0.18115, 0.181876, 0.179366, 0.178487, 0.183979, 0.182848, 0.183023, 0.18342, 0.181957, 0.184169, 0.185292, 0.185835, 0.186148, 0.186469, 0.185606, 0.183198], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 4, 6, 2, 2, 4, 0, 0, 8, 0, 4, 6, 2, 0, 0, 1, 0, 1]': ([0.182108, 0.183467, 0.181065, 0.179987, 0.184905, 0.182569, 0.182898, 0.181483, 0.181792, 0.181779, 0.1789, 0.17843, 0.181193, 0.181716, 0.18115, 0.181876, 0.179366, 0.178487, 0.183979, 0.182848, 0.183023, 0.18342, 0.181957, 0.184169, 0.185292, 0.185835, 0.186148, 0.186469, 0.185606, 0.183198], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	6
        Additions: 		424
        Multiplications: 	138
        Divisions: 		0
        Logical: 		0
        Reads: 			1046
        Writes: 		257
        Comparisons:		15
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest6.exe __orio_perftest6.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest6.exe  
Program Test Output: 
{'[2, 1, 5, 6, 6, 4, 1, 0, 27, 0, 6, 27, 0, 0, 2, 1, 1, 0]' : 0.205025}
{'[2, 1, 5, 6, 6, 4, 1, 0, 27, 0, 6, 27, 0, 0, 2, 1, 1, 0]' : 0.192762}
{'[2, 1, 5, 6, 6, 4, 1, 0, 27, 0, 6, 27, 0, 0, 2, 1, 1, 0]' : 0.17576}
{'[2, 1, 5, 6, 6, 4, 1, 0, 27, 0, 6, 27, 0, 0, 2, 1, 1, 0]' : 0.175721}
{'[2, 1, 5, 6, 6, 4, 1, 0, 27, 0, 6, 27, 0, 0, 2, 1, 1, 0]' : 0.175755}
{'[2, 1, 5, 6, 6, 4, 1, 0, 27, 0, 6, 27, 0, 0, 2, 1, 1, 0]' : 0.176112}
{'[2, 1, 5, 6, 6, 4, 1, 0, 27, 0, 6, 27, 0, 0, 2, 1, 1, 0]' : 0.176288}
{'[2, 1, 5, 6, 6, 4, 1, 0, 27, 0, 6, 27, 0, 0, 2, 1, 1, 0]' : 0.175506}
{'[2, 1, 5, 6, 6, 4, 1, 0, 27, 0, 6, 27, 0, 0, 2, 1, 1, 0]' : 0.180763}
{'[2, 1, 5, 6, 6, 4, 1, 0, 27, 0, 6, 27, 0, 0, 2, 1, 1, 0]' : 0.181324}
{'[2, 1, 5, 6, 6, 4, 1, 0, 27, 0, 6, 27, 0, 0, 2, 1, 1, 0]' : 0.17625}
{'[2, 1, 5, 6, 6, 4, 1, 0, 27, 0, 6, 27, 0, 0, 2, 1, 1, 0]' : 0.175614}
{'[2, 1, 5, 6, 6, 4, 1, 0, 27, 0, 6, 27, 0, 0, 2, 1, 1, 0]' : 0.175437}
{'[2, 1, 5, 6, 6, 4, 1, 0, 27, 0, 6, 27, 0, 0, 2, 1, 1, 0]' : 0.172909}
{'[2, 1, 5, 6, 6, 4, 1, 0, 27, 0, 6, 27, 0, 0, 2, 1, 1, 0]' : 0.17547}
{'[2, 1, 5, 6, 6, 4, 1, 0, 27, 0, 6, 27, 0, 0, 2, 1, 1, 0]' : 0.177464}
{'[2, 1, 5, 6, 6, 4, 1, 0, 27, 0, 6, 27, 0, 0, 2, 1, 1, 0]' : 0.177691}
{'[2, 1, 5, 6, 6, 4, 1, 0, 27, 0, 6, 27, 0, 0, 2, 1, 1, 0]' : 0.174117}
{'[2, 1, 5, 6, 6, 4, 1, 0, 27, 0, 6, 27, 0, 0, 2, 1, 1, 0]' : 0.172454}
{'[2, 1, 5, 6, 6, 4, 1, 0, 27, 0, 6, 27, 0, 0, 2, 1, 1, 0]' : 0.171114}
{'[2, 1, 5, 6, 6, 4, 1, 0, 27, 0, 6, 27, 0, 0, 2, 1, 1, 0]' : 0.175295}
{'[2, 1, 5, 6, 6, 4, 1, 0, 27, 0, 6, 27, 0, 0, 2, 1, 1, 0]' : 0.179808}
{'[2, 1, 5, 6, 6, 4, 1, 0, 27, 0, 6, 27, 0, 0, 2, 1, 1, 0]' : 0.176901}
{'[2, 1, 5, 6, 6, 4, 1, 0, 27, 0, 6, 27, 0, 0, 2, 1, 1, 0]' : 0.172586}
{'[2, 1, 5, 6, 6, 4, 1, 0, 27, 0, 6, 27, 0, 0, 2, 1, 1, 0]' : 0.175668}
{'[2, 1, 5, 6, 6, 4, 1, 0, 27, 0, 6, 27, 0, 0, 2, 1, 1, 0]' : 0.175467}
{'[2, 1, 5, 6, 6, 4, 1, 0, 27, 0, 6, 27, 0, 0, 2, 1, 1, 0]' : 0.175716}
{'[2, 1, 5, 6, 6, 4, 1, 0, 27, 0, 6, 27, 0, 0, 2, 1, 1, 0]' : 0.172667}
{'[2, 1, 5, 6, 6, 4, 1, 0, 27, 0, 6, 27, 0, 0, 2, 1, 1, 0]' : 0.170291}
{'[2, 1, 5, 6, 6, 4, 1, 0, 27, 0, 6, 27, 0, 0, 2, 1, 1, 0]' : 0.170722}

out:
 ["{'[2, 1, 5, 6, 6, 4, 1, 0, 27, 0, 6, 27, 0, 0, 2, 1, 1, 0]' : 0.205025}", "{'[2, 1, 5, 6, 6, 4, 1, 0, 27, 0, 6, 27, 0, 0, 2, 1, 1, 0]' : 0.192762}", "{'[2, 1, 5, 6, 6, 4, 1, 0, 27, 0, 6, 27, 0, 0, 2, 1, 1, 0]' : 0.17576}", "{'[2, 1, 5, 6, 6, 4, 1, 0, 27, 0, 6, 27, 0, 0, 2, 1, 1, 0]' : 0.175721}", "{'[2, 1, 5, 6, 6, 4, 1, 0, 27, 0, 6, 27, 0, 0, 2, 1, 1, 0]' : 0.175755}", "{'[2, 1, 5, 6, 6, 4, 1, 0, 27, 0, 6, 27, 0, 0, 2, 1, 1, 0]' : 0.176112}", "{'[2, 1, 5, 6, 6, 4, 1, 0, 27, 0, 6, 27, 0, 0, 2, 1, 1, 0]' : 0.176288}", "{'[2, 1, 5, 6, 6, 4, 1, 0, 27, 0, 6, 27, 0, 0, 2, 1, 1, 0]' : 0.175506}", "{'[2, 1, 5, 6, 6, 4, 1, 0, 27, 0, 6, 27, 0, 0, 2, 1, 1, 0]' : 0.180763}", "{'[2, 1, 5, 6, 6, 4, 1, 0, 27, 0, 6, 27, 0, 0, 2, 1, 1, 0]' : 0.181324}", "{'[2, 1, 5, 6, 6, 4, 1, 0, 27, 0, 6, 27, 0, 0, 2, 1, 1, 0]' : 0.17625}", "{'[2, 1, 5, 6, 6, 4, 1, 0, 27, 0, 6, 27, 0, 0, 2, 1, 1, 0]' : 0.175614}", "{'[2, 1, 5, 6, 6, 4, 1, 0, 27, 0, 6, 27, 0, 0, 2, 1, 1, 0]' : 0.175437}", "{'[2, 1, 5, 6, 6, 4, 1, 0, 27, 0, 6, 27, 0, 0, 2, 1, 1, 0]' : 0.172909}", "{'[2, 1, 5, 6, 6, 4, 1, 0, 27, 0, 6, 27, 0, 0, 2, 1, 1, 0]' : 0.17547}", "{'[2, 1, 5, 6, 6, 4, 1, 0, 27, 0, 6, 27, 0, 0, 2, 1, 1, 0]' : 0.177464}", "{'[2, 1, 5, 6, 6, 4, 1, 0, 27, 0, 6, 27, 0, 0, 2, 1, 1, 0]' : 0.177691}", "{'[2, 1, 5, 6, 6, 4, 1, 0, 27, 0, 6, 27, 0, 0, 2, 1, 1, 0]' : 0.174117}", "{'[2, 1, 5, 6, 6, 4, 1, 0, 27, 0, 6, 27, 0, 0, 2, 1, 1, 0]' : 0.172454}", "{'[2, 1, 5, 6, 6, 4, 1, 0, 27, 0, 6, 27, 0, 0, 2, 1, 1, 0]' : 0.171114}", "{'[2, 1, 5, 6, 6, 4, 1, 0, 27, 0, 6, 27, 0, 0, 2, 1, 1, 0]' : 0.175295}", "{'[2, 1, 5, 6, 6, 4, 1, 0, 27, 0, 6, 27, 0, 0, 2, 1, 1, 0]' : 0.179808}", "{'[2, 1, 5, 6, 6, 4, 1, 0, 27, 0, 6, 27, 0, 0, 2, 1, 1, 0]' : 0.176901}", "{'[2, 1, 5, 6, 6, 4, 1, 0, 27, 0, 6, 27, 0, 0, 2, 1, 1, 0]' : 0.172586}", "{'[2, 1, 5, 6, 6, 4, 1, 0, 27, 0, 6, 27, 0, 0, 2, 1, 1, 0]' : 0.175668}", "{'[2, 1, 5, 6, 6, 4, 1, 0, 27, 0, 6, 27, 0, 0, 2, 1, 1, 0]' : 0.175467}", "{'[2, 1, 5, 6, 6, 4, 1, 0, 27, 0, 6, 27, 0, 0, 2, 1, 1, 0]' : 0.175716}", "{'[2, 1, 5, 6, 6, 4, 1, 0, 27, 0, 6, 27, 0, 0, 2, 1, 1, 0]' : 0.172667}", "{'[2, 1, 5, 6, 6, 4, 1, 0, 27, 0, 6, 27, 0, 0, 2, 1, 1, 0]' : 0.170291}", "{'[2, 1, 5, 6, 6, 4, 1, 0, 27, 0, 6, 27, 0, 0, 2, 1, 1, 0]' : 0.170722}"]
returning from 'run': {'[2, 1, 5, 6, 6, 4, 1, 0, 27, 0, 6, 27, 0, 0, 2, 1, 1, 0]': ([0.205025, 0.192762, 0.17576, 0.175721, 0.175755, 0.176112, 0.176288, 0.175506, 0.180763, 0.181324, 0.17625, 0.175614, 0.175437, 0.172909, 0.17547, 0.177464, 0.177691, 0.174117, 0.172454, 0.171114, 0.175295, 0.179808, 0.176901, 0.172586, 0.175668, 0.175467, 0.175716, 0.172667, 0.170291, 0.170722], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 1, 5, 6, 6, 4, 1, 0, 27, 0, 6, 27, 0, 0, 2, 1, 1, 0]': ([0.205025, 0.192762, 0.17576, 0.175721, 0.175755, 0.176112, 0.176288, 0.175506, 0.180763, 0.181324, 0.17625, 0.175614, 0.175437, 0.172909, 0.17547, 0.177464, 0.177691, 0.174117, 0.172454, 0.171114, 0.175295, 0.179808, 0.176901, 0.172586, 0.175668, 0.175467, 0.175716, 0.172667, 0.170291, 0.170722], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	50
        Max loop nest depth: 	5
        Additions: 		13934
        Multiplications: 	3782
        Divisions: 		0
        Logical: 		0
        Reads: 			20535
        Writes: 		2086
        Comparisons:		50
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest7.exe __orio_perftest7.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest7.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest7.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest7.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest7.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		379
        Multiplications: 	106
        Divisions: 		0
        Logical: 		0
        Reads: 			780
        Writes: 		161
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest8.exe __orio_perftest8.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest8.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest8.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest8.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest8.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	5
        Additions: 		1832
        Multiplications: 	540
        Divisions: 		0
        Logical: 		0
        Reads: 			2981
        Writes: 		332
        Comparisons:		22
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest9.exe __orio_perftest9.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest9.exe  
Program Test Output: 
{'[1, 0, 2, 3, 6, 0, 1, 0, 9, 0, 7, 11, 1, 0, 1, 0, 1, 0]' : 0.11653}
{'[1, 0, 2, 3, 6, 0, 1, 0, 9, 0, 7, 11, 1, 0, 1, 0, 1, 0]' : 0.116064}
{'[1, 0, 2, 3, 6, 0, 1, 0, 9, 0, 7, 11, 1, 0, 1, 0, 1, 0]' : 0.115018}
{'[1, 0, 2, 3, 6, 0, 1, 0, 9, 0, 7, 11, 1, 0, 1, 0, 1, 0]' : 0.115089}
{'[1, 0, 2, 3, 6, 0, 1, 0, 9, 0, 7, 11, 1, 0, 1, 0, 1, 0]' : 0.114931}
{'[1, 0, 2, 3, 6, 0, 1, 0, 9, 0, 7, 11, 1, 0, 1, 0, 1, 0]' : 0.115103}
{'[1, 0, 2, 3, 6, 0, 1, 0, 9, 0, 7, 11, 1, 0, 1, 0, 1, 0]' : 0.114912}
{'[1, 0, 2, 3, 6, 0, 1, 0, 9, 0, 7, 11, 1, 0, 1, 0, 1, 0]' : 0.115113}
{'[1, 0, 2, 3, 6, 0, 1, 0, 9, 0, 7, 11, 1, 0, 1, 0, 1, 0]' : 0.114975}
{'[1, 0, 2, 3, 6, 0, 1, 0, 9, 0, 7, 11, 1, 0, 1, 0, 1, 0]' : 0.115199}
{'[1, 0, 2, 3, 6, 0, 1, 0, 9, 0, 7, 11, 1, 0, 1, 0, 1, 0]' : 0.115976}
{'[1, 0, 2, 3, 6, 0, 1, 0, 9, 0, 7, 11, 1, 0, 1, 0, 1, 0]' : 0.115359}
{'[1, 0, 2, 3, 6, 0, 1, 0, 9, 0, 7, 11, 1, 0, 1, 0, 1, 0]' : 0.114983}
{'[1, 0, 2, 3, 6, 0, 1, 0, 9, 0, 7, 11, 1, 0, 1, 0, 1, 0]' : 0.113465}
{'[1, 0, 2, 3, 6, 0, 1, 0, 9, 0, 7, 11, 1, 0, 1, 0, 1, 0]' : 0.114942}
{'[1, 0, 2, 3, 6, 0, 1, 0, 9, 0, 7, 11, 1, 0, 1, 0, 1, 0]' : 0.115034}
{'[1, 0, 2, 3, 6, 0, 1, 0, 9, 0, 7, 11, 1, 0, 1, 0, 1, 0]' : 0.115658}
{'[1, 0, 2, 3, 6, 0, 1, 0, 9, 0, 7, 11, 1, 0, 1, 0, 1, 0]' : 0.115244}
{'[1, 0, 2, 3, 6, 0, 1, 0, 9, 0, 7, 11, 1, 0, 1, 0, 1, 0]' : 0.114716}
{'[1, 0, 2, 3, 6, 0, 1, 0, 9, 0, 7, 11, 1, 0, 1, 0, 1, 0]' : 0.11508}
{'[1, 0, 2, 3, 6, 0, 1, 0, 9, 0, 7, 11, 1, 0, 1, 0, 1, 0]' : 0.113771}
{'[1, 0, 2, 3, 6, 0, 1, 0, 9, 0, 7, 11, 1, 0, 1, 0, 1, 0]' : 0.112028}
{'[1, 0, 2, 3, 6, 0, 1, 0, 9, 0, 7, 11, 1, 0, 1, 0, 1, 0]' : 0.11619}
{'[1, 0, 2, 3, 6, 0, 1, 0, 9, 0, 7, 11, 1, 0, 1, 0, 1, 0]' : 0.118357}
{'[1, 0, 2, 3, 6, 0, 1, 0, 9, 0, 7, 11, 1, 0, 1, 0, 1, 0]' : 0.118245}
{'[1, 0, 2, 3, 6, 0, 1, 0, 9, 0, 7, 11, 1, 0, 1, 0, 1, 0]' : 0.118411}
{'[1, 0, 2, 3, 6, 0, 1, 0, 9, 0, 7, 11, 1, 0, 1, 0, 1, 0]' : 0.118207}
{'[1, 0, 2, 3, 6, 0, 1, 0, 9, 0, 7, 11, 1, 0, 1, 0, 1, 0]' : 0.118419}
{'[1, 0, 2, 3, 6, 0, 1, 0, 9, 0, 7, 11, 1, 0, 1, 0, 1, 0]' : 0.118214}
{'[1, 0, 2, 3, 6, 0, 1, 0, 9, 0, 7, 11, 1, 0, 1, 0, 1, 0]' : 0.118482}

out:
 ["{'[1, 0, 2, 3, 6, 0, 1, 0, 9, 0, 7, 11, 1, 0, 1, 0, 1, 0]' : 0.11653}", "{'[1, 0, 2, 3, 6, 0, 1, 0, 9, 0, 7, 11, 1, 0, 1, 0, 1, 0]' : 0.116064}", "{'[1, 0, 2, 3, 6, 0, 1, 0, 9, 0, 7, 11, 1, 0, 1, 0, 1, 0]' : 0.115018}", "{'[1, 0, 2, 3, 6, 0, 1, 0, 9, 0, 7, 11, 1, 0, 1, 0, 1, 0]' : 0.115089}", "{'[1, 0, 2, 3, 6, 0, 1, 0, 9, 0, 7, 11, 1, 0, 1, 0, 1, 0]' : 0.114931}", "{'[1, 0, 2, 3, 6, 0, 1, 0, 9, 0, 7, 11, 1, 0, 1, 0, 1, 0]' : 0.115103}", "{'[1, 0, 2, 3, 6, 0, 1, 0, 9, 0, 7, 11, 1, 0, 1, 0, 1, 0]' : 0.114912}", "{'[1, 0, 2, 3, 6, 0, 1, 0, 9, 0, 7, 11, 1, 0, 1, 0, 1, 0]' : 0.115113}", "{'[1, 0, 2, 3, 6, 0, 1, 0, 9, 0, 7, 11, 1, 0, 1, 0, 1, 0]' : 0.114975}", "{'[1, 0, 2, 3, 6, 0, 1, 0, 9, 0, 7, 11, 1, 0, 1, 0, 1, 0]' : 0.115199}", "{'[1, 0, 2, 3, 6, 0, 1, 0, 9, 0, 7, 11, 1, 0, 1, 0, 1, 0]' : 0.115976}", "{'[1, 0, 2, 3, 6, 0, 1, 0, 9, 0, 7, 11, 1, 0, 1, 0, 1, 0]' : 0.115359}", "{'[1, 0, 2, 3, 6, 0, 1, 0, 9, 0, 7, 11, 1, 0, 1, 0, 1, 0]' : 0.114983}", "{'[1, 0, 2, 3, 6, 0, 1, 0, 9, 0, 7, 11, 1, 0, 1, 0, 1, 0]' : 0.113465}", "{'[1, 0, 2, 3, 6, 0, 1, 0, 9, 0, 7, 11, 1, 0, 1, 0, 1, 0]' : 0.114942}", "{'[1, 0, 2, 3, 6, 0, 1, 0, 9, 0, 7, 11, 1, 0, 1, 0, 1, 0]' : 0.115034}", "{'[1, 0, 2, 3, 6, 0, 1, 0, 9, 0, 7, 11, 1, 0, 1, 0, 1, 0]' : 0.115658}", "{'[1, 0, 2, 3, 6, 0, 1, 0, 9, 0, 7, 11, 1, 0, 1, 0, 1, 0]' : 0.115244}", "{'[1, 0, 2, 3, 6, 0, 1, 0, 9, 0, 7, 11, 1, 0, 1, 0, 1, 0]' : 0.114716}", "{'[1, 0, 2, 3, 6, 0, 1, 0, 9, 0, 7, 11, 1, 0, 1, 0, 1, 0]' : 0.11508}", "{'[1, 0, 2, 3, 6, 0, 1, 0, 9, 0, 7, 11, 1, 0, 1, 0, 1, 0]' : 0.113771}", "{'[1, 0, 2, 3, 6, 0, 1, 0, 9, 0, 7, 11, 1, 0, 1, 0, 1, 0]' : 0.112028}", "{'[1, 0, 2, 3, 6, 0, 1, 0, 9, 0, 7, 11, 1, 0, 1, 0, 1, 0]' : 0.11619}", "{'[1, 0, 2, 3, 6, 0, 1, 0, 9, 0, 7, 11, 1, 0, 1, 0, 1, 0]' : 0.118357}", "{'[1, 0, 2, 3, 6, 0, 1, 0, 9, 0, 7, 11, 1, 0, 1, 0, 1, 0]' : 0.118245}", "{'[1, 0, 2, 3, 6, 0, 1, 0, 9, 0, 7, 11, 1, 0, 1, 0, 1, 0]' : 0.118411}", "{'[1, 0, 2, 3, 6, 0, 1, 0, 9, 0, 7, 11, 1, 0, 1, 0, 1, 0]' : 0.118207}", "{'[1, 0, 2, 3, 6, 0, 1, 0, 9, 0, 7, 11, 1, 0, 1, 0, 1, 0]' : 0.118419}", "{'[1, 0, 2, 3, 6, 0, 1, 0, 9, 0, 7, 11, 1, 0, 1, 0, 1, 0]' : 0.118214}", "{'[1, 0, 2, 3, 6, 0, 1, 0, 9, 0, 7, 11, 1, 0, 1, 0, 1, 0]' : 0.118482}"]
returning from 'run': {'[1, 0, 2, 3, 6, 0, 1, 0, 9, 0, 7, 11, 1, 0, 1, 0, 1, 0]': ([0.11653, 0.116064, 0.115018, 0.115089, 0.114931, 0.115103, 0.114912, 0.115113, 0.114975, 0.115199, 0.115976, 0.115359, 0.114983, 0.113465, 0.114942, 0.115034, 0.115658, 0.115244, 0.114716, 0.11508, 0.113771, 0.112028, 0.11619, 0.118357, 0.118245, 0.118411, 0.118207, 0.118419, 0.118214, 0.118482], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 2, 3, 6, 0, 1, 0, 9, 0, 7, 11, 1, 0, 1, 0, 1, 0]': ([0.11653, 0.116064, 0.115018, 0.115089, 0.114931, 0.115103, 0.114912, 0.115113, 0.114975, 0.115199, 0.115976, 0.115359, 0.114983, 0.113465, 0.114942, 0.115034, 0.115658, 0.115244, 0.114716, 0.11508, 0.113771, 0.112028, 0.11619, 0.118357, 0.118245, 0.118411, 0.118207, 0.118419, 0.118214, 0.118482], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = kkk
Code stats:
        Number of loops: 	17
        Max loop nest depth: 	5
        Additions: 		125
        Multiplications: 	36
        Divisions: 		0
        Logical: 		0
        Reads: 			347
        Writes: 		94
        Comparisons:		17
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest10.exe __orio_perftest10.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest10.exe  
Program Test Output: 
{'[0, 4, 4, 1, 5, 2, 1, 0, 9, 0, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.111673}
{'[0, 4, 4, 1, 5, 2, 1, 0, 9, 0, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.111551}
{'[0, 4, 4, 1, 5, 2, 1, 0, 9, 0, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.111531}
{'[0, 4, 4, 1, 5, 2, 1, 0, 9, 0, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.111404}
{'[0, 4, 4, 1, 5, 2, 1, 0, 9, 0, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.111657}
{'[0, 4, 4, 1, 5, 2, 1, 0, 9, 0, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.104334}
{'[0, 4, 4, 1, 5, 2, 1, 0, 9, 0, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0967901}
{'[0, 4, 4, 1, 5, 2, 1, 0, 9, 0, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0966079}
{'[0, 4, 4, 1, 5, 2, 1, 0, 9, 0, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0966108}
{'[0, 4, 4, 1, 5, 2, 1, 0, 9, 0, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0966711}
{'[0, 4, 4, 1, 5, 2, 1, 0, 9, 0, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0965772}
{'[0, 4, 4, 1, 5, 2, 1, 0, 9, 0, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0968451}
{'[0, 4, 4, 1, 5, 2, 1, 0, 9, 0, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.096626}
{'[0, 4, 4, 1, 5, 2, 1, 0, 9, 0, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.096822}
{'[0, 4, 4, 1, 5, 2, 1, 0, 9, 0, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0967989}
{'[0, 4, 4, 1, 5, 2, 1, 0, 9, 0, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0966029}
{'[0, 4, 4, 1, 5, 2, 1, 0, 9, 0, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.096771}
{'[0, 4, 4, 1, 5, 2, 1, 0, 9, 0, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.09671}
{'[0, 4, 4, 1, 5, 2, 1, 0, 9, 0, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.097857}
{'[0, 4, 4, 1, 5, 2, 1, 0, 9, 0, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0969908}
{'[0, 4, 4, 1, 5, 2, 1, 0, 9, 0, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.09675}
{'[0, 4, 4, 1, 5, 2, 1, 0, 9, 0, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0965521}
{'[0, 4, 4, 1, 5, 2, 1, 0, 9, 0, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.096684}
{'[0, 4, 4, 1, 5, 2, 1, 0, 9, 0, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0966489}
{'[0, 4, 4, 1, 5, 2, 1, 0, 9, 0, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0966899}
{'[0, 4, 4, 1, 5, 2, 1, 0, 9, 0, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0966349}
{'[0, 4, 4, 1, 5, 2, 1, 0, 9, 0, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0966549}
{'[0, 4, 4, 1, 5, 2, 1, 0, 9, 0, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0966589}
{'[0, 4, 4, 1, 5, 2, 1, 0, 9, 0, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0966339}
{'[0, 4, 4, 1, 5, 2, 1, 0, 9, 0, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0966978}

out:
 ["{'[0, 4, 4, 1, 5, 2, 1, 0, 9, 0, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.111673}", "{'[0, 4, 4, 1, 5, 2, 1, 0, 9, 0, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.111551}", "{'[0, 4, 4, 1, 5, 2, 1, 0, 9, 0, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.111531}", "{'[0, 4, 4, 1, 5, 2, 1, 0, 9, 0, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.111404}", "{'[0, 4, 4, 1, 5, 2, 1, 0, 9, 0, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.111657}", "{'[0, 4, 4, 1, 5, 2, 1, 0, 9, 0, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.104334}", "{'[0, 4, 4, 1, 5, 2, 1, 0, 9, 0, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0967901}", "{'[0, 4, 4, 1, 5, 2, 1, 0, 9, 0, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0966079}", "{'[0, 4, 4, 1, 5, 2, 1, 0, 9, 0, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0966108}", "{'[0, 4, 4, 1, 5, 2, 1, 0, 9, 0, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0966711}", "{'[0, 4, 4, 1, 5, 2, 1, 0, 9, 0, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0965772}", "{'[0, 4, 4, 1, 5, 2, 1, 0, 9, 0, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0968451}", "{'[0, 4, 4, 1, 5, 2, 1, 0, 9, 0, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.096626}", "{'[0, 4, 4, 1, 5, 2, 1, 0, 9, 0, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.096822}", "{'[0, 4, 4, 1, 5, 2, 1, 0, 9, 0, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0967989}", "{'[0, 4, 4, 1, 5, 2, 1, 0, 9, 0, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0966029}", "{'[0, 4, 4, 1, 5, 2, 1, 0, 9, 0, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.096771}", "{'[0, 4, 4, 1, 5, 2, 1, 0, 9, 0, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.09671}", "{'[0, 4, 4, 1, 5, 2, 1, 0, 9, 0, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.097857}", "{'[0, 4, 4, 1, 5, 2, 1, 0, 9, 0, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0969908}", "{'[0, 4, 4, 1, 5, 2, 1, 0, 9, 0, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.09675}", "{'[0, 4, 4, 1, 5, 2, 1, 0, 9, 0, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0965521}", "{'[0, 4, 4, 1, 5, 2, 1, 0, 9, 0, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.096684}", "{'[0, 4, 4, 1, 5, 2, 1, 0, 9, 0, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0966489}", "{'[0, 4, 4, 1, 5, 2, 1, 0, 9, 0, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0966899}", "{'[0, 4, 4, 1, 5, 2, 1, 0, 9, 0, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0966349}", "{'[0, 4, 4, 1, 5, 2, 1, 0, 9, 0, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0966549}", "{'[0, 4, 4, 1, 5, 2, 1, 0, 9, 0, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0966589}", "{'[0, 4, 4, 1, 5, 2, 1, 0, 9, 0, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0966339}", "{'[0, 4, 4, 1, 5, 2, 1, 0, 9, 0, 0, 0, 1, 0, 0, 1, 0, 1]' : 0.0966978}"]
returning from 'run': {'[0, 4, 4, 1, 5, 2, 1, 0, 9, 0, 0, 0, 1, 0, 0, 1, 0, 1]': ([0.111673, 0.111551, 0.111531, 0.111404, 0.111657, 0.104334, 0.0967901, 0.0966079, 0.0966108, 0.0966711, 0.0965772, 0.0968451, 0.096626, 0.096822, 0.0967989, 0.0966029, 0.096771, 0.09671, 0.097857, 0.0969908, 0.09675, 0.0965521, 0.096684, 0.0966489, 0.0966899, 0.0966349, 0.0966549, 0.0966589, 0.0966339, 0.0966978], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 4, 4, 1, 5, 2, 1, 0, 9, 0, 0, 0, 1, 0, 0, 1, 0, 1]': ([0.111673, 0.111551, 0.111531, 0.111404, 0.111657, 0.104334, 0.0967901, 0.0966079, 0.0966108, 0.0966711, 0.0965772, 0.0968451, 0.096626, 0.096822, 0.0967989, 0.0966029, 0.096771, 0.09671, 0.097857, 0.0969908, 0.09675, 0.0965521, 0.096684, 0.0966489, 0.0966899, 0.0966349, 0.0966549, 0.0966589, 0.0966339, 0.0966978], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
Code stats:
        Number of loops: 	27
        Max loop nest depth: 	5
        Additions: 		2489
        Multiplications: 	784
        Divisions: 		0
        Logical: 		0
        Reads: 			4201
        Writes: 		492
        Comparisons:		27
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest11.exe __orio_perftest11.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest11.exe  
Program Test Output: 
{'[3, 1, 2, 1, 1, 2, 0, 0, 26, 15, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.26123}
{'[3, 1, 2, 1, 1, 2, 0, 0, 26, 15, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.260825}
{'[3, 1, 2, 1, 1, 2, 0, 0, 26, 15, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.260175}
{'[3, 1, 2, 1, 1, 2, 0, 0, 26, 15, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.260539}
{'[3, 1, 2, 1, 1, 2, 0, 0, 26, 15, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.261038}
{'[3, 1, 2, 1, 1, 2, 0, 0, 26, 15, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.260195}
{'[3, 1, 2, 1, 1, 2, 0, 0, 26, 15, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.261593}
{'[3, 1, 2, 1, 1, 2, 0, 0, 26, 15, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.260823}
{'[3, 1, 2, 1, 1, 2, 0, 0, 26, 15, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.259746}
{'[3, 1, 2, 1, 1, 2, 0, 0, 26, 15, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.260103}
{'[3, 1, 2, 1, 1, 2, 0, 0, 26, 15, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.262831}
{'[3, 1, 2, 1, 1, 2, 0, 0, 26, 15, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.262645}
{'[3, 1, 2, 1, 1, 2, 0, 0, 26, 15, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.260536}
{'[3, 1, 2, 1, 1, 2, 0, 0, 26, 15, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.261502}
{'[3, 1, 2, 1, 1, 2, 0, 0, 26, 15, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.262754}
{'[3, 1, 2, 1, 1, 2, 0, 0, 26, 15, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.261117}
{'[3, 1, 2, 1, 1, 2, 0, 0, 26, 15, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.261318}
{'[3, 1, 2, 1, 1, 2, 0, 0, 26, 15, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.260969}
{'[3, 1, 2, 1, 1, 2, 0, 0, 26, 15, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.260613}
{'[3, 1, 2, 1, 1, 2, 0, 0, 26, 15, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.260918}
{'[3, 1, 2, 1, 1, 2, 0, 0, 26, 15, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.260416}
{'[3, 1, 2, 1, 1, 2, 0, 0, 26, 15, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.260852}
{'[3, 1, 2, 1, 1, 2, 0, 0, 26, 15, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.261035}
{'[3, 1, 2, 1, 1, 2, 0, 0, 26, 15, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.259117}
{'[3, 1, 2, 1, 1, 2, 0, 0, 26, 15, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.26035}
{'[3, 1, 2, 1, 1, 2, 0, 0, 26, 15, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.260702}
{'[3, 1, 2, 1, 1, 2, 0, 0, 26, 15, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.262215}
{'[3, 1, 2, 1, 1, 2, 0, 0, 26, 15, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.262587}
{'[3, 1, 2, 1, 1, 2, 0, 0, 26, 15, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.260282}
{'[3, 1, 2, 1, 1, 2, 0, 0, 26, 15, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.260536}

out:
 ["{'[3, 1, 2, 1, 1, 2, 0, 0, 26, 15, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.26123}", "{'[3, 1, 2, 1, 1, 2, 0, 0, 26, 15, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.260825}", "{'[3, 1, 2, 1, 1, 2, 0, 0, 26, 15, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.260175}", "{'[3, 1, 2, 1, 1, 2, 0, 0, 26, 15, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.260539}", "{'[3, 1, 2, 1, 1, 2, 0, 0, 26, 15, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.261038}", "{'[3, 1, 2, 1, 1, 2, 0, 0, 26, 15, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.260195}", "{'[3, 1, 2, 1, 1, 2, 0, 0, 26, 15, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.261593}", "{'[3, 1, 2, 1, 1, 2, 0, 0, 26, 15, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.260823}", "{'[3, 1, 2, 1, 1, 2, 0, 0, 26, 15, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.259746}", "{'[3, 1, 2, 1, 1, 2, 0, 0, 26, 15, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.260103}", "{'[3, 1, 2, 1, 1, 2, 0, 0, 26, 15, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.262831}", "{'[3, 1, 2, 1, 1, 2, 0, 0, 26, 15, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.262645}", "{'[3, 1, 2, 1, 1, 2, 0, 0, 26, 15, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.260536}", "{'[3, 1, 2, 1, 1, 2, 0, 0, 26, 15, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.261502}", "{'[3, 1, 2, 1, 1, 2, 0, 0, 26, 15, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.262754}", "{'[3, 1, 2, 1, 1, 2, 0, 0, 26, 15, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.261117}", "{'[3, 1, 2, 1, 1, 2, 0, 0, 26, 15, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.261318}", "{'[3, 1, 2, 1, 1, 2, 0, 0, 26, 15, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.260969}", "{'[3, 1, 2, 1, 1, 2, 0, 0, 26, 15, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.260613}", "{'[3, 1, 2, 1, 1, 2, 0, 0, 26, 15, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.260918}", "{'[3, 1, 2, 1, 1, 2, 0, 0, 26, 15, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.260416}", "{'[3, 1, 2, 1, 1, 2, 0, 0, 26, 15, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.260852}", "{'[3, 1, 2, 1, 1, 2, 0, 0, 26, 15, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.261035}", "{'[3, 1, 2, 1, 1, 2, 0, 0, 26, 15, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.259117}", "{'[3, 1, 2, 1, 1, 2, 0, 0, 26, 15, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.26035}", "{'[3, 1, 2, 1, 1, 2, 0, 0, 26, 15, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.260702}", "{'[3, 1, 2, 1, 1, 2, 0, 0, 26, 15, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.262215}", "{'[3, 1, 2, 1, 1, 2, 0, 0, 26, 15, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.262587}", "{'[3, 1, 2, 1, 1, 2, 0, 0, 26, 15, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.260282}", "{'[3, 1, 2, 1, 1, 2, 0, 0, 26, 15, 5, 0, 2, 0, 0, 0, 0, 0]' : 0.260536}"]
returning from 'run': {'[3, 1, 2, 1, 1, 2, 0, 0, 26, 15, 5, 0, 2, 0, 0, 0, 0, 0]': ([0.26123, 0.260825, 0.260175, 0.260539, 0.261038, 0.260195, 0.261593, 0.260823, 0.259746, 0.260103, 0.262831, 0.262645, 0.260536, 0.261502, 0.262754, 0.261117, 0.261318, 0.260969, 0.260613, 0.260918, 0.260416, 0.260852, 0.261035, 0.259117, 0.26035, 0.260702, 0.262215, 0.262587, 0.260282, 0.260536], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 1, 2, 1, 1, 2, 0, 0, 26, 15, 5, 0, 2, 0, 0, 0, 0, 0]': ([0.26123, 0.260825, 0.260175, 0.260539, 0.261038, 0.260195, 0.261593, 0.260823, 0.259746, 0.260103, 0.262831, 0.262645, 0.260536, 0.261502, 0.262754, 0.261117, 0.261318, 0.260969, 0.260613, 0.260918, 0.260416, 0.260852, 0.261035, 0.259117, 0.26035, 0.260702, 0.262215, 0.262587, 0.260282, 0.260536], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	5
        Additions: 		679
        Multiplications: 	204
        Divisions: 		0
        Logical: 		0
        Reads: 			1258
        Writes: 		188
        Comparisons:		22
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest12.exe __orio_perftest12.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest12.exe  
Program Test Output: 
{'[6, 0, 0, 6, 3, 3, 0, 0, 27, 7, 3, 0, 1, 0, 0, 0, 1, 0]' : 0.121681}
{'[6, 0, 0, 6, 3, 3, 0, 0, 27, 7, 3, 0, 1, 0, 0, 0, 1, 0]' : 0.121031}
{'[6, 0, 0, 6, 3, 3, 0, 0, 27, 7, 3, 0, 1, 0, 0, 0, 1, 0]' : 0.120915}
{'[6, 0, 0, 6, 3, 3, 0, 0, 27, 7, 3, 0, 1, 0, 0, 0, 1, 0]' : 0.122217}
{'[6, 0, 0, 6, 3, 3, 0, 0, 27, 7, 3, 0, 1, 0, 0, 0, 1, 0]' : 0.12382}
{'[6, 0, 0, 6, 3, 3, 0, 0, 27, 7, 3, 0, 1, 0, 0, 0, 1, 0]' : 0.123443}
{'[6, 0, 0, 6, 3, 3, 0, 0, 27, 7, 3, 0, 1, 0, 0, 0, 1, 0]' : 0.151577}
{'[6, 0, 0, 6, 3, 3, 0, 0, 27, 7, 3, 0, 1, 0, 0, 0, 1, 0]' : 0.208369}
{'[6, 0, 0, 6, 3, 3, 0, 0, 27, 7, 3, 0, 1, 0, 0, 0, 1, 0]' : 0.283583}
{'[6, 0, 0, 6, 3, 3, 0, 0, 27, 7, 3, 0, 1, 0, 0, 0, 1, 0]' : 0.152619}
{'[6, 0, 0, 6, 3, 3, 0, 0, 27, 7, 3, 0, 1, 0, 0, 0, 1, 0]' : 0.130432}
{'[6, 0, 0, 6, 3, 3, 0, 0, 27, 7, 3, 0, 1, 0, 0, 0, 1, 0]' : 0.128057}
{'[6, 0, 0, 6, 3, 3, 0, 0, 27, 7, 3, 0, 1, 0, 0, 0, 1, 0]' : 0.130044}
{'[6, 0, 0, 6, 3, 3, 0, 0, 27, 7, 3, 0, 1, 0, 0, 0, 1, 0]' : 0.128792}
{'[6, 0, 0, 6, 3, 3, 0, 0, 27, 7, 3, 0, 1, 0, 0, 0, 1, 0]' : 0.141958}
{'[6, 0, 0, 6, 3, 3, 0, 0, 27, 7, 3, 0, 1, 0, 0, 0, 1, 0]' : 0.15044}
{'[6, 0, 0, 6, 3, 3, 0, 0, 27, 7, 3, 0, 1, 0, 0, 0, 1, 0]' : 0.146281}
{'[6, 0, 0, 6, 3, 3, 0, 0, 27, 7, 3, 0, 1, 0, 0, 0, 1, 0]' : 0.145295}
{'[6, 0, 0, 6, 3, 3, 0, 0, 27, 7, 3, 0, 1, 0, 0, 0, 1, 0]' : 0.141636}
{'[6, 0, 0, 6, 3, 3, 0, 0, 27, 7, 3, 0, 1, 0, 0, 0, 1, 0]' : 0.147048}
{'[6, 0, 0, 6, 3, 3, 0, 0, 27, 7, 3, 0, 1, 0, 0, 0, 1, 0]' : 0.141361}
{'[6, 0, 0, 6, 3, 3, 0, 0, 27, 7, 3, 0, 1, 0, 0, 0, 1, 0]' : 0.142187}
{'[6, 0, 0, 6, 3, 3, 0, 0, 27, 7, 3, 0, 1, 0, 0, 0, 1, 0]' : 0.147495}
{'[6, 0, 0, 6, 3, 3, 0, 0, 27, 7, 3, 0, 1, 0, 0, 0, 1, 0]' : 0.143374}
{'[6, 0, 0, 6, 3, 3, 0, 0, 27, 7, 3, 0, 1, 0, 0, 0, 1, 0]' : 0.142112}
{'[6, 0, 0, 6, 3, 3, 0, 0, 27, 7, 3, 0, 1, 0, 0, 0, 1, 0]' : 0.143726}
{'[6, 0, 0, 6, 3, 3, 0, 0, 27, 7, 3, 0, 1, 0, 0, 0, 1, 0]' : 0.14558}
{'[6, 0, 0, 6, 3, 3, 0, 0, 27, 7, 3, 0, 1, 0, 0, 0, 1, 0]' : 0.1451}
{'[6, 0, 0, 6, 3, 3, 0, 0, 27, 7, 3, 0, 1, 0, 0, 0, 1, 0]' : 0.142476}
{'[6, 0, 0, 6, 3, 3, 0, 0, 27, 7, 3, 0, 1, 0, 0, 0, 1, 0]' : 0.152399}

out:
 ["{'[6, 0, 0, 6, 3, 3, 0, 0, 27, 7, 3, 0, 1, 0, 0, 0, 1, 0]' : 0.121681}", "{'[6, 0, 0, 6, 3, 3, 0, 0, 27, 7, 3, 0, 1, 0, 0, 0, 1, 0]' : 0.121031}", "{'[6, 0, 0, 6, 3, 3, 0, 0, 27, 7, 3, 0, 1, 0, 0, 0, 1, 0]' : 0.120915}", "{'[6, 0, 0, 6, 3, 3, 0, 0, 27, 7, 3, 0, 1, 0, 0, 0, 1, 0]' : 0.122217}", "{'[6, 0, 0, 6, 3, 3, 0, 0, 27, 7, 3, 0, 1, 0, 0, 0, 1, 0]' : 0.12382}", "{'[6, 0, 0, 6, 3, 3, 0, 0, 27, 7, 3, 0, 1, 0, 0, 0, 1, 0]' : 0.123443}", "{'[6, 0, 0, 6, 3, 3, 0, 0, 27, 7, 3, 0, 1, 0, 0, 0, 1, 0]' : 0.151577}", "{'[6, 0, 0, 6, 3, 3, 0, 0, 27, 7, 3, 0, 1, 0, 0, 0, 1, 0]' : 0.208369}", "{'[6, 0, 0, 6, 3, 3, 0, 0, 27, 7, 3, 0, 1, 0, 0, 0, 1, 0]' : 0.283583}", "{'[6, 0, 0, 6, 3, 3, 0, 0, 27, 7, 3, 0, 1, 0, 0, 0, 1, 0]' : 0.152619}", "{'[6, 0, 0, 6, 3, 3, 0, 0, 27, 7, 3, 0, 1, 0, 0, 0, 1, 0]' : 0.130432}", "{'[6, 0, 0, 6, 3, 3, 0, 0, 27, 7, 3, 0, 1, 0, 0, 0, 1, 0]' : 0.128057}", "{'[6, 0, 0, 6, 3, 3, 0, 0, 27, 7, 3, 0, 1, 0, 0, 0, 1, 0]' : 0.130044}", "{'[6, 0, 0, 6, 3, 3, 0, 0, 27, 7, 3, 0, 1, 0, 0, 0, 1, 0]' : 0.128792}", "{'[6, 0, 0, 6, 3, 3, 0, 0, 27, 7, 3, 0, 1, 0, 0, 0, 1, 0]' : 0.141958}", "{'[6, 0, 0, 6, 3, 3, 0, 0, 27, 7, 3, 0, 1, 0, 0, 0, 1, 0]' : 0.15044}", "{'[6, 0, 0, 6, 3, 3, 0, 0, 27, 7, 3, 0, 1, 0, 0, 0, 1, 0]' : 0.146281}", "{'[6, 0, 0, 6, 3, 3, 0, 0, 27, 7, 3, 0, 1, 0, 0, 0, 1, 0]' : 0.145295}", "{'[6, 0, 0, 6, 3, 3, 0, 0, 27, 7, 3, 0, 1, 0, 0, 0, 1, 0]' : 0.141636}", "{'[6, 0, 0, 6, 3, 3, 0, 0, 27, 7, 3, 0, 1, 0, 0, 0, 1, 0]' : 0.147048}", "{'[6, 0, 0, 6, 3, 3, 0, 0, 27, 7, 3, 0, 1, 0, 0, 0, 1, 0]' : 0.141361}", "{'[6, 0, 0, 6, 3, 3, 0, 0, 27, 7, 3, 0, 1, 0, 0, 0, 1, 0]' : 0.142187}", "{'[6, 0, 0, 6, 3, 3, 0, 0, 27, 7, 3, 0, 1, 0, 0, 0, 1, 0]' : 0.147495}", "{'[6, 0, 0, 6, 3, 3, 0, 0, 27, 7, 3, 0, 1, 0, 0, 0, 1, 0]' : 0.143374}", "{'[6, 0, 0, 6, 3, 3, 0, 0, 27, 7, 3, 0, 1, 0, 0, 0, 1, 0]' : 0.142112}", "{'[6, 0, 0, 6, 3, 3, 0, 0, 27, 7, 3, 0, 1, 0, 0, 0, 1, 0]' : 0.143726}", "{'[6, 0, 0, 6, 3, 3, 0, 0, 27, 7, 3, 0, 1, 0, 0, 0, 1, 0]' : 0.14558}", "{'[6, 0, 0, 6, 3, 3, 0, 0, 27, 7, 3, 0, 1, 0, 0, 0, 1, 0]' : 0.1451}", "{'[6, 0, 0, 6, 3, 3, 0, 0, 27, 7, 3, 0, 1, 0, 0, 0, 1, 0]' : 0.142476}", "{'[6, 0, 0, 6, 3, 3, 0, 0, 27, 7, 3, 0, 1, 0, 0, 0, 1, 0]' : 0.152399}"]
returning from 'run': {'[6, 0, 0, 6, 3, 3, 0, 0, 27, 7, 3, 0, 1, 0, 0, 0, 1, 0]': ([0.121681, 0.121031, 0.120915, 0.122217, 0.12382, 0.123443, 0.151577, 0.208369, 0.283583, 0.152619, 0.130432, 0.128057, 0.130044, 0.128792, 0.141958, 0.15044, 0.146281, 0.145295, 0.141636, 0.147048, 0.141361, 0.142187, 0.147495, 0.143374, 0.142112, 0.143726, 0.14558, 0.1451, 0.142476, 0.152399], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 0, 6, 3, 3, 0, 0, 27, 7, 3, 0, 1, 0, 0, 0, 1, 0]': ([0.121681, 0.121031, 0.120915, 0.122217, 0.12382, 0.123443, 0.151577, 0.208369, 0.283583, 0.152619, 0.130432, 0.128057, 0.130044, 0.128792, 0.141958, 0.15044, 0.146281, 0.145295, 0.141636, 0.147048, 0.141361, 0.142187, 0.147495, 0.143374, 0.142112, 0.143726, 0.14558, 0.1451, 0.142476, 0.152399], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = iii
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		463
        Multiplications: 	204
        Divisions: 		0
        Logical: 		0
        Reads: 			1028
        Writes: 		204
        Comparisons:		15
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest13.exe __orio_perftest13.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest13.exe  
Program Test Output: 
{'[6, 0, 2, 4, 4, 0, 0, 0, 15, 1, 0, 0, 0, 2, 0, 1, 1, 1]' : 0.135288}
{'[6, 0, 2, 4, 4, 0, 0, 0, 15, 1, 0, 0, 0, 2, 0, 1, 1, 1]' : 0.135267}
{'[6, 0, 2, 4, 4, 0, 0, 0, 15, 1, 0, 0, 0, 2, 0, 1, 1, 1]' : 0.135235}
{'[6, 0, 2, 4, 4, 0, 0, 0, 15, 1, 0, 0, 0, 2, 0, 1, 1, 1]' : 0.135199}
{'[6, 0, 2, 4, 4, 0, 0, 0, 15, 1, 0, 0, 0, 2, 0, 1, 1, 1]' : 0.135239}
{'[6, 0, 2, 4, 4, 0, 0, 0, 15, 1, 0, 0, 0, 2, 0, 1, 1, 1]' : 0.128032}
{'[6, 0, 2, 4, 4, 0, 0, 0, 15, 1, 0, 0, 0, 2, 0, 1, 1, 1]' : 0.114605}
{'[6, 0, 2, 4, 4, 0, 0, 0, 15, 1, 0, 0, 0, 2, 0, 1, 1, 1]' : 0.114826}
{'[6, 0, 2, 4, 4, 0, 0, 0, 15, 1, 0, 0, 0, 2, 0, 1, 1, 1]' : 0.114664}
{'[6, 0, 2, 4, 4, 0, 0, 0, 15, 1, 0, 0, 0, 2, 0, 1, 1, 1]' : 0.116056}
{'[6, 0, 2, 4, 4, 0, 0, 0, 15, 1, 0, 0, 0, 2, 0, 1, 1, 1]' : 0.114554}
{'[6, 0, 2, 4, 4, 0, 0, 0, 15, 1, 0, 0, 0, 2, 0, 1, 1, 1]' : 0.114725}
{'[6, 0, 2, 4, 4, 0, 0, 0, 15, 1, 0, 0, 0, 2, 0, 1, 1, 1]' : 0.114624}
{'[6, 0, 2, 4, 4, 0, 0, 0, 15, 1, 0, 0, 0, 2, 0, 1, 1, 1]' : 0.114621}
{'[6, 0, 2, 4, 4, 0, 0, 0, 15, 1, 0, 0, 0, 2, 0, 1, 1, 1]' : 0.114654}
{'[6, 0, 2, 4, 4, 0, 0, 0, 15, 1, 0, 0, 0, 2, 0, 1, 1, 1]' : 0.114594}
{'[6, 0, 2, 4, 4, 0, 0, 0, 15, 1, 0, 0, 0, 2, 0, 1, 1, 1]' : 0.114954}
{'[6, 0, 2, 4, 4, 0, 0, 0, 15, 1, 0, 0, 0, 2, 0, 1, 1, 1]' : 0.11468}
{'[6, 0, 2, 4, 4, 0, 0, 0, 15, 1, 0, 0, 0, 2, 0, 1, 1, 1]' : 0.114685}
{'[6, 0, 2, 4, 4, 0, 0, 0, 15, 1, 0, 0, 0, 2, 0, 1, 1, 1]' : 0.114627}
{'[6, 0, 2, 4, 4, 0, 0, 0, 15, 1, 0, 0, 0, 2, 0, 1, 1, 1]' : 0.114667}
{'[6, 0, 2, 4, 4, 0, 0, 0, 15, 1, 0, 0, 0, 2, 0, 1, 1, 1]' : 0.114626}
{'[6, 0, 2, 4, 4, 0, 0, 0, 15, 1, 0, 0, 0, 2, 0, 1, 1, 1]' : 0.115991}
{'[6, 0, 2, 4, 4, 0, 0, 0, 15, 1, 0, 0, 0, 2, 0, 1, 1, 1]' : 0.115287}
{'[6, 0, 2, 4, 4, 0, 0, 0, 15, 1, 0, 0, 0, 2, 0, 1, 1, 1]' : 0.114605}
{'[6, 0, 2, 4, 4, 0, 0, 0, 15, 1, 0, 0, 0, 2, 0, 1, 1, 1]' : 0.114676}
{'[6, 0, 2, 4, 4, 0, 0, 0, 15, 1, 0, 0, 0, 2, 0, 1, 1, 1]' : 0.11462}
{'[6, 0, 2, 4, 4, 0, 0, 0, 15, 1, 0, 0, 0, 2, 0, 1, 1, 1]' : 0.114581}
{'[6, 0, 2, 4, 4, 0, 0, 0, 15, 1, 0, 0, 0, 2, 0, 1, 1, 1]' : 0.114673}
{'[6, 0, 2, 4, 4, 0, 0, 0, 15, 1, 0, 0, 0, 2, 0, 1, 1, 1]' : 0.114629}

out:
 ["{'[6, 0, 2, 4, 4, 0, 0, 0, 15, 1, 0, 0, 0, 2, 0, 1, 1, 1]' : 0.135288}", "{'[6, 0, 2, 4, 4, 0, 0, 0, 15, 1, 0, 0, 0, 2, 0, 1, 1, 1]' : 0.135267}", "{'[6, 0, 2, 4, 4, 0, 0, 0, 15, 1, 0, 0, 0, 2, 0, 1, 1, 1]' : 0.135235}", "{'[6, 0, 2, 4, 4, 0, 0, 0, 15, 1, 0, 0, 0, 2, 0, 1, 1, 1]' : 0.135199}", "{'[6, 0, 2, 4, 4, 0, 0, 0, 15, 1, 0, 0, 0, 2, 0, 1, 1, 1]' : 0.135239}", "{'[6, 0, 2, 4, 4, 0, 0, 0, 15, 1, 0, 0, 0, 2, 0, 1, 1, 1]' : 0.128032}", "{'[6, 0, 2, 4, 4, 0, 0, 0, 15, 1, 0, 0, 0, 2, 0, 1, 1, 1]' : 0.114605}", "{'[6, 0, 2, 4, 4, 0, 0, 0, 15, 1, 0, 0, 0, 2, 0, 1, 1, 1]' : 0.114826}", "{'[6, 0, 2, 4, 4, 0, 0, 0, 15, 1, 0, 0, 0, 2, 0, 1, 1, 1]' : 0.114664}", "{'[6, 0, 2, 4, 4, 0, 0, 0, 15, 1, 0, 0, 0, 2, 0, 1, 1, 1]' : 0.116056}", "{'[6, 0, 2, 4, 4, 0, 0, 0, 15, 1, 0, 0, 0, 2, 0, 1, 1, 1]' : 0.114554}", "{'[6, 0, 2, 4, 4, 0, 0, 0, 15, 1, 0, 0, 0, 2, 0, 1, 1, 1]' : 0.114725}", "{'[6, 0, 2, 4, 4, 0, 0, 0, 15, 1, 0, 0, 0, 2, 0, 1, 1, 1]' : 0.114624}", "{'[6, 0, 2, 4, 4, 0, 0, 0, 15, 1, 0, 0, 0, 2, 0, 1, 1, 1]' : 0.114621}", "{'[6, 0, 2, 4, 4, 0, 0, 0, 15, 1, 0, 0, 0, 2, 0, 1, 1, 1]' : 0.114654}", "{'[6, 0, 2, 4, 4, 0, 0, 0, 15, 1, 0, 0, 0, 2, 0, 1, 1, 1]' : 0.114594}", "{'[6, 0, 2, 4, 4, 0, 0, 0, 15, 1, 0, 0, 0, 2, 0, 1, 1, 1]' : 0.114954}", "{'[6, 0, 2, 4, 4, 0, 0, 0, 15, 1, 0, 0, 0, 2, 0, 1, 1, 1]' : 0.11468}", "{'[6, 0, 2, 4, 4, 0, 0, 0, 15, 1, 0, 0, 0, 2, 0, 1, 1, 1]' : 0.114685}", "{'[6, 0, 2, 4, 4, 0, 0, 0, 15, 1, 0, 0, 0, 2, 0, 1, 1, 1]' : 0.114627}", "{'[6, 0, 2, 4, 4, 0, 0, 0, 15, 1, 0, 0, 0, 2, 0, 1, 1, 1]' : 0.114667}", "{'[6, 0, 2, 4, 4, 0, 0, 0, 15, 1, 0, 0, 0, 2, 0, 1, 1, 1]' : 0.114626}", "{'[6, 0, 2, 4, 4, 0, 0, 0, 15, 1, 0, 0, 0, 2, 0, 1, 1, 1]' : 0.115991}", "{'[6, 0, 2, 4, 4, 0, 0, 0, 15, 1, 0, 0, 0, 2, 0, 1, 1, 1]' : 0.115287}", "{'[6, 0, 2, 4, 4, 0, 0, 0, 15, 1, 0, 0, 0, 2, 0, 1, 1, 1]' : 0.114605}", "{'[6, 0, 2, 4, 4, 0, 0, 0, 15, 1, 0, 0, 0, 2, 0, 1, 1, 1]' : 0.114676}", "{'[6, 0, 2, 4, 4, 0, 0, 0, 15, 1, 0, 0, 0, 2, 0, 1, 1, 1]' : 0.11462}", "{'[6, 0, 2, 4, 4, 0, 0, 0, 15, 1, 0, 0, 0, 2, 0, 1, 1, 1]' : 0.114581}", "{'[6, 0, 2, 4, 4, 0, 0, 0, 15, 1, 0, 0, 0, 2, 0, 1, 1, 1]' : 0.114673}", "{'[6, 0, 2, 4, 4, 0, 0, 0, 15, 1, 0, 0, 0, 2, 0, 1, 1, 1]' : 0.114629}"]
returning from 'run': {'[6, 0, 2, 4, 4, 0, 0, 0, 15, 1, 0, 0, 0, 2, 0, 1, 1, 1]': ([0.135288, 0.135267, 0.135235, 0.135199, 0.135239, 0.128032, 0.114605, 0.114826, 0.114664, 0.116056, 0.114554, 0.114725, 0.114624, 0.114621, 0.114654, 0.114594, 0.114954, 0.11468, 0.114685, 0.114627, 0.114667, 0.114626, 0.115991, 0.115287, 0.114605, 0.114676, 0.11462, 0.114581, 0.114673, 0.114629], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 2, 4, 4, 0, 0, 0, 15, 1, 0, 0, 0, 2, 0, 1, 1, 1]': ([0.135288, 0.135267, 0.135235, 0.135199, 0.135239, 0.128032, 0.114605, 0.114826, 0.114664, 0.116056, 0.114554, 0.114725, 0.114624, 0.114621, 0.114654, 0.114594, 0.114954, 0.11468, 0.114685, 0.114627, 0.114667, 0.114626, 0.115991, 0.115287, 0.114605, 0.114676, 0.11462, 0.114581, 0.114673, 0.114629], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	6
        Additions: 		190
        Multiplications: 	68
        Divisions: 		0
        Logical: 		0
        Reads: 			414
        Writes: 		82
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest14.exe __orio_perftest14.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest14.exe  
Program Test Output: 
{'[1, 6, 1, 6, 0, 6, 0, 0, 1, 0, 23, 7, 0, 0, 0, 1, 0, 0]' : 0.187886}
{'[1, 6, 1, 6, 0, 6, 0, 0, 1, 0, 23, 7, 0, 0, 0, 1, 0, 0]' : 0.187996}
{'[1, 6, 1, 6, 0, 6, 0, 0, 1, 0, 23, 7, 0, 0, 0, 1, 0, 0]' : 0.187952}
{'[1, 6, 1, 6, 0, 6, 0, 0, 1, 0, 23, 7, 0, 0, 0, 1, 0, 0]' : 0.166261}
{'[1, 6, 1, 6, 0, 6, 0, 0, 1, 0, 23, 7, 0, 0, 0, 1, 0, 0]' : 0.15833}
{'[1, 6, 1, 6, 0, 6, 0, 0, 1, 0, 23, 7, 0, 0, 0, 1, 0, 0]' : 0.157199}
{'[1, 6, 1, 6, 0, 6, 0, 0, 1, 0, 23, 7, 0, 0, 0, 1, 0, 0]' : 0.157485}
{'[1, 6, 1, 6, 0, 6, 0, 0, 1, 0, 23, 7, 0, 0, 0, 1, 0, 0]' : 0.157139}
{'[1, 6, 1, 6, 0, 6, 0, 0, 1, 0, 23, 7, 0, 0, 0, 1, 0, 0]' : 0.157145}
{'[1, 6, 1, 6, 0, 6, 0, 0, 1, 0, 23, 7, 0, 0, 0, 1, 0, 0]' : 0.157232}
{'[1, 6, 1, 6, 0, 6, 0, 0, 1, 0, 23, 7, 0, 0, 0, 1, 0, 0]' : 0.157415}
{'[1, 6, 1, 6, 0, 6, 0, 0, 1, 0, 23, 7, 0, 0, 0, 1, 0, 0]' : 0.157145}
{'[1, 6, 1, 6, 0, 6, 0, 0, 1, 0, 23, 7, 0, 0, 0, 1, 0, 0]' : 0.157419}
{'[1, 6, 1, 6, 0, 6, 0, 0, 1, 0, 23, 7, 0, 0, 0, 1, 0, 0]' : 0.157254}
{'[1, 6, 1, 6, 0, 6, 0, 0, 1, 0, 23, 7, 0, 0, 0, 1, 0, 0]' : 0.158369}
{'[1, 6, 1, 6, 0, 6, 0, 0, 1, 0, 23, 7, 0, 0, 0, 1, 0, 0]' : 0.157261}
{'[1, 6, 1, 6, 0, 6, 0, 0, 1, 0, 23, 7, 0, 0, 0, 1, 0, 0]' : 0.157192}
{'[1, 6, 1, 6, 0, 6, 0, 0, 1, 0, 23, 7, 0, 0, 0, 1, 0, 0]' : 0.157378}
{'[1, 6, 1, 6, 0, 6, 0, 0, 1, 0, 23, 7, 0, 0, 0, 1, 0, 0]' : 0.157177}
{'[1, 6, 1, 6, 0, 6, 0, 0, 1, 0, 23, 7, 0, 0, 0, 1, 0, 0]' : 0.157331}
{'[1, 6, 1, 6, 0, 6, 0, 0, 1, 0, 23, 7, 0, 0, 0, 1, 0, 0]' : 0.157222}
{'[1, 6, 1, 6, 0, 6, 0, 0, 1, 0, 23, 7, 0, 0, 0, 1, 0, 0]' : 0.1573}
{'[1, 6, 1, 6, 0, 6, 0, 0, 1, 0, 23, 7, 0, 0, 0, 1, 0, 0]' : 0.157183}
{'[1, 6, 1, 6, 0, 6, 0, 0, 1, 0, 23, 7, 0, 0, 0, 1, 0, 0]' : 0.158464}
{'[1, 6, 1, 6, 0, 6, 0, 0, 1, 0, 23, 7, 0, 0, 0, 1, 0, 0]' : 0.157206}
{'[1, 6, 1, 6, 0, 6, 0, 0, 1, 0, 23, 7, 0, 0, 0, 1, 0, 0]' : 0.157191}
{'[1, 6, 1, 6, 0, 6, 0, 0, 1, 0, 23, 7, 0, 0, 0, 1, 0, 0]' : 0.157262}
{'[1, 6, 1, 6, 0, 6, 0, 0, 1, 0, 23, 7, 0, 0, 0, 1, 0, 0]' : 0.157309}
{'[1, 6, 1, 6, 0, 6, 0, 0, 1, 0, 23, 7, 0, 0, 0, 1, 0, 0]' : 0.157221}
{'[1, 6, 1, 6, 0, 6, 0, 0, 1, 0, 23, 7, 0, 0, 0, 1, 0, 0]' : 0.157168}

out:
 ["{'[1, 6, 1, 6, 0, 6, 0, 0, 1, 0, 23, 7, 0, 0, 0, 1, 0, 0]' : 0.187886}", "{'[1, 6, 1, 6, 0, 6, 0, 0, 1, 0, 23, 7, 0, 0, 0, 1, 0, 0]' : 0.187996}", "{'[1, 6, 1, 6, 0, 6, 0, 0, 1, 0, 23, 7, 0, 0, 0, 1, 0, 0]' : 0.187952}", "{'[1, 6, 1, 6, 0, 6, 0, 0, 1, 0, 23, 7, 0, 0, 0, 1, 0, 0]' : 0.166261}", "{'[1, 6, 1, 6, 0, 6, 0, 0, 1, 0, 23, 7, 0, 0, 0, 1, 0, 0]' : 0.15833}", "{'[1, 6, 1, 6, 0, 6, 0, 0, 1, 0, 23, 7, 0, 0, 0, 1, 0, 0]' : 0.157199}", "{'[1, 6, 1, 6, 0, 6, 0, 0, 1, 0, 23, 7, 0, 0, 0, 1, 0, 0]' : 0.157485}", "{'[1, 6, 1, 6, 0, 6, 0, 0, 1, 0, 23, 7, 0, 0, 0, 1, 0, 0]' : 0.157139}", "{'[1, 6, 1, 6, 0, 6, 0, 0, 1, 0, 23, 7, 0, 0, 0, 1, 0, 0]' : 0.157145}", "{'[1, 6, 1, 6, 0, 6, 0, 0, 1, 0, 23, 7, 0, 0, 0, 1, 0, 0]' : 0.157232}", "{'[1, 6, 1, 6, 0, 6, 0, 0, 1, 0, 23, 7, 0, 0, 0, 1, 0, 0]' : 0.157415}", "{'[1, 6, 1, 6, 0, 6, 0, 0, 1, 0, 23, 7, 0, 0, 0, 1, 0, 0]' : 0.157145}", "{'[1, 6, 1, 6, 0, 6, 0, 0, 1, 0, 23, 7, 0, 0, 0, 1, 0, 0]' : 0.157419}", "{'[1, 6, 1, 6, 0, 6, 0, 0, 1, 0, 23, 7, 0, 0, 0, 1, 0, 0]' : 0.157254}", "{'[1, 6, 1, 6, 0, 6, 0, 0, 1, 0, 23, 7, 0, 0, 0, 1, 0, 0]' : 0.158369}", "{'[1, 6, 1, 6, 0, 6, 0, 0, 1, 0, 23, 7, 0, 0, 0, 1, 0, 0]' : 0.157261}", "{'[1, 6, 1, 6, 0, 6, 0, 0, 1, 0, 23, 7, 0, 0, 0, 1, 0, 0]' : 0.157192}", "{'[1, 6, 1, 6, 0, 6, 0, 0, 1, 0, 23, 7, 0, 0, 0, 1, 0, 0]' : 0.157378}", "{'[1, 6, 1, 6, 0, 6, 0, 0, 1, 0, 23, 7, 0, 0, 0, 1, 0, 0]' : 0.157177}", "{'[1, 6, 1, 6, 0, 6, 0, 0, 1, 0, 23, 7, 0, 0, 0, 1, 0, 0]' : 0.157331}", "{'[1, 6, 1, 6, 0, 6, 0, 0, 1, 0, 23, 7, 0, 0, 0, 1, 0, 0]' : 0.157222}", "{'[1, 6, 1, 6, 0, 6, 0, 0, 1, 0, 23, 7, 0, 0, 0, 1, 0, 0]' : 0.1573}", "{'[1, 6, 1, 6, 0, 6, 0, 0, 1, 0, 23, 7, 0, 0, 0, 1, 0, 0]' : 0.157183}", "{'[1, 6, 1, 6, 0, 6, 0, 0, 1, 0, 23, 7, 0, 0, 0, 1, 0, 0]' : 0.158464}", "{'[1, 6, 1, 6, 0, 6, 0, 0, 1, 0, 23, 7, 0, 0, 0, 1, 0, 0]' : 0.157206}", "{'[1, 6, 1, 6, 0, 6, 0, 0, 1, 0, 23, 7, 0, 0, 0, 1, 0, 0]' : 0.157191}", "{'[1, 6, 1, 6, 0, 6, 0, 0, 1, 0, 23, 7, 0, 0, 0, 1, 0, 0]' : 0.157262}", "{'[1, 6, 1, 6, 0, 6, 0, 0, 1, 0, 23, 7, 0, 0, 0, 1, 0, 0]' : 0.157309}", "{'[1, 6, 1, 6, 0, 6, 0, 0, 1, 0, 23, 7, 0, 0, 0, 1, 0, 0]' : 0.157221}", "{'[1, 6, 1, 6, 0, 6, 0, 0, 1, 0, 23, 7, 0, 0, 0, 1, 0, 0]' : 0.157168}"]
returning from 'run': {'[1, 6, 1, 6, 0, 6, 0, 0, 1, 0, 23, 7, 0, 0, 0, 1, 0, 0]': ([0.187886, 0.187996, 0.187952, 0.166261, 0.15833, 0.157199, 0.157485, 0.157139, 0.157145, 0.157232, 0.157415, 0.157145, 0.157419, 0.157254, 0.158369, 0.157261, 0.157192, 0.157378, 0.157177, 0.157331, 0.157222, 0.1573, 0.157183, 0.158464, 0.157206, 0.157191, 0.157262, 0.157309, 0.157221, 0.157168], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 6, 1, 6, 0, 6, 0, 0, 1, 0, 23, 7, 0, 0, 0, 1, 0, 0]': ([0.187886, 0.187996, 0.187952, 0.166261, 0.15833, 0.157199, 0.157485, 0.157139, 0.157145, 0.157232, 0.157415, 0.157145, 0.157419, 0.157254, 0.158369, 0.157261, 0.157192, 0.157378, 0.157177, 0.157331, 0.157222, 0.1573, 0.157183, 0.158464, 0.157206, 0.157191, 0.157262, 0.157309, 0.157221, 0.157168], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	30
        Max loop nest depth: 	5
        Additions: 		2521
        Multiplications: 	782
        Divisions: 		0
        Logical: 		0
        Reads: 			4166
        Writes: 		474
        Comparisons:		30
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest15.exe __orio_perftest15.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest15.exe  
Program Test Output: 
{'[2, 1, 2, 0, 6, 1, 0, 0, 2, 13, 0, 6, 1, 1, 0, 0, 1, 0]' : 0.120088}
{'[2, 1, 2, 0, 6, 1, 0, 0, 2, 13, 0, 6, 1, 1, 0, 0, 1, 0]' : 0.119903}
{'[2, 1, 2, 0, 6, 1, 0, 0, 2, 13, 0, 6, 1, 1, 0, 0, 1, 0]' : 0.120047}
{'[2, 1, 2, 0, 6, 1, 0, 0, 2, 13, 0, 6, 1, 1, 0, 0, 1, 0]' : 0.119975}
{'[2, 1, 2, 0, 6, 1, 0, 0, 2, 13, 0, 6, 1, 1, 0, 0, 1, 0]' : 0.119797}
{'[2, 1, 2, 0, 6, 1, 0, 0, 2, 13, 0, 6, 1, 1, 0, 0, 1, 0]' : 0.120312}
{'[2, 1, 2, 0, 6, 1, 0, 0, 2, 13, 0, 6, 1, 1, 0, 0, 1, 0]' : 0.120559}
{'[2, 1, 2, 0, 6, 1, 0, 0, 2, 13, 0, 6, 1, 1, 0, 0, 1, 0]' : 0.120028}
{'[2, 1, 2, 0, 6, 1, 0, 0, 2, 13, 0, 6, 1, 1, 0, 0, 1, 0]' : 0.119916}
{'[2, 1, 2, 0, 6, 1, 0, 0, 2, 13, 0, 6, 1, 1, 0, 0, 1, 0]' : 0.119973}
{'[2, 1, 2, 0, 6, 1, 0, 0, 2, 13, 0, 6, 1, 1, 0, 0, 1, 0]' : 0.119977}
{'[2, 1, 2, 0, 6, 1, 0, 0, 2, 13, 0, 6, 1, 1, 0, 0, 1, 0]' : 0.119973}
{'[2, 1, 2, 0, 6, 1, 0, 0, 2, 13, 0, 6, 1, 1, 0, 0, 1, 0]' : 0.120116}
{'[2, 1, 2, 0, 6, 1, 0, 0, 2, 13, 0, 6, 1, 1, 0, 0, 1, 0]' : 0.120028}
{'[2, 1, 2, 0, 6, 1, 0, 0, 2, 13, 0, 6, 1, 1, 0, 0, 1, 0]' : 0.11858}
{'[2, 1, 2, 0, 6, 1, 0, 0, 2, 13, 0, 6, 1, 1, 0, 0, 1, 0]' : 0.116965}
{'[2, 1, 2, 0, 6, 1, 0, 0, 2, 13, 0, 6, 1, 1, 0, 0, 1, 0]' : 0.116507}
{'[2, 1, 2, 0, 6, 1, 0, 0, 2, 13, 0, 6, 1, 1, 0, 0, 1, 0]' : 0.116756}
{'[2, 1, 2, 0, 6, 1, 0, 0, 2, 13, 0, 6, 1, 1, 0, 0, 1, 0]' : 0.116415}
{'[2, 1, 2, 0, 6, 1, 0, 0, 2, 13, 0, 6, 1, 1, 0, 0, 1, 0]' : 0.120319}
{'[2, 1, 2, 0, 6, 1, 0, 0, 2, 13, 0, 6, 1, 1, 0, 0, 1, 0]' : 0.11987}
{'[2, 1, 2, 0, 6, 1, 0, 0, 2, 13, 0, 6, 1, 1, 0, 0, 1, 0]' : 0.119865}
{'[2, 1, 2, 0, 6, 1, 0, 0, 2, 13, 0, 6, 1, 1, 0, 0, 1, 0]' : 0.120307}
{'[2, 1, 2, 0, 6, 1, 0, 0, 2, 13, 0, 6, 1, 1, 0, 0, 1, 0]' : 0.120242}
{'[2, 1, 2, 0, 6, 1, 0, 0, 2, 13, 0, 6, 1, 1, 0, 0, 1, 0]' : 0.120176}
{'[2, 1, 2, 0, 6, 1, 0, 0, 2, 13, 0, 6, 1, 1, 0, 0, 1, 0]' : 0.119933}
{'[2, 1, 2, 0, 6, 1, 0, 0, 2, 13, 0, 6, 1, 1, 0, 0, 1, 0]' : 0.119809}
{'[2, 1, 2, 0, 6, 1, 0, 0, 2, 13, 0, 6, 1, 1, 0, 0, 1, 0]' : 0.120109}
{'[2, 1, 2, 0, 6, 1, 0, 0, 2, 13, 0, 6, 1, 1, 0, 0, 1, 0]' : 0.119912}
{'[2, 1, 2, 0, 6, 1, 0, 0, 2, 13, 0, 6, 1, 1, 0, 0, 1, 0]' : 0.119875}

out:
 ["{'[2, 1, 2, 0, 6, 1, 0, 0, 2, 13, 0, 6, 1, 1, 0, 0, 1, 0]' : 0.120088}", "{'[2, 1, 2, 0, 6, 1, 0, 0, 2, 13, 0, 6, 1, 1, 0, 0, 1, 0]' : 0.119903}", "{'[2, 1, 2, 0, 6, 1, 0, 0, 2, 13, 0, 6, 1, 1, 0, 0, 1, 0]' : 0.120047}", "{'[2, 1, 2, 0, 6, 1, 0, 0, 2, 13, 0, 6, 1, 1, 0, 0, 1, 0]' : 0.119975}", "{'[2, 1, 2, 0, 6, 1, 0, 0, 2, 13, 0, 6, 1, 1, 0, 0, 1, 0]' : 0.119797}", "{'[2, 1, 2, 0, 6, 1, 0, 0, 2, 13, 0, 6, 1, 1, 0, 0, 1, 0]' : 0.120312}", "{'[2, 1, 2, 0, 6, 1, 0, 0, 2, 13, 0, 6, 1, 1, 0, 0, 1, 0]' : 0.120559}", "{'[2, 1, 2, 0, 6, 1, 0, 0, 2, 13, 0, 6, 1, 1, 0, 0, 1, 0]' : 0.120028}", "{'[2, 1, 2, 0, 6, 1, 0, 0, 2, 13, 0, 6, 1, 1, 0, 0, 1, 0]' : 0.119916}", "{'[2, 1, 2, 0, 6, 1, 0, 0, 2, 13, 0, 6, 1, 1, 0, 0, 1, 0]' : 0.119973}", "{'[2, 1, 2, 0, 6, 1, 0, 0, 2, 13, 0, 6, 1, 1, 0, 0, 1, 0]' : 0.119977}", "{'[2, 1, 2, 0, 6, 1, 0, 0, 2, 13, 0, 6, 1, 1, 0, 0, 1, 0]' : 0.119973}", "{'[2, 1, 2, 0, 6, 1, 0, 0, 2, 13, 0, 6, 1, 1, 0, 0, 1, 0]' : 0.120116}", "{'[2, 1, 2, 0, 6, 1, 0, 0, 2, 13, 0, 6, 1, 1, 0, 0, 1, 0]' : 0.120028}", "{'[2, 1, 2, 0, 6, 1, 0, 0, 2, 13, 0, 6, 1, 1, 0, 0, 1, 0]' : 0.11858}", "{'[2, 1, 2, 0, 6, 1, 0, 0, 2, 13, 0, 6, 1, 1, 0, 0, 1, 0]' : 0.116965}", "{'[2, 1, 2, 0, 6, 1, 0, 0, 2, 13, 0, 6, 1, 1, 0, 0, 1, 0]' : 0.116507}", "{'[2, 1, 2, 0, 6, 1, 0, 0, 2, 13, 0, 6, 1, 1, 0, 0, 1, 0]' : 0.116756}", "{'[2, 1, 2, 0, 6, 1, 0, 0, 2, 13, 0, 6, 1, 1, 0, 0, 1, 0]' : 0.116415}", "{'[2, 1, 2, 0, 6, 1, 0, 0, 2, 13, 0, 6, 1, 1, 0, 0, 1, 0]' : 0.120319}", "{'[2, 1, 2, 0, 6, 1, 0, 0, 2, 13, 0, 6, 1, 1, 0, 0, 1, 0]' : 0.11987}", "{'[2, 1, 2, 0, 6, 1, 0, 0, 2, 13, 0, 6, 1, 1, 0, 0, 1, 0]' : 0.119865}", "{'[2, 1, 2, 0, 6, 1, 0, 0, 2, 13, 0, 6, 1, 1, 0, 0, 1, 0]' : 0.120307}", "{'[2, 1, 2, 0, 6, 1, 0, 0, 2, 13, 0, 6, 1, 1, 0, 0, 1, 0]' : 0.120242}", "{'[2, 1, 2, 0, 6, 1, 0, 0, 2, 13, 0, 6, 1, 1, 0, 0, 1, 0]' : 0.120176}", "{'[2, 1, 2, 0, 6, 1, 0, 0, 2, 13, 0, 6, 1, 1, 0, 0, 1, 0]' : 0.119933}", "{'[2, 1, 2, 0, 6, 1, 0, 0, 2, 13, 0, 6, 1, 1, 0, 0, 1, 0]' : 0.119809}", "{'[2, 1, 2, 0, 6, 1, 0, 0, 2, 13, 0, 6, 1, 1, 0, 0, 1, 0]' : 0.120109}", "{'[2, 1, 2, 0, 6, 1, 0, 0, 2, 13, 0, 6, 1, 1, 0, 0, 1, 0]' : 0.119912}", "{'[2, 1, 2, 0, 6, 1, 0, 0, 2, 13, 0, 6, 1, 1, 0, 0, 1, 0]' : 0.119875}"]
returning from 'run': {'[2, 1, 2, 0, 6, 1, 0, 0, 2, 13, 0, 6, 1, 1, 0, 0, 1, 0]': ([0.120088, 0.119903, 0.120047, 0.119975, 0.119797, 0.120312, 0.120559, 0.120028, 0.119916, 0.119973, 0.119977, 0.119973, 0.120116, 0.120028, 0.11858, 0.116965, 0.116507, 0.116756, 0.116415, 0.120319, 0.11987, 0.119865, 0.120307, 0.120242, 0.120176, 0.119933, 0.119809, 0.120109, 0.119912, 0.119875], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 1, 2, 0, 6, 1, 0, 0, 2, 13, 0, 6, 1, 1, 0, 0, 1, 0]': ([0.120088, 0.119903, 0.120047, 0.119975, 0.119797, 0.120312, 0.120559, 0.120028, 0.119916, 0.119973, 0.119977, 0.119973, 0.120116, 0.120028, 0.11858, 0.116965, 0.116507, 0.116756, 0.116415, 0.120319, 0.11987, 0.119865, 0.120307, 0.120242, 0.120176, 0.119933, 0.119809, 0.120109, 0.119912, 0.119875], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		300
        Multiplications: 	104
        Divisions: 		0
        Logical: 		0
        Reads: 			660
        Writes: 		104
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest16.exe __orio_perftest16.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest16.exe  
Program Test Output: 
{'[0, 0, 5, 6, 1, 0, 0, 0, 14, 0, 5, 27, 0, 1, 1, 0, 1, 1]' : 0.216891}
{'[0, 0, 5, 6, 1, 0, 0, 0, 14, 0, 5, 27, 0, 1, 1, 0, 1, 1]' : 0.191426}
{'[0, 0, 5, 6, 1, 0, 0, 0, 14, 0, 5, 27, 0, 1, 1, 0, 1, 1]' : 0.193798}
{'[0, 0, 5, 6, 1, 0, 0, 0, 14, 0, 5, 27, 0, 1, 1, 0, 1, 1]' : 0.18547}
{'[0, 0, 5, 6, 1, 0, 0, 0, 14, 0, 5, 27, 0, 1, 1, 0, 1, 1]' : 0.18766}
{'[0, 0, 5, 6, 1, 0, 0, 0, 14, 0, 5, 27, 0, 1, 1, 0, 1, 1]' : 0.187557}
{'[0, 0, 5, 6, 1, 0, 0, 0, 14, 0, 5, 27, 0, 1, 1, 0, 1, 1]' : 0.185474}
{'[0, 0, 5, 6, 1, 0, 0, 0, 14, 0, 5, 27, 0, 1, 1, 0, 1, 1]' : 0.187888}
{'[0, 0, 5, 6, 1, 0, 0, 0, 14, 0, 5, 27, 0, 1, 1, 0, 1, 1]' : 0.187609}
{'[0, 0, 5, 6, 1, 0, 0, 0, 14, 0, 5, 27, 0, 1, 1, 0, 1, 1]' : 0.19204}
{'[0, 0, 5, 6, 1, 0, 0, 0, 14, 0, 5, 27, 0, 1, 1, 0, 1, 1]' : 0.193805}
{'[0, 0, 5, 6, 1, 0, 0, 0, 14, 0, 5, 27, 0, 1, 1, 0, 1, 1]' : 0.193454}
{'[0, 0, 5, 6, 1, 0, 0, 0, 14, 0, 5, 27, 0, 1, 1, 0, 1, 1]' : 0.18877}
{'[0, 0, 5, 6, 1, 0, 0, 0, 14, 0, 5, 27, 0, 1, 1, 0, 1, 1]' : 0.193848}
{'[0, 0, 5, 6, 1, 0, 0, 0, 14, 0, 5, 27, 0, 1, 1, 0, 1, 1]' : 0.1939}
{'[0, 0, 5, 6, 1, 0, 0, 0, 14, 0, 5, 27, 0, 1, 1, 0, 1, 1]' : 0.188022}
{'[0, 0, 5, 6, 1, 0, 0, 0, 14, 0, 5, 27, 0, 1, 1, 0, 1, 1]' : 0.187721}
{'[0, 0, 5, 6, 1, 0, 0, 0, 14, 0, 5, 27, 0, 1, 1, 0, 1, 1]' : 0.193177}
{'[0, 0, 5, 6, 1, 0, 0, 0, 14, 0, 5, 27, 0, 1, 1, 0, 1, 1]' : 0.193899}
{'[0, 0, 5, 6, 1, 0, 0, 0, 14, 0, 5, 27, 0, 1, 1, 0, 1, 1]' : 0.193947}
{'[0, 0, 5, 6, 1, 0, 0, 0, 14, 0, 5, 27, 0, 1, 1, 0, 1, 1]' : 0.193892}
{'[0, 0, 5, 6, 1, 0, 0, 0, 14, 0, 5, 27, 0, 1, 1, 0, 1, 1]' : 0.194035}
{'[0, 0, 5, 6, 1, 0, 0, 0, 14, 0, 5, 27, 0, 1, 1, 0, 1, 1]' : 0.193484}
{'[0, 0, 5, 6, 1, 0, 0, 0, 14, 0, 5, 27, 0, 1, 1, 0, 1, 1]' : 0.184867}
{'[0, 0, 5, 6, 1, 0, 0, 0, 14, 0, 5, 27, 0, 1, 1, 0, 1, 1]' : 0.182442}
{'[0, 0, 5, 6, 1, 0, 0, 0, 14, 0, 5, 27, 0, 1, 1, 0, 1, 1]' : 0.191733}
{'[0, 0, 5, 6, 1, 0, 0, 0, 14, 0, 5, 27, 0, 1, 1, 0, 1, 1]' : 0.193846}
{'[0, 0, 5, 6, 1, 0, 0, 0, 14, 0, 5, 27, 0, 1, 1, 0, 1, 1]' : 0.193894}
{'[0, 0, 5, 6, 1, 0, 0, 0, 14, 0, 5, 27, 0, 1, 1, 0, 1, 1]' : 0.190191}
{'[0, 0, 5, 6, 1, 0, 0, 0, 14, 0, 5, 27, 0, 1, 1, 0, 1, 1]' : 0.186746}

out:
 ["{'[0, 0, 5, 6, 1, 0, 0, 0, 14, 0, 5, 27, 0, 1, 1, 0, 1, 1]' : 0.216891}", "{'[0, 0, 5, 6, 1, 0, 0, 0, 14, 0, 5, 27, 0, 1, 1, 0, 1, 1]' : 0.191426}", "{'[0, 0, 5, 6, 1, 0, 0, 0, 14, 0, 5, 27, 0, 1, 1, 0, 1, 1]' : 0.193798}", "{'[0, 0, 5, 6, 1, 0, 0, 0, 14, 0, 5, 27, 0, 1, 1, 0, 1, 1]' : 0.18547}", "{'[0, 0, 5, 6, 1, 0, 0, 0, 14, 0, 5, 27, 0, 1, 1, 0, 1, 1]' : 0.18766}", "{'[0, 0, 5, 6, 1, 0, 0, 0, 14, 0, 5, 27, 0, 1, 1, 0, 1, 1]' : 0.187557}", "{'[0, 0, 5, 6, 1, 0, 0, 0, 14, 0, 5, 27, 0, 1, 1, 0, 1, 1]' : 0.185474}", "{'[0, 0, 5, 6, 1, 0, 0, 0, 14, 0, 5, 27, 0, 1, 1, 0, 1, 1]' : 0.187888}", "{'[0, 0, 5, 6, 1, 0, 0, 0, 14, 0, 5, 27, 0, 1, 1, 0, 1, 1]' : 0.187609}", "{'[0, 0, 5, 6, 1, 0, 0, 0, 14, 0, 5, 27, 0, 1, 1, 0, 1, 1]' : 0.19204}", "{'[0, 0, 5, 6, 1, 0, 0, 0, 14, 0, 5, 27, 0, 1, 1, 0, 1, 1]' : 0.193805}", "{'[0, 0, 5, 6, 1, 0, 0, 0, 14, 0, 5, 27, 0, 1, 1, 0, 1, 1]' : 0.193454}", "{'[0, 0, 5, 6, 1, 0, 0, 0, 14, 0, 5, 27, 0, 1, 1, 0, 1, 1]' : 0.18877}", "{'[0, 0, 5, 6, 1, 0, 0, 0, 14, 0, 5, 27, 0, 1, 1, 0, 1, 1]' : 0.193848}", "{'[0, 0, 5, 6, 1, 0, 0, 0, 14, 0, 5, 27, 0, 1, 1, 0, 1, 1]' : 0.1939}", "{'[0, 0, 5, 6, 1, 0, 0, 0, 14, 0, 5, 27, 0, 1, 1, 0, 1, 1]' : 0.188022}", "{'[0, 0, 5, 6, 1, 0, 0, 0, 14, 0, 5, 27, 0, 1, 1, 0, 1, 1]' : 0.187721}", "{'[0, 0, 5, 6, 1, 0, 0, 0, 14, 0, 5, 27, 0, 1, 1, 0, 1, 1]' : 0.193177}", "{'[0, 0, 5, 6, 1, 0, 0, 0, 14, 0, 5, 27, 0, 1, 1, 0, 1, 1]' : 0.193899}", "{'[0, 0, 5, 6, 1, 0, 0, 0, 14, 0, 5, 27, 0, 1, 1, 0, 1, 1]' : 0.193947}", "{'[0, 0, 5, 6, 1, 0, 0, 0, 14, 0, 5, 27, 0, 1, 1, 0, 1, 1]' : 0.193892}", "{'[0, 0, 5, 6, 1, 0, 0, 0, 14, 0, 5, 27, 0, 1, 1, 0, 1, 1]' : 0.194035}", "{'[0, 0, 5, 6, 1, 0, 0, 0, 14, 0, 5, 27, 0, 1, 1, 0, 1, 1]' : 0.193484}", "{'[0, 0, 5, 6, 1, 0, 0, 0, 14, 0, 5, 27, 0, 1, 1, 0, 1, 1]' : 0.184867}", "{'[0, 0, 5, 6, 1, 0, 0, 0, 14, 0, 5, 27, 0, 1, 1, 0, 1, 1]' : 0.182442}", "{'[0, 0, 5, 6, 1, 0, 0, 0, 14, 0, 5, 27, 0, 1, 1, 0, 1, 1]' : 0.191733}", "{'[0, 0, 5, 6, 1, 0, 0, 0, 14, 0, 5, 27, 0, 1, 1, 0, 1, 1]' : 0.193846}", "{'[0, 0, 5, 6, 1, 0, 0, 0, 14, 0, 5, 27, 0, 1, 1, 0, 1, 1]' : 0.193894}", "{'[0, 0, 5, 6, 1, 0, 0, 0, 14, 0, 5, 27, 0, 1, 1, 0, 1, 1]' : 0.190191}", "{'[0, 0, 5, 6, 1, 0, 0, 0, 14, 0, 5, 27, 0, 1, 1, 0, 1, 1]' : 0.186746}"]
returning from 'run': {'[0, 0, 5, 6, 1, 0, 0, 0, 14, 0, 5, 27, 0, 1, 1, 0, 1, 1]': ([0.216891, 0.191426, 0.193798, 0.18547, 0.18766, 0.187557, 0.185474, 0.187888, 0.187609, 0.19204, 0.193805, 0.193454, 0.18877, 0.193848, 0.1939, 0.188022, 0.187721, 0.193177, 0.193899, 0.193947, 0.193892, 0.194035, 0.193484, 0.184867, 0.182442, 0.191733, 0.193846, 0.193894, 0.190191, 0.186746], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 5, 6, 1, 0, 0, 0, 14, 0, 5, 27, 0, 1, 1, 0, 1, 1]': ([0.216891, 0.191426, 0.193798, 0.18547, 0.18766, 0.187557, 0.185474, 0.187888, 0.187609, 0.19204, 0.193805, 0.193454, 0.18877, 0.193848, 0.1939, 0.188022, 0.187721, 0.193177, 0.193899, 0.193947, 0.193892, 0.194035, 0.193484, 0.184867, 0.182442, 0.191733, 0.193846, 0.193894, 0.190191, 0.186746], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		224
        Multiplications: 	72
        Divisions: 		0
        Logical: 		0
        Reads: 			524
        Writes: 		88
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest17.exe __orio_perftest17.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest17.exe  
Program Test Output: 
{'[6, 2, 1, 0, 1, 6, 0, 1, 11, 0, 18, 28, 0, 1, 1, 0, 1, 1]' : 0.297277}
{'[6, 2, 1, 0, 1, 6, 0, 1, 11, 0, 18, 28, 0, 1, 1, 0, 1, 1]' : 0.287515}
{'[6, 2, 1, 0, 1, 6, 0, 1, 11, 0, 18, 28, 0, 1, 1, 0, 1, 1]' : 0.255007}
{'[6, 2, 1, 0, 1, 6, 0, 1, 11, 0, 18, 28, 0, 1, 1, 0, 1, 1]' : 0.254557}
{'[6, 2, 1, 0, 1, 6, 0, 1, 11, 0, 18, 28, 0, 1, 1, 0, 1, 1]' : 0.254643}
{'[6, 2, 1, 0, 1, 6, 0, 1, 11, 0, 18, 28, 0, 1, 1, 0, 1, 1]' : 0.252531}
{'[6, 2, 1, 0, 1, 6, 0, 1, 11, 0, 18, 28, 0, 1, 1, 0, 1, 1]' : 0.254844}
{'[6, 2, 1, 0, 1, 6, 0, 1, 11, 0, 18, 28, 0, 1, 1, 0, 1, 1]' : 0.254716}
{'[6, 2, 1, 0, 1, 6, 0, 1, 11, 0, 18, 28, 0, 1, 1, 0, 1, 1]' : 0.255188}
{'[6, 2, 1, 0, 1, 6, 0, 1, 11, 0, 18, 28, 0, 1, 1, 0, 1, 1]' : 0.25477}
{'[6, 2, 1, 0, 1, 6, 0, 1, 11, 0, 18, 28, 0, 1, 1, 0, 1, 1]' : 0.254732}
{'[6, 2, 1, 0, 1, 6, 0, 1, 11, 0, 18, 28, 0, 1, 1, 0, 1, 1]' : 0.254957}
{'[6, 2, 1, 0, 1, 6, 0, 1, 11, 0, 18, 28, 0, 1, 1, 0, 1, 1]' : 0.254883}
{'[6, 2, 1, 0, 1, 6, 0, 1, 11, 0, 18, 28, 0, 1, 1, 0, 1, 1]' : 0.254613}
{'[6, 2, 1, 0, 1, 6, 0, 1, 11, 0, 18, 28, 0, 1, 1, 0, 1, 1]' : 0.254767}
{'[6, 2, 1, 0, 1, 6, 0, 1, 11, 0, 18, 28, 0, 1, 1, 0, 1, 1]' : 0.255442}
{'[6, 2, 1, 0, 1, 6, 0, 1, 11, 0, 18, 28, 0, 1, 1, 0, 1, 1]' : 0.254533}
{'[6, 2, 1, 0, 1, 6, 0, 1, 11, 0, 18, 28, 0, 1, 1, 0, 1, 1]' : 0.254645}
{'[6, 2, 1, 0, 1, 6, 0, 1, 11, 0, 18, 28, 0, 1, 1, 0, 1, 1]' : 0.25469}
{'[6, 2, 1, 0, 1, 6, 0, 1, 11, 0, 18, 28, 0, 1, 1, 0, 1, 1]' : 0.255221}
{'[6, 2, 1, 0, 1, 6, 0, 1, 11, 0, 18, 28, 0, 1, 1, 0, 1, 1]' : 0.254541}
{'[6, 2, 1, 0, 1, 6, 0, 1, 11, 0, 18, 28, 0, 1, 1, 0, 1, 1]' : 0.254785}
{'[6, 2, 1, 0, 1, 6, 0, 1, 11, 0, 18, 28, 0, 1, 1, 0, 1, 1]' : 0.254661}
{'[6, 2, 1, 0, 1, 6, 0, 1, 11, 0, 18, 28, 0, 1, 1, 0, 1, 1]' : 0.255242}
{'[6, 2, 1, 0, 1, 6, 0, 1, 11, 0, 18, 28, 0, 1, 1, 0, 1, 1]' : 0.255097}
{'[6, 2, 1, 0, 1, 6, 0, 1, 11, 0, 18, 28, 0, 1, 1, 0, 1, 1]' : 0.25472}
{'[6, 2, 1, 0, 1, 6, 0, 1, 11, 0, 18, 28, 0, 1, 1, 0, 1, 1]' : 0.254581}
{'[6, 2, 1, 0, 1, 6, 0, 1, 11, 0, 18, 28, 0, 1, 1, 0, 1, 1]' : 0.257742}
{'[6, 2, 1, 0, 1, 6, 0, 1, 11, 0, 18, 28, 0, 1, 1, 0, 1, 1]' : 0.262777}
{'[6, 2, 1, 0, 1, 6, 0, 1, 11, 0, 18, 28, 0, 1, 1, 0, 1, 1]' : 0.258215}

out:
 ["{'[6, 2, 1, 0, 1, 6, 0, 1, 11, 0, 18, 28, 0, 1, 1, 0, 1, 1]' : 0.297277}", "{'[6, 2, 1, 0, 1, 6, 0, 1, 11, 0, 18, 28, 0, 1, 1, 0, 1, 1]' : 0.287515}", "{'[6, 2, 1, 0, 1, 6, 0, 1, 11, 0, 18, 28, 0, 1, 1, 0, 1, 1]' : 0.255007}", "{'[6, 2, 1, 0, 1, 6, 0, 1, 11, 0, 18, 28, 0, 1, 1, 0, 1, 1]' : 0.254557}", "{'[6, 2, 1, 0, 1, 6, 0, 1, 11, 0, 18, 28, 0, 1, 1, 0, 1, 1]' : 0.254643}", "{'[6, 2, 1, 0, 1, 6, 0, 1, 11, 0, 18, 28, 0, 1, 1, 0, 1, 1]' : 0.252531}", "{'[6, 2, 1, 0, 1, 6, 0, 1, 11, 0, 18, 28, 0, 1, 1, 0, 1, 1]' : 0.254844}", "{'[6, 2, 1, 0, 1, 6, 0, 1, 11, 0, 18, 28, 0, 1, 1, 0, 1, 1]' : 0.254716}", "{'[6, 2, 1, 0, 1, 6, 0, 1, 11, 0, 18, 28, 0, 1, 1, 0, 1, 1]' : 0.255188}", "{'[6, 2, 1, 0, 1, 6, 0, 1, 11, 0, 18, 28, 0, 1, 1, 0, 1, 1]' : 0.25477}", "{'[6, 2, 1, 0, 1, 6, 0, 1, 11, 0, 18, 28, 0, 1, 1, 0, 1, 1]' : 0.254732}", "{'[6, 2, 1, 0, 1, 6, 0, 1, 11, 0, 18, 28, 0, 1, 1, 0, 1, 1]' : 0.254957}", "{'[6, 2, 1, 0, 1, 6, 0, 1, 11, 0, 18, 28, 0, 1, 1, 0, 1, 1]' : 0.254883}", "{'[6, 2, 1, 0, 1, 6, 0, 1, 11, 0, 18, 28, 0, 1, 1, 0, 1, 1]' : 0.254613}", "{'[6, 2, 1, 0, 1, 6, 0, 1, 11, 0, 18, 28, 0, 1, 1, 0, 1, 1]' : 0.254767}", "{'[6, 2, 1, 0, 1, 6, 0, 1, 11, 0, 18, 28, 0, 1, 1, 0, 1, 1]' : 0.255442}", "{'[6, 2, 1, 0, 1, 6, 0, 1, 11, 0, 18, 28, 0, 1, 1, 0, 1, 1]' : 0.254533}", "{'[6, 2, 1, 0, 1, 6, 0, 1, 11, 0, 18, 28, 0, 1, 1, 0, 1, 1]' : 0.254645}", "{'[6, 2, 1, 0, 1, 6, 0, 1, 11, 0, 18, 28, 0, 1, 1, 0, 1, 1]' : 0.25469}", "{'[6, 2, 1, 0, 1, 6, 0, 1, 11, 0, 18, 28, 0, 1, 1, 0, 1, 1]' : 0.255221}", "{'[6, 2, 1, 0, 1, 6, 0, 1, 11, 0, 18, 28, 0, 1, 1, 0, 1, 1]' : 0.254541}", "{'[6, 2, 1, 0, 1, 6, 0, 1, 11, 0, 18, 28, 0, 1, 1, 0, 1, 1]' : 0.254785}", "{'[6, 2, 1, 0, 1, 6, 0, 1, 11, 0, 18, 28, 0, 1, 1, 0, 1, 1]' : 0.254661}", "{'[6, 2, 1, 0, 1, 6, 0, 1, 11, 0, 18, 28, 0, 1, 1, 0, 1, 1]' : 0.255242}", "{'[6, 2, 1, 0, 1, 6, 0, 1, 11, 0, 18, 28, 0, 1, 1, 0, 1, 1]' : 0.255097}", "{'[6, 2, 1, 0, 1, 6, 0, 1, 11, 0, 18, 28, 0, 1, 1, 0, 1, 1]' : 0.25472}", "{'[6, 2, 1, 0, 1, 6, 0, 1, 11, 0, 18, 28, 0, 1, 1, 0, 1, 1]' : 0.254581}", "{'[6, 2, 1, 0, 1, 6, 0, 1, 11, 0, 18, 28, 0, 1, 1, 0, 1, 1]' : 0.257742}", "{'[6, 2, 1, 0, 1, 6, 0, 1, 11, 0, 18, 28, 0, 1, 1, 0, 1, 1]' : 0.262777}", "{'[6, 2, 1, 0, 1, 6, 0, 1, 11, 0, 18, 28, 0, 1, 1, 0, 1, 1]' : 0.258215}"]
returning from 'run': {'[6, 2, 1, 0, 1, 6, 0, 1, 11, 0, 18, 28, 0, 1, 1, 0, 1, 1]': ([0.297277, 0.287515, 0.255007, 0.254557, 0.254643, 0.252531, 0.254844, 0.254716, 0.255188, 0.25477, 0.254732, 0.254957, 0.254883, 0.254613, 0.254767, 0.255442, 0.254533, 0.254645, 0.25469, 0.255221, 0.254541, 0.254785, 0.254661, 0.255242, 0.255097, 0.25472, 0.254581, 0.257742, 0.262777, 0.258215], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 2, 1, 0, 1, 6, 0, 1, 11, 0, 18, 28, 0, 1, 1, 0, 1, 1]': ([0.297277, 0.287515, 0.255007, 0.254557, 0.254643, 0.252531, 0.254844, 0.254716, 0.255188, 0.25477, 0.254732, 0.254957, 0.254883, 0.254613, 0.254767, 0.255442, 0.254533, 0.254645, 0.25469, 0.255221, 0.254541, 0.254785, 0.254661, 0.255242, 0.255097, 0.25472, 0.254581, 0.257742, 0.262777, 0.258215], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	103
        Max loop nest depth: 	6
        Additions: 		13057
        Multiplications: 	3480
        Divisions: 		0
        Logical: 		0
        Reads: 			19437
        Writes: 		2115
        Comparisons:		103
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest18.exe __orio_perftest18.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest18.exe  
Program Test Output: 
{'[4, 2, 5, 5, 3, 0, 1, 0, 15, 27, 25, 0, 0, 0, 2, 0, 1, 1]' : 0.207214}
{'[4, 2, 5, 5, 3, 0, 1, 0, 15, 27, 25, 0, 0, 0, 2, 0, 1, 1]' : 0.208942}
{'[4, 2, 5, 5, 3, 0, 1, 0, 15, 27, 25, 0, 0, 0, 2, 0, 1, 1]' : 0.209007}
{'[4, 2, 5, 5, 3, 0, 1, 0, 15, 27, 25, 0, 0, 0, 2, 0, 1, 1]' : 0.198404}
{'[4, 2, 5, 5, 3, 0, 1, 0, 15, 27, 25, 0, 0, 0, 2, 0, 1, 1]' : 0.20344}
{'[4, 2, 5, 5, 3, 0, 1, 0, 15, 27, 25, 0, 0, 0, 2, 0, 1, 1]' : 0.203859}
{'[4, 2, 5, 5, 3, 0, 1, 0, 15, 27, 25, 0, 0, 0, 2, 0, 1, 1]' : 0.203549}
{'[4, 2, 5, 5, 3, 0, 1, 0, 15, 27, 25, 0, 0, 0, 2, 0, 1, 1]' : 0.209151}
{'[4, 2, 5, 5, 3, 0, 1, 0, 15, 27, 25, 0, 0, 0, 2, 0, 1, 1]' : 0.198742}
{'[4, 2, 5, 5, 3, 0, 1, 0, 15, 27, 25, 0, 0, 0, 2, 0, 1, 1]' : 0.213082}
{'[4, 2, 5, 5, 3, 0, 1, 0, 15, 27, 25, 0, 0, 0, 2, 0, 1, 1]' : 0.437351}
{'[4, 2, 5, 5, 3, 0, 1, 0, 15, 27, 25, 0, 0, 0, 2, 0, 1, 1]' : 0.45384}
{'[4, 2, 5, 5, 3, 0, 1, 0, 15, 27, 25, 0, 0, 0, 2, 0, 1, 1]' : 0.416001}
{'[4, 2, 5, 5, 3, 0, 1, 0, 15, 27, 25, 0, 0, 0, 2, 0, 1, 1]' : 0.198696}
{'[4, 2, 5, 5, 3, 0, 1, 0, 15, 27, 25, 0, 0, 0, 2, 0, 1, 1]' : 0.197907}
{'[4, 2, 5, 5, 3, 0, 1, 0, 15, 27, 25, 0, 0, 0, 2, 0, 1, 1]' : 0.2055}
{'[4, 2, 5, 5, 3, 0, 1, 0, 15, 27, 25, 0, 0, 0, 2, 0, 1, 1]' : 0.21219}
{'[4, 2, 5, 5, 3, 0, 1, 0, 15, 27, 25, 0, 0, 0, 2, 0, 1, 1]' : 0.206633}
{'[4, 2, 5, 5, 3, 0, 1, 0, 15, 27, 25, 0, 0, 0, 2, 0, 1, 1]' : 0.202041}
{'[4, 2, 5, 5, 3, 0, 1, 0, 15, 27, 25, 0, 0, 0, 2, 0, 1, 1]' : 0.198702}
{'[4, 2, 5, 5, 3, 0, 1, 0, 15, 27, 25, 0, 0, 0, 2, 0, 1, 1]' : 0.19864}
{'[4, 2, 5, 5, 3, 0, 1, 0, 15, 27, 25, 0, 0, 0, 2, 0, 1, 1]' : 0.199812}
{'[4, 2, 5, 5, 3, 0, 1, 0, 15, 27, 25, 0, 0, 0, 2, 0, 1, 1]' : 0.198881}
{'[4, 2, 5, 5, 3, 0, 1, 0, 15, 27, 25, 0, 0, 0, 2, 0, 1, 1]' : 0.204663}
{'[4, 2, 5, 5, 3, 0, 1, 0, 15, 27, 25, 0, 0, 0, 2, 0, 1, 1]' : 0.204798}
{'[4, 2, 5, 5, 3, 0, 1, 0, 15, 27, 25, 0, 0, 0, 2, 0, 1, 1]' : 0.204246}
{'[4, 2, 5, 5, 3, 0, 1, 0, 15, 27, 25, 0, 0, 0, 2, 0, 1, 1]' : 0.204636}
{'[4, 2, 5, 5, 3, 0, 1, 0, 15, 27, 25, 0, 0, 0, 2, 0, 1, 1]' : 0.206213}
{'[4, 2, 5, 5, 3, 0, 1, 0, 15, 27, 25, 0, 0, 0, 2, 0, 1, 1]' : 0.203141}
{'[4, 2, 5, 5, 3, 0, 1, 0, 15, 27, 25, 0, 0, 0, 2, 0, 1, 1]' : 0.198412}

out:
 ["{'[4, 2, 5, 5, 3, 0, 1, 0, 15, 27, 25, 0, 0, 0, 2, 0, 1, 1]' : 0.207214}", "{'[4, 2, 5, 5, 3, 0, 1, 0, 15, 27, 25, 0, 0, 0, 2, 0, 1, 1]' : 0.208942}", "{'[4, 2, 5, 5, 3, 0, 1, 0, 15, 27, 25, 0, 0, 0, 2, 0, 1, 1]' : 0.209007}", "{'[4, 2, 5, 5, 3, 0, 1, 0, 15, 27, 25, 0, 0, 0, 2, 0, 1, 1]' : 0.198404}", "{'[4, 2, 5, 5, 3, 0, 1, 0, 15, 27, 25, 0, 0, 0, 2, 0, 1, 1]' : 0.20344}", "{'[4, 2, 5, 5, 3, 0, 1, 0, 15, 27, 25, 0, 0, 0, 2, 0, 1, 1]' : 0.203859}", "{'[4, 2, 5, 5, 3, 0, 1, 0, 15, 27, 25, 0, 0, 0, 2, 0, 1, 1]' : 0.203549}", "{'[4, 2, 5, 5, 3, 0, 1, 0, 15, 27, 25, 0, 0, 0, 2, 0, 1, 1]' : 0.209151}", "{'[4, 2, 5, 5, 3, 0, 1, 0, 15, 27, 25, 0, 0, 0, 2, 0, 1, 1]' : 0.198742}", "{'[4, 2, 5, 5, 3, 0, 1, 0, 15, 27, 25, 0, 0, 0, 2, 0, 1, 1]' : 0.213082}", "{'[4, 2, 5, 5, 3, 0, 1, 0, 15, 27, 25, 0, 0, 0, 2, 0, 1, 1]' : 0.437351}", "{'[4, 2, 5, 5, 3, 0, 1, 0, 15, 27, 25, 0, 0, 0, 2, 0, 1, 1]' : 0.45384}", "{'[4, 2, 5, 5, 3, 0, 1, 0, 15, 27, 25, 0, 0, 0, 2, 0, 1, 1]' : 0.416001}", "{'[4, 2, 5, 5, 3, 0, 1, 0, 15, 27, 25, 0, 0, 0, 2, 0, 1, 1]' : 0.198696}", "{'[4, 2, 5, 5, 3, 0, 1, 0, 15, 27, 25, 0, 0, 0, 2, 0, 1, 1]' : 0.197907}", "{'[4, 2, 5, 5, 3, 0, 1, 0, 15, 27, 25, 0, 0, 0, 2, 0, 1, 1]' : 0.2055}", "{'[4, 2, 5, 5, 3, 0, 1, 0, 15, 27, 25, 0, 0, 0, 2, 0, 1, 1]' : 0.21219}", "{'[4, 2, 5, 5, 3, 0, 1, 0, 15, 27, 25, 0, 0, 0, 2, 0, 1, 1]' : 0.206633}", "{'[4, 2, 5, 5, 3, 0, 1, 0, 15, 27, 25, 0, 0, 0, 2, 0, 1, 1]' : 0.202041}", "{'[4, 2, 5, 5, 3, 0, 1, 0, 15, 27, 25, 0, 0, 0, 2, 0, 1, 1]' : 0.198702}", "{'[4, 2, 5, 5, 3, 0, 1, 0, 15, 27, 25, 0, 0, 0, 2, 0, 1, 1]' : 0.19864}", "{'[4, 2, 5, 5, 3, 0, 1, 0, 15, 27, 25, 0, 0, 0, 2, 0, 1, 1]' : 0.199812}", "{'[4, 2, 5, 5, 3, 0, 1, 0, 15, 27, 25, 0, 0, 0, 2, 0, 1, 1]' : 0.198881}", "{'[4, 2, 5, 5, 3, 0, 1, 0, 15, 27, 25, 0, 0, 0, 2, 0, 1, 1]' : 0.204663}", "{'[4, 2, 5, 5, 3, 0, 1, 0, 15, 27, 25, 0, 0, 0, 2, 0, 1, 1]' : 0.204798}", "{'[4, 2, 5, 5, 3, 0, 1, 0, 15, 27, 25, 0, 0, 0, 2, 0, 1, 1]' : 0.204246}", "{'[4, 2, 5, 5, 3, 0, 1, 0, 15, 27, 25, 0, 0, 0, 2, 0, 1, 1]' : 0.204636}", "{'[4, 2, 5, 5, 3, 0, 1, 0, 15, 27, 25, 0, 0, 0, 2, 0, 1, 1]' : 0.206213}", "{'[4, 2, 5, 5, 3, 0, 1, 0, 15, 27, 25, 0, 0, 0, 2, 0, 1, 1]' : 0.203141}", "{'[4, 2, 5, 5, 3, 0, 1, 0, 15, 27, 25, 0, 0, 0, 2, 0, 1, 1]' : 0.198412}"]
returning from 'run': {'[4, 2, 5, 5, 3, 0, 1, 0, 15, 27, 25, 0, 0, 0, 2, 0, 1, 1]': ([0.207214, 0.208942, 0.209007, 0.198404, 0.20344, 0.203859, 0.203549, 0.209151, 0.198742, 0.213082, 0.437351, 0.45384, 0.416001, 0.198696, 0.197907, 0.2055, 0.21219, 0.206633, 0.202041, 0.198702, 0.19864, 0.199812, 0.198881, 0.204663, 0.204798, 0.204246, 0.204636, 0.206213, 0.203141, 0.198412], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 2, 5, 5, 3, 0, 1, 0, 15, 27, 25, 0, 0, 0, 2, 0, 1, 1]': ([0.207214, 0.208942, 0.209007, 0.198404, 0.20344, 0.203859, 0.203549, 0.209151, 0.198742, 0.213082, 0.437351, 0.45384, 0.416001, 0.198696, 0.197907, 0.2055, 0.21219, 0.206633, 0.202041, 0.198702, 0.19864, 0.199812, 0.198881, 0.204663, 0.204798, 0.204246, 0.204636, 0.206213, 0.203141, 0.198412], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	5
        Additions: 		920
        Multiplications: 	264
        Divisions: 		0
        Logical: 		0
        Reads: 			1666
        Writes: 		184
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest19.exe __orio_perftest19.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest19.exe  
Program Test Output: 
{'[3, 6, 2, 6, 0, 0, 1, 1, 0, 0, 1, 0, 2, 0, 0, 0, 1, 0]' : 0.162678}
{'[3, 6, 2, 6, 0, 0, 1, 1, 0, 0, 1, 0, 2, 0, 0, 0, 1, 0]' : 0.165404}
{'[3, 6, 2, 6, 0, 0, 1, 1, 0, 0, 1, 0, 2, 0, 0, 0, 1, 0]' : 0.16584}
{'[3, 6, 2, 6, 0, 0, 1, 1, 0, 0, 1, 0, 2, 0, 0, 0, 1, 0]' : 0.162593}
{'[3, 6, 2, 6, 0, 0, 1, 1, 0, 0, 1, 0, 2, 0, 0, 0, 1, 0]' : 0.161357}
{'[3, 6, 2, 6, 0, 0, 1, 1, 0, 0, 1, 0, 2, 0, 0, 0, 1, 0]' : 0.161303}
{'[3, 6, 2, 6, 0, 0, 1, 1, 0, 0, 1, 0, 2, 0, 0, 0, 1, 0]' : 0.163142}
{'[3, 6, 2, 6, 0, 0, 1, 1, 0, 0, 1, 0, 2, 0, 0, 0, 1, 0]' : 0.161331}
{'[3, 6, 2, 6, 0, 0, 1, 1, 0, 0, 1, 0, 2, 0, 0, 0, 1, 0]' : 0.161721}
{'[3, 6, 2, 6, 0, 0, 1, 1, 0, 0, 1, 0, 2, 0, 0, 0, 1, 0]' : 0.164447}
{'[3, 6, 2, 6, 0, 0, 1, 1, 0, 0, 1, 0, 2, 0, 0, 0, 1, 0]' : 0.164221}
{'[3, 6, 2, 6, 0, 0, 1, 1, 0, 0, 1, 0, 2, 0, 0, 0, 1, 0]' : 0.161344}
{'[3, 6, 2, 6, 0, 0, 1, 1, 0, 0, 1, 0, 2, 0, 0, 0, 1, 0]' : 0.164338}
{'[3, 6, 2, 6, 0, 0, 1, 1, 0, 0, 1, 0, 2, 0, 0, 0, 1, 0]' : 0.15935}
{'[3, 6, 2, 6, 0, 0, 1, 1, 0, 0, 1, 0, 2, 0, 0, 0, 1, 0]' : 0.157914}
{'[3, 6, 2, 6, 0, 0, 1, 1, 0, 0, 1, 0, 2, 0, 0, 0, 1, 0]' : 0.160864}
{'[3, 6, 2, 6, 0, 0, 1, 1, 0, 0, 1, 0, 2, 0, 0, 0, 1, 0]' : 0.162288}
{'[3, 6, 2, 6, 0, 0, 1, 1, 0, 0, 1, 0, 2, 0, 0, 0, 1, 0]' : 0.157945}
{'[3, 6, 2, 6, 0, 0, 1, 1, 0, 0, 1, 0, 2, 0, 0, 0, 1, 0]' : 0.160573}
{'[3, 6, 2, 6, 0, 0, 1, 1, 0, 0, 1, 0, 2, 0, 0, 0, 1, 0]' : 0.157696}
{'[3, 6, 2, 6, 0, 0, 1, 1, 0, 0, 1, 0, 2, 0, 0, 0, 1, 0]' : 0.157813}
{'[3, 6, 2, 6, 0, 0, 1, 1, 0, 0, 1, 0, 2, 0, 0, 0, 1, 0]' : 0.158752}
{'[3, 6, 2, 6, 0, 0, 1, 1, 0, 0, 1, 0, 2, 0, 0, 0, 1, 0]' : 0.165195}
{'[3, 6, 2, 6, 0, 0, 1, 1, 0, 0, 1, 0, 2, 0, 0, 0, 1, 0]' : 0.157515}
{'[3, 6, 2, 6, 0, 0, 1, 1, 0, 0, 1, 0, 2, 0, 0, 0, 1, 0]' : 0.158308}
{'[3, 6, 2, 6, 0, 0, 1, 1, 0, 0, 1, 0, 2, 0, 0, 0, 1, 0]' : 0.161737}
{'[3, 6, 2, 6, 0, 0, 1, 1, 0, 0, 1, 0, 2, 0, 0, 0, 1, 0]' : 0.161483}
{'[3, 6, 2, 6, 0, 0, 1, 1, 0, 0, 1, 0, 2, 0, 0, 0, 1, 0]' : 0.161655}
{'[3, 6, 2, 6, 0, 0, 1, 1, 0, 0, 1, 0, 2, 0, 0, 0, 1, 0]' : 0.162483}
{'[3, 6, 2, 6, 0, 0, 1, 1, 0, 0, 1, 0, 2, 0, 0, 0, 1, 0]' : 0.158898}

out:
 ["{'[3, 6, 2, 6, 0, 0, 1, 1, 0, 0, 1, 0, 2, 0, 0, 0, 1, 0]' : 0.162678}", "{'[3, 6, 2, 6, 0, 0, 1, 1, 0, 0, 1, 0, 2, 0, 0, 0, 1, 0]' : 0.165404}", "{'[3, 6, 2, 6, 0, 0, 1, 1, 0, 0, 1, 0, 2, 0, 0, 0, 1, 0]' : 0.16584}", "{'[3, 6, 2, 6, 0, 0, 1, 1, 0, 0, 1, 0, 2, 0, 0, 0, 1, 0]' : 0.162593}", "{'[3, 6, 2, 6, 0, 0, 1, 1, 0, 0, 1, 0, 2, 0, 0, 0, 1, 0]' : 0.161357}", "{'[3, 6, 2, 6, 0, 0, 1, 1, 0, 0, 1, 0, 2, 0, 0, 0, 1, 0]' : 0.161303}", "{'[3, 6, 2, 6, 0, 0, 1, 1, 0, 0, 1, 0, 2, 0, 0, 0, 1, 0]' : 0.163142}", "{'[3, 6, 2, 6, 0, 0, 1, 1, 0, 0, 1, 0, 2, 0, 0, 0, 1, 0]' : 0.161331}", "{'[3, 6, 2, 6, 0, 0, 1, 1, 0, 0, 1, 0, 2, 0, 0, 0, 1, 0]' : 0.161721}", "{'[3, 6, 2, 6, 0, 0, 1, 1, 0, 0, 1, 0, 2, 0, 0, 0, 1, 0]' : 0.164447}", "{'[3, 6, 2, 6, 0, 0, 1, 1, 0, 0, 1, 0, 2, 0, 0, 0, 1, 0]' : 0.164221}", "{'[3, 6, 2, 6, 0, 0, 1, 1, 0, 0, 1, 0, 2, 0, 0, 0, 1, 0]' : 0.161344}", "{'[3, 6, 2, 6, 0, 0, 1, 1, 0, 0, 1, 0, 2, 0, 0, 0, 1, 0]' : 0.164338}", "{'[3, 6, 2, 6, 0, 0, 1, 1, 0, 0, 1, 0, 2, 0, 0, 0, 1, 0]' : 0.15935}", "{'[3, 6, 2, 6, 0, 0, 1, 1, 0, 0, 1, 0, 2, 0, 0, 0, 1, 0]' : 0.157914}", "{'[3, 6, 2, 6, 0, 0, 1, 1, 0, 0, 1, 0, 2, 0, 0, 0, 1, 0]' : 0.160864}", "{'[3, 6, 2, 6, 0, 0, 1, 1, 0, 0, 1, 0, 2, 0, 0, 0, 1, 0]' : 0.162288}", "{'[3, 6, 2, 6, 0, 0, 1, 1, 0, 0, 1, 0, 2, 0, 0, 0, 1, 0]' : 0.157945}", "{'[3, 6, 2, 6, 0, 0, 1, 1, 0, 0, 1, 0, 2, 0, 0, 0, 1, 0]' : 0.160573}", "{'[3, 6, 2, 6, 0, 0, 1, 1, 0, 0, 1, 0, 2, 0, 0, 0, 1, 0]' : 0.157696}", "{'[3, 6, 2, 6, 0, 0, 1, 1, 0, 0, 1, 0, 2, 0, 0, 0, 1, 0]' : 0.157813}", "{'[3, 6, 2, 6, 0, 0, 1, 1, 0, 0, 1, 0, 2, 0, 0, 0, 1, 0]' : 0.158752}", "{'[3, 6, 2, 6, 0, 0, 1, 1, 0, 0, 1, 0, 2, 0, 0, 0, 1, 0]' : 0.165195}", "{'[3, 6, 2, 6, 0, 0, 1, 1, 0, 0, 1, 0, 2, 0, 0, 0, 1, 0]' : 0.157515}", "{'[3, 6, 2, 6, 0, 0, 1, 1, 0, 0, 1, 0, 2, 0, 0, 0, 1, 0]' : 0.158308}", "{'[3, 6, 2, 6, 0, 0, 1, 1, 0, 0, 1, 0, 2, 0, 0, 0, 1, 0]' : 0.161737}", "{'[3, 6, 2, 6, 0, 0, 1, 1, 0, 0, 1, 0, 2, 0, 0, 0, 1, 0]' : 0.161483}", "{'[3, 6, 2, 6, 0, 0, 1, 1, 0, 0, 1, 0, 2, 0, 0, 0, 1, 0]' : 0.161655}", "{'[3, 6, 2, 6, 0, 0, 1, 1, 0, 0, 1, 0, 2, 0, 0, 0, 1, 0]' : 0.162483}", "{'[3, 6, 2, 6, 0, 0, 1, 1, 0, 0, 1, 0, 2, 0, 0, 0, 1, 0]' : 0.158898}"]
returning from 'run': {'[3, 6, 2, 6, 0, 0, 1, 1, 0, 0, 1, 0, 2, 0, 0, 0, 1, 0]': ([0.162678, 0.165404, 0.16584, 0.162593, 0.161357, 0.161303, 0.163142, 0.161331, 0.161721, 0.164447, 0.164221, 0.161344, 0.164338, 0.15935, 0.157914, 0.160864, 0.162288, 0.157945, 0.160573, 0.157696, 0.157813, 0.158752, 0.165195, 0.157515, 0.158308, 0.161737, 0.161483, 0.161655, 0.162483, 0.158898], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 6, 2, 6, 0, 0, 1, 1, 0, 0, 1, 0, 2, 0, 0, 0, 1, 0]': ([0.162678, 0.165404, 0.16584, 0.162593, 0.161357, 0.161303, 0.163142, 0.161331, 0.161721, 0.164447, 0.164221, 0.161344, 0.164338, 0.15935, 0.157914, 0.160864, 0.162288, 0.157945, 0.160573, 0.157696, 0.157813, 0.158752, 0.165195, 0.157515, 0.158308, 0.161737, 0.161483, 0.161655, 0.162483, 0.158898], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	44
        Max loop nest depth: 	4
        Additions: 		3127
        Multiplications: 	1248
        Divisions: 		0
        Logical: 		0
        Reads: 			6692
        Writes: 		1386
        Comparisons:		44
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest20.exe __orio_perftest20.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest20.exe  
Program Test Output: 
{'[5, 0, 2, 0, 3, 0, 1, 0, 0, 6, 0, 28, 1, 0, 1, 1, 0, 1]' : 0.126382}
{'[5, 0, 2, 0, 3, 0, 1, 0, 0, 6, 0, 28, 1, 0, 1, 1, 0, 1]' : 0.12764}
{'[5, 0, 2, 0, 3, 0, 1, 0, 0, 6, 0, 28, 1, 0, 1, 1, 0, 1]' : 0.125631}
{'[5, 0, 2, 0, 3, 0, 1, 0, 0, 6, 0, 28, 1, 0, 1, 1, 0, 1]' : 0.126222}
{'[5, 0, 2, 0, 3, 0, 1, 0, 0, 6, 0, 28, 1, 0, 1, 1, 0, 1]' : 0.12674}
{'[5, 0, 2, 0, 3, 0, 1, 0, 0, 6, 0, 28, 1, 0, 1, 1, 0, 1]' : 0.126438}
{'[5, 0, 2, 0, 3, 0, 1, 0, 0, 6, 0, 28, 1, 0, 1, 1, 0, 1]' : 0.127461}
{'[5, 0, 2, 0, 3, 0, 1, 0, 0, 6, 0, 28, 1, 0, 1, 1, 0, 1]' : 0.125775}
{'[5, 0, 2, 0, 3, 0, 1, 0, 0, 6, 0, 28, 1, 0, 1, 1, 0, 1]' : 0.126714}
{'[5, 0, 2, 0, 3, 0, 1, 0, 0, 6, 0, 28, 1, 0, 1, 1, 0, 1]' : 0.126684}
{'[5, 0, 2, 0, 3, 0, 1, 0, 0, 6, 0, 28, 1, 0, 1, 1, 0, 1]' : 0.125643}
{'[5, 0, 2, 0, 3, 0, 1, 0, 0, 6, 0, 28, 1, 0, 1, 1, 0, 1]' : 0.125786}
{'[5, 0, 2, 0, 3, 0, 1, 0, 0, 6, 0, 28, 1, 0, 1, 1, 0, 1]' : 0.125832}
{'[5, 0, 2, 0, 3, 0, 1, 0, 0, 6, 0, 28, 1, 0, 1, 1, 0, 1]' : 0.125896}
{'[5, 0, 2, 0, 3, 0, 1, 0, 0, 6, 0, 28, 1, 0, 1, 1, 0, 1]' : 0.126388}
{'[5, 0, 2, 0, 3, 0, 1, 0, 0, 6, 0, 28, 1, 0, 1, 1, 0, 1]' : 0.126012}
{'[5, 0, 2, 0, 3, 0, 1, 0, 0, 6, 0, 28, 1, 0, 1, 1, 0, 1]' : 0.12628}
{'[5, 0, 2, 0, 3, 0, 1, 0, 0, 6, 0, 28, 1, 0, 1, 1, 0, 1]' : 0.125295}
{'[5, 0, 2, 0, 3, 0, 1, 0, 0, 6, 0, 28, 1, 0, 1, 1, 0, 1]' : 0.125549}
{'[5, 0, 2, 0, 3, 0, 1, 0, 0, 6, 0, 28, 1, 0, 1, 1, 0, 1]' : 0.127051}
{'[5, 0, 2, 0, 3, 0, 1, 0, 0, 6, 0, 28, 1, 0, 1, 1, 0, 1]' : 0.125864}
{'[5, 0, 2, 0, 3, 0, 1, 0, 0, 6, 0, 28, 1, 0, 1, 1, 0, 1]' : 0.125987}
{'[5, 0, 2, 0, 3, 0, 1, 0, 0, 6, 0, 28, 1, 0, 1, 1, 0, 1]' : 0.126014}
{'[5, 0, 2, 0, 3, 0, 1, 0, 0, 6, 0, 28, 1, 0, 1, 1, 0, 1]' : 0.126691}
{'[5, 0, 2, 0, 3, 0, 1, 0, 0, 6, 0, 28, 1, 0, 1, 1, 0, 1]' : 0.126261}
{'[5, 0, 2, 0, 3, 0, 1, 0, 0, 6, 0, 28, 1, 0, 1, 1, 0, 1]' : 0.126535}
{'[5, 0, 2, 0, 3, 0, 1, 0, 0, 6, 0, 28, 1, 0, 1, 1, 0, 1]' : 0.138034}
{'[5, 0, 2, 0, 3, 0, 1, 0, 0, 6, 0, 28, 1, 0, 1, 1, 0, 1]' : 0.136772}
{'[5, 0, 2, 0, 3, 0, 1, 0, 0, 6, 0, 28, 1, 0, 1, 1, 0, 1]' : 0.136185}
{'[5, 0, 2, 0, 3, 0, 1, 0, 0, 6, 0, 28, 1, 0, 1, 1, 0, 1]' : 0.136398}

out:
 ["{'[5, 0, 2, 0, 3, 0, 1, 0, 0, 6, 0, 28, 1, 0, 1, 1, 0, 1]' : 0.126382}", "{'[5, 0, 2, 0, 3, 0, 1, 0, 0, 6, 0, 28, 1, 0, 1, 1, 0, 1]' : 0.12764}", "{'[5, 0, 2, 0, 3, 0, 1, 0, 0, 6, 0, 28, 1, 0, 1, 1, 0, 1]' : 0.125631}", "{'[5, 0, 2, 0, 3, 0, 1, 0, 0, 6, 0, 28, 1, 0, 1, 1, 0, 1]' : 0.126222}", "{'[5, 0, 2, 0, 3, 0, 1, 0, 0, 6, 0, 28, 1, 0, 1, 1, 0, 1]' : 0.12674}", "{'[5, 0, 2, 0, 3, 0, 1, 0, 0, 6, 0, 28, 1, 0, 1, 1, 0, 1]' : 0.126438}", "{'[5, 0, 2, 0, 3, 0, 1, 0, 0, 6, 0, 28, 1, 0, 1, 1, 0, 1]' : 0.127461}", "{'[5, 0, 2, 0, 3, 0, 1, 0, 0, 6, 0, 28, 1, 0, 1, 1, 0, 1]' : 0.125775}", "{'[5, 0, 2, 0, 3, 0, 1, 0, 0, 6, 0, 28, 1, 0, 1, 1, 0, 1]' : 0.126714}", "{'[5, 0, 2, 0, 3, 0, 1, 0, 0, 6, 0, 28, 1, 0, 1, 1, 0, 1]' : 0.126684}", "{'[5, 0, 2, 0, 3, 0, 1, 0, 0, 6, 0, 28, 1, 0, 1, 1, 0, 1]' : 0.125643}", "{'[5, 0, 2, 0, 3, 0, 1, 0, 0, 6, 0, 28, 1, 0, 1, 1, 0, 1]' : 0.125786}", "{'[5, 0, 2, 0, 3, 0, 1, 0, 0, 6, 0, 28, 1, 0, 1, 1, 0, 1]' : 0.125832}", "{'[5, 0, 2, 0, 3, 0, 1, 0, 0, 6, 0, 28, 1, 0, 1, 1, 0, 1]' : 0.125896}", "{'[5, 0, 2, 0, 3, 0, 1, 0, 0, 6, 0, 28, 1, 0, 1, 1, 0, 1]' : 0.126388}", "{'[5, 0, 2, 0, 3, 0, 1, 0, 0, 6, 0, 28, 1, 0, 1, 1, 0, 1]' : 0.126012}", "{'[5, 0, 2, 0, 3, 0, 1, 0, 0, 6, 0, 28, 1, 0, 1, 1, 0, 1]' : 0.12628}", "{'[5, 0, 2, 0, 3, 0, 1, 0, 0, 6, 0, 28, 1, 0, 1, 1, 0, 1]' : 0.125295}", "{'[5, 0, 2, 0, 3, 0, 1, 0, 0, 6, 0, 28, 1, 0, 1, 1, 0, 1]' : 0.125549}", "{'[5, 0, 2, 0, 3, 0, 1, 0, 0, 6, 0, 28, 1, 0, 1, 1, 0, 1]' : 0.127051}", "{'[5, 0, 2, 0, 3, 0, 1, 0, 0, 6, 0, 28, 1, 0, 1, 1, 0, 1]' : 0.125864}", "{'[5, 0, 2, 0, 3, 0, 1, 0, 0, 6, 0, 28, 1, 0, 1, 1, 0, 1]' : 0.125987}", "{'[5, 0, 2, 0, 3, 0, 1, 0, 0, 6, 0, 28, 1, 0, 1, 1, 0, 1]' : 0.126014}", "{'[5, 0, 2, 0, 3, 0, 1, 0, 0, 6, 0, 28, 1, 0, 1, 1, 0, 1]' : 0.126691}", "{'[5, 0, 2, 0, 3, 0, 1, 0, 0, 6, 0, 28, 1, 0, 1, 1, 0, 1]' : 0.126261}", "{'[5, 0, 2, 0, 3, 0, 1, 0, 0, 6, 0, 28, 1, 0, 1, 1, 0, 1]' : 0.126535}", "{'[5, 0, 2, 0, 3, 0, 1, 0, 0, 6, 0, 28, 1, 0, 1, 1, 0, 1]' : 0.138034}", "{'[5, 0, 2, 0, 3, 0, 1, 0, 0, 6, 0, 28, 1, 0, 1, 1, 0, 1]' : 0.136772}", "{'[5, 0, 2, 0, 3, 0, 1, 0, 0, 6, 0, 28, 1, 0, 1, 1, 0, 1]' : 0.136185}", "{'[5, 0, 2, 0, 3, 0, 1, 0, 0, 6, 0, 28, 1, 0, 1, 1, 0, 1]' : 0.136398}"]
returning from 'run': {'[5, 0, 2, 0, 3, 0, 1, 0, 0, 6, 0, 28, 1, 0, 1, 1, 0, 1]': ([0.126382, 0.12764, 0.125631, 0.126222, 0.12674, 0.126438, 0.127461, 0.125775, 0.126714, 0.126684, 0.125643, 0.125786, 0.125832, 0.125896, 0.126388, 0.126012, 0.12628, 0.125295, 0.125549, 0.127051, 0.125864, 0.125987, 0.126014, 0.126691, 0.126261, 0.126535, 0.138034, 0.136772, 0.136185, 0.136398], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 0, 2, 0, 3, 0, 1, 0, 0, 6, 0, 28, 1, 0, 1, 1, 0, 1]': ([0.126382, 0.12764, 0.125631, 0.126222, 0.12674, 0.126438, 0.127461, 0.125775, 0.126714, 0.126684, 0.125643, 0.125786, 0.125832, 0.125896, 0.126388, 0.126012, 0.12628, 0.125295, 0.125549, 0.127051, 0.125864, 0.125987, 0.126014, 0.126691, 0.126261, 0.126535, 0.138034, 0.136772, 0.136185, 0.136398], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	47
        Max loop nest depth: 	6
        Additions: 		4199
        Multiplications: 	1232
        Divisions: 		0
        Logical: 		0
        Reads: 			6665
        Writes: 		774
        Comparisons:		47
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest21.exe __orio_perftest21.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest21.exe  
Program Test Output: 
{'[3, 2, 1, 5, 6, 6, 0, 0, 0, 12, 25, 0, 0, 1, 1, 0, 1, 1]' : 0.225242}
{'[3, 2, 1, 5, 6, 6, 0, 0, 0, 12, 25, 0, 0, 1, 1, 0, 1, 1]' : 0.222803}
{'[3, 2, 1, 5, 6, 6, 0, 0, 0, 12, 25, 0, 0, 1, 1, 0, 1, 1]' : 0.225496}
{'[3, 2, 1, 5, 6, 6, 0, 0, 0, 12, 25, 0, 0, 1, 1, 0, 1, 1]' : 0.245173}
{'[3, 2, 1, 5, 6, 6, 0, 0, 0, 12, 25, 0, 0, 1, 1, 0, 1, 1]' : 0.255703}
{'[3, 2, 1, 5, 6, 6, 0, 0, 0, 12, 25, 0, 0, 1, 1, 0, 1, 1]' : 0.249636}
{'[3, 2, 1, 5, 6, 6, 0, 0, 0, 12, 25, 0, 0, 1, 1, 0, 1, 1]' : 0.250038}
{'[3, 2, 1, 5, 6, 6, 0, 0, 0, 12, 25, 0, 0, 1, 1, 0, 1, 1]' : 0.25173}
{'[3, 2, 1, 5, 6, 6, 0, 0, 0, 12, 25, 0, 0, 1, 1, 0, 1, 1]' : 0.249929}
{'[3, 2, 1, 5, 6, 6, 0, 0, 0, 12, 25, 0, 0, 1, 1, 0, 1, 1]' : 0.252199}
{'[3, 2, 1, 5, 6, 6, 0, 0, 0, 12, 25, 0, 0, 1, 1, 0, 1, 1]' : 0.250539}
{'[3, 2, 1, 5, 6, 6, 0, 0, 0, 12, 25, 0, 0, 1, 1, 0, 1, 1]' : 0.249486}
{'[3, 2, 1, 5, 6, 6, 0, 0, 0, 12, 25, 0, 0, 1, 1, 0, 1, 1]' : 0.248781}
{'[3, 2, 1, 5, 6, 6, 0, 0, 0, 12, 25, 0, 0, 1, 1, 0, 1, 1]' : 0.248088}
{'[3, 2, 1, 5, 6, 6, 0, 0, 0, 12, 25, 0, 0, 1, 1, 0, 1, 1]' : 0.244103}
{'[3, 2, 1, 5, 6, 6, 0, 0, 0, 12, 25, 0, 0, 1, 1, 0, 1, 1]' : 0.246734}
{'[3, 2, 1, 5, 6, 6, 0, 0, 0, 12, 25, 0, 0, 1, 1, 0, 1, 1]' : 0.23477}
{'[3, 2, 1, 5, 6, 6, 0, 0, 0, 12, 25, 0, 0, 1, 1, 0, 1, 1]' : 0.244264}
{'[3, 2, 1, 5, 6, 6, 0, 0, 0, 12, 25, 0, 0, 1, 1, 0, 1, 1]' : 0.25874}
{'[3, 2, 1, 5, 6, 6, 0, 0, 0, 12, 25, 0, 0, 1, 1, 0, 1, 1]' : 0.241609}
{'[3, 2, 1, 5, 6, 6, 0, 0, 0, 12, 25, 0, 0, 1, 1, 0, 1, 1]' : 0.247039}
{'[3, 2, 1, 5, 6, 6, 0, 0, 0, 12, 25, 0, 0, 1, 1, 0, 1, 1]' : 0.243567}
{'[3, 2, 1, 5, 6, 6, 0, 0, 0, 12, 25, 0, 0, 1, 1, 0, 1, 1]' : 0.261789}
{'[3, 2, 1, 5, 6, 6, 0, 0, 0, 12, 25, 0, 0, 1, 1, 0, 1, 1]' : 0.256106}
{'[3, 2, 1, 5, 6, 6, 0, 0, 0, 12, 25, 0, 0, 1, 1, 0, 1, 1]' : 0.246954}
{'[3, 2, 1, 5, 6, 6, 0, 0, 0, 12, 25, 0, 0, 1, 1, 0, 1, 1]' : 0.250495}
{'[3, 2, 1, 5, 6, 6, 0, 0, 0, 12, 25, 0, 0, 1, 1, 0, 1, 1]' : 0.243119}
{'[3, 2, 1, 5, 6, 6, 0, 0, 0, 12, 25, 0, 0, 1, 1, 0, 1, 1]' : 0.246722}
{'[3, 2, 1, 5, 6, 6, 0, 0, 0, 12, 25, 0, 0, 1, 1, 0, 1, 1]' : 0.244643}
{'[3, 2, 1, 5, 6, 6, 0, 0, 0, 12, 25, 0, 0, 1, 1, 0, 1, 1]' : 0.242872}

out:
 ["{'[3, 2, 1, 5, 6, 6, 0, 0, 0, 12, 25, 0, 0, 1, 1, 0, 1, 1]' : 0.225242}", "{'[3, 2, 1, 5, 6, 6, 0, 0, 0, 12, 25, 0, 0, 1, 1, 0, 1, 1]' : 0.222803}", "{'[3, 2, 1, 5, 6, 6, 0, 0, 0, 12, 25, 0, 0, 1, 1, 0, 1, 1]' : 0.225496}", "{'[3, 2, 1, 5, 6, 6, 0, 0, 0, 12, 25, 0, 0, 1, 1, 0, 1, 1]' : 0.245173}", "{'[3, 2, 1, 5, 6, 6, 0, 0, 0, 12, 25, 0, 0, 1, 1, 0, 1, 1]' : 0.255703}", "{'[3, 2, 1, 5, 6, 6, 0, 0, 0, 12, 25, 0, 0, 1, 1, 0, 1, 1]' : 0.249636}", "{'[3, 2, 1, 5, 6, 6, 0, 0, 0, 12, 25, 0, 0, 1, 1, 0, 1, 1]' : 0.250038}", "{'[3, 2, 1, 5, 6, 6, 0, 0, 0, 12, 25, 0, 0, 1, 1, 0, 1, 1]' : 0.25173}", "{'[3, 2, 1, 5, 6, 6, 0, 0, 0, 12, 25, 0, 0, 1, 1, 0, 1, 1]' : 0.249929}", "{'[3, 2, 1, 5, 6, 6, 0, 0, 0, 12, 25, 0, 0, 1, 1, 0, 1, 1]' : 0.252199}", "{'[3, 2, 1, 5, 6, 6, 0, 0, 0, 12, 25, 0, 0, 1, 1, 0, 1, 1]' : 0.250539}", "{'[3, 2, 1, 5, 6, 6, 0, 0, 0, 12, 25, 0, 0, 1, 1, 0, 1, 1]' : 0.249486}", "{'[3, 2, 1, 5, 6, 6, 0, 0, 0, 12, 25, 0, 0, 1, 1, 0, 1, 1]' : 0.248781}", "{'[3, 2, 1, 5, 6, 6, 0, 0, 0, 12, 25, 0, 0, 1, 1, 0, 1, 1]' : 0.248088}", "{'[3, 2, 1, 5, 6, 6, 0, 0, 0, 12, 25, 0, 0, 1, 1, 0, 1, 1]' : 0.244103}", "{'[3, 2, 1, 5, 6, 6, 0, 0, 0, 12, 25, 0, 0, 1, 1, 0, 1, 1]' : 0.246734}", "{'[3, 2, 1, 5, 6, 6, 0, 0, 0, 12, 25, 0, 0, 1, 1, 0, 1, 1]' : 0.23477}", "{'[3, 2, 1, 5, 6, 6, 0, 0, 0, 12, 25, 0, 0, 1, 1, 0, 1, 1]' : 0.244264}", "{'[3, 2, 1, 5, 6, 6, 0, 0, 0, 12, 25, 0, 0, 1, 1, 0, 1, 1]' : 0.25874}", "{'[3, 2, 1, 5, 6, 6, 0, 0, 0, 12, 25, 0, 0, 1, 1, 0, 1, 1]' : 0.241609}", "{'[3, 2, 1, 5, 6, 6, 0, 0, 0, 12, 25, 0, 0, 1, 1, 0, 1, 1]' : 0.247039}", "{'[3, 2, 1, 5, 6, 6, 0, 0, 0, 12, 25, 0, 0, 1, 1, 0, 1, 1]' : 0.243567}", "{'[3, 2, 1, 5, 6, 6, 0, 0, 0, 12, 25, 0, 0, 1, 1, 0, 1, 1]' : 0.261789}", "{'[3, 2, 1, 5, 6, 6, 0, 0, 0, 12, 25, 0, 0, 1, 1, 0, 1, 1]' : 0.256106}", "{'[3, 2, 1, 5, 6, 6, 0, 0, 0, 12, 25, 0, 0, 1, 1, 0, 1, 1]' : 0.246954}", "{'[3, 2, 1, 5, 6, 6, 0, 0, 0, 12, 25, 0, 0, 1, 1, 0, 1, 1]' : 0.250495}", "{'[3, 2, 1, 5, 6, 6, 0, 0, 0, 12, 25, 0, 0, 1, 1, 0, 1, 1]' : 0.243119}", "{'[3, 2, 1, 5, 6, 6, 0, 0, 0, 12, 25, 0, 0, 1, 1, 0, 1, 1]' : 0.246722}", "{'[3, 2, 1, 5, 6, 6, 0, 0, 0, 12, 25, 0, 0, 1, 1, 0, 1, 1]' : 0.244643}", "{'[3, 2, 1, 5, 6, 6, 0, 0, 0, 12, 25, 0, 0, 1, 1, 0, 1, 1]' : 0.242872}"]
returning from 'run': {'[3, 2, 1, 5, 6, 6, 0, 0, 0, 12, 25, 0, 0, 1, 1, 0, 1, 1]': ([0.225242, 0.222803, 0.225496, 0.245173, 0.255703, 0.249636, 0.250038, 0.25173, 0.249929, 0.252199, 0.250539, 0.249486, 0.248781, 0.248088, 0.244103, 0.246734, 0.23477, 0.244264, 0.25874, 0.241609, 0.247039, 0.243567, 0.261789, 0.256106, 0.246954, 0.250495, 0.243119, 0.246722, 0.244643, 0.242872], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 2, 1, 5, 6, 6, 0, 0, 0, 12, 25, 0, 0, 1, 1, 0, 1, 1]': ([0.225242, 0.222803, 0.225496, 0.245173, 0.255703, 0.249636, 0.250038, 0.25173, 0.249929, 0.252199, 0.250539, 0.249486, 0.248781, 0.248088, 0.244103, 0.246734, 0.23477, 0.244264, 0.25874, 0.241609, 0.247039, 0.243567, 0.261789, 0.256106, 0.246954, 0.250495, 0.243119, 0.246722, 0.244643, 0.242872], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	44
        Max loop nest depth: 	6
        Additions: 		3596
        Multiplications: 	960
        Divisions: 		0
        Logical: 		0
        Reads: 			5610
        Writes: 		658
        Comparisons:		44
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest22.exe __orio_perftest22.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest22.exe  
Program Test Output: 
{'[1, 6, 0, 4, 6, 0, 1, 0, 28, 28, 28, 0, 0, 1, 1, 0, 0, 0]' : 0.306769}
{'[1, 6, 0, 4, 6, 0, 1, 0, 28, 28, 28, 0, 0, 1, 1, 0, 0, 0]' : 0.273744}
{'[1, 6, 0, 4, 6, 0, 1, 0, 28, 28, 28, 0, 0, 1, 1, 0, 0, 0]' : 0.27857}
{'[1, 6, 0, 4, 6, 0, 1, 0, 28, 28, 28, 0, 0, 1, 1, 0, 0, 0]' : 0.277491}
{'[1, 6, 0, 4, 6, 0, 1, 0, 28, 28, 28, 0, 0, 1, 1, 0, 0, 0]' : 0.27161}
{'[1, 6, 0, 4, 6, 0, 1, 0, 28, 28, 28, 0, 0, 1, 1, 0, 0, 0]' : 0.272791}
{'[1, 6, 0, 4, 6, 0, 1, 0, 28, 28, 28, 0, 0, 1, 1, 0, 0, 0]' : 0.274184}
{'[1, 6, 0, 4, 6, 0, 1, 0, 28, 28, 28, 0, 0, 1, 1, 0, 0, 0]' : 0.277626}
{'[1, 6, 0, 4, 6, 0, 1, 0, 28, 28, 28, 0, 0, 1, 1, 0, 0, 0]' : 0.273487}
{'[1, 6, 0, 4, 6, 0, 1, 0, 28, 28, 28, 0, 0, 1, 1, 0, 0, 0]' : 0.27655}
{'[1, 6, 0, 4, 6, 0, 1, 0, 28, 28, 28, 0, 0, 1, 1, 0, 0, 0]' : 0.272731}
{'[1, 6, 0, 4, 6, 0, 1, 0, 28, 28, 28, 0, 0, 1, 1, 0, 0, 0]' : 0.272092}
{'[1, 6, 0, 4, 6, 0, 1, 0, 28, 28, 28, 0, 0, 1, 1, 0, 0, 0]' : 0.276101}
{'[1, 6, 0, 4, 6, 0, 1, 0, 28, 28, 28, 0, 0, 1, 1, 0, 0, 0]' : 0.271996}
{'[1, 6, 0, 4, 6, 0, 1, 0, 28, 28, 28, 0, 0, 1, 1, 0, 0, 0]' : 0.267608}
{'[1, 6, 0, 4, 6, 0, 1, 0, 28, 28, 28, 0, 0, 1, 1, 0, 0, 0]' : 0.275512}
{'[1, 6, 0, 4, 6, 0, 1, 0, 28, 28, 28, 0, 0, 1, 1, 0, 0, 0]' : 0.273999}
{'[1, 6, 0, 4, 6, 0, 1, 0, 28, 28, 28, 0, 0, 1, 1, 0, 0, 0]' : 0.27294}
{'[1, 6, 0, 4, 6, 0, 1, 0, 28, 28, 28, 0, 0, 1, 1, 0, 0, 0]' : 0.271656}
{'[1, 6, 0, 4, 6, 0, 1, 0, 28, 28, 28, 0, 0, 1, 1, 0, 0, 0]' : 0.273307}
{'[1, 6, 0, 4, 6, 0, 1, 0, 28, 28, 28, 0, 0, 1, 1, 0, 0, 0]' : 0.272322}
{'[1, 6, 0, 4, 6, 0, 1, 0, 28, 28, 28, 0, 0, 1, 1, 0, 0, 0]' : 0.270894}
{'[1, 6, 0, 4, 6, 0, 1, 0, 28, 28, 28, 0, 0, 1, 1, 0, 0, 0]' : 0.27564}
{'[1, 6, 0, 4, 6, 0, 1, 0, 28, 28, 28, 0, 0, 1, 1, 0, 0, 0]' : 0.272547}
{'[1, 6, 0, 4, 6, 0, 1, 0, 28, 28, 28, 0, 0, 1, 1, 0, 0, 0]' : 0.274187}
{'[1, 6, 0, 4, 6, 0, 1, 0, 28, 28, 28, 0, 0, 1, 1, 0, 0, 0]' : 0.274579}
{'[1, 6, 0, 4, 6, 0, 1, 0, 28, 28, 28, 0, 0, 1, 1, 0, 0, 0]' : 0.279764}
{'[1, 6, 0, 4, 6, 0, 1, 0, 28, 28, 28, 0, 0, 1, 1, 0, 0, 0]' : 0.293093}
{'[1, 6, 0, 4, 6, 0, 1, 0, 28, 28, 28, 0, 0, 1, 1, 0, 0, 0]' : 0.27292}
{'[1, 6, 0, 4, 6, 0, 1, 0, 28, 28, 28, 0, 0, 1, 1, 0, 0, 0]' : 0.273009}

out:
 ["{'[1, 6, 0, 4, 6, 0, 1, 0, 28, 28, 28, 0, 0, 1, 1, 0, 0, 0]' : 0.306769}", "{'[1, 6, 0, 4, 6, 0, 1, 0, 28, 28, 28, 0, 0, 1, 1, 0, 0, 0]' : 0.273744}", "{'[1, 6, 0, 4, 6, 0, 1, 0, 28, 28, 28, 0, 0, 1, 1, 0, 0, 0]' : 0.27857}", "{'[1, 6, 0, 4, 6, 0, 1, 0, 28, 28, 28, 0, 0, 1, 1, 0, 0, 0]' : 0.277491}", "{'[1, 6, 0, 4, 6, 0, 1, 0, 28, 28, 28, 0, 0, 1, 1, 0, 0, 0]' : 0.27161}", "{'[1, 6, 0, 4, 6, 0, 1, 0, 28, 28, 28, 0, 0, 1, 1, 0, 0, 0]' : 0.272791}", "{'[1, 6, 0, 4, 6, 0, 1, 0, 28, 28, 28, 0, 0, 1, 1, 0, 0, 0]' : 0.274184}", "{'[1, 6, 0, 4, 6, 0, 1, 0, 28, 28, 28, 0, 0, 1, 1, 0, 0, 0]' : 0.277626}", "{'[1, 6, 0, 4, 6, 0, 1, 0, 28, 28, 28, 0, 0, 1, 1, 0, 0, 0]' : 0.273487}", "{'[1, 6, 0, 4, 6, 0, 1, 0, 28, 28, 28, 0, 0, 1, 1, 0, 0, 0]' : 0.27655}", "{'[1, 6, 0, 4, 6, 0, 1, 0, 28, 28, 28, 0, 0, 1, 1, 0, 0, 0]' : 0.272731}", "{'[1, 6, 0, 4, 6, 0, 1, 0, 28, 28, 28, 0, 0, 1, 1, 0, 0, 0]' : 0.272092}", "{'[1, 6, 0, 4, 6, 0, 1, 0, 28, 28, 28, 0, 0, 1, 1, 0, 0, 0]' : 0.276101}", "{'[1, 6, 0, 4, 6, 0, 1, 0, 28, 28, 28, 0, 0, 1, 1, 0, 0, 0]' : 0.271996}", "{'[1, 6, 0, 4, 6, 0, 1, 0, 28, 28, 28, 0, 0, 1, 1, 0, 0, 0]' : 0.267608}", "{'[1, 6, 0, 4, 6, 0, 1, 0, 28, 28, 28, 0, 0, 1, 1, 0, 0, 0]' : 0.275512}", "{'[1, 6, 0, 4, 6, 0, 1, 0, 28, 28, 28, 0, 0, 1, 1, 0, 0, 0]' : 0.273999}", "{'[1, 6, 0, 4, 6, 0, 1, 0, 28, 28, 28, 0, 0, 1, 1, 0, 0, 0]' : 0.27294}", "{'[1, 6, 0, 4, 6, 0, 1, 0, 28, 28, 28, 0, 0, 1, 1, 0, 0, 0]' : 0.271656}", "{'[1, 6, 0, 4, 6, 0, 1, 0, 28, 28, 28, 0, 0, 1, 1, 0, 0, 0]' : 0.273307}", "{'[1, 6, 0, 4, 6, 0, 1, 0, 28, 28, 28, 0, 0, 1, 1, 0, 0, 0]' : 0.272322}", "{'[1, 6, 0, 4, 6, 0, 1, 0, 28, 28, 28, 0, 0, 1, 1, 0, 0, 0]' : 0.270894}", "{'[1, 6, 0, 4, 6, 0, 1, 0, 28, 28, 28, 0, 0, 1, 1, 0, 0, 0]' : 0.27564}", "{'[1, 6, 0, 4, 6, 0, 1, 0, 28, 28, 28, 0, 0, 1, 1, 0, 0, 0]' : 0.272547}", "{'[1, 6, 0, 4, 6, 0, 1, 0, 28, 28, 28, 0, 0, 1, 1, 0, 0, 0]' : 0.274187}", "{'[1, 6, 0, 4, 6, 0, 1, 0, 28, 28, 28, 0, 0, 1, 1, 0, 0, 0]' : 0.274579}", "{'[1, 6, 0, 4, 6, 0, 1, 0, 28, 28, 28, 0, 0, 1, 1, 0, 0, 0]' : 0.279764}", "{'[1, 6, 0, 4, 6, 0, 1, 0, 28, 28, 28, 0, 0, 1, 1, 0, 0, 0]' : 0.293093}", "{'[1, 6, 0, 4, 6, 0, 1, 0, 28, 28, 28, 0, 0, 1, 1, 0, 0, 0]' : 0.27292}", "{'[1, 6, 0, 4, 6, 0, 1, 0, 28, 28, 28, 0, 0, 1, 1, 0, 0, 0]' : 0.273009}"]
returning from 'run': {'[1, 6, 0, 4, 6, 0, 1, 0, 28, 28, 28, 0, 0, 1, 1, 0, 0, 0]': ([0.306769, 0.273744, 0.27857, 0.277491, 0.27161, 0.272791, 0.274184, 0.277626, 0.273487, 0.27655, 0.272731, 0.272092, 0.276101, 0.271996, 0.267608, 0.275512, 0.273999, 0.27294, 0.271656, 0.273307, 0.272322, 0.270894, 0.27564, 0.272547, 0.274187, 0.274579, 0.279764, 0.293093, 0.27292, 0.273009], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 6, 0, 4, 6, 0, 1, 0, 28, 28, 28, 0, 0, 1, 1, 0, 0, 0]': ([0.306769, 0.273744, 0.27857, 0.277491, 0.27161, 0.272791, 0.274184, 0.277626, 0.273487, 0.27655, 0.272731, 0.272092, 0.276101, 0.271996, 0.267608, 0.275512, 0.273999, 0.27294, 0.271656, 0.273307, 0.272322, 0.270894, 0.27564, 0.272547, 0.274187, 0.274579, 0.279764, 0.293093, 0.27292, 0.273009], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	96
        Max loop nest depth: 	5
        Additions: 		6999
        Multiplications: 	1564
        Divisions: 		0
        Logical: 		0
        Reads: 			10275
        Writes: 		1096
        Comparisons:		96
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest23.exe __orio_perftest23.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest23.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest23.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest23.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest23.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	28
        Max loop nest depth: 	5
        Additions: 		776
        Multiplications: 	174
        Divisions: 		0
        Logical: 		0
        Reads: 			1334
        Writes: 		176
        Comparisons:		28
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest24.exe __orio_perftest24.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest24.exe  
Program Test Output: 
{'[1, 1, 2, 0, 4, 0, 1, 1, 8, 1, 0, 26, 0, 0, 0, 0, 0, 1]' : 0.505328}
{'[1, 1, 2, 0, 4, 0, 1, 1, 8, 1, 0, 26, 0, 0, 0, 0, 0, 1]' : 0.508597}
{'[1, 1, 2, 0, 4, 0, 1, 1, 8, 1, 0, 26, 0, 0, 0, 0, 0, 1]' : 0.502984}
{'[1, 1, 2, 0, 4, 0, 1, 1, 8, 1, 0, 26, 0, 0, 0, 0, 0, 1]' : 0.503637}
{'[1, 1, 2, 0, 4, 0, 1, 1, 8, 1, 0, 26, 0, 0, 0, 0, 0, 1]' : 0.71336}
{'[1, 1, 2, 0, 4, 0, 1, 1, 8, 1, 0, 26, 0, 0, 0, 0, 0, 1]' : 0.503985}
{'[1, 1, 2, 0, 4, 0, 1, 1, 8, 1, 0, 26, 0, 0, 0, 0, 0, 1]' : 0.717606}
{'[1, 1, 2, 0, 4, 0, 1, 1, 8, 1, 0, 26, 0, 0, 0, 0, 0, 1]' : 0.504042}
{'[1, 1, 2, 0, 4, 0, 1, 1, 8, 1, 0, 26, 0, 0, 0, 0, 0, 1]' : 0.504142}
{'[1, 1, 2, 0, 4, 0, 1, 1, 8, 1, 0, 26, 0, 0, 0, 0, 0, 1]' : 0.501904}
{'[1, 1, 2, 0, 4, 0, 1, 1, 8, 1, 0, 26, 0, 0, 0, 0, 0, 1]' : 0.762248}
{'[1, 1, 2, 0, 4, 0, 1, 1, 8, 1, 0, 26, 0, 0, 0, 0, 0, 1]' : 0.493651}
{'[1, 1, 2, 0, 4, 0, 1, 1, 8, 1, 0, 26, 0, 0, 0, 0, 0, 1]' : 0.505777}
{'[1, 1, 2, 0, 4, 0, 1, 1, 8, 1, 0, 26, 0, 0, 0, 0, 0, 1]' : 0.505807}
{'[1, 1, 2, 0, 4, 0, 1, 1, 8, 1, 0, 26, 0, 0, 0, 0, 0, 1]' : 0.505967}
{'[1, 1, 2, 0, 4, 0, 1, 1, 8, 1, 0, 26, 0, 0, 0, 0, 0, 1]' : 0.507507}
{'[1, 1, 2, 0, 4, 0, 1, 1, 8, 1, 0, 26, 0, 0, 0, 0, 0, 1]' : 0.507178}
{'[1, 1, 2, 0, 4, 0, 1, 1, 8, 1, 0, 26, 0, 0, 0, 0, 0, 1]' : 0.506973}
{'[1, 1, 2, 0, 4, 0, 1, 1, 8, 1, 0, 26, 0, 0, 0, 0, 0, 1]' : 0.507249}
{'[1, 1, 2, 0, 4, 0, 1, 1, 8, 1, 0, 26, 0, 0, 0, 0, 0, 1]' : 0.506941}
{'[1, 1, 2, 0, 4, 0, 1, 1, 8, 1, 0, 26, 0, 0, 0, 0, 0, 1]' : 0.507062}
{'[1, 1, 2, 0, 4, 0, 1, 1, 8, 1, 0, 26, 0, 0, 0, 0, 0, 1]' : 0.50863}
{'[1, 1, 2, 0, 4, 0, 1, 1, 8, 1, 0, 26, 0, 0, 0, 0, 0, 1]' : 0.507843}
{'[1, 1, 2, 0, 4, 0, 1, 1, 8, 1, 0, 26, 0, 0, 0, 0, 0, 1]' : 0.505207}
{'[1, 1, 2, 0, 4, 0, 1, 1, 8, 1, 0, 26, 0, 0, 0, 0, 0, 1]' : 0.507478}
{'[1, 1, 2, 0, 4, 0, 1, 1, 8, 1, 0, 26, 0, 0, 0, 0, 0, 1]' : 0.507955}
{'[1, 1, 2, 0, 4, 0, 1, 1, 8, 1, 0, 26, 0, 0, 0, 0, 0, 1]' : 0.505914}
{'[1, 1, 2, 0, 4, 0, 1, 1, 8, 1, 0, 26, 0, 0, 0, 0, 0, 1]' : 0.508192}
{'[1, 1, 2, 0, 4, 0, 1, 1, 8, 1, 0, 26, 0, 0, 0, 0, 0, 1]' : 0.509751}
{'[1, 1, 2, 0, 4, 0, 1, 1, 8, 1, 0, 26, 0, 0, 0, 0, 0, 1]' : 0.505081}

out:
 ["{'[1, 1, 2, 0, 4, 0, 1, 1, 8, 1, 0, 26, 0, 0, 0, 0, 0, 1]' : 0.505328}", "{'[1, 1, 2, 0, 4, 0, 1, 1, 8, 1, 0, 26, 0, 0, 0, 0, 0, 1]' : 0.508597}", "{'[1, 1, 2, 0, 4, 0, 1, 1, 8, 1, 0, 26, 0, 0, 0, 0, 0, 1]' : 0.502984}", "{'[1, 1, 2, 0, 4, 0, 1, 1, 8, 1, 0, 26, 0, 0, 0, 0, 0, 1]' : 0.503637}", "{'[1, 1, 2, 0, 4, 0, 1, 1, 8, 1, 0, 26, 0, 0, 0, 0, 0, 1]' : 0.71336}", "{'[1, 1, 2, 0, 4, 0, 1, 1, 8, 1, 0, 26, 0, 0, 0, 0, 0, 1]' : 0.503985}", "{'[1, 1, 2, 0, 4, 0, 1, 1, 8, 1, 0, 26, 0, 0, 0, 0, 0, 1]' : 0.717606}", "{'[1, 1, 2, 0, 4, 0, 1, 1, 8, 1, 0, 26, 0, 0, 0, 0, 0, 1]' : 0.504042}", "{'[1, 1, 2, 0, 4, 0, 1, 1, 8, 1, 0, 26, 0, 0, 0, 0, 0, 1]' : 0.504142}", "{'[1, 1, 2, 0, 4, 0, 1, 1, 8, 1, 0, 26, 0, 0, 0, 0, 0, 1]' : 0.501904}", "{'[1, 1, 2, 0, 4, 0, 1, 1, 8, 1, 0, 26, 0, 0, 0, 0, 0, 1]' : 0.762248}", "{'[1, 1, 2, 0, 4, 0, 1, 1, 8, 1, 0, 26, 0, 0, 0, 0, 0, 1]' : 0.493651}", "{'[1, 1, 2, 0, 4, 0, 1, 1, 8, 1, 0, 26, 0, 0, 0, 0, 0, 1]' : 0.505777}", "{'[1, 1, 2, 0, 4, 0, 1, 1, 8, 1, 0, 26, 0, 0, 0, 0, 0, 1]' : 0.505807}", "{'[1, 1, 2, 0, 4, 0, 1, 1, 8, 1, 0, 26, 0, 0, 0, 0, 0, 1]' : 0.505967}", "{'[1, 1, 2, 0, 4, 0, 1, 1, 8, 1, 0, 26, 0, 0, 0, 0, 0, 1]' : 0.507507}", "{'[1, 1, 2, 0, 4, 0, 1, 1, 8, 1, 0, 26, 0, 0, 0, 0, 0, 1]' : 0.507178}", "{'[1, 1, 2, 0, 4, 0, 1, 1, 8, 1, 0, 26, 0, 0, 0, 0, 0, 1]' : 0.506973}", "{'[1, 1, 2, 0, 4, 0, 1, 1, 8, 1, 0, 26, 0, 0, 0, 0, 0, 1]' : 0.507249}", "{'[1, 1, 2, 0, 4, 0, 1, 1, 8, 1, 0, 26, 0, 0, 0, 0, 0, 1]' : 0.506941}", "{'[1, 1, 2, 0, 4, 0, 1, 1, 8, 1, 0, 26, 0, 0, 0, 0, 0, 1]' : 0.507062}", "{'[1, 1, 2, 0, 4, 0, 1, 1, 8, 1, 0, 26, 0, 0, 0, 0, 0, 1]' : 0.50863}", "{'[1, 1, 2, 0, 4, 0, 1, 1, 8, 1, 0, 26, 0, 0, 0, 0, 0, 1]' : 0.507843}", "{'[1, 1, 2, 0, 4, 0, 1, 1, 8, 1, 0, 26, 0, 0, 0, 0, 0, 1]' : 0.505207}", "{'[1, 1, 2, 0, 4, 0, 1, 1, 8, 1, 0, 26, 0, 0, 0, 0, 0, 1]' : 0.507478}", "{'[1, 1, 2, 0, 4, 0, 1, 1, 8, 1, 0, 26, 0, 0, 0, 0, 0, 1]' : 0.507955}", "{'[1, 1, 2, 0, 4, 0, 1, 1, 8, 1, 0, 26, 0, 0, 0, 0, 0, 1]' : 0.505914}", "{'[1, 1, 2, 0, 4, 0, 1, 1, 8, 1, 0, 26, 0, 0, 0, 0, 0, 1]' : 0.508192}", "{'[1, 1, 2, 0, 4, 0, 1, 1, 8, 1, 0, 26, 0, 0, 0, 0, 0, 1]' : 0.509751}", "{'[1, 1, 2, 0, 4, 0, 1, 1, 8, 1, 0, 26, 0, 0, 0, 0, 0, 1]' : 0.505081}"]
returning from 'run': {'[1, 1, 2, 0, 4, 0, 1, 1, 8, 1, 0, 26, 0, 0, 0, 0, 0, 1]': ([0.505328, 0.508597, 0.502984, 0.503637, 0.71336, 0.503985, 0.717606, 0.504042, 0.504142, 0.501904, 0.762248, 0.493651, 0.505777, 0.505807, 0.505967, 0.507507, 0.507178, 0.506973, 0.507249, 0.506941, 0.507062, 0.50863, 0.507843, 0.505207, 0.507478, 0.507955, 0.505914, 0.508192, 0.509751, 0.505081], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 1, 2, 0, 4, 0, 1, 1, 8, 1, 0, 26, 0, 0, 0, 0, 0, 1]': ([0.505328, 0.508597, 0.502984, 0.503637, 0.71336, 0.503985, 0.717606, 0.504042, 0.504142, 0.501904, 0.762248, 0.493651, 0.505777, 0.505807, 0.505967, 0.507507, 0.507178, 0.506973, 0.507249, 0.506941, 0.507062, 0.50863, 0.507843, 0.505207, 0.507478, 0.507955, 0.505914, 0.508192, 0.509751, 0.505081], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	37
        Max loop nest depth: 	5
        Additions: 		939
        Multiplications: 	380
        Divisions: 		0
        Logical: 		0
        Reads: 			1877
        Writes: 		336
        Comparisons:		37
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest25.exe __orio_perftest25.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest25.exe  
Program Test Output: 
{'[0, 2, 4, 6, 5, 5, 0, 1, 9, 3, 3, 0, 0, 2, 0, 1, 0, 0]' : 0.246855}
{'[0, 2, 4, 6, 5, 5, 0, 1, 9, 3, 3, 0, 0, 2, 0, 1, 0, 0]' : 0.245735}
{'[0, 2, 4, 6, 5, 5, 0, 1, 9, 3, 3, 0, 0, 2, 0, 1, 0, 0]' : 0.246938}
{'[0, 2, 4, 6, 5, 5, 0, 1, 9, 3, 3, 0, 0, 2, 0, 1, 0, 0]' : 0.247398}
{'[0, 2, 4, 6, 5, 5, 0, 1, 9, 3, 3, 0, 0, 2, 0, 1, 0, 0]' : 0.247764}
{'[0, 2, 4, 6, 5, 5, 0, 1, 9, 3, 3, 0, 0, 2, 0, 1, 0, 0]' : 0.246879}
{'[0, 2, 4, 6, 5, 5, 0, 1, 9, 3, 3, 0, 0, 2, 0, 1, 0, 0]' : 0.249739}
{'[0, 2, 4, 6, 5, 5, 0, 1, 9, 3, 3, 0, 0, 2, 0, 1, 0, 0]' : 0.245177}
{'[0, 2, 4, 6, 5, 5, 0, 1, 9, 3, 3, 0, 0, 2, 0, 1, 0, 0]' : 0.250289}
{'[0, 2, 4, 6, 5, 5, 0, 1, 9, 3, 3, 0, 0, 2, 0, 1, 0, 0]' : 0.246271}
{'[0, 2, 4, 6, 5, 5, 0, 1, 9, 3, 3, 0, 0, 2, 0, 1, 0, 0]' : 0.251941}
{'[0, 2, 4, 6, 5, 5, 0, 1, 9, 3, 3, 0, 0, 2, 0, 1, 0, 0]' : 0.248886}
{'[0, 2, 4, 6, 5, 5, 0, 1, 9, 3, 3, 0, 0, 2, 0, 1, 0, 0]' : 0.249051}
{'[0, 2, 4, 6, 5, 5, 0, 1, 9, 3, 3, 0, 0, 2, 0, 1, 0, 0]' : 0.246229}
{'[0, 2, 4, 6, 5, 5, 0, 1, 9, 3, 3, 0, 0, 2, 0, 1, 0, 0]' : 0.248187}
{'[0, 2, 4, 6, 5, 5, 0, 1, 9, 3, 3, 0, 0, 2, 0, 1, 0, 0]' : 0.24927}
{'[0, 2, 4, 6, 5, 5, 0, 1, 9, 3, 3, 0, 0, 2, 0, 1, 0, 0]' : 0.250717}
{'[0, 2, 4, 6, 5, 5, 0, 1, 9, 3, 3, 0, 0, 2, 0, 1, 0, 0]' : 0.248794}
{'[0, 2, 4, 6, 5, 5, 0, 1, 9, 3, 3, 0, 0, 2, 0, 1, 0, 0]' : 0.249476}
{'[0, 2, 4, 6, 5, 5, 0, 1, 9, 3, 3, 0, 0, 2, 0, 1, 0, 0]' : 0.248705}
{'[0, 2, 4, 6, 5, 5, 0, 1, 9, 3, 3, 0, 0, 2, 0, 1, 0, 0]' : 0.246572}
{'[0, 2, 4, 6, 5, 5, 0, 1, 9, 3, 3, 0, 0, 2, 0, 1, 0, 0]' : 0.250467}
{'[0, 2, 4, 6, 5, 5, 0, 1, 9, 3, 3, 0, 0, 2, 0, 1, 0, 0]' : 0.248162}
{'[0, 2, 4, 6, 5, 5, 0, 1, 9, 3, 3, 0, 0, 2, 0, 1, 0, 0]' : 0.25096}
{'[0, 2, 4, 6, 5, 5, 0, 1, 9, 3, 3, 0, 0, 2, 0, 1, 0, 0]' : 0.251358}
{'[0, 2, 4, 6, 5, 5, 0, 1, 9, 3, 3, 0, 0, 2, 0, 1, 0, 0]' : 0.251211}
{'[0, 2, 4, 6, 5, 5, 0, 1, 9, 3, 3, 0, 0, 2, 0, 1, 0, 0]' : 0.250148}
{'[0, 2, 4, 6, 5, 5, 0, 1, 9, 3, 3, 0, 0, 2, 0, 1, 0, 0]' : 0.248822}
{'[0, 2, 4, 6, 5, 5, 0, 1, 9, 3, 3, 0, 0, 2, 0, 1, 0, 0]' : 0.248683}
{'[0, 2, 4, 6, 5, 5, 0, 1, 9, 3, 3, 0, 0, 2, 0, 1, 0, 0]' : 0.250544}

out:
 ["{'[0, 2, 4, 6, 5, 5, 0, 1, 9, 3, 3, 0, 0, 2, 0, 1, 0, 0]' : 0.246855}", "{'[0, 2, 4, 6, 5, 5, 0, 1, 9, 3, 3, 0, 0, 2, 0, 1, 0, 0]' : 0.245735}", "{'[0, 2, 4, 6, 5, 5, 0, 1, 9, 3, 3, 0, 0, 2, 0, 1, 0, 0]' : 0.246938}", "{'[0, 2, 4, 6, 5, 5, 0, 1, 9, 3, 3, 0, 0, 2, 0, 1, 0, 0]' : 0.247398}", "{'[0, 2, 4, 6, 5, 5, 0, 1, 9, 3, 3, 0, 0, 2, 0, 1, 0, 0]' : 0.247764}", "{'[0, 2, 4, 6, 5, 5, 0, 1, 9, 3, 3, 0, 0, 2, 0, 1, 0, 0]' : 0.246879}", "{'[0, 2, 4, 6, 5, 5, 0, 1, 9, 3, 3, 0, 0, 2, 0, 1, 0, 0]' : 0.249739}", "{'[0, 2, 4, 6, 5, 5, 0, 1, 9, 3, 3, 0, 0, 2, 0, 1, 0, 0]' : 0.245177}", "{'[0, 2, 4, 6, 5, 5, 0, 1, 9, 3, 3, 0, 0, 2, 0, 1, 0, 0]' : 0.250289}", "{'[0, 2, 4, 6, 5, 5, 0, 1, 9, 3, 3, 0, 0, 2, 0, 1, 0, 0]' : 0.246271}", "{'[0, 2, 4, 6, 5, 5, 0, 1, 9, 3, 3, 0, 0, 2, 0, 1, 0, 0]' : 0.251941}", "{'[0, 2, 4, 6, 5, 5, 0, 1, 9, 3, 3, 0, 0, 2, 0, 1, 0, 0]' : 0.248886}", "{'[0, 2, 4, 6, 5, 5, 0, 1, 9, 3, 3, 0, 0, 2, 0, 1, 0, 0]' : 0.249051}", "{'[0, 2, 4, 6, 5, 5, 0, 1, 9, 3, 3, 0, 0, 2, 0, 1, 0, 0]' : 0.246229}", "{'[0, 2, 4, 6, 5, 5, 0, 1, 9, 3, 3, 0, 0, 2, 0, 1, 0, 0]' : 0.248187}", "{'[0, 2, 4, 6, 5, 5, 0, 1, 9, 3, 3, 0, 0, 2, 0, 1, 0, 0]' : 0.24927}", "{'[0, 2, 4, 6, 5, 5, 0, 1, 9, 3, 3, 0, 0, 2, 0, 1, 0, 0]' : 0.250717}", "{'[0, 2, 4, 6, 5, 5, 0, 1, 9, 3, 3, 0, 0, 2, 0, 1, 0, 0]' : 0.248794}", "{'[0, 2, 4, 6, 5, 5, 0, 1, 9, 3, 3, 0, 0, 2, 0, 1, 0, 0]' : 0.249476}", "{'[0, 2, 4, 6, 5, 5, 0, 1, 9, 3, 3, 0, 0, 2, 0, 1, 0, 0]' : 0.248705}", "{'[0, 2, 4, 6, 5, 5, 0, 1, 9, 3, 3, 0, 0, 2, 0, 1, 0, 0]' : 0.246572}", "{'[0, 2, 4, 6, 5, 5, 0, 1, 9, 3, 3, 0, 0, 2, 0, 1, 0, 0]' : 0.250467}", "{'[0, 2, 4, 6, 5, 5, 0, 1, 9, 3, 3, 0, 0, 2, 0, 1, 0, 0]' : 0.248162}", "{'[0, 2, 4, 6, 5, 5, 0, 1, 9, 3, 3, 0, 0, 2, 0, 1, 0, 0]' : 0.25096}", "{'[0, 2, 4, 6, 5, 5, 0, 1, 9, 3, 3, 0, 0, 2, 0, 1, 0, 0]' : 0.251358}", "{'[0, 2, 4, 6, 5, 5, 0, 1, 9, 3, 3, 0, 0, 2, 0, 1, 0, 0]' : 0.251211}", "{'[0, 2, 4, 6, 5, 5, 0, 1, 9, 3, 3, 0, 0, 2, 0, 1, 0, 0]' : 0.250148}", "{'[0, 2, 4, 6, 5, 5, 0, 1, 9, 3, 3, 0, 0, 2, 0, 1, 0, 0]' : 0.248822}", "{'[0, 2, 4, 6, 5, 5, 0, 1, 9, 3, 3, 0, 0, 2, 0, 1, 0, 0]' : 0.248683}", "{'[0, 2, 4, 6, 5, 5, 0, 1, 9, 3, 3, 0, 0, 2, 0, 1, 0, 0]' : 0.250544}"]
returning from 'run': {'[0, 2, 4, 6, 5, 5, 0, 1, 9, 3, 3, 0, 0, 2, 0, 1, 0, 0]': ([0.246855, 0.245735, 0.246938, 0.247398, 0.247764, 0.246879, 0.249739, 0.245177, 0.250289, 0.246271, 0.251941, 0.248886, 0.249051, 0.246229, 0.248187, 0.24927, 0.250717, 0.248794, 0.249476, 0.248705, 0.246572, 0.250467, 0.248162, 0.25096, 0.251358, 0.251211, 0.250148, 0.248822, 0.248683, 0.250544], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 4, 6, 5, 5, 0, 1, 9, 3, 3, 0, 0, 2, 0, 1, 0, 0]': ([0.246855, 0.245735, 0.246938, 0.247398, 0.247764, 0.246879, 0.249739, 0.245177, 0.250289, 0.246271, 0.251941, 0.248886, 0.249051, 0.246229, 0.248187, 0.24927, 0.250717, 0.248794, 0.249476, 0.248705, 0.246572, 0.250467, 0.248162, 0.25096, 0.251358, 0.251211, 0.250148, 0.248822, 0.248683, 0.250544], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	67
        Max loop nest depth: 	6
        Additions: 		4832
        Multiplications: 	2200
        Divisions: 		0
        Logical: 		0
        Reads: 			9174
        Writes: 		1509
        Comparisons:		67
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest26.exe __orio_perftest26.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest26.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest26.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest26.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest26.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = iii
Code stats:
        Number of loops: 	50
        Max loop nest depth: 	5
        Additions: 		888
        Multiplications: 	224
        Divisions: 		0
        Logical: 		0
        Reads: 			1830
        Writes: 		387
        Comparisons:		50
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest27.exe __orio_perftest27.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest27.exe  
Program Test Output: 
{'[4, 4, 6, 2, 3, 6, 1, 1, 8, 5, 0, 6, 0, 1, 0, 1, 1, 0]' : 0.275822}
{'[4, 4, 6, 2, 3, 6, 1, 1, 8, 5, 0, 6, 0, 1, 0, 1, 1, 0]' : 0.275395}
{'[4, 4, 6, 2, 3, 6, 1, 1, 8, 5, 0, 6, 0, 1, 0, 1, 1, 0]' : 0.275455}
{'[4, 4, 6, 2, 3, 6, 1, 1, 8, 5, 0, 6, 0, 1, 0, 1, 1, 0]' : 0.273513}
{'[4, 4, 6, 2, 3, 6, 1, 1, 8, 5, 0, 6, 0, 1, 0, 1, 1, 0]' : 0.275644}
{'[4, 4, 6, 2, 3, 6, 1, 1, 8, 5, 0, 6, 0, 1, 0, 1, 1, 0]' : 0.275067}
{'[4, 4, 6, 2, 3, 6, 1, 1, 8, 5, 0, 6, 0, 1, 0, 1, 1, 0]' : 0.275283}
{'[4, 4, 6, 2, 3, 6, 1, 1, 8, 5, 0, 6, 0, 1, 0, 1, 1, 0]' : 0.275341}
{'[4, 4, 6, 2, 3, 6, 1, 1, 8, 5, 0, 6, 0, 1, 0, 1, 1, 0]' : 0.275649}
{'[4, 4, 6, 2, 3, 6, 1, 1, 8, 5, 0, 6, 0, 1, 0, 1, 1, 0]' : 0.273412}
{'[4, 4, 6, 2, 3, 6, 1, 1, 8, 5, 0, 6, 0, 1, 0, 1, 1, 0]' : 0.269946}
{'[4, 4, 6, 2, 3, 6, 1, 1, 8, 5, 0, 6, 0, 1, 0, 1, 1, 0]' : 0.354158}
{'[4, 4, 6, 2, 3, 6, 1, 1, 8, 5, 0, 6, 0, 1, 0, 1, 1, 0]' : 0.274645}
{'[4, 4, 6, 2, 3, 6, 1, 1, 8, 5, 0, 6, 0, 1, 0, 1, 1, 0]' : 0.274845}
{'[4, 4, 6, 2, 3, 6, 1, 1, 8, 5, 0, 6, 0, 1, 0, 1, 1, 0]' : 0.273755}
{'[4, 4, 6, 2, 3, 6, 1, 1, 8, 5, 0, 6, 0, 1, 0, 1, 1, 0]' : 0.275766}
{'[4, 4, 6, 2, 3, 6, 1, 1, 8, 5, 0, 6, 0, 1, 0, 1, 1, 0]' : 0.275711}
{'[4, 4, 6, 2, 3, 6, 1, 1, 8, 5, 0, 6, 0, 1, 0, 1, 1, 0]' : 0.275231}
{'[4, 4, 6, 2, 3, 6, 1, 1, 8, 5, 0, 6, 0, 1, 0, 1, 1, 0]' : 0.27685}
{'[4, 4, 6, 2, 3, 6, 1, 1, 8, 5, 0, 6, 0, 1, 0, 1, 1, 0]' : 0.362798}
{'[4, 4, 6, 2, 3, 6, 1, 1, 8, 5, 0, 6, 0, 1, 0, 1, 1, 0]' : 0.275538}
{'[4, 4, 6, 2, 3, 6, 1, 1, 8, 5, 0, 6, 0, 1, 0, 1, 1, 0]' : 0.275547}
{'[4, 4, 6, 2, 3, 6, 1, 1, 8, 5, 0, 6, 0, 1, 0, 1, 1, 0]' : 0.275361}
{'[4, 4, 6, 2, 3, 6, 1, 1, 8, 5, 0, 6, 0, 1, 0, 1, 1, 0]' : 0.274883}
{'[4, 4, 6, 2, 3, 6, 1, 1, 8, 5, 0, 6, 0, 1, 0, 1, 1, 0]' : 0.277416}
{'[4, 4, 6, 2, 3, 6, 1, 1, 8, 5, 0, 6, 0, 1, 0, 1, 1, 0]' : 0.285943}
{'[4, 4, 6, 2, 3, 6, 1, 1, 8, 5, 0, 6, 0, 1, 0, 1, 1, 0]' : 0.274068}
{'[4, 4, 6, 2, 3, 6, 1, 1, 8, 5, 0, 6, 0, 1, 0, 1, 1, 0]' : 0.275577}
{'[4, 4, 6, 2, 3, 6, 1, 1, 8, 5, 0, 6, 0, 1, 0, 1, 1, 0]' : 0.275028}
{'[4, 4, 6, 2, 3, 6, 1, 1, 8, 5, 0, 6, 0, 1, 0, 1, 1, 0]' : 0.275185}

out:
 ["{'[4, 4, 6, 2, 3, 6, 1, 1, 8, 5, 0, 6, 0, 1, 0, 1, 1, 0]' : 0.275822}", "{'[4, 4, 6, 2, 3, 6, 1, 1, 8, 5, 0, 6, 0, 1, 0, 1, 1, 0]' : 0.275395}", "{'[4, 4, 6, 2, 3, 6, 1, 1, 8, 5, 0, 6, 0, 1, 0, 1, 1, 0]' : 0.275455}", "{'[4, 4, 6, 2, 3, 6, 1, 1, 8, 5, 0, 6, 0, 1, 0, 1, 1, 0]' : 0.273513}", "{'[4, 4, 6, 2, 3, 6, 1, 1, 8, 5, 0, 6, 0, 1, 0, 1, 1, 0]' : 0.275644}", "{'[4, 4, 6, 2, 3, 6, 1, 1, 8, 5, 0, 6, 0, 1, 0, 1, 1, 0]' : 0.275067}", "{'[4, 4, 6, 2, 3, 6, 1, 1, 8, 5, 0, 6, 0, 1, 0, 1, 1, 0]' : 0.275283}", "{'[4, 4, 6, 2, 3, 6, 1, 1, 8, 5, 0, 6, 0, 1, 0, 1, 1, 0]' : 0.275341}", "{'[4, 4, 6, 2, 3, 6, 1, 1, 8, 5, 0, 6, 0, 1, 0, 1, 1, 0]' : 0.275649}", "{'[4, 4, 6, 2, 3, 6, 1, 1, 8, 5, 0, 6, 0, 1, 0, 1, 1, 0]' : 0.273412}", "{'[4, 4, 6, 2, 3, 6, 1, 1, 8, 5, 0, 6, 0, 1, 0, 1, 1, 0]' : 0.269946}", "{'[4, 4, 6, 2, 3, 6, 1, 1, 8, 5, 0, 6, 0, 1, 0, 1, 1, 0]' : 0.354158}", "{'[4, 4, 6, 2, 3, 6, 1, 1, 8, 5, 0, 6, 0, 1, 0, 1, 1, 0]' : 0.274645}", "{'[4, 4, 6, 2, 3, 6, 1, 1, 8, 5, 0, 6, 0, 1, 0, 1, 1, 0]' : 0.274845}", "{'[4, 4, 6, 2, 3, 6, 1, 1, 8, 5, 0, 6, 0, 1, 0, 1, 1, 0]' : 0.273755}", "{'[4, 4, 6, 2, 3, 6, 1, 1, 8, 5, 0, 6, 0, 1, 0, 1, 1, 0]' : 0.275766}", "{'[4, 4, 6, 2, 3, 6, 1, 1, 8, 5, 0, 6, 0, 1, 0, 1, 1, 0]' : 0.275711}", "{'[4, 4, 6, 2, 3, 6, 1, 1, 8, 5, 0, 6, 0, 1, 0, 1, 1, 0]' : 0.275231}", "{'[4, 4, 6, 2, 3, 6, 1, 1, 8, 5, 0, 6, 0, 1, 0, 1, 1, 0]' : 0.27685}", "{'[4, 4, 6, 2, 3, 6, 1, 1, 8, 5, 0, 6, 0, 1, 0, 1, 1, 0]' : 0.362798}", "{'[4, 4, 6, 2, 3, 6, 1, 1, 8, 5, 0, 6, 0, 1, 0, 1, 1, 0]' : 0.275538}", "{'[4, 4, 6, 2, 3, 6, 1, 1, 8, 5, 0, 6, 0, 1, 0, 1, 1, 0]' : 0.275547}", "{'[4, 4, 6, 2, 3, 6, 1, 1, 8, 5, 0, 6, 0, 1, 0, 1, 1, 0]' : 0.275361}", "{'[4, 4, 6, 2, 3, 6, 1, 1, 8, 5, 0, 6, 0, 1, 0, 1, 1, 0]' : 0.274883}", "{'[4, 4, 6, 2, 3, 6, 1, 1, 8, 5, 0, 6, 0, 1, 0, 1, 1, 0]' : 0.277416}", "{'[4, 4, 6, 2, 3, 6, 1, 1, 8, 5, 0, 6, 0, 1, 0, 1, 1, 0]' : 0.285943}", "{'[4, 4, 6, 2, 3, 6, 1, 1, 8, 5, 0, 6, 0, 1, 0, 1, 1, 0]' : 0.274068}", "{'[4, 4, 6, 2, 3, 6, 1, 1, 8, 5, 0, 6, 0, 1, 0, 1, 1, 0]' : 0.275577}", "{'[4, 4, 6, 2, 3, 6, 1, 1, 8, 5, 0, 6, 0, 1, 0, 1, 1, 0]' : 0.275028}", "{'[4, 4, 6, 2, 3, 6, 1, 1, 8, 5, 0, 6, 0, 1, 0, 1, 1, 0]' : 0.275185}"]
returning from 'run': {'[4, 4, 6, 2, 3, 6, 1, 1, 8, 5, 0, 6, 0, 1, 0, 1, 1, 0]': ([0.275822, 0.275395, 0.275455, 0.273513, 0.275644, 0.275067, 0.275283, 0.275341, 0.275649, 0.273412, 0.269946, 0.354158, 0.274645, 0.274845, 0.273755, 0.275766, 0.275711, 0.275231, 0.27685, 0.362798, 0.275538, 0.275547, 0.275361, 0.274883, 0.277416, 0.285943, 0.274068, 0.275577, 0.275028, 0.275185], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 4, 6, 2, 3, 6, 1, 1, 8, 5, 0, 6, 0, 1, 0, 1, 1, 0]': ([0.275822, 0.275395, 0.275455, 0.273513, 0.275644, 0.275067, 0.275283, 0.275341, 0.275649, 0.273412, 0.269946, 0.354158, 0.274645, 0.274845, 0.273755, 0.275766, 0.275711, 0.275231, 0.27685, 0.362798, 0.275538, 0.275547, 0.275361, 0.274883, 0.277416, 0.285943, 0.274068, 0.275577, 0.275028, 0.275185], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	5
        Additions: 		747
        Multiplications: 	306
        Divisions: 		0
        Logical: 		0
        Reads: 			1524
        Writes: 		295
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest28.exe __orio_perftest28.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest28.exe  
Program Test Output: 
{'[2, 2, 0, 0, 1, 3, 0, 1, 22, 0, 7, 8, 1, 0, 1, 1, 1, 1]' : 0.143956}
{'[2, 2, 0, 0, 1, 3, 0, 1, 22, 0, 7, 8, 1, 0, 1, 1, 1, 1]' : 0.142908}
{'[2, 2, 0, 0, 1, 3, 0, 1, 22, 0, 7, 8, 1, 0, 1, 1, 1, 1]' : 0.142903}
{'[2, 2, 0, 0, 1, 3, 0, 1, 22, 0, 7, 8, 1, 0, 1, 1, 1, 1]' : 0.142843}
{'[2, 2, 0, 0, 1, 3, 0, 1, 22, 0, 7, 8, 1, 0, 1, 1, 1, 1]' : 0.141706}
{'[2, 2, 0, 0, 1, 3, 0, 1, 22, 0, 7, 8, 1, 0, 1, 1, 1, 1]' : 0.144216}
{'[2, 2, 0, 0, 1, 3, 0, 1, 22, 0, 7, 8, 1, 0, 1, 1, 1, 1]' : 0.153067}
{'[2, 2, 0, 0, 1, 3, 0, 1, 22, 0, 7, 8, 1, 0, 1, 1, 1, 1]' : 0.163238}
{'[2, 2, 0, 0, 1, 3, 0, 1, 22, 0, 7, 8, 1, 0, 1, 1, 1, 1]' : 0.142149}
{'[2, 2, 0, 0, 1, 3, 0, 1, 22, 0, 7, 8, 1, 0, 1, 1, 1, 1]' : 0.155213}
{'[2, 2, 0, 0, 1, 3, 0, 1, 22, 0, 7, 8, 1, 0, 1, 1, 1, 1]' : 0.144203}
{'[2, 2, 0, 0, 1, 3, 0, 1, 22, 0, 7, 8, 1, 0, 1, 1, 1, 1]' : 0.142231}
{'[2, 2, 0, 0, 1, 3, 0, 1, 22, 0, 7, 8, 1, 0, 1, 1, 1, 1]' : 0.136411}
{'[2, 2, 0, 0, 1, 3, 0, 1, 22, 0, 7, 8, 1, 0, 1, 1, 1, 1]' : 0.135275}
{'[2, 2, 0, 0, 1, 3, 0, 1, 22, 0, 7, 8, 1, 0, 1, 1, 1, 1]' : 0.134883}
{'[2, 2, 0, 0, 1, 3, 0, 1, 22, 0, 7, 8, 1, 0, 1, 1, 1, 1]' : 0.135582}
{'[2, 2, 0, 0, 1, 3, 0, 1, 22, 0, 7, 8, 1, 0, 1, 1, 1, 1]' : 0.135279}
{'[2, 2, 0, 0, 1, 3, 0, 1, 22, 0, 7, 8, 1, 0, 1, 1, 1, 1]' : 0.135181}
{'[2, 2, 0, 0, 1, 3, 0, 1, 22, 0, 7, 8, 1, 0, 1, 1, 1, 1]' : 0.135174}
{'[2, 2, 0, 0, 1, 3, 0, 1, 22, 0, 7, 8, 1, 0, 1, 1, 1, 1]' : 0.135911}
{'[2, 2, 0, 0, 1, 3, 0, 1, 22, 0, 7, 8, 1, 0, 1, 1, 1, 1]' : 0.134976}
{'[2, 2, 0, 0, 1, 3, 0, 1, 22, 0, 7, 8, 1, 0, 1, 1, 1, 1]' : 0.134348}
{'[2, 2, 0, 0, 1, 3, 0, 1, 22, 0, 7, 8, 1, 0, 1, 1, 1, 1]' : 0.134375}
{'[2, 2, 0, 0, 1, 3, 0, 1, 22, 0, 7, 8, 1, 0, 1, 1, 1, 1]' : 0.134929}
{'[2, 2, 0, 0, 1, 3, 0, 1, 22, 0, 7, 8, 1, 0, 1, 1, 1, 1]' : 0.136127}
{'[2, 2, 0, 0, 1, 3, 0, 1, 22, 0, 7, 8, 1, 0, 1, 1, 1, 1]' : 0.135131}
{'[2, 2, 0, 0, 1, 3, 0, 1, 22, 0, 7, 8, 1, 0, 1, 1, 1, 1]' : 0.135219}
{'[2, 2, 0, 0, 1, 3, 0, 1, 22, 0, 7, 8, 1, 0, 1, 1, 1, 1]' : 0.134884}
{'[2, 2, 0, 0, 1, 3, 0, 1, 22, 0, 7, 8, 1, 0, 1, 1, 1, 1]' : 0.134804}
{'[2, 2, 0, 0, 1, 3, 0, 1, 22, 0, 7, 8, 1, 0, 1, 1, 1, 1]' : 0.134953}

out:
 ["{'[2, 2, 0, 0, 1, 3, 0, 1, 22, 0, 7, 8, 1, 0, 1, 1, 1, 1]' : 0.143956}", "{'[2, 2, 0, 0, 1, 3, 0, 1, 22, 0, 7, 8, 1, 0, 1, 1, 1, 1]' : 0.142908}", "{'[2, 2, 0, 0, 1, 3, 0, 1, 22, 0, 7, 8, 1, 0, 1, 1, 1, 1]' : 0.142903}", "{'[2, 2, 0, 0, 1, 3, 0, 1, 22, 0, 7, 8, 1, 0, 1, 1, 1, 1]' : 0.142843}", "{'[2, 2, 0, 0, 1, 3, 0, 1, 22, 0, 7, 8, 1, 0, 1, 1, 1, 1]' : 0.141706}", "{'[2, 2, 0, 0, 1, 3, 0, 1, 22, 0, 7, 8, 1, 0, 1, 1, 1, 1]' : 0.144216}", "{'[2, 2, 0, 0, 1, 3, 0, 1, 22, 0, 7, 8, 1, 0, 1, 1, 1, 1]' : 0.153067}", "{'[2, 2, 0, 0, 1, 3, 0, 1, 22, 0, 7, 8, 1, 0, 1, 1, 1, 1]' : 0.163238}", "{'[2, 2, 0, 0, 1, 3, 0, 1, 22, 0, 7, 8, 1, 0, 1, 1, 1, 1]' : 0.142149}", "{'[2, 2, 0, 0, 1, 3, 0, 1, 22, 0, 7, 8, 1, 0, 1, 1, 1, 1]' : 0.155213}", "{'[2, 2, 0, 0, 1, 3, 0, 1, 22, 0, 7, 8, 1, 0, 1, 1, 1, 1]' : 0.144203}", "{'[2, 2, 0, 0, 1, 3, 0, 1, 22, 0, 7, 8, 1, 0, 1, 1, 1, 1]' : 0.142231}", "{'[2, 2, 0, 0, 1, 3, 0, 1, 22, 0, 7, 8, 1, 0, 1, 1, 1, 1]' : 0.136411}", "{'[2, 2, 0, 0, 1, 3, 0, 1, 22, 0, 7, 8, 1, 0, 1, 1, 1, 1]' : 0.135275}", "{'[2, 2, 0, 0, 1, 3, 0, 1, 22, 0, 7, 8, 1, 0, 1, 1, 1, 1]' : 0.134883}", "{'[2, 2, 0, 0, 1, 3, 0, 1, 22, 0, 7, 8, 1, 0, 1, 1, 1, 1]' : 0.135582}", "{'[2, 2, 0, 0, 1, 3, 0, 1, 22, 0, 7, 8, 1, 0, 1, 1, 1, 1]' : 0.135279}", "{'[2, 2, 0, 0, 1, 3, 0, 1, 22, 0, 7, 8, 1, 0, 1, 1, 1, 1]' : 0.135181}", "{'[2, 2, 0, 0, 1, 3, 0, 1, 22, 0, 7, 8, 1, 0, 1, 1, 1, 1]' : 0.135174}", "{'[2, 2, 0, 0, 1, 3, 0, 1, 22, 0, 7, 8, 1, 0, 1, 1, 1, 1]' : 0.135911}", "{'[2, 2, 0, 0, 1, 3, 0, 1, 22, 0, 7, 8, 1, 0, 1, 1, 1, 1]' : 0.134976}", "{'[2, 2, 0, 0, 1, 3, 0, 1, 22, 0, 7, 8, 1, 0, 1, 1, 1, 1]' : 0.134348}", "{'[2, 2, 0, 0, 1, 3, 0, 1, 22, 0, 7, 8, 1, 0, 1, 1, 1, 1]' : 0.134375}", "{'[2, 2, 0, 0, 1, 3, 0, 1, 22, 0, 7, 8, 1, 0, 1, 1, 1, 1]' : 0.134929}", "{'[2, 2, 0, 0, 1, 3, 0, 1, 22, 0, 7, 8, 1, 0, 1, 1, 1, 1]' : 0.136127}", "{'[2, 2, 0, 0, 1, 3, 0, 1, 22, 0, 7, 8, 1, 0, 1, 1, 1, 1]' : 0.135131}", "{'[2, 2, 0, 0, 1, 3, 0, 1, 22, 0, 7, 8, 1, 0, 1, 1, 1, 1]' : 0.135219}", "{'[2, 2, 0, 0, 1, 3, 0, 1, 22, 0, 7, 8, 1, 0, 1, 1, 1, 1]' : 0.134884}", "{'[2, 2, 0, 0, 1, 3, 0, 1, 22, 0, 7, 8, 1, 0, 1, 1, 1, 1]' : 0.134804}", "{'[2, 2, 0, 0, 1, 3, 0, 1, 22, 0, 7, 8, 1, 0, 1, 1, 1, 1]' : 0.134953}"]
returning from 'run': {'[2, 2, 0, 0, 1, 3, 0, 1, 22, 0, 7, 8, 1, 0, 1, 1, 1, 1]': ([0.143956, 0.142908, 0.142903, 0.142843, 0.141706, 0.144216, 0.153067, 0.163238, 0.142149, 0.155213, 0.144203, 0.142231, 0.136411, 0.135275, 0.134883, 0.135582, 0.135279, 0.135181, 0.135174, 0.135911, 0.134976, 0.134348, 0.134375, 0.134929, 0.136127, 0.135131, 0.135219, 0.134884, 0.134804, 0.134953], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 2, 0, 0, 1, 3, 0, 1, 22, 0, 7, 8, 1, 0, 1, 1, 1, 1]': ([0.143956, 0.142908, 0.142903, 0.142843, 0.141706, 0.144216, 0.153067, 0.163238, 0.142149, 0.155213, 0.144203, 0.142231, 0.136411, 0.135275, 0.134883, 0.135582, 0.135279, 0.135181, 0.135174, 0.135911, 0.134976, 0.134348, 0.134375, 0.134929, 0.136127, 0.135131, 0.135219, 0.134884, 0.134804, 0.134953], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	171
        Max loop nest depth: 	5
        Additions: 		6332
        Multiplications: 	1368
        Divisions: 		0
        Logical: 		0
        Reads: 			9684
        Writes: 		1160
        Comparisons:		171
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest29.exe __orio_perftest29.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest29.exe  
Program Test Output: 
{'[5, 3, 0, 6, 0, 6, 1, 1, 8, 28, 8, 0, 1, 0, 1, 0, 0, 0]' : 0.167094}
{'[5, 3, 0, 6, 0, 6, 1, 1, 8, 28, 8, 0, 1, 0, 1, 0, 0, 0]' : 0.165576}
{'[5, 3, 0, 6, 0, 6, 1, 1, 8, 28, 8, 0, 1, 0, 1, 0, 0, 0]' : 0.165453}
{'[5, 3, 0, 6, 0, 6, 1, 1, 8, 28, 8, 0, 1, 0, 1, 0, 0, 0]' : 0.165085}
{'[5, 3, 0, 6, 0, 6, 1, 1, 8, 28, 8, 0, 1, 0, 1, 0, 0, 0]' : 0.162991}
{'[5, 3, 0, 6, 0, 6, 1, 1, 8, 28, 8, 0, 1, 0, 1, 0, 0, 0]' : 0.167965}
{'[5, 3, 0, 6, 0, 6, 1, 1, 8, 28, 8, 0, 1, 0, 1, 0, 0, 0]' : 0.166695}
{'[5, 3, 0, 6, 0, 6, 1, 1, 8, 28, 8, 0, 1, 0, 1, 0, 0, 0]' : 0.164992}
{'[5, 3, 0, 6, 0, 6, 1, 1, 8, 28, 8, 0, 1, 0, 1, 0, 0, 0]' : 0.166477}
{'[5, 3, 0, 6, 0, 6, 1, 1, 8, 28, 8, 0, 1, 0, 1, 0, 0, 0]' : 0.16601}
{'[5, 3, 0, 6, 0, 6, 1, 1, 8, 28, 8, 0, 1, 0, 1, 0, 0, 0]' : 0.166607}
{'[5, 3, 0, 6, 0, 6, 1, 1, 8, 28, 8, 0, 1, 0, 1, 0, 0, 0]' : 0.167075}
{'[5, 3, 0, 6, 0, 6, 1, 1, 8, 28, 8, 0, 1, 0, 1, 0, 0, 0]' : 0.165886}
{'[5, 3, 0, 6, 0, 6, 1, 1, 8, 28, 8, 0, 1, 0, 1, 0, 0, 0]' : 0.166846}
{'[5, 3, 0, 6, 0, 6, 1, 1, 8, 28, 8, 0, 1, 0, 1, 0, 0, 0]' : 0.16466}
{'[5, 3, 0, 6, 0, 6, 1, 1, 8, 28, 8, 0, 1, 0, 1, 0, 0, 0]' : 0.164758}
{'[5, 3, 0, 6, 0, 6, 1, 1, 8, 28, 8, 0, 1, 0, 1, 0, 0, 0]' : 0.164298}
{'[5, 3, 0, 6, 0, 6, 1, 1, 8, 28, 8, 0, 1, 0, 1, 0, 0, 0]' : 0.164714}
{'[5, 3, 0, 6, 0, 6, 1, 1, 8, 28, 8, 0, 1, 0, 1, 0, 0, 0]' : 0.16456}
{'[5, 3, 0, 6, 0, 6, 1, 1, 8, 28, 8, 0, 1, 0, 1, 0, 0, 0]' : 0.16304}
{'[5, 3, 0, 6, 0, 6, 1, 1, 8, 28, 8, 0, 1, 0, 1, 0, 0, 0]' : 0.110226}
{'[5, 3, 0, 6, 0, 6, 1, 1, 8, 28, 8, 0, 1, 0, 1, 0, 0, 0]' : 0.106642}
{'[5, 3, 0, 6, 0, 6, 1, 1, 8, 28, 8, 0, 1, 0, 1, 0, 0, 0]' : 0.106176}
{'[5, 3, 0, 6, 0, 6, 1, 1, 8, 28, 8, 0, 1, 0, 1, 0, 0, 0]' : 0.106652}
{'[5, 3, 0, 6, 0, 6, 1, 1, 8, 28, 8, 0, 1, 0, 1, 0, 0, 0]' : 0.140883}
{'[5, 3, 0, 6, 0, 6, 1, 1, 8, 28, 8, 0, 1, 0, 1, 0, 0, 0]' : 0.173143}
{'[5, 3, 0, 6, 0, 6, 1, 1, 8, 28, 8, 0, 1, 0, 1, 0, 0, 0]' : 0.176923}
{'[5, 3, 0, 6, 0, 6, 1, 1, 8, 28, 8, 0, 1, 0, 1, 0, 0, 0]' : 0.178491}
{'[5, 3, 0, 6, 0, 6, 1, 1, 8, 28, 8, 0, 1, 0, 1, 0, 0, 0]' : 0.177861}
{'[5, 3, 0, 6, 0, 6, 1, 1, 8, 28, 8, 0, 1, 0, 1, 0, 0, 0]' : 0.178211}

out:
 ["{'[5, 3, 0, 6, 0, 6, 1, 1, 8, 28, 8, 0, 1, 0, 1, 0, 0, 0]' : 0.167094}", "{'[5, 3, 0, 6, 0, 6, 1, 1, 8, 28, 8, 0, 1, 0, 1, 0, 0, 0]' : 0.165576}", "{'[5, 3, 0, 6, 0, 6, 1, 1, 8, 28, 8, 0, 1, 0, 1, 0, 0, 0]' : 0.165453}", "{'[5, 3, 0, 6, 0, 6, 1, 1, 8, 28, 8, 0, 1, 0, 1, 0, 0, 0]' : 0.165085}", "{'[5, 3, 0, 6, 0, 6, 1, 1, 8, 28, 8, 0, 1, 0, 1, 0, 0, 0]' : 0.162991}", "{'[5, 3, 0, 6, 0, 6, 1, 1, 8, 28, 8, 0, 1, 0, 1, 0, 0, 0]' : 0.167965}", "{'[5, 3, 0, 6, 0, 6, 1, 1, 8, 28, 8, 0, 1, 0, 1, 0, 0, 0]' : 0.166695}", "{'[5, 3, 0, 6, 0, 6, 1, 1, 8, 28, 8, 0, 1, 0, 1, 0, 0, 0]' : 0.164992}", "{'[5, 3, 0, 6, 0, 6, 1, 1, 8, 28, 8, 0, 1, 0, 1, 0, 0, 0]' : 0.166477}", "{'[5, 3, 0, 6, 0, 6, 1, 1, 8, 28, 8, 0, 1, 0, 1, 0, 0, 0]' : 0.16601}", "{'[5, 3, 0, 6, 0, 6, 1, 1, 8, 28, 8, 0, 1, 0, 1, 0, 0, 0]' : 0.166607}", "{'[5, 3, 0, 6, 0, 6, 1, 1, 8, 28, 8, 0, 1, 0, 1, 0, 0, 0]' : 0.167075}", "{'[5, 3, 0, 6, 0, 6, 1, 1, 8, 28, 8, 0, 1, 0, 1, 0, 0, 0]' : 0.165886}", "{'[5, 3, 0, 6, 0, 6, 1, 1, 8, 28, 8, 0, 1, 0, 1, 0, 0, 0]' : 0.166846}", "{'[5, 3, 0, 6, 0, 6, 1, 1, 8, 28, 8, 0, 1, 0, 1, 0, 0, 0]' : 0.16466}", "{'[5, 3, 0, 6, 0, 6, 1, 1, 8, 28, 8, 0, 1, 0, 1, 0, 0, 0]' : 0.164758}", "{'[5, 3, 0, 6, 0, 6, 1, 1, 8, 28, 8, 0, 1, 0, 1, 0, 0, 0]' : 0.164298}", "{'[5, 3, 0, 6, 0, 6, 1, 1, 8, 28, 8, 0, 1, 0, 1, 0, 0, 0]' : 0.164714}", "{'[5, 3, 0, 6, 0, 6, 1, 1, 8, 28, 8, 0, 1, 0, 1, 0, 0, 0]' : 0.16456}", "{'[5, 3, 0, 6, 0, 6, 1, 1, 8, 28, 8, 0, 1, 0, 1, 0, 0, 0]' : 0.16304}", "{'[5, 3, 0, 6, 0, 6, 1, 1, 8, 28, 8, 0, 1, 0, 1, 0, 0, 0]' : 0.110226}", "{'[5, 3, 0, 6, 0, 6, 1, 1, 8, 28, 8, 0, 1, 0, 1, 0, 0, 0]' : 0.106642}", "{'[5, 3, 0, 6, 0, 6, 1, 1, 8, 28, 8, 0, 1, 0, 1, 0, 0, 0]' : 0.106176}", "{'[5, 3, 0, 6, 0, 6, 1, 1, 8, 28, 8, 0, 1, 0, 1, 0, 0, 0]' : 0.106652}", "{'[5, 3, 0, 6, 0, 6, 1, 1, 8, 28, 8, 0, 1, 0, 1, 0, 0, 0]' : 0.140883}", "{'[5, 3, 0, 6, 0, 6, 1, 1, 8, 28, 8, 0, 1, 0, 1, 0, 0, 0]' : 0.173143}", "{'[5, 3, 0, 6, 0, 6, 1, 1, 8, 28, 8, 0, 1, 0, 1, 0, 0, 0]' : 0.176923}", "{'[5, 3, 0, 6, 0, 6, 1, 1, 8, 28, 8, 0, 1, 0, 1, 0, 0, 0]' : 0.178491}", "{'[5, 3, 0, 6, 0, 6, 1, 1, 8, 28, 8, 0, 1, 0, 1, 0, 0, 0]' : 0.177861}", "{'[5, 3, 0, 6, 0, 6, 1, 1, 8, 28, 8, 0, 1, 0, 1, 0, 0, 0]' : 0.178211}"]
returning from 'run': {'[5, 3, 0, 6, 0, 6, 1, 1, 8, 28, 8, 0, 1, 0, 1, 0, 0, 0]': ([0.167094, 0.165576, 0.165453, 0.165085, 0.162991, 0.167965, 0.166695, 0.164992, 0.166477, 0.16601, 0.166607, 0.167075, 0.165886, 0.166846, 0.16466, 0.164758, 0.164298, 0.164714, 0.16456, 0.16304, 0.110226, 0.106642, 0.106176, 0.106652, 0.140883, 0.173143, 0.176923, 0.178491, 0.177861, 0.178211], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 3, 0, 6, 0, 6, 1, 1, 8, 28, 8, 0, 1, 0, 1, 0, 0, 0]': ([0.167094, 0.165576, 0.165453, 0.165085, 0.162991, 0.167965, 0.166695, 0.164992, 0.166477, 0.16601, 0.166607, 0.167075, 0.165886, 0.166846, 0.16466, 0.164758, 0.164298, 0.164714, 0.16456, 0.16304, 0.110226, 0.106642, 0.106176, 0.106652, 0.140883, 0.173143, 0.176923, 0.178491, 0.177861, 0.178211], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	26
        Max loop nest depth: 	5
        Additions: 		632
        Multiplications: 	252
        Divisions: 		0
        Logical: 		0
        Reads: 			1344
        Writes: 		276
        Comparisons:		26
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest30.exe __orio_perftest30.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest30.exe  
Program Test Output: 
{'[2, 1, 5, 4, 0, 0, 1, 0, 23, 4, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.151867}
{'[2, 1, 5, 4, 0, 0, 1, 0, 23, 4, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.124387}
{'[2, 1, 5, 4, 0, 0, 1, 0, 23, 4, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.152176}
{'[2, 1, 5, 4, 0, 0, 1, 0, 23, 4, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.147697}
{'[2, 1, 5, 4, 0, 0, 1, 0, 23, 4, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.152197}
{'[2, 1, 5, 4, 0, 0, 1, 0, 23, 4, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.149166}
{'[2, 1, 5, 4, 0, 0, 1, 0, 23, 4, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.149106}
{'[2, 1, 5, 4, 0, 0, 1, 0, 23, 4, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.15039}
{'[2, 1, 5, 4, 0, 0, 1, 0, 23, 4, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.149421}
{'[2, 1, 5, 4, 0, 0, 1, 0, 23, 4, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.149055}
{'[2, 1, 5, 4, 0, 0, 1, 0, 23, 4, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.147355}
{'[2, 1, 5, 4, 0, 0, 1, 0, 23, 4, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.151915}
{'[2, 1, 5, 4, 0, 0, 1, 0, 23, 4, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.150375}
{'[2, 1, 5, 4, 0, 0, 1, 0, 23, 4, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.150125}
{'[2, 1, 5, 4, 0, 0, 1, 0, 23, 4, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.148465}
{'[2, 1, 5, 4, 0, 0, 1, 0, 23, 4, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.148854}
{'[2, 1, 5, 4, 0, 0, 1, 0, 23, 4, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.149985}
{'[2, 1, 5, 4, 0, 0, 1, 0, 23, 4, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.147949}
{'[2, 1, 5, 4, 0, 0, 1, 0, 23, 4, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.148285}
{'[2, 1, 5, 4, 0, 0, 1, 0, 23, 4, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.152525}
{'[2, 1, 5, 4, 0, 0, 1, 0, 23, 4, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.15022}
{'[2, 1, 5, 4, 0, 0, 1, 0, 23, 4, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.150864}
{'[2, 1, 5, 4, 0, 0, 1, 0, 23, 4, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.151792}
{'[2, 1, 5, 4, 0, 0, 1, 0, 23, 4, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.146049}
{'[2, 1, 5, 4, 0, 0, 1, 0, 23, 4, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.151995}
{'[2, 1, 5, 4, 0, 0, 1, 0, 23, 4, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.149499}
{'[2, 1, 5, 4, 0, 0, 1, 0, 23, 4, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.150124}
{'[2, 1, 5, 4, 0, 0, 1, 0, 23, 4, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.148992}
{'[2, 1, 5, 4, 0, 0, 1, 0, 23, 4, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.147459}
{'[2, 1, 5, 4, 0, 0, 1, 0, 23, 4, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.150438}

out:
 ["{'[2, 1, 5, 4, 0, 0, 1, 0, 23, 4, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.151867}", "{'[2, 1, 5, 4, 0, 0, 1, 0, 23, 4, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.124387}", "{'[2, 1, 5, 4, 0, 0, 1, 0, 23, 4, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.152176}", "{'[2, 1, 5, 4, 0, 0, 1, 0, 23, 4, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.147697}", "{'[2, 1, 5, 4, 0, 0, 1, 0, 23, 4, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.152197}", "{'[2, 1, 5, 4, 0, 0, 1, 0, 23, 4, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.149166}", "{'[2, 1, 5, 4, 0, 0, 1, 0, 23, 4, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.149106}", "{'[2, 1, 5, 4, 0, 0, 1, 0, 23, 4, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.15039}", "{'[2, 1, 5, 4, 0, 0, 1, 0, 23, 4, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.149421}", "{'[2, 1, 5, 4, 0, 0, 1, 0, 23, 4, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.149055}", "{'[2, 1, 5, 4, 0, 0, 1, 0, 23, 4, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.147355}", "{'[2, 1, 5, 4, 0, 0, 1, 0, 23, 4, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.151915}", "{'[2, 1, 5, 4, 0, 0, 1, 0, 23, 4, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.150375}", "{'[2, 1, 5, 4, 0, 0, 1, 0, 23, 4, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.150125}", "{'[2, 1, 5, 4, 0, 0, 1, 0, 23, 4, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.148465}", "{'[2, 1, 5, 4, 0, 0, 1, 0, 23, 4, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.148854}", "{'[2, 1, 5, 4, 0, 0, 1, 0, 23, 4, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.149985}", "{'[2, 1, 5, 4, 0, 0, 1, 0, 23, 4, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.147949}", "{'[2, 1, 5, 4, 0, 0, 1, 0, 23, 4, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.148285}", "{'[2, 1, 5, 4, 0, 0, 1, 0, 23, 4, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.152525}", "{'[2, 1, 5, 4, 0, 0, 1, 0, 23, 4, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.15022}", "{'[2, 1, 5, 4, 0, 0, 1, 0, 23, 4, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.150864}", "{'[2, 1, 5, 4, 0, 0, 1, 0, 23, 4, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.151792}", "{'[2, 1, 5, 4, 0, 0, 1, 0, 23, 4, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.146049}", "{'[2, 1, 5, 4, 0, 0, 1, 0, 23, 4, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.151995}", "{'[2, 1, 5, 4, 0, 0, 1, 0, 23, 4, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.149499}", "{'[2, 1, 5, 4, 0, 0, 1, 0, 23, 4, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.150124}", "{'[2, 1, 5, 4, 0, 0, 1, 0, 23, 4, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.148992}", "{'[2, 1, 5, 4, 0, 0, 1, 0, 23, 4, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.147459}", "{'[2, 1, 5, 4, 0, 0, 1, 0, 23, 4, 23, 0, 1, 1, 0, 1, 1, 1]' : 0.150438}"]
returning from 'run': {'[2, 1, 5, 4, 0, 0, 1, 0, 23, 4, 23, 0, 1, 1, 0, 1, 1, 1]': ([0.151867, 0.124387, 0.152176, 0.147697, 0.152197, 0.149166, 0.149106, 0.15039, 0.149421, 0.149055, 0.147355, 0.151915, 0.150375, 0.150125, 0.148465, 0.148854, 0.149985, 0.147949, 0.148285, 0.152525, 0.15022, 0.150864, 0.151792, 0.146049, 0.151995, 0.149499, 0.150124, 0.148992, 0.147459, 0.150438], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 1, 5, 4, 0, 0, 1, 0, 23, 4, 23, 0, 1, 1, 0, 1, 1, 1]': ([0.151867, 0.124387, 0.152176, 0.147697, 0.152197, 0.149166, 0.149106, 0.15039, 0.149421, 0.149055, 0.147355, 0.151915, 0.150375, 0.150125, 0.148465, 0.148854, 0.149985, 0.147949, 0.148285, 0.152525, 0.15022, 0.150864, 0.151792, 0.146049, 0.151995, 0.149499, 0.150124, 0.148992, 0.147459, 0.150438], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	6
        Additions: 		2361
        Multiplications: 	702
        Divisions: 		0
        Logical: 		0
        Reads: 			3727
        Writes: 		394
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest31.exe __orio_perftest31.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest31.exe  
Program Test Output: 
{'[1, 2, 0, 5, 2, 6, 1, 0, 0, 0, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.194992}
{'[1, 2, 0, 5, 2, 6, 1, 0, 0, 0, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.194078}
{'[1, 2, 0, 5, 2, 6, 1, 0, 0, 0, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.190505}
{'[1, 2, 0, 5, 2, 6, 1, 0, 0, 0, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.195428}
{'[1, 2, 0, 5, 2, 6, 1, 0, 0, 0, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.193953}
{'[1, 2, 0, 5, 2, 6, 1, 0, 0, 0, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.191957}
{'[1, 2, 0, 5, 2, 6, 1, 0, 0, 0, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.190221}
{'[1, 2, 0, 5, 2, 6, 1, 0, 0, 0, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.193464}
{'[1, 2, 0, 5, 2, 6, 1, 0, 0, 0, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.194822}
{'[1, 2, 0, 5, 2, 6, 1, 0, 0, 0, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.194531}
{'[1, 2, 0, 5, 2, 6, 1, 0, 0, 0, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.195807}
{'[1, 2, 0, 5, 2, 6, 1, 0, 0, 0, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.198634}
{'[1, 2, 0, 5, 2, 6, 1, 0, 0, 0, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.188078}
{'[1, 2, 0, 5, 2, 6, 1, 0, 0, 0, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.19623}
{'[1, 2, 0, 5, 2, 6, 1, 0, 0, 0, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.19476}
{'[1, 2, 0, 5, 2, 6, 1, 0, 0, 0, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.191496}
{'[1, 2, 0, 5, 2, 6, 1, 0, 0, 0, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.195285}
{'[1, 2, 0, 5, 2, 6, 1, 0, 0, 0, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.19383}
{'[1, 2, 0, 5, 2, 6, 1, 0, 0, 0, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.196369}
{'[1, 2, 0, 5, 2, 6, 1, 0, 0, 0, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.199154}
{'[1, 2, 0, 5, 2, 6, 1, 0, 0, 0, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.193742}
{'[1, 2, 0, 5, 2, 6, 1, 0, 0, 0, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.193925}
{'[1, 2, 0, 5, 2, 6, 1, 0, 0, 0, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.192764}
{'[1, 2, 0, 5, 2, 6, 1, 0, 0, 0, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.194751}
{'[1, 2, 0, 5, 2, 6, 1, 0, 0, 0, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.197582}
{'[1, 2, 0, 5, 2, 6, 1, 0, 0, 0, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.191989}
{'[1, 2, 0, 5, 2, 6, 1, 0, 0, 0, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.191198}
{'[1, 2, 0, 5, 2, 6, 1, 0, 0, 0, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.190623}
{'[1, 2, 0, 5, 2, 6, 1, 0, 0, 0, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.190854}
{'[1, 2, 0, 5, 2, 6, 1, 0, 0, 0, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.193309}

out:
 ["{'[1, 2, 0, 5, 2, 6, 1, 0, 0, 0, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.194992}", "{'[1, 2, 0, 5, 2, 6, 1, 0, 0, 0, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.194078}", "{'[1, 2, 0, 5, 2, 6, 1, 0, 0, 0, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.190505}", "{'[1, 2, 0, 5, 2, 6, 1, 0, 0, 0, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.195428}", "{'[1, 2, 0, 5, 2, 6, 1, 0, 0, 0, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.193953}", "{'[1, 2, 0, 5, 2, 6, 1, 0, 0, 0, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.191957}", "{'[1, 2, 0, 5, 2, 6, 1, 0, 0, 0, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.190221}", "{'[1, 2, 0, 5, 2, 6, 1, 0, 0, 0, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.193464}", "{'[1, 2, 0, 5, 2, 6, 1, 0, 0, 0, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.194822}", "{'[1, 2, 0, 5, 2, 6, 1, 0, 0, 0, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.194531}", "{'[1, 2, 0, 5, 2, 6, 1, 0, 0, 0, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.195807}", "{'[1, 2, 0, 5, 2, 6, 1, 0, 0, 0, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.198634}", "{'[1, 2, 0, 5, 2, 6, 1, 0, 0, 0, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.188078}", "{'[1, 2, 0, 5, 2, 6, 1, 0, 0, 0, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.19623}", "{'[1, 2, 0, 5, 2, 6, 1, 0, 0, 0, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.19476}", "{'[1, 2, 0, 5, 2, 6, 1, 0, 0, 0, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.191496}", "{'[1, 2, 0, 5, 2, 6, 1, 0, 0, 0, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.195285}", "{'[1, 2, 0, 5, 2, 6, 1, 0, 0, 0, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.19383}", "{'[1, 2, 0, 5, 2, 6, 1, 0, 0, 0, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.196369}", "{'[1, 2, 0, 5, 2, 6, 1, 0, 0, 0, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.199154}", "{'[1, 2, 0, 5, 2, 6, 1, 0, 0, 0, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.193742}", "{'[1, 2, 0, 5, 2, 6, 1, 0, 0, 0, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.193925}", "{'[1, 2, 0, 5, 2, 6, 1, 0, 0, 0, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.192764}", "{'[1, 2, 0, 5, 2, 6, 1, 0, 0, 0, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.194751}", "{'[1, 2, 0, 5, 2, 6, 1, 0, 0, 0, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.197582}", "{'[1, 2, 0, 5, 2, 6, 1, 0, 0, 0, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.191989}", "{'[1, 2, 0, 5, 2, 6, 1, 0, 0, 0, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.191198}", "{'[1, 2, 0, 5, 2, 6, 1, 0, 0, 0, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.190623}", "{'[1, 2, 0, 5, 2, 6, 1, 0, 0, 0, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.190854}", "{'[1, 2, 0, 5, 2, 6, 1, 0, 0, 0, 0, 29, 1, 1, 0, 0, 0, 0]' : 0.193309}"]
returning from 'run': {'[1, 2, 0, 5, 2, 6, 1, 0, 0, 0, 0, 29, 1, 1, 0, 0, 0, 0]': ([0.194992, 0.194078, 0.190505, 0.195428, 0.193953, 0.191957, 0.190221, 0.193464, 0.194822, 0.194531, 0.195807, 0.198634, 0.188078, 0.19623, 0.19476, 0.191496, 0.195285, 0.19383, 0.196369, 0.199154, 0.193742, 0.193925, 0.192764, 0.194751, 0.197582, 0.191989, 0.191198, 0.190623, 0.190854, 0.193309], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 2, 0, 5, 2, 6, 1, 0, 0, 0, 0, 29, 1, 1, 0, 0, 0, 0]': ([0.194992, 0.194078, 0.190505, 0.195428, 0.193953, 0.191957, 0.190221, 0.193464, 0.194822, 0.194531, 0.195807, 0.198634, 0.188078, 0.19623, 0.19476, 0.191496, 0.195285, 0.19383, 0.196369, 0.199154, 0.193742, 0.193925, 0.192764, 0.194751, 0.197582, 0.191989, 0.191198, 0.190623, 0.190854, 0.193309], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	34
        Max loop nest depth: 	6
        Additions: 		1147
        Multiplications: 	288
        Divisions: 		0
        Logical: 		0
        Reads: 			1988
        Writes: 		257
        Comparisons:		34
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest32.exe __orio_perftest32.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest32.exe  
Program Test Output: 
{'[2, 0, 6, 5, 2, 6, 1, 1, 27, 2, 26, 0, 0, 0, 1, 0, 0, 0]' : 0.329733}
{'[2, 0, 6, 5, 2, 6, 1, 1, 27, 2, 26, 0, 0, 0, 1, 0, 0, 0]' : 0.331779}
{'[2, 0, 6, 5, 2, 6, 1, 1, 27, 2, 26, 0, 0, 0, 1, 0, 0, 0]' : 0.329963}
{'[2, 0, 6, 5, 2, 6, 1, 1, 27, 2, 26, 0, 0, 0, 1, 0, 0, 0]' : 0.325809}
{'[2, 0, 6, 5, 2, 6, 1, 1, 27, 2, 26, 0, 0, 0, 1, 0, 0, 0]' : 0.326615}
{'[2, 0, 6, 5, 2, 6, 1, 1, 27, 2, 26, 0, 0, 0, 1, 0, 0, 0]' : 0.330544}
{'[2, 0, 6, 5, 2, 6, 1, 1, 27, 2, 26, 0, 0, 0, 1, 0, 0, 0]' : 0.32948}
{'[2, 0, 6, 5, 2, 6, 1, 1, 27, 2, 26, 0, 0, 0, 1, 0, 0, 0]' : 0.329416}
{'[2, 0, 6, 5, 2, 6, 1, 1, 27, 2, 26, 0, 0, 0, 1, 0, 0, 0]' : 0.329192}
{'[2, 0, 6, 5, 2, 6, 1, 1, 27, 2, 26, 0, 0, 0, 1, 0, 0, 0]' : 0.327408}
{'[2, 0, 6, 5, 2, 6, 1, 1, 27, 2, 26, 0, 0, 0, 1, 0, 0, 0]' : 0.327452}
{'[2, 0, 6, 5, 2, 6, 1, 1, 27, 2, 26, 0, 0, 0, 1, 0, 0, 0]' : 0.33114}
{'[2, 0, 6, 5, 2, 6, 1, 1, 27, 2, 26, 0, 0, 0, 1, 0, 0, 0]' : 0.330373}
{'[2, 0, 6, 5, 2, 6, 1, 1, 27, 2, 26, 0, 0, 0, 1, 0, 0, 0]' : 0.330286}
{'[2, 0, 6, 5, 2, 6, 1, 1, 27, 2, 26, 0, 0, 0, 1, 0, 0, 0]' : 0.329767}
{'[2, 0, 6, 5, 2, 6, 1, 1, 27, 2, 26, 0, 0, 0, 1, 0, 0, 0]' : 0.328421}
{'[2, 0, 6, 5, 2, 6, 1, 1, 27, 2, 26, 0, 0, 0, 1, 0, 0, 0]' : 0.329873}
{'[2, 0, 6, 5, 2, 6, 1, 1, 27, 2, 26, 0, 0, 0, 1, 0, 0, 0]' : 0.327901}
{'[2, 0, 6, 5, 2, 6, 1, 1, 27, 2, 26, 0, 0, 0, 1, 0, 0, 0]' : 0.329007}
{'[2, 0, 6, 5, 2, 6, 1, 1, 27, 2, 26, 0, 0, 0, 1, 0, 0, 0]' : 0.328341}
{'[2, 0, 6, 5, 2, 6, 1, 1, 27, 2, 26, 0, 0, 0, 1, 0, 0, 0]' : 0.330073}
{'[2, 0, 6, 5, 2, 6, 1, 1, 27, 2, 26, 0, 0, 0, 1, 0, 0, 0]' : 0.327406}
{'[2, 0, 6, 5, 2, 6, 1, 1, 27, 2, 26, 0, 0, 0, 1, 0, 0, 0]' : 0.328606}
{'[2, 0, 6, 5, 2, 6, 1, 1, 27, 2, 26, 0, 0, 0, 1, 0, 0, 0]' : 0.330852}
{'[2, 0, 6, 5, 2, 6, 1, 1, 27, 2, 26, 0, 0, 0, 1, 0, 0, 0]' : 0.32831}
{'[2, 0, 6, 5, 2, 6, 1, 1, 27, 2, 26, 0, 0, 0, 1, 0, 0, 0]' : 0.328757}
{'[2, 0, 6, 5, 2, 6, 1, 1, 27, 2, 26, 0, 0, 0, 1, 0, 0, 0]' : 0.326745}
{'[2, 0, 6, 5, 2, 6, 1, 1, 27, 2, 26, 0, 0, 0, 1, 0, 0, 0]' : 0.328051}
{'[2, 0, 6, 5, 2, 6, 1, 1, 27, 2, 26, 0, 0, 0, 1, 0, 0, 0]' : 0.329435}
{'[2, 0, 6, 5, 2, 6, 1, 1, 27, 2, 26, 0, 0, 0, 1, 0, 0, 0]' : 0.330913}

out:
 ["{'[2, 0, 6, 5, 2, 6, 1, 1, 27, 2, 26, 0, 0, 0, 1, 0, 0, 0]' : 0.329733}", "{'[2, 0, 6, 5, 2, 6, 1, 1, 27, 2, 26, 0, 0, 0, 1, 0, 0, 0]' : 0.331779}", "{'[2, 0, 6, 5, 2, 6, 1, 1, 27, 2, 26, 0, 0, 0, 1, 0, 0, 0]' : 0.329963}", "{'[2, 0, 6, 5, 2, 6, 1, 1, 27, 2, 26, 0, 0, 0, 1, 0, 0, 0]' : 0.325809}", "{'[2, 0, 6, 5, 2, 6, 1, 1, 27, 2, 26, 0, 0, 0, 1, 0, 0, 0]' : 0.326615}", "{'[2, 0, 6, 5, 2, 6, 1, 1, 27, 2, 26, 0, 0, 0, 1, 0, 0, 0]' : 0.330544}", "{'[2, 0, 6, 5, 2, 6, 1, 1, 27, 2, 26, 0, 0, 0, 1, 0, 0, 0]' : 0.32948}", "{'[2, 0, 6, 5, 2, 6, 1, 1, 27, 2, 26, 0, 0, 0, 1, 0, 0, 0]' : 0.329416}", "{'[2, 0, 6, 5, 2, 6, 1, 1, 27, 2, 26, 0, 0, 0, 1, 0, 0, 0]' : 0.329192}", "{'[2, 0, 6, 5, 2, 6, 1, 1, 27, 2, 26, 0, 0, 0, 1, 0, 0, 0]' : 0.327408}", "{'[2, 0, 6, 5, 2, 6, 1, 1, 27, 2, 26, 0, 0, 0, 1, 0, 0, 0]' : 0.327452}", "{'[2, 0, 6, 5, 2, 6, 1, 1, 27, 2, 26, 0, 0, 0, 1, 0, 0, 0]' : 0.33114}", "{'[2, 0, 6, 5, 2, 6, 1, 1, 27, 2, 26, 0, 0, 0, 1, 0, 0, 0]' : 0.330373}", "{'[2, 0, 6, 5, 2, 6, 1, 1, 27, 2, 26, 0, 0, 0, 1, 0, 0, 0]' : 0.330286}", "{'[2, 0, 6, 5, 2, 6, 1, 1, 27, 2, 26, 0, 0, 0, 1, 0, 0, 0]' : 0.329767}", "{'[2, 0, 6, 5, 2, 6, 1, 1, 27, 2, 26, 0, 0, 0, 1, 0, 0, 0]' : 0.328421}", "{'[2, 0, 6, 5, 2, 6, 1, 1, 27, 2, 26, 0, 0, 0, 1, 0, 0, 0]' : 0.329873}", "{'[2, 0, 6, 5, 2, 6, 1, 1, 27, 2, 26, 0, 0, 0, 1, 0, 0, 0]' : 0.327901}", "{'[2, 0, 6, 5, 2, 6, 1, 1, 27, 2, 26, 0, 0, 0, 1, 0, 0, 0]' : 0.329007}", "{'[2, 0, 6, 5, 2, 6, 1, 1, 27, 2, 26, 0, 0, 0, 1, 0, 0, 0]' : 0.328341}", "{'[2, 0, 6, 5, 2, 6, 1, 1, 27, 2, 26, 0, 0, 0, 1, 0, 0, 0]' : 0.330073}", "{'[2, 0, 6, 5, 2, 6, 1, 1, 27, 2, 26, 0, 0, 0, 1, 0, 0, 0]' : 0.327406}", "{'[2, 0, 6, 5, 2, 6, 1, 1, 27, 2, 26, 0, 0, 0, 1, 0, 0, 0]' : 0.328606}", "{'[2, 0, 6, 5, 2, 6, 1, 1, 27, 2, 26, 0, 0, 0, 1, 0, 0, 0]' : 0.330852}", "{'[2, 0, 6, 5, 2, 6, 1, 1, 27, 2, 26, 0, 0, 0, 1, 0, 0, 0]' : 0.32831}", "{'[2, 0, 6, 5, 2, 6, 1, 1, 27, 2, 26, 0, 0, 0, 1, 0, 0, 0]' : 0.328757}", "{'[2, 0, 6, 5, 2, 6, 1, 1, 27, 2, 26, 0, 0, 0, 1, 0, 0, 0]' : 0.326745}", "{'[2, 0, 6, 5, 2, 6, 1, 1, 27, 2, 26, 0, 0, 0, 1, 0, 0, 0]' : 0.328051}", "{'[2, 0, 6, 5, 2, 6, 1, 1, 27, 2, 26, 0, 0, 0, 1, 0, 0, 0]' : 0.329435}", "{'[2, 0, 6, 5, 2, 6, 1, 1, 27, 2, 26, 0, 0, 0, 1, 0, 0, 0]' : 0.330913}"]
returning from 'run': {'[2, 0, 6, 5, 2, 6, 1, 1, 27, 2, 26, 0, 0, 0, 1, 0, 0, 0]': ([0.329733, 0.331779, 0.329963, 0.325809, 0.326615, 0.330544, 0.32948, 0.329416, 0.329192, 0.327408, 0.327452, 0.33114, 0.330373, 0.330286, 0.329767, 0.328421, 0.329873, 0.327901, 0.329007, 0.328341, 0.330073, 0.327406, 0.328606, 0.330852, 0.32831, 0.328757, 0.326745, 0.328051, 0.329435, 0.330913], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 0, 6, 5, 2, 6, 1, 1, 27, 2, 26, 0, 0, 0, 1, 0, 0, 0]': ([0.329733, 0.331779, 0.329963, 0.325809, 0.326615, 0.330544, 0.32948, 0.329416, 0.329192, 0.327408, 0.327452, 0.33114, 0.330373, 0.330286, 0.329767, 0.328421, 0.329873, 0.327901, 0.329007, 0.328341, 0.330073, 0.327406, 0.328606, 0.330852, 0.32831, 0.328757, 0.326745, 0.328051, 0.329435, 0.330913], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	23
        Max loop nest depth: 	4
        Additions: 		2596
        Multiplications: 	660
        Divisions: 		0
        Logical: 		0
        Reads: 			4085
        Writes: 		413
        Comparisons:		23
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest33.exe __orio_perftest33.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest33.exe  
Program Test Output: 
{'[0, 1, 0, 1, 0, 6, 1, 1, 24, 0, 2, 4, 2, 0, 0, 0, 1, 0]' : 0.453228}
{'[0, 1, 0, 1, 0, 6, 1, 1, 24, 0, 2, 4, 2, 0, 0, 0, 1, 0]' : 0.448648}
{'[0, 1, 0, 1, 0, 6, 1, 1, 24, 0, 2, 4, 2, 0, 0, 0, 1, 0]' : 0.438044}
{'[0, 1, 0, 1, 0, 6, 1, 1, 24, 0, 2, 4, 2, 0, 0, 0, 1, 0]' : 0.452343}
{'[0, 1, 0, 1, 0, 6, 1, 1, 24, 0, 2, 4, 2, 0, 0, 0, 1, 0]' : 0.448686}
{'[0, 1, 0, 1, 0, 6, 1, 1, 24, 0, 2, 4, 2, 0, 0, 0, 1, 0]' : 0.448365}
{'[0, 1, 0, 1, 0, 6, 1, 1, 24, 0, 2, 4, 2, 0, 0, 0, 1, 0]' : 0.446009}
{'[0, 1, 0, 1, 0, 6, 1, 1, 24, 0, 2, 4, 2, 0, 0, 0, 1, 0]' : 0.443615}
{'[0, 1, 0, 1, 0, 6, 1, 1, 24, 0, 2, 4, 2, 0, 0, 0, 1, 0]' : 0.449024}
{'[0, 1, 0, 1, 0, 6, 1, 1, 24, 0, 2, 4, 2, 0, 0, 0, 1, 0]' : 0.443117}
{'[0, 1, 0, 1, 0, 6, 1, 1, 24, 0, 2, 4, 2, 0, 0, 0, 1, 0]' : 0.349937}
{'[0, 1, 0, 1, 0, 6, 1, 1, 24, 0, 2, 4, 2, 0, 0, 0, 1, 0]' : 0.246562}
{'[0, 1, 0, 1, 0, 6, 1, 1, 24, 0, 2, 4, 2, 0, 0, 0, 1, 0]' : 0.445223}
{'[0, 1, 0, 1, 0, 6, 1, 1, 24, 0, 2, 4, 2, 0, 0, 0, 1, 0]' : 0.452455}
{'[0, 1, 0, 1, 0, 6, 1, 1, 24, 0, 2, 4, 2, 0, 0, 0, 1, 0]' : 0.462699}
{'[0, 1, 0, 1, 0, 6, 1, 1, 24, 0, 2, 4, 2, 0, 0, 0, 1, 0]' : 0.461659}
{'[0, 1, 0, 1, 0, 6, 1, 1, 24, 0, 2, 4, 2, 0, 0, 0, 1, 0]' : 0.451351}
{'[0, 1, 0, 1, 0, 6, 1, 1, 24, 0, 2, 4, 2, 0, 0, 0, 1, 0]' : 0.460533}
{'[0, 1, 0, 1, 0, 6, 1, 1, 24, 0, 2, 4, 2, 0, 0, 0, 1, 0]' : 0.455087}
{'[0, 1, 0, 1, 0, 6, 1, 1, 24, 0, 2, 4, 2, 0, 0, 0, 1, 0]' : 0.456323}
{'[0, 1, 0, 1, 0, 6, 1, 1, 24, 0, 2, 4, 2, 0, 0, 0, 1, 0]' : 0.45961}
{'[0, 1, 0, 1, 0, 6, 1, 1, 24, 0, 2, 4, 2, 0, 0, 0, 1, 0]' : 0.459076}
{'[0, 1, 0, 1, 0, 6, 1, 1, 24, 0, 2, 4, 2, 0, 0, 0, 1, 0]' : 0.457792}
{'[0, 1, 0, 1, 0, 6, 1, 1, 24, 0, 2, 4, 2, 0, 0, 0, 1, 0]' : 0.451002}
{'[0, 1, 0, 1, 0, 6, 1, 1, 24, 0, 2, 4, 2, 0, 0, 0, 1, 0]' : 0.457403}
{'[0, 1, 0, 1, 0, 6, 1, 1, 24, 0, 2, 4, 2, 0, 0, 0, 1, 0]' : 0.455512}
{'[0, 1, 0, 1, 0, 6, 1, 1, 24, 0, 2, 4, 2, 0, 0, 0, 1, 0]' : 0.455253}
{'[0, 1, 0, 1, 0, 6, 1, 1, 24, 0, 2, 4, 2, 0, 0, 0, 1, 0]' : 0.453152}
{'[0, 1, 0, 1, 0, 6, 1, 1, 24, 0, 2, 4, 2, 0, 0, 0, 1, 0]' : 0.461776}
{'[0, 1, 0, 1, 0, 6, 1, 1, 24, 0, 2, 4, 2, 0, 0, 0, 1, 0]' : 0.456278}

out:
 ["{'[0, 1, 0, 1, 0, 6, 1, 1, 24, 0, 2, 4, 2, 0, 0, 0, 1, 0]' : 0.453228}", "{'[0, 1, 0, 1, 0, 6, 1, 1, 24, 0, 2, 4, 2, 0, 0, 0, 1, 0]' : 0.448648}", "{'[0, 1, 0, 1, 0, 6, 1, 1, 24, 0, 2, 4, 2, 0, 0, 0, 1, 0]' : 0.438044}", "{'[0, 1, 0, 1, 0, 6, 1, 1, 24, 0, 2, 4, 2, 0, 0, 0, 1, 0]' : 0.452343}", "{'[0, 1, 0, 1, 0, 6, 1, 1, 24, 0, 2, 4, 2, 0, 0, 0, 1, 0]' : 0.448686}", "{'[0, 1, 0, 1, 0, 6, 1, 1, 24, 0, 2, 4, 2, 0, 0, 0, 1, 0]' : 0.448365}", "{'[0, 1, 0, 1, 0, 6, 1, 1, 24, 0, 2, 4, 2, 0, 0, 0, 1, 0]' : 0.446009}", "{'[0, 1, 0, 1, 0, 6, 1, 1, 24, 0, 2, 4, 2, 0, 0, 0, 1, 0]' : 0.443615}", "{'[0, 1, 0, 1, 0, 6, 1, 1, 24, 0, 2, 4, 2, 0, 0, 0, 1, 0]' : 0.449024}", "{'[0, 1, 0, 1, 0, 6, 1, 1, 24, 0, 2, 4, 2, 0, 0, 0, 1, 0]' : 0.443117}", "{'[0, 1, 0, 1, 0, 6, 1, 1, 24, 0, 2, 4, 2, 0, 0, 0, 1, 0]' : 0.349937}", "{'[0, 1, 0, 1, 0, 6, 1, 1, 24, 0, 2, 4, 2, 0, 0, 0, 1, 0]' : 0.246562}", "{'[0, 1, 0, 1, 0, 6, 1, 1, 24, 0, 2, 4, 2, 0, 0, 0, 1, 0]' : 0.445223}", "{'[0, 1, 0, 1, 0, 6, 1, 1, 24, 0, 2, 4, 2, 0, 0, 0, 1, 0]' : 0.452455}", "{'[0, 1, 0, 1, 0, 6, 1, 1, 24, 0, 2, 4, 2, 0, 0, 0, 1, 0]' : 0.462699}", "{'[0, 1, 0, 1, 0, 6, 1, 1, 24, 0, 2, 4, 2, 0, 0, 0, 1, 0]' : 0.461659}", "{'[0, 1, 0, 1, 0, 6, 1, 1, 24, 0, 2, 4, 2, 0, 0, 0, 1, 0]' : 0.451351}", "{'[0, 1, 0, 1, 0, 6, 1, 1, 24, 0, 2, 4, 2, 0, 0, 0, 1, 0]' : 0.460533}", "{'[0, 1, 0, 1, 0, 6, 1, 1, 24, 0, 2, 4, 2, 0, 0, 0, 1, 0]' : 0.455087}", "{'[0, 1, 0, 1, 0, 6, 1, 1, 24, 0, 2, 4, 2, 0, 0, 0, 1, 0]' : 0.456323}", "{'[0, 1, 0, 1, 0, 6, 1, 1, 24, 0, 2, 4, 2, 0, 0, 0, 1, 0]' : 0.45961}", "{'[0, 1, 0, 1, 0, 6, 1, 1, 24, 0, 2, 4, 2, 0, 0, 0, 1, 0]' : 0.459076}", "{'[0, 1, 0, 1, 0, 6, 1, 1, 24, 0, 2, 4, 2, 0, 0, 0, 1, 0]' : 0.457792}", "{'[0, 1, 0, 1, 0, 6, 1, 1, 24, 0, 2, 4, 2, 0, 0, 0, 1, 0]' : 0.451002}", "{'[0, 1, 0, 1, 0, 6, 1, 1, 24, 0, 2, 4, 2, 0, 0, 0, 1, 0]' : 0.457403}", "{'[0, 1, 0, 1, 0, 6, 1, 1, 24, 0, 2, 4, 2, 0, 0, 0, 1, 0]' : 0.455512}", "{'[0, 1, 0, 1, 0, 6, 1, 1, 24, 0, 2, 4, 2, 0, 0, 0, 1, 0]' : 0.455253}", "{'[0, 1, 0, 1, 0, 6, 1, 1, 24, 0, 2, 4, 2, 0, 0, 0, 1, 0]' : 0.453152}", "{'[0, 1, 0, 1, 0, 6, 1, 1, 24, 0, 2, 4, 2, 0, 0, 0, 1, 0]' : 0.461776}", "{'[0, 1, 0, 1, 0, 6, 1, 1, 24, 0, 2, 4, 2, 0, 0, 0, 1, 0]' : 0.456278}"]
returning from 'run': {'[0, 1, 0, 1, 0, 6, 1, 1, 24, 0, 2, 4, 2, 0, 0, 0, 1, 0]': ([0.453228, 0.448648, 0.438044, 0.452343, 0.448686, 0.448365, 0.446009, 0.443615, 0.449024, 0.443117, 0.349937, 0.246562, 0.445223, 0.452455, 0.462699, 0.461659, 0.451351, 0.460533, 0.455087, 0.456323, 0.45961, 0.459076, 0.457792, 0.451002, 0.457403, 0.455512, 0.455253, 0.453152, 0.461776, 0.456278], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 1, 0, 1, 0, 6, 1, 1, 24, 0, 2, 4, 2, 0, 0, 0, 1, 0]': ([0.453228, 0.448648, 0.438044, 0.452343, 0.448686, 0.448365, 0.446009, 0.443615, 0.449024, 0.443117, 0.349937, 0.246562, 0.445223, 0.452455, 0.462699, 0.461659, 0.451351, 0.460533, 0.455087, 0.456323, 0.45961, 0.459076, 0.457792, 0.451002, 0.457403, 0.455512, 0.455253, 0.453152, 0.461776, 0.456278], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	63
        Max loop nest depth: 	5
        Additions: 		3612
        Multiplications: 	1584
        Divisions: 		0
        Logical: 		0
        Reads: 			6939
        Writes: 		1186
        Comparisons:		63
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest34.exe __orio_perftest34.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest34.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest34.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest34.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest34.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	4
        Additions: 		2861
        Multiplications: 	1408
        Divisions: 		0
        Logical: 		0
        Reads: 			5336
        Writes: 		840
        Comparisons:		10
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest35.exe __orio_perftest35.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest35.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest35.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest35.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest35.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	74
        Max loop nest depth: 	5
        Additions: 		4962
        Multiplications: 	1380
        Divisions: 		0
        Logical: 		0
        Reads: 			7594
        Writes: 		870
        Comparisons:		74
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest36.exe __orio_perftest36.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest36.exe  
Program Test Output: 
{'[0, 2, 6, 4, 4, 0, 0, 0, 0, 28, 0, 12, 0, 0, 1, 0, 1, 0]' : 0.334233}
{'[0, 2, 6, 4, 4, 0, 0, 0, 0, 28, 0, 12, 0, 0, 1, 0, 1, 0]' : 0.322873}
{'[0, 2, 6, 4, 4, 0, 0, 0, 0, 28, 0, 12, 0, 0, 1, 0, 1, 0]' : 0.325795}
{'[0, 2, 6, 4, 4, 0, 0, 0, 0, 28, 0, 12, 0, 0, 1, 0, 1, 0]' : 0.328628}
{'[0, 2, 6, 4, 4, 0, 0, 0, 0, 28, 0, 12, 0, 0, 1, 0, 1, 0]' : 0.32465}
{'[0, 2, 6, 4, 4, 0, 0, 0, 0, 28, 0, 12, 0, 0, 1, 0, 1, 0]' : 0.327563}
{'[0, 2, 6, 4, 4, 0, 0, 0, 0, 28, 0, 12, 0, 0, 1, 0, 1, 0]' : 0.319891}
{'[0, 2, 6, 4, 4, 0, 0, 0, 0, 28, 0, 12, 0, 0, 1, 0, 1, 0]' : 0.324937}
{'[0, 2, 6, 4, 4, 0, 0, 0, 0, 28, 0, 12, 0, 0, 1, 0, 1, 0]' : 0.329399}
{'[0, 2, 6, 4, 4, 0, 0, 0, 0, 28, 0, 12, 0, 0, 1, 0, 1, 0]' : 0.318906}
{'[0, 2, 6, 4, 4, 0, 0, 0, 0, 28, 0, 12, 0, 0, 1, 0, 1, 0]' : 0.327912}
{'[0, 2, 6, 4, 4, 0, 0, 0, 0, 28, 0, 12, 0, 0, 1, 0, 1, 0]' : 0.324831}
{'[0, 2, 6, 4, 4, 0, 0, 0, 0, 28, 0, 12, 0, 0, 1, 0, 1, 0]' : 0.327937}
{'[0, 2, 6, 4, 4, 0, 0, 0, 0, 28, 0, 12, 0, 0, 1, 0, 1, 0]' : 0.456877}
{'[0, 2, 6, 4, 4, 0, 0, 0, 0, 28, 0, 12, 0, 0, 1, 0, 1, 0]' : 0.403107}
{'[0, 2, 6, 4, 4, 0, 0, 0, 0, 28, 0, 12, 0, 0, 1, 0, 1, 0]' : 0.325656}
{'[0, 2, 6, 4, 4, 0, 0, 0, 0, 28, 0, 12, 0, 0, 1, 0, 1, 0]' : 0.340062}
{'[0, 2, 6, 4, 4, 0, 0, 0, 0, 28, 0, 12, 0, 0, 1, 0, 1, 0]' : 0.330333}
{'[0, 2, 6, 4, 4, 0, 0, 0, 0, 28, 0, 12, 0, 0, 1, 0, 1, 0]' : 0.325081}
{'[0, 2, 6, 4, 4, 0, 0, 0, 0, 28, 0, 12, 0, 0, 1, 0, 1, 0]' : 0.33179}
{'[0, 2, 6, 4, 4, 0, 0, 0, 0, 28, 0, 12, 0, 0, 1, 0, 1, 0]' : 0.356081}
{'[0, 2, 6, 4, 4, 0, 0, 0, 0, 28, 0, 12, 0, 0, 1, 0, 1, 0]' : 0.33447}
{'[0, 2, 6, 4, 4, 0, 0, 0, 0, 28, 0, 12, 0, 0, 1, 0, 1, 0]' : 0.32358}
{'[0, 2, 6, 4, 4, 0, 0, 0, 0, 28, 0, 12, 0, 0, 1, 0, 1, 0]' : 0.332747}
{'[0, 2, 6, 4, 4, 0, 0, 0, 0, 28, 0, 12, 0, 0, 1, 0, 1, 0]' : 0.331539}
{'[0, 2, 6, 4, 4, 0, 0, 0, 0, 28, 0, 12, 0, 0, 1, 0, 1, 0]' : 0.327327}
{'[0, 2, 6, 4, 4, 0, 0, 0, 0, 28, 0, 12, 0, 0, 1, 0, 1, 0]' : 0.425567}
{'[0, 2, 6, 4, 4, 0, 0, 0, 0, 28, 0, 12, 0, 0, 1, 0, 1, 0]' : 0.447093}
{'[0, 2, 6, 4, 4, 0, 0, 0, 0, 28, 0, 12, 0, 0, 1, 0, 1, 0]' : 0.329941}
{'[0, 2, 6, 4, 4, 0, 0, 0, 0, 28, 0, 12, 0, 0, 1, 0, 1, 0]' : 0.32359}

out:
 ["{'[0, 2, 6, 4, 4, 0, 0, 0, 0, 28, 0, 12, 0, 0, 1, 0, 1, 0]' : 0.334233}", "{'[0, 2, 6, 4, 4, 0, 0, 0, 0, 28, 0, 12, 0, 0, 1, 0, 1, 0]' : 0.322873}", "{'[0, 2, 6, 4, 4, 0, 0, 0, 0, 28, 0, 12, 0, 0, 1, 0, 1, 0]' : 0.325795}", "{'[0, 2, 6, 4, 4, 0, 0, 0, 0, 28, 0, 12, 0, 0, 1, 0, 1, 0]' : 0.328628}", "{'[0, 2, 6, 4, 4, 0, 0, 0, 0, 28, 0, 12, 0, 0, 1, 0, 1, 0]' : 0.32465}", "{'[0, 2, 6, 4, 4, 0, 0, 0, 0, 28, 0, 12, 0, 0, 1, 0, 1, 0]' : 0.327563}", "{'[0, 2, 6, 4, 4, 0, 0, 0, 0, 28, 0, 12, 0, 0, 1, 0, 1, 0]' : 0.319891}", "{'[0, 2, 6, 4, 4, 0, 0, 0, 0, 28, 0, 12, 0, 0, 1, 0, 1, 0]' : 0.324937}", "{'[0, 2, 6, 4, 4, 0, 0, 0, 0, 28, 0, 12, 0, 0, 1, 0, 1, 0]' : 0.329399}", "{'[0, 2, 6, 4, 4, 0, 0, 0, 0, 28, 0, 12, 0, 0, 1, 0, 1, 0]' : 0.318906}", "{'[0, 2, 6, 4, 4, 0, 0, 0, 0, 28, 0, 12, 0, 0, 1, 0, 1, 0]' : 0.327912}", "{'[0, 2, 6, 4, 4, 0, 0, 0, 0, 28, 0, 12, 0, 0, 1, 0, 1, 0]' : 0.324831}", "{'[0, 2, 6, 4, 4, 0, 0, 0, 0, 28, 0, 12, 0, 0, 1, 0, 1, 0]' : 0.327937}", "{'[0, 2, 6, 4, 4, 0, 0, 0, 0, 28, 0, 12, 0, 0, 1, 0, 1, 0]' : 0.456877}", "{'[0, 2, 6, 4, 4, 0, 0, 0, 0, 28, 0, 12, 0, 0, 1, 0, 1, 0]' : 0.403107}", "{'[0, 2, 6, 4, 4, 0, 0, 0, 0, 28, 0, 12, 0, 0, 1, 0, 1, 0]' : 0.325656}", "{'[0, 2, 6, 4, 4, 0, 0, 0, 0, 28, 0, 12, 0, 0, 1, 0, 1, 0]' : 0.340062}", "{'[0, 2, 6, 4, 4, 0, 0, 0, 0, 28, 0, 12, 0, 0, 1, 0, 1, 0]' : 0.330333}", "{'[0, 2, 6, 4, 4, 0, 0, 0, 0, 28, 0, 12, 0, 0, 1, 0, 1, 0]' : 0.325081}", "{'[0, 2, 6, 4, 4, 0, 0, 0, 0, 28, 0, 12, 0, 0, 1, 0, 1, 0]' : 0.33179}", "{'[0, 2, 6, 4, 4, 0, 0, 0, 0, 28, 0, 12, 0, 0, 1, 0, 1, 0]' : 0.356081}", "{'[0, 2, 6, 4, 4, 0, 0, 0, 0, 28, 0, 12, 0, 0, 1, 0, 1, 0]' : 0.33447}", "{'[0, 2, 6, 4, 4, 0, 0, 0, 0, 28, 0, 12, 0, 0, 1, 0, 1, 0]' : 0.32358}", "{'[0, 2, 6, 4, 4, 0, 0, 0, 0, 28, 0, 12, 0, 0, 1, 0, 1, 0]' : 0.332747}", "{'[0, 2, 6, 4, 4, 0, 0, 0, 0, 28, 0, 12, 0, 0, 1, 0, 1, 0]' : 0.331539}", "{'[0, 2, 6, 4, 4, 0, 0, 0, 0, 28, 0, 12, 0, 0, 1, 0, 1, 0]' : 0.327327}", "{'[0, 2, 6, 4, 4, 0, 0, 0, 0, 28, 0, 12, 0, 0, 1, 0, 1, 0]' : 0.425567}", "{'[0, 2, 6, 4, 4, 0, 0, 0, 0, 28, 0, 12, 0, 0, 1, 0, 1, 0]' : 0.447093}", "{'[0, 2, 6, 4, 4, 0, 0, 0, 0, 28, 0, 12, 0, 0, 1, 0, 1, 0]' : 0.329941}", "{'[0, 2, 6, 4, 4, 0, 0, 0, 0, 28, 0, 12, 0, 0, 1, 0, 1, 0]' : 0.32359}"]
returning from 'run': {'[0, 2, 6, 4, 4, 0, 0, 0, 0, 28, 0, 12, 0, 0, 1, 0, 1, 0]': ([0.334233, 0.322873, 0.325795, 0.328628, 0.32465, 0.327563, 0.319891, 0.324937, 0.329399, 0.318906, 0.327912, 0.324831, 0.327937, 0.456877, 0.403107, 0.325656, 0.340062, 0.330333, 0.325081, 0.33179, 0.356081, 0.33447, 0.32358, 0.332747, 0.331539, 0.327327, 0.425567, 0.447093, 0.329941, 0.32359], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 6, 4, 4, 0, 0, 0, 0, 28, 0, 12, 0, 0, 1, 0, 1, 0]': ([0.334233, 0.322873, 0.325795, 0.328628, 0.32465, 0.327563, 0.319891, 0.324937, 0.329399, 0.318906, 0.327912, 0.324831, 0.327937, 0.456877, 0.403107, 0.325656, 0.340062, 0.330333, 0.325081, 0.33179, 0.356081, 0.33447, 0.32358, 0.332747, 0.331539, 0.327327, 0.425567, 0.447093, 0.329941, 0.32359], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	75
        Max loop nest depth: 	6
        Additions: 		7693
        Multiplications: 	2880
        Divisions: 		0
        Logical: 		0
        Reads: 			14656
        Writes: 		2644
        Comparisons:		75
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest37.exe __orio_perftest37.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest37.exe  
Program Test Output: 
{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 11, 0, 29, 2, 0, 0, 1, 1, 1]' : 0.321119}
{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 11, 0, 29, 2, 0, 0, 1, 1, 1]' : 0.316285}
{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 11, 0, 29, 2, 0, 0, 1, 1, 1]' : 0.317188}
{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 11, 0, 29, 2, 0, 0, 1, 1, 1]' : 0.329456}
{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 11, 0, 29, 2, 0, 0, 1, 1, 1]' : 0.400579}
{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 11, 0, 29, 2, 0, 0, 1, 1, 1]' : 0.384923}
{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 11, 0, 29, 2, 0, 0, 1, 1, 1]' : 0.389149}
{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 11, 0, 29, 2, 0, 0, 1, 1, 1]' : 0.406246}
{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 11, 0, 29, 2, 0, 0, 1, 1, 1]' : 0.396342}
{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 11, 0, 29, 2, 0, 0, 1, 1, 1]' : 0.392234}
{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 11, 0, 29, 2, 0, 0, 1, 1, 1]' : 0.386446}
{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 11, 0, 29, 2, 0, 0, 1, 1, 1]' : 0.388997}
{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 11, 0, 29, 2, 0, 0, 1, 1, 1]' : 0.381786}
{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 11, 0, 29, 2, 0, 0, 1, 1, 1]' : 0.390709}
{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 11, 0, 29, 2, 0, 0, 1, 1, 1]' : 0.319027}
{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 11, 0, 29, 2, 0, 0, 1, 1, 1]' : 0.327294}
{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 11, 0, 29, 2, 0, 0, 1, 1, 1]' : 0.32336}
{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 11, 0, 29, 2, 0, 0, 1, 1, 1]' : 0.328385}
{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 11, 0, 29, 2, 0, 0, 1, 1, 1]' : 0.325056}
{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 11, 0, 29, 2, 0, 0, 1, 1, 1]' : 0.327466}
{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 11, 0, 29, 2, 0, 0, 1, 1, 1]' : 0.327822}
{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 11, 0, 29, 2, 0, 0, 1, 1, 1]' : 0.330301}
{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 11, 0, 29, 2, 0, 0, 1, 1, 1]' : 0.340732}
{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 11, 0, 29, 2, 0, 0, 1, 1, 1]' : 0.320231}
{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 11, 0, 29, 2, 0, 0, 1, 1, 1]' : 0.320599}
{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 11, 0, 29, 2, 0, 0, 1, 1, 1]' : 0.316047}
{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 11, 0, 29, 2, 0, 0, 1, 1, 1]' : 0.314094}
{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 11, 0, 29, 2, 0, 0, 1, 1, 1]' : 0.339439}
{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 11, 0, 29, 2, 0, 0, 1, 1, 1]' : 0.324709}
{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 11, 0, 29, 2, 0, 0, 1, 1, 1]' : 0.333299}

out:
 ["{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 11, 0, 29, 2, 0, 0, 1, 1, 1]' : 0.321119}", "{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 11, 0, 29, 2, 0, 0, 1, 1, 1]' : 0.316285}", "{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 11, 0, 29, 2, 0, 0, 1, 1, 1]' : 0.317188}", "{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 11, 0, 29, 2, 0, 0, 1, 1, 1]' : 0.329456}", "{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 11, 0, 29, 2, 0, 0, 1, 1, 1]' : 0.400579}", "{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 11, 0, 29, 2, 0, 0, 1, 1, 1]' : 0.384923}", "{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 11, 0, 29, 2, 0, 0, 1, 1, 1]' : 0.389149}", "{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 11, 0, 29, 2, 0, 0, 1, 1, 1]' : 0.406246}", "{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 11, 0, 29, 2, 0, 0, 1, 1, 1]' : 0.396342}", "{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 11, 0, 29, 2, 0, 0, 1, 1, 1]' : 0.392234}", "{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 11, 0, 29, 2, 0, 0, 1, 1, 1]' : 0.386446}", "{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 11, 0, 29, 2, 0, 0, 1, 1, 1]' : 0.388997}", "{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 11, 0, 29, 2, 0, 0, 1, 1, 1]' : 0.381786}", "{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 11, 0, 29, 2, 0, 0, 1, 1, 1]' : 0.390709}", "{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 11, 0, 29, 2, 0, 0, 1, 1, 1]' : 0.319027}", "{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 11, 0, 29, 2, 0, 0, 1, 1, 1]' : 0.327294}", "{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 11, 0, 29, 2, 0, 0, 1, 1, 1]' : 0.32336}", "{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 11, 0, 29, 2, 0, 0, 1, 1, 1]' : 0.328385}", "{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 11, 0, 29, 2, 0, 0, 1, 1, 1]' : 0.325056}", "{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 11, 0, 29, 2, 0, 0, 1, 1, 1]' : 0.327466}", "{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 11, 0, 29, 2, 0, 0, 1, 1, 1]' : 0.327822}", "{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 11, 0, 29, 2, 0, 0, 1, 1, 1]' : 0.330301}", "{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 11, 0, 29, 2, 0, 0, 1, 1, 1]' : 0.340732}", "{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 11, 0, 29, 2, 0, 0, 1, 1, 1]' : 0.320231}", "{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 11, 0, 29, 2, 0, 0, 1, 1, 1]' : 0.320599}", "{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 11, 0, 29, 2, 0, 0, 1, 1, 1]' : 0.316047}", "{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 11, 0, 29, 2, 0, 0, 1, 1, 1]' : 0.314094}", "{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 11, 0, 29, 2, 0, 0, 1, 1, 1]' : 0.339439}", "{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 11, 0, 29, 2, 0, 0, 1, 1, 1]' : 0.324709}", "{'[2, 6, 0, 6, 6, 5, 0, 1, 2, 11, 0, 29, 2, 0, 0, 1, 1, 1]' : 0.333299}"]
returning from 'run': {'[2, 6, 0, 6, 6, 5, 0, 1, 2, 11, 0, 29, 2, 0, 0, 1, 1, 1]': ([0.321119, 0.316285, 0.317188, 0.329456, 0.400579, 0.384923, 0.389149, 0.406246, 0.396342, 0.392234, 0.386446, 0.388997, 0.381786, 0.390709, 0.319027, 0.327294, 0.32336, 0.328385, 0.325056, 0.327466, 0.327822, 0.330301, 0.340732, 0.320231, 0.320599, 0.316047, 0.314094, 0.339439, 0.324709, 0.333299], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 6, 0, 6, 6, 5, 0, 1, 2, 11, 0, 29, 2, 0, 0, 1, 1, 1]': ([0.321119, 0.316285, 0.317188, 0.329456, 0.400579, 0.384923, 0.389149, 0.406246, 0.396342, 0.392234, 0.386446, 0.388997, 0.381786, 0.390709, 0.319027, 0.327294, 0.32336, 0.328385, 0.325056, 0.327466, 0.327822, 0.330301, 0.340732, 0.320231, 0.320599, 0.316047, 0.314094, 0.339439, 0.324709, 0.333299], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	5
        Additions: 		435
        Multiplications: 	156
        Divisions: 		0
        Logical: 		0
        Reads: 			1015
        Writes: 		228
        Comparisons:		18
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest38.exe __orio_perftest38.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest38.exe  
Program Test Output: 
{'[1, 0, 5, 3, 0, 0, 0, 0, 3, 1, 0, 8, 0, 1, 1, 1, 0, 0]' : 0.156246}
{'[1, 0, 5, 3, 0, 0, 0, 0, 3, 1, 0, 8, 0, 1, 1, 1, 0, 0]' : 0.160746}
{'[1, 0, 5, 3, 0, 0, 0, 0, 3, 1, 0, 8, 0, 1, 1, 1, 0, 0]' : 0.156705}
{'[1, 0, 5, 3, 0, 0, 0, 0, 3, 1, 0, 8, 0, 1, 1, 1, 0, 0]' : 0.167206}
{'[1, 0, 5, 3, 0, 0, 0, 0, 3, 1, 0, 8, 0, 1, 1, 1, 0, 0]' : 0.190317}
{'[1, 0, 5, 3, 0, 0, 0, 0, 3, 1, 0, 8, 0, 1, 1, 1, 0, 0]' : 0.172269}
{'[1, 0, 5, 3, 0, 0, 0, 0, 3, 1, 0, 8, 0, 1, 1, 1, 0, 0]' : 0.174069}
{'[1, 0, 5, 3, 0, 0, 0, 0, 3, 1, 0, 8, 0, 1, 1, 1, 0, 0]' : 0.177315}
{'[1, 0, 5, 3, 0, 0, 0, 0, 3, 1, 0, 8, 0, 1, 1, 1, 0, 0]' : 0.17384}
{'[1, 0, 5, 3, 0, 0, 0, 0, 3, 1, 0, 8, 0, 1, 1, 1, 0, 0]' : 0.172599}
{'[1, 0, 5, 3, 0, 0, 0, 0, 3, 1, 0, 8, 0, 1, 1, 1, 0, 0]' : 0.172858}
{'[1, 0, 5, 3, 0, 0, 0, 0, 3, 1, 0, 8, 0, 1, 1, 1, 0, 0]' : 0.171108}
{'[1, 0, 5, 3, 0, 0, 0, 0, 3, 1, 0, 8, 0, 1, 1, 1, 0, 0]' : 0.172032}
{'[1, 0, 5, 3, 0, 0, 0, 0, 3, 1, 0, 8, 0, 1, 1, 1, 0, 0]' : 0.1749}
{'[1, 0, 5, 3, 0, 0, 0, 0, 3, 1, 0, 8, 0, 1, 1, 1, 0, 0]' : 0.171683}
{'[1, 0, 5, 3, 0, 0, 0, 0, 3, 1, 0, 8, 0, 1, 1, 1, 0, 0]' : 0.171636}
{'[1, 0, 5, 3, 0, 0, 0, 0, 3, 1, 0, 8, 0, 1, 1, 1, 0, 0]' : 0.17257}
{'[1, 0, 5, 3, 0, 0, 0, 0, 3, 1, 0, 8, 0, 1, 1, 1, 0, 0]' : 0.17243}
{'[1, 0, 5, 3, 0, 0, 0, 0, 3, 1, 0, 8, 0, 1, 1, 1, 0, 0]' : 0.174954}
{'[1, 0, 5, 3, 0, 0, 0, 0, 3, 1, 0, 8, 0, 1, 1, 1, 0, 0]' : 0.175191}
{'[1, 0, 5, 3, 0, 0, 0, 0, 3, 1, 0, 8, 0, 1, 1, 1, 0, 0]' : 0.18094}
{'[1, 0, 5, 3, 0, 0, 0, 0, 3, 1, 0, 8, 0, 1, 1, 1, 0, 0]' : 0.171542}
{'[1, 0, 5, 3, 0, 0, 0, 0, 3, 1, 0, 8, 0, 1, 1, 1, 0, 0]' : 0.170618}
{'[1, 0, 5, 3, 0, 0, 0, 0, 3, 1, 0, 8, 0, 1, 1, 1, 0, 0]' : 0.180762}
{'[1, 0, 5, 3, 0, 0, 0, 0, 3, 1, 0, 8, 0, 1, 1, 1, 0, 0]' : 0.172663}
{'[1, 0, 5, 3, 0, 0, 0, 0, 3, 1, 0, 8, 0, 1, 1, 1, 0, 0]' : 0.173778}
{'[1, 0, 5, 3, 0, 0, 0, 0, 3, 1, 0, 8, 0, 1, 1, 1, 0, 0]' : 0.175188}
{'[1, 0, 5, 3, 0, 0, 0, 0, 3, 1, 0, 8, 0, 1, 1, 1, 0, 0]' : 0.17351}
{'[1, 0, 5, 3, 0, 0, 0, 0, 3, 1, 0, 8, 0, 1, 1, 1, 0, 0]' : 0.17076}
{'[1, 0, 5, 3, 0, 0, 0, 0, 3, 1, 0, 8, 0, 1, 1, 1, 0, 0]' : 0.166198}

out:
 ["{'[1, 0, 5, 3, 0, 0, 0, 0, 3, 1, 0, 8, 0, 1, 1, 1, 0, 0]' : 0.156246}", "{'[1, 0, 5, 3, 0, 0, 0, 0, 3, 1, 0, 8, 0, 1, 1, 1, 0, 0]' : 0.160746}", "{'[1, 0, 5, 3, 0, 0, 0, 0, 3, 1, 0, 8, 0, 1, 1, 1, 0, 0]' : 0.156705}", "{'[1, 0, 5, 3, 0, 0, 0, 0, 3, 1, 0, 8, 0, 1, 1, 1, 0, 0]' : 0.167206}", "{'[1, 0, 5, 3, 0, 0, 0, 0, 3, 1, 0, 8, 0, 1, 1, 1, 0, 0]' : 0.190317}", "{'[1, 0, 5, 3, 0, 0, 0, 0, 3, 1, 0, 8, 0, 1, 1, 1, 0, 0]' : 0.172269}", "{'[1, 0, 5, 3, 0, 0, 0, 0, 3, 1, 0, 8, 0, 1, 1, 1, 0, 0]' : 0.174069}", "{'[1, 0, 5, 3, 0, 0, 0, 0, 3, 1, 0, 8, 0, 1, 1, 1, 0, 0]' : 0.177315}", "{'[1, 0, 5, 3, 0, 0, 0, 0, 3, 1, 0, 8, 0, 1, 1, 1, 0, 0]' : 0.17384}", "{'[1, 0, 5, 3, 0, 0, 0, 0, 3, 1, 0, 8, 0, 1, 1, 1, 0, 0]' : 0.172599}", "{'[1, 0, 5, 3, 0, 0, 0, 0, 3, 1, 0, 8, 0, 1, 1, 1, 0, 0]' : 0.172858}", "{'[1, 0, 5, 3, 0, 0, 0, 0, 3, 1, 0, 8, 0, 1, 1, 1, 0, 0]' : 0.171108}", "{'[1, 0, 5, 3, 0, 0, 0, 0, 3, 1, 0, 8, 0, 1, 1, 1, 0, 0]' : 0.172032}", "{'[1, 0, 5, 3, 0, 0, 0, 0, 3, 1, 0, 8, 0, 1, 1, 1, 0, 0]' : 0.1749}", "{'[1, 0, 5, 3, 0, 0, 0, 0, 3, 1, 0, 8, 0, 1, 1, 1, 0, 0]' : 0.171683}", "{'[1, 0, 5, 3, 0, 0, 0, 0, 3, 1, 0, 8, 0, 1, 1, 1, 0, 0]' : 0.171636}", "{'[1, 0, 5, 3, 0, 0, 0, 0, 3, 1, 0, 8, 0, 1, 1, 1, 0, 0]' : 0.17257}", "{'[1, 0, 5, 3, 0, 0, 0, 0, 3, 1, 0, 8, 0, 1, 1, 1, 0, 0]' : 0.17243}", "{'[1, 0, 5, 3, 0, 0, 0, 0, 3, 1, 0, 8, 0, 1, 1, 1, 0, 0]' : 0.174954}", "{'[1, 0, 5, 3, 0, 0, 0, 0, 3, 1, 0, 8, 0, 1, 1, 1, 0, 0]' : 0.175191}", "{'[1, 0, 5, 3, 0, 0, 0, 0, 3, 1, 0, 8, 0, 1, 1, 1, 0, 0]' : 0.18094}", "{'[1, 0, 5, 3, 0, 0, 0, 0, 3, 1, 0, 8, 0, 1, 1, 1, 0, 0]' : 0.171542}", "{'[1, 0, 5, 3, 0, 0, 0, 0, 3, 1, 0, 8, 0, 1, 1, 1, 0, 0]' : 0.170618}", "{'[1, 0, 5, 3, 0, 0, 0, 0, 3, 1, 0, 8, 0, 1, 1, 1, 0, 0]' : 0.180762}", "{'[1, 0, 5, 3, 0, 0, 0, 0, 3, 1, 0, 8, 0, 1, 1, 1, 0, 0]' : 0.172663}", "{'[1, 0, 5, 3, 0, 0, 0, 0, 3, 1, 0, 8, 0, 1, 1, 1, 0, 0]' : 0.173778}", "{'[1, 0, 5, 3, 0, 0, 0, 0, 3, 1, 0, 8, 0, 1, 1, 1, 0, 0]' : 0.175188}", "{'[1, 0, 5, 3, 0, 0, 0, 0, 3, 1, 0, 8, 0, 1, 1, 1, 0, 0]' : 0.17351}", "{'[1, 0, 5, 3, 0, 0, 0, 0, 3, 1, 0, 8, 0, 1, 1, 1, 0, 0]' : 0.17076}", "{'[1, 0, 5, 3, 0, 0, 0, 0, 3, 1, 0, 8, 0, 1, 1, 1, 0, 0]' : 0.166198}"]
returning from 'run': {'[1, 0, 5, 3, 0, 0, 0, 0, 3, 1, 0, 8, 0, 1, 1, 1, 0, 0]': ([0.156246, 0.160746, 0.156705, 0.167206, 0.190317, 0.172269, 0.174069, 0.177315, 0.17384, 0.172599, 0.172858, 0.171108, 0.172032, 0.1749, 0.171683, 0.171636, 0.17257, 0.17243, 0.174954, 0.175191, 0.18094, 0.171542, 0.170618, 0.180762, 0.172663, 0.173778, 0.175188, 0.17351, 0.17076, 0.166198], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 5, 3, 0, 0, 0, 0, 3, 1, 0, 8, 0, 1, 1, 1, 0, 0]': ([0.156246, 0.160746, 0.156705, 0.167206, 0.190317, 0.172269, 0.174069, 0.177315, 0.17384, 0.172599, 0.172858, 0.171108, 0.172032, 0.1749, 0.171683, 0.171636, 0.17257, 0.17243, 0.174954, 0.175191, 0.18094, 0.171542, 0.170618, 0.180762, 0.172663, 0.173778, 0.175188, 0.17351, 0.17076, 0.166198], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	134
        Max loop nest depth: 	5
        Additions: 		3796
        Multiplications: 	1380
        Divisions: 		0
        Logical: 		0
        Reads: 			6862
        Writes: 		1122
        Comparisons:		134
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest39.exe __orio_perftest39.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest39.exe  
Program Test Output: 
{'[2, 0, 5, 0, 4, 4, 0, 1, 0, 28, 12, 0, 0, 1, 0, 1, 1, 0]' : 0.342336}
{'[2, 0, 5, 0, 4, 4, 0, 1, 0, 28, 12, 0, 0, 1, 0, 1, 1, 0]' : 0.371428}
{'[2, 0, 5, 0, 4, 4, 0, 1, 0, 28, 12, 0, 0, 1, 0, 1, 1, 0]' : 0.402064}
{'[2, 0, 5, 0, 4, 4, 0, 1, 0, 28, 12, 0, 0, 1, 0, 1, 1, 0]' : 0.370771}
{'[2, 0, 5, 0, 4, 4, 0, 1, 0, 28, 12, 0, 0, 1, 0, 1, 1, 0]' : 0.391544}
{'[2, 0, 5, 0, 4, 4, 0, 1, 0, 28, 12, 0, 0, 1, 0, 1, 1, 0]' : 0.401213}
{'[2, 0, 5, 0, 4, 4, 0, 1, 0, 28, 12, 0, 0, 1, 0, 1, 1, 0]' : 0.394279}
{'[2, 0, 5, 0, 4, 4, 0, 1, 0, 28, 12, 0, 0, 1, 0, 1, 1, 0]' : 0.387698}
{'[2, 0, 5, 0, 4, 4, 0, 1, 0, 28, 12, 0, 0, 1, 0, 1, 1, 0]' : 0.381235}
{'[2, 0, 5, 0, 4, 4, 0, 1, 0, 28, 12, 0, 0, 1, 0, 1, 1, 0]' : 0.374549}
{'[2, 0, 5, 0, 4, 4, 0, 1, 0, 28, 12, 0, 0, 1, 0, 1, 1, 0]' : 0.38829}
{'[2, 0, 5, 0, 4, 4, 0, 1, 0, 28, 12, 0, 0, 1, 0, 1, 1, 0]' : 0.373243}
{'[2, 0, 5, 0, 4, 4, 0, 1, 0, 28, 12, 0, 0, 1, 0, 1, 1, 0]' : 0.374}
{'[2, 0, 5, 0, 4, 4, 0, 1, 0, 28, 12, 0, 0, 1, 0, 1, 1, 0]' : 0.36561}
{'[2, 0, 5, 0, 4, 4, 0, 1, 0, 28, 12, 0, 0, 1, 0, 1, 1, 0]' : 0.370181}
{'[2, 0, 5, 0, 4, 4, 0, 1, 0, 28, 12, 0, 0, 1, 0, 1, 1, 0]' : 0.387655}
{'[2, 0, 5, 0, 4, 4, 0, 1, 0, 28, 12, 0, 0, 1, 0, 1, 1, 0]' : 0.378526}
{'[2, 0, 5, 0, 4, 4, 0, 1, 0, 28, 12, 0, 0, 1, 0, 1, 1, 0]' : 0.391565}
{'[2, 0, 5, 0, 4, 4, 0, 1, 0, 28, 12, 0, 0, 1, 0, 1, 1, 0]' : 0.383839}
{'[2, 0, 5, 0, 4, 4, 0, 1, 0, 28, 12, 0, 0, 1, 0, 1, 1, 0]' : 0.395824}
{'[2, 0, 5, 0, 4, 4, 0, 1, 0, 28, 12, 0, 0, 1, 0, 1, 1, 0]' : 0.387115}
{'[2, 0, 5, 0, 4, 4, 0, 1, 0, 28, 12, 0, 0, 1, 0, 1, 1, 0]' : 0.405722}
{'[2, 0, 5, 0, 4, 4, 0, 1, 0, 28, 12, 0, 0, 1, 0, 1, 1, 0]' : 0.371693}
{'[2, 0, 5, 0, 4, 4, 0, 1, 0, 28, 12, 0, 0, 1, 0, 1, 1, 0]' : 0.383763}
{'[2, 0, 5, 0, 4, 4, 0, 1, 0, 28, 12, 0, 0, 1, 0, 1, 1, 0]' : 0.375796}
{'[2, 0, 5, 0, 4, 4, 0, 1, 0, 28, 12, 0, 0, 1, 0, 1, 1, 0]' : 0.386409}
{'[2, 0, 5, 0, 4, 4, 0, 1, 0, 28, 12, 0, 0, 1, 0, 1, 1, 0]' : 0.387596}
{'[2, 0, 5, 0, 4, 4, 0, 1, 0, 28, 12, 0, 0, 1, 0, 1, 1, 0]' : 0.376021}
{'[2, 0, 5, 0, 4, 4, 0, 1, 0, 28, 12, 0, 0, 1, 0, 1, 1, 0]' : 0.363936}
{'[2, 0, 5, 0, 4, 4, 0, 1, 0, 28, 12, 0, 0, 1, 0, 1, 1, 0]' : 0.366657}

out:
 ["{'[2, 0, 5, 0, 4, 4, 0, 1, 0, 28, 12, 0, 0, 1, 0, 1, 1, 0]' : 0.342336}", "{'[2, 0, 5, 0, 4, 4, 0, 1, 0, 28, 12, 0, 0, 1, 0, 1, 1, 0]' : 0.371428}", "{'[2, 0, 5, 0, 4, 4, 0, 1, 0, 28, 12, 0, 0, 1, 0, 1, 1, 0]' : 0.402064}", "{'[2, 0, 5, 0, 4, 4, 0, 1, 0, 28, 12, 0, 0, 1, 0, 1, 1, 0]' : 0.370771}", "{'[2, 0, 5, 0, 4, 4, 0, 1, 0, 28, 12, 0, 0, 1, 0, 1, 1, 0]' : 0.391544}", "{'[2, 0, 5, 0, 4, 4, 0, 1, 0, 28, 12, 0, 0, 1, 0, 1, 1, 0]' : 0.401213}", "{'[2, 0, 5, 0, 4, 4, 0, 1, 0, 28, 12, 0, 0, 1, 0, 1, 1, 0]' : 0.394279}", "{'[2, 0, 5, 0, 4, 4, 0, 1, 0, 28, 12, 0, 0, 1, 0, 1, 1, 0]' : 0.387698}", "{'[2, 0, 5, 0, 4, 4, 0, 1, 0, 28, 12, 0, 0, 1, 0, 1, 1, 0]' : 0.381235}", "{'[2, 0, 5, 0, 4, 4, 0, 1, 0, 28, 12, 0, 0, 1, 0, 1, 1, 0]' : 0.374549}", "{'[2, 0, 5, 0, 4, 4, 0, 1, 0, 28, 12, 0, 0, 1, 0, 1, 1, 0]' : 0.38829}", "{'[2, 0, 5, 0, 4, 4, 0, 1, 0, 28, 12, 0, 0, 1, 0, 1, 1, 0]' : 0.373243}", "{'[2, 0, 5, 0, 4, 4, 0, 1, 0, 28, 12, 0, 0, 1, 0, 1, 1, 0]' : 0.374}", "{'[2, 0, 5, 0, 4, 4, 0, 1, 0, 28, 12, 0, 0, 1, 0, 1, 1, 0]' : 0.36561}", "{'[2, 0, 5, 0, 4, 4, 0, 1, 0, 28, 12, 0, 0, 1, 0, 1, 1, 0]' : 0.370181}", "{'[2, 0, 5, 0, 4, 4, 0, 1, 0, 28, 12, 0, 0, 1, 0, 1, 1, 0]' : 0.387655}", "{'[2, 0, 5, 0, 4, 4, 0, 1, 0, 28, 12, 0, 0, 1, 0, 1, 1, 0]' : 0.378526}", "{'[2, 0, 5, 0, 4, 4, 0, 1, 0, 28, 12, 0, 0, 1, 0, 1, 1, 0]' : 0.391565}", "{'[2, 0, 5, 0, 4, 4, 0, 1, 0, 28, 12, 0, 0, 1, 0, 1, 1, 0]' : 0.383839}", "{'[2, 0, 5, 0, 4, 4, 0, 1, 0, 28, 12, 0, 0, 1, 0, 1, 1, 0]' : 0.395824}", "{'[2, 0, 5, 0, 4, 4, 0, 1, 0, 28, 12, 0, 0, 1, 0, 1, 1, 0]' : 0.387115}", "{'[2, 0, 5, 0, 4, 4, 0, 1, 0, 28, 12, 0, 0, 1, 0, 1, 1, 0]' : 0.405722}", "{'[2, 0, 5, 0, 4, 4, 0, 1, 0, 28, 12, 0, 0, 1, 0, 1, 1, 0]' : 0.371693}", "{'[2, 0, 5, 0, 4, 4, 0, 1, 0, 28, 12, 0, 0, 1, 0, 1, 1, 0]' : 0.383763}", "{'[2, 0, 5, 0, 4, 4, 0, 1, 0, 28, 12, 0, 0, 1, 0, 1, 1, 0]' : 0.375796}", "{'[2, 0, 5, 0, 4, 4, 0, 1, 0, 28, 12, 0, 0, 1, 0, 1, 1, 0]' : 0.386409}", "{'[2, 0, 5, 0, 4, 4, 0, 1, 0, 28, 12, 0, 0, 1, 0, 1, 1, 0]' : 0.387596}", "{'[2, 0, 5, 0, 4, 4, 0, 1, 0, 28, 12, 0, 0, 1, 0, 1, 1, 0]' : 0.376021}", "{'[2, 0, 5, 0, 4, 4, 0, 1, 0, 28, 12, 0, 0, 1, 0, 1, 1, 0]' : 0.363936}", "{'[2, 0, 5, 0, 4, 4, 0, 1, 0, 28, 12, 0, 0, 1, 0, 1, 1, 0]' : 0.366657}"]
returning from 'run': {'[2, 0, 5, 0, 4, 4, 0, 1, 0, 28, 12, 0, 0, 1, 0, 1, 1, 0]': ([0.342336, 0.371428, 0.402064, 0.370771, 0.391544, 0.401213, 0.394279, 0.387698, 0.381235, 0.374549, 0.38829, 0.373243, 0.374, 0.36561, 0.370181, 0.387655, 0.378526, 0.391565, 0.383839, 0.395824, 0.387115, 0.405722, 0.371693, 0.383763, 0.375796, 0.386409, 0.387596, 0.376021, 0.363936, 0.366657], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 0, 5, 0, 4, 4, 0, 1, 0, 28, 12, 0, 0, 1, 0, 1, 1, 0]': ([0.342336, 0.371428, 0.402064, 0.370771, 0.391544, 0.401213, 0.394279, 0.387698, 0.381235, 0.374549, 0.38829, 0.373243, 0.374, 0.36561, 0.370181, 0.387655, 0.378526, 0.391565, 0.383839, 0.395824, 0.387115, 0.405722, 0.371693, 0.383763, 0.375796, 0.386409, 0.387596, 0.376021, 0.363936, 0.366657], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	6
        Additions: 		241
        Multiplications: 	80
        Divisions: 		0
        Logical: 		0
        Reads: 			502
        Writes: 		93
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest40.exe __orio_perftest40.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest40.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest40.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest40.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest40.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	4
        Additions: 		3665
        Multiplications: 	954
        Divisions: 		0
        Logical: 		0
        Reads: 			5527
        Writes: 		537
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest41.exe __orio_perftest41.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest41.exe  
Program Test Output: 
{'[0, 6, 6, 2, 0, 0, 0, 1, 10, 0, 20, 29, 1, 0, 0, 0, 0, 0]' : 0.171587}
{'[0, 6, 6, 2, 0, 0, 0, 1, 10, 0, 20, 29, 1, 0, 0, 0, 0, 0]' : 0.171563}
{'[0, 6, 6, 2, 0, 0, 0, 1, 10, 0, 20, 29, 1, 0, 0, 0, 0, 0]' : 0.191622}
{'[0, 6, 6, 2, 0, 0, 0, 1, 10, 0, 20, 29, 1, 0, 0, 0, 0, 0]' : 0.207144}
{'[0, 6, 6, 2, 0, 0, 0, 1, 10, 0, 20, 29, 1, 0, 0, 0, 0, 0]' : 0.187072}
{'[0, 6, 6, 2, 0, 0, 0, 1, 10, 0, 20, 29, 1, 0, 0, 0, 0, 0]' : 0.185649}
{'[0, 6, 6, 2, 0, 0, 0, 1, 10, 0, 20, 29, 1, 0, 0, 0, 0, 0]' : 0.186508}
{'[0, 6, 6, 2, 0, 0, 0, 1, 10, 0, 20, 29, 1, 0, 0, 0, 0, 0]' : 0.185151}
{'[0, 6, 6, 2, 0, 0, 0, 1, 10, 0, 20, 29, 1, 0, 0, 0, 0, 0]' : 0.18663}
{'[0, 6, 6, 2, 0, 0, 0, 1, 10, 0, 20, 29, 1, 0, 0, 0, 0, 0]' : 0.178673}
{'[0, 6, 6, 2, 0, 0, 0, 1, 10, 0, 20, 29, 1, 0, 0, 0, 0, 0]' : 0.177956}
{'[0, 6, 6, 2, 0, 0, 0, 1, 10, 0, 20, 29, 1, 0, 0, 0, 0, 0]' : 0.178863}
{'[0, 6, 6, 2, 0, 0, 0, 1, 10, 0, 20, 29, 1, 0, 0, 0, 0, 0]' : 0.177162}
{'[0, 6, 6, 2, 0, 0, 0, 1, 10, 0, 20, 29, 1, 0, 0, 0, 0, 0]' : 0.178891}
{'[0, 6, 6, 2, 0, 0, 0, 1, 10, 0, 20, 29, 1, 0, 0, 0, 0, 0]' : 0.163447}
{'[0, 6, 6, 2, 0, 0, 0, 1, 10, 0, 20, 29, 1, 0, 0, 0, 0, 0]' : 0.146592}
{'[0, 6, 6, 2, 0, 0, 0, 1, 10, 0, 20, 29, 1, 0, 0, 0, 0, 0]' : 0.148905}
{'[0, 6, 6, 2, 0, 0, 0, 1, 10, 0, 20, 29, 1, 0, 0, 0, 0, 0]' : 0.174606}
{'[0, 6, 6, 2, 0, 0, 0, 1, 10, 0, 20, 29, 1, 0, 0, 0, 0, 0]' : 0.179211}
{'[0, 6, 6, 2, 0, 0, 0, 1, 10, 0, 20, 29, 1, 0, 0, 0, 0, 0]' : 0.178752}
{'[0, 6, 6, 2, 0, 0, 0, 1, 10, 0, 20, 29, 1, 0, 0, 0, 0, 0]' : 0.179254}
{'[0, 6, 6, 2, 0, 0, 0, 1, 10, 0, 20, 29, 1, 0, 0, 0, 0, 0]' : 0.179149}
{'[0, 6, 6, 2, 0, 0, 0, 1, 10, 0, 20, 29, 1, 0, 0, 0, 0, 0]' : 0.178636}
{'[0, 6, 6, 2, 0, 0, 0, 1, 10, 0, 20, 29, 1, 0, 0, 0, 0, 0]' : 0.176994}
{'[0, 6, 6, 2, 0, 0, 0, 1, 10, 0, 20, 29, 1, 0, 0, 0, 0, 0]' : 0.179357}
{'[0, 6, 6, 2, 0, 0, 0, 1, 10, 0, 20, 29, 1, 0, 0, 0, 0, 0]' : 0.178526}
{'[0, 6, 6, 2, 0, 0, 0, 1, 10, 0, 20, 29, 1, 0, 0, 0, 0, 0]' : 0.17662}
{'[0, 6, 6, 2, 0, 0, 0, 1, 10, 0, 20, 29, 1, 0, 0, 0, 0, 0]' : 0.178785}
{'[0, 6, 6, 2, 0, 0, 0, 1, 10, 0, 20, 29, 1, 0, 0, 0, 0, 0]' : 0.180173}
{'[0, 6, 6, 2, 0, 0, 0, 1, 10, 0, 20, 29, 1, 0, 0, 0, 0, 0]' : 0.176678}

out:
 ["{'[0, 6, 6, 2, 0, 0, 0, 1, 10, 0, 20, 29, 1, 0, 0, 0, 0, 0]' : 0.171587}", "{'[0, 6, 6, 2, 0, 0, 0, 1, 10, 0, 20, 29, 1, 0, 0, 0, 0, 0]' : 0.171563}", "{'[0, 6, 6, 2, 0, 0, 0, 1, 10, 0, 20, 29, 1, 0, 0, 0, 0, 0]' : 0.191622}", "{'[0, 6, 6, 2, 0, 0, 0, 1, 10, 0, 20, 29, 1, 0, 0, 0, 0, 0]' : 0.207144}", "{'[0, 6, 6, 2, 0, 0, 0, 1, 10, 0, 20, 29, 1, 0, 0, 0, 0, 0]' : 0.187072}", "{'[0, 6, 6, 2, 0, 0, 0, 1, 10, 0, 20, 29, 1, 0, 0, 0, 0, 0]' : 0.185649}", "{'[0, 6, 6, 2, 0, 0, 0, 1, 10, 0, 20, 29, 1, 0, 0, 0, 0, 0]' : 0.186508}", "{'[0, 6, 6, 2, 0, 0, 0, 1, 10, 0, 20, 29, 1, 0, 0, 0, 0, 0]' : 0.185151}", "{'[0, 6, 6, 2, 0, 0, 0, 1, 10, 0, 20, 29, 1, 0, 0, 0, 0, 0]' : 0.18663}", "{'[0, 6, 6, 2, 0, 0, 0, 1, 10, 0, 20, 29, 1, 0, 0, 0, 0, 0]' : 0.178673}", "{'[0, 6, 6, 2, 0, 0, 0, 1, 10, 0, 20, 29, 1, 0, 0, 0, 0, 0]' : 0.177956}", "{'[0, 6, 6, 2, 0, 0, 0, 1, 10, 0, 20, 29, 1, 0, 0, 0, 0, 0]' : 0.178863}", "{'[0, 6, 6, 2, 0, 0, 0, 1, 10, 0, 20, 29, 1, 0, 0, 0, 0, 0]' : 0.177162}", "{'[0, 6, 6, 2, 0, 0, 0, 1, 10, 0, 20, 29, 1, 0, 0, 0, 0, 0]' : 0.178891}", "{'[0, 6, 6, 2, 0, 0, 0, 1, 10, 0, 20, 29, 1, 0, 0, 0, 0, 0]' : 0.163447}", "{'[0, 6, 6, 2, 0, 0, 0, 1, 10, 0, 20, 29, 1, 0, 0, 0, 0, 0]' : 0.146592}", "{'[0, 6, 6, 2, 0, 0, 0, 1, 10, 0, 20, 29, 1, 0, 0, 0, 0, 0]' : 0.148905}", "{'[0, 6, 6, 2, 0, 0, 0, 1, 10, 0, 20, 29, 1, 0, 0, 0, 0, 0]' : 0.174606}", "{'[0, 6, 6, 2, 0, 0, 0, 1, 10, 0, 20, 29, 1, 0, 0, 0, 0, 0]' : 0.179211}", "{'[0, 6, 6, 2, 0, 0, 0, 1, 10, 0, 20, 29, 1, 0, 0, 0, 0, 0]' : 0.178752}", "{'[0, 6, 6, 2, 0, 0, 0, 1, 10, 0, 20, 29, 1, 0, 0, 0, 0, 0]' : 0.179254}", "{'[0, 6, 6, 2, 0, 0, 0, 1, 10, 0, 20, 29, 1, 0, 0, 0, 0, 0]' : 0.179149}", "{'[0, 6, 6, 2, 0, 0, 0, 1, 10, 0, 20, 29, 1, 0, 0, 0, 0, 0]' : 0.178636}", "{'[0, 6, 6, 2, 0, 0, 0, 1, 10, 0, 20, 29, 1, 0, 0, 0, 0, 0]' : 0.176994}", "{'[0, 6, 6, 2, 0, 0, 0, 1, 10, 0, 20, 29, 1, 0, 0, 0, 0, 0]' : 0.179357}", "{'[0, 6, 6, 2, 0, 0, 0, 1, 10, 0, 20, 29, 1, 0, 0, 0, 0, 0]' : 0.178526}", "{'[0, 6, 6, 2, 0, 0, 0, 1, 10, 0, 20, 29, 1, 0, 0, 0, 0, 0]' : 0.17662}", "{'[0, 6, 6, 2, 0, 0, 0, 1, 10, 0, 20, 29, 1, 0, 0, 0, 0, 0]' : 0.178785}", "{'[0, 6, 6, 2, 0, 0, 0, 1, 10, 0, 20, 29, 1, 0, 0, 0, 0, 0]' : 0.180173}", "{'[0, 6, 6, 2, 0, 0, 0, 1, 10, 0, 20, 29, 1, 0, 0, 0, 0, 0]' : 0.176678}"]
returning from 'run': {'[0, 6, 6, 2, 0, 0, 0, 1, 10, 0, 20, 29, 1, 0, 0, 0, 0, 0]': ([0.171587, 0.171563, 0.191622, 0.207144, 0.187072, 0.185649, 0.186508, 0.185151, 0.18663, 0.178673, 0.177956, 0.178863, 0.177162, 0.178891, 0.163447, 0.146592, 0.148905, 0.174606, 0.179211, 0.178752, 0.179254, 0.179149, 0.178636, 0.176994, 0.179357, 0.178526, 0.17662, 0.178785, 0.180173, 0.176678], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 6, 2, 0, 0, 0, 1, 10, 0, 20, 29, 1, 0, 0, 0, 0, 0]': ([0.171587, 0.171563, 0.191622, 0.207144, 0.187072, 0.185649, 0.186508, 0.185151, 0.18663, 0.178673, 0.177956, 0.178863, 0.177162, 0.178891, 0.163447, 0.146592, 0.148905, 0.174606, 0.179211, 0.178752, 0.179254, 0.179149, 0.178636, 0.176994, 0.179357, 0.178526, 0.17662, 0.178785, 0.180173, 0.176678], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	5
        Additions: 		464
        Multiplications: 	138
        Divisions: 		0
        Logical: 		0
        Reads: 			875
        Writes: 		139
        Comparisons:		15
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest42.exe __orio_perftest42.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest42.exe  
Program Test Output: 
{'[0, 0, 3, 3, 0, 2, 1, 0, 27, 1, 0, 20, 0, 0, 0, 0, 0, 1]' : 0.207155}
{'[0, 0, 3, 3, 0, 2, 1, 0, 27, 1, 0, 20, 0, 0, 0, 0, 0, 1]' : 0.209701}
{'[0, 0, 3, 3, 0, 2, 1, 0, 27, 1, 0, 20, 0, 0, 0, 0, 0, 1]' : 0.207111}
{'[0, 0, 3, 3, 0, 2, 1, 0, 27, 1, 0, 20, 0, 0, 0, 0, 0, 1]' : 0.208146}
{'[0, 0, 3, 3, 0, 2, 1, 0, 27, 1, 0, 20, 0, 0, 0, 0, 0, 1]' : 0.20758}
{'[0, 0, 3, 3, 0, 2, 1, 0, 27, 1, 0, 20, 0, 0, 0, 0, 0, 1]' : 0.20951}
{'[0, 0, 3, 3, 0, 2, 1, 0, 27, 1, 0, 20, 0, 0, 0, 0, 0, 1]' : 0.207639}
{'[0, 0, 3, 3, 0, 2, 1, 0, 27, 1, 0, 20, 0, 0, 0, 0, 0, 1]' : 0.208687}
{'[0, 0, 3, 3, 0, 2, 1, 0, 27, 1, 0, 20, 0, 0, 0, 0, 0, 1]' : 0.204036}
{'[0, 0, 3, 3, 0, 2, 1, 0, 27, 1, 0, 20, 0, 0, 0, 0, 0, 1]' : 0.210686}
{'[0, 0, 3, 3, 0, 2, 1, 0, 27, 1, 0, 20, 0, 0, 0, 0, 0, 1]' : 0.210006}
{'[0, 0, 3, 3, 0, 2, 1, 0, 27, 1, 0, 20, 0, 0, 0, 0, 0, 1]' : 0.207516}
{'[0, 0, 3, 3, 0, 2, 1, 0, 27, 1, 0, 20, 0, 0, 0, 0, 0, 1]' : 0.209182}
{'[0, 0, 3, 3, 0, 2, 1, 0, 27, 1, 0, 20, 0, 0, 0, 0, 0, 1]' : 0.20847}
{'[0, 0, 3, 3, 0, 2, 1, 0, 27, 1, 0, 20, 0, 0, 0, 0, 0, 1]' : 0.209208}
{'[0, 0, 3, 3, 0, 2, 1, 0, 27, 1, 0, 20, 0, 0, 0, 0, 0, 1]' : 0.207604}
{'[0, 0, 3, 3, 0, 2, 1, 0, 27, 1, 0, 20, 0, 0, 0, 0, 0, 1]' : 0.207925}
{'[0, 0, 3, 3, 0, 2, 1, 0, 27, 1, 0, 20, 0, 0, 0, 0, 0, 1]' : 0.208655}
{'[0, 0, 3, 3, 0, 2, 1, 0, 27, 1, 0, 20, 0, 0, 0, 0, 0, 1]' : 0.208204}
{'[0, 0, 3, 3, 0, 2, 1, 0, 27, 1, 0, 20, 0, 0, 0, 0, 0, 1]' : 0.150611}
{'[0, 0, 3, 3, 0, 2, 1, 0, 27, 1, 0, 20, 0, 0, 0, 0, 0, 1]' : 0.137661}
{'[0, 0, 3, 3, 0, 2, 1, 0, 27, 1, 0, 20, 0, 0, 0, 0, 0, 1]' : 0.175275}
{'[0, 0, 3, 3, 0, 2, 1, 0, 27, 1, 0, 20, 0, 0, 0, 0, 0, 1]' : 0.213781}
{'[0, 0, 3, 3, 0, 2, 1, 0, 27, 1, 0, 20, 0, 0, 0, 0, 0, 1]' : 0.21256}
{'[0, 0, 3, 3, 0, 2, 1, 0, 27, 1, 0, 20, 0, 0, 0, 0, 0, 1]' : 0.21112}
{'[0, 0, 3, 3, 0, 2, 1, 0, 27, 1, 0, 20, 0, 0, 0, 0, 0, 1]' : 0.212145}
{'[0, 0, 3, 3, 0, 2, 1, 0, 27, 1, 0, 20, 0, 0, 0, 0, 0, 1]' : 0.211857}
{'[0, 0, 3, 3, 0, 2, 1, 0, 27, 1, 0, 20, 0, 0, 0, 0, 0, 1]' : 0.212303}
{'[0, 0, 3, 3, 0, 2, 1, 0, 27, 1, 0, 20, 0, 0, 0, 0, 0, 1]' : 0.212505}
{'[0, 0, 3, 3, 0, 2, 1, 0, 27, 1, 0, 20, 0, 0, 0, 0, 0, 1]' : 0.211443}

out:
 ["{'[0, 0, 3, 3, 0, 2, 1, 0, 27, 1, 0, 20, 0, 0, 0, 0, 0, 1]' : 0.207155}", "{'[0, 0, 3, 3, 0, 2, 1, 0, 27, 1, 0, 20, 0, 0, 0, 0, 0, 1]' : 0.209701}", "{'[0, 0, 3, 3, 0, 2, 1, 0, 27, 1, 0, 20, 0, 0, 0, 0, 0, 1]' : 0.207111}", "{'[0, 0, 3, 3, 0, 2, 1, 0, 27, 1, 0, 20, 0, 0, 0, 0, 0, 1]' : 0.208146}", "{'[0, 0, 3, 3, 0, 2, 1, 0, 27, 1, 0, 20, 0, 0, 0, 0, 0, 1]' : 0.20758}", "{'[0, 0, 3, 3, 0, 2, 1, 0, 27, 1, 0, 20, 0, 0, 0, 0, 0, 1]' : 0.20951}", "{'[0, 0, 3, 3, 0, 2, 1, 0, 27, 1, 0, 20, 0, 0, 0, 0, 0, 1]' : 0.207639}", "{'[0, 0, 3, 3, 0, 2, 1, 0, 27, 1, 0, 20, 0, 0, 0, 0, 0, 1]' : 0.208687}", "{'[0, 0, 3, 3, 0, 2, 1, 0, 27, 1, 0, 20, 0, 0, 0, 0, 0, 1]' : 0.204036}", "{'[0, 0, 3, 3, 0, 2, 1, 0, 27, 1, 0, 20, 0, 0, 0, 0, 0, 1]' : 0.210686}", "{'[0, 0, 3, 3, 0, 2, 1, 0, 27, 1, 0, 20, 0, 0, 0, 0, 0, 1]' : 0.210006}", "{'[0, 0, 3, 3, 0, 2, 1, 0, 27, 1, 0, 20, 0, 0, 0, 0, 0, 1]' : 0.207516}", "{'[0, 0, 3, 3, 0, 2, 1, 0, 27, 1, 0, 20, 0, 0, 0, 0, 0, 1]' : 0.209182}", "{'[0, 0, 3, 3, 0, 2, 1, 0, 27, 1, 0, 20, 0, 0, 0, 0, 0, 1]' : 0.20847}", "{'[0, 0, 3, 3, 0, 2, 1, 0, 27, 1, 0, 20, 0, 0, 0, 0, 0, 1]' : 0.209208}", "{'[0, 0, 3, 3, 0, 2, 1, 0, 27, 1, 0, 20, 0, 0, 0, 0, 0, 1]' : 0.207604}", "{'[0, 0, 3, 3, 0, 2, 1, 0, 27, 1, 0, 20, 0, 0, 0, 0, 0, 1]' : 0.207925}", "{'[0, 0, 3, 3, 0, 2, 1, 0, 27, 1, 0, 20, 0, 0, 0, 0, 0, 1]' : 0.208655}", "{'[0, 0, 3, 3, 0, 2, 1, 0, 27, 1, 0, 20, 0, 0, 0, 0, 0, 1]' : 0.208204}", "{'[0, 0, 3, 3, 0, 2, 1, 0, 27, 1, 0, 20, 0, 0, 0, 0, 0, 1]' : 0.150611}", "{'[0, 0, 3, 3, 0, 2, 1, 0, 27, 1, 0, 20, 0, 0, 0, 0, 0, 1]' : 0.137661}", "{'[0, 0, 3, 3, 0, 2, 1, 0, 27, 1, 0, 20, 0, 0, 0, 0, 0, 1]' : 0.175275}", "{'[0, 0, 3, 3, 0, 2, 1, 0, 27, 1, 0, 20, 0, 0, 0, 0, 0, 1]' : 0.213781}", "{'[0, 0, 3, 3, 0, 2, 1, 0, 27, 1, 0, 20, 0, 0, 0, 0, 0, 1]' : 0.21256}", "{'[0, 0, 3, 3, 0, 2, 1, 0, 27, 1, 0, 20, 0, 0, 0, 0, 0, 1]' : 0.21112}", "{'[0, 0, 3, 3, 0, 2, 1, 0, 27, 1, 0, 20, 0, 0, 0, 0, 0, 1]' : 0.212145}", "{'[0, 0, 3, 3, 0, 2, 1, 0, 27, 1, 0, 20, 0, 0, 0, 0, 0, 1]' : 0.211857}", "{'[0, 0, 3, 3, 0, 2, 1, 0, 27, 1, 0, 20, 0, 0, 0, 0, 0, 1]' : 0.212303}", "{'[0, 0, 3, 3, 0, 2, 1, 0, 27, 1, 0, 20, 0, 0, 0, 0, 0, 1]' : 0.212505}", "{'[0, 0, 3, 3, 0, 2, 1, 0, 27, 1, 0, 20, 0, 0, 0, 0, 0, 1]' : 0.211443}"]
returning from 'run': {'[0, 0, 3, 3, 0, 2, 1, 0, 27, 1, 0, 20, 0, 0, 0, 0, 0, 1]': ([0.207155, 0.209701, 0.207111, 0.208146, 0.20758, 0.20951, 0.207639, 0.208687, 0.204036, 0.210686, 0.210006, 0.207516, 0.209182, 0.20847, 0.209208, 0.207604, 0.207925, 0.208655, 0.208204, 0.150611, 0.137661, 0.175275, 0.213781, 0.21256, 0.21112, 0.212145, 0.211857, 0.212303, 0.212505, 0.211443], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 3, 3, 0, 2, 1, 0, 27, 1, 0, 20, 0, 0, 0, 0, 0, 1]': ([0.207155, 0.209701, 0.207111, 0.208146, 0.20758, 0.20951, 0.207639, 0.208687, 0.204036, 0.210686, 0.210006, 0.207516, 0.209182, 0.20847, 0.209208, 0.207604, 0.207925, 0.208655, 0.208204, 0.150611, 0.137661, 0.175275, 0.213781, 0.21256, 0.21112, 0.212145, 0.211857, 0.212303, 0.212505, 0.211443], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	134
        Max loop nest depth: 	6
        Additions: 		5046
        Multiplications: 	1190
        Divisions: 		0
        Logical: 		0
        Reads: 			8126
        Writes: 		1068
        Comparisons:		134
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest43.exe __orio_perftest43.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest43.exe  
Program Test Output: 
{'[6, 0, 3, 6, 6, 4, 0, 1, 29, 25, 0, 6, 1, 1, 0, 0, 0, 1]' : 0.161625}
{'[6, 0, 3, 6, 6, 4, 0, 1, 29, 25, 0, 6, 1, 1, 0, 0, 0, 1]' : 0.15877}
{'[6, 0, 3, 6, 6, 4, 0, 1, 29, 25, 0, 6, 1, 1, 0, 0, 0, 1]' : 0.159169}
{'[6, 0, 3, 6, 6, 4, 0, 1, 29, 25, 0, 6, 1, 1, 0, 0, 0, 1]' : 0.160111}
{'[6, 0, 3, 6, 6, 4, 0, 1, 29, 25, 0, 6, 1, 1, 0, 0, 0, 1]' : 0.159219}
{'[6, 0, 3, 6, 6, 4, 0, 1, 29, 25, 0, 6, 1, 1, 0, 0, 0, 1]' : 0.161443}
{'[6, 0, 3, 6, 6, 4, 0, 1, 29, 25, 0, 6, 1, 1, 0, 0, 0, 1]' : 0.161379}
{'[6, 0, 3, 6, 6, 4, 0, 1, 29, 25, 0, 6, 1, 1, 0, 0, 0, 1]' : 0.15896}
{'[6, 0, 3, 6, 6, 4, 0, 1, 29, 25, 0, 6, 1, 1, 0, 0, 0, 1]' : 0.160307}
{'[6, 0, 3, 6, 6, 4, 0, 1, 29, 25, 0, 6, 1, 1, 0, 0, 0, 1]' : 0.159365}
{'[6, 0, 3, 6, 6, 4, 0, 1, 29, 25, 0, 6, 1, 1, 0, 0, 0, 1]' : 0.160438}
{'[6, 0, 3, 6, 6, 4, 0, 1, 29, 25, 0, 6, 1, 1, 0, 0, 0, 1]' : 0.151247}
{'[6, 0, 3, 6, 6, 4, 0, 1, 29, 25, 0, 6, 1, 1, 0, 0, 0, 1]' : 0.160238}
{'[6, 0, 3, 6, 6, 4, 0, 1, 29, 25, 0, 6, 1, 1, 0, 0, 0, 1]' : 0.159432}
{'[6, 0, 3, 6, 6, 4, 0, 1, 29, 25, 0, 6, 1, 1, 0, 0, 0, 1]' : 0.161146}
{'[6, 0, 3, 6, 6, 4, 0, 1, 29, 25, 0, 6, 1, 1, 0, 0, 0, 1]' : 0.159002}
{'[6, 0, 3, 6, 6, 4, 0, 1, 29, 25, 0, 6, 1, 1, 0, 0, 0, 1]' : 0.159258}
{'[6, 0, 3, 6, 6, 4, 0, 1, 29, 25, 0, 6, 1, 1, 0, 0, 0, 1]' : 0.159744}
{'[6, 0, 3, 6, 6, 4, 0, 1, 29, 25, 0, 6, 1, 1, 0, 0, 0, 1]' : 0.159099}
{'[6, 0, 3, 6, 6, 4, 0, 1, 29, 25, 0, 6, 1, 1, 0, 0, 0, 1]' : 0.158838}
{'[6, 0, 3, 6, 6, 4, 0, 1, 29, 25, 0, 6, 1, 1, 0, 0, 0, 1]' : 0.1597}
{'[6, 0, 3, 6, 6, 4, 0, 1, 29, 25, 0, 6, 1, 1, 0, 0, 0, 1]' : 0.158079}
{'[6, 0, 3, 6, 6, 4, 0, 1, 29, 25, 0, 6, 1, 1, 0, 0, 0, 1]' : 0.160347}
{'[6, 0, 3, 6, 6, 4, 0, 1, 29, 25, 0, 6, 1, 1, 0, 0, 0, 1]' : 0.157408}
{'[6, 0, 3, 6, 6, 4, 0, 1, 29, 25, 0, 6, 1, 1, 0, 0, 0, 1]' : 0.158554}
{'[6, 0, 3, 6, 6, 4, 0, 1, 29, 25, 0, 6, 1, 1, 0, 0, 0, 1]' : 0.15781}
{'[6, 0, 3, 6, 6, 4, 0, 1, 29, 25, 0, 6, 1, 1, 0, 0, 0, 1]' : 0.158431}
{'[6, 0, 3, 6, 6, 4, 0, 1, 29, 25, 0, 6, 1, 1, 0, 0, 0, 1]' : 0.159593}
{'[6, 0, 3, 6, 6, 4, 0, 1, 29, 25, 0, 6, 1, 1, 0, 0, 0, 1]' : 0.158206}
{'[6, 0, 3, 6, 6, 4, 0, 1, 29, 25, 0, 6, 1, 1, 0, 0, 0, 1]' : 0.166561}

out:
 ["{'[6, 0, 3, 6, 6, 4, 0, 1, 29, 25, 0, 6, 1, 1, 0, 0, 0, 1]' : 0.161625}", "{'[6, 0, 3, 6, 6, 4, 0, 1, 29, 25, 0, 6, 1, 1, 0, 0, 0, 1]' : 0.15877}", "{'[6, 0, 3, 6, 6, 4, 0, 1, 29, 25, 0, 6, 1, 1, 0, 0, 0, 1]' : 0.159169}", "{'[6, 0, 3, 6, 6, 4, 0, 1, 29, 25, 0, 6, 1, 1, 0, 0, 0, 1]' : 0.160111}", "{'[6, 0, 3, 6, 6, 4, 0, 1, 29, 25, 0, 6, 1, 1, 0, 0, 0, 1]' : 0.159219}", "{'[6, 0, 3, 6, 6, 4, 0, 1, 29, 25, 0, 6, 1, 1, 0, 0, 0, 1]' : 0.161443}", "{'[6, 0, 3, 6, 6, 4, 0, 1, 29, 25, 0, 6, 1, 1, 0, 0, 0, 1]' : 0.161379}", "{'[6, 0, 3, 6, 6, 4, 0, 1, 29, 25, 0, 6, 1, 1, 0, 0, 0, 1]' : 0.15896}", "{'[6, 0, 3, 6, 6, 4, 0, 1, 29, 25, 0, 6, 1, 1, 0, 0, 0, 1]' : 0.160307}", "{'[6, 0, 3, 6, 6, 4, 0, 1, 29, 25, 0, 6, 1, 1, 0, 0, 0, 1]' : 0.159365}", "{'[6, 0, 3, 6, 6, 4, 0, 1, 29, 25, 0, 6, 1, 1, 0, 0, 0, 1]' : 0.160438}", "{'[6, 0, 3, 6, 6, 4, 0, 1, 29, 25, 0, 6, 1, 1, 0, 0, 0, 1]' : 0.151247}", "{'[6, 0, 3, 6, 6, 4, 0, 1, 29, 25, 0, 6, 1, 1, 0, 0, 0, 1]' : 0.160238}", "{'[6, 0, 3, 6, 6, 4, 0, 1, 29, 25, 0, 6, 1, 1, 0, 0, 0, 1]' : 0.159432}", "{'[6, 0, 3, 6, 6, 4, 0, 1, 29, 25, 0, 6, 1, 1, 0, 0, 0, 1]' : 0.161146}", "{'[6, 0, 3, 6, 6, 4, 0, 1, 29, 25, 0, 6, 1, 1, 0, 0, 0, 1]' : 0.159002}", "{'[6, 0, 3, 6, 6, 4, 0, 1, 29, 25, 0, 6, 1, 1, 0, 0, 0, 1]' : 0.159258}", "{'[6, 0, 3, 6, 6, 4, 0, 1, 29, 25, 0, 6, 1, 1, 0, 0, 0, 1]' : 0.159744}", "{'[6, 0, 3, 6, 6, 4, 0, 1, 29, 25, 0, 6, 1, 1, 0, 0, 0, 1]' : 0.159099}", "{'[6, 0, 3, 6, 6, 4, 0, 1, 29, 25, 0, 6, 1, 1, 0, 0, 0, 1]' : 0.158838}", "{'[6, 0, 3, 6, 6, 4, 0, 1, 29, 25, 0, 6, 1, 1, 0, 0, 0, 1]' : 0.1597}", "{'[6, 0, 3, 6, 6, 4, 0, 1, 29, 25, 0, 6, 1, 1, 0, 0, 0, 1]' : 0.158079}", "{'[6, 0, 3, 6, 6, 4, 0, 1, 29, 25, 0, 6, 1, 1, 0, 0, 0, 1]' : 0.160347}", "{'[6, 0, 3, 6, 6, 4, 0, 1, 29, 25, 0, 6, 1, 1, 0, 0, 0, 1]' : 0.157408}", "{'[6, 0, 3, 6, 6, 4, 0, 1, 29, 25, 0, 6, 1, 1, 0, 0, 0, 1]' : 0.158554}", "{'[6, 0, 3, 6, 6, 4, 0, 1, 29, 25, 0, 6, 1, 1, 0, 0, 0, 1]' : 0.15781}", "{'[6, 0, 3, 6, 6, 4, 0, 1, 29, 25, 0, 6, 1, 1, 0, 0, 0, 1]' : 0.158431}", "{'[6, 0, 3, 6, 6, 4, 0, 1, 29, 25, 0, 6, 1, 1, 0, 0, 0, 1]' : 0.159593}", "{'[6, 0, 3, 6, 6, 4, 0, 1, 29, 25, 0, 6, 1, 1, 0, 0, 0, 1]' : 0.158206}", "{'[6, 0, 3, 6, 6, 4, 0, 1, 29, 25, 0, 6, 1, 1, 0, 0, 0, 1]' : 0.166561}"]
returning from 'run': {'[6, 0, 3, 6, 6, 4, 0, 1, 29, 25, 0, 6, 1, 1, 0, 0, 0, 1]': ([0.161625, 0.15877, 0.159169, 0.160111, 0.159219, 0.161443, 0.161379, 0.15896, 0.160307, 0.159365, 0.160438, 0.151247, 0.160238, 0.159432, 0.161146, 0.159002, 0.159258, 0.159744, 0.159099, 0.158838, 0.1597, 0.158079, 0.160347, 0.157408, 0.158554, 0.15781, 0.158431, 0.159593, 0.158206, 0.166561], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 3, 6, 6, 4, 0, 1, 29, 25, 0, 6, 1, 1, 0, 0, 0, 1]': ([0.161625, 0.15877, 0.159169, 0.160111, 0.159219, 0.161443, 0.161379, 0.15896, 0.160307, 0.159365, 0.160438, 0.151247, 0.160238, 0.159432, 0.161146, 0.159002, 0.159258, 0.159744, 0.159099, 0.158838, 0.1597, 0.158079, 0.160347, 0.157408, 0.158554, 0.15781, 0.158431, 0.159593, 0.158206, 0.166561], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	3
        Additions: 		2340
        Multiplications: 	1116
        Divisions: 		0
        Logical: 		0
        Reads: 			4609
        Writes: 		788
        Comparisons:		16
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest44.exe __orio_perftest44.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest44.exe  
Program Test Output: 
{'[0, 0, 0, 0, 2, 2, 0, 0, 8, 7, 27, 0, 0, 0, 2, 1, 0, 0]' : 0.206242}
{'[0, 0, 0, 0, 2, 2, 0, 0, 8, 7, 27, 0, 0, 0, 2, 1, 0, 0]' : 0.205798}
{'[0, 0, 0, 0, 2, 2, 0, 0, 8, 7, 27, 0, 0, 0, 2, 1, 0, 0]' : 0.215892}
{'[0, 0, 0, 0, 2, 2, 0, 0, 8, 7, 27, 0, 0, 0, 2, 1, 0, 0]' : 0.213226}
{'[0, 0, 0, 0, 2, 2, 0, 0, 8, 7, 27, 0, 0, 0, 2, 1, 0, 0]' : 0.209431}
{'[0, 0, 0, 0, 2, 2, 0, 0, 8, 7, 27, 0, 0, 0, 2, 1, 0, 0]' : 0.219235}
{'[0, 0, 0, 0, 2, 2, 0, 0, 8, 7, 27, 0, 0, 0, 2, 1, 0, 0]' : 0.214139}
{'[0, 0, 0, 0, 2, 2, 0, 0, 8, 7, 27, 0, 0, 0, 2, 1, 0, 0]' : 0.213614}
{'[0, 0, 0, 0, 2, 2, 0, 0, 8, 7, 27, 0, 0, 0, 2, 1, 0, 0]' : 0.212389}
{'[0, 0, 0, 0, 2, 2, 0, 0, 8, 7, 27, 0, 0, 0, 2, 1, 0, 0]' : 0.213937}
{'[0, 0, 0, 0, 2, 2, 0, 0, 8, 7, 27, 0, 0, 0, 2, 1, 0, 0]' : 0.216296}
{'[0, 0, 0, 0, 2, 2, 0, 0, 8, 7, 27, 0, 0, 0, 2, 1, 0, 0]' : 0.211359}
{'[0, 0, 0, 0, 2, 2, 0, 0, 8, 7, 27, 0, 0, 0, 2, 1, 0, 0]' : 0.212926}
{'[0, 0, 0, 0, 2, 2, 0, 0, 8, 7, 27, 0, 0, 0, 2, 1, 0, 0]' : 0.228896}
{'[0, 0, 0, 0, 2, 2, 0, 0, 8, 7, 27, 0, 0, 0, 2, 1, 0, 0]' : 0.208451}
{'[0, 0, 0, 0, 2, 2, 0, 0, 8, 7, 27, 0, 0, 0, 2, 1, 0, 0]' : 0.210659}
{'[0, 0, 0, 0, 2, 2, 0, 0, 8, 7, 27, 0, 0, 0, 2, 1, 0, 0]' : 0.20827}
{'[0, 0, 0, 0, 2, 2, 0, 0, 8, 7, 27, 0, 0, 0, 2, 1, 0, 0]' : 0.210102}
{'[0, 0, 0, 0, 2, 2, 0, 0, 8, 7, 27, 0, 0, 0, 2, 1, 0, 0]' : 0.210371}
{'[0, 0, 0, 0, 2, 2, 0, 0, 8, 7, 27, 0, 0, 0, 2, 1, 0, 0]' : 0.223051}
{'[0, 0, 0, 0, 2, 2, 0, 0, 8, 7, 27, 0, 0, 0, 2, 1, 0, 0]' : 0.215805}
{'[0, 0, 0, 0, 2, 2, 0, 0, 8, 7, 27, 0, 0, 0, 2, 1, 0, 0]' : 0.211959}
{'[0, 0, 0, 0, 2, 2, 0, 0, 8, 7, 27, 0, 0, 0, 2, 1, 0, 0]' : 0.216058}
{'[0, 0, 0, 0, 2, 2, 0, 0, 8, 7, 27, 0, 0, 0, 2, 1, 0, 0]' : 0.213442}
{'[0, 0, 0, 0, 2, 2, 0, 0, 8, 7, 27, 0, 0, 0, 2, 1, 0, 0]' : 0.212998}
{'[0, 0, 0, 0, 2, 2, 0, 0, 8, 7, 27, 0, 0, 0, 2, 1, 0, 0]' : 0.216456}
{'[0, 0, 0, 0, 2, 2, 0, 0, 8, 7, 27, 0, 0, 0, 2, 1, 0, 0]' : 0.223255}
{'[0, 0, 0, 0, 2, 2, 0, 0, 8, 7, 27, 0, 0, 0, 2, 1, 0, 0]' : 0.211691}
{'[0, 0, 0, 0, 2, 2, 0, 0, 8, 7, 27, 0, 0, 0, 2, 1, 0, 0]' : 0.229809}
{'[0, 0, 0, 0, 2, 2, 0, 0, 8, 7, 27, 0, 0, 0, 2, 1, 0, 0]' : 0.210206}

out:
 ["{'[0, 0, 0, 0, 2, 2, 0, 0, 8, 7, 27, 0, 0, 0, 2, 1, 0, 0]' : 0.206242}", "{'[0, 0, 0, 0, 2, 2, 0, 0, 8, 7, 27, 0, 0, 0, 2, 1, 0, 0]' : 0.205798}", "{'[0, 0, 0, 0, 2, 2, 0, 0, 8, 7, 27, 0, 0, 0, 2, 1, 0, 0]' : 0.215892}", "{'[0, 0, 0, 0, 2, 2, 0, 0, 8, 7, 27, 0, 0, 0, 2, 1, 0, 0]' : 0.213226}", "{'[0, 0, 0, 0, 2, 2, 0, 0, 8, 7, 27, 0, 0, 0, 2, 1, 0, 0]' : 0.209431}", "{'[0, 0, 0, 0, 2, 2, 0, 0, 8, 7, 27, 0, 0, 0, 2, 1, 0, 0]' : 0.219235}", "{'[0, 0, 0, 0, 2, 2, 0, 0, 8, 7, 27, 0, 0, 0, 2, 1, 0, 0]' : 0.214139}", "{'[0, 0, 0, 0, 2, 2, 0, 0, 8, 7, 27, 0, 0, 0, 2, 1, 0, 0]' : 0.213614}", "{'[0, 0, 0, 0, 2, 2, 0, 0, 8, 7, 27, 0, 0, 0, 2, 1, 0, 0]' : 0.212389}", "{'[0, 0, 0, 0, 2, 2, 0, 0, 8, 7, 27, 0, 0, 0, 2, 1, 0, 0]' : 0.213937}", "{'[0, 0, 0, 0, 2, 2, 0, 0, 8, 7, 27, 0, 0, 0, 2, 1, 0, 0]' : 0.216296}", "{'[0, 0, 0, 0, 2, 2, 0, 0, 8, 7, 27, 0, 0, 0, 2, 1, 0, 0]' : 0.211359}", "{'[0, 0, 0, 0, 2, 2, 0, 0, 8, 7, 27, 0, 0, 0, 2, 1, 0, 0]' : 0.212926}", "{'[0, 0, 0, 0, 2, 2, 0, 0, 8, 7, 27, 0, 0, 0, 2, 1, 0, 0]' : 0.228896}", "{'[0, 0, 0, 0, 2, 2, 0, 0, 8, 7, 27, 0, 0, 0, 2, 1, 0, 0]' : 0.208451}", "{'[0, 0, 0, 0, 2, 2, 0, 0, 8, 7, 27, 0, 0, 0, 2, 1, 0, 0]' : 0.210659}", "{'[0, 0, 0, 0, 2, 2, 0, 0, 8, 7, 27, 0, 0, 0, 2, 1, 0, 0]' : 0.20827}", "{'[0, 0, 0, 0, 2, 2, 0, 0, 8, 7, 27, 0, 0, 0, 2, 1, 0, 0]' : 0.210102}", "{'[0, 0, 0, 0, 2, 2, 0, 0, 8, 7, 27, 0, 0, 0, 2, 1, 0, 0]' : 0.210371}", "{'[0, 0, 0, 0, 2, 2, 0, 0, 8, 7, 27, 0, 0, 0, 2, 1, 0, 0]' : 0.223051}", "{'[0, 0, 0, 0, 2, 2, 0, 0, 8, 7, 27, 0, 0, 0, 2, 1, 0, 0]' : 0.215805}", "{'[0, 0, 0, 0, 2, 2, 0, 0, 8, 7, 27, 0, 0, 0, 2, 1, 0, 0]' : 0.211959}", "{'[0, 0, 0, 0, 2, 2, 0, 0, 8, 7, 27, 0, 0, 0, 2, 1, 0, 0]' : 0.216058}", "{'[0, 0, 0, 0, 2, 2, 0, 0, 8, 7, 27, 0, 0, 0, 2, 1, 0, 0]' : 0.213442}", "{'[0, 0, 0, 0, 2, 2, 0, 0, 8, 7, 27, 0, 0, 0, 2, 1, 0, 0]' : 0.212998}", "{'[0, 0, 0, 0, 2, 2, 0, 0, 8, 7, 27, 0, 0, 0, 2, 1, 0, 0]' : 0.216456}", "{'[0, 0, 0, 0, 2, 2, 0, 0, 8, 7, 27, 0, 0, 0, 2, 1, 0, 0]' : 0.223255}", "{'[0, 0, 0, 0, 2, 2, 0, 0, 8, 7, 27, 0, 0, 0, 2, 1, 0, 0]' : 0.211691}", "{'[0, 0, 0, 0, 2, 2, 0, 0, 8, 7, 27, 0, 0, 0, 2, 1, 0, 0]' : 0.229809}", "{'[0, 0, 0, 0, 2, 2, 0, 0, 8, 7, 27, 0, 0, 0, 2, 1, 0, 0]' : 0.210206}"]
returning from 'run': {'[0, 0, 0, 0, 2, 2, 0, 0, 8, 7, 27, 0, 0, 0, 2, 1, 0, 0]': ([0.206242, 0.205798, 0.215892, 0.213226, 0.209431, 0.219235, 0.214139, 0.213614, 0.212389, 0.213937, 0.216296, 0.211359, 0.212926, 0.228896, 0.208451, 0.210659, 0.20827, 0.210102, 0.210371, 0.223051, 0.215805, 0.211959, 0.216058, 0.213442, 0.212998, 0.216456, 0.223255, 0.211691, 0.229809, 0.210206], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 0, 0, 2, 2, 0, 0, 8, 7, 27, 0, 0, 0, 2, 1, 0, 0]': ([0.206242, 0.205798, 0.215892, 0.213226, 0.209431, 0.219235, 0.214139, 0.213614, 0.212389, 0.213937, 0.216296, 0.211359, 0.212926, 0.228896, 0.208451, 0.210659, 0.20827, 0.210102, 0.210371, 0.223051, 0.215805, 0.211959, 0.216058, 0.213442, 0.212998, 0.216456, 0.223255, 0.211691, 0.229809, 0.210206], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	5
        Additions: 		238
        Multiplications: 	72
        Divisions: 		0
        Logical: 		0
        Reads: 			501
        Writes: 		92
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest45.exe __orio_perftest45.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest45.exe  
Program Test Output: 
{'[5, 6, 3, 0, 0, 4, 0, 0, 28, 0, 0, 1, 0, 0, 2, 0, 1, 0]' : 0.436548}
{'[5, 6, 3, 0, 0, 4, 0, 0, 28, 0, 0, 1, 0, 0, 2, 0, 1, 0]' : 0.435761}
{'[5, 6, 3, 0, 0, 4, 0, 0, 28, 0, 0, 1, 0, 0, 2, 0, 1, 0]' : 0.446492}
{'[5, 6, 3, 0, 0, 4, 0, 0, 28, 0, 0, 1, 0, 0, 2, 0, 1, 0]' : 0.453237}
{'[5, 6, 3, 0, 0, 4, 0, 0, 28, 0, 0, 1, 0, 0, 2, 0, 1, 0]' : 0.454592}
{'[5, 6, 3, 0, 0, 4, 0, 0, 28, 0, 0, 1, 0, 0, 2, 0, 1, 0]' : 0.436103}
{'[5, 6, 3, 0, 0, 4, 0, 0, 28, 0, 0, 1, 0, 0, 2, 0, 1, 0]' : 0.438448}
{'[5, 6, 3, 0, 0, 4, 0, 0, 28, 0, 0, 1, 0, 0, 2, 0, 1, 0]' : 0.446669}
{'[5, 6, 3, 0, 0, 4, 0, 0, 28, 0, 0, 1, 0, 0, 2, 0, 1, 0]' : 0.450691}
{'[5, 6, 3, 0, 0, 4, 0, 0, 28, 0, 0, 1, 0, 0, 2, 0, 1, 0]' : 0.440255}
{'[5, 6, 3, 0, 0, 4, 0, 0, 28, 0, 0, 1, 0, 0, 2, 0, 1, 0]' : 0.440455}
{'[5, 6, 3, 0, 0, 4, 0, 0, 28, 0, 0, 1, 0, 0, 2, 0, 1, 0]' : 0.437395}
{'[5, 6, 3, 0, 0, 4, 0, 0, 28, 0, 0, 1, 0, 0, 2, 0, 1, 0]' : 0.436095}
{'[5, 6, 3, 0, 0, 4, 0, 0, 28, 0, 0, 1, 0, 0, 2, 0, 1, 0]' : 0.443369}
{'[5, 6, 3, 0, 0, 4, 0, 0, 28, 0, 0, 1, 0, 0, 2, 0, 1, 0]' : 0.436611}
{'[5, 6, 3, 0, 0, 4, 0, 0, 28, 0, 0, 1, 0, 0, 2, 0, 1, 0]' : 0.437979}
{'[5, 6, 3, 0, 0, 4, 0, 0, 28, 0, 0, 1, 0, 0, 2, 0, 1, 0]' : 0.450228}
{'[5, 6, 3, 0, 0, 4, 0, 0, 28, 0, 0, 1, 0, 0, 2, 0, 1, 0]' : 0.459715}
{'[5, 6, 3, 0, 0, 4, 0, 0, 28, 0, 0, 1, 0, 0, 2, 0, 1, 0]' : 0.438255}
{'[5, 6, 3, 0, 0, 4, 0, 0, 28, 0, 0, 1, 0, 0, 2, 0, 1, 0]' : 0.435603}
{'[5, 6, 3, 0, 0, 4, 0, 0, 28, 0, 0, 1, 0, 0, 2, 0, 1, 0]' : 0.44625}
{'[5, 6, 3, 0, 0, 4, 0, 0, 28, 0, 0, 1, 0, 0, 2, 0, 1, 0]' : 0.438005}
{'[5, 6, 3, 0, 0, 4, 0, 0, 28, 0, 0, 1, 0, 0, 2, 0, 1, 0]' : 0.43699}
{'[5, 6, 3, 0, 0, 4, 0, 0, 28, 0, 0, 1, 0, 0, 2, 0, 1, 0]' : 0.436081}
{'[5, 6, 3, 0, 0, 4, 0, 0, 28, 0, 0, 1, 0, 0, 2, 0, 1, 0]' : 0.441428}
{'[5, 6, 3, 0, 0, 4, 0, 0, 28, 0, 0, 1, 0, 0, 2, 0, 1, 0]' : 0.458948}
{'[5, 6, 3, 0, 0, 4, 0, 0, 28, 0, 0, 1, 0, 0, 2, 0, 1, 0]' : 0.443359}
{'[5, 6, 3, 0, 0, 4, 0, 0, 28, 0, 0, 1, 0, 0, 2, 0, 1, 0]' : 0.462422}
{'[5, 6, 3, 0, 0, 4, 0, 0, 28, 0, 0, 1, 0, 0, 2, 0, 1, 0]' : 0.436649}
{'[5, 6, 3, 0, 0, 4, 0, 0, 28, 0, 0, 1, 0, 0, 2, 0, 1, 0]' : 0.437261}

out:
 ["{'[5, 6, 3, 0, 0, 4, 0, 0, 28, 0, 0, 1, 0, 0, 2, 0, 1, 0]' : 0.436548}", "{'[5, 6, 3, 0, 0, 4, 0, 0, 28, 0, 0, 1, 0, 0, 2, 0, 1, 0]' : 0.435761}", "{'[5, 6, 3, 0, 0, 4, 0, 0, 28, 0, 0, 1, 0, 0, 2, 0, 1, 0]' : 0.446492}", "{'[5, 6, 3, 0, 0, 4, 0, 0, 28, 0, 0, 1, 0, 0, 2, 0, 1, 0]' : 0.453237}", "{'[5, 6, 3, 0, 0, 4, 0, 0, 28, 0, 0, 1, 0, 0, 2, 0, 1, 0]' : 0.454592}", "{'[5, 6, 3, 0, 0, 4, 0, 0, 28, 0, 0, 1, 0, 0, 2, 0, 1, 0]' : 0.436103}", "{'[5, 6, 3, 0, 0, 4, 0, 0, 28, 0, 0, 1, 0, 0, 2, 0, 1, 0]' : 0.438448}", "{'[5, 6, 3, 0, 0, 4, 0, 0, 28, 0, 0, 1, 0, 0, 2, 0, 1, 0]' : 0.446669}", "{'[5, 6, 3, 0, 0, 4, 0, 0, 28, 0, 0, 1, 0, 0, 2, 0, 1, 0]' : 0.450691}", "{'[5, 6, 3, 0, 0, 4, 0, 0, 28, 0, 0, 1, 0, 0, 2, 0, 1, 0]' : 0.440255}", "{'[5, 6, 3, 0, 0, 4, 0, 0, 28, 0, 0, 1, 0, 0, 2, 0, 1, 0]' : 0.440455}", "{'[5, 6, 3, 0, 0, 4, 0, 0, 28, 0, 0, 1, 0, 0, 2, 0, 1, 0]' : 0.437395}", "{'[5, 6, 3, 0, 0, 4, 0, 0, 28, 0, 0, 1, 0, 0, 2, 0, 1, 0]' : 0.436095}", "{'[5, 6, 3, 0, 0, 4, 0, 0, 28, 0, 0, 1, 0, 0, 2, 0, 1, 0]' : 0.443369}", "{'[5, 6, 3, 0, 0, 4, 0, 0, 28, 0, 0, 1, 0, 0, 2, 0, 1, 0]' : 0.436611}", "{'[5, 6, 3, 0, 0, 4, 0, 0, 28, 0, 0, 1, 0, 0, 2, 0, 1, 0]' : 0.437979}", "{'[5, 6, 3, 0, 0, 4, 0, 0, 28, 0, 0, 1, 0, 0, 2, 0, 1, 0]' : 0.450228}", "{'[5, 6, 3, 0, 0, 4, 0, 0, 28, 0, 0, 1, 0, 0, 2, 0, 1, 0]' : 0.459715}", "{'[5, 6, 3, 0, 0, 4, 0, 0, 28, 0, 0, 1, 0, 0, 2, 0, 1, 0]' : 0.438255}", "{'[5, 6, 3, 0, 0, 4, 0, 0, 28, 0, 0, 1, 0, 0, 2, 0, 1, 0]' : 0.435603}", "{'[5, 6, 3, 0, 0, 4, 0, 0, 28, 0, 0, 1, 0, 0, 2, 0, 1, 0]' : 0.44625}", "{'[5, 6, 3, 0, 0, 4, 0, 0, 28, 0, 0, 1, 0, 0, 2, 0, 1, 0]' : 0.438005}", "{'[5, 6, 3, 0, 0, 4, 0, 0, 28, 0, 0, 1, 0, 0, 2, 0, 1, 0]' : 0.43699}", "{'[5, 6, 3, 0, 0, 4, 0, 0, 28, 0, 0, 1, 0, 0, 2, 0, 1, 0]' : 0.436081}", "{'[5, 6, 3, 0, 0, 4, 0, 0, 28, 0, 0, 1, 0, 0, 2, 0, 1, 0]' : 0.441428}", "{'[5, 6, 3, 0, 0, 4, 0, 0, 28, 0, 0, 1, 0, 0, 2, 0, 1, 0]' : 0.458948}", "{'[5, 6, 3, 0, 0, 4, 0, 0, 28, 0, 0, 1, 0, 0, 2, 0, 1, 0]' : 0.443359}", "{'[5, 6, 3, 0, 0, 4, 0, 0, 28, 0, 0, 1, 0, 0, 2, 0, 1, 0]' : 0.462422}", "{'[5, 6, 3, 0, 0, 4, 0, 0, 28, 0, 0, 1, 0, 0, 2, 0, 1, 0]' : 0.436649}", "{'[5, 6, 3, 0, 0, 4, 0, 0, 28, 0, 0, 1, 0, 0, 2, 0, 1, 0]' : 0.437261}"]
returning from 'run': {'[5, 6, 3, 0, 0, 4, 0, 0, 28, 0, 0, 1, 0, 0, 2, 0, 1, 0]': ([0.436548, 0.435761, 0.446492, 0.453237, 0.454592, 0.436103, 0.438448, 0.446669, 0.450691, 0.440255, 0.440455, 0.437395, 0.436095, 0.443369, 0.436611, 0.437979, 0.450228, 0.459715, 0.438255, 0.435603, 0.44625, 0.438005, 0.43699, 0.436081, 0.441428, 0.458948, 0.443359, 0.462422, 0.436649, 0.437261], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 6, 3, 0, 0, 4, 0, 0, 28, 0, 0, 1, 0, 0, 2, 0, 1, 0]': ([0.436548, 0.435761, 0.446492, 0.453237, 0.454592, 0.436103, 0.438448, 0.446669, 0.450691, 0.440255, 0.440455, 0.437395, 0.436095, 0.443369, 0.436611, 0.437979, 0.450228, 0.459715, 0.438255, 0.435603, 0.44625, 0.438005, 0.43699, 0.436081, 0.441428, 0.458948, 0.443359, 0.462422, 0.436649, 0.437261], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	6
        Additions: 		7887
        Multiplications: 	3828
        Divisions: 		0
        Logical: 		0
        Reads: 			14426
        Writes: 		2201
        Comparisons:		24
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest46.exe __orio_perftest46.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest46.exe  
Program Test Output: 
{'[4, 0, 6, 4, 6, 5, 0, 1, 14, 0, 25, 29, 2, 0, 0, 1, 0, 0]' : 0.242752}
{'[4, 0, 6, 4, 6, 5, 0, 1, 14, 0, 25, 29, 2, 0, 0, 1, 0, 0]' : 0.210442}
{'[4, 0, 6, 4, 6, 5, 0, 1, 14, 0, 25, 29, 2, 0, 0, 1, 0, 0]' : 0.212958}
{'[4, 0, 6, 4, 6, 5, 0, 1, 14, 0, 25, 29, 2, 0, 0, 1, 0, 0]' : 0.211469}
{'[4, 0, 6, 4, 6, 5, 0, 1, 14, 0, 25, 29, 2, 0, 0, 1, 0, 0]' : 0.211431}
{'[4, 0, 6, 4, 6, 5, 0, 1, 14, 0, 25, 29, 2, 0, 0, 1, 0, 0]' : 0.215018}
{'[4, 0, 6, 4, 6, 5, 0, 1, 14, 0, 25, 29, 2, 0, 0, 1, 0, 0]' : 0.213959}
{'[4, 0, 6, 4, 6, 5, 0, 1, 14, 0, 25, 29, 2, 0, 0, 1, 0, 0]' : 0.21575}
{'[4, 0, 6, 4, 6, 5, 0, 1, 14, 0, 25, 29, 2, 0, 0, 1, 0, 0]' : 0.211378}
{'[4, 0, 6, 4, 6, 5, 0, 1, 14, 0, 25, 29, 2, 0, 0, 1, 0, 0]' : 0.212473}
{'[4, 0, 6, 4, 6, 5, 0, 1, 14, 0, 25, 29, 2, 0, 0, 1, 0, 0]' : 0.215669}
{'[4, 0, 6, 4, 6, 5, 0, 1, 14, 0, 25, 29, 2, 0, 0, 1, 0, 0]' : 0.21417}
{'[4, 0, 6, 4, 6, 5, 0, 1, 14, 0, 25, 29, 2, 0, 0, 1, 0, 0]' : 0.213124}
{'[4, 0, 6, 4, 6, 5, 0, 1, 14, 0, 25, 29, 2, 0, 0, 1, 0, 0]' : 0.21432}
{'[4, 0, 6, 4, 6, 5, 0, 1, 14, 0, 25, 29, 2, 0, 0, 1, 0, 0]' : 0.211924}
{'[4, 0, 6, 4, 6, 5, 0, 1, 14, 0, 25, 29, 2, 0, 0, 1, 0, 0]' : 0.21476}
{'[4, 0, 6, 4, 6, 5, 0, 1, 14, 0, 25, 29, 2, 0, 0, 1, 0, 0]' : 0.212494}
{'[4, 0, 6, 4, 6, 5, 0, 1, 14, 0, 25, 29, 2, 0, 0, 1, 0, 0]' : 0.214367}
{'[4, 0, 6, 4, 6, 5, 0, 1, 14, 0, 25, 29, 2, 0, 0, 1, 0, 0]' : 0.211709}
{'[4, 0, 6, 4, 6, 5, 0, 1, 14, 0, 25, 29, 2, 0, 0, 1, 0, 0]' : 0.213074}
{'[4, 0, 6, 4, 6, 5, 0, 1, 14, 0, 25, 29, 2, 0, 0, 1, 0, 0]' : 0.21811}
{'[4, 0, 6, 4, 6, 5, 0, 1, 14, 0, 25, 29, 2, 0, 0, 1, 0, 0]' : 0.213239}
{'[4, 0, 6, 4, 6, 5, 0, 1, 14, 0, 25, 29, 2, 0, 0, 1, 0, 0]' : 0.207538}
{'[4, 0, 6, 4, 6, 5, 0, 1, 14, 0, 25, 29, 2, 0, 0, 1, 0, 0]' : 0.214795}
{'[4, 0, 6, 4, 6, 5, 0, 1, 14, 0, 25, 29, 2, 0, 0, 1, 0, 0]' : 0.214749}
{'[4, 0, 6, 4, 6, 5, 0, 1, 14, 0, 25, 29, 2, 0, 0, 1, 0, 0]' : 0.212611}
{'[4, 0, 6, 4, 6, 5, 0, 1, 14, 0, 25, 29, 2, 0, 0, 1, 0, 0]' : 0.215163}
{'[4, 0, 6, 4, 6, 5, 0, 1, 14, 0, 25, 29, 2, 0, 0, 1, 0, 0]' : 0.217318}
{'[4, 0, 6, 4, 6, 5, 0, 1, 14, 0, 25, 29, 2, 0, 0, 1, 0, 0]' : 0.214353}
{'[4, 0, 6, 4, 6, 5, 0, 1, 14, 0, 25, 29, 2, 0, 0, 1, 0, 0]' : 0.21401}

out:
 ["{'[4, 0, 6, 4, 6, 5, 0, 1, 14, 0, 25, 29, 2, 0, 0, 1, 0, 0]' : 0.242752}", "{'[4, 0, 6, 4, 6, 5, 0, 1, 14, 0, 25, 29, 2, 0, 0, 1, 0, 0]' : 0.210442}", "{'[4, 0, 6, 4, 6, 5, 0, 1, 14, 0, 25, 29, 2, 0, 0, 1, 0, 0]' : 0.212958}", "{'[4, 0, 6, 4, 6, 5, 0, 1, 14, 0, 25, 29, 2, 0, 0, 1, 0, 0]' : 0.211469}", "{'[4, 0, 6, 4, 6, 5, 0, 1, 14, 0, 25, 29, 2, 0, 0, 1, 0, 0]' : 0.211431}", "{'[4, 0, 6, 4, 6, 5, 0, 1, 14, 0, 25, 29, 2, 0, 0, 1, 0, 0]' : 0.215018}", "{'[4, 0, 6, 4, 6, 5, 0, 1, 14, 0, 25, 29, 2, 0, 0, 1, 0, 0]' : 0.213959}", "{'[4, 0, 6, 4, 6, 5, 0, 1, 14, 0, 25, 29, 2, 0, 0, 1, 0, 0]' : 0.21575}", "{'[4, 0, 6, 4, 6, 5, 0, 1, 14, 0, 25, 29, 2, 0, 0, 1, 0, 0]' : 0.211378}", "{'[4, 0, 6, 4, 6, 5, 0, 1, 14, 0, 25, 29, 2, 0, 0, 1, 0, 0]' : 0.212473}", "{'[4, 0, 6, 4, 6, 5, 0, 1, 14, 0, 25, 29, 2, 0, 0, 1, 0, 0]' : 0.215669}", "{'[4, 0, 6, 4, 6, 5, 0, 1, 14, 0, 25, 29, 2, 0, 0, 1, 0, 0]' : 0.21417}", "{'[4, 0, 6, 4, 6, 5, 0, 1, 14, 0, 25, 29, 2, 0, 0, 1, 0, 0]' : 0.213124}", "{'[4, 0, 6, 4, 6, 5, 0, 1, 14, 0, 25, 29, 2, 0, 0, 1, 0, 0]' : 0.21432}", "{'[4, 0, 6, 4, 6, 5, 0, 1, 14, 0, 25, 29, 2, 0, 0, 1, 0, 0]' : 0.211924}", "{'[4, 0, 6, 4, 6, 5, 0, 1, 14, 0, 25, 29, 2, 0, 0, 1, 0, 0]' : 0.21476}", "{'[4, 0, 6, 4, 6, 5, 0, 1, 14, 0, 25, 29, 2, 0, 0, 1, 0, 0]' : 0.212494}", "{'[4, 0, 6, 4, 6, 5, 0, 1, 14, 0, 25, 29, 2, 0, 0, 1, 0, 0]' : 0.214367}", "{'[4, 0, 6, 4, 6, 5, 0, 1, 14, 0, 25, 29, 2, 0, 0, 1, 0, 0]' : 0.211709}", "{'[4, 0, 6, 4, 6, 5, 0, 1, 14, 0, 25, 29, 2, 0, 0, 1, 0, 0]' : 0.213074}", "{'[4, 0, 6, 4, 6, 5, 0, 1, 14, 0, 25, 29, 2, 0, 0, 1, 0, 0]' : 0.21811}", "{'[4, 0, 6, 4, 6, 5, 0, 1, 14, 0, 25, 29, 2, 0, 0, 1, 0, 0]' : 0.213239}", "{'[4, 0, 6, 4, 6, 5, 0, 1, 14, 0, 25, 29, 2, 0, 0, 1, 0, 0]' : 0.207538}", "{'[4, 0, 6, 4, 6, 5, 0, 1, 14, 0, 25, 29, 2, 0, 0, 1, 0, 0]' : 0.214795}", "{'[4, 0, 6, 4, 6, 5, 0, 1, 14, 0, 25, 29, 2, 0, 0, 1, 0, 0]' : 0.214749}", "{'[4, 0, 6, 4, 6, 5, 0, 1, 14, 0, 25, 29, 2, 0, 0, 1, 0, 0]' : 0.212611}", "{'[4, 0, 6, 4, 6, 5, 0, 1, 14, 0, 25, 29, 2, 0, 0, 1, 0, 0]' : 0.215163}", "{'[4, 0, 6, 4, 6, 5, 0, 1, 14, 0, 25, 29, 2, 0, 0, 1, 0, 0]' : 0.217318}", "{'[4, 0, 6, 4, 6, 5, 0, 1, 14, 0, 25, 29, 2, 0, 0, 1, 0, 0]' : 0.214353}", "{'[4, 0, 6, 4, 6, 5, 0, 1, 14, 0, 25, 29, 2, 0, 0, 1, 0, 0]' : 0.21401}"]
returning from 'run': {'[4, 0, 6, 4, 6, 5, 0, 1, 14, 0, 25, 29, 2, 0, 0, 1, 0, 0]': ([0.242752, 0.210442, 0.212958, 0.211469, 0.211431, 0.215018, 0.213959, 0.21575, 0.211378, 0.212473, 0.215669, 0.21417, 0.213124, 0.21432, 0.211924, 0.21476, 0.212494, 0.214367, 0.211709, 0.213074, 0.21811, 0.213239, 0.207538, 0.214795, 0.214749, 0.212611, 0.215163, 0.217318, 0.214353, 0.21401], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 0, 6, 4, 6, 5, 0, 1, 14, 0, 25, 29, 2, 0, 0, 1, 0, 0]': ([0.242752, 0.210442, 0.212958, 0.211469, 0.211431, 0.215018, 0.213959, 0.21575, 0.211378, 0.212473, 0.215669, 0.21417, 0.213124, 0.21432, 0.211924, 0.21476, 0.212494, 0.214367, 0.211709, 0.213074, 0.21811, 0.213239, 0.207538, 0.214795, 0.214749, 0.212611, 0.215163, 0.217318, 0.214353, 0.21401], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Complete design, with measurements:
     T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
24      6    5    4    0    3    3       1       0    0   0  27   3    1    0
81      0    6    3    2    5    6       0       1   26  16   7   0    0    1
85      4    4    1    3    0    2       1       0    5  29   0  27    0    0
130     6    1    0    0    5    0       1       0   26   0  12   7    0    0
281     0    4    6    2    2    4       0       0    8   0   4   6    2    0
351     2    1    5    6    6    4       1       0   27   0   6  27    0    0
563     1    0    2    3    6    0       1       0    9   0   7  11    1    0
613     0    4    4    1    5    2       1       0    9   0   0   0    1    0
792     3    1    2    1    1    2       0       0   26  15   5   0    2    0
902     6    0    0    6    3    3       0       0   27   7   3   0    1    0
918     6    0    2    4    4    0       0       0   15   1   0   0    0    2
1052    1    6    1    6    0    6       0       0    1   0  23   7    0    0
1241    2    1    2    0    6    1       0       0    2  13   0   6    1    1
1312    0    0    5    6    1    0       0       0   14   0   5  27    0    1
1314    6    2    1    0    1    6       0       1   11   0  18  28    0    1
1322    4    2    5    5    3    0       1       0   15  27  25   0    0    0
1332    3    6    2    6    0    0       1       1    0   0   1   0    2    0
1337    5    0    2    0    3    0       1       0    0   6   0  28    1    0
1443    3    2    1    5    6    6       0       0    0  12  25   0    0    1
1452    1    6    0    4    6    0       1       0   28  28  28   0    0    1
1555    1    1    2    0    4    0       1       1    8   1   0  26    0    0
1832    0    2    4    6    5    5       0       1    9   3   3   0    0    2
1944    4    4    6    2    3    6       1       1    8   5   0   6    0    1
1945    2    2    0    0    1    3       0       1   22   0   7   8    1    0
1993    5    3    0    6    0    6       1       1    8  28   8   0    1    0
2158    2    1    5    4    0    0       1       0   23   4  23   0    1    1
2164    1    2    0    5    2    6       1       0    0   0   0  29    1    1
2223    2    0    6    5    2    6       1       1   27   2  26   0    0    0
2371    0    1    0    1    0    6       1       1   24   0   2   4    2    0
2616    0    2    6    4    4    0       0       0    0  28   0  12    0    0
2781    2    6    0    6    6    5       0       1    2  11   0  29    2    0
2885    1    0    5    3    0    0       0       0    3   1   0   8    0    1
2993    2    0    5    0    4    4       0       1    0  28  12   0    0    1
3570    0    6    6    2    0    0       0       1   10   0  20  29    1    0
3761    0    0    3    3    0    2       1       0   27   1   0  20    0    0
3788    6    0    3    6    6    4       0       1   29  25   0   6    1    1
4057    0    0    0    0    2    2       0       0    8   7  27   0    0    0
4138    5    6    3    0    0    4       0       0   28   0   0   1    0    0
4288    4    0    6    4    6    5       0       1   14   0  25  29    2    0
     RT_K SCR VEC1 VEC2  cost_mean
24      1   0    0    0 0.12296130
81      1   1    1    0 0.16190003
85      1   0    1    0 0.23007477
130     0   1    0    0 0.18536957
281     0   1    0    1 0.18250383
351     2   1    1    0 0.17695523
563     1   0    1    0 0.11579050
613     0   1    0    1 0.09946787
792     0   0    0    0 0.26098540
902     0   0    1    0 0.14550160
918     0   1    1    1 0.11864947
1052    0   1    0    0 0.16073640
1241    0   0    1    0 0.11954440
1312    1   0    1    1 0.19138287
1314    1   0    1    1 0.25772973
1322    2   0    1    1 0.22692310
1332    0   0    1    0 0.16133960
1337    1   1    0    1 0.12767200
1443    1   0    1    1 0.24594563
1452    1   0    0    0 0.27565730
1555    0   0    0    1 0.52826653
1832    0   1    0    0 0.24870760
1944    0   1    1    0 0.28096107
1945    1   1    1    1 0.13973583
1993    1   0    0    0 0.15886633
2158    0   1    1    1 0.14895757
2164    0   0    0    0 0.19381103
2223    1   0    0    0 0.32905493
2371    0   0    1    0 0.44265873
2616    1   0    1    0 0.34274653
2781    0   1    1    1 0.34731067
2885    1   1    0    0 0.17222110
2993    0   1    1    0 0.38101860
3570    0   0    0    0 0.17800520
3761    0   0    0    1 0.20394273
3788    0   0    0    1 0.15944930
4057    2   1    0    0 0.21419877
4138    2   0    1    0 0.44306313
4288    0   1    0    0 0.21450423

Heteroscedasticity Test p-value: 0.261907573868
Regression Step:                Df  Sum Sq Mean Sq F value Pr(>F)  
T1_I             1 0.00897 0.00897   1.210 0.3077  
T1_J             1 0.00044 0.00044   0.059 0.8145  
T1_K             1 0.00008 0.00008   0.011 0.9208  
T2_I             1 0.01360 0.01360   1.834 0.2177  
T2_J             1 0.00018 0.00018   0.024 0.8818  
T2_K             1 0.02305 0.02305   3.109 0.1212  
ACOPY_x          1 0.00094 0.00094   0.127 0.7317  
ACOPY_y          1 0.02737 0.02737   3.691 0.0961 .
U1_I             1 0.00237 0.00237   0.319 0.5899  
U_I              1 0.01673 0.01673   2.256 0.1768  
U_J              1 0.00198 0.00198   0.267 0.6216  
U_K              1 0.00499 0.00499   0.673 0.4390  
RT_I             1 0.01262 0.01262   1.702 0.2333  
RT_J             1 0.01017 0.01017   1.372 0.2798  
RT_K             1 0.00074 0.00074   0.100 0.7606  
SCR              1 0.02292 0.02292   3.091 0.1222  
VEC1             1 0.00471 0.00471   0.635 0.4517  
VEC2             1 0.00005 0.00005   0.007 0.9357  
I(1/(1 + T1_I))  1 0.01338 0.01338   1.804 0.2211  
I(1/(1 + T1_J))  1 0.00079 0.00079   0.106 0.7544  
I(1/(1 + T1_K))  1 0.01120 0.01120   1.510 0.2588  
I(1/(1 + T2_I))  1 0.00237 0.00237   0.320 0.5896  
I(1/(1 + T2_J))  1 0.00087 0.00087   0.117 0.7424  
I(1/(1 + T2_K))  1 0.02192 0.02192   2.956 0.1292  
I(1/(1 + U1_I))  1 0.00012 0.00012   0.016 0.9015  
I(1/(1 + U_I))   1 0.00831 0.00831   1.121 0.3249  
I(1/(1 + U_J))   1 0.01167 0.01167   1.573 0.2500  
I(1/(1 + U_K))   1 0.01384 0.01384   1.867 0.2141  
I(1/(1 + RT_I))  1 0.07972 0.07972  10.751 0.0135 *
I(1/(1 + RT_J))  1 0.01399 0.01399   1.886 0.2120  
I(1/(1 + RT_K))  1 0.00150 0.00150   0.202 0.6664  
Residuals        7 0.05190 0.00741                 
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Predicting Best
Generating valid search space of size 4600 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Valid coordinates: 920
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Valid coordinates: 1840
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Tested coordinates: 110000
Valid coordinates: 2760
Tested coordinates: 120000
Tested coordinates: 130000
Tested coordinates: 140000
Tested coordinates: 150000
Valid coordinates: 3680
Tested coordinates: 160000
Tested coordinates: 170000
Tested coordinates: 180000
Tested coordinates: 190000
Valid coordinates: 4600
Valid/Tested configurations: 4600/191184
Generated Search Space:
NULL
Identical predictions (tol = 1e-5): 1
Getting Best from Design
Response: ['cost_mean']
Design Names:  [1] "T1_I"      "T1_J"      "T1_K"      "T2_I"      "T2_J"      "T2_K"     
 [7] "ACOPY_x"   "ACOPY_y"   "U1_I"      "U_I"       "U_J"       "U_K"      
[13] "RT_I"      "RT_J"      "RT_K"      "SCR"       "VEC1"      "VEC2"     
[19] "cost_mean"

Design Response:       cost_mean
24   0.12296130
81   0.16190003
85   0.23007477
130  0.18536957
281  0.18250383
351  0.17695523
563  0.11579050
613  0.09946787
792  0.26098540
902  0.14550160
918  0.11864947
1052 0.16073640
1241 0.11954440
1312 0.19138287
1314 0.25772973
1322 0.22692310
1332 0.16133960
1337 0.12767200
1443 0.24594563
1452 0.27565730
1555 0.52826653
1832 0.24870760
1944 0.28096107
1945 0.13973583
1993 0.15886633
2158 0.14895757
2164 0.19381103
2223 0.32905493
2371 0.44265873
2616 0.34274653
2781 0.34731067
2885 0.17222110
2993 0.38101860
3570 0.17800520
3761 0.20394273
3788 0.15944930
4057 0.21419877
4138 0.44306313
4288 0.21450423

Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Getting fixed variables
Pruning Model
Best Predicted:      T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
3039    6    2    2    5    3    3       1       1   17   0  20  13    1    1
     RT_K SCR VEC1 VEC2
3039    0   1    0    0

Best From Design: [0, 4, 4, 1, 5, 2, 1, 0, 9, 0, 0, 0, 1, 0, 0, 1, 0, 1]
Pruned Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Fixed Factors: {'ACOPY_y': 1}
Length of requested configs: 1
Result was on Database, Returning Now
Starting Point (-O3):
0.16283083333333334
Predicted Best Point:
[6, 2, 2, 5, 3, 3, 1, 1, 17, 0, 20, 13, 1, 1, 0, 1, 0, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	26
        Max loop nest depth: 	6
        Additions: 		1031
        Multiplications: 	414
        Divisions: 		0
        Logical: 		0
        Reads: 			2039
        Writes: 		372
        Comparisons:		26
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest47.exe __orio_perftest47.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest47.exe  
Program Test Output: 
{'[6, 2, 2, 5, 3, 3, 1, 1, 17, 0, 20, 13, 1, 1, 0, 1, 0, 0]' : 0.114315}
{'[6, 2, 2, 5, 3, 3, 1, 1, 17, 0, 20, 13, 1, 1, 0, 1, 0, 0]' : 0.114326}
{'[6, 2, 2, 5, 3, 3, 1, 1, 17, 0, 20, 13, 1, 1, 0, 1, 0, 0]' : 0.113982}
{'[6, 2, 2, 5, 3, 3, 1, 1, 17, 0, 20, 13, 1, 1, 0, 1, 0, 0]' : 0.100518}
{'[6, 2, 2, 5, 3, 3, 1, 1, 17, 0, 20, 13, 1, 1, 0, 1, 0, 0]' : 0.096576}
{'[6, 2, 2, 5, 3, 3, 1, 1, 17, 0, 20, 13, 1, 1, 0, 1, 0, 0]' : 0.0966239}
{'[6, 2, 2, 5, 3, 3, 1, 1, 17, 0, 20, 13, 1, 1, 0, 1, 0, 0]' : 0.096699}
{'[6, 2, 2, 5, 3, 3, 1, 1, 17, 0, 20, 13, 1, 1, 0, 1, 0, 0]' : 0.096653}
{'[6, 2, 2, 5, 3, 3, 1, 1, 17, 0, 20, 13, 1, 1, 0, 1, 0, 0]' : 0.0965528}
{'[6, 2, 2, 5, 3, 3, 1, 1, 17, 0, 20, 13, 1, 1, 0, 1, 0, 0]' : 0.0966649}
{'[6, 2, 2, 5, 3, 3, 1, 1, 17, 0, 20, 13, 1, 1, 0, 1, 0, 0]' : 0.0966101}
{'[6, 2, 2, 5, 3, 3, 1, 1, 17, 0, 20, 13, 1, 1, 0, 1, 0, 0]' : 0.102944}
{'[6, 2, 2, 5, 3, 3, 1, 1, 17, 0, 20, 13, 1, 1, 0, 1, 0, 0]' : 0.0975959}
{'[6, 2, 2, 5, 3, 3, 1, 1, 17, 0, 20, 13, 1, 1, 0, 1, 0, 0]' : 0.096662}
{'[6, 2, 2, 5, 3, 3, 1, 1, 17, 0, 20, 13, 1, 1, 0, 1, 0, 0]' : 0.096663}
{'[6, 2, 2, 5, 3, 3, 1, 1, 17, 0, 20, 13, 1, 1, 0, 1, 0, 0]' : 0.096657}
{'[6, 2, 2, 5, 3, 3, 1, 1, 17, 0, 20, 13, 1, 1, 0, 1, 0, 0]' : 0.0967002}
{'[6, 2, 2, 5, 3, 3, 1, 1, 17, 0, 20, 13, 1, 1, 0, 1, 0, 0]' : 0.0966451}
{'[6, 2, 2, 5, 3, 3, 1, 1, 17, 0, 20, 13, 1, 1, 0, 1, 0, 0]' : 0.096683}
{'[6, 2, 2, 5, 3, 3, 1, 1, 17, 0, 20, 13, 1, 1, 0, 1, 0, 0]' : 0.0972171}
{'[6, 2, 2, 5, 3, 3, 1, 1, 17, 0, 20, 13, 1, 1, 0, 1, 0, 0]' : 0.096595}
{'[6, 2, 2, 5, 3, 3, 1, 1, 17, 0, 20, 13, 1, 1, 0, 1, 0, 0]' : 0.0966849}
{'[6, 2, 2, 5, 3, 3, 1, 1, 17, 0, 20, 13, 1, 1, 0, 1, 0, 0]' : 0.096626}
{'[6, 2, 2, 5, 3, 3, 1, 1, 17, 0, 20, 13, 1, 1, 0, 1, 0, 0]' : 0.0966489}
{'[6, 2, 2, 5, 3, 3, 1, 1, 17, 0, 20, 13, 1, 1, 0, 1, 0, 0]' : 0.096617}
{'[6, 2, 2, 5, 3, 3, 1, 1, 17, 0, 20, 13, 1, 1, 0, 1, 0, 0]' : 0.0966439}
{'[6, 2, 2, 5, 3, 3, 1, 1, 17, 0, 20, 13, 1, 1, 0, 1, 0, 0]' : 0.103003}
{'[6, 2, 2, 5, 3, 3, 1, 1, 17, 0, 20, 13, 1, 1, 0, 1, 0, 0]' : 0.0967219}
{'[6, 2, 2, 5, 3, 3, 1, 1, 17, 0, 20, 13, 1, 1, 0, 1, 0, 0]' : 0.0973079}
{'[6, 2, 2, 5, 3, 3, 1, 1, 17, 0, 20, 13, 1, 1, 0, 1, 0, 0]' : 0.096653}

out:
 ["{'[6, 2, 2, 5, 3, 3, 1, 1, 17, 0, 20, 13, 1, 1, 0, 1, 0, 0]' : 0.114315}", "{'[6, 2, 2, 5, 3, 3, 1, 1, 17, 0, 20, 13, 1, 1, 0, 1, 0, 0]' : 0.114326}", "{'[6, 2, 2, 5, 3, 3, 1, 1, 17, 0, 20, 13, 1, 1, 0, 1, 0, 0]' : 0.113982}", "{'[6, 2, 2, 5, 3, 3, 1, 1, 17, 0, 20, 13, 1, 1, 0, 1, 0, 0]' : 0.100518}", "{'[6, 2, 2, 5, 3, 3, 1, 1, 17, 0, 20, 13, 1, 1, 0, 1, 0, 0]' : 0.096576}", "{'[6, 2, 2, 5, 3, 3, 1, 1, 17, 0, 20, 13, 1, 1, 0, 1, 0, 0]' : 0.0966239}", "{'[6, 2, 2, 5, 3, 3, 1, 1, 17, 0, 20, 13, 1, 1, 0, 1, 0, 0]' : 0.096699}", "{'[6, 2, 2, 5, 3, 3, 1, 1, 17, 0, 20, 13, 1, 1, 0, 1, 0, 0]' : 0.096653}", "{'[6, 2, 2, 5, 3, 3, 1, 1, 17, 0, 20, 13, 1, 1, 0, 1, 0, 0]' : 0.0965528}", "{'[6, 2, 2, 5, 3, 3, 1, 1, 17, 0, 20, 13, 1, 1, 0, 1, 0, 0]' : 0.0966649}", "{'[6, 2, 2, 5, 3, 3, 1, 1, 17, 0, 20, 13, 1, 1, 0, 1, 0, 0]' : 0.0966101}", "{'[6, 2, 2, 5, 3, 3, 1, 1, 17, 0, 20, 13, 1, 1, 0, 1, 0, 0]' : 0.102944}", "{'[6, 2, 2, 5, 3, 3, 1, 1, 17, 0, 20, 13, 1, 1, 0, 1, 0, 0]' : 0.0975959}", "{'[6, 2, 2, 5, 3, 3, 1, 1, 17, 0, 20, 13, 1, 1, 0, 1, 0, 0]' : 0.096662}", "{'[6, 2, 2, 5, 3, 3, 1, 1, 17, 0, 20, 13, 1, 1, 0, 1, 0, 0]' : 0.096663}", "{'[6, 2, 2, 5, 3, 3, 1, 1, 17, 0, 20, 13, 1, 1, 0, 1, 0, 0]' : 0.096657}", "{'[6, 2, 2, 5, 3, 3, 1, 1, 17, 0, 20, 13, 1, 1, 0, 1, 0, 0]' : 0.0967002}", "{'[6, 2, 2, 5, 3, 3, 1, 1, 17, 0, 20, 13, 1, 1, 0, 1, 0, 0]' : 0.0966451}", "{'[6, 2, 2, 5, 3, 3, 1, 1, 17, 0, 20, 13, 1, 1, 0, 1, 0, 0]' : 0.096683}", "{'[6, 2, 2, 5, 3, 3, 1, 1, 17, 0, 20, 13, 1, 1, 0, 1, 0, 0]' : 0.0972171}", "{'[6, 2, 2, 5, 3, 3, 1, 1, 17, 0, 20, 13, 1, 1, 0, 1, 0, 0]' : 0.096595}", "{'[6, 2, 2, 5, 3, 3, 1, 1, 17, 0, 20, 13, 1, 1, 0, 1, 0, 0]' : 0.0966849}", "{'[6, 2, 2, 5, 3, 3, 1, 1, 17, 0, 20, 13, 1, 1, 0, 1, 0, 0]' : 0.096626}", "{'[6, 2, 2, 5, 3, 3, 1, 1, 17, 0, 20, 13, 1, 1, 0, 1, 0, 0]' : 0.0966489}", "{'[6, 2, 2, 5, 3, 3, 1, 1, 17, 0, 20, 13, 1, 1, 0, 1, 0, 0]' : 0.096617}", "{'[6, 2, 2, 5, 3, 3, 1, 1, 17, 0, 20, 13, 1, 1, 0, 1, 0, 0]' : 0.0966439}", "{'[6, 2, 2, 5, 3, 3, 1, 1, 17, 0, 20, 13, 1, 1, 0, 1, 0, 0]' : 0.103003}", "{'[6, 2, 2, 5, 3, 3, 1, 1, 17, 0, 20, 13, 1, 1, 0, 1, 0, 0]' : 0.0967219}", "{'[6, 2, 2, 5, 3, 3, 1, 1, 17, 0, 20, 13, 1, 1, 0, 1, 0, 0]' : 0.0973079}", "{'[6, 2, 2, 5, 3, 3, 1, 1, 17, 0, 20, 13, 1, 1, 0, 1, 0, 0]' : 0.096653}"]
returning from 'run': {'[6, 2, 2, 5, 3, 3, 1, 1, 17, 0, 20, 13, 1, 1, 0, 1, 0, 0]': ([0.114315, 0.114326, 0.113982, 0.100518, 0.096576, 0.0966239, 0.096699, 0.096653, 0.0965528, 0.0966649, 0.0966101, 0.102944, 0.0975959, 0.096662, 0.096663, 0.096657, 0.0967002, 0.0966451, 0.096683, 0.0972171, 0.096595, 0.0966849, 0.096626, 0.0966489, 0.096617, 0.0966439, 0.103003, 0.0967219, 0.0973079, 0.096653], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 2, 2, 5, 3, 3, 1, 1, 17, 0, 20, 13, 1, 1, 0, 1, 0, 0]': ([0.114315, 0.114326, 0.113982, 0.100518, 0.096576, 0.0966239, 0.096699, 0.096653, 0.0965528, 0.0966649, 0.0966101, 0.102944, 0.0975959, 0.096662, 0.096663, 0.096657, 0.0967002, 0.0966451, 0.096683, 0.0972171, 0.096595, 0.0966849, 0.096626, 0.0966489, 0.096617, 0.0966439, 0.103003, 0.0967219, 0.0973079, 0.096653], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Design Best Point:
[0, 4, 4, 1, 5, 2, 1, 0, 9, 0, 0, 0, 1, 0, 0, 1, 0, 1]
Length of requested configs: 1
Result was on Database, Returning Now
Fixed Factors: {'ACOPY_y': 1}
Slowdown (Design Best): 0.6108663080804718
Slowdown (Predicted Best): 0.6081545776035456
Budget: 39/180
Updating Global Best: 0.09902631666666668
Current Best Point: 
[6, 2, 2, 5, 3, 3, 1, 1, 17, 0, 20, 13, 1, 1, 0, 1, 0, 0]
Step 1
Generating valid search space of size 4500 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Valid coordinates: 900
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Valid coordinates: 1800
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Tested coordinates: 110000
Valid coordinates: 2700
Tested coordinates: 120000
Tested coordinates: 130000
Tested coordinates: 140000
Valid coordinates: 3600
Tested coordinates: 150000
Tested coordinates: 160000
Tested coordinates: 170000
Tested coordinates: 180000
Valid coordinates: 4500
Valid/Tested configurations: 4500/187967
Generated Search Space:
NULL
Clean Info:
Removed Factors: character(0)

Removed Inverse Factors: [1] "ACOPY_x" "SCR"     "VEC1"    "VEC2"   

New Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
New Inverse Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
New Fixed Factors: {'ACOPY_y': 1}
Full Model:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Fixed Factors: {'ACOPY_y': 1}
Computing D-Optimal Design
Computing D-Optimal Design with 45 experiments
Design Formula:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Starting "optFederov" run
Using Search Space:
NULL
Data Dimensions: [1] 4500   17

     T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x U1_I U_I U_J U_K RT_I RT_J RT_K SCR
37      6    1    2    5    0    0       1    1   3   0  13    1    1    0   1
54      0    6    2    0    0    1       1   24  10  25   0    0    1    1   0
65      4    5    6    4    5    4       1   27  29  29   0    1    1    0   0
165     1    3    3    5    1    6       0   17   5  29   0    0    0    1   0
249     6    6    1    0    6    0       0   24   0  28   0    0    2    0   0
356     6    6    6    0    0    5       0    5  29   0   2    2    0    0   1
374     6    2    0    0    1    2       0   21  22  16   0    0    0    0   1
435     0    0    1    5    6    3       0    3   6   0   7    1    0    1   1
492     1    0    0    5    5    6       0   28   0   9  24    0    0    1   0
582     6    0    4    4    5    2       1    5   0  11   8    0    1    1   0
606     6    3    0    6    3    3       1   29   1   0  28    2    0    0   0
637     0    2    4    5    6    2       1    0   0  27  15    0    2    0   0
692     0    0    0    3    0    6       0   28   0  28  18    0    1    1   1
930     3    2    1    1    0    2       0    1  27   0  28    0    1    1   1
962     6    2    3    4    0    4       1   20  29  29   0    0    0    2   0
1059    0    0    0    6    1    5       0    5  20   0   0    1    0    0   1
1351    4    0    1    2    3    4       1   17   8   0   0    0    1    0   1
1453    1    0    6    5    6    6       1   28   4   0   8    0    0    0   0
1480    0    1    6    0    5    6       0   27  23   0   9    1    1    0   0
1628    1    6    6    1    0    6       1   15   0   7   9    0    2    0   1
1792    6    1    1    5    0    3       0    4   0   8   0    0    0    0   0
2168    3    4    3    5    0    6       1    1   3  26   0    0    0    2   0
2172    5    3    6    0    6    4       1    4   0  29  28    1    0    0   1
2440    0    4    5    6    3    0       0   12   8   0  28    0    1    0   1
2576    0    1    3    0    1    6       0    0   7   0  11    0    2    0   0
2615    3    3    0    1    6    0       0   23   5   0   9    0    0    2   1
2652    0    0    0    1    2    0       1    4   5  15   0    0    0    2   0
2712    2    6    0    0    4    1       1    0  22   0   1    0    0    2   1
2841    6    5    3    4    4    6       0   25   0   2   1    0    0    2   1
2869    5    1    2    0    5    6       1    0  24   3   0    1    0    1   1
3025    0    2    5    6    6    4       0   28   0   7  13    2    0    0   1
3093    5    3    5    0    2    4       0    2   0   0  21    2    0    0   0
3115    6    6    5    6    0    0       1   25  18   2   0    1    0    0   0
3118    5    2    0    6    6    6       1    4  16   6   0    0    2    0   0
3237    2    1    0    6    1    1       1   28   0  19  10    1    1    0   1
3259    1    4    6    5    6    4       0   11  13   0   0    1    0    1   1
3324    2    1    5    3    1    6       0    1   0   0   0    0    1    1   1
3335    2    0    0    3    3    0       1    2   0  29   6    2    0    0   1
3572    2    0    1    0    0    2       0    1   0  27   7    0    0    2   0
3619    1    6    0    2    0    6       0    0  18   7   0    2    0    0   1
3656    1    0    4    2    6    0       1   29   0   1  27    2    0    0   1
3964    0    2    1    6    3    0       1   20  27   0  10    0    0    0   0
4081    3    6    1    2    4    5       0    9   6   0  29    0    1    0   0
4237    4    0    6    6    1    0       0   18   2  11   0    0    2    0   0
4417    6    2    6    5    4    0       0    0   3   0  22    0    0    1   1
     VEC1 VEC2
37      1    1
54      1    0
65      0    1
165     1    1
249     0    0
356     0    0
374     1    1
435     0    1
492     1    1
582     1    1
606     1    0
637     0    1
692     0    0
930     1    0
962     0    0
1059    1    0
1351    0    0
1453    1    1
1480    1    0
1628    0    1
1792    0    0
2168    0    1
2172    1    0
2440    1    1
2576    1    0
2615    1    0
2652    0    1
2712    0    1
2841    1    0
2869    1    1
3025    0    1
3093    0    1
3115    1    1
3118    0    0
3237    0    0
3259    0    0
3324    1    1
3335    1    1
3572    1    0
3619    1    0
3656    0    1
3964    0    0
4081    0    1
4237    1    0
4417    0    0

D-Efficiency Approximation: [1] 0.378

Measuring design of size 45
Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Length of requested configs: 1
Code stats:
        Number of loops: 	46
        Max loop nest depth: 	5
        Additions: 		1714
        Multiplications: 	598
        Divisions: 		0
        Logical: 		0
        Reads: 			3455
        Writes: 		664
        Comparisons:		46
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest48.exe __orio_perftest48.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest48.exe  
Program Test Output: 
{'[6, 1, 2, 5, 0, 0, 1, 1, 1, 3, 0, 13, 1, 1, 0, 1, 1, 1]' : 0.100747}
{'[6, 1, 2, 5, 0, 0, 1, 1, 1, 3, 0, 13, 1, 1, 0, 1, 1, 1]' : 0.103049}
{'[6, 1, 2, 5, 0, 0, 1, 1, 1, 3, 0, 13, 1, 1, 0, 1, 1, 1]' : 0.103306}
{'[6, 1, 2, 5, 0, 0, 1, 1, 1, 3, 0, 13, 1, 1, 0, 1, 1, 1]' : 0.103338}
{'[6, 1, 2, 5, 0, 0, 1, 1, 1, 3, 0, 13, 1, 1, 0, 1, 1, 1]' : 0.101042}
{'[6, 1, 2, 5, 0, 0, 1, 1, 1, 3, 0, 13, 1, 1, 0, 1, 1, 1]' : 0.100849}
{'[6, 1, 2, 5, 0, 0, 1, 1, 1, 3, 0, 13, 1, 1, 0, 1, 1, 1]' : 0.103408}
{'[6, 1, 2, 5, 0, 0, 1, 1, 1, 3, 0, 13, 1, 1, 0, 1, 1, 1]' : 0.103252}
{'[6, 1, 2, 5, 0, 0, 1, 1, 1, 3, 0, 13, 1, 1, 0, 1, 1, 1]' : 0.104562}
{'[6, 1, 2, 5, 0, 0, 1, 1, 1, 3, 0, 13, 1, 1, 0, 1, 1, 1]' : 0.104622}
{'[6, 1, 2, 5, 0, 0, 1, 1, 1, 3, 0, 13, 1, 1, 0, 1, 1, 1]' : 0.104542}
{'[6, 1, 2, 5, 0, 0, 1, 1, 1, 3, 0, 13, 1, 1, 0, 1, 1, 1]' : 0.100848}
{'[6, 1, 2, 5, 0, 0, 1, 1, 1, 3, 0, 13, 1, 1, 0, 1, 1, 1]' : 0.100697}
{'[6, 1, 2, 5, 0, 0, 1, 1, 1, 3, 0, 13, 1, 1, 0, 1, 1, 1]' : 0.100694}
{'[6, 1, 2, 5, 0, 0, 1, 1, 1, 3, 0, 13, 1, 1, 0, 1, 1, 1]' : 0.100849}
{'[6, 1, 2, 5, 0, 0, 1, 1, 1, 3, 0, 13, 1, 1, 0, 1, 1, 1]' : 0.10082}
{'[6, 1, 2, 5, 0, 0, 1, 1, 1, 3, 0, 13, 1, 1, 0, 1, 1, 1]' : 0.102489}
{'[6, 1, 2, 5, 0, 0, 1, 1, 1, 3, 0, 13, 1, 1, 0, 1, 1, 1]' : 0.103263}
{'[6, 1, 2, 5, 0, 0, 1, 1, 1, 3, 0, 13, 1, 1, 0, 1, 1, 1]' : 0.103192}
{'[6, 1, 2, 5, 0, 0, 1, 1, 1, 3, 0, 13, 1, 1, 0, 1, 1, 1]' : 0.10042}
{'[6, 1, 2, 5, 0, 0, 1, 1, 1, 3, 0, 13, 1, 1, 0, 1, 1, 1]' : 0.098932}
{'[6, 1, 2, 5, 0, 0, 1, 1, 1, 3, 0, 13, 1, 1, 0, 1, 1, 1]' : 0.100546}
{'[6, 1, 2, 5, 0, 0, 1, 1, 1, 3, 0, 13, 1, 1, 0, 1, 1, 1]' : 0.100655}
{'[6, 1, 2, 5, 0, 0, 1, 1, 1, 3, 0, 13, 1, 1, 0, 1, 1, 1]' : 0.100627}
{'[6, 1, 2, 5, 0, 0, 1, 1, 1, 3, 0, 13, 1, 1, 0, 1, 1, 1]' : 0.100778}
{'[6, 1, 2, 5, 0, 0, 1, 1, 1, 3, 0, 13, 1, 1, 0, 1, 1, 1]' : 0.101019}
{'[6, 1, 2, 5, 0, 0, 1, 1, 1, 3, 0, 13, 1, 1, 0, 1, 1, 1]' : 0.100554}
{'[6, 1, 2, 5, 0, 0, 1, 1, 1, 3, 0, 13, 1, 1, 0, 1, 1, 1]' : 0.100972}
{'[6, 1, 2, 5, 0, 0, 1, 1, 1, 3, 0, 13, 1, 1, 0, 1, 1, 1]' : 0.100534}
{'[6, 1, 2, 5, 0, 0, 1, 1, 1, 3, 0, 13, 1, 1, 0, 1, 1, 1]' : 0.10056}

out:
 ["{'[6, 1, 2, 5, 0, 0, 1, 1, 1, 3, 0, 13, 1, 1, 0, 1, 1, 1]' : 0.100747}", "{'[6, 1, 2, 5, 0, 0, 1, 1, 1, 3, 0, 13, 1, 1, 0, 1, 1, 1]' : 0.103049}", "{'[6, 1, 2, 5, 0, 0, 1, 1, 1, 3, 0, 13, 1, 1, 0, 1, 1, 1]' : 0.103306}", "{'[6, 1, 2, 5, 0, 0, 1, 1, 1, 3, 0, 13, 1, 1, 0, 1, 1, 1]' : 0.103338}", "{'[6, 1, 2, 5, 0, 0, 1, 1, 1, 3, 0, 13, 1, 1, 0, 1, 1, 1]' : 0.101042}", "{'[6, 1, 2, 5, 0, 0, 1, 1, 1, 3, 0, 13, 1, 1, 0, 1, 1, 1]' : 0.100849}", "{'[6, 1, 2, 5, 0, 0, 1, 1, 1, 3, 0, 13, 1, 1, 0, 1, 1, 1]' : 0.103408}", "{'[6, 1, 2, 5, 0, 0, 1, 1, 1, 3, 0, 13, 1, 1, 0, 1, 1, 1]' : 0.103252}", "{'[6, 1, 2, 5, 0, 0, 1, 1, 1, 3, 0, 13, 1, 1, 0, 1, 1, 1]' : 0.104562}", "{'[6, 1, 2, 5, 0, 0, 1, 1, 1, 3, 0, 13, 1, 1, 0, 1, 1, 1]' : 0.104622}", "{'[6, 1, 2, 5, 0, 0, 1, 1, 1, 3, 0, 13, 1, 1, 0, 1, 1, 1]' : 0.104542}", "{'[6, 1, 2, 5, 0, 0, 1, 1, 1, 3, 0, 13, 1, 1, 0, 1, 1, 1]' : 0.100848}", "{'[6, 1, 2, 5, 0, 0, 1, 1, 1, 3, 0, 13, 1, 1, 0, 1, 1, 1]' : 0.100697}", "{'[6, 1, 2, 5, 0, 0, 1, 1, 1, 3, 0, 13, 1, 1, 0, 1, 1, 1]' : 0.100694}", "{'[6, 1, 2, 5, 0, 0, 1, 1, 1, 3, 0, 13, 1, 1, 0, 1, 1, 1]' : 0.100849}", "{'[6, 1, 2, 5, 0, 0, 1, 1, 1, 3, 0, 13, 1, 1, 0, 1, 1, 1]' : 0.10082}", "{'[6, 1, 2, 5, 0, 0, 1, 1, 1, 3, 0, 13, 1, 1, 0, 1, 1, 1]' : 0.102489}", "{'[6, 1, 2, 5, 0, 0, 1, 1, 1, 3, 0, 13, 1, 1, 0, 1, 1, 1]' : 0.103263}", "{'[6, 1, 2, 5, 0, 0, 1, 1, 1, 3, 0, 13, 1, 1, 0, 1, 1, 1]' : 0.103192}", "{'[6, 1, 2, 5, 0, 0, 1, 1, 1, 3, 0, 13, 1, 1, 0, 1, 1, 1]' : 0.10042}", "{'[6, 1, 2, 5, 0, 0, 1, 1, 1, 3, 0, 13, 1, 1, 0, 1, 1, 1]' : 0.098932}", "{'[6, 1, 2, 5, 0, 0, 1, 1, 1, 3, 0, 13, 1, 1, 0, 1, 1, 1]' : 0.100546}", "{'[6, 1, 2, 5, 0, 0, 1, 1, 1, 3, 0, 13, 1, 1, 0, 1, 1, 1]' : 0.100655}", "{'[6, 1, 2, 5, 0, 0, 1, 1, 1, 3, 0, 13, 1, 1, 0, 1, 1, 1]' : 0.100627}", "{'[6, 1, 2, 5, 0, 0, 1, 1, 1, 3, 0, 13, 1, 1, 0, 1, 1, 1]' : 0.100778}", "{'[6, 1, 2, 5, 0, 0, 1, 1, 1, 3, 0, 13, 1, 1, 0, 1, 1, 1]' : 0.101019}", "{'[6, 1, 2, 5, 0, 0, 1, 1, 1, 3, 0, 13, 1, 1, 0, 1, 1, 1]' : 0.100554}", "{'[6, 1, 2, 5, 0, 0, 1, 1, 1, 3, 0, 13, 1, 1, 0, 1, 1, 1]' : 0.100972}", "{'[6, 1, 2, 5, 0, 0, 1, 1, 1, 3, 0, 13, 1, 1, 0, 1, 1, 1]' : 0.100534}", "{'[6, 1, 2, 5, 0, 0, 1, 1, 1, 3, 0, 13, 1, 1, 0, 1, 1, 1]' : 0.10056}"]
returning from 'run': {'[6, 1, 2, 5, 0, 0, 1, 1, 1, 3, 0, 13, 1, 1, 0, 1, 1, 1]': ([0.100747, 0.103049, 0.103306, 0.103338, 0.101042, 0.100849, 0.103408, 0.103252, 0.104562, 0.104622, 0.104542, 0.100848, 0.100697, 0.100694, 0.100849, 0.10082, 0.102489, 0.103263, 0.103192, 0.10042, 0.098932, 0.100546, 0.100655, 0.100627, 0.100778, 0.101019, 0.100554, 0.100972, 0.100534, 0.10056], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 1, 2, 5, 0, 0, 1, 1, 1, 3, 0, 13, 1, 1, 0, 1, 1, 1]': ([0.100747, 0.103049, 0.103306, 0.103338, 0.101042, 0.100849, 0.103408, 0.103252, 0.104562, 0.104622, 0.104542, 0.100848, 0.100697, 0.100694, 0.100849, 0.10082, 0.102489, 0.103263, 0.103192, 0.10042, 0.098932, 0.100546, 0.100655, 0.100627, 0.100778, 0.101019, 0.100554, 0.100972, 0.100534, 0.10056], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	50
        Max loop nest depth: 	4
        Additions: 		1714
        Multiplications: 	384
        Divisions: 		0
        Logical: 		0
        Reads: 			2808
        Writes: 		369
        Comparisons:		50
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest49.exe __orio_perftest49.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest49.exe  
Program Test Output: 
{'[0, 6, 2, 0, 0, 1, 1, 1, 24, 10, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.221968}
{'[0, 6, 2, 0, 0, 1, 1, 1, 24, 10, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.217377}
{'[0, 6, 2, 0, 0, 1, 1, 1, 24, 10, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.228374}
{'[0, 6, 2, 0, 0, 1, 1, 1, 24, 10, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.222514}
{'[0, 6, 2, 0, 0, 1, 1, 1, 24, 10, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.22222}
{'[0, 6, 2, 0, 0, 1, 1, 1, 24, 10, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.222577}
{'[0, 6, 2, 0, 0, 1, 1, 1, 24, 10, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.222233}
{'[0, 6, 2, 0, 0, 1, 1, 1, 24, 10, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.222169}
{'[0, 6, 2, 0, 0, 1, 1, 1, 24, 10, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.221998}
{'[0, 6, 2, 0, 0, 1, 1, 1, 24, 10, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.221965}
{'[0, 6, 2, 0, 0, 1, 1, 1, 24, 10, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.222176}
{'[0, 6, 2, 0, 0, 1, 1, 1, 24, 10, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.222075}
{'[0, 6, 2, 0, 0, 1, 1, 1, 24, 10, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.222202}
{'[0, 6, 2, 0, 0, 1, 1, 1, 24, 10, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.221977}
{'[0, 6, 2, 0, 0, 1, 1, 1, 24, 10, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.222155}
{'[0, 6, 2, 0, 0, 1, 1, 1, 24, 10, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.222051}
{'[0, 6, 2, 0, 0, 1, 1, 1, 24, 10, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.22211}
{'[0, 6, 2, 0, 0, 1, 1, 1, 24, 10, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.222142}
{'[0, 6, 2, 0, 0, 1, 1, 1, 24, 10, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.222066}
{'[0, 6, 2, 0, 0, 1, 1, 1, 24, 10, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.222097}
{'[0, 6, 2, 0, 0, 1, 1, 1, 24, 10, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.22201}
{'[0, 6, 2, 0, 0, 1, 1, 1, 24, 10, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.222112}
{'[0, 6, 2, 0, 0, 1, 1, 1, 24, 10, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.222127}
{'[0, 6, 2, 0, 0, 1, 1, 1, 24, 10, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.222069}
{'[0, 6, 2, 0, 0, 1, 1, 1, 24, 10, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.222151}
{'[0, 6, 2, 0, 0, 1, 1, 1, 24, 10, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.222223}
{'[0, 6, 2, 0, 0, 1, 1, 1, 24, 10, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.222079}
{'[0, 6, 2, 0, 0, 1, 1, 1, 24, 10, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.222024}
{'[0, 6, 2, 0, 0, 1, 1, 1, 24, 10, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.221984}
{'[0, 6, 2, 0, 0, 1, 1, 1, 24, 10, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.221864}

out:
 ["{'[0, 6, 2, 0, 0, 1, 1, 1, 24, 10, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.221968}", "{'[0, 6, 2, 0, 0, 1, 1, 1, 24, 10, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.217377}", "{'[0, 6, 2, 0, 0, 1, 1, 1, 24, 10, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.228374}", "{'[0, 6, 2, 0, 0, 1, 1, 1, 24, 10, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.222514}", "{'[0, 6, 2, 0, 0, 1, 1, 1, 24, 10, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.22222}", "{'[0, 6, 2, 0, 0, 1, 1, 1, 24, 10, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.222577}", "{'[0, 6, 2, 0, 0, 1, 1, 1, 24, 10, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.222233}", "{'[0, 6, 2, 0, 0, 1, 1, 1, 24, 10, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.222169}", "{'[0, 6, 2, 0, 0, 1, 1, 1, 24, 10, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.221998}", "{'[0, 6, 2, 0, 0, 1, 1, 1, 24, 10, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.221965}", "{'[0, 6, 2, 0, 0, 1, 1, 1, 24, 10, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.222176}", "{'[0, 6, 2, 0, 0, 1, 1, 1, 24, 10, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.222075}", "{'[0, 6, 2, 0, 0, 1, 1, 1, 24, 10, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.222202}", "{'[0, 6, 2, 0, 0, 1, 1, 1, 24, 10, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.221977}", "{'[0, 6, 2, 0, 0, 1, 1, 1, 24, 10, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.222155}", "{'[0, 6, 2, 0, 0, 1, 1, 1, 24, 10, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.222051}", "{'[0, 6, 2, 0, 0, 1, 1, 1, 24, 10, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.22211}", "{'[0, 6, 2, 0, 0, 1, 1, 1, 24, 10, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.222142}", "{'[0, 6, 2, 0, 0, 1, 1, 1, 24, 10, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.222066}", "{'[0, 6, 2, 0, 0, 1, 1, 1, 24, 10, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.222097}", "{'[0, 6, 2, 0, 0, 1, 1, 1, 24, 10, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.22201}", "{'[0, 6, 2, 0, 0, 1, 1, 1, 24, 10, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.222112}", "{'[0, 6, 2, 0, 0, 1, 1, 1, 24, 10, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.222127}", "{'[0, 6, 2, 0, 0, 1, 1, 1, 24, 10, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.222069}", "{'[0, 6, 2, 0, 0, 1, 1, 1, 24, 10, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.222151}", "{'[0, 6, 2, 0, 0, 1, 1, 1, 24, 10, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.222223}", "{'[0, 6, 2, 0, 0, 1, 1, 1, 24, 10, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.222079}", "{'[0, 6, 2, 0, 0, 1, 1, 1, 24, 10, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.222024}", "{'[0, 6, 2, 0, 0, 1, 1, 1, 24, 10, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.221984}", "{'[0, 6, 2, 0, 0, 1, 1, 1, 24, 10, 25, 0, 0, 1, 1, 0, 1, 0]' : 0.221864}"]
returning from 'run': {'[0, 6, 2, 0, 0, 1, 1, 1, 24, 10, 25, 0, 0, 1, 1, 0, 1, 0]': ([0.221968, 0.217377, 0.228374, 0.222514, 0.22222, 0.222577, 0.222233, 0.222169, 0.221998, 0.221965, 0.222176, 0.222075, 0.222202, 0.221977, 0.222155, 0.222051, 0.22211, 0.222142, 0.222066, 0.222097, 0.22201, 0.222112, 0.222127, 0.222069, 0.222151, 0.222223, 0.222079, 0.222024, 0.221984, 0.221864], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 2, 0, 0, 1, 1, 1, 24, 10, 25, 0, 0, 1, 1, 0, 1, 0]': ([0.221968, 0.217377, 0.228374, 0.222514, 0.22222, 0.222577, 0.222233, 0.222169, 0.221998, 0.221965, 0.222176, 0.222075, 0.222202, 0.221977, 0.222155, 0.222051, 0.22211, 0.222142, 0.222066, 0.222097, 0.22201, 0.222112, 0.222127, 0.222069, 0.222151, 0.222223, 0.222079, 0.222024, 0.221984, 0.221864], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	118
        Max loop nest depth: 	6
        Additions: 		3088
        Multiplications: 	702
        Divisions: 		0
        Logical: 		0
        Reads: 			5328
        Writes: 		750
        Comparisons:		118
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest50.exe __orio_perftest50.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest50.exe  
Program Test Output: 
{'[4, 5, 6, 4, 5, 4, 1, 1, 27, 29, 29, 0, 1, 1, 0, 0, 0, 1]' : 0.110341}
{'[4, 5, 6, 4, 5, 4, 1, 1, 27, 29, 29, 0, 1, 1, 0, 0, 0, 1]' : 0.110297}
{'[4, 5, 6, 4, 5, 4, 1, 1, 27, 29, 29, 0, 1, 1, 0, 0, 0, 1]' : 0.11065}
{'[4, 5, 6, 4, 5, 4, 1, 1, 27, 29, 29, 0, 1, 1, 0, 0, 0, 1]' : 0.0969522}
{'[4, 5, 6, 4, 5, 4, 1, 1, 27, 29, 29, 0, 1, 1, 0, 0, 0, 1]' : 0.0966461}
{'[4, 5, 6, 4, 5, 4, 1, 1, 27, 29, 29, 0, 1, 1, 0, 0, 0, 1]' : 0.0968232}
{'[4, 5, 6, 4, 5, 4, 1, 1, 27, 29, 29, 0, 1, 1, 0, 0, 0, 1]' : 0.097321}
{'[4, 5, 6, 4, 5, 4, 1, 1, 27, 29, 29, 0, 1, 1, 0, 0, 0, 1]' : 0.0975528}
{'[4, 5, 6, 4, 5, 4, 1, 1, 27, 29, 29, 0, 1, 1, 0, 0, 0, 1]' : 0.0968249}
{'[4, 5, 6, 4, 5, 4, 1, 1, 27, 29, 29, 0, 1, 1, 0, 0, 0, 1]' : 0.096787}
{'[4, 5, 6, 4, 5, 4, 1, 1, 27, 29, 29, 0, 1, 1, 0, 0, 0, 1]' : 0.0965631}
{'[4, 5, 6, 4, 5, 4, 1, 1, 27, 29, 29, 0, 1, 1, 0, 0, 0, 1]' : 0.0968111}
{'[4, 5, 6, 4, 5, 4, 1, 1, 27, 29, 29, 0, 1, 1, 0, 0, 0, 1]' : 0.0970719}
{'[4, 5, 6, 4, 5, 4, 1, 1, 27, 29, 29, 0, 1, 1, 0, 0, 0, 1]' : 0.0969169}
{'[4, 5, 6, 4, 5, 4, 1, 1, 27, 29, 29, 0, 1, 1, 0, 0, 0, 1]' : 0.0966098}
{'[4, 5, 6, 4, 5, 4, 1, 1, 27, 29, 29, 0, 1, 1, 0, 0, 0, 1]' : 0.0971088}
{'[4, 5, 6, 4, 5, 4, 1, 1, 27, 29, 29, 0, 1, 1, 0, 0, 0, 1]' : 0.09709}
{'[4, 5, 6, 4, 5, 4, 1, 1, 27, 29, 29, 0, 1, 1, 0, 0, 0, 1]' : 0.097527}
{'[4, 5, 6, 4, 5, 4, 1, 1, 27, 29, 29, 0, 1, 1, 0, 0, 0, 1]' : 0.096822}
{'[4, 5, 6, 4, 5, 4, 1, 1, 27, 29, 29, 0, 1, 1, 0, 0, 0, 1]' : 0.096827}
{'[4, 5, 6, 4, 5, 4, 1, 1, 27, 29, 29, 0, 1, 1, 0, 0, 0, 1]' : 0.0970109}
{'[4, 5, 6, 4, 5, 4, 1, 1, 27, 29, 29, 0, 1, 1, 0, 0, 0, 1]' : 0.097343}
{'[4, 5, 6, 4, 5, 4, 1, 1, 27, 29, 29, 0, 1, 1, 0, 0, 0, 1]' : 0.0971439}
{'[4, 5, 6, 4, 5, 4, 1, 1, 27, 29, 29, 0, 1, 1, 0, 0, 0, 1]' : 0.0976238}
{'[4, 5, 6, 4, 5, 4, 1, 1, 27, 29, 29, 0, 1, 1, 0, 0, 0, 1]' : 0.0970249}
{'[4, 5, 6, 4, 5, 4, 1, 1, 27, 29, 29, 0, 1, 1, 0, 0, 0, 1]' : 0.096777}
{'[4, 5, 6, 4, 5, 4, 1, 1, 27, 29, 29, 0, 1, 1, 0, 0, 0, 1]' : 0.096684}
{'[4, 5, 6, 4, 5, 4, 1, 1, 27, 29, 29, 0, 1, 1, 0, 0, 0, 1]' : 0.0968091}
{'[4, 5, 6, 4, 5, 4, 1, 1, 27, 29, 29, 0, 1, 1, 0, 0, 0, 1]' : 0.0967591}
{'[4, 5, 6, 4, 5, 4, 1, 1, 27, 29, 29, 0, 1, 1, 0, 0, 0, 1]' : 0.0969279}

out:
 ["{'[4, 5, 6, 4, 5, 4, 1, 1, 27, 29, 29, 0, 1, 1, 0, 0, 0, 1]' : 0.110341}", "{'[4, 5, 6, 4, 5, 4, 1, 1, 27, 29, 29, 0, 1, 1, 0, 0, 0, 1]' : 0.110297}", "{'[4, 5, 6, 4, 5, 4, 1, 1, 27, 29, 29, 0, 1, 1, 0, 0, 0, 1]' : 0.11065}", "{'[4, 5, 6, 4, 5, 4, 1, 1, 27, 29, 29, 0, 1, 1, 0, 0, 0, 1]' : 0.0969522}", "{'[4, 5, 6, 4, 5, 4, 1, 1, 27, 29, 29, 0, 1, 1, 0, 0, 0, 1]' : 0.0966461}", "{'[4, 5, 6, 4, 5, 4, 1, 1, 27, 29, 29, 0, 1, 1, 0, 0, 0, 1]' : 0.0968232}", "{'[4, 5, 6, 4, 5, 4, 1, 1, 27, 29, 29, 0, 1, 1, 0, 0, 0, 1]' : 0.097321}", "{'[4, 5, 6, 4, 5, 4, 1, 1, 27, 29, 29, 0, 1, 1, 0, 0, 0, 1]' : 0.0975528}", "{'[4, 5, 6, 4, 5, 4, 1, 1, 27, 29, 29, 0, 1, 1, 0, 0, 0, 1]' : 0.0968249}", "{'[4, 5, 6, 4, 5, 4, 1, 1, 27, 29, 29, 0, 1, 1, 0, 0, 0, 1]' : 0.096787}", "{'[4, 5, 6, 4, 5, 4, 1, 1, 27, 29, 29, 0, 1, 1, 0, 0, 0, 1]' : 0.0965631}", "{'[4, 5, 6, 4, 5, 4, 1, 1, 27, 29, 29, 0, 1, 1, 0, 0, 0, 1]' : 0.0968111}", "{'[4, 5, 6, 4, 5, 4, 1, 1, 27, 29, 29, 0, 1, 1, 0, 0, 0, 1]' : 0.0970719}", "{'[4, 5, 6, 4, 5, 4, 1, 1, 27, 29, 29, 0, 1, 1, 0, 0, 0, 1]' : 0.0969169}", "{'[4, 5, 6, 4, 5, 4, 1, 1, 27, 29, 29, 0, 1, 1, 0, 0, 0, 1]' : 0.0966098}", "{'[4, 5, 6, 4, 5, 4, 1, 1, 27, 29, 29, 0, 1, 1, 0, 0, 0, 1]' : 0.0971088}", "{'[4, 5, 6, 4, 5, 4, 1, 1, 27, 29, 29, 0, 1, 1, 0, 0, 0, 1]' : 0.09709}", "{'[4, 5, 6, 4, 5, 4, 1, 1, 27, 29, 29, 0, 1, 1, 0, 0, 0, 1]' : 0.097527}", "{'[4, 5, 6, 4, 5, 4, 1, 1, 27, 29, 29, 0, 1, 1, 0, 0, 0, 1]' : 0.096822}", "{'[4, 5, 6, 4, 5, 4, 1, 1, 27, 29, 29, 0, 1, 1, 0, 0, 0, 1]' : 0.096827}", "{'[4, 5, 6, 4, 5, 4, 1, 1, 27, 29, 29, 0, 1, 1, 0, 0, 0, 1]' : 0.0970109}", "{'[4, 5, 6, 4, 5, 4, 1, 1, 27, 29, 29, 0, 1, 1, 0, 0, 0, 1]' : 0.097343}", "{'[4, 5, 6, 4, 5, 4, 1, 1, 27, 29, 29, 0, 1, 1, 0, 0, 0, 1]' : 0.0971439}", "{'[4, 5, 6, 4, 5, 4, 1, 1, 27, 29, 29, 0, 1, 1, 0, 0, 0, 1]' : 0.0976238}", "{'[4, 5, 6, 4, 5, 4, 1, 1, 27, 29, 29, 0, 1, 1, 0, 0, 0, 1]' : 0.0970249}", "{'[4, 5, 6, 4, 5, 4, 1, 1, 27, 29, 29, 0, 1, 1, 0, 0, 0, 1]' : 0.096777}", "{'[4, 5, 6, 4, 5, 4, 1, 1, 27, 29, 29, 0, 1, 1, 0, 0, 0, 1]' : 0.096684}", "{'[4, 5, 6, 4, 5, 4, 1, 1, 27, 29, 29, 0, 1, 1, 0, 0, 0, 1]' : 0.0968091}", "{'[4, 5, 6, 4, 5, 4, 1, 1, 27, 29, 29, 0, 1, 1, 0, 0, 0, 1]' : 0.0967591}", "{'[4, 5, 6, 4, 5, 4, 1, 1, 27, 29, 29, 0, 1, 1, 0, 0, 0, 1]' : 0.0969279}"]
returning from 'run': {'[4, 5, 6, 4, 5, 4, 1, 1, 27, 29, 29, 0, 1, 1, 0, 0, 0, 1]': ([0.110341, 0.110297, 0.11065, 0.0969522, 0.0966461, 0.0968232, 0.097321, 0.0975528, 0.0968249, 0.096787, 0.0965631, 0.0968111, 0.0970719, 0.0969169, 0.0966098, 0.0971088, 0.09709, 0.097527, 0.096822, 0.096827, 0.0970109, 0.097343, 0.0971439, 0.0976238, 0.0970249, 0.096777, 0.096684, 0.0968091, 0.0967591, 0.0969279], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 5, 6, 4, 5, 4, 1, 1, 27, 29, 29, 0, 1, 1, 0, 0, 0, 1]': ([0.110341, 0.110297, 0.11065, 0.0969522, 0.0966461, 0.0968232, 0.097321, 0.0975528, 0.0968249, 0.096787, 0.0965631, 0.0968111, 0.0970719, 0.0969169, 0.0966098, 0.0971088, 0.09709, 0.097527, 0.096822, 0.096827, 0.0970109, 0.097343, 0.0971439, 0.0976238, 0.0970249, 0.096777, 0.096684, 0.0968091, 0.0967591, 0.0969279], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	32
        Max loop nest depth: 	6
        Additions: 		1916
        Multiplications: 	546
        Divisions: 		0
        Logical: 		0
        Reads: 			3210
        Writes: 		388
        Comparisons:		32
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest51.exe __orio_perftest51.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest51.exe  
Program Test Output: 
{'[1, 3, 3, 5, 1, 6, 0, 1, 17, 5, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.18202}
{'[1, 3, 3, 5, 1, 6, 0, 1, 17, 5, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.180603}
{'[1, 3, 3, 5, 1, 6, 0, 1, 17, 5, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.180476}
{'[1, 3, 3, 5, 1, 6, 0, 1, 17, 5, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.18072}
{'[1, 3, 3, 5, 1, 6, 0, 1, 17, 5, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.188171}
{'[1, 3, 3, 5, 1, 6, 0, 1, 17, 5, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.191539}
{'[1, 3, 3, 5, 1, 6, 0, 1, 17, 5, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.191507}
{'[1, 3, 3, 5, 1, 6, 0, 1, 17, 5, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.191279}
{'[1, 3, 3, 5, 1, 6, 0, 1, 17, 5, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.191296}
{'[1, 3, 3, 5, 1, 6, 0, 1, 17, 5, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.191425}
{'[1, 3, 3, 5, 1, 6, 0, 1, 17, 5, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.19156}
{'[1, 3, 3, 5, 1, 6, 0, 1, 17, 5, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.191618}
{'[1, 3, 3, 5, 1, 6, 0, 1, 17, 5, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.190909}
{'[1, 3, 3, 5, 1, 6, 0, 1, 17, 5, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.185929}
{'[1, 3, 3, 5, 1, 6, 0, 1, 17, 5, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.186841}
{'[1, 3, 3, 5, 1, 6, 0, 1, 17, 5, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.186064}
{'[1, 3, 3, 5, 1, 6, 0, 1, 17, 5, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.185733}
{'[1, 3, 3, 5, 1, 6, 0, 1, 17, 5, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.186128}
{'[1, 3, 3, 5, 1, 6, 0, 1, 17, 5, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.186057}
{'[1, 3, 3, 5, 1, 6, 0, 1, 17, 5, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.186335}
{'[1, 3, 3, 5, 1, 6, 0, 1, 17, 5, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.186172}
{'[1, 3, 3, 5, 1, 6, 0, 1, 17, 5, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.184664}
{'[1, 3, 3, 5, 1, 6, 0, 1, 17, 5, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.182944}
{'[1, 3, 3, 5, 1, 6, 0, 1, 17, 5, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.185881}
{'[1, 3, 3, 5, 1, 6, 0, 1, 17, 5, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.185743}
{'[1, 3, 3, 5, 1, 6, 0, 1, 17, 5, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.186291}
{'[1, 3, 3, 5, 1, 6, 0, 1, 17, 5, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.186306}
{'[1, 3, 3, 5, 1, 6, 0, 1, 17, 5, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.186224}
{'[1, 3, 3, 5, 1, 6, 0, 1, 17, 5, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.185896}
{'[1, 3, 3, 5, 1, 6, 0, 1, 17, 5, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.185962}

out:
 ["{'[1, 3, 3, 5, 1, 6, 0, 1, 17, 5, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.18202}", "{'[1, 3, 3, 5, 1, 6, 0, 1, 17, 5, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.180603}", "{'[1, 3, 3, 5, 1, 6, 0, 1, 17, 5, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.180476}", "{'[1, 3, 3, 5, 1, 6, 0, 1, 17, 5, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.18072}", "{'[1, 3, 3, 5, 1, 6, 0, 1, 17, 5, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.188171}", "{'[1, 3, 3, 5, 1, 6, 0, 1, 17, 5, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.191539}", "{'[1, 3, 3, 5, 1, 6, 0, 1, 17, 5, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.191507}", "{'[1, 3, 3, 5, 1, 6, 0, 1, 17, 5, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.191279}", "{'[1, 3, 3, 5, 1, 6, 0, 1, 17, 5, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.191296}", "{'[1, 3, 3, 5, 1, 6, 0, 1, 17, 5, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.191425}", "{'[1, 3, 3, 5, 1, 6, 0, 1, 17, 5, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.19156}", "{'[1, 3, 3, 5, 1, 6, 0, 1, 17, 5, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.191618}", "{'[1, 3, 3, 5, 1, 6, 0, 1, 17, 5, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.190909}", "{'[1, 3, 3, 5, 1, 6, 0, 1, 17, 5, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.185929}", "{'[1, 3, 3, 5, 1, 6, 0, 1, 17, 5, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.186841}", "{'[1, 3, 3, 5, 1, 6, 0, 1, 17, 5, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.186064}", "{'[1, 3, 3, 5, 1, 6, 0, 1, 17, 5, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.185733}", "{'[1, 3, 3, 5, 1, 6, 0, 1, 17, 5, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.186128}", "{'[1, 3, 3, 5, 1, 6, 0, 1, 17, 5, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.186057}", "{'[1, 3, 3, 5, 1, 6, 0, 1, 17, 5, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.186335}", "{'[1, 3, 3, 5, 1, 6, 0, 1, 17, 5, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.186172}", "{'[1, 3, 3, 5, 1, 6, 0, 1, 17, 5, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.184664}", "{'[1, 3, 3, 5, 1, 6, 0, 1, 17, 5, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.182944}", "{'[1, 3, 3, 5, 1, 6, 0, 1, 17, 5, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.185881}", "{'[1, 3, 3, 5, 1, 6, 0, 1, 17, 5, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.185743}", "{'[1, 3, 3, 5, 1, 6, 0, 1, 17, 5, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.186291}", "{'[1, 3, 3, 5, 1, 6, 0, 1, 17, 5, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.186306}", "{'[1, 3, 3, 5, 1, 6, 0, 1, 17, 5, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.186224}", "{'[1, 3, 3, 5, 1, 6, 0, 1, 17, 5, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.185896}", "{'[1, 3, 3, 5, 1, 6, 0, 1, 17, 5, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.185962}"]
returning from 'run': {'[1, 3, 3, 5, 1, 6, 0, 1, 17, 5, 29, 0, 0, 0, 1, 0, 1, 1]': ([0.18202, 0.180603, 0.180476, 0.18072, 0.188171, 0.191539, 0.191507, 0.191279, 0.191296, 0.191425, 0.19156, 0.191618, 0.190909, 0.185929, 0.186841, 0.186064, 0.185733, 0.186128, 0.186057, 0.186335, 0.186172, 0.184664, 0.182944, 0.185881, 0.185743, 0.186291, 0.186306, 0.186224, 0.185896, 0.185962], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 3, 3, 5, 1, 6, 0, 1, 17, 5, 29, 0, 0, 0, 1, 0, 1, 1]': ([0.18202, 0.180603, 0.180476, 0.18072, 0.188171, 0.191539, 0.191507, 0.191279, 0.191296, 0.191425, 0.19156, 0.191618, 0.190909, 0.185929, 0.186841, 0.186064, 0.185733, 0.186128, 0.186057, 0.186335, 0.186172, 0.184664, 0.182944, 0.185881, 0.185743, 0.186291, 0.186306, 0.186224, 0.185896, 0.185962], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		320
        Multiplications: 	126
        Divisions: 		0
        Logical: 		0
        Reads: 			783
        Writes: 		118
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest52.exe __orio_perftest52.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest52.exe  
Program Test Output: 
{'[6, 6, 1, 0, 6, 0, 0, 1, 24, 0, 28, 0, 0, 2, 0, 0, 0, 0]' : 0.260478}
{'[6, 6, 1, 0, 6, 0, 0, 1, 24, 0, 28, 0, 0, 2, 0, 0, 0, 0]' : 0.260557}
{'[6, 6, 1, 0, 6, 0, 0, 1, 24, 0, 28, 0, 0, 2, 0, 0, 0, 0]' : 0.260103}
{'[6, 6, 1, 0, 6, 0, 0, 1, 24, 0, 28, 0, 0, 2, 0, 0, 0, 0]' : 0.260086}
{'[6, 6, 1, 0, 6, 0, 0, 1, 24, 0, 28, 0, 0, 2, 0, 0, 0, 0]' : 0.254908}
{'[6, 6, 1, 0, 6, 0, 0, 1, 24, 0, 28, 0, 0, 2, 0, 0, 0, 0]' : 0.260437}
{'[6, 6, 1, 0, 6, 0, 0, 1, 24, 0, 28, 0, 0, 2, 0, 0, 0, 0]' : 0.260556}
{'[6, 6, 1, 0, 6, 0, 0, 1, 24, 0, 28, 0, 0, 2, 0, 0, 0, 0]' : 0.26024}
{'[6, 6, 1, 0, 6, 0, 0, 1, 24, 0, 28, 0, 0, 2, 0, 0, 0, 0]' : 0.260173}
{'[6, 6, 1, 0, 6, 0, 0, 1, 24, 0, 28, 0, 0, 2, 0, 0, 0, 0]' : 0.260356}
{'[6, 6, 1, 0, 6, 0, 0, 1, 24, 0, 28, 0, 0, 2, 0, 0, 0, 0]' : 0.260311}
{'[6, 6, 1, 0, 6, 0, 0, 1, 24, 0, 28, 0, 0, 2, 0, 0, 0, 0]' : 0.260025}
{'[6, 6, 1, 0, 6, 0, 0, 1, 24, 0, 28, 0, 0, 2, 0, 0, 0, 0]' : 0.260125}
{'[6, 6, 1, 0, 6, 0, 0, 1, 24, 0, 28, 0, 0, 2, 0, 0, 0, 0]' : 0.260336}
{'[6, 6, 1, 0, 6, 0, 0, 1, 24, 0, 28, 0, 0, 2, 0, 0, 0, 0]' : 0.260416}
{'[6, 6, 1, 0, 6, 0, 0, 1, 24, 0, 28, 0, 0, 2, 0, 0, 0, 0]' : 0.260566}
{'[6, 6, 1, 0, 6, 0, 0, 1, 24, 0, 28, 0, 0, 2, 0, 0, 0, 0]' : 0.260059}
{'[6, 6, 1, 0, 6, 0, 0, 1, 24, 0, 28, 0, 0, 2, 0, 0, 0, 0]' : 0.260299}
{'[6, 6, 1, 0, 6, 0, 0, 1, 24, 0, 28, 0, 0, 2, 0, 0, 0, 0]' : 0.260465}
{'[6, 6, 1, 0, 6, 0, 0, 1, 24, 0, 28, 0, 0, 2, 0, 0, 0, 0]' : 0.257873}
{'[6, 6, 1, 0, 6, 0, 0, 1, 24, 0, 28, 0, 0, 2, 0, 0, 0, 0]' : 0.256896}
{'[6, 6, 1, 0, 6, 0, 0, 1, 24, 0, 28, 0, 0, 2, 0, 0, 0, 0]' : 0.260155}
{'[6, 6, 1, 0, 6, 0, 0, 1, 24, 0, 28, 0, 0, 2, 0, 0, 0, 0]' : 0.260667}
{'[6, 6, 1, 0, 6, 0, 0, 1, 24, 0, 28, 0, 0, 2, 0, 0, 0, 0]' : 0.259966}
{'[6, 6, 1, 0, 6, 0, 0, 1, 24, 0, 28, 0, 0, 2, 0, 0, 0, 0]' : 0.260381}
{'[6, 6, 1, 0, 6, 0, 0, 1, 24, 0, 28, 0, 0, 2, 0, 0, 0, 0]' : 0.260257}
{'[6, 6, 1, 0, 6, 0, 0, 1, 24, 0, 28, 0, 0, 2, 0, 0, 0, 0]' : 0.264705}
{'[6, 6, 1, 0, 6, 0, 0, 1, 24, 0, 28, 0, 0, 2, 0, 0, 0, 0]' : 0.260094}
{'[6, 6, 1, 0, 6, 0, 0, 1, 24, 0, 28, 0, 0, 2, 0, 0, 0, 0]' : 0.267175}
{'[6, 6, 1, 0, 6, 0, 0, 1, 24, 0, 28, 0, 0, 2, 0, 0, 0, 0]' : 0.26765}

out:
 ["{'[6, 6, 1, 0, 6, 0, 0, 1, 24, 0, 28, 0, 0, 2, 0, 0, 0, 0]' : 0.260478}", "{'[6, 6, 1, 0, 6, 0, 0, 1, 24, 0, 28, 0, 0, 2, 0, 0, 0, 0]' : 0.260557}", "{'[6, 6, 1, 0, 6, 0, 0, 1, 24, 0, 28, 0, 0, 2, 0, 0, 0, 0]' : 0.260103}", "{'[6, 6, 1, 0, 6, 0, 0, 1, 24, 0, 28, 0, 0, 2, 0, 0, 0, 0]' : 0.260086}", "{'[6, 6, 1, 0, 6, 0, 0, 1, 24, 0, 28, 0, 0, 2, 0, 0, 0, 0]' : 0.254908}", "{'[6, 6, 1, 0, 6, 0, 0, 1, 24, 0, 28, 0, 0, 2, 0, 0, 0, 0]' : 0.260437}", "{'[6, 6, 1, 0, 6, 0, 0, 1, 24, 0, 28, 0, 0, 2, 0, 0, 0, 0]' : 0.260556}", "{'[6, 6, 1, 0, 6, 0, 0, 1, 24, 0, 28, 0, 0, 2, 0, 0, 0, 0]' : 0.26024}", "{'[6, 6, 1, 0, 6, 0, 0, 1, 24, 0, 28, 0, 0, 2, 0, 0, 0, 0]' : 0.260173}", "{'[6, 6, 1, 0, 6, 0, 0, 1, 24, 0, 28, 0, 0, 2, 0, 0, 0, 0]' : 0.260356}", "{'[6, 6, 1, 0, 6, 0, 0, 1, 24, 0, 28, 0, 0, 2, 0, 0, 0, 0]' : 0.260311}", "{'[6, 6, 1, 0, 6, 0, 0, 1, 24, 0, 28, 0, 0, 2, 0, 0, 0, 0]' : 0.260025}", "{'[6, 6, 1, 0, 6, 0, 0, 1, 24, 0, 28, 0, 0, 2, 0, 0, 0, 0]' : 0.260125}", "{'[6, 6, 1, 0, 6, 0, 0, 1, 24, 0, 28, 0, 0, 2, 0, 0, 0, 0]' : 0.260336}", "{'[6, 6, 1, 0, 6, 0, 0, 1, 24, 0, 28, 0, 0, 2, 0, 0, 0, 0]' : 0.260416}", "{'[6, 6, 1, 0, 6, 0, 0, 1, 24, 0, 28, 0, 0, 2, 0, 0, 0, 0]' : 0.260566}", "{'[6, 6, 1, 0, 6, 0, 0, 1, 24, 0, 28, 0, 0, 2, 0, 0, 0, 0]' : 0.260059}", "{'[6, 6, 1, 0, 6, 0, 0, 1, 24, 0, 28, 0, 0, 2, 0, 0, 0, 0]' : 0.260299}", "{'[6, 6, 1, 0, 6, 0, 0, 1, 24, 0, 28, 0, 0, 2, 0, 0, 0, 0]' : 0.260465}", "{'[6, 6, 1, 0, 6, 0, 0, 1, 24, 0, 28, 0, 0, 2, 0, 0, 0, 0]' : 0.257873}", "{'[6, 6, 1, 0, 6, 0, 0, 1, 24, 0, 28, 0, 0, 2, 0, 0, 0, 0]' : 0.256896}", "{'[6, 6, 1, 0, 6, 0, 0, 1, 24, 0, 28, 0, 0, 2, 0, 0, 0, 0]' : 0.260155}", "{'[6, 6, 1, 0, 6, 0, 0, 1, 24, 0, 28, 0, 0, 2, 0, 0, 0, 0]' : 0.260667}", "{'[6, 6, 1, 0, 6, 0, 0, 1, 24, 0, 28, 0, 0, 2, 0, 0, 0, 0]' : 0.259966}", "{'[6, 6, 1, 0, 6, 0, 0, 1, 24, 0, 28, 0, 0, 2, 0, 0, 0, 0]' : 0.260381}", "{'[6, 6, 1, 0, 6, 0, 0, 1, 24, 0, 28, 0, 0, 2, 0, 0, 0, 0]' : 0.260257}", "{'[6, 6, 1, 0, 6, 0, 0, 1, 24, 0, 28, 0, 0, 2, 0, 0, 0, 0]' : 0.264705}", "{'[6, 6, 1, 0, 6, 0, 0, 1, 24, 0, 28, 0, 0, 2, 0, 0, 0, 0]' : 0.260094}", "{'[6, 6, 1, 0, 6, 0, 0, 1, 24, 0, 28, 0, 0, 2, 0, 0, 0, 0]' : 0.267175}", "{'[6, 6, 1, 0, 6, 0, 0, 1, 24, 0, 28, 0, 0, 2, 0, 0, 0, 0]' : 0.26765}"]
returning from 'run': {'[6, 6, 1, 0, 6, 0, 0, 1, 24, 0, 28, 0, 0, 2, 0, 0, 0, 0]': ([0.260478, 0.260557, 0.260103, 0.260086, 0.254908, 0.260437, 0.260556, 0.26024, 0.260173, 0.260356, 0.260311, 0.260025, 0.260125, 0.260336, 0.260416, 0.260566, 0.260059, 0.260299, 0.260465, 0.257873, 0.256896, 0.260155, 0.260667, 0.259966, 0.260381, 0.260257, 0.264705, 0.260094, 0.267175, 0.26765], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 1, 0, 6, 0, 0, 1, 24, 0, 28, 0, 0, 2, 0, 0, 0, 0]': ([0.260478, 0.260557, 0.260103, 0.260086, 0.254908, 0.260437, 0.260556, 0.26024, 0.260173, 0.260356, 0.260311, 0.260025, 0.260125, 0.260336, 0.260416, 0.260566, 0.260059, 0.260299, 0.260465, 0.257873, 0.256896, 0.260155, 0.260667, 0.259966, 0.260381, 0.260257, 0.264705, 0.260094, 0.267175, 0.26765], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	146
        Max loop nest depth: 	5
        Additions: 		2392
        Multiplications: 	630
        Divisions: 		0
        Logical: 		0
        Reads: 			5118
        Writes: 		1094
        Comparisons:		146
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest53.exe __orio_perftest53.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest53.exe  
Program Test Output: 
{'[6, 6, 6, 0, 0, 5, 0, 1, 5, 29, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.194317}
{'[6, 6, 6, 0, 0, 5, 0, 1, 5, 29, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.196124}
{'[6, 6, 6, 0, 0, 5, 0, 1, 5, 29, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.177546}
{'[6, 6, 6, 0, 0, 5, 0, 1, 5, 29, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.171635}
{'[6, 6, 6, 0, 0, 5, 0, 1, 5, 29, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.17317}
{'[6, 6, 6, 0, 0, 5, 0, 1, 5, 29, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.171849}
{'[6, 6, 6, 0, 0, 5, 0, 1, 5, 29, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.171484}
{'[6, 6, 6, 0, 0, 5, 0, 1, 5, 29, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.171383}
{'[6, 6, 6, 0, 0, 5, 0, 1, 5, 29, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.171872}
{'[6, 6, 6, 0, 0, 5, 0, 1, 5, 29, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.171569}
{'[6, 6, 6, 0, 0, 5, 0, 1, 5, 29, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.171449}
{'[6, 6, 6, 0, 0, 5, 0, 1, 5, 29, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.171126}
{'[6, 6, 6, 0, 0, 5, 0, 1, 5, 29, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.171986}
{'[6, 6, 6, 0, 0, 5, 0, 1, 5, 29, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.172165}
{'[6, 6, 6, 0, 0, 5, 0, 1, 5, 29, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.172386}
{'[6, 6, 6, 0, 0, 5, 0, 1, 5, 29, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.172022}
{'[6, 6, 6, 0, 0, 5, 0, 1, 5, 29, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.171558}
{'[6, 6, 6, 0, 0, 5, 0, 1, 5, 29, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.171403}
{'[6, 6, 6, 0, 0, 5, 0, 1, 5, 29, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.171209}
{'[6, 6, 6, 0, 0, 5, 0, 1, 5, 29, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.171356}
{'[6, 6, 6, 0, 0, 5, 0, 1, 5, 29, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.171921}
{'[6, 6, 6, 0, 0, 5, 0, 1, 5, 29, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.17201}
{'[6, 6, 6, 0, 0, 5, 0, 1, 5, 29, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.17163}
{'[6, 6, 6, 0, 0, 5, 0, 1, 5, 29, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.171534}
{'[6, 6, 6, 0, 0, 5, 0, 1, 5, 29, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.171236}
{'[6, 6, 6, 0, 0, 5, 0, 1, 5, 29, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.171419}
{'[6, 6, 6, 0, 0, 5, 0, 1, 5, 29, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.171533}
{'[6, 6, 6, 0, 0, 5, 0, 1, 5, 29, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.171683}
{'[6, 6, 6, 0, 0, 5, 0, 1, 5, 29, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.171884}
{'[6, 6, 6, 0, 0, 5, 0, 1, 5, 29, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.171162}

out:
 ["{'[6, 6, 6, 0, 0, 5, 0, 1, 5, 29, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.194317}", "{'[6, 6, 6, 0, 0, 5, 0, 1, 5, 29, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.196124}", "{'[6, 6, 6, 0, 0, 5, 0, 1, 5, 29, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.177546}", "{'[6, 6, 6, 0, 0, 5, 0, 1, 5, 29, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.171635}", "{'[6, 6, 6, 0, 0, 5, 0, 1, 5, 29, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.17317}", "{'[6, 6, 6, 0, 0, 5, 0, 1, 5, 29, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.171849}", "{'[6, 6, 6, 0, 0, 5, 0, 1, 5, 29, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.171484}", "{'[6, 6, 6, 0, 0, 5, 0, 1, 5, 29, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.171383}", "{'[6, 6, 6, 0, 0, 5, 0, 1, 5, 29, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.171872}", "{'[6, 6, 6, 0, 0, 5, 0, 1, 5, 29, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.171569}", "{'[6, 6, 6, 0, 0, 5, 0, 1, 5, 29, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.171449}", "{'[6, 6, 6, 0, 0, 5, 0, 1, 5, 29, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.171126}", "{'[6, 6, 6, 0, 0, 5, 0, 1, 5, 29, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.171986}", "{'[6, 6, 6, 0, 0, 5, 0, 1, 5, 29, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.172165}", "{'[6, 6, 6, 0, 0, 5, 0, 1, 5, 29, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.172386}", "{'[6, 6, 6, 0, 0, 5, 0, 1, 5, 29, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.172022}", "{'[6, 6, 6, 0, 0, 5, 0, 1, 5, 29, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.171558}", "{'[6, 6, 6, 0, 0, 5, 0, 1, 5, 29, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.171403}", "{'[6, 6, 6, 0, 0, 5, 0, 1, 5, 29, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.171209}", "{'[6, 6, 6, 0, 0, 5, 0, 1, 5, 29, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.171356}", "{'[6, 6, 6, 0, 0, 5, 0, 1, 5, 29, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.171921}", "{'[6, 6, 6, 0, 0, 5, 0, 1, 5, 29, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.17201}", "{'[6, 6, 6, 0, 0, 5, 0, 1, 5, 29, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.17163}", "{'[6, 6, 6, 0, 0, 5, 0, 1, 5, 29, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.171534}", "{'[6, 6, 6, 0, 0, 5, 0, 1, 5, 29, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.171236}", "{'[6, 6, 6, 0, 0, 5, 0, 1, 5, 29, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.171419}", "{'[6, 6, 6, 0, 0, 5, 0, 1, 5, 29, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.171533}", "{'[6, 6, 6, 0, 0, 5, 0, 1, 5, 29, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.171683}", "{'[6, 6, 6, 0, 0, 5, 0, 1, 5, 29, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.171884}", "{'[6, 6, 6, 0, 0, 5, 0, 1, 5, 29, 0, 2, 2, 0, 0, 1, 0, 0]' : 0.171162}"]
returning from 'run': {'[6, 6, 6, 0, 0, 5, 0, 1, 5, 29, 0, 2, 2, 0, 0, 1, 0, 0]': ([0.194317, 0.196124, 0.177546, 0.171635, 0.17317, 0.171849, 0.171484, 0.171383, 0.171872, 0.171569, 0.171449, 0.171126, 0.171986, 0.172165, 0.172386, 0.172022, 0.171558, 0.171403, 0.171209, 0.171356, 0.171921, 0.17201, 0.17163, 0.171534, 0.171236, 0.171419, 0.171533, 0.171683, 0.171884, 0.171162], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 6, 0, 0, 5, 0, 1, 5, 29, 0, 2, 2, 0, 0, 1, 0, 0]': ([0.194317, 0.196124, 0.177546, 0.171635, 0.17317, 0.171849, 0.171484, 0.171383, 0.171872, 0.171569, 0.171449, 0.171126, 0.171986, 0.172165, 0.172386, 0.172022, 0.171558, 0.171403, 0.171209, 0.171356, 0.171921, 0.17201, 0.17163, 0.171534, 0.171236, 0.171419, 0.171533, 0.171683, 0.171884, 0.171162], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	65
        Max loop nest depth: 	5
        Additions: 		2084
        Multiplications: 	912
        Divisions: 		0
        Logical: 		0
        Reads: 			4211
        Writes: 		762
        Comparisons:		65
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest54.exe __orio_perftest54.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest54.exe  
Program Test Output: 
{'[6, 2, 0, 0, 1, 2, 0, 1, 21, 22, 16, 0, 0, 0, 0, 1, 1, 1]' : 0.186909}
{'[6, 2, 0, 0, 1, 2, 0, 1, 21, 22, 16, 0, 0, 0, 0, 1, 1, 1]' : 0.187081}
{'[6, 2, 0, 0, 1, 2, 0, 1, 21, 22, 16, 0, 0, 0, 0, 1, 1, 1]' : 0.16359}
{'[6, 2, 0, 0, 1, 2, 0, 1, 21, 22, 16, 0, 0, 0, 0, 1, 1, 1]' : 0.159953}
{'[6, 2, 0, 0, 1, 2, 0, 1, 21, 22, 16, 0, 0, 0, 0, 1, 1, 1]' : 0.160083}
{'[6, 2, 0, 0, 1, 2, 0, 1, 21, 22, 16, 0, 0, 0, 0, 1, 1, 1]' : 0.160074}
{'[6, 2, 0, 0, 1, 2, 0, 1, 21, 22, 16, 0, 0, 0, 0, 1, 1, 1]' : 0.15999}
{'[6, 2, 0, 0, 1, 2, 0, 1, 21, 22, 16, 0, 0, 0, 0, 1, 1, 1]' : 0.159993}
{'[6, 2, 0, 0, 1, 2, 0, 1, 21, 22, 16, 0, 0, 0, 0, 1, 1, 1]' : 0.159989}
{'[6, 2, 0, 0, 1, 2, 0, 1, 21, 22, 16, 0, 0, 0, 0, 1, 1, 1]' : 0.159909}
{'[6, 2, 0, 0, 1, 2, 0, 1, 21, 22, 16, 0, 0, 0, 0, 1, 1, 1]' : 0.160902}
{'[6, 2, 0, 0, 1, 2, 0, 1, 21, 22, 16, 0, 0, 0, 0, 1, 1, 1]' : 0.160304}
{'[6, 2, 0, 0, 1, 2, 0, 1, 21, 22, 16, 0, 0, 0, 0, 1, 1, 1]' : 0.159965}
{'[6, 2, 0, 0, 1, 2, 0, 1, 21, 22, 16, 0, 0, 0, 0, 1, 1, 1]' : 0.160065}
{'[6, 2, 0, 0, 1, 2, 0, 1, 21, 22, 16, 0, 0, 0, 0, 1, 1, 1]' : 0.160331}
{'[6, 2, 0, 0, 1, 2, 0, 1, 21, 22, 16, 0, 0, 0, 0, 1, 1, 1]' : 0.163052}
{'[6, 2, 0, 0, 1, 2, 0, 1, 21, 22, 16, 0, 0, 0, 0, 1, 1, 1]' : 0.162957}
{'[6, 2, 0, 0, 1, 2, 0, 1, 21, 22, 16, 0, 0, 0, 0, 1, 1, 1]' : 0.163009}
{'[6, 2, 0, 0, 1, 2, 0, 1, 21, 22, 16, 0, 0, 0, 0, 1, 1, 1]' : 0.163058}
{'[6, 2, 0, 0, 1, 2, 0, 1, 21, 22, 16, 0, 0, 0, 0, 1, 1, 1]' : 0.163814}
{'[6, 2, 0, 0, 1, 2, 0, 1, 21, 22, 16, 0, 0, 0, 0, 1, 1, 1]' : 0.163307}
{'[6, 2, 0, 0, 1, 2, 0, 1, 21, 22, 16, 0, 0, 0, 0, 1, 1, 1]' : 0.162958}
{'[6, 2, 0, 0, 1, 2, 0, 1, 21, 22, 16, 0, 0, 0, 0, 1, 1, 1]' : 0.162999}
{'[6, 2, 0, 0, 1, 2, 0, 1, 21, 22, 16, 0, 0, 0, 0, 1, 1, 1]' : 0.16323}
{'[6, 2, 0, 0, 1, 2, 0, 1, 21, 22, 16, 0, 0, 0, 0, 1, 1, 1]' : 0.163038}
{'[6, 2, 0, 0, 1, 2, 0, 1, 21, 22, 16, 0, 0, 0, 0, 1, 1, 1]' : 0.163072}
{'[6, 2, 0, 0, 1, 2, 0, 1, 21, 22, 16, 0, 0, 0, 0, 1, 1, 1]' : 0.163274}
{'[6, 2, 0, 0, 1, 2, 0, 1, 21, 22, 16, 0, 0, 0, 0, 1, 1, 1]' : 0.163276}
{'[6, 2, 0, 0, 1, 2, 0, 1, 21, 22, 16, 0, 0, 0, 0, 1, 1, 1]' : 0.162879}
{'[6, 2, 0, 0, 1, 2, 0, 1, 21, 22, 16, 0, 0, 0, 0, 1, 1, 1]' : 0.163576}

out:
 ["{'[6, 2, 0, 0, 1, 2, 0, 1, 21, 22, 16, 0, 0, 0, 0, 1, 1, 1]' : 0.186909}", "{'[6, 2, 0, 0, 1, 2, 0, 1, 21, 22, 16, 0, 0, 0, 0, 1, 1, 1]' : 0.187081}", "{'[6, 2, 0, 0, 1, 2, 0, 1, 21, 22, 16, 0, 0, 0, 0, 1, 1, 1]' : 0.16359}", "{'[6, 2, 0, 0, 1, 2, 0, 1, 21, 22, 16, 0, 0, 0, 0, 1, 1, 1]' : 0.159953}", "{'[6, 2, 0, 0, 1, 2, 0, 1, 21, 22, 16, 0, 0, 0, 0, 1, 1, 1]' : 0.160083}", "{'[6, 2, 0, 0, 1, 2, 0, 1, 21, 22, 16, 0, 0, 0, 0, 1, 1, 1]' : 0.160074}", "{'[6, 2, 0, 0, 1, 2, 0, 1, 21, 22, 16, 0, 0, 0, 0, 1, 1, 1]' : 0.15999}", "{'[6, 2, 0, 0, 1, 2, 0, 1, 21, 22, 16, 0, 0, 0, 0, 1, 1, 1]' : 0.159993}", "{'[6, 2, 0, 0, 1, 2, 0, 1, 21, 22, 16, 0, 0, 0, 0, 1, 1, 1]' : 0.159989}", "{'[6, 2, 0, 0, 1, 2, 0, 1, 21, 22, 16, 0, 0, 0, 0, 1, 1, 1]' : 0.159909}", "{'[6, 2, 0, 0, 1, 2, 0, 1, 21, 22, 16, 0, 0, 0, 0, 1, 1, 1]' : 0.160902}", "{'[6, 2, 0, 0, 1, 2, 0, 1, 21, 22, 16, 0, 0, 0, 0, 1, 1, 1]' : 0.160304}", "{'[6, 2, 0, 0, 1, 2, 0, 1, 21, 22, 16, 0, 0, 0, 0, 1, 1, 1]' : 0.159965}", "{'[6, 2, 0, 0, 1, 2, 0, 1, 21, 22, 16, 0, 0, 0, 0, 1, 1, 1]' : 0.160065}", "{'[6, 2, 0, 0, 1, 2, 0, 1, 21, 22, 16, 0, 0, 0, 0, 1, 1, 1]' : 0.160331}", "{'[6, 2, 0, 0, 1, 2, 0, 1, 21, 22, 16, 0, 0, 0, 0, 1, 1, 1]' : 0.163052}", "{'[6, 2, 0, 0, 1, 2, 0, 1, 21, 22, 16, 0, 0, 0, 0, 1, 1, 1]' : 0.162957}", "{'[6, 2, 0, 0, 1, 2, 0, 1, 21, 22, 16, 0, 0, 0, 0, 1, 1, 1]' : 0.163009}", "{'[6, 2, 0, 0, 1, 2, 0, 1, 21, 22, 16, 0, 0, 0, 0, 1, 1, 1]' : 0.163058}", "{'[6, 2, 0, 0, 1, 2, 0, 1, 21, 22, 16, 0, 0, 0, 0, 1, 1, 1]' : 0.163814}", "{'[6, 2, 0, 0, 1, 2, 0, 1, 21, 22, 16, 0, 0, 0, 0, 1, 1, 1]' : 0.163307}", "{'[6, 2, 0, 0, 1, 2, 0, 1, 21, 22, 16, 0, 0, 0, 0, 1, 1, 1]' : 0.162958}", "{'[6, 2, 0, 0, 1, 2, 0, 1, 21, 22, 16, 0, 0, 0, 0, 1, 1, 1]' : 0.162999}", "{'[6, 2, 0, 0, 1, 2, 0, 1, 21, 22, 16, 0, 0, 0, 0, 1, 1, 1]' : 0.16323}", "{'[6, 2, 0, 0, 1, 2, 0, 1, 21, 22, 16, 0, 0, 0, 0, 1, 1, 1]' : 0.163038}", "{'[6, 2, 0, 0, 1, 2, 0, 1, 21, 22, 16, 0, 0, 0, 0, 1, 1, 1]' : 0.163072}", "{'[6, 2, 0, 0, 1, 2, 0, 1, 21, 22, 16, 0, 0, 0, 0, 1, 1, 1]' : 0.163274}", "{'[6, 2, 0, 0, 1, 2, 0, 1, 21, 22, 16, 0, 0, 0, 0, 1, 1, 1]' : 0.163276}", "{'[6, 2, 0, 0, 1, 2, 0, 1, 21, 22, 16, 0, 0, 0, 0, 1, 1, 1]' : 0.162879}", "{'[6, 2, 0, 0, 1, 2, 0, 1, 21, 22, 16, 0, 0, 0, 0, 1, 1, 1]' : 0.163576}"]
returning from 'run': {'[6, 2, 0, 0, 1, 2, 0, 1, 21, 22, 16, 0, 0, 0, 0, 1, 1, 1]': ([0.186909, 0.187081, 0.16359, 0.159953, 0.160083, 0.160074, 0.15999, 0.159993, 0.159989, 0.159909, 0.160902, 0.160304, 0.159965, 0.160065, 0.160331, 0.163052, 0.162957, 0.163009, 0.163058, 0.163814, 0.163307, 0.162958, 0.162999, 0.16323, 0.163038, 0.163072, 0.163274, 0.163276, 0.162879, 0.163576], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 2, 0, 0, 1, 2, 0, 1, 21, 22, 16, 0, 0, 0, 0, 1, 1, 1]': ([0.186909, 0.187081, 0.16359, 0.159953, 0.160083, 0.160074, 0.15999, 0.159993, 0.159989, 0.159909, 0.160902, 0.160304, 0.159965, 0.160065, 0.160331, 0.163052, 0.162957, 0.163009, 0.163058, 0.163814, 0.163307, 0.162958, 0.162999, 0.16323, 0.163038, 0.163072, 0.163274, 0.163276, 0.162879, 0.163576], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	39
        Max loop nest depth: 	5
        Additions: 		779
        Multiplications: 	288
        Divisions: 		0
        Logical: 		0
        Reads: 			1685
        Writes: 		342
        Comparisons:		39
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest55.exe __orio_perftest55.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest55.exe  
Program Test Output: 
{'[0, 0, 1, 5, 6, 3, 0, 1, 3, 6, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.117117}
{'[0, 0, 1, 5, 6, 3, 0, 1, 3, 6, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.117608}
{'[0, 0, 1, 5, 6, 3, 0, 1, 3, 6, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.117066}
{'[0, 0, 1, 5, 6, 3, 0, 1, 3, 6, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.117135}
{'[0, 0, 1, 5, 6, 3, 0, 1, 3, 6, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.116988}
{'[0, 0, 1, 5, 6, 3, 0, 1, 3, 6, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.11051}
{'[0, 0, 1, 5, 6, 3, 0, 1, 3, 6, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.104314}
{'[0, 0, 1, 5, 6, 3, 0, 1, 3, 6, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.105117}
{'[0, 0, 1, 5, 6, 3, 0, 1, 3, 6, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.105166}
{'[0, 0, 1, 5, 6, 3, 0, 1, 3, 6, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.105166}
{'[0, 0, 1, 5, 6, 3, 0, 1, 3, 6, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.105543}
{'[0, 0, 1, 5, 6, 3, 0, 1, 3, 6, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.106424}
{'[0, 0, 1, 5, 6, 3, 0, 1, 3, 6, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.105041}
{'[0, 0, 1, 5, 6, 3, 0, 1, 3, 6, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.104913}
{'[0, 0, 1, 5, 6, 3, 0, 1, 3, 6, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.103852}
{'[0, 0, 1, 5, 6, 3, 0, 1, 3, 6, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.103569}
{'[0, 0, 1, 5, 6, 3, 0, 1, 3, 6, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.105191}
{'[0, 0, 1, 5, 6, 3, 0, 1, 3, 6, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.105196}
{'[0, 0, 1, 5, 6, 3, 0, 1, 3, 6, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.105251}
{'[0, 0, 1, 5, 6, 3, 0, 1, 3, 6, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.105179}
{'[0, 0, 1, 5, 6, 3, 0, 1, 3, 6, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.105319}
{'[0, 0, 1, 5, 6, 3, 0, 1, 3, 6, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.105421}
{'[0, 0, 1, 5, 6, 3, 0, 1, 3, 6, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.105435}
{'[0, 0, 1, 5, 6, 3, 0, 1, 3, 6, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.104528}
{'[0, 0, 1, 5, 6, 3, 0, 1, 3, 6, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.102917}
{'[0, 0, 1, 5, 6, 3, 0, 1, 3, 6, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.104952}
{'[0, 0, 1, 5, 6, 3, 0, 1, 3, 6, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.103028}
{'[0, 0, 1, 5, 6, 3, 0, 1, 3, 6, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.102866}
{'[0, 0, 1, 5, 6, 3, 0, 1, 3, 6, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.102958}
{'[0, 0, 1, 5, 6, 3, 0, 1, 3, 6, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.103147}

out:
 ["{'[0, 0, 1, 5, 6, 3, 0, 1, 3, 6, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.117117}", "{'[0, 0, 1, 5, 6, 3, 0, 1, 3, 6, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.117608}", "{'[0, 0, 1, 5, 6, 3, 0, 1, 3, 6, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.117066}", "{'[0, 0, 1, 5, 6, 3, 0, 1, 3, 6, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.117135}", "{'[0, 0, 1, 5, 6, 3, 0, 1, 3, 6, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.116988}", "{'[0, 0, 1, 5, 6, 3, 0, 1, 3, 6, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.11051}", "{'[0, 0, 1, 5, 6, 3, 0, 1, 3, 6, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.104314}", "{'[0, 0, 1, 5, 6, 3, 0, 1, 3, 6, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.105117}", "{'[0, 0, 1, 5, 6, 3, 0, 1, 3, 6, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.105166}", "{'[0, 0, 1, 5, 6, 3, 0, 1, 3, 6, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.105166}", "{'[0, 0, 1, 5, 6, 3, 0, 1, 3, 6, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.105543}", "{'[0, 0, 1, 5, 6, 3, 0, 1, 3, 6, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.106424}", "{'[0, 0, 1, 5, 6, 3, 0, 1, 3, 6, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.105041}", "{'[0, 0, 1, 5, 6, 3, 0, 1, 3, 6, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.104913}", "{'[0, 0, 1, 5, 6, 3, 0, 1, 3, 6, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.103852}", "{'[0, 0, 1, 5, 6, 3, 0, 1, 3, 6, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.103569}", "{'[0, 0, 1, 5, 6, 3, 0, 1, 3, 6, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.105191}", "{'[0, 0, 1, 5, 6, 3, 0, 1, 3, 6, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.105196}", "{'[0, 0, 1, 5, 6, 3, 0, 1, 3, 6, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.105251}", "{'[0, 0, 1, 5, 6, 3, 0, 1, 3, 6, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.105179}", "{'[0, 0, 1, 5, 6, 3, 0, 1, 3, 6, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.105319}", "{'[0, 0, 1, 5, 6, 3, 0, 1, 3, 6, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.105421}", "{'[0, 0, 1, 5, 6, 3, 0, 1, 3, 6, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.105435}", "{'[0, 0, 1, 5, 6, 3, 0, 1, 3, 6, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.104528}", "{'[0, 0, 1, 5, 6, 3, 0, 1, 3, 6, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.102917}", "{'[0, 0, 1, 5, 6, 3, 0, 1, 3, 6, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.104952}", "{'[0, 0, 1, 5, 6, 3, 0, 1, 3, 6, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.103028}", "{'[0, 0, 1, 5, 6, 3, 0, 1, 3, 6, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.102866}", "{'[0, 0, 1, 5, 6, 3, 0, 1, 3, 6, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.102958}", "{'[0, 0, 1, 5, 6, 3, 0, 1, 3, 6, 0, 7, 1, 0, 1, 1, 0, 1]' : 0.103147}"]
returning from 'run': {'[0, 0, 1, 5, 6, 3, 0, 1, 3, 6, 0, 7, 1, 0, 1, 1, 0, 1]': ([0.117117, 0.117608, 0.117066, 0.117135, 0.116988, 0.11051, 0.104314, 0.105117, 0.105166, 0.105166, 0.105543, 0.106424, 0.105041, 0.104913, 0.103852, 0.103569, 0.105191, 0.105196, 0.105251, 0.105179, 0.105319, 0.105421, 0.105435, 0.104528, 0.102917, 0.104952, 0.103028, 0.102866, 0.102958, 0.103147], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 1, 5, 6, 3, 0, 1, 3, 6, 0, 7, 1, 0, 1, 1, 0, 1]': ([0.117117, 0.117608, 0.117066, 0.117135, 0.116988, 0.11051, 0.104314, 0.105117, 0.105166, 0.105166, 0.105543, 0.106424, 0.105041, 0.104913, 0.103852, 0.103569, 0.105191, 0.105196, 0.105251, 0.105179, 0.105319, 0.105421, 0.105435, 0.104528, 0.102917, 0.104952, 0.103028, 0.102866, 0.102958, 0.103147], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		168
        Multiplications: 	38
        Divisions: 		0
        Logical: 		0
        Reads: 			372
        Writes: 		83
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest56.exe __orio_perftest56.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest56.exe  
Program Test Output: 
{'[1, 0, 0, 5, 5, 6, 0, 1, 28, 0, 9, 24, 0, 0, 1, 0, 1, 1]' : 0.231672}
{'[1, 0, 0, 5, 5, 6, 0, 1, 28, 0, 9, 24, 0, 0, 1, 0, 1, 1]' : 0.231542}
{'[1, 0, 0, 5, 5, 6, 0, 1, 28, 0, 9, 24, 0, 0, 1, 0, 1, 1]' : 0.203285}
{'[1, 0, 0, 5, 5, 6, 0, 1, 28, 0, 9, 24, 0, 0, 1, 0, 1, 1]' : 0.192647}
{'[1, 0, 0, 5, 5, 6, 0, 1, 28, 0, 9, 24, 0, 0, 1, 0, 1, 1]' : 0.192652}
{'[1, 0, 0, 5, 5, 6, 0, 1, 28, 0, 9, 24, 0, 0, 1, 0, 1, 1]' : 0.192604}
{'[1, 0, 0, 5, 5, 6, 0, 1, 28, 0, 9, 24, 0, 0, 1, 0, 1, 1]' : 0.192632}
{'[1, 0, 0, 5, 5, 6, 0, 1, 28, 0, 9, 24, 0, 0, 1, 0, 1, 1]' : 0.193221}
{'[1, 0, 0, 5, 5, 6, 0, 1, 28, 0, 9, 24, 0, 0, 1, 0, 1, 1]' : 0.192822}
{'[1, 0, 0, 5, 5, 6, 0, 1, 28, 0, 9, 24, 0, 0, 1, 0, 1, 1]' : 0.192636}
{'[1, 0, 0, 5, 5, 6, 0, 1, 28, 0, 9, 24, 0, 0, 1, 0, 1, 1]' : 0.192866}
{'[1, 0, 0, 5, 5, 6, 0, 1, 28, 0, 9, 24, 0, 0, 1, 0, 1, 1]' : 0.192561}
{'[1, 0, 0, 5, 5, 6, 0, 1, 28, 0, 9, 24, 0, 0, 1, 0, 1, 1]' : 0.192589}
{'[1, 0, 0, 5, 5, 6, 0, 1, 28, 0, 9, 24, 0, 0, 1, 0, 1, 1]' : 0.192684}
{'[1, 0, 0, 5, 5, 6, 0, 1, 28, 0, 9, 24, 0, 0, 1, 0, 1, 1]' : 0.192993}
{'[1, 0, 0, 5, 5, 6, 0, 1, 28, 0, 9, 24, 0, 0, 1, 0, 1, 1]' : 0.193229}
{'[1, 0, 0, 5, 5, 6, 0, 1, 28, 0, 9, 24, 0, 0, 1, 0, 1, 1]' : 0.192633}
{'[1, 0, 0, 5, 5, 6, 0, 1, 28, 0, 9, 24, 0, 0, 1, 0, 1, 1]' : 0.192808}
{'[1, 0, 0, 5, 5, 6, 0, 1, 28, 0, 9, 24, 0, 0, 1, 0, 1, 1]' : 0.192615}
{'[1, 0, 0, 5, 5, 6, 0, 1, 28, 0, 9, 24, 0, 0, 1, 0, 1, 1]' : 0.192615}
{'[1, 0, 0, 5, 5, 6, 0, 1, 28, 0, 9, 24, 0, 0, 1, 0, 1, 1]' : 0.192969}
{'[1, 0, 0, 5, 5, 6, 0, 1, 28, 0, 9, 24, 0, 0, 1, 0, 1, 1]' : 0.192571}
{'[1, 0, 0, 5, 5, 6, 0, 1, 28, 0, 9, 24, 0, 0, 1, 0, 1, 1]' : 0.192852}
{'[1, 0, 0, 5, 5, 6, 0, 1, 28, 0, 9, 24, 0, 0, 1, 0, 1, 1]' : 0.193308}
{'[1, 0, 0, 5, 5, 6, 0, 1, 28, 0, 9, 24, 0, 0, 1, 0, 1, 1]' : 0.192654}
{'[1, 0, 0, 5, 5, 6, 0, 1, 28, 0, 9, 24, 0, 0, 1, 0, 1, 1]' : 0.192651}
{'[1, 0, 0, 5, 5, 6, 0, 1, 28, 0, 9, 24, 0, 0, 1, 0, 1, 1]' : 0.192578}
{'[1, 0, 0, 5, 5, 6, 0, 1, 28, 0, 9, 24, 0, 0, 1, 0, 1, 1]' : 0.192791}
{'[1, 0, 0, 5, 5, 6, 0, 1, 28, 0, 9, 24, 0, 0, 1, 0, 1, 1]' : 0.192629}
{'[1, 0, 0, 5, 5, 6, 0, 1, 28, 0, 9, 24, 0, 0, 1, 0, 1, 1]' : 0.192979}

out:
 ["{'[1, 0, 0, 5, 5, 6, 0, 1, 28, 0, 9, 24, 0, 0, 1, 0, 1, 1]' : 0.231672}", "{'[1, 0, 0, 5, 5, 6, 0, 1, 28, 0, 9, 24, 0, 0, 1, 0, 1, 1]' : 0.231542}", "{'[1, 0, 0, 5, 5, 6, 0, 1, 28, 0, 9, 24, 0, 0, 1, 0, 1, 1]' : 0.203285}", "{'[1, 0, 0, 5, 5, 6, 0, 1, 28, 0, 9, 24, 0, 0, 1, 0, 1, 1]' : 0.192647}", "{'[1, 0, 0, 5, 5, 6, 0, 1, 28, 0, 9, 24, 0, 0, 1, 0, 1, 1]' : 0.192652}", "{'[1, 0, 0, 5, 5, 6, 0, 1, 28, 0, 9, 24, 0, 0, 1, 0, 1, 1]' : 0.192604}", "{'[1, 0, 0, 5, 5, 6, 0, 1, 28, 0, 9, 24, 0, 0, 1, 0, 1, 1]' : 0.192632}", "{'[1, 0, 0, 5, 5, 6, 0, 1, 28, 0, 9, 24, 0, 0, 1, 0, 1, 1]' : 0.193221}", "{'[1, 0, 0, 5, 5, 6, 0, 1, 28, 0, 9, 24, 0, 0, 1, 0, 1, 1]' : 0.192822}", "{'[1, 0, 0, 5, 5, 6, 0, 1, 28, 0, 9, 24, 0, 0, 1, 0, 1, 1]' : 0.192636}", "{'[1, 0, 0, 5, 5, 6, 0, 1, 28, 0, 9, 24, 0, 0, 1, 0, 1, 1]' : 0.192866}", "{'[1, 0, 0, 5, 5, 6, 0, 1, 28, 0, 9, 24, 0, 0, 1, 0, 1, 1]' : 0.192561}", "{'[1, 0, 0, 5, 5, 6, 0, 1, 28, 0, 9, 24, 0, 0, 1, 0, 1, 1]' : 0.192589}", "{'[1, 0, 0, 5, 5, 6, 0, 1, 28, 0, 9, 24, 0, 0, 1, 0, 1, 1]' : 0.192684}", "{'[1, 0, 0, 5, 5, 6, 0, 1, 28, 0, 9, 24, 0, 0, 1, 0, 1, 1]' : 0.192993}", "{'[1, 0, 0, 5, 5, 6, 0, 1, 28, 0, 9, 24, 0, 0, 1, 0, 1, 1]' : 0.193229}", "{'[1, 0, 0, 5, 5, 6, 0, 1, 28, 0, 9, 24, 0, 0, 1, 0, 1, 1]' : 0.192633}", "{'[1, 0, 0, 5, 5, 6, 0, 1, 28, 0, 9, 24, 0, 0, 1, 0, 1, 1]' : 0.192808}", "{'[1, 0, 0, 5, 5, 6, 0, 1, 28, 0, 9, 24, 0, 0, 1, 0, 1, 1]' : 0.192615}", "{'[1, 0, 0, 5, 5, 6, 0, 1, 28, 0, 9, 24, 0, 0, 1, 0, 1, 1]' : 0.192615}", "{'[1, 0, 0, 5, 5, 6, 0, 1, 28, 0, 9, 24, 0, 0, 1, 0, 1, 1]' : 0.192969}", "{'[1, 0, 0, 5, 5, 6, 0, 1, 28, 0, 9, 24, 0, 0, 1, 0, 1, 1]' : 0.192571}", "{'[1, 0, 0, 5, 5, 6, 0, 1, 28, 0, 9, 24, 0, 0, 1, 0, 1, 1]' : 0.192852}", "{'[1, 0, 0, 5, 5, 6, 0, 1, 28, 0, 9, 24, 0, 0, 1, 0, 1, 1]' : 0.193308}", "{'[1, 0, 0, 5, 5, 6, 0, 1, 28, 0, 9, 24, 0, 0, 1, 0, 1, 1]' : 0.192654}", "{'[1, 0, 0, 5, 5, 6, 0, 1, 28, 0, 9, 24, 0, 0, 1, 0, 1, 1]' : 0.192651}", "{'[1, 0, 0, 5, 5, 6, 0, 1, 28, 0, 9, 24, 0, 0, 1, 0, 1, 1]' : 0.192578}", "{'[1, 0, 0, 5, 5, 6, 0, 1, 28, 0, 9, 24, 0, 0, 1, 0, 1, 1]' : 0.192791}", "{'[1, 0, 0, 5, 5, 6, 0, 1, 28, 0, 9, 24, 0, 0, 1, 0, 1, 1]' : 0.192629}", "{'[1, 0, 0, 5, 5, 6, 0, 1, 28, 0, 9, 24, 0, 0, 1, 0, 1, 1]' : 0.192979}"]
returning from 'run': {'[1, 0, 0, 5, 5, 6, 0, 1, 28, 0, 9, 24, 0, 0, 1, 0, 1, 1]': ([0.231672, 0.231542, 0.203285, 0.192647, 0.192652, 0.192604, 0.192632, 0.193221, 0.192822, 0.192636, 0.192866, 0.192561, 0.192589, 0.192684, 0.192993, 0.193229, 0.192633, 0.192808, 0.192615, 0.192615, 0.192969, 0.192571, 0.192852, 0.193308, 0.192654, 0.192651, 0.192578, 0.192791, 0.192629, 0.192979], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 0, 5, 5, 6, 0, 1, 28, 0, 9, 24, 0, 0, 1, 0, 1, 1]': ([0.231672, 0.231542, 0.203285, 0.192647, 0.192652, 0.192604, 0.192632, 0.193221, 0.192822, 0.192636, 0.192866, 0.192561, 0.192589, 0.192684, 0.192993, 0.193229, 0.192633, 0.192808, 0.192615, 0.192615, 0.192969, 0.192571, 0.192852, 0.193308, 0.192654, 0.192651, 0.192578, 0.192791, 0.192629, 0.192979], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = kkk
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		132
        Multiplications: 	32
        Divisions: 		0
        Logical: 		0
        Reads: 			294
        Writes: 		54
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest57.exe __orio_perftest57.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest57.exe  
Program Test Output: 
{'[6, 0, 4, 4, 5, 2, 1, 1, 5, 0, 11, 8, 0, 1, 1, 0, 1, 1]' : 0.259376}
{'[6, 0, 4, 4, 5, 2, 1, 1, 5, 0, 11, 8, 0, 1, 1, 0, 1, 1]' : 0.254202}
{'[6, 0, 4, 4, 5, 2, 1, 1, 5, 0, 11, 8, 0, 1, 1, 0, 1, 1]' : 0.230551}
{'[6, 0, 4, 4, 5, 2, 1, 1, 5, 0, 11, 8, 0, 1, 1, 0, 1, 1]' : 0.218029}
{'[6, 0, 4, 4, 5, 2, 1, 1, 5, 0, 11, 8, 0, 1, 1, 0, 1, 1]' : 0.218369}
{'[6, 0, 4, 4, 5, 2, 1, 1, 5, 0, 11, 8, 0, 1, 1, 0, 1, 1]' : 0.226382}
{'[6, 0, 4, 4, 5, 2, 1, 1, 5, 0, 11, 8, 0, 1, 1, 0, 1, 1]' : 0.226576}
{'[6, 0, 4, 4, 5, 2, 1, 1, 5, 0, 11, 8, 0, 1, 1, 0, 1, 1]' : 0.231344}
{'[6, 0, 4, 4, 5, 2, 1, 1, 5, 0, 11, 8, 0, 1, 1, 0, 1, 1]' : 0.226321}
{'[6, 0, 4, 4, 5, 2, 1, 1, 5, 0, 11, 8, 0, 1, 1, 0, 1, 1]' : 0.216847}
{'[6, 0, 4, 4, 5, 2, 1, 1, 5, 0, 11, 8, 0, 1, 1, 0, 1, 1]' : 0.212827}
{'[6, 0, 4, 4, 5, 2, 1, 1, 5, 0, 11, 8, 0, 1, 1, 0, 1, 1]' : 0.21787}
{'[6, 0, 4, 4, 5, 2, 1, 1, 5, 0, 11, 8, 0, 1, 1, 0, 1, 1]' : 0.219361}
{'[6, 0, 4, 4, 5, 2, 1, 1, 5, 0, 11, 8, 0, 1, 1, 0, 1, 1]' : 0.222908}
{'[6, 0, 4, 4, 5, 2, 1, 1, 5, 0, 11, 8, 0, 1, 1, 0, 1, 1]' : 0.231473}
{'[6, 0, 4, 4, 5, 2, 1, 1, 5, 0, 11, 8, 0, 1, 1, 0, 1, 1]' : 0.222557}
{'[6, 0, 4, 4, 5, 2, 1, 1, 5, 0, 11, 8, 0, 1, 1, 0, 1, 1]' : 0.219508}
{'[6, 0, 4, 4, 5, 2, 1, 1, 5, 0, 11, 8, 0, 1, 1, 0, 1, 1]' : 0.219654}
{'[6, 0, 4, 4, 5, 2, 1, 1, 5, 0, 11, 8, 0, 1, 1, 0, 1, 1]' : 0.226525}
{'[6, 0, 4, 4, 5, 2, 1, 1, 5, 0, 11, 8, 0, 1, 1, 0, 1, 1]' : 0.226403}
{'[6, 0, 4, 4, 5, 2, 1, 1, 5, 0, 11, 8, 0, 1, 1, 0, 1, 1]' : 0.228037}
{'[6, 0, 4, 4, 5, 2, 1, 1, 5, 0, 11, 8, 0, 1, 1, 0, 1, 1]' : 0.2246}
{'[6, 0, 4, 4, 5, 2, 1, 1, 5, 0, 11, 8, 0, 1, 1, 0, 1, 1]' : 0.223961}
{'[6, 0, 4, 4, 5, 2, 1, 1, 5, 0, 11, 8, 0, 1, 1, 0, 1, 1]' : 0.226692}
{'[6, 0, 4, 4, 5, 2, 1, 1, 5, 0, 11, 8, 0, 1, 1, 0, 1, 1]' : 0.226372}
{'[6, 0, 4, 4, 5, 2, 1, 1, 5, 0, 11, 8, 0, 1, 1, 0, 1, 1]' : 0.22646}
{'[6, 0, 4, 4, 5, 2, 1, 1, 5, 0, 11, 8, 0, 1, 1, 0, 1, 1]' : 0.226417}
{'[6, 0, 4, 4, 5, 2, 1, 1, 5, 0, 11, 8, 0, 1, 1, 0, 1, 1]' : 0.231165}
{'[6, 0, 4, 4, 5, 2, 1, 1, 5, 0, 11, 8, 0, 1, 1, 0, 1, 1]' : 0.226427}
{'[6, 0, 4, 4, 5, 2, 1, 1, 5, 0, 11, 8, 0, 1, 1, 0, 1, 1]' : 0.226413}

out:
 ["{'[6, 0, 4, 4, 5, 2, 1, 1, 5, 0, 11, 8, 0, 1, 1, 0, 1, 1]' : 0.259376}", "{'[6, 0, 4, 4, 5, 2, 1, 1, 5, 0, 11, 8, 0, 1, 1, 0, 1, 1]' : 0.254202}", "{'[6, 0, 4, 4, 5, 2, 1, 1, 5, 0, 11, 8, 0, 1, 1, 0, 1, 1]' : 0.230551}", "{'[6, 0, 4, 4, 5, 2, 1, 1, 5, 0, 11, 8, 0, 1, 1, 0, 1, 1]' : 0.218029}", "{'[6, 0, 4, 4, 5, 2, 1, 1, 5, 0, 11, 8, 0, 1, 1, 0, 1, 1]' : 0.218369}", "{'[6, 0, 4, 4, 5, 2, 1, 1, 5, 0, 11, 8, 0, 1, 1, 0, 1, 1]' : 0.226382}", "{'[6, 0, 4, 4, 5, 2, 1, 1, 5, 0, 11, 8, 0, 1, 1, 0, 1, 1]' : 0.226576}", "{'[6, 0, 4, 4, 5, 2, 1, 1, 5, 0, 11, 8, 0, 1, 1, 0, 1, 1]' : 0.231344}", "{'[6, 0, 4, 4, 5, 2, 1, 1, 5, 0, 11, 8, 0, 1, 1, 0, 1, 1]' : 0.226321}", "{'[6, 0, 4, 4, 5, 2, 1, 1, 5, 0, 11, 8, 0, 1, 1, 0, 1, 1]' : 0.216847}", "{'[6, 0, 4, 4, 5, 2, 1, 1, 5, 0, 11, 8, 0, 1, 1, 0, 1, 1]' : 0.212827}", "{'[6, 0, 4, 4, 5, 2, 1, 1, 5, 0, 11, 8, 0, 1, 1, 0, 1, 1]' : 0.21787}", "{'[6, 0, 4, 4, 5, 2, 1, 1, 5, 0, 11, 8, 0, 1, 1, 0, 1, 1]' : 0.219361}", "{'[6, 0, 4, 4, 5, 2, 1, 1, 5, 0, 11, 8, 0, 1, 1, 0, 1, 1]' : 0.222908}", "{'[6, 0, 4, 4, 5, 2, 1, 1, 5, 0, 11, 8, 0, 1, 1, 0, 1, 1]' : 0.231473}", "{'[6, 0, 4, 4, 5, 2, 1, 1, 5, 0, 11, 8, 0, 1, 1, 0, 1, 1]' : 0.222557}", "{'[6, 0, 4, 4, 5, 2, 1, 1, 5, 0, 11, 8, 0, 1, 1, 0, 1, 1]' : 0.219508}", "{'[6, 0, 4, 4, 5, 2, 1, 1, 5, 0, 11, 8, 0, 1, 1, 0, 1, 1]' : 0.219654}", "{'[6, 0, 4, 4, 5, 2, 1, 1, 5, 0, 11, 8, 0, 1, 1, 0, 1, 1]' : 0.226525}", "{'[6, 0, 4, 4, 5, 2, 1, 1, 5, 0, 11, 8, 0, 1, 1, 0, 1, 1]' : 0.226403}", "{'[6, 0, 4, 4, 5, 2, 1, 1, 5, 0, 11, 8, 0, 1, 1, 0, 1, 1]' : 0.228037}", "{'[6, 0, 4, 4, 5, 2, 1, 1, 5, 0, 11, 8, 0, 1, 1, 0, 1, 1]' : 0.2246}", "{'[6, 0, 4, 4, 5, 2, 1, 1, 5, 0, 11, 8, 0, 1, 1, 0, 1, 1]' : 0.223961}", "{'[6, 0, 4, 4, 5, 2, 1, 1, 5, 0, 11, 8, 0, 1, 1, 0, 1, 1]' : 0.226692}", "{'[6, 0, 4, 4, 5, 2, 1, 1, 5, 0, 11, 8, 0, 1, 1, 0, 1, 1]' : 0.226372}", "{'[6, 0, 4, 4, 5, 2, 1, 1, 5, 0, 11, 8, 0, 1, 1, 0, 1, 1]' : 0.22646}", "{'[6, 0, 4, 4, 5, 2, 1, 1, 5, 0, 11, 8, 0, 1, 1, 0, 1, 1]' : 0.226417}", "{'[6, 0, 4, 4, 5, 2, 1, 1, 5, 0, 11, 8, 0, 1, 1, 0, 1, 1]' : 0.231165}", "{'[6, 0, 4, 4, 5, 2, 1, 1, 5, 0, 11, 8, 0, 1, 1, 0, 1, 1]' : 0.226427}", "{'[6, 0, 4, 4, 5, 2, 1, 1, 5, 0, 11, 8, 0, 1, 1, 0, 1, 1]' : 0.226413}"]
returning from 'run': {'[6, 0, 4, 4, 5, 2, 1, 1, 5, 0, 11, 8, 0, 1, 1, 0, 1, 1]': ([0.259376, 0.254202, 0.230551, 0.218029, 0.218369, 0.226382, 0.226576, 0.231344, 0.226321, 0.216847, 0.212827, 0.21787, 0.219361, 0.222908, 0.231473, 0.222557, 0.219508, 0.219654, 0.226525, 0.226403, 0.228037, 0.2246, 0.223961, 0.226692, 0.226372, 0.22646, 0.226417, 0.231165, 0.226427, 0.226413], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 4, 4, 5, 2, 1, 1, 5, 0, 11, 8, 0, 1, 1, 0, 1, 1]': ([0.259376, 0.254202, 0.230551, 0.218029, 0.218369, 0.226382, 0.226576, 0.231344, 0.226321, 0.216847, 0.212827, 0.21787, 0.219361, 0.222908, 0.231473, 0.222557, 0.219508, 0.219654, 0.226525, 0.226403, 0.228037, 0.2246, 0.223961, 0.226692, 0.226372, 0.22646, 0.226417, 0.231165, 0.226427, 0.226413], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	39
        Max loop nest depth: 	6
        Additions: 		9465
        Multiplications: 	2170
        Divisions: 		0
        Logical: 		0
        Reads: 			13398
        Writes: 		1213
        Comparisons:		39
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest58.exe __orio_perftest58.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest58.exe  
Program Test Output: 
{'[6, 3, 0, 6, 3, 3, 1, 1, 29, 1, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.208645}
{'[6, 3, 0, 6, 3, 3, 1, 1, 29, 1, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.209378}
{'[6, 3, 0, 6, 3, 3, 1, 1, 29, 1, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.209244}
{'[6, 3, 0, 6, 3, 3, 1, 1, 29, 1, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.199205}
{'[6, 3, 0, 6, 3, 3, 1, 1, 29, 1, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.186168}
{'[6, 3, 0, 6, 3, 3, 1, 1, 29, 1, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.188003}
{'[6, 3, 0, 6, 3, 3, 1, 1, 29, 1, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.188777}
{'[6, 3, 0, 6, 3, 3, 1, 1, 29, 1, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.187382}
{'[6, 3, 0, 6, 3, 3, 1, 1, 29, 1, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.189303}
{'[6, 3, 0, 6, 3, 3, 1, 1, 29, 1, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.187884}
{'[6, 3, 0, 6, 3, 3, 1, 1, 29, 1, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.18778}
{'[6, 3, 0, 6, 3, 3, 1, 1, 29, 1, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.18787}
{'[6, 3, 0, 6, 3, 3, 1, 1, 29, 1, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.188527}
{'[6, 3, 0, 6, 3, 3, 1, 1, 29, 1, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.188813}
{'[6, 3, 0, 6, 3, 3, 1, 1, 29, 1, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.189646}
{'[6, 3, 0, 6, 3, 3, 1, 1, 29, 1, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.187987}
{'[6, 3, 0, 6, 3, 3, 1, 1, 29, 1, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.189265}
{'[6, 3, 0, 6, 3, 3, 1, 1, 29, 1, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.189182}
{'[6, 3, 0, 6, 3, 3, 1, 1, 29, 1, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.187875}
{'[6, 3, 0, 6, 3, 3, 1, 1, 29, 1, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.18872}
{'[6, 3, 0, 6, 3, 3, 1, 1, 29, 1, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.190953}
{'[6, 3, 0, 6, 3, 3, 1, 1, 29, 1, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.190782}
{'[6, 3, 0, 6, 3, 3, 1, 1, 29, 1, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.192453}
{'[6, 3, 0, 6, 3, 3, 1, 1, 29, 1, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.191122}
{'[6, 3, 0, 6, 3, 3, 1, 1, 29, 1, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.191081}
{'[6, 3, 0, 6, 3, 3, 1, 1, 29, 1, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.19163}
{'[6, 3, 0, 6, 3, 3, 1, 1, 29, 1, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.191909}
{'[6, 3, 0, 6, 3, 3, 1, 1, 29, 1, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.191223}
{'[6, 3, 0, 6, 3, 3, 1, 1, 29, 1, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.19114}
{'[6, 3, 0, 6, 3, 3, 1, 1, 29, 1, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.18877}

out:
 ["{'[6, 3, 0, 6, 3, 3, 1, 1, 29, 1, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.208645}", "{'[6, 3, 0, 6, 3, 3, 1, 1, 29, 1, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.209378}", "{'[6, 3, 0, 6, 3, 3, 1, 1, 29, 1, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.209244}", "{'[6, 3, 0, 6, 3, 3, 1, 1, 29, 1, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.199205}", "{'[6, 3, 0, 6, 3, 3, 1, 1, 29, 1, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.186168}", "{'[6, 3, 0, 6, 3, 3, 1, 1, 29, 1, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.188003}", "{'[6, 3, 0, 6, 3, 3, 1, 1, 29, 1, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.188777}", "{'[6, 3, 0, 6, 3, 3, 1, 1, 29, 1, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.187382}", "{'[6, 3, 0, 6, 3, 3, 1, 1, 29, 1, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.189303}", "{'[6, 3, 0, 6, 3, 3, 1, 1, 29, 1, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.187884}", "{'[6, 3, 0, 6, 3, 3, 1, 1, 29, 1, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.18778}", "{'[6, 3, 0, 6, 3, 3, 1, 1, 29, 1, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.18787}", "{'[6, 3, 0, 6, 3, 3, 1, 1, 29, 1, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.188527}", "{'[6, 3, 0, 6, 3, 3, 1, 1, 29, 1, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.188813}", "{'[6, 3, 0, 6, 3, 3, 1, 1, 29, 1, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.189646}", "{'[6, 3, 0, 6, 3, 3, 1, 1, 29, 1, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.187987}", "{'[6, 3, 0, 6, 3, 3, 1, 1, 29, 1, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.189265}", "{'[6, 3, 0, 6, 3, 3, 1, 1, 29, 1, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.189182}", "{'[6, 3, 0, 6, 3, 3, 1, 1, 29, 1, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.187875}", "{'[6, 3, 0, 6, 3, 3, 1, 1, 29, 1, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.18872}", "{'[6, 3, 0, 6, 3, 3, 1, 1, 29, 1, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.190953}", "{'[6, 3, 0, 6, 3, 3, 1, 1, 29, 1, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.190782}", "{'[6, 3, 0, 6, 3, 3, 1, 1, 29, 1, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.192453}", "{'[6, 3, 0, 6, 3, 3, 1, 1, 29, 1, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.191122}", "{'[6, 3, 0, 6, 3, 3, 1, 1, 29, 1, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.191081}", "{'[6, 3, 0, 6, 3, 3, 1, 1, 29, 1, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.19163}", "{'[6, 3, 0, 6, 3, 3, 1, 1, 29, 1, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.191909}", "{'[6, 3, 0, 6, 3, 3, 1, 1, 29, 1, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.191223}", "{'[6, 3, 0, 6, 3, 3, 1, 1, 29, 1, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.19114}", "{'[6, 3, 0, 6, 3, 3, 1, 1, 29, 1, 0, 28, 2, 0, 0, 0, 1, 0]' : 0.18877}"]
returning from 'run': {'[6, 3, 0, 6, 3, 3, 1, 1, 29, 1, 0, 28, 2, 0, 0, 0, 1, 0]': ([0.208645, 0.209378, 0.209244, 0.199205, 0.186168, 0.188003, 0.188777, 0.187382, 0.189303, 0.187884, 0.18778, 0.18787, 0.188527, 0.188813, 0.189646, 0.187987, 0.189265, 0.189182, 0.187875, 0.18872, 0.190953, 0.190782, 0.192453, 0.191122, 0.191081, 0.19163, 0.191909, 0.191223, 0.19114, 0.18877], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 3, 0, 6, 3, 3, 1, 1, 29, 1, 0, 28, 2, 0, 0, 0, 1, 0]': ([0.208645, 0.209378, 0.209244, 0.199205, 0.186168, 0.188003, 0.188777, 0.187382, 0.189303, 0.187884, 0.18778, 0.18787, 0.188527, 0.188813, 0.189646, 0.187987, 0.189265, 0.189182, 0.187875, 0.18872, 0.190953, 0.190782, 0.192453, 0.191122, 0.191081, 0.19163, 0.191909, 0.191223, 0.19114, 0.18877], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = kkk
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		317
        Multiplications: 	98
        Divisions: 		0
        Logical: 		0
        Reads: 			663
        Writes: 		82
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest59.exe __orio_perftest59.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest59.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest59.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest59.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest59.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	4
        Additions: 		139
        Multiplications: 	32
        Divisions: 		0
        Logical: 		0
        Reads: 			316
        Writes: 		85
        Comparisons:		9
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest60.exe __orio_perftest60.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest60.exe  
Program Test Output: 
{'[0, 0, 0, 3, 0, 6, 0, 1, 28, 0, 28, 18, 0, 1, 1, 1, 0, 0]' : 0.262324}
{'[0, 0, 0, 3, 0, 6, 0, 1, 28, 0, 28, 18, 0, 1, 1, 1, 0, 0]' : 0.262181}
{'[0, 0, 0, 3, 0, 6, 0, 1, 28, 0, 28, 18, 0, 1, 1, 1, 0, 0]' : 0.254097}
{'[0, 0, 0, 3, 0, 6, 0, 1, 28, 0, 28, 18, 0, 1, 1, 1, 0, 0]' : 0.228531}
{'[0, 0, 0, 3, 0, 6, 0, 1, 28, 0, 28, 18, 0, 1, 1, 1, 0, 0]' : 0.223817}
{'[0, 0, 0, 3, 0, 6, 0, 1, 28, 0, 28, 18, 0, 1, 1, 1, 0, 0]' : 0.226083}
{'[0, 0, 0, 3, 0, 6, 0, 1, 28, 0, 28, 18, 0, 1, 1, 1, 0, 0]' : 0.227473}
{'[0, 0, 0, 3, 0, 6, 0, 1, 28, 0, 28, 18, 0, 1, 1, 1, 0, 0]' : 0.233558}
{'[0, 0, 0, 3, 0, 6, 0, 1, 28, 0, 28, 18, 0, 1, 1, 1, 0, 0]' : 0.221842}
{'[0, 0, 0, 3, 0, 6, 0, 1, 28, 0, 28, 18, 0, 1, 1, 1, 0, 0]' : 0.226158}
{'[0, 0, 0, 3, 0, 6, 0, 1, 28, 0, 28, 18, 0, 1, 1, 1, 0, 0]' : 0.226721}
{'[0, 0, 0, 3, 0, 6, 0, 1, 28, 0, 28, 18, 0, 1, 1, 1, 0, 0]' : 0.233965}
{'[0, 0, 0, 3, 0, 6, 0, 1, 28, 0, 28, 18, 0, 1, 1, 1, 0, 0]' : 0.233928}
{'[0, 0, 0, 3, 0, 6, 0, 1, 28, 0, 28, 18, 0, 1, 1, 1, 0, 0]' : 0.227553}
{'[0, 0, 0, 3, 0, 6, 0, 1, 28, 0, 28, 18, 0, 1, 1, 1, 0, 0]' : 0.22634}
{'[0, 0, 0, 3, 0, 6, 0, 1, 28, 0, 28, 18, 0, 1, 1, 1, 0, 0]' : 0.227024}
{'[0, 0, 0, 3, 0, 6, 0, 1, 28, 0, 28, 18, 0, 1, 1, 1, 0, 0]' : 0.224867}
{'[0, 0, 0, 3, 0, 6, 0, 1, 28, 0, 28, 18, 0, 1, 1, 1, 0, 0]' : 0.222894}
{'[0, 0, 0, 3, 0, 6, 0, 1, 28, 0, 28, 18, 0, 1, 1, 1, 0, 0]' : 0.226208}
{'[0, 0, 0, 3, 0, 6, 0, 1, 28, 0, 28, 18, 0, 1, 1, 1, 0, 0]' : 0.226544}
{'[0, 0, 0, 3, 0, 6, 0, 1, 28, 0, 28, 18, 0, 1, 1, 1, 0, 0]' : 0.22669}
{'[0, 0, 0, 3, 0, 6, 0, 1, 28, 0, 28, 18, 0, 1, 1, 1, 0, 0]' : 0.222148}
{'[0, 0, 0, 3, 0, 6, 0, 1, 28, 0, 28, 18, 0, 1, 1, 1, 0, 0]' : 0.227183}
{'[0, 0, 0, 3, 0, 6, 0, 1, 28, 0, 28, 18, 0, 1, 1, 1, 0, 0]' : 0.2262}
{'[0, 0, 0, 3, 0, 6, 0, 1, 28, 0, 28, 18, 0, 1, 1, 1, 0, 0]' : 0.226296}
{'[0, 0, 0, 3, 0, 6, 0, 1, 28, 0, 28, 18, 0, 1, 1, 1, 0, 0]' : 0.223623}
{'[0, 0, 0, 3, 0, 6, 0, 1, 28, 0, 28, 18, 0, 1, 1, 1, 0, 0]' : 0.228054}
{'[0, 0, 0, 3, 0, 6, 0, 1, 28, 0, 28, 18, 0, 1, 1, 1, 0, 0]' : 0.233945}
{'[0, 0, 0, 3, 0, 6, 0, 1, 28, 0, 28, 18, 0, 1, 1, 1, 0, 0]' : 0.228663}
{'[0, 0, 0, 3, 0, 6, 0, 1, 28, 0, 28, 18, 0, 1, 1, 1, 0, 0]' : 0.226271}

out:
 ["{'[0, 0, 0, 3, 0, 6, 0, 1, 28, 0, 28, 18, 0, 1, 1, 1, 0, 0]' : 0.262324}", "{'[0, 0, 0, 3, 0, 6, 0, 1, 28, 0, 28, 18, 0, 1, 1, 1, 0, 0]' : 0.262181}", "{'[0, 0, 0, 3, 0, 6, 0, 1, 28, 0, 28, 18, 0, 1, 1, 1, 0, 0]' : 0.254097}", "{'[0, 0, 0, 3, 0, 6, 0, 1, 28, 0, 28, 18, 0, 1, 1, 1, 0, 0]' : 0.228531}", "{'[0, 0, 0, 3, 0, 6, 0, 1, 28, 0, 28, 18, 0, 1, 1, 1, 0, 0]' : 0.223817}", "{'[0, 0, 0, 3, 0, 6, 0, 1, 28, 0, 28, 18, 0, 1, 1, 1, 0, 0]' : 0.226083}", "{'[0, 0, 0, 3, 0, 6, 0, 1, 28, 0, 28, 18, 0, 1, 1, 1, 0, 0]' : 0.227473}", "{'[0, 0, 0, 3, 0, 6, 0, 1, 28, 0, 28, 18, 0, 1, 1, 1, 0, 0]' : 0.233558}", "{'[0, 0, 0, 3, 0, 6, 0, 1, 28, 0, 28, 18, 0, 1, 1, 1, 0, 0]' : 0.221842}", "{'[0, 0, 0, 3, 0, 6, 0, 1, 28, 0, 28, 18, 0, 1, 1, 1, 0, 0]' : 0.226158}", "{'[0, 0, 0, 3, 0, 6, 0, 1, 28, 0, 28, 18, 0, 1, 1, 1, 0, 0]' : 0.226721}", "{'[0, 0, 0, 3, 0, 6, 0, 1, 28, 0, 28, 18, 0, 1, 1, 1, 0, 0]' : 0.233965}", "{'[0, 0, 0, 3, 0, 6, 0, 1, 28, 0, 28, 18, 0, 1, 1, 1, 0, 0]' : 0.233928}", "{'[0, 0, 0, 3, 0, 6, 0, 1, 28, 0, 28, 18, 0, 1, 1, 1, 0, 0]' : 0.227553}", "{'[0, 0, 0, 3, 0, 6, 0, 1, 28, 0, 28, 18, 0, 1, 1, 1, 0, 0]' : 0.22634}", "{'[0, 0, 0, 3, 0, 6, 0, 1, 28, 0, 28, 18, 0, 1, 1, 1, 0, 0]' : 0.227024}", "{'[0, 0, 0, 3, 0, 6, 0, 1, 28, 0, 28, 18, 0, 1, 1, 1, 0, 0]' : 0.224867}", "{'[0, 0, 0, 3, 0, 6, 0, 1, 28, 0, 28, 18, 0, 1, 1, 1, 0, 0]' : 0.222894}", "{'[0, 0, 0, 3, 0, 6, 0, 1, 28, 0, 28, 18, 0, 1, 1, 1, 0, 0]' : 0.226208}", "{'[0, 0, 0, 3, 0, 6, 0, 1, 28, 0, 28, 18, 0, 1, 1, 1, 0, 0]' : 0.226544}", "{'[0, 0, 0, 3, 0, 6, 0, 1, 28, 0, 28, 18, 0, 1, 1, 1, 0, 0]' : 0.22669}", "{'[0, 0, 0, 3, 0, 6, 0, 1, 28, 0, 28, 18, 0, 1, 1, 1, 0, 0]' : 0.222148}", "{'[0, 0, 0, 3, 0, 6, 0, 1, 28, 0, 28, 18, 0, 1, 1, 1, 0, 0]' : 0.227183}", "{'[0, 0, 0, 3, 0, 6, 0, 1, 28, 0, 28, 18, 0, 1, 1, 1, 0, 0]' : 0.2262}", "{'[0, 0, 0, 3, 0, 6, 0, 1, 28, 0, 28, 18, 0, 1, 1, 1, 0, 0]' : 0.226296}", "{'[0, 0, 0, 3, 0, 6, 0, 1, 28, 0, 28, 18, 0, 1, 1, 1, 0, 0]' : 0.223623}", "{'[0, 0, 0, 3, 0, 6, 0, 1, 28, 0, 28, 18, 0, 1, 1, 1, 0, 0]' : 0.228054}", "{'[0, 0, 0, 3, 0, 6, 0, 1, 28, 0, 28, 18, 0, 1, 1, 1, 0, 0]' : 0.233945}", "{'[0, 0, 0, 3, 0, 6, 0, 1, 28, 0, 28, 18, 0, 1, 1, 1, 0, 0]' : 0.228663}", "{'[0, 0, 0, 3, 0, 6, 0, 1, 28, 0, 28, 18, 0, 1, 1, 1, 0, 0]' : 0.226271}"]
returning from 'run': {'[0, 0, 0, 3, 0, 6, 0, 1, 28, 0, 28, 18, 0, 1, 1, 1, 0, 0]': ([0.262324, 0.262181, 0.254097, 0.228531, 0.223817, 0.226083, 0.227473, 0.233558, 0.221842, 0.226158, 0.226721, 0.233965, 0.233928, 0.227553, 0.22634, 0.227024, 0.224867, 0.222894, 0.226208, 0.226544, 0.22669, 0.222148, 0.227183, 0.2262, 0.226296, 0.223623, 0.228054, 0.233945, 0.228663, 0.226271], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 0, 3, 0, 6, 0, 1, 28, 0, 28, 18, 0, 1, 1, 1, 0, 0]': ([0.262324, 0.262181, 0.254097, 0.228531, 0.223817, 0.226083, 0.227473, 0.233558, 0.221842, 0.226158, 0.226721, 0.233965, 0.233928, 0.227553, 0.22634, 0.227024, 0.224867, 0.222894, 0.226208, 0.226544, 0.22669, 0.222148, 0.227183, 0.2262, 0.226296, 0.223623, 0.228054, 0.233945, 0.228663, 0.226271], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
Code stats:
        Number of loops: 	75
        Max loop nest depth: 	5
        Additions: 		2273
        Multiplications: 	986
        Divisions: 		0
        Logical: 		0
        Reads: 			4637
        Writes: 		835
        Comparisons:		75
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest61.exe __orio_perftest61.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest61.exe  
Program Test Output: 
{'[3, 2, 1, 1, 0, 2, 0, 1, 1, 27, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.247643}
{'[3, 2, 1, 1, 0, 2, 0, 1, 1, 27, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.245026}
{'[3, 2, 1, 1, 0, 2, 0, 1, 1, 27, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.242589}
{'[3, 2, 1, 1, 0, 2, 0, 1, 1, 27, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.242111}
{'[3, 2, 1, 1, 0, 2, 0, 1, 1, 27, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.24163}
{'[3, 2, 1, 1, 0, 2, 0, 1, 1, 27, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.24098}
{'[3, 2, 1, 1, 0, 2, 0, 1, 1, 27, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.241631}
{'[3, 2, 1, 1, 0, 2, 0, 1, 1, 27, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.240748}
{'[3, 2, 1, 1, 0, 2, 0, 1, 1, 27, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.241083}
{'[3, 2, 1, 1, 0, 2, 0, 1, 1, 27, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.240905}
{'[3, 2, 1, 1, 0, 2, 0, 1, 1, 27, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.240948}
{'[3, 2, 1, 1, 0, 2, 0, 1, 1, 27, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.240298}
{'[3, 2, 1, 1, 0, 2, 0, 1, 1, 27, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.240879}
{'[3, 2, 1, 1, 0, 2, 0, 1, 1, 27, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.241645}
{'[3, 2, 1, 1, 0, 2, 0, 1, 1, 27, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.241001}
{'[3, 2, 1, 1, 0, 2, 0, 1, 1, 27, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.240402}
{'[3, 2, 1, 1, 0, 2, 0, 1, 1, 27, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.245646}
{'[3, 2, 1, 1, 0, 2, 0, 1, 1, 27, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.246992}
{'[3, 2, 1, 1, 0, 2, 0, 1, 1, 27, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.246753}
{'[3, 2, 1, 1, 0, 2, 0, 1, 1, 27, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.24159}
{'[3, 2, 1, 1, 0, 2, 0, 1, 1, 27, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.240768}
{'[3, 2, 1, 1, 0, 2, 0, 1, 1, 27, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.240372}
{'[3, 2, 1, 1, 0, 2, 0, 1, 1, 27, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.241028}
{'[3, 2, 1, 1, 0, 2, 0, 1, 1, 27, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.240739}
{'[3, 2, 1, 1, 0, 2, 0, 1, 1, 27, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.240417}
{'[3, 2, 1, 1, 0, 2, 0, 1, 1, 27, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.242113}
{'[3, 2, 1, 1, 0, 2, 0, 1, 1, 27, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.2404}
{'[3, 2, 1, 1, 0, 2, 0, 1, 1, 27, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.241137}
{'[3, 2, 1, 1, 0, 2, 0, 1, 1, 27, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.241095}
{'[3, 2, 1, 1, 0, 2, 0, 1, 1, 27, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.24102}

out:
 ["{'[3, 2, 1, 1, 0, 2, 0, 1, 1, 27, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.247643}", "{'[3, 2, 1, 1, 0, 2, 0, 1, 1, 27, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.245026}", "{'[3, 2, 1, 1, 0, 2, 0, 1, 1, 27, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.242589}", "{'[3, 2, 1, 1, 0, 2, 0, 1, 1, 27, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.242111}", "{'[3, 2, 1, 1, 0, 2, 0, 1, 1, 27, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.24163}", "{'[3, 2, 1, 1, 0, 2, 0, 1, 1, 27, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.24098}", "{'[3, 2, 1, 1, 0, 2, 0, 1, 1, 27, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.241631}", "{'[3, 2, 1, 1, 0, 2, 0, 1, 1, 27, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.240748}", "{'[3, 2, 1, 1, 0, 2, 0, 1, 1, 27, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.241083}", "{'[3, 2, 1, 1, 0, 2, 0, 1, 1, 27, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.240905}", "{'[3, 2, 1, 1, 0, 2, 0, 1, 1, 27, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.240948}", "{'[3, 2, 1, 1, 0, 2, 0, 1, 1, 27, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.240298}", "{'[3, 2, 1, 1, 0, 2, 0, 1, 1, 27, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.240879}", "{'[3, 2, 1, 1, 0, 2, 0, 1, 1, 27, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.241645}", "{'[3, 2, 1, 1, 0, 2, 0, 1, 1, 27, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.241001}", "{'[3, 2, 1, 1, 0, 2, 0, 1, 1, 27, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.240402}", "{'[3, 2, 1, 1, 0, 2, 0, 1, 1, 27, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.245646}", "{'[3, 2, 1, 1, 0, 2, 0, 1, 1, 27, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.246992}", "{'[3, 2, 1, 1, 0, 2, 0, 1, 1, 27, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.246753}", "{'[3, 2, 1, 1, 0, 2, 0, 1, 1, 27, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.24159}", "{'[3, 2, 1, 1, 0, 2, 0, 1, 1, 27, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.240768}", "{'[3, 2, 1, 1, 0, 2, 0, 1, 1, 27, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.240372}", "{'[3, 2, 1, 1, 0, 2, 0, 1, 1, 27, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.241028}", "{'[3, 2, 1, 1, 0, 2, 0, 1, 1, 27, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.240739}", "{'[3, 2, 1, 1, 0, 2, 0, 1, 1, 27, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.240417}", "{'[3, 2, 1, 1, 0, 2, 0, 1, 1, 27, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.242113}", "{'[3, 2, 1, 1, 0, 2, 0, 1, 1, 27, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.2404}", "{'[3, 2, 1, 1, 0, 2, 0, 1, 1, 27, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.241137}", "{'[3, 2, 1, 1, 0, 2, 0, 1, 1, 27, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.241095}", "{'[3, 2, 1, 1, 0, 2, 0, 1, 1, 27, 0, 28, 0, 1, 1, 1, 1, 0]' : 0.24102}"]
returning from 'run': {'[3, 2, 1, 1, 0, 2, 0, 1, 1, 27, 0, 28, 0, 1, 1, 1, 1, 0]': ([0.247643, 0.245026, 0.242589, 0.242111, 0.24163, 0.24098, 0.241631, 0.240748, 0.241083, 0.240905, 0.240948, 0.240298, 0.240879, 0.241645, 0.241001, 0.240402, 0.245646, 0.246992, 0.246753, 0.24159, 0.240768, 0.240372, 0.241028, 0.240739, 0.240417, 0.242113, 0.2404, 0.241137, 0.241095, 0.24102], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 2, 1, 1, 0, 2, 0, 1, 1, 27, 0, 28, 0, 1, 1, 1, 1, 0]': ([0.247643, 0.245026, 0.242589, 0.242111, 0.24163, 0.24098, 0.241631, 0.240748, 0.241083, 0.240905, 0.240948, 0.240298, 0.240879, 0.241645, 0.241001, 0.240402, 0.245646, 0.246992, 0.246753, 0.24159, 0.240768, 0.240372, 0.241028, 0.240739, 0.240417, 0.242113, 0.2404, 0.241137, 0.241095, 0.24102], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = iii
Code stats:
        Number of loops: 	168
        Max loop nest depth: 	5
        Additions: 		17049
        Multiplications: 	3906
        Divisions: 		0
        Logical: 		0
        Reads: 			24338
        Writes: 		2435
        Comparisons:		168
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest62.exe __orio_perftest62.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest62.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest62.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest62.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest62.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	64
        Max loop nest depth: 	4
        Additions: 		482
        Multiplications: 	120
        Divisions: 		0
        Logical: 		0
        Reads: 			1340
        Writes: 		335
        Comparisons:		64
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest63.exe __orio_perftest63.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest63.exe  
Program Test Output: 
{'[0, 0, 0, 6, 1, 5, 0, 1, 5, 20, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.120256}
{'[0, 0, 0, 6, 1, 5, 0, 1, 5, 20, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.120213}
{'[0, 0, 0, 6, 1, 5, 0, 1, 5, 20, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.120154}
{'[0, 0, 0, 6, 1, 5, 0, 1, 5, 20, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.120132}
{'[0, 0, 0, 6, 1, 5, 0, 1, 5, 20, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.110536}
{'[0, 0, 0, 6, 1, 5, 0, 1, 5, 20, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.108128}
{'[0, 0, 0, 6, 1, 5, 0, 1, 5, 20, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.107832}
{'[0, 0, 0, 6, 1, 5, 0, 1, 5, 20, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.107972}
{'[0, 0, 0, 6, 1, 5, 0, 1, 5, 20, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.106011}
{'[0, 0, 0, 6, 1, 5, 0, 1, 5, 20, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.107899}
{'[0, 0, 0, 6, 1, 5, 0, 1, 5, 20, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.108014}
{'[0, 0, 0, 6, 1, 5, 0, 1, 5, 20, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.107574}
{'[0, 0, 0, 6, 1, 5, 0, 1, 5, 20, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.107688}
{'[0, 0, 0, 6, 1, 5, 0, 1, 5, 20, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.107903}
{'[0, 0, 0, 6, 1, 5, 0, 1, 5, 20, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.107796}
{'[0, 0, 0, 6, 1, 5, 0, 1, 5, 20, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.106526}
{'[0, 0, 0, 6, 1, 5, 0, 1, 5, 20, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.10537}
{'[0, 0, 0, 6, 1, 5, 0, 1, 5, 20, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.105451}
{'[0, 0, 0, 6, 1, 5, 0, 1, 5, 20, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.106012}
{'[0, 0, 0, 6, 1, 5, 0, 1, 5, 20, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.108826}
{'[0, 0, 0, 6, 1, 5, 0, 1, 5, 20, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.107666}
{'[0, 0, 0, 6, 1, 5, 0, 1, 5, 20, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.107595}
{'[0, 0, 0, 6, 1, 5, 0, 1, 5, 20, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.107544}
{'[0, 0, 0, 6, 1, 5, 0, 1, 5, 20, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.108385}
{'[0, 0, 0, 6, 1, 5, 0, 1, 5, 20, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.109717}
{'[0, 0, 0, 6, 1, 5, 0, 1, 5, 20, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.109722}
{'[0, 0, 0, 6, 1, 5, 0, 1, 5, 20, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.109959}
{'[0, 0, 0, 6, 1, 5, 0, 1, 5, 20, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.110129}
{'[0, 0, 0, 6, 1, 5, 0, 1, 5, 20, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.11003}
{'[0, 0, 0, 6, 1, 5, 0, 1, 5, 20, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.108547}

out:
 ["{'[0, 0, 0, 6, 1, 5, 0, 1, 5, 20, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.120256}", "{'[0, 0, 0, 6, 1, 5, 0, 1, 5, 20, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.120213}", "{'[0, 0, 0, 6, 1, 5, 0, 1, 5, 20, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.120154}", "{'[0, 0, 0, 6, 1, 5, 0, 1, 5, 20, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.120132}", "{'[0, 0, 0, 6, 1, 5, 0, 1, 5, 20, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.110536}", "{'[0, 0, 0, 6, 1, 5, 0, 1, 5, 20, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.108128}", "{'[0, 0, 0, 6, 1, 5, 0, 1, 5, 20, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.107832}", "{'[0, 0, 0, 6, 1, 5, 0, 1, 5, 20, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.107972}", "{'[0, 0, 0, 6, 1, 5, 0, 1, 5, 20, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.106011}", "{'[0, 0, 0, 6, 1, 5, 0, 1, 5, 20, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.107899}", "{'[0, 0, 0, 6, 1, 5, 0, 1, 5, 20, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.108014}", "{'[0, 0, 0, 6, 1, 5, 0, 1, 5, 20, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.107574}", "{'[0, 0, 0, 6, 1, 5, 0, 1, 5, 20, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.107688}", "{'[0, 0, 0, 6, 1, 5, 0, 1, 5, 20, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.107903}", "{'[0, 0, 0, 6, 1, 5, 0, 1, 5, 20, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.107796}", "{'[0, 0, 0, 6, 1, 5, 0, 1, 5, 20, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.106526}", "{'[0, 0, 0, 6, 1, 5, 0, 1, 5, 20, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.10537}", "{'[0, 0, 0, 6, 1, 5, 0, 1, 5, 20, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.105451}", "{'[0, 0, 0, 6, 1, 5, 0, 1, 5, 20, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.106012}", "{'[0, 0, 0, 6, 1, 5, 0, 1, 5, 20, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.108826}", "{'[0, 0, 0, 6, 1, 5, 0, 1, 5, 20, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.107666}", "{'[0, 0, 0, 6, 1, 5, 0, 1, 5, 20, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.107595}", "{'[0, 0, 0, 6, 1, 5, 0, 1, 5, 20, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.107544}", "{'[0, 0, 0, 6, 1, 5, 0, 1, 5, 20, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.108385}", "{'[0, 0, 0, 6, 1, 5, 0, 1, 5, 20, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.109717}", "{'[0, 0, 0, 6, 1, 5, 0, 1, 5, 20, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.109722}", "{'[0, 0, 0, 6, 1, 5, 0, 1, 5, 20, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.109959}", "{'[0, 0, 0, 6, 1, 5, 0, 1, 5, 20, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.110129}", "{'[0, 0, 0, 6, 1, 5, 0, 1, 5, 20, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.11003}", "{'[0, 0, 0, 6, 1, 5, 0, 1, 5, 20, 0, 0, 1, 0, 0, 1, 1, 0]' : 0.108547}"]
returning from 'run': {'[0, 0, 0, 6, 1, 5, 0, 1, 5, 20, 0, 0, 1, 0, 0, 1, 1, 0]': ([0.120256, 0.120213, 0.120154, 0.120132, 0.110536, 0.108128, 0.107832, 0.107972, 0.106011, 0.107899, 0.108014, 0.107574, 0.107688, 0.107903, 0.107796, 0.106526, 0.10537, 0.105451, 0.106012, 0.108826, 0.107666, 0.107595, 0.107544, 0.108385, 0.109717, 0.109722, 0.109959, 0.110129, 0.11003, 0.108547], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 0, 6, 1, 5, 0, 1, 5, 20, 0, 0, 1, 0, 0, 1, 1, 0]': ([0.120256, 0.120213, 0.120154, 0.120132, 0.110536, 0.108128, 0.107832, 0.107972, 0.106011, 0.107899, 0.108014, 0.107574, 0.107688, 0.107903, 0.107796, 0.106526, 0.10537, 0.105451, 0.106012, 0.108826, 0.107666, 0.107595, 0.107544, 0.108385, 0.109717, 0.109722, 0.109959, 0.110129, 0.11003, 0.108547], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = iii
Code stats:
        Number of loops: 	45
        Max loop nest depth: 	5
        Additions: 		562
        Multiplications: 	180
        Divisions: 		0
        Logical: 		0
        Reads: 			1259
        Writes: 		271
        Comparisons:		45
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest64.exe __orio_perftest64.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest64.exe  
Program Test Output: 
{'[4, 0, 1, 2, 3, 4, 1, 1, 17, 8, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.239754}
{'[4, 0, 1, 2, 3, 4, 1, 1, 17, 8, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.214825}
{'[4, 0, 1, 2, 3, 4, 1, 1, 17, 8, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.202069}
{'[4, 0, 1, 2, 3, 4, 1, 1, 17, 8, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.202621}
{'[4, 0, 1, 2, 3, 4, 1, 1, 17, 8, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.202266}
{'[4, 0, 1, 2, 3, 4, 1, 1, 17, 8, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.203017}
{'[4, 0, 1, 2, 3, 4, 1, 1, 17, 8, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.202413}
{'[4, 0, 1, 2, 3, 4, 1, 1, 17, 8, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.202391}
{'[4, 0, 1, 2, 3, 4, 1, 1, 17, 8, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.202686}
{'[4, 0, 1, 2, 3, 4, 1, 1, 17, 8, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.202449}
{'[4, 0, 1, 2, 3, 4, 1, 1, 17, 8, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.202435}
{'[4, 0, 1, 2, 3, 4, 1, 1, 17, 8, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.204532}
{'[4, 0, 1, 2, 3, 4, 1, 1, 17, 8, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.206114}
{'[4, 0, 1, 2, 3, 4, 1, 1, 17, 8, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.205498}
{'[4, 0, 1, 2, 3, 4, 1, 1, 17, 8, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.205425}
{'[4, 0, 1, 2, 3, 4, 1, 1, 17, 8, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.205507}
{'[4, 0, 1, 2, 3, 4, 1, 1, 17, 8, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.205489}
{'[4, 0, 1, 2, 3, 4, 1, 1, 17, 8, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.20564}
{'[4, 0, 1, 2, 3, 4, 1, 1, 17, 8, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.205915}
{'[4, 0, 1, 2, 3, 4, 1, 1, 17, 8, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.205962}
{'[4, 0, 1, 2, 3, 4, 1, 1, 17, 8, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.205709}
{'[4, 0, 1, 2, 3, 4, 1, 1, 17, 8, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.205703}
{'[4, 0, 1, 2, 3, 4, 1, 1, 17, 8, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.205431}
{'[4, 0, 1, 2, 3, 4, 1, 1, 17, 8, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.205622}
{'[4, 0, 1, 2, 3, 4, 1, 1, 17, 8, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.20543}
{'[4, 0, 1, 2, 3, 4, 1, 1, 17, 8, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.205541}
{'[4, 0, 1, 2, 3, 4, 1, 1, 17, 8, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.205434}
{'[4, 0, 1, 2, 3, 4, 1, 1, 17, 8, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.2065}
{'[4, 0, 1, 2, 3, 4, 1, 1, 17, 8, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.205439}
{'[4, 0, 1, 2, 3, 4, 1, 1, 17, 8, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.205476}

out:
 ["{'[4, 0, 1, 2, 3, 4, 1, 1, 17, 8, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.239754}", "{'[4, 0, 1, 2, 3, 4, 1, 1, 17, 8, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.214825}", "{'[4, 0, 1, 2, 3, 4, 1, 1, 17, 8, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.202069}", "{'[4, 0, 1, 2, 3, 4, 1, 1, 17, 8, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.202621}", "{'[4, 0, 1, 2, 3, 4, 1, 1, 17, 8, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.202266}", "{'[4, 0, 1, 2, 3, 4, 1, 1, 17, 8, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.203017}", "{'[4, 0, 1, 2, 3, 4, 1, 1, 17, 8, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.202413}", "{'[4, 0, 1, 2, 3, 4, 1, 1, 17, 8, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.202391}", "{'[4, 0, 1, 2, 3, 4, 1, 1, 17, 8, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.202686}", "{'[4, 0, 1, 2, 3, 4, 1, 1, 17, 8, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.202449}", "{'[4, 0, 1, 2, 3, 4, 1, 1, 17, 8, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.202435}", "{'[4, 0, 1, 2, 3, 4, 1, 1, 17, 8, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.204532}", "{'[4, 0, 1, 2, 3, 4, 1, 1, 17, 8, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.206114}", "{'[4, 0, 1, 2, 3, 4, 1, 1, 17, 8, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.205498}", "{'[4, 0, 1, 2, 3, 4, 1, 1, 17, 8, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.205425}", "{'[4, 0, 1, 2, 3, 4, 1, 1, 17, 8, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.205507}", "{'[4, 0, 1, 2, 3, 4, 1, 1, 17, 8, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.205489}", "{'[4, 0, 1, 2, 3, 4, 1, 1, 17, 8, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.20564}", "{'[4, 0, 1, 2, 3, 4, 1, 1, 17, 8, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.205915}", "{'[4, 0, 1, 2, 3, 4, 1, 1, 17, 8, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.205962}", "{'[4, 0, 1, 2, 3, 4, 1, 1, 17, 8, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.205709}", "{'[4, 0, 1, 2, 3, 4, 1, 1, 17, 8, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.205703}", "{'[4, 0, 1, 2, 3, 4, 1, 1, 17, 8, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.205431}", "{'[4, 0, 1, 2, 3, 4, 1, 1, 17, 8, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.205622}", "{'[4, 0, 1, 2, 3, 4, 1, 1, 17, 8, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.20543}", "{'[4, 0, 1, 2, 3, 4, 1, 1, 17, 8, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.205541}", "{'[4, 0, 1, 2, 3, 4, 1, 1, 17, 8, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.205434}", "{'[4, 0, 1, 2, 3, 4, 1, 1, 17, 8, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.2065}", "{'[4, 0, 1, 2, 3, 4, 1, 1, 17, 8, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.205439}", "{'[4, 0, 1, 2, 3, 4, 1, 1, 17, 8, 0, 0, 0, 1, 0, 1, 0, 0]' : 0.205476}"]
returning from 'run': {'[4, 0, 1, 2, 3, 4, 1, 1, 17, 8, 0, 0, 0, 1, 0, 1, 0, 0]': ([0.239754, 0.214825, 0.202069, 0.202621, 0.202266, 0.203017, 0.202413, 0.202391, 0.202686, 0.202449, 0.202435, 0.204532, 0.206114, 0.205498, 0.205425, 0.205507, 0.205489, 0.20564, 0.205915, 0.205962, 0.205709, 0.205703, 0.205431, 0.205622, 0.20543, 0.205541, 0.205434, 0.2065, 0.205439, 0.205476], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 0, 1, 2, 3, 4, 1, 1, 17, 8, 0, 0, 0, 1, 0, 1, 0, 0]': ([0.239754, 0.214825, 0.202069, 0.202621, 0.202266, 0.203017, 0.202413, 0.202391, 0.202686, 0.202449, 0.202435, 0.204532, 0.206114, 0.205498, 0.205425, 0.205507, 0.205489, 0.20564, 0.205915, 0.205962, 0.205709, 0.205703, 0.205431, 0.205622, 0.20543, 0.205541, 0.205434, 0.2065, 0.205439, 0.205476], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	44
        Max loop nest depth: 	6
        Additions: 		742
        Multiplications: 	132
        Divisions: 		0
        Logical: 		0
        Reads: 			1318
        Writes: 		231
        Comparisons:		44
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest65.exe __orio_perftest65.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest65.exe  
Program Test Output: 
{'[1, 0, 6, 5, 6, 6, 1, 1, 28, 4, 0, 8, 0, 0, 0, 0, 1, 1]' : 0.186003}
{'[1, 0, 6, 5, 6, 6, 1, 1, 28, 4, 0, 8, 0, 0, 0, 0, 1, 1]' : 0.185882}
{'[1, 0, 6, 5, 6, 6, 1, 1, 28, 4, 0, 8, 0, 0, 0, 0, 1, 1]' : 0.185866}
{'[1, 0, 6, 5, 6, 6, 1, 1, 28, 4, 0, 8, 0, 0, 0, 0, 1, 1]' : 0.185947}
{'[1, 0, 6, 5, 6, 6, 1, 1, 28, 4, 0, 8, 0, 0, 0, 0, 1, 1]' : 0.183866}
{'[1, 0, 6, 5, 6, 6, 1, 1, 28, 4, 0, 8, 0, 0, 0, 0, 1, 1]' : 0.185232}
{'[1, 0, 6, 5, 6, 6, 1, 1, 28, 4, 0, 8, 0, 0, 0, 0, 1, 1]' : 0.185847}
{'[1, 0, 6, 5, 6, 6, 1, 1, 28, 4, 0, 8, 0, 0, 0, 0, 1, 1]' : 0.18597}
{'[1, 0, 6, 5, 6, 6, 1, 1, 28, 4, 0, 8, 0, 0, 0, 0, 1, 1]' : 0.186057}
{'[1, 0, 6, 5, 6, 6, 1, 1, 28, 4, 0, 8, 0, 0, 0, 0, 1, 1]' : 0.185948}
{'[1, 0, 6, 5, 6, 6, 1, 1, 28, 4, 0, 8, 0, 0, 0, 0, 1, 1]' : 0.185811}
{'[1, 0, 6, 5, 6, 6, 1, 1, 28, 4, 0, 8, 0, 0, 0, 0, 1, 1]' : 0.185646}
{'[1, 0, 6, 5, 6, 6, 1, 1, 28, 4, 0, 8, 0, 0, 0, 0, 1, 1]' : 0.18567}
{'[1, 0, 6, 5, 6, 6, 1, 1, 28, 4, 0, 8, 0, 0, 0, 0, 1, 1]' : 0.182212}
{'[1, 0, 6, 5, 6, 6, 1, 1, 28, 4, 0, 8, 0, 0, 0, 0, 1, 1]' : 0.180994}
{'[1, 0, 6, 5, 6, 6, 1, 1, 28, 4, 0, 8, 0, 0, 0, 0, 1, 1]' : 0.180717}
{'[1, 0, 6, 5, 6, 6, 1, 1, 28, 4, 0, 8, 0, 0, 0, 0, 1, 1]' : 0.185659}
{'[1, 0, 6, 5, 6, 6, 1, 1, 28, 4, 0, 8, 0, 0, 0, 0, 1, 1]' : 0.185661}
{'[1, 0, 6, 5, 6, 6, 1, 1, 28, 4, 0, 8, 0, 0, 0, 0, 1, 1]' : 0.185732}
{'[1, 0, 6, 5, 6, 6, 1, 1, 28, 4, 0, 8, 0, 0, 0, 0, 1, 1]' : 0.185809}
{'[1, 0, 6, 5, 6, 6, 1, 1, 28, 4, 0, 8, 0, 0, 0, 0, 1, 1]' : 0.185787}
{'[1, 0, 6, 5, 6, 6, 1, 1, 28, 4, 0, 8, 0, 0, 0, 0, 1, 1]' : 0.185773}
{'[1, 0, 6, 5, 6, 6, 1, 1, 28, 4, 0, 8, 0, 0, 0, 0, 1, 1]' : 0.185644}
{'[1, 0, 6, 5, 6, 6, 1, 1, 28, 4, 0, 8, 0, 0, 0, 0, 1, 1]' : 0.185625}
{'[1, 0, 6, 5, 6, 6, 1, 1, 28, 4, 0, 8, 0, 0, 0, 0, 1, 1]' : 0.182551}
{'[1, 0, 6, 5, 6, 6, 1, 1, 28, 4, 0, 8, 0, 0, 0, 0, 1, 1]' : 0.180876}
{'[1, 0, 6, 5, 6, 6, 1, 1, 28, 4, 0, 8, 0, 0, 0, 0, 1, 1]' : 0.180706}
{'[1, 0, 6, 5, 6, 6, 1, 1, 28, 4, 0, 8, 0, 0, 0, 0, 1, 1]' : 0.180594}
{'[1, 0, 6, 5, 6, 6, 1, 1, 28, 4, 0, 8, 0, 0, 0, 0, 1, 1]' : 0.180674}
{'[1, 0, 6, 5, 6, 6, 1, 1, 28, 4, 0, 8, 0, 0, 0, 0, 1, 1]' : 0.180756}

out:
 ["{'[1, 0, 6, 5, 6, 6, 1, 1, 28, 4, 0, 8, 0, 0, 0, 0, 1, 1]' : 0.186003}", "{'[1, 0, 6, 5, 6, 6, 1, 1, 28, 4, 0, 8, 0, 0, 0, 0, 1, 1]' : 0.185882}", "{'[1, 0, 6, 5, 6, 6, 1, 1, 28, 4, 0, 8, 0, 0, 0, 0, 1, 1]' : 0.185866}", "{'[1, 0, 6, 5, 6, 6, 1, 1, 28, 4, 0, 8, 0, 0, 0, 0, 1, 1]' : 0.185947}", "{'[1, 0, 6, 5, 6, 6, 1, 1, 28, 4, 0, 8, 0, 0, 0, 0, 1, 1]' : 0.183866}", "{'[1, 0, 6, 5, 6, 6, 1, 1, 28, 4, 0, 8, 0, 0, 0, 0, 1, 1]' : 0.185232}", "{'[1, 0, 6, 5, 6, 6, 1, 1, 28, 4, 0, 8, 0, 0, 0, 0, 1, 1]' : 0.185847}", "{'[1, 0, 6, 5, 6, 6, 1, 1, 28, 4, 0, 8, 0, 0, 0, 0, 1, 1]' : 0.18597}", "{'[1, 0, 6, 5, 6, 6, 1, 1, 28, 4, 0, 8, 0, 0, 0, 0, 1, 1]' : 0.186057}", "{'[1, 0, 6, 5, 6, 6, 1, 1, 28, 4, 0, 8, 0, 0, 0, 0, 1, 1]' : 0.185948}", "{'[1, 0, 6, 5, 6, 6, 1, 1, 28, 4, 0, 8, 0, 0, 0, 0, 1, 1]' : 0.185811}", "{'[1, 0, 6, 5, 6, 6, 1, 1, 28, 4, 0, 8, 0, 0, 0, 0, 1, 1]' : 0.185646}", "{'[1, 0, 6, 5, 6, 6, 1, 1, 28, 4, 0, 8, 0, 0, 0, 0, 1, 1]' : 0.18567}", "{'[1, 0, 6, 5, 6, 6, 1, 1, 28, 4, 0, 8, 0, 0, 0, 0, 1, 1]' : 0.182212}", "{'[1, 0, 6, 5, 6, 6, 1, 1, 28, 4, 0, 8, 0, 0, 0, 0, 1, 1]' : 0.180994}", "{'[1, 0, 6, 5, 6, 6, 1, 1, 28, 4, 0, 8, 0, 0, 0, 0, 1, 1]' : 0.180717}", "{'[1, 0, 6, 5, 6, 6, 1, 1, 28, 4, 0, 8, 0, 0, 0, 0, 1, 1]' : 0.185659}", "{'[1, 0, 6, 5, 6, 6, 1, 1, 28, 4, 0, 8, 0, 0, 0, 0, 1, 1]' : 0.185661}", "{'[1, 0, 6, 5, 6, 6, 1, 1, 28, 4, 0, 8, 0, 0, 0, 0, 1, 1]' : 0.185732}", "{'[1, 0, 6, 5, 6, 6, 1, 1, 28, 4, 0, 8, 0, 0, 0, 0, 1, 1]' : 0.185809}", "{'[1, 0, 6, 5, 6, 6, 1, 1, 28, 4, 0, 8, 0, 0, 0, 0, 1, 1]' : 0.185787}", "{'[1, 0, 6, 5, 6, 6, 1, 1, 28, 4, 0, 8, 0, 0, 0, 0, 1, 1]' : 0.185773}", "{'[1, 0, 6, 5, 6, 6, 1, 1, 28, 4, 0, 8, 0, 0, 0, 0, 1, 1]' : 0.185644}", "{'[1, 0, 6, 5, 6, 6, 1, 1, 28, 4, 0, 8, 0, 0, 0, 0, 1, 1]' : 0.185625}", "{'[1, 0, 6, 5, 6, 6, 1, 1, 28, 4, 0, 8, 0, 0, 0, 0, 1, 1]' : 0.182551}", "{'[1, 0, 6, 5, 6, 6, 1, 1, 28, 4, 0, 8, 0, 0, 0, 0, 1, 1]' : 0.180876}", "{'[1, 0, 6, 5, 6, 6, 1, 1, 28, 4, 0, 8, 0, 0, 0, 0, 1, 1]' : 0.180706}", "{'[1, 0, 6, 5, 6, 6, 1, 1, 28, 4, 0, 8, 0, 0, 0, 0, 1, 1]' : 0.180594}", "{'[1, 0, 6, 5, 6, 6, 1, 1, 28, 4, 0, 8, 0, 0, 0, 0, 1, 1]' : 0.180674}", "{'[1, 0, 6, 5, 6, 6, 1, 1, 28, 4, 0, 8, 0, 0, 0, 0, 1, 1]' : 0.180756}"]
returning from 'run': {'[1, 0, 6, 5, 6, 6, 1, 1, 28, 4, 0, 8, 0, 0, 0, 0, 1, 1]': ([0.186003, 0.185882, 0.185866, 0.185947, 0.183866, 0.185232, 0.185847, 0.18597, 0.186057, 0.185948, 0.185811, 0.185646, 0.18567, 0.182212, 0.180994, 0.180717, 0.185659, 0.185661, 0.185732, 0.185809, 0.185787, 0.185773, 0.185644, 0.185625, 0.182551, 0.180876, 0.180706, 0.180594, 0.180674, 0.180756], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 6, 5, 6, 6, 1, 1, 28, 4, 0, 8, 0, 0, 0, 0, 1, 1]': ([0.186003, 0.185882, 0.185866, 0.185947, 0.183866, 0.185232, 0.185847, 0.18597, 0.186057, 0.185948, 0.185811, 0.185646, 0.18567, 0.182212, 0.180994, 0.180717, 0.185659, 0.185661, 0.185732, 0.185809, 0.185787, 0.185773, 0.185644, 0.185625, 0.182551, 0.180876, 0.180706, 0.180594, 0.180674, 0.180756], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		1244
        Multiplications: 	320
        Divisions: 		0
        Logical: 		0
        Reads: 			1939
        Writes: 		221
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest66.exe __orio_perftest66.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest66.exe  
Program Test Output: 
{'[0, 1, 6, 0, 5, 6, 0, 1, 27, 23, 0, 9, 1, 1, 0, 0, 1, 0]' : 0.128471}
{'[0, 1, 6, 0, 5, 6, 0, 1, 27, 23, 0, 9, 1, 1, 0, 0, 1, 0]' : 0.128916}
{'[0, 1, 6, 0, 5, 6, 0, 1, 27, 23, 0, 9, 1, 1, 0, 0, 1, 0]' : 0.125245}
{'[0, 1, 6, 0, 5, 6, 0, 1, 27, 23, 0, 9, 1, 1, 0, 0, 1, 0]' : 0.118304}
{'[0, 1, 6, 0, 5, 6, 0, 1, 27, 23, 0, 9, 1, 1, 0, 0, 1, 0]' : 0.109272}
{'[0, 1, 6, 0, 5, 6, 0, 1, 27, 23, 0, 9, 1, 1, 0, 0, 1, 0]' : 0.109184}
{'[0, 1, 6, 0, 5, 6, 0, 1, 27, 23, 0, 9, 1, 1, 0, 0, 1, 0]' : 0.109194}
{'[0, 1, 6, 0, 5, 6, 0, 1, 27, 23, 0, 9, 1, 1, 0, 0, 1, 0]' : 0.1095}
{'[0, 1, 6, 0, 5, 6, 0, 1, 27, 23, 0, 9, 1, 1, 0, 0, 1, 0]' : 0.109739}
{'[0, 1, 6, 0, 5, 6, 0, 1, 27, 23, 0, 9, 1, 1, 0, 0, 1, 0]' : 0.112518}
{'[0, 1, 6, 0, 5, 6, 0, 1, 27, 23, 0, 9, 1, 1, 0, 0, 1, 0]' : 0.111547}
{'[0, 1, 6, 0, 5, 6, 0, 1, 27, 23, 0, 9, 1, 1, 0, 0, 1, 0]' : 0.109529}
{'[0, 1, 6, 0, 5, 6, 0, 1, 27, 23, 0, 9, 1, 1, 0, 0, 1, 0]' : 0.109547}
{'[0, 1, 6, 0, 5, 6, 0, 1, 27, 23, 0, 9, 1, 1, 0, 0, 1, 0]' : 0.109268}
{'[0, 1, 6, 0, 5, 6, 0, 1, 27, 23, 0, 9, 1, 1, 0, 0, 1, 0]' : 0.109135}
{'[0, 1, 6, 0, 5, 6, 0, 1, 27, 23, 0, 9, 1, 1, 0, 0, 1, 0]' : 0.109286}
{'[0, 1, 6, 0, 5, 6, 0, 1, 27, 23, 0, 9, 1, 1, 0, 0, 1, 0]' : 0.109468}
{'[0, 1, 6, 0, 5, 6, 0, 1, 27, 23, 0, 9, 1, 1, 0, 0, 1, 0]' : 0.109474}
{'[0, 1, 6, 0, 5, 6, 0, 1, 27, 23, 0, 9, 1, 1, 0, 0, 1, 0]' : 0.112336}
{'[0, 1, 6, 0, 5, 6, 0, 1, 27, 23, 0, 9, 1, 1, 0, 0, 1, 0]' : 0.112001}
{'[0, 1, 6, 0, 5, 6, 0, 1, 27, 23, 0, 9, 1, 1, 0, 0, 1, 0]' : 0.109341}
{'[0, 1, 6, 0, 5, 6, 0, 1, 27, 23, 0, 9, 1, 1, 0, 0, 1, 0]' : 0.109336}
{'[0, 1, 6, 0, 5, 6, 0, 1, 27, 23, 0, 9, 1, 1, 0, 0, 1, 0]' : 0.109251}
{'[0, 1, 6, 0, 5, 6, 0, 1, 27, 23, 0, 9, 1, 1, 0, 0, 1, 0]' : 0.109272}
{'[0, 1, 6, 0, 5, 6, 0, 1, 27, 23, 0, 9, 1, 1, 0, 0, 1, 0]' : 0.109464}
{'[0, 1, 6, 0, 5, 6, 0, 1, 27, 23, 0, 9, 1, 1, 0, 0, 1, 0]' : 0.109345}
{'[0, 1, 6, 0, 5, 6, 0, 1, 27, 23, 0, 9, 1, 1, 0, 0, 1, 0]' : 0.109273}
{'[0, 1, 6, 0, 5, 6, 0, 1, 27, 23, 0, 9, 1, 1, 0, 0, 1, 0]' : 0.112447}
{'[0, 1, 6, 0, 5, 6, 0, 1, 27, 23, 0, 9, 1, 1, 0, 0, 1, 0]' : 0.112312}
{'[0, 1, 6, 0, 5, 6, 0, 1, 27, 23, 0, 9, 1, 1, 0, 0, 1, 0]' : 0.109481}

out:
 ["{'[0, 1, 6, 0, 5, 6, 0, 1, 27, 23, 0, 9, 1, 1, 0, 0, 1, 0]' : 0.128471}", "{'[0, 1, 6, 0, 5, 6, 0, 1, 27, 23, 0, 9, 1, 1, 0, 0, 1, 0]' : 0.128916}", "{'[0, 1, 6, 0, 5, 6, 0, 1, 27, 23, 0, 9, 1, 1, 0, 0, 1, 0]' : 0.125245}", "{'[0, 1, 6, 0, 5, 6, 0, 1, 27, 23, 0, 9, 1, 1, 0, 0, 1, 0]' : 0.118304}", "{'[0, 1, 6, 0, 5, 6, 0, 1, 27, 23, 0, 9, 1, 1, 0, 0, 1, 0]' : 0.109272}", "{'[0, 1, 6, 0, 5, 6, 0, 1, 27, 23, 0, 9, 1, 1, 0, 0, 1, 0]' : 0.109184}", "{'[0, 1, 6, 0, 5, 6, 0, 1, 27, 23, 0, 9, 1, 1, 0, 0, 1, 0]' : 0.109194}", "{'[0, 1, 6, 0, 5, 6, 0, 1, 27, 23, 0, 9, 1, 1, 0, 0, 1, 0]' : 0.1095}", "{'[0, 1, 6, 0, 5, 6, 0, 1, 27, 23, 0, 9, 1, 1, 0, 0, 1, 0]' : 0.109739}", "{'[0, 1, 6, 0, 5, 6, 0, 1, 27, 23, 0, 9, 1, 1, 0, 0, 1, 0]' : 0.112518}", "{'[0, 1, 6, 0, 5, 6, 0, 1, 27, 23, 0, 9, 1, 1, 0, 0, 1, 0]' : 0.111547}", "{'[0, 1, 6, 0, 5, 6, 0, 1, 27, 23, 0, 9, 1, 1, 0, 0, 1, 0]' : 0.109529}", "{'[0, 1, 6, 0, 5, 6, 0, 1, 27, 23, 0, 9, 1, 1, 0, 0, 1, 0]' : 0.109547}", "{'[0, 1, 6, 0, 5, 6, 0, 1, 27, 23, 0, 9, 1, 1, 0, 0, 1, 0]' : 0.109268}", "{'[0, 1, 6, 0, 5, 6, 0, 1, 27, 23, 0, 9, 1, 1, 0, 0, 1, 0]' : 0.109135}", "{'[0, 1, 6, 0, 5, 6, 0, 1, 27, 23, 0, 9, 1, 1, 0, 0, 1, 0]' : 0.109286}", "{'[0, 1, 6, 0, 5, 6, 0, 1, 27, 23, 0, 9, 1, 1, 0, 0, 1, 0]' : 0.109468}", "{'[0, 1, 6, 0, 5, 6, 0, 1, 27, 23, 0, 9, 1, 1, 0, 0, 1, 0]' : 0.109474}", "{'[0, 1, 6, 0, 5, 6, 0, 1, 27, 23, 0, 9, 1, 1, 0, 0, 1, 0]' : 0.112336}", "{'[0, 1, 6, 0, 5, 6, 0, 1, 27, 23, 0, 9, 1, 1, 0, 0, 1, 0]' : 0.112001}", "{'[0, 1, 6, 0, 5, 6, 0, 1, 27, 23, 0, 9, 1, 1, 0, 0, 1, 0]' : 0.109341}", "{'[0, 1, 6, 0, 5, 6, 0, 1, 27, 23, 0, 9, 1, 1, 0, 0, 1, 0]' : 0.109336}", "{'[0, 1, 6, 0, 5, 6, 0, 1, 27, 23, 0, 9, 1, 1, 0, 0, 1, 0]' : 0.109251}", "{'[0, 1, 6, 0, 5, 6, 0, 1, 27, 23, 0, 9, 1, 1, 0, 0, 1, 0]' : 0.109272}", "{'[0, 1, 6, 0, 5, 6, 0, 1, 27, 23, 0, 9, 1, 1, 0, 0, 1, 0]' : 0.109464}", "{'[0, 1, 6, 0, 5, 6, 0, 1, 27, 23, 0, 9, 1, 1, 0, 0, 1, 0]' : 0.109345}", "{'[0, 1, 6, 0, 5, 6, 0, 1, 27, 23, 0, 9, 1, 1, 0, 0, 1, 0]' : 0.109273}", "{'[0, 1, 6, 0, 5, 6, 0, 1, 27, 23, 0, 9, 1, 1, 0, 0, 1, 0]' : 0.112447}", "{'[0, 1, 6, 0, 5, 6, 0, 1, 27, 23, 0, 9, 1, 1, 0, 0, 1, 0]' : 0.112312}", "{'[0, 1, 6, 0, 5, 6, 0, 1, 27, 23, 0, 9, 1, 1, 0, 0, 1, 0]' : 0.109481}"]
returning from 'run': {'[0, 1, 6, 0, 5, 6, 0, 1, 27, 23, 0, 9, 1, 1, 0, 0, 1, 0]': ([0.128471, 0.128916, 0.125245, 0.118304, 0.109272, 0.109184, 0.109194, 0.1095, 0.109739, 0.112518, 0.111547, 0.109529, 0.109547, 0.109268, 0.109135, 0.109286, 0.109468, 0.109474, 0.112336, 0.112001, 0.109341, 0.109336, 0.109251, 0.109272, 0.109464, 0.109345, 0.109273, 0.112447, 0.112312, 0.109481], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 1, 6, 0, 5, 6, 0, 1, 27, 23, 0, 9, 1, 1, 0, 0, 1, 0]': ([0.128471, 0.128916, 0.125245, 0.118304, 0.109272, 0.109184, 0.109194, 0.1095, 0.109739, 0.112518, 0.111547, 0.109529, 0.109547, 0.109268, 0.109135, 0.109286, 0.109468, 0.109474, 0.112336, 0.112001, 0.109341, 0.109336, 0.109251, 0.109272, 0.109464, 0.109345, 0.109273, 0.112447, 0.112312, 0.109481], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		298
        Multiplications: 	86
        Divisions: 		0
        Logical: 		0
        Reads: 			611
        Writes: 		120
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest67.exe __orio_perftest67.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest67.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest67.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest67.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest67.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	6
        Additions: 		93
        Multiplications: 	22
        Divisions: 		0
        Logical: 		0
        Reads: 			223
        Writes: 		46
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest68.exe __orio_perftest68.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest68.exe  
Program Test Output: 
{'[6, 1, 1, 5, 0, 3, 0, 1, 4, 0, 8, 0, 0, 0, 0, 0, 0, 0]' : 0.339918}
{'[6, 1, 1, 5, 0, 3, 0, 1, 4, 0, 8, 0, 0, 0, 0, 0, 0, 0]' : 0.333728}
{'[6, 1, 1, 5, 0, 3, 0, 1, 4, 0, 8, 0, 0, 0, 0, 0, 0, 0]' : 0.302135}
{'[6, 1, 1, 5, 0, 3, 0, 1, 4, 0, 8, 0, 0, 0, 0, 0, 0, 0]' : 0.302534}
{'[6, 1, 1, 5, 0, 3, 0, 1, 4, 0, 8, 0, 0, 0, 0, 0, 0, 0]' : 0.302165}
{'[6, 1, 1, 5, 0, 3, 0, 1, 4, 0, 8, 0, 0, 0, 0, 0, 0, 0]' : 0.302138}
{'[6, 1, 1, 5, 0, 3, 0, 1, 4, 0, 8, 0, 0, 0, 0, 0, 0, 0]' : 0.302228}
{'[6, 1, 1, 5, 0, 3, 0, 1, 4, 0, 8, 0, 0, 0, 0, 0, 0, 0]' : 0.30224}
{'[6, 1, 1, 5, 0, 3, 0, 1, 4, 0, 8, 0, 0, 0, 0, 0, 0, 0]' : 0.302155}
{'[6, 1, 1, 5, 0, 3, 0, 1, 4, 0, 8, 0, 0, 0, 0, 0, 0, 0]' : 0.302376}
{'[6, 1, 1, 5, 0, 3, 0, 1, 4, 0, 8, 0, 0, 0, 0, 0, 0, 0]' : 0.302177}
{'[6, 1, 1, 5, 0, 3, 0, 1, 4, 0, 8, 0, 0, 0, 0, 0, 0, 0]' : 0.302213}
{'[6, 1, 1, 5, 0, 3, 0, 1, 4, 0, 8, 0, 0, 0, 0, 0, 0, 0]' : 0.302194}
{'[6, 1, 1, 5, 0, 3, 0, 1, 4, 0, 8, 0, 0, 0, 0, 0, 0, 0]' : 0.302158}
{'[6, 1, 1, 5, 0, 3, 0, 1, 4, 0, 8, 0, 0, 0, 0, 0, 0, 0]' : 0.302171}
{'[6, 1, 1, 5, 0, 3, 0, 1, 4, 0, 8, 0, 0, 0, 0, 0, 0, 0]' : 0.301678}
{'[6, 1, 1, 5, 0, 3, 0, 1, 4, 0, 8, 0, 0, 0, 0, 0, 0, 0]' : 0.298391}
{'[6, 1, 1, 5, 0, 3, 0, 1, 4, 0, 8, 0, 0, 0, 0, 0, 0, 0]' : 0.302276}
{'[6, 1, 1, 5, 0, 3, 0, 1, 4, 0, 8, 0, 0, 0, 0, 0, 0, 0]' : 0.302194}
{'[6, 1, 1, 5, 0, 3, 0, 1, 4, 0, 8, 0, 0, 0, 0, 0, 0, 0]' : 0.302236}
{'[6, 1, 1, 5, 0, 3, 0, 1, 4, 0, 8, 0, 0, 0, 0, 0, 0, 0]' : 0.302168}
{'[6, 1, 1, 5, 0, 3, 0, 1, 4, 0, 8, 0, 0, 0, 0, 0, 0, 0]' : 0.302189}
{'[6, 1, 1, 5, 0, 3, 0, 1, 4, 0, 8, 0, 0, 0, 0, 0, 0, 0]' : 0.30216}
{'[6, 1, 1, 5, 0, 3, 0, 1, 4, 0, 8, 0, 0, 0, 0, 0, 0, 0]' : 0.302349}
{'[6, 1, 1, 5, 0, 3, 0, 1, 4, 0, 8, 0, 0, 0, 0, 0, 0, 0]' : 0.297903}
{'[6, 1, 1, 5, 0, 3, 0, 1, 4, 0, 8, 0, 0, 0, 0, 0, 0, 0]' : 0.302208}
{'[6, 1, 1, 5, 0, 3, 0, 1, 4, 0, 8, 0, 0, 0, 0, 0, 0, 0]' : 0.297213}
{'[6, 1, 1, 5, 0, 3, 0, 1, 4, 0, 8, 0, 0, 0, 0, 0, 0, 0]' : 0.302234}
{'[6, 1, 1, 5, 0, 3, 0, 1, 4, 0, 8, 0, 0, 0, 0, 0, 0, 0]' : 0.302197}
{'[6, 1, 1, 5, 0, 3, 0, 1, 4, 0, 8, 0, 0, 0, 0, 0, 0, 0]' : 0.302547}

out:
 ["{'[6, 1, 1, 5, 0, 3, 0, 1, 4, 0, 8, 0, 0, 0, 0, 0, 0, 0]' : 0.339918}", "{'[6, 1, 1, 5, 0, 3, 0, 1, 4, 0, 8, 0, 0, 0, 0, 0, 0, 0]' : 0.333728}", "{'[6, 1, 1, 5, 0, 3, 0, 1, 4, 0, 8, 0, 0, 0, 0, 0, 0, 0]' : 0.302135}", "{'[6, 1, 1, 5, 0, 3, 0, 1, 4, 0, 8, 0, 0, 0, 0, 0, 0, 0]' : 0.302534}", "{'[6, 1, 1, 5, 0, 3, 0, 1, 4, 0, 8, 0, 0, 0, 0, 0, 0, 0]' : 0.302165}", "{'[6, 1, 1, 5, 0, 3, 0, 1, 4, 0, 8, 0, 0, 0, 0, 0, 0, 0]' : 0.302138}", "{'[6, 1, 1, 5, 0, 3, 0, 1, 4, 0, 8, 0, 0, 0, 0, 0, 0, 0]' : 0.302228}", "{'[6, 1, 1, 5, 0, 3, 0, 1, 4, 0, 8, 0, 0, 0, 0, 0, 0, 0]' : 0.30224}", "{'[6, 1, 1, 5, 0, 3, 0, 1, 4, 0, 8, 0, 0, 0, 0, 0, 0, 0]' : 0.302155}", "{'[6, 1, 1, 5, 0, 3, 0, 1, 4, 0, 8, 0, 0, 0, 0, 0, 0, 0]' : 0.302376}", "{'[6, 1, 1, 5, 0, 3, 0, 1, 4, 0, 8, 0, 0, 0, 0, 0, 0, 0]' : 0.302177}", "{'[6, 1, 1, 5, 0, 3, 0, 1, 4, 0, 8, 0, 0, 0, 0, 0, 0, 0]' : 0.302213}", "{'[6, 1, 1, 5, 0, 3, 0, 1, 4, 0, 8, 0, 0, 0, 0, 0, 0, 0]' : 0.302194}", "{'[6, 1, 1, 5, 0, 3, 0, 1, 4, 0, 8, 0, 0, 0, 0, 0, 0, 0]' : 0.302158}", "{'[6, 1, 1, 5, 0, 3, 0, 1, 4, 0, 8, 0, 0, 0, 0, 0, 0, 0]' : 0.302171}", "{'[6, 1, 1, 5, 0, 3, 0, 1, 4, 0, 8, 0, 0, 0, 0, 0, 0, 0]' : 0.301678}", "{'[6, 1, 1, 5, 0, 3, 0, 1, 4, 0, 8, 0, 0, 0, 0, 0, 0, 0]' : 0.298391}", "{'[6, 1, 1, 5, 0, 3, 0, 1, 4, 0, 8, 0, 0, 0, 0, 0, 0, 0]' : 0.302276}", "{'[6, 1, 1, 5, 0, 3, 0, 1, 4, 0, 8, 0, 0, 0, 0, 0, 0, 0]' : 0.302194}", "{'[6, 1, 1, 5, 0, 3, 0, 1, 4, 0, 8, 0, 0, 0, 0, 0, 0, 0]' : 0.302236}", "{'[6, 1, 1, 5, 0, 3, 0, 1, 4, 0, 8, 0, 0, 0, 0, 0, 0, 0]' : 0.302168}", "{'[6, 1, 1, 5, 0, 3, 0, 1, 4, 0, 8, 0, 0, 0, 0, 0, 0, 0]' : 0.302189}", "{'[6, 1, 1, 5, 0, 3, 0, 1, 4, 0, 8, 0, 0, 0, 0, 0, 0, 0]' : 0.30216}", "{'[6, 1, 1, 5, 0, 3, 0, 1, 4, 0, 8, 0, 0, 0, 0, 0, 0, 0]' : 0.302349}", "{'[6, 1, 1, 5, 0, 3, 0, 1, 4, 0, 8, 0, 0, 0, 0, 0, 0, 0]' : 0.297903}", "{'[6, 1, 1, 5, 0, 3, 0, 1, 4, 0, 8, 0, 0, 0, 0, 0, 0, 0]' : 0.302208}", "{'[6, 1, 1, 5, 0, 3, 0, 1, 4, 0, 8, 0, 0, 0, 0, 0, 0, 0]' : 0.297213}", "{'[6, 1, 1, 5, 0, 3, 0, 1, 4, 0, 8, 0, 0, 0, 0, 0, 0, 0]' : 0.302234}", "{'[6, 1, 1, 5, 0, 3, 0, 1, 4, 0, 8, 0, 0, 0, 0, 0, 0, 0]' : 0.302197}", "{'[6, 1, 1, 5, 0, 3, 0, 1, 4, 0, 8, 0, 0, 0, 0, 0, 0, 0]' : 0.302547}"]
returning from 'run': {'[6, 1, 1, 5, 0, 3, 0, 1, 4, 0, 8, 0, 0, 0, 0, 0, 0, 0]': ([0.339918, 0.333728, 0.302135, 0.302534, 0.302165, 0.302138, 0.302228, 0.30224, 0.302155, 0.302376, 0.302177, 0.302213, 0.302194, 0.302158, 0.302171, 0.301678, 0.298391, 0.302276, 0.302194, 0.302236, 0.302168, 0.302189, 0.30216, 0.302349, 0.297903, 0.302208, 0.297213, 0.302234, 0.302197, 0.302547], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 1, 1, 5, 0, 3, 0, 1, 4, 0, 8, 0, 0, 0, 0, 0, 0, 0]': ([0.339918, 0.333728, 0.302135, 0.302534, 0.302165, 0.302138, 0.302228, 0.30224, 0.302155, 0.302376, 0.302177, 0.302213, 0.302194, 0.302158, 0.302171, 0.301678, 0.298391, 0.302276, 0.302194, 0.302236, 0.302168, 0.302189, 0.30216, 0.302349, 0.297903, 0.302208, 0.297213, 0.302234, 0.302197, 0.302547], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	39
        Max loop nest depth: 	6
        Additions: 		2423
        Multiplications: 	600
        Divisions: 		0
        Logical: 		0
        Reads: 			3870
        Writes: 		418
        Comparisons:		39
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest69.exe __orio_perftest69.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest69.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest69.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest69.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest69.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	25
        Max loop nest depth: 	5
        Additions: 		2526
        Multiplications: 	1098
        Divisions: 		0
        Logical: 		0
        Reads: 			4792
        Writes: 		785
        Comparisons:		25
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest70.exe __orio_perftest70.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest70.exe  
Program Test Output: 
{'[5, 3, 6, 0, 6, 4, 1, 1, 4, 0, 29, 28, 1, 0, 0, 1, 1, 0]' : 0.135159}
{'[5, 3, 6, 0, 6, 4, 1, 1, 4, 0, 29, 28, 1, 0, 0, 1, 1, 0]' : 0.135151}
{'[5, 3, 6, 0, 6, 4, 1, 1, 4, 0, 29, 28, 1, 0, 0, 1, 1, 0]' : 0.135086}
{'[5, 3, 6, 0, 6, 4, 1, 1, 4, 0, 29, 28, 1, 0, 0, 1, 1, 0]' : 0.133041}
{'[5, 3, 6, 0, 6, 4, 1, 1, 4, 0, 29, 28, 1, 0, 0, 1, 1, 0]' : 0.115174}
{'[5, 3, 6, 0, 6, 4, 1, 1, 4, 0, 29, 28, 1, 0, 0, 1, 1, 0]' : 0.114269}
{'[5, 3, 6, 0, 6, 4, 1, 1, 4, 0, 29, 28, 1, 0, 0, 1, 1, 0]' : 0.114174}
{'[5, 3, 6, 0, 6, 4, 1, 1, 4, 0, 29, 28, 1, 0, 0, 1, 1, 0]' : 0.118108}
{'[5, 3, 6, 0, 6, 4, 1, 1, 4, 0, 29, 28, 1, 0, 0, 1, 1, 0]' : 0.118255}
{'[5, 3, 6, 0, 6, 4, 1, 1, 4, 0, 29, 28, 1, 0, 0, 1, 1, 0]' : 0.11812}
{'[5, 3, 6, 0, 6, 4, 1, 1, 4, 0, 29, 28, 1, 0, 0, 1, 1, 0]' : 0.115399}
{'[5, 3, 6, 0, 6, 4, 1, 1, 4, 0, 29, 28, 1, 0, 0, 1, 1, 0]' : 0.117366}
{'[5, 3, 6, 0, 6, 4, 1, 1, 4, 0, 29, 28, 1, 0, 0, 1, 1, 0]' : 0.11468}
{'[5, 3, 6, 0, 6, 4, 1, 1, 4, 0, 29, 28, 1, 0, 0, 1, 1, 0]' : 0.117785}
{'[5, 3, 6, 0, 6, 4, 1, 1, 4, 0, 29, 28, 1, 0, 0, 1, 1, 0]' : 0.118119}
{'[5, 3, 6, 0, 6, 4, 1, 1, 4, 0, 29, 28, 1, 0, 0, 1, 1, 0]' : 0.118061}
{'[5, 3, 6, 0, 6, 4, 1, 1, 4, 0, 29, 28, 1, 0, 0, 1, 1, 0]' : 0.117715}
{'[5, 3, 6, 0, 6, 4, 1, 1, 4, 0, 29, 28, 1, 0, 0, 1, 1, 0]' : 0.117889}
{'[5, 3, 6, 0, 6, 4, 1, 1, 4, 0, 29, 28, 1, 0, 0, 1, 1, 0]' : 0.116314}
{'[5, 3, 6, 0, 6, 4, 1, 1, 4, 0, 29, 28, 1, 0, 0, 1, 1, 0]' : 0.115175}
{'[5, 3, 6, 0, 6, 4, 1, 1, 4, 0, 29, 28, 1, 0, 0, 1, 1, 0]' : 0.117718}
{'[5, 3, 6, 0, 6, 4, 1, 1, 4, 0, 29, 28, 1, 0, 0, 1, 1, 0]' : 0.117193}
{'[5, 3, 6, 0, 6, 4, 1, 1, 4, 0, 29, 28, 1, 0, 0, 1, 1, 0]' : 0.114333}
{'[5, 3, 6, 0, 6, 4, 1, 1, 4, 0, 29, 28, 1, 0, 0, 1, 1, 0]' : 0.1143}
{'[5, 3, 6, 0, 6, 4, 1, 1, 4, 0, 29, 28, 1, 0, 0, 1, 1, 0]' : 0.117721}
{'[5, 3, 6, 0, 6, 4, 1, 1, 4, 0, 29, 28, 1, 0, 0, 1, 1, 0]' : 0.11816}
{'[5, 3, 6, 0, 6, 4, 1, 1, 4, 0, 29, 28, 1, 0, 0, 1, 1, 0]' : 0.118108}
{'[5, 3, 6, 0, 6, 4, 1, 1, 4, 0, 29, 28, 1, 0, 0, 1, 1, 0]' : 0.115824}
{'[5, 3, 6, 0, 6, 4, 1, 1, 4, 0, 29, 28, 1, 0, 0, 1, 1, 0]' : 0.116521}
{'[5, 3, 6, 0, 6, 4, 1, 1, 4, 0, 29, 28, 1, 0, 0, 1, 1, 0]' : 0.118025}

out:
 ["{'[5, 3, 6, 0, 6, 4, 1, 1, 4, 0, 29, 28, 1, 0, 0, 1, 1, 0]' : 0.135159}", "{'[5, 3, 6, 0, 6, 4, 1, 1, 4, 0, 29, 28, 1, 0, 0, 1, 1, 0]' : 0.135151}", "{'[5, 3, 6, 0, 6, 4, 1, 1, 4, 0, 29, 28, 1, 0, 0, 1, 1, 0]' : 0.135086}", "{'[5, 3, 6, 0, 6, 4, 1, 1, 4, 0, 29, 28, 1, 0, 0, 1, 1, 0]' : 0.133041}", "{'[5, 3, 6, 0, 6, 4, 1, 1, 4, 0, 29, 28, 1, 0, 0, 1, 1, 0]' : 0.115174}", "{'[5, 3, 6, 0, 6, 4, 1, 1, 4, 0, 29, 28, 1, 0, 0, 1, 1, 0]' : 0.114269}", "{'[5, 3, 6, 0, 6, 4, 1, 1, 4, 0, 29, 28, 1, 0, 0, 1, 1, 0]' : 0.114174}", "{'[5, 3, 6, 0, 6, 4, 1, 1, 4, 0, 29, 28, 1, 0, 0, 1, 1, 0]' : 0.118108}", "{'[5, 3, 6, 0, 6, 4, 1, 1, 4, 0, 29, 28, 1, 0, 0, 1, 1, 0]' : 0.118255}", "{'[5, 3, 6, 0, 6, 4, 1, 1, 4, 0, 29, 28, 1, 0, 0, 1, 1, 0]' : 0.11812}", "{'[5, 3, 6, 0, 6, 4, 1, 1, 4, 0, 29, 28, 1, 0, 0, 1, 1, 0]' : 0.115399}", "{'[5, 3, 6, 0, 6, 4, 1, 1, 4, 0, 29, 28, 1, 0, 0, 1, 1, 0]' : 0.117366}", "{'[5, 3, 6, 0, 6, 4, 1, 1, 4, 0, 29, 28, 1, 0, 0, 1, 1, 0]' : 0.11468}", "{'[5, 3, 6, 0, 6, 4, 1, 1, 4, 0, 29, 28, 1, 0, 0, 1, 1, 0]' : 0.117785}", "{'[5, 3, 6, 0, 6, 4, 1, 1, 4, 0, 29, 28, 1, 0, 0, 1, 1, 0]' : 0.118119}", "{'[5, 3, 6, 0, 6, 4, 1, 1, 4, 0, 29, 28, 1, 0, 0, 1, 1, 0]' : 0.118061}", "{'[5, 3, 6, 0, 6, 4, 1, 1, 4, 0, 29, 28, 1, 0, 0, 1, 1, 0]' : 0.117715}", "{'[5, 3, 6, 0, 6, 4, 1, 1, 4, 0, 29, 28, 1, 0, 0, 1, 1, 0]' : 0.117889}", "{'[5, 3, 6, 0, 6, 4, 1, 1, 4, 0, 29, 28, 1, 0, 0, 1, 1, 0]' : 0.116314}", "{'[5, 3, 6, 0, 6, 4, 1, 1, 4, 0, 29, 28, 1, 0, 0, 1, 1, 0]' : 0.115175}", "{'[5, 3, 6, 0, 6, 4, 1, 1, 4, 0, 29, 28, 1, 0, 0, 1, 1, 0]' : 0.117718}", "{'[5, 3, 6, 0, 6, 4, 1, 1, 4, 0, 29, 28, 1, 0, 0, 1, 1, 0]' : 0.117193}", "{'[5, 3, 6, 0, 6, 4, 1, 1, 4, 0, 29, 28, 1, 0, 0, 1, 1, 0]' : 0.114333}", "{'[5, 3, 6, 0, 6, 4, 1, 1, 4, 0, 29, 28, 1, 0, 0, 1, 1, 0]' : 0.1143}", "{'[5, 3, 6, 0, 6, 4, 1, 1, 4, 0, 29, 28, 1, 0, 0, 1, 1, 0]' : 0.117721}", "{'[5, 3, 6, 0, 6, 4, 1, 1, 4, 0, 29, 28, 1, 0, 0, 1, 1, 0]' : 0.11816}", "{'[5, 3, 6, 0, 6, 4, 1, 1, 4, 0, 29, 28, 1, 0, 0, 1, 1, 0]' : 0.118108}", "{'[5, 3, 6, 0, 6, 4, 1, 1, 4, 0, 29, 28, 1, 0, 0, 1, 1, 0]' : 0.115824}", "{'[5, 3, 6, 0, 6, 4, 1, 1, 4, 0, 29, 28, 1, 0, 0, 1, 1, 0]' : 0.116521}", "{'[5, 3, 6, 0, 6, 4, 1, 1, 4, 0, 29, 28, 1, 0, 0, 1, 1, 0]' : 0.118025}"]
returning from 'run': {'[5, 3, 6, 0, 6, 4, 1, 1, 4, 0, 29, 28, 1, 0, 0, 1, 1, 0]': ([0.135159, 0.135151, 0.135086, 0.133041, 0.115174, 0.114269, 0.114174, 0.118108, 0.118255, 0.11812, 0.115399, 0.117366, 0.11468, 0.117785, 0.118119, 0.118061, 0.117715, 0.117889, 0.116314, 0.115175, 0.117718, 0.117193, 0.114333, 0.1143, 0.117721, 0.11816, 0.118108, 0.115824, 0.116521, 0.118025], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 3, 6, 0, 6, 4, 1, 1, 4, 0, 29, 28, 1, 0, 0, 1, 1, 0]': ([0.135159, 0.135151, 0.135086, 0.133041, 0.115174, 0.114269, 0.114174, 0.118108, 0.118255, 0.11812, 0.115399, 0.117366, 0.11468, 0.117785, 0.118119, 0.118061, 0.117715, 0.117889, 0.116314, 0.115175, 0.117718, 0.117193, 0.114333, 0.1143, 0.117721, 0.11816, 0.118108, 0.115824, 0.116521, 0.118025], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	55
        Max loop nest depth: 	5
        Additions: 		2937
        Multiplications: 	780
        Divisions: 		0
        Logical: 		0
        Reads: 			5855
        Writes: 		1210
        Comparisons:		55
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest71.exe __orio_perftest71.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest71.exe  
Program Test Output: 
{'[0, 4, 5, 6, 3, 0, 0, 1, 12, 8, 0, 28, 0, 1, 0, 1, 1, 1]' : 0.166029}
{'[0, 4, 5, 6, 3, 0, 0, 1, 12, 8, 0, 28, 0, 1, 0, 1, 1, 1]' : 0.164088}
{'[0, 4, 5, 6, 3, 0, 0, 1, 12, 8, 0, 28, 0, 1, 0, 1, 1, 1]' : 0.143813}
{'[0, 4, 5, 6, 3, 0, 0, 1, 12, 8, 0, 28, 0, 1, 0, 1, 1, 1]' : 0.142921}
{'[0, 4, 5, 6, 3, 0, 0, 1, 12, 8, 0, 28, 0, 1, 0, 1, 1, 1]' : 0.143598}
{'[0, 4, 5, 6, 3, 0, 0, 1, 12, 8, 0, 28, 0, 1, 0, 1, 1, 1]' : 0.143609}
{'[0, 4, 5, 6, 3, 0, 0, 1, 12, 8, 0, 28, 0, 1, 0, 1, 1, 1]' : 0.143616}
{'[0, 4, 5, 6, 3, 0, 0, 1, 12, 8, 0, 28, 0, 1, 0, 1, 1, 1]' : 0.143035}
{'[0, 4, 5, 6, 3, 0, 0, 1, 12, 8, 0, 28, 0, 1, 0, 1, 1, 1]' : 0.149983}
{'[0, 4, 5, 6, 3, 0, 0, 1, 12, 8, 0, 28, 0, 1, 0, 1, 1, 1]' : 0.143068}
{'[0, 4, 5, 6, 3, 0, 0, 1, 12, 8, 0, 28, 0, 1, 0, 1, 1, 1]' : 0.142801}
{'[0, 4, 5, 6, 3, 0, 0, 1, 12, 8, 0, 28, 0, 1, 0, 1, 1, 1]' : 0.142912}
{'[0, 4, 5, 6, 3, 0, 0, 1, 12, 8, 0, 28, 0, 1, 0, 1, 1, 1]' : 0.143243}
{'[0, 4, 5, 6, 3, 0, 0, 1, 12, 8, 0, 28, 0, 1, 0, 1, 1, 1]' : 0.142892}
{'[0, 4, 5, 6, 3, 0, 0, 1, 12, 8, 0, 28, 0, 1, 0, 1, 1, 1]' : 0.142869}
{'[0, 4, 5, 6, 3, 0, 0, 1, 12, 8, 0, 28, 0, 1, 0, 1, 1, 1]' : 0.142853}
{'[0, 4, 5, 6, 3, 0, 0, 1, 12, 8, 0, 28, 0, 1, 0, 1, 1, 1]' : 0.142921}
{'[0, 4, 5, 6, 3, 0, 0, 1, 12, 8, 0, 28, 0, 1, 0, 1, 1, 1]' : 0.142821}
{'[0, 4, 5, 6, 3, 0, 0, 1, 12, 8, 0, 28, 0, 1, 0, 1, 1, 1]' : 0.14969}
{'[0, 4, 5, 6, 3, 0, 0, 1, 12, 8, 0, 28, 0, 1, 0, 1, 1, 1]' : 0.14296}
{'[0, 4, 5, 6, 3, 0, 0, 1, 12, 8, 0, 28, 0, 1, 0, 1, 1, 1]' : 0.142896}
{'[0, 4, 5, 6, 3, 0, 0, 1, 12, 8, 0, 28, 0, 1, 0, 1, 1, 1]' : 0.142845}
{'[0, 4, 5, 6, 3, 0, 0, 1, 12, 8, 0, 28, 0, 1, 0, 1, 1, 1]' : 0.143076}
{'[0, 4, 5, 6, 3, 0, 0, 1, 12, 8, 0, 28, 0, 1, 0, 1, 1, 1]' : 0.143227}
{'[0, 4, 5, 6, 3, 0, 0, 1, 12, 8, 0, 28, 0, 1, 0, 1, 1, 1]' : 0.142775}
{'[0, 4, 5, 6, 3, 0, 0, 1, 12, 8, 0, 28, 0, 1, 0, 1, 1, 1]' : 0.142881}
{'[0, 4, 5, 6, 3, 0, 0, 1, 12, 8, 0, 28, 0, 1, 0, 1, 1, 1]' : 0.143002}
{'[0, 4, 5, 6, 3, 0, 0, 1, 12, 8, 0, 28, 0, 1, 0, 1, 1, 1]' : 0.142888}
{'[0, 4, 5, 6, 3, 0, 0, 1, 12, 8, 0, 28, 0, 1, 0, 1, 1, 1]' : 0.142866}
{'[0, 4, 5, 6, 3, 0, 0, 1, 12, 8, 0, 28, 0, 1, 0, 1, 1, 1]' : 0.148537}

out:
 ["{'[0, 4, 5, 6, 3, 0, 0, 1, 12, 8, 0, 28, 0, 1, 0, 1, 1, 1]' : 0.166029}", "{'[0, 4, 5, 6, 3, 0, 0, 1, 12, 8, 0, 28, 0, 1, 0, 1, 1, 1]' : 0.164088}", "{'[0, 4, 5, 6, 3, 0, 0, 1, 12, 8, 0, 28, 0, 1, 0, 1, 1, 1]' : 0.143813}", "{'[0, 4, 5, 6, 3, 0, 0, 1, 12, 8, 0, 28, 0, 1, 0, 1, 1, 1]' : 0.142921}", "{'[0, 4, 5, 6, 3, 0, 0, 1, 12, 8, 0, 28, 0, 1, 0, 1, 1, 1]' : 0.143598}", "{'[0, 4, 5, 6, 3, 0, 0, 1, 12, 8, 0, 28, 0, 1, 0, 1, 1, 1]' : 0.143609}", "{'[0, 4, 5, 6, 3, 0, 0, 1, 12, 8, 0, 28, 0, 1, 0, 1, 1, 1]' : 0.143616}", "{'[0, 4, 5, 6, 3, 0, 0, 1, 12, 8, 0, 28, 0, 1, 0, 1, 1, 1]' : 0.143035}", "{'[0, 4, 5, 6, 3, 0, 0, 1, 12, 8, 0, 28, 0, 1, 0, 1, 1, 1]' : 0.149983}", "{'[0, 4, 5, 6, 3, 0, 0, 1, 12, 8, 0, 28, 0, 1, 0, 1, 1, 1]' : 0.143068}", "{'[0, 4, 5, 6, 3, 0, 0, 1, 12, 8, 0, 28, 0, 1, 0, 1, 1, 1]' : 0.142801}", "{'[0, 4, 5, 6, 3, 0, 0, 1, 12, 8, 0, 28, 0, 1, 0, 1, 1, 1]' : 0.142912}", "{'[0, 4, 5, 6, 3, 0, 0, 1, 12, 8, 0, 28, 0, 1, 0, 1, 1, 1]' : 0.143243}", "{'[0, 4, 5, 6, 3, 0, 0, 1, 12, 8, 0, 28, 0, 1, 0, 1, 1, 1]' : 0.142892}", "{'[0, 4, 5, 6, 3, 0, 0, 1, 12, 8, 0, 28, 0, 1, 0, 1, 1, 1]' : 0.142869}", "{'[0, 4, 5, 6, 3, 0, 0, 1, 12, 8, 0, 28, 0, 1, 0, 1, 1, 1]' : 0.142853}", "{'[0, 4, 5, 6, 3, 0, 0, 1, 12, 8, 0, 28, 0, 1, 0, 1, 1, 1]' : 0.142921}", "{'[0, 4, 5, 6, 3, 0, 0, 1, 12, 8, 0, 28, 0, 1, 0, 1, 1, 1]' : 0.142821}", "{'[0, 4, 5, 6, 3, 0, 0, 1, 12, 8, 0, 28, 0, 1, 0, 1, 1, 1]' : 0.14969}", "{'[0, 4, 5, 6, 3, 0, 0, 1, 12, 8, 0, 28, 0, 1, 0, 1, 1, 1]' : 0.14296}", "{'[0, 4, 5, 6, 3, 0, 0, 1, 12, 8, 0, 28, 0, 1, 0, 1, 1, 1]' : 0.142896}", "{'[0, 4, 5, 6, 3, 0, 0, 1, 12, 8, 0, 28, 0, 1, 0, 1, 1, 1]' : 0.142845}", "{'[0, 4, 5, 6, 3, 0, 0, 1, 12, 8, 0, 28, 0, 1, 0, 1, 1, 1]' : 0.143076}", "{'[0, 4, 5, 6, 3, 0, 0, 1, 12, 8, 0, 28, 0, 1, 0, 1, 1, 1]' : 0.143227}", "{'[0, 4, 5, 6, 3, 0, 0, 1, 12, 8, 0, 28, 0, 1, 0, 1, 1, 1]' : 0.142775}", "{'[0, 4, 5, 6, 3, 0, 0, 1, 12, 8, 0, 28, 0, 1, 0, 1, 1, 1]' : 0.142881}", "{'[0, 4, 5, 6, 3, 0, 0, 1, 12, 8, 0, 28, 0, 1, 0, 1, 1, 1]' : 0.143002}", "{'[0, 4, 5, 6, 3, 0, 0, 1, 12, 8, 0, 28, 0, 1, 0, 1, 1, 1]' : 0.142888}", "{'[0, 4, 5, 6, 3, 0, 0, 1, 12, 8, 0, 28, 0, 1, 0, 1, 1, 1]' : 0.142866}", "{'[0, 4, 5, 6, 3, 0, 0, 1, 12, 8, 0, 28, 0, 1, 0, 1, 1, 1]' : 0.148537}"]
returning from 'run': {'[0, 4, 5, 6, 3, 0, 0, 1, 12, 8, 0, 28, 0, 1, 0, 1, 1, 1]': ([0.166029, 0.164088, 0.143813, 0.142921, 0.143598, 0.143609, 0.143616, 0.143035, 0.149983, 0.143068, 0.142801, 0.142912, 0.143243, 0.142892, 0.142869, 0.142853, 0.142921, 0.142821, 0.14969, 0.14296, 0.142896, 0.142845, 0.143076, 0.143227, 0.142775, 0.142881, 0.143002, 0.142888, 0.142866, 0.148537], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 4, 5, 6, 3, 0, 0, 1, 12, 8, 0, 28, 0, 1, 0, 1, 1, 1]': ([0.166029, 0.164088, 0.143813, 0.142921, 0.143598, 0.143609, 0.143616, 0.143035, 0.149983, 0.143068, 0.142801, 0.142912, 0.143243, 0.142892, 0.142869, 0.142853, 0.142921, 0.142821, 0.14969, 0.14296, 0.142896, 0.142845, 0.143076, 0.143227, 0.142775, 0.142881, 0.143002, 0.142888, 0.142866, 0.148537], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	51
        Max loop nest depth: 	4
        Additions: 		3058
        Multiplications: 	828
        Divisions: 		0
        Logical: 		0
        Reads: 			4867
        Writes: 		545
        Comparisons:		51
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest72.exe __orio_perftest72.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest72.exe  
Program Test Output: 
{'[0, 1, 3, 0, 1, 6, 0, 1, 0, 7, 0, 11, 0, 2, 0, 0, 1, 0]' : 0.171447}
{'[0, 1, 3, 0, 1, 6, 0, 1, 0, 7, 0, 11, 0, 2, 0, 0, 1, 0]' : 0.167655}
{'[0, 1, 3, 0, 1, 6, 0, 1, 0, 7, 0, 11, 0, 2, 0, 0, 1, 0]' : 0.167709}
{'[0, 1, 3, 0, 1, 6, 0, 1, 0, 7, 0, 11, 0, 2, 0, 0, 1, 0]' : 0.167881}
{'[0, 1, 3, 0, 1, 6, 0, 1, 0, 7, 0, 11, 0, 2, 0, 0, 1, 0]' : 0.16784}
{'[0, 1, 3, 0, 1, 6, 0, 1, 0, 7, 0, 11, 0, 2, 0, 0, 1, 0]' : 0.167552}
{'[0, 1, 3, 0, 1, 6, 0, 1, 0, 7, 0, 11, 0, 2, 0, 0, 1, 0]' : 0.16757}
{'[0, 1, 3, 0, 1, 6, 0, 1, 0, 7, 0, 11, 0, 2, 0, 0, 1, 0]' : 0.167698}
{'[0, 1, 3, 0, 1, 6, 0, 1, 0, 7, 0, 11, 0, 2, 0, 0, 1, 0]' : 0.16751}
{'[0, 1, 3, 0, 1, 6, 0, 1, 0, 7, 0, 11, 0, 2, 0, 0, 1, 0]' : 0.168074}
{'[0, 1, 3, 0, 1, 6, 0, 1, 0, 7, 0, 11, 0, 2, 0, 0, 1, 0]' : 0.165439}
{'[0, 1, 3, 0, 1, 6, 0, 1, 0, 7, 0, 11, 0, 2, 0, 0, 1, 0]' : 0.162495}
{'[0, 1, 3, 0, 1, 6, 0, 1, 0, 7, 0, 11, 0, 2, 0, 0, 1, 0]' : 0.162764}
{'[0, 1, 3, 0, 1, 6, 0, 1, 0, 7, 0, 11, 0, 2, 0, 0, 1, 0]' : 0.167228}
{'[0, 1, 3, 0, 1, 6, 0, 1, 0, 7, 0, 11, 0, 2, 0, 0, 1, 0]' : 0.167496}
{'[0, 1, 3, 0, 1, 6, 0, 1, 0, 7, 0, 11, 0, 2, 0, 0, 1, 0]' : 0.168099}
{'[0, 1, 3, 0, 1, 6, 0, 1, 0, 7, 0, 11, 0, 2, 0, 0, 1, 0]' : 0.167923}
{'[0, 1, 3, 0, 1, 6, 0, 1, 0, 7, 0, 11, 0, 2, 0, 0, 1, 0]' : 0.167549}
{'[0, 1, 3, 0, 1, 6, 0, 1, 0, 7, 0, 11, 0, 2, 0, 0, 1, 0]' : 0.167959}
{'[0, 1, 3, 0, 1, 6, 0, 1, 0, 7, 0, 11, 0, 2, 0, 0, 1, 0]' : 0.167856}
{'[0, 1, 3, 0, 1, 6, 0, 1, 0, 7, 0, 11, 0, 2, 0, 0, 1, 0]' : 0.167542}
{'[0, 1, 3, 0, 1, 6, 0, 1, 0, 7, 0, 11, 0, 2, 0, 0, 1, 0]' : 0.167648}
{'[0, 1, 3, 0, 1, 6, 0, 1, 0, 7, 0, 11, 0, 2, 0, 0, 1, 0]' : 0.167921}
{'[0, 1, 3, 0, 1, 6, 0, 1, 0, 7, 0, 11, 0, 2, 0, 0, 1, 0]' : 0.167837}
{'[0, 1, 3, 0, 1, 6, 0, 1, 0, 7, 0, 11, 0, 2, 0, 0, 1, 0]' : 0.167024}
{'[0, 1, 3, 0, 1, 6, 0, 1, 0, 7, 0, 11, 0, 2, 0, 0, 1, 0]' : 0.167586}
{'[0, 1, 3, 0, 1, 6, 0, 1, 0, 7, 0, 11, 0, 2, 0, 0, 1, 0]' : 0.167516}
{'[0, 1, 3, 0, 1, 6, 0, 1, 0, 7, 0, 11, 0, 2, 0, 0, 1, 0]' : 0.168083}
{'[0, 1, 3, 0, 1, 6, 0, 1, 0, 7, 0, 11, 0, 2, 0, 0, 1, 0]' : 0.163392}
{'[0, 1, 3, 0, 1, 6, 0, 1, 0, 7, 0, 11, 0, 2, 0, 0, 1, 0]' : 0.162769}

out:
 ["{'[0, 1, 3, 0, 1, 6, 0, 1, 0, 7, 0, 11, 0, 2, 0, 0, 1, 0]' : 0.171447}", "{'[0, 1, 3, 0, 1, 6, 0, 1, 0, 7, 0, 11, 0, 2, 0, 0, 1, 0]' : 0.167655}", "{'[0, 1, 3, 0, 1, 6, 0, 1, 0, 7, 0, 11, 0, 2, 0, 0, 1, 0]' : 0.167709}", "{'[0, 1, 3, 0, 1, 6, 0, 1, 0, 7, 0, 11, 0, 2, 0, 0, 1, 0]' : 0.167881}", "{'[0, 1, 3, 0, 1, 6, 0, 1, 0, 7, 0, 11, 0, 2, 0, 0, 1, 0]' : 0.16784}", "{'[0, 1, 3, 0, 1, 6, 0, 1, 0, 7, 0, 11, 0, 2, 0, 0, 1, 0]' : 0.167552}", "{'[0, 1, 3, 0, 1, 6, 0, 1, 0, 7, 0, 11, 0, 2, 0, 0, 1, 0]' : 0.16757}", "{'[0, 1, 3, 0, 1, 6, 0, 1, 0, 7, 0, 11, 0, 2, 0, 0, 1, 0]' : 0.167698}", "{'[0, 1, 3, 0, 1, 6, 0, 1, 0, 7, 0, 11, 0, 2, 0, 0, 1, 0]' : 0.16751}", "{'[0, 1, 3, 0, 1, 6, 0, 1, 0, 7, 0, 11, 0, 2, 0, 0, 1, 0]' : 0.168074}", "{'[0, 1, 3, 0, 1, 6, 0, 1, 0, 7, 0, 11, 0, 2, 0, 0, 1, 0]' : 0.165439}", "{'[0, 1, 3, 0, 1, 6, 0, 1, 0, 7, 0, 11, 0, 2, 0, 0, 1, 0]' : 0.162495}", "{'[0, 1, 3, 0, 1, 6, 0, 1, 0, 7, 0, 11, 0, 2, 0, 0, 1, 0]' : 0.162764}", "{'[0, 1, 3, 0, 1, 6, 0, 1, 0, 7, 0, 11, 0, 2, 0, 0, 1, 0]' : 0.167228}", "{'[0, 1, 3, 0, 1, 6, 0, 1, 0, 7, 0, 11, 0, 2, 0, 0, 1, 0]' : 0.167496}", "{'[0, 1, 3, 0, 1, 6, 0, 1, 0, 7, 0, 11, 0, 2, 0, 0, 1, 0]' : 0.168099}", "{'[0, 1, 3, 0, 1, 6, 0, 1, 0, 7, 0, 11, 0, 2, 0, 0, 1, 0]' : 0.167923}", "{'[0, 1, 3, 0, 1, 6, 0, 1, 0, 7, 0, 11, 0, 2, 0, 0, 1, 0]' : 0.167549}", "{'[0, 1, 3, 0, 1, 6, 0, 1, 0, 7, 0, 11, 0, 2, 0, 0, 1, 0]' : 0.167959}", "{'[0, 1, 3, 0, 1, 6, 0, 1, 0, 7, 0, 11, 0, 2, 0, 0, 1, 0]' : 0.167856}", "{'[0, 1, 3, 0, 1, 6, 0, 1, 0, 7, 0, 11, 0, 2, 0, 0, 1, 0]' : 0.167542}", "{'[0, 1, 3, 0, 1, 6, 0, 1, 0, 7, 0, 11, 0, 2, 0, 0, 1, 0]' : 0.167648}", "{'[0, 1, 3, 0, 1, 6, 0, 1, 0, 7, 0, 11, 0, 2, 0, 0, 1, 0]' : 0.167921}", "{'[0, 1, 3, 0, 1, 6, 0, 1, 0, 7, 0, 11, 0, 2, 0, 0, 1, 0]' : 0.167837}", "{'[0, 1, 3, 0, 1, 6, 0, 1, 0, 7, 0, 11, 0, 2, 0, 0, 1, 0]' : 0.167024}", "{'[0, 1, 3, 0, 1, 6, 0, 1, 0, 7, 0, 11, 0, 2, 0, 0, 1, 0]' : 0.167586}", "{'[0, 1, 3, 0, 1, 6, 0, 1, 0, 7, 0, 11, 0, 2, 0, 0, 1, 0]' : 0.167516}", "{'[0, 1, 3, 0, 1, 6, 0, 1, 0, 7, 0, 11, 0, 2, 0, 0, 1, 0]' : 0.168083}", "{'[0, 1, 3, 0, 1, 6, 0, 1, 0, 7, 0, 11, 0, 2, 0, 0, 1, 0]' : 0.163392}", "{'[0, 1, 3, 0, 1, 6, 0, 1, 0, 7, 0, 11, 0, 2, 0, 0, 1, 0]' : 0.162769}"]
returning from 'run': {'[0, 1, 3, 0, 1, 6, 0, 1, 0, 7, 0, 11, 0, 2, 0, 0, 1, 0]': ([0.171447, 0.167655, 0.167709, 0.167881, 0.16784, 0.167552, 0.16757, 0.167698, 0.16751, 0.168074, 0.165439, 0.162495, 0.162764, 0.167228, 0.167496, 0.168099, 0.167923, 0.167549, 0.167959, 0.167856, 0.167542, 0.167648, 0.167921, 0.167837, 0.167024, 0.167586, 0.167516, 0.168083, 0.163392, 0.162769], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 1, 3, 0, 1, 6, 0, 1, 0, 7, 0, 11, 0, 2, 0, 0, 1, 0]': ([0.171447, 0.167655, 0.167709, 0.167881, 0.16784, 0.167552, 0.16757, 0.167698, 0.16751, 0.168074, 0.165439, 0.162495, 0.162764, 0.167228, 0.167496, 0.168099, 0.167923, 0.167549, 0.167959, 0.167856, 0.167542, 0.167648, 0.167921, 0.167837, 0.167024, 0.167586, 0.167516, 0.168083, 0.163392, 0.162769], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		1046
        Multiplications: 	462
        Divisions: 		0
        Logical: 		0
        Reads: 			2193
        Writes: 		435
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest73.exe __orio_perftest73.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest73.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest73.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest73.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest73.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	30
        Max loop nest depth: 	4
        Additions: 		2423
        Multiplications: 	686
        Divisions: 		0
        Logical: 		0
        Reads: 			3886
        Writes: 		446
        Comparisons:		30
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest74.exe __orio_perftest74.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest74.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest74.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest74.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest74.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	84
        Max loop nest depth: 	4
        Additions: 		3682
        Multiplications: 	1584
        Divisions: 		0
        Logical: 		0
        Reads: 			7180
        Writes: 		1238
        Comparisons:		84
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest75.exe __orio_perftest75.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest75.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest75.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest75.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest75.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = iii
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		308
        Multiplications: 	72
        Divisions: 		0
        Logical: 		0
        Reads: 			676
        Writes: 		161
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest76.exe __orio_perftest76.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest76.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest76.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest76.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest76.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	155
        Max loop nest depth: 	5
        Additions: 		2817
        Multiplications: 	884
        Divisions: 		0
        Logical: 		0
        Reads: 			5555
        Writes: 		1067
        Comparisons:		155
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest77.exe __orio_perftest77.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest77.exe  
Program Test Output: 
{'[5, 1, 2, 0, 5, 6, 1, 1, 0, 24, 3, 0, 1, 0, 1, 1, 1, 1]' : 0.108609}
{'[5, 1, 2, 0, 5, 6, 1, 1, 0, 24, 3, 0, 1, 0, 1, 1, 1, 1]' : 0.108511}
{'[5, 1, 2, 0, 5, 6, 1, 1, 0, 24, 3, 0, 1, 0, 1, 1, 1, 1]' : 0.105298}
{'[5, 1, 2, 0, 5, 6, 1, 1, 0, 24, 3, 0, 1, 0, 1, 1, 1, 1]' : 0.0944278}
{'[5, 1, 2, 0, 5, 6, 1, 1, 0, 24, 3, 0, 1, 0, 1, 1, 1, 1]' : 0.0942869}
{'[5, 1, 2, 0, 5, 6, 1, 1, 0, 24, 3, 0, 1, 0, 1, 1, 1, 1]' : 0.094327}
{'[5, 1, 2, 0, 5, 6, 1, 1, 0, 24, 3, 0, 1, 0, 1, 1, 1, 1]' : 0.0991511}
{'[5, 1, 2, 0, 5, 6, 1, 1, 0, 24, 3, 0, 1, 0, 1, 1, 1, 1]' : 0.0948248}
{'[5, 1, 2, 0, 5, 6, 1, 1, 0, 24, 3, 0, 1, 0, 1, 1, 1, 1]' : 0.094435}
{'[5, 1, 2, 0, 5, 6, 1, 1, 0, 24, 3, 0, 1, 0, 1, 1, 1, 1]' : 0.0944281}
{'[5, 1, 2, 0, 5, 6, 1, 1, 0, 24, 3, 0, 1, 0, 1, 1, 1, 1]' : 0.094466}
{'[5, 1, 2, 0, 5, 6, 1, 1, 0, 24, 3, 0, 1, 0, 1, 1, 1, 1]' : 0.0942841}
{'[5, 1, 2, 0, 5, 6, 1, 1, 0, 24, 3, 0, 1, 0, 1, 1, 1, 1]' : 0.0943689}
{'[5, 1, 2, 0, 5, 6, 1, 1, 0, 24, 3, 0, 1, 0, 1, 1, 1, 1]' : 0.0946188}
{'[5, 1, 2, 0, 5, 6, 1, 1, 0, 24, 3, 0, 1, 0, 1, 1, 1, 1]' : 0.094384}
{'[5, 1, 2, 0, 5, 6, 1, 1, 0, 24, 3, 0, 1, 0, 1, 1, 1, 1]' : 0.0943818}
{'[5, 1, 2, 0, 5, 6, 1, 1, 0, 24, 3, 0, 1, 0, 1, 1, 1, 1]' : 0.094342}
{'[5, 1, 2, 0, 5, 6, 1, 1, 0, 24, 3, 0, 1, 0, 1, 1, 1, 1]' : 0.0943789}
{'[5, 1, 2, 0, 5, 6, 1, 1, 0, 24, 3, 0, 1, 0, 1, 1, 1, 1]' : 0.0942988}
{'[5, 1, 2, 0, 5, 6, 1, 1, 0, 24, 3, 0, 1, 0, 1, 1, 1, 1]' : 0.094346}
{'[5, 1, 2, 0, 5, 6, 1, 1, 0, 24, 3, 0, 1, 0, 1, 1, 1, 1]' : 0.0944629}
{'[5, 1, 2, 0, 5, 6, 1, 1, 0, 24, 3, 0, 1, 0, 1, 1, 1, 1]' : 0.0947669}
{'[5, 1, 2, 0, 5, 6, 1, 1, 0, 24, 3, 0, 1, 0, 1, 1, 1, 1]' : 0.0991499}
{'[5, 1, 2, 0, 5, 6, 1, 1, 0, 24, 3, 0, 1, 0, 1, 1, 1, 1]' : 0.094841}
{'[5, 1, 2, 0, 5, 6, 1, 1, 0, 24, 3, 0, 1, 0, 1, 1, 1, 1]' : 0.0946329}
{'[5, 1, 2, 0, 5, 6, 1, 1, 0, 24, 3, 0, 1, 0, 1, 1, 1, 1]' : 0.094825}
{'[5, 1, 2, 0, 5, 6, 1, 1, 0, 24, 3, 0, 1, 0, 1, 1, 1, 1]' : 0.0950432}
{'[5, 1, 2, 0, 5, 6, 1, 1, 0, 24, 3, 0, 1, 0, 1, 1, 1, 1]' : 0.094656}
{'[5, 1, 2, 0, 5, 6, 1, 1, 0, 24, 3, 0, 1, 0, 1, 1, 1, 1]' : 0.0947161}
{'[5, 1, 2, 0, 5, 6, 1, 1, 0, 24, 3, 0, 1, 0, 1, 1, 1, 1]' : 0.094368}

out:
 ["{'[5, 1, 2, 0, 5, 6, 1, 1, 0, 24, 3, 0, 1, 0, 1, 1, 1, 1]' : 0.108609}", "{'[5, 1, 2, 0, 5, 6, 1, 1, 0, 24, 3, 0, 1, 0, 1, 1, 1, 1]' : 0.108511}", "{'[5, 1, 2, 0, 5, 6, 1, 1, 0, 24, 3, 0, 1, 0, 1, 1, 1, 1]' : 0.105298}", "{'[5, 1, 2, 0, 5, 6, 1, 1, 0, 24, 3, 0, 1, 0, 1, 1, 1, 1]' : 0.0944278}", "{'[5, 1, 2, 0, 5, 6, 1, 1, 0, 24, 3, 0, 1, 0, 1, 1, 1, 1]' : 0.0942869}", "{'[5, 1, 2, 0, 5, 6, 1, 1, 0, 24, 3, 0, 1, 0, 1, 1, 1, 1]' : 0.094327}", "{'[5, 1, 2, 0, 5, 6, 1, 1, 0, 24, 3, 0, 1, 0, 1, 1, 1, 1]' : 0.0991511}", "{'[5, 1, 2, 0, 5, 6, 1, 1, 0, 24, 3, 0, 1, 0, 1, 1, 1, 1]' : 0.0948248}", "{'[5, 1, 2, 0, 5, 6, 1, 1, 0, 24, 3, 0, 1, 0, 1, 1, 1, 1]' : 0.094435}", "{'[5, 1, 2, 0, 5, 6, 1, 1, 0, 24, 3, 0, 1, 0, 1, 1, 1, 1]' : 0.0944281}", "{'[5, 1, 2, 0, 5, 6, 1, 1, 0, 24, 3, 0, 1, 0, 1, 1, 1, 1]' : 0.094466}", "{'[5, 1, 2, 0, 5, 6, 1, 1, 0, 24, 3, 0, 1, 0, 1, 1, 1, 1]' : 0.0942841}", "{'[5, 1, 2, 0, 5, 6, 1, 1, 0, 24, 3, 0, 1, 0, 1, 1, 1, 1]' : 0.0943689}", "{'[5, 1, 2, 0, 5, 6, 1, 1, 0, 24, 3, 0, 1, 0, 1, 1, 1, 1]' : 0.0946188}", "{'[5, 1, 2, 0, 5, 6, 1, 1, 0, 24, 3, 0, 1, 0, 1, 1, 1, 1]' : 0.094384}", "{'[5, 1, 2, 0, 5, 6, 1, 1, 0, 24, 3, 0, 1, 0, 1, 1, 1, 1]' : 0.0943818}", "{'[5, 1, 2, 0, 5, 6, 1, 1, 0, 24, 3, 0, 1, 0, 1, 1, 1, 1]' : 0.094342}", "{'[5, 1, 2, 0, 5, 6, 1, 1, 0, 24, 3, 0, 1, 0, 1, 1, 1, 1]' : 0.0943789}", "{'[5, 1, 2, 0, 5, 6, 1, 1, 0, 24, 3, 0, 1, 0, 1, 1, 1, 1]' : 0.0942988}", "{'[5, 1, 2, 0, 5, 6, 1, 1, 0, 24, 3, 0, 1, 0, 1, 1, 1, 1]' : 0.094346}", "{'[5, 1, 2, 0, 5, 6, 1, 1, 0, 24, 3, 0, 1, 0, 1, 1, 1, 1]' : 0.0944629}", "{'[5, 1, 2, 0, 5, 6, 1, 1, 0, 24, 3, 0, 1, 0, 1, 1, 1, 1]' : 0.0947669}", "{'[5, 1, 2, 0, 5, 6, 1, 1, 0, 24, 3, 0, 1, 0, 1, 1, 1, 1]' : 0.0991499}", "{'[5, 1, 2, 0, 5, 6, 1, 1, 0, 24, 3, 0, 1, 0, 1, 1, 1, 1]' : 0.094841}", "{'[5, 1, 2, 0, 5, 6, 1, 1, 0, 24, 3, 0, 1, 0, 1, 1, 1, 1]' : 0.0946329}", "{'[5, 1, 2, 0, 5, 6, 1, 1, 0, 24, 3, 0, 1, 0, 1, 1, 1, 1]' : 0.094825}", "{'[5, 1, 2, 0, 5, 6, 1, 1, 0, 24, 3, 0, 1, 0, 1, 1, 1, 1]' : 0.0950432}", "{'[5, 1, 2, 0, 5, 6, 1, 1, 0, 24, 3, 0, 1, 0, 1, 1, 1, 1]' : 0.094656}", "{'[5, 1, 2, 0, 5, 6, 1, 1, 0, 24, 3, 0, 1, 0, 1, 1, 1, 1]' : 0.0947161}", "{'[5, 1, 2, 0, 5, 6, 1, 1, 0, 24, 3, 0, 1, 0, 1, 1, 1, 1]' : 0.094368}"]
returning from 'run': {'[5, 1, 2, 0, 5, 6, 1, 1, 0, 24, 3, 0, 1, 0, 1, 1, 1, 1]': ([0.108609, 0.108511, 0.105298, 0.0944278, 0.0942869, 0.094327, 0.0991511, 0.0948248, 0.094435, 0.0944281, 0.094466, 0.0942841, 0.0943689, 0.0946188, 0.094384, 0.0943818, 0.094342, 0.0943789, 0.0942988, 0.094346, 0.0944629, 0.0947669, 0.0991499, 0.094841, 0.0946329, 0.094825, 0.0950432, 0.094656, 0.0947161, 0.094368], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 1, 2, 0, 5, 6, 1, 1, 0, 24, 3, 0, 1, 0, 1, 1, 1, 1]': ([0.108609, 0.108511, 0.105298, 0.0944278, 0.0942869, 0.094327, 0.0991511, 0.0948248, 0.094435, 0.0944281, 0.094466, 0.0942841, 0.0943689, 0.0946188, 0.094384, 0.0943818, 0.094342, 0.0943789, 0.0942988, 0.094346, 0.0944629, 0.0947669, 0.0991499, 0.094841, 0.0946329, 0.094825, 0.0950432, 0.094656, 0.0947161, 0.094368], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	25
        Max loop nest depth: 	5
        Additions: 		3320
        Multiplications: 	1584
        Divisions: 		0
        Logical: 		0
        Reads: 			6303
        Writes: 		1025
        Comparisons:		25
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest78.exe __orio_perftest78.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest78.exe  
Program Test Output: 
{'[0, 2, 5, 6, 6, 4, 0, 1, 28, 0, 7, 13, 2, 0, 0, 1, 0, 1]' : 0.17006}
{'[0, 2, 5, 6, 6, 4, 0, 1, 28, 0, 7, 13, 2, 0, 0, 1, 0, 1]' : 0.169955}
{'[0, 2, 5, 6, 6, 4, 0, 1, 28, 0, 7, 13, 2, 0, 0, 1, 0, 1]' : 0.169687}
{'[0, 2, 5, 6, 6, 4, 0, 1, 28, 0, 7, 13, 2, 0, 0, 1, 0, 1]' : 0.168967}
{'[0, 2, 5, 6, 6, 4, 0, 1, 28, 0, 7, 13, 2, 0, 0, 1, 0, 1]' : 0.171551}
{'[0, 2, 5, 6, 6, 4, 0, 1, 28, 0, 7, 13, 2, 0, 0, 1, 0, 1]' : 0.170743}
{'[0, 2, 5, 6, 6, 4, 0, 1, 28, 0, 7, 13, 2, 0, 0, 1, 0, 1]' : 0.169919}
{'[0, 2, 5, 6, 6, 4, 0, 1, 28, 0, 7, 13, 2, 0, 0, 1, 0, 1]' : 0.169751}
{'[0, 2, 5, 6, 6, 4, 0, 1, 28, 0, 7, 13, 2, 0, 0, 1, 0, 1]' : 0.17089}
{'[0, 2, 5, 6, 6, 4, 0, 1, 28, 0, 7, 13, 2, 0, 0, 1, 0, 1]' : 0.169605}
{'[0, 2, 5, 6, 6, 4, 0, 1, 28, 0, 7, 13, 2, 0, 0, 1, 0, 1]' : 0.171426}
{'[0, 2, 5, 6, 6, 4, 0, 1, 28, 0, 7, 13, 2, 0, 0, 1, 0, 1]' : 0.169944}
{'[0, 2, 5, 6, 6, 4, 0, 1, 28, 0, 7, 13, 2, 0, 0, 1, 0, 1]' : 0.168875}
{'[0, 2, 5, 6, 6, 4, 0, 1, 28, 0, 7, 13, 2, 0, 0, 1, 0, 1]' : 0.170989}
{'[0, 2, 5, 6, 6, 4, 0, 1, 28, 0, 7, 13, 2, 0, 0, 1, 0, 1]' : 0.170779}
{'[0, 2, 5, 6, 6, 4, 0, 1, 28, 0, 7, 13, 2, 0, 0, 1, 0, 1]' : 0.17146}
{'[0, 2, 5, 6, 6, 4, 0, 1, 28, 0, 7, 13, 2, 0, 0, 1, 0, 1]' : 0.170013}
{'[0, 2, 5, 6, 6, 4, 0, 1, 28, 0, 7, 13, 2, 0, 0, 1, 0, 1]' : 0.170347}
{'[0, 2, 5, 6, 6, 4, 0, 1, 28, 0, 7, 13, 2, 0, 0, 1, 0, 1]' : 0.168808}
{'[0, 2, 5, 6, 6, 4, 0, 1, 28, 0, 7, 13, 2, 0, 0, 1, 0, 1]' : 0.169048}
{'[0, 2, 5, 6, 6, 4, 0, 1, 28, 0, 7, 13, 2, 0, 0, 1, 0, 1]' : 0.171441}
{'[0, 2, 5, 6, 6, 4, 0, 1, 28, 0, 7, 13, 2, 0, 0, 1, 0, 1]' : 0.169803}
{'[0, 2, 5, 6, 6, 4, 0, 1, 28, 0, 7, 13, 2, 0, 0, 1, 0, 1]' : 0.170275}
{'[0, 2, 5, 6, 6, 4, 0, 1, 28, 0, 7, 13, 2, 0, 0, 1, 0, 1]' : 0.170545}
{'[0, 2, 5, 6, 6, 4, 0, 1, 28, 0, 7, 13, 2, 0, 0, 1, 0, 1]' : 0.169626}
{'[0, 2, 5, 6, 6, 4, 0, 1, 28, 0, 7, 13, 2, 0, 0, 1, 0, 1]' : 0.169721}
{'[0, 2, 5, 6, 6, 4, 0, 1, 28, 0, 7, 13, 2, 0, 0, 1, 0, 1]' : 0.170039}
{'[0, 2, 5, 6, 6, 4, 0, 1, 28, 0, 7, 13, 2, 0, 0, 1, 0, 1]' : 0.17093}
{'[0, 2, 5, 6, 6, 4, 0, 1, 28, 0, 7, 13, 2, 0, 0, 1, 0, 1]' : 0.169329}
{'[0, 2, 5, 6, 6, 4, 0, 1, 28, 0, 7, 13, 2, 0, 0, 1, 0, 1]' : 0.167212}

out:
 ["{'[0, 2, 5, 6, 6, 4, 0, 1, 28, 0, 7, 13, 2, 0, 0, 1, 0, 1]' : 0.17006}", "{'[0, 2, 5, 6, 6, 4, 0, 1, 28, 0, 7, 13, 2, 0, 0, 1, 0, 1]' : 0.169955}", "{'[0, 2, 5, 6, 6, 4, 0, 1, 28, 0, 7, 13, 2, 0, 0, 1, 0, 1]' : 0.169687}", "{'[0, 2, 5, 6, 6, 4, 0, 1, 28, 0, 7, 13, 2, 0, 0, 1, 0, 1]' : 0.168967}", "{'[0, 2, 5, 6, 6, 4, 0, 1, 28, 0, 7, 13, 2, 0, 0, 1, 0, 1]' : 0.171551}", "{'[0, 2, 5, 6, 6, 4, 0, 1, 28, 0, 7, 13, 2, 0, 0, 1, 0, 1]' : 0.170743}", "{'[0, 2, 5, 6, 6, 4, 0, 1, 28, 0, 7, 13, 2, 0, 0, 1, 0, 1]' : 0.169919}", "{'[0, 2, 5, 6, 6, 4, 0, 1, 28, 0, 7, 13, 2, 0, 0, 1, 0, 1]' : 0.169751}", "{'[0, 2, 5, 6, 6, 4, 0, 1, 28, 0, 7, 13, 2, 0, 0, 1, 0, 1]' : 0.17089}", "{'[0, 2, 5, 6, 6, 4, 0, 1, 28, 0, 7, 13, 2, 0, 0, 1, 0, 1]' : 0.169605}", "{'[0, 2, 5, 6, 6, 4, 0, 1, 28, 0, 7, 13, 2, 0, 0, 1, 0, 1]' : 0.171426}", "{'[0, 2, 5, 6, 6, 4, 0, 1, 28, 0, 7, 13, 2, 0, 0, 1, 0, 1]' : 0.169944}", "{'[0, 2, 5, 6, 6, 4, 0, 1, 28, 0, 7, 13, 2, 0, 0, 1, 0, 1]' : 0.168875}", "{'[0, 2, 5, 6, 6, 4, 0, 1, 28, 0, 7, 13, 2, 0, 0, 1, 0, 1]' : 0.170989}", "{'[0, 2, 5, 6, 6, 4, 0, 1, 28, 0, 7, 13, 2, 0, 0, 1, 0, 1]' : 0.170779}", "{'[0, 2, 5, 6, 6, 4, 0, 1, 28, 0, 7, 13, 2, 0, 0, 1, 0, 1]' : 0.17146}", "{'[0, 2, 5, 6, 6, 4, 0, 1, 28, 0, 7, 13, 2, 0, 0, 1, 0, 1]' : 0.170013}", "{'[0, 2, 5, 6, 6, 4, 0, 1, 28, 0, 7, 13, 2, 0, 0, 1, 0, 1]' : 0.170347}", "{'[0, 2, 5, 6, 6, 4, 0, 1, 28, 0, 7, 13, 2, 0, 0, 1, 0, 1]' : 0.168808}", "{'[0, 2, 5, 6, 6, 4, 0, 1, 28, 0, 7, 13, 2, 0, 0, 1, 0, 1]' : 0.169048}", "{'[0, 2, 5, 6, 6, 4, 0, 1, 28, 0, 7, 13, 2, 0, 0, 1, 0, 1]' : 0.171441}", "{'[0, 2, 5, 6, 6, 4, 0, 1, 28, 0, 7, 13, 2, 0, 0, 1, 0, 1]' : 0.169803}", "{'[0, 2, 5, 6, 6, 4, 0, 1, 28, 0, 7, 13, 2, 0, 0, 1, 0, 1]' : 0.170275}", "{'[0, 2, 5, 6, 6, 4, 0, 1, 28, 0, 7, 13, 2, 0, 0, 1, 0, 1]' : 0.170545}", "{'[0, 2, 5, 6, 6, 4, 0, 1, 28, 0, 7, 13, 2, 0, 0, 1, 0, 1]' : 0.169626}", "{'[0, 2, 5, 6, 6, 4, 0, 1, 28, 0, 7, 13, 2, 0, 0, 1, 0, 1]' : 0.169721}", "{'[0, 2, 5, 6, 6, 4, 0, 1, 28, 0, 7, 13, 2, 0, 0, 1, 0, 1]' : 0.170039}", "{'[0, 2, 5, 6, 6, 4, 0, 1, 28, 0, 7, 13, 2, 0, 0, 1, 0, 1]' : 0.17093}", "{'[0, 2, 5, 6, 6, 4, 0, 1, 28, 0, 7, 13, 2, 0, 0, 1, 0, 1]' : 0.169329}", "{'[0, 2, 5, 6, 6, 4, 0, 1, 28, 0, 7, 13, 2, 0, 0, 1, 0, 1]' : 0.167212}"]
returning from 'run': {'[0, 2, 5, 6, 6, 4, 0, 1, 28, 0, 7, 13, 2, 0, 0, 1, 0, 1]': ([0.17006, 0.169955, 0.169687, 0.168967, 0.171551, 0.170743, 0.169919, 0.169751, 0.17089, 0.169605, 0.171426, 0.169944, 0.168875, 0.170989, 0.170779, 0.17146, 0.170013, 0.170347, 0.168808, 0.169048, 0.171441, 0.169803, 0.170275, 0.170545, 0.169626, 0.169721, 0.170039, 0.17093, 0.169329, 0.167212], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 5, 6, 6, 4, 0, 1, 28, 0, 7, 13, 2, 0, 0, 1, 0, 1]': ([0.17006, 0.169955, 0.169687, 0.168967, 0.171551, 0.170743, 0.169919, 0.169751, 0.17089, 0.169605, 0.171426, 0.169944, 0.168875, 0.170989, 0.170779, 0.17146, 0.170013, 0.170347, 0.168808, 0.169048, 0.171441, 0.169803, 0.170275, 0.170545, 0.169626, 0.169721, 0.170039, 0.17093, 0.169329, 0.167212], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	23
        Max loop nest depth: 	5
        Additions: 		6792
        Multiplications: 	1584
        Divisions: 		0
        Logical: 		0
        Reads: 			9643
        Writes: 		856
        Comparisons:		23
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest79.exe __orio_perftest79.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest79.exe  
Program Test Output: 
{'[5, 3, 5, 0, 2, 4, 0, 1, 2, 0, 0, 21, 2, 0, 0, 0, 0, 1]' : 0.151968}
{'[5, 3, 5, 0, 2, 4, 0, 1, 2, 0, 0, 21, 2, 0, 0, 0, 0, 1]' : 0.149479}
{'[5, 3, 5, 0, 2, 4, 0, 1, 2, 0, 0, 21, 2, 0, 0, 0, 0, 1]' : 0.149735}
{'[5, 3, 5, 0, 2, 4, 0, 1, 2, 0, 0, 21, 2, 0, 0, 0, 0, 1]' : 0.149786}
{'[5, 3, 5, 0, 2, 4, 0, 1, 2, 0, 0, 21, 2, 0, 0, 0, 0, 1]' : 0.151386}
{'[5, 3, 5, 0, 2, 4, 0, 1, 2, 0, 0, 21, 2, 0, 0, 0, 0, 1]' : 0.152251}
{'[5, 3, 5, 0, 2, 4, 0, 1, 2, 0, 0, 21, 2, 0, 0, 0, 0, 1]' : 0.150965}
{'[5, 3, 5, 0, 2, 4, 0, 1, 2, 0, 0, 21, 2, 0, 0, 0, 0, 1]' : 0.15029}
{'[5, 3, 5, 0, 2, 4, 0, 1, 2, 0, 0, 21, 2, 0, 0, 0, 0, 1]' : 0.149446}
{'[5, 3, 5, 0, 2, 4, 0, 1, 2, 0, 0, 21, 2, 0, 0, 0, 0, 1]' : 0.148748}
{'[5, 3, 5, 0, 2, 4, 0, 1, 2, 0, 0, 21, 2, 0, 0, 0, 0, 1]' : 0.149816}
{'[5, 3, 5, 0, 2, 4, 0, 1, 2, 0, 0, 21, 2, 0, 0, 0, 0, 1]' : 0.152017}
{'[5, 3, 5, 0, 2, 4, 0, 1, 2, 0, 0, 21, 2, 0, 0, 0, 0, 1]' : 0.152002}
{'[5, 3, 5, 0, 2, 4, 0, 1, 2, 0, 0, 21, 2, 0, 0, 0, 0, 1]' : 0.151873}
{'[5, 3, 5, 0, 2, 4, 0, 1, 2, 0, 0, 21, 2, 0, 0, 0, 0, 1]' : 0.151817}
{'[5, 3, 5, 0, 2, 4, 0, 1, 2, 0, 0, 21, 2, 0, 0, 0, 0, 1]' : 0.149904}
{'[5, 3, 5, 0, 2, 4, 0, 1, 2, 0, 0, 21, 2, 0, 0, 0, 0, 1]' : 0.14938}
{'[5, 3, 5, 0, 2, 4, 0, 1, 2, 0, 0, 21, 2, 0, 0, 0, 0, 1]' : 0.150415}
{'[5, 3, 5, 0, 2, 4, 0, 1, 2, 0, 0, 21, 2, 0, 0, 0, 0, 1]' : 0.151378}
{'[5, 3, 5, 0, 2, 4, 0, 1, 2, 0, 0, 21, 2, 0, 0, 0, 0, 1]' : 0.152025}
{'[5, 3, 5, 0, 2, 4, 0, 1, 2, 0, 0, 21, 2, 0, 0, 0, 0, 1]' : 0.152217}
{'[5, 3, 5, 0, 2, 4, 0, 1, 2, 0, 0, 21, 2, 0, 0, 0, 0, 1]' : 0.151857}
{'[5, 3, 5, 0, 2, 4, 0, 1, 2, 0, 0, 21, 2, 0, 0, 0, 0, 1]' : 0.150127}
{'[5, 3, 5, 0, 2, 4, 0, 1, 2, 0, 0, 21, 2, 0, 0, 0, 0, 1]' : 0.149619}
{'[5, 3, 5, 0, 2, 4, 0, 1, 2, 0, 0, 21, 2, 0, 0, 0, 0, 1]' : 0.152314}
{'[5, 3, 5, 0, 2, 4, 0, 1, 2, 0, 0, 21, 2, 0, 0, 0, 0, 1]' : 0.151756}
{'[5, 3, 5, 0, 2, 4, 0, 1, 2, 0, 0, 21, 2, 0, 0, 0, 0, 1]' : 0.15161}
{'[5, 3, 5, 0, 2, 4, 0, 1, 2, 0, 0, 21, 2, 0, 0, 0, 0, 1]' : 0.151016}
{'[5, 3, 5, 0, 2, 4, 0, 1, 2, 0, 0, 21, 2, 0, 0, 0, 0, 1]' : 0.151478}
{'[5, 3, 5, 0, 2, 4, 0, 1, 2, 0, 0, 21, 2, 0, 0, 0, 0, 1]' : 0.151618}

out:
 ["{'[5, 3, 5, 0, 2, 4, 0, 1, 2, 0, 0, 21, 2, 0, 0, 0, 0, 1]' : 0.151968}", "{'[5, 3, 5, 0, 2, 4, 0, 1, 2, 0, 0, 21, 2, 0, 0, 0, 0, 1]' : 0.149479}", "{'[5, 3, 5, 0, 2, 4, 0, 1, 2, 0, 0, 21, 2, 0, 0, 0, 0, 1]' : 0.149735}", "{'[5, 3, 5, 0, 2, 4, 0, 1, 2, 0, 0, 21, 2, 0, 0, 0, 0, 1]' : 0.149786}", "{'[5, 3, 5, 0, 2, 4, 0, 1, 2, 0, 0, 21, 2, 0, 0, 0, 0, 1]' : 0.151386}", "{'[5, 3, 5, 0, 2, 4, 0, 1, 2, 0, 0, 21, 2, 0, 0, 0, 0, 1]' : 0.152251}", "{'[5, 3, 5, 0, 2, 4, 0, 1, 2, 0, 0, 21, 2, 0, 0, 0, 0, 1]' : 0.150965}", "{'[5, 3, 5, 0, 2, 4, 0, 1, 2, 0, 0, 21, 2, 0, 0, 0, 0, 1]' : 0.15029}", "{'[5, 3, 5, 0, 2, 4, 0, 1, 2, 0, 0, 21, 2, 0, 0, 0, 0, 1]' : 0.149446}", "{'[5, 3, 5, 0, 2, 4, 0, 1, 2, 0, 0, 21, 2, 0, 0, 0, 0, 1]' : 0.148748}", "{'[5, 3, 5, 0, 2, 4, 0, 1, 2, 0, 0, 21, 2, 0, 0, 0, 0, 1]' : 0.149816}", "{'[5, 3, 5, 0, 2, 4, 0, 1, 2, 0, 0, 21, 2, 0, 0, 0, 0, 1]' : 0.152017}", "{'[5, 3, 5, 0, 2, 4, 0, 1, 2, 0, 0, 21, 2, 0, 0, 0, 0, 1]' : 0.152002}", "{'[5, 3, 5, 0, 2, 4, 0, 1, 2, 0, 0, 21, 2, 0, 0, 0, 0, 1]' : 0.151873}", "{'[5, 3, 5, 0, 2, 4, 0, 1, 2, 0, 0, 21, 2, 0, 0, 0, 0, 1]' : 0.151817}", "{'[5, 3, 5, 0, 2, 4, 0, 1, 2, 0, 0, 21, 2, 0, 0, 0, 0, 1]' : 0.149904}", "{'[5, 3, 5, 0, 2, 4, 0, 1, 2, 0, 0, 21, 2, 0, 0, 0, 0, 1]' : 0.14938}", "{'[5, 3, 5, 0, 2, 4, 0, 1, 2, 0, 0, 21, 2, 0, 0, 0, 0, 1]' : 0.150415}", "{'[5, 3, 5, 0, 2, 4, 0, 1, 2, 0, 0, 21, 2, 0, 0, 0, 0, 1]' : 0.151378}", "{'[5, 3, 5, 0, 2, 4, 0, 1, 2, 0, 0, 21, 2, 0, 0, 0, 0, 1]' : 0.152025}", "{'[5, 3, 5, 0, 2, 4, 0, 1, 2, 0, 0, 21, 2, 0, 0, 0, 0, 1]' : 0.152217}", "{'[5, 3, 5, 0, 2, 4, 0, 1, 2, 0, 0, 21, 2, 0, 0, 0, 0, 1]' : 0.151857}", "{'[5, 3, 5, 0, 2, 4, 0, 1, 2, 0, 0, 21, 2, 0, 0, 0, 0, 1]' : 0.150127}", "{'[5, 3, 5, 0, 2, 4, 0, 1, 2, 0, 0, 21, 2, 0, 0, 0, 0, 1]' : 0.149619}", "{'[5, 3, 5, 0, 2, 4, 0, 1, 2, 0, 0, 21, 2, 0, 0, 0, 0, 1]' : 0.152314}", "{'[5, 3, 5, 0, 2, 4, 0, 1, 2, 0, 0, 21, 2, 0, 0, 0, 0, 1]' : 0.151756}", "{'[5, 3, 5, 0, 2, 4, 0, 1, 2, 0, 0, 21, 2, 0, 0, 0, 0, 1]' : 0.15161}", "{'[5, 3, 5, 0, 2, 4, 0, 1, 2, 0, 0, 21, 2, 0, 0, 0, 0, 1]' : 0.151016}", "{'[5, 3, 5, 0, 2, 4, 0, 1, 2, 0, 0, 21, 2, 0, 0, 0, 0, 1]' : 0.151478}", "{'[5, 3, 5, 0, 2, 4, 0, 1, 2, 0, 0, 21, 2, 0, 0, 0, 0, 1]' : 0.151618}"]
returning from 'run': {'[5, 3, 5, 0, 2, 4, 0, 1, 2, 0, 0, 21, 2, 0, 0, 0, 0, 1]': ([0.151968, 0.149479, 0.149735, 0.149786, 0.151386, 0.152251, 0.150965, 0.15029, 0.149446, 0.148748, 0.149816, 0.152017, 0.152002, 0.151873, 0.151817, 0.149904, 0.14938, 0.150415, 0.151378, 0.152025, 0.152217, 0.151857, 0.150127, 0.149619, 0.152314, 0.151756, 0.15161, 0.151016, 0.151478, 0.151618], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 3, 5, 0, 2, 4, 0, 1, 2, 0, 0, 21, 2, 0, 0, 0, 0, 1]': ([0.151968, 0.149479, 0.149735, 0.149786, 0.151386, 0.152251, 0.150965, 0.15029, 0.149446, 0.148748, 0.149816, 0.152017, 0.152002, 0.151873, 0.151817, 0.149904, 0.14938, 0.150415, 0.151378, 0.152025, 0.152217, 0.151857, 0.150127, 0.149619, 0.152314, 0.151756, 0.15161, 0.151016, 0.151478, 0.151618], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	121
        Max loop nest depth: 	5
        Additions: 		1594
        Multiplications: 	280
        Divisions: 		0
        Logical: 		0
        Reads: 			3036
        Writes: 		562
        Comparisons:		121
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest80.exe __orio_perftest80.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest80.exe  
Program Test Output: 
{'[6, 6, 5, 6, 0, 0, 1, 1, 25, 18, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.10994}
{'[6, 6, 5, 6, 0, 0, 1, 1, 25, 18, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.10989}
{'[6, 6, 5, 6, 0, 0, 1, 1, 25, 18, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.109743}
{'[6, 6, 5, 6, 0, 0, 1, 1, 25, 18, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.109872}
{'[6, 6, 5, 6, 0, 0, 1, 1, 25, 18, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.109871}
{'[6, 6, 5, 6, 0, 0, 1, 1, 25, 18, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.109678}
{'[6, 6, 5, 6, 0, 0, 1, 1, 25, 18, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.109435}
{'[6, 6, 5, 6, 0, 0, 1, 1, 25, 18, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.109674}
{'[6, 6, 5, 6, 0, 0, 1, 1, 25, 18, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.109686}
{'[6, 6, 5, 6, 0, 0, 1, 1, 25, 18, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.109789}
{'[6, 6, 5, 6, 0, 0, 1, 1, 25, 18, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.109448}
{'[6, 6, 5, 6, 0, 0, 1, 1, 25, 18, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.109641}
{'[6, 6, 5, 6, 0, 0, 1, 1, 25, 18, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.109671}
{'[6, 6, 5, 6, 0, 0, 1, 1, 25, 18, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.10976}
{'[6, 6, 5, 6, 0, 0, 1, 1, 25, 18, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.109501}
{'[6, 6, 5, 6, 0, 0, 1, 1, 25, 18, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.109632}
{'[6, 6, 5, 6, 0, 0, 1, 1, 25, 18, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.109685}
{'[6, 6, 5, 6, 0, 0, 1, 1, 25, 18, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.109636}
{'[6, 6, 5, 6, 0, 0, 1, 1, 25, 18, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.110174}
{'[6, 6, 5, 6, 0, 0, 1, 1, 25, 18, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.10985}
{'[6, 6, 5, 6, 0, 0, 1, 1, 25, 18, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.109845}
{'[6, 6, 5, 6, 0, 0, 1, 1, 25, 18, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.109846}
{'[6, 6, 5, 6, 0, 0, 1, 1, 25, 18, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.109733}
{'[6, 6, 5, 6, 0, 0, 1, 1, 25, 18, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.109658}
{'[6, 6, 5, 6, 0, 0, 1, 1, 25, 18, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.109609}
{'[6, 6, 5, 6, 0, 0, 1, 1, 25, 18, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.109677}
{'[6, 6, 5, 6, 0, 0, 1, 1, 25, 18, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.109514}
{'[6, 6, 5, 6, 0, 0, 1, 1, 25, 18, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.109778}
{'[6, 6, 5, 6, 0, 0, 1, 1, 25, 18, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.109706}
{'[6, 6, 5, 6, 0, 0, 1, 1, 25, 18, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.109673}

out:
 ["{'[6, 6, 5, 6, 0, 0, 1, 1, 25, 18, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.10994}", "{'[6, 6, 5, 6, 0, 0, 1, 1, 25, 18, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.10989}", "{'[6, 6, 5, 6, 0, 0, 1, 1, 25, 18, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.109743}", "{'[6, 6, 5, 6, 0, 0, 1, 1, 25, 18, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.109872}", "{'[6, 6, 5, 6, 0, 0, 1, 1, 25, 18, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.109871}", "{'[6, 6, 5, 6, 0, 0, 1, 1, 25, 18, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.109678}", "{'[6, 6, 5, 6, 0, 0, 1, 1, 25, 18, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.109435}", "{'[6, 6, 5, 6, 0, 0, 1, 1, 25, 18, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.109674}", "{'[6, 6, 5, 6, 0, 0, 1, 1, 25, 18, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.109686}", "{'[6, 6, 5, 6, 0, 0, 1, 1, 25, 18, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.109789}", "{'[6, 6, 5, 6, 0, 0, 1, 1, 25, 18, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.109448}", "{'[6, 6, 5, 6, 0, 0, 1, 1, 25, 18, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.109641}", "{'[6, 6, 5, 6, 0, 0, 1, 1, 25, 18, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.109671}", "{'[6, 6, 5, 6, 0, 0, 1, 1, 25, 18, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.10976}", "{'[6, 6, 5, 6, 0, 0, 1, 1, 25, 18, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.109501}", "{'[6, 6, 5, 6, 0, 0, 1, 1, 25, 18, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.109632}", "{'[6, 6, 5, 6, 0, 0, 1, 1, 25, 18, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.109685}", "{'[6, 6, 5, 6, 0, 0, 1, 1, 25, 18, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.109636}", "{'[6, 6, 5, 6, 0, 0, 1, 1, 25, 18, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.110174}", "{'[6, 6, 5, 6, 0, 0, 1, 1, 25, 18, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.10985}", "{'[6, 6, 5, 6, 0, 0, 1, 1, 25, 18, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.109845}", "{'[6, 6, 5, 6, 0, 0, 1, 1, 25, 18, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.109846}", "{'[6, 6, 5, 6, 0, 0, 1, 1, 25, 18, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.109733}", "{'[6, 6, 5, 6, 0, 0, 1, 1, 25, 18, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.109658}", "{'[6, 6, 5, 6, 0, 0, 1, 1, 25, 18, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.109609}", "{'[6, 6, 5, 6, 0, 0, 1, 1, 25, 18, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.109677}", "{'[6, 6, 5, 6, 0, 0, 1, 1, 25, 18, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.109514}", "{'[6, 6, 5, 6, 0, 0, 1, 1, 25, 18, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.109778}", "{'[6, 6, 5, 6, 0, 0, 1, 1, 25, 18, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.109706}", "{'[6, 6, 5, 6, 0, 0, 1, 1, 25, 18, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.109673}"]
returning from 'run': {'[6, 6, 5, 6, 0, 0, 1, 1, 25, 18, 2, 0, 1, 0, 0, 0, 1, 1]': ([0.10994, 0.10989, 0.109743, 0.109872, 0.109871, 0.109678, 0.109435, 0.109674, 0.109686, 0.109789, 0.109448, 0.109641, 0.109671, 0.10976, 0.109501, 0.109632, 0.109685, 0.109636, 0.110174, 0.10985, 0.109845, 0.109846, 0.109733, 0.109658, 0.109609, 0.109677, 0.109514, 0.109778, 0.109706, 0.109673], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 5, 6, 0, 0, 1, 1, 25, 18, 2, 0, 1, 0, 0, 0, 1, 1]': ([0.10994, 0.10989, 0.109743, 0.109872, 0.109871, 0.109678, 0.109435, 0.109674, 0.109686, 0.109789, 0.109448, 0.109641, 0.109671, 0.10976, 0.109501, 0.109632, 0.109685, 0.109636, 0.110174, 0.10985, 0.109845, 0.109846, 0.109733, 0.109658, 0.109609, 0.109677, 0.109514, 0.109778, 0.109706, 0.109673], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	70
        Max loop nest depth: 	6
        Additions: 		4776
        Multiplications: 	1188
        Divisions: 		0
        Logical: 		0
        Reads: 			7352
        Writes: 		812
        Comparisons:		70
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest81.exe __orio_perftest81.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest81.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest81.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest81.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest81.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	6
        Additions: 		910
        Multiplications: 	360
        Divisions: 		0
        Logical: 		0
        Reads: 			1810
        Writes: 		340
        Comparisons:		24
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest82.exe __orio_perftest82.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest82.exe  
Program Test Output: 
{'[2, 1, 0, 6, 1, 1, 1, 1, 28, 0, 19, 10, 1, 1, 0, 1, 0, 0]' : 0.122344}
{'[2, 1, 0, 6, 1, 1, 1, 1, 28, 0, 19, 10, 1, 1, 0, 1, 0, 0]' : 0.122377}
{'[2, 1, 0, 6, 1, 1, 1, 1, 28, 0, 19, 10, 1, 1, 0, 1, 0, 0]' : 0.112466}
{'[2, 1, 0, 6, 1, 1, 1, 1, 28, 0, 19, 10, 1, 1, 0, 1, 0, 0]' : 0.103016}
{'[2, 1, 0, 6, 1, 1, 1, 1, 28, 0, 19, 10, 1, 1, 0, 1, 0, 0]' : 0.102767}
{'[2, 1, 0, 6, 1, 1, 1, 1, 28, 0, 19, 10, 1, 1, 0, 1, 0, 0]' : 0.102792}
{'[2, 1, 0, 6, 1, 1, 1, 1, 28, 0, 19, 10, 1, 1, 0, 1, 0, 0]' : 0.103859}
{'[2, 1, 0, 6, 1, 1, 1, 1, 28, 0, 19, 10, 1, 1, 0, 1, 0, 0]' : 0.110105}
{'[2, 1, 0, 6, 1, 1, 1, 1, 28, 0, 19, 10, 1, 1, 0, 1, 0, 0]' : 0.110853}
{'[2, 1, 0, 6, 1, 1, 1, 1, 28, 0, 19, 10, 1, 1, 0, 1, 0, 0]' : 0.110094}
{'[2, 1, 0, 6, 1, 1, 1, 1, 28, 0, 19, 10, 1, 1, 0, 1, 0, 0]' : 0.11017}
{'[2, 1, 0, 6, 1, 1, 1, 1, 28, 0, 19, 10, 1, 1, 0, 1, 0, 0]' : 0.110107}
{'[2, 1, 0, 6, 1, 1, 1, 1, 28, 0, 19, 10, 1, 1, 0, 1, 0, 0]' : 0.110155}
{'[2, 1, 0, 6, 1, 1, 1, 1, 28, 0, 19, 10, 1, 1, 0, 1, 0, 0]' : 0.110154}
{'[2, 1, 0, 6, 1, 1, 1, 1, 28, 0, 19, 10, 1, 1, 0, 1, 0, 0]' : 0.110164}
{'[2, 1, 0, 6, 1, 1, 1, 1, 28, 0, 19, 10, 1, 1, 0, 1, 0, 0]' : 0.110207}
{'[2, 1, 0, 6, 1, 1, 1, 1, 28, 0, 19, 10, 1, 1, 0, 1, 0, 0]' : 0.110094}
{'[2, 1, 0, 6, 1, 1, 1, 1, 28, 0, 19, 10, 1, 1, 0, 1, 0, 0]' : 0.11006}
{'[2, 1, 0, 6, 1, 1, 1, 1, 28, 0, 19, 10, 1, 1, 0, 1, 0, 0]' : 0.110076}
{'[2, 1, 0, 6, 1, 1, 1, 1, 28, 0, 19, 10, 1, 1, 0, 1, 0, 0]' : 0.11014}
{'[2, 1, 0, 6, 1, 1, 1, 1, 28, 0, 19, 10, 1, 1, 0, 1, 0, 0]' : 0.110759}
{'[2, 1, 0, 6, 1, 1, 1, 1, 28, 0, 19, 10, 1, 1, 0, 1, 0, 0]' : 0.110123}
{'[2, 1, 0, 6, 1, 1, 1, 1, 28, 0, 19, 10, 1, 1, 0, 1, 0, 0]' : 0.110934}
{'[2, 1, 0, 6, 1, 1, 1, 1, 28, 0, 19, 10, 1, 1, 0, 1, 0, 0]' : 0.11015}
{'[2, 1, 0, 6, 1, 1, 1, 1, 28, 0, 19, 10, 1, 1, 0, 1, 0, 0]' : 0.110188}
{'[2, 1, 0, 6, 1, 1, 1, 1, 28, 0, 19, 10, 1, 1, 0, 1, 0, 0]' : 0.110206}
{'[2, 1, 0, 6, 1, 1, 1, 1, 28, 0, 19, 10, 1, 1, 0, 1, 0, 0]' : 0.110188}
{'[2, 1, 0, 6, 1, 1, 1, 1, 28, 0, 19, 10, 1, 1, 0, 1, 0, 0]' : 0.11009}
{'[2, 1, 0, 6, 1, 1, 1, 1, 28, 0, 19, 10, 1, 1, 0, 1, 0, 0]' : 0.110095}
{'[2, 1, 0, 6, 1, 1, 1, 1, 28, 0, 19, 10, 1, 1, 0, 1, 0, 0]' : 0.11009}

out:
 ["{'[2, 1, 0, 6, 1, 1, 1, 1, 28, 0, 19, 10, 1, 1, 0, 1, 0, 0]' : 0.122344}", "{'[2, 1, 0, 6, 1, 1, 1, 1, 28, 0, 19, 10, 1, 1, 0, 1, 0, 0]' : 0.122377}", "{'[2, 1, 0, 6, 1, 1, 1, 1, 28, 0, 19, 10, 1, 1, 0, 1, 0, 0]' : 0.112466}", "{'[2, 1, 0, 6, 1, 1, 1, 1, 28, 0, 19, 10, 1, 1, 0, 1, 0, 0]' : 0.103016}", "{'[2, 1, 0, 6, 1, 1, 1, 1, 28, 0, 19, 10, 1, 1, 0, 1, 0, 0]' : 0.102767}", "{'[2, 1, 0, 6, 1, 1, 1, 1, 28, 0, 19, 10, 1, 1, 0, 1, 0, 0]' : 0.102792}", "{'[2, 1, 0, 6, 1, 1, 1, 1, 28, 0, 19, 10, 1, 1, 0, 1, 0, 0]' : 0.103859}", "{'[2, 1, 0, 6, 1, 1, 1, 1, 28, 0, 19, 10, 1, 1, 0, 1, 0, 0]' : 0.110105}", "{'[2, 1, 0, 6, 1, 1, 1, 1, 28, 0, 19, 10, 1, 1, 0, 1, 0, 0]' : 0.110853}", "{'[2, 1, 0, 6, 1, 1, 1, 1, 28, 0, 19, 10, 1, 1, 0, 1, 0, 0]' : 0.110094}", "{'[2, 1, 0, 6, 1, 1, 1, 1, 28, 0, 19, 10, 1, 1, 0, 1, 0, 0]' : 0.11017}", "{'[2, 1, 0, 6, 1, 1, 1, 1, 28, 0, 19, 10, 1, 1, 0, 1, 0, 0]' : 0.110107}", "{'[2, 1, 0, 6, 1, 1, 1, 1, 28, 0, 19, 10, 1, 1, 0, 1, 0, 0]' : 0.110155}", "{'[2, 1, 0, 6, 1, 1, 1, 1, 28, 0, 19, 10, 1, 1, 0, 1, 0, 0]' : 0.110154}", "{'[2, 1, 0, 6, 1, 1, 1, 1, 28, 0, 19, 10, 1, 1, 0, 1, 0, 0]' : 0.110164}", "{'[2, 1, 0, 6, 1, 1, 1, 1, 28, 0, 19, 10, 1, 1, 0, 1, 0, 0]' : 0.110207}", "{'[2, 1, 0, 6, 1, 1, 1, 1, 28, 0, 19, 10, 1, 1, 0, 1, 0, 0]' : 0.110094}", "{'[2, 1, 0, 6, 1, 1, 1, 1, 28, 0, 19, 10, 1, 1, 0, 1, 0, 0]' : 0.11006}", "{'[2, 1, 0, 6, 1, 1, 1, 1, 28, 0, 19, 10, 1, 1, 0, 1, 0, 0]' : 0.110076}", "{'[2, 1, 0, 6, 1, 1, 1, 1, 28, 0, 19, 10, 1, 1, 0, 1, 0, 0]' : 0.11014}", "{'[2, 1, 0, 6, 1, 1, 1, 1, 28, 0, 19, 10, 1, 1, 0, 1, 0, 0]' : 0.110759}", "{'[2, 1, 0, 6, 1, 1, 1, 1, 28, 0, 19, 10, 1, 1, 0, 1, 0, 0]' : 0.110123}", "{'[2, 1, 0, 6, 1, 1, 1, 1, 28, 0, 19, 10, 1, 1, 0, 1, 0, 0]' : 0.110934}", "{'[2, 1, 0, 6, 1, 1, 1, 1, 28, 0, 19, 10, 1, 1, 0, 1, 0, 0]' : 0.11015}", "{'[2, 1, 0, 6, 1, 1, 1, 1, 28, 0, 19, 10, 1, 1, 0, 1, 0, 0]' : 0.110188}", "{'[2, 1, 0, 6, 1, 1, 1, 1, 28, 0, 19, 10, 1, 1, 0, 1, 0, 0]' : 0.110206}", "{'[2, 1, 0, 6, 1, 1, 1, 1, 28, 0, 19, 10, 1, 1, 0, 1, 0, 0]' : 0.110188}", "{'[2, 1, 0, 6, 1, 1, 1, 1, 28, 0, 19, 10, 1, 1, 0, 1, 0, 0]' : 0.11009}", "{'[2, 1, 0, 6, 1, 1, 1, 1, 28, 0, 19, 10, 1, 1, 0, 1, 0, 0]' : 0.110095}", "{'[2, 1, 0, 6, 1, 1, 1, 1, 28, 0, 19, 10, 1, 1, 0, 1, 0, 0]' : 0.11009}"]
returning from 'run': {'[2, 1, 0, 6, 1, 1, 1, 1, 28, 0, 19, 10, 1, 1, 0, 1, 0, 0]': ([0.122344, 0.122377, 0.112466, 0.103016, 0.102767, 0.102792, 0.103859, 0.110105, 0.110853, 0.110094, 0.11017, 0.110107, 0.110155, 0.110154, 0.110164, 0.110207, 0.110094, 0.11006, 0.110076, 0.11014, 0.110759, 0.110123, 0.110934, 0.11015, 0.110188, 0.110206, 0.110188, 0.11009, 0.110095, 0.11009], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 1, 0, 6, 1, 1, 1, 1, 28, 0, 19, 10, 1, 1, 0, 1, 0, 0]': ([0.122344, 0.122377, 0.112466, 0.103016, 0.102767, 0.102792, 0.103859, 0.110105, 0.110853, 0.110094, 0.11017, 0.110107, 0.110155, 0.110154, 0.110164, 0.110207, 0.110094, 0.11006, 0.110076, 0.11014, 0.110759, 0.110123, 0.110934, 0.11015, 0.110188, 0.110206, 0.110188, 0.11009, 0.110095, 0.11009], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	54
        Max loop nest depth: 	6
        Additions: 		1098
        Multiplications: 	414
        Divisions: 		0
        Logical: 		0
        Reads: 			2354
        Writes: 		472
        Comparisons:		54
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest83.exe __orio_perftest83.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest83.exe  
Program Test Output: 
{'[1, 4, 6, 5, 6, 4, 0, 1, 11, 13, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.110081}
{'[1, 4, 6, 5, 6, 4, 0, 1, 11, 13, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.107744}
{'[1, 4, 6, 5, 6, 4, 0, 1, 11, 13, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.107678}
{'[1, 4, 6, 5, 6, 4, 0, 1, 11, 13, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.107681}
{'[1, 4, 6, 5, 6, 4, 0, 1, 11, 13, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.108153}
{'[1, 4, 6, 5, 6, 4, 0, 1, 11, 13, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.110946}
{'[1, 4, 6, 5, 6, 4, 0, 1, 11, 13, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.11232}
{'[1, 4, 6, 5, 6, 4, 0, 1, 11, 13, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.112416}
{'[1, 4, 6, 5, 6, 4, 0, 1, 11, 13, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.112353}
{'[1, 4, 6, 5, 6, 4, 0, 1, 11, 13, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.112513}
{'[1, 4, 6, 5, 6, 4, 0, 1, 11, 13, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.110163}
{'[1, 4, 6, 5, 6, 4, 0, 1, 11, 13, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.110229}
{'[1, 4, 6, 5, 6, 4, 0, 1, 11, 13, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.11008}
{'[1, 4, 6, 5, 6, 4, 0, 1, 11, 13, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.110036}
{'[1, 4, 6, 5, 6, 4, 0, 1, 11, 13, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.110614}
{'[1, 4, 6, 5, 6, 4, 0, 1, 11, 13, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.110339}
{'[1, 4, 6, 5, 6, 4, 0, 1, 11, 13, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.110131}
{'[1, 4, 6, 5, 6, 4, 0, 1, 11, 13, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.110184}
{'[1, 4, 6, 5, 6, 4, 0, 1, 11, 13, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.110518}
{'[1, 4, 6, 5, 6, 4, 0, 1, 11, 13, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.110174}
{'[1, 4, 6, 5, 6, 4, 0, 1, 11, 13, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.110286}
{'[1, 4, 6, 5, 6, 4, 0, 1, 11, 13, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.110226}
{'[1, 4, 6, 5, 6, 4, 0, 1, 11, 13, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.110239}
{'[1, 4, 6, 5, 6, 4, 0, 1, 11, 13, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.111537}
{'[1, 4, 6, 5, 6, 4, 0, 1, 11, 13, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.110564}
{'[1, 4, 6, 5, 6, 4, 0, 1, 11, 13, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.110461}
{'[1, 4, 6, 5, 6, 4, 0, 1, 11, 13, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.110199}
{'[1, 4, 6, 5, 6, 4, 0, 1, 11, 13, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.110333}
{'[1, 4, 6, 5, 6, 4, 0, 1, 11, 13, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.108861}
{'[1, 4, 6, 5, 6, 4, 0, 1, 11, 13, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.109605}

out:
 ["{'[1, 4, 6, 5, 6, 4, 0, 1, 11, 13, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.110081}", "{'[1, 4, 6, 5, 6, 4, 0, 1, 11, 13, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.107744}", "{'[1, 4, 6, 5, 6, 4, 0, 1, 11, 13, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.107678}", "{'[1, 4, 6, 5, 6, 4, 0, 1, 11, 13, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.107681}", "{'[1, 4, 6, 5, 6, 4, 0, 1, 11, 13, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.108153}", "{'[1, 4, 6, 5, 6, 4, 0, 1, 11, 13, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.110946}", "{'[1, 4, 6, 5, 6, 4, 0, 1, 11, 13, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.11232}", "{'[1, 4, 6, 5, 6, 4, 0, 1, 11, 13, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.112416}", "{'[1, 4, 6, 5, 6, 4, 0, 1, 11, 13, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.112353}", "{'[1, 4, 6, 5, 6, 4, 0, 1, 11, 13, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.112513}", "{'[1, 4, 6, 5, 6, 4, 0, 1, 11, 13, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.110163}", "{'[1, 4, 6, 5, 6, 4, 0, 1, 11, 13, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.110229}", "{'[1, 4, 6, 5, 6, 4, 0, 1, 11, 13, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.11008}", "{'[1, 4, 6, 5, 6, 4, 0, 1, 11, 13, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.110036}", "{'[1, 4, 6, 5, 6, 4, 0, 1, 11, 13, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.110614}", "{'[1, 4, 6, 5, 6, 4, 0, 1, 11, 13, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.110339}", "{'[1, 4, 6, 5, 6, 4, 0, 1, 11, 13, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.110131}", "{'[1, 4, 6, 5, 6, 4, 0, 1, 11, 13, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.110184}", "{'[1, 4, 6, 5, 6, 4, 0, 1, 11, 13, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.110518}", "{'[1, 4, 6, 5, 6, 4, 0, 1, 11, 13, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.110174}", "{'[1, 4, 6, 5, 6, 4, 0, 1, 11, 13, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.110286}", "{'[1, 4, 6, 5, 6, 4, 0, 1, 11, 13, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.110226}", "{'[1, 4, 6, 5, 6, 4, 0, 1, 11, 13, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.110239}", "{'[1, 4, 6, 5, 6, 4, 0, 1, 11, 13, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.111537}", "{'[1, 4, 6, 5, 6, 4, 0, 1, 11, 13, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.110564}", "{'[1, 4, 6, 5, 6, 4, 0, 1, 11, 13, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.110461}", "{'[1, 4, 6, 5, 6, 4, 0, 1, 11, 13, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.110199}", "{'[1, 4, 6, 5, 6, 4, 0, 1, 11, 13, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.110333}", "{'[1, 4, 6, 5, 6, 4, 0, 1, 11, 13, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.108861}", "{'[1, 4, 6, 5, 6, 4, 0, 1, 11, 13, 0, 0, 1, 0, 1, 1, 0, 0]' : 0.109605}"]
returning from 'run': {'[1, 4, 6, 5, 6, 4, 0, 1, 11, 13, 0, 0, 1, 0, 1, 1, 0, 0]': ([0.110081, 0.107744, 0.107678, 0.107681, 0.108153, 0.110946, 0.11232, 0.112416, 0.112353, 0.112513, 0.110163, 0.110229, 0.11008, 0.110036, 0.110614, 0.110339, 0.110131, 0.110184, 0.110518, 0.110174, 0.110286, 0.110226, 0.110239, 0.111537, 0.110564, 0.110461, 0.110199, 0.110333, 0.108861, 0.109605], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 4, 6, 5, 6, 4, 0, 1, 11, 13, 0, 0, 1, 0, 1, 1, 0, 0]': ([0.110081, 0.107744, 0.107678, 0.107681, 0.108153, 0.110946, 0.11232, 0.112416, 0.112353, 0.112513, 0.110163, 0.110229, 0.11008, 0.110036, 0.110614, 0.110339, 0.110131, 0.110184, 0.110518, 0.110174, 0.110286, 0.110226, 0.110239, 0.111537, 0.110564, 0.110461, 0.110199, 0.110333, 0.108861, 0.109605], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		130
        Multiplications: 	34
        Divisions: 		0
        Logical: 		0
        Reads: 			317
        Writes: 		75
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest84.exe __orio_perftest84.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest84.exe  
Program Test Output: 
{'[2, 1, 5, 3, 1, 6, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.225536}
{'[2, 1, 5, 3, 1, 6, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.225375}
{'[2, 1, 5, 3, 1, 6, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.212502}
{'[2, 1, 5, 3, 1, 6, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.199778}
{'[2, 1, 5, 3, 1, 6, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.199742}
{'[2, 1, 5, 3, 1, 6, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.199785}
{'[2, 1, 5, 3, 1, 6, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.199928}
{'[2, 1, 5, 3, 1, 6, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.199743}
{'[2, 1, 5, 3, 1, 6, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.194927}
{'[2, 1, 5, 3, 1, 6, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.191048}
{'[2, 1, 5, 3, 1, 6, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.193768}
{'[2, 1, 5, 3, 1, 6, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.193745}
{'[2, 1, 5, 3, 1, 6, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.194009}
{'[2, 1, 5, 3, 1, 6, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.193735}
{'[2, 1, 5, 3, 1, 6, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.19382}
{'[2, 1, 5, 3, 1, 6, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.193756}
{'[2, 1, 5, 3, 1, 6, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.193789}
{'[2, 1, 5, 3, 1, 6, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.198884}
{'[2, 1, 5, 3, 1, 6, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.199757}
{'[2, 1, 5, 3, 1, 6, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.199794}
{'[2, 1, 5, 3, 1, 6, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.199828}
{'[2, 1, 5, 3, 1, 6, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.199811}
{'[2, 1, 5, 3, 1, 6, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.199807}
{'[2, 1, 5, 3, 1, 6, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.189208}
{'[2, 1, 5, 3, 1, 6, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.190369}
{'[2, 1, 5, 3, 1, 6, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.1998}
{'[2, 1, 5, 3, 1, 6, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.199787}
{'[2, 1, 5, 3, 1, 6, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.200017}
{'[2, 1, 5, 3, 1, 6, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.199493}
{'[2, 1, 5, 3, 1, 6, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.194908}

out:
 ["{'[2, 1, 5, 3, 1, 6, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.225536}", "{'[2, 1, 5, 3, 1, 6, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.225375}", "{'[2, 1, 5, 3, 1, 6, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.212502}", "{'[2, 1, 5, 3, 1, 6, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.199778}", "{'[2, 1, 5, 3, 1, 6, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.199742}", "{'[2, 1, 5, 3, 1, 6, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.199785}", "{'[2, 1, 5, 3, 1, 6, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.199928}", "{'[2, 1, 5, 3, 1, 6, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.199743}", "{'[2, 1, 5, 3, 1, 6, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.194927}", "{'[2, 1, 5, 3, 1, 6, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.191048}", "{'[2, 1, 5, 3, 1, 6, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.193768}", "{'[2, 1, 5, 3, 1, 6, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.193745}", "{'[2, 1, 5, 3, 1, 6, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.194009}", "{'[2, 1, 5, 3, 1, 6, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.193735}", "{'[2, 1, 5, 3, 1, 6, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.19382}", "{'[2, 1, 5, 3, 1, 6, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.193756}", "{'[2, 1, 5, 3, 1, 6, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.193789}", "{'[2, 1, 5, 3, 1, 6, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.198884}", "{'[2, 1, 5, 3, 1, 6, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.199757}", "{'[2, 1, 5, 3, 1, 6, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.199794}", "{'[2, 1, 5, 3, 1, 6, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.199828}", "{'[2, 1, 5, 3, 1, 6, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.199811}", "{'[2, 1, 5, 3, 1, 6, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.199807}", "{'[2, 1, 5, 3, 1, 6, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.189208}", "{'[2, 1, 5, 3, 1, 6, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.190369}", "{'[2, 1, 5, 3, 1, 6, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.1998}", "{'[2, 1, 5, 3, 1, 6, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.199787}", "{'[2, 1, 5, 3, 1, 6, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.200017}", "{'[2, 1, 5, 3, 1, 6, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.199493}", "{'[2, 1, 5, 3, 1, 6, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1]' : 0.194908}"]
returning from 'run': {'[2, 1, 5, 3, 1, 6, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1]': ([0.225536, 0.225375, 0.212502, 0.199778, 0.199742, 0.199785, 0.199928, 0.199743, 0.194927, 0.191048, 0.193768, 0.193745, 0.194009, 0.193735, 0.19382, 0.193756, 0.193789, 0.198884, 0.199757, 0.199794, 0.199828, 0.199811, 0.199807, 0.189208, 0.190369, 0.1998, 0.199787, 0.200017, 0.199493, 0.194908], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 1, 5, 3, 1, 6, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1]': ([0.225536, 0.225375, 0.212502, 0.199778, 0.199742, 0.199785, 0.199928, 0.199743, 0.194927, 0.191048, 0.193768, 0.193745, 0.194009, 0.193735, 0.19382, 0.193756, 0.193789, 0.198884, 0.199757, 0.199794, 0.199828, 0.199811, 0.199807, 0.189208, 0.190369, 0.1998, 0.199787, 0.200017, 0.199493, 0.194908], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	5
        Additions: 		5223
        Multiplications: 	2574
        Divisions: 		0
        Logical: 		0
        Reads: 			9661
        Writes: 		1475
        Comparisons:		18
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest85.exe __orio_perftest85.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest85.exe  
Program Test Output: 
{'[2, 0, 0, 3, 3, 0, 1, 1, 2, 0, 29, 6, 2, 0, 0, 1, 1, 1]' : 0.253141}
{'[2, 0, 0, 3, 3, 0, 1, 1, 2, 0, 29, 6, 2, 0, 0, 1, 1, 1]' : 0.248474}
{'[2, 0, 0, 3, 3, 0, 1, 1, 2, 0, 29, 6, 2, 0, 0, 1, 1, 1]' : 0.231172}
{'[2, 0, 0, 3, 3, 0, 1, 1, 2, 0, 29, 6, 2, 0, 0, 1, 1, 1]' : 0.231013}
{'[2, 0, 0, 3, 3, 0, 1, 1, 2, 0, 29, 6, 2, 0, 0, 1, 1, 1]' : 0.232349}
{'[2, 0, 0, 3, 3, 0, 1, 1, 2, 0, 29, 6, 2, 0, 0, 1, 1, 1]' : 0.231693}
{'[2, 0, 0, 3, 3, 0, 1, 1, 2, 0, 29, 6, 2, 0, 0, 1, 1, 1]' : 0.231516}
{'[2, 0, 0, 3, 3, 0, 1, 1, 2, 0, 29, 6, 2, 0, 0, 1, 1, 1]' : 0.231315}
{'[2, 0, 0, 3, 3, 0, 1, 1, 2, 0, 29, 6, 2, 0, 0, 1, 1, 1]' : 0.231987}
{'[2, 0, 0, 3, 3, 0, 1, 1, 2, 0, 29, 6, 2, 0, 0, 1, 1, 1]' : 0.231788}
{'[2, 0, 0, 3, 3, 0, 1, 1, 2, 0, 29, 6, 2, 0, 0, 1, 1, 1]' : 0.228357}
{'[2, 0, 0, 3, 3, 0, 1, 1, 2, 0, 29, 6, 2, 0, 0, 1, 1, 1]' : 0.231176}
{'[2, 0, 0, 3, 3, 0, 1, 1, 2, 0, 29, 6, 2, 0, 0, 1, 1, 1]' : 0.231835}
{'[2, 0, 0, 3, 3, 0, 1, 1, 2, 0, 29, 6, 2, 0, 0, 1, 1, 1]' : 0.231723}
{'[2, 0, 0, 3, 3, 0, 1, 1, 2, 0, 29, 6, 2, 0, 0, 1, 1, 1]' : 0.227702}
{'[2, 0, 0, 3, 3, 0, 1, 1, 2, 0, 29, 6, 2, 0, 0, 1, 1, 1]' : 0.230875}
{'[2, 0, 0, 3, 3, 0, 1, 1, 2, 0, 29, 6, 2, 0, 0, 1, 1, 1]' : 0.231795}
{'[2, 0, 0, 3, 3, 0, 1, 1, 2, 0, 29, 6, 2, 0, 0, 1, 1, 1]' : 0.231986}
{'[2, 0, 0, 3, 3, 0, 1, 1, 2, 0, 29, 6, 2, 0, 0, 1, 1, 1]' : 0.232216}
{'[2, 0, 0, 3, 3, 0, 1, 1, 2, 0, 29, 6, 2, 0, 0, 1, 1, 1]' : 0.231832}
{'[2, 0, 0, 3, 3, 0, 1, 1, 2, 0, 29, 6, 2, 0, 0, 1, 1, 1]' : 0.22697}
{'[2, 0, 0, 3, 3, 0, 1, 1, 2, 0, 29, 6, 2, 0, 0, 1, 1, 1]' : 0.227624}
{'[2, 0, 0, 3, 3, 0, 1, 1, 2, 0, 29, 6, 2, 0, 0, 1, 1, 1]' : 0.227832}
{'[2, 0, 0, 3, 3, 0, 1, 1, 2, 0, 29, 6, 2, 0, 0, 1, 1, 1]' : 0.224438}
{'[2, 0, 0, 3, 3, 0, 1, 1, 2, 0, 29, 6, 2, 0, 0, 1, 1, 1]' : 0.227342}
{'[2, 0, 0, 3, 3, 0, 1, 1, 2, 0, 29, 6, 2, 0, 0, 1, 1, 1]' : 0.226754}
{'[2, 0, 0, 3, 3, 0, 1, 1, 2, 0, 29, 6, 2, 0, 0, 1, 1, 1]' : 0.231877}
{'[2, 0, 0, 3, 3, 0, 1, 1, 2, 0, 29, 6, 2, 0, 0, 1, 1, 1]' : 0.232178}
{'[2, 0, 0, 3, 3, 0, 1, 1, 2, 0, 29, 6, 2, 0, 0, 1, 1, 1]' : 0.231747}
{'[2, 0, 0, 3, 3, 0, 1, 1, 2, 0, 29, 6, 2, 0, 0, 1, 1, 1]' : 0.2318}

out:
 ["{'[2, 0, 0, 3, 3, 0, 1, 1, 2, 0, 29, 6, 2, 0, 0, 1, 1, 1]' : 0.253141}", "{'[2, 0, 0, 3, 3, 0, 1, 1, 2, 0, 29, 6, 2, 0, 0, 1, 1, 1]' : 0.248474}", "{'[2, 0, 0, 3, 3, 0, 1, 1, 2, 0, 29, 6, 2, 0, 0, 1, 1, 1]' : 0.231172}", "{'[2, 0, 0, 3, 3, 0, 1, 1, 2, 0, 29, 6, 2, 0, 0, 1, 1, 1]' : 0.231013}", "{'[2, 0, 0, 3, 3, 0, 1, 1, 2, 0, 29, 6, 2, 0, 0, 1, 1, 1]' : 0.232349}", "{'[2, 0, 0, 3, 3, 0, 1, 1, 2, 0, 29, 6, 2, 0, 0, 1, 1, 1]' : 0.231693}", "{'[2, 0, 0, 3, 3, 0, 1, 1, 2, 0, 29, 6, 2, 0, 0, 1, 1, 1]' : 0.231516}", "{'[2, 0, 0, 3, 3, 0, 1, 1, 2, 0, 29, 6, 2, 0, 0, 1, 1, 1]' : 0.231315}", "{'[2, 0, 0, 3, 3, 0, 1, 1, 2, 0, 29, 6, 2, 0, 0, 1, 1, 1]' : 0.231987}", "{'[2, 0, 0, 3, 3, 0, 1, 1, 2, 0, 29, 6, 2, 0, 0, 1, 1, 1]' : 0.231788}", "{'[2, 0, 0, 3, 3, 0, 1, 1, 2, 0, 29, 6, 2, 0, 0, 1, 1, 1]' : 0.228357}", "{'[2, 0, 0, 3, 3, 0, 1, 1, 2, 0, 29, 6, 2, 0, 0, 1, 1, 1]' : 0.231176}", "{'[2, 0, 0, 3, 3, 0, 1, 1, 2, 0, 29, 6, 2, 0, 0, 1, 1, 1]' : 0.231835}", "{'[2, 0, 0, 3, 3, 0, 1, 1, 2, 0, 29, 6, 2, 0, 0, 1, 1, 1]' : 0.231723}", "{'[2, 0, 0, 3, 3, 0, 1, 1, 2, 0, 29, 6, 2, 0, 0, 1, 1, 1]' : 0.227702}", "{'[2, 0, 0, 3, 3, 0, 1, 1, 2, 0, 29, 6, 2, 0, 0, 1, 1, 1]' : 0.230875}", "{'[2, 0, 0, 3, 3, 0, 1, 1, 2, 0, 29, 6, 2, 0, 0, 1, 1, 1]' : 0.231795}", "{'[2, 0, 0, 3, 3, 0, 1, 1, 2, 0, 29, 6, 2, 0, 0, 1, 1, 1]' : 0.231986}", "{'[2, 0, 0, 3, 3, 0, 1, 1, 2, 0, 29, 6, 2, 0, 0, 1, 1, 1]' : 0.232216}", "{'[2, 0, 0, 3, 3, 0, 1, 1, 2, 0, 29, 6, 2, 0, 0, 1, 1, 1]' : 0.231832}", "{'[2, 0, 0, 3, 3, 0, 1, 1, 2, 0, 29, 6, 2, 0, 0, 1, 1, 1]' : 0.22697}", "{'[2, 0, 0, 3, 3, 0, 1, 1, 2, 0, 29, 6, 2, 0, 0, 1, 1, 1]' : 0.227624}", "{'[2, 0, 0, 3, 3, 0, 1, 1, 2, 0, 29, 6, 2, 0, 0, 1, 1, 1]' : 0.227832}", "{'[2, 0, 0, 3, 3, 0, 1, 1, 2, 0, 29, 6, 2, 0, 0, 1, 1, 1]' : 0.224438}", "{'[2, 0, 0, 3, 3, 0, 1, 1, 2, 0, 29, 6, 2, 0, 0, 1, 1, 1]' : 0.227342}", "{'[2, 0, 0, 3, 3, 0, 1, 1, 2, 0, 29, 6, 2, 0, 0, 1, 1, 1]' : 0.226754}", "{'[2, 0, 0, 3, 3, 0, 1, 1, 2, 0, 29, 6, 2, 0, 0, 1, 1, 1]' : 0.231877}", "{'[2, 0, 0, 3, 3, 0, 1, 1, 2, 0, 29, 6, 2, 0, 0, 1, 1, 1]' : 0.232178}", "{'[2, 0, 0, 3, 3, 0, 1, 1, 2, 0, 29, 6, 2, 0, 0, 1, 1, 1]' : 0.231747}", "{'[2, 0, 0, 3, 3, 0, 1, 1, 2, 0, 29, 6, 2, 0, 0, 1, 1, 1]' : 0.2318}"]
returning from 'run': {'[2, 0, 0, 3, 3, 0, 1, 1, 2, 0, 29, 6, 2, 0, 0, 1, 1, 1]': ([0.253141, 0.248474, 0.231172, 0.231013, 0.232349, 0.231693, 0.231516, 0.231315, 0.231987, 0.231788, 0.228357, 0.231176, 0.231835, 0.231723, 0.227702, 0.230875, 0.231795, 0.231986, 0.232216, 0.231832, 0.22697, 0.227624, 0.227832, 0.224438, 0.227342, 0.226754, 0.231877, 0.232178, 0.231747, 0.2318], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 0, 0, 3, 3, 0, 1, 1, 2, 0, 29, 6, 2, 0, 0, 1, 1, 1]': ([0.253141, 0.248474, 0.231172, 0.231013, 0.232349, 0.231693, 0.231516, 0.231315, 0.231987, 0.231788, 0.228357, 0.231176, 0.231835, 0.231723, 0.227702, 0.230875, 0.231795, 0.231986, 0.232216, 0.231832, 0.22697, 0.227624, 0.227832, 0.224438, 0.227342, 0.226754, 0.231877, 0.232178, 0.231747, 0.2318], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	5
        Additions: 		370
        Multiplications: 	122
        Divisions: 		0
        Logical: 		0
        Reads: 			767
        Writes: 		92
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest86.exe __orio_perftest86.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest86.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest86.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest86.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest86.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	63
        Max loop nest depth: 	5
        Additions: 		2283
        Multiplications: 	1040
        Divisions: 		0
        Logical: 		0
        Reads: 			4715
        Writes: 		839
        Comparisons:		63
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest87.exe __orio_perftest87.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest87.exe  
Program Test Output: 
{'[1, 6, 0, 2, 0, 6, 0, 1, 0, 18, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.267703}
{'[1, 6, 0, 2, 0, 6, 0, 1, 0, 18, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.267591}
{'[1, 6, 0, 2, 0, 6, 0, 1, 0, 18, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.233992}
{'[1, 6, 0, 2, 0, 6, 0, 1, 0, 18, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.223071}
{'[1, 6, 0, 2, 0, 6, 0, 1, 0, 18, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.228378}
{'[1, 6, 0, 2, 0, 6, 0, 1, 0, 18, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.226831}
{'[1, 6, 0, 2, 0, 6, 0, 1, 0, 18, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.223924}
{'[1, 6, 0, 2, 0, 6, 0, 1, 0, 18, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.223007}
{'[1, 6, 0, 2, 0, 6, 0, 1, 0, 18, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.223225}
{'[1, 6, 0, 2, 0, 6, 0, 1, 0, 18, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.22294}
{'[1, 6, 0, 2, 0, 6, 0, 1, 0, 18, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.224444}
{'[1, 6, 0, 2, 0, 6, 0, 1, 0, 18, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.223901}
{'[1, 6, 0, 2, 0, 6, 0, 1, 0, 18, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.222884}
{'[1, 6, 0, 2, 0, 6, 0, 1, 0, 18, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.22311}
{'[1, 6, 0, 2, 0, 6, 0, 1, 0, 18, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.223019}
{'[1, 6, 0, 2, 0, 6, 0, 1, 0, 18, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.23093}
{'[1, 6, 0, 2, 0, 6, 0, 1, 0, 18, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.230512}
{'[1, 6, 0, 2, 0, 6, 0, 1, 0, 18, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.227333}
{'[1, 6, 0, 2, 0, 6, 0, 1, 0, 18, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.22306}
{'[1, 6, 0, 2, 0, 6, 0, 1, 0, 18, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.223328}
{'[1, 6, 0, 2, 0, 6, 0, 1, 0, 18, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.223328}
{'[1, 6, 0, 2, 0, 6, 0, 1, 0, 18, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.223318}
{'[1, 6, 0, 2, 0, 6, 0, 1, 0, 18, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.223097}
{'[1, 6, 0, 2, 0, 6, 0, 1, 0, 18, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.22298}
{'[1, 6, 0, 2, 0, 6, 0, 1, 0, 18, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.228576}
{'[1, 6, 0, 2, 0, 6, 0, 1, 0, 18, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.228644}
{'[1, 6, 0, 2, 0, 6, 0, 1, 0, 18, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.224232}
{'[1, 6, 0, 2, 0, 6, 0, 1, 0, 18, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.229411}
{'[1, 6, 0, 2, 0, 6, 0, 1, 0, 18, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.229886}
{'[1, 6, 0, 2, 0, 6, 0, 1, 0, 18, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.230228}

out:
 ["{'[1, 6, 0, 2, 0, 6, 0, 1, 0, 18, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.267703}", "{'[1, 6, 0, 2, 0, 6, 0, 1, 0, 18, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.267591}", "{'[1, 6, 0, 2, 0, 6, 0, 1, 0, 18, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.233992}", "{'[1, 6, 0, 2, 0, 6, 0, 1, 0, 18, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.223071}", "{'[1, 6, 0, 2, 0, 6, 0, 1, 0, 18, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.228378}", "{'[1, 6, 0, 2, 0, 6, 0, 1, 0, 18, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.226831}", "{'[1, 6, 0, 2, 0, 6, 0, 1, 0, 18, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.223924}", "{'[1, 6, 0, 2, 0, 6, 0, 1, 0, 18, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.223007}", "{'[1, 6, 0, 2, 0, 6, 0, 1, 0, 18, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.223225}", "{'[1, 6, 0, 2, 0, 6, 0, 1, 0, 18, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.22294}", "{'[1, 6, 0, 2, 0, 6, 0, 1, 0, 18, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.224444}", "{'[1, 6, 0, 2, 0, 6, 0, 1, 0, 18, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.223901}", "{'[1, 6, 0, 2, 0, 6, 0, 1, 0, 18, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.222884}", "{'[1, 6, 0, 2, 0, 6, 0, 1, 0, 18, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.22311}", "{'[1, 6, 0, 2, 0, 6, 0, 1, 0, 18, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.223019}", "{'[1, 6, 0, 2, 0, 6, 0, 1, 0, 18, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.23093}", "{'[1, 6, 0, 2, 0, 6, 0, 1, 0, 18, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.230512}", "{'[1, 6, 0, 2, 0, 6, 0, 1, 0, 18, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.227333}", "{'[1, 6, 0, 2, 0, 6, 0, 1, 0, 18, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.22306}", "{'[1, 6, 0, 2, 0, 6, 0, 1, 0, 18, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.223328}", "{'[1, 6, 0, 2, 0, 6, 0, 1, 0, 18, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.223328}", "{'[1, 6, 0, 2, 0, 6, 0, 1, 0, 18, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.223318}", "{'[1, 6, 0, 2, 0, 6, 0, 1, 0, 18, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.223097}", "{'[1, 6, 0, 2, 0, 6, 0, 1, 0, 18, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.22298}", "{'[1, 6, 0, 2, 0, 6, 0, 1, 0, 18, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.228576}", "{'[1, 6, 0, 2, 0, 6, 0, 1, 0, 18, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.228644}", "{'[1, 6, 0, 2, 0, 6, 0, 1, 0, 18, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.224232}", "{'[1, 6, 0, 2, 0, 6, 0, 1, 0, 18, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.229411}", "{'[1, 6, 0, 2, 0, 6, 0, 1, 0, 18, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.229886}", "{'[1, 6, 0, 2, 0, 6, 0, 1, 0, 18, 7, 0, 2, 0, 0, 1, 1, 0]' : 0.230228}"]
returning from 'run': {'[1, 6, 0, 2, 0, 6, 0, 1, 0, 18, 7, 0, 2, 0, 0, 1, 1, 0]': ([0.267703, 0.267591, 0.233992, 0.223071, 0.228378, 0.226831, 0.223924, 0.223007, 0.223225, 0.22294, 0.224444, 0.223901, 0.222884, 0.22311, 0.223019, 0.23093, 0.230512, 0.227333, 0.22306, 0.223328, 0.223328, 0.223318, 0.223097, 0.22298, 0.228576, 0.228644, 0.224232, 0.229411, 0.229886, 0.230228], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 6, 0, 2, 0, 6, 0, 1, 0, 18, 7, 0, 2, 0, 0, 1, 1, 0]': ([0.267703, 0.267591, 0.233992, 0.223071, 0.228378, 0.226831, 0.223924, 0.223007, 0.223225, 0.22294, 0.224444, 0.223901, 0.222884, 0.22311, 0.223019, 0.23093, 0.230512, 0.227333, 0.22306, 0.223328, 0.223328, 0.223318, 0.223097, 0.22298, 0.228576, 0.228644, 0.224232, 0.229411, 0.229886, 0.230228], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	5
        Additions: 		4466
        Multiplications: 	2112
        Divisions: 		0
        Logical: 		0
        Reads: 			8362
        Writes: 		1340
        Comparisons:		24
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest88.exe __orio_perftest88.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest88.exe  
Program Test Output: 
{'[1, 0, 4, 2, 6, 0, 1, 1, 29, 0, 1, 27, 2, 0, 0, 1, 0, 1]' : 0.268637}
{'[1, 0, 4, 2, 6, 0, 1, 1, 29, 0, 1, 27, 2, 0, 0, 1, 0, 1]' : 0.267376}
{'[1, 0, 4, 2, 6, 0, 1, 1, 29, 0, 1, 27, 2, 0, 0, 1, 0, 1]' : 0.232801}
{'[1, 0, 4, 2, 6, 0, 1, 1, 29, 0, 1, 27, 2, 0, 0, 1, 0, 1]' : 0.232455}
{'[1, 0, 4, 2, 6, 0, 1, 1, 29, 0, 1, 27, 2, 0, 0, 1, 0, 1]' : 0.232028}
{'[1, 0, 4, 2, 6, 0, 1, 1, 29, 0, 1, 27, 2, 0, 0, 1, 0, 1]' : 0.232395}
{'[1, 0, 4, 2, 6, 0, 1, 1, 29, 0, 1, 27, 2, 0, 0, 1, 0, 1]' : 0.232036}
{'[1, 0, 4, 2, 6, 0, 1, 1, 29, 0, 1, 27, 2, 0, 0, 1, 0, 1]' : 0.232187}
{'[1, 0, 4, 2, 6, 0, 1, 1, 29, 0, 1, 27, 2, 0, 0, 1, 0, 1]' : 0.232298}
{'[1, 0, 4, 2, 6, 0, 1, 1, 29, 0, 1, 27, 2, 0, 0, 1, 0, 1]' : 0.231978}
{'[1, 0, 4, 2, 6, 0, 1, 1, 29, 0, 1, 27, 2, 0, 0, 1, 0, 1]' : 0.232199}
{'[1, 0, 4, 2, 6, 0, 1, 1, 29, 0, 1, 27, 2, 0, 0, 1, 0, 1]' : 0.232025}
{'[1, 0, 4, 2, 6, 0, 1, 1, 29, 0, 1, 27, 2, 0, 0, 1, 0, 1]' : 0.233997}
{'[1, 0, 4, 2, 6, 0, 1, 1, 29, 0, 1, 27, 2, 0, 0, 1, 0, 1]' : 0.238249}
{'[1, 0, 4, 2, 6, 0, 1, 1, 29, 0, 1, 27, 2, 0, 0, 1, 0, 1]' : 0.233403}
{'[1, 0, 4, 2, 6, 0, 1, 1, 29, 0, 1, 27, 2, 0, 0, 1, 0, 1]' : 0.231975}
{'[1, 0, 4, 2, 6, 0, 1, 1, 29, 0, 1, 27, 2, 0, 0, 1, 0, 1]' : 0.231953}
{'[1, 0, 4, 2, 6, 0, 1, 1, 29, 0, 1, 27, 2, 0, 0, 1, 0, 1]' : 0.238151}
{'[1, 0, 4, 2, 6, 0, 1, 1, 29, 0, 1, 27, 2, 0, 0, 1, 0, 1]' : 0.238271}
{'[1, 0, 4, 2, 6, 0, 1, 1, 29, 0, 1, 27, 2, 0, 0, 1, 0, 1]' : 0.238405}
{'[1, 0, 4, 2, 6, 0, 1, 1, 29, 0, 1, 27, 2, 0, 0, 1, 0, 1]' : 0.238274}
{'[1, 0, 4, 2, 6, 0, 1, 1, 29, 0, 1, 27, 2, 0, 0, 1, 0, 1]' : 0.238293}
{'[1, 0, 4, 2, 6, 0, 1, 1, 29, 0, 1, 27, 2, 0, 0, 1, 0, 1]' : 0.238433}
{'[1, 0, 4, 2, 6, 0, 1, 1, 29, 0, 1, 27, 2, 0, 0, 1, 0, 1]' : 0.23825}
{'[1, 0, 4, 2, 6, 0, 1, 1, 29, 0, 1, 27, 2, 0, 0, 1, 0, 1]' : 0.238257}
{'[1, 0, 4, 2, 6, 0, 1, 1, 29, 0, 1, 27, 2, 0, 0, 1, 0, 1]' : 0.238327}
{'[1, 0, 4, 2, 6, 0, 1, 1, 29, 0, 1, 27, 2, 0, 0, 1, 0, 1]' : 0.237561}
{'[1, 0, 4, 2, 6, 0, 1, 1, 29, 0, 1, 27, 2, 0, 0, 1, 0, 1]' : 0.235153}
{'[1, 0, 4, 2, 6, 0, 1, 1, 29, 0, 1, 27, 2, 0, 0, 1, 0, 1]' : 0.238252}
{'[1, 0, 4, 2, 6, 0, 1, 1, 29, 0, 1, 27, 2, 0, 0, 1, 0, 1]' : 0.238291}

out:
 ["{'[1, 0, 4, 2, 6, 0, 1, 1, 29, 0, 1, 27, 2, 0, 0, 1, 0, 1]' : 0.268637}", "{'[1, 0, 4, 2, 6, 0, 1, 1, 29, 0, 1, 27, 2, 0, 0, 1, 0, 1]' : 0.267376}", "{'[1, 0, 4, 2, 6, 0, 1, 1, 29, 0, 1, 27, 2, 0, 0, 1, 0, 1]' : 0.232801}", "{'[1, 0, 4, 2, 6, 0, 1, 1, 29, 0, 1, 27, 2, 0, 0, 1, 0, 1]' : 0.232455}", "{'[1, 0, 4, 2, 6, 0, 1, 1, 29, 0, 1, 27, 2, 0, 0, 1, 0, 1]' : 0.232028}", "{'[1, 0, 4, 2, 6, 0, 1, 1, 29, 0, 1, 27, 2, 0, 0, 1, 0, 1]' : 0.232395}", "{'[1, 0, 4, 2, 6, 0, 1, 1, 29, 0, 1, 27, 2, 0, 0, 1, 0, 1]' : 0.232036}", "{'[1, 0, 4, 2, 6, 0, 1, 1, 29, 0, 1, 27, 2, 0, 0, 1, 0, 1]' : 0.232187}", "{'[1, 0, 4, 2, 6, 0, 1, 1, 29, 0, 1, 27, 2, 0, 0, 1, 0, 1]' : 0.232298}", "{'[1, 0, 4, 2, 6, 0, 1, 1, 29, 0, 1, 27, 2, 0, 0, 1, 0, 1]' : 0.231978}", "{'[1, 0, 4, 2, 6, 0, 1, 1, 29, 0, 1, 27, 2, 0, 0, 1, 0, 1]' : 0.232199}", "{'[1, 0, 4, 2, 6, 0, 1, 1, 29, 0, 1, 27, 2, 0, 0, 1, 0, 1]' : 0.232025}", "{'[1, 0, 4, 2, 6, 0, 1, 1, 29, 0, 1, 27, 2, 0, 0, 1, 0, 1]' : 0.233997}", "{'[1, 0, 4, 2, 6, 0, 1, 1, 29, 0, 1, 27, 2, 0, 0, 1, 0, 1]' : 0.238249}", "{'[1, 0, 4, 2, 6, 0, 1, 1, 29, 0, 1, 27, 2, 0, 0, 1, 0, 1]' : 0.233403}", "{'[1, 0, 4, 2, 6, 0, 1, 1, 29, 0, 1, 27, 2, 0, 0, 1, 0, 1]' : 0.231975}", "{'[1, 0, 4, 2, 6, 0, 1, 1, 29, 0, 1, 27, 2, 0, 0, 1, 0, 1]' : 0.231953}", "{'[1, 0, 4, 2, 6, 0, 1, 1, 29, 0, 1, 27, 2, 0, 0, 1, 0, 1]' : 0.238151}", "{'[1, 0, 4, 2, 6, 0, 1, 1, 29, 0, 1, 27, 2, 0, 0, 1, 0, 1]' : 0.238271}", "{'[1, 0, 4, 2, 6, 0, 1, 1, 29, 0, 1, 27, 2, 0, 0, 1, 0, 1]' : 0.238405}", "{'[1, 0, 4, 2, 6, 0, 1, 1, 29, 0, 1, 27, 2, 0, 0, 1, 0, 1]' : 0.238274}", "{'[1, 0, 4, 2, 6, 0, 1, 1, 29, 0, 1, 27, 2, 0, 0, 1, 0, 1]' : 0.238293}", "{'[1, 0, 4, 2, 6, 0, 1, 1, 29, 0, 1, 27, 2, 0, 0, 1, 0, 1]' : 0.238433}", "{'[1, 0, 4, 2, 6, 0, 1, 1, 29, 0, 1, 27, 2, 0, 0, 1, 0, 1]' : 0.23825}", "{'[1, 0, 4, 2, 6, 0, 1, 1, 29, 0, 1, 27, 2, 0, 0, 1, 0, 1]' : 0.238257}", "{'[1, 0, 4, 2, 6, 0, 1, 1, 29, 0, 1, 27, 2, 0, 0, 1, 0, 1]' : 0.238327}", "{'[1, 0, 4, 2, 6, 0, 1, 1, 29, 0, 1, 27, 2, 0, 0, 1, 0, 1]' : 0.237561}", "{'[1, 0, 4, 2, 6, 0, 1, 1, 29, 0, 1, 27, 2, 0, 0, 1, 0, 1]' : 0.235153}", "{'[1, 0, 4, 2, 6, 0, 1, 1, 29, 0, 1, 27, 2, 0, 0, 1, 0, 1]' : 0.238252}", "{'[1, 0, 4, 2, 6, 0, 1, 1, 29, 0, 1, 27, 2, 0, 0, 1, 0, 1]' : 0.238291}"]
returning from 'run': {'[1, 0, 4, 2, 6, 0, 1, 1, 29, 0, 1, 27, 2, 0, 0, 1, 0, 1]': ([0.268637, 0.267376, 0.232801, 0.232455, 0.232028, 0.232395, 0.232036, 0.232187, 0.232298, 0.231978, 0.232199, 0.232025, 0.233997, 0.238249, 0.233403, 0.231975, 0.231953, 0.238151, 0.238271, 0.238405, 0.238274, 0.238293, 0.238433, 0.23825, 0.238257, 0.238327, 0.237561, 0.235153, 0.238252, 0.238291], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 4, 2, 6, 0, 1, 1, 29, 0, 1, 27, 2, 0, 0, 1, 0, 1]': ([0.268637, 0.267376, 0.232801, 0.232455, 0.232028, 0.232395, 0.232036, 0.232187, 0.232298, 0.231978, 0.232199, 0.232025, 0.233997, 0.238249, 0.233403, 0.231975, 0.231953, 0.238151, 0.238271, 0.238405, 0.238274, 0.238293, 0.238433, 0.23825, 0.238257, 0.238327, 0.237561, 0.235153, 0.238252, 0.238291], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	158
        Max loop nest depth: 	5
        Additions: 		3982
        Multiplications: 	754
        Divisions: 		0
        Logical: 		0
        Reads: 			6246
        Writes: 		831
        Comparisons:		158
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest89.exe __orio_perftest89.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest89.exe  
Program Test Output: 
{'[0, 2, 1, 6, 3, 0, 1, 1, 20, 27, 0, 10, 0, 0, 0, 0, 0, 0]' : 0.628198}
{'[0, 2, 1, 6, 3, 0, 1, 1, 20, 27, 0, 10, 0, 0, 0, 0, 0, 0]' : 0.575816}
{'[0, 2, 1, 6, 3, 0, 1, 1, 20, 27, 0, 10, 0, 0, 0, 0, 0, 0]' : 0.57449}
{'[0, 2, 1, 6, 3, 0, 1, 1, 20, 27, 0, 10, 0, 0, 0, 0, 0, 0]' : 0.573993}
{'[0, 2, 1, 6, 3, 0, 1, 1, 20, 27, 0, 10, 0, 0, 0, 0, 0, 0]' : 0.579153}
{'[0, 2, 1, 6, 3, 0, 1, 1, 20, 27, 0, 10, 0, 0, 0, 0, 0, 0]' : 0.584017}
{'[0, 2, 1, 6, 3, 0, 1, 1, 20, 27, 0, 10, 0, 0, 0, 0, 0, 0]' : 0.587557}
{'[0, 2, 1, 6, 3, 0, 1, 1, 20, 27, 0, 10, 0, 0, 0, 0, 0, 0]' : 0.571169}
{'[0, 2, 1, 6, 3, 0, 1, 1, 20, 27, 0, 10, 0, 0, 0, 0, 0, 0]' : 0.580678}
{'[0, 2, 1, 6, 3, 0, 1, 1, 20, 27, 0, 10, 0, 0, 0, 0, 0, 0]' : 0.570738}
{'[0, 2, 1, 6, 3, 0, 1, 1, 20, 27, 0, 10, 0, 0, 0, 0, 0, 0]' : 0.575479}
{'[0, 2, 1, 6, 3, 0, 1, 1, 20, 27, 0, 10, 0, 0, 0, 0, 0, 0]' : 0.574551}
{'[0, 2, 1, 6, 3, 0, 1, 1, 20, 27, 0, 10, 0, 0, 0, 0, 0, 0]' : 0.587023}
{'[0, 2, 1, 6, 3, 0, 1, 1, 20, 27, 0, 10, 0, 0, 0, 0, 0, 0]' : 0.582641}
{'[0, 2, 1, 6, 3, 0, 1, 1, 20, 27, 0, 10, 0, 0, 0, 0, 0, 0]' : 0.581335}
{'[0, 2, 1, 6, 3, 0, 1, 1, 20, 27, 0, 10, 0, 0, 0, 0, 0, 0]' : 0.58144}
{'[0, 2, 1, 6, 3, 0, 1, 1, 20, 27, 0, 10, 0, 0, 0, 0, 0, 0]' : 0.581613}
{'[0, 2, 1, 6, 3, 0, 1, 1, 20, 27, 0, 10, 0, 0, 0, 0, 0, 0]' : 0.571478}
{'[0, 2, 1, 6, 3, 0, 1, 1, 20, 27, 0, 10, 0, 0, 0, 0, 0, 0]' : 0.573083}
{'[0, 2, 1, 6, 3, 0, 1, 1, 20, 27, 0, 10, 0, 0, 0, 0, 0, 0]' : 0.584254}
{'[0, 2, 1, 6, 3, 0, 1, 1, 20, 27, 0, 10, 0, 0, 0, 0, 0, 0]' : 0.578617}
{'[0, 2, 1, 6, 3, 0, 1, 1, 20, 27, 0, 10, 0, 0, 0, 0, 0, 0]' : 0.587173}
{'[0, 2, 1, 6, 3, 0, 1, 1, 20, 27, 0, 10, 0, 0, 0, 0, 0, 0]' : 0.579375}
{'[0, 2, 1, 6, 3, 0, 1, 1, 20, 27, 0, 10, 0, 0, 0, 0, 0, 0]' : 0.571194}
{'[0, 2, 1, 6, 3, 0, 1, 1, 20, 27, 0, 10, 0, 0, 0, 0, 0, 0]' : 0.579991}
{'[0, 2, 1, 6, 3, 0, 1, 1, 20, 27, 0, 10, 0, 0, 0, 0, 0, 0]' : 0.585115}
{'[0, 2, 1, 6, 3, 0, 1, 1, 20, 27, 0, 10, 0, 0, 0, 0, 0, 0]' : 0.572468}
{'[0, 2, 1, 6, 3, 0, 1, 1, 20, 27, 0, 10, 0, 0, 0, 0, 0, 0]' : 0.582082}
{'[0, 2, 1, 6, 3, 0, 1, 1, 20, 27, 0, 10, 0, 0, 0, 0, 0, 0]' : 0.570574}
{'[0, 2, 1, 6, 3, 0, 1, 1, 20, 27, 0, 10, 0, 0, 0, 0, 0, 0]' : 0.576425}

out:
 ["{'[0, 2, 1, 6, 3, 0, 1, 1, 20, 27, 0, 10, 0, 0, 0, 0, 0, 0]' : 0.628198}", "{'[0, 2, 1, 6, 3, 0, 1, 1, 20, 27, 0, 10, 0, 0, 0, 0, 0, 0]' : 0.575816}", "{'[0, 2, 1, 6, 3, 0, 1, 1, 20, 27, 0, 10, 0, 0, 0, 0, 0, 0]' : 0.57449}", "{'[0, 2, 1, 6, 3, 0, 1, 1, 20, 27, 0, 10, 0, 0, 0, 0, 0, 0]' : 0.573993}", "{'[0, 2, 1, 6, 3, 0, 1, 1, 20, 27, 0, 10, 0, 0, 0, 0, 0, 0]' : 0.579153}", "{'[0, 2, 1, 6, 3, 0, 1, 1, 20, 27, 0, 10, 0, 0, 0, 0, 0, 0]' : 0.584017}", "{'[0, 2, 1, 6, 3, 0, 1, 1, 20, 27, 0, 10, 0, 0, 0, 0, 0, 0]' : 0.587557}", "{'[0, 2, 1, 6, 3, 0, 1, 1, 20, 27, 0, 10, 0, 0, 0, 0, 0, 0]' : 0.571169}", "{'[0, 2, 1, 6, 3, 0, 1, 1, 20, 27, 0, 10, 0, 0, 0, 0, 0, 0]' : 0.580678}", "{'[0, 2, 1, 6, 3, 0, 1, 1, 20, 27, 0, 10, 0, 0, 0, 0, 0, 0]' : 0.570738}", "{'[0, 2, 1, 6, 3, 0, 1, 1, 20, 27, 0, 10, 0, 0, 0, 0, 0, 0]' : 0.575479}", "{'[0, 2, 1, 6, 3, 0, 1, 1, 20, 27, 0, 10, 0, 0, 0, 0, 0, 0]' : 0.574551}", "{'[0, 2, 1, 6, 3, 0, 1, 1, 20, 27, 0, 10, 0, 0, 0, 0, 0, 0]' : 0.587023}", "{'[0, 2, 1, 6, 3, 0, 1, 1, 20, 27, 0, 10, 0, 0, 0, 0, 0, 0]' : 0.582641}", "{'[0, 2, 1, 6, 3, 0, 1, 1, 20, 27, 0, 10, 0, 0, 0, 0, 0, 0]' : 0.581335}", "{'[0, 2, 1, 6, 3, 0, 1, 1, 20, 27, 0, 10, 0, 0, 0, 0, 0, 0]' : 0.58144}", "{'[0, 2, 1, 6, 3, 0, 1, 1, 20, 27, 0, 10, 0, 0, 0, 0, 0, 0]' : 0.581613}", "{'[0, 2, 1, 6, 3, 0, 1, 1, 20, 27, 0, 10, 0, 0, 0, 0, 0, 0]' : 0.571478}", "{'[0, 2, 1, 6, 3, 0, 1, 1, 20, 27, 0, 10, 0, 0, 0, 0, 0, 0]' : 0.573083}", "{'[0, 2, 1, 6, 3, 0, 1, 1, 20, 27, 0, 10, 0, 0, 0, 0, 0, 0]' : 0.584254}", "{'[0, 2, 1, 6, 3, 0, 1, 1, 20, 27, 0, 10, 0, 0, 0, 0, 0, 0]' : 0.578617}", "{'[0, 2, 1, 6, 3, 0, 1, 1, 20, 27, 0, 10, 0, 0, 0, 0, 0, 0]' : 0.587173}", "{'[0, 2, 1, 6, 3, 0, 1, 1, 20, 27, 0, 10, 0, 0, 0, 0, 0, 0]' : 0.579375}", "{'[0, 2, 1, 6, 3, 0, 1, 1, 20, 27, 0, 10, 0, 0, 0, 0, 0, 0]' : 0.571194}", "{'[0, 2, 1, 6, 3, 0, 1, 1, 20, 27, 0, 10, 0, 0, 0, 0, 0, 0]' : 0.579991}", "{'[0, 2, 1, 6, 3, 0, 1, 1, 20, 27, 0, 10, 0, 0, 0, 0, 0, 0]' : 0.585115}", "{'[0, 2, 1, 6, 3, 0, 1, 1, 20, 27, 0, 10, 0, 0, 0, 0, 0, 0]' : 0.572468}", "{'[0, 2, 1, 6, 3, 0, 1, 1, 20, 27, 0, 10, 0, 0, 0, 0, 0, 0]' : 0.582082}", "{'[0, 2, 1, 6, 3, 0, 1, 1, 20, 27, 0, 10, 0, 0, 0, 0, 0, 0]' : 0.570574}", "{'[0, 2, 1, 6, 3, 0, 1, 1, 20, 27, 0, 10, 0, 0, 0, 0, 0, 0]' : 0.576425}"]
returning from 'run': {'[0, 2, 1, 6, 3, 0, 1, 1, 20, 27, 0, 10, 0, 0, 0, 0, 0, 0]': ([0.628198, 0.575816, 0.57449, 0.573993, 0.579153, 0.584017, 0.587557, 0.571169, 0.580678, 0.570738, 0.575479, 0.574551, 0.587023, 0.582641, 0.581335, 0.58144, 0.581613, 0.571478, 0.573083, 0.584254, 0.578617, 0.587173, 0.579375, 0.571194, 0.579991, 0.585115, 0.572468, 0.582082, 0.570574, 0.576425], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 1, 6, 3, 0, 1, 1, 20, 27, 0, 10, 0, 0, 0, 0, 0, 0]': ([0.628198, 0.575816, 0.57449, 0.573993, 0.579153, 0.584017, 0.587557, 0.571169, 0.580678, 0.570738, 0.575479, 0.574551, 0.587023, 0.582641, 0.581335, 0.58144, 0.581613, 0.571478, 0.573083, 0.584254, 0.578617, 0.587173, 0.579375, 0.571194, 0.579991, 0.585115, 0.572468, 0.582082, 0.570574, 0.576425], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	48
        Max loop nest depth: 	6
        Additions: 		2741
        Multiplications: 	640
        Divisions: 		0
        Logical: 		0
        Reads: 			4230
        Writes: 		479
        Comparisons:		48
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest90.exe __orio_perftest90.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest90.exe  
Program Test Output: 
{'[3, 6, 1, 2, 4, 5, 0, 1, 9, 6, 0, 29, 0, 1, 0, 0, 0, 1]' : 0.34536}
{'[3, 6, 1, 2, 4, 5, 0, 1, 9, 6, 0, 29, 0, 1, 0, 0, 0, 1]' : 0.325934}
{'[3, 6, 1, 2, 4, 5, 0, 1, 9, 6, 0, 29, 0, 1, 0, 0, 0, 1]' : 0.310036}
{'[3, 6, 1, 2, 4, 5, 0, 1, 9, 6, 0, 29, 0, 1, 0, 0, 0, 1]' : 0.310289}
{'[3, 6, 1, 2, 4, 5, 0, 1, 9, 6, 0, 29, 0, 1, 0, 0, 0, 1]' : 0.308242}
{'[3, 6, 1, 2, 4, 5, 0, 1, 9, 6, 0, 29, 0, 1, 0, 0, 0, 1]' : 0.310374}
{'[3, 6, 1, 2, 4, 5, 0, 1, 9, 6, 0, 29, 0, 1, 0, 0, 0, 1]' : 0.310318}
{'[3, 6, 1, 2, 4, 5, 0, 1, 9, 6, 0, 29, 0, 1, 0, 0, 0, 1]' : 0.310093}
{'[3, 6, 1, 2, 4, 5, 0, 1, 9, 6, 0, 29, 0, 1, 0, 0, 0, 1]' : 0.31029}
{'[3, 6, 1, 2, 4, 5, 0, 1, 9, 6, 0, 29, 0, 1, 0, 0, 0, 1]' : 0.310327}
{'[3, 6, 1, 2, 4, 5, 0, 1, 9, 6, 0, 29, 0, 1, 0, 0, 0, 1]' : 0.310059}
{'[3, 6, 1, 2, 4, 5, 0, 1, 9, 6, 0, 29, 0, 1, 0, 0, 0, 1]' : 0.310208}
{'[3, 6, 1, 2, 4, 5, 0, 1, 9, 6, 0, 29, 0, 1, 0, 0, 0, 1]' : 0.310505}
{'[3, 6, 1, 2, 4, 5, 0, 1, 9, 6, 0, 29, 0, 1, 0, 0, 0, 1]' : 0.310121}
{'[3, 6, 1, 2, 4, 5, 0, 1, 9, 6, 0, 29, 0, 1, 0, 0, 0, 1]' : 0.310242}
{'[3, 6, 1, 2, 4, 5, 0, 1, 9, 6, 0, 29, 0, 1, 0, 0, 0, 1]' : 0.310147}
{'[3, 6, 1, 2, 4, 5, 0, 1, 9, 6, 0, 29, 0, 1, 0, 0, 0, 1]' : 0.310252}
{'[3, 6, 1, 2, 4, 5, 0, 1, 9, 6, 0, 29, 0, 1, 0, 0, 0, 1]' : 0.310236}
{'[3, 6, 1, 2, 4, 5, 0, 1, 9, 6, 0, 29, 0, 1, 0, 0, 0, 1]' : 0.310394}
{'[3, 6, 1, 2, 4, 5, 0, 1, 9, 6, 0, 29, 0, 1, 0, 0, 0, 1]' : 0.310236}
{'[3, 6, 1, 2, 4, 5, 0, 1, 9, 6, 0, 29, 0, 1, 0, 0, 0, 1]' : 0.310346}
{'[3, 6, 1, 2, 4, 5, 0, 1, 9, 6, 0, 29, 0, 1, 0, 0, 0, 1]' : 0.310098}
{'[3, 6, 1, 2, 4, 5, 0, 1, 9, 6, 0, 29, 0, 1, 0, 0, 0, 1]' : 0.310171}
{'[3, 6, 1, 2, 4, 5, 0, 1, 9, 6, 0, 29, 0, 1, 0, 0, 0, 1]' : 0.310177}
{'[3, 6, 1, 2, 4, 5, 0, 1, 9, 6, 0, 29, 0, 1, 0, 0, 0, 1]' : 0.310257}
{'[3, 6, 1, 2, 4, 5, 0, 1, 9, 6, 0, 29, 0, 1, 0, 0, 0, 1]' : 0.310551}
{'[3, 6, 1, 2, 4, 5, 0, 1, 9, 6, 0, 29, 0, 1, 0, 0, 0, 1]' : 0.310028}
{'[3, 6, 1, 2, 4, 5, 0, 1, 9, 6, 0, 29, 0, 1, 0, 0, 0, 1]' : 0.31025}
{'[3, 6, 1, 2, 4, 5, 0, 1, 9, 6, 0, 29, 0, 1, 0, 0, 0, 1]' : 0.305882}
{'[3, 6, 1, 2, 4, 5, 0, 1, 9, 6, 0, 29, 0, 1, 0, 0, 0, 1]' : 0.310124}

out:
 ["{'[3, 6, 1, 2, 4, 5, 0, 1, 9, 6, 0, 29, 0, 1, 0, 0, 0, 1]' : 0.34536}", "{'[3, 6, 1, 2, 4, 5, 0, 1, 9, 6, 0, 29, 0, 1, 0, 0, 0, 1]' : 0.325934}", "{'[3, 6, 1, 2, 4, 5, 0, 1, 9, 6, 0, 29, 0, 1, 0, 0, 0, 1]' : 0.310036}", "{'[3, 6, 1, 2, 4, 5, 0, 1, 9, 6, 0, 29, 0, 1, 0, 0, 0, 1]' : 0.310289}", "{'[3, 6, 1, 2, 4, 5, 0, 1, 9, 6, 0, 29, 0, 1, 0, 0, 0, 1]' : 0.308242}", "{'[3, 6, 1, 2, 4, 5, 0, 1, 9, 6, 0, 29, 0, 1, 0, 0, 0, 1]' : 0.310374}", "{'[3, 6, 1, 2, 4, 5, 0, 1, 9, 6, 0, 29, 0, 1, 0, 0, 0, 1]' : 0.310318}", "{'[3, 6, 1, 2, 4, 5, 0, 1, 9, 6, 0, 29, 0, 1, 0, 0, 0, 1]' : 0.310093}", "{'[3, 6, 1, 2, 4, 5, 0, 1, 9, 6, 0, 29, 0, 1, 0, 0, 0, 1]' : 0.31029}", "{'[3, 6, 1, 2, 4, 5, 0, 1, 9, 6, 0, 29, 0, 1, 0, 0, 0, 1]' : 0.310327}", "{'[3, 6, 1, 2, 4, 5, 0, 1, 9, 6, 0, 29, 0, 1, 0, 0, 0, 1]' : 0.310059}", "{'[3, 6, 1, 2, 4, 5, 0, 1, 9, 6, 0, 29, 0, 1, 0, 0, 0, 1]' : 0.310208}", "{'[3, 6, 1, 2, 4, 5, 0, 1, 9, 6, 0, 29, 0, 1, 0, 0, 0, 1]' : 0.310505}", "{'[3, 6, 1, 2, 4, 5, 0, 1, 9, 6, 0, 29, 0, 1, 0, 0, 0, 1]' : 0.310121}", "{'[3, 6, 1, 2, 4, 5, 0, 1, 9, 6, 0, 29, 0, 1, 0, 0, 0, 1]' : 0.310242}", "{'[3, 6, 1, 2, 4, 5, 0, 1, 9, 6, 0, 29, 0, 1, 0, 0, 0, 1]' : 0.310147}", "{'[3, 6, 1, 2, 4, 5, 0, 1, 9, 6, 0, 29, 0, 1, 0, 0, 0, 1]' : 0.310252}", "{'[3, 6, 1, 2, 4, 5, 0, 1, 9, 6, 0, 29, 0, 1, 0, 0, 0, 1]' : 0.310236}", "{'[3, 6, 1, 2, 4, 5, 0, 1, 9, 6, 0, 29, 0, 1, 0, 0, 0, 1]' : 0.310394}", "{'[3, 6, 1, 2, 4, 5, 0, 1, 9, 6, 0, 29, 0, 1, 0, 0, 0, 1]' : 0.310236}", "{'[3, 6, 1, 2, 4, 5, 0, 1, 9, 6, 0, 29, 0, 1, 0, 0, 0, 1]' : 0.310346}", "{'[3, 6, 1, 2, 4, 5, 0, 1, 9, 6, 0, 29, 0, 1, 0, 0, 0, 1]' : 0.310098}", "{'[3, 6, 1, 2, 4, 5, 0, 1, 9, 6, 0, 29, 0, 1, 0, 0, 0, 1]' : 0.310171}", "{'[3, 6, 1, 2, 4, 5, 0, 1, 9, 6, 0, 29, 0, 1, 0, 0, 0, 1]' : 0.310177}", "{'[3, 6, 1, 2, 4, 5, 0, 1, 9, 6, 0, 29, 0, 1, 0, 0, 0, 1]' : 0.310257}", "{'[3, 6, 1, 2, 4, 5, 0, 1, 9, 6, 0, 29, 0, 1, 0, 0, 0, 1]' : 0.310551}", "{'[3, 6, 1, 2, 4, 5, 0, 1, 9, 6, 0, 29, 0, 1, 0, 0, 0, 1]' : 0.310028}", "{'[3, 6, 1, 2, 4, 5, 0, 1, 9, 6, 0, 29, 0, 1, 0, 0, 0, 1]' : 0.31025}", "{'[3, 6, 1, 2, 4, 5, 0, 1, 9, 6, 0, 29, 0, 1, 0, 0, 0, 1]' : 0.305882}", "{'[3, 6, 1, 2, 4, 5, 0, 1, 9, 6, 0, 29, 0, 1, 0, 0, 0, 1]' : 0.310124}"]
returning from 'run': {'[3, 6, 1, 2, 4, 5, 0, 1, 9, 6, 0, 29, 0, 1, 0, 0, 0, 1]': ([0.34536, 0.325934, 0.310036, 0.310289, 0.308242, 0.310374, 0.310318, 0.310093, 0.31029, 0.310327, 0.310059, 0.310208, 0.310505, 0.310121, 0.310242, 0.310147, 0.310252, 0.310236, 0.310394, 0.310236, 0.310346, 0.310098, 0.310171, 0.310177, 0.310257, 0.310551, 0.310028, 0.31025, 0.305882, 0.310124], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 6, 1, 2, 4, 5, 0, 1, 9, 6, 0, 29, 0, 1, 0, 0, 0, 1]': ([0.34536, 0.325934, 0.310036, 0.310289, 0.308242, 0.310374, 0.310318, 0.310093, 0.31029, 0.310327, 0.310059, 0.310208, 0.310505, 0.310121, 0.310242, 0.310147, 0.310252, 0.310236, 0.310394, 0.310236, 0.310346, 0.310098, 0.310171, 0.310177, 0.310257, 0.310551, 0.310028, 0.31025, 0.305882, 0.310124], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	30
        Max loop nest depth: 	5
        Additions: 		1152
        Multiplications: 	368
        Divisions: 		0
        Logical: 		0
        Reads: 			2160
        Writes: 		279
        Comparisons:		30
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest91.exe __orio_perftest91.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest91.exe  
Program Test Output: 
{'[4, 0, 6, 6, 1, 0, 0, 1, 18, 2, 11, 0, 0, 2, 0, 0, 1, 0]' : 0.147525}
{'[4, 0, 6, 6, 1, 0, 0, 1, 18, 2, 11, 0, 0, 2, 0, 0, 1, 0]' : 0.147411}
{'[4, 0, 6, 6, 1, 0, 0, 1, 18, 2, 11, 0, 0, 2, 0, 0, 1, 0]' : 0.14526}
{'[4, 0, 6, 6, 1, 0, 0, 1, 18, 2, 11, 0, 0, 2, 0, 0, 1, 0]' : 0.143673}
{'[4, 0, 6, 6, 1, 0, 0, 1, 18, 2, 11, 0, 0, 2, 0, 0, 1, 0]' : 0.143609}
{'[4, 0, 6, 6, 1, 0, 0, 1, 18, 2, 11, 0, 0, 2, 0, 0, 1, 0]' : 0.146664}
{'[4, 0, 6, 6, 1, 0, 0, 1, 18, 2, 11, 0, 0, 2, 0, 0, 1, 0]' : 0.147352}
{'[4, 0, 6, 6, 1, 0, 0, 1, 18, 2, 11, 0, 0, 2, 0, 0, 1, 0]' : 0.147416}
{'[4, 0, 6, 6, 1, 0, 0, 1, 18, 2, 11, 0, 0, 2, 0, 0, 1, 0]' : 0.147396}
{'[4, 0, 6, 6, 1, 0, 0, 1, 18, 2, 11, 0, 0, 2, 0, 0, 1, 0]' : 0.147221}
{'[4, 0, 6, 6, 1, 0, 0, 1, 18, 2, 11, 0, 0, 2, 0, 0, 1, 0]' : 0.143824}
{'[4, 0, 6, 6, 1, 0, 0, 1, 18, 2, 11, 0, 0, 2, 0, 0, 1, 0]' : 0.14364}
{'[4, 0, 6, 6, 1, 0, 0, 1, 18, 2, 11, 0, 0, 2, 0, 0, 1, 0]' : 0.145871}
{'[4, 0, 6, 6, 1, 0, 0, 1, 18, 2, 11, 0, 0, 2, 0, 0, 1, 0]' : 0.147364}
{'[4, 0, 6, 6, 1, 0, 0, 1, 18, 2, 11, 0, 0, 2, 0, 0, 1, 0]' : 0.147035}
{'[4, 0, 6, 6, 1, 0, 0, 1, 18, 2, 11, 0, 0, 2, 0, 0, 1, 0]' : 0.143827}
{'[4, 0, 6, 6, 1, 0, 0, 1, 18, 2, 11, 0, 0, 2, 0, 0, 1, 0]' : 0.147456}
{'[4, 0, 6, 6, 1, 0, 0, 1, 18, 2, 11, 0, 0, 2, 0, 0, 1, 0]' : 0.145803}
{'[4, 0, 6, 6, 1, 0, 0, 1, 18, 2, 11, 0, 0, 2, 0, 0, 1, 0]' : 0.143742}
{'[4, 0, 6, 6, 1, 0, 0, 1, 18, 2, 11, 0, 0, 2, 0, 0, 1, 0]' : 0.144849}
{'[4, 0, 6, 6, 1, 0, 0, 1, 18, 2, 11, 0, 0, 2, 0, 0, 1, 0]' : 0.147514}
{'[4, 0, 6, 6, 1, 0, 0, 1, 18, 2, 11, 0, 0, 2, 0, 0, 1, 0]' : 0.147419}
{'[4, 0, 6, 6, 1, 0, 0, 1, 18, 2, 11, 0, 0, 2, 0, 0, 1, 0]' : 0.147391}
{'[4, 0, 6, 6, 1, 0, 0, 1, 18, 2, 11, 0, 0, 2, 0, 0, 1, 0]' : 0.14745}
{'[4, 0, 6, 6, 1, 0, 0, 1, 18, 2, 11, 0, 0, 2, 0, 0, 1, 0]' : 0.147489}
{'[4, 0, 6, 6, 1, 0, 0, 1, 18, 2, 11, 0, 0, 2, 0, 0, 1, 0]' : 0.144513}
{'[4, 0, 6, 6, 1, 0, 0, 1, 18, 2, 11, 0, 0, 2, 0, 0, 1, 0]' : 0.14351}
{'[4, 0, 6, 6, 1, 0, 0, 1, 18, 2, 11, 0, 0, 2, 0, 0, 1, 0]' : 0.143483}
{'[4, 0, 6, 6, 1, 0, 0, 1, 18, 2, 11, 0, 0, 2, 0, 0, 1, 0]' : 0.143419}
{'[4, 0, 6, 6, 1, 0, 0, 1, 18, 2, 11, 0, 0, 2, 0, 0, 1, 0]' : 0.146603}

out:
 ["{'[4, 0, 6, 6, 1, 0, 0, 1, 18, 2, 11, 0, 0, 2, 0, 0, 1, 0]' : 0.147525}", "{'[4, 0, 6, 6, 1, 0, 0, 1, 18, 2, 11, 0, 0, 2, 0, 0, 1, 0]' : 0.147411}", "{'[4, 0, 6, 6, 1, 0, 0, 1, 18, 2, 11, 0, 0, 2, 0, 0, 1, 0]' : 0.14526}", "{'[4, 0, 6, 6, 1, 0, 0, 1, 18, 2, 11, 0, 0, 2, 0, 0, 1, 0]' : 0.143673}", "{'[4, 0, 6, 6, 1, 0, 0, 1, 18, 2, 11, 0, 0, 2, 0, 0, 1, 0]' : 0.143609}", "{'[4, 0, 6, 6, 1, 0, 0, 1, 18, 2, 11, 0, 0, 2, 0, 0, 1, 0]' : 0.146664}", "{'[4, 0, 6, 6, 1, 0, 0, 1, 18, 2, 11, 0, 0, 2, 0, 0, 1, 0]' : 0.147352}", "{'[4, 0, 6, 6, 1, 0, 0, 1, 18, 2, 11, 0, 0, 2, 0, 0, 1, 0]' : 0.147416}", "{'[4, 0, 6, 6, 1, 0, 0, 1, 18, 2, 11, 0, 0, 2, 0, 0, 1, 0]' : 0.147396}", "{'[4, 0, 6, 6, 1, 0, 0, 1, 18, 2, 11, 0, 0, 2, 0, 0, 1, 0]' : 0.147221}", "{'[4, 0, 6, 6, 1, 0, 0, 1, 18, 2, 11, 0, 0, 2, 0, 0, 1, 0]' : 0.143824}", "{'[4, 0, 6, 6, 1, 0, 0, 1, 18, 2, 11, 0, 0, 2, 0, 0, 1, 0]' : 0.14364}", "{'[4, 0, 6, 6, 1, 0, 0, 1, 18, 2, 11, 0, 0, 2, 0, 0, 1, 0]' : 0.145871}", "{'[4, 0, 6, 6, 1, 0, 0, 1, 18, 2, 11, 0, 0, 2, 0, 0, 1, 0]' : 0.147364}", "{'[4, 0, 6, 6, 1, 0, 0, 1, 18, 2, 11, 0, 0, 2, 0, 0, 1, 0]' : 0.147035}", "{'[4, 0, 6, 6, 1, 0, 0, 1, 18, 2, 11, 0, 0, 2, 0, 0, 1, 0]' : 0.143827}", "{'[4, 0, 6, 6, 1, 0, 0, 1, 18, 2, 11, 0, 0, 2, 0, 0, 1, 0]' : 0.147456}", "{'[4, 0, 6, 6, 1, 0, 0, 1, 18, 2, 11, 0, 0, 2, 0, 0, 1, 0]' : 0.145803}", "{'[4, 0, 6, 6, 1, 0, 0, 1, 18, 2, 11, 0, 0, 2, 0, 0, 1, 0]' : 0.143742}", "{'[4, 0, 6, 6, 1, 0, 0, 1, 18, 2, 11, 0, 0, 2, 0, 0, 1, 0]' : 0.144849}", "{'[4, 0, 6, 6, 1, 0, 0, 1, 18, 2, 11, 0, 0, 2, 0, 0, 1, 0]' : 0.147514}", "{'[4, 0, 6, 6, 1, 0, 0, 1, 18, 2, 11, 0, 0, 2, 0, 0, 1, 0]' : 0.147419}", "{'[4, 0, 6, 6, 1, 0, 0, 1, 18, 2, 11, 0, 0, 2, 0, 0, 1, 0]' : 0.147391}", "{'[4, 0, 6, 6, 1, 0, 0, 1, 18, 2, 11, 0, 0, 2, 0, 0, 1, 0]' : 0.14745}", "{'[4, 0, 6, 6, 1, 0, 0, 1, 18, 2, 11, 0, 0, 2, 0, 0, 1, 0]' : 0.147489}", "{'[4, 0, 6, 6, 1, 0, 0, 1, 18, 2, 11, 0, 0, 2, 0, 0, 1, 0]' : 0.144513}", "{'[4, 0, 6, 6, 1, 0, 0, 1, 18, 2, 11, 0, 0, 2, 0, 0, 1, 0]' : 0.14351}", "{'[4, 0, 6, 6, 1, 0, 0, 1, 18, 2, 11, 0, 0, 2, 0, 0, 1, 0]' : 0.143483}", "{'[4, 0, 6, 6, 1, 0, 0, 1, 18, 2, 11, 0, 0, 2, 0, 0, 1, 0]' : 0.143419}", "{'[4, 0, 6, 6, 1, 0, 0, 1, 18, 2, 11, 0, 0, 2, 0, 0, 1, 0]' : 0.146603}"]
returning from 'run': {'[4, 0, 6, 6, 1, 0, 0, 1, 18, 2, 11, 0, 0, 2, 0, 0, 1, 0]': ([0.147525, 0.147411, 0.14526, 0.143673, 0.143609, 0.146664, 0.147352, 0.147416, 0.147396, 0.147221, 0.143824, 0.14364, 0.145871, 0.147364, 0.147035, 0.143827, 0.147456, 0.145803, 0.143742, 0.144849, 0.147514, 0.147419, 0.147391, 0.14745, 0.147489, 0.144513, 0.14351, 0.143483, 0.143419, 0.146603], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 0, 6, 6, 1, 0, 0, 1, 18, 2, 11, 0, 0, 2, 0, 0, 1, 0]': ([0.147525, 0.147411, 0.14526, 0.143673, 0.143609, 0.146664, 0.147352, 0.147416, 0.147396, 0.147221, 0.143824, 0.14364, 0.145871, 0.147364, 0.147035, 0.143827, 0.147456, 0.145803, 0.143742, 0.144849, 0.147514, 0.147419, 0.147391, 0.14745, 0.147489, 0.144513, 0.14351, 0.143483, 0.143419, 0.146603], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	25
        Max loop nest depth: 	6
        Additions: 		309
        Multiplications: 	90
        Divisions: 		0
        Logical: 		0
        Reads: 			701
        Writes: 		154
        Comparisons:		25
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest92.exe __orio_perftest92.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest92.exe  
Program Test Output: 
{'[6, 2, 6, 5, 4, 0, 0, 1, 0, 3, 0, 22, 0, 0, 1, 1, 0, 0]' : 0.15391}
{'[6, 2, 6, 5, 4, 0, 0, 1, 0, 3, 0, 22, 0, 0, 1, 1, 0, 0]' : 0.154}
{'[6, 2, 6, 5, 4, 0, 0, 1, 0, 3, 0, 22, 0, 0, 1, 1, 0, 0]' : 0.153909}
{'[6, 2, 6, 5, 4, 0, 0, 1, 0, 3, 0, 22, 0, 0, 1, 1, 0, 0]' : 0.147981}
{'[6, 2, 6, 5, 4, 0, 0, 1, 0, 3, 0, 22, 0, 0, 1, 1, 0, 0]' : 0.134805}
{'[6, 2, 6, 5, 4, 0, 0, 1, 0, 3, 0, 22, 0, 0, 1, 1, 0, 0]' : 0.135813}
{'[6, 2, 6, 5, 4, 0, 0, 1, 0, 3, 0, 22, 0, 0, 1, 1, 0, 0]' : 0.138206}
{'[6, 2, 6, 5, 4, 0, 0, 1, 0, 3, 0, 22, 0, 0, 1, 1, 0, 0]' : 0.136513}
{'[6, 2, 6, 5, 4, 0, 0, 1, 0, 3, 0, 22, 0, 0, 1, 1, 0, 0]' : 0.135166}
{'[6, 2, 6, 5, 4, 0, 0, 1, 0, 3, 0, 22, 0, 0, 1, 1, 0, 0]' : 0.134936}
{'[6, 2, 6, 5, 4, 0, 0, 1, 0, 3, 0, 22, 0, 0, 1, 1, 0, 0]' : 0.134859}
{'[6, 2, 6, 5, 4, 0, 0, 1, 0, 3, 0, 22, 0, 0, 1, 1, 0, 0]' : 0.134815}
{'[6, 2, 6, 5, 4, 0, 0, 1, 0, 3, 0, 22, 0, 0, 1, 1, 0, 0]' : 0.135002}
{'[6, 2, 6, 5, 4, 0, 0, 1, 0, 3, 0, 22, 0, 0, 1, 1, 0, 0]' : 0.13742}
{'[6, 2, 6, 5, 4, 0, 0, 1, 0, 3, 0, 22, 0, 0, 1, 1, 0, 0]' : 0.138168}
{'[6, 2, 6, 5, 4, 0, 0, 1, 0, 3, 0, 22, 0, 0, 1, 1, 0, 0]' : 0.136871}
{'[6, 2, 6, 5, 4, 0, 0, 1, 0, 3, 0, 22, 0, 0, 1, 1, 0, 0]' : 0.135196}
{'[6, 2, 6, 5, 4, 0, 0, 1, 0, 3, 0, 22, 0, 0, 1, 1, 0, 0]' : 0.134925}
{'[6, 2, 6, 5, 4, 0, 0, 1, 0, 3, 0, 22, 0, 0, 1, 1, 0, 0]' : 0.134846}
{'[6, 2, 6, 5, 4, 0, 0, 1, 0, 3, 0, 22, 0, 0, 1, 1, 0, 0]' : 0.134836}
{'[6, 2, 6, 5, 4, 0, 0, 1, 0, 3, 0, 22, 0, 0, 1, 1, 0, 0]' : 0.135316}
{'[6, 2, 6, 5, 4, 0, 0, 1, 0, 3, 0, 22, 0, 0, 1, 1, 0, 0]' : 0.134792}
{'[6, 2, 6, 5, 4, 0, 0, 1, 0, 3, 0, 22, 0, 0, 1, 1, 0, 0]' : 0.134793}
{'[6, 2, 6, 5, 4, 0, 0, 1, 0, 3, 0, 22, 0, 0, 1, 1, 0, 0]' : 0.135796}
{'[6, 2, 6, 5, 4, 0, 0, 1, 0, 3, 0, 22, 0, 0, 1, 1, 0, 0]' : 0.136288}
{'[6, 2, 6, 5, 4, 0, 0, 1, 0, 3, 0, 22, 0, 0, 1, 1, 0, 0]' : 0.134825}
{'[6, 2, 6, 5, 4, 0, 0, 1, 0, 3, 0, 22, 0, 0, 1, 1, 0, 0]' : 0.134908}
{'[6, 2, 6, 5, 4, 0, 0, 1, 0, 3, 0, 22, 0, 0, 1, 1, 0, 0]' : 0.135065}
{'[6, 2, 6, 5, 4, 0, 0, 1, 0, 3, 0, 22, 0, 0, 1, 1, 0, 0]' : 0.135536}
{'[6, 2, 6, 5, 4, 0, 0, 1, 0, 3, 0, 22, 0, 0, 1, 1, 0, 0]' : 0.134862}

out:
 ["{'[6, 2, 6, 5, 4, 0, 0, 1, 0, 3, 0, 22, 0, 0, 1, 1, 0, 0]' : 0.15391}", "{'[6, 2, 6, 5, 4, 0, 0, 1, 0, 3, 0, 22, 0, 0, 1, 1, 0, 0]' : 0.154}", "{'[6, 2, 6, 5, 4, 0, 0, 1, 0, 3, 0, 22, 0, 0, 1, 1, 0, 0]' : 0.153909}", "{'[6, 2, 6, 5, 4, 0, 0, 1, 0, 3, 0, 22, 0, 0, 1, 1, 0, 0]' : 0.147981}", "{'[6, 2, 6, 5, 4, 0, 0, 1, 0, 3, 0, 22, 0, 0, 1, 1, 0, 0]' : 0.134805}", "{'[6, 2, 6, 5, 4, 0, 0, 1, 0, 3, 0, 22, 0, 0, 1, 1, 0, 0]' : 0.135813}", "{'[6, 2, 6, 5, 4, 0, 0, 1, 0, 3, 0, 22, 0, 0, 1, 1, 0, 0]' : 0.138206}", "{'[6, 2, 6, 5, 4, 0, 0, 1, 0, 3, 0, 22, 0, 0, 1, 1, 0, 0]' : 0.136513}", "{'[6, 2, 6, 5, 4, 0, 0, 1, 0, 3, 0, 22, 0, 0, 1, 1, 0, 0]' : 0.135166}", "{'[6, 2, 6, 5, 4, 0, 0, 1, 0, 3, 0, 22, 0, 0, 1, 1, 0, 0]' : 0.134936}", "{'[6, 2, 6, 5, 4, 0, 0, 1, 0, 3, 0, 22, 0, 0, 1, 1, 0, 0]' : 0.134859}", "{'[6, 2, 6, 5, 4, 0, 0, 1, 0, 3, 0, 22, 0, 0, 1, 1, 0, 0]' : 0.134815}", "{'[6, 2, 6, 5, 4, 0, 0, 1, 0, 3, 0, 22, 0, 0, 1, 1, 0, 0]' : 0.135002}", "{'[6, 2, 6, 5, 4, 0, 0, 1, 0, 3, 0, 22, 0, 0, 1, 1, 0, 0]' : 0.13742}", "{'[6, 2, 6, 5, 4, 0, 0, 1, 0, 3, 0, 22, 0, 0, 1, 1, 0, 0]' : 0.138168}", "{'[6, 2, 6, 5, 4, 0, 0, 1, 0, 3, 0, 22, 0, 0, 1, 1, 0, 0]' : 0.136871}", "{'[6, 2, 6, 5, 4, 0, 0, 1, 0, 3, 0, 22, 0, 0, 1, 1, 0, 0]' : 0.135196}", "{'[6, 2, 6, 5, 4, 0, 0, 1, 0, 3, 0, 22, 0, 0, 1, 1, 0, 0]' : 0.134925}", "{'[6, 2, 6, 5, 4, 0, 0, 1, 0, 3, 0, 22, 0, 0, 1, 1, 0, 0]' : 0.134846}", "{'[6, 2, 6, 5, 4, 0, 0, 1, 0, 3, 0, 22, 0, 0, 1, 1, 0, 0]' : 0.134836}", "{'[6, 2, 6, 5, 4, 0, 0, 1, 0, 3, 0, 22, 0, 0, 1, 1, 0, 0]' : 0.135316}", "{'[6, 2, 6, 5, 4, 0, 0, 1, 0, 3, 0, 22, 0, 0, 1, 1, 0, 0]' : 0.134792}", "{'[6, 2, 6, 5, 4, 0, 0, 1, 0, 3, 0, 22, 0, 0, 1, 1, 0, 0]' : 0.134793}", "{'[6, 2, 6, 5, 4, 0, 0, 1, 0, 3, 0, 22, 0, 0, 1, 1, 0, 0]' : 0.135796}", "{'[6, 2, 6, 5, 4, 0, 0, 1, 0, 3, 0, 22, 0, 0, 1, 1, 0, 0]' : 0.136288}", "{'[6, 2, 6, 5, 4, 0, 0, 1, 0, 3, 0, 22, 0, 0, 1, 1, 0, 0]' : 0.134825}", "{'[6, 2, 6, 5, 4, 0, 0, 1, 0, 3, 0, 22, 0, 0, 1, 1, 0, 0]' : 0.134908}", "{'[6, 2, 6, 5, 4, 0, 0, 1, 0, 3, 0, 22, 0, 0, 1, 1, 0, 0]' : 0.135065}", "{'[6, 2, 6, 5, 4, 0, 0, 1, 0, 3, 0, 22, 0, 0, 1, 1, 0, 0]' : 0.135536}", "{'[6, 2, 6, 5, 4, 0, 0, 1, 0, 3, 0, 22, 0, 0, 1, 1, 0, 0]' : 0.134862}"]
returning from 'run': {'[6, 2, 6, 5, 4, 0, 0, 1, 0, 3, 0, 22, 0, 0, 1, 1, 0, 0]': ([0.15391, 0.154, 0.153909, 0.147981, 0.134805, 0.135813, 0.138206, 0.136513, 0.135166, 0.134936, 0.134859, 0.134815, 0.135002, 0.13742, 0.138168, 0.136871, 0.135196, 0.134925, 0.134846, 0.134836, 0.135316, 0.134792, 0.134793, 0.135796, 0.136288, 0.134825, 0.134908, 0.135065, 0.135536, 0.134862], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 2, 6, 5, 4, 0, 0, 1, 0, 3, 0, 22, 0, 0, 1, 1, 0, 0]': ([0.15391, 0.154, 0.153909, 0.147981, 0.134805, 0.135813, 0.138206, 0.136513, 0.135166, 0.134936, 0.134859, 0.134815, 0.135002, 0.13742, 0.138168, 0.136871, 0.135196, 0.134925, 0.134846, 0.134836, 0.135316, 0.134792, 0.134793, 0.135796, 0.136288, 0.134825, 0.134908, 0.135065, 0.135536, 0.134862], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Complete design, with measurements:
     T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x U1_I U_I U_J U_K RT_I RT_J RT_K SCR
37      6    1    2    5    0    0       1    1   3   0  13    1    1    0   1
54      0    6    2    0    0    1       1   24  10  25   0    0    1    1   0
65      4    5    6    4    5    4       1   27  29  29   0    1    1    0   0
165     1    3    3    5    1    6       0   17   5  29   0    0    0    1   0
249     6    6    1    0    6    0       0   24   0  28   0    0    2    0   0
356     6    6    6    0    0    5       0    5  29   0   2    2    0    0   1
374     6    2    0    0    1    2       0   21  22  16   0    0    0    0   1
435     0    0    1    5    6    3       0    3   6   0   7    1    0    1   1
492     1    0    0    5    5    6       0   28   0   9  24    0    0    1   0
582     6    0    4    4    5    2       1    5   0  11   8    0    1    1   0
606     6    3    0    6    3    3       1   29   1   0  28    2    0    0   0
692     0    0    0    3    0    6       0   28   0  28  18    0    1    1   1
930     3    2    1    1    0    2       0    1  27   0  28    0    1    1   1
1059    0    0    0    6    1    5       0    5  20   0   0    1    0    0   1
1351    4    0    1    2    3    4       1   17   8   0   0    0    1    0   1
1453    1    0    6    5    6    6       1   28   4   0   8    0    0    0   0
1480    0    1    6    0    5    6       0   27  23   0   9    1    1    0   0
1792    6    1    1    5    0    3       0    4   0   8   0    0    0    0   0
2172    5    3    6    0    6    4       1    4   0  29  28    1    0    0   1
2440    0    4    5    6    3    0       0   12   8   0  28    0    1    0   1
2576    0    1    3    0    1    6       0    0   7   0  11    0    2    0   0
2869    5    1    2    0    5    6       1    0  24   3   0    1    0    1   1
3025    0    2    5    6    6    4       0   28   0   7  13    2    0    0   1
3093    5    3    5    0    2    4       0    2   0   0  21    2    0    0   0
3115    6    6    5    6    0    0       1   25  18   2   0    1    0    0   0
3237    2    1    0    6    1    1       1   28   0  19  10    1    1    0   1
3259    1    4    6    5    6    4       0   11  13   0   0    1    0    1   1
3324    2    1    5    3    1    6       0    1   0   0   0    0    1    1   1
3335    2    0    0    3    3    0       1    2   0  29   6    2    0    0   1
3619    1    6    0    2    0    6       0    0  18   7   0    2    0    0   1
3656    1    0    4    2    6    0       1   29   0   1  27    2    0    0   1
3964    0    2    1    6    3    0       1   20  27   0  10    0    0    0   0
4081    3    6    1    2    4    5       0    9   6   0  29    0    1    0   0
4237    4    0    6    6    1    0       0   18   2  11   0    0    2    0   0
4417    6    2    6    5    4    0       0    0   3   0  22    0    0    1   1
     VEC1 VEC2  cost_mean
37      1    1 0.10170553
54      1    0 0.22216963
65      0    1 0.09832155
165     1    1 0.18674310
249     0    0 0.26054383
356     0    0 0.17345403
374     1    1 0.16355457
435     0    1 0.10689723
492     1    1 0.19570960
582     1    1 0.22645423
606     1    0 0.19169057
692     0    0 0.23037270
930     1    0 0.24198630
1059    1    0 0.10965290
1351    0    0 0.20610977
1453    1    1 0.18431717
1480    1    0 0.11204853
1792    0    0 0.30408243
2172    1    0 0.11909810
2440    1    1 0.14515717
2576    1    0 0.16710207
2869    1    1 0.09612100
3025    0    1 0.17005793
3093    0    1 0.15094310
3115    1    1 0.10972050
3237    0    0 0.11016077
3259    0    0 0.11022213
3324    1    1 0.19921497
3335    1    1 0.23175023
3619    1    0 0.22856277
3656    0    1 0.23739700
3964    0    0 0.58005733
4081    0    1 0.31171823
4237    1    0 0.14585763
4417    0    0 0.13781193

Heteroscedasticity Test p-value: 0.274429188138
Regression Step:                Df  Sum Sq Mean Sq F value  Pr(>F)   
T1_I             1 0.00535 0.00535   2.588 0.16860   
T1_J             1 0.00181 0.00181   0.876 0.39232   
T1_K             1 0.03595 0.03595  17.384 0.00874 **
T2_I             1 0.00020 0.00020   0.095 0.77028   
T2_J             1 0.00046 0.00046   0.223 0.65669   
T2_K             1 0.01117 0.01117   5.404 0.06767 . 
ACOPY_x          1 0.00020 0.00020   0.098 0.76698   
U1_I             1 0.00001 0.00001   0.005 0.94500   
U_I              1 0.00032 0.00032   0.153 0.71148   
U_J              1 0.00380 0.00380   1.838 0.23325   
U_K              1 0.00074 0.00074   0.359 0.57537   
RT_I             1 0.02321 0.02321  11.222 0.02033 * 
RT_J             1 0.00893 0.00893   4.321 0.09222 . 
RT_K             1 0.01097 0.01097   5.305 0.06949 . 
SCR              1 0.02144 0.02144  10.369 0.02346 * 
VEC1             1 0.02988 0.02988  14.449 0.01261 * 
VEC2             1 0.00174 0.00174   0.840 0.40146   
I(1/(1 + T1_I))  1 0.00322 0.00322   1.555 0.26763   
I(1/(1 + T1_J))  1 0.00011 0.00011   0.056 0.82294   
I(1/(1 + T1_K))  1 0.00148 0.00148   0.715 0.43637   
I(1/(1 + T2_I))  1 0.02062 0.02062   9.970 0.02516 * 
I(1/(1 + T2_J))  1 0.00047 0.00047   0.227 0.65361   
I(1/(1 + T2_K))  1 0.00662 0.00662   3.201 0.13363   
I(1/(1 + U1_I))  1 0.00927 0.00927   4.483 0.08781 . 
I(1/(1 + U_I))   1 0.02437 0.02437  11.786 0.01857 * 
I(1/(1 + U_J))   1 0.00075 0.00075   0.362 0.57339   
I(1/(1 + U_K))   1 0.01308 0.01308   6.328 0.05347 . 
I(1/(1 + RT_I))  1 0.02586 0.02586  12.504 0.01663 * 
I(1/(1 + RT_J))  1 0.00375 0.00375   1.813 0.23591   
Residuals        5 0.01034 0.00207                   
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Predicting Best
Generating valid search space of size 4500 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Valid coordinates: 900
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Valid coordinates: 1800
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Tested coordinates: 110000
Valid coordinates: 2700
Tested coordinates: 120000
Tested coordinates: 130000
Tested coordinates: 140000
Tested coordinates: 150000
Valid coordinates: 3600
Tested coordinates: 160000
Tested coordinates: 170000
Tested coordinates: 180000
Valid coordinates: 4500
Valid/Tested configurations: 4500/189232
Generated Search Space:
NULL
Identical predictions (tol = 1e-5): 1
Getting Best from Design
Response: ['cost_mean']
Design Names:  [1] "T1_I"      "T1_J"      "T1_K"      "T2_I"      "T2_J"      "T2_K"     
 [7] "ACOPY_x"   "U1_I"      "U_I"       "U_J"       "U_K"       "RT_I"     
[13] "RT_J"      "RT_K"      "SCR"       "VEC1"      "VEC2"      "cost_mean"

Design Response:       cost_mean
37   0.10170553
54   0.22216963
65   0.09832155
165  0.18674310
249  0.26054383
356  0.17345403
374  0.16355457
435  0.10689723
492  0.19570960
582  0.22645423
606  0.19169057
692  0.23037270
930  0.24198630
1059 0.10965290
1351 0.20610977
1453 0.18431717
1480 0.11204853
1792 0.30408243
2172 0.11909810
2440 0.14515717
2576 0.16710207
2869 0.09612100
3025 0.17005793
3093 0.15094310
3115 0.10972050
3237 0.11016077
3259 0.11022213
3324 0.19921497
3335 0.23175023
3619 0.22856277
3656 0.23739700
3964 0.58005733
4081 0.31171823
4237 0.14585763
4417 0.13781193

Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Getting fixed variables
Pruning Model
Best Predicted:      T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
3694    6    0    2    6    2    2       0       1    0   3  22   0    1    1
     RT_K SCR VEC1 VEC2
3694    0   1    0    0

Best From Design: [5, 1, 2, 0, 5, 6, 1, 1, 0, 24, 3, 0, 1, 0, 1, 1, 1, 1]
Pruned Factors: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'ACOPY_x', 'U1_I', 'U_I', 'U_J', 'U_K', 'VEC2']
Fixed Factors: {'ACOPY_y': 1, 'RT_K': 0, 'RT_J': 1, 'RT_I': 1, 'T1_K': 2, 'T2_K': 2, 'VEC1': 0, 'SCR': 1}
Length of requested configs: 1
Result was on Database, Returning Now
Starting Point (-O3):
0.16283083333333334
Predicted Best Point:
[6, 0, 2, 6, 2, 2, 0, 1, 0, 3, 22, 0, 1, 1, 0, 1, 0, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	45
        Max loop nest depth: 	6
        Additions: 		1957
        Multiplications: 	858
        Divisions: 		0
        Logical: 		0
        Reads: 			3748
        Writes: 		610
        Comparisons:		45
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest93.exe __orio_perftest93.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest93.exe  
Program Test Output: 
{'[6, 0, 2, 6, 2, 2, 0, 1, 0, 3, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.116903}
{'[6, 0, 2, 6, 2, 2, 0, 1, 0, 3, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.117215}
{'[6, 0, 2, 6, 2, 2, 0, 1, 0, 3, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.117217}
{'[6, 0, 2, 6, 2, 2, 0, 1, 0, 3, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.105931}
{'[6, 0, 2, 6, 2, 2, 0, 1, 0, 3, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.101011}
{'[6, 0, 2, 6, 2, 2, 0, 1, 0, 3, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.101294}
{'[6, 0, 2, 6, 2, 2, 0, 1, 0, 3, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.10108}
{'[6, 0, 2, 6, 2, 2, 0, 1, 0, 3, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.101145}
{'[6, 0, 2, 6, 2, 2, 0, 1, 0, 3, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.101321}
{'[6, 0, 2, 6, 2, 2, 0, 1, 0, 3, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.101422}
{'[6, 0, 2, 6, 2, 2, 0, 1, 0, 3, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.101405}
{'[6, 0, 2, 6, 2, 2, 0, 1, 0, 3, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.101115}
{'[6, 0, 2, 6, 2, 2, 0, 1, 0, 3, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.101153}
{'[6, 0, 2, 6, 2, 2, 0, 1, 0, 3, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.10104}
{'[6, 0, 2, 6, 2, 2, 0, 1, 0, 3, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.101065}
{'[6, 0, 2, 6, 2, 2, 0, 1, 0, 3, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.101809}
{'[6, 0, 2, 6, 2, 2, 0, 1, 0, 3, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.101725}
{'[6, 0, 2, 6, 2, 2, 0, 1, 0, 3, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.101418}
{'[6, 0, 2, 6, 2, 2, 0, 1, 0, 3, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.101126}
{'[6, 0, 2, 6, 2, 2, 0, 1, 0, 3, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.101289}
{'[6, 0, 2, 6, 2, 2, 0, 1, 0, 3, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.101662}
{'[6, 0, 2, 6, 2, 2, 0, 1, 0, 3, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.101439}
{'[6, 0, 2, 6, 2, 2, 0, 1, 0, 3, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.101363}
{'[6, 0, 2, 6, 2, 2, 0, 1, 0, 3, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.101375}
{'[6, 0, 2, 6, 2, 2, 0, 1, 0, 3, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.101394}
{'[6, 0, 2, 6, 2, 2, 0, 1, 0, 3, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.10135}
{'[6, 0, 2, 6, 2, 2, 0, 1, 0, 3, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.101617}
{'[6, 0, 2, 6, 2, 2, 0, 1, 0, 3, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.101089}
{'[6, 0, 2, 6, 2, 2, 0, 1, 0, 3, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.101173}
{'[6, 0, 2, 6, 2, 2, 0, 1, 0, 3, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.101115}

out:
 ["{'[6, 0, 2, 6, 2, 2, 0, 1, 0, 3, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.116903}", "{'[6, 0, 2, 6, 2, 2, 0, 1, 0, 3, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.117215}", "{'[6, 0, 2, 6, 2, 2, 0, 1, 0, 3, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.117217}", "{'[6, 0, 2, 6, 2, 2, 0, 1, 0, 3, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.105931}", "{'[6, 0, 2, 6, 2, 2, 0, 1, 0, 3, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.101011}", "{'[6, 0, 2, 6, 2, 2, 0, 1, 0, 3, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.101294}", "{'[6, 0, 2, 6, 2, 2, 0, 1, 0, 3, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.10108}", "{'[6, 0, 2, 6, 2, 2, 0, 1, 0, 3, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.101145}", "{'[6, 0, 2, 6, 2, 2, 0, 1, 0, 3, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.101321}", "{'[6, 0, 2, 6, 2, 2, 0, 1, 0, 3, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.101422}", "{'[6, 0, 2, 6, 2, 2, 0, 1, 0, 3, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.101405}", "{'[6, 0, 2, 6, 2, 2, 0, 1, 0, 3, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.101115}", "{'[6, 0, 2, 6, 2, 2, 0, 1, 0, 3, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.101153}", "{'[6, 0, 2, 6, 2, 2, 0, 1, 0, 3, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.10104}", "{'[6, 0, 2, 6, 2, 2, 0, 1, 0, 3, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.101065}", "{'[6, 0, 2, 6, 2, 2, 0, 1, 0, 3, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.101809}", "{'[6, 0, 2, 6, 2, 2, 0, 1, 0, 3, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.101725}", "{'[6, 0, 2, 6, 2, 2, 0, 1, 0, 3, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.101418}", "{'[6, 0, 2, 6, 2, 2, 0, 1, 0, 3, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.101126}", "{'[6, 0, 2, 6, 2, 2, 0, 1, 0, 3, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.101289}", "{'[6, 0, 2, 6, 2, 2, 0, 1, 0, 3, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.101662}", "{'[6, 0, 2, 6, 2, 2, 0, 1, 0, 3, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.101439}", "{'[6, 0, 2, 6, 2, 2, 0, 1, 0, 3, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.101363}", "{'[6, 0, 2, 6, 2, 2, 0, 1, 0, 3, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.101375}", "{'[6, 0, 2, 6, 2, 2, 0, 1, 0, 3, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.101394}", "{'[6, 0, 2, 6, 2, 2, 0, 1, 0, 3, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.10135}", "{'[6, 0, 2, 6, 2, 2, 0, 1, 0, 3, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.101617}", "{'[6, 0, 2, 6, 2, 2, 0, 1, 0, 3, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.101089}", "{'[6, 0, 2, 6, 2, 2, 0, 1, 0, 3, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.101173}", "{'[6, 0, 2, 6, 2, 2, 0, 1, 0, 3, 22, 0, 1, 1, 0, 1, 0, 0]' : 0.101115}"]
returning from 'run': {'[6, 0, 2, 6, 2, 2, 0, 1, 0, 3, 22, 0, 1, 1, 0, 1, 0, 0]': ([0.116903, 0.117215, 0.117217, 0.105931, 0.101011, 0.101294, 0.10108, 0.101145, 0.101321, 0.101422, 0.101405, 0.101115, 0.101153, 0.10104, 0.101065, 0.101809, 0.101725, 0.101418, 0.101126, 0.101289, 0.101662, 0.101439, 0.101363, 0.101375, 0.101394, 0.10135, 0.101617, 0.101089, 0.101173, 0.101115], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 2, 6, 2, 2, 0, 1, 0, 3, 22, 0, 1, 1, 0, 1, 0, 0]': ([0.116903, 0.117215, 0.117217, 0.105931, 0.101011, 0.101294, 0.10108, 0.101145, 0.101321, 0.101422, 0.101405, 0.101115, 0.101153, 0.10104, 0.101065, 0.101809, 0.101725, 0.101418, 0.101126, 0.101289, 0.101662, 0.101439, 0.101363, 0.101375, 0.101394, 0.10135, 0.101617, 0.101089, 0.101173, 0.101115], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Design Best Point:
[5, 1, 2, 0, 5, 6, 1, 1, 0, 24, 3, 0, 1, 0, 1, 1, 1, 1]
Length of requested configs: 1
Result was on Database, Returning Now
Fixed Factors: {'ACOPY_y': 1, 'RT_K': 0, 'RT_J': 1, 'RT_I': 1, 'T1_K': 2, 'T2_K': 2, 'VEC1': 0, 'SCR': 1}
Slowdown (Design Best): 0.5903120109315904
Slowdown (Predicted Best): 0.632816471081951
Budget: 74/180
Updating Global Best: 0.09612099666666664
Current Best Point: 
[5, 1, 2, 0, 5, 6, 1, 1, 0, 24, 3, 0, 1, 0, 1, 1, 1, 1]
Final Best Point: 
[5, 1, 2, 0, 5, 6, 1, 1, 0, 24, 3, 0, 1, 0, 1, 1, 1, 1]
Ending DOPT-ANOVA
Best Point: [5, 1, 2, 0, 5, 6, 1, 1, 0, 24, 3, 0, 1, 0, 1, 1, 1, 1]
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Speedup: 1.69401940242054
----- end random search -----
----- begin random search summary -----
 total completed runs: 0
 total successful runs: 0
 total failed runs: 0
 speedup: 1.69401940242054
----- end random search summary -----
----- begin summary -----
 best coordinate: [5, 1, 2, 0, 5, 6, 1, 1, 0, 24, 3, 0, 1, 0, 1, 1, 1, 1]={'ACOPY_x': True, 'ACOPY_y': True, 'RT_K': 8, 'T1_I': 256, 'T1_J': 16, 'T1_K': 32, 'U_K': 1, 'U_J': 4, 'U_I': 25, 'U1_I': 1, 'T2_K': 2048, 'T2_J': 1024, 'T2_I': 1, 'VEC2': True, 'VEC1': True, 'RT_I': 8, 'SCR': True, 'RT_J': 1}, cost=9.612100e-02, transfer_time=inf, inputs=[('N', 10000)], search_time=-2490.60, runs=74
----- end summary -----
Length of requested configs: 1
Result was on Database, Returning Now
----- the obtained best performance parameters -----
 ACOPY_x = True
 ACOPY_y = True
 RT_I = 8
 RT_J = 1
 RT_K = 8
 SCR = True
 T1_I = 256
 T1_J = 16
 T1_K = 32
 T2_I = 1
 T2_J = 1024
 T2_K = 2048
 U1_I = 1
 U_I = 25
 U_J = 4
 U_K = 1
 VEC1 = True
 VEC2 = True
 cost_mean = 0.09612099666666664
 points = 74
 speedup_O3 = 1.69401940242054
 technique = DLMT
Code stats:
        Number of loops: 	155
        Max loop nest depth: 	5
        Additions: 		2817
        Multiplications: 	884
        Divisions: 		0
        Logical: 		0
        Reads: 			5555
        Writes: 		1067
        Comparisons:		155
        Gotos: 			0
        
----- finish optimizations -----

----- begin removing annotations from output-----
----- finished removing annotations from output-----

----- begin writing the output file(s) -----
--> writing output to: _atax2.src1.c
----- finished writing the output file(s) -----

====== END ORIO ======
