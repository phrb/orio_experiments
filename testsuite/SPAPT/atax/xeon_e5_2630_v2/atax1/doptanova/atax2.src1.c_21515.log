
====== START ORIO ======

----- begin reading the source file: atax2.src1.c -----
----- finished reading the source file -----

----- begin parsing annotations -----
----- finished parsing annotations -----

----- begin optimizations -----
Search_Space         = 8.234e+13
Number_of_Parameters = 18
Numeric_Parameters   = 13
Binary_Parameters    = 05
['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
[[1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [False, True], [False, True], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 8, 32], [1, 8, 32], [1, 8, 32], [False, True], [False, True], [False, True]]

----- begin empirical tuning for problem size -----
 N = 10000
Parameters: {'ACOPY_x': [0, 2], 'ACOPY_y': [0, 2], 'RT_K': [0, 3], 'T1_I': [0, 7], 'T1_J': [0, 7], 'T1_K': [0, 7], 'U_K': [0, 30], 'U_J': [0, 30], 'U_I': [0, 30], 'U1_I': [0, 30], 'T2_K': [0, 7], 'T2_J': [0, 7], 'T2_I': [0, 7], 'VEC2': [0, 2], 'VEC1': [0, 2], 'RT_I': [0, 3], 'SCR': [0, 2], 'RT_J': [0, 3]}
Parameter Range Values: {'ACOPY_x': [False, True], 'ACOPY_y': [False, True], 'RT_K': [1, 8, 32], 'T1_I': [1, 16, 32, 64, 128, 256, 512], 'T1_J': [1, 16, 32, 64, 128, 256, 512], 'T1_K': [1, 16, 32, 64, 128, 256, 512], 'U_K': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_J': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U1_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'T2_K': [1, 64, 128, 256, 512, 1024, 2048], 'T2_J': [1, 64, 128, 256, 512, 1024, 2048], 'T2_I': [1, 64, 128, 256, 512, 1024, 2048], 'VEC2': [False, True], 'VEC1': [False, True], 'RT_I': [1, 8, 32], 'SCR': [False, True], 'RT_J': [1, 8, 32]}

----- begin random search -----
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Inverse Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Starting DOPT-anova
Step 0
Generating valid search space of size 4600 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Valid coordinates: 920
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Valid coordinates: 1840
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Tested coordinates: 110000
Valid coordinates: 2760
Tested coordinates: 120000
Tested coordinates: 130000
Tested coordinates: 140000
Tested coordinates: 150000
Valid coordinates: 3680
Tested coordinates: 160000
Tested coordinates: 170000
Tested coordinates: 180000
Valid coordinates: 4600
Valid/Tested configurations: 4600/189850
Generated Search Space:
NULL
Clean Info:
Removed Factors: character(0)

Removed Inverse Factors: [1] "ACOPY_x" "ACOPY_y" "SCR"     "VEC1"    "VEC2"   

New Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
New Inverse Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
New Fixed Factors: {}
Full Model:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Fixed Factors: {}
Computing D-Optimal Design
Computing D-Optimal Design with 46 experiments
Design Formula:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Starting "optFederov" run
Using Search Space:
NULL
Data Dimensions: [1] 4600   18

     T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
85      5    4    3    6    4    2       0       0   29   0  29   4    1    1
155     3    6    0    3    4    5       0       0   13   0  26  25    1    0
186     2    0    0    1    2    0       0       0    0  22  15   0    2    0
201     1    2    4    6    0    4       0       0   27   0   0  28    0    1
246     6    0    5    0    3    4       0       0   14  17   4   0    0    1
265     2    3    5    4    0    0       1       0    3  28  29   0    0    0
322     0    0    3    5    2    2       1       0   11  27   0  24    0    0
510     1    6    2    4    5    0       0       1    5   0   4  14    2    0
698     3    3    4    6    1    6       0       1    5   3   0   9    2    0
738     6    2    6    0    5    0       0       0   28   5   0  26    0    0
884     4    2    1    0    5    6       1       0   27   2  29   0    2    0
1104    1    5    2    3    0    5       1       1   27  29   0  29    1    1
1133    2    4    2    1    2    0       1       0   28  23   0   9    0    2
1150    0    0    3    1    0    6       1       1   11   0  11  13    1    0
1204    0    0    3    4    1    5       0       1    1   1   0   2    0    1
1265    3    5    0    0    0    0       1       1    2   0   9  20    0    2
1271    2    3    1    0    0    5       1       0    0   4   5   0    1    1
1401    2    1    1    3    0    1       0       1   11   1   0  26    0    0
1545    5    3    6    6    6    5       1       1    1  24   3   0    0    2
1560    6    6    2    0    6    5       0       1    0   0  27  17    2    0
1636    3    6    0    4    0    3       1       0    0   6  18   0    0    2
1649    6    6    6    6    0    5       0       0   24   0  15   1    0    0
1675    0    3    6    1    6    5       1       0    0   6   0   3    0    0
1679    1    0    5    6    1    0       1       0    0   0  24  29    0    0
2131    0    6    6    5    6    0       0       1   11   3  28   0    1    1
2146    1    3    3    4    1    1       0       1   28  18  12   0    0    0
2491    2    3    6    0    2    4       0       1    5   0   5  14    0    1
2553    6    0    6    5    4    4       1       1   21   0  28   0    2    0
2676    0    6    1    4    6    6       0       0   25  17   1   0    0    0
2967    0    6    4    6    6    0       1       1   15   4   7   0    0    0
3114    2    2    0    0    5    1       0       1   27  28   0   6    0    0
3208    0    1    5    3    0    0       1       0   28   0   5   6    1    0
3293    1    2    1    5    1    0       0       1   28  29  15   0    0    0
3589    2    5    0    6    5    2       0       1   19  22   0   6    1    0
3597    6    0    0    0    5    5       0       0    6  14   0  22    0    2
3705    0    6    0    4    0    0       1       0    6  10   0   3    0    1
3794    3    5    0    1    5    0       0       1   25   5   1   0    0    0
3818    1    0    6    0    6    6       1       1   29   0  27  18    0    1
3832    4    3    4    0    4    5       1       0   10  23   0   4    0    0
3959    0    4    0    0    2    2       0       1    2   0  25   1    0    2
4118    1    0    3    0    5    1       0       1    4   6   5   0    1    0
4300    2    0    4    0    1    4       1       1   29   0   3   0    2    0
4320    6    0    0    6    6    6       1       0    3  12   2   0    0    0
4419    0    3    0    1    1    6       0       0    1   0   3  26    0    0
4478    4    5    4    0    4    6       1       1    3   0   0   0    1    0
4537    6    3    0    6    2    4       1       1   28   0  10  17    0    1
     RT_K SCR VEC1 VEC2
85      0   0    1    1
155     1   1    1    1
186     0   0    0    1
201     1   0    0    1
246     1   1    0    0
265     0   1    0    0
322     2   1    1    0
510     0   0    0    0
698     0   1    1    0
738     1   0    1    0
884     0   1    1    1
1104    0   0    1    1
1133    0   1    1    1
1150    0   0    0    1
1204    0   0    1    1
1265    0   1    1    0
1271    0   0    1    1
1401    2   1    1    1
1545    0   1    1    0
1560    0   1    1    0
1636    0   0    0    0
1649    2   1    0    1
1675    2   1    1    0
1679    0   1    1    0
2131    0   0    0    0
2146    1   0    1    1
2491    0   1    0    1
2553    0   0    0    1
2676    0   1    0    0
2967    1   1    0    1
3114    2   0    1    0
3208    1   1    1    1
3293    2   1    0    0
3589    1   0    0    0
3597    0   1    0    1
3705    1   0    1    1
3794    0   1    1    1
3818    1   0    1    0
3832    0   0    0    1
3959    0   0    0    0
4118    1   1    0    1
4300    0   1    1    0
4320    1   0    1    1
4419    2   0    0    1
4478    1   0    1    0
4537    0   1    0    0

D-Efficiency Approximation: [1] 0.388

Measuring design of size 46
Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Length of requested configs: 1
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	6
        Additions: 		2609
        Multiplications: 	810
        Divisions: 		0
        Logical: 		0
        Reads: 			4322
        Writes: 		503
        Comparisons:		24
        Gotos: 			0
        
 building the original code:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -DORIGINAL -o __orio_perftest_original.exe __orio_perftest1.c timer_cpu.o -lm
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest1.exe __orio_perftest1.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest1.exe  
Program Test Output: 
{'[5, 4, 3, 6, 4, 2, 0, 0, 29, 0, 29, 4, 1, 1, 0, 0, 1, 1]' : 0.1323}
{'[5, 4, 3, 6, 4, 2, 0, 0, 29, 0, 29, 4, 1, 1, 0, 0, 1, 1]' : 0.132268}
{'[5, 4, 3, 6, 4, 2, 0, 0, 29, 0, 29, 4, 1, 1, 0, 0, 1, 1]' : 0.132238}
{'[5, 4, 3, 6, 4, 2, 0, 0, 29, 0, 29, 4, 1, 1, 0, 0, 1, 1]' : 0.128544}
{'[5, 4, 3, 6, 4, 2, 0, 0, 29, 0, 29, 4, 1, 1, 0, 0, 1, 1]' : 0.112107}
{'[5, 4, 3, 6, 4, 2, 0, 0, 29, 0, 29, 4, 1, 1, 0, 0, 1, 1]' : 0.112511}
{'[5, 4, 3, 6, 4, 2, 0, 0, 29, 0, 29, 4, 1, 1, 0, 0, 1, 1]' : 0.111982}
{'[5, 4, 3, 6, 4, 2, 0, 0, 29, 0, 29, 4, 1, 1, 0, 0, 1, 1]' : 0.112455}
{'[5, 4, 3, 6, 4, 2, 0, 0, 29, 0, 29, 4, 1, 1, 0, 0, 1, 1]' : 0.112206}
{'[5, 4, 3, 6, 4, 2, 0, 0, 29, 0, 29, 4, 1, 1, 0, 0, 1, 1]' : 0.112007}
{'[5, 4, 3, 6, 4, 2, 0, 0, 29, 0, 29, 4, 1, 1, 0, 0, 1, 1]' : 0.112162}
{'[5, 4, 3, 6, 4, 2, 0, 0, 29, 0, 29, 4, 1, 1, 0, 0, 1, 1]' : 0.112261}
{'[5, 4, 3, 6, 4, 2, 0, 0, 29, 0, 29, 4, 1, 1, 0, 0, 1, 1]' : 0.112522}
{'[5, 4, 3, 6, 4, 2, 0, 0, 29, 0, 29, 4, 1, 1, 0, 0, 1, 1]' : 0.112278}
{'[5, 4, 3, 6, 4, 2, 0, 0, 29, 0, 29, 4, 1, 1, 0, 0, 1, 1]' : 0.112003}
{'[5, 4, 3, 6, 4, 2, 0, 0, 29, 0, 29, 4, 1, 1, 0, 0, 1, 1]' : 0.112115}
{'[5, 4, 3, 6, 4, 2, 0, 0, 29, 0, 29, 4, 1, 1, 0, 0, 1, 1]' : 0.112025}
{'[5, 4, 3, 6, 4, 2, 0, 0, 29, 0, 29, 4, 1, 1, 0, 0, 1, 1]' : 0.112135}
{'[5, 4, 3, 6, 4, 2, 0, 0, 29, 0, 29, 4, 1, 1, 0, 0, 1, 1]' : 0.111914}
{'[5, 4, 3, 6, 4, 2, 0, 0, 29, 0, 29, 4, 1, 1, 0, 0, 1, 1]' : 0.112033}
{'[5, 4, 3, 6, 4, 2, 0, 0, 29, 0, 29, 4, 1, 1, 0, 0, 1, 1]' : 0.112318}
{'[5, 4, 3, 6, 4, 2, 0, 0, 29, 0, 29, 4, 1, 1, 0, 0, 1, 1]' : 0.112267}
{'[5, 4, 3, 6, 4, 2, 0, 0, 29, 0, 29, 4, 1, 1, 0, 0, 1, 1]' : 0.112327}
{'[5, 4, 3, 6, 4, 2, 0, 0, 29, 0, 29, 4, 1, 1, 0, 0, 1, 1]' : 0.112381}
{'[5, 4, 3, 6, 4, 2, 0, 0, 29, 0, 29, 4, 1, 1, 0, 0, 1, 1]' : 0.112154}
{'[5, 4, 3, 6, 4, 2, 0, 0, 29, 0, 29, 4, 1, 1, 0, 0, 1, 1]' : 0.112081}
{'[5, 4, 3, 6, 4, 2, 0, 0, 29, 0, 29, 4, 1, 1, 0, 0, 1, 1]' : 0.111981}
{'[5, 4, 3, 6, 4, 2, 0, 0, 29, 0, 29, 4, 1, 1, 0, 0, 1, 1]' : 0.112151}
{'[5, 4, 3, 6, 4, 2, 0, 0, 29, 0, 29, 4, 1, 1, 0, 0, 1, 1]' : 0.113946}
{'[5, 4, 3, 6, 4, 2, 0, 0, 29, 0, 29, 4, 1, 1, 0, 0, 1, 1]' : 0.11513}

out:
 ["{'[5, 4, 3, 6, 4, 2, 0, 0, 29, 0, 29, 4, 1, 1, 0, 0, 1, 1]' : 0.1323}", "{'[5, 4, 3, 6, 4, 2, 0, 0, 29, 0, 29, 4, 1, 1, 0, 0, 1, 1]' : 0.132268}", "{'[5, 4, 3, 6, 4, 2, 0, 0, 29, 0, 29, 4, 1, 1, 0, 0, 1, 1]' : 0.132238}", "{'[5, 4, 3, 6, 4, 2, 0, 0, 29, 0, 29, 4, 1, 1, 0, 0, 1, 1]' : 0.128544}", "{'[5, 4, 3, 6, 4, 2, 0, 0, 29, 0, 29, 4, 1, 1, 0, 0, 1, 1]' : 0.112107}", "{'[5, 4, 3, 6, 4, 2, 0, 0, 29, 0, 29, 4, 1, 1, 0, 0, 1, 1]' : 0.112511}", "{'[5, 4, 3, 6, 4, 2, 0, 0, 29, 0, 29, 4, 1, 1, 0, 0, 1, 1]' : 0.111982}", "{'[5, 4, 3, 6, 4, 2, 0, 0, 29, 0, 29, 4, 1, 1, 0, 0, 1, 1]' : 0.112455}", "{'[5, 4, 3, 6, 4, 2, 0, 0, 29, 0, 29, 4, 1, 1, 0, 0, 1, 1]' : 0.112206}", "{'[5, 4, 3, 6, 4, 2, 0, 0, 29, 0, 29, 4, 1, 1, 0, 0, 1, 1]' : 0.112007}", "{'[5, 4, 3, 6, 4, 2, 0, 0, 29, 0, 29, 4, 1, 1, 0, 0, 1, 1]' : 0.112162}", "{'[5, 4, 3, 6, 4, 2, 0, 0, 29, 0, 29, 4, 1, 1, 0, 0, 1, 1]' : 0.112261}", "{'[5, 4, 3, 6, 4, 2, 0, 0, 29, 0, 29, 4, 1, 1, 0, 0, 1, 1]' : 0.112522}", "{'[5, 4, 3, 6, 4, 2, 0, 0, 29, 0, 29, 4, 1, 1, 0, 0, 1, 1]' : 0.112278}", "{'[5, 4, 3, 6, 4, 2, 0, 0, 29, 0, 29, 4, 1, 1, 0, 0, 1, 1]' : 0.112003}", "{'[5, 4, 3, 6, 4, 2, 0, 0, 29, 0, 29, 4, 1, 1, 0, 0, 1, 1]' : 0.112115}", "{'[5, 4, 3, 6, 4, 2, 0, 0, 29, 0, 29, 4, 1, 1, 0, 0, 1, 1]' : 0.112025}", "{'[5, 4, 3, 6, 4, 2, 0, 0, 29, 0, 29, 4, 1, 1, 0, 0, 1, 1]' : 0.112135}", "{'[5, 4, 3, 6, 4, 2, 0, 0, 29, 0, 29, 4, 1, 1, 0, 0, 1, 1]' : 0.111914}", "{'[5, 4, 3, 6, 4, 2, 0, 0, 29, 0, 29, 4, 1, 1, 0, 0, 1, 1]' : 0.112033}", "{'[5, 4, 3, 6, 4, 2, 0, 0, 29, 0, 29, 4, 1, 1, 0, 0, 1, 1]' : 0.112318}", "{'[5, 4, 3, 6, 4, 2, 0, 0, 29, 0, 29, 4, 1, 1, 0, 0, 1, 1]' : 0.112267}", "{'[5, 4, 3, 6, 4, 2, 0, 0, 29, 0, 29, 4, 1, 1, 0, 0, 1, 1]' : 0.112327}", "{'[5, 4, 3, 6, 4, 2, 0, 0, 29, 0, 29, 4, 1, 1, 0, 0, 1, 1]' : 0.112381}", "{'[5, 4, 3, 6, 4, 2, 0, 0, 29, 0, 29, 4, 1, 1, 0, 0, 1, 1]' : 0.112154}", "{'[5, 4, 3, 6, 4, 2, 0, 0, 29, 0, 29, 4, 1, 1, 0, 0, 1, 1]' : 0.112081}", "{'[5, 4, 3, 6, 4, 2, 0, 0, 29, 0, 29, 4, 1, 1, 0, 0, 1, 1]' : 0.111981}", "{'[5, 4, 3, 6, 4, 2, 0, 0, 29, 0, 29, 4, 1, 1, 0, 0, 1, 1]' : 0.112151}", "{'[5, 4, 3, 6, 4, 2, 0, 0, 29, 0, 29, 4, 1, 1, 0, 0, 1, 1]' : 0.113946}", "{'[5, 4, 3, 6, 4, 2, 0, 0, 29, 0, 29, 4, 1, 1, 0, 0, 1, 1]' : 0.11513}"]
returning from 'run': {'[5, 4, 3, 6, 4, 2, 0, 0, 29, 0, 29, 4, 1, 1, 0, 0, 1, 1]': ([0.1323, 0.132268, 0.132238, 0.128544, 0.112107, 0.112511, 0.111982, 0.112455, 0.112206, 0.112007, 0.112162, 0.112261, 0.112522, 0.112278, 0.112003, 0.112115, 0.112025, 0.112135, 0.111914, 0.112033, 0.112318, 0.112267, 0.112327, 0.112381, 0.112154, 0.112081, 0.111981, 0.112151, 0.113946, 0.11513], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 4, 3, 6, 4, 2, 0, 0, 29, 0, 29, 4, 1, 1, 0, 0, 1, 1]': ([0.1323, 0.132268, 0.132238, 0.128544, 0.112107, 0.112511, 0.111982, 0.112455, 0.112206, 0.112007, 0.112162, 0.112261, 0.112522, 0.112278, 0.112003, 0.112115, 0.112025, 0.112135, 0.111914, 0.112033, 0.112318, 0.112267, 0.112327, 0.112381, 0.112154, 0.112081, 0.111981, 0.112151, 0.113946, 0.11513], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	5
        Additions: 		2403
        Multiplications: 	1134
        Divisions: 		0
        Logical: 		0
        Reads: 			4765
        Writes: 		827
        Comparisons:		20
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest2.exe __orio_perftest2.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest2.exe  
Program Test Output: 
{'[3, 6, 0, 3, 4, 5, 0, 0, 13, 0, 26, 25, 1, 0, 1, 1, 1, 1]' : 0.10252}
{'[3, 6, 0, 3, 4, 5, 0, 0, 13, 0, 26, 25, 1, 0, 1, 1, 1, 1]' : 0.102384}
{'[3, 6, 0, 3, 4, 5, 0, 0, 13, 0, 26, 25, 1, 0, 1, 1, 1, 1]' : 0.102504}
{'[3, 6, 0, 3, 4, 5, 0, 0, 13, 0, 26, 25, 1, 0, 1, 1, 1, 1]' : 0.102444}
{'[3, 6, 0, 3, 4, 5, 0, 0, 13, 0, 26, 25, 1, 0, 1, 1, 1, 1]' : 0.0945628}
{'[3, 6, 0, 3, 4, 5, 0, 0, 13, 0, 26, 25, 1, 0, 1, 1, 1, 1]' : 0.090317}
{'[3, 6, 0, 3, 4, 5, 0, 0, 13, 0, 26, 25, 1, 0, 1, 1, 1, 1]' : 0.0903039}
{'[3, 6, 0, 3, 4, 5, 0, 0, 13, 0, 26, 25, 1, 0, 1, 1, 1, 1]' : 0.090318}
{'[3, 6, 0, 3, 4, 5, 0, 0, 13, 0, 26, 25, 1, 0, 1, 1, 1, 1]' : 0.092293}
{'[3, 6, 0, 3, 4, 5, 0, 0, 13, 0, 26, 25, 1, 0, 1, 1, 1, 1]' : 0.0926628}
{'[3, 6, 0, 3, 4, 5, 0, 0, 13, 0, 26, 25, 1, 0, 1, 1, 1, 1]' : 0.0915611}
{'[3, 6, 0, 3, 4, 5, 0, 0, 13, 0, 26, 25, 1, 0, 1, 1, 1, 1]' : 0.090399}
{'[3, 6, 0, 3, 4, 5, 0, 0, 13, 0, 26, 25, 1, 0, 1, 1, 1, 1]' : 0.0902729}
{'[3, 6, 0, 3, 4, 5, 0, 0, 13, 0, 26, 25, 1, 0, 1, 1, 1, 1]' : 0.0905221}
{'[3, 6, 0, 3, 4, 5, 0, 0, 13, 0, 26, 25, 1, 0, 1, 1, 1, 1]' : 0.0904262}
{'[3, 6, 0, 3, 4, 5, 0, 0, 13, 0, 26, 25, 1, 0, 1, 1, 1, 1]' : 0.0908201}
{'[3, 6, 0, 3, 4, 5, 0, 0, 13, 0, 26, 25, 1, 0, 1, 1, 1, 1]' : 0.0902982}
{'[3, 6, 0, 3, 4, 5, 0, 0, 13, 0, 26, 25, 1, 0, 1, 1, 1, 1]' : 0.0902379}
{'[3, 6, 0, 3, 4, 5, 0, 0, 13, 0, 26, 25, 1, 0, 1, 1, 1, 1]' : 0.090548}
{'[3, 6, 0, 3, 4, 5, 0, 0, 13, 0, 26, 25, 1, 0, 1, 1, 1, 1]' : 0.0904641}
{'[3, 6, 0, 3, 4, 5, 0, 0, 13, 0, 26, 25, 1, 0, 1, 1, 1, 1]' : 0.090292}
{'[3, 6, 0, 3, 4, 5, 0, 0, 13, 0, 26, 25, 1, 0, 1, 1, 1, 1]' : 0.0902281}
{'[3, 6, 0, 3, 4, 5, 0, 0, 13, 0, 26, 25, 1, 0, 1, 1, 1, 1]' : 0.0903821}
{'[3, 6, 0, 3, 4, 5, 0, 0, 13, 0, 26, 25, 1, 0, 1, 1, 1, 1]' : 0.0903201}
{'[3, 6, 0, 3, 4, 5, 0, 0, 13, 0, 26, 25, 1, 0, 1, 1, 1, 1]' : 0.0909789}
{'[3, 6, 0, 3, 4, 5, 0, 0, 13, 0, 26, 25, 1, 0, 1, 1, 1, 1]' : 0.0927069}
{'[3, 6, 0, 3, 4, 5, 0, 0, 13, 0, 26, 25, 1, 0, 1, 1, 1, 1]' : 0.092654}
{'[3, 6, 0, 3, 4, 5, 0, 0, 13, 0, 26, 25, 1, 0, 1, 1, 1, 1]' : 0.0927639}
{'[3, 6, 0, 3, 4, 5, 0, 0, 13, 0, 26, 25, 1, 0, 1, 1, 1, 1]' : 0.092613}
{'[3, 6, 0, 3, 4, 5, 0, 0, 13, 0, 26, 25, 1, 0, 1, 1, 1, 1]' : 0.092782}

out:
 ["{'[3, 6, 0, 3, 4, 5, 0, 0, 13, 0, 26, 25, 1, 0, 1, 1, 1, 1]' : 0.10252}", "{'[3, 6, 0, 3, 4, 5, 0, 0, 13, 0, 26, 25, 1, 0, 1, 1, 1, 1]' : 0.102384}", "{'[3, 6, 0, 3, 4, 5, 0, 0, 13, 0, 26, 25, 1, 0, 1, 1, 1, 1]' : 0.102504}", "{'[3, 6, 0, 3, 4, 5, 0, 0, 13, 0, 26, 25, 1, 0, 1, 1, 1, 1]' : 0.102444}", "{'[3, 6, 0, 3, 4, 5, 0, 0, 13, 0, 26, 25, 1, 0, 1, 1, 1, 1]' : 0.0945628}", "{'[3, 6, 0, 3, 4, 5, 0, 0, 13, 0, 26, 25, 1, 0, 1, 1, 1, 1]' : 0.090317}", "{'[3, 6, 0, 3, 4, 5, 0, 0, 13, 0, 26, 25, 1, 0, 1, 1, 1, 1]' : 0.0903039}", "{'[3, 6, 0, 3, 4, 5, 0, 0, 13, 0, 26, 25, 1, 0, 1, 1, 1, 1]' : 0.090318}", "{'[3, 6, 0, 3, 4, 5, 0, 0, 13, 0, 26, 25, 1, 0, 1, 1, 1, 1]' : 0.092293}", "{'[3, 6, 0, 3, 4, 5, 0, 0, 13, 0, 26, 25, 1, 0, 1, 1, 1, 1]' : 0.0926628}", "{'[3, 6, 0, 3, 4, 5, 0, 0, 13, 0, 26, 25, 1, 0, 1, 1, 1, 1]' : 0.0915611}", "{'[3, 6, 0, 3, 4, 5, 0, 0, 13, 0, 26, 25, 1, 0, 1, 1, 1, 1]' : 0.090399}", "{'[3, 6, 0, 3, 4, 5, 0, 0, 13, 0, 26, 25, 1, 0, 1, 1, 1, 1]' : 0.0902729}", "{'[3, 6, 0, 3, 4, 5, 0, 0, 13, 0, 26, 25, 1, 0, 1, 1, 1, 1]' : 0.0905221}", "{'[3, 6, 0, 3, 4, 5, 0, 0, 13, 0, 26, 25, 1, 0, 1, 1, 1, 1]' : 0.0904262}", "{'[3, 6, 0, 3, 4, 5, 0, 0, 13, 0, 26, 25, 1, 0, 1, 1, 1, 1]' : 0.0908201}", "{'[3, 6, 0, 3, 4, 5, 0, 0, 13, 0, 26, 25, 1, 0, 1, 1, 1, 1]' : 0.0902982}", "{'[3, 6, 0, 3, 4, 5, 0, 0, 13, 0, 26, 25, 1, 0, 1, 1, 1, 1]' : 0.0902379}", "{'[3, 6, 0, 3, 4, 5, 0, 0, 13, 0, 26, 25, 1, 0, 1, 1, 1, 1]' : 0.090548}", "{'[3, 6, 0, 3, 4, 5, 0, 0, 13, 0, 26, 25, 1, 0, 1, 1, 1, 1]' : 0.0904641}", "{'[3, 6, 0, 3, 4, 5, 0, 0, 13, 0, 26, 25, 1, 0, 1, 1, 1, 1]' : 0.090292}", "{'[3, 6, 0, 3, 4, 5, 0, 0, 13, 0, 26, 25, 1, 0, 1, 1, 1, 1]' : 0.0902281}", "{'[3, 6, 0, 3, 4, 5, 0, 0, 13, 0, 26, 25, 1, 0, 1, 1, 1, 1]' : 0.0903821}", "{'[3, 6, 0, 3, 4, 5, 0, 0, 13, 0, 26, 25, 1, 0, 1, 1, 1, 1]' : 0.0903201}", "{'[3, 6, 0, 3, 4, 5, 0, 0, 13, 0, 26, 25, 1, 0, 1, 1, 1, 1]' : 0.0909789}", "{'[3, 6, 0, 3, 4, 5, 0, 0, 13, 0, 26, 25, 1, 0, 1, 1, 1, 1]' : 0.0927069}", "{'[3, 6, 0, 3, 4, 5, 0, 0, 13, 0, 26, 25, 1, 0, 1, 1, 1, 1]' : 0.092654}", "{'[3, 6, 0, 3, 4, 5, 0, 0, 13, 0, 26, 25, 1, 0, 1, 1, 1, 1]' : 0.0927639}", "{'[3, 6, 0, 3, 4, 5, 0, 0, 13, 0, 26, 25, 1, 0, 1, 1, 1, 1]' : 0.092613}", "{'[3, 6, 0, 3, 4, 5, 0, 0, 13, 0, 26, 25, 1, 0, 1, 1, 1, 1]' : 0.092782}"]
returning from 'run': {'[3, 6, 0, 3, 4, 5, 0, 0, 13, 0, 26, 25, 1, 0, 1, 1, 1, 1]': ([0.10252, 0.102384, 0.102504, 0.102444, 0.0945628, 0.090317, 0.0903039, 0.090318, 0.092293, 0.0926628, 0.0915611, 0.090399, 0.0902729, 0.0905221, 0.0904262, 0.0908201, 0.0902982, 0.0902379, 0.090548, 0.0904641, 0.090292, 0.0902281, 0.0903821, 0.0903201, 0.0909789, 0.0927069, 0.092654, 0.0927639, 0.092613, 0.092782], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 6, 0, 3, 4, 5, 0, 0, 13, 0, 26, 25, 1, 0, 1, 1, 1, 1]': ([0.10252, 0.102384, 0.102504, 0.102444, 0.0945628, 0.090317, 0.0903039, 0.090318, 0.092293, 0.0926628, 0.0915611, 0.090399, 0.0902729, 0.0905221, 0.0904262, 0.0908201, 0.0902982, 0.0902379, 0.090548, 0.0904641, 0.090292, 0.0902281, 0.0903821, 0.0903201, 0.0909789, 0.0927069, 0.092654, 0.0927639, 0.092613, 0.092782], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	5
        Additions: 		6614
        Multiplications: 	2016
        Divisions: 		0
        Logical: 		0
        Reads: 			10282
        Writes: 		1082
        Comparisons:		18
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest3.exe __orio_perftest3.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest3.exe  
Program Test Output: 
{'[2, 0, 0, 1, 2, 0, 0, 0, 0, 22, 15, 0, 2, 0, 0, 0, 0, 1]' : 0.32293}
{'[2, 0, 0, 1, 2, 0, 0, 0, 0, 22, 15, 0, 2, 0, 0, 0, 0, 1]' : 0.322754}
{'[2, 0, 0, 1, 2, 0, 0, 0, 0, 22, 15, 0, 2, 0, 0, 0, 0, 1]' : 0.322718}
{'[2, 0, 0, 1, 2, 0, 0, 0, 0, 22, 15, 0, 2, 0, 0, 0, 0, 1]' : 0.322969}
{'[2, 0, 0, 1, 2, 0, 0, 0, 0, 22, 15, 0, 2, 0, 0, 0, 0, 1]' : 0.322982}
{'[2, 0, 0, 1, 2, 0, 0, 0, 0, 22, 15, 0, 2, 0, 0, 0, 0, 1]' : 0.32268}
{'[2, 0, 0, 1, 2, 0, 0, 0, 0, 22, 15, 0, 2, 0, 0, 0, 0, 1]' : 0.32357}
{'[2, 0, 0, 1, 2, 0, 0, 0, 0, 22, 15, 0, 2, 0, 0, 0, 0, 1]' : 0.322742}
{'[2, 0, 0, 1, 2, 0, 0, 0, 0, 22, 15, 0, 2, 0, 0, 0, 0, 1]' : 0.322514}
{'[2, 0, 0, 1, 2, 0, 0, 0, 0, 22, 15, 0, 2, 0, 0, 0, 0, 1]' : 0.323133}
{'[2, 0, 0, 1, 2, 0, 0, 0, 0, 22, 15, 0, 2, 0, 0, 0, 0, 1]' : 0.322655}
{'[2, 0, 0, 1, 2, 0, 0, 0, 0, 22, 15, 0, 2, 0, 0, 0, 0, 1]' : 0.325748}
{'[2, 0, 0, 1, 2, 0, 0, 0, 0, 22, 15, 0, 2, 0, 0, 0, 0, 1]' : 0.325953}
{'[2, 0, 0, 1, 2, 0, 0, 0, 0, 22, 15, 0, 2, 0, 0, 0, 0, 1]' : 0.323664}
{'[2, 0, 0, 1, 2, 0, 0, 0, 0, 22, 15, 0, 2, 0, 0, 0, 0, 1]' : 0.323082}
{'[2, 0, 0, 1, 2, 0, 0, 0, 0, 22, 15, 0, 2, 0, 0, 0, 0, 1]' : 0.323204}
{'[2, 0, 0, 1, 2, 0, 0, 0, 0, 22, 15, 0, 2, 0, 0, 0, 0, 1]' : 0.323685}
{'[2, 0, 0, 1, 2, 0, 0, 0, 0, 22, 15, 0, 2, 0, 0, 0, 0, 1]' : 0.323637}
{'[2, 0, 0, 1, 2, 0, 0, 0, 0, 22, 15, 0, 2, 0, 0, 0, 0, 1]' : 0.323966}
{'[2, 0, 0, 1, 2, 0, 0, 0, 0, 22, 15, 0, 2, 0, 0, 0, 0, 1]' : 0.324238}
{'[2, 0, 0, 1, 2, 0, 0, 0, 0, 22, 15, 0, 2, 0, 0, 0, 0, 1]' : 0.323658}
{'[2, 0, 0, 1, 2, 0, 0, 0, 0, 22, 15, 0, 2, 0, 0, 0, 0, 1]' : 0.323121}
{'[2, 0, 0, 1, 2, 0, 0, 0, 0, 22, 15, 0, 2, 0, 0, 0, 0, 1]' : 0.323401}
{'[2, 0, 0, 1, 2, 0, 0, 0, 0, 22, 15, 0, 2, 0, 0, 0, 0, 1]' : 0.323418}
{'[2, 0, 0, 1, 2, 0, 0, 0, 0, 22, 15, 0, 2, 0, 0, 0, 0, 1]' : 0.323015}
{'[2, 0, 0, 1, 2, 0, 0, 0, 0, 22, 15, 0, 2, 0, 0, 0, 0, 1]' : 0.32356}
{'[2, 0, 0, 1, 2, 0, 0, 0, 0, 22, 15, 0, 2, 0, 0, 0, 0, 1]' : 0.323578}
{'[2, 0, 0, 1, 2, 0, 0, 0, 0, 22, 15, 0, 2, 0, 0, 0, 0, 1]' : 0.323223}
{'[2, 0, 0, 1, 2, 0, 0, 0, 0, 22, 15, 0, 2, 0, 0, 0, 0, 1]' : 0.323544}
{'[2, 0, 0, 1, 2, 0, 0, 0, 0, 22, 15, 0, 2, 0, 0, 0, 0, 1]' : 0.32374}

out:
 ["{'[2, 0, 0, 1, 2, 0, 0, 0, 0, 22, 15, 0, 2, 0, 0, 0, 0, 1]' : 0.32293}", "{'[2, 0, 0, 1, 2, 0, 0, 0, 0, 22, 15, 0, 2, 0, 0, 0, 0, 1]' : 0.322754}", "{'[2, 0, 0, 1, 2, 0, 0, 0, 0, 22, 15, 0, 2, 0, 0, 0, 0, 1]' : 0.322718}", "{'[2, 0, 0, 1, 2, 0, 0, 0, 0, 22, 15, 0, 2, 0, 0, 0, 0, 1]' : 0.322969}", "{'[2, 0, 0, 1, 2, 0, 0, 0, 0, 22, 15, 0, 2, 0, 0, 0, 0, 1]' : 0.322982}", "{'[2, 0, 0, 1, 2, 0, 0, 0, 0, 22, 15, 0, 2, 0, 0, 0, 0, 1]' : 0.32268}", "{'[2, 0, 0, 1, 2, 0, 0, 0, 0, 22, 15, 0, 2, 0, 0, 0, 0, 1]' : 0.32357}", "{'[2, 0, 0, 1, 2, 0, 0, 0, 0, 22, 15, 0, 2, 0, 0, 0, 0, 1]' : 0.322742}", "{'[2, 0, 0, 1, 2, 0, 0, 0, 0, 22, 15, 0, 2, 0, 0, 0, 0, 1]' : 0.322514}", "{'[2, 0, 0, 1, 2, 0, 0, 0, 0, 22, 15, 0, 2, 0, 0, 0, 0, 1]' : 0.323133}", "{'[2, 0, 0, 1, 2, 0, 0, 0, 0, 22, 15, 0, 2, 0, 0, 0, 0, 1]' : 0.322655}", "{'[2, 0, 0, 1, 2, 0, 0, 0, 0, 22, 15, 0, 2, 0, 0, 0, 0, 1]' : 0.325748}", "{'[2, 0, 0, 1, 2, 0, 0, 0, 0, 22, 15, 0, 2, 0, 0, 0, 0, 1]' : 0.325953}", "{'[2, 0, 0, 1, 2, 0, 0, 0, 0, 22, 15, 0, 2, 0, 0, 0, 0, 1]' : 0.323664}", "{'[2, 0, 0, 1, 2, 0, 0, 0, 0, 22, 15, 0, 2, 0, 0, 0, 0, 1]' : 0.323082}", "{'[2, 0, 0, 1, 2, 0, 0, 0, 0, 22, 15, 0, 2, 0, 0, 0, 0, 1]' : 0.323204}", "{'[2, 0, 0, 1, 2, 0, 0, 0, 0, 22, 15, 0, 2, 0, 0, 0, 0, 1]' : 0.323685}", "{'[2, 0, 0, 1, 2, 0, 0, 0, 0, 22, 15, 0, 2, 0, 0, 0, 0, 1]' : 0.323637}", "{'[2, 0, 0, 1, 2, 0, 0, 0, 0, 22, 15, 0, 2, 0, 0, 0, 0, 1]' : 0.323966}", "{'[2, 0, 0, 1, 2, 0, 0, 0, 0, 22, 15, 0, 2, 0, 0, 0, 0, 1]' : 0.324238}", "{'[2, 0, 0, 1, 2, 0, 0, 0, 0, 22, 15, 0, 2, 0, 0, 0, 0, 1]' : 0.323658}", "{'[2, 0, 0, 1, 2, 0, 0, 0, 0, 22, 15, 0, 2, 0, 0, 0, 0, 1]' : 0.323121}", "{'[2, 0, 0, 1, 2, 0, 0, 0, 0, 22, 15, 0, 2, 0, 0, 0, 0, 1]' : 0.323401}", "{'[2, 0, 0, 1, 2, 0, 0, 0, 0, 22, 15, 0, 2, 0, 0, 0, 0, 1]' : 0.323418}", "{'[2, 0, 0, 1, 2, 0, 0, 0, 0, 22, 15, 0, 2, 0, 0, 0, 0, 1]' : 0.323015}", "{'[2, 0, 0, 1, 2, 0, 0, 0, 0, 22, 15, 0, 2, 0, 0, 0, 0, 1]' : 0.32356}", "{'[2, 0, 0, 1, 2, 0, 0, 0, 0, 22, 15, 0, 2, 0, 0, 0, 0, 1]' : 0.323578}", "{'[2, 0, 0, 1, 2, 0, 0, 0, 0, 22, 15, 0, 2, 0, 0, 0, 0, 1]' : 0.323223}", "{'[2, 0, 0, 1, 2, 0, 0, 0, 0, 22, 15, 0, 2, 0, 0, 0, 0, 1]' : 0.323544}", "{'[2, 0, 0, 1, 2, 0, 0, 0, 0, 22, 15, 0, 2, 0, 0, 0, 0, 1]' : 0.32374}"]
returning from 'run': {'[2, 0, 0, 1, 2, 0, 0, 0, 0, 22, 15, 0, 2, 0, 0, 0, 0, 1]': ([0.32293, 0.322754, 0.322718, 0.322969, 0.322982, 0.32268, 0.32357, 0.322742, 0.322514, 0.323133, 0.322655, 0.325748, 0.325953, 0.323664, 0.323082, 0.323204, 0.323685, 0.323637, 0.323966, 0.324238, 0.323658, 0.323121, 0.323401, 0.323418, 0.323015, 0.32356, 0.323578, 0.323223, 0.323544, 0.32374], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 0, 0, 1, 2, 0, 0, 0, 0, 22, 15, 0, 2, 0, 0, 0, 0, 1]': ([0.32293, 0.322754, 0.322718, 0.322969, 0.322982, 0.32268, 0.32357, 0.322742, 0.322514, 0.323133, 0.322655, 0.325748, 0.325953, 0.323664, 0.323082, 0.323204, 0.323685, 0.323637, 0.323966, 0.324238, 0.323658, 0.323121, 0.323401, 0.323418, 0.323015, 0.32356, 0.323578, 0.323223, 0.323544, 0.32374], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	6
        Additions: 		289
        Multiplications: 	94
        Divisions: 		0
        Logical: 		0
        Reads: 			629
        Writes: 		109
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest4.exe __orio_perftest4.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest4.exe  
Program Test Output: 
{'[1, 2, 4, 6, 0, 4, 0, 0, 27, 0, 0, 28, 0, 1, 1, 0, 0, 1]' : 0.187932}
{'[1, 2, 4, 6, 0, 4, 0, 0, 27, 0, 0, 28, 0, 1, 1, 0, 0, 1]' : 0.185444}
{'[1, 2, 4, 6, 0, 4, 0, 0, 27, 0, 0, 28, 0, 1, 1, 0, 0, 1]' : 0.184972}
{'[1, 2, 4, 6, 0, 4, 0, 0, 27, 0, 0, 28, 0, 1, 1, 0, 0, 1]' : 0.185047}
{'[1, 2, 4, 6, 0, 4, 0, 0, 27, 0, 0, 28, 0, 1, 1, 0, 0, 1]' : 0.185328}
{'[1, 2, 4, 6, 0, 4, 0, 0, 27, 0, 0, 28, 0, 1, 1, 0, 0, 1]' : 0.185992}
{'[1, 2, 4, 6, 0, 4, 0, 0, 27, 0, 0, 28, 0, 1, 1, 0, 0, 1]' : 0.185257}
{'[1, 2, 4, 6, 0, 4, 0, 0, 27, 0, 0, 28, 0, 1, 1, 0, 0, 1]' : 0.185163}
{'[1, 2, 4, 6, 0, 4, 0, 0, 27, 0, 0, 28, 0, 1, 1, 0, 0, 1]' : 0.184996}
{'[1, 2, 4, 6, 0, 4, 0, 0, 27, 0, 0, 28, 0, 1, 1, 0, 0, 1]' : 0.185029}
{'[1, 2, 4, 6, 0, 4, 0, 0, 27, 0, 0, 28, 0, 1, 1, 0, 0, 1]' : 0.185259}
{'[1, 2, 4, 6, 0, 4, 0, 0, 27, 0, 0, 28, 0, 1, 1, 0, 0, 1]' : 0.185423}
{'[1, 2, 4, 6, 0, 4, 0, 0, 27, 0, 0, 28, 0, 1, 1, 0, 0, 1]' : 0.185281}
{'[1, 2, 4, 6, 0, 4, 0, 0, 27, 0, 0, 28, 0, 1, 1, 0, 0, 1]' : 0.186033}
{'[1, 2, 4, 6, 0, 4, 0, 0, 27, 0, 0, 28, 0, 1, 1, 0, 0, 1]' : 0.185015}
{'[1, 2, 4, 6, 0, 4, 0, 0, 27, 0, 0, 28, 0, 1, 1, 0, 0, 1]' : 0.185051}
{'[1, 2, 4, 6, 0, 4, 0, 0, 27, 0, 0, 28, 0, 1, 1, 0, 0, 1]' : 0.185846}
{'[1, 2, 4, 6, 0, 4, 0, 0, 27, 0, 0, 28, 0, 1, 1, 0, 0, 1]' : 0.185175}
{'[1, 2, 4, 6, 0, 4, 0, 0, 27, 0, 0, 28, 0, 1, 1, 0, 0, 1]' : 0.185096}
{'[1, 2, 4, 6, 0, 4, 0, 0, 27, 0, 0, 28, 0, 1, 1, 0, 0, 1]' : 0.185102}
{'[1, 2, 4, 6, 0, 4, 0, 0, 27, 0, 0, 28, 0, 1, 1, 0, 0, 1]' : 0.185013}
{'[1, 2, 4, 6, 0, 4, 0, 0, 27, 0, 0, 28, 0, 1, 1, 0, 0, 1]' : 0.185294}
{'[1, 2, 4, 6, 0, 4, 0, 0, 27, 0, 0, 28, 0, 1, 1, 0, 0, 1]' : 0.185593}
{'[1, 2, 4, 6, 0, 4, 0, 0, 27, 0, 0, 28, 0, 1, 1, 0, 0, 1]' : 0.185159}
{'[1, 2, 4, 6, 0, 4, 0, 0, 27, 0, 0, 28, 0, 1, 1, 0, 0, 1]' : 0.185039}
{'[1, 2, 4, 6, 0, 4, 0, 0, 27, 0, 0, 28, 0, 1, 1, 0, 0, 1]' : 0.185118}
{'[1, 2, 4, 6, 0, 4, 0, 0, 27, 0, 0, 28, 0, 1, 1, 0, 0, 1]' : 0.18501}
{'[1, 2, 4, 6, 0, 4, 0, 0, 27, 0, 0, 28, 0, 1, 1, 0, 0, 1]' : 0.185667}
{'[1, 2, 4, 6, 0, 4, 0, 0, 27, 0, 0, 28, 0, 1, 1, 0, 0, 1]' : 0.185614}
{'[1, 2, 4, 6, 0, 4, 0, 0, 27, 0, 0, 28, 0, 1, 1, 0, 0, 1]' : 0.185134}

out:
 ["{'[1, 2, 4, 6, 0, 4, 0, 0, 27, 0, 0, 28, 0, 1, 1, 0, 0, 1]' : 0.187932}", "{'[1, 2, 4, 6, 0, 4, 0, 0, 27, 0, 0, 28, 0, 1, 1, 0, 0, 1]' : 0.185444}", "{'[1, 2, 4, 6, 0, 4, 0, 0, 27, 0, 0, 28, 0, 1, 1, 0, 0, 1]' : 0.184972}", "{'[1, 2, 4, 6, 0, 4, 0, 0, 27, 0, 0, 28, 0, 1, 1, 0, 0, 1]' : 0.185047}", "{'[1, 2, 4, 6, 0, 4, 0, 0, 27, 0, 0, 28, 0, 1, 1, 0, 0, 1]' : 0.185328}", "{'[1, 2, 4, 6, 0, 4, 0, 0, 27, 0, 0, 28, 0, 1, 1, 0, 0, 1]' : 0.185992}", "{'[1, 2, 4, 6, 0, 4, 0, 0, 27, 0, 0, 28, 0, 1, 1, 0, 0, 1]' : 0.185257}", "{'[1, 2, 4, 6, 0, 4, 0, 0, 27, 0, 0, 28, 0, 1, 1, 0, 0, 1]' : 0.185163}", "{'[1, 2, 4, 6, 0, 4, 0, 0, 27, 0, 0, 28, 0, 1, 1, 0, 0, 1]' : 0.184996}", "{'[1, 2, 4, 6, 0, 4, 0, 0, 27, 0, 0, 28, 0, 1, 1, 0, 0, 1]' : 0.185029}", "{'[1, 2, 4, 6, 0, 4, 0, 0, 27, 0, 0, 28, 0, 1, 1, 0, 0, 1]' : 0.185259}", "{'[1, 2, 4, 6, 0, 4, 0, 0, 27, 0, 0, 28, 0, 1, 1, 0, 0, 1]' : 0.185423}", "{'[1, 2, 4, 6, 0, 4, 0, 0, 27, 0, 0, 28, 0, 1, 1, 0, 0, 1]' : 0.185281}", "{'[1, 2, 4, 6, 0, 4, 0, 0, 27, 0, 0, 28, 0, 1, 1, 0, 0, 1]' : 0.186033}", "{'[1, 2, 4, 6, 0, 4, 0, 0, 27, 0, 0, 28, 0, 1, 1, 0, 0, 1]' : 0.185015}", "{'[1, 2, 4, 6, 0, 4, 0, 0, 27, 0, 0, 28, 0, 1, 1, 0, 0, 1]' : 0.185051}", "{'[1, 2, 4, 6, 0, 4, 0, 0, 27, 0, 0, 28, 0, 1, 1, 0, 0, 1]' : 0.185846}", "{'[1, 2, 4, 6, 0, 4, 0, 0, 27, 0, 0, 28, 0, 1, 1, 0, 0, 1]' : 0.185175}", "{'[1, 2, 4, 6, 0, 4, 0, 0, 27, 0, 0, 28, 0, 1, 1, 0, 0, 1]' : 0.185096}", "{'[1, 2, 4, 6, 0, 4, 0, 0, 27, 0, 0, 28, 0, 1, 1, 0, 0, 1]' : 0.185102}", "{'[1, 2, 4, 6, 0, 4, 0, 0, 27, 0, 0, 28, 0, 1, 1, 0, 0, 1]' : 0.185013}", "{'[1, 2, 4, 6, 0, 4, 0, 0, 27, 0, 0, 28, 0, 1, 1, 0, 0, 1]' : 0.185294}", "{'[1, 2, 4, 6, 0, 4, 0, 0, 27, 0, 0, 28, 0, 1, 1, 0, 0, 1]' : 0.185593}", "{'[1, 2, 4, 6, 0, 4, 0, 0, 27, 0, 0, 28, 0, 1, 1, 0, 0, 1]' : 0.185159}", "{'[1, 2, 4, 6, 0, 4, 0, 0, 27, 0, 0, 28, 0, 1, 1, 0, 0, 1]' : 0.185039}", "{'[1, 2, 4, 6, 0, 4, 0, 0, 27, 0, 0, 28, 0, 1, 1, 0, 0, 1]' : 0.185118}", "{'[1, 2, 4, 6, 0, 4, 0, 0, 27, 0, 0, 28, 0, 1, 1, 0, 0, 1]' : 0.18501}", "{'[1, 2, 4, 6, 0, 4, 0, 0, 27, 0, 0, 28, 0, 1, 1, 0, 0, 1]' : 0.185667}", "{'[1, 2, 4, 6, 0, 4, 0, 0, 27, 0, 0, 28, 0, 1, 1, 0, 0, 1]' : 0.185614}", "{'[1, 2, 4, 6, 0, 4, 0, 0, 27, 0, 0, 28, 0, 1, 1, 0, 0, 1]' : 0.185134}"]
returning from 'run': {'[1, 2, 4, 6, 0, 4, 0, 0, 27, 0, 0, 28, 0, 1, 1, 0, 0, 1]': ([0.187932, 0.185444, 0.184972, 0.185047, 0.185328, 0.185992, 0.185257, 0.185163, 0.184996, 0.185029, 0.185259, 0.185423, 0.185281, 0.186033, 0.185015, 0.185051, 0.185846, 0.185175, 0.185096, 0.185102, 0.185013, 0.185294, 0.185593, 0.185159, 0.185039, 0.185118, 0.18501, 0.185667, 0.185614, 0.185134], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 2, 4, 6, 0, 4, 0, 0, 27, 0, 0, 28, 0, 1, 1, 0, 0, 1]': ([0.187932, 0.185444, 0.184972, 0.185047, 0.185328, 0.185992, 0.185257, 0.185163, 0.184996, 0.185029, 0.185259, 0.185423, 0.185281, 0.186033, 0.185015, 0.185051, 0.185846, 0.185175, 0.185096, 0.185102, 0.185013, 0.185294, 0.185593, 0.185159, 0.185039, 0.185118, 0.18501, 0.185667, 0.185614, 0.185134], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	55
        Max loop nest depth: 	5
        Additions: 		2138
        Multiplications: 	874
        Divisions: 		0
        Logical: 		0
        Reads: 			3931
        Writes: 		664
        Comparisons:		55
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest5.exe __orio_perftest5.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest5.exe  
Program Test Output: 
{'[6, 0, 5, 0, 3, 4, 0, 0, 14, 17, 4, 0, 0, 1, 1, 1, 0, 0]' : 0.106912}
{'[6, 0, 5, 0, 3, 4, 0, 0, 14, 17, 4, 0, 0, 1, 1, 1, 0, 0]' : 0.10714}
{'[6, 0, 5, 0, 3, 4, 0, 0, 14, 17, 4, 0, 0, 1, 1, 1, 0, 0]' : 0.105159}
{'[6, 0, 5, 0, 3, 4, 0, 0, 14, 17, 4, 0, 0, 1, 1, 1, 0, 0]' : 0.105154}
{'[6, 0, 5, 0, 3, 4, 0, 0, 14, 17, 4, 0, 0, 1, 1, 1, 0, 0]' : 0.104649}
{'[6, 0, 5, 0, 3, 4, 0, 0, 14, 17, 4, 0, 0, 1, 1, 1, 0, 0]' : 0.0900822}
{'[6, 0, 5, 0, 3, 4, 0, 0, 14, 17, 4, 0, 0, 1, 1, 1, 0, 0]' : 0.0899401}
{'[6, 0, 5, 0, 3, 4, 0, 0, 14, 17, 4, 0, 0, 1, 1, 1, 0, 0]' : 0.0902178}
{'[6, 0, 5, 0, 3, 4, 0, 0, 14, 17, 4, 0, 0, 1, 1, 1, 0, 0]' : 0.0899501}
{'[6, 0, 5, 0, 3, 4, 0, 0, 14, 17, 4, 0, 0, 1, 1, 1, 0, 0]' : 0.0899639}
{'[6, 0, 5, 0, 3, 4, 0, 0, 14, 17, 4, 0, 0, 1, 1, 1, 0, 0]' : 0.0900509}
{'[6, 0, 5, 0, 3, 4, 0, 0, 14, 17, 4, 0, 0, 1, 1, 1, 0, 0]' : 0.0900071}
{'[6, 0, 5, 0, 3, 4, 0, 0, 14, 17, 4, 0, 0, 1, 1, 1, 0, 0]' : 0.0900631}
{'[6, 0, 5, 0, 3, 4, 0, 0, 14, 17, 4, 0, 0, 1, 1, 1, 0, 0]' : 0.0898809}
{'[6, 0, 5, 0, 3, 4, 0, 0, 14, 17, 4, 0, 0, 1, 1, 1, 0, 0]' : 0.09007}
{'[6, 0, 5, 0, 3, 4, 0, 0, 14, 17, 4, 0, 0, 1, 1, 1, 0, 0]' : 0.090158}
{'[6, 0, 5, 0, 3, 4, 0, 0, 14, 17, 4, 0, 0, 1, 1, 1, 0, 0]' : 0.090137}
{'[6, 0, 5, 0, 3, 4, 0, 0, 14, 17, 4, 0, 0, 1, 1, 1, 0, 0]' : 0.0901909}
{'[6, 0, 5, 0, 3, 4, 0, 0, 14, 17, 4, 0, 0, 1, 1, 1, 0, 0]' : 0.0900941}
{'[6, 0, 5, 0, 3, 4, 0, 0, 14, 17, 4, 0, 0, 1, 1, 1, 0, 0]' : 0.089962}
{'[6, 0, 5, 0, 3, 4, 0, 0, 14, 17, 4, 0, 0, 1, 1, 1, 0, 0]' : 0.090167}
{'[6, 0, 5, 0, 3, 4, 0, 0, 14, 17, 4, 0, 0, 1, 1, 1, 0, 0]' : 0.0899439}
{'[6, 0, 5, 0, 3, 4, 0, 0, 14, 17, 4, 0, 0, 1, 1, 1, 0, 0]' : 0.089896}
{'[6, 0, 5, 0, 3, 4, 0, 0, 14, 17, 4, 0, 0, 1, 1, 1, 0, 0]' : 0.0899661}
{'[6, 0, 5, 0, 3, 4, 0, 0, 14, 17, 4, 0, 0, 1, 1, 1, 0, 0]' : 0.0898919}
{'[6, 0, 5, 0, 3, 4, 0, 0, 14, 17, 4, 0, 0, 1, 1, 1, 0, 0]' : 0.0900099}
{'[6, 0, 5, 0, 3, 4, 0, 0, 14, 17, 4, 0, 0, 1, 1, 1, 0, 0]' : 0.090126}
{'[6, 0, 5, 0, 3, 4, 0, 0, 14, 17, 4, 0, 0, 1, 1, 1, 0, 0]' : 0.0899839}
{'[6, 0, 5, 0, 3, 4, 0, 0, 14, 17, 4, 0, 0, 1, 1, 1, 0, 0]' : 0.0900512}
{'[6, 0, 5, 0, 3, 4, 0, 0, 14, 17, 4, 0, 0, 1, 1, 1, 0, 0]' : 0.09003}

out:
 ["{'[6, 0, 5, 0, 3, 4, 0, 0, 14, 17, 4, 0, 0, 1, 1, 1, 0, 0]' : 0.106912}", "{'[6, 0, 5, 0, 3, 4, 0, 0, 14, 17, 4, 0, 0, 1, 1, 1, 0, 0]' : 0.10714}", "{'[6, 0, 5, 0, 3, 4, 0, 0, 14, 17, 4, 0, 0, 1, 1, 1, 0, 0]' : 0.105159}", "{'[6, 0, 5, 0, 3, 4, 0, 0, 14, 17, 4, 0, 0, 1, 1, 1, 0, 0]' : 0.105154}", "{'[6, 0, 5, 0, 3, 4, 0, 0, 14, 17, 4, 0, 0, 1, 1, 1, 0, 0]' : 0.104649}", "{'[6, 0, 5, 0, 3, 4, 0, 0, 14, 17, 4, 0, 0, 1, 1, 1, 0, 0]' : 0.0900822}", "{'[6, 0, 5, 0, 3, 4, 0, 0, 14, 17, 4, 0, 0, 1, 1, 1, 0, 0]' : 0.0899401}", "{'[6, 0, 5, 0, 3, 4, 0, 0, 14, 17, 4, 0, 0, 1, 1, 1, 0, 0]' : 0.0902178}", "{'[6, 0, 5, 0, 3, 4, 0, 0, 14, 17, 4, 0, 0, 1, 1, 1, 0, 0]' : 0.0899501}", "{'[6, 0, 5, 0, 3, 4, 0, 0, 14, 17, 4, 0, 0, 1, 1, 1, 0, 0]' : 0.0899639}", "{'[6, 0, 5, 0, 3, 4, 0, 0, 14, 17, 4, 0, 0, 1, 1, 1, 0, 0]' : 0.0900509}", "{'[6, 0, 5, 0, 3, 4, 0, 0, 14, 17, 4, 0, 0, 1, 1, 1, 0, 0]' : 0.0900071}", "{'[6, 0, 5, 0, 3, 4, 0, 0, 14, 17, 4, 0, 0, 1, 1, 1, 0, 0]' : 0.0900631}", "{'[6, 0, 5, 0, 3, 4, 0, 0, 14, 17, 4, 0, 0, 1, 1, 1, 0, 0]' : 0.0898809}", "{'[6, 0, 5, 0, 3, 4, 0, 0, 14, 17, 4, 0, 0, 1, 1, 1, 0, 0]' : 0.09007}", "{'[6, 0, 5, 0, 3, 4, 0, 0, 14, 17, 4, 0, 0, 1, 1, 1, 0, 0]' : 0.090158}", "{'[6, 0, 5, 0, 3, 4, 0, 0, 14, 17, 4, 0, 0, 1, 1, 1, 0, 0]' : 0.090137}", "{'[6, 0, 5, 0, 3, 4, 0, 0, 14, 17, 4, 0, 0, 1, 1, 1, 0, 0]' : 0.0901909}", "{'[6, 0, 5, 0, 3, 4, 0, 0, 14, 17, 4, 0, 0, 1, 1, 1, 0, 0]' : 0.0900941}", "{'[6, 0, 5, 0, 3, 4, 0, 0, 14, 17, 4, 0, 0, 1, 1, 1, 0, 0]' : 0.089962}", "{'[6, 0, 5, 0, 3, 4, 0, 0, 14, 17, 4, 0, 0, 1, 1, 1, 0, 0]' : 0.090167}", "{'[6, 0, 5, 0, 3, 4, 0, 0, 14, 17, 4, 0, 0, 1, 1, 1, 0, 0]' : 0.0899439}", "{'[6, 0, 5, 0, 3, 4, 0, 0, 14, 17, 4, 0, 0, 1, 1, 1, 0, 0]' : 0.089896}", "{'[6, 0, 5, 0, 3, 4, 0, 0, 14, 17, 4, 0, 0, 1, 1, 1, 0, 0]' : 0.0899661}", "{'[6, 0, 5, 0, 3, 4, 0, 0, 14, 17, 4, 0, 0, 1, 1, 1, 0, 0]' : 0.0898919}", "{'[6, 0, 5, 0, 3, 4, 0, 0, 14, 17, 4, 0, 0, 1, 1, 1, 0, 0]' : 0.0900099}", "{'[6, 0, 5, 0, 3, 4, 0, 0, 14, 17, 4, 0, 0, 1, 1, 1, 0, 0]' : 0.090126}", "{'[6, 0, 5, 0, 3, 4, 0, 0, 14, 17, 4, 0, 0, 1, 1, 1, 0, 0]' : 0.0899839}", "{'[6, 0, 5, 0, 3, 4, 0, 0, 14, 17, 4, 0, 0, 1, 1, 1, 0, 0]' : 0.0900512}", "{'[6, 0, 5, 0, 3, 4, 0, 0, 14, 17, 4, 0, 0, 1, 1, 1, 0, 0]' : 0.09003}"]
returning from 'run': {'[6, 0, 5, 0, 3, 4, 0, 0, 14, 17, 4, 0, 0, 1, 1, 1, 0, 0]': ([0.106912, 0.10714, 0.105159, 0.105154, 0.104649, 0.0900822, 0.0899401, 0.0902178, 0.0899501, 0.0899639, 0.0900509, 0.0900071, 0.0900631, 0.0898809, 0.09007, 0.090158, 0.090137, 0.0901909, 0.0900941, 0.089962, 0.090167, 0.0899439, 0.089896, 0.0899661, 0.0898919, 0.0900099, 0.090126, 0.0899839, 0.0900512, 0.09003], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 5, 0, 3, 4, 0, 0, 14, 17, 4, 0, 0, 1, 1, 1, 0, 0]': ([0.106912, 0.10714, 0.105159, 0.105154, 0.104649, 0.0900822, 0.0899401, 0.0902178, 0.0899501, 0.0899639, 0.0900509, 0.0900071, 0.0900631, 0.0898809, 0.09007, 0.090158, 0.090137, 0.0901909, 0.0900941, 0.089962, 0.090167, 0.0899439, 0.089896, 0.0899661, 0.0898919, 0.0900099, 0.090126, 0.0899839, 0.0900512, 0.09003], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	102
        Max loop nest depth: 	5
        Additions: 		6187
        Multiplications: 	1920
        Divisions: 		0
        Logical: 		0
        Reads: 			9788
        Writes: 		1293
        Comparisons:		102
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest6.exe __orio_perftest6.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest6.exe  
Program Test Output: 
{'[2, 3, 5, 4, 0, 0, 1, 0, 3, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.214996}
{'[2, 3, 5, 4, 0, 0, 1, 0, 3, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.215312}
{'[2, 3, 5, 4, 0, 0, 1, 0, 3, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.214275}
{'[2, 3, 5, 4, 0, 0, 1, 0, 3, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.214741}
{'[2, 3, 5, 4, 0, 0, 1, 0, 3, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.214465}
{'[2, 3, 5, 4, 0, 0, 1, 0, 3, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.215052}
{'[2, 3, 5, 4, 0, 0, 1, 0, 3, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.215518}
{'[2, 3, 5, 4, 0, 0, 1, 0, 3, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.21446}
{'[2, 3, 5, 4, 0, 0, 1, 0, 3, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.214873}
{'[2, 3, 5, 4, 0, 0, 1, 0, 3, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.21492}
{'[2, 3, 5, 4, 0, 0, 1, 0, 3, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.214916}
{'[2, 3, 5, 4, 0, 0, 1, 0, 3, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.21553}
{'[2, 3, 5, 4, 0, 0, 1, 0, 3, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.215455}
{'[2, 3, 5, 4, 0, 0, 1, 0, 3, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.215652}
{'[2, 3, 5, 4, 0, 0, 1, 0, 3, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.214631}
{'[2, 3, 5, 4, 0, 0, 1, 0, 3, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.215357}
{'[2, 3, 5, 4, 0, 0, 1, 0, 3, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.2156}
{'[2, 3, 5, 4, 0, 0, 1, 0, 3, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.215049}
{'[2, 3, 5, 4, 0, 0, 1, 0, 3, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.214765}
{'[2, 3, 5, 4, 0, 0, 1, 0, 3, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.214578}
{'[2, 3, 5, 4, 0, 0, 1, 0, 3, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.215183}
{'[2, 3, 5, 4, 0, 0, 1, 0, 3, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.21507}
{'[2, 3, 5, 4, 0, 0, 1, 0, 3, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.215078}
{'[2, 3, 5, 4, 0, 0, 1, 0, 3, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.214886}
{'[2, 3, 5, 4, 0, 0, 1, 0, 3, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.214596}
{'[2, 3, 5, 4, 0, 0, 1, 0, 3, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.21478}
{'[2, 3, 5, 4, 0, 0, 1, 0, 3, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.214835}
{'[2, 3, 5, 4, 0, 0, 1, 0, 3, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.215092}
{'[2, 3, 5, 4, 0, 0, 1, 0, 3, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.215541}
{'[2, 3, 5, 4, 0, 0, 1, 0, 3, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.214771}

out:
 ["{'[2, 3, 5, 4, 0, 0, 1, 0, 3, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.214996}", "{'[2, 3, 5, 4, 0, 0, 1, 0, 3, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.215312}", "{'[2, 3, 5, 4, 0, 0, 1, 0, 3, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.214275}", "{'[2, 3, 5, 4, 0, 0, 1, 0, 3, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.214741}", "{'[2, 3, 5, 4, 0, 0, 1, 0, 3, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.214465}", "{'[2, 3, 5, 4, 0, 0, 1, 0, 3, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.215052}", "{'[2, 3, 5, 4, 0, 0, 1, 0, 3, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.215518}", "{'[2, 3, 5, 4, 0, 0, 1, 0, 3, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.21446}", "{'[2, 3, 5, 4, 0, 0, 1, 0, 3, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.214873}", "{'[2, 3, 5, 4, 0, 0, 1, 0, 3, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.21492}", "{'[2, 3, 5, 4, 0, 0, 1, 0, 3, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.214916}", "{'[2, 3, 5, 4, 0, 0, 1, 0, 3, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.21553}", "{'[2, 3, 5, 4, 0, 0, 1, 0, 3, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.215455}", "{'[2, 3, 5, 4, 0, 0, 1, 0, 3, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.215652}", "{'[2, 3, 5, 4, 0, 0, 1, 0, 3, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.214631}", "{'[2, 3, 5, 4, 0, 0, 1, 0, 3, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.215357}", "{'[2, 3, 5, 4, 0, 0, 1, 0, 3, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.2156}", "{'[2, 3, 5, 4, 0, 0, 1, 0, 3, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.215049}", "{'[2, 3, 5, 4, 0, 0, 1, 0, 3, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.214765}", "{'[2, 3, 5, 4, 0, 0, 1, 0, 3, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.214578}", "{'[2, 3, 5, 4, 0, 0, 1, 0, 3, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.215183}", "{'[2, 3, 5, 4, 0, 0, 1, 0, 3, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.21507}", "{'[2, 3, 5, 4, 0, 0, 1, 0, 3, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.215078}", "{'[2, 3, 5, 4, 0, 0, 1, 0, 3, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.214886}", "{'[2, 3, 5, 4, 0, 0, 1, 0, 3, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.214596}", "{'[2, 3, 5, 4, 0, 0, 1, 0, 3, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.21478}", "{'[2, 3, 5, 4, 0, 0, 1, 0, 3, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.214835}", "{'[2, 3, 5, 4, 0, 0, 1, 0, 3, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.215092}", "{'[2, 3, 5, 4, 0, 0, 1, 0, 3, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.215541}", "{'[2, 3, 5, 4, 0, 0, 1, 0, 3, 28, 29, 0, 0, 0, 0, 1, 0, 0]' : 0.214771}"]
returning from 'run': {'[2, 3, 5, 4, 0, 0, 1, 0, 3, 28, 29, 0, 0, 0, 0, 1, 0, 0]': ([0.214996, 0.215312, 0.214275, 0.214741, 0.214465, 0.215052, 0.215518, 0.21446, 0.214873, 0.21492, 0.214916, 0.21553, 0.215455, 0.215652, 0.214631, 0.215357, 0.2156, 0.215049, 0.214765, 0.214578, 0.215183, 0.21507, 0.215078, 0.214886, 0.214596, 0.21478, 0.214835, 0.215092, 0.215541, 0.214771], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 3, 5, 4, 0, 0, 1, 0, 3, 28, 29, 0, 0, 0, 0, 1, 0, 0]': ([0.214996, 0.215312, 0.214275, 0.214741, 0.214465, 0.215052, 0.215518, 0.21446, 0.214873, 0.21492, 0.214916, 0.21553, 0.215455, 0.215652, 0.214631, 0.215357, 0.2156, 0.215049, 0.214765, 0.214578, 0.215183, 0.21507, 0.215078, 0.214886, 0.214596, 0.21478, 0.214835, 0.215092, 0.215541, 0.214771], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	102
        Max loop nest depth: 	5
        Additions: 		8826
        Multiplications: 	3422
        Divisions: 		0
        Logical: 		0
        Reads: 			18093
        Writes: 		3684
        Comparisons:		102
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest7.exe __orio_perftest7.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest7.exe  
Program Test Output: 
{'[0, 0, 3, 5, 2, 2, 1, 0, 11, 27, 0, 24, 0, 0, 2, 1, 1, 0]' : 0.223122}
{'[0, 0, 3, 5, 2, 2, 1, 0, 11, 27, 0, 24, 0, 0, 2, 1, 1, 0]' : 0.221289}
{'[0, 0, 3, 5, 2, 2, 1, 0, 11, 27, 0, 24, 0, 0, 2, 1, 1, 0]' : 0.196258}
{'[0, 0, 3, 5, 2, 2, 1, 0, 11, 27, 0, 24, 0, 0, 2, 1, 1, 0]' : 0.195022}
{'[0, 0, 3, 5, 2, 2, 1, 0, 11, 27, 0, 24, 0, 0, 2, 1, 1, 0]' : 0.194258}
{'[0, 0, 3, 5, 2, 2, 1, 0, 11, 27, 0, 24, 0, 0, 2, 1, 1, 0]' : 0.191616}
{'[0, 0, 3, 5, 2, 2, 1, 0, 11, 27, 0, 24, 0, 0, 2, 1, 1, 0]' : 0.192384}
{'[0, 0, 3, 5, 2, 2, 1, 0, 11, 27, 0, 24, 0, 0, 2, 1, 1, 0]' : 0.201985}
{'[0, 0, 3, 5, 2, 2, 1, 0, 11, 27, 0, 24, 0, 0, 2, 1, 1, 0]' : 0.202751}
{'[0, 0, 3, 5, 2, 2, 1, 0, 11, 27, 0, 24, 0, 0, 2, 1, 1, 0]' : 0.202454}
{'[0, 0, 3, 5, 2, 2, 1, 0, 11, 27, 0, 24, 0, 0, 2, 1, 1, 0]' : 0.202647}
{'[0, 0, 3, 5, 2, 2, 1, 0, 11, 27, 0, 24, 0, 0, 2, 1, 1, 0]' : 0.202355}
{'[0, 0, 3, 5, 2, 2, 1, 0, 11, 27, 0, 24, 0, 0, 2, 1, 1, 0]' : 0.202303}
{'[0, 0, 3, 5, 2, 2, 1, 0, 11, 27, 0, 24, 0, 0, 2, 1, 1, 0]' : 0.202645}
{'[0, 0, 3, 5, 2, 2, 1, 0, 11, 27, 0, 24, 0, 0, 2, 1, 1, 0]' : 0.200822}
{'[0, 0, 3, 5, 2, 2, 1, 0, 11, 27, 0, 24, 0, 0, 2, 1, 1, 0]' : 0.202083}
{'[0, 0, 3, 5, 2, 2, 1, 0, 11, 27, 0, 24, 0, 0, 2, 1, 1, 0]' : 0.202358}
{'[0, 0, 3, 5, 2, 2, 1, 0, 11, 27, 0, 24, 0, 0, 2, 1, 1, 0]' : 0.196624}
{'[0, 0, 3, 5, 2, 2, 1, 0, 11, 27, 0, 24, 0, 0, 2, 1, 1, 0]' : 0.195547}
{'[0, 0, 3, 5, 2, 2, 1, 0, 11, 27, 0, 24, 0, 0, 2, 1, 1, 0]' : 0.194578}
{'[0, 0, 3, 5, 2, 2, 1, 0, 11, 27, 0, 24, 0, 0, 2, 1, 1, 0]' : 0.196989}
{'[0, 0, 3, 5, 2, 2, 1, 0, 11, 27, 0, 24, 0, 0, 2, 1, 1, 0]' : 0.197663}
{'[0, 0, 3, 5, 2, 2, 1, 0, 11, 27, 0, 24, 0, 0, 2, 1, 1, 0]' : 0.196648}
{'[0, 0, 3, 5, 2, 2, 1, 0, 11, 27, 0, 24, 0, 0, 2, 1, 1, 0]' : 0.196526}
{'[0, 0, 3, 5, 2, 2, 1, 0, 11, 27, 0, 24, 0, 0, 2, 1, 1, 0]' : 0.199127}
{'[0, 0, 3, 5, 2, 2, 1, 0, 11, 27, 0, 24, 0, 0, 2, 1, 1, 0]' : 0.202631}
{'[0, 0, 3, 5, 2, 2, 1, 0, 11, 27, 0, 24, 0, 0, 2, 1, 1, 0]' : 0.202563}
{'[0, 0, 3, 5, 2, 2, 1, 0, 11, 27, 0, 24, 0, 0, 2, 1, 1, 0]' : 0.20219}
{'[0, 0, 3, 5, 2, 2, 1, 0, 11, 27, 0, 24, 0, 0, 2, 1, 1, 0]' : 0.202194}
{'[0, 0, 3, 5, 2, 2, 1, 0, 11, 27, 0, 24, 0, 0, 2, 1, 1, 0]' : 0.202467}

out:
 ["{'[0, 0, 3, 5, 2, 2, 1, 0, 11, 27, 0, 24, 0, 0, 2, 1, 1, 0]' : 0.223122}", "{'[0, 0, 3, 5, 2, 2, 1, 0, 11, 27, 0, 24, 0, 0, 2, 1, 1, 0]' : 0.221289}", "{'[0, 0, 3, 5, 2, 2, 1, 0, 11, 27, 0, 24, 0, 0, 2, 1, 1, 0]' : 0.196258}", "{'[0, 0, 3, 5, 2, 2, 1, 0, 11, 27, 0, 24, 0, 0, 2, 1, 1, 0]' : 0.195022}", "{'[0, 0, 3, 5, 2, 2, 1, 0, 11, 27, 0, 24, 0, 0, 2, 1, 1, 0]' : 0.194258}", "{'[0, 0, 3, 5, 2, 2, 1, 0, 11, 27, 0, 24, 0, 0, 2, 1, 1, 0]' : 0.191616}", "{'[0, 0, 3, 5, 2, 2, 1, 0, 11, 27, 0, 24, 0, 0, 2, 1, 1, 0]' : 0.192384}", "{'[0, 0, 3, 5, 2, 2, 1, 0, 11, 27, 0, 24, 0, 0, 2, 1, 1, 0]' : 0.201985}", "{'[0, 0, 3, 5, 2, 2, 1, 0, 11, 27, 0, 24, 0, 0, 2, 1, 1, 0]' : 0.202751}", "{'[0, 0, 3, 5, 2, 2, 1, 0, 11, 27, 0, 24, 0, 0, 2, 1, 1, 0]' : 0.202454}", "{'[0, 0, 3, 5, 2, 2, 1, 0, 11, 27, 0, 24, 0, 0, 2, 1, 1, 0]' : 0.202647}", "{'[0, 0, 3, 5, 2, 2, 1, 0, 11, 27, 0, 24, 0, 0, 2, 1, 1, 0]' : 0.202355}", "{'[0, 0, 3, 5, 2, 2, 1, 0, 11, 27, 0, 24, 0, 0, 2, 1, 1, 0]' : 0.202303}", "{'[0, 0, 3, 5, 2, 2, 1, 0, 11, 27, 0, 24, 0, 0, 2, 1, 1, 0]' : 0.202645}", "{'[0, 0, 3, 5, 2, 2, 1, 0, 11, 27, 0, 24, 0, 0, 2, 1, 1, 0]' : 0.200822}", "{'[0, 0, 3, 5, 2, 2, 1, 0, 11, 27, 0, 24, 0, 0, 2, 1, 1, 0]' : 0.202083}", "{'[0, 0, 3, 5, 2, 2, 1, 0, 11, 27, 0, 24, 0, 0, 2, 1, 1, 0]' : 0.202358}", "{'[0, 0, 3, 5, 2, 2, 1, 0, 11, 27, 0, 24, 0, 0, 2, 1, 1, 0]' : 0.196624}", "{'[0, 0, 3, 5, 2, 2, 1, 0, 11, 27, 0, 24, 0, 0, 2, 1, 1, 0]' : 0.195547}", "{'[0, 0, 3, 5, 2, 2, 1, 0, 11, 27, 0, 24, 0, 0, 2, 1, 1, 0]' : 0.194578}", "{'[0, 0, 3, 5, 2, 2, 1, 0, 11, 27, 0, 24, 0, 0, 2, 1, 1, 0]' : 0.196989}", "{'[0, 0, 3, 5, 2, 2, 1, 0, 11, 27, 0, 24, 0, 0, 2, 1, 1, 0]' : 0.197663}", "{'[0, 0, 3, 5, 2, 2, 1, 0, 11, 27, 0, 24, 0, 0, 2, 1, 1, 0]' : 0.196648}", "{'[0, 0, 3, 5, 2, 2, 1, 0, 11, 27, 0, 24, 0, 0, 2, 1, 1, 0]' : 0.196526}", "{'[0, 0, 3, 5, 2, 2, 1, 0, 11, 27, 0, 24, 0, 0, 2, 1, 1, 0]' : 0.199127}", "{'[0, 0, 3, 5, 2, 2, 1, 0, 11, 27, 0, 24, 0, 0, 2, 1, 1, 0]' : 0.202631}", "{'[0, 0, 3, 5, 2, 2, 1, 0, 11, 27, 0, 24, 0, 0, 2, 1, 1, 0]' : 0.202563}", "{'[0, 0, 3, 5, 2, 2, 1, 0, 11, 27, 0, 24, 0, 0, 2, 1, 1, 0]' : 0.20219}", "{'[0, 0, 3, 5, 2, 2, 1, 0, 11, 27, 0, 24, 0, 0, 2, 1, 1, 0]' : 0.202194}", "{'[0, 0, 3, 5, 2, 2, 1, 0, 11, 27, 0, 24, 0, 0, 2, 1, 1, 0]' : 0.202467}"]
returning from 'run': {'[0, 0, 3, 5, 2, 2, 1, 0, 11, 27, 0, 24, 0, 0, 2, 1, 1, 0]': ([0.223122, 0.221289, 0.196258, 0.195022, 0.194258, 0.191616, 0.192384, 0.201985, 0.202751, 0.202454, 0.202647, 0.202355, 0.202303, 0.202645, 0.200822, 0.202083, 0.202358, 0.196624, 0.195547, 0.194578, 0.196989, 0.197663, 0.196648, 0.196526, 0.199127, 0.202631, 0.202563, 0.20219, 0.202194, 0.202467], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 3, 5, 2, 2, 1, 0, 11, 27, 0, 24, 0, 0, 2, 1, 1, 0]': ([0.223122, 0.221289, 0.196258, 0.195022, 0.194258, 0.191616, 0.192384, 0.201985, 0.202751, 0.202454, 0.202647, 0.202355, 0.202303, 0.202645, 0.200822, 0.202083, 0.202358, 0.196624, 0.195547, 0.194578, 0.196989, 0.197663, 0.196648, 0.196526, 0.199127, 0.202631, 0.202563, 0.20219, 0.202194, 0.202467], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	6
        Additions: 		5826
        Multiplications: 	1452
        Divisions: 		0
        Logical: 		0
        Reads: 			8526
        Writes: 		787
        Comparisons:		24
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest8.exe __orio_perftest8.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest8.exe  
Program Test Output: 
{'[1, 6, 2, 4, 5, 0, 0, 1, 5, 0, 4, 14, 2, 0, 0, 0, 0, 0]' : 0.336805}
{'[1, 6, 2, 4, 5, 0, 0, 1, 5, 0, 4, 14, 2, 0, 0, 0, 0, 0]' : 0.311271}
{'[1, 6, 2, 4, 5, 0, 0, 1, 5, 0, 4, 14, 2, 0, 0, 0, 0, 0]' : 0.282707}
{'[1, 6, 2, 4, 5, 0, 0, 1, 5, 0, 4, 14, 2, 0, 0, 0, 0, 0]' : 0.282935}
{'[1, 6, 2, 4, 5, 0, 0, 1, 5, 0, 4, 14, 2, 0, 0, 0, 0, 0]' : 0.282691}
{'[1, 6, 2, 4, 5, 0, 0, 1, 5, 0, 4, 14, 2, 0, 0, 0, 0, 0]' : 0.283679}
{'[1, 6, 2, 4, 5, 0, 0, 1, 5, 0, 4, 14, 2, 0, 0, 0, 0, 0]' : 0.28285}
{'[1, 6, 2, 4, 5, 0, 0, 1, 5, 0, 4, 14, 2, 0, 0, 0, 0, 0]' : 0.28269}
{'[1, 6, 2, 4, 5, 0, 0, 1, 5, 0, 4, 14, 2, 0, 0, 0, 0, 0]' : 0.282695}
{'[1, 6, 2, 4, 5, 0, 0, 1, 5, 0, 4, 14, 2, 0, 0, 0, 0, 0]' : 0.283045}
{'[1, 6, 2, 4, 5, 0, 0, 1, 5, 0, 4, 14, 2, 0, 0, 0, 0, 0]' : 0.28284}
{'[1, 6, 2, 4, 5, 0, 0, 1, 5, 0, 4, 14, 2, 0, 0, 0, 0, 0]' : 0.283079}
{'[1, 6, 2, 4, 5, 0, 0, 1, 5, 0, 4, 14, 2, 0, 0, 0, 0, 0]' : 0.282744}
{'[1, 6, 2, 4, 5, 0, 0, 1, 5, 0, 4, 14, 2, 0, 0, 0, 0, 0]' : 0.28318}
{'[1, 6, 2, 4, 5, 0, 0, 1, 5, 0, 4, 14, 2, 0, 0, 0, 0, 0]' : 0.283428}
{'[1, 6, 2, 4, 5, 0, 0, 1, 5, 0, 4, 14, 2, 0, 0, 0, 0, 0]' : 0.282654}
{'[1, 6, 2, 4, 5, 0, 0, 1, 5, 0, 4, 14, 2, 0, 0, 0, 0, 0]' : 0.282989}
{'[1, 6, 2, 4, 5, 0, 0, 1, 5, 0, 4, 14, 2, 0, 0, 0, 0, 0]' : 0.282974}
{'[1, 6, 2, 4, 5, 0, 0, 1, 5, 0, 4, 14, 2, 0, 0, 0, 0, 0]' : 0.282674}
{'[1, 6, 2, 4, 5, 0, 0, 1, 5, 0, 4, 14, 2, 0, 0, 0, 0, 0]' : 0.283081}
{'[1, 6, 2, 4, 5, 0, 0, 1, 5, 0, 4, 14, 2, 0, 0, 0, 0, 0]' : 0.282826}
{'[1, 6, 2, 4, 5, 0, 0, 1, 5, 0, 4, 14, 2, 0, 0, 0, 0, 0]' : 0.282948}
{'[1, 6, 2, 4, 5, 0, 0, 1, 5, 0, 4, 14, 2, 0, 0, 0, 0, 0]' : 0.282545}
{'[1, 6, 2, 4, 5, 0, 0, 1, 5, 0, 4, 14, 2, 0, 0, 0, 0, 0]' : 0.28267}
{'[1, 6, 2, 4, 5, 0, 0, 1, 5, 0, 4, 14, 2, 0, 0, 0, 0, 0]' : 0.283192}
{'[1, 6, 2, 4, 5, 0, 0, 1, 5, 0, 4, 14, 2, 0, 0, 0, 0, 0]' : 0.282778}
{'[1, 6, 2, 4, 5, 0, 0, 1, 5, 0, 4, 14, 2, 0, 0, 0, 0, 0]' : 0.282739}
{'[1, 6, 2, 4, 5, 0, 0, 1, 5, 0, 4, 14, 2, 0, 0, 0, 0, 0]' : 0.282679}
{'[1, 6, 2, 4, 5, 0, 0, 1, 5, 0, 4, 14, 2, 0, 0, 0, 0, 0]' : 0.282882}
{'[1, 6, 2, 4, 5, 0, 0, 1, 5, 0, 4, 14, 2, 0, 0, 0, 0, 0]' : 0.282798}

out:
 ["{'[1, 6, 2, 4, 5, 0, 0, 1, 5, 0, 4, 14, 2, 0, 0, 0, 0, 0]' : 0.336805}", "{'[1, 6, 2, 4, 5, 0, 0, 1, 5, 0, 4, 14, 2, 0, 0, 0, 0, 0]' : 0.311271}", "{'[1, 6, 2, 4, 5, 0, 0, 1, 5, 0, 4, 14, 2, 0, 0, 0, 0, 0]' : 0.282707}", "{'[1, 6, 2, 4, 5, 0, 0, 1, 5, 0, 4, 14, 2, 0, 0, 0, 0, 0]' : 0.282935}", "{'[1, 6, 2, 4, 5, 0, 0, 1, 5, 0, 4, 14, 2, 0, 0, 0, 0, 0]' : 0.282691}", "{'[1, 6, 2, 4, 5, 0, 0, 1, 5, 0, 4, 14, 2, 0, 0, 0, 0, 0]' : 0.283679}", "{'[1, 6, 2, 4, 5, 0, 0, 1, 5, 0, 4, 14, 2, 0, 0, 0, 0, 0]' : 0.28285}", "{'[1, 6, 2, 4, 5, 0, 0, 1, 5, 0, 4, 14, 2, 0, 0, 0, 0, 0]' : 0.28269}", "{'[1, 6, 2, 4, 5, 0, 0, 1, 5, 0, 4, 14, 2, 0, 0, 0, 0, 0]' : 0.282695}", "{'[1, 6, 2, 4, 5, 0, 0, 1, 5, 0, 4, 14, 2, 0, 0, 0, 0, 0]' : 0.283045}", "{'[1, 6, 2, 4, 5, 0, 0, 1, 5, 0, 4, 14, 2, 0, 0, 0, 0, 0]' : 0.28284}", "{'[1, 6, 2, 4, 5, 0, 0, 1, 5, 0, 4, 14, 2, 0, 0, 0, 0, 0]' : 0.283079}", "{'[1, 6, 2, 4, 5, 0, 0, 1, 5, 0, 4, 14, 2, 0, 0, 0, 0, 0]' : 0.282744}", "{'[1, 6, 2, 4, 5, 0, 0, 1, 5, 0, 4, 14, 2, 0, 0, 0, 0, 0]' : 0.28318}", "{'[1, 6, 2, 4, 5, 0, 0, 1, 5, 0, 4, 14, 2, 0, 0, 0, 0, 0]' : 0.283428}", "{'[1, 6, 2, 4, 5, 0, 0, 1, 5, 0, 4, 14, 2, 0, 0, 0, 0, 0]' : 0.282654}", "{'[1, 6, 2, 4, 5, 0, 0, 1, 5, 0, 4, 14, 2, 0, 0, 0, 0, 0]' : 0.282989}", "{'[1, 6, 2, 4, 5, 0, 0, 1, 5, 0, 4, 14, 2, 0, 0, 0, 0, 0]' : 0.282974}", "{'[1, 6, 2, 4, 5, 0, 0, 1, 5, 0, 4, 14, 2, 0, 0, 0, 0, 0]' : 0.282674}", "{'[1, 6, 2, 4, 5, 0, 0, 1, 5, 0, 4, 14, 2, 0, 0, 0, 0, 0]' : 0.283081}", "{'[1, 6, 2, 4, 5, 0, 0, 1, 5, 0, 4, 14, 2, 0, 0, 0, 0, 0]' : 0.282826}", "{'[1, 6, 2, 4, 5, 0, 0, 1, 5, 0, 4, 14, 2, 0, 0, 0, 0, 0]' : 0.282948}", "{'[1, 6, 2, 4, 5, 0, 0, 1, 5, 0, 4, 14, 2, 0, 0, 0, 0, 0]' : 0.282545}", "{'[1, 6, 2, 4, 5, 0, 0, 1, 5, 0, 4, 14, 2, 0, 0, 0, 0, 0]' : 0.28267}", "{'[1, 6, 2, 4, 5, 0, 0, 1, 5, 0, 4, 14, 2, 0, 0, 0, 0, 0]' : 0.283192}", "{'[1, 6, 2, 4, 5, 0, 0, 1, 5, 0, 4, 14, 2, 0, 0, 0, 0, 0]' : 0.282778}", "{'[1, 6, 2, 4, 5, 0, 0, 1, 5, 0, 4, 14, 2, 0, 0, 0, 0, 0]' : 0.282739}", "{'[1, 6, 2, 4, 5, 0, 0, 1, 5, 0, 4, 14, 2, 0, 0, 0, 0, 0]' : 0.282679}", "{'[1, 6, 2, 4, 5, 0, 0, 1, 5, 0, 4, 14, 2, 0, 0, 0, 0, 0]' : 0.282882}", "{'[1, 6, 2, 4, 5, 0, 0, 1, 5, 0, 4, 14, 2, 0, 0, 0, 0, 0]' : 0.282798}"]
returning from 'run': {'[1, 6, 2, 4, 5, 0, 0, 1, 5, 0, 4, 14, 2, 0, 0, 0, 0, 0]': ([0.336805, 0.311271, 0.282707, 0.282935, 0.282691, 0.283679, 0.28285, 0.28269, 0.282695, 0.283045, 0.28284, 0.283079, 0.282744, 0.28318, 0.283428, 0.282654, 0.282989, 0.282974, 0.282674, 0.283081, 0.282826, 0.282948, 0.282545, 0.28267, 0.283192, 0.282778, 0.282739, 0.282679, 0.282882, 0.282798], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 6, 2, 4, 5, 0, 0, 1, 5, 0, 4, 14, 2, 0, 0, 0, 0, 0]': ([0.336805, 0.311271, 0.282707, 0.282935, 0.282691, 0.283679, 0.28285, 0.28269, 0.282695, 0.283045, 0.28284, 0.283079, 0.282744, 0.28318, 0.283428, 0.282654, 0.282989, 0.282974, 0.282674, 0.283081, 0.282826, 0.282948, 0.282545, 0.28267, 0.283192, 0.282778, 0.282739, 0.282679, 0.282882, 0.282798], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	43
        Max loop nest depth: 	6
        Additions: 		2148
        Multiplications: 	888
        Divisions: 		0
        Logical: 		0
        Reads: 			4264
        Writes: 		766
        Comparisons:		43
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest9.exe __orio_perftest9.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest9.exe  
Program Test Output: 
{'[3, 3, 4, 6, 1, 6, 0, 1, 5, 3, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.19745}
{'[3, 3, 4, 6, 1, 6, 0, 1, 5, 3, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.197162}
{'[3, 3, 4, 6, 1, 6, 0, 1, 5, 3, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.190066}
{'[3, 3, 4, 6, 1, 6, 0, 1, 5, 3, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.173734}
{'[3, 3, 4, 6, 1, 6, 0, 1, 5, 3, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.173834}
{'[3, 3, 4, 6, 1, 6, 0, 1, 5, 3, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.173816}
{'[3, 3, 4, 6, 1, 6, 0, 1, 5, 3, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.174318}
{'[3, 3, 4, 6, 1, 6, 0, 1, 5, 3, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.17424}
{'[3, 3, 4, 6, 1, 6, 0, 1, 5, 3, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.173628}
{'[3, 3, 4, 6, 1, 6, 0, 1, 5, 3, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.174174}
{'[3, 3, 4, 6, 1, 6, 0, 1, 5, 3, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.174143}
{'[3, 3, 4, 6, 1, 6, 0, 1, 5, 3, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.17362}
{'[3, 3, 4, 6, 1, 6, 0, 1, 5, 3, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.174033}
{'[3, 3, 4, 6, 1, 6, 0, 1, 5, 3, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.173955}
{'[3, 3, 4, 6, 1, 6, 0, 1, 5, 3, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.174025}
{'[3, 3, 4, 6, 1, 6, 0, 1, 5, 3, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.17354}
{'[3, 3, 4, 6, 1, 6, 0, 1, 5, 3, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.173563}
{'[3, 3, 4, 6, 1, 6, 0, 1, 5, 3, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.174304}
{'[3, 3, 4, 6, 1, 6, 0, 1, 5, 3, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.174694}
{'[3, 3, 4, 6, 1, 6, 0, 1, 5, 3, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.173777}
{'[3, 3, 4, 6, 1, 6, 0, 1, 5, 3, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.174033}
{'[3, 3, 4, 6, 1, 6, 0, 1, 5, 3, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.173543}
{'[3, 3, 4, 6, 1, 6, 0, 1, 5, 3, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.174529}
{'[3, 3, 4, 6, 1, 6, 0, 1, 5, 3, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.173553}
{'[3, 3, 4, 6, 1, 6, 0, 1, 5, 3, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.173881}
{'[3, 3, 4, 6, 1, 6, 0, 1, 5, 3, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.173873}
{'[3, 3, 4, 6, 1, 6, 0, 1, 5, 3, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.17402}
{'[3, 3, 4, 6, 1, 6, 0, 1, 5, 3, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.173979}
{'[3, 3, 4, 6, 1, 6, 0, 1, 5, 3, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.174395}
{'[3, 3, 4, 6, 1, 6, 0, 1, 5, 3, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.174486}

out:
 ["{'[3, 3, 4, 6, 1, 6, 0, 1, 5, 3, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.19745}", "{'[3, 3, 4, 6, 1, 6, 0, 1, 5, 3, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.197162}", "{'[3, 3, 4, 6, 1, 6, 0, 1, 5, 3, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.190066}", "{'[3, 3, 4, 6, 1, 6, 0, 1, 5, 3, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.173734}", "{'[3, 3, 4, 6, 1, 6, 0, 1, 5, 3, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.173834}", "{'[3, 3, 4, 6, 1, 6, 0, 1, 5, 3, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.173816}", "{'[3, 3, 4, 6, 1, 6, 0, 1, 5, 3, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.174318}", "{'[3, 3, 4, 6, 1, 6, 0, 1, 5, 3, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.17424}", "{'[3, 3, 4, 6, 1, 6, 0, 1, 5, 3, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.173628}", "{'[3, 3, 4, 6, 1, 6, 0, 1, 5, 3, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.174174}", "{'[3, 3, 4, 6, 1, 6, 0, 1, 5, 3, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.174143}", "{'[3, 3, 4, 6, 1, 6, 0, 1, 5, 3, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.17362}", "{'[3, 3, 4, 6, 1, 6, 0, 1, 5, 3, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.174033}", "{'[3, 3, 4, 6, 1, 6, 0, 1, 5, 3, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.173955}", "{'[3, 3, 4, 6, 1, 6, 0, 1, 5, 3, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.174025}", "{'[3, 3, 4, 6, 1, 6, 0, 1, 5, 3, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.17354}", "{'[3, 3, 4, 6, 1, 6, 0, 1, 5, 3, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.173563}", "{'[3, 3, 4, 6, 1, 6, 0, 1, 5, 3, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.174304}", "{'[3, 3, 4, 6, 1, 6, 0, 1, 5, 3, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.174694}", "{'[3, 3, 4, 6, 1, 6, 0, 1, 5, 3, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.173777}", "{'[3, 3, 4, 6, 1, 6, 0, 1, 5, 3, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.174033}", "{'[3, 3, 4, 6, 1, 6, 0, 1, 5, 3, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.173543}", "{'[3, 3, 4, 6, 1, 6, 0, 1, 5, 3, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.174529}", "{'[3, 3, 4, 6, 1, 6, 0, 1, 5, 3, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.173553}", "{'[3, 3, 4, 6, 1, 6, 0, 1, 5, 3, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.173881}", "{'[3, 3, 4, 6, 1, 6, 0, 1, 5, 3, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.173873}", "{'[3, 3, 4, 6, 1, 6, 0, 1, 5, 3, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.17402}", "{'[3, 3, 4, 6, 1, 6, 0, 1, 5, 3, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.173979}", "{'[3, 3, 4, 6, 1, 6, 0, 1, 5, 3, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.174395}", "{'[3, 3, 4, 6, 1, 6, 0, 1, 5, 3, 0, 9, 2, 0, 0, 1, 1, 0]' : 0.174486}"]
returning from 'run': {'[3, 3, 4, 6, 1, 6, 0, 1, 5, 3, 0, 9, 2, 0, 0, 1, 1, 0]': ([0.19745, 0.197162, 0.190066, 0.173734, 0.173834, 0.173816, 0.174318, 0.17424, 0.173628, 0.174174, 0.174143, 0.17362, 0.174033, 0.173955, 0.174025, 0.17354, 0.173563, 0.174304, 0.174694, 0.173777, 0.174033, 0.173543, 0.174529, 0.173553, 0.173881, 0.173873, 0.17402, 0.173979, 0.174395, 0.174486], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 3, 4, 6, 1, 6, 0, 1, 5, 3, 0, 9, 2, 0, 0, 1, 1, 0]': ([0.19745, 0.197162, 0.190066, 0.173734, 0.173834, 0.173816, 0.174318, 0.17424, 0.173628, 0.174174, 0.174143, 0.17362, 0.174033, 0.173955, 0.174025, 0.17354, 0.173563, 0.174304, 0.174694, 0.173777, 0.174033, 0.173543, 0.174529, 0.173553, 0.173881, 0.173873, 0.17402, 0.173979, 0.174395, 0.174486], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	29
        Max loop nest depth: 	5
        Additions: 		1784
        Multiplications: 	518
        Divisions: 		0
        Logical: 		0
        Reads: 			2893
        Writes: 		357
        Comparisons:		29
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest10.exe __orio_perftest10.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest10.exe  
Program Test Output: 
{'[6, 2, 6, 0, 5, 0, 0, 0, 28, 5, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.144782}
{'[6, 2, 6, 0, 5, 0, 0, 0, 28, 5, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.144843}
{'[6, 2, 6, 0, 5, 0, 0, 0, 28, 5, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.144872}
{'[6, 2, 6, 0, 5, 0, 0, 0, 28, 5, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.137127}
{'[6, 2, 6, 0, 5, 0, 0, 0, 28, 5, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.122257}
{'[6, 2, 6, 0, 5, 0, 0, 0, 28, 5, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.122249}
{'[6, 2, 6, 0, 5, 0, 0, 0, 28, 5, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.122875}
{'[6, 2, 6, 0, 5, 0, 0, 0, 28, 5, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.122846}
{'[6, 2, 6, 0, 5, 0, 0, 0, 28, 5, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.122759}
{'[6, 2, 6, 0, 5, 0, 0, 0, 28, 5, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.122748}
{'[6, 2, 6, 0, 5, 0, 0, 0, 28, 5, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.122744}
{'[6, 2, 6, 0, 5, 0, 0, 0, 28, 5, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.12305}
{'[6, 2, 6, 0, 5, 0, 0, 0, 28, 5, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.123332}
{'[6, 2, 6, 0, 5, 0, 0, 0, 28, 5, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.122541}
{'[6, 2, 6, 0, 5, 0, 0, 0, 28, 5, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.12256}
{'[6, 2, 6, 0, 5, 0, 0, 0, 28, 5, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.12293}
{'[6, 2, 6, 0, 5, 0, 0, 0, 28, 5, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.122555}
{'[6, 2, 6, 0, 5, 0, 0, 0, 28, 5, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.122649}
{'[6, 2, 6, 0, 5, 0, 0, 0, 28, 5, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.122487}
{'[6, 2, 6, 0, 5, 0, 0, 0, 28, 5, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.122816}
{'[6, 2, 6, 0, 5, 0, 0, 0, 28, 5, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.122905}
{'[6, 2, 6, 0, 5, 0, 0, 0, 28, 5, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.122701}
{'[6, 2, 6, 0, 5, 0, 0, 0, 28, 5, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.122584}
{'[6, 2, 6, 0, 5, 0, 0, 0, 28, 5, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.122671}
{'[6, 2, 6, 0, 5, 0, 0, 0, 28, 5, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.122518}
{'[6, 2, 6, 0, 5, 0, 0, 0, 28, 5, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.122511}
{'[6, 2, 6, 0, 5, 0, 0, 0, 28, 5, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.122619}
{'[6, 2, 6, 0, 5, 0, 0, 0, 28, 5, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.122765}
{'[6, 2, 6, 0, 5, 0, 0, 0, 28, 5, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.122908}
{'[6, 2, 6, 0, 5, 0, 0, 0, 28, 5, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.122678}

out:
 ["{'[6, 2, 6, 0, 5, 0, 0, 0, 28, 5, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.144782}", "{'[6, 2, 6, 0, 5, 0, 0, 0, 28, 5, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.144843}", "{'[6, 2, 6, 0, 5, 0, 0, 0, 28, 5, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.144872}", "{'[6, 2, 6, 0, 5, 0, 0, 0, 28, 5, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.137127}", "{'[6, 2, 6, 0, 5, 0, 0, 0, 28, 5, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.122257}", "{'[6, 2, 6, 0, 5, 0, 0, 0, 28, 5, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.122249}", "{'[6, 2, 6, 0, 5, 0, 0, 0, 28, 5, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.122875}", "{'[6, 2, 6, 0, 5, 0, 0, 0, 28, 5, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.122846}", "{'[6, 2, 6, 0, 5, 0, 0, 0, 28, 5, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.122759}", "{'[6, 2, 6, 0, 5, 0, 0, 0, 28, 5, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.122748}", "{'[6, 2, 6, 0, 5, 0, 0, 0, 28, 5, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.122744}", "{'[6, 2, 6, 0, 5, 0, 0, 0, 28, 5, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.12305}", "{'[6, 2, 6, 0, 5, 0, 0, 0, 28, 5, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.123332}", "{'[6, 2, 6, 0, 5, 0, 0, 0, 28, 5, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.122541}", "{'[6, 2, 6, 0, 5, 0, 0, 0, 28, 5, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.12256}", "{'[6, 2, 6, 0, 5, 0, 0, 0, 28, 5, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.12293}", "{'[6, 2, 6, 0, 5, 0, 0, 0, 28, 5, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.122555}", "{'[6, 2, 6, 0, 5, 0, 0, 0, 28, 5, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.122649}", "{'[6, 2, 6, 0, 5, 0, 0, 0, 28, 5, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.122487}", "{'[6, 2, 6, 0, 5, 0, 0, 0, 28, 5, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.122816}", "{'[6, 2, 6, 0, 5, 0, 0, 0, 28, 5, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.122905}", "{'[6, 2, 6, 0, 5, 0, 0, 0, 28, 5, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.122701}", "{'[6, 2, 6, 0, 5, 0, 0, 0, 28, 5, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.122584}", "{'[6, 2, 6, 0, 5, 0, 0, 0, 28, 5, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.122671}", "{'[6, 2, 6, 0, 5, 0, 0, 0, 28, 5, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.122518}", "{'[6, 2, 6, 0, 5, 0, 0, 0, 28, 5, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.122511}", "{'[6, 2, 6, 0, 5, 0, 0, 0, 28, 5, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.122619}", "{'[6, 2, 6, 0, 5, 0, 0, 0, 28, 5, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.122765}", "{'[6, 2, 6, 0, 5, 0, 0, 0, 28, 5, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.122908}", "{'[6, 2, 6, 0, 5, 0, 0, 0, 28, 5, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.122678}"]
returning from 'run': {'[6, 2, 6, 0, 5, 0, 0, 0, 28, 5, 0, 26, 0, 0, 1, 0, 1, 0]': ([0.144782, 0.144843, 0.144872, 0.137127, 0.122257, 0.122249, 0.122875, 0.122846, 0.122759, 0.122748, 0.122744, 0.12305, 0.123332, 0.122541, 0.12256, 0.12293, 0.122555, 0.122649, 0.122487, 0.122816, 0.122905, 0.122701, 0.122584, 0.122671, 0.122518, 0.122511, 0.122619, 0.122765, 0.122908, 0.122678], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 2, 6, 0, 5, 0, 0, 0, 28, 5, 0, 26, 0, 0, 1, 0, 1, 0]': ([0.144782, 0.144843, 0.144872, 0.137127, 0.122257, 0.122249, 0.122875, 0.122846, 0.122759, 0.122748, 0.122744, 0.12305, 0.123332, 0.122541, 0.12256, 0.12293, 0.122555, 0.122649, 0.122487, 0.122816, 0.122905, 0.122701, 0.122584, 0.122671, 0.122518, 0.122511, 0.122619, 0.122765, 0.122908, 0.122678], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	36
        Max loop nest depth: 	5
        Additions: 		4965
        Multiplications: 	2304
        Divisions: 		0
        Logical: 		0
        Reads: 			9060
        Writes: 		1393
        Comparisons:		36
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest11.exe __orio_perftest11.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest11.exe  
Program Test Output: 
{'[4, 2, 1, 0, 5, 6, 1, 0, 27, 2, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.305485}
{'[4, 2, 1, 0, 5, 6, 1, 0, 27, 2, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.302296}
{'[4, 2, 1, 0, 5, 6, 1, 0, 27, 2, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.302764}
{'[4, 2, 1, 0, 5, 6, 1, 0, 27, 2, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.304008}
{'[4, 2, 1, 0, 5, 6, 1, 0, 27, 2, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.304449}
{'[4, 2, 1, 0, 5, 6, 1, 0, 27, 2, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.303234}
{'[4, 2, 1, 0, 5, 6, 1, 0, 27, 2, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.303308}
{'[4, 2, 1, 0, 5, 6, 1, 0, 27, 2, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.304699}
{'[4, 2, 1, 0, 5, 6, 1, 0, 27, 2, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.30406}
{'[4, 2, 1, 0, 5, 6, 1, 0, 27, 2, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.304802}
{'[4, 2, 1, 0, 5, 6, 1, 0, 27, 2, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.304896}
{'[4, 2, 1, 0, 5, 6, 1, 0, 27, 2, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.303215}
{'[4, 2, 1, 0, 5, 6, 1, 0, 27, 2, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.304898}
{'[4, 2, 1, 0, 5, 6, 1, 0, 27, 2, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.303709}
{'[4, 2, 1, 0, 5, 6, 1, 0, 27, 2, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.303719}
{'[4, 2, 1, 0, 5, 6, 1, 0, 27, 2, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.304973}
{'[4, 2, 1, 0, 5, 6, 1, 0, 27, 2, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.304815}
{'[4, 2, 1, 0, 5, 6, 1, 0, 27, 2, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.302958}
{'[4, 2, 1, 0, 5, 6, 1, 0, 27, 2, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.305408}
{'[4, 2, 1, 0, 5, 6, 1, 0, 27, 2, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.304757}
{'[4, 2, 1, 0, 5, 6, 1, 0, 27, 2, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.305214}
{'[4, 2, 1, 0, 5, 6, 1, 0, 27, 2, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.303647}
{'[4, 2, 1, 0, 5, 6, 1, 0, 27, 2, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.304928}
{'[4, 2, 1, 0, 5, 6, 1, 0, 27, 2, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.305359}
{'[4, 2, 1, 0, 5, 6, 1, 0, 27, 2, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.303948}
{'[4, 2, 1, 0, 5, 6, 1, 0, 27, 2, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.30599}
{'[4, 2, 1, 0, 5, 6, 1, 0, 27, 2, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.305737}
{'[4, 2, 1, 0, 5, 6, 1, 0, 27, 2, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.303892}
{'[4, 2, 1, 0, 5, 6, 1, 0, 27, 2, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.304333}
{'[4, 2, 1, 0, 5, 6, 1, 0, 27, 2, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.304732}

out:
 ["{'[4, 2, 1, 0, 5, 6, 1, 0, 27, 2, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.305485}", "{'[4, 2, 1, 0, 5, 6, 1, 0, 27, 2, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.302296}", "{'[4, 2, 1, 0, 5, 6, 1, 0, 27, 2, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.302764}", "{'[4, 2, 1, 0, 5, 6, 1, 0, 27, 2, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.304008}", "{'[4, 2, 1, 0, 5, 6, 1, 0, 27, 2, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.304449}", "{'[4, 2, 1, 0, 5, 6, 1, 0, 27, 2, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.303234}", "{'[4, 2, 1, 0, 5, 6, 1, 0, 27, 2, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.303308}", "{'[4, 2, 1, 0, 5, 6, 1, 0, 27, 2, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.304699}", "{'[4, 2, 1, 0, 5, 6, 1, 0, 27, 2, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.30406}", "{'[4, 2, 1, 0, 5, 6, 1, 0, 27, 2, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.304802}", "{'[4, 2, 1, 0, 5, 6, 1, 0, 27, 2, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.304896}", "{'[4, 2, 1, 0, 5, 6, 1, 0, 27, 2, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.303215}", "{'[4, 2, 1, 0, 5, 6, 1, 0, 27, 2, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.304898}", "{'[4, 2, 1, 0, 5, 6, 1, 0, 27, 2, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.303709}", "{'[4, 2, 1, 0, 5, 6, 1, 0, 27, 2, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.303719}", "{'[4, 2, 1, 0, 5, 6, 1, 0, 27, 2, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.304973}", "{'[4, 2, 1, 0, 5, 6, 1, 0, 27, 2, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.304815}", "{'[4, 2, 1, 0, 5, 6, 1, 0, 27, 2, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.302958}", "{'[4, 2, 1, 0, 5, 6, 1, 0, 27, 2, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.305408}", "{'[4, 2, 1, 0, 5, 6, 1, 0, 27, 2, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.304757}", "{'[4, 2, 1, 0, 5, 6, 1, 0, 27, 2, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.305214}", "{'[4, 2, 1, 0, 5, 6, 1, 0, 27, 2, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.303647}", "{'[4, 2, 1, 0, 5, 6, 1, 0, 27, 2, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.304928}", "{'[4, 2, 1, 0, 5, 6, 1, 0, 27, 2, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.305359}", "{'[4, 2, 1, 0, 5, 6, 1, 0, 27, 2, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.303948}", "{'[4, 2, 1, 0, 5, 6, 1, 0, 27, 2, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.30599}", "{'[4, 2, 1, 0, 5, 6, 1, 0, 27, 2, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.305737}", "{'[4, 2, 1, 0, 5, 6, 1, 0, 27, 2, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.303892}", "{'[4, 2, 1, 0, 5, 6, 1, 0, 27, 2, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.304333}", "{'[4, 2, 1, 0, 5, 6, 1, 0, 27, 2, 29, 0, 2, 0, 0, 1, 1, 1]' : 0.304732}"]
returning from 'run': {'[4, 2, 1, 0, 5, 6, 1, 0, 27, 2, 29, 0, 2, 0, 0, 1, 1, 1]': ([0.305485, 0.302296, 0.302764, 0.304008, 0.304449, 0.303234, 0.303308, 0.304699, 0.30406, 0.304802, 0.304896, 0.303215, 0.304898, 0.303709, 0.303719, 0.304973, 0.304815, 0.302958, 0.305408, 0.304757, 0.305214, 0.303647, 0.304928, 0.305359, 0.303948, 0.30599, 0.305737, 0.303892, 0.304333, 0.304732], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 2, 1, 0, 5, 6, 1, 0, 27, 2, 29, 0, 2, 0, 0, 1, 1, 1]': ([0.305485, 0.302296, 0.302764, 0.304008, 0.304449, 0.303234, 0.303308, 0.304699, 0.30406, 0.304802, 0.304896, 0.303215, 0.304898, 0.303709, 0.303719, 0.304973, 0.304815, 0.302958, 0.305408, 0.304757, 0.305214, 0.303647, 0.304928, 0.305359, 0.303948, 0.30599, 0.305737, 0.303892, 0.304333, 0.304732], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	179
        Max loop nest depth: 	6
        Additions: 		13824
        Multiplications: 	3042
        Divisions: 		0
        Logical: 		0
        Reads: 			20115
        Writes: 		2138
        Comparisons:		179
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest12.exe __orio_perftest12.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest12.exe  
Program Test Output: 
{'[1, 5, 2, 3, 0, 5, 1, 1, 27, 29, 0, 29, 1, 1, 0, 0, 1, 1]' : 0.115254}
{'[1, 5, 2, 3, 0, 5, 1, 1, 27, 29, 0, 29, 1, 1, 0, 0, 1, 1]' : 0.115469}
{'[1, 5, 2, 3, 0, 5, 1, 1, 27, 29, 0, 29, 1, 1, 0, 0, 1, 1]' : 0.115097}
{'[1, 5, 2, 3, 0, 5, 1, 1, 27, 29, 0, 29, 1, 1, 0, 0, 1, 1]' : 0.115816}
{'[1, 5, 2, 3, 0, 5, 1, 1, 27, 29, 0, 29, 1, 1, 0, 0, 1, 1]' : 0.11582}
{'[1, 5, 2, 3, 0, 5, 1, 1, 27, 29, 0, 29, 1, 1, 0, 0, 1, 1]' : 0.117281}
{'[1, 5, 2, 3, 0, 5, 1, 1, 27, 29, 0, 29, 1, 1, 0, 0, 1, 1]' : 0.115117}
{'[1, 5, 2, 3, 0, 5, 1, 1, 27, 29, 0, 29, 1, 1, 0, 0, 1, 1]' : 0.115283}
{'[1, 5, 2, 3, 0, 5, 1, 1, 27, 29, 0, 29, 1, 1, 0, 0, 1, 1]' : 0.115188}
{'[1, 5, 2, 3, 0, 5, 1, 1, 27, 29, 0, 29, 1, 1, 0, 0, 1, 1]' : 0.115359}
{'[1, 5, 2, 3, 0, 5, 1, 1, 27, 29, 0, 29, 1, 1, 0, 0, 1, 1]' : 0.115122}
{'[1, 5, 2, 3, 0, 5, 1, 1, 27, 29, 0, 29, 1, 1, 0, 0, 1, 1]' : 0.115301}
{'[1, 5, 2, 3, 0, 5, 1, 1, 27, 29, 0, 29, 1, 1, 0, 0, 1, 1]' : 0.115304}
{'[1, 5, 2, 3, 0, 5, 1, 1, 27, 29, 0, 29, 1, 1, 0, 0, 1, 1]' : 0.117028}
{'[1, 5, 2, 3, 0, 5, 1, 1, 27, 29, 0, 29, 1, 1, 0, 0, 1, 1]' : 0.115891}
{'[1, 5, 2, 3, 0, 5, 1, 1, 27, 29, 0, 29, 1, 1, 0, 0, 1, 1]' : 0.115221}
{'[1, 5, 2, 3, 0, 5, 1, 1, 27, 29, 0, 29, 1, 1, 0, 0, 1, 1]' : 0.115131}
{'[1, 5, 2, 3, 0, 5, 1, 1, 27, 29, 0, 29, 1, 1, 0, 0, 1, 1]' : 0.11519}
{'[1, 5, 2, 3, 0, 5, 1, 1, 27, 29, 0, 29, 1, 1, 0, 0, 1, 1]' : 0.11512}
{'[1, 5, 2, 3, 0, 5, 1, 1, 27, 29, 0, 29, 1, 1, 0, 0, 1, 1]' : 0.115228}
{'[1, 5, 2, 3, 0, 5, 1, 1, 27, 29, 0, 29, 1, 1, 0, 0, 1, 1]' : 0.115525}
{'[1, 5, 2, 3, 0, 5, 1, 1, 27, 29, 0, 29, 1, 1, 0, 0, 1, 1]' : 0.115321}
{'[1, 5, 2, 3, 0, 5, 1, 1, 27, 29, 0, 29, 1, 1, 0, 0, 1, 1]' : 0.117778}
{'[1, 5, 2, 3, 0, 5, 1, 1, 27, 29, 0, 29, 1, 1, 0, 0, 1, 1]' : 0.115215}
{'[1, 5, 2, 3, 0, 5, 1, 1, 27, 29, 0, 29, 1, 1, 0, 0, 1, 1]' : 0.115249}
{'[1, 5, 2, 3, 0, 5, 1, 1, 27, 29, 0, 29, 1, 1, 0, 0, 1, 1]' : 0.115208}
{'[1, 5, 2, 3, 0, 5, 1, 1, 27, 29, 0, 29, 1, 1, 0, 0, 1, 1]' : 0.115087}
{'[1, 5, 2, 3, 0, 5, 1, 1, 27, 29, 0, 29, 1, 1, 0, 0, 1, 1]' : 0.115216}
{'[1, 5, 2, 3, 0, 5, 1, 1, 27, 29, 0, 29, 1, 1, 0, 0, 1, 1]' : 0.115293}
{'[1, 5, 2, 3, 0, 5, 1, 1, 27, 29, 0, 29, 1, 1, 0, 0, 1, 1]' : 0.115183}

out:
 ["{'[1, 5, 2, 3, 0, 5, 1, 1, 27, 29, 0, 29, 1, 1, 0, 0, 1, 1]' : 0.115254}", "{'[1, 5, 2, 3, 0, 5, 1, 1, 27, 29, 0, 29, 1, 1, 0, 0, 1, 1]' : 0.115469}", "{'[1, 5, 2, 3, 0, 5, 1, 1, 27, 29, 0, 29, 1, 1, 0, 0, 1, 1]' : 0.115097}", "{'[1, 5, 2, 3, 0, 5, 1, 1, 27, 29, 0, 29, 1, 1, 0, 0, 1, 1]' : 0.115816}", "{'[1, 5, 2, 3, 0, 5, 1, 1, 27, 29, 0, 29, 1, 1, 0, 0, 1, 1]' : 0.11582}", "{'[1, 5, 2, 3, 0, 5, 1, 1, 27, 29, 0, 29, 1, 1, 0, 0, 1, 1]' : 0.117281}", "{'[1, 5, 2, 3, 0, 5, 1, 1, 27, 29, 0, 29, 1, 1, 0, 0, 1, 1]' : 0.115117}", "{'[1, 5, 2, 3, 0, 5, 1, 1, 27, 29, 0, 29, 1, 1, 0, 0, 1, 1]' : 0.115283}", "{'[1, 5, 2, 3, 0, 5, 1, 1, 27, 29, 0, 29, 1, 1, 0, 0, 1, 1]' : 0.115188}", "{'[1, 5, 2, 3, 0, 5, 1, 1, 27, 29, 0, 29, 1, 1, 0, 0, 1, 1]' : 0.115359}", "{'[1, 5, 2, 3, 0, 5, 1, 1, 27, 29, 0, 29, 1, 1, 0, 0, 1, 1]' : 0.115122}", "{'[1, 5, 2, 3, 0, 5, 1, 1, 27, 29, 0, 29, 1, 1, 0, 0, 1, 1]' : 0.115301}", "{'[1, 5, 2, 3, 0, 5, 1, 1, 27, 29, 0, 29, 1, 1, 0, 0, 1, 1]' : 0.115304}", "{'[1, 5, 2, 3, 0, 5, 1, 1, 27, 29, 0, 29, 1, 1, 0, 0, 1, 1]' : 0.117028}", "{'[1, 5, 2, 3, 0, 5, 1, 1, 27, 29, 0, 29, 1, 1, 0, 0, 1, 1]' : 0.115891}", "{'[1, 5, 2, 3, 0, 5, 1, 1, 27, 29, 0, 29, 1, 1, 0, 0, 1, 1]' : 0.115221}", "{'[1, 5, 2, 3, 0, 5, 1, 1, 27, 29, 0, 29, 1, 1, 0, 0, 1, 1]' : 0.115131}", "{'[1, 5, 2, 3, 0, 5, 1, 1, 27, 29, 0, 29, 1, 1, 0, 0, 1, 1]' : 0.11519}", "{'[1, 5, 2, 3, 0, 5, 1, 1, 27, 29, 0, 29, 1, 1, 0, 0, 1, 1]' : 0.11512}", "{'[1, 5, 2, 3, 0, 5, 1, 1, 27, 29, 0, 29, 1, 1, 0, 0, 1, 1]' : 0.115228}", "{'[1, 5, 2, 3, 0, 5, 1, 1, 27, 29, 0, 29, 1, 1, 0, 0, 1, 1]' : 0.115525}", "{'[1, 5, 2, 3, 0, 5, 1, 1, 27, 29, 0, 29, 1, 1, 0, 0, 1, 1]' : 0.115321}", "{'[1, 5, 2, 3, 0, 5, 1, 1, 27, 29, 0, 29, 1, 1, 0, 0, 1, 1]' : 0.117778}", "{'[1, 5, 2, 3, 0, 5, 1, 1, 27, 29, 0, 29, 1, 1, 0, 0, 1, 1]' : 0.115215}", "{'[1, 5, 2, 3, 0, 5, 1, 1, 27, 29, 0, 29, 1, 1, 0, 0, 1, 1]' : 0.115249}", "{'[1, 5, 2, 3, 0, 5, 1, 1, 27, 29, 0, 29, 1, 1, 0, 0, 1, 1]' : 0.115208}", "{'[1, 5, 2, 3, 0, 5, 1, 1, 27, 29, 0, 29, 1, 1, 0, 0, 1, 1]' : 0.115087}", "{'[1, 5, 2, 3, 0, 5, 1, 1, 27, 29, 0, 29, 1, 1, 0, 0, 1, 1]' : 0.115216}", "{'[1, 5, 2, 3, 0, 5, 1, 1, 27, 29, 0, 29, 1, 1, 0, 0, 1, 1]' : 0.115293}", "{'[1, 5, 2, 3, 0, 5, 1, 1, 27, 29, 0, 29, 1, 1, 0, 0, 1, 1]' : 0.115183}"]
returning from 'run': {'[1, 5, 2, 3, 0, 5, 1, 1, 27, 29, 0, 29, 1, 1, 0, 0, 1, 1]': ([0.115254, 0.115469, 0.115097, 0.115816, 0.11582, 0.117281, 0.115117, 0.115283, 0.115188, 0.115359, 0.115122, 0.115301, 0.115304, 0.117028, 0.115891, 0.115221, 0.115131, 0.11519, 0.11512, 0.115228, 0.115525, 0.115321, 0.117778, 0.115215, 0.115249, 0.115208, 0.115087, 0.115216, 0.115293, 0.115183], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 5, 2, 3, 0, 5, 1, 1, 27, 29, 0, 29, 1, 1, 0, 0, 1, 1]': ([0.115254, 0.115469, 0.115097, 0.115816, 0.11582, 0.117281, 0.115117, 0.115283, 0.115188, 0.115359, 0.115122, 0.115301, 0.115304, 0.117028, 0.115891, 0.115221, 0.115131, 0.11519, 0.11512, 0.115228, 0.115525, 0.115321, 0.117778, 0.115215, 0.115249, 0.115208, 0.115087, 0.115216, 0.115293, 0.115183], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = jjj
Code stats:
        Number of loops: 	41
        Max loop nest depth: 	5
        Additions: 		4551
        Multiplications: 	2150
        Divisions: 		0
        Logical: 		0
        Reads: 			8518
        Writes: 		1374
        Comparisons:		41
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest13.exe __orio_perftest13.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest13.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest13.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest13.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest13.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	5
        Additions: 		1905
        Multiplications: 	504
        Divisions: 		0
        Logical: 		0
        Reads: 			3007
        Writes: 		325
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest14.exe __orio_perftest14.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest14.exe  
Program Test Output: 
{'[0, 0, 3, 1, 0, 6, 1, 1, 11, 0, 11, 13, 1, 0, 0, 0, 0, 1]' : 0.106234}
{'[0, 0, 3, 1, 0, 6, 1, 1, 11, 0, 11, 13, 1, 0, 0, 0, 0, 1]' : 0.106191}
{'[0, 0, 3, 1, 0, 6, 1, 1, 11, 0, 11, 13, 1, 0, 0, 0, 0, 1]' : 0.105998}
{'[0, 0, 3, 1, 0, 6, 1, 1, 11, 0, 11, 13, 1, 0, 0, 0, 0, 1]' : 0.106167}
{'[0, 0, 3, 1, 0, 6, 1, 1, 11, 0, 11, 13, 1, 0, 0, 0, 0, 1]' : 0.105831}
{'[0, 0, 3, 1, 0, 6, 1, 1, 11, 0, 11, 13, 1, 0, 0, 0, 0, 1]' : 0.0941231}
{'[0, 0, 3, 1, 0, 6, 1, 1, 11, 0, 11, 13, 1, 0, 0, 0, 0, 1]' : 0.090857}
{'[0, 0, 3, 1, 0, 6, 1, 1, 11, 0, 11, 13, 1, 0, 0, 0, 0, 1]' : 0.090975}
{'[0, 0, 3, 1, 0, 6, 1, 1, 11, 0, 11, 13, 1, 0, 0, 0, 0, 1]' : 0.0910552}
{'[0, 0, 3, 1, 0, 6, 1, 1, 11, 0, 11, 13, 1, 0, 0, 0, 0, 1]' : 0.090971}
{'[0, 0, 3, 1, 0, 6, 1, 1, 11, 0, 11, 13, 1, 0, 0, 0, 0, 1]' : 0.090941}
{'[0, 0, 3, 1, 0, 6, 1, 1, 11, 0, 11, 13, 1, 0, 0, 0, 0, 1]' : 0.0909779}
{'[0, 0, 3, 1, 0, 6, 1, 1, 11, 0, 11, 13, 1, 0, 0, 0, 0, 1]' : 0.091176}
{'[0, 0, 3, 1, 0, 6, 1, 1, 11, 0, 11, 13, 1, 0, 0, 0, 0, 1]' : 0.090946}
{'[0, 0, 3, 1, 0, 6, 1, 1, 11, 0, 11, 13, 1, 0, 0, 0, 0, 1]' : 0.091099}
{'[0, 0, 3, 1, 0, 6, 1, 1, 11, 0, 11, 13, 1, 0, 0, 0, 0, 1]' : 0.0909832}
{'[0, 0, 3, 1, 0, 6, 1, 1, 11, 0, 11, 13, 1, 0, 0, 0, 0, 1]' : 0.091193}
{'[0, 0, 3, 1, 0, 6, 1, 1, 11, 0, 11, 13, 1, 0, 0, 0, 0, 1]' : 0.09109}
{'[0, 0, 3, 1, 0, 6, 1, 1, 11, 0, 11, 13, 1, 0, 0, 0, 0, 1]' : 0.0908439}
{'[0, 0, 3, 1, 0, 6, 1, 1, 11, 0, 11, 13, 1, 0, 0, 0, 0, 1]' : 0.0909691}
{'[0, 0, 3, 1, 0, 6, 1, 1, 11, 0, 11, 13, 1, 0, 0, 0, 0, 1]' : 0.0913439}
{'[0, 0, 3, 1, 0, 6, 1, 1, 11, 0, 11, 13, 1, 0, 0, 0, 0, 1]' : 0.091089}
{'[0, 0, 3, 1, 0, 6, 1, 1, 11, 0, 11, 13, 1, 0, 0, 0, 0, 1]' : 0.0909109}
{'[0, 0, 3, 1, 0, 6, 1, 1, 11, 0, 11, 13, 1, 0, 0, 0, 0, 1]' : 0.0910959}
{'[0, 0, 3, 1, 0, 6, 1, 1, 11, 0, 11, 13, 1, 0, 0, 0, 0, 1]' : 0.090873}
{'[0, 0, 3, 1, 0, 6, 1, 1, 11, 0, 11, 13, 1, 0, 0, 0, 0, 1]' : 0.0909739}
{'[0, 0, 3, 1, 0, 6, 1, 1, 11, 0, 11, 13, 1, 0, 0, 0, 0, 1]' : 0.091306}
{'[0, 0, 3, 1, 0, 6, 1, 1, 11, 0, 11, 13, 1, 0, 0, 0, 0, 1]' : 0.090982}
{'[0, 0, 3, 1, 0, 6, 1, 1, 11, 0, 11, 13, 1, 0, 0, 0, 0, 1]' : 0.091233}
{'[0, 0, 3, 1, 0, 6, 1, 1, 11, 0, 11, 13, 1, 0, 0, 0, 0, 1]' : 0.091203}

out:
 ["{'[0, 0, 3, 1, 0, 6, 1, 1, 11, 0, 11, 13, 1, 0, 0, 0, 0, 1]' : 0.106234}", "{'[0, 0, 3, 1, 0, 6, 1, 1, 11, 0, 11, 13, 1, 0, 0, 0, 0, 1]' : 0.106191}", "{'[0, 0, 3, 1, 0, 6, 1, 1, 11, 0, 11, 13, 1, 0, 0, 0, 0, 1]' : 0.105998}", "{'[0, 0, 3, 1, 0, 6, 1, 1, 11, 0, 11, 13, 1, 0, 0, 0, 0, 1]' : 0.106167}", "{'[0, 0, 3, 1, 0, 6, 1, 1, 11, 0, 11, 13, 1, 0, 0, 0, 0, 1]' : 0.105831}", "{'[0, 0, 3, 1, 0, 6, 1, 1, 11, 0, 11, 13, 1, 0, 0, 0, 0, 1]' : 0.0941231}", "{'[0, 0, 3, 1, 0, 6, 1, 1, 11, 0, 11, 13, 1, 0, 0, 0, 0, 1]' : 0.090857}", "{'[0, 0, 3, 1, 0, 6, 1, 1, 11, 0, 11, 13, 1, 0, 0, 0, 0, 1]' : 0.090975}", "{'[0, 0, 3, 1, 0, 6, 1, 1, 11, 0, 11, 13, 1, 0, 0, 0, 0, 1]' : 0.0910552}", "{'[0, 0, 3, 1, 0, 6, 1, 1, 11, 0, 11, 13, 1, 0, 0, 0, 0, 1]' : 0.090971}", "{'[0, 0, 3, 1, 0, 6, 1, 1, 11, 0, 11, 13, 1, 0, 0, 0, 0, 1]' : 0.090941}", "{'[0, 0, 3, 1, 0, 6, 1, 1, 11, 0, 11, 13, 1, 0, 0, 0, 0, 1]' : 0.0909779}", "{'[0, 0, 3, 1, 0, 6, 1, 1, 11, 0, 11, 13, 1, 0, 0, 0, 0, 1]' : 0.091176}", "{'[0, 0, 3, 1, 0, 6, 1, 1, 11, 0, 11, 13, 1, 0, 0, 0, 0, 1]' : 0.090946}", "{'[0, 0, 3, 1, 0, 6, 1, 1, 11, 0, 11, 13, 1, 0, 0, 0, 0, 1]' : 0.091099}", "{'[0, 0, 3, 1, 0, 6, 1, 1, 11, 0, 11, 13, 1, 0, 0, 0, 0, 1]' : 0.0909832}", "{'[0, 0, 3, 1, 0, 6, 1, 1, 11, 0, 11, 13, 1, 0, 0, 0, 0, 1]' : 0.091193}", "{'[0, 0, 3, 1, 0, 6, 1, 1, 11, 0, 11, 13, 1, 0, 0, 0, 0, 1]' : 0.09109}", "{'[0, 0, 3, 1, 0, 6, 1, 1, 11, 0, 11, 13, 1, 0, 0, 0, 0, 1]' : 0.0908439}", "{'[0, 0, 3, 1, 0, 6, 1, 1, 11, 0, 11, 13, 1, 0, 0, 0, 0, 1]' : 0.0909691}", "{'[0, 0, 3, 1, 0, 6, 1, 1, 11, 0, 11, 13, 1, 0, 0, 0, 0, 1]' : 0.0913439}", "{'[0, 0, 3, 1, 0, 6, 1, 1, 11, 0, 11, 13, 1, 0, 0, 0, 0, 1]' : 0.091089}", "{'[0, 0, 3, 1, 0, 6, 1, 1, 11, 0, 11, 13, 1, 0, 0, 0, 0, 1]' : 0.0909109}", "{'[0, 0, 3, 1, 0, 6, 1, 1, 11, 0, 11, 13, 1, 0, 0, 0, 0, 1]' : 0.0910959}", "{'[0, 0, 3, 1, 0, 6, 1, 1, 11, 0, 11, 13, 1, 0, 0, 0, 0, 1]' : 0.090873}", "{'[0, 0, 3, 1, 0, 6, 1, 1, 11, 0, 11, 13, 1, 0, 0, 0, 0, 1]' : 0.0909739}", "{'[0, 0, 3, 1, 0, 6, 1, 1, 11, 0, 11, 13, 1, 0, 0, 0, 0, 1]' : 0.091306}", "{'[0, 0, 3, 1, 0, 6, 1, 1, 11, 0, 11, 13, 1, 0, 0, 0, 0, 1]' : 0.090982}", "{'[0, 0, 3, 1, 0, 6, 1, 1, 11, 0, 11, 13, 1, 0, 0, 0, 0, 1]' : 0.091233}", "{'[0, 0, 3, 1, 0, 6, 1, 1, 11, 0, 11, 13, 1, 0, 0, 0, 0, 1]' : 0.091203}"]
returning from 'run': {'[0, 0, 3, 1, 0, 6, 1, 1, 11, 0, 11, 13, 1, 0, 0, 0, 0, 1]': ([0.106234, 0.106191, 0.105998, 0.106167, 0.105831, 0.0941231, 0.090857, 0.090975, 0.0910552, 0.090971, 0.090941, 0.0909779, 0.091176, 0.090946, 0.091099, 0.0909832, 0.091193, 0.09109, 0.0908439, 0.0909691, 0.0913439, 0.091089, 0.0909109, 0.0910959, 0.090873, 0.0909739, 0.091306, 0.090982, 0.091233, 0.091203], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 3, 1, 0, 6, 1, 1, 11, 0, 11, 13, 1, 0, 0, 0, 0, 1]': ([0.106234, 0.106191, 0.105998, 0.106167, 0.105831, 0.0941231, 0.090857, 0.090975, 0.0910552, 0.090971, 0.090941, 0.0909779, 0.091176, 0.090946, 0.091099, 0.0909832, 0.091193, 0.09109, 0.0908439, 0.0909691, 0.0913439, 0.091089, 0.0909109, 0.0910959, 0.090873, 0.0909739, 0.091306, 0.090982, 0.091233, 0.091203], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	27
        Max loop nest depth: 	5
        Additions: 		324
        Multiplications: 	78
        Divisions: 		0
        Logical: 		0
        Reads: 			681
        Writes: 		121
        Comparisons:		27
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest15.exe __orio_perftest15.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest15.exe  
Program Test Output: 
{'[0, 0, 3, 4, 1, 5, 0, 1, 1, 1, 0, 2, 0, 1, 0, 0, 1, 1]' : 0.205101}
{'[0, 0, 3, 4, 1, 5, 0, 1, 1, 1, 0, 2, 0, 1, 0, 0, 1, 1]' : 0.205034}
{'[0, 0, 3, 4, 1, 5, 0, 1, 1, 1, 0, 2, 0, 1, 0, 0, 1, 1]' : 0.196238}
{'[0, 0, 3, 4, 1, 5, 0, 1, 1, 1, 0, 2, 0, 1, 0, 0, 1, 1]' : 0.171722}
{'[0, 0, 3, 4, 1, 5, 0, 1, 1, 1, 0, 2, 0, 1, 0, 0, 1, 1]' : 0.171574}
{'[0, 0, 3, 4, 1, 5, 0, 1, 1, 1, 0, 2, 0, 1, 0, 0, 1, 1]' : 0.171607}
{'[0, 0, 3, 4, 1, 5, 0, 1, 1, 1, 0, 2, 0, 1, 0, 0, 1, 1]' : 0.171522}
{'[0, 0, 3, 4, 1, 5, 0, 1, 1, 1, 0, 2, 0, 1, 0, 0, 1, 1]' : 0.171533}
{'[0, 0, 3, 4, 1, 5, 0, 1, 1, 1, 0, 2, 0, 1, 0, 0, 1, 1]' : 0.172364}
{'[0, 0, 3, 4, 1, 5, 0, 1, 1, 1, 0, 2, 0, 1, 0, 0, 1, 1]' : 0.171631}
{'[0, 0, 3, 4, 1, 5, 0, 1, 1, 1, 0, 2, 0, 1, 0, 0, 1, 1]' : 0.171592}
{'[0, 0, 3, 4, 1, 5, 0, 1, 1, 1, 0, 2, 0, 1, 0, 0, 1, 1]' : 0.171574}
{'[0, 0, 3, 4, 1, 5, 0, 1, 1, 1, 0, 2, 0, 1, 0, 0, 1, 1]' : 0.171505}
{'[0, 0, 3, 4, 1, 5, 0, 1, 1, 1, 0, 2, 0, 1, 0, 0, 1, 1]' : 0.171552}
{'[0, 0, 3, 4, 1, 5, 0, 1, 1, 1, 0, 2, 0, 1, 0, 0, 1, 1]' : 0.172146}
{'[0, 0, 3, 4, 1, 5, 0, 1, 1, 1, 0, 2, 0, 1, 0, 0, 1, 1]' : 0.171838}
{'[0, 0, 3, 4, 1, 5, 0, 1, 1, 1, 0, 2, 0, 1, 0, 0, 1, 1]' : 0.17196}
{'[0, 0, 3, 4, 1, 5, 0, 1, 1, 1, 0, 2, 0, 1, 0, 0, 1, 1]' : 0.171646}
{'[0, 0, 3, 4, 1, 5, 0, 1, 1, 1, 0, 2, 0, 1, 0, 0, 1, 1]' : 0.171479}
{'[0, 0, 3, 4, 1, 5, 0, 1, 1, 1, 0, 2, 0, 1, 0, 0, 1, 1]' : 0.171568}
{'[0, 0, 3, 4, 1, 5, 0, 1, 1, 1, 0, 2, 0, 1, 0, 0, 1, 1]' : 0.171665}
{'[0, 0, 3, 4, 1, 5, 0, 1, 1, 1, 0, 2, 0, 1, 0, 0, 1, 1]' : 0.1721}
{'[0, 0, 3, 4, 1, 5, 0, 1, 1, 1, 0, 2, 0, 1, 0, 0, 1, 1]' : 0.171684}
{'[0, 0, 3, 4, 1, 5, 0, 1, 1, 1, 0, 2, 0, 1, 0, 0, 1, 1]' : 0.171627}
{'[0, 0, 3, 4, 1, 5, 0, 1, 1, 1, 0, 2, 0, 1, 0, 0, 1, 1]' : 0.17157}
{'[0, 0, 3, 4, 1, 5, 0, 1, 1, 1, 0, 2, 0, 1, 0, 0, 1, 1]' : 0.172525}
{'[0, 0, 3, 4, 1, 5, 0, 1, 1, 1, 0, 2, 0, 1, 0, 0, 1, 1]' : 0.172198}
{'[0, 0, 3, 4, 1, 5, 0, 1, 1, 1, 0, 2, 0, 1, 0, 0, 1, 1]' : 0.172234}
{'[0, 0, 3, 4, 1, 5, 0, 1, 1, 1, 0, 2, 0, 1, 0, 0, 1, 1]' : 0.172172}
{'[0, 0, 3, 4, 1, 5, 0, 1, 1, 1, 0, 2, 0, 1, 0, 0, 1, 1]' : 0.171934}

out:
 ["{'[0, 0, 3, 4, 1, 5, 0, 1, 1, 1, 0, 2, 0, 1, 0, 0, 1, 1]' : 0.205101}", "{'[0, 0, 3, 4, 1, 5, 0, 1, 1, 1, 0, 2, 0, 1, 0, 0, 1, 1]' : 0.205034}", "{'[0, 0, 3, 4, 1, 5, 0, 1, 1, 1, 0, 2, 0, 1, 0, 0, 1, 1]' : 0.196238}", "{'[0, 0, 3, 4, 1, 5, 0, 1, 1, 1, 0, 2, 0, 1, 0, 0, 1, 1]' : 0.171722}", "{'[0, 0, 3, 4, 1, 5, 0, 1, 1, 1, 0, 2, 0, 1, 0, 0, 1, 1]' : 0.171574}", "{'[0, 0, 3, 4, 1, 5, 0, 1, 1, 1, 0, 2, 0, 1, 0, 0, 1, 1]' : 0.171607}", "{'[0, 0, 3, 4, 1, 5, 0, 1, 1, 1, 0, 2, 0, 1, 0, 0, 1, 1]' : 0.171522}", "{'[0, 0, 3, 4, 1, 5, 0, 1, 1, 1, 0, 2, 0, 1, 0, 0, 1, 1]' : 0.171533}", "{'[0, 0, 3, 4, 1, 5, 0, 1, 1, 1, 0, 2, 0, 1, 0, 0, 1, 1]' : 0.172364}", "{'[0, 0, 3, 4, 1, 5, 0, 1, 1, 1, 0, 2, 0, 1, 0, 0, 1, 1]' : 0.171631}", "{'[0, 0, 3, 4, 1, 5, 0, 1, 1, 1, 0, 2, 0, 1, 0, 0, 1, 1]' : 0.171592}", "{'[0, 0, 3, 4, 1, 5, 0, 1, 1, 1, 0, 2, 0, 1, 0, 0, 1, 1]' : 0.171574}", "{'[0, 0, 3, 4, 1, 5, 0, 1, 1, 1, 0, 2, 0, 1, 0, 0, 1, 1]' : 0.171505}", "{'[0, 0, 3, 4, 1, 5, 0, 1, 1, 1, 0, 2, 0, 1, 0, 0, 1, 1]' : 0.171552}", "{'[0, 0, 3, 4, 1, 5, 0, 1, 1, 1, 0, 2, 0, 1, 0, 0, 1, 1]' : 0.172146}", "{'[0, 0, 3, 4, 1, 5, 0, 1, 1, 1, 0, 2, 0, 1, 0, 0, 1, 1]' : 0.171838}", "{'[0, 0, 3, 4, 1, 5, 0, 1, 1, 1, 0, 2, 0, 1, 0, 0, 1, 1]' : 0.17196}", "{'[0, 0, 3, 4, 1, 5, 0, 1, 1, 1, 0, 2, 0, 1, 0, 0, 1, 1]' : 0.171646}", "{'[0, 0, 3, 4, 1, 5, 0, 1, 1, 1, 0, 2, 0, 1, 0, 0, 1, 1]' : 0.171479}", "{'[0, 0, 3, 4, 1, 5, 0, 1, 1, 1, 0, 2, 0, 1, 0, 0, 1, 1]' : 0.171568}", "{'[0, 0, 3, 4, 1, 5, 0, 1, 1, 1, 0, 2, 0, 1, 0, 0, 1, 1]' : 0.171665}", "{'[0, 0, 3, 4, 1, 5, 0, 1, 1, 1, 0, 2, 0, 1, 0, 0, 1, 1]' : 0.1721}", "{'[0, 0, 3, 4, 1, 5, 0, 1, 1, 1, 0, 2, 0, 1, 0, 0, 1, 1]' : 0.171684}", "{'[0, 0, 3, 4, 1, 5, 0, 1, 1, 1, 0, 2, 0, 1, 0, 0, 1, 1]' : 0.171627}", "{'[0, 0, 3, 4, 1, 5, 0, 1, 1, 1, 0, 2, 0, 1, 0, 0, 1, 1]' : 0.17157}", "{'[0, 0, 3, 4, 1, 5, 0, 1, 1, 1, 0, 2, 0, 1, 0, 0, 1, 1]' : 0.172525}", "{'[0, 0, 3, 4, 1, 5, 0, 1, 1, 1, 0, 2, 0, 1, 0, 0, 1, 1]' : 0.172198}", "{'[0, 0, 3, 4, 1, 5, 0, 1, 1, 1, 0, 2, 0, 1, 0, 0, 1, 1]' : 0.172234}", "{'[0, 0, 3, 4, 1, 5, 0, 1, 1, 1, 0, 2, 0, 1, 0, 0, 1, 1]' : 0.172172}", "{'[0, 0, 3, 4, 1, 5, 0, 1, 1, 1, 0, 2, 0, 1, 0, 0, 1, 1]' : 0.171934}"]
returning from 'run': {'[0, 0, 3, 4, 1, 5, 0, 1, 1, 1, 0, 2, 0, 1, 0, 0, 1, 1]': ([0.205101, 0.205034, 0.196238, 0.171722, 0.171574, 0.171607, 0.171522, 0.171533, 0.172364, 0.171631, 0.171592, 0.171574, 0.171505, 0.171552, 0.172146, 0.171838, 0.17196, 0.171646, 0.171479, 0.171568, 0.171665, 0.1721, 0.171684, 0.171627, 0.17157, 0.172525, 0.172198, 0.172234, 0.172172, 0.171934], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 3, 4, 1, 5, 0, 1, 1, 1, 0, 2, 0, 1, 0, 0, 1, 1]': ([0.205101, 0.205034, 0.196238, 0.171722, 0.171574, 0.171607, 0.171522, 0.171533, 0.172364, 0.171631, 0.171592, 0.171574, 0.171505, 0.171552, 0.172146, 0.171838, 0.17196, 0.171646, 0.171479, 0.171568, 0.171665, 0.1721, 0.171684, 0.171627, 0.17157, 0.172525, 0.172198, 0.172234, 0.172172, 0.171934], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	4
        Additions: 		293
        Multiplications: 	108
        Divisions: 		0
        Logical: 		0
        Reads: 			655
        Writes: 		127
        Comparisons:		9
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest16.exe __orio_perftest16.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest16.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest16.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest16.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest16.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	27
        Max loop nest depth: 	5
        Additions: 		944
        Multiplications: 	252
        Divisions: 		0
        Logical: 		0
        Reads: 			1614
        Writes: 		202
        Comparisons:		27
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest17.exe __orio_perftest17.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest17.exe  
Program Test Output: 
{'[2, 3, 1, 0, 0, 5, 1, 0, 0, 4, 5, 0, 1, 1, 0, 0, 1, 1]' : 0.127034}
{'[2, 3, 1, 0, 0, 5, 1, 0, 0, 4, 5, 0, 1, 1, 0, 0, 1, 1]' : 0.127043}
{'[2, 3, 1, 0, 0, 5, 1, 0, 0, 4, 5, 0, 1, 1, 0, 0, 1, 1]' : 0.126964}
{'[2, 3, 1, 0, 0, 5, 1, 0, 0, 4, 5, 0, 1, 1, 0, 0, 1, 1]' : 0.126988}
{'[2, 3, 1, 0, 0, 5, 1, 0, 0, 4, 5, 0, 1, 1, 0, 0, 1, 1]' : 0.126202}
{'[2, 3, 1, 0, 0, 5, 1, 0, 0, 4, 5, 0, 1, 1, 0, 0, 1, 1]' : 0.109438}
{'[2, 3, 1, 0, 0, 5, 1, 0, 0, 4, 5, 0, 1, 1, 0, 0, 1, 1]' : 0.107755}
{'[2, 3, 1, 0, 0, 5, 1, 0, 0, 4, 5, 0, 1, 1, 0, 0, 1, 1]' : 0.107878}
{'[2, 3, 1, 0, 0, 5, 1, 0, 0, 4, 5, 0, 1, 1, 0, 0, 1, 1]' : 0.107722}
{'[2, 3, 1, 0, 0, 5, 1, 0, 0, 4, 5, 0, 1, 1, 0, 0, 1, 1]' : 0.108234}
{'[2, 3, 1, 0, 0, 5, 1, 0, 0, 4, 5, 0, 1, 1, 0, 0, 1, 1]' : 0.107977}
{'[2, 3, 1, 0, 0, 5, 1, 0, 0, 4, 5, 0, 1, 1, 0, 0, 1, 1]' : 0.108067}
{'[2, 3, 1, 0, 0, 5, 1, 0, 0, 4, 5, 0, 1, 1, 0, 0, 1, 1]' : 0.108066}
{'[2, 3, 1, 0, 0, 5, 1, 0, 0, 4, 5, 0, 1, 1, 0, 0, 1, 1]' : 0.108028}
{'[2, 3, 1, 0, 0, 5, 1, 0, 0, 4, 5, 0, 1, 1, 0, 0, 1, 1]' : 0.107848}
{'[2, 3, 1, 0, 0, 5, 1, 0, 0, 4, 5, 0, 1, 1, 0, 0, 1, 1]' : 0.11079}
{'[2, 3, 1, 0, 0, 5, 1, 0, 0, 4, 5, 0, 1, 1, 0, 0, 1, 1]' : 0.110708}
{'[2, 3, 1, 0, 0, 5, 1, 0, 0, 4, 5, 0, 1, 1, 0, 0, 1, 1]' : 0.110738}
{'[2, 3, 1, 0, 0, 5, 1, 0, 0, 4, 5, 0, 1, 1, 0, 0, 1, 1]' : 0.110622}
{'[2, 3, 1, 0, 0, 5, 1, 0, 0, 4, 5, 0, 1, 1, 0, 0, 1, 1]' : 0.110822}
{'[2, 3, 1, 0, 0, 5, 1, 0, 0, 4, 5, 0, 1, 1, 0, 0, 1, 1]' : 0.11126}
{'[2, 3, 1, 0, 0, 5, 1, 0, 0, 4, 5, 0, 1, 1, 0, 0, 1, 1]' : 0.110763}
{'[2, 3, 1, 0, 0, 5, 1, 0, 0, 4, 5, 0, 1, 1, 0, 0, 1, 1]' : 0.110597}
{'[2, 3, 1, 0, 0, 5, 1, 0, 0, 4, 5, 0, 1, 1, 0, 0, 1, 1]' : 0.110705}
{'[2, 3, 1, 0, 0, 5, 1, 0, 0, 4, 5, 0, 1, 1, 0, 0, 1, 1]' : 0.110893}
{'[2, 3, 1, 0, 0, 5, 1, 0, 0, 4, 5, 0, 1, 1, 0, 0, 1, 1]' : 0.110691}
{'[2, 3, 1, 0, 0, 5, 1, 0, 0, 4, 5, 0, 1, 1, 0, 0, 1, 1]' : 0.11054}
{'[2, 3, 1, 0, 0, 5, 1, 0, 0, 4, 5, 0, 1, 1, 0, 0, 1, 1]' : 0.110959}
{'[2, 3, 1, 0, 0, 5, 1, 0, 0, 4, 5, 0, 1, 1, 0, 0, 1, 1]' : 0.110678}
{'[2, 3, 1, 0, 0, 5, 1, 0, 0, 4, 5, 0, 1, 1, 0, 0, 1, 1]' : 0.111366}

out:
 ["{'[2, 3, 1, 0, 0, 5, 1, 0, 0, 4, 5, 0, 1, 1, 0, 0, 1, 1]' : 0.127034}", "{'[2, 3, 1, 0, 0, 5, 1, 0, 0, 4, 5, 0, 1, 1, 0, 0, 1, 1]' : 0.127043}", "{'[2, 3, 1, 0, 0, 5, 1, 0, 0, 4, 5, 0, 1, 1, 0, 0, 1, 1]' : 0.126964}", "{'[2, 3, 1, 0, 0, 5, 1, 0, 0, 4, 5, 0, 1, 1, 0, 0, 1, 1]' : 0.126988}", "{'[2, 3, 1, 0, 0, 5, 1, 0, 0, 4, 5, 0, 1, 1, 0, 0, 1, 1]' : 0.126202}", "{'[2, 3, 1, 0, 0, 5, 1, 0, 0, 4, 5, 0, 1, 1, 0, 0, 1, 1]' : 0.109438}", "{'[2, 3, 1, 0, 0, 5, 1, 0, 0, 4, 5, 0, 1, 1, 0, 0, 1, 1]' : 0.107755}", "{'[2, 3, 1, 0, 0, 5, 1, 0, 0, 4, 5, 0, 1, 1, 0, 0, 1, 1]' : 0.107878}", "{'[2, 3, 1, 0, 0, 5, 1, 0, 0, 4, 5, 0, 1, 1, 0, 0, 1, 1]' : 0.107722}", "{'[2, 3, 1, 0, 0, 5, 1, 0, 0, 4, 5, 0, 1, 1, 0, 0, 1, 1]' : 0.108234}", "{'[2, 3, 1, 0, 0, 5, 1, 0, 0, 4, 5, 0, 1, 1, 0, 0, 1, 1]' : 0.107977}", "{'[2, 3, 1, 0, 0, 5, 1, 0, 0, 4, 5, 0, 1, 1, 0, 0, 1, 1]' : 0.108067}", "{'[2, 3, 1, 0, 0, 5, 1, 0, 0, 4, 5, 0, 1, 1, 0, 0, 1, 1]' : 0.108066}", "{'[2, 3, 1, 0, 0, 5, 1, 0, 0, 4, 5, 0, 1, 1, 0, 0, 1, 1]' : 0.108028}", "{'[2, 3, 1, 0, 0, 5, 1, 0, 0, 4, 5, 0, 1, 1, 0, 0, 1, 1]' : 0.107848}", "{'[2, 3, 1, 0, 0, 5, 1, 0, 0, 4, 5, 0, 1, 1, 0, 0, 1, 1]' : 0.11079}", "{'[2, 3, 1, 0, 0, 5, 1, 0, 0, 4, 5, 0, 1, 1, 0, 0, 1, 1]' : 0.110708}", "{'[2, 3, 1, 0, 0, 5, 1, 0, 0, 4, 5, 0, 1, 1, 0, 0, 1, 1]' : 0.110738}", "{'[2, 3, 1, 0, 0, 5, 1, 0, 0, 4, 5, 0, 1, 1, 0, 0, 1, 1]' : 0.110622}", "{'[2, 3, 1, 0, 0, 5, 1, 0, 0, 4, 5, 0, 1, 1, 0, 0, 1, 1]' : 0.110822}", "{'[2, 3, 1, 0, 0, 5, 1, 0, 0, 4, 5, 0, 1, 1, 0, 0, 1, 1]' : 0.11126}", "{'[2, 3, 1, 0, 0, 5, 1, 0, 0, 4, 5, 0, 1, 1, 0, 0, 1, 1]' : 0.110763}", "{'[2, 3, 1, 0, 0, 5, 1, 0, 0, 4, 5, 0, 1, 1, 0, 0, 1, 1]' : 0.110597}", "{'[2, 3, 1, 0, 0, 5, 1, 0, 0, 4, 5, 0, 1, 1, 0, 0, 1, 1]' : 0.110705}", "{'[2, 3, 1, 0, 0, 5, 1, 0, 0, 4, 5, 0, 1, 1, 0, 0, 1, 1]' : 0.110893}", "{'[2, 3, 1, 0, 0, 5, 1, 0, 0, 4, 5, 0, 1, 1, 0, 0, 1, 1]' : 0.110691}", "{'[2, 3, 1, 0, 0, 5, 1, 0, 0, 4, 5, 0, 1, 1, 0, 0, 1, 1]' : 0.11054}", "{'[2, 3, 1, 0, 0, 5, 1, 0, 0, 4, 5, 0, 1, 1, 0, 0, 1, 1]' : 0.110959}", "{'[2, 3, 1, 0, 0, 5, 1, 0, 0, 4, 5, 0, 1, 1, 0, 0, 1, 1]' : 0.110678}", "{'[2, 3, 1, 0, 0, 5, 1, 0, 0, 4, 5, 0, 1, 1, 0, 0, 1, 1]' : 0.111366}"]
returning from 'run': {'[2, 3, 1, 0, 0, 5, 1, 0, 0, 4, 5, 0, 1, 1, 0, 0, 1, 1]': ([0.127034, 0.127043, 0.126964, 0.126988, 0.126202, 0.109438, 0.107755, 0.107878, 0.107722, 0.108234, 0.107977, 0.108067, 0.108066, 0.108028, 0.107848, 0.11079, 0.110708, 0.110738, 0.110622, 0.110822, 0.11126, 0.110763, 0.110597, 0.110705, 0.110893, 0.110691, 0.11054, 0.110959, 0.110678, 0.111366], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 3, 1, 0, 0, 5, 1, 0, 0, 4, 5, 0, 1, 1, 0, 0, 1, 1]': ([0.127034, 0.127043, 0.126964, 0.126988, 0.126202, 0.109438, 0.107755, 0.107878, 0.107722, 0.108234, 0.107977, 0.108067, 0.108066, 0.108028, 0.107848, 0.11079, 0.110708, 0.110738, 0.110622, 0.110822, 0.11126, 0.110763, 0.110597, 0.110705, 0.110893, 0.110691, 0.11054, 0.110959, 0.110678, 0.111366], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	6
        Additions: 		669
        Multiplications: 	198
        Divisions: 		0
        Logical: 		0
        Reads: 			1446
        Writes: 		307
        Comparisons:		22
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest18.exe __orio_perftest18.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest18.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest18.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest18.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest18.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	96
        Max loop nest depth: 	6
        Additions: 		3867
        Multiplications: 	1716
        Divisions: 		0
        Logical: 		0
        Reads: 			7462
        Writes: 		1248
        Comparisons:		96
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest19.exe __orio_perftest19.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest19.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest19.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest19.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest19.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	5
        Additions: 		6479
        Multiplications: 	3168
        Divisions: 		0
        Logical: 		0
        Reads: 			11904
        Writes: 		1811
        Comparisons:		24
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest20.exe __orio_perftest20.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest20.exe  
Program Test Output: 
{'[6, 6, 2, 0, 6, 5, 0, 1, 0, 0, 27, 17, 2, 0, 0, 1, 1, 0]' : 0.226667}
{'[6, 6, 2, 0, 6, 5, 0, 1, 0, 0, 27, 17, 2, 0, 0, 1, 1, 0]' : 0.229744}
{'[6, 6, 2, 0, 6, 5, 0, 1, 0, 0, 27, 17, 2, 0, 0, 1, 1, 0]' : 0.22786}
{'[6, 6, 2, 0, 6, 5, 0, 1, 0, 0, 27, 17, 2, 0, 0, 1, 1, 0]' : 0.227246}
{'[6, 6, 2, 0, 6, 5, 0, 1, 0, 0, 27, 17, 2, 0, 0, 1, 1, 0]' : 0.226155}
{'[6, 6, 2, 0, 6, 5, 0, 1, 0, 0, 27, 17, 2, 0, 0, 1, 1, 0]' : 0.223869}
{'[6, 6, 2, 0, 6, 5, 0, 1, 0, 0, 27, 17, 2, 0, 0, 1, 1, 0]' : 0.226053}
{'[6, 6, 2, 0, 6, 5, 0, 1, 0, 0, 27, 17, 2, 0, 0, 1, 1, 0]' : 0.227722}
{'[6, 6, 2, 0, 6, 5, 0, 1, 0, 0, 27, 17, 2, 0, 0, 1, 1, 0]' : 0.229004}
{'[6, 6, 2, 0, 6, 5, 0, 1, 0, 0, 27, 17, 2, 0, 0, 1, 1, 0]' : 0.229357}
{'[6, 6, 2, 0, 6, 5, 0, 1, 0, 0, 27, 17, 2, 0, 0, 1, 1, 0]' : 0.227934}
{'[6, 6, 2, 0, 6, 5, 0, 1, 0, 0, 27, 17, 2, 0, 0, 1, 1, 0]' : 0.225984}
{'[6, 6, 2, 0, 6, 5, 0, 1, 0, 0, 27, 17, 2, 0, 0, 1, 1, 0]' : 0.223135}
{'[6, 6, 2, 0, 6, 5, 0, 1, 0, 0, 27, 17, 2, 0, 0, 1, 1, 0]' : 0.226083}
{'[6, 6, 2, 0, 6, 5, 0, 1, 0, 0, 27, 17, 2, 0, 0, 1, 1, 0]' : 0.225563}
{'[6, 6, 2, 0, 6, 5, 0, 1, 0, 0, 27, 17, 2, 0, 0, 1, 1, 0]' : 0.228043}
{'[6, 6, 2, 0, 6, 5, 0, 1, 0, 0, 27, 17, 2, 0, 0, 1, 1, 0]' : 0.226565}
{'[6, 6, 2, 0, 6, 5, 0, 1, 0, 0, 27, 17, 2, 0, 0, 1, 1, 0]' : 0.228697}
{'[6, 6, 2, 0, 6, 5, 0, 1, 0, 0, 27, 17, 2, 0, 0, 1, 1, 0]' : 0.227953}
{'[6, 6, 2, 0, 6, 5, 0, 1, 0, 0, 27, 17, 2, 0, 0, 1, 1, 0]' : 0.226952}
{'[6, 6, 2, 0, 6, 5, 0, 1, 0, 0, 27, 17, 2, 0, 0, 1, 1, 0]' : 0.225421}
{'[6, 6, 2, 0, 6, 5, 0, 1, 0, 0, 27, 17, 2, 0, 0, 1, 1, 0]' : 0.22633}
{'[6, 6, 2, 0, 6, 5, 0, 1, 0, 0, 27, 17, 2, 0, 0, 1, 1, 0]' : 0.226522}
{'[6, 6, 2, 0, 6, 5, 0, 1, 0, 0, 27, 17, 2, 0, 0, 1, 1, 0]' : 0.223479}
{'[6, 6, 2, 0, 6, 5, 0, 1, 0, 0, 27, 17, 2, 0, 0, 1, 1, 0]' : 0.223276}
{'[6, 6, 2, 0, 6, 5, 0, 1, 0, 0, 27, 17, 2, 0, 0, 1, 1, 0]' : 0.226622}
{'[6, 6, 2, 0, 6, 5, 0, 1, 0, 0, 27, 17, 2, 0, 0, 1, 1, 0]' : 0.224788}
{'[6, 6, 2, 0, 6, 5, 0, 1, 0, 0, 27, 17, 2, 0, 0, 1, 1, 0]' : 0.224434}
{'[6, 6, 2, 0, 6, 5, 0, 1, 0, 0, 27, 17, 2, 0, 0, 1, 1, 0]' : 0.226379}
{'[6, 6, 2, 0, 6, 5, 0, 1, 0, 0, 27, 17, 2, 0, 0, 1, 1, 0]' : 0.225546}

out:
 ["{'[6, 6, 2, 0, 6, 5, 0, 1, 0, 0, 27, 17, 2, 0, 0, 1, 1, 0]' : 0.226667}", "{'[6, 6, 2, 0, 6, 5, 0, 1, 0, 0, 27, 17, 2, 0, 0, 1, 1, 0]' : 0.229744}", "{'[6, 6, 2, 0, 6, 5, 0, 1, 0, 0, 27, 17, 2, 0, 0, 1, 1, 0]' : 0.22786}", "{'[6, 6, 2, 0, 6, 5, 0, 1, 0, 0, 27, 17, 2, 0, 0, 1, 1, 0]' : 0.227246}", "{'[6, 6, 2, 0, 6, 5, 0, 1, 0, 0, 27, 17, 2, 0, 0, 1, 1, 0]' : 0.226155}", "{'[6, 6, 2, 0, 6, 5, 0, 1, 0, 0, 27, 17, 2, 0, 0, 1, 1, 0]' : 0.223869}", "{'[6, 6, 2, 0, 6, 5, 0, 1, 0, 0, 27, 17, 2, 0, 0, 1, 1, 0]' : 0.226053}", "{'[6, 6, 2, 0, 6, 5, 0, 1, 0, 0, 27, 17, 2, 0, 0, 1, 1, 0]' : 0.227722}", "{'[6, 6, 2, 0, 6, 5, 0, 1, 0, 0, 27, 17, 2, 0, 0, 1, 1, 0]' : 0.229004}", "{'[6, 6, 2, 0, 6, 5, 0, 1, 0, 0, 27, 17, 2, 0, 0, 1, 1, 0]' : 0.229357}", "{'[6, 6, 2, 0, 6, 5, 0, 1, 0, 0, 27, 17, 2, 0, 0, 1, 1, 0]' : 0.227934}", "{'[6, 6, 2, 0, 6, 5, 0, 1, 0, 0, 27, 17, 2, 0, 0, 1, 1, 0]' : 0.225984}", "{'[6, 6, 2, 0, 6, 5, 0, 1, 0, 0, 27, 17, 2, 0, 0, 1, 1, 0]' : 0.223135}", "{'[6, 6, 2, 0, 6, 5, 0, 1, 0, 0, 27, 17, 2, 0, 0, 1, 1, 0]' : 0.226083}", "{'[6, 6, 2, 0, 6, 5, 0, 1, 0, 0, 27, 17, 2, 0, 0, 1, 1, 0]' : 0.225563}", "{'[6, 6, 2, 0, 6, 5, 0, 1, 0, 0, 27, 17, 2, 0, 0, 1, 1, 0]' : 0.228043}", "{'[6, 6, 2, 0, 6, 5, 0, 1, 0, 0, 27, 17, 2, 0, 0, 1, 1, 0]' : 0.226565}", "{'[6, 6, 2, 0, 6, 5, 0, 1, 0, 0, 27, 17, 2, 0, 0, 1, 1, 0]' : 0.228697}", "{'[6, 6, 2, 0, 6, 5, 0, 1, 0, 0, 27, 17, 2, 0, 0, 1, 1, 0]' : 0.227953}", "{'[6, 6, 2, 0, 6, 5, 0, 1, 0, 0, 27, 17, 2, 0, 0, 1, 1, 0]' : 0.226952}", "{'[6, 6, 2, 0, 6, 5, 0, 1, 0, 0, 27, 17, 2, 0, 0, 1, 1, 0]' : 0.225421}", "{'[6, 6, 2, 0, 6, 5, 0, 1, 0, 0, 27, 17, 2, 0, 0, 1, 1, 0]' : 0.22633}", "{'[6, 6, 2, 0, 6, 5, 0, 1, 0, 0, 27, 17, 2, 0, 0, 1, 1, 0]' : 0.226522}", "{'[6, 6, 2, 0, 6, 5, 0, 1, 0, 0, 27, 17, 2, 0, 0, 1, 1, 0]' : 0.223479}", "{'[6, 6, 2, 0, 6, 5, 0, 1, 0, 0, 27, 17, 2, 0, 0, 1, 1, 0]' : 0.223276}", "{'[6, 6, 2, 0, 6, 5, 0, 1, 0, 0, 27, 17, 2, 0, 0, 1, 1, 0]' : 0.226622}", "{'[6, 6, 2, 0, 6, 5, 0, 1, 0, 0, 27, 17, 2, 0, 0, 1, 1, 0]' : 0.224788}", "{'[6, 6, 2, 0, 6, 5, 0, 1, 0, 0, 27, 17, 2, 0, 0, 1, 1, 0]' : 0.224434}", "{'[6, 6, 2, 0, 6, 5, 0, 1, 0, 0, 27, 17, 2, 0, 0, 1, 1, 0]' : 0.226379}", "{'[6, 6, 2, 0, 6, 5, 0, 1, 0, 0, 27, 17, 2, 0, 0, 1, 1, 0]' : 0.225546}"]
returning from 'run': {'[6, 6, 2, 0, 6, 5, 0, 1, 0, 0, 27, 17, 2, 0, 0, 1, 1, 0]': ([0.226667, 0.229744, 0.22786, 0.227246, 0.226155, 0.223869, 0.226053, 0.227722, 0.229004, 0.229357, 0.227934, 0.225984, 0.223135, 0.226083, 0.225563, 0.228043, 0.226565, 0.228697, 0.227953, 0.226952, 0.225421, 0.22633, 0.226522, 0.223479, 0.223276, 0.226622, 0.224788, 0.224434, 0.226379, 0.225546], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 2, 0, 6, 5, 0, 1, 0, 0, 27, 17, 2, 0, 0, 1, 1, 0]': ([0.226667, 0.229744, 0.22786, 0.227246, 0.226155, 0.223869, 0.226053, 0.227722, 0.229004, 0.229357, 0.227934, 0.225984, 0.223135, 0.226083, 0.225563, 0.228043, 0.226565, 0.228697, 0.227953, 0.226952, 0.225421, 0.22633, 0.226522, 0.223479, 0.223276, 0.226622, 0.224788, 0.224434, 0.226379, 0.225546], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	5
        Additions: 		1951
        Multiplications: 	528
        Divisions: 		0
        Logical: 		0
        Reads: 			3093
        Writes: 		323
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest21.exe __orio_perftest21.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest21.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest21.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest21.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest21.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	6
        Additions: 		312
        Multiplications: 	104
        Divisions: 		0
        Logical: 		0
        Reads: 			755
        Writes: 		184
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest22.exe __orio_perftest22.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest22.exe  
Program Test Output: 
{'[6, 6, 6, 6, 0, 5, 0, 0, 24, 0, 15, 1, 0, 0, 2, 1, 0, 1]' : 0.174187}
{'[6, 6, 6, 6, 0, 5, 0, 0, 24, 0, 15, 1, 0, 0, 2, 1, 0, 1]' : 0.171934}
{'[6, 6, 6, 6, 0, 5, 0, 0, 24, 0, 15, 1, 0, 0, 2, 1, 0, 1]' : 0.146837}
{'[6, 6, 6, 6, 0, 5, 0, 0, 24, 0, 15, 1, 0, 0, 2, 1, 0, 1]' : 0.150084}
{'[6, 6, 6, 6, 0, 5, 0, 0, 24, 0, 15, 1, 0, 0, 2, 1, 0, 1]' : 0.150427}
{'[6, 6, 6, 6, 0, 5, 0, 0, 24, 0, 15, 1, 0, 0, 2, 1, 0, 1]' : 0.150471}
{'[6, 6, 6, 6, 0, 5, 0, 0, 24, 0, 15, 1, 0, 0, 2, 1, 0, 1]' : 0.150553}
{'[6, 6, 6, 6, 0, 5, 0, 0, 24, 0, 15, 1, 0, 0, 2, 1, 0, 1]' : 0.1464}
{'[6, 6, 6, 6, 0, 5, 0, 0, 24, 0, 15, 1, 0, 0, 2, 1, 0, 1]' : 0.146131}
{'[6, 6, 6, 6, 0, 5, 0, 0, 24, 0, 15, 1, 0, 0, 2, 1, 0, 1]' : 0.146681}
{'[6, 6, 6, 6, 0, 5, 0, 0, 24, 0, 15, 1, 0, 0, 2, 1, 0, 1]' : 0.150389}
{'[6, 6, 6, 6, 0, 5, 0, 0, 24, 0, 15, 1, 0, 0, 2, 1, 0, 1]' : 0.150413}
{'[6, 6, 6, 6, 0, 5, 0, 0, 24, 0, 15, 1, 0, 0, 2, 1, 0, 1]' : 0.150509}
{'[6, 6, 6, 6, 0, 5, 0, 0, 24, 0, 15, 1, 0, 0, 2, 1, 0, 1]' : 0.151922}
{'[6, 6, 6, 6, 0, 5, 0, 0, 24, 0, 15, 1, 0, 0, 2, 1, 0, 1]' : 0.150366}
{'[6, 6, 6, 6, 0, 5, 0, 0, 24, 0, 15, 1, 0, 0, 2, 1, 0, 1]' : 0.150349}
{'[6, 6, 6, 6, 0, 5, 0, 0, 24, 0, 15, 1, 0, 0, 2, 1, 0, 1]' : 0.15049}
{'[6, 6, 6, 6, 0, 5, 0, 0, 24, 0, 15, 1, 0, 0, 2, 1, 0, 1]' : 0.150429}
{'[6, 6, 6, 6, 0, 5, 0, 0, 24, 0, 15, 1, 0, 0, 2, 1, 0, 1]' : 0.147893}
{'[6, 6, 6, 6, 0, 5, 0, 0, 24, 0, 15, 1, 0, 0, 2, 1, 0, 1]' : 0.146924}
{'[6, 6, 6, 6, 0, 5, 0, 0, 24, 0, 15, 1, 0, 0, 2, 1, 0, 1]' : 0.150452}
{'[6, 6, 6, 6, 0, 5, 0, 0, 24, 0, 15, 1, 0, 0, 2, 1, 0, 1]' : 0.150575}
{'[6, 6, 6, 6, 0, 5, 0, 0, 24, 0, 15, 1, 0, 0, 2, 1, 0, 1]' : 0.150364}
{'[6, 6, 6, 6, 0, 5, 0, 0, 24, 0, 15, 1, 0, 0, 2, 1, 0, 1]' : 0.150471}
{'[6, 6, 6, 6, 0, 5, 0, 0, 24, 0, 15, 1, 0, 0, 2, 1, 0, 1]' : 0.150363}
{'[6, 6, 6, 6, 0, 5, 0, 0, 24, 0, 15, 1, 0, 0, 2, 1, 0, 1]' : 0.15038}
{'[6, 6, 6, 6, 0, 5, 0, 0, 24, 0, 15, 1, 0, 0, 2, 1, 0, 1]' : 0.153446}
{'[6, 6, 6, 6, 0, 5, 0, 0, 24, 0, 15, 1, 0, 0, 2, 1, 0, 1]' : 0.156291}
{'[6, 6, 6, 6, 0, 5, 0, 0, 24, 0, 15, 1, 0, 0, 2, 1, 0, 1]' : 0.156263}
{'[6, 6, 6, 6, 0, 5, 0, 0, 24, 0, 15, 1, 0, 0, 2, 1, 0, 1]' : 0.156394}

out:
 ["{'[6, 6, 6, 6, 0, 5, 0, 0, 24, 0, 15, 1, 0, 0, 2, 1, 0, 1]' : 0.174187}", "{'[6, 6, 6, 6, 0, 5, 0, 0, 24, 0, 15, 1, 0, 0, 2, 1, 0, 1]' : 0.171934}", "{'[6, 6, 6, 6, 0, 5, 0, 0, 24, 0, 15, 1, 0, 0, 2, 1, 0, 1]' : 0.146837}", "{'[6, 6, 6, 6, 0, 5, 0, 0, 24, 0, 15, 1, 0, 0, 2, 1, 0, 1]' : 0.150084}", "{'[6, 6, 6, 6, 0, 5, 0, 0, 24, 0, 15, 1, 0, 0, 2, 1, 0, 1]' : 0.150427}", "{'[6, 6, 6, 6, 0, 5, 0, 0, 24, 0, 15, 1, 0, 0, 2, 1, 0, 1]' : 0.150471}", "{'[6, 6, 6, 6, 0, 5, 0, 0, 24, 0, 15, 1, 0, 0, 2, 1, 0, 1]' : 0.150553}", "{'[6, 6, 6, 6, 0, 5, 0, 0, 24, 0, 15, 1, 0, 0, 2, 1, 0, 1]' : 0.1464}", "{'[6, 6, 6, 6, 0, 5, 0, 0, 24, 0, 15, 1, 0, 0, 2, 1, 0, 1]' : 0.146131}", "{'[6, 6, 6, 6, 0, 5, 0, 0, 24, 0, 15, 1, 0, 0, 2, 1, 0, 1]' : 0.146681}", "{'[6, 6, 6, 6, 0, 5, 0, 0, 24, 0, 15, 1, 0, 0, 2, 1, 0, 1]' : 0.150389}", "{'[6, 6, 6, 6, 0, 5, 0, 0, 24, 0, 15, 1, 0, 0, 2, 1, 0, 1]' : 0.150413}", "{'[6, 6, 6, 6, 0, 5, 0, 0, 24, 0, 15, 1, 0, 0, 2, 1, 0, 1]' : 0.150509}", "{'[6, 6, 6, 6, 0, 5, 0, 0, 24, 0, 15, 1, 0, 0, 2, 1, 0, 1]' : 0.151922}", "{'[6, 6, 6, 6, 0, 5, 0, 0, 24, 0, 15, 1, 0, 0, 2, 1, 0, 1]' : 0.150366}", "{'[6, 6, 6, 6, 0, 5, 0, 0, 24, 0, 15, 1, 0, 0, 2, 1, 0, 1]' : 0.150349}", "{'[6, 6, 6, 6, 0, 5, 0, 0, 24, 0, 15, 1, 0, 0, 2, 1, 0, 1]' : 0.15049}", "{'[6, 6, 6, 6, 0, 5, 0, 0, 24, 0, 15, 1, 0, 0, 2, 1, 0, 1]' : 0.150429}", "{'[6, 6, 6, 6, 0, 5, 0, 0, 24, 0, 15, 1, 0, 0, 2, 1, 0, 1]' : 0.147893}", "{'[6, 6, 6, 6, 0, 5, 0, 0, 24, 0, 15, 1, 0, 0, 2, 1, 0, 1]' : 0.146924}", "{'[6, 6, 6, 6, 0, 5, 0, 0, 24, 0, 15, 1, 0, 0, 2, 1, 0, 1]' : 0.150452}", "{'[6, 6, 6, 6, 0, 5, 0, 0, 24, 0, 15, 1, 0, 0, 2, 1, 0, 1]' : 0.150575}", "{'[6, 6, 6, 6, 0, 5, 0, 0, 24, 0, 15, 1, 0, 0, 2, 1, 0, 1]' : 0.150364}", "{'[6, 6, 6, 6, 0, 5, 0, 0, 24, 0, 15, 1, 0, 0, 2, 1, 0, 1]' : 0.150471}", "{'[6, 6, 6, 6, 0, 5, 0, 0, 24, 0, 15, 1, 0, 0, 2, 1, 0, 1]' : 0.150363}", "{'[6, 6, 6, 6, 0, 5, 0, 0, 24, 0, 15, 1, 0, 0, 2, 1, 0, 1]' : 0.15038}", "{'[6, 6, 6, 6, 0, 5, 0, 0, 24, 0, 15, 1, 0, 0, 2, 1, 0, 1]' : 0.153446}", "{'[6, 6, 6, 6, 0, 5, 0, 0, 24, 0, 15, 1, 0, 0, 2, 1, 0, 1]' : 0.156291}", "{'[6, 6, 6, 6, 0, 5, 0, 0, 24, 0, 15, 1, 0, 0, 2, 1, 0, 1]' : 0.156263}", "{'[6, 6, 6, 6, 0, 5, 0, 0, 24, 0, 15, 1, 0, 0, 2, 1, 0, 1]' : 0.156394}"]
returning from 'run': {'[6, 6, 6, 6, 0, 5, 0, 0, 24, 0, 15, 1, 0, 0, 2, 1, 0, 1]': ([0.174187, 0.171934, 0.146837, 0.150084, 0.150427, 0.150471, 0.150553, 0.1464, 0.146131, 0.146681, 0.150389, 0.150413, 0.150509, 0.151922, 0.150366, 0.150349, 0.15049, 0.150429, 0.147893, 0.146924, 0.150452, 0.150575, 0.150364, 0.150471, 0.150363, 0.15038, 0.153446, 0.156291, 0.156263, 0.156394], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 6, 6, 0, 5, 0, 0, 24, 0, 15, 1, 0, 0, 2, 1, 0, 1]': ([0.174187, 0.171934, 0.146837, 0.150084, 0.150427, 0.150471, 0.150553, 0.1464, 0.146131, 0.146681, 0.150389, 0.150413, 0.150509, 0.151922, 0.150366, 0.150349, 0.15049, 0.150429, 0.147893, 0.146924, 0.150452, 0.150575, 0.150364, 0.150471, 0.150363, 0.15038, 0.153446, 0.156291, 0.156263, 0.156394], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	40
        Max loop nest depth: 	5
        Additions: 		1508
        Multiplications: 	608
        Divisions: 		0
        Logical: 		0
        Reads: 			3162
        Writes: 		627
        Comparisons:		40
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest23.exe __orio_perftest23.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest23.exe  
Program Test Output: 
{'[0, 3, 6, 1, 6, 5, 1, 0, 0, 6, 0, 3, 0, 0, 2, 1, 1, 0]' : 0.141195}
{'[0, 3, 6, 1, 6, 5, 1, 0, 0, 6, 0, 3, 0, 0, 2, 1, 1, 0]' : 0.141432}
{'[0, 3, 6, 1, 6, 5, 1, 0, 0, 6, 0, 3, 0, 0, 2, 1, 1, 0]' : 0.14111}
{'[0, 3, 6, 1, 6, 5, 1, 0, 0, 6, 0, 3, 0, 0, 2, 1, 1, 0]' : 0.141191}
{'[0, 3, 6, 1, 6, 5, 1, 0, 0, 6, 0, 3, 0, 0, 2, 1, 1, 0]' : 0.139611}
{'[0, 3, 6, 1, 6, 5, 1, 0, 0, 6, 0, 3, 0, 0, 2, 1, 1, 0]' : 0.136968}
{'[0, 3, 6, 1, 6, 5, 1, 0, 0, 6, 0, 3, 0, 0, 2, 1, 1, 0]' : 0.137142}
{'[0, 3, 6, 1, 6, 5, 1, 0, 0, 6, 0, 3, 0, 0, 2, 1, 1, 0]' : 0.137361}
{'[0, 3, 6, 1, 6, 5, 1, 0, 0, 6, 0, 3, 0, 0, 2, 1, 1, 0]' : 0.137037}
{'[0, 3, 6, 1, 6, 5, 1, 0, 0, 6, 0, 3, 0, 0, 2, 1, 1, 0]' : 0.136993}
{'[0, 3, 6, 1, 6, 5, 1, 0, 0, 6, 0, 3, 0, 0, 2, 1, 1, 0]' : 0.137186}
{'[0, 3, 6, 1, 6, 5, 1, 0, 0, 6, 0, 3, 0, 0, 2, 1, 1, 0]' : 0.137036}
{'[0, 3, 6, 1, 6, 5, 1, 0, 0, 6, 0, 3, 0, 0, 2, 1, 1, 0]' : 0.137181}
{'[0, 3, 6, 1, 6, 5, 1, 0, 0, 6, 0, 3, 0, 0, 2, 1, 1, 0]' : 0.137024}
{'[0, 3, 6, 1, 6, 5, 1, 0, 0, 6, 0, 3, 0, 0, 2, 1, 1, 0]' : 0.137165}
{'[0, 3, 6, 1, 6, 5, 1, 0, 0, 6, 0, 3, 0, 0, 2, 1, 1, 0]' : 0.137226}
{'[0, 3, 6, 1, 6, 5, 1, 0, 0, 6, 0, 3, 0, 0, 2, 1, 1, 0]' : 0.13701}
{'[0, 3, 6, 1, 6, 5, 1, 0, 0, 6, 0, 3, 0, 0, 2, 1, 1, 0]' : 0.137328}
{'[0, 3, 6, 1, 6, 5, 1, 0, 0, 6, 0, 3, 0, 0, 2, 1, 1, 0]' : 0.137044}
{'[0, 3, 6, 1, 6, 5, 1, 0, 0, 6, 0, 3, 0, 0, 2, 1, 1, 0]' : 0.136989}
{'[0, 3, 6, 1, 6, 5, 1, 0, 0, 6, 0, 3, 0, 0, 2, 1, 1, 0]' : 0.137138}
{'[0, 3, 6, 1, 6, 5, 1, 0, 0, 6, 0, 3, 0, 0, 2, 1, 1, 0]' : 0.137227}
{'[0, 3, 6, 1, 6, 5, 1, 0, 0, 6, 0, 3, 0, 0, 2, 1, 1, 0]' : 0.137305}
{'[0, 3, 6, 1, 6, 5, 1, 0, 0, 6, 0, 3, 0, 0, 2, 1, 1, 0]' : 0.137408}
{'[0, 3, 6, 1, 6, 5, 1, 0, 0, 6, 0, 3, 0, 0, 2, 1, 1, 0]' : 0.137068}
{'[0, 3, 6, 1, 6, 5, 1, 0, 0, 6, 0, 3, 0, 0, 2, 1, 1, 0]' : 0.137476}
{'[0, 3, 6, 1, 6, 5, 1, 0, 0, 6, 0, 3, 0, 0, 2, 1, 1, 0]' : 0.137376}
{'[0, 3, 6, 1, 6, 5, 1, 0, 0, 6, 0, 3, 0, 0, 2, 1, 1, 0]' : 0.137197}
{'[0, 3, 6, 1, 6, 5, 1, 0, 0, 6, 0, 3, 0, 0, 2, 1, 1, 0]' : 0.137073}
{'[0, 3, 6, 1, 6, 5, 1, 0, 0, 6, 0, 3, 0, 0, 2, 1, 1, 0]' : 0.137006}

out:
 ["{'[0, 3, 6, 1, 6, 5, 1, 0, 0, 6, 0, 3, 0, 0, 2, 1, 1, 0]' : 0.141195}", "{'[0, 3, 6, 1, 6, 5, 1, 0, 0, 6, 0, 3, 0, 0, 2, 1, 1, 0]' : 0.141432}", "{'[0, 3, 6, 1, 6, 5, 1, 0, 0, 6, 0, 3, 0, 0, 2, 1, 1, 0]' : 0.14111}", "{'[0, 3, 6, 1, 6, 5, 1, 0, 0, 6, 0, 3, 0, 0, 2, 1, 1, 0]' : 0.141191}", "{'[0, 3, 6, 1, 6, 5, 1, 0, 0, 6, 0, 3, 0, 0, 2, 1, 1, 0]' : 0.139611}", "{'[0, 3, 6, 1, 6, 5, 1, 0, 0, 6, 0, 3, 0, 0, 2, 1, 1, 0]' : 0.136968}", "{'[0, 3, 6, 1, 6, 5, 1, 0, 0, 6, 0, 3, 0, 0, 2, 1, 1, 0]' : 0.137142}", "{'[0, 3, 6, 1, 6, 5, 1, 0, 0, 6, 0, 3, 0, 0, 2, 1, 1, 0]' : 0.137361}", "{'[0, 3, 6, 1, 6, 5, 1, 0, 0, 6, 0, 3, 0, 0, 2, 1, 1, 0]' : 0.137037}", "{'[0, 3, 6, 1, 6, 5, 1, 0, 0, 6, 0, 3, 0, 0, 2, 1, 1, 0]' : 0.136993}", "{'[0, 3, 6, 1, 6, 5, 1, 0, 0, 6, 0, 3, 0, 0, 2, 1, 1, 0]' : 0.137186}", "{'[0, 3, 6, 1, 6, 5, 1, 0, 0, 6, 0, 3, 0, 0, 2, 1, 1, 0]' : 0.137036}", "{'[0, 3, 6, 1, 6, 5, 1, 0, 0, 6, 0, 3, 0, 0, 2, 1, 1, 0]' : 0.137181}", "{'[0, 3, 6, 1, 6, 5, 1, 0, 0, 6, 0, 3, 0, 0, 2, 1, 1, 0]' : 0.137024}", "{'[0, 3, 6, 1, 6, 5, 1, 0, 0, 6, 0, 3, 0, 0, 2, 1, 1, 0]' : 0.137165}", "{'[0, 3, 6, 1, 6, 5, 1, 0, 0, 6, 0, 3, 0, 0, 2, 1, 1, 0]' : 0.137226}", "{'[0, 3, 6, 1, 6, 5, 1, 0, 0, 6, 0, 3, 0, 0, 2, 1, 1, 0]' : 0.13701}", "{'[0, 3, 6, 1, 6, 5, 1, 0, 0, 6, 0, 3, 0, 0, 2, 1, 1, 0]' : 0.137328}", "{'[0, 3, 6, 1, 6, 5, 1, 0, 0, 6, 0, 3, 0, 0, 2, 1, 1, 0]' : 0.137044}", "{'[0, 3, 6, 1, 6, 5, 1, 0, 0, 6, 0, 3, 0, 0, 2, 1, 1, 0]' : 0.136989}", "{'[0, 3, 6, 1, 6, 5, 1, 0, 0, 6, 0, 3, 0, 0, 2, 1, 1, 0]' : 0.137138}", "{'[0, 3, 6, 1, 6, 5, 1, 0, 0, 6, 0, 3, 0, 0, 2, 1, 1, 0]' : 0.137227}", "{'[0, 3, 6, 1, 6, 5, 1, 0, 0, 6, 0, 3, 0, 0, 2, 1, 1, 0]' : 0.137305}", "{'[0, 3, 6, 1, 6, 5, 1, 0, 0, 6, 0, 3, 0, 0, 2, 1, 1, 0]' : 0.137408}", "{'[0, 3, 6, 1, 6, 5, 1, 0, 0, 6, 0, 3, 0, 0, 2, 1, 1, 0]' : 0.137068}", "{'[0, 3, 6, 1, 6, 5, 1, 0, 0, 6, 0, 3, 0, 0, 2, 1, 1, 0]' : 0.137476}", "{'[0, 3, 6, 1, 6, 5, 1, 0, 0, 6, 0, 3, 0, 0, 2, 1, 1, 0]' : 0.137376}", "{'[0, 3, 6, 1, 6, 5, 1, 0, 0, 6, 0, 3, 0, 0, 2, 1, 1, 0]' : 0.137197}", "{'[0, 3, 6, 1, 6, 5, 1, 0, 0, 6, 0, 3, 0, 0, 2, 1, 1, 0]' : 0.137073}", "{'[0, 3, 6, 1, 6, 5, 1, 0, 0, 6, 0, 3, 0, 0, 2, 1, 1, 0]' : 0.137006}"]
returning from 'run': {'[0, 3, 6, 1, 6, 5, 1, 0, 0, 6, 0, 3, 0, 0, 2, 1, 1, 0]': ([0.141195, 0.141432, 0.14111, 0.141191, 0.139611, 0.136968, 0.137142, 0.137361, 0.137037, 0.136993, 0.137186, 0.137036, 0.137181, 0.137024, 0.137165, 0.137226, 0.13701, 0.137328, 0.137044, 0.136989, 0.137138, 0.137227, 0.137305, 0.137408, 0.137068, 0.137476, 0.137376, 0.137197, 0.137073, 0.137006], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 3, 6, 1, 6, 5, 1, 0, 0, 6, 0, 3, 0, 0, 2, 1, 1, 0]': ([0.141195, 0.141432, 0.14111, 0.141191, 0.139611, 0.136968, 0.137142, 0.137361, 0.137037, 0.136993, 0.137186, 0.137036, 0.137181, 0.137024, 0.137165, 0.137226, 0.13701, 0.137328, 0.137044, 0.136989, 0.137138, 0.137227, 0.137305, 0.137408, 0.137068, 0.137476, 0.137376, 0.137197, 0.137073, 0.137006], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	5
        Additions: 		325
        Multiplications: 	114
        Divisions: 		0
        Logical: 		0
        Reads: 			730
        Writes: 		147
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest24.exe __orio_perftest24.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest24.exe  
Program Test Output: 
{'[1, 0, 5, 6, 1, 0, 1, 0, 0, 0, 24, 29, 0, 0, 0, 1, 1, 0]' : 0.19651}
{'[1, 0, 5, 6, 1, 0, 1, 0, 0, 0, 24, 29, 0, 0, 0, 1, 1, 0]' : 0.196452}
{'[1, 0, 5, 6, 1, 0, 1, 0, 0, 0, 24, 29, 0, 0, 0, 1, 1, 0]' : 0.175434}
{'[1, 0, 5, 6, 1, 0, 1, 0, 0, 0, 24, 29, 0, 0, 0, 1, 1, 0]' : 0.169581}
{'[1, 0, 5, 6, 1, 0, 1, 0, 0, 0, 24, 29, 0, 0, 0, 1, 1, 0]' : 0.173358}
{'[1, 0, 5, 6, 1, 0, 1, 0, 0, 0, 24, 29, 0, 0, 0, 1, 1, 0]' : 0.175103}
{'[1, 0, 5, 6, 1, 0, 1, 0, 0, 0, 24, 29, 0, 0, 0, 1, 1, 0]' : 0.169861}
{'[1, 0, 5, 6, 1, 0, 1, 0, 0, 0, 24, 29, 0, 0, 0, 1, 1, 0]' : 0.173951}
{'[1, 0, 5, 6, 1, 0, 1, 0, 0, 0, 24, 29, 0, 0, 0, 1, 1, 0]' : 0.17503}
{'[1, 0, 5, 6, 1, 0, 1, 0, 0, 0, 24, 29, 0, 0, 0, 1, 1, 0]' : 0.175059}
{'[1, 0, 5, 6, 1, 0, 1, 0, 0, 0, 24, 29, 0, 0, 0, 1, 1, 0]' : 0.172043}
{'[1, 0, 5, 6, 1, 0, 1, 0, 0, 0, 24, 29, 0, 0, 0, 1, 1, 0]' : 0.164419}
{'[1, 0, 5, 6, 1, 0, 1, 0, 0, 0, 24, 29, 0, 0, 0, 1, 1, 0]' : 0.164164}
{'[1, 0, 5, 6, 1, 0, 1, 0, 0, 0, 24, 29, 0, 0, 0, 1, 1, 0]' : 0.169366}
{'[1, 0, 5, 6, 1, 0, 1, 0, 0, 0, 24, 29, 0, 0, 0, 1, 1, 0]' : 0.16972}
{'[1, 0, 5, 6, 1, 0, 1, 0, 0, 0, 24, 29, 0, 0, 0, 1, 1, 0]' : 0.169582}
{'[1, 0, 5, 6, 1, 0, 1, 0, 0, 0, 24, 29, 0, 0, 0, 1, 1, 0]' : 0.169691}
{'[1, 0, 5, 6, 1, 0, 1, 0, 0, 0, 24, 29, 0, 0, 0, 1, 1, 0]' : 0.169673}
{'[1, 0, 5, 6, 1, 0, 1, 0, 0, 0, 24, 29, 0, 0, 0, 1, 1, 0]' : 0.169923}
{'[1, 0, 5, 6, 1, 0, 1, 0, 0, 0, 24, 29, 0, 0, 0, 1, 1, 0]' : 0.170615}
{'[1, 0, 5, 6, 1, 0, 1, 0, 0, 0, 24, 29, 0, 0, 0, 1, 1, 0]' : 0.169562}
{'[1, 0, 5, 6, 1, 0, 1, 0, 0, 0, 24, 29, 0, 0, 0, 1, 1, 0]' : 0.170403}
{'[1, 0, 5, 6, 1, 0, 1, 0, 0, 0, 24, 29, 0, 0, 0, 1, 1, 0]' : 0.17503}
{'[1, 0, 5, 6, 1, 0, 1, 0, 0, 0, 24, 29, 0, 0, 0, 1, 1, 0]' : 0.171885}
{'[1, 0, 5, 6, 1, 0, 1, 0, 0, 0, 24, 29, 0, 0, 0, 1, 1, 0]' : 0.170765}
{'[1, 0, 5, 6, 1, 0, 1, 0, 0, 0, 24, 29, 0, 0, 0, 1, 1, 0]' : 0.175014}
{'[1, 0, 5, 6, 1, 0, 1, 0, 0, 0, 24, 29, 0, 0, 0, 1, 1, 0]' : 0.175066}
{'[1, 0, 5, 6, 1, 0, 1, 0, 0, 0, 24, 29, 0, 0, 0, 1, 1, 0]' : 0.175087}
{'[1, 0, 5, 6, 1, 0, 1, 0, 0, 0, 24, 29, 0, 0, 0, 1, 1, 0]' : 0.17505}
{'[1, 0, 5, 6, 1, 0, 1, 0, 0, 0, 24, 29, 0, 0, 0, 1, 1, 0]' : 0.175066}

out:
 ["{'[1, 0, 5, 6, 1, 0, 1, 0, 0, 0, 24, 29, 0, 0, 0, 1, 1, 0]' : 0.19651}", "{'[1, 0, 5, 6, 1, 0, 1, 0, 0, 0, 24, 29, 0, 0, 0, 1, 1, 0]' : 0.196452}", "{'[1, 0, 5, 6, 1, 0, 1, 0, 0, 0, 24, 29, 0, 0, 0, 1, 1, 0]' : 0.175434}", "{'[1, 0, 5, 6, 1, 0, 1, 0, 0, 0, 24, 29, 0, 0, 0, 1, 1, 0]' : 0.169581}", "{'[1, 0, 5, 6, 1, 0, 1, 0, 0, 0, 24, 29, 0, 0, 0, 1, 1, 0]' : 0.173358}", "{'[1, 0, 5, 6, 1, 0, 1, 0, 0, 0, 24, 29, 0, 0, 0, 1, 1, 0]' : 0.175103}", "{'[1, 0, 5, 6, 1, 0, 1, 0, 0, 0, 24, 29, 0, 0, 0, 1, 1, 0]' : 0.169861}", "{'[1, 0, 5, 6, 1, 0, 1, 0, 0, 0, 24, 29, 0, 0, 0, 1, 1, 0]' : 0.173951}", "{'[1, 0, 5, 6, 1, 0, 1, 0, 0, 0, 24, 29, 0, 0, 0, 1, 1, 0]' : 0.17503}", "{'[1, 0, 5, 6, 1, 0, 1, 0, 0, 0, 24, 29, 0, 0, 0, 1, 1, 0]' : 0.175059}", "{'[1, 0, 5, 6, 1, 0, 1, 0, 0, 0, 24, 29, 0, 0, 0, 1, 1, 0]' : 0.172043}", "{'[1, 0, 5, 6, 1, 0, 1, 0, 0, 0, 24, 29, 0, 0, 0, 1, 1, 0]' : 0.164419}", "{'[1, 0, 5, 6, 1, 0, 1, 0, 0, 0, 24, 29, 0, 0, 0, 1, 1, 0]' : 0.164164}", "{'[1, 0, 5, 6, 1, 0, 1, 0, 0, 0, 24, 29, 0, 0, 0, 1, 1, 0]' : 0.169366}", "{'[1, 0, 5, 6, 1, 0, 1, 0, 0, 0, 24, 29, 0, 0, 0, 1, 1, 0]' : 0.16972}", "{'[1, 0, 5, 6, 1, 0, 1, 0, 0, 0, 24, 29, 0, 0, 0, 1, 1, 0]' : 0.169582}", "{'[1, 0, 5, 6, 1, 0, 1, 0, 0, 0, 24, 29, 0, 0, 0, 1, 1, 0]' : 0.169691}", "{'[1, 0, 5, 6, 1, 0, 1, 0, 0, 0, 24, 29, 0, 0, 0, 1, 1, 0]' : 0.169673}", "{'[1, 0, 5, 6, 1, 0, 1, 0, 0, 0, 24, 29, 0, 0, 0, 1, 1, 0]' : 0.169923}", "{'[1, 0, 5, 6, 1, 0, 1, 0, 0, 0, 24, 29, 0, 0, 0, 1, 1, 0]' : 0.170615}", "{'[1, 0, 5, 6, 1, 0, 1, 0, 0, 0, 24, 29, 0, 0, 0, 1, 1, 0]' : 0.169562}", "{'[1, 0, 5, 6, 1, 0, 1, 0, 0, 0, 24, 29, 0, 0, 0, 1, 1, 0]' : 0.170403}", "{'[1, 0, 5, 6, 1, 0, 1, 0, 0, 0, 24, 29, 0, 0, 0, 1, 1, 0]' : 0.17503}", "{'[1, 0, 5, 6, 1, 0, 1, 0, 0, 0, 24, 29, 0, 0, 0, 1, 1, 0]' : 0.171885}", "{'[1, 0, 5, 6, 1, 0, 1, 0, 0, 0, 24, 29, 0, 0, 0, 1, 1, 0]' : 0.170765}", "{'[1, 0, 5, 6, 1, 0, 1, 0, 0, 0, 24, 29, 0, 0, 0, 1, 1, 0]' : 0.175014}", "{'[1, 0, 5, 6, 1, 0, 1, 0, 0, 0, 24, 29, 0, 0, 0, 1, 1, 0]' : 0.175066}", "{'[1, 0, 5, 6, 1, 0, 1, 0, 0, 0, 24, 29, 0, 0, 0, 1, 1, 0]' : 0.175087}", "{'[1, 0, 5, 6, 1, 0, 1, 0, 0, 0, 24, 29, 0, 0, 0, 1, 1, 0]' : 0.17505}", "{'[1, 0, 5, 6, 1, 0, 1, 0, 0, 0, 24, 29, 0, 0, 0, 1, 1, 0]' : 0.175066}"]
returning from 'run': {'[1, 0, 5, 6, 1, 0, 1, 0, 0, 0, 24, 29, 0, 0, 0, 1, 1, 0]': ([0.19651, 0.196452, 0.175434, 0.169581, 0.173358, 0.175103, 0.169861, 0.173951, 0.17503, 0.175059, 0.172043, 0.164419, 0.164164, 0.169366, 0.16972, 0.169582, 0.169691, 0.169673, 0.169923, 0.170615, 0.169562, 0.170403, 0.17503, 0.171885, 0.170765, 0.175014, 0.175066, 0.175087, 0.17505, 0.175066], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 5, 6, 1, 0, 1, 0, 0, 0, 24, 29, 0, 0, 0, 1, 1, 0]': ([0.19651, 0.196452, 0.175434, 0.169581, 0.173358, 0.175103, 0.169861, 0.173951, 0.17503, 0.175059, 0.172043, 0.164419, 0.164164, 0.169366, 0.16972, 0.169582, 0.169691, 0.169673, 0.169923, 0.170615, 0.169562, 0.170403, 0.17503, 0.171885, 0.170765, 0.175014, 0.175066, 0.175087, 0.17505, 0.175066], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	45
        Max loop nest depth: 	5
        Additions: 		3339
        Multiplications: 	1014
        Divisions: 		0
        Logical: 		0
        Reads: 			5521
        Writes: 		628
        Comparisons:		45
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest25.exe __orio_perftest25.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest25.exe  
Program Test Output: 
{'[0, 6, 6, 5, 6, 0, 0, 1, 11, 3, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.0947289}
{'[0, 6, 6, 5, 6, 0, 0, 1, 11, 3, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.0949159}
{'[0, 6, 6, 5, 6, 0, 0, 1, 11, 3, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.094389}
{'[0, 6, 6, 5, 6, 0, 0, 1, 11, 3, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.0943348}
{'[0, 6, 6, 5, 6, 0, 0, 1, 11, 3, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.094547}
{'[0, 6, 6, 5, 6, 0, 0, 1, 11, 3, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.094547}
{'[0, 6, 6, 5, 6, 0, 0, 1, 11, 3, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.094276}
{'[0, 6, 6, 5, 6, 0, 0, 1, 11, 3, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.0944221}
{'[0, 6, 6, 5, 6, 0, 0, 1, 11, 3, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.0943561}
{'[0, 6, 6, 5, 6, 0, 0, 1, 11, 3, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.094492}
{'[0, 6, 6, 5, 6, 0, 0, 1, 11, 3, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.09442}
{'[0, 6, 6, 5, 6, 0, 0, 1, 11, 3, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.0945852}
{'[0, 6, 6, 5, 6, 0, 0, 1, 11, 3, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.094666}
{'[0, 6, 6, 5, 6, 0, 0, 1, 11, 3, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.0946739}
{'[0, 6, 6, 5, 6, 0, 0, 1, 11, 3, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.094532}
{'[0, 6, 6, 5, 6, 0, 0, 1, 11, 3, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.0947452}
{'[0, 6, 6, 5, 6, 0, 0, 1, 11, 3, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.0947149}
{'[0, 6, 6, 5, 6, 0, 0, 1, 11, 3, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.0945342}
{'[0, 6, 6, 5, 6, 0, 0, 1, 11, 3, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.0942099}
{'[0, 6, 6, 5, 6, 0, 0, 1, 11, 3, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.094425}
{'[0, 6, 6, 5, 6, 0, 0, 1, 11, 3, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.094491}
{'[0, 6, 6, 5, 6, 0, 0, 1, 11, 3, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.0943952}
{'[0, 6, 6, 5, 6, 0, 0, 1, 11, 3, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.0945539}
{'[0, 6, 6, 5, 6, 0, 0, 1, 11, 3, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.0948782}
{'[0, 6, 6, 5, 6, 0, 0, 1, 11, 3, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.0945199}
{'[0, 6, 6, 5, 6, 0, 0, 1, 11, 3, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.094404}
{'[0, 6, 6, 5, 6, 0, 0, 1, 11, 3, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.0942409}
{'[0, 6, 6, 5, 6, 0, 0, 1, 11, 3, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.0948792}
{'[0, 6, 6, 5, 6, 0, 0, 1, 11, 3, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.0944479}
{'[0, 6, 6, 5, 6, 0, 0, 1, 11, 3, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.0946021}

out:
 ["{'[0, 6, 6, 5, 6, 0, 0, 1, 11, 3, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.0947289}", "{'[0, 6, 6, 5, 6, 0, 0, 1, 11, 3, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.0949159}", "{'[0, 6, 6, 5, 6, 0, 0, 1, 11, 3, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.094389}", "{'[0, 6, 6, 5, 6, 0, 0, 1, 11, 3, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.0943348}", "{'[0, 6, 6, 5, 6, 0, 0, 1, 11, 3, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.094547}", "{'[0, 6, 6, 5, 6, 0, 0, 1, 11, 3, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.094547}", "{'[0, 6, 6, 5, 6, 0, 0, 1, 11, 3, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.094276}", "{'[0, 6, 6, 5, 6, 0, 0, 1, 11, 3, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.0944221}", "{'[0, 6, 6, 5, 6, 0, 0, 1, 11, 3, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.0943561}", "{'[0, 6, 6, 5, 6, 0, 0, 1, 11, 3, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.094492}", "{'[0, 6, 6, 5, 6, 0, 0, 1, 11, 3, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.09442}", "{'[0, 6, 6, 5, 6, 0, 0, 1, 11, 3, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.0945852}", "{'[0, 6, 6, 5, 6, 0, 0, 1, 11, 3, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.094666}", "{'[0, 6, 6, 5, 6, 0, 0, 1, 11, 3, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.0946739}", "{'[0, 6, 6, 5, 6, 0, 0, 1, 11, 3, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.094532}", "{'[0, 6, 6, 5, 6, 0, 0, 1, 11, 3, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.0947452}", "{'[0, 6, 6, 5, 6, 0, 0, 1, 11, 3, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.0947149}", "{'[0, 6, 6, 5, 6, 0, 0, 1, 11, 3, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.0945342}", "{'[0, 6, 6, 5, 6, 0, 0, 1, 11, 3, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.0942099}", "{'[0, 6, 6, 5, 6, 0, 0, 1, 11, 3, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.094425}", "{'[0, 6, 6, 5, 6, 0, 0, 1, 11, 3, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.094491}", "{'[0, 6, 6, 5, 6, 0, 0, 1, 11, 3, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.0943952}", "{'[0, 6, 6, 5, 6, 0, 0, 1, 11, 3, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.0945539}", "{'[0, 6, 6, 5, 6, 0, 0, 1, 11, 3, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.0948782}", "{'[0, 6, 6, 5, 6, 0, 0, 1, 11, 3, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.0945199}", "{'[0, 6, 6, 5, 6, 0, 0, 1, 11, 3, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.094404}", "{'[0, 6, 6, 5, 6, 0, 0, 1, 11, 3, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.0942409}", "{'[0, 6, 6, 5, 6, 0, 0, 1, 11, 3, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.0948792}", "{'[0, 6, 6, 5, 6, 0, 0, 1, 11, 3, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.0944479}", "{'[0, 6, 6, 5, 6, 0, 0, 1, 11, 3, 28, 0, 1, 1, 0, 0, 0, 0]' : 0.0946021}"]
returning from 'run': {'[0, 6, 6, 5, 6, 0, 0, 1, 11, 3, 28, 0, 1, 1, 0, 0, 0, 0]': ([0.0947289, 0.0949159, 0.094389, 0.0943348, 0.094547, 0.094547, 0.094276, 0.0944221, 0.0943561, 0.094492, 0.09442, 0.0945852, 0.094666, 0.0946739, 0.094532, 0.0947452, 0.0947149, 0.0945342, 0.0942099, 0.094425, 0.094491, 0.0943952, 0.0945539, 0.0948782, 0.0945199, 0.094404, 0.0942409, 0.0948792, 0.0944479, 0.0946021], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 6, 5, 6, 0, 0, 1, 11, 3, 28, 0, 1, 1, 0, 0, 0, 0]': ([0.0947289, 0.0949159, 0.094389, 0.0943348, 0.094547, 0.094547, 0.094276, 0.0944221, 0.0943561, 0.094492, 0.09442, 0.0945852, 0.094666, 0.0946739, 0.094532, 0.0947452, 0.0947149, 0.0945342, 0.0942099, 0.094425, 0.094491, 0.0943952, 0.0945539, 0.0948782, 0.0945199, 0.094404, 0.0942409, 0.0948792, 0.0944479, 0.0946021], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = kkk
Code stats:
        Number of loops: 	56
        Max loop nest depth: 	5
        Additions: 		3426
        Multiplications: 	880
        Divisions: 		0
        Logical: 		0
        Reads: 			5434
        Writes: 		653
        Comparisons:		56
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest26.exe __orio_perftest26.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest26.exe  
Program Test Output: 
{'[1, 3, 3, 4, 1, 1, 0, 1, 28, 18, 12, 0, 0, 0, 1, 0, 1, 1]' : 0.23132}
{'[1, 3, 3, 4, 1, 1, 0, 1, 28, 18, 12, 0, 0, 0, 1, 0, 1, 1]' : 0.231274}
{'[1, 3, 3, 4, 1, 1, 0, 1, 28, 18, 12, 0, 0, 0, 1, 0, 1, 1]' : 0.207848}
{'[1, 3, 3, 4, 1, 1, 0, 1, 28, 18, 12, 0, 0, 0, 1, 0, 1, 1]' : 0.192705}
{'[1, 3, 3, 4, 1, 1, 0, 1, 28, 18, 12, 0, 0, 0, 1, 0, 1, 1]' : 0.192915}
{'[1, 3, 3, 4, 1, 1, 0, 1, 28, 18, 12, 0, 0, 0, 1, 0, 1, 1]' : 0.192824}
{'[1, 3, 3, 4, 1, 1, 0, 1, 28, 18, 12, 0, 0, 0, 1, 0, 1, 1]' : 0.196483}
{'[1, 3, 3, 4, 1, 1, 0, 1, 28, 18, 12, 0, 0, 0, 1, 0, 1, 1]' : 0.192678}
{'[1, 3, 3, 4, 1, 1, 0, 1, 28, 18, 12, 0, 0, 0, 1, 0, 1, 1]' : 0.192866}
{'[1, 3, 3, 4, 1, 1, 0, 1, 28, 18, 12, 0, 0, 0, 1, 0, 1, 1]' : 0.192817}
{'[1, 3, 3, 4, 1, 1, 0, 1, 28, 18, 12, 0, 0, 0, 1, 0, 1, 1]' : 0.19296}
{'[1, 3, 3, 4, 1, 1, 0, 1, 28, 18, 12, 0, 0, 0, 1, 0, 1, 1]' : 0.192811}
{'[1, 3, 3, 4, 1, 1, 0, 1, 28, 18, 12, 0, 0, 0, 1, 0, 1, 1]' : 0.192795}
{'[1, 3, 3, 4, 1, 1, 0, 1, 28, 18, 12, 0, 0, 0, 1, 0, 1, 1]' : 0.192751}
{'[1, 3, 3, 4, 1, 1, 0, 1, 28, 18, 12, 0, 0, 0, 1, 0, 1, 1]' : 0.192685}
{'[1, 3, 3, 4, 1, 1, 0, 1, 28, 18, 12, 0, 0, 0, 1, 0, 1, 1]' : 0.193014}
{'[1, 3, 3, 4, 1, 1, 0, 1, 28, 18, 12, 0, 0, 0, 1, 0, 1, 1]' : 0.193051}
{'[1, 3, 3, 4, 1, 1, 0, 1, 28, 18, 12, 0, 0, 0, 1, 0, 1, 1]' : 0.192687}
{'[1, 3, 3, 4, 1, 1, 0, 1, 28, 18, 12, 0, 0, 0, 1, 0, 1, 1]' : 0.192997}
{'[1, 3, 3, 4, 1, 1, 0, 1, 28, 18, 12, 0, 0, 0, 1, 0, 1, 1]' : 0.192642}
{'[1, 3, 3, 4, 1, 1, 0, 1, 28, 18, 12, 0, 0, 0, 1, 0, 1, 1]' : 0.192768}
{'[1, 3, 3, 4, 1, 1, 0, 1, 28, 18, 12, 0, 0, 0, 1, 0, 1, 1]' : 0.193118}
{'[1, 3, 3, 4, 1, 1, 0, 1, 28, 18, 12, 0, 0, 0, 1, 0, 1, 1]' : 0.192645}
{'[1, 3, 3, 4, 1, 1, 0, 1, 28, 18, 12, 0, 0, 0, 1, 0, 1, 1]' : 0.192797}
{'[1, 3, 3, 4, 1, 1, 0, 1, 28, 18, 12, 0, 0, 0, 1, 0, 1, 1]' : 0.193283}
{'[1, 3, 3, 4, 1, 1, 0, 1, 28, 18, 12, 0, 0, 0, 1, 0, 1, 1]' : 0.192632}
{'[1, 3, 3, 4, 1, 1, 0, 1, 28, 18, 12, 0, 0, 0, 1, 0, 1, 1]' : 0.192849}
{'[1, 3, 3, 4, 1, 1, 0, 1, 28, 18, 12, 0, 0, 0, 1, 0, 1, 1]' : 0.193142}
{'[1, 3, 3, 4, 1, 1, 0, 1, 28, 18, 12, 0, 0, 0, 1, 0, 1, 1]' : 0.192777}
{'[1, 3, 3, 4, 1, 1, 0, 1, 28, 18, 12, 0, 0, 0, 1, 0, 1, 1]' : 0.192622}

out:
 ["{'[1, 3, 3, 4, 1, 1, 0, 1, 28, 18, 12, 0, 0, 0, 1, 0, 1, 1]' : 0.23132}", "{'[1, 3, 3, 4, 1, 1, 0, 1, 28, 18, 12, 0, 0, 0, 1, 0, 1, 1]' : 0.231274}", "{'[1, 3, 3, 4, 1, 1, 0, 1, 28, 18, 12, 0, 0, 0, 1, 0, 1, 1]' : 0.207848}", "{'[1, 3, 3, 4, 1, 1, 0, 1, 28, 18, 12, 0, 0, 0, 1, 0, 1, 1]' : 0.192705}", "{'[1, 3, 3, 4, 1, 1, 0, 1, 28, 18, 12, 0, 0, 0, 1, 0, 1, 1]' : 0.192915}", "{'[1, 3, 3, 4, 1, 1, 0, 1, 28, 18, 12, 0, 0, 0, 1, 0, 1, 1]' : 0.192824}", "{'[1, 3, 3, 4, 1, 1, 0, 1, 28, 18, 12, 0, 0, 0, 1, 0, 1, 1]' : 0.196483}", "{'[1, 3, 3, 4, 1, 1, 0, 1, 28, 18, 12, 0, 0, 0, 1, 0, 1, 1]' : 0.192678}", "{'[1, 3, 3, 4, 1, 1, 0, 1, 28, 18, 12, 0, 0, 0, 1, 0, 1, 1]' : 0.192866}", "{'[1, 3, 3, 4, 1, 1, 0, 1, 28, 18, 12, 0, 0, 0, 1, 0, 1, 1]' : 0.192817}", "{'[1, 3, 3, 4, 1, 1, 0, 1, 28, 18, 12, 0, 0, 0, 1, 0, 1, 1]' : 0.19296}", "{'[1, 3, 3, 4, 1, 1, 0, 1, 28, 18, 12, 0, 0, 0, 1, 0, 1, 1]' : 0.192811}", "{'[1, 3, 3, 4, 1, 1, 0, 1, 28, 18, 12, 0, 0, 0, 1, 0, 1, 1]' : 0.192795}", "{'[1, 3, 3, 4, 1, 1, 0, 1, 28, 18, 12, 0, 0, 0, 1, 0, 1, 1]' : 0.192751}", "{'[1, 3, 3, 4, 1, 1, 0, 1, 28, 18, 12, 0, 0, 0, 1, 0, 1, 1]' : 0.192685}", "{'[1, 3, 3, 4, 1, 1, 0, 1, 28, 18, 12, 0, 0, 0, 1, 0, 1, 1]' : 0.193014}", "{'[1, 3, 3, 4, 1, 1, 0, 1, 28, 18, 12, 0, 0, 0, 1, 0, 1, 1]' : 0.193051}", "{'[1, 3, 3, 4, 1, 1, 0, 1, 28, 18, 12, 0, 0, 0, 1, 0, 1, 1]' : 0.192687}", "{'[1, 3, 3, 4, 1, 1, 0, 1, 28, 18, 12, 0, 0, 0, 1, 0, 1, 1]' : 0.192997}", "{'[1, 3, 3, 4, 1, 1, 0, 1, 28, 18, 12, 0, 0, 0, 1, 0, 1, 1]' : 0.192642}", "{'[1, 3, 3, 4, 1, 1, 0, 1, 28, 18, 12, 0, 0, 0, 1, 0, 1, 1]' : 0.192768}", "{'[1, 3, 3, 4, 1, 1, 0, 1, 28, 18, 12, 0, 0, 0, 1, 0, 1, 1]' : 0.193118}", "{'[1, 3, 3, 4, 1, 1, 0, 1, 28, 18, 12, 0, 0, 0, 1, 0, 1, 1]' : 0.192645}", "{'[1, 3, 3, 4, 1, 1, 0, 1, 28, 18, 12, 0, 0, 0, 1, 0, 1, 1]' : 0.192797}", "{'[1, 3, 3, 4, 1, 1, 0, 1, 28, 18, 12, 0, 0, 0, 1, 0, 1, 1]' : 0.193283}", "{'[1, 3, 3, 4, 1, 1, 0, 1, 28, 18, 12, 0, 0, 0, 1, 0, 1, 1]' : 0.192632}", "{'[1, 3, 3, 4, 1, 1, 0, 1, 28, 18, 12, 0, 0, 0, 1, 0, 1, 1]' : 0.192849}", "{'[1, 3, 3, 4, 1, 1, 0, 1, 28, 18, 12, 0, 0, 0, 1, 0, 1, 1]' : 0.193142}", "{'[1, 3, 3, 4, 1, 1, 0, 1, 28, 18, 12, 0, 0, 0, 1, 0, 1, 1]' : 0.192777}", "{'[1, 3, 3, 4, 1, 1, 0, 1, 28, 18, 12, 0, 0, 0, 1, 0, 1, 1]' : 0.192622}"]
returning from 'run': {'[1, 3, 3, 4, 1, 1, 0, 1, 28, 18, 12, 0, 0, 0, 1, 0, 1, 1]': ([0.23132, 0.231274, 0.207848, 0.192705, 0.192915, 0.192824, 0.196483, 0.192678, 0.192866, 0.192817, 0.19296, 0.192811, 0.192795, 0.192751, 0.192685, 0.193014, 0.193051, 0.192687, 0.192997, 0.192642, 0.192768, 0.193118, 0.192645, 0.192797, 0.193283, 0.192632, 0.192849, 0.193142, 0.192777, 0.192622], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 3, 3, 4, 1, 1, 0, 1, 28, 18, 12, 0, 0, 0, 1, 0, 1, 1]': ([0.23132, 0.231274, 0.207848, 0.192705, 0.192915, 0.192824, 0.196483, 0.192678, 0.192866, 0.192817, 0.19296, 0.192811, 0.192795, 0.192751, 0.192685, 0.193014, 0.193051, 0.192687, 0.192997, 0.192642, 0.192768, 0.193118, 0.192645, 0.192797, 0.193283, 0.192632, 0.192849, 0.193142, 0.192777, 0.192622], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		228
        Multiplications: 	62
        Divisions: 		0
        Logical: 		0
        Reads: 			503
        Writes: 		110
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest27.exe __orio_perftest27.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest27.exe  
Program Test Output: 
{'[2, 3, 6, 0, 2, 4, 0, 1, 5, 0, 5, 14, 0, 1, 0, 1, 0, 1]' : 0.221567}
{'[2, 3, 6, 0, 2, 4, 0, 1, 5, 0, 5, 14, 0, 1, 0, 1, 0, 1]' : 0.221211}
{'[2, 3, 6, 0, 2, 4, 0, 1, 5, 0, 5, 14, 0, 1, 0, 1, 0, 1]' : 0.208472}
{'[2, 3, 6, 0, 2, 4, 0, 1, 5, 0, 5, 14, 0, 1, 0, 1, 0, 1]' : 0.18504}
{'[2, 3, 6, 0, 2, 4, 0, 1, 5, 0, 5, 14, 0, 1, 0, 1, 0, 1]' : 0.185037}
{'[2, 3, 6, 0, 2, 4, 0, 1, 5, 0, 5, 14, 0, 1, 0, 1, 0, 1]' : 0.184937}
{'[2, 3, 6, 0, 2, 4, 0, 1, 5, 0, 5, 14, 0, 1, 0, 1, 0, 1]' : 0.185231}
{'[2, 3, 6, 0, 2, 4, 0, 1, 5, 0, 5, 14, 0, 1, 0, 1, 0, 1]' : 0.185195}
{'[2, 3, 6, 0, 2, 4, 0, 1, 5, 0, 5, 14, 0, 1, 0, 1, 0, 1]' : 0.184901}
{'[2, 3, 6, 0, 2, 4, 0, 1, 5, 0, 5, 14, 0, 1, 0, 1, 0, 1]' : 0.185257}
{'[2, 3, 6, 0, 2, 4, 0, 1, 5, 0, 5, 14, 0, 1, 0, 1, 0, 1]' : 0.185197}
{'[2, 3, 6, 0, 2, 4, 0, 1, 5, 0, 5, 14, 0, 1, 0, 1, 0, 1]' : 0.185003}
{'[2, 3, 6, 0, 2, 4, 0, 1, 5, 0, 5, 14, 0, 1, 0, 1, 0, 1]' : 0.185338}
{'[2, 3, 6, 0, 2, 4, 0, 1, 5, 0, 5, 14, 0, 1, 0, 1, 0, 1]' : 0.185102}
{'[2, 3, 6, 0, 2, 4, 0, 1, 5, 0, 5, 14, 0, 1, 0, 1, 0, 1]' : 0.185141}
{'[2, 3, 6, 0, 2, 4, 0, 1, 5, 0, 5, 14, 0, 1, 0, 1, 0, 1]' : 0.185038}
{'[2, 3, 6, 0, 2, 4, 0, 1, 5, 0, 5, 14, 0, 1, 0, 1, 0, 1]' : 0.185063}
{'[2, 3, 6, 0, 2, 4, 0, 1, 5, 0, 5, 14, 0, 1, 0, 1, 0, 1]' : 0.185087}
{'[2, 3, 6, 0, 2, 4, 0, 1, 5, 0, 5, 14, 0, 1, 0, 1, 0, 1]' : 0.185564}
{'[2, 3, 6, 0, 2, 4, 0, 1, 5, 0, 5, 14, 0, 1, 0, 1, 0, 1]' : 0.185011}
{'[2, 3, 6, 0, 2, 4, 0, 1, 5, 0, 5, 14, 0, 1, 0, 1, 0, 1]' : 0.185101}
{'[2, 3, 6, 0, 2, 4, 0, 1, 5, 0, 5, 14, 0, 1, 0, 1, 0, 1]' : 0.185119}
{'[2, 3, 6, 0, 2, 4, 0, 1, 5, 0, 5, 14, 0, 1, 0, 1, 0, 1]' : 0.185287}
{'[2, 3, 6, 0, 2, 4, 0, 1, 5, 0, 5, 14, 0, 1, 0, 1, 0, 1]' : 0.185171}
{'[2, 3, 6, 0, 2, 4, 0, 1, 5, 0, 5, 14, 0, 1, 0, 1, 0, 1]' : 0.185315}
{'[2, 3, 6, 0, 2, 4, 0, 1, 5, 0, 5, 14, 0, 1, 0, 1, 0, 1]' : 0.185096}
{'[2, 3, 6, 0, 2, 4, 0, 1, 5, 0, 5, 14, 0, 1, 0, 1, 0, 1]' : 0.185234}
{'[2, 3, 6, 0, 2, 4, 0, 1, 5, 0, 5, 14, 0, 1, 0, 1, 0, 1]' : 0.185163}
{'[2, 3, 6, 0, 2, 4, 0, 1, 5, 0, 5, 14, 0, 1, 0, 1, 0, 1]' : 0.185529}
{'[2, 3, 6, 0, 2, 4, 0, 1, 5, 0, 5, 14, 0, 1, 0, 1, 0, 1]' : 0.185107}

out:
 ["{'[2, 3, 6, 0, 2, 4, 0, 1, 5, 0, 5, 14, 0, 1, 0, 1, 0, 1]' : 0.221567}", "{'[2, 3, 6, 0, 2, 4, 0, 1, 5, 0, 5, 14, 0, 1, 0, 1, 0, 1]' : 0.221211}", "{'[2, 3, 6, 0, 2, 4, 0, 1, 5, 0, 5, 14, 0, 1, 0, 1, 0, 1]' : 0.208472}", "{'[2, 3, 6, 0, 2, 4, 0, 1, 5, 0, 5, 14, 0, 1, 0, 1, 0, 1]' : 0.18504}", "{'[2, 3, 6, 0, 2, 4, 0, 1, 5, 0, 5, 14, 0, 1, 0, 1, 0, 1]' : 0.185037}", "{'[2, 3, 6, 0, 2, 4, 0, 1, 5, 0, 5, 14, 0, 1, 0, 1, 0, 1]' : 0.184937}", "{'[2, 3, 6, 0, 2, 4, 0, 1, 5, 0, 5, 14, 0, 1, 0, 1, 0, 1]' : 0.185231}", "{'[2, 3, 6, 0, 2, 4, 0, 1, 5, 0, 5, 14, 0, 1, 0, 1, 0, 1]' : 0.185195}", "{'[2, 3, 6, 0, 2, 4, 0, 1, 5, 0, 5, 14, 0, 1, 0, 1, 0, 1]' : 0.184901}", "{'[2, 3, 6, 0, 2, 4, 0, 1, 5, 0, 5, 14, 0, 1, 0, 1, 0, 1]' : 0.185257}", "{'[2, 3, 6, 0, 2, 4, 0, 1, 5, 0, 5, 14, 0, 1, 0, 1, 0, 1]' : 0.185197}", "{'[2, 3, 6, 0, 2, 4, 0, 1, 5, 0, 5, 14, 0, 1, 0, 1, 0, 1]' : 0.185003}", "{'[2, 3, 6, 0, 2, 4, 0, 1, 5, 0, 5, 14, 0, 1, 0, 1, 0, 1]' : 0.185338}", "{'[2, 3, 6, 0, 2, 4, 0, 1, 5, 0, 5, 14, 0, 1, 0, 1, 0, 1]' : 0.185102}", "{'[2, 3, 6, 0, 2, 4, 0, 1, 5, 0, 5, 14, 0, 1, 0, 1, 0, 1]' : 0.185141}", "{'[2, 3, 6, 0, 2, 4, 0, 1, 5, 0, 5, 14, 0, 1, 0, 1, 0, 1]' : 0.185038}", "{'[2, 3, 6, 0, 2, 4, 0, 1, 5, 0, 5, 14, 0, 1, 0, 1, 0, 1]' : 0.185063}", "{'[2, 3, 6, 0, 2, 4, 0, 1, 5, 0, 5, 14, 0, 1, 0, 1, 0, 1]' : 0.185087}", "{'[2, 3, 6, 0, 2, 4, 0, 1, 5, 0, 5, 14, 0, 1, 0, 1, 0, 1]' : 0.185564}", "{'[2, 3, 6, 0, 2, 4, 0, 1, 5, 0, 5, 14, 0, 1, 0, 1, 0, 1]' : 0.185011}", "{'[2, 3, 6, 0, 2, 4, 0, 1, 5, 0, 5, 14, 0, 1, 0, 1, 0, 1]' : 0.185101}", "{'[2, 3, 6, 0, 2, 4, 0, 1, 5, 0, 5, 14, 0, 1, 0, 1, 0, 1]' : 0.185119}", "{'[2, 3, 6, 0, 2, 4, 0, 1, 5, 0, 5, 14, 0, 1, 0, 1, 0, 1]' : 0.185287}", "{'[2, 3, 6, 0, 2, 4, 0, 1, 5, 0, 5, 14, 0, 1, 0, 1, 0, 1]' : 0.185171}", "{'[2, 3, 6, 0, 2, 4, 0, 1, 5, 0, 5, 14, 0, 1, 0, 1, 0, 1]' : 0.185315}", "{'[2, 3, 6, 0, 2, 4, 0, 1, 5, 0, 5, 14, 0, 1, 0, 1, 0, 1]' : 0.185096}", "{'[2, 3, 6, 0, 2, 4, 0, 1, 5, 0, 5, 14, 0, 1, 0, 1, 0, 1]' : 0.185234}", "{'[2, 3, 6, 0, 2, 4, 0, 1, 5, 0, 5, 14, 0, 1, 0, 1, 0, 1]' : 0.185163}", "{'[2, 3, 6, 0, 2, 4, 0, 1, 5, 0, 5, 14, 0, 1, 0, 1, 0, 1]' : 0.185529}", "{'[2, 3, 6, 0, 2, 4, 0, 1, 5, 0, 5, 14, 0, 1, 0, 1, 0, 1]' : 0.185107}"]
returning from 'run': {'[2, 3, 6, 0, 2, 4, 0, 1, 5, 0, 5, 14, 0, 1, 0, 1, 0, 1]': ([0.221567, 0.221211, 0.208472, 0.18504, 0.185037, 0.184937, 0.185231, 0.185195, 0.184901, 0.185257, 0.185197, 0.185003, 0.185338, 0.185102, 0.185141, 0.185038, 0.185063, 0.185087, 0.185564, 0.185011, 0.185101, 0.185119, 0.185287, 0.185171, 0.185315, 0.185096, 0.185234, 0.185163, 0.185529, 0.185107], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 3, 6, 0, 2, 4, 0, 1, 5, 0, 5, 14, 0, 1, 0, 1, 0, 1]': ([0.221567, 0.221211, 0.208472, 0.18504, 0.185037, 0.184937, 0.185231, 0.185195, 0.184901, 0.185257, 0.185197, 0.185003, 0.185338, 0.185102, 0.185141, 0.185038, 0.185063, 0.185087, 0.185564, 0.185011, 0.185101, 0.185119, 0.185287, 0.185171, 0.185315, 0.185096, 0.185234, 0.185163, 0.185529, 0.185107], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	5
        Additions: 		7912
        Multiplications: 	2046
        Divisions: 		0
        Logical: 		0
        Reads: 			11532
        Writes: 		1106
        Comparisons:		22
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest28.exe __orio_perftest28.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest28.exe  
Program Test Output: 
{'[6, 0, 6, 5, 4, 4, 1, 1, 21, 0, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.277816}
{'[6, 0, 6, 5, 4, 4, 1, 1, 21, 0, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.269837}
{'[6, 0, 6, 5, 4, 4, 1, 1, 21, 0, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.251433}
{'[6, 0, 6, 5, 4, 4, 1, 1, 21, 0, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.25351}
{'[6, 0, 6, 5, 4, 4, 1, 1, 21, 0, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.252872}
{'[6, 0, 6, 5, 4, 4, 1, 1, 21, 0, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.253521}
{'[6, 0, 6, 5, 4, 4, 1, 1, 21, 0, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.25193}
{'[6, 0, 6, 5, 4, 4, 1, 1, 21, 0, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.250339}
{'[6, 0, 6, 5, 4, 4, 1, 1, 21, 0, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.252435}
{'[6, 0, 6, 5, 4, 4, 1, 1, 21, 0, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.253899}
{'[6, 0, 6, 5, 4, 4, 1, 1, 21, 0, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.249477}
{'[6, 0, 6, 5, 4, 4, 1, 1, 21, 0, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.255614}
{'[6, 0, 6, 5, 4, 4, 1, 1, 21, 0, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.254787}
{'[6, 0, 6, 5, 4, 4, 1, 1, 21, 0, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.251344}
{'[6, 0, 6, 5, 4, 4, 1, 1, 21, 0, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.251972}
{'[6, 0, 6, 5, 4, 4, 1, 1, 21, 0, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.255195}
{'[6, 0, 6, 5, 4, 4, 1, 1, 21, 0, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.253574}
{'[6, 0, 6, 5, 4, 4, 1, 1, 21, 0, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.256459}
{'[6, 0, 6, 5, 4, 4, 1, 1, 21, 0, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.254279}
{'[6, 0, 6, 5, 4, 4, 1, 1, 21, 0, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.253333}
{'[6, 0, 6, 5, 4, 4, 1, 1, 21, 0, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.251409}
{'[6, 0, 6, 5, 4, 4, 1, 1, 21, 0, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.251315}
{'[6, 0, 6, 5, 4, 4, 1, 1, 21, 0, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.255509}
{'[6, 0, 6, 5, 4, 4, 1, 1, 21, 0, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.248785}
{'[6, 0, 6, 5, 4, 4, 1, 1, 21, 0, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.250407}
{'[6, 0, 6, 5, 4, 4, 1, 1, 21, 0, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.252214}
{'[6, 0, 6, 5, 4, 4, 1, 1, 21, 0, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.249779}
{'[6, 0, 6, 5, 4, 4, 1, 1, 21, 0, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.255551}
{'[6, 0, 6, 5, 4, 4, 1, 1, 21, 0, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.25106}
{'[6, 0, 6, 5, 4, 4, 1, 1, 21, 0, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.251939}

out:
 ["{'[6, 0, 6, 5, 4, 4, 1, 1, 21, 0, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.277816}", "{'[6, 0, 6, 5, 4, 4, 1, 1, 21, 0, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.269837}", "{'[6, 0, 6, 5, 4, 4, 1, 1, 21, 0, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.251433}", "{'[6, 0, 6, 5, 4, 4, 1, 1, 21, 0, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.25351}", "{'[6, 0, 6, 5, 4, 4, 1, 1, 21, 0, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.252872}", "{'[6, 0, 6, 5, 4, 4, 1, 1, 21, 0, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.253521}", "{'[6, 0, 6, 5, 4, 4, 1, 1, 21, 0, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.25193}", "{'[6, 0, 6, 5, 4, 4, 1, 1, 21, 0, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.250339}", "{'[6, 0, 6, 5, 4, 4, 1, 1, 21, 0, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.252435}", "{'[6, 0, 6, 5, 4, 4, 1, 1, 21, 0, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.253899}", "{'[6, 0, 6, 5, 4, 4, 1, 1, 21, 0, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.249477}", "{'[6, 0, 6, 5, 4, 4, 1, 1, 21, 0, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.255614}", "{'[6, 0, 6, 5, 4, 4, 1, 1, 21, 0, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.254787}", "{'[6, 0, 6, 5, 4, 4, 1, 1, 21, 0, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.251344}", "{'[6, 0, 6, 5, 4, 4, 1, 1, 21, 0, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.251972}", "{'[6, 0, 6, 5, 4, 4, 1, 1, 21, 0, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.255195}", "{'[6, 0, 6, 5, 4, 4, 1, 1, 21, 0, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.253574}", "{'[6, 0, 6, 5, 4, 4, 1, 1, 21, 0, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.256459}", "{'[6, 0, 6, 5, 4, 4, 1, 1, 21, 0, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.254279}", "{'[6, 0, 6, 5, 4, 4, 1, 1, 21, 0, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.253333}", "{'[6, 0, 6, 5, 4, 4, 1, 1, 21, 0, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.251409}", "{'[6, 0, 6, 5, 4, 4, 1, 1, 21, 0, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.251315}", "{'[6, 0, 6, 5, 4, 4, 1, 1, 21, 0, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.255509}", "{'[6, 0, 6, 5, 4, 4, 1, 1, 21, 0, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.248785}", "{'[6, 0, 6, 5, 4, 4, 1, 1, 21, 0, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.250407}", "{'[6, 0, 6, 5, 4, 4, 1, 1, 21, 0, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.252214}", "{'[6, 0, 6, 5, 4, 4, 1, 1, 21, 0, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.249779}", "{'[6, 0, 6, 5, 4, 4, 1, 1, 21, 0, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.255551}", "{'[6, 0, 6, 5, 4, 4, 1, 1, 21, 0, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.25106}", "{'[6, 0, 6, 5, 4, 4, 1, 1, 21, 0, 28, 0, 2, 0, 0, 0, 0, 1]' : 0.251939}"]
returning from 'run': {'[6, 0, 6, 5, 4, 4, 1, 1, 21, 0, 28, 0, 2, 0, 0, 0, 0, 1]': ([0.277816, 0.269837, 0.251433, 0.25351, 0.252872, 0.253521, 0.25193, 0.250339, 0.252435, 0.253899, 0.249477, 0.255614, 0.254787, 0.251344, 0.251972, 0.255195, 0.253574, 0.256459, 0.254279, 0.253333, 0.251409, 0.251315, 0.255509, 0.248785, 0.250407, 0.252214, 0.249779, 0.255551, 0.25106, 0.251939], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 6, 5, 4, 4, 1, 1, 21, 0, 28, 0, 2, 0, 0, 0, 0, 1]': ([0.277816, 0.269837, 0.251433, 0.25351, 0.252872, 0.253521, 0.25193, 0.250339, 0.252435, 0.253899, 0.249477, 0.255614, 0.254787, 0.251344, 0.251972, 0.255195, 0.253574, 0.256459, 0.254279, 0.253333, 0.251409, 0.251315, 0.255509, 0.248785, 0.250407, 0.252214, 0.249779, 0.255551, 0.25106, 0.251939], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	5
        Additions: 		383
        Multiplications: 	152
        Divisions: 		0
        Logical: 		0
        Reads: 			876
        Writes: 		205
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest29.exe __orio_perftest29.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest29.exe  
Program Test Output: 
{'[0, 6, 1, 4, 6, 6, 0, 0, 25, 17, 1, 0, 0, 0, 0, 1, 0, 0]' : 0.1427}
{'[0, 6, 1, 4, 6, 6, 0, 0, 25, 17, 1, 0, 0, 0, 0, 1, 0, 0]' : 0.143151}
{'[0, 6, 1, 4, 6, 6, 0, 0, 25, 17, 1, 0, 0, 0, 0, 1, 0, 0]' : 0.143023}
{'[0, 6, 1, 4, 6, 6, 0, 0, 25, 17, 1, 0, 0, 0, 0, 1, 0, 0]' : 0.143011}
{'[0, 6, 1, 4, 6, 6, 0, 0, 25, 17, 1, 0, 0, 0, 0, 1, 0, 0]' : 0.135292}
{'[0, 6, 1, 4, 6, 6, 0, 0, 25, 17, 1, 0, 0, 0, 0, 1, 0, 0]' : 0.123722}
{'[0, 6, 1, 4, 6, 6, 0, 0, 25, 17, 1, 0, 0, 0, 0, 1, 0, 0]' : 0.123566}
{'[0, 6, 1, 4, 6, 6, 0, 0, 25, 17, 1, 0, 0, 0, 0, 1, 0, 0]' : 0.123736}
{'[0, 6, 1, 4, 6, 6, 0, 0, 25, 17, 1, 0, 0, 0, 0, 1, 0, 0]' : 0.123823}
{'[0, 6, 1, 4, 6, 6, 0, 0, 25, 17, 1, 0, 0, 0, 0, 1, 0, 0]' : 0.123709}
{'[0, 6, 1, 4, 6, 6, 0, 0, 25, 17, 1, 0, 0, 0, 0, 1, 0, 0]' : 0.123569}
{'[0, 6, 1, 4, 6, 6, 0, 0, 25, 17, 1, 0, 0, 0, 0, 1, 0, 0]' : 0.123764}
{'[0, 6, 1, 4, 6, 6, 0, 0, 25, 17, 1, 0, 0, 0, 0, 1, 0, 0]' : 0.1236}
{'[0, 6, 1, 4, 6, 6, 0, 0, 25, 17, 1, 0, 0, 0, 0, 1, 0, 0]' : 0.123562}
{'[0, 6, 1, 4, 6, 6, 0, 0, 25, 17, 1, 0, 0, 0, 0, 1, 0, 0]' : 0.123542}
{'[0, 6, 1, 4, 6, 6, 0, 0, 25, 17, 1, 0, 0, 0, 0, 1, 0, 0]' : 0.124173}
{'[0, 6, 1, 4, 6, 6, 0, 0, 25, 17, 1, 0, 0, 0, 0, 1, 0, 0]' : 0.123515}
{'[0, 6, 1, 4, 6, 6, 0, 0, 25, 17, 1, 0, 0, 0, 0, 1, 0, 0]' : 0.124179}
{'[0, 6, 1, 4, 6, 6, 0, 0, 25, 17, 1, 0, 0, 0, 0, 1, 0, 0]' : 0.123655}
{'[0, 6, 1, 4, 6, 6, 0, 0, 25, 17, 1, 0, 0, 0, 0, 1, 0, 0]' : 0.123665}
{'[0, 6, 1, 4, 6, 6, 0, 0, 25, 17, 1, 0, 0, 0, 0, 1, 0, 0]' : 0.123571}
{'[0, 6, 1, 4, 6, 6, 0, 0, 25, 17, 1, 0, 0, 0, 0, 1, 0, 0]' : 0.123511}
{'[0, 6, 1, 4, 6, 6, 0, 0, 25, 17, 1, 0, 0, 0, 0, 1, 0, 0]' : 0.123492}
{'[0, 6, 1, 4, 6, 6, 0, 0, 25, 17, 1, 0, 0, 0, 0, 1, 0, 0]' : 0.123679}
{'[0, 6, 1, 4, 6, 6, 0, 0, 25, 17, 1, 0, 0, 0, 0, 1, 0, 0]' : 0.123539}
{'[0, 6, 1, 4, 6, 6, 0, 0, 25, 17, 1, 0, 0, 0, 0, 1, 0, 0]' : 0.123689}
{'[0, 6, 1, 4, 6, 6, 0, 0, 25, 17, 1, 0, 0, 0, 0, 1, 0, 0]' : 0.123957}
{'[0, 6, 1, 4, 6, 6, 0, 0, 25, 17, 1, 0, 0, 0, 0, 1, 0, 0]' : 0.123824}
{'[0, 6, 1, 4, 6, 6, 0, 0, 25, 17, 1, 0, 0, 0, 0, 1, 0, 0]' : 0.123733}
{'[0, 6, 1, 4, 6, 6, 0, 0, 25, 17, 1, 0, 0, 0, 0, 1, 0, 0]' : 0.123478}

out:
 ["{'[0, 6, 1, 4, 6, 6, 0, 0, 25, 17, 1, 0, 0, 0, 0, 1, 0, 0]' : 0.1427}", "{'[0, 6, 1, 4, 6, 6, 0, 0, 25, 17, 1, 0, 0, 0, 0, 1, 0, 0]' : 0.143151}", "{'[0, 6, 1, 4, 6, 6, 0, 0, 25, 17, 1, 0, 0, 0, 0, 1, 0, 0]' : 0.143023}", "{'[0, 6, 1, 4, 6, 6, 0, 0, 25, 17, 1, 0, 0, 0, 0, 1, 0, 0]' : 0.143011}", "{'[0, 6, 1, 4, 6, 6, 0, 0, 25, 17, 1, 0, 0, 0, 0, 1, 0, 0]' : 0.135292}", "{'[0, 6, 1, 4, 6, 6, 0, 0, 25, 17, 1, 0, 0, 0, 0, 1, 0, 0]' : 0.123722}", "{'[0, 6, 1, 4, 6, 6, 0, 0, 25, 17, 1, 0, 0, 0, 0, 1, 0, 0]' : 0.123566}", "{'[0, 6, 1, 4, 6, 6, 0, 0, 25, 17, 1, 0, 0, 0, 0, 1, 0, 0]' : 0.123736}", "{'[0, 6, 1, 4, 6, 6, 0, 0, 25, 17, 1, 0, 0, 0, 0, 1, 0, 0]' : 0.123823}", "{'[0, 6, 1, 4, 6, 6, 0, 0, 25, 17, 1, 0, 0, 0, 0, 1, 0, 0]' : 0.123709}", "{'[0, 6, 1, 4, 6, 6, 0, 0, 25, 17, 1, 0, 0, 0, 0, 1, 0, 0]' : 0.123569}", "{'[0, 6, 1, 4, 6, 6, 0, 0, 25, 17, 1, 0, 0, 0, 0, 1, 0, 0]' : 0.123764}", "{'[0, 6, 1, 4, 6, 6, 0, 0, 25, 17, 1, 0, 0, 0, 0, 1, 0, 0]' : 0.1236}", "{'[0, 6, 1, 4, 6, 6, 0, 0, 25, 17, 1, 0, 0, 0, 0, 1, 0, 0]' : 0.123562}", "{'[0, 6, 1, 4, 6, 6, 0, 0, 25, 17, 1, 0, 0, 0, 0, 1, 0, 0]' : 0.123542}", "{'[0, 6, 1, 4, 6, 6, 0, 0, 25, 17, 1, 0, 0, 0, 0, 1, 0, 0]' : 0.124173}", "{'[0, 6, 1, 4, 6, 6, 0, 0, 25, 17, 1, 0, 0, 0, 0, 1, 0, 0]' : 0.123515}", "{'[0, 6, 1, 4, 6, 6, 0, 0, 25, 17, 1, 0, 0, 0, 0, 1, 0, 0]' : 0.124179}", "{'[0, 6, 1, 4, 6, 6, 0, 0, 25, 17, 1, 0, 0, 0, 0, 1, 0, 0]' : 0.123655}", "{'[0, 6, 1, 4, 6, 6, 0, 0, 25, 17, 1, 0, 0, 0, 0, 1, 0, 0]' : 0.123665}", "{'[0, 6, 1, 4, 6, 6, 0, 0, 25, 17, 1, 0, 0, 0, 0, 1, 0, 0]' : 0.123571}", "{'[0, 6, 1, 4, 6, 6, 0, 0, 25, 17, 1, 0, 0, 0, 0, 1, 0, 0]' : 0.123511}", "{'[0, 6, 1, 4, 6, 6, 0, 0, 25, 17, 1, 0, 0, 0, 0, 1, 0, 0]' : 0.123492}", "{'[0, 6, 1, 4, 6, 6, 0, 0, 25, 17, 1, 0, 0, 0, 0, 1, 0, 0]' : 0.123679}", "{'[0, 6, 1, 4, 6, 6, 0, 0, 25, 17, 1, 0, 0, 0, 0, 1, 0, 0]' : 0.123539}", "{'[0, 6, 1, 4, 6, 6, 0, 0, 25, 17, 1, 0, 0, 0, 0, 1, 0, 0]' : 0.123689}", "{'[0, 6, 1, 4, 6, 6, 0, 0, 25, 17, 1, 0, 0, 0, 0, 1, 0, 0]' : 0.123957}", "{'[0, 6, 1, 4, 6, 6, 0, 0, 25, 17, 1, 0, 0, 0, 0, 1, 0, 0]' : 0.123824}", "{'[0, 6, 1, 4, 6, 6, 0, 0, 25, 17, 1, 0, 0, 0, 0, 1, 0, 0]' : 0.123733}", "{'[0, 6, 1, 4, 6, 6, 0, 0, 25, 17, 1, 0, 0, 0, 0, 1, 0, 0]' : 0.123478}"]
returning from 'run': {'[0, 6, 1, 4, 6, 6, 0, 0, 25, 17, 1, 0, 0, 0, 0, 1, 0, 0]': ([0.1427, 0.143151, 0.143023, 0.143011, 0.135292, 0.123722, 0.123566, 0.123736, 0.123823, 0.123709, 0.123569, 0.123764, 0.1236, 0.123562, 0.123542, 0.124173, 0.123515, 0.124179, 0.123655, 0.123665, 0.123571, 0.123511, 0.123492, 0.123679, 0.123539, 0.123689, 0.123957, 0.123824, 0.123733, 0.123478], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 1, 4, 6, 6, 0, 0, 25, 17, 1, 0, 0, 0, 0, 1, 0, 0]': ([0.1427, 0.143151, 0.143023, 0.143011, 0.135292, 0.123722, 0.123566, 0.123736, 0.123823, 0.123709, 0.123569, 0.123764, 0.1236, 0.123562, 0.123542, 0.124173, 0.123515, 0.124179, 0.123655, 0.123665, 0.123571, 0.123511, 0.123492, 0.123679, 0.123539, 0.123689, 0.123957, 0.123824, 0.123733, 0.123478], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	43
        Max loop nest depth: 	5
        Additions: 		750
        Multiplications: 	204
        Divisions: 		0
        Logical: 		0
        Reads: 			1473
        Writes: 		293
        Comparisons:		43
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest30.exe __orio_perftest30.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest30.exe  
Program Test Output: 
{'[0, 6, 4, 6, 6, 0, 1, 1, 15, 4, 7, 0, 0, 0, 1, 1, 0, 1]' : 0.205339}
{'[0, 6, 4, 6, 6, 0, 1, 1, 15, 4, 7, 0, 0, 0, 1, 1, 0, 1]' : 0.204284}
{'[0, 6, 4, 6, 6, 0, 1, 1, 15, 4, 7, 0, 0, 0, 1, 1, 0, 1]' : 0.204303}
{'[0, 6, 4, 6, 6, 0, 1, 1, 15, 4, 7, 0, 0, 0, 1, 1, 0, 1]' : 0.208139}
{'[0, 6, 4, 6, 6, 0, 1, 1, 15, 4, 7, 0, 0, 0, 1, 1, 0, 1]' : 0.204896}
{'[0, 6, 4, 6, 6, 0, 1, 1, 15, 4, 7, 0, 0, 0, 1, 1, 0, 1]' : 0.204838}
{'[0, 6, 4, 6, 6, 0, 1, 1, 15, 4, 7, 0, 0, 0, 1, 1, 0, 1]' : 0.204093}
{'[0, 6, 4, 6, 6, 0, 1, 1, 15, 4, 7, 0, 0, 0, 1, 1, 0, 1]' : 0.204019}
{'[0, 6, 4, 6, 6, 0, 1, 1, 15, 4, 7, 0, 0, 0, 1, 1, 0, 1]' : 0.203979}
{'[0, 6, 4, 6, 6, 0, 1, 1, 15, 4, 7, 0, 0, 0, 1, 1, 0, 1]' : 0.204461}
{'[0, 6, 4, 6, 6, 0, 1, 1, 15, 4, 7, 0, 0, 0, 1, 1, 0, 1]' : 0.204408}
{'[0, 6, 4, 6, 6, 0, 1, 1, 15, 4, 7, 0, 0, 0, 1, 1, 0, 1]' : 0.204172}
{'[0, 6, 4, 6, 6, 0, 1, 1, 15, 4, 7, 0, 0, 0, 1, 1, 0, 1]' : 0.20424}
{'[0, 6, 4, 6, 6, 0, 1, 1, 15, 4, 7, 0, 0, 0, 1, 1, 0, 1]' : 0.204144}
{'[0, 6, 4, 6, 6, 0, 1, 1, 15, 4, 7, 0, 0, 0, 1, 1, 0, 1]' : 0.207254}
{'[0, 6, 4, 6, 6, 0, 1, 1, 15, 4, 7, 0, 0, 0, 1, 1, 0, 1]' : 0.20455}
{'[0, 6, 4, 6, 6, 0, 1, 1, 15, 4, 7, 0, 0, 0, 1, 1, 0, 1]' : 0.203917}
{'[0, 6, 4, 6, 6, 0, 1, 1, 15, 4, 7, 0, 0, 0, 1, 1, 0, 1]' : 0.203803}
{'[0, 6, 4, 6, 6, 0, 1, 1, 15, 4, 7, 0, 0, 0, 1, 1, 0, 1]' : 0.203603}
{'[0, 6, 4, 6, 6, 0, 1, 1, 15, 4, 7, 0, 0, 0, 1, 1, 0, 1]' : 0.203853}
{'[0, 6, 4, 6, 6, 0, 1, 1, 15, 4, 7, 0, 0, 0, 1, 1, 0, 1]' : 0.20382}
{'[0, 6, 4, 6, 6, 0, 1, 1, 15, 4, 7, 0, 0, 0, 1, 1, 0, 1]' : 0.210834}
{'[0, 6, 4, 6, 6, 0, 1, 1, 15, 4, 7, 0, 0, 0, 1, 1, 0, 1]' : 0.207226}
{'[0, 6, 4, 6, 6, 0, 1, 1, 15, 4, 7, 0, 0, 0, 1, 1, 0, 1]' : 0.203247}
{'[0, 6, 4, 6, 6, 0, 1, 1, 15, 4, 7, 0, 0, 0, 1, 1, 0, 1]' : 0.203341}
{'[0, 6, 4, 6, 6, 0, 1, 1, 15, 4, 7, 0, 0, 0, 1, 1, 0, 1]' : 0.203308}
{'[0, 6, 4, 6, 6, 0, 1, 1, 15, 4, 7, 0, 0, 0, 1, 1, 0, 1]' : 0.203458}
{'[0, 6, 4, 6, 6, 0, 1, 1, 15, 4, 7, 0, 0, 0, 1, 1, 0, 1]' : 0.203782}
{'[0, 6, 4, 6, 6, 0, 1, 1, 15, 4, 7, 0, 0, 0, 1, 1, 0, 1]' : 0.203245}
{'[0, 6, 4, 6, 6, 0, 1, 1, 15, 4, 7, 0, 0, 0, 1, 1, 0, 1]' : 0.203708}

out:
 ["{'[0, 6, 4, 6, 6, 0, 1, 1, 15, 4, 7, 0, 0, 0, 1, 1, 0, 1]' : 0.205339}", "{'[0, 6, 4, 6, 6, 0, 1, 1, 15, 4, 7, 0, 0, 0, 1, 1, 0, 1]' : 0.204284}", "{'[0, 6, 4, 6, 6, 0, 1, 1, 15, 4, 7, 0, 0, 0, 1, 1, 0, 1]' : 0.204303}", "{'[0, 6, 4, 6, 6, 0, 1, 1, 15, 4, 7, 0, 0, 0, 1, 1, 0, 1]' : 0.208139}", "{'[0, 6, 4, 6, 6, 0, 1, 1, 15, 4, 7, 0, 0, 0, 1, 1, 0, 1]' : 0.204896}", "{'[0, 6, 4, 6, 6, 0, 1, 1, 15, 4, 7, 0, 0, 0, 1, 1, 0, 1]' : 0.204838}", "{'[0, 6, 4, 6, 6, 0, 1, 1, 15, 4, 7, 0, 0, 0, 1, 1, 0, 1]' : 0.204093}", "{'[0, 6, 4, 6, 6, 0, 1, 1, 15, 4, 7, 0, 0, 0, 1, 1, 0, 1]' : 0.204019}", "{'[0, 6, 4, 6, 6, 0, 1, 1, 15, 4, 7, 0, 0, 0, 1, 1, 0, 1]' : 0.203979}", "{'[0, 6, 4, 6, 6, 0, 1, 1, 15, 4, 7, 0, 0, 0, 1, 1, 0, 1]' : 0.204461}", "{'[0, 6, 4, 6, 6, 0, 1, 1, 15, 4, 7, 0, 0, 0, 1, 1, 0, 1]' : 0.204408}", "{'[0, 6, 4, 6, 6, 0, 1, 1, 15, 4, 7, 0, 0, 0, 1, 1, 0, 1]' : 0.204172}", "{'[0, 6, 4, 6, 6, 0, 1, 1, 15, 4, 7, 0, 0, 0, 1, 1, 0, 1]' : 0.20424}", "{'[0, 6, 4, 6, 6, 0, 1, 1, 15, 4, 7, 0, 0, 0, 1, 1, 0, 1]' : 0.204144}", "{'[0, 6, 4, 6, 6, 0, 1, 1, 15, 4, 7, 0, 0, 0, 1, 1, 0, 1]' : 0.207254}", "{'[0, 6, 4, 6, 6, 0, 1, 1, 15, 4, 7, 0, 0, 0, 1, 1, 0, 1]' : 0.20455}", "{'[0, 6, 4, 6, 6, 0, 1, 1, 15, 4, 7, 0, 0, 0, 1, 1, 0, 1]' : 0.203917}", "{'[0, 6, 4, 6, 6, 0, 1, 1, 15, 4, 7, 0, 0, 0, 1, 1, 0, 1]' : 0.203803}", "{'[0, 6, 4, 6, 6, 0, 1, 1, 15, 4, 7, 0, 0, 0, 1, 1, 0, 1]' : 0.203603}", "{'[0, 6, 4, 6, 6, 0, 1, 1, 15, 4, 7, 0, 0, 0, 1, 1, 0, 1]' : 0.203853}", "{'[0, 6, 4, 6, 6, 0, 1, 1, 15, 4, 7, 0, 0, 0, 1, 1, 0, 1]' : 0.20382}", "{'[0, 6, 4, 6, 6, 0, 1, 1, 15, 4, 7, 0, 0, 0, 1, 1, 0, 1]' : 0.210834}", "{'[0, 6, 4, 6, 6, 0, 1, 1, 15, 4, 7, 0, 0, 0, 1, 1, 0, 1]' : 0.207226}", "{'[0, 6, 4, 6, 6, 0, 1, 1, 15, 4, 7, 0, 0, 0, 1, 1, 0, 1]' : 0.203247}", "{'[0, 6, 4, 6, 6, 0, 1, 1, 15, 4, 7, 0, 0, 0, 1, 1, 0, 1]' : 0.203341}", "{'[0, 6, 4, 6, 6, 0, 1, 1, 15, 4, 7, 0, 0, 0, 1, 1, 0, 1]' : 0.203308}", "{'[0, 6, 4, 6, 6, 0, 1, 1, 15, 4, 7, 0, 0, 0, 1, 1, 0, 1]' : 0.203458}", "{'[0, 6, 4, 6, 6, 0, 1, 1, 15, 4, 7, 0, 0, 0, 1, 1, 0, 1]' : 0.203782}", "{'[0, 6, 4, 6, 6, 0, 1, 1, 15, 4, 7, 0, 0, 0, 1, 1, 0, 1]' : 0.203245}", "{'[0, 6, 4, 6, 6, 0, 1, 1, 15, 4, 7, 0, 0, 0, 1, 1, 0, 1]' : 0.203708}"]
returning from 'run': {'[0, 6, 4, 6, 6, 0, 1, 1, 15, 4, 7, 0, 0, 0, 1, 1, 0, 1]': ([0.205339, 0.204284, 0.204303, 0.208139, 0.204896, 0.204838, 0.204093, 0.204019, 0.203979, 0.204461, 0.204408, 0.204172, 0.20424, 0.204144, 0.207254, 0.20455, 0.203917, 0.203803, 0.203603, 0.203853, 0.20382, 0.210834, 0.207226, 0.203247, 0.203341, 0.203308, 0.203458, 0.203782, 0.203245, 0.203708], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 4, 6, 6, 0, 1, 1, 15, 4, 7, 0, 0, 0, 1, 1, 0, 1]': ([0.205339, 0.204284, 0.204303, 0.208139, 0.204896, 0.204838, 0.204093, 0.204019, 0.203979, 0.204461, 0.204408, 0.204172, 0.20424, 0.204144, 0.207254, 0.20455, 0.203917, 0.203803, 0.203603, 0.203853, 0.20382, 0.210834, 0.207226, 0.203247, 0.203341, 0.203308, 0.203458, 0.203782, 0.203245, 0.203708], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	75
        Max loop nest depth: 	5
        Additions: 		8914
        Multiplications: 	1980
        Divisions: 		0
        Logical: 		0
        Reads: 			12761
        Writes: 		1262
        Comparisons:		75
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest31.exe __orio_perftest31.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest31.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest31.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest31.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest31.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	4
        Additions: 		959
        Multiplications: 	414
        Divisions: 		0
        Logical: 		0
        Reads: 			1994
        Writes: 		389
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest32.exe __orio_perftest32.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest32.exe  
Program Test Output: 
{'[0, 1, 5, 3, 0, 0, 1, 0, 28, 0, 5, 6, 1, 0, 1, 1, 1, 1]' : 0.109674}
{'[0, 1, 5, 3, 0, 0, 1, 0, 28, 0, 5, 6, 1, 0, 1, 1, 1, 1]' : 0.109699}
{'[0, 1, 5, 3, 0, 0, 1, 0, 28, 0, 5, 6, 1, 0, 1, 1, 1, 1]' : 0.109633}
{'[0, 1, 5, 3, 0, 0, 1, 0, 28, 0, 5, 6, 1, 0, 1, 1, 1, 1]' : 0.108899}
{'[0, 1, 5, 3, 0, 0, 1, 0, 28, 0, 5, 6, 1, 0, 1, 1, 1, 1]' : 0.0957561}
{'[0, 1, 5, 3, 0, 0, 1, 0, 28, 0, 5, 6, 1, 0, 1, 1, 1, 1]' : 0.0932691}
{'[0, 1, 5, 3, 0, 0, 1, 0, 28, 0, 5, 6, 1, 0, 1, 1, 1, 1]' : 0.0930879}
{'[0, 1, 5, 3, 0, 0, 1, 0, 28, 0, 5, 6, 1, 0, 1, 1, 1, 1]' : 0.0932481}
{'[0, 1, 5, 3, 0, 0, 1, 0, 28, 0, 5, 6, 1, 0, 1, 1, 1, 1]' : 0.0933421}
{'[0, 1, 5, 3, 0, 0, 1, 0, 28, 0, 5, 6, 1, 0, 1, 1, 1, 1]' : 0.0933249}
{'[0, 1, 5, 3, 0, 0, 1, 0, 28, 0, 5, 6, 1, 0, 1, 1, 1, 1]' : 0.093137}
{'[0, 1, 5, 3, 0, 0, 1, 0, 28, 0, 5, 6, 1, 0, 1, 1, 1, 1]' : 0.0935302}
{'[0, 1, 5, 3, 0, 0, 1, 0, 28, 0, 5, 6, 1, 0, 1, 1, 1, 1]' : 0.093365}
{'[0, 1, 5, 3, 0, 0, 1, 0, 28, 0, 5, 6, 1, 0, 1, 1, 1, 1]' : 0.0933721}
{'[0, 1, 5, 3, 0, 0, 1, 0, 28, 0, 5, 6, 1, 0, 1, 1, 1, 1]' : 0.0932021}
{'[0, 1, 5, 3, 0, 0, 1, 0, 28, 0, 5, 6, 1, 0, 1, 1, 1, 1]' : 0.0931358}
{'[0, 1, 5, 3, 0, 0, 1, 0, 28, 0, 5, 6, 1, 0, 1, 1, 1, 1]' : 0.0932341}
{'[0, 1, 5, 3, 0, 0, 1, 0, 28, 0, 5, 6, 1, 0, 1, 1, 1, 1]' : 0.09325}
{'[0, 1, 5, 3, 0, 0, 1, 0, 28, 0, 5, 6, 1, 0, 1, 1, 1, 1]' : 0.093322}
{'[0, 1, 5, 3, 0, 0, 1, 0, 28, 0, 5, 6, 1, 0, 1, 1, 1, 1]' : 0.093415}
{'[0, 1, 5, 3, 0, 0, 1, 0, 28, 0, 5, 6, 1, 0, 1, 1, 1, 1]' : 0.0933871}
{'[0, 1, 5, 3, 0, 0, 1, 0, 28, 0, 5, 6, 1, 0, 1, 1, 1, 1]' : 0.093292}
{'[0, 1, 5, 3, 0, 0, 1, 0, 28, 0, 5, 6, 1, 0, 1, 1, 1, 1]' : 0.0933859}
{'[0, 1, 5, 3, 0, 0, 1, 0, 28, 0, 5, 6, 1, 0, 1, 1, 1, 1]' : 0.0932372}
{'[0, 1, 5, 3, 0, 0, 1, 0, 28, 0, 5, 6, 1, 0, 1, 1, 1, 1]' : 0.0933759}
{'[0, 1, 5, 3, 0, 0, 1, 0, 28, 0, 5, 6, 1, 0, 1, 1, 1, 1]' : 0.0931289}
{'[0, 1, 5, 3, 0, 0, 1, 0, 28, 0, 5, 6, 1, 0, 1, 1, 1, 1]' : 0.0930891}
{'[0, 1, 5, 3, 0, 0, 1, 0, 28, 0, 5, 6, 1, 0, 1, 1, 1, 1]' : 0.093241}
{'[0, 1, 5, 3, 0, 0, 1, 0, 28, 0, 5, 6, 1, 0, 1, 1, 1, 1]' : 0.09325}
{'[0, 1, 5, 3, 0, 0, 1, 0, 28, 0, 5, 6, 1, 0, 1, 1, 1, 1]' : 0.093215}

out:
 ["{'[0, 1, 5, 3, 0, 0, 1, 0, 28, 0, 5, 6, 1, 0, 1, 1, 1, 1]' : 0.109674}", "{'[0, 1, 5, 3, 0, 0, 1, 0, 28, 0, 5, 6, 1, 0, 1, 1, 1, 1]' : 0.109699}", "{'[0, 1, 5, 3, 0, 0, 1, 0, 28, 0, 5, 6, 1, 0, 1, 1, 1, 1]' : 0.109633}", "{'[0, 1, 5, 3, 0, 0, 1, 0, 28, 0, 5, 6, 1, 0, 1, 1, 1, 1]' : 0.108899}", "{'[0, 1, 5, 3, 0, 0, 1, 0, 28, 0, 5, 6, 1, 0, 1, 1, 1, 1]' : 0.0957561}", "{'[0, 1, 5, 3, 0, 0, 1, 0, 28, 0, 5, 6, 1, 0, 1, 1, 1, 1]' : 0.0932691}", "{'[0, 1, 5, 3, 0, 0, 1, 0, 28, 0, 5, 6, 1, 0, 1, 1, 1, 1]' : 0.0930879}", "{'[0, 1, 5, 3, 0, 0, 1, 0, 28, 0, 5, 6, 1, 0, 1, 1, 1, 1]' : 0.0932481}", "{'[0, 1, 5, 3, 0, 0, 1, 0, 28, 0, 5, 6, 1, 0, 1, 1, 1, 1]' : 0.0933421}", "{'[0, 1, 5, 3, 0, 0, 1, 0, 28, 0, 5, 6, 1, 0, 1, 1, 1, 1]' : 0.0933249}", "{'[0, 1, 5, 3, 0, 0, 1, 0, 28, 0, 5, 6, 1, 0, 1, 1, 1, 1]' : 0.093137}", "{'[0, 1, 5, 3, 0, 0, 1, 0, 28, 0, 5, 6, 1, 0, 1, 1, 1, 1]' : 0.0935302}", "{'[0, 1, 5, 3, 0, 0, 1, 0, 28, 0, 5, 6, 1, 0, 1, 1, 1, 1]' : 0.093365}", "{'[0, 1, 5, 3, 0, 0, 1, 0, 28, 0, 5, 6, 1, 0, 1, 1, 1, 1]' : 0.0933721}", "{'[0, 1, 5, 3, 0, 0, 1, 0, 28, 0, 5, 6, 1, 0, 1, 1, 1, 1]' : 0.0932021}", "{'[0, 1, 5, 3, 0, 0, 1, 0, 28, 0, 5, 6, 1, 0, 1, 1, 1, 1]' : 0.0931358}", "{'[0, 1, 5, 3, 0, 0, 1, 0, 28, 0, 5, 6, 1, 0, 1, 1, 1, 1]' : 0.0932341}", "{'[0, 1, 5, 3, 0, 0, 1, 0, 28, 0, 5, 6, 1, 0, 1, 1, 1, 1]' : 0.09325}", "{'[0, 1, 5, 3, 0, 0, 1, 0, 28, 0, 5, 6, 1, 0, 1, 1, 1, 1]' : 0.093322}", "{'[0, 1, 5, 3, 0, 0, 1, 0, 28, 0, 5, 6, 1, 0, 1, 1, 1, 1]' : 0.093415}", "{'[0, 1, 5, 3, 0, 0, 1, 0, 28, 0, 5, 6, 1, 0, 1, 1, 1, 1]' : 0.0933871}", "{'[0, 1, 5, 3, 0, 0, 1, 0, 28, 0, 5, 6, 1, 0, 1, 1, 1, 1]' : 0.093292}", "{'[0, 1, 5, 3, 0, 0, 1, 0, 28, 0, 5, 6, 1, 0, 1, 1, 1, 1]' : 0.0933859}", "{'[0, 1, 5, 3, 0, 0, 1, 0, 28, 0, 5, 6, 1, 0, 1, 1, 1, 1]' : 0.0932372}", "{'[0, 1, 5, 3, 0, 0, 1, 0, 28, 0, 5, 6, 1, 0, 1, 1, 1, 1]' : 0.0933759}", "{'[0, 1, 5, 3, 0, 0, 1, 0, 28, 0, 5, 6, 1, 0, 1, 1, 1, 1]' : 0.0931289}", "{'[0, 1, 5, 3, 0, 0, 1, 0, 28, 0, 5, 6, 1, 0, 1, 1, 1, 1]' : 0.0930891}", "{'[0, 1, 5, 3, 0, 0, 1, 0, 28, 0, 5, 6, 1, 0, 1, 1, 1, 1]' : 0.093241}", "{'[0, 1, 5, 3, 0, 0, 1, 0, 28, 0, 5, 6, 1, 0, 1, 1, 1, 1]' : 0.09325}", "{'[0, 1, 5, 3, 0, 0, 1, 0, 28, 0, 5, 6, 1, 0, 1, 1, 1, 1]' : 0.093215}"]
returning from 'run': {'[0, 1, 5, 3, 0, 0, 1, 0, 28, 0, 5, 6, 1, 0, 1, 1, 1, 1]': ([0.109674, 0.109699, 0.109633, 0.108899, 0.0957561, 0.0932691, 0.0930879, 0.0932481, 0.0933421, 0.0933249, 0.093137, 0.0935302, 0.093365, 0.0933721, 0.0932021, 0.0931358, 0.0932341, 0.09325, 0.093322, 0.093415, 0.0933871, 0.093292, 0.0933859, 0.0932372, 0.0933759, 0.0931289, 0.0930891, 0.093241, 0.09325, 0.093215], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 1, 5, 3, 0, 0, 1, 0, 28, 0, 5, 6, 1, 0, 1, 1, 1, 1]': ([0.109674, 0.109699, 0.109633, 0.108899, 0.0957561, 0.0932691, 0.0930879, 0.0932481, 0.0933421, 0.0933249, 0.093137, 0.0935302, 0.093365, 0.0933721, 0.0932021, 0.0931358, 0.0932341, 0.09325, 0.093322, 0.093415, 0.0933871, 0.093292, 0.0933859, 0.0932372, 0.0933759, 0.0931289, 0.0930891, 0.093241, 0.09325, 0.093215], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	80
        Max loop nest depth: 	6
        Additions: 		6583
        Multiplications: 	3038
        Divisions: 		0
        Logical: 		0
        Reads: 			12360
        Writes: 		2009
        Comparisons:		80
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest33.exe __orio_perftest33.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest33.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest33.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest33.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest33.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	72
        Max loop nest depth: 	6
        Additions: 		2626
        Multiplications: 	576
        Divisions: 		0
        Logical: 		0
        Reads: 			4226
        Writes: 		528
        Comparisons:		72
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest34.exe __orio_perftest34.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest34.exe  
Program Test Output: 
{'[2, 5, 0, 6, 5, 2, 0, 1, 19, 22, 0, 6, 1, 0, 1, 0, 0, 0]' : 0.130314}
{'[2, 5, 0, 6, 5, 2, 0, 1, 19, 22, 0, 6, 1, 0, 1, 0, 0, 0]' : 0.130096}
{'[2, 5, 0, 6, 5, 2, 0, 1, 19, 22, 0, 6, 1, 0, 1, 0, 0, 0]' : 0.129543}
{'[2, 5, 0, 6, 5, 2, 0, 1, 19, 22, 0, 6, 1, 0, 1, 0, 0, 0]' : 0.113135}
{'[2, 5, 0, 6, 5, 2, 0, 1, 19, 22, 0, 6, 1, 0, 1, 0, 0, 0]' : 0.111525}
{'[2, 5, 0, 6, 5, 2, 0, 1, 19, 22, 0, 6, 1, 0, 1, 0, 0, 0]' : 0.110172}
{'[2, 5, 0, 6, 5, 2, 0, 1, 19, 22, 0, 6, 1, 0, 1, 0, 0, 0]' : 0.109398}
{'[2, 5, 0, 6, 5, 2, 0, 1, 19, 22, 0, 6, 1, 0, 1, 0, 0, 0]' : 0.109554}
{'[2, 5, 0, 6, 5, 2, 0, 1, 19, 22, 0, 6, 1, 0, 1, 0, 0, 0]' : 0.109634}
{'[2, 5, 0, 6, 5, 2, 0, 1, 19, 22, 0, 6, 1, 0, 1, 0, 0, 0]' : 0.109668}
{'[2, 5, 0, 6, 5, 2, 0, 1, 19, 22, 0, 6, 1, 0, 1, 0, 0, 0]' : 0.109513}
{'[2, 5, 0, 6, 5, 2, 0, 1, 19, 22, 0, 6, 1, 0, 1, 0, 0, 0]' : 0.109607}
{'[2, 5, 0, 6, 5, 2, 0, 1, 19, 22, 0, 6, 1, 0, 1, 0, 0, 0]' : 0.110178}
{'[2, 5, 0, 6, 5, 2, 0, 1, 19, 22, 0, 6, 1, 0, 1, 0, 0, 0]' : 0.111051}
{'[2, 5, 0, 6, 5, 2, 0, 1, 19, 22, 0, 6, 1, 0, 1, 0, 0, 0]' : 0.110155}
{'[2, 5, 0, 6, 5, 2, 0, 1, 19, 22, 0, 6, 1, 0, 1, 0, 0, 0]' : 0.109565}
{'[2, 5, 0, 6, 5, 2, 0, 1, 19, 22, 0, 6, 1, 0, 1, 0, 0, 0]' : 0.109521}
{'[2, 5, 0, 6, 5, 2, 0, 1, 19, 22, 0, 6, 1, 0, 1, 0, 0, 0]' : 0.109477}
{'[2, 5, 0, 6, 5, 2, 0, 1, 19, 22, 0, 6, 1, 0, 1, 0, 0, 0]' : 0.109773}
{'[2, 5, 0, 6, 5, 2, 0, 1, 19, 22, 0, 6, 1, 0, 1, 0, 0, 0]' : 0.110142}
{'[2, 5, 0, 6, 5, 2, 0, 1, 19, 22, 0, 6, 1, 0, 1, 0, 0, 0]' : 0.109567}
{'[2, 5, 0, 6, 5, 2, 0, 1, 19, 22, 0, 6, 1, 0, 1, 0, 0, 0]' : 0.109911}
{'[2, 5, 0, 6, 5, 2, 0, 1, 19, 22, 0, 6, 1, 0, 1, 0, 0, 0]' : 0.110996}
{'[2, 5, 0, 6, 5, 2, 0, 1, 19, 22, 0, 6, 1, 0, 1, 0, 0, 0]' : 0.110456}
{'[2, 5, 0, 6, 5, 2, 0, 1, 19, 22, 0, 6, 1, 0, 1, 0, 0, 0]' : 0.109459}
{'[2, 5, 0, 6, 5, 2, 0, 1, 19, 22, 0, 6, 1, 0, 1, 0, 0, 0]' : 0.109443}
{'[2, 5, 0, 6, 5, 2, 0, 1, 19, 22, 0, 6, 1, 0, 1, 0, 0, 0]' : 0.109559}
{'[2, 5, 0, 6, 5, 2, 0, 1, 19, 22, 0, 6, 1, 0, 1, 0, 0, 0]' : 0.109632}
{'[2, 5, 0, 6, 5, 2, 0, 1, 19, 22, 0, 6, 1, 0, 1, 0, 0, 0]' : 0.109808}
{'[2, 5, 0, 6, 5, 2, 0, 1, 19, 22, 0, 6, 1, 0, 1, 0, 0, 0]' : 0.109664}

out:
 ["{'[2, 5, 0, 6, 5, 2, 0, 1, 19, 22, 0, 6, 1, 0, 1, 0, 0, 0]' : 0.130314}", "{'[2, 5, 0, 6, 5, 2, 0, 1, 19, 22, 0, 6, 1, 0, 1, 0, 0, 0]' : 0.130096}", "{'[2, 5, 0, 6, 5, 2, 0, 1, 19, 22, 0, 6, 1, 0, 1, 0, 0, 0]' : 0.129543}", "{'[2, 5, 0, 6, 5, 2, 0, 1, 19, 22, 0, 6, 1, 0, 1, 0, 0, 0]' : 0.113135}", "{'[2, 5, 0, 6, 5, 2, 0, 1, 19, 22, 0, 6, 1, 0, 1, 0, 0, 0]' : 0.111525}", "{'[2, 5, 0, 6, 5, 2, 0, 1, 19, 22, 0, 6, 1, 0, 1, 0, 0, 0]' : 0.110172}", "{'[2, 5, 0, 6, 5, 2, 0, 1, 19, 22, 0, 6, 1, 0, 1, 0, 0, 0]' : 0.109398}", "{'[2, 5, 0, 6, 5, 2, 0, 1, 19, 22, 0, 6, 1, 0, 1, 0, 0, 0]' : 0.109554}", "{'[2, 5, 0, 6, 5, 2, 0, 1, 19, 22, 0, 6, 1, 0, 1, 0, 0, 0]' : 0.109634}", "{'[2, 5, 0, 6, 5, 2, 0, 1, 19, 22, 0, 6, 1, 0, 1, 0, 0, 0]' : 0.109668}", "{'[2, 5, 0, 6, 5, 2, 0, 1, 19, 22, 0, 6, 1, 0, 1, 0, 0, 0]' : 0.109513}", "{'[2, 5, 0, 6, 5, 2, 0, 1, 19, 22, 0, 6, 1, 0, 1, 0, 0, 0]' : 0.109607}", "{'[2, 5, 0, 6, 5, 2, 0, 1, 19, 22, 0, 6, 1, 0, 1, 0, 0, 0]' : 0.110178}", "{'[2, 5, 0, 6, 5, 2, 0, 1, 19, 22, 0, 6, 1, 0, 1, 0, 0, 0]' : 0.111051}", "{'[2, 5, 0, 6, 5, 2, 0, 1, 19, 22, 0, 6, 1, 0, 1, 0, 0, 0]' : 0.110155}", "{'[2, 5, 0, 6, 5, 2, 0, 1, 19, 22, 0, 6, 1, 0, 1, 0, 0, 0]' : 0.109565}", "{'[2, 5, 0, 6, 5, 2, 0, 1, 19, 22, 0, 6, 1, 0, 1, 0, 0, 0]' : 0.109521}", "{'[2, 5, 0, 6, 5, 2, 0, 1, 19, 22, 0, 6, 1, 0, 1, 0, 0, 0]' : 0.109477}", "{'[2, 5, 0, 6, 5, 2, 0, 1, 19, 22, 0, 6, 1, 0, 1, 0, 0, 0]' : 0.109773}", "{'[2, 5, 0, 6, 5, 2, 0, 1, 19, 22, 0, 6, 1, 0, 1, 0, 0, 0]' : 0.110142}", "{'[2, 5, 0, 6, 5, 2, 0, 1, 19, 22, 0, 6, 1, 0, 1, 0, 0, 0]' : 0.109567}", "{'[2, 5, 0, 6, 5, 2, 0, 1, 19, 22, 0, 6, 1, 0, 1, 0, 0, 0]' : 0.109911}", "{'[2, 5, 0, 6, 5, 2, 0, 1, 19, 22, 0, 6, 1, 0, 1, 0, 0, 0]' : 0.110996}", "{'[2, 5, 0, 6, 5, 2, 0, 1, 19, 22, 0, 6, 1, 0, 1, 0, 0, 0]' : 0.110456}", "{'[2, 5, 0, 6, 5, 2, 0, 1, 19, 22, 0, 6, 1, 0, 1, 0, 0, 0]' : 0.109459}", "{'[2, 5, 0, 6, 5, 2, 0, 1, 19, 22, 0, 6, 1, 0, 1, 0, 0, 0]' : 0.109443}", "{'[2, 5, 0, 6, 5, 2, 0, 1, 19, 22, 0, 6, 1, 0, 1, 0, 0, 0]' : 0.109559}", "{'[2, 5, 0, 6, 5, 2, 0, 1, 19, 22, 0, 6, 1, 0, 1, 0, 0, 0]' : 0.109632}", "{'[2, 5, 0, 6, 5, 2, 0, 1, 19, 22, 0, 6, 1, 0, 1, 0, 0, 0]' : 0.109808}", "{'[2, 5, 0, 6, 5, 2, 0, 1, 19, 22, 0, 6, 1, 0, 1, 0, 0, 0]' : 0.109664}"]
returning from 'run': {'[2, 5, 0, 6, 5, 2, 0, 1, 19, 22, 0, 6, 1, 0, 1, 0, 0, 0]': ([0.130314, 0.130096, 0.129543, 0.113135, 0.111525, 0.110172, 0.109398, 0.109554, 0.109634, 0.109668, 0.109513, 0.109607, 0.110178, 0.111051, 0.110155, 0.109565, 0.109521, 0.109477, 0.109773, 0.110142, 0.109567, 0.109911, 0.110996, 0.110456, 0.109459, 0.109443, 0.109559, 0.109632, 0.109808, 0.109664], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 5, 0, 6, 5, 2, 0, 1, 19, 22, 0, 6, 1, 0, 1, 0, 0, 0]': ([0.130314, 0.130096, 0.129543, 0.113135, 0.111525, 0.110172, 0.109398, 0.109554, 0.109634, 0.109668, 0.109513, 0.109607, 0.110178, 0.111051, 0.110155, 0.109565, 0.109521, 0.109477, 0.109773, 0.110142, 0.109567, 0.109911, 0.110996, 0.110456, 0.109459, 0.109443, 0.109559, 0.109632, 0.109808, 0.109664], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	17
        Max loop nest depth: 	4
        Additions: 		3733
        Multiplications: 	1824
        Divisions: 		0
        Logical: 		0
        Reads: 			7071
        Writes: 		1141
        Comparisons:		17
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest35.exe __orio_perftest35.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest35.exe  
Program Test Output: 
{'[6, 0, 0, 0, 5, 5, 0, 0, 6, 14, 0, 22, 0, 2, 0, 1, 0, 1]' : 0.144053}
{'[6, 0, 0, 0, 5, 5, 0, 0, 6, 14, 0, 22, 0, 2, 0, 1, 0, 1]' : 0.143955}
{'[6, 0, 0, 0, 5, 5, 0, 0, 6, 14, 0, 22, 0, 2, 0, 1, 0, 1]' : 0.143651}
{'[6, 0, 0, 0, 5, 5, 0, 0, 6, 14, 0, 22, 0, 2, 0, 1, 0, 1]' : 0.12532}
{'[6, 0, 0, 0, 5, 5, 0, 0, 6, 14, 0, 22, 0, 2, 0, 1, 0, 1]' : 0.121881}
{'[6, 0, 0, 0, 5, 5, 0, 0, 6, 14, 0, 22, 0, 2, 0, 1, 0, 1]' : 0.121727}
{'[6, 0, 0, 0, 5, 5, 0, 0, 6, 14, 0, 22, 0, 2, 0, 1, 0, 1]' : 0.121893}
{'[6, 0, 0, 0, 5, 5, 0, 0, 6, 14, 0, 22, 0, 2, 0, 1, 0, 1]' : 0.12161}
{'[6, 0, 0, 0, 5, 5, 0, 0, 6, 14, 0, 22, 0, 2, 0, 1, 0, 1]' : 0.121707}
{'[6, 0, 0, 0, 5, 5, 0, 0, 6, 14, 0, 22, 0, 2, 0, 1, 0, 1]' : 0.121561}
{'[6, 0, 0, 0, 5, 5, 0, 0, 6, 14, 0, 22, 0, 2, 0, 1, 0, 1]' : 0.121616}
{'[6, 0, 0, 0, 5, 5, 0, 0, 6, 14, 0, 22, 0, 2, 0, 1, 0, 1]' : 0.12163}
{'[6, 0, 0, 0, 5, 5, 0, 0, 6, 14, 0, 22, 0, 2, 0, 1, 0, 1]' : 0.121814}
{'[6, 0, 0, 0, 5, 5, 0, 0, 6, 14, 0, 22, 0, 2, 0, 1, 0, 1]' : 0.121985}
{'[6, 0, 0, 0, 5, 5, 0, 0, 6, 14, 0, 22, 0, 2, 0, 1, 0, 1]' : 0.121877}
{'[6, 0, 0, 0, 5, 5, 0, 0, 6, 14, 0, 22, 0, 2, 0, 1, 0, 1]' : 0.12156}
{'[6, 0, 0, 0, 5, 5, 0, 0, 6, 14, 0, 22, 0, 2, 0, 1, 0, 1]' : 0.121824}
{'[6, 0, 0, 0, 5, 5, 0, 0, 6, 14, 0, 22, 0, 2, 0, 1, 0, 1]' : 0.121886}
{'[6, 0, 0, 0, 5, 5, 0, 0, 6, 14, 0, 22, 0, 2, 0, 1, 0, 1]' : 0.121661}
{'[6, 0, 0, 0, 5, 5, 0, 0, 6, 14, 0, 22, 0, 2, 0, 1, 0, 1]' : 0.121817}
{'[6, 0, 0, 0, 5, 5, 0, 0, 6, 14, 0, 22, 0, 2, 0, 1, 0, 1]' : 0.121621}
{'[6, 0, 0, 0, 5, 5, 0, 0, 6, 14, 0, 22, 0, 2, 0, 1, 0, 1]' : 0.12158}
{'[6, 0, 0, 0, 5, 5, 0, 0, 6, 14, 0, 22, 0, 2, 0, 1, 0, 1]' : 0.121997}
{'[6, 0, 0, 0, 5, 5, 0, 0, 6, 14, 0, 22, 0, 2, 0, 1, 0, 1]' : 0.121681}
{'[6, 0, 0, 0, 5, 5, 0, 0, 6, 14, 0, 22, 0, 2, 0, 1, 0, 1]' : 0.12174}
{'[6, 0, 0, 0, 5, 5, 0, 0, 6, 14, 0, 22, 0, 2, 0, 1, 0, 1]' : 0.121711}
{'[6, 0, 0, 0, 5, 5, 0, 0, 6, 14, 0, 22, 0, 2, 0, 1, 0, 1]' : 0.121639}
{'[6, 0, 0, 0, 5, 5, 0, 0, 6, 14, 0, 22, 0, 2, 0, 1, 0, 1]' : 0.121551}
{'[6, 0, 0, 0, 5, 5, 0, 0, 6, 14, 0, 22, 0, 2, 0, 1, 0, 1]' : 0.121589}
{'[6, 0, 0, 0, 5, 5, 0, 0, 6, 14, 0, 22, 0, 2, 0, 1, 0, 1]' : 0.121752}

out:
 ["{'[6, 0, 0, 0, 5, 5, 0, 0, 6, 14, 0, 22, 0, 2, 0, 1, 0, 1]' : 0.144053}", "{'[6, 0, 0, 0, 5, 5, 0, 0, 6, 14, 0, 22, 0, 2, 0, 1, 0, 1]' : 0.143955}", "{'[6, 0, 0, 0, 5, 5, 0, 0, 6, 14, 0, 22, 0, 2, 0, 1, 0, 1]' : 0.143651}", "{'[6, 0, 0, 0, 5, 5, 0, 0, 6, 14, 0, 22, 0, 2, 0, 1, 0, 1]' : 0.12532}", "{'[6, 0, 0, 0, 5, 5, 0, 0, 6, 14, 0, 22, 0, 2, 0, 1, 0, 1]' : 0.121881}", "{'[6, 0, 0, 0, 5, 5, 0, 0, 6, 14, 0, 22, 0, 2, 0, 1, 0, 1]' : 0.121727}", "{'[6, 0, 0, 0, 5, 5, 0, 0, 6, 14, 0, 22, 0, 2, 0, 1, 0, 1]' : 0.121893}", "{'[6, 0, 0, 0, 5, 5, 0, 0, 6, 14, 0, 22, 0, 2, 0, 1, 0, 1]' : 0.12161}", "{'[6, 0, 0, 0, 5, 5, 0, 0, 6, 14, 0, 22, 0, 2, 0, 1, 0, 1]' : 0.121707}", "{'[6, 0, 0, 0, 5, 5, 0, 0, 6, 14, 0, 22, 0, 2, 0, 1, 0, 1]' : 0.121561}", "{'[6, 0, 0, 0, 5, 5, 0, 0, 6, 14, 0, 22, 0, 2, 0, 1, 0, 1]' : 0.121616}", "{'[6, 0, 0, 0, 5, 5, 0, 0, 6, 14, 0, 22, 0, 2, 0, 1, 0, 1]' : 0.12163}", "{'[6, 0, 0, 0, 5, 5, 0, 0, 6, 14, 0, 22, 0, 2, 0, 1, 0, 1]' : 0.121814}", "{'[6, 0, 0, 0, 5, 5, 0, 0, 6, 14, 0, 22, 0, 2, 0, 1, 0, 1]' : 0.121985}", "{'[6, 0, 0, 0, 5, 5, 0, 0, 6, 14, 0, 22, 0, 2, 0, 1, 0, 1]' : 0.121877}", "{'[6, 0, 0, 0, 5, 5, 0, 0, 6, 14, 0, 22, 0, 2, 0, 1, 0, 1]' : 0.12156}", "{'[6, 0, 0, 0, 5, 5, 0, 0, 6, 14, 0, 22, 0, 2, 0, 1, 0, 1]' : 0.121824}", "{'[6, 0, 0, 0, 5, 5, 0, 0, 6, 14, 0, 22, 0, 2, 0, 1, 0, 1]' : 0.121886}", "{'[6, 0, 0, 0, 5, 5, 0, 0, 6, 14, 0, 22, 0, 2, 0, 1, 0, 1]' : 0.121661}", "{'[6, 0, 0, 0, 5, 5, 0, 0, 6, 14, 0, 22, 0, 2, 0, 1, 0, 1]' : 0.121817}", "{'[6, 0, 0, 0, 5, 5, 0, 0, 6, 14, 0, 22, 0, 2, 0, 1, 0, 1]' : 0.121621}", "{'[6, 0, 0, 0, 5, 5, 0, 0, 6, 14, 0, 22, 0, 2, 0, 1, 0, 1]' : 0.12158}", "{'[6, 0, 0, 0, 5, 5, 0, 0, 6, 14, 0, 22, 0, 2, 0, 1, 0, 1]' : 0.121997}", "{'[6, 0, 0, 0, 5, 5, 0, 0, 6, 14, 0, 22, 0, 2, 0, 1, 0, 1]' : 0.121681}", "{'[6, 0, 0, 0, 5, 5, 0, 0, 6, 14, 0, 22, 0, 2, 0, 1, 0, 1]' : 0.12174}", "{'[6, 0, 0, 0, 5, 5, 0, 0, 6, 14, 0, 22, 0, 2, 0, 1, 0, 1]' : 0.121711}", "{'[6, 0, 0, 0, 5, 5, 0, 0, 6, 14, 0, 22, 0, 2, 0, 1, 0, 1]' : 0.121639}", "{'[6, 0, 0, 0, 5, 5, 0, 0, 6, 14, 0, 22, 0, 2, 0, 1, 0, 1]' : 0.121551}", "{'[6, 0, 0, 0, 5, 5, 0, 0, 6, 14, 0, 22, 0, 2, 0, 1, 0, 1]' : 0.121589}", "{'[6, 0, 0, 0, 5, 5, 0, 0, 6, 14, 0, 22, 0, 2, 0, 1, 0, 1]' : 0.121752}"]
returning from 'run': {'[6, 0, 0, 0, 5, 5, 0, 0, 6, 14, 0, 22, 0, 2, 0, 1, 0, 1]': ([0.144053, 0.143955, 0.143651, 0.12532, 0.121881, 0.121727, 0.121893, 0.12161, 0.121707, 0.121561, 0.121616, 0.12163, 0.121814, 0.121985, 0.121877, 0.12156, 0.121824, 0.121886, 0.121661, 0.121817, 0.121621, 0.12158, 0.121997, 0.121681, 0.12174, 0.121711, 0.121639, 0.121551, 0.121589, 0.121752], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 0, 0, 5, 5, 0, 0, 6, 14, 0, 22, 0, 2, 0, 1, 0, 1]': ([0.144053, 0.143955, 0.143651, 0.12532, 0.121881, 0.121727, 0.121893, 0.12161, 0.121707, 0.121561, 0.121616, 0.12163, 0.121814, 0.121985, 0.121877, 0.12156, 0.121824, 0.121886, 0.121661, 0.121817, 0.121621, 0.12158, 0.121997, 0.121681, 0.12174, 0.121711, 0.121639, 0.121551, 0.121589, 0.121752], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	23
        Max loop nest depth: 	4
        Additions: 		1405
        Multiplications: 	384
        Divisions: 		0
        Logical: 		0
        Reads: 			2283
        Writes: 		277
        Comparisons:		23
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest36.exe __orio_perftest36.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest36.exe  
Program Test Output: 
{'[0, 6, 0, 4, 0, 0, 1, 0, 6, 10, 0, 3, 0, 1, 1, 0, 1, 1]' : 0.145868}
{'[0, 6, 0, 4, 0, 0, 1, 0, 6, 10, 0, 3, 0, 1, 1, 0, 1, 1]' : 0.146073}
{'[0, 6, 0, 4, 0, 0, 1, 0, 6, 10, 0, 3, 0, 1, 1, 0, 1, 1]' : 0.14488}
{'[0, 6, 0, 4, 0, 0, 1, 0, 6, 10, 0, 3, 0, 1, 1, 0, 1, 1]' : 0.125155}
{'[0, 6, 0, 4, 0, 0, 1, 0, 6, 10, 0, 3, 0, 1, 1, 0, 1, 1]' : 0.122648}
{'[0, 6, 0, 4, 0, 0, 1, 0, 6, 10, 0, 3, 0, 1, 1, 0, 1, 1]' : 0.122627}
{'[0, 6, 0, 4, 0, 0, 1, 0, 6, 10, 0, 3, 0, 1, 1, 0, 1, 1]' : 0.122671}
{'[0, 6, 0, 4, 0, 0, 1, 0, 6, 10, 0, 3, 0, 1, 1, 0, 1, 1]' : 0.122969}
{'[0, 6, 0, 4, 0, 0, 1, 0, 6, 10, 0, 3, 0, 1, 1, 0, 1, 1]' : 0.122818}
{'[0, 6, 0, 4, 0, 0, 1, 0, 6, 10, 0, 3, 0, 1, 1, 0, 1, 1]' : 0.125398}
{'[0, 6, 0, 4, 0, 0, 1, 0, 6, 10, 0, 3, 0, 1, 1, 0, 1, 1]' : 0.126549}
{'[0, 6, 0, 4, 0, 0, 1, 0, 6, 10, 0, 3, 0, 1, 1, 0, 1, 1]' : 0.126717}
{'[0, 6, 0, 4, 0, 0, 1, 0, 6, 10, 0, 3, 0, 1, 1, 0, 1, 1]' : 0.127138}
{'[0, 6, 0, 4, 0, 0, 1, 0, 6, 10, 0, 3, 0, 1, 1, 0, 1, 1]' : 0.126443}
{'[0, 6, 0, 4, 0, 0, 1, 0, 6, 10, 0, 3, 0, 1, 1, 0, 1, 1]' : 0.126496}
{'[0, 6, 0, 4, 0, 0, 1, 0, 6, 10, 0, 3, 0, 1, 1, 0, 1, 1]' : 0.126603}
{'[0, 6, 0, 4, 0, 0, 1, 0, 6, 10, 0, 3, 0, 1, 1, 0, 1, 1]' : 0.126441}
{'[0, 6, 0, 4, 0, 0, 1, 0, 6, 10, 0, 3, 0, 1, 1, 0, 1, 1]' : 0.126537}
{'[0, 6, 0, 4, 0, 0, 1, 0, 6, 10, 0, 3, 0, 1, 1, 0, 1, 1]' : 0.124401}
{'[0, 6, 0, 4, 0, 0, 1, 0, 6, 10, 0, 3, 0, 1, 1, 0, 1, 1]' : 0.122757}
{'[0, 6, 0, 4, 0, 0, 1, 0, 6, 10, 0, 3, 0, 1, 1, 0, 1, 1]' : 0.123083}
{'[0, 6, 0, 4, 0, 0, 1, 0, 6, 10, 0, 3, 0, 1, 1, 0, 1, 1]' : 0.122845}
{'[0, 6, 0, 4, 0, 0, 1, 0, 6, 10, 0, 3, 0, 1, 1, 0, 1, 1]' : 0.122596}
{'[0, 6, 0, 4, 0, 0, 1, 0, 6, 10, 0, 3, 0, 1, 1, 0, 1, 1]' : 0.122945}
{'[0, 6, 0, 4, 0, 0, 1, 0, 6, 10, 0, 3, 0, 1, 1, 0, 1, 1]' : 0.122737}
{'[0, 6, 0, 4, 0, 0, 1, 0, 6, 10, 0, 3, 0, 1, 1, 0, 1, 1]' : 0.122727}
{'[0, 6, 0, 4, 0, 0, 1, 0, 6, 10, 0, 3, 0, 1, 1, 0, 1, 1]' : 0.122693}
{'[0, 6, 0, 4, 0, 0, 1, 0, 6, 10, 0, 3, 0, 1, 1, 0, 1, 1]' : 0.122777}
{'[0, 6, 0, 4, 0, 0, 1, 0, 6, 10, 0, 3, 0, 1, 1, 0, 1, 1]' : 0.122703}
{'[0, 6, 0, 4, 0, 0, 1, 0, 6, 10, 0, 3, 0, 1, 1, 0, 1, 1]' : 0.123056}

out:
 ["{'[0, 6, 0, 4, 0, 0, 1, 0, 6, 10, 0, 3, 0, 1, 1, 0, 1, 1]' : 0.145868}", "{'[0, 6, 0, 4, 0, 0, 1, 0, 6, 10, 0, 3, 0, 1, 1, 0, 1, 1]' : 0.146073}", "{'[0, 6, 0, 4, 0, 0, 1, 0, 6, 10, 0, 3, 0, 1, 1, 0, 1, 1]' : 0.14488}", "{'[0, 6, 0, 4, 0, 0, 1, 0, 6, 10, 0, 3, 0, 1, 1, 0, 1, 1]' : 0.125155}", "{'[0, 6, 0, 4, 0, 0, 1, 0, 6, 10, 0, 3, 0, 1, 1, 0, 1, 1]' : 0.122648}", "{'[0, 6, 0, 4, 0, 0, 1, 0, 6, 10, 0, 3, 0, 1, 1, 0, 1, 1]' : 0.122627}", "{'[0, 6, 0, 4, 0, 0, 1, 0, 6, 10, 0, 3, 0, 1, 1, 0, 1, 1]' : 0.122671}", "{'[0, 6, 0, 4, 0, 0, 1, 0, 6, 10, 0, 3, 0, 1, 1, 0, 1, 1]' : 0.122969}", "{'[0, 6, 0, 4, 0, 0, 1, 0, 6, 10, 0, 3, 0, 1, 1, 0, 1, 1]' : 0.122818}", "{'[0, 6, 0, 4, 0, 0, 1, 0, 6, 10, 0, 3, 0, 1, 1, 0, 1, 1]' : 0.125398}", "{'[0, 6, 0, 4, 0, 0, 1, 0, 6, 10, 0, 3, 0, 1, 1, 0, 1, 1]' : 0.126549}", "{'[0, 6, 0, 4, 0, 0, 1, 0, 6, 10, 0, 3, 0, 1, 1, 0, 1, 1]' : 0.126717}", "{'[0, 6, 0, 4, 0, 0, 1, 0, 6, 10, 0, 3, 0, 1, 1, 0, 1, 1]' : 0.127138}", "{'[0, 6, 0, 4, 0, 0, 1, 0, 6, 10, 0, 3, 0, 1, 1, 0, 1, 1]' : 0.126443}", "{'[0, 6, 0, 4, 0, 0, 1, 0, 6, 10, 0, 3, 0, 1, 1, 0, 1, 1]' : 0.126496}", "{'[0, 6, 0, 4, 0, 0, 1, 0, 6, 10, 0, 3, 0, 1, 1, 0, 1, 1]' : 0.126603}", "{'[0, 6, 0, 4, 0, 0, 1, 0, 6, 10, 0, 3, 0, 1, 1, 0, 1, 1]' : 0.126441}", "{'[0, 6, 0, 4, 0, 0, 1, 0, 6, 10, 0, 3, 0, 1, 1, 0, 1, 1]' : 0.126537}", "{'[0, 6, 0, 4, 0, 0, 1, 0, 6, 10, 0, 3, 0, 1, 1, 0, 1, 1]' : 0.124401}", "{'[0, 6, 0, 4, 0, 0, 1, 0, 6, 10, 0, 3, 0, 1, 1, 0, 1, 1]' : 0.122757}", "{'[0, 6, 0, 4, 0, 0, 1, 0, 6, 10, 0, 3, 0, 1, 1, 0, 1, 1]' : 0.123083}", "{'[0, 6, 0, 4, 0, 0, 1, 0, 6, 10, 0, 3, 0, 1, 1, 0, 1, 1]' : 0.122845}", "{'[0, 6, 0, 4, 0, 0, 1, 0, 6, 10, 0, 3, 0, 1, 1, 0, 1, 1]' : 0.122596}", "{'[0, 6, 0, 4, 0, 0, 1, 0, 6, 10, 0, 3, 0, 1, 1, 0, 1, 1]' : 0.122945}", "{'[0, 6, 0, 4, 0, 0, 1, 0, 6, 10, 0, 3, 0, 1, 1, 0, 1, 1]' : 0.122737}", "{'[0, 6, 0, 4, 0, 0, 1, 0, 6, 10, 0, 3, 0, 1, 1, 0, 1, 1]' : 0.122727}", "{'[0, 6, 0, 4, 0, 0, 1, 0, 6, 10, 0, 3, 0, 1, 1, 0, 1, 1]' : 0.122693}", "{'[0, 6, 0, 4, 0, 0, 1, 0, 6, 10, 0, 3, 0, 1, 1, 0, 1, 1]' : 0.122777}", "{'[0, 6, 0, 4, 0, 0, 1, 0, 6, 10, 0, 3, 0, 1, 1, 0, 1, 1]' : 0.122703}", "{'[0, 6, 0, 4, 0, 0, 1, 0, 6, 10, 0, 3, 0, 1, 1, 0, 1, 1]' : 0.123056}"]
returning from 'run': {'[0, 6, 0, 4, 0, 0, 1, 0, 6, 10, 0, 3, 0, 1, 1, 0, 1, 1]': ([0.145868, 0.146073, 0.14488, 0.125155, 0.122648, 0.122627, 0.122671, 0.122969, 0.122818, 0.125398, 0.126549, 0.126717, 0.127138, 0.126443, 0.126496, 0.126603, 0.126441, 0.126537, 0.124401, 0.122757, 0.123083, 0.122845, 0.122596, 0.122945, 0.122737, 0.122727, 0.122693, 0.122777, 0.122703, 0.123056], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 0, 4, 0, 0, 1, 0, 6, 10, 0, 3, 0, 1, 1, 0, 1, 1]': ([0.145868, 0.146073, 0.14488, 0.125155, 0.122648, 0.122627, 0.122671, 0.122969, 0.122818, 0.125398, 0.126549, 0.126717, 0.127138, 0.126443, 0.126496, 0.126603, 0.126441, 0.126537, 0.124401, 0.122757, 0.123083, 0.122845, 0.122596, 0.122945, 0.122737, 0.122727, 0.122693, 0.122777, 0.122703, 0.123056], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	5
        Additions: 		191
        Multiplications: 	56
        Divisions: 		0
        Logical: 		0
        Reads: 			450
        Writes: 		124
        Comparisons:		15
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest37.exe __orio_perftest37.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest37.exe  
Program Test Output: 
{'[3, 5, 0, 1, 5, 0, 0, 1, 25, 5, 1, 0, 0, 0, 0, 1, 1, 1]' : 0.108039}
{'[3, 5, 0, 1, 5, 0, 0, 1, 25, 5, 1, 0, 0, 0, 0, 1, 1, 1]' : 0.107958}
{'[3, 5, 0, 1, 5, 0, 0, 1, 25, 5, 1, 0, 0, 0, 0, 1, 1, 1]' : 0.10787}
{'[3, 5, 0, 1, 5, 0, 0, 1, 25, 5, 1, 0, 0, 0, 0, 1, 1, 1]' : 0.105759}
{'[3, 5, 0, 1, 5, 0, 0, 1, 25, 5, 1, 0, 0, 0, 0, 1, 1, 1]' : 0.0940979}
{'[3, 5, 0, 1, 5, 0, 0, 1, 25, 5, 1, 0, 0, 0, 0, 1, 1, 1]' : 0.0933578}
{'[3, 5, 0, 1, 5, 0, 0, 1, 25, 5, 1, 0, 0, 0, 0, 1, 1, 1]' : 0.0937669}
{'[3, 5, 0, 1, 5, 0, 0, 1, 25, 5, 1, 0, 0, 0, 0, 1, 1, 1]' : 0.0935891}
{'[3, 5, 0, 1, 5, 0, 0, 1, 25, 5, 1, 0, 0, 0, 0, 1, 1, 1]' : 0.093576}
{'[3, 5, 0, 1, 5, 0, 0, 1, 25, 5, 1, 0, 0, 0, 0, 1, 1, 1]' : 0.09339}
{'[3, 5, 0, 1, 5, 0, 0, 1, 25, 5, 1, 0, 0, 0, 0, 1, 1, 1]' : 0.093478}
{'[3, 5, 0, 1, 5, 0, 0, 1, 25, 5, 1, 0, 0, 0, 0, 1, 1, 1]' : 0.0933728}
{'[3, 5, 0, 1, 5, 0, 0, 1, 25, 5, 1, 0, 0, 0, 0, 1, 1, 1]' : 0.0935059}
{'[3, 5, 0, 1, 5, 0, 0, 1, 25, 5, 1, 0, 0, 0, 0, 1, 1, 1]' : 0.0937002}
{'[3, 5, 0, 1, 5, 0, 0, 1, 25, 5, 1, 0, 0, 0, 0, 1, 1, 1]' : 0.0937159}
{'[3, 5, 0, 1, 5, 0, 0, 1, 25, 5, 1, 0, 0, 0, 0, 1, 1, 1]' : 0.0934322}
{'[3, 5, 0, 1, 5, 0, 0, 1, 25, 5, 1, 0, 0, 0, 0, 1, 1, 1]' : 0.093435}
{'[3, 5, 0, 1, 5, 0, 0, 1, 25, 5, 1, 0, 0, 0, 0, 1, 1, 1]' : 0.0934279}
{'[3, 5, 0, 1, 5, 0, 0, 1, 25, 5, 1, 0, 0, 0, 0, 1, 1, 1]' : 0.093703}
{'[3, 5, 0, 1, 5, 0, 0, 1, 25, 5, 1, 0, 0, 0, 0, 1, 1, 1]' : 0.0936182}
{'[3, 5, 0, 1, 5, 0, 0, 1, 25, 5, 1, 0, 0, 0, 0, 1, 1, 1]' : 0.0938179}
{'[3, 5, 0, 1, 5, 0, 0, 1, 25, 5, 1, 0, 0, 0, 0, 1, 1, 1]' : 0.0934269}
{'[3, 5, 0, 1, 5, 0, 0, 1, 25, 5, 1, 0, 0, 0, 0, 1, 1, 1]' : 0.0936441}
{'[3, 5, 0, 1, 5, 0, 0, 1, 25, 5, 1, 0, 0, 0, 0, 1, 1, 1]' : 0.093509}
{'[3, 5, 0, 1, 5, 0, 0, 1, 25, 5, 1, 0, 0, 0, 0, 1, 1, 1]' : 0.093437}
{'[3, 5, 0, 1, 5, 0, 0, 1, 25, 5, 1, 0, 0, 0, 0, 1, 1, 1]' : 0.0934701}
{'[3, 5, 0, 1, 5, 0, 0, 1, 25, 5, 1, 0, 0, 0, 0, 1, 1, 1]' : 0.0933621}
{'[3, 5, 0, 1, 5, 0, 0, 1, 25, 5, 1, 0, 0, 0, 0, 1, 1, 1]' : 0.0934341}
{'[3, 5, 0, 1, 5, 0, 0, 1, 25, 5, 1, 0, 0, 0, 0, 1, 1, 1]' : 0.0933921}
{'[3, 5, 0, 1, 5, 0, 0, 1, 25, 5, 1, 0, 0, 0, 0, 1, 1, 1]' : 0.0935221}

out:
 ["{'[3, 5, 0, 1, 5, 0, 0, 1, 25, 5, 1, 0, 0, 0, 0, 1, 1, 1]' : 0.108039}", "{'[3, 5, 0, 1, 5, 0, 0, 1, 25, 5, 1, 0, 0, 0, 0, 1, 1, 1]' : 0.107958}", "{'[3, 5, 0, 1, 5, 0, 0, 1, 25, 5, 1, 0, 0, 0, 0, 1, 1, 1]' : 0.10787}", "{'[3, 5, 0, 1, 5, 0, 0, 1, 25, 5, 1, 0, 0, 0, 0, 1, 1, 1]' : 0.105759}", "{'[3, 5, 0, 1, 5, 0, 0, 1, 25, 5, 1, 0, 0, 0, 0, 1, 1, 1]' : 0.0940979}", "{'[3, 5, 0, 1, 5, 0, 0, 1, 25, 5, 1, 0, 0, 0, 0, 1, 1, 1]' : 0.0933578}", "{'[3, 5, 0, 1, 5, 0, 0, 1, 25, 5, 1, 0, 0, 0, 0, 1, 1, 1]' : 0.0937669}", "{'[3, 5, 0, 1, 5, 0, 0, 1, 25, 5, 1, 0, 0, 0, 0, 1, 1, 1]' : 0.0935891}", "{'[3, 5, 0, 1, 5, 0, 0, 1, 25, 5, 1, 0, 0, 0, 0, 1, 1, 1]' : 0.093576}", "{'[3, 5, 0, 1, 5, 0, 0, 1, 25, 5, 1, 0, 0, 0, 0, 1, 1, 1]' : 0.09339}", "{'[3, 5, 0, 1, 5, 0, 0, 1, 25, 5, 1, 0, 0, 0, 0, 1, 1, 1]' : 0.093478}", "{'[3, 5, 0, 1, 5, 0, 0, 1, 25, 5, 1, 0, 0, 0, 0, 1, 1, 1]' : 0.0933728}", "{'[3, 5, 0, 1, 5, 0, 0, 1, 25, 5, 1, 0, 0, 0, 0, 1, 1, 1]' : 0.0935059}", "{'[3, 5, 0, 1, 5, 0, 0, 1, 25, 5, 1, 0, 0, 0, 0, 1, 1, 1]' : 0.0937002}", "{'[3, 5, 0, 1, 5, 0, 0, 1, 25, 5, 1, 0, 0, 0, 0, 1, 1, 1]' : 0.0937159}", "{'[3, 5, 0, 1, 5, 0, 0, 1, 25, 5, 1, 0, 0, 0, 0, 1, 1, 1]' : 0.0934322}", "{'[3, 5, 0, 1, 5, 0, 0, 1, 25, 5, 1, 0, 0, 0, 0, 1, 1, 1]' : 0.093435}", "{'[3, 5, 0, 1, 5, 0, 0, 1, 25, 5, 1, 0, 0, 0, 0, 1, 1, 1]' : 0.0934279}", "{'[3, 5, 0, 1, 5, 0, 0, 1, 25, 5, 1, 0, 0, 0, 0, 1, 1, 1]' : 0.093703}", "{'[3, 5, 0, 1, 5, 0, 0, 1, 25, 5, 1, 0, 0, 0, 0, 1, 1, 1]' : 0.0936182}", "{'[3, 5, 0, 1, 5, 0, 0, 1, 25, 5, 1, 0, 0, 0, 0, 1, 1, 1]' : 0.0938179}", "{'[3, 5, 0, 1, 5, 0, 0, 1, 25, 5, 1, 0, 0, 0, 0, 1, 1, 1]' : 0.0934269}", "{'[3, 5, 0, 1, 5, 0, 0, 1, 25, 5, 1, 0, 0, 0, 0, 1, 1, 1]' : 0.0936441}", "{'[3, 5, 0, 1, 5, 0, 0, 1, 25, 5, 1, 0, 0, 0, 0, 1, 1, 1]' : 0.093509}", "{'[3, 5, 0, 1, 5, 0, 0, 1, 25, 5, 1, 0, 0, 0, 0, 1, 1, 1]' : 0.093437}", "{'[3, 5, 0, 1, 5, 0, 0, 1, 25, 5, 1, 0, 0, 0, 0, 1, 1, 1]' : 0.0934701}", "{'[3, 5, 0, 1, 5, 0, 0, 1, 25, 5, 1, 0, 0, 0, 0, 1, 1, 1]' : 0.0933621}", "{'[3, 5, 0, 1, 5, 0, 0, 1, 25, 5, 1, 0, 0, 0, 0, 1, 1, 1]' : 0.0934341}", "{'[3, 5, 0, 1, 5, 0, 0, 1, 25, 5, 1, 0, 0, 0, 0, 1, 1, 1]' : 0.0933921}", "{'[3, 5, 0, 1, 5, 0, 0, 1, 25, 5, 1, 0, 0, 0, 0, 1, 1, 1]' : 0.0935221}"]
returning from 'run': {'[3, 5, 0, 1, 5, 0, 0, 1, 25, 5, 1, 0, 0, 0, 0, 1, 1, 1]': ([0.108039, 0.107958, 0.10787, 0.105759, 0.0940979, 0.0933578, 0.0937669, 0.0935891, 0.093576, 0.09339, 0.093478, 0.0933728, 0.0935059, 0.0937002, 0.0937159, 0.0934322, 0.093435, 0.0934279, 0.093703, 0.0936182, 0.0938179, 0.0934269, 0.0936441, 0.093509, 0.093437, 0.0934701, 0.0933621, 0.0934341, 0.0933921, 0.0935221], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 5, 0, 1, 5, 0, 0, 1, 25, 5, 1, 0, 0, 0, 0, 1, 1, 1]': ([0.108039, 0.107958, 0.10787, 0.105759, 0.0940979, 0.0933578, 0.0937669, 0.0935891, 0.093576, 0.09339, 0.093478, 0.0933728, 0.0935059, 0.0937002, 0.0937159, 0.0934322, 0.093435, 0.0934279, 0.093703, 0.0936182, 0.0938179, 0.0934269, 0.0936441, 0.093509, 0.093437, 0.0934701, 0.0933621, 0.0934341, 0.0933921, 0.0935221], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		159
        Multiplications: 	32
        Divisions: 		0
        Logical: 		0
        Reads: 			345
        Writes: 		78
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest38.exe __orio_perftest38.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest38.exe  
Program Test Output: 
{'[1, 0, 6, 0, 6, 6, 1, 1, 29, 0, 27, 18, 0, 1, 1, 0, 1, 0]' : 0.333347}
{'[1, 0, 6, 0, 6, 6, 1, 1, 29, 0, 27, 18, 0, 1, 1, 0, 1, 0]' : 0.324934}
{'[1, 0, 6, 0, 6, 6, 1, 1, 29, 0, 27, 18, 0, 1, 1, 0, 1, 0]' : 0.278252}
{'[1, 0, 6, 0, 6, 6, 1, 1, 29, 0, 27, 18, 0, 1, 1, 0, 1, 0]' : 0.278788}
{'[1, 0, 6, 0, 6, 6, 1, 1, 29, 0, 27, 18, 0, 1, 1, 0, 1, 0]' : 0.278152}
{'[1, 0, 6, 0, 6, 6, 1, 1, 29, 0, 27, 18, 0, 1, 1, 0, 1, 0]' : 0.278335}
{'[1, 0, 6, 0, 6, 6, 1, 1, 29, 0, 27, 18, 0, 1, 1, 0, 1, 0]' : 0.278231}
{'[1, 0, 6, 0, 6, 6, 1, 1, 29, 0, 27, 18, 0, 1, 1, 0, 1, 0]' : 0.278922}
{'[1, 0, 6, 0, 6, 6, 1, 1, 29, 0, 27, 18, 0, 1, 1, 0, 1, 0]' : 0.278611}
{'[1, 0, 6, 0, 6, 6, 1, 1, 29, 0, 27, 18, 0, 1, 1, 0, 1, 0]' : 0.278259}
{'[1, 0, 6, 0, 6, 6, 1, 1, 29, 0, 27, 18, 0, 1, 1, 0, 1, 0]' : 0.278514}
{'[1, 0, 6, 0, 6, 6, 1, 1, 29, 0, 27, 18, 0, 1, 1, 0, 1, 0]' : 0.278897}
{'[1, 0, 6, 0, 6, 6, 1, 1, 29, 0, 27, 18, 0, 1, 1, 0, 1, 0]' : 0.278192}
{'[1, 0, 6, 0, 6, 6, 1, 1, 29, 0, 27, 18, 0, 1, 1, 0, 1, 0]' : 0.278565}
{'[1, 0, 6, 0, 6, 6, 1, 1, 29, 0, 27, 18, 0, 1, 1, 0, 1, 0]' : 0.278676}
{'[1, 0, 6, 0, 6, 6, 1, 1, 29, 0, 27, 18, 0, 1, 1, 0, 1, 0]' : 0.278414}
{'[1, 0, 6, 0, 6, 6, 1, 1, 29, 0, 27, 18, 0, 1, 1, 0, 1, 0]' : 0.278277}
{'[1, 0, 6, 0, 6, 6, 1, 1, 29, 0, 27, 18, 0, 1, 1, 0, 1, 0]' : 0.278357}
{'[1, 0, 6, 0, 6, 6, 1, 1, 29, 0, 27, 18, 0, 1, 1, 0, 1, 0]' : 0.278523}
{'[1, 0, 6, 0, 6, 6, 1, 1, 29, 0, 27, 18, 0, 1, 1, 0, 1, 0]' : 0.27867}
{'[1, 0, 6, 0, 6, 6, 1, 1, 29, 0, 27, 18, 0, 1, 1, 0, 1, 0]' : 0.285626}
{'[1, 0, 6, 0, 6, 6, 1, 1, 29, 0, 27, 18, 0, 1, 1, 0, 1, 0]' : 0.287321}
{'[1, 0, 6, 0, 6, 6, 1, 1, 29, 0, 27, 18, 0, 1, 1, 0, 1, 0]' : 0.287459}
{'[1, 0, 6, 0, 6, 6, 1, 1, 29, 0, 27, 18, 0, 1, 1, 0, 1, 0]' : 0.287557}
{'[1, 0, 6, 0, 6, 6, 1, 1, 29, 0, 27, 18, 0, 1, 1, 0, 1, 0]' : 0.285271}
{'[1, 0, 6, 0, 6, 6, 1, 1, 29, 0, 27, 18, 0, 1, 1, 0, 1, 0]' : 0.278822}
{'[1, 0, 6, 0, 6, 6, 1, 1, 29, 0, 27, 18, 0, 1, 1, 0, 1, 0]' : 0.278369}
{'[1, 0, 6, 0, 6, 6, 1, 1, 29, 0, 27, 18, 0, 1, 1, 0, 1, 0]' : 0.278678}
{'[1, 0, 6, 0, 6, 6, 1, 1, 29, 0, 27, 18, 0, 1, 1, 0, 1, 0]' : 0.278276}
{'[1, 0, 6, 0, 6, 6, 1, 1, 29, 0, 27, 18, 0, 1, 1, 0, 1, 0]' : 0.278183}

out:
 ["{'[1, 0, 6, 0, 6, 6, 1, 1, 29, 0, 27, 18, 0, 1, 1, 0, 1, 0]' : 0.333347}", "{'[1, 0, 6, 0, 6, 6, 1, 1, 29, 0, 27, 18, 0, 1, 1, 0, 1, 0]' : 0.324934}", "{'[1, 0, 6, 0, 6, 6, 1, 1, 29, 0, 27, 18, 0, 1, 1, 0, 1, 0]' : 0.278252}", "{'[1, 0, 6, 0, 6, 6, 1, 1, 29, 0, 27, 18, 0, 1, 1, 0, 1, 0]' : 0.278788}", "{'[1, 0, 6, 0, 6, 6, 1, 1, 29, 0, 27, 18, 0, 1, 1, 0, 1, 0]' : 0.278152}", "{'[1, 0, 6, 0, 6, 6, 1, 1, 29, 0, 27, 18, 0, 1, 1, 0, 1, 0]' : 0.278335}", "{'[1, 0, 6, 0, 6, 6, 1, 1, 29, 0, 27, 18, 0, 1, 1, 0, 1, 0]' : 0.278231}", "{'[1, 0, 6, 0, 6, 6, 1, 1, 29, 0, 27, 18, 0, 1, 1, 0, 1, 0]' : 0.278922}", "{'[1, 0, 6, 0, 6, 6, 1, 1, 29, 0, 27, 18, 0, 1, 1, 0, 1, 0]' : 0.278611}", "{'[1, 0, 6, 0, 6, 6, 1, 1, 29, 0, 27, 18, 0, 1, 1, 0, 1, 0]' : 0.278259}", "{'[1, 0, 6, 0, 6, 6, 1, 1, 29, 0, 27, 18, 0, 1, 1, 0, 1, 0]' : 0.278514}", "{'[1, 0, 6, 0, 6, 6, 1, 1, 29, 0, 27, 18, 0, 1, 1, 0, 1, 0]' : 0.278897}", "{'[1, 0, 6, 0, 6, 6, 1, 1, 29, 0, 27, 18, 0, 1, 1, 0, 1, 0]' : 0.278192}", "{'[1, 0, 6, 0, 6, 6, 1, 1, 29, 0, 27, 18, 0, 1, 1, 0, 1, 0]' : 0.278565}", "{'[1, 0, 6, 0, 6, 6, 1, 1, 29, 0, 27, 18, 0, 1, 1, 0, 1, 0]' : 0.278676}", "{'[1, 0, 6, 0, 6, 6, 1, 1, 29, 0, 27, 18, 0, 1, 1, 0, 1, 0]' : 0.278414}", "{'[1, 0, 6, 0, 6, 6, 1, 1, 29, 0, 27, 18, 0, 1, 1, 0, 1, 0]' : 0.278277}", "{'[1, 0, 6, 0, 6, 6, 1, 1, 29, 0, 27, 18, 0, 1, 1, 0, 1, 0]' : 0.278357}", "{'[1, 0, 6, 0, 6, 6, 1, 1, 29, 0, 27, 18, 0, 1, 1, 0, 1, 0]' : 0.278523}", "{'[1, 0, 6, 0, 6, 6, 1, 1, 29, 0, 27, 18, 0, 1, 1, 0, 1, 0]' : 0.27867}", "{'[1, 0, 6, 0, 6, 6, 1, 1, 29, 0, 27, 18, 0, 1, 1, 0, 1, 0]' : 0.285626}", "{'[1, 0, 6, 0, 6, 6, 1, 1, 29, 0, 27, 18, 0, 1, 1, 0, 1, 0]' : 0.287321}", "{'[1, 0, 6, 0, 6, 6, 1, 1, 29, 0, 27, 18, 0, 1, 1, 0, 1, 0]' : 0.287459}", "{'[1, 0, 6, 0, 6, 6, 1, 1, 29, 0, 27, 18, 0, 1, 1, 0, 1, 0]' : 0.287557}", "{'[1, 0, 6, 0, 6, 6, 1, 1, 29, 0, 27, 18, 0, 1, 1, 0, 1, 0]' : 0.285271}", "{'[1, 0, 6, 0, 6, 6, 1, 1, 29, 0, 27, 18, 0, 1, 1, 0, 1, 0]' : 0.278822}", "{'[1, 0, 6, 0, 6, 6, 1, 1, 29, 0, 27, 18, 0, 1, 1, 0, 1, 0]' : 0.278369}", "{'[1, 0, 6, 0, 6, 6, 1, 1, 29, 0, 27, 18, 0, 1, 1, 0, 1, 0]' : 0.278678}", "{'[1, 0, 6, 0, 6, 6, 1, 1, 29, 0, 27, 18, 0, 1, 1, 0, 1, 0]' : 0.278276}", "{'[1, 0, 6, 0, 6, 6, 1, 1, 29, 0, 27, 18, 0, 1, 1, 0, 1, 0]' : 0.278183}"]
returning from 'run': {'[1, 0, 6, 0, 6, 6, 1, 1, 29, 0, 27, 18, 0, 1, 1, 0, 1, 0]': ([0.333347, 0.324934, 0.278252, 0.278788, 0.278152, 0.278335, 0.278231, 0.278922, 0.278611, 0.278259, 0.278514, 0.278897, 0.278192, 0.278565, 0.278676, 0.278414, 0.278277, 0.278357, 0.278523, 0.27867, 0.285626, 0.287321, 0.287459, 0.287557, 0.285271, 0.278822, 0.278369, 0.278678, 0.278276, 0.278183], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 6, 0, 6, 6, 1, 1, 29, 0, 27, 18, 0, 1, 1, 0, 1, 0]': ([0.333347, 0.324934, 0.278252, 0.278788, 0.278152, 0.278335, 0.278231, 0.278922, 0.278611, 0.278259, 0.278514, 0.278897, 0.278192, 0.278565, 0.278676, 0.278414, 0.278277, 0.278357, 0.278523, 0.27867, 0.285626, 0.287321, 0.287459, 0.287557, 0.285271, 0.278822, 0.278369, 0.278678, 0.278276, 0.278183], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	44
        Max loop nest depth: 	5
        Additions: 		1236
        Multiplications: 	350
        Divisions: 		0
        Logical: 		0
        Reads: 			2298
        Writes: 		333
        Comparisons:		44
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest39.exe __orio_perftest39.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest39.exe  
Program Test Output: 
{'[4, 3, 4, 0, 4, 5, 1, 0, 10, 23, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.181702}
{'[4, 3, 4, 0, 4, 5, 1, 0, 10, 23, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.181714}
{'[4, 3, 4, 0, 4, 5, 1, 0, 10, 23, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.169376}
{'[4, 3, 4, 0, 4, 5, 1, 0, 10, 23, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.155382}
{'[4, 3, 4, 0, 4, 5, 1, 0, 10, 23, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.155583}
{'[4, 3, 4, 0, 4, 5, 1, 0, 10, 23, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.155518}
{'[4, 3, 4, 0, 4, 5, 1, 0, 10, 23, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.155416}
{'[4, 3, 4, 0, 4, 5, 1, 0, 10, 23, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.155599}
{'[4, 3, 4, 0, 4, 5, 1, 0, 10, 23, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.155591}
{'[4, 3, 4, 0, 4, 5, 1, 0, 10, 23, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.155709}
{'[4, 3, 4, 0, 4, 5, 1, 0, 10, 23, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.155303}
{'[4, 3, 4, 0, 4, 5, 1, 0, 10, 23, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.155394}
{'[4, 3, 4, 0, 4, 5, 1, 0, 10, 23, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.155566}
{'[4, 3, 4, 0, 4, 5, 1, 0, 10, 23, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.155631}
{'[4, 3, 4, 0, 4, 5, 1, 0, 10, 23, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.156153}
{'[4, 3, 4, 0, 4, 5, 1, 0, 10, 23, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.155355}
{'[4, 3, 4, 0, 4, 5, 1, 0, 10, 23, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.15536}
{'[4, 3, 4, 0, 4, 5, 1, 0, 10, 23, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.155404}
{'[4, 3, 4, 0, 4, 5, 1, 0, 10, 23, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.155532}
{'[4, 3, 4, 0, 4, 5, 1, 0, 10, 23, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.155971}
{'[4, 3, 4, 0, 4, 5, 1, 0, 10, 23, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.155619}
{'[4, 3, 4, 0, 4, 5, 1, 0, 10, 23, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.155751}
{'[4, 3, 4, 0, 4, 5, 1, 0, 10, 23, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.155446}
{'[4, 3, 4, 0, 4, 5, 1, 0, 10, 23, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.155365}
{'[4, 3, 4, 0, 4, 5, 1, 0, 10, 23, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.156228}
{'[4, 3, 4, 0, 4, 5, 1, 0, 10, 23, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.155548}
{'[4, 3, 4, 0, 4, 5, 1, 0, 10, 23, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.155406}
{'[4, 3, 4, 0, 4, 5, 1, 0, 10, 23, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.155956}
{'[4, 3, 4, 0, 4, 5, 1, 0, 10, 23, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.155827}
{'[4, 3, 4, 0, 4, 5, 1, 0, 10, 23, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.155337}

out:
 ["{'[4, 3, 4, 0, 4, 5, 1, 0, 10, 23, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.181702}", "{'[4, 3, 4, 0, 4, 5, 1, 0, 10, 23, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.181714}", "{'[4, 3, 4, 0, 4, 5, 1, 0, 10, 23, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.169376}", "{'[4, 3, 4, 0, 4, 5, 1, 0, 10, 23, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.155382}", "{'[4, 3, 4, 0, 4, 5, 1, 0, 10, 23, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.155583}", "{'[4, 3, 4, 0, 4, 5, 1, 0, 10, 23, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.155518}", "{'[4, 3, 4, 0, 4, 5, 1, 0, 10, 23, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.155416}", "{'[4, 3, 4, 0, 4, 5, 1, 0, 10, 23, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.155599}", "{'[4, 3, 4, 0, 4, 5, 1, 0, 10, 23, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.155591}", "{'[4, 3, 4, 0, 4, 5, 1, 0, 10, 23, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.155709}", "{'[4, 3, 4, 0, 4, 5, 1, 0, 10, 23, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.155303}", "{'[4, 3, 4, 0, 4, 5, 1, 0, 10, 23, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.155394}", "{'[4, 3, 4, 0, 4, 5, 1, 0, 10, 23, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.155566}", "{'[4, 3, 4, 0, 4, 5, 1, 0, 10, 23, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.155631}", "{'[4, 3, 4, 0, 4, 5, 1, 0, 10, 23, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.156153}", "{'[4, 3, 4, 0, 4, 5, 1, 0, 10, 23, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.155355}", "{'[4, 3, 4, 0, 4, 5, 1, 0, 10, 23, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.15536}", "{'[4, 3, 4, 0, 4, 5, 1, 0, 10, 23, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.155404}", "{'[4, 3, 4, 0, 4, 5, 1, 0, 10, 23, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.155532}", "{'[4, 3, 4, 0, 4, 5, 1, 0, 10, 23, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.155971}", "{'[4, 3, 4, 0, 4, 5, 1, 0, 10, 23, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.155619}", "{'[4, 3, 4, 0, 4, 5, 1, 0, 10, 23, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.155751}", "{'[4, 3, 4, 0, 4, 5, 1, 0, 10, 23, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.155446}", "{'[4, 3, 4, 0, 4, 5, 1, 0, 10, 23, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.155365}", "{'[4, 3, 4, 0, 4, 5, 1, 0, 10, 23, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.156228}", "{'[4, 3, 4, 0, 4, 5, 1, 0, 10, 23, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.155548}", "{'[4, 3, 4, 0, 4, 5, 1, 0, 10, 23, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.155406}", "{'[4, 3, 4, 0, 4, 5, 1, 0, 10, 23, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.155956}", "{'[4, 3, 4, 0, 4, 5, 1, 0, 10, 23, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.155827}", "{'[4, 3, 4, 0, 4, 5, 1, 0, 10, 23, 0, 4, 0, 0, 0, 0, 0, 1]' : 0.155337}"]
returning from 'run': {'[4, 3, 4, 0, 4, 5, 1, 0, 10, 23, 0, 4, 0, 0, 0, 0, 0, 1]': ([0.181702, 0.181714, 0.169376, 0.155382, 0.155583, 0.155518, 0.155416, 0.155599, 0.155591, 0.155709, 0.155303, 0.155394, 0.155566, 0.155631, 0.156153, 0.155355, 0.15536, 0.155404, 0.155532, 0.155971, 0.155619, 0.155751, 0.155446, 0.155365, 0.156228, 0.155548, 0.155406, 0.155956, 0.155827, 0.155337], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 3, 4, 0, 4, 5, 1, 0, 10, 23, 0, 4, 0, 0, 0, 0, 0, 1]': ([0.181702, 0.181714, 0.169376, 0.155382, 0.155583, 0.155518, 0.155416, 0.155599, 0.155591, 0.155709, 0.155303, 0.155394, 0.155566, 0.155631, 0.156153, 0.155355, 0.15536, 0.155404, 0.155532, 0.155971, 0.155619, 0.155751, 0.155446, 0.155365, 0.156228, 0.155548, 0.155406, 0.155956, 0.155827, 0.155337], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = jjj
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	3
        Additions: 		304
        Multiplications: 	124
        Divisions: 		0
        Logical: 		0
        Reads: 			730
        Writes: 		93
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest40.exe __orio_perftest40.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest40.exe  
Program Test Output: 
{'[0, 4, 0, 0, 2, 2, 0, 1, 2, 0, 25, 1, 0, 2, 0, 0, 0, 0]' : 0.281917}
{'[0, 4, 0, 0, 2, 2, 0, 1, 2, 0, 25, 1, 0, 2, 0, 0, 0, 0]' : 0.277508}
{'[0, 4, 0, 0, 2, 2, 0, 1, 2, 0, 25, 1, 0, 2, 0, 0, 0, 0]' : 0.23505}
{'[0, 4, 0, 0, 2, 2, 0, 1, 2, 0, 25, 1, 0, 2, 0, 0, 0, 0]' : 0.234732}
{'[0, 4, 0, 0, 2, 2, 0, 1, 2, 0, 25, 1, 0, 2, 0, 0, 0, 0]' : 0.234566}
{'[0, 4, 0, 0, 2, 2, 0, 1, 2, 0, 25, 1, 0, 2, 0, 0, 0, 0]' : 0.234541}
{'[0, 4, 0, 0, 2, 2, 0, 1, 2, 0, 25, 1, 0, 2, 0, 0, 0, 0]' : 0.234991}
{'[0, 4, 0, 0, 2, 2, 0, 1, 2, 0, 25, 1, 0, 2, 0, 0, 0, 0]' : 0.234762}
{'[0, 4, 0, 0, 2, 2, 0, 1, 2, 0, 25, 1, 0, 2, 0, 0, 0, 0]' : 0.234898}
{'[0, 4, 0, 0, 2, 2, 0, 1, 2, 0, 25, 1, 0, 2, 0, 0, 0, 0]' : 0.234861}
{'[0, 4, 0, 0, 2, 2, 0, 1, 2, 0, 25, 1, 0, 2, 0, 0, 0, 0]' : 0.23458}
{'[0, 4, 0, 0, 2, 2, 0, 1, 2, 0, 25, 1, 0, 2, 0, 0, 0, 0]' : 0.235159}
{'[0, 4, 0, 0, 2, 2, 0, 1, 2, 0, 25, 1, 0, 2, 0, 0, 0, 0]' : 0.234569}
{'[0, 4, 0, 0, 2, 2, 0, 1, 2, 0, 25, 1, 0, 2, 0, 0, 0, 0]' : 0.235255}
{'[0, 4, 0, 0, 2, 2, 0, 1, 2, 0, 25, 1, 0, 2, 0, 0, 0, 0]' : 0.234556}
{'[0, 4, 0, 0, 2, 2, 0, 1, 2, 0, 25, 1, 0, 2, 0, 0, 0, 0]' : 0.235083}
{'[0, 4, 0, 0, 2, 2, 0, 1, 2, 0, 25, 1, 0, 2, 0, 0, 0, 0]' : 0.235217}
{'[0, 4, 0, 0, 2, 2, 0, 1, 2, 0, 25, 1, 0, 2, 0, 0, 0, 0]' : 0.234729}
{'[0, 4, 0, 0, 2, 2, 0, 1, 2, 0, 25, 1, 0, 2, 0, 0, 0, 0]' : 0.234671}
{'[0, 4, 0, 0, 2, 2, 0, 1, 2, 0, 25, 1, 0, 2, 0, 0, 0, 0]' : 0.234617}
{'[0, 4, 0, 0, 2, 2, 0, 1, 2, 0, 25, 1, 0, 2, 0, 0, 0, 0]' : 0.23504}
{'[0, 4, 0, 0, 2, 2, 0, 1, 2, 0, 25, 1, 0, 2, 0, 0, 0, 0]' : 0.234792}
{'[0, 4, 0, 0, 2, 2, 0, 1, 2, 0, 25, 1, 0, 2, 0, 0, 0, 0]' : 0.235218}
{'[0, 4, 0, 0, 2, 2, 0, 1, 2, 0, 25, 1, 0, 2, 0, 0, 0, 0]' : 0.234768}
{'[0, 4, 0, 0, 2, 2, 0, 1, 2, 0, 25, 1, 0, 2, 0, 0, 0, 0]' : 0.234704}
{'[0, 4, 0, 0, 2, 2, 0, 1, 2, 0, 25, 1, 0, 2, 0, 0, 0, 0]' : 0.235136}
{'[0, 4, 0, 0, 2, 2, 0, 1, 2, 0, 25, 1, 0, 2, 0, 0, 0, 0]' : 0.234768}
{'[0, 4, 0, 0, 2, 2, 0, 1, 2, 0, 25, 1, 0, 2, 0, 0, 0, 0]' : 0.234584}
{'[0, 4, 0, 0, 2, 2, 0, 1, 2, 0, 25, 1, 0, 2, 0, 0, 0, 0]' : 0.234948}
{'[0, 4, 0, 0, 2, 2, 0, 1, 2, 0, 25, 1, 0, 2, 0, 0, 0, 0]' : 0.234852}

out:
 ["{'[0, 4, 0, 0, 2, 2, 0, 1, 2, 0, 25, 1, 0, 2, 0, 0, 0, 0]' : 0.281917}", "{'[0, 4, 0, 0, 2, 2, 0, 1, 2, 0, 25, 1, 0, 2, 0, 0, 0, 0]' : 0.277508}", "{'[0, 4, 0, 0, 2, 2, 0, 1, 2, 0, 25, 1, 0, 2, 0, 0, 0, 0]' : 0.23505}", "{'[0, 4, 0, 0, 2, 2, 0, 1, 2, 0, 25, 1, 0, 2, 0, 0, 0, 0]' : 0.234732}", "{'[0, 4, 0, 0, 2, 2, 0, 1, 2, 0, 25, 1, 0, 2, 0, 0, 0, 0]' : 0.234566}", "{'[0, 4, 0, 0, 2, 2, 0, 1, 2, 0, 25, 1, 0, 2, 0, 0, 0, 0]' : 0.234541}", "{'[0, 4, 0, 0, 2, 2, 0, 1, 2, 0, 25, 1, 0, 2, 0, 0, 0, 0]' : 0.234991}", "{'[0, 4, 0, 0, 2, 2, 0, 1, 2, 0, 25, 1, 0, 2, 0, 0, 0, 0]' : 0.234762}", "{'[0, 4, 0, 0, 2, 2, 0, 1, 2, 0, 25, 1, 0, 2, 0, 0, 0, 0]' : 0.234898}", "{'[0, 4, 0, 0, 2, 2, 0, 1, 2, 0, 25, 1, 0, 2, 0, 0, 0, 0]' : 0.234861}", "{'[0, 4, 0, 0, 2, 2, 0, 1, 2, 0, 25, 1, 0, 2, 0, 0, 0, 0]' : 0.23458}", "{'[0, 4, 0, 0, 2, 2, 0, 1, 2, 0, 25, 1, 0, 2, 0, 0, 0, 0]' : 0.235159}", "{'[0, 4, 0, 0, 2, 2, 0, 1, 2, 0, 25, 1, 0, 2, 0, 0, 0, 0]' : 0.234569}", "{'[0, 4, 0, 0, 2, 2, 0, 1, 2, 0, 25, 1, 0, 2, 0, 0, 0, 0]' : 0.235255}", "{'[0, 4, 0, 0, 2, 2, 0, 1, 2, 0, 25, 1, 0, 2, 0, 0, 0, 0]' : 0.234556}", "{'[0, 4, 0, 0, 2, 2, 0, 1, 2, 0, 25, 1, 0, 2, 0, 0, 0, 0]' : 0.235083}", "{'[0, 4, 0, 0, 2, 2, 0, 1, 2, 0, 25, 1, 0, 2, 0, 0, 0, 0]' : 0.235217}", "{'[0, 4, 0, 0, 2, 2, 0, 1, 2, 0, 25, 1, 0, 2, 0, 0, 0, 0]' : 0.234729}", "{'[0, 4, 0, 0, 2, 2, 0, 1, 2, 0, 25, 1, 0, 2, 0, 0, 0, 0]' : 0.234671}", "{'[0, 4, 0, 0, 2, 2, 0, 1, 2, 0, 25, 1, 0, 2, 0, 0, 0, 0]' : 0.234617}", "{'[0, 4, 0, 0, 2, 2, 0, 1, 2, 0, 25, 1, 0, 2, 0, 0, 0, 0]' : 0.23504}", "{'[0, 4, 0, 0, 2, 2, 0, 1, 2, 0, 25, 1, 0, 2, 0, 0, 0, 0]' : 0.234792}", "{'[0, 4, 0, 0, 2, 2, 0, 1, 2, 0, 25, 1, 0, 2, 0, 0, 0, 0]' : 0.235218}", "{'[0, 4, 0, 0, 2, 2, 0, 1, 2, 0, 25, 1, 0, 2, 0, 0, 0, 0]' : 0.234768}", "{'[0, 4, 0, 0, 2, 2, 0, 1, 2, 0, 25, 1, 0, 2, 0, 0, 0, 0]' : 0.234704}", "{'[0, 4, 0, 0, 2, 2, 0, 1, 2, 0, 25, 1, 0, 2, 0, 0, 0, 0]' : 0.235136}", "{'[0, 4, 0, 0, 2, 2, 0, 1, 2, 0, 25, 1, 0, 2, 0, 0, 0, 0]' : 0.234768}", "{'[0, 4, 0, 0, 2, 2, 0, 1, 2, 0, 25, 1, 0, 2, 0, 0, 0, 0]' : 0.234584}", "{'[0, 4, 0, 0, 2, 2, 0, 1, 2, 0, 25, 1, 0, 2, 0, 0, 0, 0]' : 0.234948}", "{'[0, 4, 0, 0, 2, 2, 0, 1, 2, 0, 25, 1, 0, 2, 0, 0, 0, 0]' : 0.234852}"]
returning from 'run': {'[0, 4, 0, 0, 2, 2, 0, 1, 2, 0, 25, 1, 0, 2, 0, 0, 0, 0]': ([0.281917, 0.277508, 0.23505, 0.234732, 0.234566, 0.234541, 0.234991, 0.234762, 0.234898, 0.234861, 0.23458, 0.235159, 0.234569, 0.235255, 0.234556, 0.235083, 0.235217, 0.234729, 0.234671, 0.234617, 0.23504, 0.234792, 0.235218, 0.234768, 0.234704, 0.235136, 0.234768, 0.234584, 0.234948, 0.234852], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 4, 0, 0, 2, 2, 0, 1, 2, 0, 25, 1, 0, 2, 0, 0, 0, 0]': ([0.281917, 0.277508, 0.23505, 0.234732, 0.234566, 0.234541, 0.234991, 0.234762, 0.234898, 0.234861, 0.23458, 0.235159, 0.234569, 0.235255, 0.234556, 0.235083, 0.235217, 0.234729, 0.234671, 0.234617, 0.23504, 0.234792, 0.235218, 0.234768, 0.234704, 0.235136, 0.234768, 0.234584, 0.234948, 0.234852], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = kkk
Code stats:
        Number of loops: 	39
        Max loop nest depth: 	4
        Additions: 		1175
        Multiplications: 	480
        Divisions: 		0
        Logical: 		0
        Reads: 			2425
        Writes: 		457
        Comparisons:		39
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest41.exe __orio_perftest41.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest41.exe  
Program Test Output: 
{'[1, 0, 3, 0, 5, 1, 0, 1, 4, 6, 5, 0, 1, 0, 1, 1, 0, 1]' : 0.112924}
{'[1, 0, 3, 0, 5, 1, 0, 1, 4, 6, 5, 0, 1, 0, 1, 1, 0, 1]' : 0.113007}
{'[1, 0, 3, 0, 5, 1, 0, 1, 4, 6, 5, 0, 1, 0, 1, 1, 0, 1]' : 0.112873}
{'[1, 0, 3, 0, 5, 1, 0, 1, 4, 6, 5, 0, 1, 0, 1, 1, 0, 1]' : 0.111657}
{'[1, 0, 3, 0, 5, 1, 0, 1, 4, 6, 5, 0, 1, 0, 1, 1, 0, 1]' : 0.100037}
{'[1, 0, 3, 0, 5, 1, 0, 1, 4, 6, 5, 0, 1, 0, 1, 1, 0, 1]' : 0.099206}
{'[1, 0, 3, 0, 5, 1, 0, 1, 4, 6, 5, 0, 1, 0, 1, 1, 0, 1]' : 0.0992801}
{'[1, 0, 3, 0, 5, 1, 0, 1, 4, 6, 5, 0, 1, 0, 1, 1, 0, 1]' : 0.0992398}
{'[1, 0, 3, 0, 5, 1, 0, 1, 4, 6, 5, 0, 1, 0, 1, 1, 0, 1]' : 0.099256}
{'[1, 0, 3, 0, 5, 1, 0, 1, 4, 6, 5, 0, 1, 0, 1, 1, 0, 1]' : 0.0991471}
{'[1, 0, 3, 0, 5, 1, 0, 1, 4, 6, 5, 0, 1, 0, 1, 1, 0, 1]' : 0.0990291}
{'[1, 0, 3, 0, 5, 1, 0, 1, 4, 6, 5, 0, 1, 0, 1, 1, 0, 1]' : 0.0989211}
{'[1, 0, 3, 0, 5, 1, 0, 1, 4, 6, 5, 0, 1, 0, 1, 1, 0, 1]' : 0.099041}
{'[1, 0, 3, 0, 5, 1, 0, 1, 4, 6, 5, 0, 1, 0, 1, 1, 0, 1]' : 0.0990021}
{'[1, 0, 3, 0, 5, 1, 0, 1, 4, 6, 5, 0, 1, 0, 1, 1, 0, 1]' : 0.0989399}
{'[1, 0, 3, 0, 5, 1, 0, 1, 4, 6, 5, 0, 1, 0, 1, 1, 0, 1]' : 0.098865}
{'[1, 0, 3, 0, 5, 1, 0, 1, 4, 6, 5, 0, 1, 0, 1, 1, 0, 1]' : 0.0989089}
{'[1, 0, 3, 0, 5, 1, 0, 1, 4, 6, 5, 0, 1, 0, 1, 1, 0, 1]' : 0.0990081}
{'[1, 0, 3, 0, 5, 1, 0, 1, 4, 6, 5, 0, 1, 0, 1, 1, 0, 1]' : 0.099277}
{'[1, 0, 3, 0, 5, 1, 0, 1, 4, 6, 5, 0, 1, 0, 1, 1, 0, 1]' : 0.0988531}
{'[1, 0, 3, 0, 5, 1, 0, 1, 4, 6, 5, 0, 1, 0, 1, 1, 0, 1]' : 0.0988979}
{'[1, 0, 3, 0, 5, 1, 0, 1, 4, 6, 5, 0, 1, 0, 1, 1, 0, 1]' : 0.0990019}
{'[1, 0, 3, 0, 5, 1, 0, 1, 4, 6, 5, 0, 1, 0, 1, 1, 0, 1]' : 0.098877}
{'[1, 0, 3, 0, 5, 1, 0, 1, 4, 6, 5, 0, 1, 0, 1, 1, 0, 1]' : 0.0989161}
{'[1, 0, 3, 0, 5, 1, 0, 1, 4, 6, 5, 0, 1, 0, 1, 1, 0, 1]' : 0.0988271}
{'[1, 0, 3, 0, 5, 1, 0, 1, 4, 6, 5, 0, 1, 0, 1, 1, 0, 1]' : 0.098959}
{'[1, 0, 3, 0, 5, 1, 0, 1, 4, 6, 5, 0, 1, 0, 1, 1, 0, 1]' : 0.0988741}
{'[1, 0, 3, 0, 5, 1, 0, 1, 4, 6, 5, 0, 1, 0, 1, 1, 0, 1]' : 0.0988851}
{'[1, 0, 3, 0, 5, 1, 0, 1, 4, 6, 5, 0, 1, 0, 1, 1, 0, 1]' : 0.099128}
{'[1, 0, 3, 0, 5, 1, 0, 1, 4, 6, 5, 0, 1, 0, 1, 1, 0, 1]' : 0.0990622}

out:
 ["{'[1, 0, 3, 0, 5, 1, 0, 1, 4, 6, 5, 0, 1, 0, 1, 1, 0, 1]' : 0.112924}", "{'[1, 0, 3, 0, 5, 1, 0, 1, 4, 6, 5, 0, 1, 0, 1, 1, 0, 1]' : 0.113007}", "{'[1, 0, 3, 0, 5, 1, 0, 1, 4, 6, 5, 0, 1, 0, 1, 1, 0, 1]' : 0.112873}", "{'[1, 0, 3, 0, 5, 1, 0, 1, 4, 6, 5, 0, 1, 0, 1, 1, 0, 1]' : 0.111657}", "{'[1, 0, 3, 0, 5, 1, 0, 1, 4, 6, 5, 0, 1, 0, 1, 1, 0, 1]' : 0.100037}", "{'[1, 0, 3, 0, 5, 1, 0, 1, 4, 6, 5, 0, 1, 0, 1, 1, 0, 1]' : 0.099206}", "{'[1, 0, 3, 0, 5, 1, 0, 1, 4, 6, 5, 0, 1, 0, 1, 1, 0, 1]' : 0.0992801}", "{'[1, 0, 3, 0, 5, 1, 0, 1, 4, 6, 5, 0, 1, 0, 1, 1, 0, 1]' : 0.0992398}", "{'[1, 0, 3, 0, 5, 1, 0, 1, 4, 6, 5, 0, 1, 0, 1, 1, 0, 1]' : 0.099256}", "{'[1, 0, 3, 0, 5, 1, 0, 1, 4, 6, 5, 0, 1, 0, 1, 1, 0, 1]' : 0.0991471}", "{'[1, 0, 3, 0, 5, 1, 0, 1, 4, 6, 5, 0, 1, 0, 1, 1, 0, 1]' : 0.0990291}", "{'[1, 0, 3, 0, 5, 1, 0, 1, 4, 6, 5, 0, 1, 0, 1, 1, 0, 1]' : 0.0989211}", "{'[1, 0, 3, 0, 5, 1, 0, 1, 4, 6, 5, 0, 1, 0, 1, 1, 0, 1]' : 0.099041}", "{'[1, 0, 3, 0, 5, 1, 0, 1, 4, 6, 5, 0, 1, 0, 1, 1, 0, 1]' : 0.0990021}", "{'[1, 0, 3, 0, 5, 1, 0, 1, 4, 6, 5, 0, 1, 0, 1, 1, 0, 1]' : 0.0989399}", "{'[1, 0, 3, 0, 5, 1, 0, 1, 4, 6, 5, 0, 1, 0, 1, 1, 0, 1]' : 0.098865}", "{'[1, 0, 3, 0, 5, 1, 0, 1, 4, 6, 5, 0, 1, 0, 1, 1, 0, 1]' : 0.0989089}", "{'[1, 0, 3, 0, 5, 1, 0, 1, 4, 6, 5, 0, 1, 0, 1, 1, 0, 1]' : 0.0990081}", "{'[1, 0, 3, 0, 5, 1, 0, 1, 4, 6, 5, 0, 1, 0, 1, 1, 0, 1]' : 0.099277}", "{'[1, 0, 3, 0, 5, 1, 0, 1, 4, 6, 5, 0, 1, 0, 1, 1, 0, 1]' : 0.0988531}", "{'[1, 0, 3, 0, 5, 1, 0, 1, 4, 6, 5, 0, 1, 0, 1, 1, 0, 1]' : 0.0988979}", "{'[1, 0, 3, 0, 5, 1, 0, 1, 4, 6, 5, 0, 1, 0, 1, 1, 0, 1]' : 0.0990019}", "{'[1, 0, 3, 0, 5, 1, 0, 1, 4, 6, 5, 0, 1, 0, 1, 1, 0, 1]' : 0.098877}", "{'[1, 0, 3, 0, 5, 1, 0, 1, 4, 6, 5, 0, 1, 0, 1, 1, 0, 1]' : 0.0989161}", "{'[1, 0, 3, 0, 5, 1, 0, 1, 4, 6, 5, 0, 1, 0, 1, 1, 0, 1]' : 0.0988271}", "{'[1, 0, 3, 0, 5, 1, 0, 1, 4, 6, 5, 0, 1, 0, 1, 1, 0, 1]' : 0.098959}", "{'[1, 0, 3, 0, 5, 1, 0, 1, 4, 6, 5, 0, 1, 0, 1, 1, 0, 1]' : 0.0988741}", "{'[1, 0, 3, 0, 5, 1, 0, 1, 4, 6, 5, 0, 1, 0, 1, 1, 0, 1]' : 0.0988851}", "{'[1, 0, 3, 0, 5, 1, 0, 1, 4, 6, 5, 0, 1, 0, 1, 1, 0, 1]' : 0.099128}", "{'[1, 0, 3, 0, 5, 1, 0, 1, 4, 6, 5, 0, 1, 0, 1, 1, 0, 1]' : 0.0990622}"]
returning from 'run': {'[1, 0, 3, 0, 5, 1, 0, 1, 4, 6, 5, 0, 1, 0, 1, 1, 0, 1]': ([0.112924, 0.113007, 0.112873, 0.111657, 0.100037, 0.099206, 0.0992801, 0.0992398, 0.099256, 0.0991471, 0.0990291, 0.0989211, 0.099041, 0.0990021, 0.0989399, 0.098865, 0.0989089, 0.0990081, 0.099277, 0.0988531, 0.0988979, 0.0990019, 0.098877, 0.0989161, 0.0988271, 0.098959, 0.0988741, 0.0988851, 0.099128, 0.0990622], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 3, 0, 5, 1, 0, 1, 4, 6, 5, 0, 1, 0, 1, 1, 0, 1]': ([0.112924, 0.113007, 0.112873, 0.111657, 0.100037, 0.099206, 0.0992801, 0.0992398, 0.099256, 0.0991471, 0.0990291, 0.0989211, 0.099041, 0.0990021, 0.0989399, 0.098865, 0.0989089, 0.0990081, 0.099277, 0.0988531, 0.0988979, 0.0990019, 0.098877, 0.0989161, 0.0988271, 0.098959, 0.0988741, 0.0988851, 0.099128, 0.0990622], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	23
        Max loop nest depth: 	5
        Additions: 		884
        Multiplications: 	396
        Divisions: 		0
        Logical: 		0
        Reads: 			1887
        Writes: 		361
        Comparisons:		23
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest42.exe __orio_perftest42.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest42.exe  
Program Test Output: 
{'[2, 0, 4, 0, 1, 4, 1, 1, 29, 0, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.163828}
{'[2, 0, 4, 0, 1, 4, 1, 1, 29, 0, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.163983}
{'[2, 0, 4, 0, 1, 4, 1, 1, 29, 0, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.157298}
{'[2, 0, 4, 0, 1, 4, 1, 1, 29, 0, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.146794}
{'[2, 0, 4, 0, 1, 4, 1, 1, 29, 0, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.147582}
{'[2, 0, 4, 0, 1, 4, 1, 1, 29, 0, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.147266}
{'[2, 0, 4, 0, 1, 4, 1, 1, 29, 0, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.147044}
{'[2, 0, 4, 0, 1, 4, 1, 1, 29, 0, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.146823}
{'[2, 0, 4, 0, 1, 4, 1, 1, 29, 0, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.14705}
{'[2, 0, 4, 0, 1, 4, 1, 1, 29, 0, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.146743}
{'[2, 0, 4, 0, 1, 4, 1, 1, 29, 0, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.147312}
{'[2, 0, 4, 0, 1, 4, 1, 1, 29, 0, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.147325}
{'[2, 0, 4, 0, 1, 4, 1, 1, 29, 0, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.147799}
{'[2, 0, 4, 0, 1, 4, 1, 1, 29, 0, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.146859}
{'[2, 0, 4, 0, 1, 4, 1, 1, 29, 0, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.147286}
{'[2, 0, 4, 0, 1, 4, 1, 1, 29, 0, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.146653}
{'[2, 0, 4, 0, 1, 4, 1, 1, 29, 0, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.146466}
{'[2, 0, 4, 0, 1, 4, 1, 1, 29, 0, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.146535}
{'[2, 0, 4, 0, 1, 4, 1, 1, 29, 0, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.146556}
{'[2, 0, 4, 0, 1, 4, 1, 1, 29, 0, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.147456}
{'[2, 0, 4, 0, 1, 4, 1, 1, 29, 0, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.147729}
{'[2, 0, 4, 0, 1, 4, 1, 1, 29, 0, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.1469}
{'[2, 0, 4, 0, 1, 4, 1, 1, 29, 0, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.147117}
{'[2, 0, 4, 0, 1, 4, 1, 1, 29, 0, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.147598}
{'[2, 0, 4, 0, 1, 4, 1, 1, 29, 0, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.147497}
{'[2, 0, 4, 0, 1, 4, 1, 1, 29, 0, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.146952}
{'[2, 0, 4, 0, 1, 4, 1, 1, 29, 0, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.147572}
{'[2, 0, 4, 0, 1, 4, 1, 1, 29, 0, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.147382}
{'[2, 0, 4, 0, 1, 4, 1, 1, 29, 0, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.147287}
{'[2, 0, 4, 0, 1, 4, 1, 1, 29, 0, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.147208}

out:
 ["{'[2, 0, 4, 0, 1, 4, 1, 1, 29, 0, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.163828}", "{'[2, 0, 4, 0, 1, 4, 1, 1, 29, 0, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.163983}", "{'[2, 0, 4, 0, 1, 4, 1, 1, 29, 0, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.157298}", "{'[2, 0, 4, 0, 1, 4, 1, 1, 29, 0, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.146794}", "{'[2, 0, 4, 0, 1, 4, 1, 1, 29, 0, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.147582}", "{'[2, 0, 4, 0, 1, 4, 1, 1, 29, 0, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.147266}", "{'[2, 0, 4, 0, 1, 4, 1, 1, 29, 0, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.147044}", "{'[2, 0, 4, 0, 1, 4, 1, 1, 29, 0, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.146823}", "{'[2, 0, 4, 0, 1, 4, 1, 1, 29, 0, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.14705}", "{'[2, 0, 4, 0, 1, 4, 1, 1, 29, 0, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.146743}", "{'[2, 0, 4, 0, 1, 4, 1, 1, 29, 0, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.147312}", "{'[2, 0, 4, 0, 1, 4, 1, 1, 29, 0, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.147325}", "{'[2, 0, 4, 0, 1, 4, 1, 1, 29, 0, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.147799}", "{'[2, 0, 4, 0, 1, 4, 1, 1, 29, 0, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.146859}", "{'[2, 0, 4, 0, 1, 4, 1, 1, 29, 0, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.147286}", "{'[2, 0, 4, 0, 1, 4, 1, 1, 29, 0, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.146653}", "{'[2, 0, 4, 0, 1, 4, 1, 1, 29, 0, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.146466}", "{'[2, 0, 4, 0, 1, 4, 1, 1, 29, 0, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.146535}", "{'[2, 0, 4, 0, 1, 4, 1, 1, 29, 0, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.146556}", "{'[2, 0, 4, 0, 1, 4, 1, 1, 29, 0, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.147456}", "{'[2, 0, 4, 0, 1, 4, 1, 1, 29, 0, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.147729}", "{'[2, 0, 4, 0, 1, 4, 1, 1, 29, 0, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.1469}", "{'[2, 0, 4, 0, 1, 4, 1, 1, 29, 0, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.147117}", "{'[2, 0, 4, 0, 1, 4, 1, 1, 29, 0, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.147598}", "{'[2, 0, 4, 0, 1, 4, 1, 1, 29, 0, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.147497}", "{'[2, 0, 4, 0, 1, 4, 1, 1, 29, 0, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.146952}", "{'[2, 0, 4, 0, 1, 4, 1, 1, 29, 0, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.147572}", "{'[2, 0, 4, 0, 1, 4, 1, 1, 29, 0, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.147382}", "{'[2, 0, 4, 0, 1, 4, 1, 1, 29, 0, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.147287}", "{'[2, 0, 4, 0, 1, 4, 1, 1, 29, 0, 3, 0, 2, 0, 0, 1, 1, 0]' : 0.147208}"]
returning from 'run': {'[2, 0, 4, 0, 1, 4, 1, 1, 29, 0, 3, 0, 2, 0, 0, 1, 1, 0]': ([0.163828, 0.163983, 0.157298, 0.146794, 0.147582, 0.147266, 0.147044, 0.146823, 0.14705, 0.146743, 0.147312, 0.147325, 0.147799, 0.146859, 0.147286, 0.146653, 0.146466, 0.146535, 0.146556, 0.147456, 0.147729, 0.1469, 0.147117, 0.147598, 0.147497, 0.146952, 0.147572, 0.147382, 0.147287, 0.147208], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 0, 4, 0, 1, 4, 1, 1, 29, 0, 3, 0, 2, 0, 0, 1, 1, 0]': ([0.163828, 0.163983, 0.157298, 0.146794, 0.147582, 0.147266, 0.147044, 0.146823, 0.14705, 0.146743, 0.147312, 0.147325, 0.147799, 0.146859, 0.147286, 0.146653, 0.146466, 0.146535, 0.146556, 0.147456, 0.147729, 0.1469, 0.147117, 0.147598, 0.147497, 0.146952, 0.147572, 0.147382, 0.147287, 0.147208], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	56
        Max loop nest depth: 	5
        Additions: 		1475
        Multiplications: 	364
        Divisions: 		0
        Logical: 		0
        Reads: 			2522
        Writes: 		376
        Comparisons:		56
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest43.exe __orio_perftest43.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest43.exe  
Program Test Output: 
{'[6, 0, 0, 6, 6, 6, 1, 0, 3, 12, 2, 0, 0, 0, 1, 0, 1, 1]' : 0.214167}
{'[6, 0, 0, 6, 6, 6, 1, 0, 3, 12, 2, 0, 0, 0, 1, 0, 1, 1]' : 0.214108}
{'[6, 0, 0, 6, 6, 6, 1, 0, 3, 12, 2, 0, 0, 0, 1, 0, 1, 1]' : 0.187446}
{'[6, 0, 0, 6, 6, 6, 1, 0, 3, 12, 2, 0, 0, 0, 1, 0, 1, 1]' : 0.18153}
{'[6, 0, 0, 6, 6, 6, 1, 0, 3, 12, 2, 0, 0, 0, 1, 0, 1, 1]' : 0.191088}
{'[6, 0, 0, 6, 6, 6, 1, 0, 3, 12, 2, 0, 0, 0, 1, 0, 1, 1]' : 0.191084}
{'[6, 0, 0, 6, 6, 6, 1, 0, 3, 12, 2, 0, 0, 0, 1, 0, 1, 1]' : 0.191008}
{'[6, 0, 0, 6, 6, 6, 1, 0, 3, 12, 2, 0, 0, 0, 1, 0, 1, 1]' : 0.188863}
{'[6, 0, 0, 6, 6, 6, 1, 0, 3, 12, 2, 0, 0, 0, 1, 0, 1, 1]' : 0.185292}
{'[6, 0, 0, 6, 6, 6, 1, 0, 3, 12, 2, 0, 0, 0, 1, 0, 1, 1]' : 0.190296}
{'[6, 0, 0, 6, 6, 6, 1, 0, 3, 12, 2, 0, 0, 0, 1, 0, 1, 1]' : 0.191036}
{'[6, 0, 0, 6, 6, 6, 1, 0, 3, 12, 2, 0, 0, 0, 1, 0, 1, 1]' : 0.191069}
{'[6, 0, 0, 6, 6, 6, 1, 0, 3, 12, 2, 0, 0, 0, 1, 0, 1, 1]' : 0.191026}
{'[6, 0, 0, 6, 6, 6, 1, 0, 3, 12, 2, 0, 0, 0, 1, 0, 1, 1]' : 0.19095}
{'[6, 0, 0, 6, 6, 6, 1, 0, 3, 12, 2, 0, 0, 0, 1, 0, 1, 1]' : 0.191127}
{'[6, 0, 0, 6, 6, 6, 1, 0, 3, 12, 2, 0, 0, 0, 1, 0, 1, 1]' : 0.188244}
{'[6, 0, 0, 6, 6, 6, 1, 0, 3, 12, 2, 0, 0, 0, 1, 0, 1, 1]' : 0.184882}
{'[6, 0, 0, 6, 6, 6, 1, 0, 3, 12, 2, 0, 0, 0, 1, 0, 1, 1]' : 0.183468}
{'[6, 0, 0, 6, 6, 6, 1, 0, 3, 12, 2, 0, 0, 0, 1, 0, 1, 1]' : 0.180287}
{'[6, 0, 0, 6, 6, 6, 1, 0, 3, 12, 2, 0, 0, 0, 1, 0, 1, 1]' : 0.182226}
{'[6, 0, 0, 6, 6, 6, 1, 0, 3, 12, 2, 0, 0, 0, 1, 0, 1, 1]' : 0.191061}
{'[6, 0, 0, 6, 6, 6, 1, 0, 3, 12, 2, 0, 0, 0, 1, 0, 1, 1]' : 0.191042}
{'[6, 0, 0, 6, 6, 6, 1, 0, 3, 12, 2, 0, 0, 0, 1, 0, 1, 1]' : 0.187321}
{'[6, 0, 0, 6, 6, 6, 1, 0, 3, 12, 2, 0, 0, 0, 1, 0, 1, 1]' : 0.185243}
{'[6, 0, 0, 6, 6, 6, 1, 0, 3, 12, 2, 0, 0, 0, 1, 0, 1, 1]' : 0.184622}
{'[6, 0, 0, 6, 6, 6, 1, 0, 3, 12, 2, 0, 0, 0, 1, 0, 1, 1]' : 0.190481}
{'[6, 0, 0, 6, 6, 6, 1, 0, 3, 12, 2, 0, 0, 0, 1, 0, 1, 1]' : 0.191084}
{'[6, 0, 0, 6, 6, 6, 1, 0, 3, 12, 2, 0, 0, 0, 1, 0, 1, 1]' : 0.191085}
{'[6, 0, 0, 6, 6, 6, 1, 0, 3, 12, 2, 0, 0, 0, 1, 0, 1, 1]' : 0.191169}
{'[6, 0, 0, 6, 6, 6, 1, 0, 3, 12, 2, 0, 0, 0, 1, 0, 1, 1]' : 0.191057}

out:
 ["{'[6, 0, 0, 6, 6, 6, 1, 0, 3, 12, 2, 0, 0, 0, 1, 0, 1, 1]' : 0.214167}", "{'[6, 0, 0, 6, 6, 6, 1, 0, 3, 12, 2, 0, 0, 0, 1, 0, 1, 1]' : 0.214108}", "{'[6, 0, 0, 6, 6, 6, 1, 0, 3, 12, 2, 0, 0, 0, 1, 0, 1, 1]' : 0.187446}", "{'[6, 0, 0, 6, 6, 6, 1, 0, 3, 12, 2, 0, 0, 0, 1, 0, 1, 1]' : 0.18153}", "{'[6, 0, 0, 6, 6, 6, 1, 0, 3, 12, 2, 0, 0, 0, 1, 0, 1, 1]' : 0.191088}", "{'[6, 0, 0, 6, 6, 6, 1, 0, 3, 12, 2, 0, 0, 0, 1, 0, 1, 1]' : 0.191084}", "{'[6, 0, 0, 6, 6, 6, 1, 0, 3, 12, 2, 0, 0, 0, 1, 0, 1, 1]' : 0.191008}", "{'[6, 0, 0, 6, 6, 6, 1, 0, 3, 12, 2, 0, 0, 0, 1, 0, 1, 1]' : 0.188863}", "{'[6, 0, 0, 6, 6, 6, 1, 0, 3, 12, 2, 0, 0, 0, 1, 0, 1, 1]' : 0.185292}", "{'[6, 0, 0, 6, 6, 6, 1, 0, 3, 12, 2, 0, 0, 0, 1, 0, 1, 1]' : 0.190296}", "{'[6, 0, 0, 6, 6, 6, 1, 0, 3, 12, 2, 0, 0, 0, 1, 0, 1, 1]' : 0.191036}", "{'[6, 0, 0, 6, 6, 6, 1, 0, 3, 12, 2, 0, 0, 0, 1, 0, 1, 1]' : 0.191069}", "{'[6, 0, 0, 6, 6, 6, 1, 0, 3, 12, 2, 0, 0, 0, 1, 0, 1, 1]' : 0.191026}", "{'[6, 0, 0, 6, 6, 6, 1, 0, 3, 12, 2, 0, 0, 0, 1, 0, 1, 1]' : 0.19095}", "{'[6, 0, 0, 6, 6, 6, 1, 0, 3, 12, 2, 0, 0, 0, 1, 0, 1, 1]' : 0.191127}", "{'[6, 0, 0, 6, 6, 6, 1, 0, 3, 12, 2, 0, 0, 0, 1, 0, 1, 1]' : 0.188244}", "{'[6, 0, 0, 6, 6, 6, 1, 0, 3, 12, 2, 0, 0, 0, 1, 0, 1, 1]' : 0.184882}", "{'[6, 0, 0, 6, 6, 6, 1, 0, 3, 12, 2, 0, 0, 0, 1, 0, 1, 1]' : 0.183468}", "{'[6, 0, 0, 6, 6, 6, 1, 0, 3, 12, 2, 0, 0, 0, 1, 0, 1, 1]' : 0.180287}", "{'[6, 0, 0, 6, 6, 6, 1, 0, 3, 12, 2, 0, 0, 0, 1, 0, 1, 1]' : 0.182226}", "{'[6, 0, 0, 6, 6, 6, 1, 0, 3, 12, 2, 0, 0, 0, 1, 0, 1, 1]' : 0.191061}", "{'[6, 0, 0, 6, 6, 6, 1, 0, 3, 12, 2, 0, 0, 0, 1, 0, 1, 1]' : 0.191042}", "{'[6, 0, 0, 6, 6, 6, 1, 0, 3, 12, 2, 0, 0, 0, 1, 0, 1, 1]' : 0.187321}", "{'[6, 0, 0, 6, 6, 6, 1, 0, 3, 12, 2, 0, 0, 0, 1, 0, 1, 1]' : 0.185243}", "{'[6, 0, 0, 6, 6, 6, 1, 0, 3, 12, 2, 0, 0, 0, 1, 0, 1, 1]' : 0.184622}", "{'[6, 0, 0, 6, 6, 6, 1, 0, 3, 12, 2, 0, 0, 0, 1, 0, 1, 1]' : 0.190481}", "{'[6, 0, 0, 6, 6, 6, 1, 0, 3, 12, 2, 0, 0, 0, 1, 0, 1, 1]' : 0.191084}", "{'[6, 0, 0, 6, 6, 6, 1, 0, 3, 12, 2, 0, 0, 0, 1, 0, 1, 1]' : 0.191085}", "{'[6, 0, 0, 6, 6, 6, 1, 0, 3, 12, 2, 0, 0, 0, 1, 0, 1, 1]' : 0.191169}", "{'[6, 0, 0, 6, 6, 6, 1, 0, 3, 12, 2, 0, 0, 0, 1, 0, 1, 1]' : 0.191057}"]
returning from 'run': {'[6, 0, 0, 6, 6, 6, 1, 0, 3, 12, 2, 0, 0, 0, 1, 0, 1, 1]': ([0.214167, 0.214108, 0.187446, 0.18153, 0.191088, 0.191084, 0.191008, 0.188863, 0.185292, 0.190296, 0.191036, 0.191069, 0.191026, 0.19095, 0.191127, 0.188244, 0.184882, 0.183468, 0.180287, 0.182226, 0.191061, 0.191042, 0.187321, 0.185243, 0.184622, 0.190481, 0.191084, 0.191085, 0.191169, 0.191057], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 0, 6, 6, 6, 1, 0, 3, 12, 2, 0, 0, 0, 1, 0, 1, 1]': ([0.214167, 0.214108, 0.187446, 0.18153, 0.191088, 0.191084, 0.191008, 0.188863, 0.185292, 0.190296, 0.191036, 0.191069, 0.191026, 0.19095, 0.191127, 0.188244, 0.184882, 0.183468, 0.180287, 0.182226, 0.191061, 0.191042, 0.187321, 0.185243, 0.184622, 0.190481, 0.191084, 0.191085, 0.191169, 0.191057], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		360
        Multiplications: 	130
        Divisions: 		0
        Logical: 		0
        Reads: 			749
        Writes: 		98
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest44.exe __orio_perftest44.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest44.exe  
Program Test Output: 
{'[0, 3, 0, 1, 1, 6, 0, 0, 1, 0, 3, 26, 0, 0, 2, 0, 0, 1]' : 0.197167}
{'[0, 3, 0, 1, 1, 6, 0, 0, 1, 0, 3, 26, 0, 0, 2, 0, 0, 1]' : 0.196015}
{'[0, 3, 0, 1, 1, 6, 0, 0, 1, 0, 3, 26, 0, 0, 2, 0, 0, 1]' : 0.166561}
{'[0, 3, 0, 1, 1, 6, 0, 0, 1, 0, 3, 26, 0, 0, 2, 0, 0, 1]' : 0.16405}
{'[0, 3, 0, 1, 1, 6, 0, 0, 1, 0, 3, 26, 0, 0, 2, 0, 0, 1]' : 0.164691}
{'[0, 3, 0, 1, 1, 6, 0, 0, 1, 0, 3, 26, 0, 0, 2, 0, 0, 1]' : 0.164303}
{'[0, 3, 0, 1, 1, 6, 0, 0, 1, 0, 3, 26, 0, 0, 2, 0, 0, 1]' : 0.16412}
{'[0, 3, 0, 1, 1, 6, 0, 0, 1, 0, 3, 26, 0, 0, 2, 0, 0, 1]' : 0.164381}
{'[0, 3, 0, 1, 1, 6, 0, 0, 1, 0, 3, 26, 0, 0, 2, 0, 0, 1]' : 0.164154}
{'[0, 3, 0, 1, 1, 6, 0, 0, 1, 0, 3, 26, 0, 0, 2, 0, 0, 1]' : 0.164132}
{'[0, 3, 0, 1, 1, 6, 0, 0, 1, 0, 3, 26, 0, 0, 2, 0, 0, 1]' : 0.164132}
{'[0, 3, 0, 1, 1, 6, 0, 0, 1, 0, 3, 26, 0, 0, 2, 0, 0, 1]' : 0.164272}
{'[0, 3, 0, 1, 1, 6, 0, 0, 1, 0, 3, 26, 0, 0, 2, 0, 0, 1]' : 0.16436}
{'[0, 3, 0, 1, 1, 6, 0, 0, 1, 0, 3, 26, 0, 0, 2, 0, 0, 1]' : 0.16417}
{'[0, 3, 0, 1, 1, 6, 0, 0, 1, 0, 3, 26, 0, 0, 2, 0, 0, 1]' : 0.164098}
{'[0, 3, 0, 1, 1, 6, 0, 0, 1, 0, 3, 26, 0, 0, 2, 0, 0, 1]' : 0.164202}
{'[0, 3, 0, 1, 1, 6, 0, 0, 1, 0, 3, 26, 0, 0, 2, 0, 0, 1]' : 0.164302}
{'[0, 3, 0, 1, 1, 6, 0, 0, 1, 0, 3, 26, 0, 0, 2, 0, 0, 1]' : 0.164104}
{'[0, 3, 0, 1, 1, 6, 0, 0, 1, 0, 3, 26, 0, 0, 2, 0, 0, 1]' : 0.16442}
{'[0, 3, 0, 1, 1, 6, 0, 0, 1, 0, 3, 26, 0, 0, 2, 0, 0, 1]' : 0.164293}
{'[0, 3, 0, 1, 1, 6, 0, 0, 1, 0, 3, 26, 0, 0, 2, 0, 0, 1]' : 0.164113}
{'[0, 3, 0, 1, 1, 6, 0, 0, 1, 0, 3, 26, 0, 0, 2, 0, 0, 1]' : 0.164094}
{'[0, 3, 0, 1, 1, 6, 0, 0, 1, 0, 3, 26, 0, 0, 2, 0, 0, 1]' : 0.164096}
{'[0, 3, 0, 1, 1, 6, 0, 0, 1, 0, 3, 26, 0, 0, 2, 0, 0, 1]' : 0.164782}
{'[0, 3, 0, 1, 1, 6, 0, 0, 1, 0, 3, 26, 0, 0, 2, 0, 0, 1]' : 0.164147}
{'[0, 3, 0, 1, 1, 6, 0, 0, 1, 0, 3, 26, 0, 0, 2, 0, 0, 1]' : 0.164374}
{'[0, 3, 0, 1, 1, 6, 0, 0, 1, 0, 3, 26, 0, 0, 2, 0, 0, 1]' : 0.164305}
{'[0, 3, 0, 1, 1, 6, 0, 0, 1, 0, 3, 26, 0, 0, 2, 0, 0, 1]' : 0.164302}
{'[0, 3, 0, 1, 1, 6, 0, 0, 1, 0, 3, 26, 0, 0, 2, 0, 0, 1]' : 0.164574}
{'[0, 3, 0, 1, 1, 6, 0, 0, 1, 0, 3, 26, 0, 0, 2, 0, 0, 1]' : 0.164196}

out:
 ["{'[0, 3, 0, 1, 1, 6, 0, 0, 1, 0, 3, 26, 0, 0, 2, 0, 0, 1]' : 0.197167}", "{'[0, 3, 0, 1, 1, 6, 0, 0, 1, 0, 3, 26, 0, 0, 2, 0, 0, 1]' : 0.196015}", "{'[0, 3, 0, 1, 1, 6, 0, 0, 1, 0, 3, 26, 0, 0, 2, 0, 0, 1]' : 0.166561}", "{'[0, 3, 0, 1, 1, 6, 0, 0, 1, 0, 3, 26, 0, 0, 2, 0, 0, 1]' : 0.16405}", "{'[0, 3, 0, 1, 1, 6, 0, 0, 1, 0, 3, 26, 0, 0, 2, 0, 0, 1]' : 0.164691}", "{'[0, 3, 0, 1, 1, 6, 0, 0, 1, 0, 3, 26, 0, 0, 2, 0, 0, 1]' : 0.164303}", "{'[0, 3, 0, 1, 1, 6, 0, 0, 1, 0, 3, 26, 0, 0, 2, 0, 0, 1]' : 0.16412}", "{'[0, 3, 0, 1, 1, 6, 0, 0, 1, 0, 3, 26, 0, 0, 2, 0, 0, 1]' : 0.164381}", "{'[0, 3, 0, 1, 1, 6, 0, 0, 1, 0, 3, 26, 0, 0, 2, 0, 0, 1]' : 0.164154}", "{'[0, 3, 0, 1, 1, 6, 0, 0, 1, 0, 3, 26, 0, 0, 2, 0, 0, 1]' : 0.164132}", "{'[0, 3, 0, 1, 1, 6, 0, 0, 1, 0, 3, 26, 0, 0, 2, 0, 0, 1]' : 0.164132}", "{'[0, 3, 0, 1, 1, 6, 0, 0, 1, 0, 3, 26, 0, 0, 2, 0, 0, 1]' : 0.164272}", "{'[0, 3, 0, 1, 1, 6, 0, 0, 1, 0, 3, 26, 0, 0, 2, 0, 0, 1]' : 0.16436}", "{'[0, 3, 0, 1, 1, 6, 0, 0, 1, 0, 3, 26, 0, 0, 2, 0, 0, 1]' : 0.16417}", "{'[0, 3, 0, 1, 1, 6, 0, 0, 1, 0, 3, 26, 0, 0, 2, 0, 0, 1]' : 0.164098}", "{'[0, 3, 0, 1, 1, 6, 0, 0, 1, 0, 3, 26, 0, 0, 2, 0, 0, 1]' : 0.164202}", "{'[0, 3, 0, 1, 1, 6, 0, 0, 1, 0, 3, 26, 0, 0, 2, 0, 0, 1]' : 0.164302}", "{'[0, 3, 0, 1, 1, 6, 0, 0, 1, 0, 3, 26, 0, 0, 2, 0, 0, 1]' : 0.164104}", "{'[0, 3, 0, 1, 1, 6, 0, 0, 1, 0, 3, 26, 0, 0, 2, 0, 0, 1]' : 0.16442}", "{'[0, 3, 0, 1, 1, 6, 0, 0, 1, 0, 3, 26, 0, 0, 2, 0, 0, 1]' : 0.164293}", "{'[0, 3, 0, 1, 1, 6, 0, 0, 1, 0, 3, 26, 0, 0, 2, 0, 0, 1]' : 0.164113}", "{'[0, 3, 0, 1, 1, 6, 0, 0, 1, 0, 3, 26, 0, 0, 2, 0, 0, 1]' : 0.164094}", "{'[0, 3, 0, 1, 1, 6, 0, 0, 1, 0, 3, 26, 0, 0, 2, 0, 0, 1]' : 0.164096}", "{'[0, 3, 0, 1, 1, 6, 0, 0, 1, 0, 3, 26, 0, 0, 2, 0, 0, 1]' : 0.164782}", "{'[0, 3, 0, 1, 1, 6, 0, 0, 1, 0, 3, 26, 0, 0, 2, 0, 0, 1]' : 0.164147}", "{'[0, 3, 0, 1, 1, 6, 0, 0, 1, 0, 3, 26, 0, 0, 2, 0, 0, 1]' : 0.164374}", "{'[0, 3, 0, 1, 1, 6, 0, 0, 1, 0, 3, 26, 0, 0, 2, 0, 0, 1]' : 0.164305}", "{'[0, 3, 0, 1, 1, 6, 0, 0, 1, 0, 3, 26, 0, 0, 2, 0, 0, 1]' : 0.164302}", "{'[0, 3, 0, 1, 1, 6, 0, 0, 1, 0, 3, 26, 0, 0, 2, 0, 0, 1]' : 0.164574}", "{'[0, 3, 0, 1, 1, 6, 0, 0, 1, 0, 3, 26, 0, 0, 2, 0, 0, 1]' : 0.164196}"]
returning from 'run': {'[0, 3, 0, 1, 1, 6, 0, 0, 1, 0, 3, 26, 0, 0, 2, 0, 0, 1]': ([0.197167, 0.196015, 0.166561, 0.16405, 0.164691, 0.164303, 0.16412, 0.164381, 0.164154, 0.164132, 0.164132, 0.164272, 0.16436, 0.16417, 0.164098, 0.164202, 0.164302, 0.164104, 0.16442, 0.164293, 0.164113, 0.164094, 0.164096, 0.164782, 0.164147, 0.164374, 0.164305, 0.164302, 0.164574, 0.164196], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 3, 0, 1, 1, 6, 0, 0, 1, 0, 3, 26, 0, 0, 2, 0, 0, 1]': ([0.197167, 0.196015, 0.166561, 0.16405, 0.164691, 0.164303, 0.16412, 0.164381, 0.164154, 0.164132, 0.164132, 0.164272, 0.16436, 0.16417, 0.164098, 0.164202, 0.164302, 0.164104, 0.16442, 0.164293, 0.164113, 0.164094, 0.164096, 0.164782, 0.164147, 0.164374, 0.164305, 0.164302, 0.164574, 0.164196], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	23
        Max loop nest depth: 	5
        Additions: 		714
        Multiplications: 	162
        Divisions: 		0
        Logical: 		0
        Reads: 			1162
        Writes: 		143
        Comparisons:		23
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest45.exe __orio_perftest45.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest45.exe  
Program Test Output: 
{'[4, 5, 4, 0, 4, 6, 1, 1, 3, 0, 0, 0, 1, 0, 1, 0, 1, 0]' : 0.123327}
{'[4, 5, 4, 0, 4, 6, 1, 1, 3, 0, 0, 0, 1, 0, 1, 0, 1, 0]' : 0.12317}
{'[4, 5, 4, 0, 4, 6, 1, 1, 3, 0, 0, 0, 1, 0, 1, 0, 1, 0]' : 0.123076}
{'[4, 5, 4, 0, 4, 6, 1, 1, 3, 0, 0, 0, 1, 0, 1, 0, 1, 0]' : 0.121953}
{'[4, 5, 4, 0, 4, 6, 1, 1, 3, 0, 0, 0, 1, 0, 1, 0, 1, 0]' : 0.107544}
{'[4, 5, 4, 0, 4, 6, 1, 1, 3, 0, 0, 0, 1, 0, 1, 0, 1, 0]' : 0.106434}
{'[4, 5, 4, 0, 4, 6, 1, 1, 3, 0, 0, 0, 1, 0, 1, 0, 1, 0]' : 0.106272}
{'[4, 5, 4, 0, 4, 6, 1, 1, 3, 0, 0, 0, 1, 0, 1, 0, 1, 0]' : 0.106534}
{'[4, 5, 4, 0, 4, 6, 1, 1, 3, 0, 0, 0, 1, 0, 1, 0, 1, 0]' : 0.106312}
{'[4, 5, 4, 0, 4, 6, 1, 1, 3, 0, 0, 0, 1, 0, 1, 0, 1, 0]' : 0.106258}
{'[4, 5, 4, 0, 4, 6, 1, 1, 3, 0, 0, 0, 1, 0, 1, 0, 1, 0]' : 0.106145}
{'[4, 5, 4, 0, 4, 6, 1, 1, 3, 0, 0, 0, 1, 0, 1, 0, 1, 0]' : 0.106461}
{'[4, 5, 4, 0, 4, 6, 1, 1, 3, 0, 0, 0, 1, 0, 1, 0, 1, 0]' : 0.10645}
{'[4, 5, 4, 0, 4, 6, 1, 1, 3, 0, 0, 0, 1, 0, 1, 0, 1, 0]' : 0.106197}
{'[4, 5, 4, 0, 4, 6, 1, 1, 3, 0, 0, 0, 1, 0, 1, 0, 1, 0]' : 0.106599}
{'[4, 5, 4, 0, 4, 6, 1, 1, 3, 0, 0, 0, 1, 0, 1, 0, 1, 0]' : 0.106537}
{'[4, 5, 4, 0, 4, 6, 1, 1, 3, 0, 0, 0, 1, 0, 1, 0, 1, 0]' : 0.106672}
{'[4, 5, 4, 0, 4, 6, 1, 1, 3, 0, 0, 0, 1, 0, 1, 0, 1, 0]' : 0.106391}
{'[4, 5, 4, 0, 4, 6, 1, 1, 3, 0, 0, 0, 1, 0, 1, 0, 1, 0]' : 0.106438}
{'[4, 5, 4, 0, 4, 6, 1, 1, 3, 0, 0, 0, 1, 0, 1, 0, 1, 0]' : 0.106378}
{'[4, 5, 4, 0, 4, 6, 1, 1, 3, 0, 0, 0, 1, 0, 1, 0, 1, 0]' : 0.106365}
{'[4, 5, 4, 0, 4, 6, 1, 1, 3, 0, 0, 0, 1, 0, 1, 0, 1, 0]' : 0.10648}
{'[4, 5, 4, 0, 4, 6, 1, 1, 3, 0, 0, 0, 1, 0, 1, 0, 1, 0]' : 0.106515}
{'[4, 5, 4, 0, 4, 6, 1, 1, 3, 0, 0, 0, 1, 0, 1, 0, 1, 0]' : 0.106307}
{'[4, 5, 4, 0, 4, 6, 1, 1, 3, 0, 0, 0, 1, 0, 1, 0, 1, 0]' : 0.106548}
{'[4, 5, 4, 0, 4, 6, 1, 1, 3, 0, 0, 0, 1, 0, 1, 0, 1, 0]' : 0.106452}
{'[4, 5, 4, 0, 4, 6, 1, 1, 3, 0, 0, 0, 1, 0, 1, 0, 1, 0]' : 0.106303}
{'[4, 5, 4, 0, 4, 6, 1, 1, 3, 0, 0, 0, 1, 0, 1, 0, 1, 0]' : 0.106358}
{'[4, 5, 4, 0, 4, 6, 1, 1, 3, 0, 0, 0, 1, 0, 1, 0, 1, 0]' : 0.106394}
{'[4, 5, 4, 0, 4, 6, 1, 1, 3, 0, 0, 0, 1, 0, 1, 0, 1, 0]' : 0.106269}

out:
 ["{'[4, 5, 4, 0, 4, 6, 1, 1, 3, 0, 0, 0, 1, 0, 1, 0, 1, 0]' : 0.123327}", "{'[4, 5, 4, 0, 4, 6, 1, 1, 3, 0, 0, 0, 1, 0, 1, 0, 1, 0]' : 0.12317}", "{'[4, 5, 4, 0, 4, 6, 1, 1, 3, 0, 0, 0, 1, 0, 1, 0, 1, 0]' : 0.123076}", "{'[4, 5, 4, 0, 4, 6, 1, 1, 3, 0, 0, 0, 1, 0, 1, 0, 1, 0]' : 0.121953}", "{'[4, 5, 4, 0, 4, 6, 1, 1, 3, 0, 0, 0, 1, 0, 1, 0, 1, 0]' : 0.107544}", "{'[4, 5, 4, 0, 4, 6, 1, 1, 3, 0, 0, 0, 1, 0, 1, 0, 1, 0]' : 0.106434}", "{'[4, 5, 4, 0, 4, 6, 1, 1, 3, 0, 0, 0, 1, 0, 1, 0, 1, 0]' : 0.106272}", "{'[4, 5, 4, 0, 4, 6, 1, 1, 3, 0, 0, 0, 1, 0, 1, 0, 1, 0]' : 0.106534}", "{'[4, 5, 4, 0, 4, 6, 1, 1, 3, 0, 0, 0, 1, 0, 1, 0, 1, 0]' : 0.106312}", "{'[4, 5, 4, 0, 4, 6, 1, 1, 3, 0, 0, 0, 1, 0, 1, 0, 1, 0]' : 0.106258}", "{'[4, 5, 4, 0, 4, 6, 1, 1, 3, 0, 0, 0, 1, 0, 1, 0, 1, 0]' : 0.106145}", "{'[4, 5, 4, 0, 4, 6, 1, 1, 3, 0, 0, 0, 1, 0, 1, 0, 1, 0]' : 0.106461}", "{'[4, 5, 4, 0, 4, 6, 1, 1, 3, 0, 0, 0, 1, 0, 1, 0, 1, 0]' : 0.10645}", "{'[4, 5, 4, 0, 4, 6, 1, 1, 3, 0, 0, 0, 1, 0, 1, 0, 1, 0]' : 0.106197}", "{'[4, 5, 4, 0, 4, 6, 1, 1, 3, 0, 0, 0, 1, 0, 1, 0, 1, 0]' : 0.106599}", "{'[4, 5, 4, 0, 4, 6, 1, 1, 3, 0, 0, 0, 1, 0, 1, 0, 1, 0]' : 0.106537}", "{'[4, 5, 4, 0, 4, 6, 1, 1, 3, 0, 0, 0, 1, 0, 1, 0, 1, 0]' : 0.106672}", "{'[4, 5, 4, 0, 4, 6, 1, 1, 3, 0, 0, 0, 1, 0, 1, 0, 1, 0]' : 0.106391}", "{'[4, 5, 4, 0, 4, 6, 1, 1, 3, 0, 0, 0, 1, 0, 1, 0, 1, 0]' : 0.106438}", "{'[4, 5, 4, 0, 4, 6, 1, 1, 3, 0, 0, 0, 1, 0, 1, 0, 1, 0]' : 0.106378}", "{'[4, 5, 4, 0, 4, 6, 1, 1, 3, 0, 0, 0, 1, 0, 1, 0, 1, 0]' : 0.106365}", "{'[4, 5, 4, 0, 4, 6, 1, 1, 3, 0, 0, 0, 1, 0, 1, 0, 1, 0]' : 0.10648}", "{'[4, 5, 4, 0, 4, 6, 1, 1, 3, 0, 0, 0, 1, 0, 1, 0, 1, 0]' : 0.106515}", "{'[4, 5, 4, 0, 4, 6, 1, 1, 3, 0, 0, 0, 1, 0, 1, 0, 1, 0]' : 0.106307}", "{'[4, 5, 4, 0, 4, 6, 1, 1, 3, 0, 0, 0, 1, 0, 1, 0, 1, 0]' : 0.106548}", "{'[4, 5, 4, 0, 4, 6, 1, 1, 3, 0, 0, 0, 1, 0, 1, 0, 1, 0]' : 0.106452}", "{'[4, 5, 4, 0, 4, 6, 1, 1, 3, 0, 0, 0, 1, 0, 1, 0, 1, 0]' : 0.106303}", "{'[4, 5, 4, 0, 4, 6, 1, 1, 3, 0, 0, 0, 1, 0, 1, 0, 1, 0]' : 0.106358}", "{'[4, 5, 4, 0, 4, 6, 1, 1, 3, 0, 0, 0, 1, 0, 1, 0, 1, 0]' : 0.106394}", "{'[4, 5, 4, 0, 4, 6, 1, 1, 3, 0, 0, 0, 1, 0, 1, 0, 1, 0]' : 0.106269}"]
returning from 'run': {'[4, 5, 4, 0, 4, 6, 1, 1, 3, 0, 0, 0, 1, 0, 1, 0, 1, 0]': ([0.123327, 0.12317, 0.123076, 0.121953, 0.107544, 0.106434, 0.106272, 0.106534, 0.106312, 0.106258, 0.106145, 0.106461, 0.10645, 0.106197, 0.106599, 0.106537, 0.106672, 0.106391, 0.106438, 0.106378, 0.106365, 0.10648, 0.106515, 0.106307, 0.106548, 0.106452, 0.106303, 0.106358, 0.106394, 0.106269], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 5, 4, 0, 4, 6, 1, 1, 3, 0, 0, 0, 1, 0, 1, 0, 1, 0]': ([0.123327, 0.12317, 0.123076, 0.121953, 0.107544, 0.106434, 0.106272, 0.106534, 0.106312, 0.106258, 0.106145, 0.106461, 0.10645, 0.106197, 0.106599, 0.106537, 0.106672, 0.106391, 0.106438, 0.106378, 0.106365, 0.10648, 0.106515, 0.106307, 0.106548, 0.106452, 0.106303, 0.106358, 0.106394, 0.106269], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		247
        Multiplications: 	54
        Divisions: 		0
        Logical: 		0
        Reads: 			533
        Writes: 		129
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest46.exe __orio_perftest46.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest46.exe  
Program Test Output: 
{'[6, 3, 0, 6, 2, 4, 1, 1, 28, 0, 10, 17, 0, 1, 0, 1, 0, 0]' : 0.239356}
{'[6, 3, 0, 6, 2, 4, 1, 1, 28, 0, 10, 17, 0, 1, 0, 1, 0, 0]' : 0.239421}
{'[6, 3, 0, 6, 2, 4, 1, 1, 28, 0, 10, 17, 0, 1, 0, 1, 0, 0]' : 0.210138}
{'[6, 3, 0, 6, 2, 4, 1, 1, 28, 0, 10, 17, 0, 1, 0, 1, 0, 0]' : 0.199631}
{'[6, 3, 0, 6, 2, 4, 1, 1, 28, 0, 10, 17, 0, 1, 0, 1, 0, 0]' : 0.199548}
{'[6, 3, 0, 6, 2, 4, 1, 1, 28, 0, 10, 17, 0, 1, 0, 1, 0, 0]' : 0.199939}
{'[6, 3, 0, 6, 2, 4, 1, 1, 28, 0, 10, 17, 0, 1, 0, 1, 0, 0]' : 0.199766}
{'[6, 3, 0, 6, 2, 4, 1, 1, 28, 0, 10, 17, 0, 1, 0, 1, 0, 0]' : 0.199444}
{'[6, 3, 0, 6, 2, 4, 1, 1, 28, 0, 10, 17, 0, 1, 0, 1, 0, 0]' : 0.199783}
{'[6, 3, 0, 6, 2, 4, 1, 1, 28, 0, 10, 17, 0, 1, 0, 1, 0, 0]' : 0.199558}
{'[6, 3, 0, 6, 2, 4, 1, 1, 28, 0, 10, 17, 0, 1, 0, 1, 0, 0]' : 0.199584}
{'[6, 3, 0, 6, 2, 4, 1, 1, 28, 0, 10, 17, 0, 1, 0, 1, 0, 0]' : 0.199807}
{'[6, 3, 0, 6, 2, 4, 1, 1, 28, 0, 10, 17, 0, 1, 0, 1, 0, 0]' : 0.199641}
{'[6, 3, 0, 6, 2, 4, 1, 1, 28, 0, 10, 17, 0, 1, 0, 1, 0, 0]' : 0.199878}
{'[6, 3, 0, 6, 2, 4, 1, 1, 28, 0, 10, 17, 0, 1, 0, 1, 0, 0]' : 0.199485}
{'[6, 3, 0, 6, 2, 4, 1, 1, 28, 0, 10, 17, 0, 1, 0, 1, 0, 0]' : 0.199641}
{'[6, 3, 0, 6, 2, 4, 1, 1, 28, 0, 10, 17, 0, 1, 0, 1, 0, 0]' : 0.19951}
{'[6, 3, 0, 6, 2, 4, 1, 1, 28, 0, 10, 17, 0, 1, 0, 1, 0, 0]' : 0.200144}
{'[6, 3, 0, 6, 2, 4, 1, 1, 28, 0, 10, 17, 0, 1, 0, 1, 0, 0]' : 0.199997}
{'[6, 3, 0, 6, 2, 4, 1, 1, 28, 0, 10, 17, 0, 1, 0, 1, 0, 0]' : 0.199519}
{'[6, 3, 0, 6, 2, 4, 1, 1, 28, 0, 10, 17, 0, 1, 0, 1, 0, 0]' : 0.199954}
{'[6, 3, 0, 6, 2, 4, 1, 1, 28, 0, 10, 17, 0, 1, 0, 1, 0, 0]' : 0.199666}
{'[6, 3, 0, 6, 2, 4, 1, 1, 28, 0, 10, 17, 0, 1, 0, 1, 0, 0]' : 0.19976}
{'[6, 3, 0, 6, 2, 4, 1, 1, 28, 0, 10, 17, 0, 1, 0, 1, 0, 0]' : 0.199979}
{'[6, 3, 0, 6, 2, 4, 1, 1, 28, 0, 10, 17, 0, 1, 0, 1, 0, 0]' : 0.19951}
{'[6, 3, 0, 6, 2, 4, 1, 1, 28, 0, 10, 17, 0, 1, 0, 1, 0, 0]' : 0.199923}
{'[6, 3, 0, 6, 2, 4, 1, 1, 28, 0, 10, 17, 0, 1, 0, 1, 0, 0]' : 0.199757}
{'[6, 3, 0, 6, 2, 4, 1, 1, 28, 0, 10, 17, 0, 1, 0, 1, 0, 0]' : 0.199719}
{'[6, 3, 0, 6, 2, 4, 1, 1, 28, 0, 10, 17, 0, 1, 0, 1, 0, 0]' : 0.200217}
{'[6, 3, 0, 6, 2, 4, 1, 1, 28, 0, 10, 17, 0, 1, 0, 1, 0, 0]' : 0.19951}

out:
 ["{'[6, 3, 0, 6, 2, 4, 1, 1, 28, 0, 10, 17, 0, 1, 0, 1, 0, 0]' : 0.239356}", "{'[6, 3, 0, 6, 2, 4, 1, 1, 28, 0, 10, 17, 0, 1, 0, 1, 0, 0]' : 0.239421}", "{'[6, 3, 0, 6, 2, 4, 1, 1, 28, 0, 10, 17, 0, 1, 0, 1, 0, 0]' : 0.210138}", "{'[6, 3, 0, 6, 2, 4, 1, 1, 28, 0, 10, 17, 0, 1, 0, 1, 0, 0]' : 0.199631}", "{'[6, 3, 0, 6, 2, 4, 1, 1, 28, 0, 10, 17, 0, 1, 0, 1, 0, 0]' : 0.199548}", "{'[6, 3, 0, 6, 2, 4, 1, 1, 28, 0, 10, 17, 0, 1, 0, 1, 0, 0]' : 0.199939}", "{'[6, 3, 0, 6, 2, 4, 1, 1, 28, 0, 10, 17, 0, 1, 0, 1, 0, 0]' : 0.199766}", "{'[6, 3, 0, 6, 2, 4, 1, 1, 28, 0, 10, 17, 0, 1, 0, 1, 0, 0]' : 0.199444}", "{'[6, 3, 0, 6, 2, 4, 1, 1, 28, 0, 10, 17, 0, 1, 0, 1, 0, 0]' : 0.199783}", "{'[6, 3, 0, 6, 2, 4, 1, 1, 28, 0, 10, 17, 0, 1, 0, 1, 0, 0]' : 0.199558}", "{'[6, 3, 0, 6, 2, 4, 1, 1, 28, 0, 10, 17, 0, 1, 0, 1, 0, 0]' : 0.199584}", "{'[6, 3, 0, 6, 2, 4, 1, 1, 28, 0, 10, 17, 0, 1, 0, 1, 0, 0]' : 0.199807}", "{'[6, 3, 0, 6, 2, 4, 1, 1, 28, 0, 10, 17, 0, 1, 0, 1, 0, 0]' : 0.199641}", "{'[6, 3, 0, 6, 2, 4, 1, 1, 28, 0, 10, 17, 0, 1, 0, 1, 0, 0]' : 0.199878}", "{'[6, 3, 0, 6, 2, 4, 1, 1, 28, 0, 10, 17, 0, 1, 0, 1, 0, 0]' : 0.199485}", "{'[6, 3, 0, 6, 2, 4, 1, 1, 28, 0, 10, 17, 0, 1, 0, 1, 0, 0]' : 0.199641}", "{'[6, 3, 0, 6, 2, 4, 1, 1, 28, 0, 10, 17, 0, 1, 0, 1, 0, 0]' : 0.19951}", "{'[6, 3, 0, 6, 2, 4, 1, 1, 28, 0, 10, 17, 0, 1, 0, 1, 0, 0]' : 0.200144}", "{'[6, 3, 0, 6, 2, 4, 1, 1, 28, 0, 10, 17, 0, 1, 0, 1, 0, 0]' : 0.199997}", "{'[6, 3, 0, 6, 2, 4, 1, 1, 28, 0, 10, 17, 0, 1, 0, 1, 0, 0]' : 0.199519}", "{'[6, 3, 0, 6, 2, 4, 1, 1, 28, 0, 10, 17, 0, 1, 0, 1, 0, 0]' : 0.199954}", "{'[6, 3, 0, 6, 2, 4, 1, 1, 28, 0, 10, 17, 0, 1, 0, 1, 0, 0]' : 0.199666}", "{'[6, 3, 0, 6, 2, 4, 1, 1, 28, 0, 10, 17, 0, 1, 0, 1, 0, 0]' : 0.19976}", "{'[6, 3, 0, 6, 2, 4, 1, 1, 28, 0, 10, 17, 0, 1, 0, 1, 0, 0]' : 0.199979}", "{'[6, 3, 0, 6, 2, 4, 1, 1, 28, 0, 10, 17, 0, 1, 0, 1, 0, 0]' : 0.19951}", "{'[6, 3, 0, 6, 2, 4, 1, 1, 28, 0, 10, 17, 0, 1, 0, 1, 0, 0]' : 0.199923}", "{'[6, 3, 0, 6, 2, 4, 1, 1, 28, 0, 10, 17, 0, 1, 0, 1, 0, 0]' : 0.199757}", "{'[6, 3, 0, 6, 2, 4, 1, 1, 28, 0, 10, 17, 0, 1, 0, 1, 0, 0]' : 0.199719}", "{'[6, 3, 0, 6, 2, 4, 1, 1, 28, 0, 10, 17, 0, 1, 0, 1, 0, 0]' : 0.200217}", "{'[6, 3, 0, 6, 2, 4, 1, 1, 28, 0, 10, 17, 0, 1, 0, 1, 0, 0]' : 0.19951}"]
returning from 'run': {'[6, 3, 0, 6, 2, 4, 1, 1, 28, 0, 10, 17, 0, 1, 0, 1, 0, 0]': ([0.239356, 0.239421, 0.210138, 0.199631, 0.199548, 0.199939, 0.199766, 0.199444, 0.199783, 0.199558, 0.199584, 0.199807, 0.199641, 0.199878, 0.199485, 0.199641, 0.19951, 0.200144, 0.199997, 0.199519, 0.199954, 0.199666, 0.19976, 0.199979, 0.19951, 0.199923, 0.199757, 0.199719, 0.200217, 0.19951], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 3, 0, 6, 2, 4, 1, 1, 28, 0, 10, 17, 0, 1, 0, 1, 0, 0]': ([0.239356, 0.239421, 0.210138, 0.199631, 0.199548, 0.199939, 0.199766, 0.199444, 0.199783, 0.199558, 0.199584, 0.199807, 0.199641, 0.199878, 0.199485, 0.199641, 0.19951, 0.200144, 0.199997, 0.199519, 0.199954, 0.199666, 0.19976, 0.199979, 0.19951, 0.199923, 0.199757, 0.199719, 0.200217, 0.19951], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Complete design, with measurements:
     T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
85      5    4    3    6    4    2       0       0   29   0  29   4    1    1
155     3    6    0    3    4    5       0       0   13   0  26  25    1    0
186     2    0    0    1    2    0       0       0    0  22  15   0    2    0
201     1    2    4    6    0    4       0       0   27   0   0  28    0    1
246     6    0    5    0    3    4       0       0   14  17   4   0    0    1
265     2    3    5    4    0    0       1       0    3  28  29   0    0    0
322     0    0    3    5    2    2       1       0   11  27   0  24    0    0
510     1    6    2    4    5    0       0       1    5   0   4  14    2    0
698     3    3    4    6    1    6       0       1    5   3   0   9    2    0
738     6    2    6    0    5    0       0       0   28   5   0  26    0    0
884     4    2    1    0    5    6       1       0   27   2  29   0    2    0
1104    1    5    2    3    0    5       1       1   27  29   0  29    1    1
1150    0    0    3    1    0    6       1       1   11   0  11  13    1    0
1204    0    0    3    4    1    5       0       1    1   1   0   2    0    1
1271    2    3    1    0    0    5       1       0    0   4   5   0    1    1
1560    6    6    2    0    6    5       0       1    0   0  27  17    2    0
1649    6    6    6    6    0    5       0       0   24   0  15   1    0    0
1675    0    3    6    1    6    5       1       0    0   6   0   3    0    0
1679    1    0    5    6    1    0       1       0    0   0  24  29    0    0
2131    0    6    6    5    6    0       0       1   11   3  28   0    1    1
2146    1    3    3    4    1    1       0       1   28  18  12   0    0    0
2491    2    3    6    0    2    4       0       1    5   0   5  14    0    1
2553    6    0    6    5    4    4       1       1   21   0  28   0    2    0
2676    0    6    1    4    6    6       0       0   25  17   1   0    0    0
2967    0    6    4    6    6    0       1       1   15   4   7   0    0    0
3208    0    1    5    3    0    0       1       0   28   0   5   6    1    0
3589    2    5    0    6    5    2       0       1   19  22   0   6    1    0
3597    6    0    0    0    5    5       0       0    6  14   0  22    0    2
3705    0    6    0    4    0    0       1       0    6  10   0   3    0    1
3794    3    5    0    1    5    0       0       1   25   5   1   0    0    0
3818    1    0    6    0    6    6       1       1   29   0  27  18    0    1
3832    4    3    4    0    4    5       1       0   10  23   0   4    0    0
3959    0    4    0    0    2    2       0       1    2   0  25   1    0    2
4118    1    0    3    0    5    1       0       1    4   6   5   0    1    0
4300    2    0    4    0    1    4       1       1   29   0   3   0    2    0
4320    6    0    0    6    6    6       1       0    3  12   2   0    0    0
4419    0    3    0    1    1    6       0       0    1   0   3  26    0    0
4478    4    5    4    0    4    6       1       1    3   0   0   0    1    0
4537    6    3    0    6    2    4       1       1   28   0  10  17    0    1
     RT_K SCR VEC1 VEC2  cost_mean
85      0   0    1    1 0.11489340
155     1   1    1    1 0.09271934
186     0   0    0    1 0.32343607
201     1   0    0    1 0.18536940
246     1   1    0    0 0.09266160
265     0   1    0    0 0.21499923
322     2   1    1    0 0.20073663
510     0   0    0    0 0.28563560
698     0   1    1    0 0.17607893
738     1   0    1    0 0.12539607
884     0   1    1    1 0.30434110
1104    0   0    1    1 0.11550983
1150    0   0    0    1 0.09365440
1204    0   0    1    1 0.17482983
1271    0   0    1    1 0.11257920
1560    0   1    1    0 0.22644610
1649    2   1    0    1 0.15194627
1675    2   1    1    0 0.13778343
1679    0   1    1    0 0.17341543
2131    0   0    0    0 0.09453091
2146    1   0    1    1 0.19602520
2491    0   1    0    1 0.18835047
2553    0   0    0    1 0.25405313
2676    0   1    0    0 0.12664767
2967    1   1    0    1 0.20460880
3208    1   1    1    1 0.09551662
3589    1   0    0    0 0.11201720
3597    0   1    0    1 0.12406297
3705    1   0    1    1 0.12631170
3794    0   1    1    1 0.09539361
3818    1   0    1    0 0.28321593
3832    0   0    0    1 0.15779140
3959    0   0    0    0 0.23783573
4118    1   1    0    1 0.10086336
4300    0   1    1    0 0.14859667
4320    1   0    1    1 0.19011207
4419    2   0    0    1 0.16649700
4478    1   0    1    0 0.10863797
4537    0   1    0    0 0.20272617

Heteroscedasticity Test p-value: 0.773584516985
Regression Step:                Df  Sum Sq Mean Sq F value   Pr(>F)    
T1_I             1 0.00012 0.00012   0.071 0.797095    
T1_J             1 0.00456 0.00456   2.644 0.148000    
T1_K             1 0.00085 0.00085   0.492 0.505781    
T2_I             1 0.00077 0.00077   0.447 0.525026    
T2_J             1 0.00275 0.00275   1.592 0.247415    
T2_K             1 0.00022 0.00022   0.128 0.731547    
ACOPY_x          1 0.00100 0.00100   0.578 0.471878    
ACOPY_y          1 0.00280 0.00280   1.622 0.243418    
U1_I             1 0.00146 0.00146   0.847 0.387895    
U_I              1 0.00019 0.00019   0.111 0.748398    
U_J              1 0.02421 0.02421  14.024 0.007217 ** 
U_K              1 0.00024 0.00024   0.138 0.720882    
RT_I             1 0.00235 0.00235   1.360 0.281794    
RT_J             1 0.00042 0.00042   0.244 0.636275    
RT_K             1 0.00004 0.00004   0.024 0.880988    
SCR              1 0.00109 0.00109   0.632 0.452859    
VEC1             1 0.00301 0.00301   1.746 0.227925    
VEC2             1 0.00087 0.00087   0.507 0.499570    
I(1/(1 + T1_I))  1 0.00230 0.00230   1.334 0.285967    
I(1/(1 + T1_J))  1 0.00464 0.00464   2.686 0.145234    
I(1/(1 + T1_K))  1 0.00056 0.00056   0.322 0.587855    
I(1/(1 + T2_I))  1 0.00015 0.00015   0.088 0.775071    
I(1/(1 + T2_J))  1 0.00345 0.00345   1.998 0.200423    
I(1/(1 + T2_K))  1 0.01605 0.01605   9.299 0.018598 *  
I(1/(1 + U1_I))  1 0.00712 0.00712   4.124 0.081816 .  
I(1/(1 + U_I))   1 0.00621 0.00621   3.599 0.099636 .  
I(1/(1 + U_J))   1 0.00158 0.00158   0.915 0.370759    
I(1/(1 + U_K))   1 0.00132 0.00132   0.762 0.411593    
I(1/(1 + RT_I))  1 0.05243 0.05243  30.374 0.000896 ***
I(1/(1 + RT_J))  1 0.00002 0.00002   0.013 0.911886    
I(1/(1 + RT_K))  1 0.00005 0.00005   0.031 0.865089    
Residuals        7 0.01208 0.00173                     
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Predicting Best
Generating valid search space of size 4600 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Valid coordinates: 920
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Valid coordinates: 1840
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Tested coordinates: 110000
Valid coordinates: 2760
Tested coordinates: 120000
Tested coordinates: 130000
Tested coordinates: 140000
Tested coordinates: 150000
Valid coordinates: 3680
Tested coordinates: 160000
Tested coordinates: 170000
Tested coordinates: 180000
Valid coordinates: 4600
Valid/Tested configurations: 4600/189334
Generated Search Space:
NULL
Identical predictions (tol = 1e-5): 1
Getting Best from Design
Response: ['cost_mean']
Design Names:  [1] "T1_I"      "T1_J"      "T1_K"      "T2_I"      "T2_J"      "T2_K"     
 [7] "ACOPY_x"   "ACOPY_y"   "U1_I"      "U_I"       "U_J"       "U_K"      
[13] "RT_I"      "RT_J"      "RT_K"      "SCR"       "VEC1"      "VEC2"     
[19] "cost_mean"

Design Response:       cost_mean
85   0.11489340
155  0.09271934
186  0.32343607
201  0.18536940
246  0.09266160
265  0.21499923
322  0.20073663
510  0.28563560
698  0.17607893
738  0.12539607
884  0.30434110
1104 0.11550983
1150 0.09365440
1204 0.17482983
1271 0.11257920
1560 0.22644610
1649 0.15194627
1675 0.13778343
1679 0.17341543
2131 0.09453091
2146 0.19602520
2491 0.18835047
2553 0.25405313
2676 0.12664767
2967 0.20460880
3208 0.09551662
3589 0.11201720
3597 0.12406297
3705 0.12631170
3794 0.09539361
3818 0.28321593
3832 0.15779140
3959 0.23783573
4118 0.10086336
4300 0.14859667
4320 0.19011207
4419 0.16649700
4478 0.10863797
4537 0.20272617

Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Getting fixed variables
Pruning Model
Best Predicted:      T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
1083    6    5    5    4    0    3       0       0    6   0   2  24    1    0
     RT_K SCR VEC1 VEC2
1083    0   0    1    0

Best From Design: [6, 0, 5, 0, 3, 4, 0, 0, 14, 17, 4, 0, 0, 1, 1, 1, 0, 0]
Pruned Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Fixed Factors: {'U_J': 2}
Length of requested configs: 1
Result was on Database, Returning Now
Starting Point (-O3):
0.16283083333333334
Predicted Best Point:
[6, 5, 5, 4, 0, 3, 0, 0, 6, 0, 2, 24, 1, 0, 0, 0, 1, 0]
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = kkk
Code stats:
        Number of loops: 	17
        Max loop nest depth: 	4
        Additions: 		1766
        Multiplications: 	540
        Divisions: 		0
        Logical: 		0
        Reads: 			2849
        Writes: 		317
        Comparisons:		17
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest47.exe __orio_perftest47.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest47.exe  
Program Test Output: 
{'[6, 5, 5, 4, 0, 3, 0, 0, 6, 0, 2, 24, 1, 0, 0, 0, 1, 0]' : 0.112004}
{'[6, 5, 5, 4, 0, 3, 0, 0, 6, 0, 2, 24, 1, 0, 0, 0, 1, 0]' : 0.112304}
{'[6, 5, 5, 4, 0, 3, 0, 0, 6, 0, 2, 24, 1, 0, 0, 0, 1, 0]' : 0.112046}
{'[6, 5, 5, 4, 0, 3, 0, 0, 6, 0, 2, 24, 1, 0, 0, 0, 1, 0]' : 0.111874}
{'[6, 5, 5, 4, 0, 3, 0, 0, 6, 0, 2, 24, 1, 0, 0, 0, 1, 0]' : 0.112035}
{'[6, 5, 5, 4, 0, 3, 0, 0, 6, 0, 2, 24, 1, 0, 0, 0, 1, 0]' : 0.112163}
{'[6, 5, 5, 4, 0, 3, 0, 0, 6, 0, 2, 24, 1, 0, 0, 0, 1, 0]' : 0.11207}
{'[6, 5, 5, 4, 0, 3, 0, 0, 6, 0, 2, 24, 1, 0, 0, 0, 1, 0]' : 0.112418}
{'[6, 5, 5, 4, 0, 3, 0, 0, 6, 0, 2, 24, 1, 0, 0, 0, 1, 0]' : 0.112148}
{'[6, 5, 5, 4, 0, 3, 0, 0, 6, 0, 2, 24, 1, 0, 0, 0, 1, 0]' : 0.112114}
{'[6, 5, 5, 4, 0, 3, 0, 0, 6, 0, 2, 24, 1, 0, 0, 0, 1, 0]' : 0.111735}
{'[6, 5, 5, 4, 0, 3, 0, 0, 6, 0, 2, 24, 1, 0, 0, 0, 1, 0]' : 0.112134}
{'[6, 5, 5, 4, 0, 3, 0, 0, 6, 0, 2, 24, 1, 0, 0, 0, 1, 0]' : 0.112008}
{'[6, 5, 5, 4, 0, 3, 0, 0, 6, 0, 2, 24, 1, 0, 0, 0, 1, 0]' : 0.111932}
{'[6, 5, 5, 4, 0, 3, 0, 0, 6, 0, 2, 24, 1, 0, 0, 0, 1, 0]' : 0.111815}
{'[6, 5, 5, 4, 0, 3, 0, 0, 6, 0, 2, 24, 1, 0, 0, 0, 1, 0]' : 0.111844}
{'[6, 5, 5, 4, 0, 3, 0, 0, 6, 0, 2, 24, 1, 0, 0, 0, 1, 0]' : 0.111954}
{'[6, 5, 5, 4, 0, 3, 0, 0, 6, 0, 2, 24, 1, 0, 0, 0, 1, 0]' : 0.112083}
{'[6, 5, 5, 4, 0, 3, 0, 0, 6, 0, 2, 24, 1, 0, 0, 0, 1, 0]' : 0.112222}
{'[6, 5, 5, 4, 0, 3, 0, 0, 6, 0, 2, 24, 1, 0, 0, 0, 1, 0]' : 0.111918}
{'[6, 5, 5, 4, 0, 3, 0, 0, 6, 0, 2, 24, 1, 0, 0, 0, 1, 0]' : 0.112155}
{'[6, 5, 5, 4, 0, 3, 0, 0, 6, 0, 2, 24, 1, 0, 0, 0, 1, 0]' : 0.111878}
{'[6, 5, 5, 4, 0, 3, 0, 0, 6, 0, 2, 24, 1, 0, 0, 0, 1, 0]' : 0.111807}
{'[6, 5, 5, 4, 0, 3, 0, 0, 6, 0, 2, 24, 1, 0, 0, 0, 1, 0]' : 0.111882}
{'[6, 5, 5, 4, 0, 3, 0, 0, 6, 0, 2, 24, 1, 0, 0, 0, 1, 0]' : 0.111986}
{'[6, 5, 5, 4, 0, 3, 0, 0, 6, 0, 2, 24, 1, 0, 0, 0, 1, 0]' : 0.111889}
{'[6, 5, 5, 4, 0, 3, 0, 0, 6, 0, 2, 24, 1, 0, 0, 0, 1, 0]' : 0.111751}
{'[6, 5, 5, 4, 0, 3, 0, 0, 6, 0, 2, 24, 1, 0, 0, 0, 1, 0]' : 0.112105}
{'[6, 5, 5, 4, 0, 3, 0, 0, 6, 0, 2, 24, 1, 0, 0, 0, 1, 0]' : 0.11249}
{'[6, 5, 5, 4, 0, 3, 0, 0, 6, 0, 2, 24, 1, 0, 0, 0, 1, 0]' : 0.112394}

out:
 ["{'[6, 5, 5, 4, 0, 3, 0, 0, 6, 0, 2, 24, 1, 0, 0, 0, 1, 0]' : 0.112004}", "{'[6, 5, 5, 4, 0, 3, 0, 0, 6, 0, 2, 24, 1, 0, 0, 0, 1, 0]' : 0.112304}", "{'[6, 5, 5, 4, 0, 3, 0, 0, 6, 0, 2, 24, 1, 0, 0, 0, 1, 0]' : 0.112046}", "{'[6, 5, 5, 4, 0, 3, 0, 0, 6, 0, 2, 24, 1, 0, 0, 0, 1, 0]' : 0.111874}", "{'[6, 5, 5, 4, 0, 3, 0, 0, 6, 0, 2, 24, 1, 0, 0, 0, 1, 0]' : 0.112035}", "{'[6, 5, 5, 4, 0, 3, 0, 0, 6, 0, 2, 24, 1, 0, 0, 0, 1, 0]' : 0.112163}", "{'[6, 5, 5, 4, 0, 3, 0, 0, 6, 0, 2, 24, 1, 0, 0, 0, 1, 0]' : 0.11207}", "{'[6, 5, 5, 4, 0, 3, 0, 0, 6, 0, 2, 24, 1, 0, 0, 0, 1, 0]' : 0.112418}", "{'[6, 5, 5, 4, 0, 3, 0, 0, 6, 0, 2, 24, 1, 0, 0, 0, 1, 0]' : 0.112148}", "{'[6, 5, 5, 4, 0, 3, 0, 0, 6, 0, 2, 24, 1, 0, 0, 0, 1, 0]' : 0.112114}", "{'[6, 5, 5, 4, 0, 3, 0, 0, 6, 0, 2, 24, 1, 0, 0, 0, 1, 0]' : 0.111735}", "{'[6, 5, 5, 4, 0, 3, 0, 0, 6, 0, 2, 24, 1, 0, 0, 0, 1, 0]' : 0.112134}", "{'[6, 5, 5, 4, 0, 3, 0, 0, 6, 0, 2, 24, 1, 0, 0, 0, 1, 0]' : 0.112008}", "{'[6, 5, 5, 4, 0, 3, 0, 0, 6, 0, 2, 24, 1, 0, 0, 0, 1, 0]' : 0.111932}", "{'[6, 5, 5, 4, 0, 3, 0, 0, 6, 0, 2, 24, 1, 0, 0, 0, 1, 0]' : 0.111815}", "{'[6, 5, 5, 4, 0, 3, 0, 0, 6, 0, 2, 24, 1, 0, 0, 0, 1, 0]' : 0.111844}", "{'[6, 5, 5, 4, 0, 3, 0, 0, 6, 0, 2, 24, 1, 0, 0, 0, 1, 0]' : 0.111954}", "{'[6, 5, 5, 4, 0, 3, 0, 0, 6, 0, 2, 24, 1, 0, 0, 0, 1, 0]' : 0.112083}", "{'[6, 5, 5, 4, 0, 3, 0, 0, 6, 0, 2, 24, 1, 0, 0, 0, 1, 0]' : 0.112222}", "{'[6, 5, 5, 4, 0, 3, 0, 0, 6, 0, 2, 24, 1, 0, 0, 0, 1, 0]' : 0.111918}", "{'[6, 5, 5, 4, 0, 3, 0, 0, 6, 0, 2, 24, 1, 0, 0, 0, 1, 0]' : 0.112155}", "{'[6, 5, 5, 4, 0, 3, 0, 0, 6, 0, 2, 24, 1, 0, 0, 0, 1, 0]' : 0.111878}", "{'[6, 5, 5, 4, 0, 3, 0, 0, 6, 0, 2, 24, 1, 0, 0, 0, 1, 0]' : 0.111807}", "{'[6, 5, 5, 4, 0, 3, 0, 0, 6, 0, 2, 24, 1, 0, 0, 0, 1, 0]' : 0.111882}", "{'[6, 5, 5, 4, 0, 3, 0, 0, 6, 0, 2, 24, 1, 0, 0, 0, 1, 0]' : 0.111986}", "{'[6, 5, 5, 4, 0, 3, 0, 0, 6, 0, 2, 24, 1, 0, 0, 0, 1, 0]' : 0.111889}", "{'[6, 5, 5, 4, 0, 3, 0, 0, 6, 0, 2, 24, 1, 0, 0, 0, 1, 0]' : 0.111751}", "{'[6, 5, 5, 4, 0, 3, 0, 0, 6, 0, 2, 24, 1, 0, 0, 0, 1, 0]' : 0.112105}", "{'[6, 5, 5, 4, 0, 3, 0, 0, 6, 0, 2, 24, 1, 0, 0, 0, 1, 0]' : 0.11249}", "{'[6, 5, 5, 4, 0, 3, 0, 0, 6, 0, 2, 24, 1, 0, 0, 0, 1, 0]' : 0.112394}"]
returning from 'run': {'[6, 5, 5, 4, 0, 3, 0, 0, 6, 0, 2, 24, 1, 0, 0, 0, 1, 0]': ([0.112004, 0.112304, 0.112046, 0.111874, 0.112035, 0.112163, 0.11207, 0.112418, 0.112148, 0.112114, 0.111735, 0.112134, 0.112008, 0.111932, 0.111815, 0.111844, 0.111954, 0.112083, 0.112222, 0.111918, 0.112155, 0.111878, 0.111807, 0.111882, 0.111986, 0.111889, 0.111751, 0.112105, 0.11249, 0.112394], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 5, 5, 4, 0, 3, 0, 0, 6, 0, 2, 24, 1, 0, 0, 0, 1, 0]': ([0.112004, 0.112304, 0.112046, 0.111874, 0.112035, 0.112163, 0.11207, 0.112418, 0.112148, 0.112114, 0.111735, 0.112134, 0.112008, 0.111932, 0.111815, 0.111844, 0.111954, 0.112083, 0.112222, 0.111918, 0.112155, 0.111878, 0.111807, 0.111882, 0.111986, 0.111889, 0.111751, 0.112105, 0.11249, 0.112394], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Design Best Point:
[6, 0, 5, 0, 3, 4, 0, 0, 14, 17, 4, 0, 0, 1, 1, 1, 0, 0]
Length of requested configs: 1
Result was on Database, Returning Now
Fixed Factors: {'U_J': 2}
Slowdown (Design Best): 0.5690666693961525
Slowdown (Predicted Best): 0.6880674728885295
Budget: 39/180
Updating Global Best: 0.09266160000000001
Current Best Point: 
[6, 0, 5, 0, 3, 4, 0, 0, 14, 17, 4, 0, 0, 1, 1, 1, 0, 0]
Step 1
Generating valid search space of size 4300 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Tested coordinates: 40000
Tested coordinates: 50000
Valid coordinates: 860
Tested coordinates: 60000
Tested coordinates: 70000
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Valid coordinates: 1720
Tested coordinates: 110000
Tested coordinates: 120000
Tested coordinates: 130000
Tested coordinates: 140000
Tested coordinates: 150000
Valid coordinates: 2580
Tested coordinates: 160000
Tested coordinates: 170000
Tested coordinates: 180000
Tested coordinates: 190000
Tested coordinates: 200000
Valid coordinates: 3440
Tested coordinates: 210000
Tested coordinates: 220000
Tested coordinates: 230000
Tested coordinates: 240000
Tested coordinates: 250000
Tested coordinates: 260000
Valid coordinates: 4300
Valid/Tested configurations: 4300/261339
Generated Search Space:
NULL
Clean Info:
Removed Factors: character(0)

Removed Inverse Factors: [1] "ACOPY_x" "ACOPY_y" "SCR"     "VEC1"    "VEC2"   

New Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
New Inverse Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_K', 'RT_I', 'RT_J', 'RT_K']
New Fixed Factors: {'U_J': 2}
Full Model:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Fixed Factors: {'U_J': 2}
Computing D-Optimal Design
Computing D-Optimal Design with 43 experiments
Design Formula:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Starting "optFederov" run
Using Search Space:
NULL
Data Dimensions: [1] 4300   17

     T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_K RT_I RT_J RT_K
70      5    6    0    5    0    6       1       0    0   0   7    0    2    0
159     2    3    2    0    0    5       1       0   22  28   0    0    2    0
192     6    1    6    0    3    6       0       1    1   0  27    0    1    1
469     0    2    0    2    0    6       1       1   15  16   0    2    0    0
776     1    6    0    6    6    6       0       0    2  10   0    0    0    0
792     2    5    0    2    4    0       0       0   29   0  29    0    1    1
982     5    6    3    0    4    2       0       0   14  29   0    0    0    0
1035    1    0    5    2    2    0       1       1   15   0   0    2    0    0
1053    1    3    0    0    3    2       0       0   11   0   3    0    2    0
1175    5    0    0    0    0    5       0       1   25  11   0    0    1    0
1308    6    6    6    5    6    5       1       0   18   6   0    0    2    0
1450    2    5    4    6    6    6       1       1   26   0   6    0    0    0
1500    0    0    2    6    0    1       0       0   14   0  21    0    0    2
1670    2    2    0    6    6    6       0       1    3  27   0    0    0    2
1709    2    1    3    6    4    2       0       0    0   0  26    2    0    0
1839    0    1    2    2    4    3       0       0   24   0   0    0    0    0
2130    2    0    2    3    2    3       1       0   27   0  10    0    0    2
2155    2    1    6    6    0    4       0       1   14   7   0    0    0    1
2254    5    2    4    5    4    3       0       1   29  29   0    1    1    0
2444    4    4    2    6    0    0       0       0    2   3   0    1    1    0
2523    3    0    1    0    6    3       1       1    5   0  29    1    0    0
2538    0    0    0    3    4    4       1       0    2  27   0    0    0    1
2719    0    3    1    0    6    0       1       0   21   0   2    2    0    0
2797    2    6    5    2    4    3       0       1    5   0   0    0    1    1
2835    2    2    0    6    1    2       1       1   28   0   0    0    2    0
2887    6    0    6    0    6    0       1       0   29   6   0    1    0    0
3055    6    5    1    4    0    2       1       1    2   0  27    2    0    0
3075    0    4    1    0    2    6       0       1   21   2   0    1    0    1
3101    0    0    6    6    6    0       0       1   10   0  19    0    1    0
3217    1    5    2    1    6    1       1       1    0   1   0    0    0    2
3302    5    3    5    5    5    6       1       0   17   0   0    1    1    0
3418    6    5    5    5    0    0       0       1    1  21   0    0    1    1
3502    3    3    1    2    3    6       1       1   13   0   7    1    0    1
3557    6    2    0    4    4    1       1       0    3   0   6    0    0    2
3591    6    1    1    6    1    0       1       0    9   1   0    0    0    1
3594    5    2    5    6    0    6       0       0   29   0   2    1    0    1
3605    2    0    5    4    2    0       1       1    9   0  27    1    0    0
3728    0    0    0    6    3    6       0       0   10   0  27    1    1    0
3733    3    1    2    2    0    1       0       0   22   0   5    0    2    0
3977    0    6    6    2    0    5       1       0   16  18   0    0    1    0
3994    1    3    5    5    2    0       1       0   27   0  27    0    0    2
4145    1    1    2    1    6    3       1       0   15   0  26    0    1    1
4246    3    3    6    0    0    0       0       0    0  28   0    1    0    1
     SCR VEC1 VEC2
70     0    0    1
159    1    1    0
192    0    1    0
469    1    1    1
776    0    1    1
792    1    1    0
982    1    0    0
1035   0    0    1
1053   0    0    1
1175   1    0    1
1308   1    0    1
1450   1    1    1
1500   1    0    1
1670   1    1    0
1709   1    1    1
1839   0    0    0
2130   0    1    0
2155   0    0    0
2254   0    0    0
2444   0    1    0
2523   1    1    1
2538   1    1    1
2719   1    0    0
2797   0    1    1
2835   0    1    0
2887   0    1    1
3055   0    0    0
3075   0    1    1
3101   0    1    1
3217   1    0    0
3302   1    1    1
3418   1    1    1
3502   1    0    0
3557   0    1    1
3591   1    0    0
3594   1    1    0
3605   1    1    1
3728   1    0    1
3733   0    1    1
3977   1    0    0
3994   0    0    1
4145   0    0    1
4246   1    0    1

D-Efficiency Approximation: [1] 0.428

Measuring design of size 43
Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	5
        Additions: 		235
        Multiplications: 	82
        Divisions: 		0
        Logical: 		0
        Reads: 			525
        Writes: 		68
        Comparisons:		10
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest48.exe __orio_perftest48.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest48.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest48.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest48.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest48.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	45
        Max loop nest depth: 	5
        Additions: 		4211
        Multiplications: 	1980
        Divisions: 		0
        Logical: 		0
        Reads: 			7855
        Writes: 		1263
        Comparisons:		45
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest49.exe __orio_perftest49.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest49.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest49.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest49.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest49.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		150
        Multiplications: 	40
        Divisions: 		0
        Logical: 		0
        Reads: 			334
        Writes: 		57
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest50.exe __orio_perftest50.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest50.exe  
Program Test Output: 
{'[6, 1, 6, 0, 3, 6, 0, 1, 1, 0, 2, 27, 0, 1, 1, 0, 1, 0]' : 0.29392}
{'[6, 1, 6, 0, 3, 6, 0, 1, 1, 0, 2, 27, 0, 1, 1, 0, 1, 0]' : 0.266841}
{'[6, 1, 6, 0, 3, 6, 0, 1, 1, 0, 2, 27, 0, 1, 1, 0, 1, 0]' : 0.245529}
{'[6, 1, 6, 0, 3, 6, 0, 1, 1, 0, 2, 27, 0, 1, 1, 0, 1, 0]' : 0.245707}
{'[6, 1, 6, 0, 3, 6, 0, 1, 1, 0, 2, 27, 0, 1, 1, 0, 1, 0]' : 0.245737}
{'[6, 1, 6, 0, 3, 6, 0, 1, 1, 0, 2, 27, 0, 1, 1, 0, 1, 0]' : 0.245785}
{'[6, 1, 6, 0, 3, 6, 0, 1, 1, 0, 2, 27, 0, 1, 1, 0, 1, 0]' : 0.245808}
{'[6, 1, 6, 0, 3, 6, 0, 1, 1, 0, 2, 27, 0, 1, 1, 0, 1, 0]' : 0.246096}
{'[6, 1, 6, 0, 3, 6, 0, 1, 1, 0, 2, 27, 0, 1, 1, 0, 1, 0]' : 0.245749}
{'[6, 1, 6, 0, 3, 6, 0, 1, 1, 0, 2, 27, 0, 1, 1, 0, 1, 0]' : 0.245927}
{'[6, 1, 6, 0, 3, 6, 0, 1, 1, 0, 2, 27, 0, 1, 1, 0, 1, 0]' : 0.245951}
{'[6, 1, 6, 0, 3, 6, 0, 1, 1, 0, 2, 27, 0, 1, 1, 0, 1, 0]' : 0.245816}
{'[6, 1, 6, 0, 3, 6, 0, 1, 1, 0, 2, 27, 0, 1, 1, 0, 1, 0]' : 0.245844}
{'[6, 1, 6, 0, 3, 6, 0, 1, 1, 0, 2, 27, 0, 1, 1, 0, 1, 0]' : 0.245908}
{'[6, 1, 6, 0, 3, 6, 0, 1, 1, 0, 2, 27, 0, 1, 1, 0, 1, 0]' : 0.245766}
{'[6, 1, 6, 0, 3, 6, 0, 1, 1, 0, 2, 27, 0, 1, 1, 0, 1, 0]' : 0.246305}
{'[6, 1, 6, 0, 3, 6, 0, 1, 1, 0, 2, 27, 0, 1, 1, 0, 1, 0]' : 0.246405}
{'[6, 1, 6, 0, 3, 6, 0, 1, 1, 0, 2, 27, 0, 1, 1, 0, 1, 0]' : 0.246222}
{'[6, 1, 6, 0, 3, 6, 0, 1, 1, 0, 2, 27, 0, 1, 1, 0, 1, 0]' : 0.246191}
{'[6, 1, 6, 0, 3, 6, 0, 1, 1, 0, 2, 27, 0, 1, 1, 0, 1, 0]' : 0.246655}
{'[6, 1, 6, 0, 3, 6, 0, 1, 1, 0, 2, 27, 0, 1, 1, 0, 1, 0]' : 0.246712}
{'[6, 1, 6, 0, 3, 6, 0, 1, 1, 0, 2, 27, 0, 1, 1, 0, 1, 0]' : 0.246192}
{'[6, 1, 6, 0, 3, 6, 0, 1, 1, 0, 2, 27, 0, 1, 1, 0, 1, 0]' : 0.246167}
{'[6, 1, 6, 0, 3, 6, 0, 1, 1, 0, 2, 27, 0, 1, 1, 0, 1, 0]' : 0.246444}
{'[6, 1, 6, 0, 3, 6, 0, 1, 1, 0, 2, 27, 0, 1, 1, 0, 1, 0]' : 0.246405}
{'[6, 1, 6, 0, 3, 6, 0, 1, 1, 0, 2, 27, 0, 1, 1, 0, 1, 0]' : 0.246477}
{'[6, 1, 6, 0, 3, 6, 0, 1, 1, 0, 2, 27, 0, 1, 1, 0, 1, 0]' : 0.246484}
{'[6, 1, 6, 0, 3, 6, 0, 1, 1, 0, 2, 27, 0, 1, 1, 0, 1, 0]' : 0.246187}
{'[6, 1, 6, 0, 3, 6, 0, 1, 1, 0, 2, 27, 0, 1, 1, 0, 1, 0]' : 0.24687}
{'[6, 1, 6, 0, 3, 6, 0, 1, 1, 0, 2, 27, 0, 1, 1, 0, 1, 0]' : 0.246311}

out:
 ["{'[6, 1, 6, 0, 3, 6, 0, 1, 1, 0, 2, 27, 0, 1, 1, 0, 1, 0]' : 0.29392}", "{'[6, 1, 6, 0, 3, 6, 0, 1, 1, 0, 2, 27, 0, 1, 1, 0, 1, 0]' : 0.266841}", "{'[6, 1, 6, 0, 3, 6, 0, 1, 1, 0, 2, 27, 0, 1, 1, 0, 1, 0]' : 0.245529}", "{'[6, 1, 6, 0, 3, 6, 0, 1, 1, 0, 2, 27, 0, 1, 1, 0, 1, 0]' : 0.245707}", "{'[6, 1, 6, 0, 3, 6, 0, 1, 1, 0, 2, 27, 0, 1, 1, 0, 1, 0]' : 0.245737}", "{'[6, 1, 6, 0, 3, 6, 0, 1, 1, 0, 2, 27, 0, 1, 1, 0, 1, 0]' : 0.245785}", "{'[6, 1, 6, 0, 3, 6, 0, 1, 1, 0, 2, 27, 0, 1, 1, 0, 1, 0]' : 0.245808}", "{'[6, 1, 6, 0, 3, 6, 0, 1, 1, 0, 2, 27, 0, 1, 1, 0, 1, 0]' : 0.246096}", "{'[6, 1, 6, 0, 3, 6, 0, 1, 1, 0, 2, 27, 0, 1, 1, 0, 1, 0]' : 0.245749}", "{'[6, 1, 6, 0, 3, 6, 0, 1, 1, 0, 2, 27, 0, 1, 1, 0, 1, 0]' : 0.245927}", "{'[6, 1, 6, 0, 3, 6, 0, 1, 1, 0, 2, 27, 0, 1, 1, 0, 1, 0]' : 0.245951}", "{'[6, 1, 6, 0, 3, 6, 0, 1, 1, 0, 2, 27, 0, 1, 1, 0, 1, 0]' : 0.245816}", "{'[6, 1, 6, 0, 3, 6, 0, 1, 1, 0, 2, 27, 0, 1, 1, 0, 1, 0]' : 0.245844}", "{'[6, 1, 6, 0, 3, 6, 0, 1, 1, 0, 2, 27, 0, 1, 1, 0, 1, 0]' : 0.245908}", "{'[6, 1, 6, 0, 3, 6, 0, 1, 1, 0, 2, 27, 0, 1, 1, 0, 1, 0]' : 0.245766}", "{'[6, 1, 6, 0, 3, 6, 0, 1, 1, 0, 2, 27, 0, 1, 1, 0, 1, 0]' : 0.246305}", "{'[6, 1, 6, 0, 3, 6, 0, 1, 1, 0, 2, 27, 0, 1, 1, 0, 1, 0]' : 0.246405}", "{'[6, 1, 6, 0, 3, 6, 0, 1, 1, 0, 2, 27, 0, 1, 1, 0, 1, 0]' : 0.246222}", "{'[6, 1, 6, 0, 3, 6, 0, 1, 1, 0, 2, 27, 0, 1, 1, 0, 1, 0]' : 0.246191}", "{'[6, 1, 6, 0, 3, 6, 0, 1, 1, 0, 2, 27, 0, 1, 1, 0, 1, 0]' : 0.246655}", "{'[6, 1, 6, 0, 3, 6, 0, 1, 1, 0, 2, 27, 0, 1, 1, 0, 1, 0]' : 0.246712}", "{'[6, 1, 6, 0, 3, 6, 0, 1, 1, 0, 2, 27, 0, 1, 1, 0, 1, 0]' : 0.246192}", "{'[6, 1, 6, 0, 3, 6, 0, 1, 1, 0, 2, 27, 0, 1, 1, 0, 1, 0]' : 0.246167}", "{'[6, 1, 6, 0, 3, 6, 0, 1, 1, 0, 2, 27, 0, 1, 1, 0, 1, 0]' : 0.246444}", "{'[6, 1, 6, 0, 3, 6, 0, 1, 1, 0, 2, 27, 0, 1, 1, 0, 1, 0]' : 0.246405}", "{'[6, 1, 6, 0, 3, 6, 0, 1, 1, 0, 2, 27, 0, 1, 1, 0, 1, 0]' : 0.246477}", "{'[6, 1, 6, 0, 3, 6, 0, 1, 1, 0, 2, 27, 0, 1, 1, 0, 1, 0]' : 0.246484}", "{'[6, 1, 6, 0, 3, 6, 0, 1, 1, 0, 2, 27, 0, 1, 1, 0, 1, 0]' : 0.246187}", "{'[6, 1, 6, 0, 3, 6, 0, 1, 1, 0, 2, 27, 0, 1, 1, 0, 1, 0]' : 0.24687}", "{'[6, 1, 6, 0, 3, 6, 0, 1, 1, 0, 2, 27, 0, 1, 1, 0, 1, 0]' : 0.246311}"]
returning from 'run': {'[6, 1, 6, 0, 3, 6, 0, 1, 1, 0, 2, 27, 0, 1, 1, 0, 1, 0]': ([0.29392, 0.266841, 0.245529, 0.245707, 0.245737, 0.245785, 0.245808, 0.246096, 0.245749, 0.245927, 0.245951, 0.245816, 0.245844, 0.245908, 0.245766, 0.246305, 0.246405, 0.246222, 0.246191, 0.246655, 0.246712, 0.246192, 0.246167, 0.246444, 0.246405, 0.246477, 0.246484, 0.246187, 0.24687, 0.246311], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 1, 6, 0, 3, 6, 0, 1, 1, 0, 2, 27, 0, 1, 1, 0, 1, 0]': ([0.29392, 0.266841, 0.245529, 0.245707, 0.245737, 0.245785, 0.245808, 0.246096, 0.245749, 0.245927, 0.245951, 0.245816, 0.245844, 0.245908, 0.245766, 0.246305, 0.246405, 0.246222, 0.246191, 0.246655, 0.246712, 0.246192, 0.246167, 0.246444, 0.246405, 0.246477, 0.246484, 0.246187, 0.24687, 0.246311], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	110
        Max loop nest depth: 	4
        Additions: 		1646
        Multiplications: 	500
        Divisions: 		0
        Logical: 		0
        Reads: 			3532
        Writes: 		736
        Comparisons:		110
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest51.exe __orio_perftest51.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest51.exe  
Program Test Output: 
{'[0, 2, 0, 2, 0, 6, 1, 1, 15, 16, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.166344}
{'[0, 2, 0, 2, 0, 6, 1, 1, 15, 16, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.166007}
{'[0, 2, 0, 2, 0, 6, 1, 1, 15, 16, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.166536}
{'[0, 2, 0, 2, 0, 6, 1, 1, 15, 16, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.152288}
{'[0, 2, 0, 2, 0, 6, 1, 1, 15, 16, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.149782}
{'[0, 2, 0, 2, 0, 6, 1, 1, 15, 16, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.14952}
{'[0, 2, 0, 2, 0, 6, 1, 1, 15, 16, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.14945}
{'[0, 2, 0, 2, 0, 6, 1, 1, 15, 16, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.149528}
{'[0, 2, 0, 2, 0, 6, 1, 1, 15, 16, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.149561}
{'[0, 2, 0, 2, 0, 6, 1, 1, 15, 16, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.149517}
{'[0, 2, 0, 2, 0, 6, 1, 1, 15, 16, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.149357}
{'[0, 2, 0, 2, 0, 6, 1, 1, 15, 16, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.149481}
{'[0, 2, 0, 2, 0, 6, 1, 1, 15, 16, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.149149}
{'[0, 2, 0, 2, 0, 6, 1, 1, 15, 16, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.149578}
{'[0, 2, 0, 2, 0, 6, 1, 1, 15, 16, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.149702}
{'[0, 2, 0, 2, 0, 6, 1, 1, 15, 16, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.149412}
{'[0, 2, 0, 2, 0, 6, 1, 1, 15, 16, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.149262}
{'[0, 2, 0, 2, 0, 6, 1, 1, 15, 16, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.149664}
{'[0, 2, 0, 2, 0, 6, 1, 1, 15, 16, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.149429}
{'[0, 2, 0, 2, 0, 6, 1, 1, 15, 16, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.149431}
{'[0, 2, 0, 2, 0, 6, 1, 1, 15, 16, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.149756}
{'[0, 2, 0, 2, 0, 6, 1, 1, 15, 16, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.150244}
{'[0, 2, 0, 2, 0, 6, 1, 1, 15, 16, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.149514}
{'[0, 2, 0, 2, 0, 6, 1, 1, 15, 16, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.149737}
{'[0, 2, 0, 2, 0, 6, 1, 1, 15, 16, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.149484}
{'[0, 2, 0, 2, 0, 6, 1, 1, 15, 16, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.149675}
{'[0, 2, 0, 2, 0, 6, 1, 1, 15, 16, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.149294}
{'[0, 2, 0, 2, 0, 6, 1, 1, 15, 16, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.149305}
{'[0, 2, 0, 2, 0, 6, 1, 1, 15, 16, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.150085}
{'[0, 2, 0, 2, 0, 6, 1, 1, 15, 16, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.152911}

out:
 ["{'[0, 2, 0, 2, 0, 6, 1, 1, 15, 16, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.166344}", "{'[0, 2, 0, 2, 0, 6, 1, 1, 15, 16, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.166007}", "{'[0, 2, 0, 2, 0, 6, 1, 1, 15, 16, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.166536}", "{'[0, 2, 0, 2, 0, 6, 1, 1, 15, 16, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.152288}", "{'[0, 2, 0, 2, 0, 6, 1, 1, 15, 16, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.149782}", "{'[0, 2, 0, 2, 0, 6, 1, 1, 15, 16, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.14952}", "{'[0, 2, 0, 2, 0, 6, 1, 1, 15, 16, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.14945}", "{'[0, 2, 0, 2, 0, 6, 1, 1, 15, 16, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.149528}", "{'[0, 2, 0, 2, 0, 6, 1, 1, 15, 16, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.149561}", "{'[0, 2, 0, 2, 0, 6, 1, 1, 15, 16, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.149517}", "{'[0, 2, 0, 2, 0, 6, 1, 1, 15, 16, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.149357}", "{'[0, 2, 0, 2, 0, 6, 1, 1, 15, 16, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.149481}", "{'[0, 2, 0, 2, 0, 6, 1, 1, 15, 16, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.149149}", "{'[0, 2, 0, 2, 0, 6, 1, 1, 15, 16, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.149578}", "{'[0, 2, 0, 2, 0, 6, 1, 1, 15, 16, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.149702}", "{'[0, 2, 0, 2, 0, 6, 1, 1, 15, 16, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.149412}", "{'[0, 2, 0, 2, 0, 6, 1, 1, 15, 16, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.149262}", "{'[0, 2, 0, 2, 0, 6, 1, 1, 15, 16, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.149664}", "{'[0, 2, 0, 2, 0, 6, 1, 1, 15, 16, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.149429}", "{'[0, 2, 0, 2, 0, 6, 1, 1, 15, 16, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.149431}", "{'[0, 2, 0, 2, 0, 6, 1, 1, 15, 16, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.149756}", "{'[0, 2, 0, 2, 0, 6, 1, 1, 15, 16, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.150244}", "{'[0, 2, 0, 2, 0, 6, 1, 1, 15, 16, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.149514}", "{'[0, 2, 0, 2, 0, 6, 1, 1, 15, 16, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.149737}", "{'[0, 2, 0, 2, 0, 6, 1, 1, 15, 16, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.149484}", "{'[0, 2, 0, 2, 0, 6, 1, 1, 15, 16, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.149675}", "{'[0, 2, 0, 2, 0, 6, 1, 1, 15, 16, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.149294}", "{'[0, 2, 0, 2, 0, 6, 1, 1, 15, 16, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.149305}", "{'[0, 2, 0, 2, 0, 6, 1, 1, 15, 16, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.150085}", "{'[0, 2, 0, 2, 0, 6, 1, 1, 15, 16, 2, 0, 2, 0, 0, 1, 1, 1]' : 0.152911}"]
returning from 'run': {'[0, 2, 0, 2, 0, 6, 1, 1, 15, 16, 2, 0, 2, 0, 0, 1, 1, 1]': ([0.166344, 0.166007, 0.166536, 0.152288, 0.149782, 0.14952, 0.14945, 0.149528, 0.149561, 0.149517, 0.149357, 0.149481, 0.149149, 0.149578, 0.149702, 0.149412, 0.149262, 0.149664, 0.149429, 0.149431, 0.149756, 0.150244, 0.149514, 0.149737, 0.149484, 0.149675, 0.149294, 0.149305, 0.150085, 0.152911], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 0, 2, 0, 6, 1, 1, 15, 16, 2, 0, 2, 0, 0, 1, 1, 1]': ([0.166344, 0.166007, 0.166536, 0.152288, 0.149782, 0.14952, 0.14945, 0.149528, 0.149561, 0.149517, 0.149357, 0.149481, 0.149149, 0.149578, 0.149702, 0.149412, 0.149262, 0.149664, 0.149429, 0.149431, 0.149756, 0.150244, 0.149514, 0.149737, 0.149484, 0.149675, 0.149294, 0.149305, 0.150085, 0.152911], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	6
        Additions: 		400
        Multiplications: 	120
        Divisions: 		0
        Logical: 		0
        Reads: 			780
        Writes: 		123
        Comparisons:		18
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest52.exe __orio_perftest52.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest52.exe  
Program Test Output: 
{'[1, 6, 0, 6, 6, 6, 0, 0, 2, 10, 2, 0, 0, 0, 0, 0, 1, 1]' : 0.154939}
{'[1, 6, 0, 6, 6, 6, 0, 0, 2, 10, 2, 0, 0, 0, 0, 0, 1, 1]' : 0.154748}
{'[1, 6, 0, 6, 6, 6, 0, 0, 2, 10, 2, 0, 0, 0, 0, 0, 1, 1]' : 0.151076}
{'[1, 6, 0, 6, 6, 6, 0, 0, 2, 10, 2, 0, 0, 0, 0, 0, 1, 1]' : 0.137385}
{'[1, 6, 0, 6, 6, 6, 0, 0, 2, 10, 2, 0, 0, 0, 0, 0, 1, 1]' : 0.140935}
{'[1, 6, 0, 6, 6, 6, 0, 0, 2, 10, 2, 0, 0, 0, 0, 0, 1, 1]' : 0.141015}
{'[1, 6, 0, 6, 6, 6, 0, 0, 2, 10, 2, 0, 0, 0, 0, 0, 1, 1]' : 0.140915}
{'[1, 6, 0, 6, 6, 6, 0, 0, 2, 10, 2, 0, 0, 0, 0, 0, 1, 1]' : 0.137483}
{'[1, 6, 0, 6, 6, 6, 0, 0, 2, 10, 2, 0, 0, 0, 0, 0, 1, 1]' : 0.134355}
{'[1, 6, 0, 6, 6, 6, 0, 0, 2, 10, 2, 0, 0, 0, 0, 0, 1, 1]' : 0.13355}
{'[1, 6, 0, 6, 6, 6, 0, 0, 2, 10, 2, 0, 0, 0, 0, 0, 1, 1]' : 0.135646}
{'[1, 6, 0, 6, 6, 6, 0, 0, 2, 10, 2, 0, 0, 0, 0, 0, 1, 1]' : 0.140938}
{'[1, 6, 0, 6, 6, 6, 0, 0, 2, 10, 2, 0, 0, 0, 0, 0, 1, 1]' : 0.140982}
{'[1, 6, 0, 6, 6, 6, 0, 0, 2, 10, 2, 0, 0, 0, 0, 0, 1, 1]' : 0.140935}
{'[1, 6, 0, 6, 6, 6, 0, 0, 2, 10, 2, 0, 0, 0, 0, 0, 1, 1]' : 0.140908}
{'[1, 6, 0, 6, 6, 6, 0, 0, 2, 10, 2, 0, 0, 0, 0, 0, 1, 1]' : 0.140874}
{'[1, 6, 0, 6, 6, 6, 0, 0, 2, 10, 2, 0, 0, 0, 0, 0, 1, 1]' : 0.140945}
{'[1, 6, 0, 6, 6, 6, 0, 0, 2, 10, 2, 0, 0, 0, 0, 0, 1, 1]' : 0.14096}
{'[1, 6, 0, 6, 6, 6, 0, 0, 2, 10, 2, 0, 0, 0, 0, 0, 1, 1]' : 0.140921}
{'[1, 6, 0, 6, 6, 6, 0, 0, 2, 10, 2, 0, 0, 0, 0, 0, 1, 1]' : 0.137616}
{'[1, 6, 0, 6, 6, 6, 0, 0, 2, 10, 2, 0, 0, 0, 0, 0, 1, 1]' : 0.137225}
{'[1, 6, 0, 6, 6, 6, 0, 0, 2, 10, 2, 0, 0, 0, 0, 0, 1, 1]' : 0.137283}
{'[1, 6, 0, 6, 6, 6, 0, 0, 2, 10, 2, 0, 0, 0, 0, 0, 1, 1]' : 0.13717}
{'[1, 6, 0, 6, 6, 6, 0, 0, 2, 10, 2, 0, 0, 0, 0, 0, 1, 1]' : 0.137155}
{'[1, 6, 0, 6, 6, 6, 0, 0, 2, 10, 2, 0, 0, 0, 0, 0, 1, 1]' : 0.13737}
{'[1, 6, 0, 6, 6, 6, 0, 0, 2, 10, 2, 0, 0, 0, 0, 0, 1, 1]' : 0.140536}
{'[1, 6, 0, 6, 6, 6, 0, 0, 2, 10, 2, 0, 0, 0, 0, 0, 1, 1]' : 0.140879}
{'[1, 6, 0, 6, 6, 6, 0, 0, 2, 10, 2, 0, 0, 0, 0, 0, 1, 1]' : 0.141023}
{'[1, 6, 0, 6, 6, 6, 0, 0, 2, 10, 2, 0, 0, 0, 0, 0, 1, 1]' : 0.140993}
{'[1, 6, 0, 6, 6, 6, 0, 0, 2, 10, 2, 0, 0, 0, 0, 0, 1, 1]' : 0.140924}

out:
 ["{'[1, 6, 0, 6, 6, 6, 0, 0, 2, 10, 2, 0, 0, 0, 0, 0, 1, 1]' : 0.154939}", "{'[1, 6, 0, 6, 6, 6, 0, 0, 2, 10, 2, 0, 0, 0, 0, 0, 1, 1]' : 0.154748}", "{'[1, 6, 0, 6, 6, 6, 0, 0, 2, 10, 2, 0, 0, 0, 0, 0, 1, 1]' : 0.151076}", "{'[1, 6, 0, 6, 6, 6, 0, 0, 2, 10, 2, 0, 0, 0, 0, 0, 1, 1]' : 0.137385}", "{'[1, 6, 0, 6, 6, 6, 0, 0, 2, 10, 2, 0, 0, 0, 0, 0, 1, 1]' : 0.140935}", "{'[1, 6, 0, 6, 6, 6, 0, 0, 2, 10, 2, 0, 0, 0, 0, 0, 1, 1]' : 0.141015}", "{'[1, 6, 0, 6, 6, 6, 0, 0, 2, 10, 2, 0, 0, 0, 0, 0, 1, 1]' : 0.140915}", "{'[1, 6, 0, 6, 6, 6, 0, 0, 2, 10, 2, 0, 0, 0, 0, 0, 1, 1]' : 0.137483}", "{'[1, 6, 0, 6, 6, 6, 0, 0, 2, 10, 2, 0, 0, 0, 0, 0, 1, 1]' : 0.134355}", "{'[1, 6, 0, 6, 6, 6, 0, 0, 2, 10, 2, 0, 0, 0, 0, 0, 1, 1]' : 0.13355}", "{'[1, 6, 0, 6, 6, 6, 0, 0, 2, 10, 2, 0, 0, 0, 0, 0, 1, 1]' : 0.135646}", "{'[1, 6, 0, 6, 6, 6, 0, 0, 2, 10, 2, 0, 0, 0, 0, 0, 1, 1]' : 0.140938}", "{'[1, 6, 0, 6, 6, 6, 0, 0, 2, 10, 2, 0, 0, 0, 0, 0, 1, 1]' : 0.140982}", "{'[1, 6, 0, 6, 6, 6, 0, 0, 2, 10, 2, 0, 0, 0, 0, 0, 1, 1]' : 0.140935}", "{'[1, 6, 0, 6, 6, 6, 0, 0, 2, 10, 2, 0, 0, 0, 0, 0, 1, 1]' : 0.140908}", "{'[1, 6, 0, 6, 6, 6, 0, 0, 2, 10, 2, 0, 0, 0, 0, 0, 1, 1]' : 0.140874}", "{'[1, 6, 0, 6, 6, 6, 0, 0, 2, 10, 2, 0, 0, 0, 0, 0, 1, 1]' : 0.140945}", "{'[1, 6, 0, 6, 6, 6, 0, 0, 2, 10, 2, 0, 0, 0, 0, 0, 1, 1]' : 0.14096}", "{'[1, 6, 0, 6, 6, 6, 0, 0, 2, 10, 2, 0, 0, 0, 0, 0, 1, 1]' : 0.140921}", "{'[1, 6, 0, 6, 6, 6, 0, 0, 2, 10, 2, 0, 0, 0, 0, 0, 1, 1]' : 0.137616}", "{'[1, 6, 0, 6, 6, 6, 0, 0, 2, 10, 2, 0, 0, 0, 0, 0, 1, 1]' : 0.137225}", "{'[1, 6, 0, 6, 6, 6, 0, 0, 2, 10, 2, 0, 0, 0, 0, 0, 1, 1]' : 0.137283}", "{'[1, 6, 0, 6, 6, 6, 0, 0, 2, 10, 2, 0, 0, 0, 0, 0, 1, 1]' : 0.13717}", "{'[1, 6, 0, 6, 6, 6, 0, 0, 2, 10, 2, 0, 0, 0, 0, 0, 1, 1]' : 0.137155}", "{'[1, 6, 0, 6, 6, 6, 0, 0, 2, 10, 2, 0, 0, 0, 0, 0, 1, 1]' : 0.13737}", "{'[1, 6, 0, 6, 6, 6, 0, 0, 2, 10, 2, 0, 0, 0, 0, 0, 1, 1]' : 0.140536}", "{'[1, 6, 0, 6, 6, 6, 0, 0, 2, 10, 2, 0, 0, 0, 0, 0, 1, 1]' : 0.140879}", "{'[1, 6, 0, 6, 6, 6, 0, 0, 2, 10, 2, 0, 0, 0, 0, 0, 1, 1]' : 0.141023}", "{'[1, 6, 0, 6, 6, 6, 0, 0, 2, 10, 2, 0, 0, 0, 0, 0, 1, 1]' : 0.140993}", "{'[1, 6, 0, 6, 6, 6, 0, 0, 2, 10, 2, 0, 0, 0, 0, 0, 1, 1]' : 0.140924}"]
returning from 'run': {'[1, 6, 0, 6, 6, 6, 0, 0, 2, 10, 2, 0, 0, 0, 0, 0, 1, 1]': ([0.154939, 0.154748, 0.151076, 0.137385, 0.140935, 0.141015, 0.140915, 0.137483, 0.134355, 0.13355, 0.135646, 0.140938, 0.140982, 0.140935, 0.140908, 0.140874, 0.140945, 0.14096, 0.140921, 0.137616, 0.137225, 0.137283, 0.13717, 0.137155, 0.13737, 0.140536, 0.140879, 0.141023, 0.140993, 0.140924], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 6, 0, 6, 6, 6, 0, 0, 2, 10, 2, 0, 0, 0, 0, 0, 1, 1]': ([0.154939, 0.154748, 0.151076, 0.137385, 0.140935, 0.141015, 0.140915, 0.137483, 0.134355, 0.13355, 0.135646, 0.140938, 0.140982, 0.140935, 0.140908, 0.140874, 0.140945, 0.14096, 0.140921, 0.137616, 0.137225, 0.137283, 0.13717, 0.137155, 0.13737, 0.140536, 0.140879, 0.141023, 0.140993, 0.140924], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	6
        Additions: 		150
        Multiplications: 	40
        Divisions: 		0
        Logical: 		0
        Reads: 			348
        Writes: 		95
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest53.exe __orio_perftest53.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest53.exe  
Program Test Output: 
{'[2, 5, 0, 2, 4, 0, 0, 0, 29, 0, 2, 29, 0, 1, 1, 1, 1, 0]' : 0.175822}
{'[2, 5, 0, 2, 4, 0, 0, 0, 29, 0, 2, 29, 0, 1, 1, 1, 1, 0]' : 0.176718}
{'[2, 5, 0, 2, 4, 0, 0, 0, 29, 0, 2, 29, 0, 1, 1, 1, 1, 0]' : 0.176688}
{'[2, 5, 0, 2, 4, 0, 0, 0, 29, 0, 2, 29, 0, 1, 1, 1, 1, 0]' : 0.175246}
{'[2, 5, 0, 2, 4, 0, 0, 0, 29, 0, 2, 29, 0, 1, 1, 1, 1, 0]' : 0.149918}
{'[2, 5, 0, 2, 4, 0, 0, 0, 29, 0, 2, 29, 0, 1, 1, 1, 1, 0]' : 0.148603}
{'[2, 5, 0, 2, 4, 0, 0, 0, 29, 0, 2, 29, 0, 1, 1, 1, 1, 0]' : 0.148434}
{'[2, 5, 0, 2, 4, 0, 0, 0, 29, 0, 2, 29, 0, 1, 1, 1, 1, 0]' : 0.148414}
{'[2, 5, 0, 2, 4, 0, 0, 0, 29, 0, 2, 29, 0, 1, 1, 1, 1, 0]' : 0.148508}
{'[2, 5, 0, 2, 4, 0, 0, 0, 29, 0, 2, 29, 0, 1, 1, 1, 1, 0]' : 0.148705}
{'[2, 5, 0, 2, 4, 0, 0, 0, 29, 0, 2, 29, 0, 1, 1, 1, 1, 0]' : 0.148593}
{'[2, 5, 0, 2, 4, 0, 0, 0, 29, 0, 2, 29, 0, 1, 1, 1, 1, 0]' : 0.148495}
{'[2, 5, 0, 2, 4, 0, 0, 0, 29, 0, 2, 29, 0, 1, 1, 1, 1, 0]' : 0.148655}
{'[2, 5, 0, 2, 4, 0, 0, 0, 29, 0, 2, 29, 0, 1, 1, 1, 1, 0]' : 0.148559}
{'[2, 5, 0, 2, 4, 0, 0, 0, 29, 0, 2, 29, 0, 1, 1, 1, 1, 0]' : 0.148442}
{'[2, 5, 0, 2, 4, 0, 0, 0, 29, 0, 2, 29, 0, 1, 1, 1, 1, 0]' : 0.149405}
{'[2, 5, 0, 2, 4, 0, 0, 0, 29, 0, 2, 29, 0, 1, 1, 1, 1, 0]' : 0.148459}
{'[2, 5, 0, 2, 4, 0, 0, 0, 29, 0, 2, 29, 0, 1, 1, 1, 1, 0]' : 0.149168}
{'[2, 5, 0, 2, 4, 0, 0, 0, 29, 0, 2, 29, 0, 1, 1, 1, 1, 0]' : 0.148544}
{'[2, 5, 0, 2, 4, 0, 0, 0, 29, 0, 2, 29, 0, 1, 1, 1, 1, 0]' : 0.148717}
{'[2, 5, 0, 2, 4, 0, 0, 0, 29, 0, 2, 29, 0, 1, 1, 1, 1, 0]' : 0.148985}
{'[2, 5, 0, 2, 4, 0, 0, 0, 29, 0, 2, 29, 0, 1, 1, 1, 1, 0]' : 0.148784}
{'[2, 5, 0, 2, 4, 0, 0, 0, 29, 0, 2, 29, 0, 1, 1, 1, 1, 0]' : 0.148614}
{'[2, 5, 0, 2, 4, 0, 0, 0, 29, 0, 2, 29, 0, 1, 1, 1, 1, 0]' : 0.148566}
{'[2, 5, 0, 2, 4, 0, 0, 0, 29, 0, 2, 29, 0, 1, 1, 1, 1, 0]' : 0.14868}
{'[2, 5, 0, 2, 4, 0, 0, 0, 29, 0, 2, 29, 0, 1, 1, 1, 1, 0]' : 0.148995}
{'[2, 5, 0, 2, 4, 0, 0, 0, 29, 0, 2, 29, 0, 1, 1, 1, 1, 0]' : 0.148797}
{'[2, 5, 0, 2, 4, 0, 0, 0, 29, 0, 2, 29, 0, 1, 1, 1, 1, 0]' : 0.148768}
{'[2, 5, 0, 2, 4, 0, 0, 0, 29, 0, 2, 29, 0, 1, 1, 1, 1, 0]' : 0.148915}
{'[2, 5, 0, 2, 4, 0, 0, 0, 29, 0, 2, 29, 0, 1, 1, 1, 1, 0]' : 0.148807}

out:
 ["{'[2, 5, 0, 2, 4, 0, 0, 0, 29, 0, 2, 29, 0, 1, 1, 1, 1, 0]' : 0.175822}", "{'[2, 5, 0, 2, 4, 0, 0, 0, 29, 0, 2, 29, 0, 1, 1, 1, 1, 0]' : 0.176718}", "{'[2, 5, 0, 2, 4, 0, 0, 0, 29, 0, 2, 29, 0, 1, 1, 1, 1, 0]' : 0.176688}", "{'[2, 5, 0, 2, 4, 0, 0, 0, 29, 0, 2, 29, 0, 1, 1, 1, 1, 0]' : 0.175246}", "{'[2, 5, 0, 2, 4, 0, 0, 0, 29, 0, 2, 29, 0, 1, 1, 1, 1, 0]' : 0.149918}", "{'[2, 5, 0, 2, 4, 0, 0, 0, 29, 0, 2, 29, 0, 1, 1, 1, 1, 0]' : 0.148603}", "{'[2, 5, 0, 2, 4, 0, 0, 0, 29, 0, 2, 29, 0, 1, 1, 1, 1, 0]' : 0.148434}", "{'[2, 5, 0, 2, 4, 0, 0, 0, 29, 0, 2, 29, 0, 1, 1, 1, 1, 0]' : 0.148414}", "{'[2, 5, 0, 2, 4, 0, 0, 0, 29, 0, 2, 29, 0, 1, 1, 1, 1, 0]' : 0.148508}", "{'[2, 5, 0, 2, 4, 0, 0, 0, 29, 0, 2, 29, 0, 1, 1, 1, 1, 0]' : 0.148705}", "{'[2, 5, 0, 2, 4, 0, 0, 0, 29, 0, 2, 29, 0, 1, 1, 1, 1, 0]' : 0.148593}", "{'[2, 5, 0, 2, 4, 0, 0, 0, 29, 0, 2, 29, 0, 1, 1, 1, 1, 0]' : 0.148495}", "{'[2, 5, 0, 2, 4, 0, 0, 0, 29, 0, 2, 29, 0, 1, 1, 1, 1, 0]' : 0.148655}", "{'[2, 5, 0, 2, 4, 0, 0, 0, 29, 0, 2, 29, 0, 1, 1, 1, 1, 0]' : 0.148559}", "{'[2, 5, 0, 2, 4, 0, 0, 0, 29, 0, 2, 29, 0, 1, 1, 1, 1, 0]' : 0.148442}", "{'[2, 5, 0, 2, 4, 0, 0, 0, 29, 0, 2, 29, 0, 1, 1, 1, 1, 0]' : 0.149405}", "{'[2, 5, 0, 2, 4, 0, 0, 0, 29, 0, 2, 29, 0, 1, 1, 1, 1, 0]' : 0.148459}", "{'[2, 5, 0, 2, 4, 0, 0, 0, 29, 0, 2, 29, 0, 1, 1, 1, 1, 0]' : 0.149168}", "{'[2, 5, 0, 2, 4, 0, 0, 0, 29, 0, 2, 29, 0, 1, 1, 1, 1, 0]' : 0.148544}", "{'[2, 5, 0, 2, 4, 0, 0, 0, 29, 0, 2, 29, 0, 1, 1, 1, 1, 0]' : 0.148717}", "{'[2, 5, 0, 2, 4, 0, 0, 0, 29, 0, 2, 29, 0, 1, 1, 1, 1, 0]' : 0.148985}", "{'[2, 5, 0, 2, 4, 0, 0, 0, 29, 0, 2, 29, 0, 1, 1, 1, 1, 0]' : 0.148784}", "{'[2, 5, 0, 2, 4, 0, 0, 0, 29, 0, 2, 29, 0, 1, 1, 1, 1, 0]' : 0.148614}", "{'[2, 5, 0, 2, 4, 0, 0, 0, 29, 0, 2, 29, 0, 1, 1, 1, 1, 0]' : 0.148566}", "{'[2, 5, 0, 2, 4, 0, 0, 0, 29, 0, 2, 29, 0, 1, 1, 1, 1, 0]' : 0.14868}", "{'[2, 5, 0, 2, 4, 0, 0, 0, 29, 0, 2, 29, 0, 1, 1, 1, 1, 0]' : 0.148995}", "{'[2, 5, 0, 2, 4, 0, 0, 0, 29, 0, 2, 29, 0, 1, 1, 1, 1, 0]' : 0.148797}", "{'[2, 5, 0, 2, 4, 0, 0, 0, 29, 0, 2, 29, 0, 1, 1, 1, 1, 0]' : 0.148768}", "{'[2, 5, 0, 2, 4, 0, 0, 0, 29, 0, 2, 29, 0, 1, 1, 1, 1, 0]' : 0.148915}", "{'[2, 5, 0, 2, 4, 0, 0, 0, 29, 0, 2, 29, 0, 1, 1, 1, 1, 0]' : 0.148807}"]
returning from 'run': {'[2, 5, 0, 2, 4, 0, 0, 0, 29, 0, 2, 29, 0, 1, 1, 1, 1, 0]': ([0.175822, 0.176718, 0.176688, 0.175246, 0.149918, 0.148603, 0.148434, 0.148414, 0.148508, 0.148705, 0.148593, 0.148495, 0.148655, 0.148559, 0.148442, 0.149405, 0.148459, 0.149168, 0.148544, 0.148717, 0.148985, 0.148784, 0.148614, 0.148566, 0.14868, 0.148995, 0.148797, 0.148768, 0.148915, 0.148807], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 5, 0, 2, 4, 0, 0, 0, 29, 0, 2, 29, 0, 1, 1, 1, 1, 0]': ([0.175822, 0.176718, 0.176688, 0.175246, 0.149918, 0.148603, 0.148434, 0.148414, 0.148508, 0.148705, 0.148593, 0.148495, 0.148655, 0.148559, 0.148442, 0.149405, 0.148459, 0.149168, 0.148544, 0.148717, 0.148985, 0.148784, 0.148614, 0.148566, 0.14868, 0.148995, 0.148797, 0.148768, 0.148915, 0.148807], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	17
        Max loop nest depth: 	5
        Additions: 		670
        Multiplications: 	310
        Divisions: 		0
        Logical: 		0
        Reads: 			1481
        Writes: 		306
        Comparisons:		17
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest54.exe __orio_perftest54.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest54.exe  
Program Test Output: 
{'[5, 6, 3, 0, 4, 2, 0, 0, 14, 29, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.183927}
{'[5, 6, 3, 0, 4, 2, 0, 0, 14, 29, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.183872}
{'[5, 6, 3, 0, 4, 2, 0, 0, 14, 29, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.17137}
{'[5, 6, 3, 0, 4, 2, 0, 0, 14, 29, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.163592}
{'[5, 6, 3, 0, 4, 2, 0, 0, 14, 29, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.163445}
{'[5, 6, 3, 0, 4, 2, 0, 0, 14, 29, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.16286}
{'[5, 6, 3, 0, 4, 2, 0, 0, 14, 29, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.163408}
{'[5, 6, 3, 0, 4, 2, 0, 0, 14, 29, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.163212}
{'[5, 6, 3, 0, 4, 2, 0, 0, 14, 29, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.163113}
{'[5, 6, 3, 0, 4, 2, 0, 0, 14, 29, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.163385}
{'[5, 6, 3, 0, 4, 2, 0, 0, 14, 29, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.163023}
{'[5, 6, 3, 0, 4, 2, 0, 0, 14, 29, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.162979}
{'[5, 6, 3, 0, 4, 2, 0, 0, 14, 29, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.162909}
{'[5, 6, 3, 0, 4, 2, 0, 0, 14, 29, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.163035}
{'[5, 6, 3, 0, 4, 2, 0, 0, 14, 29, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.162929}
{'[5, 6, 3, 0, 4, 2, 0, 0, 14, 29, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.162913}
{'[5, 6, 3, 0, 4, 2, 0, 0, 14, 29, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.163227}
{'[5, 6, 3, 0, 4, 2, 0, 0, 14, 29, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.163305}
{'[5, 6, 3, 0, 4, 2, 0, 0, 14, 29, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.163181}
{'[5, 6, 3, 0, 4, 2, 0, 0, 14, 29, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.163031}
{'[5, 6, 3, 0, 4, 2, 0, 0, 14, 29, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.16352}
{'[5, 6, 3, 0, 4, 2, 0, 0, 14, 29, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.163182}
{'[5, 6, 3, 0, 4, 2, 0, 0, 14, 29, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.163273}
{'[5, 6, 3, 0, 4, 2, 0, 0, 14, 29, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.16369}
{'[5, 6, 3, 0, 4, 2, 0, 0, 14, 29, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.16302}
{'[5, 6, 3, 0, 4, 2, 0, 0, 14, 29, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.163678}
{'[5, 6, 3, 0, 4, 2, 0, 0, 14, 29, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.163137}
{'[5, 6, 3, 0, 4, 2, 0, 0, 14, 29, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.163244}
{'[5, 6, 3, 0, 4, 2, 0, 0, 14, 29, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.163086}
{'[5, 6, 3, 0, 4, 2, 0, 0, 14, 29, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.163107}

out:
 ["{'[5, 6, 3, 0, 4, 2, 0, 0, 14, 29, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.183927}", "{'[5, 6, 3, 0, 4, 2, 0, 0, 14, 29, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.183872}", "{'[5, 6, 3, 0, 4, 2, 0, 0, 14, 29, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.17137}", "{'[5, 6, 3, 0, 4, 2, 0, 0, 14, 29, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.163592}", "{'[5, 6, 3, 0, 4, 2, 0, 0, 14, 29, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.163445}", "{'[5, 6, 3, 0, 4, 2, 0, 0, 14, 29, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.16286}", "{'[5, 6, 3, 0, 4, 2, 0, 0, 14, 29, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.163408}", "{'[5, 6, 3, 0, 4, 2, 0, 0, 14, 29, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.163212}", "{'[5, 6, 3, 0, 4, 2, 0, 0, 14, 29, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.163113}", "{'[5, 6, 3, 0, 4, 2, 0, 0, 14, 29, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.163385}", "{'[5, 6, 3, 0, 4, 2, 0, 0, 14, 29, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.163023}", "{'[5, 6, 3, 0, 4, 2, 0, 0, 14, 29, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.162979}", "{'[5, 6, 3, 0, 4, 2, 0, 0, 14, 29, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.162909}", "{'[5, 6, 3, 0, 4, 2, 0, 0, 14, 29, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.163035}", "{'[5, 6, 3, 0, 4, 2, 0, 0, 14, 29, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.162929}", "{'[5, 6, 3, 0, 4, 2, 0, 0, 14, 29, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.162913}", "{'[5, 6, 3, 0, 4, 2, 0, 0, 14, 29, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.163227}", "{'[5, 6, 3, 0, 4, 2, 0, 0, 14, 29, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.163305}", "{'[5, 6, 3, 0, 4, 2, 0, 0, 14, 29, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.163181}", "{'[5, 6, 3, 0, 4, 2, 0, 0, 14, 29, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.163031}", "{'[5, 6, 3, 0, 4, 2, 0, 0, 14, 29, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.16352}", "{'[5, 6, 3, 0, 4, 2, 0, 0, 14, 29, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.163182}", "{'[5, 6, 3, 0, 4, 2, 0, 0, 14, 29, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.163273}", "{'[5, 6, 3, 0, 4, 2, 0, 0, 14, 29, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.16369}", "{'[5, 6, 3, 0, 4, 2, 0, 0, 14, 29, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.16302}", "{'[5, 6, 3, 0, 4, 2, 0, 0, 14, 29, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.163678}", "{'[5, 6, 3, 0, 4, 2, 0, 0, 14, 29, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.163137}", "{'[5, 6, 3, 0, 4, 2, 0, 0, 14, 29, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.163244}", "{'[5, 6, 3, 0, 4, 2, 0, 0, 14, 29, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.163086}", "{'[5, 6, 3, 0, 4, 2, 0, 0, 14, 29, 2, 0, 0, 0, 0, 1, 0, 0]' : 0.163107}"]
returning from 'run': {'[5, 6, 3, 0, 4, 2, 0, 0, 14, 29, 2, 0, 0, 0, 0, 1, 0, 0]': ([0.183927, 0.183872, 0.17137, 0.163592, 0.163445, 0.16286, 0.163408, 0.163212, 0.163113, 0.163385, 0.163023, 0.162979, 0.162909, 0.163035, 0.162929, 0.162913, 0.163227, 0.163305, 0.163181, 0.163031, 0.16352, 0.163182, 0.163273, 0.16369, 0.16302, 0.163678, 0.163137, 0.163244, 0.163086, 0.163107], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 6, 3, 0, 4, 2, 0, 0, 14, 29, 2, 0, 0, 0, 0, 1, 0, 0]': ([0.183927, 0.183872, 0.17137, 0.163592, 0.163445, 0.16286, 0.163408, 0.163212, 0.163113, 0.163385, 0.163023, 0.162979, 0.162909, 0.163035, 0.162929, 0.162913, 0.163227, 0.163305, 0.163181, 0.163031, 0.16352, 0.163182, 0.163273, 0.16369, 0.16302, 0.163678, 0.163137, 0.163244, 0.163086, 0.163107], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	5
        Additions: 		1198
        Multiplications: 	330
        Divisions: 		0
        Logical: 		0
        Reads: 			2082
        Writes: 		242
        Comparisons:		22
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest55.exe __orio_perftest55.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest55.exe  
Program Test Output: 
{'[1, 0, 5, 2, 2, 0, 1, 1, 15, 0, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.276266}
{'[1, 0, 5, 2, 2, 0, 1, 1, 15, 0, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.276147}
{'[1, 0, 5, 2, 2, 0, 1, 1, 15, 0, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.240316}
{'[1, 0, 5, 2, 2, 0, 1, 1, 15, 0, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.230736}
{'[1, 0, 5, 2, 2, 0, 1, 1, 15, 0, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.230816}
{'[1, 0, 5, 2, 2, 0, 1, 1, 15, 0, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.230481}
{'[1, 0, 5, 2, 2, 0, 1, 1, 15, 0, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.230745}
{'[1, 0, 5, 2, 2, 0, 1, 1, 15, 0, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.230475}
{'[1, 0, 5, 2, 2, 0, 1, 1, 15, 0, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.231162}
{'[1, 0, 5, 2, 2, 0, 1, 1, 15, 0, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.230802}
{'[1, 0, 5, 2, 2, 0, 1, 1, 15, 0, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.230567}
{'[1, 0, 5, 2, 2, 0, 1, 1, 15, 0, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.230546}
{'[1, 0, 5, 2, 2, 0, 1, 1, 15, 0, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.230904}
{'[1, 0, 5, 2, 2, 0, 1, 1, 15, 0, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.23088}
{'[1, 0, 5, 2, 2, 0, 1, 1, 15, 0, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.230687}
{'[1, 0, 5, 2, 2, 0, 1, 1, 15, 0, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.230635}
{'[1, 0, 5, 2, 2, 0, 1, 1, 15, 0, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.230532}
{'[1, 0, 5, 2, 2, 0, 1, 1, 15, 0, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.230535}
{'[1, 0, 5, 2, 2, 0, 1, 1, 15, 0, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.231147}
{'[1, 0, 5, 2, 2, 0, 1, 1, 15, 0, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.23084}
{'[1, 0, 5, 2, 2, 0, 1, 1, 15, 0, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.230577}
{'[1, 0, 5, 2, 2, 0, 1, 1, 15, 0, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.230747}
{'[1, 0, 5, 2, 2, 0, 1, 1, 15, 0, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.230515}
{'[1, 0, 5, 2, 2, 0, 1, 1, 15, 0, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.231128}
{'[1, 0, 5, 2, 2, 0, 1, 1, 15, 0, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.23057}
{'[1, 0, 5, 2, 2, 0, 1, 1, 15, 0, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.230582}
{'[1, 0, 5, 2, 2, 0, 1, 1, 15, 0, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.230743}
{'[1, 0, 5, 2, 2, 0, 1, 1, 15, 0, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.23071}
{'[1, 0, 5, 2, 2, 0, 1, 1, 15, 0, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.230826}
{'[1, 0, 5, 2, 2, 0, 1, 1, 15, 0, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.230683}

out:
 ["{'[1, 0, 5, 2, 2, 0, 1, 1, 15, 0, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.276266}", "{'[1, 0, 5, 2, 2, 0, 1, 1, 15, 0, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.276147}", "{'[1, 0, 5, 2, 2, 0, 1, 1, 15, 0, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.240316}", "{'[1, 0, 5, 2, 2, 0, 1, 1, 15, 0, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.230736}", "{'[1, 0, 5, 2, 2, 0, 1, 1, 15, 0, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.230816}", "{'[1, 0, 5, 2, 2, 0, 1, 1, 15, 0, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.230481}", "{'[1, 0, 5, 2, 2, 0, 1, 1, 15, 0, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.230745}", "{'[1, 0, 5, 2, 2, 0, 1, 1, 15, 0, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.230475}", "{'[1, 0, 5, 2, 2, 0, 1, 1, 15, 0, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.231162}", "{'[1, 0, 5, 2, 2, 0, 1, 1, 15, 0, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.230802}", "{'[1, 0, 5, 2, 2, 0, 1, 1, 15, 0, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.230567}", "{'[1, 0, 5, 2, 2, 0, 1, 1, 15, 0, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.230546}", "{'[1, 0, 5, 2, 2, 0, 1, 1, 15, 0, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.230904}", "{'[1, 0, 5, 2, 2, 0, 1, 1, 15, 0, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.23088}", "{'[1, 0, 5, 2, 2, 0, 1, 1, 15, 0, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.230687}", "{'[1, 0, 5, 2, 2, 0, 1, 1, 15, 0, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.230635}", "{'[1, 0, 5, 2, 2, 0, 1, 1, 15, 0, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.230532}", "{'[1, 0, 5, 2, 2, 0, 1, 1, 15, 0, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.230535}", "{'[1, 0, 5, 2, 2, 0, 1, 1, 15, 0, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.231147}", "{'[1, 0, 5, 2, 2, 0, 1, 1, 15, 0, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.23084}", "{'[1, 0, 5, 2, 2, 0, 1, 1, 15, 0, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.230577}", "{'[1, 0, 5, 2, 2, 0, 1, 1, 15, 0, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.230747}", "{'[1, 0, 5, 2, 2, 0, 1, 1, 15, 0, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.230515}", "{'[1, 0, 5, 2, 2, 0, 1, 1, 15, 0, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.231128}", "{'[1, 0, 5, 2, 2, 0, 1, 1, 15, 0, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.23057}", "{'[1, 0, 5, 2, 2, 0, 1, 1, 15, 0, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.230582}", "{'[1, 0, 5, 2, 2, 0, 1, 1, 15, 0, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.230743}", "{'[1, 0, 5, 2, 2, 0, 1, 1, 15, 0, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.23071}", "{'[1, 0, 5, 2, 2, 0, 1, 1, 15, 0, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.230826}", "{'[1, 0, 5, 2, 2, 0, 1, 1, 15, 0, 2, 0, 2, 0, 0, 0, 0, 1]' : 0.230683}"]
returning from 'run': {'[1, 0, 5, 2, 2, 0, 1, 1, 15, 0, 2, 0, 2, 0, 0, 0, 0, 1]': ([0.276266, 0.276147, 0.240316, 0.230736, 0.230816, 0.230481, 0.230745, 0.230475, 0.231162, 0.230802, 0.230567, 0.230546, 0.230904, 0.23088, 0.230687, 0.230635, 0.230532, 0.230535, 0.231147, 0.23084, 0.230577, 0.230747, 0.230515, 0.231128, 0.23057, 0.230582, 0.230743, 0.23071, 0.230826, 0.230683], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 5, 2, 2, 0, 1, 1, 15, 0, 2, 0, 2, 0, 0, 0, 0, 1]': ([0.276266, 0.276147, 0.240316, 0.230736, 0.230816, 0.230481, 0.230745, 0.230475, 0.231162, 0.230802, 0.230567, 0.230546, 0.230904, 0.23088, 0.230687, 0.230635, 0.230532, 0.230535, 0.231147, 0.23084, 0.230577, 0.230747, 0.230515, 0.231128, 0.23057, 0.230582, 0.230743, 0.23071, 0.230826, 0.230683], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		223
        Multiplications: 	82
        Divisions: 		0
        Logical: 		0
        Reads: 			536
        Writes: 		86
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest56.exe __orio_perftest56.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest56.exe  
Program Test Output: 
{'[1, 3, 0, 0, 3, 2, 0, 0, 11, 0, 2, 3, 0, 2, 0, 0, 0, 1]' : 0.184949}
{'[1, 3, 0, 0, 3, 2, 0, 0, 11, 0, 2, 3, 0, 2, 0, 0, 0, 1]' : 0.182896}
{'[1, 3, 0, 0, 3, 2, 0, 0, 11, 0, 2, 3, 0, 2, 0, 0, 0, 1]' : 0.164098}
{'[1, 3, 0, 0, 3, 2, 0, 0, 11, 0, 2, 3, 0, 2, 0, 0, 0, 1]' : 0.164081}
{'[1, 3, 0, 0, 3, 2, 0, 0, 11, 0, 2, 3, 0, 2, 0, 0, 0, 1]' : 0.164089}
{'[1, 3, 0, 0, 3, 2, 0, 0, 11, 0, 2, 3, 0, 2, 0, 0, 0, 1]' : 0.164112}
{'[1, 3, 0, 0, 3, 2, 0, 0, 11, 0, 2, 3, 0, 2, 0, 0, 0, 1]' : 0.164071}
{'[1, 3, 0, 0, 3, 2, 0, 0, 11, 0, 2, 3, 0, 2, 0, 0, 0, 1]' : 0.164106}
{'[1, 3, 0, 0, 3, 2, 0, 0, 11, 0, 2, 3, 0, 2, 0, 0, 0, 1]' : 0.161487}
{'[1, 3, 0, 0, 3, 2, 0, 0, 11, 0, 2, 3, 0, 2, 0, 0, 0, 1]' : 0.158596}
{'[1, 3, 0, 0, 3, 2, 0, 0, 11, 0, 2, 3, 0, 2, 0, 0, 0, 1]' : 0.163115}
{'[1, 3, 0, 0, 3, 2, 0, 0, 11, 0, 2, 3, 0, 2, 0, 0, 0, 1]' : 0.164093}
{'[1, 3, 0, 0, 3, 2, 0, 0, 11, 0, 2, 3, 0, 2, 0, 0, 0, 1]' : 0.164115}
{'[1, 3, 0, 0, 3, 2, 0, 0, 11, 0, 2, 3, 0, 2, 0, 0, 0, 1]' : 0.159859}
{'[1, 3, 0, 0, 3, 2, 0, 0, 11, 0, 2, 3, 0, 2, 0, 0, 0, 1]' : 0.158664}
{'[1, 3, 0, 0, 3, 2, 0, 0, 11, 0, 2, 3, 0, 2, 0, 0, 0, 1]' : 0.158627}
{'[1, 3, 0, 0, 3, 2, 0, 0, 11, 0, 2, 3, 0, 2, 0, 0, 0, 1]' : 0.16205}
{'[1, 3, 0, 0, 3, 2, 0, 0, 11, 0, 2, 3, 0, 2, 0, 0, 0, 1]' : 0.164113}
{'[1, 3, 0, 0, 3, 2, 0, 0, 11, 0, 2, 3, 0, 2, 0, 0, 0, 1]' : 0.164084}
{'[1, 3, 0, 0, 3, 2, 0, 0, 11, 0, 2, 3, 0, 2, 0, 0, 0, 1]' : 0.164112}
{'[1, 3, 0, 0, 3, 2, 0, 0, 11, 0, 2, 3, 0, 2, 0, 0, 0, 1]' : 0.164094}
{'[1, 3, 0, 0, 3, 2, 0, 0, 11, 0, 2, 3, 0, 2, 0, 0, 0, 1]' : 0.164352}
{'[1, 3, 0, 0, 3, 2, 0, 0, 11, 0, 2, 3, 0, 2, 0, 0, 0, 1]' : 0.164153}
{'[1, 3, 0, 0, 3, 2, 0, 0, 11, 0, 2, 3, 0, 2, 0, 0, 0, 1]' : 0.16413}
{'[1, 3, 0, 0, 3, 2, 0, 0, 11, 0, 2, 3, 0, 2, 0, 0, 0, 1]' : 0.164177}
{'[1, 3, 0, 0, 3, 2, 0, 0, 11, 0, 2, 3, 0, 2, 0, 0, 0, 1]' : 0.16417}
{'[1, 3, 0, 0, 3, 2, 0, 0, 11, 0, 2, 3, 0, 2, 0, 0, 0, 1]' : 0.164156}
{'[1, 3, 0, 0, 3, 2, 0, 0, 11, 0, 2, 3, 0, 2, 0, 0, 0, 1]' : 0.164156}
{'[1, 3, 0, 0, 3, 2, 0, 0, 11, 0, 2, 3, 0, 2, 0, 0, 0, 1]' : 0.164183}
{'[1, 3, 0, 0, 3, 2, 0, 0, 11, 0, 2, 3, 0, 2, 0, 0, 0, 1]' : 0.164178}

out:
 ["{'[1, 3, 0, 0, 3, 2, 0, 0, 11, 0, 2, 3, 0, 2, 0, 0, 0, 1]' : 0.184949}", "{'[1, 3, 0, 0, 3, 2, 0, 0, 11, 0, 2, 3, 0, 2, 0, 0, 0, 1]' : 0.182896}", "{'[1, 3, 0, 0, 3, 2, 0, 0, 11, 0, 2, 3, 0, 2, 0, 0, 0, 1]' : 0.164098}", "{'[1, 3, 0, 0, 3, 2, 0, 0, 11, 0, 2, 3, 0, 2, 0, 0, 0, 1]' : 0.164081}", "{'[1, 3, 0, 0, 3, 2, 0, 0, 11, 0, 2, 3, 0, 2, 0, 0, 0, 1]' : 0.164089}", "{'[1, 3, 0, 0, 3, 2, 0, 0, 11, 0, 2, 3, 0, 2, 0, 0, 0, 1]' : 0.164112}", "{'[1, 3, 0, 0, 3, 2, 0, 0, 11, 0, 2, 3, 0, 2, 0, 0, 0, 1]' : 0.164071}", "{'[1, 3, 0, 0, 3, 2, 0, 0, 11, 0, 2, 3, 0, 2, 0, 0, 0, 1]' : 0.164106}", "{'[1, 3, 0, 0, 3, 2, 0, 0, 11, 0, 2, 3, 0, 2, 0, 0, 0, 1]' : 0.161487}", "{'[1, 3, 0, 0, 3, 2, 0, 0, 11, 0, 2, 3, 0, 2, 0, 0, 0, 1]' : 0.158596}", "{'[1, 3, 0, 0, 3, 2, 0, 0, 11, 0, 2, 3, 0, 2, 0, 0, 0, 1]' : 0.163115}", "{'[1, 3, 0, 0, 3, 2, 0, 0, 11, 0, 2, 3, 0, 2, 0, 0, 0, 1]' : 0.164093}", "{'[1, 3, 0, 0, 3, 2, 0, 0, 11, 0, 2, 3, 0, 2, 0, 0, 0, 1]' : 0.164115}", "{'[1, 3, 0, 0, 3, 2, 0, 0, 11, 0, 2, 3, 0, 2, 0, 0, 0, 1]' : 0.159859}", "{'[1, 3, 0, 0, 3, 2, 0, 0, 11, 0, 2, 3, 0, 2, 0, 0, 0, 1]' : 0.158664}", "{'[1, 3, 0, 0, 3, 2, 0, 0, 11, 0, 2, 3, 0, 2, 0, 0, 0, 1]' : 0.158627}", "{'[1, 3, 0, 0, 3, 2, 0, 0, 11, 0, 2, 3, 0, 2, 0, 0, 0, 1]' : 0.16205}", "{'[1, 3, 0, 0, 3, 2, 0, 0, 11, 0, 2, 3, 0, 2, 0, 0, 0, 1]' : 0.164113}", "{'[1, 3, 0, 0, 3, 2, 0, 0, 11, 0, 2, 3, 0, 2, 0, 0, 0, 1]' : 0.164084}", "{'[1, 3, 0, 0, 3, 2, 0, 0, 11, 0, 2, 3, 0, 2, 0, 0, 0, 1]' : 0.164112}", "{'[1, 3, 0, 0, 3, 2, 0, 0, 11, 0, 2, 3, 0, 2, 0, 0, 0, 1]' : 0.164094}", "{'[1, 3, 0, 0, 3, 2, 0, 0, 11, 0, 2, 3, 0, 2, 0, 0, 0, 1]' : 0.164352}", "{'[1, 3, 0, 0, 3, 2, 0, 0, 11, 0, 2, 3, 0, 2, 0, 0, 0, 1]' : 0.164153}", "{'[1, 3, 0, 0, 3, 2, 0, 0, 11, 0, 2, 3, 0, 2, 0, 0, 0, 1]' : 0.16413}", "{'[1, 3, 0, 0, 3, 2, 0, 0, 11, 0, 2, 3, 0, 2, 0, 0, 0, 1]' : 0.164177}", "{'[1, 3, 0, 0, 3, 2, 0, 0, 11, 0, 2, 3, 0, 2, 0, 0, 0, 1]' : 0.16417}", "{'[1, 3, 0, 0, 3, 2, 0, 0, 11, 0, 2, 3, 0, 2, 0, 0, 0, 1]' : 0.164156}", "{'[1, 3, 0, 0, 3, 2, 0, 0, 11, 0, 2, 3, 0, 2, 0, 0, 0, 1]' : 0.164156}", "{'[1, 3, 0, 0, 3, 2, 0, 0, 11, 0, 2, 3, 0, 2, 0, 0, 0, 1]' : 0.164183}", "{'[1, 3, 0, 0, 3, 2, 0, 0, 11, 0, 2, 3, 0, 2, 0, 0, 0, 1]' : 0.164178}"]
returning from 'run': {'[1, 3, 0, 0, 3, 2, 0, 0, 11, 0, 2, 3, 0, 2, 0, 0, 0, 1]': ([0.184949, 0.182896, 0.164098, 0.164081, 0.164089, 0.164112, 0.164071, 0.164106, 0.161487, 0.158596, 0.163115, 0.164093, 0.164115, 0.159859, 0.158664, 0.158627, 0.16205, 0.164113, 0.164084, 0.164112, 0.164094, 0.164352, 0.164153, 0.16413, 0.164177, 0.16417, 0.164156, 0.164156, 0.164183, 0.164178], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 3, 0, 0, 3, 2, 0, 0, 11, 0, 2, 3, 0, 2, 0, 0, 0, 1]': ([0.184949, 0.182896, 0.164098, 0.164081, 0.164089, 0.164112, 0.164071, 0.164106, 0.161487, 0.158596, 0.163115, 0.164093, 0.164115, 0.159859, 0.158664, 0.158627, 0.16205, 0.164113, 0.164084, 0.164112, 0.164094, 0.164352, 0.164153, 0.16413, 0.164177, 0.16417, 0.164156, 0.164156, 0.164183, 0.164178], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	37
        Max loop nest depth: 	4
        Additions: 		632
        Multiplications: 	234
        Divisions: 		0
        Logical: 		0
        Reads: 			1401
        Writes: 		299
        Comparisons:		37
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest57.exe __orio_perftest57.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest57.exe  
Program Test Output: 
{'[5, 0, 0, 0, 0, 5, 0, 1, 25, 11, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.152081}
{'[5, 0, 0, 0, 0, 5, 0, 1, 25, 11, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.151893}
{'[5, 0, 0, 0, 0, 5, 0, 1, 25, 11, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.151838}
{'[5, 0, 0, 0, 0, 5, 0, 1, 25, 11, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.151372}
{'[5, 0, 0, 0, 0, 5, 0, 1, 25, 11, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.133461}
{'[5, 0, 0, 0, 0, 5, 0, 1, 25, 11, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.131418}
{'[5, 0, 0, 0, 0, 5, 0, 1, 25, 11, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.131317}
{'[5, 0, 0, 0, 0, 5, 0, 1, 25, 11, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.131226}
{'[5, 0, 0, 0, 0, 5, 0, 1, 25, 11, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.131572}
{'[5, 0, 0, 0, 0, 5, 0, 1, 25, 11, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.131431}
{'[5, 0, 0, 0, 0, 5, 0, 1, 25, 11, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.131189}
{'[5, 0, 0, 0, 0, 5, 0, 1, 25, 11, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.131312}
{'[5, 0, 0, 0, 0, 5, 0, 1, 25, 11, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.131239}
{'[5, 0, 0, 0, 0, 5, 0, 1, 25, 11, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.131153}
{'[5, 0, 0, 0, 0, 5, 0, 1, 25, 11, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.131175}
{'[5, 0, 0, 0, 0, 5, 0, 1, 25, 11, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.131344}
{'[5, 0, 0, 0, 0, 5, 0, 1, 25, 11, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.130402}
{'[5, 0, 0, 0, 0, 5, 0, 1, 25, 11, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.129977}
{'[5, 0, 0, 0, 0, 5, 0, 1, 25, 11, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.129915}
{'[5, 0, 0, 0, 0, 5, 0, 1, 25, 11, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.130033}
{'[5, 0, 0, 0, 0, 5, 0, 1, 25, 11, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.130034}
{'[5, 0, 0, 0, 0, 5, 0, 1, 25, 11, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.130084}
{'[5, 0, 0, 0, 0, 5, 0, 1, 25, 11, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.129786}
{'[5, 0, 0, 0, 0, 5, 0, 1, 25, 11, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.129924}
{'[5, 0, 0, 0, 0, 5, 0, 1, 25, 11, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.130552}
{'[5, 0, 0, 0, 0, 5, 0, 1, 25, 11, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.130271}
{'[5, 0, 0, 0, 0, 5, 0, 1, 25, 11, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.129785}
{'[5, 0, 0, 0, 0, 5, 0, 1, 25, 11, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.129797}
{'[5, 0, 0, 0, 0, 5, 0, 1, 25, 11, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.129922}
{'[5, 0, 0, 0, 0, 5, 0, 1, 25, 11, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.129806}

out:
 ["{'[5, 0, 0, 0, 0, 5, 0, 1, 25, 11, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.152081}", "{'[5, 0, 0, 0, 0, 5, 0, 1, 25, 11, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.151893}", "{'[5, 0, 0, 0, 0, 5, 0, 1, 25, 11, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.151838}", "{'[5, 0, 0, 0, 0, 5, 0, 1, 25, 11, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.151372}", "{'[5, 0, 0, 0, 0, 5, 0, 1, 25, 11, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.133461}", "{'[5, 0, 0, 0, 0, 5, 0, 1, 25, 11, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.131418}", "{'[5, 0, 0, 0, 0, 5, 0, 1, 25, 11, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.131317}", "{'[5, 0, 0, 0, 0, 5, 0, 1, 25, 11, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.131226}", "{'[5, 0, 0, 0, 0, 5, 0, 1, 25, 11, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.131572}", "{'[5, 0, 0, 0, 0, 5, 0, 1, 25, 11, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.131431}", "{'[5, 0, 0, 0, 0, 5, 0, 1, 25, 11, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.131189}", "{'[5, 0, 0, 0, 0, 5, 0, 1, 25, 11, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.131312}", "{'[5, 0, 0, 0, 0, 5, 0, 1, 25, 11, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.131239}", "{'[5, 0, 0, 0, 0, 5, 0, 1, 25, 11, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.131153}", "{'[5, 0, 0, 0, 0, 5, 0, 1, 25, 11, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.131175}", "{'[5, 0, 0, 0, 0, 5, 0, 1, 25, 11, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.131344}", "{'[5, 0, 0, 0, 0, 5, 0, 1, 25, 11, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.130402}", "{'[5, 0, 0, 0, 0, 5, 0, 1, 25, 11, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.129977}", "{'[5, 0, 0, 0, 0, 5, 0, 1, 25, 11, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.129915}", "{'[5, 0, 0, 0, 0, 5, 0, 1, 25, 11, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.130033}", "{'[5, 0, 0, 0, 0, 5, 0, 1, 25, 11, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.130034}", "{'[5, 0, 0, 0, 0, 5, 0, 1, 25, 11, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.130084}", "{'[5, 0, 0, 0, 0, 5, 0, 1, 25, 11, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.129786}", "{'[5, 0, 0, 0, 0, 5, 0, 1, 25, 11, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.129924}", "{'[5, 0, 0, 0, 0, 5, 0, 1, 25, 11, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.130552}", "{'[5, 0, 0, 0, 0, 5, 0, 1, 25, 11, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.130271}", "{'[5, 0, 0, 0, 0, 5, 0, 1, 25, 11, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.129785}", "{'[5, 0, 0, 0, 0, 5, 0, 1, 25, 11, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.129797}", "{'[5, 0, 0, 0, 0, 5, 0, 1, 25, 11, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.129922}", "{'[5, 0, 0, 0, 0, 5, 0, 1, 25, 11, 2, 0, 0, 1, 0, 1, 0, 1]' : 0.129806}"]
returning from 'run': {'[5, 0, 0, 0, 0, 5, 0, 1, 25, 11, 2, 0, 0, 1, 0, 1, 0, 1]': ([0.152081, 0.151893, 0.151838, 0.151372, 0.133461, 0.131418, 0.131317, 0.131226, 0.131572, 0.131431, 0.131189, 0.131312, 0.131239, 0.131153, 0.131175, 0.131344, 0.130402, 0.129977, 0.129915, 0.130033, 0.130034, 0.130084, 0.129786, 0.129924, 0.130552, 0.130271, 0.129785, 0.129797, 0.129922, 0.129806], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 0, 0, 0, 0, 5, 0, 1, 25, 11, 2, 0, 0, 1, 0, 1, 0, 1]': ([0.152081, 0.151893, 0.151838, 0.151372, 0.133461, 0.131418, 0.131317, 0.131226, 0.131572, 0.131431, 0.131189, 0.131312, 0.131239, 0.131153, 0.131175, 0.131344, 0.130402, 0.129977, 0.129915, 0.130033, 0.130034, 0.130084, 0.129786, 0.129924, 0.130552, 0.130271, 0.129785, 0.129797, 0.129922, 0.129806], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	26
        Max loop nest depth: 	6
        Additions: 		1224
        Multiplications: 	528
        Divisions: 		0
        Logical: 		0
        Reads: 			2370
        Writes: 		408
        Comparisons:		26
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest58.exe __orio_perftest58.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest58.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest58.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest58.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest58.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	6
        Additions: 		161
        Multiplications: 	24
        Divisions: 		0
        Logical: 		0
        Reads: 			364
        Writes: 		103
        Comparisons:		16
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest59.exe __orio_perftest59.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest59.exe  
Program Test Output: 
{'[2, 5, 4, 6, 6, 6, 1, 1, 26, 0, 2, 6, 0, 0, 0, 1, 1, 1]' : 0.266794}
{'[2, 5, 4, 6, 6, 6, 1, 1, 26, 0, 2, 6, 0, 0, 0, 1, 1, 1]' : 0.265804}
{'[2, 5, 4, 6, 6, 6, 1, 1, 26, 0, 2, 6, 0, 0, 0, 1, 1, 1]' : 0.248132}
{'[2, 5, 4, 6, 6, 6, 1, 1, 26, 0, 2, 6, 0, 0, 0, 1, 1, 1]' : 0.223427}
{'[2, 5, 4, 6, 6, 6, 1, 1, 26, 0, 2, 6, 0, 0, 0, 1, 1, 1]' : 0.223573}
{'[2, 5, 4, 6, 6, 6, 1, 1, 26, 0, 2, 6, 0, 0, 0, 1, 1, 1]' : 0.223283}
{'[2, 5, 4, 6, 6, 6, 1, 1, 26, 0, 2, 6, 0, 0, 0, 1, 1, 1]' : 0.222832}
{'[2, 5, 4, 6, 6, 6, 1, 1, 26, 0, 2, 6, 0, 0, 0, 1, 1, 1]' : 0.223292}
{'[2, 5, 4, 6, 6, 6, 1, 1, 26, 0, 2, 6, 0, 0, 0, 1, 1, 1]' : 0.223828}
{'[2, 5, 4, 6, 6, 6, 1, 1, 26, 0, 2, 6, 0, 0, 0, 1, 1, 1]' : 0.22384}
{'[2, 5, 4, 6, 6, 6, 1, 1, 26, 0, 2, 6, 0, 0, 0, 1, 1, 1]' : 0.223239}
{'[2, 5, 4, 6, 6, 6, 1, 1, 26, 0, 2, 6, 0, 0, 0, 1, 1, 1]' : 0.222903}
{'[2, 5, 4, 6, 6, 6, 1, 1, 26, 0, 2, 6, 0, 0, 0, 1, 1, 1]' : 0.223594}
{'[2, 5, 4, 6, 6, 6, 1, 1, 26, 0, 2, 6, 0, 0, 0, 1, 1, 1]' : 0.223892}
{'[2, 5, 4, 6, 6, 6, 1, 1, 26, 0, 2, 6, 0, 0, 0, 1, 1, 1]' : 0.223874}
{'[2, 5, 4, 6, 6, 6, 1, 1, 26, 0, 2, 6, 0, 0, 0, 1, 1, 1]' : 0.223166}
{'[2, 5, 4, 6, 6, 6, 1, 1, 26, 0, 2, 6, 0, 0, 0, 1, 1, 1]' : 0.223405}
{'[2, 5, 4, 6, 6, 6, 1, 1, 26, 0, 2, 6, 0, 0, 0, 1, 1, 1]' : 0.223785}
{'[2, 5, 4, 6, 6, 6, 1, 1, 26, 0, 2, 6, 0, 0, 0, 1, 1, 1]' : 0.224115}
{'[2, 5, 4, 6, 6, 6, 1, 1, 26, 0, 2, 6, 0, 0, 0, 1, 1, 1]' : 0.223581}
{'[2, 5, 4, 6, 6, 6, 1, 1, 26, 0, 2, 6, 0, 0, 0, 1, 1, 1]' : 0.226109}
{'[2, 5, 4, 6, 6, 6, 1, 1, 26, 0, 2, 6, 0, 0, 0, 1, 1, 1]' : 0.234266}
{'[2, 5, 4, 6, 6, 6, 1, 1, 26, 0, 2, 6, 0, 0, 0, 1, 1, 1]' : 0.230162}
{'[2, 5, 4, 6, 6, 6, 1, 1, 26, 0, 2, 6, 0, 0, 0, 1, 1, 1]' : 0.230245}
{'[2, 5, 4, 6, 6, 6, 1, 1, 26, 0, 2, 6, 0, 0, 0, 1, 1, 1]' : 0.230365}
{'[2, 5, 4, 6, 6, 6, 1, 1, 26, 0, 2, 6, 0, 0, 0, 1, 1, 1]' : 0.229887}
{'[2, 5, 4, 6, 6, 6, 1, 1, 26, 0, 2, 6, 0, 0, 0, 1, 1, 1]' : 0.229252}
{'[2, 5, 4, 6, 6, 6, 1, 1, 26, 0, 2, 6, 0, 0, 0, 1, 1, 1]' : 0.229123}
{'[2, 5, 4, 6, 6, 6, 1, 1, 26, 0, 2, 6, 0, 0, 0, 1, 1, 1]' : 0.229105}
{'[2, 5, 4, 6, 6, 6, 1, 1, 26, 0, 2, 6, 0, 0, 0, 1, 1, 1]' : 0.230309}

out:
 ["{'[2, 5, 4, 6, 6, 6, 1, 1, 26, 0, 2, 6, 0, 0, 0, 1, 1, 1]' : 0.266794}", "{'[2, 5, 4, 6, 6, 6, 1, 1, 26, 0, 2, 6, 0, 0, 0, 1, 1, 1]' : 0.265804}", "{'[2, 5, 4, 6, 6, 6, 1, 1, 26, 0, 2, 6, 0, 0, 0, 1, 1, 1]' : 0.248132}", "{'[2, 5, 4, 6, 6, 6, 1, 1, 26, 0, 2, 6, 0, 0, 0, 1, 1, 1]' : 0.223427}", "{'[2, 5, 4, 6, 6, 6, 1, 1, 26, 0, 2, 6, 0, 0, 0, 1, 1, 1]' : 0.223573}", "{'[2, 5, 4, 6, 6, 6, 1, 1, 26, 0, 2, 6, 0, 0, 0, 1, 1, 1]' : 0.223283}", "{'[2, 5, 4, 6, 6, 6, 1, 1, 26, 0, 2, 6, 0, 0, 0, 1, 1, 1]' : 0.222832}", "{'[2, 5, 4, 6, 6, 6, 1, 1, 26, 0, 2, 6, 0, 0, 0, 1, 1, 1]' : 0.223292}", "{'[2, 5, 4, 6, 6, 6, 1, 1, 26, 0, 2, 6, 0, 0, 0, 1, 1, 1]' : 0.223828}", "{'[2, 5, 4, 6, 6, 6, 1, 1, 26, 0, 2, 6, 0, 0, 0, 1, 1, 1]' : 0.22384}", "{'[2, 5, 4, 6, 6, 6, 1, 1, 26, 0, 2, 6, 0, 0, 0, 1, 1, 1]' : 0.223239}", "{'[2, 5, 4, 6, 6, 6, 1, 1, 26, 0, 2, 6, 0, 0, 0, 1, 1, 1]' : 0.222903}", "{'[2, 5, 4, 6, 6, 6, 1, 1, 26, 0, 2, 6, 0, 0, 0, 1, 1, 1]' : 0.223594}", "{'[2, 5, 4, 6, 6, 6, 1, 1, 26, 0, 2, 6, 0, 0, 0, 1, 1, 1]' : 0.223892}", "{'[2, 5, 4, 6, 6, 6, 1, 1, 26, 0, 2, 6, 0, 0, 0, 1, 1, 1]' : 0.223874}", "{'[2, 5, 4, 6, 6, 6, 1, 1, 26, 0, 2, 6, 0, 0, 0, 1, 1, 1]' : 0.223166}", "{'[2, 5, 4, 6, 6, 6, 1, 1, 26, 0, 2, 6, 0, 0, 0, 1, 1, 1]' : 0.223405}", "{'[2, 5, 4, 6, 6, 6, 1, 1, 26, 0, 2, 6, 0, 0, 0, 1, 1, 1]' : 0.223785}", "{'[2, 5, 4, 6, 6, 6, 1, 1, 26, 0, 2, 6, 0, 0, 0, 1, 1, 1]' : 0.224115}", "{'[2, 5, 4, 6, 6, 6, 1, 1, 26, 0, 2, 6, 0, 0, 0, 1, 1, 1]' : 0.223581}", "{'[2, 5, 4, 6, 6, 6, 1, 1, 26, 0, 2, 6, 0, 0, 0, 1, 1, 1]' : 0.226109}", "{'[2, 5, 4, 6, 6, 6, 1, 1, 26, 0, 2, 6, 0, 0, 0, 1, 1, 1]' : 0.234266}", "{'[2, 5, 4, 6, 6, 6, 1, 1, 26, 0, 2, 6, 0, 0, 0, 1, 1, 1]' : 0.230162}", "{'[2, 5, 4, 6, 6, 6, 1, 1, 26, 0, 2, 6, 0, 0, 0, 1, 1, 1]' : 0.230245}", "{'[2, 5, 4, 6, 6, 6, 1, 1, 26, 0, 2, 6, 0, 0, 0, 1, 1, 1]' : 0.230365}", "{'[2, 5, 4, 6, 6, 6, 1, 1, 26, 0, 2, 6, 0, 0, 0, 1, 1, 1]' : 0.229887}", "{'[2, 5, 4, 6, 6, 6, 1, 1, 26, 0, 2, 6, 0, 0, 0, 1, 1, 1]' : 0.229252}", "{'[2, 5, 4, 6, 6, 6, 1, 1, 26, 0, 2, 6, 0, 0, 0, 1, 1, 1]' : 0.229123}", "{'[2, 5, 4, 6, 6, 6, 1, 1, 26, 0, 2, 6, 0, 0, 0, 1, 1, 1]' : 0.229105}", "{'[2, 5, 4, 6, 6, 6, 1, 1, 26, 0, 2, 6, 0, 0, 0, 1, 1, 1]' : 0.230309}"]
returning from 'run': {'[2, 5, 4, 6, 6, 6, 1, 1, 26, 0, 2, 6, 0, 0, 0, 1, 1, 1]': ([0.266794, 0.265804, 0.248132, 0.223427, 0.223573, 0.223283, 0.222832, 0.223292, 0.223828, 0.22384, 0.223239, 0.222903, 0.223594, 0.223892, 0.223874, 0.223166, 0.223405, 0.223785, 0.224115, 0.223581, 0.226109, 0.234266, 0.230162, 0.230245, 0.230365, 0.229887, 0.229252, 0.229123, 0.229105, 0.230309], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 5, 4, 6, 6, 6, 1, 1, 26, 0, 2, 6, 0, 0, 0, 1, 1, 1]': ([0.266794, 0.265804, 0.248132, 0.223427, 0.223573, 0.223283, 0.222832, 0.223292, 0.223828, 0.22384, 0.223239, 0.222903, 0.223594, 0.223892, 0.223874, 0.223166, 0.223405, 0.223785, 0.224115, 0.223581, 0.226109, 0.234266, 0.230162, 0.230245, 0.230365, 0.229887, 0.229252, 0.229123, 0.229105, 0.230309], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	5
        Additions: 		336
        Multiplications: 	118
        Divisions: 		0
        Logical: 		0
        Reads: 			873
        Writes: 		217
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest60.exe __orio_perftest60.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest60.exe  
Program Test Output: 
{'[0, 0, 2, 6, 0, 1, 0, 0, 14, 0, 2, 21, 0, 0, 2, 1, 0, 1]' : 0.185015}
{'[0, 0, 2, 6, 0, 1, 0, 0, 14, 0, 2, 21, 0, 0, 2, 1, 0, 1]' : 0.184804}
{'[0, 0, 2, 6, 0, 1, 0, 0, 14, 0, 2, 21, 0, 0, 2, 1, 0, 1]' : 0.184776}
{'[0, 0, 2, 6, 0, 1, 0, 0, 14, 0, 2, 21, 0, 0, 2, 1, 0, 1]' : 0.163212}
{'[0, 0, 2, 6, 0, 1, 0, 0, 14, 0, 2, 21, 0, 0, 2, 1, 0, 1]' : 0.15591}
{'[0, 0, 2, 6, 0, 1, 0, 0, 14, 0, 2, 21, 0, 0, 2, 1, 0, 1]' : 0.155847}
{'[0, 0, 2, 6, 0, 1, 0, 0, 14, 0, 2, 21, 0, 0, 2, 1, 0, 1]' : 0.155825}
{'[0, 0, 2, 6, 0, 1, 0, 0, 14, 0, 2, 21, 0, 0, 2, 1, 0, 1]' : 0.155837}
{'[0, 0, 2, 6, 0, 1, 0, 0, 14, 0, 2, 21, 0, 0, 2, 1, 0, 1]' : 0.155624}
{'[0, 0, 2, 6, 0, 1, 0, 0, 14, 0, 2, 21, 0, 0, 2, 1, 0, 1]' : 0.15598}
{'[0, 0, 2, 6, 0, 1, 0, 0, 14, 0, 2, 21, 0, 0, 2, 1, 0, 1]' : 0.155905}
{'[0, 0, 2, 6, 0, 1, 0, 0, 14, 0, 2, 21, 0, 0, 2, 1, 0, 1]' : 0.155781}
{'[0, 0, 2, 6, 0, 1, 0, 0, 14, 0, 2, 21, 0, 0, 2, 1, 0, 1]' : 0.155827}
{'[0, 0, 2, 6, 0, 1, 0, 0, 14, 0, 2, 21, 0, 0, 2, 1, 0, 1]' : 0.155819}
{'[0, 0, 2, 6, 0, 1, 0, 0, 14, 0, 2, 21, 0, 0, 2, 1, 0, 1]' : 0.155783}
{'[0, 0, 2, 6, 0, 1, 0, 0, 14, 0, 2, 21, 0, 0, 2, 1, 0, 1]' : 0.155835}
{'[0, 0, 2, 6, 0, 1, 0, 0, 14, 0, 2, 21, 0, 0, 2, 1, 0, 1]' : 0.155887}
{'[0, 0, 2, 6, 0, 1, 0, 0, 14, 0, 2, 21, 0, 0, 2, 1, 0, 1]' : 0.155941}
{'[0, 0, 2, 6, 0, 1, 0, 0, 14, 0, 2, 21, 0, 0, 2, 1, 0, 1]' : 0.155748}
{'[0, 0, 2, 6, 0, 1, 0, 0, 14, 0, 2, 21, 0, 0, 2, 1, 0, 1]' : 0.155694}
{'[0, 0, 2, 6, 0, 1, 0, 0, 14, 0, 2, 21, 0, 0, 2, 1, 0, 1]' : 0.15579}
{'[0, 0, 2, 6, 0, 1, 0, 0, 14, 0, 2, 21, 0, 0, 2, 1, 0, 1]' : 0.155788}
{'[0, 0, 2, 6, 0, 1, 0, 0, 14, 0, 2, 21, 0, 0, 2, 1, 0, 1]' : 0.155946}
{'[0, 0, 2, 6, 0, 1, 0, 0, 14, 0, 2, 21, 0, 0, 2, 1, 0, 1]' : 0.155991}
{'[0, 0, 2, 6, 0, 1, 0, 0, 14, 0, 2, 21, 0, 0, 2, 1, 0, 1]' : 0.156482}
{'[0, 0, 2, 6, 0, 1, 0, 0, 14, 0, 2, 21, 0, 0, 2, 1, 0, 1]' : 0.155785}
{'[0, 0, 2, 6, 0, 1, 0, 0, 14, 0, 2, 21, 0, 0, 2, 1, 0, 1]' : 0.15574}
{'[0, 0, 2, 6, 0, 1, 0, 0, 14, 0, 2, 21, 0, 0, 2, 1, 0, 1]' : 0.155799}
{'[0, 0, 2, 6, 0, 1, 0, 0, 14, 0, 2, 21, 0, 0, 2, 1, 0, 1]' : 0.155732}
{'[0, 0, 2, 6, 0, 1, 0, 0, 14, 0, 2, 21, 0, 0, 2, 1, 0, 1]' : 0.155809}

out:
 ["{'[0, 0, 2, 6, 0, 1, 0, 0, 14, 0, 2, 21, 0, 0, 2, 1, 0, 1]' : 0.185015}", "{'[0, 0, 2, 6, 0, 1, 0, 0, 14, 0, 2, 21, 0, 0, 2, 1, 0, 1]' : 0.184804}", "{'[0, 0, 2, 6, 0, 1, 0, 0, 14, 0, 2, 21, 0, 0, 2, 1, 0, 1]' : 0.184776}", "{'[0, 0, 2, 6, 0, 1, 0, 0, 14, 0, 2, 21, 0, 0, 2, 1, 0, 1]' : 0.163212}", "{'[0, 0, 2, 6, 0, 1, 0, 0, 14, 0, 2, 21, 0, 0, 2, 1, 0, 1]' : 0.15591}", "{'[0, 0, 2, 6, 0, 1, 0, 0, 14, 0, 2, 21, 0, 0, 2, 1, 0, 1]' : 0.155847}", "{'[0, 0, 2, 6, 0, 1, 0, 0, 14, 0, 2, 21, 0, 0, 2, 1, 0, 1]' : 0.155825}", "{'[0, 0, 2, 6, 0, 1, 0, 0, 14, 0, 2, 21, 0, 0, 2, 1, 0, 1]' : 0.155837}", "{'[0, 0, 2, 6, 0, 1, 0, 0, 14, 0, 2, 21, 0, 0, 2, 1, 0, 1]' : 0.155624}", "{'[0, 0, 2, 6, 0, 1, 0, 0, 14, 0, 2, 21, 0, 0, 2, 1, 0, 1]' : 0.15598}", "{'[0, 0, 2, 6, 0, 1, 0, 0, 14, 0, 2, 21, 0, 0, 2, 1, 0, 1]' : 0.155905}", "{'[0, 0, 2, 6, 0, 1, 0, 0, 14, 0, 2, 21, 0, 0, 2, 1, 0, 1]' : 0.155781}", "{'[0, 0, 2, 6, 0, 1, 0, 0, 14, 0, 2, 21, 0, 0, 2, 1, 0, 1]' : 0.155827}", "{'[0, 0, 2, 6, 0, 1, 0, 0, 14, 0, 2, 21, 0, 0, 2, 1, 0, 1]' : 0.155819}", "{'[0, 0, 2, 6, 0, 1, 0, 0, 14, 0, 2, 21, 0, 0, 2, 1, 0, 1]' : 0.155783}", "{'[0, 0, 2, 6, 0, 1, 0, 0, 14, 0, 2, 21, 0, 0, 2, 1, 0, 1]' : 0.155835}", "{'[0, 0, 2, 6, 0, 1, 0, 0, 14, 0, 2, 21, 0, 0, 2, 1, 0, 1]' : 0.155887}", "{'[0, 0, 2, 6, 0, 1, 0, 0, 14, 0, 2, 21, 0, 0, 2, 1, 0, 1]' : 0.155941}", "{'[0, 0, 2, 6, 0, 1, 0, 0, 14, 0, 2, 21, 0, 0, 2, 1, 0, 1]' : 0.155748}", "{'[0, 0, 2, 6, 0, 1, 0, 0, 14, 0, 2, 21, 0, 0, 2, 1, 0, 1]' : 0.155694}", "{'[0, 0, 2, 6, 0, 1, 0, 0, 14, 0, 2, 21, 0, 0, 2, 1, 0, 1]' : 0.15579}", "{'[0, 0, 2, 6, 0, 1, 0, 0, 14, 0, 2, 21, 0, 0, 2, 1, 0, 1]' : 0.155788}", "{'[0, 0, 2, 6, 0, 1, 0, 0, 14, 0, 2, 21, 0, 0, 2, 1, 0, 1]' : 0.155946}", "{'[0, 0, 2, 6, 0, 1, 0, 0, 14, 0, 2, 21, 0, 0, 2, 1, 0, 1]' : 0.155991}", "{'[0, 0, 2, 6, 0, 1, 0, 0, 14, 0, 2, 21, 0, 0, 2, 1, 0, 1]' : 0.156482}", "{'[0, 0, 2, 6, 0, 1, 0, 0, 14, 0, 2, 21, 0, 0, 2, 1, 0, 1]' : 0.155785}", "{'[0, 0, 2, 6, 0, 1, 0, 0, 14, 0, 2, 21, 0, 0, 2, 1, 0, 1]' : 0.15574}", "{'[0, 0, 2, 6, 0, 1, 0, 0, 14, 0, 2, 21, 0, 0, 2, 1, 0, 1]' : 0.155799}", "{'[0, 0, 2, 6, 0, 1, 0, 0, 14, 0, 2, 21, 0, 0, 2, 1, 0, 1]' : 0.155732}", "{'[0, 0, 2, 6, 0, 1, 0, 0, 14, 0, 2, 21, 0, 0, 2, 1, 0, 1]' : 0.155809}"]
returning from 'run': {'[0, 0, 2, 6, 0, 1, 0, 0, 14, 0, 2, 21, 0, 0, 2, 1, 0, 1]': ([0.185015, 0.184804, 0.184776, 0.163212, 0.15591, 0.155847, 0.155825, 0.155837, 0.155624, 0.15598, 0.155905, 0.155781, 0.155827, 0.155819, 0.155783, 0.155835, 0.155887, 0.155941, 0.155748, 0.155694, 0.15579, 0.155788, 0.155946, 0.155991, 0.156482, 0.155785, 0.15574, 0.155799, 0.155732, 0.155809], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 2, 6, 0, 1, 0, 0, 14, 0, 2, 21, 0, 0, 2, 1, 0, 1]': ([0.185015, 0.184804, 0.184776, 0.163212, 0.15591, 0.155847, 0.155825, 0.155837, 0.155624, 0.15598, 0.155905, 0.155781, 0.155827, 0.155819, 0.155783, 0.155835, 0.155887, 0.155941, 0.155748, 0.155694, 0.15579, 0.155788, 0.155946, 0.155991, 0.156482, 0.155785, 0.15574, 0.155799, 0.155732, 0.155809], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	76
        Max loop nest depth: 	6
        Additions: 		4644
        Multiplications: 	2088
        Divisions: 		0
        Logical: 		0
        Reads: 			8877
        Writes: 		1481
        Comparisons:		76
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest61.exe __orio_perftest61.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest61.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest61.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest61.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest61.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	6
        Additions: 		4296
        Multiplications: 	2112
        Divisions: 		0
        Logical: 		0
        Reads: 			8123
        Writes: 		1296
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest62.exe __orio_perftest62.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest62.exe  
Program Test Output: 
{'[2, 1, 3, 6, 4, 2, 0, 0, 0, 0, 2, 26, 2, 0, 0, 1, 1, 1]' : 0.185274}
{'[2, 1, 3, 6, 4, 2, 0, 0, 0, 0, 2, 26, 2, 0, 0, 1, 1, 1]' : 0.184749}
{'[2, 1, 3, 6, 4, 2, 0, 0, 0, 0, 2, 26, 2, 0, 0, 1, 1, 1]' : 0.18468}
{'[2, 1, 3, 6, 4, 2, 0, 0, 0, 0, 2, 26, 2, 0, 0, 1, 1, 1]' : 0.18466}
{'[2, 1, 3, 6, 4, 2, 0, 0, 0, 0, 2, 26, 2, 0, 0, 1, 1, 1]' : 0.184797}
{'[2, 1, 3, 6, 4, 2, 0, 0, 0, 0, 2, 26, 2, 0, 0, 1, 1, 1]' : 0.184559}
{'[2, 1, 3, 6, 4, 2, 0, 0, 0, 0, 2, 26, 2, 0, 0, 1, 1, 1]' : 0.184376}
{'[2, 1, 3, 6, 4, 2, 0, 0, 0, 0, 2, 26, 2, 0, 0, 1, 1, 1]' : 0.18488}
{'[2, 1, 3, 6, 4, 2, 0, 0, 0, 0, 2, 26, 2, 0, 0, 1, 1, 1]' : 0.184761}
{'[2, 1, 3, 6, 4, 2, 0, 0, 0, 0, 2, 26, 2, 0, 0, 1, 1, 1]' : 0.184555}
{'[2, 1, 3, 6, 4, 2, 0, 0, 0, 0, 2, 26, 2, 0, 0, 1, 1, 1]' : 0.185292}
{'[2, 1, 3, 6, 4, 2, 0, 0, 0, 0, 2, 26, 2, 0, 0, 1, 1, 1]' : 0.184773}
{'[2, 1, 3, 6, 4, 2, 0, 0, 0, 0, 2, 26, 2, 0, 0, 1, 1, 1]' : 0.185385}
{'[2, 1, 3, 6, 4, 2, 0, 0, 0, 0, 2, 26, 2, 0, 0, 1, 1, 1]' : 0.184485}
{'[2, 1, 3, 6, 4, 2, 0, 0, 0, 0, 2, 26, 2, 0, 0, 1, 1, 1]' : 0.185247}
{'[2, 1, 3, 6, 4, 2, 0, 0, 0, 0, 2, 26, 2, 0, 0, 1, 1, 1]' : 0.183787}
{'[2, 1, 3, 6, 4, 2, 0, 0, 0, 0, 2, 26, 2, 0, 0, 1, 1, 1]' : 0.185267}
{'[2, 1, 3, 6, 4, 2, 0, 0, 0, 0, 2, 26, 2, 0, 0, 1, 1, 1]' : 0.185967}
{'[2, 1, 3, 6, 4, 2, 0, 0, 0, 0, 2, 26, 2, 0, 0, 1, 1, 1]' : 0.1851}
{'[2, 1, 3, 6, 4, 2, 0, 0, 0, 0, 2, 26, 2, 0, 0, 1, 1, 1]' : 0.18468}
{'[2, 1, 3, 6, 4, 2, 0, 0, 0, 0, 2, 26, 2, 0, 0, 1, 1, 1]' : 0.185299}
{'[2, 1, 3, 6, 4, 2, 0, 0, 0, 0, 2, 26, 2, 0, 0, 1, 1, 1]' : 0.184506}
{'[2, 1, 3, 6, 4, 2, 0, 0, 0, 0, 2, 26, 2, 0, 0, 1, 1, 1]' : 0.184871}
{'[2, 1, 3, 6, 4, 2, 0, 0, 0, 0, 2, 26, 2, 0, 0, 1, 1, 1]' : 0.184523}
{'[2, 1, 3, 6, 4, 2, 0, 0, 0, 0, 2, 26, 2, 0, 0, 1, 1, 1]' : 0.185084}
{'[2, 1, 3, 6, 4, 2, 0, 0, 0, 0, 2, 26, 2, 0, 0, 1, 1, 1]' : 0.184892}
{'[2, 1, 3, 6, 4, 2, 0, 0, 0, 0, 2, 26, 2, 0, 0, 1, 1, 1]' : 0.185034}
{'[2, 1, 3, 6, 4, 2, 0, 0, 0, 0, 2, 26, 2, 0, 0, 1, 1, 1]' : 0.183956}
{'[2, 1, 3, 6, 4, 2, 0, 0, 0, 0, 2, 26, 2, 0, 0, 1, 1, 1]' : 0.186205}
{'[2, 1, 3, 6, 4, 2, 0, 0, 0, 0, 2, 26, 2, 0, 0, 1, 1, 1]' : 0.184617}

out:
 ["{'[2, 1, 3, 6, 4, 2, 0, 0, 0, 0, 2, 26, 2, 0, 0, 1, 1, 1]' : 0.185274}", "{'[2, 1, 3, 6, 4, 2, 0, 0, 0, 0, 2, 26, 2, 0, 0, 1, 1, 1]' : 0.184749}", "{'[2, 1, 3, 6, 4, 2, 0, 0, 0, 0, 2, 26, 2, 0, 0, 1, 1, 1]' : 0.18468}", "{'[2, 1, 3, 6, 4, 2, 0, 0, 0, 0, 2, 26, 2, 0, 0, 1, 1, 1]' : 0.18466}", "{'[2, 1, 3, 6, 4, 2, 0, 0, 0, 0, 2, 26, 2, 0, 0, 1, 1, 1]' : 0.184797}", "{'[2, 1, 3, 6, 4, 2, 0, 0, 0, 0, 2, 26, 2, 0, 0, 1, 1, 1]' : 0.184559}", "{'[2, 1, 3, 6, 4, 2, 0, 0, 0, 0, 2, 26, 2, 0, 0, 1, 1, 1]' : 0.184376}", "{'[2, 1, 3, 6, 4, 2, 0, 0, 0, 0, 2, 26, 2, 0, 0, 1, 1, 1]' : 0.18488}", "{'[2, 1, 3, 6, 4, 2, 0, 0, 0, 0, 2, 26, 2, 0, 0, 1, 1, 1]' : 0.184761}", "{'[2, 1, 3, 6, 4, 2, 0, 0, 0, 0, 2, 26, 2, 0, 0, 1, 1, 1]' : 0.184555}", "{'[2, 1, 3, 6, 4, 2, 0, 0, 0, 0, 2, 26, 2, 0, 0, 1, 1, 1]' : 0.185292}", "{'[2, 1, 3, 6, 4, 2, 0, 0, 0, 0, 2, 26, 2, 0, 0, 1, 1, 1]' : 0.184773}", "{'[2, 1, 3, 6, 4, 2, 0, 0, 0, 0, 2, 26, 2, 0, 0, 1, 1, 1]' : 0.185385}", "{'[2, 1, 3, 6, 4, 2, 0, 0, 0, 0, 2, 26, 2, 0, 0, 1, 1, 1]' : 0.184485}", "{'[2, 1, 3, 6, 4, 2, 0, 0, 0, 0, 2, 26, 2, 0, 0, 1, 1, 1]' : 0.185247}", "{'[2, 1, 3, 6, 4, 2, 0, 0, 0, 0, 2, 26, 2, 0, 0, 1, 1, 1]' : 0.183787}", "{'[2, 1, 3, 6, 4, 2, 0, 0, 0, 0, 2, 26, 2, 0, 0, 1, 1, 1]' : 0.185267}", "{'[2, 1, 3, 6, 4, 2, 0, 0, 0, 0, 2, 26, 2, 0, 0, 1, 1, 1]' : 0.185967}", "{'[2, 1, 3, 6, 4, 2, 0, 0, 0, 0, 2, 26, 2, 0, 0, 1, 1, 1]' : 0.1851}", "{'[2, 1, 3, 6, 4, 2, 0, 0, 0, 0, 2, 26, 2, 0, 0, 1, 1, 1]' : 0.18468}", "{'[2, 1, 3, 6, 4, 2, 0, 0, 0, 0, 2, 26, 2, 0, 0, 1, 1, 1]' : 0.185299}", "{'[2, 1, 3, 6, 4, 2, 0, 0, 0, 0, 2, 26, 2, 0, 0, 1, 1, 1]' : 0.184506}", "{'[2, 1, 3, 6, 4, 2, 0, 0, 0, 0, 2, 26, 2, 0, 0, 1, 1, 1]' : 0.184871}", "{'[2, 1, 3, 6, 4, 2, 0, 0, 0, 0, 2, 26, 2, 0, 0, 1, 1, 1]' : 0.184523}", "{'[2, 1, 3, 6, 4, 2, 0, 0, 0, 0, 2, 26, 2, 0, 0, 1, 1, 1]' : 0.185084}", "{'[2, 1, 3, 6, 4, 2, 0, 0, 0, 0, 2, 26, 2, 0, 0, 1, 1, 1]' : 0.184892}", "{'[2, 1, 3, 6, 4, 2, 0, 0, 0, 0, 2, 26, 2, 0, 0, 1, 1, 1]' : 0.185034}", "{'[2, 1, 3, 6, 4, 2, 0, 0, 0, 0, 2, 26, 2, 0, 0, 1, 1, 1]' : 0.183956}", "{'[2, 1, 3, 6, 4, 2, 0, 0, 0, 0, 2, 26, 2, 0, 0, 1, 1, 1]' : 0.186205}", "{'[2, 1, 3, 6, 4, 2, 0, 0, 0, 0, 2, 26, 2, 0, 0, 1, 1, 1]' : 0.184617}"]
returning from 'run': {'[2, 1, 3, 6, 4, 2, 0, 0, 0, 0, 2, 26, 2, 0, 0, 1, 1, 1]': ([0.185274, 0.184749, 0.18468, 0.18466, 0.184797, 0.184559, 0.184376, 0.18488, 0.184761, 0.184555, 0.185292, 0.184773, 0.185385, 0.184485, 0.185247, 0.183787, 0.185267, 0.185967, 0.1851, 0.18468, 0.185299, 0.184506, 0.184871, 0.184523, 0.185084, 0.184892, 0.185034, 0.183956, 0.186205, 0.184617], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 1, 3, 6, 4, 2, 0, 0, 0, 0, 2, 26, 2, 0, 0, 1, 1, 1]': ([0.185274, 0.184749, 0.18468, 0.18466, 0.184797, 0.184559, 0.184376, 0.18488, 0.184761, 0.184555, 0.185292, 0.184773, 0.185385, 0.184485, 0.185247, 0.183787, 0.185267, 0.185967, 0.1851, 0.18468, 0.185299, 0.184506, 0.184871, 0.184523, 0.185084, 0.184892, 0.185034, 0.183956, 0.186205, 0.184617], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	5
        Additions: 		79
        Multiplications: 	10
        Divisions: 		0
        Logical: 		0
        Reads: 			177
        Writes: 		54
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest63.exe __orio_perftest63.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest63.exe  
Program Test Output: 
{'[0, 1, 2, 2, 4, 3, 0, 0, 24, 0, 2, 0, 0, 0, 0, 0, 0, 0]' : 0.298421}
{'[0, 1, 2, 2, 4, 3, 0, 0, 24, 0, 2, 0, 0, 0, 0, 0, 0, 0]' : 0.298403}
{'[0, 1, 2, 2, 4, 3, 0, 0, 24, 0, 2, 0, 0, 0, 0, 0, 0, 0]' : 0.263185}
{'[0, 1, 2, 2, 4, 3, 0, 0, 24, 0, 2, 0, 0, 0, 0, 0, 0, 0]' : 0.250318}
{'[0, 1, 2, 2, 4, 3, 0, 0, 24, 0, 2, 0, 0, 0, 0, 0, 0, 0]' : 0.250133}
{'[0, 1, 2, 2, 4, 3, 0, 0, 24, 0, 2, 0, 0, 0, 0, 0, 0, 0]' : 0.250232}
{'[0, 1, 2, 2, 4, 3, 0, 0, 24, 0, 2, 0, 0, 0, 0, 0, 0, 0]' : 0.250706}
{'[0, 1, 2, 2, 4, 3, 0, 0, 24, 0, 2, 0, 0, 0, 0, 0, 0, 0]' : 0.250283}
{'[0, 1, 2, 2, 4, 3, 0, 0, 24, 0, 2, 0, 0, 0, 0, 0, 0, 0]' : 0.250294}
{'[0, 1, 2, 2, 4, 3, 0, 0, 24, 0, 2, 0, 0, 0, 0, 0, 0, 0]' : 0.250159}
{'[0, 1, 2, 2, 4, 3, 0, 0, 24, 0, 2, 0, 0, 0, 0, 0, 0, 0]' : 0.250218}
{'[0, 1, 2, 2, 4, 3, 0, 0, 24, 0, 2, 0, 0, 0, 0, 0, 0, 0]' : 0.250795}
{'[0, 1, 2, 2, 4, 3, 0, 0, 24, 0, 2, 0, 0, 0, 0, 0, 0, 0]' : 0.250244}
{'[0, 1, 2, 2, 4, 3, 0, 0, 24, 0, 2, 0, 0, 0, 0, 0, 0, 0]' : 0.250312}
{'[0, 1, 2, 2, 4, 3, 0, 0, 24, 0, 2, 0, 0, 0, 0, 0, 0, 0]' : 0.250083}
{'[0, 1, 2, 2, 4, 3, 0, 0, 24, 0, 2, 0, 0, 0, 0, 0, 0, 0]' : 0.250786}
{'[0, 1, 2, 2, 4, 3, 0, 0, 24, 0, 2, 0, 0, 0, 0, 0, 0, 0]' : 0.250261}
{'[0, 1, 2, 2, 4, 3, 0, 0, 24, 0, 2, 0, 0, 0, 0, 0, 0, 0]' : 0.250732}
{'[0, 1, 2, 2, 4, 3, 0, 0, 24, 0, 2, 0, 0, 0, 0, 0, 0, 0]' : 0.250329}
{'[0, 1, 2, 2, 4, 3, 0, 0, 24, 0, 2, 0, 0, 0, 0, 0, 0, 0]' : 0.250493}
{'[0, 1, 2, 2, 4, 3, 0, 0, 24, 0, 2, 0, 0, 0, 0, 0, 0, 0]' : 0.250375}
{'[0, 1, 2, 2, 4, 3, 0, 0, 24, 0, 2, 0, 0, 0, 0, 0, 0, 0]' : 0.250125}
{'[0, 1, 2, 2, 4, 3, 0, 0, 24, 0, 2, 0, 0, 0, 0, 0, 0, 0]' : 0.250137}
{'[0, 1, 2, 2, 4, 3, 0, 0, 24, 0, 2, 0, 0, 0, 0, 0, 0, 0]' : 0.250232}
{'[0, 1, 2, 2, 4, 3, 0, 0, 24, 0, 2, 0, 0, 0, 0, 0, 0, 0]' : 0.25075}
{'[0, 1, 2, 2, 4, 3, 0, 0, 24, 0, 2, 0, 0, 0, 0, 0, 0, 0]' : 0.250725}
{'[0, 1, 2, 2, 4, 3, 0, 0, 24, 0, 2, 0, 0, 0, 0, 0, 0, 0]' : 0.250241}
{'[0, 1, 2, 2, 4, 3, 0, 0, 24, 0, 2, 0, 0, 0, 0, 0, 0, 0]' : 0.250372}
{'[0, 1, 2, 2, 4, 3, 0, 0, 24, 0, 2, 0, 0, 0, 0, 0, 0, 0]' : 0.250578}
{'[0, 1, 2, 2, 4, 3, 0, 0, 24, 0, 2, 0, 0, 0, 0, 0, 0, 0]' : 0.250375}

out:
 ["{'[0, 1, 2, 2, 4, 3, 0, 0, 24, 0, 2, 0, 0, 0, 0, 0, 0, 0]' : 0.298421}", "{'[0, 1, 2, 2, 4, 3, 0, 0, 24, 0, 2, 0, 0, 0, 0, 0, 0, 0]' : 0.298403}", "{'[0, 1, 2, 2, 4, 3, 0, 0, 24, 0, 2, 0, 0, 0, 0, 0, 0, 0]' : 0.263185}", "{'[0, 1, 2, 2, 4, 3, 0, 0, 24, 0, 2, 0, 0, 0, 0, 0, 0, 0]' : 0.250318}", "{'[0, 1, 2, 2, 4, 3, 0, 0, 24, 0, 2, 0, 0, 0, 0, 0, 0, 0]' : 0.250133}", "{'[0, 1, 2, 2, 4, 3, 0, 0, 24, 0, 2, 0, 0, 0, 0, 0, 0, 0]' : 0.250232}", "{'[0, 1, 2, 2, 4, 3, 0, 0, 24, 0, 2, 0, 0, 0, 0, 0, 0, 0]' : 0.250706}", "{'[0, 1, 2, 2, 4, 3, 0, 0, 24, 0, 2, 0, 0, 0, 0, 0, 0, 0]' : 0.250283}", "{'[0, 1, 2, 2, 4, 3, 0, 0, 24, 0, 2, 0, 0, 0, 0, 0, 0, 0]' : 0.250294}", "{'[0, 1, 2, 2, 4, 3, 0, 0, 24, 0, 2, 0, 0, 0, 0, 0, 0, 0]' : 0.250159}", "{'[0, 1, 2, 2, 4, 3, 0, 0, 24, 0, 2, 0, 0, 0, 0, 0, 0, 0]' : 0.250218}", "{'[0, 1, 2, 2, 4, 3, 0, 0, 24, 0, 2, 0, 0, 0, 0, 0, 0, 0]' : 0.250795}", "{'[0, 1, 2, 2, 4, 3, 0, 0, 24, 0, 2, 0, 0, 0, 0, 0, 0, 0]' : 0.250244}", "{'[0, 1, 2, 2, 4, 3, 0, 0, 24, 0, 2, 0, 0, 0, 0, 0, 0, 0]' : 0.250312}", "{'[0, 1, 2, 2, 4, 3, 0, 0, 24, 0, 2, 0, 0, 0, 0, 0, 0, 0]' : 0.250083}", "{'[0, 1, 2, 2, 4, 3, 0, 0, 24, 0, 2, 0, 0, 0, 0, 0, 0, 0]' : 0.250786}", "{'[0, 1, 2, 2, 4, 3, 0, 0, 24, 0, 2, 0, 0, 0, 0, 0, 0, 0]' : 0.250261}", "{'[0, 1, 2, 2, 4, 3, 0, 0, 24, 0, 2, 0, 0, 0, 0, 0, 0, 0]' : 0.250732}", "{'[0, 1, 2, 2, 4, 3, 0, 0, 24, 0, 2, 0, 0, 0, 0, 0, 0, 0]' : 0.250329}", "{'[0, 1, 2, 2, 4, 3, 0, 0, 24, 0, 2, 0, 0, 0, 0, 0, 0, 0]' : 0.250493}", "{'[0, 1, 2, 2, 4, 3, 0, 0, 24, 0, 2, 0, 0, 0, 0, 0, 0, 0]' : 0.250375}", "{'[0, 1, 2, 2, 4, 3, 0, 0, 24, 0, 2, 0, 0, 0, 0, 0, 0, 0]' : 0.250125}", "{'[0, 1, 2, 2, 4, 3, 0, 0, 24, 0, 2, 0, 0, 0, 0, 0, 0, 0]' : 0.250137}", "{'[0, 1, 2, 2, 4, 3, 0, 0, 24, 0, 2, 0, 0, 0, 0, 0, 0, 0]' : 0.250232}", "{'[0, 1, 2, 2, 4, 3, 0, 0, 24, 0, 2, 0, 0, 0, 0, 0, 0, 0]' : 0.25075}", "{'[0, 1, 2, 2, 4, 3, 0, 0, 24, 0, 2, 0, 0, 0, 0, 0, 0, 0]' : 0.250725}", "{'[0, 1, 2, 2, 4, 3, 0, 0, 24, 0, 2, 0, 0, 0, 0, 0, 0, 0]' : 0.250241}", "{'[0, 1, 2, 2, 4, 3, 0, 0, 24, 0, 2, 0, 0, 0, 0, 0, 0, 0]' : 0.250372}", "{'[0, 1, 2, 2, 4, 3, 0, 0, 24, 0, 2, 0, 0, 0, 0, 0, 0, 0]' : 0.250578}", "{'[0, 1, 2, 2, 4, 3, 0, 0, 24, 0, 2, 0, 0, 0, 0, 0, 0, 0]' : 0.250375}"]
returning from 'run': {'[0, 1, 2, 2, 4, 3, 0, 0, 24, 0, 2, 0, 0, 0, 0, 0, 0, 0]': ([0.298421, 0.298403, 0.263185, 0.250318, 0.250133, 0.250232, 0.250706, 0.250283, 0.250294, 0.250159, 0.250218, 0.250795, 0.250244, 0.250312, 0.250083, 0.250786, 0.250261, 0.250732, 0.250329, 0.250493, 0.250375, 0.250125, 0.250137, 0.250232, 0.25075, 0.250725, 0.250241, 0.250372, 0.250578, 0.250375], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 1, 2, 2, 4, 3, 0, 0, 24, 0, 2, 0, 0, 0, 0, 0, 0, 0]': ([0.298421, 0.298403, 0.263185, 0.250318, 0.250133, 0.250232, 0.250706, 0.250283, 0.250294, 0.250159, 0.250218, 0.250795, 0.250244, 0.250312, 0.250083, 0.250786, 0.250261, 0.250732, 0.250329, 0.250493, 0.250375, 0.250125, 0.250137, 0.250232, 0.25075, 0.250725, 0.250241, 0.250372, 0.250578, 0.250375], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		316
        Multiplications: 	96
        Divisions: 		0
        Logical: 		0
        Reads: 			653
        Writes: 		110
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest64.exe __orio_perftest64.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest64.exe  
Program Test Output: 
{'[2, 0, 2, 3, 2, 3, 1, 0, 27, 0, 2, 10, 0, 0, 2, 0, 1, 0]' : 0.316088}
{'[2, 0, 2, 3, 2, 3, 1, 0, 27, 0, 2, 10, 0, 0, 2, 0, 1, 0]' : 0.311988}
{'[2, 0, 2, 3, 2, 3, 1, 0, 27, 0, 2, 10, 0, 0, 2, 0, 1, 0]' : 0.267164}
{'[2, 0, 2, 3, 2, 3, 1, 0, 27, 0, 2, 10, 0, 0, 2, 0, 1, 0]' : 0.267039}
{'[2, 0, 2, 3, 2, 3, 1, 0, 27, 0, 2, 10, 0, 0, 2, 0, 1, 0]' : 0.267232}
{'[2, 0, 2, 3, 2, 3, 1, 0, 27, 0, 2, 10, 0, 0, 2, 0, 1, 0]' : 0.26753}
{'[2, 0, 2, 3, 2, 3, 1, 0, 27, 0, 2, 10, 0, 0, 2, 0, 1, 0]' : 0.267195}
{'[2, 0, 2, 3, 2, 3, 1, 0, 27, 0, 2, 10, 0, 0, 2, 0, 1, 0]' : 0.267267}
{'[2, 0, 2, 3, 2, 3, 1, 0, 27, 0, 2, 10, 0, 0, 2, 0, 1, 0]' : 0.26736}
{'[2, 0, 2, 3, 2, 3, 1, 0, 27, 0, 2, 10, 0, 0, 2, 0, 1, 0]' : 0.267274}
{'[2, 0, 2, 3, 2, 3, 1, 0, 27, 0, 2, 10, 0, 0, 2, 0, 1, 0]' : 0.267121}
{'[2, 0, 2, 3, 2, 3, 1, 0, 27, 0, 2, 10, 0, 0, 2, 0, 1, 0]' : 0.266975}
{'[2, 0, 2, 3, 2, 3, 1, 0, 27, 0, 2, 10, 0, 0, 2, 0, 1, 0]' : 0.26694}
{'[2, 0, 2, 3, 2, 3, 1, 0, 27, 0, 2, 10, 0, 0, 2, 0, 1, 0]' : 0.267661}
{'[2, 0, 2, 3, 2, 3, 1, 0, 27, 0, 2, 10, 0, 0, 2, 0, 1, 0]' : 0.267218}
{'[2, 0, 2, 3, 2, 3, 1, 0, 27, 0, 2, 10, 0, 0, 2, 0, 1, 0]' : 0.266927}
{'[2, 0, 2, 3, 2, 3, 1, 0, 27, 0, 2, 10, 0, 0, 2, 0, 1, 0]' : 0.267177}
{'[2, 0, 2, 3, 2, 3, 1, 0, 27, 0, 2, 10, 0, 0, 2, 0, 1, 0]' : 0.267563}
{'[2, 0, 2, 3, 2, 3, 1, 0, 27, 0, 2, 10, 0, 0, 2, 0, 1, 0]' : 0.26708}
{'[2, 0, 2, 3, 2, 3, 1, 0, 27, 0, 2, 10, 0, 0, 2, 0, 1, 0]' : 0.267191}
{'[2, 0, 2, 3, 2, 3, 1, 0, 27, 0, 2, 10, 0, 0, 2, 0, 1, 0]' : 0.267159}
{'[2, 0, 2, 3, 2, 3, 1, 0, 27, 0, 2, 10, 0, 0, 2, 0, 1, 0]' : 0.267491}
{'[2, 0, 2, 3, 2, 3, 1, 0, 27, 0, 2, 10, 0, 0, 2, 0, 1, 0]' : 0.267463}
{'[2, 0, 2, 3, 2, 3, 1, 0, 27, 0, 2, 10, 0, 0, 2, 0, 1, 0]' : 0.2671}
{'[2, 0, 2, 3, 2, 3, 1, 0, 27, 0, 2, 10, 0, 0, 2, 0, 1, 0]' : 0.267139}
{'[2, 0, 2, 3, 2, 3, 1, 0, 27, 0, 2, 10, 0, 0, 2, 0, 1, 0]' : 0.267464}
{'[2, 0, 2, 3, 2, 3, 1, 0, 27, 0, 2, 10, 0, 0, 2, 0, 1, 0]' : 0.267258}
{'[2, 0, 2, 3, 2, 3, 1, 0, 27, 0, 2, 10, 0, 0, 2, 0, 1, 0]' : 0.267219}
{'[2, 0, 2, 3, 2, 3, 1, 0, 27, 0, 2, 10, 0, 0, 2, 0, 1, 0]' : 0.267353}
{'[2, 0, 2, 3, 2, 3, 1, 0, 27, 0, 2, 10, 0, 0, 2, 0, 1, 0]' : 0.267567}

out:
 ["{'[2, 0, 2, 3, 2, 3, 1, 0, 27, 0, 2, 10, 0, 0, 2, 0, 1, 0]' : 0.316088}", "{'[2, 0, 2, 3, 2, 3, 1, 0, 27, 0, 2, 10, 0, 0, 2, 0, 1, 0]' : 0.311988}", "{'[2, 0, 2, 3, 2, 3, 1, 0, 27, 0, 2, 10, 0, 0, 2, 0, 1, 0]' : 0.267164}", "{'[2, 0, 2, 3, 2, 3, 1, 0, 27, 0, 2, 10, 0, 0, 2, 0, 1, 0]' : 0.267039}", "{'[2, 0, 2, 3, 2, 3, 1, 0, 27, 0, 2, 10, 0, 0, 2, 0, 1, 0]' : 0.267232}", "{'[2, 0, 2, 3, 2, 3, 1, 0, 27, 0, 2, 10, 0, 0, 2, 0, 1, 0]' : 0.26753}", "{'[2, 0, 2, 3, 2, 3, 1, 0, 27, 0, 2, 10, 0, 0, 2, 0, 1, 0]' : 0.267195}", "{'[2, 0, 2, 3, 2, 3, 1, 0, 27, 0, 2, 10, 0, 0, 2, 0, 1, 0]' : 0.267267}", "{'[2, 0, 2, 3, 2, 3, 1, 0, 27, 0, 2, 10, 0, 0, 2, 0, 1, 0]' : 0.26736}", "{'[2, 0, 2, 3, 2, 3, 1, 0, 27, 0, 2, 10, 0, 0, 2, 0, 1, 0]' : 0.267274}", "{'[2, 0, 2, 3, 2, 3, 1, 0, 27, 0, 2, 10, 0, 0, 2, 0, 1, 0]' : 0.267121}", "{'[2, 0, 2, 3, 2, 3, 1, 0, 27, 0, 2, 10, 0, 0, 2, 0, 1, 0]' : 0.266975}", "{'[2, 0, 2, 3, 2, 3, 1, 0, 27, 0, 2, 10, 0, 0, 2, 0, 1, 0]' : 0.26694}", "{'[2, 0, 2, 3, 2, 3, 1, 0, 27, 0, 2, 10, 0, 0, 2, 0, 1, 0]' : 0.267661}", "{'[2, 0, 2, 3, 2, 3, 1, 0, 27, 0, 2, 10, 0, 0, 2, 0, 1, 0]' : 0.267218}", "{'[2, 0, 2, 3, 2, 3, 1, 0, 27, 0, 2, 10, 0, 0, 2, 0, 1, 0]' : 0.266927}", "{'[2, 0, 2, 3, 2, 3, 1, 0, 27, 0, 2, 10, 0, 0, 2, 0, 1, 0]' : 0.267177}", "{'[2, 0, 2, 3, 2, 3, 1, 0, 27, 0, 2, 10, 0, 0, 2, 0, 1, 0]' : 0.267563}", "{'[2, 0, 2, 3, 2, 3, 1, 0, 27, 0, 2, 10, 0, 0, 2, 0, 1, 0]' : 0.26708}", "{'[2, 0, 2, 3, 2, 3, 1, 0, 27, 0, 2, 10, 0, 0, 2, 0, 1, 0]' : 0.267191}", "{'[2, 0, 2, 3, 2, 3, 1, 0, 27, 0, 2, 10, 0, 0, 2, 0, 1, 0]' : 0.267159}", "{'[2, 0, 2, 3, 2, 3, 1, 0, 27, 0, 2, 10, 0, 0, 2, 0, 1, 0]' : 0.267491}", "{'[2, 0, 2, 3, 2, 3, 1, 0, 27, 0, 2, 10, 0, 0, 2, 0, 1, 0]' : 0.267463}", "{'[2, 0, 2, 3, 2, 3, 1, 0, 27, 0, 2, 10, 0, 0, 2, 0, 1, 0]' : 0.2671}", "{'[2, 0, 2, 3, 2, 3, 1, 0, 27, 0, 2, 10, 0, 0, 2, 0, 1, 0]' : 0.267139}", "{'[2, 0, 2, 3, 2, 3, 1, 0, 27, 0, 2, 10, 0, 0, 2, 0, 1, 0]' : 0.267464}", "{'[2, 0, 2, 3, 2, 3, 1, 0, 27, 0, 2, 10, 0, 0, 2, 0, 1, 0]' : 0.267258}", "{'[2, 0, 2, 3, 2, 3, 1, 0, 27, 0, 2, 10, 0, 0, 2, 0, 1, 0]' : 0.267219}", "{'[2, 0, 2, 3, 2, 3, 1, 0, 27, 0, 2, 10, 0, 0, 2, 0, 1, 0]' : 0.267353}", "{'[2, 0, 2, 3, 2, 3, 1, 0, 27, 0, 2, 10, 0, 0, 2, 0, 1, 0]' : 0.267567}"]
returning from 'run': {'[2, 0, 2, 3, 2, 3, 1, 0, 27, 0, 2, 10, 0, 0, 2, 0, 1, 0]': ([0.316088, 0.311988, 0.267164, 0.267039, 0.267232, 0.26753, 0.267195, 0.267267, 0.26736, 0.267274, 0.267121, 0.266975, 0.26694, 0.267661, 0.267218, 0.266927, 0.267177, 0.267563, 0.26708, 0.267191, 0.267159, 0.267491, 0.267463, 0.2671, 0.267139, 0.267464, 0.267258, 0.267219, 0.267353, 0.267567], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 0, 2, 3, 2, 3, 1, 0, 27, 0, 2, 10, 0, 0, 2, 0, 1, 0]': ([0.316088, 0.311988, 0.267164, 0.267039, 0.267232, 0.26753, 0.267195, 0.267267, 0.26736, 0.267274, 0.267121, 0.266975, 0.26694, 0.267661, 0.267218, 0.266927, 0.267177, 0.267563, 0.26708, 0.267191, 0.267159, 0.267491, 0.267463, 0.2671, 0.267139, 0.267464, 0.267258, 0.267219, 0.267353, 0.267567], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	34
        Max loop nest depth: 	5
        Additions: 		950
        Multiplications: 	216
        Divisions: 		0
        Logical: 		0
        Reads: 			1602
        Writes: 		219
        Comparisons:		34
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest65.exe __orio_perftest65.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest65.exe  
Program Test Output: 
{'[2, 1, 6, 6, 0, 4, 0, 1, 14, 7, 2, 0, 0, 0, 1, 0, 0, 0]' : 0.160692}
{'[2, 1, 6, 6, 0, 4, 0, 1, 14, 7, 2, 0, 0, 0, 1, 0, 0, 0]' : 0.160702}
{'[2, 1, 6, 6, 0, 4, 0, 1, 14, 7, 2, 0, 0, 0, 1, 0, 0, 0]' : 0.160481}
{'[2, 1, 6, 6, 0, 4, 0, 1, 14, 7, 2, 0, 0, 0, 1, 0, 0, 0]' : 0.143791}
{'[2, 1, 6, 6, 0, 4, 0, 1, 14, 7, 2, 0, 0, 0, 1, 0, 0, 0]' : 0.138738}
{'[2, 1, 6, 6, 0, 4, 0, 1, 14, 7, 2, 0, 0, 0, 1, 0, 0, 0]' : 0.139285}
{'[2, 1, 6, 6, 0, 4, 0, 1, 14, 7, 2, 0, 0, 0, 1, 0, 0, 0]' : 0.138877}
{'[2, 1, 6, 6, 0, 4, 0, 1, 14, 7, 2, 0, 0, 0, 1, 0, 0, 0]' : 0.138929}
{'[2, 1, 6, 6, 0, 4, 0, 1, 14, 7, 2, 0, 0, 0, 1, 0, 0, 0]' : 0.138657}
{'[2, 1, 6, 6, 0, 4, 0, 1, 14, 7, 2, 0, 0, 0, 1, 0, 0, 0]' : 0.139355}
{'[2, 1, 6, 6, 0, 4, 0, 1, 14, 7, 2, 0, 0, 0, 1, 0, 0, 0]' : 0.138947}
{'[2, 1, 6, 6, 0, 4, 0, 1, 14, 7, 2, 0, 0, 0, 1, 0, 0, 0]' : 0.13894}
{'[2, 1, 6, 6, 0, 4, 0, 1, 14, 7, 2, 0, 0, 0, 1, 0, 0, 0]' : 0.13868}
{'[2, 1, 6, 6, 0, 4, 0, 1, 14, 7, 2, 0, 0, 0, 1, 0, 0, 0]' : 0.139035}
{'[2, 1, 6, 6, 0, 4, 0, 1, 14, 7, 2, 0, 0, 0, 1, 0, 0, 0]' : 0.138866}
{'[2, 1, 6, 6, 0, 4, 0, 1, 14, 7, 2, 0, 0, 0, 1, 0, 0, 0]' : 0.139042}
{'[2, 1, 6, 6, 0, 4, 0, 1, 14, 7, 2, 0, 0, 0, 1, 0, 0, 0]' : 0.138732}
{'[2, 1, 6, 6, 0, 4, 0, 1, 14, 7, 2, 0, 0, 0, 1, 0, 0, 0]' : 0.139321}
{'[2, 1, 6, 6, 0, 4, 0, 1, 14, 7, 2, 0, 0, 0, 1, 0, 0, 0]' : 0.138948}
{'[2, 1, 6, 6, 0, 4, 0, 1, 14, 7, 2, 0, 0, 0, 1, 0, 0, 0]' : 0.139196}
{'[2, 1, 6, 6, 0, 4, 0, 1, 14, 7, 2, 0, 0, 0, 1, 0, 0, 0]' : 0.138879}
{'[2, 1, 6, 6, 0, 4, 0, 1, 14, 7, 2, 0, 0, 0, 1, 0, 0, 0]' : 0.138859}
{'[2, 1, 6, 6, 0, 4, 0, 1, 14, 7, 2, 0, 0, 0, 1, 0, 0, 0]' : 0.138837}
{'[2, 1, 6, 6, 0, 4, 0, 1, 14, 7, 2, 0, 0, 0, 1, 0, 0, 0]' : 0.138938}
{'[2, 1, 6, 6, 0, 4, 0, 1, 14, 7, 2, 0, 0, 0, 1, 0, 0, 0]' : 0.138953}
{'[2, 1, 6, 6, 0, 4, 0, 1, 14, 7, 2, 0, 0, 0, 1, 0, 0, 0]' : 0.139128}
{'[2, 1, 6, 6, 0, 4, 0, 1, 14, 7, 2, 0, 0, 0, 1, 0, 0, 0]' : 0.139219}
{'[2, 1, 6, 6, 0, 4, 0, 1, 14, 7, 2, 0, 0, 0, 1, 0, 0, 0]' : 0.139249}
{'[2, 1, 6, 6, 0, 4, 0, 1, 14, 7, 2, 0, 0, 0, 1, 0, 0, 0]' : 0.138784}
{'[2, 1, 6, 6, 0, 4, 0, 1, 14, 7, 2, 0, 0, 0, 1, 0, 0, 0]' : 0.139022}

out:
 ["{'[2, 1, 6, 6, 0, 4, 0, 1, 14, 7, 2, 0, 0, 0, 1, 0, 0, 0]' : 0.160692}", "{'[2, 1, 6, 6, 0, 4, 0, 1, 14, 7, 2, 0, 0, 0, 1, 0, 0, 0]' : 0.160702}", "{'[2, 1, 6, 6, 0, 4, 0, 1, 14, 7, 2, 0, 0, 0, 1, 0, 0, 0]' : 0.160481}", "{'[2, 1, 6, 6, 0, 4, 0, 1, 14, 7, 2, 0, 0, 0, 1, 0, 0, 0]' : 0.143791}", "{'[2, 1, 6, 6, 0, 4, 0, 1, 14, 7, 2, 0, 0, 0, 1, 0, 0, 0]' : 0.138738}", "{'[2, 1, 6, 6, 0, 4, 0, 1, 14, 7, 2, 0, 0, 0, 1, 0, 0, 0]' : 0.139285}", "{'[2, 1, 6, 6, 0, 4, 0, 1, 14, 7, 2, 0, 0, 0, 1, 0, 0, 0]' : 0.138877}", "{'[2, 1, 6, 6, 0, 4, 0, 1, 14, 7, 2, 0, 0, 0, 1, 0, 0, 0]' : 0.138929}", "{'[2, 1, 6, 6, 0, 4, 0, 1, 14, 7, 2, 0, 0, 0, 1, 0, 0, 0]' : 0.138657}", "{'[2, 1, 6, 6, 0, 4, 0, 1, 14, 7, 2, 0, 0, 0, 1, 0, 0, 0]' : 0.139355}", "{'[2, 1, 6, 6, 0, 4, 0, 1, 14, 7, 2, 0, 0, 0, 1, 0, 0, 0]' : 0.138947}", "{'[2, 1, 6, 6, 0, 4, 0, 1, 14, 7, 2, 0, 0, 0, 1, 0, 0, 0]' : 0.13894}", "{'[2, 1, 6, 6, 0, 4, 0, 1, 14, 7, 2, 0, 0, 0, 1, 0, 0, 0]' : 0.13868}", "{'[2, 1, 6, 6, 0, 4, 0, 1, 14, 7, 2, 0, 0, 0, 1, 0, 0, 0]' : 0.139035}", "{'[2, 1, 6, 6, 0, 4, 0, 1, 14, 7, 2, 0, 0, 0, 1, 0, 0, 0]' : 0.138866}", "{'[2, 1, 6, 6, 0, 4, 0, 1, 14, 7, 2, 0, 0, 0, 1, 0, 0, 0]' : 0.139042}", "{'[2, 1, 6, 6, 0, 4, 0, 1, 14, 7, 2, 0, 0, 0, 1, 0, 0, 0]' : 0.138732}", "{'[2, 1, 6, 6, 0, 4, 0, 1, 14, 7, 2, 0, 0, 0, 1, 0, 0, 0]' : 0.139321}", "{'[2, 1, 6, 6, 0, 4, 0, 1, 14, 7, 2, 0, 0, 0, 1, 0, 0, 0]' : 0.138948}", "{'[2, 1, 6, 6, 0, 4, 0, 1, 14, 7, 2, 0, 0, 0, 1, 0, 0, 0]' : 0.139196}", "{'[2, 1, 6, 6, 0, 4, 0, 1, 14, 7, 2, 0, 0, 0, 1, 0, 0, 0]' : 0.138879}", "{'[2, 1, 6, 6, 0, 4, 0, 1, 14, 7, 2, 0, 0, 0, 1, 0, 0, 0]' : 0.138859}", "{'[2, 1, 6, 6, 0, 4, 0, 1, 14, 7, 2, 0, 0, 0, 1, 0, 0, 0]' : 0.138837}", "{'[2, 1, 6, 6, 0, 4, 0, 1, 14, 7, 2, 0, 0, 0, 1, 0, 0, 0]' : 0.138938}", "{'[2, 1, 6, 6, 0, 4, 0, 1, 14, 7, 2, 0, 0, 0, 1, 0, 0, 0]' : 0.138953}", "{'[2, 1, 6, 6, 0, 4, 0, 1, 14, 7, 2, 0, 0, 0, 1, 0, 0, 0]' : 0.139128}", "{'[2, 1, 6, 6, 0, 4, 0, 1, 14, 7, 2, 0, 0, 0, 1, 0, 0, 0]' : 0.139219}", "{'[2, 1, 6, 6, 0, 4, 0, 1, 14, 7, 2, 0, 0, 0, 1, 0, 0, 0]' : 0.139249}", "{'[2, 1, 6, 6, 0, 4, 0, 1, 14, 7, 2, 0, 0, 0, 1, 0, 0, 0]' : 0.138784}", "{'[2, 1, 6, 6, 0, 4, 0, 1, 14, 7, 2, 0, 0, 0, 1, 0, 0, 0]' : 0.139022}"]
returning from 'run': {'[2, 1, 6, 6, 0, 4, 0, 1, 14, 7, 2, 0, 0, 0, 1, 0, 0, 0]': ([0.160692, 0.160702, 0.160481, 0.143791, 0.138738, 0.139285, 0.138877, 0.138929, 0.138657, 0.139355, 0.138947, 0.13894, 0.13868, 0.139035, 0.138866, 0.139042, 0.138732, 0.139321, 0.138948, 0.139196, 0.138879, 0.138859, 0.138837, 0.138938, 0.138953, 0.139128, 0.139219, 0.139249, 0.138784, 0.139022], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 1, 6, 6, 0, 4, 0, 1, 14, 7, 2, 0, 0, 0, 1, 0, 0, 0]': ([0.160692, 0.160702, 0.160481, 0.143791, 0.138738, 0.139285, 0.138877, 0.138929, 0.138657, 0.139355, 0.138947, 0.13894, 0.13868, 0.139035, 0.138866, 0.139042, 0.138732, 0.139321, 0.138948, 0.139196, 0.138879, 0.138859, 0.138837, 0.138938, 0.138953, 0.139128, 0.139219, 0.139249, 0.138784, 0.139022], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	153
        Max loop nest depth: 	6
        Additions: 		4071
        Multiplications: 	1014
        Divisions: 		0
        Logical: 		0
        Reads: 			6781
        Writes: 		940
        Comparisons:		153
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest66.exe __orio_perftest66.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest66.exe  
Program Test Output: 
{'[5, 2, 4, 5, 4, 3, 0, 1, 29, 29, 2, 0, 1, 1, 0, 0, 0, 0]' : 0.093776}
{'[5, 2, 4, 5, 4, 3, 0, 1, 29, 29, 2, 0, 1, 1, 0, 0, 0, 0]' : 0.0939128}
{'[5, 2, 4, 5, 4, 3, 0, 1, 29, 29, 2, 0, 1, 1, 0, 0, 0, 0]' : 0.0936601}
{'[5, 2, 4, 5, 4, 3, 0, 1, 29, 29, 2, 0, 1, 1, 0, 0, 0, 0]' : 0.093909}
{'[5, 2, 4, 5, 4, 3, 0, 1, 29, 29, 2, 0, 1, 1, 0, 0, 0, 0]' : 0.0939341}
{'[5, 2, 4, 5, 4, 3, 0, 1, 29, 29, 2, 0, 1, 1, 0, 0, 0, 0]' : 0.0937068}
{'[5, 2, 4, 5, 4, 3, 0, 1, 29, 29, 2, 0, 1, 1, 0, 0, 0, 0]' : 0.0936198}
{'[5, 2, 4, 5, 4, 3, 0, 1, 29, 29, 2, 0, 1, 1, 0, 0, 0, 0]' : 0.093709}
{'[5, 2, 4, 5, 4, 3, 0, 1, 29, 29, 2, 0, 1, 1, 0, 0, 0, 0]' : 0.0936799}
{'[5, 2, 4, 5, 4, 3, 0, 1, 29, 29, 2, 0, 1, 1, 0, 0, 0, 0]' : 0.0938361}
{'[5, 2, 4, 5, 4, 3, 0, 1, 29, 29, 2, 0, 1, 1, 0, 0, 0, 0]' : 0.0937819}
{'[5, 2, 4, 5, 4, 3, 0, 1, 29, 29, 2, 0, 1, 1, 0, 0, 0, 0]' : 0.0937049}
{'[5, 2, 4, 5, 4, 3, 0, 1, 29, 29, 2, 0, 1, 1, 0, 0, 0, 0]' : 0.0936701}
{'[5, 2, 4, 5, 4, 3, 0, 1, 29, 29, 2, 0, 1, 1, 0, 0, 0, 0]' : 0.0937719}
{'[5, 2, 4, 5, 4, 3, 0, 1, 29, 29, 2, 0, 1, 1, 0, 0, 0, 0]' : 0.0936179}
{'[5, 2, 4, 5, 4, 3, 0, 1, 29, 29, 2, 0, 1, 1, 0, 0, 0, 0]' : 0.0938859}
{'[5, 2, 4, 5, 4, 3, 0, 1, 29, 29, 2, 0, 1, 1, 0, 0, 0, 0]' : 0.0939779}
{'[5, 2, 4, 5, 4, 3, 0, 1, 29, 29, 2, 0, 1, 1, 0, 0, 0, 0]' : 0.0937271}
{'[5, 2, 4, 5, 4, 3, 0, 1, 29, 29, 2, 0, 1, 1, 0, 0, 0, 0]' : 0.0936439}
{'[5, 2, 4, 5, 4, 3, 0, 1, 29, 29, 2, 0, 1, 1, 0, 0, 0, 0]' : 0.0937581}
{'[5, 2, 4, 5, 4, 3, 0, 1, 29, 29, 2, 0, 1, 1, 0, 0, 0, 0]' : 0.0937181}
{'[5, 2, 4, 5, 4, 3, 0, 1, 29, 29, 2, 0, 1, 1, 0, 0, 0, 0]' : 0.0939829}
{'[5, 2, 4, 5, 4, 3, 0, 1, 29, 29, 2, 0, 1, 1, 0, 0, 0, 0]' : 0.0935709}
{'[5, 2, 4, 5, 4, 3, 0, 1, 29, 29, 2, 0, 1, 1, 0, 0, 0, 0]' : 0.0937951}
{'[5, 2, 4, 5, 4, 3, 0, 1, 29, 29, 2, 0, 1, 1, 0, 0, 0, 0]' : 0.093895}
{'[5, 2, 4, 5, 4, 3, 0, 1, 29, 29, 2, 0, 1, 1, 0, 0, 0, 0]' : 0.093878}
{'[5, 2, 4, 5, 4, 3, 0, 1, 29, 29, 2, 0, 1, 1, 0, 0, 0, 0]' : 0.0938649}
{'[5, 2, 4, 5, 4, 3, 0, 1, 29, 29, 2, 0, 1, 1, 0, 0, 0, 0]' : 0.093945}
{'[5, 2, 4, 5, 4, 3, 0, 1, 29, 29, 2, 0, 1, 1, 0, 0, 0, 0]' : 0.0937071}
{'[5, 2, 4, 5, 4, 3, 0, 1, 29, 29, 2, 0, 1, 1, 0, 0, 0, 0]' : 0.0937519}

out:
 ["{'[5, 2, 4, 5, 4, 3, 0, 1, 29, 29, 2, 0, 1, 1, 0, 0, 0, 0]' : 0.093776}", "{'[5, 2, 4, 5, 4, 3, 0, 1, 29, 29, 2, 0, 1, 1, 0, 0, 0, 0]' : 0.0939128}", "{'[5, 2, 4, 5, 4, 3, 0, 1, 29, 29, 2, 0, 1, 1, 0, 0, 0, 0]' : 0.0936601}", "{'[5, 2, 4, 5, 4, 3, 0, 1, 29, 29, 2, 0, 1, 1, 0, 0, 0, 0]' : 0.093909}", "{'[5, 2, 4, 5, 4, 3, 0, 1, 29, 29, 2, 0, 1, 1, 0, 0, 0, 0]' : 0.0939341}", "{'[5, 2, 4, 5, 4, 3, 0, 1, 29, 29, 2, 0, 1, 1, 0, 0, 0, 0]' : 0.0937068}", "{'[5, 2, 4, 5, 4, 3, 0, 1, 29, 29, 2, 0, 1, 1, 0, 0, 0, 0]' : 0.0936198}", "{'[5, 2, 4, 5, 4, 3, 0, 1, 29, 29, 2, 0, 1, 1, 0, 0, 0, 0]' : 0.093709}", "{'[5, 2, 4, 5, 4, 3, 0, 1, 29, 29, 2, 0, 1, 1, 0, 0, 0, 0]' : 0.0936799}", "{'[5, 2, 4, 5, 4, 3, 0, 1, 29, 29, 2, 0, 1, 1, 0, 0, 0, 0]' : 0.0938361}", "{'[5, 2, 4, 5, 4, 3, 0, 1, 29, 29, 2, 0, 1, 1, 0, 0, 0, 0]' : 0.0937819}", "{'[5, 2, 4, 5, 4, 3, 0, 1, 29, 29, 2, 0, 1, 1, 0, 0, 0, 0]' : 0.0937049}", "{'[5, 2, 4, 5, 4, 3, 0, 1, 29, 29, 2, 0, 1, 1, 0, 0, 0, 0]' : 0.0936701}", "{'[5, 2, 4, 5, 4, 3, 0, 1, 29, 29, 2, 0, 1, 1, 0, 0, 0, 0]' : 0.0937719}", "{'[5, 2, 4, 5, 4, 3, 0, 1, 29, 29, 2, 0, 1, 1, 0, 0, 0, 0]' : 0.0936179}", "{'[5, 2, 4, 5, 4, 3, 0, 1, 29, 29, 2, 0, 1, 1, 0, 0, 0, 0]' : 0.0938859}", "{'[5, 2, 4, 5, 4, 3, 0, 1, 29, 29, 2, 0, 1, 1, 0, 0, 0, 0]' : 0.0939779}", "{'[5, 2, 4, 5, 4, 3, 0, 1, 29, 29, 2, 0, 1, 1, 0, 0, 0, 0]' : 0.0937271}", "{'[5, 2, 4, 5, 4, 3, 0, 1, 29, 29, 2, 0, 1, 1, 0, 0, 0, 0]' : 0.0936439}", "{'[5, 2, 4, 5, 4, 3, 0, 1, 29, 29, 2, 0, 1, 1, 0, 0, 0, 0]' : 0.0937581}", "{'[5, 2, 4, 5, 4, 3, 0, 1, 29, 29, 2, 0, 1, 1, 0, 0, 0, 0]' : 0.0937181}", "{'[5, 2, 4, 5, 4, 3, 0, 1, 29, 29, 2, 0, 1, 1, 0, 0, 0, 0]' : 0.0939829}", "{'[5, 2, 4, 5, 4, 3, 0, 1, 29, 29, 2, 0, 1, 1, 0, 0, 0, 0]' : 0.0935709}", "{'[5, 2, 4, 5, 4, 3, 0, 1, 29, 29, 2, 0, 1, 1, 0, 0, 0, 0]' : 0.0937951}", "{'[5, 2, 4, 5, 4, 3, 0, 1, 29, 29, 2, 0, 1, 1, 0, 0, 0, 0]' : 0.093895}", "{'[5, 2, 4, 5, 4, 3, 0, 1, 29, 29, 2, 0, 1, 1, 0, 0, 0, 0]' : 0.093878}", "{'[5, 2, 4, 5, 4, 3, 0, 1, 29, 29, 2, 0, 1, 1, 0, 0, 0, 0]' : 0.0938649}", "{'[5, 2, 4, 5, 4, 3, 0, 1, 29, 29, 2, 0, 1, 1, 0, 0, 0, 0]' : 0.093945}", "{'[5, 2, 4, 5, 4, 3, 0, 1, 29, 29, 2, 0, 1, 1, 0, 0, 0, 0]' : 0.0937071}", "{'[5, 2, 4, 5, 4, 3, 0, 1, 29, 29, 2, 0, 1, 1, 0, 0, 0, 0]' : 0.0937519}"]
returning from 'run': {'[5, 2, 4, 5, 4, 3, 0, 1, 29, 29, 2, 0, 1, 1, 0, 0, 0, 0]': ([0.093776, 0.0939128, 0.0936601, 0.093909, 0.0939341, 0.0937068, 0.0936198, 0.093709, 0.0936799, 0.0938361, 0.0937819, 0.0937049, 0.0936701, 0.0937719, 0.0936179, 0.0938859, 0.0939779, 0.0937271, 0.0936439, 0.0937581, 0.0937181, 0.0939829, 0.0935709, 0.0937951, 0.093895, 0.093878, 0.0938649, 0.093945, 0.0937071, 0.0937519], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 2, 4, 5, 4, 3, 0, 1, 29, 29, 2, 0, 1, 1, 0, 0, 0, 0]': ([0.093776, 0.0939128, 0.0936601, 0.093909, 0.0939341, 0.0937068, 0.0936198, 0.093709, 0.0936799, 0.0938361, 0.0937819, 0.0937049, 0.0936701, 0.0937719, 0.0936179, 0.0938859, 0.0939779, 0.0937271, 0.0936439, 0.0937581, 0.0937181, 0.0939829, 0.0935709, 0.0937951, 0.093895, 0.093878, 0.0938649, 0.093945, 0.0937071, 0.0937519], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	31
        Max loop nest depth: 	5
        Additions: 		1118
        Multiplications: 	338
        Divisions: 		0
        Logical: 		0
        Reads: 			1945
        Writes: 		244
        Comparisons:		31
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest67.exe __orio_perftest67.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest67.exe  
Program Test Output: 
{'[4, 4, 2, 6, 0, 0, 0, 0, 2, 3, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.138872}
{'[4, 4, 2, 6, 0, 0, 0, 0, 2, 3, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.138736}
{'[4, 4, 2, 6, 0, 0, 0, 0, 2, 3, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.138659}
{'[4, 4, 2, 6, 0, 0, 0, 0, 2, 3, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.13868}
{'[4, 4, 2, 6, 0, 0, 0, 0, 2, 3, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.120913}
{'[4, 4, 2, 6, 0, 0, 0, 0, 2, 3, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.11745}
{'[4, 4, 2, 6, 0, 0, 0, 0, 2, 3, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.117976}
{'[4, 4, 2, 6, 0, 0, 0, 0, 2, 3, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.117585}
{'[4, 4, 2, 6, 0, 0, 0, 0, 2, 3, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.117867}
{'[4, 4, 2, 6, 0, 0, 0, 0, 2, 3, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.117561}
{'[4, 4, 2, 6, 0, 0, 0, 0, 2, 3, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.117505}
{'[4, 4, 2, 6, 0, 0, 0, 0, 2, 3, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.117628}
{'[4, 4, 2, 6, 0, 0, 0, 0, 2, 3, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.117647}
{'[4, 4, 2, 6, 0, 0, 0, 0, 2, 3, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.117447}
{'[4, 4, 2, 6, 0, 0, 0, 0, 2, 3, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.117332}
{'[4, 4, 2, 6, 0, 0, 0, 0, 2, 3, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.117673}
{'[4, 4, 2, 6, 0, 0, 0, 0, 2, 3, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.11799}
{'[4, 4, 2, 6, 0, 0, 0, 0, 2, 3, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.117679}
{'[4, 4, 2, 6, 0, 0, 0, 0, 2, 3, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.117439}
{'[4, 4, 2, 6, 0, 0, 0, 0, 2, 3, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.11736}
{'[4, 4, 2, 6, 0, 0, 0, 0, 2, 3, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.118177}
{'[4, 4, 2, 6, 0, 0, 0, 0, 2, 3, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.117706}
{'[4, 4, 2, 6, 0, 0, 0, 0, 2, 3, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.117323}
{'[4, 4, 2, 6, 0, 0, 0, 0, 2, 3, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.117572}
{'[4, 4, 2, 6, 0, 0, 0, 0, 2, 3, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.117745}
{'[4, 4, 2, 6, 0, 0, 0, 0, 2, 3, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.117765}
{'[4, 4, 2, 6, 0, 0, 0, 0, 2, 3, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.117459}
{'[4, 4, 2, 6, 0, 0, 0, 0, 2, 3, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.117427}
{'[4, 4, 2, 6, 0, 0, 0, 0, 2, 3, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.11768}
{'[4, 4, 2, 6, 0, 0, 0, 0, 2, 3, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.117415}

out:
 ["{'[4, 4, 2, 6, 0, 0, 0, 0, 2, 3, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.138872}", "{'[4, 4, 2, 6, 0, 0, 0, 0, 2, 3, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.138736}", "{'[4, 4, 2, 6, 0, 0, 0, 0, 2, 3, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.138659}", "{'[4, 4, 2, 6, 0, 0, 0, 0, 2, 3, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.13868}", "{'[4, 4, 2, 6, 0, 0, 0, 0, 2, 3, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.120913}", "{'[4, 4, 2, 6, 0, 0, 0, 0, 2, 3, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.11745}", "{'[4, 4, 2, 6, 0, 0, 0, 0, 2, 3, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.117976}", "{'[4, 4, 2, 6, 0, 0, 0, 0, 2, 3, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.117585}", "{'[4, 4, 2, 6, 0, 0, 0, 0, 2, 3, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.117867}", "{'[4, 4, 2, 6, 0, 0, 0, 0, 2, 3, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.117561}", "{'[4, 4, 2, 6, 0, 0, 0, 0, 2, 3, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.117505}", "{'[4, 4, 2, 6, 0, 0, 0, 0, 2, 3, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.117628}", "{'[4, 4, 2, 6, 0, 0, 0, 0, 2, 3, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.117647}", "{'[4, 4, 2, 6, 0, 0, 0, 0, 2, 3, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.117447}", "{'[4, 4, 2, 6, 0, 0, 0, 0, 2, 3, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.117332}", "{'[4, 4, 2, 6, 0, 0, 0, 0, 2, 3, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.117673}", "{'[4, 4, 2, 6, 0, 0, 0, 0, 2, 3, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.11799}", "{'[4, 4, 2, 6, 0, 0, 0, 0, 2, 3, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.117679}", "{'[4, 4, 2, 6, 0, 0, 0, 0, 2, 3, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.117439}", "{'[4, 4, 2, 6, 0, 0, 0, 0, 2, 3, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.11736}", "{'[4, 4, 2, 6, 0, 0, 0, 0, 2, 3, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.118177}", "{'[4, 4, 2, 6, 0, 0, 0, 0, 2, 3, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.117706}", "{'[4, 4, 2, 6, 0, 0, 0, 0, 2, 3, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.117323}", "{'[4, 4, 2, 6, 0, 0, 0, 0, 2, 3, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.117572}", "{'[4, 4, 2, 6, 0, 0, 0, 0, 2, 3, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.117745}", "{'[4, 4, 2, 6, 0, 0, 0, 0, 2, 3, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.117765}", "{'[4, 4, 2, 6, 0, 0, 0, 0, 2, 3, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.117459}", "{'[4, 4, 2, 6, 0, 0, 0, 0, 2, 3, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.117427}", "{'[4, 4, 2, 6, 0, 0, 0, 0, 2, 3, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.11768}", "{'[4, 4, 2, 6, 0, 0, 0, 0, 2, 3, 2, 0, 1, 1, 0, 0, 1, 0]' : 0.117415}"]
returning from 'run': {'[4, 4, 2, 6, 0, 0, 0, 0, 2, 3, 2, 0, 1, 1, 0, 0, 1, 0]': ([0.138872, 0.138736, 0.138659, 0.13868, 0.120913, 0.11745, 0.117976, 0.117585, 0.117867, 0.117561, 0.117505, 0.117628, 0.117647, 0.117447, 0.117332, 0.117673, 0.11799, 0.117679, 0.117439, 0.11736, 0.118177, 0.117706, 0.117323, 0.117572, 0.117745, 0.117765, 0.117459, 0.117427, 0.11768, 0.117415], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 4, 2, 6, 0, 0, 0, 0, 2, 3, 2, 0, 1, 1, 0, 0, 1, 0]': ([0.138872, 0.138736, 0.138659, 0.13868, 0.120913, 0.11745, 0.117976, 0.117585, 0.117867, 0.117561, 0.117505, 0.117628, 0.117647, 0.117447, 0.117332, 0.117673, 0.11799, 0.117679, 0.117439, 0.11736, 0.118177, 0.117706, 0.117323, 0.117572, 0.117745, 0.117765, 0.117459, 0.117427, 0.11768, 0.117415], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	25
        Max loop nest depth: 	5
        Additions: 		1543
        Multiplications: 	630
        Divisions: 		0
        Logical: 		0
        Reads: 			3034
        Writes: 		541
        Comparisons:		25
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest68.exe __orio_perftest68.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest68.exe  
Program Test Output: 
{'[3, 0, 1, 0, 6, 3, 1, 1, 5, 0, 2, 29, 1, 0, 0, 1, 1, 1]' : 0.135547}
{'[3, 0, 1, 0, 6, 3, 1, 1, 5, 0, 2, 29, 1, 0, 0, 1, 1, 1]' : 0.135657}
{'[3, 0, 1, 0, 6, 3, 1, 1, 5, 0, 2, 29, 1, 0, 0, 1, 1, 1]' : 0.135527}
{'[3, 0, 1, 0, 6, 3, 1, 1, 5, 0, 2, 29, 1, 0, 0, 1, 1, 1]' : 0.135198}
{'[3, 0, 1, 0, 6, 3, 1, 1, 5, 0, 2, 29, 1, 0, 0, 1, 1, 1]' : 0.11809}
{'[3, 0, 1, 0, 6, 3, 1, 1, 5, 0, 2, 29, 1, 0, 0, 1, 1, 1]' : 0.115496}
{'[3, 0, 1, 0, 6, 3, 1, 1, 5, 0, 2, 29, 1, 0, 0, 1, 1, 1]' : 0.115356}
{'[3, 0, 1, 0, 6, 3, 1, 1, 5, 0, 2, 29, 1, 0, 0, 1, 1, 1]' : 0.115327}
{'[3, 0, 1, 0, 6, 3, 1, 1, 5, 0, 2, 29, 1, 0, 0, 1, 1, 1]' : 0.115313}
{'[3, 0, 1, 0, 6, 3, 1, 1, 5, 0, 2, 29, 1, 0, 0, 1, 1, 1]' : 0.115658}
{'[3, 0, 1, 0, 6, 3, 1, 1, 5, 0, 2, 29, 1, 0, 0, 1, 1, 1]' : 0.115273}
{'[3, 0, 1, 0, 6, 3, 1, 1, 5, 0, 2, 29, 1, 0, 0, 1, 1, 1]' : 0.115323}
{'[3, 0, 1, 0, 6, 3, 1, 1, 5, 0, 2, 29, 1, 0, 0, 1, 1, 1]' : 0.115282}
{'[3, 0, 1, 0, 6, 3, 1, 1, 5, 0, 2, 29, 1, 0, 0, 1, 1, 1]' : 0.115285}
{'[3, 0, 1, 0, 6, 3, 1, 1, 5, 0, 2, 29, 1, 0, 0, 1, 1, 1]' : 0.115728}
{'[3, 0, 1, 0, 6, 3, 1, 1, 5, 0, 2, 29, 1, 0, 0, 1, 1, 1]' : 0.115688}
{'[3, 0, 1, 0, 6, 3, 1, 1, 5, 0, 2, 29, 1, 0, 0, 1, 1, 1]' : 0.115408}
{'[3, 0, 1, 0, 6, 3, 1, 1, 5, 0, 2, 29, 1, 0, 0, 1, 1, 1]' : 0.115297}
{'[3, 0, 1, 0, 6, 3, 1, 1, 5, 0, 2, 29, 1, 0, 0, 1, 1, 1]' : 0.115535}
{'[3, 0, 1, 0, 6, 3, 1, 1, 5, 0, 2, 29, 1, 0, 0, 1, 1, 1]' : 0.115279}
{'[3, 0, 1, 0, 6, 3, 1, 1, 5, 0, 2, 29, 1, 0, 0, 1, 1, 1]' : 0.115518}
{'[3, 0, 1, 0, 6, 3, 1, 1, 5, 0, 2, 29, 1, 0, 0, 1, 1, 1]' : 0.115634}
{'[3, 0, 1, 0, 6, 3, 1, 1, 5, 0, 2, 29, 1, 0, 0, 1, 1, 1]' : 0.115227}
{'[3, 0, 1, 0, 6, 3, 1, 1, 5, 0, 2, 29, 1, 0, 0, 1, 1, 1]' : 0.115677}
{'[3, 0, 1, 0, 6, 3, 1, 1, 5, 0, 2, 29, 1, 0, 0, 1, 1, 1]' : 0.115447}
{'[3, 0, 1, 0, 6, 3, 1, 1, 5, 0, 2, 29, 1, 0, 0, 1, 1, 1]' : 0.115375}
{'[3, 0, 1, 0, 6, 3, 1, 1, 5, 0, 2, 29, 1, 0, 0, 1, 1, 1]' : 0.115667}
{'[3, 0, 1, 0, 6, 3, 1, 1, 5, 0, 2, 29, 1, 0, 0, 1, 1, 1]' : 0.115339}
{'[3, 0, 1, 0, 6, 3, 1, 1, 5, 0, 2, 29, 1, 0, 0, 1, 1, 1]' : 0.11555}
{'[3, 0, 1, 0, 6, 3, 1, 1, 5, 0, 2, 29, 1, 0, 0, 1, 1, 1]' : 0.115635}

out:
 ["{'[3, 0, 1, 0, 6, 3, 1, 1, 5, 0, 2, 29, 1, 0, 0, 1, 1, 1]' : 0.135547}", "{'[3, 0, 1, 0, 6, 3, 1, 1, 5, 0, 2, 29, 1, 0, 0, 1, 1, 1]' : 0.135657}", "{'[3, 0, 1, 0, 6, 3, 1, 1, 5, 0, 2, 29, 1, 0, 0, 1, 1, 1]' : 0.135527}", "{'[3, 0, 1, 0, 6, 3, 1, 1, 5, 0, 2, 29, 1, 0, 0, 1, 1, 1]' : 0.135198}", "{'[3, 0, 1, 0, 6, 3, 1, 1, 5, 0, 2, 29, 1, 0, 0, 1, 1, 1]' : 0.11809}", "{'[3, 0, 1, 0, 6, 3, 1, 1, 5, 0, 2, 29, 1, 0, 0, 1, 1, 1]' : 0.115496}", "{'[3, 0, 1, 0, 6, 3, 1, 1, 5, 0, 2, 29, 1, 0, 0, 1, 1, 1]' : 0.115356}", "{'[3, 0, 1, 0, 6, 3, 1, 1, 5, 0, 2, 29, 1, 0, 0, 1, 1, 1]' : 0.115327}", "{'[3, 0, 1, 0, 6, 3, 1, 1, 5, 0, 2, 29, 1, 0, 0, 1, 1, 1]' : 0.115313}", "{'[3, 0, 1, 0, 6, 3, 1, 1, 5, 0, 2, 29, 1, 0, 0, 1, 1, 1]' : 0.115658}", "{'[3, 0, 1, 0, 6, 3, 1, 1, 5, 0, 2, 29, 1, 0, 0, 1, 1, 1]' : 0.115273}", "{'[3, 0, 1, 0, 6, 3, 1, 1, 5, 0, 2, 29, 1, 0, 0, 1, 1, 1]' : 0.115323}", "{'[3, 0, 1, 0, 6, 3, 1, 1, 5, 0, 2, 29, 1, 0, 0, 1, 1, 1]' : 0.115282}", "{'[3, 0, 1, 0, 6, 3, 1, 1, 5, 0, 2, 29, 1, 0, 0, 1, 1, 1]' : 0.115285}", "{'[3, 0, 1, 0, 6, 3, 1, 1, 5, 0, 2, 29, 1, 0, 0, 1, 1, 1]' : 0.115728}", "{'[3, 0, 1, 0, 6, 3, 1, 1, 5, 0, 2, 29, 1, 0, 0, 1, 1, 1]' : 0.115688}", "{'[3, 0, 1, 0, 6, 3, 1, 1, 5, 0, 2, 29, 1, 0, 0, 1, 1, 1]' : 0.115408}", "{'[3, 0, 1, 0, 6, 3, 1, 1, 5, 0, 2, 29, 1, 0, 0, 1, 1, 1]' : 0.115297}", "{'[3, 0, 1, 0, 6, 3, 1, 1, 5, 0, 2, 29, 1, 0, 0, 1, 1, 1]' : 0.115535}", "{'[3, 0, 1, 0, 6, 3, 1, 1, 5, 0, 2, 29, 1, 0, 0, 1, 1, 1]' : 0.115279}", "{'[3, 0, 1, 0, 6, 3, 1, 1, 5, 0, 2, 29, 1, 0, 0, 1, 1, 1]' : 0.115518}", "{'[3, 0, 1, 0, 6, 3, 1, 1, 5, 0, 2, 29, 1, 0, 0, 1, 1, 1]' : 0.115634}", "{'[3, 0, 1, 0, 6, 3, 1, 1, 5, 0, 2, 29, 1, 0, 0, 1, 1, 1]' : 0.115227}", "{'[3, 0, 1, 0, 6, 3, 1, 1, 5, 0, 2, 29, 1, 0, 0, 1, 1, 1]' : 0.115677}", "{'[3, 0, 1, 0, 6, 3, 1, 1, 5, 0, 2, 29, 1, 0, 0, 1, 1, 1]' : 0.115447}", "{'[3, 0, 1, 0, 6, 3, 1, 1, 5, 0, 2, 29, 1, 0, 0, 1, 1, 1]' : 0.115375}", "{'[3, 0, 1, 0, 6, 3, 1, 1, 5, 0, 2, 29, 1, 0, 0, 1, 1, 1]' : 0.115667}", "{'[3, 0, 1, 0, 6, 3, 1, 1, 5, 0, 2, 29, 1, 0, 0, 1, 1, 1]' : 0.115339}", "{'[3, 0, 1, 0, 6, 3, 1, 1, 5, 0, 2, 29, 1, 0, 0, 1, 1, 1]' : 0.11555}", "{'[3, 0, 1, 0, 6, 3, 1, 1, 5, 0, 2, 29, 1, 0, 0, 1, 1, 1]' : 0.115635}"]
returning from 'run': {'[3, 0, 1, 0, 6, 3, 1, 1, 5, 0, 2, 29, 1, 0, 0, 1, 1, 1]': ([0.135547, 0.135657, 0.135527, 0.135198, 0.11809, 0.115496, 0.115356, 0.115327, 0.115313, 0.115658, 0.115273, 0.115323, 0.115282, 0.115285, 0.115728, 0.115688, 0.115408, 0.115297, 0.115535, 0.115279, 0.115518, 0.115634, 0.115227, 0.115677, 0.115447, 0.115375, 0.115667, 0.115339, 0.11555, 0.115635], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 0, 1, 0, 6, 3, 1, 1, 5, 0, 2, 29, 1, 0, 0, 1, 1, 1]': ([0.135547, 0.135657, 0.135527, 0.135198, 0.11809, 0.115496, 0.115356, 0.115327, 0.115313, 0.115658, 0.115273, 0.115323, 0.115282, 0.115285, 0.115728, 0.115688, 0.115408, 0.115297, 0.115535, 0.115279, 0.115518, 0.115634, 0.115227, 0.115677, 0.115447, 0.115375, 0.115667, 0.115339, 0.11555, 0.115635], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	100
        Max loop nest depth: 	4
        Additions: 		2251
        Multiplications: 	754
        Divisions: 		0
        Logical: 		0
        Reads: 			4331
        Writes: 		827
        Comparisons:		100
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest69.exe __orio_perftest69.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest69.exe  
Program Test Output: 
{'[0, 0, 0, 3, 4, 4, 1, 0, 2, 27, 2, 0, 0, 0, 1, 1, 1, 1]' : 0.217954}
{'[0, 0, 0, 3, 4, 4, 1, 0, 2, 27, 2, 0, 0, 0, 1, 1, 1, 1]' : 0.217884}
{'[0, 0, 0, 3, 4, 4, 1, 0, 2, 27, 2, 0, 0, 0, 1, 1, 1, 1]' : 0.1957}
{'[0, 0, 0, 3, 4, 4, 1, 0, 2, 27, 2, 0, 0, 0, 1, 1, 1, 1]' : 0.184255}
{'[0, 0, 0, 3, 4, 4, 1, 0, 2, 27, 2, 0, 0, 0, 1, 1, 1, 1]' : 0.183845}
{'[0, 0, 0, 3, 4, 4, 1, 0, 2, 27, 2, 0, 0, 0, 1, 1, 1, 1]' : 0.183837}
{'[0, 0, 0, 3, 4, 4, 1, 0, 2, 27, 2, 0, 0, 0, 1, 1, 1, 1]' : 0.183818}
{'[0, 0, 0, 3, 4, 4, 1, 0, 2, 27, 2, 0, 0, 0, 1, 1, 1, 1]' : 0.184259}
{'[0, 0, 0, 3, 4, 4, 1, 0, 2, 27, 2, 0, 0, 0, 1, 1, 1, 1]' : 0.183907}
{'[0, 0, 0, 3, 4, 4, 1, 0, 2, 27, 2, 0, 0, 0, 1, 1, 1, 1]' : 0.184508}
{'[0, 0, 0, 3, 4, 4, 1, 0, 2, 27, 2, 0, 0, 0, 1, 1, 1, 1]' : 0.183703}
{'[0, 0, 0, 3, 4, 4, 1, 0, 2, 27, 2, 0, 0, 0, 1, 1, 1, 1]' : 0.183892}
{'[0, 0, 0, 3, 4, 4, 1, 0, 2, 27, 2, 0, 0, 0, 1, 1, 1, 1]' : 0.183806}
{'[0, 0, 0, 3, 4, 4, 1, 0, 2, 27, 2, 0, 0, 0, 1, 1, 1, 1]' : 0.183803}
{'[0, 0, 0, 3, 4, 4, 1, 0, 2, 27, 2, 0, 0, 0, 1, 1, 1, 1]' : 0.183846}
{'[0, 0, 0, 3, 4, 4, 1, 0, 2, 27, 2, 0, 0, 0, 1, 1, 1, 1]' : 0.184447}
{'[0, 0, 0, 3, 4, 4, 1, 0, 2, 27, 2, 0, 0, 0, 1, 1, 1, 1]' : 0.183859}
{'[0, 0, 0, 3, 4, 4, 1, 0, 2, 27, 2, 0, 0, 0, 1, 1, 1, 1]' : 0.183819}
{'[0, 0, 0, 3, 4, 4, 1, 0, 2, 27, 2, 0, 0, 0, 1, 1, 1, 1]' : 0.184361}
{'[0, 0, 0, 3, 4, 4, 1, 0, 2, 27, 2, 0, 0, 0, 1, 1, 1, 1]' : 0.183968}
{'[0, 0, 0, 3, 4, 4, 1, 0, 2, 27, 2, 0, 0, 0, 1, 1, 1, 1]' : 0.183876}
{'[0, 0, 0, 3, 4, 4, 1, 0, 2, 27, 2, 0, 0, 0, 1, 1, 1, 1]' : 0.18428}
{'[0, 0, 0, 3, 4, 4, 1, 0, 2, 27, 2, 0, 0, 0, 1, 1, 1, 1]' : 0.183865}
{'[0, 0, 0, 3, 4, 4, 1, 0, 2, 27, 2, 0, 0, 0, 1, 1, 1, 1]' : 0.183934}
{'[0, 0, 0, 3, 4, 4, 1, 0, 2, 27, 2, 0, 0, 0, 1, 1, 1, 1]' : 0.183796}
{'[0, 0, 0, 3, 4, 4, 1, 0, 2, 27, 2, 0, 0, 0, 1, 1, 1, 1]' : 0.184064}
{'[0, 0, 0, 3, 4, 4, 1, 0, 2, 27, 2, 0, 0, 0, 1, 1, 1, 1]' : 0.183988}
{'[0, 0, 0, 3, 4, 4, 1, 0, 2, 27, 2, 0, 0, 0, 1, 1, 1, 1]' : 0.184169}
{'[0, 0, 0, 3, 4, 4, 1, 0, 2, 27, 2, 0, 0, 0, 1, 1, 1, 1]' : 0.184081}
{'[0, 0, 0, 3, 4, 4, 1, 0, 2, 27, 2, 0, 0, 0, 1, 1, 1, 1]' : 0.183882}

out:
 ["{'[0, 0, 0, 3, 4, 4, 1, 0, 2, 27, 2, 0, 0, 0, 1, 1, 1, 1]' : 0.217954}", "{'[0, 0, 0, 3, 4, 4, 1, 0, 2, 27, 2, 0, 0, 0, 1, 1, 1, 1]' : 0.217884}", "{'[0, 0, 0, 3, 4, 4, 1, 0, 2, 27, 2, 0, 0, 0, 1, 1, 1, 1]' : 0.1957}", "{'[0, 0, 0, 3, 4, 4, 1, 0, 2, 27, 2, 0, 0, 0, 1, 1, 1, 1]' : 0.184255}", "{'[0, 0, 0, 3, 4, 4, 1, 0, 2, 27, 2, 0, 0, 0, 1, 1, 1, 1]' : 0.183845}", "{'[0, 0, 0, 3, 4, 4, 1, 0, 2, 27, 2, 0, 0, 0, 1, 1, 1, 1]' : 0.183837}", "{'[0, 0, 0, 3, 4, 4, 1, 0, 2, 27, 2, 0, 0, 0, 1, 1, 1, 1]' : 0.183818}", "{'[0, 0, 0, 3, 4, 4, 1, 0, 2, 27, 2, 0, 0, 0, 1, 1, 1, 1]' : 0.184259}", "{'[0, 0, 0, 3, 4, 4, 1, 0, 2, 27, 2, 0, 0, 0, 1, 1, 1, 1]' : 0.183907}", "{'[0, 0, 0, 3, 4, 4, 1, 0, 2, 27, 2, 0, 0, 0, 1, 1, 1, 1]' : 0.184508}", "{'[0, 0, 0, 3, 4, 4, 1, 0, 2, 27, 2, 0, 0, 0, 1, 1, 1, 1]' : 0.183703}", "{'[0, 0, 0, 3, 4, 4, 1, 0, 2, 27, 2, 0, 0, 0, 1, 1, 1, 1]' : 0.183892}", "{'[0, 0, 0, 3, 4, 4, 1, 0, 2, 27, 2, 0, 0, 0, 1, 1, 1, 1]' : 0.183806}", "{'[0, 0, 0, 3, 4, 4, 1, 0, 2, 27, 2, 0, 0, 0, 1, 1, 1, 1]' : 0.183803}", "{'[0, 0, 0, 3, 4, 4, 1, 0, 2, 27, 2, 0, 0, 0, 1, 1, 1, 1]' : 0.183846}", "{'[0, 0, 0, 3, 4, 4, 1, 0, 2, 27, 2, 0, 0, 0, 1, 1, 1, 1]' : 0.184447}", "{'[0, 0, 0, 3, 4, 4, 1, 0, 2, 27, 2, 0, 0, 0, 1, 1, 1, 1]' : 0.183859}", "{'[0, 0, 0, 3, 4, 4, 1, 0, 2, 27, 2, 0, 0, 0, 1, 1, 1, 1]' : 0.183819}", "{'[0, 0, 0, 3, 4, 4, 1, 0, 2, 27, 2, 0, 0, 0, 1, 1, 1, 1]' : 0.184361}", "{'[0, 0, 0, 3, 4, 4, 1, 0, 2, 27, 2, 0, 0, 0, 1, 1, 1, 1]' : 0.183968}", "{'[0, 0, 0, 3, 4, 4, 1, 0, 2, 27, 2, 0, 0, 0, 1, 1, 1, 1]' : 0.183876}", "{'[0, 0, 0, 3, 4, 4, 1, 0, 2, 27, 2, 0, 0, 0, 1, 1, 1, 1]' : 0.18428}", "{'[0, 0, 0, 3, 4, 4, 1, 0, 2, 27, 2, 0, 0, 0, 1, 1, 1, 1]' : 0.183865}", "{'[0, 0, 0, 3, 4, 4, 1, 0, 2, 27, 2, 0, 0, 0, 1, 1, 1, 1]' : 0.183934}", "{'[0, 0, 0, 3, 4, 4, 1, 0, 2, 27, 2, 0, 0, 0, 1, 1, 1, 1]' : 0.183796}", "{'[0, 0, 0, 3, 4, 4, 1, 0, 2, 27, 2, 0, 0, 0, 1, 1, 1, 1]' : 0.184064}", "{'[0, 0, 0, 3, 4, 4, 1, 0, 2, 27, 2, 0, 0, 0, 1, 1, 1, 1]' : 0.183988}", "{'[0, 0, 0, 3, 4, 4, 1, 0, 2, 27, 2, 0, 0, 0, 1, 1, 1, 1]' : 0.184169}", "{'[0, 0, 0, 3, 4, 4, 1, 0, 2, 27, 2, 0, 0, 0, 1, 1, 1, 1]' : 0.184081}", "{'[0, 0, 0, 3, 4, 4, 1, 0, 2, 27, 2, 0, 0, 0, 1, 1, 1, 1]' : 0.183882}"]
returning from 'run': {'[0, 0, 0, 3, 4, 4, 1, 0, 2, 27, 2, 0, 0, 0, 1, 1, 1, 1]': ([0.217954, 0.217884, 0.1957, 0.184255, 0.183845, 0.183837, 0.183818, 0.184259, 0.183907, 0.184508, 0.183703, 0.183892, 0.183806, 0.183803, 0.183846, 0.184447, 0.183859, 0.183819, 0.184361, 0.183968, 0.183876, 0.18428, 0.183865, 0.183934, 0.183796, 0.184064, 0.183988, 0.184169, 0.184081, 0.183882], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 0, 3, 4, 4, 1, 0, 2, 27, 2, 0, 0, 0, 1, 1, 1, 1]': ([0.217954, 0.217884, 0.1957, 0.184255, 0.183845, 0.183837, 0.183818, 0.184259, 0.183907, 0.184508, 0.183703, 0.183892, 0.183806, 0.183803, 0.183846, 0.184447, 0.183859, 0.183819, 0.184361, 0.183968, 0.183876, 0.18428, 0.183865, 0.183934, 0.183796, 0.184064, 0.183988, 0.184169, 0.184081, 0.183882], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		1033
        Multiplications: 	512
        Divisions: 		0
        Logical: 		0
        Reads: 			2153
        Writes: 		379
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest70.exe __orio_perftest70.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest70.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest70.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest70.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest70.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = kkk
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		151
        Multiplications: 	40
        Divisions: 		0
        Logical: 		0
        Reads: 			345
        Writes: 		64
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest71.exe __orio_perftest71.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest71.exe  
Program Test Output: 
{'[2, 6, 5, 2, 4, 3, 0, 1, 5, 0, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.226167}
{'[2, 6, 5, 2, 4, 3, 0, 1, 5, 0, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.225994}
{'[2, 6, 5, 2, 4, 3, 0, 1, 5, 0, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.226037}
{'[2, 6, 5, 2, 4, 3, 0, 1, 5, 0, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.196861}
{'[2, 6, 5, 2, 4, 3, 0, 1, 5, 0, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.188621}
{'[2, 6, 5, 2, 4, 3, 0, 1, 5, 0, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.188916}
{'[2, 6, 5, 2, 4, 3, 0, 1, 5, 0, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.188733}
{'[2, 6, 5, 2, 4, 3, 0, 1, 5, 0, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.188751}
{'[2, 6, 5, 2, 4, 3, 0, 1, 5, 0, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.188549}
{'[2, 6, 5, 2, 4, 3, 0, 1, 5, 0, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.188591}
{'[2, 6, 5, 2, 4, 3, 0, 1, 5, 0, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.188559}
{'[2, 6, 5, 2, 4, 3, 0, 1, 5, 0, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.18915}
{'[2, 6, 5, 2, 4, 3, 0, 1, 5, 0, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.188628}
{'[2, 6, 5, 2, 4, 3, 0, 1, 5, 0, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.188607}
{'[2, 6, 5, 2, 4, 3, 0, 1, 5, 0, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.18878}
{'[2, 6, 5, 2, 4, 3, 0, 1, 5, 0, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.189002}
{'[2, 6, 5, 2, 4, 3, 0, 1, 5, 0, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.188694}
{'[2, 6, 5, 2, 4, 3, 0, 1, 5, 0, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.188913}
{'[2, 6, 5, 2, 4, 3, 0, 1, 5, 0, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.188694}
{'[2, 6, 5, 2, 4, 3, 0, 1, 5, 0, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.188647}
{'[2, 6, 5, 2, 4, 3, 0, 1, 5, 0, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.188855}
{'[2, 6, 5, 2, 4, 3, 0, 1, 5, 0, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.188763}
{'[2, 6, 5, 2, 4, 3, 0, 1, 5, 0, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.193477}
{'[2, 6, 5, 2, 4, 3, 0, 1, 5, 0, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.194845}
{'[2, 6, 5, 2, 4, 3, 0, 1, 5, 0, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.194681}
{'[2, 6, 5, 2, 4, 3, 0, 1, 5, 0, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.194882}
{'[2, 6, 5, 2, 4, 3, 0, 1, 5, 0, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.19473}
{'[2, 6, 5, 2, 4, 3, 0, 1, 5, 0, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.19465}
{'[2, 6, 5, 2, 4, 3, 0, 1, 5, 0, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.195046}
{'[2, 6, 5, 2, 4, 3, 0, 1, 5, 0, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.194767}

out:
 ["{'[2, 6, 5, 2, 4, 3, 0, 1, 5, 0, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.226167}", "{'[2, 6, 5, 2, 4, 3, 0, 1, 5, 0, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.225994}", "{'[2, 6, 5, 2, 4, 3, 0, 1, 5, 0, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.226037}", "{'[2, 6, 5, 2, 4, 3, 0, 1, 5, 0, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.196861}", "{'[2, 6, 5, 2, 4, 3, 0, 1, 5, 0, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.188621}", "{'[2, 6, 5, 2, 4, 3, 0, 1, 5, 0, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.188916}", "{'[2, 6, 5, 2, 4, 3, 0, 1, 5, 0, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.188733}", "{'[2, 6, 5, 2, 4, 3, 0, 1, 5, 0, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.188751}", "{'[2, 6, 5, 2, 4, 3, 0, 1, 5, 0, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.188549}", "{'[2, 6, 5, 2, 4, 3, 0, 1, 5, 0, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.188591}", "{'[2, 6, 5, 2, 4, 3, 0, 1, 5, 0, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.188559}", "{'[2, 6, 5, 2, 4, 3, 0, 1, 5, 0, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.18915}", "{'[2, 6, 5, 2, 4, 3, 0, 1, 5, 0, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.188628}", "{'[2, 6, 5, 2, 4, 3, 0, 1, 5, 0, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.188607}", "{'[2, 6, 5, 2, 4, 3, 0, 1, 5, 0, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.18878}", "{'[2, 6, 5, 2, 4, 3, 0, 1, 5, 0, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.189002}", "{'[2, 6, 5, 2, 4, 3, 0, 1, 5, 0, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.188694}", "{'[2, 6, 5, 2, 4, 3, 0, 1, 5, 0, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.188913}", "{'[2, 6, 5, 2, 4, 3, 0, 1, 5, 0, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.188694}", "{'[2, 6, 5, 2, 4, 3, 0, 1, 5, 0, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.188647}", "{'[2, 6, 5, 2, 4, 3, 0, 1, 5, 0, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.188855}", "{'[2, 6, 5, 2, 4, 3, 0, 1, 5, 0, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.188763}", "{'[2, 6, 5, 2, 4, 3, 0, 1, 5, 0, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.193477}", "{'[2, 6, 5, 2, 4, 3, 0, 1, 5, 0, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.194845}", "{'[2, 6, 5, 2, 4, 3, 0, 1, 5, 0, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.194681}", "{'[2, 6, 5, 2, 4, 3, 0, 1, 5, 0, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.194882}", "{'[2, 6, 5, 2, 4, 3, 0, 1, 5, 0, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.19473}", "{'[2, 6, 5, 2, 4, 3, 0, 1, 5, 0, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.19465}", "{'[2, 6, 5, 2, 4, 3, 0, 1, 5, 0, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.195046}", "{'[2, 6, 5, 2, 4, 3, 0, 1, 5, 0, 2, 0, 0, 1, 1, 0, 1, 1]' : 0.194767}"]
returning from 'run': {'[2, 6, 5, 2, 4, 3, 0, 1, 5, 0, 2, 0, 0, 1, 1, 0, 1, 1]': ([0.226167, 0.225994, 0.226037, 0.196861, 0.188621, 0.188916, 0.188733, 0.188751, 0.188549, 0.188591, 0.188559, 0.18915, 0.188628, 0.188607, 0.18878, 0.189002, 0.188694, 0.188913, 0.188694, 0.188647, 0.188855, 0.188763, 0.193477, 0.194845, 0.194681, 0.194882, 0.19473, 0.19465, 0.195046, 0.194767], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 6, 5, 2, 4, 3, 0, 1, 5, 0, 2, 0, 0, 1, 1, 0, 1, 1]': ([0.226167, 0.225994, 0.226037, 0.196861, 0.188621, 0.188916, 0.188733, 0.188751, 0.188549, 0.188591, 0.188559, 0.18915, 0.188628, 0.188607, 0.18878, 0.189002, 0.188694, 0.188913, 0.188694, 0.188647, 0.188855, 0.188763, 0.193477, 0.194845, 0.194681, 0.194882, 0.19473, 0.19465, 0.195046, 0.194767], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	6
        Additions: 		231
        Multiplications: 	66
        Divisions: 		0
        Logical: 		0
        Reads: 			530
        Writes: 		96
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest72.exe __orio_perftest72.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest72.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest72.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest72.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest72.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	42
        Max loop nest depth: 	4
        Additions: 		735
        Multiplications: 	160
        Divisions: 		0
        Logical: 		0
        Reads: 			1373
        Writes: 		246
        Comparisons:		42
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest73.exe __orio_perftest73.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest73.exe  
Program Test Output: 
{'[6, 0, 6, 0, 6, 0, 1, 0, 29, 6, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.118961}
{'[6, 0, 6, 0, 6, 0, 1, 0, 29, 6, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.118966}
{'[6, 0, 6, 0, 6, 0, 1, 0, 29, 6, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.118807}
{'[6, 0, 6, 0, 6, 0, 1, 0, 29, 6, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.117585}
{'[6, 0, 6, 0, 6, 0, 1, 0, 29, 6, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.102744}
{'[6, 0, 6, 0, 6, 0, 1, 0, 29, 6, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.101686}
{'[6, 0, 6, 0, 6, 0, 1, 0, 29, 6, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.101139}
{'[6, 0, 6, 0, 6, 0, 1, 0, 29, 6, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.101369}
{'[6, 0, 6, 0, 6, 0, 1, 0, 29, 6, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.101368}
{'[6, 0, 6, 0, 6, 0, 1, 0, 29, 6, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.101297}
{'[6, 0, 6, 0, 6, 0, 1, 0, 29, 6, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.101225}
{'[6, 0, 6, 0, 6, 0, 1, 0, 29, 6, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.101309}
{'[6, 0, 6, 0, 6, 0, 1, 0, 29, 6, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.101404}
{'[6, 0, 6, 0, 6, 0, 1, 0, 29, 6, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.101392}
{'[6, 0, 6, 0, 6, 0, 1, 0, 29, 6, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.101383}
{'[6, 0, 6, 0, 6, 0, 1, 0, 29, 6, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.101606}
{'[6, 0, 6, 0, 6, 0, 1, 0, 29, 6, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.101486}
{'[6, 0, 6, 0, 6, 0, 1, 0, 29, 6, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.101401}
{'[6, 0, 6, 0, 6, 0, 1, 0, 29, 6, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.101186}
{'[6, 0, 6, 0, 6, 0, 1, 0, 29, 6, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.101424}
{'[6, 0, 6, 0, 6, 0, 1, 0, 29, 6, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.101405}
{'[6, 0, 6, 0, 6, 0, 1, 0, 29, 6, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.101299}
{'[6, 0, 6, 0, 6, 0, 1, 0, 29, 6, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.10134}
{'[6, 0, 6, 0, 6, 0, 1, 0, 29, 6, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.101446}
{'[6, 0, 6, 0, 6, 0, 1, 0, 29, 6, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.101314}
{'[6, 0, 6, 0, 6, 0, 1, 0, 29, 6, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.101689}
{'[6, 0, 6, 0, 6, 0, 1, 0, 29, 6, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.101424}
{'[6, 0, 6, 0, 6, 0, 1, 0, 29, 6, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.101463}
{'[6, 0, 6, 0, 6, 0, 1, 0, 29, 6, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.101245}
{'[6, 0, 6, 0, 6, 0, 1, 0, 29, 6, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.101337}

out:
 ["{'[6, 0, 6, 0, 6, 0, 1, 0, 29, 6, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.118961}", "{'[6, 0, 6, 0, 6, 0, 1, 0, 29, 6, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.118966}", "{'[6, 0, 6, 0, 6, 0, 1, 0, 29, 6, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.118807}", "{'[6, 0, 6, 0, 6, 0, 1, 0, 29, 6, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.117585}", "{'[6, 0, 6, 0, 6, 0, 1, 0, 29, 6, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.102744}", "{'[6, 0, 6, 0, 6, 0, 1, 0, 29, 6, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.101686}", "{'[6, 0, 6, 0, 6, 0, 1, 0, 29, 6, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.101139}", "{'[6, 0, 6, 0, 6, 0, 1, 0, 29, 6, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.101369}", "{'[6, 0, 6, 0, 6, 0, 1, 0, 29, 6, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.101368}", "{'[6, 0, 6, 0, 6, 0, 1, 0, 29, 6, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.101297}", "{'[6, 0, 6, 0, 6, 0, 1, 0, 29, 6, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.101225}", "{'[6, 0, 6, 0, 6, 0, 1, 0, 29, 6, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.101309}", "{'[6, 0, 6, 0, 6, 0, 1, 0, 29, 6, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.101404}", "{'[6, 0, 6, 0, 6, 0, 1, 0, 29, 6, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.101392}", "{'[6, 0, 6, 0, 6, 0, 1, 0, 29, 6, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.101383}", "{'[6, 0, 6, 0, 6, 0, 1, 0, 29, 6, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.101606}", "{'[6, 0, 6, 0, 6, 0, 1, 0, 29, 6, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.101486}", "{'[6, 0, 6, 0, 6, 0, 1, 0, 29, 6, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.101401}", "{'[6, 0, 6, 0, 6, 0, 1, 0, 29, 6, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.101186}", "{'[6, 0, 6, 0, 6, 0, 1, 0, 29, 6, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.101424}", "{'[6, 0, 6, 0, 6, 0, 1, 0, 29, 6, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.101405}", "{'[6, 0, 6, 0, 6, 0, 1, 0, 29, 6, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.101299}", "{'[6, 0, 6, 0, 6, 0, 1, 0, 29, 6, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.10134}", "{'[6, 0, 6, 0, 6, 0, 1, 0, 29, 6, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.101446}", "{'[6, 0, 6, 0, 6, 0, 1, 0, 29, 6, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.101314}", "{'[6, 0, 6, 0, 6, 0, 1, 0, 29, 6, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.101689}", "{'[6, 0, 6, 0, 6, 0, 1, 0, 29, 6, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.101424}", "{'[6, 0, 6, 0, 6, 0, 1, 0, 29, 6, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.101463}", "{'[6, 0, 6, 0, 6, 0, 1, 0, 29, 6, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.101245}", "{'[6, 0, 6, 0, 6, 0, 1, 0, 29, 6, 2, 0, 1, 0, 0, 0, 1, 1]' : 0.101337}"]
returning from 'run': {'[6, 0, 6, 0, 6, 0, 1, 0, 29, 6, 2, 0, 1, 0, 0, 0, 1, 1]': ([0.118961, 0.118966, 0.118807, 0.117585, 0.102744, 0.101686, 0.101139, 0.101369, 0.101368, 0.101297, 0.101225, 0.101309, 0.101404, 0.101392, 0.101383, 0.101606, 0.101486, 0.101401, 0.101186, 0.101424, 0.101405, 0.101299, 0.10134, 0.101446, 0.101314, 0.101689, 0.101424, 0.101463, 0.101245, 0.101337], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 6, 0, 6, 0, 1, 0, 29, 6, 2, 0, 1, 0, 0, 0, 1, 1]': ([0.118961, 0.118966, 0.118807, 0.117585, 0.102744, 0.101686, 0.101139, 0.101369, 0.101368, 0.101297, 0.101225, 0.101309, 0.101404, 0.101392, 0.101383, 0.101606, 0.101486, 0.101401, 0.101186, 0.101424, 0.101405, 0.101299, 0.10134, 0.101446, 0.101314, 0.101689, 0.101424, 0.101463, 0.101245, 0.101337], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = iii
Code stats:
        Number of loops: 	25
        Max loop nest depth: 	5
        Additions: 		9319
        Multiplications: 	2178
        Divisions: 		0
        Logical: 		0
        Reads: 			13157
        Writes: 		1151
        Comparisons:		25
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest74.exe __orio_perftest74.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest74.exe  
Program Test Output: 
{'[6, 5, 1, 4, 0, 2, 1, 1, 2, 0, 2, 27, 2, 0, 0, 0, 0, 0]' : 0.227507}
{'[6, 5, 1, 4, 0, 2, 1, 1, 2, 0, 2, 27, 2, 0, 0, 0, 0, 0]' : 0.227892}
{'[6, 5, 1, 4, 0, 2, 1, 1, 2, 0, 2, 27, 2, 0, 0, 0, 0, 0]' : 0.227497}
{'[6, 5, 1, 4, 0, 2, 1, 1, 2, 0, 2, 27, 2, 0, 0, 0, 0, 0]' : 0.227481}
{'[6, 5, 1, 4, 0, 2, 1, 1, 2, 0, 2, 27, 2, 0, 0, 0, 0, 0]' : 0.228065}
{'[6, 5, 1, 4, 0, 2, 1, 1, 2, 0, 2, 27, 2, 0, 0, 0, 0, 0]' : 0.2289}
{'[6, 5, 1, 4, 0, 2, 1, 1, 2, 0, 2, 27, 2, 0, 0, 0, 0, 0]' : 0.226829}
{'[6, 5, 1, 4, 0, 2, 1, 1, 2, 0, 2, 27, 2, 0, 0, 0, 0, 0]' : 0.227175}
{'[6, 5, 1, 4, 0, 2, 1, 1, 2, 0, 2, 27, 2, 0, 0, 0, 0, 0]' : 0.227162}
{'[6, 5, 1, 4, 0, 2, 1, 1, 2, 0, 2, 27, 2, 0, 0, 0, 0, 0]' : 0.227707}
{'[6, 5, 1, 4, 0, 2, 1, 1, 2, 0, 2, 27, 2, 0, 0, 0, 0, 0]' : 0.22694}
{'[6, 5, 1, 4, 0, 2, 1, 1, 2, 0, 2, 27, 2, 0, 0, 0, 0, 0]' : 0.227637}
{'[6, 5, 1, 4, 0, 2, 1, 1, 2, 0, 2, 27, 2, 0, 0, 0, 0, 0]' : 0.228027}
{'[6, 5, 1, 4, 0, 2, 1, 1, 2, 0, 2, 27, 2, 0, 0, 0, 0, 0]' : 0.227287}
{'[6, 5, 1, 4, 0, 2, 1, 1, 2, 0, 2, 27, 2, 0, 0, 0, 0, 0]' : 0.227778}
{'[6, 5, 1, 4, 0, 2, 1, 1, 2, 0, 2, 27, 2, 0, 0, 0, 0, 0]' : 0.227852}
{'[6, 5, 1, 4, 0, 2, 1, 1, 2, 0, 2, 27, 2, 0, 0, 0, 0, 0]' : 0.228279}
{'[6, 5, 1, 4, 0, 2, 1, 1, 2, 0, 2, 27, 2, 0, 0, 0, 0, 0]' : 0.227282}
{'[6, 5, 1, 4, 0, 2, 1, 1, 2, 0, 2, 27, 2, 0, 0, 0, 0, 0]' : 0.227286}
{'[6, 5, 1, 4, 0, 2, 1, 1, 2, 0, 2, 27, 2, 0, 0, 0, 0, 0]' : 0.227402}
{'[6, 5, 1, 4, 0, 2, 1, 1, 2, 0, 2, 27, 2, 0, 0, 0, 0, 0]' : 0.227603}
{'[6, 5, 1, 4, 0, 2, 1, 1, 2, 0, 2, 27, 2, 0, 0, 0, 0, 0]' : 0.22835}
{'[6, 5, 1, 4, 0, 2, 1, 1, 2, 0, 2, 27, 2, 0, 0, 0, 0, 0]' : 0.226374}
{'[6, 5, 1, 4, 0, 2, 1, 1, 2, 0, 2, 27, 2, 0, 0, 0, 0, 0]' : 0.227304}
{'[6, 5, 1, 4, 0, 2, 1, 1, 2, 0, 2, 27, 2, 0, 0, 0, 0, 0]' : 0.22699}
{'[6, 5, 1, 4, 0, 2, 1, 1, 2, 0, 2, 27, 2, 0, 0, 0, 0, 0]' : 0.228347}
{'[6, 5, 1, 4, 0, 2, 1, 1, 2, 0, 2, 27, 2, 0, 0, 0, 0, 0]' : 0.226764}
{'[6, 5, 1, 4, 0, 2, 1, 1, 2, 0, 2, 27, 2, 0, 0, 0, 0, 0]' : 0.227608}
{'[6, 5, 1, 4, 0, 2, 1, 1, 2, 0, 2, 27, 2, 0, 0, 0, 0, 0]' : 0.227762}
{'[6, 5, 1, 4, 0, 2, 1, 1, 2, 0, 2, 27, 2, 0, 0, 0, 0, 0]' : 0.227481}

out:
 ["{'[6, 5, 1, 4, 0, 2, 1, 1, 2, 0, 2, 27, 2, 0, 0, 0, 0, 0]' : 0.227507}", "{'[6, 5, 1, 4, 0, 2, 1, 1, 2, 0, 2, 27, 2, 0, 0, 0, 0, 0]' : 0.227892}", "{'[6, 5, 1, 4, 0, 2, 1, 1, 2, 0, 2, 27, 2, 0, 0, 0, 0, 0]' : 0.227497}", "{'[6, 5, 1, 4, 0, 2, 1, 1, 2, 0, 2, 27, 2, 0, 0, 0, 0, 0]' : 0.227481}", "{'[6, 5, 1, 4, 0, 2, 1, 1, 2, 0, 2, 27, 2, 0, 0, 0, 0, 0]' : 0.228065}", "{'[6, 5, 1, 4, 0, 2, 1, 1, 2, 0, 2, 27, 2, 0, 0, 0, 0, 0]' : 0.2289}", "{'[6, 5, 1, 4, 0, 2, 1, 1, 2, 0, 2, 27, 2, 0, 0, 0, 0, 0]' : 0.226829}", "{'[6, 5, 1, 4, 0, 2, 1, 1, 2, 0, 2, 27, 2, 0, 0, 0, 0, 0]' : 0.227175}", "{'[6, 5, 1, 4, 0, 2, 1, 1, 2, 0, 2, 27, 2, 0, 0, 0, 0, 0]' : 0.227162}", "{'[6, 5, 1, 4, 0, 2, 1, 1, 2, 0, 2, 27, 2, 0, 0, 0, 0, 0]' : 0.227707}", "{'[6, 5, 1, 4, 0, 2, 1, 1, 2, 0, 2, 27, 2, 0, 0, 0, 0, 0]' : 0.22694}", "{'[6, 5, 1, 4, 0, 2, 1, 1, 2, 0, 2, 27, 2, 0, 0, 0, 0, 0]' : 0.227637}", "{'[6, 5, 1, 4, 0, 2, 1, 1, 2, 0, 2, 27, 2, 0, 0, 0, 0, 0]' : 0.228027}", "{'[6, 5, 1, 4, 0, 2, 1, 1, 2, 0, 2, 27, 2, 0, 0, 0, 0, 0]' : 0.227287}", "{'[6, 5, 1, 4, 0, 2, 1, 1, 2, 0, 2, 27, 2, 0, 0, 0, 0, 0]' : 0.227778}", "{'[6, 5, 1, 4, 0, 2, 1, 1, 2, 0, 2, 27, 2, 0, 0, 0, 0, 0]' : 0.227852}", "{'[6, 5, 1, 4, 0, 2, 1, 1, 2, 0, 2, 27, 2, 0, 0, 0, 0, 0]' : 0.228279}", "{'[6, 5, 1, 4, 0, 2, 1, 1, 2, 0, 2, 27, 2, 0, 0, 0, 0, 0]' : 0.227282}", "{'[6, 5, 1, 4, 0, 2, 1, 1, 2, 0, 2, 27, 2, 0, 0, 0, 0, 0]' : 0.227286}", "{'[6, 5, 1, 4, 0, 2, 1, 1, 2, 0, 2, 27, 2, 0, 0, 0, 0, 0]' : 0.227402}", "{'[6, 5, 1, 4, 0, 2, 1, 1, 2, 0, 2, 27, 2, 0, 0, 0, 0, 0]' : 0.227603}", "{'[6, 5, 1, 4, 0, 2, 1, 1, 2, 0, 2, 27, 2, 0, 0, 0, 0, 0]' : 0.22835}", "{'[6, 5, 1, 4, 0, 2, 1, 1, 2, 0, 2, 27, 2, 0, 0, 0, 0, 0]' : 0.226374}", "{'[6, 5, 1, 4, 0, 2, 1, 1, 2, 0, 2, 27, 2, 0, 0, 0, 0, 0]' : 0.227304}", "{'[6, 5, 1, 4, 0, 2, 1, 1, 2, 0, 2, 27, 2, 0, 0, 0, 0, 0]' : 0.22699}", "{'[6, 5, 1, 4, 0, 2, 1, 1, 2, 0, 2, 27, 2, 0, 0, 0, 0, 0]' : 0.228347}", "{'[6, 5, 1, 4, 0, 2, 1, 1, 2, 0, 2, 27, 2, 0, 0, 0, 0, 0]' : 0.226764}", "{'[6, 5, 1, 4, 0, 2, 1, 1, 2, 0, 2, 27, 2, 0, 0, 0, 0, 0]' : 0.227608}", "{'[6, 5, 1, 4, 0, 2, 1, 1, 2, 0, 2, 27, 2, 0, 0, 0, 0, 0]' : 0.227762}", "{'[6, 5, 1, 4, 0, 2, 1, 1, 2, 0, 2, 27, 2, 0, 0, 0, 0, 0]' : 0.227481}"]
returning from 'run': {'[6, 5, 1, 4, 0, 2, 1, 1, 2, 0, 2, 27, 2, 0, 0, 0, 0, 0]': ([0.227507, 0.227892, 0.227497, 0.227481, 0.228065, 0.2289, 0.226829, 0.227175, 0.227162, 0.227707, 0.22694, 0.227637, 0.228027, 0.227287, 0.227778, 0.227852, 0.228279, 0.227282, 0.227286, 0.227402, 0.227603, 0.22835, 0.226374, 0.227304, 0.22699, 0.228347, 0.226764, 0.227608, 0.227762, 0.227481], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 5, 1, 4, 0, 2, 1, 1, 2, 0, 2, 27, 2, 0, 0, 0, 0, 0]': ([0.227507, 0.227892, 0.227497, 0.227481, 0.228065, 0.2289, 0.226829, 0.227175, 0.227162, 0.227707, 0.22694, 0.227637, 0.228027, 0.227287, 0.227778, 0.227852, 0.228279, 0.227282, 0.227286, 0.227402, 0.227603, 0.22835, 0.226374, 0.227304, 0.22699, 0.228347, 0.226764, 0.227608, 0.227762, 0.227481], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = jjj
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		781
        Multiplications: 	192
        Divisions: 		0
        Logical: 		0
        Reads: 			1233
        Writes: 		151
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest75.exe __orio_perftest75.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest75.exe  
Program Test Output: 
{'[0, 4, 1, 0, 2, 6, 0, 1, 21, 2, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.137471}
{'[0, 4, 1, 0, 2, 6, 0, 1, 21, 2, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.137718}
{'[0, 4, 1, 0, 2, 6, 0, 1, 21, 2, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.1376}
{'[0, 4, 1, 0, 2, 6, 0, 1, 21, 2, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.133218}
{'[0, 4, 1, 0, 2, 6, 0, 1, 21, 2, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.119384}
{'[0, 4, 1, 0, 2, 6, 0, 1, 21, 2, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.119399}
{'[0, 4, 1, 0, 2, 6, 0, 1, 21, 2, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.119402}
{'[0, 4, 1, 0, 2, 6, 0, 1, 21, 2, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.119434}
{'[0, 4, 1, 0, 2, 6, 0, 1, 21, 2, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.119556}
{'[0, 4, 1, 0, 2, 6, 0, 1, 21, 2, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.119512}
{'[0, 4, 1, 0, 2, 6, 0, 1, 21, 2, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.119696}
{'[0, 4, 1, 0, 2, 6, 0, 1, 21, 2, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.119573}
{'[0, 4, 1, 0, 2, 6, 0, 1, 21, 2, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.119465}
{'[0, 4, 1, 0, 2, 6, 0, 1, 21, 2, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.119397}
{'[0, 4, 1, 0, 2, 6, 0, 1, 21, 2, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.119541}
{'[0, 4, 1, 0, 2, 6, 0, 1, 21, 2, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.119371}
{'[0, 4, 1, 0, 2, 6, 0, 1, 21, 2, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.119512}
{'[0, 4, 1, 0, 2, 6, 0, 1, 21, 2, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.119809}
{'[0, 4, 1, 0, 2, 6, 0, 1, 21, 2, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.119296}
{'[0, 4, 1, 0, 2, 6, 0, 1, 21, 2, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.119573}
{'[0, 4, 1, 0, 2, 6, 0, 1, 21, 2, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.119765}
{'[0, 4, 1, 0, 2, 6, 0, 1, 21, 2, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.120402}
{'[0, 4, 1, 0, 2, 6, 0, 1, 21, 2, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.119359}
{'[0, 4, 1, 0, 2, 6, 0, 1, 21, 2, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.119547}
{'[0, 4, 1, 0, 2, 6, 0, 1, 21, 2, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.119589}
{'[0, 4, 1, 0, 2, 6, 0, 1, 21, 2, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.11951}
{'[0, 4, 1, 0, 2, 6, 0, 1, 21, 2, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.119365}
{'[0, 4, 1, 0, 2, 6, 0, 1, 21, 2, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.119456}
{'[0, 4, 1, 0, 2, 6, 0, 1, 21, 2, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.119867}
{'[0, 4, 1, 0, 2, 6, 0, 1, 21, 2, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.12009}

out:
 ["{'[0, 4, 1, 0, 2, 6, 0, 1, 21, 2, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.137471}", "{'[0, 4, 1, 0, 2, 6, 0, 1, 21, 2, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.137718}", "{'[0, 4, 1, 0, 2, 6, 0, 1, 21, 2, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.1376}", "{'[0, 4, 1, 0, 2, 6, 0, 1, 21, 2, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.133218}", "{'[0, 4, 1, 0, 2, 6, 0, 1, 21, 2, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.119384}", "{'[0, 4, 1, 0, 2, 6, 0, 1, 21, 2, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.119399}", "{'[0, 4, 1, 0, 2, 6, 0, 1, 21, 2, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.119402}", "{'[0, 4, 1, 0, 2, 6, 0, 1, 21, 2, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.119434}", "{'[0, 4, 1, 0, 2, 6, 0, 1, 21, 2, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.119556}", "{'[0, 4, 1, 0, 2, 6, 0, 1, 21, 2, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.119512}", "{'[0, 4, 1, 0, 2, 6, 0, 1, 21, 2, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.119696}", "{'[0, 4, 1, 0, 2, 6, 0, 1, 21, 2, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.119573}", "{'[0, 4, 1, 0, 2, 6, 0, 1, 21, 2, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.119465}", "{'[0, 4, 1, 0, 2, 6, 0, 1, 21, 2, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.119397}", "{'[0, 4, 1, 0, 2, 6, 0, 1, 21, 2, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.119541}", "{'[0, 4, 1, 0, 2, 6, 0, 1, 21, 2, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.119371}", "{'[0, 4, 1, 0, 2, 6, 0, 1, 21, 2, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.119512}", "{'[0, 4, 1, 0, 2, 6, 0, 1, 21, 2, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.119809}", "{'[0, 4, 1, 0, 2, 6, 0, 1, 21, 2, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.119296}", "{'[0, 4, 1, 0, 2, 6, 0, 1, 21, 2, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.119573}", "{'[0, 4, 1, 0, 2, 6, 0, 1, 21, 2, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.119765}", "{'[0, 4, 1, 0, 2, 6, 0, 1, 21, 2, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.120402}", "{'[0, 4, 1, 0, 2, 6, 0, 1, 21, 2, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.119359}", "{'[0, 4, 1, 0, 2, 6, 0, 1, 21, 2, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.119547}", "{'[0, 4, 1, 0, 2, 6, 0, 1, 21, 2, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.119589}", "{'[0, 4, 1, 0, 2, 6, 0, 1, 21, 2, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.11951}", "{'[0, 4, 1, 0, 2, 6, 0, 1, 21, 2, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.119365}", "{'[0, 4, 1, 0, 2, 6, 0, 1, 21, 2, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.119456}", "{'[0, 4, 1, 0, 2, 6, 0, 1, 21, 2, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.119867}", "{'[0, 4, 1, 0, 2, 6, 0, 1, 21, 2, 2, 0, 1, 0, 1, 0, 1, 1]' : 0.12009}"]
returning from 'run': {'[0, 4, 1, 0, 2, 6, 0, 1, 21, 2, 2, 0, 1, 0, 1, 0, 1, 1]': ([0.137471, 0.137718, 0.1376, 0.133218, 0.119384, 0.119399, 0.119402, 0.119434, 0.119556, 0.119512, 0.119696, 0.119573, 0.119465, 0.119397, 0.119541, 0.119371, 0.119512, 0.119809, 0.119296, 0.119573, 0.119765, 0.120402, 0.119359, 0.119547, 0.119589, 0.11951, 0.119365, 0.119456, 0.119867, 0.12009], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 4, 1, 0, 2, 6, 0, 1, 21, 2, 2, 0, 1, 0, 1, 0, 1, 1]': ([0.137471, 0.137718, 0.1376, 0.133218, 0.119384, 0.119399, 0.119402, 0.119434, 0.119556, 0.119512, 0.119696, 0.119573, 0.119465, 0.119397, 0.119541, 0.119371, 0.119512, 0.119809, 0.119296, 0.119573, 0.119765, 0.120402, 0.119359, 0.119547, 0.119589, 0.11951, 0.119365, 0.119456, 0.119867, 0.12009], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		253
        Multiplications: 	66
        Divisions: 		0
        Logical: 		0
        Reads: 			519
        Writes: 		84
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest76.exe __orio_perftest76.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest76.exe  
Program Test Output: 
{'[0, 0, 6, 6, 6, 0, 0, 1, 10, 0, 2, 19, 0, 1, 0, 0, 1, 1]' : 0.228493}
{'[0, 0, 6, 6, 6, 0, 0, 1, 10, 0, 2, 19, 0, 1, 0, 0, 1, 1]' : 0.228515}
{'[0, 0, 6, 6, 6, 0, 0, 1, 10, 0, 2, 19, 0, 1, 0, 0, 1, 1]' : 0.209644}
{'[0, 0, 6, 6, 6, 0, 0, 1, 10, 0, 2, 19, 0, 1, 0, 0, 1, 1]' : 0.19014}
{'[0, 0, 6, 6, 6, 0, 0, 1, 10, 0, 2, 19, 0, 1, 0, 0, 1, 1]' : 0.190255}
{'[0, 0, 6, 6, 6, 0, 0, 1, 10, 0, 2, 19, 0, 1, 0, 0, 1, 1]' : 0.190058}
{'[0, 0, 6, 6, 6, 0, 0, 1, 10, 0, 2, 19, 0, 1, 0, 0, 1, 1]' : 0.189946}
{'[0, 0, 6, 6, 6, 0, 0, 1, 10, 0, 2, 19, 0, 1, 0, 0, 1, 1]' : 0.190015}
{'[0, 0, 6, 6, 6, 0, 0, 1, 10, 0, 2, 19, 0, 1, 0, 0, 1, 1]' : 0.190016}
{'[0, 0, 6, 6, 6, 0, 0, 1, 10, 0, 2, 19, 0, 1, 0, 0, 1, 1]' : 0.190335}
{'[0, 0, 6, 6, 6, 0, 0, 1, 10, 0, 2, 19, 0, 1, 0, 0, 1, 1]' : 0.190492}
{'[0, 0, 6, 6, 6, 0, 0, 1, 10, 0, 2, 19, 0, 1, 0, 0, 1, 1]' : 0.190068}
{'[0, 0, 6, 6, 6, 0, 0, 1, 10, 0, 2, 19, 0, 1, 0, 0, 1, 1]' : 0.190179}
{'[0, 0, 6, 6, 6, 0, 0, 1, 10, 0, 2, 19, 0, 1, 0, 0, 1, 1]' : 0.190191}
{'[0, 0, 6, 6, 6, 0, 0, 1, 10, 0, 2, 19, 0, 1, 0, 0, 1, 1]' : 0.190173}
{'[0, 0, 6, 6, 6, 0, 0, 1, 10, 0, 2, 19, 0, 1, 0, 0, 1, 1]' : 0.190881}
{'[0, 0, 6, 6, 6, 0, 0, 1, 10, 0, 2, 19, 0, 1, 0, 0, 1, 1]' : 0.190278}
{'[0, 0, 6, 6, 6, 0, 0, 1, 10, 0, 2, 19, 0, 1, 0, 0, 1, 1]' : 0.190202}
{'[0, 0, 6, 6, 6, 0, 0, 1, 10, 0, 2, 19, 0, 1, 0, 0, 1, 1]' : 0.190241}
{'[0, 0, 6, 6, 6, 0, 0, 1, 10, 0, 2, 19, 0, 1, 0, 0, 1, 1]' : 0.190025}
{'[0, 0, 6, 6, 6, 0, 0, 1, 10, 0, 2, 19, 0, 1, 0, 0, 1, 1]' : 0.19011}
{'[0, 0, 6, 6, 6, 0, 0, 1, 10, 0, 2, 19, 0, 1, 0, 0, 1, 1]' : 0.190507}
{'[0, 0, 6, 6, 6, 0, 0, 1, 10, 0, 2, 19, 0, 1, 0, 0, 1, 1]' : 0.190202}
{'[0, 0, 6, 6, 6, 0, 0, 1, 10, 0, 2, 19, 0, 1, 0, 0, 1, 1]' : 0.190087}
{'[0, 0, 6, 6, 6, 0, 0, 1, 10, 0, 2, 19, 0, 1, 0, 0, 1, 1]' : 0.190114}
{'[0, 0, 6, 6, 6, 0, 0, 1, 10, 0, 2, 19, 0, 1, 0, 0, 1, 1]' : 0.190196}
{'[0, 0, 6, 6, 6, 0, 0, 1, 10, 0, 2, 19, 0, 1, 0, 0, 1, 1]' : 0.19065}
{'[0, 0, 6, 6, 6, 0, 0, 1, 10, 0, 2, 19, 0, 1, 0, 0, 1, 1]' : 0.190361}
{'[0, 0, 6, 6, 6, 0, 0, 1, 10, 0, 2, 19, 0, 1, 0, 0, 1, 1]' : 0.190059}
{'[0, 0, 6, 6, 6, 0, 0, 1, 10, 0, 2, 19, 0, 1, 0, 0, 1, 1]' : 0.190035}

out:
 ["{'[0, 0, 6, 6, 6, 0, 0, 1, 10, 0, 2, 19, 0, 1, 0, 0, 1, 1]' : 0.228493}", "{'[0, 0, 6, 6, 6, 0, 0, 1, 10, 0, 2, 19, 0, 1, 0, 0, 1, 1]' : 0.228515}", "{'[0, 0, 6, 6, 6, 0, 0, 1, 10, 0, 2, 19, 0, 1, 0, 0, 1, 1]' : 0.209644}", "{'[0, 0, 6, 6, 6, 0, 0, 1, 10, 0, 2, 19, 0, 1, 0, 0, 1, 1]' : 0.19014}", "{'[0, 0, 6, 6, 6, 0, 0, 1, 10, 0, 2, 19, 0, 1, 0, 0, 1, 1]' : 0.190255}", "{'[0, 0, 6, 6, 6, 0, 0, 1, 10, 0, 2, 19, 0, 1, 0, 0, 1, 1]' : 0.190058}", "{'[0, 0, 6, 6, 6, 0, 0, 1, 10, 0, 2, 19, 0, 1, 0, 0, 1, 1]' : 0.189946}", "{'[0, 0, 6, 6, 6, 0, 0, 1, 10, 0, 2, 19, 0, 1, 0, 0, 1, 1]' : 0.190015}", "{'[0, 0, 6, 6, 6, 0, 0, 1, 10, 0, 2, 19, 0, 1, 0, 0, 1, 1]' : 0.190016}", "{'[0, 0, 6, 6, 6, 0, 0, 1, 10, 0, 2, 19, 0, 1, 0, 0, 1, 1]' : 0.190335}", "{'[0, 0, 6, 6, 6, 0, 0, 1, 10, 0, 2, 19, 0, 1, 0, 0, 1, 1]' : 0.190492}", "{'[0, 0, 6, 6, 6, 0, 0, 1, 10, 0, 2, 19, 0, 1, 0, 0, 1, 1]' : 0.190068}", "{'[0, 0, 6, 6, 6, 0, 0, 1, 10, 0, 2, 19, 0, 1, 0, 0, 1, 1]' : 0.190179}", "{'[0, 0, 6, 6, 6, 0, 0, 1, 10, 0, 2, 19, 0, 1, 0, 0, 1, 1]' : 0.190191}", "{'[0, 0, 6, 6, 6, 0, 0, 1, 10, 0, 2, 19, 0, 1, 0, 0, 1, 1]' : 0.190173}", "{'[0, 0, 6, 6, 6, 0, 0, 1, 10, 0, 2, 19, 0, 1, 0, 0, 1, 1]' : 0.190881}", "{'[0, 0, 6, 6, 6, 0, 0, 1, 10, 0, 2, 19, 0, 1, 0, 0, 1, 1]' : 0.190278}", "{'[0, 0, 6, 6, 6, 0, 0, 1, 10, 0, 2, 19, 0, 1, 0, 0, 1, 1]' : 0.190202}", "{'[0, 0, 6, 6, 6, 0, 0, 1, 10, 0, 2, 19, 0, 1, 0, 0, 1, 1]' : 0.190241}", "{'[0, 0, 6, 6, 6, 0, 0, 1, 10, 0, 2, 19, 0, 1, 0, 0, 1, 1]' : 0.190025}", "{'[0, 0, 6, 6, 6, 0, 0, 1, 10, 0, 2, 19, 0, 1, 0, 0, 1, 1]' : 0.19011}", "{'[0, 0, 6, 6, 6, 0, 0, 1, 10, 0, 2, 19, 0, 1, 0, 0, 1, 1]' : 0.190507}", "{'[0, 0, 6, 6, 6, 0, 0, 1, 10, 0, 2, 19, 0, 1, 0, 0, 1, 1]' : 0.190202}", "{'[0, 0, 6, 6, 6, 0, 0, 1, 10, 0, 2, 19, 0, 1, 0, 0, 1, 1]' : 0.190087}", "{'[0, 0, 6, 6, 6, 0, 0, 1, 10, 0, 2, 19, 0, 1, 0, 0, 1, 1]' : 0.190114}", "{'[0, 0, 6, 6, 6, 0, 0, 1, 10, 0, 2, 19, 0, 1, 0, 0, 1, 1]' : 0.190196}", "{'[0, 0, 6, 6, 6, 0, 0, 1, 10, 0, 2, 19, 0, 1, 0, 0, 1, 1]' : 0.19065}", "{'[0, 0, 6, 6, 6, 0, 0, 1, 10, 0, 2, 19, 0, 1, 0, 0, 1, 1]' : 0.190361}", "{'[0, 0, 6, 6, 6, 0, 0, 1, 10, 0, 2, 19, 0, 1, 0, 0, 1, 1]' : 0.190059}", "{'[0, 0, 6, 6, 6, 0, 0, 1, 10, 0, 2, 19, 0, 1, 0, 0, 1, 1]' : 0.190035}"]
returning from 'run': {'[0, 0, 6, 6, 6, 0, 0, 1, 10, 0, 2, 19, 0, 1, 0, 0, 1, 1]': ([0.228493, 0.228515, 0.209644, 0.19014, 0.190255, 0.190058, 0.189946, 0.190015, 0.190016, 0.190335, 0.190492, 0.190068, 0.190179, 0.190191, 0.190173, 0.190881, 0.190278, 0.190202, 0.190241, 0.190025, 0.19011, 0.190507, 0.190202, 0.190087, 0.190114, 0.190196, 0.19065, 0.190361, 0.190059, 0.190035], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 6, 6, 6, 0, 0, 1, 10, 0, 2, 19, 0, 1, 0, 0, 1, 1]': ([0.228493, 0.228515, 0.209644, 0.19014, 0.190255, 0.190058, 0.189946, 0.190015, 0.190016, 0.190335, 0.190492, 0.190068, 0.190179, 0.190191, 0.190173, 0.190881, 0.190278, 0.190202, 0.190241, 0.190025, 0.19011, 0.190507, 0.190202, 0.190087, 0.190114, 0.190196, 0.19065, 0.190361, 0.190059, 0.190035], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	30
        Max loop nest depth: 	6
        Additions: 		758
        Multiplications: 	216
        Divisions: 		0
        Logical: 		0
        Reads: 			1574
        Writes: 		315
        Comparisons:		30
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest77.exe __orio_perftest77.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest77.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest77.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest77.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest77.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	6
        Additions: 		410
        Multiplications: 	162
        Divisions: 		0
        Logical: 		0
        Reads: 			873
        Writes: 		181
        Comparisons:		20
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest78.exe __orio_perftest78.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest78.exe  
Program Test Output: 
{'[5, 3, 5, 5, 5, 6, 1, 0, 17, 0, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.102167}
{'[5, 3, 5, 5, 5, 6, 1, 0, 17, 0, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.102191}
{'[5, 3, 5, 5, 5, 6, 1, 0, 17, 0, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.102078}
{'[5, 3, 5, 5, 5, 6, 1, 0, 17, 0, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.102032}
{'[5, 3, 5, 5, 5, 6, 1, 0, 17, 0, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.100494}
{'[5, 3, 5, 5, 5, 6, 1, 0, 17, 0, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.0885692}
{'[5, 3, 5, 5, 5, 6, 1, 0, 17, 0, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.0869451}
{'[5, 3, 5, 5, 5, 6, 1, 0, 17, 0, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.086802}
{'[5, 3, 5, 5, 5, 6, 1, 0, 17, 0, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.0867798}
{'[5, 3, 5, 5, 5, 6, 1, 0, 17, 0, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.086822}
{'[5, 3, 5, 5, 5, 6, 1, 0, 17, 0, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.086746}
{'[5, 3, 5, 5, 5, 6, 1, 0, 17, 0, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.086761}
{'[5, 3, 5, 5, 5, 6, 1, 0, 17, 0, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.086797}
{'[5, 3, 5, 5, 5, 6, 1, 0, 17, 0, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.0870068}
{'[5, 3, 5, 5, 5, 6, 1, 0, 17, 0, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.0870411}
{'[5, 3, 5, 5, 5, 6, 1, 0, 17, 0, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.0870609}
{'[5, 3, 5, 5, 5, 6, 1, 0, 17, 0, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.0869091}
{'[5, 3, 5, 5, 5, 6, 1, 0, 17, 0, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.086828}
{'[5, 3, 5, 5, 5, 6, 1, 0, 17, 0, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.0867312}
{'[5, 3, 5, 5, 5, 6, 1, 0, 17, 0, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.086853}
{'[5, 3, 5, 5, 5, 6, 1, 0, 17, 0, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.0867991}
{'[5, 3, 5, 5, 5, 6, 1, 0, 17, 0, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.0867748}
{'[5, 3, 5, 5, 5, 6, 1, 0, 17, 0, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.087754}
{'[5, 3, 5, 5, 5, 6, 1, 0, 17, 0, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.0898192}
{'[5, 3, 5, 5, 5, 6, 1, 0, 17, 0, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.0863578}
{'[5, 3, 5, 5, 5, 6, 1, 0, 17, 0, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.0866339}
{'[5, 3, 5, 5, 5, 6, 1, 0, 17, 0, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.08639}
{'[5, 3, 5, 5, 5, 6, 1, 0, 17, 0, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.0866461}
{'[5, 3, 5, 5, 5, 6, 1, 0, 17, 0, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.0862911}
{'[5, 3, 5, 5, 5, 6, 1, 0, 17, 0, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.086484}

out:
 ["{'[5, 3, 5, 5, 5, 6, 1, 0, 17, 0, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.102167}", "{'[5, 3, 5, 5, 5, 6, 1, 0, 17, 0, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.102191}", "{'[5, 3, 5, 5, 5, 6, 1, 0, 17, 0, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.102078}", "{'[5, 3, 5, 5, 5, 6, 1, 0, 17, 0, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.102032}", "{'[5, 3, 5, 5, 5, 6, 1, 0, 17, 0, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.100494}", "{'[5, 3, 5, 5, 5, 6, 1, 0, 17, 0, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.0885692}", "{'[5, 3, 5, 5, 5, 6, 1, 0, 17, 0, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.0869451}", "{'[5, 3, 5, 5, 5, 6, 1, 0, 17, 0, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.086802}", "{'[5, 3, 5, 5, 5, 6, 1, 0, 17, 0, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.0867798}", "{'[5, 3, 5, 5, 5, 6, 1, 0, 17, 0, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.086822}", "{'[5, 3, 5, 5, 5, 6, 1, 0, 17, 0, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.086746}", "{'[5, 3, 5, 5, 5, 6, 1, 0, 17, 0, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.086761}", "{'[5, 3, 5, 5, 5, 6, 1, 0, 17, 0, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.086797}", "{'[5, 3, 5, 5, 5, 6, 1, 0, 17, 0, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.0870068}", "{'[5, 3, 5, 5, 5, 6, 1, 0, 17, 0, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.0870411}", "{'[5, 3, 5, 5, 5, 6, 1, 0, 17, 0, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.0870609}", "{'[5, 3, 5, 5, 5, 6, 1, 0, 17, 0, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.0869091}", "{'[5, 3, 5, 5, 5, 6, 1, 0, 17, 0, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.086828}", "{'[5, 3, 5, 5, 5, 6, 1, 0, 17, 0, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.0867312}", "{'[5, 3, 5, 5, 5, 6, 1, 0, 17, 0, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.086853}", "{'[5, 3, 5, 5, 5, 6, 1, 0, 17, 0, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.0867991}", "{'[5, 3, 5, 5, 5, 6, 1, 0, 17, 0, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.0867748}", "{'[5, 3, 5, 5, 5, 6, 1, 0, 17, 0, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.087754}", "{'[5, 3, 5, 5, 5, 6, 1, 0, 17, 0, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.0898192}", "{'[5, 3, 5, 5, 5, 6, 1, 0, 17, 0, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.0863578}", "{'[5, 3, 5, 5, 5, 6, 1, 0, 17, 0, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.0866339}", "{'[5, 3, 5, 5, 5, 6, 1, 0, 17, 0, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.08639}", "{'[5, 3, 5, 5, 5, 6, 1, 0, 17, 0, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.0866461}", "{'[5, 3, 5, 5, 5, 6, 1, 0, 17, 0, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.0862911}", "{'[5, 3, 5, 5, 5, 6, 1, 0, 17, 0, 2, 0, 1, 1, 0, 1, 1, 1]' : 0.086484}"]
returning from 'run': {'[5, 3, 5, 5, 5, 6, 1, 0, 17, 0, 2, 0, 1, 1, 0, 1, 1, 1]': ([0.102167, 0.102191, 0.102078, 0.102032, 0.100494, 0.0885692, 0.0869451, 0.086802, 0.0867798, 0.086822, 0.086746, 0.086761, 0.086797, 0.0870068, 0.0870411, 0.0870609, 0.0869091, 0.086828, 0.0867312, 0.086853, 0.0867991, 0.0867748, 0.087754, 0.0898192, 0.0863578, 0.0866339, 0.08639, 0.0866461, 0.0862911, 0.086484], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 3, 5, 5, 5, 6, 1, 0, 17, 0, 2, 0, 1, 1, 0, 1, 1, 1]': ([0.102167, 0.102191, 0.102078, 0.102032, 0.100494, 0.0885692, 0.0869451, 0.086802, 0.0867798, 0.086822, 0.086746, 0.086761, 0.086797, 0.0870068, 0.0870411, 0.0870609, 0.0869091, 0.086828, 0.0867312, 0.086853, 0.0867991, 0.0867748, 0.087754, 0.0898192, 0.0863578, 0.0866339, 0.08639, 0.0866461, 0.0862911, 0.086484], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	106
        Max loop nest depth: 	5
        Additions: 		2475
        Multiplications: 	920
        Divisions: 		0
        Logical: 		0
        Reads: 			4847
        Writes: 		906
        Comparisons:		106
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest79.exe __orio_perftest79.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest79.exe  
Program Test Output: 
{'[6, 5, 5, 5, 0, 0, 0, 1, 1, 21, 2, 0, 0, 1, 1, 1, 1, 1]' : 0.139795}
{'[6, 5, 5, 5, 0, 0, 0, 1, 1, 21, 2, 0, 0, 1, 1, 1, 1, 1]' : 0.139968}
{'[6, 5, 5, 5, 0, 0, 0, 1, 1, 21, 2, 0, 0, 1, 1, 1, 1, 1]' : 0.139584}
{'[6, 5, 5, 5, 0, 0, 0, 1, 1, 21, 2, 0, 0, 1, 1, 1, 1, 1]' : 0.139907}
{'[6, 5, 5, 5, 0, 0, 0, 1, 1, 21, 2, 0, 0, 1, 1, 1, 1, 1]' : 0.139635}
{'[6, 5, 5, 5, 0, 0, 0, 1, 1, 21, 2, 0, 0, 1, 1, 1, 1, 1]' : 0.140286}
{'[6, 5, 5, 5, 0, 0, 0, 1, 1, 21, 2, 0, 0, 1, 1, 1, 1, 1]' : 0.138365}
{'[6, 5, 5, 5, 0, 0, 0, 1, 1, 21, 2, 0, 0, 1, 1, 1, 1, 1]' : 0.136059}
{'[6, 5, 5, 5, 0, 0, 0, 1, 1, 21, 2, 0, 0, 1, 1, 1, 1, 1]' : 0.135692}
{'[6, 5, 5, 5, 0, 0, 0, 1, 1, 21, 2, 0, 0, 1, 1, 1, 1, 1]' : 0.135849}
{'[6, 5, 5, 5, 0, 0, 0, 1, 1, 21, 2, 0, 0, 1, 1, 1, 1, 1]' : 0.136048}
{'[6, 5, 5, 5, 0, 0, 0, 1, 1, 21, 2, 0, 0, 1, 1, 1, 1, 1]' : 0.135759}
{'[6, 5, 5, 5, 0, 0, 0, 1, 1, 21, 2, 0, 0, 1, 1, 1, 1, 1]' : 0.135889}
{'[6, 5, 5, 5, 0, 0, 0, 1, 1, 21, 2, 0, 0, 1, 1, 1, 1, 1]' : 0.136182}
{'[6, 5, 5, 5, 0, 0, 0, 1, 1, 21, 2, 0, 0, 1, 1, 1, 1, 1]' : 0.136416}
{'[6, 5, 5, 5, 0, 0, 0, 1, 1, 21, 2, 0, 0, 1, 1, 1, 1, 1]' : 0.135922}
{'[6, 5, 5, 5, 0, 0, 0, 1, 1, 21, 2, 0, 0, 1, 1, 1, 1, 1]' : 0.136018}
{'[6, 5, 5, 5, 0, 0, 0, 1, 1, 21, 2, 0, 0, 1, 1, 1, 1, 1]' : 0.135882}
{'[6, 5, 5, 5, 0, 0, 0, 1, 1, 21, 2, 0, 0, 1, 1, 1, 1, 1]' : 0.135658}
{'[6, 5, 5, 5, 0, 0, 0, 1, 1, 21, 2, 0, 0, 1, 1, 1, 1, 1]' : 0.13623}
{'[6, 5, 5, 5, 0, 0, 0, 1, 1, 21, 2, 0, 0, 1, 1, 1, 1, 1]' : 0.1357}
{'[6, 5, 5, 5, 0, 0, 0, 1, 1, 21, 2, 0, 0, 1, 1, 1, 1, 1]' : 0.135888}
{'[6, 5, 5, 5, 0, 0, 0, 1, 1, 21, 2, 0, 0, 1, 1, 1, 1, 1]' : 0.135742}
{'[6, 5, 5, 5, 0, 0, 0, 1, 1, 21, 2, 0, 0, 1, 1, 1, 1, 1]' : 0.13575}
{'[6, 5, 5, 5, 0, 0, 0, 1, 1, 21, 2, 0, 0, 1, 1, 1, 1, 1]' : 0.135902}
{'[6, 5, 5, 5, 0, 0, 0, 1, 1, 21, 2, 0, 0, 1, 1, 1, 1, 1]' : 0.135869}
{'[6, 5, 5, 5, 0, 0, 0, 1, 1, 21, 2, 0, 0, 1, 1, 1, 1, 1]' : 0.135627}
{'[6, 5, 5, 5, 0, 0, 0, 1, 1, 21, 2, 0, 0, 1, 1, 1, 1, 1]' : 0.135721}
{'[6, 5, 5, 5, 0, 0, 0, 1, 1, 21, 2, 0, 0, 1, 1, 1, 1, 1]' : 0.135614}
{'[6, 5, 5, 5, 0, 0, 0, 1, 1, 21, 2, 0, 0, 1, 1, 1, 1, 1]' : 0.13605}

out:
 ["{'[6, 5, 5, 5, 0, 0, 0, 1, 1, 21, 2, 0, 0, 1, 1, 1, 1, 1]' : 0.139795}", "{'[6, 5, 5, 5, 0, 0, 0, 1, 1, 21, 2, 0, 0, 1, 1, 1, 1, 1]' : 0.139968}", "{'[6, 5, 5, 5, 0, 0, 0, 1, 1, 21, 2, 0, 0, 1, 1, 1, 1, 1]' : 0.139584}", "{'[6, 5, 5, 5, 0, 0, 0, 1, 1, 21, 2, 0, 0, 1, 1, 1, 1, 1]' : 0.139907}", "{'[6, 5, 5, 5, 0, 0, 0, 1, 1, 21, 2, 0, 0, 1, 1, 1, 1, 1]' : 0.139635}", "{'[6, 5, 5, 5, 0, 0, 0, 1, 1, 21, 2, 0, 0, 1, 1, 1, 1, 1]' : 0.140286}", "{'[6, 5, 5, 5, 0, 0, 0, 1, 1, 21, 2, 0, 0, 1, 1, 1, 1, 1]' : 0.138365}", "{'[6, 5, 5, 5, 0, 0, 0, 1, 1, 21, 2, 0, 0, 1, 1, 1, 1, 1]' : 0.136059}", "{'[6, 5, 5, 5, 0, 0, 0, 1, 1, 21, 2, 0, 0, 1, 1, 1, 1, 1]' : 0.135692}", "{'[6, 5, 5, 5, 0, 0, 0, 1, 1, 21, 2, 0, 0, 1, 1, 1, 1, 1]' : 0.135849}", "{'[6, 5, 5, 5, 0, 0, 0, 1, 1, 21, 2, 0, 0, 1, 1, 1, 1, 1]' : 0.136048}", "{'[6, 5, 5, 5, 0, 0, 0, 1, 1, 21, 2, 0, 0, 1, 1, 1, 1, 1]' : 0.135759}", "{'[6, 5, 5, 5, 0, 0, 0, 1, 1, 21, 2, 0, 0, 1, 1, 1, 1, 1]' : 0.135889}", "{'[6, 5, 5, 5, 0, 0, 0, 1, 1, 21, 2, 0, 0, 1, 1, 1, 1, 1]' : 0.136182}", "{'[6, 5, 5, 5, 0, 0, 0, 1, 1, 21, 2, 0, 0, 1, 1, 1, 1, 1]' : 0.136416}", "{'[6, 5, 5, 5, 0, 0, 0, 1, 1, 21, 2, 0, 0, 1, 1, 1, 1, 1]' : 0.135922}", "{'[6, 5, 5, 5, 0, 0, 0, 1, 1, 21, 2, 0, 0, 1, 1, 1, 1, 1]' : 0.136018}", "{'[6, 5, 5, 5, 0, 0, 0, 1, 1, 21, 2, 0, 0, 1, 1, 1, 1, 1]' : 0.135882}", "{'[6, 5, 5, 5, 0, 0, 0, 1, 1, 21, 2, 0, 0, 1, 1, 1, 1, 1]' : 0.135658}", "{'[6, 5, 5, 5, 0, 0, 0, 1, 1, 21, 2, 0, 0, 1, 1, 1, 1, 1]' : 0.13623}", "{'[6, 5, 5, 5, 0, 0, 0, 1, 1, 21, 2, 0, 0, 1, 1, 1, 1, 1]' : 0.1357}", "{'[6, 5, 5, 5, 0, 0, 0, 1, 1, 21, 2, 0, 0, 1, 1, 1, 1, 1]' : 0.135888}", "{'[6, 5, 5, 5, 0, 0, 0, 1, 1, 21, 2, 0, 0, 1, 1, 1, 1, 1]' : 0.135742}", "{'[6, 5, 5, 5, 0, 0, 0, 1, 1, 21, 2, 0, 0, 1, 1, 1, 1, 1]' : 0.13575}", "{'[6, 5, 5, 5, 0, 0, 0, 1, 1, 21, 2, 0, 0, 1, 1, 1, 1, 1]' : 0.135902}", "{'[6, 5, 5, 5, 0, 0, 0, 1, 1, 21, 2, 0, 0, 1, 1, 1, 1, 1]' : 0.135869}", "{'[6, 5, 5, 5, 0, 0, 0, 1, 1, 21, 2, 0, 0, 1, 1, 1, 1, 1]' : 0.135627}", "{'[6, 5, 5, 5, 0, 0, 0, 1, 1, 21, 2, 0, 0, 1, 1, 1, 1, 1]' : 0.135721}", "{'[6, 5, 5, 5, 0, 0, 0, 1, 1, 21, 2, 0, 0, 1, 1, 1, 1, 1]' : 0.135614}", "{'[6, 5, 5, 5, 0, 0, 0, 1, 1, 21, 2, 0, 0, 1, 1, 1, 1, 1]' : 0.13605}"]
returning from 'run': {'[6, 5, 5, 5, 0, 0, 0, 1, 1, 21, 2, 0, 0, 1, 1, 1, 1, 1]': ([0.139795, 0.139968, 0.139584, 0.139907, 0.139635, 0.140286, 0.138365, 0.136059, 0.135692, 0.135849, 0.136048, 0.135759, 0.135889, 0.136182, 0.136416, 0.135922, 0.136018, 0.135882, 0.135658, 0.13623, 0.1357, 0.135888, 0.135742, 0.13575, 0.135902, 0.135869, 0.135627, 0.135721, 0.135614, 0.13605], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 5, 5, 5, 0, 0, 0, 1, 1, 21, 2, 0, 0, 1, 1, 1, 1, 1]': ([0.139795, 0.139968, 0.139584, 0.139907, 0.139635, 0.140286, 0.138365, 0.136059, 0.135692, 0.135849, 0.136048, 0.135759, 0.135889, 0.136182, 0.136416, 0.135922, 0.136018, 0.135882, 0.135658, 0.13623, 0.1357, 0.135888, 0.135742, 0.13575, 0.135902, 0.135869, 0.135627, 0.135721, 0.135614, 0.13605], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	26
        Max loop nest depth: 	6
        Additions: 		583
        Multiplications: 	216
        Divisions: 		0
        Logical: 		0
        Reads: 			1202
        Writes: 		237
        Comparisons:		26
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest80.exe __orio_perftest80.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest80.exe  
Program Test Output: 
{'[3, 3, 1, 2, 3, 6, 1, 1, 13, 0, 2, 7, 1, 0, 1, 1, 0, 0]' : 0.113329}
{'[3, 3, 1, 2, 3, 6, 1, 1, 13, 0, 2, 7, 1, 0, 1, 1, 0, 0]' : 0.113276}
{'[3, 3, 1, 2, 3, 6, 1, 1, 13, 0, 2, 7, 1, 0, 1, 1, 0, 0]' : 0.113191}
{'[3, 3, 1, 2, 3, 6, 1, 1, 13, 0, 2, 7, 1, 0, 1, 1, 0, 0]' : 0.113168}
{'[3, 3, 1, 2, 3, 6, 1, 1, 13, 0, 2, 7, 1, 0, 1, 1, 0, 0]' : 0.110723}
{'[3, 3, 1, 2, 3, 6, 1, 1, 13, 0, 2, 7, 1, 0, 1, 1, 0, 0]' : 0.098434}
{'[3, 3, 1, 2, 3, 6, 1, 1, 13, 0, 2, 7, 1, 0, 1, 1, 0, 0]' : 0.0982552}
{'[3, 3, 1, 2, 3, 6, 1, 1, 13, 0, 2, 7, 1, 0, 1, 1, 0, 0]' : 0.0982881}
{'[3, 3, 1, 2, 3, 6, 1, 1, 13, 0, 2, 7, 1, 0, 1, 1, 0, 0]' : 0.0982051}
{'[3, 3, 1, 2, 3, 6, 1, 1, 13, 0, 2, 7, 1, 0, 1, 1, 0, 0]' : 0.0980861}
{'[3, 3, 1, 2, 3, 6, 1, 1, 13, 0, 2, 7, 1, 0, 1, 1, 0, 0]' : 0.0983939}
{'[3, 3, 1, 2, 3, 6, 1, 1, 13, 0, 2, 7, 1, 0, 1, 1, 0, 0]' : 0.0980392}
{'[3, 3, 1, 2, 3, 6, 1, 1, 13, 0, 2, 7, 1, 0, 1, 1, 0, 0]' : 0.097985}
{'[3, 3, 1, 2, 3, 6, 1, 1, 13, 0, 2, 7, 1, 0, 1, 1, 0, 0]' : 0.098105}
{'[3, 3, 1, 2, 3, 6, 1, 1, 13, 0, 2, 7, 1, 0, 1, 1, 0, 0]' : 0.0980279}
{'[3, 3, 1, 2, 3, 6, 1, 1, 13, 0, 2, 7, 1, 0, 1, 1, 0, 0]' : 0.0980289}
{'[3, 3, 1, 2, 3, 6, 1, 1, 13, 0, 2, 7, 1, 0, 1, 1, 0, 0]' : 0.0980809}
{'[3, 3, 1, 2, 3, 6, 1, 1, 13, 0, 2, 7, 1, 0, 1, 1, 0, 0]' : 0.098254}
{'[3, 3, 1, 2, 3, 6, 1, 1, 13, 0, 2, 7, 1, 0, 1, 1, 0, 0]' : 0.098196}
{'[3, 3, 1, 2, 3, 6, 1, 1, 13, 0, 2, 7, 1, 0, 1, 1, 0, 0]' : 0.0981681}
{'[3, 3, 1, 2, 3, 6, 1, 1, 13, 0, 2, 7, 1, 0, 1, 1, 0, 0]' : 0.0981688}
{'[3, 3, 1, 2, 3, 6, 1, 1, 13, 0, 2, 7, 1, 0, 1, 1, 0, 0]' : 0.0979841}
{'[3, 3, 1, 2, 3, 6, 1, 1, 13, 0, 2, 7, 1, 0, 1, 1, 0, 0]' : 0.0981908}
{'[3, 3, 1, 2, 3, 6, 1, 1, 13, 0, 2, 7, 1, 0, 1, 1, 0, 0]' : 0.09815}
{'[3, 3, 1, 2, 3, 6, 1, 1, 13, 0, 2, 7, 1, 0, 1, 1, 0, 0]' : 0.098007}
{'[3, 3, 1, 2, 3, 6, 1, 1, 13, 0, 2, 7, 1, 0, 1, 1, 0, 0]' : 0.0979559}
{'[3, 3, 1, 2, 3, 6, 1, 1, 13, 0, 2, 7, 1, 0, 1, 1, 0, 0]' : 0.098139}
{'[3, 3, 1, 2, 3, 6, 1, 1, 13, 0, 2, 7, 1, 0, 1, 1, 0, 0]' : 0.098058}
{'[3, 3, 1, 2, 3, 6, 1, 1, 13, 0, 2, 7, 1, 0, 1, 1, 0, 0]' : 0.0986211}
{'[3, 3, 1, 2, 3, 6, 1, 1, 13, 0, 2, 7, 1, 0, 1, 1, 0, 0]' : 0.098268}

out:
 ["{'[3, 3, 1, 2, 3, 6, 1, 1, 13, 0, 2, 7, 1, 0, 1, 1, 0, 0]' : 0.113329}", "{'[3, 3, 1, 2, 3, 6, 1, 1, 13, 0, 2, 7, 1, 0, 1, 1, 0, 0]' : 0.113276}", "{'[3, 3, 1, 2, 3, 6, 1, 1, 13, 0, 2, 7, 1, 0, 1, 1, 0, 0]' : 0.113191}", "{'[3, 3, 1, 2, 3, 6, 1, 1, 13, 0, 2, 7, 1, 0, 1, 1, 0, 0]' : 0.113168}", "{'[3, 3, 1, 2, 3, 6, 1, 1, 13, 0, 2, 7, 1, 0, 1, 1, 0, 0]' : 0.110723}", "{'[3, 3, 1, 2, 3, 6, 1, 1, 13, 0, 2, 7, 1, 0, 1, 1, 0, 0]' : 0.098434}", "{'[3, 3, 1, 2, 3, 6, 1, 1, 13, 0, 2, 7, 1, 0, 1, 1, 0, 0]' : 0.0982552}", "{'[3, 3, 1, 2, 3, 6, 1, 1, 13, 0, 2, 7, 1, 0, 1, 1, 0, 0]' : 0.0982881}", "{'[3, 3, 1, 2, 3, 6, 1, 1, 13, 0, 2, 7, 1, 0, 1, 1, 0, 0]' : 0.0982051}", "{'[3, 3, 1, 2, 3, 6, 1, 1, 13, 0, 2, 7, 1, 0, 1, 1, 0, 0]' : 0.0980861}", "{'[3, 3, 1, 2, 3, 6, 1, 1, 13, 0, 2, 7, 1, 0, 1, 1, 0, 0]' : 0.0983939}", "{'[3, 3, 1, 2, 3, 6, 1, 1, 13, 0, 2, 7, 1, 0, 1, 1, 0, 0]' : 0.0980392}", "{'[3, 3, 1, 2, 3, 6, 1, 1, 13, 0, 2, 7, 1, 0, 1, 1, 0, 0]' : 0.097985}", "{'[3, 3, 1, 2, 3, 6, 1, 1, 13, 0, 2, 7, 1, 0, 1, 1, 0, 0]' : 0.098105}", "{'[3, 3, 1, 2, 3, 6, 1, 1, 13, 0, 2, 7, 1, 0, 1, 1, 0, 0]' : 0.0980279}", "{'[3, 3, 1, 2, 3, 6, 1, 1, 13, 0, 2, 7, 1, 0, 1, 1, 0, 0]' : 0.0980289}", "{'[3, 3, 1, 2, 3, 6, 1, 1, 13, 0, 2, 7, 1, 0, 1, 1, 0, 0]' : 0.0980809}", "{'[3, 3, 1, 2, 3, 6, 1, 1, 13, 0, 2, 7, 1, 0, 1, 1, 0, 0]' : 0.098254}", "{'[3, 3, 1, 2, 3, 6, 1, 1, 13, 0, 2, 7, 1, 0, 1, 1, 0, 0]' : 0.098196}", "{'[3, 3, 1, 2, 3, 6, 1, 1, 13, 0, 2, 7, 1, 0, 1, 1, 0, 0]' : 0.0981681}", "{'[3, 3, 1, 2, 3, 6, 1, 1, 13, 0, 2, 7, 1, 0, 1, 1, 0, 0]' : 0.0981688}", "{'[3, 3, 1, 2, 3, 6, 1, 1, 13, 0, 2, 7, 1, 0, 1, 1, 0, 0]' : 0.0979841}", "{'[3, 3, 1, 2, 3, 6, 1, 1, 13, 0, 2, 7, 1, 0, 1, 1, 0, 0]' : 0.0981908}", "{'[3, 3, 1, 2, 3, 6, 1, 1, 13, 0, 2, 7, 1, 0, 1, 1, 0, 0]' : 0.09815}", "{'[3, 3, 1, 2, 3, 6, 1, 1, 13, 0, 2, 7, 1, 0, 1, 1, 0, 0]' : 0.098007}", "{'[3, 3, 1, 2, 3, 6, 1, 1, 13, 0, 2, 7, 1, 0, 1, 1, 0, 0]' : 0.0979559}", "{'[3, 3, 1, 2, 3, 6, 1, 1, 13, 0, 2, 7, 1, 0, 1, 1, 0, 0]' : 0.098139}", "{'[3, 3, 1, 2, 3, 6, 1, 1, 13, 0, 2, 7, 1, 0, 1, 1, 0, 0]' : 0.098058}", "{'[3, 3, 1, 2, 3, 6, 1, 1, 13, 0, 2, 7, 1, 0, 1, 1, 0, 0]' : 0.0986211}", "{'[3, 3, 1, 2, 3, 6, 1, 1, 13, 0, 2, 7, 1, 0, 1, 1, 0, 0]' : 0.098268}"]
returning from 'run': {'[3, 3, 1, 2, 3, 6, 1, 1, 13, 0, 2, 7, 1, 0, 1, 1, 0, 0]': ([0.113329, 0.113276, 0.113191, 0.113168, 0.110723, 0.098434, 0.0982552, 0.0982881, 0.0982051, 0.0980861, 0.0983939, 0.0980392, 0.097985, 0.098105, 0.0980279, 0.0980289, 0.0980809, 0.098254, 0.098196, 0.0981681, 0.0981688, 0.0979841, 0.0981908, 0.09815, 0.098007, 0.0979559, 0.098139, 0.098058, 0.0986211, 0.098268], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 3, 1, 2, 3, 6, 1, 1, 13, 0, 2, 7, 1, 0, 1, 1, 0, 0]': ([0.113329, 0.113276, 0.113191, 0.113168, 0.110723, 0.098434, 0.0982552, 0.0982881, 0.0982051, 0.0980861, 0.0983939, 0.0980392, 0.097985, 0.098105, 0.0980279, 0.0980289, 0.0980809, 0.098254, 0.098196, 0.0981681, 0.0981688, 0.0979841, 0.0981908, 0.09815, 0.098007, 0.0979559, 0.098139, 0.098058, 0.0986211, 0.098268], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = iii
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		269
        Multiplications: 	88
        Divisions: 		0
        Logical: 		0
        Reads: 			572
        Writes: 		87
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest81.exe __orio_perftest81.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest81.exe  
Program Test Output: 
{'[6, 2, 0, 4, 4, 1, 1, 0, 3, 0, 2, 6, 0, 0, 2, 0, 1, 1]' : 0.223231}
{'[6, 2, 0, 4, 4, 1, 1, 0, 3, 0, 2, 6, 0, 0, 2, 0, 1, 1]' : 0.223135}
{'[6, 2, 0, 4, 4, 1, 1, 0, 3, 0, 2, 6, 0, 0, 2, 0, 1, 1]' : 0.215675}
{'[6, 2, 0, 4, 4, 1, 1, 0, 3, 0, 2, 6, 0, 0, 2, 0, 1, 1]' : 0.186563}
{'[6, 2, 0, 4, 4, 1, 1, 0, 3, 0, 2, 6, 0, 0, 2, 0, 1, 1]' : 0.186485}
{'[6, 2, 0, 4, 4, 1, 1, 0, 3, 0, 2, 6, 0, 0, 2, 0, 1, 1]' : 0.186406}
{'[6, 2, 0, 4, 4, 1, 1, 0, 3, 0, 2, 6, 0, 0, 2, 0, 1, 1]' : 0.18632}
{'[6, 2, 0, 4, 4, 1, 1, 0, 3, 0, 2, 6, 0, 0, 2, 0, 1, 1]' : 0.186327}
{'[6, 2, 0, 4, 4, 1, 1, 0, 3, 0, 2, 6, 0, 0, 2, 0, 1, 1]' : 0.186904}
{'[6, 2, 0, 4, 4, 1, 1, 0, 3, 0, 2, 6, 0, 0, 2, 0, 1, 1]' : 0.186399}
{'[6, 2, 0, 4, 4, 1, 1, 0, 3, 0, 2, 6, 0, 0, 2, 0, 1, 1]' : 0.186607}
{'[6, 2, 0, 4, 4, 1, 1, 0, 3, 0, 2, 6, 0, 0, 2, 0, 1, 1]' : 0.186726}
{'[6, 2, 0, 4, 4, 1, 1, 0, 3, 0, 2, 6, 0, 0, 2, 0, 1, 1]' : 0.186374}
{'[6, 2, 0, 4, 4, 1, 1, 0, 3, 0, 2, 6, 0, 0, 2, 0, 1, 1]' : 0.186592}
{'[6, 2, 0, 4, 4, 1, 1, 0, 3, 0, 2, 6, 0, 0, 2, 0, 1, 1]' : 0.186687}
{'[6, 2, 0, 4, 4, 1, 1, 0, 3, 0, 2, 6, 0, 0, 2, 0, 1, 1]' : 0.186412}
{'[6, 2, 0, 4, 4, 1, 1, 0, 3, 0, 2, 6, 0, 0, 2, 0, 1, 1]' : 0.186378}
{'[6, 2, 0, 4, 4, 1, 1, 0, 3, 0, 2, 6, 0, 0, 2, 0, 1, 1]' : 0.186404}
{'[6, 2, 0, 4, 4, 1, 1, 0, 3, 0, 2, 6, 0, 0, 2, 0, 1, 1]' : 0.18647}
{'[6, 2, 0, 4, 4, 1, 1, 0, 3, 0, 2, 6, 0, 0, 2, 0, 1, 1]' : 0.186351}
{'[6, 2, 0, 4, 4, 1, 1, 0, 3, 0, 2, 6, 0, 0, 2, 0, 1, 1]' : 0.186732}
{'[6, 2, 0, 4, 4, 1, 1, 0, 3, 0, 2, 6, 0, 0, 2, 0, 1, 1]' : 0.186404}
{'[6, 2, 0, 4, 4, 1, 1, 0, 3, 0, 2, 6, 0, 0, 2, 0, 1, 1]' : 0.186896}
{'[6, 2, 0, 4, 4, 1, 1, 0, 3, 0, 2, 6, 0, 0, 2, 0, 1, 1]' : 0.189579}
{'[6, 2, 0, 4, 4, 1, 1, 0, 3, 0, 2, 6, 0, 0, 2, 0, 1, 1]' : 0.186315}
{'[6, 2, 0, 4, 4, 1, 1, 0, 3, 0, 2, 6, 0, 0, 2, 0, 1, 1]' : 0.186489}
{'[6, 2, 0, 4, 4, 1, 1, 0, 3, 0, 2, 6, 0, 0, 2, 0, 1, 1]' : 0.186709}
{'[6, 2, 0, 4, 4, 1, 1, 0, 3, 0, 2, 6, 0, 0, 2, 0, 1, 1]' : 0.186498}
{'[6, 2, 0, 4, 4, 1, 1, 0, 3, 0, 2, 6, 0, 0, 2, 0, 1, 1]' : 0.186504}
{'[6, 2, 0, 4, 4, 1, 1, 0, 3, 0, 2, 6, 0, 0, 2, 0, 1, 1]' : 0.186466}

out:
 ["{'[6, 2, 0, 4, 4, 1, 1, 0, 3, 0, 2, 6, 0, 0, 2, 0, 1, 1]' : 0.223231}", "{'[6, 2, 0, 4, 4, 1, 1, 0, 3, 0, 2, 6, 0, 0, 2, 0, 1, 1]' : 0.223135}", "{'[6, 2, 0, 4, 4, 1, 1, 0, 3, 0, 2, 6, 0, 0, 2, 0, 1, 1]' : 0.215675}", "{'[6, 2, 0, 4, 4, 1, 1, 0, 3, 0, 2, 6, 0, 0, 2, 0, 1, 1]' : 0.186563}", "{'[6, 2, 0, 4, 4, 1, 1, 0, 3, 0, 2, 6, 0, 0, 2, 0, 1, 1]' : 0.186485}", "{'[6, 2, 0, 4, 4, 1, 1, 0, 3, 0, 2, 6, 0, 0, 2, 0, 1, 1]' : 0.186406}", "{'[6, 2, 0, 4, 4, 1, 1, 0, 3, 0, 2, 6, 0, 0, 2, 0, 1, 1]' : 0.18632}", "{'[6, 2, 0, 4, 4, 1, 1, 0, 3, 0, 2, 6, 0, 0, 2, 0, 1, 1]' : 0.186327}", "{'[6, 2, 0, 4, 4, 1, 1, 0, 3, 0, 2, 6, 0, 0, 2, 0, 1, 1]' : 0.186904}", "{'[6, 2, 0, 4, 4, 1, 1, 0, 3, 0, 2, 6, 0, 0, 2, 0, 1, 1]' : 0.186399}", "{'[6, 2, 0, 4, 4, 1, 1, 0, 3, 0, 2, 6, 0, 0, 2, 0, 1, 1]' : 0.186607}", "{'[6, 2, 0, 4, 4, 1, 1, 0, 3, 0, 2, 6, 0, 0, 2, 0, 1, 1]' : 0.186726}", "{'[6, 2, 0, 4, 4, 1, 1, 0, 3, 0, 2, 6, 0, 0, 2, 0, 1, 1]' : 0.186374}", "{'[6, 2, 0, 4, 4, 1, 1, 0, 3, 0, 2, 6, 0, 0, 2, 0, 1, 1]' : 0.186592}", "{'[6, 2, 0, 4, 4, 1, 1, 0, 3, 0, 2, 6, 0, 0, 2, 0, 1, 1]' : 0.186687}", "{'[6, 2, 0, 4, 4, 1, 1, 0, 3, 0, 2, 6, 0, 0, 2, 0, 1, 1]' : 0.186412}", "{'[6, 2, 0, 4, 4, 1, 1, 0, 3, 0, 2, 6, 0, 0, 2, 0, 1, 1]' : 0.186378}", "{'[6, 2, 0, 4, 4, 1, 1, 0, 3, 0, 2, 6, 0, 0, 2, 0, 1, 1]' : 0.186404}", "{'[6, 2, 0, 4, 4, 1, 1, 0, 3, 0, 2, 6, 0, 0, 2, 0, 1, 1]' : 0.18647}", "{'[6, 2, 0, 4, 4, 1, 1, 0, 3, 0, 2, 6, 0, 0, 2, 0, 1, 1]' : 0.186351}", "{'[6, 2, 0, 4, 4, 1, 1, 0, 3, 0, 2, 6, 0, 0, 2, 0, 1, 1]' : 0.186732}", "{'[6, 2, 0, 4, 4, 1, 1, 0, 3, 0, 2, 6, 0, 0, 2, 0, 1, 1]' : 0.186404}", "{'[6, 2, 0, 4, 4, 1, 1, 0, 3, 0, 2, 6, 0, 0, 2, 0, 1, 1]' : 0.186896}", "{'[6, 2, 0, 4, 4, 1, 1, 0, 3, 0, 2, 6, 0, 0, 2, 0, 1, 1]' : 0.189579}", "{'[6, 2, 0, 4, 4, 1, 1, 0, 3, 0, 2, 6, 0, 0, 2, 0, 1, 1]' : 0.186315}", "{'[6, 2, 0, 4, 4, 1, 1, 0, 3, 0, 2, 6, 0, 0, 2, 0, 1, 1]' : 0.186489}", "{'[6, 2, 0, 4, 4, 1, 1, 0, 3, 0, 2, 6, 0, 0, 2, 0, 1, 1]' : 0.186709}", "{'[6, 2, 0, 4, 4, 1, 1, 0, 3, 0, 2, 6, 0, 0, 2, 0, 1, 1]' : 0.186498}", "{'[6, 2, 0, 4, 4, 1, 1, 0, 3, 0, 2, 6, 0, 0, 2, 0, 1, 1]' : 0.186504}", "{'[6, 2, 0, 4, 4, 1, 1, 0, 3, 0, 2, 6, 0, 0, 2, 0, 1, 1]' : 0.186466}"]
returning from 'run': {'[6, 2, 0, 4, 4, 1, 1, 0, 3, 0, 2, 6, 0, 0, 2, 0, 1, 1]': ([0.223231, 0.223135, 0.215675, 0.186563, 0.186485, 0.186406, 0.18632, 0.186327, 0.186904, 0.186399, 0.186607, 0.186726, 0.186374, 0.186592, 0.186687, 0.186412, 0.186378, 0.186404, 0.18647, 0.186351, 0.186732, 0.186404, 0.186896, 0.189579, 0.186315, 0.186489, 0.186709, 0.186498, 0.186504, 0.186466], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 2, 0, 4, 4, 1, 1, 0, 3, 0, 2, 6, 0, 0, 2, 0, 1, 1]': ([0.223231, 0.223135, 0.215675, 0.186563, 0.186485, 0.186406, 0.18632, 0.186327, 0.186904, 0.186399, 0.186607, 0.186726, 0.186374, 0.186592, 0.186687, 0.186412, 0.186378, 0.186404, 0.18647, 0.186351, 0.186732, 0.186404, 0.186896, 0.189579, 0.186315, 0.186489, 0.186709, 0.186498, 0.186504, 0.186466], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	25
        Max loop nest depth: 	6
        Additions: 		291
        Multiplications: 	78
        Divisions: 		0
        Logical: 		0
        Reads: 			642
        Writes: 		148
        Comparisons:		25
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest82.exe __orio_perftest82.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest82.exe  
Program Test Output: 
{'[6, 1, 1, 6, 1, 0, 1, 0, 9, 1, 2, 0, 0, 0, 1, 1, 0, 0]' : 0.201505}
{'[6, 1, 1, 6, 1, 0, 1, 0, 9, 1, 2, 0, 0, 0, 1, 1, 0, 0]' : 0.201199}
{'[6, 1, 1, 6, 1, 0, 1, 0, 9, 1, 2, 0, 0, 0, 1, 1, 0, 0]' : 0.190787}
{'[6, 1, 1, 6, 1, 0, 1, 0, 9, 1, 2, 0, 0, 0, 1, 1, 0, 0]' : 0.169099}
{'[6, 1, 1, 6, 1, 0, 1, 0, 9, 1, 2, 0, 0, 0, 1, 1, 0, 0]' : 0.169624}
{'[6, 1, 1, 6, 1, 0, 1, 0, 9, 1, 2, 0, 0, 0, 1, 1, 0, 0]' : 0.169015}
{'[6, 1, 1, 6, 1, 0, 1, 0, 9, 1, 2, 0, 0, 0, 1, 1, 0, 0]' : 0.169123}
{'[6, 1, 1, 6, 1, 0, 1, 0, 9, 1, 2, 0, 0, 0, 1, 1, 0, 0]' : 0.168982}
{'[6, 1, 1, 6, 1, 0, 1, 0, 9, 1, 2, 0, 0, 0, 1, 1, 0, 0]' : 0.169044}
{'[6, 1, 1, 6, 1, 0, 1, 0, 9, 1, 2, 0, 0, 0, 1, 1, 0, 0]' : 0.169152}
{'[6, 1, 1, 6, 1, 0, 1, 0, 9, 1, 2, 0, 0, 0, 1, 1, 0, 0]' : 0.169357}
{'[6, 1, 1, 6, 1, 0, 1, 0, 9, 1, 2, 0, 0, 0, 1, 1, 0, 0]' : 0.169192}
{'[6, 1, 1, 6, 1, 0, 1, 0, 9, 1, 2, 0, 0, 0, 1, 1, 0, 0]' : 0.169339}
{'[6, 1, 1, 6, 1, 0, 1, 0, 9, 1, 2, 0, 0, 0, 1, 1, 0, 0]' : 0.169074}
{'[6, 1, 1, 6, 1, 0, 1, 0, 9, 1, 2, 0, 0, 0, 1, 1, 0, 0]' : 0.169051}
{'[6, 1, 1, 6, 1, 0, 1, 0, 9, 1, 2, 0, 0, 0, 1, 1, 0, 0]' : 0.169073}
{'[6, 1, 1, 6, 1, 0, 1, 0, 9, 1, 2, 0, 0, 0, 1, 1, 0, 0]' : 0.169297}
{'[6, 1, 1, 6, 1, 0, 1, 0, 9, 1, 2, 0, 0, 0, 1, 1, 0, 0]' : 0.169418}
{'[6, 1, 1, 6, 1, 0, 1, 0, 9, 1, 2, 0, 0, 0, 1, 1, 0, 0]' : 0.169107}
{'[6, 1, 1, 6, 1, 0, 1, 0, 9, 1, 2, 0, 0, 0, 1, 1, 0, 0]' : 0.169506}
{'[6, 1, 1, 6, 1, 0, 1, 0, 9, 1, 2, 0, 0, 0, 1, 1, 0, 0]' : 0.169072}
{'[6, 1, 1, 6, 1, 0, 1, 0, 9, 1, 2, 0, 0, 0, 1, 1, 0, 0]' : 0.169588}
{'[6, 1, 1, 6, 1, 0, 1, 0, 9, 1, 2, 0, 0, 0, 1, 1, 0, 0]' : 0.169277}
{'[6, 1, 1, 6, 1, 0, 1, 0, 9, 1, 2, 0, 0, 0, 1, 1, 0, 0]' : 0.169271}
{'[6, 1, 1, 6, 1, 0, 1, 0, 9, 1, 2, 0, 0, 0, 1, 1, 0, 0]' : 0.169332}
{'[6, 1, 1, 6, 1, 0, 1, 0, 9, 1, 2, 0, 0, 0, 1, 1, 0, 0]' : 0.169}
{'[6, 1, 1, 6, 1, 0, 1, 0, 9, 1, 2, 0, 0, 0, 1, 1, 0, 0]' : 0.169048}
{'[6, 1, 1, 6, 1, 0, 1, 0, 9, 1, 2, 0, 0, 0, 1, 1, 0, 0]' : 0.169098}
{'[6, 1, 1, 6, 1, 0, 1, 0, 9, 1, 2, 0, 0, 0, 1, 1, 0, 0]' : 0.169149}
{'[6, 1, 1, 6, 1, 0, 1, 0, 9, 1, 2, 0, 0, 0, 1, 1, 0, 0]' : 0.169124}

out:
 ["{'[6, 1, 1, 6, 1, 0, 1, 0, 9, 1, 2, 0, 0, 0, 1, 1, 0, 0]' : 0.201505}", "{'[6, 1, 1, 6, 1, 0, 1, 0, 9, 1, 2, 0, 0, 0, 1, 1, 0, 0]' : 0.201199}", "{'[6, 1, 1, 6, 1, 0, 1, 0, 9, 1, 2, 0, 0, 0, 1, 1, 0, 0]' : 0.190787}", "{'[6, 1, 1, 6, 1, 0, 1, 0, 9, 1, 2, 0, 0, 0, 1, 1, 0, 0]' : 0.169099}", "{'[6, 1, 1, 6, 1, 0, 1, 0, 9, 1, 2, 0, 0, 0, 1, 1, 0, 0]' : 0.169624}", "{'[6, 1, 1, 6, 1, 0, 1, 0, 9, 1, 2, 0, 0, 0, 1, 1, 0, 0]' : 0.169015}", "{'[6, 1, 1, 6, 1, 0, 1, 0, 9, 1, 2, 0, 0, 0, 1, 1, 0, 0]' : 0.169123}", "{'[6, 1, 1, 6, 1, 0, 1, 0, 9, 1, 2, 0, 0, 0, 1, 1, 0, 0]' : 0.168982}", "{'[6, 1, 1, 6, 1, 0, 1, 0, 9, 1, 2, 0, 0, 0, 1, 1, 0, 0]' : 0.169044}", "{'[6, 1, 1, 6, 1, 0, 1, 0, 9, 1, 2, 0, 0, 0, 1, 1, 0, 0]' : 0.169152}", "{'[6, 1, 1, 6, 1, 0, 1, 0, 9, 1, 2, 0, 0, 0, 1, 1, 0, 0]' : 0.169357}", "{'[6, 1, 1, 6, 1, 0, 1, 0, 9, 1, 2, 0, 0, 0, 1, 1, 0, 0]' : 0.169192}", "{'[6, 1, 1, 6, 1, 0, 1, 0, 9, 1, 2, 0, 0, 0, 1, 1, 0, 0]' : 0.169339}", "{'[6, 1, 1, 6, 1, 0, 1, 0, 9, 1, 2, 0, 0, 0, 1, 1, 0, 0]' : 0.169074}", "{'[6, 1, 1, 6, 1, 0, 1, 0, 9, 1, 2, 0, 0, 0, 1, 1, 0, 0]' : 0.169051}", "{'[6, 1, 1, 6, 1, 0, 1, 0, 9, 1, 2, 0, 0, 0, 1, 1, 0, 0]' : 0.169073}", "{'[6, 1, 1, 6, 1, 0, 1, 0, 9, 1, 2, 0, 0, 0, 1, 1, 0, 0]' : 0.169297}", "{'[6, 1, 1, 6, 1, 0, 1, 0, 9, 1, 2, 0, 0, 0, 1, 1, 0, 0]' : 0.169418}", "{'[6, 1, 1, 6, 1, 0, 1, 0, 9, 1, 2, 0, 0, 0, 1, 1, 0, 0]' : 0.169107}", "{'[6, 1, 1, 6, 1, 0, 1, 0, 9, 1, 2, 0, 0, 0, 1, 1, 0, 0]' : 0.169506}", "{'[6, 1, 1, 6, 1, 0, 1, 0, 9, 1, 2, 0, 0, 0, 1, 1, 0, 0]' : 0.169072}", "{'[6, 1, 1, 6, 1, 0, 1, 0, 9, 1, 2, 0, 0, 0, 1, 1, 0, 0]' : 0.169588}", "{'[6, 1, 1, 6, 1, 0, 1, 0, 9, 1, 2, 0, 0, 0, 1, 1, 0, 0]' : 0.169277}", "{'[6, 1, 1, 6, 1, 0, 1, 0, 9, 1, 2, 0, 0, 0, 1, 1, 0, 0]' : 0.169271}", "{'[6, 1, 1, 6, 1, 0, 1, 0, 9, 1, 2, 0, 0, 0, 1, 1, 0, 0]' : 0.169332}", "{'[6, 1, 1, 6, 1, 0, 1, 0, 9, 1, 2, 0, 0, 0, 1, 1, 0, 0]' : 0.169}", "{'[6, 1, 1, 6, 1, 0, 1, 0, 9, 1, 2, 0, 0, 0, 1, 1, 0, 0]' : 0.169048}", "{'[6, 1, 1, 6, 1, 0, 1, 0, 9, 1, 2, 0, 0, 0, 1, 1, 0, 0]' : 0.169098}", "{'[6, 1, 1, 6, 1, 0, 1, 0, 9, 1, 2, 0, 0, 0, 1, 1, 0, 0]' : 0.169149}", "{'[6, 1, 1, 6, 1, 0, 1, 0, 9, 1, 2, 0, 0, 0, 1, 1, 0, 0]' : 0.169124}"]
returning from 'run': {'[6, 1, 1, 6, 1, 0, 1, 0, 9, 1, 2, 0, 0, 0, 1, 1, 0, 0]': ([0.201505, 0.201199, 0.190787, 0.169099, 0.169624, 0.169015, 0.169123, 0.168982, 0.169044, 0.169152, 0.169357, 0.169192, 0.169339, 0.169074, 0.169051, 0.169073, 0.169297, 0.169418, 0.169107, 0.169506, 0.169072, 0.169588, 0.169277, 0.169271, 0.169332, 0.169, 0.169048, 0.169098, 0.169149, 0.169124], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 1, 1, 6, 1, 0, 1, 0, 9, 1, 2, 0, 0, 0, 1, 1, 0, 0]': ([0.201505, 0.201199, 0.190787, 0.169099, 0.169624, 0.169015, 0.169123, 0.168982, 0.169044, 0.169152, 0.169357, 0.169192, 0.169339, 0.169074, 0.169051, 0.169073, 0.169297, 0.169418, 0.169107, 0.169506, 0.169072, 0.169588, 0.169277, 0.169271, 0.169332, 0.169, 0.169048, 0.169098, 0.169149, 0.169124], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	6
        Additions: 		687
        Multiplications: 	288
        Divisions: 		0
        Logical: 		0
        Reads: 			1450
        Writes: 		294
        Comparisons:		22
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest83.exe __orio_perftest83.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest83.exe  
Program Test Output: 
{'[5, 2, 5, 6, 0, 6, 0, 0, 29, 0, 2, 2, 1, 0, 1, 1, 1, 0]' : 0.104585}
{'[5, 2, 5, 6, 0, 6, 0, 0, 29, 0, 2, 2, 1, 0, 1, 1, 1, 0]' : 0.104368}
{'[5, 2, 5, 6, 0, 6, 0, 0, 29, 0, 2, 2, 1, 0, 1, 1, 1, 0]' : 0.104289}
{'[5, 2, 5, 6, 0, 6, 0, 0, 29, 0, 2, 2, 1, 0, 1, 1, 1, 0]' : 0.104339}
{'[5, 2, 5, 6, 0, 6, 0, 0, 29, 0, 2, 2, 1, 0, 1, 1, 1, 0]' : 0.10376}
{'[5, 2, 5, 6, 0, 6, 0, 0, 29, 0, 2, 2, 1, 0, 1, 1, 1, 0]' : 0.0937331}
{'[5, 2, 5, 6, 0, 6, 0, 0, 29, 0, 2, 2, 1, 0, 1, 1, 1, 0]' : 0.0922019}
{'[5, 2, 5, 6, 0, 6, 0, 0, 29, 0, 2, 2, 1, 0, 1, 1, 1, 0]' : 0.092221}
{'[5, 2, 5, 6, 0, 6, 0, 0, 29, 0, 2, 2, 1, 0, 1, 1, 1, 0]' : 0.0925751}
{'[5, 2, 5, 6, 0, 6, 0, 0, 29, 0, 2, 2, 1, 0, 1, 1, 1, 0]' : 0.092484}
{'[5, 2, 5, 6, 0, 6, 0, 0, 29, 0, 2, 2, 1, 0, 1, 1, 1, 0]' : 0.0922871}
{'[5, 2, 5, 6, 0, 6, 0, 0, 29, 0, 2, 2, 1, 0, 1, 1, 1, 0]' : 0.0924001}
{'[5, 2, 5, 6, 0, 6, 0, 0, 29, 0, 2, 2, 1, 0, 1, 1, 1, 0]' : 0.0923572}
{'[5, 2, 5, 6, 0, 6, 0, 0, 29, 0, 2, 2, 1, 0, 1, 1, 1, 0]' : 0.0927}
{'[5, 2, 5, 6, 0, 6, 0, 0, 29, 0, 2, 2, 1, 0, 1, 1, 1, 0]' : 0.0926759}
{'[5, 2, 5, 6, 0, 6, 0, 0, 29, 0, 2, 2, 1, 0, 1, 1, 1, 0]' : 0.0926521}
{'[5, 2, 5, 6, 0, 6, 0, 0, 29, 0, 2, 2, 1, 0, 1, 1, 1, 0]' : 0.0926349}
{'[5, 2, 5, 6, 0, 6, 0, 0, 29, 0, 2, 2, 1, 0, 1, 1, 1, 0]' : 0.0925572}
{'[5, 2, 5, 6, 0, 6, 0, 0, 29, 0, 2, 2, 1, 0, 1, 1, 1, 0]' : 0.092586}
{'[5, 2, 5, 6, 0, 6, 0, 0, 29, 0, 2, 2, 1, 0, 1, 1, 1, 0]' : 0.0925779}
{'[5, 2, 5, 6, 0, 6, 0, 0, 29, 0, 2, 2, 1, 0, 1, 1, 1, 0]' : 0.0929}
{'[5, 2, 5, 6, 0, 6, 0, 0, 29, 0, 2, 2, 1, 0, 1, 1, 1, 0]' : 0.0928531}
{'[5, 2, 5, 6, 0, 6, 0, 0, 29, 0, 2, 2, 1, 0, 1, 1, 1, 0]' : 0.0932269}
{'[5, 2, 5, 6, 0, 6, 0, 0, 29, 0, 2, 2, 1, 0, 1, 1, 1, 0]' : 0.0925801}
{'[5, 2, 5, 6, 0, 6, 0, 0, 29, 0, 2, 2, 1, 0, 1, 1, 1, 0]' : 0.0927551}
{'[5, 2, 5, 6, 0, 6, 0, 0, 29, 0, 2, 2, 1, 0, 1, 1, 1, 0]' : 0.0926321}
{'[5, 2, 5, 6, 0, 6, 0, 0, 29, 0, 2, 2, 1, 0, 1, 1, 1, 0]' : 0.0927069}
{'[5, 2, 5, 6, 0, 6, 0, 0, 29, 0, 2, 2, 1, 0, 1, 1, 1, 0]' : 0.092819}
{'[5, 2, 5, 6, 0, 6, 0, 0, 29, 0, 2, 2, 1, 0, 1, 1, 1, 0]' : 0.0927551}
{'[5, 2, 5, 6, 0, 6, 0, 0, 29, 0, 2, 2, 1, 0, 1, 1, 1, 0]' : 0.0926402}

out:
 ["{'[5, 2, 5, 6, 0, 6, 0, 0, 29, 0, 2, 2, 1, 0, 1, 1, 1, 0]' : 0.104585}", "{'[5, 2, 5, 6, 0, 6, 0, 0, 29, 0, 2, 2, 1, 0, 1, 1, 1, 0]' : 0.104368}", "{'[5, 2, 5, 6, 0, 6, 0, 0, 29, 0, 2, 2, 1, 0, 1, 1, 1, 0]' : 0.104289}", "{'[5, 2, 5, 6, 0, 6, 0, 0, 29, 0, 2, 2, 1, 0, 1, 1, 1, 0]' : 0.104339}", "{'[5, 2, 5, 6, 0, 6, 0, 0, 29, 0, 2, 2, 1, 0, 1, 1, 1, 0]' : 0.10376}", "{'[5, 2, 5, 6, 0, 6, 0, 0, 29, 0, 2, 2, 1, 0, 1, 1, 1, 0]' : 0.0937331}", "{'[5, 2, 5, 6, 0, 6, 0, 0, 29, 0, 2, 2, 1, 0, 1, 1, 1, 0]' : 0.0922019}", "{'[5, 2, 5, 6, 0, 6, 0, 0, 29, 0, 2, 2, 1, 0, 1, 1, 1, 0]' : 0.092221}", "{'[5, 2, 5, 6, 0, 6, 0, 0, 29, 0, 2, 2, 1, 0, 1, 1, 1, 0]' : 0.0925751}", "{'[5, 2, 5, 6, 0, 6, 0, 0, 29, 0, 2, 2, 1, 0, 1, 1, 1, 0]' : 0.092484}", "{'[5, 2, 5, 6, 0, 6, 0, 0, 29, 0, 2, 2, 1, 0, 1, 1, 1, 0]' : 0.0922871}", "{'[5, 2, 5, 6, 0, 6, 0, 0, 29, 0, 2, 2, 1, 0, 1, 1, 1, 0]' : 0.0924001}", "{'[5, 2, 5, 6, 0, 6, 0, 0, 29, 0, 2, 2, 1, 0, 1, 1, 1, 0]' : 0.0923572}", "{'[5, 2, 5, 6, 0, 6, 0, 0, 29, 0, 2, 2, 1, 0, 1, 1, 1, 0]' : 0.0927}", "{'[5, 2, 5, 6, 0, 6, 0, 0, 29, 0, 2, 2, 1, 0, 1, 1, 1, 0]' : 0.0926759}", "{'[5, 2, 5, 6, 0, 6, 0, 0, 29, 0, 2, 2, 1, 0, 1, 1, 1, 0]' : 0.0926521}", "{'[5, 2, 5, 6, 0, 6, 0, 0, 29, 0, 2, 2, 1, 0, 1, 1, 1, 0]' : 0.0926349}", "{'[5, 2, 5, 6, 0, 6, 0, 0, 29, 0, 2, 2, 1, 0, 1, 1, 1, 0]' : 0.0925572}", "{'[5, 2, 5, 6, 0, 6, 0, 0, 29, 0, 2, 2, 1, 0, 1, 1, 1, 0]' : 0.092586}", "{'[5, 2, 5, 6, 0, 6, 0, 0, 29, 0, 2, 2, 1, 0, 1, 1, 1, 0]' : 0.0925779}", "{'[5, 2, 5, 6, 0, 6, 0, 0, 29, 0, 2, 2, 1, 0, 1, 1, 1, 0]' : 0.0929}", "{'[5, 2, 5, 6, 0, 6, 0, 0, 29, 0, 2, 2, 1, 0, 1, 1, 1, 0]' : 0.0928531}", "{'[5, 2, 5, 6, 0, 6, 0, 0, 29, 0, 2, 2, 1, 0, 1, 1, 1, 0]' : 0.0932269}", "{'[5, 2, 5, 6, 0, 6, 0, 0, 29, 0, 2, 2, 1, 0, 1, 1, 1, 0]' : 0.0925801}", "{'[5, 2, 5, 6, 0, 6, 0, 0, 29, 0, 2, 2, 1, 0, 1, 1, 1, 0]' : 0.0927551}", "{'[5, 2, 5, 6, 0, 6, 0, 0, 29, 0, 2, 2, 1, 0, 1, 1, 1, 0]' : 0.0926321}", "{'[5, 2, 5, 6, 0, 6, 0, 0, 29, 0, 2, 2, 1, 0, 1, 1, 1, 0]' : 0.0927069}", "{'[5, 2, 5, 6, 0, 6, 0, 0, 29, 0, 2, 2, 1, 0, 1, 1, 1, 0]' : 0.092819}", "{'[5, 2, 5, 6, 0, 6, 0, 0, 29, 0, 2, 2, 1, 0, 1, 1, 1, 0]' : 0.0927551}", "{'[5, 2, 5, 6, 0, 6, 0, 0, 29, 0, 2, 2, 1, 0, 1, 1, 1, 0]' : 0.0926402}"]
returning from 'run': {'[5, 2, 5, 6, 0, 6, 0, 0, 29, 0, 2, 2, 1, 0, 1, 1, 1, 0]': ([0.104585, 0.104368, 0.104289, 0.104339, 0.10376, 0.0937331, 0.0922019, 0.092221, 0.0925751, 0.092484, 0.0922871, 0.0924001, 0.0923572, 0.0927, 0.0926759, 0.0926521, 0.0926349, 0.0925572, 0.092586, 0.0925779, 0.0929, 0.0928531, 0.0932269, 0.0925801, 0.0927551, 0.0926321, 0.0927069, 0.092819, 0.0927551, 0.0926402], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 2, 5, 6, 0, 6, 0, 0, 29, 0, 2, 2, 1, 0, 1, 1, 1, 0]': ([0.104585, 0.104368, 0.104289, 0.104339, 0.10376, 0.0937331, 0.0922019, 0.092221, 0.0925751, 0.092484, 0.0922871, 0.0924001, 0.0923572, 0.0927, 0.0926759, 0.0926521, 0.0926349, 0.0925572, 0.092586, 0.0925779, 0.0929, 0.0928531, 0.0932269, 0.0925801, 0.0927551, 0.0926321, 0.0927069, 0.092819, 0.0927551, 0.0926402], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	5
        Additions: 		1460
        Multiplications: 	594
        Divisions: 		0
        Logical: 		0
        Reads: 			2877
        Writes: 		517
        Comparisons:		24
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest84.exe __orio_perftest84.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest84.exe  
Program Test Output: 
{'[2, 0, 5, 4, 2, 0, 1, 1, 9, 0, 2, 27, 1, 0, 0, 1, 1, 1]' : 0.0950599}
{'[2, 0, 5, 4, 2, 0, 1, 1, 9, 0, 2, 27, 1, 0, 0, 1, 1, 1]' : 0.095197}
{'[2, 0, 5, 4, 2, 0, 1, 1, 9, 0, 2, 27, 1, 0, 0, 1, 1, 1]' : 0.0948789}
{'[2, 0, 5, 4, 2, 0, 1, 1, 9, 0, 2, 27, 1, 0, 0, 1, 1, 1]' : 0.095371}
{'[2, 0, 5, 4, 2, 0, 1, 1, 9, 0, 2, 27, 1, 0, 0, 1, 1, 1]' : 0.0949302}
{'[2, 0, 5, 4, 2, 0, 1, 1, 9, 0, 2, 27, 1, 0, 0, 1, 1, 1]' : 0.0948949}
{'[2, 0, 5, 4, 2, 0, 1, 1, 9, 0, 2, 27, 1, 0, 0, 1, 1, 1]' : 0.0948}
{'[2, 0, 5, 4, 2, 0, 1, 1, 9, 0, 2, 27, 1, 0, 0, 1, 1, 1]' : 0.09515}
{'[2, 0, 5, 4, 2, 0, 1, 1, 9, 0, 2, 27, 1, 0, 0, 1, 1, 1]' : 0.095103}
{'[2, 0, 5, 4, 2, 0, 1, 1, 9, 0, 2, 27, 1, 0, 0, 1, 1, 1]' : 0.0949519}
{'[2, 0, 5, 4, 2, 0, 1, 1, 9, 0, 2, 27, 1, 0, 0, 1, 1, 1]' : 0.0950911}
{'[2, 0, 5, 4, 2, 0, 1, 1, 9, 0, 2, 27, 1, 0, 0, 1, 1, 1]' : 0.0948191}
{'[2, 0, 5, 4, 2, 0, 1, 1, 9, 0, 2, 27, 1, 0, 0, 1, 1, 1]' : 0.0948939}
{'[2, 0, 5, 4, 2, 0, 1, 1, 9, 0, 2, 27, 1, 0, 0, 1, 1, 1]' : 0.094806}
{'[2, 0, 5, 4, 2, 0, 1, 1, 9, 0, 2, 27, 1, 0, 0, 1, 1, 1]' : 0.0949211}
{'[2, 0, 5, 4, 2, 0, 1, 1, 9, 0, 2, 27, 1, 0, 0, 1, 1, 1]' : 0.094918}
{'[2, 0, 5, 4, 2, 0, 1, 1, 9, 0, 2, 27, 1, 0, 0, 1, 1, 1]' : 0.095232}
{'[2, 0, 5, 4, 2, 0, 1, 1, 9, 0, 2, 27, 1, 0, 0, 1, 1, 1]' : 0.0950232}
{'[2, 0, 5, 4, 2, 0, 1, 1, 9, 0, 2, 27, 1, 0, 0, 1, 1, 1]' : 0.095207}
{'[2, 0, 5, 4, 2, 0, 1, 1, 9, 0, 2, 27, 1, 0, 0, 1, 1, 1]' : 0.095027}
{'[2, 0, 5, 4, 2, 0, 1, 1, 9, 0, 2, 27, 1, 0, 0, 1, 1, 1]' : 0.095011}
{'[2, 0, 5, 4, 2, 0, 1, 1, 9, 0, 2, 27, 1, 0, 0, 1, 1, 1]' : 0.0948911}
{'[2, 0, 5, 4, 2, 0, 1, 1, 9, 0, 2, 27, 1, 0, 0, 1, 1, 1]' : 0.0948839}
{'[2, 0, 5, 4, 2, 0, 1, 1, 9, 0, 2, 27, 1, 0, 0, 1, 1, 1]' : 0.0948241}
{'[2, 0, 5, 4, 2, 0, 1, 1, 9, 0, 2, 27, 1, 0, 0, 1, 1, 1]' : 0.0948279}
{'[2, 0, 5, 4, 2, 0, 1, 1, 9, 0, 2, 27, 1, 0, 0, 1, 1, 1]' : 0.0950611}
{'[2, 0, 5, 4, 2, 0, 1, 1, 9, 0, 2, 27, 1, 0, 0, 1, 1, 1]' : 0.0950851}
{'[2, 0, 5, 4, 2, 0, 1, 1, 9, 0, 2, 27, 1, 0, 0, 1, 1, 1]' : 0.0949459}
{'[2, 0, 5, 4, 2, 0, 1, 1, 9, 0, 2, 27, 1, 0, 0, 1, 1, 1]' : 0.0948169}
{'[2, 0, 5, 4, 2, 0, 1, 1, 9, 0, 2, 27, 1, 0, 0, 1, 1, 1]' : 0.094842}

out:
 ["{'[2, 0, 5, 4, 2, 0, 1, 1, 9, 0, 2, 27, 1, 0, 0, 1, 1, 1]' : 0.0950599}", "{'[2, 0, 5, 4, 2, 0, 1, 1, 9, 0, 2, 27, 1, 0, 0, 1, 1, 1]' : 0.095197}", "{'[2, 0, 5, 4, 2, 0, 1, 1, 9, 0, 2, 27, 1, 0, 0, 1, 1, 1]' : 0.0948789}", "{'[2, 0, 5, 4, 2, 0, 1, 1, 9, 0, 2, 27, 1, 0, 0, 1, 1, 1]' : 0.095371}", "{'[2, 0, 5, 4, 2, 0, 1, 1, 9, 0, 2, 27, 1, 0, 0, 1, 1, 1]' : 0.0949302}", "{'[2, 0, 5, 4, 2, 0, 1, 1, 9, 0, 2, 27, 1, 0, 0, 1, 1, 1]' : 0.0948949}", "{'[2, 0, 5, 4, 2, 0, 1, 1, 9, 0, 2, 27, 1, 0, 0, 1, 1, 1]' : 0.0948}", "{'[2, 0, 5, 4, 2, 0, 1, 1, 9, 0, 2, 27, 1, 0, 0, 1, 1, 1]' : 0.09515}", "{'[2, 0, 5, 4, 2, 0, 1, 1, 9, 0, 2, 27, 1, 0, 0, 1, 1, 1]' : 0.095103}", "{'[2, 0, 5, 4, 2, 0, 1, 1, 9, 0, 2, 27, 1, 0, 0, 1, 1, 1]' : 0.0949519}", "{'[2, 0, 5, 4, 2, 0, 1, 1, 9, 0, 2, 27, 1, 0, 0, 1, 1, 1]' : 0.0950911}", "{'[2, 0, 5, 4, 2, 0, 1, 1, 9, 0, 2, 27, 1, 0, 0, 1, 1, 1]' : 0.0948191}", "{'[2, 0, 5, 4, 2, 0, 1, 1, 9, 0, 2, 27, 1, 0, 0, 1, 1, 1]' : 0.0948939}", "{'[2, 0, 5, 4, 2, 0, 1, 1, 9, 0, 2, 27, 1, 0, 0, 1, 1, 1]' : 0.094806}", "{'[2, 0, 5, 4, 2, 0, 1, 1, 9, 0, 2, 27, 1, 0, 0, 1, 1, 1]' : 0.0949211}", "{'[2, 0, 5, 4, 2, 0, 1, 1, 9, 0, 2, 27, 1, 0, 0, 1, 1, 1]' : 0.094918}", "{'[2, 0, 5, 4, 2, 0, 1, 1, 9, 0, 2, 27, 1, 0, 0, 1, 1, 1]' : 0.095232}", "{'[2, 0, 5, 4, 2, 0, 1, 1, 9, 0, 2, 27, 1, 0, 0, 1, 1, 1]' : 0.0950232}", "{'[2, 0, 5, 4, 2, 0, 1, 1, 9, 0, 2, 27, 1, 0, 0, 1, 1, 1]' : 0.095207}", "{'[2, 0, 5, 4, 2, 0, 1, 1, 9, 0, 2, 27, 1, 0, 0, 1, 1, 1]' : 0.095027}", "{'[2, 0, 5, 4, 2, 0, 1, 1, 9, 0, 2, 27, 1, 0, 0, 1, 1, 1]' : 0.095011}", "{'[2, 0, 5, 4, 2, 0, 1, 1, 9, 0, 2, 27, 1, 0, 0, 1, 1, 1]' : 0.0948911}", "{'[2, 0, 5, 4, 2, 0, 1, 1, 9, 0, 2, 27, 1, 0, 0, 1, 1, 1]' : 0.0948839}", "{'[2, 0, 5, 4, 2, 0, 1, 1, 9, 0, 2, 27, 1, 0, 0, 1, 1, 1]' : 0.0948241}", "{'[2, 0, 5, 4, 2, 0, 1, 1, 9, 0, 2, 27, 1, 0, 0, 1, 1, 1]' : 0.0948279}", "{'[2, 0, 5, 4, 2, 0, 1, 1, 9, 0, 2, 27, 1, 0, 0, 1, 1, 1]' : 0.0950611}", "{'[2, 0, 5, 4, 2, 0, 1, 1, 9, 0, 2, 27, 1, 0, 0, 1, 1, 1]' : 0.0950851}", "{'[2, 0, 5, 4, 2, 0, 1, 1, 9, 0, 2, 27, 1, 0, 0, 1, 1, 1]' : 0.0949459}", "{'[2, 0, 5, 4, 2, 0, 1, 1, 9, 0, 2, 27, 1, 0, 0, 1, 1, 1]' : 0.0948169}", "{'[2, 0, 5, 4, 2, 0, 1, 1, 9, 0, 2, 27, 1, 0, 0, 1, 1, 1]' : 0.094842}"]
returning from 'run': {'[2, 0, 5, 4, 2, 0, 1, 1, 9, 0, 2, 27, 1, 0, 0, 1, 1, 1]': ([0.0950599, 0.095197, 0.0948789, 0.095371, 0.0949302, 0.0948949, 0.0948, 0.09515, 0.095103, 0.0949519, 0.0950911, 0.0948191, 0.0948939, 0.094806, 0.0949211, 0.094918, 0.095232, 0.0950232, 0.095207, 0.095027, 0.095011, 0.0948911, 0.0948839, 0.0948241, 0.0948279, 0.0950611, 0.0950851, 0.0949459, 0.0948169, 0.094842], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 0, 5, 4, 2, 0, 1, 1, 9, 0, 2, 27, 1, 0, 0, 1, 1, 1]': ([0.0950599, 0.095197, 0.0948789, 0.095371, 0.0949302, 0.0948949, 0.0948, 0.09515, 0.095103, 0.0949519, 0.0950911, 0.0948191, 0.0948939, 0.094806, 0.0949211, 0.094918, 0.095232, 0.0950232, 0.095207, 0.095027, 0.095011, 0.0948911, 0.0948839, 0.0948241, 0.0948279, 0.0950611, 0.0950851, 0.0949459, 0.0948169, 0.094842], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	4
        Additions: 		1595
        Multiplications: 	738
        Divisions: 		0
        Logical: 		0
        Reads: 			3224
        Writes: 		581
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest85.exe __orio_perftest85.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest85.exe  
Program Test Output: 
{'[0, 0, 0, 6, 3, 6, 0, 0, 10, 0, 2, 27, 1, 1, 0, 1, 0, 1]' : 0.0879109}
{'[0, 0, 0, 6, 3, 6, 0, 0, 10, 0, 2, 27, 1, 1, 0, 1, 0, 1]' : 0.0878749}
{'[0, 0, 0, 6, 3, 6, 0, 0, 10, 0, 2, 27, 1, 1, 0, 1, 0, 1]' : 0.087707}
{'[0, 0, 0, 6, 3, 6, 0, 0, 10, 0, 2, 27, 1, 1, 0, 1, 0, 1]' : 0.087811}
{'[0, 0, 0, 6, 3, 6, 0, 0, 10, 0, 2, 27, 1, 1, 0, 1, 0, 1]' : 0.0876901}
{'[0, 0, 0, 6, 3, 6, 0, 0, 10, 0, 2, 27, 1, 1, 0, 1, 0, 1]' : 0.087682}
{'[0, 0, 0, 6, 3, 6, 0, 0, 10, 0, 2, 27, 1, 1, 0, 1, 0, 1]' : 0.087661}
{'[0, 0, 0, 6, 3, 6, 0, 0, 10, 0, 2, 27, 1, 1, 0, 1, 0, 1]' : 0.087615}
{'[0, 0, 0, 6, 3, 6, 0, 0, 10, 0, 2, 27, 1, 1, 0, 1, 0, 1]' : 0.0877008}
{'[0, 0, 0, 6, 3, 6, 0, 0, 10, 0, 2, 27, 1, 1, 0, 1, 0, 1]' : 0.087733}
{'[0, 0, 0, 6, 3, 6, 0, 0, 10, 0, 2, 27, 1, 1, 0, 1, 0, 1]' : 0.087651}
{'[0, 0, 0, 6, 3, 6, 0, 0, 10, 0, 2, 27, 1, 1, 0, 1, 0, 1]' : 0.0876341}
{'[0, 0, 0, 6, 3, 6, 0, 0, 10, 0, 2, 27, 1, 1, 0, 1, 0, 1]' : 0.0879459}
{'[0, 0, 0, 6, 3, 6, 0, 0, 10, 0, 2, 27, 1, 1, 0, 1, 0, 1]' : 0.0877402}
{'[0, 0, 0, 6, 3, 6, 0, 0, 10, 0, 2, 27, 1, 1, 0, 1, 0, 1]' : 0.0877659}
{'[0, 0, 0, 6, 3, 6, 0, 0, 10, 0, 2, 27, 1, 1, 0, 1, 0, 1]' : 0.0876391}
{'[0, 0, 0, 6, 3, 6, 0, 0, 10, 0, 2, 27, 1, 1, 0, 1, 0, 1]' : 0.0878041}
{'[0, 0, 0, 6, 3, 6, 0, 0, 10, 0, 2, 27, 1, 1, 0, 1, 0, 1]' : 0.087599}
{'[0, 0, 0, 6, 3, 6, 0, 0, 10, 0, 2, 27, 1, 1, 0, 1, 0, 1]' : 0.0876689}
{'[0, 0, 0, 6, 3, 6, 0, 0, 10, 0, 2, 27, 1, 1, 0, 1, 0, 1]' : 0.0876322}
{'[0, 0, 0, 6, 3, 6, 0, 0, 10, 0, 2, 27, 1, 1, 0, 1, 0, 1]' : 0.088517}
{'[0, 0, 0, 6, 3, 6, 0, 0, 10, 0, 2, 27, 1, 1, 0, 1, 0, 1]' : 0.0875781}
{'[0, 0, 0, 6, 3, 6, 0, 0, 10, 0, 2, 27, 1, 1, 0, 1, 0, 1]' : 0.087533}
{'[0, 0, 0, 6, 3, 6, 0, 0, 10, 0, 2, 27, 1, 1, 0, 1, 0, 1]' : 0.087661}
{'[0, 0, 0, 6, 3, 6, 0, 0, 10, 0, 2, 27, 1, 1, 0, 1, 0, 1]' : 0.0879099}
{'[0, 0, 0, 6, 3, 6, 0, 0, 10, 0, 2, 27, 1, 1, 0, 1, 0, 1]' : 0.0879869}
{'[0, 0, 0, 6, 3, 6, 0, 0, 10, 0, 2, 27, 1, 1, 0, 1, 0, 1]' : 0.087781}
{'[0, 0, 0, 6, 3, 6, 0, 0, 10, 0, 2, 27, 1, 1, 0, 1, 0, 1]' : 0.0876341}
{'[0, 0, 0, 6, 3, 6, 0, 0, 10, 0, 2, 27, 1, 1, 0, 1, 0, 1]' : 0.0881009}
{'[0, 0, 0, 6, 3, 6, 0, 0, 10, 0, 2, 27, 1, 1, 0, 1, 0, 1]' : 0.0877092}

out:
 ["{'[0, 0, 0, 6, 3, 6, 0, 0, 10, 0, 2, 27, 1, 1, 0, 1, 0, 1]' : 0.0879109}", "{'[0, 0, 0, 6, 3, 6, 0, 0, 10, 0, 2, 27, 1, 1, 0, 1, 0, 1]' : 0.0878749}", "{'[0, 0, 0, 6, 3, 6, 0, 0, 10, 0, 2, 27, 1, 1, 0, 1, 0, 1]' : 0.087707}", "{'[0, 0, 0, 6, 3, 6, 0, 0, 10, 0, 2, 27, 1, 1, 0, 1, 0, 1]' : 0.087811}", "{'[0, 0, 0, 6, 3, 6, 0, 0, 10, 0, 2, 27, 1, 1, 0, 1, 0, 1]' : 0.0876901}", "{'[0, 0, 0, 6, 3, 6, 0, 0, 10, 0, 2, 27, 1, 1, 0, 1, 0, 1]' : 0.087682}", "{'[0, 0, 0, 6, 3, 6, 0, 0, 10, 0, 2, 27, 1, 1, 0, 1, 0, 1]' : 0.087661}", "{'[0, 0, 0, 6, 3, 6, 0, 0, 10, 0, 2, 27, 1, 1, 0, 1, 0, 1]' : 0.087615}", "{'[0, 0, 0, 6, 3, 6, 0, 0, 10, 0, 2, 27, 1, 1, 0, 1, 0, 1]' : 0.0877008}", "{'[0, 0, 0, 6, 3, 6, 0, 0, 10, 0, 2, 27, 1, 1, 0, 1, 0, 1]' : 0.087733}", "{'[0, 0, 0, 6, 3, 6, 0, 0, 10, 0, 2, 27, 1, 1, 0, 1, 0, 1]' : 0.087651}", "{'[0, 0, 0, 6, 3, 6, 0, 0, 10, 0, 2, 27, 1, 1, 0, 1, 0, 1]' : 0.0876341}", "{'[0, 0, 0, 6, 3, 6, 0, 0, 10, 0, 2, 27, 1, 1, 0, 1, 0, 1]' : 0.0879459}", "{'[0, 0, 0, 6, 3, 6, 0, 0, 10, 0, 2, 27, 1, 1, 0, 1, 0, 1]' : 0.0877402}", "{'[0, 0, 0, 6, 3, 6, 0, 0, 10, 0, 2, 27, 1, 1, 0, 1, 0, 1]' : 0.0877659}", "{'[0, 0, 0, 6, 3, 6, 0, 0, 10, 0, 2, 27, 1, 1, 0, 1, 0, 1]' : 0.0876391}", "{'[0, 0, 0, 6, 3, 6, 0, 0, 10, 0, 2, 27, 1, 1, 0, 1, 0, 1]' : 0.0878041}", "{'[0, 0, 0, 6, 3, 6, 0, 0, 10, 0, 2, 27, 1, 1, 0, 1, 0, 1]' : 0.087599}", "{'[0, 0, 0, 6, 3, 6, 0, 0, 10, 0, 2, 27, 1, 1, 0, 1, 0, 1]' : 0.0876689}", "{'[0, 0, 0, 6, 3, 6, 0, 0, 10, 0, 2, 27, 1, 1, 0, 1, 0, 1]' : 0.0876322}", "{'[0, 0, 0, 6, 3, 6, 0, 0, 10, 0, 2, 27, 1, 1, 0, 1, 0, 1]' : 0.088517}", "{'[0, 0, 0, 6, 3, 6, 0, 0, 10, 0, 2, 27, 1, 1, 0, 1, 0, 1]' : 0.0875781}", "{'[0, 0, 0, 6, 3, 6, 0, 0, 10, 0, 2, 27, 1, 1, 0, 1, 0, 1]' : 0.087533}", "{'[0, 0, 0, 6, 3, 6, 0, 0, 10, 0, 2, 27, 1, 1, 0, 1, 0, 1]' : 0.087661}", "{'[0, 0, 0, 6, 3, 6, 0, 0, 10, 0, 2, 27, 1, 1, 0, 1, 0, 1]' : 0.0879099}", "{'[0, 0, 0, 6, 3, 6, 0, 0, 10, 0, 2, 27, 1, 1, 0, 1, 0, 1]' : 0.0879869}", "{'[0, 0, 0, 6, 3, 6, 0, 0, 10, 0, 2, 27, 1, 1, 0, 1, 0, 1]' : 0.087781}", "{'[0, 0, 0, 6, 3, 6, 0, 0, 10, 0, 2, 27, 1, 1, 0, 1, 0, 1]' : 0.0876341}", "{'[0, 0, 0, 6, 3, 6, 0, 0, 10, 0, 2, 27, 1, 1, 0, 1, 0, 1]' : 0.0881009}", "{'[0, 0, 0, 6, 3, 6, 0, 0, 10, 0, 2, 27, 1, 1, 0, 1, 0, 1]' : 0.0877092}"]
returning from 'run': {'[0, 0, 0, 6, 3, 6, 0, 0, 10, 0, 2, 27, 1, 1, 0, 1, 0, 1]': ([0.0879109, 0.0878749, 0.087707, 0.087811, 0.0876901, 0.087682, 0.087661, 0.087615, 0.0877008, 0.087733, 0.087651, 0.0876341, 0.0879459, 0.0877402, 0.0877659, 0.0876391, 0.0878041, 0.087599, 0.0876689, 0.0876322, 0.088517, 0.0875781, 0.087533, 0.087661, 0.0879099, 0.0879869, 0.087781, 0.0876341, 0.0881009, 0.0877092], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 0, 6, 3, 6, 0, 0, 10, 0, 2, 27, 1, 1, 0, 1, 0, 1]': ([0.0879109, 0.0878749, 0.087707, 0.087811, 0.0876901, 0.087682, 0.087661, 0.087615, 0.0877008, 0.087733, 0.087651, 0.0876341, 0.0879459, 0.0877402, 0.0877659, 0.0876391, 0.0878041, 0.087599, 0.0876689, 0.0876322, 0.088517, 0.0875781, 0.087533, 0.087661, 0.0879099, 0.0879869, 0.087781, 0.0876341, 0.0881009, 0.0877092], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	6
        Additions: 		247
        Multiplications: 	86
        Divisions: 		0
        Logical: 		0
        Reads: 			591
        Writes: 		104
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest86.exe __orio_perftest86.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest86.exe  
Program Test Output: 
{'[3, 1, 2, 2, 0, 1, 0, 0, 22, 0, 2, 5, 0, 2, 0, 0, 1, 1]' : 0.226797}
{'[3, 1, 2, 2, 0, 1, 0, 0, 22, 0, 2, 5, 0, 2, 0, 0, 1, 1]' : 0.226462}
{'[3, 1, 2, 2, 0, 1, 0, 0, 22, 0, 2, 5, 0, 2, 0, 0, 1, 1]' : 0.225095}
{'[3, 1, 2, 2, 0, 1, 0, 0, 22, 0, 2, 5, 0, 2, 0, 0, 1, 1]' : 0.191475}
{'[3, 1, 2, 2, 0, 1, 0, 0, 22, 0, 2, 5, 0, 2, 0, 0, 1, 1]' : 0.190372}
{'[3, 1, 2, 2, 0, 1, 0, 0, 22, 0, 2, 5, 0, 2, 0, 0, 1, 1]' : 0.190401}
{'[3, 1, 2, 2, 0, 1, 0, 0, 22, 0, 2, 5, 0, 2, 0, 0, 1, 1]' : 0.190651}
{'[3, 1, 2, 2, 0, 1, 0, 0, 22, 0, 2, 5, 0, 2, 0, 0, 1, 1]' : 0.190638}
{'[3, 1, 2, 2, 0, 1, 0, 0, 22, 0, 2, 5, 0, 2, 0, 0, 1, 1]' : 0.190331}
{'[3, 1, 2, 2, 0, 1, 0, 0, 22, 0, 2, 5, 0, 2, 0, 0, 1, 1]' : 0.190456}
{'[3, 1, 2, 2, 0, 1, 0, 0, 22, 0, 2, 5, 0, 2, 0, 0, 1, 1]' : 0.190673}
{'[3, 1, 2, 2, 0, 1, 0, 0, 22, 0, 2, 5, 0, 2, 0, 0, 1, 1]' : 0.190389}
{'[3, 1, 2, 2, 0, 1, 0, 0, 22, 0, 2, 5, 0, 2, 0, 0, 1, 1]' : 0.190894}
{'[3, 1, 2, 2, 0, 1, 0, 0, 22, 0, 2, 5, 0, 2, 0, 0, 1, 1]' : 0.190747}
{'[3, 1, 2, 2, 0, 1, 0, 0, 22, 0, 2, 5, 0, 2, 0, 0, 1, 1]' : 0.19063}
{'[3, 1, 2, 2, 0, 1, 0, 0, 22, 0, 2, 5, 0, 2, 0, 0, 1, 1]' : 0.190513}
{'[3, 1, 2, 2, 0, 1, 0, 0, 22, 0, 2, 5, 0, 2, 0, 0, 1, 1]' : 0.190853}
{'[3, 1, 2, 2, 0, 1, 0, 0, 22, 0, 2, 5, 0, 2, 0, 0, 1, 1]' : 0.190639}
{'[3, 1, 2, 2, 0, 1, 0, 0, 22, 0, 2, 5, 0, 2, 0, 0, 1, 1]' : 0.190816}
{'[3, 1, 2, 2, 0, 1, 0, 0, 22, 0, 2, 5, 0, 2, 0, 0, 1, 1]' : 0.190514}
{'[3, 1, 2, 2, 0, 1, 0, 0, 22, 0, 2, 5, 0, 2, 0, 0, 1, 1]' : 0.190648}
{'[3, 1, 2, 2, 0, 1, 0, 0, 22, 0, 2, 5, 0, 2, 0, 0, 1, 1]' : 0.190489}
{'[3, 1, 2, 2, 0, 1, 0, 0, 22, 0, 2, 5, 0, 2, 0, 0, 1, 1]' : 0.190882}
{'[3, 1, 2, 2, 0, 1, 0, 0, 22, 0, 2, 5, 0, 2, 0, 0, 1, 1]' : 0.190599}
{'[3, 1, 2, 2, 0, 1, 0, 0, 22, 0, 2, 5, 0, 2, 0, 0, 1, 1]' : 0.19076}
{'[3, 1, 2, 2, 0, 1, 0, 0, 22, 0, 2, 5, 0, 2, 0, 0, 1, 1]' : 0.190728}
{'[3, 1, 2, 2, 0, 1, 0, 0, 22, 0, 2, 5, 0, 2, 0, 0, 1, 1]' : 0.190566}
{'[3, 1, 2, 2, 0, 1, 0, 0, 22, 0, 2, 5, 0, 2, 0, 0, 1, 1]' : 0.190756}
{'[3, 1, 2, 2, 0, 1, 0, 0, 22, 0, 2, 5, 0, 2, 0, 0, 1, 1]' : 0.190528}
{'[3, 1, 2, 2, 0, 1, 0, 0, 22, 0, 2, 5, 0, 2, 0, 0, 1, 1]' : 0.190537}

out:
 ["{'[3, 1, 2, 2, 0, 1, 0, 0, 22, 0, 2, 5, 0, 2, 0, 0, 1, 1]' : 0.226797}", "{'[3, 1, 2, 2, 0, 1, 0, 0, 22, 0, 2, 5, 0, 2, 0, 0, 1, 1]' : 0.226462}", "{'[3, 1, 2, 2, 0, 1, 0, 0, 22, 0, 2, 5, 0, 2, 0, 0, 1, 1]' : 0.225095}", "{'[3, 1, 2, 2, 0, 1, 0, 0, 22, 0, 2, 5, 0, 2, 0, 0, 1, 1]' : 0.191475}", "{'[3, 1, 2, 2, 0, 1, 0, 0, 22, 0, 2, 5, 0, 2, 0, 0, 1, 1]' : 0.190372}", "{'[3, 1, 2, 2, 0, 1, 0, 0, 22, 0, 2, 5, 0, 2, 0, 0, 1, 1]' : 0.190401}", "{'[3, 1, 2, 2, 0, 1, 0, 0, 22, 0, 2, 5, 0, 2, 0, 0, 1, 1]' : 0.190651}", "{'[3, 1, 2, 2, 0, 1, 0, 0, 22, 0, 2, 5, 0, 2, 0, 0, 1, 1]' : 0.190638}", "{'[3, 1, 2, 2, 0, 1, 0, 0, 22, 0, 2, 5, 0, 2, 0, 0, 1, 1]' : 0.190331}", "{'[3, 1, 2, 2, 0, 1, 0, 0, 22, 0, 2, 5, 0, 2, 0, 0, 1, 1]' : 0.190456}", "{'[3, 1, 2, 2, 0, 1, 0, 0, 22, 0, 2, 5, 0, 2, 0, 0, 1, 1]' : 0.190673}", "{'[3, 1, 2, 2, 0, 1, 0, 0, 22, 0, 2, 5, 0, 2, 0, 0, 1, 1]' : 0.190389}", "{'[3, 1, 2, 2, 0, 1, 0, 0, 22, 0, 2, 5, 0, 2, 0, 0, 1, 1]' : 0.190894}", "{'[3, 1, 2, 2, 0, 1, 0, 0, 22, 0, 2, 5, 0, 2, 0, 0, 1, 1]' : 0.190747}", "{'[3, 1, 2, 2, 0, 1, 0, 0, 22, 0, 2, 5, 0, 2, 0, 0, 1, 1]' : 0.19063}", "{'[3, 1, 2, 2, 0, 1, 0, 0, 22, 0, 2, 5, 0, 2, 0, 0, 1, 1]' : 0.190513}", "{'[3, 1, 2, 2, 0, 1, 0, 0, 22, 0, 2, 5, 0, 2, 0, 0, 1, 1]' : 0.190853}", "{'[3, 1, 2, 2, 0, 1, 0, 0, 22, 0, 2, 5, 0, 2, 0, 0, 1, 1]' : 0.190639}", "{'[3, 1, 2, 2, 0, 1, 0, 0, 22, 0, 2, 5, 0, 2, 0, 0, 1, 1]' : 0.190816}", "{'[3, 1, 2, 2, 0, 1, 0, 0, 22, 0, 2, 5, 0, 2, 0, 0, 1, 1]' : 0.190514}", "{'[3, 1, 2, 2, 0, 1, 0, 0, 22, 0, 2, 5, 0, 2, 0, 0, 1, 1]' : 0.190648}", "{'[3, 1, 2, 2, 0, 1, 0, 0, 22, 0, 2, 5, 0, 2, 0, 0, 1, 1]' : 0.190489}", "{'[3, 1, 2, 2, 0, 1, 0, 0, 22, 0, 2, 5, 0, 2, 0, 0, 1, 1]' : 0.190882}", "{'[3, 1, 2, 2, 0, 1, 0, 0, 22, 0, 2, 5, 0, 2, 0, 0, 1, 1]' : 0.190599}", "{'[3, 1, 2, 2, 0, 1, 0, 0, 22, 0, 2, 5, 0, 2, 0, 0, 1, 1]' : 0.19076}", "{'[3, 1, 2, 2, 0, 1, 0, 0, 22, 0, 2, 5, 0, 2, 0, 0, 1, 1]' : 0.190728}", "{'[3, 1, 2, 2, 0, 1, 0, 0, 22, 0, 2, 5, 0, 2, 0, 0, 1, 1]' : 0.190566}", "{'[3, 1, 2, 2, 0, 1, 0, 0, 22, 0, 2, 5, 0, 2, 0, 0, 1, 1]' : 0.190756}", "{'[3, 1, 2, 2, 0, 1, 0, 0, 22, 0, 2, 5, 0, 2, 0, 0, 1, 1]' : 0.190528}", "{'[3, 1, 2, 2, 0, 1, 0, 0, 22, 0, 2, 5, 0, 2, 0, 0, 1, 1]' : 0.190537}"]
returning from 'run': {'[3, 1, 2, 2, 0, 1, 0, 0, 22, 0, 2, 5, 0, 2, 0, 0, 1, 1]': ([0.226797, 0.226462, 0.225095, 0.191475, 0.190372, 0.190401, 0.190651, 0.190638, 0.190331, 0.190456, 0.190673, 0.190389, 0.190894, 0.190747, 0.19063, 0.190513, 0.190853, 0.190639, 0.190816, 0.190514, 0.190648, 0.190489, 0.190882, 0.190599, 0.19076, 0.190728, 0.190566, 0.190756, 0.190528, 0.190537], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 1, 2, 2, 0, 1, 0, 0, 22, 0, 2, 5, 0, 2, 0, 0, 1, 1]': ([0.226797, 0.226462, 0.225095, 0.191475, 0.190372, 0.190401, 0.190651, 0.190638, 0.190331, 0.190456, 0.190673, 0.190389, 0.190894, 0.190747, 0.19063, 0.190513, 0.190853, 0.190639, 0.190816, 0.190514, 0.190648, 0.190489, 0.190882, 0.190599, 0.19076, 0.190728, 0.190566, 0.190756, 0.190528, 0.190537], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	35
        Max loop nest depth: 	5
        Additions: 		877
        Multiplications: 	360
        Divisions: 		0
        Logical: 		0
        Reads: 			1833
        Writes: 		360
        Comparisons:		35
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest87.exe __orio_perftest87.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest87.exe  
Program Test Output: 
{'[0, 6, 6, 2, 0, 5, 1, 0, 16, 18, 2, 0, 0, 1, 0, 1, 0, 0]' : 0.146133}
{'[0, 6, 6, 2, 0, 5, 1, 0, 16, 18, 2, 0, 0, 1, 0, 1, 0, 0]' : 0.146267}
{'[0, 6, 6, 2, 0, 5, 1, 0, 16, 18, 2, 0, 0, 1, 0, 1, 0, 0]' : 0.145868}
{'[0, 6, 6, 2, 0, 5, 1, 0, 16, 18, 2, 0, 0, 1, 0, 1, 0, 0]' : 0.145893}
{'[0, 6, 6, 2, 0, 5, 1, 0, 16, 18, 2, 0, 0, 1, 0, 1, 0, 0]' : 0.145877}
{'[0, 6, 6, 2, 0, 5, 1, 0, 16, 18, 2, 0, 0, 1, 0, 1, 0, 0]' : 0.145846}
{'[0, 6, 6, 2, 0, 5, 1, 0, 16, 18, 2, 0, 0, 1, 0, 1, 0, 0]' : 0.145991}
{'[0, 6, 6, 2, 0, 5, 1, 0, 16, 18, 2, 0, 0, 1, 0, 1, 0, 0]' : 0.14604}
{'[0, 6, 6, 2, 0, 5, 1, 0, 16, 18, 2, 0, 0, 1, 0, 1, 0, 0]' : 0.146248}
{'[0, 6, 6, 2, 0, 5, 1, 0, 16, 18, 2, 0, 0, 1, 0, 1, 0, 0]' : 0.146101}
{'[0, 6, 6, 2, 0, 5, 1, 0, 16, 18, 2, 0, 0, 1, 0, 1, 0, 0]' : 0.1459}
{'[0, 6, 6, 2, 0, 5, 1, 0, 16, 18, 2, 0, 0, 1, 0, 1, 0, 0]' : 0.146078}
{'[0, 6, 6, 2, 0, 5, 1, 0, 16, 18, 2, 0, 0, 1, 0, 1, 0, 0]' : 0.146243}
{'[0, 6, 6, 2, 0, 5, 1, 0, 16, 18, 2, 0, 0, 1, 0, 1, 0, 0]' : 0.145989}
{'[0, 6, 6, 2, 0, 5, 1, 0, 16, 18, 2, 0, 0, 1, 0, 1, 0, 0]' : 0.145988}
{'[0, 6, 6, 2, 0, 5, 1, 0, 16, 18, 2, 0, 0, 1, 0, 1, 0, 0]' : 0.145851}
{'[0, 6, 6, 2, 0, 5, 1, 0, 16, 18, 2, 0, 0, 1, 0, 1, 0, 0]' : 0.146204}
{'[0, 6, 6, 2, 0, 5, 1, 0, 16, 18, 2, 0, 0, 1, 0, 1, 0, 0]' : 0.146075}
{'[0, 6, 6, 2, 0, 5, 1, 0, 16, 18, 2, 0, 0, 1, 0, 1, 0, 0]' : 0.14604}
{'[0, 6, 6, 2, 0, 5, 1, 0, 16, 18, 2, 0, 0, 1, 0, 1, 0, 0]' : 0.146045}
{'[0, 6, 6, 2, 0, 5, 1, 0, 16, 18, 2, 0, 0, 1, 0, 1, 0, 0]' : 0.145799}
{'[0, 6, 6, 2, 0, 5, 1, 0, 16, 18, 2, 0, 0, 1, 0, 1, 0, 0]' : 0.146131}
{'[0, 6, 6, 2, 0, 5, 1, 0, 16, 18, 2, 0, 0, 1, 0, 1, 0, 0]' : 0.1461}
{'[0, 6, 6, 2, 0, 5, 1, 0, 16, 18, 2, 0, 0, 1, 0, 1, 0, 0]' : 0.146175}
{'[0, 6, 6, 2, 0, 5, 1, 0, 16, 18, 2, 0, 0, 1, 0, 1, 0, 0]' : 0.146237}
{'[0, 6, 6, 2, 0, 5, 1, 0, 16, 18, 2, 0, 0, 1, 0, 1, 0, 0]' : 0.145955}
{'[0, 6, 6, 2, 0, 5, 1, 0, 16, 18, 2, 0, 0, 1, 0, 1, 0, 0]' : 0.145831}
{'[0, 6, 6, 2, 0, 5, 1, 0, 16, 18, 2, 0, 0, 1, 0, 1, 0, 0]' : 0.146008}
{'[0, 6, 6, 2, 0, 5, 1, 0, 16, 18, 2, 0, 0, 1, 0, 1, 0, 0]' : 0.145956}
{'[0, 6, 6, 2, 0, 5, 1, 0, 16, 18, 2, 0, 0, 1, 0, 1, 0, 0]' : 0.146253}

out:
 ["{'[0, 6, 6, 2, 0, 5, 1, 0, 16, 18, 2, 0, 0, 1, 0, 1, 0, 0]' : 0.146133}", "{'[0, 6, 6, 2, 0, 5, 1, 0, 16, 18, 2, 0, 0, 1, 0, 1, 0, 0]' : 0.146267}", "{'[0, 6, 6, 2, 0, 5, 1, 0, 16, 18, 2, 0, 0, 1, 0, 1, 0, 0]' : 0.145868}", "{'[0, 6, 6, 2, 0, 5, 1, 0, 16, 18, 2, 0, 0, 1, 0, 1, 0, 0]' : 0.145893}", "{'[0, 6, 6, 2, 0, 5, 1, 0, 16, 18, 2, 0, 0, 1, 0, 1, 0, 0]' : 0.145877}", "{'[0, 6, 6, 2, 0, 5, 1, 0, 16, 18, 2, 0, 0, 1, 0, 1, 0, 0]' : 0.145846}", "{'[0, 6, 6, 2, 0, 5, 1, 0, 16, 18, 2, 0, 0, 1, 0, 1, 0, 0]' : 0.145991}", "{'[0, 6, 6, 2, 0, 5, 1, 0, 16, 18, 2, 0, 0, 1, 0, 1, 0, 0]' : 0.14604}", "{'[0, 6, 6, 2, 0, 5, 1, 0, 16, 18, 2, 0, 0, 1, 0, 1, 0, 0]' : 0.146248}", "{'[0, 6, 6, 2, 0, 5, 1, 0, 16, 18, 2, 0, 0, 1, 0, 1, 0, 0]' : 0.146101}", "{'[0, 6, 6, 2, 0, 5, 1, 0, 16, 18, 2, 0, 0, 1, 0, 1, 0, 0]' : 0.1459}", "{'[0, 6, 6, 2, 0, 5, 1, 0, 16, 18, 2, 0, 0, 1, 0, 1, 0, 0]' : 0.146078}", "{'[0, 6, 6, 2, 0, 5, 1, 0, 16, 18, 2, 0, 0, 1, 0, 1, 0, 0]' : 0.146243}", "{'[0, 6, 6, 2, 0, 5, 1, 0, 16, 18, 2, 0, 0, 1, 0, 1, 0, 0]' : 0.145989}", "{'[0, 6, 6, 2, 0, 5, 1, 0, 16, 18, 2, 0, 0, 1, 0, 1, 0, 0]' : 0.145988}", "{'[0, 6, 6, 2, 0, 5, 1, 0, 16, 18, 2, 0, 0, 1, 0, 1, 0, 0]' : 0.145851}", "{'[0, 6, 6, 2, 0, 5, 1, 0, 16, 18, 2, 0, 0, 1, 0, 1, 0, 0]' : 0.146204}", "{'[0, 6, 6, 2, 0, 5, 1, 0, 16, 18, 2, 0, 0, 1, 0, 1, 0, 0]' : 0.146075}", "{'[0, 6, 6, 2, 0, 5, 1, 0, 16, 18, 2, 0, 0, 1, 0, 1, 0, 0]' : 0.14604}", "{'[0, 6, 6, 2, 0, 5, 1, 0, 16, 18, 2, 0, 0, 1, 0, 1, 0, 0]' : 0.146045}", "{'[0, 6, 6, 2, 0, 5, 1, 0, 16, 18, 2, 0, 0, 1, 0, 1, 0, 0]' : 0.145799}", "{'[0, 6, 6, 2, 0, 5, 1, 0, 16, 18, 2, 0, 0, 1, 0, 1, 0, 0]' : 0.146131}", "{'[0, 6, 6, 2, 0, 5, 1, 0, 16, 18, 2, 0, 0, 1, 0, 1, 0, 0]' : 0.1461}", "{'[0, 6, 6, 2, 0, 5, 1, 0, 16, 18, 2, 0, 0, 1, 0, 1, 0, 0]' : 0.146175}", "{'[0, 6, 6, 2, 0, 5, 1, 0, 16, 18, 2, 0, 0, 1, 0, 1, 0, 0]' : 0.146237}", "{'[0, 6, 6, 2, 0, 5, 1, 0, 16, 18, 2, 0, 0, 1, 0, 1, 0, 0]' : 0.145955}", "{'[0, 6, 6, 2, 0, 5, 1, 0, 16, 18, 2, 0, 0, 1, 0, 1, 0, 0]' : 0.145831}", "{'[0, 6, 6, 2, 0, 5, 1, 0, 16, 18, 2, 0, 0, 1, 0, 1, 0, 0]' : 0.146008}", "{'[0, 6, 6, 2, 0, 5, 1, 0, 16, 18, 2, 0, 0, 1, 0, 1, 0, 0]' : 0.145956}", "{'[0, 6, 6, 2, 0, 5, 1, 0, 16, 18, 2, 0, 0, 1, 0, 1, 0, 0]' : 0.146253}"]
returning from 'run': {'[0, 6, 6, 2, 0, 5, 1, 0, 16, 18, 2, 0, 0, 1, 0, 1, 0, 0]': ([0.146133, 0.146267, 0.145868, 0.145893, 0.145877, 0.145846, 0.145991, 0.14604, 0.146248, 0.146101, 0.1459, 0.146078, 0.146243, 0.145989, 0.145988, 0.145851, 0.146204, 0.146075, 0.14604, 0.146045, 0.145799, 0.146131, 0.1461, 0.146175, 0.146237, 0.145955, 0.145831, 0.146008, 0.145956, 0.146253], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 6, 2, 0, 5, 1, 0, 16, 18, 2, 0, 0, 1, 0, 1, 0, 0]': ([0.146133, 0.146267, 0.145868, 0.145893, 0.145877, 0.145846, 0.145991, 0.14604, 0.146248, 0.146101, 0.1459, 0.146078, 0.146243, 0.145989, 0.145988, 0.145851, 0.146204, 0.146075, 0.14604, 0.146045, 0.145799, 0.146131, 0.1461, 0.146175, 0.146237, 0.145955, 0.145831, 0.146008, 0.145956, 0.146253], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		401
        Multiplications: 	130
        Divisions: 		0
        Logical: 		0
        Reads: 			831
        Writes: 		131
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest88.exe __orio_perftest88.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest88.exe  
Program Test Output: 
{'[1, 3, 5, 5, 2, 0, 1, 0, 27, 0, 2, 27, 0, 0, 2, 0, 0, 1]' : 0.224664}
{'[1, 3, 5, 5, 2, 0, 1, 0, 27, 0, 2, 27, 0, 0, 2, 0, 0, 1]' : 0.204703}
{'[1, 3, 5, 5, 2, 0, 1, 0, 27, 0, 2, 27, 0, 0, 2, 0, 0, 1]' : 0.187977}
{'[1, 3, 5, 5, 2, 0, 1, 0, 27, 0, 2, 27, 0, 0, 2, 0, 0, 1]' : 0.188436}
{'[1, 3, 5, 5, 2, 0, 1, 0, 27, 0, 2, 27, 0, 0, 2, 0, 0, 1]' : 0.18808}
{'[1, 3, 5, 5, 2, 0, 1, 0, 27, 0, 2, 27, 0, 0, 2, 0, 0, 1]' : 0.188208}
{'[1, 3, 5, 5, 2, 0, 1, 0, 27, 0, 2, 27, 0, 0, 2, 0, 0, 1]' : 0.188073}
{'[1, 3, 5, 5, 2, 0, 1, 0, 27, 0, 2, 27, 0, 0, 2, 0, 0, 1]' : 0.18801}
{'[1, 3, 5, 5, 2, 0, 1, 0, 27, 0, 2, 27, 0, 0, 2, 0, 0, 1]' : 0.188053}
{'[1, 3, 5, 5, 2, 0, 1, 0, 27, 0, 2, 27, 0, 0, 2, 0, 0, 1]' : 0.188472}
{'[1, 3, 5, 5, 2, 0, 1, 0, 27, 0, 2, 27, 0, 0, 2, 0, 0, 1]' : 0.187957}
{'[1, 3, 5, 5, 2, 0, 1, 0, 27, 0, 2, 27, 0, 0, 2, 0, 0, 1]' : 0.188228}
{'[1, 3, 5, 5, 2, 0, 1, 0, 27, 0, 2, 27, 0, 0, 2, 0, 0, 1]' : 0.187897}
{'[1, 3, 5, 5, 2, 0, 1, 0, 27, 0, 2, 27, 0, 0, 2, 0, 0, 1]' : 0.188249}
{'[1, 3, 5, 5, 2, 0, 1, 0, 27, 0, 2, 27, 0, 0, 2, 0, 0, 1]' : 0.188071}
{'[1, 3, 5, 5, 2, 0, 1, 0, 27, 0, 2, 27, 0, 0, 2, 0, 0, 1]' : 0.188358}
{'[1, 3, 5, 5, 2, 0, 1, 0, 27, 0, 2, 27, 0, 0, 2, 0, 0, 1]' : 0.188042}
{'[1, 3, 5, 5, 2, 0, 1, 0, 27, 0, 2, 27, 0, 0, 2, 0, 0, 1]' : 0.18828}
{'[1, 3, 5, 5, 2, 0, 1, 0, 27, 0, 2, 27, 0, 0, 2, 0, 0, 1]' : 0.187957}
{'[1, 3, 5, 5, 2, 0, 1, 0, 27, 0, 2, 27, 0, 0, 2, 0, 0, 1]' : 0.188016}
{'[1, 3, 5, 5, 2, 0, 1, 0, 27, 0, 2, 27, 0, 0, 2, 0, 0, 1]' : 0.187951}
{'[1, 3, 5, 5, 2, 0, 1, 0, 27, 0, 2, 27, 0, 0, 2, 0, 0, 1]' : 0.188841}
{'[1, 3, 5, 5, 2, 0, 1, 0, 27, 0, 2, 27, 0, 0, 2, 0, 0, 1]' : 0.188164}
{'[1, 3, 5, 5, 2, 0, 1, 0, 27, 0, 2, 27, 0, 0, 2, 0, 0, 1]' : 0.188565}
{'[1, 3, 5, 5, 2, 0, 1, 0, 27, 0, 2, 27, 0, 0, 2, 0, 0, 1]' : 0.188178}
{'[1, 3, 5, 5, 2, 0, 1, 0, 27, 0, 2, 27, 0, 0, 2, 0, 0, 1]' : 0.18794}
{'[1, 3, 5, 5, 2, 0, 1, 0, 27, 0, 2, 27, 0, 0, 2, 0, 0, 1]' : 0.188348}
{'[1, 3, 5, 5, 2, 0, 1, 0, 27, 0, 2, 27, 0, 0, 2, 0, 0, 1]' : 0.188268}
{'[1, 3, 5, 5, 2, 0, 1, 0, 27, 0, 2, 27, 0, 0, 2, 0, 0, 1]' : 0.188184}
{'[1, 3, 5, 5, 2, 0, 1, 0, 27, 0, 2, 27, 0, 0, 2, 0, 0, 1]' : 0.188232}

out:
 ["{'[1, 3, 5, 5, 2, 0, 1, 0, 27, 0, 2, 27, 0, 0, 2, 0, 0, 1]' : 0.224664}", "{'[1, 3, 5, 5, 2, 0, 1, 0, 27, 0, 2, 27, 0, 0, 2, 0, 0, 1]' : 0.204703}", "{'[1, 3, 5, 5, 2, 0, 1, 0, 27, 0, 2, 27, 0, 0, 2, 0, 0, 1]' : 0.187977}", "{'[1, 3, 5, 5, 2, 0, 1, 0, 27, 0, 2, 27, 0, 0, 2, 0, 0, 1]' : 0.188436}", "{'[1, 3, 5, 5, 2, 0, 1, 0, 27, 0, 2, 27, 0, 0, 2, 0, 0, 1]' : 0.18808}", "{'[1, 3, 5, 5, 2, 0, 1, 0, 27, 0, 2, 27, 0, 0, 2, 0, 0, 1]' : 0.188208}", "{'[1, 3, 5, 5, 2, 0, 1, 0, 27, 0, 2, 27, 0, 0, 2, 0, 0, 1]' : 0.188073}", "{'[1, 3, 5, 5, 2, 0, 1, 0, 27, 0, 2, 27, 0, 0, 2, 0, 0, 1]' : 0.18801}", "{'[1, 3, 5, 5, 2, 0, 1, 0, 27, 0, 2, 27, 0, 0, 2, 0, 0, 1]' : 0.188053}", "{'[1, 3, 5, 5, 2, 0, 1, 0, 27, 0, 2, 27, 0, 0, 2, 0, 0, 1]' : 0.188472}", "{'[1, 3, 5, 5, 2, 0, 1, 0, 27, 0, 2, 27, 0, 0, 2, 0, 0, 1]' : 0.187957}", "{'[1, 3, 5, 5, 2, 0, 1, 0, 27, 0, 2, 27, 0, 0, 2, 0, 0, 1]' : 0.188228}", "{'[1, 3, 5, 5, 2, 0, 1, 0, 27, 0, 2, 27, 0, 0, 2, 0, 0, 1]' : 0.187897}", "{'[1, 3, 5, 5, 2, 0, 1, 0, 27, 0, 2, 27, 0, 0, 2, 0, 0, 1]' : 0.188249}", "{'[1, 3, 5, 5, 2, 0, 1, 0, 27, 0, 2, 27, 0, 0, 2, 0, 0, 1]' : 0.188071}", "{'[1, 3, 5, 5, 2, 0, 1, 0, 27, 0, 2, 27, 0, 0, 2, 0, 0, 1]' : 0.188358}", "{'[1, 3, 5, 5, 2, 0, 1, 0, 27, 0, 2, 27, 0, 0, 2, 0, 0, 1]' : 0.188042}", "{'[1, 3, 5, 5, 2, 0, 1, 0, 27, 0, 2, 27, 0, 0, 2, 0, 0, 1]' : 0.18828}", "{'[1, 3, 5, 5, 2, 0, 1, 0, 27, 0, 2, 27, 0, 0, 2, 0, 0, 1]' : 0.187957}", "{'[1, 3, 5, 5, 2, 0, 1, 0, 27, 0, 2, 27, 0, 0, 2, 0, 0, 1]' : 0.188016}", "{'[1, 3, 5, 5, 2, 0, 1, 0, 27, 0, 2, 27, 0, 0, 2, 0, 0, 1]' : 0.187951}", "{'[1, 3, 5, 5, 2, 0, 1, 0, 27, 0, 2, 27, 0, 0, 2, 0, 0, 1]' : 0.188841}", "{'[1, 3, 5, 5, 2, 0, 1, 0, 27, 0, 2, 27, 0, 0, 2, 0, 0, 1]' : 0.188164}", "{'[1, 3, 5, 5, 2, 0, 1, 0, 27, 0, 2, 27, 0, 0, 2, 0, 0, 1]' : 0.188565}", "{'[1, 3, 5, 5, 2, 0, 1, 0, 27, 0, 2, 27, 0, 0, 2, 0, 0, 1]' : 0.188178}", "{'[1, 3, 5, 5, 2, 0, 1, 0, 27, 0, 2, 27, 0, 0, 2, 0, 0, 1]' : 0.18794}", "{'[1, 3, 5, 5, 2, 0, 1, 0, 27, 0, 2, 27, 0, 0, 2, 0, 0, 1]' : 0.188348}", "{'[1, 3, 5, 5, 2, 0, 1, 0, 27, 0, 2, 27, 0, 0, 2, 0, 0, 1]' : 0.188268}", "{'[1, 3, 5, 5, 2, 0, 1, 0, 27, 0, 2, 27, 0, 0, 2, 0, 0, 1]' : 0.188184}", "{'[1, 3, 5, 5, 2, 0, 1, 0, 27, 0, 2, 27, 0, 0, 2, 0, 0, 1]' : 0.188232}"]
returning from 'run': {'[1, 3, 5, 5, 2, 0, 1, 0, 27, 0, 2, 27, 0, 0, 2, 0, 0, 1]': ([0.224664, 0.204703, 0.187977, 0.188436, 0.18808, 0.188208, 0.188073, 0.18801, 0.188053, 0.188472, 0.187957, 0.188228, 0.187897, 0.188249, 0.188071, 0.188358, 0.188042, 0.18828, 0.187957, 0.188016, 0.187951, 0.188841, 0.188164, 0.188565, 0.188178, 0.18794, 0.188348, 0.188268, 0.188184, 0.188232], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 3, 5, 5, 2, 0, 1, 0, 27, 0, 2, 27, 0, 0, 2, 0, 0, 1]': ([0.224664, 0.204703, 0.187977, 0.188436, 0.18808, 0.188208, 0.188073, 0.18801, 0.188053, 0.188472, 0.187957, 0.188228, 0.187897, 0.188249, 0.188071, 0.188358, 0.188042, 0.18828, 0.187957, 0.188016, 0.187951, 0.188841, 0.188164, 0.188565, 0.188178, 0.18794, 0.188348, 0.188268, 0.188184, 0.188232], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		277
        Multiplications: 	88
        Divisions: 		0
        Logical: 		0
        Reads: 			593
        Writes: 		96
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest89.exe __orio_perftest89.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest89.exe  
Program Test Output: 
{'[1, 1, 2, 1, 6, 3, 1, 0, 15, 0, 2, 26, 0, 1, 1, 0, 0, 1]' : 0.236304}
{'[1, 1, 2, 1, 6, 3, 1, 0, 15, 0, 2, 26, 0, 1, 1, 0, 0, 1]' : 0.236056}
{'[1, 1, 2, 1, 6, 3, 1, 0, 15, 0, 2, 26, 0, 1, 1, 0, 0, 1]' : 0.210328}
{'[1, 1, 2, 1, 6, 3, 1, 0, 15, 0, 2, 26, 0, 1, 1, 0, 0, 1]' : 0.196214}
{'[1, 1, 2, 1, 6, 3, 1, 0, 15, 0, 2, 26, 0, 1, 1, 0, 0, 1]' : 0.196193}
{'[1, 1, 2, 1, 6, 3, 1, 0, 15, 0, 2, 26, 0, 1, 1, 0, 0, 1]' : 0.196481}
{'[1, 1, 2, 1, 6, 3, 1, 0, 15, 0, 2, 26, 0, 1, 1, 0, 0, 1]' : 0.196483}
{'[1, 1, 2, 1, 6, 3, 1, 0, 15, 0, 2, 26, 0, 1, 1, 0, 0, 1]' : 0.196391}
{'[1, 1, 2, 1, 6, 3, 1, 0, 15, 0, 2, 26, 0, 1, 1, 0, 0, 1]' : 0.196291}
{'[1, 1, 2, 1, 6, 3, 1, 0, 15, 0, 2, 26, 0, 1, 1, 0, 0, 1]' : 0.196508}
{'[1, 1, 2, 1, 6, 3, 1, 0, 15, 0, 2, 26, 0, 1, 1, 0, 0, 1]' : 0.196374}
{'[1, 1, 2, 1, 6, 3, 1, 0, 15, 0, 2, 26, 0, 1, 1, 0, 0, 1]' : 0.196571}
{'[1, 1, 2, 1, 6, 3, 1, 0, 15, 0, 2, 26, 0, 1, 1, 0, 0, 1]' : 0.196342}
{'[1, 1, 2, 1, 6, 3, 1, 0, 15, 0, 2, 26, 0, 1, 1, 0, 0, 1]' : 0.196194}
{'[1, 1, 2, 1, 6, 3, 1, 0, 15, 0, 2, 26, 0, 1, 1, 0, 0, 1]' : 0.196427}
{'[1, 1, 2, 1, 6, 3, 1, 0, 15, 0, 2, 26, 0, 1, 1, 0, 0, 1]' : 0.19634}
{'[1, 1, 2, 1, 6, 3, 1, 0, 15, 0, 2, 26, 0, 1, 1, 0, 0, 1]' : 0.196401}
{'[1, 1, 2, 1, 6, 3, 1, 0, 15, 0, 2, 26, 0, 1, 1, 0, 0, 1]' : 0.196466}
{'[1, 1, 2, 1, 6, 3, 1, 0, 15, 0, 2, 26, 0, 1, 1, 0, 0, 1]' : 0.196186}
{'[1, 1, 2, 1, 6, 3, 1, 0, 15, 0, 2, 26, 0, 1, 1, 0, 0, 1]' : 0.196532}
{'[1, 1, 2, 1, 6, 3, 1, 0, 15, 0, 2, 26, 0, 1, 1, 0, 0, 1]' : 0.197028}
{'[1, 1, 2, 1, 6, 3, 1, 0, 15, 0, 2, 26, 0, 1, 1, 0, 0, 1]' : 0.196385}
{'[1, 1, 2, 1, 6, 3, 1, 0, 15, 0, 2, 26, 0, 1, 1, 0, 0, 1]' : 0.196608}
{'[1, 1, 2, 1, 6, 3, 1, 0, 15, 0, 2, 26, 0, 1, 1, 0, 0, 1]' : 0.196296}
{'[1, 1, 2, 1, 6, 3, 1, 0, 15, 0, 2, 26, 0, 1, 1, 0, 0, 1]' : 0.19634}
{'[1, 1, 2, 1, 6, 3, 1, 0, 15, 0, 2, 26, 0, 1, 1, 0, 0, 1]' : 0.196284}
{'[1, 1, 2, 1, 6, 3, 1, 0, 15, 0, 2, 26, 0, 1, 1, 0, 0, 1]' : 0.196384}
{'[1, 1, 2, 1, 6, 3, 1, 0, 15, 0, 2, 26, 0, 1, 1, 0, 0, 1]' : 0.196587}
{'[1, 1, 2, 1, 6, 3, 1, 0, 15, 0, 2, 26, 0, 1, 1, 0, 0, 1]' : 0.196435}
{'[1, 1, 2, 1, 6, 3, 1, 0, 15, 0, 2, 26, 0, 1, 1, 0, 0, 1]' : 0.196713}

out:
 ["{'[1, 1, 2, 1, 6, 3, 1, 0, 15, 0, 2, 26, 0, 1, 1, 0, 0, 1]' : 0.236304}", "{'[1, 1, 2, 1, 6, 3, 1, 0, 15, 0, 2, 26, 0, 1, 1, 0, 0, 1]' : 0.236056}", "{'[1, 1, 2, 1, 6, 3, 1, 0, 15, 0, 2, 26, 0, 1, 1, 0, 0, 1]' : 0.210328}", "{'[1, 1, 2, 1, 6, 3, 1, 0, 15, 0, 2, 26, 0, 1, 1, 0, 0, 1]' : 0.196214}", "{'[1, 1, 2, 1, 6, 3, 1, 0, 15, 0, 2, 26, 0, 1, 1, 0, 0, 1]' : 0.196193}", "{'[1, 1, 2, 1, 6, 3, 1, 0, 15, 0, 2, 26, 0, 1, 1, 0, 0, 1]' : 0.196481}", "{'[1, 1, 2, 1, 6, 3, 1, 0, 15, 0, 2, 26, 0, 1, 1, 0, 0, 1]' : 0.196483}", "{'[1, 1, 2, 1, 6, 3, 1, 0, 15, 0, 2, 26, 0, 1, 1, 0, 0, 1]' : 0.196391}", "{'[1, 1, 2, 1, 6, 3, 1, 0, 15, 0, 2, 26, 0, 1, 1, 0, 0, 1]' : 0.196291}", "{'[1, 1, 2, 1, 6, 3, 1, 0, 15, 0, 2, 26, 0, 1, 1, 0, 0, 1]' : 0.196508}", "{'[1, 1, 2, 1, 6, 3, 1, 0, 15, 0, 2, 26, 0, 1, 1, 0, 0, 1]' : 0.196374}", "{'[1, 1, 2, 1, 6, 3, 1, 0, 15, 0, 2, 26, 0, 1, 1, 0, 0, 1]' : 0.196571}", "{'[1, 1, 2, 1, 6, 3, 1, 0, 15, 0, 2, 26, 0, 1, 1, 0, 0, 1]' : 0.196342}", "{'[1, 1, 2, 1, 6, 3, 1, 0, 15, 0, 2, 26, 0, 1, 1, 0, 0, 1]' : 0.196194}", "{'[1, 1, 2, 1, 6, 3, 1, 0, 15, 0, 2, 26, 0, 1, 1, 0, 0, 1]' : 0.196427}", "{'[1, 1, 2, 1, 6, 3, 1, 0, 15, 0, 2, 26, 0, 1, 1, 0, 0, 1]' : 0.19634}", "{'[1, 1, 2, 1, 6, 3, 1, 0, 15, 0, 2, 26, 0, 1, 1, 0, 0, 1]' : 0.196401}", "{'[1, 1, 2, 1, 6, 3, 1, 0, 15, 0, 2, 26, 0, 1, 1, 0, 0, 1]' : 0.196466}", "{'[1, 1, 2, 1, 6, 3, 1, 0, 15, 0, 2, 26, 0, 1, 1, 0, 0, 1]' : 0.196186}", "{'[1, 1, 2, 1, 6, 3, 1, 0, 15, 0, 2, 26, 0, 1, 1, 0, 0, 1]' : 0.196532}", "{'[1, 1, 2, 1, 6, 3, 1, 0, 15, 0, 2, 26, 0, 1, 1, 0, 0, 1]' : 0.197028}", "{'[1, 1, 2, 1, 6, 3, 1, 0, 15, 0, 2, 26, 0, 1, 1, 0, 0, 1]' : 0.196385}", "{'[1, 1, 2, 1, 6, 3, 1, 0, 15, 0, 2, 26, 0, 1, 1, 0, 0, 1]' : 0.196608}", "{'[1, 1, 2, 1, 6, 3, 1, 0, 15, 0, 2, 26, 0, 1, 1, 0, 0, 1]' : 0.196296}", "{'[1, 1, 2, 1, 6, 3, 1, 0, 15, 0, 2, 26, 0, 1, 1, 0, 0, 1]' : 0.19634}", "{'[1, 1, 2, 1, 6, 3, 1, 0, 15, 0, 2, 26, 0, 1, 1, 0, 0, 1]' : 0.196284}", "{'[1, 1, 2, 1, 6, 3, 1, 0, 15, 0, 2, 26, 0, 1, 1, 0, 0, 1]' : 0.196384}", "{'[1, 1, 2, 1, 6, 3, 1, 0, 15, 0, 2, 26, 0, 1, 1, 0, 0, 1]' : 0.196587}", "{'[1, 1, 2, 1, 6, 3, 1, 0, 15, 0, 2, 26, 0, 1, 1, 0, 0, 1]' : 0.196435}", "{'[1, 1, 2, 1, 6, 3, 1, 0, 15, 0, 2, 26, 0, 1, 1, 0, 0, 1]' : 0.196713}"]
returning from 'run': {'[1, 1, 2, 1, 6, 3, 1, 0, 15, 0, 2, 26, 0, 1, 1, 0, 0, 1]': ([0.236304, 0.236056, 0.210328, 0.196214, 0.196193, 0.196481, 0.196483, 0.196391, 0.196291, 0.196508, 0.196374, 0.196571, 0.196342, 0.196194, 0.196427, 0.19634, 0.196401, 0.196466, 0.196186, 0.196532, 0.197028, 0.196385, 0.196608, 0.196296, 0.19634, 0.196284, 0.196384, 0.196587, 0.196435, 0.196713], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 1, 2, 1, 6, 3, 1, 0, 15, 0, 2, 26, 0, 1, 1, 0, 0, 1]': ([0.236304, 0.236056, 0.210328, 0.196214, 0.196193, 0.196481, 0.196483, 0.196391, 0.196291, 0.196508, 0.196374, 0.196571, 0.196342, 0.196194, 0.196427, 0.19634, 0.196401, 0.196466, 0.196186, 0.196532, 0.197028, 0.196385, 0.196608, 0.196296, 0.19634, 0.196284, 0.196384, 0.196587, 0.196435, 0.196713], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	23
        Max loop nest depth: 	4
        Additions: 		2008
        Multiplications: 	988
        Divisions: 		0
        Logical: 		0
        Reads: 			4100
        Writes: 		725
        Comparisons:		23
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest90.exe __orio_perftest90.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest90.exe  
Program Test Output: 
{'[3, 3, 6, 0, 0, 0, 0, 0, 0, 28, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.104818}
{'[3, 3, 6, 0, 0, 0, 0, 0, 0, 28, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.104882}
{'[3, 3, 6, 0, 0, 0, 0, 0, 0, 28, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.104688}
{'[3, 3, 6, 0, 0, 0, 0, 0, 0, 28, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.104722}
{'[3, 3, 6, 0, 0, 0, 0, 0, 0, 28, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.102241}
{'[3, 3, 6, 0, 0, 0, 0, 0, 0, 28, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.092622}
{'[3, 3, 6, 0, 0, 0, 0, 0, 0, 28, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0923181}
{'[3, 3, 6, 0, 0, 0, 0, 0, 0, 28, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.092536}
{'[3, 3, 6, 0, 0, 0, 0, 0, 0, 28, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0924141}
{'[3, 3, 6, 0, 0, 0, 0, 0, 0, 28, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0928411}
{'[3, 3, 6, 0, 0, 0, 0, 0, 0, 28, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0925229}
{'[3, 3, 6, 0, 0, 0, 0, 0, 0, 28, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0924392}
{'[3, 3, 6, 0, 0, 0, 0, 0, 0, 28, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0926681}
{'[3, 3, 6, 0, 0, 0, 0, 0, 0, 28, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0926921}
{'[3, 3, 6, 0, 0, 0, 0, 0, 0, 28, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0925162}
{'[3, 3, 6, 0, 0, 0, 0, 0, 0, 28, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0923798}
{'[3, 3, 6, 0, 0, 0, 0, 0, 0, 28, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0924408}
{'[3, 3, 6, 0, 0, 0, 0, 0, 0, 28, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0924542}
{'[3, 3, 6, 0, 0, 0, 0, 0, 0, 28, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.092479}
{'[3, 3, 6, 0, 0, 0, 0, 0, 0, 28, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0926301}
{'[3, 3, 6, 0, 0, 0, 0, 0, 0, 28, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0929561}
{'[3, 3, 6, 0, 0, 0, 0, 0, 0, 28, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.092556}
{'[3, 3, 6, 0, 0, 0, 0, 0, 0, 28, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.092675}
{'[3, 3, 6, 0, 0, 0, 0, 0, 0, 28, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.092499}
{'[3, 3, 6, 0, 0, 0, 0, 0, 0, 28, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0923841}
{'[3, 3, 6, 0, 0, 0, 0, 0, 0, 28, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.092473}
{'[3, 3, 6, 0, 0, 0, 0, 0, 0, 28, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.092288}
{'[3, 3, 6, 0, 0, 0, 0, 0, 0, 28, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0924141}
{'[3, 3, 6, 0, 0, 0, 0, 0, 0, 28, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.092334}
{'[3, 3, 6, 0, 0, 0, 0, 0, 0, 28, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0929589}

out:
 ["{'[3, 3, 6, 0, 0, 0, 0, 0, 0, 28, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.104818}", "{'[3, 3, 6, 0, 0, 0, 0, 0, 0, 28, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.104882}", "{'[3, 3, 6, 0, 0, 0, 0, 0, 0, 28, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.104688}", "{'[3, 3, 6, 0, 0, 0, 0, 0, 0, 28, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.104722}", "{'[3, 3, 6, 0, 0, 0, 0, 0, 0, 28, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.102241}", "{'[3, 3, 6, 0, 0, 0, 0, 0, 0, 28, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.092622}", "{'[3, 3, 6, 0, 0, 0, 0, 0, 0, 28, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0923181}", "{'[3, 3, 6, 0, 0, 0, 0, 0, 0, 28, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.092536}", "{'[3, 3, 6, 0, 0, 0, 0, 0, 0, 28, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0924141}", "{'[3, 3, 6, 0, 0, 0, 0, 0, 0, 28, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0928411}", "{'[3, 3, 6, 0, 0, 0, 0, 0, 0, 28, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0925229}", "{'[3, 3, 6, 0, 0, 0, 0, 0, 0, 28, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0924392}", "{'[3, 3, 6, 0, 0, 0, 0, 0, 0, 28, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0926681}", "{'[3, 3, 6, 0, 0, 0, 0, 0, 0, 28, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0926921}", "{'[3, 3, 6, 0, 0, 0, 0, 0, 0, 28, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0925162}", "{'[3, 3, 6, 0, 0, 0, 0, 0, 0, 28, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0923798}", "{'[3, 3, 6, 0, 0, 0, 0, 0, 0, 28, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0924408}", "{'[3, 3, 6, 0, 0, 0, 0, 0, 0, 28, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0924542}", "{'[3, 3, 6, 0, 0, 0, 0, 0, 0, 28, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.092479}", "{'[3, 3, 6, 0, 0, 0, 0, 0, 0, 28, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0926301}", "{'[3, 3, 6, 0, 0, 0, 0, 0, 0, 28, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0929561}", "{'[3, 3, 6, 0, 0, 0, 0, 0, 0, 28, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.092556}", "{'[3, 3, 6, 0, 0, 0, 0, 0, 0, 28, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.092675}", "{'[3, 3, 6, 0, 0, 0, 0, 0, 0, 28, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.092499}", "{'[3, 3, 6, 0, 0, 0, 0, 0, 0, 28, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0923841}", "{'[3, 3, 6, 0, 0, 0, 0, 0, 0, 28, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.092473}", "{'[3, 3, 6, 0, 0, 0, 0, 0, 0, 28, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.092288}", "{'[3, 3, 6, 0, 0, 0, 0, 0, 0, 28, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0924141}", "{'[3, 3, 6, 0, 0, 0, 0, 0, 0, 28, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.092334}", "{'[3, 3, 6, 0, 0, 0, 0, 0, 0, 28, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0929589}"]
returning from 'run': {'[3, 3, 6, 0, 0, 0, 0, 0, 0, 28, 2, 0, 1, 0, 1, 1, 0, 1]': ([0.104818, 0.104882, 0.104688, 0.104722, 0.102241, 0.092622, 0.0923181, 0.092536, 0.0924141, 0.0928411, 0.0925229, 0.0924392, 0.0926681, 0.0926921, 0.0925162, 0.0923798, 0.0924408, 0.0924542, 0.092479, 0.0926301, 0.0929561, 0.092556, 0.092675, 0.092499, 0.0923841, 0.092473, 0.092288, 0.0924141, 0.092334, 0.0929589], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 3, 6, 0, 0, 0, 0, 0, 0, 28, 2, 0, 1, 0, 1, 1, 0, 1]': ([0.104818, 0.104882, 0.104688, 0.104722, 0.102241, 0.092622, 0.0923181, 0.092536, 0.0924141, 0.0928411, 0.0925229, 0.0924392, 0.0926681, 0.0926921, 0.0925162, 0.0923798, 0.0924408, 0.0924542, 0.092479, 0.0926301, 0.0929561, 0.092556, 0.092675, 0.092499, 0.0923841, 0.092473, 0.092288, 0.0924141, 0.092334, 0.0929589], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Complete design, with measurements:
     T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_K RT_I RT_J RT_K
192     6    1    6    0    3    6       0       1    1   0  27    0    1    1
469     0    2    0    2    0    6       1       1   15  16   0    2    0    0
776     1    6    0    6    6    6       0       0    2  10   0    0    0    0
792     2    5    0    2    4    0       0       0   29   0  29    0    1    1
982     5    6    3    0    4    2       0       0   14  29   0    0    0    0
1035    1    0    5    2    2    0       1       1   15   0   0    2    0    0
1053    1    3    0    0    3    2       0       0   11   0   3    0    2    0
1175    5    0    0    0    0    5       0       1   25  11   0    0    1    0
1450    2    5    4    6    6    6       1       1   26   0   6    0    0    0
1500    0    0    2    6    0    1       0       0   14   0  21    0    0    2
1709    2    1    3    6    4    2       0       0    0   0  26    2    0    0
1839    0    1    2    2    4    3       0       0   24   0   0    0    0    0
2130    2    0    2    3    2    3       1       0   27   0  10    0    0    2
2155    2    1    6    6    0    4       0       1   14   7   0    0    0    1
2254    5    2    4    5    4    3       0       1   29  29   0    1    1    0
2444    4    4    2    6    0    0       0       0    2   3   0    1    1    0
2523    3    0    1    0    6    3       1       1    5   0  29    1    0    0
2538    0    0    0    3    4    4       1       0    2  27   0    0    0    1
2797    2    6    5    2    4    3       0       1    5   0   0    0    1    1
2887    6    0    6    0    6    0       1       0   29   6   0    1    0    0
3055    6    5    1    4    0    2       1       1    2   0  27    2    0    0
3075    0    4    1    0    2    6       0       1   21   2   0    1    0    1
3101    0    0    6    6    6    0       0       1   10   0  19    0    1    0
3302    5    3    5    5    5    6       1       0   17   0   0    1    1    0
3418    6    5    5    5    0    0       0       1    1  21   0    0    1    1
3502    3    3    1    2    3    6       1       1   13   0   7    1    0    1
3557    6    2    0    4    4    1       1       0    3   0   6    0    0    2
3591    6    1    1    6    1    0       1       0    9   1   0    0    0    1
3594    5    2    5    6    0    6       0       0   29   0   2    1    0    1
3605    2    0    5    4    2    0       1       1    9   0  27    1    0    0
3728    0    0    0    6    3    6       0       0   10   0  27    1    1    0
3733    3    1    2    2    0    1       0       0   22   0   5    0    2    0
3977    0    6    6    2    0    5       1       0   16  18   0    0    1    0
3994    1    3    5    5    2    0       1       0   27   0  27    0    0    2
4145    1    1    2    1    6    3       1       0   15   0  26    0    1    1
4246    3    3    6    0    0    0       0       0    0  28   0    1    0    1
     SCR VEC1 VEC2  cost_mean
192    0    1    0 0.24841370
469    1    1    1 0.15143343
776    0    1    1 0.14058947
792    1    1    0 0.15240013
982    1    0    0 0.16485510
1035   0    0    1 0.23407667
1053   0    0    1 0.16456887
1175   1    0    1 0.13351030
1450   1    1    1 0.22930607
1500   1    0    1 0.15899707
1709   1    1    1 0.18487537
1839   0    0    0 0.25400990
2130   0    1    0 0.27037343
2155   0    0    0 0.14130273
2254   0    0    0 0.09377974
2444   0    1    0 0.12054227
2523   1    1    1 0.11821120
2538   1    1    1 0.18664687
2797   0    1    1 0.19431967
2887   0    1    1 0.10372333
3055   0    0    0 0.22755227
3075   0    1    1 0.12182923
3101   0    1    1 0.19341560
3302   1    1    1 0.08945214
3418   1    1    1 0.13676690
3502   1    0    0 0.10059257
3557   0    1    1 0.19003460
3591   1    0    0 0.17206343
3594   1    1    0 0.09459510
3605   1    1    1 0.09498214
3728   1    0    1 0.08776257
3733   0    1    1 0.19419463
3977   1    0    0 0.14603740
3994   0    0    1 0.18994673
4145   0    0    1 0.19953807
4246   1    0    1 0.09449476

Heteroscedasticity Test p-value: 0.314644053898
Regression Step:                Df   Sum Sq  Mean Sq F value   Pr(>F)    
T1_I             1 0.002050 0.002050   6.729 0.040988 *  
T1_J             1 0.000167 0.000167   0.549 0.486818    
T1_K             1 0.000025 0.000025   0.082 0.784541    
T2_I             1 0.000490 0.000490   1.608 0.251794    
T2_J             1 0.000700 0.000700   2.299 0.180271    
T2_K             1 0.002173 0.002173   7.130 0.037018 *  
ACOPY_x          1 0.001691 0.001691   5.549 0.056613 .  
ACOPY_y          1 0.000314 0.000314   1.031 0.349077    
U1_I             1 0.000018 0.000018   0.061 0.813895    
U_I              1 0.006402 0.006402  21.010 0.003756 ** 
U_K              1 0.000075 0.000075   0.246 0.637266    
RT_I             1 0.008850 0.008850  29.044 0.001681 ** 
RT_J             1 0.001380 0.001380   4.530 0.077375 .  
RT_K             1 0.000043 0.000043   0.143 0.718642    
SCR              1 0.012668 0.012668  41.573 0.000659 ***
VEC1             1 0.000184 0.000184   0.604 0.466421    
VEC2             1 0.001871 0.001871   6.139 0.047960 *  
I(1/(1 + T1_I))  1 0.000111 0.000111   0.363 0.569067    
I(1/(1 + T1_J))  1 0.000180 0.000180   0.589 0.471807    
I(1/(1 + T1_K))  1 0.001753 0.001753   5.753 0.053407 .  
I(1/(1 + T2_I))  1 0.005693 0.005693  18.683 0.004970 ** 
I(1/(1 + T2_J))  1 0.000692 0.000692   2.271 0.182495    
I(1/(1 + T2_K))  1 0.003234 0.003234  10.613 0.017299 *  
I(1/(1 + U1_I))  1 0.013019 0.013019  42.725 0.000613 ***
I(1/(1 + U_I))   1 0.005283 0.005283  17.336 0.005920 ** 
I(1/(1 + U_K))   1 0.001618 0.001618   5.310 0.060742 .  
I(1/(1 + RT_I))  1 0.020191 0.020191  66.261 0.000185 ***
I(1/(1 + RT_J))  1 0.000339 0.000339   1.114 0.331832    
I(1/(1 + RT_K))  1 0.000110 0.000110   0.361 0.570073    
Residuals        6 0.001828 0.000305                     
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Predicting Best
Generating valid search space of size 4300 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Tested coordinates: 40000
Tested coordinates: 50000
Valid coordinates: 860
Tested coordinates: 60000
Tested coordinates: 70000
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Valid coordinates: 1720
Tested coordinates: 110000
Tested coordinates: 120000
Tested coordinates: 130000
Tested coordinates: 140000
Tested coordinates: 150000
Tested coordinates: 160000
Valid coordinates: 2580
Tested coordinates: 170000
Tested coordinates: 180000
Tested coordinates: 190000
Tested coordinates: 200000
Tested coordinates: 210000
Valid coordinates: 3440
Tested coordinates: 220000
Tested coordinates: 230000
Tested coordinates: 240000
Tested coordinates: 250000
Tested coordinates: 260000
Valid coordinates: 4300
Valid/Tested configurations: 4300/268501
Generated Search Space:
NULL
Identical predictions (tol = 1e-5): 1
Getting Best from Design
Response: ['cost_mean']
Design Names:  [1] "T1_I"      "T1_J"      "T1_K"      "T2_I"      "T2_J"      "T2_K"     
 [7] "ACOPY_x"   "ACOPY_y"   "U1_I"      "U_I"       "U_K"       "RT_I"     
[13] "RT_J"      "RT_K"      "SCR"       "VEC1"      "VEC2"      "cost_mean"

Design Response:       cost_mean
192  0.24841370
469  0.15143343
776  0.14058947
792  0.15240013
982  0.16485510
1035 0.23407667
1053 0.16456887
1175 0.13351030
1450 0.22930607
1500 0.15899707
1709 0.18487537
1839 0.25400990
2130 0.27037343
2155 0.14130273
2254 0.09377974
2444 0.12054227
2523 0.11821120
2538 0.18664687
2797 0.19431967
2887 0.10372333
3055 0.22755227
3075 0.12182923
3101 0.19341560
3302 0.08945214
3418 0.13676690
3502 0.10059257
3557 0.19003460
3591 0.17206343
3594 0.09459510
3605 0.09498214
3728 0.08776257
3733 0.19419463
3977 0.14603740
3994 0.18994673
4145 0.19953807
4246 0.09449476

Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Getting fixed variables
Pruning Model
Best Predicted:      T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
2514    2    5    6    3    5    4       0       0   29  16   2   0    1    0
     RT_K SCR VEC1 VEC2
2514    1   1    0    1

Best From Design: [0, 0, 0, 6, 3, 6, 0, 0, 10, 0, 2, 27, 1, 1, 0, 1, 0, 1]
Pruned Factors: ['T1_J', 'T1_K', 'T2_I', 'T2_J', 'ACOPY_y', 'U1_I', 'U_K', 'RT_J', 'RT_K', 'VEC1']
Fixed Factors: {'ACOPY_x': 0, 'T1_I': 2, 'RT_I': 1, 'U_J': 2, 'U_I': 16, 'T2_K': 4, 'VEC2': 1, 'SCR': 1}
Length of requested configs: 1
Result was on Database, Returning Now
Starting Point (-O3):
0.16283083333333334
Predicted Best Point:
[2, 5, 6, 3, 5, 4, 0, 0, 29, 16, 2, 0, 1, 0, 1, 1, 0, 1]
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	28
        Max loop nest depth: 	6
        Additions: 		1454
        Multiplications: 	676
        Divisions: 		0
        Logical: 		0
        Reads: 			3019
        Writes: 		573
        Comparisons:		28
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest91.exe __orio_perftest91.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest91.exe  
Program Test Output: 
{'[2, 5, 6, 3, 5, 4, 0, 0, 29, 16, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.108268}
{'[2, 5, 6, 3, 5, 4, 0, 0, 29, 16, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.108116}
{'[2, 5, 6, 3, 5, 4, 0, 0, 29, 16, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.108141}
{'[2, 5, 6, 3, 5, 4, 0, 0, 29, 16, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.101735}
{'[2, 5, 6, 3, 5, 4, 0, 0, 29, 16, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.100088}
{'[2, 5, 6, 3, 5, 4, 0, 0, 29, 16, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.100131}
{'[2, 5, 6, 3, 5, 4, 0, 0, 29, 16, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.100131}
{'[2, 5, 6, 3, 5, 4, 0, 0, 29, 16, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.100128}
{'[2, 5, 6, 3, 5, 4, 0, 0, 29, 16, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0989029}
{'[2, 5, 6, 3, 5, 4, 0, 0, 29, 16, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.098103}
{'[2, 5, 6, 3, 5, 4, 0, 0, 29, 16, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.098098}
{'[2, 5, 6, 3, 5, 4, 0, 0, 29, 16, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0981591}
{'[2, 5, 6, 3, 5, 4, 0, 0, 29, 16, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0982552}
{'[2, 5, 6, 3, 5, 4, 0, 0, 29, 16, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0981591}
{'[2, 5, 6, 3, 5, 4, 0, 0, 29, 16, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0980539}
{'[2, 5, 6, 3, 5, 4, 0, 0, 29, 16, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.09832}
{'[2, 5, 6, 3, 5, 4, 0, 0, 29, 16, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.098037}
{'[2, 5, 6, 3, 5, 4, 0, 0, 29, 16, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0982339}
{'[2, 5, 6, 3, 5, 4, 0, 0, 29, 16, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.099165}
{'[2, 5, 6, 3, 5, 4, 0, 0, 29, 16, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.100209}
{'[2, 5, 6, 3, 5, 4, 0, 0, 29, 16, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.10016}
{'[2, 5, 6, 3, 5, 4, 0, 0, 29, 16, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.10012}
{'[2, 5, 6, 3, 5, 4, 0, 0, 29, 16, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.100155}
{'[2, 5, 6, 3, 5, 4, 0, 0, 29, 16, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0983651}
{'[2, 5, 6, 3, 5, 4, 0, 0, 29, 16, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.098156}
{'[2, 5, 6, 3, 5, 4, 0, 0, 29, 16, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0981519}
{'[2, 5, 6, 3, 5, 4, 0, 0, 29, 16, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.098022}
{'[2, 5, 6, 3, 5, 4, 0, 0, 29, 16, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0981381}
{'[2, 5, 6, 3, 5, 4, 0, 0, 29, 16, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.098866}
{'[2, 5, 6, 3, 5, 4, 0, 0, 29, 16, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.100148}

out:
 ["{'[2, 5, 6, 3, 5, 4, 0, 0, 29, 16, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.108268}", "{'[2, 5, 6, 3, 5, 4, 0, 0, 29, 16, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.108116}", "{'[2, 5, 6, 3, 5, 4, 0, 0, 29, 16, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.108141}", "{'[2, 5, 6, 3, 5, 4, 0, 0, 29, 16, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.101735}", "{'[2, 5, 6, 3, 5, 4, 0, 0, 29, 16, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.100088}", "{'[2, 5, 6, 3, 5, 4, 0, 0, 29, 16, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.100131}", "{'[2, 5, 6, 3, 5, 4, 0, 0, 29, 16, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.100131}", "{'[2, 5, 6, 3, 5, 4, 0, 0, 29, 16, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.100128}", "{'[2, 5, 6, 3, 5, 4, 0, 0, 29, 16, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0989029}", "{'[2, 5, 6, 3, 5, 4, 0, 0, 29, 16, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.098103}", "{'[2, 5, 6, 3, 5, 4, 0, 0, 29, 16, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.098098}", "{'[2, 5, 6, 3, 5, 4, 0, 0, 29, 16, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0981591}", "{'[2, 5, 6, 3, 5, 4, 0, 0, 29, 16, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0982552}", "{'[2, 5, 6, 3, 5, 4, 0, 0, 29, 16, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0981591}", "{'[2, 5, 6, 3, 5, 4, 0, 0, 29, 16, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0980539}", "{'[2, 5, 6, 3, 5, 4, 0, 0, 29, 16, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.09832}", "{'[2, 5, 6, 3, 5, 4, 0, 0, 29, 16, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.098037}", "{'[2, 5, 6, 3, 5, 4, 0, 0, 29, 16, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0982339}", "{'[2, 5, 6, 3, 5, 4, 0, 0, 29, 16, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.099165}", "{'[2, 5, 6, 3, 5, 4, 0, 0, 29, 16, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.100209}", "{'[2, 5, 6, 3, 5, 4, 0, 0, 29, 16, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.10016}", "{'[2, 5, 6, 3, 5, 4, 0, 0, 29, 16, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.10012}", "{'[2, 5, 6, 3, 5, 4, 0, 0, 29, 16, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.100155}", "{'[2, 5, 6, 3, 5, 4, 0, 0, 29, 16, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0983651}", "{'[2, 5, 6, 3, 5, 4, 0, 0, 29, 16, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.098156}", "{'[2, 5, 6, 3, 5, 4, 0, 0, 29, 16, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0981519}", "{'[2, 5, 6, 3, 5, 4, 0, 0, 29, 16, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.098022}", "{'[2, 5, 6, 3, 5, 4, 0, 0, 29, 16, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.0981381}", "{'[2, 5, 6, 3, 5, 4, 0, 0, 29, 16, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.098866}", "{'[2, 5, 6, 3, 5, 4, 0, 0, 29, 16, 2, 0, 1, 0, 1, 1, 0, 1]' : 0.100148}"]
returning from 'run': {'[2, 5, 6, 3, 5, 4, 0, 0, 29, 16, 2, 0, 1, 0, 1, 1, 0, 1]': ([0.108268, 0.108116, 0.108141, 0.101735, 0.100088, 0.100131, 0.100131, 0.100128, 0.0989029, 0.098103, 0.098098, 0.0981591, 0.0982552, 0.0981591, 0.0980539, 0.09832, 0.098037, 0.0982339, 0.099165, 0.100209, 0.10016, 0.10012, 0.100155, 0.0983651, 0.098156, 0.0981519, 0.098022, 0.0981381, 0.098866, 0.100148], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 5, 6, 3, 5, 4, 0, 0, 29, 16, 2, 0, 1, 0, 1, 1, 0, 1]': ([0.108268, 0.108116, 0.108141, 0.101735, 0.100088, 0.100131, 0.100131, 0.100128, 0.0989029, 0.098103, 0.098098, 0.0981591, 0.0982552, 0.0981591, 0.0980539, 0.09832, 0.098037, 0.0982339, 0.099165, 0.100209, 0.10016, 0.10012, 0.100155, 0.0983651, 0.098156, 0.0981519, 0.098022, 0.0981381, 0.098866, 0.100148], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Design Best Point:
[0, 0, 0, 6, 3, 6, 0, 0, 10, 0, 2, 27, 1, 1, 0, 1, 0, 1]
Length of requested configs: 1
Result was on Database, Returning Now
Fixed Factors: {'ACOPY_x': 0, 'T1_I': 2, 'RT_I': 1, 'U_J': 2, 'U_I': 16, 'T2_K': 4, 'VEC2': 1, 'SCR': 1}
Slowdown (Design Best): 0.538980066224149
Slowdown (Predicted Best): 0.613871492397529
Budget: 75/180
Updating Global Best: 0.08776257333333336
Current Best Point: 
[0, 0, 0, 6, 3, 6, 0, 0, 10, 0, 2, 27, 1, 1, 0, 1, 0, 1]
Final Best Point: 
[0, 0, 0, 6, 3, 6, 0, 0, 10, 0, 2, 27, 1, 1, 0, 1, 0, 1]
Ending DOPT-ANOVA
Best Point: [0, 0, 0, 6, 3, 6, 0, 0, 10, 0, 2, 27, 1, 1, 0, 1, 0, 1]
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Speedup: 1.8553561860006227
----- end random search -----
----- begin random search summary -----
 total completed runs: 0
 total successful runs: 0
 total failed runs: 0
 speedup: 1.8553561860006227
----- end random search summary -----
----- begin summary -----
 best coordinate: [0, 0, 0, 6, 3, 6, 0, 0, 10, 0, 2, 27, 1, 1, 0, 1, 0, 1]={'ACOPY_x': False, 'ACOPY_y': False, 'RT_K': 1, 'T1_I': 1, 'T1_J': 1, 'T1_K': 1, 'U_K': 28, 'U_J': 3, 'U_I': 1, 'U1_I': 11, 'T2_K': 2048, 'T2_J': 256, 'T2_I': 2048, 'VEC2': True, 'VEC1': False, 'RT_I': 8, 'SCR': True, 'RT_J': 8}, cost=8.776257e-02, transfer_time=inf, inputs=[('N', 10000)], search_time=-1723.29, runs=75
----- end summary -----
Length of requested configs: 1
Result was on Database, Returning Now
----- the obtained best performance parameters -----
 ACOPY_x = False
 ACOPY_y = False
 RT_I = 8
 RT_J = 8
 RT_K = 1
 SCR = True
 T1_I = 1
 T1_J = 1
 T1_K = 1
 T2_I = 2048
 T2_J = 256
 T2_K = 2048
 U1_I = 11
 U_I = 1
 U_J = 3
 U_K = 28
 VEC1 = False
 VEC2 = True
 cost_mean = 0.08776257333333336
 points = 75
 speedup_O3 = 1.8553561860006227
 technique = DLMT
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	4
        Additions: 		1595
        Multiplications: 	738
        Divisions: 		0
        Logical: 		0
        Reads: 			3224
        Writes: 		581
        Comparisons:		19
        Gotos: 			0
        
----- finish optimizations -----

----- begin removing annotations from output-----
----- finished removing annotations from output-----

----- begin writing the output file(s) -----
--> writing output to: _atax2.src1.c
----- finished writing the output file(s) -----

====== END ORIO ======
