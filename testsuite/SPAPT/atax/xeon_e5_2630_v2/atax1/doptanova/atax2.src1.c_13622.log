
====== START ORIO ======

----- begin reading the source file: atax2.src1.c -----
----- finished reading the source file -----

----- begin parsing annotations -----
----- finished parsing annotations -----

----- begin optimizations -----
Search_Space         = 8.234e+13
Number_of_Parameters = 18
Numeric_Parameters   = 13
Binary_Parameters    = 05
['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
[[1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [False, True], [False, True], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 8, 32], [1, 8, 32], [1, 8, 32], [False, True], [False, True], [False, True]]

----- begin empirical tuning for problem size -----
 N = 10000
Parameters: {'ACOPY_x': [0, 2], 'ACOPY_y': [0, 2], 'RT_K': [0, 3], 'T1_I': [0, 7], 'T1_J': [0, 7], 'T1_K': [0, 7], 'U_K': [0, 30], 'U_J': [0, 30], 'U_I': [0, 30], 'U1_I': [0, 30], 'T2_K': [0, 7], 'T2_J': [0, 7], 'T2_I': [0, 7], 'VEC2': [0, 2], 'VEC1': [0, 2], 'RT_I': [0, 3], 'SCR': [0, 2], 'RT_J': [0, 3]}
Parameter Range Values: {'ACOPY_x': [False, True], 'ACOPY_y': [False, True], 'RT_K': [1, 8, 32], 'T1_I': [1, 16, 32, 64, 128, 256, 512], 'T1_J': [1, 16, 32, 64, 128, 256, 512], 'T1_K': [1, 16, 32, 64, 128, 256, 512], 'U_K': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_J': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U1_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'T2_K': [1, 64, 128, 256, 512, 1024, 2048], 'T2_J': [1, 64, 128, 256, 512, 1024, 2048], 'T2_I': [1, 64, 128, 256, 512, 1024, 2048], 'VEC2': [False, True], 'VEC1': [False, True], 'RT_I': [1, 8, 32], 'SCR': [False, True], 'RT_J': [1, 8, 32]}

----- begin random search -----
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Inverse Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Starting DOPT-anova
Step 0
Generating valid search space of size 4600 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Valid coordinates: 920
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Valid coordinates: 1840
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Tested coordinates: 110000
Valid coordinates: 2760
Tested coordinates: 120000
Tested coordinates: 130000
Tested coordinates: 140000
Tested coordinates: 150000
Valid coordinates: 3680
Tested coordinates: 160000
Tested coordinates: 170000
Tested coordinates: 180000
Tested coordinates: 190000
Valid coordinates: 4600
Valid/Tested configurations: 4600/191219
Generated Search Space:
NULL
Clean Info:
Removed Factors: character(0)

Removed Inverse Factors: [1] "ACOPY_x" "ACOPY_y" "SCR"     "VEC1"    "VEC2"   

New Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
New Inverse Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
New Fixed Factors: {}
Full Model:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Fixed Factors: {}
Computing D-Optimal Design
Computing D-Optimal Design with 46 experiments
Design Formula:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Starting "optFederov" run
Using Search Space:
NULL
Data Dimensions: [1] 4600   18

     T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
116     3    5    0    2    6    3       1       0   28  13   0  17    0    1
208     1    2    0    0    0    0       0       0   27   0   1   0    0    0
515     0    1    2    2    1    3       0       1   29   0  15   3    0    1
597     3    0    6    6    6    5       0       0    2   0  29  28    0    1
663     4    6    6    2    0    0       0       1    2  28  27   0    0    1
747     5    6    2    6    6    1       1       1   29   0  29   2    0    2
831     0    0    0    5    1    6       0       1   23  23   9   0    0    0
860     2    6    1    6    6    1       0       1    8  28   0  29    0    0
1058    2    1    1    6    0    2       0       1   16  22  11   0    1    0
1072    1    0    1    0    2    0       0       1    7   9   0   0    0    0
1116    2    1    1    6    6    4       1       1    0   0  11   6    2    0
1183    4    6    1    6    4    5       1       0    2   1   0   0    1    0
1377    0    4    1    2    2    0       0       0    0   0  25  29    0    1
1404    6    0    5    0    2    5       1       0    1   6   0   4    1    0
1536    0    0    5    3    0    6       1       1    0  10   3   0    0    0
1575    6    1    3    4    2    2       1       1   29  29   0  27    2    0
1685    3    5    1    0    6    5       0       0   25  28  29   0    2    0
1743    0    0    6    2    6    6       1       1   18   0  21  25    1    0
2048    2    1    0    5    3    1       1       1    0   4  27   0    0    0
2093    1    3    6    6    1    0       1       1   28   2  27   0    2    0
2177    5    0    1    4    6    0       1       1    4   0   9   0    2    0
2324    0    1    0    0    0    5       1       1    2  21  19   0    0    2
2349    0    4    6    5    5    4       0       1   11  16   3   0    2    0
2465    3    0    5    0    2    3       1       1    7   0   0  25    0    2
2531    2    3    0    6    1    6       0       0    6  28   0  10    0    0
2539    3    0    4    6    0    6       0       1   19   1  16   0    0    0
2612    4    1    0    0    4    0       0       0   11   9   0  28    0    0
2714    0    5    6    0    6    0       0       1   18   9   0   9    1    0
2716    6    0    6    6    3    4       0       0    0  22   1   0    1    0
2720    6    2    6    6    2    0       1       0   22  24  22   0    0    0
2812    2    6    6    6    6    4       1       0    8   0   1   0    0    1
3039    3    1    6    1    6    4       0       0    7   3   0   3    0    0
3127    1    6    6    5    0    0       0       0   27  22   0   3    0    2
3152    3    6    5    0    5    6       1       1   29   0   3  22    0    0
3170    5    2    0    6    5    6       0       1   18   0   0   2    1    1
3270    6    6    0    6    0    5       0       0    5   0  21  24    1    0
3332    0    5    4    6    0    5       1       0    8  20  27   0    0    0
3384    6    3    3    0    4    6       0       0   13   0  10  25    0    0
3415    1    5    0    0    4    0       1       0   25  20   8   0    1    1
3421    6    6    2    0    0    5       0       1    1   3   0   7    2    0
3435    2    4    2    2    2    2       1       0    2   0   4   8    1    0
3598    3    3    3    2    0    6       0       1   29  17   0  25    1    1
3759    0    0    0    4    3    2       0       0   26   2  20   0    0    0
3820    0    6    0    3    4    1       1       1    7   0   0  23    0    0
3930    6    2    3    0    6    0       1       0    8  24   0   4    0    1
4265    2    5    2    6    4    6       1       1   11   3   5   0    0    2
     RT_K SCR VEC1 VEC2
116     1   1    1    1
208     0   0    1    0
515     1   1    1    1
597     1   1    1    0
663     1   0    0    0
747     0   0    1    1
831     2   1    1    0
860     0   0    1    1
1058    1   0    1    0
1072    0   1    0    0
1116    0   1    0    0
1183    1   1    1    0
1377    1   0    0    0
1404    0   1    1    0
1536    0   0    1    0
1575    0   0    0    0
1685    0   0    1    1
1743    1   1    0    1
2048    2   0    0    1
2093    0   0    1    1
2177    0   0    0    1
2324    0   1    1    1
2349    0   1    0    1
2465    0   0    0    1
2531    1   0    0    1
2539    0   1    0    1
2612    2   1    1    1
2714    0   1    0    0
2716    1   0    1    1
2720    0   1    1    0
2812    0   0    0    1
3039    2   0    1    0
3127    0   1    0    0
3152    1   0    1    0
3170    0   0    1    0
3270    1   0    1    0
3332    2   1    0    1
3384    2   0    0    1
3415    0   1    0    0
3421    0   1    0    1
3435    0   1    1    1
3598    0   1    1    1
3759    0   0    0    0
3820    2   1    1    0
3930    1   0    1    0
4265    0   0    0    0

D-Efficiency Approximation: [1] 0.353

Measuring design of size 46
Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Length of requested configs: 1
Code stats:
        Number of loops: 	61
        Max loop nest depth: 	6
        Additions: 		2950
        Multiplications: 	1050
        Divisions: 		0
        Logical: 		0
        Reads: 			6352
        Writes: 		1399
        Comparisons:		61
        Gotos: 			0
        
 building the original code:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -DORIGINAL -o __orio_perftest_original.exe __orio_perftest1.c timer_cpu.o -lm
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest1.exe __orio_perftest1.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest1.exe  
Program Test Output: 
{'[3, 5, 0, 2, 6, 3, 1, 0, 28, 13, 0, 17, 0, 1, 1, 1, 1, 1]' : 0.138485}
{'[3, 5, 0, 2, 6, 3, 1, 0, 28, 13, 0, 17, 0, 1, 1, 1, 1, 1]' : 0.138432}
{'[3, 5, 0, 2, 6, 3, 1, 0, 28, 13, 0, 17, 0, 1, 1, 1, 1, 1]' : 0.138413}
{'[3, 5, 0, 2, 6, 3, 1, 0, 28, 13, 0, 17, 0, 1, 1, 1, 1, 1]' : 0.135433}
{'[3, 5, 0, 2, 6, 3, 1, 0, 28, 13, 0, 17, 0, 1, 1, 1, 1, 1]' : 0.117449}
{'[3, 5, 0, 2, 6, 3, 1, 0, 28, 13, 0, 17, 0, 1, 1, 1, 1, 1]' : 0.116989}
{'[3, 5, 0, 2, 6, 3, 1, 0, 28, 13, 0, 17, 0, 1, 1, 1, 1, 1]' : 0.116936}
{'[3, 5, 0, 2, 6, 3, 1, 0, 28, 13, 0, 17, 0, 1, 1, 1, 1, 1]' : 0.118342}
{'[3, 5, 0, 2, 6, 3, 1, 0, 28, 13, 0, 17, 0, 1, 1, 1, 1, 1]' : 0.120667}
{'[3, 5, 0, 2, 6, 3, 1, 0, 28, 13, 0, 17, 0, 1, 1, 1, 1, 1]' : 0.120689}
{'[3, 5, 0, 2, 6, 3, 1, 0, 28, 13, 0, 17, 0, 1, 1, 1, 1, 1]' : 0.121366}
{'[3, 5, 0, 2, 6, 3, 1, 0, 28, 13, 0, 17, 0, 1, 1, 1, 1, 1]' : 0.121606}
{'[3, 5, 0, 2, 6, 3, 1, 0, 28, 13, 0, 17, 0, 1, 1, 1, 1, 1]' : 0.121549}
{'[3, 5, 0, 2, 6, 3, 1, 0, 28, 13, 0, 17, 0, 1, 1, 1, 1, 1]' : 0.12164}
{'[3, 5, 0, 2, 6, 3, 1, 0, 28, 13, 0, 17, 0, 1, 1, 1, 1, 1]' : 0.121392}
{'[3, 5, 0, 2, 6, 3, 1, 0, 28, 13, 0, 17, 0, 1, 1, 1, 1, 1]' : 0.121516}
{'[3, 5, 0, 2, 6, 3, 1, 0, 28, 13, 0, 17, 0, 1, 1, 1, 1, 1]' : 0.12143}
{'[3, 5, 0, 2, 6, 3, 1, 0, 28, 13, 0, 17, 0, 1, 1, 1, 1, 1]' : 0.121733}
{'[3, 5, 0, 2, 6, 3, 1, 0, 28, 13, 0, 17, 0, 1, 1, 1, 1, 1]' : 0.121361}
{'[3, 5, 0, 2, 6, 3, 1, 0, 28, 13, 0, 17, 0, 1, 1, 1, 1, 1]' : 0.121441}
{'[3, 5, 0, 2, 6, 3, 1, 0, 28, 13, 0, 17, 0, 1, 1, 1, 1, 1]' : 0.121436}
{'[3, 5, 0, 2, 6, 3, 1, 0, 28, 13, 0, 17, 0, 1, 1, 1, 1, 1]' : 0.121634}
{'[3, 5, 0, 2, 6, 3, 1, 0, 28, 13, 0, 17, 0, 1, 1, 1, 1, 1]' : 0.121715}
{'[3, 5, 0, 2, 6, 3, 1, 0, 28, 13, 0, 17, 0, 1, 1, 1, 1, 1]' : 0.121419}
{'[3, 5, 0, 2, 6, 3, 1, 0, 28, 13, 0, 17, 0, 1, 1, 1, 1, 1]' : 0.121755}
{'[3, 5, 0, 2, 6, 3, 1, 0, 28, 13, 0, 17, 0, 1, 1, 1, 1, 1]' : 0.121511}
{'[3, 5, 0, 2, 6, 3, 1, 0, 28, 13, 0, 17, 0, 1, 1, 1, 1, 1]' : 0.12155}
{'[3, 5, 0, 2, 6, 3, 1, 0, 28, 13, 0, 17, 0, 1, 1, 1, 1, 1]' : 0.120534}
{'[3, 5, 0, 2, 6, 3, 1, 0, 28, 13, 0, 17, 0, 1, 1, 1, 1, 1]' : 0.119652}
{'[3, 5, 0, 2, 6, 3, 1, 0, 28, 13, 0, 17, 0, 1, 1, 1, 1, 1]' : 0.121424}

out:
 ["{'[3, 5, 0, 2, 6, 3, 1, 0, 28, 13, 0, 17, 0, 1, 1, 1, 1, 1]' : 0.138485}", "{'[3, 5, 0, 2, 6, 3, 1, 0, 28, 13, 0, 17, 0, 1, 1, 1, 1, 1]' : 0.138432}", "{'[3, 5, 0, 2, 6, 3, 1, 0, 28, 13, 0, 17, 0, 1, 1, 1, 1, 1]' : 0.138413}", "{'[3, 5, 0, 2, 6, 3, 1, 0, 28, 13, 0, 17, 0, 1, 1, 1, 1, 1]' : 0.135433}", "{'[3, 5, 0, 2, 6, 3, 1, 0, 28, 13, 0, 17, 0, 1, 1, 1, 1, 1]' : 0.117449}", "{'[3, 5, 0, 2, 6, 3, 1, 0, 28, 13, 0, 17, 0, 1, 1, 1, 1, 1]' : 0.116989}", "{'[3, 5, 0, 2, 6, 3, 1, 0, 28, 13, 0, 17, 0, 1, 1, 1, 1, 1]' : 0.116936}", "{'[3, 5, 0, 2, 6, 3, 1, 0, 28, 13, 0, 17, 0, 1, 1, 1, 1, 1]' : 0.118342}", "{'[3, 5, 0, 2, 6, 3, 1, 0, 28, 13, 0, 17, 0, 1, 1, 1, 1, 1]' : 0.120667}", "{'[3, 5, 0, 2, 6, 3, 1, 0, 28, 13, 0, 17, 0, 1, 1, 1, 1, 1]' : 0.120689}", "{'[3, 5, 0, 2, 6, 3, 1, 0, 28, 13, 0, 17, 0, 1, 1, 1, 1, 1]' : 0.121366}", "{'[3, 5, 0, 2, 6, 3, 1, 0, 28, 13, 0, 17, 0, 1, 1, 1, 1, 1]' : 0.121606}", "{'[3, 5, 0, 2, 6, 3, 1, 0, 28, 13, 0, 17, 0, 1, 1, 1, 1, 1]' : 0.121549}", "{'[3, 5, 0, 2, 6, 3, 1, 0, 28, 13, 0, 17, 0, 1, 1, 1, 1, 1]' : 0.12164}", "{'[3, 5, 0, 2, 6, 3, 1, 0, 28, 13, 0, 17, 0, 1, 1, 1, 1, 1]' : 0.121392}", "{'[3, 5, 0, 2, 6, 3, 1, 0, 28, 13, 0, 17, 0, 1, 1, 1, 1, 1]' : 0.121516}", "{'[3, 5, 0, 2, 6, 3, 1, 0, 28, 13, 0, 17, 0, 1, 1, 1, 1, 1]' : 0.12143}", "{'[3, 5, 0, 2, 6, 3, 1, 0, 28, 13, 0, 17, 0, 1, 1, 1, 1, 1]' : 0.121733}", "{'[3, 5, 0, 2, 6, 3, 1, 0, 28, 13, 0, 17, 0, 1, 1, 1, 1, 1]' : 0.121361}", "{'[3, 5, 0, 2, 6, 3, 1, 0, 28, 13, 0, 17, 0, 1, 1, 1, 1, 1]' : 0.121441}", "{'[3, 5, 0, 2, 6, 3, 1, 0, 28, 13, 0, 17, 0, 1, 1, 1, 1, 1]' : 0.121436}", "{'[3, 5, 0, 2, 6, 3, 1, 0, 28, 13, 0, 17, 0, 1, 1, 1, 1, 1]' : 0.121634}", "{'[3, 5, 0, 2, 6, 3, 1, 0, 28, 13, 0, 17, 0, 1, 1, 1, 1, 1]' : 0.121715}", "{'[3, 5, 0, 2, 6, 3, 1, 0, 28, 13, 0, 17, 0, 1, 1, 1, 1, 1]' : 0.121419}", "{'[3, 5, 0, 2, 6, 3, 1, 0, 28, 13, 0, 17, 0, 1, 1, 1, 1, 1]' : 0.121755}", "{'[3, 5, 0, 2, 6, 3, 1, 0, 28, 13, 0, 17, 0, 1, 1, 1, 1, 1]' : 0.121511}", "{'[3, 5, 0, 2, 6, 3, 1, 0, 28, 13, 0, 17, 0, 1, 1, 1, 1, 1]' : 0.12155}", "{'[3, 5, 0, 2, 6, 3, 1, 0, 28, 13, 0, 17, 0, 1, 1, 1, 1, 1]' : 0.120534}", "{'[3, 5, 0, 2, 6, 3, 1, 0, 28, 13, 0, 17, 0, 1, 1, 1, 1, 1]' : 0.119652}", "{'[3, 5, 0, 2, 6, 3, 1, 0, 28, 13, 0, 17, 0, 1, 1, 1, 1, 1]' : 0.121424}"]
returning from 'run': {'[3, 5, 0, 2, 6, 3, 1, 0, 28, 13, 0, 17, 0, 1, 1, 1, 1, 1]': ([0.138485, 0.138432, 0.138413, 0.135433, 0.117449, 0.116989, 0.116936, 0.118342, 0.120667, 0.120689, 0.121366, 0.121606, 0.121549, 0.12164, 0.121392, 0.121516, 0.12143, 0.121733, 0.121361, 0.121441, 0.121436, 0.121634, 0.121715, 0.121419, 0.121755, 0.121511, 0.12155, 0.120534, 0.119652, 0.121424], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 5, 0, 2, 6, 3, 1, 0, 28, 13, 0, 17, 0, 1, 1, 1, 1, 1]': ([0.138485, 0.138432, 0.138413, 0.135433, 0.117449, 0.116989, 0.116936, 0.118342, 0.120667, 0.120689, 0.121366, 0.121606, 0.121549, 0.12164, 0.121392, 0.121516, 0.12143, 0.121733, 0.121361, 0.121441, 0.121436, 0.121634, 0.121715, 0.121419, 0.121755, 0.121511, 0.12155, 0.120534, 0.119652, 0.121424], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	4
        Additions: 		69
        Multiplications: 	8
        Divisions: 		0
        Logical: 		0
        Reads: 			158
        Writes: 		53
        Comparisons:		8
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest2.exe __orio_perftest2.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest2.exe  
Program Test Output: 
{'[1, 2, 0, 0, 0, 0, 0, 0, 27, 0, 1, 0, 0, 0, 0, 0, 1, 0]' : 0.184829}
{'[1, 2, 0, 0, 0, 0, 0, 0, 27, 0, 1, 0, 0, 0, 0, 0, 1, 0]' : 0.184674}
{'[1, 2, 0, 0, 0, 0, 0, 0, 27, 0, 1, 0, 0, 0, 0, 0, 1, 0]' : 0.183043}
{'[1, 2, 0, 0, 0, 0, 0, 0, 27, 0, 1, 0, 0, 0, 0, 0, 1, 0]' : 0.159824}
{'[1, 2, 0, 0, 0, 0, 0, 0, 27, 0, 1, 0, 0, 0, 0, 0, 1, 0]' : 0.161996}
{'[1, 2, 0, 0, 0, 0, 0, 0, 27, 0, 1, 0, 0, 0, 0, 0, 1, 0]' : 0.159358}
{'[1, 2, 0, 0, 0, 0, 0, 0, 27, 0, 1, 0, 0, 0, 0, 0, 1, 0]' : 0.156722}
{'[1, 2, 0, 0, 0, 0, 0, 0, 27, 0, 1, 0, 0, 0, 0, 0, 1, 0]' : 0.157388}
{'[1, 2, 0, 0, 0, 0, 0, 0, 27, 0, 1, 0, 0, 0, 0, 0, 1, 0]' : 0.15506}
{'[1, 2, 0, 0, 0, 0, 0, 0, 27, 0, 1, 0, 0, 0, 0, 0, 1, 0]' : 0.1555}
{'[1, 2, 0, 0, 0, 0, 0, 0, 27, 0, 1, 0, 0, 0, 0, 0, 1, 0]' : 0.159964}
{'[1, 2, 0, 0, 0, 0, 0, 0, 27, 0, 1, 0, 0, 0, 0, 0, 1, 0]' : 0.157514}
{'[1, 2, 0, 0, 0, 0, 0, 0, 27, 0, 1, 0, 0, 0, 0, 0, 1, 0]' : 0.157996}
{'[1, 2, 0, 0, 0, 0, 0, 0, 27, 0, 1, 0, 0, 0, 0, 0, 1, 0]' : 0.15642}
{'[1, 2, 0, 0, 0, 0, 0, 0, 27, 0, 1, 0, 0, 0, 0, 0, 1, 0]' : 0.155378}
{'[1, 2, 0, 0, 0, 0, 0, 0, 27, 0, 1, 0, 0, 0, 0, 0, 1, 0]' : 0.155517}
{'[1, 2, 0, 0, 0, 0, 0, 0, 27, 0, 1, 0, 0, 0, 0, 0, 1, 0]' : 0.15581}
{'[1, 2, 0, 0, 0, 0, 0, 0, 27, 0, 1, 0, 0, 0, 0, 0, 1, 0]' : 0.155301}
{'[1, 2, 0, 0, 0, 0, 0, 0, 27, 0, 1, 0, 0, 0, 0, 0, 1, 0]' : 0.155119}
{'[1, 2, 0, 0, 0, 0, 0, 0, 27, 0, 1, 0, 0, 0, 0, 0, 1, 0]' : 0.158094}
{'[1, 2, 0, 0, 0, 0, 0, 0, 27, 0, 1, 0, 0, 0, 0, 0, 1, 0]' : 0.158414}
{'[1, 2, 0, 0, 0, 0, 0, 0, 27, 0, 1, 0, 0, 0, 0, 0, 1, 0]' : 0.155465}
{'[1, 2, 0, 0, 0, 0, 0, 0, 27, 0, 1, 0, 0, 0, 0, 0, 1, 0]' : 0.15591}
{'[1, 2, 0, 0, 0, 0, 0, 0, 27, 0, 1, 0, 0, 0, 0, 0, 1, 0]' : 0.155269}
{'[1, 2, 0, 0, 0, 0, 0, 0, 27, 0, 1, 0, 0, 0, 0, 0, 1, 0]' : 0.155337}
{'[1, 2, 0, 0, 0, 0, 0, 0, 27, 0, 1, 0, 0, 0, 0, 0, 1, 0]' : 0.155549}
{'[1, 2, 0, 0, 0, 0, 0, 0, 27, 0, 1, 0, 0, 0, 0, 0, 1, 0]' : 0.155653}
{'[1, 2, 0, 0, 0, 0, 0, 0, 27, 0, 1, 0, 0, 0, 0, 0, 1, 0]' : 0.155362}
{'[1, 2, 0, 0, 0, 0, 0, 0, 27, 0, 1, 0, 0, 0, 0, 0, 1, 0]' : 0.155455}
{'[1, 2, 0, 0, 0, 0, 0, 0, 27, 0, 1, 0, 0, 0, 0, 0, 1, 0]' : 0.159635}

out:
 ["{'[1, 2, 0, 0, 0, 0, 0, 0, 27, 0, 1, 0, 0, 0, 0, 0, 1, 0]' : 0.184829}", "{'[1, 2, 0, 0, 0, 0, 0, 0, 27, 0, 1, 0, 0, 0, 0, 0, 1, 0]' : 0.184674}", "{'[1, 2, 0, 0, 0, 0, 0, 0, 27, 0, 1, 0, 0, 0, 0, 0, 1, 0]' : 0.183043}", "{'[1, 2, 0, 0, 0, 0, 0, 0, 27, 0, 1, 0, 0, 0, 0, 0, 1, 0]' : 0.159824}", "{'[1, 2, 0, 0, 0, 0, 0, 0, 27, 0, 1, 0, 0, 0, 0, 0, 1, 0]' : 0.161996}", "{'[1, 2, 0, 0, 0, 0, 0, 0, 27, 0, 1, 0, 0, 0, 0, 0, 1, 0]' : 0.159358}", "{'[1, 2, 0, 0, 0, 0, 0, 0, 27, 0, 1, 0, 0, 0, 0, 0, 1, 0]' : 0.156722}", "{'[1, 2, 0, 0, 0, 0, 0, 0, 27, 0, 1, 0, 0, 0, 0, 0, 1, 0]' : 0.157388}", "{'[1, 2, 0, 0, 0, 0, 0, 0, 27, 0, 1, 0, 0, 0, 0, 0, 1, 0]' : 0.15506}", "{'[1, 2, 0, 0, 0, 0, 0, 0, 27, 0, 1, 0, 0, 0, 0, 0, 1, 0]' : 0.1555}", "{'[1, 2, 0, 0, 0, 0, 0, 0, 27, 0, 1, 0, 0, 0, 0, 0, 1, 0]' : 0.159964}", "{'[1, 2, 0, 0, 0, 0, 0, 0, 27, 0, 1, 0, 0, 0, 0, 0, 1, 0]' : 0.157514}", "{'[1, 2, 0, 0, 0, 0, 0, 0, 27, 0, 1, 0, 0, 0, 0, 0, 1, 0]' : 0.157996}", "{'[1, 2, 0, 0, 0, 0, 0, 0, 27, 0, 1, 0, 0, 0, 0, 0, 1, 0]' : 0.15642}", "{'[1, 2, 0, 0, 0, 0, 0, 0, 27, 0, 1, 0, 0, 0, 0, 0, 1, 0]' : 0.155378}", "{'[1, 2, 0, 0, 0, 0, 0, 0, 27, 0, 1, 0, 0, 0, 0, 0, 1, 0]' : 0.155517}", "{'[1, 2, 0, 0, 0, 0, 0, 0, 27, 0, 1, 0, 0, 0, 0, 0, 1, 0]' : 0.15581}", "{'[1, 2, 0, 0, 0, 0, 0, 0, 27, 0, 1, 0, 0, 0, 0, 0, 1, 0]' : 0.155301}", "{'[1, 2, 0, 0, 0, 0, 0, 0, 27, 0, 1, 0, 0, 0, 0, 0, 1, 0]' : 0.155119}", "{'[1, 2, 0, 0, 0, 0, 0, 0, 27, 0, 1, 0, 0, 0, 0, 0, 1, 0]' : 0.158094}", "{'[1, 2, 0, 0, 0, 0, 0, 0, 27, 0, 1, 0, 0, 0, 0, 0, 1, 0]' : 0.158414}", "{'[1, 2, 0, 0, 0, 0, 0, 0, 27, 0, 1, 0, 0, 0, 0, 0, 1, 0]' : 0.155465}", "{'[1, 2, 0, 0, 0, 0, 0, 0, 27, 0, 1, 0, 0, 0, 0, 0, 1, 0]' : 0.15591}", "{'[1, 2, 0, 0, 0, 0, 0, 0, 27, 0, 1, 0, 0, 0, 0, 0, 1, 0]' : 0.155269}", "{'[1, 2, 0, 0, 0, 0, 0, 0, 27, 0, 1, 0, 0, 0, 0, 0, 1, 0]' : 0.155337}", "{'[1, 2, 0, 0, 0, 0, 0, 0, 27, 0, 1, 0, 0, 0, 0, 0, 1, 0]' : 0.155549}", "{'[1, 2, 0, 0, 0, 0, 0, 0, 27, 0, 1, 0, 0, 0, 0, 0, 1, 0]' : 0.155653}", "{'[1, 2, 0, 0, 0, 0, 0, 0, 27, 0, 1, 0, 0, 0, 0, 0, 1, 0]' : 0.155362}", "{'[1, 2, 0, 0, 0, 0, 0, 0, 27, 0, 1, 0, 0, 0, 0, 0, 1, 0]' : 0.155455}", "{'[1, 2, 0, 0, 0, 0, 0, 0, 27, 0, 1, 0, 0, 0, 0, 0, 1, 0]' : 0.159635}"]
returning from 'run': {'[1, 2, 0, 0, 0, 0, 0, 0, 27, 0, 1, 0, 0, 0, 0, 0, 1, 0]': ([0.184829, 0.184674, 0.183043, 0.159824, 0.161996, 0.159358, 0.156722, 0.157388, 0.15506, 0.1555, 0.159964, 0.157514, 0.157996, 0.15642, 0.155378, 0.155517, 0.15581, 0.155301, 0.155119, 0.158094, 0.158414, 0.155465, 0.15591, 0.155269, 0.155337, 0.155549, 0.155653, 0.155362, 0.155455, 0.159635], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 2, 0, 0, 0, 0, 0, 0, 27, 0, 1, 0, 0, 0, 0, 0, 1, 0]': ([0.184829, 0.184674, 0.183043, 0.159824, 0.161996, 0.159358, 0.156722, 0.157388, 0.15506, 0.1555, 0.159964, 0.157514, 0.157996, 0.15642, 0.155378, 0.155517, 0.15581, 0.155301, 0.155119, 0.158094, 0.158414, 0.155465, 0.15591, 0.155269, 0.155337, 0.155549, 0.155653, 0.155362, 0.155455, 0.159635], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		230
        Multiplications: 	66
        Divisions: 		0
        Logical: 		0
        Reads: 			509
        Writes: 		121
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest3.exe __orio_perftest3.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest3.exe  
Program Test Output: 
{'[0, 1, 2, 2, 1, 3, 0, 1, 29, 0, 15, 3, 0, 1, 1, 1, 1, 1]' : 0.243501}
{'[0, 1, 2, 2, 1, 3, 0, 1, 29, 0, 15, 3, 0, 1, 1, 1, 1, 1]' : 0.243297}
{'[0, 1, 2, 2, 1, 3, 0, 1, 29, 0, 15, 3, 0, 1, 1, 1, 1, 1]' : 0.232559}
{'[0, 1, 2, 2, 1, 3, 0, 1, 29, 0, 15, 3, 0, 1, 1, 1, 1, 1]' : 0.206481}
{'[0, 1, 2, 2, 1, 3, 0, 1, 29, 0, 15, 3, 0, 1, 1, 1, 1, 1]' : 0.206011}
{'[0, 1, 2, 2, 1, 3, 0, 1, 29, 0, 15, 3, 0, 1, 1, 1, 1, 1]' : 0.202954}
{'[0, 1, 2, 2, 1, 3, 0, 1, 29, 0, 15, 3, 0, 1, 1, 1, 1, 1]' : 0.207732}
{'[0, 1, 2, 2, 1, 3, 0, 1, 29, 0, 15, 3, 0, 1, 1, 1, 1, 1]' : 0.205759}
{'[0, 1, 2, 2, 1, 3, 0, 1, 29, 0, 15, 3, 0, 1, 1, 1, 1, 1]' : 0.207022}
{'[0, 1, 2, 2, 1, 3, 0, 1, 29, 0, 15, 3, 0, 1, 1, 1, 1, 1]' : 0.211441}
{'[0, 1, 2, 2, 1, 3, 0, 1, 29, 0, 15, 3, 0, 1, 1, 1, 1, 1]' : 0.209476}
{'[0, 1, 2, 2, 1, 3, 0, 1, 29, 0, 15, 3, 0, 1, 1, 1, 1, 1]' : 0.215192}
{'[0, 1, 2, 2, 1, 3, 0, 1, 29, 0, 15, 3, 0, 1, 1, 1, 1, 1]' : 0.210578}
{'[0, 1, 2, 2, 1, 3, 0, 1, 29, 0, 15, 3, 0, 1, 1, 1, 1, 1]' : 0.213343}
{'[0, 1, 2, 2, 1, 3, 0, 1, 29, 0, 15, 3, 0, 1, 1, 1, 1, 1]' : 0.215668}
{'[0, 1, 2, 2, 1, 3, 0, 1, 29, 0, 15, 3, 0, 1, 1, 1, 1, 1]' : 0.210037}
{'[0, 1, 2, 2, 1, 3, 0, 1, 29, 0, 15, 3, 0, 1, 1, 1, 1, 1]' : 0.208899}
{'[0, 1, 2, 2, 1, 3, 0, 1, 29, 0, 15, 3, 0, 1, 1, 1, 1, 1]' : 0.203657}
{'[0, 1, 2, 2, 1, 3, 0, 1, 29, 0, 15, 3, 0, 1, 1, 1, 1, 1]' : 0.209697}
{'[0, 1, 2, 2, 1, 3, 0, 1, 29, 0, 15, 3, 0, 1, 1, 1, 1, 1]' : 0.208111}
{'[0, 1, 2, 2, 1, 3, 0, 1, 29, 0, 15, 3, 0, 1, 1, 1, 1, 1]' : 0.205975}
{'[0, 1, 2, 2, 1, 3, 0, 1, 29, 0, 15, 3, 0, 1, 1, 1, 1, 1]' : 0.209493}
{'[0, 1, 2, 2, 1, 3, 0, 1, 29, 0, 15, 3, 0, 1, 1, 1, 1, 1]' : 0.209157}
{'[0, 1, 2, 2, 1, 3, 0, 1, 29, 0, 15, 3, 0, 1, 1, 1, 1, 1]' : 0.209362}
{'[0, 1, 2, 2, 1, 3, 0, 1, 29, 0, 15, 3, 0, 1, 1, 1, 1, 1]' : 0.209711}
{'[0, 1, 2, 2, 1, 3, 0, 1, 29, 0, 15, 3, 0, 1, 1, 1, 1, 1]' : 0.207917}
{'[0, 1, 2, 2, 1, 3, 0, 1, 29, 0, 15, 3, 0, 1, 1, 1, 1, 1]' : 0.206304}
{'[0, 1, 2, 2, 1, 3, 0, 1, 29, 0, 15, 3, 0, 1, 1, 1, 1, 1]' : 0.204999}
{'[0, 1, 2, 2, 1, 3, 0, 1, 29, 0, 15, 3, 0, 1, 1, 1, 1, 1]' : 0.211136}
{'[0, 1, 2, 2, 1, 3, 0, 1, 29, 0, 15, 3, 0, 1, 1, 1, 1, 1]' : 0.215008}

out:
 ["{'[0, 1, 2, 2, 1, 3, 0, 1, 29, 0, 15, 3, 0, 1, 1, 1, 1, 1]' : 0.243501}", "{'[0, 1, 2, 2, 1, 3, 0, 1, 29, 0, 15, 3, 0, 1, 1, 1, 1, 1]' : 0.243297}", "{'[0, 1, 2, 2, 1, 3, 0, 1, 29, 0, 15, 3, 0, 1, 1, 1, 1, 1]' : 0.232559}", "{'[0, 1, 2, 2, 1, 3, 0, 1, 29, 0, 15, 3, 0, 1, 1, 1, 1, 1]' : 0.206481}", "{'[0, 1, 2, 2, 1, 3, 0, 1, 29, 0, 15, 3, 0, 1, 1, 1, 1, 1]' : 0.206011}", "{'[0, 1, 2, 2, 1, 3, 0, 1, 29, 0, 15, 3, 0, 1, 1, 1, 1, 1]' : 0.202954}", "{'[0, 1, 2, 2, 1, 3, 0, 1, 29, 0, 15, 3, 0, 1, 1, 1, 1, 1]' : 0.207732}", "{'[0, 1, 2, 2, 1, 3, 0, 1, 29, 0, 15, 3, 0, 1, 1, 1, 1, 1]' : 0.205759}", "{'[0, 1, 2, 2, 1, 3, 0, 1, 29, 0, 15, 3, 0, 1, 1, 1, 1, 1]' : 0.207022}", "{'[0, 1, 2, 2, 1, 3, 0, 1, 29, 0, 15, 3, 0, 1, 1, 1, 1, 1]' : 0.211441}", "{'[0, 1, 2, 2, 1, 3, 0, 1, 29, 0, 15, 3, 0, 1, 1, 1, 1, 1]' : 0.209476}", "{'[0, 1, 2, 2, 1, 3, 0, 1, 29, 0, 15, 3, 0, 1, 1, 1, 1, 1]' : 0.215192}", "{'[0, 1, 2, 2, 1, 3, 0, 1, 29, 0, 15, 3, 0, 1, 1, 1, 1, 1]' : 0.210578}", "{'[0, 1, 2, 2, 1, 3, 0, 1, 29, 0, 15, 3, 0, 1, 1, 1, 1, 1]' : 0.213343}", "{'[0, 1, 2, 2, 1, 3, 0, 1, 29, 0, 15, 3, 0, 1, 1, 1, 1, 1]' : 0.215668}", "{'[0, 1, 2, 2, 1, 3, 0, 1, 29, 0, 15, 3, 0, 1, 1, 1, 1, 1]' : 0.210037}", "{'[0, 1, 2, 2, 1, 3, 0, 1, 29, 0, 15, 3, 0, 1, 1, 1, 1, 1]' : 0.208899}", "{'[0, 1, 2, 2, 1, 3, 0, 1, 29, 0, 15, 3, 0, 1, 1, 1, 1, 1]' : 0.203657}", "{'[0, 1, 2, 2, 1, 3, 0, 1, 29, 0, 15, 3, 0, 1, 1, 1, 1, 1]' : 0.209697}", "{'[0, 1, 2, 2, 1, 3, 0, 1, 29, 0, 15, 3, 0, 1, 1, 1, 1, 1]' : 0.208111}", "{'[0, 1, 2, 2, 1, 3, 0, 1, 29, 0, 15, 3, 0, 1, 1, 1, 1, 1]' : 0.205975}", "{'[0, 1, 2, 2, 1, 3, 0, 1, 29, 0, 15, 3, 0, 1, 1, 1, 1, 1]' : 0.209493}", "{'[0, 1, 2, 2, 1, 3, 0, 1, 29, 0, 15, 3, 0, 1, 1, 1, 1, 1]' : 0.209157}", "{'[0, 1, 2, 2, 1, 3, 0, 1, 29, 0, 15, 3, 0, 1, 1, 1, 1, 1]' : 0.209362}", "{'[0, 1, 2, 2, 1, 3, 0, 1, 29, 0, 15, 3, 0, 1, 1, 1, 1, 1]' : 0.209711}", "{'[0, 1, 2, 2, 1, 3, 0, 1, 29, 0, 15, 3, 0, 1, 1, 1, 1, 1]' : 0.207917}", "{'[0, 1, 2, 2, 1, 3, 0, 1, 29, 0, 15, 3, 0, 1, 1, 1, 1, 1]' : 0.206304}", "{'[0, 1, 2, 2, 1, 3, 0, 1, 29, 0, 15, 3, 0, 1, 1, 1, 1, 1]' : 0.204999}", "{'[0, 1, 2, 2, 1, 3, 0, 1, 29, 0, 15, 3, 0, 1, 1, 1, 1, 1]' : 0.211136}", "{'[0, 1, 2, 2, 1, 3, 0, 1, 29, 0, 15, 3, 0, 1, 1, 1, 1, 1]' : 0.215008}"]
returning from 'run': {'[0, 1, 2, 2, 1, 3, 0, 1, 29, 0, 15, 3, 0, 1, 1, 1, 1, 1]': ([0.243501, 0.243297, 0.232559, 0.206481, 0.206011, 0.202954, 0.207732, 0.205759, 0.207022, 0.211441, 0.209476, 0.215192, 0.210578, 0.213343, 0.215668, 0.210037, 0.208899, 0.203657, 0.209697, 0.208111, 0.205975, 0.209493, 0.209157, 0.209362, 0.209711, 0.207917, 0.206304, 0.204999, 0.211136, 0.215008], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 1, 2, 2, 1, 3, 0, 1, 29, 0, 15, 3, 0, 1, 1, 1, 1, 1]': ([0.243501, 0.243297, 0.232559, 0.206481, 0.206011, 0.202954, 0.207732, 0.205759, 0.207022, 0.211441, 0.209476, 0.215192, 0.210578, 0.213343, 0.215668, 0.210037, 0.208899, 0.203657, 0.209697, 0.208111, 0.205975, 0.209493, 0.209157, 0.209362, 0.209711, 0.207917, 0.206304, 0.204999, 0.211136, 0.215008], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		395
        Multiplications: 	154
        Divisions: 		0
        Logical: 		0
        Reads: 			925
        Writes: 		191
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest4.exe __orio_perftest4.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest4.exe  
Program Test Output: 
{'[3, 0, 6, 6, 6, 5, 0, 0, 2, 0, 29, 28, 0, 1, 1, 1, 1, 0]' : 0.178217}
{'[3, 0, 6, 6, 6, 5, 0, 0, 2, 0, 29, 28, 0, 1, 1, 1, 1, 0]' : 0.178195}
{'[3, 0, 6, 6, 6, 5, 0, 0, 2, 0, 29, 28, 0, 1, 1, 1, 1, 0]' : 0.176693}
{'[3, 0, 6, 6, 6, 5, 0, 0, 2, 0, 29, 28, 0, 1, 1, 1, 1, 0]' : 0.151022}
{'[3, 0, 6, 6, 6, 5, 0, 0, 2, 0, 29, 28, 0, 1, 1, 1, 1, 0]' : 0.151626}
{'[3, 0, 6, 6, 6, 5, 0, 0, 2, 0, 29, 28, 0, 1, 1, 1, 1, 0]' : 0.154755}
{'[3, 0, 6, 6, 6, 5, 0, 0, 2, 0, 29, 28, 0, 1, 1, 1, 1, 0]' : 0.154851}
{'[3, 0, 6, 6, 6, 5, 0, 0, 2, 0, 29, 28, 0, 1, 1, 1, 1, 0]' : 0.154806}
{'[3, 0, 6, 6, 6, 5, 0, 0, 2, 0, 29, 28, 0, 1, 1, 1, 1, 0]' : 0.154532}
{'[3, 0, 6, 6, 6, 5, 0, 0, 2, 0, 29, 28, 0, 1, 1, 1, 1, 0]' : 0.154584}
{'[3, 0, 6, 6, 6, 5, 0, 0, 2, 0, 29, 28, 0, 1, 1, 1, 1, 0]' : 0.154516}
{'[3, 0, 6, 6, 6, 5, 0, 0, 2, 0, 29, 28, 0, 1, 1, 1, 1, 0]' : 0.15475}
{'[3, 0, 6, 6, 6, 5, 0, 0, 2, 0, 29, 28, 0, 1, 1, 1, 1, 0]' : 0.154653}
{'[3, 0, 6, 6, 6, 5, 0, 0, 2, 0, 29, 28, 0, 1, 1, 1, 1, 0]' : 0.151581}
{'[3, 0, 6, 6, 6, 5, 0, 0, 2, 0, 29, 28, 0, 1, 1, 1, 1, 0]' : 0.154193}
{'[3, 0, 6, 6, 6, 5, 0, 0, 2, 0, 29, 28, 0, 1, 1, 1, 1, 0]' : 0.154621}
{'[3, 0, 6, 6, 6, 5, 0, 0, 2, 0, 29, 28, 0, 1, 1, 1, 1, 0]' : 0.15458}
{'[3, 0, 6, 6, 6, 5, 0, 0, 2, 0, 29, 28, 0, 1, 1, 1, 1, 0]' : 0.154786}
{'[3, 0, 6, 6, 6, 5, 0, 0, 2, 0, 29, 28, 0, 1, 1, 1, 1, 0]' : 0.154653}
{'[3, 0, 6, 6, 6, 5, 0, 0, 2, 0, 29, 28, 0, 1, 1, 1, 1, 0]' : 0.154661}
{'[3, 0, 6, 6, 6, 5, 0, 0, 2, 0, 29, 28, 0, 1, 1, 1, 1, 0]' : 0.154976}
{'[3, 0, 6, 6, 6, 5, 0, 0, 2, 0, 29, 28, 0, 1, 1, 1, 1, 0]' : 0.154959}
{'[3, 0, 6, 6, 6, 5, 0, 0, 2, 0, 29, 28, 0, 1, 1, 1, 1, 0]' : 0.154608}
{'[3, 0, 6, 6, 6, 5, 0, 0, 2, 0, 29, 28, 0, 1, 1, 1, 1, 0]' : 0.151778}
{'[3, 0, 6, 6, 6, 5, 0, 0, 2, 0, 29, 28, 0, 1, 1, 1, 1, 0]' : 0.154448}
{'[3, 0, 6, 6, 6, 5, 0, 0, 2, 0, 29, 28, 0, 1, 1, 1, 1, 0]' : 0.154647}
{'[3, 0, 6, 6, 6, 5, 0, 0, 2, 0, 29, 28, 0, 1, 1, 1, 1, 0]' : 0.154677}
{'[3, 0, 6, 6, 6, 5, 0, 0, 2, 0, 29, 28, 0, 1, 1, 1, 1, 0]' : 0.154869}
{'[3, 0, 6, 6, 6, 5, 0, 0, 2, 0, 29, 28, 0, 1, 1, 1, 1, 0]' : 0.154911}
{'[3, 0, 6, 6, 6, 5, 0, 0, 2, 0, 29, 28, 0, 1, 1, 1, 1, 0]' : 0.154635}

out:
 ["{'[3, 0, 6, 6, 6, 5, 0, 0, 2, 0, 29, 28, 0, 1, 1, 1, 1, 0]' : 0.178217}", "{'[3, 0, 6, 6, 6, 5, 0, 0, 2, 0, 29, 28, 0, 1, 1, 1, 1, 0]' : 0.178195}", "{'[3, 0, 6, 6, 6, 5, 0, 0, 2, 0, 29, 28, 0, 1, 1, 1, 1, 0]' : 0.176693}", "{'[3, 0, 6, 6, 6, 5, 0, 0, 2, 0, 29, 28, 0, 1, 1, 1, 1, 0]' : 0.151022}", "{'[3, 0, 6, 6, 6, 5, 0, 0, 2, 0, 29, 28, 0, 1, 1, 1, 1, 0]' : 0.151626}", "{'[3, 0, 6, 6, 6, 5, 0, 0, 2, 0, 29, 28, 0, 1, 1, 1, 1, 0]' : 0.154755}", "{'[3, 0, 6, 6, 6, 5, 0, 0, 2, 0, 29, 28, 0, 1, 1, 1, 1, 0]' : 0.154851}", "{'[3, 0, 6, 6, 6, 5, 0, 0, 2, 0, 29, 28, 0, 1, 1, 1, 1, 0]' : 0.154806}", "{'[3, 0, 6, 6, 6, 5, 0, 0, 2, 0, 29, 28, 0, 1, 1, 1, 1, 0]' : 0.154532}", "{'[3, 0, 6, 6, 6, 5, 0, 0, 2, 0, 29, 28, 0, 1, 1, 1, 1, 0]' : 0.154584}", "{'[3, 0, 6, 6, 6, 5, 0, 0, 2, 0, 29, 28, 0, 1, 1, 1, 1, 0]' : 0.154516}", "{'[3, 0, 6, 6, 6, 5, 0, 0, 2, 0, 29, 28, 0, 1, 1, 1, 1, 0]' : 0.15475}", "{'[3, 0, 6, 6, 6, 5, 0, 0, 2, 0, 29, 28, 0, 1, 1, 1, 1, 0]' : 0.154653}", "{'[3, 0, 6, 6, 6, 5, 0, 0, 2, 0, 29, 28, 0, 1, 1, 1, 1, 0]' : 0.151581}", "{'[3, 0, 6, 6, 6, 5, 0, 0, 2, 0, 29, 28, 0, 1, 1, 1, 1, 0]' : 0.154193}", "{'[3, 0, 6, 6, 6, 5, 0, 0, 2, 0, 29, 28, 0, 1, 1, 1, 1, 0]' : 0.154621}", "{'[3, 0, 6, 6, 6, 5, 0, 0, 2, 0, 29, 28, 0, 1, 1, 1, 1, 0]' : 0.15458}", "{'[3, 0, 6, 6, 6, 5, 0, 0, 2, 0, 29, 28, 0, 1, 1, 1, 1, 0]' : 0.154786}", "{'[3, 0, 6, 6, 6, 5, 0, 0, 2, 0, 29, 28, 0, 1, 1, 1, 1, 0]' : 0.154653}", "{'[3, 0, 6, 6, 6, 5, 0, 0, 2, 0, 29, 28, 0, 1, 1, 1, 1, 0]' : 0.154661}", "{'[3, 0, 6, 6, 6, 5, 0, 0, 2, 0, 29, 28, 0, 1, 1, 1, 1, 0]' : 0.154976}", "{'[3, 0, 6, 6, 6, 5, 0, 0, 2, 0, 29, 28, 0, 1, 1, 1, 1, 0]' : 0.154959}", "{'[3, 0, 6, 6, 6, 5, 0, 0, 2, 0, 29, 28, 0, 1, 1, 1, 1, 0]' : 0.154608}", "{'[3, 0, 6, 6, 6, 5, 0, 0, 2, 0, 29, 28, 0, 1, 1, 1, 1, 0]' : 0.151778}", "{'[3, 0, 6, 6, 6, 5, 0, 0, 2, 0, 29, 28, 0, 1, 1, 1, 1, 0]' : 0.154448}", "{'[3, 0, 6, 6, 6, 5, 0, 0, 2, 0, 29, 28, 0, 1, 1, 1, 1, 0]' : 0.154647}", "{'[3, 0, 6, 6, 6, 5, 0, 0, 2, 0, 29, 28, 0, 1, 1, 1, 1, 0]' : 0.154677}", "{'[3, 0, 6, 6, 6, 5, 0, 0, 2, 0, 29, 28, 0, 1, 1, 1, 1, 0]' : 0.154869}", "{'[3, 0, 6, 6, 6, 5, 0, 0, 2, 0, 29, 28, 0, 1, 1, 1, 1, 0]' : 0.154911}", "{'[3, 0, 6, 6, 6, 5, 0, 0, 2, 0, 29, 28, 0, 1, 1, 1, 1, 0]' : 0.154635}"]
returning from 'run': {'[3, 0, 6, 6, 6, 5, 0, 0, 2, 0, 29, 28, 0, 1, 1, 1, 1, 0]': ([0.178217, 0.178195, 0.176693, 0.151022, 0.151626, 0.154755, 0.154851, 0.154806, 0.154532, 0.154584, 0.154516, 0.15475, 0.154653, 0.151581, 0.154193, 0.154621, 0.15458, 0.154786, 0.154653, 0.154661, 0.154976, 0.154959, 0.154608, 0.151778, 0.154448, 0.154647, 0.154677, 0.154869, 0.154911, 0.154635], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 0, 6, 6, 6, 5, 0, 0, 2, 0, 29, 28, 0, 1, 1, 1, 1, 0]': ([0.178217, 0.178195, 0.176693, 0.151022, 0.151626, 0.154755, 0.154851, 0.154806, 0.154532, 0.154584, 0.154516, 0.15475, 0.154653, 0.151581, 0.154193, 0.154621, 0.15458, 0.154786, 0.154653, 0.154661, 0.154976, 0.154959, 0.154608, 0.151778, 0.154448, 0.154647, 0.154677, 0.154869, 0.154911, 0.154635], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = iii
Code stats:
        Number of loops: 	133
        Max loop nest depth: 	4
        Additions: 		10205
        Multiplications: 	2700
        Divisions: 		0
        Logical: 		0
        Reads: 			15391
        Writes: 		1710
        Comparisons:		133
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest5.exe __orio_perftest5.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest5.exe  
Program Test Output: 
{'[4, 6, 6, 2, 0, 0, 0, 1, 2, 28, 27, 0, 0, 1, 1, 0, 0, 0]' : 0.207503}
{'[4, 6, 6, 2, 0, 0, 0, 1, 2, 28, 27, 0, 0, 1, 1, 0, 0, 0]' : 0.206577}
{'[4, 6, 6, 2, 0, 0, 0, 1, 2, 28, 27, 0, 0, 1, 1, 0, 0, 0]' : 0.206466}
{'[4, 6, 6, 2, 0, 0, 0, 1, 2, 28, 27, 0, 0, 1, 1, 0, 0, 0]' : 0.205955}
{'[4, 6, 6, 2, 0, 0, 0, 1, 2, 28, 27, 0, 0, 1, 1, 0, 0, 0]' : 0.206888}
{'[4, 6, 6, 2, 0, 0, 0, 1, 2, 28, 27, 0, 0, 1, 1, 0, 0, 0]' : 0.20828}
{'[4, 6, 6, 2, 0, 0, 0, 1, 2, 28, 27, 0, 0, 1, 1, 0, 0, 0]' : 0.20623}
{'[4, 6, 6, 2, 0, 0, 0, 1, 2, 28, 27, 0, 0, 1, 1, 0, 0, 0]' : 0.210046}
{'[4, 6, 6, 2, 0, 0, 0, 1, 2, 28, 27, 0, 0, 1, 1, 0, 0, 0]' : 0.208747}
{'[4, 6, 6, 2, 0, 0, 0, 1, 2, 28, 27, 0, 0, 1, 1, 0, 0, 0]' : 0.207589}
{'[4, 6, 6, 2, 0, 0, 0, 1, 2, 28, 27, 0, 0, 1, 1, 0, 0, 0]' : 0.209582}
{'[4, 6, 6, 2, 0, 0, 0, 1, 2, 28, 27, 0, 0, 1, 1, 0, 0, 0]' : 0.206981}
{'[4, 6, 6, 2, 0, 0, 0, 1, 2, 28, 27, 0, 0, 1, 1, 0, 0, 0]' : 0.210075}
{'[4, 6, 6, 2, 0, 0, 0, 1, 2, 28, 27, 0, 0, 1, 1, 0, 0, 0]' : 0.209143}
{'[4, 6, 6, 2, 0, 0, 0, 1, 2, 28, 27, 0, 0, 1, 1, 0, 0, 0]' : 0.209454}
{'[4, 6, 6, 2, 0, 0, 0, 1, 2, 28, 27, 0, 0, 1, 1, 0, 0, 0]' : 0.210393}
{'[4, 6, 6, 2, 0, 0, 0, 1, 2, 28, 27, 0, 0, 1, 1, 0, 0, 0]' : 0.207149}
{'[4, 6, 6, 2, 0, 0, 0, 1, 2, 28, 27, 0, 0, 1, 1, 0, 0, 0]' : 0.210652}
{'[4, 6, 6, 2, 0, 0, 0, 1, 2, 28, 27, 0, 0, 1, 1, 0, 0, 0]' : 0.210801}
{'[4, 6, 6, 2, 0, 0, 0, 1, 2, 28, 27, 0, 0, 1, 1, 0, 0, 0]' : 0.210409}
{'[4, 6, 6, 2, 0, 0, 0, 1, 2, 28, 27, 0, 0, 1, 1, 0, 0, 0]' : 0.206558}
{'[4, 6, 6, 2, 0, 0, 0, 1, 2, 28, 27, 0, 0, 1, 1, 0, 0, 0]' : 0.207956}
{'[4, 6, 6, 2, 0, 0, 0, 1, 2, 28, 27, 0, 0, 1, 1, 0, 0, 0]' : 0.20661}
{'[4, 6, 6, 2, 0, 0, 0, 1, 2, 28, 27, 0, 0, 1, 1, 0, 0, 0]' : 0.206493}
{'[4, 6, 6, 2, 0, 0, 0, 1, 2, 28, 27, 0, 0, 1, 1, 0, 0, 0]' : 0.209399}
{'[4, 6, 6, 2, 0, 0, 0, 1, 2, 28, 27, 0, 0, 1, 1, 0, 0, 0]' : 0.205949}
{'[4, 6, 6, 2, 0, 0, 0, 1, 2, 28, 27, 0, 0, 1, 1, 0, 0, 0]' : 0.207405}
{'[4, 6, 6, 2, 0, 0, 0, 1, 2, 28, 27, 0, 0, 1, 1, 0, 0, 0]' : 0.206635}
{'[4, 6, 6, 2, 0, 0, 0, 1, 2, 28, 27, 0, 0, 1, 1, 0, 0, 0]' : 0.206677}
{'[4, 6, 6, 2, 0, 0, 0, 1, 2, 28, 27, 0, 0, 1, 1, 0, 0, 0]' : 0.210346}

out:
 ["{'[4, 6, 6, 2, 0, 0, 0, 1, 2, 28, 27, 0, 0, 1, 1, 0, 0, 0]' : 0.207503}", "{'[4, 6, 6, 2, 0, 0, 0, 1, 2, 28, 27, 0, 0, 1, 1, 0, 0, 0]' : 0.206577}", "{'[4, 6, 6, 2, 0, 0, 0, 1, 2, 28, 27, 0, 0, 1, 1, 0, 0, 0]' : 0.206466}", "{'[4, 6, 6, 2, 0, 0, 0, 1, 2, 28, 27, 0, 0, 1, 1, 0, 0, 0]' : 0.205955}", "{'[4, 6, 6, 2, 0, 0, 0, 1, 2, 28, 27, 0, 0, 1, 1, 0, 0, 0]' : 0.206888}", "{'[4, 6, 6, 2, 0, 0, 0, 1, 2, 28, 27, 0, 0, 1, 1, 0, 0, 0]' : 0.20828}", "{'[4, 6, 6, 2, 0, 0, 0, 1, 2, 28, 27, 0, 0, 1, 1, 0, 0, 0]' : 0.20623}", "{'[4, 6, 6, 2, 0, 0, 0, 1, 2, 28, 27, 0, 0, 1, 1, 0, 0, 0]' : 0.210046}", "{'[4, 6, 6, 2, 0, 0, 0, 1, 2, 28, 27, 0, 0, 1, 1, 0, 0, 0]' : 0.208747}", "{'[4, 6, 6, 2, 0, 0, 0, 1, 2, 28, 27, 0, 0, 1, 1, 0, 0, 0]' : 0.207589}", "{'[4, 6, 6, 2, 0, 0, 0, 1, 2, 28, 27, 0, 0, 1, 1, 0, 0, 0]' : 0.209582}", "{'[4, 6, 6, 2, 0, 0, 0, 1, 2, 28, 27, 0, 0, 1, 1, 0, 0, 0]' : 0.206981}", "{'[4, 6, 6, 2, 0, 0, 0, 1, 2, 28, 27, 0, 0, 1, 1, 0, 0, 0]' : 0.210075}", "{'[4, 6, 6, 2, 0, 0, 0, 1, 2, 28, 27, 0, 0, 1, 1, 0, 0, 0]' : 0.209143}", "{'[4, 6, 6, 2, 0, 0, 0, 1, 2, 28, 27, 0, 0, 1, 1, 0, 0, 0]' : 0.209454}", "{'[4, 6, 6, 2, 0, 0, 0, 1, 2, 28, 27, 0, 0, 1, 1, 0, 0, 0]' : 0.210393}", "{'[4, 6, 6, 2, 0, 0, 0, 1, 2, 28, 27, 0, 0, 1, 1, 0, 0, 0]' : 0.207149}", "{'[4, 6, 6, 2, 0, 0, 0, 1, 2, 28, 27, 0, 0, 1, 1, 0, 0, 0]' : 0.210652}", "{'[4, 6, 6, 2, 0, 0, 0, 1, 2, 28, 27, 0, 0, 1, 1, 0, 0, 0]' : 0.210801}", "{'[4, 6, 6, 2, 0, 0, 0, 1, 2, 28, 27, 0, 0, 1, 1, 0, 0, 0]' : 0.210409}", "{'[4, 6, 6, 2, 0, 0, 0, 1, 2, 28, 27, 0, 0, 1, 1, 0, 0, 0]' : 0.206558}", "{'[4, 6, 6, 2, 0, 0, 0, 1, 2, 28, 27, 0, 0, 1, 1, 0, 0, 0]' : 0.207956}", "{'[4, 6, 6, 2, 0, 0, 0, 1, 2, 28, 27, 0, 0, 1, 1, 0, 0, 0]' : 0.20661}", "{'[4, 6, 6, 2, 0, 0, 0, 1, 2, 28, 27, 0, 0, 1, 1, 0, 0, 0]' : 0.206493}", "{'[4, 6, 6, 2, 0, 0, 0, 1, 2, 28, 27, 0, 0, 1, 1, 0, 0, 0]' : 0.209399}", "{'[4, 6, 6, 2, 0, 0, 0, 1, 2, 28, 27, 0, 0, 1, 1, 0, 0, 0]' : 0.205949}", "{'[4, 6, 6, 2, 0, 0, 0, 1, 2, 28, 27, 0, 0, 1, 1, 0, 0, 0]' : 0.207405}", "{'[4, 6, 6, 2, 0, 0, 0, 1, 2, 28, 27, 0, 0, 1, 1, 0, 0, 0]' : 0.206635}", "{'[4, 6, 6, 2, 0, 0, 0, 1, 2, 28, 27, 0, 0, 1, 1, 0, 0, 0]' : 0.206677}", "{'[4, 6, 6, 2, 0, 0, 0, 1, 2, 28, 27, 0, 0, 1, 1, 0, 0, 0]' : 0.210346}"]
returning from 'run': {'[4, 6, 6, 2, 0, 0, 0, 1, 2, 28, 27, 0, 0, 1, 1, 0, 0, 0]': ([0.207503, 0.206577, 0.206466, 0.205955, 0.206888, 0.20828, 0.20623, 0.210046, 0.208747, 0.207589, 0.209582, 0.206981, 0.210075, 0.209143, 0.209454, 0.210393, 0.207149, 0.210652, 0.210801, 0.210409, 0.206558, 0.207956, 0.20661, 0.206493, 0.209399, 0.205949, 0.207405, 0.206635, 0.206677, 0.210346], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 6, 6, 2, 0, 0, 0, 1, 2, 28, 27, 0, 0, 1, 1, 0, 0, 0]': ([0.207503, 0.206577, 0.206466, 0.205955, 0.206888, 0.20828, 0.20623, 0.210046, 0.208747, 0.207589, 0.209582, 0.206981, 0.210075, 0.209143, 0.209454, 0.210393, 0.207149, 0.210652, 0.210801, 0.210409, 0.206558, 0.207956, 0.20661, 0.206493, 0.209399, 0.205949, 0.207405, 0.206635, 0.206677, 0.210346], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	6
        Additions: 		266
        Multiplications: 	72
        Divisions: 		0
        Logical: 		0
        Reads: 			594
        Writes: 		108
        Comparisons:		15
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest6.exe __orio_perftest6.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest6.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest6.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest6.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest6.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	65
        Max loop nest depth: 	4
        Additions: 		4751
        Multiplications: 	2150
        Divisions: 		0
        Logical: 		0
        Reads: 			9017
        Writes: 		1497
        Comparisons:		65
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest7.exe __orio_perftest7.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest7.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest7.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest7.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest7.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	136
        Max loop nest depth: 	6
        Additions: 		9020
        Multiplications: 	1920
        Divisions: 		0
        Logical: 		0
        Reads: 			13094
        Writes: 		1427
        Comparisons:		136
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest8.exe __orio_perftest8.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest8.exe  
Program Test Output: 
{'[2, 6, 1, 6, 6, 1, 0, 1, 8, 28, 0, 29, 0, 0, 0, 0, 1, 1]' : 0.305418}
{'[2, 6, 1, 6, 6, 1, 0, 1, 8, 28, 0, 29, 0, 0, 0, 0, 1, 1]' : 0.296103}
{'[2, 6, 1, 6, 6, 1, 0, 1, 8, 28, 0, 29, 0, 0, 0, 0, 1, 1]' : 0.270387}
{'[2, 6, 1, 6, 6, 1, 0, 1, 8, 28, 0, 29, 0, 0, 0, 0, 1, 1]' : 0.269621}
{'[2, 6, 1, 6, 6, 1, 0, 1, 8, 28, 0, 29, 0, 0, 0, 0, 1, 1]' : 0.269694}
{'[2, 6, 1, 6, 6, 1, 0, 1, 8, 28, 0, 29, 0, 0, 0, 0, 1, 1]' : 0.270114}
{'[2, 6, 1, 6, 6, 1, 0, 1, 8, 28, 0, 29, 0, 0, 0, 0, 1, 1]' : 0.269465}
{'[2, 6, 1, 6, 6, 1, 0, 1, 8, 28, 0, 29, 0, 0, 0, 0, 1, 1]' : 0.269657}
{'[2, 6, 1, 6, 6, 1, 0, 1, 8, 28, 0, 29, 0, 0, 0, 0, 1, 1]' : 0.270066}
{'[2, 6, 1, 6, 6, 1, 0, 1, 8, 28, 0, 29, 0, 0, 0, 0, 1, 1]' : 0.273501}
{'[2, 6, 1, 6, 6, 1, 0, 1, 8, 28, 0, 29, 0, 0, 0, 0, 1, 1]' : 0.276168}
{'[2, 6, 1, 6, 6, 1, 0, 1, 8, 28, 0, 29, 0, 0, 0, 0, 1, 1]' : 0.276125}
{'[2, 6, 1, 6, 6, 1, 0, 1, 8, 28, 0, 29, 0, 0, 0, 0, 1, 1]' : 0.277021}
{'[2, 6, 1, 6, 6, 1, 0, 1, 8, 28, 0, 29, 0, 0, 0, 0, 1, 1]' : 0.276294}
{'[2, 6, 1, 6, 6, 1, 0, 1, 8, 28, 0, 29, 0, 0, 0, 0, 1, 1]' : 0.275953}
{'[2, 6, 1, 6, 6, 1, 0, 1, 8, 28, 0, 29, 0, 0, 0, 0, 1, 1]' : 0.276068}
{'[2, 6, 1, 6, 6, 1, 0, 1, 8, 28, 0, 29, 0, 0, 0, 0, 1, 1]' : 0.276075}
{'[2, 6, 1, 6, 6, 1, 0, 1, 8, 28, 0, 29, 0, 0, 0, 0, 1, 1]' : 0.276499}
{'[2, 6, 1, 6, 6, 1, 0, 1, 8, 28, 0, 29, 0, 0, 0, 0, 1, 1]' : 0.275769}
{'[2, 6, 1, 6, 6, 1, 0, 1, 8, 28, 0, 29, 0, 0, 0, 0, 1, 1]' : 0.276163}
{'[2, 6, 1, 6, 6, 1, 0, 1, 8, 28, 0, 29, 0, 0, 0, 0, 1, 1]' : 0.276824}
{'[2, 6, 1, 6, 6, 1, 0, 1, 8, 28, 0, 29, 0, 0, 0, 0, 1, 1]' : 0.275957}
{'[2, 6, 1, 6, 6, 1, 0, 1, 8, 28, 0, 29, 0, 0, 0, 0, 1, 1]' : 0.276056}
{'[2, 6, 1, 6, 6, 1, 0, 1, 8, 28, 0, 29, 0, 0, 0, 0, 1, 1]' : 0.275989}
{'[2, 6, 1, 6, 6, 1, 0, 1, 8, 28, 0, 29, 0, 0, 0, 0, 1, 1]' : 0.276482}
{'[2, 6, 1, 6, 6, 1, 0, 1, 8, 28, 0, 29, 0, 0, 0, 0, 1, 1]' : 0.272688}
{'[2, 6, 1, 6, 6, 1, 0, 1, 8, 28, 0, 29, 0, 0, 0, 0, 1, 1]' : 0.276467}
{'[2, 6, 1, 6, 6, 1, 0, 1, 8, 28, 0, 29, 0, 0, 0, 0, 1, 1]' : 0.276216}
{'[2, 6, 1, 6, 6, 1, 0, 1, 8, 28, 0, 29, 0, 0, 0, 0, 1, 1]' : 0.27614}
{'[2, 6, 1, 6, 6, 1, 0, 1, 8, 28, 0, 29, 0, 0, 0, 0, 1, 1]' : 0.276241}

out:
 ["{'[2, 6, 1, 6, 6, 1, 0, 1, 8, 28, 0, 29, 0, 0, 0, 0, 1, 1]' : 0.305418}", "{'[2, 6, 1, 6, 6, 1, 0, 1, 8, 28, 0, 29, 0, 0, 0, 0, 1, 1]' : 0.296103}", "{'[2, 6, 1, 6, 6, 1, 0, 1, 8, 28, 0, 29, 0, 0, 0, 0, 1, 1]' : 0.270387}", "{'[2, 6, 1, 6, 6, 1, 0, 1, 8, 28, 0, 29, 0, 0, 0, 0, 1, 1]' : 0.269621}", "{'[2, 6, 1, 6, 6, 1, 0, 1, 8, 28, 0, 29, 0, 0, 0, 0, 1, 1]' : 0.269694}", "{'[2, 6, 1, 6, 6, 1, 0, 1, 8, 28, 0, 29, 0, 0, 0, 0, 1, 1]' : 0.270114}", "{'[2, 6, 1, 6, 6, 1, 0, 1, 8, 28, 0, 29, 0, 0, 0, 0, 1, 1]' : 0.269465}", "{'[2, 6, 1, 6, 6, 1, 0, 1, 8, 28, 0, 29, 0, 0, 0, 0, 1, 1]' : 0.269657}", "{'[2, 6, 1, 6, 6, 1, 0, 1, 8, 28, 0, 29, 0, 0, 0, 0, 1, 1]' : 0.270066}", "{'[2, 6, 1, 6, 6, 1, 0, 1, 8, 28, 0, 29, 0, 0, 0, 0, 1, 1]' : 0.273501}", "{'[2, 6, 1, 6, 6, 1, 0, 1, 8, 28, 0, 29, 0, 0, 0, 0, 1, 1]' : 0.276168}", "{'[2, 6, 1, 6, 6, 1, 0, 1, 8, 28, 0, 29, 0, 0, 0, 0, 1, 1]' : 0.276125}", "{'[2, 6, 1, 6, 6, 1, 0, 1, 8, 28, 0, 29, 0, 0, 0, 0, 1, 1]' : 0.277021}", "{'[2, 6, 1, 6, 6, 1, 0, 1, 8, 28, 0, 29, 0, 0, 0, 0, 1, 1]' : 0.276294}", "{'[2, 6, 1, 6, 6, 1, 0, 1, 8, 28, 0, 29, 0, 0, 0, 0, 1, 1]' : 0.275953}", "{'[2, 6, 1, 6, 6, 1, 0, 1, 8, 28, 0, 29, 0, 0, 0, 0, 1, 1]' : 0.276068}", "{'[2, 6, 1, 6, 6, 1, 0, 1, 8, 28, 0, 29, 0, 0, 0, 0, 1, 1]' : 0.276075}", "{'[2, 6, 1, 6, 6, 1, 0, 1, 8, 28, 0, 29, 0, 0, 0, 0, 1, 1]' : 0.276499}", "{'[2, 6, 1, 6, 6, 1, 0, 1, 8, 28, 0, 29, 0, 0, 0, 0, 1, 1]' : 0.275769}", "{'[2, 6, 1, 6, 6, 1, 0, 1, 8, 28, 0, 29, 0, 0, 0, 0, 1, 1]' : 0.276163}", "{'[2, 6, 1, 6, 6, 1, 0, 1, 8, 28, 0, 29, 0, 0, 0, 0, 1, 1]' : 0.276824}", "{'[2, 6, 1, 6, 6, 1, 0, 1, 8, 28, 0, 29, 0, 0, 0, 0, 1, 1]' : 0.275957}", "{'[2, 6, 1, 6, 6, 1, 0, 1, 8, 28, 0, 29, 0, 0, 0, 0, 1, 1]' : 0.276056}", "{'[2, 6, 1, 6, 6, 1, 0, 1, 8, 28, 0, 29, 0, 0, 0, 0, 1, 1]' : 0.275989}", "{'[2, 6, 1, 6, 6, 1, 0, 1, 8, 28, 0, 29, 0, 0, 0, 0, 1, 1]' : 0.276482}", "{'[2, 6, 1, 6, 6, 1, 0, 1, 8, 28, 0, 29, 0, 0, 0, 0, 1, 1]' : 0.272688}", "{'[2, 6, 1, 6, 6, 1, 0, 1, 8, 28, 0, 29, 0, 0, 0, 0, 1, 1]' : 0.276467}", "{'[2, 6, 1, 6, 6, 1, 0, 1, 8, 28, 0, 29, 0, 0, 0, 0, 1, 1]' : 0.276216}", "{'[2, 6, 1, 6, 6, 1, 0, 1, 8, 28, 0, 29, 0, 0, 0, 0, 1, 1]' : 0.27614}", "{'[2, 6, 1, 6, 6, 1, 0, 1, 8, 28, 0, 29, 0, 0, 0, 0, 1, 1]' : 0.276241}"]
returning from 'run': {'[2, 6, 1, 6, 6, 1, 0, 1, 8, 28, 0, 29, 0, 0, 0, 0, 1, 1]': ([0.305418, 0.296103, 0.270387, 0.269621, 0.269694, 0.270114, 0.269465, 0.269657, 0.270066, 0.273501, 0.276168, 0.276125, 0.277021, 0.276294, 0.275953, 0.276068, 0.276075, 0.276499, 0.275769, 0.276163, 0.276824, 0.275957, 0.276056, 0.275989, 0.276482, 0.272688, 0.276467, 0.276216, 0.27614, 0.276241], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 6, 1, 6, 6, 1, 0, 1, 8, 28, 0, 29, 0, 0, 0, 0, 1, 1]': ([0.305418, 0.296103, 0.270387, 0.269621, 0.269694, 0.270114, 0.269465, 0.269657, 0.270066, 0.273501, 0.276168, 0.276125, 0.277021, 0.276294, 0.275953, 0.276068, 0.276075, 0.276499, 0.275769, 0.276163, 0.276824, 0.275957, 0.276056, 0.275989, 0.276482, 0.272688, 0.276467, 0.276216, 0.27614, 0.276241], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	75
        Max loop nest depth: 	6
        Additions: 		5178
        Multiplications: 	1344
        Divisions: 		0
        Logical: 		0
        Reads: 			8099
        Writes: 		918
        Comparisons:		75
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest9.exe __orio_perftest9.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest9.exe  
Program Test Output: 
{'[2, 1, 1, 6, 0, 2, 0, 1, 16, 22, 11, 0, 1, 0, 1, 0, 1, 0]' : 0.117524}
{'[2, 1, 1, 6, 0, 2, 0, 1, 16, 22, 11, 0, 1, 0, 1, 0, 1, 0]' : 0.118132}
{'[2, 1, 1, 6, 0, 2, 0, 1, 16, 22, 11, 0, 1, 0, 1, 0, 1, 0]' : 0.11871}
{'[2, 1, 1, 6, 0, 2, 0, 1, 16, 22, 11, 0, 1, 0, 1, 0, 1, 0]' : 0.121779}
{'[2, 1, 1, 6, 0, 2, 0, 1, 16, 22, 11, 0, 1, 0, 1, 0, 1, 0]' : 0.11895}
{'[2, 1, 1, 6, 0, 2, 0, 1, 16, 22, 11, 0, 1, 0, 1, 0, 1, 0]' : 0.118293}
{'[2, 1, 1, 6, 0, 2, 0, 1, 16, 22, 11, 0, 1, 0, 1, 0, 1, 0]' : 0.117989}
{'[2, 1, 1, 6, 0, 2, 0, 1, 16, 22, 11, 0, 1, 0, 1, 0, 1, 0]' : 0.122776}
{'[2, 1, 1, 6, 0, 2, 0, 1, 16, 22, 11, 0, 1, 0, 1, 0, 1, 0]' : 0.121644}
{'[2, 1, 1, 6, 0, 2, 0, 1, 16, 22, 11, 0, 1, 0, 1, 0, 1, 0]' : 0.122013}
{'[2, 1, 1, 6, 0, 2, 0, 1, 16, 22, 11, 0, 1, 0, 1, 0, 1, 0]' : 0.121598}
{'[2, 1, 1, 6, 0, 2, 0, 1, 16, 22, 11, 0, 1, 0, 1, 0, 1, 0]' : 0.121802}
{'[2, 1, 1, 6, 0, 2, 0, 1, 16, 22, 11, 0, 1, 0, 1, 0, 1, 0]' : 0.121696}
{'[2, 1, 1, 6, 0, 2, 0, 1, 16, 22, 11, 0, 1, 0, 1, 0, 1, 0]' : 0.121988}
{'[2, 1, 1, 6, 0, 2, 0, 1, 16, 22, 11, 0, 1, 0, 1, 0, 1, 0]' : 0.12185}
{'[2, 1, 1, 6, 0, 2, 0, 1, 16, 22, 11, 0, 1, 0, 1, 0, 1, 0]' : 0.124078}
{'[2, 1, 1, 6, 0, 2, 0, 1, 16, 22, 11, 0, 1, 0, 1, 0, 1, 0]' : 0.125036}
{'[2, 1, 1, 6, 0, 2, 0, 1, 16, 22, 11, 0, 1, 0, 1, 0, 1, 0]' : 0.125397}
{'[2, 1, 1, 6, 0, 2, 0, 1, 16, 22, 11, 0, 1, 0, 1, 0, 1, 0]' : 0.124944}
{'[2, 1, 1, 6, 0, 2, 0, 1, 16, 22, 11, 0, 1, 0, 1, 0, 1, 0]' : 0.124934}
{'[2, 1, 1, 6, 0, 2, 0, 1, 16, 22, 11, 0, 1, 0, 1, 0, 1, 0]' : 0.124907}
{'[2, 1, 1, 6, 0, 2, 0, 1, 16, 22, 11, 0, 1, 0, 1, 0, 1, 0]' : 0.125323}
{'[2, 1, 1, 6, 0, 2, 0, 1, 16, 22, 11, 0, 1, 0, 1, 0, 1, 0]' : 0.125029}
{'[2, 1, 1, 6, 0, 2, 0, 1, 16, 22, 11, 0, 1, 0, 1, 0, 1, 0]' : 0.124939}
{'[2, 1, 1, 6, 0, 2, 0, 1, 16, 22, 11, 0, 1, 0, 1, 0, 1, 0]' : 0.124946}
{'[2, 1, 1, 6, 0, 2, 0, 1, 16, 22, 11, 0, 1, 0, 1, 0, 1, 0]' : 0.125363}
{'[2, 1, 1, 6, 0, 2, 0, 1, 16, 22, 11, 0, 1, 0, 1, 0, 1, 0]' : 0.124949}
{'[2, 1, 1, 6, 0, 2, 0, 1, 16, 22, 11, 0, 1, 0, 1, 0, 1, 0]' : 0.125022}
{'[2, 1, 1, 6, 0, 2, 0, 1, 16, 22, 11, 0, 1, 0, 1, 0, 1, 0]' : 0.124988}
{'[2, 1, 1, 6, 0, 2, 0, 1, 16, 22, 11, 0, 1, 0, 1, 0, 1, 0]' : 0.125355}

out:
 ["{'[2, 1, 1, 6, 0, 2, 0, 1, 16, 22, 11, 0, 1, 0, 1, 0, 1, 0]' : 0.117524}", "{'[2, 1, 1, 6, 0, 2, 0, 1, 16, 22, 11, 0, 1, 0, 1, 0, 1, 0]' : 0.118132}", "{'[2, 1, 1, 6, 0, 2, 0, 1, 16, 22, 11, 0, 1, 0, 1, 0, 1, 0]' : 0.11871}", "{'[2, 1, 1, 6, 0, 2, 0, 1, 16, 22, 11, 0, 1, 0, 1, 0, 1, 0]' : 0.121779}", "{'[2, 1, 1, 6, 0, 2, 0, 1, 16, 22, 11, 0, 1, 0, 1, 0, 1, 0]' : 0.11895}", "{'[2, 1, 1, 6, 0, 2, 0, 1, 16, 22, 11, 0, 1, 0, 1, 0, 1, 0]' : 0.118293}", "{'[2, 1, 1, 6, 0, 2, 0, 1, 16, 22, 11, 0, 1, 0, 1, 0, 1, 0]' : 0.117989}", "{'[2, 1, 1, 6, 0, 2, 0, 1, 16, 22, 11, 0, 1, 0, 1, 0, 1, 0]' : 0.122776}", "{'[2, 1, 1, 6, 0, 2, 0, 1, 16, 22, 11, 0, 1, 0, 1, 0, 1, 0]' : 0.121644}", "{'[2, 1, 1, 6, 0, 2, 0, 1, 16, 22, 11, 0, 1, 0, 1, 0, 1, 0]' : 0.122013}", "{'[2, 1, 1, 6, 0, 2, 0, 1, 16, 22, 11, 0, 1, 0, 1, 0, 1, 0]' : 0.121598}", "{'[2, 1, 1, 6, 0, 2, 0, 1, 16, 22, 11, 0, 1, 0, 1, 0, 1, 0]' : 0.121802}", "{'[2, 1, 1, 6, 0, 2, 0, 1, 16, 22, 11, 0, 1, 0, 1, 0, 1, 0]' : 0.121696}", "{'[2, 1, 1, 6, 0, 2, 0, 1, 16, 22, 11, 0, 1, 0, 1, 0, 1, 0]' : 0.121988}", "{'[2, 1, 1, 6, 0, 2, 0, 1, 16, 22, 11, 0, 1, 0, 1, 0, 1, 0]' : 0.12185}", "{'[2, 1, 1, 6, 0, 2, 0, 1, 16, 22, 11, 0, 1, 0, 1, 0, 1, 0]' : 0.124078}", "{'[2, 1, 1, 6, 0, 2, 0, 1, 16, 22, 11, 0, 1, 0, 1, 0, 1, 0]' : 0.125036}", "{'[2, 1, 1, 6, 0, 2, 0, 1, 16, 22, 11, 0, 1, 0, 1, 0, 1, 0]' : 0.125397}", "{'[2, 1, 1, 6, 0, 2, 0, 1, 16, 22, 11, 0, 1, 0, 1, 0, 1, 0]' : 0.124944}", "{'[2, 1, 1, 6, 0, 2, 0, 1, 16, 22, 11, 0, 1, 0, 1, 0, 1, 0]' : 0.124934}", "{'[2, 1, 1, 6, 0, 2, 0, 1, 16, 22, 11, 0, 1, 0, 1, 0, 1, 0]' : 0.124907}", "{'[2, 1, 1, 6, 0, 2, 0, 1, 16, 22, 11, 0, 1, 0, 1, 0, 1, 0]' : 0.125323}", "{'[2, 1, 1, 6, 0, 2, 0, 1, 16, 22, 11, 0, 1, 0, 1, 0, 1, 0]' : 0.125029}", "{'[2, 1, 1, 6, 0, 2, 0, 1, 16, 22, 11, 0, 1, 0, 1, 0, 1, 0]' : 0.124939}", "{'[2, 1, 1, 6, 0, 2, 0, 1, 16, 22, 11, 0, 1, 0, 1, 0, 1, 0]' : 0.124946}", "{'[2, 1, 1, 6, 0, 2, 0, 1, 16, 22, 11, 0, 1, 0, 1, 0, 1, 0]' : 0.125363}", "{'[2, 1, 1, 6, 0, 2, 0, 1, 16, 22, 11, 0, 1, 0, 1, 0, 1, 0]' : 0.124949}", "{'[2, 1, 1, 6, 0, 2, 0, 1, 16, 22, 11, 0, 1, 0, 1, 0, 1, 0]' : 0.125022}", "{'[2, 1, 1, 6, 0, 2, 0, 1, 16, 22, 11, 0, 1, 0, 1, 0, 1, 0]' : 0.124988}", "{'[2, 1, 1, 6, 0, 2, 0, 1, 16, 22, 11, 0, 1, 0, 1, 0, 1, 0]' : 0.125355}"]
returning from 'run': {'[2, 1, 1, 6, 0, 2, 0, 1, 16, 22, 11, 0, 1, 0, 1, 0, 1, 0]': ([0.117524, 0.118132, 0.11871, 0.121779, 0.11895, 0.118293, 0.117989, 0.122776, 0.121644, 0.122013, 0.121598, 0.121802, 0.121696, 0.121988, 0.12185, 0.124078, 0.125036, 0.125397, 0.124944, 0.124934, 0.124907, 0.125323, 0.125029, 0.124939, 0.124946, 0.125363, 0.124949, 0.125022, 0.124988, 0.125355], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 1, 1, 6, 0, 2, 0, 1, 16, 22, 11, 0, 1, 0, 1, 0, 1, 0]': ([0.117524, 0.118132, 0.11871, 0.121779, 0.11895, 0.118293, 0.117989, 0.122776, 0.121644, 0.122013, 0.121598, 0.121802, 0.121696, 0.121988, 0.12185, 0.124078, 0.125036, 0.125397, 0.124944, 0.124934, 0.124907, 0.125323, 0.125029, 0.124939, 0.124946, 0.125363, 0.124949, 0.125022, 0.124988, 0.125355], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	35
        Max loop nest depth: 	4
        Additions: 		224
        Multiplications: 	44
        Divisions: 		0
        Logical: 		0
        Reads: 			616
        Writes: 		161
        Comparisons:		35
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest10.exe __orio_perftest10.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest10.exe  
Program Test Output: 
{'[1, 0, 1, 0, 2, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.260263}
{'[1, 0, 1, 0, 2, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.260013}
{'[1, 0, 1, 0, 2, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.230407}
{'[1, 0, 1, 0, 2, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.227467}
{'[1, 0, 1, 0, 2, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.227763}
{'[1, 0, 1, 0, 2, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.227416}
{'[1, 0, 1, 0, 2, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.227417}
{'[1, 0, 1, 0, 2, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.227692}
{'[1, 0, 1, 0, 2, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.227486}
{'[1, 0, 1, 0, 2, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.227625}
{'[1, 0, 1, 0, 2, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.227638}
{'[1, 0, 1, 0, 2, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.227656}
{'[1, 0, 1, 0, 2, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.227648}
{'[1, 0, 1, 0, 2, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.227728}
{'[1, 0, 1, 0, 2, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.227579}
{'[1, 0, 1, 0, 2, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.227652}
{'[1, 0, 1, 0, 2, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.227382}
{'[1, 0, 1, 0, 2, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.227486}
{'[1, 0, 1, 0, 2, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.233728}
{'[1, 0, 1, 0, 2, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.233571}
{'[1, 0, 1, 0, 2, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.228806}
{'[1, 0, 1, 0, 2, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.227373}
{'[1, 0, 1, 0, 2, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.228253}
{'[1, 0, 1, 0, 2, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.227609}
{'[1, 0, 1, 0, 2, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.227502}
{'[1, 0, 1, 0, 2, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.227327}
{'[1, 0, 1, 0, 2, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.227636}
{'[1, 0, 1, 0, 2, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.228039}
{'[1, 0, 1, 0, 2, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.227856}
{'[1, 0, 1, 0, 2, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.227357}

out:
 ["{'[1, 0, 1, 0, 2, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.260263}", "{'[1, 0, 1, 0, 2, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.260013}", "{'[1, 0, 1, 0, 2, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.230407}", "{'[1, 0, 1, 0, 2, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.227467}", "{'[1, 0, 1, 0, 2, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.227763}", "{'[1, 0, 1, 0, 2, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.227416}", "{'[1, 0, 1, 0, 2, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.227417}", "{'[1, 0, 1, 0, 2, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.227692}", "{'[1, 0, 1, 0, 2, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.227486}", "{'[1, 0, 1, 0, 2, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.227625}", "{'[1, 0, 1, 0, 2, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.227638}", "{'[1, 0, 1, 0, 2, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.227656}", "{'[1, 0, 1, 0, 2, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.227648}", "{'[1, 0, 1, 0, 2, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.227728}", "{'[1, 0, 1, 0, 2, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.227579}", "{'[1, 0, 1, 0, 2, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.227652}", "{'[1, 0, 1, 0, 2, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.227382}", "{'[1, 0, 1, 0, 2, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.227486}", "{'[1, 0, 1, 0, 2, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.233728}", "{'[1, 0, 1, 0, 2, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.233571}", "{'[1, 0, 1, 0, 2, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.228806}", "{'[1, 0, 1, 0, 2, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.227373}", "{'[1, 0, 1, 0, 2, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.228253}", "{'[1, 0, 1, 0, 2, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.227609}", "{'[1, 0, 1, 0, 2, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.227502}", "{'[1, 0, 1, 0, 2, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.227327}", "{'[1, 0, 1, 0, 2, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.227636}", "{'[1, 0, 1, 0, 2, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.228039}", "{'[1, 0, 1, 0, 2, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.227856}", "{'[1, 0, 1, 0, 2, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 0, 0]' : 0.227357}"]
returning from 'run': {'[1, 0, 1, 0, 2, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 0, 0]': ([0.260263, 0.260013, 0.230407, 0.227467, 0.227763, 0.227416, 0.227417, 0.227692, 0.227486, 0.227625, 0.227638, 0.227656, 0.227648, 0.227728, 0.227579, 0.227652, 0.227382, 0.227486, 0.233728, 0.233571, 0.228806, 0.227373, 0.228253, 0.227609, 0.227502, 0.227327, 0.227636, 0.228039, 0.227856, 0.227357], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 1, 0, 2, 0, 0, 1, 7, 9, 0, 0, 0, 0, 0, 1, 0, 0]': ([0.260263, 0.260013, 0.230407, 0.227467, 0.227763, 0.227416, 0.227417, 0.227692, 0.227486, 0.227625, 0.227638, 0.227656, 0.227648, 0.227728, 0.227579, 0.227652, 0.227382, 0.227486, 0.233728, 0.233571, 0.228806, 0.227373, 0.228253, 0.227609, 0.227502, 0.227327, 0.227636, 0.228039, 0.227856, 0.227357], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	27
        Max loop nest depth: 	6
        Additions: 		2886
        Multiplications: 	1386
        Divisions: 		0
        Logical: 		0
        Reads: 			5482
        Writes: 		867
        Comparisons:		27
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest11.exe __orio_perftest11.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest11.exe  
Program Test Output: 
{'[2, 1, 1, 6, 6, 4, 1, 1, 0, 0, 11, 6, 2, 0, 0, 1, 0, 0]' : 0.207555}
{'[2, 1, 1, 6, 6, 4, 1, 1, 0, 0, 11, 6, 2, 0, 0, 1, 0, 0]' : 0.208051}
{'[2, 1, 1, 6, 6, 4, 1, 1, 0, 0, 11, 6, 2, 0, 0, 1, 0, 0]' : 0.20826}
{'[2, 1, 1, 6, 6, 4, 1, 1, 0, 0, 11, 6, 2, 0, 0, 1, 0, 0]' : 0.20745}
{'[2, 1, 1, 6, 6, 4, 1, 1, 0, 0, 11, 6, 2, 0, 0, 1, 0, 0]' : 0.208063}
{'[2, 1, 1, 6, 6, 4, 1, 1, 0, 0, 11, 6, 2, 0, 0, 1, 0, 0]' : 0.208011}
{'[2, 1, 1, 6, 6, 4, 1, 1, 0, 0, 11, 6, 2, 0, 0, 1, 0, 0]' : 0.207187}
{'[2, 1, 1, 6, 6, 4, 1, 1, 0, 0, 11, 6, 2, 0, 0, 1, 0, 0]' : 0.206756}
{'[2, 1, 1, 6, 6, 4, 1, 1, 0, 0, 11, 6, 2, 0, 0, 1, 0, 0]' : 0.207965}
{'[2, 1, 1, 6, 6, 4, 1, 1, 0, 0, 11, 6, 2, 0, 0, 1, 0, 0]' : 0.207443}
{'[2, 1, 1, 6, 6, 4, 1, 1, 0, 0, 11, 6, 2, 0, 0, 1, 0, 0]' : 0.207123}
{'[2, 1, 1, 6, 6, 4, 1, 1, 0, 0, 11, 6, 2, 0, 0, 1, 0, 0]' : 0.207861}
{'[2, 1, 1, 6, 6, 4, 1, 1, 0, 0, 11, 6, 2, 0, 0, 1, 0, 0]' : 0.206779}
{'[2, 1, 1, 6, 6, 4, 1, 1, 0, 0, 11, 6, 2, 0, 0, 1, 0, 0]' : 0.20675}
{'[2, 1, 1, 6, 6, 4, 1, 1, 0, 0, 11, 6, 2, 0, 0, 1, 0, 0]' : 0.20871}
{'[2, 1, 1, 6, 6, 4, 1, 1, 0, 0, 11, 6, 2, 0, 0, 1, 0, 0]' : 0.207595}
{'[2, 1, 1, 6, 6, 4, 1, 1, 0, 0, 11, 6, 2, 0, 0, 1, 0, 0]' : 0.208824}
{'[2, 1, 1, 6, 6, 4, 1, 1, 0, 0, 11, 6, 2, 0, 0, 1, 0, 0]' : 0.206841}
{'[2, 1, 1, 6, 6, 4, 1, 1, 0, 0, 11, 6, 2, 0, 0, 1, 0, 0]' : 0.207178}
{'[2, 1, 1, 6, 6, 4, 1, 1, 0, 0, 11, 6, 2, 0, 0, 1, 0, 0]' : 0.207301}
{'[2, 1, 1, 6, 6, 4, 1, 1, 0, 0, 11, 6, 2, 0, 0, 1, 0, 0]' : 0.207187}
{'[2, 1, 1, 6, 6, 4, 1, 1, 0, 0, 11, 6, 2, 0, 0, 1, 0, 0]' : 0.207213}
{'[2, 1, 1, 6, 6, 4, 1, 1, 0, 0, 11, 6, 2, 0, 0, 1, 0, 0]' : 0.207222}
{'[2, 1, 1, 6, 6, 4, 1, 1, 0, 0, 11, 6, 2, 0, 0, 1, 0, 0]' : 0.211369}
{'[2, 1, 1, 6, 6, 4, 1, 1, 0, 0, 11, 6, 2, 0, 0, 1, 0, 0]' : 0.21028}
{'[2, 1, 1, 6, 6, 4, 1, 1, 0, 0, 11, 6, 2, 0, 0, 1, 0, 0]' : 0.20982}
{'[2, 1, 1, 6, 6, 4, 1, 1, 0, 0, 11, 6, 2, 0, 0, 1, 0, 0]' : 0.206852}
{'[2, 1, 1, 6, 6, 4, 1, 1, 0, 0, 11, 6, 2, 0, 0, 1, 0, 0]' : 0.20819}
{'[2, 1, 1, 6, 6, 4, 1, 1, 0, 0, 11, 6, 2, 0, 0, 1, 0, 0]' : 0.20656}
{'[2, 1, 1, 6, 6, 4, 1, 1, 0, 0, 11, 6, 2, 0, 0, 1, 0, 0]' : 0.207677}

out:
 ["{'[2, 1, 1, 6, 6, 4, 1, 1, 0, 0, 11, 6, 2, 0, 0, 1, 0, 0]' : 0.207555}", "{'[2, 1, 1, 6, 6, 4, 1, 1, 0, 0, 11, 6, 2, 0, 0, 1, 0, 0]' : 0.208051}", "{'[2, 1, 1, 6, 6, 4, 1, 1, 0, 0, 11, 6, 2, 0, 0, 1, 0, 0]' : 0.20826}", "{'[2, 1, 1, 6, 6, 4, 1, 1, 0, 0, 11, 6, 2, 0, 0, 1, 0, 0]' : 0.20745}", "{'[2, 1, 1, 6, 6, 4, 1, 1, 0, 0, 11, 6, 2, 0, 0, 1, 0, 0]' : 0.208063}", "{'[2, 1, 1, 6, 6, 4, 1, 1, 0, 0, 11, 6, 2, 0, 0, 1, 0, 0]' : 0.208011}", "{'[2, 1, 1, 6, 6, 4, 1, 1, 0, 0, 11, 6, 2, 0, 0, 1, 0, 0]' : 0.207187}", "{'[2, 1, 1, 6, 6, 4, 1, 1, 0, 0, 11, 6, 2, 0, 0, 1, 0, 0]' : 0.206756}", "{'[2, 1, 1, 6, 6, 4, 1, 1, 0, 0, 11, 6, 2, 0, 0, 1, 0, 0]' : 0.207965}", "{'[2, 1, 1, 6, 6, 4, 1, 1, 0, 0, 11, 6, 2, 0, 0, 1, 0, 0]' : 0.207443}", "{'[2, 1, 1, 6, 6, 4, 1, 1, 0, 0, 11, 6, 2, 0, 0, 1, 0, 0]' : 0.207123}", "{'[2, 1, 1, 6, 6, 4, 1, 1, 0, 0, 11, 6, 2, 0, 0, 1, 0, 0]' : 0.207861}", "{'[2, 1, 1, 6, 6, 4, 1, 1, 0, 0, 11, 6, 2, 0, 0, 1, 0, 0]' : 0.206779}", "{'[2, 1, 1, 6, 6, 4, 1, 1, 0, 0, 11, 6, 2, 0, 0, 1, 0, 0]' : 0.20675}", "{'[2, 1, 1, 6, 6, 4, 1, 1, 0, 0, 11, 6, 2, 0, 0, 1, 0, 0]' : 0.20871}", "{'[2, 1, 1, 6, 6, 4, 1, 1, 0, 0, 11, 6, 2, 0, 0, 1, 0, 0]' : 0.207595}", "{'[2, 1, 1, 6, 6, 4, 1, 1, 0, 0, 11, 6, 2, 0, 0, 1, 0, 0]' : 0.208824}", "{'[2, 1, 1, 6, 6, 4, 1, 1, 0, 0, 11, 6, 2, 0, 0, 1, 0, 0]' : 0.206841}", "{'[2, 1, 1, 6, 6, 4, 1, 1, 0, 0, 11, 6, 2, 0, 0, 1, 0, 0]' : 0.207178}", "{'[2, 1, 1, 6, 6, 4, 1, 1, 0, 0, 11, 6, 2, 0, 0, 1, 0, 0]' : 0.207301}", "{'[2, 1, 1, 6, 6, 4, 1, 1, 0, 0, 11, 6, 2, 0, 0, 1, 0, 0]' : 0.207187}", "{'[2, 1, 1, 6, 6, 4, 1, 1, 0, 0, 11, 6, 2, 0, 0, 1, 0, 0]' : 0.207213}", "{'[2, 1, 1, 6, 6, 4, 1, 1, 0, 0, 11, 6, 2, 0, 0, 1, 0, 0]' : 0.207222}", "{'[2, 1, 1, 6, 6, 4, 1, 1, 0, 0, 11, 6, 2, 0, 0, 1, 0, 0]' : 0.211369}", "{'[2, 1, 1, 6, 6, 4, 1, 1, 0, 0, 11, 6, 2, 0, 0, 1, 0, 0]' : 0.21028}", "{'[2, 1, 1, 6, 6, 4, 1, 1, 0, 0, 11, 6, 2, 0, 0, 1, 0, 0]' : 0.20982}", "{'[2, 1, 1, 6, 6, 4, 1, 1, 0, 0, 11, 6, 2, 0, 0, 1, 0, 0]' : 0.206852}", "{'[2, 1, 1, 6, 6, 4, 1, 1, 0, 0, 11, 6, 2, 0, 0, 1, 0, 0]' : 0.20819}", "{'[2, 1, 1, 6, 6, 4, 1, 1, 0, 0, 11, 6, 2, 0, 0, 1, 0, 0]' : 0.20656}", "{'[2, 1, 1, 6, 6, 4, 1, 1, 0, 0, 11, 6, 2, 0, 0, 1, 0, 0]' : 0.207677}"]
returning from 'run': {'[2, 1, 1, 6, 6, 4, 1, 1, 0, 0, 11, 6, 2, 0, 0, 1, 0, 0]': ([0.207555, 0.208051, 0.20826, 0.20745, 0.208063, 0.208011, 0.207187, 0.206756, 0.207965, 0.207443, 0.207123, 0.207861, 0.206779, 0.20675, 0.20871, 0.207595, 0.208824, 0.206841, 0.207178, 0.207301, 0.207187, 0.207213, 0.207222, 0.211369, 0.21028, 0.20982, 0.206852, 0.20819, 0.20656, 0.207677], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 1, 1, 6, 6, 4, 1, 1, 0, 0, 11, 6, 2, 0, 0, 1, 0, 0]': ([0.207555, 0.208051, 0.20826, 0.20745, 0.208063, 0.208011, 0.207187, 0.206756, 0.207965, 0.207443, 0.207123, 0.207861, 0.206779, 0.20675, 0.20871, 0.207595, 0.208824, 0.206841, 0.207178, 0.207301, 0.207187, 0.207213, 0.207222, 0.211369, 0.21028, 0.20982, 0.206852, 0.20819, 0.20656, 0.207677], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	29
        Max loop nest depth: 	6
        Additions: 		539
        Multiplications: 	220
        Divisions: 		0
        Logical: 		0
        Reads: 			1237
        Writes: 		261
        Comparisons:		29
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest12.exe __orio_perftest12.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest12.exe  
Program Test Output: 
{'[4, 6, 1, 6, 4, 5, 1, 0, 2, 1, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.102771}
{'[4, 6, 1, 6, 4, 5, 1, 0, 2, 1, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.102455}
{'[4, 6, 1, 6, 4, 5, 1, 0, 2, 1, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.102372}
{'[4, 6, 1, 6, 4, 5, 1, 0, 2, 1, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.104924}
{'[4, 6, 1, 6, 4, 5, 1, 0, 2, 1, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.104974}
{'[4, 6, 1, 6, 4, 5, 1, 0, 2, 1, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.104872}
{'[4, 6, 1, 6, 4, 5, 1, 0, 2, 1, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.104889}
{'[4, 6, 1, 6, 4, 5, 1, 0, 2, 1, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.10447}
{'[4, 6, 1, 6, 4, 5, 1, 0, 2, 1, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0997732}
{'[4, 6, 1, 6, 4, 5, 1, 0, 2, 1, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0995431}
{'[4, 6, 1, 6, 4, 5, 1, 0, 2, 1, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0996029}
{'[4, 6, 1, 6, 4, 5, 1, 0, 2, 1, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0995901}
{'[4, 6, 1, 6, 4, 5, 1, 0, 2, 1, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.100663}
{'[4, 6, 1, 6, 4, 5, 1, 0, 2, 1, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.104864}
{'[4, 6, 1, 6, 4, 5, 1, 0, 2, 1, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.104887}
{'[4, 6, 1, 6, 4, 5, 1, 0, 2, 1, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.104851}
{'[4, 6, 1, 6, 4, 5, 1, 0, 2, 1, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.104928}
{'[4, 6, 1, 6, 4, 5, 1, 0, 2, 1, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.10474}
{'[4, 6, 1, 6, 4, 5, 1, 0, 2, 1, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.102409}
{'[4, 6, 1, 6, 4, 5, 1, 0, 2, 1, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.10238}
{'[4, 6, 1, 6, 4, 5, 1, 0, 2, 1, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.102388}
{'[4, 6, 1, 6, 4, 5, 1, 0, 2, 1, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.102308}
{'[4, 6, 1, 6, 4, 5, 1, 0, 2, 1, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.103986}
{'[4, 6, 1, 6, 4, 5, 1, 0, 2, 1, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.104884}
{'[4, 6, 1, 6, 4, 5, 1, 0, 2, 1, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.104905}
{'[4, 6, 1, 6, 4, 5, 1, 0, 2, 1, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.104973}
{'[4, 6, 1, 6, 4, 5, 1, 0, 2, 1, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.104924}
{'[4, 6, 1, 6, 4, 5, 1, 0, 2, 1, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.105286}
{'[4, 6, 1, 6, 4, 5, 1, 0, 2, 1, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.104888}
{'[4, 6, 1, 6, 4, 5, 1, 0, 2, 1, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.104861}

out:
 ["{'[4, 6, 1, 6, 4, 5, 1, 0, 2, 1, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.102771}", "{'[4, 6, 1, 6, 4, 5, 1, 0, 2, 1, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.102455}", "{'[4, 6, 1, 6, 4, 5, 1, 0, 2, 1, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.102372}", "{'[4, 6, 1, 6, 4, 5, 1, 0, 2, 1, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.104924}", "{'[4, 6, 1, 6, 4, 5, 1, 0, 2, 1, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.104974}", "{'[4, 6, 1, 6, 4, 5, 1, 0, 2, 1, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.104872}", "{'[4, 6, 1, 6, 4, 5, 1, 0, 2, 1, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.104889}", "{'[4, 6, 1, 6, 4, 5, 1, 0, 2, 1, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.10447}", "{'[4, 6, 1, 6, 4, 5, 1, 0, 2, 1, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0997732}", "{'[4, 6, 1, 6, 4, 5, 1, 0, 2, 1, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0995431}", "{'[4, 6, 1, 6, 4, 5, 1, 0, 2, 1, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0996029}", "{'[4, 6, 1, 6, 4, 5, 1, 0, 2, 1, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.0995901}", "{'[4, 6, 1, 6, 4, 5, 1, 0, 2, 1, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.100663}", "{'[4, 6, 1, 6, 4, 5, 1, 0, 2, 1, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.104864}", "{'[4, 6, 1, 6, 4, 5, 1, 0, 2, 1, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.104887}", "{'[4, 6, 1, 6, 4, 5, 1, 0, 2, 1, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.104851}", "{'[4, 6, 1, 6, 4, 5, 1, 0, 2, 1, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.104928}", "{'[4, 6, 1, 6, 4, 5, 1, 0, 2, 1, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.10474}", "{'[4, 6, 1, 6, 4, 5, 1, 0, 2, 1, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.102409}", "{'[4, 6, 1, 6, 4, 5, 1, 0, 2, 1, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.10238}", "{'[4, 6, 1, 6, 4, 5, 1, 0, 2, 1, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.102388}", "{'[4, 6, 1, 6, 4, 5, 1, 0, 2, 1, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.102308}", "{'[4, 6, 1, 6, 4, 5, 1, 0, 2, 1, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.103986}", "{'[4, 6, 1, 6, 4, 5, 1, 0, 2, 1, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.104884}", "{'[4, 6, 1, 6, 4, 5, 1, 0, 2, 1, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.104905}", "{'[4, 6, 1, 6, 4, 5, 1, 0, 2, 1, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.104973}", "{'[4, 6, 1, 6, 4, 5, 1, 0, 2, 1, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.104924}", "{'[4, 6, 1, 6, 4, 5, 1, 0, 2, 1, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.105286}", "{'[4, 6, 1, 6, 4, 5, 1, 0, 2, 1, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.104888}", "{'[4, 6, 1, 6, 4, 5, 1, 0, 2, 1, 0, 0, 1, 0, 1, 1, 1, 0]' : 0.104861}"]
returning from 'run': {'[4, 6, 1, 6, 4, 5, 1, 0, 2, 1, 0, 0, 1, 0, 1, 1, 1, 0]': ([0.102771, 0.102455, 0.102372, 0.104924, 0.104974, 0.104872, 0.104889, 0.10447, 0.0997732, 0.0995431, 0.0996029, 0.0995901, 0.100663, 0.104864, 0.104887, 0.104851, 0.104928, 0.10474, 0.102409, 0.10238, 0.102388, 0.102308, 0.103986, 0.104884, 0.104905, 0.104973, 0.104924, 0.105286, 0.104888, 0.104861], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 6, 1, 6, 4, 5, 1, 0, 2, 1, 0, 0, 1, 0, 1, 1, 1, 0]': ([0.102771, 0.102455, 0.102372, 0.104924, 0.104974, 0.104872, 0.104889, 0.10447, 0.0997732, 0.0995431, 0.0996029, 0.0995901, 0.100663, 0.104864, 0.104887, 0.104851, 0.104928, 0.10474, 0.102409, 0.10238, 0.102388, 0.102308, 0.103986, 0.104884, 0.104905, 0.104973, 0.104924, 0.105286, 0.104888, 0.104861], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = jjj
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		371
        Multiplications: 	148
        Divisions: 		0
        Logical: 		0
        Reads: 			821
        Writes: 		98
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest13.exe __orio_perftest13.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest13.exe  
Program Test Output: 
{'[0, 4, 1, 2, 2, 0, 0, 0, 0, 0, 25, 29, 0, 1, 1, 0, 0, 0]' : 0.274803}
{'[0, 4, 1, 2, 2, 0, 0, 0, 0, 0, 25, 29, 0, 1, 1, 0, 0, 0]' : 0.27275}
{'[0, 4, 1, 2, 2, 0, 0, 0, 0, 0, 25, 29, 0, 1, 1, 0, 0, 0]' : 0.245531}
{'[0, 4, 1, 2, 2, 0, 0, 0, 0, 0, 25, 29, 0, 1, 1, 0, 0, 0]' : 0.245521}
{'[0, 4, 1, 2, 2, 0, 0, 0, 0, 0, 25, 29, 0, 1, 1, 0, 0, 0]' : 0.245572}
{'[0, 4, 1, 2, 2, 0, 0, 0, 0, 0, 25, 29, 0, 1, 1, 0, 0, 0]' : 0.239758}
{'[0, 4, 1, 2, 2, 0, 0, 0, 0, 0, 25, 29, 0, 1, 1, 0, 0, 0]' : 0.23851}
{'[0, 4, 1, 2, 2, 0, 0, 0, 0, 0, 25, 29, 0, 1, 1, 0, 0, 0]' : 0.234419}
{'[0, 4, 1, 2, 2, 0, 0, 0, 0, 0, 25, 29, 0, 1, 1, 0, 0, 0]' : 0.230696}
{'[0, 4, 1, 2, 2, 0, 0, 0, 0, 0, 25, 29, 0, 1, 1, 0, 0, 0]' : 0.241776}
{'[0, 4, 1, 2, 2, 0, 0, 0, 0, 0, 25, 29, 0, 1, 1, 0, 0, 0]' : 0.245379}
{'[0, 4, 1, 2, 2, 0, 0, 0, 0, 0, 25, 29, 0, 1, 1, 0, 0, 0]' : 0.236583}
{'[0, 4, 1, 2, 2, 0, 0, 0, 0, 0, 25, 29, 0, 1, 1, 0, 0, 0]' : 0.238261}
{'[0, 4, 1, 2, 2, 0, 0, 0, 0, 0, 25, 29, 0, 1, 1, 0, 0, 0]' : 0.238658}
{'[0, 4, 1, 2, 2, 0, 0, 0, 0, 0, 25, 29, 0, 1, 1, 0, 0, 0]' : 0.238466}
{'[0, 4, 1, 2, 2, 0, 0, 0, 0, 0, 25, 29, 0, 1, 1, 0, 0, 0]' : 0.237258}
{'[0, 4, 1, 2, 2, 0, 0, 0, 0, 0, 25, 29, 0, 1, 1, 0, 0, 0]' : 0.238293}
{'[0, 4, 1, 2, 2, 0, 0, 0, 0, 0, 25, 29, 0, 1, 1, 0, 0, 0]' : 0.243289}
{'[0, 4, 1, 2, 2, 0, 0, 0, 0, 0, 25, 29, 0, 1, 1, 0, 0, 0]' : 0.231353}
{'[0, 4, 1, 2, 2, 0, 0, 0, 0, 0, 25, 29, 0, 1, 1, 0, 0, 0]' : 0.233262}
{'[0, 4, 1, 2, 2, 0, 0, 0, 0, 0, 25, 29, 0, 1, 1, 0, 0, 0]' : 0.23828}
{'[0, 4, 1, 2, 2, 0, 0, 0, 0, 0, 25, 29, 0, 1, 1, 0, 0, 0]' : 0.238319}
{'[0, 4, 1, 2, 2, 0, 0, 0, 0, 0, 25, 29, 0, 1, 1, 0, 0, 0]' : 0.230731}
{'[0, 4, 1, 2, 2, 0, 0, 0, 0, 0, 25, 29, 0, 1, 1, 0, 0, 0]' : 0.231104}
{'[0, 4, 1, 2, 2, 0, 0, 0, 0, 0, 25, 29, 0, 1, 1, 0, 0, 0]' : 0.23861}
{'[0, 4, 1, 2, 2, 0, 0, 0, 0, 0, 25, 29, 0, 1, 1, 0, 0, 0]' : 0.238326}
{'[0, 4, 1, 2, 2, 0, 0, 0, 0, 0, 25, 29, 0, 1, 1, 0, 0, 0]' : 0.233665}
{'[0, 4, 1, 2, 2, 0, 0, 0, 0, 0, 25, 29, 0, 1, 1, 0, 0, 0]' : 0.230979}
{'[0, 4, 1, 2, 2, 0, 0, 0, 0, 0, 25, 29, 0, 1, 1, 0, 0, 0]' : 0.236833}
{'[0, 4, 1, 2, 2, 0, 0, 0, 0, 0, 25, 29, 0, 1, 1, 0, 0, 0]' : 0.238405}

out:
 ["{'[0, 4, 1, 2, 2, 0, 0, 0, 0, 0, 25, 29, 0, 1, 1, 0, 0, 0]' : 0.274803}", "{'[0, 4, 1, 2, 2, 0, 0, 0, 0, 0, 25, 29, 0, 1, 1, 0, 0, 0]' : 0.27275}", "{'[0, 4, 1, 2, 2, 0, 0, 0, 0, 0, 25, 29, 0, 1, 1, 0, 0, 0]' : 0.245531}", "{'[0, 4, 1, 2, 2, 0, 0, 0, 0, 0, 25, 29, 0, 1, 1, 0, 0, 0]' : 0.245521}", "{'[0, 4, 1, 2, 2, 0, 0, 0, 0, 0, 25, 29, 0, 1, 1, 0, 0, 0]' : 0.245572}", "{'[0, 4, 1, 2, 2, 0, 0, 0, 0, 0, 25, 29, 0, 1, 1, 0, 0, 0]' : 0.239758}", "{'[0, 4, 1, 2, 2, 0, 0, 0, 0, 0, 25, 29, 0, 1, 1, 0, 0, 0]' : 0.23851}", "{'[0, 4, 1, 2, 2, 0, 0, 0, 0, 0, 25, 29, 0, 1, 1, 0, 0, 0]' : 0.234419}", "{'[0, 4, 1, 2, 2, 0, 0, 0, 0, 0, 25, 29, 0, 1, 1, 0, 0, 0]' : 0.230696}", "{'[0, 4, 1, 2, 2, 0, 0, 0, 0, 0, 25, 29, 0, 1, 1, 0, 0, 0]' : 0.241776}", "{'[0, 4, 1, 2, 2, 0, 0, 0, 0, 0, 25, 29, 0, 1, 1, 0, 0, 0]' : 0.245379}", "{'[0, 4, 1, 2, 2, 0, 0, 0, 0, 0, 25, 29, 0, 1, 1, 0, 0, 0]' : 0.236583}", "{'[0, 4, 1, 2, 2, 0, 0, 0, 0, 0, 25, 29, 0, 1, 1, 0, 0, 0]' : 0.238261}", "{'[0, 4, 1, 2, 2, 0, 0, 0, 0, 0, 25, 29, 0, 1, 1, 0, 0, 0]' : 0.238658}", "{'[0, 4, 1, 2, 2, 0, 0, 0, 0, 0, 25, 29, 0, 1, 1, 0, 0, 0]' : 0.238466}", "{'[0, 4, 1, 2, 2, 0, 0, 0, 0, 0, 25, 29, 0, 1, 1, 0, 0, 0]' : 0.237258}", "{'[0, 4, 1, 2, 2, 0, 0, 0, 0, 0, 25, 29, 0, 1, 1, 0, 0, 0]' : 0.238293}", "{'[0, 4, 1, 2, 2, 0, 0, 0, 0, 0, 25, 29, 0, 1, 1, 0, 0, 0]' : 0.243289}", "{'[0, 4, 1, 2, 2, 0, 0, 0, 0, 0, 25, 29, 0, 1, 1, 0, 0, 0]' : 0.231353}", "{'[0, 4, 1, 2, 2, 0, 0, 0, 0, 0, 25, 29, 0, 1, 1, 0, 0, 0]' : 0.233262}", "{'[0, 4, 1, 2, 2, 0, 0, 0, 0, 0, 25, 29, 0, 1, 1, 0, 0, 0]' : 0.23828}", "{'[0, 4, 1, 2, 2, 0, 0, 0, 0, 0, 25, 29, 0, 1, 1, 0, 0, 0]' : 0.238319}", "{'[0, 4, 1, 2, 2, 0, 0, 0, 0, 0, 25, 29, 0, 1, 1, 0, 0, 0]' : 0.230731}", "{'[0, 4, 1, 2, 2, 0, 0, 0, 0, 0, 25, 29, 0, 1, 1, 0, 0, 0]' : 0.231104}", "{'[0, 4, 1, 2, 2, 0, 0, 0, 0, 0, 25, 29, 0, 1, 1, 0, 0, 0]' : 0.23861}", "{'[0, 4, 1, 2, 2, 0, 0, 0, 0, 0, 25, 29, 0, 1, 1, 0, 0, 0]' : 0.238326}", "{'[0, 4, 1, 2, 2, 0, 0, 0, 0, 0, 25, 29, 0, 1, 1, 0, 0, 0]' : 0.233665}", "{'[0, 4, 1, 2, 2, 0, 0, 0, 0, 0, 25, 29, 0, 1, 1, 0, 0, 0]' : 0.230979}", "{'[0, 4, 1, 2, 2, 0, 0, 0, 0, 0, 25, 29, 0, 1, 1, 0, 0, 0]' : 0.236833}", "{'[0, 4, 1, 2, 2, 0, 0, 0, 0, 0, 25, 29, 0, 1, 1, 0, 0, 0]' : 0.238405}"]
returning from 'run': {'[0, 4, 1, 2, 2, 0, 0, 0, 0, 0, 25, 29, 0, 1, 1, 0, 0, 0]': ([0.274803, 0.27275, 0.245531, 0.245521, 0.245572, 0.239758, 0.23851, 0.234419, 0.230696, 0.241776, 0.245379, 0.236583, 0.238261, 0.238658, 0.238466, 0.237258, 0.238293, 0.243289, 0.231353, 0.233262, 0.23828, 0.238319, 0.230731, 0.231104, 0.23861, 0.238326, 0.233665, 0.230979, 0.236833, 0.238405], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 4, 1, 2, 2, 0, 0, 0, 0, 0, 25, 29, 0, 1, 1, 0, 0, 0]': ([0.274803, 0.27275, 0.245531, 0.245521, 0.245572, 0.239758, 0.23851, 0.234419, 0.230696, 0.241776, 0.245379, 0.236583, 0.238261, 0.238658, 0.238466, 0.237258, 0.238293, 0.243289, 0.231353, 0.233262, 0.23828, 0.238319, 0.230731, 0.231104, 0.23861, 0.238326, 0.233665, 0.230979, 0.236833, 0.238405], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	33
        Max loop nest depth: 	5
        Additions: 		576
        Multiplications: 	224
        Divisions: 		0
        Logical: 		0
        Reads: 			1295
        Writes: 		272
        Comparisons:		33
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest14.exe __orio_perftest14.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest14.exe  
Program Test Output: 
{'[6, 0, 5, 0, 2, 5, 1, 0, 1, 6, 0, 4, 1, 0, 0, 1, 1, 0]' : 0.100126}
{'[6, 0, 5, 0, 2, 5, 1, 0, 1, 6, 0, 4, 1, 0, 0, 1, 1, 0]' : 0.100187}
{'[6, 0, 5, 0, 2, 5, 1, 0, 1, 6, 0, 4, 1, 0, 0, 1, 1, 0]' : 0.098479}
{'[6, 0, 5, 0, 2, 5, 1, 0, 1, 6, 0, 4, 1, 0, 0, 1, 1, 0]' : 0.0972869}
{'[6, 0, 5, 0, 2, 5, 1, 0, 1, 6, 0, 4, 1, 0, 0, 1, 1, 0]' : 0.097301}
{'[6, 0, 5, 0, 2, 5, 1, 0, 1, 6, 0, 4, 1, 0, 0, 1, 1, 0]' : 0.0972681}
{'[6, 0, 5, 0, 2, 5, 1, 0, 1, 6, 0, 4, 1, 0, 0, 1, 1, 0]' : 0.097255}
{'[6, 0, 5, 0, 2, 5, 1, 0, 1, 6, 0, 4, 1, 0, 0, 1, 1, 0]' : 0.101611}
{'[6, 0, 5, 0, 2, 5, 1, 0, 1, 6, 0, 4, 1, 0, 0, 1, 1, 0]' : 0.100978}
{'[6, 0, 5, 0, 2, 5, 1, 0, 1, 6, 0, 4, 1, 0, 0, 1, 1, 0]' : 0.0997009}
{'[6, 0, 5, 0, 2, 5, 1, 0, 1, 6, 0, 4, 1, 0, 0, 1, 1, 0]' : 0.0997398}
{'[6, 0, 5, 0, 2, 5, 1, 0, 1, 6, 0, 4, 1, 0, 0, 1, 1, 0]' : 0.0998449}
{'[6, 0, 5, 0, 2, 5, 1, 0, 1, 6, 0, 4, 1, 0, 0, 1, 1, 0]' : 0.0991051}
{'[6, 0, 5, 0, 2, 5, 1, 0, 1, 6, 0, 4, 1, 0, 0, 1, 1, 0]' : 0.0972929}
{'[6, 0, 5, 0, 2, 5, 1, 0, 1, 6, 0, 4, 1, 0, 0, 1, 1, 0]' : 0.0972722}
{'[6, 0, 5, 0, 2, 5, 1, 0, 1, 6, 0, 4, 1, 0, 0, 1, 1, 0]' : 0.0973868}
{'[6, 0, 5, 0, 2, 5, 1, 0, 1, 6, 0, 4, 1, 0, 0, 1, 1, 0]' : 0.0980468}
{'[6, 0, 5, 0, 2, 5, 1, 0, 1, 6, 0, 4, 1, 0, 0, 1, 1, 0]' : 0.0992119}
{'[6, 0, 5, 0, 2, 5, 1, 0, 1, 6, 0, 4, 1, 0, 0, 1, 1, 0]' : 0.0998399}
{'[6, 0, 5, 0, 2, 5, 1, 0, 1, 6, 0, 4, 1, 0, 0, 1, 1, 0]' : 0.099731}
{'[6, 0, 5, 0, 2, 5, 1, 0, 1, 6, 0, 4, 1, 0, 0, 1, 1, 0]' : 0.099685}
{'[6, 0, 5, 0, 2, 5, 1, 0, 1, 6, 0, 4, 1, 0, 0, 1, 1, 0]' : 0.0996912}
{'[6, 0, 5, 0, 2, 5, 1, 0, 1, 6, 0, 4, 1, 0, 0, 1, 1, 0]' : 0.100599}
{'[6, 0, 5, 0, 2, 5, 1, 0, 1, 6, 0, 4, 1, 0, 0, 1, 1, 0]' : 0.099941}
{'[6, 0, 5, 0, 2, 5, 1, 0, 1, 6, 0, 4, 1, 0, 0, 1, 1, 0]' : 0.0996978}
{'[6, 0, 5, 0, 2, 5, 1, 0, 1, 6, 0, 4, 1, 0, 0, 1, 1, 0]' : 0.0996971}
{'[6, 0, 5, 0, 2, 5, 1, 0, 1, 6, 0, 4, 1, 0, 0, 1, 1, 0]' : 0.0996659}
{'[6, 0, 5, 0, 2, 5, 1, 0, 1, 6, 0, 4, 1, 0, 0, 1, 1, 0]' : 0.102033}
{'[6, 0, 5, 0, 2, 5, 1, 0, 1, 6, 0, 4, 1, 0, 0, 1, 1, 0]' : 0.10225}
{'[6, 0, 5, 0, 2, 5, 1, 0, 1, 6, 0, 4, 1, 0, 0, 1, 1, 0]' : 0.10205}

out:
 ["{'[6, 0, 5, 0, 2, 5, 1, 0, 1, 6, 0, 4, 1, 0, 0, 1, 1, 0]' : 0.100126}", "{'[6, 0, 5, 0, 2, 5, 1, 0, 1, 6, 0, 4, 1, 0, 0, 1, 1, 0]' : 0.100187}", "{'[6, 0, 5, 0, 2, 5, 1, 0, 1, 6, 0, 4, 1, 0, 0, 1, 1, 0]' : 0.098479}", "{'[6, 0, 5, 0, 2, 5, 1, 0, 1, 6, 0, 4, 1, 0, 0, 1, 1, 0]' : 0.0972869}", "{'[6, 0, 5, 0, 2, 5, 1, 0, 1, 6, 0, 4, 1, 0, 0, 1, 1, 0]' : 0.097301}", "{'[6, 0, 5, 0, 2, 5, 1, 0, 1, 6, 0, 4, 1, 0, 0, 1, 1, 0]' : 0.0972681}", "{'[6, 0, 5, 0, 2, 5, 1, 0, 1, 6, 0, 4, 1, 0, 0, 1, 1, 0]' : 0.097255}", "{'[6, 0, 5, 0, 2, 5, 1, 0, 1, 6, 0, 4, 1, 0, 0, 1, 1, 0]' : 0.101611}", "{'[6, 0, 5, 0, 2, 5, 1, 0, 1, 6, 0, 4, 1, 0, 0, 1, 1, 0]' : 0.100978}", "{'[6, 0, 5, 0, 2, 5, 1, 0, 1, 6, 0, 4, 1, 0, 0, 1, 1, 0]' : 0.0997009}", "{'[6, 0, 5, 0, 2, 5, 1, 0, 1, 6, 0, 4, 1, 0, 0, 1, 1, 0]' : 0.0997398}", "{'[6, 0, 5, 0, 2, 5, 1, 0, 1, 6, 0, 4, 1, 0, 0, 1, 1, 0]' : 0.0998449}", "{'[6, 0, 5, 0, 2, 5, 1, 0, 1, 6, 0, 4, 1, 0, 0, 1, 1, 0]' : 0.0991051}", "{'[6, 0, 5, 0, 2, 5, 1, 0, 1, 6, 0, 4, 1, 0, 0, 1, 1, 0]' : 0.0972929}", "{'[6, 0, 5, 0, 2, 5, 1, 0, 1, 6, 0, 4, 1, 0, 0, 1, 1, 0]' : 0.0972722}", "{'[6, 0, 5, 0, 2, 5, 1, 0, 1, 6, 0, 4, 1, 0, 0, 1, 1, 0]' : 0.0973868}", "{'[6, 0, 5, 0, 2, 5, 1, 0, 1, 6, 0, 4, 1, 0, 0, 1, 1, 0]' : 0.0980468}", "{'[6, 0, 5, 0, 2, 5, 1, 0, 1, 6, 0, 4, 1, 0, 0, 1, 1, 0]' : 0.0992119}", "{'[6, 0, 5, 0, 2, 5, 1, 0, 1, 6, 0, 4, 1, 0, 0, 1, 1, 0]' : 0.0998399}", "{'[6, 0, 5, 0, 2, 5, 1, 0, 1, 6, 0, 4, 1, 0, 0, 1, 1, 0]' : 0.099731}", "{'[6, 0, 5, 0, 2, 5, 1, 0, 1, 6, 0, 4, 1, 0, 0, 1, 1, 0]' : 0.099685}", "{'[6, 0, 5, 0, 2, 5, 1, 0, 1, 6, 0, 4, 1, 0, 0, 1, 1, 0]' : 0.0996912}", "{'[6, 0, 5, 0, 2, 5, 1, 0, 1, 6, 0, 4, 1, 0, 0, 1, 1, 0]' : 0.100599}", "{'[6, 0, 5, 0, 2, 5, 1, 0, 1, 6, 0, 4, 1, 0, 0, 1, 1, 0]' : 0.099941}", "{'[6, 0, 5, 0, 2, 5, 1, 0, 1, 6, 0, 4, 1, 0, 0, 1, 1, 0]' : 0.0996978}", "{'[6, 0, 5, 0, 2, 5, 1, 0, 1, 6, 0, 4, 1, 0, 0, 1, 1, 0]' : 0.0996971}", "{'[6, 0, 5, 0, 2, 5, 1, 0, 1, 6, 0, 4, 1, 0, 0, 1, 1, 0]' : 0.0996659}", "{'[6, 0, 5, 0, 2, 5, 1, 0, 1, 6, 0, 4, 1, 0, 0, 1, 1, 0]' : 0.102033}", "{'[6, 0, 5, 0, 2, 5, 1, 0, 1, 6, 0, 4, 1, 0, 0, 1, 1, 0]' : 0.10225}", "{'[6, 0, 5, 0, 2, 5, 1, 0, 1, 6, 0, 4, 1, 0, 0, 1, 1, 0]' : 0.10205}"]
returning from 'run': {'[6, 0, 5, 0, 2, 5, 1, 0, 1, 6, 0, 4, 1, 0, 0, 1, 1, 0]': ([0.100126, 0.100187, 0.098479, 0.0972869, 0.097301, 0.0972681, 0.097255, 0.101611, 0.100978, 0.0997009, 0.0997398, 0.0998449, 0.0991051, 0.0972929, 0.0972722, 0.0973868, 0.0980468, 0.0992119, 0.0998399, 0.099731, 0.099685, 0.0996912, 0.100599, 0.099941, 0.0996978, 0.0996971, 0.0996659, 0.102033, 0.10225, 0.10205], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 5, 0, 2, 5, 1, 0, 1, 6, 0, 4, 1, 0, 0, 1, 1, 0]': ([0.100126, 0.100187, 0.098479, 0.0972869, 0.097301, 0.0972681, 0.097255, 0.101611, 0.100978, 0.0997009, 0.0997398, 0.0998449, 0.0991051, 0.0972929, 0.0972722, 0.0973868, 0.0980468, 0.0992119, 0.0998399, 0.099731, 0.099685, 0.0996912, 0.100599, 0.099941, 0.0996978, 0.0996971, 0.0996659, 0.102033, 0.10225, 0.10205], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	58
        Max loop nest depth: 	5
        Additions: 		636
        Multiplications: 	144
        Divisions: 		0
        Logical: 		0
        Reads: 			1270
        Writes: 		226
        Comparisons:		58
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest15.exe __orio_perftest15.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest15.exe  
Program Test Output: 
{'[0, 0, 5, 3, 0, 6, 1, 1, 0, 10, 3, 0, 0, 0, 0, 0, 1, 0]' : 0.211459}
{'[0, 0, 5, 3, 0, 6, 1, 1, 0, 10, 3, 0, 0, 0, 0, 0, 1, 0]' : 0.195445}
{'[0, 0, 5, 3, 0, 6, 1, 1, 0, 10, 3, 0, 0, 0, 0, 0, 1, 0]' : 0.177891}
{'[0, 0, 5, 3, 0, 6, 1, 1, 0, 10, 3, 0, 0, 0, 0, 0, 1, 0]' : 0.177809}
{'[0, 0, 5, 3, 0, 6, 1, 1, 0, 10, 3, 0, 0, 0, 0, 0, 1, 0]' : 0.177803}
{'[0, 0, 5, 3, 0, 6, 1, 1, 0, 10, 3, 0, 0, 0, 0, 0, 1, 0]' : 0.17824}
{'[0, 0, 5, 3, 0, 6, 1, 1, 0, 10, 3, 0, 0, 0, 0, 0, 1, 0]' : 0.178578}
{'[0, 0, 5, 3, 0, 6, 1, 1, 0, 10, 3, 0, 0, 0, 0, 0, 1, 0]' : 0.177992}
{'[0, 0, 5, 3, 0, 6, 1, 1, 0, 10, 3, 0, 0, 0, 0, 0, 1, 0]' : 0.177822}
{'[0, 0, 5, 3, 0, 6, 1, 1, 0, 10, 3, 0, 0, 0, 0, 0, 1, 0]' : 0.177806}
{'[0, 0, 5, 3, 0, 6, 1, 1, 0, 10, 3, 0, 0, 0, 0, 0, 1, 0]' : 0.177849}
{'[0, 0, 5, 3, 0, 6, 1, 1, 0, 10, 3, 0, 0, 0, 0, 0, 1, 0]' : 0.17791}
{'[0, 0, 5, 3, 0, 6, 1, 1, 0, 10, 3, 0, 0, 0, 0, 0, 1, 0]' : 0.177822}
{'[0, 0, 5, 3, 0, 6, 1, 1, 0, 10, 3, 0, 0, 0, 0, 0, 1, 0]' : 0.178301}
{'[0, 0, 5, 3, 0, 6, 1, 1, 0, 10, 3, 0, 0, 0, 0, 0, 1, 0]' : 0.178599}
{'[0, 0, 5, 3, 0, 6, 1, 1, 0, 10, 3, 0, 0, 0, 0, 0, 1, 0]' : 0.177802}
{'[0, 0, 5, 3, 0, 6, 1, 1, 0, 10, 3, 0, 0, 0, 0, 0, 1, 0]' : 0.177848}
{'[0, 0, 5, 3, 0, 6, 1, 1, 0, 10, 3, 0, 0, 0, 0, 0, 1, 0]' : 0.17782}
{'[0, 0, 5, 3, 0, 6, 1, 1, 0, 10, 3, 0, 0, 0, 0, 0, 1, 0]' : 0.178025}
{'[0, 0, 5, 3, 0, 6, 1, 1, 0, 10, 3, 0, 0, 0, 0, 0, 1, 0]' : 0.177827}
{'[0, 0, 5, 3, 0, 6, 1, 1, 0, 10, 3, 0, 0, 0, 0, 0, 1, 0]' : 0.177815}
{'[0, 0, 5, 3, 0, 6, 1, 1, 0, 10, 3, 0, 0, 0, 0, 0, 1, 0]' : 0.177858}
{'[0, 0, 5, 3, 0, 6, 1, 1, 0, 10, 3, 0, 0, 0, 0, 0, 1, 0]' : 0.178293}
{'[0, 0, 5, 3, 0, 6, 1, 1, 0, 10, 3, 0, 0, 0, 0, 0, 1, 0]' : 0.178586}
{'[0, 0, 5, 3, 0, 6, 1, 1, 0, 10, 3, 0, 0, 0, 0, 0, 1, 0]' : 0.17795}
{'[0, 0, 5, 3, 0, 6, 1, 1, 0, 10, 3, 0, 0, 0, 0, 0, 1, 0]' : 0.177851}
{'[0, 0, 5, 3, 0, 6, 1, 1, 0, 10, 3, 0, 0, 0, 0, 0, 1, 0]' : 0.177798}
{'[0, 0, 5, 3, 0, 6, 1, 1, 0, 10, 3, 0, 0, 0, 0, 0, 1, 0]' : 0.178103}
{'[0, 0, 5, 3, 0, 6, 1, 1, 0, 10, 3, 0, 0, 0, 0, 0, 1, 0]' : 0.177921}
{'[0, 0, 5, 3, 0, 6, 1, 1, 0, 10, 3, 0, 0, 0, 0, 0, 1, 0]' : 0.178021}

out:
 ["{'[0, 0, 5, 3, 0, 6, 1, 1, 0, 10, 3, 0, 0, 0, 0, 0, 1, 0]' : 0.211459}", "{'[0, 0, 5, 3, 0, 6, 1, 1, 0, 10, 3, 0, 0, 0, 0, 0, 1, 0]' : 0.195445}", "{'[0, 0, 5, 3, 0, 6, 1, 1, 0, 10, 3, 0, 0, 0, 0, 0, 1, 0]' : 0.177891}", "{'[0, 0, 5, 3, 0, 6, 1, 1, 0, 10, 3, 0, 0, 0, 0, 0, 1, 0]' : 0.177809}", "{'[0, 0, 5, 3, 0, 6, 1, 1, 0, 10, 3, 0, 0, 0, 0, 0, 1, 0]' : 0.177803}", "{'[0, 0, 5, 3, 0, 6, 1, 1, 0, 10, 3, 0, 0, 0, 0, 0, 1, 0]' : 0.17824}", "{'[0, 0, 5, 3, 0, 6, 1, 1, 0, 10, 3, 0, 0, 0, 0, 0, 1, 0]' : 0.178578}", "{'[0, 0, 5, 3, 0, 6, 1, 1, 0, 10, 3, 0, 0, 0, 0, 0, 1, 0]' : 0.177992}", "{'[0, 0, 5, 3, 0, 6, 1, 1, 0, 10, 3, 0, 0, 0, 0, 0, 1, 0]' : 0.177822}", "{'[0, 0, 5, 3, 0, 6, 1, 1, 0, 10, 3, 0, 0, 0, 0, 0, 1, 0]' : 0.177806}", "{'[0, 0, 5, 3, 0, 6, 1, 1, 0, 10, 3, 0, 0, 0, 0, 0, 1, 0]' : 0.177849}", "{'[0, 0, 5, 3, 0, 6, 1, 1, 0, 10, 3, 0, 0, 0, 0, 0, 1, 0]' : 0.17791}", "{'[0, 0, 5, 3, 0, 6, 1, 1, 0, 10, 3, 0, 0, 0, 0, 0, 1, 0]' : 0.177822}", "{'[0, 0, 5, 3, 0, 6, 1, 1, 0, 10, 3, 0, 0, 0, 0, 0, 1, 0]' : 0.178301}", "{'[0, 0, 5, 3, 0, 6, 1, 1, 0, 10, 3, 0, 0, 0, 0, 0, 1, 0]' : 0.178599}", "{'[0, 0, 5, 3, 0, 6, 1, 1, 0, 10, 3, 0, 0, 0, 0, 0, 1, 0]' : 0.177802}", "{'[0, 0, 5, 3, 0, 6, 1, 1, 0, 10, 3, 0, 0, 0, 0, 0, 1, 0]' : 0.177848}", "{'[0, 0, 5, 3, 0, 6, 1, 1, 0, 10, 3, 0, 0, 0, 0, 0, 1, 0]' : 0.17782}", "{'[0, 0, 5, 3, 0, 6, 1, 1, 0, 10, 3, 0, 0, 0, 0, 0, 1, 0]' : 0.178025}", "{'[0, 0, 5, 3, 0, 6, 1, 1, 0, 10, 3, 0, 0, 0, 0, 0, 1, 0]' : 0.177827}", "{'[0, 0, 5, 3, 0, 6, 1, 1, 0, 10, 3, 0, 0, 0, 0, 0, 1, 0]' : 0.177815}", "{'[0, 0, 5, 3, 0, 6, 1, 1, 0, 10, 3, 0, 0, 0, 0, 0, 1, 0]' : 0.177858}", "{'[0, 0, 5, 3, 0, 6, 1, 1, 0, 10, 3, 0, 0, 0, 0, 0, 1, 0]' : 0.178293}", "{'[0, 0, 5, 3, 0, 6, 1, 1, 0, 10, 3, 0, 0, 0, 0, 0, 1, 0]' : 0.178586}", "{'[0, 0, 5, 3, 0, 6, 1, 1, 0, 10, 3, 0, 0, 0, 0, 0, 1, 0]' : 0.17795}", "{'[0, 0, 5, 3, 0, 6, 1, 1, 0, 10, 3, 0, 0, 0, 0, 0, 1, 0]' : 0.177851}", "{'[0, 0, 5, 3, 0, 6, 1, 1, 0, 10, 3, 0, 0, 0, 0, 0, 1, 0]' : 0.177798}", "{'[0, 0, 5, 3, 0, 6, 1, 1, 0, 10, 3, 0, 0, 0, 0, 0, 1, 0]' : 0.178103}", "{'[0, 0, 5, 3, 0, 6, 1, 1, 0, 10, 3, 0, 0, 0, 0, 0, 1, 0]' : 0.177921}", "{'[0, 0, 5, 3, 0, 6, 1, 1, 0, 10, 3, 0, 0, 0, 0, 0, 1, 0]' : 0.178021}"]
returning from 'run': {'[0, 0, 5, 3, 0, 6, 1, 1, 0, 10, 3, 0, 0, 0, 0, 0, 1, 0]': ([0.211459, 0.195445, 0.177891, 0.177809, 0.177803, 0.17824, 0.178578, 0.177992, 0.177822, 0.177806, 0.177849, 0.17791, 0.177822, 0.178301, 0.178599, 0.177802, 0.177848, 0.17782, 0.178025, 0.177827, 0.177815, 0.177858, 0.178293, 0.178586, 0.17795, 0.177851, 0.177798, 0.178103, 0.177921, 0.178021], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 5, 3, 0, 6, 1, 1, 0, 10, 3, 0, 0, 0, 0, 0, 1, 0]': ([0.211459, 0.195445, 0.177891, 0.177809, 0.177803, 0.17824, 0.178578, 0.177992, 0.177822, 0.177806, 0.177849, 0.17791, 0.177822, 0.178301, 0.178599, 0.177802, 0.177848, 0.17782, 0.178025, 0.177827, 0.177815, 0.177858, 0.178293, 0.178586, 0.17795, 0.177851, 0.177798, 0.178103, 0.177921, 0.178021], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = iii
Code stats:
        Number of loops: 	181
        Max loop nest depth: 	5
        Additions: 		17282
        Multiplications: 	3780
        Divisions: 		0
        Logical: 		0
        Reads: 			24606
        Writes: 		2411
        Comparisons:		181
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest16.exe __orio_perftest16.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest16.exe  
Program Test Output: 
{'[6, 1, 3, 4, 2, 2, 1, 1, 29, 29, 0, 27, 2, 0, 0, 0, 0, 0]' : 0.226765}
{'[6, 1, 3, 4, 2, 2, 1, 1, 29, 29, 0, 27, 2, 0, 0, 0, 0, 0]' : 0.220236}
{'[6, 1, 3, 4, 2, 2, 1, 1, 29, 29, 0, 27, 2, 0, 0, 0, 0, 0]' : 0.226106}
{'[6, 1, 3, 4, 2, 2, 1, 1, 29, 29, 0, 27, 2, 0, 0, 0, 0, 0]' : 0.23112}
{'[6, 1, 3, 4, 2, 2, 1, 1, 29, 29, 0, 27, 2, 0, 0, 0, 0, 0]' : 0.223583}
{'[6, 1, 3, 4, 2, 2, 1, 1, 29, 29, 0, 27, 2, 0, 0, 0, 0, 0]' : 0.22055}
{'[6, 1, 3, 4, 2, 2, 1, 1, 29, 29, 0, 27, 2, 0, 0, 0, 0, 0]' : 0.220415}
{'[6, 1, 3, 4, 2, 2, 1, 1, 29, 29, 0, 27, 2, 0, 0, 0, 0, 0]' : 0.226453}
{'[6, 1, 3, 4, 2, 2, 1, 1, 29, 29, 0, 27, 2, 0, 0, 0, 0, 0]' : 0.223561}
{'[6, 1, 3, 4, 2, 2, 1, 1, 29, 29, 0, 27, 2, 0, 0, 0, 0, 0]' : 0.221448}
{'[6, 1, 3, 4, 2, 2, 1, 1, 29, 29, 0, 27, 2, 0, 0, 0, 0, 0]' : 0.220216}
{'[6, 1, 3, 4, 2, 2, 1, 1, 29, 29, 0, 27, 2, 0, 0, 0, 0, 0]' : 0.226991}
{'[6, 1, 3, 4, 2, 2, 1, 1, 29, 29, 0, 27, 2, 0, 0, 0, 0, 0]' : 0.226587}
{'[6, 1, 3, 4, 2, 2, 1, 1, 29, 29, 0, 27, 2, 0, 0, 0, 0, 0]' : 0.219328}
{'[6, 1, 3, 4, 2, 2, 1, 1, 29, 29, 0, 27, 2, 0, 0, 0, 0, 0]' : 0.219744}
{'[6, 1, 3, 4, 2, 2, 1, 1, 29, 29, 0, 27, 2, 0, 0, 0, 0, 0]' : 0.224262}
{'[6, 1, 3, 4, 2, 2, 1, 1, 29, 29, 0, 27, 2, 0, 0, 0, 0, 0]' : 0.223341}
{'[6, 1, 3, 4, 2, 2, 1, 1, 29, 29, 0, 27, 2, 0, 0, 0, 0, 0]' : 0.223976}
{'[6, 1, 3, 4, 2, 2, 1, 1, 29, 29, 0, 27, 2, 0, 0, 0, 0, 0]' : 0.222265}
{'[6, 1, 3, 4, 2, 2, 1, 1, 29, 29, 0, 27, 2, 0, 0, 0, 0, 0]' : 0.22615}
{'[6, 1, 3, 4, 2, 2, 1, 1, 29, 29, 0, 27, 2, 0, 0, 0, 0, 0]' : 0.223324}
{'[6, 1, 3, 4, 2, 2, 1, 1, 29, 29, 0, 27, 2, 0, 0, 0, 0, 0]' : 0.220816}
{'[6, 1, 3, 4, 2, 2, 1, 1, 29, 29, 0, 27, 2, 0, 0, 0, 0, 0]' : 0.217641}
{'[6, 1, 3, 4, 2, 2, 1, 1, 29, 29, 0, 27, 2, 0, 0, 0, 0, 0]' : 0.227371}
{'[6, 1, 3, 4, 2, 2, 1, 1, 29, 29, 0, 27, 2, 0, 0, 0, 0, 0]' : 0.220402}
{'[6, 1, 3, 4, 2, 2, 1, 1, 29, 29, 0, 27, 2, 0, 0, 0, 0, 0]' : 0.222542}
{'[6, 1, 3, 4, 2, 2, 1, 1, 29, 29, 0, 27, 2, 0, 0, 0, 0, 0]' : 0.222756}
{'[6, 1, 3, 4, 2, 2, 1, 1, 29, 29, 0, 27, 2, 0, 0, 0, 0, 0]' : 0.224596}
{'[6, 1, 3, 4, 2, 2, 1, 1, 29, 29, 0, 27, 2, 0, 0, 0, 0, 0]' : 0.223712}
{'[6, 1, 3, 4, 2, 2, 1, 1, 29, 29, 0, 27, 2, 0, 0, 0, 0, 0]' : 0.220004}

out:
 ["{'[6, 1, 3, 4, 2, 2, 1, 1, 29, 29, 0, 27, 2, 0, 0, 0, 0, 0]' : 0.226765}", "{'[6, 1, 3, 4, 2, 2, 1, 1, 29, 29, 0, 27, 2, 0, 0, 0, 0, 0]' : 0.220236}", "{'[6, 1, 3, 4, 2, 2, 1, 1, 29, 29, 0, 27, 2, 0, 0, 0, 0, 0]' : 0.226106}", "{'[6, 1, 3, 4, 2, 2, 1, 1, 29, 29, 0, 27, 2, 0, 0, 0, 0, 0]' : 0.23112}", "{'[6, 1, 3, 4, 2, 2, 1, 1, 29, 29, 0, 27, 2, 0, 0, 0, 0, 0]' : 0.223583}", "{'[6, 1, 3, 4, 2, 2, 1, 1, 29, 29, 0, 27, 2, 0, 0, 0, 0, 0]' : 0.22055}", "{'[6, 1, 3, 4, 2, 2, 1, 1, 29, 29, 0, 27, 2, 0, 0, 0, 0, 0]' : 0.220415}", "{'[6, 1, 3, 4, 2, 2, 1, 1, 29, 29, 0, 27, 2, 0, 0, 0, 0, 0]' : 0.226453}", "{'[6, 1, 3, 4, 2, 2, 1, 1, 29, 29, 0, 27, 2, 0, 0, 0, 0, 0]' : 0.223561}", "{'[6, 1, 3, 4, 2, 2, 1, 1, 29, 29, 0, 27, 2, 0, 0, 0, 0, 0]' : 0.221448}", "{'[6, 1, 3, 4, 2, 2, 1, 1, 29, 29, 0, 27, 2, 0, 0, 0, 0, 0]' : 0.220216}", "{'[6, 1, 3, 4, 2, 2, 1, 1, 29, 29, 0, 27, 2, 0, 0, 0, 0, 0]' : 0.226991}", "{'[6, 1, 3, 4, 2, 2, 1, 1, 29, 29, 0, 27, 2, 0, 0, 0, 0, 0]' : 0.226587}", "{'[6, 1, 3, 4, 2, 2, 1, 1, 29, 29, 0, 27, 2, 0, 0, 0, 0, 0]' : 0.219328}", "{'[6, 1, 3, 4, 2, 2, 1, 1, 29, 29, 0, 27, 2, 0, 0, 0, 0, 0]' : 0.219744}", "{'[6, 1, 3, 4, 2, 2, 1, 1, 29, 29, 0, 27, 2, 0, 0, 0, 0, 0]' : 0.224262}", "{'[6, 1, 3, 4, 2, 2, 1, 1, 29, 29, 0, 27, 2, 0, 0, 0, 0, 0]' : 0.223341}", "{'[6, 1, 3, 4, 2, 2, 1, 1, 29, 29, 0, 27, 2, 0, 0, 0, 0, 0]' : 0.223976}", "{'[6, 1, 3, 4, 2, 2, 1, 1, 29, 29, 0, 27, 2, 0, 0, 0, 0, 0]' : 0.222265}", "{'[6, 1, 3, 4, 2, 2, 1, 1, 29, 29, 0, 27, 2, 0, 0, 0, 0, 0]' : 0.22615}", "{'[6, 1, 3, 4, 2, 2, 1, 1, 29, 29, 0, 27, 2, 0, 0, 0, 0, 0]' : 0.223324}", "{'[6, 1, 3, 4, 2, 2, 1, 1, 29, 29, 0, 27, 2, 0, 0, 0, 0, 0]' : 0.220816}", "{'[6, 1, 3, 4, 2, 2, 1, 1, 29, 29, 0, 27, 2, 0, 0, 0, 0, 0]' : 0.217641}", "{'[6, 1, 3, 4, 2, 2, 1, 1, 29, 29, 0, 27, 2, 0, 0, 0, 0, 0]' : 0.227371}", "{'[6, 1, 3, 4, 2, 2, 1, 1, 29, 29, 0, 27, 2, 0, 0, 0, 0, 0]' : 0.220402}", "{'[6, 1, 3, 4, 2, 2, 1, 1, 29, 29, 0, 27, 2, 0, 0, 0, 0, 0]' : 0.222542}", "{'[6, 1, 3, 4, 2, 2, 1, 1, 29, 29, 0, 27, 2, 0, 0, 0, 0, 0]' : 0.222756}", "{'[6, 1, 3, 4, 2, 2, 1, 1, 29, 29, 0, 27, 2, 0, 0, 0, 0, 0]' : 0.224596}", "{'[6, 1, 3, 4, 2, 2, 1, 1, 29, 29, 0, 27, 2, 0, 0, 0, 0, 0]' : 0.223712}", "{'[6, 1, 3, 4, 2, 2, 1, 1, 29, 29, 0, 27, 2, 0, 0, 0, 0, 0]' : 0.220004}"]
returning from 'run': {'[6, 1, 3, 4, 2, 2, 1, 1, 29, 29, 0, 27, 2, 0, 0, 0, 0, 0]': ([0.226765, 0.220236, 0.226106, 0.23112, 0.223583, 0.22055, 0.220415, 0.226453, 0.223561, 0.221448, 0.220216, 0.226991, 0.226587, 0.219328, 0.219744, 0.224262, 0.223341, 0.223976, 0.222265, 0.22615, 0.223324, 0.220816, 0.217641, 0.227371, 0.220402, 0.222542, 0.222756, 0.224596, 0.223712, 0.220004], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 1, 3, 4, 2, 2, 1, 1, 29, 29, 0, 27, 2, 0, 0, 0, 0, 0]': ([0.226765, 0.220236, 0.226106, 0.23112, 0.223583, 0.22055, 0.220415, 0.226453, 0.223561, 0.221448, 0.220216, 0.226991, 0.226587, 0.219328, 0.219744, 0.224262, 0.223341, 0.223976, 0.222265, 0.22615, 0.223324, 0.220816, 0.217641, 0.227371, 0.220402, 0.222542, 0.222756, 0.224596, 0.223712, 0.220004], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	27
        Max loop nest depth: 	5
        Additions: 		13338
        Multiplications: 	3968
        Divisions: 		0
        Logical: 		0
        Reads: 			20175
        Writes: 		2111
        Comparisons:		27
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest17.exe __orio_perftest17.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest17.exe  
Program Test Output: 
{'[3, 5, 1, 0, 6, 5, 0, 0, 25, 28, 29, 0, 2, 0, 0, 0, 1, 1]' : 0.278928}
{'[3, 5, 1, 0, 6, 5, 0, 0, 25, 28, 29, 0, 2, 0, 0, 0, 1, 1]' : 0.277529}
{'[3, 5, 1, 0, 6, 5, 0, 0, 25, 28, 29, 0, 2, 0, 0, 0, 1, 1]' : 0.278205}
{'[3, 5, 1, 0, 6, 5, 0, 0, 25, 28, 29, 0, 2, 0, 0, 0, 1, 1]' : 0.27724}
{'[3, 5, 1, 0, 6, 5, 0, 0, 25, 28, 29, 0, 2, 0, 0, 0, 1, 1]' : 0.277008}
{'[3, 5, 1, 0, 6, 5, 0, 0, 25, 28, 29, 0, 2, 0, 0, 0, 1, 1]' : 0.277581}
{'[3, 5, 1, 0, 6, 5, 0, 0, 25, 28, 29, 0, 2, 0, 0, 0, 1, 1]' : 0.276712}
{'[3, 5, 1, 0, 6, 5, 0, 0, 25, 28, 29, 0, 2, 0, 0, 0, 1, 1]' : 0.275977}
{'[3, 5, 1, 0, 6, 5, 0, 0, 25, 28, 29, 0, 2, 0, 0, 0, 1, 1]' : 0.278534}
{'[3, 5, 1, 0, 6, 5, 0, 0, 25, 28, 29, 0, 2, 0, 0, 0, 1, 1]' : 0.277872}
{'[3, 5, 1, 0, 6, 5, 0, 0, 25, 28, 29, 0, 2, 0, 0, 0, 1, 1]' : 0.278248}
{'[3, 5, 1, 0, 6, 5, 0, 0, 25, 28, 29, 0, 2, 0, 0, 0, 1, 1]' : 0.274726}
{'[3, 5, 1, 0, 6, 5, 0, 0, 25, 28, 29, 0, 2, 0, 0, 0, 1, 1]' : 0.276025}
{'[3, 5, 1, 0, 6, 5, 0, 0, 25, 28, 29, 0, 2, 0, 0, 0, 1, 1]' : 0.277365}
{'[3, 5, 1, 0, 6, 5, 0, 0, 25, 28, 29, 0, 2, 0, 0, 0, 1, 1]' : 0.278998}
{'[3, 5, 1, 0, 6, 5, 0, 0, 25, 28, 29, 0, 2, 0, 0, 0, 1, 1]' : 0.281568}
{'[3, 5, 1, 0, 6, 5, 0, 0, 25, 28, 29, 0, 2, 0, 0, 0, 1, 1]' : 0.27606}
{'[3, 5, 1, 0, 6, 5, 0, 0, 25, 28, 29, 0, 2, 0, 0, 0, 1, 1]' : 0.278374}
{'[3, 5, 1, 0, 6, 5, 0, 0, 25, 28, 29, 0, 2, 0, 0, 0, 1, 1]' : 0.277589}
{'[3, 5, 1, 0, 6, 5, 0, 0, 25, 28, 29, 0, 2, 0, 0, 0, 1, 1]' : 0.276494}
{'[3, 5, 1, 0, 6, 5, 0, 0, 25, 28, 29, 0, 2, 0, 0, 0, 1, 1]' : 0.277672}
{'[3, 5, 1, 0, 6, 5, 0, 0, 25, 28, 29, 0, 2, 0, 0, 0, 1, 1]' : 0.279009}
{'[3, 5, 1, 0, 6, 5, 0, 0, 25, 28, 29, 0, 2, 0, 0, 0, 1, 1]' : 0.278896}
{'[3, 5, 1, 0, 6, 5, 0, 0, 25, 28, 29, 0, 2, 0, 0, 0, 1, 1]' : 0.276378}
{'[3, 5, 1, 0, 6, 5, 0, 0, 25, 28, 29, 0, 2, 0, 0, 0, 1, 1]' : 0.277946}
{'[3, 5, 1, 0, 6, 5, 0, 0, 25, 28, 29, 0, 2, 0, 0, 0, 1, 1]' : 0.278013}
{'[3, 5, 1, 0, 6, 5, 0, 0, 25, 28, 29, 0, 2, 0, 0, 0, 1, 1]' : 0.279675}
{'[3, 5, 1, 0, 6, 5, 0, 0, 25, 28, 29, 0, 2, 0, 0, 0, 1, 1]' : 0.278038}
{'[3, 5, 1, 0, 6, 5, 0, 0, 25, 28, 29, 0, 2, 0, 0, 0, 1, 1]' : 0.280762}
{'[3, 5, 1, 0, 6, 5, 0, 0, 25, 28, 29, 0, 2, 0, 0, 0, 1, 1]' : 0.278207}

out:
 ["{'[3, 5, 1, 0, 6, 5, 0, 0, 25, 28, 29, 0, 2, 0, 0, 0, 1, 1]' : 0.278928}", "{'[3, 5, 1, 0, 6, 5, 0, 0, 25, 28, 29, 0, 2, 0, 0, 0, 1, 1]' : 0.277529}", "{'[3, 5, 1, 0, 6, 5, 0, 0, 25, 28, 29, 0, 2, 0, 0, 0, 1, 1]' : 0.278205}", "{'[3, 5, 1, 0, 6, 5, 0, 0, 25, 28, 29, 0, 2, 0, 0, 0, 1, 1]' : 0.27724}", "{'[3, 5, 1, 0, 6, 5, 0, 0, 25, 28, 29, 0, 2, 0, 0, 0, 1, 1]' : 0.277008}", "{'[3, 5, 1, 0, 6, 5, 0, 0, 25, 28, 29, 0, 2, 0, 0, 0, 1, 1]' : 0.277581}", "{'[3, 5, 1, 0, 6, 5, 0, 0, 25, 28, 29, 0, 2, 0, 0, 0, 1, 1]' : 0.276712}", "{'[3, 5, 1, 0, 6, 5, 0, 0, 25, 28, 29, 0, 2, 0, 0, 0, 1, 1]' : 0.275977}", "{'[3, 5, 1, 0, 6, 5, 0, 0, 25, 28, 29, 0, 2, 0, 0, 0, 1, 1]' : 0.278534}", "{'[3, 5, 1, 0, 6, 5, 0, 0, 25, 28, 29, 0, 2, 0, 0, 0, 1, 1]' : 0.277872}", "{'[3, 5, 1, 0, 6, 5, 0, 0, 25, 28, 29, 0, 2, 0, 0, 0, 1, 1]' : 0.278248}", "{'[3, 5, 1, 0, 6, 5, 0, 0, 25, 28, 29, 0, 2, 0, 0, 0, 1, 1]' : 0.274726}", "{'[3, 5, 1, 0, 6, 5, 0, 0, 25, 28, 29, 0, 2, 0, 0, 0, 1, 1]' : 0.276025}", "{'[3, 5, 1, 0, 6, 5, 0, 0, 25, 28, 29, 0, 2, 0, 0, 0, 1, 1]' : 0.277365}", "{'[3, 5, 1, 0, 6, 5, 0, 0, 25, 28, 29, 0, 2, 0, 0, 0, 1, 1]' : 0.278998}", "{'[3, 5, 1, 0, 6, 5, 0, 0, 25, 28, 29, 0, 2, 0, 0, 0, 1, 1]' : 0.281568}", "{'[3, 5, 1, 0, 6, 5, 0, 0, 25, 28, 29, 0, 2, 0, 0, 0, 1, 1]' : 0.27606}", "{'[3, 5, 1, 0, 6, 5, 0, 0, 25, 28, 29, 0, 2, 0, 0, 0, 1, 1]' : 0.278374}", "{'[3, 5, 1, 0, 6, 5, 0, 0, 25, 28, 29, 0, 2, 0, 0, 0, 1, 1]' : 0.277589}", "{'[3, 5, 1, 0, 6, 5, 0, 0, 25, 28, 29, 0, 2, 0, 0, 0, 1, 1]' : 0.276494}", "{'[3, 5, 1, 0, 6, 5, 0, 0, 25, 28, 29, 0, 2, 0, 0, 0, 1, 1]' : 0.277672}", "{'[3, 5, 1, 0, 6, 5, 0, 0, 25, 28, 29, 0, 2, 0, 0, 0, 1, 1]' : 0.279009}", "{'[3, 5, 1, 0, 6, 5, 0, 0, 25, 28, 29, 0, 2, 0, 0, 0, 1, 1]' : 0.278896}", "{'[3, 5, 1, 0, 6, 5, 0, 0, 25, 28, 29, 0, 2, 0, 0, 0, 1, 1]' : 0.276378}", "{'[3, 5, 1, 0, 6, 5, 0, 0, 25, 28, 29, 0, 2, 0, 0, 0, 1, 1]' : 0.277946}", "{'[3, 5, 1, 0, 6, 5, 0, 0, 25, 28, 29, 0, 2, 0, 0, 0, 1, 1]' : 0.278013}", "{'[3, 5, 1, 0, 6, 5, 0, 0, 25, 28, 29, 0, 2, 0, 0, 0, 1, 1]' : 0.279675}", "{'[3, 5, 1, 0, 6, 5, 0, 0, 25, 28, 29, 0, 2, 0, 0, 0, 1, 1]' : 0.278038}", "{'[3, 5, 1, 0, 6, 5, 0, 0, 25, 28, 29, 0, 2, 0, 0, 0, 1, 1]' : 0.280762}", "{'[3, 5, 1, 0, 6, 5, 0, 0, 25, 28, 29, 0, 2, 0, 0, 0, 1, 1]' : 0.278207}"]
returning from 'run': {'[3, 5, 1, 0, 6, 5, 0, 0, 25, 28, 29, 0, 2, 0, 0, 0, 1, 1]': ([0.278928, 0.277529, 0.278205, 0.27724, 0.277008, 0.277581, 0.276712, 0.275977, 0.278534, 0.277872, 0.278248, 0.274726, 0.276025, 0.277365, 0.278998, 0.281568, 0.27606, 0.278374, 0.277589, 0.276494, 0.277672, 0.279009, 0.278896, 0.276378, 0.277946, 0.278013, 0.279675, 0.278038, 0.280762, 0.278207], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 5, 1, 0, 6, 5, 0, 0, 25, 28, 29, 0, 2, 0, 0, 0, 1, 1]': ([0.278928, 0.277529, 0.278205, 0.27724, 0.277008, 0.277581, 0.276712, 0.275977, 0.278534, 0.277872, 0.278248, 0.274726, 0.276025, 0.277365, 0.278998, 0.281568, 0.27606, 0.278374, 0.277589, 0.276494, 0.277672, 0.279009, 0.278896, 0.276378, 0.277946, 0.278013, 0.279675, 0.278038, 0.280762, 0.278207], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	23
        Max loop nest depth: 	5
        Additions: 		1301
        Multiplications: 	558
        Divisions: 		0
        Logical: 		0
        Reads: 			2518
        Writes: 		434
        Comparisons:		23
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest18.exe __orio_perftest18.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest18.exe  
Program Test Output: 
{'[0, 0, 6, 2, 6, 6, 1, 1, 18, 0, 21, 25, 1, 0, 1, 1, 0, 1]' : 0.121843}
{'[0, 0, 6, 2, 6, 6, 1, 1, 18, 0, 21, 25, 1, 0, 1, 1, 0, 1]' : 0.12182}
{'[0, 0, 6, 2, 6, 6, 1, 1, 18, 0, 21, 25, 1, 0, 1, 1, 0, 1]' : 0.122105}
{'[0, 0, 6, 2, 6, 6, 1, 1, 18, 0, 21, 25, 1, 0, 1, 1, 0, 1]' : 0.121706}
{'[0, 0, 6, 2, 6, 6, 1, 1, 18, 0, 21, 25, 1, 0, 1, 1, 0, 1]' : 0.107861}
{'[0, 0, 6, 2, 6, 6, 1, 1, 18, 0, 21, 25, 1, 0, 1, 1, 0, 1]' : 0.103541}
{'[0, 0, 6, 2, 6, 6, 1, 1, 18, 0, 21, 25, 1, 0, 1, 1, 0, 1]' : 0.103645}
{'[0, 0, 6, 2, 6, 6, 1, 1, 18, 0, 21, 25, 1, 0, 1, 1, 0, 1]' : 0.106183}
{'[0, 0, 6, 2, 6, 6, 1, 1, 18, 0, 21, 25, 1, 0, 1, 1, 0, 1]' : 0.105464}
{'[0, 0, 6, 2, 6, 6, 1, 1, 18, 0, 21, 25, 1, 0, 1, 1, 0, 1]' : 0.103559}
{'[0, 0, 6, 2, 6, 6, 1, 1, 18, 0, 21, 25, 1, 0, 1, 1, 0, 1]' : 0.103679}
{'[0, 0, 6, 2, 6, 6, 1, 1, 18, 0, 21, 25, 1, 0, 1, 1, 0, 1]' : 0.104229}
{'[0, 0, 6, 2, 6, 6, 1, 1, 18, 0, 21, 25, 1, 0, 1, 1, 0, 1]' : 0.107568}
{'[0, 0, 6, 2, 6, 6, 1, 1, 18, 0, 21, 25, 1, 0, 1, 1, 0, 1]' : 0.106486}
{'[0, 0, 6, 2, 6, 6, 1, 1, 18, 0, 21, 25, 1, 0, 1, 1, 0, 1]' : 0.106846}
{'[0, 0, 6, 2, 6, 6, 1, 1, 18, 0, 21, 25, 1, 0, 1, 1, 0, 1]' : 0.107038}
{'[0, 0, 6, 2, 6, 6, 1, 1, 18, 0, 21, 25, 1, 0, 1, 1, 0, 1]' : 0.107773}
{'[0, 0, 6, 2, 6, 6, 1, 1, 18, 0, 21, 25, 1, 0, 1, 1, 0, 1]' : 0.109568}
{'[0, 0, 6, 2, 6, 6, 1, 1, 18, 0, 21, 25, 1, 0, 1, 1, 0, 1]' : 0.109612}
{'[0, 0, 6, 2, 6, 6, 1, 1, 18, 0, 21, 25, 1, 0, 1, 1, 0, 1]' : 0.107645}
{'[0, 0, 6, 2, 6, 6, 1, 1, 18, 0, 21, 25, 1, 0, 1, 1, 0, 1]' : 0.106591}
{'[0, 0, 6, 2, 6, 6, 1, 1, 18, 0, 21, 25, 1, 0, 1, 1, 0, 1]' : 0.10971}
{'[0, 0, 6, 2, 6, 6, 1, 1, 18, 0, 21, 25, 1, 0, 1, 1, 0, 1]' : 0.109648}
{'[0, 0, 6, 2, 6, 6, 1, 1, 18, 0, 21, 25, 1, 0, 1, 1, 0, 1]' : 0.109718}
{'[0, 0, 6, 2, 6, 6, 1, 1, 18, 0, 21, 25, 1, 0, 1, 1, 0, 1]' : 0.109615}
{'[0, 0, 6, 2, 6, 6, 1, 1, 18, 0, 21, 25, 1, 0, 1, 1, 0, 1]' : 0.109647}
{'[0, 0, 6, 2, 6, 6, 1, 1, 18, 0, 21, 25, 1, 0, 1, 1, 0, 1]' : 0.109662}
{'[0, 0, 6, 2, 6, 6, 1, 1, 18, 0, 21, 25, 1, 0, 1, 1, 0, 1]' : 0.109585}
{'[0, 0, 6, 2, 6, 6, 1, 1, 18, 0, 21, 25, 1, 0, 1, 1, 0, 1]' : 0.109473}
{'[0, 0, 6, 2, 6, 6, 1, 1, 18, 0, 21, 25, 1, 0, 1, 1, 0, 1]' : 0.109584}

out:
 ["{'[0, 0, 6, 2, 6, 6, 1, 1, 18, 0, 21, 25, 1, 0, 1, 1, 0, 1]' : 0.121843}", "{'[0, 0, 6, 2, 6, 6, 1, 1, 18, 0, 21, 25, 1, 0, 1, 1, 0, 1]' : 0.12182}", "{'[0, 0, 6, 2, 6, 6, 1, 1, 18, 0, 21, 25, 1, 0, 1, 1, 0, 1]' : 0.122105}", "{'[0, 0, 6, 2, 6, 6, 1, 1, 18, 0, 21, 25, 1, 0, 1, 1, 0, 1]' : 0.121706}", "{'[0, 0, 6, 2, 6, 6, 1, 1, 18, 0, 21, 25, 1, 0, 1, 1, 0, 1]' : 0.107861}", "{'[0, 0, 6, 2, 6, 6, 1, 1, 18, 0, 21, 25, 1, 0, 1, 1, 0, 1]' : 0.103541}", "{'[0, 0, 6, 2, 6, 6, 1, 1, 18, 0, 21, 25, 1, 0, 1, 1, 0, 1]' : 0.103645}", "{'[0, 0, 6, 2, 6, 6, 1, 1, 18, 0, 21, 25, 1, 0, 1, 1, 0, 1]' : 0.106183}", "{'[0, 0, 6, 2, 6, 6, 1, 1, 18, 0, 21, 25, 1, 0, 1, 1, 0, 1]' : 0.105464}", "{'[0, 0, 6, 2, 6, 6, 1, 1, 18, 0, 21, 25, 1, 0, 1, 1, 0, 1]' : 0.103559}", "{'[0, 0, 6, 2, 6, 6, 1, 1, 18, 0, 21, 25, 1, 0, 1, 1, 0, 1]' : 0.103679}", "{'[0, 0, 6, 2, 6, 6, 1, 1, 18, 0, 21, 25, 1, 0, 1, 1, 0, 1]' : 0.104229}", "{'[0, 0, 6, 2, 6, 6, 1, 1, 18, 0, 21, 25, 1, 0, 1, 1, 0, 1]' : 0.107568}", "{'[0, 0, 6, 2, 6, 6, 1, 1, 18, 0, 21, 25, 1, 0, 1, 1, 0, 1]' : 0.106486}", "{'[0, 0, 6, 2, 6, 6, 1, 1, 18, 0, 21, 25, 1, 0, 1, 1, 0, 1]' : 0.106846}", "{'[0, 0, 6, 2, 6, 6, 1, 1, 18, 0, 21, 25, 1, 0, 1, 1, 0, 1]' : 0.107038}", "{'[0, 0, 6, 2, 6, 6, 1, 1, 18, 0, 21, 25, 1, 0, 1, 1, 0, 1]' : 0.107773}", "{'[0, 0, 6, 2, 6, 6, 1, 1, 18, 0, 21, 25, 1, 0, 1, 1, 0, 1]' : 0.109568}", "{'[0, 0, 6, 2, 6, 6, 1, 1, 18, 0, 21, 25, 1, 0, 1, 1, 0, 1]' : 0.109612}", "{'[0, 0, 6, 2, 6, 6, 1, 1, 18, 0, 21, 25, 1, 0, 1, 1, 0, 1]' : 0.107645}", "{'[0, 0, 6, 2, 6, 6, 1, 1, 18, 0, 21, 25, 1, 0, 1, 1, 0, 1]' : 0.106591}", "{'[0, 0, 6, 2, 6, 6, 1, 1, 18, 0, 21, 25, 1, 0, 1, 1, 0, 1]' : 0.10971}", "{'[0, 0, 6, 2, 6, 6, 1, 1, 18, 0, 21, 25, 1, 0, 1, 1, 0, 1]' : 0.109648}", "{'[0, 0, 6, 2, 6, 6, 1, 1, 18, 0, 21, 25, 1, 0, 1, 1, 0, 1]' : 0.109718}", "{'[0, 0, 6, 2, 6, 6, 1, 1, 18, 0, 21, 25, 1, 0, 1, 1, 0, 1]' : 0.109615}", "{'[0, 0, 6, 2, 6, 6, 1, 1, 18, 0, 21, 25, 1, 0, 1, 1, 0, 1]' : 0.109647}", "{'[0, 0, 6, 2, 6, 6, 1, 1, 18, 0, 21, 25, 1, 0, 1, 1, 0, 1]' : 0.109662}", "{'[0, 0, 6, 2, 6, 6, 1, 1, 18, 0, 21, 25, 1, 0, 1, 1, 0, 1]' : 0.109585}", "{'[0, 0, 6, 2, 6, 6, 1, 1, 18, 0, 21, 25, 1, 0, 1, 1, 0, 1]' : 0.109473}", "{'[0, 0, 6, 2, 6, 6, 1, 1, 18, 0, 21, 25, 1, 0, 1, 1, 0, 1]' : 0.109584}"]
returning from 'run': {'[0, 0, 6, 2, 6, 6, 1, 1, 18, 0, 21, 25, 1, 0, 1, 1, 0, 1]': ([0.121843, 0.12182, 0.122105, 0.121706, 0.107861, 0.103541, 0.103645, 0.106183, 0.105464, 0.103559, 0.103679, 0.104229, 0.107568, 0.106486, 0.106846, 0.107038, 0.107773, 0.109568, 0.109612, 0.107645, 0.106591, 0.10971, 0.109648, 0.109718, 0.109615, 0.109647, 0.109662, 0.109585, 0.109473, 0.109584], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 6, 2, 6, 6, 1, 1, 18, 0, 21, 25, 1, 0, 1, 1, 0, 1]': ([0.121843, 0.12182, 0.122105, 0.121706, 0.107861, 0.103541, 0.103645, 0.106183, 0.105464, 0.103559, 0.103679, 0.104229, 0.107568, 0.106486, 0.106846, 0.107038, 0.107773, 0.109568, 0.109612, 0.107645, 0.106591, 0.10971, 0.109648, 0.109718, 0.109615, 0.109647, 0.109662, 0.109585, 0.109473, 0.109584], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	43
        Max loop nest depth: 	6
        Additions: 		2993
        Multiplications: 	732
        Divisions: 		0
        Logical: 		0
        Reads: 			4679
        Writes: 		497
        Comparisons:		43
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest19.exe __orio_perftest19.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest19.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest19.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest19.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest19.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	41
        Max loop nest depth: 	5
        Additions: 		8380
        Multiplications: 	2160
        Divisions: 		0
        Logical: 		0
        Reads: 			12398
        Writes: 		1233
        Comparisons:		41
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest20.exe __orio_perftest20.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest20.exe  
Program Test Output: 
{'[1, 3, 6, 6, 1, 0, 1, 1, 28, 2, 27, 0, 2, 0, 0, 0, 1, 1]' : 0.211199}
{'[1, 3, 6, 6, 1, 0, 1, 1, 28, 2, 27, 0, 2, 0, 0, 0, 1, 1]' : 0.205234}
{'[1, 3, 6, 6, 1, 0, 1, 1, 28, 2, 27, 0, 2, 0, 0, 0, 1, 1]' : 0.208737}
{'[1, 3, 6, 6, 1, 0, 1, 1, 28, 2, 27, 0, 2, 0, 0, 0, 1, 1]' : 0.211228}
{'[1, 3, 6, 6, 1, 0, 1, 1, 28, 2, 27, 0, 2, 0, 0, 0, 1, 1]' : 0.211253}
{'[1, 3, 6, 6, 1, 0, 1, 1, 28, 2, 27, 0, 2, 0, 0, 0, 1, 1]' : 0.210968}
{'[1, 3, 6, 6, 1, 0, 1, 1, 28, 2, 27, 0, 2, 0, 0, 0, 1, 1]' : 0.209182}
{'[1, 3, 6, 6, 1, 0, 1, 1, 28, 2, 27, 0, 2, 0, 0, 0, 1, 1]' : 0.210394}
{'[1, 3, 6, 6, 1, 0, 1, 1, 28, 2, 27, 0, 2, 0, 0, 0, 1, 1]' : 0.211352}
{'[1, 3, 6, 6, 1, 0, 1, 1, 28, 2, 27, 0, 2, 0, 0, 0, 1, 1]' : 0.209001}
{'[1, 3, 6, 6, 1, 0, 1, 1, 28, 2, 27, 0, 2, 0, 0, 0, 1, 1]' : 0.21102}
{'[1, 3, 6, 6, 1, 0, 1, 1, 28, 2, 27, 0, 2, 0, 0, 0, 1, 1]' : 0.210906}
{'[1, 3, 6, 6, 1, 0, 1, 1, 28, 2, 27, 0, 2, 0, 0, 0, 1, 1]' : 0.211099}
{'[1, 3, 6, 6, 1, 0, 1, 1, 28, 2, 27, 0, 2, 0, 0, 0, 1, 1]' : 0.211396}
{'[1, 3, 6, 6, 1, 0, 1, 1, 28, 2, 27, 0, 2, 0, 0, 0, 1, 1]' : 0.210998}
{'[1, 3, 6, 6, 1, 0, 1, 1, 28, 2, 27, 0, 2, 0, 0, 0, 1, 1]' : 0.211021}
{'[1, 3, 6, 6, 1, 0, 1, 1, 28, 2, 27, 0, 2, 0, 0, 0, 1, 1]' : 0.202783}
{'[1, 3, 6, 6, 1, 0, 1, 1, 28, 2, 27, 0, 2, 0, 0, 0, 1, 1]' : 0.199151}
{'[1, 3, 6, 6, 1, 0, 1, 1, 28, 2, 27, 0, 2, 0, 0, 0, 1, 1]' : 0.199196}
{'[1, 3, 6, 6, 1, 0, 1, 1, 28, 2, 27, 0, 2, 0, 0, 0, 1, 1]' : 0.209249}
{'[1, 3, 6, 6, 1, 0, 1, 1, 28, 2, 27, 0, 2, 0, 0, 0, 1, 1]' : 0.210891}
{'[1, 3, 6, 6, 1, 0, 1, 1, 28, 2, 27, 0, 2, 0, 0, 0, 1, 1]' : 0.209995}
{'[1, 3, 6, 6, 1, 0, 1, 1, 28, 2, 27, 0, 2, 0, 0, 0, 1, 1]' : 0.204814}
{'[1, 3, 6, 6, 1, 0, 1, 1, 28, 2, 27, 0, 2, 0, 0, 0, 1, 1]' : 0.205396}
{'[1, 3, 6, 6, 1, 0, 1, 1, 28, 2, 27, 0, 2, 0, 0, 0, 1, 1]' : 0.208187}
{'[1, 3, 6, 6, 1, 0, 1, 1, 28, 2, 27, 0, 2, 0, 0, 0, 1, 1]' : 0.20432}
{'[1, 3, 6, 6, 1, 0, 1, 1, 28, 2, 27, 0, 2, 0, 0, 0, 1, 1]' : 0.208739}
{'[1, 3, 6, 6, 1, 0, 1, 1, 28, 2, 27, 0, 2, 0, 0, 0, 1, 1]' : 0.206273}
{'[1, 3, 6, 6, 1, 0, 1, 1, 28, 2, 27, 0, 2, 0, 0, 0, 1, 1]' : 0.206394}
{'[1, 3, 6, 6, 1, 0, 1, 1, 28, 2, 27, 0, 2, 0, 0, 0, 1, 1]' : 0.210949}

out:
 ["{'[1, 3, 6, 6, 1, 0, 1, 1, 28, 2, 27, 0, 2, 0, 0, 0, 1, 1]' : 0.211199}", "{'[1, 3, 6, 6, 1, 0, 1, 1, 28, 2, 27, 0, 2, 0, 0, 0, 1, 1]' : 0.205234}", "{'[1, 3, 6, 6, 1, 0, 1, 1, 28, 2, 27, 0, 2, 0, 0, 0, 1, 1]' : 0.208737}", "{'[1, 3, 6, 6, 1, 0, 1, 1, 28, 2, 27, 0, 2, 0, 0, 0, 1, 1]' : 0.211228}", "{'[1, 3, 6, 6, 1, 0, 1, 1, 28, 2, 27, 0, 2, 0, 0, 0, 1, 1]' : 0.211253}", "{'[1, 3, 6, 6, 1, 0, 1, 1, 28, 2, 27, 0, 2, 0, 0, 0, 1, 1]' : 0.210968}", "{'[1, 3, 6, 6, 1, 0, 1, 1, 28, 2, 27, 0, 2, 0, 0, 0, 1, 1]' : 0.209182}", "{'[1, 3, 6, 6, 1, 0, 1, 1, 28, 2, 27, 0, 2, 0, 0, 0, 1, 1]' : 0.210394}", "{'[1, 3, 6, 6, 1, 0, 1, 1, 28, 2, 27, 0, 2, 0, 0, 0, 1, 1]' : 0.211352}", "{'[1, 3, 6, 6, 1, 0, 1, 1, 28, 2, 27, 0, 2, 0, 0, 0, 1, 1]' : 0.209001}", "{'[1, 3, 6, 6, 1, 0, 1, 1, 28, 2, 27, 0, 2, 0, 0, 0, 1, 1]' : 0.21102}", "{'[1, 3, 6, 6, 1, 0, 1, 1, 28, 2, 27, 0, 2, 0, 0, 0, 1, 1]' : 0.210906}", "{'[1, 3, 6, 6, 1, 0, 1, 1, 28, 2, 27, 0, 2, 0, 0, 0, 1, 1]' : 0.211099}", "{'[1, 3, 6, 6, 1, 0, 1, 1, 28, 2, 27, 0, 2, 0, 0, 0, 1, 1]' : 0.211396}", "{'[1, 3, 6, 6, 1, 0, 1, 1, 28, 2, 27, 0, 2, 0, 0, 0, 1, 1]' : 0.210998}", "{'[1, 3, 6, 6, 1, 0, 1, 1, 28, 2, 27, 0, 2, 0, 0, 0, 1, 1]' : 0.211021}", "{'[1, 3, 6, 6, 1, 0, 1, 1, 28, 2, 27, 0, 2, 0, 0, 0, 1, 1]' : 0.202783}", "{'[1, 3, 6, 6, 1, 0, 1, 1, 28, 2, 27, 0, 2, 0, 0, 0, 1, 1]' : 0.199151}", "{'[1, 3, 6, 6, 1, 0, 1, 1, 28, 2, 27, 0, 2, 0, 0, 0, 1, 1]' : 0.199196}", "{'[1, 3, 6, 6, 1, 0, 1, 1, 28, 2, 27, 0, 2, 0, 0, 0, 1, 1]' : 0.209249}", "{'[1, 3, 6, 6, 1, 0, 1, 1, 28, 2, 27, 0, 2, 0, 0, 0, 1, 1]' : 0.210891}", "{'[1, 3, 6, 6, 1, 0, 1, 1, 28, 2, 27, 0, 2, 0, 0, 0, 1, 1]' : 0.209995}", "{'[1, 3, 6, 6, 1, 0, 1, 1, 28, 2, 27, 0, 2, 0, 0, 0, 1, 1]' : 0.204814}", "{'[1, 3, 6, 6, 1, 0, 1, 1, 28, 2, 27, 0, 2, 0, 0, 0, 1, 1]' : 0.205396}", "{'[1, 3, 6, 6, 1, 0, 1, 1, 28, 2, 27, 0, 2, 0, 0, 0, 1, 1]' : 0.208187}", "{'[1, 3, 6, 6, 1, 0, 1, 1, 28, 2, 27, 0, 2, 0, 0, 0, 1, 1]' : 0.20432}", "{'[1, 3, 6, 6, 1, 0, 1, 1, 28, 2, 27, 0, 2, 0, 0, 0, 1, 1]' : 0.208739}", "{'[1, 3, 6, 6, 1, 0, 1, 1, 28, 2, 27, 0, 2, 0, 0, 0, 1, 1]' : 0.206273}", "{'[1, 3, 6, 6, 1, 0, 1, 1, 28, 2, 27, 0, 2, 0, 0, 0, 1, 1]' : 0.206394}", "{'[1, 3, 6, 6, 1, 0, 1, 1, 28, 2, 27, 0, 2, 0, 0, 0, 1, 1]' : 0.210949}"]
returning from 'run': {'[1, 3, 6, 6, 1, 0, 1, 1, 28, 2, 27, 0, 2, 0, 0, 0, 1, 1]': ([0.211199, 0.205234, 0.208737, 0.211228, 0.211253, 0.210968, 0.209182, 0.210394, 0.211352, 0.209001, 0.21102, 0.210906, 0.211099, 0.211396, 0.210998, 0.211021, 0.202783, 0.199151, 0.199196, 0.209249, 0.210891, 0.209995, 0.204814, 0.205396, 0.208187, 0.20432, 0.208739, 0.206273, 0.206394, 0.210949], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 3, 6, 6, 1, 0, 1, 1, 28, 2, 27, 0, 2, 0, 0, 0, 1, 1]': ([0.211199, 0.205234, 0.208737, 0.211228, 0.211253, 0.210968, 0.209182, 0.210394, 0.211352, 0.209001, 0.21102, 0.210906, 0.211099, 0.211396, 0.210998, 0.211021, 0.202783, 0.199151, 0.199196, 0.209249, 0.210891, 0.209995, 0.204814, 0.205396, 0.208187, 0.20432, 0.208739, 0.206273, 0.206394, 0.210949], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	5
        Additions: 		2993
        Multiplications: 	792
        Divisions: 		0
        Logical: 		0
        Reads: 			4601
        Writes: 		462
        Comparisons:		22
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest21.exe __orio_perftest21.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest21.exe  
Program Test Output: 
{'[5, 0, 1, 4, 6, 0, 1, 1, 4, 0, 9, 0, 2, 0, 0, 0, 0, 1]' : 0.230498}
{'[5, 0, 1, 4, 6, 0, 1, 1, 4, 0, 9, 0, 2, 0, 0, 0, 0, 1]' : 0.229587}
{'[5, 0, 1, 4, 6, 0, 1, 1, 4, 0, 9, 0, 2, 0, 0, 0, 0, 1]' : 0.226848}
{'[5, 0, 1, 4, 6, 0, 1, 1, 4, 0, 9, 0, 2, 0, 0, 0, 0, 1]' : 0.22836}
{'[5, 0, 1, 4, 6, 0, 1, 1, 4, 0, 9, 0, 2, 0, 0, 0, 0, 1]' : 0.232052}
{'[5, 0, 1, 4, 6, 0, 1, 1, 4, 0, 9, 0, 2, 0, 0, 0, 0, 1]' : 0.230858}
{'[5, 0, 1, 4, 6, 0, 1, 1, 4, 0, 9, 0, 2, 0, 0, 0, 0, 1]' : 0.230309}
{'[5, 0, 1, 4, 6, 0, 1, 1, 4, 0, 9, 0, 2, 0, 0, 0, 0, 1]' : 0.227124}
{'[5, 0, 1, 4, 6, 0, 1, 1, 4, 0, 9, 0, 2, 0, 0, 0, 0, 1]' : 0.230294}
{'[5, 0, 1, 4, 6, 0, 1, 1, 4, 0, 9, 0, 2, 0, 0, 0, 0, 1]' : 0.230785}
{'[5, 0, 1, 4, 6, 0, 1, 1, 4, 0, 9, 0, 2, 0, 0, 0, 0, 1]' : 0.231331}
{'[5, 0, 1, 4, 6, 0, 1, 1, 4, 0, 9, 0, 2, 0, 0, 0, 0, 1]' : 0.231269}
{'[5, 0, 1, 4, 6, 0, 1, 1, 4, 0, 9, 0, 2, 0, 0, 0, 0, 1]' : 0.230844}
{'[5, 0, 1, 4, 6, 0, 1, 1, 4, 0, 9, 0, 2, 0, 0, 0, 0, 1]' : 0.23012}
{'[5, 0, 1, 4, 6, 0, 1, 1, 4, 0, 9, 0, 2, 0, 0, 0, 0, 1]' : 0.230307}
{'[5, 0, 1, 4, 6, 0, 1, 1, 4, 0, 9, 0, 2, 0, 0, 0, 0, 1]' : 0.230441}
{'[5, 0, 1, 4, 6, 0, 1, 1, 4, 0, 9, 0, 2, 0, 0, 0, 0, 1]' : 0.230727}
{'[5, 0, 1, 4, 6, 0, 1, 1, 4, 0, 9, 0, 2, 0, 0, 0, 0, 1]' : 0.23088}
{'[5, 0, 1, 4, 6, 0, 1, 1, 4, 0, 9, 0, 2, 0, 0, 0, 0, 1]' : 0.23111}
{'[5, 0, 1, 4, 6, 0, 1, 1, 4, 0, 9, 0, 2, 0, 0, 0, 0, 1]' : 0.230351}
{'[5, 0, 1, 4, 6, 0, 1, 1, 4, 0, 9, 0, 2, 0, 0, 0, 0, 1]' : 0.229093}
{'[5, 0, 1, 4, 6, 0, 1, 1, 4, 0, 9, 0, 2, 0, 0, 0, 0, 1]' : 0.228306}
{'[5, 0, 1, 4, 6, 0, 1, 1, 4, 0, 9, 0, 2, 0, 0, 0, 0, 1]' : 0.226451}
{'[5, 0, 1, 4, 6, 0, 1, 1, 4, 0, 9, 0, 2, 0, 0, 0, 0, 1]' : 0.230401}
{'[5, 0, 1, 4, 6, 0, 1, 1, 4, 0, 9, 0, 2, 0, 0, 0, 0, 1]' : 0.23063}
{'[5, 0, 1, 4, 6, 0, 1, 1, 4, 0, 9, 0, 2, 0, 0, 0, 0, 1]' : 0.230574}
{'[5, 0, 1, 4, 6, 0, 1, 1, 4, 0, 9, 0, 2, 0, 0, 0, 0, 1]' : 0.231028}
{'[5, 0, 1, 4, 6, 0, 1, 1, 4, 0, 9, 0, 2, 0, 0, 0, 0, 1]' : 0.230022}
{'[5, 0, 1, 4, 6, 0, 1, 1, 4, 0, 9, 0, 2, 0, 0, 0, 0, 1]' : 0.230194}
{'[5, 0, 1, 4, 6, 0, 1, 1, 4, 0, 9, 0, 2, 0, 0, 0, 0, 1]' : 0.230879}

out:
 ["{'[5, 0, 1, 4, 6, 0, 1, 1, 4, 0, 9, 0, 2, 0, 0, 0, 0, 1]' : 0.230498}", "{'[5, 0, 1, 4, 6, 0, 1, 1, 4, 0, 9, 0, 2, 0, 0, 0, 0, 1]' : 0.229587}", "{'[5, 0, 1, 4, 6, 0, 1, 1, 4, 0, 9, 0, 2, 0, 0, 0, 0, 1]' : 0.226848}", "{'[5, 0, 1, 4, 6, 0, 1, 1, 4, 0, 9, 0, 2, 0, 0, 0, 0, 1]' : 0.22836}", "{'[5, 0, 1, 4, 6, 0, 1, 1, 4, 0, 9, 0, 2, 0, 0, 0, 0, 1]' : 0.232052}", "{'[5, 0, 1, 4, 6, 0, 1, 1, 4, 0, 9, 0, 2, 0, 0, 0, 0, 1]' : 0.230858}", "{'[5, 0, 1, 4, 6, 0, 1, 1, 4, 0, 9, 0, 2, 0, 0, 0, 0, 1]' : 0.230309}", "{'[5, 0, 1, 4, 6, 0, 1, 1, 4, 0, 9, 0, 2, 0, 0, 0, 0, 1]' : 0.227124}", "{'[5, 0, 1, 4, 6, 0, 1, 1, 4, 0, 9, 0, 2, 0, 0, 0, 0, 1]' : 0.230294}", "{'[5, 0, 1, 4, 6, 0, 1, 1, 4, 0, 9, 0, 2, 0, 0, 0, 0, 1]' : 0.230785}", "{'[5, 0, 1, 4, 6, 0, 1, 1, 4, 0, 9, 0, 2, 0, 0, 0, 0, 1]' : 0.231331}", "{'[5, 0, 1, 4, 6, 0, 1, 1, 4, 0, 9, 0, 2, 0, 0, 0, 0, 1]' : 0.231269}", "{'[5, 0, 1, 4, 6, 0, 1, 1, 4, 0, 9, 0, 2, 0, 0, 0, 0, 1]' : 0.230844}", "{'[5, 0, 1, 4, 6, 0, 1, 1, 4, 0, 9, 0, 2, 0, 0, 0, 0, 1]' : 0.23012}", "{'[5, 0, 1, 4, 6, 0, 1, 1, 4, 0, 9, 0, 2, 0, 0, 0, 0, 1]' : 0.230307}", "{'[5, 0, 1, 4, 6, 0, 1, 1, 4, 0, 9, 0, 2, 0, 0, 0, 0, 1]' : 0.230441}", "{'[5, 0, 1, 4, 6, 0, 1, 1, 4, 0, 9, 0, 2, 0, 0, 0, 0, 1]' : 0.230727}", "{'[5, 0, 1, 4, 6, 0, 1, 1, 4, 0, 9, 0, 2, 0, 0, 0, 0, 1]' : 0.23088}", "{'[5, 0, 1, 4, 6, 0, 1, 1, 4, 0, 9, 0, 2, 0, 0, 0, 0, 1]' : 0.23111}", "{'[5, 0, 1, 4, 6, 0, 1, 1, 4, 0, 9, 0, 2, 0, 0, 0, 0, 1]' : 0.230351}", "{'[5, 0, 1, 4, 6, 0, 1, 1, 4, 0, 9, 0, 2, 0, 0, 0, 0, 1]' : 0.229093}", "{'[5, 0, 1, 4, 6, 0, 1, 1, 4, 0, 9, 0, 2, 0, 0, 0, 0, 1]' : 0.228306}", "{'[5, 0, 1, 4, 6, 0, 1, 1, 4, 0, 9, 0, 2, 0, 0, 0, 0, 1]' : 0.226451}", "{'[5, 0, 1, 4, 6, 0, 1, 1, 4, 0, 9, 0, 2, 0, 0, 0, 0, 1]' : 0.230401}", "{'[5, 0, 1, 4, 6, 0, 1, 1, 4, 0, 9, 0, 2, 0, 0, 0, 0, 1]' : 0.23063}", "{'[5, 0, 1, 4, 6, 0, 1, 1, 4, 0, 9, 0, 2, 0, 0, 0, 0, 1]' : 0.230574}", "{'[5, 0, 1, 4, 6, 0, 1, 1, 4, 0, 9, 0, 2, 0, 0, 0, 0, 1]' : 0.231028}", "{'[5, 0, 1, 4, 6, 0, 1, 1, 4, 0, 9, 0, 2, 0, 0, 0, 0, 1]' : 0.230022}", "{'[5, 0, 1, 4, 6, 0, 1, 1, 4, 0, 9, 0, 2, 0, 0, 0, 0, 1]' : 0.230194}", "{'[5, 0, 1, 4, 6, 0, 1, 1, 4, 0, 9, 0, 2, 0, 0, 0, 0, 1]' : 0.230879}"]
returning from 'run': {'[5, 0, 1, 4, 6, 0, 1, 1, 4, 0, 9, 0, 2, 0, 0, 0, 0, 1]': ([0.230498, 0.229587, 0.226848, 0.22836, 0.232052, 0.230858, 0.230309, 0.227124, 0.230294, 0.230785, 0.231331, 0.231269, 0.230844, 0.23012, 0.230307, 0.230441, 0.230727, 0.23088, 0.23111, 0.230351, 0.229093, 0.228306, 0.226451, 0.230401, 0.23063, 0.230574, 0.231028, 0.230022, 0.230194, 0.230879], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 0, 1, 4, 6, 0, 1, 1, 4, 0, 9, 0, 2, 0, 0, 0, 0, 1]': ([0.230498, 0.229587, 0.226848, 0.22836, 0.232052, 0.230858, 0.230309, 0.227124, 0.230294, 0.230785, 0.231331, 0.231269, 0.230844, 0.23012, 0.230307, 0.230441, 0.230727, 0.23088, 0.23111, 0.230351, 0.229093, 0.228306, 0.226451, 0.230401, 0.23063, 0.230574, 0.231028, 0.230022, 0.230194, 0.230879], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	81
        Max loop nest depth: 	3
        Additions: 		3410
        Multiplications: 	1518
        Divisions: 		0
        Logical: 		0
        Reads: 			6604
        Writes: 		1106
        Comparisons:		81
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest22.exe __orio_perftest22.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest22.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest22.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest22.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest22.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	62
        Max loop nest depth: 	5
        Additions: 		1411
        Multiplications: 	600
        Divisions: 		0
        Logical: 		0
        Reads: 			3152
        Writes: 		622
        Comparisons:		62
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest23.exe __orio_perftest23.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest23.exe  
Program Test Output: 
{'[0, 4, 6, 5, 5, 4, 0, 1, 11, 16, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.147241}
{'[0, 4, 6, 5, 5, 4, 0, 1, 11, 16, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.147154}
{'[0, 4, 6, 5, 5, 4, 0, 1, 11, 16, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.150388}
{'[0, 4, 6, 5, 5, 4, 0, 1, 11, 16, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.150349}
{'[0, 4, 6, 5, 5, 4, 0, 1, 11, 16, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.149911}
{'[0, 4, 6, 5, 5, 4, 0, 1, 11, 16, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.151514}
{'[0, 4, 6, 5, 5, 4, 0, 1, 11, 16, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.14989}
{'[0, 4, 6, 5, 5, 4, 0, 1, 11, 16, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.149924}
{'[0, 4, 6, 5, 5, 4, 0, 1, 11, 16, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.149928}
{'[0, 4, 6, 5, 5, 4, 0, 1, 11, 16, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.150131}
{'[0, 4, 6, 5, 5, 4, 0, 1, 11, 16, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.150217}
{'[0, 4, 6, 5, 5, 4, 0, 1, 11, 16, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.150262}
{'[0, 4, 6, 5, 5, 4, 0, 1, 11, 16, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.150632}
{'[0, 4, 6, 5, 5, 4, 0, 1, 11, 16, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.147175}
{'[0, 4, 6, 5, 5, 4, 0, 1, 11, 16, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.145625}
{'[0, 4, 6, 5, 5, 4, 0, 1, 11, 16, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.149692}
{'[0, 4, 6, 5, 5, 4, 0, 1, 11, 16, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.150085}
{'[0, 4, 6, 5, 5, 4, 0, 1, 11, 16, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.149769}
{'[0, 4, 6, 5, 5, 4, 0, 1, 11, 16, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.150814}
{'[0, 4, 6, 5, 5, 4, 0, 1, 11, 16, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.150169}
{'[0, 4, 6, 5, 5, 4, 0, 1, 11, 16, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.150057}
{'[0, 4, 6, 5, 5, 4, 0, 1, 11, 16, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.150029}
{'[0, 4, 6, 5, 5, 4, 0, 1, 11, 16, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.150062}
{'[0, 4, 6, 5, 5, 4, 0, 1, 11, 16, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.149949}
{'[0, 4, 6, 5, 5, 4, 0, 1, 11, 16, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.150812}
{'[0, 4, 6, 5, 5, 4, 0, 1, 11, 16, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.150197}
{'[0, 4, 6, 5, 5, 4, 0, 1, 11, 16, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.149635}
{'[0, 4, 6, 5, 5, 4, 0, 1, 11, 16, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.14817}
{'[0, 4, 6, 5, 5, 4, 0, 1, 11, 16, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.146969}
{'[0, 4, 6, 5, 5, 4, 0, 1, 11, 16, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.14748}

out:
 ["{'[0, 4, 6, 5, 5, 4, 0, 1, 11, 16, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.147241}", "{'[0, 4, 6, 5, 5, 4, 0, 1, 11, 16, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.147154}", "{'[0, 4, 6, 5, 5, 4, 0, 1, 11, 16, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.150388}", "{'[0, 4, 6, 5, 5, 4, 0, 1, 11, 16, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.150349}", "{'[0, 4, 6, 5, 5, 4, 0, 1, 11, 16, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.149911}", "{'[0, 4, 6, 5, 5, 4, 0, 1, 11, 16, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.151514}", "{'[0, 4, 6, 5, 5, 4, 0, 1, 11, 16, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.14989}", "{'[0, 4, 6, 5, 5, 4, 0, 1, 11, 16, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.149924}", "{'[0, 4, 6, 5, 5, 4, 0, 1, 11, 16, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.149928}", "{'[0, 4, 6, 5, 5, 4, 0, 1, 11, 16, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.150131}", "{'[0, 4, 6, 5, 5, 4, 0, 1, 11, 16, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.150217}", "{'[0, 4, 6, 5, 5, 4, 0, 1, 11, 16, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.150262}", "{'[0, 4, 6, 5, 5, 4, 0, 1, 11, 16, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.150632}", "{'[0, 4, 6, 5, 5, 4, 0, 1, 11, 16, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.147175}", "{'[0, 4, 6, 5, 5, 4, 0, 1, 11, 16, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.145625}", "{'[0, 4, 6, 5, 5, 4, 0, 1, 11, 16, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.149692}", "{'[0, 4, 6, 5, 5, 4, 0, 1, 11, 16, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.150085}", "{'[0, 4, 6, 5, 5, 4, 0, 1, 11, 16, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.149769}", "{'[0, 4, 6, 5, 5, 4, 0, 1, 11, 16, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.150814}", "{'[0, 4, 6, 5, 5, 4, 0, 1, 11, 16, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.150169}", "{'[0, 4, 6, 5, 5, 4, 0, 1, 11, 16, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.150057}", "{'[0, 4, 6, 5, 5, 4, 0, 1, 11, 16, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.150029}", "{'[0, 4, 6, 5, 5, 4, 0, 1, 11, 16, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.150062}", "{'[0, 4, 6, 5, 5, 4, 0, 1, 11, 16, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.149949}", "{'[0, 4, 6, 5, 5, 4, 0, 1, 11, 16, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.150812}", "{'[0, 4, 6, 5, 5, 4, 0, 1, 11, 16, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.150197}", "{'[0, 4, 6, 5, 5, 4, 0, 1, 11, 16, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.149635}", "{'[0, 4, 6, 5, 5, 4, 0, 1, 11, 16, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.14817}", "{'[0, 4, 6, 5, 5, 4, 0, 1, 11, 16, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.146969}", "{'[0, 4, 6, 5, 5, 4, 0, 1, 11, 16, 3, 0, 2, 0, 0, 1, 0, 1]' : 0.14748}"]
returning from 'run': {'[0, 4, 6, 5, 5, 4, 0, 1, 11, 16, 3, 0, 2, 0, 0, 1, 0, 1]': ([0.147241, 0.147154, 0.150388, 0.150349, 0.149911, 0.151514, 0.14989, 0.149924, 0.149928, 0.150131, 0.150217, 0.150262, 0.150632, 0.147175, 0.145625, 0.149692, 0.150085, 0.149769, 0.150814, 0.150169, 0.150057, 0.150029, 0.150062, 0.149949, 0.150812, 0.150197, 0.149635, 0.14817, 0.146969, 0.14748], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 4, 6, 5, 5, 4, 0, 1, 11, 16, 3, 0, 2, 0, 0, 1, 0, 1]': ([0.147241, 0.147154, 0.150388, 0.150349, 0.149911, 0.151514, 0.14989, 0.149924, 0.149928, 0.150131, 0.150217, 0.150262, 0.150632, 0.147175, 0.145625, 0.149692, 0.150085, 0.149769, 0.150814, 0.150169, 0.150057, 0.150029, 0.150062, 0.149949, 0.150812, 0.150197, 0.149635, 0.14817, 0.146969, 0.14748], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = kkk
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		396
        Multiplications: 	118
        Divisions: 		0
        Logical: 		0
        Reads: 			799
        Writes: 		100
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest24.exe __orio_perftest24.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest24.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest24.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest24.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest24.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	74
        Max loop nest depth: 	5
        Additions: 		4558
        Multiplications: 	1260
        Divisions: 		0
        Logical: 		0
        Reads: 			7194
        Writes: 		910
        Comparisons:		74
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest25.exe __orio_perftest25.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest25.exe  
Program Test Output: 
{'[2, 3, 0, 6, 1, 6, 0, 0, 6, 28, 0, 10, 0, 0, 1, 0, 0, 1]' : 0.150236}
{'[2, 3, 0, 6, 1, 6, 0, 0, 6, 28, 0, 10, 0, 0, 1, 0, 0, 1]' : 0.150037}
{'[2, 3, 0, 6, 1, 6, 0, 0, 6, 28, 0, 10, 0, 0, 1, 0, 0, 1]' : 0.147544}
{'[2, 3, 0, 6, 1, 6, 0, 0, 6, 28, 0, 10, 0, 0, 1, 0, 0, 1]' : 0.146676}
{'[2, 3, 0, 6, 1, 6, 0, 0, 6, 28, 0, 10, 0, 0, 1, 0, 0, 1]' : 0.14672}
{'[2, 3, 0, 6, 1, 6, 0, 0, 6, 28, 0, 10, 0, 0, 1, 0, 0, 1]' : 0.149061}
{'[2, 3, 0, 6, 1, 6, 0, 0, 6, 28, 0, 10, 0, 0, 1, 0, 0, 1]' : 0.149745}
{'[2, 3, 0, 6, 1, 6, 0, 0, 6, 28, 0, 10, 0, 0, 1, 0, 0, 1]' : 0.149759}
{'[2, 3, 0, 6, 1, 6, 0, 0, 6, 28, 0, 10, 0, 0, 1, 0, 0, 1]' : 0.150087}
{'[2, 3, 0, 6, 1, 6, 0, 0, 6, 28, 0, 10, 0, 0, 1, 0, 0, 1]' : 0.149194}
{'[2, 3, 0, 6, 1, 6, 0, 0, 6, 28, 0, 10, 0, 0, 1, 0, 0, 1]' : 0.146774}
{'[2, 3, 0, 6, 1, 6, 0, 0, 6, 28, 0, 10, 0, 0, 1, 0, 0, 1]' : 0.146762}
{'[2, 3, 0, 6, 1, 6, 0, 0, 6, 28, 0, 10, 0, 0, 1, 0, 0, 1]' : 0.149563}
{'[2, 3, 0, 6, 1, 6, 0, 0, 6, 28, 0, 10, 0, 0, 1, 0, 0, 1]' : 0.148793}
{'[2, 3, 0, 6, 1, 6, 0, 0, 6, 28, 0, 10, 0, 0, 1, 0, 0, 1]' : 0.147064}
{'[2, 3, 0, 6, 1, 6, 0, 0, 6, 28, 0, 10, 0, 0, 1, 0, 0, 1]' : 0.14796}
{'[2, 3, 0, 6, 1, 6, 0, 0, 6, 28, 0, 10, 0, 0, 1, 0, 0, 1]' : 0.147176}
{'[2, 3, 0, 6, 1, 6, 0, 0, 6, 28, 0, 10, 0, 0, 1, 0, 0, 1]' : 0.146192}
{'[2, 3, 0, 6, 1, 6, 0, 0, 6, 28, 0, 10, 0, 0, 1, 0, 0, 1]' : 0.144155}
{'[2, 3, 0, 6, 1, 6, 0, 0, 6, 28, 0, 10, 0, 0, 1, 0, 0, 1]' : 0.146728}
{'[2, 3, 0, 6, 1, 6, 0, 0, 6, 28, 0, 10, 0, 0, 1, 0, 0, 1]' : 0.1468}
{'[2, 3, 0, 6, 1, 6, 0, 0, 6, 28, 0, 10, 0, 0, 1, 0, 0, 1]' : 0.146809}
{'[2, 3, 0, 6, 1, 6, 0, 0, 6, 28, 0, 10, 0, 0, 1, 0, 0, 1]' : 0.146908}
{'[2, 3, 0, 6, 1, 6, 0, 0, 6, 28, 0, 10, 0, 0, 1, 0, 0, 1]' : 0.14695}
{'[2, 3, 0, 6, 1, 6, 0, 0, 6, 28, 0, 10, 0, 0, 1, 0, 0, 1]' : 0.146986}
{'[2, 3, 0, 6, 1, 6, 0, 0, 6, 28, 0, 10, 0, 0, 1, 0, 0, 1]' : 0.147222}
{'[2, 3, 0, 6, 1, 6, 0, 0, 6, 28, 0, 10, 0, 0, 1, 0, 0, 1]' : 0.146656}
{'[2, 3, 0, 6, 1, 6, 0, 0, 6, 28, 0, 10, 0, 0, 1, 0, 0, 1]' : 0.147211}
{'[2, 3, 0, 6, 1, 6, 0, 0, 6, 28, 0, 10, 0, 0, 1, 0, 0, 1]' : 0.146767}
{'[2, 3, 0, 6, 1, 6, 0, 0, 6, 28, 0, 10, 0, 0, 1, 0, 0, 1]' : 0.147179}

out:
 ["{'[2, 3, 0, 6, 1, 6, 0, 0, 6, 28, 0, 10, 0, 0, 1, 0, 0, 1]' : 0.150236}", "{'[2, 3, 0, 6, 1, 6, 0, 0, 6, 28, 0, 10, 0, 0, 1, 0, 0, 1]' : 0.150037}", "{'[2, 3, 0, 6, 1, 6, 0, 0, 6, 28, 0, 10, 0, 0, 1, 0, 0, 1]' : 0.147544}", "{'[2, 3, 0, 6, 1, 6, 0, 0, 6, 28, 0, 10, 0, 0, 1, 0, 0, 1]' : 0.146676}", "{'[2, 3, 0, 6, 1, 6, 0, 0, 6, 28, 0, 10, 0, 0, 1, 0, 0, 1]' : 0.14672}", "{'[2, 3, 0, 6, 1, 6, 0, 0, 6, 28, 0, 10, 0, 0, 1, 0, 0, 1]' : 0.149061}", "{'[2, 3, 0, 6, 1, 6, 0, 0, 6, 28, 0, 10, 0, 0, 1, 0, 0, 1]' : 0.149745}", "{'[2, 3, 0, 6, 1, 6, 0, 0, 6, 28, 0, 10, 0, 0, 1, 0, 0, 1]' : 0.149759}", "{'[2, 3, 0, 6, 1, 6, 0, 0, 6, 28, 0, 10, 0, 0, 1, 0, 0, 1]' : 0.150087}", "{'[2, 3, 0, 6, 1, 6, 0, 0, 6, 28, 0, 10, 0, 0, 1, 0, 0, 1]' : 0.149194}", "{'[2, 3, 0, 6, 1, 6, 0, 0, 6, 28, 0, 10, 0, 0, 1, 0, 0, 1]' : 0.146774}", "{'[2, 3, 0, 6, 1, 6, 0, 0, 6, 28, 0, 10, 0, 0, 1, 0, 0, 1]' : 0.146762}", "{'[2, 3, 0, 6, 1, 6, 0, 0, 6, 28, 0, 10, 0, 0, 1, 0, 0, 1]' : 0.149563}", "{'[2, 3, 0, 6, 1, 6, 0, 0, 6, 28, 0, 10, 0, 0, 1, 0, 0, 1]' : 0.148793}", "{'[2, 3, 0, 6, 1, 6, 0, 0, 6, 28, 0, 10, 0, 0, 1, 0, 0, 1]' : 0.147064}", "{'[2, 3, 0, 6, 1, 6, 0, 0, 6, 28, 0, 10, 0, 0, 1, 0, 0, 1]' : 0.14796}", "{'[2, 3, 0, 6, 1, 6, 0, 0, 6, 28, 0, 10, 0, 0, 1, 0, 0, 1]' : 0.147176}", "{'[2, 3, 0, 6, 1, 6, 0, 0, 6, 28, 0, 10, 0, 0, 1, 0, 0, 1]' : 0.146192}", "{'[2, 3, 0, 6, 1, 6, 0, 0, 6, 28, 0, 10, 0, 0, 1, 0, 0, 1]' : 0.144155}", "{'[2, 3, 0, 6, 1, 6, 0, 0, 6, 28, 0, 10, 0, 0, 1, 0, 0, 1]' : 0.146728}", "{'[2, 3, 0, 6, 1, 6, 0, 0, 6, 28, 0, 10, 0, 0, 1, 0, 0, 1]' : 0.1468}", "{'[2, 3, 0, 6, 1, 6, 0, 0, 6, 28, 0, 10, 0, 0, 1, 0, 0, 1]' : 0.146809}", "{'[2, 3, 0, 6, 1, 6, 0, 0, 6, 28, 0, 10, 0, 0, 1, 0, 0, 1]' : 0.146908}", "{'[2, 3, 0, 6, 1, 6, 0, 0, 6, 28, 0, 10, 0, 0, 1, 0, 0, 1]' : 0.14695}", "{'[2, 3, 0, 6, 1, 6, 0, 0, 6, 28, 0, 10, 0, 0, 1, 0, 0, 1]' : 0.146986}", "{'[2, 3, 0, 6, 1, 6, 0, 0, 6, 28, 0, 10, 0, 0, 1, 0, 0, 1]' : 0.147222}", "{'[2, 3, 0, 6, 1, 6, 0, 0, 6, 28, 0, 10, 0, 0, 1, 0, 0, 1]' : 0.146656}", "{'[2, 3, 0, 6, 1, 6, 0, 0, 6, 28, 0, 10, 0, 0, 1, 0, 0, 1]' : 0.147211}", "{'[2, 3, 0, 6, 1, 6, 0, 0, 6, 28, 0, 10, 0, 0, 1, 0, 0, 1]' : 0.146767}", "{'[2, 3, 0, 6, 1, 6, 0, 0, 6, 28, 0, 10, 0, 0, 1, 0, 0, 1]' : 0.147179}"]
returning from 'run': {'[2, 3, 0, 6, 1, 6, 0, 0, 6, 28, 0, 10, 0, 0, 1, 0, 0, 1]': ([0.150236, 0.150037, 0.147544, 0.146676, 0.14672, 0.149061, 0.149745, 0.149759, 0.150087, 0.149194, 0.146774, 0.146762, 0.149563, 0.148793, 0.147064, 0.14796, 0.147176, 0.146192, 0.144155, 0.146728, 0.1468, 0.146809, 0.146908, 0.14695, 0.146986, 0.147222, 0.146656, 0.147211, 0.146767, 0.147179], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 3, 0, 6, 1, 6, 0, 0, 6, 28, 0, 10, 0, 0, 1, 0, 0, 1]': ([0.150236, 0.150037, 0.147544, 0.146676, 0.14672, 0.149061, 0.149745, 0.149759, 0.150087, 0.149194, 0.146774, 0.146762, 0.149563, 0.148793, 0.147064, 0.14796, 0.147176, 0.146192, 0.144155, 0.146728, 0.1468, 0.146809, 0.146908, 0.14695, 0.146986, 0.147222, 0.146656, 0.147211, 0.146767, 0.147179], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	6
        Additions: 		343
        Multiplications: 	114
        Divisions: 		0
        Logical: 		0
        Reads: 			742
        Writes: 		156
        Comparisons:		24
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest26.exe __orio_perftest26.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest26.exe  
Program Test Output: 
{'[3, 0, 4, 6, 0, 6, 0, 1, 19, 1, 16, 0, 0, 0, 0, 1, 0, 1]' : 0.229463}
{'[3, 0, 4, 6, 0, 6, 0, 1, 19, 1, 16, 0, 0, 0, 0, 1, 0, 1]' : 0.229347}
{'[3, 0, 4, 6, 0, 6, 0, 1, 19, 1, 16, 0, 0, 0, 0, 1, 0, 1]' : 0.203688}
{'[3, 0, 4, 6, 0, 6, 0, 1, 19, 1, 16, 0, 0, 0, 0, 1, 0, 1]' : 0.195128}
{'[3, 0, 4, 6, 0, 6, 0, 1, 19, 1, 16, 0, 0, 0, 0, 1, 0, 1]' : 0.197855}
{'[3, 0, 4, 6, 0, 6, 0, 1, 19, 1, 16, 0, 0, 0, 0, 1, 0, 1]' : 0.19788}
{'[3, 0, 4, 6, 0, 6, 0, 1, 19, 1, 16, 0, 0, 0, 0, 1, 0, 1]' : 0.197809}
{'[3, 0, 4, 6, 0, 6, 0, 1, 19, 1, 16, 0, 0, 0, 0, 1, 0, 1]' : 0.19778}
{'[3, 0, 4, 6, 0, 6, 0, 1, 19, 1, 16, 0, 0, 0, 0, 1, 0, 1]' : 0.200133}
{'[3, 0, 4, 6, 0, 6, 0, 1, 19, 1, 16, 0, 0, 0, 0, 1, 0, 1]' : 0.19848}
{'[3, 0, 4, 6, 0, 6, 0, 1, 19, 1, 16, 0, 0, 0, 0, 1, 0, 1]' : 0.197859}
{'[3, 0, 4, 6, 0, 6, 0, 1, 19, 1, 16, 0, 0, 0, 0, 1, 0, 1]' : 0.197946}
{'[3, 0, 4, 6, 0, 6, 0, 1, 19, 1, 16, 0, 0, 0, 0, 1, 0, 1]' : 0.197765}
{'[3, 0, 4, 6, 0, 6, 0, 1, 19, 1, 16, 0, 0, 0, 0, 1, 0, 1]' : 0.197791}
{'[3, 0, 4, 6, 0, 6, 0, 1, 19, 1, 16, 0, 0, 0, 0, 1, 0, 1]' : 0.197784}
{'[3, 0, 4, 6, 0, 6, 0, 1, 19, 1, 16, 0, 0, 0, 0, 1, 0, 1]' : 0.197835}
{'[3, 0, 4, 6, 0, 6, 0, 1, 19, 1, 16, 0, 0, 0, 0, 1, 0, 1]' : 0.202914}
{'[3, 0, 4, 6, 0, 6, 0, 1, 19, 1, 16, 0, 0, 0, 0, 1, 0, 1]' : 0.203886}
{'[3, 0, 4, 6, 0, 6, 0, 1, 19, 1, 16, 0, 0, 0, 0, 1, 0, 1]' : 0.203838}
{'[3, 0, 4, 6, 0, 6, 0, 1, 19, 1, 16, 0, 0, 0, 0, 1, 0, 1]' : 0.203904}
{'[3, 0, 4, 6, 0, 6, 0, 1, 19, 1, 16, 0, 0, 0, 0, 1, 0, 1]' : 0.199471}
{'[3, 0, 4, 6, 0, 6, 0, 1, 19, 1, 16, 0, 0, 0, 0, 1, 0, 1]' : 0.195228}
{'[3, 0, 4, 6, 0, 6, 0, 1, 19, 1, 16, 0, 0, 0, 0, 1, 0, 1]' : 0.191567}
{'[3, 0, 4, 6, 0, 6, 0, 1, 19, 1, 16, 0, 0, 0, 0, 1, 0, 1]' : 0.193328}
{'[3, 0, 4, 6, 0, 6, 0, 1, 19, 1, 16, 0, 0, 0, 0, 1, 0, 1]' : 0.201912}
{'[3, 0, 4, 6, 0, 6, 0, 1, 19, 1, 16, 0, 0, 0, 0, 1, 0, 1]' : 0.203833}
{'[3, 0, 4, 6, 0, 6, 0, 1, 19, 1, 16, 0, 0, 0, 0, 1, 0, 1]' : 0.199138}
{'[3, 0, 4, 6, 0, 6, 0, 1, 19, 1, 16, 0, 0, 0, 0, 1, 0, 1]' : 0.197863}
{'[3, 0, 4, 6, 0, 6, 0, 1, 19, 1, 16, 0, 0, 0, 0, 1, 0, 1]' : 0.199571}
{'[3, 0, 4, 6, 0, 6, 0, 1, 19, 1, 16, 0, 0, 0, 0, 1, 0, 1]' : 0.203854}

out:
 ["{'[3, 0, 4, 6, 0, 6, 0, 1, 19, 1, 16, 0, 0, 0, 0, 1, 0, 1]' : 0.229463}", "{'[3, 0, 4, 6, 0, 6, 0, 1, 19, 1, 16, 0, 0, 0, 0, 1, 0, 1]' : 0.229347}", "{'[3, 0, 4, 6, 0, 6, 0, 1, 19, 1, 16, 0, 0, 0, 0, 1, 0, 1]' : 0.203688}", "{'[3, 0, 4, 6, 0, 6, 0, 1, 19, 1, 16, 0, 0, 0, 0, 1, 0, 1]' : 0.195128}", "{'[3, 0, 4, 6, 0, 6, 0, 1, 19, 1, 16, 0, 0, 0, 0, 1, 0, 1]' : 0.197855}", "{'[3, 0, 4, 6, 0, 6, 0, 1, 19, 1, 16, 0, 0, 0, 0, 1, 0, 1]' : 0.19788}", "{'[3, 0, 4, 6, 0, 6, 0, 1, 19, 1, 16, 0, 0, 0, 0, 1, 0, 1]' : 0.197809}", "{'[3, 0, 4, 6, 0, 6, 0, 1, 19, 1, 16, 0, 0, 0, 0, 1, 0, 1]' : 0.19778}", "{'[3, 0, 4, 6, 0, 6, 0, 1, 19, 1, 16, 0, 0, 0, 0, 1, 0, 1]' : 0.200133}", "{'[3, 0, 4, 6, 0, 6, 0, 1, 19, 1, 16, 0, 0, 0, 0, 1, 0, 1]' : 0.19848}", "{'[3, 0, 4, 6, 0, 6, 0, 1, 19, 1, 16, 0, 0, 0, 0, 1, 0, 1]' : 0.197859}", "{'[3, 0, 4, 6, 0, 6, 0, 1, 19, 1, 16, 0, 0, 0, 0, 1, 0, 1]' : 0.197946}", "{'[3, 0, 4, 6, 0, 6, 0, 1, 19, 1, 16, 0, 0, 0, 0, 1, 0, 1]' : 0.197765}", "{'[3, 0, 4, 6, 0, 6, 0, 1, 19, 1, 16, 0, 0, 0, 0, 1, 0, 1]' : 0.197791}", "{'[3, 0, 4, 6, 0, 6, 0, 1, 19, 1, 16, 0, 0, 0, 0, 1, 0, 1]' : 0.197784}", "{'[3, 0, 4, 6, 0, 6, 0, 1, 19, 1, 16, 0, 0, 0, 0, 1, 0, 1]' : 0.197835}", "{'[3, 0, 4, 6, 0, 6, 0, 1, 19, 1, 16, 0, 0, 0, 0, 1, 0, 1]' : 0.202914}", "{'[3, 0, 4, 6, 0, 6, 0, 1, 19, 1, 16, 0, 0, 0, 0, 1, 0, 1]' : 0.203886}", "{'[3, 0, 4, 6, 0, 6, 0, 1, 19, 1, 16, 0, 0, 0, 0, 1, 0, 1]' : 0.203838}", "{'[3, 0, 4, 6, 0, 6, 0, 1, 19, 1, 16, 0, 0, 0, 0, 1, 0, 1]' : 0.203904}", "{'[3, 0, 4, 6, 0, 6, 0, 1, 19, 1, 16, 0, 0, 0, 0, 1, 0, 1]' : 0.199471}", "{'[3, 0, 4, 6, 0, 6, 0, 1, 19, 1, 16, 0, 0, 0, 0, 1, 0, 1]' : 0.195228}", "{'[3, 0, 4, 6, 0, 6, 0, 1, 19, 1, 16, 0, 0, 0, 0, 1, 0, 1]' : 0.191567}", "{'[3, 0, 4, 6, 0, 6, 0, 1, 19, 1, 16, 0, 0, 0, 0, 1, 0, 1]' : 0.193328}", "{'[3, 0, 4, 6, 0, 6, 0, 1, 19, 1, 16, 0, 0, 0, 0, 1, 0, 1]' : 0.201912}", "{'[3, 0, 4, 6, 0, 6, 0, 1, 19, 1, 16, 0, 0, 0, 0, 1, 0, 1]' : 0.203833}", "{'[3, 0, 4, 6, 0, 6, 0, 1, 19, 1, 16, 0, 0, 0, 0, 1, 0, 1]' : 0.199138}", "{'[3, 0, 4, 6, 0, 6, 0, 1, 19, 1, 16, 0, 0, 0, 0, 1, 0, 1]' : 0.197863}", "{'[3, 0, 4, 6, 0, 6, 0, 1, 19, 1, 16, 0, 0, 0, 0, 1, 0, 1]' : 0.199571}", "{'[3, 0, 4, 6, 0, 6, 0, 1, 19, 1, 16, 0, 0, 0, 0, 1, 0, 1]' : 0.203854}"]
returning from 'run': {'[3, 0, 4, 6, 0, 6, 0, 1, 19, 1, 16, 0, 0, 0, 0, 1, 0, 1]': ([0.229463, 0.229347, 0.203688, 0.195128, 0.197855, 0.19788, 0.197809, 0.19778, 0.200133, 0.19848, 0.197859, 0.197946, 0.197765, 0.197791, 0.197784, 0.197835, 0.202914, 0.203886, 0.203838, 0.203904, 0.199471, 0.195228, 0.191567, 0.193328, 0.201912, 0.203833, 0.199138, 0.197863, 0.199571, 0.203854], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 0, 4, 6, 0, 6, 0, 1, 19, 1, 16, 0, 0, 0, 0, 1, 0, 1]': ([0.229463, 0.229347, 0.203688, 0.195128, 0.197855, 0.19788, 0.197809, 0.19778, 0.200133, 0.19848, 0.197859, 0.197946, 0.197765, 0.197791, 0.197784, 0.197835, 0.202914, 0.203886, 0.203838, 0.203904, 0.199471, 0.195228, 0.191567, 0.193328, 0.201912, 0.203833, 0.199138, 0.197863, 0.199571, 0.203854], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		1562
        Multiplications: 	726
        Divisions: 		0
        Logical: 		0
        Reads: 			3129
        Writes: 		571
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest27.exe __orio_perftest27.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest27.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest27.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest27.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest27.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		463
        Multiplications: 	192
        Divisions: 		0
        Logical: 		0
        Reads: 			935
        Writes: 		180
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest28.exe __orio_perftest28.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest28.exe  
Program Test Output: 
{'[0, 5, 6, 0, 6, 0, 0, 1, 18, 9, 0, 9, 1, 0, 0, 1, 0, 0]' : 0.110342}
{'[0, 5, 6, 0, 6, 0, 0, 1, 18, 9, 0, 9, 1, 0, 0, 1, 0, 0]' : 0.110192}
{'[0, 5, 6, 0, 6, 0, 0, 1, 18, 9, 0, 9, 1, 0, 0, 1, 0, 0]' : 0.110393}
{'[0, 5, 6, 0, 6, 0, 0, 1, 18, 9, 0, 9, 1, 0, 0, 1, 0, 0]' : 0.10734}
{'[0, 5, 6, 0, 6, 0, 0, 1, 18, 9, 0, 9, 1, 0, 0, 1, 0, 0]' : 0.098743}
{'[0, 5, 6, 0, 6, 0, 0, 1, 18, 9, 0, 9, 1, 0, 0, 1, 0, 0]' : 0.0987}
{'[0, 5, 6, 0, 6, 0, 0, 1, 18, 9, 0, 9, 1, 0, 0, 1, 0, 0]' : 0.0987871}
{'[0, 5, 6, 0, 6, 0, 0, 1, 18, 9, 0, 9, 1, 0, 0, 1, 0, 0]' : 0.0993352}
{'[0, 5, 6, 0, 6, 0, 0, 1, 18, 9, 0, 9, 1, 0, 0, 1, 0, 0]' : 0.09868}
{'[0, 5, 6, 0, 6, 0, 0, 1, 18, 9, 0, 9, 1, 0, 0, 1, 0, 0]' : 0.0986669}
{'[0, 5, 6, 0, 6, 0, 0, 1, 18, 9, 0, 9, 1, 0, 0, 1, 0, 0]' : 0.0979042}
{'[0, 5, 6, 0, 6, 0, 0, 1, 18, 9, 0, 9, 1, 0, 0, 1, 0, 0]' : 0.0969419}
{'[0, 5, 6, 0, 6, 0, 0, 1, 18, 9, 0, 9, 1, 0, 0, 1, 0, 0]' : 0.098479}
{'[0, 5, 6, 0, 6, 0, 0, 1, 18, 9, 0, 9, 1, 0, 0, 1, 0, 0]' : 0.0989871}
{'[0, 5, 6, 0, 6, 0, 0, 1, 18, 9, 0, 9, 1, 0, 0, 1, 0, 0]' : 0.0989971}
{'[0, 5, 6, 0, 6, 0, 0, 1, 18, 9, 0, 9, 1, 0, 0, 1, 0, 0]' : 0.0989511}
{'[0, 5, 6, 0, 6, 0, 0, 1, 18, 9, 0, 9, 1, 0, 0, 1, 0, 0]' : 0.098942}
{'[0, 5, 6, 0, 6, 0, 0, 1, 18, 9, 0, 9, 1, 0, 0, 1, 0, 0]' : 0.100815}
{'[0, 5, 6, 0, 6, 0, 0, 1, 18, 9, 0, 9, 1, 0, 0, 1, 0, 0]' : 0.100913}
{'[0, 5, 6, 0, 6, 0, 0, 1, 18, 9, 0, 9, 1, 0, 0, 1, 0, 0]' : 0.100987}
{'[0, 5, 6, 0, 6, 0, 0, 1, 18, 9, 0, 9, 1, 0, 0, 1, 0, 0]' : 0.10092}
{'[0, 5, 6, 0, 6, 0, 0, 1, 18, 9, 0, 9, 1, 0, 0, 1, 0, 0]' : 0.100916}
{'[0, 5, 6, 0, 6, 0, 0, 1, 18, 9, 0, 9, 1, 0, 0, 1, 0, 0]' : 0.0996661}
{'[0, 5, 6, 0, 6, 0, 0, 1, 18, 9, 0, 9, 1, 0, 0, 1, 0, 0]' : 0.0990489}
{'[0, 5, 6, 0, 6, 0, 0, 1, 18, 9, 0, 9, 1, 0, 0, 1, 0, 0]' : 0.0991859}
{'[0, 5, 6, 0, 6, 0, 0, 1, 18, 9, 0, 9, 1, 0, 0, 1, 0, 0]' : 0.099448}
{'[0, 5, 6, 0, 6, 0, 0, 1, 18, 9, 0, 9, 1, 0, 0, 1, 0, 0]' : 0.0989561}
{'[0, 5, 6, 0, 6, 0, 0, 1, 18, 9, 0, 9, 1, 0, 0, 1, 0, 0]' : 0.0991411}
{'[0, 5, 6, 0, 6, 0, 0, 1, 18, 9, 0, 9, 1, 0, 0, 1, 0, 0]' : 0.100028}
{'[0, 5, 6, 0, 6, 0, 0, 1, 18, 9, 0, 9, 1, 0, 0, 1, 0, 0]' : 0.100081}

out:
 ["{'[0, 5, 6, 0, 6, 0, 0, 1, 18, 9, 0, 9, 1, 0, 0, 1, 0, 0]' : 0.110342}", "{'[0, 5, 6, 0, 6, 0, 0, 1, 18, 9, 0, 9, 1, 0, 0, 1, 0, 0]' : 0.110192}", "{'[0, 5, 6, 0, 6, 0, 0, 1, 18, 9, 0, 9, 1, 0, 0, 1, 0, 0]' : 0.110393}", "{'[0, 5, 6, 0, 6, 0, 0, 1, 18, 9, 0, 9, 1, 0, 0, 1, 0, 0]' : 0.10734}", "{'[0, 5, 6, 0, 6, 0, 0, 1, 18, 9, 0, 9, 1, 0, 0, 1, 0, 0]' : 0.098743}", "{'[0, 5, 6, 0, 6, 0, 0, 1, 18, 9, 0, 9, 1, 0, 0, 1, 0, 0]' : 0.0987}", "{'[0, 5, 6, 0, 6, 0, 0, 1, 18, 9, 0, 9, 1, 0, 0, 1, 0, 0]' : 0.0987871}", "{'[0, 5, 6, 0, 6, 0, 0, 1, 18, 9, 0, 9, 1, 0, 0, 1, 0, 0]' : 0.0993352}", "{'[0, 5, 6, 0, 6, 0, 0, 1, 18, 9, 0, 9, 1, 0, 0, 1, 0, 0]' : 0.09868}", "{'[0, 5, 6, 0, 6, 0, 0, 1, 18, 9, 0, 9, 1, 0, 0, 1, 0, 0]' : 0.0986669}", "{'[0, 5, 6, 0, 6, 0, 0, 1, 18, 9, 0, 9, 1, 0, 0, 1, 0, 0]' : 0.0979042}", "{'[0, 5, 6, 0, 6, 0, 0, 1, 18, 9, 0, 9, 1, 0, 0, 1, 0, 0]' : 0.0969419}", "{'[0, 5, 6, 0, 6, 0, 0, 1, 18, 9, 0, 9, 1, 0, 0, 1, 0, 0]' : 0.098479}", "{'[0, 5, 6, 0, 6, 0, 0, 1, 18, 9, 0, 9, 1, 0, 0, 1, 0, 0]' : 0.0989871}", "{'[0, 5, 6, 0, 6, 0, 0, 1, 18, 9, 0, 9, 1, 0, 0, 1, 0, 0]' : 0.0989971}", "{'[0, 5, 6, 0, 6, 0, 0, 1, 18, 9, 0, 9, 1, 0, 0, 1, 0, 0]' : 0.0989511}", "{'[0, 5, 6, 0, 6, 0, 0, 1, 18, 9, 0, 9, 1, 0, 0, 1, 0, 0]' : 0.098942}", "{'[0, 5, 6, 0, 6, 0, 0, 1, 18, 9, 0, 9, 1, 0, 0, 1, 0, 0]' : 0.100815}", "{'[0, 5, 6, 0, 6, 0, 0, 1, 18, 9, 0, 9, 1, 0, 0, 1, 0, 0]' : 0.100913}", "{'[0, 5, 6, 0, 6, 0, 0, 1, 18, 9, 0, 9, 1, 0, 0, 1, 0, 0]' : 0.100987}", "{'[0, 5, 6, 0, 6, 0, 0, 1, 18, 9, 0, 9, 1, 0, 0, 1, 0, 0]' : 0.10092}", "{'[0, 5, 6, 0, 6, 0, 0, 1, 18, 9, 0, 9, 1, 0, 0, 1, 0, 0]' : 0.100916}", "{'[0, 5, 6, 0, 6, 0, 0, 1, 18, 9, 0, 9, 1, 0, 0, 1, 0, 0]' : 0.0996661}", "{'[0, 5, 6, 0, 6, 0, 0, 1, 18, 9, 0, 9, 1, 0, 0, 1, 0, 0]' : 0.0990489}", "{'[0, 5, 6, 0, 6, 0, 0, 1, 18, 9, 0, 9, 1, 0, 0, 1, 0, 0]' : 0.0991859}", "{'[0, 5, 6, 0, 6, 0, 0, 1, 18, 9, 0, 9, 1, 0, 0, 1, 0, 0]' : 0.099448}", "{'[0, 5, 6, 0, 6, 0, 0, 1, 18, 9, 0, 9, 1, 0, 0, 1, 0, 0]' : 0.0989561}", "{'[0, 5, 6, 0, 6, 0, 0, 1, 18, 9, 0, 9, 1, 0, 0, 1, 0, 0]' : 0.0991411}", "{'[0, 5, 6, 0, 6, 0, 0, 1, 18, 9, 0, 9, 1, 0, 0, 1, 0, 0]' : 0.100028}", "{'[0, 5, 6, 0, 6, 0, 0, 1, 18, 9, 0, 9, 1, 0, 0, 1, 0, 0]' : 0.100081}"]
returning from 'run': {'[0, 5, 6, 0, 6, 0, 0, 1, 18, 9, 0, 9, 1, 0, 0, 1, 0, 0]': ([0.110342, 0.110192, 0.110393, 0.10734, 0.098743, 0.0987, 0.0987871, 0.0993352, 0.09868, 0.0986669, 0.0979042, 0.0969419, 0.098479, 0.0989871, 0.0989971, 0.0989511, 0.098942, 0.100815, 0.100913, 0.100987, 0.10092, 0.100916, 0.0996661, 0.0990489, 0.0991859, 0.099448, 0.0989561, 0.0991411, 0.100028, 0.100081], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 5, 6, 0, 6, 0, 0, 1, 18, 9, 0, 9, 1, 0, 0, 1, 0, 0]': ([0.110342, 0.110192, 0.110393, 0.10734, 0.098743, 0.0987, 0.0987871, 0.0993352, 0.09868, 0.0986669, 0.0979042, 0.0969419, 0.098479, 0.0989871, 0.0989971, 0.0989511, 0.098942, 0.100815, 0.100913, 0.100987, 0.10092, 0.100916, 0.0996661, 0.0990489, 0.0991859, 0.099448, 0.0989561, 0.0991411, 0.100028, 0.100081], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	5
        Additions: 		2417
        Multiplications: 	768
        Divisions: 		0
        Logical: 		0
        Reads: 			4092
        Writes: 		474
        Comparisons:		24
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest29.exe __orio_perftest29.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest29.exe  
Program Test Output: 
{'[6, 0, 6, 6, 3, 4, 0, 0, 0, 22, 1, 0, 1, 0, 1, 0, 1, 1]' : 0.110858}
{'[6, 0, 6, 6, 3, 4, 0, 0, 0, 22, 1, 0, 1, 0, 1, 0, 1, 1]' : 0.11049}
{'[6, 0, 6, 6, 3, 4, 0, 0, 0, 22, 1, 0, 1, 0, 1, 0, 1, 1]' : 0.110471}
{'[6, 0, 6, 6, 3, 4, 0, 0, 0, 22, 1, 0, 1, 0, 1, 0, 1, 1]' : 0.110409}
{'[6, 0, 6, 6, 3, 4, 0, 0, 0, 22, 1, 0, 1, 0, 1, 0, 1, 1]' : 0.110723}
{'[6, 0, 6, 6, 3, 4, 0, 0, 0, 22, 1, 0, 1, 0, 1, 0, 1, 1]' : 0.110743}
{'[6, 0, 6, 6, 3, 4, 0, 0, 0, 22, 1, 0, 1, 0, 1, 0, 1, 1]' : 0.109975}
{'[6, 0, 6, 6, 3, 4, 0, 0, 0, 22, 1, 0, 1, 0, 1, 0, 1, 1]' : 0.10787}
{'[6, 0, 6, 6, 3, 4, 0, 0, 0, 22, 1, 0, 1, 0, 1, 0, 1, 1]' : 0.107931}
{'[6, 0, 6, 6, 3, 4, 0, 0, 0, 22, 1, 0, 1, 0, 1, 0, 1, 1]' : 0.108397}
{'[6, 0, 6, 6, 3, 4, 0, 0, 0, 22, 1, 0, 1, 0, 1, 0, 1, 1]' : 0.108137}
{'[6, 0, 6, 6, 3, 4, 0, 0, 0, 22, 1, 0, 1, 0, 1, 0, 1, 1]' : 0.108687}
{'[6, 0, 6, 6, 3, 4, 0, 0, 0, 22, 1, 0, 1, 0, 1, 0, 1, 1]' : 0.107887}
{'[6, 0, 6, 6, 3, 4, 0, 0, 0, 22, 1, 0, 1, 0, 1, 0, 1, 1]' : 0.107946}
{'[6, 0, 6, 6, 3, 4, 0, 0, 0, 22, 1, 0, 1, 0, 1, 0, 1, 1]' : 0.108026}
{'[6, 0, 6, 6, 3, 4, 0, 0, 0, 22, 1, 0, 1, 0, 1, 0, 1, 1]' : 0.108729}
{'[6, 0, 6, 6, 3, 4, 0, 0, 0, 22, 1, 0, 1, 0, 1, 0, 1, 1]' : 0.110495}
{'[6, 0, 6, 6, 3, 4, 0, 0, 0, 22, 1, 0, 1, 0, 1, 0, 1, 1]' : 0.110518}
{'[6, 0, 6, 6, 3, 4, 0, 0, 0, 22, 1, 0, 1, 0, 1, 0, 1, 1]' : 0.110747}
{'[6, 0, 6, 6, 3, 4, 0, 0, 0, 22, 1, 0, 1, 0, 1, 0, 1, 1]' : 0.110563}
{'[6, 0, 6, 6, 3, 4, 0, 0, 0, 22, 1, 0, 1, 0, 1, 0, 1, 1]' : 0.109389}
{'[6, 0, 6, 6, 3, 4, 0, 0, 0, 22, 1, 0, 1, 0, 1, 0, 1, 1]' : 0.110426}
{'[6, 0, 6, 6, 3, 4, 0, 0, 0, 22, 1, 0, 1, 0, 1, 0, 1, 1]' : 0.10902}
{'[6, 0, 6, 6, 3, 4, 0, 0, 0, 22, 1, 0, 1, 0, 1, 0, 1, 1]' : 0.107892}
{'[6, 0, 6, 6, 3, 4, 0, 0, 0, 22, 1, 0, 1, 0, 1, 0, 1, 1]' : 0.107956}
{'[6, 0, 6, 6, 3, 4, 0, 0, 0, 22, 1, 0, 1, 0, 1, 0, 1, 1]' : 0.11058}
{'[6, 0, 6, 6, 3, 4, 0, 0, 0, 22, 1, 0, 1, 0, 1, 0, 1, 1]' : 0.110374}
{'[6, 0, 6, 6, 3, 4, 0, 0, 0, 22, 1, 0, 1, 0, 1, 0, 1, 1]' : 0.110472}
{'[6, 0, 6, 6, 3, 4, 0, 0, 0, 22, 1, 0, 1, 0, 1, 0, 1, 1]' : 0.110452}
{'[6, 0, 6, 6, 3, 4, 0, 0, 0, 22, 1, 0, 1, 0, 1, 0, 1, 1]' : 0.111041}

out:
 ["{'[6, 0, 6, 6, 3, 4, 0, 0, 0, 22, 1, 0, 1, 0, 1, 0, 1, 1]' : 0.110858}", "{'[6, 0, 6, 6, 3, 4, 0, 0, 0, 22, 1, 0, 1, 0, 1, 0, 1, 1]' : 0.11049}", "{'[6, 0, 6, 6, 3, 4, 0, 0, 0, 22, 1, 0, 1, 0, 1, 0, 1, 1]' : 0.110471}", "{'[6, 0, 6, 6, 3, 4, 0, 0, 0, 22, 1, 0, 1, 0, 1, 0, 1, 1]' : 0.110409}", "{'[6, 0, 6, 6, 3, 4, 0, 0, 0, 22, 1, 0, 1, 0, 1, 0, 1, 1]' : 0.110723}", "{'[6, 0, 6, 6, 3, 4, 0, 0, 0, 22, 1, 0, 1, 0, 1, 0, 1, 1]' : 0.110743}", "{'[6, 0, 6, 6, 3, 4, 0, 0, 0, 22, 1, 0, 1, 0, 1, 0, 1, 1]' : 0.109975}", "{'[6, 0, 6, 6, 3, 4, 0, 0, 0, 22, 1, 0, 1, 0, 1, 0, 1, 1]' : 0.10787}", "{'[6, 0, 6, 6, 3, 4, 0, 0, 0, 22, 1, 0, 1, 0, 1, 0, 1, 1]' : 0.107931}", "{'[6, 0, 6, 6, 3, 4, 0, 0, 0, 22, 1, 0, 1, 0, 1, 0, 1, 1]' : 0.108397}", "{'[6, 0, 6, 6, 3, 4, 0, 0, 0, 22, 1, 0, 1, 0, 1, 0, 1, 1]' : 0.108137}", "{'[6, 0, 6, 6, 3, 4, 0, 0, 0, 22, 1, 0, 1, 0, 1, 0, 1, 1]' : 0.108687}", "{'[6, 0, 6, 6, 3, 4, 0, 0, 0, 22, 1, 0, 1, 0, 1, 0, 1, 1]' : 0.107887}", "{'[6, 0, 6, 6, 3, 4, 0, 0, 0, 22, 1, 0, 1, 0, 1, 0, 1, 1]' : 0.107946}", "{'[6, 0, 6, 6, 3, 4, 0, 0, 0, 22, 1, 0, 1, 0, 1, 0, 1, 1]' : 0.108026}", "{'[6, 0, 6, 6, 3, 4, 0, 0, 0, 22, 1, 0, 1, 0, 1, 0, 1, 1]' : 0.108729}", "{'[6, 0, 6, 6, 3, 4, 0, 0, 0, 22, 1, 0, 1, 0, 1, 0, 1, 1]' : 0.110495}", "{'[6, 0, 6, 6, 3, 4, 0, 0, 0, 22, 1, 0, 1, 0, 1, 0, 1, 1]' : 0.110518}", "{'[6, 0, 6, 6, 3, 4, 0, 0, 0, 22, 1, 0, 1, 0, 1, 0, 1, 1]' : 0.110747}", "{'[6, 0, 6, 6, 3, 4, 0, 0, 0, 22, 1, 0, 1, 0, 1, 0, 1, 1]' : 0.110563}", "{'[6, 0, 6, 6, 3, 4, 0, 0, 0, 22, 1, 0, 1, 0, 1, 0, 1, 1]' : 0.109389}", "{'[6, 0, 6, 6, 3, 4, 0, 0, 0, 22, 1, 0, 1, 0, 1, 0, 1, 1]' : 0.110426}", "{'[6, 0, 6, 6, 3, 4, 0, 0, 0, 22, 1, 0, 1, 0, 1, 0, 1, 1]' : 0.10902}", "{'[6, 0, 6, 6, 3, 4, 0, 0, 0, 22, 1, 0, 1, 0, 1, 0, 1, 1]' : 0.107892}", "{'[6, 0, 6, 6, 3, 4, 0, 0, 0, 22, 1, 0, 1, 0, 1, 0, 1, 1]' : 0.107956}", "{'[6, 0, 6, 6, 3, 4, 0, 0, 0, 22, 1, 0, 1, 0, 1, 0, 1, 1]' : 0.11058}", "{'[6, 0, 6, 6, 3, 4, 0, 0, 0, 22, 1, 0, 1, 0, 1, 0, 1, 1]' : 0.110374}", "{'[6, 0, 6, 6, 3, 4, 0, 0, 0, 22, 1, 0, 1, 0, 1, 0, 1, 1]' : 0.110472}", "{'[6, 0, 6, 6, 3, 4, 0, 0, 0, 22, 1, 0, 1, 0, 1, 0, 1, 1]' : 0.110452}", "{'[6, 0, 6, 6, 3, 4, 0, 0, 0, 22, 1, 0, 1, 0, 1, 0, 1, 1]' : 0.111041}"]
returning from 'run': {'[6, 0, 6, 6, 3, 4, 0, 0, 0, 22, 1, 0, 1, 0, 1, 0, 1, 1]': ([0.110858, 0.11049, 0.110471, 0.110409, 0.110723, 0.110743, 0.109975, 0.10787, 0.107931, 0.108397, 0.108137, 0.108687, 0.107887, 0.107946, 0.108026, 0.108729, 0.110495, 0.110518, 0.110747, 0.110563, 0.109389, 0.110426, 0.10902, 0.107892, 0.107956, 0.11058, 0.110374, 0.110472, 0.110452, 0.111041], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 6, 6, 3, 4, 0, 0, 0, 22, 1, 0, 1, 0, 1, 0, 1, 1]': ([0.110858, 0.11049, 0.110471, 0.110409, 0.110723, 0.110743, 0.109975, 0.10787, 0.107931, 0.108397, 0.108137, 0.108687, 0.107887, 0.107946, 0.108026, 0.108729, 0.110495, 0.110518, 0.110747, 0.110563, 0.109389, 0.110426, 0.10902, 0.107892, 0.107956, 0.11058, 0.110374, 0.110472, 0.110452, 0.111041], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	92
        Max loop nest depth: 	6
        Additions: 		4306
        Multiplications: 	1300
        Divisions: 		0
        Logical: 		0
        Reads: 			6916
        Writes: 		969
        Comparisons:		92
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest30.exe __orio_perftest30.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest30.exe  
Program Test Output: 
{'[6, 2, 6, 6, 2, 0, 1, 0, 22, 24, 22, 0, 0, 0, 0, 1, 1, 0]' : 0.226482}
{'[6, 2, 6, 6, 2, 0, 1, 0, 22, 24, 22, 0, 0, 0, 0, 1, 1, 0]' : 0.226582}
{'[6, 2, 6, 6, 2, 0, 1, 0, 22, 24, 22, 0, 0, 0, 0, 1, 1, 0]' : 0.215526}
{'[6, 2, 6, 6, 2, 0, 1, 0, 22, 24, 22, 0, 0, 0, 0, 1, 1, 0]' : 0.197026}
{'[6, 2, 6, 6, 2, 0, 1, 0, 22, 24, 22, 0, 0, 0, 0, 1, 1, 0]' : 0.197242}
{'[6, 2, 6, 6, 2, 0, 1, 0, 22, 24, 22, 0, 0, 0, 0, 1, 1, 0]' : 0.19732}
{'[6, 2, 6, 6, 2, 0, 1, 0, 22, 24, 22, 0, 0, 0, 0, 1, 1, 0]' : 0.196924}
{'[6, 2, 6, 6, 2, 0, 1, 0, 22, 24, 22, 0, 0, 0, 0, 1, 1, 0]' : 0.192018}
{'[6, 2, 6, 6, 2, 0, 1, 0, 22, 24, 22, 0, 0, 0, 0, 1, 1, 0]' : 0.190727}
{'[6, 2, 6, 6, 2, 0, 1, 0, 22, 24, 22, 0, 0, 0, 0, 1, 1, 0]' : 0.196583}
{'[6, 2, 6, 6, 2, 0, 1, 0, 22, 24, 22, 0, 0, 0, 0, 1, 1, 0]' : 0.197208}
{'[6, 2, 6, 6, 2, 0, 1, 0, 22, 24, 22, 0, 0, 0, 0, 1, 1, 0]' : 0.191429}
{'[6, 2, 6, 6, 2, 0, 1, 0, 22, 24, 22, 0, 0, 0, 0, 1, 1, 0]' : 0.190863}
{'[6, 2, 6, 6, 2, 0, 1, 0, 22, 24, 22, 0, 0, 0, 0, 1, 1, 0]' : 0.190682}
{'[6, 2, 6, 6, 2, 0, 1, 0, 22, 24, 22, 0, 0, 0, 0, 1, 1, 0]' : 0.19389}
{'[6, 2, 6, 6, 2, 0, 1, 0, 22, 24, 22, 0, 0, 0, 0, 1, 1, 0]' : 0.197115}
{'[6, 2, 6, 6, 2, 0, 1, 0, 22, 24, 22, 0, 0, 0, 0, 1, 1, 0]' : 0.197101}
{'[6, 2, 6, 6, 2, 0, 1, 0, 22, 24, 22, 0, 0, 0, 0, 1, 1, 0]' : 0.197345}
{'[6, 2, 6, 6, 2, 0, 1, 0, 22, 24, 22, 0, 0, 0, 0, 1, 1, 0]' : 0.197101}
{'[6, 2, 6, 6, 2, 0, 1, 0, 22, 24, 22, 0, 0, 0, 0, 1, 1, 0]' : 0.197349}
{'[6, 2, 6, 6, 2, 0, 1, 0, 22, 24, 22, 0, 0, 0, 0, 1, 1, 0]' : 0.197011}
{'[6, 2, 6, 6, 2, 0, 1, 0, 22, 24, 22, 0, 0, 0, 0, 1, 1, 0]' : 0.197157}
{'[6, 2, 6, 6, 2, 0, 1, 0, 22, 24, 22, 0, 0, 0, 0, 1, 1, 0]' : 0.197782}
{'[6, 2, 6, 6, 2, 0, 1, 0, 22, 24, 22, 0, 0, 0, 0, 1, 1, 0]' : 0.197075}
{'[6, 2, 6, 6, 2, 0, 1, 0, 22, 24, 22, 0, 0, 0, 0, 1, 1, 0]' : 0.197085}
{'[6, 2, 6, 6, 2, 0, 1, 0, 22, 24, 22, 0, 0, 0, 0, 1, 1, 0]' : 0.197333}
{'[6, 2, 6, 6, 2, 0, 1, 0, 22, 24, 22, 0, 0, 0, 0, 1, 1, 0]' : 0.197136}
{'[6, 2, 6, 6, 2, 0, 1, 0, 22, 24, 22, 0, 0, 0, 0, 1, 1, 0]' : 0.197327}
{'[6, 2, 6, 6, 2, 0, 1, 0, 22, 24, 22, 0, 0, 0, 0, 1, 1, 0]' : 0.197133}
{'[6, 2, 6, 6, 2, 0, 1, 0, 22, 24, 22, 0, 0, 0, 0, 1, 1, 0]' : 0.197292}

out:
 ["{'[6, 2, 6, 6, 2, 0, 1, 0, 22, 24, 22, 0, 0, 0, 0, 1, 1, 0]' : 0.226482}", "{'[6, 2, 6, 6, 2, 0, 1, 0, 22, 24, 22, 0, 0, 0, 0, 1, 1, 0]' : 0.226582}", "{'[6, 2, 6, 6, 2, 0, 1, 0, 22, 24, 22, 0, 0, 0, 0, 1, 1, 0]' : 0.215526}", "{'[6, 2, 6, 6, 2, 0, 1, 0, 22, 24, 22, 0, 0, 0, 0, 1, 1, 0]' : 0.197026}", "{'[6, 2, 6, 6, 2, 0, 1, 0, 22, 24, 22, 0, 0, 0, 0, 1, 1, 0]' : 0.197242}", "{'[6, 2, 6, 6, 2, 0, 1, 0, 22, 24, 22, 0, 0, 0, 0, 1, 1, 0]' : 0.19732}", "{'[6, 2, 6, 6, 2, 0, 1, 0, 22, 24, 22, 0, 0, 0, 0, 1, 1, 0]' : 0.196924}", "{'[6, 2, 6, 6, 2, 0, 1, 0, 22, 24, 22, 0, 0, 0, 0, 1, 1, 0]' : 0.192018}", "{'[6, 2, 6, 6, 2, 0, 1, 0, 22, 24, 22, 0, 0, 0, 0, 1, 1, 0]' : 0.190727}", "{'[6, 2, 6, 6, 2, 0, 1, 0, 22, 24, 22, 0, 0, 0, 0, 1, 1, 0]' : 0.196583}", "{'[6, 2, 6, 6, 2, 0, 1, 0, 22, 24, 22, 0, 0, 0, 0, 1, 1, 0]' : 0.197208}", "{'[6, 2, 6, 6, 2, 0, 1, 0, 22, 24, 22, 0, 0, 0, 0, 1, 1, 0]' : 0.191429}", "{'[6, 2, 6, 6, 2, 0, 1, 0, 22, 24, 22, 0, 0, 0, 0, 1, 1, 0]' : 0.190863}", "{'[6, 2, 6, 6, 2, 0, 1, 0, 22, 24, 22, 0, 0, 0, 0, 1, 1, 0]' : 0.190682}", "{'[6, 2, 6, 6, 2, 0, 1, 0, 22, 24, 22, 0, 0, 0, 0, 1, 1, 0]' : 0.19389}", "{'[6, 2, 6, 6, 2, 0, 1, 0, 22, 24, 22, 0, 0, 0, 0, 1, 1, 0]' : 0.197115}", "{'[6, 2, 6, 6, 2, 0, 1, 0, 22, 24, 22, 0, 0, 0, 0, 1, 1, 0]' : 0.197101}", "{'[6, 2, 6, 6, 2, 0, 1, 0, 22, 24, 22, 0, 0, 0, 0, 1, 1, 0]' : 0.197345}", "{'[6, 2, 6, 6, 2, 0, 1, 0, 22, 24, 22, 0, 0, 0, 0, 1, 1, 0]' : 0.197101}", "{'[6, 2, 6, 6, 2, 0, 1, 0, 22, 24, 22, 0, 0, 0, 0, 1, 1, 0]' : 0.197349}", "{'[6, 2, 6, 6, 2, 0, 1, 0, 22, 24, 22, 0, 0, 0, 0, 1, 1, 0]' : 0.197011}", "{'[6, 2, 6, 6, 2, 0, 1, 0, 22, 24, 22, 0, 0, 0, 0, 1, 1, 0]' : 0.197157}", "{'[6, 2, 6, 6, 2, 0, 1, 0, 22, 24, 22, 0, 0, 0, 0, 1, 1, 0]' : 0.197782}", "{'[6, 2, 6, 6, 2, 0, 1, 0, 22, 24, 22, 0, 0, 0, 0, 1, 1, 0]' : 0.197075}", "{'[6, 2, 6, 6, 2, 0, 1, 0, 22, 24, 22, 0, 0, 0, 0, 1, 1, 0]' : 0.197085}", "{'[6, 2, 6, 6, 2, 0, 1, 0, 22, 24, 22, 0, 0, 0, 0, 1, 1, 0]' : 0.197333}", "{'[6, 2, 6, 6, 2, 0, 1, 0, 22, 24, 22, 0, 0, 0, 0, 1, 1, 0]' : 0.197136}", "{'[6, 2, 6, 6, 2, 0, 1, 0, 22, 24, 22, 0, 0, 0, 0, 1, 1, 0]' : 0.197327}", "{'[6, 2, 6, 6, 2, 0, 1, 0, 22, 24, 22, 0, 0, 0, 0, 1, 1, 0]' : 0.197133}", "{'[6, 2, 6, 6, 2, 0, 1, 0, 22, 24, 22, 0, 0, 0, 0, 1, 1, 0]' : 0.197292}"]
returning from 'run': {'[6, 2, 6, 6, 2, 0, 1, 0, 22, 24, 22, 0, 0, 0, 0, 1, 1, 0]': ([0.226482, 0.226582, 0.215526, 0.197026, 0.197242, 0.19732, 0.196924, 0.192018, 0.190727, 0.196583, 0.197208, 0.191429, 0.190863, 0.190682, 0.19389, 0.197115, 0.197101, 0.197345, 0.197101, 0.197349, 0.197011, 0.197157, 0.197782, 0.197075, 0.197085, 0.197333, 0.197136, 0.197327, 0.197133, 0.197292], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 2, 6, 6, 2, 0, 1, 0, 22, 24, 22, 0, 0, 0, 0, 1, 1, 0]': ([0.226482, 0.226582, 0.215526, 0.197026, 0.197242, 0.19732, 0.196924, 0.192018, 0.190727, 0.196583, 0.197208, 0.191429, 0.190863, 0.190682, 0.19389, 0.197115, 0.197101, 0.197345, 0.197101, 0.197349, 0.197011, 0.197157, 0.197782, 0.197075, 0.197085, 0.197333, 0.197136, 0.197327, 0.197133, 0.197292], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	6
        Additions: 		81
        Multiplications: 	18
        Divisions: 		0
        Logical: 		0
        Reads: 			198
        Writes: 		45
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest31.exe __orio_perftest31.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest31.exe  
Program Test Output: 
{'[2, 6, 6, 6, 6, 4, 1, 0, 8, 0, 1, 0, 0, 1, 0, 0, 0, 1]' : 0.22955}
{'[2, 6, 6, 6, 6, 4, 1, 0, 8, 0, 1, 0, 0, 1, 0, 0, 0, 1]' : 0.229333}
{'[2, 6, 6, 6, 6, 4, 1, 0, 8, 0, 1, 0, 0, 1, 0, 0, 0, 1]' : 0.227476}
{'[2, 6, 6, 6, 6, 4, 1, 0, 8, 0, 1, 0, 0, 1, 0, 0, 0, 1]' : 0.199291}
{'[2, 6, 6, 6, 6, 4, 1, 0, 8, 0, 1, 0, 0, 1, 0, 0, 0, 1]' : 0.198969}
{'[2, 6, 6, 6, 6, 4, 1, 0, 8, 0, 1, 0, 0, 1, 0, 0, 0, 1]' : 0.199073}
{'[2, 6, 6, 6, 6, 4, 1, 0, 8, 0, 1, 0, 0, 1, 0, 0, 0, 1]' : 0.198857}
{'[2, 6, 6, 6, 6, 4, 1, 0, 8, 0, 1, 0, 0, 1, 0, 0, 0, 1]' : 0.199025}
{'[2, 6, 6, 6, 6, 4, 1, 0, 8, 0, 1, 0, 0, 1, 0, 0, 0, 1]' : 0.199544}
{'[2, 6, 6, 6, 6, 4, 1, 0, 8, 0, 1, 0, 0, 1, 0, 0, 0, 1]' : 0.199084}
{'[2, 6, 6, 6, 6, 4, 1, 0, 8, 0, 1, 0, 0, 1, 0, 0, 0, 1]' : 0.198997}
{'[2, 6, 6, 6, 6, 4, 1, 0, 8, 0, 1, 0, 0, 1, 0, 0, 0, 1]' : 0.198965}
{'[2, 6, 6, 6, 6, 4, 1, 0, 8, 0, 1, 0, 0, 1, 0, 0, 0, 1]' : 0.199078}
{'[2, 6, 6, 6, 6, 4, 1, 0, 8, 0, 1, 0, 0, 1, 0, 0, 0, 1]' : 0.199661}
{'[2, 6, 6, 6, 6, 4, 1, 0, 8, 0, 1, 0, 0, 1, 0, 0, 0, 1]' : 0.19919}
{'[2, 6, 6, 6, 6, 4, 1, 0, 8, 0, 1, 0, 0, 1, 0, 0, 0, 1]' : 0.199319}
{'[2, 6, 6, 6, 6, 4, 1, 0, 8, 0, 1, 0, 0, 1, 0, 0, 0, 1]' : 0.19928}
{'[2, 6, 6, 6, 6, 4, 1, 0, 8, 0, 1, 0, 0, 1, 0, 0, 0, 1]' : 0.19928}
{'[2, 6, 6, 6, 6, 4, 1, 0, 8, 0, 1, 0, 0, 1, 0, 0, 0, 1]' : 0.199798}
{'[2, 6, 6, 6, 6, 4, 1, 0, 8, 0, 1, 0, 0, 1, 0, 0, 0, 1]' : 0.199437}
{'[2, 6, 6, 6, 6, 4, 1, 0, 8, 0, 1, 0, 0, 1, 0, 0, 0, 1]' : 0.199337}
{'[2, 6, 6, 6, 6, 4, 1, 0, 8, 0, 1, 0, 0, 1, 0, 0, 0, 1]' : 0.199223}
{'[2, 6, 6, 6, 6, 4, 1, 0, 8, 0, 1, 0, 0, 1, 0, 0, 0, 1]' : 0.199347}
{'[2, 6, 6, 6, 6, 4, 1, 0, 8, 0, 1, 0, 0, 1, 0, 0, 0, 1]' : 0.199331}
{'[2, 6, 6, 6, 6, 4, 1, 0, 8, 0, 1, 0, 0, 1, 0, 0, 0, 1]' : 0.20024}
{'[2, 6, 6, 6, 6, 4, 1, 0, 8, 0, 1, 0, 0, 1, 0, 0, 0, 1]' : 0.199474}
{'[2, 6, 6, 6, 6, 4, 1, 0, 8, 0, 1, 0, 0, 1, 0, 0, 0, 1]' : 0.199159}
{'[2, 6, 6, 6, 6, 4, 1, 0, 8, 0, 1, 0, 0, 1, 0, 0, 0, 1]' : 0.199239}
{'[2, 6, 6, 6, 6, 4, 1, 0, 8, 0, 1, 0, 0, 1, 0, 0, 0, 1]' : 0.203107}
{'[2, 6, 6, 6, 6, 4, 1, 0, 8, 0, 1, 0, 0, 1, 0, 0, 0, 1]' : 0.204919}

out:
 ["{'[2, 6, 6, 6, 6, 4, 1, 0, 8, 0, 1, 0, 0, 1, 0, 0, 0, 1]' : 0.22955}", "{'[2, 6, 6, 6, 6, 4, 1, 0, 8, 0, 1, 0, 0, 1, 0, 0, 0, 1]' : 0.229333}", "{'[2, 6, 6, 6, 6, 4, 1, 0, 8, 0, 1, 0, 0, 1, 0, 0, 0, 1]' : 0.227476}", "{'[2, 6, 6, 6, 6, 4, 1, 0, 8, 0, 1, 0, 0, 1, 0, 0, 0, 1]' : 0.199291}", "{'[2, 6, 6, 6, 6, 4, 1, 0, 8, 0, 1, 0, 0, 1, 0, 0, 0, 1]' : 0.198969}", "{'[2, 6, 6, 6, 6, 4, 1, 0, 8, 0, 1, 0, 0, 1, 0, 0, 0, 1]' : 0.199073}", "{'[2, 6, 6, 6, 6, 4, 1, 0, 8, 0, 1, 0, 0, 1, 0, 0, 0, 1]' : 0.198857}", "{'[2, 6, 6, 6, 6, 4, 1, 0, 8, 0, 1, 0, 0, 1, 0, 0, 0, 1]' : 0.199025}", "{'[2, 6, 6, 6, 6, 4, 1, 0, 8, 0, 1, 0, 0, 1, 0, 0, 0, 1]' : 0.199544}", "{'[2, 6, 6, 6, 6, 4, 1, 0, 8, 0, 1, 0, 0, 1, 0, 0, 0, 1]' : 0.199084}", "{'[2, 6, 6, 6, 6, 4, 1, 0, 8, 0, 1, 0, 0, 1, 0, 0, 0, 1]' : 0.198997}", "{'[2, 6, 6, 6, 6, 4, 1, 0, 8, 0, 1, 0, 0, 1, 0, 0, 0, 1]' : 0.198965}", "{'[2, 6, 6, 6, 6, 4, 1, 0, 8, 0, 1, 0, 0, 1, 0, 0, 0, 1]' : 0.199078}", "{'[2, 6, 6, 6, 6, 4, 1, 0, 8, 0, 1, 0, 0, 1, 0, 0, 0, 1]' : 0.199661}", "{'[2, 6, 6, 6, 6, 4, 1, 0, 8, 0, 1, 0, 0, 1, 0, 0, 0, 1]' : 0.19919}", "{'[2, 6, 6, 6, 6, 4, 1, 0, 8, 0, 1, 0, 0, 1, 0, 0, 0, 1]' : 0.199319}", "{'[2, 6, 6, 6, 6, 4, 1, 0, 8, 0, 1, 0, 0, 1, 0, 0, 0, 1]' : 0.19928}", "{'[2, 6, 6, 6, 6, 4, 1, 0, 8, 0, 1, 0, 0, 1, 0, 0, 0, 1]' : 0.19928}", "{'[2, 6, 6, 6, 6, 4, 1, 0, 8, 0, 1, 0, 0, 1, 0, 0, 0, 1]' : 0.199798}", "{'[2, 6, 6, 6, 6, 4, 1, 0, 8, 0, 1, 0, 0, 1, 0, 0, 0, 1]' : 0.199437}", "{'[2, 6, 6, 6, 6, 4, 1, 0, 8, 0, 1, 0, 0, 1, 0, 0, 0, 1]' : 0.199337}", "{'[2, 6, 6, 6, 6, 4, 1, 0, 8, 0, 1, 0, 0, 1, 0, 0, 0, 1]' : 0.199223}", "{'[2, 6, 6, 6, 6, 4, 1, 0, 8, 0, 1, 0, 0, 1, 0, 0, 0, 1]' : 0.199347}", "{'[2, 6, 6, 6, 6, 4, 1, 0, 8, 0, 1, 0, 0, 1, 0, 0, 0, 1]' : 0.199331}", "{'[2, 6, 6, 6, 6, 4, 1, 0, 8, 0, 1, 0, 0, 1, 0, 0, 0, 1]' : 0.20024}", "{'[2, 6, 6, 6, 6, 4, 1, 0, 8, 0, 1, 0, 0, 1, 0, 0, 0, 1]' : 0.199474}", "{'[2, 6, 6, 6, 6, 4, 1, 0, 8, 0, 1, 0, 0, 1, 0, 0, 0, 1]' : 0.199159}", "{'[2, 6, 6, 6, 6, 4, 1, 0, 8, 0, 1, 0, 0, 1, 0, 0, 0, 1]' : 0.199239}", "{'[2, 6, 6, 6, 6, 4, 1, 0, 8, 0, 1, 0, 0, 1, 0, 0, 0, 1]' : 0.203107}", "{'[2, 6, 6, 6, 6, 4, 1, 0, 8, 0, 1, 0, 0, 1, 0, 0, 0, 1]' : 0.204919}"]
returning from 'run': {'[2, 6, 6, 6, 6, 4, 1, 0, 8, 0, 1, 0, 0, 1, 0, 0, 0, 1]': ([0.22955, 0.229333, 0.227476, 0.199291, 0.198969, 0.199073, 0.198857, 0.199025, 0.199544, 0.199084, 0.198997, 0.198965, 0.199078, 0.199661, 0.19919, 0.199319, 0.19928, 0.19928, 0.199798, 0.199437, 0.199337, 0.199223, 0.199347, 0.199331, 0.20024, 0.199474, 0.199159, 0.199239, 0.203107, 0.204919], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 6, 6, 6, 6, 4, 1, 0, 8, 0, 1, 0, 0, 1, 0, 0, 0, 1]': ([0.22955, 0.229333, 0.227476, 0.199291, 0.198969, 0.199073, 0.198857, 0.199025, 0.199544, 0.199084, 0.198997, 0.198965, 0.199078, 0.199661, 0.19919, 0.199319, 0.19928, 0.19928, 0.199798, 0.199437, 0.199337, 0.199223, 0.199347, 0.199331, 0.20024, 0.199474, 0.199159, 0.199239, 0.203107, 0.204919], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	25
        Max loop nest depth: 	5
        Additions: 		1264
        Multiplications: 	380
        Divisions: 		0
        Logical: 		0
        Reads: 			2121
        Writes: 		257
        Comparisons:		25
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest32.exe __orio_perftest32.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest32.exe  
Program Test Output: 
{'[3, 1, 6, 1, 6, 4, 0, 0, 7, 3, 0, 3, 0, 0, 2, 0, 1, 0]' : 0.167917}
{'[3, 1, 6, 1, 6, 4, 0, 0, 7, 3, 0, 3, 0, 0, 2, 0, 1, 0]' : 0.167994}
{'[3, 1, 6, 1, 6, 4, 0, 0, 7, 3, 0, 3, 0, 0, 2, 0, 1, 0]' : 0.16087}
{'[3, 1, 6, 1, 6, 4, 0, 0, 7, 3, 0, 3, 0, 0, 2, 0, 1, 0]' : 0.145687}
{'[3, 1, 6, 1, 6, 4, 0, 0, 7, 3, 0, 3, 0, 0, 2, 0, 1, 0]' : 0.147844}
{'[3, 1, 6, 1, 6, 4, 0, 0, 7, 3, 0, 3, 0, 0, 2, 0, 1, 0]' : 0.146206}
{'[3, 1, 6, 1, 6, 4, 0, 0, 7, 3, 0, 3, 0, 0, 2, 0, 1, 0]' : 0.146071}
{'[3, 1, 6, 1, 6, 4, 0, 0, 7, 3, 0, 3, 0, 0, 2, 0, 1, 0]' : 0.146669}
{'[3, 1, 6, 1, 6, 4, 0, 0, 7, 3, 0, 3, 0, 0, 2, 0, 1, 0]' : 0.146435}
{'[3, 1, 6, 1, 6, 4, 0, 0, 7, 3, 0, 3, 0, 0, 2, 0, 1, 0]' : 0.146016}
{'[3, 1, 6, 1, 6, 4, 0, 0, 7, 3, 0, 3, 0, 0, 2, 0, 1, 0]' : 0.146077}
{'[3, 1, 6, 1, 6, 4, 0, 0, 7, 3, 0, 3, 0, 0, 2, 0, 1, 0]' : 0.14918}
{'[3, 1, 6, 1, 6, 4, 0, 0, 7, 3, 0, 3, 0, 0, 2, 0, 1, 0]' : 0.1472}
{'[3, 1, 6, 1, 6, 4, 0, 0, 7, 3, 0, 3, 0, 0, 2, 0, 1, 0]' : 0.146192}
{'[3, 1, 6, 1, 6, 4, 0, 0, 7, 3, 0, 3, 0, 0, 2, 0, 1, 0]' : 0.147475}
{'[3, 1, 6, 1, 6, 4, 0, 0, 7, 3, 0, 3, 0, 0, 2, 0, 1, 0]' : 0.147885}
{'[3, 1, 6, 1, 6, 4, 0, 0, 7, 3, 0, 3, 0, 0, 2, 0, 1, 0]' : 0.146169}
{'[3, 1, 6, 1, 6, 4, 0, 0, 7, 3, 0, 3, 0, 0, 2, 0, 1, 0]' : 0.145971}
{'[3, 1, 6, 1, 6, 4, 0, 0, 7, 3, 0, 3, 0, 0, 2, 0, 1, 0]' : 0.14972}
{'[3, 1, 6, 1, 6, 4, 0, 0, 7, 3, 0, 3, 0, 0, 2, 0, 1, 0]' : 0.146274}
{'[3, 1, 6, 1, 6, 4, 0, 0, 7, 3, 0, 3, 0, 0, 2, 0, 1, 0]' : 0.146399}
{'[3, 1, 6, 1, 6, 4, 0, 0, 7, 3, 0, 3, 0, 0, 2, 0, 1, 0]' : 0.147777}
{'[3, 1, 6, 1, 6, 4, 0, 0, 7, 3, 0, 3, 0, 0, 2, 0, 1, 0]' : 0.14602}
{'[3, 1, 6, 1, 6, 4, 0, 0, 7, 3, 0, 3, 0, 0, 2, 0, 1, 0]' : 0.146037}
{'[3, 1, 6, 1, 6, 4, 0, 0, 7, 3, 0, 3, 0, 0, 2, 0, 1, 0]' : 0.14659}
{'[3, 1, 6, 1, 6, 4, 0, 0, 7, 3, 0, 3, 0, 0, 2, 0, 1, 0]' : 0.149556}
{'[3, 1, 6, 1, 6, 4, 0, 0, 7, 3, 0, 3, 0, 0, 2, 0, 1, 0]' : 0.146044}
{'[3, 1, 6, 1, 6, 4, 0, 0, 7, 3, 0, 3, 0, 0, 2, 0, 1, 0]' : 0.146168}
{'[3, 1, 6, 1, 6, 4, 0, 0, 7, 3, 0, 3, 0, 0, 2, 0, 1, 0]' : 0.147737}
{'[3, 1, 6, 1, 6, 4, 0, 0, 7, 3, 0, 3, 0, 0, 2, 0, 1, 0]' : 0.145993}

out:
 ["{'[3, 1, 6, 1, 6, 4, 0, 0, 7, 3, 0, 3, 0, 0, 2, 0, 1, 0]' : 0.167917}", "{'[3, 1, 6, 1, 6, 4, 0, 0, 7, 3, 0, 3, 0, 0, 2, 0, 1, 0]' : 0.167994}", "{'[3, 1, 6, 1, 6, 4, 0, 0, 7, 3, 0, 3, 0, 0, 2, 0, 1, 0]' : 0.16087}", "{'[3, 1, 6, 1, 6, 4, 0, 0, 7, 3, 0, 3, 0, 0, 2, 0, 1, 0]' : 0.145687}", "{'[3, 1, 6, 1, 6, 4, 0, 0, 7, 3, 0, 3, 0, 0, 2, 0, 1, 0]' : 0.147844}", "{'[3, 1, 6, 1, 6, 4, 0, 0, 7, 3, 0, 3, 0, 0, 2, 0, 1, 0]' : 0.146206}", "{'[3, 1, 6, 1, 6, 4, 0, 0, 7, 3, 0, 3, 0, 0, 2, 0, 1, 0]' : 0.146071}", "{'[3, 1, 6, 1, 6, 4, 0, 0, 7, 3, 0, 3, 0, 0, 2, 0, 1, 0]' : 0.146669}", "{'[3, 1, 6, 1, 6, 4, 0, 0, 7, 3, 0, 3, 0, 0, 2, 0, 1, 0]' : 0.146435}", "{'[3, 1, 6, 1, 6, 4, 0, 0, 7, 3, 0, 3, 0, 0, 2, 0, 1, 0]' : 0.146016}", "{'[3, 1, 6, 1, 6, 4, 0, 0, 7, 3, 0, 3, 0, 0, 2, 0, 1, 0]' : 0.146077}", "{'[3, 1, 6, 1, 6, 4, 0, 0, 7, 3, 0, 3, 0, 0, 2, 0, 1, 0]' : 0.14918}", "{'[3, 1, 6, 1, 6, 4, 0, 0, 7, 3, 0, 3, 0, 0, 2, 0, 1, 0]' : 0.1472}", "{'[3, 1, 6, 1, 6, 4, 0, 0, 7, 3, 0, 3, 0, 0, 2, 0, 1, 0]' : 0.146192}", "{'[3, 1, 6, 1, 6, 4, 0, 0, 7, 3, 0, 3, 0, 0, 2, 0, 1, 0]' : 0.147475}", "{'[3, 1, 6, 1, 6, 4, 0, 0, 7, 3, 0, 3, 0, 0, 2, 0, 1, 0]' : 0.147885}", "{'[3, 1, 6, 1, 6, 4, 0, 0, 7, 3, 0, 3, 0, 0, 2, 0, 1, 0]' : 0.146169}", "{'[3, 1, 6, 1, 6, 4, 0, 0, 7, 3, 0, 3, 0, 0, 2, 0, 1, 0]' : 0.145971}", "{'[3, 1, 6, 1, 6, 4, 0, 0, 7, 3, 0, 3, 0, 0, 2, 0, 1, 0]' : 0.14972}", "{'[3, 1, 6, 1, 6, 4, 0, 0, 7, 3, 0, 3, 0, 0, 2, 0, 1, 0]' : 0.146274}", "{'[3, 1, 6, 1, 6, 4, 0, 0, 7, 3, 0, 3, 0, 0, 2, 0, 1, 0]' : 0.146399}", "{'[3, 1, 6, 1, 6, 4, 0, 0, 7, 3, 0, 3, 0, 0, 2, 0, 1, 0]' : 0.147777}", "{'[3, 1, 6, 1, 6, 4, 0, 0, 7, 3, 0, 3, 0, 0, 2, 0, 1, 0]' : 0.14602}", "{'[3, 1, 6, 1, 6, 4, 0, 0, 7, 3, 0, 3, 0, 0, 2, 0, 1, 0]' : 0.146037}", "{'[3, 1, 6, 1, 6, 4, 0, 0, 7, 3, 0, 3, 0, 0, 2, 0, 1, 0]' : 0.14659}", "{'[3, 1, 6, 1, 6, 4, 0, 0, 7, 3, 0, 3, 0, 0, 2, 0, 1, 0]' : 0.149556}", "{'[3, 1, 6, 1, 6, 4, 0, 0, 7, 3, 0, 3, 0, 0, 2, 0, 1, 0]' : 0.146044}", "{'[3, 1, 6, 1, 6, 4, 0, 0, 7, 3, 0, 3, 0, 0, 2, 0, 1, 0]' : 0.146168}", "{'[3, 1, 6, 1, 6, 4, 0, 0, 7, 3, 0, 3, 0, 0, 2, 0, 1, 0]' : 0.147737}", "{'[3, 1, 6, 1, 6, 4, 0, 0, 7, 3, 0, 3, 0, 0, 2, 0, 1, 0]' : 0.145993}"]
returning from 'run': {'[3, 1, 6, 1, 6, 4, 0, 0, 7, 3, 0, 3, 0, 0, 2, 0, 1, 0]': ([0.167917, 0.167994, 0.16087, 0.145687, 0.147844, 0.146206, 0.146071, 0.146669, 0.146435, 0.146016, 0.146077, 0.14918, 0.1472, 0.146192, 0.147475, 0.147885, 0.146169, 0.145971, 0.14972, 0.146274, 0.146399, 0.147777, 0.14602, 0.146037, 0.14659, 0.149556, 0.146044, 0.146168, 0.147737, 0.145993], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 1, 6, 1, 6, 4, 0, 0, 7, 3, 0, 3, 0, 0, 2, 0, 1, 0]': ([0.167917, 0.167994, 0.16087, 0.145687, 0.147844, 0.146206, 0.146071, 0.146669, 0.146435, 0.146016, 0.146077, 0.14918, 0.1472, 0.146192, 0.147475, 0.147885, 0.146169, 0.145971, 0.14972, 0.146274, 0.146399, 0.147777, 0.14602, 0.146037, 0.14659, 0.149556, 0.146044, 0.146168, 0.147737, 0.145993], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	5
        Additions: 		3703
        Multiplications: 	1824
        Divisions: 		0
        Logical: 		0
        Reads: 			6928
        Writes: 		1102
        Comparisons:		18
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest33.exe __orio_perftest33.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest33.exe  
Program Test Output: 
{'[1, 6, 6, 5, 0, 0, 0, 0, 27, 22, 0, 3, 0, 2, 0, 1, 0, 0]' : 0.155839}
{'[1, 6, 6, 5, 0, 0, 0, 0, 27, 22, 0, 3, 0, 2, 0, 1, 0, 0]' : 0.155957}
{'[1, 6, 6, 5, 0, 0, 0, 0, 27, 22, 0, 3, 0, 2, 0, 1, 0, 0]' : 0.157752}
{'[1, 6, 6, 5, 0, 0, 0, 0, 27, 22, 0, 3, 0, 2, 0, 1, 0, 0]' : 0.159422}
{'[1, 6, 6, 5, 0, 0, 0, 0, 27, 22, 0, 3, 0, 2, 0, 1, 0, 0]' : 0.159438}
{'[1, 6, 6, 5, 0, 0, 0, 0, 27, 22, 0, 3, 0, 2, 0, 1, 0, 0]' : 0.159383}
{'[1, 6, 6, 5, 0, 0, 0, 0, 27, 22, 0, 3, 0, 2, 0, 1, 0, 0]' : 0.1594}
{'[1, 6, 6, 5, 0, 0, 0, 0, 27, 22, 0, 3, 0, 2, 0, 1, 0, 0]' : 0.157353}
{'[1, 6, 6, 5, 0, 0, 0, 0, 27, 22, 0, 3, 0, 2, 0, 1, 0, 0]' : 0.154751}
{'[1, 6, 6, 5, 0, 0, 0, 0, 27, 22, 0, 3, 0, 2, 0, 1, 0, 0]' : 0.159407}
{'[1, 6, 6, 5, 0, 0, 0, 0, 27, 22, 0, 3, 0, 2, 0, 1, 0, 0]' : 0.159483}
{'[1, 6, 6, 5, 0, 0, 0, 0, 27, 22, 0, 3, 0, 2, 0, 1, 0, 0]' : 0.15946}
{'[1, 6, 6, 5, 0, 0, 0, 0, 27, 22, 0, 3, 0, 2, 0, 1, 0, 0]' : 0.159455}
{'[1, 6, 6, 5, 0, 0, 0, 0, 27, 22, 0, 3, 0, 2, 0, 1, 0, 0]' : 0.159848}
{'[1, 6, 6, 5, 0, 0, 0, 0, 27, 22, 0, 3, 0, 2, 0, 1, 0, 0]' : 0.159373}
{'[1, 6, 6, 5, 0, 0, 0, 0, 27, 22, 0, 3, 0, 2, 0, 1, 0, 0]' : 0.159394}
{'[1, 6, 6, 5, 0, 0, 0, 0, 27, 22, 0, 3, 0, 2, 0, 1, 0, 0]' : 0.159442}
{'[1, 6, 6, 5, 0, 0, 0, 0, 27, 22, 0, 3, 0, 2, 0, 1, 0, 0]' : 0.159435}
{'[1, 6, 6, 5, 0, 0, 0, 0, 27, 22, 0, 3, 0, 2, 0, 1, 0, 0]' : 0.15946}
{'[1, 6, 6, 5, 0, 0, 0, 0, 27, 22, 0, 3, 0, 2, 0, 1, 0, 0]' : 0.159539}
{'[1, 6, 6, 5, 0, 0, 0, 0, 27, 22, 0, 3, 0, 2, 0, 1, 0, 0]' : 0.159327}
{'[1, 6, 6, 5, 0, 0, 0, 0, 27, 22, 0, 3, 0, 2, 0, 1, 0, 0]' : 0.159394}
{'[1, 6, 6, 5, 0, 0, 0, 0, 27, 22, 0, 3, 0, 2, 0, 1, 0, 0]' : 0.157393}
{'[1, 6, 6, 5, 0, 0, 0, 0, 27, 22, 0, 3, 0, 2, 0, 1, 0, 0]' : 0.159484}
{'[1, 6, 6, 5, 0, 0, 0, 0, 27, 22, 0, 3, 0, 2, 0, 1, 0, 0]' : 0.159411}
{'[1, 6, 6, 5, 0, 0, 0, 0, 27, 22, 0, 3, 0, 2, 0, 1, 0, 0]' : 0.1594}
{'[1, 6, 6, 5, 0, 0, 0, 0, 27, 22, 0, 3, 0, 2, 0, 1, 0, 0]' : 0.159763}
{'[1, 6, 6, 5, 0, 0, 0, 0, 27, 22, 0, 3, 0, 2, 0, 1, 0, 0]' : 0.159497}
{'[1, 6, 6, 5, 0, 0, 0, 0, 27, 22, 0, 3, 0, 2, 0, 1, 0, 0]' : 0.159577}
{'[1, 6, 6, 5, 0, 0, 0, 0, 27, 22, 0, 3, 0, 2, 0, 1, 0, 0]' : 0.15958}

out:
 ["{'[1, 6, 6, 5, 0, 0, 0, 0, 27, 22, 0, 3, 0, 2, 0, 1, 0, 0]' : 0.155839}", "{'[1, 6, 6, 5, 0, 0, 0, 0, 27, 22, 0, 3, 0, 2, 0, 1, 0, 0]' : 0.155957}", "{'[1, 6, 6, 5, 0, 0, 0, 0, 27, 22, 0, 3, 0, 2, 0, 1, 0, 0]' : 0.157752}", "{'[1, 6, 6, 5, 0, 0, 0, 0, 27, 22, 0, 3, 0, 2, 0, 1, 0, 0]' : 0.159422}", "{'[1, 6, 6, 5, 0, 0, 0, 0, 27, 22, 0, 3, 0, 2, 0, 1, 0, 0]' : 0.159438}", "{'[1, 6, 6, 5, 0, 0, 0, 0, 27, 22, 0, 3, 0, 2, 0, 1, 0, 0]' : 0.159383}", "{'[1, 6, 6, 5, 0, 0, 0, 0, 27, 22, 0, 3, 0, 2, 0, 1, 0, 0]' : 0.1594}", "{'[1, 6, 6, 5, 0, 0, 0, 0, 27, 22, 0, 3, 0, 2, 0, 1, 0, 0]' : 0.157353}", "{'[1, 6, 6, 5, 0, 0, 0, 0, 27, 22, 0, 3, 0, 2, 0, 1, 0, 0]' : 0.154751}", "{'[1, 6, 6, 5, 0, 0, 0, 0, 27, 22, 0, 3, 0, 2, 0, 1, 0, 0]' : 0.159407}", "{'[1, 6, 6, 5, 0, 0, 0, 0, 27, 22, 0, 3, 0, 2, 0, 1, 0, 0]' : 0.159483}", "{'[1, 6, 6, 5, 0, 0, 0, 0, 27, 22, 0, 3, 0, 2, 0, 1, 0, 0]' : 0.15946}", "{'[1, 6, 6, 5, 0, 0, 0, 0, 27, 22, 0, 3, 0, 2, 0, 1, 0, 0]' : 0.159455}", "{'[1, 6, 6, 5, 0, 0, 0, 0, 27, 22, 0, 3, 0, 2, 0, 1, 0, 0]' : 0.159848}", "{'[1, 6, 6, 5, 0, 0, 0, 0, 27, 22, 0, 3, 0, 2, 0, 1, 0, 0]' : 0.159373}", "{'[1, 6, 6, 5, 0, 0, 0, 0, 27, 22, 0, 3, 0, 2, 0, 1, 0, 0]' : 0.159394}", "{'[1, 6, 6, 5, 0, 0, 0, 0, 27, 22, 0, 3, 0, 2, 0, 1, 0, 0]' : 0.159442}", "{'[1, 6, 6, 5, 0, 0, 0, 0, 27, 22, 0, 3, 0, 2, 0, 1, 0, 0]' : 0.159435}", "{'[1, 6, 6, 5, 0, 0, 0, 0, 27, 22, 0, 3, 0, 2, 0, 1, 0, 0]' : 0.15946}", "{'[1, 6, 6, 5, 0, 0, 0, 0, 27, 22, 0, 3, 0, 2, 0, 1, 0, 0]' : 0.159539}", "{'[1, 6, 6, 5, 0, 0, 0, 0, 27, 22, 0, 3, 0, 2, 0, 1, 0, 0]' : 0.159327}", "{'[1, 6, 6, 5, 0, 0, 0, 0, 27, 22, 0, 3, 0, 2, 0, 1, 0, 0]' : 0.159394}", "{'[1, 6, 6, 5, 0, 0, 0, 0, 27, 22, 0, 3, 0, 2, 0, 1, 0, 0]' : 0.157393}", "{'[1, 6, 6, 5, 0, 0, 0, 0, 27, 22, 0, 3, 0, 2, 0, 1, 0, 0]' : 0.159484}", "{'[1, 6, 6, 5, 0, 0, 0, 0, 27, 22, 0, 3, 0, 2, 0, 1, 0, 0]' : 0.159411}", "{'[1, 6, 6, 5, 0, 0, 0, 0, 27, 22, 0, 3, 0, 2, 0, 1, 0, 0]' : 0.1594}", "{'[1, 6, 6, 5, 0, 0, 0, 0, 27, 22, 0, 3, 0, 2, 0, 1, 0, 0]' : 0.159763}", "{'[1, 6, 6, 5, 0, 0, 0, 0, 27, 22, 0, 3, 0, 2, 0, 1, 0, 0]' : 0.159497}", "{'[1, 6, 6, 5, 0, 0, 0, 0, 27, 22, 0, 3, 0, 2, 0, 1, 0, 0]' : 0.159577}", "{'[1, 6, 6, 5, 0, 0, 0, 0, 27, 22, 0, 3, 0, 2, 0, 1, 0, 0]' : 0.15958}"]
returning from 'run': {'[1, 6, 6, 5, 0, 0, 0, 0, 27, 22, 0, 3, 0, 2, 0, 1, 0, 0]': ([0.155839, 0.155957, 0.157752, 0.159422, 0.159438, 0.159383, 0.1594, 0.157353, 0.154751, 0.159407, 0.159483, 0.15946, 0.159455, 0.159848, 0.159373, 0.159394, 0.159442, 0.159435, 0.15946, 0.159539, 0.159327, 0.159394, 0.157393, 0.159484, 0.159411, 0.1594, 0.159763, 0.159497, 0.159577, 0.15958], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 6, 6, 5, 0, 0, 0, 0, 27, 22, 0, 3, 0, 2, 0, 1, 0, 0]': ([0.155839, 0.155957, 0.157752, 0.159422, 0.159438, 0.159383, 0.1594, 0.157353, 0.154751, 0.159407, 0.159483, 0.15946, 0.159455, 0.159848, 0.159373, 0.159394, 0.159442, 0.159435, 0.15946, 0.159539, 0.159327, 0.159394, 0.157393, 0.159484, 0.159411, 0.1594, 0.159763, 0.159497, 0.159577, 0.15958], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		157
        Multiplications: 	26
        Divisions: 		0
        Logical: 		0
        Reads: 			330
        Writes: 		79
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest34.exe __orio_perftest34.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest34.exe  
Program Test Output: 
{'[3, 6, 5, 0, 5, 6, 1, 1, 29, 0, 3, 22, 0, 0, 1, 0, 1, 0]' : 0.344475}
{'[3, 6, 5, 0, 5, 6, 1, 1, 29, 0, 3, 22, 0, 0, 1, 0, 1, 0]' : 0.328585}
{'[3, 6, 5, 0, 5, 6, 1, 1, 29, 0, 3, 22, 0, 0, 1, 0, 1, 0]' : 0.298476}
{'[3, 6, 5, 0, 5, 6, 1, 1, 29, 0, 3, 22, 0, 0, 1, 0, 1, 0]' : 0.298597}
{'[3, 6, 5, 0, 5, 6, 1, 1, 29, 0, 3, 22, 0, 0, 1, 0, 1, 0]' : 0.299438}
{'[3, 6, 5, 0, 5, 6, 1, 1, 29, 0, 3, 22, 0, 0, 1, 0, 1, 0]' : 0.308182}
{'[3, 6, 5, 0, 5, 6, 1, 1, 29, 0, 3, 22, 0, 0, 1, 0, 1, 0]' : 0.308304}
{'[3, 6, 5, 0, 5, 6, 1, 1, 29, 0, 3, 22, 0, 0, 1, 0, 1, 0]' : 0.308107}
{'[3, 6, 5, 0, 5, 6, 1, 1, 29, 0, 3, 22, 0, 0, 1, 0, 1, 0]' : 0.305217}
{'[3, 6, 5, 0, 5, 6, 1, 1, 29, 0, 3, 22, 0, 0, 1, 0, 1, 0]' : 0.29895}
{'[3, 6, 5, 0, 5, 6, 1, 1, 29, 0, 3, 22, 0, 0, 1, 0, 1, 0]' : 0.298417}
{'[3, 6, 5, 0, 5, 6, 1, 1, 29, 0, 3, 22, 0, 0, 1, 0, 1, 0]' : 0.305546}
{'[3, 6, 5, 0, 5, 6, 1, 1, 29, 0, 3, 22, 0, 0, 1, 0, 1, 0]' : 0.299504}
{'[3, 6, 5, 0, 5, 6, 1, 1, 29, 0, 3, 22, 0, 0, 1, 0, 1, 0]' : 0.308101}
{'[3, 6, 5, 0, 5, 6, 1, 1, 29, 0, 3, 22, 0, 0, 1, 0, 1, 0]' : 0.308253}
{'[3, 6, 5, 0, 5, 6, 1, 1, 29, 0, 3, 22, 0, 0, 1, 0, 1, 0]' : 0.308168}
{'[3, 6, 5, 0, 5, 6, 1, 1, 29, 0, 3, 22, 0, 0, 1, 0, 1, 0]' : 0.308168}
{'[3, 6, 5, 0, 5, 6, 1, 1, 29, 0, 3, 22, 0, 0, 1, 0, 1, 0]' : 0.305539}
{'[3, 6, 5, 0, 5, 6, 1, 1, 29, 0, 3, 22, 0, 0, 1, 0, 1, 0]' : 0.305777}
{'[3, 6, 5, 0, 5, 6, 1, 1, 29, 0, 3, 22, 0, 0, 1, 0, 1, 0]' : 0.308459}
{'[3, 6, 5, 0, 5, 6, 1, 1, 29, 0, 3, 22, 0, 0, 1, 0, 1, 0]' : 0.308222}
{'[3, 6, 5, 0, 5, 6, 1, 1, 29, 0, 3, 22, 0, 0, 1, 0, 1, 0]' : 0.308115}
{'[3, 6, 5, 0, 5, 6, 1, 1, 29, 0, 3, 22, 0, 0, 1, 0, 1, 0]' : 0.308122}
{'[3, 6, 5, 0, 5, 6, 1, 1, 29, 0, 3, 22, 0, 0, 1, 0, 1, 0]' : 0.308043}
{'[3, 6, 5, 0, 5, 6, 1, 1, 29, 0, 3, 22, 0, 0, 1, 0, 1, 0]' : 0.308314}
{'[3, 6, 5, 0, 5, 6, 1, 1, 29, 0, 3, 22, 0, 0, 1, 0, 1, 0]' : 0.3084}
{'[3, 6, 5, 0, 5, 6, 1, 1, 29, 0, 3, 22, 0, 0, 1, 0, 1, 0]' : 0.308071}
{'[3, 6, 5, 0, 5, 6, 1, 1, 29, 0, 3, 22, 0, 0, 1, 0, 1, 0]' : 0.308136}
{'[3, 6, 5, 0, 5, 6, 1, 1, 29, 0, 3, 22, 0, 0, 1, 0, 1, 0]' : 0.308078}
{'[3, 6, 5, 0, 5, 6, 1, 1, 29, 0, 3, 22, 0, 0, 1, 0, 1, 0]' : 0.30815}

out:
 ["{'[3, 6, 5, 0, 5, 6, 1, 1, 29, 0, 3, 22, 0, 0, 1, 0, 1, 0]' : 0.344475}", "{'[3, 6, 5, 0, 5, 6, 1, 1, 29, 0, 3, 22, 0, 0, 1, 0, 1, 0]' : 0.328585}", "{'[3, 6, 5, 0, 5, 6, 1, 1, 29, 0, 3, 22, 0, 0, 1, 0, 1, 0]' : 0.298476}", "{'[3, 6, 5, 0, 5, 6, 1, 1, 29, 0, 3, 22, 0, 0, 1, 0, 1, 0]' : 0.298597}", "{'[3, 6, 5, 0, 5, 6, 1, 1, 29, 0, 3, 22, 0, 0, 1, 0, 1, 0]' : 0.299438}", "{'[3, 6, 5, 0, 5, 6, 1, 1, 29, 0, 3, 22, 0, 0, 1, 0, 1, 0]' : 0.308182}", "{'[3, 6, 5, 0, 5, 6, 1, 1, 29, 0, 3, 22, 0, 0, 1, 0, 1, 0]' : 0.308304}", "{'[3, 6, 5, 0, 5, 6, 1, 1, 29, 0, 3, 22, 0, 0, 1, 0, 1, 0]' : 0.308107}", "{'[3, 6, 5, 0, 5, 6, 1, 1, 29, 0, 3, 22, 0, 0, 1, 0, 1, 0]' : 0.305217}", "{'[3, 6, 5, 0, 5, 6, 1, 1, 29, 0, 3, 22, 0, 0, 1, 0, 1, 0]' : 0.29895}", "{'[3, 6, 5, 0, 5, 6, 1, 1, 29, 0, 3, 22, 0, 0, 1, 0, 1, 0]' : 0.298417}", "{'[3, 6, 5, 0, 5, 6, 1, 1, 29, 0, 3, 22, 0, 0, 1, 0, 1, 0]' : 0.305546}", "{'[3, 6, 5, 0, 5, 6, 1, 1, 29, 0, 3, 22, 0, 0, 1, 0, 1, 0]' : 0.299504}", "{'[3, 6, 5, 0, 5, 6, 1, 1, 29, 0, 3, 22, 0, 0, 1, 0, 1, 0]' : 0.308101}", "{'[3, 6, 5, 0, 5, 6, 1, 1, 29, 0, 3, 22, 0, 0, 1, 0, 1, 0]' : 0.308253}", "{'[3, 6, 5, 0, 5, 6, 1, 1, 29, 0, 3, 22, 0, 0, 1, 0, 1, 0]' : 0.308168}", "{'[3, 6, 5, 0, 5, 6, 1, 1, 29, 0, 3, 22, 0, 0, 1, 0, 1, 0]' : 0.308168}", "{'[3, 6, 5, 0, 5, 6, 1, 1, 29, 0, 3, 22, 0, 0, 1, 0, 1, 0]' : 0.305539}", "{'[3, 6, 5, 0, 5, 6, 1, 1, 29, 0, 3, 22, 0, 0, 1, 0, 1, 0]' : 0.305777}", "{'[3, 6, 5, 0, 5, 6, 1, 1, 29, 0, 3, 22, 0, 0, 1, 0, 1, 0]' : 0.308459}", "{'[3, 6, 5, 0, 5, 6, 1, 1, 29, 0, 3, 22, 0, 0, 1, 0, 1, 0]' : 0.308222}", "{'[3, 6, 5, 0, 5, 6, 1, 1, 29, 0, 3, 22, 0, 0, 1, 0, 1, 0]' : 0.308115}", "{'[3, 6, 5, 0, 5, 6, 1, 1, 29, 0, 3, 22, 0, 0, 1, 0, 1, 0]' : 0.308122}", "{'[3, 6, 5, 0, 5, 6, 1, 1, 29, 0, 3, 22, 0, 0, 1, 0, 1, 0]' : 0.308043}", "{'[3, 6, 5, 0, 5, 6, 1, 1, 29, 0, 3, 22, 0, 0, 1, 0, 1, 0]' : 0.308314}", "{'[3, 6, 5, 0, 5, 6, 1, 1, 29, 0, 3, 22, 0, 0, 1, 0, 1, 0]' : 0.3084}", "{'[3, 6, 5, 0, 5, 6, 1, 1, 29, 0, 3, 22, 0, 0, 1, 0, 1, 0]' : 0.308071}", "{'[3, 6, 5, 0, 5, 6, 1, 1, 29, 0, 3, 22, 0, 0, 1, 0, 1, 0]' : 0.308136}", "{'[3, 6, 5, 0, 5, 6, 1, 1, 29, 0, 3, 22, 0, 0, 1, 0, 1, 0]' : 0.308078}", "{'[3, 6, 5, 0, 5, 6, 1, 1, 29, 0, 3, 22, 0, 0, 1, 0, 1, 0]' : 0.30815}"]
returning from 'run': {'[3, 6, 5, 0, 5, 6, 1, 1, 29, 0, 3, 22, 0, 0, 1, 0, 1, 0]': ([0.344475, 0.328585, 0.298476, 0.298597, 0.299438, 0.308182, 0.308304, 0.308107, 0.305217, 0.29895, 0.298417, 0.305546, 0.299504, 0.308101, 0.308253, 0.308168, 0.308168, 0.305539, 0.305777, 0.308459, 0.308222, 0.308115, 0.308122, 0.308043, 0.308314, 0.3084, 0.308071, 0.308136, 0.308078, 0.30815], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 6, 5, 0, 5, 6, 1, 1, 29, 0, 3, 22, 0, 0, 1, 0, 1, 0]': ([0.344475, 0.328585, 0.298476, 0.298597, 0.299438, 0.308182, 0.308304, 0.308107, 0.305217, 0.29895, 0.298417, 0.305546, 0.299504, 0.308101, 0.308253, 0.308168, 0.308168, 0.305539, 0.305777, 0.308459, 0.308222, 0.308115, 0.308122, 0.308043, 0.308314, 0.3084, 0.308071, 0.308136, 0.308078, 0.30815], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	6
        Additions: 		844
        Multiplications: 	234
        Divisions: 		0
        Logical: 		0
        Reads: 			1476
        Writes: 		194
        Comparisons:		24
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest35.exe __orio_perftest35.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest35.exe  
Program Test Output: 
{'[5, 2, 0, 6, 5, 6, 0, 1, 18, 0, 0, 2, 1, 1, 0, 0, 1, 0]' : 0.115405}
{'[5, 2, 0, 6, 5, 6, 0, 1, 18, 0, 0, 2, 1, 1, 0, 0, 1, 0]' : 0.115678}
{'[5, 2, 0, 6, 5, 6, 0, 1, 18, 0, 0, 2, 1, 1, 0, 0, 1, 0]' : 0.114875}
{'[5, 2, 0, 6, 5, 6, 0, 1, 18, 0, 0, 2, 1, 1, 0, 0, 1, 0]' : 0.115008}
{'[5, 2, 0, 6, 5, 6, 0, 1, 18, 0, 0, 2, 1, 1, 0, 0, 1, 0]' : 0.114954}
{'[5, 2, 0, 6, 5, 6, 0, 1, 18, 0, 0, 2, 1, 1, 0, 0, 1, 0]' : 0.114934}
{'[5, 2, 0, 6, 5, 6, 0, 1, 18, 0, 0, 2, 1, 1, 0, 0, 1, 0]' : 0.11519}
{'[5, 2, 0, 6, 5, 6, 0, 1, 18, 0, 0, 2, 1, 1, 0, 0, 1, 0]' : 0.114994}
{'[5, 2, 0, 6, 5, 6, 0, 1, 18, 0, 0, 2, 1, 1, 0, 0, 1, 0]' : 0.114962}
{'[5, 2, 0, 6, 5, 6, 0, 1, 18, 0, 0, 2, 1, 1, 0, 0, 1, 0]' : 0.114889}
{'[5, 2, 0, 6, 5, 6, 0, 1, 18, 0, 0, 2, 1, 1, 0, 0, 1, 0]' : 0.115133}
{'[5, 2, 0, 6, 5, 6, 0, 1, 18, 0, 0, 2, 1, 1, 0, 0, 1, 0]' : 0.115355}
{'[5, 2, 0, 6, 5, 6, 0, 1, 18, 0, 0, 2, 1, 1, 0, 0, 1, 0]' : 0.114136}
{'[5, 2, 0, 6, 5, 6, 0, 1, 18, 0, 0, 2, 1, 1, 0, 0, 1, 0]' : 0.112373}
{'[5, 2, 0, 6, 5, 6, 0, 1, 18, 0, 0, 2, 1, 1, 0, 0, 1, 0]' : 0.112406}
{'[5, 2, 0, 6, 5, 6, 0, 1, 18, 0, 0, 2, 1, 1, 0, 0, 1, 0]' : 0.115025}
{'[5, 2, 0, 6, 5, 6, 0, 1, 18, 0, 0, 2, 1, 1, 0, 0, 1, 0]' : 0.11495}
{'[5, 2, 0, 6, 5, 6, 0, 1, 18, 0, 0, 2, 1, 1, 0, 0, 1, 0]' : 0.114958}
{'[5, 2, 0, 6, 5, 6, 0, 1, 18, 0, 0, 2, 1, 1, 0, 0, 1, 0]' : 0.113966}
{'[5, 2, 0, 6, 5, 6, 0, 1, 18, 0, 0, 2, 1, 1, 0, 0, 1, 0]' : 0.114201}
{'[5, 2, 0, 6, 5, 6, 0, 1, 18, 0, 0, 2, 1, 1, 0, 0, 1, 0]' : 0.115026}
{'[5, 2, 0, 6, 5, 6, 0, 1, 18, 0, 0, 2, 1, 1, 0, 0, 1, 0]' : 0.113059}
{'[5, 2, 0, 6, 5, 6, 0, 1, 18, 0, 0, 2, 1, 1, 0, 0, 1, 0]' : 0.112261}
{'[5, 2, 0, 6, 5, 6, 0, 1, 18, 0, 0, 2, 1, 1, 0, 0, 1, 0]' : 0.113294}
{'[5, 2, 0, 6, 5, 6, 0, 1, 18, 0, 0, 2, 1, 1, 0, 0, 1, 0]' : 0.115333}
{'[5, 2, 0, 6, 5, 6, 0, 1, 18, 0, 0, 2, 1, 1, 0, 0, 1, 0]' : 0.115297}
{'[5, 2, 0, 6, 5, 6, 0, 1, 18, 0, 0, 2, 1, 1, 0, 0, 1, 0]' : 0.115238}
{'[5, 2, 0, 6, 5, 6, 0, 1, 18, 0, 0, 2, 1, 1, 0, 0, 1, 0]' : 0.115366}
{'[5, 2, 0, 6, 5, 6, 0, 1, 18, 0, 0, 2, 1, 1, 0, 0, 1, 0]' : 0.115086}
{'[5, 2, 0, 6, 5, 6, 0, 1, 18, 0, 0, 2, 1, 1, 0, 0, 1, 0]' : 0.114968}

out:
 ["{'[5, 2, 0, 6, 5, 6, 0, 1, 18, 0, 0, 2, 1, 1, 0, 0, 1, 0]' : 0.115405}", "{'[5, 2, 0, 6, 5, 6, 0, 1, 18, 0, 0, 2, 1, 1, 0, 0, 1, 0]' : 0.115678}", "{'[5, 2, 0, 6, 5, 6, 0, 1, 18, 0, 0, 2, 1, 1, 0, 0, 1, 0]' : 0.114875}", "{'[5, 2, 0, 6, 5, 6, 0, 1, 18, 0, 0, 2, 1, 1, 0, 0, 1, 0]' : 0.115008}", "{'[5, 2, 0, 6, 5, 6, 0, 1, 18, 0, 0, 2, 1, 1, 0, 0, 1, 0]' : 0.114954}", "{'[5, 2, 0, 6, 5, 6, 0, 1, 18, 0, 0, 2, 1, 1, 0, 0, 1, 0]' : 0.114934}", "{'[5, 2, 0, 6, 5, 6, 0, 1, 18, 0, 0, 2, 1, 1, 0, 0, 1, 0]' : 0.11519}", "{'[5, 2, 0, 6, 5, 6, 0, 1, 18, 0, 0, 2, 1, 1, 0, 0, 1, 0]' : 0.114994}", "{'[5, 2, 0, 6, 5, 6, 0, 1, 18, 0, 0, 2, 1, 1, 0, 0, 1, 0]' : 0.114962}", "{'[5, 2, 0, 6, 5, 6, 0, 1, 18, 0, 0, 2, 1, 1, 0, 0, 1, 0]' : 0.114889}", "{'[5, 2, 0, 6, 5, 6, 0, 1, 18, 0, 0, 2, 1, 1, 0, 0, 1, 0]' : 0.115133}", "{'[5, 2, 0, 6, 5, 6, 0, 1, 18, 0, 0, 2, 1, 1, 0, 0, 1, 0]' : 0.115355}", "{'[5, 2, 0, 6, 5, 6, 0, 1, 18, 0, 0, 2, 1, 1, 0, 0, 1, 0]' : 0.114136}", "{'[5, 2, 0, 6, 5, 6, 0, 1, 18, 0, 0, 2, 1, 1, 0, 0, 1, 0]' : 0.112373}", "{'[5, 2, 0, 6, 5, 6, 0, 1, 18, 0, 0, 2, 1, 1, 0, 0, 1, 0]' : 0.112406}", "{'[5, 2, 0, 6, 5, 6, 0, 1, 18, 0, 0, 2, 1, 1, 0, 0, 1, 0]' : 0.115025}", "{'[5, 2, 0, 6, 5, 6, 0, 1, 18, 0, 0, 2, 1, 1, 0, 0, 1, 0]' : 0.11495}", "{'[5, 2, 0, 6, 5, 6, 0, 1, 18, 0, 0, 2, 1, 1, 0, 0, 1, 0]' : 0.114958}", "{'[5, 2, 0, 6, 5, 6, 0, 1, 18, 0, 0, 2, 1, 1, 0, 0, 1, 0]' : 0.113966}", "{'[5, 2, 0, 6, 5, 6, 0, 1, 18, 0, 0, 2, 1, 1, 0, 0, 1, 0]' : 0.114201}", "{'[5, 2, 0, 6, 5, 6, 0, 1, 18, 0, 0, 2, 1, 1, 0, 0, 1, 0]' : 0.115026}", "{'[5, 2, 0, 6, 5, 6, 0, 1, 18, 0, 0, 2, 1, 1, 0, 0, 1, 0]' : 0.113059}", "{'[5, 2, 0, 6, 5, 6, 0, 1, 18, 0, 0, 2, 1, 1, 0, 0, 1, 0]' : 0.112261}", "{'[5, 2, 0, 6, 5, 6, 0, 1, 18, 0, 0, 2, 1, 1, 0, 0, 1, 0]' : 0.113294}", "{'[5, 2, 0, 6, 5, 6, 0, 1, 18, 0, 0, 2, 1, 1, 0, 0, 1, 0]' : 0.115333}", "{'[5, 2, 0, 6, 5, 6, 0, 1, 18, 0, 0, 2, 1, 1, 0, 0, 1, 0]' : 0.115297}", "{'[5, 2, 0, 6, 5, 6, 0, 1, 18, 0, 0, 2, 1, 1, 0, 0, 1, 0]' : 0.115238}", "{'[5, 2, 0, 6, 5, 6, 0, 1, 18, 0, 0, 2, 1, 1, 0, 0, 1, 0]' : 0.115366}", "{'[5, 2, 0, 6, 5, 6, 0, 1, 18, 0, 0, 2, 1, 1, 0, 0, 1, 0]' : 0.115086}", "{'[5, 2, 0, 6, 5, 6, 0, 1, 18, 0, 0, 2, 1, 1, 0, 0, 1, 0]' : 0.114968}"]
returning from 'run': {'[5, 2, 0, 6, 5, 6, 0, 1, 18, 0, 0, 2, 1, 1, 0, 0, 1, 0]': ([0.115405, 0.115678, 0.114875, 0.115008, 0.114954, 0.114934, 0.11519, 0.114994, 0.114962, 0.114889, 0.115133, 0.115355, 0.114136, 0.112373, 0.112406, 0.115025, 0.11495, 0.114958, 0.113966, 0.114201, 0.115026, 0.113059, 0.112261, 0.113294, 0.115333, 0.115297, 0.115238, 0.115366, 0.115086, 0.114968], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 2, 0, 6, 5, 6, 0, 1, 18, 0, 0, 2, 1, 1, 0, 0, 1, 0]': ([0.115405, 0.115678, 0.114875, 0.115008, 0.114954, 0.114934, 0.11519, 0.114994, 0.114962, 0.114889, 0.115133, 0.115355, 0.114136, 0.112373, 0.112406, 0.115025, 0.11495, 0.114958, 0.113966, 0.114201, 0.115026, 0.113059, 0.112261, 0.113294, 0.115333, 0.115297, 0.115238, 0.115366, 0.115086, 0.114968], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	5
        Additions: 		3304
        Multiplications: 	1026
        Divisions: 		0
        Logical: 		0
        Reads: 			5298
        Writes: 		565
        Comparisons:		20
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest36.exe __orio_perftest36.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest36.exe  
Program Test Output: 
{'[6, 6, 0, 6, 0, 5, 0, 0, 5, 0, 21, 24, 1, 0, 1, 0, 1, 0]' : 0.110728}
{'[6, 6, 0, 6, 0, 5, 0, 0, 5, 0, 21, 24, 1, 0, 1, 0, 1, 0]' : 0.110585}
{'[6, 6, 0, 6, 0, 5, 0, 0, 5, 0, 21, 24, 1, 0, 1, 0, 1, 0]' : 0.110899}
{'[6, 6, 0, 6, 0, 5, 0, 0, 5, 0, 21, 24, 1, 0, 1, 0, 1, 0]' : 0.111678}
{'[6, 6, 0, 6, 0, 5, 0, 0, 5, 0, 21, 24, 1, 0, 1, 0, 1, 0]' : 0.111003}
{'[6, 6, 0, 6, 0, 5, 0, 0, 5, 0, 21, 24, 1, 0, 1, 0, 1, 0]' : 0.110677}
{'[6, 6, 0, 6, 0, 5, 0, 0, 5, 0, 21, 24, 1, 0, 1, 0, 1, 0]' : 0.111538}
{'[6, 6, 0, 6, 0, 5, 0, 0, 5, 0, 21, 24, 1, 0, 1, 0, 1, 0]' : 0.111675}
{'[6, 6, 0, 6, 0, 5, 0, 0, 5, 0, 21, 24, 1, 0, 1, 0, 1, 0]' : 0.111024}
{'[6, 6, 0, 6, 0, 5, 0, 0, 5, 0, 21, 24, 1, 0, 1, 0, 1, 0]' : 0.110559}
{'[6, 6, 0, 6, 0, 5, 0, 0, 5, 0, 21, 24, 1, 0, 1, 0, 1, 0]' : 0.110538}
{'[6, 6, 0, 6, 0, 5, 0, 0, 5, 0, 21, 24, 1, 0, 1, 0, 1, 0]' : 0.110195}
{'[6, 6, 0, 6, 0, 5, 0, 0, 5, 0, 21, 24, 1, 0, 1, 0, 1, 0]' : 0.107593}
{'[6, 6, 0, 6, 0, 5, 0, 0, 5, 0, 21, 24, 1, 0, 1, 0, 1, 0]' : 0.107301}
{'[6, 6, 0, 6, 0, 5, 0, 0, 5, 0, 21, 24, 1, 0, 1, 0, 1, 0]' : 0.107287}
{'[6, 6, 0, 6, 0, 5, 0, 0, 5, 0, 21, 24, 1, 0, 1, 0, 1, 0]' : 0.108972}
{'[6, 6, 0, 6, 0, 5, 0, 0, 5, 0, 21, 24, 1, 0, 1, 0, 1, 0]' : 0.112798}
{'[6, 6, 0, 6, 0, 5, 0, 0, 5, 0, 21, 24, 1, 0, 1, 0, 1, 0]' : 0.111088}
{'[6, 6, 0, 6, 0, 5, 0, 0, 5, 0, 21, 24, 1, 0, 1, 0, 1, 0]' : 0.111048}
{'[6, 6, 0, 6, 0, 5, 0, 0, 5, 0, 21, 24, 1, 0, 1, 0, 1, 0]' : 0.111054}
{'[6, 6, 0, 6, 0, 5, 0, 0, 5, 0, 21, 24, 1, 0, 1, 0, 1, 0]' : 0.113368}
{'[6, 6, 0, 6, 0, 5, 0, 0, 5, 0, 21, 24, 1, 0, 1, 0, 1, 0]' : 0.111118}
{'[6, 6, 0, 6, 0, 5, 0, 0, 5, 0, 21, 24, 1, 0, 1, 0, 1, 0]' : 0.110884}
{'[6, 6, 0, 6, 0, 5, 0, 0, 5, 0, 21, 24, 1, 0, 1, 0, 1, 0]' : 0.111047}
{'[6, 6, 0, 6, 0, 5, 0, 0, 5, 0, 21, 24, 1, 0, 1, 0, 1, 0]' : 0.111532}
{'[6, 6, 0, 6, 0, 5, 0, 0, 5, 0, 21, 24, 1, 0, 1, 0, 1, 0]' : 0.109067}
{'[6, 6, 0, 6, 0, 5, 0, 0, 5, 0, 21, 24, 1, 0, 1, 0, 1, 0]' : 0.107535}
{'[6, 6, 0, 6, 0, 5, 0, 0, 5, 0, 21, 24, 1, 0, 1, 0, 1, 0]' : 0.107944}
{'[6, 6, 0, 6, 0, 5, 0, 0, 5, 0, 21, 24, 1, 0, 1, 0, 1, 0]' : 0.108068}
{'[6, 6, 0, 6, 0, 5, 0, 0, 5, 0, 21, 24, 1, 0, 1, 0, 1, 0]' : 0.111558}

out:
 ["{'[6, 6, 0, 6, 0, 5, 0, 0, 5, 0, 21, 24, 1, 0, 1, 0, 1, 0]' : 0.110728}", "{'[6, 6, 0, 6, 0, 5, 0, 0, 5, 0, 21, 24, 1, 0, 1, 0, 1, 0]' : 0.110585}", "{'[6, 6, 0, 6, 0, 5, 0, 0, 5, 0, 21, 24, 1, 0, 1, 0, 1, 0]' : 0.110899}", "{'[6, 6, 0, 6, 0, 5, 0, 0, 5, 0, 21, 24, 1, 0, 1, 0, 1, 0]' : 0.111678}", "{'[6, 6, 0, 6, 0, 5, 0, 0, 5, 0, 21, 24, 1, 0, 1, 0, 1, 0]' : 0.111003}", "{'[6, 6, 0, 6, 0, 5, 0, 0, 5, 0, 21, 24, 1, 0, 1, 0, 1, 0]' : 0.110677}", "{'[6, 6, 0, 6, 0, 5, 0, 0, 5, 0, 21, 24, 1, 0, 1, 0, 1, 0]' : 0.111538}", "{'[6, 6, 0, 6, 0, 5, 0, 0, 5, 0, 21, 24, 1, 0, 1, 0, 1, 0]' : 0.111675}", "{'[6, 6, 0, 6, 0, 5, 0, 0, 5, 0, 21, 24, 1, 0, 1, 0, 1, 0]' : 0.111024}", "{'[6, 6, 0, 6, 0, 5, 0, 0, 5, 0, 21, 24, 1, 0, 1, 0, 1, 0]' : 0.110559}", "{'[6, 6, 0, 6, 0, 5, 0, 0, 5, 0, 21, 24, 1, 0, 1, 0, 1, 0]' : 0.110538}", "{'[6, 6, 0, 6, 0, 5, 0, 0, 5, 0, 21, 24, 1, 0, 1, 0, 1, 0]' : 0.110195}", "{'[6, 6, 0, 6, 0, 5, 0, 0, 5, 0, 21, 24, 1, 0, 1, 0, 1, 0]' : 0.107593}", "{'[6, 6, 0, 6, 0, 5, 0, 0, 5, 0, 21, 24, 1, 0, 1, 0, 1, 0]' : 0.107301}", "{'[6, 6, 0, 6, 0, 5, 0, 0, 5, 0, 21, 24, 1, 0, 1, 0, 1, 0]' : 0.107287}", "{'[6, 6, 0, 6, 0, 5, 0, 0, 5, 0, 21, 24, 1, 0, 1, 0, 1, 0]' : 0.108972}", "{'[6, 6, 0, 6, 0, 5, 0, 0, 5, 0, 21, 24, 1, 0, 1, 0, 1, 0]' : 0.112798}", "{'[6, 6, 0, 6, 0, 5, 0, 0, 5, 0, 21, 24, 1, 0, 1, 0, 1, 0]' : 0.111088}", "{'[6, 6, 0, 6, 0, 5, 0, 0, 5, 0, 21, 24, 1, 0, 1, 0, 1, 0]' : 0.111048}", "{'[6, 6, 0, 6, 0, 5, 0, 0, 5, 0, 21, 24, 1, 0, 1, 0, 1, 0]' : 0.111054}", "{'[6, 6, 0, 6, 0, 5, 0, 0, 5, 0, 21, 24, 1, 0, 1, 0, 1, 0]' : 0.113368}", "{'[6, 6, 0, 6, 0, 5, 0, 0, 5, 0, 21, 24, 1, 0, 1, 0, 1, 0]' : 0.111118}", "{'[6, 6, 0, 6, 0, 5, 0, 0, 5, 0, 21, 24, 1, 0, 1, 0, 1, 0]' : 0.110884}", "{'[6, 6, 0, 6, 0, 5, 0, 0, 5, 0, 21, 24, 1, 0, 1, 0, 1, 0]' : 0.111047}", "{'[6, 6, 0, 6, 0, 5, 0, 0, 5, 0, 21, 24, 1, 0, 1, 0, 1, 0]' : 0.111532}", "{'[6, 6, 0, 6, 0, 5, 0, 0, 5, 0, 21, 24, 1, 0, 1, 0, 1, 0]' : 0.109067}", "{'[6, 6, 0, 6, 0, 5, 0, 0, 5, 0, 21, 24, 1, 0, 1, 0, 1, 0]' : 0.107535}", "{'[6, 6, 0, 6, 0, 5, 0, 0, 5, 0, 21, 24, 1, 0, 1, 0, 1, 0]' : 0.107944}", "{'[6, 6, 0, 6, 0, 5, 0, 0, 5, 0, 21, 24, 1, 0, 1, 0, 1, 0]' : 0.108068}", "{'[6, 6, 0, 6, 0, 5, 0, 0, 5, 0, 21, 24, 1, 0, 1, 0, 1, 0]' : 0.111558}"]
returning from 'run': {'[6, 6, 0, 6, 0, 5, 0, 0, 5, 0, 21, 24, 1, 0, 1, 0, 1, 0]': ([0.110728, 0.110585, 0.110899, 0.111678, 0.111003, 0.110677, 0.111538, 0.111675, 0.111024, 0.110559, 0.110538, 0.110195, 0.107593, 0.107301, 0.107287, 0.108972, 0.112798, 0.111088, 0.111048, 0.111054, 0.113368, 0.111118, 0.110884, 0.111047, 0.111532, 0.109067, 0.107535, 0.107944, 0.108068, 0.111558], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 0, 6, 0, 5, 0, 0, 5, 0, 21, 24, 1, 0, 1, 0, 1, 0]': ([0.110728, 0.110585, 0.110899, 0.111678, 0.111003, 0.110677, 0.111538, 0.111675, 0.111024, 0.110559, 0.110538, 0.110195, 0.107593, 0.107301, 0.107287, 0.108972, 0.112798, 0.111088, 0.111048, 0.111054, 0.113368, 0.111118, 0.110884, 0.111047, 0.111532, 0.109067, 0.107535, 0.107944, 0.108068, 0.111558], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	81
        Max loop nest depth: 	5
        Additions: 		7141
        Multiplications: 	2728
        Divisions: 		0
        Logical: 		0
        Reads: 			12291
        Writes: 		1826
        Comparisons:		81
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest37.exe __orio_perftest37.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest37.exe  
Program Test Output: 
{'[0, 5, 4, 6, 0, 5, 1, 0, 8, 20, 27, 0, 0, 0, 2, 1, 0, 1]' : 0.222113}
{'[0, 5, 4, 6, 0, 5, 1, 0, 8, 20, 27, 0, 0, 0, 2, 1, 0, 1]' : 0.197856}
{'[0, 5, 4, 6, 0, 5, 1, 0, 8, 20, 27, 0, 0, 0, 2, 1, 0, 1]' : 0.188435}
{'[0, 5, 4, 6, 0, 5, 1, 0, 8, 20, 27, 0, 0, 0, 2, 1, 0, 1]' : 0.187716}
{'[0, 5, 4, 6, 0, 5, 1, 0, 8, 20, 27, 0, 0, 0, 2, 1, 0, 1]' : 0.188054}
{'[0, 5, 4, 6, 0, 5, 1, 0, 8, 20, 27, 0, 0, 0, 2, 1, 0, 1]' : 0.187538}
{'[0, 5, 4, 6, 0, 5, 1, 0, 8, 20, 27, 0, 0, 0, 2, 1, 0, 1]' : 0.187807}
{'[0, 5, 4, 6, 0, 5, 1, 0, 8, 20, 27, 0, 0, 0, 2, 1, 0, 1]' : 0.188004}
{'[0, 5, 4, 6, 0, 5, 1, 0, 8, 20, 27, 0, 0, 0, 2, 1, 0, 1]' : 0.187675}
{'[0, 5, 4, 6, 0, 5, 1, 0, 8, 20, 27, 0, 0, 0, 2, 1, 0, 1]' : 0.188123}
{'[0, 5, 4, 6, 0, 5, 1, 0, 8, 20, 27, 0, 0, 0, 2, 1, 0, 1]' : 0.188817}
{'[0, 5, 4, 6, 0, 5, 1, 0, 8, 20, 27, 0, 0, 0, 2, 1, 0, 1]' : 0.187652}
{'[0, 5, 4, 6, 0, 5, 1, 0, 8, 20, 27, 0, 0, 0, 2, 1, 0, 1]' : 0.187776}
{'[0, 5, 4, 6, 0, 5, 1, 0, 8, 20, 27, 0, 0, 0, 2, 1, 0, 1]' : 0.188257}
{'[0, 5, 4, 6, 0, 5, 1, 0, 8, 20, 27, 0, 0, 0, 2, 1, 0, 1]' : 0.187611}
{'[0, 5, 4, 6, 0, 5, 1, 0, 8, 20, 27, 0, 0, 0, 2, 1, 0, 1]' : 0.187703}
{'[0, 5, 4, 6, 0, 5, 1, 0, 8, 20, 27, 0, 0, 0, 2, 1, 0, 1]' : 0.187655}
{'[0, 5, 4, 6, 0, 5, 1, 0, 8, 20, 27, 0, 0, 0, 2, 1, 0, 1]' : 0.187808}
{'[0, 5, 4, 6, 0, 5, 1, 0, 8, 20, 27, 0, 0, 0, 2, 1, 0, 1]' : 0.188503}
{'[0, 5, 4, 6, 0, 5, 1, 0, 8, 20, 27, 0, 0, 0, 2, 1, 0, 1]' : 0.187606}
{'[0, 5, 4, 6, 0, 5, 1, 0, 8, 20, 27, 0, 0, 0, 2, 1, 0, 1]' : 0.187837}
{'[0, 5, 4, 6, 0, 5, 1, 0, 8, 20, 27, 0, 0, 0, 2, 1, 0, 1]' : 0.187849}
{'[0, 5, 4, 6, 0, 5, 1, 0, 8, 20, 27, 0, 0, 0, 2, 1, 0, 1]' : 0.187808}
{'[0, 5, 4, 6, 0, 5, 1, 0, 8, 20, 27, 0, 0, 0, 2, 1, 0, 1]' : 0.187877}
{'[0, 5, 4, 6, 0, 5, 1, 0, 8, 20, 27, 0, 0, 0, 2, 1, 0, 1]' : 0.187885}
{'[0, 5, 4, 6, 0, 5, 1, 0, 8, 20, 27, 0, 0, 0, 2, 1, 0, 1]' : 0.187818}
{'[0, 5, 4, 6, 0, 5, 1, 0, 8, 20, 27, 0, 0, 0, 2, 1, 0, 1]' : 0.188756}
{'[0, 5, 4, 6, 0, 5, 1, 0, 8, 20, 27, 0, 0, 0, 2, 1, 0, 1]' : 0.187911}
{'[0, 5, 4, 6, 0, 5, 1, 0, 8, 20, 27, 0, 0, 0, 2, 1, 0, 1]' : 0.187798}
{'[0, 5, 4, 6, 0, 5, 1, 0, 8, 20, 27, 0, 0, 0, 2, 1, 0, 1]' : 0.187918}

out:
 ["{'[0, 5, 4, 6, 0, 5, 1, 0, 8, 20, 27, 0, 0, 0, 2, 1, 0, 1]' : 0.222113}", "{'[0, 5, 4, 6, 0, 5, 1, 0, 8, 20, 27, 0, 0, 0, 2, 1, 0, 1]' : 0.197856}", "{'[0, 5, 4, 6, 0, 5, 1, 0, 8, 20, 27, 0, 0, 0, 2, 1, 0, 1]' : 0.188435}", "{'[0, 5, 4, 6, 0, 5, 1, 0, 8, 20, 27, 0, 0, 0, 2, 1, 0, 1]' : 0.187716}", "{'[0, 5, 4, 6, 0, 5, 1, 0, 8, 20, 27, 0, 0, 0, 2, 1, 0, 1]' : 0.188054}", "{'[0, 5, 4, 6, 0, 5, 1, 0, 8, 20, 27, 0, 0, 0, 2, 1, 0, 1]' : 0.187538}", "{'[0, 5, 4, 6, 0, 5, 1, 0, 8, 20, 27, 0, 0, 0, 2, 1, 0, 1]' : 0.187807}", "{'[0, 5, 4, 6, 0, 5, 1, 0, 8, 20, 27, 0, 0, 0, 2, 1, 0, 1]' : 0.188004}", "{'[0, 5, 4, 6, 0, 5, 1, 0, 8, 20, 27, 0, 0, 0, 2, 1, 0, 1]' : 0.187675}", "{'[0, 5, 4, 6, 0, 5, 1, 0, 8, 20, 27, 0, 0, 0, 2, 1, 0, 1]' : 0.188123}", "{'[0, 5, 4, 6, 0, 5, 1, 0, 8, 20, 27, 0, 0, 0, 2, 1, 0, 1]' : 0.188817}", "{'[0, 5, 4, 6, 0, 5, 1, 0, 8, 20, 27, 0, 0, 0, 2, 1, 0, 1]' : 0.187652}", "{'[0, 5, 4, 6, 0, 5, 1, 0, 8, 20, 27, 0, 0, 0, 2, 1, 0, 1]' : 0.187776}", "{'[0, 5, 4, 6, 0, 5, 1, 0, 8, 20, 27, 0, 0, 0, 2, 1, 0, 1]' : 0.188257}", "{'[0, 5, 4, 6, 0, 5, 1, 0, 8, 20, 27, 0, 0, 0, 2, 1, 0, 1]' : 0.187611}", "{'[0, 5, 4, 6, 0, 5, 1, 0, 8, 20, 27, 0, 0, 0, 2, 1, 0, 1]' : 0.187703}", "{'[0, 5, 4, 6, 0, 5, 1, 0, 8, 20, 27, 0, 0, 0, 2, 1, 0, 1]' : 0.187655}", "{'[0, 5, 4, 6, 0, 5, 1, 0, 8, 20, 27, 0, 0, 0, 2, 1, 0, 1]' : 0.187808}", "{'[0, 5, 4, 6, 0, 5, 1, 0, 8, 20, 27, 0, 0, 0, 2, 1, 0, 1]' : 0.188503}", "{'[0, 5, 4, 6, 0, 5, 1, 0, 8, 20, 27, 0, 0, 0, 2, 1, 0, 1]' : 0.187606}", "{'[0, 5, 4, 6, 0, 5, 1, 0, 8, 20, 27, 0, 0, 0, 2, 1, 0, 1]' : 0.187837}", "{'[0, 5, 4, 6, 0, 5, 1, 0, 8, 20, 27, 0, 0, 0, 2, 1, 0, 1]' : 0.187849}", "{'[0, 5, 4, 6, 0, 5, 1, 0, 8, 20, 27, 0, 0, 0, 2, 1, 0, 1]' : 0.187808}", "{'[0, 5, 4, 6, 0, 5, 1, 0, 8, 20, 27, 0, 0, 0, 2, 1, 0, 1]' : 0.187877}", "{'[0, 5, 4, 6, 0, 5, 1, 0, 8, 20, 27, 0, 0, 0, 2, 1, 0, 1]' : 0.187885}", "{'[0, 5, 4, 6, 0, 5, 1, 0, 8, 20, 27, 0, 0, 0, 2, 1, 0, 1]' : 0.187818}", "{'[0, 5, 4, 6, 0, 5, 1, 0, 8, 20, 27, 0, 0, 0, 2, 1, 0, 1]' : 0.188756}", "{'[0, 5, 4, 6, 0, 5, 1, 0, 8, 20, 27, 0, 0, 0, 2, 1, 0, 1]' : 0.187911}", "{'[0, 5, 4, 6, 0, 5, 1, 0, 8, 20, 27, 0, 0, 0, 2, 1, 0, 1]' : 0.187798}", "{'[0, 5, 4, 6, 0, 5, 1, 0, 8, 20, 27, 0, 0, 0, 2, 1, 0, 1]' : 0.187918}"]
returning from 'run': {'[0, 5, 4, 6, 0, 5, 1, 0, 8, 20, 27, 0, 0, 0, 2, 1, 0, 1]': ([0.222113, 0.197856, 0.188435, 0.187716, 0.188054, 0.187538, 0.187807, 0.188004, 0.187675, 0.188123, 0.188817, 0.187652, 0.187776, 0.188257, 0.187611, 0.187703, 0.187655, 0.187808, 0.188503, 0.187606, 0.187837, 0.187849, 0.187808, 0.187877, 0.187885, 0.187818, 0.188756, 0.187911, 0.187798, 0.187918], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 5, 4, 6, 0, 5, 1, 0, 8, 20, 27, 0, 0, 0, 2, 1, 0, 1]': ([0.222113, 0.197856, 0.188435, 0.187716, 0.188054, 0.187538, 0.187807, 0.188004, 0.187675, 0.188123, 0.188817, 0.187652, 0.187776, 0.188257, 0.187611, 0.187703, 0.187655, 0.187808, 0.188503, 0.187606, 0.187837, 0.187849, 0.187808, 0.187877, 0.187885, 0.187818, 0.188756, 0.187911, 0.187798, 0.187918], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		401
        Multiplications: 	142
        Divisions: 		0
        Logical: 		0
        Reads: 			847
        Writes: 		120
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest38.exe __orio_perftest38.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest38.exe  
Program Test Output: 
{'[6, 3, 3, 0, 4, 6, 0, 0, 13, 0, 10, 25, 0, 0, 2, 0, 0, 1]' : 0.212651}
{'[6, 3, 3, 0, 4, 6, 0, 0, 13, 0, 10, 25, 0, 0, 2, 0, 0, 1]' : 0.203357}
{'[6, 3, 3, 0, 4, 6, 0, 0, 13, 0, 10, 25, 0, 0, 2, 0, 0, 1]' : 0.177938}
{'[6, 3, 3, 0, 4, 6, 0, 0, 13, 0, 10, 25, 0, 0, 2, 0, 0, 1]' : 0.179003}
{'[6, 3, 3, 0, 4, 6, 0, 0, 13, 0, 10, 25, 0, 0, 2, 0, 0, 1]' : 0.178036}
{'[6, 3, 3, 0, 4, 6, 0, 0, 13, 0, 10, 25, 0, 0, 2, 0, 0, 1]' : 0.177976}
{'[6, 3, 3, 0, 4, 6, 0, 0, 13, 0, 10, 25, 0, 0, 2, 0, 0, 1]' : 0.177987}
{'[6, 3, 3, 0, 4, 6, 0, 0, 13, 0, 10, 25, 0, 0, 2, 0, 0, 1]' : 0.17814}
{'[6, 3, 3, 0, 4, 6, 0, 0, 13, 0, 10, 25, 0, 0, 2, 0, 0, 1]' : 0.177923}
{'[6, 3, 3, 0, 4, 6, 0, 0, 13, 0, 10, 25, 0, 0, 2, 0, 0, 1]' : 0.178007}
{'[6, 3, 3, 0, 4, 6, 0, 0, 13, 0, 10, 25, 0, 0, 2, 0, 0, 1]' : 0.177971}
{'[6, 3, 3, 0, 4, 6, 0, 0, 13, 0, 10, 25, 0, 0, 2, 0, 0, 1]' : 0.178784}
{'[6, 3, 3, 0, 4, 6, 0, 0, 13, 0, 10, 25, 0, 0, 2, 0, 0, 1]' : 0.178085}
{'[6, 3, 3, 0, 4, 6, 0, 0, 13, 0, 10, 25, 0, 0, 2, 0, 0, 1]' : 0.17802}
{'[6, 3, 3, 0, 4, 6, 0, 0, 13, 0, 10, 25, 0, 0, 2, 0, 0, 1]' : 0.177989}
{'[6, 3, 3, 0, 4, 6, 0, 0, 13, 0, 10, 25, 0, 0, 2, 0, 0, 1]' : 0.178009}
{'[6, 3, 3, 0, 4, 6, 0, 0, 13, 0, 10, 25, 0, 0, 2, 0, 0, 1]' : 0.178081}
{'[6, 3, 3, 0, 4, 6, 0, 0, 13, 0, 10, 25, 0, 0, 2, 0, 0, 1]' : 0.177966}
{'[6, 3, 3, 0, 4, 6, 0, 0, 13, 0, 10, 25, 0, 0, 2, 0, 0, 1]' : 0.178344}
{'[6, 3, 3, 0, 4, 6, 0, 0, 13, 0, 10, 25, 0, 0, 2, 0, 0, 1]' : 0.178286}
{'[6, 3, 3, 0, 4, 6, 0, 0, 13, 0, 10, 25, 0, 0, 2, 0, 0, 1]' : 0.17931}
{'[6, 3, 3, 0, 4, 6, 0, 0, 13, 0, 10, 25, 0, 0, 2, 0, 0, 1]' : 0.178148}
{'[6, 3, 3, 0, 4, 6, 0, 0, 13, 0, 10, 25, 0, 0, 2, 0, 0, 1]' : 0.178027}
{'[6, 3, 3, 0, 4, 6, 0, 0, 13, 0, 10, 25, 0, 0, 2, 0, 0, 1]' : 0.178091}
{'[6, 3, 3, 0, 4, 6, 0, 0, 13, 0, 10, 25, 0, 0, 2, 0, 0, 1]' : 0.178057}
{'[6, 3, 3, 0, 4, 6, 0, 0, 13, 0, 10, 25, 0, 0, 2, 0, 0, 1]' : 0.178027}
{'[6, 3, 3, 0, 4, 6, 0, 0, 13, 0, 10, 25, 0, 0, 2, 0, 0, 1]' : 0.178072}
{'[6, 3, 3, 0, 4, 6, 0, 0, 13, 0, 10, 25, 0, 0, 2, 0, 0, 1]' : 0.178114}
{'[6, 3, 3, 0, 4, 6, 0, 0, 13, 0, 10, 25, 0, 0, 2, 0, 0, 1]' : 0.178919}
{'[6, 3, 3, 0, 4, 6, 0, 0, 13, 0, 10, 25, 0, 0, 2, 0, 0, 1]' : 0.178229}

out:
 ["{'[6, 3, 3, 0, 4, 6, 0, 0, 13, 0, 10, 25, 0, 0, 2, 0, 0, 1]' : 0.212651}", "{'[6, 3, 3, 0, 4, 6, 0, 0, 13, 0, 10, 25, 0, 0, 2, 0, 0, 1]' : 0.203357}", "{'[6, 3, 3, 0, 4, 6, 0, 0, 13, 0, 10, 25, 0, 0, 2, 0, 0, 1]' : 0.177938}", "{'[6, 3, 3, 0, 4, 6, 0, 0, 13, 0, 10, 25, 0, 0, 2, 0, 0, 1]' : 0.179003}", "{'[6, 3, 3, 0, 4, 6, 0, 0, 13, 0, 10, 25, 0, 0, 2, 0, 0, 1]' : 0.178036}", "{'[6, 3, 3, 0, 4, 6, 0, 0, 13, 0, 10, 25, 0, 0, 2, 0, 0, 1]' : 0.177976}", "{'[6, 3, 3, 0, 4, 6, 0, 0, 13, 0, 10, 25, 0, 0, 2, 0, 0, 1]' : 0.177987}", "{'[6, 3, 3, 0, 4, 6, 0, 0, 13, 0, 10, 25, 0, 0, 2, 0, 0, 1]' : 0.17814}", "{'[6, 3, 3, 0, 4, 6, 0, 0, 13, 0, 10, 25, 0, 0, 2, 0, 0, 1]' : 0.177923}", "{'[6, 3, 3, 0, 4, 6, 0, 0, 13, 0, 10, 25, 0, 0, 2, 0, 0, 1]' : 0.178007}", "{'[6, 3, 3, 0, 4, 6, 0, 0, 13, 0, 10, 25, 0, 0, 2, 0, 0, 1]' : 0.177971}", "{'[6, 3, 3, 0, 4, 6, 0, 0, 13, 0, 10, 25, 0, 0, 2, 0, 0, 1]' : 0.178784}", "{'[6, 3, 3, 0, 4, 6, 0, 0, 13, 0, 10, 25, 0, 0, 2, 0, 0, 1]' : 0.178085}", "{'[6, 3, 3, 0, 4, 6, 0, 0, 13, 0, 10, 25, 0, 0, 2, 0, 0, 1]' : 0.17802}", "{'[6, 3, 3, 0, 4, 6, 0, 0, 13, 0, 10, 25, 0, 0, 2, 0, 0, 1]' : 0.177989}", "{'[6, 3, 3, 0, 4, 6, 0, 0, 13, 0, 10, 25, 0, 0, 2, 0, 0, 1]' : 0.178009}", "{'[6, 3, 3, 0, 4, 6, 0, 0, 13, 0, 10, 25, 0, 0, 2, 0, 0, 1]' : 0.178081}", "{'[6, 3, 3, 0, 4, 6, 0, 0, 13, 0, 10, 25, 0, 0, 2, 0, 0, 1]' : 0.177966}", "{'[6, 3, 3, 0, 4, 6, 0, 0, 13, 0, 10, 25, 0, 0, 2, 0, 0, 1]' : 0.178344}", "{'[6, 3, 3, 0, 4, 6, 0, 0, 13, 0, 10, 25, 0, 0, 2, 0, 0, 1]' : 0.178286}", "{'[6, 3, 3, 0, 4, 6, 0, 0, 13, 0, 10, 25, 0, 0, 2, 0, 0, 1]' : 0.17931}", "{'[6, 3, 3, 0, 4, 6, 0, 0, 13, 0, 10, 25, 0, 0, 2, 0, 0, 1]' : 0.178148}", "{'[6, 3, 3, 0, 4, 6, 0, 0, 13, 0, 10, 25, 0, 0, 2, 0, 0, 1]' : 0.178027}", "{'[6, 3, 3, 0, 4, 6, 0, 0, 13, 0, 10, 25, 0, 0, 2, 0, 0, 1]' : 0.178091}", "{'[6, 3, 3, 0, 4, 6, 0, 0, 13, 0, 10, 25, 0, 0, 2, 0, 0, 1]' : 0.178057}", "{'[6, 3, 3, 0, 4, 6, 0, 0, 13, 0, 10, 25, 0, 0, 2, 0, 0, 1]' : 0.178027}", "{'[6, 3, 3, 0, 4, 6, 0, 0, 13, 0, 10, 25, 0, 0, 2, 0, 0, 1]' : 0.178072}", "{'[6, 3, 3, 0, 4, 6, 0, 0, 13, 0, 10, 25, 0, 0, 2, 0, 0, 1]' : 0.178114}", "{'[6, 3, 3, 0, 4, 6, 0, 0, 13, 0, 10, 25, 0, 0, 2, 0, 0, 1]' : 0.178919}", "{'[6, 3, 3, 0, 4, 6, 0, 0, 13, 0, 10, 25, 0, 0, 2, 0, 0, 1]' : 0.178229}"]
returning from 'run': {'[6, 3, 3, 0, 4, 6, 0, 0, 13, 0, 10, 25, 0, 0, 2, 0, 0, 1]': ([0.212651, 0.203357, 0.177938, 0.179003, 0.178036, 0.177976, 0.177987, 0.17814, 0.177923, 0.178007, 0.177971, 0.178784, 0.178085, 0.17802, 0.177989, 0.178009, 0.178081, 0.177966, 0.178344, 0.178286, 0.17931, 0.178148, 0.178027, 0.178091, 0.178057, 0.178027, 0.178072, 0.178114, 0.178919, 0.178229], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 3, 3, 0, 4, 6, 0, 0, 13, 0, 10, 25, 0, 0, 2, 0, 0, 1]': ([0.212651, 0.203357, 0.177938, 0.179003, 0.178036, 0.177976, 0.177987, 0.17814, 0.177923, 0.178007, 0.177971, 0.178784, 0.178085, 0.17802, 0.177989, 0.178009, 0.178081, 0.177966, 0.178344, 0.178286, 0.17931, 0.178148, 0.178027, 0.178091, 0.178057, 0.178027, 0.178072, 0.178114, 0.178919, 0.178229], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	41
        Max loop nest depth: 	5
        Additions: 		1271
        Multiplications: 	540
        Divisions: 		0
        Logical: 		0
        Reads: 			2635
        Writes: 		507
        Comparisons:		41
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest39.exe __orio_perftest39.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest39.exe  
Program Test Output: 
{'[1, 5, 0, 0, 4, 0, 1, 0, 25, 20, 8, 0, 1, 1, 0, 1, 0, 0]' : 0.10109}
{'[1, 5, 0, 0, 4, 0, 1, 0, 25, 20, 8, 0, 1, 1, 0, 1, 0, 0]' : 0.101041}
{'[1, 5, 0, 0, 4, 0, 1, 0, 25, 20, 8, 0, 1, 1, 0, 1, 0, 0]' : 0.100006}
{'[1, 5, 0, 0, 4, 0, 1, 0, 25, 20, 8, 0, 1, 1, 0, 1, 0, 0]' : 0.0892661}
{'[1, 5, 0, 0, 4, 0, 1, 0, 25, 20, 8, 0, 1, 1, 0, 1, 0, 0]' : 0.0878592}
{'[1, 5, 0, 0, 4, 0, 1, 0, 25, 20, 8, 0, 1, 1, 0, 1, 0, 0]' : 0.087662}
{'[1, 5, 0, 0, 4, 0, 1, 0, 25, 20, 8, 0, 1, 1, 0, 1, 0, 0]' : 0.087687}
{'[1, 5, 0, 0, 4, 0, 1, 0, 25, 20, 8, 0, 1, 1, 0, 1, 0, 0]' : 0.0877528}
{'[1, 5, 0, 0, 4, 0, 1, 0, 25, 20, 8, 0, 1, 1, 0, 1, 0, 0]' : 0.0877819}
{'[1, 5, 0, 0, 4, 0, 1, 0, 25, 20, 8, 0, 1, 1, 0, 1, 0, 0]' : 0.087796}
{'[1, 5, 0, 0, 4, 0, 1, 0, 25, 20, 8, 0, 1, 1, 0, 1, 0, 0]' : 0.087816}
{'[1, 5, 0, 0, 4, 0, 1, 0, 25, 20, 8, 0, 1, 1, 0, 1, 0, 0]' : 0.0887611}
{'[1, 5, 0, 0, 4, 0, 1, 0, 25, 20, 8, 0, 1, 1, 0, 1, 0, 0]' : 0.0878539}
{'[1, 5, 0, 0, 4, 0, 1, 0, 25, 20, 8, 0, 1, 1, 0, 1, 0, 0]' : 0.0878389}
{'[1, 5, 0, 0, 4, 0, 1, 0, 25, 20, 8, 0, 1, 1, 0, 1, 0, 0]' : 0.0878859}
{'[1, 5, 0, 0, 4, 0, 1, 0, 25, 20, 8, 0, 1, 1, 0, 1, 0, 0]' : 0.0877471}
{'[1, 5, 0, 0, 4, 0, 1, 0, 25, 20, 8, 0, 1, 1, 0, 1, 0, 0]' : 0.0880132}
{'[1, 5, 0, 0, 4, 0, 1, 0, 25, 20, 8, 0, 1, 1, 0, 1, 0, 0]' : 0.0879459}
{'[1, 5, 0, 0, 4, 0, 1, 0, 25, 20, 8, 0, 1, 1, 0, 1, 0, 0]' : 0.0878019}
{'[1, 5, 0, 0, 4, 0, 1, 0, 25, 20, 8, 0, 1, 1, 0, 1, 0, 0]' : 0.0878191}
{'[1, 5, 0, 0, 4, 0, 1, 0, 25, 20, 8, 0, 1, 1, 0, 1, 0, 0]' : 0.087816}
{'[1, 5, 0, 0, 4, 0, 1, 0, 25, 20, 8, 0, 1, 1, 0, 1, 0, 0]' : 0.0878839}
{'[1, 5, 0, 0, 4, 0, 1, 0, 25, 20, 8, 0, 1, 1, 0, 1, 0, 0]' : 0.0881109}
{'[1, 5, 0, 0, 4, 0, 1, 0, 25, 20, 8, 0, 1, 1, 0, 1, 0, 0]' : 0.087795}
{'[1, 5, 0, 0, 4, 0, 1, 0, 25, 20, 8, 0, 1, 1, 0, 1, 0, 0]' : 0.087831}
{'[1, 5, 0, 0, 4, 0, 1, 0, 25, 20, 8, 0, 1, 1, 0, 1, 0, 0]' : 0.0878549}
{'[1, 5, 0, 0, 4, 0, 1, 0, 25, 20, 8, 0, 1, 1, 0, 1, 0, 0]' : 0.0878301}
{'[1, 5, 0, 0, 4, 0, 1, 0, 25, 20, 8, 0, 1, 1, 0, 1, 0, 0]' : 0.0877571}
{'[1, 5, 0, 0, 4, 0, 1, 0, 25, 20, 8, 0, 1, 1, 0, 1, 0, 0]' : 0.0882208}
{'[1, 5, 0, 0, 4, 0, 1, 0, 25, 20, 8, 0, 1, 1, 0, 1, 0, 0]' : 0.0879769}

out:
 ["{'[1, 5, 0, 0, 4, 0, 1, 0, 25, 20, 8, 0, 1, 1, 0, 1, 0, 0]' : 0.10109}", "{'[1, 5, 0, 0, 4, 0, 1, 0, 25, 20, 8, 0, 1, 1, 0, 1, 0, 0]' : 0.101041}", "{'[1, 5, 0, 0, 4, 0, 1, 0, 25, 20, 8, 0, 1, 1, 0, 1, 0, 0]' : 0.100006}", "{'[1, 5, 0, 0, 4, 0, 1, 0, 25, 20, 8, 0, 1, 1, 0, 1, 0, 0]' : 0.0892661}", "{'[1, 5, 0, 0, 4, 0, 1, 0, 25, 20, 8, 0, 1, 1, 0, 1, 0, 0]' : 0.0878592}", "{'[1, 5, 0, 0, 4, 0, 1, 0, 25, 20, 8, 0, 1, 1, 0, 1, 0, 0]' : 0.087662}", "{'[1, 5, 0, 0, 4, 0, 1, 0, 25, 20, 8, 0, 1, 1, 0, 1, 0, 0]' : 0.087687}", "{'[1, 5, 0, 0, 4, 0, 1, 0, 25, 20, 8, 0, 1, 1, 0, 1, 0, 0]' : 0.0877528}", "{'[1, 5, 0, 0, 4, 0, 1, 0, 25, 20, 8, 0, 1, 1, 0, 1, 0, 0]' : 0.0877819}", "{'[1, 5, 0, 0, 4, 0, 1, 0, 25, 20, 8, 0, 1, 1, 0, 1, 0, 0]' : 0.087796}", "{'[1, 5, 0, 0, 4, 0, 1, 0, 25, 20, 8, 0, 1, 1, 0, 1, 0, 0]' : 0.087816}", "{'[1, 5, 0, 0, 4, 0, 1, 0, 25, 20, 8, 0, 1, 1, 0, 1, 0, 0]' : 0.0887611}", "{'[1, 5, 0, 0, 4, 0, 1, 0, 25, 20, 8, 0, 1, 1, 0, 1, 0, 0]' : 0.0878539}", "{'[1, 5, 0, 0, 4, 0, 1, 0, 25, 20, 8, 0, 1, 1, 0, 1, 0, 0]' : 0.0878389}", "{'[1, 5, 0, 0, 4, 0, 1, 0, 25, 20, 8, 0, 1, 1, 0, 1, 0, 0]' : 0.0878859}", "{'[1, 5, 0, 0, 4, 0, 1, 0, 25, 20, 8, 0, 1, 1, 0, 1, 0, 0]' : 0.0877471}", "{'[1, 5, 0, 0, 4, 0, 1, 0, 25, 20, 8, 0, 1, 1, 0, 1, 0, 0]' : 0.0880132}", "{'[1, 5, 0, 0, 4, 0, 1, 0, 25, 20, 8, 0, 1, 1, 0, 1, 0, 0]' : 0.0879459}", "{'[1, 5, 0, 0, 4, 0, 1, 0, 25, 20, 8, 0, 1, 1, 0, 1, 0, 0]' : 0.0878019}", "{'[1, 5, 0, 0, 4, 0, 1, 0, 25, 20, 8, 0, 1, 1, 0, 1, 0, 0]' : 0.0878191}", "{'[1, 5, 0, 0, 4, 0, 1, 0, 25, 20, 8, 0, 1, 1, 0, 1, 0, 0]' : 0.087816}", "{'[1, 5, 0, 0, 4, 0, 1, 0, 25, 20, 8, 0, 1, 1, 0, 1, 0, 0]' : 0.0878839}", "{'[1, 5, 0, 0, 4, 0, 1, 0, 25, 20, 8, 0, 1, 1, 0, 1, 0, 0]' : 0.0881109}", "{'[1, 5, 0, 0, 4, 0, 1, 0, 25, 20, 8, 0, 1, 1, 0, 1, 0, 0]' : 0.087795}", "{'[1, 5, 0, 0, 4, 0, 1, 0, 25, 20, 8, 0, 1, 1, 0, 1, 0, 0]' : 0.087831}", "{'[1, 5, 0, 0, 4, 0, 1, 0, 25, 20, 8, 0, 1, 1, 0, 1, 0, 0]' : 0.0878549}", "{'[1, 5, 0, 0, 4, 0, 1, 0, 25, 20, 8, 0, 1, 1, 0, 1, 0, 0]' : 0.0878301}", "{'[1, 5, 0, 0, 4, 0, 1, 0, 25, 20, 8, 0, 1, 1, 0, 1, 0, 0]' : 0.0877571}", "{'[1, 5, 0, 0, 4, 0, 1, 0, 25, 20, 8, 0, 1, 1, 0, 1, 0, 0]' : 0.0882208}", "{'[1, 5, 0, 0, 4, 0, 1, 0, 25, 20, 8, 0, 1, 1, 0, 1, 0, 0]' : 0.0879769}"]
returning from 'run': {'[1, 5, 0, 0, 4, 0, 1, 0, 25, 20, 8, 0, 1, 1, 0, 1, 0, 0]': ([0.10109, 0.101041, 0.100006, 0.0892661, 0.0878592, 0.087662, 0.087687, 0.0877528, 0.0877819, 0.087796, 0.087816, 0.0887611, 0.0878539, 0.0878389, 0.0878859, 0.0877471, 0.0880132, 0.0879459, 0.0878019, 0.0878191, 0.087816, 0.0878839, 0.0881109, 0.087795, 0.087831, 0.0878549, 0.0878301, 0.0877571, 0.0882208, 0.0879769], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 5, 0, 0, 4, 0, 1, 0, 25, 20, 8, 0, 1, 1, 0, 1, 0, 0]': ([0.10109, 0.101041, 0.100006, 0.0892661, 0.0878592, 0.087662, 0.087687, 0.0877528, 0.0877819, 0.087796, 0.087816, 0.0887611, 0.0878539, 0.0878389, 0.0878859, 0.0877471, 0.0880132, 0.0879459, 0.0878019, 0.0878191, 0.087816, 0.0878839, 0.0881109, 0.087795, 0.087831, 0.0878549, 0.0878301, 0.0877571, 0.0882208, 0.0879769], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	42
        Max loop nest depth: 	5
        Additions: 		1803
        Multiplications: 	740
        Divisions: 		0
        Logical: 		0
        Reads: 			3671
        Writes: 		680
        Comparisons:		42
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest40.exe __orio_perftest40.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest40.exe  
Program Test Output: 
{'[6, 6, 2, 0, 0, 5, 0, 1, 1, 3, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.148761}
{'[6, 6, 2, 0, 0, 5, 0, 1, 1, 3, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.148801}
{'[6, 6, 2, 0, 0, 5, 0, 1, 1, 3, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.148214}
{'[6, 6, 2, 0, 0, 5, 0, 1, 1, 3, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.14762}
{'[6, 6, 2, 0, 0, 5, 0, 1, 1, 3, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.147063}
{'[6, 6, 2, 0, 0, 5, 0, 1, 1, 3, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.149926}
{'[6, 6, 2, 0, 0, 5, 0, 1, 1, 3, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.150322}
{'[6, 6, 2, 0, 0, 5, 0, 1, 1, 3, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.150555}
{'[6, 6, 2, 0, 0, 5, 0, 1, 1, 3, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.151445}
{'[6, 6, 2, 0, 0, 5, 0, 1, 1, 3, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.149819}
{'[6, 6, 2, 0, 0, 5, 0, 1, 1, 3, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.149756}
{'[6, 6, 2, 0, 0, 5, 0, 1, 1, 3, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.150091}
{'[6, 6, 2, 0, 0, 5, 0, 1, 1, 3, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.150209}
{'[6, 6, 2, 0, 0, 5, 0, 1, 1, 3, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.149562}
{'[6, 6, 2, 0, 0, 5, 0, 1, 1, 3, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.150655}
{'[6, 6, 2, 0, 0, 5, 0, 1, 1, 3, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.150413}
{'[6, 6, 2, 0, 0, 5, 0, 1, 1, 3, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.150739}
{'[6, 6, 2, 0, 0, 5, 0, 1, 1, 3, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.148984}
{'[6, 6, 2, 0, 0, 5, 0, 1, 1, 3, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.147565}
{'[6, 6, 2, 0, 0, 5, 0, 1, 1, 3, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.149919}
{'[6, 6, 2, 0, 0, 5, 0, 1, 1, 3, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.149442}
{'[6, 6, 2, 0, 0, 5, 0, 1, 1, 3, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.149964}
{'[6, 6, 2, 0, 0, 5, 0, 1, 1, 3, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.150709}
{'[6, 6, 2, 0, 0, 5, 0, 1, 1, 3, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.149638}
{'[6, 6, 2, 0, 0, 5, 0, 1, 1, 3, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.150286}
{'[6, 6, 2, 0, 0, 5, 0, 1, 1, 3, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.150175}
{'[6, 6, 2, 0, 0, 5, 0, 1, 1, 3, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.150796}
{'[6, 6, 2, 0, 0, 5, 0, 1, 1, 3, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.150471}
{'[6, 6, 2, 0, 0, 5, 0, 1, 1, 3, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.151188}
{'[6, 6, 2, 0, 0, 5, 0, 1, 1, 3, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.150375}

out:
 ["{'[6, 6, 2, 0, 0, 5, 0, 1, 1, 3, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.148761}", "{'[6, 6, 2, 0, 0, 5, 0, 1, 1, 3, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.148801}", "{'[6, 6, 2, 0, 0, 5, 0, 1, 1, 3, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.148214}", "{'[6, 6, 2, 0, 0, 5, 0, 1, 1, 3, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.14762}", "{'[6, 6, 2, 0, 0, 5, 0, 1, 1, 3, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.147063}", "{'[6, 6, 2, 0, 0, 5, 0, 1, 1, 3, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.149926}", "{'[6, 6, 2, 0, 0, 5, 0, 1, 1, 3, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.150322}", "{'[6, 6, 2, 0, 0, 5, 0, 1, 1, 3, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.150555}", "{'[6, 6, 2, 0, 0, 5, 0, 1, 1, 3, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.151445}", "{'[6, 6, 2, 0, 0, 5, 0, 1, 1, 3, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.149819}", "{'[6, 6, 2, 0, 0, 5, 0, 1, 1, 3, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.149756}", "{'[6, 6, 2, 0, 0, 5, 0, 1, 1, 3, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.150091}", "{'[6, 6, 2, 0, 0, 5, 0, 1, 1, 3, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.150209}", "{'[6, 6, 2, 0, 0, 5, 0, 1, 1, 3, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.149562}", "{'[6, 6, 2, 0, 0, 5, 0, 1, 1, 3, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.150655}", "{'[6, 6, 2, 0, 0, 5, 0, 1, 1, 3, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.150413}", "{'[6, 6, 2, 0, 0, 5, 0, 1, 1, 3, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.150739}", "{'[6, 6, 2, 0, 0, 5, 0, 1, 1, 3, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.148984}", "{'[6, 6, 2, 0, 0, 5, 0, 1, 1, 3, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.147565}", "{'[6, 6, 2, 0, 0, 5, 0, 1, 1, 3, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.149919}", "{'[6, 6, 2, 0, 0, 5, 0, 1, 1, 3, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.149442}", "{'[6, 6, 2, 0, 0, 5, 0, 1, 1, 3, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.149964}", "{'[6, 6, 2, 0, 0, 5, 0, 1, 1, 3, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.150709}", "{'[6, 6, 2, 0, 0, 5, 0, 1, 1, 3, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.149638}", "{'[6, 6, 2, 0, 0, 5, 0, 1, 1, 3, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.150286}", "{'[6, 6, 2, 0, 0, 5, 0, 1, 1, 3, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.150175}", "{'[6, 6, 2, 0, 0, 5, 0, 1, 1, 3, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.150796}", "{'[6, 6, 2, 0, 0, 5, 0, 1, 1, 3, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.150471}", "{'[6, 6, 2, 0, 0, 5, 0, 1, 1, 3, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.151188}", "{'[6, 6, 2, 0, 0, 5, 0, 1, 1, 3, 0, 7, 2, 0, 0, 1, 0, 1]' : 0.150375}"]
returning from 'run': {'[6, 6, 2, 0, 0, 5, 0, 1, 1, 3, 0, 7, 2, 0, 0, 1, 0, 1]': ([0.148761, 0.148801, 0.148214, 0.14762, 0.147063, 0.149926, 0.150322, 0.150555, 0.151445, 0.149819, 0.149756, 0.150091, 0.150209, 0.149562, 0.150655, 0.150413, 0.150739, 0.148984, 0.147565, 0.149919, 0.149442, 0.149964, 0.150709, 0.149638, 0.150286, 0.150175, 0.150796, 0.150471, 0.151188, 0.150375], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 2, 0, 0, 5, 0, 1, 1, 3, 0, 7, 2, 0, 0, 1, 0, 1]': ([0.148761, 0.148801, 0.148214, 0.14762, 0.147063, 0.149926, 0.150322, 0.150555, 0.151445, 0.149819, 0.149756, 0.150091, 0.150209, 0.149562, 0.150655, 0.150413, 0.150739, 0.148984, 0.147565, 0.149919, 0.149442, 0.149964, 0.150709, 0.149638, 0.150286, 0.150175, 0.150796, 0.150471, 0.151188, 0.150375], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = jjj
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	6
        Additions: 		681
        Multiplications: 	288
        Divisions: 		0
        Logical: 		0
        Reads: 			1426
        Writes: 		275
        Comparisons:		22
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest41.exe __orio_perftest41.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest41.exe  
Program Test Output: 
{'[2, 4, 2, 2, 2, 2, 1, 0, 2, 0, 4, 8, 1, 0, 0, 1, 1, 1]' : 0.1255}
{'[2, 4, 2, 2, 2, 2, 1, 0, 2, 0, 4, 8, 1, 0, 0, 1, 1, 1]' : 0.12537}
{'[2, 4, 2, 2, 2, 2, 1, 0, 2, 0, 4, 8, 1, 0, 0, 1, 1, 1]' : 0.125525}
{'[2, 4, 2, 2, 2, 2, 1, 0, 2, 0, 4, 8, 1, 0, 0, 1, 1, 1]' : 0.122776}
{'[2, 4, 2, 2, 2, 2, 1, 0, 2, 0, 4, 8, 1, 0, 0, 1, 1, 1]' : 0.113498}
{'[2, 4, 2, 2, 2, 2, 1, 0, 2, 0, 4, 8, 1, 0, 0, 1, 1, 1]' : 0.113539}
{'[2, 4, 2, 2, 2, 2, 1, 0, 2, 0, 4, 8, 1, 0, 0, 1, 1, 1]' : 0.113499}
{'[2, 4, 2, 2, 2, 2, 1, 0, 2, 0, 4, 8, 1, 0, 0, 1, 1, 1]' : 0.113591}
{'[2, 4, 2, 2, 2, 2, 1, 0, 2, 0, 4, 8, 1, 0, 0, 1, 1, 1]' : 0.113503}
{'[2, 4, 2, 2, 2, 2, 1, 0, 2, 0, 4, 8, 1, 0, 0, 1, 1, 1]' : 0.113496}
{'[2, 4, 2, 2, 2, 2, 1, 0, 2, 0, 4, 8, 1, 0, 0, 1, 1, 1]' : 0.11065}
{'[2, 4, 2, 2, 2, 2, 1, 0, 2, 0, 4, 8, 1, 0, 0, 1, 1, 1]' : 0.112136}
{'[2, 4, 2, 2, 2, 2, 1, 0, 2, 0, 4, 8, 1, 0, 0, 1, 1, 1]' : 0.113451}
{'[2, 4, 2, 2, 2, 2, 1, 0, 2, 0, 4, 8, 1, 0, 0, 1, 1, 1]' : 0.113438}
{'[2, 4, 2, 2, 2, 2, 1, 0, 2, 0, 4, 8, 1, 0, 0, 1, 1, 1]' : 0.111319}
{'[2, 4, 2, 2, 2, 2, 1, 0, 2, 0, 4, 8, 1, 0, 0, 1, 1, 1]' : 0.110993}
{'[2, 4, 2, 2, 2, 2, 1, 0, 2, 0, 4, 8, 1, 0, 0, 1, 1, 1]' : 0.113543}
{'[2, 4, 2, 2, 2, 2, 1, 0, 2, 0, 4, 8, 1, 0, 0, 1, 1, 1]' : 0.113434}
{'[2, 4, 2, 2, 2, 2, 1, 0, 2, 0, 4, 8, 1, 0, 0, 1, 1, 1]' : 0.112877}
{'[2, 4, 2, 2, 2, 2, 1, 0, 2, 0, 4, 8, 1, 0, 0, 1, 1, 1]' : 0.110934}
{'[2, 4, 2, 2, 2, 2, 1, 0, 2, 0, 4, 8, 1, 0, 0, 1, 1, 1]' : 0.112511}
{'[2, 4, 2, 2, 2, 2, 1, 0, 2, 0, 4, 8, 1, 0, 0, 1, 1, 1]' : 0.110875}
{'[2, 4, 2, 2, 2, 2, 1, 0, 2, 0, 4, 8, 1, 0, 0, 1, 1, 1]' : 0.11065}
{'[2, 4, 2, 2, 2, 2, 1, 0, 2, 0, 4, 8, 1, 0, 0, 1, 1, 1]' : 0.110783}
{'[2, 4, 2, 2, 2, 2, 1, 0, 2, 0, 4, 8, 1, 0, 0, 1, 1, 1]' : 0.111021}
{'[2, 4, 2, 2, 2, 2, 1, 0, 2, 0, 4, 8, 1, 0, 0, 1, 1, 1]' : 0.113439}
{'[2, 4, 2, 2, 2, 2, 1, 0, 2, 0, 4, 8, 1, 0, 0, 1, 1, 1]' : 0.11315}
{'[2, 4, 2, 2, 2, 2, 1, 0, 2, 0, 4, 8, 1, 0, 0, 1, 1, 1]' : 0.110657}
{'[2, 4, 2, 2, 2, 2, 1, 0, 2, 0, 4, 8, 1, 0, 0, 1, 1, 1]' : 0.110682}
{'[2, 4, 2, 2, 2, 2, 1, 0, 2, 0, 4, 8, 1, 0, 0, 1, 1, 1]' : 0.112703}

out:
 ["{'[2, 4, 2, 2, 2, 2, 1, 0, 2, 0, 4, 8, 1, 0, 0, 1, 1, 1]' : 0.1255}", "{'[2, 4, 2, 2, 2, 2, 1, 0, 2, 0, 4, 8, 1, 0, 0, 1, 1, 1]' : 0.12537}", "{'[2, 4, 2, 2, 2, 2, 1, 0, 2, 0, 4, 8, 1, 0, 0, 1, 1, 1]' : 0.125525}", "{'[2, 4, 2, 2, 2, 2, 1, 0, 2, 0, 4, 8, 1, 0, 0, 1, 1, 1]' : 0.122776}", "{'[2, 4, 2, 2, 2, 2, 1, 0, 2, 0, 4, 8, 1, 0, 0, 1, 1, 1]' : 0.113498}", "{'[2, 4, 2, 2, 2, 2, 1, 0, 2, 0, 4, 8, 1, 0, 0, 1, 1, 1]' : 0.113539}", "{'[2, 4, 2, 2, 2, 2, 1, 0, 2, 0, 4, 8, 1, 0, 0, 1, 1, 1]' : 0.113499}", "{'[2, 4, 2, 2, 2, 2, 1, 0, 2, 0, 4, 8, 1, 0, 0, 1, 1, 1]' : 0.113591}", "{'[2, 4, 2, 2, 2, 2, 1, 0, 2, 0, 4, 8, 1, 0, 0, 1, 1, 1]' : 0.113503}", "{'[2, 4, 2, 2, 2, 2, 1, 0, 2, 0, 4, 8, 1, 0, 0, 1, 1, 1]' : 0.113496}", "{'[2, 4, 2, 2, 2, 2, 1, 0, 2, 0, 4, 8, 1, 0, 0, 1, 1, 1]' : 0.11065}", "{'[2, 4, 2, 2, 2, 2, 1, 0, 2, 0, 4, 8, 1, 0, 0, 1, 1, 1]' : 0.112136}", "{'[2, 4, 2, 2, 2, 2, 1, 0, 2, 0, 4, 8, 1, 0, 0, 1, 1, 1]' : 0.113451}", "{'[2, 4, 2, 2, 2, 2, 1, 0, 2, 0, 4, 8, 1, 0, 0, 1, 1, 1]' : 0.113438}", "{'[2, 4, 2, 2, 2, 2, 1, 0, 2, 0, 4, 8, 1, 0, 0, 1, 1, 1]' : 0.111319}", "{'[2, 4, 2, 2, 2, 2, 1, 0, 2, 0, 4, 8, 1, 0, 0, 1, 1, 1]' : 0.110993}", "{'[2, 4, 2, 2, 2, 2, 1, 0, 2, 0, 4, 8, 1, 0, 0, 1, 1, 1]' : 0.113543}", "{'[2, 4, 2, 2, 2, 2, 1, 0, 2, 0, 4, 8, 1, 0, 0, 1, 1, 1]' : 0.113434}", "{'[2, 4, 2, 2, 2, 2, 1, 0, 2, 0, 4, 8, 1, 0, 0, 1, 1, 1]' : 0.112877}", "{'[2, 4, 2, 2, 2, 2, 1, 0, 2, 0, 4, 8, 1, 0, 0, 1, 1, 1]' : 0.110934}", "{'[2, 4, 2, 2, 2, 2, 1, 0, 2, 0, 4, 8, 1, 0, 0, 1, 1, 1]' : 0.112511}", "{'[2, 4, 2, 2, 2, 2, 1, 0, 2, 0, 4, 8, 1, 0, 0, 1, 1, 1]' : 0.110875}", "{'[2, 4, 2, 2, 2, 2, 1, 0, 2, 0, 4, 8, 1, 0, 0, 1, 1, 1]' : 0.11065}", "{'[2, 4, 2, 2, 2, 2, 1, 0, 2, 0, 4, 8, 1, 0, 0, 1, 1, 1]' : 0.110783}", "{'[2, 4, 2, 2, 2, 2, 1, 0, 2, 0, 4, 8, 1, 0, 0, 1, 1, 1]' : 0.111021}", "{'[2, 4, 2, 2, 2, 2, 1, 0, 2, 0, 4, 8, 1, 0, 0, 1, 1, 1]' : 0.113439}", "{'[2, 4, 2, 2, 2, 2, 1, 0, 2, 0, 4, 8, 1, 0, 0, 1, 1, 1]' : 0.11315}", "{'[2, 4, 2, 2, 2, 2, 1, 0, 2, 0, 4, 8, 1, 0, 0, 1, 1, 1]' : 0.110657}", "{'[2, 4, 2, 2, 2, 2, 1, 0, 2, 0, 4, 8, 1, 0, 0, 1, 1, 1]' : 0.110682}", "{'[2, 4, 2, 2, 2, 2, 1, 0, 2, 0, 4, 8, 1, 0, 0, 1, 1, 1]' : 0.112703}"]
returning from 'run': {'[2, 4, 2, 2, 2, 2, 1, 0, 2, 0, 4, 8, 1, 0, 0, 1, 1, 1]': ([0.1255, 0.12537, 0.125525, 0.122776, 0.113498, 0.113539, 0.113499, 0.113591, 0.113503, 0.113496, 0.11065, 0.112136, 0.113451, 0.113438, 0.111319, 0.110993, 0.113543, 0.113434, 0.112877, 0.110934, 0.112511, 0.110875, 0.11065, 0.110783, 0.111021, 0.113439, 0.11315, 0.110657, 0.110682, 0.112703], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 4, 2, 2, 2, 2, 1, 0, 2, 0, 4, 8, 1, 0, 0, 1, 1, 1]': ([0.1255, 0.12537, 0.125525, 0.122776, 0.113498, 0.113539, 0.113499, 0.113591, 0.113503, 0.113496, 0.11065, 0.112136, 0.113451, 0.113438, 0.111319, 0.110993, 0.113543, 0.113434, 0.112877, 0.110934, 0.112511, 0.110875, 0.11065, 0.110783, 0.111021, 0.113439, 0.11315, 0.110657, 0.110682, 0.112703], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	102
        Max loop nest depth: 	6
        Additions: 		6404
        Multiplications: 	1944
        Divisions: 		0
        Logical: 		0
        Reads: 			12551
        Writes: 		2488
        Comparisons:		102
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest42.exe __orio_perftest42.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest42.exe  
Program Test Output: 
{'[3, 3, 3, 2, 0, 6, 0, 1, 29, 17, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.110993}
{'[3, 3, 3, 2, 0, 6, 0, 1, 29, 17, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.110688}
{'[3, 3, 3, 2, 0, 6, 0, 1, 29, 17, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.110658}
{'[3, 3, 3, 2, 0, 6, 0, 1, 29, 17, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.109764}
{'[3, 3, 3, 2, 0, 6, 0, 1, 29, 17, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.0966151}
{'[3, 3, 3, 2, 0, 6, 0, 1, 29, 17, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.0951571}
{'[3, 3, 3, 2, 0, 6, 0, 1, 29, 17, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.095082}
{'[3, 3, 3, 2, 0, 6, 0, 1, 29, 17, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.0951009}
{'[3, 3, 3, 2, 0, 6, 0, 1, 29, 17, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.095083}
{'[3, 3, 3, 2, 0, 6, 0, 1, 29, 17, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.095082}
{'[3, 3, 3, 2, 0, 6, 0, 1, 29, 17, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.0951002}
{'[3, 3, 3, 2, 0, 6, 0, 1, 29, 17, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.0953782}
{'[3, 3, 3, 2, 0, 6, 0, 1, 29, 17, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.0951519}
{'[3, 3, 3, 2, 0, 6, 0, 1, 29, 17, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.095063}
{'[3, 3, 3, 2, 0, 6, 0, 1, 29, 17, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.0950458}
{'[3, 3, 3, 2, 0, 6, 0, 1, 29, 17, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.0954969}
{'[3, 3, 3, 2, 0, 6, 0, 1, 29, 17, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.095464}
{'[3, 3, 3, 2, 0, 6, 0, 1, 29, 17, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.095052}
{'[3, 3, 3, 2, 0, 6, 0, 1, 29, 17, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.0952229}
{'[3, 3, 3, 2, 0, 6, 0, 1, 29, 17, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.095027}
{'[3, 3, 3, 2, 0, 6, 0, 1, 29, 17, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.0951328}
{'[3, 3, 3, 2, 0, 6, 0, 1, 29, 17, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.0952871}
{'[3, 3, 3, 2, 0, 6, 0, 1, 29, 17, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.0951221}
{'[3, 3, 3, 2, 0, 6, 0, 1, 29, 17, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.095016}
{'[3, 3, 3, 2, 0, 6, 0, 1, 29, 17, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.0950849}
{'[3, 3, 3, 2, 0, 6, 0, 1, 29, 17, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.095139}
{'[3, 3, 3, 2, 0, 6, 0, 1, 29, 17, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.0951052}
{'[3, 3, 3, 2, 0, 6, 0, 1, 29, 17, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.095242}
{'[3, 3, 3, 2, 0, 6, 0, 1, 29, 17, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.0953159}
{'[3, 3, 3, 2, 0, 6, 0, 1, 29, 17, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.0950918}

out:
 ["{'[3, 3, 3, 2, 0, 6, 0, 1, 29, 17, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.110993}", "{'[3, 3, 3, 2, 0, 6, 0, 1, 29, 17, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.110688}", "{'[3, 3, 3, 2, 0, 6, 0, 1, 29, 17, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.110658}", "{'[3, 3, 3, 2, 0, 6, 0, 1, 29, 17, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.109764}", "{'[3, 3, 3, 2, 0, 6, 0, 1, 29, 17, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.0966151}", "{'[3, 3, 3, 2, 0, 6, 0, 1, 29, 17, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.0951571}", "{'[3, 3, 3, 2, 0, 6, 0, 1, 29, 17, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.095082}", "{'[3, 3, 3, 2, 0, 6, 0, 1, 29, 17, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.0951009}", "{'[3, 3, 3, 2, 0, 6, 0, 1, 29, 17, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.095083}", "{'[3, 3, 3, 2, 0, 6, 0, 1, 29, 17, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.095082}", "{'[3, 3, 3, 2, 0, 6, 0, 1, 29, 17, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.0951002}", "{'[3, 3, 3, 2, 0, 6, 0, 1, 29, 17, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.0953782}", "{'[3, 3, 3, 2, 0, 6, 0, 1, 29, 17, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.0951519}", "{'[3, 3, 3, 2, 0, 6, 0, 1, 29, 17, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.095063}", "{'[3, 3, 3, 2, 0, 6, 0, 1, 29, 17, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.0950458}", "{'[3, 3, 3, 2, 0, 6, 0, 1, 29, 17, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.0954969}", "{'[3, 3, 3, 2, 0, 6, 0, 1, 29, 17, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.095464}", "{'[3, 3, 3, 2, 0, 6, 0, 1, 29, 17, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.095052}", "{'[3, 3, 3, 2, 0, 6, 0, 1, 29, 17, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.0952229}", "{'[3, 3, 3, 2, 0, 6, 0, 1, 29, 17, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.095027}", "{'[3, 3, 3, 2, 0, 6, 0, 1, 29, 17, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.0951328}", "{'[3, 3, 3, 2, 0, 6, 0, 1, 29, 17, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.0952871}", "{'[3, 3, 3, 2, 0, 6, 0, 1, 29, 17, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.0951221}", "{'[3, 3, 3, 2, 0, 6, 0, 1, 29, 17, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.095016}", "{'[3, 3, 3, 2, 0, 6, 0, 1, 29, 17, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.0950849}", "{'[3, 3, 3, 2, 0, 6, 0, 1, 29, 17, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.095139}", "{'[3, 3, 3, 2, 0, 6, 0, 1, 29, 17, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.0951052}", "{'[3, 3, 3, 2, 0, 6, 0, 1, 29, 17, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.095242}", "{'[3, 3, 3, 2, 0, 6, 0, 1, 29, 17, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.0953159}", "{'[3, 3, 3, 2, 0, 6, 0, 1, 29, 17, 0, 25, 1, 1, 0, 1, 1, 1]' : 0.0950918}"]
returning from 'run': {'[3, 3, 3, 2, 0, 6, 0, 1, 29, 17, 0, 25, 1, 1, 0, 1, 1, 1]': ([0.110993, 0.110688, 0.110658, 0.109764, 0.0966151, 0.0951571, 0.095082, 0.0951009, 0.095083, 0.095082, 0.0951002, 0.0953782, 0.0951519, 0.095063, 0.0950458, 0.0954969, 0.095464, 0.095052, 0.0952229, 0.095027, 0.0951328, 0.0952871, 0.0951221, 0.095016, 0.0950849, 0.095139, 0.0951052, 0.095242, 0.0953159, 0.0950918], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 3, 3, 2, 0, 6, 0, 1, 29, 17, 0, 25, 1, 1, 0, 1, 1, 1]': ([0.110993, 0.110688, 0.110658, 0.109764, 0.0966151, 0.0951571, 0.095082, 0.0951009, 0.095083, 0.095082, 0.0951002, 0.0953782, 0.0951519, 0.095063, 0.0950458, 0.0954969, 0.095464, 0.095052, 0.0952229, 0.095027, 0.0951328, 0.0952871, 0.0951221, 0.095016, 0.0950849, 0.095139, 0.0951052, 0.095242, 0.0953159, 0.0950918], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		579
        Multiplications: 	184
        Divisions: 		0
        Logical: 		0
        Reads: 			1089
        Writes: 		154
        Comparisons:		15
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest43.exe __orio_perftest43.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest43.exe  
Program Test Output: 
{'[0, 0, 0, 4, 3, 2, 0, 0, 26, 2, 20, 0, 0, 0, 0, 0, 0, 0]' : 0.144755}
{'[0, 0, 0, 4, 3, 2, 0, 0, 26, 2, 20, 0, 0, 0, 0, 0, 0, 0]' : 0.144936}
{'[0, 0, 0, 4, 3, 2, 0, 0, 26, 2, 20, 0, 0, 0, 0, 0, 0, 0]' : 0.144697}
{'[0, 0, 0, 4, 3, 2, 0, 0, 26, 2, 20, 0, 0, 0, 0, 0, 0, 0]' : 0.144601}
{'[0, 0, 0, 4, 3, 2, 0, 0, 26, 2, 20, 0, 0, 0, 0, 0, 0, 0]' : 0.141545}
{'[0, 0, 0, 4, 3, 2, 0, 0, 26, 2, 20, 0, 0, 0, 0, 0, 0, 0]' : 0.123656}
{'[0, 0, 0, 4, 3, 2, 0, 0, 26, 2, 20, 0, 0, 0, 0, 0, 0, 0]' : 0.122292}
{'[0, 0, 0, 4, 3, 2, 0, 0, 26, 2, 20, 0, 0, 0, 0, 0, 0, 0]' : 0.122462}
{'[0, 0, 0, 4, 3, 2, 0, 0, 26, 2, 20, 0, 0, 0, 0, 0, 0, 0]' : 0.122334}
{'[0, 0, 0, 4, 3, 2, 0, 0, 26, 2, 20, 0, 0, 0, 0, 0, 0, 0]' : 0.12535}
{'[0, 0, 0, 4, 3, 2, 0, 0, 26, 2, 20, 0, 0, 0, 0, 0, 0, 0]' : 0.125355}
{'[0, 0, 0, 4, 3, 2, 0, 0, 26, 2, 20, 0, 0, 0, 0, 0, 0, 0]' : 0.122538}
{'[0, 0, 0, 4, 3, 2, 0, 0, 26, 2, 20, 0, 0, 0, 0, 0, 0, 0]' : 0.122519}
{'[0, 0, 0, 4, 3, 2, 0, 0, 26, 2, 20, 0, 0, 0, 0, 0, 0, 0]' : 0.125139}
{'[0, 0, 0, 4, 3, 2, 0, 0, 26, 2, 20, 0, 0, 0, 0, 0, 0, 0]' : 0.125832}
{'[0, 0, 0, 4, 3, 2, 0, 0, 26, 2, 20, 0, 0, 0, 0, 0, 0, 0]' : 0.125963}
{'[0, 0, 0, 4, 3, 2, 0, 0, 26, 2, 20, 0, 0, 0, 0, 0, 0, 0]' : 0.125973}
{'[0, 0, 0, 4, 3, 2, 0, 0, 26, 2, 20, 0, 0, 0, 0, 0, 0, 0]' : 0.123592}
{'[0, 0, 0, 4, 3, 2, 0, 0, 26, 2, 20, 0, 0, 0, 0, 0, 0, 0]' : 0.122352}
{'[0, 0, 0, 4, 3, 2, 0, 0, 26, 2, 20, 0, 0, 0, 0, 0, 0, 0]' : 0.12251}
{'[0, 0, 0, 4, 3, 2, 0, 0, 26, 2, 20, 0, 0, 0, 0, 0, 0, 0]' : 0.122542}
{'[0, 0, 0, 4, 3, 2, 0, 0, 26, 2, 20, 0, 0, 0, 0, 0, 0, 0]' : 0.124911}
{'[0, 0, 0, 4, 3, 2, 0, 0, 26, 2, 20, 0, 0, 0, 0, 0, 0, 0]' : 0.12589}
{'[0, 0, 0, 4, 3, 2, 0, 0, 26, 2, 20, 0, 0, 0, 0, 0, 0, 0]' : 0.125872}
{'[0, 0, 0, 4, 3, 2, 0, 0, 26, 2, 20, 0, 0, 0, 0, 0, 0, 0]' : 0.126139}
{'[0, 0, 0, 4, 3, 2, 0, 0, 26, 2, 20, 0, 0, 0, 0, 0, 0, 0]' : 0.126281}
{'[0, 0, 0, 4, 3, 2, 0, 0, 26, 2, 20, 0, 0, 0, 0, 0, 0, 0]' : 0.125861}
{'[0, 0, 0, 4, 3, 2, 0, 0, 26, 2, 20, 0, 0, 0, 0, 0, 0, 0]' : 0.12604}
{'[0, 0, 0, 4, 3, 2, 0, 0, 26, 2, 20, 0, 0, 0, 0, 0, 0, 0]' : 0.126191}
{'[0, 0, 0, 4, 3, 2, 0, 0, 26, 2, 20, 0, 0, 0, 0, 0, 0, 0]' : 0.126229}

out:
 ["{'[0, 0, 0, 4, 3, 2, 0, 0, 26, 2, 20, 0, 0, 0, 0, 0, 0, 0]' : 0.144755}", "{'[0, 0, 0, 4, 3, 2, 0, 0, 26, 2, 20, 0, 0, 0, 0, 0, 0, 0]' : 0.144936}", "{'[0, 0, 0, 4, 3, 2, 0, 0, 26, 2, 20, 0, 0, 0, 0, 0, 0, 0]' : 0.144697}", "{'[0, 0, 0, 4, 3, 2, 0, 0, 26, 2, 20, 0, 0, 0, 0, 0, 0, 0]' : 0.144601}", "{'[0, 0, 0, 4, 3, 2, 0, 0, 26, 2, 20, 0, 0, 0, 0, 0, 0, 0]' : 0.141545}", "{'[0, 0, 0, 4, 3, 2, 0, 0, 26, 2, 20, 0, 0, 0, 0, 0, 0, 0]' : 0.123656}", "{'[0, 0, 0, 4, 3, 2, 0, 0, 26, 2, 20, 0, 0, 0, 0, 0, 0, 0]' : 0.122292}", "{'[0, 0, 0, 4, 3, 2, 0, 0, 26, 2, 20, 0, 0, 0, 0, 0, 0, 0]' : 0.122462}", "{'[0, 0, 0, 4, 3, 2, 0, 0, 26, 2, 20, 0, 0, 0, 0, 0, 0, 0]' : 0.122334}", "{'[0, 0, 0, 4, 3, 2, 0, 0, 26, 2, 20, 0, 0, 0, 0, 0, 0, 0]' : 0.12535}", "{'[0, 0, 0, 4, 3, 2, 0, 0, 26, 2, 20, 0, 0, 0, 0, 0, 0, 0]' : 0.125355}", "{'[0, 0, 0, 4, 3, 2, 0, 0, 26, 2, 20, 0, 0, 0, 0, 0, 0, 0]' : 0.122538}", "{'[0, 0, 0, 4, 3, 2, 0, 0, 26, 2, 20, 0, 0, 0, 0, 0, 0, 0]' : 0.122519}", "{'[0, 0, 0, 4, 3, 2, 0, 0, 26, 2, 20, 0, 0, 0, 0, 0, 0, 0]' : 0.125139}", "{'[0, 0, 0, 4, 3, 2, 0, 0, 26, 2, 20, 0, 0, 0, 0, 0, 0, 0]' : 0.125832}", "{'[0, 0, 0, 4, 3, 2, 0, 0, 26, 2, 20, 0, 0, 0, 0, 0, 0, 0]' : 0.125963}", "{'[0, 0, 0, 4, 3, 2, 0, 0, 26, 2, 20, 0, 0, 0, 0, 0, 0, 0]' : 0.125973}", "{'[0, 0, 0, 4, 3, 2, 0, 0, 26, 2, 20, 0, 0, 0, 0, 0, 0, 0]' : 0.123592}", "{'[0, 0, 0, 4, 3, 2, 0, 0, 26, 2, 20, 0, 0, 0, 0, 0, 0, 0]' : 0.122352}", "{'[0, 0, 0, 4, 3, 2, 0, 0, 26, 2, 20, 0, 0, 0, 0, 0, 0, 0]' : 0.12251}", "{'[0, 0, 0, 4, 3, 2, 0, 0, 26, 2, 20, 0, 0, 0, 0, 0, 0, 0]' : 0.122542}", "{'[0, 0, 0, 4, 3, 2, 0, 0, 26, 2, 20, 0, 0, 0, 0, 0, 0, 0]' : 0.124911}", "{'[0, 0, 0, 4, 3, 2, 0, 0, 26, 2, 20, 0, 0, 0, 0, 0, 0, 0]' : 0.12589}", "{'[0, 0, 0, 4, 3, 2, 0, 0, 26, 2, 20, 0, 0, 0, 0, 0, 0, 0]' : 0.125872}", "{'[0, 0, 0, 4, 3, 2, 0, 0, 26, 2, 20, 0, 0, 0, 0, 0, 0, 0]' : 0.126139}", "{'[0, 0, 0, 4, 3, 2, 0, 0, 26, 2, 20, 0, 0, 0, 0, 0, 0, 0]' : 0.126281}", "{'[0, 0, 0, 4, 3, 2, 0, 0, 26, 2, 20, 0, 0, 0, 0, 0, 0, 0]' : 0.125861}", "{'[0, 0, 0, 4, 3, 2, 0, 0, 26, 2, 20, 0, 0, 0, 0, 0, 0, 0]' : 0.12604}", "{'[0, 0, 0, 4, 3, 2, 0, 0, 26, 2, 20, 0, 0, 0, 0, 0, 0, 0]' : 0.126191}", "{'[0, 0, 0, 4, 3, 2, 0, 0, 26, 2, 20, 0, 0, 0, 0, 0, 0, 0]' : 0.126229}"]
returning from 'run': {'[0, 0, 0, 4, 3, 2, 0, 0, 26, 2, 20, 0, 0, 0, 0, 0, 0, 0]': ([0.144755, 0.144936, 0.144697, 0.144601, 0.141545, 0.123656, 0.122292, 0.122462, 0.122334, 0.12535, 0.125355, 0.122538, 0.122519, 0.125139, 0.125832, 0.125963, 0.125973, 0.123592, 0.122352, 0.12251, 0.122542, 0.124911, 0.12589, 0.125872, 0.126139, 0.126281, 0.125861, 0.12604, 0.126191, 0.126229], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 0, 4, 3, 2, 0, 0, 26, 2, 20, 0, 0, 0, 0, 0, 0, 0]': ([0.144755, 0.144936, 0.144697, 0.144601, 0.141545, 0.123656, 0.122292, 0.122462, 0.122334, 0.12535, 0.125355, 0.122538, 0.122519, 0.125139, 0.125832, 0.125963, 0.125973, 0.123592, 0.122352, 0.12251, 0.122542, 0.124911, 0.12589, 0.125872, 0.126139, 0.126281, 0.125861, 0.12604, 0.126191, 0.126229], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		266
        Multiplications: 	66
        Divisions: 		0
        Logical: 		0
        Reads: 			604
        Writes: 		137
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest44.exe __orio_perftest44.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest44.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest44.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest44.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest44.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	93
        Max loop nest depth: 	5
        Additions: 		4429
        Multiplications: 	1144
        Divisions: 		0
        Logical: 		0
        Reads: 			6883
        Writes: 		823
        Comparisons:		93
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest45.exe __orio_perftest45.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest45.exe  
Program Test Output: 
{'[6, 2, 3, 0, 6, 0, 1, 0, 8, 24, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.181722}
{'[6, 2, 3, 0, 6, 0, 1, 0, 8, 24, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.181801}
{'[6, 2, 3, 0, 6, 0, 1, 0, 8, 24, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.176958}
{'[6, 2, 3, 0, 6, 0, 1, 0, 8, 24, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.176895}
{'[6, 2, 3, 0, 6, 0, 1, 0, 8, 24, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.174739}
{'[6, 2, 3, 0, 6, 0, 1, 0, 8, 24, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.176501}
{'[6, 2, 3, 0, 6, 0, 1, 0, 8, 24, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.17657}
{'[6, 2, 3, 0, 6, 0, 1, 0, 8, 24, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.178139}
{'[6, 2, 3, 0, 6, 0, 1, 0, 8, 24, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.181525}
{'[6, 2, 3, 0, 6, 0, 1, 0, 8, 24, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.17782}
{'[6, 2, 3, 0, 6, 0, 1, 0, 8, 24, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.174239}
{'[6, 2, 3, 0, 6, 0, 1, 0, 8, 24, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.176654}
{'[6, 2, 3, 0, 6, 0, 1, 0, 8, 24, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.17673}
{'[6, 2, 3, 0, 6, 0, 1, 0, 8, 24, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.176961}
{'[6, 2, 3, 0, 6, 0, 1, 0, 8, 24, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.176345}
{'[6, 2, 3, 0, 6, 0, 1, 0, 8, 24, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.171963}
{'[6, 2, 3, 0, 6, 0, 1, 0, 8, 24, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.176367}
{'[6, 2, 3, 0, 6, 0, 1, 0, 8, 24, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.175963}
{'[6, 2, 3, 0, 6, 0, 1, 0, 8, 24, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.177505}
{'[6, 2, 3, 0, 6, 0, 1, 0, 8, 24, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.181844}
{'[6, 2, 3, 0, 6, 0, 1, 0, 8, 24, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.179184}
{'[6, 2, 3, 0, 6, 0, 1, 0, 8, 24, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.176643}
{'[6, 2, 3, 0, 6, 0, 1, 0, 8, 24, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.176286}
{'[6, 2, 3, 0, 6, 0, 1, 0, 8, 24, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.172665}
{'[6, 2, 3, 0, 6, 0, 1, 0, 8, 24, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.176091}
{'[6, 2, 3, 0, 6, 0, 1, 0, 8, 24, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.181531}
{'[6, 2, 3, 0, 6, 0, 1, 0, 8, 24, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.178927}
{'[6, 2, 3, 0, 6, 0, 1, 0, 8, 24, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.1771}
{'[6, 2, 3, 0, 6, 0, 1, 0, 8, 24, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.175753}
{'[6, 2, 3, 0, 6, 0, 1, 0, 8, 24, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.174281}

out:
 ["{'[6, 2, 3, 0, 6, 0, 1, 0, 8, 24, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.181722}", "{'[6, 2, 3, 0, 6, 0, 1, 0, 8, 24, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.181801}", "{'[6, 2, 3, 0, 6, 0, 1, 0, 8, 24, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.176958}", "{'[6, 2, 3, 0, 6, 0, 1, 0, 8, 24, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.176895}", "{'[6, 2, 3, 0, 6, 0, 1, 0, 8, 24, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.174739}", "{'[6, 2, 3, 0, 6, 0, 1, 0, 8, 24, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.176501}", "{'[6, 2, 3, 0, 6, 0, 1, 0, 8, 24, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.17657}", "{'[6, 2, 3, 0, 6, 0, 1, 0, 8, 24, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.178139}", "{'[6, 2, 3, 0, 6, 0, 1, 0, 8, 24, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.181525}", "{'[6, 2, 3, 0, 6, 0, 1, 0, 8, 24, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.17782}", "{'[6, 2, 3, 0, 6, 0, 1, 0, 8, 24, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.174239}", "{'[6, 2, 3, 0, 6, 0, 1, 0, 8, 24, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.176654}", "{'[6, 2, 3, 0, 6, 0, 1, 0, 8, 24, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.17673}", "{'[6, 2, 3, 0, 6, 0, 1, 0, 8, 24, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.176961}", "{'[6, 2, 3, 0, 6, 0, 1, 0, 8, 24, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.176345}", "{'[6, 2, 3, 0, 6, 0, 1, 0, 8, 24, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.171963}", "{'[6, 2, 3, 0, 6, 0, 1, 0, 8, 24, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.176367}", "{'[6, 2, 3, 0, 6, 0, 1, 0, 8, 24, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.175963}", "{'[6, 2, 3, 0, 6, 0, 1, 0, 8, 24, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.177505}", "{'[6, 2, 3, 0, 6, 0, 1, 0, 8, 24, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.181844}", "{'[6, 2, 3, 0, 6, 0, 1, 0, 8, 24, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.179184}", "{'[6, 2, 3, 0, 6, 0, 1, 0, 8, 24, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.176643}", "{'[6, 2, 3, 0, 6, 0, 1, 0, 8, 24, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.176286}", "{'[6, 2, 3, 0, 6, 0, 1, 0, 8, 24, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.172665}", "{'[6, 2, 3, 0, 6, 0, 1, 0, 8, 24, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.176091}", "{'[6, 2, 3, 0, 6, 0, 1, 0, 8, 24, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.181531}", "{'[6, 2, 3, 0, 6, 0, 1, 0, 8, 24, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.178927}", "{'[6, 2, 3, 0, 6, 0, 1, 0, 8, 24, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.1771}", "{'[6, 2, 3, 0, 6, 0, 1, 0, 8, 24, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.175753}", "{'[6, 2, 3, 0, 6, 0, 1, 0, 8, 24, 0, 4, 0, 1, 1, 0, 1, 0]' : 0.174281}"]
returning from 'run': {'[6, 2, 3, 0, 6, 0, 1, 0, 8, 24, 0, 4, 0, 1, 1, 0, 1, 0]': ([0.181722, 0.181801, 0.176958, 0.176895, 0.174739, 0.176501, 0.17657, 0.178139, 0.181525, 0.17782, 0.174239, 0.176654, 0.17673, 0.176961, 0.176345, 0.171963, 0.176367, 0.175963, 0.177505, 0.181844, 0.179184, 0.176643, 0.176286, 0.172665, 0.176091, 0.181531, 0.178927, 0.1771, 0.175753, 0.174281], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 2, 3, 0, 6, 0, 1, 0, 8, 24, 0, 4, 0, 1, 1, 0, 1, 0]': ([0.181722, 0.181801, 0.176958, 0.176895, 0.174739, 0.176501, 0.17657, 0.178139, 0.181525, 0.17782, 0.174239, 0.176654, 0.17673, 0.176961, 0.176345, 0.171963, 0.176367, 0.175963, 0.177505, 0.181844, 0.179184, 0.176643, 0.176286, 0.172665, 0.176091, 0.181531, 0.178927, 0.1771, 0.175753, 0.174281], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	33
        Max loop nest depth: 	6
        Additions: 		1240
        Multiplications: 	330
        Divisions: 		0
        Logical: 		0
        Reads: 			2154
        Writes: 		264
        Comparisons:		33
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest46.exe __orio_perftest46.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest46.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest46.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest46.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest46.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Complete design, with measurements:
     T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
116     3    5    0    2    6    3       1       0   28  13   0  17    0    1
208     1    2    0    0    0    0       0       0   27   0   1   0    0    0
515     0    1    2    2    1    3       0       1   29   0  15   3    0    1
597     3    0    6    6    6    5       0       0    2   0  29  28    0    1
663     4    6    6    2    0    0       0       1    2  28  27   0    0    1
860     2    6    1    6    6    1       0       1    8  28   0  29    0    0
1058    2    1    1    6    0    2       0       1   16  22  11   0    1    0
1072    1    0    1    0    2    0       0       1    7   9   0   0    0    0
1116    2    1    1    6    6    4       1       1    0   0  11   6    2    0
1183    4    6    1    6    4    5       1       0    2   1   0   0    1    0
1377    0    4    1    2    2    0       0       0    0   0  25  29    0    1
1404    6    0    5    0    2    5       1       0    1   6   0   4    1    0
1536    0    0    5    3    0    6       1       1    0  10   3   0    0    0
1575    6    1    3    4    2    2       1       1   29  29   0  27    2    0
1685    3    5    1    0    6    5       0       0   25  28  29   0    2    0
1743    0    0    6    2    6    6       1       1   18   0  21  25    1    0
2093    1    3    6    6    1    0       1       1   28   2  27   0    2    0
2177    5    0    1    4    6    0       1       1    4   0   9   0    2    0
2349    0    4    6    5    5    4       0       1   11  16   3   0    2    0
2531    2    3    0    6    1    6       0       0    6  28   0  10    0    0
2539    3    0    4    6    0    6       0       1   19   1  16   0    0    0
2714    0    5    6    0    6    0       0       1   18   9   0   9    1    0
2716    6    0    6    6    3    4       0       0    0  22   1   0    1    0
2720    6    2    6    6    2    0       1       0   22  24  22   0    0    0
2812    2    6    6    6    6    4       1       0    8   0   1   0    0    1
3039    3    1    6    1    6    4       0       0    7   3   0   3    0    0
3127    1    6    6    5    0    0       0       0   27  22   0   3    0    2
3152    3    6    5    0    5    6       1       1   29   0   3  22    0    0
3170    5    2    0    6    5    6       0       1   18   0   0   2    1    1
3270    6    6    0    6    0    5       0       0    5   0  21  24    1    0
3332    0    5    4    6    0    5       1       0    8  20  27   0    0    0
3384    6    3    3    0    4    6       0       0   13   0  10  25    0    0
3415    1    5    0    0    4    0       1       0   25  20   8   0    1    1
3421    6    6    2    0    0    5       0       1    1   3   0   7    2    0
3435    2    4    2    2    2    2       1       0    2   0   4   8    1    0
3598    3    3    3    2    0    6       0       1   29  17   0  25    1    1
3759    0    0    0    4    3    2       0       0   26   2  20   0    0    0
3930    6    2    3    0    6    0       1       0    8  24   0   4    0    1
     RT_K SCR VEC1 VEC2  cost_mean
116     1   1    1    1 0.12298330
208     0   0    1    0 0.15958520
515     1   1    1    1 0.21201590
597     1   1    1    0 0.15655943
663     1   0    0    0 0.20809827
860     0   0    1    1 0.27617403
1058    1   0    1    0 0.12273180
1072    0   1    0    0 0.23031250
1116    0   1    0    0 0.20780243
1183    1   1    1    0 0.10344538
1377    1   0    0    0 0.24017967
1404    0   1    1    0 0.09943247
1536    0   0    1    0 0.17969480
1575    0   0    0    0 0.22320870
1685    0   0    1    1 0.27785430
1743    1   1    0    1 0.10938013
2093    0   0    1    1 0.20837750
2177    0   0    0    1 0.23005577
2349    0   1    0    1 0.14947433
2531    1   0    0    1 0.14765713
2539    0   1    0    1 0.20116167
2714    0   1    0    0 0.10068292
2716    1   0    1    1 0.10957347
2720    0   1    1    0 0.19862813
2812    0   0    0    1 0.20255277
3039    2   0    1    0 0.14873910
3127    0   1    0    0 0.15888057
3152    1   0    1    0 0.30786380
3170    0   0    1    0 0.11461067
3270    1   0    1    0 0.11034537
3332    2   1    0    1 0.18940553
3384    2   0    0    1 0.18018490
3415    0   1    0    0 0.08921672
3421    0   1    0    1 0.14978210
3435    0   1    1    1 0.11398477
3598    0   1    1    1 0.09725873
3759    0   0    0    0 0.12781190
3930    1   0    1    0 0.17719007

Heteroscedasticity Test p-value: 0.681065232602
Regression Step:                Df   Sum Sq  Mean Sq F value  Pr(>F)   
T1_I             1 0.000347 0.000347   0.399 0.55096   
T1_J             1 0.001134 0.001134   1.302 0.29727   
T1_K             1 0.000198 0.000198   0.228 0.65007   
T2_I             1 0.000098 0.000098   0.113 0.74830   
T2_J             1 0.001426 0.001426   1.638 0.24791   
T2_K             1 0.002813 0.002813   3.231 0.12237   
ACOPY_x          1 0.000024 0.000024   0.028 0.87298   
ACOPY_y          1 0.009864 0.009864  11.331 0.01511 * 
U1_I             1 0.000062 0.000062   0.072 0.79790   
U_I              1 0.000606 0.000606   0.697 0.43590   
U_J              1 0.012398 0.012398  14.241 0.00925 **
U_K              1 0.000427 0.000427   0.491 0.50993   
RT_I             1 0.010733 0.010733  12.329 0.01265 * 
RT_J             1 0.003801 0.003801   4.366 0.08166 . 
RT_K             1 0.001997 0.001997   2.294 0.18062   
SCR              1 0.009471 0.009471  10.879 0.01644 * 
VEC1             1 0.000655 0.000655   0.752 0.41910   
VEC2             1 0.002226 0.002226   2.557 0.16091   
I(1/(1 + T1_I))  1 0.002878 0.002878   3.306 0.11890   
I(1/(1 + T1_J))  1 0.000615 0.000615   0.706 0.43286   
I(1/(1 + T1_K))  1 0.020771 0.020771  23.859 0.00275 **
I(1/(1 + T2_I))  1 0.000682 0.000682   0.784 0.41012   
I(1/(1 + T2_J))  1 0.001368 0.001368   1.571 0.25663   
I(1/(1 + T2_K))  1 0.000102 0.000102   0.117 0.74387   
I(1/(1 + U1_I))  1 0.002792 0.002792   3.207 0.12349   
I(1/(1 + U_I))   1 0.001165 0.001165   1.338 0.29136   
I(1/(1 + U_J))   1 0.001794 0.001794   2.061 0.20114   
I(1/(1 + U_K))   1 0.000048 0.000048   0.055 0.82285   
I(1/(1 + RT_I))  1 0.021360 0.021360  24.536 0.00257 **
I(1/(1 + RT_J))  1 0.000014 0.000014   0.016 0.90360   
I(1/(1 + RT_K))  1 0.000946 0.000946   1.087 0.33730   
Residuals        6 0.005223 0.000871                   
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Predicting Best
Generating valid search space of size 4600 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Valid coordinates: 920
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Valid coordinates: 1840
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Tested coordinates: 110000
Valid coordinates: 2760
Tested coordinates: 120000
Tested coordinates: 130000
Tested coordinates: 140000
Tested coordinates: 150000
Valid coordinates: 3680
Tested coordinates: 160000
Tested coordinates: 170000
Tested coordinates: 180000
Tested coordinates: 190000
Valid coordinates: 4600
Valid/Tested configurations: 4600/190866
Generated Search Space:
NULL
Identical predictions (tol = 1e-5): 1
Getting Best from Design
Response: ['cost_mean']
Design Names:  [1] "T1_I"      "T1_J"      "T1_K"      "T2_I"      "T2_J"      "T2_K"     
 [7] "ACOPY_x"   "ACOPY_y"   "U1_I"      "U_I"       "U_J"       "U_K"      
[13] "RT_I"      "RT_J"      "RT_K"      "SCR"       "VEC1"      "VEC2"     
[19] "cost_mean"

Design Response:       cost_mean
116  0.12298330
208  0.15958520
515  0.21201590
597  0.15655943
663  0.20809827
860  0.27617403
1058 0.12273180
1072 0.23031250
1116 0.20780243
1183 0.10344538
1377 0.24017967
1404 0.09943247
1536 0.17969480
1575 0.22320870
1685 0.27785430
1743 0.10938013
2093 0.20837750
2177 0.23005577
2349 0.14947433
2531 0.14765713
2539 0.20116167
2714 0.10068292
2716 0.10957347
2720 0.19862813
2812 0.20255277
3039 0.14873910
3127 0.15888057
3152 0.30786380
3170 0.11461067
3270 0.11034537
3332 0.18940553
3384 0.18018490
3415 0.08921672
3421 0.14978210
3435 0.11398477
3598 0.09725873
3759 0.12781190
3930 0.17719007

Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Getting fixed variables
Pruning Model
Best Predicted:      T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
3505    2    1    0    2    0    2       0       1    6   2  12   0    0    2
     RT_K SCR VEC1 VEC2
3505    0   0    0    1

Best From Design: [1, 5, 0, 0, 4, 0, 1, 0, 25, 20, 8, 0, 1, 1, 0, 1, 0, 0]
Pruned Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'U1_I', 'U_I', 'U_K', 'RT_K', 'VEC1', 'VEC2']
Fixed Factors: {'U_J': 12, 'SCR': 0, 'RT_J': 2, 'RT_I': 0, 'ACOPY_y': 1}
Length of requested configs: 1
Result was on Database, Returning Now
Starting Point (-O3):
0.16283083333333334
Predicted Best Point:
[2, 1, 0, 2, 0, 2, 0, 1, 6, 2, 12, 0, 0, 2, 0, 0, 0, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	30
        Max loop nest depth: 	5
        Additions: 		1162
        Multiplications: 	376
        Divisions: 		0
        Logical: 		0
        Reads: 			2202
        Writes: 		284
        Comparisons:		30
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest47.exe __orio_perftest47.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest47.exe  
Program Test Output: 
{'[2, 1, 0, 2, 0, 2, 0, 1, 6, 2, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.190667}
{'[2, 1, 0, 2, 0, 2, 0, 1, 6, 2, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.176864}
{'[2, 1, 0, 2, 0, 2, 0, 1, 6, 2, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.159313}
{'[2, 1, 0, 2, 0, 2, 0, 1, 6, 2, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.160342}
{'[2, 1, 0, 2, 0, 2, 0, 1, 6, 2, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.159507}
{'[2, 1, 0, 2, 0, 2, 0, 1, 6, 2, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.159577}
{'[2, 1, 0, 2, 0, 2, 0, 1, 6, 2, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.159484}
{'[2, 1, 0, 2, 0, 2, 0, 1, 6, 2, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.159758}
{'[2, 1, 0, 2, 0, 2, 0, 1, 6, 2, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.159436}
{'[2, 1, 0, 2, 0, 2, 0, 1, 6, 2, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.15944}
{'[2, 1, 0, 2, 0, 2, 0, 1, 6, 2, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.159393}
{'[2, 1, 0, 2, 0, 2, 0, 1, 6, 2, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.15959}
{'[2, 1, 0, 2, 0, 2, 0, 1, 6, 2, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.159851}
{'[2, 1, 0, 2, 0, 2, 0, 1, 6, 2, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.160118}
{'[2, 1, 0, 2, 0, 2, 0, 1, 6, 2, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.15938}
{'[2, 1, 0, 2, 0, 2, 0, 1, 6, 2, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.159527}
{'[2, 1, 0, 2, 0, 2, 0, 1, 6, 2, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.159501}
{'[2, 1, 0, 2, 0, 2, 0, 1, 6, 2, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.159505}
{'[2, 1, 0, 2, 0, 2, 0, 1, 6, 2, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.159452}
{'[2, 1, 0, 2, 0, 2, 0, 1, 6, 2, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.159446}
{'[2, 1, 0, 2, 0, 2, 0, 1, 6, 2, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.159377}
{'[2, 1, 0, 2, 0, 2, 0, 1, 6, 2, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.159587}
{'[2, 1, 0, 2, 0, 2, 0, 1, 6, 2, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.160324}
{'[2, 1, 0, 2, 0, 2, 0, 1, 6, 2, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.159598}
{'[2, 1, 0, 2, 0, 2, 0, 1, 6, 2, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.159895}
{'[2, 1, 0, 2, 0, 2, 0, 1, 6, 2, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.159955}
{'[2, 1, 0, 2, 0, 2, 0, 1, 6, 2, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.159401}
{'[2, 1, 0, 2, 0, 2, 0, 1, 6, 2, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.159774}
{'[2, 1, 0, 2, 0, 2, 0, 1, 6, 2, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.159824}
{'[2, 1, 0, 2, 0, 2, 0, 1, 6, 2, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.159464}

out:
 ["{'[2, 1, 0, 2, 0, 2, 0, 1, 6, 2, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.190667}", "{'[2, 1, 0, 2, 0, 2, 0, 1, 6, 2, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.176864}", "{'[2, 1, 0, 2, 0, 2, 0, 1, 6, 2, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.159313}", "{'[2, 1, 0, 2, 0, 2, 0, 1, 6, 2, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.160342}", "{'[2, 1, 0, 2, 0, 2, 0, 1, 6, 2, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.159507}", "{'[2, 1, 0, 2, 0, 2, 0, 1, 6, 2, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.159577}", "{'[2, 1, 0, 2, 0, 2, 0, 1, 6, 2, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.159484}", "{'[2, 1, 0, 2, 0, 2, 0, 1, 6, 2, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.159758}", "{'[2, 1, 0, 2, 0, 2, 0, 1, 6, 2, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.159436}", "{'[2, 1, 0, 2, 0, 2, 0, 1, 6, 2, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.15944}", "{'[2, 1, 0, 2, 0, 2, 0, 1, 6, 2, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.159393}", "{'[2, 1, 0, 2, 0, 2, 0, 1, 6, 2, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.15959}", "{'[2, 1, 0, 2, 0, 2, 0, 1, 6, 2, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.159851}", "{'[2, 1, 0, 2, 0, 2, 0, 1, 6, 2, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.160118}", "{'[2, 1, 0, 2, 0, 2, 0, 1, 6, 2, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.15938}", "{'[2, 1, 0, 2, 0, 2, 0, 1, 6, 2, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.159527}", "{'[2, 1, 0, 2, 0, 2, 0, 1, 6, 2, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.159501}", "{'[2, 1, 0, 2, 0, 2, 0, 1, 6, 2, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.159505}", "{'[2, 1, 0, 2, 0, 2, 0, 1, 6, 2, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.159452}", "{'[2, 1, 0, 2, 0, 2, 0, 1, 6, 2, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.159446}", "{'[2, 1, 0, 2, 0, 2, 0, 1, 6, 2, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.159377}", "{'[2, 1, 0, 2, 0, 2, 0, 1, 6, 2, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.159587}", "{'[2, 1, 0, 2, 0, 2, 0, 1, 6, 2, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.160324}", "{'[2, 1, 0, 2, 0, 2, 0, 1, 6, 2, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.159598}", "{'[2, 1, 0, 2, 0, 2, 0, 1, 6, 2, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.159895}", "{'[2, 1, 0, 2, 0, 2, 0, 1, 6, 2, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.159955}", "{'[2, 1, 0, 2, 0, 2, 0, 1, 6, 2, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.159401}", "{'[2, 1, 0, 2, 0, 2, 0, 1, 6, 2, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.159774}", "{'[2, 1, 0, 2, 0, 2, 0, 1, 6, 2, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.159824}", "{'[2, 1, 0, 2, 0, 2, 0, 1, 6, 2, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.159464}"]
returning from 'run': {'[2, 1, 0, 2, 0, 2, 0, 1, 6, 2, 12, 0, 0, 2, 0, 0, 0, 1]': ([0.190667, 0.176864, 0.159313, 0.160342, 0.159507, 0.159577, 0.159484, 0.159758, 0.159436, 0.15944, 0.159393, 0.15959, 0.159851, 0.160118, 0.15938, 0.159527, 0.159501, 0.159505, 0.159452, 0.159446, 0.159377, 0.159587, 0.160324, 0.159598, 0.159895, 0.159955, 0.159401, 0.159774, 0.159824, 0.159464], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 1, 0, 2, 0, 2, 0, 1, 6, 2, 12, 0, 0, 2, 0, 0, 0, 1]': ([0.190667, 0.176864, 0.159313, 0.160342, 0.159507, 0.159577, 0.159484, 0.159758, 0.159436, 0.15944, 0.159393, 0.15959, 0.159851, 0.160118, 0.15938, 0.159527, 0.159501, 0.159505, 0.159452, 0.159446, 0.159377, 0.159587, 0.160324, 0.159598, 0.159895, 0.159955, 0.159401, 0.159774, 0.159824, 0.159464], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Design Best Point:
[1, 5, 0, 0, 4, 0, 1, 0, 25, 20, 8, 0, 1, 1, 0, 1, 0, 0]
Length of requested configs: 1
Result was on Database, Returning Now
Fixed Factors: {'U_J': 12, 'SCR': 0, 'RT_J': 2, 'RT_I': 0, 'ACOPY_y': 1}
Slowdown (Design Best): 0.547910479690067
Slowdown (Predicted Best): 0.9902608535443226
Budget: 38/180
Updating Global Best: 0.08921672000000003
Current Best Point: 
[1, 5, 0, 0, 4, 0, 1, 0, 25, 20, 8, 0, 1, 1, 0, 1, 0, 0]
Step 1
Generating valid search space of size 3400 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Tested coordinates: 40000
Valid coordinates: 680
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Tested coordinates: 80000
Tested coordinates: 90000
Valid coordinates: 1360
Tested coordinates: 100000
Tested coordinates: 110000
Tested coordinates: 120000
Tested coordinates: 130000
Tested coordinates: 140000
Valid coordinates: 2040
Tested coordinates: 150000
Tested coordinates: 160000
Tested coordinates: 170000
Tested coordinates: 180000
Valid coordinates: 2720
Tested coordinates: 190000
Tested coordinates: 200000
Tested coordinates: 210000
Tested coordinates: 220000
Valid coordinates: 3400
Valid/Tested configurations: 3400/227831
Generated Search Space:
NULL
Clean Info:
Removed Factors: [1] "RT_K"

Removed Inverse Factors: [1] "ACOPY_x" "VEC1"    "VEC2"   

New Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'U1_I', 'U_I', 'U_K', 'VEC1', 'VEC2']
New Inverse Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_K']
New Fixed Factors: {'ACOPY_y': 1, 'RT_K': 0, 'RT_J': 2, 'RT_I': 0, 'U_J': 12, 'SCR': 0}
Full Model:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + U1_I + U_I + U_K + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_K))
Fixed Factors: {'ACOPY_y': 1, 'RT_K': 0, 'RT_J': 2, 'RT_I': 0, 'U_J': 12, 'SCR': 0}
Computing D-Optimal Design
Computing D-Optimal Design with 34 experiments
Design Formula:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + U1_I + U_I + U_K + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_K))
Starting "optFederov" run
Using Search Space:
NULL
Data Dimensions: [1] 3400   12

     T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x U1_I U_I U_K VEC1 VEC2
62      4    6    6    0    0    4       0    4   0   1    1    0
229     6    0    0    4    5    0       1    2   0  22    1    1
459     4    1    1    3    2    0       1   29  29   0    1    0
467     5    6    6    3    6    0       1    0  23   0    0    1
592     0    3    1    1    2    4       0    3   0   0    1    0
659     0    0    1    2    6    6       0    4  22   0    0    1
708     0    0    1    2    0    2       1    0  17   0    0    0
739     1    6    2    0    6    3       1   16  29   0    0    0
743     0    2    6    6    2    6       0    0   0  29    0    1
810     0    0    3    0    3    0       0   16   0  15    0    0
918     6    0    6    6    6    4       0   22   0   0    1    0
1250    0    5    4    1    0    0       1   29   0  29    0    1
1253    1    0    0    2    2    2       1   29   7   0    0    0
1266    2    0    0    5    6    2       0    0   0   2    0    0
1289    4    3    1    0    0    4       1    0   0  20    1    1
1311    2    2    4    0    0    4       1    2   0   0    0    1
1469    6    0    0    6    1    0       0    7  29   0    0    1
1721    1    5    0    1    4    6       1   22   0   2    1    1
1737    1    0    6    6    0    5       0   16  29   0    1    1
1805    6    5    2    0    5    1       0   29   5   0    1    1
1899    0    3    0    6    6    0       0   23   0   1    0    0
1997    6    6    0    0    0    0       0   19  27   0    0    0
2132    6    3    6    0    2    5       1    5   0   8    0    0
2213    2    4    1    4    0    0       0    7   0  28    0    0
2240    6    1    5    4    5    6       0   29   0   1    0    0
2244    0    0    0    0    6    6       1    6  11   0    0    1
2345    1    0    3    6    1    0       0    0   0  11    1    1
2592    2    0    2    3    2    1       1   16   0   0    0    1
2650    4    1    2    2    3    2       1   13   0   6    0    1
2848    1    2    0    2    1    0       0    1   2   0    1    1
2991    0    1    5    4    6    0       1    3   6   0    1    0
3076    0    6    0    6    0    1       1    8   0   8    1    1
3115    6    6    1    5    0    6       1   18   4   0    0    0
3288    3    6    1    2    5    5       0   10   0  29    1    0

D-Efficiency Approximation: [1] 0.49

Measuring design of size 34
Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'U1_I', 'U_I', 'U_K', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		257
        Multiplications: 	98
        Divisions: 		0
        Logical: 		0
        Reads: 			617
        Writes: 		87
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest48.exe __orio_perftest48.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest48.exe  
Program Test Output: 
{'[4, 6, 6, 0, 0, 4, 0, 1, 4, 0, 12, 1, 0, 2, 0, 0, 1, 0]' : 0.275397}
{'[4, 6, 6, 0, 0, 4, 0, 1, 4, 0, 12, 1, 0, 2, 0, 0, 1, 0]' : 0.237815}
{'[4, 6, 6, 0, 0, 4, 0, 1, 4, 0, 12, 1, 0, 2, 0, 0, 1, 0]' : 0.228956}
{'[4, 6, 6, 0, 0, 4, 0, 1, 4, 0, 12, 1, 0, 2, 0, 0, 1, 0]' : 0.228752}
{'[4, 6, 6, 0, 0, 4, 0, 1, 4, 0, 12, 1, 0, 2, 0, 0, 1, 0]' : 0.229464}
{'[4, 6, 6, 0, 0, 4, 0, 1, 4, 0, 12, 1, 0, 2, 0, 0, 1, 0]' : 0.228946}
{'[4, 6, 6, 0, 0, 4, 0, 1, 4, 0, 12, 1, 0, 2, 0, 0, 1, 0]' : 0.229028}
{'[4, 6, 6, 0, 0, 4, 0, 1, 4, 0, 12, 1, 0, 2, 0, 0, 1, 0]' : 0.228913}
{'[4, 6, 6, 0, 0, 4, 0, 1, 4, 0, 12, 1, 0, 2, 0, 0, 1, 0]' : 0.228801}
{'[4, 6, 6, 0, 0, 4, 0, 1, 4, 0, 12, 1, 0, 2, 0, 0, 1, 0]' : 0.229098}
{'[4, 6, 6, 0, 0, 4, 0, 1, 4, 0, 12, 1, 0, 2, 0, 0, 1, 0]' : 0.228902}
{'[4, 6, 6, 0, 0, 4, 0, 1, 4, 0, 12, 1, 0, 2, 0, 0, 1, 0]' : 0.229483}
{'[4, 6, 6, 0, 0, 4, 0, 1, 4, 0, 12, 1, 0, 2, 0, 0, 1, 0]' : 0.228815}
{'[4, 6, 6, 0, 0, 4, 0, 1, 4, 0, 12, 1, 0, 2, 0, 0, 1, 0]' : 0.228843}
{'[4, 6, 6, 0, 0, 4, 0, 1, 4, 0, 12, 1, 0, 2, 0, 0, 1, 0]' : 0.228798}
{'[4, 6, 6, 0, 0, 4, 0, 1, 4, 0, 12, 1, 0, 2, 0, 0, 1, 0]' : 0.228921}
{'[4, 6, 6, 0, 0, 4, 0, 1, 4, 0, 12, 1, 0, 2, 0, 0, 1, 0]' : 0.228898}
{'[4, 6, 6, 0, 0, 4, 0, 1, 4, 0, 12, 1, 0, 2, 0, 0, 1, 0]' : 0.229821}
{'[4, 6, 6, 0, 0, 4, 0, 1, 4, 0, 12, 1, 0, 2, 0, 0, 1, 0]' : 0.229061}
{'[4, 6, 6, 0, 0, 4, 0, 1, 4, 0, 12, 1, 0, 2, 0, 0, 1, 0]' : 0.228888}
{'[4, 6, 6, 0, 0, 4, 0, 1, 4, 0, 12, 1, 0, 2, 0, 0, 1, 0]' : 0.228846}
{'[4, 6, 6, 0, 0, 4, 0, 1, 4, 0, 12, 1, 0, 2, 0, 0, 1, 0]' : 0.229142}
{'[4, 6, 6, 0, 0, 4, 0, 1, 4, 0, 12, 1, 0, 2, 0, 0, 1, 0]' : 0.228849}
{'[4, 6, 6, 0, 0, 4, 0, 1, 4, 0, 12, 1, 0, 2, 0, 0, 1, 0]' : 0.228886}
{'[4, 6, 6, 0, 0, 4, 0, 1, 4, 0, 12, 1, 0, 2, 0, 0, 1, 0]' : 0.2297}
{'[4, 6, 6, 0, 0, 4, 0, 1, 4, 0, 12, 1, 0, 2, 0, 0, 1, 0]' : 0.228825}
{'[4, 6, 6, 0, 0, 4, 0, 1, 4, 0, 12, 1, 0, 2, 0, 0, 1, 0]' : 0.229141}
{'[4, 6, 6, 0, 0, 4, 0, 1, 4, 0, 12, 1, 0, 2, 0, 0, 1, 0]' : 0.228996}
{'[4, 6, 6, 0, 0, 4, 0, 1, 4, 0, 12, 1, 0, 2, 0, 0, 1, 0]' : 0.229016}
{'[4, 6, 6, 0, 0, 4, 0, 1, 4, 0, 12, 1, 0, 2, 0, 0, 1, 0]' : 0.228949}

out:
 ["{'[4, 6, 6, 0, 0, 4, 0, 1, 4, 0, 12, 1, 0, 2, 0, 0, 1, 0]' : 0.275397}", "{'[4, 6, 6, 0, 0, 4, 0, 1, 4, 0, 12, 1, 0, 2, 0, 0, 1, 0]' : 0.237815}", "{'[4, 6, 6, 0, 0, 4, 0, 1, 4, 0, 12, 1, 0, 2, 0, 0, 1, 0]' : 0.228956}", "{'[4, 6, 6, 0, 0, 4, 0, 1, 4, 0, 12, 1, 0, 2, 0, 0, 1, 0]' : 0.228752}", "{'[4, 6, 6, 0, 0, 4, 0, 1, 4, 0, 12, 1, 0, 2, 0, 0, 1, 0]' : 0.229464}", "{'[4, 6, 6, 0, 0, 4, 0, 1, 4, 0, 12, 1, 0, 2, 0, 0, 1, 0]' : 0.228946}", "{'[4, 6, 6, 0, 0, 4, 0, 1, 4, 0, 12, 1, 0, 2, 0, 0, 1, 0]' : 0.229028}", "{'[4, 6, 6, 0, 0, 4, 0, 1, 4, 0, 12, 1, 0, 2, 0, 0, 1, 0]' : 0.228913}", "{'[4, 6, 6, 0, 0, 4, 0, 1, 4, 0, 12, 1, 0, 2, 0, 0, 1, 0]' : 0.228801}", "{'[4, 6, 6, 0, 0, 4, 0, 1, 4, 0, 12, 1, 0, 2, 0, 0, 1, 0]' : 0.229098}", "{'[4, 6, 6, 0, 0, 4, 0, 1, 4, 0, 12, 1, 0, 2, 0, 0, 1, 0]' : 0.228902}", "{'[4, 6, 6, 0, 0, 4, 0, 1, 4, 0, 12, 1, 0, 2, 0, 0, 1, 0]' : 0.229483}", "{'[4, 6, 6, 0, 0, 4, 0, 1, 4, 0, 12, 1, 0, 2, 0, 0, 1, 0]' : 0.228815}", "{'[4, 6, 6, 0, 0, 4, 0, 1, 4, 0, 12, 1, 0, 2, 0, 0, 1, 0]' : 0.228843}", "{'[4, 6, 6, 0, 0, 4, 0, 1, 4, 0, 12, 1, 0, 2, 0, 0, 1, 0]' : 0.228798}", "{'[4, 6, 6, 0, 0, 4, 0, 1, 4, 0, 12, 1, 0, 2, 0, 0, 1, 0]' : 0.228921}", "{'[4, 6, 6, 0, 0, 4, 0, 1, 4, 0, 12, 1, 0, 2, 0, 0, 1, 0]' : 0.228898}", "{'[4, 6, 6, 0, 0, 4, 0, 1, 4, 0, 12, 1, 0, 2, 0, 0, 1, 0]' : 0.229821}", "{'[4, 6, 6, 0, 0, 4, 0, 1, 4, 0, 12, 1, 0, 2, 0, 0, 1, 0]' : 0.229061}", "{'[4, 6, 6, 0, 0, 4, 0, 1, 4, 0, 12, 1, 0, 2, 0, 0, 1, 0]' : 0.228888}", "{'[4, 6, 6, 0, 0, 4, 0, 1, 4, 0, 12, 1, 0, 2, 0, 0, 1, 0]' : 0.228846}", "{'[4, 6, 6, 0, 0, 4, 0, 1, 4, 0, 12, 1, 0, 2, 0, 0, 1, 0]' : 0.229142}", "{'[4, 6, 6, 0, 0, 4, 0, 1, 4, 0, 12, 1, 0, 2, 0, 0, 1, 0]' : 0.228849}", "{'[4, 6, 6, 0, 0, 4, 0, 1, 4, 0, 12, 1, 0, 2, 0, 0, 1, 0]' : 0.228886}", "{'[4, 6, 6, 0, 0, 4, 0, 1, 4, 0, 12, 1, 0, 2, 0, 0, 1, 0]' : 0.2297}", "{'[4, 6, 6, 0, 0, 4, 0, 1, 4, 0, 12, 1, 0, 2, 0, 0, 1, 0]' : 0.228825}", "{'[4, 6, 6, 0, 0, 4, 0, 1, 4, 0, 12, 1, 0, 2, 0, 0, 1, 0]' : 0.229141}", "{'[4, 6, 6, 0, 0, 4, 0, 1, 4, 0, 12, 1, 0, 2, 0, 0, 1, 0]' : 0.228996}", "{'[4, 6, 6, 0, 0, 4, 0, 1, 4, 0, 12, 1, 0, 2, 0, 0, 1, 0]' : 0.229016}", "{'[4, 6, 6, 0, 0, 4, 0, 1, 4, 0, 12, 1, 0, 2, 0, 0, 1, 0]' : 0.228949}"]
returning from 'run': {'[4, 6, 6, 0, 0, 4, 0, 1, 4, 0, 12, 1, 0, 2, 0, 0, 1, 0]': ([0.275397, 0.237815, 0.228956, 0.228752, 0.229464, 0.228946, 0.229028, 0.228913, 0.228801, 0.229098, 0.228902, 0.229483, 0.228815, 0.228843, 0.228798, 0.228921, 0.228898, 0.229821, 0.229061, 0.228888, 0.228846, 0.229142, 0.228849, 0.228886, 0.2297, 0.228825, 0.229141, 0.228996, 0.229016, 0.228949], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 6, 6, 0, 0, 4, 0, 1, 4, 0, 12, 1, 0, 2, 0, 0, 1, 0]': ([0.275397, 0.237815, 0.228956, 0.228752, 0.229464, 0.228946, 0.229028, 0.228913, 0.228801, 0.229098, 0.228902, 0.229483, 0.228815, 0.228843, 0.228798, 0.228921, 0.228898, 0.229821, 0.229061, 0.228888, 0.228846, 0.229142, 0.228849, 0.228886, 0.2297, 0.228825, 0.229141, 0.228996, 0.229016, 0.228949], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = iii
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	4
        Additions: 		303
        Multiplications: 	112
        Divisions: 		0
        Logical: 		0
        Reads: 			676
        Writes: 		87
        Comparisons:		9
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest49.exe __orio_perftest49.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest49.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest49.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest49.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest49.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	109
        Max loop nest depth: 	6
        Additions: 		8350
        Multiplications: 	2046
        Divisions: 		0
        Logical: 		0
        Reads: 			12634
        Writes: 		1399
        Comparisons:		109
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest50.exe __orio_perftest50.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest50.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest50.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest50.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest50.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = iii
Code stats:
        Number of loops: 	89
        Max loop nest depth: 	5
        Additions: 		6675
        Multiplications: 	1650
        Divisions: 		0
        Logical: 		0
        Reads: 			10150
        Writes: 		1108
        Comparisons:		89
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest51.exe __orio_perftest51.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest51.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest51.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest51.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest51.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		238
        Multiplications: 	94
        Divisions: 		0
        Logical: 		0
        Reads: 			594
        Writes: 		86
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest52.exe __orio_perftest52.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest52.exe  
Program Test Output: 
{'[0, 3, 1, 1, 2, 4, 0, 1, 3, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.294809}
{'[0, 3, 1, 1, 2, 4, 0, 1, 3, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.278419}
{'[0, 3, 1, 1, 2, 4, 0, 1, 3, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.274883}
{'[0, 3, 1, 1, 2, 4, 0, 1, 3, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.273319}
{'[0, 3, 1, 1, 2, 4, 0, 1, 3, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.273283}
{'[0, 3, 1, 1, 2, 4, 0, 1, 3, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.273885}
{'[0, 3, 1, 1, 2, 4, 0, 1, 3, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.2783}
{'[0, 3, 1, 1, 2, 4, 0, 1, 3, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.279588}
{'[0, 3, 1, 1, 2, 4, 0, 1, 3, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.28191}
{'[0, 3, 1, 1, 2, 4, 0, 1, 3, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.278251}
{'[0, 3, 1, 1, 2, 4, 0, 1, 3, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.273457}
{'[0, 3, 1, 1, 2, 4, 0, 1, 3, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.277476}
{'[0, 3, 1, 1, 2, 4, 0, 1, 3, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.282111}
{'[0, 3, 1, 1, 2, 4, 0, 1, 3, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.277968}
{'[0, 3, 1, 1, 2, 4, 0, 1, 3, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.267926}
{'[0, 3, 1, 1, 2, 4, 0, 1, 3, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.272309}
{'[0, 3, 1, 1, 2, 4, 0, 1, 3, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.273711}
{'[0, 3, 1, 1, 2, 4, 0, 1, 3, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.27811}
{'[0, 3, 1, 1, 2, 4, 0, 1, 3, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.273381}
{'[0, 3, 1, 1, 2, 4, 0, 1, 3, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.273551}
{'[0, 3, 1, 1, 2, 4, 0, 1, 3, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.276861}
{'[0, 3, 1, 1, 2, 4, 0, 1, 3, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.275525}
{'[0, 3, 1, 1, 2, 4, 0, 1, 3, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.270052}
{'[0, 3, 1, 1, 2, 4, 0, 1, 3, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.273379}
{'[0, 3, 1, 1, 2, 4, 0, 1, 3, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.276138}
{'[0, 3, 1, 1, 2, 4, 0, 1, 3, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.273896}
{'[0, 3, 1, 1, 2, 4, 0, 1, 3, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.273433}
{'[0, 3, 1, 1, 2, 4, 0, 1, 3, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.274471}
{'[0, 3, 1, 1, 2, 4, 0, 1, 3, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.275394}
{'[0, 3, 1, 1, 2, 4, 0, 1, 3, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.27261}

out:
 ["{'[0, 3, 1, 1, 2, 4, 0, 1, 3, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.294809}", "{'[0, 3, 1, 1, 2, 4, 0, 1, 3, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.278419}", "{'[0, 3, 1, 1, 2, 4, 0, 1, 3, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.274883}", "{'[0, 3, 1, 1, 2, 4, 0, 1, 3, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.273319}", "{'[0, 3, 1, 1, 2, 4, 0, 1, 3, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.273283}", "{'[0, 3, 1, 1, 2, 4, 0, 1, 3, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.273885}", "{'[0, 3, 1, 1, 2, 4, 0, 1, 3, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.2783}", "{'[0, 3, 1, 1, 2, 4, 0, 1, 3, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.279588}", "{'[0, 3, 1, 1, 2, 4, 0, 1, 3, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.28191}", "{'[0, 3, 1, 1, 2, 4, 0, 1, 3, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.278251}", "{'[0, 3, 1, 1, 2, 4, 0, 1, 3, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.273457}", "{'[0, 3, 1, 1, 2, 4, 0, 1, 3, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.277476}", "{'[0, 3, 1, 1, 2, 4, 0, 1, 3, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.282111}", "{'[0, 3, 1, 1, 2, 4, 0, 1, 3, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.277968}", "{'[0, 3, 1, 1, 2, 4, 0, 1, 3, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.267926}", "{'[0, 3, 1, 1, 2, 4, 0, 1, 3, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.272309}", "{'[0, 3, 1, 1, 2, 4, 0, 1, 3, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.273711}", "{'[0, 3, 1, 1, 2, 4, 0, 1, 3, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.27811}", "{'[0, 3, 1, 1, 2, 4, 0, 1, 3, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.273381}", "{'[0, 3, 1, 1, 2, 4, 0, 1, 3, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.273551}", "{'[0, 3, 1, 1, 2, 4, 0, 1, 3, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.276861}", "{'[0, 3, 1, 1, 2, 4, 0, 1, 3, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.275525}", "{'[0, 3, 1, 1, 2, 4, 0, 1, 3, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.270052}", "{'[0, 3, 1, 1, 2, 4, 0, 1, 3, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.273379}", "{'[0, 3, 1, 1, 2, 4, 0, 1, 3, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.276138}", "{'[0, 3, 1, 1, 2, 4, 0, 1, 3, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.273896}", "{'[0, 3, 1, 1, 2, 4, 0, 1, 3, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.273433}", "{'[0, 3, 1, 1, 2, 4, 0, 1, 3, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.274471}", "{'[0, 3, 1, 1, 2, 4, 0, 1, 3, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.275394}", "{'[0, 3, 1, 1, 2, 4, 0, 1, 3, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.27261}"]
returning from 'run': {'[0, 3, 1, 1, 2, 4, 0, 1, 3, 0, 12, 0, 0, 2, 0, 0, 1, 0]': ([0.294809, 0.278419, 0.274883, 0.273319, 0.273283, 0.273885, 0.2783, 0.279588, 0.28191, 0.278251, 0.273457, 0.277476, 0.282111, 0.277968, 0.267926, 0.272309, 0.273711, 0.27811, 0.273381, 0.273551, 0.276861, 0.275525, 0.270052, 0.273379, 0.276138, 0.273896, 0.273433, 0.274471, 0.275394, 0.27261], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 3, 1, 1, 2, 4, 0, 1, 3, 0, 12, 0, 0, 2, 0, 0, 1, 0]': ([0.294809, 0.278419, 0.274883, 0.273319, 0.273283, 0.273885, 0.2783, 0.279588, 0.28191, 0.278251, 0.273457, 0.277476, 0.282111, 0.277968, 0.267926, 0.272309, 0.273711, 0.27811, 0.273381, 0.273551, 0.276861, 0.275525, 0.270052, 0.273379, 0.276138, 0.273896, 0.273433, 0.274471, 0.275394, 0.27261], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	111
        Max loop nest depth: 	5
        Additions: 		8103
        Multiplications: 	2256
        Divisions: 		0
        Logical: 		0
        Reads: 			12645
        Writes: 		1504
        Comparisons:		111
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest53.exe __orio_perftest53.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest53.exe  
Program Test Output: 
{'[0, 0, 1, 2, 6, 6, 0, 1, 4, 22, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.235537}
{'[0, 0, 1, 2, 6, 6, 0, 1, 4, 22, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.232083}
{'[0, 0, 1, 2, 6, 6, 0, 1, 4, 22, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.201263}
{'[0, 0, 1, 2, 6, 6, 0, 1, 4, 22, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.199299}
{'[0, 0, 1, 2, 6, 6, 0, 1, 4, 22, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.20154}
{'[0, 0, 1, 2, 6, 6, 0, 1, 4, 22, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.204772}
{'[0, 0, 1, 2, 6, 6, 0, 1, 4, 22, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.20502}
{'[0, 0, 1, 2, 6, 6, 0, 1, 4, 22, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.20622}
{'[0, 0, 1, 2, 6, 6, 0, 1, 4, 22, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.204647}
{'[0, 0, 1, 2, 6, 6, 0, 1, 4, 22, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.204605}
{'[0, 0, 1, 2, 6, 6, 0, 1, 4, 22, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.204747}
{'[0, 0, 1, 2, 6, 6, 0, 1, 4, 22, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.205352}
{'[0, 0, 1, 2, 6, 6, 0, 1, 4, 22, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.205387}
{'[0, 0, 1, 2, 6, 6, 0, 1, 4, 22, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.204635}
{'[0, 0, 1, 2, 6, 6, 0, 1, 4, 22, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.207074}
{'[0, 0, 1, 2, 6, 6, 0, 1, 4, 22, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.204629}
{'[0, 0, 1, 2, 6, 6, 0, 1, 4, 22, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.205305}
{'[0, 0, 1, 2, 6, 6, 0, 1, 4, 22, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.205326}
{'[0, 0, 1, 2, 6, 6, 0, 1, 4, 22, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.204668}
{'[0, 0, 1, 2, 6, 6, 0, 1, 4, 22, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.204788}
{'[0, 0, 1, 2, 6, 6, 0, 1, 4, 22, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.204912}
{'[0, 0, 1, 2, 6, 6, 0, 1, 4, 22, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.203273}
{'[0, 0, 1, 2, 6, 6, 0, 1, 4, 22, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.199916}
{'[0, 0, 1, 2, 6, 6, 0, 1, 4, 22, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.199748}
{'[0, 0, 1, 2, 6, 6, 0, 1, 4, 22, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.203635}
{'[0, 0, 1, 2, 6, 6, 0, 1, 4, 22, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.204772}
{'[0, 0, 1, 2, 6, 6, 0, 1, 4, 22, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.205336}
{'[0, 0, 1, 2, 6, 6, 0, 1, 4, 22, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.205531}
{'[0, 0, 1, 2, 6, 6, 0, 1, 4, 22, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.205109}
{'[0, 0, 1, 2, 6, 6, 0, 1, 4, 22, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.204858}

out:
 ["{'[0, 0, 1, 2, 6, 6, 0, 1, 4, 22, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.235537}", "{'[0, 0, 1, 2, 6, 6, 0, 1, 4, 22, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.232083}", "{'[0, 0, 1, 2, 6, 6, 0, 1, 4, 22, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.201263}", "{'[0, 0, 1, 2, 6, 6, 0, 1, 4, 22, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.199299}", "{'[0, 0, 1, 2, 6, 6, 0, 1, 4, 22, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.20154}", "{'[0, 0, 1, 2, 6, 6, 0, 1, 4, 22, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.204772}", "{'[0, 0, 1, 2, 6, 6, 0, 1, 4, 22, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.20502}", "{'[0, 0, 1, 2, 6, 6, 0, 1, 4, 22, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.20622}", "{'[0, 0, 1, 2, 6, 6, 0, 1, 4, 22, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.204647}", "{'[0, 0, 1, 2, 6, 6, 0, 1, 4, 22, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.204605}", "{'[0, 0, 1, 2, 6, 6, 0, 1, 4, 22, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.204747}", "{'[0, 0, 1, 2, 6, 6, 0, 1, 4, 22, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.205352}", "{'[0, 0, 1, 2, 6, 6, 0, 1, 4, 22, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.205387}", "{'[0, 0, 1, 2, 6, 6, 0, 1, 4, 22, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.204635}", "{'[0, 0, 1, 2, 6, 6, 0, 1, 4, 22, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.207074}", "{'[0, 0, 1, 2, 6, 6, 0, 1, 4, 22, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.204629}", "{'[0, 0, 1, 2, 6, 6, 0, 1, 4, 22, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.205305}", "{'[0, 0, 1, 2, 6, 6, 0, 1, 4, 22, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.205326}", "{'[0, 0, 1, 2, 6, 6, 0, 1, 4, 22, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.204668}", "{'[0, 0, 1, 2, 6, 6, 0, 1, 4, 22, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.204788}", "{'[0, 0, 1, 2, 6, 6, 0, 1, 4, 22, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.204912}", "{'[0, 0, 1, 2, 6, 6, 0, 1, 4, 22, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.203273}", "{'[0, 0, 1, 2, 6, 6, 0, 1, 4, 22, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.199916}", "{'[0, 0, 1, 2, 6, 6, 0, 1, 4, 22, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.199748}", "{'[0, 0, 1, 2, 6, 6, 0, 1, 4, 22, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.203635}", "{'[0, 0, 1, 2, 6, 6, 0, 1, 4, 22, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.204772}", "{'[0, 0, 1, 2, 6, 6, 0, 1, 4, 22, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.205336}", "{'[0, 0, 1, 2, 6, 6, 0, 1, 4, 22, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.205531}", "{'[0, 0, 1, 2, 6, 6, 0, 1, 4, 22, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.205109}", "{'[0, 0, 1, 2, 6, 6, 0, 1, 4, 22, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.204858}"]
returning from 'run': {'[0, 0, 1, 2, 6, 6, 0, 1, 4, 22, 12, 0, 0, 2, 0, 0, 0, 1]': ([0.235537, 0.232083, 0.201263, 0.199299, 0.20154, 0.204772, 0.20502, 0.20622, 0.204647, 0.204605, 0.204747, 0.205352, 0.205387, 0.204635, 0.207074, 0.204629, 0.205305, 0.205326, 0.204668, 0.204788, 0.204912, 0.203273, 0.199916, 0.199748, 0.203635, 0.204772, 0.205336, 0.205531, 0.205109, 0.204858], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 1, 2, 6, 6, 0, 1, 4, 22, 12, 0, 0, 2, 0, 0, 0, 1]': ([0.235537, 0.232083, 0.201263, 0.199299, 0.20154, 0.204772, 0.20502, 0.20622, 0.204647, 0.204605, 0.204747, 0.205352, 0.205387, 0.204635, 0.207074, 0.204629, 0.205305, 0.205326, 0.204668, 0.204788, 0.204912, 0.203273, 0.199916, 0.199748, 0.203635, 0.204772, 0.205336, 0.205531, 0.205109, 0.204858], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	50
        Max loop nest depth: 	5
        Additions: 		4345
        Multiplications: 	1254
        Divisions: 		0
        Logical: 		0
        Reads: 			6880
        Writes: 		785
        Comparisons:		50
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest54.exe __orio_perftest54.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest54.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest54.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest54.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest54.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	110
        Max loop nest depth: 	5
        Additions: 		8340
        Multiplications: 	2046
        Divisions: 		0
        Logical: 		0
        Reads: 			12609
        Writes: 		1385
        Comparisons:		110
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest55.exe __orio_perftest55.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest55.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest55.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest55.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest55.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		450
        Multiplications: 	154
        Divisions: 		0
        Logical: 		0
        Reads: 			958
        Writes: 		116
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest56.exe __orio_perftest56.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest56.exe  
Program Test Output: 
{'[0, 2, 6, 6, 2, 6, 0, 1, 0, 0, 12, 29, 0, 2, 0, 0, 0, 1]' : 0.196261}
{'[0, 2, 6, 6, 2, 6, 0, 1, 0, 0, 12, 29, 0, 2, 0, 0, 0, 1]' : 0.196125}
{'[0, 2, 6, 6, 2, 6, 0, 1, 0, 0, 12, 29, 0, 2, 0, 0, 0, 1]' : 0.200595}
{'[0, 2, 6, 6, 2, 6, 0, 1, 0, 0, 12, 29, 0, 2, 0, 0, 0, 1]' : 0.201967}
{'[0, 2, 6, 6, 2, 6, 0, 1, 0, 0, 12, 29, 0, 2, 0, 0, 0, 1]' : 0.202017}
{'[0, 2, 6, 6, 2, 6, 0, 1, 0, 0, 12, 29, 0, 2, 0, 0, 0, 1]' : 0.201991}
{'[0, 2, 6, 6, 2, 6, 0, 1, 0, 0, 12, 29, 0, 2, 0, 0, 0, 1]' : 0.202189}
{'[0, 2, 6, 6, 2, 6, 0, 1, 0, 0, 12, 29, 0, 2, 0, 0, 0, 1]' : 0.20202}
{'[0, 2, 6, 6, 2, 6, 0, 1, 0, 0, 12, 29, 0, 2, 0, 0, 0, 1]' : 0.20195}
{'[0, 2, 6, 6, 2, 6, 0, 1, 0, 0, 12, 29, 0, 2, 0, 0, 0, 1]' : 0.202056}
{'[0, 2, 6, 6, 2, 6, 0, 1, 0, 0, 12, 29, 0, 2, 0, 0, 0, 1]' : 0.201991}
{'[0, 2, 6, 6, 2, 6, 0, 1, 0, 0, 12, 29, 0, 2, 0, 0, 0, 1]' : 0.201975}
{'[0, 2, 6, 6, 2, 6, 0, 1, 0, 0, 12, 29, 0, 2, 0, 0, 0, 1]' : 0.202103}
{'[0, 2, 6, 6, 2, 6, 0, 1, 0, 0, 12, 29, 0, 2, 0, 0, 0, 1]' : 0.201938}
{'[0, 2, 6, 6, 2, 6, 0, 1, 0, 0, 12, 29, 0, 2, 0, 0, 0, 1]' : 0.202013}
{'[0, 2, 6, 6, 2, 6, 0, 1, 0, 0, 12, 29, 0, 2, 0, 0, 0, 1]' : 0.201955}
{'[0, 2, 6, 6, 2, 6, 0, 1, 0, 0, 12, 29, 0, 2, 0, 0, 0, 1]' : 0.202185}
{'[0, 2, 6, 6, 2, 6, 0, 1, 0, 0, 12, 29, 0, 2, 0, 0, 0, 1]' : 0.202068}
{'[0, 2, 6, 6, 2, 6, 0, 1, 0, 0, 12, 29, 0, 2, 0, 0, 0, 1]' : 0.201959}
{'[0, 2, 6, 6, 2, 6, 0, 1, 0, 0, 12, 29, 0, 2, 0, 0, 0, 1]' : 0.199231}
{'[0, 2, 6, 6, 2, 6, 0, 1, 0, 0, 12, 29, 0, 2, 0, 0, 0, 1]' : 0.201991}
{'[0, 2, 6, 6, 2, 6, 0, 1, 0, 0, 12, 29, 0, 2, 0, 0, 0, 1]' : 0.202024}
{'[0, 2, 6, 6, 2, 6, 0, 1, 0, 0, 12, 29, 0, 2, 0, 0, 0, 1]' : 0.202049}
{'[0, 2, 6, 6, 2, 6, 0, 1, 0, 0, 12, 29, 0, 2, 0, 0, 0, 1]' : 0.201967}
{'[0, 2, 6, 6, 2, 6, 0, 1, 0, 0, 12, 29, 0, 2, 0, 0, 0, 1]' : 0.197346}
{'[0, 2, 6, 6, 2, 6, 0, 1, 0, 0, 12, 29, 0, 2, 0, 0, 0, 1]' : 0.196081}
{'[0, 2, 6, 6, 2, 6, 0, 1, 0, 0, 12, 29, 0, 2, 0, 0, 0, 1]' : 0.196178}
{'[0, 2, 6, 6, 2, 6, 0, 1, 0, 0, 12, 29, 0, 2, 0, 0, 0, 1]' : 0.201465}
{'[0, 2, 6, 6, 2, 6, 0, 1, 0, 0, 12, 29, 0, 2, 0, 0, 0, 1]' : 0.201982}
{'[0, 2, 6, 6, 2, 6, 0, 1, 0, 0, 12, 29, 0, 2, 0, 0, 0, 1]' : 0.201995}

out:
 ["{'[0, 2, 6, 6, 2, 6, 0, 1, 0, 0, 12, 29, 0, 2, 0, 0, 0, 1]' : 0.196261}", "{'[0, 2, 6, 6, 2, 6, 0, 1, 0, 0, 12, 29, 0, 2, 0, 0, 0, 1]' : 0.196125}", "{'[0, 2, 6, 6, 2, 6, 0, 1, 0, 0, 12, 29, 0, 2, 0, 0, 0, 1]' : 0.200595}", "{'[0, 2, 6, 6, 2, 6, 0, 1, 0, 0, 12, 29, 0, 2, 0, 0, 0, 1]' : 0.201967}", "{'[0, 2, 6, 6, 2, 6, 0, 1, 0, 0, 12, 29, 0, 2, 0, 0, 0, 1]' : 0.202017}", "{'[0, 2, 6, 6, 2, 6, 0, 1, 0, 0, 12, 29, 0, 2, 0, 0, 0, 1]' : 0.201991}", "{'[0, 2, 6, 6, 2, 6, 0, 1, 0, 0, 12, 29, 0, 2, 0, 0, 0, 1]' : 0.202189}", "{'[0, 2, 6, 6, 2, 6, 0, 1, 0, 0, 12, 29, 0, 2, 0, 0, 0, 1]' : 0.20202}", "{'[0, 2, 6, 6, 2, 6, 0, 1, 0, 0, 12, 29, 0, 2, 0, 0, 0, 1]' : 0.20195}", "{'[0, 2, 6, 6, 2, 6, 0, 1, 0, 0, 12, 29, 0, 2, 0, 0, 0, 1]' : 0.202056}", "{'[0, 2, 6, 6, 2, 6, 0, 1, 0, 0, 12, 29, 0, 2, 0, 0, 0, 1]' : 0.201991}", "{'[0, 2, 6, 6, 2, 6, 0, 1, 0, 0, 12, 29, 0, 2, 0, 0, 0, 1]' : 0.201975}", "{'[0, 2, 6, 6, 2, 6, 0, 1, 0, 0, 12, 29, 0, 2, 0, 0, 0, 1]' : 0.202103}", "{'[0, 2, 6, 6, 2, 6, 0, 1, 0, 0, 12, 29, 0, 2, 0, 0, 0, 1]' : 0.201938}", "{'[0, 2, 6, 6, 2, 6, 0, 1, 0, 0, 12, 29, 0, 2, 0, 0, 0, 1]' : 0.202013}", "{'[0, 2, 6, 6, 2, 6, 0, 1, 0, 0, 12, 29, 0, 2, 0, 0, 0, 1]' : 0.201955}", "{'[0, 2, 6, 6, 2, 6, 0, 1, 0, 0, 12, 29, 0, 2, 0, 0, 0, 1]' : 0.202185}", "{'[0, 2, 6, 6, 2, 6, 0, 1, 0, 0, 12, 29, 0, 2, 0, 0, 0, 1]' : 0.202068}", "{'[0, 2, 6, 6, 2, 6, 0, 1, 0, 0, 12, 29, 0, 2, 0, 0, 0, 1]' : 0.201959}", "{'[0, 2, 6, 6, 2, 6, 0, 1, 0, 0, 12, 29, 0, 2, 0, 0, 0, 1]' : 0.199231}", "{'[0, 2, 6, 6, 2, 6, 0, 1, 0, 0, 12, 29, 0, 2, 0, 0, 0, 1]' : 0.201991}", "{'[0, 2, 6, 6, 2, 6, 0, 1, 0, 0, 12, 29, 0, 2, 0, 0, 0, 1]' : 0.202024}", "{'[0, 2, 6, 6, 2, 6, 0, 1, 0, 0, 12, 29, 0, 2, 0, 0, 0, 1]' : 0.202049}", "{'[0, 2, 6, 6, 2, 6, 0, 1, 0, 0, 12, 29, 0, 2, 0, 0, 0, 1]' : 0.201967}", "{'[0, 2, 6, 6, 2, 6, 0, 1, 0, 0, 12, 29, 0, 2, 0, 0, 0, 1]' : 0.197346}", "{'[0, 2, 6, 6, 2, 6, 0, 1, 0, 0, 12, 29, 0, 2, 0, 0, 0, 1]' : 0.196081}", "{'[0, 2, 6, 6, 2, 6, 0, 1, 0, 0, 12, 29, 0, 2, 0, 0, 0, 1]' : 0.196178}", "{'[0, 2, 6, 6, 2, 6, 0, 1, 0, 0, 12, 29, 0, 2, 0, 0, 0, 1]' : 0.201465}", "{'[0, 2, 6, 6, 2, 6, 0, 1, 0, 0, 12, 29, 0, 2, 0, 0, 0, 1]' : 0.201982}", "{'[0, 2, 6, 6, 2, 6, 0, 1, 0, 0, 12, 29, 0, 2, 0, 0, 0, 1]' : 0.201995}"]
returning from 'run': {'[0, 2, 6, 6, 2, 6, 0, 1, 0, 0, 12, 29, 0, 2, 0, 0, 0, 1]': ([0.196261, 0.196125, 0.200595, 0.201967, 0.202017, 0.201991, 0.202189, 0.20202, 0.20195, 0.202056, 0.201991, 0.201975, 0.202103, 0.201938, 0.202013, 0.201955, 0.202185, 0.202068, 0.201959, 0.199231, 0.201991, 0.202024, 0.202049, 0.201967, 0.197346, 0.196081, 0.196178, 0.201465, 0.201982, 0.201995], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 6, 6, 2, 6, 0, 1, 0, 0, 12, 29, 0, 2, 0, 0, 0, 1]': ([0.196261, 0.196125, 0.200595, 0.201967, 0.202017, 0.201991, 0.202189, 0.20202, 0.20195, 0.202056, 0.201991, 0.201975, 0.202103, 0.201938, 0.202013, 0.201955, 0.202185, 0.202068, 0.201959, 0.199231, 0.201991, 0.202024, 0.202049, 0.201967, 0.197346, 0.196081, 0.196178, 0.201465, 0.201982, 0.201995], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	3
        Additions: 		364
        Multiplications: 	126
        Divisions: 		0
        Logical: 		0
        Reads: 			796
        Writes: 		108
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest57.exe __orio_perftest57.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest57.exe  
Program Test Output: 
{'[0, 0, 3, 0, 3, 0, 0, 1, 16, 0, 12, 15, 0, 2, 0, 0, 0, 0]' : 0.269118}
{'[0, 0, 3, 0, 3, 0, 0, 1, 16, 0, 12, 15, 0, 2, 0, 0, 0, 0]' : 0.268863}
{'[0, 0, 3, 0, 3, 0, 0, 1, 16, 0, 12, 15, 0, 2, 0, 0, 0, 0]' : 0.233153}
{'[0, 0, 3, 0, 3, 0, 0, 1, 16, 0, 12, 15, 0, 2, 0, 0, 0, 0]' : 0.22397}
{'[0, 0, 3, 0, 3, 0, 0, 1, 16, 0, 12, 15, 0, 2, 0, 0, 0, 0]' : 0.224217}
{'[0, 0, 3, 0, 3, 0, 0, 1, 16, 0, 12, 15, 0, 2, 0, 0, 0, 0]' : 0.223805}
{'[0, 0, 3, 0, 3, 0, 0, 1, 16, 0, 12, 15, 0, 2, 0, 0, 0, 0]' : 0.223801}
{'[0, 0, 3, 0, 3, 0, 0, 1, 16, 0, 12, 15, 0, 2, 0, 0, 0, 0]' : 0.223811}
{'[0, 0, 3, 0, 3, 0, 0, 1, 16, 0, 12, 15, 0, 2, 0, 0, 0, 0]' : 0.224764}
{'[0, 0, 3, 0, 3, 0, 0, 1, 16, 0, 12, 15, 0, 2, 0, 0, 0, 0]' : 0.223909}
{'[0, 0, 3, 0, 3, 0, 0, 1, 16, 0, 12, 15, 0, 2, 0, 0, 0, 0]' : 0.223865}
{'[0, 0, 3, 0, 3, 0, 0, 1, 16, 0, 12, 15, 0, 2, 0, 0, 0, 0]' : 0.223842}
{'[0, 0, 3, 0, 3, 0, 0, 1, 16, 0, 12, 15, 0, 2, 0, 0, 0, 0]' : 0.224068}
{'[0, 0, 3, 0, 3, 0, 0, 1, 16, 0, 12, 15, 0, 2, 0, 0, 0, 0]' : 0.223836}
{'[0, 0, 3, 0, 3, 0, 0, 1, 16, 0, 12, 15, 0, 2, 0, 0, 0, 0]' : 0.224323}
{'[0, 0, 3, 0, 3, 0, 0, 1, 16, 0, 12, 15, 0, 2, 0, 0, 0, 0]' : 0.224802}
{'[0, 0, 3, 0, 3, 0, 0, 1, 16, 0, 12, 15, 0, 2, 0, 0, 0, 0]' : 0.223811}
{'[0, 0, 3, 0, 3, 0, 0, 1, 16, 0, 12, 15, 0, 2, 0, 0, 0, 0]' : 0.22431}
{'[0, 0, 3, 0, 3, 0, 0, 1, 16, 0, 12, 15, 0, 2, 0, 0, 0, 0]' : 0.223869}
{'[0, 0, 3, 0, 3, 0, 0, 1, 16, 0, 12, 15, 0, 2, 0, 0, 0, 0]' : 0.224124}
{'[0, 0, 3, 0, 3, 0, 0, 1, 16, 0, 12, 15, 0, 2, 0, 0, 0, 0]' : 0.223799}
{'[0, 0, 3, 0, 3, 0, 0, 1, 16, 0, 12, 15, 0, 2, 0, 0, 0, 0]' : 0.224792}
{'[0, 0, 3, 0, 3, 0, 0, 1, 16, 0, 12, 15, 0, 2, 0, 0, 0, 0]' : 0.223886}
{'[0, 0, 3, 0, 3, 0, 0, 1, 16, 0, 12, 15, 0, 2, 0, 0, 0, 0]' : 0.223873}
{'[0, 0, 3, 0, 3, 0, 0, 1, 16, 0, 12, 15, 0, 2, 0, 0, 0, 0]' : 0.223876}
{'[0, 0, 3, 0, 3, 0, 0, 1, 16, 0, 12, 15, 0, 2, 0, 0, 0, 0]' : 0.223851}
{'[0, 0, 3, 0, 3, 0, 0, 1, 16, 0, 12, 15, 0, 2, 0, 0, 0, 0]' : 0.223829}
{'[0, 0, 3, 0, 3, 0, 0, 1, 16, 0, 12, 15, 0, 2, 0, 0, 0, 0]' : 0.22392}
{'[0, 0, 3, 0, 3, 0, 0, 1, 16, 0, 12, 15, 0, 2, 0, 0, 0, 0]' : 0.224518}
{'[0, 0, 3, 0, 3, 0, 0, 1, 16, 0, 12, 15, 0, 2, 0, 0, 0, 0]' : 0.22382}

out:
 ["{'[0, 0, 3, 0, 3, 0, 0, 1, 16, 0, 12, 15, 0, 2, 0, 0, 0, 0]' : 0.269118}", "{'[0, 0, 3, 0, 3, 0, 0, 1, 16, 0, 12, 15, 0, 2, 0, 0, 0, 0]' : 0.268863}", "{'[0, 0, 3, 0, 3, 0, 0, 1, 16, 0, 12, 15, 0, 2, 0, 0, 0, 0]' : 0.233153}", "{'[0, 0, 3, 0, 3, 0, 0, 1, 16, 0, 12, 15, 0, 2, 0, 0, 0, 0]' : 0.22397}", "{'[0, 0, 3, 0, 3, 0, 0, 1, 16, 0, 12, 15, 0, 2, 0, 0, 0, 0]' : 0.224217}", "{'[0, 0, 3, 0, 3, 0, 0, 1, 16, 0, 12, 15, 0, 2, 0, 0, 0, 0]' : 0.223805}", "{'[0, 0, 3, 0, 3, 0, 0, 1, 16, 0, 12, 15, 0, 2, 0, 0, 0, 0]' : 0.223801}", "{'[0, 0, 3, 0, 3, 0, 0, 1, 16, 0, 12, 15, 0, 2, 0, 0, 0, 0]' : 0.223811}", "{'[0, 0, 3, 0, 3, 0, 0, 1, 16, 0, 12, 15, 0, 2, 0, 0, 0, 0]' : 0.224764}", "{'[0, 0, 3, 0, 3, 0, 0, 1, 16, 0, 12, 15, 0, 2, 0, 0, 0, 0]' : 0.223909}", "{'[0, 0, 3, 0, 3, 0, 0, 1, 16, 0, 12, 15, 0, 2, 0, 0, 0, 0]' : 0.223865}", "{'[0, 0, 3, 0, 3, 0, 0, 1, 16, 0, 12, 15, 0, 2, 0, 0, 0, 0]' : 0.223842}", "{'[0, 0, 3, 0, 3, 0, 0, 1, 16, 0, 12, 15, 0, 2, 0, 0, 0, 0]' : 0.224068}", "{'[0, 0, 3, 0, 3, 0, 0, 1, 16, 0, 12, 15, 0, 2, 0, 0, 0, 0]' : 0.223836}", "{'[0, 0, 3, 0, 3, 0, 0, 1, 16, 0, 12, 15, 0, 2, 0, 0, 0, 0]' : 0.224323}", "{'[0, 0, 3, 0, 3, 0, 0, 1, 16, 0, 12, 15, 0, 2, 0, 0, 0, 0]' : 0.224802}", "{'[0, 0, 3, 0, 3, 0, 0, 1, 16, 0, 12, 15, 0, 2, 0, 0, 0, 0]' : 0.223811}", "{'[0, 0, 3, 0, 3, 0, 0, 1, 16, 0, 12, 15, 0, 2, 0, 0, 0, 0]' : 0.22431}", "{'[0, 0, 3, 0, 3, 0, 0, 1, 16, 0, 12, 15, 0, 2, 0, 0, 0, 0]' : 0.223869}", "{'[0, 0, 3, 0, 3, 0, 0, 1, 16, 0, 12, 15, 0, 2, 0, 0, 0, 0]' : 0.224124}", "{'[0, 0, 3, 0, 3, 0, 0, 1, 16, 0, 12, 15, 0, 2, 0, 0, 0, 0]' : 0.223799}", "{'[0, 0, 3, 0, 3, 0, 0, 1, 16, 0, 12, 15, 0, 2, 0, 0, 0, 0]' : 0.224792}", "{'[0, 0, 3, 0, 3, 0, 0, 1, 16, 0, 12, 15, 0, 2, 0, 0, 0, 0]' : 0.223886}", "{'[0, 0, 3, 0, 3, 0, 0, 1, 16, 0, 12, 15, 0, 2, 0, 0, 0, 0]' : 0.223873}", "{'[0, 0, 3, 0, 3, 0, 0, 1, 16, 0, 12, 15, 0, 2, 0, 0, 0, 0]' : 0.223876}", "{'[0, 0, 3, 0, 3, 0, 0, 1, 16, 0, 12, 15, 0, 2, 0, 0, 0, 0]' : 0.223851}", "{'[0, 0, 3, 0, 3, 0, 0, 1, 16, 0, 12, 15, 0, 2, 0, 0, 0, 0]' : 0.223829}", "{'[0, 0, 3, 0, 3, 0, 0, 1, 16, 0, 12, 15, 0, 2, 0, 0, 0, 0]' : 0.22392}", "{'[0, 0, 3, 0, 3, 0, 0, 1, 16, 0, 12, 15, 0, 2, 0, 0, 0, 0]' : 0.224518}", "{'[0, 0, 3, 0, 3, 0, 0, 1, 16, 0, 12, 15, 0, 2, 0, 0, 0, 0]' : 0.22382}"]
returning from 'run': {'[0, 0, 3, 0, 3, 0, 0, 1, 16, 0, 12, 15, 0, 2, 0, 0, 0, 0]': ([0.269118, 0.268863, 0.233153, 0.22397, 0.224217, 0.223805, 0.223801, 0.223811, 0.224764, 0.223909, 0.223865, 0.223842, 0.224068, 0.223836, 0.224323, 0.224802, 0.223811, 0.22431, 0.223869, 0.224124, 0.223799, 0.224792, 0.223886, 0.223873, 0.223876, 0.223851, 0.223829, 0.22392, 0.224518, 0.22382], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 3, 0, 3, 0, 0, 1, 16, 0, 12, 15, 0, 2, 0, 0, 0, 0]': ([0.269118, 0.268863, 0.233153, 0.22397, 0.224217, 0.223805, 0.223801, 0.223811, 0.224764, 0.223909, 0.223865, 0.223842, 0.224068, 0.223836, 0.224323, 0.224802, 0.223811, 0.22431, 0.223869, 0.224124, 0.223799, 0.224792, 0.223886, 0.223873, 0.223876, 0.223851, 0.223829, 0.22392, 0.224518, 0.22382], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		254
        Multiplications: 	94
        Divisions: 		0
        Logical: 		0
        Reads: 			625
        Writes: 		103
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest58.exe __orio_perftest58.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest58.exe  
Program Test Output: 
{'[6, 0, 6, 6, 6, 4, 0, 1, 22, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.251019}
{'[6, 0, 6, 6, 6, 4, 0, 1, 22, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.231532}
{'[6, 0, 6, 6, 6, 4, 0, 1, 22, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.215895}
{'[6, 0, 6, 6, 6, 4, 0, 1, 22, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.219198}
{'[6, 0, 6, 6, 6, 4, 0, 1, 22, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.215999}
{'[6, 0, 6, 6, 6, 4, 0, 1, 22, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.216296}
{'[6, 0, 6, 6, 6, 4, 0, 1, 22, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.215914}
{'[6, 0, 6, 6, 6, 4, 0, 1, 22, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.215372}
{'[6, 0, 6, 6, 6, 4, 0, 1, 22, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.211328}
{'[6, 0, 6, 6, 6, 4, 0, 1, 22, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.209364}
{'[6, 0, 6, 6, 6, 4, 0, 1, 22, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.214295}
{'[6, 0, 6, 6, 6, 4, 0, 1, 22, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.216024}
{'[6, 0, 6, 6, 6, 4, 0, 1, 22, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.21626}
{'[6, 0, 6, 6, 6, 4, 0, 1, 22, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.21083}
{'[6, 0, 6, 6, 6, 4, 0, 1, 22, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.209673}
{'[6, 0, 6, 6, 6, 4, 0, 1, 22, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.21602}
{'[6, 0, 6, 6, 6, 4, 0, 1, 22, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.216079}
{'[6, 0, 6, 6, 6, 4, 0, 1, 22, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.21652}
{'[6, 0, 6, 6, 6, 4, 0, 1, 22, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.215095}
{'[6, 0, 6, 6, 6, 4, 0, 1, 22, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.212188}
{'[6, 0, 6, 6, 6, 4, 0, 1, 22, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.216058}
{'[6, 0, 6, 6, 6, 4, 0, 1, 22, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.216116}
{'[6, 0, 6, 6, 6, 4, 0, 1, 22, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.216189}
{'[6, 0, 6, 6, 6, 4, 0, 1, 22, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.216}
{'[6, 0, 6, 6, 6, 4, 0, 1, 22, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.216088}
{'[6, 0, 6, 6, 6, 4, 0, 1, 22, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.210014}
{'[6, 0, 6, 6, 6, 4, 0, 1, 22, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.212492}
{'[6, 0, 6, 6, 6, 4, 0, 1, 22, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.216382}
{'[6, 0, 6, 6, 6, 4, 0, 1, 22, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.216095}
{'[6, 0, 6, 6, 6, 4, 0, 1, 22, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.210724}

out:
 ["{'[6, 0, 6, 6, 6, 4, 0, 1, 22, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.251019}", "{'[6, 0, 6, 6, 6, 4, 0, 1, 22, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.231532}", "{'[6, 0, 6, 6, 6, 4, 0, 1, 22, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.215895}", "{'[6, 0, 6, 6, 6, 4, 0, 1, 22, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.219198}", "{'[6, 0, 6, 6, 6, 4, 0, 1, 22, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.215999}", "{'[6, 0, 6, 6, 6, 4, 0, 1, 22, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.216296}", "{'[6, 0, 6, 6, 6, 4, 0, 1, 22, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.215914}", "{'[6, 0, 6, 6, 6, 4, 0, 1, 22, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.215372}", "{'[6, 0, 6, 6, 6, 4, 0, 1, 22, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.211328}", "{'[6, 0, 6, 6, 6, 4, 0, 1, 22, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.209364}", "{'[6, 0, 6, 6, 6, 4, 0, 1, 22, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.214295}", "{'[6, 0, 6, 6, 6, 4, 0, 1, 22, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.216024}", "{'[6, 0, 6, 6, 6, 4, 0, 1, 22, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.21626}", "{'[6, 0, 6, 6, 6, 4, 0, 1, 22, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.21083}", "{'[6, 0, 6, 6, 6, 4, 0, 1, 22, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.209673}", "{'[6, 0, 6, 6, 6, 4, 0, 1, 22, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.21602}", "{'[6, 0, 6, 6, 6, 4, 0, 1, 22, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.216079}", "{'[6, 0, 6, 6, 6, 4, 0, 1, 22, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.21652}", "{'[6, 0, 6, 6, 6, 4, 0, 1, 22, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.215095}", "{'[6, 0, 6, 6, 6, 4, 0, 1, 22, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.212188}", "{'[6, 0, 6, 6, 6, 4, 0, 1, 22, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.216058}", "{'[6, 0, 6, 6, 6, 4, 0, 1, 22, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.216116}", "{'[6, 0, 6, 6, 6, 4, 0, 1, 22, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.216189}", "{'[6, 0, 6, 6, 6, 4, 0, 1, 22, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.216}", "{'[6, 0, 6, 6, 6, 4, 0, 1, 22, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.216088}", "{'[6, 0, 6, 6, 6, 4, 0, 1, 22, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.210014}", "{'[6, 0, 6, 6, 6, 4, 0, 1, 22, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.212492}", "{'[6, 0, 6, 6, 6, 4, 0, 1, 22, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.216382}", "{'[6, 0, 6, 6, 6, 4, 0, 1, 22, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.216095}", "{'[6, 0, 6, 6, 6, 4, 0, 1, 22, 0, 12, 0, 0, 2, 0, 0, 1, 0]' : 0.210724}"]
returning from 'run': {'[6, 0, 6, 6, 6, 4, 0, 1, 22, 0, 12, 0, 0, 2, 0, 0, 1, 0]': ([0.251019, 0.231532, 0.215895, 0.219198, 0.215999, 0.216296, 0.215914, 0.215372, 0.211328, 0.209364, 0.214295, 0.216024, 0.21626, 0.21083, 0.209673, 0.21602, 0.216079, 0.21652, 0.215095, 0.212188, 0.216058, 0.216116, 0.216189, 0.216, 0.216088, 0.210014, 0.212492, 0.216382, 0.216095, 0.210724], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 6, 6, 6, 4, 0, 1, 22, 0, 12, 0, 0, 2, 0, 0, 1, 0]': ([0.251019, 0.231532, 0.215895, 0.219198, 0.215999, 0.216296, 0.215914, 0.215372, 0.211328, 0.209364, 0.214295, 0.216024, 0.21626, 0.21083, 0.209673, 0.21602, 0.216079, 0.21652, 0.215095, 0.212188, 0.216058, 0.216116, 0.216189, 0.216, 0.216088, 0.210014, 0.212492, 0.216382, 0.216095, 0.210724], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		446
        Multiplications: 	126
        Divisions: 		0
        Logical: 		0
        Reads: 			891
        Writes: 		126
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest59.exe __orio_perftest59.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest59.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest59.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest59.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest59.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	41
        Max loop nest depth: 	5
        Additions: 		2338
        Multiplications: 	594
        Divisions: 		0
        Logical: 		0
        Reads: 			3770
        Writes: 		446
        Comparisons:		41
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest60.exe __orio_perftest60.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest60.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest60.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest60.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest60.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		258
        Multiplications: 	100
        Divisions: 		0
        Logical: 		0
        Reads: 			613
        Writes: 		80
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest61.exe __orio_perftest61.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest61.exe  
Program Test Output: 
{'[2, 0, 0, 5, 6, 2, 0, 1, 0, 0, 12, 2, 0, 2, 0, 0, 0, 0]' : 0.282916}
{'[2, 0, 0, 5, 6, 2, 0, 1, 0, 0, 12, 2, 0, 2, 0, 0, 0, 0]' : 0.264285}
{'[2, 0, 0, 5, 6, 2, 0, 1, 0, 0, 12, 2, 0, 2, 0, 0, 0, 0]' : 0.235472}
{'[2, 0, 0, 5, 6, 2, 0, 1, 0, 0, 12, 2, 0, 2, 0, 0, 0, 0]' : 0.235185}
{'[2, 0, 0, 5, 6, 2, 0, 1, 0, 0, 12, 2, 0, 2, 0, 0, 0, 0]' : 0.248344}
{'[2, 0, 0, 5, 6, 2, 0, 1, 0, 0, 12, 2, 0, 2, 0, 0, 0, 0]' : 0.250939}
{'[2, 0, 0, 5, 6, 2, 0, 1, 0, 0, 12, 2, 0, 2, 0, 0, 0, 0]' : 0.250314}
{'[2, 0, 0, 5, 6, 2, 0, 1, 0, 0, 12, 2, 0, 2, 0, 0, 0, 0]' : 0.235824}
{'[2, 0, 0, 5, 6, 2, 0, 1, 0, 0, 12, 2, 0, 2, 0, 0, 0, 0]' : 0.241293}
{'[2, 0, 0, 5, 6, 2, 0, 1, 0, 0, 12, 2, 0, 2, 0, 0, 0, 0]' : 0.245886}
{'[2, 0, 0, 5, 6, 2, 0, 1, 0, 0, 12, 2, 0, 2, 0, 0, 0, 0]' : 0.250728}
{'[2, 0, 0, 5, 6, 2, 0, 1, 0, 0, 12, 2, 0, 2, 0, 0, 0, 0]' : 0.244461}
{'[2, 0, 0, 5, 6, 2, 0, 1, 0, 0, 12, 2, 0, 2, 0, 0, 0, 0]' : 0.240705}
{'[2, 0, 0, 5, 6, 2, 0, 1, 0, 0, 12, 2, 0, 2, 0, 0, 0, 0]' : 0.243735}
{'[2, 0, 0, 5, 6, 2, 0, 1, 0, 0, 12, 2, 0, 2, 0, 0, 0, 0]' : 0.244302}
{'[2, 0, 0, 5, 6, 2, 0, 1, 0, 0, 12, 2, 0, 2, 0, 0, 0, 0]' : 0.235237}
{'[2, 0, 0, 5, 6, 2, 0, 1, 0, 0, 12, 2, 0, 2, 0, 0, 0, 0]' : 0.239856}
{'[2, 0, 0, 5, 6, 2, 0, 1, 0, 0, 12, 2, 0, 2, 0, 0, 0, 0]' : 0.242916}
{'[2, 0, 0, 5, 6, 2, 0, 1, 0, 0, 12, 2, 0, 2, 0, 0, 0, 0]' : 0.248537}
{'[2, 0, 0, 5, 6, 2, 0, 1, 0, 0, 12, 2, 0, 2, 0, 0, 0, 0]' : 0.248738}
{'[2, 0, 0, 5, 6, 2, 0, 1, 0, 0, 12, 2, 0, 2, 0, 0, 0, 0]' : 0.239954}
{'[2, 0, 0, 5, 6, 2, 0, 1, 0, 0, 12, 2, 0, 2, 0, 0, 0, 0]' : 0.23591}
{'[2, 0, 0, 5, 6, 2, 0, 1, 0, 0, 12, 2, 0, 2, 0, 0, 0, 0]' : 0.236363}
{'[2, 0, 0, 5, 6, 2, 0, 1, 0, 0, 12, 2, 0, 2, 0, 0, 0, 0]' : 0.236418}
{'[2, 0, 0, 5, 6, 2, 0, 1, 0, 0, 12, 2, 0, 2, 0, 0, 0, 0]' : 0.239663}
{'[2, 0, 0, 5, 6, 2, 0, 1, 0, 0, 12, 2, 0, 2, 0, 0, 0, 0]' : 0.248986}
{'[2, 0, 0, 5, 6, 2, 0, 1, 0, 0, 12, 2, 0, 2, 0, 0, 0, 0]' : 0.245154}
{'[2, 0, 0, 5, 6, 2, 0, 1, 0, 0, 12, 2, 0, 2, 0, 0, 0, 0]' : 0.243873}
{'[2, 0, 0, 5, 6, 2, 0, 1, 0, 0, 12, 2, 0, 2, 0, 0, 0, 0]' : 0.238501}
{'[2, 0, 0, 5, 6, 2, 0, 1, 0, 0, 12, 2, 0, 2, 0, 0, 0, 0]' : 0.243689}

out:
 ["{'[2, 0, 0, 5, 6, 2, 0, 1, 0, 0, 12, 2, 0, 2, 0, 0, 0, 0]' : 0.282916}", "{'[2, 0, 0, 5, 6, 2, 0, 1, 0, 0, 12, 2, 0, 2, 0, 0, 0, 0]' : 0.264285}", "{'[2, 0, 0, 5, 6, 2, 0, 1, 0, 0, 12, 2, 0, 2, 0, 0, 0, 0]' : 0.235472}", "{'[2, 0, 0, 5, 6, 2, 0, 1, 0, 0, 12, 2, 0, 2, 0, 0, 0, 0]' : 0.235185}", "{'[2, 0, 0, 5, 6, 2, 0, 1, 0, 0, 12, 2, 0, 2, 0, 0, 0, 0]' : 0.248344}", "{'[2, 0, 0, 5, 6, 2, 0, 1, 0, 0, 12, 2, 0, 2, 0, 0, 0, 0]' : 0.250939}", "{'[2, 0, 0, 5, 6, 2, 0, 1, 0, 0, 12, 2, 0, 2, 0, 0, 0, 0]' : 0.250314}", "{'[2, 0, 0, 5, 6, 2, 0, 1, 0, 0, 12, 2, 0, 2, 0, 0, 0, 0]' : 0.235824}", "{'[2, 0, 0, 5, 6, 2, 0, 1, 0, 0, 12, 2, 0, 2, 0, 0, 0, 0]' : 0.241293}", "{'[2, 0, 0, 5, 6, 2, 0, 1, 0, 0, 12, 2, 0, 2, 0, 0, 0, 0]' : 0.245886}", "{'[2, 0, 0, 5, 6, 2, 0, 1, 0, 0, 12, 2, 0, 2, 0, 0, 0, 0]' : 0.250728}", "{'[2, 0, 0, 5, 6, 2, 0, 1, 0, 0, 12, 2, 0, 2, 0, 0, 0, 0]' : 0.244461}", "{'[2, 0, 0, 5, 6, 2, 0, 1, 0, 0, 12, 2, 0, 2, 0, 0, 0, 0]' : 0.240705}", "{'[2, 0, 0, 5, 6, 2, 0, 1, 0, 0, 12, 2, 0, 2, 0, 0, 0, 0]' : 0.243735}", "{'[2, 0, 0, 5, 6, 2, 0, 1, 0, 0, 12, 2, 0, 2, 0, 0, 0, 0]' : 0.244302}", "{'[2, 0, 0, 5, 6, 2, 0, 1, 0, 0, 12, 2, 0, 2, 0, 0, 0, 0]' : 0.235237}", "{'[2, 0, 0, 5, 6, 2, 0, 1, 0, 0, 12, 2, 0, 2, 0, 0, 0, 0]' : 0.239856}", "{'[2, 0, 0, 5, 6, 2, 0, 1, 0, 0, 12, 2, 0, 2, 0, 0, 0, 0]' : 0.242916}", "{'[2, 0, 0, 5, 6, 2, 0, 1, 0, 0, 12, 2, 0, 2, 0, 0, 0, 0]' : 0.248537}", "{'[2, 0, 0, 5, 6, 2, 0, 1, 0, 0, 12, 2, 0, 2, 0, 0, 0, 0]' : 0.248738}", "{'[2, 0, 0, 5, 6, 2, 0, 1, 0, 0, 12, 2, 0, 2, 0, 0, 0, 0]' : 0.239954}", "{'[2, 0, 0, 5, 6, 2, 0, 1, 0, 0, 12, 2, 0, 2, 0, 0, 0, 0]' : 0.23591}", "{'[2, 0, 0, 5, 6, 2, 0, 1, 0, 0, 12, 2, 0, 2, 0, 0, 0, 0]' : 0.236363}", "{'[2, 0, 0, 5, 6, 2, 0, 1, 0, 0, 12, 2, 0, 2, 0, 0, 0, 0]' : 0.236418}", "{'[2, 0, 0, 5, 6, 2, 0, 1, 0, 0, 12, 2, 0, 2, 0, 0, 0, 0]' : 0.239663}", "{'[2, 0, 0, 5, 6, 2, 0, 1, 0, 0, 12, 2, 0, 2, 0, 0, 0, 0]' : 0.248986}", "{'[2, 0, 0, 5, 6, 2, 0, 1, 0, 0, 12, 2, 0, 2, 0, 0, 0, 0]' : 0.245154}", "{'[2, 0, 0, 5, 6, 2, 0, 1, 0, 0, 12, 2, 0, 2, 0, 0, 0, 0]' : 0.243873}", "{'[2, 0, 0, 5, 6, 2, 0, 1, 0, 0, 12, 2, 0, 2, 0, 0, 0, 0]' : 0.238501}", "{'[2, 0, 0, 5, 6, 2, 0, 1, 0, 0, 12, 2, 0, 2, 0, 0, 0, 0]' : 0.243689}"]
returning from 'run': {'[2, 0, 0, 5, 6, 2, 0, 1, 0, 0, 12, 2, 0, 2, 0, 0, 0, 0]': ([0.282916, 0.264285, 0.235472, 0.235185, 0.248344, 0.250939, 0.250314, 0.235824, 0.241293, 0.245886, 0.250728, 0.244461, 0.240705, 0.243735, 0.244302, 0.235237, 0.239856, 0.242916, 0.248537, 0.248738, 0.239954, 0.23591, 0.236363, 0.236418, 0.239663, 0.248986, 0.245154, 0.243873, 0.238501, 0.243689], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 0, 0, 5, 6, 2, 0, 1, 0, 0, 12, 2, 0, 2, 0, 0, 0, 0]': ([0.282916, 0.264285, 0.235472, 0.235185, 0.248344, 0.250939, 0.250314, 0.235824, 0.241293, 0.245886, 0.250728, 0.244461, 0.240705, 0.243735, 0.244302, 0.235237, 0.239856, 0.242916, 0.248537, 0.248738, 0.239954, 0.23591, 0.236363, 0.236418, 0.239663, 0.248986, 0.245154, 0.243873, 0.238501, 0.243689], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		352
        Multiplications: 	108
        Divisions: 		0
        Logical: 		0
        Reads: 			725
        Writes: 		88
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest62.exe __orio_perftest62.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest62.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest62.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest62.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest62.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		202
        Multiplications: 	66
        Divisions: 		0
        Logical: 		0
        Reads: 			469
        Writes: 		67
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest63.exe __orio_perftest63.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest63.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest63.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest63.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest63.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	74
        Max loop nest depth: 	5
        Additions: 		10216
        Multiplications: 	2914
        Divisions: 		0
        Logical: 		0
        Reads: 			15478
        Writes: 		1742
        Comparisons:		74
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest64.exe __orio_perftest64.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest64.exe  
Program Test Output: 
{'[6, 0, 0, 6, 1, 0, 0, 1, 7, 29, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.250044}
{'[6, 0, 0, 6, 1, 0, 0, 1, 7, 29, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.249137}
{'[6, 0, 0, 6, 1, 0, 0, 1, 7, 29, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.245998}
{'[6, 0, 0, 6, 1, 0, 0, 1, 7, 29, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.245418}
{'[6, 0, 0, 6, 1, 0, 0, 1, 7, 29, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.252632}
{'[6, 0, 0, 6, 1, 0, 0, 1, 7, 29, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.244807}
{'[6, 0, 0, 6, 1, 0, 0, 1, 7, 29, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.239896}
{'[6, 0, 0, 6, 1, 0, 0, 1, 7, 29, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.2452}
{'[6, 0, 0, 6, 1, 0, 0, 1, 7, 29, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.248219}
{'[6, 0, 0, 6, 1, 0, 0, 1, 7, 29, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.23962}
{'[6, 0, 0, 6, 1, 0, 0, 1, 7, 29, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.242033}
{'[6, 0, 0, 6, 1, 0, 0, 1, 7, 29, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.251068}
{'[6, 0, 0, 6, 1, 0, 0, 1, 7, 29, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.258155}
{'[6, 0, 0, 6, 1, 0, 0, 1, 7, 29, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.248868}
{'[6, 0, 0, 6, 1, 0, 0, 1, 7, 29, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.249345}
{'[6, 0, 0, 6, 1, 0, 0, 1, 7, 29, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.251973}
{'[6, 0, 0, 6, 1, 0, 0, 1, 7, 29, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.245993}
{'[6, 0, 0, 6, 1, 0, 0, 1, 7, 29, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.25651}
{'[6, 0, 0, 6, 1, 0, 0, 1, 7, 29, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.255208}
{'[6, 0, 0, 6, 1, 0, 0, 1, 7, 29, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.252173}
{'[6, 0, 0, 6, 1, 0, 0, 1, 7, 29, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.253908}
{'[6, 0, 0, 6, 1, 0, 0, 1, 7, 29, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.2569}
{'[6, 0, 0, 6, 1, 0, 0, 1, 7, 29, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.250144}
{'[6, 0, 0, 6, 1, 0, 0, 1, 7, 29, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.257516}
{'[6, 0, 0, 6, 1, 0, 0, 1, 7, 29, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.25399}
{'[6, 0, 0, 6, 1, 0, 0, 1, 7, 29, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.243438}
{'[6, 0, 0, 6, 1, 0, 0, 1, 7, 29, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.251661}
{'[6, 0, 0, 6, 1, 0, 0, 1, 7, 29, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.245433}
{'[6, 0, 0, 6, 1, 0, 0, 1, 7, 29, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.254462}
{'[6, 0, 0, 6, 1, 0, 0, 1, 7, 29, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.251101}

out:
 ["{'[6, 0, 0, 6, 1, 0, 0, 1, 7, 29, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.250044}", "{'[6, 0, 0, 6, 1, 0, 0, 1, 7, 29, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.249137}", "{'[6, 0, 0, 6, 1, 0, 0, 1, 7, 29, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.245998}", "{'[6, 0, 0, 6, 1, 0, 0, 1, 7, 29, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.245418}", "{'[6, 0, 0, 6, 1, 0, 0, 1, 7, 29, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.252632}", "{'[6, 0, 0, 6, 1, 0, 0, 1, 7, 29, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.244807}", "{'[6, 0, 0, 6, 1, 0, 0, 1, 7, 29, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.239896}", "{'[6, 0, 0, 6, 1, 0, 0, 1, 7, 29, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.2452}", "{'[6, 0, 0, 6, 1, 0, 0, 1, 7, 29, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.248219}", "{'[6, 0, 0, 6, 1, 0, 0, 1, 7, 29, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.23962}", "{'[6, 0, 0, 6, 1, 0, 0, 1, 7, 29, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.242033}", "{'[6, 0, 0, 6, 1, 0, 0, 1, 7, 29, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.251068}", "{'[6, 0, 0, 6, 1, 0, 0, 1, 7, 29, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.258155}", "{'[6, 0, 0, 6, 1, 0, 0, 1, 7, 29, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.248868}", "{'[6, 0, 0, 6, 1, 0, 0, 1, 7, 29, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.249345}", "{'[6, 0, 0, 6, 1, 0, 0, 1, 7, 29, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.251973}", "{'[6, 0, 0, 6, 1, 0, 0, 1, 7, 29, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.245993}", "{'[6, 0, 0, 6, 1, 0, 0, 1, 7, 29, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.25651}", "{'[6, 0, 0, 6, 1, 0, 0, 1, 7, 29, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.255208}", "{'[6, 0, 0, 6, 1, 0, 0, 1, 7, 29, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.252173}", "{'[6, 0, 0, 6, 1, 0, 0, 1, 7, 29, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.253908}", "{'[6, 0, 0, 6, 1, 0, 0, 1, 7, 29, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.2569}", "{'[6, 0, 0, 6, 1, 0, 0, 1, 7, 29, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.250144}", "{'[6, 0, 0, 6, 1, 0, 0, 1, 7, 29, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.257516}", "{'[6, 0, 0, 6, 1, 0, 0, 1, 7, 29, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.25399}", "{'[6, 0, 0, 6, 1, 0, 0, 1, 7, 29, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.243438}", "{'[6, 0, 0, 6, 1, 0, 0, 1, 7, 29, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.251661}", "{'[6, 0, 0, 6, 1, 0, 0, 1, 7, 29, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.245433}", "{'[6, 0, 0, 6, 1, 0, 0, 1, 7, 29, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.254462}", "{'[6, 0, 0, 6, 1, 0, 0, 1, 7, 29, 12, 0, 0, 2, 0, 0, 0, 1]' : 0.251101}"]
returning from 'run': {'[6, 0, 0, 6, 1, 0, 0, 1, 7, 29, 12, 0, 0, 2, 0, 0, 0, 1]': ([0.250044, 0.249137, 0.245998, 0.245418, 0.252632, 0.244807, 0.239896, 0.2452, 0.248219, 0.23962, 0.242033, 0.251068, 0.258155, 0.248868, 0.249345, 0.251973, 0.245993, 0.25651, 0.255208, 0.252173, 0.253908, 0.2569, 0.250144, 0.257516, 0.25399, 0.243438, 0.251661, 0.245433, 0.254462, 0.251101], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 0, 6, 1, 0, 0, 1, 7, 29, 12, 0, 0, 2, 0, 0, 0, 1]': ([0.250044, 0.249137, 0.245998, 0.245418, 0.252632, 0.244807, 0.239896, 0.2452, 0.248219, 0.23962, 0.242033, 0.251068, 0.258155, 0.248868, 0.249345, 0.251973, 0.245993, 0.25651, 0.255208, 0.252173, 0.253908, 0.2569, 0.250144, 0.257516, 0.25399, 0.243438, 0.251661, 0.245433, 0.254462, 0.251101], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		256
        Multiplications: 	72
        Divisions: 		0
        Logical: 		0
        Reads: 			573
        Writes: 		99
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest65.exe __orio_perftest65.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest65.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest65.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest65.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest65.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	76
        Max loop nest depth: 	6
        Additions: 		7213
        Multiplications: 	2046
        Divisions: 		0
        Logical: 		0
        Reads: 			11238
        Writes: 		1293
        Comparisons:		76
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest66.exe __orio_perftest66.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest66.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest66.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest66.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest66.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	45
        Max loop nest depth: 	5
        Additions: 		2235
        Multiplications: 	658
        Divisions: 		0
        Logical: 		0
        Reads: 			3841
        Writes: 		499
        Comparisons:		45
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest67.exe __orio_perftest67.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest67.exe  
Program Test Output: 
{'[6, 5, 2, 0, 5, 1, 0, 1, 29, 5, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.185709}
{'[6, 5, 2, 0, 5, 1, 0, 1, 29, 5, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.186829}
{'[6, 5, 2, 0, 5, 1, 0, 1, 29, 5, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.182547}
{'[6, 5, 2, 0, 5, 1, 0, 1, 29, 5, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.186859}
{'[6, 5, 2, 0, 5, 1, 0, 1, 29, 5, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.187354}
{'[6, 5, 2, 0, 5, 1, 0, 1, 29, 5, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.187728}
{'[6, 5, 2, 0, 5, 1, 0, 1, 29, 5, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.187598}
{'[6, 5, 2, 0, 5, 1, 0, 1, 29, 5, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.187502}
{'[6, 5, 2, 0, 5, 1, 0, 1, 29, 5, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.183396}
{'[6, 5, 2, 0, 5, 1, 0, 1, 29, 5, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.182565}
{'[6, 5, 2, 0, 5, 1, 0, 1, 29, 5, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.182667}
{'[6, 5, 2, 0, 5, 1, 0, 1, 29, 5, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.186323}
{'[6, 5, 2, 0, 5, 1, 0, 1, 29, 5, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.18746}
{'[6, 5, 2, 0, 5, 1, 0, 1, 29, 5, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.187409}
{'[6, 5, 2, 0, 5, 1, 0, 1, 29, 5, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.182828}
{'[6, 5, 2, 0, 5, 1, 0, 1, 29, 5, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.182585}
{'[6, 5, 2, 0, 5, 1, 0, 1, 29, 5, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.182635}
{'[6, 5, 2, 0, 5, 1, 0, 1, 29, 5, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.182383}
{'[6, 5, 2, 0, 5, 1, 0, 1, 29, 5, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.182509}
{'[6, 5, 2, 0, 5, 1, 0, 1, 29, 5, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.185594}
{'[6, 5, 2, 0, 5, 1, 0, 1, 29, 5, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.187543}
{'[6, 5, 2, 0, 5, 1, 0, 1, 29, 5, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.187425}
{'[6, 5, 2, 0, 5, 1, 0, 1, 29, 5, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.187593}
{'[6, 5, 2, 0, 5, 1, 0, 1, 29, 5, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.186548}
{'[6, 5, 2, 0, 5, 1, 0, 1, 29, 5, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.183719}
{'[6, 5, 2, 0, 5, 1, 0, 1, 29, 5, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.185909}
{'[6, 5, 2, 0, 5, 1, 0, 1, 29, 5, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.177247}
{'[6, 5, 2, 0, 5, 1, 0, 1, 29, 5, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.179918}
{'[6, 5, 2, 0, 5, 1, 0, 1, 29, 5, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.182409}
{'[6, 5, 2, 0, 5, 1, 0, 1, 29, 5, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.182884}

out:
 ["{'[6, 5, 2, 0, 5, 1, 0, 1, 29, 5, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.185709}", "{'[6, 5, 2, 0, 5, 1, 0, 1, 29, 5, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.186829}", "{'[6, 5, 2, 0, 5, 1, 0, 1, 29, 5, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.182547}", "{'[6, 5, 2, 0, 5, 1, 0, 1, 29, 5, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.186859}", "{'[6, 5, 2, 0, 5, 1, 0, 1, 29, 5, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.187354}", "{'[6, 5, 2, 0, 5, 1, 0, 1, 29, 5, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.187728}", "{'[6, 5, 2, 0, 5, 1, 0, 1, 29, 5, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.187598}", "{'[6, 5, 2, 0, 5, 1, 0, 1, 29, 5, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.187502}", "{'[6, 5, 2, 0, 5, 1, 0, 1, 29, 5, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.183396}", "{'[6, 5, 2, 0, 5, 1, 0, 1, 29, 5, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.182565}", "{'[6, 5, 2, 0, 5, 1, 0, 1, 29, 5, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.182667}", "{'[6, 5, 2, 0, 5, 1, 0, 1, 29, 5, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.186323}", "{'[6, 5, 2, 0, 5, 1, 0, 1, 29, 5, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.18746}", "{'[6, 5, 2, 0, 5, 1, 0, 1, 29, 5, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.187409}", "{'[6, 5, 2, 0, 5, 1, 0, 1, 29, 5, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.182828}", "{'[6, 5, 2, 0, 5, 1, 0, 1, 29, 5, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.182585}", "{'[6, 5, 2, 0, 5, 1, 0, 1, 29, 5, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.182635}", "{'[6, 5, 2, 0, 5, 1, 0, 1, 29, 5, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.182383}", "{'[6, 5, 2, 0, 5, 1, 0, 1, 29, 5, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.182509}", "{'[6, 5, 2, 0, 5, 1, 0, 1, 29, 5, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.185594}", "{'[6, 5, 2, 0, 5, 1, 0, 1, 29, 5, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.187543}", "{'[6, 5, 2, 0, 5, 1, 0, 1, 29, 5, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.187425}", "{'[6, 5, 2, 0, 5, 1, 0, 1, 29, 5, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.187593}", "{'[6, 5, 2, 0, 5, 1, 0, 1, 29, 5, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.186548}", "{'[6, 5, 2, 0, 5, 1, 0, 1, 29, 5, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.183719}", "{'[6, 5, 2, 0, 5, 1, 0, 1, 29, 5, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.185909}", "{'[6, 5, 2, 0, 5, 1, 0, 1, 29, 5, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.177247}", "{'[6, 5, 2, 0, 5, 1, 0, 1, 29, 5, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.179918}", "{'[6, 5, 2, 0, 5, 1, 0, 1, 29, 5, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.182409}", "{'[6, 5, 2, 0, 5, 1, 0, 1, 29, 5, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.182884}"]
returning from 'run': {'[6, 5, 2, 0, 5, 1, 0, 1, 29, 5, 12, 0, 0, 2, 0, 0, 1, 1]': ([0.185709, 0.186829, 0.182547, 0.186859, 0.187354, 0.187728, 0.187598, 0.187502, 0.183396, 0.182565, 0.182667, 0.186323, 0.18746, 0.187409, 0.182828, 0.182585, 0.182635, 0.182383, 0.182509, 0.185594, 0.187543, 0.187425, 0.187593, 0.186548, 0.183719, 0.185909, 0.177247, 0.179918, 0.182409, 0.182884], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 5, 2, 0, 5, 1, 0, 1, 29, 5, 12, 0, 0, 2, 0, 0, 1, 1]': ([0.185709, 0.186829, 0.182547, 0.186859, 0.187354, 0.187728, 0.187598, 0.187502, 0.183396, 0.182565, 0.182667, 0.186323, 0.18746, 0.187409, 0.182828, 0.182585, 0.182635, 0.182383, 0.182509, 0.185594, 0.187543, 0.187425, 0.187593, 0.186548, 0.183719, 0.185909, 0.177247, 0.179918, 0.182409, 0.182884], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	5
        Additions: 		254
        Multiplications: 	98
        Divisions: 		0
        Logical: 		0
        Reads: 			615
        Writes: 		97
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest68.exe __orio_perftest68.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest68.exe  
Program Test Output: 
{'[0, 3, 0, 6, 6, 0, 0, 1, 23, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.189614}
{'[0, 3, 0, 6, 6, 0, 0, 1, 23, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.189577}
{'[0, 3, 0, 6, 6, 0, 0, 1, 23, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.189804}
{'[0, 3, 0, 6, 6, 0, 0, 1, 23, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.167318}
{'[0, 3, 0, 6, 6, 0, 0, 1, 23, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.164046}
{'[0, 3, 0, 6, 6, 0, 0, 1, 23, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.164038}
{'[0, 3, 0, 6, 6, 0, 0, 1, 23, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.162211}
{'[0, 3, 0, 6, 6, 0, 0, 1, 23, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.158783}
{'[0, 3, 0, 6, 6, 0, 0, 1, 23, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.158877}
{'[0, 3, 0, 6, 6, 0, 0, 1, 23, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.160083}
{'[0, 3, 0, 6, 6, 0, 0, 1, 23, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.16416}
{'[0, 3, 0, 6, 6, 0, 0, 1, 23, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.164137}
{'[0, 3, 0, 6, 6, 0, 0, 1, 23, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.160044}
{'[0, 3, 0, 6, 6, 0, 0, 1, 23, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.161342}
{'[0, 3, 0, 6, 6, 0, 0, 1, 23, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.159065}
{'[0, 3, 0, 6, 6, 0, 0, 1, 23, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.159137}
{'[0, 3, 0, 6, 6, 0, 0, 1, 23, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.164104}
{'[0, 3, 0, 6, 6, 0, 0, 1, 23, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.164174}
{'[0, 3, 0, 6, 6, 0, 0, 1, 23, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.159739}
{'[0, 3, 0, 6, 6, 0, 0, 1, 23, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.164137}
{'[0, 3, 0, 6, 6, 0, 0, 1, 23, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.160598}
{'[0, 3, 0, 6, 6, 0, 0, 1, 23, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.158694}
{'[0, 3, 0, 6, 6, 0, 0, 1, 23, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.163707}
{'[0, 3, 0, 6, 6, 0, 0, 1, 23, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.164231}
{'[0, 3, 0, 6, 6, 0, 0, 1, 23, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.164053}
{'[0, 3, 0, 6, 6, 0, 0, 1, 23, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.164502}
{'[0, 3, 0, 6, 6, 0, 0, 1, 23, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.164129}
{'[0, 3, 0, 6, 6, 0, 0, 1, 23, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.159544}
{'[0, 3, 0, 6, 6, 0, 0, 1, 23, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.163259}
{'[0, 3, 0, 6, 6, 0, 0, 1, 23, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.164115}

out:
 ["{'[0, 3, 0, 6, 6, 0, 0, 1, 23, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.189614}", "{'[0, 3, 0, 6, 6, 0, 0, 1, 23, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.189577}", "{'[0, 3, 0, 6, 6, 0, 0, 1, 23, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.189804}", "{'[0, 3, 0, 6, 6, 0, 0, 1, 23, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.167318}", "{'[0, 3, 0, 6, 6, 0, 0, 1, 23, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.164046}", "{'[0, 3, 0, 6, 6, 0, 0, 1, 23, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.164038}", "{'[0, 3, 0, 6, 6, 0, 0, 1, 23, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.162211}", "{'[0, 3, 0, 6, 6, 0, 0, 1, 23, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.158783}", "{'[0, 3, 0, 6, 6, 0, 0, 1, 23, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.158877}", "{'[0, 3, 0, 6, 6, 0, 0, 1, 23, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.160083}", "{'[0, 3, 0, 6, 6, 0, 0, 1, 23, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.16416}", "{'[0, 3, 0, 6, 6, 0, 0, 1, 23, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.164137}", "{'[0, 3, 0, 6, 6, 0, 0, 1, 23, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.160044}", "{'[0, 3, 0, 6, 6, 0, 0, 1, 23, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.161342}", "{'[0, 3, 0, 6, 6, 0, 0, 1, 23, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.159065}", "{'[0, 3, 0, 6, 6, 0, 0, 1, 23, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.159137}", "{'[0, 3, 0, 6, 6, 0, 0, 1, 23, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.164104}", "{'[0, 3, 0, 6, 6, 0, 0, 1, 23, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.164174}", "{'[0, 3, 0, 6, 6, 0, 0, 1, 23, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.159739}", "{'[0, 3, 0, 6, 6, 0, 0, 1, 23, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.164137}", "{'[0, 3, 0, 6, 6, 0, 0, 1, 23, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.160598}", "{'[0, 3, 0, 6, 6, 0, 0, 1, 23, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.158694}", "{'[0, 3, 0, 6, 6, 0, 0, 1, 23, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.163707}", "{'[0, 3, 0, 6, 6, 0, 0, 1, 23, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.164231}", "{'[0, 3, 0, 6, 6, 0, 0, 1, 23, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.164053}", "{'[0, 3, 0, 6, 6, 0, 0, 1, 23, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.164502}", "{'[0, 3, 0, 6, 6, 0, 0, 1, 23, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.164129}", "{'[0, 3, 0, 6, 6, 0, 0, 1, 23, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.159544}", "{'[0, 3, 0, 6, 6, 0, 0, 1, 23, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.163259}", "{'[0, 3, 0, 6, 6, 0, 0, 1, 23, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.164115}"]
returning from 'run': {'[0, 3, 0, 6, 6, 0, 0, 1, 23, 0, 12, 1, 0, 2, 0, 0, 0, 0]': ([0.189614, 0.189577, 0.189804, 0.167318, 0.164046, 0.164038, 0.162211, 0.158783, 0.158877, 0.160083, 0.16416, 0.164137, 0.160044, 0.161342, 0.159065, 0.159137, 0.164104, 0.164174, 0.159739, 0.164137, 0.160598, 0.158694, 0.163707, 0.164231, 0.164053, 0.164502, 0.164129, 0.159544, 0.163259, 0.164115], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 3, 0, 6, 6, 0, 0, 1, 23, 0, 12, 1, 0, 2, 0, 0, 0, 0]': ([0.189614, 0.189577, 0.189804, 0.167318, 0.164046, 0.164038, 0.162211, 0.158783, 0.158877, 0.160083, 0.16416, 0.164137, 0.160044, 0.161342, 0.159065, 0.159137, 0.164104, 0.164174, 0.159739, 0.164137, 0.160598, 0.158694, 0.163707, 0.164231, 0.164053, 0.164502, 0.164129, 0.159544, 0.163259, 0.164115], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	69
        Max loop nest depth: 	4
        Additions: 		9551
        Multiplications: 	2726
        Divisions: 		0
        Logical: 		0
        Reads: 			14321
        Writes: 		1551
        Comparisons:		69
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest69.exe __orio_perftest69.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest69.exe  
Program Test Output: 
{'[6, 6, 0, 0, 0, 0, 0, 1, 19, 27, 12, 0, 0, 2, 0, 0, 0, 0]' : 0.1487}
{'[6, 6, 0, 0, 0, 0, 0, 1, 19, 27, 12, 0, 0, 2, 0, 0, 0, 0]' : 0.149235}
{'[6, 6, 0, 0, 0, 0, 0, 1, 19, 27, 12, 0, 0, 2, 0, 0, 0, 0]' : 0.156811}
{'[6, 6, 0, 0, 0, 0, 0, 1, 19, 27, 12, 0, 0, 2, 0, 0, 0, 0]' : 0.156479}
{'[6, 6, 0, 0, 0, 0, 0, 1, 19, 27, 12, 0, 0, 2, 0, 0, 0, 0]' : 0.156804}
{'[6, 6, 0, 0, 0, 0, 0, 1, 19, 27, 12, 0, 0, 2, 0, 0, 0, 0]' : 0.155659}
{'[6, 6, 0, 0, 0, 0, 0, 1, 19, 27, 12, 0, 0, 2, 0, 0, 0, 0]' : 0.152879}
{'[6, 6, 0, 0, 0, 0, 0, 1, 19, 27, 12, 0, 0, 2, 0, 0, 0, 0]' : 0.156758}
{'[6, 6, 0, 0, 0, 0, 0, 1, 19, 27, 12, 0, 0, 2, 0, 0, 0, 0]' : 0.154644}
{'[6, 6, 0, 0, 0, 0, 0, 1, 19, 27, 12, 0, 0, 2, 0, 0, 0, 0]' : 0.154891}
{'[6, 6, 0, 0, 0, 0, 0, 1, 19, 27, 12, 0, 0, 2, 0, 0, 0, 0]' : 0.154855}
{'[6, 6, 0, 0, 0, 0, 0, 1, 19, 27, 12, 0, 0, 2, 0, 0, 0, 0]' : 0.158858}
{'[6, 6, 0, 0, 0, 0, 0, 1, 19, 27, 12, 0, 0, 2, 0, 0, 0, 0]' : 0.159802}
{'[6, 6, 0, 0, 0, 0, 0, 1, 19, 27, 12, 0, 0, 2, 0, 0, 0, 0]' : 0.159222}
{'[6, 6, 0, 0, 0, 0, 0, 1, 19, 27, 12, 0, 0, 2, 0, 0, 0, 0]' : 0.159182}
{'[6, 6, 0, 0, 0, 0, 0, 1, 19, 27, 12, 0, 0, 2, 0, 0, 0, 0]' : 0.159295}
{'[6, 6, 0, 0, 0, 0, 0, 1, 19, 27, 12, 0, 0, 2, 0, 0, 0, 0]' : 0.159503}
{'[6, 6, 0, 0, 0, 0, 0, 1, 19, 27, 12, 0, 0, 2, 0, 0, 0, 0]' : 0.159454}
{'[6, 6, 0, 0, 0, 0, 0, 1, 19, 27, 12, 0, 0, 2, 0, 0, 0, 0]' : 0.16125}
{'[6, 6, 0, 0, 0, 0, 0, 1, 19, 27, 12, 0, 0, 2, 0, 0, 0, 0]' : 0.163432}
{'[6, 6, 0, 0, 0, 0, 0, 1, 19, 27, 12, 0, 0, 2, 0, 0, 0, 0]' : 0.163507}
{'[6, 6, 0, 0, 0, 0, 0, 1, 19, 27, 12, 0, 0, 2, 0, 0, 0, 0]' : 0.163604}
{'[6, 6, 0, 0, 0, 0, 0, 1, 19, 27, 12, 0, 0, 2, 0, 0, 0, 0]' : 0.163639}
{'[6, 6, 0, 0, 0, 0, 0, 1, 19, 27, 12, 0, 0, 2, 0, 0, 0, 0]' : 0.163465}
{'[6, 6, 0, 0, 0, 0, 0, 1, 19, 27, 12, 0, 0, 2, 0, 0, 0, 0]' : 0.163622}
{'[6, 6, 0, 0, 0, 0, 0, 1, 19, 27, 12, 0, 0, 2, 0, 0, 0, 0]' : 0.163495}
{'[6, 6, 0, 0, 0, 0, 0, 1, 19, 27, 12, 0, 0, 2, 0, 0, 0, 0]' : 0.163601}
{'[6, 6, 0, 0, 0, 0, 0, 1, 19, 27, 12, 0, 0, 2, 0, 0, 0, 0]' : 0.163584}
{'[6, 6, 0, 0, 0, 0, 0, 1, 19, 27, 12, 0, 0, 2, 0, 0, 0, 0]' : 0.16382}
{'[6, 6, 0, 0, 0, 0, 0, 1, 19, 27, 12, 0, 0, 2, 0, 0, 0, 0]' : 0.163431}

out:
 ["{'[6, 6, 0, 0, 0, 0, 0, 1, 19, 27, 12, 0, 0, 2, 0, 0, 0, 0]' : 0.1487}", "{'[6, 6, 0, 0, 0, 0, 0, 1, 19, 27, 12, 0, 0, 2, 0, 0, 0, 0]' : 0.149235}", "{'[6, 6, 0, 0, 0, 0, 0, 1, 19, 27, 12, 0, 0, 2, 0, 0, 0, 0]' : 0.156811}", "{'[6, 6, 0, 0, 0, 0, 0, 1, 19, 27, 12, 0, 0, 2, 0, 0, 0, 0]' : 0.156479}", "{'[6, 6, 0, 0, 0, 0, 0, 1, 19, 27, 12, 0, 0, 2, 0, 0, 0, 0]' : 0.156804}", "{'[6, 6, 0, 0, 0, 0, 0, 1, 19, 27, 12, 0, 0, 2, 0, 0, 0, 0]' : 0.155659}", "{'[6, 6, 0, 0, 0, 0, 0, 1, 19, 27, 12, 0, 0, 2, 0, 0, 0, 0]' : 0.152879}", "{'[6, 6, 0, 0, 0, 0, 0, 1, 19, 27, 12, 0, 0, 2, 0, 0, 0, 0]' : 0.156758}", "{'[6, 6, 0, 0, 0, 0, 0, 1, 19, 27, 12, 0, 0, 2, 0, 0, 0, 0]' : 0.154644}", "{'[6, 6, 0, 0, 0, 0, 0, 1, 19, 27, 12, 0, 0, 2, 0, 0, 0, 0]' : 0.154891}", "{'[6, 6, 0, 0, 0, 0, 0, 1, 19, 27, 12, 0, 0, 2, 0, 0, 0, 0]' : 0.154855}", "{'[6, 6, 0, 0, 0, 0, 0, 1, 19, 27, 12, 0, 0, 2, 0, 0, 0, 0]' : 0.158858}", "{'[6, 6, 0, 0, 0, 0, 0, 1, 19, 27, 12, 0, 0, 2, 0, 0, 0, 0]' : 0.159802}", "{'[6, 6, 0, 0, 0, 0, 0, 1, 19, 27, 12, 0, 0, 2, 0, 0, 0, 0]' : 0.159222}", "{'[6, 6, 0, 0, 0, 0, 0, 1, 19, 27, 12, 0, 0, 2, 0, 0, 0, 0]' : 0.159182}", "{'[6, 6, 0, 0, 0, 0, 0, 1, 19, 27, 12, 0, 0, 2, 0, 0, 0, 0]' : 0.159295}", "{'[6, 6, 0, 0, 0, 0, 0, 1, 19, 27, 12, 0, 0, 2, 0, 0, 0, 0]' : 0.159503}", "{'[6, 6, 0, 0, 0, 0, 0, 1, 19, 27, 12, 0, 0, 2, 0, 0, 0, 0]' : 0.159454}", "{'[6, 6, 0, 0, 0, 0, 0, 1, 19, 27, 12, 0, 0, 2, 0, 0, 0, 0]' : 0.16125}", "{'[6, 6, 0, 0, 0, 0, 0, 1, 19, 27, 12, 0, 0, 2, 0, 0, 0, 0]' : 0.163432}", "{'[6, 6, 0, 0, 0, 0, 0, 1, 19, 27, 12, 0, 0, 2, 0, 0, 0, 0]' : 0.163507}", "{'[6, 6, 0, 0, 0, 0, 0, 1, 19, 27, 12, 0, 0, 2, 0, 0, 0, 0]' : 0.163604}", "{'[6, 6, 0, 0, 0, 0, 0, 1, 19, 27, 12, 0, 0, 2, 0, 0, 0, 0]' : 0.163639}", "{'[6, 6, 0, 0, 0, 0, 0, 1, 19, 27, 12, 0, 0, 2, 0, 0, 0, 0]' : 0.163465}", "{'[6, 6, 0, 0, 0, 0, 0, 1, 19, 27, 12, 0, 0, 2, 0, 0, 0, 0]' : 0.163622}", "{'[6, 6, 0, 0, 0, 0, 0, 1, 19, 27, 12, 0, 0, 2, 0, 0, 0, 0]' : 0.163495}", "{'[6, 6, 0, 0, 0, 0, 0, 1, 19, 27, 12, 0, 0, 2, 0, 0, 0, 0]' : 0.163601}", "{'[6, 6, 0, 0, 0, 0, 0, 1, 19, 27, 12, 0, 0, 2, 0, 0, 0, 0]' : 0.163584}", "{'[6, 6, 0, 0, 0, 0, 0, 1, 19, 27, 12, 0, 0, 2, 0, 0, 0, 0]' : 0.16382}", "{'[6, 6, 0, 0, 0, 0, 0, 1, 19, 27, 12, 0, 0, 2, 0, 0, 0, 0]' : 0.163431}"]
returning from 'run': {'[6, 6, 0, 0, 0, 0, 0, 1, 19, 27, 12, 0, 0, 2, 0, 0, 0, 0]': ([0.1487, 0.149235, 0.156811, 0.156479, 0.156804, 0.155659, 0.152879, 0.156758, 0.154644, 0.154891, 0.154855, 0.158858, 0.159802, 0.159222, 0.159182, 0.159295, 0.159503, 0.159454, 0.16125, 0.163432, 0.163507, 0.163604, 0.163639, 0.163465, 0.163622, 0.163495, 0.163601, 0.163584, 0.16382, 0.163431], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 0, 0, 0, 0, 0, 1, 19, 27, 12, 0, 0, 2, 0, 0, 0, 0]': ([0.1487, 0.149235, 0.156811, 0.156479, 0.156804, 0.155659, 0.152879, 0.156758, 0.154644, 0.154891, 0.154855, 0.158858, 0.159802, 0.159222, 0.159182, 0.159295, 0.159503, 0.159454, 0.16125, 0.163432, 0.163507, 0.163604, 0.163639, 0.163465, 0.163622, 0.163495, 0.163601, 0.163584, 0.16382, 0.163431], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		281
        Multiplications: 	84
        Divisions: 		0
        Logical: 		0
        Reads: 			597
        Writes: 		81
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest70.exe __orio_perftest70.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest70.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest70.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest70.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest70.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		452
        Multiplications: 	152
        Divisions: 		0
        Logical: 		0
        Reads: 			948
        Writes: 		116
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest71.exe __orio_perftest71.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest71.exe  
Program Test Output: 
{'[2, 4, 1, 4, 0, 0, 0, 1, 7, 0, 12, 28, 0, 2, 0, 0, 0, 0]' : 0.341713}
{'[2, 4, 1, 4, 0, 0, 0, 1, 7, 0, 12, 28, 0, 2, 0, 0, 0, 0]' : 0.321163}
{'[2, 4, 1, 4, 0, 0, 0, 1, 7, 0, 12, 28, 0, 2, 0, 0, 0, 0]' : 0.334711}
{'[2, 4, 1, 4, 0, 0, 0, 1, 7, 0, 12, 28, 0, 2, 0, 0, 0, 0]' : 0.334715}
{'[2, 4, 1, 4, 0, 0, 0, 1, 7, 0, 12, 28, 0, 2, 0, 0, 0, 0]' : 0.334676}
{'[2, 4, 1, 4, 0, 0, 0, 1, 7, 0, 12, 28, 0, 2, 0, 0, 0, 0]' : 0.334889}
{'[2, 4, 1, 4, 0, 0, 0, 1, 7, 0, 12, 28, 0, 2, 0, 0, 0, 0]' : 0.334682}
{'[2, 4, 1, 4, 0, 0, 0, 1, 7, 0, 12, 28, 0, 2, 0, 0, 0, 0]' : 0.334988}
{'[2, 4, 1, 4, 0, 0, 0, 1, 7, 0, 12, 28, 0, 2, 0, 0, 0, 0]' : 0.334727}
{'[2, 4, 1, 4, 0, 0, 0, 1, 7, 0, 12, 28, 0, 2, 0, 0, 0, 0]' : 0.334681}
{'[2, 4, 1, 4, 0, 0, 0, 1, 7, 0, 12, 28, 0, 2, 0, 0, 0, 0]' : 0.334663}
{'[2, 4, 1, 4, 0, 0, 0, 1, 7, 0, 12, 28, 0, 2, 0, 0, 0, 0]' : 0.334734}
{'[2, 4, 1, 4, 0, 0, 0, 1, 7, 0, 12, 28, 0, 2, 0, 0, 0, 0]' : 0.335033}
{'[2, 4, 1, 4, 0, 0, 0, 1, 7, 0, 12, 28, 0, 2, 0, 0, 0, 0]' : 0.334693}
{'[2, 4, 1, 4, 0, 0, 0, 1, 7, 0, 12, 28, 0, 2, 0, 0, 0, 0]' : 0.332831}
{'[2, 4, 1, 4, 0, 0, 0, 1, 7, 0, 12, 28, 0, 2, 0, 0, 0, 0]' : 0.332298}
{'[2, 4, 1, 4, 0, 0, 0, 1, 7, 0, 12, 28, 0, 2, 0, 0, 0, 0]' : 0.334621}
{'[2, 4, 1, 4, 0, 0, 0, 1, 7, 0, 12, 28, 0, 2, 0, 0, 0, 0]' : 0.334728}
{'[2, 4, 1, 4, 0, 0, 0, 1, 7, 0, 12, 28, 0, 2, 0, 0, 0, 0]' : 0.334927}
{'[2, 4, 1, 4, 0, 0, 0, 1, 7, 0, 12, 28, 0, 2, 0, 0, 0, 0]' : 0.334692}
{'[2, 4, 1, 4, 0, 0, 0, 1, 7, 0, 12, 28, 0, 2, 0, 0, 0, 0]' : 0.3348}
{'[2, 4, 1, 4, 0, 0, 0, 1, 7, 0, 12, 28, 0, 2, 0, 0, 0, 0]' : 0.333459}
{'[2, 4, 1, 4, 0, 0, 0, 1, 7, 0, 12, 28, 0, 2, 0, 0, 0, 0]' : 0.328784}
{'[2, 4, 1, 4, 0, 0, 0, 1, 7, 0, 12, 28, 0, 2, 0, 0, 0, 0]' : 0.33461}
{'[2, 4, 1, 4, 0, 0, 0, 1, 7, 0, 12, 28, 0, 2, 0, 0, 0, 0]' : 0.334905}
{'[2, 4, 1, 4, 0, 0, 0, 1, 7, 0, 12, 28, 0, 2, 0, 0, 0, 0]' : 0.334749}
{'[2, 4, 1, 4, 0, 0, 0, 1, 7, 0, 12, 28, 0, 2, 0, 0, 0, 0]' : 0.333358}
{'[2, 4, 1, 4, 0, 0, 0, 1, 7, 0, 12, 28, 0, 2, 0, 0, 0, 0]' : 0.33369}
{'[2, 4, 1, 4, 0, 0, 0, 1, 7, 0, 12, 28, 0, 2, 0, 0, 0, 0]' : 0.334653}
{'[2, 4, 1, 4, 0, 0, 0, 1, 7, 0, 12, 28, 0, 2, 0, 0, 0, 0]' : 0.334657}

out:
 ["{'[2, 4, 1, 4, 0, 0, 0, 1, 7, 0, 12, 28, 0, 2, 0, 0, 0, 0]' : 0.341713}", "{'[2, 4, 1, 4, 0, 0, 0, 1, 7, 0, 12, 28, 0, 2, 0, 0, 0, 0]' : 0.321163}", "{'[2, 4, 1, 4, 0, 0, 0, 1, 7, 0, 12, 28, 0, 2, 0, 0, 0, 0]' : 0.334711}", "{'[2, 4, 1, 4, 0, 0, 0, 1, 7, 0, 12, 28, 0, 2, 0, 0, 0, 0]' : 0.334715}", "{'[2, 4, 1, 4, 0, 0, 0, 1, 7, 0, 12, 28, 0, 2, 0, 0, 0, 0]' : 0.334676}", "{'[2, 4, 1, 4, 0, 0, 0, 1, 7, 0, 12, 28, 0, 2, 0, 0, 0, 0]' : 0.334889}", "{'[2, 4, 1, 4, 0, 0, 0, 1, 7, 0, 12, 28, 0, 2, 0, 0, 0, 0]' : 0.334682}", "{'[2, 4, 1, 4, 0, 0, 0, 1, 7, 0, 12, 28, 0, 2, 0, 0, 0, 0]' : 0.334988}", "{'[2, 4, 1, 4, 0, 0, 0, 1, 7, 0, 12, 28, 0, 2, 0, 0, 0, 0]' : 0.334727}", "{'[2, 4, 1, 4, 0, 0, 0, 1, 7, 0, 12, 28, 0, 2, 0, 0, 0, 0]' : 0.334681}", "{'[2, 4, 1, 4, 0, 0, 0, 1, 7, 0, 12, 28, 0, 2, 0, 0, 0, 0]' : 0.334663}", "{'[2, 4, 1, 4, 0, 0, 0, 1, 7, 0, 12, 28, 0, 2, 0, 0, 0, 0]' : 0.334734}", "{'[2, 4, 1, 4, 0, 0, 0, 1, 7, 0, 12, 28, 0, 2, 0, 0, 0, 0]' : 0.335033}", "{'[2, 4, 1, 4, 0, 0, 0, 1, 7, 0, 12, 28, 0, 2, 0, 0, 0, 0]' : 0.334693}", "{'[2, 4, 1, 4, 0, 0, 0, 1, 7, 0, 12, 28, 0, 2, 0, 0, 0, 0]' : 0.332831}", "{'[2, 4, 1, 4, 0, 0, 0, 1, 7, 0, 12, 28, 0, 2, 0, 0, 0, 0]' : 0.332298}", "{'[2, 4, 1, 4, 0, 0, 0, 1, 7, 0, 12, 28, 0, 2, 0, 0, 0, 0]' : 0.334621}", "{'[2, 4, 1, 4, 0, 0, 0, 1, 7, 0, 12, 28, 0, 2, 0, 0, 0, 0]' : 0.334728}", "{'[2, 4, 1, 4, 0, 0, 0, 1, 7, 0, 12, 28, 0, 2, 0, 0, 0, 0]' : 0.334927}", "{'[2, 4, 1, 4, 0, 0, 0, 1, 7, 0, 12, 28, 0, 2, 0, 0, 0, 0]' : 0.334692}", "{'[2, 4, 1, 4, 0, 0, 0, 1, 7, 0, 12, 28, 0, 2, 0, 0, 0, 0]' : 0.3348}", "{'[2, 4, 1, 4, 0, 0, 0, 1, 7, 0, 12, 28, 0, 2, 0, 0, 0, 0]' : 0.333459}", "{'[2, 4, 1, 4, 0, 0, 0, 1, 7, 0, 12, 28, 0, 2, 0, 0, 0, 0]' : 0.328784}", "{'[2, 4, 1, 4, 0, 0, 0, 1, 7, 0, 12, 28, 0, 2, 0, 0, 0, 0]' : 0.33461}", "{'[2, 4, 1, 4, 0, 0, 0, 1, 7, 0, 12, 28, 0, 2, 0, 0, 0, 0]' : 0.334905}", "{'[2, 4, 1, 4, 0, 0, 0, 1, 7, 0, 12, 28, 0, 2, 0, 0, 0, 0]' : 0.334749}", "{'[2, 4, 1, 4, 0, 0, 0, 1, 7, 0, 12, 28, 0, 2, 0, 0, 0, 0]' : 0.333358}", "{'[2, 4, 1, 4, 0, 0, 0, 1, 7, 0, 12, 28, 0, 2, 0, 0, 0, 0]' : 0.33369}", "{'[2, 4, 1, 4, 0, 0, 0, 1, 7, 0, 12, 28, 0, 2, 0, 0, 0, 0]' : 0.334653}", "{'[2, 4, 1, 4, 0, 0, 0, 1, 7, 0, 12, 28, 0, 2, 0, 0, 0, 0]' : 0.334657}"]
returning from 'run': {'[2, 4, 1, 4, 0, 0, 0, 1, 7, 0, 12, 28, 0, 2, 0, 0, 0, 0]': ([0.341713, 0.321163, 0.334711, 0.334715, 0.334676, 0.334889, 0.334682, 0.334988, 0.334727, 0.334681, 0.334663, 0.334734, 0.335033, 0.334693, 0.332831, 0.332298, 0.334621, 0.334728, 0.334927, 0.334692, 0.3348, 0.333459, 0.328784, 0.33461, 0.334905, 0.334749, 0.333358, 0.33369, 0.334653, 0.334657], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 4, 1, 4, 0, 0, 0, 1, 7, 0, 12, 28, 0, 2, 0, 0, 0, 0]': ([0.341713, 0.321163, 0.334711, 0.334715, 0.334676, 0.334889, 0.334682, 0.334988, 0.334727, 0.334681, 0.334663, 0.334734, 0.335033, 0.334693, 0.332831, 0.332298, 0.334621, 0.334728, 0.334927, 0.334692, 0.3348, 0.333459, 0.328784, 0.33461, 0.334905, 0.334749, 0.333358, 0.33369, 0.334653, 0.334657], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = iii
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	5
        Additions: 		288
        Multiplications: 	98
        Divisions: 		0
        Logical: 		0
        Reads: 			675
        Writes: 		113
        Comparisons:		15
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest72.exe __orio_perftest72.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest72.exe  
Program Test Output: 
{'[6, 1, 5, 4, 5, 6, 0, 1, 29, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.290735}
{'[6, 1, 5, 4, 5, 6, 0, 1, 29, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.269881}
{'[6, 1, 5, 4, 5, 6, 0, 1, 29, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.250994}
{'[6, 1, 5, 4, 5, 6, 0, 1, 29, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.253779}
{'[6, 1, 5, 4, 5, 6, 0, 1, 29, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.251643}
{'[6, 1, 5, 4, 5, 6, 0, 1, 29, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.248894}
{'[6, 1, 5, 4, 5, 6, 0, 1, 29, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.251271}
{'[6, 1, 5, 4, 5, 6, 0, 1, 29, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.251332}
{'[6, 1, 5, 4, 5, 6, 0, 1, 29, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.251201}
{'[6, 1, 5, 4, 5, 6, 0, 1, 29, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.251188}
{'[6, 1, 5, 4, 5, 6, 0, 1, 29, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.251223}
{'[6, 1, 5, 4, 5, 6, 0, 1, 29, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.251044}
{'[6, 1, 5, 4, 5, 6, 0, 1, 29, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.251229}
{'[6, 1, 5, 4, 5, 6, 0, 1, 29, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.251164}
{'[6, 1, 5, 4, 5, 6, 0, 1, 29, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.250965}
{'[6, 1, 5, 4, 5, 6, 0, 1, 29, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.25147}
{'[6, 1, 5, 4, 5, 6, 0, 1, 29, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.248708}
{'[6, 1, 5, 4, 5, 6, 0, 1, 29, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.247027}
{'[6, 1, 5, 4, 5, 6, 0, 1, 29, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.251538}
{'[6, 1, 5, 4, 5, 6, 0, 1, 29, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.251203}
{'[6, 1, 5, 4, 5, 6, 0, 1, 29, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.257242}
{'[6, 1, 5, 4, 5, 6, 0, 1, 29, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.251237}
{'[6, 1, 5, 4, 5, 6, 0, 1, 29, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.251018}
{'[6, 1, 5, 4, 5, 6, 0, 1, 29, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.25129}
{'[6, 1, 5, 4, 5, 6, 0, 1, 29, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.251015}
{'[6, 1, 5, 4, 5, 6, 0, 1, 29, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.251094}
{'[6, 1, 5, 4, 5, 6, 0, 1, 29, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.251139}
{'[6, 1, 5, 4, 5, 6, 0, 1, 29, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.251076}
{'[6, 1, 5, 4, 5, 6, 0, 1, 29, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.252717}
{'[6, 1, 5, 4, 5, 6, 0, 1, 29, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.258543}

out:
 ["{'[6, 1, 5, 4, 5, 6, 0, 1, 29, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.290735}", "{'[6, 1, 5, 4, 5, 6, 0, 1, 29, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.269881}", "{'[6, 1, 5, 4, 5, 6, 0, 1, 29, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.250994}", "{'[6, 1, 5, 4, 5, 6, 0, 1, 29, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.253779}", "{'[6, 1, 5, 4, 5, 6, 0, 1, 29, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.251643}", "{'[6, 1, 5, 4, 5, 6, 0, 1, 29, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.248894}", "{'[6, 1, 5, 4, 5, 6, 0, 1, 29, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.251271}", "{'[6, 1, 5, 4, 5, 6, 0, 1, 29, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.251332}", "{'[6, 1, 5, 4, 5, 6, 0, 1, 29, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.251201}", "{'[6, 1, 5, 4, 5, 6, 0, 1, 29, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.251188}", "{'[6, 1, 5, 4, 5, 6, 0, 1, 29, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.251223}", "{'[6, 1, 5, 4, 5, 6, 0, 1, 29, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.251044}", "{'[6, 1, 5, 4, 5, 6, 0, 1, 29, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.251229}", "{'[6, 1, 5, 4, 5, 6, 0, 1, 29, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.251164}", "{'[6, 1, 5, 4, 5, 6, 0, 1, 29, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.250965}", "{'[6, 1, 5, 4, 5, 6, 0, 1, 29, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.25147}", "{'[6, 1, 5, 4, 5, 6, 0, 1, 29, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.248708}", "{'[6, 1, 5, 4, 5, 6, 0, 1, 29, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.247027}", "{'[6, 1, 5, 4, 5, 6, 0, 1, 29, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.251538}", "{'[6, 1, 5, 4, 5, 6, 0, 1, 29, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.251203}", "{'[6, 1, 5, 4, 5, 6, 0, 1, 29, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.257242}", "{'[6, 1, 5, 4, 5, 6, 0, 1, 29, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.251237}", "{'[6, 1, 5, 4, 5, 6, 0, 1, 29, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.251018}", "{'[6, 1, 5, 4, 5, 6, 0, 1, 29, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.25129}", "{'[6, 1, 5, 4, 5, 6, 0, 1, 29, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.251015}", "{'[6, 1, 5, 4, 5, 6, 0, 1, 29, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.251094}", "{'[6, 1, 5, 4, 5, 6, 0, 1, 29, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.251139}", "{'[6, 1, 5, 4, 5, 6, 0, 1, 29, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.251076}", "{'[6, 1, 5, 4, 5, 6, 0, 1, 29, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.252717}", "{'[6, 1, 5, 4, 5, 6, 0, 1, 29, 0, 12, 1, 0, 2, 0, 0, 0, 0]' : 0.258543}"]
returning from 'run': {'[6, 1, 5, 4, 5, 6, 0, 1, 29, 0, 12, 1, 0, 2, 0, 0, 0, 0]': ([0.290735, 0.269881, 0.250994, 0.253779, 0.251643, 0.248894, 0.251271, 0.251332, 0.251201, 0.251188, 0.251223, 0.251044, 0.251229, 0.251164, 0.250965, 0.25147, 0.248708, 0.247027, 0.251538, 0.251203, 0.257242, 0.251237, 0.251018, 0.25129, 0.251015, 0.251094, 0.251139, 0.251076, 0.252717, 0.258543], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 1, 5, 4, 5, 6, 0, 1, 29, 0, 12, 1, 0, 2, 0, 0, 0, 0]': ([0.290735, 0.269881, 0.250994, 0.253779, 0.251643, 0.248894, 0.251271, 0.251332, 0.251201, 0.251188, 0.251223, 0.251044, 0.251229, 0.251164, 0.250965, 0.25147, 0.248708, 0.247027, 0.251538, 0.251203, 0.257242, 0.251237, 0.251018, 0.25129, 0.251015, 0.251094, 0.251139, 0.251076, 0.252717, 0.258543], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	51
        Max loop nest depth: 	3
        Additions: 		3393
        Multiplications: 	858
        Divisions: 		0
        Logical: 		0
        Reads: 			5322
        Writes: 		595
        Comparisons:		51
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest73.exe __orio_perftest73.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest73.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest73.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest73.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest73.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		321
        Multiplications: 	118
        Divisions: 		0
        Logical: 		0
        Reads: 			737
        Writes: 		97
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest74.exe __orio_perftest74.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest74.exe  
Program Test Output: 
{'[1, 0, 3, 6, 1, 0, 0, 1, 0, 0, 12, 11, 0, 2, 0, 0, 1, 1]' : 0.239491}
{'[1, 0, 3, 6, 1, 0, 0, 1, 0, 0, 12, 11, 0, 2, 0, 0, 1, 1]' : 0.239235}
{'[1, 0, 3, 6, 1, 0, 0, 1, 0, 0, 12, 11, 0, 2, 0, 0, 1, 1]' : 0.217696}
{'[1, 0, 3, 6, 1, 0, 0, 1, 0, 0, 12, 11, 0, 2, 0, 0, 1, 1]' : 0.206576}
{'[1, 0, 3, 6, 1, 0, 0, 1, 0, 0, 12, 11, 0, 2, 0, 0, 1, 1]' : 0.206615}
{'[1, 0, 3, 6, 1, 0, 0, 1, 0, 0, 12, 11, 0, 2, 0, 0, 1, 1]' : 0.206387}
{'[1, 0, 3, 6, 1, 0, 0, 1, 0, 0, 12, 11, 0, 2, 0, 0, 1, 1]' : 0.207641}
{'[1, 0, 3, 6, 1, 0, 0, 1, 0, 0, 12, 11, 0, 2, 0, 0, 1, 1]' : 0.212233}
{'[1, 0, 3, 6, 1, 0, 0, 1, 0, 0, 12, 11, 0, 2, 0, 0, 1, 1]' : 0.210188}
{'[1, 0, 3, 6, 1, 0, 0, 1, 0, 0, 12, 11, 0, 2, 0, 0, 1, 1]' : 0.206479}
{'[1, 0, 3, 6, 1, 0, 0, 1, 0, 0, 12, 11, 0, 2, 0, 0, 1, 1]' : 0.206438}
{'[1, 0, 3, 6, 1, 0, 0, 1, 0, 0, 12, 11, 0, 2, 0, 0, 1, 1]' : 0.206348}
{'[1, 0, 3, 6, 1, 0, 0, 1, 0, 0, 12, 11, 0, 2, 0, 0, 1, 1]' : 0.206404}
{'[1, 0, 3, 6, 1, 0, 0, 1, 0, 0, 12, 11, 0, 2, 0, 0, 1, 1]' : 0.20661}
{'[1, 0, 3, 6, 1, 0, 0, 1, 0, 0, 12, 11, 0, 2, 0, 0, 1, 1]' : 0.206686}
{'[1, 0, 3, 6, 1, 0, 0, 1, 0, 0, 12, 11, 0, 2, 0, 0, 1, 1]' : 0.206454}
{'[1, 0, 3, 6, 1, 0, 0, 1, 0, 0, 12, 11, 0, 2, 0, 0, 1, 1]' : 0.206594}
{'[1, 0, 3, 6, 1, 0, 0, 1, 0, 0, 12, 11, 0, 2, 0, 0, 1, 1]' : 0.206587}
{'[1, 0, 3, 6, 1, 0, 0, 1, 0, 0, 12, 11, 0, 2, 0, 0, 1, 1]' : 0.20655}
{'[1, 0, 3, 6, 1, 0, 0, 1, 0, 0, 12, 11, 0, 2, 0, 0, 1, 1]' : 0.203087}
{'[1, 0, 3, 6, 1, 0, 0, 1, 0, 0, 12, 11, 0, 2, 0, 0, 1, 1]' : 0.200165}
{'[1, 0, 3, 6, 1, 0, 0, 1, 0, 0, 12, 11, 0, 2, 0, 0, 1, 1]' : 0.204719}
{'[1, 0, 3, 6, 1, 0, 0, 1, 0, 0, 12, 11, 0, 2, 0, 0, 1, 1]' : 0.206435}
{'[1, 0, 3, 6, 1, 0, 0, 1, 0, 0, 12, 11, 0, 2, 0, 0, 1, 1]' : 0.204535}
{'[1, 0, 3, 6, 1, 0, 0, 1, 0, 0, 12, 11, 0, 2, 0, 0, 1, 1]' : 0.206704}
{'[1, 0, 3, 6, 1, 0, 0, 1, 0, 0, 12, 11, 0, 2, 0, 0, 1, 1]' : 0.206621}
{'[1, 0, 3, 6, 1, 0, 0, 1, 0, 0, 12, 11, 0, 2, 0, 0, 1, 1]' : 0.206483}
{'[1, 0, 3, 6, 1, 0, 0, 1, 0, 0, 12, 11, 0, 2, 0, 0, 1, 1]' : 0.206492}
{'[1, 0, 3, 6, 1, 0, 0, 1, 0, 0, 12, 11, 0, 2, 0, 0, 1, 1]' : 0.207539}
{'[1, 0, 3, 6, 1, 0, 0, 1, 0, 0, 12, 11, 0, 2, 0, 0, 1, 1]' : 0.206721}

out:
 ["{'[1, 0, 3, 6, 1, 0, 0, 1, 0, 0, 12, 11, 0, 2, 0, 0, 1, 1]' : 0.239491}", "{'[1, 0, 3, 6, 1, 0, 0, 1, 0, 0, 12, 11, 0, 2, 0, 0, 1, 1]' : 0.239235}", "{'[1, 0, 3, 6, 1, 0, 0, 1, 0, 0, 12, 11, 0, 2, 0, 0, 1, 1]' : 0.217696}", "{'[1, 0, 3, 6, 1, 0, 0, 1, 0, 0, 12, 11, 0, 2, 0, 0, 1, 1]' : 0.206576}", "{'[1, 0, 3, 6, 1, 0, 0, 1, 0, 0, 12, 11, 0, 2, 0, 0, 1, 1]' : 0.206615}", "{'[1, 0, 3, 6, 1, 0, 0, 1, 0, 0, 12, 11, 0, 2, 0, 0, 1, 1]' : 0.206387}", "{'[1, 0, 3, 6, 1, 0, 0, 1, 0, 0, 12, 11, 0, 2, 0, 0, 1, 1]' : 0.207641}", "{'[1, 0, 3, 6, 1, 0, 0, 1, 0, 0, 12, 11, 0, 2, 0, 0, 1, 1]' : 0.212233}", "{'[1, 0, 3, 6, 1, 0, 0, 1, 0, 0, 12, 11, 0, 2, 0, 0, 1, 1]' : 0.210188}", "{'[1, 0, 3, 6, 1, 0, 0, 1, 0, 0, 12, 11, 0, 2, 0, 0, 1, 1]' : 0.206479}", "{'[1, 0, 3, 6, 1, 0, 0, 1, 0, 0, 12, 11, 0, 2, 0, 0, 1, 1]' : 0.206438}", "{'[1, 0, 3, 6, 1, 0, 0, 1, 0, 0, 12, 11, 0, 2, 0, 0, 1, 1]' : 0.206348}", "{'[1, 0, 3, 6, 1, 0, 0, 1, 0, 0, 12, 11, 0, 2, 0, 0, 1, 1]' : 0.206404}", "{'[1, 0, 3, 6, 1, 0, 0, 1, 0, 0, 12, 11, 0, 2, 0, 0, 1, 1]' : 0.20661}", "{'[1, 0, 3, 6, 1, 0, 0, 1, 0, 0, 12, 11, 0, 2, 0, 0, 1, 1]' : 0.206686}", "{'[1, 0, 3, 6, 1, 0, 0, 1, 0, 0, 12, 11, 0, 2, 0, 0, 1, 1]' : 0.206454}", "{'[1, 0, 3, 6, 1, 0, 0, 1, 0, 0, 12, 11, 0, 2, 0, 0, 1, 1]' : 0.206594}", "{'[1, 0, 3, 6, 1, 0, 0, 1, 0, 0, 12, 11, 0, 2, 0, 0, 1, 1]' : 0.206587}", "{'[1, 0, 3, 6, 1, 0, 0, 1, 0, 0, 12, 11, 0, 2, 0, 0, 1, 1]' : 0.20655}", "{'[1, 0, 3, 6, 1, 0, 0, 1, 0, 0, 12, 11, 0, 2, 0, 0, 1, 1]' : 0.203087}", "{'[1, 0, 3, 6, 1, 0, 0, 1, 0, 0, 12, 11, 0, 2, 0, 0, 1, 1]' : 0.200165}", "{'[1, 0, 3, 6, 1, 0, 0, 1, 0, 0, 12, 11, 0, 2, 0, 0, 1, 1]' : 0.204719}", "{'[1, 0, 3, 6, 1, 0, 0, 1, 0, 0, 12, 11, 0, 2, 0, 0, 1, 1]' : 0.206435}", "{'[1, 0, 3, 6, 1, 0, 0, 1, 0, 0, 12, 11, 0, 2, 0, 0, 1, 1]' : 0.204535}", "{'[1, 0, 3, 6, 1, 0, 0, 1, 0, 0, 12, 11, 0, 2, 0, 0, 1, 1]' : 0.206704}", "{'[1, 0, 3, 6, 1, 0, 0, 1, 0, 0, 12, 11, 0, 2, 0, 0, 1, 1]' : 0.206621}", "{'[1, 0, 3, 6, 1, 0, 0, 1, 0, 0, 12, 11, 0, 2, 0, 0, 1, 1]' : 0.206483}", "{'[1, 0, 3, 6, 1, 0, 0, 1, 0, 0, 12, 11, 0, 2, 0, 0, 1, 1]' : 0.206492}", "{'[1, 0, 3, 6, 1, 0, 0, 1, 0, 0, 12, 11, 0, 2, 0, 0, 1, 1]' : 0.207539}", "{'[1, 0, 3, 6, 1, 0, 0, 1, 0, 0, 12, 11, 0, 2, 0, 0, 1, 1]' : 0.206721}"]
returning from 'run': {'[1, 0, 3, 6, 1, 0, 0, 1, 0, 0, 12, 11, 0, 2, 0, 0, 1, 1]': ([0.239491, 0.239235, 0.217696, 0.206576, 0.206615, 0.206387, 0.207641, 0.212233, 0.210188, 0.206479, 0.206438, 0.206348, 0.206404, 0.20661, 0.206686, 0.206454, 0.206594, 0.206587, 0.20655, 0.203087, 0.200165, 0.204719, 0.206435, 0.204535, 0.206704, 0.206621, 0.206483, 0.206492, 0.207539, 0.206721], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 3, 6, 1, 0, 0, 1, 0, 0, 12, 11, 0, 2, 0, 0, 1, 1]': ([0.239491, 0.239235, 0.217696, 0.206576, 0.206615, 0.206387, 0.207641, 0.212233, 0.210188, 0.206479, 0.206438, 0.206348, 0.206404, 0.20661, 0.206686, 0.206454, 0.206594, 0.206587, 0.20655, 0.203087, 0.200165, 0.204719, 0.206435, 0.204535, 0.206704, 0.206621, 0.206483, 0.206492, 0.207539, 0.206721], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	6
        Additions: 		219
        Multiplications: 	66
        Divisions: 		0
        Logical: 		0
        Reads: 			504
        Writes: 		83
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest75.exe __orio_perftest75.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest75.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest75.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest75.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest75.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = iii
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		275
        Multiplications: 	80
        Divisions: 		0
        Logical: 		0
        Reads: 			597
        Writes: 		91
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest76.exe __orio_perftest76.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest76.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest76.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest76.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest76.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	6
        Additions: 		1117
        Multiplications: 	376
        Divisions: 		0
        Logical: 		0
        Reads: 			2094
        Writes: 		258
        Comparisons:		22
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest77.exe __orio_perftest77.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest77.exe  
Program Test Output: 
{'[1, 2, 0, 2, 1, 0, 0, 1, 1, 2, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.111155}
{'[1, 2, 0, 2, 1, 0, 0, 1, 1, 2, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.111218}
{'[1, 2, 0, 2, 1, 0, 0, 1, 1, 2, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.111205}
{'[1, 2, 0, 2, 1, 0, 0, 1, 1, 2, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.111731}
{'[1, 2, 0, 2, 1, 0, 0, 1, 1, 2, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.114473}
{'[1, 2, 0, 2, 1, 0, 0, 1, 1, 2, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.114548}
{'[1, 2, 0, 2, 1, 0, 0, 1, 1, 2, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.114484}
{'[1, 2, 0, 2, 1, 0, 0, 1, 1, 2, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.114694}
{'[1, 2, 0, 2, 1, 0, 0, 1, 1, 2, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.11726}
{'[1, 2, 0, 2, 1, 0, 0, 1, 1, 2, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.117745}
{'[1, 2, 0, 2, 1, 0, 0, 1, 1, 2, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.117689}
{'[1, 2, 0, 2, 1, 0, 0, 1, 1, 2, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.117683}
{'[1, 2, 0, 2, 1, 0, 0, 1, 1, 2, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.117777}
{'[1, 2, 0, 2, 1, 0, 0, 1, 1, 2, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.117795}
{'[1, 2, 0, 2, 1, 0, 0, 1, 1, 2, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.117737}
{'[1, 2, 0, 2, 1, 0, 0, 1, 1, 2, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.117849}
{'[1, 2, 0, 2, 1, 0, 0, 1, 1, 2, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.11649}
{'[1, 2, 0, 2, 1, 0, 0, 1, 1, 2, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.113799}
{'[1, 2, 0, 2, 1, 0, 0, 1, 1, 2, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.11626}
{'[1, 2, 0, 2, 1, 0, 0, 1, 1, 2, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.112894}
{'[1, 2, 0, 2, 1, 0, 0, 1, 1, 2, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.109813}
{'[1, 2, 0, 2, 1, 0, 0, 1, 1, 2, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.11252}
{'[1, 2, 0, 2, 1, 0, 0, 1, 1, 2, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.112817}
{'[1, 2, 0, 2, 1, 0, 0, 1, 1, 2, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.112782}
{'[1, 2, 0, 2, 1, 0, 0, 1, 1, 2, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.112796}
{'[1, 2, 0, 2, 1, 0, 0, 1, 1, 2, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.112967}
{'[1, 2, 0, 2, 1, 0, 0, 1, 1, 2, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.113099}
{'[1, 2, 0, 2, 1, 0, 0, 1, 1, 2, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.112955}
{'[1, 2, 0, 2, 1, 0, 0, 1, 1, 2, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.112828}
{'[1, 2, 0, 2, 1, 0, 0, 1, 1, 2, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.112826}

out:
 ["{'[1, 2, 0, 2, 1, 0, 0, 1, 1, 2, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.111155}", "{'[1, 2, 0, 2, 1, 0, 0, 1, 1, 2, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.111218}", "{'[1, 2, 0, 2, 1, 0, 0, 1, 1, 2, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.111205}", "{'[1, 2, 0, 2, 1, 0, 0, 1, 1, 2, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.111731}", "{'[1, 2, 0, 2, 1, 0, 0, 1, 1, 2, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.114473}", "{'[1, 2, 0, 2, 1, 0, 0, 1, 1, 2, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.114548}", "{'[1, 2, 0, 2, 1, 0, 0, 1, 1, 2, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.114484}", "{'[1, 2, 0, 2, 1, 0, 0, 1, 1, 2, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.114694}", "{'[1, 2, 0, 2, 1, 0, 0, 1, 1, 2, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.11726}", "{'[1, 2, 0, 2, 1, 0, 0, 1, 1, 2, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.117745}", "{'[1, 2, 0, 2, 1, 0, 0, 1, 1, 2, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.117689}", "{'[1, 2, 0, 2, 1, 0, 0, 1, 1, 2, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.117683}", "{'[1, 2, 0, 2, 1, 0, 0, 1, 1, 2, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.117777}", "{'[1, 2, 0, 2, 1, 0, 0, 1, 1, 2, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.117795}", "{'[1, 2, 0, 2, 1, 0, 0, 1, 1, 2, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.117737}", "{'[1, 2, 0, 2, 1, 0, 0, 1, 1, 2, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.117849}", "{'[1, 2, 0, 2, 1, 0, 0, 1, 1, 2, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.11649}", "{'[1, 2, 0, 2, 1, 0, 0, 1, 1, 2, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.113799}", "{'[1, 2, 0, 2, 1, 0, 0, 1, 1, 2, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.11626}", "{'[1, 2, 0, 2, 1, 0, 0, 1, 1, 2, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.112894}", "{'[1, 2, 0, 2, 1, 0, 0, 1, 1, 2, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.109813}", "{'[1, 2, 0, 2, 1, 0, 0, 1, 1, 2, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.11252}", "{'[1, 2, 0, 2, 1, 0, 0, 1, 1, 2, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.112817}", "{'[1, 2, 0, 2, 1, 0, 0, 1, 1, 2, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.112782}", "{'[1, 2, 0, 2, 1, 0, 0, 1, 1, 2, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.112796}", "{'[1, 2, 0, 2, 1, 0, 0, 1, 1, 2, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.112967}", "{'[1, 2, 0, 2, 1, 0, 0, 1, 1, 2, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.113099}", "{'[1, 2, 0, 2, 1, 0, 0, 1, 1, 2, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.112955}", "{'[1, 2, 0, 2, 1, 0, 0, 1, 1, 2, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.112828}", "{'[1, 2, 0, 2, 1, 0, 0, 1, 1, 2, 12, 0, 0, 2, 0, 0, 1, 1]' : 0.112826}"]
returning from 'run': {'[1, 2, 0, 2, 1, 0, 0, 1, 1, 2, 12, 0, 0, 2, 0, 0, 1, 1]': ([0.111155, 0.111218, 0.111205, 0.111731, 0.114473, 0.114548, 0.114484, 0.114694, 0.11726, 0.117745, 0.117689, 0.117683, 0.117777, 0.117795, 0.117737, 0.117849, 0.11649, 0.113799, 0.11626, 0.112894, 0.109813, 0.11252, 0.112817, 0.112782, 0.112796, 0.112967, 0.113099, 0.112955, 0.112828, 0.112826], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 2, 0, 2, 1, 0, 0, 1, 1, 2, 12, 0, 0, 2, 0, 0, 1, 1]': ([0.111155, 0.111218, 0.111205, 0.111731, 0.114473, 0.114548, 0.114484, 0.114694, 0.11726, 0.117745, 0.117689, 0.117683, 0.117777, 0.117795, 0.117737, 0.117849, 0.11649, 0.113799, 0.11626, 0.112894, 0.109813, 0.11252, 0.112817, 0.112782, 0.112796, 0.112967, 0.113099, 0.112955, 0.112828, 0.112826], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	39
        Max loop nest depth: 	5
        Additions: 		2042
        Multiplications: 	528
        Divisions: 		0
        Logical: 		0
        Reads: 			3329
        Writes: 		382
        Comparisons:		39
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest78.exe __orio_perftest78.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest78.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest78.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest78.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest78.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		278
        Multiplications: 	84
        Divisions: 		0
        Logical: 		0
        Reads: 			603
        Writes: 		87
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest79.exe __orio_perftest79.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest79.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest79.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest79.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest79.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	34
        Max loop nest depth: 	6
        Additions: 		1514
        Multiplications: 	396
        Divisions: 		0
        Logical: 		0
        Reads: 			2556
        Writes: 		310
        Comparisons:		34
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest80.exe __orio_perftest80.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest80.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest80.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest80.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest80.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	6
        Additions: 		468
        Multiplications: 	154
        Divisions: 		0
        Logical: 		0
        Reads: 			986
        Writes: 		127
        Comparisons:		16
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest81.exe __orio_perftest81.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest81.exe  
Program Test Output: 
{'[3, 6, 1, 2, 5, 5, 0, 1, 10, 0, 12, 29, 0, 2, 0, 0, 1, 0]' : 0.394326}
{'[3, 6, 1, 2, 5, 5, 0, 1, 10, 0, 12, 29, 0, 2, 0, 0, 1, 0]' : 0.336242}
{'[3, 6, 1, 2, 5, 5, 0, 1, 10, 0, 12, 29, 0, 2, 0, 0, 1, 0]' : 0.33689}
{'[3, 6, 1, 2, 5, 5, 0, 1, 10, 0, 12, 29, 0, 2, 0, 0, 1, 0]' : 0.336657}
{'[3, 6, 1, 2, 5, 5, 0, 1, 10, 0, 12, 29, 0, 2, 0, 0, 1, 0]' : 0.336215}
{'[3, 6, 1, 2, 5, 5, 0, 1, 10, 0, 12, 29, 0, 2, 0, 0, 1, 0]' : 0.336442}
{'[3, 6, 1, 2, 5, 5, 0, 1, 10, 0, 12, 29, 0, 2, 0, 0, 1, 0]' : 0.337057}
{'[3, 6, 1, 2, 5, 5, 0, 1, 10, 0, 12, 29, 0, 2, 0, 0, 1, 0]' : 0.336234}
{'[3, 6, 1, 2, 5, 5, 0, 1, 10, 0, 12, 29, 0, 2, 0, 0, 1, 0]' : 0.336778}
{'[3, 6, 1, 2, 5, 5, 0, 1, 10, 0, 12, 29, 0, 2, 0, 0, 1, 0]' : 0.336674}
{'[3, 6, 1, 2, 5, 5, 0, 1, 10, 0, 12, 29, 0, 2, 0, 0, 1, 0]' : 0.336232}
{'[3, 6, 1, 2, 5, 5, 0, 1, 10, 0, 12, 29, 0, 2, 0, 0, 1, 0]' : 0.336993}
{'[3, 6, 1, 2, 5, 5, 0, 1, 10, 0, 12, 29, 0, 2, 0, 0, 1, 0]' : 0.336382}
{'[3, 6, 1, 2, 5, 5, 0, 1, 10, 0, 12, 29, 0, 2, 0, 0, 1, 0]' : 0.33629}
{'[3, 6, 1, 2, 5, 5, 0, 1, 10, 0, 12, 29, 0, 2, 0, 0, 1, 0]' : 0.336338}
{'[3, 6, 1, 2, 5, 5, 0, 1, 10, 0, 12, 29, 0, 2, 0, 0, 1, 0]' : 0.337211}
{'[3, 6, 1, 2, 5, 5, 0, 1, 10, 0, 12, 29, 0, 2, 0, 0, 1, 0]' : 0.336539}
{'[3, 6, 1, 2, 5, 5, 0, 1, 10, 0, 12, 29, 0, 2, 0, 0, 1, 0]' : 0.336342}
{'[3, 6, 1, 2, 5, 5, 0, 1, 10, 0, 12, 29, 0, 2, 0, 0, 1, 0]' : 0.33637}
{'[3, 6, 1, 2, 5, 5, 0, 1, 10, 0, 12, 29, 0, 2, 0, 0, 1, 0]' : 0.336468}
{'[3, 6, 1, 2, 5, 5, 0, 1, 10, 0, 12, 29, 0, 2, 0, 0, 1, 0]' : 0.337375}
{'[3, 6, 1, 2, 5, 5, 0, 1, 10, 0, 12, 29, 0, 2, 0, 0, 1, 0]' : 0.336494}
{'[3, 6, 1, 2, 5, 5, 0, 1, 10, 0, 12, 29, 0, 2, 0, 0, 1, 0]' : 0.336304}
{'[3, 6, 1, 2, 5, 5, 0, 1, 10, 0, 12, 29, 0, 2, 0, 0, 1, 0]' : 0.336594}
{'[3, 6, 1, 2, 5, 5, 0, 1, 10, 0, 12, 29, 0, 2, 0, 0, 1, 0]' : 0.337269}
{'[3, 6, 1, 2, 5, 5, 0, 1, 10, 0, 12, 29, 0, 2, 0, 0, 1, 0]' : 0.336525}
{'[3, 6, 1, 2, 5, 5, 0, 1, 10, 0, 12, 29, 0, 2, 0, 0, 1, 0]' : 0.336327}
{'[3, 6, 1, 2, 5, 5, 0, 1, 10, 0, 12, 29, 0, 2, 0, 0, 1, 0]' : 0.336675}
{'[3, 6, 1, 2, 5, 5, 0, 1, 10, 0, 12, 29, 0, 2, 0, 0, 1, 0]' : 0.336352}
{'[3, 6, 1, 2, 5, 5, 0, 1, 10, 0, 12, 29, 0, 2, 0, 0, 1, 0]' : 0.337145}

out:
 ["{'[3, 6, 1, 2, 5, 5, 0, 1, 10, 0, 12, 29, 0, 2, 0, 0, 1, 0]' : 0.394326}", "{'[3, 6, 1, 2, 5, 5, 0, 1, 10, 0, 12, 29, 0, 2, 0, 0, 1, 0]' : 0.336242}", "{'[3, 6, 1, 2, 5, 5, 0, 1, 10, 0, 12, 29, 0, 2, 0, 0, 1, 0]' : 0.33689}", "{'[3, 6, 1, 2, 5, 5, 0, 1, 10, 0, 12, 29, 0, 2, 0, 0, 1, 0]' : 0.336657}", "{'[3, 6, 1, 2, 5, 5, 0, 1, 10, 0, 12, 29, 0, 2, 0, 0, 1, 0]' : 0.336215}", "{'[3, 6, 1, 2, 5, 5, 0, 1, 10, 0, 12, 29, 0, 2, 0, 0, 1, 0]' : 0.336442}", "{'[3, 6, 1, 2, 5, 5, 0, 1, 10, 0, 12, 29, 0, 2, 0, 0, 1, 0]' : 0.337057}", "{'[3, 6, 1, 2, 5, 5, 0, 1, 10, 0, 12, 29, 0, 2, 0, 0, 1, 0]' : 0.336234}", "{'[3, 6, 1, 2, 5, 5, 0, 1, 10, 0, 12, 29, 0, 2, 0, 0, 1, 0]' : 0.336778}", "{'[3, 6, 1, 2, 5, 5, 0, 1, 10, 0, 12, 29, 0, 2, 0, 0, 1, 0]' : 0.336674}", "{'[3, 6, 1, 2, 5, 5, 0, 1, 10, 0, 12, 29, 0, 2, 0, 0, 1, 0]' : 0.336232}", "{'[3, 6, 1, 2, 5, 5, 0, 1, 10, 0, 12, 29, 0, 2, 0, 0, 1, 0]' : 0.336993}", "{'[3, 6, 1, 2, 5, 5, 0, 1, 10, 0, 12, 29, 0, 2, 0, 0, 1, 0]' : 0.336382}", "{'[3, 6, 1, 2, 5, 5, 0, 1, 10, 0, 12, 29, 0, 2, 0, 0, 1, 0]' : 0.33629}", "{'[3, 6, 1, 2, 5, 5, 0, 1, 10, 0, 12, 29, 0, 2, 0, 0, 1, 0]' : 0.336338}", "{'[3, 6, 1, 2, 5, 5, 0, 1, 10, 0, 12, 29, 0, 2, 0, 0, 1, 0]' : 0.337211}", "{'[3, 6, 1, 2, 5, 5, 0, 1, 10, 0, 12, 29, 0, 2, 0, 0, 1, 0]' : 0.336539}", "{'[3, 6, 1, 2, 5, 5, 0, 1, 10, 0, 12, 29, 0, 2, 0, 0, 1, 0]' : 0.336342}", "{'[3, 6, 1, 2, 5, 5, 0, 1, 10, 0, 12, 29, 0, 2, 0, 0, 1, 0]' : 0.33637}", "{'[3, 6, 1, 2, 5, 5, 0, 1, 10, 0, 12, 29, 0, 2, 0, 0, 1, 0]' : 0.336468}", "{'[3, 6, 1, 2, 5, 5, 0, 1, 10, 0, 12, 29, 0, 2, 0, 0, 1, 0]' : 0.337375}", "{'[3, 6, 1, 2, 5, 5, 0, 1, 10, 0, 12, 29, 0, 2, 0, 0, 1, 0]' : 0.336494}", "{'[3, 6, 1, 2, 5, 5, 0, 1, 10, 0, 12, 29, 0, 2, 0, 0, 1, 0]' : 0.336304}", "{'[3, 6, 1, 2, 5, 5, 0, 1, 10, 0, 12, 29, 0, 2, 0, 0, 1, 0]' : 0.336594}", "{'[3, 6, 1, 2, 5, 5, 0, 1, 10, 0, 12, 29, 0, 2, 0, 0, 1, 0]' : 0.337269}", "{'[3, 6, 1, 2, 5, 5, 0, 1, 10, 0, 12, 29, 0, 2, 0, 0, 1, 0]' : 0.336525}", "{'[3, 6, 1, 2, 5, 5, 0, 1, 10, 0, 12, 29, 0, 2, 0, 0, 1, 0]' : 0.336327}", "{'[3, 6, 1, 2, 5, 5, 0, 1, 10, 0, 12, 29, 0, 2, 0, 0, 1, 0]' : 0.336675}", "{'[3, 6, 1, 2, 5, 5, 0, 1, 10, 0, 12, 29, 0, 2, 0, 0, 1, 0]' : 0.336352}", "{'[3, 6, 1, 2, 5, 5, 0, 1, 10, 0, 12, 29, 0, 2, 0, 0, 1, 0]' : 0.337145}"]
returning from 'run': {'[3, 6, 1, 2, 5, 5, 0, 1, 10, 0, 12, 29, 0, 2, 0, 0, 1, 0]': ([0.394326, 0.336242, 0.33689, 0.336657, 0.336215, 0.336442, 0.337057, 0.336234, 0.336778, 0.336674, 0.336232, 0.336993, 0.336382, 0.33629, 0.336338, 0.337211, 0.336539, 0.336342, 0.33637, 0.336468, 0.337375, 0.336494, 0.336304, 0.336594, 0.337269, 0.336525, 0.336327, 0.336675, 0.336352, 0.337145], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 6, 1, 2, 5, 5, 0, 1, 10, 0, 12, 29, 0, 2, 0, 0, 1, 0]': ([0.394326, 0.336242, 0.33689, 0.336657, 0.336215, 0.336442, 0.337057, 0.336234, 0.336778, 0.336674, 0.336232, 0.336993, 0.336382, 0.33629, 0.336338, 0.337211, 0.336539, 0.336342, 0.33637, 0.336468, 0.337375, 0.336494, 0.336304, 0.336594, 0.337269, 0.336525, 0.336327, 0.336675, 0.336352, 0.337145], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Complete design, with measurements:
     T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x U1_I U_I U_K VEC1 VEC2 cost_mean
62      4    6    6    0    0    4       0    4   0   1    1    0 0.2308650
592     0    3    1    1    2    4       0    3   0   0    1    0 0.2759469
659     0    0    1    2    6    6       0    4  22   0    0    1 0.2061329
743     0    2    6    6    2    6       0    0   0  29    0    1 0.2009222
810     0    0    3    0    3    0       0   16   0  15    0    0 0.2273475
918     6    0    6    6    6    4       0   22   0   0    1    0 0.2163686
1266    2    0    0    5    6    2       0    0   0   2    0    0 0.2446061
1469    6    0    0    6    1    0       0    7  29   0    0    1 0.2496950
1805    6    5    2    0    5    1       0   29   5   0    1    1 0.1847225
1899    0    3    0    6    6    0       0   23   0   1    0    0 0.1650407
1997    6    6    0    0    0    0       0   19  27   0    0    0 0.1591160
2213    2    4    1    4    0    0       0    7   0  28    0    0 0.3340610
2240    6    1    5    4    5    6       0   29   0   1    0    0 0.2534287
2345    1    0    3    6    1    0       0    0   0  11    1    1 0.2090238
2848    1    2    0    2    1    0       0    1   2   0    1    1 0.1143296
3288    3    6    1    2    5    5       0   10   0  29    1    0 0.3385247

