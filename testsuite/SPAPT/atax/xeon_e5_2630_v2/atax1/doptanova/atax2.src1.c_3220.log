
====== START ORIO ======

----- begin reading the source file: atax2.src1.c -----
----- finished reading the source file -----

----- begin parsing annotations -----
----- finished parsing annotations -----

----- begin optimizations -----
Search_Space         = 8.234e+13
Number_of_Parameters = 18
Numeric_Parameters   = 13
Binary_Parameters    = 05
['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
[[1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [False, True], [False, True], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 8, 32], [1, 8, 32], [1, 8, 32], [False, True], [False, True], [False, True]]

----- begin empirical tuning for problem size -----
 N = 10000
Parameters: {'ACOPY_x': [0, 2], 'ACOPY_y': [0, 2], 'RT_K': [0, 3], 'T1_I': [0, 7], 'T1_J': [0, 7], 'T1_K': [0, 7], 'U_K': [0, 30], 'U_J': [0, 30], 'U_I': [0, 30], 'U1_I': [0, 30], 'T2_K': [0, 7], 'T2_J': [0, 7], 'T2_I': [0, 7], 'VEC2': [0, 2], 'VEC1': [0, 2], 'RT_I': [0, 3], 'SCR': [0, 2], 'RT_J': [0, 3]}
Parameter Range Values: {'ACOPY_x': [False, True], 'ACOPY_y': [False, True], 'RT_K': [1, 8, 32], 'T1_I': [1, 16, 32, 64, 128, 256, 512], 'T1_J': [1, 16, 32, 64, 128, 256, 512], 'T1_K': [1, 16, 32, 64, 128, 256, 512], 'U_K': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_J': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U1_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'T2_K': [1, 64, 128, 256, 512, 1024, 2048], 'T2_J': [1, 64, 128, 256, 512, 1024, 2048], 'T2_I': [1, 64, 128, 256, 512, 1024, 2048], 'VEC2': [False, True], 'VEC1': [False, True], 'RT_I': [1, 8, 32], 'SCR': [False, True], 'RT_J': [1, 8, 32]}

----- begin random search -----
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Inverse Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Starting DOPT-anova
Step 0
Generating valid search space of size 4600 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Valid coordinates: 920
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Valid coordinates: 1840
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Tested coordinates: 110000
Valid coordinates: 2760
Tested coordinates: 120000
Tested coordinates: 130000
Tested coordinates: 140000
Tested coordinates: 150000
Valid coordinates: 3680
Tested coordinates: 160000
Tested coordinates: 170000
Tested coordinates: 180000
Tested coordinates: 190000
Valid coordinates: 4600
Valid/Tested configurations: 4600/190970
Generated Search Space:
NULL
Clean Info:
Removed Factors: character(0)

Removed Inverse Factors: [1] "ACOPY_x" "ACOPY_y" "SCR"     "VEC1"    "VEC2"   

New Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
New Inverse Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
New Fixed Factors: {}
Full Model:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Fixed Factors: {}
Computing D-Optimal Design
Computing D-Optimal Design with 46 experiments
Design Formula:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + ACOPY_x + ACOPY_y + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T1_K)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_J)) + I(1 / (1 + T2_K)) + I(1 / (1 + U1_I)) + I(1 / (1 + U_I)) + I(1 / (1 + U_J)) + I(1 / (1 + U_K)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Starting "optFederov" run
Using Search Space:
NULL
Data Dimensions: [1] 4600   18

     T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
154     1    2    0    5    2    1       1       1   29   4   0  21    2    0
266     4    2    0    0    6    1       0       1   20   8   0   3    0    1
419     6    0    5    6    0    3       0       1   22  24   0  28    1    0
527     0    1    0    0    2    6       1       0   25  26   0   1    0    2
606     6    6    0    6    5    6       1       1    3  28   0   6    0    0
654     3    1    0    2    0    3       0       1    3   0   3  26    0    0
740     6    6    0    0    0    0       1       1   15   3   1   0    0    1
879     2    6    3    2    0    6       0       0    6  26   0  17    0    2
969     0    0    1    3    2    4       0       1   23   0   2   2    1    1
1107    0    5    5    6    6    6       0       0   23   2  12   0    0    1
1186    4    1    6    0    4    0       1       1    0   0  28   0    2    0
1200    6    3    2    5    1    6       0       1   10  10  27   0    2    0
1447    6    3    0    6    3    4       0       0    2   0  29   0    0    0
1463    3    6    2    0    5    1       0       1   28  24  25   0    1    1
1613    2    3    4    1    4    2       1       1    7  29  29   0    0    0
1645    2    4    2    6    2    2       0       1    0   7  25   0    1    0
1934    6    2    4    6    6    6       1       0    8   0   8  28    1    0
1973    0    2    2    5    5    4       0       0    4   0   0   0    0    2
2050    0    0    2    6    2    0       1       0   10  25   0  26    0    0
2144    6    0    3    0    6    2       1       0    3   6  10   0    1    1
2205    0    1    2    5    0    2       1       1   29   0  28  29    0    1
2222    1    4    2    1    5    6       0       1    0   0   2  13    1    0
2244    1    6    4    2    5    2       0       0   29   2   0  25    0    0
2262    1    0    0    2    0    6       0       1    2   0  26  28    0    1
2401    0    3    6    6    6    0       1       0    4   0  11   4    0    1
2424    2    0    3    1    6    5       1       0    4   3   0  26    2    0
2598    2    6    1    2    0    2       1       0    6   0  29  16    2    0
3014    1    4    1    0    3    4       0       1    3  29   0  29    0    1
3068    6    0    6    0    2    0       0       1    9   0  21  11    0    0
3303    6    4    6    5    2    6       1       1    0   0  27   2    0    1
3501    5    5    0    0    6    6       0       0   28   0   7  13    0    0
3638    0    6    0    6    0    6       0       1   11   9   0  11    1    0
3669    6    2    0    4    4    1       0       0    1  29   0  28    0    1
3680    1    6    6    5    4    4       1       1   28   0   7  11    0    2
3771    0    4    6    0    2    5       1       1   18  27   0  25    0    0
3850    4    0    1    4    2    2       1       0   23   0   0  11    0    0
4046    0    6    2    1    6    4       1       1    0  24   9   0    0    2
4057    0    0    1    2    2    1       0       0    0   0   3  11    2    0
4067    6    1    4    5    0    0       1       1   29  29   0   5    0    0
4192    3    3    6    1    1    0       1       0    2  29  12   0    1    1
4307    3    1    5    0    0    6       0       0   27  27  18   0    0    0
4395    3    0    0    6    6    1       1       1    3   2  17   0    0    0
4433    0    0    6    1    6    4       1       1   22   0  27  19    1    0
4447    6    6    6    5    4    0       0       1   29   0  20  28    0    2
4558    5    1    5    5    3    5       1       1   28  29   1   0    2    0
4599    1    4    0    1    5    0       0       1   12   0  27  20    1    0
     RT_K SCR VEC1 VEC2
154     0   1    1    1
266     1   1    0    0
419     1   0    0    1
527     0   0    0    1
606     0   1    1    0
654     0   1    1    1
740     1   0    1    0
879     0   0    0    0
969     0   1    1    0
1107    1   0    1    0
1186    0   1    1    0
1200    0   1    1    1
1447    2   0    1    0
1463    0   1    0    0
1613    1   0    1    1
1645    0   0    1    1
1934    1   0    0    0
1973    0   1    1    0
2050    1   0    1    0
2144    0   0    1    1
2205    0   0    1    0
2222    0   0    0    0
2244    0   0    0    1
2262    0   0    0    1
2401    0   1    0    1
2424    0   0    1    1
2598    0   0    0    0
3014    1   0    1    1
3068    0   0    0    1
3303    1   1    0    1
3501    2   1    0    1
3638    1   1    1    1
3669    0   0    1    0
3680    0   0    1    1
3771    2   1    0    0
3850    1   1    0    1
4046    0   1    0    1
4057    0   0    0    0
4067    2   0    1    0
4192    0   1    0    1
4307    0   1    1    0
4395    2   1    0    0
4433    1   1    1    1
4447    0   1    1    1
4558    0   0    0    1
4599    1   0    0    0

D-Efficiency Approximation: [1] 0.35

Measuring design of size 46
Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Length of requested configs: 1
Code stats:
        Number of loops: 	54
        Max loop nest depth: 	6
        Additions: 		4438
        Multiplications: 	1824
        Divisions: 		0
        Logical: 		0
        Reads: 			8532
        Writes: 		1506
        Comparisons:		54
        Gotos: 			0
        
 building the original code:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -DORIGINAL -o __orio_perftest_original.exe __orio_perftest1.c timer_cpu.o -lm
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest1.exe __orio_perftest1.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest1.exe  
Program Test Output: 
{'[1, 2, 0, 5, 2, 1, 1, 1, 29, 4, 0, 21, 2, 0, 0, 1, 1, 1]' : 0.192208}
{'[1, 2, 0, 5, 2, 1, 1, 1, 29, 4, 0, 21, 2, 0, 0, 1, 1, 1]' : 0.192236}
{'[1, 2, 0, 5, 2, 1, 1, 1, 29, 4, 0, 21, 2, 0, 0, 1, 1, 1]' : 0.192273}
{'[1, 2, 0, 5, 2, 1, 1, 1, 29, 4, 0, 21, 2, 0, 0, 1, 1, 1]' : 0.192585}
{'[1, 2, 0, 5, 2, 1, 1, 1, 29, 4, 0, 21, 2, 0, 0, 1, 1, 1]' : 0.192582}
{'[1, 2, 0, 5, 2, 1, 1, 1, 29, 4, 0, 21, 2, 0, 0, 1, 1, 1]' : 0.192019}
{'[1, 2, 0, 5, 2, 1, 1, 1, 29, 4, 0, 21, 2, 0, 0, 1, 1, 1]' : 0.192126}
{'[1, 2, 0, 5, 2, 1, 1, 1, 29, 4, 0, 21, 2, 0, 0, 1, 1, 1]' : 0.19223}
{'[1, 2, 0, 5, 2, 1, 1, 1, 29, 4, 0, 21, 2, 0, 0, 1, 1, 1]' : 0.192204}
{'[1, 2, 0, 5, 2, 1, 1, 1, 29, 4, 0, 21, 2, 0, 0, 1, 1, 1]' : 0.19229}
{'[1, 2, 0, 5, 2, 1, 1, 1, 29, 4, 0, 21, 2, 0, 0, 1, 1, 1]' : 0.19341}
{'[1, 2, 0, 5, 2, 1, 1, 1, 29, 4, 0, 21, 2, 0, 0, 1, 1, 1]' : 0.192106}
{'[1, 2, 0, 5, 2, 1, 1, 1, 29, 4, 0, 21, 2, 0, 0, 1, 1, 1]' : 0.192105}
{'[1, 2, 0, 5, 2, 1, 1, 1, 29, 4, 0, 21, 2, 0, 0, 1, 1, 1]' : 0.192093}
{'[1, 2, 0, 5, 2, 1, 1, 1, 29, 4, 0, 21, 2, 0, 0, 1, 1, 1]' : 0.192074}
{'[1, 2, 0, 5, 2, 1, 1, 1, 29, 4, 0, 21, 2, 0, 0, 1, 1, 1]' : 0.192474}
{'[1, 2, 0, 5, 2, 1, 1, 1, 29, 4, 0, 21, 2, 0, 0, 1, 1, 1]' : 0.19248}
{'[1, 2, 0, 5, 2, 1, 1, 1, 29, 4, 0, 21, 2, 0, 0, 1, 1, 1]' : 0.192323}
{'[1, 2, 0, 5, 2, 1, 1, 1, 29, 4, 0, 21, 2, 0, 0, 1, 1, 1]' : 0.192639}
{'[1, 2, 0, 5, 2, 1, 1, 1, 29, 4, 0, 21, 2, 0, 0, 1, 1, 1]' : 0.192374}
{'[1, 2, 0, 5, 2, 1, 1, 1, 29, 4, 0, 21, 2, 0, 0, 1, 1, 1]' : 0.192198}
{'[1, 2, 0, 5, 2, 1, 1, 1, 29, 4, 0, 21, 2, 0, 0, 1, 1, 1]' : 0.192336}
{'[1, 2, 0, 5, 2, 1, 1, 1, 29, 4, 0, 21, 2, 0, 0, 1, 1, 1]' : 0.191265}
{'[1, 2, 0, 5, 2, 1, 1, 1, 29, 4, 0, 21, 2, 0, 0, 1, 1, 1]' : 0.190979}
{'[1, 2, 0, 5, 2, 1, 1, 1, 29, 4, 0, 21, 2, 0, 0, 1, 1, 1]' : 0.190869}
{'[1, 2, 0, 5, 2, 1, 1, 1, 29, 4, 0, 21, 2, 0, 0, 1, 1, 1]' : 0.190884}
{'[1, 2, 0, 5, 2, 1, 1, 1, 29, 4, 0, 21, 2, 0, 0, 1, 1, 1]' : 0.191014}
{'[1, 2, 0, 5, 2, 1, 1, 1, 29, 4, 0, 21, 2, 0, 0, 1, 1, 1]' : 0.191206}
{'[1, 2, 0, 5, 2, 1, 1, 1, 29, 4, 0, 21, 2, 0, 0, 1, 1, 1]' : 0.190909}
{'[1, 2, 0, 5, 2, 1, 1, 1, 29, 4, 0, 21, 2, 0, 0, 1, 1, 1]' : 0.191133}

out:
 ["{'[1, 2, 0, 5, 2, 1, 1, 1, 29, 4, 0, 21, 2, 0, 0, 1, 1, 1]' : 0.192208}", "{'[1, 2, 0, 5, 2, 1, 1, 1, 29, 4, 0, 21, 2, 0, 0, 1, 1, 1]' : 0.192236}", "{'[1, 2, 0, 5, 2, 1, 1, 1, 29, 4, 0, 21, 2, 0, 0, 1, 1, 1]' : 0.192273}", "{'[1, 2, 0, 5, 2, 1, 1, 1, 29, 4, 0, 21, 2, 0, 0, 1, 1, 1]' : 0.192585}", "{'[1, 2, 0, 5, 2, 1, 1, 1, 29, 4, 0, 21, 2, 0, 0, 1, 1, 1]' : 0.192582}", "{'[1, 2, 0, 5, 2, 1, 1, 1, 29, 4, 0, 21, 2, 0, 0, 1, 1, 1]' : 0.192019}", "{'[1, 2, 0, 5, 2, 1, 1, 1, 29, 4, 0, 21, 2, 0, 0, 1, 1, 1]' : 0.192126}", "{'[1, 2, 0, 5, 2, 1, 1, 1, 29, 4, 0, 21, 2, 0, 0, 1, 1, 1]' : 0.19223}", "{'[1, 2, 0, 5, 2, 1, 1, 1, 29, 4, 0, 21, 2, 0, 0, 1, 1, 1]' : 0.192204}", "{'[1, 2, 0, 5, 2, 1, 1, 1, 29, 4, 0, 21, 2, 0, 0, 1, 1, 1]' : 0.19229}", "{'[1, 2, 0, 5, 2, 1, 1, 1, 29, 4, 0, 21, 2, 0, 0, 1, 1, 1]' : 0.19341}", "{'[1, 2, 0, 5, 2, 1, 1, 1, 29, 4, 0, 21, 2, 0, 0, 1, 1, 1]' : 0.192106}", "{'[1, 2, 0, 5, 2, 1, 1, 1, 29, 4, 0, 21, 2, 0, 0, 1, 1, 1]' : 0.192105}", "{'[1, 2, 0, 5, 2, 1, 1, 1, 29, 4, 0, 21, 2, 0, 0, 1, 1, 1]' : 0.192093}", "{'[1, 2, 0, 5, 2, 1, 1, 1, 29, 4, 0, 21, 2, 0, 0, 1, 1, 1]' : 0.192074}", "{'[1, 2, 0, 5, 2, 1, 1, 1, 29, 4, 0, 21, 2, 0, 0, 1, 1, 1]' : 0.192474}", "{'[1, 2, 0, 5, 2, 1, 1, 1, 29, 4, 0, 21, 2, 0, 0, 1, 1, 1]' : 0.19248}", "{'[1, 2, 0, 5, 2, 1, 1, 1, 29, 4, 0, 21, 2, 0, 0, 1, 1, 1]' : 0.192323}", "{'[1, 2, 0, 5, 2, 1, 1, 1, 29, 4, 0, 21, 2, 0, 0, 1, 1, 1]' : 0.192639}", "{'[1, 2, 0, 5, 2, 1, 1, 1, 29, 4, 0, 21, 2, 0, 0, 1, 1, 1]' : 0.192374}", "{'[1, 2, 0, 5, 2, 1, 1, 1, 29, 4, 0, 21, 2, 0, 0, 1, 1, 1]' : 0.192198}", "{'[1, 2, 0, 5, 2, 1, 1, 1, 29, 4, 0, 21, 2, 0, 0, 1, 1, 1]' : 0.192336}", "{'[1, 2, 0, 5, 2, 1, 1, 1, 29, 4, 0, 21, 2, 0, 0, 1, 1, 1]' : 0.191265}", "{'[1, 2, 0, 5, 2, 1, 1, 1, 29, 4, 0, 21, 2, 0, 0, 1, 1, 1]' : 0.190979}", "{'[1, 2, 0, 5, 2, 1, 1, 1, 29, 4, 0, 21, 2, 0, 0, 1, 1, 1]' : 0.190869}", "{'[1, 2, 0, 5, 2, 1, 1, 1, 29, 4, 0, 21, 2, 0, 0, 1, 1, 1]' : 0.190884}", "{'[1, 2, 0, 5, 2, 1, 1, 1, 29, 4, 0, 21, 2, 0, 0, 1, 1, 1]' : 0.191014}", "{'[1, 2, 0, 5, 2, 1, 1, 1, 29, 4, 0, 21, 2, 0, 0, 1, 1, 1]' : 0.191206}", "{'[1, 2, 0, 5, 2, 1, 1, 1, 29, 4, 0, 21, 2, 0, 0, 1, 1, 1]' : 0.190909}", "{'[1, 2, 0, 5, 2, 1, 1, 1, 29, 4, 0, 21, 2, 0, 0, 1, 1, 1]' : 0.191133}"]
returning from 'run': {'[1, 2, 0, 5, 2, 1, 1, 1, 29, 4, 0, 21, 2, 0, 0, 1, 1, 1]': ([0.192208, 0.192236, 0.192273, 0.192585, 0.192582, 0.192019, 0.192126, 0.19223, 0.192204, 0.19229, 0.19341, 0.192106, 0.192105, 0.192093, 0.192074, 0.192474, 0.19248, 0.192323, 0.192639, 0.192374, 0.192198, 0.192336, 0.191265, 0.190979, 0.190869, 0.190884, 0.191014, 0.191206, 0.190909, 0.191133], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 2, 0, 5, 2, 1, 1, 1, 29, 4, 0, 21, 2, 0, 0, 1, 1, 1]': ([0.192208, 0.192236, 0.192273, 0.192585, 0.192582, 0.192019, 0.192126, 0.19223, 0.192204, 0.19229, 0.19341, 0.192106, 0.192105, 0.192093, 0.192074, 0.192474, 0.19248, 0.192323, 0.192639, 0.192374, 0.192198, 0.192336, 0.191265, 0.190979, 0.190869, 0.190884, 0.191014, 0.191206, 0.190909, 0.191133], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	37
        Max loop nest depth: 	5
        Additions: 		867
        Multiplications: 	340
        Divisions: 		0
        Logical: 		0
        Reads: 			1819
        Writes: 		357
        Comparisons:		37
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest2.exe __orio_perftest2.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest2.exe  
Program Test Output: 
{'[4, 2, 0, 0, 6, 1, 0, 1, 20, 8, 0, 3, 0, 1, 1, 1, 0, 0]' : 0.171282}
{'[4, 2, 0, 0, 6, 1, 0, 1, 20, 8, 0, 3, 0, 1, 1, 1, 0, 0]' : 0.171304}
{'[4, 2, 0, 0, 6, 1, 0, 1, 20, 8, 0, 3, 0, 1, 1, 1, 0, 0]' : 0.171236}
{'[4, 2, 0, 0, 6, 1, 0, 1, 20, 8, 0, 3, 0, 1, 1, 1, 0, 0]' : 0.155535}
{'[4, 2, 0, 0, 6, 1, 0, 1, 20, 8, 0, 3, 0, 1, 1, 1, 0, 0]' : 0.154779}
{'[4, 2, 0, 0, 6, 1, 0, 1, 20, 8, 0, 3, 0, 1, 1, 1, 0, 0]' : 0.154748}
{'[4, 2, 0, 0, 6, 1, 0, 1, 20, 8, 0, 3, 0, 1, 1, 1, 0, 0]' : 0.154722}
{'[4, 2, 0, 0, 6, 1, 0, 1, 20, 8, 0, 3, 0, 1, 1, 1, 0, 0]' : 0.154779}
{'[4, 2, 0, 0, 6, 1, 0, 1, 20, 8, 0, 3, 0, 1, 1, 1, 0, 0]' : 0.15473}
{'[4, 2, 0, 0, 6, 1, 0, 1, 20, 8, 0, 3, 0, 1, 1, 1, 0, 0]' : 0.155088}
{'[4, 2, 0, 0, 6, 1, 0, 1, 20, 8, 0, 3, 0, 1, 1, 1, 0, 0]' : 0.154765}
{'[4, 2, 0, 0, 6, 1, 0, 1, 20, 8, 0, 3, 0, 1, 1, 1, 0, 0]' : 0.154764}
{'[4, 2, 0, 0, 6, 1, 0, 1, 20, 8, 0, 3, 0, 1, 1, 1, 0, 0]' : 0.154755}
{'[4, 2, 0, 0, 6, 1, 0, 1, 20, 8, 0, 3, 0, 1, 1, 1, 0, 0]' : 0.15491}
{'[4, 2, 0, 0, 6, 1, 0, 1, 20, 8, 0, 3, 0, 1, 1, 1, 0, 0]' : 0.154792}
{'[4, 2, 0, 0, 6, 1, 0, 1, 20, 8, 0, 3, 0, 1, 1, 1, 0, 0]' : 0.154715}
{'[4, 2, 0, 0, 6, 1, 0, 1, 20, 8, 0, 3, 0, 1, 1, 1, 0, 0]' : 0.154777}
{'[4, 2, 0, 0, 6, 1, 0, 1, 20, 8, 0, 3, 0, 1, 1, 1, 0, 0]' : 0.154786}
{'[4, 2, 0, 0, 6, 1, 0, 1, 20, 8, 0, 3, 0, 1, 1, 1, 0, 0]' : 0.15478}
{'[4, 2, 0, 0, 6, 1, 0, 1, 20, 8, 0, 3, 0, 1, 1, 1, 0, 0]' : 0.154658}
{'[4, 2, 0, 0, 6, 1, 0, 1, 20, 8, 0, 3, 0, 1, 1, 1, 0, 0]' : 0.15307}
{'[4, 2, 0, 0, 6, 1, 0, 1, 20, 8, 0, 3, 0, 1, 1, 1, 0, 0]' : 0.150971}
{'[4, 2, 0, 0, 6, 1, 0, 1, 20, 8, 0, 3, 0, 1, 1, 1, 0, 0]' : 0.150541}
{'[4, 2, 0, 0, 6, 1, 0, 1, 20, 8, 0, 3, 0, 1, 1, 1, 0, 0]' : 0.150371}
{'[4, 2, 0, 0, 6, 1, 0, 1, 20, 8, 0, 3, 0, 1, 1, 1, 0, 0]' : 0.151876}
{'[4, 2, 0, 0, 6, 1, 0, 1, 20, 8, 0, 3, 0, 1, 1, 1, 0, 0]' : 0.154773}
{'[4, 2, 0, 0, 6, 1, 0, 1, 20, 8, 0, 3, 0, 1, 1, 1, 0, 0]' : 0.154791}
{'[4, 2, 0, 0, 6, 1, 0, 1, 20, 8, 0, 3, 0, 1, 1, 1, 0, 0]' : 0.154774}
{'[4, 2, 0, 0, 6, 1, 0, 1, 20, 8, 0, 3, 0, 1, 1, 1, 0, 0]' : 0.154674}
{'[4, 2, 0, 0, 6, 1, 0, 1, 20, 8, 0, 3, 0, 1, 1, 1, 0, 0]' : 0.154803}

out:
 ["{'[4, 2, 0, 0, 6, 1, 0, 1, 20, 8, 0, 3, 0, 1, 1, 1, 0, 0]' : 0.171282}", "{'[4, 2, 0, 0, 6, 1, 0, 1, 20, 8, 0, 3, 0, 1, 1, 1, 0, 0]' : 0.171304}", "{'[4, 2, 0, 0, 6, 1, 0, 1, 20, 8, 0, 3, 0, 1, 1, 1, 0, 0]' : 0.171236}", "{'[4, 2, 0, 0, 6, 1, 0, 1, 20, 8, 0, 3, 0, 1, 1, 1, 0, 0]' : 0.155535}", "{'[4, 2, 0, 0, 6, 1, 0, 1, 20, 8, 0, 3, 0, 1, 1, 1, 0, 0]' : 0.154779}", "{'[4, 2, 0, 0, 6, 1, 0, 1, 20, 8, 0, 3, 0, 1, 1, 1, 0, 0]' : 0.154748}", "{'[4, 2, 0, 0, 6, 1, 0, 1, 20, 8, 0, 3, 0, 1, 1, 1, 0, 0]' : 0.154722}", "{'[4, 2, 0, 0, 6, 1, 0, 1, 20, 8, 0, 3, 0, 1, 1, 1, 0, 0]' : 0.154779}", "{'[4, 2, 0, 0, 6, 1, 0, 1, 20, 8, 0, 3, 0, 1, 1, 1, 0, 0]' : 0.15473}", "{'[4, 2, 0, 0, 6, 1, 0, 1, 20, 8, 0, 3, 0, 1, 1, 1, 0, 0]' : 0.155088}", "{'[4, 2, 0, 0, 6, 1, 0, 1, 20, 8, 0, 3, 0, 1, 1, 1, 0, 0]' : 0.154765}", "{'[4, 2, 0, 0, 6, 1, 0, 1, 20, 8, 0, 3, 0, 1, 1, 1, 0, 0]' : 0.154764}", "{'[4, 2, 0, 0, 6, 1, 0, 1, 20, 8, 0, 3, 0, 1, 1, 1, 0, 0]' : 0.154755}", "{'[4, 2, 0, 0, 6, 1, 0, 1, 20, 8, 0, 3, 0, 1, 1, 1, 0, 0]' : 0.15491}", "{'[4, 2, 0, 0, 6, 1, 0, 1, 20, 8, 0, 3, 0, 1, 1, 1, 0, 0]' : 0.154792}", "{'[4, 2, 0, 0, 6, 1, 0, 1, 20, 8, 0, 3, 0, 1, 1, 1, 0, 0]' : 0.154715}", "{'[4, 2, 0, 0, 6, 1, 0, 1, 20, 8, 0, 3, 0, 1, 1, 1, 0, 0]' : 0.154777}", "{'[4, 2, 0, 0, 6, 1, 0, 1, 20, 8, 0, 3, 0, 1, 1, 1, 0, 0]' : 0.154786}", "{'[4, 2, 0, 0, 6, 1, 0, 1, 20, 8, 0, 3, 0, 1, 1, 1, 0, 0]' : 0.15478}", "{'[4, 2, 0, 0, 6, 1, 0, 1, 20, 8, 0, 3, 0, 1, 1, 1, 0, 0]' : 0.154658}", "{'[4, 2, 0, 0, 6, 1, 0, 1, 20, 8, 0, 3, 0, 1, 1, 1, 0, 0]' : 0.15307}", "{'[4, 2, 0, 0, 6, 1, 0, 1, 20, 8, 0, 3, 0, 1, 1, 1, 0, 0]' : 0.150971}", "{'[4, 2, 0, 0, 6, 1, 0, 1, 20, 8, 0, 3, 0, 1, 1, 1, 0, 0]' : 0.150541}", "{'[4, 2, 0, 0, 6, 1, 0, 1, 20, 8, 0, 3, 0, 1, 1, 1, 0, 0]' : 0.150371}", "{'[4, 2, 0, 0, 6, 1, 0, 1, 20, 8, 0, 3, 0, 1, 1, 1, 0, 0]' : 0.151876}", "{'[4, 2, 0, 0, 6, 1, 0, 1, 20, 8, 0, 3, 0, 1, 1, 1, 0, 0]' : 0.154773}", "{'[4, 2, 0, 0, 6, 1, 0, 1, 20, 8, 0, 3, 0, 1, 1, 1, 0, 0]' : 0.154791}", "{'[4, 2, 0, 0, 6, 1, 0, 1, 20, 8, 0, 3, 0, 1, 1, 1, 0, 0]' : 0.154774}", "{'[4, 2, 0, 0, 6, 1, 0, 1, 20, 8, 0, 3, 0, 1, 1, 1, 0, 0]' : 0.154674}", "{'[4, 2, 0, 0, 6, 1, 0, 1, 20, 8, 0, 3, 0, 1, 1, 1, 0, 0]' : 0.154803}"]
returning from 'run': {'[4, 2, 0, 0, 6, 1, 0, 1, 20, 8, 0, 3, 0, 1, 1, 1, 0, 0]': ([0.171282, 0.171304, 0.171236, 0.155535, 0.154779, 0.154748, 0.154722, 0.154779, 0.15473, 0.155088, 0.154765, 0.154764, 0.154755, 0.15491, 0.154792, 0.154715, 0.154777, 0.154786, 0.15478, 0.154658, 0.15307, 0.150971, 0.150541, 0.150371, 0.151876, 0.154773, 0.154791, 0.154774, 0.154674, 0.154803], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 2, 0, 0, 6, 1, 0, 1, 20, 8, 0, 3, 0, 1, 1, 1, 0, 0]': ([0.171282, 0.171304, 0.171236, 0.155535, 0.154779, 0.154748, 0.154722, 0.154779, 0.15473, 0.155088, 0.154765, 0.154764, 0.154755, 0.15491, 0.154792, 0.154715, 0.154777, 0.154786, 0.15478, 0.154658, 0.15307, 0.150971, 0.150541, 0.150371, 0.151876, 0.154773, 0.154791, 0.154774, 0.154674, 0.154803], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = kkk
Code stats:
        Number of loops: 	70
        Max loop nest depth: 	5
        Additions: 		2777
        Multiplications: 	612
        Divisions: 		0
        Logical: 		0
        Reads: 			4466
        Writes: 		557
        Comparisons:		70
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest3.exe __orio_perftest3.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest3.exe  
Program Test Output: 
{'[6, 0, 5, 6, 0, 3, 0, 1, 22, 24, 0, 28, 1, 0, 1, 0, 0, 1]' : 0.127052}
{'[6, 0, 5, 6, 0, 3, 0, 1, 22, 24, 0, 28, 1, 0, 1, 0, 0, 1]' : 0.127043}
{'[6, 0, 5, 6, 0, 3, 0, 1, 22, 24, 0, 28, 1, 0, 1, 0, 0, 1]' : 0.126869}
{'[6, 0, 5, 6, 0, 3, 0, 1, 22, 24, 0, 28, 1, 0, 1, 0, 0, 1]' : 0.115653}
{'[6, 0, 5, 6, 0, 3, 0, 1, 22, 24, 0, 28, 1, 0, 1, 0, 0, 1]' : 0.109866}
{'[6, 0, 5, 6, 0, 3, 0, 1, 22, 24, 0, 28, 1, 0, 1, 0, 0, 1]' : 0.109899}
{'[6, 0, 5, 6, 0, 3, 0, 1, 22, 24, 0, 28, 1, 0, 1, 0, 0, 1]' : 0.110114}
{'[6, 0, 5, 6, 0, 3, 0, 1, 22, 24, 0, 28, 1, 0, 1, 0, 0, 1]' : 0.110355}
{'[6, 0, 5, 6, 0, 3, 0, 1, 22, 24, 0, 28, 1, 0, 1, 0, 0, 1]' : 0.10994}
{'[6, 0, 5, 6, 0, 3, 0, 1, 22, 24, 0, 28, 1, 0, 1, 0, 0, 1]' : 0.109923}
{'[6, 0, 5, 6, 0, 3, 0, 1, 22, 24, 0, 28, 1, 0, 1, 0, 0, 1]' : 0.10985}
{'[6, 0, 5, 6, 0, 3, 0, 1, 22, 24, 0, 28, 1, 0, 1, 0, 0, 1]' : 0.109882}
{'[6, 0, 5, 6, 0, 3, 0, 1, 22, 24, 0, 28, 1, 0, 1, 0, 0, 1]' : 0.110248}
{'[6, 0, 5, 6, 0, 3, 0, 1, 22, 24, 0, 28, 1, 0, 1, 0, 0, 1]' : 0.109983}
{'[6, 0, 5, 6, 0, 3, 0, 1, 22, 24, 0, 28, 1, 0, 1, 0, 0, 1]' : 0.109803}
{'[6, 0, 5, 6, 0, 3, 0, 1, 22, 24, 0, 28, 1, 0, 1, 0, 0, 1]' : 0.110375}
{'[6, 0, 5, 6, 0, 3, 0, 1, 22, 24, 0, 28, 1, 0, 1, 0, 0, 1]' : 0.110331}
{'[6, 0, 5, 6, 0, 3, 0, 1, 22, 24, 0, 28, 1, 0, 1, 0, 0, 1]' : 0.11012}
{'[6, 0, 5, 6, 0, 3, 0, 1, 22, 24, 0, 28, 1, 0, 1, 0, 0, 1]' : 0.109861}
{'[6, 0, 5, 6, 0, 3, 0, 1, 22, 24, 0, 28, 1, 0, 1, 0, 0, 1]' : 0.109909}
{'[6, 0, 5, 6, 0, 3, 0, 1, 22, 24, 0, 28, 1, 0, 1, 0, 0, 1]' : 0.109881}
{'[6, 0, 5, 6, 0, 3, 0, 1, 22, 24, 0, 28, 1, 0, 1, 0, 0, 1]' : 0.109893}
{'[6, 0, 5, 6, 0, 3, 0, 1, 22, 24, 0, 28, 1, 0, 1, 0, 0, 1]' : 0.109775}
{'[6, 0, 5, 6, 0, 3, 0, 1, 22, 24, 0, 28, 1, 0, 1, 0, 0, 1]' : 0.109844}
{'[6, 0, 5, 6, 0, 3, 0, 1, 22, 24, 0, 28, 1, 0, 1, 0, 0, 1]' : 0.109905}
{'[6, 0, 5, 6, 0, 3, 0, 1, 22, 24, 0, 28, 1, 0, 1, 0, 0, 1]' : 0.11009}
{'[6, 0, 5, 6, 0, 3, 0, 1, 22, 24, 0, 28, 1, 0, 1, 0, 0, 1]' : 0.110206}
{'[6, 0, 5, 6, 0, 3, 0, 1, 22, 24, 0, 28, 1, 0, 1, 0, 0, 1]' : 0.110222}
{'[6, 0, 5, 6, 0, 3, 0, 1, 22, 24, 0, 28, 1, 0, 1, 0, 0, 1]' : 0.10982}
{'[6, 0, 5, 6, 0, 3, 0, 1, 22, 24, 0, 28, 1, 0, 1, 0, 0, 1]' : 0.109921}

out:
 ["{'[6, 0, 5, 6, 0, 3, 0, 1, 22, 24, 0, 28, 1, 0, 1, 0, 0, 1]' : 0.127052}", "{'[6, 0, 5, 6, 0, 3, 0, 1, 22, 24, 0, 28, 1, 0, 1, 0, 0, 1]' : 0.127043}", "{'[6, 0, 5, 6, 0, 3, 0, 1, 22, 24, 0, 28, 1, 0, 1, 0, 0, 1]' : 0.126869}", "{'[6, 0, 5, 6, 0, 3, 0, 1, 22, 24, 0, 28, 1, 0, 1, 0, 0, 1]' : 0.115653}", "{'[6, 0, 5, 6, 0, 3, 0, 1, 22, 24, 0, 28, 1, 0, 1, 0, 0, 1]' : 0.109866}", "{'[6, 0, 5, 6, 0, 3, 0, 1, 22, 24, 0, 28, 1, 0, 1, 0, 0, 1]' : 0.109899}", "{'[6, 0, 5, 6, 0, 3, 0, 1, 22, 24, 0, 28, 1, 0, 1, 0, 0, 1]' : 0.110114}", "{'[6, 0, 5, 6, 0, 3, 0, 1, 22, 24, 0, 28, 1, 0, 1, 0, 0, 1]' : 0.110355}", "{'[6, 0, 5, 6, 0, 3, 0, 1, 22, 24, 0, 28, 1, 0, 1, 0, 0, 1]' : 0.10994}", "{'[6, 0, 5, 6, 0, 3, 0, 1, 22, 24, 0, 28, 1, 0, 1, 0, 0, 1]' : 0.109923}", "{'[6, 0, 5, 6, 0, 3, 0, 1, 22, 24, 0, 28, 1, 0, 1, 0, 0, 1]' : 0.10985}", "{'[6, 0, 5, 6, 0, 3, 0, 1, 22, 24, 0, 28, 1, 0, 1, 0, 0, 1]' : 0.109882}", "{'[6, 0, 5, 6, 0, 3, 0, 1, 22, 24, 0, 28, 1, 0, 1, 0, 0, 1]' : 0.110248}", "{'[6, 0, 5, 6, 0, 3, 0, 1, 22, 24, 0, 28, 1, 0, 1, 0, 0, 1]' : 0.109983}", "{'[6, 0, 5, 6, 0, 3, 0, 1, 22, 24, 0, 28, 1, 0, 1, 0, 0, 1]' : 0.109803}", "{'[6, 0, 5, 6, 0, 3, 0, 1, 22, 24, 0, 28, 1, 0, 1, 0, 0, 1]' : 0.110375}", "{'[6, 0, 5, 6, 0, 3, 0, 1, 22, 24, 0, 28, 1, 0, 1, 0, 0, 1]' : 0.110331}", "{'[6, 0, 5, 6, 0, 3, 0, 1, 22, 24, 0, 28, 1, 0, 1, 0, 0, 1]' : 0.11012}", "{'[6, 0, 5, 6, 0, 3, 0, 1, 22, 24, 0, 28, 1, 0, 1, 0, 0, 1]' : 0.109861}", "{'[6, 0, 5, 6, 0, 3, 0, 1, 22, 24, 0, 28, 1, 0, 1, 0, 0, 1]' : 0.109909}", "{'[6, 0, 5, 6, 0, 3, 0, 1, 22, 24, 0, 28, 1, 0, 1, 0, 0, 1]' : 0.109881}", "{'[6, 0, 5, 6, 0, 3, 0, 1, 22, 24, 0, 28, 1, 0, 1, 0, 0, 1]' : 0.109893}", "{'[6, 0, 5, 6, 0, 3, 0, 1, 22, 24, 0, 28, 1, 0, 1, 0, 0, 1]' : 0.109775}", "{'[6, 0, 5, 6, 0, 3, 0, 1, 22, 24, 0, 28, 1, 0, 1, 0, 0, 1]' : 0.109844}", "{'[6, 0, 5, 6, 0, 3, 0, 1, 22, 24, 0, 28, 1, 0, 1, 0, 0, 1]' : 0.109905}", "{'[6, 0, 5, 6, 0, 3, 0, 1, 22, 24, 0, 28, 1, 0, 1, 0, 0, 1]' : 0.11009}", "{'[6, 0, 5, 6, 0, 3, 0, 1, 22, 24, 0, 28, 1, 0, 1, 0, 0, 1]' : 0.110206}", "{'[6, 0, 5, 6, 0, 3, 0, 1, 22, 24, 0, 28, 1, 0, 1, 0, 0, 1]' : 0.110222}", "{'[6, 0, 5, 6, 0, 3, 0, 1, 22, 24, 0, 28, 1, 0, 1, 0, 0, 1]' : 0.10982}", "{'[6, 0, 5, 6, 0, 3, 0, 1, 22, 24, 0, 28, 1, 0, 1, 0, 0, 1]' : 0.109921}"]
returning from 'run': {'[6, 0, 5, 6, 0, 3, 0, 1, 22, 24, 0, 28, 1, 0, 1, 0, 0, 1]': ([0.127052, 0.127043, 0.126869, 0.115653, 0.109866, 0.109899, 0.110114, 0.110355, 0.10994, 0.109923, 0.10985, 0.109882, 0.110248, 0.109983, 0.109803, 0.110375, 0.110331, 0.11012, 0.109861, 0.109909, 0.109881, 0.109893, 0.109775, 0.109844, 0.109905, 0.11009, 0.110206, 0.110222, 0.10982, 0.109921], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 5, 6, 0, 3, 0, 1, 22, 24, 0, 28, 1, 0, 1, 0, 0, 1]': ([0.127052, 0.127043, 0.126869, 0.115653, 0.109866, 0.109899, 0.110114, 0.110355, 0.10994, 0.109923, 0.10985, 0.109882, 0.110248, 0.109983, 0.109803, 0.110375, 0.110331, 0.11012, 0.109861, 0.109909, 0.109881, 0.109893, 0.109775, 0.109844, 0.109905, 0.11009, 0.110206, 0.110222, 0.10982, 0.109921], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	44
        Max loop nest depth: 	4
        Additions: 		7559
        Multiplications: 	1960
        Divisions: 		0
        Logical: 		0
        Reads: 			11266
        Writes: 		1159
        Comparisons:		44
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest4.exe __orio_perftest4.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest4.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest4.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest4.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest4.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	164
        Max loop nest depth: 	6
        Additions: 		2761
        Multiplications: 	540
        Divisions: 		0
        Logical: 		0
        Reads: 			5752
        Writes: 		1267
        Comparisons:		164
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest5.exe __orio_perftest5.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest5.exe  
Program Test Output: 
{'[6, 6, 0, 6, 5, 6, 1, 1, 3, 28, 0, 6, 0, 0, 0, 1, 1, 0]' : 0.218623}
{'[6, 6, 0, 6, 5, 6, 1, 1, 3, 28, 0, 6, 0, 0, 0, 1, 1, 0]' : 0.218596}
{'[6, 6, 0, 6, 5, 6, 1, 1, 3, 28, 0, 6, 0, 0, 0, 1, 1, 0]' : 0.194734}
{'[6, 6, 0, 6, 5, 6, 1, 1, 3, 28, 0, 6, 0, 0, 0, 1, 1, 0]' : 0.18814}
{'[6, 6, 0, 6, 5, 6, 1, 1, 3, 28, 0, 6, 0, 0, 0, 1, 1, 0]' : 0.187906}
{'[6, 6, 0, 6, 5, 6, 1, 1, 3, 28, 0, 6, 0, 0, 0, 1, 1, 0]' : 0.187916}
{'[6, 6, 0, 6, 5, 6, 1, 1, 3, 28, 0, 6, 0, 0, 0, 1, 1, 0]' : 0.188035}
{'[6, 6, 0, 6, 5, 6, 1, 1, 3, 28, 0, 6, 0, 0, 0, 1, 1, 0]' : 0.188101}
{'[6, 6, 0, 6, 5, 6, 1, 1, 3, 28, 0, 6, 0, 0, 0, 1, 1, 0]' : 0.18777}
{'[6, 6, 0, 6, 5, 6, 1, 1, 3, 28, 0, 6, 0, 0, 0, 1, 1, 0]' : 0.188292}
{'[6, 6, 0, 6, 5, 6, 1, 1, 3, 28, 0, 6, 0, 0, 0, 1, 1, 0]' : 0.188119}
{'[6, 6, 0, 6, 5, 6, 1, 1, 3, 28, 0, 6, 0, 0, 0, 1, 1, 0]' : 0.187924}
{'[6, 6, 0, 6, 5, 6, 1, 1, 3, 28, 0, 6, 0, 0, 0, 1, 1, 0]' : 0.18824}
{'[6, 6, 0, 6, 5, 6, 1, 1, 3, 28, 0, 6, 0, 0, 0, 1, 1, 0]' : 0.188081}
{'[6, 6, 0, 6, 5, 6, 1, 1, 3, 28, 0, 6, 0, 0, 0, 1, 1, 0]' : 0.187918}
{'[6, 6, 0, 6, 5, 6, 1, 1, 3, 28, 0, 6, 0, 0, 0, 1, 1, 0]' : 0.18798}
{'[6, 6, 0, 6, 5, 6, 1, 1, 3, 28, 0, 6, 0, 0, 0, 1, 1, 0]' : 0.18799}
{'[6, 6, 0, 6, 5, 6, 1, 1, 3, 28, 0, 6, 0, 0, 0, 1, 1, 0]' : 0.18807}
{'[6, 6, 0, 6, 5, 6, 1, 1, 3, 28, 0, 6, 0, 0, 0, 1, 1, 0]' : 0.188161}
{'[6, 6, 0, 6, 5, 6, 1, 1, 3, 28, 0, 6, 0, 0, 0, 1, 1, 0]' : 0.188556}
{'[6, 6, 0, 6, 5, 6, 1, 1, 3, 28, 0, 6, 0, 0, 0, 1, 1, 0]' : 0.187996}
{'[6, 6, 0, 6, 5, 6, 1, 1, 3, 28, 0, 6, 0, 0, 0, 1, 1, 0]' : 0.187966}
{'[6, 6, 0, 6, 5, 6, 1, 1, 3, 28, 0, 6, 0, 0, 0, 1, 1, 0]' : 0.188077}
{'[6, 6, 0, 6, 5, 6, 1, 1, 3, 28, 0, 6, 0, 0, 0, 1, 1, 0]' : 0.188179}
{'[6, 6, 0, 6, 5, 6, 1, 1, 3, 28, 0, 6, 0, 0, 0, 1, 1, 0]' : 0.188387}
{'[6, 6, 0, 6, 5, 6, 1, 1, 3, 28, 0, 6, 0, 0, 0, 1, 1, 0]' : 0.188598}
{'[6, 6, 0, 6, 5, 6, 1, 1, 3, 28, 0, 6, 0, 0, 0, 1, 1, 0]' : 0.188186}
{'[6, 6, 0, 6, 5, 6, 1, 1, 3, 28, 0, 6, 0, 0, 0, 1, 1, 0]' : 0.188054}
{'[6, 6, 0, 6, 5, 6, 1, 1, 3, 28, 0, 6, 0, 0, 0, 1, 1, 0]' : 0.188037}
{'[6, 6, 0, 6, 5, 6, 1, 1, 3, 28, 0, 6, 0, 0, 0, 1, 1, 0]' : 0.187963}

out:
 ["{'[6, 6, 0, 6, 5, 6, 1, 1, 3, 28, 0, 6, 0, 0, 0, 1, 1, 0]' : 0.218623}", "{'[6, 6, 0, 6, 5, 6, 1, 1, 3, 28, 0, 6, 0, 0, 0, 1, 1, 0]' : 0.218596}", "{'[6, 6, 0, 6, 5, 6, 1, 1, 3, 28, 0, 6, 0, 0, 0, 1, 1, 0]' : 0.194734}", "{'[6, 6, 0, 6, 5, 6, 1, 1, 3, 28, 0, 6, 0, 0, 0, 1, 1, 0]' : 0.18814}", "{'[6, 6, 0, 6, 5, 6, 1, 1, 3, 28, 0, 6, 0, 0, 0, 1, 1, 0]' : 0.187906}", "{'[6, 6, 0, 6, 5, 6, 1, 1, 3, 28, 0, 6, 0, 0, 0, 1, 1, 0]' : 0.187916}", "{'[6, 6, 0, 6, 5, 6, 1, 1, 3, 28, 0, 6, 0, 0, 0, 1, 1, 0]' : 0.188035}", "{'[6, 6, 0, 6, 5, 6, 1, 1, 3, 28, 0, 6, 0, 0, 0, 1, 1, 0]' : 0.188101}", "{'[6, 6, 0, 6, 5, 6, 1, 1, 3, 28, 0, 6, 0, 0, 0, 1, 1, 0]' : 0.18777}", "{'[6, 6, 0, 6, 5, 6, 1, 1, 3, 28, 0, 6, 0, 0, 0, 1, 1, 0]' : 0.188292}", "{'[6, 6, 0, 6, 5, 6, 1, 1, 3, 28, 0, 6, 0, 0, 0, 1, 1, 0]' : 0.188119}", "{'[6, 6, 0, 6, 5, 6, 1, 1, 3, 28, 0, 6, 0, 0, 0, 1, 1, 0]' : 0.187924}", "{'[6, 6, 0, 6, 5, 6, 1, 1, 3, 28, 0, 6, 0, 0, 0, 1, 1, 0]' : 0.18824}", "{'[6, 6, 0, 6, 5, 6, 1, 1, 3, 28, 0, 6, 0, 0, 0, 1, 1, 0]' : 0.188081}", "{'[6, 6, 0, 6, 5, 6, 1, 1, 3, 28, 0, 6, 0, 0, 0, 1, 1, 0]' : 0.187918}", "{'[6, 6, 0, 6, 5, 6, 1, 1, 3, 28, 0, 6, 0, 0, 0, 1, 1, 0]' : 0.18798}", "{'[6, 6, 0, 6, 5, 6, 1, 1, 3, 28, 0, 6, 0, 0, 0, 1, 1, 0]' : 0.18799}", "{'[6, 6, 0, 6, 5, 6, 1, 1, 3, 28, 0, 6, 0, 0, 0, 1, 1, 0]' : 0.18807}", "{'[6, 6, 0, 6, 5, 6, 1, 1, 3, 28, 0, 6, 0, 0, 0, 1, 1, 0]' : 0.188161}", "{'[6, 6, 0, 6, 5, 6, 1, 1, 3, 28, 0, 6, 0, 0, 0, 1, 1, 0]' : 0.188556}", "{'[6, 6, 0, 6, 5, 6, 1, 1, 3, 28, 0, 6, 0, 0, 0, 1, 1, 0]' : 0.187996}", "{'[6, 6, 0, 6, 5, 6, 1, 1, 3, 28, 0, 6, 0, 0, 0, 1, 1, 0]' : 0.187966}", "{'[6, 6, 0, 6, 5, 6, 1, 1, 3, 28, 0, 6, 0, 0, 0, 1, 1, 0]' : 0.188077}", "{'[6, 6, 0, 6, 5, 6, 1, 1, 3, 28, 0, 6, 0, 0, 0, 1, 1, 0]' : 0.188179}", "{'[6, 6, 0, 6, 5, 6, 1, 1, 3, 28, 0, 6, 0, 0, 0, 1, 1, 0]' : 0.188387}", "{'[6, 6, 0, 6, 5, 6, 1, 1, 3, 28, 0, 6, 0, 0, 0, 1, 1, 0]' : 0.188598}", "{'[6, 6, 0, 6, 5, 6, 1, 1, 3, 28, 0, 6, 0, 0, 0, 1, 1, 0]' : 0.188186}", "{'[6, 6, 0, 6, 5, 6, 1, 1, 3, 28, 0, 6, 0, 0, 0, 1, 1, 0]' : 0.188054}", "{'[6, 6, 0, 6, 5, 6, 1, 1, 3, 28, 0, 6, 0, 0, 0, 1, 1, 0]' : 0.188037}", "{'[6, 6, 0, 6, 5, 6, 1, 1, 3, 28, 0, 6, 0, 0, 0, 1, 1, 0]' : 0.187963}"]
returning from 'run': {'[6, 6, 0, 6, 5, 6, 1, 1, 3, 28, 0, 6, 0, 0, 0, 1, 1, 0]': ([0.218623, 0.218596, 0.194734, 0.18814, 0.187906, 0.187916, 0.188035, 0.188101, 0.18777, 0.188292, 0.188119, 0.187924, 0.18824, 0.188081, 0.187918, 0.18798, 0.18799, 0.18807, 0.188161, 0.188556, 0.187996, 0.187966, 0.188077, 0.188179, 0.188387, 0.188598, 0.188186, 0.188054, 0.188037, 0.187963], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 0, 6, 5, 6, 1, 1, 3, 28, 0, 6, 0, 0, 0, 1, 1, 0]': ([0.218623, 0.218596, 0.194734, 0.18814, 0.187906, 0.187916, 0.188035, 0.188101, 0.18777, 0.188292, 0.188119, 0.187924, 0.18824, 0.188081, 0.187918, 0.18798, 0.18799, 0.18807, 0.188161, 0.188556, 0.187996, 0.187966, 0.188077, 0.188179, 0.188387, 0.188598, 0.188186, 0.188054, 0.188037, 0.187963], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		268
        Multiplications: 	66
        Divisions: 		0
        Logical: 		0
        Reads: 			596
        Writes: 		134
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest6.exe __orio_perftest6.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest6.exe  
Program Test Output: 
{'[3, 1, 0, 2, 0, 3, 0, 1, 3, 0, 3, 26, 0, 0, 0, 1, 1, 1]' : 0.249264}
{'[3, 1, 0, 2, 0, 3, 0, 1, 3, 0, 3, 26, 0, 0, 0, 1, 1, 1]' : 0.246292}
{'[3, 1, 0, 2, 0, 3, 0, 1, 3, 0, 3, 26, 0, 0, 0, 1, 1, 1]' : 0.213826}
{'[3, 1, 0, 2, 0, 3, 0, 1, 3, 0, 3, 26, 0, 0, 0, 1, 1, 1]' : 0.208058}
{'[3, 1, 0, 2, 0, 3, 0, 1, 3, 0, 3, 26, 0, 0, 0, 1, 1, 1]' : 0.207254}
{'[3, 1, 0, 2, 0, 3, 0, 1, 3, 0, 3, 26, 0, 0, 0, 1, 1, 1]' : 0.207181}
{'[3, 1, 0, 2, 0, 3, 0, 1, 3, 0, 3, 26, 0, 0, 0, 1, 1, 1]' : 0.20698}
{'[3, 1, 0, 2, 0, 3, 0, 1, 3, 0, 3, 26, 0, 0, 0, 1, 1, 1]' : 0.207087}
{'[3, 1, 0, 2, 0, 3, 0, 1, 3, 0, 3, 26, 0, 0, 0, 1, 1, 1]' : 0.207383}
{'[3, 1, 0, 2, 0, 3, 0, 1, 3, 0, 3, 26, 0, 0, 0, 1, 1, 1]' : 0.207263}
{'[3, 1, 0, 2, 0, 3, 0, 1, 3, 0, 3, 26, 0, 0, 0, 1, 1, 1]' : 0.207035}
{'[3, 1, 0, 2, 0, 3, 0, 1, 3, 0, 3, 26, 0, 0, 0, 1, 1, 1]' : 0.206986}
{'[3, 1, 0, 2, 0, 3, 0, 1, 3, 0, 3, 26, 0, 0, 0, 1, 1, 1]' : 0.20745}
{'[3, 1, 0, 2, 0, 3, 0, 1, 3, 0, 3, 26, 0, 0, 0, 1, 1, 1]' : 0.207363}
{'[3, 1, 0, 2, 0, 3, 0, 1, 3, 0, 3, 26, 0, 0, 0, 1, 1, 1]' : 0.207244}
{'[3, 1, 0, 2, 0, 3, 0, 1, 3, 0, 3, 26, 0, 0, 0, 1, 1, 1]' : 0.207037}
{'[3, 1, 0, 2, 0, 3, 0, 1, 3, 0, 3, 26, 0, 0, 0, 1, 1, 1]' : 0.207013}
{'[3, 1, 0, 2, 0, 3, 0, 1, 3, 0, 3, 26, 0, 0, 0, 1, 1, 1]' : 0.207226}
{'[3, 1, 0, 2, 0, 3, 0, 1, 3, 0, 3, 26, 0, 0, 0, 1, 1, 1]' : 0.207283}
{'[3, 1, 0, 2, 0, 3, 0, 1, 3, 0, 3, 26, 0, 0, 0, 1, 1, 1]' : 0.207575}
{'[3, 1, 0, 2, 0, 3, 0, 1, 3, 0, 3, 26, 0, 0, 0, 1, 1, 1]' : 0.207014}
{'[3, 1, 0, 2, 0, 3, 0, 1, 3, 0, 3, 26, 0, 0, 0, 1, 1, 1]' : 0.207409}
{'[3, 1, 0, 2, 0, 3, 0, 1, 3, 0, 3, 26, 0, 0, 0, 1, 1, 1]' : 0.207135}
{'[3, 1, 0, 2, 0, 3, 0, 1, 3, 0, 3, 26, 0, 0, 0, 1, 1, 1]' : 0.207141}
{'[3, 1, 0, 2, 0, 3, 0, 1, 3, 0, 3, 26, 0, 0, 0, 1, 1, 1]' : 0.207596}
{'[3, 1, 0, 2, 0, 3, 0, 1, 3, 0, 3, 26, 0, 0, 0, 1, 1, 1]' : 0.207192}
{'[3, 1, 0, 2, 0, 3, 0, 1, 3, 0, 3, 26, 0, 0, 0, 1, 1, 1]' : 0.207126}
{'[3, 1, 0, 2, 0, 3, 0, 1, 3, 0, 3, 26, 0, 0, 0, 1, 1, 1]' : 0.207242}
{'[3, 1, 0, 2, 0, 3, 0, 1, 3, 0, 3, 26, 0, 0, 0, 1, 1, 1]' : 0.207131}
{'[3, 1, 0, 2, 0, 3, 0, 1, 3, 0, 3, 26, 0, 0, 0, 1, 1, 1]' : 0.207737}

out:
 ["{'[3, 1, 0, 2, 0, 3, 0, 1, 3, 0, 3, 26, 0, 0, 0, 1, 1, 1]' : 0.249264}", "{'[3, 1, 0, 2, 0, 3, 0, 1, 3, 0, 3, 26, 0, 0, 0, 1, 1, 1]' : 0.246292}", "{'[3, 1, 0, 2, 0, 3, 0, 1, 3, 0, 3, 26, 0, 0, 0, 1, 1, 1]' : 0.213826}", "{'[3, 1, 0, 2, 0, 3, 0, 1, 3, 0, 3, 26, 0, 0, 0, 1, 1, 1]' : 0.208058}", "{'[3, 1, 0, 2, 0, 3, 0, 1, 3, 0, 3, 26, 0, 0, 0, 1, 1, 1]' : 0.207254}", "{'[3, 1, 0, 2, 0, 3, 0, 1, 3, 0, 3, 26, 0, 0, 0, 1, 1, 1]' : 0.207181}", "{'[3, 1, 0, 2, 0, 3, 0, 1, 3, 0, 3, 26, 0, 0, 0, 1, 1, 1]' : 0.20698}", "{'[3, 1, 0, 2, 0, 3, 0, 1, 3, 0, 3, 26, 0, 0, 0, 1, 1, 1]' : 0.207087}", "{'[3, 1, 0, 2, 0, 3, 0, 1, 3, 0, 3, 26, 0, 0, 0, 1, 1, 1]' : 0.207383}", "{'[3, 1, 0, 2, 0, 3, 0, 1, 3, 0, 3, 26, 0, 0, 0, 1, 1, 1]' : 0.207263}", "{'[3, 1, 0, 2, 0, 3, 0, 1, 3, 0, 3, 26, 0, 0, 0, 1, 1, 1]' : 0.207035}", "{'[3, 1, 0, 2, 0, 3, 0, 1, 3, 0, 3, 26, 0, 0, 0, 1, 1, 1]' : 0.206986}", "{'[3, 1, 0, 2, 0, 3, 0, 1, 3, 0, 3, 26, 0, 0, 0, 1, 1, 1]' : 0.20745}", "{'[3, 1, 0, 2, 0, 3, 0, 1, 3, 0, 3, 26, 0, 0, 0, 1, 1, 1]' : 0.207363}", "{'[3, 1, 0, 2, 0, 3, 0, 1, 3, 0, 3, 26, 0, 0, 0, 1, 1, 1]' : 0.207244}", "{'[3, 1, 0, 2, 0, 3, 0, 1, 3, 0, 3, 26, 0, 0, 0, 1, 1, 1]' : 0.207037}", "{'[3, 1, 0, 2, 0, 3, 0, 1, 3, 0, 3, 26, 0, 0, 0, 1, 1, 1]' : 0.207013}", "{'[3, 1, 0, 2, 0, 3, 0, 1, 3, 0, 3, 26, 0, 0, 0, 1, 1, 1]' : 0.207226}", "{'[3, 1, 0, 2, 0, 3, 0, 1, 3, 0, 3, 26, 0, 0, 0, 1, 1, 1]' : 0.207283}", "{'[3, 1, 0, 2, 0, 3, 0, 1, 3, 0, 3, 26, 0, 0, 0, 1, 1, 1]' : 0.207575}", "{'[3, 1, 0, 2, 0, 3, 0, 1, 3, 0, 3, 26, 0, 0, 0, 1, 1, 1]' : 0.207014}", "{'[3, 1, 0, 2, 0, 3, 0, 1, 3, 0, 3, 26, 0, 0, 0, 1, 1, 1]' : 0.207409}", "{'[3, 1, 0, 2, 0, 3, 0, 1, 3, 0, 3, 26, 0, 0, 0, 1, 1, 1]' : 0.207135}", "{'[3, 1, 0, 2, 0, 3, 0, 1, 3, 0, 3, 26, 0, 0, 0, 1, 1, 1]' : 0.207141}", "{'[3, 1, 0, 2, 0, 3, 0, 1, 3, 0, 3, 26, 0, 0, 0, 1, 1, 1]' : 0.207596}", "{'[3, 1, 0, 2, 0, 3, 0, 1, 3, 0, 3, 26, 0, 0, 0, 1, 1, 1]' : 0.207192}", "{'[3, 1, 0, 2, 0, 3, 0, 1, 3, 0, 3, 26, 0, 0, 0, 1, 1, 1]' : 0.207126}", "{'[3, 1, 0, 2, 0, 3, 0, 1, 3, 0, 3, 26, 0, 0, 0, 1, 1, 1]' : 0.207242}", "{'[3, 1, 0, 2, 0, 3, 0, 1, 3, 0, 3, 26, 0, 0, 0, 1, 1, 1]' : 0.207131}", "{'[3, 1, 0, 2, 0, 3, 0, 1, 3, 0, 3, 26, 0, 0, 0, 1, 1, 1]' : 0.207737}"]
returning from 'run': {'[3, 1, 0, 2, 0, 3, 0, 1, 3, 0, 3, 26, 0, 0, 0, 1, 1, 1]': ([0.249264, 0.246292, 0.213826, 0.208058, 0.207254, 0.207181, 0.20698, 0.207087, 0.207383, 0.207263, 0.207035, 0.206986, 0.20745, 0.207363, 0.207244, 0.207037, 0.207013, 0.207226, 0.207283, 0.207575, 0.207014, 0.207409, 0.207135, 0.207141, 0.207596, 0.207192, 0.207126, 0.207242, 0.207131, 0.207737], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 1, 0, 2, 0, 3, 0, 1, 3, 0, 3, 26, 0, 0, 0, 1, 1, 1]': ([0.249264, 0.246292, 0.213826, 0.208058, 0.207254, 0.207181, 0.20698, 0.207087, 0.207383, 0.207263, 0.207035, 0.206986, 0.20745, 0.207363, 0.207244, 0.207037, 0.207013, 0.207226, 0.207283, 0.207575, 0.207014, 0.207409, 0.207135, 0.207141, 0.207596, 0.207192, 0.207126, 0.207242, 0.207131, 0.207737], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	4
        Additions: 		574
        Multiplications: 	160
        Divisions: 		0
        Logical: 		0
        Reads: 			1019
        Writes: 		142
        Comparisons:		16
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest7.exe __orio_perftest7.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest7.exe  
Program Test Output: 
{'[6, 6, 0, 0, 0, 0, 1, 1, 15, 3, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.147898}
{'[6, 6, 0, 0, 0, 0, 1, 1, 15, 3, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.148999}
{'[6, 6, 0, 0, 0, 0, 1, 1, 15, 3, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.148902}
{'[6, 6, 0, 0, 0, 0, 1, 1, 15, 3, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.140782}
{'[6, 6, 0, 0, 0, 0, 1, 1, 15, 3, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.12566}
{'[6, 6, 0, 0, 0, 0, 1, 1, 15, 3, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.125823}
{'[6, 6, 0, 0, 0, 0, 1, 1, 15, 3, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.126835}
{'[6, 6, 0, 0, 0, 0, 1, 1, 15, 3, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.125882}
{'[6, 6, 0, 0, 0, 0, 1, 1, 15, 3, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.125662}
{'[6, 6, 0, 0, 0, 0, 1, 1, 15, 3, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.125895}
{'[6, 6, 0, 0, 0, 0, 1, 1, 15, 3, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.125781}
{'[6, 6, 0, 0, 0, 0, 1, 1, 15, 3, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.125805}
{'[6, 6, 0, 0, 0, 0, 1, 1, 15, 3, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.125527}
{'[6, 6, 0, 0, 0, 0, 1, 1, 15, 3, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.125979}
{'[6, 6, 0, 0, 0, 0, 1, 1, 15, 3, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.126127}
{'[6, 6, 0, 0, 0, 0, 1, 1, 15, 3, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.125943}
{'[6, 6, 0, 0, 0, 0, 1, 1, 15, 3, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.125455}
{'[6, 6, 0, 0, 0, 0, 1, 1, 15, 3, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.126001}
{'[6, 6, 0, 0, 0, 0, 1, 1, 15, 3, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.125534}
{'[6, 6, 0, 0, 0, 0, 1, 1, 15, 3, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.125516}
{'[6, 6, 0, 0, 0, 0, 1, 1, 15, 3, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.125483}
{'[6, 6, 0, 0, 0, 0, 1, 1, 15, 3, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.125451}
{'[6, 6, 0, 0, 0, 0, 1, 1, 15, 3, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.126278}
{'[6, 6, 0, 0, 0, 0, 1, 1, 15, 3, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.125942}
{'[6, 6, 0, 0, 0, 0, 1, 1, 15, 3, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.125974}
{'[6, 6, 0, 0, 0, 0, 1, 1, 15, 3, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.125645}
{'[6, 6, 0, 0, 0, 0, 1, 1, 15, 3, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.125545}
{'[6, 6, 0, 0, 0, 0, 1, 1, 15, 3, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.125785}
{'[6, 6, 0, 0, 0, 0, 1, 1, 15, 3, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.125885}
{'[6, 6, 0, 0, 0, 0, 1, 1, 15, 3, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.125492}

out:
 ["{'[6, 6, 0, 0, 0, 0, 1, 1, 15, 3, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.147898}", "{'[6, 6, 0, 0, 0, 0, 1, 1, 15, 3, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.148999}", "{'[6, 6, 0, 0, 0, 0, 1, 1, 15, 3, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.148902}", "{'[6, 6, 0, 0, 0, 0, 1, 1, 15, 3, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.140782}", "{'[6, 6, 0, 0, 0, 0, 1, 1, 15, 3, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.12566}", "{'[6, 6, 0, 0, 0, 0, 1, 1, 15, 3, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.125823}", "{'[6, 6, 0, 0, 0, 0, 1, 1, 15, 3, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.126835}", "{'[6, 6, 0, 0, 0, 0, 1, 1, 15, 3, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.125882}", "{'[6, 6, 0, 0, 0, 0, 1, 1, 15, 3, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.125662}", "{'[6, 6, 0, 0, 0, 0, 1, 1, 15, 3, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.125895}", "{'[6, 6, 0, 0, 0, 0, 1, 1, 15, 3, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.125781}", "{'[6, 6, 0, 0, 0, 0, 1, 1, 15, 3, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.125805}", "{'[6, 6, 0, 0, 0, 0, 1, 1, 15, 3, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.125527}", "{'[6, 6, 0, 0, 0, 0, 1, 1, 15, 3, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.125979}", "{'[6, 6, 0, 0, 0, 0, 1, 1, 15, 3, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.126127}", "{'[6, 6, 0, 0, 0, 0, 1, 1, 15, 3, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.125943}", "{'[6, 6, 0, 0, 0, 0, 1, 1, 15, 3, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.125455}", "{'[6, 6, 0, 0, 0, 0, 1, 1, 15, 3, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.126001}", "{'[6, 6, 0, 0, 0, 0, 1, 1, 15, 3, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.125534}", "{'[6, 6, 0, 0, 0, 0, 1, 1, 15, 3, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.125516}", "{'[6, 6, 0, 0, 0, 0, 1, 1, 15, 3, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.125483}", "{'[6, 6, 0, 0, 0, 0, 1, 1, 15, 3, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.125451}", "{'[6, 6, 0, 0, 0, 0, 1, 1, 15, 3, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.126278}", "{'[6, 6, 0, 0, 0, 0, 1, 1, 15, 3, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.125942}", "{'[6, 6, 0, 0, 0, 0, 1, 1, 15, 3, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.125974}", "{'[6, 6, 0, 0, 0, 0, 1, 1, 15, 3, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.125645}", "{'[6, 6, 0, 0, 0, 0, 1, 1, 15, 3, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.125545}", "{'[6, 6, 0, 0, 0, 0, 1, 1, 15, 3, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.125785}", "{'[6, 6, 0, 0, 0, 0, 1, 1, 15, 3, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.125885}", "{'[6, 6, 0, 0, 0, 0, 1, 1, 15, 3, 1, 0, 0, 1, 1, 0, 1, 0]' : 0.125492}"]
returning from 'run': {'[6, 6, 0, 0, 0, 0, 1, 1, 15, 3, 1, 0, 0, 1, 1, 0, 1, 0]': ([0.147898, 0.148999, 0.148902, 0.140782, 0.12566, 0.125823, 0.126835, 0.125882, 0.125662, 0.125895, 0.125781, 0.125805, 0.125527, 0.125979, 0.126127, 0.125943, 0.125455, 0.126001, 0.125534, 0.125516, 0.125483, 0.125451, 0.126278, 0.125942, 0.125974, 0.125645, 0.125545, 0.125785, 0.125885, 0.125492], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 0, 0, 0, 0, 1, 1, 15, 3, 1, 0, 0, 1, 1, 0, 1, 0]': ([0.147898, 0.148999, 0.148902, 0.140782, 0.12566, 0.125823, 0.126835, 0.125882, 0.125662, 0.125895, 0.125781, 0.125805, 0.125527, 0.125979, 0.126127, 0.125943, 0.125455, 0.126001, 0.125534, 0.125516, 0.125483, 0.125451, 0.126278, 0.125942, 0.125974, 0.125645, 0.125545, 0.125785, 0.125885, 0.125492], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	6
        Additions: 		9758
        Multiplications: 	2912
        Divisions: 		0
        Logical: 		0
        Reads: 			14772
        Writes: 		1532
        Comparisons:		20
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest8.exe __orio_perftest8.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest8.exe  
Program Test Output: 
{'[2, 6, 3, 2, 0, 6, 0, 0, 6, 26, 0, 17, 0, 2, 0, 0, 0, 0]' : 0.14667}
{'[2, 6, 3, 2, 0, 6, 0, 0, 6, 26, 0, 17, 0, 2, 0, 0, 0, 0]' : 0.146475}
{'[2, 6, 3, 2, 0, 6, 0, 0, 6, 26, 0, 17, 0, 2, 0, 0, 0, 0]' : 0.146331}
{'[2, 6, 3, 2, 0, 6, 0, 0, 6, 26, 0, 17, 0, 2, 0, 0, 0, 0]' : 0.146159}
{'[2, 6, 3, 2, 0, 6, 0, 0, 6, 26, 0, 17, 0, 2, 0, 0, 0, 0]' : 0.146493}
{'[2, 6, 3, 2, 0, 6, 0, 0, 6, 26, 0, 17, 0, 2, 0, 0, 0, 0]' : 0.14646}
{'[2, 6, 3, 2, 0, 6, 0, 0, 6, 26, 0, 17, 0, 2, 0, 0, 0, 0]' : 0.146128}
{'[2, 6, 3, 2, 0, 6, 0, 0, 6, 26, 0, 17, 0, 2, 0, 0, 0, 0]' : 0.147103}
{'[2, 6, 3, 2, 0, 6, 0, 0, 6, 26, 0, 17, 0, 2, 0, 0, 0, 0]' : 0.146419}
{'[2, 6, 3, 2, 0, 6, 0, 0, 6, 26, 0, 17, 0, 2, 0, 0, 0, 0]' : 0.146868}
{'[2, 6, 3, 2, 0, 6, 0, 0, 6, 26, 0, 17, 0, 2, 0, 0, 0, 0]' : 0.146412}
{'[2, 6, 3, 2, 0, 6, 0, 0, 6, 26, 0, 17, 0, 2, 0, 0, 0, 0]' : 0.146533}
{'[2, 6, 3, 2, 0, 6, 0, 0, 6, 26, 0, 17, 0, 2, 0, 0, 0, 0]' : 0.146921}
{'[2, 6, 3, 2, 0, 6, 0, 0, 6, 26, 0, 17, 0, 2, 0, 0, 0, 0]' : 0.146439}
{'[2, 6, 3, 2, 0, 6, 0, 0, 6, 26, 0, 17, 0, 2, 0, 0, 0, 0]' : 0.146743}
{'[2, 6, 3, 2, 0, 6, 0, 0, 6, 26, 0, 17, 0, 2, 0, 0, 0, 0]' : 0.146689}
{'[2, 6, 3, 2, 0, 6, 0, 0, 6, 26, 0, 17, 0, 2, 0, 0, 0, 0]' : 0.146583}
{'[2, 6, 3, 2, 0, 6, 0, 0, 6, 26, 0, 17, 0, 2, 0, 0, 0, 0]' : 0.146377}
{'[2, 6, 3, 2, 0, 6, 0, 0, 6, 26, 0, 17, 0, 2, 0, 0, 0, 0]' : 0.146513}
{'[2, 6, 3, 2, 0, 6, 0, 0, 6, 26, 0, 17, 0, 2, 0, 0, 0, 0]' : 0.146418}
{'[2, 6, 3, 2, 0, 6, 0, 0, 6, 26, 0, 17, 0, 2, 0, 0, 0, 0]' : 0.146945}
{'[2, 6, 3, 2, 0, 6, 0, 0, 6, 26, 0, 17, 0, 2, 0, 0, 0, 0]' : 0.146352}
{'[2, 6, 3, 2, 0, 6, 0, 0, 6, 26, 0, 17, 0, 2, 0, 0, 0, 0]' : 0.146807}
{'[2, 6, 3, 2, 0, 6, 0, 0, 6, 26, 0, 17, 0, 2, 0, 0, 0, 0]' : 0.146256}
{'[2, 6, 3, 2, 0, 6, 0, 0, 6, 26, 0, 17, 0, 2, 0, 0, 0, 0]' : 0.146307}
{'[2, 6, 3, 2, 0, 6, 0, 0, 6, 26, 0, 17, 0, 2, 0, 0, 0, 0]' : 0.146259}
{'[2, 6, 3, 2, 0, 6, 0, 0, 6, 26, 0, 17, 0, 2, 0, 0, 0, 0]' : 0.146011}
{'[2, 6, 3, 2, 0, 6, 0, 0, 6, 26, 0, 17, 0, 2, 0, 0, 0, 0]' : 0.14632}
{'[2, 6, 3, 2, 0, 6, 0, 0, 6, 26, 0, 17, 0, 2, 0, 0, 0, 0]' : 0.146225}
{'[2, 6, 3, 2, 0, 6, 0, 0, 6, 26, 0, 17, 0, 2, 0, 0, 0, 0]' : 0.146353}

out:
 ["{'[2, 6, 3, 2, 0, 6, 0, 0, 6, 26, 0, 17, 0, 2, 0, 0, 0, 0]' : 0.14667}", "{'[2, 6, 3, 2, 0, 6, 0, 0, 6, 26, 0, 17, 0, 2, 0, 0, 0, 0]' : 0.146475}", "{'[2, 6, 3, 2, 0, 6, 0, 0, 6, 26, 0, 17, 0, 2, 0, 0, 0, 0]' : 0.146331}", "{'[2, 6, 3, 2, 0, 6, 0, 0, 6, 26, 0, 17, 0, 2, 0, 0, 0, 0]' : 0.146159}", "{'[2, 6, 3, 2, 0, 6, 0, 0, 6, 26, 0, 17, 0, 2, 0, 0, 0, 0]' : 0.146493}", "{'[2, 6, 3, 2, 0, 6, 0, 0, 6, 26, 0, 17, 0, 2, 0, 0, 0, 0]' : 0.14646}", "{'[2, 6, 3, 2, 0, 6, 0, 0, 6, 26, 0, 17, 0, 2, 0, 0, 0, 0]' : 0.146128}", "{'[2, 6, 3, 2, 0, 6, 0, 0, 6, 26, 0, 17, 0, 2, 0, 0, 0, 0]' : 0.147103}", "{'[2, 6, 3, 2, 0, 6, 0, 0, 6, 26, 0, 17, 0, 2, 0, 0, 0, 0]' : 0.146419}", "{'[2, 6, 3, 2, 0, 6, 0, 0, 6, 26, 0, 17, 0, 2, 0, 0, 0, 0]' : 0.146868}", "{'[2, 6, 3, 2, 0, 6, 0, 0, 6, 26, 0, 17, 0, 2, 0, 0, 0, 0]' : 0.146412}", "{'[2, 6, 3, 2, 0, 6, 0, 0, 6, 26, 0, 17, 0, 2, 0, 0, 0, 0]' : 0.146533}", "{'[2, 6, 3, 2, 0, 6, 0, 0, 6, 26, 0, 17, 0, 2, 0, 0, 0, 0]' : 0.146921}", "{'[2, 6, 3, 2, 0, 6, 0, 0, 6, 26, 0, 17, 0, 2, 0, 0, 0, 0]' : 0.146439}", "{'[2, 6, 3, 2, 0, 6, 0, 0, 6, 26, 0, 17, 0, 2, 0, 0, 0, 0]' : 0.146743}", "{'[2, 6, 3, 2, 0, 6, 0, 0, 6, 26, 0, 17, 0, 2, 0, 0, 0, 0]' : 0.146689}", "{'[2, 6, 3, 2, 0, 6, 0, 0, 6, 26, 0, 17, 0, 2, 0, 0, 0, 0]' : 0.146583}", "{'[2, 6, 3, 2, 0, 6, 0, 0, 6, 26, 0, 17, 0, 2, 0, 0, 0, 0]' : 0.146377}", "{'[2, 6, 3, 2, 0, 6, 0, 0, 6, 26, 0, 17, 0, 2, 0, 0, 0, 0]' : 0.146513}", "{'[2, 6, 3, 2, 0, 6, 0, 0, 6, 26, 0, 17, 0, 2, 0, 0, 0, 0]' : 0.146418}", "{'[2, 6, 3, 2, 0, 6, 0, 0, 6, 26, 0, 17, 0, 2, 0, 0, 0, 0]' : 0.146945}", "{'[2, 6, 3, 2, 0, 6, 0, 0, 6, 26, 0, 17, 0, 2, 0, 0, 0, 0]' : 0.146352}", "{'[2, 6, 3, 2, 0, 6, 0, 0, 6, 26, 0, 17, 0, 2, 0, 0, 0, 0]' : 0.146807}", "{'[2, 6, 3, 2, 0, 6, 0, 0, 6, 26, 0, 17, 0, 2, 0, 0, 0, 0]' : 0.146256}", "{'[2, 6, 3, 2, 0, 6, 0, 0, 6, 26, 0, 17, 0, 2, 0, 0, 0, 0]' : 0.146307}", "{'[2, 6, 3, 2, 0, 6, 0, 0, 6, 26, 0, 17, 0, 2, 0, 0, 0, 0]' : 0.146259}", "{'[2, 6, 3, 2, 0, 6, 0, 0, 6, 26, 0, 17, 0, 2, 0, 0, 0, 0]' : 0.146011}", "{'[2, 6, 3, 2, 0, 6, 0, 0, 6, 26, 0, 17, 0, 2, 0, 0, 0, 0]' : 0.14632}", "{'[2, 6, 3, 2, 0, 6, 0, 0, 6, 26, 0, 17, 0, 2, 0, 0, 0, 0]' : 0.146225}", "{'[2, 6, 3, 2, 0, 6, 0, 0, 6, 26, 0, 17, 0, 2, 0, 0, 0, 0]' : 0.146353}"]
returning from 'run': {'[2, 6, 3, 2, 0, 6, 0, 0, 6, 26, 0, 17, 0, 2, 0, 0, 0, 0]': ([0.14667, 0.146475, 0.146331, 0.146159, 0.146493, 0.14646, 0.146128, 0.147103, 0.146419, 0.146868, 0.146412, 0.146533, 0.146921, 0.146439, 0.146743, 0.146689, 0.146583, 0.146377, 0.146513, 0.146418, 0.146945, 0.146352, 0.146807, 0.146256, 0.146307, 0.146259, 0.146011, 0.14632, 0.146225, 0.146353], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 6, 3, 2, 0, 6, 0, 0, 6, 26, 0, 17, 0, 2, 0, 0, 0, 0]': ([0.14667, 0.146475, 0.146331, 0.146159, 0.146493, 0.14646, 0.146128, 0.147103, 0.146419, 0.146868, 0.146412, 0.146533, 0.146921, 0.146439, 0.146743, 0.146689, 0.146583, 0.146377, 0.146513, 0.146418, 0.146945, 0.146352, 0.146807, 0.146256, 0.146307, 0.146259, 0.146011, 0.14632, 0.146225, 0.146353], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	25
        Max loop nest depth: 	5
        Additions: 		696
        Multiplications: 	288
        Divisions: 		0
        Logical: 		0
        Reads: 			1431
        Writes: 		274
        Comparisons:		25
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest9.exe __orio_perftest9.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest9.exe  
Program Test Output: 
{'[0, 0, 1, 3, 2, 4, 0, 1, 23, 0, 2, 2, 1, 1, 0, 1, 1, 0]' : 0.119491}
{'[0, 0, 1, 3, 2, 4, 0, 1, 23, 0, 2, 2, 1, 1, 0, 1, 1, 0]' : 0.119571}
{'[0, 0, 1, 3, 2, 4, 0, 1, 23, 0, 2, 2, 1, 1, 0, 1, 1, 0]' : 0.119247}
{'[0, 0, 1, 3, 2, 4, 0, 1, 23, 0, 2, 2, 1, 1, 0, 1, 1, 0]' : 0.119221}
{'[0, 0, 1, 3, 2, 4, 0, 1, 23, 0, 2, 2, 1, 1, 0, 1, 1, 0]' : 0.119215}
{'[0, 0, 1, 3, 2, 4, 0, 1, 23, 0, 2, 2, 1, 1, 0, 1, 1, 0]' : 0.119143}
{'[0, 0, 1, 3, 2, 4, 0, 1, 23, 0, 2, 2, 1, 1, 0, 1, 1, 0]' : 0.119145}
{'[0, 0, 1, 3, 2, 4, 0, 1, 23, 0, 2, 2, 1, 1, 0, 1, 1, 0]' : 0.119222}
{'[0, 0, 1, 3, 2, 4, 0, 1, 23, 0, 2, 2, 1, 1, 0, 1, 1, 0]' : 0.119317}
{'[0, 0, 1, 3, 2, 4, 0, 1, 23, 0, 2, 2, 1, 1, 0, 1, 1, 0]' : 0.119665}
{'[0, 0, 1, 3, 2, 4, 0, 1, 23, 0, 2, 2, 1, 1, 0, 1, 1, 0]' : 0.119178}
{'[0, 0, 1, 3, 2, 4, 0, 1, 23, 0, 2, 2, 1, 1, 0, 1, 1, 0]' : 0.119247}
{'[0, 0, 1, 3, 2, 4, 0, 1, 23, 0, 2, 2, 1, 1, 0, 1, 1, 0]' : 0.119163}
{'[0, 0, 1, 3, 2, 4, 0, 1, 23, 0, 2, 2, 1, 1, 0, 1, 1, 0]' : 0.119134}
{'[0, 0, 1, 3, 2, 4, 0, 1, 23, 0, 2, 2, 1, 1, 0, 1, 1, 0]' : 0.119438}
{'[0, 0, 1, 3, 2, 4, 0, 1, 23, 0, 2, 2, 1, 1, 0, 1, 1, 0]' : 0.119156}
{'[0, 0, 1, 3, 2, 4, 0, 1, 23, 0, 2, 2, 1, 1, 0, 1, 1, 0]' : 0.119386}
{'[0, 0, 1, 3, 2, 4, 0, 1, 23, 0, 2, 2, 1, 1, 0, 1, 1, 0]' : 0.119534}
{'[0, 0, 1, 3, 2, 4, 0, 1, 23, 0, 2, 2, 1, 1, 0, 1, 1, 0]' : 0.119743}
{'[0, 0, 1, 3, 2, 4, 0, 1, 23, 0, 2, 2, 1, 1, 0, 1, 1, 0]' : 0.11936}
{'[0, 0, 1, 3, 2, 4, 0, 1, 23, 0, 2, 2, 1, 1, 0, 1, 1, 0]' : 0.119624}
{'[0, 0, 1, 3, 2, 4, 0, 1, 23, 0, 2, 2, 1, 1, 0, 1, 1, 0]' : 0.119445}
{'[0, 0, 1, 3, 2, 4, 0, 1, 23, 0, 2, 2, 1, 1, 0, 1, 1, 0]' : 0.119301}
{'[0, 0, 1, 3, 2, 4, 0, 1, 23, 0, 2, 2, 1, 1, 0, 1, 1, 0]' : 0.11923}
{'[0, 0, 1, 3, 2, 4, 0, 1, 23, 0, 2, 2, 1, 1, 0, 1, 1, 0]' : 0.119257}
{'[0, 0, 1, 3, 2, 4, 0, 1, 23, 0, 2, 2, 1, 1, 0, 1, 1, 0]' : 0.119222}
{'[0, 0, 1, 3, 2, 4, 0, 1, 23, 0, 2, 2, 1, 1, 0, 1, 1, 0]' : 0.119775}
{'[0, 0, 1, 3, 2, 4, 0, 1, 23, 0, 2, 2, 1, 1, 0, 1, 1, 0]' : 0.119513}
{'[0, 0, 1, 3, 2, 4, 0, 1, 23, 0, 2, 2, 1, 1, 0, 1, 1, 0]' : 0.119315}
{'[0, 0, 1, 3, 2, 4, 0, 1, 23, 0, 2, 2, 1, 1, 0, 1, 1, 0]' : 0.119233}

out:
 ["{'[0, 0, 1, 3, 2, 4, 0, 1, 23, 0, 2, 2, 1, 1, 0, 1, 1, 0]' : 0.119491}", "{'[0, 0, 1, 3, 2, 4, 0, 1, 23, 0, 2, 2, 1, 1, 0, 1, 1, 0]' : 0.119571}", "{'[0, 0, 1, 3, 2, 4, 0, 1, 23, 0, 2, 2, 1, 1, 0, 1, 1, 0]' : 0.119247}", "{'[0, 0, 1, 3, 2, 4, 0, 1, 23, 0, 2, 2, 1, 1, 0, 1, 1, 0]' : 0.119221}", "{'[0, 0, 1, 3, 2, 4, 0, 1, 23, 0, 2, 2, 1, 1, 0, 1, 1, 0]' : 0.119215}", "{'[0, 0, 1, 3, 2, 4, 0, 1, 23, 0, 2, 2, 1, 1, 0, 1, 1, 0]' : 0.119143}", "{'[0, 0, 1, 3, 2, 4, 0, 1, 23, 0, 2, 2, 1, 1, 0, 1, 1, 0]' : 0.119145}", "{'[0, 0, 1, 3, 2, 4, 0, 1, 23, 0, 2, 2, 1, 1, 0, 1, 1, 0]' : 0.119222}", "{'[0, 0, 1, 3, 2, 4, 0, 1, 23, 0, 2, 2, 1, 1, 0, 1, 1, 0]' : 0.119317}", "{'[0, 0, 1, 3, 2, 4, 0, 1, 23, 0, 2, 2, 1, 1, 0, 1, 1, 0]' : 0.119665}", "{'[0, 0, 1, 3, 2, 4, 0, 1, 23, 0, 2, 2, 1, 1, 0, 1, 1, 0]' : 0.119178}", "{'[0, 0, 1, 3, 2, 4, 0, 1, 23, 0, 2, 2, 1, 1, 0, 1, 1, 0]' : 0.119247}", "{'[0, 0, 1, 3, 2, 4, 0, 1, 23, 0, 2, 2, 1, 1, 0, 1, 1, 0]' : 0.119163}", "{'[0, 0, 1, 3, 2, 4, 0, 1, 23, 0, 2, 2, 1, 1, 0, 1, 1, 0]' : 0.119134}", "{'[0, 0, 1, 3, 2, 4, 0, 1, 23, 0, 2, 2, 1, 1, 0, 1, 1, 0]' : 0.119438}", "{'[0, 0, 1, 3, 2, 4, 0, 1, 23, 0, 2, 2, 1, 1, 0, 1, 1, 0]' : 0.119156}", "{'[0, 0, 1, 3, 2, 4, 0, 1, 23, 0, 2, 2, 1, 1, 0, 1, 1, 0]' : 0.119386}", "{'[0, 0, 1, 3, 2, 4, 0, 1, 23, 0, 2, 2, 1, 1, 0, 1, 1, 0]' : 0.119534}", "{'[0, 0, 1, 3, 2, 4, 0, 1, 23, 0, 2, 2, 1, 1, 0, 1, 1, 0]' : 0.119743}", "{'[0, 0, 1, 3, 2, 4, 0, 1, 23, 0, 2, 2, 1, 1, 0, 1, 1, 0]' : 0.11936}", "{'[0, 0, 1, 3, 2, 4, 0, 1, 23, 0, 2, 2, 1, 1, 0, 1, 1, 0]' : 0.119624}", "{'[0, 0, 1, 3, 2, 4, 0, 1, 23, 0, 2, 2, 1, 1, 0, 1, 1, 0]' : 0.119445}", "{'[0, 0, 1, 3, 2, 4, 0, 1, 23, 0, 2, 2, 1, 1, 0, 1, 1, 0]' : 0.119301}", "{'[0, 0, 1, 3, 2, 4, 0, 1, 23, 0, 2, 2, 1, 1, 0, 1, 1, 0]' : 0.11923}", "{'[0, 0, 1, 3, 2, 4, 0, 1, 23, 0, 2, 2, 1, 1, 0, 1, 1, 0]' : 0.119257}", "{'[0, 0, 1, 3, 2, 4, 0, 1, 23, 0, 2, 2, 1, 1, 0, 1, 1, 0]' : 0.119222}", "{'[0, 0, 1, 3, 2, 4, 0, 1, 23, 0, 2, 2, 1, 1, 0, 1, 1, 0]' : 0.119775}", "{'[0, 0, 1, 3, 2, 4, 0, 1, 23, 0, 2, 2, 1, 1, 0, 1, 1, 0]' : 0.119513}", "{'[0, 0, 1, 3, 2, 4, 0, 1, 23, 0, 2, 2, 1, 1, 0, 1, 1, 0]' : 0.119315}", "{'[0, 0, 1, 3, 2, 4, 0, 1, 23, 0, 2, 2, 1, 1, 0, 1, 1, 0]' : 0.119233}"]
returning from 'run': {'[0, 0, 1, 3, 2, 4, 0, 1, 23, 0, 2, 2, 1, 1, 0, 1, 1, 0]': ([0.119491, 0.119571, 0.119247, 0.119221, 0.119215, 0.119143, 0.119145, 0.119222, 0.119317, 0.119665, 0.119178, 0.119247, 0.119163, 0.119134, 0.119438, 0.119156, 0.119386, 0.119534, 0.119743, 0.11936, 0.119624, 0.119445, 0.119301, 0.11923, 0.119257, 0.119222, 0.119775, 0.119513, 0.119315, 0.119233], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 1, 3, 2, 4, 0, 1, 23, 0, 2, 2, 1, 1, 0, 1, 1, 0]': ([0.119491, 0.119571, 0.119247, 0.119221, 0.119215, 0.119143, 0.119145, 0.119222, 0.119317, 0.119665, 0.119178, 0.119247, 0.119163, 0.119134, 0.119438, 0.119156, 0.119386, 0.119534, 0.119743, 0.11936, 0.119624, 0.119445, 0.119301, 0.11923, 0.119257, 0.119222, 0.119775, 0.119513, 0.119315, 0.119233], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	27
        Max loop nest depth: 	5
        Additions: 		808
        Multiplications: 	248
        Divisions: 		0
        Logical: 		0
        Reads: 			1501
        Writes: 		210
        Comparisons:		27
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest10.exe __orio_perftest10.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest10.exe  
Program Test Output: 
{'[0, 5, 5, 6, 6, 6, 0, 0, 23, 2, 12, 0, 0, 1, 1, 0, 1, 0]' : 0.137033}
{'[0, 5, 5, 6, 6, 6, 0, 0, 23, 2, 12, 0, 0, 1, 1, 0, 1, 0]' : 0.137175}
{'[0, 5, 5, 6, 6, 6, 0, 0, 23, 2, 12, 0, 0, 1, 1, 0, 1, 0]' : 0.136939}
{'[0, 5, 5, 6, 6, 6, 0, 0, 23, 2, 12, 0, 0, 1, 1, 0, 1, 0]' : 0.124845}
{'[0, 5, 5, 6, 6, 6, 0, 0, 23, 2, 12, 0, 0, 1, 1, 0, 1, 0]' : 0.116492}
{'[0, 5, 5, 6, 6, 6, 0, 0, 23, 2, 12, 0, 0, 1, 1, 0, 1, 0]' : 0.116581}
{'[0, 5, 5, 6, 6, 6, 0, 0, 23, 2, 12, 0, 0, 1, 1, 0, 1, 0]' : 0.116387}
{'[0, 5, 5, 6, 6, 6, 0, 0, 23, 2, 12, 0, 0, 1, 1, 0, 1, 0]' : 0.116442}
{'[0, 5, 5, 6, 6, 6, 0, 0, 23, 2, 12, 0, 0, 1, 1, 0, 1, 0]' : 0.116436}
{'[0, 5, 5, 6, 6, 6, 0, 0, 23, 2, 12, 0, 0, 1, 1, 0, 1, 0]' : 0.116925}
{'[0, 5, 5, 6, 6, 6, 0, 0, 23, 2, 12, 0, 0, 1, 1, 0, 1, 0]' : 0.116859}
{'[0, 5, 5, 6, 6, 6, 0, 0, 23, 2, 12, 0, 0, 1, 1, 0, 1, 0]' : 0.116627}
{'[0, 5, 5, 6, 6, 6, 0, 0, 23, 2, 12, 0, 0, 1, 1, 0, 1, 0]' : 0.116294}
{'[0, 5, 5, 6, 6, 6, 0, 0, 23, 2, 12, 0, 0, 1, 1, 0, 1, 0]' : 0.116481}
{'[0, 5, 5, 6, 6, 6, 0, 0, 23, 2, 12, 0, 0, 1, 1, 0, 1, 0]' : 0.116508}
{'[0, 5, 5, 6, 6, 6, 0, 0, 23, 2, 12, 0, 0, 1, 1, 0, 1, 0]' : 0.116545}
{'[0, 5, 5, 6, 6, 6, 0, 0, 23, 2, 12, 0, 0, 1, 1, 0, 1, 0]' : 0.116555}
{'[0, 5, 5, 6, 6, 6, 0, 0, 23, 2, 12, 0, 0, 1, 1, 0, 1, 0]' : 0.116405}
{'[0, 5, 5, 6, 6, 6, 0, 0, 23, 2, 12, 0, 0, 1, 1, 0, 1, 0]' : 0.116335}
{'[0, 5, 5, 6, 6, 6, 0, 0, 23, 2, 12, 0, 0, 1, 1, 0, 1, 0]' : 0.116698}
{'[0, 5, 5, 6, 6, 6, 0, 0, 23, 2, 12, 0, 0, 1, 1, 0, 1, 0]' : 0.116503}
{'[0, 5, 5, 6, 6, 6, 0, 0, 23, 2, 12, 0, 0, 1, 1, 0, 1, 0]' : 0.116246}
{'[0, 5, 5, 6, 6, 6, 0, 0, 23, 2, 12, 0, 0, 1, 1, 0, 1, 0]' : 0.116327}
{'[0, 5, 5, 6, 6, 6, 0, 0, 23, 2, 12, 0, 0, 1, 1, 0, 1, 0]' : 0.116704}
{'[0, 5, 5, 6, 6, 6, 0, 0, 23, 2, 12, 0, 0, 1, 1, 0, 1, 0]' : 0.116246}
{'[0, 5, 5, 6, 6, 6, 0, 0, 23, 2, 12, 0, 0, 1, 1, 0, 1, 0]' : 0.116401}
{'[0, 5, 5, 6, 6, 6, 0, 0, 23, 2, 12, 0, 0, 1, 1, 0, 1, 0]' : 0.116445}
{'[0, 5, 5, 6, 6, 6, 0, 0, 23, 2, 12, 0, 0, 1, 1, 0, 1, 0]' : 0.116456}
{'[0, 5, 5, 6, 6, 6, 0, 0, 23, 2, 12, 0, 0, 1, 1, 0, 1, 0]' : 0.116649}
{'[0, 5, 5, 6, 6, 6, 0, 0, 23, 2, 12, 0, 0, 1, 1, 0, 1, 0]' : 0.116646}

out:
 ["{'[0, 5, 5, 6, 6, 6, 0, 0, 23, 2, 12, 0, 0, 1, 1, 0, 1, 0]' : 0.137033}", "{'[0, 5, 5, 6, 6, 6, 0, 0, 23, 2, 12, 0, 0, 1, 1, 0, 1, 0]' : 0.137175}", "{'[0, 5, 5, 6, 6, 6, 0, 0, 23, 2, 12, 0, 0, 1, 1, 0, 1, 0]' : 0.136939}", "{'[0, 5, 5, 6, 6, 6, 0, 0, 23, 2, 12, 0, 0, 1, 1, 0, 1, 0]' : 0.124845}", "{'[0, 5, 5, 6, 6, 6, 0, 0, 23, 2, 12, 0, 0, 1, 1, 0, 1, 0]' : 0.116492}", "{'[0, 5, 5, 6, 6, 6, 0, 0, 23, 2, 12, 0, 0, 1, 1, 0, 1, 0]' : 0.116581}", "{'[0, 5, 5, 6, 6, 6, 0, 0, 23, 2, 12, 0, 0, 1, 1, 0, 1, 0]' : 0.116387}", "{'[0, 5, 5, 6, 6, 6, 0, 0, 23, 2, 12, 0, 0, 1, 1, 0, 1, 0]' : 0.116442}", "{'[0, 5, 5, 6, 6, 6, 0, 0, 23, 2, 12, 0, 0, 1, 1, 0, 1, 0]' : 0.116436}", "{'[0, 5, 5, 6, 6, 6, 0, 0, 23, 2, 12, 0, 0, 1, 1, 0, 1, 0]' : 0.116925}", "{'[0, 5, 5, 6, 6, 6, 0, 0, 23, 2, 12, 0, 0, 1, 1, 0, 1, 0]' : 0.116859}", "{'[0, 5, 5, 6, 6, 6, 0, 0, 23, 2, 12, 0, 0, 1, 1, 0, 1, 0]' : 0.116627}", "{'[0, 5, 5, 6, 6, 6, 0, 0, 23, 2, 12, 0, 0, 1, 1, 0, 1, 0]' : 0.116294}", "{'[0, 5, 5, 6, 6, 6, 0, 0, 23, 2, 12, 0, 0, 1, 1, 0, 1, 0]' : 0.116481}", "{'[0, 5, 5, 6, 6, 6, 0, 0, 23, 2, 12, 0, 0, 1, 1, 0, 1, 0]' : 0.116508}", "{'[0, 5, 5, 6, 6, 6, 0, 0, 23, 2, 12, 0, 0, 1, 1, 0, 1, 0]' : 0.116545}", "{'[0, 5, 5, 6, 6, 6, 0, 0, 23, 2, 12, 0, 0, 1, 1, 0, 1, 0]' : 0.116555}", "{'[0, 5, 5, 6, 6, 6, 0, 0, 23, 2, 12, 0, 0, 1, 1, 0, 1, 0]' : 0.116405}", "{'[0, 5, 5, 6, 6, 6, 0, 0, 23, 2, 12, 0, 0, 1, 1, 0, 1, 0]' : 0.116335}", "{'[0, 5, 5, 6, 6, 6, 0, 0, 23, 2, 12, 0, 0, 1, 1, 0, 1, 0]' : 0.116698}", "{'[0, 5, 5, 6, 6, 6, 0, 0, 23, 2, 12, 0, 0, 1, 1, 0, 1, 0]' : 0.116503}", "{'[0, 5, 5, 6, 6, 6, 0, 0, 23, 2, 12, 0, 0, 1, 1, 0, 1, 0]' : 0.116246}", "{'[0, 5, 5, 6, 6, 6, 0, 0, 23, 2, 12, 0, 0, 1, 1, 0, 1, 0]' : 0.116327}", "{'[0, 5, 5, 6, 6, 6, 0, 0, 23, 2, 12, 0, 0, 1, 1, 0, 1, 0]' : 0.116704}", "{'[0, 5, 5, 6, 6, 6, 0, 0, 23, 2, 12, 0, 0, 1, 1, 0, 1, 0]' : 0.116246}", "{'[0, 5, 5, 6, 6, 6, 0, 0, 23, 2, 12, 0, 0, 1, 1, 0, 1, 0]' : 0.116401}", "{'[0, 5, 5, 6, 6, 6, 0, 0, 23, 2, 12, 0, 0, 1, 1, 0, 1, 0]' : 0.116445}", "{'[0, 5, 5, 6, 6, 6, 0, 0, 23, 2, 12, 0, 0, 1, 1, 0, 1, 0]' : 0.116456}", "{'[0, 5, 5, 6, 6, 6, 0, 0, 23, 2, 12, 0, 0, 1, 1, 0, 1, 0]' : 0.116649}", "{'[0, 5, 5, 6, 6, 6, 0, 0, 23, 2, 12, 0, 0, 1, 1, 0, 1, 0]' : 0.116646}"]
returning from 'run': {'[0, 5, 5, 6, 6, 6, 0, 0, 23, 2, 12, 0, 0, 1, 1, 0, 1, 0]': ([0.137033, 0.137175, 0.136939, 0.124845, 0.116492, 0.116581, 0.116387, 0.116442, 0.116436, 0.116925, 0.116859, 0.116627, 0.116294, 0.116481, 0.116508, 0.116545, 0.116555, 0.116405, 0.116335, 0.116698, 0.116503, 0.116246, 0.116327, 0.116704, 0.116246, 0.116401, 0.116445, 0.116456, 0.116649, 0.116646], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 5, 5, 6, 6, 6, 0, 0, 23, 2, 12, 0, 0, 1, 1, 0, 1, 0]': ([0.137033, 0.137175, 0.136939, 0.124845, 0.116492, 0.116581, 0.116387, 0.116442, 0.116436, 0.116925, 0.116859, 0.116627, 0.116294, 0.116481, 0.116508, 0.116545, 0.116555, 0.116405, 0.116335, 0.116698, 0.116503, 0.116246, 0.116327, 0.116704, 0.116246, 0.116401, 0.116445, 0.116456, 0.116649, 0.116646], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	5
        Additions: 		4200
        Multiplications: 	2046
        Divisions: 		0
        Logical: 		0
        Reads: 			7741
        Writes: 		1177
        Comparisons:		22
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest11.exe __orio_perftest11.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest11.exe  
Program Test Output: 
{'[4, 1, 6, 0, 4, 0, 1, 1, 0, 0, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.182744}
{'[4, 1, 6, 0, 4, 0, 1, 1, 0, 0, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.184871}
{'[4, 1, 6, 0, 4, 0, 1, 1, 0, 0, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.183184}
{'[4, 1, 6, 0, 4, 0, 1, 1, 0, 0, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.182571}
{'[4, 1, 6, 0, 4, 0, 1, 1, 0, 0, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.182408}
{'[4, 1, 6, 0, 4, 0, 1, 1, 0, 0, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.182534}
{'[4, 1, 6, 0, 4, 0, 1, 1, 0, 0, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.183632}
{'[4, 1, 6, 0, 4, 0, 1, 1, 0, 0, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.1823}
{'[4, 1, 6, 0, 4, 0, 1, 1, 0, 0, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.182218}
{'[4, 1, 6, 0, 4, 0, 1, 1, 0, 0, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.183196}
{'[4, 1, 6, 0, 4, 0, 1, 1, 0, 0, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.182768}
{'[4, 1, 6, 0, 4, 0, 1, 1, 0, 0, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.182327}
{'[4, 1, 6, 0, 4, 0, 1, 1, 0, 0, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.182549}
{'[4, 1, 6, 0, 4, 0, 1, 1, 0, 0, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.182138}
{'[4, 1, 6, 0, 4, 0, 1, 1, 0, 0, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.182704}
{'[4, 1, 6, 0, 4, 0, 1, 1, 0, 0, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.183609}
{'[4, 1, 6, 0, 4, 0, 1, 1, 0, 0, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.182613}
{'[4, 1, 6, 0, 4, 0, 1, 1, 0, 0, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.181869}
{'[4, 1, 6, 0, 4, 0, 1, 1, 0, 0, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.182283}
{'[4, 1, 6, 0, 4, 0, 1, 1, 0, 0, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.181342}
{'[4, 1, 6, 0, 4, 0, 1, 1, 0, 0, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.181217}
{'[4, 1, 6, 0, 4, 0, 1, 1, 0, 0, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.183006}
{'[4, 1, 6, 0, 4, 0, 1, 1, 0, 0, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.18321}
{'[4, 1, 6, 0, 4, 0, 1, 1, 0, 0, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.18325}
{'[4, 1, 6, 0, 4, 0, 1, 1, 0, 0, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.182072}
{'[4, 1, 6, 0, 4, 0, 1, 1, 0, 0, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.186066}
{'[4, 1, 6, 0, 4, 0, 1, 1, 0, 0, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.1828}
{'[4, 1, 6, 0, 4, 0, 1, 1, 0, 0, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.183886}
{'[4, 1, 6, 0, 4, 0, 1, 1, 0, 0, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.183313}
{'[4, 1, 6, 0, 4, 0, 1, 1, 0, 0, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.180897}

out:
 ["{'[4, 1, 6, 0, 4, 0, 1, 1, 0, 0, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.182744}", "{'[4, 1, 6, 0, 4, 0, 1, 1, 0, 0, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.184871}", "{'[4, 1, 6, 0, 4, 0, 1, 1, 0, 0, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.183184}", "{'[4, 1, 6, 0, 4, 0, 1, 1, 0, 0, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.182571}", "{'[4, 1, 6, 0, 4, 0, 1, 1, 0, 0, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.182408}", "{'[4, 1, 6, 0, 4, 0, 1, 1, 0, 0, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.182534}", "{'[4, 1, 6, 0, 4, 0, 1, 1, 0, 0, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.183632}", "{'[4, 1, 6, 0, 4, 0, 1, 1, 0, 0, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.1823}", "{'[4, 1, 6, 0, 4, 0, 1, 1, 0, 0, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.182218}", "{'[4, 1, 6, 0, 4, 0, 1, 1, 0, 0, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.183196}", "{'[4, 1, 6, 0, 4, 0, 1, 1, 0, 0, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.182768}", "{'[4, 1, 6, 0, 4, 0, 1, 1, 0, 0, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.182327}", "{'[4, 1, 6, 0, 4, 0, 1, 1, 0, 0, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.182549}", "{'[4, 1, 6, 0, 4, 0, 1, 1, 0, 0, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.182138}", "{'[4, 1, 6, 0, 4, 0, 1, 1, 0, 0, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.182704}", "{'[4, 1, 6, 0, 4, 0, 1, 1, 0, 0, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.183609}", "{'[4, 1, 6, 0, 4, 0, 1, 1, 0, 0, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.182613}", "{'[4, 1, 6, 0, 4, 0, 1, 1, 0, 0, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.181869}", "{'[4, 1, 6, 0, 4, 0, 1, 1, 0, 0, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.182283}", "{'[4, 1, 6, 0, 4, 0, 1, 1, 0, 0, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.181342}", "{'[4, 1, 6, 0, 4, 0, 1, 1, 0, 0, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.181217}", "{'[4, 1, 6, 0, 4, 0, 1, 1, 0, 0, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.183006}", "{'[4, 1, 6, 0, 4, 0, 1, 1, 0, 0, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.18321}", "{'[4, 1, 6, 0, 4, 0, 1, 1, 0, 0, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.18325}", "{'[4, 1, 6, 0, 4, 0, 1, 1, 0, 0, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.182072}", "{'[4, 1, 6, 0, 4, 0, 1, 1, 0, 0, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.186066}", "{'[4, 1, 6, 0, 4, 0, 1, 1, 0, 0, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.1828}", "{'[4, 1, 6, 0, 4, 0, 1, 1, 0, 0, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.183886}", "{'[4, 1, 6, 0, 4, 0, 1, 1, 0, 0, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.183313}", "{'[4, 1, 6, 0, 4, 0, 1, 1, 0, 0, 28, 0, 2, 0, 0, 1, 1, 0]' : 0.180897}"]
returning from 'run': {'[4, 1, 6, 0, 4, 0, 1, 1, 0, 0, 28, 0, 2, 0, 0, 1, 1, 0]': ([0.182744, 0.184871, 0.183184, 0.182571, 0.182408, 0.182534, 0.183632, 0.1823, 0.182218, 0.183196, 0.182768, 0.182327, 0.182549, 0.182138, 0.182704, 0.183609, 0.182613, 0.181869, 0.182283, 0.181342, 0.181217, 0.183006, 0.18321, 0.18325, 0.182072, 0.186066, 0.1828, 0.183886, 0.183313, 0.180897], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 1, 6, 0, 4, 0, 1, 1, 0, 0, 28, 0, 2, 0, 0, 1, 1, 0]': ([0.182744, 0.184871, 0.183184, 0.182571, 0.182408, 0.182534, 0.183632, 0.1823, 0.182218, 0.183196, 0.182768, 0.182327, 0.182549, 0.182138, 0.182704, 0.183609, 0.182613, 0.181869, 0.182283, 0.181342, 0.181217, 0.183006, 0.18321, 0.18325, 0.182072, 0.186066, 0.1828, 0.183886, 0.183313, 0.180897], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	51
        Max loop nest depth: 	6
        Additions: 		5451
        Multiplications: 	2640
        Divisions: 		0
        Logical: 		0
        Reads: 			10285
        Writes: 		1640
        Comparisons:		51
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest12.exe __orio_perftest12.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest12.exe  
Program Test Output: 
{'[6, 3, 2, 5, 1, 6, 0, 1, 10, 10, 27, 0, 2, 0, 0, 1, 1, 1]' : 0.209057}
{'[6, 3, 2, 5, 1, 6, 0, 1, 10, 10, 27, 0, 2, 0, 0, 1, 1, 1]' : 0.210375}
{'[6, 3, 2, 5, 1, 6, 0, 1, 10, 10, 27, 0, 2, 0, 0, 1, 1, 1]' : 0.208204}
{'[6, 3, 2, 5, 1, 6, 0, 1, 10, 10, 27, 0, 2, 0, 0, 1, 1, 1]' : 0.210222}
{'[6, 3, 2, 5, 1, 6, 0, 1, 10, 10, 27, 0, 2, 0, 0, 1, 1, 1]' : 0.208657}
{'[6, 3, 2, 5, 1, 6, 0, 1, 10, 10, 27, 0, 2, 0, 0, 1, 1, 1]' : 0.208448}
{'[6, 3, 2, 5, 1, 6, 0, 1, 10, 10, 27, 0, 2, 0, 0, 1, 1, 1]' : 0.211295}
{'[6, 3, 2, 5, 1, 6, 0, 1, 10, 10, 27, 0, 2, 0, 0, 1, 1, 1]' : 0.211474}
{'[6, 3, 2, 5, 1, 6, 0, 1, 10, 10, 27, 0, 2, 0, 0, 1, 1, 1]' : 0.208746}
{'[6, 3, 2, 5, 1, 6, 0, 1, 10, 10, 27, 0, 2, 0, 0, 1, 1, 1]' : 0.210362}
{'[6, 3, 2, 5, 1, 6, 0, 1, 10, 10, 27, 0, 2, 0, 0, 1, 1, 1]' : 0.207893}
{'[6, 3, 2, 5, 1, 6, 0, 1, 10, 10, 27, 0, 2, 0, 0, 1, 1, 1]' : 0.209568}
{'[6, 3, 2, 5, 1, 6, 0, 1, 10, 10, 27, 0, 2, 0, 0, 1, 1, 1]' : 0.207742}
{'[6, 3, 2, 5, 1, 6, 0, 1, 10, 10, 27, 0, 2, 0, 0, 1, 1, 1]' : 0.208711}
{'[6, 3, 2, 5, 1, 6, 0, 1, 10, 10, 27, 0, 2, 0, 0, 1, 1, 1]' : 0.210312}
{'[6, 3, 2, 5, 1, 6, 0, 1, 10, 10, 27, 0, 2, 0, 0, 1, 1, 1]' : 0.21018}
{'[6, 3, 2, 5, 1, 6, 0, 1, 10, 10, 27, 0, 2, 0, 0, 1, 1, 1]' : 0.208413}
{'[6, 3, 2, 5, 1, 6, 0, 1, 10, 10, 27, 0, 2, 0, 0, 1, 1, 1]' : 0.208707}
{'[6, 3, 2, 5, 1, 6, 0, 1, 10, 10, 27, 0, 2, 0, 0, 1, 1, 1]' : 0.20687}
{'[6, 3, 2, 5, 1, 6, 0, 1, 10, 10, 27, 0, 2, 0, 0, 1, 1, 1]' : 0.209653}
{'[6, 3, 2, 5, 1, 6, 0, 1, 10, 10, 27, 0, 2, 0, 0, 1, 1, 1]' : 0.209097}
{'[6, 3, 2, 5, 1, 6, 0, 1, 10, 10, 27, 0, 2, 0, 0, 1, 1, 1]' : 0.209655}
{'[6, 3, 2, 5, 1, 6, 0, 1, 10, 10, 27, 0, 2, 0, 0, 1, 1, 1]' : 0.207893}
{'[6, 3, 2, 5, 1, 6, 0, 1, 10, 10, 27, 0, 2, 0, 0, 1, 1, 1]' : 0.210004}
{'[6, 3, 2, 5, 1, 6, 0, 1, 10, 10, 27, 0, 2, 0, 0, 1, 1, 1]' : 0.209595}
{'[6, 3, 2, 5, 1, 6, 0, 1, 10, 10, 27, 0, 2, 0, 0, 1, 1, 1]' : 0.210202}
{'[6, 3, 2, 5, 1, 6, 0, 1, 10, 10, 27, 0, 2, 0, 0, 1, 1, 1]' : 0.20763}
{'[6, 3, 2, 5, 1, 6, 0, 1, 10, 10, 27, 0, 2, 0, 0, 1, 1, 1]' : 0.208348}
{'[6, 3, 2, 5, 1, 6, 0, 1, 10, 10, 27, 0, 2, 0, 0, 1, 1, 1]' : 0.209204}
{'[6, 3, 2, 5, 1, 6, 0, 1, 10, 10, 27, 0, 2, 0, 0, 1, 1, 1]' : 0.209407}

out:
 ["{'[6, 3, 2, 5, 1, 6, 0, 1, 10, 10, 27, 0, 2, 0, 0, 1, 1, 1]' : 0.209057}", "{'[6, 3, 2, 5, 1, 6, 0, 1, 10, 10, 27, 0, 2, 0, 0, 1, 1, 1]' : 0.210375}", "{'[6, 3, 2, 5, 1, 6, 0, 1, 10, 10, 27, 0, 2, 0, 0, 1, 1, 1]' : 0.208204}", "{'[6, 3, 2, 5, 1, 6, 0, 1, 10, 10, 27, 0, 2, 0, 0, 1, 1, 1]' : 0.210222}", "{'[6, 3, 2, 5, 1, 6, 0, 1, 10, 10, 27, 0, 2, 0, 0, 1, 1, 1]' : 0.208657}", "{'[6, 3, 2, 5, 1, 6, 0, 1, 10, 10, 27, 0, 2, 0, 0, 1, 1, 1]' : 0.208448}", "{'[6, 3, 2, 5, 1, 6, 0, 1, 10, 10, 27, 0, 2, 0, 0, 1, 1, 1]' : 0.211295}", "{'[6, 3, 2, 5, 1, 6, 0, 1, 10, 10, 27, 0, 2, 0, 0, 1, 1, 1]' : 0.211474}", "{'[6, 3, 2, 5, 1, 6, 0, 1, 10, 10, 27, 0, 2, 0, 0, 1, 1, 1]' : 0.208746}", "{'[6, 3, 2, 5, 1, 6, 0, 1, 10, 10, 27, 0, 2, 0, 0, 1, 1, 1]' : 0.210362}", "{'[6, 3, 2, 5, 1, 6, 0, 1, 10, 10, 27, 0, 2, 0, 0, 1, 1, 1]' : 0.207893}", "{'[6, 3, 2, 5, 1, 6, 0, 1, 10, 10, 27, 0, 2, 0, 0, 1, 1, 1]' : 0.209568}", "{'[6, 3, 2, 5, 1, 6, 0, 1, 10, 10, 27, 0, 2, 0, 0, 1, 1, 1]' : 0.207742}", "{'[6, 3, 2, 5, 1, 6, 0, 1, 10, 10, 27, 0, 2, 0, 0, 1, 1, 1]' : 0.208711}", "{'[6, 3, 2, 5, 1, 6, 0, 1, 10, 10, 27, 0, 2, 0, 0, 1, 1, 1]' : 0.210312}", "{'[6, 3, 2, 5, 1, 6, 0, 1, 10, 10, 27, 0, 2, 0, 0, 1, 1, 1]' : 0.21018}", "{'[6, 3, 2, 5, 1, 6, 0, 1, 10, 10, 27, 0, 2, 0, 0, 1, 1, 1]' : 0.208413}", "{'[6, 3, 2, 5, 1, 6, 0, 1, 10, 10, 27, 0, 2, 0, 0, 1, 1, 1]' : 0.208707}", "{'[6, 3, 2, 5, 1, 6, 0, 1, 10, 10, 27, 0, 2, 0, 0, 1, 1, 1]' : 0.20687}", "{'[6, 3, 2, 5, 1, 6, 0, 1, 10, 10, 27, 0, 2, 0, 0, 1, 1, 1]' : 0.209653}", "{'[6, 3, 2, 5, 1, 6, 0, 1, 10, 10, 27, 0, 2, 0, 0, 1, 1, 1]' : 0.209097}", "{'[6, 3, 2, 5, 1, 6, 0, 1, 10, 10, 27, 0, 2, 0, 0, 1, 1, 1]' : 0.209655}", "{'[6, 3, 2, 5, 1, 6, 0, 1, 10, 10, 27, 0, 2, 0, 0, 1, 1, 1]' : 0.207893}", "{'[6, 3, 2, 5, 1, 6, 0, 1, 10, 10, 27, 0, 2, 0, 0, 1, 1, 1]' : 0.210004}", "{'[6, 3, 2, 5, 1, 6, 0, 1, 10, 10, 27, 0, 2, 0, 0, 1, 1, 1]' : 0.209595}", "{'[6, 3, 2, 5, 1, 6, 0, 1, 10, 10, 27, 0, 2, 0, 0, 1, 1, 1]' : 0.210202}", "{'[6, 3, 2, 5, 1, 6, 0, 1, 10, 10, 27, 0, 2, 0, 0, 1, 1, 1]' : 0.20763}", "{'[6, 3, 2, 5, 1, 6, 0, 1, 10, 10, 27, 0, 2, 0, 0, 1, 1, 1]' : 0.208348}", "{'[6, 3, 2, 5, 1, 6, 0, 1, 10, 10, 27, 0, 2, 0, 0, 1, 1, 1]' : 0.209204}", "{'[6, 3, 2, 5, 1, 6, 0, 1, 10, 10, 27, 0, 2, 0, 0, 1, 1, 1]' : 0.209407}"]
returning from 'run': {'[6, 3, 2, 5, 1, 6, 0, 1, 10, 10, 27, 0, 2, 0, 0, 1, 1, 1]': ([0.209057, 0.210375, 0.208204, 0.210222, 0.208657, 0.208448, 0.211295, 0.211474, 0.208746, 0.210362, 0.207893, 0.209568, 0.207742, 0.208711, 0.210312, 0.21018, 0.208413, 0.208707, 0.20687, 0.209653, 0.209097, 0.209655, 0.207893, 0.210004, 0.209595, 0.210202, 0.20763, 0.208348, 0.209204, 0.209407], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 3, 2, 5, 1, 6, 0, 1, 10, 10, 27, 0, 2, 0, 0, 1, 1, 1]': ([0.209057, 0.210375, 0.208204, 0.210222, 0.208657, 0.208448, 0.211295, 0.211474, 0.208746, 0.210362, 0.207893, 0.209568, 0.207742, 0.208711, 0.210312, 0.21018, 0.208413, 0.208707, 0.20687, 0.209653, 0.209097, 0.209655, 0.207893, 0.210004, 0.209595, 0.210202, 0.20763, 0.208348, 0.209204, 0.209407], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	6
        Additions: 		326
        Multiplications: 	128
        Divisions: 		0
        Logical: 		0
        Reads: 			736
        Writes: 		96
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest13.exe __orio_perftest13.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest13.exe  
Program Test Output: 
{'[6, 3, 0, 6, 3, 4, 0, 0, 2, 0, 29, 0, 0, 0, 2, 0, 1, 0]' : 0.207055}
{'[6, 3, 0, 6, 3, 4, 0, 0, 2, 0, 29, 0, 0, 0, 2, 0, 1, 0]' : 0.207}
{'[6, 3, 0, 6, 3, 4, 0, 0, 2, 0, 29, 0, 0, 0, 2, 0, 1, 0]' : 0.183391}
{'[6, 3, 0, 6, 3, 4, 0, 0, 2, 0, 29, 0, 0, 0, 2, 0, 1, 0]' : 0.172595}
{'[6, 3, 0, 6, 3, 4, 0, 0, 2, 0, 29, 0, 0, 0, 2, 0, 1, 0]' : 0.172693}
{'[6, 3, 0, 6, 3, 4, 0, 0, 2, 0, 29, 0, 0, 0, 2, 0, 1, 0]' : 0.172554}
{'[6, 3, 0, 6, 3, 4, 0, 0, 2, 0, 29, 0, 0, 0, 2, 0, 1, 0]' : 0.17247}
{'[6, 3, 0, 6, 3, 4, 0, 0, 2, 0, 29, 0, 0, 0, 2, 0, 1, 0]' : 0.172544}
{'[6, 3, 0, 6, 3, 4, 0, 0, 2, 0, 29, 0, 0, 0, 2, 0, 1, 0]' : 0.173101}
{'[6, 3, 0, 6, 3, 4, 0, 0, 2, 0, 29, 0, 0, 0, 2, 0, 1, 0]' : 0.172942}
{'[6, 3, 0, 6, 3, 4, 0, 0, 2, 0, 29, 0, 0, 0, 2, 0, 1, 0]' : 0.172782}
{'[6, 3, 0, 6, 3, 4, 0, 0, 2, 0, 29, 0, 0, 0, 2, 0, 1, 0]' : 0.172627}
{'[6, 3, 0, 6, 3, 4, 0, 0, 2, 0, 29, 0, 0, 0, 2, 0, 1, 0]' : 0.172748}
{'[6, 3, 0, 6, 3, 4, 0, 0, 2, 0, 29, 0, 0, 0, 2, 0, 1, 0]' : 0.172652}
{'[6, 3, 0, 6, 3, 4, 0, 0, 2, 0, 29, 0, 0, 0, 2, 0, 1, 0]' : 0.173035}
{'[6, 3, 0, 6, 3, 4, 0, 0, 2, 0, 29, 0, 0, 0, 2, 0, 1, 0]' : 0.172905}
{'[6, 3, 0, 6, 3, 4, 0, 0, 2, 0, 29, 0, 0, 0, 2, 0, 1, 0]' : 0.172573}
{'[6, 3, 0, 6, 3, 4, 0, 0, 2, 0, 29, 0, 0, 0, 2, 0, 1, 0]' : 0.172556}
{'[6, 3, 0, 6, 3, 4, 0, 0, 2, 0, 29, 0, 0, 0, 2, 0, 1, 0]' : 0.173041}
{'[6, 3, 0, 6, 3, 4, 0, 0, 2, 0, 29, 0, 0, 0, 2, 0, 1, 0]' : 0.172926}
{'[6, 3, 0, 6, 3, 4, 0, 0, 2, 0, 29, 0, 0, 0, 2, 0, 1, 0]' : 0.17278}
{'[6, 3, 0, 6, 3, 4, 0, 0, 2, 0, 29, 0, 0, 0, 2, 0, 1, 0]' : 0.172825}
{'[6, 3, 0, 6, 3, 4, 0, 0, 2, 0, 29, 0, 0, 0, 2, 0, 1, 0]' : 0.17261}
{'[6, 3, 0, 6, 3, 4, 0, 0, 2, 0, 29, 0, 0, 0, 2, 0, 1, 0]' : 0.172624}
{'[6, 3, 0, 6, 3, 4, 0, 0, 2, 0, 29, 0, 0, 0, 2, 0, 1, 0]' : 0.172799}
{'[6, 3, 0, 6, 3, 4, 0, 0, 2, 0, 29, 0, 0, 0, 2, 0, 1, 0]' : 0.172694}
{'[6, 3, 0, 6, 3, 4, 0, 0, 2, 0, 29, 0, 0, 0, 2, 0, 1, 0]' : 0.172775}
{'[6, 3, 0, 6, 3, 4, 0, 0, 2, 0, 29, 0, 0, 0, 2, 0, 1, 0]' : 0.173564}
{'[6, 3, 0, 6, 3, 4, 0, 0, 2, 0, 29, 0, 0, 0, 2, 0, 1, 0]' : 0.172579}
{'[6, 3, 0, 6, 3, 4, 0, 0, 2, 0, 29, 0, 0, 0, 2, 0, 1, 0]' : 0.172732}

out:
 ["{'[6, 3, 0, 6, 3, 4, 0, 0, 2, 0, 29, 0, 0, 0, 2, 0, 1, 0]' : 0.207055}", "{'[6, 3, 0, 6, 3, 4, 0, 0, 2, 0, 29, 0, 0, 0, 2, 0, 1, 0]' : 0.207}", "{'[6, 3, 0, 6, 3, 4, 0, 0, 2, 0, 29, 0, 0, 0, 2, 0, 1, 0]' : 0.183391}", "{'[6, 3, 0, 6, 3, 4, 0, 0, 2, 0, 29, 0, 0, 0, 2, 0, 1, 0]' : 0.172595}", "{'[6, 3, 0, 6, 3, 4, 0, 0, 2, 0, 29, 0, 0, 0, 2, 0, 1, 0]' : 0.172693}", "{'[6, 3, 0, 6, 3, 4, 0, 0, 2, 0, 29, 0, 0, 0, 2, 0, 1, 0]' : 0.172554}", "{'[6, 3, 0, 6, 3, 4, 0, 0, 2, 0, 29, 0, 0, 0, 2, 0, 1, 0]' : 0.17247}", "{'[6, 3, 0, 6, 3, 4, 0, 0, 2, 0, 29, 0, 0, 0, 2, 0, 1, 0]' : 0.172544}", "{'[6, 3, 0, 6, 3, 4, 0, 0, 2, 0, 29, 0, 0, 0, 2, 0, 1, 0]' : 0.173101}", "{'[6, 3, 0, 6, 3, 4, 0, 0, 2, 0, 29, 0, 0, 0, 2, 0, 1, 0]' : 0.172942}", "{'[6, 3, 0, 6, 3, 4, 0, 0, 2, 0, 29, 0, 0, 0, 2, 0, 1, 0]' : 0.172782}", "{'[6, 3, 0, 6, 3, 4, 0, 0, 2, 0, 29, 0, 0, 0, 2, 0, 1, 0]' : 0.172627}", "{'[6, 3, 0, 6, 3, 4, 0, 0, 2, 0, 29, 0, 0, 0, 2, 0, 1, 0]' : 0.172748}", "{'[6, 3, 0, 6, 3, 4, 0, 0, 2, 0, 29, 0, 0, 0, 2, 0, 1, 0]' : 0.172652}", "{'[6, 3, 0, 6, 3, 4, 0, 0, 2, 0, 29, 0, 0, 0, 2, 0, 1, 0]' : 0.173035}", "{'[6, 3, 0, 6, 3, 4, 0, 0, 2, 0, 29, 0, 0, 0, 2, 0, 1, 0]' : 0.172905}", "{'[6, 3, 0, 6, 3, 4, 0, 0, 2, 0, 29, 0, 0, 0, 2, 0, 1, 0]' : 0.172573}", "{'[6, 3, 0, 6, 3, 4, 0, 0, 2, 0, 29, 0, 0, 0, 2, 0, 1, 0]' : 0.172556}", "{'[6, 3, 0, 6, 3, 4, 0, 0, 2, 0, 29, 0, 0, 0, 2, 0, 1, 0]' : 0.173041}", "{'[6, 3, 0, 6, 3, 4, 0, 0, 2, 0, 29, 0, 0, 0, 2, 0, 1, 0]' : 0.172926}", "{'[6, 3, 0, 6, 3, 4, 0, 0, 2, 0, 29, 0, 0, 0, 2, 0, 1, 0]' : 0.17278}", "{'[6, 3, 0, 6, 3, 4, 0, 0, 2, 0, 29, 0, 0, 0, 2, 0, 1, 0]' : 0.172825}", "{'[6, 3, 0, 6, 3, 4, 0, 0, 2, 0, 29, 0, 0, 0, 2, 0, 1, 0]' : 0.17261}", "{'[6, 3, 0, 6, 3, 4, 0, 0, 2, 0, 29, 0, 0, 0, 2, 0, 1, 0]' : 0.172624}", "{'[6, 3, 0, 6, 3, 4, 0, 0, 2, 0, 29, 0, 0, 0, 2, 0, 1, 0]' : 0.172799}", "{'[6, 3, 0, 6, 3, 4, 0, 0, 2, 0, 29, 0, 0, 0, 2, 0, 1, 0]' : 0.172694}", "{'[6, 3, 0, 6, 3, 4, 0, 0, 2, 0, 29, 0, 0, 0, 2, 0, 1, 0]' : 0.172775}", "{'[6, 3, 0, 6, 3, 4, 0, 0, 2, 0, 29, 0, 0, 0, 2, 0, 1, 0]' : 0.173564}", "{'[6, 3, 0, 6, 3, 4, 0, 0, 2, 0, 29, 0, 0, 0, 2, 0, 1, 0]' : 0.172579}", "{'[6, 3, 0, 6, 3, 4, 0, 0, 2, 0, 29, 0, 0, 0, 2, 0, 1, 0]' : 0.172732}"]
returning from 'run': {'[6, 3, 0, 6, 3, 4, 0, 0, 2, 0, 29, 0, 0, 0, 2, 0, 1, 0]': ([0.207055, 0.207, 0.183391, 0.172595, 0.172693, 0.172554, 0.17247, 0.172544, 0.173101, 0.172942, 0.172782, 0.172627, 0.172748, 0.172652, 0.173035, 0.172905, 0.172573, 0.172556, 0.173041, 0.172926, 0.17278, 0.172825, 0.17261, 0.172624, 0.172799, 0.172694, 0.172775, 0.173564, 0.172579, 0.172732], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 3, 0, 6, 3, 4, 0, 0, 2, 0, 29, 0, 0, 0, 2, 0, 1, 0]': ([0.207055, 0.207, 0.183391, 0.172595, 0.172693, 0.172554, 0.17247, 0.172544, 0.173101, 0.172942, 0.172782, 0.172627, 0.172748, 0.172652, 0.173035, 0.172905, 0.172573, 0.172556, 0.173041, 0.172926, 0.17278, 0.172825, 0.17261, 0.172624, 0.172799, 0.172694, 0.172775, 0.173564, 0.172579, 0.172732], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	132
        Max loop nest depth: 	5
        Additions: 		6172
        Multiplications: 	2448
        Divisions: 		0
        Logical: 		0
        Reads: 			11012
        Writes: 		1716
        Comparisons:		132
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest14.exe __orio_perftest14.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest14.exe  
Program Test Output: 
{'[3, 6, 2, 0, 5, 1, 0, 1, 28, 24, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.117185}
{'[3, 6, 2, 0, 5, 1, 0, 1, 28, 24, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.117215}
{'[3, 6, 2, 0, 5, 1, 0, 1, 28, 24, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.115511}
{'[3, 6, 2, 0, 5, 1, 0, 1, 28, 24, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.115778}
{'[3, 6, 2, 0, 5, 1, 0, 1, 28, 24, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.115274}
{'[3, 6, 2, 0, 5, 1, 0, 1, 28, 24, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.115298}
{'[3, 6, 2, 0, 5, 1, 0, 1, 28, 24, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.115305}
{'[3, 6, 2, 0, 5, 1, 0, 1, 28, 24, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.115296}
{'[3, 6, 2, 0, 5, 1, 0, 1, 28, 24, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.115234}
{'[3, 6, 2, 0, 5, 1, 0, 1, 28, 24, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.115598}
{'[3, 6, 2, 0, 5, 1, 0, 1, 28, 24, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.115545}
{'[3, 6, 2, 0, 5, 1, 0, 1, 28, 24, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.11541}
{'[3, 6, 2, 0, 5, 1, 0, 1, 28, 24, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.115479}
{'[3, 6, 2, 0, 5, 1, 0, 1, 28, 24, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.115485}
{'[3, 6, 2, 0, 5, 1, 0, 1, 28, 24, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.115291}
{'[3, 6, 2, 0, 5, 1, 0, 1, 28, 24, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.115286}
{'[3, 6, 2, 0, 5, 1, 0, 1, 28, 24, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.115334}
{'[3, 6, 2, 0, 5, 1, 0, 1, 28, 24, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.115582}
{'[3, 6, 2, 0, 5, 1, 0, 1, 28, 24, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.115467}
{'[3, 6, 2, 0, 5, 1, 0, 1, 28, 24, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.115456}
{'[3, 6, 2, 0, 5, 1, 0, 1, 28, 24, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.115415}
{'[3, 6, 2, 0, 5, 1, 0, 1, 28, 24, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.115193}
{'[3, 6, 2, 0, 5, 1, 0, 1, 28, 24, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.116099}
{'[3, 6, 2, 0, 5, 1, 0, 1, 28, 24, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.115168}
{'[3, 6, 2, 0, 5, 1, 0, 1, 28, 24, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.115248}
{'[3, 6, 2, 0, 5, 1, 0, 1, 28, 24, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.115301}
{'[3, 6, 2, 0, 5, 1, 0, 1, 28, 24, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.115224}
{'[3, 6, 2, 0, 5, 1, 0, 1, 28, 24, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.115315}
{'[3, 6, 2, 0, 5, 1, 0, 1, 28, 24, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.115352}
{'[3, 6, 2, 0, 5, 1, 0, 1, 28, 24, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.115503}

out:
 ["{'[3, 6, 2, 0, 5, 1, 0, 1, 28, 24, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.117185}", "{'[3, 6, 2, 0, 5, 1, 0, 1, 28, 24, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.117215}", "{'[3, 6, 2, 0, 5, 1, 0, 1, 28, 24, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.115511}", "{'[3, 6, 2, 0, 5, 1, 0, 1, 28, 24, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.115778}", "{'[3, 6, 2, 0, 5, 1, 0, 1, 28, 24, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.115274}", "{'[3, 6, 2, 0, 5, 1, 0, 1, 28, 24, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.115298}", "{'[3, 6, 2, 0, 5, 1, 0, 1, 28, 24, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.115305}", "{'[3, 6, 2, 0, 5, 1, 0, 1, 28, 24, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.115296}", "{'[3, 6, 2, 0, 5, 1, 0, 1, 28, 24, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.115234}", "{'[3, 6, 2, 0, 5, 1, 0, 1, 28, 24, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.115598}", "{'[3, 6, 2, 0, 5, 1, 0, 1, 28, 24, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.115545}", "{'[3, 6, 2, 0, 5, 1, 0, 1, 28, 24, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.11541}", "{'[3, 6, 2, 0, 5, 1, 0, 1, 28, 24, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.115479}", "{'[3, 6, 2, 0, 5, 1, 0, 1, 28, 24, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.115485}", "{'[3, 6, 2, 0, 5, 1, 0, 1, 28, 24, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.115291}", "{'[3, 6, 2, 0, 5, 1, 0, 1, 28, 24, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.115286}", "{'[3, 6, 2, 0, 5, 1, 0, 1, 28, 24, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.115334}", "{'[3, 6, 2, 0, 5, 1, 0, 1, 28, 24, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.115582}", "{'[3, 6, 2, 0, 5, 1, 0, 1, 28, 24, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.115467}", "{'[3, 6, 2, 0, 5, 1, 0, 1, 28, 24, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.115456}", "{'[3, 6, 2, 0, 5, 1, 0, 1, 28, 24, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.115415}", "{'[3, 6, 2, 0, 5, 1, 0, 1, 28, 24, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.115193}", "{'[3, 6, 2, 0, 5, 1, 0, 1, 28, 24, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.116099}", "{'[3, 6, 2, 0, 5, 1, 0, 1, 28, 24, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.115168}", "{'[3, 6, 2, 0, 5, 1, 0, 1, 28, 24, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.115248}", "{'[3, 6, 2, 0, 5, 1, 0, 1, 28, 24, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.115301}", "{'[3, 6, 2, 0, 5, 1, 0, 1, 28, 24, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.115224}", "{'[3, 6, 2, 0, 5, 1, 0, 1, 28, 24, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.115315}", "{'[3, 6, 2, 0, 5, 1, 0, 1, 28, 24, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.115352}", "{'[3, 6, 2, 0, 5, 1, 0, 1, 28, 24, 25, 0, 1, 1, 0, 1, 0, 0]' : 0.115503}"]
returning from 'run': {'[3, 6, 2, 0, 5, 1, 0, 1, 28, 24, 25, 0, 1, 1, 0, 1, 0, 0]': ([0.117185, 0.117215, 0.115511, 0.115778, 0.115274, 0.115298, 0.115305, 0.115296, 0.115234, 0.115598, 0.115545, 0.11541, 0.115479, 0.115485, 0.115291, 0.115286, 0.115334, 0.115582, 0.115467, 0.115456, 0.115415, 0.115193, 0.116099, 0.115168, 0.115248, 0.115301, 0.115224, 0.115315, 0.115352, 0.115503], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 6, 2, 0, 5, 1, 0, 1, 28, 24, 25, 0, 1, 1, 0, 1, 0, 0]': ([0.117185, 0.117215, 0.115511, 0.115778, 0.115274, 0.115298, 0.115305, 0.115296, 0.115234, 0.115598, 0.115545, 0.11541, 0.115479, 0.115485, 0.115291, 0.115286, 0.115334, 0.115582, 0.115467, 0.115456, 0.115415, 0.115193, 0.116099, 0.115168, 0.115248, 0.115301, 0.115224, 0.115315, 0.115352, 0.115503], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = kkk
Code stats:
        Number of loops: 	169
        Max loop nest depth: 	6
        Additions: 		10439
        Multiplications: 	2418
        Divisions: 		0
        Logical: 		0
        Reads: 			15587
        Writes: 		1778
        Comparisons:		169
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest15.exe __orio_perftest15.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest15.exe  
Program Test Output: 
{'[2, 3, 4, 1, 4, 2, 1, 1, 7, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.297985}
{'[2, 3, 4, 1, 4, 2, 1, 1, 7, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.281483}
{'[2, 3, 4, 1, 4, 2, 1, 1, 7, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.267671}
{'[2, 3, 4, 1, 4, 2, 1, 1, 7, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.270912}
{'[2, 3, 4, 1, 4, 2, 1, 1, 7, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.271993}
{'[2, 3, 4, 1, 4, 2, 1, 1, 7, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.270166}
{'[2, 3, 4, 1, 4, 2, 1, 1, 7, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.270651}
{'[2, 3, 4, 1, 4, 2, 1, 1, 7, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.267129}
{'[2, 3, 4, 1, 4, 2, 1, 1, 7, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.266726}
{'[2, 3, 4, 1, 4, 2, 1, 1, 7, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.264543}
{'[2, 3, 4, 1, 4, 2, 1, 1, 7, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.270746}
{'[2, 3, 4, 1, 4, 2, 1, 1, 7, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.268785}
{'[2, 3, 4, 1, 4, 2, 1, 1, 7, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.269473}
{'[2, 3, 4, 1, 4, 2, 1, 1, 7, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.268174}
{'[2, 3, 4, 1, 4, 2, 1, 1, 7, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.269606}
{'[2, 3, 4, 1, 4, 2, 1, 1, 7, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.266777}
{'[2, 3, 4, 1, 4, 2, 1, 1, 7, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.267325}
{'[2, 3, 4, 1, 4, 2, 1, 1, 7, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.267336}
{'[2, 3, 4, 1, 4, 2, 1, 1, 7, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.269295}
{'[2, 3, 4, 1, 4, 2, 1, 1, 7, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.268648}
{'[2, 3, 4, 1, 4, 2, 1, 1, 7, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.267351}
{'[2, 3, 4, 1, 4, 2, 1, 1, 7, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.268136}
{'[2, 3, 4, 1, 4, 2, 1, 1, 7, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.26193}
{'[2, 3, 4, 1, 4, 2, 1, 1, 7, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.267911}
{'[2, 3, 4, 1, 4, 2, 1, 1, 7, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.266851}
{'[2, 3, 4, 1, 4, 2, 1, 1, 7, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.269654}
{'[2, 3, 4, 1, 4, 2, 1, 1, 7, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.270911}
{'[2, 3, 4, 1, 4, 2, 1, 1, 7, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.270927}
{'[2, 3, 4, 1, 4, 2, 1, 1, 7, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.267464}
{'[2, 3, 4, 1, 4, 2, 1, 1, 7, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.266625}

out:
 ["{'[2, 3, 4, 1, 4, 2, 1, 1, 7, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.297985}", "{'[2, 3, 4, 1, 4, 2, 1, 1, 7, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.281483}", "{'[2, 3, 4, 1, 4, 2, 1, 1, 7, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.267671}", "{'[2, 3, 4, 1, 4, 2, 1, 1, 7, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.270912}", "{'[2, 3, 4, 1, 4, 2, 1, 1, 7, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.271993}", "{'[2, 3, 4, 1, 4, 2, 1, 1, 7, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.270166}", "{'[2, 3, 4, 1, 4, 2, 1, 1, 7, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.270651}", "{'[2, 3, 4, 1, 4, 2, 1, 1, 7, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.267129}", "{'[2, 3, 4, 1, 4, 2, 1, 1, 7, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.266726}", "{'[2, 3, 4, 1, 4, 2, 1, 1, 7, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.264543}", "{'[2, 3, 4, 1, 4, 2, 1, 1, 7, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.270746}", "{'[2, 3, 4, 1, 4, 2, 1, 1, 7, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.268785}", "{'[2, 3, 4, 1, 4, 2, 1, 1, 7, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.269473}", "{'[2, 3, 4, 1, 4, 2, 1, 1, 7, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.268174}", "{'[2, 3, 4, 1, 4, 2, 1, 1, 7, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.269606}", "{'[2, 3, 4, 1, 4, 2, 1, 1, 7, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.266777}", "{'[2, 3, 4, 1, 4, 2, 1, 1, 7, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.267325}", "{'[2, 3, 4, 1, 4, 2, 1, 1, 7, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.267336}", "{'[2, 3, 4, 1, 4, 2, 1, 1, 7, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.269295}", "{'[2, 3, 4, 1, 4, 2, 1, 1, 7, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.268648}", "{'[2, 3, 4, 1, 4, 2, 1, 1, 7, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.267351}", "{'[2, 3, 4, 1, 4, 2, 1, 1, 7, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.268136}", "{'[2, 3, 4, 1, 4, 2, 1, 1, 7, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.26193}", "{'[2, 3, 4, 1, 4, 2, 1, 1, 7, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.267911}", "{'[2, 3, 4, 1, 4, 2, 1, 1, 7, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.266851}", "{'[2, 3, 4, 1, 4, 2, 1, 1, 7, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.269654}", "{'[2, 3, 4, 1, 4, 2, 1, 1, 7, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.270911}", "{'[2, 3, 4, 1, 4, 2, 1, 1, 7, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.270927}", "{'[2, 3, 4, 1, 4, 2, 1, 1, 7, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.267464}", "{'[2, 3, 4, 1, 4, 2, 1, 1, 7, 29, 29, 0, 0, 0, 1, 0, 1, 1]' : 0.266625}"]
returning from 'run': {'[2, 3, 4, 1, 4, 2, 1, 1, 7, 29, 29, 0, 0, 0, 1, 0, 1, 1]': ([0.297985, 0.281483, 0.267671, 0.270912, 0.271993, 0.270166, 0.270651, 0.267129, 0.266726, 0.264543, 0.270746, 0.268785, 0.269473, 0.268174, 0.269606, 0.266777, 0.267325, 0.267336, 0.269295, 0.268648, 0.267351, 0.268136, 0.26193, 0.267911, 0.266851, 0.269654, 0.270911, 0.270927, 0.267464, 0.266625], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 3, 4, 1, 4, 2, 1, 1, 7, 29, 29, 0, 0, 0, 1, 0, 1, 1]': ([0.297985, 0.281483, 0.267671, 0.270912, 0.271993, 0.270166, 0.270651, 0.267129, 0.266726, 0.264543, 0.270746, 0.268785, 0.269473, 0.268174, 0.269606, 0.266777, 0.267325, 0.267336, 0.269295, 0.268648, 0.267351, 0.268136, 0.26193, 0.267911, 0.266851, 0.269654, 0.270911, 0.270927, 0.267464, 0.266625], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = jjj
Code stats:
        Number of loops: 	44
        Max loop nest depth: 	6
        Additions: 		3190
        Multiplications: 	952
        Divisions: 		0
        Logical: 		0
        Reads: 			5250
        Writes: 		608
        Comparisons:		44
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest16.exe __orio_perftest16.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest16.exe  
Program Test Output: 
{'[2, 4, 2, 6, 2, 2, 0, 1, 0, 7, 25, 0, 1, 0, 0, 0, 1, 1]' : 0.104618}
{'[2, 4, 2, 6, 2, 2, 0, 1, 0, 7, 25, 0, 1, 0, 0, 0, 1, 1]' : 0.104342}
{'[2, 4, 2, 6, 2, 2, 0, 1, 0, 7, 25, 0, 1, 0, 0, 0, 1, 1]' : 0.104359}
{'[2, 4, 2, 6, 2, 2, 0, 1, 0, 7, 25, 0, 1, 0, 0, 0, 1, 1]' : 0.104369}
{'[2, 4, 2, 6, 2, 2, 0, 1, 0, 7, 25, 0, 1, 0, 0, 0, 1, 1]' : 0.104067}
{'[2, 4, 2, 6, 2, 2, 0, 1, 0, 7, 25, 0, 1, 0, 0, 0, 1, 1]' : 0.104418}
{'[2, 4, 2, 6, 2, 2, 0, 1, 0, 7, 25, 0, 1, 0, 0, 0, 1, 1]' : 0.103855}
{'[2, 4, 2, 6, 2, 2, 0, 1, 0, 7, 25, 0, 1, 0, 0, 0, 1, 1]' : 0.104021}
{'[2, 4, 2, 6, 2, 2, 0, 1, 0, 7, 25, 0, 1, 0, 0, 0, 1, 1]' : 0.104197}
{'[2, 4, 2, 6, 2, 2, 0, 1, 0, 7, 25, 0, 1, 0, 0, 0, 1, 1]' : 0.104373}
{'[2, 4, 2, 6, 2, 2, 0, 1, 0, 7, 25, 0, 1, 0, 0, 0, 1, 1]' : 0.104241}
{'[2, 4, 2, 6, 2, 2, 0, 1, 0, 7, 25, 0, 1, 0, 0, 0, 1, 1]' : 0.104163}
{'[2, 4, 2, 6, 2, 2, 0, 1, 0, 7, 25, 0, 1, 0, 0, 0, 1, 1]' : 0.104447}
{'[2, 4, 2, 6, 2, 2, 0, 1, 0, 7, 25, 0, 1, 0, 0, 0, 1, 1]' : 0.104541}
{'[2, 4, 2, 6, 2, 2, 0, 1, 0, 7, 25, 0, 1, 0, 0, 0, 1, 1]' : 0.104247}
{'[2, 4, 2, 6, 2, 2, 0, 1, 0, 7, 25, 0, 1, 0, 0, 0, 1, 1]' : 0.104304}
{'[2, 4, 2, 6, 2, 2, 0, 1, 0, 7, 25, 0, 1, 0, 0, 0, 1, 1]' : 0.104079}
{'[2, 4, 2, 6, 2, 2, 0, 1, 0, 7, 25, 0, 1, 0, 0, 0, 1, 1]' : 0.104018}
{'[2, 4, 2, 6, 2, 2, 0, 1, 0, 7, 25, 0, 1, 0, 0, 0, 1, 1]' : 0.104273}
{'[2, 4, 2, 6, 2, 2, 0, 1, 0, 7, 25, 0, 1, 0, 0, 0, 1, 1]' : 0.104099}
{'[2, 4, 2, 6, 2, 2, 0, 1, 0, 7, 25, 0, 1, 0, 0, 0, 1, 1]' : 0.104974}
{'[2, 4, 2, 6, 2, 2, 0, 1, 0, 7, 25, 0, 1, 0, 0, 0, 1, 1]' : 0.104253}
{'[2, 4, 2, 6, 2, 2, 0, 1, 0, 7, 25, 0, 1, 0, 0, 0, 1, 1]' : 0.10432}
{'[2, 4, 2, 6, 2, 2, 0, 1, 0, 7, 25, 0, 1, 0, 0, 0, 1, 1]' : 0.104415}
{'[2, 4, 2, 6, 2, 2, 0, 1, 0, 7, 25, 0, 1, 0, 0, 0, 1, 1]' : 0.104473}
{'[2, 4, 2, 6, 2, 2, 0, 1, 0, 7, 25, 0, 1, 0, 0, 0, 1, 1]' : 0.104058}
{'[2, 4, 2, 6, 2, 2, 0, 1, 0, 7, 25, 0, 1, 0, 0, 0, 1, 1]' : 0.104235}
{'[2, 4, 2, 6, 2, 2, 0, 1, 0, 7, 25, 0, 1, 0, 0, 0, 1, 1]' : 0.104216}
{'[2, 4, 2, 6, 2, 2, 0, 1, 0, 7, 25, 0, 1, 0, 0, 0, 1, 1]' : 0.104163}
{'[2, 4, 2, 6, 2, 2, 0, 1, 0, 7, 25, 0, 1, 0, 0, 0, 1, 1]' : 0.104106}

out:
 ["{'[2, 4, 2, 6, 2, 2, 0, 1, 0, 7, 25, 0, 1, 0, 0, 0, 1, 1]' : 0.104618}", "{'[2, 4, 2, 6, 2, 2, 0, 1, 0, 7, 25, 0, 1, 0, 0, 0, 1, 1]' : 0.104342}", "{'[2, 4, 2, 6, 2, 2, 0, 1, 0, 7, 25, 0, 1, 0, 0, 0, 1, 1]' : 0.104359}", "{'[2, 4, 2, 6, 2, 2, 0, 1, 0, 7, 25, 0, 1, 0, 0, 0, 1, 1]' : 0.104369}", "{'[2, 4, 2, 6, 2, 2, 0, 1, 0, 7, 25, 0, 1, 0, 0, 0, 1, 1]' : 0.104067}", "{'[2, 4, 2, 6, 2, 2, 0, 1, 0, 7, 25, 0, 1, 0, 0, 0, 1, 1]' : 0.104418}", "{'[2, 4, 2, 6, 2, 2, 0, 1, 0, 7, 25, 0, 1, 0, 0, 0, 1, 1]' : 0.103855}", "{'[2, 4, 2, 6, 2, 2, 0, 1, 0, 7, 25, 0, 1, 0, 0, 0, 1, 1]' : 0.104021}", "{'[2, 4, 2, 6, 2, 2, 0, 1, 0, 7, 25, 0, 1, 0, 0, 0, 1, 1]' : 0.104197}", "{'[2, 4, 2, 6, 2, 2, 0, 1, 0, 7, 25, 0, 1, 0, 0, 0, 1, 1]' : 0.104373}", "{'[2, 4, 2, 6, 2, 2, 0, 1, 0, 7, 25, 0, 1, 0, 0, 0, 1, 1]' : 0.104241}", "{'[2, 4, 2, 6, 2, 2, 0, 1, 0, 7, 25, 0, 1, 0, 0, 0, 1, 1]' : 0.104163}", "{'[2, 4, 2, 6, 2, 2, 0, 1, 0, 7, 25, 0, 1, 0, 0, 0, 1, 1]' : 0.104447}", "{'[2, 4, 2, 6, 2, 2, 0, 1, 0, 7, 25, 0, 1, 0, 0, 0, 1, 1]' : 0.104541}", "{'[2, 4, 2, 6, 2, 2, 0, 1, 0, 7, 25, 0, 1, 0, 0, 0, 1, 1]' : 0.104247}", "{'[2, 4, 2, 6, 2, 2, 0, 1, 0, 7, 25, 0, 1, 0, 0, 0, 1, 1]' : 0.104304}", "{'[2, 4, 2, 6, 2, 2, 0, 1, 0, 7, 25, 0, 1, 0, 0, 0, 1, 1]' : 0.104079}", "{'[2, 4, 2, 6, 2, 2, 0, 1, 0, 7, 25, 0, 1, 0, 0, 0, 1, 1]' : 0.104018}", "{'[2, 4, 2, 6, 2, 2, 0, 1, 0, 7, 25, 0, 1, 0, 0, 0, 1, 1]' : 0.104273}", "{'[2, 4, 2, 6, 2, 2, 0, 1, 0, 7, 25, 0, 1, 0, 0, 0, 1, 1]' : 0.104099}", "{'[2, 4, 2, 6, 2, 2, 0, 1, 0, 7, 25, 0, 1, 0, 0, 0, 1, 1]' : 0.104974}", "{'[2, 4, 2, 6, 2, 2, 0, 1, 0, 7, 25, 0, 1, 0, 0, 0, 1, 1]' : 0.104253}", "{'[2, 4, 2, 6, 2, 2, 0, 1, 0, 7, 25, 0, 1, 0, 0, 0, 1, 1]' : 0.10432}", "{'[2, 4, 2, 6, 2, 2, 0, 1, 0, 7, 25, 0, 1, 0, 0, 0, 1, 1]' : 0.104415}", "{'[2, 4, 2, 6, 2, 2, 0, 1, 0, 7, 25, 0, 1, 0, 0, 0, 1, 1]' : 0.104473}", "{'[2, 4, 2, 6, 2, 2, 0, 1, 0, 7, 25, 0, 1, 0, 0, 0, 1, 1]' : 0.104058}", "{'[2, 4, 2, 6, 2, 2, 0, 1, 0, 7, 25, 0, 1, 0, 0, 0, 1, 1]' : 0.104235}", "{'[2, 4, 2, 6, 2, 2, 0, 1, 0, 7, 25, 0, 1, 0, 0, 0, 1, 1]' : 0.104216}", "{'[2, 4, 2, 6, 2, 2, 0, 1, 0, 7, 25, 0, 1, 0, 0, 0, 1, 1]' : 0.104163}", "{'[2, 4, 2, 6, 2, 2, 0, 1, 0, 7, 25, 0, 1, 0, 0, 0, 1, 1]' : 0.104106}"]
returning from 'run': {'[2, 4, 2, 6, 2, 2, 0, 1, 0, 7, 25, 0, 1, 0, 0, 0, 1, 1]': ([0.104618, 0.104342, 0.104359, 0.104369, 0.104067, 0.104418, 0.103855, 0.104021, 0.104197, 0.104373, 0.104241, 0.104163, 0.104447, 0.104541, 0.104247, 0.104304, 0.104079, 0.104018, 0.104273, 0.104099, 0.104974, 0.104253, 0.10432, 0.104415, 0.104473, 0.104058, 0.104235, 0.104216, 0.104163, 0.104106], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 4, 2, 6, 2, 2, 0, 1, 0, 7, 25, 0, 1, 0, 0, 0, 1, 1]': ([0.104618, 0.104342, 0.104359, 0.104369, 0.104067, 0.104418, 0.103855, 0.104021, 0.104197, 0.104373, 0.104241, 0.104163, 0.104447, 0.104541, 0.104247, 0.104304, 0.104079, 0.104018, 0.104273, 0.104099, 0.104974, 0.104253, 0.10432, 0.104415, 0.104473, 0.104058, 0.104235, 0.104216, 0.104163, 0.104106], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	26
        Max loop nest depth: 	6
        Additions: 		2912
        Multiplications: 	864
        Divisions: 		0
        Logical: 		0
        Reads: 			4630
        Writes: 		498
        Comparisons:		26
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest17.exe __orio_perftest17.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest17.exe  
Program Test Output: 
{'[6, 2, 4, 6, 6, 6, 1, 0, 8, 0, 8, 28, 1, 0, 1, 0, 0, 0]' : 0.12843}
{'[6, 2, 4, 6, 6, 6, 1, 0, 8, 0, 8, 28, 1, 0, 1, 0, 0, 0]' : 0.128515}
{'[6, 2, 4, 6, 6, 6, 1, 0, 8, 0, 8, 28, 1, 0, 1, 0, 0, 0]' : 0.123261}
{'[6, 2, 4, 6, 6, 6, 1, 0, 8, 0, 8, 28, 1, 0, 1, 0, 0, 0]' : 0.108717}
{'[6, 2, 4, 6, 6, 6, 1, 0, 8, 0, 8, 28, 1, 0, 1, 0, 0, 0]' : 0.108237}
{'[6, 2, 4, 6, 6, 6, 1, 0, 8, 0, 8, 28, 1, 0, 1, 0, 0, 0]' : 0.108037}
{'[6, 2, 4, 6, 6, 6, 1, 0, 8, 0, 8, 28, 1, 0, 1, 0, 0, 0]' : 0.10771}
{'[6, 2, 4, 6, 6, 6, 1, 0, 8, 0, 8, 28, 1, 0, 1, 0, 0, 0]' : 0.107935}
{'[6, 2, 4, 6, 6, 6, 1, 0, 8, 0, 8, 28, 1, 0, 1, 0, 0, 0]' : 0.107878}
{'[6, 2, 4, 6, 6, 6, 1, 0, 8, 0, 8, 28, 1, 0, 1, 0, 0, 0]' : 0.107952}
{'[6, 2, 4, 6, 6, 6, 1, 0, 8, 0, 8, 28, 1, 0, 1, 0, 0, 0]' : 0.107918}
{'[6, 2, 4, 6, 6, 6, 1, 0, 8, 0, 8, 28, 1, 0, 1, 0, 0, 0]' : 0.108136}
{'[6, 2, 4, 6, 6, 6, 1, 0, 8, 0, 8, 28, 1, 0, 1, 0, 0, 0]' : 0.10907}
{'[6, 2, 4, 6, 6, 6, 1, 0, 8, 0, 8, 28, 1, 0, 1, 0, 0, 0]' : 0.107996}
{'[6, 2, 4, 6, 6, 6, 1, 0, 8, 0, 8, 28, 1, 0, 1, 0, 0, 0]' : 0.107661}
{'[6, 2, 4, 6, 6, 6, 1, 0, 8, 0, 8, 28, 1, 0, 1, 0, 0, 0]' : 0.107869}
{'[6, 2, 4, 6, 6, 6, 1, 0, 8, 0, 8, 28, 1, 0, 1, 0, 0, 0]' : 0.108}
{'[6, 2, 4, 6, 6, 6, 1, 0, 8, 0, 8, 28, 1, 0, 1, 0, 0, 0]' : 0.107954}
{'[6, 2, 4, 6, 6, 6, 1, 0, 8, 0, 8, 28, 1, 0, 1, 0, 0, 0]' : 0.107705}
{'[6, 2, 4, 6, 6, 6, 1, 0, 8, 0, 8, 28, 1, 0, 1, 0, 0, 0]' : 0.107943}
{'[6, 2, 4, 6, 6, 6, 1, 0, 8, 0, 8, 28, 1, 0, 1, 0, 0, 0]' : 0.107937}
{'[6, 2, 4, 6, 6, 6, 1, 0, 8, 0, 8, 28, 1, 0, 1, 0, 0, 0]' : 0.10862}
{'[6, 2, 4, 6, 6, 6, 1, 0, 8, 0, 8, 28, 1, 0, 1, 0, 0, 0]' : 0.107866}
{'[6, 2, 4, 6, 6, 6, 1, 0, 8, 0, 8, 28, 1, 0, 1, 0, 0, 0]' : 0.10787}
{'[6, 2, 4, 6, 6, 6, 1, 0, 8, 0, 8, 28, 1, 0, 1, 0, 0, 0]' : 0.107773}
{'[6, 2, 4, 6, 6, 6, 1, 0, 8, 0, 8, 28, 1, 0, 1, 0, 0, 0]' : 0.107655}
{'[6, 2, 4, 6, 6, 6, 1, 0, 8, 0, 8, 28, 1, 0, 1, 0, 0, 0]' : 0.107286}
{'[6, 2, 4, 6, 6, 6, 1, 0, 8, 0, 8, 28, 1, 0, 1, 0, 0, 0]' : 0.107508}
{'[6, 2, 4, 6, 6, 6, 1, 0, 8, 0, 8, 28, 1, 0, 1, 0, 0, 0]' : 0.107562}
{'[6, 2, 4, 6, 6, 6, 1, 0, 8, 0, 8, 28, 1, 0, 1, 0, 0, 0]' : 0.107801}

out:
 ["{'[6, 2, 4, 6, 6, 6, 1, 0, 8, 0, 8, 28, 1, 0, 1, 0, 0, 0]' : 0.12843}", "{'[6, 2, 4, 6, 6, 6, 1, 0, 8, 0, 8, 28, 1, 0, 1, 0, 0, 0]' : 0.128515}", "{'[6, 2, 4, 6, 6, 6, 1, 0, 8, 0, 8, 28, 1, 0, 1, 0, 0, 0]' : 0.123261}", "{'[6, 2, 4, 6, 6, 6, 1, 0, 8, 0, 8, 28, 1, 0, 1, 0, 0, 0]' : 0.108717}", "{'[6, 2, 4, 6, 6, 6, 1, 0, 8, 0, 8, 28, 1, 0, 1, 0, 0, 0]' : 0.108237}", "{'[6, 2, 4, 6, 6, 6, 1, 0, 8, 0, 8, 28, 1, 0, 1, 0, 0, 0]' : 0.108037}", "{'[6, 2, 4, 6, 6, 6, 1, 0, 8, 0, 8, 28, 1, 0, 1, 0, 0, 0]' : 0.10771}", "{'[6, 2, 4, 6, 6, 6, 1, 0, 8, 0, 8, 28, 1, 0, 1, 0, 0, 0]' : 0.107935}", "{'[6, 2, 4, 6, 6, 6, 1, 0, 8, 0, 8, 28, 1, 0, 1, 0, 0, 0]' : 0.107878}", "{'[6, 2, 4, 6, 6, 6, 1, 0, 8, 0, 8, 28, 1, 0, 1, 0, 0, 0]' : 0.107952}", "{'[6, 2, 4, 6, 6, 6, 1, 0, 8, 0, 8, 28, 1, 0, 1, 0, 0, 0]' : 0.107918}", "{'[6, 2, 4, 6, 6, 6, 1, 0, 8, 0, 8, 28, 1, 0, 1, 0, 0, 0]' : 0.108136}", "{'[6, 2, 4, 6, 6, 6, 1, 0, 8, 0, 8, 28, 1, 0, 1, 0, 0, 0]' : 0.10907}", "{'[6, 2, 4, 6, 6, 6, 1, 0, 8, 0, 8, 28, 1, 0, 1, 0, 0, 0]' : 0.107996}", "{'[6, 2, 4, 6, 6, 6, 1, 0, 8, 0, 8, 28, 1, 0, 1, 0, 0, 0]' : 0.107661}", "{'[6, 2, 4, 6, 6, 6, 1, 0, 8, 0, 8, 28, 1, 0, 1, 0, 0, 0]' : 0.107869}", "{'[6, 2, 4, 6, 6, 6, 1, 0, 8, 0, 8, 28, 1, 0, 1, 0, 0, 0]' : 0.108}", "{'[6, 2, 4, 6, 6, 6, 1, 0, 8, 0, 8, 28, 1, 0, 1, 0, 0, 0]' : 0.107954}", "{'[6, 2, 4, 6, 6, 6, 1, 0, 8, 0, 8, 28, 1, 0, 1, 0, 0, 0]' : 0.107705}", "{'[6, 2, 4, 6, 6, 6, 1, 0, 8, 0, 8, 28, 1, 0, 1, 0, 0, 0]' : 0.107943}", "{'[6, 2, 4, 6, 6, 6, 1, 0, 8, 0, 8, 28, 1, 0, 1, 0, 0, 0]' : 0.107937}", "{'[6, 2, 4, 6, 6, 6, 1, 0, 8, 0, 8, 28, 1, 0, 1, 0, 0, 0]' : 0.10862}", "{'[6, 2, 4, 6, 6, 6, 1, 0, 8, 0, 8, 28, 1, 0, 1, 0, 0, 0]' : 0.107866}", "{'[6, 2, 4, 6, 6, 6, 1, 0, 8, 0, 8, 28, 1, 0, 1, 0, 0, 0]' : 0.10787}", "{'[6, 2, 4, 6, 6, 6, 1, 0, 8, 0, 8, 28, 1, 0, 1, 0, 0, 0]' : 0.107773}", "{'[6, 2, 4, 6, 6, 6, 1, 0, 8, 0, 8, 28, 1, 0, 1, 0, 0, 0]' : 0.107655}", "{'[6, 2, 4, 6, 6, 6, 1, 0, 8, 0, 8, 28, 1, 0, 1, 0, 0, 0]' : 0.107286}", "{'[6, 2, 4, 6, 6, 6, 1, 0, 8, 0, 8, 28, 1, 0, 1, 0, 0, 0]' : 0.107508}", "{'[6, 2, 4, 6, 6, 6, 1, 0, 8, 0, 8, 28, 1, 0, 1, 0, 0, 0]' : 0.107562}", "{'[6, 2, 4, 6, 6, 6, 1, 0, 8, 0, 8, 28, 1, 0, 1, 0, 0, 0]' : 0.107801}"]
returning from 'run': {'[6, 2, 4, 6, 6, 6, 1, 0, 8, 0, 8, 28, 1, 0, 1, 0, 0, 0]': ([0.12843, 0.128515, 0.123261, 0.108717, 0.108237, 0.108037, 0.10771, 0.107935, 0.107878, 0.107952, 0.107918, 0.108136, 0.10907, 0.107996, 0.107661, 0.107869, 0.108, 0.107954, 0.107705, 0.107943, 0.107937, 0.10862, 0.107866, 0.10787, 0.107773, 0.107655, 0.107286, 0.107508, 0.107562, 0.107801], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 2, 4, 6, 6, 6, 1, 0, 8, 0, 8, 28, 1, 0, 1, 0, 0, 0]': ([0.12843, 0.128515, 0.123261, 0.108717, 0.108237, 0.108037, 0.10771, 0.107935, 0.107878, 0.107952, 0.107918, 0.108136, 0.10907, 0.107996, 0.107661, 0.107869, 0.108, 0.107954, 0.107705, 0.107943, 0.107937, 0.10862, 0.107866, 0.10787, 0.107773, 0.107655, 0.107286, 0.107508, 0.107562, 0.107801], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	5
        Additions: 		166
        Multiplications: 	68
        Divisions: 		0
        Logical: 		0
        Reads: 			371
        Writes: 		70
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest18.exe __orio_perftest18.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest18.exe  
Program Test Output: 
{'[0, 2, 2, 5, 5, 4, 0, 0, 4, 0, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.261746}
{'[0, 2, 2, 5, 5, 4, 0, 0, 4, 0, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.249002}
{'[0, 2, 2, 5, 5, 4, 0, 0, 4, 0, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.232233}
{'[0, 2, 2, 5, 5, 4, 0, 0, 4, 0, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.232205}
{'[0, 2, 2, 5, 5, 4, 0, 0, 4, 0, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.233482}
{'[0, 2, 2, 5, 5, 4, 0, 0, 4, 0, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.232271}
{'[0, 2, 2, 5, 5, 4, 0, 0, 4, 0, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.232354}
{'[0, 2, 2, 5, 5, 4, 0, 0, 4, 0, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.232225}
{'[0, 2, 2, 5, 5, 4, 0, 0, 4, 0, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.231157}
{'[0, 2, 2, 5, 5, 4, 0, 0, 4, 0, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.231064}
{'[0, 2, 2, 5, 5, 4, 0, 0, 4, 0, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.232219}
{'[0, 2, 2, 5, 5, 4, 0, 0, 4, 0, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.233063}
{'[0, 2, 2, 5, 5, 4, 0, 0, 4, 0, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.232176}
{'[0, 2, 2, 5, 5, 4, 0, 0, 4, 0, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.232197}
{'[0, 2, 2, 5, 5, 4, 0, 0, 4, 0, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.232242}
{'[0, 2, 2, 5, 5, 4, 0, 0, 4, 0, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.232453}
{'[0, 2, 2, 5, 5, 4, 0, 0, 4, 0, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.232197}
{'[0, 2, 2, 5, 5, 4, 0, 0, 4, 0, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.233536}
{'[0, 2, 2, 5, 5, 4, 0, 0, 4, 0, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.232362}
{'[0, 2, 2, 5, 5, 4, 0, 0, 4, 0, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.232428}
{'[0, 2, 2, 5, 5, 4, 0, 0, 4, 0, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.232327}
{'[0, 2, 2, 5, 5, 4, 0, 0, 4, 0, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.232352}
{'[0, 2, 2, 5, 5, 4, 0, 0, 4, 0, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.232338}
{'[0, 2, 2, 5, 5, 4, 0, 0, 4, 0, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.232672}
{'[0, 2, 2, 5, 5, 4, 0, 0, 4, 0, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.233619}
{'[0, 2, 2, 5, 5, 4, 0, 0, 4, 0, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.232266}
{'[0, 2, 2, 5, 5, 4, 0, 0, 4, 0, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.230072}
{'[0, 2, 2, 5, 5, 4, 0, 0, 4, 0, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.23231}
{'[0, 2, 2, 5, 5, 4, 0, 0, 4, 0, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.232293}
{'[0, 2, 2, 5, 5, 4, 0, 0, 4, 0, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.232278}

out:
 ["{'[0, 2, 2, 5, 5, 4, 0, 0, 4, 0, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.261746}", "{'[0, 2, 2, 5, 5, 4, 0, 0, 4, 0, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.249002}", "{'[0, 2, 2, 5, 5, 4, 0, 0, 4, 0, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.232233}", "{'[0, 2, 2, 5, 5, 4, 0, 0, 4, 0, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.232205}", "{'[0, 2, 2, 5, 5, 4, 0, 0, 4, 0, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.233482}", "{'[0, 2, 2, 5, 5, 4, 0, 0, 4, 0, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.232271}", "{'[0, 2, 2, 5, 5, 4, 0, 0, 4, 0, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.232354}", "{'[0, 2, 2, 5, 5, 4, 0, 0, 4, 0, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.232225}", "{'[0, 2, 2, 5, 5, 4, 0, 0, 4, 0, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.231157}", "{'[0, 2, 2, 5, 5, 4, 0, 0, 4, 0, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.231064}", "{'[0, 2, 2, 5, 5, 4, 0, 0, 4, 0, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.232219}", "{'[0, 2, 2, 5, 5, 4, 0, 0, 4, 0, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.233063}", "{'[0, 2, 2, 5, 5, 4, 0, 0, 4, 0, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.232176}", "{'[0, 2, 2, 5, 5, 4, 0, 0, 4, 0, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.232197}", "{'[0, 2, 2, 5, 5, 4, 0, 0, 4, 0, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.232242}", "{'[0, 2, 2, 5, 5, 4, 0, 0, 4, 0, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.232453}", "{'[0, 2, 2, 5, 5, 4, 0, 0, 4, 0, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.232197}", "{'[0, 2, 2, 5, 5, 4, 0, 0, 4, 0, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.233536}", "{'[0, 2, 2, 5, 5, 4, 0, 0, 4, 0, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.232362}", "{'[0, 2, 2, 5, 5, 4, 0, 0, 4, 0, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.232428}", "{'[0, 2, 2, 5, 5, 4, 0, 0, 4, 0, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.232327}", "{'[0, 2, 2, 5, 5, 4, 0, 0, 4, 0, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.232352}", "{'[0, 2, 2, 5, 5, 4, 0, 0, 4, 0, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.232338}", "{'[0, 2, 2, 5, 5, 4, 0, 0, 4, 0, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.232672}", "{'[0, 2, 2, 5, 5, 4, 0, 0, 4, 0, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.233619}", "{'[0, 2, 2, 5, 5, 4, 0, 0, 4, 0, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.232266}", "{'[0, 2, 2, 5, 5, 4, 0, 0, 4, 0, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.230072}", "{'[0, 2, 2, 5, 5, 4, 0, 0, 4, 0, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.23231}", "{'[0, 2, 2, 5, 5, 4, 0, 0, 4, 0, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.232293}", "{'[0, 2, 2, 5, 5, 4, 0, 0, 4, 0, 0, 0, 0, 2, 0, 1, 1, 0]' : 0.232278}"]
returning from 'run': {'[0, 2, 2, 5, 5, 4, 0, 0, 4, 0, 0, 0, 0, 2, 0, 1, 1, 0]': ([0.261746, 0.249002, 0.232233, 0.232205, 0.233482, 0.232271, 0.232354, 0.232225, 0.231157, 0.231064, 0.232219, 0.233063, 0.232176, 0.232197, 0.232242, 0.232453, 0.232197, 0.233536, 0.232362, 0.232428, 0.232327, 0.232352, 0.232338, 0.232672, 0.233619, 0.232266, 0.230072, 0.23231, 0.232293, 0.232278], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 2, 5, 5, 4, 0, 0, 4, 0, 0, 0, 0, 2, 0, 1, 1, 0]': ([0.261746, 0.249002, 0.232233, 0.232205, 0.233482, 0.232271, 0.232354, 0.232225, 0.231157, 0.231064, 0.232219, 0.233063, 0.232176, 0.232197, 0.232242, 0.232453, 0.232197, 0.233536, 0.232362, 0.232428, 0.232327, 0.232352, 0.232338, 0.232672, 0.233619, 0.232266, 0.230072, 0.23231, 0.232293, 0.232278], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	94
        Max loop nest depth: 	4
        Additions: 		7195
        Multiplications: 	1998
        Divisions: 		0
        Logical: 		0
        Reads: 			10994
        Writes: 		1256
        Comparisons:		94
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest19.exe __orio_perftest19.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest19.exe  
Program Test Output: 
{'[0, 0, 2, 6, 2, 0, 1, 0, 10, 25, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.205249}
{'[0, 0, 2, 6, 2, 0, 1, 0, 10, 25, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.205677}
{'[0, 0, 2, 6, 2, 0, 1, 0, 10, 25, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.188582}
{'[0, 0, 2, 6, 2, 0, 1, 0, 10, 25, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.182127}
{'[0, 0, 2, 6, 2, 0, 1, 0, 10, 25, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.18493}
{'[0, 0, 2, 6, 2, 0, 1, 0, 10, 25, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.187945}
{'[0, 0, 2, 6, 2, 0, 1, 0, 10, 25, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.186945}
{'[0, 0, 2, 6, 2, 0, 1, 0, 10, 25, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.187181}
{'[0, 0, 2, 6, 2, 0, 1, 0, 10, 25, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.187794}
{'[0, 0, 2, 6, 2, 0, 1, 0, 10, 25, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.188148}
{'[0, 0, 2, 6, 2, 0, 1, 0, 10, 25, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.1824}
{'[0, 0, 2, 6, 2, 0, 1, 0, 10, 25, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.178508}
{'[0, 0, 2, 6, 2, 0, 1, 0, 10, 25, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.182394}
{'[0, 0, 2, 6, 2, 0, 1, 0, 10, 25, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.187855}
{'[0, 0, 2, 6, 2, 0, 1, 0, 10, 25, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.18782}
{'[0, 0, 2, 6, 2, 0, 1, 0, 10, 25, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.188018}
{'[0, 0, 2, 6, 2, 0, 1, 0, 10, 25, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.187721}
{'[0, 0, 2, 6, 2, 0, 1, 0, 10, 25, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.187944}
{'[0, 0, 2, 6, 2, 0, 1, 0, 10, 25, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.187984}
{'[0, 0, 2, 6, 2, 0, 1, 0, 10, 25, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.187934}
{'[0, 0, 2, 6, 2, 0, 1, 0, 10, 25, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.188915}
{'[0, 0, 2, 6, 2, 0, 1, 0, 10, 25, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.187633}
{'[0, 0, 2, 6, 2, 0, 1, 0, 10, 25, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.187602}
{'[0, 0, 2, 6, 2, 0, 1, 0, 10, 25, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.187641}
{'[0, 0, 2, 6, 2, 0, 1, 0, 10, 25, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.187844}
{'[0, 0, 2, 6, 2, 0, 1, 0, 10, 25, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.187597}
{'[0, 0, 2, 6, 2, 0, 1, 0, 10, 25, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.185741}
{'[0, 0, 2, 6, 2, 0, 1, 0, 10, 25, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.182661}
{'[0, 0, 2, 6, 2, 0, 1, 0, 10, 25, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.180914}
{'[0, 0, 2, 6, 2, 0, 1, 0, 10, 25, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.182185}

out:
 ["{'[0, 0, 2, 6, 2, 0, 1, 0, 10, 25, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.205249}", "{'[0, 0, 2, 6, 2, 0, 1, 0, 10, 25, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.205677}", "{'[0, 0, 2, 6, 2, 0, 1, 0, 10, 25, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.188582}", "{'[0, 0, 2, 6, 2, 0, 1, 0, 10, 25, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.182127}", "{'[0, 0, 2, 6, 2, 0, 1, 0, 10, 25, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.18493}", "{'[0, 0, 2, 6, 2, 0, 1, 0, 10, 25, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.187945}", "{'[0, 0, 2, 6, 2, 0, 1, 0, 10, 25, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.186945}", "{'[0, 0, 2, 6, 2, 0, 1, 0, 10, 25, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.187181}", "{'[0, 0, 2, 6, 2, 0, 1, 0, 10, 25, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.187794}", "{'[0, 0, 2, 6, 2, 0, 1, 0, 10, 25, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.188148}", "{'[0, 0, 2, 6, 2, 0, 1, 0, 10, 25, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.1824}", "{'[0, 0, 2, 6, 2, 0, 1, 0, 10, 25, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.178508}", "{'[0, 0, 2, 6, 2, 0, 1, 0, 10, 25, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.182394}", "{'[0, 0, 2, 6, 2, 0, 1, 0, 10, 25, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.187855}", "{'[0, 0, 2, 6, 2, 0, 1, 0, 10, 25, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.18782}", "{'[0, 0, 2, 6, 2, 0, 1, 0, 10, 25, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.188018}", "{'[0, 0, 2, 6, 2, 0, 1, 0, 10, 25, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.187721}", "{'[0, 0, 2, 6, 2, 0, 1, 0, 10, 25, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.187944}", "{'[0, 0, 2, 6, 2, 0, 1, 0, 10, 25, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.187984}", "{'[0, 0, 2, 6, 2, 0, 1, 0, 10, 25, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.187934}", "{'[0, 0, 2, 6, 2, 0, 1, 0, 10, 25, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.188915}", "{'[0, 0, 2, 6, 2, 0, 1, 0, 10, 25, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.187633}", "{'[0, 0, 2, 6, 2, 0, 1, 0, 10, 25, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.187602}", "{'[0, 0, 2, 6, 2, 0, 1, 0, 10, 25, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.187641}", "{'[0, 0, 2, 6, 2, 0, 1, 0, 10, 25, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.187844}", "{'[0, 0, 2, 6, 2, 0, 1, 0, 10, 25, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.187597}", "{'[0, 0, 2, 6, 2, 0, 1, 0, 10, 25, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.185741}", "{'[0, 0, 2, 6, 2, 0, 1, 0, 10, 25, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.182661}", "{'[0, 0, 2, 6, 2, 0, 1, 0, 10, 25, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.180914}", "{'[0, 0, 2, 6, 2, 0, 1, 0, 10, 25, 0, 26, 0, 0, 1, 0, 1, 0]' : 0.182185}"]
returning from 'run': {'[0, 0, 2, 6, 2, 0, 1, 0, 10, 25, 0, 26, 0, 0, 1, 0, 1, 0]': ([0.205249, 0.205677, 0.188582, 0.182127, 0.18493, 0.187945, 0.186945, 0.187181, 0.187794, 0.188148, 0.1824, 0.178508, 0.182394, 0.187855, 0.18782, 0.188018, 0.187721, 0.187944, 0.187984, 0.187934, 0.188915, 0.187633, 0.187602, 0.187641, 0.187844, 0.187597, 0.185741, 0.182661, 0.180914, 0.182185], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 2, 6, 2, 0, 1, 0, 10, 25, 0, 26, 0, 0, 1, 0, 1, 0]': ([0.205249, 0.205677, 0.188582, 0.182127, 0.18493, 0.187945, 0.186945, 0.187181, 0.187794, 0.188148, 0.1824, 0.178508, 0.182394, 0.187855, 0.18782, 0.188018, 0.187721, 0.187944, 0.187984, 0.187934, 0.188915, 0.187633, 0.187602, 0.187641, 0.187844, 0.187597, 0.185741, 0.182661, 0.180914, 0.182185], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	30
        Max loop nest depth: 	5
        Additions: 		1094
        Multiplications: 	288
        Divisions: 		0
        Logical: 		0
        Reads: 			1857
        Writes: 		236
        Comparisons:		30
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest20.exe __orio_perftest20.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest20.exe  
Program Test Output: 
{'[6, 0, 3, 0, 6, 2, 1, 0, 3, 6, 10, 0, 1, 1, 0, 0, 1, 1]' : 0.122354}
{'[6, 0, 3, 0, 6, 2, 1, 0, 3, 6, 10, 0, 1, 1, 0, 0, 1, 1]' : 0.12238}
{'[6, 0, 3, 0, 6, 2, 1, 0, 3, 6, 10, 0, 1, 1, 0, 0, 1, 1]' : 0.121911}
{'[6, 0, 3, 0, 6, 2, 1, 0, 3, 6, 10, 0, 1, 1, 0, 0, 1, 1]' : 0.107504}
{'[6, 0, 3, 0, 6, 2, 1, 0, 3, 6, 10, 0, 1, 1, 0, 0, 1, 1]' : 0.103707}
{'[6, 0, 3, 0, 6, 2, 1, 0, 3, 6, 10, 0, 1, 1, 0, 0, 1, 1]' : 0.103746}
{'[6, 0, 3, 0, 6, 2, 1, 0, 3, 6, 10, 0, 1, 1, 0, 0, 1, 1]' : 0.103452}
{'[6, 0, 3, 0, 6, 2, 1, 0, 3, 6, 10, 0, 1, 1, 0, 0, 1, 1]' : 0.103829}
{'[6, 0, 3, 0, 6, 2, 1, 0, 3, 6, 10, 0, 1, 1, 0, 0, 1, 1]' : 0.103713}
{'[6, 0, 3, 0, 6, 2, 1, 0, 3, 6, 10, 0, 1, 1, 0, 0, 1, 1]' : 0.103655}
{'[6, 0, 3, 0, 6, 2, 1, 0, 3, 6, 10, 0, 1, 1, 0, 0, 1, 1]' : 0.103488}
{'[6, 0, 3, 0, 6, 2, 1, 0, 3, 6, 10, 0, 1, 1, 0, 0, 1, 1]' : 0.103883}
{'[6, 0, 3, 0, 6, 2, 1, 0, 3, 6, 10, 0, 1, 1, 0, 0, 1, 1]' : 0.104265}
{'[6, 0, 3, 0, 6, 2, 1, 0, 3, 6, 10, 0, 1, 1, 0, 0, 1, 1]' : 0.104089}
{'[6, 0, 3, 0, 6, 2, 1, 0, 3, 6, 10, 0, 1, 1, 0, 0, 1, 1]' : 0.103515}
{'[6, 0, 3, 0, 6, 2, 1, 0, 3, 6, 10, 0, 1, 1, 0, 0, 1, 1]' : 0.103866}
{'[6, 0, 3, 0, 6, 2, 1, 0, 3, 6, 10, 0, 1, 1, 0, 0, 1, 1]' : 0.103779}
{'[6, 0, 3, 0, 6, 2, 1, 0, 3, 6, 10, 0, 1, 1, 0, 0, 1, 1]' : 0.103949}
{'[6, 0, 3, 0, 6, 2, 1, 0, 3, 6, 10, 0, 1, 1, 0, 0, 1, 1]' : 0.103567}
{'[6, 0, 3, 0, 6, 2, 1, 0, 3, 6, 10, 0, 1, 1, 0, 0, 1, 1]' : 0.103732}
{'[6, 0, 3, 0, 6, 2, 1, 0, 3, 6, 10, 0, 1, 1, 0, 0, 1, 1]' : 0.104136}
{'[6, 0, 3, 0, 6, 2, 1, 0, 3, 6, 10, 0, 1, 1, 0, 0, 1, 1]' : 0.103824}
{'[6, 0, 3, 0, 6, 2, 1, 0, 3, 6, 10, 0, 1, 1, 0, 0, 1, 1]' : 0.103449}
{'[6, 0, 3, 0, 6, 2, 1, 0, 3, 6, 10, 0, 1, 1, 0, 0, 1, 1]' : 0.103875}
{'[6, 0, 3, 0, 6, 2, 1, 0, 3, 6, 10, 0, 1, 1, 0, 0, 1, 1]' : 0.10395}
{'[6, 0, 3, 0, 6, 2, 1, 0, 3, 6, 10, 0, 1, 1, 0, 0, 1, 1]' : 0.103774}
{'[6, 0, 3, 0, 6, 2, 1, 0, 3, 6, 10, 0, 1, 1, 0, 0, 1, 1]' : 0.103347}
{'[6, 0, 3, 0, 6, 2, 1, 0, 3, 6, 10, 0, 1, 1, 0, 0, 1, 1]' : 0.103845}
{'[6, 0, 3, 0, 6, 2, 1, 0, 3, 6, 10, 0, 1, 1, 0, 0, 1, 1]' : 0.103545}
{'[6, 0, 3, 0, 6, 2, 1, 0, 3, 6, 10, 0, 1, 1, 0, 0, 1, 1]' : 0.103759}

out:
 ["{'[6, 0, 3, 0, 6, 2, 1, 0, 3, 6, 10, 0, 1, 1, 0, 0, 1, 1]' : 0.122354}", "{'[6, 0, 3, 0, 6, 2, 1, 0, 3, 6, 10, 0, 1, 1, 0, 0, 1, 1]' : 0.12238}", "{'[6, 0, 3, 0, 6, 2, 1, 0, 3, 6, 10, 0, 1, 1, 0, 0, 1, 1]' : 0.121911}", "{'[6, 0, 3, 0, 6, 2, 1, 0, 3, 6, 10, 0, 1, 1, 0, 0, 1, 1]' : 0.107504}", "{'[6, 0, 3, 0, 6, 2, 1, 0, 3, 6, 10, 0, 1, 1, 0, 0, 1, 1]' : 0.103707}", "{'[6, 0, 3, 0, 6, 2, 1, 0, 3, 6, 10, 0, 1, 1, 0, 0, 1, 1]' : 0.103746}", "{'[6, 0, 3, 0, 6, 2, 1, 0, 3, 6, 10, 0, 1, 1, 0, 0, 1, 1]' : 0.103452}", "{'[6, 0, 3, 0, 6, 2, 1, 0, 3, 6, 10, 0, 1, 1, 0, 0, 1, 1]' : 0.103829}", "{'[6, 0, 3, 0, 6, 2, 1, 0, 3, 6, 10, 0, 1, 1, 0, 0, 1, 1]' : 0.103713}", "{'[6, 0, 3, 0, 6, 2, 1, 0, 3, 6, 10, 0, 1, 1, 0, 0, 1, 1]' : 0.103655}", "{'[6, 0, 3, 0, 6, 2, 1, 0, 3, 6, 10, 0, 1, 1, 0, 0, 1, 1]' : 0.103488}", "{'[6, 0, 3, 0, 6, 2, 1, 0, 3, 6, 10, 0, 1, 1, 0, 0, 1, 1]' : 0.103883}", "{'[6, 0, 3, 0, 6, 2, 1, 0, 3, 6, 10, 0, 1, 1, 0, 0, 1, 1]' : 0.104265}", "{'[6, 0, 3, 0, 6, 2, 1, 0, 3, 6, 10, 0, 1, 1, 0, 0, 1, 1]' : 0.104089}", "{'[6, 0, 3, 0, 6, 2, 1, 0, 3, 6, 10, 0, 1, 1, 0, 0, 1, 1]' : 0.103515}", "{'[6, 0, 3, 0, 6, 2, 1, 0, 3, 6, 10, 0, 1, 1, 0, 0, 1, 1]' : 0.103866}", "{'[6, 0, 3, 0, 6, 2, 1, 0, 3, 6, 10, 0, 1, 1, 0, 0, 1, 1]' : 0.103779}", "{'[6, 0, 3, 0, 6, 2, 1, 0, 3, 6, 10, 0, 1, 1, 0, 0, 1, 1]' : 0.103949}", "{'[6, 0, 3, 0, 6, 2, 1, 0, 3, 6, 10, 0, 1, 1, 0, 0, 1, 1]' : 0.103567}", "{'[6, 0, 3, 0, 6, 2, 1, 0, 3, 6, 10, 0, 1, 1, 0, 0, 1, 1]' : 0.103732}", "{'[6, 0, 3, 0, 6, 2, 1, 0, 3, 6, 10, 0, 1, 1, 0, 0, 1, 1]' : 0.104136}", "{'[6, 0, 3, 0, 6, 2, 1, 0, 3, 6, 10, 0, 1, 1, 0, 0, 1, 1]' : 0.103824}", "{'[6, 0, 3, 0, 6, 2, 1, 0, 3, 6, 10, 0, 1, 1, 0, 0, 1, 1]' : 0.103449}", "{'[6, 0, 3, 0, 6, 2, 1, 0, 3, 6, 10, 0, 1, 1, 0, 0, 1, 1]' : 0.103875}", "{'[6, 0, 3, 0, 6, 2, 1, 0, 3, 6, 10, 0, 1, 1, 0, 0, 1, 1]' : 0.10395}", "{'[6, 0, 3, 0, 6, 2, 1, 0, 3, 6, 10, 0, 1, 1, 0, 0, 1, 1]' : 0.103774}", "{'[6, 0, 3, 0, 6, 2, 1, 0, 3, 6, 10, 0, 1, 1, 0, 0, 1, 1]' : 0.103347}", "{'[6, 0, 3, 0, 6, 2, 1, 0, 3, 6, 10, 0, 1, 1, 0, 0, 1, 1]' : 0.103845}", "{'[6, 0, 3, 0, 6, 2, 1, 0, 3, 6, 10, 0, 1, 1, 0, 0, 1, 1]' : 0.103545}", "{'[6, 0, 3, 0, 6, 2, 1, 0, 3, 6, 10, 0, 1, 1, 0, 0, 1, 1]' : 0.103759}"]
returning from 'run': {'[6, 0, 3, 0, 6, 2, 1, 0, 3, 6, 10, 0, 1, 1, 0, 0, 1, 1]': ([0.122354, 0.12238, 0.121911, 0.107504, 0.103707, 0.103746, 0.103452, 0.103829, 0.103713, 0.103655, 0.103488, 0.103883, 0.104265, 0.104089, 0.103515, 0.103866, 0.103779, 0.103949, 0.103567, 0.103732, 0.104136, 0.103824, 0.103449, 0.103875, 0.10395, 0.103774, 0.103347, 0.103845, 0.103545, 0.103759], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 3, 0, 6, 2, 1, 0, 3, 6, 10, 0, 1, 1, 0, 0, 1, 1]': ([0.122354, 0.12238, 0.121911, 0.107504, 0.103707, 0.103746, 0.103452, 0.103829, 0.103713, 0.103655, 0.103488, 0.103883, 0.104265, 0.104089, 0.103515, 0.103866, 0.103779, 0.103949, 0.103567, 0.103732, 0.104136, 0.103824, 0.103449, 0.103875, 0.10395, 0.103774, 0.103347, 0.103845, 0.103545, 0.103759], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		329
        Multiplications: 	78
        Divisions: 		0
        Logical: 		0
        Reads: 			632
        Writes: 		103
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest21.exe __orio_perftest21.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest21.exe  
Program Test Output: 
{'[0, 1, 2, 5, 0, 2, 1, 1, 29, 0, 28, 29, 0, 1, 0, 0, 1, 0]' : 0.310408}
{'[0, 1, 2, 5, 0, 2, 1, 1, 29, 0, 28, 29, 0, 1, 0, 0, 1, 0]' : 0.285018}
{'[0, 1, 2, 5, 0, 2, 1, 1, 29, 0, 28, 29, 0, 1, 0, 0, 1, 0]' : 0.25676}
{'[0, 1, 2, 5, 0, 2, 1, 1, 29, 0, 28, 29, 0, 1, 0, 0, 1, 0]' : 0.256435}
{'[0, 1, 2, 5, 0, 2, 1, 1, 29, 0, 28, 29, 0, 1, 0, 0, 1, 0]' : 0.256867}
{'[0, 1, 2, 5, 0, 2, 1, 1, 29, 0, 28, 29, 0, 1, 0, 0, 1, 0]' : 0.25676}
{'[0, 1, 2, 5, 0, 2, 1, 1, 29, 0, 28, 29, 0, 1, 0, 0, 1, 0]' : 0.256962}
{'[0, 1, 2, 5, 0, 2, 1, 1, 29, 0, 28, 29, 0, 1, 0, 0, 1, 0]' : 0.256674}
{'[0, 1, 2, 5, 0, 2, 1, 1, 29, 0, 28, 29, 0, 1, 0, 0, 1, 0]' : 0.256873}
{'[0, 1, 2, 5, 0, 2, 1, 1, 29, 0, 28, 29, 0, 1, 0, 0, 1, 0]' : 0.256622}
{'[0, 1, 2, 5, 0, 2, 1, 1, 29, 0, 28, 29, 0, 1, 0, 0, 1, 0]' : 0.256464}
{'[0, 1, 2, 5, 0, 2, 1, 1, 29, 0, 28, 29, 0, 1, 0, 0, 1, 0]' : 0.256532}
{'[0, 1, 2, 5, 0, 2, 1, 1, 29, 0, 28, 29, 0, 1, 0, 0, 1, 0]' : 0.256765}
{'[0, 1, 2, 5, 0, 2, 1, 1, 29, 0, 28, 29, 0, 1, 0, 0, 1, 0]' : 0.256923}
{'[0, 1, 2, 5, 0, 2, 1, 1, 29, 0, 28, 29, 0, 1, 0, 0, 1, 0]' : 0.256551}
{'[0, 1, 2, 5, 0, 2, 1, 1, 29, 0, 28, 29, 0, 1, 0, 0, 1, 0]' : 0.257028}
{'[0, 1, 2, 5, 0, 2, 1, 1, 29, 0, 28, 29, 0, 1, 0, 0, 1, 0]' : 0.256879}
{'[0, 1, 2, 5, 0, 2, 1, 1, 29, 0, 28, 29, 0, 1, 0, 0, 1, 0]' : 0.257592}
{'[0, 1, 2, 5, 0, 2, 1, 1, 29, 0, 28, 29, 0, 1, 0, 0, 1, 0]' : 0.256669}
{'[0, 1, 2, 5, 0, 2, 1, 1, 29, 0, 28, 29, 0, 1, 0, 0, 1, 0]' : 0.256493}
{'[0, 1, 2, 5, 0, 2, 1, 1, 29, 0, 28, 29, 0, 1, 0, 0, 1, 0]' : 0.257156}
{'[0, 1, 2, 5, 0, 2, 1, 1, 29, 0, 28, 29, 0, 1, 0, 0, 1, 0]' : 0.257087}
{'[0, 1, 2, 5, 0, 2, 1, 1, 29, 0, 28, 29, 0, 1, 0, 0, 1, 0]' : 0.256838}
{'[0, 1, 2, 5, 0, 2, 1, 1, 29, 0, 28, 29, 0, 1, 0, 0, 1, 0]' : 0.256799}
{'[0, 1, 2, 5, 0, 2, 1, 1, 29, 0, 28, 29, 0, 1, 0, 0, 1, 0]' : 0.256587}
{'[0, 1, 2, 5, 0, 2, 1, 1, 29, 0, 28, 29, 0, 1, 0, 0, 1, 0]' : 0.256864}
{'[0, 1, 2, 5, 0, 2, 1, 1, 29, 0, 28, 29, 0, 1, 0, 0, 1, 0]' : 0.256652}
{'[0, 1, 2, 5, 0, 2, 1, 1, 29, 0, 28, 29, 0, 1, 0, 0, 1, 0]' : 0.256544}
{'[0, 1, 2, 5, 0, 2, 1, 1, 29, 0, 28, 29, 0, 1, 0, 0, 1, 0]' : 0.256685}
{'[0, 1, 2, 5, 0, 2, 1, 1, 29, 0, 28, 29, 0, 1, 0, 0, 1, 0]' : 0.257033}

out:
 ["{'[0, 1, 2, 5, 0, 2, 1, 1, 29, 0, 28, 29, 0, 1, 0, 0, 1, 0]' : 0.310408}", "{'[0, 1, 2, 5, 0, 2, 1, 1, 29, 0, 28, 29, 0, 1, 0, 0, 1, 0]' : 0.285018}", "{'[0, 1, 2, 5, 0, 2, 1, 1, 29, 0, 28, 29, 0, 1, 0, 0, 1, 0]' : 0.25676}", "{'[0, 1, 2, 5, 0, 2, 1, 1, 29, 0, 28, 29, 0, 1, 0, 0, 1, 0]' : 0.256435}", "{'[0, 1, 2, 5, 0, 2, 1, 1, 29, 0, 28, 29, 0, 1, 0, 0, 1, 0]' : 0.256867}", "{'[0, 1, 2, 5, 0, 2, 1, 1, 29, 0, 28, 29, 0, 1, 0, 0, 1, 0]' : 0.25676}", "{'[0, 1, 2, 5, 0, 2, 1, 1, 29, 0, 28, 29, 0, 1, 0, 0, 1, 0]' : 0.256962}", "{'[0, 1, 2, 5, 0, 2, 1, 1, 29, 0, 28, 29, 0, 1, 0, 0, 1, 0]' : 0.256674}", "{'[0, 1, 2, 5, 0, 2, 1, 1, 29, 0, 28, 29, 0, 1, 0, 0, 1, 0]' : 0.256873}", "{'[0, 1, 2, 5, 0, 2, 1, 1, 29, 0, 28, 29, 0, 1, 0, 0, 1, 0]' : 0.256622}", "{'[0, 1, 2, 5, 0, 2, 1, 1, 29, 0, 28, 29, 0, 1, 0, 0, 1, 0]' : 0.256464}", "{'[0, 1, 2, 5, 0, 2, 1, 1, 29, 0, 28, 29, 0, 1, 0, 0, 1, 0]' : 0.256532}", "{'[0, 1, 2, 5, 0, 2, 1, 1, 29, 0, 28, 29, 0, 1, 0, 0, 1, 0]' : 0.256765}", "{'[0, 1, 2, 5, 0, 2, 1, 1, 29, 0, 28, 29, 0, 1, 0, 0, 1, 0]' : 0.256923}", "{'[0, 1, 2, 5, 0, 2, 1, 1, 29, 0, 28, 29, 0, 1, 0, 0, 1, 0]' : 0.256551}", "{'[0, 1, 2, 5, 0, 2, 1, 1, 29, 0, 28, 29, 0, 1, 0, 0, 1, 0]' : 0.257028}", "{'[0, 1, 2, 5, 0, 2, 1, 1, 29, 0, 28, 29, 0, 1, 0, 0, 1, 0]' : 0.256879}", "{'[0, 1, 2, 5, 0, 2, 1, 1, 29, 0, 28, 29, 0, 1, 0, 0, 1, 0]' : 0.257592}", "{'[0, 1, 2, 5, 0, 2, 1, 1, 29, 0, 28, 29, 0, 1, 0, 0, 1, 0]' : 0.256669}", "{'[0, 1, 2, 5, 0, 2, 1, 1, 29, 0, 28, 29, 0, 1, 0, 0, 1, 0]' : 0.256493}", "{'[0, 1, 2, 5, 0, 2, 1, 1, 29, 0, 28, 29, 0, 1, 0, 0, 1, 0]' : 0.257156}", "{'[0, 1, 2, 5, 0, 2, 1, 1, 29, 0, 28, 29, 0, 1, 0, 0, 1, 0]' : 0.257087}", "{'[0, 1, 2, 5, 0, 2, 1, 1, 29, 0, 28, 29, 0, 1, 0, 0, 1, 0]' : 0.256838}", "{'[0, 1, 2, 5, 0, 2, 1, 1, 29, 0, 28, 29, 0, 1, 0, 0, 1, 0]' : 0.256799}", "{'[0, 1, 2, 5, 0, 2, 1, 1, 29, 0, 28, 29, 0, 1, 0, 0, 1, 0]' : 0.256587}", "{'[0, 1, 2, 5, 0, 2, 1, 1, 29, 0, 28, 29, 0, 1, 0, 0, 1, 0]' : 0.256864}", "{'[0, 1, 2, 5, 0, 2, 1, 1, 29, 0, 28, 29, 0, 1, 0, 0, 1, 0]' : 0.256652}", "{'[0, 1, 2, 5, 0, 2, 1, 1, 29, 0, 28, 29, 0, 1, 0, 0, 1, 0]' : 0.256544}", "{'[0, 1, 2, 5, 0, 2, 1, 1, 29, 0, 28, 29, 0, 1, 0, 0, 1, 0]' : 0.256685}", "{'[0, 1, 2, 5, 0, 2, 1, 1, 29, 0, 28, 29, 0, 1, 0, 0, 1, 0]' : 0.257033}"]
returning from 'run': {'[0, 1, 2, 5, 0, 2, 1, 1, 29, 0, 28, 29, 0, 1, 0, 0, 1, 0]': ([0.310408, 0.285018, 0.25676, 0.256435, 0.256867, 0.25676, 0.256962, 0.256674, 0.256873, 0.256622, 0.256464, 0.256532, 0.256765, 0.256923, 0.256551, 0.257028, 0.256879, 0.257592, 0.256669, 0.256493, 0.257156, 0.257087, 0.256838, 0.256799, 0.256587, 0.256864, 0.256652, 0.256544, 0.256685, 0.257033], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 1, 2, 5, 0, 2, 1, 1, 29, 0, 28, 29, 0, 1, 0, 0, 1, 0]': ([0.310408, 0.285018, 0.25676, 0.256435, 0.256867, 0.25676, 0.256962, 0.256674, 0.256873, 0.256622, 0.256464, 0.256532, 0.256765, 0.256923, 0.256551, 0.257028, 0.256879, 0.257592, 0.256669, 0.256493, 0.257156, 0.257087, 0.256838, 0.256799, 0.256587, 0.256864, 0.256652, 0.256544, 0.256685, 0.257033], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	25
        Max loop nest depth: 	6
        Additions: 		1407
        Multiplications: 	342
        Divisions: 		0
        Logical: 		0
        Reads: 			2185
        Writes: 		228
        Comparisons:		25
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest22.exe __orio_perftest22.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest22.exe  
Program Test Output: 
{'[1, 4, 2, 1, 5, 6, 0, 1, 0, 0, 2, 13, 1, 0, 0, 0, 0, 0]' : 0.132202}
{'[1, 4, 2, 1, 5, 6, 0, 1, 0, 0, 2, 13, 1, 0, 0, 0, 0, 0]' : 0.132021}
{'[1, 4, 2, 1, 5, 6, 0, 1, 0, 0, 2, 13, 1, 0, 0, 0, 0, 0]' : 0.13207}
{'[1, 4, 2, 1, 5, 6, 0, 1, 0, 0, 2, 13, 1, 0, 0, 0, 0, 0]' : 0.124469}
{'[1, 4, 2, 1, 5, 6, 0, 1, 0, 0, 2, 13, 1, 0, 0, 0, 0, 0]' : 0.11825}
{'[1, 4, 2, 1, 5, 6, 0, 1, 0, 0, 2, 13, 1, 0, 0, 0, 0, 0]' : 0.116629}
{'[1, 4, 2, 1, 5, 6, 0, 1, 0, 0, 2, 13, 1, 0, 0, 0, 0, 0]' : 0.12007}
{'[1, 4, 2, 1, 5, 6, 0, 1, 0, 0, 2, 13, 1, 0, 0, 0, 0, 0]' : 0.120463}
{'[1, 4, 2, 1, 5, 6, 0, 1, 0, 0, 2, 13, 1, 0, 0, 0, 0, 0]' : 0.120528}
{'[1, 4, 2, 1, 5, 6, 0, 1, 0, 0, 2, 13, 1, 0, 0, 0, 0, 0]' : 0.120635}
{'[1, 4, 2, 1, 5, 6, 0, 1, 0, 0, 2, 13, 1, 0, 0, 0, 0, 0]' : 0.118722}
{'[1, 4, 2, 1, 5, 6, 0, 1, 0, 0, 2, 13, 1, 0, 0, 0, 0, 0]' : 0.11801}
{'[1, 4, 2, 1, 5, 6, 0, 1, 0, 0, 2, 13, 1, 0, 0, 0, 0, 0]' : 0.118315}
{'[1, 4, 2, 1, 5, 6, 0, 1, 0, 0, 2, 13, 1, 0, 0, 0, 0, 0]' : 0.118369}
{'[1, 4, 2, 1, 5, 6, 0, 1, 0, 0, 2, 13, 1, 0, 0, 0, 0, 0]' : 0.118169}
{'[1, 4, 2, 1, 5, 6, 0, 1, 0, 0, 2, 13, 1, 0, 0, 0, 0, 0]' : 0.118024}
{'[1, 4, 2, 1, 5, 6, 0, 1, 0, 0, 2, 13, 1, 0, 0, 0, 0, 0]' : 0.118107}
{'[1, 4, 2, 1, 5, 6, 0, 1, 0, 0, 2, 13, 1, 0, 0, 0, 0, 0]' : 0.118117}
{'[1, 4, 2, 1, 5, 6, 0, 1, 0, 0, 2, 13, 1, 0, 0, 0, 0, 0]' : 0.118285}
{'[1, 4, 2, 1, 5, 6, 0, 1, 0, 0, 2, 13, 1, 0, 0, 0, 0, 0]' : 0.118258}
{'[1, 4, 2, 1, 5, 6, 0, 1, 0, 0, 2, 13, 1, 0, 0, 0, 0, 0]' : 0.118162}
{'[1, 4, 2, 1, 5, 6, 0, 1, 0, 0, 2, 13, 1, 0, 0, 0, 0, 0]' : 0.118094}
{'[1, 4, 2, 1, 5, 6, 0, 1, 0, 0, 2, 13, 1, 0, 0, 0, 0, 0]' : 0.120406}
{'[1, 4, 2, 1, 5, 6, 0, 1, 0, 0, 2, 13, 1, 0, 0, 0, 0, 0]' : 0.121229}
{'[1, 4, 2, 1, 5, 6, 0, 1, 0, 0, 2, 13, 1, 0, 0, 0, 0, 0]' : 0.121354}
{'[1, 4, 2, 1, 5, 6, 0, 1, 0, 0, 2, 13, 1, 0, 0, 0, 0, 0]' : 0.121327}
{'[1, 4, 2, 1, 5, 6, 0, 1, 0, 0, 2, 13, 1, 0, 0, 0, 0, 0]' : 0.121242}
{'[1, 4, 2, 1, 5, 6, 0, 1, 0, 0, 2, 13, 1, 0, 0, 0, 0, 0]' : 0.121335}
{'[1, 4, 2, 1, 5, 6, 0, 1, 0, 0, 2, 13, 1, 0, 0, 0, 0, 0]' : 0.12138}
{'[1, 4, 2, 1, 5, 6, 0, 1, 0, 0, 2, 13, 1, 0, 0, 0, 0, 0]' : 0.121418}

out:
 ["{'[1, 4, 2, 1, 5, 6, 0, 1, 0, 0, 2, 13, 1, 0, 0, 0, 0, 0]' : 0.132202}", "{'[1, 4, 2, 1, 5, 6, 0, 1, 0, 0, 2, 13, 1, 0, 0, 0, 0, 0]' : 0.132021}", "{'[1, 4, 2, 1, 5, 6, 0, 1, 0, 0, 2, 13, 1, 0, 0, 0, 0, 0]' : 0.13207}", "{'[1, 4, 2, 1, 5, 6, 0, 1, 0, 0, 2, 13, 1, 0, 0, 0, 0, 0]' : 0.124469}", "{'[1, 4, 2, 1, 5, 6, 0, 1, 0, 0, 2, 13, 1, 0, 0, 0, 0, 0]' : 0.11825}", "{'[1, 4, 2, 1, 5, 6, 0, 1, 0, 0, 2, 13, 1, 0, 0, 0, 0, 0]' : 0.116629}", "{'[1, 4, 2, 1, 5, 6, 0, 1, 0, 0, 2, 13, 1, 0, 0, 0, 0, 0]' : 0.12007}", "{'[1, 4, 2, 1, 5, 6, 0, 1, 0, 0, 2, 13, 1, 0, 0, 0, 0, 0]' : 0.120463}", "{'[1, 4, 2, 1, 5, 6, 0, 1, 0, 0, 2, 13, 1, 0, 0, 0, 0, 0]' : 0.120528}", "{'[1, 4, 2, 1, 5, 6, 0, 1, 0, 0, 2, 13, 1, 0, 0, 0, 0, 0]' : 0.120635}", "{'[1, 4, 2, 1, 5, 6, 0, 1, 0, 0, 2, 13, 1, 0, 0, 0, 0, 0]' : 0.118722}", "{'[1, 4, 2, 1, 5, 6, 0, 1, 0, 0, 2, 13, 1, 0, 0, 0, 0, 0]' : 0.11801}", "{'[1, 4, 2, 1, 5, 6, 0, 1, 0, 0, 2, 13, 1, 0, 0, 0, 0, 0]' : 0.118315}", "{'[1, 4, 2, 1, 5, 6, 0, 1, 0, 0, 2, 13, 1, 0, 0, 0, 0, 0]' : 0.118369}", "{'[1, 4, 2, 1, 5, 6, 0, 1, 0, 0, 2, 13, 1, 0, 0, 0, 0, 0]' : 0.118169}", "{'[1, 4, 2, 1, 5, 6, 0, 1, 0, 0, 2, 13, 1, 0, 0, 0, 0, 0]' : 0.118024}", "{'[1, 4, 2, 1, 5, 6, 0, 1, 0, 0, 2, 13, 1, 0, 0, 0, 0, 0]' : 0.118107}", "{'[1, 4, 2, 1, 5, 6, 0, 1, 0, 0, 2, 13, 1, 0, 0, 0, 0, 0]' : 0.118117}", "{'[1, 4, 2, 1, 5, 6, 0, 1, 0, 0, 2, 13, 1, 0, 0, 0, 0, 0]' : 0.118285}", "{'[1, 4, 2, 1, 5, 6, 0, 1, 0, 0, 2, 13, 1, 0, 0, 0, 0, 0]' : 0.118258}", "{'[1, 4, 2, 1, 5, 6, 0, 1, 0, 0, 2, 13, 1, 0, 0, 0, 0, 0]' : 0.118162}", "{'[1, 4, 2, 1, 5, 6, 0, 1, 0, 0, 2, 13, 1, 0, 0, 0, 0, 0]' : 0.118094}", "{'[1, 4, 2, 1, 5, 6, 0, 1, 0, 0, 2, 13, 1, 0, 0, 0, 0, 0]' : 0.120406}", "{'[1, 4, 2, 1, 5, 6, 0, 1, 0, 0, 2, 13, 1, 0, 0, 0, 0, 0]' : 0.121229}", "{'[1, 4, 2, 1, 5, 6, 0, 1, 0, 0, 2, 13, 1, 0, 0, 0, 0, 0]' : 0.121354}", "{'[1, 4, 2, 1, 5, 6, 0, 1, 0, 0, 2, 13, 1, 0, 0, 0, 0, 0]' : 0.121327}", "{'[1, 4, 2, 1, 5, 6, 0, 1, 0, 0, 2, 13, 1, 0, 0, 0, 0, 0]' : 0.121242}", "{'[1, 4, 2, 1, 5, 6, 0, 1, 0, 0, 2, 13, 1, 0, 0, 0, 0, 0]' : 0.121335}", "{'[1, 4, 2, 1, 5, 6, 0, 1, 0, 0, 2, 13, 1, 0, 0, 0, 0, 0]' : 0.12138}", "{'[1, 4, 2, 1, 5, 6, 0, 1, 0, 0, 2, 13, 1, 0, 0, 0, 0, 0]' : 0.121418}"]
returning from 'run': {'[1, 4, 2, 1, 5, 6, 0, 1, 0, 0, 2, 13, 1, 0, 0, 0, 0, 0]': ([0.132202, 0.132021, 0.13207, 0.124469, 0.11825, 0.116629, 0.12007, 0.120463, 0.120528, 0.120635, 0.118722, 0.11801, 0.118315, 0.118369, 0.118169, 0.118024, 0.118107, 0.118117, 0.118285, 0.118258, 0.118162, 0.118094, 0.120406, 0.121229, 0.121354, 0.121327, 0.121242, 0.121335, 0.12138, 0.121418], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 4, 2, 1, 5, 6, 0, 1, 0, 0, 2, 13, 1, 0, 0, 0, 0, 0]': ([0.132202, 0.132021, 0.13207, 0.124469, 0.11825, 0.116629, 0.12007, 0.120463, 0.120528, 0.120635, 0.118722, 0.11801, 0.118315, 0.118369, 0.118169, 0.118024, 0.118107, 0.118117, 0.118285, 0.118258, 0.118162, 0.118094, 0.120406, 0.121229, 0.121354, 0.121327, 0.121242, 0.121335, 0.12138, 0.121418], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = kkk
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	6
        Additions: 		749
        Multiplications: 	224
        Divisions: 		0
        Logical: 		0
        Reads: 			1332
        Writes: 		191
        Comparisons:		18
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest23.exe __orio_perftest23.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest23.exe  
Program Test Output: 
{'[1, 6, 4, 2, 5, 2, 0, 0, 29, 2, 0, 25, 0, 0, 0, 0, 0, 1]' : 0.147144}
{'[1, 6, 4, 2, 5, 2, 0, 0, 29, 2, 0, 25, 0, 0, 0, 0, 0, 1]' : 0.147246}
{'[1, 6, 4, 2, 5, 2, 0, 0, 29, 2, 0, 25, 0, 0, 0, 0, 0, 1]' : 0.147056}
{'[1, 6, 4, 2, 5, 2, 0, 0, 29, 2, 0, 25, 0, 0, 0, 0, 0, 1]' : 0.129944}
{'[1, 6, 4, 2, 5, 2, 0, 0, 29, 2, 0, 25, 0, 0, 0, 0, 0, 1]' : 0.125269}
{'[1, 6, 4, 2, 5, 2, 0, 0, 29, 2, 0, 25, 0, 0, 0, 0, 0, 1]' : 0.124988}
{'[1, 6, 4, 2, 5, 2, 0, 0, 29, 2, 0, 25, 0, 0, 0, 0, 0, 1]' : 0.125275}
{'[1, 6, 4, 2, 5, 2, 0, 0, 29, 2, 0, 25, 0, 0, 0, 0, 0, 1]' : 0.125218}
{'[1, 6, 4, 2, 5, 2, 0, 0, 29, 2, 0, 25, 0, 0, 0, 0, 0, 1]' : 0.125551}
{'[1, 6, 4, 2, 5, 2, 0, 0, 29, 2, 0, 25, 0, 0, 0, 0, 0, 1]' : 0.125351}
{'[1, 6, 4, 2, 5, 2, 0, 0, 29, 2, 0, 25, 0, 0, 0, 0, 0, 1]' : 0.124978}
{'[1, 6, 4, 2, 5, 2, 0, 0, 29, 2, 0, 25, 0, 0, 0, 0, 0, 1]' : 0.124921}
{'[1, 6, 4, 2, 5, 2, 0, 0, 29, 2, 0, 25, 0, 0, 0, 0, 0, 1]' : 0.125057}
{'[1, 6, 4, 2, 5, 2, 0, 0, 29, 2, 0, 25, 0, 0, 0, 0, 0, 1]' : 0.125039}
{'[1, 6, 4, 2, 5, 2, 0, 0, 29, 2, 0, 25, 0, 0, 0, 0, 0, 1]' : 0.125062}
{'[1, 6, 4, 2, 5, 2, 0, 0, 29, 2, 0, 25, 0, 0, 0, 0, 0, 1]' : 0.125116}
{'[1, 6, 4, 2, 5, 2, 0, 0, 29, 2, 0, 25, 0, 0, 0, 0, 0, 1]' : 0.125266}
{'[1, 6, 4, 2, 5, 2, 0, 0, 29, 2, 0, 25, 0, 0, 0, 0, 0, 1]' : 0.125311}
{'[1, 6, 4, 2, 5, 2, 0, 0, 29, 2, 0, 25, 0, 0, 0, 0, 0, 1]' : 0.124999}
{'[1, 6, 4, 2, 5, 2, 0, 0, 29, 2, 0, 25, 0, 0, 0, 0, 0, 1]' : 0.124992}
{'[1, 6, 4, 2, 5, 2, 0, 0, 29, 2, 0, 25, 0, 0, 0, 0, 0, 1]' : 0.125339}
{'[1, 6, 4, 2, 5, 2, 0, 0, 29, 2, 0, 25, 0, 0, 0, 0, 0, 1]' : 0.125359}
{'[1, 6, 4, 2, 5, 2, 0, 0, 29, 2, 0, 25, 0, 0, 0, 0, 0, 1]' : 0.125004}
{'[1, 6, 4, 2, 5, 2, 0, 0, 29, 2, 0, 25, 0, 0, 0, 0, 0, 1]' : 0.125077}
{'[1, 6, 4, 2, 5, 2, 0, 0, 29, 2, 0, 25, 0, 0, 0, 0, 0, 1]' : 0.12493}
{'[1, 6, 4, 2, 5, 2, 0, 0, 29, 2, 0, 25, 0, 0, 0, 0, 0, 1]' : 0.125373}
{'[1, 6, 4, 2, 5, 2, 0, 0, 29, 2, 0, 25, 0, 0, 0, 0, 0, 1]' : 0.124991}
{'[1, 6, 4, 2, 5, 2, 0, 0, 29, 2, 0, 25, 0, 0, 0, 0, 0, 1]' : 0.124978}
{'[1, 6, 4, 2, 5, 2, 0, 0, 29, 2, 0, 25, 0, 0, 0, 0, 0, 1]' : 0.125041}
{'[1, 6, 4, 2, 5, 2, 0, 0, 29, 2, 0, 25, 0, 0, 0, 0, 0, 1]' : 0.125144}

out:
 ["{'[1, 6, 4, 2, 5, 2, 0, 0, 29, 2, 0, 25, 0, 0, 0, 0, 0, 1]' : 0.147144}", "{'[1, 6, 4, 2, 5, 2, 0, 0, 29, 2, 0, 25, 0, 0, 0, 0, 0, 1]' : 0.147246}", "{'[1, 6, 4, 2, 5, 2, 0, 0, 29, 2, 0, 25, 0, 0, 0, 0, 0, 1]' : 0.147056}", "{'[1, 6, 4, 2, 5, 2, 0, 0, 29, 2, 0, 25, 0, 0, 0, 0, 0, 1]' : 0.129944}", "{'[1, 6, 4, 2, 5, 2, 0, 0, 29, 2, 0, 25, 0, 0, 0, 0, 0, 1]' : 0.125269}", "{'[1, 6, 4, 2, 5, 2, 0, 0, 29, 2, 0, 25, 0, 0, 0, 0, 0, 1]' : 0.124988}", "{'[1, 6, 4, 2, 5, 2, 0, 0, 29, 2, 0, 25, 0, 0, 0, 0, 0, 1]' : 0.125275}", "{'[1, 6, 4, 2, 5, 2, 0, 0, 29, 2, 0, 25, 0, 0, 0, 0, 0, 1]' : 0.125218}", "{'[1, 6, 4, 2, 5, 2, 0, 0, 29, 2, 0, 25, 0, 0, 0, 0, 0, 1]' : 0.125551}", "{'[1, 6, 4, 2, 5, 2, 0, 0, 29, 2, 0, 25, 0, 0, 0, 0, 0, 1]' : 0.125351}", "{'[1, 6, 4, 2, 5, 2, 0, 0, 29, 2, 0, 25, 0, 0, 0, 0, 0, 1]' : 0.124978}", "{'[1, 6, 4, 2, 5, 2, 0, 0, 29, 2, 0, 25, 0, 0, 0, 0, 0, 1]' : 0.124921}", "{'[1, 6, 4, 2, 5, 2, 0, 0, 29, 2, 0, 25, 0, 0, 0, 0, 0, 1]' : 0.125057}", "{'[1, 6, 4, 2, 5, 2, 0, 0, 29, 2, 0, 25, 0, 0, 0, 0, 0, 1]' : 0.125039}", "{'[1, 6, 4, 2, 5, 2, 0, 0, 29, 2, 0, 25, 0, 0, 0, 0, 0, 1]' : 0.125062}", "{'[1, 6, 4, 2, 5, 2, 0, 0, 29, 2, 0, 25, 0, 0, 0, 0, 0, 1]' : 0.125116}", "{'[1, 6, 4, 2, 5, 2, 0, 0, 29, 2, 0, 25, 0, 0, 0, 0, 0, 1]' : 0.125266}", "{'[1, 6, 4, 2, 5, 2, 0, 0, 29, 2, 0, 25, 0, 0, 0, 0, 0, 1]' : 0.125311}", "{'[1, 6, 4, 2, 5, 2, 0, 0, 29, 2, 0, 25, 0, 0, 0, 0, 0, 1]' : 0.124999}", "{'[1, 6, 4, 2, 5, 2, 0, 0, 29, 2, 0, 25, 0, 0, 0, 0, 0, 1]' : 0.124992}", "{'[1, 6, 4, 2, 5, 2, 0, 0, 29, 2, 0, 25, 0, 0, 0, 0, 0, 1]' : 0.125339}", "{'[1, 6, 4, 2, 5, 2, 0, 0, 29, 2, 0, 25, 0, 0, 0, 0, 0, 1]' : 0.125359}", "{'[1, 6, 4, 2, 5, 2, 0, 0, 29, 2, 0, 25, 0, 0, 0, 0, 0, 1]' : 0.125004}", "{'[1, 6, 4, 2, 5, 2, 0, 0, 29, 2, 0, 25, 0, 0, 0, 0, 0, 1]' : 0.125077}", "{'[1, 6, 4, 2, 5, 2, 0, 0, 29, 2, 0, 25, 0, 0, 0, 0, 0, 1]' : 0.12493}", "{'[1, 6, 4, 2, 5, 2, 0, 0, 29, 2, 0, 25, 0, 0, 0, 0, 0, 1]' : 0.125373}", "{'[1, 6, 4, 2, 5, 2, 0, 0, 29, 2, 0, 25, 0, 0, 0, 0, 0, 1]' : 0.124991}", "{'[1, 6, 4, 2, 5, 2, 0, 0, 29, 2, 0, 25, 0, 0, 0, 0, 0, 1]' : 0.124978}", "{'[1, 6, 4, 2, 5, 2, 0, 0, 29, 2, 0, 25, 0, 0, 0, 0, 0, 1]' : 0.125041}", "{'[1, 6, 4, 2, 5, 2, 0, 0, 29, 2, 0, 25, 0, 0, 0, 0, 0, 1]' : 0.125144}"]
returning from 'run': {'[1, 6, 4, 2, 5, 2, 0, 0, 29, 2, 0, 25, 0, 0, 0, 0, 0, 1]': ([0.147144, 0.147246, 0.147056, 0.129944, 0.125269, 0.124988, 0.125275, 0.125218, 0.125551, 0.125351, 0.124978, 0.124921, 0.125057, 0.125039, 0.125062, 0.125116, 0.125266, 0.125311, 0.124999, 0.124992, 0.125339, 0.125359, 0.125004, 0.125077, 0.12493, 0.125373, 0.124991, 0.124978, 0.125041, 0.125144], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 6, 4, 2, 5, 2, 0, 0, 29, 2, 0, 25, 0, 0, 0, 0, 0, 1]': ([0.147144, 0.147246, 0.147056, 0.129944, 0.125269, 0.124988, 0.125275, 0.125218, 0.125551, 0.125351, 0.124978, 0.124921, 0.125057, 0.125039, 0.125062, 0.125116, 0.125266, 0.125311, 0.124999, 0.124992, 0.125339, 0.125359, 0.125004, 0.125077, 0.12493, 0.125373, 0.124991, 0.124978, 0.125041, 0.125144], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	5
        Additions: 		279
        Multiplications: 	76
        Divisions: 		0
        Logical: 		0
        Reads: 			541
        Writes: 		71
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest24.exe __orio_perftest24.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest24.exe  
Program Test Output: 
{'[1, 0, 0, 2, 0, 6, 0, 1, 2, 0, 26, 28, 0, 1, 0, 0, 0, 1]' : 0.241215}
{'[1, 0, 0, 2, 0, 6, 0, 1, 2, 0, 26, 28, 0, 1, 0, 0, 0, 1]' : 0.229693}
{'[1, 0, 0, 2, 0, 6, 0, 1, 2, 0, 26, 28, 0, 1, 0, 0, 0, 1]' : 0.20073}
{'[1, 0, 0, 2, 0, 6, 0, 1, 2, 0, 26, 28, 0, 1, 0, 0, 0, 1]' : 0.200826}
{'[1, 0, 0, 2, 0, 6, 0, 1, 2, 0, 26, 28, 0, 1, 0, 0, 0, 1]' : 0.200641}
{'[1, 0, 0, 2, 0, 6, 0, 1, 2, 0, 26, 28, 0, 1, 0, 0, 0, 1]' : 0.200746}
{'[1, 0, 0, 2, 0, 6, 0, 1, 2, 0, 26, 28, 0, 1, 0, 0, 0, 1]' : 0.2012}
{'[1, 0, 0, 2, 0, 6, 0, 1, 2, 0, 26, 28, 0, 1, 0, 0, 0, 1]' : 0.200523}
{'[1, 0, 0, 2, 0, 6, 0, 1, 2, 0, 26, 28, 0, 1, 0, 0, 0, 1]' : 0.200811}
{'[1, 0, 0, 2, 0, 6, 0, 1, 2, 0, 26, 28, 0, 1, 0, 0, 0, 1]' : 0.200756}
{'[1, 0, 0, 2, 0, 6, 0, 1, 2, 0, 26, 28, 0, 1, 0, 0, 0, 1]' : 0.200608}
{'[1, 0, 0, 2, 0, 6, 0, 1, 2, 0, 26, 28, 0, 1, 0, 0, 0, 1]' : 0.200783}
{'[1, 0, 0, 2, 0, 6, 0, 1, 2, 0, 26, 28, 0, 1, 0, 0, 0, 1]' : 0.200868}
{'[1, 0, 0, 2, 0, 6, 0, 1, 2, 0, 26, 28, 0, 1, 0, 0, 0, 1]' : 0.200916}
{'[1, 0, 0, 2, 0, 6, 0, 1, 2, 0, 26, 28, 0, 1, 0, 0, 0, 1]' : 0.200686}
{'[1, 0, 0, 2, 0, 6, 0, 1, 2, 0, 26, 28, 0, 1, 0, 0, 0, 1]' : 0.200786}
{'[1, 0, 0, 2, 0, 6, 0, 1, 2, 0, 26, 28, 0, 1, 0, 0, 0, 1]' : 0.200887}
{'[1, 0, 0, 2, 0, 6, 0, 1, 2, 0, 26, 28, 0, 1, 0, 0, 0, 1]' : 0.201241}
{'[1, 0, 0, 2, 0, 6, 0, 1, 2, 0, 26, 28, 0, 1, 0, 0, 0, 1]' : 0.200918}
{'[1, 0, 0, 2, 0, 6, 0, 1, 2, 0, 26, 28, 0, 1, 0, 0, 0, 1]' : 0.201062}
{'[1, 0, 0, 2, 0, 6, 0, 1, 2, 0, 26, 28, 0, 1, 0, 0, 0, 1]' : 0.200757}
{'[1, 0, 0, 2, 0, 6, 0, 1, 2, 0, 26, 28, 0, 1, 0, 0, 0, 1]' : 0.200654}
{'[1, 0, 0, 2, 0, 6, 0, 1, 2, 0, 26, 28, 0, 1, 0, 0, 0, 1]' : 0.201163}
{'[1, 0, 0, 2, 0, 6, 0, 1, 2, 0, 26, 28, 0, 1, 0, 0, 0, 1]' : 0.20106}
{'[1, 0, 0, 2, 0, 6, 0, 1, 2, 0, 26, 28, 0, 1, 0, 0, 0, 1]' : 0.201126}
{'[1, 0, 0, 2, 0, 6, 0, 1, 2, 0, 26, 28, 0, 1, 0, 0, 0, 1]' : 0.200787}
{'[1, 0, 0, 2, 0, 6, 0, 1, 2, 0, 26, 28, 0, 1, 0, 0, 0, 1]' : 0.200843}
{'[1, 0, 0, 2, 0, 6, 0, 1, 2, 0, 26, 28, 0, 1, 0, 0, 0, 1]' : 0.200724}
{'[1, 0, 0, 2, 0, 6, 0, 1, 2, 0, 26, 28, 0, 1, 0, 0, 0, 1]' : 0.201165}
{'[1, 0, 0, 2, 0, 6, 0, 1, 2, 0, 26, 28, 0, 1, 0, 0, 0, 1]' : 0.200771}

out:
 ["{'[1, 0, 0, 2, 0, 6, 0, 1, 2, 0, 26, 28, 0, 1, 0, 0, 0, 1]' : 0.241215}", "{'[1, 0, 0, 2, 0, 6, 0, 1, 2, 0, 26, 28, 0, 1, 0, 0, 0, 1]' : 0.229693}", "{'[1, 0, 0, 2, 0, 6, 0, 1, 2, 0, 26, 28, 0, 1, 0, 0, 0, 1]' : 0.20073}", "{'[1, 0, 0, 2, 0, 6, 0, 1, 2, 0, 26, 28, 0, 1, 0, 0, 0, 1]' : 0.200826}", "{'[1, 0, 0, 2, 0, 6, 0, 1, 2, 0, 26, 28, 0, 1, 0, 0, 0, 1]' : 0.200641}", "{'[1, 0, 0, 2, 0, 6, 0, 1, 2, 0, 26, 28, 0, 1, 0, 0, 0, 1]' : 0.200746}", "{'[1, 0, 0, 2, 0, 6, 0, 1, 2, 0, 26, 28, 0, 1, 0, 0, 0, 1]' : 0.2012}", "{'[1, 0, 0, 2, 0, 6, 0, 1, 2, 0, 26, 28, 0, 1, 0, 0, 0, 1]' : 0.200523}", "{'[1, 0, 0, 2, 0, 6, 0, 1, 2, 0, 26, 28, 0, 1, 0, 0, 0, 1]' : 0.200811}", "{'[1, 0, 0, 2, 0, 6, 0, 1, 2, 0, 26, 28, 0, 1, 0, 0, 0, 1]' : 0.200756}", "{'[1, 0, 0, 2, 0, 6, 0, 1, 2, 0, 26, 28, 0, 1, 0, 0, 0, 1]' : 0.200608}", "{'[1, 0, 0, 2, 0, 6, 0, 1, 2, 0, 26, 28, 0, 1, 0, 0, 0, 1]' : 0.200783}", "{'[1, 0, 0, 2, 0, 6, 0, 1, 2, 0, 26, 28, 0, 1, 0, 0, 0, 1]' : 0.200868}", "{'[1, 0, 0, 2, 0, 6, 0, 1, 2, 0, 26, 28, 0, 1, 0, 0, 0, 1]' : 0.200916}", "{'[1, 0, 0, 2, 0, 6, 0, 1, 2, 0, 26, 28, 0, 1, 0, 0, 0, 1]' : 0.200686}", "{'[1, 0, 0, 2, 0, 6, 0, 1, 2, 0, 26, 28, 0, 1, 0, 0, 0, 1]' : 0.200786}", "{'[1, 0, 0, 2, 0, 6, 0, 1, 2, 0, 26, 28, 0, 1, 0, 0, 0, 1]' : 0.200887}", "{'[1, 0, 0, 2, 0, 6, 0, 1, 2, 0, 26, 28, 0, 1, 0, 0, 0, 1]' : 0.201241}", "{'[1, 0, 0, 2, 0, 6, 0, 1, 2, 0, 26, 28, 0, 1, 0, 0, 0, 1]' : 0.200918}", "{'[1, 0, 0, 2, 0, 6, 0, 1, 2, 0, 26, 28, 0, 1, 0, 0, 0, 1]' : 0.201062}", "{'[1, 0, 0, 2, 0, 6, 0, 1, 2, 0, 26, 28, 0, 1, 0, 0, 0, 1]' : 0.200757}", "{'[1, 0, 0, 2, 0, 6, 0, 1, 2, 0, 26, 28, 0, 1, 0, 0, 0, 1]' : 0.200654}", "{'[1, 0, 0, 2, 0, 6, 0, 1, 2, 0, 26, 28, 0, 1, 0, 0, 0, 1]' : 0.201163}", "{'[1, 0, 0, 2, 0, 6, 0, 1, 2, 0, 26, 28, 0, 1, 0, 0, 0, 1]' : 0.20106}", "{'[1, 0, 0, 2, 0, 6, 0, 1, 2, 0, 26, 28, 0, 1, 0, 0, 0, 1]' : 0.201126}", "{'[1, 0, 0, 2, 0, 6, 0, 1, 2, 0, 26, 28, 0, 1, 0, 0, 0, 1]' : 0.200787}", "{'[1, 0, 0, 2, 0, 6, 0, 1, 2, 0, 26, 28, 0, 1, 0, 0, 0, 1]' : 0.200843}", "{'[1, 0, 0, 2, 0, 6, 0, 1, 2, 0, 26, 28, 0, 1, 0, 0, 0, 1]' : 0.200724}", "{'[1, 0, 0, 2, 0, 6, 0, 1, 2, 0, 26, 28, 0, 1, 0, 0, 0, 1]' : 0.201165}", "{'[1, 0, 0, 2, 0, 6, 0, 1, 2, 0, 26, 28, 0, 1, 0, 0, 0, 1]' : 0.200771}"]
returning from 'run': {'[1, 0, 0, 2, 0, 6, 0, 1, 2, 0, 26, 28, 0, 1, 0, 0, 0, 1]': ([0.241215, 0.229693, 0.20073, 0.200826, 0.200641, 0.200746, 0.2012, 0.200523, 0.200811, 0.200756, 0.200608, 0.200783, 0.200868, 0.200916, 0.200686, 0.200786, 0.200887, 0.201241, 0.200918, 0.201062, 0.200757, 0.200654, 0.201163, 0.20106, 0.201126, 0.200787, 0.200843, 0.200724, 0.201165, 0.200771], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 0, 2, 0, 6, 0, 1, 2, 0, 26, 28, 0, 1, 0, 0, 0, 1]': ([0.241215, 0.229693, 0.20073, 0.200826, 0.200641, 0.200746, 0.2012, 0.200523, 0.200811, 0.200756, 0.200608, 0.200783, 0.200868, 0.200916, 0.200686, 0.200786, 0.200887, 0.201241, 0.200918, 0.201062, 0.200757, 0.200654, 0.201163, 0.20106, 0.201126, 0.200787, 0.200843, 0.200724, 0.201165, 0.200771], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	5
        Additions: 		109
        Multiplications: 	28
        Divisions: 		0
        Logical: 		0
        Reads: 			255
        Writes: 		62
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest25.exe __orio_perftest25.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest25.exe  
Program Test Output: 
{'[0, 3, 6, 6, 6, 0, 1, 0, 4, 0, 11, 4, 0, 1, 0, 1, 0, 1]' : 0.19321}
{'[0, 3, 6, 6, 6, 0, 1, 0, 4, 0, 11, 4, 0, 1, 0, 1, 0, 1]' : 0.192937}
{'[0, 3, 6, 6, 6, 0, 1, 0, 4, 0, 11, 4, 0, 1, 0, 1, 0, 1]' : 0.192914}
{'[0, 3, 6, 6, 6, 0, 1, 0, 4, 0, 11, 4, 0, 1, 0, 1, 0, 1]' : 0.167384}
{'[0, 3, 6, 6, 6, 0, 1, 0, 4, 0, 11, 4, 0, 1, 0, 1, 0, 1]' : 0.160834}
{'[0, 3, 6, 6, 6, 0, 1, 0, 4, 0, 11, 4, 0, 1, 0, 1, 0, 1]' : 0.160645}
{'[0, 3, 6, 6, 6, 0, 1, 0, 4, 0, 11, 4, 0, 1, 0, 1, 0, 1]' : 0.160577}
{'[0, 3, 6, 6, 6, 0, 1, 0, 4, 0, 11, 4, 0, 1, 0, 1, 0, 1]' : 0.160715}
{'[0, 3, 6, 6, 6, 0, 1, 0, 4, 0, 11, 4, 0, 1, 0, 1, 0, 1]' : 0.160991}
{'[0, 3, 6, 6, 6, 0, 1, 0, 4, 0, 11, 4, 0, 1, 0, 1, 0, 1]' : 0.160942}
{'[0, 3, 6, 6, 6, 0, 1, 0, 4, 0, 11, 4, 0, 1, 0, 1, 0, 1]' : 0.160995}
{'[0, 3, 6, 6, 6, 0, 1, 0, 4, 0, 11, 4, 0, 1, 0, 1, 0, 1]' : 0.160652}
{'[0, 3, 6, 6, 6, 0, 1, 0, 4, 0, 11, 4, 0, 1, 0, 1, 0, 1]' : 0.160877}
{'[0, 3, 6, 6, 6, 0, 1, 0, 4, 0, 11, 4, 0, 1, 0, 1, 0, 1]' : 0.16092}
{'[0, 3, 6, 6, 6, 0, 1, 0, 4, 0, 11, 4, 0, 1, 0, 1, 0, 1]' : 0.160864}
{'[0, 3, 6, 6, 6, 0, 1, 0, 4, 0, 11, 4, 0, 1, 0, 1, 0, 1]' : 0.160713}
{'[0, 3, 6, 6, 6, 0, 1, 0, 4, 0, 11, 4, 0, 1, 0, 1, 0, 1]' : 0.160919}
{'[0, 3, 6, 6, 6, 0, 1, 0, 4, 0, 11, 4, 0, 1, 0, 1, 0, 1]' : 0.160988}
{'[0, 3, 6, 6, 6, 0, 1, 0, 4, 0, 11, 4, 0, 1, 0, 1, 0, 1]' : 0.160701}
{'[0, 3, 6, 6, 6, 0, 1, 0, 4, 0, 11, 4, 0, 1, 0, 1, 0, 1]' : 0.160803}
{'[0, 3, 6, 6, 6, 0, 1, 0, 4, 0, 11, 4, 0, 1, 0, 1, 0, 1]' : 0.160868}
{'[0, 3, 6, 6, 6, 0, 1, 0, 4, 0, 11, 4, 0, 1, 0, 1, 0, 1]' : 0.16074}
{'[0, 3, 6, 6, 6, 0, 1, 0, 4, 0, 11, 4, 0, 1, 0, 1, 0, 1]' : 0.160877}
{'[0, 3, 6, 6, 6, 0, 1, 0, 4, 0, 11, 4, 0, 1, 0, 1, 0, 1]' : 0.161209}
{'[0, 3, 6, 6, 6, 0, 1, 0, 4, 0, 11, 4, 0, 1, 0, 1, 0, 1]' : 0.161061}
{'[0, 3, 6, 6, 6, 0, 1, 0, 4, 0, 11, 4, 0, 1, 0, 1, 0, 1]' : 0.16144}
{'[0, 3, 6, 6, 6, 0, 1, 0, 4, 0, 11, 4, 0, 1, 0, 1, 0, 1]' : 0.160741}
{'[0, 3, 6, 6, 6, 0, 1, 0, 4, 0, 11, 4, 0, 1, 0, 1, 0, 1]' : 0.16094}
{'[0, 3, 6, 6, 6, 0, 1, 0, 4, 0, 11, 4, 0, 1, 0, 1, 0, 1]' : 0.160854}
{'[0, 3, 6, 6, 6, 0, 1, 0, 4, 0, 11, 4, 0, 1, 0, 1, 0, 1]' : 0.160767}

out:
 ["{'[0, 3, 6, 6, 6, 0, 1, 0, 4, 0, 11, 4, 0, 1, 0, 1, 0, 1]' : 0.19321}", "{'[0, 3, 6, 6, 6, 0, 1, 0, 4, 0, 11, 4, 0, 1, 0, 1, 0, 1]' : 0.192937}", "{'[0, 3, 6, 6, 6, 0, 1, 0, 4, 0, 11, 4, 0, 1, 0, 1, 0, 1]' : 0.192914}", "{'[0, 3, 6, 6, 6, 0, 1, 0, 4, 0, 11, 4, 0, 1, 0, 1, 0, 1]' : 0.167384}", "{'[0, 3, 6, 6, 6, 0, 1, 0, 4, 0, 11, 4, 0, 1, 0, 1, 0, 1]' : 0.160834}", "{'[0, 3, 6, 6, 6, 0, 1, 0, 4, 0, 11, 4, 0, 1, 0, 1, 0, 1]' : 0.160645}", "{'[0, 3, 6, 6, 6, 0, 1, 0, 4, 0, 11, 4, 0, 1, 0, 1, 0, 1]' : 0.160577}", "{'[0, 3, 6, 6, 6, 0, 1, 0, 4, 0, 11, 4, 0, 1, 0, 1, 0, 1]' : 0.160715}", "{'[0, 3, 6, 6, 6, 0, 1, 0, 4, 0, 11, 4, 0, 1, 0, 1, 0, 1]' : 0.160991}", "{'[0, 3, 6, 6, 6, 0, 1, 0, 4, 0, 11, 4, 0, 1, 0, 1, 0, 1]' : 0.160942}", "{'[0, 3, 6, 6, 6, 0, 1, 0, 4, 0, 11, 4, 0, 1, 0, 1, 0, 1]' : 0.160995}", "{'[0, 3, 6, 6, 6, 0, 1, 0, 4, 0, 11, 4, 0, 1, 0, 1, 0, 1]' : 0.160652}", "{'[0, 3, 6, 6, 6, 0, 1, 0, 4, 0, 11, 4, 0, 1, 0, 1, 0, 1]' : 0.160877}", "{'[0, 3, 6, 6, 6, 0, 1, 0, 4, 0, 11, 4, 0, 1, 0, 1, 0, 1]' : 0.16092}", "{'[0, 3, 6, 6, 6, 0, 1, 0, 4, 0, 11, 4, 0, 1, 0, 1, 0, 1]' : 0.160864}", "{'[0, 3, 6, 6, 6, 0, 1, 0, 4, 0, 11, 4, 0, 1, 0, 1, 0, 1]' : 0.160713}", "{'[0, 3, 6, 6, 6, 0, 1, 0, 4, 0, 11, 4, 0, 1, 0, 1, 0, 1]' : 0.160919}", "{'[0, 3, 6, 6, 6, 0, 1, 0, 4, 0, 11, 4, 0, 1, 0, 1, 0, 1]' : 0.160988}", "{'[0, 3, 6, 6, 6, 0, 1, 0, 4, 0, 11, 4, 0, 1, 0, 1, 0, 1]' : 0.160701}", "{'[0, 3, 6, 6, 6, 0, 1, 0, 4, 0, 11, 4, 0, 1, 0, 1, 0, 1]' : 0.160803}", "{'[0, 3, 6, 6, 6, 0, 1, 0, 4, 0, 11, 4, 0, 1, 0, 1, 0, 1]' : 0.160868}", "{'[0, 3, 6, 6, 6, 0, 1, 0, 4, 0, 11, 4, 0, 1, 0, 1, 0, 1]' : 0.16074}", "{'[0, 3, 6, 6, 6, 0, 1, 0, 4, 0, 11, 4, 0, 1, 0, 1, 0, 1]' : 0.160877}", "{'[0, 3, 6, 6, 6, 0, 1, 0, 4, 0, 11, 4, 0, 1, 0, 1, 0, 1]' : 0.161209}", "{'[0, 3, 6, 6, 6, 0, 1, 0, 4, 0, 11, 4, 0, 1, 0, 1, 0, 1]' : 0.161061}", "{'[0, 3, 6, 6, 6, 0, 1, 0, 4, 0, 11, 4, 0, 1, 0, 1, 0, 1]' : 0.16144}", "{'[0, 3, 6, 6, 6, 0, 1, 0, 4, 0, 11, 4, 0, 1, 0, 1, 0, 1]' : 0.160741}", "{'[0, 3, 6, 6, 6, 0, 1, 0, 4, 0, 11, 4, 0, 1, 0, 1, 0, 1]' : 0.16094}", "{'[0, 3, 6, 6, 6, 0, 1, 0, 4, 0, 11, 4, 0, 1, 0, 1, 0, 1]' : 0.160854}", "{'[0, 3, 6, 6, 6, 0, 1, 0, 4, 0, 11, 4, 0, 1, 0, 1, 0, 1]' : 0.160767}"]
returning from 'run': {'[0, 3, 6, 6, 6, 0, 1, 0, 4, 0, 11, 4, 0, 1, 0, 1, 0, 1]': ([0.19321, 0.192937, 0.192914, 0.167384, 0.160834, 0.160645, 0.160577, 0.160715, 0.160991, 0.160942, 0.160995, 0.160652, 0.160877, 0.16092, 0.160864, 0.160713, 0.160919, 0.160988, 0.160701, 0.160803, 0.160868, 0.16074, 0.160877, 0.161209, 0.161061, 0.16144, 0.160741, 0.16094, 0.160854, 0.160767], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 3, 6, 6, 6, 0, 1, 0, 4, 0, 11, 4, 0, 1, 0, 1, 0, 1]': ([0.19321, 0.192937, 0.192914, 0.167384, 0.160834, 0.160645, 0.160577, 0.160715, 0.160991, 0.160942, 0.160995, 0.160652, 0.160877, 0.16092, 0.160864, 0.160713, 0.160919, 0.160988, 0.160701, 0.160803, 0.160868, 0.16074, 0.160877, 0.161209, 0.161061, 0.16144, 0.160741, 0.16094, 0.160854, 0.160767], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	31
        Max loop nest depth: 	6
        Additions: 		7216
        Multiplications: 	2146
        Divisions: 		0
        Logical: 		0
        Reads: 			11068
        Writes: 		1168
        Comparisons:		31
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest26.exe __orio_perftest26.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest26.exe  
Program Test Output: 
{'[2, 0, 3, 1, 6, 5, 1, 0, 4, 3, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.18773}
{'[2, 0, 3, 1, 6, 5, 1, 0, 4, 3, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.190055}
{'[2, 0, 3, 1, 6, 5, 1, 0, 4, 3, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.186491}
{'[2, 0, 3, 1, 6, 5, 1, 0, 4, 3, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.185235}
{'[2, 0, 3, 1, 6, 5, 1, 0, 4, 3, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.184997}
{'[2, 0, 3, 1, 6, 5, 1, 0, 4, 3, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.18409}
{'[2, 0, 3, 1, 6, 5, 1, 0, 4, 3, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.184583}
{'[2, 0, 3, 1, 6, 5, 1, 0, 4, 3, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.184619}
{'[2, 0, 3, 1, 6, 5, 1, 0, 4, 3, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.184958}
{'[2, 0, 3, 1, 6, 5, 1, 0, 4, 3, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.184836}
{'[2, 0, 3, 1, 6, 5, 1, 0, 4, 3, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.184192}
{'[2, 0, 3, 1, 6, 5, 1, 0, 4, 3, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.184985}
{'[2, 0, 3, 1, 6, 5, 1, 0, 4, 3, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.18555}
{'[2, 0, 3, 1, 6, 5, 1, 0, 4, 3, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.184663}
{'[2, 0, 3, 1, 6, 5, 1, 0, 4, 3, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.184844}
{'[2, 0, 3, 1, 6, 5, 1, 0, 4, 3, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.18485}
{'[2, 0, 3, 1, 6, 5, 1, 0, 4, 3, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.18486}
{'[2, 0, 3, 1, 6, 5, 1, 0, 4, 3, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.184865}
{'[2, 0, 3, 1, 6, 5, 1, 0, 4, 3, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.185033}
{'[2, 0, 3, 1, 6, 5, 1, 0, 4, 3, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.184306}
{'[2, 0, 3, 1, 6, 5, 1, 0, 4, 3, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.184163}
{'[2, 0, 3, 1, 6, 5, 1, 0, 4, 3, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.184217}
{'[2, 0, 3, 1, 6, 5, 1, 0, 4, 3, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.185363}
{'[2, 0, 3, 1, 6, 5, 1, 0, 4, 3, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.185133}
{'[2, 0, 3, 1, 6, 5, 1, 0, 4, 3, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.185329}
{'[2, 0, 3, 1, 6, 5, 1, 0, 4, 3, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.184588}
{'[2, 0, 3, 1, 6, 5, 1, 0, 4, 3, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.184162}
{'[2, 0, 3, 1, 6, 5, 1, 0, 4, 3, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.184258}
{'[2, 0, 3, 1, 6, 5, 1, 0, 4, 3, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.185358}
{'[2, 0, 3, 1, 6, 5, 1, 0, 4, 3, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.184187}

out:
 ["{'[2, 0, 3, 1, 6, 5, 1, 0, 4, 3, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.18773}", "{'[2, 0, 3, 1, 6, 5, 1, 0, 4, 3, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.190055}", "{'[2, 0, 3, 1, 6, 5, 1, 0, 4, 3, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.186491}", "{'[2, 0, 3, 1, 6, 5, 1, 0, 4, 3, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.185235}", "{'[2, 0, 3, 1, 6, 5, 1, 0, 4, 3, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.184997}", "{'[2, 0, 3, 1, 6, 5, 1, 0, 4, 3, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.18409}", "{'[2, 0, 3, 1, 6, 5, 1, 0, 4, 3, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.184583}", "{'[2, 0, 3, 1, 6, 5, 1, 0, 4, 3, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.184619}", "{'[2, 0, 3, 1, 6, 5, 1, 0, 4, 3, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.184958}", "{'[2, 0, 3, 1, 6, 5, 1, 0, 4, 3, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.184836}", "{'[2, 0, 3, 1, 6, 5, 1, 0, 4, 3, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.184192}", "{'[2, 0, 3, 1, 6, 5, 1, 0, 4, 3, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.184985}", "{'[2, 0, 3, 1, 6, 5, 1, 0, 4, 3, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.18555}", "{'[2, 0, 3, 1, 6, 5, 1, 0, 4, 3, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.184663}", "{'[2, 0, 3, 1, 6, 5, 1, 0, 4, 3, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.184844}", "{'[2, 0, 3, 1, 6, 5, 1, 0, 4, 3, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.18485}", "{'[2, 0, 3, 1, 6, 5, 1, 0, 4, 3, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.18486}", "{'[2, 0, 3, 1, 6, 5, 1, 0, 4, 3, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.184865}", "{'[2, 0, 3, 1, 6, 5, 1, 0, 4, 3, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.185033}", "{'[2, 0, 3, 1, 6, 5, 1, 0, 4, 3, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.184306}", "{'[2, 0, 3, 1, 6, 5, 1, 0, 4, 3, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.184163}", "{'[2, 0, 3, 1, 6, 5, 1, 0, 4, 3, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.184217}", "{'[2, 0, 3, 1, 6, 5, 1, 0, 4, 3, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.185363}", "{'[2, 0, 3, 1, 6, 5, 1, 0, 4, 3, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.185133}", "{'[2, 0, 3, 1, 6, 5, 1, 0, 4, 3, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.185329}", "{'[2, 0, 3, 1, 6, 5, 1, 0, 4, 3, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.184588}", "{'[2, 0, 3, 1, 6, 5, 1, 0, 4, 3, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.184162}", "{'[2, 0, 3, 1, 6, 5, 1, 0, 4, 3, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.184258}", "{'[2, 0, 3, 1, 6, 5, 1, 0, 4, 3, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.185358}", "{'[2, 0, 3, 1, 6, 5, 1, 0, 4, 3, 0, 26, 2, 0, 0, 0, 1, 1]' : 0.184187}"]
returning from 'run': {'[2, 0, 3, 1, 6, 5, 1, 0, 4, 3, 0, 26, 2, 0, 0, 0, 1, 1]': ([0.18773, 0.190055, 0.186491, 0.185235, 0.184997, 0.18409, 0.184583, 0.184619, 0.184958, 0.184836, 0.184192, 0.184985, 0.18555, 0.184663, 0.184844, 0.18485, 0.18486, 0.184865, 0.185033, 0.184306, 0.184163, 0.184217, 0.185363, 0.185133, 0.185329, 0.184588, 0.184162, 0.184258, 0.185358, 0.184187], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 0, 3, 1, 6, 5, 1, 0, 4, 3, 0, 26, 2, 0, 0, 0, 1, 1]': ([0.18773, 0.190055, 0.186491, 0.185235, 0.184997, 0.18409, 0.184583, 0.184619, 0.184958, 0.184836, 0.184192, 0.184985, 0.18555, 0.184663, 0.184844, 0.18485, 0.18486, 0.184865, 0.185033, 0.184306, 0.184163, 0.184217, 0.185363, 0.185133, 0.185329, 0.184588, 0.184162, 0.184258, 0.185358, 0.184187], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	6
        Additions: 		11865
        Multiplications: 	3234
        Divisions: 		0
        Logical: 		0
        Reads: 			17381
        Writes: 		1673
        Comparisons:		22
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest27.exe __orio_perftest27.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest27.exe  
Program Test Output: 
{'[2, 6, 1, 2, 0, 2, 1, 0, 6, 0, 29, 16, 2, 0, 0, 0, 0, 0]' : 0.302581}
{'[2, 6, 1, 2, 0, 2, 1, 0, 6, 0, 29, 16, 2, 0, 0, 0, 0, 0]' : 0.28291}
{'[2, 6, 1, 2, 0, 2, 1, 0, 6, 0, 29, 16, 2, 0, 0, 0, 0, 0]' : 0.260556}
{'[2, 6, 1, 2, 0, 2, 1, 0, 6, 0, 29, 16, 2, 0, 0, 0, 0, 0]' : 0.259739}
{'[2, 6, 1, 2, 0, 2, 1, 0, 6, 0, 29, 16, 2, 0, 0, 0, 0, 0]' : 0.264678}
{'[2, 6, 1, 2, 0, 2, 1, 0, 6, 0, 29, 16, 2, 0, 0, 0, 0, 0]' : 0.259954}
{'[2, 6, 1, 2, 0, 2, 1, 0, 6, 0, 29, 16, 2, 0, 0, 0, 0, 0]' : 0.263221}
{'[2, 6, 1, 2, 0, 2, 1, 0, 6, 0, 29, 16, 2, 0, 0, 0, 0, 0]' : 0.259875}
{'[2, 6, 1, 2, 0, 2, 1, 0, 6, 0, 29, 16, 2, 0, 0, 0, 0, 0]' : 0.261853}
{'[2, 6, 1, 2, 0, 2, 1, 0, 6, 0, 29, 16, 2, 0, 0, 0, 0, 0]' : 0.262829}
{'[2, 6, 1, 2, 0, 2, 1, 0, 6, 0, 29, 16, 2, 0, 0, 0, 0, 0]' : 0.260427}
{'[2, 6, 1, 2, 0, 2, 1, 0, 6, 0, 29, 16, 2, 0, 0, 0, 0, 0]' : 0.263634}
{'[2, 6, 1, 2, 0, 2, 1, 0, 6, 0, 29, 16, 2, 0, 0, 0, 0, 0]' : 0.260737}
{'[2, 6, 1, 2, 0, 2, 1, 0, 6, 0, 29, 16, 2, 0, 0, 0, 0, 0]' : 0.264342}
{'[2, 6, 1, 2, 0, 2, 1, 0, 6, 0, 29, 16, 2, 0, 0, 0, 0, 0]' : 0.262174}
{'[2, 6, 1, 2, 0, 2, 1, 0, 6, 0, 29, 16, 2, 0, 0, 0, 0, 0]' : 0.261962}
{'[2, 6, 1, 2, 0, 2, 1, 0, 6, 0, 29, 16, 2, 0, 0, 0, 0, 0]' : 0.264065}
{'[2, 6, 1, 2, 0, 2, 1, 0, 6, 0, 29, 16, 2, 0, 0, 0, 0, 0]' : 0.263023}
{'[2, 6, 1, 2, 0, 2, 1, 0, 6, 0, 29, 16, 2, 0, 0, 0, 0, 0]' : 0.263113}
{'[2, 6, 1, 2, 0, 2, 1, 0, 6, 0, 29, 16, 2, 0, 0, 0, 0, 0]' : 0.260091}
{'[2, 6, 1, 2, 0, 2, 1, 0, 6, 0, 29, 16, 2, 0, 0, 0, 0, 0]' : 0.265036}
{'[2, 6, 1, 2, 0, 2, 1, 0, 6, 0, 29, 16, 2, 0, 0, 0, 0, 0]' : 0.261546}
{'[2, 6, 1, 2, 0, 2, 1, 0, 6, 0, 29, 16, 2, 0, 0, 0, 0, 0]' : 0.263887}
{'[2, 6, 1, 2, 0, 2, 1, 0, 6, 0, 29, 16, 2, 0, 0, 0, 0, 0]' : 0.260336}
{'[2, 6, 1, 2, 0, 2, 1, 0, 6, 0, 29, 16, 2, 0, 0, 0, 0, 0]' : 0.261469}
{'[2, 6, 1, 2, 0, 2, 1, 0, 6, 0, 29, 16, 2, 0, 0, 0, 0, 0]' : 0.261039}
{'[2, 6, 1, 2, 0, 2, 1, 0, 6, 0, 29, 16, 2, 0, 0, 0, 0, 0]' : 0.260657}
{'[2, 6, 1, 2, 0, 2, 1, 0, 6, 0, 29, 16, 2, 0, 0, 0, 0, 0]' : 0.261391}
{'[2, 6, 1, 2, 0, 2, 1, 0, 6, 0, 29, 16, 2, 0, 0, 0, 0, 0]' : 0.262474}
{'[2, 6, 1, 2, 0, 2, 1, 0, 6, 0, 29, 16, 2, 0, 0, 0, 0, 0]' : 0.262986}

out:
 ["{'[2, 6, 1, 2, 0, 2, 1, 0, 6, 0, 29, 16, 2, 0, 0, 0, 0, 0]' : 0.302581}", "{'[2, 6, 1, 2, 0, 2, 1, 0, 6, 0, 29, 16, 2, 0, 0, 0, 0, 0]' : 0.28291}", "{'[2, 6, 1, 2, 0, 2, 1, 0, 6, 0, 29, 16, 2, 0, 0, 0, 0, 0]' : 0.260556}", "{'[2, 6, 1, 2, 0, 2, 1, 0, 6, 0, 29, 16, 2, 0, 0, 0, 0, 0]' : 0.259739}", "{'[2, 6, 1, 2, 0, 2, 1, 0, 6, 0, 29, 16, 2, 0, 0, 0, 0, 0]' : 0.264678}", "{'[2, 6, 1, 2, 0, 2, 1, 0, 6, 0, 29, 16, 2, 0, 0, 0, 0, 0]' : 0.259954}", "{'[2, 6, 1, 2, 0, 2, 1, 0, 6, 0, 29, 16, 2, 0, 0, 0, 0, 0]' : 0.263221}", "{'[2, 6, 1, 2, 0, 2, 1, 0, 6, 0, 29, 16, 2, 0, 0, 0, 0, 0]' : 0.259875}", "{'[2, 6, 1, 2, 0, 2, 1, 0, 6, 0, 29, 16, 2, 0, 0, 0, 0, 0]' : 0.261853}", "{'[2, 6, 1, 2, 0, 2, 1, 0, 6, 0, 29, 16, 2, 0, 0, 0, 0, 0]' : 0.262829}", "{'[2, 6, 1, 2, 0, 2, 1, 0, 6, 0, 29, 16, 2, 0, 0, 0, 0, 0]' : 0.260427}", "{'[2, 6, 1, 2, 0, 2, 1, 0, 6, 0, 29, 16, 2, 0, 0, 0, 0, 0]' : 0.263634}", "{'[2, 6, 1, 2, 0, 2, 1, 0, 6, 0, 29, 16, 2, 0, 0, 0, 0, 0]' : 0.260737}", "{'[2, 6, 1, 2, 0, 2, 1, 0, 6, 0, 29, 16, 2, 0, 0, 0, 0, 0]' : 0.264342}", "{'[2, 6, 1, 2, 0, 2, 1, 0, 6, 0, 29, 16, 2, 0, 0, 0, 0, 0]' : 0.262174}", "{'[2, 6, 1, 2, 0, 2, 1, 0, 6, 0, 29, 16, 2, 0, 0, 0, 0, 0]' : 0.261962}", "{'[2, 6, 1, 2, 0, 2, 1, 0, 6, 0, 29, 16, 2, 0, 0, 0, 0, 0]' : 0.264065}", "{'[2, 6, 1, 2, 0, 2, 1, 0, 6, 0, 29, 16, 2, 0, 0, 0, 0, 0]' : 0.263023}", "{'[2, 6, 1, 2, 0, 2, 1, 0, 6, 0, 29, 16, 2, 0, 0, 0, 0, 0]' : 0.263113}", "{'[2, 6, 1, 2, 0, 2, 1, 0, 6, 0, 29, 16, 2, 0, 0, 0, 0, 0]' : 0.260091}", "{'[2, 6, 1, 2, 0, 2, 1, 0, 6, 0, 29, 16, 2, 0, 0, 0, 0, 0]' : 0.265036}", "{'[2, 6, 1, 2, 0, 2, 1, 0, 6, 0, 29, 16, 2, 0, 0, 0, 0, 0]' : 0.261546}", "{'[2, 6, 1, 2, 0, 2, 1, 0, 6, 0, 29, 16, 2, 0, 0, 0, 0, 0]' : 0.263887}", "{'[2, 6, 1, 2, 0, 2, 1, 0, 6, 0, 29, 16, 2, 0, 0, 0, 0, 0]' : 0.260336}", "{'[2, 6, 1, 2, 0, 2, 1, 0, 6, 0, 29, 16, 2, 0, 0, 0, 0, 0]' : 0.261469}", "{'[2, 6, 1, 2, 0, 2, 1, 0, 6, 0, 29, 16, 2, 0, 0, 0, 0, 0]' : 0.261039}", "{'[2, 6, 1, 2, 0, 2, 1, 0, 6, 0, 29, 16, 2, 0, 0, 0, 0, 0]' : 0.260657}", "{'[2, 6, 1, 2, 0, 2, 1, 0, 6, 0, 29, 16, 2, 0, 0, 0, 0, 0]' : 0.261391}", "{'[2, 6, 1, 2, 0, 2, 1, 0, 6, 0, 29, 16, 2, 0, 0, 0, 0, 0]' : 0.262474}", "{'[2, 6, 1, 2, 0, 2, 1, 0, 6, 0, 29, 16, 2, 0, 0, 0, 0, 0]' : 0.262986}"]
returning from 'run': {'[2, 6, 1, 2, 0, 2, 1, 0, 6, 0, 29, 16, 2, 0, 0, 0, 0, 0]': ([0.302581, 0.28291, 0.260556, 0.259739, 0.264678, 0.259954, 0.263221, 0.259875, 0.261853, 0.262829, 0.260427, 0.263634, 0.260737, 0.264342, 0.262174, 0.261962, 0.264065, 0.263023, 0.263113, 0.260091, 0.265036, 0.261546, 0.263887, 0.260336, 0.261469, 0.261039, 0.260657, 0.261391, 0.262474, 0.262986], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 6, 1, 2, 0, 2, 1, 0, 6, 0, 29, 16, 2, 0, 0, 0, 0, 0]': ([0.302581, 0.28291, 0.260556, 0.259739, 0.264678, 0.259954, 0.263221, 0.259875, 0.261853, 0.262829, 0.260427, 0.263634, 0.260737, 0.264342, 0.262174, 0.261962, 0.264065, 0.263023, 0.263113, 0.260091, 0.265036, 0.261546, 0.263887, 0.260336, 0.261469, 0.261039, 0.260657, 0.261391, 0.262474, 0.262986], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	81
        Max loop nest depth: 	5
        Additions: 		4229
        Multiplications: 	1054
        Divisions: 		0
        Logical: 		0
        Reads: 			6725
        Writes: 		796
        Comparisons:		81
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest28.exe __orio_perftest28.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest28.exe  
Program Test Output: 
{'[1, 4, 1, 0, 3, 4, 0, 1, 3, 29, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.272147}
{'[1, 4, 1, 0, 3, 4, 0, 1, 3, 29, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.266805}
{'[1, 4, 1, 0, 3, 4, 0, 1, 3, 29, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.26754}
{'[1, 4, 1, 0, 3, 4, 0, 1, 3, 29, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.266602}
{'[1, 4, 1, 0, 3, 4, 0, 1, 3, 29, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.266306}
{'[1, 4, 1, 0, 3, 4, 0, 1, 3, 29, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.266274}
{'[1, 4, 1, 0, 3, 4, 0, 1, 3, 29, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.266504}
{'[1, 4, 1, 0, 3, 4, 0, 1, 3, 29, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.266836}
{'[1, 4, 1, 0, 3, 4, 0, 1, 3, 29, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.266442}
{'[1, 4, 1, 0, 3, 4, 0, 1, 3, 29, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.267034}
{'[1, 4, 1, 0, 3, 4, 0, 1, 3, 29, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.26623}
{'[1, 4, 1, 0, 3, 4, 0, 1, 3, 29, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.265563}
{'[1, 4, 1, 0, 3, 4, 0, 1, 3, 29, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.26519}
{'[1, 4, 1, 0, 3, 4, 0, 1, 3, 29, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.265903}
{'[1, 4, 1, 0, 3, 4, 0, 1, 3, 29, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.266966}
{'[1, 4, 1, 0, 3, 4, 0, 1, 3, 29, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.266713}
{'[1, 4, 1, 0, 3, 4, 0, 1, 3, 29, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.267995}
{'[1, 4, 1, 0, 3, 4, 0, 1, 3, 29, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.269473}
{'[1, 4, 1, 0, 3, 4, 0, 1, 3, 29, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.266303}
{'[1, 4, 1, 0, 3, 4, 0, 1, 3, 29, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.266102}
{'[1, 4, 1, 0, 3, 4, 0, 1, 3, 29, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.266163}
{'[1, 4, 1, 0, 3, 4, 0, 1, 3, 29, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.265219}
{'[1, 4, 1, 0, 3, 4, 0, 1, 3, 29, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.264851}
{'[1, 4, 1, 0, 3, 4, 0, 1, 3, 29, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.265461}
{'[1, 4, 1, 0, 3, 4, 0, 1, 3, 29, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.265897}
{'[1, 4, 1, 0, 3, 4, 0, 1, 3, 29, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.264583}
{'[1, 4, 1, 0, 3, 4, 0, 1, 3, 29, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.266305}
{'[1, 4, 1, 0, 3, 4, 0, 1, 3, 29, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.265301}
{'[1, 4, 1, 0, 3, 4, 0, 1, 3, 29, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.26817}
{'[1, 4, 1, 0, 3, 4, 0, 1, 3, 29, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.283363}

out:
 ["{'[1, 4, 1, 0, 3, 4, 0, 1, 3, 29, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.272147}", "{'[1, 4, 1, 0, 3, 4, 0, 1, 3, 29, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.266805}", "{'[1, 4, 1, 0, 3, 4, 0, 1, 3, 29, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.26754}", "{'[1, 4, 1, 0, 3, 4, 0, 1, 3, 29, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.266602}", "{'[1, 4, 1, 0, 3, 4, 0, 1, 3, 29, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.266306}", "{'[1, 4, 1, 0, 3, 4, 0, 1, 3, 29, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.266274}", "{'[1, 4, 1, 0, 3, 4, 0, 1, 3, 29, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.266504}", "{'[1, 4, 1, 0, 3, 4, 0, 1, 3, 29, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.266836}", "{'[1, 4, 1, 0, 3, 4, 0, 1, 3, 29, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.266442}", "{'[1, 4, 1, 0, 3, 4, 0, 1, 3, 29, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.267034}", "{'[1, 4, 1, 0, 3, 4, 0, 1, 3, 29, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.26623}", "{'[1, 4, 1, 0, 3, 4, 0, 1, 3, 29, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.265563}", "{'[1, 4, 1, 0, 3, 4, 0, 1, 3, 29, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.26519}", "{'[1, 4, 1, 0, 3, 4, 0, 1, 3, 29, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.265903}", "{'[1, 4, 1, 0, 3, 4, 0, 1, 3, 29, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.266966}", "{'[1, 4, 1, 0, 3, 4, 0, 1, 3, 29, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.266713}", "{'[1, 4, 1, 0, 3, 4, 0, 1, 3, 29, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.267995}", "{'[1, 4, 1, 0, 3, 4, 0, 1, 3, 29, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.269473}", "{'[1, 4, 1, 0, 3, 4, 0, 1, 3, 29, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.266303}", "{'[1, 4, 1, 0, 3, 4, 0, 1, 3, 29, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.266102}", "{'[1, 4, 1, 0, 3, 4, 0, 1, 3, 29, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.266163}", "{'[1, 4, 1, 0, 3, 4, 0, 1, 3, 29, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.265219}", "{'[1, 4, 1, 0, 3, 4, 0, 1, 3, 29, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.264851}", "{'[1, 4, 1, 0, 3, 4, 0, 1, 3, 29, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.265461}", "{'[1, 4, 1, 0, 3, 4, 0, 1, 3, 29, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.265897}", "{'[1, 4, 1, 0, 3, 4, 0, 1, 3, 29, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.264583}", "{'[1, 4, 1, 0, 3, 4, 0, 1, 3, 29, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.266305}", "{'[1, 4, 1, 0, 3, 4, 0, 1, 3, 29, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.265301}", "{'[1, 4, 1, 0, 3, 4, 0, 1, 3, 29, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.26817}", "{'[1, 4, 1, 0, 3, 4, 0, 1, 3, 29, 0, 29, 0, 1, 1, 0, 1, 1]' : 0.283363}"]
returning from 'run': {'[1, 4, 1, 0, 3, 4, 0, 1, 3, 29, 0, 29, 0, 1, 1, 0, 1, 1]': ([0.272147, 0.266805, 0.26754, 0.266602, 0.266306, 0.266274, 0.266504, 0.266836, 0.266442, 0.267034, 0.26623, 0.265563, 0.26519, 0.265903, 0.266966, 0.266713, 0.267995, 0.269473, 0.266303, 0.266102, 0.266163, 0.265219, 0.264851, 0.265461, 0.265897, 0.264583, 0.266305, 0.265301, 0.26817, 0.283363], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 4, 1, 0, 3, 4, 0, 1, 3, 29, 0, 29, 0, 1, 1, 0, 1, 1]': ([0.272147, 0.266805, 0.26754, 0.266602, 0.266306, 0.266274, 0.266504, 0.266836, 0.266442, 0.267034, 0.26623, 0.265563, 0.26519, 0.265903, 0.266966, 0.266713, 0.267995, 0.269473, 0.266303, 0.266102, 0.266163, 0.265219, 0.264851, 0.265461, 0.265897, 0.264583, 0.266305, 0.265301, 0.26817, 0.283363], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		238
        Multiplications: 	72
        Divisions: 		0
        Logical: 		0
        Reads: 			516
        Writes: 		80
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest29.exe __orio_perftest29.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest29.exe  
Program Test Output: 
{'[6, 0, 6, 0, 2, 0, 0, 1, 9, 0, 21, 11, 0, 0, 0, 0, 0, 1]' : 0.228289}
{'[6, 0, 6, 0, 2, 0, 0, 1, 9, 0, 21, 11, 0, 0, 0, 0, 0, 1]' : 0.227997}
{'[6, 0, 6, 0, 2, 0, 0, 1, 9, 0, 21, 11, 0, 0, 0, 0, 0, 1]' : 0.204758}
{'[6, 0, 6, 0, 2, 0, 0, 1, 9, 0, 21, 11, 0, 0, 0, 0, 0, 1]' : 0.190594}
{'[6, 0, 6, 0, 2, 0, 0, 1, 9, 0, 21, 11, 0, 0, 0, 0, 0, 1]' : 0.190061}
{'[6, 0, 6, 0, 2, 0, 0, 1, 9, 0, 21, 11, 0, 0, 0, 0, 0, 1]' : 0.189878}
{'[6, 0, 6, 0, 2, 0, 0, 1, 9, 0, 21, 11, 0, 0, 0, 0, 0, 1]' : 0.189898}
{'[6, 0, 6, 0, 2, 0, 0, 1, 9, 0, 21, 11, 0, 0, 0, 0, 0, 1]' : 0.189887}
{'[6, 0, 6, 0, 2, 0, 0, 1, 9, 0, 21, 11, 0, 0, 0, 0, 0, 1]' : 0.190182}
{'[6, 0, 6, 0, 2, 0, 0, 1, 9, 0, 21, 11, 0, 0, 0, 0, 0, 1]' : 0.189789}
{'[6, 0, 6, 0, 2, 0, 0, 1, 9, 0, 21, 11, 0, 0, 0, 0, 0, 1]' : 0.189859}
{'[6, 0, 6, 0, 2, 0, 0, 1, 9, 0, 21, 11, 0, 0, 0, 0, 0, 1]' : 0.189668}
{'[6, 0, 6, 0, 2, 0, 0, 1, 9, 0, 21, 11, 0, 0, 0, 0, 0, 1]' : 0.189959}
{'[6, 0, 6, 0, 2, 0, 0, 1, 9, 0, 21, 11, 0, 0, 0, 0, 0, 1]' : 0.190061}
{'[6, 0, 6, 0, 2, 0, 0, 1, 9, 0, 21, 11, 0, 0, 0, 0, 0, 1]' : 0.190014}
{'[6, 0, 6, 0, 2, 0, 0, 1, 9, 0, 21, 11, 0, 0, 0, 0, 0, 1]' : 0.189935}
{'[6, 0, 6, 0, 2, 0, 0, 1, 9, 0, 21, 11, 0, 0, 0, 0, 0, 1]' : 0.189771}
{'[6, 0, 6, 0, 2, 0, 0, 1, 9, 0, 21, 11, 0, 0, 0, 0, 0, 1]' : 0.189806}
{'[6, 0, 6, 0, 2, 0, 0, 1, 9, 0, 21, 11, 0, 0, 0, 0, 0, 1]' : 0.189866}
{'[6, 0, 6, 0, 2, 0, 0, 1, 9, 0, 21, 11, 0, 0, 0, 0, 0, 1]' : 0.190243}
{'[6, 0, 6, 0, 2, 0, 0, 1, 9, 0, 21, 11, 0, 0, 0, 0, 0, 1]' : 0.189766}
{'[6, 0, 6, 0, 2, 0, 0, 1, 9, 0, 21, 11, 0, 0, 0, 0, 0, 1]' : 0.190249}
{'[6, 0, 6, 0, 2, 0, 0, 1, 9, 0, 21, 11, 0, 0, 0, 0, 0, 1]' : 0.193367}
{'[6, 0, 6, 0, 2, 0, 0, 1, 9, 0, 21, 11, 0, 0, 0, 0, 0, 1]' : 0.195954}
{'[6, 0, 6, 0, 2, 0, 0, 1, 9, 0, 21, 11, 0, 0, 0, 0, 0, 1]' : 0.196012}
{'[6, 0, 6, 0, 2, 0, 0, 1, 9, 0, 21, 11, 0, 0, 0, 0, 0, 1]' : 0.196745}
{'[6, 0, 6, 0, 2, 0, 0, 1, 9, 0, 21, 11, 0, 0, 0, 0, 0, 1]' : 0.191242}
{'[6, 0, 6, 0, 2, 0, 0, 1, 9, 0, 21, 11, 0, 0, 0, 0, 0, 1]' : 0.189663}
{'[6, 0, 6, 0, 2, 0, 0, 1, 9, 0, 21, 11, 0, 0, 0, 0, 0, 1]' : 0.189591}
{'[6, 0, 6, 0, 2, 0, 0, 1, 9, 0, 21, 11, 0, 0, 0, 0, 0, 1]' : 0.190649}

out:
 ["{'[6, 0, 6, 0, 2, 0, 0, 1, 9, 0, 21, 11, 0, 0, 0, 0, 0, 1]' : 0.228289}", "{'[6, 0, 6, 0, 2, 0, 0, 1, 9, 0, 21, 11, 0, 0, 0, 0, 0, 1]' : 0.227997}", "{'[6, 0, 6, 0, 2, 0, 0, 1, 9, 0, 21, 11, 0, 0, 0, 0, 0, 1]' : 0.204758}", "{'[6, 0, 6, 0, 2, 0, 0, 1, 9, 0, 21, 11, 0, 0, 0, 0, 0, 1]' : 0.190594}", "{'[6, 0, 6, 0, 2, 0, 0, 1, 9, 0, 21, 11, 0, 0, 0, 0, 0, 1]' : 0.190061}", "{'[6, 0, 6, 0, 2, 0, 0, 1, 9, 0, 21, 11, 0, 0, 0, 0, 0, 1]' : 0.189878}", "{'[6, 0, 6, 0, 2, 0, 0, 1, 9, 0, 21, 11, 0, 0, 0, 0, 0, 1]' : 0.189898}", "{'[6, 0, 6, 0, 2, 0, 0, 1, 9, 0, 21, 11, 0, 0, 0, 0, 0, 1]' : 0.189887}", "{'[6, 0, 6, 0, 2, 0, 0, 1, 9, 0, 21, 11, 0, 0, 0, 0, 0, 1]' : 0.190182}", "{'[6, 0, 6, 0, 2, 0, 0, 1, 9, 0, 21, 11, 0, 0, 0, 0, 0, 1]' : 0.189789}", "{'[6, 0, 6, 0, 2, 0, 0, 1, 9, 0, 21, 11, 0, 0, 0, 0, 0, 1]' : 0.189859}", "{'[6, 0, 6, 0, 2, 0, 0, 1, 9, 0, 21, 11, 0, 0, 0, 0, 0, 1]' : 0.189668}", "{'[6, 0, 6, 0, 2, 0, 0, 1, 9, 0, 21, 11, 0, 0, 0, 0, 0, 1]' : 0.189959}", "{'[6, 0, 6, 0, 2, 0, 0, 1, 9, 0, 21, 11, 0, 0, 0, 0, 0, 1]' : 0.190061}", "{'[6, 0, 6, 0, 2, 0, 0, 1, 9, 0, 21, 11, 0, 0, 0, 0, 0, 1]' : 0.190014}", "{'[6, 0, 6, 0, 2, 0, 0, 1, 9, 0, 21, 11, 0, 0, 0, 0, 0, 1]' : 0.189935}", "{'[6, 0, 6, 0, 2, 0, 0, 1, 9, 0, 21, 11, 0, 0, 0, 0, 0, 1]' : 0.189771}", "{'[6, 0, 6, 0, 2, 0, 0, 1, 9, 0, 21, 11, 0, 0, 0, 0, 0, 1]' : 0.189806}", "{'[6, 0, 6, 0, 2, 0, 0, 1, 9, 0, 21, 11, 0, 0, 0, 0, 0, 1]' : 0.189866}", "{'[6, 0, 6, 0, 2, 0, 0, 1, 9, 0, 21, 11, 0, 0, 0, 0, 0, 1]' : 0.190243}", "{'[6, 0, 6, 0, 2, 0, 0, 1, 9, 0, 21, 11, 0, 0, 0, 0, 0, 1]' : 0.189766}", "{'[6, 0, 6, 0, 2, 0, 0, 1, 9, 0, 21, 11, 0, 0, 0, 0, 0, 1]' : 0.190249}", "{'[6, 0, 6, 0, 2, 0, 0, 1, 9, 0, 21, 11, 0, 0, 0, 0, 0, 1]' : 0.193367}", "{'[6, 0, 6, 0, 2, 0, 0, 1, 9, 0, 21, 11, 0, 0, 0, 0, 0, 1]' : 0.195954}", "{'[6, 0, 6, 0, 2, 0, 0, 1, 9, 0, 21, 11, 0, 0, 0, 0, 0, 1]' : 0.196012}", "{'[6, 0, 6, 0, 2, 0, 0, 1, 9, 0, 21, 11, 0, 0, 0, 0, 0, 1]' : 0.196745}", "{'[6, 0, 6, 0, 2, 0, 0, 1, 9, 0, 21, 11, 0, 0, 0, 0, 0, 1]' : 0.191242}", "{'[6, 0, 6, 0, 2, 0, 0, 1, 9, 0, 21, 11, 0, 0, 0, 0, 0, 1]' : 0.189663}", "{'[6, 0, 6, 0, 2, 0, 0, 1, 9, 0, 21, 11, 0, 0, 0, 0, 0, 1]' : 0.189591}", "{'[6, 0, 6, 0, 2, 0, 0, 1, 9, 0, 21, 11, 0, 0, 0, 0, 0, 1]' : 0.190649}"]
returning from 'run': {'[6, 0, 6, 0, 2, 0, 0, 1, 9, 0, 21, 11, 0, 0, 0, 0, 0, 1]': ([0.228289, 0.227997, 0.204758, 0.190594, 0.190061, 0.189878, 0.189898, 0.189887, 0.190182, 0.189789, 0.189859, 0.189668, 0.189959, 0.190061, 0.190014, 0.189935, 0.189771, 0.189806, 0.189866, 0.190243, 0.189766, 0.190249, 0.193367, 0.195954, 0.196012, 0.196745, 0.191242, 0.189663, 0.189591, 0.190649], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 6, 0, 2, 0, 0, 1, 9, 0, 21, 11, 0, 0, 0, 0, 0, 1]': ([0.228289, 0.227997, 0.204758, 0.190594, 0.190061, 0.189878, 0.189898, 0.189887, 0.190182, 0.189789, 0.189859, 0.189668, 0.189959, 0.190061, 0.190014, 0.189935, 0.189771, 0.189806, 0.189866, 0.190243, 0.189766, 0.190249, 0.193367, 0.195954, 0.196012, 0.196745, 0.191242, 0.189663, 0.189591, 0.190649], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = jjj
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	6
        Additions: 		128
        Multiplications: 	32
        Divisions: 		0
        Logical: 		0
        Reads: 			296
        Writes: 		65
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest30.exe __orio_perftest30.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest30.exe  
Program Test Output: 
{'[6, 4, 6, 5, 2, 6, 1, 1, 0, 0, 27, 2, 0, 1, 1, 1, 0, 1]' : 0.275297}
{'[6, 4, 6, 5, 2, 6, 1, 1, 0, 0, 27, 2, 0, 1, 1, 1, 0, 1]' : 0.251507}
{'[6, 4, 6, 5, 2, 6, 1, 1, 0, 0, 27, 2, 0, 1, 1, 1, 0, 1]' : 0.23167}
{'[6, 4, 6, 5, 2, 6, 1, 1, 0, 0, 27, 2, 0, 1, 1, 1, 0, 1]' : 0.231905}
{'[6, 4, 6, 5, 2, 6, 1, 1, 0, 0, 27, 2, 0, 1, 1, 1, 0, 1]' : 0.231379}
{'[6, 4, 6, 5, 2, 6, 1, 1, 0, 0, 27, 2, 0, 1, 1, 1, 0, 1]' : 0.231346}
{'[6, 4, 6, 5, 2, 6, 1, 1, 0, 0, 27, 2, 0, 1, 1, 1, 0, 1]' : 0.231399}
{'[6, 4, 6, 5, 2, 6, 1, 1, 0, 0, 27, 2, 0, 1, 1, 1, 0, 1]' : 0.231791}
{'[6, 4, 6, 5, 2, 6, 1, 1, 0, 0, 27, 2, 0, 1, 1, 1, 0, 1]' : 0.232223}
{'[6, 4, 6, 5, 2, 6, 1, 1, 0, 0, 27, 2, 0, 1, 1, 1, 0, 1]' : 0.231306}
{'[6, 4, 6, 5, 2, 6, 1, 1, 0, 0, 27, 2, 0, 1, 1, 1, 0, 1]' : 0.23208}
{'[6, 4, 6, 5, 2, 6, 1, 1, 0, 0, 27, 2, 0, 1, 1, 1, 0, 1]' : 0.235974}
{'[6, 4, 6, 5, 2, 6, 1, 1, 0, 0, 27, 2, 0, 1, 1, 1, 0, 1]' : 0.232663}
{'[6, 4, 6, 5, 2, 6, 1, 1, 0, 0, 27, 2, 0, 1, 1, 1, 0, 1]' : 0.233195}
{'[6, 4, 6, 5, 2, 6, 1, 1, 0, 0, 27, 2, 0, 1, 1, 1, 0, 1]' : 0.234278}
{'[6, 4, 6, 5, 2, 6, 1, 1, 0, 0, 27, 2, 0, 1, 1, 1, 0, 1]' : 0.251622}
{'[6, 4, 6, 5, 2, 6, 1, 1, 0, 0, 27, 2, 0, 1, 1, 1, 0, 1]' : 0.275699}
{'[6, 4, 6, 5, 2, 6, 1, 1, 0, 0, 27, 2, 0, 1, 1, 1, 0, 1]' : 0.231594}
{'[6, 4, 6, 5, 2, 6, 1, 1, 0, 0, 27, 2, 0, 1, 1, 1, 0, 1]' : 0.239958}
{'[6, 4, 6, 5, 2, 6, 1, 1, 0, 0, 27, 2, 0, 1, 1, 1, 0, 1]' : 0.238302}
{'[6, 4, 6, 5, 2, 6, 1, 1, 0, 0, 27, 2, 0, 1, 1, 1, 0, 1]' : 0.239116}
{'[6, 4, 6, 5, 2, 6, 1, 1, 0, 0, 27, 2, 0, 1, 1, 1, 0, 1]' : 0.242101}
{'[6, 4, 6, 5, 2, 6, 1, 1, 0, 0, 27, 2, 0, 1, 1, 1, 0, 1]' : 0.233063}
{'[6, 4, 6, 5, 2, 6, 1, 1, 0, 0, 27, 2, 0, 1, 1, 1, 0, 1]' : 0.232175}
{'[6, 4, 6, 5, 2, 6, 1, 1, 0, 0, 27, 2, 0, 1, 1, 1, 0, 1]' : 0.232011}
{'[6, 4, 6, 5, 2, 6, 1, 1, 0, 0, 27, 2, 0, 1, 1, 1, 0, 1]' : 0.23171}
{'[6, 4, 6, 5, 2, 6, 1, 1, 0, 0, 27, 2, 0, 1, 1, 1, 0, 1]' : 0.231555}
{'[6, 4, 6, 5, 2, 6, 1, 1, 0, 0, 27, 2, 0, 1, 1, 1, 0, 1]' : 0.231687}
{'[6, 4, 6, 5, 2, 6, 1, 1, 0, 0, 27, 2, 0, 1, 1, 1, 0, 1]' : 0.231842}
{'[6, 4, 6, 5, 2, 6, 1, 1, 0, 0, 27, 2, 0, 1, 1, 1, 0, 1]' : 0.231533}

out:
 ["{'[6, 4, 6, 5, 2, 6, 1, 1, 0, 0, 27, 2, 0, 1, 1, 1, 0, 1]' : 0.275297}", "{'[6, 4, 6, 5, 2, 6, 1, 1, 0, 0, 27, 2, 0, 1, 1, 1, 0, 1]' : 0.251507}", "{'[6, 4, 6, 5, 2, 6, 1, 1, 0, 0, 27, 2, 0, 1, 1, 1, 0, 1]' : 0.23167}", "{'[6, 4, 6, 5, 2, 6, 1, 1, 0, 0, 27, 2, 0, 1, 1, 1, 0, 1]' : 0.231905}", "{'[6, 4, 6, 5, 2, 6, 1, 1, 0, 0, 27, 2, 0, 1, 1, 1, 0, 1]' : 0.231379}", "{'[6, 4, 6, 5, 2, 6, 1, 1, 0, 0, 27, 2, 0, 1, 1, 1, 0, 1]' : 0.231346}", "{'[6, 4, 6, 5, 2, 6, 1, 1, 0, 0, 27, 2, 0, 1, 1, 1, 0, 1]' : 0.231399}", "{'[6, 4, 6, 5, 2, 6, 1, 1, 0, 0, 27, 2, 0, 1, 1, 1, 0, 1]' : 0.231791}", "{'[6, 4, 6, 5, 2, 6, 1, 1, 0, 0, 27, 2, 0, 1, 1, 1, 0, 1]' : 0.232223}", "{'[6, 4, 6, 5, 2, 6, 1, 1, 0, 0, 27, 2, 0, 1, 1, 1, 0, 1]' : 0.231306}", "{'[6, 4, 6, 5, 2, 6, 1, 1, 0, 0, 27, 2, 0, 1, 1, 1, 0, 1]' : 0.23208}", "{'[6, 4, 6, 5, 2, 6, 1, 1, 0, 0, 27, 2, 0, 1, 1, 1, 0, 1]' : 0.235974}", "{'[6, 4, 6, 5, 2, 6, 1, 1, 0, 0, 27, 2, 0, 1, 1, 1, 0, 1]' : 0.232663}", "{'[6, 4, 6, 5, 2, 6, 1, 1, 0, 0, 27, 2, 0, 1, 1, 1, 0, 1]' : 0.233195}", "{'[6, 4, 6, 5, 2, 6, 1, 1, 0, 0, 27, 2, 0, 1, 1, 1, 0, 1]' : 0.234278}", "{'[6, 4, 6, 5, 2, 6, 1, 1, 0, 0, 27, 2, 0, 1, 1, 1, 0, 1]' : 0.251622}", "{'[6, 4, 6, 5, 2, 6, 1, 1, 0, 0, 27, 2, 0, 1, 1, 1, 0, 1]' : 0.275699}", "{'[6, 4, 6, 5, 2, 6, 1, 1, 0, 0, 27, 2, 0, 1, 1, 1, 0, 1]' : 0.231594}", "{'[6, 4, 6, 5, 2, 6, 1, 1, 0, 0, 27, 2, 0, 1, 1, 1, 0, 1]' : 0.239958}", "{'[6, 4, 6, 5, 2, 6, 1, 1, 0, 0, 27, 2, 0, 1, 1, 1, 0, 1]' : 0.238302}", "{'[6, 4, 6, 5, 2, 6, 1, 1, 0, 0, 27, 2, 0, 1, 1, 1, 0, 1]' : 0.239116}", "{'[6, 4, 6, 5, 2, 6, 1, 1, 0, 0, 27, 2, 0, 1, 1, 1, 0, 1]' : 0.242101}", "{'[6, 4, 6, 5, 2, 6, 1, 1, 0, 0, 27, 2, 0, 1, 1, 1, 0, 1]' : 0.233063}", "{'[6, 4, 6, 5, 2, 6, 1, 1, 0, 0, 27, 2, 0, 1, 1, 1, 0, 1]' : 0.232175}", "{'[6, 4, 6, 5, 2, 6, 1, 1, 0, 0, 27, 2, 0, 1, 1, 1, 0, 1]' : 0.232011}", "{'[6, 4, 6, 5, 2, 6, 1, 1, 0, 0, 27, 2, 0, 1, 1, 1, 0, 1]' : 0.23171}", "{'[6, 4, 6, 5, 2, 6, 1, 1, 0, 0, 27, 2, 0, 1, 1, 1, 0, 1]' : 0.231555}", "{'[6, 4, 6, 5, 2, 6, 1, 1, 0, 0, 27, 2, 0, 1, 1, 1, 0, 1]' : 0.231687}", "{'[6, 4, 6, 5, 2, 6, 1, 1, 0, 0, 27, 2, 0, 1, 1, 1, 0, 1]' : 0.231842}", "{'[6, 4, 6, 5, 2, 6, 1, 1, 0, 0, 27, 2, 0, 1, 1, 1, 0, 1]' : 0.231533}"]
returning from 'run': {'[6, 4, 6, 5, 2, 6, 1, 1, 0, 0, 27, 2, 0, 1, 1, 1, 0, 1]': ([0.275297, 0.251507, 0.23167, 0.231905, 0.231379, 0.231346, 0.231399, 0.231791, 0.232223, 0.231306, 0.23208, 0.235974, 0.232663, 0.233195, 0.234278, 0.251622, 0.275699, 0.231594, 0.239958, 0.238302, 0.239116, 0.242101, 0.233063, 0.232175, 0.232011, 0.23171, 0.231555, 0.231687, 0.231842, 0.231533], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 4, 6, 5, 2, 6, 1, 1, 0, 0, 27, 2, 0, 1, 1, 1, 0, 1]': ([0.275297, 0.251507, 0.23167, 0.231905, 0.231379, 0.231346, 0.231399, 0.231791, 0.232223, 0.231306, 0.23208, 0.235974, 0.232663, 0.233195, 0.234278, 0.251622, 0.275699, 0.231594, 0.239958, 0.238302, 0.239116, 0.242101, 0.233063, 0.232175, 0.232011, 0.23171, 0.231555, 0.231687, 0.231842, 0.231533], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		341
        Multiplications: 	112
        Divisions: 		0
        Logical: 		0
        Reads: 			848
        Writes: 		214
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest31.exe __orio_perftest31.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest31.exe  
Program Test Output: 
{'[5, 5, 0, 0, 6, 6, 0, 0, 28, 0, 7, 13, 0, 0, 2, 1, 0, 1]' : 0.173681}
{'[5, 5, 0, 0, 6, 6, 0, 0, 28, 0, 7, 13, 0, 0, 2, 1, 0, 1]' : 0.173185}
{'[5, 5, 0, 0, 6, 6, 0, 0, 28, 0, 7, 13, 0, 0, 2, 1, 0, 1]' : 0.172963}
{'[5, 5, 0, 0, 6, 6, 0, 0, 28, 0, 7, 13, 0, 0, 2, 1, 0, 1]' : 0.17312}
{'[5, 5, 0, 0, 6, 6, 0, 0, 28, 0, 7, 13, 0, 0, 2, 1, 0, 1]' : 0.151432}
{'[5, 5, 0, 0, 6, 6, 0, 0, 28, 0, 7, 13, 0, 0, 2, 1, 0, 1]' : 0.145278}
{'[5, 5, 0, 0, 6, 6, 0, 0, 28, 0, 7, 13, 0, 0, 2, 1, 0, 1]' : 0.14539}
{'[5, 5, 0, 0, 6, 6, 0, 0, 28, 0, 7, 13, 0, 0, 2, 1, 0, 1]' : 0.145557}
{'[5, 5, 0, 0, 6, 6, 0, 0, 28, 0, 7, 13, 0, 0, 2, 1, 0, 1]' : 0.145349}
{'[5, 5, 0, 0, 6, 6, 0, 0, 28, 0, 7, 13, 0, 0, 2, 1, 0, 1]' : 0.145112}
{'[5, 5, 0, 0, 6, 6, 0, 0, 28, 0, 7, 13, 0, 0, 2, 1, 0, 1]' : 0.145149}
{'[5, 5, 0, 0, 6, 6, 0, 0, 28, 0, 7, 13, 0, 0, 2, 1, 0, 1]' : 0.145224}
{'[5, 5, 0, 0, 6, 6, 0, 0, 28, 0, 7, 13, 0, 0, 2, 1, 0, 1]' : 0.145466}
{'[5, 5, 0, 0, 6, 6, 0, 0, 28, 0, 7, 13, 0, 0, 2, 1, 0, 1]' : 0.145224}
{'[5, 5, 0, 0, 6, 6, 0, 0, 28, 0, 7, 13, 0, 0, 2, 1, 0, 1]' : 0.145544}
{'[5, 5, 0, 0, 6, 6, 0, 0, 28, 0, 7, 13, 0, 0, 2, 1, 0, 1]' : 0.145489}
{'[5, 5, 0, 0, 6, 6, 0, 0, 28, 0, 7, 13, 0, 0, 2, 1, 0, 1]' : 0.145303}
{'[5, 5, 0, 0, 6, 6, 0, 0, 28, 0, 7, 13, 0, 0, 2, 1, 0, 1]' : 0.145213}
{'[5, 5, 0, 0, 6, 6, 0, 0, 28, 0, 7, 13, 0, 0, 2, 1, 0, 1]' : 0.145299}
{'[5, 5, 0, 0, 6, 6, 0, 0, 28, 0, 7, 13, 0, 0, 2, 1, 0, 1]' : 0.145205}
{'[5, 5, 0, 0, 6, 6, 0, 0, 28, 0, 7, 13, 0, 0, 2, 1, 0, 1]' : 0.145311}
{'[5, 5, 0, 0, 6, 6, 0, 0, 28, 0, 7, 13, 0, 0, 2, 1, 0, 1]' : 0.145464}
{'[5, 5, 0, 0, 6, 6, 0, 0, 28, 0, 7, 13, 0, 0, 2, 1, 0, 1]' : 0.145218}
{'[5, 5, 0, 0, 6, 6, 0, 0, 28, 0, 7, 13, 0, 0, 2, 1, 0, 1]' : 0.145135}
{'[5, 5, 0, 0, 6, 6, 0, 0, 28, 0, 7, 13, 0, 0, 2, 1, 0, 1]' : 0.145138}
{'[5, 5, 0, 0, 6, 6, 0, 0, 28, 0, 7, 13, 0, 0, 2, 1, 0, 1]' : 0.145473}
{'[5, 5, 0, 0, 6, 6, 0, 0, 28, 0, 7, 13, 0, 0, 2, 1, 0, 1]' : 0.146659}
{'[5, 5, 0, 0, 6, 6, 0, 0, 28, 0, 7, 13, 0, 0, 2, 1, 0, 1]' : 0.145547}
{'[5, 5, 0, 0, 6, 6, 0, 0, 28, 0, 7, 13, 0, 0, 2, 1, 0, 1]' : 0.145874}
{'[5, 5, 0, 0, 6, 6, 0, 0, 28, 0, 7, 13, 0, 0, 2, 1, 0, 1]' : 0.146137}

out:
 ["{'[5, 5, 0, 0, 6, 6, 0, 0, 28, 0, 7, 13, 0, 0, 2, 1, 0, 1]' : 0.173681}", "{'[5, 5, 0, 0, 6, 6, 0, 0, 28, 0, 7, 13, 0, 0, 2, 1, 0, 1]' : 0.173185}", "{'[5, 5, 0, 0, 6, 6, 0, 0, 28, 0, 7, 13, 0, 0, 2, 1, 0, 1]' : 0.172963}", "{'[5, 5, 0, 0, 6, 6, 0, 0, 28, 0, 7, 13, 0, 0, 2, 1, 0, 1]' : 0.17312}", "{'[5, 5, 0, 0, 6, 6, 0, 0, 28, 0, 7, 13, 0, 0, 2, 1, 0, 1]' : 0.151432}", "{'[5, 5, 0, 0, 6, 6, 0, 0, 28, 0, 7, 13, 0, 0, 2, 1, 0, 1]' : 0.145278}", "{'[5, 5, 0, 0, 6, 6, 0, 0, 28, 0, 7, 13, 0, 0, 2, 1, 0, 1]' : 0.14539}", "{'[5, 5, 0, 0, 6, 6, 0, 0, 28, 0, 7, 13, 0, 0, 2, 1, 0, 1]' : 0.145557}", "{'[5, 5, 0, 0, 6, 6, 0, 0, 28, 0, 7, 13, 0, 0, 2, 1, 0, 1]' : 0.145349}", "{'[5, 5, 0, 0, 6, 6, 0, 0, 28, 0, 7, 13, 0, 0, 2, 1, 0, 1]' : 0.145112}", "{'[5, 5, 0, 0, 6, 6, 0, 0, 28, 0, 7, 13, 0, 0, 2, 1, 0, 1]' : 0.145149}", "{'[5, 5, 0, 0, 6, 6, 0, 0, 28, 0, 7, 13, 0, 0, 2, 1, 0, 1]' : 0.145224}", "{'[5, 5, 0, 0, 6, 6, 0, 0, 28, 0, 7, 13, 0, 0, 2, 1, 0, 1]' : 0.145466}", "{'[5, 5, 0, 0, 6, 6, 0, 0, 28, 0, 7, 13, 0, 0, 2, 1, 0, 1]' : 0.145224}", "{'[5, 5, 0, 0, 6, 6, 0, 0, 28, 0, 7, 13, 0, 0, 2, 1, 0, 1]' : 0.145544}", "{'[5, 5, 0, 0, 6, 6, 0, 0, 28, 0, 7, 13, 0, 0, 2, 1, 0, 1]' : 0.145489}", "{'[5, 5, 0, 0, 6, 6, 0, 0, 28, 0, 7, 13, 0, 0, 2, 1, 0, 1]' : 0.145303}", "{'[5, 5, 0, 0, 6, 6, 0, 0, 28, 0, 7, 13, 0, 0, 2, 1, 0, 1]' : 0.145213}", "{'[5, 5, 0, 0, 6, 6, 0, 0, 28, 0, 7, 13, 0, 0, 2, 1, 0, 1]' : 0.145299}", "{'[5, 5, 0, 0, 6, 6, 0, 0, 28, 0, 7, 13, 0, 0, 2, 1, 0, 1]' : 0.145205}", "{'[5, 5, 0, 0, 6, 6, 0, 0, 28, 0, 7, 13, 0, 0, 2, 1, 0, 1]' : 0.145311}", "{'[5, 5, 0, 0, 6, 6, 0, 0, 28, 0, 7, 13, 0, 0, 2, 1, 0, 1]' : 0.145464}", "{'[5, 5, 0, 0, 6, 6, 0, 0, 28, 0, 7, 13, 0, 0, 2, 1, 0, 1]' : 0.145218}", "{'[5, 5, 0, 0, 6, 6, 0, 0, 28, 0, 7, 13, 0, 0, 2, 1, 0, 1]' : 0.145135}", "{'[5, 5, 0, 0, 6, 6, 0, 0, 28, 0, 7, 13, 0, 0, 2, 1, 0, 1]' : 0.145138}", "{'[5, 5, 0, 0, 6, 6, 0, 0, 28, 0, 7, 13, 0, 0, 2, 1, 0, 1]' : 0.145473}", "{'[5, 5, 0, 0, 6, 6, 0, 0, 28, 0, 7, 13, 0, 0, 2, 1, 0, 1]' : 0.146659}", "{'[5, 5, 0, 0, 6, 6, 0, 0, 28, 0, 7, 13, 0, 0, 2, 1, 0, 1]' : 0.145547}", "{'[5, 5, 0, 0, 6, 6, 0, 0, 28, 0, 7, 13, 0, 0, 2, 1, 0, 1]' : 0.145874}", "{'[5, 5, 0, 0, 6, 6, 0, 0, 28, 0, 7, 13, 0, 0, 2, 1, 0, 1]' : 0.146137}"]
returning from 'run': {'[5, 5, 0, 0, 6, 6, 0, 0, 28, 0, 7, 13, 0, 0, 2, 1, 0, 1]': ([0.173681, 0.173185, 0.172963, 0.17312, 0.151432, 0.145278, 0.14539, 0.145557, 0.145349, 0.145112, 0.145149, 0.145224, 0.145466, 0.145224, 0.145544, 0.145489, 0.145303, 0.145213, 0.145299, 0.145205, 0.145311, 0.145464, 0.145218, 0.145135, 0.145138, 0.145473, 0.146659, 0.145547, 0.145874, 0.146137], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 5, 0, 0, 6, 6, 0, 0, 28, 0, 7, 13, 0, 0, 2, 1, 0, 1]': ([0.173681, 0.173185, 0.172963, 0.17312, 0.151432, 0.145278, 0.14539, 0.145557, 0.145349, 0.145112, 0.145149, 0.145224, 0.145466, 0.145224, 0.145544, 0.145489, 0.145303, 0.145213, 0.145299, 0.145205, 0.145311, 0.145464, 0.145218, 0.145135, 0.145138, 0.145473, 0.146659, 0.145547, 0.145874, 0.146137], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	42
        Max loop nest depth: 	4
        Additions: 		910
        Multiplications: 	342
        Divisions: 		0
        Logical: 		0
        Reads: 			1968
        Writes: 		401
        Comparisons:		42
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest32.exe __orio_perftest32.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest32.exe  
Program Test Output: 
{'[0, 6, 0, 6, 0, 6, 0, 1, 11, 9, 0, 11, 1, 0, 1, 1, 1, 1]' : 0.117236}
{'[0, 6, 0, 6, 0, 6, 0, 1, 11, 9, 0, 11, 1, 0, 1, 1, 1, 1]' : 0.117262}
{'[0, 6, 0, 6, 0, 6, 0, 1, 11, 9, 0, 11, 1, 0, 1, 1, 1, 1]' : 0.11712}
{'[0, 6, 0, 6, 0, 6, 0, 1, 11, 9, 0, 11, 1, 0, 1, 1, 1, 1]' : 0.117117}
{'[0, 6, 0, 6, 0, 6, 0, 1, 11, 9, 0, 11, 1, 0, 1, 1, 1, 1]' : 0.113619}
{'[0, 6, 0, 6, 0, 6, 0, 1, 11, 9, 0, 11, 1, 0, 1, 1, 1, 1]' : 0.107901}
{'[0, 6, 0, 6, 0, 6, 0, 1, 11, 9, 0, 11, 1, 0, 1, 1, 1, 1]' : 0.107571}
{'[0, 6, 0, 6, 0, 6, 0, 1, 11, 9, 0, 11, 1, 0, 1, 1, 1, 1]' : 0.107528}
{'[0, 6, 0, 6, 0, 6, 0, 1, 11, 9, 0, 11, 1, 0, 1, 1, 1, 1]' : 0.107504}
{'[0, 6, 0, 6, 0, 6, 0, 1, 11, 9, 0, 11, 1, 0, 1, 1, 1, 1]' : 0.107634}
{'[0, 6, 0, 6, 0, 6, 0, 1, 11, 9, 0, 11, 1, 0, 1, 1, 1, 1]' : 0.107595}
{'[0, 6, 0, 6, 0, 6, 0, 1, 11, 9, 0, 11, 1, 0, 1, 1, 1, 1]' : 0.107471}
{'[0, 6, 0, 6, 0, 6, 0, 1, 11, 9, 0, 11, 1, 0, 1, 1, 1, 1]' : 0.107512}
{'[0, 6, 0, 6, 0, 6, 0, 1, 11, 9, 0, 11, 1, 0, 1, 1, 1, 1]' : 0.106957}
{'[0, 6, 0, 6, 0, 6, 0, 1, 11, 9, 0, 11, 1, 0, 1, 1, 1, 1]' : 0.10541}
{'[0, 6, 0, 6, 0, 6, 0, 1, 11, 9, 0, 11, 1, 0, 1, 1, 1, 1]' : 0.107158}
{'[0, 6, 0, 6, 0, 6, 0, 1, 11, 9, 0, 11, 1, 0, 1, 1, 1, 1]' : 0.107506}
{'[0, 6, 0, 6, 0, 6, 0, 1, 11, 9, 0, 11, 1, 0, 1, 1, 1, 1]' : 0.10755}
{'[0, 6, 0, 6, 0, 6, 0, 1, 11, 9, 0, 11, 1, 0, 1, 1, 1, 1]' : 0.107501}
{'[0, 6, 0, 6, 0, 6, 0, 1, 11, 9, 0, 11, 1, 0, 1, 1, 1, 1]' : 0.107528}
{'[0, 6, 0, 6, 0, 6, 0, 1, 11, 9, 0, 11, 1, 0, 1, 1, 1, 1]' : 0.1078}
{'[0, 6, 0, 6, 0, 6, 0, 1, 11, 9, 0, 11, 1, 0, 1, 1, 1, 1]' : 0.107585}
{'[0, 6, 0, 6, 0, 6, 0, 1, 11, 9, 0, 11, 1, 0, 1, 1, 1, 1]' : 0.107625}
{'[0, 6, 0, 6, 0, 6, 0, 1, 11, 9, 0, 11, 1, 0, 1, 1, 1, 1]' : 0.107507}
{'[0, 6, 0, 6, 0, 6, 0, 1, 11, 9, 0, 11, 1, 0, 1, 1, 1, 1]' : 0.107524}
{'[0, 6, 0, 6, 0, 6, 0, 1, 11, 9, 0, 11, 1, 0, 1, 1, 1, 1]' : 0.107512}
{'[0, 6, 0, 6, 0, 6, 0, 1, 11, 9, 0, 11, 1, 0, 1, 1, 1, 1]' : 0.10762}
{'[0, 6, 0, 6, 0, 6, 0, 1, 11, 9, 0, 11, 1, 0, 1, 1, 1, 1]' : 0.107564}
{'[0, 6, 0, 6, 0, 6, 0, 1, 11, 9, 0, 11, 1, 0, 1, 1, 1, 1]' : 0.107465}
{'[0, 6, 0, 6, 0, 6, 0, 1, 11, 9, 0, 11, 1, 0, 1, 1, 1, 1]' : 0.10587}

out:
 ["{'[0, 6, 0, 6, 0, 6, 0, 1, 11, 9, 0, 11, 1, 0, 1, 1, 1, 1]' : 0.117236}", "{'[0, 6, 0, 6, 0, 6, 0, 1, 11, 9, 0, 11, 1, 0, 1, 1, 1, 1]' : 0.117262}", "{'[0, 6, 0, 6, 0, 6, 0, 1, 11, 9, 0, 11, 1, 0, 1, 1, 1, 1]' : 0.11712}", "{'[0, 6, 0, 6, 0, 6, 0, 1, 11, 9, 0, 11, 1, 0, 1, 1, 1, 1]' : 0.117117}", "{'[0, 6, 0, 6, 0, 6, 0, 1, 11, 9, 0, 11, 1, 0, 1, 1, 1, 1]' : 0.113619}", "{'[0, 6, 0, 6, 0, 6, 0, 1, 11, 9, 0, 11, 1, 0, 1, 1, 1, 1]' : 0.107901}", "{'[0, 6, 0, 6, 0, 6, 0, 1, 11, 9, 0, 11, 1, 0, 1, 1, 1, 1]' : 0.107571}", "{'[0, 6, 0, 6, 0, 6, 0, 1, 11, 9, 0, 11, 1, 0, 1, 1, 1, 1]' : 0.107528}", "{'[0, 6, 0, 6, 0, 6, 0, 1, 11, 9, 0, 11, 1, 0, 1, 1, 1, 1]' : 0.107504}", "{'[0, 6, 0, 6, 0, 6, 0, 1, 11, 9, 0, 11, 1, 0, 1, 1, 1, 1]' : 0.107634}", "{'[0, 6, 0, 6, 0, 6, 0, 1, 11, 9, 0, 11, 1, 0, 1, 1, 1, 1]' : 0.107595}", "{'[0, 6, 0, 6, 0, 6, 0, 1, 11, 9, 0, 11, 1, 0, 1, 1, 1, 1]' : 0.107471}", "{'[0, 6, 0, 6, 0, 6, 0, 1, 11, 9, 0, 11, 1, 0, 1, 1, 1, 1]' : 0.107512}", "{'[0, 6, 0, 6, 0, 6, 0, 1, 11, 9, 0, 11, 1, 0, 1, 1, 1, 1]' : 0.106957}", "{'[0, 6, 0, 6, 0, 6, 0, 1, 11, 9, 0, 11, 1, 0, 1, 1, 1, 1]' : 0.10541}", "{'[0, 6, 0, 6, 0, 6, 0, 1, 11, 9, 0, 11, 1, 0, 1, 1, 1, 1]' : 0.107158}", "{'[0, 6, 0, 6, 0, 6, 0, 1, 11, 9, 0, 11, 1, 0, 1, 1, 1, 1]' : 0.107506}", "{'[0, 6, 0, 6, 0, 6, 0, 1, 11, 9, 0, 11, 1, 0, 1, 1, 1, 1]' : 0.10755}", "{'[0, 6, 0, 6, 0, 6, 0, 1, 11, 9, 0, 11, 1, 0, 1, 1, 1, 1]' : 0.107501}", "{'[0, 6, 0, 6, 0, 6, 0, 1, 11, 9, 0, 11, 1, 0, 1, 1, 1, 1]' : 0.107528}", "{'[0, 6, 0, 6, 0, 6, 0, 1, 11, 9, 0, 11, 1, 0, 1, 1, 1, 1]' : 0.1078}", "{'[0, 6, 0, 6, 0, 6, 0, 1, 11, 9, 0, 11, 1, 0, 1, 1, 1, 1]' : 0.107585}", "{'[0, 6, 0, 6, 0, 6, 0, 1, 11, 9, 0, 11, 1, 0, 1, 1, 1, 1]' : 0.107625}", "{'[0, 6, 0, 6, 0, 6, 0, 1, 11, 9, 0, 11, 1, 0, 1, 1, 1, 1]' : 0.107507}", "{'[0, 6, 0, 6, 0, 6, 0, 1, 11, 9, 0, 11, 1, 0, 1, 1, 1, 1]' : 0.107524}", "{'[0, 6, 0, 6, 0, 6, 0, 1, 11, 9, 0, 11, 1, 0, 1, 1, 1, 1]' : 0.107512}", "{'[0, 6, 0, 6, 0, 6, 0, 1, 11, 9, 0, 11, 1, 0, 1, 1, 1, 1]' : 0.10762}", "{'[0, 6, 0, 6, 0, 6, 0, 1, 11, 9, 0, 11, 1, 0, 1, 1, 1, 1]' : 0.107564}", "{'[0, 6, 0, 6, 0, 6, 0, 1, 11, 9, 0, 11, 1, 0, 1, 1, 1, 1]' : 0.107465}", "{'[0, 6, 0, 6, 0, 6, 0, 1, 11, 9, 0, 11, 1, 0, 1, 1, 1, 1]' : 0.10587}"]
returning from 'run': {'[0, 6, 0, 6, 0, 6, 0, 1, 11, 9, 0, 11, 1, 0, 1, 1, 1, 1]': ([0.117236, 0.117262, 0.11712, 0.117117, 0.113619, 0.107901, 0.107571, 0.107528, 0.107504, 0.107634, 0.107595, 0.107471, 0.107512, 0.106957, 0.10541, 0.107158, 0.107506, 0.10755, 0.107501, 0.107528, 0.1078, 0.107585, 0.107625, 0.107507, 0.107524, 0.107512, 0.10762, 0.107564, 0.107465, 0.10587], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 0, 6, 0, 6, 0, 1, 11, 9, 0, 11, 1, 0, 1, 1, 1, 1]': ([0.117236, 0.117262, 0.11712, 0.117117, 0.113619, 0.107901, 0.107571, 0.107528, 0.107504, 0.107634, 0.107595, 0.107471, 0.107512, 0.106957, 0.10541, 0.107158, 0.107506, 0.10755, 0.107501, 0.107528, 0.1078, 0.107585, 0.107625, 0.107507, 0.107524, 0.107512, 0.10762, 0.107564, 0.107465, 0.10587], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = iii
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	5
        Additions: 		8094
        Multiplications: 	2418
        Divisions: 		0
        Logical: 		0
        Reads: 			12297
        Writes: 		1284
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest33.exe __orio_perftest33.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest33.exe  
Program Test Output: 
{'[6, 2, 0, 4, 4, 1, 0, 0, 1, 29, 0, 28, 0, 1, 0, 0, 1, 0]' : 0.248507}
{'[6, 2, 0, 4, 4, 1, 0, 0, 1, 29, 0, 28, 0, 1, 0, 0, 1, 0]' : 0.253419}
{'[6, 2, 0, 4, 4, 1, 0, 0, 1, 29, 0, 28, 0, 1, 0, 0, 1, 0]' : 0.236413}
{'[6, 2, 0, 4, 4, 1, 0, 0, 1, 29, 0, 28, 0, 1, 0, 0, 1, 0]' : 0.229615}
{'[6, 2, 0, 4, 4, 1, 0, 0, 1, 29, 0, 28, 0, 1, 0, 0, 1, 0]' : 0.231962}
{'[6, 2, 0, 4, 4, 1, 0, 0, 1, 29, 0, 28, 0, 1, 0, 0, 1, 0]' : 0.232173}
{'[6, 2, 0, 4, 4, 1, 0, 0, 1, 29, 0, 28, 0, 1, 0, 0, 1, 0]' : 0.231974}
{'[6, 2, 0, 4, 4, 1, 0, 0, 1, 29, 0, 28, 0, 1, 0, 0, 1, 0]' : 0.227831}
{'[6, 2, 0, 4, 4, 1, 0, 0, 1, 29, 0, 28, 0, 1, 0, 0, 1, 0]' : 0.225069}
{'[6, 2, 0, 4, 4, 1, 0, 0, 1, 29, 0, 28, 0, 1, 0, 0, 1, 0]' : 0.239211}
{'[6, 2, 0, 4, 4, 1, 0, 0, 1, 29, 0, 28, 0, 1, 0, 0, 1, 0]' : 0.231026}
{'[6, 2, 0, 4, 4, 1, 0, 0, 1, 29, 0, 28, 0, 1, 0, 0, 1, 0]' : 0.231918}
{'[6, 2, 0, 4, 4, 1, 0, 0, 1, 29, 0, 28, 0, 1, 0, 0, 1, 0]' : 0.230964}
{'[6, 2, 0, 4, 4, 1, 0, 0, 1, 29, 0, 28, 0, 1, 0, 0, 1, 0]' : 0.232261}
{'[6, 2, 0, 4, 4, 1, 0, 0, 1, 29, 0, 28, 0, 1, 0, 0, 1, 0]' : 0.228327}
{'[6, 2, 0, 4, 4, 1, 0, 0, 1, 29, 0, 28, 0, 1, 0, 0, 1, 0]' : 0.224901}
{'[6, 2, 0, 4, 4, 1, 0, 0, 1, 29, 0, 28, 0, 1, 0, 0, 1, 0]' : 0.229252}
{'[6, 2, 0, 4, 4, 1, 0, 0, 1, 29, 0, 28, 0, 1, 0, 0, 1, 0]' : 0.224488}
{'[6, 2, 0, 4, 4, 1, 0, 0, 1, 29, 0, 28, 0, 1, 0, 0, 1, 0]' : 0.233669}
{'[6, 2, 0, 4, 4, 1, 0, 0, 1, 29, 0, 28, 0, 1, 0, 0, 1, 0]' : 0.23089}
{'[6, 2, 0, 4, 4, 1, 0, 0, 1, 29, 0, 28, 0, 1, 0, 0, 1, 0]' : 0.231412}
{'[6, 2, 0, 4, 4, 1, 0, 0, 1, 29, 0, 28, 0, 1, 0, 0, 1, 0]' : 0.232323}
{'[6, 2, 0, 4, 4, 1, 0, 0, 1, 29, 0, 28, 0, 1, 0, 0, 1, 0]' : 0.23173}
{'[6, 2, 0, 4, 4, 1, 0, 0, 1, 29, 0, 28, 0, 1, 0, 0, 1, 0]' : 0.223931}
{'[6, 2, 0, 4, 4, 1, 0, 0, 1, 29, 0, 28, 0, 1, 0, 0, 1, 0]' : 0.232338}
{'[6, 2, 0, 4, 4, 1, 0, 0, 1, 29, 0, 28, 0, 1, 0, 0, 1, 0]' : 0.235548}
{'[6, 2, 0, 4, 4, 1, 0, 0, 1, 29, 0, 28, 0, 1, 0, 0, 1, 0]' : 0.238184}
{'[6, 2, 0, 4, 4, 1, 0, 0, 1, 29, 0, 28, 0, 1, 0, 0, 1, 0]' : 0.231422}
{'[6, 2, 0, 4, 4, 1, 0, 0, 1, 29, 0, 28, 0, 1, 0, 0, 1, 0]' : 0.229861}
{'[6, 2, 0, 4, 4, 1, 0, 0, 1, 29, 0, 28, 0, 1, 0, 0, 1, 0]' : 0.228204}

out:
 ["{'[6, 2, 0, 4, 4, 1, 0, 0, 1, 29, 0, 28, 0, 1, 0, 0, 1, 0]' : 0.248507}", "{'[6, 2, 0, 4, 4, 1, 0, 0, 1, 29, 0, 28, 0, 1, 0, 0, 1, 0]' : 0.253419}", "{'[6, 2, 0, 4, 4, 1, 0, 0, 1, 29, 0, 28, 0, 1, 0, 0, 1, 0]' : 0.236413}", "{'[6, 2, 0, 4, 4, 1, 0, 0, 1, 29, 0, 28, 0, 1, 0, 0, 1, 0]' : 0.229615}", "{'[6, 2, 0, 4, 4, 1, 0, 0, 1, 29, 0, 28, 0, 1, 0, 0, 1, 0]' : 0.231962}", "{'[6, 2, 0, 4, 4, 1, 0, 0, 1, 29, 0, 28, 0, 1, 0, 0, 1, 0]' : 0.232173}", "{'[6, 2, 0, 4, 4, 1, 0, 0, 1, 29, 0, 28, 0, 1, 0, 0, 1, 0]' : 0.231974}", "{'[6, 2, 0, 4, 4, 1, 0, 0, 1, 29, 0, 28, 0, 1, 0, 0, 1, 0]' : 0.227831}", "{'[6, 2, 0, 4, 4, 1, 0, 0, 1, 29, 0, 28, 0, 1, 0, 0, 1, 0]' : 0.225069}", "{'[6, 2, 0, 4, 4, 1, 0, 0, 1, 29, 0, 28, 0, 1, 0, 0, 1, 0]' : 0.239211}", "{'[6, 2, 0, 4, 4, 1, 0, 0, 1, 29, 0, 28, 0, 1, 0, 0, 1, 0]' : 0.231026}", "{'[6, 2, 0, 4, 4, 1, 0, 0, 1, 29, 0, 28, 0, 1, 0, 0, 1, 0]' : 0.231918}", "{'[6, 2, 0, 4, 4, 1, 0, 0, 1, 29, 0, 28, 0, 1, 0, 0, 1, 0]' : 0.230964}", "{'[6, 2, 0, 4, 4, 1, 0, 0, 1, 29, 0, 28, 0, 1, 0, 0, 1, 0]' : 0.232261}", "{'[6, 2, 0, 4, 4, 1, 0, 0, 1, 29, 0, 28, 0, 1, 0, 0, 1, 0]' : 0.228327}", "{'[6, 2, 0, 4, 4, 1, 0, 0, 1, 29, 0, 28, 0, 1, 0, 0, 1, 0]' : 0.224901}", "{'[6, 2, 0, 4, 4, 1, 0, 0, 1, 29, 0, 28, 0, 1, 0, 0, 1, 0]' : 0.229252}", "{'[6, 2, 0, 4, 4, 1, 0, 0, 1, 29, 0, 28, 0, 1, 0, 0, 1, 0]' : 0.224488}", "{'[6, 2, 0, 4, 4, 1, 0, 0, 1, 29, 0, 28, 0, 1, 0, 0, 1, 0]' : 0.233669}", "{'[6, 2, 0, 4, 4, 1, 0, 0, 1, 29, 0, 28, 0, 1, 0, 0, 1, 0]' : 0.23089}", "{'[6, 2, 0, 4, 4, 1, 0, 0, 1, 29, 0, 28, 0, 1, 0, 0, 1, 0]' : 0.231412}", "{'[6, 2, 0, 4, 4, 1, 0, 0, 1, 29, 0, 28, 0, 1, 0, 0, 1, 0]' : 0.232323}", "{'[6, 2, 0, 4, 4, 1, 0, 0, 1, 29, 0, 28, 0, 1, 0, 0, 1, 0]' : 0.23173}", "{'[6, 2, 0, 4, 4, 1, 0, 0, 1, 29, 0, 28, 0, 1, 0, 0, 1, 0]' : 0.223931}", "{'[6, 2, 0, 4, 4, 1, 0, 0, 1, 29, 0, 28, 0, 1, 0, 0, 1, 0]' : 0.232338}", "{'[6, 2, 0, 4, 4, 1, 0, 0, 1, 29, 0, 28, 0, 1, 0, 0, 1, 0]' : 0.235548}", "{'[6, 2, 0, 4, 4, 1, 0, 0, 1, 29, 0, 28, 0, 1, 0, 0, 1, 0]' : 0.238184}", "{'[6, 2, 0, 4, 4, 1, 0, 0, 1, 29, 0, 28, 0, 1, 0, 0, 1, 0]' : 0.231422}", "{'[6, 2, 0, 4, 4, 1, 0, 0, 1, 29, 0, 28, 0, 1, 0, 0, 1, 0]' : 0.229861}", "{'[6, 2, 0, 4, 4, 1, 0, 0, 1, 29, 0, 28, 0, 1, 0, 0, 1, 0]' : 0.228204}"]
returning from 'run': {'[6, 2, 0, 4, 4, 1, 0, 0, 1, 29, 0, 28, 0, 1, 0, 0, 1, 0]': ([0.248507, 0.253419, 0.236413, 0.229615, 0.231962, 0.232173, 0.231974, 0.227831, 0.225069, 0.239211, 0.231026, 0.231918, 0.230964, 0.232261, 0.228327, 0.224901, 0.229252, 0.224488, 0.233669, 0.23089, 0.231412, 0.232323, 0.23173, 0.223931, 0.232338, 0.235548, 0.238184, 0.231422, 0.229861, 0.228204], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 2, 0, 4, 4, 1, 0, 0, 1, 29, 0, 28, 0, 1, 0, 0, 1, 0]': ([0.248507, 0.253419, 0.236413, 0.229615, 0.231962, 0.232173, 0.231974, 0.227831, 0.225069, 0.239211, 0.231026, 0.231918, 0.230964, 0.232261, 0.228327, 0.224901, 0.229252, 0.224488, 0.233669, 0.23089, 0.231412, 0.232323, 0.23173, 0.223931, 0.232338, 0.235548, 0.238184, 0.231422, 0.229861, 0.228204], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		322
        Multiplications: 	90
        Divisions: 		0
        Logical: 		0
        Reads: 			686
        Writes: 		112
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest34.exe __orio_perftest34.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest34.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest34.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest34.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest34.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = jjj
Code stats:
        Number of loops: 	101
        Max loop nest depth: 	4
        Additions: 		4420
        Multiplications: 	1914
        Divisions: 		0
        Logical: 		0
        Reads: 			8590
        Writes: 		1482
        Comparisons:		101
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest35.exe __orio_perftest35.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest35.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest35.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest35.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest35.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	6
        Additions: 		171
        Multiplications: 	44
        Divisions: 		0
        Logical: 		0
        Reads: 			441
        Writes: 		124
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest36.exe __orio_perftest36.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest36.exe  
Program Test Output: 
{'[4, 0, 1, 4, 2, 2, 1, 0, 23, 0, 0, 11, 0, 0, 1, 1, 0, 1]' : 0.228961}
{'[4, 0, 1, 4, 2, 2, 1, 0, 23, 0, 0, 11, 0, 0, 1, 1, 0, 1]' : 0.228635}
{'[4, 0, 1, 4, 2, 2, 1, 0, 23, 0, 0, 11, 0, 0, 1, 1, 0, 1]' : 0.213786}
{'[4, 0, 1, 4, 2, 2, 1, 0, 23, 0, 0, 11, 0, 0, 1, 1, 0, 1]' : 0.190192}
{'[4, 0, 1, 4, 2, 2, 1, 0, 23, 0, 0, 11, 0, 0, 1, 1, 0, 1]' : 0.19073}
{'[4, 0, 1, 4, 2, 2, 1, 0, 23, 0, 0, 11, 0, 0, 1, 1, 0, 1]' : 0.191087}
{'[4, 0, 1, 4, 2, 2, 1, 0, 23, 0, 0, 11, 0, 0, 1, 1, 0, 1]' : 0.190637}
{'[4, 0, 1, 4, 2, 2, 1, 0, 23, 0, 0, 11, 0, 0, 1, 1, 0, 1]' : 0.190377}
{'[4, 0, 1, 4, 2, 2, 1, 0, 23, 0, 0, 11, 0, 0, 1, 1, 0, 1]' : 0.19039}
{'[4, 0, 1, 4, 2, 2, 1, 0, 23, 0, 0, 11, 0, 0, 1, 1, 0, 1]' : 0.191128}
{'[4, 0, 1, 4, 2, 2, 1, 0, 23, 0, 0, 11, 0, 0, 1, 1, 0, 1]' : 0.190613}
{'[4, 0, 1, 4, 2, 2, 1, 0, 23, 0, 0, 11, 0, 0, 1, 1, 0, 1]' : 0.190851}
{'[4, 0, 1, 4, 2, 2, 1, 0, 23, 0, 0, 11, 0, 0, 1, 1, 0, 1]' : 0.190532}
{'[4, 0, 1, 4, 2, 2, 1, 0, 23, 0, 0, 11, 0, 0, 1, 1, 0, 1]' : 0.190437}
{'[4, 0, 1, 4, 2, 2, 1, 0, 23, 0, 0, 11, 0, 0, 1, 1, 0, 1]' : 0.190627}
{'[4, 0, 1, 4, 2, 2, 1, 0, 23, 0, 0, 11, 0, 0, 1, 1, 0, 1]' : 0.190506}
{'[4, 0, 1, 4, 2, 2, 1, 0, 23, 0, 0, 11, 0, 0, 1, 1, 0, 1]' : 0.191315}
{'[4, 0, 1, 4, 2, 2, 1, 0, 23, 0, 0, 11, 0, 0, 1, 1, 0, 1]' : 0.190607}
{'[4, 0, 1, 4, 2, 2, 1, 0, 23, 0, 0, 11, 0, 0, 1, 1, 0, 1]' : 0.190479}
{'[4, 0, 1, 4, 2, 2, 1, 0, 23, 0, 0, 11, 0, 0, 1, 1, 0, 1]' : 0.191022}
{'[4, 0, 1, 4, 2, 2, 1, 0, 23, 0, 0, 11, 0, 0, 1, 1, 0, 1]' : 0.19055}
{'[4, 0, 1, 4, 2, 2, 1, 0, 23, 0, 0, 11, 0, 0, 1, 1, 0, 1]' : 0.190761}
{'[4, 0, 1, 4, 2, 2, 1, 0, 23, 0, 0, 11, 0, 0, 1, 1, 0, 1]' : 0.191092}
{'[4, 0, 1, 4, 2, 2, 1, 0, 23, 0, 0, 11, 0, 0, 1, 1, 0, 1]' : 0.19072}
{'[4, 0, 1, 4, 2, 2, 1, 0, 23, 0, 0, 11, 0, 0, 1, 1, 0, 1]' : 0.190421}
{'[4, 0, 1, 4, 2, 2, 1, 0, 23, 0, 0, 11, 0, 0, 1, 1, 0, 1]' : 0.190788}
{'[4, 0, 1, 4, 2, 2, 1, 0, 23, 0, 0, 11, 0, 0, 1, 1, 0, 1]' : 0.190691}
{'[4, 0, 1, 4, 2, 2, 1, 0, 23, 0, 0, 11, 0, 0, 1, 1, 0, 1]' : 0.190511}
{'[4, 0, 1, 4, 2, 2, 1, 0, 23, 0, 0, 11, 0, 0, 1, 1, 0, 1]' : 0.190751}
{'[4, 0, 1, 4, 2, 2, 1, 0, 23, 0, 0, 11, 0, 0, 1, 1, 0, 1]' : 0.190423}

out:
 ["{'[4, 0, 1, 4, 2, 2, 1, 0, 23, 0, 0, 11, 0, 0, 1, 1, 0, 1]' : 0.228961}", "{'[4, 0, 1, 4, 2, 2, 1, 0, 23, 0, 0, 11, 0, 0, 1, 1, 0, 1]' : 0.228635}", "{'[4, 0, 1, 4, 2, 2, 1, 0, 23, 0, 0, 11, 0, 0, 1, 1, 0, 1]' : 0.213786}", "{'[4, 0, 1, 4, 2, 2, 1, 0, 23, 0, 0, 11, 0, 0, 1, 1, 0, 1]' : 0.190192}", "{'[4, 0, 1, 4, 2, 2, 1, 0, 23, 0, 0, 11, 0, 0, 1, 1, 0, 1]' : 0.19073}", "{'[4, 0, 1, 4, 2, 2, 1, 0, 23, 0, 0, 11, 0, 0, 1, 1, 0, 1]' : 0.191087}", "{'[4, 0, 1, 4, 2, 2, 1, 0, 23, 0, 0, 11, 0, 0, 1, 1, 0, 1]' : 0.190637}", "{'[4, 0, 1, 4, 2, 2, 1, 0, 23, 0, 0, 11, 0, 0, 1, 1, 0, 1]' : 0.190377}", "{'[4, 0, 1, 4, 2, 2, 1, 0, 23, 0, 0, 11, 0, 0, 1, 1, 0, 1]' : 0.19039}", "{'[4, 0, 1, 4, 2, 2, 1, 0, 23, 0, 0, 11, 0, 0, 1, 1, 0, 1]' : 0.191128}", "{'[4, 0, 1, 4, 2, 2, 1, 0, 23, 0, 0, 11, 0, 0, 1, 1, 0, 1]' : 0.190613}", "{'[4, 0, 1, 4, 2, 2, 1, 0, 23, 0, 0, 11, 0, 0, 1, 1, 0, 1]' : 0.190851}", "{'[4, 0, 1, 4, 2, 2, 1, 0, 23, 0, 0, 11, 0, 0, 1, 1, 0, 1]' : 0.190532}", "{'[4, 0, 1, 4, 2, 2, 1, 0, 23, 0, 0, 11, 0, 0, 1, 1, 0, 1]' : 0.190437}", "{'[4, 0, 1, 4, 2, 2, 1, 0, 23, 0, 0, 11, 0, 0, 1, 1, 0, 1]' : 0.190627}", "{'[4, 0, 1, 4, 2, 2, 1, 0, 23, 0, 0, 11, 0, 0, 1, 1, 0, 1]' : 0.190506}", "{'[4, 0, 1, 4, 2, 2, 1, 0, 23, 0, 0, 11, 0, 0, 1, 1, 0, 1]' : 0.191315}", "{'[4, 0, 1, 4, 2, 2, 1, 0, 23, 0, 0, 11, 0, 0, 1, 1, 0, 1]' : 0.190607}", "{'[4, 0, 1, 4, 2, 2, 1, 0, 23, 0, 0, 11, 0, 0, 1, 1, 0, 1]' : 0.190479}", "{'[4, 0, 1, 4, 2, 2, 1, 0, 23, 0, 0, 11, 0, 0, 1, 1, 0, 1]' : 0.191022}", "{'[4, 0, 1, 4, 2, 2, 1, 0, 23, 0, 0, 11, 0, 0, 1, 1, 0, 1]' : 0.19055}", "{'[4, 0, 1, 4, 2, 2, 1, 0, 23, 0, 0, 11, 0, 0, 1, 1, 0, 1]' : 0.190761}", "{'[4, 0, 1, 4, 2, 2, 1, 0, 23, 0, 0, 11, 0, 0, 1, 1, 0, 1]' : 0.191092}", "{'[4, 0, 1, 4, 2, 2, 1, 0, 23, 0, 0, 11, 0, 0, 1, 1, 0, 1]' : 0.19072}", "{'[4, 0, 1, 4, 2, 2, 1, 0, 23, 0, 0, 11, 0, 0, 1, 1, 0, 1]' : 0.190421}", "{'[4, 0, 1, 4, 2, 2, 1, 0, 23, 0, 0, 11, 0, 0, 1, 1, 0, 1]' : 0.190788}", "{'[4, 0, 1, 4, 2, 2, 1, 0, 23, 0, 0, 11, 0, 0, 1, 1, 0, 1]' : 0.190691}", "{'[4, 0, 1, 4, 2, 2, 1, 0, 23, 0, 0, 11, 0, 0, 1, 1, 0, 1]' : 0.190511}", "{'[4, 0, 1, 4, 2, 2, 1, 0, 23, 0, 0, 11, 0, 0, 1, 1, 0, 1]' : 0.190751}", "{'[4, 0, 1, 4, 2, 2, 1, 0, 23, 0, 0, 11, 0, 0, 1, 1, 0, 1]' : 0.190423}"]
returning from 'run': {'[4, 0, 1, 4, 2, 2, 1, 0, 23, 0, 0, 11, 0, 0, 1, 1, 0, 1]': ([0.228961, 0.228635, 0.213786, 0.190192, 0.19073, 0.191087, 0.190637, 0.190377, 0.19039, 0.191128, 0.190613, 0.190851, 0.190532, 0.190437, 0.190627, 0.190506, 0.191315, 0.190607, 0.190479, 0.191022, 0.19055, 0.190761, 0.191092, 0.19072, 0.190421, 0.190788, 0.190691, 0.190511, 0.190751, 0.190423], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 0, 1, 4, 2, 2, 1, 0, 23, 0, 0, 11, 0, 0, 1, 1, 0, 1]': ([0.228961, 0.228635, 0.213786, 0.190192, 0.19073, 0.191087, 0.190637, 0.190377, 0.19039, 0.191128, 0.190613, 0.190851, 0.190532, 0.190437, 0.190627, 0.190506, 0.191315, 0.190607, 0.190479, 0.191022, 0.19055, 0.190761, 0.191092, 0.19072, 0.190421, 0.190788, 0.190691, 0.190511, 0.190751, 0.190423], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	94
        Max loop nest depth: 	5
        Additions: 		3858
        Multiplications: 	1716
        Divisions: 		0
        Logical: 		0
        Reads: 			7446
        Writes: 		1243
        Comparisons:		94
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest37.exe __orio_perftest37.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest37.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest37.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest37.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest37.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	5
        Additions: 		3835
        Multiplications: 	1188
        Divisions: 		0
        Logical: 		0
        Reads: 			6076
        Writes: 		633
        Comparisons:		18
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest38.exe __orio_perftest38.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest38.exe  
Program Test Output: 
{'[0, 0, 1, 2, 2, 1, 0, 0, 0, 0, 3, 11, 2, 0, 0, 0, 0, 0]' : 0.286561}
{'[0, 0, 1, 2, 2, 1, 0, 0, 0, 0, 3, 11, 2, 0, 0, 0, 0, 0]' : 0.272661}
{'[0, 0, 1, 2, 2, 1, 0, 0, 0, 0, 3, 11, 2, 0, 0, 0, 0, 0]' : 0.250427}
{'[0, 0, 1, 2, 2, 1, 0, 0, 0, 0, 3, 11, 2, 0, 0, 0, 0, 0]' : 0.246167}
{'[0, 0, 1, 2, 2, 1, 0, 0, 0, 0, 3, 11, 2, 0, 0, 0, 0, 0]' : 0.253635}
{'[0, 0, 1, 2, 2, 1, 0, 0, 0, 0, 3, 11, 2, 0, 0, 0, 0, 0]' : 0.247663}
{'[0, 0, 1, 2, 2, 1, 0, 0, 0, 0, 3, 11, 2, 0, 0, 0, 0, 0]' : 0.255004}
{'[0, 0, 1, 2, 2, 1, 0, 0, 0, 0, 3, 11, 2, 0, 0, 0, 0, 0]' : 0.247236}
{'[0, 0, 1, 2, 2, 1, 0, 0, 0, 0, 3, 11, 2, 0, 0, 0, 0, 0]' : 0.251043}
{'[0, 0, 1, 2, 2, 1, 0, 0, 0, 0, 3, 11, 2, 0, 0, 0, 0, 0]' : 0.252012}
{'[0, 0, 1, 2, 2, 1, 0, 0, 0, 0, 3, 11, 2, 0, 0, 0, 0, 0]' : 0.255343}
{'[0, 0, 1, 2, 2, 1, 0, 0, 0, 0, 3, 11, 2, 0, 0, 0, 0, 0]' : 0.247733}
{'[0, 0, 1, 2, 2, 1, 0, 0, 0, 0, 3, 11, 2, 0, 0, 0, 0, 0]' : 0.246492}
{'[0, 0, 1, 2, 2, 1, 0, 0, 0, 0, 3, 11, 2, 0, 0, 0, 0, 0]' : 0.25082}
{'[0, 0, 1, 2, 2, 1, 0, 0, 0, 0, 3, 11, 2, 0, 0, 0, 0, 0]' : 0.247178}
{'[0, 0, 1, 2, 2, 1, 0, 0, 0, 0, 3, 11, 2, 0, 0, 0, 0, 0]' : 0.249001}
{'[0, 0, 1, 2, 2, 1, 0, 0, 0, 0, 3, 11, 2, 0, 0, 0, 0, 0]' : 0.25062}
{'[0, 0, 1, 2, 2, 1, 0, 0, 0, 0, 3, 11, 2, 0, 0, 0, 0, 0]' : 0.25201}
{'[0, 0, 1, 2, 2, 1, 0, 0, 0, 0, 3, 11, 2, 0, 0, 0, 0, 0]' : 0.253264}
{'[0, 0, 1, 2, 2, 1, 0, 0, 0, 0, 3, 11, 2, 0, 0, 0, 0, 0]' : 0.24974}
{'[0, 0, 1, 2, 2, 1, 0, 0, 0, 0, 3, 11, 2, 0, 0, 0, 0, 0]' : 0.251714}
{'[0, 0, 1, 2, 2, 1, 0, 0, 0, 0, 3, 11, 2, 0, 0, 0, 0, 0]' : 0.248809}
{'[0, 0, 1, 2, 2, 1, 0, 0, 0, 0, 3, 11, 2, 0, 0, 0, 0, 0]' : 0.254517}
{'[0, 0, 1, 2, 2, 1, 0, 0, 0, 0, 3, 11, 2, 0, 0, 0, 0, 0]' : 0.250485}
{'[0, 0, 1, 2, 2, 1, 0, 0, 0, 0, 3, 11, 2, 0, 0, 0, 0, 0]' : 0.253462}
{'[0, 0, 1, 2, 2, 1, 0, 0, 0, 0, 3, 11, 2, 0, 0, 0, 0, 0]' : 0.248611}
{'[0, 0, 1, 2, 2, 1, 0, 0, 0, 0, 3, 11, 2, 0, 0, 0, 0, 0]' : 0.258144}
{'[0, 0, 1, 2, 2, 1, 0, 0, 0, 0, 3, 11, 2, 0, 0, 0, 0, 0]' : 0.249401}
{'[0, 0, 1, 2, 2, 1, 0, 0, 0, 0, 3, 11, 2, 0, 0, 0, 0, 0]' : 0.2506}
{'[0, 0, 1, 2, 2, 1, 0, 0, 0, 0, 3, 11, 2, 0, 0, 0, 0, 0]' : 0.252127}

out:
 ["{'[0, 0, 1, 2, 2, 1, 0, 0, 0, 0, 3, 11, 2, 0, 0, 0, 0, 0]' : 0.286561}", "{'[0, 0, 1, 2, 2, 1, 0, 0, 0, 0, 3, 11, 2, 0, 0, 0, 0, 0]' : 0.272661}", "{'[0, 0, 1, 2, 2, 1, 0, 0, 0, 0, 3, 11, 2, 0, 0, 0, 0, 0]' : 0.250427}", "{'[0, 0, 1, 2, 2, 1, 0, 0, 0, 0, 3, 11, 2, 0, 0, 0, 0, 0]' : 0.246167}", "{'[0, 0, 1, 2, 2, 1, 0, 0, 0, 0, 3, 11, 2, 0, 0, 0, 0, 0]' : 0.253635}", "{'[0, 0, 1, 2, 2, 1, 0, 0, 0, 0, 3, 11, 2, 0, 0, 0, 0, 0]' : 0.247663}", "{'[0, 0, 1, 2, 2, 1, 0, 0, 0, 0, 3, 11, 2, 0, 0, 0, 0, 0]' : 0.255004}", "{'[0, 0, 1, 2, 2, 1, 0, 0, 0, 0, 3, 11, 2, 0, 0, 0, 0, 0]' : 0.247236}", "{'[0, 0, 1, 2, 2, 1, 0, 0, 0, 0, 3, 11, 2, 0, 0, 0, 0, 0]' : 0.251043}", "{'[0, 0, 1, 2, 2, 1, 0, 0, 0, 0, 3, 11, 2, 0, 0, 0, 0, 0]' : 0.252012}", "{'[0, 0, 1, 2, 2, 1, 0, 0, 0, 0, 3, 11, 2, 0, 0, 0, 0, 0]' : 0.255343}", "{'[0, 0, 1, 2, 2, 1, 0, 0, 0, 0, 3, 11, 2, 0, 0, 0, 0, 0]' : 0.247733}", "{'[0, 0, 1, 2, 2, 1, 0, 0, 0, 0, 3, 11, 2, 0, 0, 0, 0, 0]' : 0.246492}", "{'[0, 0, 1, 2, 2, 1, 0, 0, 0, 0, 3, 11, 2, 0, 0, 0, 0, 0]' : 0.25082}", "{'[0, 0, 1, 2, 2, 1, 0, 0, 0, 0, 3, 11, 2, 0, 0, 0, 0, 0]' : 0.247178}", "{'[0, 0, 1, 2, 2, 1, 0, 0, 0, 0, 3, 11, 2, 0, 0, 0, 0, 0]' : 0.249001}", "{'[0, 0, 1, 2, 2, 1, 0, 0, 0, 0, 3, 11, 2, 0, 0, 0, 0, 0]' : 0.25062}", "{'[0, 0, 1, 2, 2, 1, 0, 0, 0, 0, 3, 11, 2, 0, 0, 0, 0, 0]' : 0.25201}", "{'[0, 0, 1, 2, 2, 1, 0, 0, 0, 0, 3, 11, 2, 0, 0, 0, 0, 0]' : 0.253264}", "{'[0, 0, 1, 2, 2, 1, 0, 0, 0, 0, 3, 11, 2, 0, 0, 0, 0, 0]' : 0.24974}", "{'[0, 0, 1, 2, 2, 1, 0, 0, 0, 0, 3, 11, 2, 0, 0, 0, 0, 0]' : 0.251714}", "{'[0, 0, 1, 2, 2, 1, 0, 0, 0, 0, 3, 11, 2, 0, 0, 0, 0, 0]' : 0.248809}", "{'[0, 0, 1, 2, 2, 1, 0, 0, 0, 0, 3, 11, 2, 0, 0, 0, 0, 0]' : 0.254517}", "{'[0, 0, 1, 2, 2, 1, 0, 0, 0, 0, 3, 11, 2, 0, 0, 0, 0, 0]' : 0.250485}", "{'[0, 0, 1, 2, 2, 1, 0, 0, 0, 0, 3, 11, 2, 0, 0, 0, 0, 0]' : 0.253462}", "{'[0, 0, 1, 2, 2, 1, 0, 0, 0, 0, 3, 11, 2, 0, 0, 0, 0, 0]' : 0.248611}", "{'[0, 0, 1, 2, 2, 1, 0, 0, 0, 0, 3, 11, 2, 0, 0, 0, 0, 0]' : 0.258144}", "{'[0, 0, 1, 2, 2, 1, 0, 0, 0, 0, 3, 11, 2, 0, 0, 0, 0, 0]' : 0.249401}", "{'[0, 0, 1, 2, 2, 1, 0, 0, 0, 0, 3, 11, 2, 0, 0, 0, 0, 0]' : 0.2506}", "{'[0, 0, 1, 2, 2, 1, 0, 0, 0, 0, 3, 11, 2, 0, 0, 0, 0, 0]' : 0.252127}"]
returning from 'run': {'[0, 0, 1, 2, 2, 1, 0, 0, 0, 0, 3, 11, 2, 0, 0, 0, 0, 0]': ([0.286561, 0.272661, 0.250427, 0.246167, 0.253635, 0.247663, 0.255004, 0.247236, 0.251043, 0.252012, 0.255343, 0.247733, 0.246492, 0.25082, 0.247178, 0.249001, 0.25062, 0.25201, 0.253264, 0.24974, 0.251714, 0.248809, 0.254517, 0.250485, 0.253462, 0.248611, 0.258144, 0.249401, 0.2506, 0.252127], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 1, 2, 2, 1, 0, 0, 0, 0, 3, 11, 2, 0, 0, 0, 0, 0]': ([0.286561, 0.272661, 0.250427, 0.246167, 0.253635, 0.247663, 0.255004, 0.247236, 0.251043, 0.252012, 0.255343, 0.247733, 0.246492, 0.25082, 0.247178, 0.249001, 0.25062, 0.25201, 0.253264, 0.24974, 0.251714, 0.248809, 0.254517, 0.250485, 0.253462, 0.248611, 0.258144, 0.249401, 0.2506, 0.252127], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	107
        Max loop nest depth: 	5
        Additions: 		9367
        Multiplications: 	2046
        Divisions: 		0
        Logical: 		0
        Reads: 			13581
        Writes: 		1395
        Comparisons:		107
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest39.exe __orio_perftest39.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest39.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest39.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest39.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest39.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	50
        Max loop nest depth: 	4
        Additions: 		1608
        Multiplications: 	702
        Divisions: 		0
        Logical: 		0
        Reads: 			3339
        Writes: 		625
        Comparisons:		50
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest40.exe __orio_perftest40.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest40.exe  
Program Test Output: 
{'[3, 3, 6, 1, 1, 0, 1, 0, 2, 29, 12, 0, 1, 1, 0, 1, 0, 1]' : 0.101828}
{'[3, 3, 6, 1, 1, 0, 1, 0, 2, 29, 12, 0, 1, 1, 0, 1, 0, 1]' : 0.10172}
{'[3, 3, 6, 1, 1, 0, 1, 0, 2, 29, 12, 0, 1, 1, 0, 1, 0, 1]' : 0.10181}
{'[3, 3, 6, 1, 1, 0, 1, 0, 2, 29, 12, 0, 1, 1, 0, 1, 0, 1]' : 0.101807}
{'[3, 3, 6, 1, 1, 0, 1, 0, 2, 29, 12, 0, 1, 1, 0, 1, 0, 1]' : 0.101755}
{'[3, 3, 6, 1, 1, 0, 1, 0, 2, 29, 12, 0, 1, 1, 0, 1, 0, 1]' : 0.101863}
{'[3, 3, 6, 1, 1, 0, 1, 0, 2, 29, 12, 0, 1, 1, 0, 1, 0, 1]' : 0.101938}
{'[3, 3, 6, 1, 1, 0, 1, 0, 2, 29, 12, 0, 1, 1, 0, 1, 0, 1]' : 0.10164}
{'[3, 3, 6, 1, 1, 0, 1, 0, 2, 29, 12, 0, 1, 1, 0, 1, 0, 1]' : 0.101659}
{'[3, 3, 6, 1, 1, 0, 1, 0, 2, 29, 12, 0, 1, 1, 0, 1, 0, 1]' : 0.101694}
{'[3, 3, 6, 1, 1, 0, 1, 0, 2, 29, 12, 0, 1, 1, 0, 1, 0, 1]' : 0.101673}
{'[3, 3, 6, 1, 1, 0, 1, 0, 2, 29, 12, 0, 1, 1, 0, 1, 0, 1]' : 0.101684}
{'[3, 3, 6, 1, 1, 0, 1, 0, 2, 29, 12, 0, 1, 1, 0, 1, 0, 1]' : 0.0936682}
{'[3, 3, 6, 1, 1, 0, 1, 0, 2, 29, 12, 0, 1, 1, 0, 1, 0, 1]' : 0.0869431}
{'[3, 3, 6, 1, 1, 0, 1, 0, 2, 29, 12, 0, 1, 1, 0, 1, 0, 1]' : 0.0872629}
{'[3, 3, 6, 1, 1, 0, 1, 0, 2, 29, 12, 0, 1, 1, 0, 1, 0, 1]' : 0.087173}
{'[3, 3, 6, 1, 1, 0, 1, 0, 2, 29, 12, 0, 1, 1, 0, 1, 0, 1]' : 0.0869861}
{'[3, 3, 6, 1, 1, 0, 1, 0, 2, 29, 12, 0, 1, 1, 0, 1, 0, 1]' : 0.0870881}
{'[3, 3, 6, 1, 1, 0, 1, 0, 2, 29, 12, 0, 1, 1, 0, 1, 0, 1]' : 0.0870459}
{'[3, 3, 6, 1, 1, 0, 1, 0, 2, 29, 12, 0, 1, 1, 0, 1, 0, 1]' : 0.0871491}
{'[3, 3, 6, 1, 1, 0, 1, 0, 2, 29, 12, 0, 1, 1, 0, 1, 0, 1]' : 0.087183}
{'[3, 3, 6, 1, 1, 0, 1, 0, 2, 29, 12, 0, 1, 1, 0, 1, 0, 1]' : 0.086947}
{'[3, 3, 6, 1, 1, 0, 1, 0, 2, 29, 12, 0, 1, 1, 0, 1, 0, 1]' : 0.087641}
{'[3, 3, 6, 1, 1, 0, 1, 0, 2, 29, 12, 0, 1, 1, 0, 1, 0, 1]' : 0.0871949}
{'[3, 3, 6, 1, 1, 0, 1, 0, 2, 29, 12, 0, 1, 1, 0, 1, 0, 1]' : 0.086941}
{'[3, 3, 6, 1, 1, 0, 1, 0, 2, 29, 12, 0, 1, 1, 0, 1, 0, 1]' : 0.0870552}
{'[3, 3, 6, 1, 1, 0, 1, 0, 2, 29, 12, 0, 1, 1, 0, 1, 0, 1]' : 0.086962}
{'[3, 3, 6, 1, 1, 0, 1, 0, 2, 29, 12, 0, 1, 1, 0, 1, 0, 1]' : 0.087497}
{'[3, 3, 6, 1, 1, 0, 1, 0, 2, 29, 12, 0, 1, 1, 0, 1, 0, 1]' : 0.087297}
{'[3, 3, 6, 1, 1, 0, 1, 0, 2, 29, 12, 0, 1, 1, 0, 1, 0, 1]' : 0.086971}

out:
 ["{'[3, 3, 6, 1, 1, 0, 1, 0, 2, 29, 12, 0, 1, 1, 0, 1, 0, 1]' : 0.101828}", "{'[3, 3, 6, 1, 1, 0, 1, 0, 2, 29, 12, 0, 1, 1, 0, 1, 0, 1]' : 0.10172}", "{'[3, 3, 6, 1, 1, 0, 1, 0, 2, 29, 12, 0, 1, 1, 0, 1, 0, 1]' : 0.10181}", "{'[3, 3, 6, 1, 1, 0, 1, 0, 2, 29, 12, 0, 1, 1, 0, 1, 0, 1]' : 0.101807}", "{'[3, 3, 6, 1, 1, 0, 1, 0, 2, 29, 12, 0, 1, 1, 0, 1, 0, 1]' : 0.101755}", "{'[3, 3, 6, 1, 1, 0, 1, 0, 2, 29, 12, 0, 1, 1, 0, 1, 0, 1]' : 0.101863}", "{'[3, 3, 6, 1, 1, 0, 1, 0, 2, 29, 12, 0, 1, 1, 0, 1, 0, 1]' : 0.101938}", "{'[3, 3, 6, 1, 1, 0, 1, 0, 2, 29, 12, 0, 1, 1, 0, 1, 0, 1]' : 0.10164}", "{'[3, 3, 6, 1, 1, 0, 1, 0, 2, 29, 12, 0, 1, 1, 0, 1, 0, 1]' : 0.101659}", "{'[3, 3, 6, 1, 1, 0, 1, 0, 2, 29, 12, 0, 1, 1, 0, 1, 0, 1]' : 0.101694}", "{'[3, 3, 6, 1, 1, 0, 1, 0, 2, 29, 12, 0, 1, 1, 0, 1, 0, 1]' : 0.101673}", "{'[3, 3, 6, 1, 1, 0, 1, 0, 2, 29, 12, 0, 1, 1, 0, 1, 0, 1]' : 0.101684}", "{'[3, 3, 6, 1, 1, 0, 1, 0, 2, 29, 12, 0, 1, 1, 0, 1, 0, 1]' : 0.0936682}", "{'[3, 3, 6, 1, 1, 0, 1, 0, 2, 29, 12, 0, 1, 1, 0, 1, 0, 1]' : 0.0869431}", "{'[3, 3, 6, 1, 1, 0, 1, 0, 2, 29, 12, 0, 1, 1, 0, 1, 0, 1]' : 0.0872629}", "{'[3, 3, 6, 1, 1, 0, 1, 0, 2, 29, 12, 0, 1, 1, 0, 1, 0, 1]' : 0.087173}", "{'[3, 3, 6, 1, 1, 0, 1, 0, 2, 29, 12, 0, 1, 1, 0, 1, 0, 1]' : 0.0869861}", "{'[3, 3, 6, 1, 1, 0, 1, 0, 2, 29, 12, 0, 1, 1, 0, 1, 0, 1]' : 0.0870881}", "{'[3, 3, 6, 1, 1, 0, 1, 0, 2, 29, 12, 0, 1, 1, 0, 1, 0, 1]' : 0.0870459}", "{'[3, 3, 6, 1, 1, 0, 1, 0, 2, 29, 12, 0, 1, 1, 0, 1, 0, 1]' : 0.0871491}", "{'[3, 3, 6, 1, 1, 0, 1, 0, 2, 29, 12, 0, 1, 1, 0, 1, 0, 1]' : 0.087183}", "{'[3, 3, 6, 1, 1, 0, 1, 0, 2, 29, 12, 0, 1, 1, 0, 1, 0, 1]' : 0.086947}", "{'[3, 3, 6, 1, 1, 0, 1, 0, 2, 29, 12, 0, 1, 1, 0, 1, 0, 1]' : 0.087641}", "{'[3, 3, 6, 1, 1, 0, 1, 0, 2, 29, 12, 0, 1, 1, 0, 1, 0, 1]' : 0.0871949}", "{'[3, 3, 6, 1, 1, 0, 1, 0, 2, 29, 12, 0, 1, 1, 0, 1, 0, 1]' : 0.086941}", "{'[3, 3, 6, 1, 1, 0, 1, 0, 2, 29, 12, 0, 1, 1, 0, 1, 0, 1]' : 0.0870552}", "{'[3, 3, 6, 1, 1, 0, 1, 0, 2, 29, 12, 0, 1, 1, 0, 1, 0, 1]' : 0.086962}", "{'[3, 3, 6, 1, 1, 0, 1, 0, 2, 29, 12, 0, 1, 1, 0, 1, 0, 1]' : 0.087497}", "{'[3, 3, 6, 1, 1, 0, 1, 0, 2, 29, 12, 0, 1, 1, 0, 1, 0, 1]' : 0.087297}", "{'[3, 3, 6, 1, 1, 0, 1, 0, 2, 29, 12, 0, 1, 1, 0, 1, 0, 1]' : 0.086971}"]
returning from 'run': {'[3, 3, 6, 1, 1, 0, 1, 0, 2, 29, 12, 0, 1, 1, 0, 1, 0, 1]': ([0.101828, 0.10172, 0.10181, 0.101807, 0.101755, 0.101863, 0.101938, 0.10164, 0.101659, 0.101694, 0.101673, 0.101684, 0.0936682, 0.0869431, 0.0872629, 0.087173, 0.0869861, 0.0870881, 0.0870459, 0.0871491, 0.087183, 0.086947, 0.087641, 0.0871949, 0.086941, 0.0870552, 0.086962, 0.087497, 0.087297, 0.086971], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 3, 6, 1, 1, 0, 1, 0, 2, 29, 12, 0, 1, 1, 0, 1, 0, 1]': ([0.101828, 0.10172, 0.10181, 0.101807, 0.101755, 0.101863, 0.101938, 0.10164, 0.101659, 0.101694, 0.101673, 0.101684, 0.0936682, 0.0869431, 0.0872629, 0.087173, 0.0869861, 0.0870881, 0.0870459, 0.0871491, 0.087183, 0.086947, 0.087641, 0.0871949, 0.086941, 0.0870552, 0.086962, 0.087497, 0.087297, 0.086971], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	17
        Max loop nest depth: 	5
        Additions: 		2501
        Multiplications: 	1218
        Divisions: 		0
        Logical: 		0
        Reads: 			4741
        Writes: 		786
        Comparisons:		17
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest41.exe __orio_perftest41.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest41.exe  
Program Test Output: 
{'[3, 1, 5, 0, 0, 6, 0, 0, 27, 27, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.160559}
{'[3, 1, 5, 0, 0, 6, 0, 0, 27, 27, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.160489}
{'[3, 1, 5, 0, 0, 6, 0, 0, 27, 27, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.160477}
{'[3, 1, 5, 0, 0, 6, 0, 0, 27, 27, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.160396}
{'[3, 1, 5, 0, 0, 6, 0, 0, 27, 27, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.161693}
{'[3, 1, 5, 0, 0, 6, 0, 0, 27, 27, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.16074}
{'[3, 1, 5, 0, 0, 6, 0, 0, 27, 27, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.160276}
{'[3, 1, 5, 0, 0, 6, 0, 0, 27, 27, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.160371}
{'[3, 1, 5, 0, 0, 6, 0, 0, 27, 27, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.160785}
{'[3, 1, 5, 0, 0, 6, 0, 0, 27, 27, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.160483}
{'[3, 1, 5, 0, 0, 6, 0, 0, 27, 27, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.160528}
{'[3, 1, 5, 0, 0, 6, 0, 0, 27, 27, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.160355}
{'[3, 1, 5, 0, 0, 6, 0, 0, 27, 27, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.160818}
{'[3, 1, 5, 0, 0, 6, 0, 0, 27, 27, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.160513}
{'[3, 1, 5, 0, 0, 6, 0, 0, 27, 27, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.160803}
{'[3, 1, 5, 0, 0, 6, 0, 0, 27, 27, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.160464}
{'[3, 1, 5, 0, 0, 6, 0, 0, 27, 27, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.160485}
{'[3, 1, 5, 0, 0, 6, 0, 0, 27, 27, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.161452}
{'[3, 1, 5, 0, 0, 6, 0, 0, 27, 27, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.161831}
{'[3, 1, 5, 0, 0, 6, 0, 0, 27, 27, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.160586}
{'[3, 1, 5, 0, 0, 6, 0, 0, 27, 27, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.160551}
{'[3, 1, 5, 0, 0, 6, 0, 0, 27, 27, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.160304}
{'[3, 1, 5, 0, 0, 6, 0, 0, 27, 27, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.160668}
{'[3, 1, 5, 0, 0, 6, 0, 0, 27, 27, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.161038}
{'[3, 1, 5, 0, 0, 6, 0, 0, 27, 27, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.160896}
{'[3, 1, 5, 0, 0, 6, 0, 0, 27, 27, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.164834}
{'[3, 1, 5, 0, 0, 6, 0, 0, 27, 27, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.163603}
{'[3, 1, 5, 0, 0, 6, 0, 0, 27, 27, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.160621}
{'[3, 1, 5, 0, 0, 6, 0, 0, 27, 27, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.160458}
{'[3, 1, 5, 0, 0, 6, 0, 0, 27, 27, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.160453}

out:
 ["{'[3, 1, 5, 0, 0, 6, 0, 0, 27, 27, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.160559}", "{'[3, 1, 5, 0, 0, 6, 0, 0, 27, 27, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.160489}", "{'[3, 1, 5, 0, 0, 6, 0, 0, 27, 27, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.160477}", "{'[3, 1, 5, 0, 0, 6, 0, 0, 27, 27, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.160396}", "{'[3, 1, 5, 0, 0, 6, 0, 0, 27, 27, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.161693}", "{'[3, 1, 5, 0, 0, 6, 0, 0, 27, 27, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.16074}", "{'[3, 1, 5, 0, 0, 6, 0, 0, 27, 27, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.160276}", "{'[3, 1, 5, 0, 0, 6, 0, 0, 27, 27, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.160371}", "{'[3, 1, 5, 0, 0, 6, 0, 0, 27, 27, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.160785}", "{'[3, 1, 5, 0, 0, 6, 0, 0, 27, 27, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.160483}", "{'[3, 1, 5, 0, 0, 6, 0, 0, 27, 27, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.160528}", "{'[3, 1, 5, 0, 0, 6, 0, 0, 27, 27, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.160355}", "{'[3, 1, 5, 0, 0, 6, 0, 0, 27, 27, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.160818}", "{'[3, 1, 5, 0, 0, 6, 0, 0, 27, 27, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.160513}", "{'[3, 1, 5, 0, 0, 6, 0, 0, 27, 27, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.160803}", "{'[3, 1, 5, 0, 0, 6, 0, 0, 27, 27, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.160464}", "{'[3, 1, 5, 0, 0, 6, 0, 0, 27, 27, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.160485}", "{'[3, 1, 5, 0, 0, 6, 0, 0, 27, 27, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.161452}", "{'[3, 1, 5, 0, 0, 6, 0, 0, 27, 27, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.161831}", "{'[3, 1, 5, 0, 0, 6, 0, 0, 27, 27, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.160586}", "{'[3, 1, 5, 0, 0, 6, 0, 0, 27, 27, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.160551}", "{'[3, 1, 5, 0, 0, 6, 0, 0, 27, 27, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.160304}", "{'[3, 1, 5, 0, 0, 6, 0, 0, 27, 27, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.160668}", "{'[3, 1, 5, 0, 0, 6, 0, 0, 27, 27, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.161038}", "{'[3, 1, 5, 0, 0, 6, 0, 0, 27, 27, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.160896}", "{'[3, 1, 5, 0, 0, 6, 0, 0, 27, 27, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.164834}", "{'[3, 1, 5, 0, 0, 6, 0, 0, 27, 27, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.163603}", "{'[3, 1, 5, 0, 0, 6, 0, 0, 27, 27, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.160621}", "{'[3, 1, 5, 0, 0, 6, 0, 0, 27, 27, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.160458}", "{'[3, 1, 5, 0, 0, 6, 0, 0, 27, 27, 18, 0, 0, 0, 0, 1, 1, 0]' : 0.160453}"]
returning from 'run': {'[3, 1, 5, 0, 0, 6, 0, 0, 27, 27, 18, 0, 0, 0, 0, 1, 1, 0]': ([0.160559, 0.160489, 0.160477, 0.160396, 0.161693, 0.16074, 0.160276, 0.160371, 0.160785, 0.160483, 0.160528, 0.160355, 0.160818, 0.160513, 0.160803, 0.160464, 0.160485, 0.161452, 0.161831, 0.160586, 0.160551, 0.160304, 0.160668, 0.161038, 0.160896, 0.164834, 0.163603, 0.160621, 0.160458, 0.160453], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 1, 5, 0, 0, 6, 0, 0, 27, 27, 18, 0, 0, 0, 0, 1, 1, 0]': ([0.160559, 0.160489, 0.160477, 0.160396, 0.161693, 0.16074, 0.160276, 0.160371, 0.160785, 0.160483, 0.160528, 0.160355, 0.160818, 0.160513, 0.160803, 0.160464, 0.160485, 0.161452, 0.161831, 0.160586, 0.160551, 0.160304, 0.160668, 0.161038, 0.160896, 0.164834, 0.163603, 0.160621, 0.160458, 0.160453], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	32
        Max loop nest depth: 	5
        Additions: 		1261
        Multiplications: 	408
        Divisions: 		0
        Logical: 		0
        Reads: 			2422
        Writes: 		425
        Comparisons:		32
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest42.exe __orio_perftest42.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest42.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest42.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest42.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest42.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	4
        Additions: 		1527
        Multiplications: 	666
        Divisions: 		0
        Logical: 		0
        Reads: 			2932
        Writes: 		497
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest43.exe __orio_perftest43.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest43.exe  
Program Test Output: 
{'[0, 0, 6, 1, 6, 4, 1, 1, 22, 0, 27, 19, 1, 0, 1, 1, 1, 1]' : 0.0975921}
{'[0, 0, 6, 1, 6, 4, 1, 1, 22, 0, 27, 19, 1, 0, 1, 1, 1, 1]' : 0.0976081}
{'[0, 0, 6, 1, 6, 4, 1, 1, 22, 0, 27, 19, 1, 0, 1, 1, 1, 1]' : 0.0972099}
{'[0, 0, 6, 1, 6, 4, 1, 1, 22, 0, 27, 19, 1, 0, 1, 1, 1, 1]' : 0.097255}
{'[0, 0, 6, 1, 6, 4, 1, 1, 22, 0, 27, 19, 1, 0, 1, 1, 1, 1]' : 0.0977669}
{'[0, 0, 6, 1, 6, 4, 1, 1, 22, 0, 27, 19, 1, 0, 1, 1, 1, 1]' : 0.097192}
{'[0, 0, 6, 1, 6, 4, 1, 1, 22, 0, 27, 19, 1, 0, 1, 1, 1, 1]' : 0.09742}
{'[0, 0, 6, 1, 6, 4, 1, 1, 22, 0, 27, 19, 1, 0, 1, 1, 1, 1]' : 0.0973711}
{'[0, 0, 6, 1, 6, 4, 1, 1, 22, 0, 27, 19, 1, 0, 1, 1, 1, 1]' : 0.0974529}
{'[0, 0, 6, 1, 6, 4, 1, 1, 22, 0, 27, 19, 1, 0, 1, 1, 1, 1]' : 0.0972922}
{'[0, 0, 6, 1, 6, 4, 1, 1, 22, 0, 27, 19, 1, 0, 1, 1, 1, 1]' : 0.0975158}
{'[0, 0, 6, 1, 6, 4, 1, 1, 22, 0, 27, 19, 1, 0, 1, 1, 1, 1]' : 0.097265}
{'[0, 0, 6, 1, 6, 4, 1, 1, 22, 0, 27, 19, 1, 0, 1, 1, 1, 1]' : 0.0974162}
{'[0, 0, 6, 1, 6, 4, 1, 1, 22, 0, 27, 19, 1, 0, 1, 1, 1, 1]' : 0.0974429}
{'[0, 0, 6, 1, 6, 4, 1, 1, 22, 0, 27, 19, 1, 0, 1, 1, 1, 1]' : 0.0985999}
{'[0, 0, 6, 1, 6, 4, 1, 1, 22, 0, 27, 19, 1, 0, 1, 1, 1, 1]' : 0.097255}
{'[0, 0, 6, 1, 6, 4, 1, 1, 22, 0, 27, 19, 1, 0, 1, 1, 1, 1]' : 0.097373}
{'[0, 0, 6, 1, 6, 4, 1, 1, 22, 0, 27, 19, 1, 0, 1, 1, 1, 1]' : 0.0973592}
{'[0, 0, 6, 1, 6, 4, 1, 1, 22, 0, 27, 19, 1, 0, 1, 1, 1, 1]' : 0.0973799}
{'[0, 0, 6, 1, 6, 4, 1, 1, 22, 0, 27, 19, 1, 0, 1, 1, 1, 1]' : 0.097455}
{'[0, 0, 6, 1, 6, 4, 1, 1, 22, 0, 27, 19, 1, 0, 1, 1, 1, 1]' : 0.097508}
{'[0, 0, 6, 1, 6, 4, 1, 1, 22, 0, 27, 19, 1, 0, 1, 1, 1, 1]' : 0.097713}
{'[0, 0, 6, 1, 6, 4, 1, 1, 22, 0, 27, 19, 1, 0, 1, 1, 1, 1]' : 0.097218}
{'[0, 0, 6, 1, 6, 4, 1, 1, 22, 0, 27, 19, 1, 0, 1, 1, 1, 1]' : 0.097337}
{'[0, 0, 6, 1, 6, 4, 1, 1, 22, 0, 27, 19, 1, 0, 1, 1, 1, 1]' : 0.0972371}
{'[0, 0, 6, 1, 6, 4, 1, 1, 22, 0, 27, 19, 1, 0, 1, 1, 1, 1]' : 0.097358}
{'[0, 0, 6, 1, 6, 4, 1, 1, 22, 0, 27, 19, 1, 0, 1, 1, 1, 1]' : 0.0973098}
{'[0, 0, 6, 1, 6, 4, 1, 1, 22, 0, 27, 19, 1, 0, 1, 1, 1, 1]' : 0.0972362}
{'[0, 0, 6, 1, 6, 4, 1, 1, 22, 0, 27, 19, 1, 0, 1, 1, 1, 1]' : 0.0971909}
{'[0, 0, 6, 1, 6, 4, 1, 1, 22, 0, 27, 19, 1, 0, 1, 1, 1, 1]' : 0.097295}

out:
 ["{'[0, 0, 6, 1, 6, 4, 1, 1, 22, 0, 27, 19, 1, 0, 1, 1, 1, 1]' : 0.0975921}", "{'[0, 0, 6, 1, 6, 4, 1, 1, 22, 0, 27, 19, 1, 0, 1, 1, 1, 1]' : 0.0976081}", "{'[0, 0, 6, 1, 6, 4, 1, 1, 22, 0, 27, 19, 1, 0, 1, 1, 1, 1]' : 0.0972099}", "{'[0, 0, 6, 1, 6, 4, 1, 1, 22, 0, 27, 19, 1, 0, 1, 1, 1, 1]' : 0.097255}", "{'[0, 0, 6, 1, 6, 4, 1, 1, 22, 0, 27, 19, 1, 0, 1, 1, 1, 1]' : 0.0977669}", "{'[0, 0, 6, 1, 6, 4, 1, 1, 22, 0, 27, 19, 1, 0, 1, 1, 1, 1]' : 0.097192}", "{'[0, 0, 6, 1, 6, 4, 1, 1, 22, 0, 27, 19, 1, 0, 1, 1, 1, 1]' : 0.09742}", "{'[0, 0, 6, 1, 6, 4, 1, 1, 22, 0, 27, 19, 1, 0, 1, 1, 1, 1]' : 0.0973711}", "{'[0, 0, 6, 1, 6, 4, 1, 1, 22, 0, 27, 19, 1, 0, 1, 1, 1, 1]' : 0.0974529}", "{'[0, 0, 6, 1, 6, 4, 1, 1, 22, 0, 27, 19, 1, 0, 1, 1, 1, 1]' : 0.0972922}", "{'[0, 0, 6, 1, 6, 4, 1, 1, 22, 0, 27, 19, 1, 0, 1, 1, 1, 1]' : 0.0975158}", "{'[0, 0, 6, 1, 6, 4, 1, 1, 22, 0, 27, 19, 1, 0, 1, 1, 1, 1]' : 0.097265}", "{'[0, 0, 6, 1, 6, 4, 1, 1, 22, 0, 27, 19, 1, 0, 1, 1, 1, 1]' : 0.0974162}", "{'[0, 0, 6, 1, 6, 4, 1, 1, 22, 0, 27, 19, 1, 0, 1, 1, 1, 1]' : 0.0974429}", "{'[0, 0, 6, 1, 6, 4, 1, 1, 22, 0, 27, 19, 1, 0, 1, 1, 1, 1]' : 0.0985999}", "{'[0, 0, 6, 1, 6, 4, 1, 1, 22, 0, 27, 19, 1, 0, 1, 1, 1, 1]' : 0.097255}", "{'[0, 0, 6, 1, 6, 4, 1, 1, 22, 0, 27, 19, 1, 0, 1, 1, 1, 1]' : 0.097373}", "{'[0, 0, 6, 1, 6, 4, 1, 1, 22, 0, 27, 19, 1, 0, 1, 1, 1, 1]' : 0.0973592}", "{'[0, 0, 6, 1, 6, 4, 1, 1, 22, 0, 27, 19, 1, 0, 1, 1, 1, 1]' : 0.0973799}", "{'[0, 0, 6, 1, 6, 4, 1, 1, 22, 0, 27, 19, 1, 0, 1, 1, 1, 1]' : 0.097455}", "{'[0, 0, 6, 1, 6, 4, 1, 1, 22, 0, 27, 19, 1, 0, 1, 1, 1, 1]' : 0.097508}", "{'[0, 0, 6, 1, 6, 4, 1, 1, 22, 0, 27, 19, 1, 0, 1, 1, 1, 1]' : 0.097713}", "{'[0, 0, 6, 1, 6, 4, 1, 1, 22, 0, 27, 19, 1, 0, 1, 1, 1, 1]' : 0.097218}", "{'[0, 0, 6, 1, 6, 4, 1, 1, 22, 0, 27, 19, 1, 0, 1, 1, 1, 1]' : 0.097337}", "{'[0, 0, 6, 1, 6, 4, 1, 1, 22, 0, 27, 19, 1, 0, 1, 1, 1, 1]' : 0.0972371}", "{'[0, 0, 6, 1, 6, 4, 1, 1, 22, 0, 27, 19, 1, 0, 1, 1, 1, 1]' : 0.097358}", "{'[0, 0, 6, 1, 6, 4, 1, 1, 22, 0, 27, 19, 1, 0, 1, 1, 1, 1]' : 0.0973098}", "{'[0, 0, 6, 1, 6, 4, 1, 1, 22, 0, 27, 19, 1, 0, 1, 1, 1, 1]' : 0.0972362}", "{'[0, 0, 6, 1, 6, 4, 1, 1, 22, 0, 27, 19, 1, 0, 1, 1, 1, 1]' : 0.0971909}", "{'[0, 0, 6, 1, 6, 4, 1, 1, 22, 0, 27, 19, 1, 0, 1, 1, 1, 1]' : 0.097295}"]
returning from 'run': {'[0, 0, 6, 1, 6, 4, 1, 1, 22, 0, 27, 19, 1, 0, 1, 1, 1, 1]': ([0.0975921, 0.0976081, 0.0972099, 0.097255, 0.0977669, 0.097192, 0.09742, 0.0973711, 0.0974529, 0.0972922, 0.0975158, 0.097265, 0.0974162, 0.0974429, 0.0985999, 0.097255, 0.097373, 0.0973592, 0.0973799, 0.097455, 0.097508, 0.097713, 0.097218, 0.097337, 0.0972371, 0.097358, 0.0973098, 0.0972362, 0.0971909, 0.097295], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 6, 1, 6, 4, 1, 1, 22, 0, 27, 19, 1, 0, 1, 1, 1, 1]': ([0.0975921, 0.0976081, 0.0972099, 0.097255, 0.0977669, 0.097192, 0.09742, 0.0973711, 0.0974529, 0.0972922, 0.0975158, 0.097265, 0.0974162, 0.0974429, 0.0985999, 0.097255, 0.097373, 0.0973592, 0.0973799, 0.097455, 0.097508, 0.097713, 0.097218, 0.097337, 0.0972371, 0.097358, 0.0973098, 0.0972362, 0.0971909, 0.097295], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		506
        Multiplications: 	168
        Divisions: 		0
        Logical: 		0
        Reads: 			1079
        Writes: 		218
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest44.exe __orio_perftest44.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest44.exe  
Program Test Output: 
{'[6, 6, 6, 5, 4, 0, 0, 1, 29, 0, 20, 28, 0, 2, 0, 1, 1, 1]' : 0.240075}
{'[6, 6, 6, 5, 4, 0, 0, 1, 29, 0, 20, 28, 0, 2, 0, 1, 1, 1]' : 0.239912}
{'[6, 6, 6, 5, 4, 0, 0, 1, 29, 0, 20, 28, 0, 2, 0, 1, 1, 1]' : 0.229}
{'[6, 6, 6, 5, 4, 0, 0, 1, 29, 0, 20, 28, 0, 2, 0, 1, 1, 1]' : 0.201109}
{'[6, 6, 6, 5, 4, 0, 0, 1, 29, 0, 20, 28, 0, 2, 0, 1, 1, 1]' : 0.200978}
{'[6, 6, 6, 5, 4, 0, 0, 1, 29, 0, 20, 28, 0, 2, 0, 1, 1, 1]' : 0.200858}
{'[6, 6, 6, 5, 4, 0, 0, 1, 29, 0, 20, 28, 0, 2, 0, 1, 1, 1]' : 0.200839}
{'[6, 6, 6, 5, 4, 0, 0, 1, 29, 0, 20, 28, 0, 2, 0, 1, 1, 1]' : 0.203042}
{'[6, 6, 6, 5, 4, 0, 0, 1, 29, 0, 20, 28, 0, 2, 0, 1, 1, 1]' : 0.200643}
{'[6, 6, 6, 5, 4, 0, 0, 1, 29, 0, 20, 28, 0, 2, 0, 1, 1, 1]' : 0.200914}
{'[6, 6, 6, 5, 4, 0, 0, 1, 29, 0, 20, 28, 0, 2, 0, 1, 1, 1]' : 0.201023}
{'[6, 6, 6, 5, 4, 0, 0, 1, 29, 0, 20, 28, 0, 2, 0, 1, 1, 1]' : 0.201043}
{'[6, 6, 6, 5, 4, 0, 0, 1, 29, 0, 20, 28, 0, 2, 0, 1, 1, 1]' : 0.200876}
{'[6, 6, 6, 5, 4, 0, 0, 1, 29, 0, 20, 28, 0, 2, 0, 1, 1, 1]' : 0.202157}
{'[6, 6, 6, 5, 4, 0, 0, 1, 29, 0, 20, 28, 0, 2, 0, 1, 1, 1]' : 0.200797}
{'[6, 6, 6, 5, 4, 0, 0, 1, 29, 0, 20, 28, 0, 2, 0, 1, 1, 1]' : 0.201128}
{'[6, 6, 6, 5, 4, 0, 0, 1, 29, 0, 20, 28, 0, 2, 0, 1, 1, 1]' : 0.200951}
{'[6, 6, 6, 5, 4, 0, 0, 1, 29, 0, 20, 28, 0, 2, 0, 1, 1, 1]' : 0.201421}
{'[6, 6, 6, 5, 4, 0, 0, 1, 29, 0, 20, 28, 0, 2, 0, 1, 1, 1]' : 0.202325}
{'[6, 6, 6, 5, 4, 0, 0, 1, 29, 0, 20, 28, 0, 2, 0, 1, 1, 1]' : 0.201931}
{'[6, 6, 6, 5, 4, 0, 0, 1, 29, 0, 20, 28, 0, 2, 0, 1, 1, 1]' : 0.201893}
{'[6, 6, 6, 5, 4, 0, 0, 1, 29, 0, 20, 28, 0, 2, 0, 1, 1, 1]' : 0.20195}
{'[6, 6, 6, 5, 4, 0, 0, 1, 29, 0, 20, 28, 0, 2, 0, 1, 1, 1]' : 0.201805}
{'[6, 6, 6, 5, 4, 0, 0, 1, 29, 0, 20, 28, 0, 2, 0, 1, 1, 1]' : 0.20196}
{'[6, 6, 6, 5, 4, 0, 0, 1, 29, 0, 20, 28, 0, 2, 0, 1, 1, 1]' : 0.202364}
{'[6, 6, 6, 5, 4, 0, 0, 1, 29, 0, 20, 28, 0, 2, 0, 1, 1, 1]' : 0.201923}
{'[6, 6, 6, 5, 4, 0, 0, 1, 29, 0, 20, 28, 0, 2, 0, 1, 1, 1]' : 0.201245}
{'[6, 6, 6, 5, 4, 0, 0, 1, 29, 0, 20, 28, 0, 2, 0, 1, 1, 1]' : 0.200793}
{'[6, 6, 6, 5, 4, 0, 0, 1, 29, 0, 20, 28, 0, 2, 0, 1, 1, 1]' : 0.200703}
{'[6, 6, 6, 5, 4, 0, 0, 1, 29, 0, 20, 28, 0, 2, 0, 1, 1, 1]' : 0.201788}

out:
 ["{'[6, 6, 6, 5, 4, 0, 0, 1, 29, 0, 20, 28, 0, 2, 0, 1, 1, 1]' : 0.240075}", "{'[6, 6, 6, 5, 4, 0, 0, 1, 29, 0, 20, 28, 0, 2, 0, 1, 1, 1]' : 0.239912}", "{'[6, 6, 6, 5, 4, 0, 0, 1, 29, 0, 20, 28, 0, 2, 0, 1, 1, 1]' : 0.229}", "{'[6, 6, 6, 5, 4, 0, 0, 1, 29, 0, 20, 28, 0, 2, 0, 1, 1, 1]' : 0.201109}", "{'[6, 6, 6, 5, 4, 0, 0, 1, 29, 0, 20, 28, 0, 2, 0, 1, 1, 1]' : 0.200978}", "{'[6, 6, 6, 5, 4, 0, 0, 1, 29, 0, 20, 28, 0, 2, 0, 1, 1, 1]' : 0.200858}", "{'[6, 6, 6, 5, 4, 0, 0, 1, 29, 0, 20, 28, 0, 2, 0, 1, 1, 1]' : 0.200839}", "{'[6, 6, 6, 5, 4, 0, 0, 1, 29, 0, 20, 28, 0, 2, 0, 1, 1, 1]' : 0.203042}", "{'[6, 6, 6, 5, 4, 0, 0, 1, 29, 0, 20, 28, 0, 2, 0, 1, 1, 1]' : 0.200643}", "{'[6, 6, 6, 5, 4, 0, 0, 1, 29, 0, 20, 28, 0, 2, 0, 1, 1, 1]' : 0.200914}", "{'[6, 6, 6, 5, 4, 0, 0, 1, 29, 0, 20, 28, 0, 2, 0, 1, 1, 1]' : 0.201023}", "{'[6, 6, 6, 5, 4, 0, 0, 1, 29, 0, 20, 28, 0, 2, 0, 1, 1, 1]' : 0.201043}", "{'[6, 6, 6, 5, 4, 0, 0, 1, 29, 0, 20, 28, 0, 2, 0, 1, 1, 1]' : 0.200876}", "{'[6, 6, 6, 5, 4, 0, 0, 1, 29, 0, 20, 28, 0, 2, 0, 1, 1, 1]' : 0.202157}", "{'[6, 6, 6, 5, 4, 0, 0, 1, 29, 0, 20, 28, 0, 2, 0, 1, 1, 1]' : 0.200797}", "{'[6, 6, 6, 5, 4, 0, 0, 1, 29, 0, 20, 28, 0, 2, 0, 1, 1, 1]' : 0.201128}", "{'[6, 6, 6, 5, 4, 0, 0, 1, 29, 0, 20, 28, 0, 2, 0, 1, 1, 1]' : 0.200951}", "{'[6, 6, 6, 5, 4, 0, 0, 1, 29, 0, 20, 28, 0, 2, 0, 1, 1, 1]' : 0.201421}", "{'[6, 6, 6, 5, 4, 0, 0, 1, 29, 0, 20, 28, 0, 2, 0, 1, 1, 1]' : 0.202325}", "{'[6, 6, 6, 5, 4, 0, 0, 1, 29, 0, 20, 28, 0, 2, 0, 1, 1, 1]' : 0.201931}", "{'[6, 6, 6, 5, 4, 0, 0, 1, 29, 0, 20, 28, 0, 2, 0, 1, 1, 1]' : 0.201893}", "{'[6, 6, 6, 5, 4, 0, 0, 1, 29, 0, 20, 28, 0, 2, 0, 1, 1, 1]' : 0.20195}", "{'[6, 6, 6, 5, 4, 0, 0, 1, 29, 0, 20, 28, 0, 2, 0, 1, 1, 1]' : 0.201805}", "{'[6, 6, 6, 5, 4, 0, 0, 1, 29, 0, 20, 28, 0, 2, 0, 1, 1, 1]' : 0.20196}", "{'[6, 6, 6, 5, 4, 0, 0, 1, 29, 0, 20, 28, 0, 2, 0, 1, 1, 1]' : 0.202364}", "{'[6, 6, 6, 5, 4, 0, 0, 1, 29, 0, 20, 28, 0, 2, 0, 1, 1, 1]' : 0.201923}", "{'[6, 6, 6, 5, 4, 0, 0, 1, 29, 0, 20, 28, 0, 2, 0, 1, 1, 1]' : 0.201245}", "{'[6, 6, 6, 5, 4, 0, 0, 1, 29, 0, 20, 28, 0, 2, 0, 1, 1, 1]' : 0.200793}", "{'[6, 6, 6, 5, 4, 0, 0, 1, 29, 0, 20, 28, 0, 2, 0, 1, 1, 1]' : 0.200703}", "{'[6, 6, 6, 5, 4, 0, 0, 1, 29, 0, 20, 28, 0, 2, 0, 1, 1, 1]' : 0.201788}"]
returning from 'run': {'[6, 6, 6, 5, 4, 0, 0, 1, 29, 0, 20, 28, 0, 2, 0, 1, 1, 1]': ([0.240075, 0.239912, 0.229, 0.201109, 0.200978, 0.200858, 0.200839, 0.203042, 0.200643, 0.200914, 0.201023, 0.201043, 0.200876, 0.202157, 0.200797, 0.201128, 0.200951, 0.201421, 0.202325, 0.201931, 0.201893, 0.20195, 0.201805, 0.20196, 0.202364, 0.201923, 0.201245, 0.200793, 0.200703, 0.201788], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 6, 5, 4, 0, 0, 1, 29, 0, 20, 28, 0, 2, 0, 1, 1, 1]': ([0.240075, 0.239912, 0.229, 0.201109, 0.200978, 0.200858, 0.200839, 0.203042, 0.200643, 0.200914, 0.201023, 0.201043, 0.200876, 0.202157, 0.200797, 0.201128, 0.200951, 0.201421, 0.202325, 0.201931, 0.201893, 0.20195, 0.201805, 0.20196, 0.202364, 0.201923, 0.201245, 0.200793, 0.200703, 0.201788], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	182
        Max loop nest depth: 	6
        Additions: 		2629
        Multiplications: 	504
        Divisions: 		0
        Logical: 		0
        Reads: 			5027
        Writes: 		873
        Comparisons:		182
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest45.exe __orio_perftest45.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest45.exe  
Program Test Output: 
{'[5, 1, 5, 5, 3, 5, 1, 1, 28, 29, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.199322}
{'[5, 1, 5, 5, 3, 5, 1, 1, 28, 29, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.198282}
{'[5, 1, 5, 5, 3, 5, 1, 1, 28, 29, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.193385}
{'[5, 1, 5, 5, 3, 5, 1, 1, 28, 29, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.181642}
{'[5, 1, 5, 5, 3, 5, 1, 1, 28, 29, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.182292}
{'[5, 1, 5, 5, 3, 5, 1, 1, 28, 29, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.181804}
{'[5, 1, 5, 5, 3, 5, 1, 1, 28, 29, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.18359}
{'[5, 1, 5, 5, 3, 5, 1, 1, 28, 29, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.182046}
{'[5, 1, 5, 5, 3, 5, 1, 1, 28, 29, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.181638}
{'[5, 1, 5, 5, 3, 5, 1, 1, 28, 29, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.184206}
{'[5, 1, 5, 5, 3, 5, 1, 1, 28, 29, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.182176}
{'[5, 1, 5, 5, 3, 5, 1, 1, 28, 29, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.181263}
{'[5, 1, 5, 5, 3, 5, 1, 1, 28, 29, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.18323}
{'[5, 1, 5, 5, 3, 5, 1, 1, 28, 29, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.183139}
{'[5, 1, 5, 5, 3, 5, 1, 1, 28, 29, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.183776}
{'[5, 1, 5, 5, 3, 5, 1, 1, 28, 29, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.181573}
{'[5, 1, 5, 5, 3, 5, 1, 1, 28, 29, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.182721}
{'[5, 1, 5, 5, 3, 5, 1, 1, 28, 29, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.182973}
{'[5, 1, 5, 5, 3, 5, 1, 1, 28, 29, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.187528}
{'[5, 1, 5, 5, 3, 5, 1, 1, 28, 29, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.182608}
{'[5, 1, 5, 5, 3, 5, 1, 1, 28, 29, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.182875}
{'[5, 1, 5, 5, 3, 5, 1, 1, 28, 29, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.182013}
{'[5, 1, 5, 5, 3, 5, 1, 1, 28, 29, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.182101}
{'[5, 1, 5, 5, 3, 5, 1, 1, 28, 29, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.181694}
{'[5, 1, 5, 5, 3, 5, 1, 1, 28, 29, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.181683}
{'[5, 1, 5, 5, 3, 5, 1, 1, 28, 29, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.184336}
{'[5, 1, 5, 5, 3, 5, 1, 1, 28, 29, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.185891}
{'[5, 1, 5, 5, 3, 5, 1, 1, 28, 29, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.183759}
{'[5, 1, 5, 5, 3, 5, 1, 1, 28, 29, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.182252}
{'[5, 1, 5, 5, 3, 5, 1, 1, 28, 29, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.18295}

out:
 ["{'[5, 1, 5, 5, 3, 5, 1, 1, 28, 29, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.199322}", "{'[5, 1, 5, 5, 3, 5, 1, 1, 28, 29, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.198282}", "{'[5, 1, 5, 5, 3, 5, 1, 1, 28, 29, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.193385}", "{'[5, 1, 5, 5, 3, 5, 1, 1, 28, 29, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.181642}", "{'[5, 1, 5, 5, 3, 5, 1, 1, 28, 29, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.182292}", "{'[5, 1, 5, 5, 3, 5, 1, 1, 28, 29, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.181804}", "{'[5, 1, 5, 5, 3, 5, 1, 1, 28, 29, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.18359}", "{'[5, 1, 5, 5, 3, 5, 1, 1, 28, 29, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.182046}", "{'[5, 1, 5, 5, 3, 5, 1, 1, 28, 29, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.181638}", "{'[5, 1, 5, 5, 3, 5, 1, 1, 28, 29, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.184206}", "{'[5, 1, 5, 5, 3, 5, 1, 1, 28, 29, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.182176}", "{'[5, 1, 5, 5, 3, 5, 1, 1, 28, 29, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.181263}", "{'[5, 1, 5, 5, 3, 5, 1, 1, 28, 29, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.18323}", "{'[5, 1, 5, 5, 3, 5, 1, 1, 28, 29, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.183139}", "{'[5, 1, 5, 5, 3, 5, 1, 1, 28, 29, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.183776}", "{'[5, 1, 5, 5, 3, 5, 1, 1, 28, 29, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.181573}", "{'[5, 1, 5, 5, 3, 5, 1, 1, 28, 29, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.182721}", "{'[5, 1, 5, 5, 3, 5, 1, 1, 28, 29, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.182973}", "{'[5, 1, 5, 5, 3, 5, 1, 1, 28, 29, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.187528}", "{'[5, 1, 5, 5, 3, 5, 1, 1, 28, 29, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.182608}", "{'[5, 1, 5, 5, 3, 5, 1, 1, 28, 29, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.182875}", "{'[5, 1, 5, 5, 3, 5, 1, 1, 28, 29, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.182013}", "{'[5, 1, 5, 5, 3, 5, 1, 1, 28, 29, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.182101}", "{'[5, 1, 5, 5, 3, 5, 1, 1, 28, 29, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.181694}", "{'[5, 1, 5, 5, 3, 5, 1, 1, 28, 29, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.181683}", "{'[5, 1, 5, 5, 3, 5, 1, 1, 28, 29, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.184336}", "{'[5, 1, 5, 5, 3, 5, 1, 1, 28, 29, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.185891}", "{'[5, 1, 5, 5, 3, 5, 1, 1, 28, 29, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.183759}", "{'[5, 1, 5, 5, 3, 5, 1, 1, 28, 29, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.182252}", "{'[5, 1, 5, 5, 3, 5, 1, 1, 28, 29, 1, 0, 2, 0, 0, 0, 0, 1]' : 0.18295}"]
returning from 'run': {'[5, 1, 5, 5, 3, 5, 1, 1, 28, 29, 1, 0, 2, 0, 0, 0, 0, 1]': ([0.199322, 0.198282, 0.193385, 0.181642, 0.182292, 0.181804, 0.18359, 0.182046, 0.181638, 0.184206, 0.182176, 0.181263, 0.18323, 0.183139, 0.183776, 0.181573, 0.182721, 0.182973, 0.187528, 0.182608, 0.182875, 0.182013, 0.182101, 0.181694, 0.181683, 0.184336, 0.185891, 0.183759, 0.182252, 0.18295], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[5, 1, 5, 5, 3, 5, 1, 1, 28, 29, 1, 0, 2, 0, 0, 0, 0, 1]': ([0.199322, 0.198282, 0.193385, 0.181642, 0.182292, 0.181804, 0.18359, 0.182046, 0.181638, 0.184206, 0.182176, 0.181263, 0.18323, 0.183139, 0.183776, 0.181573, 0.182721, 0.182973, 0.187528, 0.182608, 0.182875, 0.182013, 0.182101, 0.181694, 0.181683, 0.184336, 0.185891, 0.183759, 0.182252, 0.18295], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	6
        Additions: 		2139
        Multiplications: 	666
        Divisions: 		0
        Logical: 		0
        Reads: 			3470
        Writes: 		381
        Comparisons:		16
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest46.exe __orio_perftest46.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest46.exe  
Program Test Output: 
{'[1, 4, 0, 1, 5, 0, 0, 1, 12, 0, 27, 20, 1, 0, 1, 0, 0, 0]' : 0.137557}
{'[1, 4, 0, 1, 5, 0, 0, 1, 12, 0, 27, 20, 1, 0, 1, 0, 0, 0]' : 0.137573}
{'[1, 4, 0, 1, 5, 0, 0, 1, 12, 0, 27, 20, 1, 0, 1, 0, 0, 0]' : 0.136983}
{'[1, 4, 0, 1, 5, 0, 0, 1, 12, 0, 27, 20, 1, 0, 1, 0, 0, 0]' : 0.118752}
{'[1, 4, 0, 1, 5, 0, 0, 1, 12, 0, 27, 20, 1, 0, 1, 0, 0, 0]' : 0.115941}
{'[1, 4, 0, 1, 5, 0, 0, 1, 12, 0, 27, 20, 1, 0, 1, 0, 0, 0]' : 0.115805}
{'[1, 4, 0, 1, 5, 0, 0, 1, 12, 0, 27, 20, 1, 0, 1, 0, 0, 0]' : 0.115919}
{'[1, 4, 0, 1, 5, 0, 0, 1, 12, 0, 27, 20, 1, 0, 1, 0, 0, 0]' : 0.116086}
{'[1, 4, 0, 1, 5, 0, 0, 1, 12, 0, 27, 20, 1, 0, 1, 0, 0, 0]' : 0.116168}
{'[1, 4, 0, 1, 5, 0, 0, 1, 12, 0, 27, 20, 1, 0, 1, 0, 0, 0]' : 0.116216}
{'[1, 4, 0, 1, 5, 0, 0, 1, 12, 0, 27, 20, 1, 0, 1, 0, 0, 0]' : 0.116008}
{'[1, 4, 0, 1, 5, 0, 0, 1, 12, 0, 27, 20, 1, 0, 1, 0, 0, 0]' : 0.115973}
{'[1, 4, 0, 1, 5, 0, 0, 1, 12, 0, 27, 20, 1, 0, 1, 0, 0, 0]' : 0.116023}
{'[1, 4, 0, 1, 5, 0, 0, 1, 12, 0, 27, 20, 1, 0, 1, 0, 0, 0]' : 0.116013}
{'[1, 4, 0, 1, 5, 0, 0, 1, 12, 0, 27, 20, 1, 0, 1, 0, 0, 0]' : 0.116207}
{'[1, 4, 0, 1, 5, 0, 0, 1, 12, 0, 27, 20, 1, 0, 1, 0, 0, 0]' : 0.116249}
{'[1, 4, 0, 1, 5, 0, 0, 1, 12, 0, 27, 20, 1, 0, 1, 0, 0, 0]' : 0.116156}
{'[1, 4, 0, 1, 5, 0, 0, 1, 12, 0, 27, 20, 1, 0, 1, 0, 0, 0]' : 0.117219}
{'[1, 4, 0, 1, 5, 0, 0, 1, 12, 0, 27, 20, 1, 0, 1, 0, 0, 0]' : 0.116452}
{'[1, 4, 0, 1, 5, 0, 0, 1, 12, 0, 27, 20, 1, 0, 1, 0, 0, 0]' : 0.11607}
{'[1, 4, 0, 1, 5, 0, 0, 1, 12, 0, 27, 20, 1, 0, 1, 0, 0, 0]' : 0.11596}
{'[1, 4, 0, 1, 5, 0, 0, 1, 12, 0, 27, 20, 1, 0, 1, 0, 0, 0]' : 0.116122}
{'[1, 4, 0, 1, 5, 0, 0, 1, 12, 0, 27, 20, 1, 0, 1, 0, 0, 0]' : 0.115982}
{'[1, 4, 0, 1, 5, 0, 0, 1, 12, 0, 27, 20, 1, 0, 1, 0, 0, 0]' : 0.116171}
{'[1, 4, 0, 1, 5, 0, 0, 1, 12, 0, 27, 20, 1, 0, 1, 0, 0, 0]' : 0.116895}
{'[1, 4, 0, 1, 5, 0, 0, 1, 12, 0, 27, 20, 1, 0, 1, 0, 0, 0]' : 0.116005}
{'[1, 4, 0, 1, 5, 0, 0, 1, 12, 0, 27, 20, 1, 0, 1, 0, 0, 0]' : 0.116053}
{'[1, 4, 0, 1, 5, 0, 0, 1, 12, 0, 27, 20, 1, 0, 1, 0, 0, 0]' : 0.116258}
{'[1, 4, 0, 1, 5, 0, 0, 1, 12, 0, 27, 20, 1, 0, 1, 0, 0, 0]' : 0.116554}
{'[1, 4, 0, 1, 5, 0, 0, 1, 12, 0, 27, 20, 1, 0, 1, 0, 0, 0]' : 0.116416}

out:
 ["{'[1, 4, 0, 1, 5, 0, 0, 1, 12, 0, 27, 20, 1, 0, 1, 0, 0, 0]' : 0.137557}", "{'[1, 4, 0, 1, 5, 0, 0, 1, 12, 0, 27, 20, 1, 0, 1, 0, 0, 0]' : 0.137573}", "{'[1, 4, 0, 1, 5, 0, 0, 1, 12, 0, 27, 20, 1, 0, 1, 0, 0, 0]' : 0.136983}", "{'[1, 4, 0, 1, 5, 0, 0, 1, 12, 0, 27, 20, 1, 0, 1, 0, 0, 0]' : 0.118752}", "{'[1, 4, 0, 1, 5, 0, 0, 1, 12, 0, 27, 20, 1, 0, 1, 0, 0, 0]' : 0.115941}", "{'[1, 4, 0, 1, 5, 0, 0, 1, 12, 0, 27, 20, 1, 0, 1, 0, 0, 0]' : 0.115805}", "{'[1, 4, 0, 1, 5, 0, 0, 1, 12, 0, 27, 20, 1, 0, 1, 0, 0, 0]' : 0.115919}", "{'[1, 4, 0, 1, 5, 0, 0, 1, 12, 0, 27, 20, 1, 0, 1, 0, 0, 0]' : 0.116086}", "{'[1, 4, 0, 1, 5, 0, 0, 1, 12, 0, 27, 20, 1, 0, 1, 0, 0, 0]' : 0.116168}", "{'[1, 4, 0, 1, 5, 0, 0, 1, 12, 0, 27, 20, 1, 0, 1, 0, 0, 0]' : 0.116216}", "{'[1, 4, 0, 1, 5, 0, 0, 1, 12, 0, 27, 20, 1, 0, 1, 0, 0, 0]' : 0.116008}", "{'[1, 4, 0, 1, 5, 0, 0, 1, 12, 0, 27, 20, 1, 0, 1, 0, 0, 0]' : 0.115973}", "{'[1, 4, 0, 1, 5, 0, 0, 1, 12, 0, 27, 20, 1, 0, 1, 0, 0, 0]' : 0.116023}", "{'[1, 4, 0, 1, 5, 0, 0, 1, 12, 0, 27, 20, 1, 0, 1, 0, 0, 0]' : 0.116013}", "{'[1, 4, 0, 1, 5, 0, 0, 1, 12, 0, 27, 20, 1, 0, 1, 0, 0, 0]' : 0.116207}", "{'[1, 4, 0, 1, 5, 0, 0, 1, 12, 0, 27, 20, 1, 0, 1, 0, 0, 0]' : 0.116249}", "{'[1, 4, 0, 1, 5, 0, 0, 1, 12, 0, 27, 20, 1, 0, 1, 0, 0, 0]' : 0.116156}", "{'[1, 4, 0, 1, 5, 0, 0, 1, 12, 0, 27, 20, 1, 0, 1, 0, 0, 0]' : 0.117219}", "{'[1, 4, 0, 1, 5, 0, 0, 1, 12, 0, 27, 20, 1, 0, 1, 0, 0, 0]' : 0.116452}", "{'[1, 4, 0, 1, 5, 0, 0, 1, 12, 0, 27, 20, 1, 0, 1, 0, 0, 0]' : 0.11607}", "{'[1, 4, 0, 1, 5, 0, 0, 1, 12, 0, 27, 20, 1, 0, 1, 0, 0, 0]' : 0.11596}", "{'[1, 4, 0, 1, 5, 0, 0, 1, 12, 0, 27, 20, 1, 0, 1, 0, 0, 0]' : 0.116122}", "{'[1, 4, 0, 1, 5, 0, 0, 1, 12, 0, 27, 20, 1, 0, 1, 0, 0, 0]' : 0.115982}", "{'[1, 4, 0, 1, 5, 0, 0, 1, 12, 0, 27, 20, 1, 0, 1, 0, 0, 0]' : 0.116171}", "{'[1, 4, 0, 1, 5, 0, 0, 1, 12, 0, 27, 20, 1, 0, 1, 0, 0, 0]' : 0.116895}", "{'[1, 4, 0, 1, 5, 0, 0, 1, 12, 0, 27, 20, 1, 0, 1, 0, 0, 0]' : 0.116005}", "{'[1, 4, 0, 1, 5, 0, 0, 1, 12, 0, 27, 20, 1, 0, 1, 0, 0, 0]' : 0.116053}", "{'[1, 4, 0, 1, 5, 0, 0, 1, 12, 0, 27, 20, 1, 0, 1, 0, 0, 0]' : 0.116258}", "{'[1, 4, 0, 1, 5, 0, 0, 1, 12, 0, 27, 20, 1, 0, 1, 0, 0, 0]' : 0.116554}", "{'[1, 4, 0, 1, 5, 0, 0, 1, 12, 0, 27, 20, 1, 0, 1, 0, 0, 0]' : 0.116416}"]
returning from 'run': {'[1, 4, 0, 1, 5, 0, 0, 1, 12, 0, 27, 20, 1, 0, 1, 0, 0, 0]': ([0.137557, 0.137573, 0.136983, 0.118752, 0.115941, 0.115805, 0.115919, 0.116086, 0.116168, 0.116216, 0.116008, 0.115973, 0.116023, 0.116013, 0.116207, 0.116249, 0.116156, 0.117219, 0.116452, 0.11607, 0.11596, 0.116122, 0.115982, 0.116171, 0.116895, 0.116005, 0.116053, 0.116258, 0.116554, 0.116416], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 4, 0, 1, 5, 0, 0, 1, 12, 0, 27, 20, 1, 0, 1, 0, 0, 0]': ([0.137557, 0.137573, 0.136983, 0.118752, 0.115941, 0.115805, 0.115919, 0.116086, 0.116168, 0.116216, 0.116008, 0.115973, 0.116023, 0.116013, 0.116207, 0.116249, 0.116156, 0.117219, 0.116452, 0.11607, 0.11596, 0.116122, 0.115982, 0.116171, 0.116895, 0.116005, 0.116053, 0.116258, 0.116554, 0.116416], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Complete design, with measurements:
     T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
154     1    2    0    5    2    1       1       1   29   4   0  21    2    0
266     4    2    0    0    6    1       0       1   20   8   0   3    0    1
419     6    0    5    6    0    3       0       1   22  24   0  28    1    0
606     6    6    0    6    5    6       1       1    3  28   0   6    0    0
654     3    1    0    2    0    3       0       1    3   0   3  26    0    0
740     6    6    0    0    0    0       1       1   15   3   1   0    0    1
879     2    6    3    2    0    6       0       0    6  26   0  17    0    2
969     0    0    1    3    2    4       0       1   23   0   2   2    1    1
1107    0    5    5    6    6    6       0       0   23   2  12   0    0    1
1186    4    1    6    0    4    0       1       1    0   0  28   0    2    0
1200    6    3    2    5    1    6       0       1   10  10  27   0    2    0
1447    6    3    0    6    3    4       0       0    2   0  29   0    0    0
1463    3    6    2    0    5    1       0       1   28  24  25   0    1    1
1613    2    3    4    1    4    2       1       1    7  29  29   0    0    0
1645    2    4    2    6    2    2       0       1    0   7  25   0    1    0
1934    6    2    4    6    6    6       1       0    8   0   8  28    1    0
1973    0    2    2    5    5    4       0       0    4   0   0   0    0    2
2050    0    0    2    6    2    0       1       0   10  25   0  26    0    0
2144    6    0    3    0    6    2       1       0    3   6  10   0    1    1
2205    0    1    2    5    0    2       1       1   29   0  28  29    0    1
2222    1    4    2    1    5    6       0       1    0   0   2  13    1    0
2244    1    6    4    2    5    2       0       0   29   2   0  25    0    0
2262    1    0    0    2    0    6       0       1    2   0  26  28    0    1
2401    0    3    6    6    6    0       1       0    4   0  11   4    0    1
2424    2    0    3    1    6    5       1       0    4   3   0  26    2    0
2598    2    6    1    2    0    2       1       0    6   0  29  16    2    0
3014    1    4    1    0    3    4       0       1    3  29   0  29    0    1
3068    6    0    6    0    2    0       0       1    9   0  21  11    0    0
3303    6    4    6    5    2    6       1       1    0   0  27   2    0    1
3501    5    5    0    0    6    6       0       0   28   0   7  13    0    0
3638    0    6    0    6    0    6       0       1   11   9   0  11    1    0
3669    6    2    0    4    4    1       0       0    1  29   0  28    0    1
3850    4    0    1    4    2    2       1       0   23   0   0  11    0    0
4057    0    0    1    2    2    1       0       0    0   0   3  11    2    0
4192    3    3    6    1    1    0       1       0    2  29  12   0    1    1
4307    3    1    5    0    0    6       0       0   27  27  18   0    0    0
4433    0    0    6    1    6    4       1       1   22   0  27  19    1    0
4447    6    6    6    5    4    0       0       1   29   0  20  28    0    2
4558    5    1    5    5    3    5       1       1   28  29   1   0    2    0
4599    1    4    0    1    5    0       0       1   12   0  27  20    1    0
     RT_K SCR VEC1 VEC2  cost_mean
154     0   1    1    1 0.19198747
266     1   1    0    0 0.15588497
419     1   0    0    1 0.11188777
606     0   1    1    0 0.19035317
654     0   1    1    1 0.21018410
740     1   0    1    0 0.12858287
879     0   0    0    0 0.14648563
969     0   1    1    0 0.11934970
1107    1   0    1    0 0.11883950
1186    0   1    1    0 0.18278590
1200    0   1    1    1 0.20919747
1447    2   0    1    0 0.17540573
1463    0   1    0    0 0.11552823
1613    1   0    1    1 0.26977280
1645    0   0    1    1 0.10427480
1934    1   0    0    0 0.10982673
1973    0   1    1    0 0.23383797
2050    1   0    1    0 0.18739630
2144    0   0    1    1 0.10572960
2205    0   0    1    0 0.25951733
2222    0   0    0    0 0.12085533
2244    0   0    0    1 0.12750063
2262    0   0    0    1 0.20316487
2401    0   1    0    1 0.16430260
2424    0   0    1    1 0.18508333
2598    0   0    0    0 0.26408617
3014    1   0    1    1 0.26714137
3068    0   0    0    1 0.19379177
3303    1   1    0    1 0.23739937
3501    2   1    0    1 0.14933797
3638    1   1    1    1 0.10889173
3669    0   0    1    0 0.23229410
3850    1   1    0    1 0.19398733
4057    0   0    0    0 0.25274933
4192    0   1    0    1 0.09320255
4307    0   1    1    0 0.16091767
4433    1   1    1    1 0.09742084
4447    0   1    1    1 0.20491487
4558    0   0    0    1 0.18429160
4599    1   0    0    0 0.11839287

Heteroscedasticity Test p-value: 0.73287188005
Regression Step:                Df  Sum Sq Mean Sq F value   Pr(>F)    
T1_I             1 0.00002 0.00002   0.029 0.869326    
T1_J             1 0.00159 0.00159   2.180 0.178085    
T1_K             1 0.00339 0.00339   4.652 0.063101 .  
T2_I             1 0.00048 0.00048   0.660 0.439931    
T2_J             1 0.00400 0.00400   5.481 0.047337 *  
T2_K             1 0.00062 0.00062   0.853 0.382637    
ACOPY_x          1 0.00209 0.00209   2.860 0.129258    
ACOPY_y          1 0.00001 0.00001   0.013 0.911117    
U1_I             1 0.00369 0.00369   5.056 0.054698 .  
U_I              1 0.00013 0.00013   0.180 0.682806    
U_J              1 0.00345 0.00345   4.726 0.061451 .  
U_K              1 0.00446 0.00446   6.110 0.038604 *  
RT_I             1 0.00227 0.00227   3.111 0.115784    
RT_J             1 0.00194 0.00194   2.665 0.141233    
RT_K             1 0.00241 0.00241   3.309 0.106404    
SCR              1 0.00015 0.00015   0.211 0.657853    
VEC1             1 0.00028 0.00028   0.389 0.550304    
VEC2             1 0.00015 0.00015   0.208 0.660317    
I(1/(1 + T1_I))  1 0.00019 0.00019   0.264 0.621142    
I(1/(1 + T1_J))  1 0.00593 0.00593   8.127 0.021456 *  
I(1/(1 + T1_K))  1 0.00480 0.00480   6.585 0.033333 *  
I(1/(1 + T2_I))  1 0.00115 0.00115   1.582 0.243967    
I(1/(1 + T2_J))  1 0.00742 0.00742  10.169 0.012826 *  
I(1/(1 + T2_K))  1 0.00376 0.00376   5.159 0.052780 .  
I(1/(1 + U1_I))  1 0.00050 0.00050   0.692 0.429637    
I(1/(1 + U_I))   1 0.00380 0.00380   5.206 0.051944 .  
I(1/(1 + U_J))   1 0.00920 0.00920  12.611 0.007496 ** 
I(1/(1 + U_K))   1 0.00179 0.00179   2.451 0.156079    
I(1/(1 + RT_I))  1 0.03447 0.03447  47.267 0.000128 ***
I(1/(1 + RT_J))  1 0.00001 0.00001   0.008 0.931897    
I(1/(1 + RT_K))  1 0.00226 0.00226   3.104 0.116112    
Residuals        8 0.00583 0.00073                     
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Predicting Best
Generating valid search space of size 4600 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Valid coordinates: 920
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Valid coordinates: 1840
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Tested coordinates: 110000
Valid coordinates: 2760
Tested coordinates: 120000
Tested coordinates: 130000
Tested coordinates: 140000
Tested coordinates: 150000
Valid coordinates: 3680
Tested coordinates: 160000
Tested coordinates: 170000
Tested coordinates: 180000
Valid coordinates: 4600
Valid/Tested configurations: 4600/187683
Generated Search Space:
NULL
Identical predictions (tol = 1e-5): 1
Getting Best from Design
Response: ['cost_mean']
Design Names:  [1] "T1_I"      "T1_J"      "T1_K"      "T2_I"      "T2_J"      "T2_K"     
 [7] "ACOPY_x"   "ACOPY_y"   "U1_I"      "U_I"       "U_J"       "U_K"      
[13] "RT_I"      "RT_J"      "RT_K"      "SCR"       "VEC1"      "VEC2"     
[19] "cost_mean"

Design Response:       cost_mean
154  0.19198747
266  0.15588497
419  0.11188777
606  0.19035317
654  0.21018410
740  0.12858287
879  0.14648563
969  0.11934970
1107 0.11883950
1186 0.18278590
1200 0.20919747
1447 0.17540573
1463 0.11552823
1613 0.26977280
1645 0.10427480
1934 0.10982673
1973 0.23383797
2050 0.18739630
2144 0.10572960
2205 0.25951733
2222 0.12085533
2244 0.12750063
2262 0.20316487
2401 0.16430260
2424 0.18508333
2598 0.26408617
3014 0.26714137
3068 0.19379177
3303 0.23739937
3501 0.14933797
3638 0.10889173
3669 0.23229410
3850 0.19398733
4057 0.25274933
4192 0.09320255
4307 0.16091767
4433 0.09742084
4447 0.20491487
4558 0.18429160
4599 0.11839287

Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Getting fixed variables
Pruning Model
Best Predicted:      T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
2426    1    0    6    6    5    5       0       0   21   8   0   3    1    0
     RT_K SCR VEC1 VEC2
2426    0   1    1    0

Best From Design: [3, 3, 6, 1, 1, 0, 1, 0, 2, 29, 12, 0, 1, 1, 0, 1, 0, 1]
Pruned Factors: ['T1_I', 'T1_J', 'T2_I', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U_I', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Fixed Factors: {'U_K': 3, 'U_J': 0, 'U1_I': 21, 'T1_K': 6, 'T2_J': 5}
Length of requested configs: 1
Result was on Database, Returning Now
Starting Point (-O3):
0.16283083333333334
Predicted Best Point:
[1, 0, 6, 6, 5, 5, 0, 0, 21, 8, 0, 3, 1, 0, 0, 1, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	25
        Max loop nest depth: 	6
        Additions: 		539
        Multiplications: 	216
        Divisions: 		0
        Logical: 		0
        Reads: 			1199
        Writes: 		263
        Comparisons:		25
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest47.exe __orio_perftest47.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest47.exe  
Program Test Output: 
{'[1, 0, 6, 6, 5, 5, 0, 0, 21, 8, 0, 3, 1, 0, 0, 1, 1, 0]' : 0.105653}
{'[1, 0, 6, 6, 5, 5, 0, 0, 21, 8, 0, 3, 1, 0, 0, 1, 1, 0]' : 0.105461}
{'[1, 0, 6, 6, 5, 5, 0, 0, 21, 8, 0, 3, 1, 0, 0, 1, 1, 0]' : 0.105753}
{'[1, 0, 6, 6, 5, 5, 0, 0, 21, 8, 0, 3, 1, 0, 0, 1, 1, 0]' : 0.099339}
{'[1, 0, 6, 6, 5, 5, 0, 0, 21, 8, 0, 3, 1, 0, 0, 1, 1, 0]' : 0.0974219}
{'[1, 0, 6, 6, 5, 5, 0, 0, 21, 8, 0, 3, 1, 0, 0, 1, 1, 0]' : 0.0974381}
{'[1, 0, 6, 6, 5, 5, 0, 0, 21, 8, 0, 3, 1, 0, 0, 1, 1, 0]' : 0.0973611}
{'[1, 0, 6, 6, 5, 5, 0, 0, 21, 8, 0, 3, 1, 0, 0, 1, 1, 0]' : 0.0972888}
{'[1, 0, 6, 6, 5, 5, 0, 0, 21, 8, 0, 3, 1, 0, 0, 1, 1, 0]' : 0.0974939}
{'[1, 0, 6, 6, 5, 5, 0, 0, 21, 8, 0, 3, 1, 0, 0, 1, 1, 0]' : 0.097466}
{'[1, 0, 6, 6, 5, 5, 0, 0, 21, 8, 0, 3, 1, 0, 0, 1, 1, 0]' : 0.0974231}
{'[1, 0, 6, 6, 5, 5, 0, 0, 21, 8, 0, 3, 1, 0, 0, 1, 1, 0]' : 0.0974491}
{'[1, 0, 6, 6, 5, 5, 0, 0, 21, 8, 0, 3, 1, 0, 0, 1, 1, 0]' : 0.097595}
{'[1, 0, 6, 6, 5, 5, 0, 0, 21, 8, 0, 3, 1, 0, 0, 1, 1, 0]' : 0.0975492}
{'[1, 0, 6, 6, 5, 5, 0, 0, 21, 8, 0, 3, 1, 0, 0, 1, 1, 0]' : 0.0975251}
{'[1, 0, 6, 6, 5, 5, 0, 0, 21, 8, 0, 3, 1, 0, 0, 1, 1, 0]' : 0.0975358}
{'[1, 0, 6, 6, 5, 5, 0, 0, 21, 8, 0, 3, 1, 0, 0, 1, 1, 0]' : 0.0974951}
{'[1, 0, 6, 6, 5, 5, 0, 0, 21, 8, 0, 3, 1, 0, 0, 1, 1, 0]' : 0.0980022}
{'[1, 0, 6, 6, 5, 5, 0, 0, 21, 8, 0, 3, 1, 0, 0, 1, 1, 0]' : 0.0975571}
{'[1, 0, 6, 6, 5, 5, 0, 0, 21, 8, 0, 3, 1, 0, 0, 1, 1, 0]' : 0.0975289}
{'[1, 0, 6, 6, 5, 5, 0, 0, 21, 8, 0, 3, 1, 0, 0, 1, 1, 0]' : 0.0974879}
{'[1, 0, 6, 6, 5, 5, 0, 0, 21, 8, 0, 3, 1, 0, 0, 1, 1, 0]' : 0.097522}
{'[1, 0, 6, 6, 5, 5, 0, 0, 21, 8, 0, 3, 1, 0, 0, 1, 1, 0]' : 0.0976641}
{'[1, 0, 6, 6, 5, 5, 0, 0, 21, 8, 0, 3, 1, 0, 0, 1, 1, 0]' : 0.0976701}
{'[1, 0, 6, 6, 5, 5, 0, 0, 21, 8, 0, 3, 1, 0, 0, 1, 1, 0]' : 0.0975749}
{'[1, 0, 6, 6, 5, 5, 0, 0, 21, 8, 0, 3, 1, 0, 0, 1, 1, 0]' : 0.097615}
{'[1, 0, 6, 6, 5, 5, 0, 0, 21, 8, 0, 3, 1, 0, 0, 1, 1, 0]' : 0.097523}
{'[1, 0, 6, 6, 5, 5, 0, 0, 21, 8, 0, 3, 1, 0, 0, 1, 1, 0]' : 0.097451}
{'[1, 0, 6, 6, 5, 5, 0, 0, 21, 8, 0, 3, 1, 0, 0, 1, 1, 0]' : 0.097548}
{'[1, 0, 6, 6, 5, 5, 0, 0, 21, 8, 0, 3, 1, 0, 0, 1, 1, 0]' : 0.097482}

out:
 ["{'[1, 0, 6, 6, 5, 5, 0, 0, 21, 8, 0, 3, 1, 0, 0, 1, 1, 0]' : 0.105653}", "{'[1, 0, 6, 6, 5, 5, 0, 0, 21, 8, 0, 3, 1, 0, 0, 1, 1, 0]' : 0.105461}", "{'[1, 0, 6, 6, 5, 5, 0, 0, 21, 8, 0, 3, 1, 0, 0, 1, 1, 0]' : 0.105753}", "{'[1, 0, 6, 6, 5, 5, 0, 0, 21, 8, 0, 3, 1, 0, 0, 1, 1, 0]' : 0.099339}", "{'[1, 0, 6, 6, 5, 5, 0, 0, 21, 8, 0, 3, 1, 0, 0, 1, 1, 0]' : 0.0974219}", "{'[1, 0, 6, 6, 5, 5, 0, 0, 21, 8, 0, 3, 1, 0, 0, 1, 1, 0]' : 0.0974381}", "{'[1, 0, 6, 6, 5, 5, 0, 0, 21, 8, 0, 3, 1, 0, 0, 1, 1, 0]' : 0.0973611}", "{'[1, 0, 6, 6, 5, 5, 0, 0, 21, 8, 0, 3, 1, 0, 0, 1, 1, 0]' : 0.0972888}", "{'[1, 0, 6, 6, 5, 5, 0, 0, 21, 8, 0, 3, 1, 0, 0, 1, 1, 0]' : 0.0974939}", "{'[1, 0, 6, 6, 5, 5, 0, 0, 21, 8, 0, 3, 1, 0, 0, 1, 1, 0]' : 0.097466}", "{'[1, 0, 6, 6, 5, 5, 0, 0, 21, 8, 0, 3, 1, 0, 0, 1, 1, 0]' : 0.0974231}", "{'[1, 0, 6, 6, 5, 5, 0, 0, 21, 8, 0, 3, 1, 0, 0, 1, 1, 0]' : 0.0974491}", "{'[1, 0, 6, 6, 5, 5, 0, 0, 21, 8, 0, 3, 1, 0, 0, 1, 1, 0]' : 0.097595}", "{'[1, 0, 6, 6, 5, 5, 0, 0, 21, 8, 0, 3, 1, 0, 0, 1, 1, 0]' : 0.0975492}", "{'[1, 0, 6, 6, 5, 5, 0, 0, 21, 8, 0, 3, 1, 0, 0, 1, 1, 0]' : 0.0975251}", "{'[1, 0, 6, 6, 5, 5, 0, 0, 21, 8, 0, 3, 1, 0, 0, 1, 1, 0]' : 0.0975358}", "{'[1, 0, 6, 6, 5, 5, 0, 0, 21, 8, 0, 3, 1, 0, 0, 1, 1, 0]' : 0.0974951}", "{'[1, 0, 6, 6, 5, 5, 0, 0, 21, 8, 0, 3, 1, 0, 0, 1, 1, 0]' : 0.0980022}", "{'[1, 0, 6, 6, 5, 5, 0, 0, 21, 8, 0, 3, 1, 0, 0, 1, 1, 0]' : 0.0975571}", "{'[1, 0, 6, 6, 5, 5, 0, 0, 21, 8, 0, 3, 1, 0, 0, 1, 1, 0]' : 0.0975289}", "{'[1, 0, 6, 6, 5, 5, 0, 0, 21, 8, 0, 3, 1, 0, 0, 1, 1, 0]' : 0.0974879}", "{'[1, 0, 6, 6, 5, 5, 0, 0, 21, 8, 0, 3, 1, 0, 0, 1, 1, 0]' : 0.097522}", "{'[1, 0, 6, 6, 5, 5, 0, 0, 21, 8, 0, 3, 1, 0, 0, 1, 1, 0]' : 0.0976641}", "{'[1, 0, 6, 6, 5, 5, 0, 0, 21, 8, 0, 3, 1, 0, 0, 1, 1, 0]' : 0.0976701}", "{'[1, 0, 6, 6, 5, 5, 0, 0, 21, 8, 0, 3, 1, 0, 0, 1, 1, 0]' : 0.0975749}", "{'[1, 0, 6, 6, 5, 5, 0, 0, 21, 8, 0, 3, 1, 0, 0, 1, 1, 0]' : 0.097615}", "{'[1, 0, 6, 6, 5, 5, 0, 0, 21, 8, 0, 3, 1, 0, 0, 1, 1, 0]' : 0.097523}", "{'[1, 0, 6, 6, 5, 5, 0, 0, 21, 8, 0, 3, 1, 0, 0, 1, 1, 0]' : 0.097451}", "{'[1, 0, 6, 6, 5, 5, 0, 0, 21, 8, 0, 3, 1, 0, 0, 1, 1, 0]' : 0.097548}", "{'[1, 0, 6, 6, 5, 5, 0, 0, 21, 8, 0, 3, 1, 0, 0, 1, 1, 0]' : 0.097482}"]
returning from 'run': {'[1, 0, 6, 6, 5, 5, 0, 0, 21, 8, 0, 3, 1, 0, 0, 1, 1, 0]': ([0.105653, 0.105461, 0.105753, 0.099339, 0.0974219, 0.0974381, 0.0973611, 0.0972888, 0.0974939, 0.097466, 0.0974231, 0.0974491, 0.097595, 0.0975492, 0.0975251, 0.0975358, 0.0974951, 0.0980022, 0.0975571, 0.0975289, 0.0974879, 0.097522, 0.0976641, 0.0976701, 0.0975749, 0.097615, 0.097523, 0.097451, 0.097548, 0.097482], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 0, 6, 6, 5, 5, 0, 0, 21, 8, 0, 3, 1, 0, 0, 1, 1, 0]': ([0.105653, 0.105461, 0.105753, 0.099339, 0.0974219, 0.0974381, 0.0973611, 0.0972888, 0.0974939, 0.097466, 0.0974231, 0.0974491, 0.097595, 0.0975492, 0.0975251, 0.0975358, 0.0974951, 0.0980022, 0.0975571, 0.0975289, 0.0974879, 0.097522, 0.0976641, 0.0976701, 0.0975749, 0.097615, 0.097523, 0.097451, 0.097548, 0.097482], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Design Best Point:
[3, 3, 6, 1, 1, 0, 1, 0, 2, 29, 12, 0, 1, 1, 0, 1, 0, 1]
Length of requested configs: 1
Result was on Database, Returning Now
Fixed Factors: {'U_K': 3, 'U_J': 0, 'U1_I': 21, 'T1_K': 6, 'T2_J': 5}
Slowdown (Design Best): 0.5723888288970659
Slowdown (Predicted Best): 0.6042824403650005
Budget: 40/180
Updating Global Best: 0.09320255
Current Best Point: 
[3, 3, 6, 1, 1, 0, 1, 0, 2, 29, 12, 0, 1, 1, 0, 1, 0, 1]
Step 1
Generating valid search space of size 3100 (does not spend evaluations)
Valid coordinates: 620
Valid coordinates: 1240
Valid coordinates: 1860
Tested coordinates: 10000
Valid coordinates: 2480
Valid coordinates: 3100
Valid/Tested configurations: 3100/16748
Generated Search Space:
NULL
Clean Info:
Removed Factors: character(0)

Removed Inverse Factors: [1] "ACOPY_x" "ACOPY_y" "SCR"     "VEC1"    "VEC2"   

New Factors: ['T1_I', 'T1_J', 'T2_I', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U_I', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
New Inverse Factors: ['T1_I', 'T1_J', 'T2_I', 'T2_K', 'U_I', 'RT_I', 'RT_J', 'RT_K']
New Fixed Factors: {'U_K': 3, 'U_J': 0, 'U1_I': 21, 'T1_K': 6, 'T2_J': 5}
Full Model:  ~ T1_I + T1_J + T2_I + T2_K + ACOPY_x + ACOPY_y + U_I + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_K)) + I(1 / (1 + U_I)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Fixed Factors: {'U_K': 3, 'U_J': 0, 'U1_I': 21, 'T1_K': 6, 'T2_J': 5}
Computing D-Optimal Design
Computing D-Optimal Design with 31 experiments
Design Formula:  ~ T1_I + T1_J + T2_I + T2_K + ACOPY_x + ACOPY_y + U_I + RT_I + RT_J + RT_K + SCR + VEC1 + VEC2 + I(1 / (1 + T1_I)) + I(1 / (1 + T1_J)) + I(1 / (1 + T2_I)) + I(1 / (1 + T2_K)) + I(1 / (1 + U_I)) + I(1 / (1 + RT_I)) + I(1 / (1 + RT_J)) + I(1 / (1 + RT_K))
Starting "optFederov" run
Using Search Space:
NULL
Data Dimensions: [1] 3100   13

     T1_I T1_J T2_I T2_K ACOPY_x ACOPY_y U_I RT_I RT_J RT_K SCR VEC1 VEC2
334     6    5    6    4       0       0  10    1    0    1   1    0    1
368     3    0    0    4       1       1  17    0    0    2   0    1    1
460     3    4    0    6       0       0  29    0    1    1   0    0    0
468     1    2    6    0       0       0  29    0    0    2   0    1    1
510     0    0    6    6       0       1  28    0    0    1   1    1    0
547     3    0    0    5       0       0   8    2    0    0   1    1    0
647     6    1    6    0       1       0   0    1    1    0   0    0    0
767     6    6    6    5       1       0   0    2    0    0   1    1    1
993     2    2    0    5       0       0  28    1    1    0   0    0    0
1021    0    2    0    0       1       0   0    0    0    0   1    0    0
1060    3    0    3    0       0       1   0    1    0    1   1    0    1
1067    1    6    5    0       0       0  26    0    2    0   1    1    0
1079    3    0    2    4       1       1  29    0    2    0   1    0    0
1090    0    3    0    5       1       1  22    1    0    1   0    1    0
1172    0    0    6    6       1       0  27    0    2    0   1    0    1
1176    2    1    2    4       1       0  27    0    1    1   1    0    1
1224    6    0    0    0       1       0  15    0    2    0   1    1    1
1275    2    4    0    6       0       1   0    0    0    0   1    1    1
1436    6    6    5    6       0       1  29    2    0    0   0    1    1
1688    0    6    5    0       1       1  20    0    1    0   1    1    1
1730    4    0    5    0       1       0  10    0    0    0   0    0    0
1994    3    6    2    6       1       0   7    1    0    1   1    1    1
2108    3    2    6    6       1       1   8    2    0    0   1    0    1
2226    6    0    6    0       0       1  21    2    0    0   1    1    1
2320    0    0    0    6       0       1   4    2    0    0   0    1    1
2385    3    4    0    0       1       0  28    0    0    2   1    0    0
2492    3    4    4    0       0       1   0    0    2    0   0    0    1
2837    0    0    1    4       0       1   0    1    1    0   1    1    0
2906    0    2    1    0       0       0   9    2    0    0   0    0    0
2932    4    6    0    4       0       0  11    0    0    0   1    0    1
3085    6    1    4    6       0       1   8    0    0    2   1    1    0

D-Efficiency Approximation: [1] 0.487

Measuring design of size 31
Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U_I', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	48
        Max loop nest depth: 	6
        Additions: 		1455
        Multiplications: 	560
        Divisions: 		0
        Logical: 		0
        Reads: 			3146
        Writes: 		677
        Comparisons:		48
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest48.exe __orio_perftest48.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest48.exe  
Program Test Output: 
{'[6, 5, 6, 6, 5, 4, 0, 0, 21, 10, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.0935669}
{'[6, 5, 6, 6, 5, 4, 0, 0, 21, 10, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.093708}
{'[6, 5, 6, 6, 5, 4, 0, 0, 21, 10, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.0932651}
{'[6, 5, 6, 6, 5, 4, 0, 0, 21, 10, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.0933399}
{'[6, 5, 6, 6, 5, 4, 0, 0, 21, 10, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.0944872}
{'[6, 5, 6, 6, 5, 4, 0, 0, 21, 10, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.093322}
{'[6, 5, 6, 6, 5, 4, 0, 0, 21, 10, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.0934238}
{'[6, 5, 6, 6, 5, 4, 0, 0, 21, 10, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.0947082}
{'[6, 5, 6, 6, 5, 4, 0, 0, 21, 10, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.0932848}
{'[6, 5, 6, 6, 5, 4, 0, 0, 21, 10, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.0935931}
{'[6, 5, 6, 6, 5, 4, 0, 0, 21, 10, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.093358}
{'[6, 5, 6, 6, 5, 4, 0, 0, 21, 10, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.0933309}
{'[6, 5, 6, 6, 5, 4, 0, 0, 21, 10, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.0932851}
{'[6, 5, 6, 6, 5, 4, 0, 0, 21, 10, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.093276}
{'[6, 5, 6, 6, 5, 4, 0, 0, 21, 10, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.0933721}
{'[6, 5, 6, 6, 5, 4, 0, 0, 21, 10, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.093411}
{'[6, 5, 6, 6, 5, 4, 0, 0, 21, 10, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.0933819}
{'[6, 5, 6, 6, 5, 4, 0, 0, 21, 10, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.0934222}
{'[6, 5, 6, 6, 5, 4, 0, 0, 21, 10, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.0935292}
{'[6, 5, 6, 6, 5, 4, 0, 0, 21, 10, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.093894}
{'[6, 5, 6, 6, 5, 4, 0, 0, 21, 10, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.0936451}
{'[6, 5, 6, 6, 5, 4, 0, 0, 21, 10, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.0934041}
{'[6, 5, 6, 6, 5, 4, 0, 0, 21, 10, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.0934801}
{'[6, 5, 6, 6, 5, 4, 0, 0, 21, 10, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.093323}
{'[6, 5, 6, 6, 5, 4, 0, 0, 21, 10, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.0932479}
{'[6, 5, 6, 6, 5, 4, 0, 0, 21, 10, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.0933669}
{'[6, 5, 6, 6, 5, 4, 0, 0, 21, 10, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.093344}
{'[6, 5, 6, 6, 5, 4, 0, 0, 21, 10, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.0933821}
{'[6, 5, 6, 6, 5, 4, 0, 0, 21, 10, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.0933189}
{'[6, 5, 6, 6, 5, 4, 0, 0, 21, 10, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.0934529}

out:
 ["{'[6, 5, 6, 6, 5, 4, 0, 0, 21, 10, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.0935669}", "{'[6, 5, 6, 6, 5, 4, 0, 0, 21, 10, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.093708}", "{'[6, 5, 6, 6, 5, 4, 0, 0, 21, 10, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.0932651}", "{'[6, 5, 6, 6, 5, 4, 0, 0, 21, 10, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.0933399}", "{'[6, 5, 6, 6, 5, 4, 0, 0, 21, 10, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.0944872}", "{'[6, 5, 6, 6, 5, 4, 0, 0, 21, 10, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.093322}", "{'[6, 5, 6, 6, 5, 4, 0, 0, 21, 10, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.0934238}", "{'[6, 5, 6, 6, 5, 4, 0, 0, 21, 10, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.0947082}", "{'[6, 5, 6, 6, 5, 4, 0, 0, 21, 10, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.0932848}", "{'[6, 5, 6, 6, 5, 4, 0, 0, 21, 10, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.0935931}", "{'[6, 5, 6, 6, 5, 4, 0, 0, 21, 10, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.093358}", "{'[6, 5, 6, 6, 5, 4, 0, 0, 21, 10, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.0933309}", "{'[6, 5, 6, 6, 5, 4, 0, 0, 21, 10, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.0932851}", "{'[6, 5, 6, 6, 5, 4, 0, 0, 21, 10, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.093276}", "{'[6, 5, 6, 6, 5, 4, 0, 0, 21, 10, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.0933721}", "{'[6, 5, 6, 6, 5, 4, 0, 0, 21, 10, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.093411}", "{'[6, 5, 6, 6, 5, 4, 0, 0, 21, 10, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.0933819}", "{'[6, 5, 6, 6, 5, 4, 0, 0, 21, 10, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.0934222}", "{'[6, 5, 6, 6, 5, 4, 0, 0, 21, 10, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.0935292}", "{'[6, 5, 6, 6, 5, 4, 0, 0, 21, 10, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.093894}", "{'[6, 5, 6, 6, 5, 4, 0, 0, 21, 10, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.0936451}", "{'[6, 5, 6, 6, 5, 4, 0, 0, 21, 10, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.0934041}", "{'[6, 5, 6, 6, 5, 4, 0, 0, 21, 10, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.0934801}", "{'[6, 5, 6, 6, 5, 4, 0, 0, 21, 10, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.093323}", "{'[6, 5, 6, 6, 5, 4, 0, 0, 21, 10, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.0932479}", "{'[6, 5, 6, 6, 5, 4, 0, 0, 21, 10, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.0933669}", "{'[6, 5, 6, 6, 5, 4, 0, 0, 21, 10, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.093344}", "{'[6, 5, 6, 6, 5, 4, 0, 0, 21, 10, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.0933821}", "{'[6, 5, 6, 6, 5, 4, 0, 0, 21, 10, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.0933189}", "{'[6, 5, 6, 6, 5, 4, 0, 0, 21, 10, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.0934529}"]
returning from 'run': {'[6, 5, 6, 6, 5, 4, 0, 0, 21, 10, 0, 3, 1, 0, 1, 1, 0, 1]': ([0.0935669, 0.093708, 0.0932651, 0.0933399, 0.0944872, 0.093322, 0.0934238, 0.0947082, 0.0932848, 0.0935931, 0.093358, 0.0933309, 0.0932851, 0.093276, 0.0933721, 0.093411, 0.0933819, 0.0934222, 0.0935292, 0.093894, 0.0936451, 0.0934041, 0.0934801, 0.093323, 0.0932479, 0.0933669, 0.093344, 0.0933821, 0.0933189, 0.0934529], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 5, 6, 6, 5, 4, 0, 0, 21, 10, 0, 3, 1, 0, 1, 1, 0, 1]': ([0.0935669, 0.093708, 0.0932651, 0.0933399, 0.0944872, 0.093322, 0.0934238, 0.0947082, 0.0932848, 0.0935931, 0.093358, 0.0933309, 0.0932851, 0.093276, 0.0933721, 0.093411, 0.0933819, 0.0934222, 0.0935292, 0.093894, 0.0936451, 0.0934041, 0.0934801, 0.093323, 0.0932479, 0.0933669, 0.093344, 0.0933821, 0.0933189, 0.0934529], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	70
        Max loop nest depth: 	4
        Additions: 		5708
        Multiplications: 	1254
        Divisions: 		0
        Logical: 		0
        Reads: 			8370
        Writes: 		873
        Comparisons:		70
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest49.exe __orio_perftest49.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest49.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest49.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest49.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest49.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	81
        Max loop nest depth: 	5
        Additions: 		4878
        Multiplications: 	1364
        Divisions: 		0
        Logical: 		0
        Reads: 			7611
        Writes: 		898
        Comparisons:		81
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest50.exe __orio_perftest50.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest50.exe  
Program Test Output: 
{'[3, 4, 6, 0, 5, 6, 0, 0, 21, 29, 0, 3, 0, 1, 1, 0, 0, 0]' : 0.199369}
{'[3, 4, 6, 0, 5, 6, 0, 0, 21, 29, 0, 3, 0, 1, 1, 0, 0, 0]' : 0.195605}
{'[3, 4, 6, 0, 5, 6, 0, 0, 21, 29, 0, 3, 0, 1, 1, 0, 0, 0]' : 0.187608}
{'[3, 4, 6, 0, 5, 6, 0, 0, 21, 29, 0, 3, 0, 1, 1, 0, 0, 0]' : 0.176079}
{'[3, 4, 6, 0, 5, 6, 0, 0, 21, 29, 0, 3, 0, 1, 1, 0, 0, 0]' : 0.177603}
{'[3, 4, 6, 0, 5, 6, 0, 0, 21, 29, 0, 3, 0, 1, 1, 0, 0, 0]' : 0.174653}
{'[3, 4, 6, 0, 5, 6, 0, 0, 21, 29, 0, 3, 0, 1, 1, 0, 0, 0]' : 0.175228}
{'[3, 4, 6, 0, 5, 6, 0, 0, 21, 29, 0, 3, 0, 1, 1, 0, 0, 0]' : 0.179595}
{'[3, 4, 6, 0, 5, 6, 0, 0, 21, 29, 0, 3, 0, 1, 1, 0, 0, 0]' : 0.176821}
{'[3, 4, 6, 0, 5, 6, 0, 0, 21, 29, 0, 3, 0, 1, 1, 0, 0, 0]' : 0.174282}
{'[3, 4, 6, 0, 5, 6, 0, 0, 21, 29, 0, 3, 0, 1, 1, 0, 0, 0]' : 0.174222}
{'[3, 4, 6, 0, 5, 6, 0, 0, 21, 29, 0, 3, 0, 1, 1, 0, 0, 0]' : 0.17374}
{'[3, 4, 6, 0, 5, 6, 0, 0, 21, 29, 0, 3, 0, 1, 1, 0, 0, 0]' : 0.170925}
{'[3, 4, 6, 0, 5, 6, 0, 0, 21, 29, 0, 3, 0, 1, 1, 0, 0, 0]' : 0.174618}
{'[3, 4, 6, 0, 5, 6, 0, 0, 21, 29, 0, 3, 0, 1, 1, 0, 0, 0]' : 0.174206}
{'[3, 4, 6, 0, 5, 6, 0, 0, 21, 29, 0, 3, 0, 1, 1, 0, 0, 0]' : 0.174414}
{'[3, 4, 6, 0, 5, 6, 0, 0, 21, 29, 0, 3, 0, 1, 1, 0, 0, 0]' : 0.175729}
{'[3, 4, 6, 0, 5, 6, 0, 0, 21, 29, 0, 3, 0, 1, 1, 0, 0, 0]' : 0.176626}
{'[3, 4, 6, 0, 5, 6, 0, 0, 21, 29, 0, 3, 0, 1, 1, 0, 0, 0]' : 0.17858}
{'[3, 4, 6, 0, 5, 6, 0, 0, 21, 29, 0, 3, 0, 1, 1, 0, 0, 0]' : 0.171265}
{'[3, 4, 6, 0, 5, 6, 0, 0, 21, 29, 0, 3, 0, 1, 1, 0, 0, 0]' : 0.176032}
{'[3, 4, 6, 0, 5, 6, 0, 0, 21, 29, 0, 3, 0, 1, 1, 0, 0, 0]' : 0.17666}
{'[3, 4, 6, 0, 5, 6, 0, 0, 21, 29, 0, 3, 0, 1, 1, 0, 0, 0]' : 0.176019}
{'[3, 4, 6, 0, 5, 6, 0, 0, 21, 29, 0, 3, 0, 1, 1, 0, 0, 0]' : 0.174164}
{'[3, 4, 6, 0, 5, 6, 0, 0, 21, 29, 0, 3, 0, 1, 1, 0, 0, 0]' : 0.174451}
{'[3, 4, 6, 0, 5, 6, 0, 0, 21, 29, 0, 3, 0, 1, 1, 0, 0, 0]' : 0.175799}
{'[3, 4, 6, 0, 5, 6, 0, 0, 21, 29, 0, 3, 0, 1, 1, 0, 0, 0]' : 0.17411}
{'[3, 4, 6, 0, 5, 6, 0, 0, 21, 29, 0, 3, 0, 1, 1, 0, 0, 0]' : 0.17432}
{'[3, 4, 6, 0, 5, 6, 0, 0, 21, 29, 0, 3, 0, 1, 1, 0, 0, 0]' : 0.177523}
{'[3, 4, 6, 0, 5, 6, 0, 0, 21, 29, 0, 3, 0, 1, 1, 0, 0, 0]' : 0.17698}

out:
 ["{'[3, 4, 6, 0, 5, 6, 0, 0, 21, 29, 0, 3, 0, 1, 1, 0, 0, 0]' : 0.199369}", "{'[3, 4, 6, 0, 5, 6, 0, 0, 21, 29, 0, 3, 0, 1, 1, 0, 0, 0]' : 0.195605}", "{'[3, 4, 6, 0, 5, 6, 0, 0, 21, 29, 0, 3, 0, 1, 1, 0, 0, 0]' : 0.187608}", "{'[3, 4, 6, 0, 5, 6, 0, 0, 21, 29, 0, 3, 0, 1, 1, 0, 0, 0]' : 0.176079}", "{'[3, 4, 6, 0, 5, 6, 0, 0, 21, 29, 0, 3, 0, 1, 1, 0, 0, 0]' : 0.177603}", "{'[3, 4, 6, 0, 5, 6, 0, 0, 21, 29, 0, 3, 0, 1, 1, 0, 0, 0]' : 0.174653}", "{'[3, 4, 6, 0, 5, 6, 0, 0, 21, 29, 0, 3, 0, 1, 1, 0, 0, 0]' : 0.175228}", "{'[3, 4, 6, 0, 5, 6, 0, 0, 21, 29, 0, 3, 0, 1, 1, 0, 0, 0]' : 0.179595}", "{'[3, 4, 6, 0, 5, 6, 0, 0, 21, 29, 0, 3, 0, 1, 1, 0, 0, 0]' : 0.176821}", "{'[3, 4, 6, 0, 5, 6, 0, 0, 21, 29, 0, 3, 0, 1, 1, 0, 0, 0]' : 0.174282}", "{'[3, 4, 6, 0, 5, 6, 0, 0, 21, 29, 0, 3, 0, 1, 1, 0, 0, 0]' : 0.174222}", "{'[3, 4, 6, 0, 5, 6, 0, 0, 21, 29, 0, 3, 0, 1, 1, 0, 0, 0]' : 0.17374}", "{'[3, 4, 6, 0, 5, 6, 0, 0, 21, 29, 0, 3, 0, 1, 1, 0, 0, 0]' : 0.170925}", "{'[3, 4, 6, 0, 5, 6, 0, 0, 21, 29, 0, 3, 0, 1, 1, 0, 0, 0]' : 0.174618}", "{'[3, 4, 6, 0, 5, 6, 0, 0, 21, 29, 0, 3, 0, 1, 1, 0, 0, 0]' : 0.174206}", "{'[3, 4, 6, 0, 5, 6, 0, 0, 21, 29, 0, 3, 0, 1, 1, 0, 0, 0]' : 0.174414}", "{'[3, 4, 6, 0, 5, 6, 0, 0, 21, 29, 0, 3, 0, 1, 1, 0, 0, 0]' : 0.175729}", "{'[3, 4, 6, 0, 5, 6, 0, 0, 21, 29, 0, 3, 0, 1, 1, 0, 0, 0]' : 0.176626}", "{'[3, 4, 6, 0, 5, 6, 0, 0, 21, 29, 0, 3, 0, 1, 1, 0, 0, 0]' : 0.17858}", "{'[3, 4, 6, 0, 5, 6, 0, 0, 21, 29, 0, 3, 0, 1, 1, 0, 0, 0]' : 0.171265}", "{'[3, 4, 6, 0, 5, 6, 0, 0, 21, 29, 0, 3, 0, 1, 1, 0, 0, 0]' : 0.176032}", "{'[3, 4, 6, 0, 5, 6, 0, 0, 21, 29, 0, 3, 0, 1, 1, 0, 0, 0]' : 0.17666}", "{'[3, 4, 6, 0, 5, 6, 0, 0, 21, 29, 0, 3, 0, 1, 1, 0, 0, 0]' : 0.176019}", "{'[3, 4, 6, 0, 5, 6, 0, 0, 21, 29, 0, 3, 0, 1, 1, 0, 0, 0]' : 0.174164}", "{'[3, 4, 6, 0, 5, 6, 0, 0, 21, 29, 0, 3, 0, 1, 1, 0, 0, 0]' : 0.174451}", "{'[3, 4, 6, 0, 5, 6, 0, 0, 21, 29, 0, 3, 0, 1, 1, 0, 0, 0]' : 0.175799}", "{'[3, 4, 6, 0, 5, 6, 0, 0, 21, 29, 0, 3, 0, 1, 1, 0, 0, 0]' : 0.17411}", "{'[3, 4, 6, 0, 5, 6, 0, 0, 21, 29, 0, 3, 0, 1, 1, 0, 0, 0]' : 0.17432}", "{'[3, 4, 6, 0, 5, 6, 0, 0, 21, 29, 0, 3, 0, 1, 1, 0, 0, 0]' : 0.177523}", "{'[3, 4, 6, 0, 5, 6, 0, 0, 21, 29, 0, 3, 0, 1, 1, 0, 0, 0]' : 0.17698}"]
returning from 'run': {'[3, 4, 6, 0, 5, 6, 0, 0, 21, 29, 0, 3, 0, 1, 1, 0, 0, 0]': ([0.199369, 0.195605, 0.187608, 0.176079, 0.177603, 0.174653, 0.175228, 0.179595, 0.176821, 0.174282, 0.174222, 0.17374, 0.170925, 0.174618, 0.174206, 0.174414, 0.175729, 0.176626, 0.17858, 0.171265, 0.176032, 0.17666, 0.176019, 0.174164, 0.174451, 0.175799, 0.17411, 0.17432, 0.177523, 0.17698], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 4, 6, 0, 5, 6, 0, 0, 21, 29, 0, 3, 0, 1, 1, 0, 0, 0]': ([0.199369, 0.195605, 0.187608, 0.176079, 0.177603, 0.174653, 0.175228, 0.179595, 0.176821, 0.174282, 0.174222, 0.17374, 0.170925, 0.174618, 0.174206, 0.174414, 0.175729, 0.176626, 0.17858, 0.171265, 0.176032, 0.17666, 0.176019, 0.174164, 0.174451, 0.175799, 0.17411, 0.17432, 0.177523, 0.17698], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	78
        Max loop nest depth: 	6
        Additions: 		8353
        Multiplications: 	2356
        Divisions: 		0
        Logical: 		0
        Reads: 			12750
        Writes: 		1488
        Comparisons:		78
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest51.exe __orio_perftest51.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest51.exe  
Program Test Output: 
{'[1, 2, 6, 6, 5, 0, 0, 0, 21, 29, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.203198}
{'[1, 2, 6, 6, 5, 0, 0, 0, 21, 29, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.203013}
{'[1, 2, 6, 6, 5, 0, 0, 0, 21, 29, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.182348}
{'[1, 2, 6, 6, 5, 0, 0, 0, 21, 29, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.16979}
{'[1, 2, 6, 6, 5, 0, 0, 0, 21, 29, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.169657}
{'[1, 2, 6, 6, 5, 0, 0, 0, 21, 29, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.169676}
{'[1, 2, 6, 6, 5, 0, 0, 0, 21, 29, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.169536}
{'[1, 2, 6, 6, 5, 0, 0, 0, 21, 29, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.169965}
{'[1, 2, 6, 6, 5, 0, 0, 0, 21, 29, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.169841}
{'[1, 2, 6, 6, 5, 0, 0, 0, 21, 29, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.16958}
{'[1, 2, 6, 6, 5, 0, 0, 0, 21, 29, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.169927}
{'[1, 2, 6, 6, 5, 0, 0, 0, 21, 29, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.169769}
{'[1, 2, 6, 6, 5, 0, 0, 0, 21, 29, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.169828}
{'[1, 2, 6, 6, 5, 0, 0, 0, 21, 29, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.169704}
{'[1, 2, 6, 6, 5, 0, 0, 0, 21, 29, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.170148}
{'[1, 2, 6, 6, 5, 0, 0, 0, 21, 29, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.169969}
{'[1, 2, 6, 6, 5, 0, 0, 0, 21, 29, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.169809}
{'[1, 2, 6, 6, 5, 0, 0, 0, 21, 29, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.169905}
{'[1, 2, 6, 6, 5, 0, 0, 0, 21, 29, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.169809}
{'[1, 2, 6, 6, 5, 0, 0, 0, 21, 29, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.169841}
{'[1, 2, 6, 6, 5, 0, 0, 0, 21, 29, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.169871}
{'[1, 2, 6, 6, 5, 0, 0, 0, 21, 29, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.169938}
{'[1, 2, 6, 6, 5, 0, 0, 0, 21, 29, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.169838}
{'[1, 2, 6, 6, 5, 0, 0, 0, 21, 29, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.169641}
{'[1, 2, 6, 6, 5, 0, 0, 0, 21, 29, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.169625}
{'[1, 2, 6, 6, 5, 0, 0, 0, 21, 29, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.17341}
{'[1, 2, 6, 6, 5, 0, 0, 0, 21, 29, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.175272}
{'[1, 2, 6, 6, 5, 0, 0, 0, 21, 29, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.171981}
{'[1, 2, 6, 6, 5, 0, 0, 0, 21, 29, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.169771}
{'[1, 2, 6, 6, 5, 0, 0, 0, 21, 29, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.169604}

out:
 ["{'[1, 2, 6, 6, 5, 0, 0, 0, 21, 29, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.203198}", "{'[1, 2, 6, 6, 5, 0, 0, 0, 21, 29, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.203013}", "{'[1, 2, 6, 6, 5, 0, 0, 0, 21, 29, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.182348}", "{'[1, 2, 6, 6, 5, 0, 0, 0, 21, 29, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.16979}", "{'[1, 2, 6, 6, 5, 0, 0, 0, 21, 29, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.169657}", "{'[1, 2, 6, 6, 5, 0, 0, 0, 21, 29, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.169676}", "{'[1, 2, 6, 6, 5, 0, 0, 0, 21, 29, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.169536}", "{'[1, 2, 6, 6, 5, 0, 0, 0, 21, 29, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.169965}", "{'[1, 2, 6, 6, 5, 0, 0, 0, 21, 29, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.169841}", "{'[1, 2, 6, 6, 5, 0, 0, 0, 21, 29, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.16958}", "{'[1, 2, 6, 6, 5, 0, 0, 0, 21, 29, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.169927}", "{'[1, 2, 6, 6, 5, 0, 0, 0, 21, 29, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.169769}", "{'[1, 2, 6, 6, 5, 0, 0, 0, 21, 29, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.169828}", "{'[1, 2, 6, 6, 5, 0, 0, 0, 21, 29, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.169704}", "{'[1, 2, 6, 6, 5, 0, 0, 0, 21, 29, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.170148}", "{'[1, 2, 6, 6, 5, 0, 0, 0, 21, 29, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.169969}", "{'[1, 2, 6, 6, 5, 0, 0, 0, 21, 29, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.169809}", "{'[1, 2, 6, 6, 5, 0, 0, 0, 21, 29, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.169905}", "{'[1, 2, 6, 6, 5, 0, 0, 0, 21, 29, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.169809}", "{'[1, 2, 6, 6, 5, 0, 0, 0, 21, 29, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.169841}", "{'[1, 2, 6, 6, 5, 0, 0, 0, 21, 29, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.169871}", "{'[1, 2, 6, 6, 5, 0, 0, 0, 21, 29, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.169938}", "{'[1, 2, 6, 6, 5, 0, 0, 0, 21, 29, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.169838}", "{'[1, 2, 6, 6, 5, 0, 0, 0, 21, 29, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.169641}", "{'[1, 2, 6, 6, 5, 0, 0, 0, 21, 29, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.169625}", "{'[1, 2, 6, 6, 5, 0, 0, 0, 21, 29, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.17341}", "{'[1, 2, 6, 6, 5, 0, 0, 0, 21, 29, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.175272}", "{'[1, 2, 6, 6, 5, 0, 0, 0, 21, 29, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.171981}", "{'[1, 2, 6, 6, 5, 0, 0, 0, 21, 29, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.169771}", "{'[1, 2, 6, 6, 5, 0, 0, 0, 21, 29, 0, 3, 0, 0, 2, 0, 1, 1]' : 0.169604}"]
returning from 'run': {'[1, 2, 6, 6, 5, 0, 0, 0, 21, 29, 0, 3, 0, 0, 2, 0, 1, 1]': ([0.203198, 0.203013, 0.182348, 0.16979, 0.169657, 0.169676, 0.169536, 0.169965, 0.169841, 0.16958, 0.169927, 0.169769, 0.169828, 0.169704, 0.170148, 0.169969, 0.169809, 0.169905, 0.169809, 0.169841, 0.169871, 0.169938, 0.169838, 0.169641, 0.169625, 0.17341, 0.175272, 0.171981, 0.169771, 0.169604], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 2, 6, 6, 5, 0, 0, 0, 21, 29, 0, 3, 0, 0, 2, 0, 1, 1]': ([0.203198, 0.203013, 0.182348, 0.16979, 0.169657, 0.169676, 0.169536, 0.169965, 0.169841, 0.16958, 0.169927, 0.169769, 0.169828, 0.169704, 0.170148, 0.169969, 0.169809, 0.169905, 0.169809, 0.169841, 0.169871, 0.169938, 0.169838, 0.169641, 0.169625, 0.17341, 0.175272, 0.171981, 0.169771, 0.169604], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	75
        Max loop nest depth: 	5
        Additions: 		1432
        Multiplications: 	540
        Divisions: 		0
        Logical: 		0
        Reads: 			3101
        Writes: 		629
        Comparisons:		75
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest52.exe __orio_perftest52.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest52.exe  
Program Test Output: 
{'[0, 0, 6, 6, 5, 6, 0, 1, 21, 28, 0, 3, 0, 0, 1, 1, 1, 0]' : 0.196912}
{'[0, 0, 6, 6, 5, 6, 0, 1, 21, 28, 0, 3, 0, 0, 1, 1, 1, 0]' : 0.198993}
{'[0, 0, 6, 6, 5, 6, 0, 1, 21, 28, 0, 3, 0, 0, 1, 1, 1, 0]' : 0.18948}
{'[0, 0, 6, 6, 5, 6, 0, 1, 21, 28, 0, 3, 0, 0, 1, 1, 1, 0]' : 0.173672}
{'[0, 0, 6, 6, 5, 6, 0, 1, 21, 28, 0, 3, 0, 0, 1, 1, 1, 0]' : 0.173684}
{'[0, 0, 6, 6, 5, 6, 0, 1, 21, 28, 0, 3, 0, 0, 1, 1, 1, 0]' : 0.173514}
{'[0, 0, 6, 6, 5, 6, 0, 1, 21, 28, 0, 3, 0, 0, 1, 1, 1, 0]' : 0.173622}
{'[0, 0, 6, 6, 5, 6, 0, 1, 21, 28, 0, 3, 0, 0, 1, 1, 1, 0]' : 0.173783}
{'[0, 0, 6, 6, 5, 6, 0, 1, 21, 28, 0, 3, 0, 0, 1, 1, 1, 0]' : 0.173805}
{'[0, 0, 6, 6, 5, 6, 0, 1, 21, 28, 0, 3, 0, 0, 1, 1, 1, 0]' : 0.173547}
{'[0, 0, 6, 6, 5, 6, 0, 1, 21, 28, 0, 3, 0, 0, 1, 1, 1, 0]' : 0.174009}
{'[0, 0, 6, 6, 5, 6, 0, 1, 21, 28, 0, 3, 0, 0, 1, 1, 1, 0]' : 0.17364}
{'[0, 0, 6, 6, 5, 6, 0, 1, 21, 28, 0, 3, 0, 0, 1, 1, 1, 0]' : 0.173885}
{'[0, 0, 6, 6, 5, 6, 0, 1, 21, 28, 0, 3, 0, 0, 1, 1, 1, 0]' : 0.173748}
{'[0, 0, 6, 6, 5, 6, 0, 1, 21, 28, 0, 3, 0, 0, 1, 1, 1, 0]' : 0.173559}
{'[0, 0, 6, 6, 5, 6, 0, 1, 21, 28, 0, 3, 0, 0, 1, 1, 1, 0]' : 0.173443}
{'[0, 0, 6, 6, 5, 6, 0, 1, 21, 28, 0, 3, 0, 0, 1, 1, 1, 0]' : 0.174016}
{'[0, 0, 6, 6, 5, 6, 0, 1, 21, 28, 0, 3, 0, 0, 1, 1, 1, 0]' : 0.173731}
{'[0, 0, 6, 6, 5, 6, 0, 1, 21, 28, 0, 3, 0, 0, 1, 1, 1, 0]' : 0.173626}
{'[0, 0, 6, 6, 5, 6, 0, 1, 21, 28, 0, 3, 0, 0, 1, 1, 1, 0]' : 0.173651}
{'[0, 0, 6, 6, 5, 6, 0, 1, 21, 28, 0, 3, 0, 0, 1, 1, 1, 0]' : 0.173594}
{'[0, 0, 6, 6, 5, 6, 0, 1, 21, 28, 0, 3, 0, 0, 1, 1, 1, 0]' : 0.173392}
{'[0, 0, 6, 6, 5, 6, 0, 1, 21, 28, 0, 3, 0, 0, 1, 1, 1, 0]' : 0.173765}
{'[0, 0, 6, 6, 5, 6, 0, 1, 21, 28, 0, 3, 0, 0, 1, 1, 1, 0]' : 0.174781}
{'[0, 0, 6, 6, 5, 6, 0, 1, 21, 28, 0, 3, 0, 0, 1, 1, 1, 0]' : 0.173609}
{'[0, 0, 6, 6, 5, 6, 0, 1, 21, 28, 0, 3, 0, 0, 1, 1, 1, 0]' : 0.173746}
{'[0, 0, 6, 6, 5, 6, 0, 1, 21, 28, 0, 3, 0, 0, 1, 1, 1, 0]' : 0.17387}
{'[0, 0, 6, 6, 5, 6, 0, 1, 21, 28, 0, 3, 0, 0, 1, 1, 1, 0]' : 0.1736}
{'[0, 0, 6, 6, 5, 6, 0, 1, 21, 28, 0, 3, 0, 0, 1, 1, 1, 0]' : 0.173479}
{'[0, 0, 6, 6, 5, 6, 0, 1, 21, 28, 0, 3, 0, 0, 1, 1, 1, 0]' : 0.174269}

out:
 ["{'[0, 0, 6, 6, 5, 6, 0, 1, 21, 28, 0, 3, 0, 0, 1, 1, 1, 0]' : 0.196912}", "{'[0, 0, 6, 6, 5, 6, 0, 1, 21, 28, 0, 3, 0, 0, 1, 1, 1, 0]' : 0.198993}", "{'[0, 0, 6, 6, 5, 6, 0, 1, 21, 28, 0, 3, 0, 0, 1, 1, 1, 0]' : 0.18948}", "{'[0, 0, 6, 6, 5, 6, 0, 1, 21, 28, 0, 3, 0, 0, 1, 1, 1, 0]' : 0.173672}", "{'[0, 0, 6, 6, 5, 6, 0, 1, 21, 28, 0, 3, 0, 0, 1, 1, 1, 0]' : 0.173684}", "{'[0, 0, 6, 6, 5, 6, 0, 1, 21, 28, 0, 3, 0, 0, 1, 1, 1, 0]' : 0.173514}", "{'[0, 0, 6, 6, 5, 6, 0, 1, 21, 28, 0, 3, 0, 0, 1, 1, 1, 0]' : 0.173622}", "{'[0, 0, 6, 6, 5, 6, 0, 1, 21, 28, 0, 3, 0, 0, 1, 1, 1, 0]' : 0.173783}", "{'[0, 0, 6, 6, 5, 6, 0, 1, 21, 28, 0, 3, 0, 0, 1, 1, 1, 0]' : 0.173805}", "{'[0, 0, 6, 6, 5, 6, 0, 1, 21, 28, 0, 3, 0, 0, 1, 1, 1, 0]' : 0.173547}", "{'[0, 0, 6, 6, 5, 6, 0, 1, 21, 28, 0, 3, 0, 0, 1, 1, 1, 0]' : 0.174009}", "{'[0, 0, 6, 6, 5, 6, 0, 1, 21, 28, 0, 3, 0, 0, 1, 1, 1, 0]' : 0.17364}", "{'[0, 0, 6, 6, 5, 6, 0, 1, 21, 28, 0, 3, 0, 0, 1, 1, 1, 0]' : 0.173885}", "{'[0, 0, 6, 6, 5, 6, 0, 1, 21, 28, 0, 3, 0, 0, 1, 1, 1, 0]' : 0.173748}", "{'[0, 0, 6, 6, 5, 6, 0, 1, 21, 28, 0, 3, 0, 0, 1, 1, 1, 0]' : 0.173559}", "{'[0, 0, 6, 6, 5, 6, 0, 1, 21, 28, 0, 3, 0, 0, 1, 1, 1, 0]' : 0.173443}", "{'[0, 0, 6, 6, 5, 6, 0, 1, 21, 28, 0, 3, 0, 0, 1, 1, 1, 0]' : 0.174016}", "{'[0, 0, 6, 6, 5, 6, 0, 1, 21, 28, 0, 3, 0, 0, 1, 1, 1, 0]' : 0.173731}", "{'[0, 0, 6, 6, 5, 6, 0, 1, 21, 28, 0, 3, 0, 0, 1, 1, 1, 0]' : 0.173626}", "{'[0, 0, 6, 6, 5, 6, 0, 1, 21, 28, 0, 3, 0, 0, 1, 1, 1, 0]' : 0.173651}", "{'[0, 0, 6, 6, 5, 6, 0, 1, 21, 28, 0, 3, 0, 0, 1, 1, 1, 0]' : 0.173594}", "{'[0, 0, 6, 6, 5, 6, 0, 1, 21, 28, 0, 3, 0, 0, 1, 1, 1, 0]' : 0.173392}", "{'[0, 0, 6, 6, 5, 6, 0, 1, 21, 28, 0, 3, 0, 0, 1, 1, 1, 0]' : 0.173765}", "{'[0, 0, 6, 6, 5, 6, 0, 1, 21, 28, 0, 3, 0, 0, 1, 1, 1, 0]' : 0.174781}", "{'[0, 0, 6, 6, 5, 6, 0, 1, 21, 28, 0, 3, 0, 0, 1, 1, 1, 0]' : 0.173609}", "{'[0, 0, 6, 6, 5, 6, 0, 1, 21, 28, 0, 3, 0, 0, 1, 1, 1, 0]' : 0.173746}", "{'[0, 0, 6, 6, 5, 6, 0, 1, 21, 28, 0, 3, 0, 0, 1, 1, 1, 0]' : 0.17387}", "{'[0, 0, 6, 6, 5, 6, 0, 1, 21, 28, 0, 3, 0, 0, 1, 1, 1, 0]' : 0.1736}", "{'[0, 0, 6, 6, 5, 6, 0, 1, 21, 28, 0, 3, 0, 0, 1, 1, 1, 0]' : 0.173479}", "{'[0, 0, 6, 6, 5, 6, 0, 1, 21, 28, 0, 3, 0, 0, 1, 1, 1, 0]' : 0.174269}"]
returning from 'run': {'[0, 0, 6, 6, 5, 6, 0, 1, 21, 28, 0, 3, 0, 0, 1, 1, 1, 0]': ([0.196912, 0.198993, 0.18948, 0.173672, 0.173684, 0.173514, 0.173622, 0.173783, 0.173805, 0.173547, 0.174009, 0.17364, 0.173885, 0.173748, 0.173559, 0.173443, 0.174016, 0.173731, 0.173626, 0.173651, 0.173594, 0.173392, 0.173765, 0.174781, 0.173609, 0.173746, 0.17387, 0.1736, 0.173479, 0.174269], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 6, 6, 5, 6, 0, 1, 21, 28, 0, 3, 0, 0, 1, 1, 1, 0]': ([0.196912, 0.198993, 0.18948, 0.173672, 0.173684, 0.173514, 0.173622, 0.173783, 0.173805, 0.173547, 0.174009, 0.17364, 0.173885, 0.173748, 0.173559, 0.173443, 0.174016, 0.173731, 0.173626, 0.173651, 0.173594, 0.173392, 0.173765, 0.174781, 0.173609, 0.173746, 0.17387, 0.1736, 0.173479, 0.174269], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	5
        Additions: 		1088
        Multiplications: 	504
        Divisions: 		0
        Logical: 		0
        Reads: 			2344
        Writes: 		453
        Comparisons:		24
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest53.exe __orio_perftest53.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest53.exe  
Program Test Output: 
{'[3, 0, 6, 0, 5, 5, 0, 0, 21, 8, 0, 3, 2, 0, 0, 1, 1, 0]' : 0.147845}
{'[3, 0, 6, 0, 5, 5, 0, 0, 21, 8, 0, 3, 2, 0, 0, 1, 1, 0]' : 0.147774}
{'[3, 0, 6, 0, 5, 5, 0, 0, 21, 8, 0, 3, 2, 0, 0, 1, 1, 0]' : 0.146911}
{'[3, 0, 6, 0, 5, 5, 0, 0, 21, 8, 0, 3, 2, 0, 0, 1, 1, 0]' : 0.14771}
{'[3, 0, 6, 0, 5, 5, 0, 0, 21, 8, 0, 3, 2, 0, 0, 1, 1, 0]' : 0.146458}
{'[3, 0, 6, 0, 5, 5, 0, 0, 21, 8, 0, 3, 2, 0, 0, 1, 1, 0]' : 0.147208}
{'[3, 0, 6, 0, 5, 5, 0, 0, 21, 8, 0, 3, 2, 0, 0, 1, 1, 0]' : 0.146999}
{'[3, 0, 6, 0, 5, 5, 0, 0, 21, 8, 0, 3, 2, 0, 0, 1, 1, 0]' : 0.147336}
{'[3, 0, 6, 0, 5, 5, 0, 0, 21, 8, 0, 3, 2, 0, 0, 1, 1, 0]' : 0.14724}
{'[3, 0, 6, 0, 5, 5, 0, 0, 21, 8, 0, 3, 2, 0, 0, 1, 1, 0]' : 0.146506}
{'[3, 0, 6, 0, 5, 5, 0, 0, 21, 8, 0, 3, 2, 0, 0, 1, 1, 0]' : 0.147484}
{'[3, 0, 6, 0, 5, 5, 0, 0, 21, 8, 0, 3, 2, 0, 0, 1, 1, 0]' : 0.146801}
{'[3, 0, 6, 0, 5, 5, 0, 0, 21, 8, 0, 3, 2, 0, 0, 1, 1, 0]' : 0.146863}
{'[3, 0, 6, 0, 5, 5, 0, 0, 21, 8, 0, 3, 2, 0, 0, 1, 1, 0]' : 0.146876}
{'[3, 0, 6, 0, 5, 5, 0, 0, 21, 8, 0, 3, 2, 0, 0, 1, 1, 0]' : 0.146779}
{'[3, 0, 6, 0, 5, 5, 0, 0, 21, 8, 0, 3, 2, 0, 0, 1, 1, 0]' : 0.147629}
{'[3, 0, 6, 0, 5, 5, 0, 0, 21, 8, 0, 3, 2, 0, 0, 1, 1, 0]' : 0.146732}
{'[3, 0, 6, 0, 5, 5, 0, 0, 21, 8, 0, 3, 2, 0, 0, 1, 1, 0]' : 0.147368}
{'[3, 0, 6, 0, 5, 5, 0, 0, 21, 8, 0, 3, 2, 0, 0, 1, 1, 0]' : 0.147824}
{'[3, 0, 6, 0, 5, 5, 0, 0, 21, 8, 0, 3, 2, 0, 0, 1, 1, 0]' : 0.146561}
{'[3, 0, 6, 0, 5, 5, 0, 0, 21, 8, 0, 3, 2, 0, 0, 1, 1, 0]' : 0.146585}
{'[3, 0, 6, 0, 5, 5, 0, 0, 21, 8, 0, 3, 2, 0, 0, 1, 1, 0]' : 0.146544}
{'[3, 0, 6, 0, 5, 5, 0, 0, 21, 8, 0, 3, 2, 0, 0, 1, 1, 0]' : 0.147157}
{'[3, 0, 6, 0, 5, 5, 0, 0, 21, 8, 0, 3, 2, 0, 0, 1, 1, 0]' : 0.146885}
{'[3, 0, 6, 0, 5, 5, 0, 0, 21, 8, 0, 3, 2, 0, 0, 1, 1, 0]' : 0.146973}
{'[3, 0, 6, 0, 5, 5, 0, 0, 21, 8, 0, 3, 2, 0, 0, 1, 1, 0]' : 0.147323}
{'[3, 0, 6, 0, 5, 5, 0, 0, 21, 8, 0, 3, 2, 0, 0, 1, 1, 0]' : 0.147188}
{'[3, 0, 6, 0, 5, 5, 0, 0, 21, 8, 0, 3, 2, 0, 0, 1, 1, 0]' : 0.14731}
{'[3, 0, 6, 0, 5, 5, 0, 0, 21, 8, 0, 3, 2, 0, 0, 1, 1, 0]' : 0.146932}
{'[3, 0, 6, 0, 5, 5, 0, 0, 21, 8, 0, 3, 2, 0, 0, 1, 1, 0]' : 0.146772}

out:
 ["{'[3, 0, 6, 0, 5, 5, 0, 0, 21, 8, 0, 3, 2, 0, 0, 1, 1, 0]' : 0.147845}", "{'[3, 0, 6, 0, 5, 5, 0, 0, 21, 8, 0, 3, 2, 0, 0, 1, 1, 0]' : 0.147774}", "{'[3, 0, 6, 0, 5, 5, 0, 0, 21, 8, 0, 3, 2, 0, 0, 1, 1, 0]' : 0.146911}", "{'[3, 0, 6, 0, 5, 5, 0, 0, 21, 8, 0, 3, 2, 0, 0, 1, 1, 0]' : 0.14771}", "{'[3, 0, 6, 0, 5, 5, 0, 0, 21, 8, 0, 3, 2, 0, 0, 1, 1, 0]' : 0.146458}", "{'[3, 0, 6, 0, 5, 5, 0, 0, 21, 8, 0, 3, 2, 0, 0, 1, 1, 0]' : 0.147208}", "{'[3, 0, 6, 0, 5, 5, 0, 0, 21, 8, 0, 3, 2, 0, 0, 1, 1, 0]' : 0.146999}", "{'[3, 0, 6, 0, 5, 5, 0, 0, 21, 8, 0, 3, 2, 0, 0, 1, 1, 0]' : 0.147336}", "{'[3, 0, 6, 0, 5, 5, 0, 0, 21, 8, 0, 3, 2, 0, 0, 1, 1, 0]' : 0.14724}", "{'[3, 0, 6, 0, 5, 5, 0, 0, 21, 8, 0, 3, 2, 0, 0, 1, 1, 0]' : 0.146506}", "{'[3, 0, 6, 0, 5, 5, 0, 0, 21, 8, 0, 3, 2, 0, 0, 1, 1, 0]' : 0.147484}", "{'[3, 0, 6, 0, 5, 5, 0, 0, 21, 8, 0, 3, 2, 0, 0, 1, 1, 0]' : 0.146801}", "{'[3, 0, 6, 0, 5, 5, 0, 0, 21, 8, 0, 3, 2, 0, 0, 1, 1, 0]' : 0.146863}", "{'[3, 0, 6, 0, 5, 5, 0, 0, 21, 8, 0, 3, 2, 0, 0, 1, 1, 0]' : 0.146876}", "{'[3, 0, 6, 0, 5, 5, 0, 0, 21, 8, 0, 3, 2, 0, 0, 1, 1, 0]' : 0.146779}", "{'[3, 0, 6, 0, 5, 5, 0, 0, 21, 8, 0, 3, 2, 0, 0, 1, 1, 0]' : 0.147629}", "{'[3, 0, 6, 0, 5, 5, 0, 0, 21, 8, 0, 3, 2, 0, 0, 1, 1, 0]' : 0.146732}", "{'[3, 0, 6, 0, 5, 5, 0, 0, 21, 8, 0, 3, 2, 0, 0, 1, 1, 0]' : 0.147368}", "{'[3, 0, 6, 0, 5, 5, 0, 0, 21, 8, 0, 3, 2, 0, 0, 1, 1, 0]' : 0.147824}", "{'[3, 0, 6, 0, 5, 5, 0, 0, 21, 8, 0, 3, 2, 0, 0, 1, 1, 0]' : 0.146561}", "{'[3, 0, 6, 0, 5, 5, 0, 0, 21, 8, 0, 3, 2, 0, 0, 1, 1, 0]' : 0.146585}", "{'[3, 0, 6, 0, 5, 5, 0, 0, 21, 8, 0, 3, 2, 0, 0, 1, 1, 0]' : 0.146544}", "{'[3, 0, 6, 0, 5, 5, 0, 0, 21, 8, 0, 3, 2, 0, 0, 1, 1, 0]' : 0.147157}", "{'[3, 0, 6, 0, 5, 5, 0, 0, 21, 8, 0, 3, 2, 0, 0, 1, 1, 0]' : 0.146885}", "{'[3, 0, 6, 0, 5, 5, 0, 0, 21, 8, 0, 3, 2, 0, 0, 1, 1, 0]' : 0.146973}", "{'[3, 0, 6, 0, 5, 5, 0, 0, 21, 8, 0, 3, 2, 0, 0, 1, 1, 0]' : 0.147323}", "{'[3, 0, 6, 0, 5, 5, 0, 0, 21, 8, 0, 3, 2, 0, 0, 1, 1, 0]' : 0.147188}", "{'[3, 0, 6, 0, 5, 5, 0, 0, 21, 8, 0, 3, 2, 0, 0, 1, 1, 0]' : 0.14731}", "{'[3, 0, 6, 0, 5, 5, 0, 0, 21, 8, 0, 3, 2, 0, 0, 1, 1, 0]' : 0.146932}", "{'[3, 0, 6, 0, 5, 5, 0, 0, 21, 8, 0, 3, 2, 0, 0, 1, 1, 0]' : 0.146772}"]
returning from 'run': {'[3, 0, 6, 0, 5, 5, 0, 0, 21, 8, 0, 3, 2, 0, 0, 1, 1, 0]': ([0.147845, 0.147774, 0.146911, 0.14771, 0.146458, 0.147208, 0.146999, 0.147336, 0.14724, 0.146506, 0.147484, 0.146801, 0.146863, 0.146876, 0.146779, 0.147629, 0.146732, 0.147368, 0.147824, 0.146561, 0.146585, 0.146544, 0.147157, 0.146885, 0.146973, 0.147323, 0.147188, 0.14731, 0.146932, 0.146772], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 0, 6, 0, 5, 5, 0, 0, 21, 8, 0, 3, 2, 0, 0, 1, 1, 0]': ([0.147845, 0.147774, 0.146911, 0.14771, 0.146458, 0.147208, 0.146999, 0.147336, 0.14724, 0.146506, 0.147484, 0.146801, 0.146863, 0.146876, 0.146779, 0.147629, 0.146732, 0.147368, 0.147824, 0.146561, 0.146585, 0.146544, 0.147157, 0.146885, 0.146973, 0.147323, 0.147188, 0.14731, 0.146932, 0.146772], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	6
        Additions: 		853
        Multiplications: 	234
        Divisions: 		0
        Logical: 		0
        Reads: 			1438
        Writes: 		184
        Comparisons:		20
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest54.exe __orio_perftest54.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest54.exe  
Program Test Output: 
{'[6, 1, 6, 6, 5, 0, 1, 0, 21, 0, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.133883}
{'[6, 1, 6, 6, 5, 0, 1, 0, 21, 0, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.133884}
{'[6, 1, 6, 6, 5, 0, 1, 0, 21, 0, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.134077}
{'[6, 1, 6, 6, 5, 0, 1, 0, 21, 0, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.133786}
{'[6, 1, 6, 6, 5, 0, 1, 0, 21, 0, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.129769}
{'[6, 1, 6, 6, 5, 0, 1, 0, 21, 0, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.112663}
{'[6, 1, 6, 6, 5, 0, 1, 0, 21, 0, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.112654}
{'[6, 1, 6, 6, 5, 0, 1, 0, 21, 0, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.112457}
{'[6, 1, 6, 6, 5, 0, 1, 0, 21, 0, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.112809}
{'[6, 1, 6, 6, 5, 0, 1, 0, 21, 0, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.11248}
{'[6, 1, 6, 6, 5, 0, 1, 0, 21, 0, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.112757}
{'[6, 1, 6, 6, 5, 0, 1, 0, 21, 0, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.112491}
{'[6, 1, 6, 6, 5, 0, 1, 0, 21, 0, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.113446}
{'[6, 1, 6, 6, 5, 0, 1, 0, 21, 0, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.112689}
{'[6, 1, 6, 6, 5, 0, 1, 0, 21, 0, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.112708}
{'[6, 1, 6, 6, 5, 0, 1, 0, 21, 0, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.112527}
{'[6, 1, 6, 6, 5, 0, 1, 0, 21, 0, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.112733}
{'[6, 1, 6, 6, 5, 0, 1, 0, 21, 0, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.112468}
{'[6, 1, 6, 6, 5, 0, 1, 0, 21, 0, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.112715}
{'[6, 1, 6, 6, 5, 0, 1, 0, 21, 0, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.112541}
{'[6, 1, 6, 6, 5, 0, 1, 0, 21, 0, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.11268}
{'[6, 1, 6, 6, 5, 0, 1, 0, 21, 0, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.112721}
{'[6, 1, 6, 6, 5, 0, 1, 0, 21, 0, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.113367}
{'[6, 1, 6, 6, 5, 0, 1, 0, 21, 0, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.112509}
{'[6, 1, 6, 6, 5, 0, 1, 0, 21, 0, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.112816}
{'[6, 1, 6, 6, 5, 0, 1, 0, 21, 0, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.112668}
{'[6, 1, 6, 6, 5, 0, 1, 0, 21, 0, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.112654}
{'[6, 1, 6, 6, 5, 0, 1, 0, 21, 0, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.112504}
{'[6, 1, 6, 6, 5, 0, 1, 0, 21, 0, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.11273}
{'[6, 1, 6, 6, 5, 0, 1, 0, 21, 0, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.112573}

out:
 ["{'[6, 1, 6, 6, 5, 0, 1, 0, 21, 0, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.133883}", "{'[6, 1, 6, 6, 5, 0, 1, 0, 21, 0, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.133884}", "{'[6, 1, 6, 6, 5, 0, 1, 0, 21, 0, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.134077}", "{'[6, 1, 6, 6, 5, 0, 1, 0, 21, 0, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.133786}", "{'[6, 1, 6, 6, 5, 0, 1, 0, 21, 0, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.129769}", "{'[6, 1, 6, 6, 5, 0, 1, 0, 21, 0, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.112663}", "{'[6, 1, 6, 6, 5, 0, 1, 0, 21, 0, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.112654}", "{'[6, 1, 6, 6, 5, 0, 1, 0, 21, 0, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.112457}", "{'[6, 1, 6, 6, 5, 0, 1, 0, 21, 0, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.112809}", "{'[6, 1, 6, 6, 5, 0, 1, 0, 21, 0, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.11248}", "{'[6, 1, 6, 6, 5, 0, 1, 0, 21, 0, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.112757}", "{'[6, 1, 6, 6, 5, 0, 1, 0, 21, 0, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.112491}", "{'[6, 1, 6, 6, 5, 0, 1, 0, 21, 0, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.113446}", "{'[6, 1, 6, 6, 5, 0, 1, 0, 21, 0, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.112689}", "{'[6, 1, 6, 6, 5, 0, 1, 0, 21, 0, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.112708}", "{'[6, 1, 6, 6, 5, 0, 1, 0, 21, 0, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.112527}", "{'[6, 1, 6, 6, 5, 0, 1, 0, 21, 0, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.112733}", "{'[6, 1, 6, 6, 5, 0, 1, 0, 21, 0, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.112468}", "{'[6, 1, 6, 6, 5, 0, 1, 0, 21, 0, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.112715}", "{'[6, 1, 6, 6, 5, 0, 1, 0, 21, 0, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.112541}", "{'[6, 1, 6, 6, 5, 0, 1, 0, 21, 0, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.11268}", "{'[6, 1, 6, 6, 5, 0, 1, 0, 21, 0, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.112721}", "{'[6, 1, 6, 6, 5, 0, 1, 0, 21, 0, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.113367}", "{'[6, 1, 6, 6, 5, 0, 1, 0, 21, 0, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.112509}", "{'[6, 1, 6, 6, 5, 0, 1, 0, 21, 0, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.112816}", "{'[6, 1, 6, 6, 5, 0, 1, 0, 21, 0, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.112668}", "{'[6, 1, 6, 6, 5, 0, 1, 0, 21, 0, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.112654}", "{'[6, 1, 6, 6, 5, 0, 1, 0, 21, 0, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.112504}", "{'[6, 1, 6, 6, 5, 0, 1, 0, 21, 0, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.11273}", "{'[6, 1, 6, 6, 5, 0, 1, 0, 21, 0, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.112573}"]
returning from 'run': {'[6, 1, 6, 6, 5, 0, 1, 0, 21, 0, 0, 3, 1, 1, 0, 0, 0, 0]': ([0.133883, 0.133884, 0.134077, 0.133786, 0.129769, 0.112663, 0.112654, 0.112457, 0.112809, 0.11248, 0.112757, 0.112491, 0.113446, 0.112689, 0.112708, 0.112527, 0.112733, 0.112468, 0.112715, 0.112541, 0.11268, 0.112721, 0.113367, 0.112509, 0.112816, 0.112668, 0.112654, 0.112504, 0.11273, 0.112573], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 1, 6, 6, 5, 0, 1, 0, 21, 0, 0, 3, 1, 1, 0, 0, 0, 0]': ([0.133883, 0.133884, 0.134077, 0.133786, 0.129769, 0.112663, 0.112654, 0.112457, 0.112809, 0.11248, 0.112757, 0.112491, 0.113446, 0.112689, 0.112708, 0.112527, 0.112733, 0.112468, 0.112715, 0.112541, 0.11268, 0.112721, 0.113367, 0.112509, 0.112816, 0.112668, 0.112654, 0.112504, 0.11273, 0.112573], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	6
        Additions: 		863
        Multiplications: 	396
        Divisions: 		0
        Logical: 		0
        Reads: 			1880
        Writes: 		367
        Comparisons:		22
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest55.exe __orio_perftest55.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest55.exe  
Program Test Output: 
{'[6, 6, 6, 6, 5, 5, 1, 0, 21, 0, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.157162}
{'[6, 6, 6, 6, 5, 5, 1, 0, 21, 0, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.157342}
{'[6, 6, 6, 6, 5, 5, 1, 0, 21, 0, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.157367}
{'[6, 6, 6, 6, 5, 5, 1, 0, 21, 0, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.141352}
{'[6, 6, 6, 6, 5, 5, 1, 0, 21, 0, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.139457}
{'[6, 6, 6, 6, 5, 5, 1, 0, 21, 0, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.139104}
{'[6, 6, 6, 6, 5, 5, 1, 0, 21, 0, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138843}
{'[6, 6, 6, 6, 5, 5, 1, 0, 21, 0, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.139124}
{'[6, 6, 6, 6, 5, 5, 1, 0, 21, 0, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.139412}
{'[6, 6, 6, 6, 5, 5, 1, 0, 21, 0, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138877}
{'[6, 6, 6, 6, 5, 5, 1, 0, 21, 0, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138842}
{'[6, 6, 6, 6, 5, 5, 1, 0, 21, 0, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138988}
{'[6, 6, 6, 6, 5, 5, 1, 0, 21, 0, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.139367}
{'[6, 6, 6, 6, 5, 5, 1, 0, 21, 0, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.13909}
{'[6, 6, 6, 6, 5, 5, 1, 0, 21, 0, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.139406}
{'[6, 6, 6, 6, 5, 5, 1, 0, 21, 0, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.13928}
{'[6, 6, 6, 6, 5, 5, 1, 0, 21, 0, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.139356}
{'[6, 6, 6, 6, 5, 5, 1, 0, 21, 0, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.1391}
{'[6, 6, 6, 6, 5, 5, 1, 0, 21, 0, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.139112}
{'[6, 6, 6, 6, 5, 5, 1, 0, 21, 0, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.13913}
{'[6, 6, 6, 6, 5, 5, 1, 0, 21, 0, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.139262}
{'[6, 6, 6, 6, 5, 5, 1, 0, 21, 0, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.139077}
{'[6, 6, 6, 6, 5, 5, 1, 0, 21, 0, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.139818}
{'[6, 6, 6, 6, 5, 5, 1, 0, 21, 0, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.139146}
{'[6, 6, 6, 6, 5, 5, 1, 0, 21, 0, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.139241}
{'[6, 6, 6, 6, 5, 5, 1, 0, 21, 0, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.139255}
{'[6, 6, 6, 6, 5, 5, 1, 0, 21, 0, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.13913}
{'[6, 6, 6, 6, 5, 5, 1, 0, 21, 0, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.139106}
{'[6, 6, 6, 6, 5, 5, 1, 0, 21, 0, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.139658}
{'[6, 6, 6, 6, 5, 5, 1, 0, 21, 0, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.139295}

out:
 ["{'[6, 6, 6, 6, 5, 5, 1, 0, 21, 0, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.157162}", "{'[6, 6, 6, 6, 5, 5, 1, 0, 21, 0, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.157342}", "{'[6, 6, 6, 6, 5, 5, 1, 0, 21, 0, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.157367}", "{'[6, 6, 6, 6, 5, 5, 1, 0, 21, 0, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.141352}", "{'[6, 6, 6, 6, 5, 5, 1, 0, 21, 0, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.139457}", "{'[6, 6, 6, 6, 5, 5, 1, 0, 21, 0, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.139104}", "{'[6, 6, 6, 6, 5, 5, 1, 0, 21, 0, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138843}", "{'[6, 6, 6, 6, 5, 5, 1, 0, 21, 0, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.139124}", "{'[6, 6, 6, 6, 5, 5, 1, 0, 21, 0, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.139412}", "{'[6, 6, 6, 6, 5, 5, 1, 0, 21, 0, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138877}", "{'[6, 6, 6, 6, 5, 5, 1, 0, 21, 0, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138842}", "{'[6, 6, 6, 6, 5, 5, 1, 0, 21, 0, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138988}", "{'[6, 6, 6, 6, 5, 5, 1, 0, 21, 0, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.139367}", "{'[6, 6, 6, 6, 5, 5, 1, 0, 21, 0, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.13909}", "{'[6, 6, 6, 6, 5, 5, 1, 0, 21, 0, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.139406}", "{'[6, 6, 6, 6, 5, 5, 1, 0, 21, 0, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.13928}", "{'[6, 6, 6, 6, 5, 5, 1, 0, 21, 0, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.139356}", "{'[6, 6, 6, 6, 5, 5, 1, 0, 21, 0, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.1391}", "{'[6, 6, 6, 6, 5, 5, 1, 0, 21, 0, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.139112}", "{'[6, 6, 6, 6, 5, 5, 1, 0, 21, 0, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.13913}", "{'[6, 6, 6, 6, 5, 5, 1, 0, 21, 0, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.139262}", "{'[6, 6, 6, 6, 5, 5, 1, 0, 21, 0, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.139077}", "{'[6, 6, 6, 6, 5, 5, 1, 0, 21, 0, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.139818}", "{'[6, 6, 6, 6, 5, 5, 1, 0, 21, 0, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.139146}", "{'[6, 6, 6, 6, 5, 5, 1, 0, 21, 0, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.139241}", "{'[6, 6, 6, 6, 5, 5, 1, 0, 21, 0, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.139255}", "{'[6, 6, 6, 6, 5, 5, 1, 0, 21, 0, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.13913}", "{'[6, 6, 6, 6, 5, 5, 1, 0, 21, 0, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.139106}", "{'[6, 6, 6, 6, 5, 5, 1, 0, 21, 0, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.139658}", "{'[6, 6, 6, 6, 5, 5, 1, 0, 21, 0, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.139295}"]
returning from 'run': {'[6, 6, 6, 6, 5, 5, 1, 0, 21, 0, 0, 3, 2, 0, 0, 1, 1, 1]': ([0.157162, 0.157342, 0.157367, 0.141352, 0.139457, 0.139104, 0.138843, 0.139124, 0.139412, 0.138877, 0.138842, 0.138988, 0.139367, 0.13909, 0.139406, 0.13928, 0.139356, 0.1391, 0.139112, 0.13913, 0.139262, 0.139077, 0.139818, 0.139146, 0.139241, 0.139255, 0.13913, 0.139106, 0.139658, 0.139295], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 6, 6, 5, 5, 1, 0, 21, 0, 0, 3, 2, 0, 0, 1, 1, 1]': ([0.157162, 0.157342, 0.157367, 0.141352, 0.139457, 0.139104, 0.138843, 0.139124, 0.139412, 0.138877, 0.138842, 0.138988, 0.139367, 0.13909, 0.139406, 0.13928, 0.139356, 0.1391, 0.139112, 0.13913, 0.139262, 0.139077, 0.139818, 0.139146, 0.139241, 0.139255, 0.13913, 0.139106, 0.139658, 0.139295], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	30
        Max loop nest depth: 	5
        Additions: 		3410
        Multiplications: 	1064
        Divisions: 		0
        Logical: 		0
        Reads: 			5638
        Writes: 		646
        Comparisons:		30
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest56.exe __orio_perftest56.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest56.exe  
Program Test Output: 
{'[2, 2, 6, 0, 5, 5, 0, 0, 21, 28, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.128039}
{'[2, 2, 6, 0, 5, 5, 0, 0, 21, 28, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.128006}
{'[2, 2, 6, 0, 5, 5, 0, 0, 21, 28, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.128127}
{'[2, 2, 6, 0, 5, 5, 0, 0, 21, 28, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.128022}
{'[2, 2, 6, 0, 5, 5, 0, 0, 21, 28, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.112872}
{'[2, 2, 6, 0, 5, 5, 0, 0, 21, 28, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.109076}
{'[2, 2, 6, 0, 5, 5, 0, 0, 21, 28, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.10938}
{'[2, 2, 6, 0, 5, 5, 0, 0, 21, 28, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.109133}
{'[2, 2, 6, 0, 5, 5, 0, 0, 21, 28, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.109148}
{'[2, 2, 6, 0, 5, 5, 0, 0, 21, 28, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.108988}
{'[2, 2, 6, 0, 5, 5, 0, 0, 21, 28, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.109159}
{'[2, 2, 6, 0, 5, 5, 0, 0, 21, 28, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.108926}
{'[2, 2, 6, 0, 5, 5, 0, 0, 21, 28, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.10927}
{'[2, 2, 6, 0, 5, 5, 0, 0, 21, 28, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.109097}
{'[2, 2, 6, 0, 5, 5, 0, 0, 21, 28, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.109559}
{'[2, 2, 6, 0, 5, 5, 0, 0, 21, 28, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.108979}
{'[2, 2, 6, 0, 5, 5, 0, 0, 21, 28, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.109403}
{'[2, 2, 6, 0, 5, 5, 0, 0, 21, 28, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.109222}
{'[2, 2, 6, 0, 5, 5, 0, 0, 21, 28, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.109307}
{'[2, 2, 6, 0, 5, 5, 0, 0, 21, 28, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.109137}
{'[2, 2, 6, 0, 5, 5, 0, 0, 21, 28, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.109398}
{'[2, 2, 6, 0, 5, 5, 0, 0, 21, 28, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.110468}
{'[2, 2, 6, 0, 5, 5, 0, 0, 21, 28, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.109318}
{'[2, 2, 6, 0, 5, 5, 0, 0, 21, 28, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.109071}
{'[2, 2, 6, 0, 5, 5, 0, 0, 21, 28, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.109168}
{'[2, 2, 6, 0, 5, 5, 0, 0, 21, 28, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.109019}
{'[2, 2, 6, 0, 5, 5, 0, 0, 21, 28, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.109462}
{'[2, 2, 6, 0, 5, 5, 0, 0, 21, 28, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.109137}
{'[2, 2, 6, 0, 5, 5, 0, 0, 21, 28, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.10916}
{'[2, 2, 6, 0, 5, 5, 0, 0, 21, 28, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.109005}

out:
 ["{'[2, 2, 6, 0, 5, 5, 0, 0, 21, 28, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.128039}", "{'[2, 2, 6, 0, 5, 5, 0, 0, 21, 28, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.128006}", "{'[2, 2, 6, 0, 5, 5, 0, 0, 21, 28, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.128127}", "{'[2, 2, 6, 0, 5, 5, 0, 0, 21, 28, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.128022}", "{'[2, 2, 6, 0, 5, 5, 0, 0, 21, 28, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.112872}", "{'[2, 2, 6, 0, 5, 5, 0, 0, 21, 28, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.109076}", "{'[2, 2, 6, 0, 5, 5, 0, 0, 21, 28, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.10938}", "{'[2, 2, 6, 0, 5, 5, 0, 0, 21, 28, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.109133}", "{'[2, 2, 6, 0, 5, 5, 0, 0, 21, 28, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.109148}", "{'[2, 2, 6, 0, 5, 5, 0, 0, 21, 28, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.108988}", "{'[2, 2, 6, 0, 5, 5, 0, 0, 21, 28, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.109159}", "{'[2, 2, 6, 0, 5, 5, 0, 0, 21, 28, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.108926}", "{'[2, 2, 6, 0, 5, 5, 0, 0, 21, 28, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.10927}", "{'[2, 2, 6, 0, 5, 5, 0, 0, 21, 28, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.109097}", "{'[2, 2, 6, 0, 5, 5, 0, 0, 21, 28, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.109559}", "{'[2, 2, 6, 0, 5, 5, 0, 0, 21, 28, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.108979}", "{'[2, 2, 6, 0, 5, 5, 0, 0, 21, 28, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.109403}", "{'[2, 2, 6, 0, 5, 5, 0, 0, 21, 28, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.109222}", "{'[2, 2, 6, 0, 5, 5, 0, 0, 21, 28, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.109307}", "{'[2, 2, 6, 0, 5, 5, 0, 0, 21, 28, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.109137}", "{'[2, 2, 6, 0, 5, 5, 0, 0, 21, 28, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.109398}", "{'[2, 2, 6, 0, 5, 5, 0, 0, 21, 28, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.110468}", "{'[2, 2, 6, 0, 5, 5, 0, 0, 21, 28, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.109318}", "{'[2, 2, 6, 0, 5, 5, 0, 0, 21, 28, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.109071}", "{'[2, 2, 6, 0, 5, 5, 0, 0, 21, 28, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.109168}", "{'[2, 2, 6, 0, 5, 5, 0, 0, 21, 28, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.109019}", "{'[2, 2, 6, 0, 5, 5, 0, 0, 21, 28, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.109462}", "{'[2, 2, 6, 0, 5, 5, 0, 0, 21, 28, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.109137}", "{'[2, 2, 6, 0, 5, 5, 0, 0, 21, 28, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.10916}", "{'[2, 2, 6, 0, 5, 5, 0, 0, 21, 28, 0, 3, 1, 1, 0, 0, 0, 0]' : 0.109005}"]
returning from 'run': {'[2, 2, 6, 0, 5, 5, 0, 0, 21, 28, 0, 3, 1, 1, 0, 0, 0, 0]': ([0.128039, 0.128006, 0.128127, 0.128022, 0.112872, 0.109076, 0.10938, 0.109133, 0.109148, 0.108988, 0.109159, 0.108926, 0.10927, 0.109097, 0.109559, 0.108979, 0.109403, 0.109222, 0.109307, 0.109137, 0.109398, 0.110468, 0.109318, 0.109071, 0.109168, 0.109019, 0.109462, 0.109137, 0.10916, 0.109005], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 2, 6, 0, 5, 5, 0, 0, 21, 28, 0, 3, 1, 1, 0, 0, 0, 0]': ([0.128039, 0.128006, 0.128127, 0.128022, 0.112872, 0.109076, 0.10938, 0.109133, 0.109148, 0.108988, 0.109159, 0.108926, 0.10927, 0.109097, 0.109559, 0.108979, 0.109403, 0.109222, 0.109307, 0.109137, 0.109398, 0.110468, 0.109318, 0.109071, 0.109168, 0.109019, 0.109462, 0.109137, 0.10916, 0.109005], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	4
        Additions: 		82
        Multiplications: 	12
        Divisions: 		0
        Logical: 		0
        Reads: 			198
        Writes: 		63
        Comparisons:		10
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest57.exe __orio_perftest57.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest57.exe  
Program Test Output: 
{'[0, 2, 6, 0, 5, 0, 1, 0, 21, 0, 0, 3, 0, 0, 0, 1, 0, 0]' : 0.219722}
{'[0, 2, 6, 0, 5, 0, 1, 0, 21, 0, 0, 3, 0, 0, 0, 1, 0, 0]' : 0.219671}
{'[0, 2, 6, 0, 5, 0, 1, 0, 21, 0, 0, 3, 0, 0, 0, 1, 0, 0]' : 0.210819}
{'[0, 2, 6, 0, 5, 0, 1, 0, 21, 0, 0, 3, 0, 0, 0, 1, 0, 0]' : 0.185132}
{'[0, 2, 6, 0, 5, 0, 1, 0, 21, 0, 0, 3, 0, 0, 0, 1, 0, 0]' : 0.1851}
{'[0, 2, 6, 0, 5, 0, 1, 0, 21, 0, 0, 3, 0, 0, 0, 1, 0, 0]' : 0.185157}
{'[0, 2, 6, 0, 5, 0, 1, 0, 21, 0, 0, 3, 0, 0, 0, 1, 0, 0]' : 0.185041}
{'[0, 2, 6, 0, 5, 0, 1, 0, 21, 0, 0, 3, 0, 0, 0, 1, 0, 0]' : 0.185014}
{'[0, 2, 6, 0, 5, 0, 1, 0, 21, 0, 0, 3, 0, 0, 0, 1, 0, 0]' : 0.185545}
{'[0, 2, 6, 0, 5, 0, 1, 0, 21, 0, 0, 3, 0, 0, 0, 1, 0, 0]' : 0.18524}
{'[0, 2, 6, 0, 5, 0, 1, 0, 21, 0, 0, 3, 0, 0, 0, 1, 0, 0]' : 0.185496}
{'[0, 2, 6, 0, 5, 0, 1, 0, 21, 0, 0, 3, 0, 0, 0, 1, 0, 0]' : 0.185242}
{'[0, 2, 6, 0, 5, 0, 1, 0, 21, 0, 0, 3, 0, 0, 0, 1, 0, 0]' : 0.187064}
{'[0, 2, 6, 0, 5, 0, 1, 0, 21, 0, 0, 3, 0, 0, 0, 1, 0, 0]' : 0.186578}
{'[0, 2, 6, 0, 5, 0, 1, 0, 21, 0, 0, 3, 0, 0, 0, 1, 0, 0]' : 0.18518}
{'[0, 2, 6, 0, 5, 0, 1, 0, 21, 0, 0, 3, 0, 0, 0, 1, 0, 0]' : 0.185538}
{'[0, 2, 6, 0, 5, 0, 1, 0, 21, 0, 0, 3, 0, 0, 0, 1, 0, 0]' : 0.184757}
{'[0, 2, 6, 0, 5, 0, 1, 0, 21, 0, 0, 3, 0, 0, 0, 1, 0, 0]' : 0.185212}
{'[0, 2, 6, 0, 5, 0, 1, 0, 21, 0, 0, 3, 0, 0, 0, 1, 0, 0]' : 0.184712}
{'[0, 2, 6, 0, 5, 0, 1, 0, 21, 0, 0, 3, 0, 0, 0, 1, 0, 0]' : 0.184861}
{'[0, 2, 6, 0, 5, 0, 1, 0, 21, 0, 0, 3, 0, 0, 0, 1, 0, 0]' : 0.185179}
{'[0, 2, 6, 0, 5, 0, 1, 0, 21, 0, 0, 3, 0, 0, 0, 1, 0, 0]' : 0.185316}
{'[0, 2, 6, 0, 5, 0, 1, 0, 21, 0, 0, 3, 0, 0, 0, 1, 0, 0]' : 0.184921}
{'[0, 2, 6, 0, 5, 0, 1, 0, 21, 0, 0, 3, 0, 0, 0, 1, 0, 0]' : 0.184828}
{'[0, 2, 6, 0, 5, 0, 1, 0, 21, 0, 0, 3, 0, 0, 0, 1, 0, 0]' : 0.184828}
{'[0, 2, 6, 0, 5, 0, 1, 0, 21, 0, 0, 3, 0, 0, 0, 1, 0, 0]' : 0.184887}
{'[0, 2, 6, 0, 5, 0, 1, 0, 21, 0, 0, 3, 0, 0, 0, 1, 0, 0]' : 0.185018}
{'[0, 2, 6, 0, 5, 0, 1, 0, 21, 0, 0, 3, 0, 0, 0, 1, 0, 0]' : 0.185209}
{'[0, 2, 6, 0, 5, 0, 1, 0, 21, 0, 0, 3, 0, 0, 0, 1, 0, 0]' : 0.18502}
{'[0, 2, 6, 0, 5, 0, 1, 0, 21, 0, 0, 3, 0, 0, 0, 1, 0, 0]' : 0.184861}

out:
 ["{'[0, 2, 6, 0, 5, 0, 1, 0, 21, 0, 0, 3, 0, 0, 0, 1, 0, 0]' : 0.219722}", "{'[0, 2, 6, 0, 5, 0, 1, 0, 21, 0, 0, 3, 0, 0, 0, 1, 0, 0]' : 0.219671}", "{'[0, 2, 6, 0, 5, 0, 1, 0, 21, 0, 0, 3, 0, 0, 0, 1, 0, 0]' : 0.210819}", "{'[0, 2, 6, 0, 5, 0, 1, 0, 21, 0, 0, 3, 0, 0, 0, 1, 0, 0]' : 0.185132}", "{'[0, 2, 6, 0, 5, 0, 1, 0, 21, 0, 0, 3, 0, 0, 0, 1, 0, 0]' : 0.1851}", "{'[0, 2, 6, 0, 5, 0, 1, 0, 21, 0, 0, 3, 0, 0, 0, 1, 0, 0]' : 0.185157}", "{'[0, 2, 6, 0, 5, 0, 1, 0, 21, 0, 0, 3, 0, 0, 0, 1, 0, 0]' : 0.185041}", "{'[0, 2, 6, 0, 5, 0, 1, 0, 21, 0, 0, 3, 0, 0, 0, 1, 0, 0]' : 0.185014}", "{'[0, 2, 6, 0, 5, 0, 1, 0, 21, 0, 0, 3, 0, 0, 0, 1, 0, 0]' : 0.185545}", "{'[0, 2, 6, 0, 5, 0, 1, 0, 21, 0, 0, 3, 0, 0, 0, 1, 0, 0]' : 0.18524}", "{'[0, 2, 6, 0, 5, 0, 1, 0, 21, 0, 0, 3, 0, 0, 0, 1, 0, 0]' : 0.185496}", "{'[0, 2, 6, 0, 5, 0, 1, 0, 21, 0, 0, 3, 0, 0, 0, 1, 0, 0]' : 0.185242}", "{'[0, 2, 6, 0, 5, 0, 1, 0, 21, 0, 0, 3, 0, 0, 0, 1, 0, 0]' : 0.187064}", "{'[0, 2, 6, 0, 5, 0, 1, 0, 21, 0, 0, 3, 0, 0, 0, 1, 0, 0]' : 0.186578}", "{'[0, 2, 6, 0, 5, 0, 1, 0, 21, 0, 0, 3, 0, 0, 0, 1, 0, 0]' : 0.18518}", "{'[0, 2, 6, 0, 5, 0, 1, 0, 21, 0, 0, 3, 0, 0, 0, 1, 0, 0]' : 0.185538}", "{'[0, 2, 6, 0, 5, 0, 1, 0, 21, 0, 0, 3, 0, 0, 0, 1, 0, 0]' : 0.184757}", "{'[0, 2, 6, 0, 5, 0, 1, 0, 21, 0, 0, 3, 0, 0, 0, 1, 0, 0]' : 0.185212}", "{'[0, 2, 6, 0, 5, 0, 1, 0, 21, 0, 0, 3, 0, 0, 0, 1, 0, 0]' : 0.184712}", "{'[0, 2, 6, 0, 5, 0, 1, 0, 21, 0, 0, 3, 0, 0, 0, 1, 0, 0]' : 0.184861}", "{'[0, 2, 6, 0, 5, 0, 1, 0, 21, 0, 0, 3, 0, 0, 0, 1, 0, 0]' : 0.185179}", "{'[0, 2, 6, 0, 5, 0, 1, 0, 21, 0, 0, 3, 0, 0, 0, 1, 0, 0]' : 0.185316}", "{'[0, 2, 6, 0, 5, 0, 1, 0, 21, 0, 0, 3, 0, 0, 0, 1, 0, 0]' : 0.184921}", "{'[0, 2, 6, 0, 5, 0, 1, 0, 21, 0, 0, 3, 0, 0, 0, 1, 0, 0]' : 0.184828}", "{'[0, 2, 6, 0, 5, 0, 1, 0, 21, 0, 0, 3, 0, 0, 0, 1, 0, 0]' : 0.184828}", "{'[0, 2, 6, 0, 5, 0, 1, 0, 21, 0, 0, 3, 0, 0, 0, 1, 0, 0]' : 0.184887}", "{'[0, 2, 6, 0, 5, 0, 1, 0, 21, 0, 0, 3, 0, 0, 0, 1, 0, 0]' : 0.185018}", "{'[0, 2, 6, 0, 5, 0, 1, 0, 21, 0, 0, 3, 0, 0, 0, 1, 0, 0]' : 0.185209}", "{'[0, 2, 6, 0, 5, 0, 1, 0, 21, 0, 0, 3, 0, 0, 0, 1, 0, 0]' : 0.18502}", "{'[0, 2, 6, 0, 5, 0, 1, 0, 21, 0, 0, 3, 0, 0, 0, 1, 0, 0]' : 0.184861}"]
returning from 'run': {'[0, 2, 6, 0, 5, 0, 1, 0, 21, 0, 0, 3, 0, 0, 0, 1, 0, 0]': ([0.219722, 0.219671, 0.210819, 0.185132, 0.1851, 0.185157, 0.185041, 0.185014, 0.185545, 0.18524, 0.185496, 0.185242, 0.187064, 0.186578, 0.18518, 0.185538, 0.184757, 0.185212, 0.184712, 0.184861, 0.185179, 0.185316, 0.184921, 0.184828, 0.184828, 0.184887, 0.185018, 0.185209, 0.18502, 0.184861], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 6, 0, 5, 0, 1, 0, 21, 0, 0, 3, 0, 0, 0, 1, 0, 0]': ([0.219722, 0.219671, 0.210819, 0.185132, 0.1851, 0.185157, 0.185041, 0.185014, 0.185545, 0.18524, 0.185496, 0.185242, 0.187064, 0.186578, 0.18518, 0.185538, 0.184757, 0.185212, 0.184712, 0.184861, 0.185179, 0.185316, 0.184921, 0.184828, 0.184828, 0.184887, 0.185018, 0.185209, 0.18502, 0.184861], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	5
        Additions: 		440
        Multiplications: 	162
        Divisions: 		0
        Logical: 		0
        Reads: 			943
        Writes: 		201
        Comparisons:		18
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest58.exe __orio_perftest58.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest58.exe  
Program Test Output: 
{'[3, 0, 6, 3, 5, 0, 0, 1, 21, 0, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.114448}
{'[3, 0, 6, 3, 5, 0, 0, 1, 21, 0, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.114361}
{'[3, 0, 6, 3, 5, 0, 0, 1, 21, 0, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.11436}
{'[3, 0, 6, 3, 5, 0, 0, 1, 21, 0, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.114352}
{'[3, 0, 6, 3, 5, 0, 0, 1, 21, 0, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.113952}
{'[3, 0, 6, 3, 5, 0, 0, 1, 21, 0, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.102638}
{'[3, 0, 6, 3, 5, 0, 0, 1, 21, 0, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.101428}
{'[3, 0, 6, 3, 5, 0, 0, 1, 21, 0, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.100862}
{'[3, 0, 6, 3, 5, 0, 0, 1, 21, 0, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.101085}
{'[3, 0, 6, 3, 5, 0, 0, 1, 21, 0, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.101467}
{'[3, 0, 6, 3, 5, 0, 0, 1, 21, 0, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.101019}
{'[3, 0, 6, 3, 5, 0, 0, 1, 21, 0, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.100903}
{'[3, 0, 6, 3, 5, 0, 0, 1, 21, 0, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.101106}
{'[3, 0, 6, 3, 5, 0, 0, 1, 21, 0, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.100828}
{'[3, 0, 6, 3, 5, 0, 0, 1, 21, 0, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.100888}
{'[3, 0, 6, 3, 5, 0, 0, 1, 21, 0, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.101107}
{'[3, 0, 6, 3, 5, 0, 0, 1, 21, 0, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.101584}
{'[3, 0, 6, 3, 5, 0, 0, 1, 21, 0, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.10188}
{'[3, 0, 6, 3, 5, 0, 0, 1, 21, 0, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.10143}
{'[3, 0, 6, 3, 5, 0, 0, 1, 21, 0, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.101924}
{'[3, 0, 6, 3, 5, 0, 0, 1, 21, 0, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.102056}
{'[3, 0, 6, 3, 5, 0, 0, 1, 21, 0, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.101665}
{'[3, 0, 6, 3, 5, 0, 0, 1, 21, 0, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.100986}
{'[3, 0, 6, 3, 5, 0, 0, 1, 21, 0, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.100957}
{'[3, 0, 6, 3, 5, 0, 0, 1, 21, 0, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.101075}
{'[3, 0, 6, 3, 5, 0, 0, 1, 21, 0, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.100939}
{'[3, 0, 6, 3, 5, 0, 0, 1, 21, 0, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.101024}
{'[3, 0, 6, 3, 5, 0, 0, 1, 21, 0, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.101334}
{'[3, 0, 6, 3, 5, 0, 0, 1, 21, 0, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.101085}
{'[3, 0, 6, 3, 5, 0, 0, 1, 21, 0, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.100835}

out:
 ["{'[3, 0, 6, 3, 5, 0, 0, 1, 21, 0, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.114448}", "{'[3, 0, 6, 3, 5, 0, 0, 1, 21, 0, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.114361}", "{'[3, 0, 6, 3, 5, 0, 0, 1, 21, 0, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.11436}", "{'[3, 0, 6, 3, 5, 0, 0, 1, 21, 0, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.114352}", "{'[3, 0, 6, 3, 5, 0, 0, 1, 21, 0, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.113952}", "{'[3, 0, 6, 3, 5, 0, 0, 1, 21, 0, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.102638}", "{'[3, 0, 6, 3, 5, 0, 0, 1, 21, 0, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.101428}", "{'[3, 0, 6, 3, 5, 0, 0, 1, 21, 0, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.100862}", "{'[3, 0, 6, 3, 5, 0, 0, 1, 21, 0, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.101085}", "{'[3, 0, 6, 3, 5, 0, 0, 1, 21, 0, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.101467}", "{'[3, 0, 6, 3, 5, 0, 0, 1, 21, 0, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.101019}", "{'[3, 0, 6, 3, 5, 0, 0, 1, 21, 0, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.100903}", "{'[3, 0, 6, 3, 5, 0, 0, 1, 21, 0, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.101106}", "{'[3, 0, 6, 3, 5, 0, 0, 1, 21, 0, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.100828}", "{'[3, 0, 6, 3, 5, 0, 0, 1, 21, 0, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.100888}", "{'[3, 0, 6, 3, 5, 0, 0, 1, 21, 0, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.101107}", "{'[3, 0, 6, 3, 5, 0, 0, 1, 21, 0, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.101584}", "{'[3, 0, 6, 3, 5, 0, 0, 1, 21, 0, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.10188}", "{'[3, 0, 6, 3, 5, 0, 0, 1, 21, 0, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.10143}", "{'[3, 0, 6, 3, 5, 0, 0, 1, 21, 0, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.101924}", "{'[3, 0, 6, 3, 5, 0, 0, 1, 21, 0, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.102056}", "{'[3, 0, 6, 3, 5, 0, 0, 1, 21, 0, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.101665}", "{'[3, 0, 6, 3, 5, 0, 0, 1, 21, 0, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.100986}", "{'[3, 0, 6, 3, 5, 0, 0, 1, 21, 0, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.100957}", "{'[3, 0, 6, 3, 5, 0, 0, 1, 21, 0, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.101075}", "{'[3, 0, 6, 3, 5, 0, 0, 1, 21, 0, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.100939}", "{'[3, 0, 6, 3, 5, 0, 0, 1, 21, 0, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.101024}", "{'[3, 0, 6, 3, 5, 0, 0, 1, 21, 0, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.101334}", "{'[3, 0, 6, 3, 5, 0, 0, 1, 21, 0, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.101085}", "{'[3, 0, 6, 3, 5, 0, 0, 1, 21, 0, 0, 3, 1, 0, 1, 1, 0, 1]' : 0.100835}"]
returning from 'run': {'[3, 0, 6, 3, 5, 0, 0, 1, 21, 0, 0, 3, 1, 0, 1, 1, 0, 1]': ([0.114448, 0.114361, 0.11436, 0.114352, 0.113952, 0.102638, 0.101428, 0.100862, 0.101085, 0.101467, 0.101019, 0.100903, 0.101106, 0.100828, 0.100888, 0.101107, 0.101584, 0.10188, 0.10143, 0.101924, 0.102056, 0.101665, 0.100986, 0.100957, 0.101075, 0.100939, 0.101024, 0.101334, 0.101085, 0.100835], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 0, 6, 3, 5, 0, 0, 1, 21, 0, 0, 3, 1, 0, 1, 1, 0, 1]': ([0.114448, 0.114361, 0.11436, 0.114352, 0.113952, 0.102638, 0.101428, 0.100862, 0.101085, 0.101467, 0.101019, 0.100903, 0.101106, 0.100828, 0.100888, 0.101107, 0.101584, 0.10188, 0.10143, 0.101924, 0.102056, 0.101665, 0.100986, 0.100957, 0.101075, 0.100939, 0.101024, 0.101334, 0.101085, 0.100835], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	6
        Additions: 		4303
        Multiplications: 	2128
        Divisions: 		0
        Logical: 		0
        Reads: 			8028
        Writes: 		1267
        Comparisons:		20
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest59.exe __orio_perftest59.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest59.exe  
Program Test Output: 
{'[1, 6, 6, 5, 5, 0, 0, 0, 21, 26, 0, 3, 0, 2, 0, 1, 1, 0]' : 0.176602}
{'[1, 6, 6, 5, 5, 0, 0, 0, 21, 26, 0, 3, 0, 2, 0, 1, 1, 0]' : 0.176511}
{'[1, 6, 6, 5, 5, 0, 0, 0, 21, 26, 0, 3, 0, 2, 0, 1, 1, 0]' : 0.175901}
{'[1, 6, 6, 5, 5, 0, 0, 0, 21, 26, 0, 3, 0, 2, 0, 1, 1, 0]' : 0.151402}
{'[1, 6, 6, 5, 5, 0, 0, 0, 21, 26, 0, 3, 0, 2, 0, 1, 1, 0]' : 0.148539}
{'[1, 6, 6, 5, 5, 0, 0, 0, 21, 26, 0, 3, 0, 2, 0, 1, 1, 0]' : 0.148335}
{'[1, 6, 6, 5, 5, 0, 0, 0, 21, 26, 0, 3, 0, 2, 0, 1, 1, 0]' : 0.148505}
{'[1, 6, 6, 5, 5, 0, 0, 0, 21, 26, 0, 3, 0, 2, 0, 1, 1, 0]' : 0.148737}
{'[1, 6, 6, 5, 5, 0, 0, 0, 21, 26, 0, 3, 0, 2, 0, 1, 1, 0]' : 0.148496}
{'[1, 6, 6, 5, 5, 0, 0, 0, 21, 26, 0, 3, 0, 2, 0, 1, 1, 0]' : 0.14893}
{'[1, 6, 6, 5, 5, 0, 0, 0, 21, 26, 0, 3, 0, 2, 0, 1, 1, 0]' : 0.148411}
{'[1, 6, 6, 5, 5, 0, 0, 0, 21, 26, 0, 3, 0, 2, 0, 1, 1, 0]' : 0.148671}
{'[1, 6, 6, 5, 5, 0, 0, 0, 21, 26, 0, 3, 0, 2, 0, 1, 1, 0]' : 0.148284}
{'[1, 6, 6, 5, 5, 0, 0, 0, 21, 26, 0, 3, 0, 2, 0, 1, 1, 0]' : 0.148344}
{'[1, 6, 6, 5, 5, 0, 0, 0, 21, 26, 0, 3, 0, 2, 0, 1, 1, 0]' : 0.148458}
{'[1, 6, 6, 5, 5, 0, 0, 0, 21, 26, 0, 3, 0, 2, 0, 1, 1, 0]' : 0.148555}
{'[1, 6, 6, 5, 5, 0, 0, 0, 21, 26, 0, 3, 0, 2, 0, 1, 1, 0]' : 0.14834}
{'[1, 6, 6, 5, 5, 0, 0, 0, 21, 26, 0, 3, 0, 2, 0, 1, 1, 0]' : 0.148447}
{'[1, 6, 6, 5, 5, 0, 0, 0, 21, 26, 0, 3, 0, 2, 0, 1, 1, 0]' : 0.148295}
{'[1, 6, 6, 5, 5, 0, 0, 0, 21, 26, 0, 3, 0, 2, 0, 1, 1, 0]' : 0.14886}
{'[1, 6, 6, 5, 5, 0, 0, 0, 21, 26, 0, 3, 0, 2, 0, 1, 1, 0]' : 0.148384}
{'[1, 6, 6, 5, 5, 0, 0, 0, 21, 26, 0, 3, 0, 2, 0, 1, 1, 0]' : 0.14876}
{'[1, 6, 6, 5, 5, 0, 0, 0, 21, 26, 0, 3, 0, 2, 0, 1, 1, 0]' : 0.149035}
{'[1, 6, 6, 5, 5, 0, 0, 0, 21, 26, 0, 3, 0, 2, 0, 1, 1, 0]' : 0.148332}
{'[1, 6, 6, 5, 5, 0, 0, 0, 21, 26, 0, 3, 0, 2, 0, 1, 1, 0]' : 0.148327}
{'[1, 6, 6, 5, 5, 0, 0, 0, 21, 26, 0, 3, 0, 2, 0, 1, 1, 0]' : 0.148553}
{'[1, 6, 6, 5, 5, 0, 0, 0, 21, 26, 0, 3, 0, 2, 0, 1, 1, 0]' : 0.148457}
{'[1, 6, 6, 5, 5, 0, 0, 0, 21, 26, 0, 3, 0, 2, 0, 1, 1, 0]' : 0.148381}
{'[1, 6, 6, 5, 5, 0, 0, 0, 21, 26, 0, 3, 0, 2, 0, 1, 1, 0]' : 0.148355}
{'[1, 6, 6, 5, 5, 0, 0, 0, 21, 26, 0, 3, 0, 2, 0, 1, 1, 0]' : 0.148921}

out:
 ["{'[1, 6, 6, 5, 5, 0, 0, 0, 21, 26, 0, 3, 0, 2, 0, 1, 1, 0]' : 0.176602}", "{'[1, 6, 6, 5, 5, 0, 0, 0, 21, 26, 0, 3, 0, 2, 0, 1, 1, 0]' : 0.176511}", "{'[1, 6, 6, 5, 5, 0, 0, 0, 21, 26, 0, 3, 0, 2, 0, 1, 1, 0]' : 0.175901}", "{'[1, 6, 6, 5, 5, 0, 0, 0, 21, 26, 0, 3, 0, 2, 0, 1, 1, 0]' : 0.151402}", "{'[1, 6, 6, 5, 5, 0, 0, 0, 21, 26, 0, 3, 0, 2, 0, 1, 1, 0]' : 0.148539}", "{'[1, 6, 6, 5, 5, 0, 0, 0, 21, 26, 0, 3, 0, 2, 0, 1, 1, 0]' : 0.148335}", "{'[1, 6, 6, 5, 5, 0, 0, 0, 21, 26, 0, 3, 0, 2, 0, 1, 1, 0]' : 0.148505}", "{'[1, 6, 6, 5, 5, 0, 0, 0, 21, 26, 0, 3, 0, 2, 0, 1, 1, 0]' : 0.148737}", "{'[1, 6, 6, 5, 5, 0, 0, 0, 21, 26, 0, 3, 0, 2, 0, 1, 1, 0]' : 0.148496}", "{'[1, 6, 6, 5, 5, 0, 0, 0, 21, 26, 0, 3, 0, 2, 0, 1, 1, 0]' : 0.14893}", "{'[1, 6, 6, 5, 5, 0, 0, 0, 21, 26, 0, 3, 0, 2, 0, 1, 1, 0]' : 0.148411}", "{'[1, 6, 6, 5, 5, 0, 0, 0, 21, 26, 0, 3, 0, 2, 0, 1, 1, 0]' : 0.148671}", "{'[1, 6, 6, 5, 5, 0, 0, 0, 21, 26, 0, 3, 0, 2, 0, 1, 1, 0]' : 0.148284}", "{'[1, 6, 6, 5, 5, 0, 0, 0, 21, 26, 0, 3, 0, 2, 0, 1, 1, 0]' : 0.148344}", "{'[1, 6, 6, 5, 5, 0, 0, 0, 21, 26, 0, 3, 0, 2, 0, 1, 1, 0]' : 0.148458}", "{'[1, 6, 6, 5, 5, 0, 0, 0, 21, 26, 0, 3, 0, 2, 0, 1, 1, 0]' : 0.148555}", "{'[1, 6, 6, 5, 5, 0, 0, 0, 21, 26, 0, 3, 0, 2, 0, 1, 1, 0]' : 0.14834}", "{'[1, 6, 6, 5, 5, 0, 0, 0, 21, 26, 0, 3, 0, 2, 0, 1, 1, 0]' : 0.148447}", "{'[1, 6, 6, 5, 5, 0, 0, 0, 21, 26, 0, 3, 0, 2, 0, 1, 1, 0]' : 0.148295}", "{'[1, 6, 6, 5, 5, 0, 0, 0, 21, 26, 0, 3, 0, 2, 0, 1, 1, 0]' : 0.14886}", "{'[1, 6, 6, 5, 5, 0, 0, 0, 21, 26, 0, 3, 0, 2, 0, 1, 1, 0]' : 0.148384}", "{'[1, 6, 6, 5, 5, 0, 0, 0, 21, 26, 0, 3, 0, 2, 0, 1, 1, 0]' : 0.14876}", "{'[1, 6, 6, 5, 5, 0, 0, 0, 21, 26, 0, 3, 0, 2, 0, 1, 1, 0]' : 0.149035}", "{'[1, 6, 6, 5, 5, 0, 0, 0, 21, 26, 0, 3, 0, 2, 0, 1, 1, 0]' : 0.148332}", "{'[1, 6, 6, 5, 5, 0, 0, 0, 21, 26, 0, 3, 0, 2, 0, 1, 1, 0]' : 0.148327}", "{'[1, 6, 6, 5, 5, 0, 0, 0, 21, 26, 0, 3, 0, 2, 0, 1, 1, 0]' : 0.148553}", "{'[1, 6, 6, 5, 5, 0, 0, 0, 21, 26, 0, 3, 0, 2, 0, 1, 1, 0]' : 0.148457}", "{'[1, 6, 6, 5, 5, 0, 0, 0, 21, 26, 0, 3, 0, 2, 0, 1, 1, 0]' : 0.148381}", "{'[1, 6, 6, 5, 5, 0, 0, 0, 21, 26, 0, 3, 0, 2, 0, 1, 1, 0]' : 0.148355}", "{'[1, 6, 6, 5, 5, 0, 0, 0, 21, 26, 0, 3, 0, 2, 0, 1, 1, 0]' : 0.148921}"]
returning from 'run': {'[1, 6, 6, 5, 5, 0, 0, 0, 21, 26, 0, 3, 0, 2, 0, 1, 1, 0]': ([0.176602, 0.176511, 0.175901, 0.151402, 0.148539, 0.148335, 0.148505, 0.148737, 0.148496, 0.14893, 0.148411, 0.148671, 0.148284, 0.148344, 0.148458, 0.148555, 0.14834, 0.148447, 0.148295, 0.14886, 0.148384, 0.14876, 0.149035, 0.148332, 0.148327, 0.148553, 0.148457, 0.148381, 0.148355, 0.148921], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 6, 6, 5, 5, 0, 0, 0, 21, 26, 0, 3, 0, 2, 0, 1, 1, 0]': ([0.176602, 0.176511, 0.175901, 0.151402, 0.148539, 0.148335, 0.148505, 0.148737, 0.148496, 0.14893, 0.148411, 0.148671, 0.148284, 0.148344, 0.148458, 0.148555, 0.14834, 0.148447, 0.148295, 0.14886, 0.148384, 0.14876, 0.149035, 0.148332, 0.148327, 0.148553, 0.148457, 0.148381, 0.148355, 0.148921], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	167
        Max loop nest depth: 	5
        Additions: 		6034
        Multiplications: 	2294
        Divisions: 		0
        Logical: 		0
        Reads: 			11474
        Writes: 		2032
        Comparisons:		167
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest60.exe __orio_perftest60.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest60.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest60.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest60.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest60.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		640
        Multiplications: 	144
        Divisions: 		0
        Logical: 		0
        Reads: 			1001
        Writes: 		126
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest61.exe __orio_perftest61.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest61.exe  
Program Test Output: 
{'[0, 3, 6, 0, 5, 5, 1, 1, 21, 22, 0, 3, 1, 0, 1, 0, 1, 0]' : 0.120056}
{'[0, 3, 6, 0, 5, 5, 1, 1, 21, 22, 0, 3, 1, 0, 1, 0, 1, 0]' : 0.12008}
{'[0, 3, 6, 0, 5, 5, 1, 1, 21, 22, 0, 3, 1, 0, 1, 0, 1, 0]' : 0.119839}
{'[0, 3, 6, 0, 5, 5, 1, 1, 21, 22, 0, 3, 1, 0, 1, 0, 1, 0]' : 0.119814}
{'[0, 3, 6, 0, 5, 5, 1, 1, 21, 22, 0, 3, 1, 0, 1, 0, 1, 0]' : 0.118489}
{'[0, 3, 6, 0, 5, 5, 1, 1, 21, 22, 0, 3, 1, 0, 1, 0, 1, 0]' : 0.105523}
{'[0, 3, 6, 0, 5, 5, 1, 1, 21, 22, 0, 3, 1, 0, 1, 0, 1, 0]' : 0.104463}
{'[0, 3, 6, 0, 5, 5, 1, 1, 21, 22, 0, 3, 1, 0, 1, 0, 1, 0]' : 0.104658}
{'[0, 3, 6, 0, 5, 5, 1, 1, 21, 22, 0, 3, 1, 0, 1, 0, 1, 0]' : 0.10469}
{'[0, 3, 6, 0, 5, 5, 1, 1, 21, 22, 0, 3, 1, 0, 1, 0, 1, 0]' : 0.104692}
{'[0, 3, 6, 0, 5, 5, 1, 1, 21, 22, 0, 3, 1, 0, 1, 0, 1, 0]' : 0.104459}
{'[0, 3, 6, 0, 5, 5, 1, 1, 21, 22, 0, 3, 1, 0, 1, 0, 1, 0]' : 0.104572}
{'[0, 3, 6, 0, 5, 5, 1, 1, 21, 22, 0, 3, 1, 0, 1, 0, 1, 0]' : 0.104867}
{'[0, 3, 6, 0, 5, 5, 1, 1, 21, 22, 0, 3, 1, 0, 1, 0, 1, 0]' : 0.104814}
{'[0, 3, 6, 0, 5, 5, 1, 1, 21, 22, 0, 3, 1, 0, 1, 0, 1, 0]' : 0.104466}
{'[0, 3, 6, 0, 5, 5, 1, 1, 21, 22, 0, 3, 1, 0, 1, 0, 1, 0]' : 0.104846}
{'[0, 3, 6, 0, 5, 5, 1, 1, 21, 22, 0, 3, 1, 0, 1, 0, 1, 0]' : 0.104532}
{'[0, 3, 6, 0, 5, 5, 1, 1, 21, 22, 0, 3, 1, 0, 1, 0, 1, 0]' : 0.105098}
{'[0, 3, 6, 0, 5, 5, 1, 1, 21, 22, 0, 3, 1, 0, 1, 0, 1, 0]' : 0.10559}
{'[0, 3, 6, 0, 5, 5, 1, 1, 21, 22, 0, 3, 1, 0, 1, 0, 1, 0]' : 0.108799}
{'[0, 3, 6, 0, 5, 5, 1, 1, 21, 22, 0, 3, 1, 0, 1, 0, 1, 0]' : 0.108845}
{'[0, 3, 6, 0, 5, 5, 1, 1, 21, 22, 0, 3, 1, 0, 1, 0, 1, 0]' : 0.108778}
{'[0, 3, 6, 0, 5, 5, 1, 1, 21, 22, 0, 3, 1, 0, 1, 0, 1, 0]' : 0.10828}
{'[0, 3, 6, 0, 5, 5, 1, 1, 21, 22, 0, 3, 1, 0, 1, 0, 1, 0]' : 0.106346}
{'[0, 3, 6, 0, 5, 5, 1, 1, 21, 22, 0, 3, 1, 0, 1, 0, 1, 0]' : 0.106058}
{'[0, 3, 6, 0, 5, 5, 1, 1, 21, 22, 0, 3, 1, 0, 1, 0, 1, 0]' : 0.106206}
{'[0, 3, 6, 0, 5, 5, 1, 1, 21, 22, 0, 3, 1, 0, 1, 0, 1, 0]' : 0.106124}
{'[0, 3, 6, 0, 5, 5, 1, 1, 21, 22, 0, 3, 1, 0, 1, 0, 1, 0]' : 0.1062}
{'[0, 3, 6, 0, 5, 5, 1, 1, 21, 22, 0, 3, 1, 0, 1, 0, 1, 0]' : 0.106196}
{'[0, 3, 6, 0, 5, 5, 1, 1, 21, 22, 0, 3, 1, 0, 1, 0, 1, 0]' : 0.106176}

out:
 ["{'[0, 3, 6, 0, 5, 5, 1, 1, 21, 22, 0, 3, 1, 0, 1, 0, 1, 0]' : 0.120056}", "{'[0, 3, 6, 0, 5, 5, 1, 1, 21, 22, 0, 3, 1, 0, 1, 0, 1, 0]' : 0.12008}", "{'[0, 3, 6, 0, 5, 5, 1, 1, 21, 22, 0, 3, 1, 0, 1, 0, 1, 0]' : 0.119839}", "{'[0, 3, 6, 0, 5, 5, 1, 1, 21, 22, 0, 3, 1, 0, 1, 0, 1, 0]' : 0.119814}", "{'[0, 3, 6, 0, 5, 5, 1, 1, 21, 22, 0, 3, 1, 0, 1, 0, 1, 0]' : 0.118489}", "{'[0, 3, 6, 0, 5, 5, 1, 1, 21, 22, 0, 3, 1, 0, 1, 0, 1, 0]' : 0.105523}", "{'[0, 3, 6, 0, 5, 5, 1, 1, 21, 22, 0, 3, 1, 0, 1, 0, 1, 0]' : 0.104463}", "{'[0, 3, 6, 0, 5, 5, 1, 1, 21, 22, 0, 3, 1, 0, 1, 0, 1, 0]' : 0.104658}", "{'[0, 3, 6, 0, 5, 5, 1, 1, 21, 22, 0, 3, 1, 0, 1, 0, 1, 0]' : 0.10469}", "{'[0, 3, 6, 0, 5, 5, 1, 1, 21, 22, 0, 3, 1, 0, 1, 0, 1, 0]' : 0.104692}", "{'[0, 3, 6, 0, 5, 5, 1, 1, 21, 22, 0, 3, 1, 0, 1, 0, 1, 0]' : 0.104459}", "{'[0, 3, 6, 0, 5, 5, 1, 1, 21, 22, 0, 3, 1, 0, 1, 0, 1, 0]' : 0.104572}", "{'[0, 3, 6, 0, 5, 5, 1, 1, 21, 22, 0, 3, 1, 0, 1, 0, 1, 0]' : 0.104867}", "{'[0, 3, 6, 0, 5, 5, 1, 1, 21, 22, 0, 3, 1, 0, 1, 0, 1, 0]' : 0.104814}", "{'[0, 3, 6, 0, 5, 5, 1, 1, 21, 22, 0, 3, 1, 0, 1, 0, 1, 0]' : 0.104466}", "{'[0, 3, 6, 0, 5, 5, 1, 1, 21, 22, 0, 3, 1, 0, 1, 0, 1, 0]' : 0.104846}", "{'[0, 3, 6, 0, 5, 5, 1, 1, 21, 22, 0, 3, 1, 0, 1, 0, 1, 0]' : 0.104532}", "{'[0, 3, 6, 0, 5, 5, 1, 1, 21, 22, 0, 3, 1, 0, 1, 0, 1, 0]' : 0.105098}", "{'[0, 3, 6, 0, 5, 5, 1, 1, 21, 22, 0, 3, 1, 0, 1, 0, 1, 0]' : 0.10559}", "{'[0, 3, 6, 0, 5, 5, 1, 1, 21, 22, 0, 3, 1, 0, 1, 0, 1, 0]' : 0.108799}", "{'[0, 3, 6, 0, 5, 5, 1, 1, 21, 22, 0, 3, 1, 0, 1, 0, 1, 0]' : 0.108845}", "{'[0, 3, 6, 0, 5, 5, 1, 1, 21, 22, 0, 3, 1, 0, 1, 0, 1, 0]' : 0.108778}", "{'[0, 3, 6, 0, 5, 5, 1, 1, 21, 22, 0, 3, 1, 0, 1, 0, 1, 0]' : 0.10828}", "{'[0, 3, 6, 0, 5, 5, 1, 1, 21, 22, 0, 3, 1, 0, 1, 0, 1, 0]' : 0.106346}", "{'[0, 3, 6, 0, 5, 5, 1, 1, 21, 22, 0, 3, 1, 0, 1, 0, 1, 0]' : 0.106058}", "{'[0, 3, 6, 0, 5, 5, 1, 1, 21, 22, 0, 3, 1, 0, 1, 0, 1, 0]' : 0.106206}", "{'[0, 3, 6, 0, 5, 5, 1, 1, 21, 22, 0, 3, 1, 0, 1, 0, 1, 0]' : 0.106124}", "{'[0, 3, 6, 0, 5, 5, 1, 1, 21, 22, 0, 3, 1, 0, 1, 0, 1, 0]' : 0.1062}", "{'[0, 3, 6, 0, 5, 5, 1, 1, 21, 22, 0, 3, 1, 0, 1, 0, 1, 0]' : 0.106196}", "{'[0, 3, 6, 0, 5, 5, 1, 1, 21, 22, 0, 3, 1, 0, 1, 0, 1, 0]' : 0.106176}"]
returning from 'run': {'[0, 3, 6, 0, 5, 5, 1, 1, 21, 22, 0, 3, 1, 0, 1, 0, 1, 0]': ([0.120056, 0.12008, 0.119839, 0.119814, 0.118489, 0.105523, 0.104463, 0.104658, 0.10469, 0.104692, 0.104459, 0.104572, 0.104867, 0.104814, 0.104466, 0.104846, 0.104532, 0.105098, 0.10559, 0.108799, 0.108845, 0.108778, 0.10828, 0.106346, 0.106058, 0.106206, 0.106124, 0.1062, 0.106196, 0.106176], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 3, 6, 0, 5, 5, 1, 1, 21, 22, 0, 3, 1, 0, 1, 0, 1, 0]': ([0.120056, 0.12008, 0.119839, 0.119814, 0.118489, 0.105523, 0.104463, 0.104658, 0.10469, 0.104692, 0.104459, 0.104572, 0.104867, 0.104814, 0.104466, 0.104846, 0.104532, 0.105098, 0.10559, 0.108799, 0.108845, 0.108778, 0.10828, 0.106346, 0.106058, 0.106206, 0.106124, 0.1062, 0.106196, 0.106176], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	46
        Max loop nest depth: 	5
        Additions: 		4539
        Multiplications: 	2146
        Divisions: 		0
        Logical: 		0
        Reads: 			8495
        Writes: 		1364
        Comparisons:		46
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest62.exe __orio_perftest62.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest62.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest62.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest62.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest62.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	103
        Max loop nest depth: 	6
        Additions: 		3223
        Multiplications: 	1218
        Divisions: 		0
        Logical: 		0
        Reads: 			6682
        Writes: 		1375
        Comparisons:		103
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest63.exe __orio_perftest63.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest63.exe  
Program Test Output: 
{'[2, 1, 6, 2, 5, 4, 1, 0, 21, 27, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.199155}
{'[2, 1, 6, 2, 5, 4, 1, 0, 21, 27, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.198646}
{'[2, 1, 6, 2, 5, 4, 1, 0, 21, 27, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.19014}
{'[2, 1, 6, 2, 5, 4, 1, 0, 21, 27, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.172037}
{'[2, 1, 6, 2, 5, 4, 1, 0, 21, 27, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.171602}
{'[2, 1, 6, 2, 5, 4, 1, 0, 21, 27, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.172042}
{'[2, 1, 6, 2, 5, 4, 1, 0, 21, 27, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.171767}
{'[2, 1, 6, 2, 5, 4, 1, 0, 21, 27, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.17176}
{'[2, 1, 6, 2, 5, 4, 1, 0, 21, 27, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.171771}
{'[2, 1, 6, 2, 5, 4, 1, 0, 21, 27, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.171566}
{'[2, 1, 6, 2, 5, 4, 1, 0, 21, 27, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.17157}
{'[2, 1, 6, 2, 5, 4, 1, 0, 21, 27, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.172034}
{'[2, 1, 6, 2, 5, 4, 1, 0, 21, 27, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.172041}
{'[2, 1, 6, 2, 5, 4, 1, 0, 21, 27, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.172249}
{'[2, 1, 6, 2, 5, 4, 1, 0, 21, 27, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.171854}
{'[2, 1, 6, 2, 5, 4, 1, 0, 21, 27, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.171811}
{'[2, 1, 6, 2, 5, 4, 1, 0, 21, 27, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.171645}
{'[2, 1, 6, 2, 5, 4, 1, 0, 21, 27, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.171873}
{'[2, 1, 6, 2, 5, 4, 1, 0, 21, 27, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.171959}
{'[2, 1, 6, 2, 5, 4, 1, 0, 21, 27, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.171592}
{'[2, 1, 6, 2, 5, 4, 1, 0, 21, 27, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.171639}
{'[2, 1, 6, 2, 5, 4, 1, 0, 21, 27, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.17219}
{'[2, 1, 6, 2, 5, 4, 1, 0, 21, 27, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.171565}
{'[2, 1, 6, 2, 5, 4, 1, 0, 21, 27, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.17151}
{'[2, 1, 6, 2, 5, 4, 1, 0, 21, 27, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.171736}
{'[2, 1, 6, 2, 5, 4, 1, 0, 21, 27, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.172525}
{'[2, 1, 6, 2, 5, 4, 1, 0, 21, 27, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.171663}
{'[2, 1, 6, 2, 5, 4, 1, 0, 21, 27, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.171561}
{'[2, 1, 6, 2, 5, 4, 1, 0, 21, 27, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.171299}
{'[2, 1, 6, 2, 5, 4, 1, 0, 21, 27, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.171949}

out:
 ["{'[2, 1, 6, 2, 5, 4, 1, 0, 21, 27, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.199155}", "{'[2, 1, 6, 2, 5, 4, 1, 0, 21, 27, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.198646}", "{'[2, 1, 6, 2, 5, 4, 1, 0, 21, 27, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.19014}", "{'[2, 1, 6, 2, 5, 4, 1, 0, 21, 27, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.172037}", "{'[2, 1, 6, 2, 5, 4, 1, 0, 21, 27, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.171602}", "{'[2, 1, 6, 2, 5, 4, 1, 0, 21, 27, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.172042}", "{'[2, 1, 6, 2, 5, 4, 1, 0, 21, 27, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.171767}", "{'[2, 1, 6, 2, 5, 4, 1, 0, 21, 27, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.17176}", "{'[2, 1, 6, 2, 5, 4, 1, 0, 21, 27, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.171771}", "{'[2, 1, 6, 2, 5, 4, 1, 0, 21, 27, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.171566}", "{'[2, 1, 6, 2, 5, 4, 1, 0, 21, 27, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.17157}", "{'[2, 1, 6, 2, 5, 4, 1, 0, 21, 27, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.172034}", "{'[2, 1, 6, 2, 5, 4, 1, 0, 21, 27, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.172041}", "{'[2, 1, 6, 2, 5, 4, 1, 0, 21, 27, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.172249}", "{'[2, 1, 6, 2, 5, 4, 1, 0, 21, 27, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.171854}", "{'[2, 1, 6, 2, 5, 4, 1, 0, 21, 27, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.171811}", "{'[2, 1, 6, 2, 5, 4, 1, 0, 21, 27, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.171645}", "{'[2, 1, 6, 2, 5, 4, 1, 0, 21, 27, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.171873}", "{'[2, 1, 6, 2, 5, 4, 1, 0, 21, 27, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.171959}", "{'[2, 1, 6, 2, 5, 4, 1, 0, 21, 27, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.171592}", "{'[2, 1, 6, 2, 5, 4, 1, 0, 21, 27, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.171639}", "{'[2, 1, 6, 2, 5, 4, 1, 0, 21, 27, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.17219}", "{'[2, 1, 6, 2, 5, 4, 1, 0, 21, 27, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.171565}", "{'[2, 1, 6, 2, 5, 4, 1, 0, 21, 27, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.17151}", "{'[2, 1, 6, 2, 5, 4, 1, 0, 21, 27, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.171736}", "{'[2, 1, 6, 2, 5, 4, 1, 0, 21, 27, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.172525}", "{'[2, 1, 6, 2, 5, 4, 1, 0, 21, 27, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.171663}", "{'[2, 1, 6, 2, 5, 4, 1, 0, 21, 27, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.171561}", "{'[2, 1, 6, 2, 5, 4, 1, 0, 21, 27, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.171299}", "{'[2, 1, 6, 2, 5, 4, 1, 0, 21, 27, 0, 3, 0, 1, 1, 1, 0, 1]' : 0.171949}"]
returning from 'run': {'[2, 1, 6, 2, 5, 4, 1, 0, 21, 27, 0, 3, 0, 1, 1, 1, 0, 1]': ([0.199155, 0.198646, 0.19014, 0.172037, 0.171602, 0.172042, 0.171767, 0.17176, 0.171771, 0.171566, 0.17157, 0.172034, 0.172041, 0.172249, 0.171854, 0.171811, 0.171645, 0.171873, 0.171959, 0.171592, 0.171639, 0.17219, 0.171565, 0.17151, 0.171736, 0.172525, 0.171663, 0.171561, 0.171299, 0.171949], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 1, 6, 2, 5, 4, 1, 0, 21, 27, 0, 3, 0, 1, 1, 1, 0, 1]': ([0.199155, 0.198646, 0.19014, 0.172037, 0.171602, 0.172042, 0.171767, 0.17176, 0.171771, 0.171566, 0.17157, 0.172034, 0.172041, 0.172249, 0.171854, 0.171811, 0.171645, 0.171873, 0.171959, 0.171592, 0.171639, 0.17219, 0.171565, 0.17151, 0.171736, 0.172525, 0.171663, 0.171561, 0.171299, 0.171949], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	32
        Max loop nest depth: 	4
        Additions: 		2721
        Multiplications: 	1258
        Divisions: 		0
        Logical: 		0
        Reads: 			5151
        Writes: 		847
        Comparisons:		32
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest64.exe __orio_perftest64.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest64.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest64.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest64.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest64.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		101
        Multiplications: 	12
        Divisions: 		0
        Logical: 		0
        Reads: 			247
        Writes: 		77
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest65.exe __orio_perftest65.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest65.exe  
Program Test Output: 
{'[2, 4, 6, 0, 5, 6, 0, 1, 21, 0, 0, 3, 0, 0, 0, 1, 1, 1]' : 0.22938}
{'[2, 4, 6, 0, 5, 6, 0, 1, 21, 0, 0, 3, 0, 0, 0, 1, 1, 1]' : 0.229271}
{'[2, 4, 6, 0, 5, 6, 0, 1, 21, 0, 0, 3, 0, 0, 0, 1, 1, 1]' : 0.217234}
{'[2, 4, 6, 0, 5, 6, 0, 1, 21, 0, 0, 3, 0, 0, 0, 1, 1, 1]' : 0.191571}
{'[2, 4, 6, 0, 5, 6, 0, 1, 21, 0, 0, 3, 0, 0, 0, 1, 1, 1]' : 0.191517}
{'[2, 4, 6, 0, 5, 6, 0, 1, 21, 0, 0, 3, 0, 0, 0, 1, 1, 1]' : 0.191824}
{'[2, 4, 6, 0, 5, 6, 0, 1, 21, 0, 0, 3, 0, 0, 0, 1, 1, 1]' : 0.191791}
{'[2, 4, 6, 0, 5, 6, 0, 1, 21, 0, 0, 3, 0, 0, 0, 1, 1, 1]' : 0.19174}
{'[2, 4, 6, 0, 5, 6, 0, 1, 21, 0, 0, 3, 0, 0, 0, 1, 1, 1]' : 0.191453}
{'[2, 4, 6, 0, 5, 6, 0, 1, 21, 0, 0, 3, 0, 0, 0, 1, 1, 1]' : 0.191483}
{'[2, 4, 6, 0, 5, 6, 0, 1, 21, 0, 0, 3, 0, 0, 0, 1, 1, 1]' : 0.191445}
{'[2, 4, 6, 0, 5, 6, 0, 1, 21, 0, 0, 3, 0, 0, 0, 1, 1, 1]' : 0.192118}
{'[2, 4, 6, 0, 5, 6, 0, 1, 21, 0, 0, 3, 0, 0, 0, 1, 1, 1]' : 0.192246}
{'[2, 4, 6, 0, 5, 6, 0, 1, 21, 0, 0, 3, 0, 0, 0, 1, 1, 1]' : 0.191704}
{'[2, 4, 6, 0, 5, 6, 0, 1, 21, 0, 0, 3, 0, 0, 0, 1, 1, 1]' : 0.191815}
{'[2, 4, 6, 0, 5, 6, 0, 1, 21, 0, 0, 3, 0, 0, 0, 1, 1, 1]' : 0.1916}
{'[2, 4, 6, 0, 5, 6, 0, 1, 21, 0, 0, 3, 0, 0, 0, 1, 1, 1]' : 0.191966}
{'[2, 4, 6, 0, 5, 6, 0, 1, 21, 0, 0, 3, 0, 0, 0, 1, 1, 1]' : 0.191938}
{'[2, 4, 6, 0, 5, 6, 0, 1, 21, 0, 0, 3, 0, 0, 0, 1, 1, 1]' : 0.191734}
{'[2, 4, 6, 0, 5, 6, 0, 1, 21, 0, 0, 3, 0, 0, 0, 1, 1, 1]' : 0.191943}
{'[2, 4, 6, 0, 5, 6, 0, 1, 21, 0, 0, 3, 0, 0, 0, 1, 1, 1]' : 0.191826}
{'[2, 4, 6, 0, 5, 6, 0, 1, 21, 0, 0, 3, 0, 0, 0, 1, 1, 1]' : 0.192965}
{'[2, 4, 6, 0, 5, 6, 0, 1, 21, 0, 0, 3, 0, 0, 0, 1, 1, 1]' : 0.197757}
{'[2, 4, 6, 0, 5, 6, 0, 1, 21, 0, 0, 3, 0, 0, 0, 1, 1, 1]' : 0.198008}
{'[2, 4, 6, 0, 5, 6, 0, 1, 21, 0, 0, 3, 0, 0, 0, 1, 1, 1]' : 0.197571}
{'[2, 4, 6, 0, 5, 6, 0, 1, 21, 0, 0, 3, 0, 0, 0, 1, 1, 1]' : 0.197825}
{'[2, 4, 6, 0, 5, 6, 0, 1, 21, 0, 0, 3, 0, 0, 0, 1, 1, 1]' : 0.197749}
{'[2, 4, 6, 0, 5, 6, 0, 1, 21, 0, 0, 3, 0, 0, 0, 1, 1, 1]' : 0.197474}
{'[2, 4, 6, 0, 5, 6, 0, 1, 21, 0, 0, 3, 0, 0, 0, 1, 1, 1]' : 0.198062}
{'[2, 4, 6, 0, 5, 6, 0, 1, 21, 0, 0, 3, 0, 0, 0, 1, 1, 1]' : 0.197704}

out:
 ["{'[2, 4, 6, 0, 5, 6, 0, 1, 21, 0, 0, 3, 0, 0, 0, 1, 1, 1]' : 0.22938}", "{'[2, 4, 6, 0, 5, 6, 0, 1, 21, 0, 0, 3, 0, 0, 0, 1, 1, 1]' : 0.229271}", "{'[2, 4, 6, 0, 5, 6, 0, 1, 21, 0, 0, 3, 0, 0, 0, 1, 1, 1]' : 0.217234}", "{'[2, 4, 6, 0, 5, 6, 0, 1, 21, 0, 0, 3, 0, 0, 0, 1, 1, 1]' : 0.191571}", "{'[2, 4, 6, 0, 5, 6, 0, 1, 21, 0, 0, 3, 0, 0, 0, 1, 1, 1]' : 0.191517}", "{'[2, 4, 6, 0, 5, 6, 0, 1, 21, 0, 0, 3, 0, 0, 0, 1, 1, 1]' : 0.191824}", "{'[2, 4, 6, 0, 5, 6, 0, 1, 21, 0, 0, 3, 0, 0, 0, 1, 1, 1]' : 0.191791}", "{'[2, 4, 6, 0, 5, 6, 0, 1, 21, 0, 0, 3, 0, 0, 0, 1, 1, 1]' : 0.19174}", "{'[2, 4, 6, 0, 5, 6, 0, 1, 21, 0, 0, 3, 0, 0, 0, 1, 1, 1]' : 0.191453}", "{'[2, 4, 6, 0, 5, 6, 0, 1, 21, 0, 0, 3, 0, 0, 0, 1, 1, 1]' : 0.191483}", "{'[2, 4, 6, 0, 5, 6, 0, 1, 21, 0, 0, 3, 0, 0, 0, 1, 1, 1]' : 0.191445}", "{'[2, 4, 6, 0, 5, 6, 0, 1, 21, 0, 0, 3, 0, 0, 0, 1, 1, 1]' : 0.192118}", "{'[2, 4, 6, 0, 5, 6, 0, 1, 21, 0, 0, 3, 0, 0, 0, 1, 1, 1]' : 0.192246}", "{'[2, 4, 6, 0, 5, 6, 0, 1, 21, 0, 0, 3, 0, 0, 0, 1, 1, 1]' : 0.191704}", "{'[2, 4, 6, 0, 5, 6, 0, 1, 21, 0, 0, 3, 0, 0, 0, 1, 1, 1]' : 0.191815}", "{'[2, 4, 6, 0, 5, 6, 0, 1, 21, 0, 0, 3, 0, 0, 0, 1, 1, 1]' : 0.1916}", "{'[2, 4, 6, 0, 5, 6, 0, 1, 21, 0, 0, 3, 0, 0, 0, 1, 1, 1]' : 0.191966}", "{'[2, 4, 6, 0, 5, 6, 0, 1, 21, 0, 0, 3, 0, 0, 0, 1, 1, 1]' : 0.191938}", "{'[2, 4, 6, 0, 5, 6, 0, 1, 21, 0, 0, 3, 0, 0, 0, 1, 1, 1]' : 0.191734}", "{'[2, 4, 6, 0, 5, 6, 0, 1, 21, 0, 0, 3, 0, 0, 0, 1, 1, 1]' : 0.191943}", "{'[2, 4, 6, 0, 5, 6, 0, 1, 21, 0, 0, 3, 0, 0, 0, 1, 1, 1]' : 0.191826}", "{'[2, 4, 6, 0, 5, 6, 0, 1, 21, 0, 0, 3, 0, 0, 0, 1, 1, 1]' : 0.192965}", "{'[2, 4, 6, 0, 5, 6, 0, 1, 21, 0, 0, 3, 0, 0, 0, 1, 1, 1]' : 0.197757}", "{'[2, 4, 6, 0, 5, 6, 0, 1, 21, 0, 0, 3, 0, 0, 0, 1, 1, 1]' : 0.198008}", "{'[2, 4, 6, 0, 5, 6, 0, 1, 21, 0, 0, 3, 0, 0, 0, 1, 1, 1]' : 0.197571}", "{'[2, 4, 6, 0, 5, 6, 0, 1, 21, 0, 0, 3, 0, 0, 0, 1, 1, 1]' : 0.197825}", "{'[2, 4, 6, 0, 5, 6, 0, 1, 21, 0, 0, 3, 0, 0, 0, 1, 1, 1]' : 0.197749}", "{'[2, 4, 6, 0, 5, 6, 0, 1, 21, 0, 0, 3, 0, 0, 0, 1, 1, 1]' : 0.197474}", "{'[2, 4, 6, 0, 5, 6, 0, 1, 21, 0, 0, 3, 0, 0, 0, 1, 1, 1]' : 0.198062}", "{'[2, 4, 6, 0, 5, 6, 0, 1, 21, 0, 0, 3, 0, 0, 0, 1, 1, 1]' : 0.197704}"]
returning from 'run': {'[2, 4, 6, 0, 5, 6, 0, 1, 21, 0, 0, 3, 0, 0, 0, 1, 1, 1]': ([0.22938, 0.229271, 0.217234, 0.191571, 0.191517, 0.191824, 0.191791, 0.19174, 0.191453, 0.191483, 0.191445, 0.192118, 0.192246, 0.191704, 0.191815, 0.1916, 0.191966, 0.191938, 0.191734, 0.191943, 0.191826, 0.192965, 0.197757, 0.198008, 0.197571, 0.197825, 0.197749, 0.197474, 0.198062, 0.197704], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 4, 6, 0, 5, 6, 0, 1, 21, 0, 0, 3, 0, 0, 0, 1, 1, 1]': ([0.22938, 0.229271, 0.217234, 0.191571, 0.191517, 0.191824, 0.191791, 0.19174, 0.191453, 0.191483, 0.191445, 0.192118, 0.192246, 0.191704, 0.191815, 0.1916, 0.191966, 0.191938, 0.191734, 0.191943, 0.191826, 0.192965, 0.197757, 0.198008, 0.197571, 0.197825, 0.197749, 0.197474, 0.198062, 0.197704], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	150
        Max loop nest depth: 	6
        Additions: 		3622
        Multiplications: 	756
        Divisions: 		0
        Logical: 		0
        Reads: 			6210
        Writes: 		899
        Comparisons:		150
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest66.exe __orio_perftest66.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest66.exe  
Program Test Output: 
{'[6, 6, 6, 5, 5, 6, 0, 1, 21, 29, 0, 3, 2, 0, 0, 0, 1, 1]' : 0.139212}
{'[6, 6, 6, 5, 5, 6, 0, 1, 21, 29, 0, 3, 2, 0, 0, 0, 1, 1]' : 0.138791}
{'[6, 6, 6, 5, 5, 6, 0, 1, 21, 29, 0, 3, 2, 0, 0, 0, 1, 1]' : 0.138703}
{'[6, 6, 6, 5, 5, 6, 0, 1, 21, 29, 0, 3, 2, 0, 0, 0, 1, 1]' : 0.139202}
{'[6, 6, 6, 5, 5, 6, 0, 1, 21, 29, 0, 3, 2, 0, 0, 0, 1, 1]' : 0.138357}
{'[6, 6, 6, 5, 5, 6, 0, 1, 21, 29, 0, 3, 2, 0, 0, 0, 1, 1]' : 0.138432}
{'[6, 6, 6, 5, 5, 6, 0, 1, 21, 29, 0, 3, 2, 0, 0, 0, 1, 1]' : 0.13861}
{'[6, 6, 6, 5, 5, 6, 0, 1, 21, 29, 0, 3, 2, 0, 0, 0, 1, 1]' : 0.13861}
{'[6, 6, 6, 5, 5, 6, 0, 1, 21, 29, 0, 3, 2, 0, 0, 0, 1, 1]' : 0.138888}
{'[6, 6, 6, 5, 5, 6, 0, 1, 21, 29, 0, 3, 2, 0, 0, 0, 1, 1]' : 0.139215}
{'[6, 6, 6, 5, 5, 6, 0, 1, 21, 29, 0, 3, 2, 0, 0, 0, 1, 1]' : 0.138294}
{'[6, 6, 6, 5, 5, 6, 0, 1, 21, 29, 0, 3, 2, 0, 0, 0, 1, 1]' : 0.13873}
{'[6, 6, 6, 5, 5, 6, 0, 1, 21, 29, 0, 3, 2, 0, 0, 0, 1, 1]' : 0.139343}
{'[6, 6, 6, 5, 5, 6, 0, 1, 21, 29, 0, 3, 2, 0, 0, 0, 1, 1]' : 0.138467}
{'[6, 6, 6, 5, 5, 6, 0, 1, 21, 29, 0, 3, 2, 0, 0, 0, 1, 1]' : 0.138534}
{'[6, 6, 6, 5, 5, 6, 0, 1, 21, 29, 0, 3, 2, 0, 0, 0, 1, 1]' : 0.138622}
{'[6, 6, 6, 5, 5, 6, 0, 1, 21, 29, 0, 3, 2, 0, 0, 0, 1, 1]' : 0.138912}
{'[6, 6, 6, 5, 5, 6, 0, 1, 21, 29, 0, 3, 2, 0, 0, 0, 1, 1]' : 0.138742}
{'[6, 6, 6, 5, 5, 6, 0, 1, 21, 29, 0, 3, 2, 0, 0, 0, 1, 1]' : 0.13807}
{'[6, 6, 6, 5, 5, 6, 0, 1, 21, 29, 0, 3, 2, 0, 0, 0, 1, 1]' : 0.138803}
{'[6, 6, 6, 5, 5, 6, 0, 1, 21, 29, 0, 3, 2, 0, 0, 0, 1, 1]' : 0.138511}
{'[6, 6, 6, 5, 5, 6, 0, 1, 21, 29, 0, 3, 2, 0, 0, 0, 1, 1]' : 0.138331}
{'[6, 6, 6, 5, 5, 6, 0, 1, 21, 29, 0, 3, 2, 0, 0, 0, 1, 1]' : 0.138379}
{'[6, 6, 6, 5, 5, 6, 0, 1, 21, 29, 0, 3, 2, 0, 0, 0, 1, 1]' : 0.138688}
{'[6, 6, 6, 5, 5, 6, 0, 1, 21, 29, 0, 3, 2, 0, 0, 0, 1, 1]' : 0.138876}
{'[6, 6, 6, 5, 5, 6, 0, 1, 21, 29, 0, 3, 2, 0, 0, 0, 1, 1]' : 0.138731}
{'[6, 6, 6, 5, 5, 6, 0, 1, 21, 29, 0, 3, 2, 0, 0, 0, 1, 1]' : 0.138753}
{'[6, 6, 6, 5, 5, 6, 0, 1, 21, 29, 0, 3, 2, 0, 0, 0, 1, 1]' : 0.138728}
{'[6, 6, 6, 5, 5, 6, 0, 1, 21, 29, 0, 3, 2, 0, 0, 0, 1, 1]' : 0.13909}
{'[6, 6, 6, 5, 5, 6, 0, 1, 21, 29, 0, 3, 2, 0, 0, 0, 1, 1]' : 0.138345}

out:
 ["{'[6, 6, 6, 5, 5, 6, 0, 1, 21, 29, 0, 3, 2, 0, 0, 0, 1, 1]' : 0.139212}", "{'[6, 6, 6, 5, 5, 6, 0, 1, 21, 29, 0, 3, 2, 0, 0, 0, 1, 1]' : 0.138791}", "{'[6, 6, 6, 5, 5, 6, 0, 1, 21, 29, 0, 3, 2, 0, 0, 0, 1, 1]' : 0.138703}", "{'[6, 6, 6, 5, 5, 6, 0, 1, 21, 29, 0, 3, 2, 0, 0, 0, 1, 1]' : 0.139202}", "{'[6, 6, 6, 5, 5, 6, 0, 1, 21, 29, 0, 3, 2, 0, 0, 0, 1, 1]' : 0.138357}", "{'[6, 6, 6, 5, 5, 6, 0, 1, 21, 29, 0, 3, 2, 0, 0, 0, 1, 1]' : 0.138432}", "{'[6, 6, 6, 5, 5, 6, 0, 1, 21, 29, 0, 3, 2, 0, 0, 0, 1, 1]' : 0.13861}", "{'[6, 6, 6, 5, 5, 6, 0, 1, 21, 29, 0, 3, 2, 0, 0, 0, 1, 1]' : 0.13861}", "{'[6, 6, 6, 5, 5, 6, 0, 1, 21, 29, 0, 3, 2, 0, 0, 0, 1, 1]' : 0.138888}", "{'[6, 6, 6, 5, 5, 6, 0, 1, 21, 29, 0, 3, 2, 0, 0, 0, 1, 1]' : 0.139215}", "{'[6, 6, 6, 5, 5, 6, 0, 1, 21, 29, 0, 3, 2, 0, 0, 0, 1, 1]' : 0.138294}", "{'[6, 6, 6, 5, 5, 6, 0, 1, 21, 29, 0, 3, 2, 0, 0, 0, 1, 1]' : 0.13873}", "{'[6, 6, 6, 5, 5, 6, 0, 1, 21, 29, 0, 3, 2, 0, 0, 0, 1, 1]' : 0.139343}", "{'[6, 6, 6, 5, 5, 6, 0, 1, 21, 29, 0, 3, 2, 0, 0, 0, 1, 1]' : 0.138467}", "{'[6, 6, 6, 5, 5, 6, 0, 1, 21, 29, 0, 3, 2, 0, 0, 0, 1, 1]' : 0.138534}", "{'[6, 6, 6, 5, 5, 6, 0, 1, 21, 29, 0, 3, 2, 0, 0, 0, 1, 1]' : 0.138622}", "{'[6, 6, 6, 5, 5, 6, 0, 1, 21, 29, 0, 3, 2, 0, 0, 0, 1, 1]' : 0.138912}", "{'[6, 6, 6, 5, 5, 6, 0, 1, 21, 29, 0, 3, 2, 0, 0, 0, 1, 1]' : 0.138742}", "{'[6, 6, 6, 5, 5, 6, 0, 1, 21, 29, 0, 3, 2, 0, 0, 0, 1, 1]' : 0.13807}", "{'[6, 6, 6, 5, 5, 6, 0, 1, 21, 29, 0, 3, 2, 0, 0, 0, 1, 1]' : 0.138803}", "{'[6, 6, 6, 5, 5, 6, 0, 1, 21, 29, 0, 3, 2, 0, 0, 0, 1, 1]' : 0.138511}", "{'[6, 6, 6, 5, 5, 6, 0, 1, 21, 29, 0, 3, 2, 0, 0, 0, 1, 1]' : 0.138331}", "{'[6, 6, 6, 5, 5, 6, 0, 1, 21, 29, 0, 3, 2, 0, 0, 0, 1, 1]' : 0.138379}", "{'[6, 6, 6, 5, 5, 6, 0, 1, 21, 29, 0, 3, 2, 0, 0, 0, 1, 1]' : 0.138688}", "{'[6, 6, 6, 5, 5, 6, 0, 1, 21, 29, 0, 3, 2, 0, 0, 0, 1, 1]' : 0.138876}", "{'[6, 6, 6, 5, 5, 6, 0, 1, 21, 29, 0, 3, 2, 0, 0, 0, 1, 1]' : 0.138731}", "{'[6, 6, 6, 5, 5, 6, 0, 1, 21, 29, 0, 3, 2, 0, 0, 0, 1, 1]' : 0.138753}", "{'[6, 6, 6, 5, 5, 6, 0, 1, 21, 29, 0, 3, 2, 0, 0, 0, 1, 1]' : 0.138728}", "{'[6, 6, 6, 5, 5, 6, 0, 1, 21, 29, 0, 3, 2, 0, 0, 0, 1, 1]' : 0.13909}", "{'[6, 6, 6, 5, 5, 6, 0, 1, 21, 29, 0, 3, 2, 0, 0, 0, 1, 1]' : 0.138345}"]
returning from 'run': {'[6, 6, 6, 5, 5, 6, 0, 1, 21, 29, 0, 3, 2, 0, 0, 0, 1, 1]': ([0.139212, 0.138791, 0.138703, 0.139202, 0.138357, 0.138432, 0.13861, 0.13861, 0.138888, 0.139215, 0.138294, 0.13873, 0.139343, 0.138467, 0.138534, 0.138622, 0.138912, 0.138742, 0.13807, 0.138803, 0.138511, 0.138331, 0.138379, 0.138688, 0.138876, 0.138731, 0.138753, 0.138728, 0.13909, 0.138345], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 6, 5, 5, 6, 0, 1, 21, 29, 0, 3, 2, 0, 0, 0, 1, 1]': ([0.139212, 0.138791, 0.138703, 0.139202, 0.138357, 0.138432, 0.13861, 0.13861, 0.138888, 0.139215, 0.138294, 0.13873, 0.139343, 0.138467, 0.138534, 0.138622, 0.138912, 0.138742, 0.13807, 0.138803, 0.138511, 0.138331, 0.138379, 0.138688, 0.138876, 0.138731, 0.138753, 0.138728, 0.13909, 0.138345], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	123
        Max loop nest depth: 	5
        Additions: 		2158
        Multiplications: 	572
        Divisions: 		0
        Logical: 		0
        Reads: 			4543
        Writes: 		986
        Comparisons:		123
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest67.exe __orio_perftest67.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest67.exe  
Program Test Output: 
{'[0, 6, 6, 5, 5, 0, 1, 1, 21, 20, 0, 3, 0, 1, 0, 1, 1, 1]' : 0.158019}
{'[0, 6, 6, 5, 5, 0, 1, 1, 21, 20, 0, 3, 0, 1, 0, 1, 1, 1]' : 0.158069}
{'[0, 6, 6, 5, 5, 0, 1, 1, 21, 20, 0, 3, 0, 1, 0, 1, 1, 1]' : 0.15788}
{'[0, 6, 6, 5, 5, 0, 1, 1, 21, 20, 0, 3, 0, 1, 0, 1, 1, 1]' : 0.158097}
{'[0, 6, 6, 5, 5, 0, 1, 1, 21, 20, 0, 3, 0, 1, 0, 1, 1, 1]' : 0.160312}
{'[0, 6, 6, 5, 5, 0, 1, 1, 21, 20, 0, 3, 0, 1, 0, 1, 1, 1]' : 0.159676}
{'[0, 6, 6, 5, 5, 0, 1, 1, 21, 20, 0, 3, 0, 1, 0, 1, 1, 1]' : 0.159553}
{'[0, 6, 6, 5, 5, 0, 1, 1, 21, 20, 0, 3, 0, 1, 0, 1, 1, 1]' : 0.159713}
{'[0, 6, 6, 5, 5, 0, 1, 1, 21, 20, 0, 3, 0, 1, 0, 1, 1, 1]' : 0.159753}
{'[0, 6, 6, 5, 5, 0, 1, 1, 21, 20, 0, 3, 0, 1, 0, 1, 1, 1]' : 0.159574}
{'[0, 6, 6, 5, 5, 0, 1, 1, 21, 20, 0, 3, 0, 1, 0, 1, 1, 1]' : 0.159801}
{'[0, 6, 6, 5, 5, 0, 1, 1, 21, 20, 0, 3, 0, 1, 0, 1, 1, 1]' : 0.159774}
{'[0, 6, 6, 5, 5, 0, 1, 1, 21, 20, 0, 3, 0, 1, 0, 1, 1, 1]' : 0.159772}
{'[0, 6, 6, 5, 5, 0, 1, 1, 21, 20, 0, 3, 0, 1, 0, 1, 1, 1]' : 0.159785}
{'[0, 6, 6, 5, 5, 0, 1, 1, 21, 20, 0, 3, 0, 1, 0, 1, 1, 1]' : 0.159541}
{'[0, 6, 6, 5, 5, 0, 1, 1, 21, 20, 0, 3, 0, 1, 0, 1, 1, 1]' : 0.159539}
{'[0, 6, 6, 5, 5, 0, 1, 1, 21, 20, 0, 3, 0, 1, 0, 1, 1, 1]' : 0.15962}
{'[0, 6, 6, 5, 5, 0, 1, 1, 21, 20, 0, 3, 0, 1, 0, 1, 1, 1]' : 0.159805}
{'[0, 6, 6, 5, 5, 0, 1, 1, 21, 20, 0, 3, 0, 1, 0, 1, 1, 1]' : 0.160001}
{'[0, 6, 6, 5, 5, 0, 1, 1, 21, 20, 0, 3, 0, 1, 0, 1, 1, 1]' : 0.159557}
{'[0, 6, 6, 5, 5, 0, 1, 1, 21, 20, 0, 3, 0, 1, 0, 1, 1, 1]' : 0.160053}
{'[0, 6, 6, 5, 5, 0, 1, 1, 21, 20, 0, 3, 0, 1, 0, 1, 1, 1]' : 0.159625}
{'[0, 6, 6, 5, 5, 0, 1, 1, 21, 20, 0, 3, 0, 1, 0, 1, 1, 1]' : 0.159612}
{'[0, 6, 6, 5, 5, 0, 1, 1, 21, 20, 0, 3, 0, 1, 0, 1, 1, 1]' : 0.159605}
{'[0, 6, 6, 5, 5, 0, 1, 1, 21, 20, 0, 3, 0, 1, 0, 1, 1, 1]' : 0.15984}
{'[0, 6, 6, 5, 5, 0, 1, 1, 21, 20, 0, 3, 0, 1, 0, 1, 1, 1]' : 0.159834}
{'[0, 6, 6, 5, 5, 0, 1, 1, 21, 20, 0, 3, 0, 1, 0, 1, 1, 1]' : 0.159701}
{'[0, 6, 6, 5, 5, 0, 1, 1, 21, 20, 0, 3, 0, 1, 0, 1, 1, 1]' : 0.159644}
{'[0, 6, 6, 5, 5, 0, 1, 1, 21, 20, 0, 3, 0, 1, 0, 1, 1, 1]' : 0.164496}
{'[0, 6, 6, 5, 5, 0, 1, 1, 21, 20, 0, 3, 0, 1, 0, 1, 1, 1]' : 0.164899}

out:
 ["{'[0, 6, 6, 5, 5, 0, 1, 1, 21, 20, 0, 3, 0, 1, 0, 1, 1, 1]' : 0.158019}", "{'[0, 6, 6, 5, 5, 0, 1, 1, 21, 20, 0, 3, 0, 1, 0, 1, 1, 1]' : 0.158069}", "{'[0, 6, 6, 5, 5, 0, 1, 1, 21, 20, 0, 3, 0, 1, 0, 1, 1, 1]' : 0.15788}", "{'[0, 6, 6, 5, 5, 0, 1, 1, 21, 20, 0, 3, 0, 1, 0, 1, 1, 1]' : 0.158097}", "{'[0, 6, 6, 5, 5, 0, 1, 1, 21, 20, 0, 3, 0, 1, 0, 1, 1, 1]' : 0.160312}", "{'[0, 6, 6, 5, 5, 0, 1, 1, 21, 20, 0, 3, 0, 1, 0, 1, 1, 1]' : 0.159676}", "{'[0, 6, 6, 5, 5, 0, 1, 1, 21, 20, 0, 3, 0, 1, 0, 1, 1, 1]' : 0.159553}", "{'[0, 6, 6, 5, 5, 0, 1, 1, 21, 20, 0, 3, 0, 1, 0, 1, 1, 1]' : 0.159713}", "{'[0, 6, 6, 5, 5, 0, 1, 1, 21, 20, 0, 3, 0, 1, 0, 1, 1, 1]' : 0.159753}", "{'[0, 6, 6, 5, 5, 0, 1, 1, 21, 20, 0, 3, 0, 1, 0, 1, 1, 1]' : 0.159574}", "{'[0, 6, 6, 5, 5, 0, 1, 1, 21, 20, 0, 3, 0, 1, 0, 1, 1, 1]' : 0.159801}", "{'[0, 6, 6, 5, 5, 0, 1, 1, 21, 20, 0, 3, 0, 1, 0, 1, 1, 1]' : 0.159774}", "{'[0, 6, 6, 5, 5, 0, 1, 1, 21, 20, 0, 3, 0, 1, 0, 1, 1, 1]' : 0.159772}", "{'[0, 6, 6, 5, 5, 0, 1, 1, 21, 20, 0, 3, 0, 1, 0, 1, 1, 1]' : 0.159785}", "{'[0, 6, 6, 5, 5, 0, 1, 1, 21, 20, 0, 3, 0, 1, 0, 1, 1, 1]' : 0.159541}", "{'[0, 6, 6, 5, 5, 0, 1, 1, 21, 20, 0, 3, 0, 1, 0, 1, 1, 1]' : 0.159539}", "{'[0, 6, 6, 5, 5, 0, 1, 1, 21, 20, 0, 3, 0, 1, 0, 1, 1, 1]' : 0.15962}", "{'[0, 6, 6, 5, 5, 0, 1, 1, 21, 20, 0, 3, 0, 1, 0, 1, 1, 1]' : 0.159805}", "{'[0, 6, 6, 5, 5, 0, 1, 1, 21, 20, 0, 3, 0, 1, 0, 1, 1, 1]' : 0.160001}", "{'[0, 6, 6, 5, 5, 0, 1, 1, 21, 20, 0, 3, 0, 1, 0, 1, 1, 1]' : 0.159557}", "{'[0, 6, 6, 5, 5, 0, 1, 1, 21, 20, 0, 3, 0, 1, 0, 1, 1, 1]' : 0.160053}", "{'[0, 6, 6, 5, 5, 0, 1, 1, 21, 20, 0, 3, 0, 1, 0, 1, 1, 1]' : 0.159625}", "{'[0, 6, 6, 5, 5, 0, 1, 1, 21, 20, 0, 3, 0, 1, 0, 1, 1, 1]' : 0.159612}", "{'[0, 6, 6, 5, 5, 0, 1, 1, 21, 20, 0, 3, 0, 1, 0, 1, 1, 1]' : 0.159605}", "{'[0, 6, 6, 5, 5, 0, 1, 1, 21, 20, 0, 3, 0, 1, 0, 1, 1, 1]' : 0.15984}", "{'[0, 6, 6, 5, 5, 0, 1, 1, 21, 20, 0, 3, 0, 1, 0, 1, 1, 1]' : 0.159834}", "{'[0, 6, 6, 5, 5, 0, 1, 1, 21, 20, 0, 3, 0, 1, 0, 1, 1, 1]' : 0.159701}", "{'[0, 6, 6, 5, 5, 0, 1, 1, 21, 20, 0, 3, 0, 1, 0, 1, 1, 1]' : 0.159644}", "{'[0, 6, 6, 5, 5, 0, 1, 1, 21, 20, 0, 3, 0, 1, 0, 1, 1, 1]' : 0.164496}", "{'[0, 6, 6, 5, 5, 0, 1, 1, 21, 20, 0, 3, 0, 1, 0, 1, 1, 1]' : 0.164899}"]
returning from 'run': {'[0, 6, 6, 5, 5, 0, 1, 1, 21, 20, 0, 3, 0, 1, 0, 1, 1, 1]': ([0.158019, 0.158069, 0.15788, 0.158097, 0.160312, 0.159676, 0.159553, 0.159713, 0.159753, 0.159574, 0.159801, 0.159774, 0.159772, 0.159785, 0.159541, 0.159539, 0.15962, 0.159805, 0.160001, 0.159557, 0.160053, 0.159625, 0.159612, 0.159605, 0.15984, 0.159834, 0.159701, 0.159644, 0.164496, 0.164899], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 6, 6, 5, 5, 0, 1, 1, 21, 20, 0, 3, 0, 1, 0, 1, 1, 1]': ([0.158019, 0.158069, 0.15788, 0.158097, 0.160312, 0.159676, 0.159553, 0.159713, 0.159753, 0.159574, 0.159801, 0.159774, 0.159772, 0.159785, 0.159541, 0.159539, 0.15962, 0.159805, 0.160001, 0.159557, 0.160053, 0.159625, 0.159612, 0.159605, 0.15984, 0.159834, 0.159701, 0.159644, 0.164496, 0.164899], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	28
        Max loop nest depth: 	5
        Additions: 		547
        Multiplications: 	144
        Divisions: 		0
        Logical: 		0
        Reads: 			1058
        Writes: 		175
        Comparisons:		28
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest68.exe __orio_perftest68.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest68.exe  
Program Test Output: 
{'[4, 0, 6, 5, 5, 0, 1, 0, 21, 10, 0, 3, 0, 0, 0, 0, 0, 0]' : 0.160516}
{'[4, 0, 6, 5, 5, 0, 1, 0, 21, 10, 0, 3, 0, 0, 0, 0, 0, 0]' : 0.160545}
{'[4, 0, 6, 5, 5, 0, 1, 0, 21, 10, 0, 3, 0, 0, 0, 0, 0, 0]' : 0.151912}
{'[4, 0, 6, 5, 5, 0, 1, 0, 21, 10, 0, 3, 0, 0, 0, 0, 0, 0]' : 0.135787}
{'[4, 0, 6, 5, 5, 0, 1, 0, 21, 10, 0, 3, 0, 0, 0, 0, 0, 0]' : 0.136028}
{'[4, 0, 6, 5, 5, 0, 1, 0, 21, 10, 0, 3, 0, 0, 0, 0, 0, 0]' : 0.136128}
{'[4, 0, 6, 5, 5, 0, 1, 0, 21, 10, 0, 3, 0, 0, 0, 0, 0, 0]' : 0.136163}
{'[4, 0, 6, 5, 5, 0, 1, 0, 21, 10, 0, 3, 0, 0, 0, 0, 0, 0]' : 0.135792}
{'[4, 0, 6, 5, 5, 0, 1, 0, 21, 10, 0, 3, 0, 0, 0, 0, 0, 0]' : 0.135993}
{'[4, 0, 6, 5, 5, 0, 1, 0, 21, 10, 0, 3, 0, 0, 0, 0, 0, 0]' : 0.1357}
{'[4, 0, 6, 5, 5, 0, 1, 0, 21, 10, 0, 3, 0, 0, 0, 0, 0, 0]' : 0.135786}
{'[4, 0, 6, 5, 5, 0, 1, 0, 21, 10, 0, 3, 0, 0, 0, 0, 0, 0]' : 0.135729}
{'[4, 0, 6, 5, 5, 0, 1, 0, 21, 10, 0, 3, 0, 0, 0, 0, 0, 0]' : 0.135838}
{'[4, 0, 6, 5, 5, 0, 1, 0, 21, 10, 0, 3, 0, 0, 0, 0, 0, 0]' : 0.136255}
{'[4, 0, 6, 5, 5, 0, 1, 0, 21, 10, 0, 3, 0, 0, 0, 0, 0, 0]' : 0.136241}
{'[4, 0, 6, 5, 5, 0, 1, 0, 21, 10, 0, 3, 0, 0, 0, 0, 0, 0]' : 0.13609}
{'[4, 0, 6, 5, 5, 0, 1, 0, 21, 10, 0, 3, 0, 0, 0, 0, 0, 0]' : 0.135892}
{'[4, 0, 6, 5, 5, 0, 1, 0, 21, 10, 0, 3, 0, 0, 0, 0, 0, 0]' : 0.135803}
{'[4, 0, 6, 5, 5, 0, 1, 0, 21, 10, 0, 3, 0, 0, 0, 0, 0, 0]' : 0.135792}
{'[4, 0, 6, 5, 5, 0, 1, 0, 21, 10, 0, 3, 0, 0, 0, 0, 0, 0]' : 0.136179}
{'[4, 0, 6, 5, 5, 0, 1, 0, 21, 10, 0, 3, 0, 0, 0, 0, 0, 0]' : 0.135837}
{'[4, 0, 6, 5, 5, 0, 1, 0, 21, 10, 0, 3, 0, 0, 0, 0, 0, 0]' : 0.135975}
{'[4, 0, 6, 5, 5, 0, 1, 0, 21, 10, 0, 3, 0, 0, 0, 0, 0, 0]' : 0.136258}
{'[4, 0, 6, 5, 5, 0, 1, 0, 21, 10, 0, 3, 0, 0, 0, 0, 0, 0]' : 0.135699}
{'[4, 0, 6, 5, 5, 0, 1, 0, 21, 10, 0, 3, 0, 0, 0, 0, 0, 0]' : 0.135783}
{'[4, 0, 6, 5, 5, 0, 1, 0, 21, 10, 0, 3, 0, 0, 0, 0, 0, 0]' : 0.135779}
{'[4, 0, 6, 5, 5, 0, 1, 0, 21, 10, 0, 3, 0, 0, 0, 0, 0, 0]' : 0.135789}
{'[4, 0, 6, 5, 5, 0, 1, 0, 21, 10, 0, 3, 0, 0, 0, 0, 0, 0]' : 0.135912}
{'[4, 0, 6, 5, 5, 0, 1, 0, 21, 10, 0, 3, 0, 0, 0, 0, 0, 0]' : 0.135998}
{'[4, 0, 6, 5, 5, 0, 1, 0, 21, 10, 0, 3, 0, 0, 0, 0, 0, 0]' : 0.135892}

out:
 ["{'[4, 0, 6, 5, 5, 0, 1, 0, 21, 10, 0, 3, 0, 0, 0, 0, 0, 0]' : 0.160516}", "{'[4, 0, 6, 5, 5, 0, 1, 0, 21, 10, 0, 3, 0, 0, 0, 0, 0, 0]' : 0.160545}", "{'[4, 0, 6, 5, 5, 0, 1, 0, 21, 10, 0, 3, 0, 0, 0, 0, 0, 0]' : 0.151912}", "{'[4, 0, 6, 5, 5, 0, 1, 0, 21, 10, 0, 3, 0, 0, 0, 0, 0, 0]' : 0.135787}", "{'[4, 0, 6, 5, 5, 0, 1, 0, 21, 10, 0, 3, 0, 0, 0, 0, 0, 0]' : 0.136028}", "{'[4, 0, 6, 5, 5, 0, 1, 0, 21, 10, 0, 3, 0, 0, 0, 0, 0, 0]' : 0.136128}", "{'[4, 0, 6, 5, 5, 0, 1, 0, 21, 10, 0, 3, 0, 0, 0, 0, 0, 0]' : 0.136163}", "{'[4, 0, 6, 5, 5, 0, 1, 0, 21, 10, 0, 3, 0, 0, 0, 0, 0, 0]' : 0.135792}", "{'[4, 0, 6, 5, 5, 0, 1, 0, 21, 10, 0, 3, 0, 0, 0, 0, 0, 0]' : 0.135993}", "{'[4, 0, 6, 5, 5, 0, 1, 0, 21, 10, 0, 3, 0, 0, 0, 0, 0, 0]' : 0.1357}", "{'[4, 0, 6, 5, 5, 0, 1, 0, 21, 10, 0, 3, 0, 0, 0, 0, 0, 0]' : 0.135786}", "{'[4, 0, 6, 5, 5, 0, 1, 0, 21, 10, 0, 3, 0, 0, 0, 0, 0, 0]' : 0.135729}", "{'[4, 0, 6, 5, 5, 0, 1, 0, 21, 10, 0, 3, 0, 0, 0, 0, 0, 0]' : 0.135838}", "{'[4, 0, 6, 5, 5, 0, 1, 0, 21, 10, 0, 3, 0, 0, 0, 0, 0, 0]' : 0.136255}", "{'[4, 0, 6, 5, 5, 0, 1, 0, 21, 10, 0, 3, 0, 0, 0, 0, 0, 0]' : 0.136241}", "{'[4, 0, 6, 5, 5, 0, 1, 0, 21, 10, 0, 3, 0, 0, 0, 0, 0, 0]' : 0.13609}", "{'[4, 0, 6, 5, 5, 0, 1, 0, 21, 10, 0, 3, 0, 0, 0, 0, 0, 0]' : 0.135892}", "{'[4, 0, 6, 5, 5, 0, 1, 0, 21, 10, 0, 3, 0, 0, 0, 0, 0, 0]' : 0.135803}", "{'[4, 0, 6, 5, 5, 0, 1, 0, 21, 10, 0, 3, 0, 0, 0, 0, 0, 0]' : 0.135792}", "{'[4, 0, 6, 5, 5, 0, 1, 0, 21, 10, 0, 3, 0, 0, 0, 0, 0, 0]' : 0.136179}", "{'[4, 0, 6, 5, 5, 0, 1, 0, 21, 10, 0, 3, 0, 0, 0, 0, 0, 0]' : 0.135837}", "{'[4, 0, 6, 5, 5, 0, 1, 0, 21, 10, 0, 3, 0, 0, 0, 0, 0, 0]' : 0.135975}", "{'[4, 0, 6, 5, 5, 0, 1, 0, 21, 10, 0, 3, 0, 0, 0, 0, 0, 0]' : 0.136258}", "{'[4, 0, 6, 5, 5, 0, 1, 0, 21, 10, 0, 3, 0, 0, 0, 0, 0, 0]' : 0.135699}", "{'[4, 0, 6, 5, 5, 0, 1, 0, 21, 10, 0, 3, 0, 0, 0, 0, 0, 0]' : 0.135783}", "{'[4, 0, 6, 5, 5, 0, 1, 0, 21, 10, 0, 3, 0, 0, 0, 0, 0, 0]' : 0.135779}", "{'[4, 0, 6, 5, 5, 0, 1, 0, 21, 10, 0, 3, 0, 0, 0, 0, 0, 0]' : 0.135789}", "{'[4, 0, 6, 5, 5, 0, 1, 0, 21, 10, 0, 3, 0, 0, 0, 0, 0, 0]' : 0.135912}", "{'[4, 0, 6, 5, 5, 0, 1, 0, 21, 10, 0, 3, 0, 0, 0, 0, 0, 0]' : 0.135998}", "{'[4, 0, 6, 5, 5, 0, 1, 0, 21, 10, 0, 3, 0, 0, 0, 0, 0, 0]' : 0.135892}"]
returning from 'run': {'[4, 0, 6, 5, 5, 0, 1, 0, 21, 10, 0, 3, 0, 0, 0, 0, 0, 0]': ([0.160516, 0.160545, 0.151912, 0.135787, 0.136028, 0.136128, 0.136163, 0.135792, 0.135993, 0.1357, 0.135786, 0.135729, 0.135838, 0.136255, 0.136241, 0.13609, 0.135892, 0.135803, 0.135792, 0.136179, 0.135837, 0.135975, 0.136258, 0.135699, 0.135783, 0.135779, 0.135789, 0.135912, 0.135998, 0.135892], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 0, 6, 5, 5, 0, 1, 0, 21, 10, 0, 3, 0, 0, 0, 0, 0, 0]': ([0.160516, 0.160545, 0.151912, 0.135787, 0.136028, 0.136128, 0.136163, 0.135792, 0.135993, 0.1357, 0.135786, 0.135729, 0.135838, 0.136255, 0.136241, 0.13609, 0.135892, 0.135803, 0.135792, 0.136179, 0.135837, 0.135975, 0.136258, 0.135699, 0.135783, 0.135779, 0.135789, 0.135912, 0.135998, 0.135892], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	55
        Max loop nest depth: 	6
        Additions: 		1279
        Multiplications: 	476
        Divisions: 		0
        Logical: 		0
        Reads: 			2819
        Writes: 		614
        Comparisons:		55
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest69.exe __orio_perftest69.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest69.exe  
Program Test Output: 
{'[3, 6, 6, 2, 5, 6, 1, 0, 21, 7, 0, 3, 1, 0, 1, 1, 1, 1]' : 0.116969}
{'[3, 6, 6, 2, 5, 6, 1, 0, 21, 7, 0, 3, 1, 0, 1, 1, 1, 1]' : 0.117032}
{'[3, 6, 6, 2, 5, 6, 1, 0, 21, 7, 0, 3, 1, 0, 1, 1, 1, 1]' : 0.116913}
{'[3, 6, 6, 2, 5, 6, 1, 0, 21, 7, 0, 3, 1, 0, 1, 1, 1, 1]' : 0.106554}
{'[3, 6, 6, 2, 5, 6, 1, 0, 21, 7, 0, 3, 1, 0, 1, 1, 1, 1]' : 0.100169}
{'[3, 6, 6, 2, 5, 6, 1, 0, 21, 7, 0, 3, 1, 0, 1, 1, 1, 1]' : 0.100081}
{'[3, 6, 6, 2, 5, 6, 1, 0, 21, 7, 0, 3, 1, 0, 1, 1, 1, 1]' : 0.100154}
{'[3, 6, 6, 2, 5, 6, 1, 0, 21, 7, 0, 3, 1, 0, 1, 1, 1, 1]' : 0.100074}
{'[3, 6, 6, 2, 5, 6, 1, 0, 21, 7, 0, 3, 1, 0, 1, 1, 1, 1]' : 0.100042}
{'[3, 6, 6, 2, 5, 6, 1, 0, 21, 7, 0, 3, 1, 0, 1, 1, 1, 1]' : 0.100112}
{'[3, 6, 6, 2, 5, 6, 1, 0, 21, 7, 0, 3, 1, 0, 1, 1, 1, 1]' : 0.100024}
{'[3, 6, 6, 2, 5, 6, 1, 0, 21, 7, 0, 3, 1, 0, 1, 1, 1, 1]' : 0.100264}
{'[3, 6, 6, 2, 5, 6, 1, 0, 21, 7, 0, 3, 1, 0, 1, 1, 1, 1]' : 0.100553}
{'[3, 6, 6, 2, 5, 6, 1, 0, 21, 7, 0, 3, 1, 0, 1, 1, 1, 1]' : 0.100136}
{'[3, 6, 6, 2, 5, 6, 1, 0, 21, 7, 0, 3, 1, 0, 1, 1, 1, 1]' : 0.100235}
{'[3, 6, 6, 2, 5, 6, 1, 0, 21, 7, 0, 3, 1, 0, 1, 1, 1, 1]' : 0.0999839}
{'[3, 6, 6, 2, 5, 6, 1, 0, 21, 7, 0, 3, 1, 0, 1, 1, 1, 1]' : 0.10015}
{'[3, 6, 6, 2, 5, 6, 1, 0, 21, 7, 0, 3, 1, 0, 1, 1, 1, 1]' : 0.100103}
{'[3, 6, 6, 2, 5, 6, 1, 0, 21, 7, 0, 3, 1, 0, 1, 1, 1, 1]' : 0.100081}
{'[3, 6, 6, 2, 5, 6, 1, 0, 21, 7, 0, 3, 1, 0, 1, 1, 1, 1]' : 0.100249}
{'[3, 6, 6, 2, 5, 6, 1, 0, 21, 7, 0, 3, 1, 0, 1, 1, 1, 1]' : 0.100045}
{'[3, 6, 6, 2, 5, 6, 1, 0, 21, 7, 0, 3, 1, 0, 1, 1, 1, 1]' : 0.100158}
{'[3, 6, 6, 2, 5, 6, 1, 0, 21, 7, 0, 3, 1, 0, 1, 1, 1, 1]' : 0.100195}
{'[3, 6, 6, 2, 5, 6, 1, 0, 21, 7, 0, 3, 1, 0, 1, 1, 1, 1]' : 0.100246}
{'[3, 6, 6, 2, 5, 6, 1, 0, 21, 7, 0, 3, 1, 0, 1, 1, 1, 1]' : 0.100184}
{'[3, 6, 6, 2, 5, 6, 1, 0, 21, 7, 0, 3, 1, 0, 1, 1, 1, 1]' : 0.100711}
{'[3, 6, 6, 2, 5, 6, 1, 0, 21, 7, 0, 3, 1, 0, 1, 1, 1, 1]' : 0.100092}
{'[3, 6, 6, 2, 5, 6, 1, 0, 21, 7, 0, 3, 1, 0, 1, 1, 1, 1]' : 0.10018}
{'[3, 6, 6, 2, 5, 6, 1, 0, 21, 7, 0, 3, 1, 0, 1, 1, 1, 1]' : 0.100262}
{'[3, 6, 6, 2, 5, 6, 1, 0, 21, 7, 0, 3, 1, 0, 1, 1, 1, 1]' : 0.100221}

out:
 ["{'[3, 6, 6, 2, 5, 6, 1, 0, 21, 7, 0, 3, 1, 0, 1, 1, 1, 1]' : 0.116969}", "{'[3, 6, 6, 2, 5, 6, 1, 0, 21, 7, 0, 3, 1, 0, 1, 1, 1, 1]' : 0.117032}", "{'[3, 6, 6, 2, 5, 6, 1, 0, 21, 7, 0, 3, 1, 0, 1, 1, 1, 1]' : 0.116913}", "{'[3, 6, 6, 2, 5, 6, 1, 0, 21, 7, 0, 3, 1, 0, 1, 1, 1, 1]' : 0.106554}", "{'[3, 6, 6, 2, 5, 6, 1, 0, 21, 7, 0, 3, 1, 0, 1, 1, 1, 1]' : 0.100169}", "{'[3, 6, 6, 2, 5, 6, 1, 0, 21, 7, 0, 3, 1, 0, 1, 1, 1, 1]' : 0.100081}", "{'[3, 6, 6, 2, 5, 6, 1, 0, 21, 7, 0, 3, 1, 0, 1, 1, 1, 1]' : 0.100154}", "{'[3, 6, 6, 2, 5, 6, 1, 0, 21, 7, 0, 3, 1, 0, 1, 1, 1, 1]' : 0.100074}", "{'[3, 6, 6, 2, 5, 6, 1, 0, 21, 7, 0, 3, 1, 0, 1, 1, 1, 1]' : 0.100042}", "{'[3, 6, 6, 2, 5, 6, 1, 0, 21, 7, 0, 3, 1, 0, 1, 1, 1, 1]' : 0.100112}", "{'[3, 6, 6, 2, 5, 6, 1, 0, 21, 7, 0, 3, 1, 0, 1, 1, 1, 1]' : 0.100024}", "{'[3, 6, 6, 2, 5, 6, 1, 0, 21, 7, 0, 3, 1, 0, 1, 1, 1, 1]' : 0.100264}", "{'[3, 6, 6, 2, 5, 6, 1, 0, 21, 7, 0, 3, 1, 0, 1, 1, 1, 1]' : 0.100553}", "{'[3, 6, 6, 2, 5, 6, 1, 0, 21, 7, 0, 3, 1, 0, 1, 1, 1, 1]' : 0.100136}", "{'[3, 6, 6, 2, 5, 6, 1, 0, 21, 7, 0, 3, 1, 0, 1, 1, 1, 1]' : 0.100235}", "{'[3, 6, 6, 2, 5, 6, 1, 0, 21, 7, 0, 3, 1, 0, 1, 1, 1, 1]' : 0.0999839}", "{'[3, 6, 6, 2, 5, 6, 1, 0, 21, 7, 0, 3, 1, 0, 1, 1, 1, 1]' : 0.10015}", "{'[3, 6, 6, 2, 5, 6, 1, 0, 21, 7, 0, 3, 1, 0, 1, 1, 1, 1]' : 0.100103}", "{'[3, 6, 6, 2, 5, 6, 1, 0, 21, 7, 0, 3, 1, 0, 1, 1, 1, 1]' : 0.100081}", "{'[3, 6, 6, 2, 5, 6, 1, 0, 21, 7, 0, 3, 1, 0, 1, 1, 1, 1]' : 0.100249}", "{'[3, 6, 6, 2, 5, 6, 1, 0, 21, 7, 0, 3, 1, 0, 1, 1, 1, 1]' : 0.100045}", "{'[3, 6, 6, 2, 5, 6, 1, 0, 21, 7, 0, 3, 1, 0, 1, 1, 1, 1]' : 0.100158}", "{'[3, 6, 6, 2, 5, 6, 1, 0, 21, 7, 0, 3, 1, 0, 1, 1, 1, 1]' : 0.100195}", "{'[3, 6, 6, 2, 5, 6, 1, 0, 21, 7, 0, 3, 1, 0, 1, 1, 1, 1]' : 0.100246}", "{'[3, 6, 6, 2, 5, 6, 1, 0, 21, 7, 0, 3, 1, 0, 1, 1, 1, 1]' : 0.100184}", "{'[3, 6, 6, 2, 5, 6, 1, 0, 21, 7, 0, 3, 1, 0, 1, 1, 1, 1]' : 0.100711}", "{'[3, 6, 6, 2, 5, 6, 1, 0, 21, 7, 0, 3, 1, 0, 1, 1, 1, 1]' : 0.100092}", "{'[3, 6, 6, 2, 5, 6, 1, 0, 21, 7, 0, 3, 1, 0, 1, 1, 1, 1]' : 0.10018}", "{'[3, 6, 6, 2, 5, 6, 1, 0, 21, 7, 0, 3, 1, 0, 1, 1, 1, 1]' : 0.100262}", "{'[3, 6, 6, 2, 5, 6, 1, 0, 21, 7, 0, 3, 1, 0, 1, 1, 1, 1]' : 0.100221}"]
returning from 'run': {'[3, 6, 6, 2, 5, 6, 1, 0, 21, 7, 0, 3, 1, 0, 1, 1, 1, 1]': ([0.116969, 0.117032, 0.116913, 0.106554, 0.100169, 0.100081, 0.100154, 0.100074, 0.100042, 0.100112, 0.100024, 0.100264, 0.100553, 0.100136, 0.100235, 0.0999839, 0.10015, 0.100103, 0.100081, 0.100249, 0.100045, 0.100158, 0.100195, 0.100246, 0.100184, 0.100711, 0.100092, 0.10018, 0.100262, 0.100221], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 6, 6, 2, 5, 6, 1, 0, 21, 7, 0, 3, 1, 0, 1, 1, 1, 1]': ([0.116969, 0.117032, 0.116913, 0.106554, 0.100169, 0.100081, 0.100154, 0.100074, 0.100042, 0.100112, 0.100024, 0.100264, 0.100553, 0.100136, 0.100235, 0.0999839, 0.10015, 0.100103, 0.100081, 0.100249, 0.100045, 0.100158, 0.100195, 0.100246, 0.100184, 0.100711, 0.100092, 0.10018, 0.100262, 0.100221], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	77
        Max loop nest depth: 	6
        Additions: 		1521
        Multiplications: 	504
        Divisions: 		0
        Logical: 		0
        Reads: 			3331
        Writes: 		705
        Comparisons:		77
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest70.exe __orio_perftest70.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest70.exe  
Program Test Output: 
{'[3, 2, 6, 6, 5, 6, 1, 1, 21, 8, 0, 3, 2, 0, 0, 1, 0, 1]' : 0.144172}
{'[3, 2, 6, 6, 5, 6, 1, 1, 21, 8, 0, 3, 2, 0, 0, 1, 0, 1]' : 0.145009}
{'[3, 2, 6, 6, 5, 6, 1, 1, 21, 8, 0, 3, 2, 0, 0, 1, 0, 1]' : 0.143864}
{'[3, 2, 6, 6, 5, 6, 1, 1, 21, 8, 0, 3, 2, 0, 0, 1, 0, 1]' : 0.143993}
{'[3, 2, 6, 6, 5, 6, 1, 1, 21, 8, 0, 3, 2, 0, 0, 1, 0, 1]' : 0.144296}
{'[3, 2, 6, 6, 5, 6, 1, 1, 21, 8, 0, 3, 2, 0, 0, 1, 0, 1]' : 0.143611}
{'[3, 2, 6, 6, 5, 6, 1, 1, 21, 8, 0, 3, 2, 0, 0, 1, 0, 1]' : 0.143499}
{'[3, 2, 6, 6, 5, 6, 1, 1, 21, 8, 0, 3, 2, 0, 0, 1, 0, 1]' : 0.143627}
{'[3, 2, 6, 6, 5, 6, 1, 1, 21, 8, 0, 3, 2, 0, 0, 1, 0, 1]' : 0.143638}
{'[3, 2, 6, 6, 5, 6, 1, 1, 21, 8, 0, 3, 2, 0, 0, 1, 0, 1]' : 0.144021}
{'[3, 2, 6, 6, 5, 6, 1, 1, 21, 8, 0, 3, 2, 0, 0, 1, 0, 1]' : 0.143108}
{'[3, 2, 6, 6, 5, 6, 1, 1, 21, 8, 0, 3, 2, 0, 0, 1, 0, 1]' : 0.143885}
{'[3, 2, 6, 6, 5, 6, 1, 1, 21, 8, 0, 3, 2, 0, 0, 1, 0, 1]' : 0.143977}
{'[3, 2, 6, 6, 5, 6, 1, 1, 21, 8, 0, 3, 2, 0, 0, 1, 0, 1]' : 0.144387}
{'[3, 2, 6, 6, 5, 6, 1, 1, 21, 8, 0, 3, 2, 0, 0, 1, 0, 1]' : 0.144125}
{'[3, 2, 6, 6, 5, 6, 1, 1, 21, 8, 0, 3, 2, 0, 0, 1, 0, 1]' : 0.143442}
{'[3, 2, 6, 6, 5, 6, 1, 1, 21, 8, 0, 3, 2, 0, 0, 1, 0, 1]' : 0.144244}
{'[3, 2, 6, 6, 5, 6, 1, 1, 21, 8, 0, 3, 2, 0, 0, 1, 0, 1]' : 0.143799}
{'[3, 2, 6, 6, 5, 6, 1, 1, 21, 8, 0, 3, 2, 0, 0, 1, 0, 1]' : 0.143696}
{'[3, 2, 6, 6, 5, 6, 1, 1, 21, 8, 0, 3, 2, 0, 0, 1, 0, 1]' : 0.14401}
{'[3, 2, 6, 6, 5, 6, 1, 1, 21, 8, 0, 3, 2, 0, 0, 1, 0, 1]' : 0.143294}
{'[3, 2, 6, 6, 5, 6, 1, 1, 21, 8, 0, 3, 2, 0, 0, 1, 0, 1]' : 0.143786}
{'[3, 2, 6, 6, 5, 6, 1, 1, 21, 8, 0, 3, 2, 0, 0, 1, 0, 1]' : 0.144158}
{'[3, 2, 6, 6, 5, 6, 1, 1, 21, 8, 0, 3, 2, 0, 0, 1, 0, 1]' : 0.143814}
{'[3, 2, 6, 6, 5, 6, 1, 1, 21, 8, 0, 3, 2, 0, 0, 1, 0, 1]' : 0.143708}
{'[3, 2, 6, 6, 5, 6, 1, 1, 21, 8, 0, 3, 2, 0, 0, 1, 0, 1]' : 0.143742}
{'[3, 2, 6, 6, 5, 6, 1, 1, 21, 8, 0, 3, 2, 0, 0, 1, 0, 1]' : 0.143967}
{'[3, 2, 6, 6, 5, 6, 1, 1, 21, 8, 0, 3, 2, 0, 0, 1, 0, 1]' : 0.143511}
{'[3, 2, 6, 6, 5, 6, 1, 1, 21, 8, 0, 3, 2, 0, 0, 1, 0, 1]' : 0.143206}
{'[3, 2, 6, 6, 5, 6, 1, 1, 21, 8, 0, 3, 2, 0, 0, 1, 0, 1]' : 0.143568}

out:
 ["{'[3, 2, 6, 6, 5, 6, 1, 1, 21, 8, 0, 3, 2, 0, 0, 1, 0, 1]' : 0.144172}", "{'[3, 2, 6, 6, 5, 6, 1, 1, 21, 8, 0, 3, 2, 0, 0, 1, 0, 1]' : 0.145009}", "{'[3, 2, 6, 6, 5, 6, 1, 1, 21, 8, 0, 3, 2, 0, 0, 1, 0, 1]' : 0.143864}", "{'[3, 2, 6, 6, 5, 6, 1, 1, 21, 8, 0, 3, 2, 0, 0, 1, 0, 1]' : 0.143993}", "{'[3, 2, 6, 6, 5, 6, 1, 1, 21, 8, 0, 3, 2, 0, 0, 1, 0, 1]' : 0.144296}", "{'[3, 2, 6, 6, 5, 6, 1, 1, 21, 8, 0, 3, 2, 0, 0, 1, 0, 1]' : 0.143611}", "{'[3, 2, 6, 6, 5, 6, 1, 1, 21, 8, 0, 3, 2, 0, 0, 1, 0, 1]' : 0.143499}", "{'[3, 2, 6, 6, 5, 6, 1, 1, 21, 8, 0, 3, 2, 0, 0, 1, 0, 1]' : 0.143627}", "{'[3, 2, 6, 6, 5, 6, 1, 1, 21, 8, 0, 3, 2, 0, 0, 1, 0, 1]' : 0.143638}", "{'[3, 2, 6, 6, 5, 6, 1, 1, 21, 8, 0, 3, 2, 0, 0, 1, 0, 1]' : 0.144021}", "{'[3, 2, 6, 6, 5, 6, 1, 1, 21, 8, 0, 3, 2, 0, 0, 1, 0, 1]' : 0.143108}", "{'[3, 2, 6, 6, 5, 6, 1, 1, 21, 8, 0, 3, 2, 0, 0, 1, 0, 1]' : 0.143885}", "{'[3, 2, 6, 6, 5, 6, 1, 1, 21, 8, 0, 3, 2, 0, 0, 1, 0, 1]' : 0.143977}", "{'[3, 2, 6, 6, 5, 6, 1, 1, 21, 8, 0, 3, 2, 0, 0, 1, 0, 1]' : 0.144387}", "{'[3, 2, 6, 6, 5, 6, 1, 1, 21, 8, 0, 3, 2, 0, 0, 1, 0, 1]' : 0.144125}", "{'[3, 2, 6, 6, 5, 6, 1, 1, 21, 8, 0, 3, 2, 0, 0, 1, 0, 1]' : 0.143442}", "{'[3, 2, 6, 6, 5, 6, 1, 1, 21, 8, 0, 3, 2, 0, 0, 1, 0, 1]' : 0.144244}", "{'[3, 2, 6, 6, 5, 6, 1, 1, 21, 8, 0, 3, 2, 0, 0, 1, 0, 1]' : 0.143799}", "{'[3, 2, 6, 6, 5, 6, 1, 1, 21, 8, 0, 3, 2, 0, 0, 1, 0, 1]' : 0.143696}", "{'[3, 2, 6, 6, 5, 6, 1, 1, 21, 8, 0, 3, 2, 0, 0, 1, 0, 1]' : 0.14401}", "{'[3, 2, 6, 6, 5, 6, 1, 1, 21, 8, 0, 3, 2, 0, 0, 1, 0, 1]' : 0.143294}", "{'[3, 2, 6, 6, 5, 6, 1, 1, 21, 8, 0, 3, 2, 0, 0, 1, 0, 1]' : 0.143786}", "{'[3, 2, 6, 6, 5, 6, 1, 1, 21, 8, 0, 3, 2, 0, 0, 1, 0, 1]' : 0.144158}", "{'[3, 2, 6, 6, 5, 6, 1, 1, 21, 8, 0, 3, 2, 0, 0, 1, 0, 1]' : 0.143814}", "{'[3, 2, 6, 6, 5, 6, 1, 1, 21, 8, 0, 3, 2, 0, 0, 1, 0, 1]' : 0.143708}", "{'[3, 2, 6, 6, 5, 6, 1, 1, 21, 8, 0, 3, 2, 0, 0, 1, 0, 1]' : 0.143742}", "{'[3, 2, 6, 6, 5, 6, 1, 1, 21, 8, 0, 3, 2, 0, 0, 1, 0, 1]' : 0.143967}", "{'[3, 2, 6, 6, 5, 6, 1, 1, 21, 8, 0, 3, 2, 0, 0, 1, 0, 1]' : 0.143511}", "{'[3, 2, 6, 6, 5, 6, 1, 1, 21, 8, 0, 3, 2, 0, 0, 1, 0, 1]' : 0.143206}", "{'[3, 2, 6, 6, 5, 6, 1, 1, 21, 8, 0, 3, 2, 0, 0, 1, 0, 1]' : 0.143568}"]
returning from 'run': {'[3, 2, 6, 6, 5, 6, 1, 1, 21, 8, 0, 3, 2, 0, 0, 1, 0, 1]': ([0.144172, 0.145009, 0.143864, 0.143993, 0.144296, 0.143611, 0.143499, 0.143627, 0.143638, 0.144021, 0.143108, 0.143885, 0.143977, 0.144387, 0.144125, 0.143442, 0.144244, 0.143799, 0.143696, 0.14401, 0.143294, 0.143786, 0.144158, 0.143814, 0.143708, 0.143742, 0.143967, 0.143511, 0.143206, 0.143568], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 2, 6, 6, 5, 6, 1, 1, 21, 8, 0, 3, 2, 0, 0, 1, 0, 1]': ([0.144172, 0.145009, 0.143864, 0.143993, 0.144296, 0.143611, 0.143499, 0.143627, 0.143638, 0.144021, 0.143108, 0.143885, 0.143977, 0.144387, 0.144125, 0.143442, 0.144244, 0.143799, 0.143696, 0.14401, 0.143294, 0.143786, 0.144158, 0.143814, 0.143708, 0.143742, 0.143967, 0.143511, 0.143206, 0.143568], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	112
        Max loop nest depth: 	5
        Additions: 		2275
        Multiplications: 	660
        Divisions: 		0
        Logical: 		0
        Reads: 			4941
        Writes: 		1079
        Comparisons:		112
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest71.exe __orio_perftest71.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest71.exe  
Program Test Output: 
{'[6, 0, 6, 6, 5, 0, 0, 1, 21, 21, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138487}
{'[6, 0, 6, 6, 5, 0, 0, 1, 21, 21, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138872}
{'[6, 0, 6, 6, 5, 0, 0, 1, 21, 21, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138448}
{'[6, 0, 6, 6, 5, 0, 0, 1, 21, 21, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138529}
{'[6, 0, 6, 6, 5, 0, 0, 1, 21, 21, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.139409}
{'[6, 0, 6, 6, 5, 0, 0, 1, 21, 21, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138889}
{'[6, 0, 6, 6, 5, 0, 0, 1, 21, 21, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138416}
{'[6, 0, 6, 6, 5, 0, 0, 1, 21, 21, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138378}
{'[6, 0, 6, 6, 5, 0, 0, 1, 21, 21, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138656}
{'[6, 0, 6, 6, 5, 0, 0, 1, 21, 21, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138394}
{'[6, 0, 6, 6, 5, 0, 0, 1, 21, 21, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138455}
{'[6, 0, 6, 6, 5, 0, 0, 1, 21, 21, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138793}
{'[6, 0, 6, 6, 5, 0, 0, 1, 21, 21, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138963}
{'[6, 0, 6, 6, 5, 0, 0, 1, 21, 21, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.13897}
{'[6, 0, 6, 6, 5, 0, 0, 1, 21, 21, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138595}
{'[6, 0, 6, 6, 5, 0, 0, 1, 21, 21, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.13865}
{'[6, 0, 6, 6, 5, 0, 0, 1, 21, 21, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138351}
{'[6, 0, 6, 6, 5, 0, 0, 1, 21, 21, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138861}
{'[6, 0, 6, 6, 5, 0, 0, 1, 21, 21, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138477}
{'[6, 0, 6, 6, 5, 0, 0, 1, 21, 21, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138286}
{'[6, 0, 6, 6, 5, 0, 0, 1, 21, 21, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138815}
{'[6, 0, 6, 6, 5, 0, 0, 1, 21, 21, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.139332}
{'[6, 0, 6, 6, 5, 0, 0, 1, 21, 21, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138582}
{'[6, 0, 6, 6, 5, 0, 0, 1, 21, 21, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138356}
{'[6, 0, 6, 6, 5, 0, 0, 1, 21, 21, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.139656}
{'[6, 0, 6, 6, 5, 0, 0, 1, 21, 21, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138886}
{'[6, 0, 6, 6, 5, 0, 0, 1, 21, 21, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138593}
{'[6, 0, 6, 6, 5, 0, 0, 1, 21, 21, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138043}
{'[6, 0, 6, 6, 5, 0, 0, 1, 21, 21, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138349}
{'[6, 0, 6, 6, 5, 0, 0, 1, 21, 21, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138188}

out:
 ["{'[6, 0, 6, 6, 5, 0, 0, 1, 21, 21, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138487}", "{'[6, 0, 6, 6, 5, 0, 0, 1, 21, 21, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138872}", "{'[6, 0, 6, 6, 5, 0, 0, 1, 21, 21, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138448}", "{'[6, 0, 6, 6, 5, 0, 0, 1, 21, 21, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138529}", "{'[6, 0, 6, 6, 5, 0, 0, 1, 21, 21, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.139409}", "{'[6, 0, 6, 6, 5, 0, 0, 1, 21, 21, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138889}", "{'[6, 0, 6, 6, 5, 0, 0, 1, 21, 21, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138416}", "{'[6, 0, 6, 6, 5, 0, 0, 1, 21, 21, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138378}", "{'[6, 0, 6, 6, 5, 0, 0, 1, 21, 21, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138656}", "{'[6, 0, 6, 6, 5, 0, 0, 1, 21, 21, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138394}", "{'[6, 0, 6, 6, 5, 0, 0, 1, 21, 21, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138455}", "{'[6, 0, 6, 6, 5, 0, 0, 1, 21, 21, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138793}", "{'[6, 0, 6, 6, 5, 0, 0, 1, 21, 21, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138963}", "{'[6, 0, 6, 6, 5, 0, 0, 1, 21, 21, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.13897}", "{'[6, 0, 6, 6, 5, 0, 0, 1, 21, 21, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138595}", "{'[6, 0, 6, 6, 5, 0, 0, 1, 21, 21, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.13865}", "{'[6, 0, 6, 6, 5, 0, 0, 1, 21, 21, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138351}", "{'[6, 0, 6, 6, 5, 0, 0, 1, 21, 21, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138861}", "{'[6, 0, 6, 6, 5, 0, 0, 1, 21, 21, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138477}", "{'[6, 0, 6, 6, 5, 0, 0, 1, 21, 21, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138286}", "{'[6, 0, 6, 6, 5, 0, 0, 1, 21, 21, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138815}", "{'[6, 0, 6, 6, 5, 0, 0, 1, 21, 21, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.139332}", "{'[6, 0, 6, 6, 5, 0, 0, 1, 21, 21, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138582}", "{'[6, 0, 6, 6, 5, 0, 0, 1, 21, 21, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138356}", "{'[6, 0, 6, 6, 5, 0, 0, 1, 21, 21, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.139656}", "{'[6, 0, 6, 6, 5, 0, 0, 1, 21, 21, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138886}", "{'[6, 0, 6, 6, 5, 0, 0, 1, 21, 21, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138593}", "{'[6, 0, 6, 6, 5, 0, 0, 1, 21, 21, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138043}", "{'[6, 0, 6, 6, 5, 0, 0, 1, 21, 21, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138349}", "{'[6, 0, 6, 6, 5, 0, 0, 1, 21, 21, 0, 3, 2, 0, 0, 1, 1, 1]' : 0.138188}"]
returning from 'run': {'[6, 0, 6, 6, 5, 0, 0, 1, 21, 21, 0, 3, 2, 0, 0, 1, 1, 1]': ([0.138487, 0.138872, 0.138448, 0.138529, 0.139409, 0.138889, 0.138416, 0.138378, 0.138656, 0.138394, 0.138455, 0.138793, 0.138963, 0.13897, 0.138595, 0.13865, 0.138351, 0.138861, 0.138477, 0.138286, 0.138815, 0.139332, 0.138582, 0.138356, 0.139656, 0.138886, 0.138593, 0.138043, 0.138349, 0.138188], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 6, 6, 5, 0, 0, 1, 21, 21, 0, 3, 2, 0, 0, 1, 1, 1]': ([0.138487, 0.138872, 0.138448, 0.138529, 0.139409, 0.138889, 0.138416, 0.138378, 0.138656, 0.138394, 0.138455, 0.138793, 0.138963, 0.13897, 0.138595, 0.13865, 0.138351, 0.138861, 0.138477, 0.138286, 0.138815, 0.139332, 0.138582, 0.138356, 0.139656, 0.138886, 0.138593, 0.138043, 0.138349, 0.138188], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		1459
        Multiplications: 	384
        Divisions: 		0
        Logical: 		0
        Reads: 			2385
        Writes: 		247
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest72.exe __orio_perftest72.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest72.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest72.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest72.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest72.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	105
        Max loop nest depth: 	5
        Additions: 		5400
        Multiplications: 	2280
        Divisions: 		0
        Logical: 		0
        Reads: 			10523
        Writes: 		1922
        Comparisons:		105
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest73.exe __orio_perftest73.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest73.exe  
Program Test Output: 
{'[3, 4, 6, 0, 5, 0, 1, 0, 21, 28, 0, 3, 0, 0, 2, 1, 0, 0]' : 0.201338}
{'[3, 4, 6, 0, 5, 0, 1, 0, 21, 28, 0, 3, 0, 0, 2, 1, 0, 0]' : 0.201515}
{'[3, 4, 6, 0, 5, 0, 1, 0, 21, 28, 0, 3, 0, 0, 2, 1, 0, 0]' : 0.187514}
{'[3, 4, 6, 0, 5, 0, 1, 0, 21, 28, 0, 3, 0, 0, 2, 1, 0, 0]' : 0.174094}
{'[3, 4, 6, 0, 5, 0, 1, 0, 21, 28, 0, 3, 0, 0, 2, 1, 0, 0]' : 0.174563}
{'[3, 4, 6, 0, 5, 0, 1, 0, 21, 28, 0, 3, 0, 0, 2, 1, 0, 0]' : 0.174358}
{'[3, 4, 6, 0, 5, 0, 1, 0, 21, 28, 0, 3, 0, 0, 2, 1, 0, 0]' : 0.17439}
{'[3, 4, 6, 0, 5, 0, 1, 0, 21, 28, 0, 3, 0, 0, 2, 1, 0, 0]' : 0.17469}
{'[3, 4, 6, 0, 5, 0, 1, 0, 21, 28, 0, 3, 0, 0, 2, 1, 0, 0]' : 0.174342}
{'[3, 4, 6, 0, 5, 0, 1, 0, 21, 28, 0, 3, 0, 0, 2, 1, 0, 0]' : 0.174343}
{'[3, 4, 6, 0, 5, 0, 1, 0, 21, 28, 0, 3, 0, 0, 2, 1, 0, 0]' : 0.174537}
{'[3, 4, 6, 0, 5, 0, 1, 0, 21, 28, 0, 3, 0, 0, 2, 1, 0, 0]' : 0.174491}
{'[3, 4, 6, 0, 5, 0, 1, 0, 21, 28, 0, 3, 0, 0, 2, 1, 0, 0]' : 0.174169}
{'[3, 4, 6, 0, 5, 0, 1, 0, 21, 28, 0, 3, 0, 0, 2, 1, 0, 0]' : 0.174239}
{'[3, 4, 6, 0, 5, 0, 1, 0, 21, 28, 0, 3, 0, 0, 2, 1, 0, 0]' : 0.174746}
{'[3, 4, 6, 0, 5, 0, 1, 0, 21, 28, 0, 3, 0, 0, 2, 1, 0, 0]' : 0.174178}
{'[3, 4, 6, 0, 5, 0, 1, 0, 21, 28, 0, 3, 0, 0, 2, 1, 0, 0]' : 0.174469}
{'[3, 4, 6, 0, 5, 0, 1, 0, 21, 28, 0, 3, 0, 0, 2, 1, 0, 0]' : 0.174491}
{'[3, 4, 6, 0, 5, 0, 1, 0, 21, 28, 0, 3, 0, 0, 2, 1, 0, 0]' : 0.17434}
{'[3, 4, 6, 0, 5, 0, 1, 0, 21, 28, 0, 3, 0, 0, 2, 1, 0, 0]' : 0.174205}
{'[3, 4, 6, 0, 5, 0, 1, 0, 21, 28, 0, 3, 0, 0, 2, 1, 0, 0]' : 0.174219}
{'[3, 4, 6, 0, 5, 0, 1, 0, 21, 28, 0, 3, 0, 0, 2, 1, 0, 0]' : 0.1742}
{'[3, 4, 6, 0, 5, 0, 1, 0, 21, 28, 0, 3, 0, 0, 2, 1, 0, 0]' : 0.174185}
{'[3, 4, 6, 0, 5, 0, 1, 0, 21, 28, 0, 3, 0, 0, 2, 1, 0, 0]' : 0.174453}
{'[3, 4, 6, 0, 5, 0, 1, 0, 21, 28, 0, 3, 0, 0, 2, 1, 0, 0]' : 0.174382}
{'[3, 4, 6, 0, 5, 0, 1, 0, 21, 28, 0, 3, 0, 0, 2, 1, 0, 0]' : 0.174334}
{'[3, 4, 6, 0, 5, 0, 1, 0, 21, 28, 0, 3, 0, 0, 2, 1, 0, 0]' : 0.174153}
{'[3, 4, 6, 0, 5, 0, 1, 0, 21, 28, 0, 3, 0, 0, 2, 1, 0, 0]' : 0.174486}
{'[3, 4, 6, 0, 5, 0, 1, 0, 21, 28, 0, 3, 0, 0, 2, 1, 0, 0]' : 0.174239}
{'[3, 4, 6, 0, 5, 0, 1, 0, 21, 28, 0, 3, 0, 0, 2, 1, 0, 0]' : 0.17619}

out:
 ["{'[3, 4, 6, 0, 5, 0, 1, 0, 21, 28, 0, 3, 0, 0, 2, 1, 0, 0]' : 0.201338}", "{'[3, 4, 6, 0, 5, 0, 1, 0, 21, 28, 0, 3, 0, 0, 2, 1, 0, 0]' : 0.201515}", "{'[3, 4, 6, 0, 5, 0, 1, 0, 21, 28, 0, 3, 0, 0, 2, 1, 0, 0]' : 0.187514}", "{'[3, 4, 6, 0, 5, 0, 1, 0, 21, 28, 0, 3, 0, 0, 2, 1, 0, 0]' : 0.174094}", "{'[3, 4, 6, 0, 5, 0, 1, 0, 21, 28, 0, 3, 0, 0, 2, 1, 0, 0]' : 0.174563}", "{'[3, 4, 6, 0, 5, 0, 1, 0, 21, 28, 0, 3, 0, 0, 2, 1, 0, 0]' : 0.174358}", "{'[3, 4, 6, 0, 5, 0, 1, 0, 21, 28, 0, 3, 0, 0, 2, 1, 0, 0]' : 0.17439}", "{'[3, 4, 6, 0, 5, 0, 1, 0, 21, 28, 0, 3, 0, 0, 2, 1, 0, 0]' : 0.17469}", "{'[3, 4, 6, 0, 5, 0, 1, 0, 21, 28, 0, 3, 0, 0, 2, 1, 0, 0]' : 0.174342}", "{'[3, 4, 6, 0, 5, 0, 1, 0, 21, 28, 0, 3, 0, 0, 2, 1, 0, 0]' : 0.174343}", "{'[3, 4, 6, 0, 5, 0, 1, 0, 21, 28, 0, 3, 0, 0, 2, 1, 0, 0]' : 0.174537}", "{'[3, 4, 6, 0, 5, 0, 1, 0, 21, 28, 0, 3, 0, 0, 2, 1, 0, 0]' : 0.174491}", "{'[3, 4, 6, 0, 5, 0, 1, 0, 21, 28, 0, 3, 0, 0, 2, 1, 0, 0]' : 0.174169}", "{'[3, 4, 6, 0, 5, 0, 1, 0, 21, 28, 0, 3, 0, 0, 2, 1, 0, 0]' : 0.174239}", "{'[3, 4, 6, 0, 5, 0, 1, 0, 21, 28, 0, 3, 0, 0, 2, 1, 0, 0]' : 0.174746}", "{'[3, 4, 6, 0, 5, 0, 1, 0, 21, 28, 0, 3, 0, 0, 2, 1, 0, 0]' : 0.174178}", "{'[3, 4, 6, 0, 5, 0, 1, 0, 21, 28, 0, 3, 0, 0, 2, 1, 0, 0]' : 0.174469}", "{'[3, 4, 6, 0, 5, 0, 1, 0, 21, 28, 0, 3, 0, 0, 2, 1, 0, 0]' : 0.174491}", "{'[3, 4, 6, 0, 5, 0, 1, 0, 21, 28, 0, 3, 0, 0, 2, 1, 0, 0]' : 0.17434}", "{'[3, 4, 6, 0, 5, 0, 1, 0, 21, 28, 0, 3, 0, 0, 2, 1, 0, 0]' : 0.174205}", "{'[3, 4, 6, 0, 5, 0, 1, 0, 21, 28, 0, 3, 0, 0, 2, 1, 0, 0]' : 0.174219}", "{'[3, 4, 6, 0, 5, 0, 1, 0, 21, 28, 0, 3, 0, 0, 2, 1, 0, 0]' : 0.1742}", "{'[3, 4, 6, 0, 5, 0, 1, 0, 21, 28, 0, 3, 0, 0, 2, 1, 0, 0]' : 0.174185}", "{'[3, 4, 6, 0, 5, 0, 1, 0, 21, 28, 0, 3, 0, 0, 2, 1, 0, 0]' : 0.174453}", "{'[3, 4, 6, 0, 5, 0, 1, 0, 21, 28, 0, 3, 0, 0, 2, 1, 0, 0]' : 0.174382}", "{'[3, 4, 6, 0, 5, 0, 1, 0, 21, 28, 0, 3, 0, 0, 2, 1, 0, 0]' : 0.174334}", "{'[3, 4, 6, 0, 5, 0, 1, 0, 21, 28, 0, 3, 0, 0, 2, 1, 0, 0]' : 0.174153}", "{'[3, 4, 6, 0, 5, 0, 1, 0, 21, 28, 0, 3, 0, 0, 2, 1, 0, 0]' : 0.174486}", "{'[3, 4, 6, 0, 5, 0, 1, 0, 21, 28, 0, 3, 0, 0, 2, 1, 0, 0]' : 0.174239}", "{'[3, 4, 6, 0, 5, 0, 1, 0, 21, 28, 0, 3, 0, 0, 2, 1, 0, 0]' : 0.17619}"]
returning from 'run': {'[3, 4, 6, 0, 5, 0, 1, 0, 21, 28, 0, 3, 0, 0, 2, 1, 0, 0]': ([0.201338, 0.201515, 0.187514, 0.174094, 0.174563, 0.174358, 0.17439, 0.17469, 0.174342, 0.174343, 0.174537, 0.174491, 0.174169, 0.174239, 0.174746, 0.174178, 0.174469, 0.174491, 0.17434, 0.174205, 0.174219, 0.1742, 0.174185, 0.174453, 0.174382, 0.174334, 0.174153, 0.174486, 0.174239, 0.17619], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 4, 6, 0, 5, 0, 1, 0, 21, 28, 0, 3, 0, 0, 2, 1, 0, 0]': ([0.201338, 0.201515, 0.187514, 0.174094, 0.174563, 0.174358, 0.17439, 0.17469, 0.174342, 0.174343, 0.174537, 0.174491, 0.174169, 0.174239, 0.174746, 0.174178, 0.174469, 0.174491, 0.17434, 0.174205, 0.174219, 0.1742, 0.174185, 0.174453, 0.174382, 0.174334, 0.174153, 0.174486, 0.174239, 0.17619], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		231
        Multiplications: 	76
        Divisions: 		0
        Logical: 		0
        Reads: 			552
        Writes: 		97
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest74.exe __orio_perftest74.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest74.exe  
Program Test Output: 
{'[3, 4, 6, 4, 5, 0, 0, 1, 21, 0, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.229358}
{'[3, 4, 6, 4, 5, 0, 0, 1, 21, 0, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.229192}
{'[3, 4, 6, 4, 5, 0, 0, 1, 21, 0, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.202577}
{'[3, 4, 6, 4, 5, 0, 0, 1, 21, 0, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.192492}
{'[3, 4, 6, 4, 5, 0, 0, 1, 21, 0, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.191947}
{'[3, 4, 6, 4, 5, 0, 0, 1, 21, 0, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.192038}
{'[3, 4, 6, 4, 5, 0, 0, 1, 21, 0, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.192062}
{'[3, 4, 6, 4, 5, 0, 0, 1, 21, 0, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.192027}
{'[3, 4, 6, 4, 5, 0, 0, 1, 21, 0, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.192384}
{'[3, 4, 6, 4, 5, 0, 0, 1, 21, 0, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.192476}
{'[3, 4, 6, 4, 5, 0, 0, 1, 21, 0, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.192171}
{'[3, 4, 6, 4, 5, 0, 0, 1, 21, 0, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.192376}
{'[3, 4, 6, 4, 5, 0, 0, 1, 21, 0, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.192062}
{'[3, 4, 6, 4, 5, 0, 0, 1, 21, 0, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.192257}
{'[3, 4, 6, 4, 5, 0, 0, 1, 21, 0, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.192095}
{'[3, 4, 6, 4, 5, 0, 0, 1, 21, 0, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.192161}
{'[3, 4, 6, 4, 5, 0, 0, 1, 21, 0, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.192125}
{'[3, 4, 6, 4, 5, 0, 0, 1, 21, 0, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.191975}
{'[3, 4, 6, 4, 5, 0, 0, 1, 21, 0, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.192084}
{'[3, 4, 6, 4, 5, 0, 0, 1, 21, 0, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.192076}
{'[3, 4, 6, 4, 5, 0, 0, 1, 21, 0, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.192326}
{'[3, 4, 6, 4, 5, 0, 0, 1, 21, 0, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.191924}
{'[3, 4, 6, 4, 5, 0, 0, 1, 21, 0, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.192617}
{'[3, 4, 6, 4, 5, 0, 0, 1, 21, 0, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.192163}
{'[3, 4, 6, 4, 5, 0, 0, 1, 21, 0, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.191964}
{'[3, 4, 6, 4, 5, 0, 0, 1, 21, 0, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.191935}
{'[3, 4, 6, 4, 5, 0, 0, 1, 21, 0, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.192464}
{'[3, 4, 6, 4, 5, 0, 0, 1, 21, 0, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.192176}
{'[3, 4, 6, 4, 5, 0, 0, 1, 21, 0, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.191998}
{'[3, 4, 6, 4, 5, 0, 0, 1, 21, 0, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.191836}

out:
 ["{'[3, 4, 6, 4, 5, 0, 0, 1, 21, 0, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.229358}", "{'[3, 4, 6, 4, 5, 0, 0, 1, 21, 0, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.229192}", "{'[3, 4, 6, 4, 5, 0, 0, 1, 21, 0, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.202577}", "{'[3, 4, 6, 4, 5, 0, 0, 1, 21, 0, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.192492}", "{'[3, 4, 6, 4, 5, 0, 0, 1, 21, 0, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.191947}", "{'[3, 4, 6, 4, 5, 0, 0, 1, 21, 0, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.192038}", "{'[3, 4, 6, 4, 5, 0, 0, 1, 21, 0, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.192062}", "{'[3, 4, 6, 4, 5, 0, 0, 1, 21, 0, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.192027}", "{'[3, 4, 6, 4, 5, 0, 0, 1, 21, 0, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.192384}", "{'[3, 4, 6, 4, 5, 0, 0, 1, 21, 0, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.192476}", "{'[3, 4, 6, 4, 5, 0, 0, 1, 21, 0, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.192171}", "{'[3, 4, 6, 4, 5, 0, 0, 1, 21, 0, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.192376}", "{'[3, 4, 6, 4, 5, 0, 0, 1, 21, 0, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.192062}", "{'[3, 4, 6, 4, 5, 0, 0, 1, 21, 0, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.192257}", "{'[3, 4, 6, 4, 5, 0, 0, 1, 21, 0, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.192095}", "{'[3, 4, 6, 4, 5, 0, 0, 1, 21, 0, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.192161}", "{'[3, 4, 6, 4, 5, 0, 0, 1, 21, 0, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.192125}", "{'[3, 4, 6, 4, 5, 0, 0, 1, 21, 0, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.191975}", "{'[3, 4, 6, 4, 5, 0, 0, 1, 21, 0, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.192084}", "{'[3, 4, 6, 4, 5, 0, 0, 1, 21, 0, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.192076}", "{'[3, 4, 6, 4, 5, 0, 0, 1, 21, 0, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.192326}", "{'[3, 4, 6, 4, 5, 0, 0, 1, 21, 0, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.191924}", "{'[3, 4, 6, 4, 5, 0, 0, 1, 21, 0, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.192617}", "{'[3, 4, 6, 4, 5, 0, 0, 1, 21, 0, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.192163}", "{'[3, 4, 6, 4, 5, 0, 0, 1, 21, 0, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.191964}", "{'[3, 4, 6, 4, 5, 0, 0, 1, 21, 0, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.191935}", "{'[3, 4, 6, 4, 5, 0, 0, 1, 21, 0, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.192464}", "{'[3, 4, 6, 4, 5, 0, 0, 1, 21, 0, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.192176}", "{'[3, 4, 6, 4, 5, 0, 0, 1, 21, 0, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.191998}", "{'[3, 4, 6, 4, 5, 0, 0, 1, 21, 0, 0, 3, 0, 2, 0, 0, 0, 1]' : 0.191836}"]
returning from 'run': {'[3, 4, 6, 4, 5, 0, 0, 1, 21, 0, 0, 3, 0, 2, 0, 0, 0, 1]': ([0.229358, 0.229192, 0.202577, 0.192492, 0.191947, 0.192038, 0.192062, 0.192027, 0.192384, 0.192476, 0.192171, 0.192376, 0.192062, 0.192257, 0.192095, 0.192161, 0.192125, 0.191975, 0.192084, 0.192076, 0.192326, 0.191924, 0.192617, 0.192163, 0.191964, 0.191935, 0.192464, 0.192176, 0.191998, 0.191836], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 4, 6, 4, 5, 0, 0, 1, 21, 0, 0, 3, 0, 2, 0, 0, 0, 1]': ([0.229358, 0.229192, 0.202577, 0.192492, 0.191947, 0.192038, 0.192062, 0.192027, 0.192384, 0.192476, 0.192171, 0.192376, 0.192062, 0.192257, 0.192095, 0.192161, 0.192125, 0.191975, 0.192084, 0.192076, 0.192326, 0.191924, 0.192617, 0.192163, 0.191964, 0.191935, 0.192464, 0.192176, 0.191998, 0.191836], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	4
        Additions: 		607
        Multiplications: 	252
        Divisions: 		0
        Logical: 		0
        Reads: 			1269
        Writes: 		247
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest75.exe __orio_perftest75.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest75.exe  
Program Test Output: 
{'[0, 0, 6, 1, 5, 4, 0, 1, 21, 0, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.104119}
{'[0, 0, 6, 1, 5, 4, 0, 1, 21, 0, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.103973}
{'[0, 0, 6, 1, 5, 4, 0, 1, 21, 0, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.103973}
{'[0, 0, 6, 1, 5, 4, 0, 1, 21, 0, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.104056}
{'[0, 0, 6, 1, 5, 4, 0, 1, 21, 0, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.103868}
{'[0, 0, 6, 1, 5, 4, 0, 1, 21, 0, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.099406}
{'[0, 0, 6, 1, 5, 4, 0, 1, 21, 0, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.0903649}
{'[0, 0, 6, 1, 5, 4, 0, 1, 21, 0, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.0900161}
{'[0, 0, 6, 1, 5, 4, 0, 1, 21, 0, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.0901978}
{'[0, 0, 6, 1, 5, 4, 0, 1, 21, 0, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.0900011}
{'[0, 0, 6, 1, 5, 4, 0, 1, 21, 0, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.0900838}
{'[0, 0, 6, 1, 5, 4, 0, 1, 21, 0, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.0900412}
{'[0, 0, 6, 1, 5, 4, 0, 1, 21, 0, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.0900578}
{'[0, 0, 6, 1, 5, 4, 0, 1, 21, 0, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.0903001}
{'[0, 0, 6, 1, 5, 4, 0, 1, 21, 0, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.090133}
{'[0, 0, 6, 1, 5, 4, 0, 1, 21, 0, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.0901752}
{'[0, 0, 6, 1, 5, 4, 0, 1, 21, 0, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.0901098}
{'[0, 0, 6, 1, 5, 4, 0, 1, 21, 0, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.090306}
{'[0, 0, 6, 1, 5, 4, 0, 1, 21, 0, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.090219}
{'[0, 0, 6, 1, 5, 4, 0, 1, 21, 0, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.090086}
{'[0, 0, 6, 1, 5, 4, 0, 1, 21, 0, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.0900371}
{'[0, 0, 6, 1, 5, 4, 0, 1, 21, 0, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.090219}
{'[0, 0, 6, 1, 5, 4, 0, 1, 21, 0, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.0899692}
{'[0, 0, 6, 1, 5, 4, 0, 1, 21, 0, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.090071}
{'[0, 0, 6, 1, 5, 4, 0, 1, 21, 0, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.0901031}
{'[0, 0, 6, 1, 5, 4, 0, 1, 21, 0, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.0900619}
{'[0, 0, 6, 1, 5, 4, 0, 1, 21, 0, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.0900919}
{'[0, 0, 6, 1, 5, 4, 0, 1, 21, 0, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.0901041}
{'[0, 0, 6, 1, 5, 4, 0, 1, 21, 0, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.0902419}
{'[0, 0, 6, 1, 5, 4, 0, 1, 21, 0, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.0903881}

out:
 ["{'[0, 0, 6, 1, 5, 4, 0, 1, 21, 0, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.104119}", "{'[0, 0, 6, 1, 5, 4, 0, 1, 21, 0, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.103973}", "{'[0, 0, 6, 1, 5, 4, 0, 1, 21, 0, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.103973}", "{'[0, 0, 6, 1, 5, 4, 0, 1, 21, 0, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.104056}", "{'[0, 0, 6, 1, 5, 4, 0, 1, 21, 0, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.103868}", "{'[0, 0, 6, 1, 5, 4, 0, 1, 21, 0, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.099406}", "{'[0, 0, 6, 1, 5, 4, 0, 1, 21, 0, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.0903649}", "{'[0, 0, 6, 1, 5, 4, 0, 1, 21, 0, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.0900161}", "{'[0, 0, 6, 1, 5, 4, 0, 1, 21, 0, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.0901978}", "{'[0, 0, 6, 1, 5, 4, 0, 1, 21, 0, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.0900011}", "{'[0, 0, 6, 1, 5, 4, 0, 1, 21, 0, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.0900838}", "{'[0, 0, 6, 1, 5, 4, 0, 1, 21, 0, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.0900412}", "{'[0, 0, 6, 1, 5, 4, 0, 1, 21, 0, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.0900578}", "{'[0, 0, 6, 1, 5, 4, 0, 1, 21, 0, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.0903001}", "{'[0, 0, 6, 1, 5, 4, 0, 1, 21, 0, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.090133}", "{'[0, 0, 6, 1, 5, 4, 0, 1, 21, 0, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.0901752}", "{'[0, 0, 6, 1, 5, 4, 0, 1, 21, 0, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.0901098}", "{'[0, 0, 6, 1, 5, 4, 0, 1, 21, 0, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.090306}", "{'[0, 0, 6, 1, 5, 4, 0, 1, 21, 0, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.090219}", "{'[0, 0, 6, 1, 5, 4, 0, 1, 21, 0, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.090086}", "{'[0, 0, 6, 1, 5, 4, 0, 1, 21, 0, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.0900371}", "{'[0, 0, 6, 1, 5, 4, 0, 1, 21, 0, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.090219}", "{'[0, 0, 6, 1, 5, 4, 0, 1, 21, 0, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.0899692}", "{'[0, 0, 6, 1, 5, 4, 0, 1, 21, 0, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.090071}", "{'[0, 0, 6, 1, 5, 4, 0, 1, 21, 0, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.0901031}", "{'[0, 0, 6, 1, 5, 4, 0, 1, 21, 0, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.0900619}", "{'[0, 0, 6, 1, 5, 4, 0, 1, 21, 0, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.0900919}", "{'[0, 0, 6, 1, 5, 4, 0, 1, 21, 0, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.0901041}", "{'[0, 0, 6, 1, 5, 4, 0, 1, 21, 0, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.0902419}", "{'[0, 0, 6, 1, 5, 4, 0, 1, 21, 0, 0, 3, 1, 1, 0, 1, 1, 0]' : 0.0903881}"]
returning from 'run': {'[0, 0, 6, 1, 5, 4, 0, 1, 21, 0, 0, 3, 1, 1, 0, 1, 1, 0]': ([0.104119, 0.103973, 0.103973, 0.104056, 0.103868, 0.099406, 0.0903649, 0.0900161, 0.0901978, 0.0900011, 0.0900838, 0.0900412, 0.0900578, 0.0903001, 0.090133, 0.0901752, 0.0901098, 0.090306, 0.090219, 0.090086, 0.0900371, 0.090219, 0.0899692, 0.090071, 0.0901031, 0.0900619, 0.0900919, 0.0901041, 0.0902419, 0.0903881], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 6, 1, 5, 4, 0, 1, 21, 0, 0, 3, 1, 1, 0, 1, 1, 0]': ([0.104119, 0.103973, 0.103973, 0.104056, 0.103868, 0.099406, 0.0903649, 0.0900161, 0.0901978, 0.0900011, 0.0900838, 0.0900412, 0.0900578, 0.0903001, 0.090133, 0.0901752, 0.0901098, 0.090306, 0.090219, 0.090086, 0.0900371, 0.090219, 0.0899692, 0.090071, 0.0901031, 0.0900619, 0.0900919, 0.0901041, 0.0902419, 0.0903881], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	5
        Additions: 		1560
        Multiplications: 	516
        Divisions: 		0
        Logical: 		0
        Reads: 			2818
        Writes: 		341
        Comparisons:		24
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest76.exe __orio_perftest76.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest76.exe  
Program Test Output: 
{'[0, 2, 6, 1, 5, 0, 0, 0, 21, 9, 0, 3, 2, 0, 0, 0, 0, 0]' : 0.184526}
{'[0, 2, 6, 1, 5, 0, 0, 0, 21, 9, 0, 3, 2, 0, 0, 0, 0, 0]' : 0.185756}
{'[0, 2, 6, 1, 5, 0, 0, 0, 21, 9, 0, 3, 2, 0, 0, 0, 0, 0]' : 0.185264}
{'[0, 2, 6, 1, 5, 0, 0, 0, 21, 9, 0, 3, 2, 0, 0, 0, 0, 0]' : 0.184371}
{'[0, 2, 6, 1, 5, 0, 0, 0, 21, 9, 0, 3, 2, 0, 0, 0, 0, 0]' : 0.184922}
{'[0, 2, 6, 1, 5, 0, 0, 0, 21, 9, 0, 3, 2, 0, 0, 0, 0, 0]' : 0.185758}
{'[0, 2, 6, 1, 5, 0, 0, 0, 21, 9, 0, 3, 2, 0, 0, 0, 0, 0]' : 0.185649}
{'[0, 2, 6, 1, 5, 0, 0, 0, 21, 9, 0, 3, 2, 0, 0, 0, 0, 0]' : 0.186491}
{'[0, 2, 6, 1, 5, 0, 0, 0, 21, 9, 0, 3, 2, 0, 0, 0, 0, 0]' : 0.185541}
{'[0, 2, 6, 1, 5, 0, 0, 0, 21, 9, 0, 3, 2, 0, 0, 0, 0, 0]' : 0.185361}
{'[0, 2, 6, 1, 5, 0, 0, 0, 21, 9, 0, 3, 2, 0, 0, 0, 0, 0]' : 0.185661}
{'[0, 2, 6, 1, 5, 0, 0, 0, 21, 9, 0, 3, 2, 0, 0, 0, 0, 0]' : 0.185087}
{'[0, 2, 6, 1, 5, 0, 0, 0, 21, 9, 0, 3, 2, 0, 0, 0, 0, 0]' : 0.185517}
{'[0, 2, 6, 1, 5, 0, 0, 0, 21, 9, 0, 3, 2, 0, 0, 0, 0, 0]' : 0.185473}
{'[0, 2, 6, 1, 5, 0, 0, 0, 21, 9, 0, 3, 2, 0, 0, 0, 0, 0]' : 0.185548}
{'[0, 2, 6, 1, 5, 0, 0, 0, 21, 9, 0, 3, 2, 0, 0, 0, 0, 0]' : 0.185236}
{'[0, 2, 6, 1, 5, 0, 0, 0, 21, 9, 0, 3, 2, 0, 0, 0, 0, 0]' : 0.185267}
{'[0, 2, 6, 1, 5, 0, 0, 0, 21, 9, 0, 3, 2, 0, 0, 0, 0, 0]' : 0.184964}
{'[0, 2, 6, 1, 5, 0, 0, 0, 21, 9, 0, 3, 2, 0, 0, 0, 0, 0]' : 0.18593}
{'[0, 2, 6, 1, 5, 0, 0, 0, 21, 9, 0, 3, 2, 0, 0, 0, 0, 0]' : 0.185385}
{'[0, 2, 6, 1, 5, 0, 0, 0, 21, 9, 0, 3, 2, 0, 0, 0, 0, 0]' : 0.185668}
{'[0, 2, 6, 1, 5, 0, 0, 0, 21, 9, 0, 3, 2, 0, 0, 0, 0, 0]' : 0.184668}
{'[0, 2, 6, 1, 5, 0, 0, 0, 21, 9, 0, 3, 2, 0, 0, 0, 0, 0]' : 0.185459}
{'[0, 2, 6, 1, 5, 0, 0, 0, 21, 9, 0, 3, 2, 0, 0, 0, 0, 0]' : 0.18485}
{'[0, 2, 6, 1, 5, 0, 0, 0, 21, 9, 0, 3, 2, 0, 0, 0, 0, 0]' : 0.185425}
{'[0, 2, 6, 1, 5, 0, 0, 0, 21, 9, 0, 3, 2, 0, 0, 0, 0, 0]' : 0.184334}
{'[0, 2, 6, 1, 5, 0, 0, 0, 21, 9, 0, 3, 2, 0, 0, 0, 0, 0]' : 0.185459}
{'[0, 2, 6, 1, 5, 0, 0, 0, 21, 9, 0, 3, 2, 0, 0, 0, 0, 0]' : 0.185473}
{'[0, 2, 6, 1, 5, 0, 0, 0, 21, 9, 0, 3, 2, 0, 0, 0, 0, 0]' : 0.186606}
{'[0, 2, 6, 1, 5, 0, 0, 0, 21, 9, 0, 3, 2, 0, 0, 0, 0, 0]' : 0.186306}

out:
 ["{'[0, 2, 6, 1, 5, 0, 0, 0, 21, 9, 0, 3, 2, 0, 0, 0, 0, 0]' : 0.184526}", "{'[0, 2, 6, 1, 5, 0, 0, 0, 21, 9, 0, 3, 2, 0, 0, 0, 0, 0]' : 0.185756}", "{'[0, 2, 6, 1, 5, 0, 0, 0, 21, 9, 0, 3, 2, 0, 0, 0, 0, 0]' : 0.185264}", "{'[0, 2, 6, 1, 5, 0, 0, 0, 21, 9, 0, 3, 2, 0, 0, 0, 0, 0]' : 0.184371}", "{'[0, 2, 6, 1, 5, 0, 0, 0, 21, 9, 0, 3, 2, 0, 0, 0, 0, 0]' : 0.184922}", "{'[0, 2, 6, 1, 5, 0, 0, 0, 21, 9, 0, 3, 2, 0, 0, 0, 0, 0]' : 0.185758}", "{'[0, 2, 6, 1, 5, 0, 0, 0, 21, 9, 0, 3, 2, 0, 0, 0, 0, 0]' : 0.185649}", "{'[0, 2, 6, 1, 5, 0, 0, 0, 21, 9, 0, 3, 2, 0, 0, 0, 0, 0]' : 0.186491}", "{'[0, 2, 6, 1, 5, 0, 0, 0, 21, 9, 0, 3, 2, 0, 0, 0, 0, 0]' : 0.185541}", "{'[0, 2, 6, 1, 5, 0, 0, 0, 21, 9, 0, 3, 2, 0, 0, 0, 0, 0]' : 0.185361}", "{'[0, 2, 6, 1, 5, 0, 0, 0, 21, 9, 0, 3, 2, 0, 0, 0, 0, 0]' : 0.185661}", "{'[0, 2, 6, 1, 5, 0, 0, 0, 21, 9, 0, 3, 2, 0, 0, 0, 0, 0]' : 0.185087}", "{'[0, 2, 6, 1, 5, 0, 0, 0, 21, 9, 0, 3, 2, 0, 0, 0, 0, 0]' : 0.185517}", "{'[0, 2, 6, 1, 5, 0, 0, 0, 21, 9, 0, 3, 2, 0, 0, 0, 0, 0]' : 0.185473}", "{'[0, 2, 6, 1, 5, 0, 0, 0, 21, 9, 0, 3, 2, 0, 0, 0, 0, 0]' : 0.185548}", "{'[0, 2, 6, 1, 5, 0, 0, 0, 21, 9, 0, 3, 2, 0, 0, 0, 0, 0]' : 0.185236}", "{'[0, 2, 6, 1, 5, 0, 0, 0, 21, 9, 0, 3, 2, 0, 0, 0, 0, 0]' : 0.185267}", "{'[0, 2, 6, 1, 5, 0, 0, 0, 21, 9, 0, 3, 2, 0, 0, 0, 0, 0]' : 0.184964}", "{'[0, 2, 6, 1, 5, 0, 0, 0, 21, 9, 0, 3, 2, 0, 0, 0, 0, 0]' : 0.18593}", "{'[0, 2, 6, 1, 5, 0, 0, 0, 21, 9, 0, 3, 2, 0, 0, 0, 0, 0]' : 0.185385}", "{'[0, 2, 6, 1, 5, 0, 0, 0, 21, 9, 0, 3, 2, 0, 0, 0, 0, 0]' : 0.185668}", "{'[0, 2, 6, 1, 5, 0, 0, 0, 21, 9, 0, 3, 2, 0, 0, 0, 0, 0]' : 0.184668}", "{'[0, 2, 6, 1, 5, 0, 0, 0, 21, 9, 0, 3, 2, 0, 0, 0, 0, 0]' : 0.185459}", "{'[0, 2, 6, 1, 5, 0, 0, 0, 21, 9, 0, 3, 2, 0, 0, 0, 0, 0]' : 0.18485}", "{'[0, 2, 6, 1, 5, 0, 0, 0, 21, 9, 0, 3, 2, 0, 0, 0, 0, 0]' : 0.185425}", "{'[0, 2, 6, 1, 5, 0, 0, 0, 21, 9, 0, 3, 2, 0, 0, 0, 0, 0]' : 0.184334}", "{'[0, 2, 6, 1, 5, 0, 0, 0, 21, 9, 0, 3, 2, 0, 0, 0, 0, 0]' : 0.185459}", "{'[0, 2, 6, 1, 5, 0, 0, 0, 21, 9, 0, 3, 2, 0, 0, 0, 0, 0]' : 0.185473}", "{'[0, 2, 6, 1, 5, 0, 0, 0, 21, 9, 0, 3, 2, 0, 0, 0, 0, 0]' : 0.186606}", "{'[0, 2, 6, 1, 5, 0, 0, 0, 21, 9, 0, 3, 2, 0, 0, 0, 0, 0]' : 0.186306}"]
returning from 'run': {'[0, 2, 6, 1, 5, 0, 0, 0, 21, 9, 0, 3, 2, 0, 0, 0, 0, 0]': ([0.184526, 0.185756, 0.185264, 0.184371, 0.184922, 0.185758, 0.185649, 0.186491, 0.185541, 0.185361, 0.185661, 0.185087, 0.185517, 0.185473, 0.185548, 0.185236, 0.185267, 0.184964, 0.18593, 0.185385, 0.185668, 0.184668, 0.185459, 0.18485, 0.185425, 0.184334, 0.185459, 0.185473, 0.186606, 0.186306], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 2, 6, 1, 5, 0, 0, 0, 21, 9, 0, 3, 2, 0, 0, 0, 0, 0]': ([0.184526, 0.185756, 0.185264, 0.184371, 0.184922, 0.185758, 0.185649, 0.186491, 0.185541, 0.185361, 0.185661, 0.185087, 0.185517, 0.185473, 0.185548, 0.185236, 0.185267, 0.184964, 0.18593, 0.185385, 0.185668, 0.184668, 0.185459, 0.18485, 0.185425, 0.184334, 0.185459, 0.185473, 0.186606, 0.186306], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	17
        Max loop nest depth: 	5
        Additions: 		393
        Multiplications: 	156
        Divisions: 		0
        Logical: 		0
        Reads: 			882
        Writes: 		203
        Comparisons:		17
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest77.exe __orio_perftest77.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest77.exe  
Program Test Output: 
{'[4, 6, 6, 0, 5, 4, 0, 0, 21, 11, 0, 3, 0, 0, 0, 1, 0, 1]' : 0.1052}
{'[4, 6, 6, 0, 5, 4, 0, 0, 21, 11, 0, 3, 0, 0, 0, 1, 0, 1]' : 0.105206}
{'[4, 6, 6, 0, 5, 4, 0, 0, 21, 11, 0, 3, 0, 0, 0, 1, 0, 1]' : 0.105168}
{'[4, 6, 6, 0, 5, 4, 0, 0, 21, 11, 0, 3, 0, 0, 0, 1, 0, 1]' : 0.105199}
{'[4, 6, 6, 0, 5, 4, 0, 0, 21, 11, 0, 3, 0, 0, 0, 1, 0, 1]' : 0.105123}
{'[4, 6, 6, 0, 5, 4, 0, 0, 21, 11, 0, 3, 0, 0, 0, 1, 0, 1]' : 0.100998}
{'[4, 6, 6, 0, 5, 4, 0, 0, 21, 11, 0, 3, 0, 0, 0, 1, 0, 1]' : 0.0928822}
{'[4, 6, 6, 0, 5, 4, 0, 0, 21, 11, 0, 3, 0, 0, 0, 1, 0, 1]' : 0.0928969}
{'[4, 6, 6, 0, 5, 4, 0, 0, 21, 11, 0, 3, 0, 0, 0, 1, 0, 1]' : 0.0929351}
{'[4, 6, 6, 0, 5, 4, 0, 0, 21, 11, 0, 3, 0, 0, 0, 1, 0, 1]' : 0.0929}
{'[4, 6, 6, 0, 5, 4, 0, 0, 21, 11, 0, 3, 0, 0, 0, 1, 0, 1]' : 0.0929189}
{'[4, 6, 6, 0, 5, 4, 0, 0, 21, 11, 0, 3, 0, 0, 0, 1, 0, 1]' : 0.0930839}
{'[4, 6, 6, 0, 5, 4, 0, 0, 21, 11, 0, 3, 0, 0, 0, 1, 0, 1]' : 0.0929711}
{'[4, 6, 6, 0, 5, 4, 0, 0, 21, 11, 0, 3, 0, 0, 0, 1, 0, 1]' : 0.0931339}
{'[4, 6, 6, 0, 5, 4, 0, 0, 21, 11, 0, 3, 0, 0, 0, 1, 0, 1]' : 0.092875}
{'[4, 6, 6, 0, 5, 4, 0, 0, 21, 11, 0, 3, 0, 0, 0, 1, 0, 1]' : 0.0930169}
{'[4, 6, 6, 0, 5, 4, 0, 0, 21, 11, 0, 3, 0, 0, 0, 1, 0, 1]' : 0.092844}
{'[4, 6, 6, 0, 5, 4, 0, 0, 21, 11, 0, 3, 0, 0, 0, 1, 0, 1]' : 0.092905}
{'[4, 6, 6, 0, 5, 4, 0, 0, 21, 11, 0, 3, 0, 0, 0, 1, 0, 1]' : 0.092977}
{'[4, 6, 6, 0, 5, 4, 0, 0, 21, 11, 0, 3, 0, 0, 0, 1, 0, 1]' : 0.0927911}
{'[4, 6, 6, 0, 5, 4, 0, 0, 21, 11, 0, 3, 0, 0, 0, 1, 0, 1]' : 0.0929208}
{'[4, 6, 6, 0, 5, 4, 0, 0, 21, 11, 0, 3, 0, 0, 0, 1, 0, 1]' : 0.0930631}
{'[4, 6, 6, 0, 5, 4, 0, 0, 21, 11, 0, 3, 0, 0, 0, 1, 0, 1]' : 0.092942}
{'[4, 6, 6, 0, 5, 4, 0, 0, 21, 11, 0, 3, 0, 0, 0, 1, 0, 1]' : 0.0931702}
{'[4, 6, 6, 0, 5, 4, 0, 0, 21, 11, 0, 3, 0, 0, 0, 1, 0, 1]' : 0.0933869}
{'[4, 6, 6, 0, 5, 4, 0, 0, 21, 11, 0, 3, 0, 0, 0, 1, 0, 1]' : 0.092855}
{'[4, 6, 6, 0, 5, 4, 0, 0, 21, 11, 0, 3, 0, 0, 0, 1, 0, 1]' : 0.092819}
{'[4, 6, 6, 0, 5, 4, 0, 0, 21, 11, 0, 3, 0, 0, 0, 1, 0, 1]' : 0.0928469}
{'[4, 6, 6, 0, 5, 4, 0, 0, 21, 11, 0, 3, 0, 0, 0, 1, 0, 1]' : 0.0928841}
{'[4, 6, 6, 0, 5, 4, 0, 0, 21, 11, 0, 3, 0, 0, 0, 1, 0, 1]' : 0.0928721}

out:
 ["{'[4, 6, 6, 0, 5, 4, 0, 0, 21, 11, 0, 3, 0, 0, 0, 1, 0, 1]' : 0.1052}", "{'[4, 6, 6, 0, 5, 4, 0, 0, 21, 11, 0, 3, 0, 0, 0, 1, 0, 1]' : 0.105206}", "{'[4, 6, 6, 0, 5, 4, 0, 0, 21, 11, 0, 3, 0, 0, 0, 1, 0, 1]' : 0.105168}", "{'[4, 6, 6, 0, 5, 4, 0, 0, 21, 11, 0, 3, 0, 0, 0, 1, 0, 1]' : 0.105199}", "{'[4, 6, 6, 0, 5, 4, 0, 0, 21, 11, 0, 3, 0, 0, 0, 1, 0, 1]' : 0.105123}", "{'[4, 6, 6, 0, 5, 4, 0, 0, 21, 11, 0, 3, 0, 0, 0, 1, 0, 1]' : 0.100998}", "{'[4, 6, 6, 0, 5, 4, 0, 0, 21, 11, 0, 3, 0, 0, 0, 1, 0, 1]' : 0.0928822}", "{'[4, 6, 6, 0, 5, 4, 0, 0, 21, 11, 0, 3, 0, 0, 0, 1, 0, 1]' : 0.0928969}", "{'[4, 6, 6, 0, 5, 4, 0, 0, 21, 11, 0, 3, 0, 0, 0, 1, 0, 1]' : 0.0929351}", "{'[4, 6, 6, 0, 5, 4, 0, 0, 21, 11, 0, 3, 0, 0, 0, 1, 0, 1]' : 0.0929}", "{'[4, 6, 6, 0, 5, 4, 0, 0, 21, 11, 0, 3, 0, 0, 0, 1, 0, 1]' : 0.0929189}", "{'[4, 6, 6, 0, 5, 4, 0, 0, 21, 11, 0, 3, 0, 0, 0, 1, 0, 1]' : 0.0930839}", "{'[4, 6, 6, 0, 5, 4, 0, 0, 21, 11, 0, 3, 0, 0, 0, 1, 0, 1]' : 0.0929711}", "{'[4, 6, 6, 0, 5, 4, 0, 0, 21, 11, 0, 3, 0, 0, 0, 1, 0, 1]' : 0.0931339}", "{'[4, 6, 6, 0, 5, 4, 0, 0, 21, 11, 0, 3, 0, 0, 0, 1, 0, 1]' : 0.092875}", "{'[4, 6, 6, 0, 5, 4, 0, 0, 21, 11, 0, 3, 0, 0, 0, 1, 0, 1]' : 0.0930169}", "{'[4, 6, 6, 0, 5, 4, 0, 0, 21, 11, 0, 3, 0, 0, 0, 1, 0, 1]' : 0.092844}", "{'[4, 6, 6, 0, 5, 4, 0, 0, 21, 11, 0, 3, 0, 0, 0, 1, 0, 1]' : 0.092905}", "{'[4, 6, 6, 0, 5, 4, 0, 0, 21, 11, 0, 3, 0, 0, 0, 1, 0, 1]' : 0.092977}", "{'[4, 6, 6, 0, 5, 4, 0, 0, 21, 11, 0, 3, 0, 0, 0, 1, 0, 1]' : 0.0927911}", "{'[4, 6, 6, 0, 5, 4, 0, 0, 21, 11, 0, 3, 0, 0, 0, 1, 0, 1]' : 0.0929208}", "{'[4, 6, 6, 0, 5, 4, 0, 0, 21, 11, 0, 3, 0, 0, 0, 1, 0, 1]' : 0.0930631}", "{'[4, 6, 6, 0, 5, 4, 0, 0, 21, 11, 0, 3, 0, 0, 0, 1, 0, 1]' : 0.092942}", "{'[4, 6, 6, 0, 5, 4, 0, 0, 21, 11, 0, 3, 0, 0, 0, 1, 0, 1]' : 0.0931702}", "{'[4, 6, 6, 0, 5, 4, 0, 0, 21, 11, 0, 3, 0, 0, 0, 1, 0, 1]' : 0.0933869}", "{'[4, 6, 6, 0, 5, 4, 0, 0, 21, 11, 0, 3, 0, 0, 0, 1, 0, 1]' : 0.092855}", "{'[4, 6, 6, 0, 5, 4, 0, 0, 21, 11, 0, 3, 0, 0, 0, 1, 0, 1]' : 0.092819}", "{'[4, 6, 6, 0, 5, 4, 0, 0, 21, 11, 0, 3, 0, 0, 0, 1, 0, 1]' : 0.0928469}", "{'[4, 6, 6, 0, 5, 4, 0, 0, 21, 11, 0, 3, 0, 0, 0, 1, 0, 1]' : 0.0928841}", "{'[4, 6, 6, 0, 5, 4, 0, 0, 21, 11, 0, 3, 0, 0, 0, 1, 0, 1]' : 0.0928721}"]
returning from 'run': {'[4, 6, 6, 0, 5, 4, 0, 0, 21, 11, 0, 3, 0, 0, 0, 1, 0, 1]': ([0.1052, 0.105206, 0.105168, 0.105199, 0.105123, 0.100998, 0.0928822, 0.0928969, 0.0929351, 0.0929, 0.0929189, 0.0930839, 0.0929711, 0.0931339, 0.092875, 0.0930169, 0.092844, 0.092905, 0.092977, 0.0927911, 0.0929208, 0.0930631, 0.092942, 0.0931702, 0.0933869, 0.092855, 0.092819, 0.0928469, 0.0928841, 0.0928721], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 6, 6, 0, 5, 4, 0, 0, 21, 11, 0, 3, 0, 0, 0, 1, 0, 1]': ([0.1052, 0.105206, 0.105168, 0.105199, 0.105123, 0.100998, 0.0928822, 0.0928969, 0.0929351, 0.0929, 0.0929189, 0.0930839, 0.0929711, 0.0931339, 0.092875, 0.0930169, 0.092844, 0.092905, 0.092977, 0.0927911, 0.0929208, 0.0930631, 0.092942, 0.0931702, 0.0933869, 0.092855, 0.092819, 0.0928469, 0.0928841, 0.0928721], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = iii
Code stats:
        Number of loops: 	37
        Max loop nest depth: 	5
        Additions: 		1662
        Multiplications: 	660
        Divisions: 		0
        Logical: 		0
        Reads: 			3299
        Writes: 		609
        Comparisons:		37
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest78.exe __orio_perftest78.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest78.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: " ./__orio_perftest78.exe  "
 --> CalledProcessError: Command ' ./__orio_perftest78.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: " ./__orio_perftest78.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 131, in search
    best_coord,best_perf,search_time,runs,speedup = self.searchBestCoord(startCoord)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 649, in searchBestCoord
    best_point, used_points = self.dopt_anova(initial_factors, initial_inverse_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 572, in dopt_anova
    i)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 521, in dopt_anova_step
    design                 = self.measure_design(design, response, fixed_factors)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/doptanova/doptanova.py", line 414, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/search/search.py", line 344, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/polaris/rochabrp/code/orio_experiments/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Complete design, with measurements:
     T1_I T1_J T2_I T2_K ACOPY_x ACOPY_y U_I RT_I RT_J RT_K SCR VEC1 VEC2
334     6    5    6    4       0       0  10    1    0    1   1    0    1
460     3    4    0    6       0       0  29    0    1    1   0    0    0
468     1    2    6    0       0       0  29    0    0    2   0    1    1
510     0    0    6    6       0       1  28    0    0    1   1    1    0
547     3    0    0    5       0       0   8    2    0    0   1    1    0
647     6    1    6    0       1       0   0    1    1    0   0    0    0
767     6    6    6    5       1       0   0    2    0    0   1    1    1
993     2    2    0    5       0       0  28    1    1    0   0    0    0
1021    0    2    0    0       1       0   0    0    0    0   1    0    0
1060    3    0    3    0       0       1   0    1    0    1   1    0    1
1067    1    6    5    0       0       0  26    0    2    0   1    1    0
1090    0    3    0    5       1       1  22    1    0    1   0    1    0
1176    2    1    2    4       1       0  27    0    1    1   1    0    1
1275    2    4    0    6       0       1   0    0    0    0   1    1    1
1436    6    6    5    6       0       1  29    2    0    0   0    1    1
1688    0    6    5    0       1       1  20    0    1    0   1    1    1
1730    4    0    5    0       1       0  10    0    0    0   0    0    0
1994    3    6    2    6       1       0   7    1    0    1   1    1    1
2108    3    2    6    6       1       1   8    2    0    0   1    0    1
2226    6    0    6    0       0       1  21    2    0    0   1    1    1
2385    3    4    0    0       1       0  28    0    0    2   1    0    0
2492    3    4    4    0       0       1   0    0    2    0   0    0    1
2837    0    0    1    4       0       1   0    1    1    0   1    1    0
2906    0    2    1    0       0       0   9    2    0    0   0    0    0
2932    4    6    0    4       0       0  11    0    0    0   1    0    1
      cost_mean
334  0.09349748
460  0.17724087
468  0.17280880
510  0.17588083
547  0.14708577
647  0.11609197
767  0.14108997
993  0.11186853
1021 0.18837160
1060 0.10345260
1067 0.15140427
1090 0.10811853
1176 0.17422503
1275 0.19675713
1436 0.13869897
1688 0.15983833
1730 0.13810303
1994 0.10207243
2108 0.14383857
2226 0.13865597
2385 0.17666177
2492 0.19497793
2837 0.09275914
2906 0.18539850
2932 0.09525950

Heteroscedasticity Test p-value: 0.214771231684
Regression Step:                Df   Sum Sq  Mean Sq F value Pr(>F)  
T1_I             1 0.003129 0.003129   4.737 0.1177  
T1_J             1 0.000044 0.000044   0.067 0.8122  
T2_I             1 0.000208 0.000208   0.316 0.6135  
T2_K             1 0.000877 0.000877   1.328 0.3327  
ACOPY_x          1 0.000018 0.000018   0.028 0.8788  
ACOPY_y          1 0.000014 0.000014   0.022 0.8918  
U_I              1 0.000478 0.000478   0.723 0.4576  
RT_I             1 0.000771 0.000771   1.168 0.3589  
RT_J             1 0.000018 0.000018   0.027 0.8791  
RT_K             1 0.000313 0.000313   0.474 0.5407  
SCR              1 0.000160 0.000160   0.242 0.6563  
VEC1             1 0.000028 0.000028   0.042 0.8503  
VEC2             1 0.000307 0.000307   0.465 0.5442  
I(1/(1 + T1_I))  1 0.000692 0.000692   1.048 0.3813  
I(1/(1 + T1_J))  1 0.003728 0.003728   5.645 0.0980 .
I(1/(1 + T2_I))  1 0.000423 0.000423   0.640 0.4822  
I(1/(1 + T2_K))  1 0.005016 0.005016   7.594 0.0704 .
I(1/(1 + U_I))   1 0.000138 0.000138   0.209 0.6785  
I(1/(1 + RT_I))  1 0.009978 0.009978  15.107 0.0302 *
I(1/(1 + RT_J))  1 0.000015 0.000015   0.023 0.8897  
I(1/(1 + RT_K))  1 0.000102 0.000102   0.155 0.7200  
Residuals        3 0.001981 0.000660                 
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Predicting Best
Generating valid search space of size 3100 (does not spend evaluations)
Valid coordinates: 620
Valid coordinates: 1240
Valid coordinates: 1860
Tested coordinates: 10000
Valid coordinates: 2480
Valid coordinates: 3100
Valid/Tested configurations: 3100/16386
Generated Search Space:
NULL
Identical predictions (tol = 1e-5): 1
Getting Best from Design
Response: ['cost_mean']
Design Names:  [1] "T1_I"      "T1_J"      "T2_I"      "T2_K"      "ACOPY_x"   "ACOPY_y"  
 [7] "U_I"       "RT_I"      "RT_J"      "RT_K"      "SCR"       "VEC1"     
[13] "VEC2"      "cost_mean"

Design Response:       cost_mean
334  0.09349748
460  0.17724087
468  0.17280880
510  0.17588083
547  0.14708577
647  0.11609197
767  0.14108997
993  0.11186853
1021 0.18837160
1060 0.10345260
1067 0.15140427
1090 0.10811853
1176 0.17422503
1275 0.19675713
1436 0.13869897
1688 0.15983833
1730 0.13810303
1994 0.10207243
2108 0.14383857
2226 0.13865597
2385 0.17666177
2492 0.19497793
2837 0.09275914
2906 0.18539850
2932 0.09525950

Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U_I', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Getting fixed variables
Pruning Model
Best Predicted:      T1_I T1_J T1_K T2_I T2_J T2_K ACOPY_x ACOPY_y U1_I U_I U_J U_K RT_I RT_J
2233    2    0    6    6    5    4       0       1   21  17   0   3    1    0
     RT_K SCR VEC1 VEC2
2233    0   0    0    1

Best From Design: [0, 0, 6, 1, 5, 4, 0, 1, 21, 0, 0, 3, 1, 1, 0, 1, 1, 0]
Pruned Factors: ['T1_I', 'T1_J', 'T2_I', 'T2_K', 'ACOPY_x', 'ACOPY_y', 'U_I', 'RT_J', 'RT_K', 'SCR', 'VEC1', 'VEC2']
Fixed Factors: {'RT_I': 1, 'T1_K': 6, 'U_K': 3, 'U_J': 0, 'T2_J': 5, 'U1_I': 21}
Length of requested configs: 1
Result was on Database, Returning Now
Starting Point (-O3):
0.16283083333333334
Predicted Best Point:
[2, 0, 6, 6, 5, 4, 0, 1, 21, 17, 0, 3, 1, 0, 0, 0, 0, 1]
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	96
        Max loop nest depth: 	5
        Additions: 		1720
        Multiplications: 	324
        Divisions: 		0
        Logical: 		0
        Reads: 			3042
        Writes: 		500
        Comparisons:		96
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest79.exe __orio_perftest79.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest79.exe  
Program Test Output: 
{'[2, 0, 6, 6, 5, 4, 0, 1, 21, 17, 0, 3, 1, 0, 0, 0, 0, 1]' : 0.111719}
{'[2, 0, 6, 6, 5, 4, 0, 1, 21, 17, 0, 3, 1, 0, 0, 0, 0, 1]' : 0.111569}
{'[2, 0, 6, 6, 5, 4, 0, 1, 21, 17, 0, 3, 1, 0, 0, 0, 0, 1]' : 0.111182}
{'[2, 0, 6, 6, 5, 4, 0, 1, 21, 17, 0, 3, 1, 0, 0, 0, 0, 1]' : 0.101648}
{'[2, 0, 6, 6, 5, 4, 0, 1, 21, 17, 0, 3, 1, 0, 0, 0, 0, 1]' : 0.100628}
{'[2, 0, 6, 6, 5, 4, 0, 1, 21, 17, 0, 3, 1, 0, 0, 0, 0, 1]' : 0.100703}
{'[2, 0, 6, 6, 5, 4, 0, 1, 21, 17, 0, 3, 1, 0, 0, 0, 0, 1]' : 0.100583}
{'[2, 0, 6, 6, 5, 4, 0, 1, 21, 17, 0, 3, 1, 0, 0, 0, 0, 1]' : 0.10067}
{'[2, 0, 6, 6, 5, 4, 0, 1, 21, 17, 0, 3, 1, 0, 0, 0, 0, 1]' : 0.100738}
{'[2, 0, 6, 6, 5, 4, 0, 1, 21, 17, 0, 3, 1, 0, 0, 0, 0, 1]' : 0.100846}
{'[2, 0, 6, 6, 5, 4, 0, 1, 21, 17, 0, 3, 1, 0, 0, 0, 0, 1]' : 0.100629}
{'[2, 0, 6, 6, 5, 4, 0, 1, 21, 17, 0, 3, 1, 0, 0, 0, 0, 1]' : 0.100672}
{'[2, 0, 6, 6, 5, 4, 0, 1, 21, 17, 0, 3, 1, 0, 0, 0, 0, 1]' : 0.100912}
{'[2, 0, 6, 6, 5, 4, 0, 1, 21, 17, 0, 3, 1, 0, 0, 0, 0, 1]' : 0.100704}
{'[2, 0, 6, 6, 5, 4, 0, 1, 21, 17, 0, 3, 1, 0, 0, 0, 0, 1]' : 0.102498}
{'[2, 0, 6, 6, 5, 4, 0, 1, 21, 17, 0, 3, 1, 0, 0, 0, 0, 1]' : 0.102991}
{'[2, 0, 6, 6, 5, 4, 0, 1, 21, 17, 0, 3, 1, 0, 0, 0, 0, 1]' : 0.10294}
{'[2, 0, 6, 6, 5, 4, 0, 1, 21, 17, 0, 3, 1, 0, 0, 0, 0, 1]' : 0.102995}
{'[2, 0, 6, 6, 5, 4, 0, 1, 21, 17, 0, 3, 1, 0, 0, 0, 0, 1]' : 0.100227}
{'[2, 0, 6, 6, 5, 4, 0, 1, 21, 17, 0, 3, 1, 0, 0, 0, 0, 1]' : 0.100321}
{'[2, 0, 6, 6, 5, 4, 0, 1, 21, 17, 0, 3, 1, 0, 0, 0, 0, 1]' : 0.100676}
{'[2, 0, 6, 6, 5, 4, 0, 1, 21, 17, 0, 3, 1, 0, 0, 0, 0, 1]' : 0.100743}
{'[2, 0, 6, 6, 5, 4, 0, 1, 21, 17, 0, 3, 1, 0, 0, 0, 0, 1]' : 0.100622}
{'[2, 0, 6, 6, 5, 4, 0, 1, 21, 17, 0, 3, 1, 0, 0, 0, 0, 1]' : 0.100691}
{'[2, 0, 6, 6, 5, 4, 0, 1, 21, 17, 0, 3, 1, 0, 0, 0, 0, 1]' : 0.100844}
{'[2, 0, 6, 6, 5, 4, 0, 1, 21, 17, 0, 3, 1, 0, 0, 0, 0, 1]' : 0.100726}
{'[2, 0, 6, 6, 5, 4, 0, 1, 21, 17, 0, 3, 1, 0, 0, 0, 0, 1]' : 0.100624}
{'[2, 0, 6, 6, 5, 4, 0, 1, 21, 17, 0, 3, 1, 0, 0, 0, 0, 1]' : 0.10107}
{'[2, 0, 6, 6, 5, 4, 0, 1, 21, 17, 0, 3, 1, 0, 0, 0, 0, 1]' : 0.100726}
{'[2, 0, 6, 6, 5, 4, 0, 1, 21, 17, 0, 3, 1, 0, 0, 0, 0, 1]' : 0.100912}

out:
 ["{'[2, 0, 6, 6, 5, 4, 0, 1, 21, 17, 0, 3, 1, 0, 0, 0, 0, 1]' : 0.111719}", "{'[2, 0, 6, 6, 5, 4, 0, 1, 21, 17, 0, 3, 1, 0, 0, 0, 0, 1]' : 0.111569}", "{'[2, 0, 6, 6, 5, 4, 0, 1, 21, 17, 0, 3, 1, 0, 0, 0, 0, 1]' : 0.111182}", "{'[2, 0, 6, 6, 5, 4, 0, 1, 21, 17, 0, 3, 1, 0, 0, 0, 0, 1]' : 0.101648}", "{'[2, 0, 6, 6, 5, 4, 0, 1, 21, 17, 0, 3, 1, 0, 0, 0, 0, 1]' : 0.100628}", "{'[2, 0, 6, 6, 5, 4, 0, 1, 21, 17, 0, 3, 1, 0, 0, 0, 0, 1]' : 0.100703}", "{'[2, 0, 6, 6, 5, 4, 0, 1, 21, 17, 0, 3, 1, 0, 0, 0, 0, 1]' : 0.100583}", "{'[2, 0, 6, 6, 5, 4, 0, 1, 21, 17, 0, 3, 1, 0, 0, 0, 0, 1]' : 0.10067}", "{'[2, 0, 6, 6, 5, 4, 0, 1, 21, 17, 0, 3, 1, 0, 0, 0, 0, 1]' : 0.100738}", "{'[2, 0, 6, 6, 5, 4, 0, 1, 21, 17, 0, 3, 1, 0, 0, 0, 0, 1]' : 0.100846}", "{'[2, 0, 6, 6, 5, 4, 0, 1, 21, 17, 0, 3, 1, 0, 0, 0, 0, 1]' : 0.100629}", "{'[2, 0, 6, 6, 5, 4, 0, 1, 21, 17, 0, 3, 1, 0, 0, 0, 0, 1]' : 0.100672}", "{'[2, 0, 6, 6, 5, 4, 0, 1, 21, 17, 0, 3, 1, 0, 0, 0, 0, 1]' : 0.100912}", "{'[2, 0, 6, 6, 5, 4, 0, 1, 21, 17, 0, 3, 1, 0, 0, 0, 0, 1]' : 0.100704}", "{'[2, 0, 6, 6, 5, 4, 0, 1, 21, 17, 0, 3, 1, 0, 0, 0, 0, 1]' : 0.102498}", "{'[2, 0, 6, 6, 5, 4, 0, 1, 21, 17, 0, 3, 1, 0, 0, 0, 0, 1]' : 0.102991}", "{'[2, 0, 6, 6, 5, 4, 0, 1, 21, 17, 0, 3, 1, 0, 0, 0, 0, 1]' : 0.10294}", "{'[2, 0, 6, 6, 5, 4, 0, 1, 21, 17, 0, 3, 1, 0, 0, 0, 0, 1]' : 0.102995}", "{'[2, 0, 6, 6, 5, 4, 0, 1, 21, 17, 0, 3, 1, 0, 0, 0, 0, 1]' : 0.100227}", "{'[2, 0, 6, 6, 5, 4, 0, 1, 21, 17, 0, 3, 1, 0, 0, 0, 0, 1]' : 0.100321}", "{'[2, 0, 6, 6, 5, 4, 0, 1, 21, 17, 0, 3, 1, 0, 0, 0, 0, 1]' : 0.100676}", "{'[2, 0, 6, 6, 5, 4, 0, 1, 21, 17, 0, 3, 1, 0, 0, 0, 0, 1]' : 0.100743}", "{'[2, 0, 6, 6, 5, 4, 0, 1, 21, 17, 0, 3, 1, 0, 0, 0, 0, 1]' : 0.100622}", "{'[2, 0, 6, 6, 5, 4, 0, 1, 21, 17, 0, 3, 1, 0, 0, 0, 0, 1]' : 0.100691}", "{'[2, 0, 6, 6, 5, 4, 0, 1, 21, 17, 0, 3, 1, 0, 0, 0, 0, 1]' : 0.100844}", "{'[2, 0, 6, 6, 5, 4, 0, 1, 21, 17, 0, 3, 1, 0, 0, 0, 0, 1]' : 0.100726}", "{'[2, 0, 6, 6, 5, 4, 0, 1, 21, 17, 0, 3, 1, 0, 0, 0, 0, 1]' : 0.100624}", "{'[2, 0, 6, 6, 5, 4, 0, 1, 21, 17, 0, 3, 1, 0, 0, 0, 0, 1]' : 0.10107}", "{'[2, 0, 6, 6, 5, 4, 0, 1, 21, 17, 0, 3, 1, 0, 0, 0, 0, 1]' : 0.100726}", "{'[2, 0, 6, 6, 5, 4, 0, 1, 21, 17, 0, 3, 1, 0, 0, 0, 0, 1]' : 0.100912}"]
returning from 'run': {'[2, 0, 6, 6, 5, 4, 0, 1, 21, 17, 0, 3, 1, 0, 0, 0, 0, 1]': ([0.111719, 0.111569, 0.111182, 0.101648, 0.100628, 0.100703, 0.100583, 0.10067, 0.100738, 0.100846, 0.100629, 0.100672, 0.100912, 0.100704, 0.102498, 0.102991, 0.10294, 0.102995, 0.100227, 0.100321, 0.100676, 0.100743, 0.100622, 0.100691, 0.100844, 0.100726, 0.100624, 0.10107, 0.100726, 0.100912], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 0, 6, 6, 5, 4, 0, 1, 21, 17, 0, 3, 1, 0, 0, 0, 0, 1]': ([0.111719, 0.111569, 0.111182, 0.101648, 0.100628, 0.100703, 0.100583, 0.10067, 0.100738, 0.100846, 0.100629, 0.100672, 0.100912, 0.100704, 0.102498, 0.102991, 0.10294, 0.102995, 0.100227, 0.100321, 0.100676, 0.100743, 0.100622, 0.100691, 0.100844, 0.100726, 0.100624, 0.10107, 0.100726, 0.100912], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Design Best Point:
[0, 0, 6, 1, 5, 4, 0, 1, 21, 0, 0, 3, 1, 1, 0, 1, 1, 0]
Length of requested configs: 1
Result was on Database, Returning Now
Fixed Factors: {'RT_I': 1, 'T1_K': 6, 'U_K': 3, 'U_J': 0, 'T2_J': 5, 'U1_I': 21}
Slowdown (Design Best): 0.5696656755221419
Slowdown (Predicted Best): 0.6269920213718736
Budget: 65/180
Updating Global Best: 0.09275913666666663
Current Best Point: 
[0, 0, 6, 1, 5, 4, 0, 1, 21, 0, 0, 3, 1, 1, 0, 1, 1, 0]
Final Best Point: 
[0, 0, 6, 1, 5, 4, 0, 1, 21, 0, 0, 3, 1, 1, 0, 1, 1, 0]
Ending DOPT-ANOVA
Best Point: [0, 0, 6, 1, 5, 4, 0, 1, 21, 0, 0, 3, 1, 1, 0, 1, 1, 0]
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Speedup: 1.7554155761331838
----- end random search -----
----- begin random search summary -----
 total completed runs: 0
 total successful runs: 0
 total failed runs: 0
 speedup: 1.7554155761331838
----- end random search summary -----
----- begin summary -----
 best coordinate: [0, 0, 6, 1, 5, 4, 0, 1, 21, 0, 0, 3, 1, 1, 0, 1, 1, 0]={'ACOPY_x': False, 'ACOPY_y': True, 'RT_K': 1, 'T1_I': 1, 'T1_J': 1, 'T1_K': 512, 'U_K': 4, 'U_J': 1, 'U_I': 1, 'U1_I': 22, 'T2_K': 512, 'T2_J': 1024, 'T2_I': 64, 'VEC2': False, 'VEC1': True, 'RT_I': 8, 'SCR': True, 'RT_J': 8}, cost=9.275914e-02, transfer_time=inf, inputs=[('N', 10000)], search_time=-2150.14, runs=65
----- end summary -----
Length of requested configs: 1
Result was on Database, Returning Now
----- the obtained best performance parameters -----
 ACOPY_x = False
 ACOPY_y = True
 RT_I = 8
 RT_J = 8
 RT_K = 1
 SCR = True
 T1_I = 1
 T1_J = 1
 T1_K = 512
 T2_I = 64
 T2_J = 1024
 T2_K = 512
 U1_I = 22
 U_I = 1
 U_J = 1
 U_K = 4
 VEC1 = True
 VEC2 = False
 cost_mean = 0.09275913666666663
 points = 65
 speedup_O3 = 1.7554155761331838
 technique = DLMT
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	4
        Additions: 		607
        Multiplications: 	252
        Divisions: 		0
        Logical: 		0
        Reads: 			1269
        Writes: 		247
        Comparisons:		21
        Gotos: 			0
        
----- finish optimizations -----

----- begin removing annotations from output-----
----- finished removing annotations from output-----

----- begin writing the output file(s) -----
--> writing output to: _atax2.src1.c
----- finished writing the output file(s) -----

====== END ORIO ======
