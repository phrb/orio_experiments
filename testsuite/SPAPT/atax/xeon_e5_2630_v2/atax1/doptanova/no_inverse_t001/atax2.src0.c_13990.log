
====== START ORIO ======

----- begin reading the source file: atax2.src0.c -----
----- finished reading the source file -----

----- begin parsing annotations -----
----- finished parsing annotations -----

----- begin optimizations -----
Search_Space         = 2.573e+12
Number_of_Parameters = 13
Numeric_Parameters   = 13
Binary_Parameters    = 00
['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
[[1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 8, 32], [1, 8, 32], [1, 8, 32]]

----- begin empirical tuning for problem size -----
 N = 10000
Parameters: {'RT_K': [0, 3], 'T1_I': [0, 7], 'T1_J': [0, 7], 'T1_K': [0, 7], 'U_K': [0, 30], 'U_J': [0, 30], 'U_I': [0, 30], 'U1_I': [0, 30], 'T2_K': [0, 7], 'T2_J': [0, 7], 'T2_I': [0, 7], 'RT_I': [0, 3], 'RT_J': [0, 3]}
Parameter Range Values: {'RT_K': [1, 8, 32], 'T1_I': [1, 16, 32, 64, 128, 256, 512], 'T1_J': [1, 16, 32, 64, 128, 256, 512], 'T1_K': [1, 16, 32, 64, 128, 256, 512], 'U_K': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_J': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U1_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'T2_K': [1, 64, 128, 256, 512, 1024, 2048], 'T2_J': [1, 64, 128, 256, 512, 1024, 2048], 'T2_I': [1, 64, 128, 256, 512, 1024, 2048], 'RT_I': [1, 8, 32], 'RT_J': [1, 8, 32]}

----- begin DLMT -----
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Initial Inverse Factors: []
Initial Interactions: []
Starting DLMT
Step 0
Full Model:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K
Generating valid search space of size 36000 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Tested coordinates: 110000
Tested coordinates: 120000
Tested coordinates: 130000
Tested coordinates: 140000
Tested coordinates: 150000
Tested coordinates: 160000
Tested coordinates: 170000
Tested coordinates: 180000
Tested coordinates: 190000
Tested coordinates: 200000
Tested coordinates: 210000
Tested coordinates: 220000
Tested coordinates: 230000
Tested coordinates: 240000
Tested coordinates: 250000
Tested coordinates: 260000
Tested coordinates: 270000
Tested coordinates: 280000
Tested coordinates: 290000
Valid coordinates: 7200
Tested coordinates: 300000
Tested coordinates: 310000
Tested coordinates: 320000
Tested coordinates: 330000
Tested coordinates: 340000
Tested coordinates: 350000
Tested coordinates: 360000
Tested coordinates: 370000
Tested coordinates: 380000
Tested coordinates: 390000
Tested coordinates: 400000
Tested coordinates: 410000
Tested coordinates: 420000
Tested coordinates: 430000
Tested coordinates: 440000
Tested coordinates: 450000
Tested coordinates: 460000
Tested coordinates: 470000
Tested coordinates: 480000
Tested coordinates: 490000
Tested coordinates: 500000
Tested coordinates: 510000
Tested coordinates: 520000
Tested coordinates: 530000
Tested coordinates: 540000
Tested coordinates: 550000
Tested coordinates: 560000
Tested coordinates: 570000
Tested coordinates: 580000
Tested coordinates: 590000
Valid coordinates: 14400
Tested coordinates: 600000
Tested coordinates: 610000
Tested coordinates: 620000
Tested coordinates: 630000
Tested coordinates: 640000
Tested coordinates: 650000
Tested coordinates: 660000
Tested coordinates: 670000
Tested coordinates: 680000
Tested coordinates: 690000
Tested coordinates: 700000
Tested coordinates: 710000
Tested coordinates: 720000
Tested coordinates: 730000
Tested coordinates: 740000
Tested coordinates: 750000
Tested coordinates: 760000
Tested coordinates: 770000
Tested coordinates: 780000
Tested coordinates: 790000
Tested coordinates: 800000
Tested coordinates: 810000
Tested coordinates: 820000
Tested coordinates: 830000
Tested coordinates: 840000
Tested coordinates: 850000
Tested coordinates: 860000
Tested coordinates: 870000
Tested coordinates: 880000
Tested coordinates: 890000
Valid coordinates: 21600
Tested coordinates: 900000
Tested coordinates: 910000
Tested coordinates: 920000
Tested coordinates: 930000
Tested coordinates: 940000
Tested coordinates: 950000
Tested coordinates: 960000
Tested coordinates: 970000
Tested coordinates: 980000
Tested coordinates: 990000
Tested coordinates: 1000000
Tested coordinates: 1010000
Tested coordinates: 1020000
Tested coordinates: 1030000
Tested coordinates: 1040000
Tested coordinates: 1050000
Tested coordinates: 1060000
Tested coordinates: 1070000
Tested coordinates: 1080000
Tested coordinates: 1090000
Tested coordinates: 1100000
Tested coordinates: 1110000
Tested coordinates: 1120000
Tested coordinates: 1130000
Tested coordinates: 1140000
Tested coordinates: 1150000
Tested coordinates: 1160000
Tested coordinates: 1170000
Tested coordinates: 1180000
Valid coordinates: 28800
Tested coordinates: 1190000
Tested coordinates: 1200000
Tested coordinates: 1210000
Tested coordinates: 1220000
Tested coordinates: 1230000
Tested coordinates: 1240000
Tested coordinates: 1250000
Tested coordinates: 1260000
Tested coordinates: 1270000
Tested coordinates: 1280000
Tested coordinates: 1290000
Tested coordinates: 1300000
Tested coordinates: 1310000
Tested coordinates: 1320000
Tested coordinates: 1330000
Tested coordinates: 1340000
Tested coordinates: 1350000
Tested coordinates: 1360000
Tested coordinates: 1370000
Tested coordinates: 1380000
Tested coordinates: 1390000
Tested coordinates: 1400000
Tested coordinates: 1410000
Tested coordinates: 1420000
Tested coordinates: 1430000
Tested coordinates: 1440000
Tested coordinates: 1450000
Tested coordinates: 1460000
Tested coordinates: 1470000
Tested coordinates: 1480000
Valid coordinates: 36000
Valid/Tested configurations: 36000/1482663
Generated Search Space:
NULL
Clean Info:
Removed Factors: character(0)

Removed Inverse Factors: character(0)

New Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
New Inverse Factors: []
New Fixed Factors: {}
Fixed Factors: {}
Computing D-Optimal Design
Computing D-Optimal Design with 18 experiments
Design Formula:  ~ T1_I + T1_J + T1_K + T2_I + T2_J + T2_K + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K
Starting "optFederov" run
Using Search Space:
NULL
Data Dimensions: [1] 36000    13

      T1_I T1_J T1_K T2_I T2_J T2_K U1_I U_I U_J U_K RT_I RT_J RT_K
110      6    6    0    5    0    4    0  25   0  29    0    0    2
1394     0    0    0    2    2    2   25   0   0  18    0    0    0
1521     0    3    4    6    6    0    1  28   0  28    2    0    0
2076     6    1    6    5    1    0   13  27   3   0    2    0    0
2399     6    4    0    0    6    6    3   6  29   0    1    0    1
11234    2    5    6    0    0    6   29  29   1   0    0    1    1
14403    3    0    6    0    6    0   28   0  24  26    0    0    2
22864    1    6    6    6    4    5    0   0  29   9    0    0    0
23657    4    0    3    6    2    1   29  29  29   0    0    2    0
24178    0    1    0    6    0    1   29   0   2  28    2    0    0
24924    4    6    6    6    6    0   28   2   1   0    0    2    0
27196    0    0    0    1    4    6    2   0   7   0    0    2    0
29437    4    4    4    4    5    6   29   0  27  29    1    1    0
31098    6    0    6    5    5    4    4   1   0  26    0    2    0
33335    6    6    2    0    5    0   28  25   0  10    0    0    0
33869    4    6    5    0    0    0    9   0  24  29    0    2    0
34506    0    3    3    1    6    3    0  29   0  29    0    0    1
35174    1    6    0    4    6    0    2  23  27   0    0    0    2

D-Efficiency Approximation: [1] 0.433

Measuring design of size 18
Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Length of requested configs: 1
Code stats:
        Number of loops: 	67
        Max loop nest depth: 	5
        Additions: 		12043
        Multiplications: 	3456
        Divisions: 		0
        Logical: 		0
        Reads: 			17905
        Writes: 		1890
        Comparisons:		67
        Gotos: 			0
        
 building the original code:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -DORIGINAL -o __orio_perftest_original.exe __orio_perftest1.c timer_cpu.o -lm
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest1.exe __orio_perftest1.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest1.exe  
Program Test Output: 
{'[6, 6, 0, 5, 0, 4, 0, 25, 0, 29, 0, 0, 2]' : 0.166693}
{'[6, 6, 0, 5, 0, 4, 0, 25, 0, 29, 0, 0, 2]' : 0.16689}
{'[6, 6, 0, 5, 0, 4, 0, 25, 0, 29, 0, 0, 2]' : 0.16693}
{'[6, 6, 0, 5, 0, 4, 0, 25, 0, 29, 0, 0, 2]' : 0.166851}
{'[6, 6, 0, 5, 0, 4, 0, 25, 0, 29, 0, 0, 2]' : 0.16675}
{'[6, 6, 0, 5, 0, 4, 0, 25, 0, 29, 0, 0, 2]' : 0.166664}
{'[6, 6, 0, 5, 0, 4, 0, 25, 0, 29, 0, 0, 2]' : 0.167088}
{'[6, 6, 0, 5, 0, 4, 0, 25, 0, 29, 0, 0, 2]' : 0.166832}
{'[6, 6, 0, 5, 0, 4, 0, 25, 0, 29, 0, 0, 2]' : 0.166933}
{'[6, 6, 0, 5, 0, 4, 0, 25, 0, 29, 0, 0, 2]' : 0.166914}
{'[6, 6, 0, 5, 0, 4, 0, 25, 0, 29, 0, 0, 2]' : 0.167027}
{'[6, 6, 0, 5, 0, 4, 0, 25, 0, 29, 0, 0, 2]' : 0.166788}
{'[6, 6, 0, 5, 0, 4, 0, 25, 0, 29, 0, 0, 2]' : 0.166749}
{'[6, 6, 0, 5, 0, 4, 0, 25, 0, 29, 0, 0, 2]' : 0.166711}
{'[6, 6, 0, 5, 0, 4, 0, 25, 0, 29, 0, 0, 2]' : 0.166752}
{'[6, 6, 0, 5, 0, 4, 0, 25, 0, 29, 0, 0, 2]' : 0.166958}
{'[6, 6, 0, 5, 0, 4, 0, 25, 0, 29, 0, 0, 2]' : 0.166711}
{'[6, 6, 0, 5, 0, 4, 0, 25, 0, 29, 0, 0, 2]' : 0.166696}
{'[6, 6, 0, 5, 0, 4, 0, 25, 0, 29, 0, 0, 2]' : 0.166729}
{'[6, 6, 0, 5, 0, 4, 0, 25, 0, 29, 0, 0, 2]' : 0.166724}
{'[6, 6, 0, 5, 0, 4, 0, 25, 0, 29, 0, 0, 2]' : 0.166804}
{'[6, 6, 0, 5, 0, 4, 0, 25, 0, 29, 0, 0, 2]' : 0.166751}
{'[6, 6, 0, 5, 0, 4, 0, 25, 0, 29, 0, 0, 2]' : 0.167185}
{'[6, 6, 0, 5, 0, 4, 0, 25, 0, 29, 0, 0, 2]' : 0.166695}
{'[6, 6, 0, 5, 0, 4, 0, 25, 0, 29, 0, 0, 2]' : 0.167121}
{'[6, 6, 0, 5, 0, 4, 0, 25, 0, 29, 0, 0, 2]' : 0.166702}
{'[6, 6, 0, 5, 0, 4, 0, 25, 0, 29, 0, 0, 2]' : 0.167171}
{'[6, 6, 0, 5, 0, 4, 0, 25, 0, 29, 0, 0, 2]' : 0.166776}
{'[6, 6, 0, 5, 0, 4, 0, 25, 0, 29, 0, 0, 2]' : 0.166702}
{'[6, 6, 0, 5, 0, 4, 0, 25, 0, 29, 0, 0, 2]' : 0.166751}

out:
 ["{'[6, 6, 0, 5, 0, 4, 0, 25, 0, 29, 0, 0, 2]' : 0.166693}", "{'[6, 6, 0, 5, 0, 4, 0, 25, 0, 29, 0, 0, 2]' : 0.16689}", "{'[6, 6, 0, 5, 0, 4, 0, 25, 0, 29, 0, 0, 2]' : 0.16693}", "{'[6, 6, 0, 5, 0, 4, 0, 25, 0, 29, 0, 0, 2]' : 0.166851}", "{'[6, 6, 0, 5, 0, 4, 0, 25, 0, 29, 0, 0, 2]' : 0.16675}", "{'[6, 6, 0, 5, 0, 4, 0, 25, 0, 29, 0, 0, 2]' : 0.166664}", "{'[6, 6, 0, 5, 0, 4, 0, 25, 0, 29, 0, 0, 2]' : 0.167088}", "{'[6, 6, 0, 5, 0, 4, 0, 25, 0, 29, 0, 0, 2]' : 0.166832}", "{'[6, 6, 0, 5, 0, 4, 0, 25, 0, 29, 0, 0, 2]' : 0.166933}", "{'[6, 6, 0, 5, 0, 4, 0, 25, 0, 29, 0, 0, 2]' : 0.166914}", "{'[6, 6, 0, 5, 0, 4, 0, 25, 0, 29, 0, 0, 2]' : 0.167027}", "{'[6, 6, 0, 5, 0, 4, 0, 25, 0, 29, 0, 0, 2]' : 0.166788}", "{'[6, 6, 0, 5, 0, 4, 0, 25, 0, 29, 0, 0, 2]' : 0.166749}", "{'[6, 6, 0, 5, 0, 4, 0, 25, 0, 29, 0, 0, 2]' : 0.166711}", "{'[6, 6, 0, 5, 0, 4, 0, 25, 0, 29, 0, 0, 2]' : 0.166752}", "{'[6, 6, 0, 5, 0, 4, 0, 25, 0, 29, 0, 0, 2]' : 0.166958}", "{'[6, 6, 0, 5, 0, 4, 0, 25, 0, 29, 0, 0, 2]' : 0.166711}", "{'[6, 6, 0, 5, 0, 4, 0, 25, 0, 29, 0, 0, 2]' : 0.166696}", "{'[6, 6, 0, 5, 0, 4, 0, 25, 0, 29, 0, 0, 2]' : 0.166729}", "{'[6, 6, 0, 5, 0, 4, 0, 25, 0, 29, 0, 0, 2]' : 0.166724}", "{'[6, 6, 0, 5, 0, 4, 0, 25, 0, 29, 0, 0, 2]' : 0.166804}", "{'[6, 6, 0, 5, 0, 4, 0, 25, 0, 29, 0, 0, 2]' : 0.166751}", "{'[6, 6, 0, 5, 0, 4, 0, 25, 0, 29, 0, 0, 2]' : 0.167185}", "{'[6, 6, 0, 5, 0, 4, 0, 25, 0, 29, 0, 0, 2]' : 0.166695}", "{'[6, 6, 0, 5, 0, 4, 0, 25, 0, 29, 0, 0, 2]' : 0.167121}", "{'[6, 6, 0, 5, 0, 4, 0, 25, 0, 29, 0, 0, 2]' : 0.166702}", "{'[6, 6, 0, 5, 0, 4, 0, 25, 0, 29, 0, 0, 2]' : 0.167171}", "{'[6, 6, 0, 5, 0, 4, 0, 25, 0, 29, 0, 0, 2]' : 0.166776}", "{'[6, 6, 0, 5, 0, 4, 0, 25, 0, 29, 0, 0, 2]' : 0.166702}", "{'[6, 6, 0, 5, 0, 4, 0, 25, 0, 29, 0, 0, 2]' : 0.166751}"]
returning from 'run': {'[6, 6, 0, 5, 0, 4, 0, 25, 0, 29, 0, 0, 2]': ([0.166693, 0.16689, 0.16693, 0.166851, 0.16675, 0.166664, 0.167088, 0.166832, 0.166933, 0.166914, 0.167027, 0.166788, 0.166749, 0.166711, 0.166752, 0.166958, 0.166711, 0.166696, 0.166729, 0.166724, 0.166804, 0.166751, 0.167185, 0.166695, 0.167121, 0.166702, 0.167171, 0.166776, 0.166702, 0.166751], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 0, 5, 0, 4, 0, 25, 0, 29, 0, 0, 2]': ([0.166693, 0.16689, 0.16693, 0.166851, 0.16675, 0.166664, 0.167088, 0.166832, 0.166933, 0.166914, 0.167027, 0.166788, 0.166749, 0.166711, 0.166752, 0.166958, 0.166711, 0.166696, 0.166729, 0.166724, 0.166804, 0.166751, 0.167185, 0.166695, 0.167121, 0.166702, 0.167171, 0.166776, 0.166702, 0.166751], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	4
        Additions: 		156
        Multiplications: 	42
        Divisions: 		0
        Logical: 		0
        Reads: 			325
        Writes: 		67
        Comparisons:		9
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest2.exe __orio_perftest2.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest2.exe  
Program Test Output: 
{'[0, 0, 0, 2, 2, 2, 25, 0, 0, 18, 0, 0, 0]' : 0.404569}
{'[0, 0, 0, 2, 2, 2, 25, 0, 0, 18, 0, 0, 0]' : 0.358713}
{'[0, 0, 0, 2, 2, 2, 25, 0, 0, 18, 0, 0, 0]' : 0.358786}
{'[0, 0, 0, 2, 2, 2, 25, 0, 0, 18, 0, 0, 0]' : 0.358677}
{'[0, 0, 0, 2, 2, 2, 25, 0, 0, 18, 0, 0, 0]' : 0.358436}
{'[0, 0, 0, 2, 2, 2, 25, 0, 0, 18, 0, 0, 0]' : 0.358728}
{'[0, 0, 0, 2, 2, 2, 25, 0, 0, 18, 0, 0, 0]' : 0.358499}
{'[0, 0, 0, 2, 2, 2, 25, 0, 0, 18, 0, 0, 0]' : 0.358467}
{'[0, 0, 0, 2, 2, 2, 25, 0, 0, 18, 0, 0, 0]' : 0.3588}
{'[0, 0, 0, 2, 2, 2, 25, 0, 0, 18, 0, 0, 0]' : 0.358714}
{'[0, 0, 0, 2, 2, 2, 25, 0, 0, 18, 0, 0, 0]' : 0.358728}
{'[0, 0, 0, 2, 2, 2, 25, 0, 0, 18, 0, 0, 0]' : 0.358519}
{'[0, 0, 0, 2, 2, 2, 25, 0, 0, 18, 0, 0, 0]' : 0.358604}
{'[0, 0, 0, 2, 2, 2, 25, 0, 0, 18, 0, 0, 0]' : 0.358464}
{'[0, 0, 0, 2, 2, 2, 25, 0, 0, 18, 0, 0, 0]' : 0.358899}
{'[0, 0, 0, 2, 2, 2, 25, 0, 0, 18, 0, 0, 0]' : 0.358544}
{'[0, 0, 0, 2, 2, 2, 25, 0, 0, 18, 0, 0, 0]' : 0.358798}
{'[0, 0, 0, 2, 2, 2, 25, 0, 0, 18, 0, 0, 0]' : 0.35848}
{'[0, 0, 0, 2, 2, 2, 25, 0, 0, 18, 0, 0, 0]' : 0.3587}
{'[0, 0, 0, 2, 2, 2, 25, 0, 0, 18, 0, 0, 0]' : 0.358538}
{'[0, 0, 0, 2, 2, 2, 25, 0, 0, 18, 0, 0, 0]' : 0.358685}
{'[0, 0, 0, 2, 2, 2, 25, 0, 0, 18, 0, 0, 0]' : 0.358462}
{'[0, 0, 0, 2, 2, 2, 25, 0, 0, 18, 0, 0, 0]' : 0.35873}
{'[0, 0, 0, 2, 2, 2, 25, 0, 0, 18, 0, 0, 0]' : 0.358461}
{'[0, 0, 0, 2, 2, 2, 25, 0, 0, 18, 0, 0, 0]' : 0.35843}
{'[0, 0, 0, 2, 2, 2, 25, 0, 0, 18, 0, 0, 0]' : 0.358862}
{'[0, 0, 0, 2, 2, 2, 25, 0, 0, 18, 0, 0, 0]' : 0.358736}
{'[0, 0, 0, 2, 2, 2, 25, 0, 0, 18, 0, 0, 0]' : 0.358696}
{'[0, 0, 0, 2, 2, 2, 25, 0, 0, 18, 0, 0, 0]' : 0.358592}
{'[0, 0, 0, 2, 2, 2, 25, 0, 0, 18, 0, 0, 0]' : 0.358515}

out:
 ["{'[0, 0, 0, 2, 2, 2, 25, 0, 0, 18, 0, 0, 0]' : 0.404569}", "{'[0, 0, 0, 2, 2, 2, 25, 0, 0, 18, 0, 0, 0]' : 0.358713}", "{'[0, 0, 0, 2, 2, 2, 25, 0, 0, 18, 0, 0, 0]' : 0.358786}", "{'[0, 0, 0, 2, 2, 2, 25, 0, 0, 18, 0, 0, 0]' : 0.358677}", "{'[0, 0, 0, 2, 2, 2, 25, 0, 0, 18, 0, 0, 0]' : 0.358436}", "{'[0, 0, 0, 2, 2, 2, 25, 0, 0, 18, 0, 0, 0]' : 0.358728}", "{'[0, 0, 0, 2, 2, 2, 25, 0, 0, 18, 0, 0, 0]' : 0.358499}", "{'[0, 0, 0, 2, 2, 2, 25, 0, 0, 18, 0, 0, 0]' : 0.358467}", "{'[0, 0, 0, 2, 2, 2, 25, 0, 0, 18, 0, 0, 0]' : 0.3588}", "{'[0, 0, 0, 2, 2, 2, 25, 0, 0, 18, 0, 0, 0]' : 0.358714}", "{'[0, 0, 0, 2, 2, 2, 25, 0, 0, 18, 0, 0, 0]' : 0.358728}", "{'[0, 0, 0, 2, 2, 2, 25, 0, 0, 18, 0, 0, 0]' : 0.358519}", "{'[0, 0, 0, 2, 2, 2, 25, 0, 0, 18, 0, 0, 0]' : 0.358604}", "{'[0, 0, 0, 2, 2, 2, 25, 0, 0, 18, 0, 0, 0]' : 0.358464}", "{'[0, 0, 0, 2, 2, 2, 25, 0, 0, 18, 0, 0, 0]' : 0.358899}", "{'[0, 0, 0, 2, 2, 2, 25, 0, 0, 18, 0, 0, 0]' : 0.358544}", "{'[0, 0, 0, 2, 2, 2, 25, 0, 0, 18, 0, 0, 0]' : 0.358798}", "{'[0, 0, 0, 2, 2, 2, 25, 0, 0, 18, 0, 0, 0]' : 0.35848}", "{'[0, 0, 0, 2, 2, 2, 25, 0, 0, 18, 0, 0, 0]' : 0.3587}", "{'[0, 0, 0, 2, 2, 2, 25, 0, 0, 18, 0, 0, 0]' : 0.358538}", "{'[0, 0, 0, 2, 2, 2, 25, 0, 0, 18, 0, 0, 0]' : 0.358685}", "{'[0, 0, 0, 2, 2, 2, 25, 0, 0, 18, 0, 0, 0]' : 0.358462}", "{'[0, 0, 0, 2, 2, 2, 25, 0, 0, 18, 0, 0, 0]' : 0.35873}", "{'[0, 0, 0, 2, 2, 2, 25, 0, 0, 18, 0, 0, 0]' : 0.358461}", "{'[0, 0, 0, 2, 2, 2, 25, 0, 0, 18, 0, 0, 0]' : 0.35843}", "{'[0, 0, 0, 2, 2, 2, 25, 0, 0, 18, 0, 0, 0]' : 0.358862}", "{'[0, 0, 0, 2, 2, 2, 25, 0, 0, 18, 0, 0, 0]' : 0.358736}", "{'[0, 0, 0, 2, 2, 2, 25, 0, 0, 18, 0, 0, 0]' : 0.358696}", "{'[0, 0, 0, 2, 2, 2, 25, 0, 0, 18, 0, 0, 0]' : 0.358592}", "{'[0, 0, 0, 2, 2, 2, 25, 0, 0, 18, 0, 0, 0]' : 0.358515}"]
returning from 'run': {'[0, 0, 0, 2, 2, 2, 25, 0, 0, 18, 0, 0, 0]': ([0.404569, 0.358713, 0.358786, 0.358677, 0.358436, 0.358728, 0.358499, 0.358467, 0.3588, 0.358714, 0.358728, 0.358519, 0.358604, 0.358464, 0.358899, 0.358544, 0.358798, 0.35848, 0.3587, 0.358538, 0.358685, 0.358462, 0.35873, 0.358461, 0.35843, 0.358862, 0.358736, 0.358696, 0.358592, 0.358515], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 0, 2, 2, 2, 25, 0, 0, 18, 0, 0, 0]': ([0.404569, 0.358713, 0.358786, 0.358677, 0.358436, 0.358728, 0.358499, 0.358467, 0.3588, 0.358714, 0.358728, 0.358519, 0.358604, 0.358464, 0.358899, 0.358544, 0.358798, 0.35848, 0.3587, 0.358538, 0.358685, 0.358462, 0.35873, 0.358461, 0.35843, 0.358862, 0.358736, 0.358696, 0.358592, 0.358515], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	5
        Additions: 		12905
        Multiplications: 	3844
        Divisions: 		0
        Logical: 		0
        Reads: 			19456
        Writes: 		2004
        Comparisons:		24
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest3.exe __orio_perftest3.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest3.exe  
Program Test Output: 
{'[0, 3, 4, 6, 6, 0, 1, 28, 0, 28, 2, 0, 0]' : 0.208115}
{'[0, 3, 4, 6, 6, 0, 1, 28, 0, 28, 2, 0, 0]' : 0.209661}
{'[0, 3, 4, 6, 6, 0, 1, 28, 0, 28, 2, 0, 0]' : 0.212052}
{'[0, 3, 4, 6, 6, 0, 1, 28, 0, 28, 2, 0, 0]' : 0.210837}
{'[0, 3, 4, 6, 6, 0, 1, 28, 0, 28, 2, 0, 0]' : 0.208088}
{'[0, 3, 4, 6, 6, 0, 1, 28, 0, 28, 2, 0, 0]' : 0.207341}
{'[0, 3, 4, 6, 6, 0, 1, 28, 0, 28, 2, 0, 0]' : 0.2086}
{'[0, 3, 4, 6, 6, 0, 1, 28, 0, 28, 2, 0, 0]' : 0.206992}
{'[0, 3, 4, 6, 6, 0, 1, 28, 0, 28, 2, 0, 0]' : 0.208412}
{'[0, 3, 4, 6, 6, 0, 1, 28, 0, 28, 2, 0, 0]' : 0.209771}
{'[0, 3, 4, 6, 6, 0, 1, 28, 0, 28, 2, 0, 0]' : 0.207785}
{'[0, 3, 4, 6, 6, 0, 1, 28, 0, 28, 2, 0, 0]' : 0.207845}
{'[0, 3, 4, 6, 6, 0, 1, 28, 0, 28, 2, 0, 0]' : 0.2074}
{'[0, 3, 4, 6, 6, 0, 1, 28, 0, 28, 2, 0, 0]' : 0.208462}
{'[0, 3, 4, 6, 6, 0, 1, 28, 0, 28, 2, 0, 0]' : 0.208316}
{'[0, 3, 4, 6, 6, 0, 1, 28, 0, 28, 2, 0, 0]' : 0.208597}
{'[0, 3, 4, 6, 6, 0, 1, 28, 0, 28, 2, 0, 0]' : 0.207859}
{'[0, 3, 4, 6, 6, 0, 1, 28, 0, 28, 2, 0, 0]' : 0.207435}
{'[0, 3, 4, 6, 6, 0, 1, 28, 0, 28, 2, 0, 0]' : 0.208723}
{'[0, 3, 4, 6, 6, 0, 1, 28, 0, 28, 2, 0, 0]' : 0.208844}
{'[0, 3, 4, 6, 6, 0, 1, 28, 0, 28, 2, 0, 0]' : 0.20848}
{'[0, 3, 4, 6, 6, 0, 1, 28, 0, 28, 2, 0, 0]' : 0.21039}
{'[0, 3, 4, 6, 6, 0, 1, 28, 0, 28, 2, 0, 0]' : 0.212308}
{'[0, 3, 4, 6, 6, 0, 1, 28, 0, 28, 2, 0, 0]' : 0.209959}
{'[0, 3, 4, 6, 6, 0, 1, 28, 0, 28, 2, 0, 0]' : 0.207046}
{'[0, 3, 4, 6, 6, 0, 1, 28, 0, 28, 2, 0, 0]' : 0.208595}
{'[0, 3, 4, 6, 6, 0, 1, 28, 0, 28, 2, 0, 0]' : 0.208971}
{'[0, 3, 4, 6, 6, 0, 1, 28, 0, 28, 2, 0, 0]' : 0.208817}
{'[0, 3, 4, 6, 6, 0, 1, 28, 0, 28, 2, 0, 0]' : 0.20682}
{'[0, 3, 4, 6, 6, 0, 1, 28, 0, 28, 2, 0, 0]' : 0.209074}

out:
 ["{'[0, 3, 4, 6, 6, 0, 1, 28, 0, 28, 2, 0, 0]' : 0.208115}", "{'[0, 3, 4, 6, 6, 0, 1, 28, 0, 28, 2, 0, 0]' : 0.209661}", "{'[0, 3, 4, 6, 6, 0, 1, 28, 0, 28, 2, 0, 0]' : 0.212052}", "{'[0, 3, 4, 6, 6, 0, 1, 28, 0, 28, 2, 0, 0]' : 0.210837}", "{'[0, 3, 4, 6, 6, 0, 1, 28, 0, 28, 2, 0, 0]' : 0.208088}", "{'[0, 3, 4, 6, 6, 0, 1, 28, 0, 28, 2, 0, 0]' : 0.207341}", "{'[0, 3, 4, 6, 6, 0, 1, 28, 0, 28, 2, 0, 0]' : 0.2086}", "{'[0, 3, 4, 6, 6, 0, 1, 28, 0, 28, 2, 0, 0]' : 0.206992}", "{'[0, 3, 4, 6, 6, 0, 1, 28, 0, 28, 2, 0, 0]' : 0.208412}", "{'[0, 3, 4, 6, 6, 0, 1, 28, 0, 28, 2, 0, 0]' : 0.209771}", "{'[0, 3, 4, 6, 6, 0, 1, 28, 0, 28, 2, 0, 0]' : 0.207785}", "{'[0, 3, 4, 6, 6, 0, 1, 28, 0, 28, 2, 0, 0]' : 0.207845}", "{'[0, 3, 4, 6, 6, 0, 1, 28, 0, 28, 2, 0, 0]' : 0.2074}", "{'[0, 3, 4, 6, 6, 0, 1, 28, 0, 28, 2, 0, 0]' : 0.208462}", "{'[0, 3, 4, 6, 6, 0, 1, 28, 0, 28, 2, 0, 0]' : 0.208316}", "{'[0, 3, 4, 6, 6, 0, 1, 28, 0, 28, 2, 0, 0]' : 0.208597}", "{'[0, 3, 4, 6, 6, 0, 1, 28, 0, 28, 2, 0, 0]' : 0.207859}", "{'[0, 3, 4, 6, 6, 0, 1, 28, 0, 28, 2, 0, 0]' : 0.207435}", "{'[0, 3, 4, 6, 6, 0, 1, 28, 0, 28, 2, 0, 0]' : 0.208723}", "{'[0, 3, 4, 6, 6, 0, 1, 28, 0, 28, 2, 0, 0]' : 0.208844}", "{'[0, 3, 4, 6, 6, 0, 1, 28, 0, 28, 2, 0, 0]' : 0.20848}", "{'[0, 3, 4, 6, 6, 0, 1, 28, 0, 28, 2, 0, 0]' : 0.21039}", "{'[0, 3, 4, 6, 6, 0, 1, 28, 0, 28, 2, 0, 0]' : 0.212308}", "{'[0, 3, 4, 6, 6, 0, 1, 28, 0, 28, 2, 0, 0]' : 0.209959}", "{'[0, 3, 4, 6, 6, 0, 1, 28, 0, 28, 2, 0, 0]' : 0.207046}", "{'[0, 3, 4, 6, 6, 0, 1, 28, 0, 28, 2, 0, 0]' : 0.208595}", "{'[0, 3, 4, 6, 6, 0, 1, 28, 0, 28, 2, 0, 0]' : 0.208971}", "{'[0, 3, 4, 6, 6, 0, 1, 28, 0, 28, 2, 0, 0]' : 0.208817}", "{'[0, 3, 4, 6, 6, 0, 1, 28, 0, 28, 2, 0, 0]' : 0.20682}", "{'[0, 3, 4, 6, 6, 0, 1, 28, 0, 28, 2, 0, 0]' : 0.209074}"]
returning from 'run': {'[0, 3, 4, 6, 6, 0, 1, 28, 0, 28, 2, 0, 0]': ([0.208115, 0.209661, 0.212052, 0.210837, 0.208088, 0.207341, 0.2086, 0.206992, 0.208412, 0.209771, 0.207785, 0.207845, 0.2074, 0.208462, 0.208316, 0.208597, 0.207859, 0.207435, 0.208723, 0.208844, 0.20848, 0.21039, 0.212308, 0.209959, 0.207046, 0.208595, 0.208971, 0.208817, 0.20682, 0.209074], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 3, 4, 6, 6, 0, 1, 28, 0, 28, 2, 0, 0]': ([0.208115, 0.209661, 0.212052, 0.210837, 0.208088, 0.207341, 0.2086, 0.206992, 0.208412, 0.209771, 0.207785, 0.207845, 0.2074, 0.208462, 0.208316, 0.208597, 0.207859, 0.207435, 0.208723, 0.208844, 0.20848, 0.21039, 0.212308, 0.209959, 0.207046, 0.208595, 0.208971, 0.208817, 0.20682, 0.209074], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	25
        Max loop nest depth: 	6
        Additions: 		2234
        Multiplications: 	732
        Divisions: 		0
        Logical: 		0
        Reads: 			3925
        Writes: 		461
        Comparisons:		25
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest4.exe __orio_perftest4.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest4.exe  
Program Test Output: 
{'[6, 1, 6, 5, 1, 0, 13, 27, 3, 0, 2, 0, 0]' : 0.258397}
{'[6, 1, 6, 5, 1, 0, 13, 27, 3, 0, 2, 0, 0]' : 0.236183}
{'[6, 1, 6, 5, 1, 0, 13, 27, 3, 0, 2, 0, 0]' : 0.228781}
{'[6, 1, 6, 5, 1, 0, 13, 27, 3, 0, 2, 0, 0]' : 0.227306}
{'[6, 1, 6, 5, 1, 0, 13, 27, 3, 0, 2, 0, 0]' : 0.228623}
{'[6, 1, 6, 5, 1, 0, 13, 27, 3, 0, 2, 0, 0]' : 0.228101}
{'[6, 1, 6, 5, 1, 0, 13, 27, 3, 0, 2, 0, 0]' : 0.227739}
{'[6, 1, 6, 5, 1, 0, 13, 27, 3, 0, 2, 0, 0]' : 0.227963}
{'[6, 1, 6, 5, 1, 0, 13, 27, 3, 0, 2, 0, 0]' : 0.228656}
{'[6, 1, 6, 5, 1, 0, 13, 27, 3, 0, 2, 0, 0]' : 0.227627}
{'[6, 1, 6, 5, 1, 0, 13, 27, 3, 0, 2, 0, 0]' : 0.22858}
{'[6, 1, 6, 5, 1, 0, 13, 27, 3, 0, 2, 0, 0]' : 0.227923}
{'[6, 1, 6, 5, 1, 0, 13, 27, 3, 0, 2, 0, 0]' : 0.228667}
{'[6, 1, 6, 5, 1, 0, 13, 27, 3, 0, 2, 0, 0]' : 0.227992}
{'[6, 1, 6, 5, 1, 0, 13, 27, 3, 0, 2, 0, 0]' : 0.228977}
{'[6, 1, 6, 5, 1, 0, 13, 27, 3, 0, 2, 0, 0]' : 0.227856}
{'[6, 1, 6, 5, 1, 0, 13, 27, 3, 0, 2, 0, 0]' : 0.228459}
{'[6, 1, 6, 5, 1, 0, 13, 27, 3, 0, 2, 0, 0]' : 0.228634}
{'[6, 1, 6, 5, 1, 0, 13, 27, 3, 0, 2, 0, 0]' : 0.22866}
{'[6, 1, 6, 5, 1, 0, 13, 27, 3, 0, 2, 0, 0]' : 0.228105}
{'[6, 1, 6, 5, 1, 0, 13, 27, 3, 0, 2, 0, 0]' : 0.228491}
{'[6, 1, 6, 5, 1, 0, 13, 27, 3, 0, 2, 0, 0]' : 0.228265}
{'[6, 1, 6, 5, 1, 0, 13, 27, 3, 0, 2, 0, 0]' : 0.228072}
{'[6, 1, 6, 5, 1, 0, 13, 27, 3, 0, 2, 0, 0]' : 0.228159}
{'[6, 1, 6, 5, 1, 0, 13, 27, 3, 0, 2, 0, 0]' : 0.228547}
{'[6, 1, 6, 5, 1, 0, 13, 27, 3, 0, 2, 0, 0]' : 0.227525}
{'[6, 1, 6, 5, 1, 0, 13, 27, 3, 0, 2, 0, 0]' : 0.228271}
{'[6, 1, 6, 5, 1, 0, 13, 27, 3, 0, 2, 0, 0]' : 0.227505}
{'[6, 1, 6, 5, 1, 0, 13, 27, 3, 0, 2, 0, 0]' : 0.228902}
{'[6, 1, 6, 5, 1, 0, 13, 27, 3, 0, 2, 0, 0]' : 0.227681}

out:
 ["{'[6, 1, 6, 5, 1, 0, 13, 27, 3, 0, 2, 0, 0]' : 0.258397}", "{'[6, 1, 6, 5, 1, 0, 13, 27, 3, 0, 2, 0, 0]' : 0.236183}", "{'[6, 1, 6, 5, 1, 0, 13, 27, 3, 0, 2, 0, 0]' : 0.228781}", "{'[6, 1, 6, 5, 1, 0, 13, 27, 3, 0, 2, 0, 0]' : 0.227306}", "{'[6, 1, 6, 5, 1, 0, 13, 27, 3, 0, 2, 0, 0]' : 0.228623}", "{'[6, 1, 6, 5, 1, 0, 13, 27, 3, 0, 2, 0, 0]' : 0.228101}", "{'[6, 1, 6, 5, 1, 0, 13, 27, 3, 0, 2, 0, 0]' : 0.227739}", "{'[6, 1, 6, 5, 1, 0, 13, 27, 3, 0, 2, 0, 0]' : 0.227963}", "{'[6, 1, 6, 5, 1, 0, 13, 27, 3, 0, 2, 0, 0]' : 0.228656}", "{'[6, 1, 6, 5, 1, 0, 13, 27, 3, 0, 2, 0, 0]' : 0.227627}", "{'[6, 1, 6, 5, 1, 0, 13, 27, 3, 0, 2, 0, 0]' : 0.22858}", "{'[6, 1, 6, 5, 1, 0, 13, 27, 3, 0, 2, 0, 0]' : 0.227923}", "{'[6, 1, 6, 5, 1, 0, 13, 27, 3, 0, 2, 0, 0]' : 0.228667}", "{'[6, 1, 6, 5, 1, 0, 13, 27, 3, 0, 2, 0, 0]' : 0.227992}", "{'[6, 1, 6, 5, 1, 0, 13, 27, 3, 0, 2, 0, 0]' : 0.228977}", "{'[6, 1, 6, 5, 1, 0, 13, 27, 3, 0, 2, 0, 0]' : 0.227856}", "{'[6, 1, 6, 5, 1, 0, 13, 27, 3, 0, 2, 0, 0]' : 0.228459}", "{'[6, 1, 6, 5, 1, 0, 13, 27, 3, 0, 2, 0, 0]' : 0.228634}", "{'[6, 1, 6, 5, 1, 0, 13, 27, 3, 0, 2, 0, 0]' : 0.22866}", "{'[6, 1, 6, 5, 1, 0, 13, 27, 3, 0, 2, 0, 0]' : 0.228105}", "{'[6, 1, 6, 5, 1, 0, 13, 27, 3, 0, 2, 0, 0]' : 0.228491}", "{'[6, 1, 6, 5, 1, 0, 13, 27, 3, 0, 2, 0, 0]' : 0.228265}", "{'[6, 1, 6, 5, 1, 0, 13, 27, 3, 0, 2, 0, 0]' : 0.228072}", "{'[6, 1, 6, 5, 1, 0, 13, 27, 3, 0, 2, 0, 0]' : 0.228159}", "{'[6, 1, 6, 5, 1, 0, 13, 27, 3, 0, 2, 0, 0]' : 0.228547}", "{'[6, 1, 6, 5, 1, 0, 13, 27, 3, 0, 2, 0, 0]' : 0.227525}", "{'[6, 1, 6, 5, 1, 0, 13, 27, 3, 0, 2, 0, 0]' : 0.228271}", "{'[6, 1, 6, 5, 1, 0, 13, 27, 3, 0, 2, 0, 0]' : 0.227505}", "{'[6, 1, 6, 5, 1, 0, 13, 27, 3, 0, 2, 0, 0]' : 0.228902}", "{'[6, 1, 6, 5, 1, 0, 13, 27, 3, 0, 2, 0, 0]' : 0.227681}"]
returning from 'run': {'[6, 1, 6, 5, 1, 0, 13, 27, 3, 0, 2, 0, 0]': ([0.258397, 0.236183, 0.228781, 0.227306, 0.228623, 0.228101, 0.227739, 0.227963, 0.228656, 0.227627, 0.22858, 0.227923, 0.228667, 0.227992, 0.228977, 0.227856, 0.228459, 0.228634, 0.22866, 0.228105, 0.228491, 0.228265, 0.228072, 0.228159, 0.228547, 0.227525, 0.228271, 0.227505, 0.228902, 0.227681], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 1, 6, 5, 1, 0, 13, 27, 3, 0, 2, 0, 0]': ([0.258397, 0.236183, 0.228781, 0.227306, 0.228623, 0.228101, 0.227739, 0.227963, 0.228656, 0.227627, 0.22858, 0.227923, 0.228667, 0.227992, 0.228977, 0.227856, 0.228459, 0.228634, 0.22866, 0.228105, 0.228491, 0.228265, 0.228072, 0.228159, 0.228547, 0.227525, 0.228271, 0.227505, 0.228902, 0.227681], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	27
        Max loop nest depth: 	5
        Additions: 		4115
        Multiplications: 	1280
        Divisions: 		0
        Logical: 		0
        Reads: 			6617
        Writes: 		708
        Comparisons:		27
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest5.exe __orio_perftest5.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest5.exe  
Program Test Output: 
{'[6, 4, 0, 0, 6, 6, 3, 6, 29, 0, 1, 0, 1]' : 0.114924}
{'[6, 4, 0, 0, 6, 6, 3, 6, 29, 0, 1, 0, 1]' : 0.114582}
{'[6, 4, 0, 0, 6, 6, 3, 6, 29, 0, 1, 0, 1]' : 0.114588}
{'[6, 4, 0, 0, 6, 6, 3, 6, 29, 0, 1, 0, 1]' : 0.114751}
{'[6, 4, 0, 0, 6, 6, 3, 6, 29, 0, 1, 0, 1]' : 0.113076}
{'[6, 4, 0, 0, 6, 6, 3, 6, 29, 0, 1, 0, 1]' : 0.111159}
{'[6, 4, 0, 0, 6, 6, 3, 6, 29, 0, 1, 0, 1]' : 0.111572}
{'[6, 4, 0, 0, 6, 6, 3, 6, 29, 0, 1, 0, 1]' : 0.115619}
{'[6, 4, 0, 0, 6, 6, 3, 6, 29, 0, 1, 0, 1]' : 0.114507}
{'[6, 4, 0, 0, 6, 6, 3, 6, 29, 0, 1, 0, 1]' : 0.114646}
{'[6, 4, 0, 0, 6, 6, 3, 6, 29, 0, 1, 0, 1]' : 0.114519}
{'[6, 4, 0, 0, 6, 6, 3, 6, 29, 0, 1, 0, 1]' : 0.116425}
{'[6, 4, 0, 0, 6, 6, 3, 6, 29, 0, 1, 0, 1]' : 0.117543}
{'[6, 4, 0, 0, 6, 6, 3, 6, 29, 0, 1, 0, 1]' : 0.117608}
{'[6, 4, 0, 0, 6, 6, 3, 6, 29, 0, 1, 0, 1]' : 0.117611}
{'[6, 4, 0, 0, 6, 6, 3, 6, 29, 0, 1, 0, 1]' : 0.116684}
{'[6, 4, 0, 0, 6, 6, 3, 6, 29, 0, 1, 0, 1]' : 0.114963}
{'[6, 4, 0, 0, 6, 6, 3, 6, 29, 0, 1, 0, 1]' : 0.114489}
{'[6, 4, 0, 0, 6, 6, 3, 6, 29, 0, 1, 0, 1]' : 0.114473}
{'[6, 4, 0, 0, 6, 6, 3, 6, 29, 0, 1, 0, 1]' : 0.114663}
{'[6, 4, 0, 0, 6, 6, 3, 6, 29, 0, 1, 0, 1]' : 0.117461}
{'[6, 4, 0, 0, 6, 6, 3, 6, 29, 0, 1, 0, 1]' : 0.117635}
{'[6, 4, 0, 0, 6, 6, 3, 6, 29, 0, 1, 0, 1]' : 0.11434}
{'[6, 4, 0, 0, 6, 6, 3, 6, 29, 0, 1, 0, 1]' : 0.114209}
{'[6, 4, 0, 0, 6, 6, 3, 6, 29, 0, 1, 0, 1]' : 0.115543}
{'[6, 4, 0, 0, 6, 6, 3, 6, 29, 0, 1, 0, 1]' : 0.116951}
{'[6, 4, 0, 0, 6, 6, 3, 6, 29, 0, 1, 0, 1]' : 0.117844}
{'[6, 4, 0, 0, 6, 6, 3, 6, 29, 0, 1, 0, 1]' : 0.117761}
{'[6, 4, 0, 0, 6, 6, 3, 6, 29, 0, 1, 0, 1]' : 0.117503}
{'[6, 4, 0, 0, 6, 6, 3, 6, 29, 0, 1, 0, 1]' : 0.117671}

out:
 ["{'[6, 4, 0, 0, 6, 6, 3, 6, 29, 0, 1, 0, 1]' : 0.114924}", "{'[6, 4, 0, 0, 6, 6, 3, 6, 29, 0, 1, 0, 1]' : 0.114582}", "{'[6, 4, 0, 0, 6, 6, 3, 6, 29, 0, 1, 0, 1]' : 0.114588}", "{'[6, 4, 0, 0, 6, 6, 3, 6, 29, 0, 1, 0, 1]' : 0.114751}", "{'[6, 4, 0, 0, 6, 6, 3, 6, 29, 0, 1, 0, 1]' : 0.113076}", "{'[6, 4, 0, 0, 6, 6, 3, 6, 29, 0, 1, 0, 1]' : 0.111159}", "{'[6, 4, 0, 0, 6, 6, 3, 6, 29, 0, 1, 0, 1]' : 0.111572}", "{'[6, 4, 0, 0, 6, 6, 3, 6, 29, 0, 1, 0, 1]' : 0.115619}", "{'[6, 4, 0, 0, 6, 6, 3, 6, 29, 0, 1, 0, 1]' : 0.114507}", "{'[6, 4, 0, 0, 6, 6, 3, 6, 29, 0, 1, 0, 1]' : 0.114646}", "{'[6, 4, 0, 0, 6, 6, 3, 6, 29, 0, 1, 0, 1]' : 0.114519}", "{'[6, 4, 0, 0, 6, 6, 3, 6, 29, 0, 1, 0, 1]' : 0.116425}", "{'[6, 4, 0, 0, 6, 6, 3, 6, 29, 0, 1, 0, 1]' : 0.117543}", "{'[6, 4, 0, 0, 6, 6, 3, 6, 29, 0, 1, 0, 1]' : 0.117608}", "{'[6, 4, 0, 0, 6, 6, 3, 6, 29, 0, 1, 0, 1]' : 0.117611}", "{'[6, 4, 0, 0, 6, 6, 3, 6, 29, 0, 1, 0, 1]' : 0.116684}", "{'[6, 4, 0, 0, 6, 6, 3, 6, 29, 0, 1, 0, 1]' : 0.114963}", "{'[6, 4, 0, 0, 6, 6, 3, 6, 29, 0, 1, 0, 1]' : 0.114489}", "{'[6, 4, 0, 0, 6, 6, 3, 6, 29, 0, 1, 0, 1]' : 0.114473}", "{'[6, 4, 0, 0, 6, 6, 3, 6, 29, 0, 1, 0, 1]' : 0.114663}", "{'[6, 4, 0, 0, 6, 6, 3, 6, 29, 0, 1, 0, 1]' : 0.117461}", "{'[6, 4, 0, 0, 6, 6, 3, 6, 29, 0, 1, 0, 1]' : 0.117635}", "{'[6, 4, 0, 0, 6, 6, 3, 6, 29, 0, 1, 0, 1]' : 0.11434}", "{'[6, 4, 0, 0, 6, 6, 3, 6, 29, 0, 1, 0, 1]' : 0.114209}", "{'[6, 4, 0, 0, 6, 6, 3, 6, 29, 0, 1, 0, 1]' : 0.115543}", "{'[6, 4, 0, 0, 6, 6, 3, 6, 29, 0, 1, 0, 1]' : 0.116951}", "{'[6, 4, 0, 0, 6, 6, 3, 6, 29, 0, 1, 0, 1]' : 0.117844}", "{'[6, 4, 0, 0, 6, 6, 3, 6, 29, 0, 1, 0, 1]' : 0.117761}", "{'[6, 4, 0, 0, 6, 6, 3, 6, 29, 0, 1, 0, 1]' : 0.117503}", "{'[6, 4, 0, 0, 6, 6, 3, 6, 29, 0, 1, 0, 1]' : 0.117671}"]
returning from 'run': {'[6, 4, 0, 0, 6, 6, 3, 6, 29, 0, 1, 0, 1]': ([0.114924, 0.114582, 0.114588, 0.114751, 0.113076, 0.111159, 0.111572, 0.115619, 0.114507, 0.114646, 0.114519, 0.116425, 0.117543, 0.117608, 0.117611, 0.116684, 0.114963, 0.114489, 0.114473, 0.114663, 0.117461, 0.117635, 0.11434, 0.114209, 0.115543, 0.116951, 0.117844, 0.117761, 0.117503, 0.117671], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 4, 0, 0, 6, 6, 3, 6, 29, 0, 1, 0, 1]': ([0.114924, 0.114582, 0.114588, 0.114751, 0.113076, 0.111159, 0.111572, 0.115619, 0.114507, 0.114646, 0.114519, 0.116425, 0.117543, 0.117608, 0.117611, 0.116684, 0.114963, 0.114489, 0.114473, 0.114663, 0.117461, 0.117635, 0.11434, 0.114209, 0.115543, 0.116951, 0.117844, 0.117761, 0.117503, 0.117671], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	79
        Max loop nest depth: 	5
        Additions: 		4481
        Multiplications: 	1240
        Divisions: 		0
        Logical: 		0
        Reads: 			6993
        Writes: 		840
        Comparisons:		79
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest6.exe __orio_perftest6.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest6.exe  
Program Test Output: 
{'[2, 5, 6, 0, 0, 6, 29, 29, 1, 0, 0, 1, 1]' : 0.190491}
{'[2, 5, 6, 0, 0, 6, 29, 29, 1, 0, 0, 1, 1]' : 0.177829}
{'[2, 5, 6, 0, 0, 6, 29, 29, 1, 0, 0, 1, 1]' : 0.171969}
{'[2, 5, 6, 0, 0, 6, 29, 29, 1, 0, 0, 1, 1]' : 0.166697}
{'[2, 5, 6, 0, 0, 6, 29, 29, 1, 0, 0, 1, 1]' : 0.171825}
{'[2, 5, 6, 0, 0, 6, 29, 29, 1, 0, 0, 1, 1]' : 0.170335}
{'[2, 5, 6, 0, 0, 6, 29, 29, 1, 0, 0, 1, 1]' : 0.170743}
{'[2, 5, 6, 0, 0, 6, 29, 29, 1, 0, 0, 1, 1]' : 0.172019}
{'[2, 5, 6, 0, 0, 6, 29, 29, 1, 0, 0, 1, 1]' : 0.172506}
{'[2, 5, 6, 0, 0, 6, 29, 29, 1, 0, 0, 1, 1]' : 0.171588}
{'[2, 5, 6, 0, 0, 6, 29, 29, 1, 0, 0, 1, 1]' : 0.172864}
{'[2, 5, 6, 0, 0, 6, 29, 29, 1, 0, 0, 1, 1]' : 0.171277}
{'[2, 5, 6, 0, 0, 6, 29, 29, 1, 0, 0, 1, 1]' : 0.17264}
{'[2, 5, 6, 0, 0, 6, 29, 29, 1, 0, 0, 1, 1]' : 0.171817}
{'[2, 5, 6, 0, 0, 6, 29, 29, 1, 0, 0, 1, 1]' : 0.172173}
{'[2, 5, 6, 0, 0, 6, 29, 29, 1, 0, 0, 1, 1]' : 0.172724}
{'[2, 5, 6, 0, 0, 6, 29, 29, 1, 0, 0, 1, 1]' : 0.171194}
{'[2, 5, 6, 0, 0, 6, 29, 29, 1, 0, 0, 1, 1]' : 0.170756}
{'[2, 5, 6, 0, 0, 6, 29, 29, 1, 0, 0, 1, 1]' : 0.170715}
{'[2, 5, 6, 0, 0, 6, 29, 29, 1, 0, 0, 1, 1]' : 0.167609}
{'[2, 5, 6, 0, 0, 6, 29, 29, 1, 0, 0, 1, 1]' : 0.172837}
{'[2, 5, 6, 0, 0, 6, 29, 29, 1, 0, 0, 1, 1]' : 0.170678}
{'[2, 5, 6, 0, 0, 6, 29, 29, 1, 0, 0, 1, 1]' : 0.171689}
{'[2, 5, 6, 0, 0, 6, 29, 29, 1, 0, 0, 1, 1]' : 0.171809}
{'[2, 5, 6, 0, 0, 6, 29, 29, 1, 0, 0, 1, 1]' : 0.17096}
{'[2, 5, 6, 0, 0, 6, 29, 29, 1, 0, 0, 1, 1]' : 0.17125}
{'[2, 5, 6, 0, 0, 6, 29, 29, 1, 0, 0, 1, 1]' : 0.16937}
{'[2, 5, 6, 0, 0, 6, 29, 29, 1, 0, 0, 1, 1]' : 0.17289}
{'[2, 5, 6, 0, 0, 6, 29, 29, 1, 0, 0, 1, 1]' : 0.171148}
{'[2, 5, 6, 0, 0, 6, 29, 29, 1, 0, 0, 1, 1]' : 0.171174}

out:
 ["{'[2, 5, 6, 0, 0, 6, 29, 29, 1, 0, 0, 1, 1]' : 0.190491}", "{'[2, 5, 6, 0, 0, 6, 29, 29, 1, 0, 0, 1, 1]' : 0.177829}", "{'[2, 5, 6, 0, 0, 6, 29, 29, 1, 0, 0, 1, 1]' : 0.171969}", "{'[2, 5, 6, 0, 0, 6, 29, 29, 1, 0, 0, 1, 1]' : 0.166697}", "{'[2, 5, 6, 0, 0, 6, 29, 29, 1, 0, 0, 1, 1]' : 0.171825}", "{'[2, 5, 6, 0, 0, 6, 29, 29, 1, 0, 0, 1, 1]' : 0.170335}", "{'[2, 5, 6, 0, 0, 6, 29, 29, 1, 0, 0, 1, 1]' : 0.170743}", "{'[2, 5, 6, 0, 0, 6, 29, 29, 1, 0, 0, 1, 1]' : 0.172019}", "{'[2, 5, 6, 0, 0, 6, 29, 29, 1, 0, 0, 1, 1]' : 0.172506}", "{'[2, 5, 6, 0, 0, 6, 29, 29, 1, 0, 0, 1, 1]' : 0.171588}", "{'[2, 5, 6, 0, 0, 6, 29, 29, 1, 0, 0, 1, 1]' : 0.172864}", "{'[2, 5, 6, 0, 0, 6, 29, 29, 1, 0, 0, 1, 1]' : 0.171277}", "{'[2, 5, 6, 0, 0, 6, 29, 29, 1, 0, 0, 1, 1]' : 0.17264}", "{'[2, 5, 6, 0, 0, 6, 29, 29, 1, 0, 0, 1, 1]' : 0.171817}", "{'[2, 5, 6, 0, 0, 6, 29, 29, 1, 0, 0, 1, 1]' : 0.172173}", "{'[2, 5, 6, 0, 0, 6, 29, 29, 1, 0, 0, 1, 1]' : 0.172724}", "{'[2, 5, 6, 0, 0, 6, 29, 29, 1, 0, 0, 1, 1]' : 0.171194}", "{'[2, 5, 6, 0, 0, 6, 29, 29, 1, 0, 0, 1, 1]' : 0.170756}", "{'[2, 5, 6, 0, 0, 6, 29, 29, 1, 0, 0, 1, 1]' : 0.170715}", "{'[2, 5, 6, 0, 0, 6, 29, 29, 1, 0, 0, 1, 1]' : 0.167609}", "{'[2, 5, 6, 0, 0, 6, 29, 29, 1, 0, 0, 1, 1]' : 0.172837}", "{'[2, 5, 6, 0, 0, 6, 29, 29, 1, 0, 0, 1, 1]' : 0.170678}", "{'[2, 5, 6, 0, 0, 6, 29, 29, 1, 0, 0, 1, 1]' : 0.171689}", "{'[2, 5, 6, 0, 0, 6, 29, 29, 1, 0, 0, 1, 1]' : 0.171809}", "{'[2, 5, 6, 0, 0, 6, 29, 29, 1, 0, 0, 1, 1]' : 0.17096}", "{'[2, 5, 6, 0, 0, 6, 29, 29, 1, 0, 0, 1, 1]' : 0.17125}", "{'[2, 5, 6, 0, 0, 6, 29, 29, 1, 0, 0, 1, 1]' : 0.16937}", "{'[2, 5, 6, 0, 0, 6, 29, 29, 1, 0, 0, 1, 1]' : 0.17289}", "{'[2, 5, 6, 0, 0, 6, 29, 29, 1, 0, 0, 1, 1]' : 0.171148}", "{'[2, 5, 6, 0, 0, 6, 29, 29, 1, 0, 0, 1, 1]' : 0.171174}"]
returning from 'run': {'[2, 5, 6, 0, 0, 6, 29, 29, 1, 0, 0, 1, 1]': ([0.190491, 0.177829, 0.171969, 0.166697, 0.171825, 0.170335, 0.170743, 0.172019, 0.172506, 0.171588, 0.172864, 0.171277, 0.17264, 0.171817, 0.172173, 0.172724, 0.171194, 0.170756, 0.170715, 0.167609, 0.172837, 0.170678, 0.171689, 0.171809, 0.17096, 0.17125, 0.16937, 0.17289, 0.171148, 0.171174], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[2, 5, 6, 0, 0, 6, 29, 29, 1, 0, 0, 1, 1]': ([0.190491, 0.177829, 0.171969, 0.166697, 0.171825, 0.170335, 0.170743, 0.172019, 0.172506, 0.171588, 0.172864, 0.171277, 0.17264, 0.171817, 0.172173, 0.172724, 0.171194, 0.170756, 0.170715, 0.167609, 0.172837, 0.170678, 0.171689, 0.171809, 0.17096, 0.17125, 0.16937, 0.17289, 0.171148, 0.171174], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		471
        Multiplications: 	172
        Divisions: 		0
        Logical: 		0
        Reads: 			999
        Writes: 		139
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest7.exe __orio_perftest7.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest7.exe  
Program Test Output: 
{'[3, 0, 6, 0, 6, 0, 28, 0, 24, 26, 0, 0, 2]' : 0.217851}
{'[3, 0, 6, 0, 6, 0, 28, 0, 24, 26, 0, 0, 2]' : 0.206175}
{'[3, 0, 6, 0, 6, 0, 28, 0, 24, 26, 0, 0, 2]' : 0.194038}
{'[3, 0, 6, 0, 6, 0, 28, 0, 24, 26, 0, 0, 2]' : 0.194008}
{'[3, 0, 6, 0, 6, 0, 28, 0, 24, 26, 0, 0, 2]' : 0.194092}
{'[3, 0, 6, 0, 6, 0, 28, 0, 24, 26, 0, 0, 2]' : 0.19405}
{'[3, 0, 6, 0, 6, 0, 28, 0, 24, 26, 0, 0, 2]' : 0.19403}
{'[3, 0, 6, 0, 6, 0, 28, 0, 24, 26, 0, 0, 2]' : 0.194111}
{'[3, 0, 6, 0, 6, 0, 28, 0, 24, 26, 0, 0, 2]' : 0.194094}
{'[3, 0, 6, 0, 6, 0, 28, 0, 24, 26, 0, 0, 2]' : 0.194101}
{'[3, 0, 6, 0, 6, 0, 28, 0, 24, 26, 0, 0, 2]' : 0.194114}
{'[3, 0, 6, 0, 6, 0, 28, 0, 24, 26, 0, 0, 2]' : 0.194296}
{'[3, 0, 6, 0, 6, 0, 28, 0, 24, 26, 0, 0, 2]' : 0.19412}
{'[3, 0, 6, 0, 6, 0, 28, 0, 24, 26, 0, 0, 2]' : 0.194252}
{'[3, 0, 6, 0, 6, 0, 28, 0, 24, 26, 0, 0, 2]' : 0.194165}
{'[3, 0, 6, 0, 6, 0, 28, 0, 24, 26, 0, 0, 2]' : 0.194115}
{'[3, 0, 6, 0, 6, 0, 28, 0, 24, 26, 0, 0, 2]' : 0.19414}
{'[3, 0, 6, 0, 6, 0, 28, 0, 24, 26, 0, 0, 2]' : 0.193619}
{'[3, 0, 6, 0, 6, 0, 28, 0, 24, 26, 0, 0, 2]' : 0.187487}
{'[3, 0, 6, 0, 6, 0, 28, 0, 24, 26, 0, 0, 2]' : 0.183187}
{'[3, 0, 6, 0, 6, 0, 28, 0, 24, 26, 0, 0, 2]' : 0.191504}
{'[3, 0, 6, 0, 6, 0, 28, 0, 24, 26, 0, 0, 2]' : 0.189913}
{'[3, 0, 6, 0, 6, 0, 28, 0, 24, 26, 0, 0, 2]' : 0.189335}
{'[3, 0, 6, 0, 6, 0, 28, 0, 24, 26, 0, 0, 2]' : 0.188784}
{'[3, 0, 6, 0, 6, 0, 28, 0, 24, 26, 0, 0, 2]' : 0.184135}
{'[3, 0, 6, 0, 6, 0, 28, 0, 24, 26, 0, 0, 2]' : 0.190639}
{'[3, 0, 6, 0, 6, 0, 28, 0, 24, 26, 0, 0, 2]' : 0.194618}
{'[3, 0, 6, 0, 6, 0, 28, 0, 24, 26, 0, 0, 2]' : 0.194571}
{'[3, 0, 6, 0, 6, 0, 28, 0, 24, 26, 0, 0, 2]' : 0.194531}
{'[3, 0, 6, 0, 6, 0, 28, 0, 24, 26, 0, 0, 2]' : 0.194522}

out:
 ["{'[3, 0, 6, 0, 6, 0, 28, 0, 24, 26, 0, 0, 2]' : 0.217851}", "{'[3, 0, 6, 0, 6, 0, 28, 0, 24, 26, 0, 0, 2]' : 0.206175}", "{'[3, 0, 6, 0, 6, 0, 28, 0, 24, 26, 0, 0, 2]' : 0.194038}", "{'[3, 0, 6, 0, 6, 0, 28, 0, 24, 26, 0, 0, 2]' : 0.194008}", "{'[3, 0, 6, 0, 6, 0, 28, 0, 24, 26, 0, 0, 2]' : 0.194092}", "{'[3, 0, 6, 0, 6, 0, 28, 0, 24, 26, 0, 0, 2]' : 0.19405}", "{'[3, 0, 6, 0, 6, 0, 28, 0, 24, 26, 0, 0, 2]' : 0.19403}", "{'[3, 0, 6, 0, 6, 0, 28, 0, 24, 26, 0, 0, 2]' : 0.194111}", "{'[3, 0, 6, 0, 6, 0, 28, 0, 24, 26, 0, 0, 2]' : 0.194094}", "{'[3, 0, 6, 0, 6, 0, 28, 0, 24, 26, 0, 0, 2]' : 0.194101}", "{'[3, 0, 6, 0, 6, 0, 28, 0, 24, 26, 0, 0, 2]' : 0.194114}", "{'[3, 0, 6, 0, 6, 0, 28, 0, 24, 26, 0, 0, 2]' : 0.194296}", "{'[3, 0, 6, 0, 6, 0, 28, 0, 24, 26, 0, 0, 2]' : 0.19412}", "{'[3, 0, 6, 0, 6, 0, 28, 0, 24, 26, 0, 0, 2]' : 0.194252}", "{'[3, 0, 6, 0, 6, 0, 28, 0, 24, 26, 0, 0, 2]' : 0.194165}", "{'[3, 0, 6, 0, 6, 0, 28, 0, 24, 26, 0, 0, 2]' : 0.194115}", "{'[3, 0, 6, 0, 6, 0, 28, 0, 24, 26, 0, 0, 2]' : 0.19414}", "{'[3, 0, 6, 0, 6, 0, 28, 0, 24, 26, 0, 0, 2]' : 0.193619}", "{'[3, 0, 6, 0, 6, 0, 28, 0, 24, 26, 0, 0, 2]' : 0.187487}", "{'[3, 0, 6, 0, 6, 0, 28, 0, 24, 26, 0, 0, 2]' : 0.183187}", "{'[3, 0, 6, 0, 6, 0, 28, 0, 24, 26, 0, 0, 2]' : 0.191504}", "{'[3, 0, 6, 0, 6, 0, 28, 0, 24, 26, 0, 0, 2]' : 0.189913}", "{'[3, 0, 6, 0, 6, 0, 28, 0, 24, 26, 0, 0, 2]' : 0.189335}", "{'[3, 0, 6, 0, 6, 0, 28, 0, 24, 26, 0, 0, 2]' : 0.188784}", "{'[3, 0, 6, 0, 6, 0, 28, 0, 24, 26, 0, 0, 2]' : 0.184135}", "{'[3, 0, 6, 0, 6, 0, 28, 0, 24, 26, 0, 0, 2]' : 0.190639}", "{'[3, 0, 6, 0, 6, 0, 28, 0, 24, 26, 0, 0, 2]' : 0.194618}", "{'[3, 0, 6, 0, 6, 0, 28, 0, 24, 26, 0, 0, 2]' : 0.194571}", "{'[3, 0, 6, 0, 6, 0, 28, 0, 24, 26, 0, 0, 2]' : 0.194531}", "{'[3, 0, 6, 0, 6, 0, 28, 0, 24, 26, 0, 0, 2]' : 0.194522}"]
returning from 'run': {'[3, 0, 6, 0, 6, 0, 28, 0, 24, 26, 0, 0, 2]': ([0.217851, 0.206175, 0.194038, 0.194008, 0.194092, 0.19405, 0.19403, 0.194111, 0.194094, 0.194101, 0.194114, 0.194296, 0.19412, 0.194252, 0.194165, 0.194115, 0.19414, 0.193619, 0.187487, 0.183187, 0.191504, 0.189913, 0.189335, 0.188784, 0.184135, 0.190639, 0.194618, 0.194571, 0.194531, 0.194522], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[3, 0, 6, 0, 6, 0, 28, 0, 24, 26, 0, 0, 2]': ([0.217851, 0.206175, 0.194038, 0.194008, 0.194092, 0.19405, 0.19403, 0.194111, 0.194094, 0.194101, 0.194114, 0.194296, 0.19412, 0.194252, 0.194165, 0.194115, 0.19414, 0.193619, 0.187487, 0.183187, 0.191504, 0.189913, 0.189335, 0.188784, 0.184135, 0.190639, 0.194618, 0.194571, 0.194531, 0.194522], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	6
        Additions: 		218
        Multiplications: 	84
        Divisions: 		0
        Logical: 		0
        Reads: 			501
        Writes: 		66
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest8.exe __orio_perftest8.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest8.exe  
Program Test Output: 
{'[1, 6, 6, 6, 4, 5, 0, 0, 29, 9, 0, 0, 0]' : 0.226903}
{'[1, 6, 6, 6, 4, 5, 0, 0, 29, 9, 0, 0, 0]' : 0.22182}
{'[1, 6, 6, 6, 4, 5, 0, 0, 29, 9, 0, 0, 0]' : 0.19763}
{'[1, 6, 6, 6, 4, 5, 0, 0, 29, 9, 0, 0, 0]' : 0.197042}
{'[1, 6, 6, 6, 4, 5, 0, 0, 29, 9, 0, 0, 0]' : 0.196375}
{'[1, 6, 6, 6, 4, 5, 0, 0, 29, 9, 0, 0, 0]' : 0.196395}
{'[1, 6, 6, 6, 4, 5, 0, 0, 29, 9, 0, 0, 0]' : 0.196195}
{'[1, 6, 6, 6, 4, 5, 0, 0, 29, 9, 0, 0, 0]' : 0.192068}
{'[1, 6, 6, 6, 4, 5, 0, 0, 29, 9, 0, 0, 0]' : 0.190948}
{'[1, 6, 6, 6, 4, 5, 0, 0, 29, 9, 0, 0, 0]' : 0.190447}
{'[1, 6, 6, 6, 4, 5, 0, 0, 29, 9, 0, 0, 0]' : 0.190268}
{'[1, 6, 6, 6, 4, 5, 0, 0, 29, 9, 0, 0, 0]' : 0.195564}
{'[1, 6, 6, 6, 4, 5, 0, 0, 29, 9, 0, 0, 0]' : 0.196349}
{'[1, 6, 6, 6, 4, 5, 0, 0, 29, 9, 0, 0, 0]' : 0.191232}
{'[1, 6, 6, 6, 4, 5, 0, 0, 29, 9, 0, 0, 0]' : 0.190835}
{'[1, 6, 6, 6, 4, 5, 0, 0, 29, 9, 0, 0, 0]' : 0.190437}
{'[1, 6, 6, 6, 4, 5, 0, 0, 29, 9, 0, 0, 0]' : 0.194369}
{'[1, 6, 6, 6, 4, 5, 0, 0, 29, 9, 0, 0, 0]' : 0.19452}
{'[1, 6, 6, 6, 4, 5, 0, 0, 29, 9, 0, 0, 0]' : 0.190557}
{'[1, 6, 6, 6, 4, 5, 0, 0, 29, 9, 0, 0, 0]' : 0.191864}
{'[1, 6, 6, 6, 4, 5, 0, 0, 29, 9, 0, 0, 0]' : 0.190811}
{'[1, 6, 6, 6, 4, 5, 0, 0, 29, 9, 0, 0, 0]' : 0.193165}
{'[1, 6, 6, 6, 4, 5, 0, 0, 29, 9, 0, 0, 0]' : 0.19571}
{'[1, 6, 6, 6, 4, 5, 0, 0, 29, 9, 0, 0, 0]' : 0.190142}
{'[1, 6, 6, 6, 4, 5, 0, 0, 29, 9, 0, 0, 0]' : 0.192355}
{'[1, 6, 6, 6, 4, 5, 0, 0, 29, 9, 0, 0, 0]' : 0.190511}
{'[1, 6, 6, 6, 4, 5, 0, 0, 29, 9, 0, 0, 0]' : 0.191979}
{'[1, 6, 6, 6, 4, 5, 0, 0, 29, 9, 0, 0, 0]' : 0.196293}
{'[1, 6, 6, 6, 4, 5, 0, 0, 29, 9, 0, 0, 0]' : 0.192532}
{'[1, 6, 6, 6, 4, 5, 0, 0, 29, 9, 0, 0, 0]' : 0.193249}

out:
 ["{'[1, 6, 6, 6, 4, 5, 0, 0, 29, 9, 0, 0, 0]' : 0.226903}", "{'[1, 6, 6, 6, 4, 5, 0, 0, 29, 9, 0, 0, 0]' : 0.22182}", "{'[1, 6, 6, 6, 4, 5, 0, 0, 29, 9, 0, 0, 0]' : 0.19763}", "{'[1, 6, 6, 6, 4, 5, 0, 0, 29, 9, 0, 0, 0]' : 0.197042}", "{'[1, 6, 6, 6, 4, 5, 0, 0, 29, 9, 0, 0, 0]' : 0.196375}", "{'[1, 6, 6, 6, 4, 5, 0, 0, 29, 9, 0, 0, 0]' : 0.196395}", "{'[1, 6, 6, 6, 4, 5, 0, 0, 29, 9, 0, 0, 0]' : 0.196195}", "{'[1, 6, 6, 6, 4, 5, 0, 0, 29, 9, 0, 0, 0]' : 0.192068}", "{'[1, 6, 6, 6, 4, 5, 0, 0, 29, 9, 0, 0, 0]' : 0.190948}", "{'[1, 6, 6, 6, 4, 5, 0, 0, 29, 9, 0, 0, 0]' : 0.190447}", "{'[1, 6, 6, 6, 4, 5, 0, 0, 29, 9, 0, 0, 0]' : 0.190268}", "{'[1, 6, 6, 6, 4, 5, 0, 0, 29, 9, 0, 0, 0]' : 0.195564}", "{'[1, 6, 6, 6, 4, 5, 0, 0, 29, 9, 0, 0, 0]' : 0.196349}", "{'[1, 6, 6, 6, 4, 5, 0, 0, 29, 9, 0, 0, 0]' : 0.191232}", "{'[1, 6, 6, 6, 4, 5, 0, 0, 29, 9, 0, 0, 0]' : 0.190835}", "{'[1, 6, 6, 6, 4, 5, 0, 0, 29, 9, 0, 0, 0]' : 0.190437}", "{'[1, 6, 6, 6, 4, 5, 0, 0, 29, 9, 0, 0, 0]' : 0.194369}", "{'[1, 6, 6, 6, 4, 5, 0, 0, 29, 9, 0, 0, 0]' : 0.19452}", "{'[1, 6, 6, 6, 4, 5, 0, 0, 29, 9, 0, 0, 0]' : 0.190557}", "{'[1, 6, 6, 6, 4, 5, 0, 0, 29, 9, 0, 0, 0]' : 0.191864}", "{'[1, 6, 6, 6, 4, 5, 0, 0, 29, 9, 0, 0, 0]' : 0.190811}", "{'[1, 6, 6, 6, 4, 5, 0, 0, 29, 9, 0, 0, 0]' : 0.193165}", "{'[1, 6, 6, 6, 4, 5, 0, 0, 29, 9, 0, 0, 0]' : 0.19571}", "{'[1, 6, 6, 6, 4, 5, 0, 0, 29, 9, 0, 0, 0]' : 0.190142}", "{'[1, 6, 6, 6, 4, 5, 0, 0, 29, 9, 0, 0, 0]' : 0.192355}", "{'[1, 6, 6, 6, 4, 5, 0, 0, 29, 9, 0, 0, 0]' : 0.190511}", "{'[1, 6, 6, 6, 4, 5, 0, 0, 29, 9, 0, 0, 0]' : 0.191979}", "{'[1, 6, 6, 6, 4, 5, 0, 0, 29, 9, 0, 0, 0]' : 0.196293}", "{'[1, 6, 6, 6, 4, 5, 0, 0, 29, 9, 0, 0, 0]' : 0.192532}", "{'[1, 6, 6, 6, 4, 5, 0, 0, 29, 9, 0, 0, 0]' : 0.193249}"]
returning from 'run': {'[1, 6, 6, 6, 4, 5, 0, 0, 29, 9, 0, 0, 0]': ([0.226903, 0.22182, 0.19763, 0.197042, 0.196375, 0.196395, 0.196195, 0.192068, 0.190948, 0.190447, 0.190268, 0.195564, 0.196349, 0.191232, 0.190835, 0.190437, 0.194369, 0.19452, 0.190557, 0.191864, 0.190811, 0.193165, 0.19571, 0.190142, 0.192355, 0.190511, 0.191979, 0.196293, 0.192532, 0.193249], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 6, 6, 6, 4, 5, 0, 0, 29, 9, 0, 0, 0]': ([0.226903, 0.22182, 0.19763, 0.197042, 0.196375, 0.196395, 0.196195, 0.192068, 0.190948, 0.190447, 0.190268, 0.195564, 0.196349, 0.191232, 0.190835, 0.190437, 0.194369, 0.19452, 0.190557, 0.191864, 0.190811, 0.193165, 0.19571, 0.190142, 0.192355, 0.190511, 0.191979, 0.196293, 0.192532, 0.193249], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = kkk
Code stats:
        Number of loops: 	76
        Max loop nest depth: 	5
        Additions: 		13831
        Multiplications: 	3968
        Divisions: 		0
        Logical: 		0
        Reads: 			20612
        Writes: 		2198
        Comparisons:		76
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest9.exe __orio_perftest9.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest9.exe  
Program Test Output: 
{'[4, 0, 3, 6, 2, 1, 29, 29, 29, 0, 0, 2, 0]' : 0.239082}
{'[4, 0, 3, 6, 2, 1, 29, 29, 29, 0, 0, 2, 0]' : 0.235041}
{'[4, 0, 3, 6, 2, 1, 29, 29, 29, 0, 0, 2, 0]' : 0.23557}
{'[4, 0, 3, 6, 2, 1, 29, 29, 29, 0, 0, 2, 0]' : 0.234361}
{'[4, 0, 3, 6, 2, 1, 29, 29, 29, 0, 0, 2, 0]' : 0.234321}
{'[4, 0, 3, 6, 2, 1, 29, 29, 29, 0, 0, 2, 0]' : 0.236092}
{'[4, 0, 3, 6, 2, 1, 29, 29, 29, 0, 0, 2, 0]' : 0.235868}
{'[4, 0, 3, 6, 2, 1, 29, 29, 29, 0, 0, 2, 0]' : 0.238138}
{'[4, 0, 3, 6, 2, 1, 29, 29, 29, 0, 0, 2, 0]' : 0.235057}
{'[4, 0, 3, 6, 2, 1, 29, 29, 29, 0, 0, 2, 0]' : 0.24205}
{'[4, 0, 3, 6, 2, 1, 29, 29, 29, 0, 0, 2, 0]' : 0.234465}
{'[4, 0, 3, 6, 2, 1, 29, 29, 29, 0, 0, 2, 0]' : 0.236982}
{'[4, 0, 3, 6, 2, 1, 29, 29, 29, 0, 0, 2, 0]' : 0.232079}
{'[4, 0, 3, 6, 2, 1, 29, 29, 29, 0, 0, 2, 0]' : 0.239223}
{'[4, 0, 3, 6, 2, 1, 29, 29, 29, 0, 0, 2, 0]' : 0.240212}
{'[4, 0, 3, 6, 2, 1, 29, 29, 29, 0, 0, 2, 0]' : 0.239943}
{'[4, 0, 3, 6, 2, 1, 29, 29, 29, 0, 0, 2, 0]' : 0.235857}
{'[4, 0, 3, 6, 2, 1, 29, 29, 29, 0, 0, 2, 0]' : 0.24021}
{'[4, 0, 3, 6, 2, 1, 29, 29, 29, 0, 0, 2, 0]' : 0.240639}
{'[4, 0, 3, 6, 2, 1, 29, 29, 29, 0, 0, 2, 0]' : 0.237326}
{'[4, 0, 3, 6, 2, 1, 29, 29, 29, 0, 0, 2, 0]' : 0.236977}
{'[4, 0, 3, 6, 2, 1, 29, 29, 29, 0, 0, 2, 0]' : 0.234755}
{'[4, 0, 3, 6, 2, 1, 29, 29, 29, 0, 0, 2, 0]' : 0.241894}
{'[4, 0, 3, 6, 2, 1, 29, 29, 29, 0, 0, 2, 0]' : 0.23641}
{'[4, 0, 3, 6, 2, 1, 29, 29, 29, 0, 0, 2, 0]' : 0.241741}
{'[4, 0, 3, 6, 2, 1, 29, 29, 29, 0, 0, 2, 0]' : 0.238655}
{'[4, 0, 3, 6, 2, 1, 29, 29, 29, 0, 0, 2, 0]' : 0.238512}
{'[4, 0, 3, 6, 2, 1, 29, 29, 29, 0, 0, 2, 0]' : 0.236655}
{'[4, 0, 3, 6, 2, 1, 29, 29, 29, 0, 0, 2, 0]' : 0.239591}
{'[4, 0, 3, 6, 2, 1, 29, 29, 29, 0, 0, 2, 0]' : 0.237818}

out:
 ["{'[4, 0, 3, 6, 2, 1, 29, 29, 29, 0, 0, 2, 0]' : 0.239082}", "{'[4, 0, 3, 6, 2, 1, 29, 29, 29, 0, 0, 2, 0]' : 0.235041}", "{'[4, 0, 3, 6, 2, 1, 29, 29, 29, 0, 0, 2, 0]' : 0.23557}", "{'[4, 0, 3, 6, 2, 1, 29, 29, 29, 0, 0, 2, 0]' : 0.234361}", "{'[4, 0, 3, 6, 2, 1, 29, 29, 29, 0, 0, 2, 0]' : 0.234321}", "{'[4, 0, 3, 6, 2, 1, 29, 29, 29, 0, 0, 2, 0]' : 0.236092}", "{'[4, 0, 3, 6, 2, 1, 29, 29, 29, 0, 0, 2, 0]' : 0.235868}", "{'[4, 0, 3, 6, 2, 1, 29, 29, 29, 0, 0, 2, 0]' : 0.238138}", "{'[4, 0, 3, 6, 2, 1, 29, 29, 29, 0, 0, 2, 0]' : 0.235057}", "{'[4, 0, 3, 6, 2, 1, 29, 29, 29, 0, 0, 2, 0]' : 0.24205}", "{'[4, 0, 3, 6, 2, 1, 29, 29, 29, 0, 0, 2, 0]' : 0.234465}", "{'[4, 0, 3, 6, 2, 1, 29, 29, 29, 0, 0, 2, 0]' : 0.236982}", "{'[4, 0, 3, 6, 2, 1, 29, 29, 29, 0, 0, 2, 0]' : 0.232079}", "{'[4, 0, 3, 6, 2, 1, 29, 29, 29, 0, 0, 2, 0]' : 0.239223}", "{'[4, 0, 3, 6, 2, 1, 29, 29, 29, 0, 0, 2, 0]' : 0.240212}", "{'[4, 0, 3, 6, 2, 1, 29, 29, 29, 0, 0, 2, 0]' : 0.239943}", "{'[4, 0, 3, 6, 2, 1, 29, 29, 29, 0, 0, 2, 0]' : 0.235857}", "{'[4, 0, 3, 6, 2, 1, 29, 29, 29, 0, 0, 2, 0]' : 0.24021}", "{'[4, 0, 3, 6, 2, 1, 29, 29, 29, 0, 0, 2, 0]' : 0.240639}", "{'[4, 0, 3, 6, 2, 1, 29, 29, 29, 0, 0, 2, 0]' : 0.237326}", "{'[4, 0, 3, 6, 2, 1, 29, 29, 29, 0, 0, 2, 0]' : 0.236977}", "{'[4, 0, 3, 6, 2, 1, 29, 29, 29, 0, 0, 2, 0]' : 0.234755}", "{'[4, 0, 3, 6, 2, 1, 29, 29, 29, 0, 0, 2, 0]' : 0.241894}", "{'[4, 0, 3, 6, 2, 1, 29, 29, 29, 0, 0, 2, 0]' : 0.23641}", "{'[4, 0, 3, 6, 2, 1, 29, 29, 29, 0, 0, 2, 0]' : 0.241741}", "{'[4, 0, 3, 6, 2, 1, 29, 29, 29, 0, 0, 2, 0]' : 0.238655}", "{'[4, 0, 3, 6, 2, 1, 29, 29, 29, 0, 0, 2, 0]' : 0.238512}", "{'[4, 0, 3, 6, 2, 1, 29, 29, 29, 0, 0, 2, 0]' : 0.236655}", "{'[4, 0, 3, 6, 2, 1, 29, 29, 29, 0, 0, 2, 0]' : 0.239591}", "{'[4, 0, 3, 6, 2, 1, 29, 29, 29, 0, 0, 2, 0]' : 0.237818}"]
returning from 'run': {'[4, 0, 3, 6, 2, 1, 29, 29, 29, 0, 0, 2, 0]': ([0.239082, 0.235041, 0.23557, 0.234361, 0.234321, 0.236092, 0.235868, 0.238138, 0.235057, 0.24205, 0.234465, 0.236982, 0.232079, 0.239223, 0.240212, 0.239943, 0.235857, 0.24021, 0.240639, 0.237326, 0.236977, 0.234755, 0.241894, 0.23641, 0.241741, 0.238655, 0.238512, 0.236655, 0.239591, 0.237818], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 0, 3, 6, 2, 1, 29, 29, 29, 0, 0, 2, 0]': ([0.239082, 0.235041, 0.23557, 0.234361, 0.234321, 0.236092, 0.235868, 0.238138, 0.235057, 0.24205, 0.234465, 0.236982, 0.232079, 0.239223, 0.240212, 0.239943, 0.235857, 0.24021, 0.240639, 0.237326, 0.236977, 0.234755, 0.241894, 0.23641, 0.241741, 0.238655, 0.238512, 0.236655, 0.239591, 0.237818], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	17
        Max loop nest depth: 	4
        Additions: 		7497
        Multiplications: 	2244
        Divisions: 		0
        Logical: 		0
        Reads: 			11409
        Writes: 		1189
        Comparisons:		17
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest10.exe __orio_perftest10.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest10.exe  
Program Test Output: 
{'[0, 1, 0, 6, 0, 1, 29, 0, 2, 28, 2, 0, 0]' : 0.245235}
{'[0, 1, 0, 6, 0, 1, 29, 0, 2, 28, 2, 0, 0]' : 0.249016}
{'[0, 1, 0, 6, 0, 1, 29, 0, 2, 28, 2, 0, 0]' : 0.248598}
{'[0, 1, 0, 6, 0, 1, 29, 0, 2, 28, 2, 0, 0]' : 0.241158}
{'[0, 1, 0, 6, 0, 1, 29, 0, 2, 28, 2, 0, 0]' : 0.242083}
{'[0, 1, 0, 6, 0, 1, 29, 0, 2, 28, 2, 0, 0]' : 0.237046}
{'[0, 1, 0, 6, 0, 1, 29, 0, 2, 28, 2, 0, 0]' : 0.244269}
{'[0, 1, 0, 6, 0, 1, 29, 0, 2, 28, 2, 0, 0]' : 0.246722}
{'[0, 1, 0, 6, 0, 1, 29, 0, 2, 28, 2, 0, 0]' : 0.242648}
{'[0, 1, 0, 6, 0, 1, 29, 0, 2, 28, 2, 0, 0]' : 0.248875}
{'[0, 1, 0, 6, 0, 1, 29, 0, 2, 28, 2, 0, 0]' : 0.246529}
{'[0, 1, 0, 6, 0, 1, 29, 0, 2, 28, 2, 0, 0]' : 0.247412}
{'[0, 1, 0, 6, 0, 1, 29, 0, 2, 28, 2, 0, 0]' : 0.237683}
{'[0, 1, 0, 6, 0, 1, 29, 0, 2, 28, 2, 0, 0]' : 0.245355}
{'[0, 1, 0, 6, 0, 1, 29, 0, 2, 28, 2, 0, 0]' : 0.242371}
{'[0, 1, 0, 6, 0, 1, 29, 0, 2, 28, 2, 0, 0]' : 0.241744}
{'[0, 1, 0, 6, 0, 1, 29, 0, 2, 28, 2, 0, 0]' : 0.24228}
{'[0, 1, 0, 6, 0, 1, 29, 0, 2, 28, 2, 0, 0]' : 0.242035}
{'[0, 1, 0, 6, 0, 1, 29, 0, 2, 28, 2, 0, 0]' : 0.247892}
{'[0, 1, 0, 6, 0, 1, 29, 0, 2, 28, 2, 0, 0]' : 0.249856}
{'[0, 1, 0, 6, 0, 1, 29, 0, 2, 28, 2, 0, 0]' : 0.242903}
{'[0, 1, 0, 6, 0, 1, 29, 0, 2, 28, 2, 0, 0]' : 0.238104}
{'[0, 1, 0, 6, 0, 1, 29, 0, 2, 28, 2, 0, 0]' : 0.24915}
{'[0, 1, 0, 6, 0, 1, 29, 0, 2, 28, 2, 0, 0]' : 0.248981}
{'[0, 1, 0, 6, 0, 1, 29, 0, 2, 28, 2, 0, 0]' : 0.241204}
{'[0, 1, 0, 6, 0, 1, 29, 0, 2, 28, 2, 0, 0]' : 0.243368}
{'[0, 1, 0, 6, 0, 1, 29, 0, 2, 28, 2, 0, 0]' : 0.245892}
{'[0, 1, 0, 6, 0, 1, 29, 0, 2, 28, 2, 0, 0]' : 0.252034}
{'[0, 1, 0, 6, 0, 1, 29, 0, 2, 28, 2, 0, 0]' : 0.247962}
{'[0, 1, 0, 6, 0, 1, 29, 0, 2, 28, 2, 0, 0]' : 0.244049}

out:
 ["{'[0, 1, 0, 6, 0, 1, 29, 0, 2, 28, 2, 0, 0]' : 0.245235}", "{'[0, 1, 0, 6, 0, 1, 29, 0, 2, 28, 2, 0, 0]' : 0.249016}", "{'[0, 1, 0, 6, 0, 1, 29, 0, 2, 28, 2, 0, 0]' : 0.248598}", "{'[0, 1, 0, 6, 0, 1, 29, 0, 2, 28, 2, 0, 0]' : 0.241158}", "{'[0, 1, 0, 6, 0, 1, 29, 0, 2, 28, 2, 0, 0]' : 0.242083}", "{'[0, 1, 0, 6, 0, 1, 29, 0, 2, 28, 2, 0, 0]' : 0.237046}", "{'[0, 1, 0, 6, 0, 1, 29, 0, 2, 28, 2, 0, 0]' : 0.244269}", "{'[0, 1, 0, 6, 0, 1, 29, 0, 2, 28, 2, 0, 0]' : 0.246722}", "{'[0, 1, 0, 6, 0, 1, 29, 0, 2, 28, 2, 0, 0]' : 0.242648}", "{'[0, 1, 0, 6, 0, 1, 29, 0, 2, 28, 2, 0, 0]' : 0.248875}", "{'[0, 1, 0, 6, 0, 1, 29, 0, 2, 28, 2, 0, 0]' : 0.246529}", "{'[0, 1, 0, 6, 0, 1, 29, 0, 2, 28, 2, 0, 0]' : 0.247412}", "{'[0, 1, 0, 6, 0, 1, 29, 0, 2, 28, 2, 0, 0]' : 0.237683}", "{'[0, 1, 0, 6, 0, 1, 29, 0, 2, 28, 2, 0, 0]' : 0.245355}", "{'[0, 1, 0, 6, 0, 1, 29, 0, 2, 28, 2, 0, 0]' : 0.242371}", "{'[0, 1, 0, 6, 0, 1, 29, 0, 2, 28, 2, 0, 0]' : 0.241744}", "{'[0, 1, 0, 6, 0, 1, 29, 0, 2, 28, 2, 0, 0]' : 0.24228}", "{'[0, 1, 0, 6, 0, 1, 29, 0, 2, 28, 2, 0, 0]' : 0.242035}", "{'[0, 1, 0, 6, 0, 1, 29, 0, 2, 28, 2, 0, 0]' : 0.247892}", "{'[0, 1, 0, 6, 0, 1, 29, 0, 2, 28, 2, 0, 0]' : 0.249856}", "{'[0, 1, 0, 6, 0, 1, 29, 0, 2, 28, 2, 0, 0]' : 0.242903}", "{'[0, 1, 0, 6, 0, 1, 29, 0, 2, 28, 2, 0, 0]' : 0.238104}", "{'[0, 1, 0, 6, 0, 1, 29, 0, 2, 28, 2, 0, 0]' : 0.24915}", "{'[0, 1, 0, 6, 0, 1, 29, 0, 2, 28, 2, 0, 0]' : 0.248981}", "{'[0, 1, 0, 6, 0, 1, 29, 0, 2, 28, 2, 0, 0]' : 0.241204}", "{'[0, 1, 0, 6, 0, 1, 29, 0, 2, 28, 2, 0, 0]' : 0.243368}", "{'[0, 1, 0, 6, 0, 1, 29, 0, 2, 28, 2, 0, 0]' : 0.245892}", "{'[0, 1, 0, 6, 0, 1, 29, 0, 2, 28, 2, 0, 0]' : 0.252034}", "{'[0, 1, 0, 6, 0, 1, 29, 0, 2, 28, 2, 0, 0]' : 0.247962}", "{'[0, 1, 0, 6, 0, 1, 29, 0, 2, 28, 2, 0, 0]' : 0.244049}"]
returning from 'run': {'[0, 1, 0, 6, 0, 1, 29, 0, 2, 28, 2, 0, 0]': ([0.245235, 0.249016, 0.248598, 0.241158, 0.242083, 0.237046, 0.244269, 0.246722, 0.242648, 0.248875, 0.246529, 0.247412, 0.237683, 0.245355, 0.242371, 0.241744, 0.24228, 0.242035, 0.247892, 0.249856, 0.242903, 0.238104, 0.24915, 0.248981, 0.241204, 0.243368, 0.245892, 0.252034, 0.247962, 0.244049], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 1, 0, 6, 0, 1, 29, 0, 2, 28, 2, 0, 0]': ([0.245235, 0.249016, 0.248598, 0.241158, 0.242083, 0.237046, 0.244269, 0.246722, 0.242648, 0.248875, 0.246529, 0.247412, 0.237683, 0.245355, 0.242371, 0.241744, 0.24228, 0.242035, 0.247892, 0.249856, 0.242903, 0.238104, 0.24915, 0.248981, 0.241204, 0.243368, 0.245892, 0.252034, 0.247962, 0.244049], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	6
        Additions: 		908
        Multiplications: 	288
        Divisions: 		0
        Logical: 		0
        Reads: 			1684
        Writes: 		226
        Comparisons:		24
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest11.exe __orio_perftest11.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest11.exe  
Program Test Output: 
{'[4, 6, 6, 6, 6, 0, 28, 2, 1, 0, 0, 2, 0]' : 0.127059}
{'[4, 6, 6, 6, 6, 0, 28, 2, 1, 0, 0, 2, 0]' : 0.126888}
{'[4, 6, 6, 6, 6, 0, 28, 2, 1, 0, 0, 2, 0]' : 0.126738}
{'[4, 6, 6, 6, 6, 0, 28, 2, 1, 0, 0, 2, 0]' : 0.126606}
{'[4, 6, 6, 6, 6, 0, 28, 2, 1, 0, 0, 2, 0]' : 0.126793}
{'[4, 6, 6, 6, 6, 0, 28, 2, 1, 0, 0, 2, 0]' : 0.126654}
{'[4, 6, 6, 6, 6, 0, 28, 2, 1, 0, 0, 2, 0]' : 0.126814}
{'[4, 6, 6, 6, 6, 0, 28, 2, 1, 0, 0, 2, 0]' : 0.126797}
{'[4, 6, 6, 6, 6, 0, 28, 2, 1, 0, 0, 2, 0]' : 0.128076}
{'[4, 6, 6, 6, 6, 0, 28, 2, 1, 0, 0, 2, 0]' : 0.126782}
{'[4, 6, 6, 6, 6, 0, 28, 2, 1, 0, 0, 2, 0]' : 0.127114}
{'[4, 6, 6, 6, 6, 0, 28, 2, 1, 0, 0, 2, 0]' : 0.126662}
{'[4, 6, 6, 6, 6, 0, 28, 2, 1, 0, 0, 2, 0]' : 0.126944}
{'[4, 6, 6, 6, 6, 0, 28, 2, 1, 0, 0, 2, 0]' : 0.126655}
{'[4, 6, 6, 6, 6, 0, 28, 2, 1, 0, 0, 2, 0]' : 0.12678}
{'[4, 6, 6, 6, 6, 0, 28, 2, 1, 0, 0, 2, 0]' : 0.126664}
{'[4, 6, 6, 6, 6, 0, 28, 2, 1, 0, 0, 2, 0]' : 0.128066}
{'[4, 6, 6, 6, 6, 0, 28, 2, 1, 0, 0, 2, 0]' : 0.126532}
{'[4, 6, 6, 6, 6, 0, 28, 2, 1, 0, 0, 2, 0]' : 0.126864}
{'[4, 6, 6, 6, 6, 0, 28, 2, 1, 0, 0, 2, 0]' : 0.126831}
{'[4, 6, 6, 6, 6, 0, 28, 2, 1, 0, 0, 2, 0]' : 0.127516}
{'[4, 6, 6, 6, 6, 0, 28, 2, 1, 0, 0, 2, 0]' : 0.12673}
{'[4, 6, 6, 6, 6, 0, 28, 2, 1, 0, 0, 2, 0]' : 0.126797}
{'[4, 6, 6, 6, 6, 0, 28, 2, 1, 0, 0, 2, 0]' : 0.126708}
{'[4, 6, 6, 6, 6, 0, 28, 2, 1, 0, 0, 2, 0]' : 0.126809}
{'[4, 6, 6, 6, 6, 0, 28, 2, 1, 0, 0, 2, 0]' : 0.126618}
{'[4, 6, 6, 6, 6, 0, 28, 2, 1, 0, 0, 2, 0]' : 0.126857}
{'[4, 6, 6, 6, 6, 0, 28, 2, 1, 0, 0, 2, 0]' : 0.126972}
{'[4, 6, 6, 6, 6, 0, 28, 2, 1, 0, 0, 2, 0]' : 0.130036}
{'[4, 6, 6, 6, 6, 0, 28, 2, 1, 0, 0, 2, 0]' : 0.130596}

out:
 ["{'[4, 6, 6, 6, 6, 0, 28, 2, 1, 0, 0, 2, 0]' : 0.127059}", "{'[4, 6, 6, 6, 6, 0, 28, 2, 1, 0, 0, 2, 0]' : 0.126888}", "{'[4, 6, 6, 6, 6, 0, 28, 2, 1, 0, 0, 2, 0]' : 0.126738}", "{'[4, 6, 6, 6, 6, 0, 28, 2, 1, 0, 0, 2, 0]' : 0.126606}", "{'[4, 6, 6, 6, 6, 0, 28, 2, 1, 0, 0, 2, 0]' : 0.126793}", "{'[4, 6, 6, 6, 6, 0, 28, 2, 1, 0, 0, 2, 0]' : 0.126654}", "{'[4, 6, 6, 6, 6, 0, 28, 2, 1, 0, 0, 2, 0]' : 0.126814}", "{'[4, 6, 6, 6, 6, 0, 28, 2, 1, 0, 0, 2, 0]' : 0.126797}", "{'[4, 6, 6, 6, 6, 0, 28, 2, 1, 0, 0, 2, 0]' : 0.128076}", "{'[4, 6, 6, 6, 6, 0, 28, 2, 1, 0, 0, 2, 0]' : 0.126782}", "{'[4, 6, 6, 6, 6, 0, 28, 2, 1, 0, 0, 2, 0]' : 0.127114}", "{'[4, 6, 6, 6, 6, 0, 28, 2, 1, 0, 0, 2, 0]' : 0.126662}", "{'[4, 6, 6, 6, 6, 0, 28, 2, 1, 0, 0, 2, 0]' : 0.126944}", "{'[4, 6, 6, 6, 6, 0, 28, 2, 1, 0, 0, 2, 0]' : 0.126655}", "{'[4, 6, 6, 6, 6, 0, 28, 2, 1, 0, 0, 2, 0]' : 0.12678}", "{'[4, 6, 6, 6, 6, 0, 28, 2, 1, 0, 0, 2, 0]' : 0.126664}", "{'[4, 6, 6, 6, 6, 0, 28, 2, 1, 0, 0, 2, 0]' : 0.128066}", "{'[4, 6, 6, 6, 6, 0, 28, 2, 1, 0, 0, 2, 0]' : 0.126532}", "{'[4, 6, 6, 6, 6, 0, 28, 2, 1, 0, 0, 2, 0]' : 0.126864}", "{'[4, 6, 6, 6, 6, 0, 28, 2, 1, 0, 0, 2, 0]' : 0.126831}", "{'[4, 6, 6, 6, 6, 0, 28, 2, 1, 0, 0, 2, 0]' : 0.127516}", "{'[4, 6, 6, 6, 6, 0, 28, 2, 1, 0, 0, 2, 0]' : 0.12673}", "{'[4, 6, 6, 6, 6, 0, 28, 2, 1, 0, 0, 2, 0]' : 0.126797}", "{'[4, 6, 6, 6, 6, 0, 28, 2, 1, 0, 0, 2, 0]' : 0.126708}", "{'[4, 6, 6, 6, 6, 0, 28, 2, 1, 0, 0, 2, 0]' : 0.126809}", "{'[4, 6, 6, 6, 6, 0, 28, 2, 1, 0, 0, 2, 0]' : 0.126618}", "{'[4, 6, 6, 6, 6, 0, 28, 2, 1, 0, 0, 2, 0]' : 0.126857}", "{'[4, 6, 6, 6, 6, 0, 28, 2, 1, 0, 0, 2, 0]' : 0.126972}", "{'[4, 6, 6, 6, 6, 0, 28, 2, 1, 0, 0, 2, 0]' : 0.130036}", "{'[4, 6, 6, 6, 6, 0, 28, 2, 1, 0, 0, 2, 0]' : 0.130596}"]
returning from 'run': {'[4, 6, 6, 6, 6, 0, 28, 2, 1, 0, 0, 2, 0]': ([0.127059, 0.126888, 0.126738, 0.126606, 0.126793, 0.126654, 0.126814, 0.126797, 0.128076, 0.126782, 0.127114, 0.126662, 0.126944, 0.126655, 0.12678, 0.126664, 0.128066, 0.126532, 0.126864, 0.126831, 0.127516, 0.12673, 0.126797, 0.126708, 0.126809, 0.126618, 0.126857, 0.126972, 0.130036, 0.130596], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 6, 6, 6, 6, 0, 28, 2, 1, 0, 0, 2, 0]': ([0.127059, 0.126888, 0.126738, 0.126606, 0.126793, 0.126654, 0.126814, 0.126797, 0.128076, 0.126782, 0.127114, 0.126662, 0.126944, 0.126655, 0.12678, 0.126664, 0.128066, 0.126532, 0.126864, 0.126831, 0.127516, 0.12673, 0.126797, 0.126708, 0.126809, 0.126618, 0.126857, 0.126972, 0.130036, 0.130596], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	4
        Additions: 		201
        Multiplications: 	84
        Divisions: 		0
        Logical: 		0
        Reads: 			496
        Writes: 		67
        Comparisons:		10
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest12.exe __orio_perftest12.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest12.exe  
Program Test Output: 
{'[0, 0, 0, 1, 4, 6, 2, 0, 7, 0, 0, 2, 0]' : 0.185352}
{'[0, 0, 0, 1, 4, 6, 2, 0, 7, 0, 0, 2, 0]' : 0.185297}
{'[0, 0, 0, 1, 4, 6, 2, 0, 7, 0, 0, 2, 0]' : 0.185084}
{'[0, 0, 0, 1, 4, 6, 2, 0, 7, 0, 0, 2, 0]' : 0.187824}
{'[0, 0, 0, 1, 4, 6, 2, 0, 7, 0, 0, 2, 0]' : 0.185158}
{'[0, 0, 0, 1, 4, 6, 2, 0, 7, 0, 0, 2, 0]' : 0.18516}
{'[0, 0, 0, 1, 4, 6, 2, 0, 7, 0, 0, 2, 0]' : 0.185081}
{'[0, 0, 0, 1, 4, 6, 2, 0, 7, 0, 0, 2, 0]' : 0.18503}
{'[0, 0, 0, 1, 4, 6, 2, 0, 7, 0, 0, 2, 0]' : 0.188704}
{'[0, 0, 0, 1, 4, 6, 2, 0, 7, 0, 0, 2, 0]' : 0.187567}
{'[0, 0, 0, 1, 4, 6, 2, 0, 7, 0, 0, 2, 0]' : 0.185028}
{'[0, 0, 0, 1, 4, 6, 2, 0, 7, 0, 0, 2, 0]' : 0.185142}
{'[0, 0, 0, 1, 4, 6, 2, 0, 7, 0, 0, 2, 0]' : 0.185387}
{'[0, 0, 0, 1, 4, 6, 2, 0, 7, 0, 0, 2, 0]' : 0.185227}
{'[0, 0, 0, 1, 4, 6, 2, 0, 7, 0, 0, 2, 0]' : 0.185218}
{'[0, 0, 0, 1, 4, 6, 2, 0, 7, 0, 0, 2, 0]' : 0.185555}
{'[0, 0, 0, 1, 4, 6, 2, 0, 7, 0, 0, 2, 0]' : 0.185237}
{'[0, 0, 0, 1, 4, 6, 2, 0, 7, 0, 0, 2, 0]' : 0.185086}
{'[0, 0, 0, 1, 4, 6, 2, 0, 7, 0, 0, 2, 0]' : 0.185061}
{'[0, 0, 0, 1, 4, 6, 2, 0, 7, 0, 0, 2, 0]' : 0.190231}
{'[0, 0, 0, 1, 4, 6, 2, 0, 7, 0, 0, 2, 0]' : 0.188596}
{'[0, 0, 0, 1, 4, 6, 2, 0, 7, 0, 0, 2, 0]' : 0.185522}
{'[0, 0, 0, 1, 4, 6, 2, 0, 7, 0, 0, 2, 0]' : 0.18505}
{'[0, 0, 0, 1, 4, 6, 2, 0, 7, 0, 0, 2, 0]' : 0.185378}
{'[0, 0, 0, 1, 4, 6, 2, 0, 7, 0, 0, 2, 0]' : 0.188013}
{'[0, 0, 0, 1, 4, 6, 2, 0, 7, 0, 0, 2, 0]' : 0.191329}
{'[0, 0, 0, 1, 4, 6, 2, 0, 7, 0, 0, 2, 0]' : 0.191276}
{'[0, 0, 0, 1, 4, 6, 2, 0, 7, 0, 0, 2, 0]' : 0.185744}
{'[0, 0, 0, 1, 4, 6, 2, 0, 7, 0, 0, 2, 0]' : 0.185019}
{'[0, 0, 0, 1, 4, 6, 2, 0, 7, 0, 0, 2, 0]' : 0.185224}

out:
 ["{'[0, 0, 0, 1, 4, 6, 2, 0, 7, 0, 0, 2, 0]' : 0.185352}", "{'[0, 0, 0, 1, 4, 6, 2, 0, 7, 0, 0, 2, 0]' : 0.185297}", "{'[0, 0, 0, 1, 4, 6, 2, 0, 7, 0, 0, 2, 0]' : 0.185084}", "{'[0, 0, 0, 1, 4, 6, 2, 0, 7, 0, 0, 2, 0]' : 0.187824}", "{'[0, 0, 0, 1, 4, 6, 2, 0, 7, 0, 0, 2, 0]' : 0.185158}", "{'[0, 0, 0, 1, 4, 6, 2, 0, 7, 0, 0, 2, 0]' : 0.18516}", "{'[0, 0, 0, 1, 4, 6, 2, 0, 7, 0, 0, 2, 0]' : 0.185081}", "{'[0, 0, 0, 1, 4, 6, 2, 0, 7, 0, 0, 2, 0]' : 0.18503}", "{'[0, 0, 0, 1, 4, 6, 2, 0, 7, 0, 0, 2, 0]' : 0.188704}", "{'[0, 0, 0, 1, 4, 6, 2, 0, 7, 0, 0, 2, 0]' : 0.187567}", "{'[0, 0, 0, 1, 4, 6, 2, 0, 7, 0, 0, 2, 0]' : 0.185028}", "{'[0, 0, 0, 1, 4, 6, 2, 0, 7, 0, 0, 2, 0]' : 0.185142}", "{'[0, 0, 0, 1, 4, 6, 2, 0, 7, 0, 0, 2, 0]' : 0.185387}", "{'[0, 0, 0, 1, 4, 6, 2, 0, 7, 0, 0, 2, 0]' : 0.185227}", "{'[0, 0, 0, 1, 4, 6, 2, 0, 7, 0, 0, 2, 0]' : 0.185218}", "{'[0, 0, 0, 1, 4, 6, 2, 0, 7, 0, 0, 2, 0]' : 0.185555}", "{'[0, 0, 0, 1, 4, 6, 2, 0, 7, 0, 0, 2, 0]' : 0.185237}", "{'[0, 0, 0, 1, 4, 6, 2, 0, 7, 0, 0, 2, 0]' : 0.185086}", "{'[0, 0, 0, 1, 4, 6, 2, 0, 7, 0, 0, 2, 0]' : 0.185061}", "{'[0, 0, 0, 1, 4, 6, 2, 0, 7, 0, 0, 2, 0]' : 0.190231}", "{'[0, 0, 0, 1, 4, 6, 2, 0, 7, 0, 0, 2, 0]' : 0.188596}", "{'[0, 0, 0, 1, 4, 6, 2, 0, 7, 0, 0, 2, 0]' : 0.185522}", "{'[0, 0, 0, 1, 4, 6, 2, 0, 7, 0, 0, 2, 0]' : 0.18505}", "{'[0, 0, 0, 1, 4, 6, 2, 0, 7, 0, 0, 2, 0]' : 0.185378}", "{'[0, 0, 0, 1, 4, 6, 2, 0, 7, 0, 0, 2, 0]' : 0.188013}", "{'[0, 0, 0, 1, 4, 6, 2, 0, 7, 0, 0, 2, 0]' : 0.191329}", "{'[0, 0, 0, 1, 4, 6, 2, 0, 7, 0, 0, 2, 0]' : 0.191276}", "{'[0, 0, 0, 1, 4, 6, 2, 0, 7, 0, 0, 2, 0]' : 0.185744}", "{'[0, 0, 0, 1, 4, 6, 2, 0, 7, 0, 0, 2, 0]' : 0.185019}", "{'[0, 0, 0, 1, 4, 6, 2, 0, 7, 0, 0, 2, 0]' : 0.185224}"]
returning from 'run': {'[0, 0, 0, 1, 4, 6, 2, 0, 7, 0, 0, 2, 0]': ([0.185352, 0.185297, 0.185084, 0.187824, 0.185158, 0.18516, 0.185081, 0.18503, 0.188704, 0.187567, 0.185028, 0.185142, 0.185387, 0.185227, 0.185218, 0.185555, 0.185237, 0.185086, 0.185061, 0.190231, 0.188596, 0.185522, 0.18505, 0.185378, 0.188013, 0.191329, 0.191276, 0.185744, 0.185019, 0.185224], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 0, 0, 1, 4, 6, 2, 0, 7, 0, 0, 2, 0]': ([0.185352, 0.185297, 0.185084, 0.187824, 0.185158, 0.18516, 0.185081, 0.18503, 0.188704, 0.187567, 0.185028, 0.185142, 0.185387, 0.185227, 0.185218, 0.185555, 0.185237, 0.185086, 0.185061, 0.190231, 0.188596, 0.185522, 0.18505, 0.185378, 0.188013, 0.191329, 0.191276, 0.185744, 0.185019, 0.185224], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	6
        Additions: 		3970
        Multiplications: 	1224
        Divisions: 		0
        Logical: 		0
        Reads: 			6358
        Writes: 		693
        Comparisons:		24
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest13.exe __orio_perftest13.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest13.exe  
Program Test Output: 
{'[4, 4, 4, 4, 5, 6, 29, 0, 27, 29, 1, 1, 0]' : 0.128575}
{'[4, 4, 4, 4, 5, 6, 29, 0, 27, 29, 1, 1, 0]' : 0.128166}
{'[4, 4, 4, 4, 5, 6, 29, 0, 27, 29, 1, 1, 0]' : 0.124921}
{'[4, 4, 4, 4, 5, 6, 29, 0, 27, 29, 1, 1, 0]' : 0.111846}
{'[4, 4, 4, 4, 5, 6, 29, 0, 27, 29, 1, 1, 0]' : 0.111748}
{'[4, 4, 4, 4, 5, 6, 29, 0, 27, 29, 1, 1, 0]' : 0.112313}
{'[4, 4, 4, 4, 5, 6, 29, 0, 27, 29, 1, 1, 0]' : 0.113559}
{'[4, 4, 4, 4, 5, 6, 29, 0, 27, 29, 1, 1, 0]' : 0.113066}
{'[4, 4, 4, 4, 5, 6, 29, 0, 27, 29, 1, 1, 0]' : 0.109927}
{'[4, 4, 4, 4, 5, 6, 29, 0, 27, 29, 1, 1, 0]' : 0.109758}
{'[4, 4, 4, 4, 5, 6, 29, 0, 27, 29, 1, 1, 0]' : 0.109588}
{'[4, 4, 4, 4, 5, 6, 29, 0, 27, 29, 1, 1, 0]' : 0.109949}
{'[4, 4, 4, 4, 5, 6, 29, 0, 27, 29, 1, 1, 0]' : 0.110107}
{'[4, 4, 4, 4, 5, 6, 29, 0, 27, 29, 1, 1, 0]' : 0.112819}
{'[4, 4, 4, 4, 5, 6, 29, 0, 27, 29, 1, 1, 0]' : 0.112657}
{'[4, 4, 4, 4, 5, 6, 29, 0, 27, 29, 1, 1, 0]' : 0.113735}
{'[4, 4, 4, 4, 5, 6, 29, 0, 27, 29, 1, 1, 0]' : 0.116111}
{'[4, 4, 4, 4, 5, 6, 29, 0, 27, 29, 1, 1, 0]' : 0.115823}
{'[4, 4, 4, 4, 5, 6, 29, 0, 27, 29, 1, 1, 0]' : 0.115716}
{'[4, 4, 4, 4, 5, 6, 29, 0, 27, 29, 1, 1, 0]' : 0.115842}
{'[4, 4, 4, 4, 5, 6, 29, 0, 27, 29, 1, 1, 0]' : 0.115926}
{'[4, 4, 4, 4, 5, 6, 29, 0, 27, 29, 1, 1, 0]' : 0.115823}
{'[4, 4, 4, 4, 5, 6, 29, 0, 27, 29, 1, 1, 0]' : 0.115752}
{'[4, 4, 4, 4, 5, 6, 29, 0, 27, 29, 1, 1, 0]' : 0.115838}
{'[4, 4, 4, 4, 5, 6, 29, 0, 27, 29, 1, 1, 0]' : 0.115917}
{'[4, 4, 4, 4, 5, 6, 29, 0, 27, 29, 1, 1, 0]' : 0.11585}
{'[4, 4, 4, 4, 5, 6, 29, 0, 27, 29, 1, 1, 0]' : 0.115866}
{'[4, 4, 4, 4, 5, 6, 29, 0, 27, 29, 1, 1, 0]' : 0.115796}
{'[4, 4, 4, 4, 5, 6, 29, 0, 27, 29, 1, 1, 0]' : 0.115876}
{'[4, 4, 4, 4, 5, 6, 29, 0, 27, 29, 1, 1, 0]' : 0.11586}

out:
 ["{'[4, 4, 4, 4, 5, 6, 29, 0, 27, 29, 1, 1, 0]' : 0.128575}", "{'[4, 4, 4, 4, 5, 6, 29, 0, 27, 29, 1, 1, 0]' : 0.128166}", "{'[4, 4, 4, 4, 5, 6, 29, 0, 27, 29, 1, 1, 0]' : 0.124921}", "{'[4, 4, 4, 4, 5, 6, 29, 0, 27, 29, 1, 1, 0]' : 0.111846}", "{'[4, 4, 4, 4, 5, 6, 29, 0, 27, 29, 1, 1, 0]' : 0.111748}", "{'[4, 4, 4, 4, 5, 6, 29, 0, 27, 29, 1, 1, 0]' : 0.112313}", "{'[4, 4, 4, 4, 5, 6, 29, 0, 27, 29, 1, 1, 0]' : 0.113559}", "{'[4, 4, 4, 4, 5, 6, 29, 0, 27, 29, 1, 1, 0]' : 0.113066}", "{'[4, 4, 4, 4, 5, 6, 29, 0, 27, 29, 1, 1, 0]' : 0.109927}", "{'[4, 4, 4, 4, 5, 6, 29, 0, 27, 29, 1, 1, 0]' : 0.109758}", "{'[4, 4, 4, 4, 5, 6, 29, 0, 27, 29, 1, 1, 0]' : 0.109588}", "{'[4, 4, 4, 4, 5, 6, 29, 0, 27, 29, 1, 1, 0]' : 0.109949}", "{'[4, 4, 4, 4, 5, 6, 29, 0, 27, 29, 1, 1, 0]' : 0.110107}", "{'[4, 4, 4, 4, 5, 6, 29, 0, 27, 29, 1, 1, 0]' : 0.112819}", "{'[4, 4, 4, 4, 5, 6, 29, 0, 27, 29, 1, 1, 0]' : 0.112657}", "{'[4, 4, 4, 4, 5, 6, 29, 0, 27, 29, 1, 1, 0]' : 0.113735}", "{'[4, 4, 4, 4, 5, 6, 29, 0, 27, 29, 1, 1, 0]' : 0.116111}", "{'[4, 4, 4, 4, 5, 6, 29, 0, 27, 29, 1, 1, 0]' : 0.115823}", "{'[4, 4, 4, 4, 5, 6, 29, 0, 27, 29, 1, 1, 0]' : 0.115716}", "{'[4, 4, 4, 4, 5, 6, 29, 0, 27, 29, 1, 1, 0]' : 0.115842}", "{'[4, 4, 4, 4, 5, 6, 29, 0, 27, 29, 1, 1, 0]' : 0.115926}", "{'[4, 4, 4, 4, 5, 6, 29, 0, 27, 29, 1, 1, 0]' : 0.115823}", "{'[4, 4, 4, 4, 5, 6, 29, 0, 27, 29, 1, 1, 0]' : 0.115752}", "{'[4, 4, 4, 4, 5, 6, 29, 0, 27, 29, 1, 1, 0]' : 0.115838}", "{'[4, 4, 4, 4, 5, 6, 29, 0, 27, 29, 1, 1, 0]' : 0.115917}", "{'[4, 4, 4, 4, 5, 6, 29, 0, 27, 29, 1, 1, 0]' : 0.11585}", "{'[4, 4, 4, 4, 5, 6, 29, 0, 27, 29, 1, 1, 0]' : 0.115866}", "{'[4, 4, 4, 4, 5, 6, 29, 0, 27, 29, 1, 1, 0]' : 0.115796}", "{'[4, 4, 4, 4, 5, 6, 29, 0, 27, 29, 1, 1, 0]' : 0.115876}", "{'[4, 4, 4, 4, 5, 6, 29, 0, 27, 29, 1, 1, 0]' : 0.11586}"]
returning from 'run': {'[4, 4, 4, 4, 5, 6, 29, 0, 27, 29, 1, 1, 0]': ([0.128575, 0.128166, 0.124921, 0.111846, 0.111748, 0.112313, 0.113559, 0.113066, 0.109927, 0.109758, 0.109588, 0.109949, 0.110107, 0.112819, 0.112657, 0.113735, 0.116111, 0.115823, 0.115716, 0.115842, 0.115926, 0.115823, 0.115752, 0.115838, 0.115917, 0.11585, 0.115866, 0.115796, 0.115876, 0.11586], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 4, 4, 4, 5, 6, 29, 0, 27, 29, 1, 1, 0]': ([0.128575, 0.128166, 0.124921, 0.111846, 0.111748, 0.112313, 0.113559, 0.113066, 0.109927, 0.109758, 0.109588, 0.109949, 0.110107, 0.112819, 0.112657, 0.113735, 0.116111, 0.115823, 0.115716, 0.115842, 0.115926, 0.115823, 0.115752, 0.115838, 0.115917, 0.11585, 0.115866, 0.115796, 0.115876, 0.11586], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = kkk
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	5
        Additions: 		1028
        Multiplications: 	366
        Divisions: 		0
        Logical: 		0
        Reads: 			1974
        Writes: 		228
        Comparisons:		18
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest14.exe __orio_perftest14.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest14.exe  
Program Test Output: 
{'[6, 0, 6, 5, 5, 4, 4, 1, 0, 26, 0, 2, 0]' : 0.157189}
{'[6, 0, 6, 5, 5, 4, 4, 1, 0, 26, 0, 2, 0]' : 0.157179}
{'[6, 0, 6, 5, 5, 4, 4, 1, 0, 26, 0, 2, 0]' : 0.154309}
{'[6, 0, 6, 5, 5, 4, 4, 1, 0, 26, 0, 2, 0]' : 0.133221}
{'[6, 0, 6, 5, 5, 4, 4, 1, 0, 26, 0, 2, 0]' : 0.132616}
{'[6, 0, 6, 5, 5, 4, 4, 1, 0, 26, 0, 2, 0]' : 0.132645}
{'[6, 0, 6, 5, 5, 4, 4, 1, 0, 26, 0, 2, 0]' : 0.132813}
{'[6, 0, 6, 5, 5, 4, 4, 1, 0, 26, 0, 2, 0]' : 0.132747}
{'[6, 0, 6, 5, 5, 4, 4, 1, 0, 26, 0, 2, 0]' : 0.132721}
{'[6, 0, 6, 5, 5, 4, 4, 1, 0, 26, 0, 2, 0]' : 0.132744}
{'[6, 0, 6, 5, 5, 4, 4, 1, 0, 26, 0, 2, 0]' : 0.132668}
{'[6, 0, 6, 5, 5, 4, 4, 1, 0, 26, 0, 2, 0]' : 0.132708}
{'[6, 0, 6, 5, 5, 4, 4, 1, 0, 26, 0, 2, 0]' : 0.133127}
{'[6, 0, 6, 5, 5, 4, 4, 1, 0, 26, 0, 2, 0]' : 0.132783}
{'[6, 0, 6, 5, 5, 4, 4, 1, 0, 26, 0, 2, 0]' : 0.132862}
{'[6, 0, 6, 5, 5, 4, 4, 1, 0, 26, 0, 2, 0]' : 0.132802}
{'[6, 0, 6, 5, 5, 4, 4, 1, 0, 26, 0, 2, 0]' : 0.132922}
{'[6, 0, 6, 5, 5, 4, 4, 1, 0, 26, 0, 2, 0]' : 0.132721}
{'[6, 0, 6, 5, 5, 4, 4, 1, 0, 26, 0, 2, 0]' : 0.133154}
{'[6, 0, 6, 5, 5, 4, 4, 1, 0, 26, 0, 2, 0]' : 0.13272}
{'[6, 0, 6, 5, 5, 4, 4, 1, 0, 26, 0, 2, 0]' : 0.133026}
{'[6, 0, 6, 5, 5, 4, 4, 1, 0, 26, 0, 2, 0]' : 0.132825}
{'[6, 0, 6, 5, 5, 4, 4, 1, 0, 26, 0, 2, 0]' : 0.13283}
{'[6, 0, 6, 5, 5, 4, 4, 1, 0, 26, 0, 2, 0]' : 0.132803}
{'[6, 0, 6, 5, 5, 4, 4, 1, 0, 26, 0, 2, 0]' : 0.1329}
{'[6, 0, 6, 5, 5, 4, 4, 1, 0, 26, 0, 2, 0]' : 0.132759}
{'[6, 0, 6, 5, 5, 4, 4, 1, 0, 26, 0, 2, 0]' : 0.132704}
{'[6, 0, 6, 5, 5, 4, 4, 1, 0, 26, 0, 2, 0]' : 0.133003}
{'[6, 0, 6, 5, 5, 4, 4, 1, 0, 26, 0, 2, 0]' : 0.132746}
{'[6, 0, 6, 5, 5, 4, 4, 1, 0, 26, 0, 2, 0]' : 0.132831}

out:
 ["{'[6, 0, 6, 5, 5, 4, 4, 1, 0, 26, 0, 2, 0]' : 0.157189}", "{'[6, 0, 6, 5, 5, 4, 4, 1, 0, 26, 0, 2, 0]' : 0.157179}", "{'[6, 0, 6, 5, 5, 4, 4, 1, 0, 26, 0, 2, 0]' : 0.154309}", "{'[6, 0, 6, 5, 5, 4, 4, 1, 0, 26, 0, 2, 0]' : 0.133221}", "{'[6, 0, 6, 5, 5, 4, 4, 1, 0, 26, 0, 2, 0]' : 0.132616}", "{'[6, 0, 6, 5, 5, 4, 4, 1, 0, 26, 0, 2, 0]' : 0.132645}", "{'[6, 0, 6, 5, 5, 4, 4, 1, 0, 26, 0, 2, 0]' : 0.132813}", "{'[6, 0, 6, 5, 5, 4, 4, 1, 0, 26, 0, 2, 0]' : 0.132747}", "{'[6, 0, 6, 5, 5, 4, 4, 1, 0, 26, 0, 2, 0]' : 0.132721}", "{'[6, 0, 6, 5, 5, 4, 4, 1, 0, 26, 0, 2, 0]' : 0.132744}", "{'[6, 0, 6, 5, 5, 4, 4, 1, 0, 26, 0, 2, 0]' : 0.132668}", "{'[6, 0, 6, 5, 5, 4, 4, 1, 0, 26, 0, 2, 0]' : 0.132708}", "{'[6, 0, 6, 5, 5, 4, 4, 1, 0, 26, 0, 2, 0]' : 0.133127}", "{'[6, 0, 6, 5, 5, 4, 4, 1, 0, 26, 0, 2, 0]' : 0.132783}", "{'[6, 0, 6, 5, 5, 4, 4, 1, 0, 26, 0, 2, 0]' : 0.132862}", "{'[6, 0, 6, 5, 5, 4, 4, 1, 0, 26, 0, 2, 0]' : 0.132802}", "{'[6, 0, 6, 5, 5, 4, 4, 1, 0, 26, 0, 2, 0]' : 0.132922}", "{'[6, 0, 6, 5, 5, 4, 4, 1, 0, 26, 0, 2, 0]' : 0.132721}", "{'[6, 0, 6, 5, 5, 4, 4, 1, 0, 26, 0, 2, 0]' : 0.133154}", "{'[6, 0, 6, 5, 5, 4, 4, 1, 0, 26, 0, 2, 0]' : 0.13272}", "{'[6, 0, 6, 5, 5, 4, 4, 1, 0, 26, 0, 2, 0]' : 0.133026}", "{'[6, 0, 6, 5, 5, 4, 4, 1, 0, 26, 0, 2, 0]' : 0.132825}", "{'[6, 0, 6, 5, 5, 4, 4, 1, 0, 26, 0, 2, 0]' : 0.13283}", "{'[6, 0, 6, 5, 5, 4, 4, 1, 0, 26, 0, 2, 0]' : 0.132803}", "{'[6, 0, 6, 5, 5, 4, 4, 1, 0, 26, 0, 2, 0]' : 0.1329}", "{'[6, 0, 6, 5, 5, 4, 4, 1, 0, 26, 0, 2, 0]' : 0.132759}", "{'[6, 0, 6, 5, 5, 4, 4, 1, 0, 26, 0, 2, 0]' : 0.132704}", "{'[6, 0, 6, 5, 5, 4, 4, 1, 0, 26, 0, 2, 0]' : 0.133003}", "{'[6, 0, 6, 5, 5, 4, 4, 1, 0, 26, 0, 2, 0]' : 0.132746}", "{'[6, 0, 6, 5, 5, 4, 4, 1, 0, 26, 0, 2, 0]' : 0.132831}"]
returning from 'run': {'[6, 0, 6, 5, 5, 4, 4, 1, 0, 26, 0, 2, 0]': ([0.157189, 0.157179, 0.154309, 0.133221, 0.132616, 0.132645, 0.132813, 0.132747, 0.132721, 0.132744, 0.132668, 0.132708, 0.133127, 0.132783, 0.132862, 0.132802, 0.132922, 0.132721, 0.133154, 0.13272, 0.133026, 0.132825, 0.13283, 0.132803, 0.1329, 0.132759, 0.132704, 0.133003, 0.132746, 0.132831], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 0, 6, 5, 5, 4, 4, 1, 0, 26, 0, 2, 0]': ([0.157189, 0.157179, 0.154309, 0.133221, 0.132616, 0.132645, 0.132813, 0.132747, 0.132721, 0.132744, 0.132668, 0.132708, 0.133127, 0.132783, 0.132862, 0.132802, 0.132922, 0.132721, 0.133154, 0.13272, 0.133026, 0.132825, 0.13283, 0.132803, 0.1329, 0.132759, 0.132704, 0.133003, 0.132746, 0.132831], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	17
        Max loop nest depth: 	5
        Additions: 		2317
        Multiplications: 	702
        Divisions: 		0
        Logical: 		0
        Reads: 			3743
        Writes: 		442
        Comparisons:		17
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest15.exe __orio_perftest15.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest15.exe  
Program Test Output: 
{'[6, 6, 2, 0, 5, 0, 28, 25, 0, 10, 0, 0, 0]' : 0.183584}
{'[6, 6, 2, 0, 5, 0, 28, 25, 0, 10, 0, 0, 0]' : 0.183818}
{'[6, 6, 2, 0, 5, 0, 28, 25, 0, 10, 0, 0, 0]' : 0.163997}
{'[6, 6, 2, 0, 5, 0, 28, 25, 0, 10, 0, 0, 0]' : 0.159395}
{'[6, 6, 2, 0, 5, 0, 28, 25, 0, 10, 0, 0, 0]' : 0.160078}
{'[6, 6, 2, 0, 5, 0, 28, 25, 0, 10, 0, 0, 0]' : 0.159512}
{'[6, 6, 2, 0, 5, 0, 28, 25, 0, 10, 0, 0, 0]' : 0.159648}
{'[6, 6, 2, 0, 5, 0, 28, 25, 0, 10, 0, 0, 0]' : 0.159685}
{'[6, 6, 2, 0, 5, 0, 28, 25, 0, 10, 0, 0, 0]' : 0.159891}
{'[6, 6, 2, 0, 5, 0, 28, 25, 0, 10, 0, 0, 0]' : 0.15971}
{'[6, 6, 2, 0, 5, 0, 28, 25, 0, 10, 0, 0, 0]' : 0.159713}
{'[6, 6, 2, 0, 5, 0, 28, 25, 0, 10, 0, 0, 0]' : 0.159644}
{'[6, 6, 2, 0, 5, 0, 28, 25, 0, 10, 0, 0, 0]' : 0.159568}
{'[6, 6, 2, 0, 5, 0, 28, 25, 0, 10, 0, 0, 0]' : 0.159442}
{'[6, 6, 2, 0, 5, 0, 28, 25, 0, 10, 0, 0, 0]' : 0.159722}
{'[6, 6, 2, 0, 5, 0, 28, 25, 0, 10, 0, 0, 0]' : 0.159961}
{'[6, 6, 2, 0, 5, 0, 28, 25, 0, 10, 0, 0, 0]' : 0.159683}
{'[6, 6, 2, 0, 5, 0, 28, 25, 0, 10, 0, 0, 0]' : 0.159696}
{'[6, 6, 2, 0, 5, 0, 28, 25, 0, 10, 0, 0, 0]' : 0.160162}
{'[6, 6, 2, 0, 5, 0, 28, 25, 0, 10, 0, 0, 0]' : 0.159927}
{'[6, 6, 2, 0, 5, 0, 28, 25, 0, 10, 0, 0, 0]' : 0.15979}
{'[6, 6, 2, 0, 5, 0, 28, 25, 0, 10, 0, 0, 0]' : 0.159698}
{'[6, 6, 2, 0, 5, 0, 28, 25, 0, 10, 0, 0, 0]' : 0.159659}
{'[6, 6, 2, 0, 5, 0, 28, 25, 0, 10, 0, 0, 0]' : 0.159945}
{'[6, 6, 2, 0, 5, 0, 28, 25, 0, 10, 0, 0, 0]' : 0.159821}
{'[6, 6, 2, 0, 5, 0, 28, 25, 0, 10, 0, 0, 0]' : 0.160255}
{'[6, 6, 2, 0, 5, 0, 28, 25, 0, 10, 0, 0, 0]' : 0.159751}
{'[6, 6, 2, 0, 5, 0, 28, 25, 0, 10, 0, 0, 0]' : 0.15958}
{'[6, 6, 2, 0, 5, 0, 28, 25, 0, 10, 0, 0, 0]' : 0.159933}
{'[6, 6, 2, 0, 5, 0, 28, 25, 0, 10, 0, 0, 0]' : 0.159702}

out:
 ["{'[6, 6, 2, 0, 5, 0, 28, 25, 0, 10, 0, 0, 0]' : 0.183584}", "{'[6, 6, 2, 0, 5, 0, 28, 25, 0, 10, 0, 0, 0]' : 0.183818}", "{'[6, 6, 2, 0, 5, 0, 28, 25, 0, 10, 0, 0, 0]' : 0.163997}", "{'[6, 6, 2, 0, 5, 0, 28, 25, 0, 10, 0, 0, 0]' : 0.159395}", "{'[6, 6, 2, 0, 5, 0, 28, 25, 0, 10, 0, 0, 0]' : 0.160078}", "{'[6, 6, 2, 0, 5, 0, 28, 25, 0, 10, 0, 0, 0]' : 0.159512}", "{'[6, 6, 2, 0, 5, 0, 28, 25, 0, 10, 0, 0, 0]' : 0.159648}", "{'[6, 6, 2, 0, 5, 0, 28, 25, 0, 10, 0, 0, 0]' : 0.159685}", "{'[6, 6, 2, 0, 5, 0, 28, 25, 0, 10, 0, 0, 0]' : 0.159891}", "{'[6, 6, 2, 0, 5, 0, 28, 25, 0, 10, 0, 0, 0]' : 0.15971}", "{'[6, 6, 2, 0, 5, 0, 28, 25, 0, 10, 0, 0, 0]' : 0.159713}", "{'[6, 6, 2, 0, 5, 0, 28, 25, 0, 10, 0, 0, 0]' : 0.159644}", "{'[6, 6, 2, 0, 5, 0, 28, 25, 0, 10, 0, 0, 0]' : 0.159568}", "{'[6, 6, 2, 0, 5, 0, 28, 25, 0, 10, 0, 0, 0]' : 0.159442}", "{'[6, 6, 2, 0, 5, 0, 28, 25, 0, 10, 0, 0, 0]' : 0.159722}", "{'[6, 6, 2, 0, 5, 0, 28, 25, 0, 10, 0, 0, 0]' : 0.159961}", "{'[6, 6, 2, 0, 5, 0, 28, 25, 0, 10, 0, 0, 0]' : 0.159683}", "{'[6, 6, 2, 0, 5, 0, 28, 25, 0, 10, 0, 0, 0]' : 0.159696}", "{'[6, 6, 2, 0, 5, 0, 28, 25, 0, 10, 0, 0, 0]' : 0.160162}", "{'[6, 6, 2, 0, 5, 0, 28, 25, 0, 10, 0, 0, 0]' : 0.159927}", "{'[6, 6, 2, 0, 5, 0, 28, 25, 0, 10, 0, 0, 0]' : 0.15979}", "{'[6, 6, 2, 0, 5, 0, 28, 25, 0, 10, 0, 0, 0]' : 0.159698}", "{'[6, 6, 2, 0, 5, 0, 28, 25, 0, 10, 0, 0, 0]' : 0.159659}", "{'[6, 6, 2, 0, 5, 0, 28, 25, 0, 10, 0, 0, 0]' : 0.159945}", "{'[6, 6, 2, 0, 5, 0, 28, 25, 0, 10, 0, 0, 0]' : 0.159821}", "{'[6, 6, 2, 0, 5, 0, 28, 25, 0, 10, 0, 0, 0]' : 0.160255}", "{'[6, 6, 2, 0, 5, 0, 28, 25, 0, 10, 0, 0, 0]' : 0.159751}", "{'[6, 6, 2, 0, 5, 0, 28, 25, 0, 10, 0, 0, 0]' : 0.15958}", "{'[6, 6, 2, 0, 5, 0, 28, 25, 0, 10, 0, 0, 0]' : 0.159933}", "{'[6, 6, 2, 0, 5, 0, 28, 25, 0, 10, 0, 0, 0]' : 0.159702}"]
returning from 'run': {'[6, 6, 2, 0, 5, 0, 28, 25, 0, 10, 0, 0, 0]': ([0.183584, 0.183818, 0.163997, 0.159395, 0.160078, 0.159512, 0.159648, 0.159685, 0.159891, 0.15971, 0.159713, 0.159644, 0.159568, 0.159442, 0.159722, 0.159961, 0.159683, 0.159696, 0.160162, 0.159927, 0.15979, 0.159698, 0.159659, 0.159945, 0.159821, 0.160255, 0.159751, 0.15958, 0.159933, 0.159702], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 2, 0, 5, 0, 28, 25, 0, 10, 0, 0, 0]': ([0.183584, 0.183818, 0.163997, 0.159395, 0.160078, 0.159512, 0.159648, 0.159685, 0.159891, 0.15971, 0.159713, 0.159644, 0.159568, 0.159442, 0.159722, 0.159961, 0.159683, 0.159696, 0.160162, 0.159927, 0.15979, 0.159698, 0.159659, 0.159945, 0.159821, 0.160255, 0.159751, 0.15958, 0.159933, 0.159702], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		436
        Multiplications: 	178
        Divisions: 		0
        Logical: 		0
        Reads: 			991
        Writes: 		123
        Comparisons:		11
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest16.exe __orio_perftest16.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest16.exe  
Program Test Output: 
{'[4, 6, 5, 0, 0, 0, 9, 0, 24, 29, 0, 2, 0]' : 0.209459}
{'[4, 6, 5, 0, 0, 0, 9, 0, 24, 29, 0, 2, 0]' : 0.209569}
{'[4, 6, 5, 0, 0, 0, 9, 0, 24, 29, 0, 2, 0]' : 0.18597}
{'[4, 6, 5, 0, 0, 0, 9, 0, 24, 29, 0, 2, 0]' : 0.175226}
{'[4, 6, 5, 0, 0, 0, 9, 0, 24, 29, 0, 2, 0]' : 0.17496}
{'[4, 6, 5, 0, 0, 0, 9, 0, 24, 29, 0, 2, 0]' : 0.174915}
{'[4, 6, 5, 0, 0, 0, 9, 0, 24, 29, 0, 2, 0]' : 0.174904}
{'[4, 6, 5, 0, 0, 0, 9, 0, 24, 29, 0, 2, 0]' : 0.174902}
{'[4, 6, 5, 0, 0, 0, 9, 0, 24, 29, 0, 2, 0]' : 0.174859}
{'[4, 6, 5, 0, 0, 0, 9, 0, 24, 29, 0, 2, 0]' : 0.174916}
{'[4, 6, 5, 0, 0, 0, 9, 0, 24, 29, 0, 2, 0]' : 0.174962}
{'[4, 6, 5, 0, 0, 0, 9, 0, 24, 29, 0, 2, 0]' : 0.175317}
{'[4, 6, 5, 0, 0, 0, 9, 0, 24, 29, 0, 2, 0]' : 0.174878}
{'[4, 6, 5, 0, 0, 0, 9, 0, 24, 29, 0, 2, 0]' : 0.174851}
{'[4, 6, 5, 0, 0, 0, 9, 0, 24, 29, 0, 2, 0]' : 0.174846}
{'[4, 6, 5, 0, 0, 0, 9, 0, 24, 29, 0, 2, 0]' : 0.174879}
{'[4, 6, 5, 0, 0, 0, 9, 0, 24, 29, 0, 2, 0]' : 0.174981}
{'[4, 6, 5, 0, 0, 0, 9, 0, 24, 29, 0, 2, 0]' : 0.174901}
{'[4, 6, 5, 0, 0, 0, 9, 0, 24, 29, 0, 2, 0]' : 0.174908}
{'[4, 6, 5, 0, 0, 0, 9, 0, 24, 29, 0, 2, 0]' : 0.175162}
{'[4, 6, 5, 0, 0, 0, 9, 0, 24, 29, 0, 2, 0]' : 0.17488}
{'[4, 6, 5, 0, 0, 0, 9, 0, 24, 29, 0, 2, 0]' : 0.174967}
{'[4, 6, 5, 0, 0, 0, 9, 0, 24, 29, 0, 2, 0]' : 0.174952}
{'[4, 6, 5, 0, 0, 0, 9, 0, 24, 29, 0, 2, 0]' : 0.175094}
{'[4, 6, 5, 0, 0, 0, 9, 0, 24, 29, 0, 2, 0]' : 0.174897}
{'[4, 6, 5, 0, 0, 0, 9, 0, 24, 29, 0, 2, 0]' : 0.174916}
{'[4, 6, 5, 0, 0, 0, 9, 0, 24, 29, 0, 2, 0]' : 0.175387}
{'[4, 6, 5, 0, 0, 0, 9, 0, 24, 29, 0, 2, 0]' : 0.174967}
{'[4, 6, 5, 0, 0, 0, 9, 0, 24, 29, 0, 2, 0]' : 0.174942}
{'[4, 6, 5, 0, 0, 0, 9, 0, 24, 29, 0, 2, 0]' : 0.174889}

out:
 ["{'[4, 6, 5, 0, 0, 0, 9, 0, 24, 29, 0, 2, 0]' : 0.209459}", "{'[4, 6, 5, 0, 0, 0, 9, 0, 24, 29, 0, 2, 0]' : 0.209569}", "{'[4, 6, 5, 0, 0, 0, 9, 0, 24, 29, 0, 2, 0]' : 0.18597}", "{'[4, 6, 5, 0, 0, 0, 9, 0, 24, 29, 0, 2, 0]' : 0.175226}", "{'[4, 6, 5, 0, 0, 0, 9, 0, 24, 29, 0, 2, 0]' : 0.17496}", "{'[4, 6, 5, 0, 0, 0, 9, 0, 24, 29, 0, 2, 0]' : 0.174915}", "{'[4, 6, 5, 0, 0, 0, 9, 0, 24, 29, 0, 2, 0]' : 0.174904}", "{'[4, 6, 5, 0, 0, 0, 9, 0, 24, 29, 0, 2, 0]' : 0.174902}", "{'[4, 6, 5, 0, 0, 0, 9, 0, 24, 29, 0, 2, 0]' : 0.174859}", "{'[4, 6, 5, 0, 0, 0, 9, 0, 24, 29, 0, 2, 0]' : 0.174916}", "{'[4, 6, 5, 0, 0, 0, 9, 0, 24, 29, 0, 2, 0]' : 0.174962}", "{'[4, 6, 5, 0, 0, 0, 9, 0, 24, 29, 0, 2, 0]' : 0.175317}", "{'[4, 6, 5, 0, 0, 0, 9, 0, 24, 29, 0, 2, 0]' : 0.174878}", "{'[4, 6, 5, 0, 0, 0, 9, 0, 24, 29, 0, 2, 0]' : 0.174851}", "{'[4, 6, 5, 0, 0, 0, 9, 0, 24, 29, 0, 2, 0]' : 0.174846}", "{'[4, 6, 5, 0, 0, 0, 9, 0, 24, 29, 0, 2, 0]' : 0.174879}", "{'[4, 6, 5, 0, 0, 0, 9, 0, 24, 29, 0, 2, 0]' : 0.174981}", "{'[4, 6, 5, 0, 0, 0, 9, 0, 24, 29, 0, 2, 0]' : 0.174901}", "{'[4, 6, 5, 0, 0, 0, 9, 0, 24, 29, 0, 2, 0]' : 0.174908}", "{'[4, 6, 5, 0, 0, 0, 9, 0, 24, 29, 0, 2, 0]' : 0.175162}", "{'[4, 6, 5, 0, 0, 0, 9, 0, 24, 29, 0, 2, 0]' : 0.17488}", "{'[4, 6, 5, 0, 0, 0, 9, 0, 24, 29, 0, 2, 0]' : 0.174967}", "{'[4, 6, 5, 0, 0, 0, 9, 0, 24, 29, 0, 2, 0]' : 0.174952}", "{'[4, 6, 5, 0, 0, 0, 9, 0, 24, 29, 0, 2, 0]' : 0.175094}", "{'[4, 6, 5, 0, 0, 0, 9, 0, 24, 29, 0, 2, 0]' : 0.174897}", "{'[4, 6, 5, 0, 0, 0, 9, 0, 24, 29, 0, 2, 0]' : 0.174916}", "{'[4, 6, 5, 0, 0, 0, 9, 0, 24, 29, 0, 2, 0]' : 0.175387}", "{'[4, 6, 5, 0, 0, 0, 9, 0, 24, 29, 0, 2, 0]' : 0.174967}", "{'[4, 6, 5, 0, 0, 0, 9, 0, 24, 29, 0, 2, 0]' : 0.174942}", "{'[4, 6, 5, 0, 0, 0, 9, 0, 24, 29, 0, 2, 0]' : 0.174889}"]
returning from 'run': {'[4, 6, 5, 0, 0, 0, 9, 0, 24, 29, 0, 2, 0]': ([0.209459, 0.209569, 0.18597, 0.175226, 0.17496, 0.174915, 0.174904, 0.174902, 0.174859, 0.174916, 0.174962, 0.175317, 0.174878, 0.174851, 0.174846, 0.174879, 0.174981, 0.174901, 0.174908, 0.175162, 0.17488, 0.174967, 0.174952, 0.175094, 0.174897, 0.174916, 0.175387, 0.174967, 0.174942, 0.174889], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[4, 6, 5, 0, 0, 0, 9, 0, 24, 29, 0, 2, 0]': ([0.209459, 0.209569, 0.18597, 0.175226, 0.17496, 0.174915, 0.174904, 0.174902, 0.174859, 0.174916, 0.174962, 0.175317, 0.174878, 0.174851, 0.174846, 0.174879, 0.174981, 0.174901, 0.174908, 0.175162, 0.17488, 0.174967, 0.174952, 0.175094, 0.174897, 0.174916, 0.175387, 0.174967, 0.174942, 0.174889], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	78
        Max loop nest depth: 	5
        Additions: 		8756
        Multiplications: 	2480
        Divisions: 		0
        Logical: 		0
        Reads: 			13126
        Writes: 		1428
        Comparisons:		78
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest17.exe __orio_perftest17.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest17.exe  
Program Test Output: 
{'[0, 3, 3, 1, 6, 3, 0, 29, 0, 29, 0, 0, 1]' : 0.198178}
{'[0, 3, 3, 1, 6, 3, 0, 29, 0, 29, 0, 0, 1]' : 0.198365}
{'[0, 3, 3, 1, 6, 3, 0, 29, 0, 29, 0, 0, 1]' : 0.182217}
{'[0, 3, 3, 1, 6, 3, 0, 29, 0, 29, 0, 0, 1]' : 0.181255}
{'[0, 3, 3, 1, 6, 3, 0, 29, 0, 29, 0, 0, 1]' : 0.17727}
{'[0, 3, 3, 1, 6, 3, 0, 29, 0, 29, 0, 0, 1]' : 0.176815}
{'[0, 3, 3, 1, 6, 3, 0, 29, 0, 29, 0, 0, 1]' : 0.178002}
{'[0, 3, 3, 1, 6, 3, 0, 29, 0, 29, 0, 0, 1]' : 0.181307}
{'[0, 3, 3, 1, 6, 3, 0, 29, 0, 29, 0, 0, 1]' : 0.179938}
{'[0, 3, 3, 1, 6, 3, 0, 29, 0, 29, 0, 0, 1]' : 0.179102}
{'[0, 3, 3, 1, 6, 3, 0, 29, 0, 29, 0, 0, 1]' : 0.181628}
{'[0, 3, 3, 1, 6, 3, 0, 29, 0, 29, 0, 0, 1]' : 0.181962}
{'[0, 3, 3, 1, 6, 3, 0, 29, 0, 29, 0, 0, 1]' : 0.181702}
{'[0, 3, 3, 1, 6, 3, 0, 29, 0, 29, 0, 0, 1]' : 0.181447}
{'[0, 3, 3, 1, 6, 3, 0, 29, 0, 29, 0, 0, 1]' : 0.181284}
{'[0, 3, 3, 1, 6, 3, 0, 29, 0, 29, 0, 0, 1]' : 0.182051}
{'[0, 3, 3, 1, 6, 3, 0, 29, 0, 29, 0, 0, 1]' : 0.181727}
{'[0, 3, 3, 1, 6, 3, 0, 29, 0, 29, 0, 0, 1]' : 0.182185}
{'[0, 3, 3, 1, 6, 3, 0, 29, 0, 29, 0, 0, 1]' : 0.181598}
{'[0, 3, 3, 1, 6, 3, 0, 29, 0, 29, 0, 0, 1]' : 0.181721}
{'[0, 3, 3, 1, 6, 3, 0, 29, 0, 29, 0, 0, 1]' : 0.181893}
{'[0, 3, 3, 1, 6, 3, 0, 29, 0, 29, 0, 0, 1]' : 0.181364}
{'[0, 3, 3, 1, 6, 3, 0, 29, 0, 29, 0, 0, 1]' : 0.181651}
{'[0, 3, 3, 1, 6, 3, 0, 29, 0, 29, 0, 0, 1]' : 0.182044}
{'[0, 3, 3, 1, 6, 3, 0, 29, 0, 29, 0, 0, 1]' : 0.182}
{'[0, 3, 3, 1, 6, 3, 0, 29, 0, 29, 0, 0, 1]' : 0.181326}
{'[0, 3, 3, 1, 6, 3, 0, 29, 0, 29, 0, 0, 1]' : 0.181671}
{'[0, 3, 3, 1, 6, 3, 0, 29, 0, 29, 0, 0, 1]' : 0.181704}
{'[0, 3, 3, 1, 6, 3, 0, 29, 0, 29, 0, 0, 1]' : 0.182266}
{'[0, 3, 3, 1, 6, 3, 0, 29, 0, 29, 0, 0, 1]' : 0.18183}

out:
 ["{'[0, 3, 3, 1, 6, 3, 0, 29, 0, 29, 0, 0, 1]' : 0.198178}", "{'[0, 3, 3, 1, 6, 3, 0, 29, 0, 29, 0, 0, 1]' : 0.198365}", "{'[0, 3, 3, 1, 6, 3, 0, 29, 0, 29, 0, 0, 1]' : 0.182217}", "{'[0, 3, 3, 1, 6, 3, 0, 29, 0, 29, 0, 0, 1]' : 0.181255}", "{'[0, 3, 3, 1, 6, 3, 0, 29, 0, 29, 0, 0, 1]' : 0.17727}", "{'[0, 3, 3, 1, 6, 3, 0, 29, 0, 29, 0, 0, 1]' : 0.176815}", "{'[0, 3, 3, 1, 6, 3, 0, 29, 0, 29, 0, 0, 1]' : 0.178002}", "{'[0, 3, 3, 1, 6, 3, 0, 29, 0, 29, 0, 0, 1]' : 0.181307}", "{'[0, 3, 3, 1, 6, 3, 0, 29, 0, 29, 0, 0, 1]' : 0.179938}", "{'[0, 3, 3, 1, 6, 3, 0, 29, 0, 29, 0, 0, 1]' : 0.179102}", "{'[0, 3, 3, 1, 6, 3, 0, 29, 0, 29, 0, 0, 1]' : 0.181628}", "{'[0, 3, 3, 1, 6, 3, 0, 29, 0, 29, 0, 0, 1]' : 0.181962}", "{'[0, 3, 3, 1, 6, 3, 0, 29, 0, 29, 0, 0, 1]' : 0.181702}", "{'[0, 3, 3, 1, 6, 3, 0, 29, 0, 29, 0, 0, 1]' : 0.181447}", "{'[0, 3, 3, 1, 6, 3, 0, 29, 0, 29, 0, 0, 1]' : 0.181284}", "{'[0, 3, 3, 1, 6, 3, 0, 29, 0, 29, 0, 0, 1]' : 0.182051}", "{'[0, 3, 3, 1, 6, 3, 0, 29, 0, 29, 0, 0, 1]' : 0.181727}", "{'[0, 3, 3, 1, 6, 3, 0, 29, 0, 29, 0, 0, 1]' : 0.182185}", "{'[0, 3, 3, 1, 6, 3, 0, 29, 0, 29, 0, 0, 1]' : 0.181598}", "{'[0, 3, 3, 1, 6, 3, 0, 29, 0, 29, 0, 0, 1]' : 0.181721}", "{'[0, 3, 3, 1, 6, 3, 0, 29, 0, 29, 0, 0, 1]' : 0.181893}", "{'[0, 3, 3, 1, 6, 3, 0, 29, 0, 29, 0, 0, 1]' : 0.181364}", "{'[0, 3, 3, 1, 6, 3, 0, 29, 0, 29, 0, 0, 1]' : 0.181651}", "{'[0, 3, 3, 1, 6, 3, 0, 29, 0, 29, 0, 0, 1]' : 0.182044}", "{'[0, 3, 3, 1, 6, 3, 0, 29, 0, 29, 0, 0, 1]' : 0.182}", "{'[0, 3, 3, 1, 6, 3, 0, 29, 0, 29, 0, 0, 1]' : 0.181326}", "{'[0, 3, 3, 1, 6, 3, 0, 29, 0, 29, 0, 0, 1]' : 0.181671}", "{'[0, 3, 3, 1, 6, 3, 0, 29, 0, 29, 0, 0, 1]' : 0.181704}", "{'[0, 3, 3, 1, 6, 3, 0, 29, 0, 29, 0, 0, 1]' : 0.182266}", "{'[0, 3, 3, 1, 6, 3, 0, 29, 0, 29, 0, 0, 1]' : 0.18183}"]
returning from 'run': {'[0, 3, 3, 1, 6, 3, 0, 29, 0, 29, 0, 0, 1]': ([0.198178, 0.198365, 0.182217, 0.181255, 0.17727, 0.176815, 0.178002, 0.181307, 0.179938, 0.179102, 0.181628, 0.181962, 0.181702, 0.181447, 0.181284, 0.182051, 0.181727, 0.182185, 0.181598, 0.181721, 0.181893, 0.181364, 0.181651, 0.182044, 0.182, 0.181326, 0.181671, 0.181704, 0.182266, 0.18183], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[0, 3, 3, 1, 6, 3, 0, 29, 0, 29, 0, 0, 1]': ([0.198178, 0.198365, 0.182217, 0.181255, 0.17727, 0.176815, 0.178002, 0.181307, 0.179938, 0.179102, 0.181628, 0.181962, 0.181702, 0.181447, 0.181284, 0.182051, 0.181727, 0.182185, 0.181598, 0.181721, 0.181893, 0.181364, 0.181651, 0.182044, 0.182, 0.181326, 0.181671, 0.181704, 0.182266, 0.18183], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	6
        Additions: 		10297
        Multiplications: 	3050
        Divisions: 		0
        Logical: 		0
        Reads: 			15420
        Writes: 		1586
        Comparisons:		16
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest18.exe __orio_perftest18.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest18.exe  
Program Test Output: 
{'[1, 6, 0, 4, 6, 0, 2, 23, 27, 0, 0, 0, 2]' : 0.171415}
{'[1, 6, 0, 4, 6, 0, 2, 23, 27, 0, 0, 0, 2]' : 0.171301}
{'[1, 6, 0, 4, 6, 0, 2, 23, 27, 0, 0, 0, 2]' : 0.17122}
{'[1, 6, 0, 4, 6, 0, 2, 23, 27, 0, 0, 0, 2]' : 0.171137}
{'[1, 6, 0, 4, 6, 0, 2, 23, 27, 0, 0, 0, 2]' : 0.172306}
{'[1, 6, 0, 4, 6, 0, 2, 23, 27, 0, 0, 0, 2]' : 0.175733}
{'[1, 6, 0, 4, 6, 0, 2, 23, 27, 0, 0, 0, 2]' : 0.175704}
{'[1, 6, 0, 4, 6, 0, 2, 23, 27, 0, 0, 0, 2]' : 0.174018}
{'[1, 6, 0, 4, 6, 0, 2, 23, 27, 0, 0, 0, 2]' : 0.171263}
{'[1, 6, 0, 4, 6, 0, 2, 23, 27, 0, 0, 0, 2]' : 0.171207}
{'[1, 6, 0, 4, 6, 0, 2, 23, 27, 0, 0, 0, 2]' : 0.173311}
{'[1, 6, 0, 4, 6, 0, 2, 23, 27, 0, 0, 0, 2]' : 0.17571}
{'[1, 6, 0, 4, 6, 0, 2, 23, 27, 0, 0, 0, 2]' : 0.175936}
{'[1, 6, 0, 4, 6, 0, 2, 23, 27, 0, 0, 0, 2]' : 0.172728}
{'[1, 6, 0, 4, 6, 0, 2, 23, 27, 0, 0, 0, 2]' : 0.171498}
{'[1, 6, 0, 4, 6, 0, 2, 23, 27, 0, 0, 0, 2]' : 0.171331}
{'[1, 6, 0, 4, 6, 0, 2, 23, 27, 0, 0, 0, 2]' : 0.16975}
{'[1, 6, 0, 4, 6, 0, 2, 23, 27, 0, 0, 0, 2]' : 0.165126}
{'[1, 6, 0, 4, 6, 0, 2, 23, 27, 0, 0, 0, 2]' : 0.165066}
{'[1, 6, 0, 4, 6, 0, 2, 23, 27, 0, 0, 0, 2]' : 0.165657}
{'[1, 6, 0, 4, 6, 0, 2, 23, 27, 0, 0, 0, 2]' : 0.165349}
{'[1, 6, 0, 4, 6, 0, 2, 23, 27, 0, 0, 0, 2]' : 0.1654}
{'[1, 6, 0, 4, 6, 0, 2, 23, 27, 0, 0, 0, 2]' : 0.170696}
{'[1, 6, 0, 4, 6, 0, 2, 23, 27, 0, 0, 0, 2]' : 0.170056}
{'[1, 6, 0, 4, 6, 0, 2, 23, 27, 0, 0, 0, 2]' : 0.167879}
{'[1, 6, 0, 4, 6, 0, 2, 23, 27, 0, 0, 0, 2]' : 0.165162}
{'[1, 6, 0, 4, 6, 0, 2, 23, 27, 0, 0, 0, 2]' : 0.165151}
{'[1, 6, 0, 4, 6, 0, 2, 23, 27, 0, 0, 0, 2]' : 0.165317}
{'[1, 6, 0, 4, 6, 0, 2, 23, 27, 0, 0, 0, 2]' : 0.169812}
{'[1, 6, 0, 4, 6, 0, 2, 23, 27, 0, 0, 0, 2]' : 0.167228}

out:
 ["{'[1, 6, 0, 4, 6, 0, 2, 23, 27, 0, 0, 0, 2]' : 0.171415}", "{'[1, 6, 0, 4, 6, 0, 2, 23, 27, 0, 0, 0, 2]' : 0.171301}", "{'[1, 6, 0, 4, 6, 0, 2, 23, 27, 0, 0, 0, 2]' : 0.17122}", "{'[1, 6, 0, 4, 6, 0, 2, 23, 27, 0, 0, 0, 2]' : 0.171137}", "{'[1, 6, 0, 4, 6, 0, 2, 23, 27, 0, 0, 0, 2]' : 0.172306}", "{'[1, 6, 0, 4, 6, 0, 2, 23, 27, 0, 0, 0, 2]' : 0.175733}", "{'[1, 6, 0, 4, 6, 0, 2, 23, 27, 0, 0, 0, 2]' : 0.175704}", "{'[1, 6, 0, 4, 6, 0, 2, 23, 27, 0, 0, 0, 2]' : 0.174018}", "{'[1, 6, 0, 4, 6, 0, 2, 23, 27, 0, 0, 0, 2]' : 0.171263}", "{'[1, 6, 0, 4, 6, 0, 2, 23, 27, 0, 0, 0, 2]' : 0.171207}", "{'[1, 6, 0, 4, 6, 0, 2, 23, 27, 0, 0, 0, 2]' : 0.173311}", "{'[1, 6, 0, 4, 6, 0, 2, 23, 27, 0, 0, 0, 2]' : 0.17571}", "{'[1, 6, 0, 4, 6, 0, 2, 23, 27, 0, 0, 0, 2]' : 0.175936}", "{'[1, 6, 0, 4, 6, 0, 2, 23, 27, 0, 0, 0, 2]' : 0.172728}", "{'[1, 6, 0, 4, 6, 0, 2, 23, 27, 0, 0, 0, 2]' : 0.171498}", "{'[1, 6, 0, 4, 6, 0, 2, 23, 27, 0, 0, 0, 2]' : 0.171331}", "{'[1, 6, 0, 4, 6, 0, 2, 23, 27, 0, 0, 0, 2]' : 0.16975}", "{'[1, 6, 0, 4, 6, 0, 2, 23, 27, 0, 0, 0, 2]' : 0.165126}", "{'[1, 6, 0, 4, 6, 0, 2, 23, 27, 0, 0, 0, 2]' : 0.165066}", "{'[1, 6, 0, 4, 6, 0, 2, 23, 27, 0, 0, 0, 2]' : 0.165657}", "{'[1, 6, 0, 4, 6, 0, 2, 23, 27, 0, 0, 0, 2]' : 0.165349}", "{'[1, 6, 0, 4, 6, 0, 2, 23, 27, 0, 0, 0, 2]' : 0.1654}", "{'[1, 6, 0, 4, 6, 0, 2, 23, 27, 0, 0, 0, 2]' : 0.170696}", "{'[1, 6, 0, 4, 6, 0, 2, 23, 27, 0, 0, 0, 2]' : 0.170056}", "{'[1, 6, 0, 4, 6, 0, 2, 23, 27, 0, 0, 0, 2]' : 0.167879}", "{'[1, 6, 0, 4, 6, 0, 2, 23, 27, 0, 0, 0, 2]' : 0.165162}", "{'[1, 6, 0, 4, 6, 0, 2, 23, 27, 0, 0, 0, 2]' : 0.165151}", "{'[1, 6, 0, 4, 6, 0, 2, 23, 27, 0, 0, 0, 2]' : 0.165317}", "{'[1, 6, 0, 4, 6, 0, 2, 23, 27, 0, 0, 0, 2]' : 0.169812}", "{'[1, 6, 0, 4, 6, 0, 2, 23, 27, 0, 0, 0, 2]' : 0.167228}"]
returning from 'run': {'[1, 6, 0, 4, 6, 0, 2, 23, 27, 0, 0, 0, 2]': ([0.171415, 0.171301, 0.17122, 0.171137, 0.172306, 0.175733, 0.175704, 0.174018, 0.171263, 0.171207, 0.173311, 0.17571, 0.175936, 0.172728, 0.171498, 0.171331, 0.16975, 0.165126, 0.165066, 0.165657, 0.165349, 0.1654, 0.170696, 0.170056, 0.167879, 0.165162, 0.165151, 0.165317, 0.169812, 0.167228], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[1, 6, 0, 4, 6, 0, 2, 23, 27, 0, 0, 0, 2]': ([0.171415, 0.171301, 0.17122, 0.171137, 0.172306, 0.175733, 0.175704, 0.174018, 0.171263, 0.171207, 0.173311, 0.17571, 0.175936, 0.172728, 0.171498, 0.171331, 0.16975, 0.165126, 0.165066, 0.165657, 0.165349, 0.1654, 0.170696, 0.170056, 0.167879, 0.165162, 0.165151, 0.165317, 0.169812, 0.167228], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Complete design, with measurements:
      T1_I T1_J T1_K T2_I T2_J T2_K U1_I U_I U_J U_K RT_I RT_J RT_K cost_mean
110      6    6    0    5    0    4    0  25   0  29    0    0    2 0.1668349
1394     0    0    0    2    2    2   25   0   0  18    0    0    0 0.3601611
1521     0    3    4    6    6    0    1  28   0  28    2    0    0 0.2087198
2076     6    1    6    5    1    0   13  27   3   0    2    0    0 0.2294882
2399     6    4    0    0    6    6    3   6  29   0    1    0    1 0.1155107
11234    2    5    6    0    0    6   29  29   1   0    0    1    1 0.1721192
14403    3    0    6    0    6    0   28   0  24  26    0    0    2 0.1937532
22864    1    6    6    6    4    5    0   0  29   9    0    0    0 0.1952855
23657    4    0    3    6    2    1   29  29  29   0    0    2    0 0.2375175
24178    0    1    0    6    0    1   29   0   2  28    2    0    0 0.2447485
24924    4    6    6    6    6    0   28   2   1   0    0    2    0 0.1271319
27196    0    0    0    1    4    6    2   0   7   0    0    2    0 0.1862860
29437    4    4    4    4    5    6   29   0  27  29    1    1    0 0.1151577
31098    6    0    6    5    5    4    4   1   0  26    0    2    0 0.1351693
33335    6    6    2    0    5    0   28  25   0  10    0    0    0 0.1614990
33869    4    6    5    0    0    0    9   0  24  29    0    2    0 0.1776419
34506    0    3    3    1    6    3    0  29   0  29    0    0    1 0.1822501
35174    1    6    0    4    6    0    2  23  27   0    0    0    2 0.1701156

Heteroscedasticity Test p-value: 0.000566454333329
Power Transform Step:
Heteroscedasticity Test p-value: 0.351758851798
Regression Step:            Df Sum Sq Mean Sq F value  Pr(>F)   
T1_I         1  4.806   4.806  57.102 0.00164 **
T1_J         1  2.251   2.251  26.744 0.00665 **
T1_K         1  0.023   0.023   0.277 0.62653   
T2_I         1  0.122   0.122   1.455 0.29418   
T2_J         1  3.893   3.893  46.250 0.00244 **
T2_K         1  2.905   2.905  34.509 0.00419 **
U1_I         1  0.237   0.237   2.811 0.16895   
U_I          1  0.351   0.351   4.175 0.11053   
U_J          1  0.038   0.038   0.450 0.53903   
U_K          1  0.075   0.075   0.889 0.39913   
RT_I         1  0.216   0.216   2.569 0.18424   
RT_J         1  1.464   1.464  17.394 0.01402 * 
RT_K         1  0.782   0.782   9.293 0.03809 * 
Residuals    4  0.337   0.084                   
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Predicting Best
Generating valid search space of size 36000 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Tested coordinates: 110000
Tested coordinates: 120000
Tested coordinates: 130000
Tested coordinates: 140000
Tested coordinates: 150000
Tested coordinates: 160000
Tested coordinates: 170000
Tested coordinates: 180000
Tested coordinates: 190000
Tested coordinates: 200000
Tested coordinates: 210000
Tested coordinates: 220000
Tested coordinates: 230000
Tested coordinates: 240000
Tested coordinates: 250000
Tested coordinates: 260000
Tested coordinates: 270000
Tested coordinates: 280000
Tested coordinates: 290000
Valid coordinates: 7200
Tested coordinates: 300000
Tested coordinates: 310000
Tested coordinates: 320000
Tested coordinates: 330000
Tested coordinates: 340000
Tested coordinates: 350000
Tested coordinates: 360000
Tested coordinates: 370000
Tested coordinates: 380000
Tested coordinates: 390000
Tested coordinates: 400000
Tested coordinates: 410000
Tested coordinates: 420000
Tested coordinates: 430000
Tested coordinates: 440000
Tested coordinates: 450000
Tested coordinates: 460000
Tested coordinates: 470000
Tested coordinates: 480000
Tested coordinates: 490000
Tested coordinates: 500000
Tested coordinates: 510000
Tested coordinates: 520000
Tested coordinates: 530000
Tested coordinates: 540000
Tested coordinates: 550000
Tested coordinates: 560000
Tested coordinates: 570000
Tested coordinates: 580000
Tested coordinates: 590000
Valid coordinates: 14400
Tested coordinates: 600000
Tested coordinates: 610000
Tested coordinates: 620000
Tested coordinates: 630000
Tested coordinates: 640000
Tested coordinates: 650000
Tested coordinates: 660000
Tested coordinates: 670000
Tested coordinates: 680000
Tested coordinates: 690000
Tested coordinates: 700000
Tested coordinates: 710000
Tested coordinates: 720000
Tested coordinates: 730000
Tested coordinates: 740000
Tested coordinates: 750000
Tested coordinates: 760000
Tested coordinates: 770000
Tested coordinates: 780000
Tested coordinates: 790000
Tested coordinates: 800000
Tested coordinates: 810000
Tested coordinates: 820000
Tested coordinates: 830000
Tested coordinates: 840000
Tested coordinates: 850000
Tested coordinates: 860000
Tested coordinates: 870000
Tested coordinates: 880000
Tested coordinates: 890000
Valid coordinates: 21600
Tested coordinates: 900000
Tested coordinates: 910000
Tested coordinates: 920000
Tested coordinates: 930000
Tested coordinates: 940000
Tested coordinates: 950000
Tested coordinates: 960000
Tested coordinates: 970000
Tested coordinates: 980000
Tested coordinates: 990000
Tested coordinates: 1000000
Tested coordinates: 1010000
Tested coordinates: 1020000
Tested coordinates: 1030000
Tested coordinates: 1040000
Tested coordinates: 1050000
Tested coordinates: 1060000
Tested coordinates: 1070000
Tested coordinates: 1080000
Tested coordinates: 1090000
Tested coordinates: 1100000
Tested coordinates: 1110000
Tested coordinates: 1120000
Tested coordinates: 1130000
Tested coordinates: 1140000
Tested coordinates: 1150000
Tested coordinates: 1160000
Tested coordinates: 1170000
Tested coordinates: 1180000
Tested coordinates: 1190000
Valid coordinates: 28800
Tested coordinates: 1200000
Tested coordinates: 1210000
Tested coordinates: 1220000
Tested coordinates: 1230000
Tested coordinates: 1240000
Tested coordinates: 1250000
Tested coordinates: 1260000
Tested coordinates: 1270000
Tested coordinates: 1280000
Tested coordinates: 1290000
Tested coordinates: 1300000
Tested coordinates: 1310000
Tested coordinates: 1320000
Tested coordinates: 1330000
Tested coordinates: 1340000
Tested coordinates: 1350000
Tested coordinates: 1360000
Tested coordinates: 1370000
Tested coordinates: 1380000
Tested coordinates: 1390000
Tested coordinates: 1400000
Tested coordinates: 1410000
Tested coordinates: 1420000
Tested coordinates: 1430000
Tested coordinates: 1440000
Tested coordinates: 1450000
Tested coordinates: 1460000
Tested coordinates: 1470000
Tested coordinates: 1480000
Tested coordinates: 1490000
Valid coordinates: 36000
Valid/Tested configurations: 36000/1494169
Generated Search Space:
NULL
Getting Best from Design
Response: ['cost_mean']
Design Names:  [1] "T1_I"      "T1_J"      "T1_K"      "T2_I"      "T2_J"      "T2_K"     
 [7] "U1_I"      "U_I"       "U_J"       "U_K"       "RT_I"      "RT_J"     
[13] "RT_K"      "cost_mean"

Design Response:       cost_mean
110   0.1668349
1394  0.3601611
1521  0.2087198
2076  0.2294882
2399  0.1155107
11234 0.1721192
14403 0.1937532
22864 0.1952855
23657 0.2375175
24178 0.2447485
24924 0.1271319
27196 0.1862860
29437 0.1151577
31098 0.1351693
33335 0.1614990
33869 0.1776419
34506 0.1822501
35174 0.1701156

Current Design Names: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Getting fixed variables
Variables within threshold: ['T1_I', 'T2_J', 'T2_K', 'T1_J']
Fixed Variables: {}
Unique Variables: ['T1_I', 'T2_J', 'T2_K', 'T1_J']
Pruning Model
Variables within threshold: ['T1_I', 'T2_J', 'T2_K', 'T1_J']
Best Predicted:       T1_I T1_J T1_K T2_I T2_J T2_K U1_I U_I U_J U_K RT_I RT_J RT_K
22387    6    6    1    5    6    6   24   0   3  13    2    0    0

Best From Design: [4, 4, 4, 4, 5, 6, 29, 0, 27, 29, 1, 1, 0]
Pruned Factors: ['T1_K', 'T2_I', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Pruned Inverse Factors: []
Pruned Interactions: []
Fixed Factors: {'T2_K': 6, 'T2_J': 6, 'T1_I': 6, 'T1_J': 6}
Length of requested configs: 1
Result was on Database, Returning Now
Starting Point (-O3):
0.16059526666666663
Predicted Best Point:
[6, 6, 1, 5, 6, 6, 24, 0, 3, 13, 2, 0, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	6
        Additions: 		4327
        Multiplications: 	1320
        Divisions: 		0
        Logical: 		0
        Reads: 			6814
        Writes: 		732
        Comparisons:		22
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest19.exe __orio_perftest19.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest19.exe  
Program Test Output: 
{'[6, 6, 1, 5, 6, 6, 24, 0, 3, 13, 2, 0, 0]' : 0.290136}
{'[6, 6, 1, 5, 6, 6, 24, 0, 3, 13, 2, 0, 0]' : 0.268165}
{'[6, 6, 1, 5, 6, 6, 24, 0, 3, 13, 2, 0, 0]' : 0.250998}
{'[6, 6, 1, 5, 6, 6, 24, 0, 3, 13, 2, 0, 0]' : 0.250113}
{'[6, 6, 1, 5, 6, 6, 24, 0, 3, 13, 2, 0, 0]' : 0.252425}
{'[6, 6, 1, 5, 6, 6, 24, 0, 3, 13, 2, 0, 0]' : 0.251659}
{'[6, 6, 1, 5, 6, 6, 24, 0, 3, 13, 2, 0, 0]' : 0.255243}
{'[6, 6, 1, 5, 6, 6, 24, 0, 3, 13, 2, 0, 0]' : 0.252625}
{'[6, 6, 1, 5, 6, 6, 24, 0, 3, 13, 2, 0, 0]' : 0.253954}
{'[6, 6, 1, 5, 6, 6, 24, 0, 3, 13, 2, 0, 0]' : 0.251858}
{'[6, 6, 1, 5, 6, 6, 24, 0, 3, 13, 2, 0, 0]' : 0.253984}
{'[6, 6, 1, 5, 6, 6, 24, 0, 3, 13, 2, 0, 0]' : 0.251761}
{'[6, 6, 1, 5, 6, 6, 24, 0, 3, 13, 2, 0, 0]' : 0.252713}
{'[6, 6, 1, 5, 6, 6, 24, 0, 3, 13, 2, 0, 0]' : 0.252828}
{'[6, 6, 1, 5, 6, 6, 24, 0, 3, 13, 2, 0, 0]' : 0.252667}
{'[6, 6, 1, 5, 6, 6, 24, 0, 3, 13, 2, 0, 0]' : 0.251902}
{'[6, 6, 1, 5, 6, 6, 24, 0, 3, 13, 2, 0, 0]' : 0.256762}
{'[6, 6, 1, 5, 6, 6, 24, 0, 3, 13, 2, 0, 0]' : 0.258875}
{'[6, 6, 1, 5, 6, 6, 24, 0, 3, 13, 2, 0, 0]' : 0.258149}
{'[6, 6, 1, 5, 6, 6, 24, 0, 3, 13, 2, 0, 0]' : 0.25633}
{'[6, 6, 1, 5, 6, 6, 24, 0, 3, 13, 2, 0, 0]' : 0.252373}
{'[6, 6, 1, 5, 6, 6, 24, 0, 3, 13, 2, 0, 0]' : 0.250982}
{'[6, 6, 1, 5, 6, 6, 24, 0, 3, 13, 2, 0, 0]' : 0.256327}
{'[6, 6, 1, 5, 6, 6, 24, 0, 3, 13, 2, 0, 0]' : 0.250686}
{'[6, 6, 1, 5, 6, 6, 24, 0, 3, 13, 2, 0, 0]' : 0.25382}
{'[6, 6, 1, 5, 6, 6, 24, 0, 3, 13, 2, 0, 0]' : 0.250737}
{'[6, 6, 1, 5, 6, 6, 24, 0, 3, 13, 2, 0, 0]' : 0.253237}
{'[6, 6, 1, 5, 6, 6, 24, 0, 3, 13, 2, 0, 0]' : 0.248246}
{'[6, 6, 1, 5, 6, 6, 24, 0, 3, 13, 2, 0, 0]' : 0.255215}
{'[6, 6, 1, 5, 6, 6, 24, 0, 3, 13, 2, 0, 0]' : 0.255186}

out:
 ["{'[6, 6, 1, 5, 6, 6, 24, 0, 3, 13, 2, 0, 0]' : 0.290136}", "{'[6, 6, 1, 5, 6, 6, 24, 0, 3, 13, 2, 0, 0]' : 0.268165}", "{'[6, 6, 1, 5, 6, 6, 24, 0, 3, 13, 2, 0, 0]' : 0.250998}", "{'[6, 6, 1, 5, 6, 6, 24, 0, 3, 13, 2, 0, 0]' : 0.250113}", "{'[6, 6, 1, 5, 6, 6, 24, 0, 3, 13, 2, 0, 0]' : 0.252425}", "{'[6, 6, 1, 5, 6, 6, 24, 0, 3, 13, 2, 0, 0]' : 0.251659}", "{'[6, 6, 1, 5, 6, 6, 24, 0, 3, 13, 2, 0, 0]' : 0.255243}", "{'[6, 6, 1, 5, 6, 6, 24, 0, 3, 13, 2, 0, 0]' : 0.252625}", "{'[6, 6, 1, 5, 6, 6, 24, 0, 3, 13, 2, 0, 0]' : 0.253954}", "{'[6, 6, 1, 5, 6, 6, 24, 0, 3, 13, 2, 0, 0]' : 0.251858}", "{'[6, 6, 1, 5, 6, 6, 24, 0, 3, 13, 2, 0, 0]' : 0.253984}", "{'[6, 6, 1, 5, 6, 6, 24, 0, 3, 13, 2, 0, 0]' : 0.251761}", "{'[6, 6, 1, 5, 6, 6, 24, 0, 3, 13, 2, 0, 0]' : 0.252713}", "{'[6, 6, 1, 5, 6, 6, 24, 0, 3, 13, 2, 0, 0]' : 0.252828}", "{'[6, 6, 1, 5, 6, 6, 24, 0, 3, 13, 2, 0, 0]' : 0.252667}", "{'[6, 6, 1, 5, 6, 6, 24, 0, 3, 13, 2, 0, 0]' : 0.251902}", "{'[6, 6, 1, 5, 6, 6, 24, 0, 3, 13, 2, 0, 0]' : 0.256762}", "{'[6, 6, 1, 5, 6, 6, 24, 0, 3, 13, 2, 0, 0]' : 0.258875}", "{'[6, 6, 1, 5, 6, 6, 24, 0, 3, 13, 2, 0, 0]' : 0.258149}", "{'[6, 6, 1, 5, 6, 6, 24, 0, 3, 13, 2, 0, 0]' : 0.25633}", "{'[6, 6, 1, 5, 6, 6, 24, 0, 3, 13, 2, 0, 0]' : 0.252373}", "{'[6, 6, 1, 5, 6, 6, 24, 0, 3, 13, 2, 0, 0]' : 0.250982}", "{'[6, 6, 1, 5, 6, 6, 24, 0, 3, 13, 2, 0, 0]' : 0.256327}", "{'[6, 6, 1, 5, 6, 6, 24, 0, 3, 13, 2, 0, 0]' : 0.250686}", "{'[6, 6, 1, 5, 6, 6, 24, 0, 3, 13, 2, 0, 0]' : 0.25382}", "{'[6, 6, 1, 5, 6, 6, 24, 0, 3, 13, 2, 0, 0]' : 0.250737}", "{'[6, 6, 1, 5, 6, 6, 24, 0, 3, 13, 2, 0, 0]' : 0.253237}", "{'[6, 6, 1, 5, 6, 6, 24, 0, 3, 13, 2, 0, 0]' : 0.248246}", "{'[6, 6, 1, 5, 6, 6, 24, 0, 3, 13, 2, 0, 0]' : 0.255215}", "{'[6, 6, 1, 5, 6, 6, 24, 0, 3, 13, 2, 0, 0]' : 0.255186}"]
returning from 'run': {'[6, 6, 1, 5, 6, 6, 24, 0, 3, 13, 2, 0, 0]': ([0.290136, 0.268165, 0.250998, 0.250113, 0.252425, 0.251659, 0.255243, 0.252625, 0.253954, 0.251858, 0.253984, 0.251761, 0.252713, 0.252828, 0.252667, 0.251902, 0.256762, 0.258875, 0.258149, 0.25633, 0.252373, 0.250982, 0.256327, 0.250686, 0.25382, 0.250737, 0.253237, 0.248246, 0.255215, 0.255186], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 1, 5, 6, 6, 24, 0, 3, 13, 2, 0, 0]': ([0.290136, 0.268165, 0.250998, 0.250113, 0.252425, 0.251659, 0.255243, 0.252625, 0.253954, 0.251858, 0.253984, 0.251761, 0.252713, 0.252828, 0.252667, 0.251902, 0.256762, 0.258875, 0.258149, 0.25633, 0.252373, 0.250982, 0.256327, 0.250686, 0.25382, 0.250737, 0.253237, 0.248246, 0.255215, 0.255186], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Design Best Point:
[4, 4, 4, 4, 5, 6, 29, 0, 27, 29, 1, 1, 0]
Length of requested configs: 1
Result was on Database, Returning Now
Fixed Factors: {'T2_K': 6, 'T2_J': 6, 'T1_I': 6, 'T1_J': 6}
Slowdown (Design Best): 0.7170676263185842
Slowdown (Predicted Best): 1.5878334313713691
Budget: 18/180
Updating Global Best: 0.11515766666666669
Current Best Point: 
[4, 4, 4, 4, 5, 6, 29, 0, 27, 29, 1, 1, 0]
Step 1
Full Model:  ~ T1_K + T2_I + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K
Generating valid search space of size 28000 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Tested coordinates: 110000
Tested coordinates: 120000
Tested coordinates: 130000
Tested coordinates: 140000
Tested coordinates: 150000
Tested coordinates: 160000
Tested coordinates: 170000
Tested coordinates: 180000
Tested coordinates: 190000
Tested coordinates: 200000
Tested coordinates: 210000
Tested coordinates: 220000
Tested coordinates: 230000
Tested coordinates: 240000
Tested coordinates: 250000
Tested coordinates: 260000
Tested coordinates: 270000
Valid coordinates: 5600
Tested coordinates: 280000
Tested coordinates: 290000
Tested coordinates: 300000
Tested coordinates: 310000
Tested coordinates: 320000
Tested coordinates: 330000
Tested coordinates: 340000
Tested coordinates: 350000
Tested coordinates: 360000
Tested coordinates: 370000
Tested coordinates: 380000
Tested coordinates: 390000
Tested coordinates: 400000
Tested coordinates: 410000
Tested coordinates: 420000
Tested coordinates: 430000
Tested coordinates: 440000
Tested coordinates: 450000
Tested coordinates: 460000
Tested coordinates: 470000
Tested coordinates: 480000
Tested coordinates: 490000
Tested coordinates: 500000
Tested coordinates: 510000
Tested coordinates: 520000
Tested coordinates: 530000
Tested coordinates: 540000
Valid coordinates: 11200
Tested coordinates: 550000
Tested coordinates: 560000
Tested coordinates: 570000
Tested coordinates: 580000
Tested coordinates: 590000
Tested coordinates: 600000
Tested coordinates: 610000
Tested coordinates: 620000
Tested coordinates: 630000
Tested coordinates: 640000
Tested coordinates: 650000
Tested coordinates: 660000
Tested coordinates: 670000
Tested coordinates: 680000
Tested coordinates: 690000
Tested coordinates: 700000
Tested coordinates: 710000
Tested coordinates: 720000
Tested coordinates: 730000
Tested coordinates: 740000
Tested coordinates: 750000
Tested coordinates: 760000
Tested coordinates: 770000
Tested coordinates: 780000
Tested coordinates: 790000
Tested coordinates: 800000
Tested coordinates: 810000
Tested coordinates: 820000
Valid coordinates: 16800
Tested coordinates: 830000
Tested coordinates: 840000
Tested coordinates: 850000
Tested coordinates: 860000
Tested coordinates: 870000
Tested coordinates: 880000
Tested coordinates: 890000
Tested coordinates: 900000
Tested coordinates: 910000
Tested coordinates: 920000
Tested coordinates: 930000
Tested coordinates: 940000
Tested coordinates: 950000
Tested coordinates: 960000
Tested coordinates: 970000
Tested coordinates: 980000
Tested coordinates: 990000
Tested coordinates: 1000000
Tested coordinates: 1010000
Tested coordinates: 1020000
Tested coordinates: 1030000
Tested coordinates: 1040000
Tested coordinates: 1050000
Tested coordinates: 1060000
Tested coordinates: 1070000
Tested coordinates: 1080000
Tested coordinates: 1090000
Valid coordinates: 22400
Tested coordinates: 1100000
Tested coordinates: 1110000
Tested coordinates: 1120000
Tested coordinates: 1130000
Tested coordinates: 1140000
Tested coordinates: 1150000
Tested coordinates: 1160000
Tested coordinates: 1170000
Tested coordinates: 1180000
Tested coordinates: 1190000
Tested coordinates: 1200000
Tested coordinates: 1210000
Tested coordinates: 1220000
Tested coordinates: 1230000
Tested coordinates: 1240000
Tested coordinates: 1250000
Tested coordinates: 1260000
Tested coordinates: 1270000
Tested coordinates: 1280000
Tested coordinates: 1290000
Tested coordinates: 1300000
Tested coordinates: 1310000
Tested coordinates: 1320000
Tested coordinates: 1330000
Tested coordinates: 1340000
Tested coordinates: 1350000
Tested coordinates: 1360000
Tested coordinates: 1370000
Valid coordinates: 28000
Valid/Tested configurations: 28000/1370714
Generated Search Space:
NULL
Clean Info:
Removed Factors: character(0)

Removed Inverse Factors: character(0)

New Factors: ['T1_K', 'T2_I', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
New Inverse Factors: []
New Fixed Factors: {'T2_K': 6, 'T2_J': 6, 'T1_I': 6, 'T1_J': 6}
Fixed Factors: {'T2_K': 6, 'T2_J': 6, 'T1_I': 6, 'T1_J': 6}
Computing D-Optimal Design
Computing D-Optimal Design with 14 experiments
Design Formula:  ~ T1_K + T2_I + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K
Starting "optFederov" run
Using Search Space:
NULL
Data Dimensions: [1] 28000     9

      T1_K T2_I U1_I U_I U_J U_K RT_I RT_J RT_K
4481     6    6    1   0  29  20    0    0    0
5726     6    0    1   3  21   0    0    0    2
9267     3    0   29   0  26  28    2    0    0
9794     0    0    2   2   0   1    0    0    0
13031    6    5   27  29  29   0    0    0    0
15397    4    5    2  29   0  29    0    1    1
16033    0    0   28  29   9   0    0    2    0
16359    6    0    2   0  28   0    0    2    0
17083    1    0   29   0  29  29    0    0    1
19509    6    0   29  28   0   0    0    0    2
21509    0    5    0  26  29   0    2    0    0
25599    6    6   25   0   3  27    0    2    0
26009    2    6   29   4   0   0    2    0    0
26075    6    0    6  29   0  29    2    0    0

D-Efficiency Approximation: [1] 0.629

Measuring design of size 14
Current Design Names: ['T1_K', 'T2_I', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	6
        Additions: 		282
        Multiplications: 	106
        Divisions: 		0
        Logical: 		0
        Reads: 			629
        Writes: 		83
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest20.exe __orio_perftest20.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest20.exe  
Program Test Output: 
{'[6, 6, 6, 6, 6, 6, 1, 0, 29, 20, 0, 0, 0]' : 0.208662}
{'[6, 6, 6, 6, 6, 6, 1, 0, 29, 20, 0, 0, 0]' : 0.205457}
{'[6, 6, 6, 6, 6, 6, 1, 0, 29, 20, 0, 0, 0]' : 0.180931}
{'[6, 6, 6, 6, 6, 6, 1, 0, 29, 20, 0, 0, 0]' : 0.182624}
{'[6, 6, 6, 6, 6, 6, 1, 0, 29, 20, 0, 0, 0]' : 0.185727}
{'[6, 6, 6, 6, 6, 6, 1, 0, 29, 20, 0, 0, 0]' : 0.18573}
{'[6, 6, 6, 6, 6, 6, 1, 0, 29, 20, 0, 0, 0]' : 0.182704}
{'[6, 6, 6, 6, 6, 6, 1, 0, 29, 20, 0, 0, 0]' : 0.183033}
{'[6, 6, 6, 6, 6, 6, 1, 0, 29, 20, 0, 0, 0]' : 0.180788}
{'[6, 6, 6, 6, 6, 6, 1, 0, 29, 20, 0, 0, 0]' : 0.18514}
{'[6, 6, 6, 6, 6, 6, 1, 0, 29, 20, 0, 0, 0]' : 0.183974}
{'[6, 6, 6, 6, 6, 6, 1, 0, 29, 20, 0, 0, 0]' : 0.181487}
{'[6, 6, 6, 6, 6, 6, 1, 0, 29, 20, 0, 0, 0]' : 0.184885}
{'[6, 6, 6, 6, 6, 6, 1, 0, 29, 20, 0, 0, 0]' : 0.181228}
{'[6, 6, 6, 6, 6, 6, 1, 0, 29, 20, 0, 0, 0]' : 0.183057}
{'[6, 6, 6, 6, 6, 6, 1, 0, 29, 20, 0, 0, 0]' : 0.185738}
{'[6, 6, 6, 6, 6, 6, 1, 0, 29, 20, 0, 0, 0]' : 0.181553}
{'[6, 6, 6, 6, 6, 6, 1, 0, 29, 20, 0, 0, 0]' : 0.18428}
{'[6, 6, 6, 6, 6, 6, 1, 0, 29, 20, 0, 0, 0]' : 0.182373}
{'[6, 6, 6, 6, 6, 6, 1, 0, 29, 20, 0, 0, 0]' : 0.178344}
{'[6, 6, 6, 6, 6, 6, 1, 0, 29, 20, 0, 0, 0]' : 0.180621}
{'[6, 6, 6, 6, 6, 6, 1, 0, 29, 20, 0, 0, 0]' : 0.178793}
{'[6, 6, 6, 6, 6, 6, 1, 0, 29, 20, 0, 0, 0]' : 0.176233}
{'[6, 6, 6, 6, 6, 6, 1, 0, 29, 20, 0, 0, 0]' : 0.180303}
{'[6, 6, 6, 6, 6, 6, 1, 0, 29, 20, 0, 0, 0]' : 0.175328}
{'[6, 6, 6, 6, 6, 6, 1, 0, 29, 20, 0, 0, 0]' : 0.17713}
{'[6, 6, 6, 6, 6, 6, 1, 0, 29, 20, 0, 0, 0]' : 0.179225}
{'[6, 6, 6, 6, 6, 6, 1, 0, 29, 20, 0, 0, 0]' : 0.175011}
{'[6, 6, 6, 6, 6, 6, 1, 0, 29, 20, 0, 0, 0]' : 0.180535}
{'[6, 6, 6, 6, 6, 6, 1, 0, 29, 20, 0, 0, 0]' : 0.183416}

out:
 ["{'[6, 6, 6, 6, 6, 6, 1, 0, 29, 20, 0, 0, 0]' : 0.208662}", "{'[6, 6, 6, 6, 6, 6, 1, 0, 29, 20, 0, 0, 0]' : 0.205457}", "{'[6, 6, 6, 6, 6, 6, 1, 0, 29, 20, 0, 0, 0]' : 0.180931}", "{'[6, 6, 6, 6, 6, 6, 1, 0, 29, 20, 0, 0, 0]' : 0.182624}", "{'[6, 6, 6, 6, 6, 6, 1, 0, 29, 20, 0, 0, 0]' : 0.185727}", "{'[6, 6, 6, 6, 6, 6, 1, 0, 29, 20, 0, 0, 0]' : 0.18573}", "{'[6, 6, 6, 6, 6, 6, 1, 0, 29, 20, 0, 0, 0]' : 0.182704}", "{'[6, 6, 6, 6, 6, 6, 1, 0, 29, 20, 0, 0, 0]' : 0.183033}", "{'[6, 6, 6, 6, 6, 6, 1, 0, 29, 20, 0, 0, 0]' : 0.180788}", "{'[6, 6, 6, 6, 6, 6, 1, 0, 29, 20, 0, 0, 0]' : 0.18514}", "{'[6, 6, 6, 6, 6, 6, 1, 0, 29, 20, 0, 0, 0]' : 0.183974}", "{'[6, 6, 6, 6, 6, 6, 1, 0, 29, 20, 0, 0, 0]' : 0.181487}", "{'[6, 6, 6, 6, 6, 6, 1, 0, 29, 20, 0, 0, 0]' : 0.184885}", "{'[6, 6, 6, 6, 6, 6, 1, 0, 29, 20, 0, 0, 0]' : 0.181228}", "{'[6, 6, 6, 6, 6, 6, 1, 0, 29, 20, 0, 0, 0]' : 0.183057}", "{'[6, 6, 6, 6, 6, 6, 1, 0, 29, 20, 0, 0, 0]' : 0.185738}", "{'[6, 6, 6, 6, 6, 6, 1, 0, 29, 20, 0, 0, 0]' : 0.181553}", "{'[6, 6, 6, 6, 6, 6, 1, 0, 29, 20, 0, 0, 0]' : 0.18428}", "{'[6, 6, 6, 6, 6, 6, 1, 0, 29, 20, 0, 0, 0]' : 0.182373}", "{'[6, 6, 6, 6, 6, 6, 1, 0, 29, 20, 0, 0, 0]' : 0.178344}", "{'[6, 6, 6, 6, 6, 6, 1, 0, 29, 20, 0, 0, 0]' : 0.180621}", "{'[6, 6, 6, 6, 6, 6, 1, 0, 29, 20, 0, 0, 0]' : 0.178793}", "{'[6, 6, 6, 6, 6, 6, 1, 0, 29, 20, 0, 0, 0]' : 0.176233}", "{'[6, 6, 6, 6, 6, 6, 1, 0, 29, 20, 0, 0, 0]' : 0.180303}", "{'[6, 6, 6, 6, 6, 6, 1, 0, 29, 20, 0, 0, 0]' : 0.175328}", "{'[6, 6, 6, 6, 6, 6, 1, 0, 29, 20, 0, 0, 0]' : 0.17713}", "{'[6, 6, 6, 6, 6, 6, 1, 0, 29, 20, 0, 0, 0]' : 0.179225}", "{'[6, 6, 6, 6, 6, 6, 1, 0, 29, 20, 0, 0, 0]' : 0.175011}", "{'[6, 6, 6, 6, 6, 6, 1, 0, 29, 20, 0, 0, 0]' : 0.180535}", "{'[6, 6, 6, 6, 6, 6, 1, 0, 29, 20, 0, 0, 0]' : 0.183416}"]
returning from 'run': {'[6, 6, 6, 6, 6, 6, 1, 0, 29, 20, 0, 0, 0]': ([0.208662, 0.205457, 0.180931, 0.182624, 0.185727, 0.18573, 0.182704, 0.183033, 0.180788, 0.18514, 0.183974, 0.181487, 0.184885, 0.181228, 0.183057, 0.185738, 0.181553, 0.18428, 0.182373, 0.178344, 0.180621, 0.178793, 0.176233, 0.180303, 0.175328, 0.17713, 0.179225, 0.175011, 0.180535, 0.183416], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 6, 6, 6, 6, 1, 0, 29, 20, 0, 0, 0]': ([0.208662, 0.205457, 0.180931, 0.182624, 0.185727, 0.18573, 0.182704, 0.183033, 0.180788, 0.18514, 0.183974, 0.181487, 0.184885, 0.181228, 0.183057, 0.185738, 0.181553, 0.18428, 0.182373, 0.178344, 0.180621, 0.178793, 0.176233, 0.180303, 0.175328, 0.17713, 0.179225, 0.175011, 0.180535, 0.183416], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	5
        Additions: 		1735
        Multiplications: 	560
        Divisions: 		0
        Logical: 		0
        Reads: 			2963
        Writes: 		330
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest21.exe __orio_perftest21.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest21.exe  
Program Test Output: 
{'[6, 6, 6, 0, 6, 6, 1, 3, 21, 0, 0, 0, 2]' : 0.125573}
{'[6, 6, 6, 0, 6, 6, 1, 3, 21, 0, 0, 0, 2]' : 0.12674}
{'[6, 6, 6, 0, 6, 6, 1, 3, 21, 0, 0, 0, 2]' : 0.128422}
{'[6, 6, 6, 0, 6, 6, 1, 3, 21, 0, 0, 0, 2]' : 0.12571}
{'[6, 6, 6, 0, 6, 6, 1, 3, 21, 0, 0, 0, 2]' : 0.124163}
{'[6, 6, 6, 0, 6, 6, 1, 3, 21, 0, 0, 0, 2]' : 0.124889}
{'[6, 6, 6, 0, 6, 6, 1, 3, 21, 0, 0, 0, 2]' : 0.128481}
{'[6, 6, 6, 0, 6, 6, 1, 3, 21, 0, 0, 0, 2]' : 0.125322}
{'[6, 6, 6, 0, 6, 6, 1, 3, 21, 0, 0, 0, 2]' : 0.125197}
{'[6, 6, 6, 0, 6, 6, 1, 3, 21, 0, 0, 0, 2]' : 0.127}
{'[6, 6, 6, 0, 6, 6, 1, 3, 21, 0, 0, 0, 2]' : 0.128402}
{'[6, 6, 6, 0, 6, 6, 1, 3, 21, 0, 0, 0, 2]' : 0.128442}
{'[6, 6, 6, 0, 6, 6, 1, 3, 21, 0, 0, 0, 2]' : 0.12843}
{'[6, 6, 6, 0, 6, 6, 1, 3, 21, 0, 0, 0, 2]' : 0.128579}
{'[6, 6, 6, 0, 6, 6, 1, 3, 21, 0, 0, 0, 2]' : 0.128501}
{'[6, 6, 6, 0, 6, 6, 1, 3, 21, 0, 0, 0, 2]' : 0.128559}
{'[6, 6, 6, 0, 6, 6, 1, 3, 21, 0, 0, 0, 2]' : 0.128559}
{'[6, 6, 6, 0, 6, 6, 1, 3, 21, 0, 0, 0, 2]' : 0.128641}
{'[6, 6, 6, 0, 6, 6, 1, 3, 21, 0, 0, 0, 2]' : 0.128413}
{'[6, 6, 6, 0, 6, 6, 1, 3, 21, 0, 0, 0, 2]' : 0.128683}
{'[6, 6, 6, 0, 6, 6, 1, 3, 21, 0, 0, 0, 2]' : 0.12586}
{'[6, 6, 6, 0, 6, 6, 1, 3, 21, 0, 0, 0, 2]' : 0.128081}
{'[6, 6, 6, 0, 6, 6, 1, 3, 21, 0, 0, 0, 2]' : 0.128568}
{'[6, 6, 6, 0, 6, 6, 1, 3, 21, 0, 0, 0, 2]' : 0.127897}
{'[6, 6, 6, 0, 6, 6, 1, 3, 21, 0, 0, 0, 2]' : 0.125181}
{'[6, 6, 6, 0, 6, 6, 1, 3, 21, 0, 0, 0, 2]' : 0.125427}
{'[6, 6, 6, 0, 6, 6, 1, 3, 21, 0, 0, 0, 2]' : 0.125299}
{'[6, 6, 6, 0, 6, 6, 1, 3, 21, 0, 0, 0, 2]' : 0.122767}
{'[6, 6, 6, 0, 6, 6, 1, 3, 21, 0, 0, 0, 2]' : 0.121523}
{'[6, 6, 6, 0, 6, 6, 1, 3, 21, 0, 0, 0, 2]' : 0.126419}

out:
 ["{'[6, 6, 6, 0, 6, 6, 1, 3, 21, 0, 0, 0, 2]' : 0.125573}", "{'[6, 6, 6, 0, 6, 6, 1, 3, 21, 0, 0, 0, 2]' : 0.12674}", "{'[6, 6, 6, 0, 6, 6, 1, 3, 21, 0, 0, 0, 2]' : 0.128422}", "{'[6, 6, 6, 0, 6, 6, 1, 3, 21, 0, 0, 0, 2]' : 0.12571}", "{'[6, 6, 6, 0, 6, 6, 1, 3, 21, 0, 0, 0, 2]' : 0.124163}", "{'[6, 6, 6, 0, 6, 6, 1, 3, 21, 0, 0, 0, 2]' : 0.124889}", "{'[6, 6, 6, 0, 6, 6, 1, 3, 21, 0, 0, 0, 2]' : 0.128481}", "{'[6, 6, 6, 0, 6, 6, 1, 3, 21, 0, 0, 0, 2]' : 0.125322}", "{'[6, 6, 6, 0, 6, 6, 1, 3, 21, 0, 0, 0, 2]' : 0.125197}", "{'[6, 6, 6, 0, 6, 6, 1, 3, 21, 0, 0, 0, 2]' : 0.127}", "{'[6, 6, 6, 0, 6, 6, 1, 3, 21, 0, 0, 0, 2]' : 0.128402}", "{'[6, 6, 6, 0, 6, 6, 1, 3, 21, 0, 0, 0, 2]' : 0.128442}", "{'[6, 6, 6, 0, 6, 6, 1, 3, 21, 0, 0, 0, 2]' : 0.12843}", "{'[6, 6, 6, 0, 6, 6, 1, 3, 21, 0, 0, 0, 2]' : 0.128579}", "{'[6, 6, 6, 0, 6, 6, 1, 3, 21, 0, 0, 0, 2]' : 0.128501}", "{'[6, 6, 6, 0, 6, 6, 1, 3, 21, 0, 0, 0, 2]' : 0.128559}", "{'[6, 6, 6, 0, 6, 6, 1, 3, 21, 0, 0, 0, 2]' : 0.128559}", "{'[6, 6, 6, 0, 6, 6, 1, 3, 21, 0, 0, 0, 2]' : 0.128641}", "{'[6, 6, 6, 0, 6, 6, 1, 3, 21, 0, 0, 0, 2]' : 0.128413}", "{'[6, 6, 6, 0, 6, 6, 1, 3, 21, 0, 0, 0, 2]' : 0.128683}", "{'[6, 6, 6, 0, 6, 6, 1, 3, 21, 0, 0, 0, 2]' : 0.12586}", "{'[6, 6, 6, 0, 6, 6, 1, 3, 21, 0, 0, 0, 2]' : 0.128081}", "{'[6, 6, 6, 0, 6, 6, 1, 3, 21, 0, 0, 0, 2]' : 0.128568}", "{'[6, 6, 6, 0, 6, 6, 1, 3, 21, 0, 0, 0, 2]' : 0.127897}", "{'[6, 6, 6, 0, 6, 6, 1, 3, 21, 0, 0, 0, 2]' : 0.125181}", "{'[6, 6, 6, 0, 6, 6, 1, 3, 21, 0, 0, 0, 2]' : 0.125427}", "{'[6, 6, 6, 0, 6, 6, 1, 3, 21, 0, 0, 0, 2]' : 0.125299}", "{'[6, 6, 6, 0, 6, 6, 1, 3, 21, 0, 0, 0, 2]' : 0.122767}", "{'[6, 6, 6, 0, 6, 6, 1, 3, 21, 0, 0, 0, 2]' : 0.121523}", "{'[6, 6, 6, 0, 6, 6, 1, 3, 21, 0, 0, 0, 2]' : 0.126419}"]
returning from 'run': {'[6, 6, 6, 0, 6, 6, 1, 3, 21, 0, 0, 0, 2]': ([0.125573, 0.12674, 0.128422, 0.12571, 0.124163, 0.124889, 0.128481, 0.125322, 0.125197, 0.127, 0.128402, 0.128442, 0.12843, 0.128579, 0.128501, 0.128559, 0.128559, 0.128641, 0.128413, 0.128683, 0.12586, 0.128081, 0.128568, 0.127897, 0.125181, 0.125427, 0.125299, 0.122767, 0.121523, 0.126419], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 6, 0, 6, 6, 1, 3, 21, 0, 0, 0, 2]': ([0.125573, 0.12674, 0.128422, 0.12571, 0.124163, 0.124889, 0.128481, 0.125322, 0.125197, 0.127, 0.128402, 0.128442, 0.12843, 0.128579, 0.128501, 0.128559, 0.128559, 0.128641, 0.128413, 0.128683, 0.12586, 0.128081, 0.128568, 0.127897, 0.125181, 0.125427, 0.125299, 0.122767, 0.121523, 0.126419], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	5
        Additions: 		12909
        Multiplications: 	3828
        Divisions: 		0
        Logical: 		0
        Reads: 			19357
        Writes: 		1989
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest22.exe __orio_perftest22.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest22.exe  
Program Test Output: 
{'[6, 6, 3, 0, 6, 6, 29, 0, 26, 28, 2, 0, 0]' : 0.328492}
{'[6, 6, 3, 0, 6, 6, 29, 0, 26, 28, 2, 0, 0]' : 0.314344}
{'[6, 6, 3, 0, 6, 6, 29, 0, 26, 28, 2, 0, 0]' : 0.292523}
{'[6, 6, 3, 0, 6, 6, 29, 0, 26, 28, 2, 0, 0]' : 0.290098}
{'[6, 6, 3, 0, 6, 6, 29, 0, 26, 28, 2, 0, 0]' : 0.291008}
{'[6, 6, 3, 0, 6, 6, 29, 0, 26, 28, 2, 0, 0]' : 0.292044}
{'[6, 6, 3, 0, 6, 6, 29, 0, 26, 28, 2, 0, 0]' : 0.29205}
{'[6, 6, 3, 0, 6, 6, 29, 0, 26, 28, 2, 0, 0]' : 0.293476}
{'[6, 6, 3, 0, 6, 6, 29, 0, 26, 28, 2, 0, 0]' : 0.287819}
{'[6, 6, 3, 0, 6, 6, 29, 0, 26, 28, 2, 0, 0]' : 0.290585}
{'[6, 6, 3, 0, 6, 6, 29, 0, 26, 28, 2, 0, 0]' : 0.288081}
{'[6, 6, 3, 0, 6, 6, 29, 0, 26, 28, 2, 0, 0]' : 0.287303}
{'[6, 6, 3, 0, 6, 6, 29, 0, 26, 28, 2, 0, 0]' : 0.290402}
{'[6, 6, 3, 0, 6, 6, 29, 0, 26, 28, 2, 0, 0]' : 0.289541}
{'[6, 6, 3, 0, 6, 6, 29, 0, 26, 28, 2, 0, 0]' : 0.300993}
{'[6, 6, 3, 0, 6, 6, 29, 0, 26, 28, 2, 0, 0]' : 0.294393}
{'[6, 6, 3, 0, 6, 6, 29, 0, 26, 28, 2, 0, 0]' : 0.297843}
{'[6, 6, 3, 0, 6, 6, 29, 0, 26, 28, 2, 0, 0]' : 0.294173}
{'[6, 6, 3, 0, 6, 6, 29, 0, 26, 28, 2, 0, 0]' : 0.296742}
{'[6, 6, 3, 0, 6, 6, 29, 0, 26, 28, 2, 0, 0]' : 0.293174}
{'[6, 6, 3, 0, 6, 6, 29, 0, 26, 28, 2, 0, 0]' : 0.29067}
{'[6, 6, 3, 0, 6, 6, 29, 0, 26, 28, 2, 0, 0]' : 0.302384}
{'[6, 6, 3, 0, 6, 6, 29, 0, 26, 28, 2, 0, 0]' : 0.296047}
{'[6, 6, 3, 0, 6, 6, 29, 0, 26, 28, 2, 0, 0]' : 0.28902}
{'[6, 6, 3, 0, 6, 6, 29, 0, 26, 28, 2, 0, 0]' : 0.291383}
{'[6, 6, 3, 0, 6, 6, 29, 0, 26, 28, 2, 0, 0]' : 0.295959}
{'[6, 6, 3, 0, 6, 6, 29, 0, 26, 28, 2, 0, 0]' : 0.293289}
{'[6, 6, 3, 0, 6, 6, 29, 0, 26, 28, 2, 0, 0]' : 0.287181}
{'[6, 6, 3, 0, 6, 6, 29, 0, 26, 28, 2, 0, 0]' : 0.292144}
{'[6, 6, 3, 0, 6, 6, 29, 0, 26, 28, 2, 0, 0]' : 0.295594}

out:
 ["{'[6, 6, 3, 0, 6, 6, 29, 0, 26, 28, 2, 0, 0]' : 0.328492}", "{'[6, 6, 3, 0, 6, 6, 29, 0, 26, 28, 2, 0, 0]' : 0.314344}", "{'[6, 6, 3, 0, 6, 6, 29, 0, 26, 28, 2, 0, 0]' : 0.292523}", "{'[6, 6, 3, 0, 6, 6, 29, 0, 26, 28, 2, 0, 0]' : 0.290098}", "{'[6, 6, 3, 0, 6, 6, 29, 0, 26, 28, 2, 0, 0]' : 0.291008}", "{'[6, 6, 3, 0, 6, 6, 29, 0, 26, 28, 2, 0, 0]' : 0.292044}", "{'[6, 6, 3, 0, 6, 6, 29, 0, 26, 28, 2, 0, 0]' : 0.29205}", "{'[6, 6, 3, 0, 6, 6, 29, 0, 26, 28, 2, 0, 0]' : 0.293476}", "{'[6, 6, 3, 0, 6, 6, 29, 0, 26, 28, 2, 0, 0]' : 0.287819}", "{'[6, 6, 3, 0, 6, 6, 29, 0, 26, 28, 2, 0, 0]' : 0.290585}", "{'[6, 6, 3, 0, 6, 6, 29, 0, 26, 28, 2, 0, 0]' : 0.288081}", "{'[6, 6, 3, 0, 6, 6, 29, 0, 26, 28, 2, 0, 0]' : 0.287303}", "{'[6, 6, 3, 0, 6, 6, 29, 0, 26, 28, 2, 0, 0]' : 0.290402}", "{'[6, 6, 3, 0, 6, 6, 29, 0, 26, 28, 2, 0, 0]' : 0.289541}", "{'[6, 6, 3, 0, 6, 6, 29, 0, 26, 28, 2, 0, 0]' : 0.300993}", "{'[6, 6, 3, 0, 6, 6, 29, 0, 26, 28, 2, 0, 0]' : 0.294393}", "{'[6, 6, 3, 0, 6, 6, 29, 0, 26, 28, 2, 0, 0]' : 0.297843}", "{'[6, 6, 3, 0, 6, 6, 29, 0, 26, 28, 2, 0, 0]' : 0.294173}", "{'[6, 6, 3, 0, 6, 6, 29, 0, 26, 28, 2, 0, 0]' : 0.296742}", "{'[6, 6, 3, 0, 6, 6, 29, 0, 26, 28, 2, 0, 0]' : 0.293174}", "{'[6, 6, 3, 0, 6, 6, 29, 0, 26, 28, 2, 0, 0]' : 0.29067}", "{'[6, 6, 3, 0, 6, 6, 29, 0, 26, 28, 2, 0, 0]' : 0.302384}", "{'[6, 6, 3, 0, 6, 6, 29, 0, 26, 28, 2, 0, 0]' : 0.296047}", "{'[6, 6, 3, 0, 6, 6, 29, 0, 26, 28, 2, 0, 0]' : 0.28902}", "{'[6, 6, 3, 0, 6, 6, 29, 0, 26, 28, 2, 0, 0]' : 0.291383}", "{'[6, 6, 3, 0, 6, 6, 29, 0, 26, 28, 2, 0, 0]' : 0.295959}", "{'[6, 6, 3, 0, 6, 6, 29, 0, 26, 28, 2, 0, 0]' : 0.293289}", "{'[6, 6, 3, 0, 6, 6, 29, 0, 26, 28, 2, 0, 0]' : 0.287181}", "{'[6, 6, 3, 0, 6, 6, 29, 0, 26, 28, 2, 0, 0]' : 0.292144}", "{'[6, 6, 3, 0, 6, 6, 29, 0, 26, 28, 2, 0, 0]' : 0.295594}"]
returning from 'run': {'[6, 6, 3, 0, 6, 6, 29, 0, 26, 28, 2, 0, 0]': ([0.328492, 0.314344, 0.292523, 0.290098, 0.291008, 0.292044, 0.29205, 0.293476, 0.287819, 0.290585, 0.288081, 0.287303, 0.290402, 0.289541, 0.300993, 0.294393, 0.297843, 0.294173, 0.296742, 0.293174, 0.29067, 0.302384, 0.296047, 0.28902, 0.291383, 0.295959, 0.293289, 0.287181, 0.292144, 0.295594], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 3, 0, 6, 6, 29, 0, 26, 28, 2, 0, 0]': ([0.328492, 0.314344, 0.292523, 0.290098, 0.291008, 0.292044, 0.29205, 0.293476, 0.287819, 0.290585, 0.288081, 0.287303, 0.290402, 0.289541, 0.300993, 0.294393, 0.297843, 0.294173, 0.296742, 0.293174, 0.29067, 0.302384, 0.296047, 0.28902, 0.291383, 0.295959, 0.293289, 0.287181, 0.292144, 0.295594], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	17
        Max loop nest depth: 	5
        Additions: 		143
        Multiplications: 	32
        Divisions: 		0
        Logical: 		0
        Reads: 			295
        Writes: 		58
        Comparisons:		17
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest23.exe __orio_perftest23.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest23.exe  
Program Test Output: 
{'[6, 6, 0, 0, 6, 6, 2, 2, 0, 1, 0, 0, 0]' : 0.185586}
{'[6, 6, 0, 0, 6, 6, 2, 2, 0, 1, 0, 0, 0]' : 0.185561}
{'[6, 6, 0, 0, 6, 6, 2, 2, 0, 1, 0, 0, 0]' : 0.18556}
{'[6, 6, 0, 0, 6, 6, 2, 2, 0, 1, 0, 0, 0]' : 0.174926}
{'[6, 6, 0, 0, 6, 6, 2, 2, 0, 1, 0, 0, 0]' : 0.160775}
{'[6, 6, 0, 0, 6, 6, 2, 2, 0, 1, 0, 0, 0]' : 0.158882}
{'[6, 6, 0, 0, 6, 6, 2, 2, 0, 1, 0, 0, 0]' : 0.156204}
{'[6, 6, 0, 0, 6, 6, 2, 2, 0, 1, 0, 0, 0]' : 0.156582}
{'[6, 6, 0, 0, 6, 6, 2, 2, 0, 1, 0, 0, 0]' : 0.157352}
{'[6, 6, 0, 0, 6, 6, 2, 2, 0, 1, 0, 0, 0]' : 0.156356}
{'[6, 6, 0, 0, 6, 6, 2, 2, 0, 1, 0, 0, 0]' : 0.15638}
{'[6, 6, 0, 0, 6, 6, 2, 2, 0, 1, 0, 0, 0]' : 0.156603}
{'[6, 6, 0, 0, 6, 6, 2, 2, 0, 1, 0, 0, 0]' : 0.1611}
{'[6, 6, 0, 0, 6, 6, 2, 2, 0, 1, 0, 0, 0]' : 0.160898}
{'[6, 6, 0, 0, 6, 6, 2, 2, 0, 1, 0, 0, 0]' : 0.16127}
{'[6, 6, 0, 0, 6, 6, 2, 2, 0, 1, 0, 0, 0]' : 0.15713}
{'[6, 6, 0, 0, 6, 6, 2, 2, 0, 1, 0, 0, 0]' : 0.15623}
{'[6, 6, 0, 0, 6, 6, 2, 2, 0, 1, 0, 0, 0]' : 0.156257}
{'[6, 6, 0, 0, 6, 6, 2, 2, 0, 1, 0, 0, 0]' : 0.15994}
{'[6, 6, 0, 0, 6, 6, 2, 2, 0, 1, 0, 0, 0]' : 0.160848}
{'[6, 6, 0, 0, 6, 6, 2, 2, 0, 1, 0, 0, 0]' : 0.161011}
{'[6, 6, 0, 0, 6, 6, 2, 2, 0, 1, 0, 0, 0]' : 0.160078}
{'[6, 6, 0, 0, 6, 6, 2, 2, 0, 1, 0, 0, 0]' : 0.1608}
{'[6, 6, 0, 0, 6, 6, 2, 2, 0, 1, 0, 0, 0]' : 0.157963}
{'[6, 6, 0, 0, 6, 6, 2, 2, 0, 1, 0, 0, 0]' : 0.156492}
{'[6, 6, 0, 0, 6, 6, 2, 2, 0, 1, 0, 0, 0]' : 0.156433}
{'[6, 6, 0, 0, 6, 6, 2, 2, 0, 1, 0, 0, 0]' : 0.156344}
{'[6, 6, 0, 0, 6, 6, 2, 2, 0, 1, 0, 0, 0]' : 0.156536}
{'[6, 6, 0, 0, 6, 6, 2, 2, 0, 1, 0, 0, 0]' : 0.156489}
{'[6, 6, 0, 0, 6, 6, 2, 2, 0, 1, 0, 0, 0]' : 0.156275}

out:
 ["{'[6, 6, 0, 0, 6, 6, 2, 2, 0, 1, 0, 0, 0]' : 0.185586}", "{'[6, 6, 0, 0, 6, 6, 2, 2, 0, 1, 0, 0, 0]' : 0.185561}", "{'[6, 6, 0, 0, 6, 6, 2, 2, 0, 1, 0, 0, 0]' : 0.18556}", "{'[6, 6, 0, 0, 6, 6, 2, 2, 0, 1, 0, 0, 0]' : 0.174926}", "{'[6, 6, 0, 0, 6, 6, 2, 2, 0, 1, 0, 0, 0]' : 0.160775}", "{'[6, 6, 0, 0, 6, 6, 2, 2, 0, 1, 0, 0, 0]' : 0.158882}", "{'[6, 6, 0, 0, 6, 6, 2, 2, 0, 1, 0, 0, 0]' : 0.156204}", "{'[6, 6, 0, 0, 6, 6, 2, 2, 0, 1, 0, 0, 0]' : 0.156582}", "{'[6, 6, 0, 0, 6, 6, 2, 2, 0, 1, 0, 0, 0]' : 0.157352}", "{'[6, 6, 0, 0, 6, 6, 2, 2, 0, 1, 0, 0, 0]' : 0.156356}", "{'[6, 6, 0, 0, 6, 6, 2, 2, 0, 1, 0, 0, 0]' : 0.15638}", "{'[6, 6, 0, 0, 6, 6, 2, 2, 0, 1, 0, 0, 0]' : 0.156603}", "{'[6, 6, 0, 0, 6, 6, 2, 2, 0, 1, 0, 0, 0]' : 0.1611}", "{'[6, 6, 0, 0, 6, 6, 2, 2, 0, 1, 0, 0, 0]' : 0.160898}", "{'[6, 6, 0, 0, 6, 6, 2, 2, 0, 1, 0, 0, 0]' : 0.16127}", "{'[6, 6, 0, 0, 6, 6, 2, 2, 0, 1, 0, 0, 0]' : 0.15713}", "{'[6, 6, 0, 0, 6, 6, 2, 2, 0, 1, 0, 0, 0]' : 0.15623}", "{'[6, 6, 0, 0, 6, 6, 2, 2, 0, 1, 0, 0, 0]' : 0.156257}", "{'[6, 6, 0, 0, 6, 6, 2, 2, 0, 1, 0, 0, 0]' : 0.15994}", "{'[6, 6, 0, 0, 6, 6, 2, 2, 0, 1, 0, 0, 0]' : 0.160848}", "{'[6, 6, 0, 0, 6, 6, 2, 2, 0, 1, 0, 0, 0]' : 0.161011}", "{'[6, 6, 0, 0, 6, 6, 2, 2, 0, 1, 0, 0, 0]' : 0.160078}", "{'[6, 6, 0, 0, 6, 6, 2, 2, 0, 1, 0, 0, 0]' : 0.1608}", "{'[6, 6, 0, 0, 6, 6, 2, 2, 0, 1, 0, 0, 0]' : 0.157963}", "{'[6, 6, 0, 0, 6, 6, 2, 2, 0, 1, 0, 0, 0]' : 0.156492}", "{'[6, 6, 0, 0, 6, 6, 2, 2, 0, 1, 0, 0, 0]' : 0.156433}", "{'[6, 6, 0, 0, 6, 6, 2, 2, 0, 1, 0, 0, 0]' : 0.156344}", "{'[6, 6, 0, 0, 6, 6, 2, 2, 0, 1, 0, 0, 0]' : 0.156536}", "{'[6, 6, 0, 0, 6, 6, 2, 2, 0, 1, 0, 0, 0]' : 0.156489}", "{'[6, 6, 0, 0, 6, 6, 2, 2, 0, 1, 0, 0, 0]' : 0.156275}"]
returning from 'run': {'[6, 6, 0, 0, 6, 6, 2, 2, 0, 1, 0, 0, 0]': ([0.185586, 0.185561, 0.18556, 0.174926, 0.160775, 0.158882, 0.156204, 0.156582, 0.157352, 0.156356, 0.15638, 0.156603, 0.1611, 0.160898, 0.16127, 0.15713, 0.15623, 0.156257, 0.15994, 0.160848, 0.161011, 0.160078, 0.1608, 0.157963, 0.156492, 0.156433, 0.156344, 0.156536, 0.156489, 0.156275], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 0, 0, 6, 6, 2, 2, 0, 1, 0, 0, 0]': ([0.185586, 0.185561, 0.18556, 0.174926, 0.160775, 0.158882, 0.156204, 0.156582, 0.157352, 0.156356, 0.15638, 0.156603, 0.1611, 0.160898, 0.16127, 0.15713, 0.15623, 0.156257, 0.15994, 0.160848, 0.161011, 0.160078, 0.1608, 0.157963, 0.156492, 0.156433, 0.156344, 0.156536, 0.156489, 0.156275], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	6
        Additions: 		6679
        Multiplications: 	1984
        Divisions: 		0
        Logical: 		0
        Reads: 			10180
        Writes: 		1092
        Comparisons:		20
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest24.exe __orio_perftest24.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest24.exe  
Program Test Output: 
{'[6, 6, 6, 5, 6, 6, 27, 29, 29, 0, 0, 0, 0]' : 0.286079}
{'[6, 6, 6, 5, 6, 6, 27, 29, 29, 0, 0, 0, 0]' : 0.280059}
{'[6, 6, 6, 5, 6, 6, 27, 29, 29, 0, 0, 0, 0]' : 0.267752}
{'[6, 6, 6, 5, 6, 6, 27, 29, 29, 0, 0, 0, 0]' : 0.263273}
{'[6, 6, 6, 5, 6, 6, 27, 29, 29, 0, 0, 0, 0]' : 0.262292}
{'[6, 6, 6, 5, 6, 6, 27, 29, 29, 0, 0, 0, 0]' : 0.260779}
{'[6, 6, 6, 5, 6, 6, 27, 29, 29, 0, 0, 0, 0]' : 0.269995}
{'[6, 6, 6, 5, 6, 6, 27, 29, 29, 0, 0, 0, 0]' : 0.262559}
{'[6, 6, 6, 5, 6, 6, 27, 29, 29, 0, 0, 0, 0]' : 0.264431}
{'[6, 6, 6, 5, 6, 6, 27, 29, 29, 0, 0, 0, 0]' : 0.264328}
{'[6, 6, 6, 5, 6, 6, 27, 29, 29, 0, 0, 0, 0]' : 0.267157}
{'[6, 6, 6, 5, 6, 6, 27, 29, 29, 0, 0, 0, 0]' : 0.270689}
{'[6, 6, 6, 5, 6, 6, 27, 29, 29, 0, 0, 0, 0]' : 0.260024}
{'[6, 6, 6, 5, 6, 6, 27, 29, 29, 0, 0, 0, 0]' : 0.267535}
{'[6, 6, 6, 5, 6, 6, 27, 29, 29, 0, 0, 0, 0]' : 0.26494}
{'[6, 6, 6, 5, 6, 6, 27, 29, 29, 0, 0, 0, 0]' : 0.26579}
{'[6, 6, 6, 5, 6, 6, 27, 29, 29, 0, 0, 0, 0]' : 0.267325}
{'[6, 6, 6, 5, 6, 6, 27, 29, 29, 0, 0, 0, 0]' : 0.270762}
{'[6, 6, 6, 5, 6, 6, 27, 29, 29, 0, 0, 0, 0]' : 0.257886}
{'[6, 6, 6, 5, 6, 6, 27, 29, 29, 0, 0, 0, 0]' : 0.268434}
{'[6, 6, 6, 5, 6, 6, 27, 29, 29, 0, 0, 0, 0]' : 0.262854}
{'[6, 6, 6, 5, 6, 6, 27, 29, 29, 0, 0, 0, 0]' : 0.267956}
{'[6, 6, 6, 5, 6, 6, 27, 29, 29, 0, 0, 0, 0]' : 0.263811}
{'[6, 6, 6, 5, 6, 6, 27, 29, 29, 0, 0, 0, 0]' : 0.264174}
{'[6, 6, 6, 5, 6, 6, 27, 29, 29, 0, 0, 0, 0]' : 0.265701}
{'[6, 6, 6, 5, 6, 6, 27, 29, 29, 0, 0, 0, 0]' : 0.269536}
{'[6, 6, 6, 5, 6, 6, 27, 29, 29, 0, 0, 0, 0]' : 0.271047}
{'[6, 6, 6, 5, 6, 6, 27, 29, 29, 0, 0, 0, 0]' : 0.264789}
{'[6, 6, 6, 5, 6, 6, 27, 29, 29, 0, 0, 0, 0]' : 0.26325}
{'[6, 6, 6, 5, 6, 6, 27, 29, 29, 0, 0, 0, 0]' : 0.264945}

out:
 ["{'[6, 6, 6, 5, 6, 6, 27, 29, 29, 0, 0, 0, 0]' : 0.286079}", "{'[6, 6, 6, 5, 6, 6, 27, 29, 29, 0, 0, 0, 0]' : 0.280059}", "{'[6, 6, 6, 5, 6, 6, 27, 29, 29, 0, 0, 0, 0]' : 0.267752}", "{'[6, 6, 6, 5, 6, 6, 27, 29, 29, 0, 0, 0, 0]' : 0.263273}", "{'[6, 6, 6, 5, 6, 6, 27, 29, 29, 0, 0, 0, 0]' : 0.262292}", "{'[6, 6, 6, 5, 6, 6, 27, 29, 29, 0, 0, 0, 0]' : 0.260779}", "{'[6, 6, 6, 5, 6, 6, 27, 29, 29, 0, 0, 0, 0]' : 0.269995}", "{'[6, 6, 6, 5, 6, 6, 27, 29, 29, 0, 0, 0, 0]' : 0.262559}", "{'[6, 6, 6, 5, 6, 6, 27, 29, 29, 0, 0, 0, 0]' : 0.264431}", "{'[6, 6, 6, 5, 6, 6, 27, 29, 29, 0, 0, 0, 0]' : 0.264328}", "{'[6, 6, 6, 5, 6, 6, 27, 29, 29, 0, 0, 0, 0]' : 0.267157}", "{'[6, 6, 6, 5, 6, 6, 27, 29, 29, 0, 0, 0, 0]' : 0.270689}", "{'[6, 6, 6, 5, 6, 6, 27, 29, 29, 0, 0, 0, 0]' : 0.260024}", "{'[6, 6, 6, 5, 6, 6, 27, 29, 29, 0, 0, 0, 0]' : 0.267535}", "{'[6, 6, 6, 5, 6, 6, 27, 29, 29, 0, 0, 0, 0]' : 0.26494}", "{'[6, 6, 6, 5, 6, 6, 27, 29, 29, 0, 0, 0, 0]' : 0.26579}", "{'[6, 6, 6, 5, 6, 6, 27, 29, 29, 0, 0, 0, 0]' : 0.267325}", "{'[6, 6, 6, 5, 6, 6, 27, 29, 29, 0, 0, 0, 0]' : 0.270762}", "{'[6, 6, 6, 5, 6, 6, 27, 29, 29, 0, 0, 0, 0]' : 0.257886}", "{'[6, 6, 6, 5, 6, 6, 27, 29, 29, 0, 0, 0, 0]' : 0.268434}", "{'[6, 6, 6, 5, 6, 6, 27, 29, 29, 0, 0, 0, 0]' : 0.262854}", "{'[6, 6, 6, 5, 6, 6, 27, 29, 29, 0, 0, 0, 0]' : 0.267956}", "{'[6, 6, 6, 5, 6, 6, 27, 29, 29, 0, 0, 0, 0]' : 0.263811}", "{'[6, 6, 6, 5, 6, 6, 27, 29, 29, 0, 0, 0, 0]' : 0.264174}", "{'[6, 6, 6, 5, 6, 6, 27, 29, 29, 0, 0, 0, 0]' : 0.265701}", "{'[6, 6, 6, 5, 6, 6, 27, 29, 29, 0, 0, 0, 0]' : 0.269536}", "{'[6, 6, 6, 5, 6, 6, 27, 29, 29, 0, 0, 0, 0]' : 0.271047}", "{'[6, 6, 6, 5, 6, 6, 27, 29, 29, 0, 0, 0, 0]' : 0.264789}", "{'[6, 6, 6, 5, 6, 6, 27, 29, 29, 0, 0, 0, 0]' : 0.26325}", "{'[6, 6, 6, 5, 6, 6, 27, 29, 29, 0, 0, 0, 0]' : 0.264945}"]
returning from 'run': {'[6, 6, 6, 5, 6, 6, 27, 29, 29, 0, 0, 0, 0]': ([0.286079, 0.280059, 0.267752, 0.263273, 0.262292, 0.260779, 0.269995, 0.262559, 0.264431, 0.264328, 0.267157, 0.270689, 0.260024, 0.267535, 0.26494, 0.26579, 0.267325, 0.270762, 0.257886, 0.268434, 0.262854, 0.267956, 0.263811, 0.264174, 0.265701, 0.269536, 0.271047, 0.264789, 0.26325, 0.264945], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 6, 5, 6, 6, 27, 29, 29, 0, 0, 0, 0]': ([0.286079, 0.280059, 0.267752, 0.263273, 0.262292, 0.260779, 0.269995, 0.262559, 0.264431, 0.264328, 0.267157, 0.270689, 0.260024, 0.267535, 0.26494, 0.26579, 0.267325, 0.270762, 0.257886, 0.268434, 0.262854, 0.267956, 0.263811, 0.264174, 0.265701, 0.269536, 0.271047, 0.264789, 0.26325, 0.264945], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	82
        Max loop nest depth: 	6
        Additions: 		10400
        Multiplications: 	2976
        Divisions: 		0
        Logical: 		0
        Reads: 			15640
        Writes: 		1687
        Comparisons:		82
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest25.exe __orio_perftest25.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest25.exe  
Program Test Output: 
{'[6, 6, 4, 5, 6, 6, 2, 29, 0, 29, 0, 1, 1]' : 0.19422}
{'[6, 6, 4, 5, 6, 6, 2, 29, 0, 29, 0, 1, 1]' : 0.197696}
{'[6, 6, 4, 5, 6, 6, 2, 29, 0, 29, 0, 1, 1]' : 0.197341}
{'[6, 6, 4, 5, 6, 6, 2, 29, 0, 29, 0, 1, 1]' : 0.199042}
{'[6, 6, 4, 5, 6, 6, 2, 29, 0, 29, 0, 1, 1]' : 0.196046}
{'[6, 6, 4, 5, 6, 6, 2, 29, 0, 29, 0, 1, 1]' : 0.194703}
{'[6, 6, 4, 5, 6, 6, 2, 29, 0, 29, 0, 1, 1]' : 0.195888}
{'[6, 6, 4, 5, 6, 6, 2, 29, 0, 29, 0, 1, 1]' : 0.197289}
{'[6, 6, 4, 5, 6, 6, 2, 29, 0, 29, 0, 1, 1]' : 0.193596}
{'[6, 6, 4, 5, 6, 6, 2, 29, 0, 29, 0, 1, 1]' : 0.194996}
{'[6, 6, 4, 5, 6, 6, 2, 29, 0, 29, 0, 1, 1]' : 0.195618}
{'[6, 6, 4, 5, 6, 6, 2, 29, 0, 29, 0, 1, 1]' : 0.198434}
{'[6, 6, 4, 5, 6, 6, 2, 29, 0, 29, 0, 1, 1]' : 0.196327}
{'[6, 6, 4, 5, 6, 6, 2, 29, 0, 29, 0, 1, 1]' : 0.196277}
{'[6, 6, 4, 5, 6, 6, 2, 29, 0, 29, 0, 1, 1]' : 0.19526}
{'[6, 6, 4, 5, 6, 6, 2, 29, 0, 29, 0, 1, 1]' : 0.193207}
{'[6, 6, 4, 5, 6, 6, 2, 29, 0, 29, 0, 1, 1]' : 0.195061}
{'[6, 6, 4, 5, 6, 6, 2, 29, 0, 29, 0, 1, 1]' : 0.193966}
{'[6, 6, 4, 5, 6, 6, 2, 29, 0, 29, 0, 1, 1]' : 0.192095}
{'[6, 6, 4, 5, 6, 6, 2, 29, 0, 29, 0, 1, 1]' : 0.19628}
{'[6, 6, 4, 5, 6, 6, 2, 29, 0, 29, 0, 1, 1]' : 0.194529}
{'[6, 6, 4, 5, 6, 6, 2, 29, 0, 29, 0, 1, 1]' : 0.19617}
{'[6, 6, 4, 5, 6, 6, 2, 29, 0, 29, 0, 1, 1]' : 0.199557}
{'[6, 6, 4, 5, 6, 6, 2, 29, 0, 29, 0, 1, 1]' : 0.193609}
{'[6, 6, 4, 5, 6, 6, 2, 29, 0, 29, 0, 1, 1]' : 0.197263}
{'[6, 6, 4, 5, 6, 6, 2, 29, 0, 29, 0, 1, 1]' : 0.197385}
{'[6, 6, 4, 5, 6, 6, 2, 29, 0, 29, 0, 1, 1]' : 0.196684}
{'[6, 6, 4, 5, 6, 6, 2, 29, 0, 29, 0, 1, 1]' : 0.194635}
{'[6, 6, 4, 5, 6, 6, 2, 29, 0, 29, 0, 1, 1]' : 0.195814}
{'[6, 6, 4, 5, 6, 6, 2, 29, 0, 29, 0, 1, 1]' : 0.197307}

out:
 ["{'[6, 6, 4, 5, 6, 6, 2, 29, 0, 29, 0, 1, 1]' : 0.19422}", "{'[6, 6, 4, 5, 6, 6, 2, 29, 0, 29, 0, 1, 1]' : 0.197696}", "{'[6, 6, 4, 5, 6, 6, 2, 29, 0, 29, 0, 1, 1]' : 0.197341}", "{'[6, 6, 4, 5, 6, 6, 2, 29, 0, 29, 0, 1, 1]' : 0.199042}", "{'[6, 6, 4, 5, 6, 6, 2, 29, 0, 29, 0, 1, 1]' : 0.196046}", "{'[6, 6, 4, 5, 6, 6, 2, 29, 0, 29, 0, 1, 1]' : 0.194703}", "{'[6, 6, 4, 5, 6, 6, 2, 29, 0, 29, 0, 1, 1]' : 0.195888}", "{'[6, 6, 4, 5, 6, 6, 2, 29, 0, 29, 0, 1, 1]' : 0.197289}", "{'[6, 6, 4, 5, 6, 6, 2, 29, 0, 29, 0, 1, 1]' : 0.193596}", "{'[6, 6, 4, 5, 6, 6, 2, 29, 0, 29, 0, 1, 1]' : 0.194996}", "{'[6, 6, 4, 5, 6, 6, 2, 29, 0, 29, 0, 1, 1]' : 0.195618}", "{'[6, 6, 4, 5, 6, 6, 2, 29, 0, 29, 0, 1, 1]' : 0.198434}", "{'[6, 6, 4, 5, 6, 6, 2, 29, 0, 29, 0, 1, 1]' : 0.196327}", "{'[6, 6, 4, 5, 6, 6, 2, 29, 0, 29, 0, 1, 1]' : 0.196277}", "{'[6, 6, 4, 5, 6, 6, 2, 29, 0, 29, 0, 1, 1]' : 0.19526}", "{'[6, 6, 4, 5, 6, 6, 2, 29, 0, 29, 0, 1, 1]' : 0.193207}", "{'[6, 6, 4, 5, 6, 6, 2, 29, 0, 29, 0, 1, 1]' : 0.195061}", "{'[6, 6, 4, 5, 6, 6, 2, 29, 0, 29, 0, 1, 1]' : 0.193966}", "{'[6, 6, 4, 5, 6, 6, 2, 29, 0, 29, 0, 1, 1]' : 0.192095}", "{'[6, 6, 4, 5, 6, 6, 2, 29, 0, 29, 0, 1, 1]' : 0.19628}", "{'[6, 6, 4, 5, 6, 6, 2, 29, 0, 29, 0, 1, 1]' : 0.194529}", "{'[6, 6, 4, 5, 6, 6, 2, 29, 0, 29, 0, 1, 1]' : 0.19617}", "{'[6, 6, 4, 5, 6, 6, 2, 29, 0, 29, 0, 1, 1]' : 0.199557}", "{'[6, 6, 4, 5, 6, 6, 2, 29, 0, 29, 0, 1, 1]' : 0.193609}", "{'[6, 6, 4, 5, 6, 6, 2, 29, 0, 29, 0, 1, 1]' : 0.197263}", "{'[6, 6, 4, 5, 6, 6, 2, 29, 0, 29, 0, 1, 1]' : 0.197385}", "{'[6, 6, 4, 5, 6, 6, 2, 29, 0, 29, 0, 1, 1]' : 0.196684}", "{'[6, 6, 4, 5, 6, 6, 2, 29, 0, 29, 0, 1, 1]' : 0.194635}", "{'[6, 6, 4, 5, 6, 6, 2, 29, 0, 29, 0, 1, 1]' : 0.195814}", "{'[6, 6, 4, 5, 6, 6, 2, 29, 0, 29, 0, 1, 1]' : 0.197307}"]
returning from 'run': {'[6, 6, 4, 5, 6, 6, 2, 29, 0, 29, 0, 1, 1]': ([0.19422, 0.197696, 0.197341, 0.199042, 0.196046, 0.194703, 0.195888, 0.197289, 0.193596, 0.194996, 0.195618, 0.198434, 0.196327, 0.196277, 0.19526, 0.193207, 0.195061, 0.193966, 0.192095, 0.19628, 0.194529, 0.19617, 0.199557, 0.193609, 0.197263, 0.197385, 0.196684, 0.194635, 0.195814, 0.197307], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 4, 5, 6, 6, 2, 29, 0, 29, 0, 1, 1]': ([0.19422, 0.197696, 0.197341, 0.199042, 0.196046, 0.194703, 0.195888, 0.197289, 0.193596, 0.194996, 0.195618, 0.198434, 0.196327, 0.196277, 0.19526, 0.193207, 0.195061, 0.193966, 0.192095, 0.19628, 0.194529, 0.19617, 0.199557, 0.193609, 0.197263, 0.197385, 0.196684, 0.194635, 0.195814, 0.197307], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	77
        Max loop nest depth: 	5
        Additions: 		9613
        Multiplications: 	2728
        Divisions: 		0
        Logical: 		0
        Reads: 			14417
        Writes: 		1579
        Comparisons:		77
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest26.exe __orio_perftest26.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest26.exe  
Program Test Output: 
{'[6, 6, 0, 0, 6, 6, 28, 29, 9, 0, 0, 2, 0]' : 0.255377}
{'[6, 6, 0, 0, 6, 6, 28, 29, 9, 0, 0, 2, 0]' : 0.251086}
{'[6, 6, 0, 0, 6, 6, 28, 29, 9, 0, 0, 2, 0]' : 0.235327}
{'[6, 6, 0, 0, 6, 6, 28, 29, 9, 0, 0, 2, 0]' : 0.215092}
{'[6, 6, 0, 0, 6, 6, 28, 29, 9, 0, 0, 2, 0]' : 0.221164}
{'[6, 6, 0, 0, 6, 6, 28, 29, 9, 0, 0, 2, 0]' : 0.222893}
{'[6, 6, 0, 0, 6, 6, 28, 29, 9, 0, 0, 2, 0]' : 0.230543}
{'[6, 6, 0, 0, 6, 6, 28, 29, 9, 0, 0, 2, 0]' : 0.225927}
{'[6, 6, 0, 0, 6, 6, 28, 29, 9, 0, 0, 2, 0]' : 0.23005}
{'[6, 6, 0, 0, 6, 6, 28, 29, 9, 0, 0, 2, 0]' : 0.225266}
{'[6, 6, 0, 0, 6, 6, 28, 29, 9, 0, 0, 2, 0]' : 0.223114}
{'[6, 6, 0, 0, 6, 6, 28, 29, 9, 0, 0, 2, 0]' : 0.225717}
{'[6, 6, 0, 0, 6, 6, 28, 29, 9, 0, 0, 2, 0]' : 0.226178}
{'[6, 6, 0, 0, 6, 6, 28, 29, 9, 0, 0, 2, 0]' : 0.225283}
{'[6, 6, 0, 0, 6, 6, 28, 29, 9, 0, 0, 2, 0]' : 0.221521}
{'[6, 6, 0, 0, 6, 6, 28, 29, 9, 0, 0, 2, 0]' : 0.220548}
{'[6, 6, 0, 0, 6, 6, 28, 29, 9, 0, 0, 2, 0]' : 0.218502}
{'[6, 6, 0, 0, 6, 6, 28, 29, 9, 0, 0, 2, 0]' : 0.225473}
{'[6, 6, 0, 0, 6, 6, 28, 29, 9, 0, 0, 2, 0]' : 0.224536}
{'[6, 6, 0, 0, 6, 6, 28, 29, 9, 0, 0, 2, 0]' : 0.226035}
{'[6, 6, 0, 0, 6, 6, 28, 29, 9, 0, 0, 2, 0]' : 0.223823}
{'[6, 6, 0, 0, 6, 6, 28, 29, 9, 0, 0, 2, 0]' : 0.225369}
{'[6, 6, 0, 0, 6, 6, 28, 29, 9, 0, 0, 2, 0]' : 0.225921}
{'[6, 6, 0, 0, 6, 6, 28, 29, 9, 0, 0, 2, 0]' : 0.220197}
{'[6, 6, 0, 0, 6, 6, 28, 29, 9, 0, 0, 2, 0]' : 0.22464}
{'[6, 6, 0, 0, 6, 6, 28, 29, 9, 0, 0, 2, 0]' : 0.222479}
{'[6, 6, 0, 0, 6, 6, 28, 29, 9, 0, 0, 2, 0]' : 0.231976}
{'[6, 6, 0, 0, 6, 6, 28, 29, 9, 0, 0, 2, 0]' : 0.22228}
{'[6, 6, 0, 0, 6, 6, 28, 29, 9, 0, 0, 2, 0]' : 0.224103}
{'[6, 6, 0, 0, 6, 6, 28, 29, 9, 0, 0, 2, 0]' : 0.217789}

out:
 ["{'[6, 6, 0, 0, 6, 6, 28, 29, 9, 0, 0, 2, 0]' : 0.255377}", "{'[6, 6, 0, 0, 6, 6, 28, 29, 9, 0, 0, 2, 0]' : 0.251086}", "{'[6, 6, 0, 0, 6, 6, 28, 29, 9, 0, 0, 2, 0]' : 0.235327}", "{'[6, 6, 0, 0, 6, 6, 28, 29, 9, 0, 0, 2, 0]' : 0.215092}", "{'[6, 6, 0, 0, 6, 6, 28, 29, 9, 0, 0, 2, 0]' : 0.221164}", "{'[6, 6, 0, 0, 6, 6, 28, 29, 9, 0, 0, 2, 0]' : 0.222893}", "{'[6, 6, 0, 0, 6, 6, 28, 29, 9, 0, 0, 2, 0]' : 0.230543}", "{'[6, 6, 0, 0, 6, 6, 28, 29, 9, 0, 0, 2, 0]' : 0.225927}", "{'[6, 6, 0, 0, 6, 6, 28, 29, 9, 0, 0, 2, 0]' : 0.23005}", "{'[6, 6, 0, 0, 6, 6, 28, 29, 9, 0, 0, 2, 0]' : 0.225266}", "{'[6, 6, 0, 0, 6, 6, 28, 29, 9, 0, 0, 2, 0]' : 0.223114}", "{'[6, 6, 0, 0, 6, 6, 28, 29, 9, 0, 0, 2, 0]' : 0.225717}", "{'[6, 6, 0, 0, 6, 6, 28, 29, 9, 0, 0, 2, 0]' : 0.226178}", "{'[6, 6, 0, 0, 6, 6, 28, 29, 9, 0, 0, 2, 0]' : 0.225283}", "{'[6, 6, 0, 0, 6, 6, 28, 29, 9, 0, 0, 2, 0]' : 0.221521}", "{'[6, 6, 0, 0, 6, 6, 28, 29, 9, 0, 0, 2, 0]' : 0.220548}", "{'[6, 6, 0, 0, 6, 6, 28, 29, 9, 0, 0, 2, 0]' : 0.218502}", "{'[6, 6, 0, 0, 6, 6, 28, 29, 9, 0, 0, 2, 0]' : 0.225473}", "{'[6, 6, 0, 0, 6, 6, 28, 29, 9, 0, 0, 2, 0]' : 0.224536}", "{'[6, 6, 0, 0, 6, 6, 28, 29, 9, 0, 0, 2, 0]' : 0.226035}", "{'[6, 6, 0, 0, 6, 6, 28, 29, 9, 0, 0, 2, 0]' : 0.223823}", "{'[6, 6, 0, 0, 6, 6, 28, 29, 9, 0, 0, 2, 0]' : 0.225369}", "{'[6, 6, 0, 0, 6, 6, 28, 29, 9, 0, 0, 2, 0]' : 0.225921}", "{'[6, 6, 0, 0, 6, 6, 28, 29, 9, 0, 0, 2, 0]' : 0.220197}", "{'[6, 6, 0, 0, 6, 6, 28, 29, 9, 0, 0, 2, 0]' : 0.22464}", "{'[6, 6, 0, 0, 6, 6, 28, 29, 9, 0, 0, 2, 0]' : 0.222479}", "{'[6, 6, 0, 0, 6, 6, 28, 29, 9, 0, 0, 2, 0]' : 0.231976}", "{'[6, 6, 0, 0, 6, 6, 28, 29, 9, 0, 0, 2, 0]' : 0.22228}", "{'[6, 6, 0, 0, 6, 6, 28, 29, 9, 0, 0, 2, 0]' : 0.224103}", "{'[6, 6, 0, 0, 6, 6, 28, 29, 9, 0, 0, 2, 0]' : 0.217789}"]
returning from 'run': {'[6, 6, 0, 0, 6, 6, 28, 29, 9, 0, 0, 2, 0]': ([0.255377, 0.251086, 0.235327, 0.215092, 0.221164, 0.222893, 0.230543, 0.225927, 0.23005, 0.225266, 0.223114, 0.225717, 0.226178, 0.225283, 0.221521, 0.220548, 0.218502, 0.225473, 0.224536, 0.226035, 0.223823, 0.225369, 0.225921, 0.220197, 0.22464, 0.222479, 0.231976, 0.22228, 0.224103, 0.217789], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 0, 0, 6, 6, 28, 29, 9, 0, 0, 2, 0]': ([0.255377, 0.251086, 0.235327, 0.215092, 0.221164, 0.222893, 0.230543, 0.225927, 0.23005, 0.225266, 0.223114, 0.225717, 0.226178, 0.225283, 0.221521, 0.220548, 0.218502, 0.225473, 0.224536, 0.226035, 0.223823, 0.225369, 0.225921, 0.220197, 0.22464, 0.222479, 0.231976, 0.22228, 0.224103, 0.217789], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		291
        Multiplications: 	126
        Divisions: 		0
        Logical: 		0
        Reads: 			720
        Writes: 		92
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest27.exe __orio_perftest27.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest27.exe  
Program Test Output: 
{'[6, 6, 6, 0, 6, 6, 2, 0, 28, 0, 0, 2, 0]' : 0.220047}
{'[6, 6, 6, 0, 6, 6, 2, 0, 28, 0, 0, 2, 0]' : 0.220101}
{'[6, 6, 6, 0, 6, 6, 2, 0, 28, 0, 0, 2, 0]' : 0.219394}
{'[6, 6, 6, 0, 6, 6, 2, 0, 28, 0, 0, 2, 0]' : 0.195768}
{'[6, 6, 6, 0, 6, 6, 2, 0, 28, 0, 0, 2, 0]' : 0.19575}
{'[6, 6, 6, 0, 6, 6, 2, 0, 28, 0, 0, 2, 0]' : 0.188305}
{'[6, 6, 6, 0, 6, 6, 2, 0, 28, 0, 0, 2, 0]' : 0.194963}
{'[6, 6, 6, 0, 6, 6, 2, 0, 28, 0, 0, 2, 0]' : 0.195976}
{'[6, 6, 6, 0, 6, 6, 2, 0, 28, 0, 0, 2, 0]' : 0.194692}
{'[6, 6, 6, 0, 6, 6, 2, 0, 28, 0, 0, 2, 0]' : 0.19007}
{'[6, 6, 6, 0, 6, 6, 2, 0, 28, 0, 0, 2, 0]' : 0.190429}
{'[6, 6, 6, 0, 6, 6, 2, 0, 28, 0, 0, 2, 0]' : 0.1883}
{'[6, 6, 6, 0, 6, 6, 2, 0, 28, 0, 0, 2, 0]' : 0.184472}
{'[6, 6, 6, 0, 6, 6, 2, 0, 28, 0, 0, 2, 0]' : 0.187688}
{'[6, 6, 6, 0, 6, 6, 2, 0, 28, 0, 0, 2, 0]' : 0.190134}
{'[6, 6, 6, 0, 6, 6, 2, 0, 28, 0, 0, 2, 0]' : 0.189862}
{'[6, 6, 6, 0, 6, 6, 2, 0, 28, 0, 0, 2, 0]' : 0.185789}
{'[6, 6, 6, 0, 6, 6, 2, 0, 28, 0, 0, 2, 0]' : 0.18419}
{'[6, 6, 6, 0, 6, 6, 2, 0, 28, 0, 0, 2, 0]' : 0.184814}
{'[6, 6, 6, 0, 6, 6, 2, 0, 28, 0, 0, 2, 0]' : 0.184247}
{'[6, 6, 6, 0, 6, 6, 2, 0, 28, 0, 0, 2, 0]' : 0.18417}
{'[6, 6, 6, 0, 6, 6, 2, 0, 28, 0, 0, 2, 0]' : 0.184817}
{'[6, 6, 6, 0, 6, 6, 2, 0, 28, 0, 0, 2, 0]' : 0.184858}
{'[6, 6, 6, 0, 6, 6, 2, 0, 28, 0, 0, 2, 0]' : 0.184534}
{'[6, 6, 6, 0, 6, 6, 2, 0, 28, 0, 0, 2, 0]' : 0.187349}
{'[6, 6, 6, 0, 6, 6, 2, 0, 28, 0, 0, 2, 0]' : 0.184284}
{'[6, 6, 6, 0, 6, 6, 2, 0, 28, 0, 0, 2, 0]' : 0.185047}
{'[6, 6, 6, 0, 6, 6, 2, 0, 28, 0, 0, 2, 0]' : 0.190009}
{'[6, 6, 6, 0, 6, 6, 2, 0, 28, 0, 0, 2, 0]' : 0.186085}
{'[6, 6, 6, 0, 6, 6, 2, 0, 28, 0, 0, 2, 0]' : 0.186978}

out:
 ["{'[6, 6, 6, 0, 6, 6, 2, 0, 28, 0, 0, 2, 0]' : 0.220047}", "{'[6, 6, 6, 0, 6, 6, 2, 0, 28, 0, 0, 2, 0]' : 0.220101}", "{'[6, 6, 6, 0, 6, 6, 2, 0, 28, 0, 0, 2, 0]' : 0.219394}", "{'[6, 6, 6, 0, 6, 6, 2, 0, 28, 0, 0, 2, 0]' : 0.195768}", "{'[6, 6, 6, 0, 6, 6, 2, 0, 28, 0, 0, 2, 0]' : 0.19575}", "{'[6, 6, 6, 0, 6, 6, 2, 0, 28, 0, 0, 2, 0]' : 0.188305}", "{'[6, 6, 6, 0, 6, 6, 2, 0, 28, 0, 0, 2, 0]' : 0.194963}", "{'[6, 6, 6, 0, 6, 6, 2, 0, 28, 0, 0, 2, 0]' : 0.195976}", "{'[6, 6, 6, 0, 6, 6, 2, 0, 28, 0, 0, 2, 0]' : 0.194692}", "{'[6, 6, 6, 0, 6, 6, 2, 0, 28, 0, 0, 2, 0]' : 0.19007}", "{'[6, 6, 6, 0, 6, 6, 2, 0, 28, 0, 0, 2, 0]' : 0.190429}", "{'[6, 6, 6, 0, 6, 6, 2, 0, 28, 0, 0, 2, 0]' : 0.1883}", "{'[6, 6, 6, 0, 6, 6, 2, 0, 28, 0, 0, 2, 0]' : 0.184472}", "{'[6, 6, 6, 0, 6, 6, 2, 0, 28, 0, 0, 2, 0]' : 0.187688}", "{'[6, 6, 6, 0, 6, 6, 2, 0, 28, 0, 0, 2, 0]' : 0.190134}", "{'[6, 6, 6, 0, 6, 6, 2, 0, 28, 0, 0, 2, 0]' : 0.189862}", "{'[6, 6, 6, 0, 6, 6, 2, 0, 28, 0, 0, 2, 0]' : 0.185789}", "{'[6, 6, 6, 0, 6, 6, 2, 0, 28, 0, 0, 2, 0]' : 0.18419}", "{'[6, 6, 6, 0, 6, 6, 2, 0, 28, 0, 0, 2, 0]' : 0.184814}", "{'[6, 6, 6, 0, 6, 6, 2, 0, 28, 0, 0, 2, 0]' : 0.184247}", "{'[6, 6, 6, 0, 6, 6, 2, 0, 28, 0, 0, 2, 0]' : 0.18417}", "{'[6, 6, 6, 0, 6, 6, 2, 0, 28, 0, 0, 2, 0]' : 0.184817}", "{'[6, 6, 6, 0, 6, 6, 2, 0, 28, 0, 0, 2, 0]' : 0.184858}", "{'[6, 6, 6, 0, 6, 6, 2, 0, 28, 0, 0, 2, 0]' : 0.184534}", "{'[6, 6, 6, 0, 6, 6, 2, 0, 28, 0, 0, 2, 0]' : 0.187349}", "{'[6, 6, 6, 0, 6, 6, 2, 0, 28, 0, 0, 2, 0]' : 0.184284}", "{'[6, 6, 6, 0, 6, 6, 2, 0, 28, 0, 0, 2, 0]' : 0.185047}", "{'[6, 6, 6, 0, 6, 6, 2, 0, 28, 0, 0, 2, 0]' : 0.190009}", "{'[6, 6, 6, 0, 6, 6, 2, 0, 28, 0, 0, 2, 0]' : 0.186085}", "{'[6, 6, 6, 0, 6, 6, 2, 0, 28, 0, 0, 2, 0]' : 0.186978}"]
returning from 'run': {'[6, 6, 6, 0, 6, 6, 2, 0, 28, 0, 0, 2, 0]': ([0.220047, 0.220101, 0.219394, 0.195768, 0.19575, 0.188305, 0.194963, 0.195976, 0.194692, 0.19007, 0.190429, 0.1883, 0.184472, 0.187688, 0.190134, 0.189862, 0.185789, 0.18419, 0.184814, 0.184247, 0.18417, 0.184817, 0.184858, 0.184534, 0.187349, 0.184284, 0.185047, 0.190009, 0.186085, 0.186978], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 6, 0, 6, 6, 2, 0, 28, 0, 0, 2, 0]': ([0.220047, 0.220101, 0.219394, 0.195768, 0.19575, 0.188305, 0.194963, 0.195976, 0.194692, 0.19007, 0.190429, 0.1883, 0.184472, 0.187688, 0.190134, 0.189862, 0.185789, 0.18419, 0.184814, 0.184247, 0.18417, 0.184817, 0.184858, 0.184534, 0.187349, 0.184284, 0.185047, 0.190009, 0.186085, 0.186978], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		393
        Multiplications: 	140
        Divisions: 		0
        Logical: 		0
        Reads: 			855
        Writes: 		128
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest28.exe __orio_perftest28.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest28.exe  
Program Test Output: 
{'[6, 6, 1, 0, 6, 6, 29, 0, 29, 29, 0, 0, 1]' : 0.22249}
{'[6, 6, 1, 0, 6, 6, 29, 0, 29, 29, 0, 0, 1]' : 0.221006}
{'[6, 6, 1, 0, 6, 6, 29, 0, 29, 29, 0, 0, 1]' : 0.217433}
{'[6, 6, 1, 0, 6, 6, 29, 0, 29, 29, 0, 0, 1]' : 0.222267}
{'[6, 6, 1, 0, 6, 6, 29, 0, 29, 29, 0, 0, 1]' : 0.222325}
{'[6, 6, 1, 0, 6, 6, 29, 0, 29, 29, 0, 0, 1]' : 0.222443}
{'[6, 6, 1, 0, 6, 6, 29, 0, 29, 29, 0, 0, 1]' : 0.217853}
{'[6, 6, 1, 0, 6, 6, 29, 0, 29, 29, 0, 0, 1]' : 0.220132}
{'[6, 6, 1, 0, 6, 6, 29, 0, 29, 29, 0, 0, 1]' : 0.222419}
{'[6, 6, 1, 0, 6, 6, 29, 0, 29, 29, 0, 0, 1]' : 0.222363}
{'[6, 6, 1, 0, 6, 6, 29, 0, 29, 29, 0, 0, 1]' : 0.22131}
{'[6, 6, 1, 0, 6, 6, 29, 0, 29, 29, 0, 0, 1]' : 0.216522}
{'[6, 6, 1, 0, 6, 6, 29, 0, 29, 29, 0, 0, 1]' : 0.222648}
{'[6, 6, 1, 0, 6, 6, 29, 0, 29, 29, 0, 0, 1]' : 0.222262}
{'[6, 6, 1, 0, 6, 6, 29, 0, 29, 29, 0, 0, 1]' : 0.22348}
{'[6, 6, 1, 0, 6, 6, 29, 0, 29, 29, 0, 0, 1]' : 0.218553}
{'[6, 6, 1, 0, 6, 6, 29, 0, 29, 29, 0, 0, 1]' : 0.219403}
{'[6, 6, 1, 0, 6, 6, 29, 0, 29, 29, 0, 0, 1]' : 0.222725}
{'[6, 6, 1, 0, 6, 6, 29, 0, 29, 29, 0, 0, 1]' : 0.224624}
{'[6, 6, 1, 0, 6, 6, 29, 0, 29, 29, 0, 0, 1]' : 0.22614}
{'[6, 6, 1, 0, 6, 6, 29, 0, 29, 29, 0, 0, 1]' : 0.216493}
{'[6, 6, 1, 0, 6, 6, 29, 0, 29, 29, 0, 0, 1]' : 0.215785}
{'[6, 6, 1, 0, 6, 6, 29, 0, 29, 29, 0, 0, 1]' : 0.215861}
{'[6, 6, 1, 0, 6, 6, 29, 0, 29, 29, 0, 0, 1]' : 0.220883}
{'[6, 6, 1, 0, 6, 6, 29, 0, 29, 29, 0, 0, 1]' : 0.218195}
{'[6, 6, 1, 0, 6, 6, 29, 0, 29, 29, 0, 0, 1]' : 0.215612}
{'[6, 6, 1, 0, 6, 6, 29, 0, 29, 29, 0, 0, 1]' : 0.215572}
{'[6, 6, 1, 0, 6, 6, 29, 0, 29, 29, 0, 0, 1]' : 0.21742}
{'[6, 6, 1, 0, 6, 6, 29, 0, 29, 29, 0, 0, 1]' : 0.2224}
{'[6, 6, 1, 0, 6, 6, 29, 0, 29, 29, 0, 0, 1]' : 0.222501}

out:
 ["{'[6, 6, 1, 0, 6, 6, 29, 0, 29, 29, 0, 0, 1]' : 0.22249}", "{'[6, 6, 1, 0, 6, 6, 29, 0, 29, 29, 0, 0, 1]' : 0.221006}", "{'[6, 6, 1, 0, 6, 6, 29, 0, 29, 29, 0, 0, 1]' : 0.217433}", "{'[6, 6, 1, 0, 6, 6, 29, 0, 29, 29, 0, 0, 1]' : 0.222267}", "{'[6, 6, 1, 0, 6, 6, 29, 0, 29, 29, 0, 0, 1]' : 0.222325}", "{'[6, 6, 1, 0, 6, 6, 29, 0, 29, 29, 0, 0, 1]' : 0.222443}", "{'[6, 6, 1, 0, 6, 6, 29, 0, 29, 29, 0, 0, 1]' : 0.217853}", "{'[6, 6, 1, 0, 6, 6, 29, 0, 29, 29, 0, 0, 1]' : 0.220132}", "{'[6, 6, 1, 0, 6, 6, 29, 0, 29, 29, 0, 0, 1]' : 0.222419}", "{'[6, 6, 1, 0, 6, 6, 29, 0, 29, 29, 0, 0, 1]' : 0.222363}", "{'[6, 6, 1, 0, 6, 6, 29, 0, 29, 29, 0, 0, 1]' : 0.22131}", "{'[6, 6, 1, 0, 6, 6, 29, 0, 29, 29, 0, 0, 1]' : 0.216522}", "{'[6, 6, 1, 0, 6, 6, 29, 0, 29, 29, 0, 0, 1]' : 0.222648}", "{'[6, 6, 1, 0, 6, 6, 29, 0, 29, 29, 0, 0, 1]' : 0.222262}", "{'[6, 6, 1, 0, 6, 6, 29, 0, 29, 29, 0, 0, 1]' : 0.22348}", "{'[6, 6, 1, 0, 6, 6, 29, 0, 29, 29, 0, 0, 1]' : 0.218553}", "{'[6, 6, 1, 0, 6, 6, 29, 0, 29, 29, 0, 0, 1]' : 0.219403}", "{'[6, 6, 1, 0, 6, 6, 29, 0, 29, 29, 0, 0, 1]' : 0.222725}", "{'[6, 6, 1, 0, 6, 6, 29, 0, 29, 29, 0, 0, 1]' : 0.224624}", "{'[6, 6, 1, 0, 6, 6, 29, 0, 29, 29, 0, 0, 1]' : 0.22614}", "{'[6, 6, 1, 0, 6, 6, 29, 0, 29, 29, 0, 0, 1]' : 0.216493}", "{'[6, 6, 1, 0, 6, 6, 29, 0, 29, 29, 0, 0, 1]' : 0.215785}", "{'[6, 6, 1, 0, 6, 6, 29, 0, 29, 29, 0, 0, 1]' : 0.215861}", "{'[6, 6, 1, 0, 6, 6, 29, 0, 29, 29, 0, 0, 1]' : 0.220883}", "{'[6, 6, 1, 0, 6, 6, 29, 0, 29, 29, 0, 0, 1]' : 0.218195}", "{'[6, 6, 1, 0, 6, 6, 29, 0, 29, 29, 0, 0, 1]' : 0.215612}", "{'[6, 6, 1, 0, 6, 6, 29, 0, 29, 29, 0, 0, 1]' : 0.215572}", "{'[6, 6, 1, 0, 6, 6, 29, 0, 29, 29, 0, 0, 1]' : 0.21742}", "{'[6, 6, 1, 0, 6, 6, 29, 0, 29, 29, 0, 0, 1]' : 0.2224}", "{'[6, 6, 1, 0, 6, 6, 29, 0, 29, 29, 0, 0, 1]' : 0.222501}"]
returning from 'run': {'[6, 6, 1, 0, 6, 6, 29, 0, 29, 29, 0, 0, 1]': ([0.22249, 0.221006, 0.217433, 0.222267, 0.222325, 0.222443, 0.217853, 0.220132, 0.222419, 0.222363, 0.22131, 0.216522, 0.222648, 0.222262, 0.22348, 0.218553, 0.219403, 0.222725, 0.224624, 0.22614, 0.216493, 0.215785, 0.215861, 0.220883, 0.218195, 0.215612, 0.215572, 0.21742, 0.2224, 0.222501], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 1, 0, 6, 6, 29, 0, 29, 29, 0, 0, 1]': ([0.22249, 0.221006, 0.217433, 0.222267, 0.222325, 0.222443, 0.217853, 0.220132, 0.222419, 0.222363, 0.22131, 0.216522, 0.222648, 0.222262, 0.22348, 0.218553, 0.219403, 0.222725, 0.224624, 0.22614, 0.216493, 0.215785, 0.215861, 0.220883, 0.218195, 0.215612, 0.215572, 0.21742, 0.2224, 0.222501], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	5
        Additions: 		6884
        Multiplications: 	2040
        Divisions: 		0
        Logical: 		0
        Reads: 			10447
        Writes: 		1119
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest29.exe __orio_perftest29.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest29.exe  
Program Test Output: 
{'[6, 6, 6, 0, 6, 6, 29, 28, 0, 0, 0, 0, 2]' : 0.196582}
{'[6, 6, 6, 0, 6, 6, 29, 28, 0, 0, 0, 0, 2]' : 0.180727}
{'[6, 6, 6, 0, 6, 6, 29, 28, 0, 0, 0, 0, 2]' : 0.1705}
{'[6, 6, 6, 0, 6, 6, 29, 28, 0, 0, 0, 0, 2]' : 0.170369}
{'[6, 6, 6, 0, 6, 6, 29, 28, 0, 0, 0, 0, 2]' : 0.170683}
{'[6, 6, 6, 0, 6, 6, 29, 28, 0, 0, 0, 0, 2]' : 0.170461}
{'[6, 6, 6, 0, 6, 6, 29, 28, 0, 0, 0, 0, 2]' : 0.170369}
{'[6, 6, 6, 0, 6, 6, 29, 28, 0, 0, 0, 0, 2]' : 0.170707}
{'[6, 6, 6, 0, 6, 6, 29, 28, 0, 0, 0, 0, 2]' : 0.170377}
{'[6, 6, 6, 0, 6, 6, 29, 28, 0, 0, 0, 0, 2]' : 0.170827}
{'[6, 6, 6, 0, 6, 6, 29, 28, 0, 0, 0, 0, 2]' : 0.170672}
{'[6, 6, 6, 0, 6, 6, 29, 28, 0, 0, 0, 0, 2]' : 0.170989}
{'[6, 6, 6, 0, 6, 6, 29, 28, 0, 0, 0, 0, 2]' : 0.170537}
{'[6, 6, 6, 0, 6, 6, 29, 28, 0, 0, 0, 0, 2]' : 0.170405}
{'[6, 6, 6, 0, 6, 6, 29, 28, 0, 0, 0, 0, 2]' : 0.170377}
{'[6, 6, 6, 0, 6, 6, 29, 28, 0, 0, 0, 0, 2]' : 0.170857}
{'[6, 6, 6, 0, 6, 6, 29, 28, 0, 0, 0, 0, 2]' : 0.170403}
{'[6, 6, 6, 0, 6, 6, 29, 28, 0, 0, 0, 0, 2]' : 0.170383}
{'[6, 6, 6, 0, 6, 6, 29, 28, 0, 0, 0, 0, 2]' : 0.170605}
{'[6, 6, 6, 0, 6, 6, 29, 28, 0, 0, 0, 0, 2]' : 0.170248}
{'[6, 6, 6, 0, 6, 6, 29, 28, 0, 0, 0, 0, 2]' : 0.170576}
{'[6, 6, 6, 0, 6, 6, 29, 28, 0, 0, 0, 0, 2]' : 0.17125}
{'[6, 6, 6, 0, 6, 6, 29, 28, 0, 0, 0, 0, 2]' : 0.170623}
{'[6, 6, 6, 0, 6, 6, 29, 28, 0, 0, 0, 0, 2]' : 0.170383}
{'[6, 6, 6, 0, 6, 6, 29, 28, 0, 0, 0, 0, 2]' : 0.170395}
{'[6, 6, 6, 0, 6, 6, 29, 28, 0, 0, 0, 0, 2]' : 0.170325}
{'[6, 6, 6, 0, 6, 6, 29, 28, 0, 0, 0, 0, 2]' : 0.170709}
{'[6, 6, 6, 0, 6, 6, 29, 28, 0, 0, 0, 0, 2]' : 0.170416}
{'[6, 6, 6, 0, 6, 6, 29, 28, 0, 0, 0, 0, 2]' : 0.170538}
{'[6, 6, 6, 0, 6, 6, 29, 28, 0, 0, 0, 0, 2]' : 0.170726}

out:
 ["{'[6, 6, 6, 0, 6, 6, 29, 28, 0, 0, 0, 0, 2]' : 0.196582}", "{'[6, 6, 6, 0, 6, 6, 29, 28, 0, 0, 0, 0, 2]' : 0.180727}", "{'[6, 6, 6, 0, 6, 6, 29, 28, 0, 0, 0, 0, 2]' : 0.1705}", "{'[6, 6, 6, 0, 6, 6, 29, 28, 0, 0, 0, 0, 2]' : 0.170369}", "{'[6, 6, 6, 0, 6, 6, 29, 28, 0, 0, 0, 0, 2]' : 0.170683}", "{'[6, 6, 6, 0, 6, 6, 29, 28, 0, 0, 0, 0, 2]' : 0.170461}", "{'[6, 6, 6, 0, 6, 6, 29, 28, 0, 0, 0, 0, 2]' : 0.170369}", "{'[6, 6, 6, 0, 6, 6, 29, 28, 0, 0, 0, 0, 2]' : 0.170707}", "{'[6, 6, 6, 0, 6, 6, 29, 28, 0, 0, 0, 0, 2]' : 0.170377}", "{'[6, 6, 6, 0, 6, 6, 29, 28, 0, 0, 0, 0, 2]' : 0.170827}", "{'[6, 6, 6, 0, 6, 6, 29, 28, 0, 0, 0, 0, 2]' : 0.170672}", "{'[6, 6, 6, 0, 6, 6, 29, 28, 0, 0, 0, 0, 2]' : 0.170989}", "{'[6, 6, 6, 0, 6, 6, 29, 28, 0, 0, 0, 0, 2]' : 0.170537}", "{'[6, 6, 6, 0, 6, 6, 29, 28, 0, 0, 0, 0, 2]' : 0.170405}", "{'[6, 6, 6, 0, 6, 6, 29, 28, 0, 0, 0, 0, 2]' : 0.170377}", "{'[6, 6, 6, 0, 6, 6, 29, 28, 0, 0, 0, 0, 2]' : 0.170857}", "{'[6, 6, 6, 0, 6, 6, 29, 28, 0, 0, 0, 0, 2]' : 0.170403}", "{'[6, 6, 6, 0, 6, 6, 29, 28, 0, 0, 0, 0, 2]' : 0.170383}", "{'[6, 6, 6, 0, 6, 6, 29, 28, 0, 0, 0, 0, 2]' : 0.170605}", "{'[6, 6, 6, 0, 6, 6, 29, 28, 0, 0, 0, 0, 2]' : 0.170248}", "{'[6, 6, 6, 0, 6, 6, 29, 28, 0, 0, 0, 0, 2]' : 0.170576}", "{'[6, 6, 6, 0, 6, 6, 29, 28, 0, 0, 0, 0, 2]' : 0.17125}", "{'[6, 6, 6, 0, 6, 6, 29, 28, 0, 0, 0, 0, 2]' : 0.170623}", "{'[6, 6, 6, 0, 6, 6, 29, 28, 0, 0, 0, 0, 2]' : 0.170383}", "{'[6, 6, 6, 0, 6, 6, 29, 28, 0, 0, 0, 0, 2]' : 0.170395}", "{'[6, 6, 6, 0, 6, 6, 29, 28, 0, 0, 0, 0, 2]' : 0.170325}", "{'[6, 6, 6, 0, 6, 6, 29, 28, 0, 0, 0, 0, 2]' : 0.170709}", "{'[6, 6, 6, 0, 6, 6, 29, 28, 0, 0, 0, 0, 2]' : 0.170416}", "{'[6, 6, 6, 0, 6, 6, 29, 28, 0, 0, 0, 0, 2]' : 0.170538}", "{'[6, 6, 6, 0, 6, 6, 29, 28, 0, 0, 0, 0, 2]' : 0.170726}"]
returning from 'run': {'[6, 6, 6, 0, 6, 6, 29, 28, 0, 0, 0, 0, 2]': ([0.196582, 0.180727, 0.1705, 0.170369, 0.170683, 0.170461, 0.170369, 0.170707, 0.170377, 0.170827, 0.170672, 0.170989, 0.170537, 0.170405, 0.170377, 0.170857, 0.170403, 0.170383, 0.170605, 0.170248, 0.170576, 0.17125, 0.170623, 0.170383, 0.170395, 0.170325, 0.170709, 0.170416, 0.170538, 0.170726], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 6, 0, 6, 6, 29, 28, 0, 0, 0, 0, 2]': ([0.196582, 0.180727, 0.1705, 0.170369, 0.170683, 0.170461, 0.170369, 0.170707, 0.170377, 0.170827, 0.170672, 0.170989, 0.170537, 0.170405, 0.170377, 0.170857, 0.170403, 0.170383, 0.170605, 0.170248, 0.170576, 0.17125, 0.170623, 0.170383, 0.170395, 0.170325, 0.170709, 0.170416, 0.170538, 0.170726], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	6
        Additions: 		12866
        Multiplications: 	3840
        Divisions: 		0
        Logical: 		0
        Reads: 			19428
        Writes: 		1998
        Comparisons:		24
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest30.exe __orio_perftest30.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest30.exe  
Program Test Output: 
{'[6, 6, 0, 5, 6, 6, 0, 26, 29, 0, 2, 0, 0]' : 0.297258}
{'[6, 6, 0, 5, 6, 6, 0, 26, 29, 0, 2, 0, 0]' : 0.267417}
{'[6, 6, 0, 5, 6, 6, 0, 26, 29, 0, 2, 0, 0]' : 0.267852}
{'[6, 6, 0, 5, 6, 6, 0, 26, 29, 0, 2, 0, 0]' : 0.267221}
{'[6, 6, 0, 5, 6, 6, 0, 26, 29, 0, 2, 0, 0]' : 0.271903}
{'[6, 6, 0, 5, 6, 6, 0, 26, 29, 0, 2, 0, 0]' : 0.279646}
{'[6, 6, 0, 5, 6, 6, 0, 26, 29, 0, 2, 0, 0]' : 0.280087}
{'[6, 6, 0, 5, 6, 6, 0, 26, 29, 0, 2, 0, 0]' : 0.279892}
{'[6, 6, 0, 5, 6, 6, 0, 26, 29, 0, 2, 0, 0]' : 0.279827}
{'[6, 6, 0, 5, 6, 6, 0, 26, 29, 0, 2, 0, 0]' : 0.279835}
{'[6, 6, 0, 5, 6, 6, 0, 26, 29, 0, 2, 0, 0]' : 0.279489}
{'[6, 6, 0, 5, 6, 6, 0, 26, 29, 0, 2, 0, 0]' : 0.279855}
{'[6, 6, 0, 5, 6, 6, 0, 26, 29, 0, 2, 0, 0]' : 0.279676}
{'[6, 6, 0, 5, 6, 6, 0, 26, 29, 0, 2, 0, 0]' : 0.280069}
{'[6, 6, 0, 5, 6, 6, 0, 26, 29, 0, 2, 0, 0]' : 0.27968}
{'[6, 6, 0, 5, 6, 6, 0, 26, 29, 0, 2, 0, 0]' : 0.279727}
{'[6, 6, 0, 5, 6, 6, 0, 26, 29, 0, 2, 0, 0]' : 0.279789}
{'[6, 6, 0, 5, 6, 6, 0, 26, 29, 0, 2, 0, 0]' : 0.279564}
{'[6, 6, 0, 5, 6, 6, 0, 26, 29, 0, 2, 0, 0]' : 0.280064}
{'[6, 6, 0, 5, 6, 6, 0, 26, 29, 0, 2, 0, 0]' : 0.279566}
{'[6, 6, 0, 5, 6, 6, 0, 26, 29, 0, 2, 0, 0]' : 0.280137}
{'[6, 6, 0, 5, 6, 6, 0, 26, 29, 0, 2, 0, 0]' : 0.27953}
{'[6, 6, 0, 5, 6, 6, 0, 26, 29, 0, 2, 0, 0]' : 0.27995}
{'[6, 6, 0, 5, 6, 6, 0, 26, 29, 0, 2, 0, 0]' : 0.280021}
{'[6, 6, 0, 5, 6, 6, 0, 26, 29, 0, 2, 0, 0]' : 0.279629}
{'[6, 6, 0, 5, 6, 6, 0, 26, 29, 0, 2, 0, 0]' : 0.279818}
{'[6, 6, 0, 5, 6, 6, 0, 26, 29, 0, 2, 0, 0]' : 0.279958}
{'[6, 6, 0, 5, 6, 6, 0, 26, 29, 0, 2, 0, 0]' : 0.280104}
{'[6, 6, 0, 5, 6, 6, 0, 26, 29, 0, 2, 0, 0]' : 0.279711}
{'[6, 6, 0, 5, 6, 6, 0, 26, 29, 0, 2, 0, 0]' : 0.279691}

out:
 ["{'[6, 6, 0, 5, 6, 6, 0, 26, 29, 0, 2, 0, 0]' : 0.297258}", "{'[6, 6, 0, 5, 6, 6, 0, 26, 29, 0, 2, 0, 0]' : 0.267417}", "{'[6, 6, 0, 5, 6, 6, 0, 26, 29, 0, 2, 0, 0]' : 0.267852}", "{'[6, 6, 0, 5, 6, 6, 0, 26, 29, 0, 2, 0, 0]' : 0.267221}", "{'[6, 6, 0, 5, 6, 6, 0, 26, 29, 0, 2, 0, 0]' : 0.271903}", "{'[6, 6, 0, 5, 6, 6, 0, 26, 29, 0, 2, 0, 0]' : 0.279646}", "{'[6, 6, 0, 5, 6, 6, 0, 26, 29, 0, 2, 0, 0]' : 0.280087}", "{'[6, 6, 0, 5, 6, 6, 0, 26, 29, 0, 2, 0, 0]' : 0.279892}", "{'[6, 6, 0, 5, 6, 6, 0, 26, 29, 0, 2, 0, 0]' : 0.279827}", "{'[6, 6, 0, 5, 6, 6, 0, 26, 29, 0, 2, 0, 0]' : 0.279835}", "{'[6, 6, 0, 5, 6, 6, 0, 26, 29, 0, 2, 0, 0]' : 0.279489}", "{'[6, 6, 0, 5, 6, 6, 0, 26, 29, 0, 2, 0, 0]' : 0.279855}", "{'[6, 6, 0, 5, 6, 6, 0, 26, 29, 0, 2, 0, 0]' : 0.279676}", "{'[6, 6, 0, 5, 6, 6, 0, 26, 29, 0, 2, 0, 0]' : 0.280069}", "{'[6, 6, 0, 5, 6, 6, 0, 26, 29, 0, 2, 0, 0]' : 0.27968}", "{'[6, 6, 0, 5, 6, 6, 0, 26, 29, 0, 2, 0, 0]' : 0.279727}", "{'[6, 6, 0, 5, 6, 6, 0, 26, 29, 0, 2, 0, 0]' : 0.279789}", "{'[6, 6, 0, 5, 6, 6, 0, 26, 29, 0, 2, 0, 0]' : 0.279564}", "{'[6, 6, 0, 5, 6, 6, 0, 26, 29, 0, 2, 0, 0]' : 0.280064}", "{'[6, 6, 0, 5, 6, 6, 0, 26, 29, 0, 2, 0, 0]' : 0.279566}", "{'[6, 6, 0, 5, 6, 6, 0, 26, 29, 0, 2, 0, 0]' : 0.280137}", "{'[6, 6, 0, 5, 6, 6, 0, 26, 29, 0, 2, 0, 0]' : 0.27953}", "{'[6, 6, 0, 5, 6, 6, 0, 26, 29, 0, 2, 0, 0]' : 0.27995}", "{'[6, 6, 0, 5, 6, 6, 0, 26, 29, 0, 2, 0, 0]' : 0.280021}", "{'[6, 6, 0, 5, 6, 6, 0, 26, 29, 0, 2, 0, 0]' : 0.279629}", "{'[6, 6, 0, 5, 6, 6, 0, 26, 29, 0, 2, 0, 0]' : 0.279818}", "{'[6, 6, 0, 5, 6, 6, 0, 26, 29, 0, 2, 0, 0]' : 0.279958}", "{'[6, 6, 0, 5, 6, 6, 0, 26, 29, 0, 2, 0, 0]' : 0.280104}", "{'[6, 6, 0, 5, 6, 6, 0, 26, 29, 0, 2, 0, 0]' : 0.279711}", "{'[6, 6, 0, 5, 6, 6, 0, 26, 29, 0, 2, 0, 0]' : 0.279691}"]
returning from 'run': {'[6, 6, 0, 5, 6, 6, 0, 26, 29, 0, 2, 0, 0]': ([0.297258, 0.267417, 0.267852, 0.267221, 0.271903, 0.279646, 0.280087, 0.279892, 0.279827, 0.279835, 0.279489, 0.279855, 0.279676, 0.280069, 0.27968, 0.279727, 0.279789, 0.279564, 0.280064, 0.279566, 0.280137, 0.27953, 0.27995, 0.280021, 0.279629, 0.279818, 0.279958, 0.280104, 0.279711, 0.279691], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 0, 5, 6, 6, 0, 26, 29, 0, 2, 0, 0]': ([0.297258, 0.267417, 0.267852, 0.267221, 0.271903, 0.279646, 0.280087, 0.279892, 0.279827, 0.279835, 0.279489, 0.279855, 0.279676, 0.280069, 0.27968, 0.279727, 0.279789, 0.279564, 0.280064, 0.279566, 0.280137, 0.27953, 0.27995, 0.280021, 0.279629, 0.279818, 0.279958, 0.280104, 0.279711, 0.279691], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		367
        Multiplications: 	132
        Divisions: 		0
        Logical: 		0
        Reads: 			814
        Writes: 		122
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest31.exe __orio_perftest31.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest31.exe  
Program Test Output: 
{'[6, 6, 6, 6, 6, 6, 25, 0, 3, 27, 0, 2, 0]' : 0.206893}
{'[6, 6, 6, 6, 6, 6, 25, 0, 3, 27, 0, 2, 0]' : 0.206658}
{'[6, 6, 6, 6, 6, 6, 25, 0, 3, 27, 0, 2, 0]' : 0.192429}
{'[6, 6, 6, 6, 6, 6, 25, 0, 3, 27, 0, 2, 0]' : 0.179445}
{'[6, 6, 6, 6, 6, 6, 25, 0, 3, 27, 0, 2, 0]' : 0.179419}
{'[6, 6, 6, 6, 6, 6, 25, 0, 3, 27, 0, 2, 0]' : 0.179194}
{'[6, 6, 6, 6, 6, 6, 25, 0, 3, 27, 0, 2, 0]' : 0.1793}
{'[6, 6, 6, 6, 6, 6, 25, 0, 3, 27, 0, 2, 0]' : 0.179358}
{'[6, 6, 6, 6, 6, 6, 25, 0, 3, 27, 0, 2, 0]' : 0.179494}
{'[6, 6, 6, 6, 6, 6, 25, 0, 3, 27, 0, 2, 0]' : 0.179373}
{'[6, 6, 6, 6, 6, 6, 25, 0, 3, 27, 0, 2, 0]' : 0.179623}
{'[6, 6, 6, 6, 6, 6, 25, 0, 3, 27, 0, 2, 0]' : 0.179334}
{'[6, 6, 6, 6, 6, 6, 25, 0, 3, 27, 0, 2, 0]' : 0.179296}
{'[6, 6, 6, 6, 6, 6, 25, 0, 3, 27, 0, 2, 0]' : 0.179349}
{'[6, 6, 6, 6, 6, 6, 25, 0, 3, 27, 0, 2, 0]' : 0.179248}
{'[6, 6, 6, 6, 6, 6, 25, 0, 3, 27, 0, 2, 0]' : 0.179379}
{'[6, 6, 6, 6, 6, 6, 25, 0, 3, 27, 0, 2, 0]' : 0.179668}
{'[6, 6, 6, 6, 6, 6, 25, 0, 3, 27, 0, 2, 0]' : 0.179463}
{'[6, 6, 6, 6, 6, 6, 25, 0, 3, 27, 0, 2, 0]' : 0.179249}
{'[6, 6, 6, 6, 6, 6, 25, 0, 3, 27, 0, 2, 0]' : 0.179469}
{'[6, 6, 6, 6, 6, 6, 25, 0, 3, 27, 0, 2, 0]' : 0.179383}
{'[6, 6, 6, 6, 6, 6, 25, 0, 3, 27, 0, 2, 0]' : 0.17932}
{'[6, 6, 6, 6, 6, 6, 25, 0, 3, 27, 0, 2, 0]' : 0.179576}
{'[6, 6, 6, 6, 6, 6, 25, 0, 3, 27, 0, 2, 0]' : 0.179372}
{'[6, 6, 6, 6, 6, 6, 25, 0, 3, 27, 0, 2, 0]' : 0.179251}
{'[6, 6, 6, 6, 6, 6, 25, 0, 3, 27, 0, 2, 0]' : 0.177707}
{'[6, 6, 6, 6, 6, 6, 25, 0, 3, 27, 0, 2, 0]' : 0.17745}
{'[6, 6, 6, 6, 6, 6, 25, 0, 3, 27, 0, 2, 0]' : 0.179357}
{'[6, 6, 6, 6, 6, 6, 25, 0, 3, 27, 0, 2, 0]' : 0.179482}
{'[6, 6, 6, 6, 6, 6, 25, 0, 3, 27, 0, 2, 0]' : 0.179459}

out:
 ["{'[6, 6, 6, 6, 6, 6, 25, 0, 3, 27, 0, 2, 0]' : 0.206893}", "{'[6, 6, 6, 6, 6, 6, 25, 0, 3, 27, 0, 2, 0]' : 0.206658}", "{'[6, 6, 6, 6, 6, 6, 25, 0, 3, 27, 0, 2, 0]' : 0.192429}", "{'[6, 6, 6, 6, 6, 6, 25, 0, 3, 27, 0, 2, 0]' : 0.179445}", "{'[6, 6, 6, 6, 6, 6, 25, 0, 3, 27, 0, 2, 0]' : 0.179419}", "{'[6, 6, 6, 6, 6, 6, 25, 0, 3, 27, 0, 2, 0]' : 0.179194}", "{'[6, 6, 6, 6, 6, 6, 25, 0, 3, 27, 0, 2, 0]' : 0.1793}", "{'[6, 6, 6, 6, 6, 6, 25, 0, 3, 27, 0, 2, 0]' : 0.179358}", "{'[6, 6, 6, 6, 6, 6, 25, 0, 3, 27, 0, 2, 0]' : 0.179494}", "{'[6, 6, 6, 6, 6, 6, 25, 0, 3, 27, 0, 2, 0]' : 0.179373}", "{'[6, 6, 6, 6, 6, 6, 25, 0, 3, 27, 0, 2, 0]' : 0.179623}", "{'[6, 6, 6, 6, 6, 6, 25, 0, 3, 27, 0, 2, 0]' : 0.179334}", "{'[6, 6, 6, 6, 6, 6, 25, 0, 3, 27, 0, 2, 0]' : 0.179296}", "{'[6, 6, 6, 6, 6, 6, 25, 0, 3, 27, 0, 2, 0]' : 0.179349}", "{'[6, 6, 6, 6, 6, 6, 25, 0, 3, 27, 0, 2, 0]' : 0.179248}", "{'[6, 6, 6, 6, 6, 6, 25, 0, 3, 27, 0, 2, 0]' : 0.179379}", "{'[6, 6, 6, 6, 6, 6, 25, 0, 3, 27, 0, 2, 0]' : 0.179668}", "{'[6, 6, 6, 6, 6, 6, 25, 0, 3, 27, 0, 2, 0]' : 0.179463}", "{'[6, 6, 6, 6, 6, 6, 25, 0, 3, 27, 0, 2, 0]' : 0.179249}", "{'[6, 6, 6, 6, 6, 6, 25, 0, 3, 27, 0, 2, 0]' : 0.179469}", "{'[6, 6, 6, 6, 6, 6, 25, 0, 3, 27, 0, 2, 0]' : 0.179383}", "{'[6, 6, 6, 6, 6, 6, 25, 0, 3, 27, 0, 2, 0]' : 0.17932}", "{'[6, 6, 6, 6, 6, 6, 25, 0, 3, 27, 0, 2, 0]' : 0.179576}", "{'[6, 6, 6, 6, 6, 6, 25, 0, 3, 27, 0, 2, 0]' : 0.179372}", "{'[6, 6, 6, 6, 6, 6, 25, 0, 3, 27, 0, 2, 0]' : 0.179251}", "{'[6, 6, 6, 6, 6, 6, 25, 0, 3, 27, 0, 2, 0]' : 0.177707}", "{'[6, 6, 6, 6, 6, 6, 25, 0, 3, 27, 0, 2, 0]' : 0.17745}", "{'[6, 6, 6, 6, 6, 6, 25, 0, 3, 27, 0, 2, 0]' : 0.179357}", "{'[6, 6, 6, 6, 6, 6, 25, 0, 3, 27, 0, 2, 0]' : 0.179482}", "{'[6, 6, 6, 6, 6, 6, 25, 0, 3, 27, 0, 2, 0]' : 0.179459}"]
returning from 'run': {'[6, 6, 6, 6, 6, 6, 25, 0, 3, 27, 0, 2, 0]': ([0.206893, 0.206658, 0.192429, 0.179445, 0.179419, 0.179194, 0.1793, 0.179358, 0.179494, 0.179373, 0.179623, 0.179334, 0.179296, 0.179349, 0.179248, 0.179379, 0.179668, 0.179463, 0.179249, 0.179469, 0.179383, 0.17932, 0.179576, 0.179372, 0.179251, 0.177707, 0.17745, 0.179357, 0.179482, 0.179459], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 6, 6, 6, 6, 25, 0, 3, 27, 0, 2, 0]': ([0.206893, 0.206658, 0.192429, 0.179445, 0.179419, 0.179194, 0.1793, 0.179358, 0.179494, 0.179373, 0.179623, 0.179334, 0.179296, 0.179349, 0.179248, 0.179379, 0.179668, 0.179463, 0.179249, 0.179469, 0.179383, 0.17932, 0.179576, 0.179372, 0.179251, 0.177707, 0.17745, 0.179357, 0.179482, 0.179459], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	25
        Max loop nest depth: 	6
        Additions: 		440
        Multiplications: 	152
        Divisions: 		0
        Logical: 		0
        Reads: 			999
        Writes: 		164
        Comparisons:		25
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest32.exe __orio_perftest32.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest32.exe  
Program Test Output: 
{'[6, 6, 2, 6, 6, 6, 29, 4, 0, 0, 2, 0, 0]' : 0.208094}
{'[6, 6, 2, 6, 6, 6, 29, 4, 0, 0, 2, 0, 0]' : 0.210025}
{'[6, 6, 2, 6, 6, 6, 29, 4, 0, 0, 2, 0, 0]' : 0.199144}
{'[6, 6, 2, 6, 6, 6, 29, 4, 0, 0, 2, 0, 0]' : 0.190688}
{'[6, 6, 2, 6, 6, 6, 29, 4, 0, 0, 2, 0, 0]' : 0.192114}
{'[6, 6, 2, 6, 6, 6, 29, 4, 0, 0, 2, 0, 0]' : 0.19222}
{'[6, 6, 2, 6, 6, 6, 29, 4, 0, 0, 2, 0, 0]' : 0.192631}
{'[6, 6, 2, 6, 6, 6, 29, 4, 0, 0, 2, 0, 0]' : 0.19124}
{'[6, 6, 2, 6, 6, 6, 29, 4, 0, 0, 2, 0, 0]' : 0.193432}
{'[6, 6, 2, 6, 6, 6, 29, 4, 0, 0, 2, 0, 0]' : 0.191791}
{'[6, 6, 2, 6, 6, 6, 29, 4, 0, 0, 2, 0, 0]' : 0.191946}
{'[6, 6, 2, 6, 6, 6, 29, 4, 0, 0, 2, 0, 0]' : 0.191658}
{'[6, 6, 2, 6, 6, 6, 29, 4, 0, 0, 2, 0, 0]' : 0.19192}
{'[6, 6, 2, 6, 6, 6, 29, 4, 0, 0, 2, 0, 0]' : 0.18814}
{'[6, 6, 2, 6, 6, 6, 29, 4, 0, 0, 2, 0, 0]' : 0.188707}
{'[6, 6, 2, 6, 6, 6, 29, 4, 0, 0, 2, 0, 0]' : 0.190735}
{'[6, 6, 2, 6, 6, 6, 29, 4, 0, 0, 2, 0, 0]' : 0.19292}
{'[6, 6, 2, 6, 6, 6, 29, 4, 0, 0, 2, 0, 0]' : 0.19327}
{'[6, 6, 2, 6, 6, 6, 29, 4, 0, 0, 2, 0, 0]' : 0.187856}
{'[6, 6, 2, 6, 6, 6, 29, 4, 0, 0, 2, 0, 0]' : 0.186503}
{'[6, 6, 2, 6, 6, 6, 29, 4, 0, 0, 2, 0, 0]' : 0.188383}
{'[6, 6, 2, 6, 6, 6, 29, 4, 0, 0, 2, 0, 0]' : 0.185769}
{'[6, 6, 2, 6, 6, 6, 29, 4, 0, 0, 2, 0, 0]' : 0.188701}
{'[6, 6, 2, 6, 6, 6, 29, 4, 0, 0, 2, 0, 0]' : 0.191084}
{'[6, 6, 2, 6, 6, 6, 29, 4, 0, 0, 2, 0, 0]' : 0.191645}
{'[6, 6, 2, 6, 6, 6, 29, 4, 0, 0, 2, 0, 0]' : 0.189729}
{'[6, 6, 2, 6, 6, 6, 29, 4, 0, 0, 2, 0, 0]' : 0.192312}
{'[6, 6, 2, 6, 6, 6, 29, 4, 0, 0, 2, 0, 0]' : 0.19188}
{'[6, 6, 2, 6, 6, 6, 29, 4, 0, 0, 2, 0, 0]' : 0.190538}
{'[6, 6, 2, 6, 6, 6, 29, 4, 0, 0, 2, 0, 0]' : 0.18899}

out:
 ["{'[6, 6, 2, 6, 6, 6, 29, 4, 0, 0, 2, 0, 0]' : 0.208094}", "{'[6, 6, 2, 6, 6, 6, 29, 4, 0, 0, 2, 0, 0]' : 0.210025}", "{'[6, 6, 2, 6, 6, 6, 29, 4, 0, 0, 2, 0, 0]' : 0.199144}", "{'[6, 6, 2, 6, 6, 6, 29, 4, 0, 0, 2, 0, 0]' : 0.190688}", "{'[6, 6, 2, 6, 6, 6, 29, 4, 0, 0, 2, 0, 0]' : 0.192114}", "{'[6, 6, 2, 6, 6, 6, 29, 4, 0, 0, 2, 0, 0]' : 0.19222}", "{'[6, 6, 2, 6, 6, 6, 29, 4, 0, 0, 2, 0, 0]' : 0.192631}", "{'[6, 6, 2, 6, 6, 6, 29, 4, 0, 0, 2, 0, 0]' : 0.19124}", "{'[6, 6, 2, 6, 6, 6, 29, 4, 0, 0, 2, 0, 0]' : 0.193432}", "{'[6, 6, 2, 6, 6, 6, 29, 4, 0, 0, 2, 0, 0]' : 0.191791}", "{'[6, 6, 2, 6, 6, 6, 29, 4, 0, 0, 2, 0, 0]' : 0.191946}", "{'[6, 6, 2, 6, 6, 6, 29, 4, 0, 0, 2, 0, 0]' : 0.191658}", "{'[6, 6, 2, 6, 6, 6, 29, 4, 0, 0, 2, 0, 0]' : 0.19192}", "{'[6, 6, 2, 6, 6, 6, 29, 4, 0, 0, 2, 0, 0]' : 0.18814}", "{'[6, 6, 2, 6, 6, 6, 29, 4, 0, 0, 2, 0, 0]' : 0.188707}", "{'[6, 6, 2, 6, 6, 6, 29, 4, 0, 0, 2, 0, 0]' : 0.190735}", "{'[6, 6, 2, 6, 6, 6, 29, 4, 0, 0, 2, 0, 0]' : 0.19292}", "{'[6, 6, 2, 6, 6, 6, 29, 4, 0, 0, 2, 0, 0]' : 0.19327}", "{'[6, 6, 2, 6, 6, 6, 29, 4, 0, 0, 2, 0, 0]' : 0.187856}", "{'[6, 6, 2, 6, 6, 6, 29, 4, 0, 0, 2, 0, 0]' : 0.186503}", "{'[6, 6, 2, 6, 6, 6, 29, 4, 0, 0, 2, 0, 0]' : 0.188383}", "{'[6, 6, 2, 6, 6, 6, 29, 4, 0, 0, 2, 0, 0]' : 0.185769}", "{'[6, 6, 2, 6, 6, 6, 29, 4, 0, 0, 2, 0, 0]' : 0.188701}", "{'[6, 6, 2, 6, 6, 6, 29, 4, 0, 0, 2, 0, 0]' : 0.191084}", "{'[6, 6, 2, 6, 6, 6, 29, 4, 0, 0, 2, 0, 0]' : 0.191645}", "{'[6, 6, 2, 6, 6, 6, 29, 4, 0, 0, 2, 0, 0]' : 0.189729}", "{'[6, 6, 2, 6, 6, 6, 29, 4, 0, 0, 2, 0, 0]' : 0.192312}", "{'[6, 6, 2, 6, 6, 6, 29, 4, 0, 0, 2, 0, 0]' : 0.19188}", "{'[6, 6, 2, 6, 6, 6, 29, 4, 0, 0, 2, 0, 0]' : 0.190538}", "{'[6, 6, 2, 6, 6, 6, 29, 4, 0, 0, 2, 0, 0]' : 0.18899}"]
returning from 'run': {'[6, 6, 2, 6, 6, 6, 29, 4, 0, 0, 2, 0, 0]': ([0.208094, 0.210025, 0.199144, 0.190688, 0.192114, 0.19222, 0.192631, 0.19124, 0.193432, 0.191791, 0.191946, 0.191658, 0.19192, 0.18814, 0.188707, 0.190735, 0.19292, 0.19327, 0.187856, 0.186503, 0.188383, 0.185769, 0.188701, 0.191084, 0.191645, 0.189729, 0.192312, 0.19188, 0.190538, 0.18899], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 2, 6, 6, 6, 29, 4, 0, 0, 2, 0, 0]': ([0.208094, 0.210025, 0.199144, 0.190688, 0.192114, 0.19222, 0.192631, 0.19124, 0.193432, 0.191791, 0.191946, 0.191658, 0.19192, 0.18814, 0.188707, 0.190735, 0.19292, 0.19327, 0.187856, 0.186503, 0.188383, 0.185769, 0.188701, 0.191084, 0.191645, 0.189729, 0.192312, 0.19188, 0.190538, 0.18899], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	27
        Max loop nest depth: 	5
        Additions: 		13564
        Multiplications: 	4032
        Divisions: 		0
        Logical: 		0
        Reads: 			20429
        Writes: 		2110
        Comparisons:		27
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest33.exe __orio_perftest33.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest33.exe  
Program Test Output: 
{'[6, 6, 6, 0, 6, 6, 6, 29, 0, 29, 2, 0, 0]' : 0.221064}
{'[6, 6, 6, 0, 6, 6, 6, 29, 0, 29, 2, 0, 0]' : 0.199508}
{'[6, 6, 6, 0, 6, 6, 6, 29, 0, 29, 2, 0, 0]' : 0.192532}
{'[6, 6, 6, 0, 6, 6, 6, 29, 0, 29, 2, 0, 0]' : 0.192382}
{'[6, 6, 6, 0, 6, 6, 6, 29, 0, 29, 2, 0, 0]' : 0.192977}
{'[6, 6, 6, 0, 6, 6, 6, 29, 0, 29, 2, 0, 0]' : 0.19221}
{'[6, 6, 6, 0, 6, 6, 6, 29, 0, 29, 2, 0, 0]' : 0.191767}
{'[6, 6, 6, 0, 6, 6, 6, 29, 0, 29, 2, 0, 0]' : 0.193174}
{'[6, 6, 6, 0, 6, 6, 6, 29, 0, 29, 2, 0, 0]' : 0.193386}
{'[6, 6, 6, 0, 6, 6, 6, 29, 0, 29, 2, 0, 0]' : 0.192179}
{'[6, 6, 6, 0, 6, 6, 6, 29, 0, 29, 2, 0, 0]' : 0.192609}
{'[6, 6, 6, 0, 6, 6, 6, 29, 0, 29, 2, 0, 0]' : 0.192478}
{'[6, 6, 6, 0, 6, 6, 6, 29, 0, 29, 2, 0, 0]' : 0.191653}
{'[6, 6, 6, 0, 6, 6, 6, 29, 0, 29, 2, 0, 0]' : 0.192789}
{'[6, 6, 6, 0, 6, 6, 6, 29, 0, 29, 2, 0, 0]' : 0.192387}
{'[6, 6, 6, 0, 6, 6, 6, 29, 0, 29, 2, 0, 0]' : 0.192753}
{'[6, 6, 6, 0, 6, 6, 6, 29, 0, 29, 2, 0, 0]' : 0.192564}
{'[6, 6, 6, 0, 6, 6, 6, 29, 0, 29, 2, 0, 0]' : 0.192373}
{'[6, 6, 6, 0, 6, 6, 6, 29, 0, 29, 2, 0, 0]' : 0.192619}
{'[6, 6, 6, 0, 6, 6, 6, 29, 0, 29, 2, 0, 0]' : 0.192239}
{'[6, 6, 6, 0, 6, 6, 6, 29, 0, 29, 2, 0, 0]' : 0.19313}
{'[6, 6, 6, 0, 6, 6, 6, 29, 0, 29, 2, 0, 0]' : 0.192516}
{'[6, 6, 6, 0, 6, 6, 6, 29, 0, 29, 2, 0, 0]' : 0.191985}
{'[6, 6, 6, 0, 6, 6, 6, 29, 0, 29, 2, 0, 0]' : 0.191842}
{'[6, 6, 6, 0, 6, 6, 6, 29, 0, 29, 2, 0, 0]' : 0.191865}
{'[6, 6, 6, 0, 6, 6, 6, 29, 0, 29, 2, 0, 0]' : 0.192014}
{'[6, 6, 6, 0, 6, 6, 6, 29, 0, 29, 2, 0, 0]' : 0.192969}
{'[6, 6, 6, 0, 6, 6, 6, 29, 0, 29, 2, 0, 0]' : 0.192343}
{'[6, 6, 6, 0, 6, 6, 6, 29, 0, 29, 2, 0, 0]' : 0.192347}
{'[6, 6, 6, 0, 6, 6, 6, 29, 0, 29, 2, 0, 0]' : 0.192411}

out:
 ["{'[6, 6, 6, 0, 6, 6, 6, 29, 0, 29, 2, 0, 0]' : 0.221064}", "{'[6, 6, 6, 0, 6, 6, 6, 29, 0, 29, 2, 0, 0]' : 0.199508}", "{'[6, 6, 6, 0, 6, 6, 6, 29, 0, 29, 2, 0, 0]' : 0.192532}", "{'[6, 6, 6, 0, 6, 6, 6, 29, 0, 29, 2, 0, 0]' : 0.192382}", "{'[6, 6, 6, 0, 6, 6, 6, 29, 0, 29, 2, 0, 0]' : 0.192977}", "{'[6, 6, 6, 0, 6, 6, 6, 29, 0, 29, 2, 0, 0]' : 0.19221}", "{'[6, 6, 6, 0, 6, 6, 6, 29, 0, 29, 2, 0, 0]' : 0.191767}", "{'[6, 6, 6, 0, 6, 6, 6, 29, 0, 29, 2, 0, 0]' : 0.193174}", "{'[6, 6, 6, 0, 6, 6, 6, 29, 0, 29, 2, 0, 0]' : 0.193386}", "{'[6, 6, 6, 0, 6, 6, 6, 29, 0, 29, 2, 0, 0]' : 0.192179}", "{'[6, 6, 6, 0, 6, 6, 6, 29, 0, 29, 2, 0, 0]' : 0.192609}", "{'[6, 6, 6, 0, 6, 6, 6, 29, 0, 29, 2, 0, 0]' : 0.192478}", "{'[6, 6, 6, 0, 6, 6, 6, 29, 0, 29, 2, 0, 0]' : 0.191653}", "{'[6, 6, 6, 0, 6, 6, 6, 29, 0, 29, 2, 0, 0]' : 0.192789}", "{'[6, 6, 6, 0, 6, 6, 6, 29, 0, 29, 2, 0, 0]' : 0.192387}", "{'[6, 6, 6, 0, 6, 6, 6, 29, 0, 29, 2, 0, 0]' : 0.192753}", "{'[6, 6, 6, 0, 6, 6, 6, 29, 0, 29, 2, 0, 0]' : 0.192564}", "{'[6, 6, 6, 0, 6, 6, 6, 29, 0, 29, 2, 0, 0]' : 0.192373}", "{'[6, 6, 6, 0, 6, 6, 6, 29, 0, 29, 2, 0, 0]' : 0.192619}", "{'[6, 6, 6, 0, 6, 6, 6, 29, 0, 29, 2, 0, 0]' : 0.192239}", "{'[6, 6, 6, 0, 6, 6, 6, 29, 0, 29, 2, 0, 0]' : 0.19313}", "{'[6, 6, 6, 0, 6, 6, 6, 29, 0, 29, 2, 0, 0]' : 0.192516}", "{'[6, 6, 6, 0, 6, 6, 6, 29, 0, 29, 2, 0, 0]' : 0.191985}", "{'[6, 6, 6, 0, 6, 6, 6, 29, 0, 29, 2, 0, 0]' : 0.191842}", "{'[6, 6, 6, 0, 6, 6, 6, 29, 0, 29, 2, 0, 0]' : 0.191865}", "{'[6, 6, 6, 0, 6, 6, 6, 29, 0, 29, 2, 0, 0]' : 0.192014}", "{'[6, 6, 6, 0, 6, 6, 6, 29, 0, 29, 2, 0, 0]' : 0.192969}", "{'[6, 6, 6, 0, 6, 6, 6, 29, 0, 29, 2, 0, 0]' : 0.192343}", "{'[6, 6, 6, 0, 6, 6, 6, 29, 0, 29, 2, 0, 0]' : 0.192347}", "{'[6, 6, 6, 0, 6, 6, 6, 29, 0, 29, 2, 0, 0]' : 0.192411}"]
returning from 'run': {'[6, 6, 6, 0, 6, 6, 6, 29, 0, 29, 2, 0, 0]': ([0.221064, 0.199508, 0.192532, 0.192382, 0.192977, 0.19221, 0.191767, 0.193174, 0.193386, 0.192179, 0.192609, 0.192478, 0.191653, 0.192789, 0.192387, 0.192753, 0.192564, 0.192373, 0.192619, 0.192239, 0.19313, 0.192516, 0.191985, 0.191842, 0.191865, 0.192014, 0.192969, 0.192343, 0.192347, 0.192411], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 6, 0, 6, 6, 6, 29, 0, 29, 2, 0, 0]': ([0.221064, 0.199508, 0.192532, 0.192382, 0.192977, 0.19221, 0.191767, 0.193174, 0.193386, 0.192179, 0.192609, 0.192478, 0.191653, 0.192789, 0.192387, 0.192753, 0.192564, 0.192373, 0.192619, 0.192239, 0.19313, 0.192516, 0.191985, 0.191842, 0.191865, 0.192014, 0.192969, 0.192343, 0.192347, 0.192411], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Complete design, with measurements:
      T1_K T2_I U1_I U_I U_J U_K RT_I RT_J RT_K cost_mean
4481     6    6    1   0  29  20    0    0    0 0.1831437
5726     6    0    1   3  21   0    0    0    2 0.1267909
9267     3    0   29   0  26  28    2    0    0 0.2946252
9794     0    0    2   2   0   1    0    0    0 0.1614287
13031    6    5   27  29  29   0    0    0    0 0.2666717
15397    4    5    2  29   0  29    0    1    1 0.1958765
16033    0    0   28  29   9   0    0    2    0 0.2262736
16359    6    0    2   0  28   0    0    2    0 0.1914374
17083    1    0   29   0  29  29    0    0    1 0.2203040
19509    6    0   29  28   0   0    0    0    2 0.1717673
21509    0    5    0  26  29   0    2    0    0 0.2788989
25599    6    6   25   0   3  27    0    2    0 0.1815333
26009    2    6   29   4   0   0    2    0    0 0.1921355
26075    6    0    6  29   0  29    2    0    0 0.1936355

Heteroscedasticity Test p-value: 0.395498122231
Regression Step:            Df   Sum Sq  Mean Sq F value Pr(>F)  
T1_K         1 0.003430 0.003430   4.595 0.0987 .
T2_I         1 0.000986 0.000986   1.321 0.3145  
U1_I         1 0.002808 0.002808   3.761 0.1245  
U_I          1 0.001639 0.001639   2.196 0.2125  
U_J          1 0.010484 0.010484  14.042 0.0200 *
U_K          1 0.001877 0.001877   2.514 0.1881  
RT_I         1 0.002862 0.002862   3.834 0.1218  
RT_J         1 0.000653 0.000653   0.875 0.4025  
RT_K         1 0.000951 0.000951   1.274 0.3221  
Residuals    4 0.002987 0.000747                 
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Predicting Best
Generating valid search space of size 28000 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Tested coordinates: 110000
Tested coordinates: 120000
Tested coordinates: 130000
Tested coordinates: 140000
Tested coordinates: 150000
Tested coordinates: 160000
Tested coordinates: 170000
Tested coordinates: 180000
Tested coordinates: 190000
Tested coordinates: 200000
Tested coordinates: 210000
Tested coordinates: 220000
Tested coordinates: 230000
Tested coordinates: 240000
Tested coordinates: 250000
Tested coordinates: 260000
Tested coordinates: 270000
Valid coordinates: 5600
Tested coordinates: 280000
Tested coordinates: 290000
Tested coordinates: 300000
Tested coordinates: 310000
Tested coordinates: 320000
Tested coordinates: 330000
Tested coordinates: 340000
Tested coordinates: 350000
Tested coordinates: 360000
Tested coordinates: 370000
Tested coordinates: 380000
Tested coordinates: 390000
Tested coordinates: 400000
Tested coordinates: 410000
Tested coordinates: 420000
Tested coordinates: 430000
Tested coordinates: 440000
Tested coordinates: 450000
Tested coordinates: 460000
Tested coordinates: 470000
Tested coordinates: 480000
Tested coordinates: 490000
Tested coordinates: 500000
Tested coordinates: 510000
Tested coordinates: 520000
Tested coordinates: 530000
Tested coordinates: 540000
Valid coordinates: 11200
Tested coordinates: 550000
Tested coordinates: 560000
Tested coordinates: 570000
Tested coordinates: 580000
Tested coordinates: 590000
Tested coordinates: 600000
Tested coordinates: 610000
Tested coordinates: 620000
Tested coordinates: 630000
Tested coordinates: 640000
Tested coordinates: 650000
Tested coordinates: 660000
Tested coordinates: 670000
Tested coordinates: 680000
Tested coordinates: 690000
Tested coordinates: 700000
Tested coordinates: 710000
Tested coordinates: 720000
Tested coordinates: 730000
Tested coordinates: 740000
Tested coordinates: 750000
Tested coordinates: 760000
Tested coordinates: 770000
Tested coordinates: 780000
Tested coordinates: 790000
Tested coordinates: 800000
Tested coordinates: 810000
Valid coordinates: 16800
Tested coordinates: 820000
Tested coordinates: 830000
Tested coordinates: 840000
Tested coordinates: 850000
Tested coordinates: 860000
Tested coordinates: 870000
Tested coordinates: 880000
Tested coordinates: 890000
Tested coordinates: 900000
Tested coordinates: 910000
Tested coordinates: 920000
Tested coordinates: 930000
Tested coordinates: 940000
Tested coordinates: 950000
Tested coordinates: 960000
Tested coordinates: 970000
Tested coordinates: 980000
Tested coordinates: 990000
Tested coordinates: 1000000
Tested coordinates: 1010000
Tested coordinates: 1020000
Tested coordinates: 1030000
Tested coordinates: 1040000
Tested coordinates: 1050000
Tested coordinates: 1060000
Tested coordinates: 1070000
Tested coordinates: 1080000
Tested coordinates: 1090000
Valid coordinates: 22400
Tested coordinates: 1100000
Tested coordinates: 1110000
Tested coordinates: 1120000
Tested coordinates: 1130000
Tested coordinates: 1140000
Tested coordinates: 1150000
Tested coordinates: 1160000
Tested coordinates: 1170000
Tested coordinates: 1180000
Tested coordinates: 1190000
Tested coordinates: 1200000
Tested coordinates: 1210000
Tested coordinates: 1220000
Tested coordinates: 1230000
Tested coordinates: 1240000
Tested coordinates: 1250000
Tested coordinates: 1260000
Tested coordinates: 1270000
Tested coordinates: 1280000
Tested coordinates: 1290000
Tested coordinates: 1300000
Tested coordinates: 1310000
Tested coordinates: 1320000
Tested coordinates: 1330000
Tested coordinates: 1340000
Tested coordinates: 1350000
Tested coordinates: 1360000
Valid coordinates: 28000
Valid/Tested configurations: 28000/1362002
Generated Search Space:
NULL
Getting Best from Design
Response: ['cost_mean']
Design Names:  [1] "T1_K"      "T2_I"      "U1_I"      "U_I"       "U_J"       "U_K"      
 [7] "RT_I"      "RT_J"      "RT_K"      "cost_mean"

Design Response:       cost_mean
4481  0.1831437
5726  0.1267909
9267  0.2946252
9794  0.1614287
13031 0.2666717
15397 0.1958765
16033 0.2262736
16359 0.1914374
17083 0.2203040
19509 0.1717673
21509 0.2788989
25599 0.1815333
26009 0.1921355
26075 0.1936355

Current Design Names: ['T1_K', 'T2_I', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Getting fixed variables
No variables within acceptable threshold
Fixed Variables: {'T2_K': 6, 'T2_J': 6, 'T1_I': 6, 'T1_J': 6}
Unique Variables: []
Pruning Model
No variables within acceptable threshold
Best Predicted:       T1_I T1_J T1_K T2_I T2_J T2_K U1_I U_I U_J U_K RT_I RT_J RT_K
22691    6    6    6    0    6    6    2   4   0   7    0    0    2

Best From Design: [6, 6, 6, 0, 6, 6, 1, 3, 21, 0, 0, 0, 2]
Pruned Factors: ['T1_K', 'T2_I', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Pruned Inverse Factors: []
Pruned Interactions: []
Fixed Factors: {'T2_K': 6, 'T2_J': 6, 'T1_I': 6, 'T1_J': 6}
Length of requested configs: 1
Result was on Database, Returning Now
Starting Point (-O3):
0.16059526666666663
Predicted Best Point:
[6, 6, 6, 0, 6, 6, 2, 4, 0, 7, 0, 0, 2]
Length of requested configs: 1
Code stats:
        Number of loops: 	29
        Max loop nest depth: 	5
        Additions: 		1689
        Multiplications: 	504
        Divisions: 		0
        Logical: 		0
        Reads: 			2759
        Writes: 		320
        Comparisons:		29
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest34.exe __orio_perftest34.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest34.exe  
Program Test Output: 
{'[6, 6, 6, 0, 6, 6, 2, 4, 0, 7, 0, 0, 2]' : 0.133216}
{'[6, 6, 6, 0, 6, 6, 2, 4, 0, 7, 0, 0, 2]' : 0.133165}
{'[6, 6, 6, 0, 6, 6, 2, 4, 0, 7, 0, 0, 2]' : 0.133167}
{'[6, 6, 6, 0, 6, 6, 2, 4, 0, 7, 0, 0, 2]' : 0.133207}
{'[6, 6, 6, 0, 6, 6, 2, 4, 0, 7, 0, 0, 2]' : 0.133118}
{'[6, 6, 6, 0, 6, 6, 2, 4, 0, 7, 0, 0, 2]' : 0.133164}
{'[6, 6, 6, 0, 6, 6, 2, 4, 0, 7, 0, 0, 2]' : 0.133225}
{'[6, 6, 6, 0, 6, 6, 2, 4, 0, 7, 0, 0, 2]' : 0.133448}
{'[6, 6, 6, 0, 6, 6, 2, 4, 0, 7, 0, 0, 2]' : 0.133359}
{'[6, 6, 6, 0, 6, 6, 2, 4, 0, 7, 0, 0, 2]' : 0.133381}
{'[6, 6, 6, 0, 6, 6, 2, 4, 0, 7, 0, 0, 2]' : 0.133134}
{'[6, 6, 6, 0, 6, 6, 2, 4, 0, 7, 0, 0, 2]' : 0.13313}
{'[6, 6, 6, 0, 6, 6, 2, 4, 0, 7, 0, 0, 2]' : 0.13313}
{'[6, 6, 6, 0, 6, 6, 2, 4, 0, 7, 0, 0, 2]' : 0.13317}
{'[6, 6, 6, 0, 6, 6, 2, 4, 0, 7, 0, 0, 2]' : 0.13321}
{'[6, 6, 6, 0, 6, 6, 2, 4, 0, 7, 0, 0, 2]' : 0.133128}
{'[6, 6, 6, 0, 6, 6, 2, 4, 0, 7, 0, 0, 2]' : 0.133112}
{'[6, 6, 6, 0, 6, 6, 2, 4, 0, 7, 0, 0, 2]' : 0.133123}
{'[6, 6, 6, 0, 6, 6, 2, 4, 0, 7, 0, 0, 2]' : 0.13314}
{'[6, 6, 6, 0, 6, 6, 2, 4, 0, 7, 0, 0, 2]' : 0.133172}
{'[6, 6, 6, 0, 6, 6, 2, 4, 0, 7, 0, 0, 2]' : 0.133104}
{'[6, 6, 6, 0, 6, 6, 2, 4, 0, 7, 0, 0, 2]' : 0.133235}
{'[6, 6, 6, 0, 6, 6, 2, 4, 0, 7, 0, 0, 2]' : 0.133246}
{'[6, 6, 6, 0, 6, 6, 2, 4, 0, 7, 0, 0, 2]' : 0.133201}
{'[6, 6, 6, 0, 6, 6, 2, 4, 0, 7, 0, 0, 2]' : 0.133451}
{'[6, 6, 6, 0, 6, 6, 2, 4, 0, 7, 0, 0, 2]' : 0.133147}
{'[6, 6, 6, 0, 6, 6, 2, 4, 0, 7, 0, 0, 2]' : 0.133433}
{'[6, 6, 6, 0, 6, 6, 2, 4, 0, 7, 0, 0, 2]' : 0.133153}
{'[6, 6, 6, 0, 6, 6, 2, 4, 0, 7, 0, 0, 2]' : 0.133498}
{'[6, 6, 6, 0, 6, 6, 2, 4, 0, 7, 0, 0, 2]' : 0.133224}

out:
 ["{'[6, 6, 6, 0, 6, 6, 2, 4, 0, 7, 0, 0, 2]' : 0.133216}", "{'[6, 6, 6, 0, 6, 6, 2, 4, 0, 7, 0, 0, 2]' : 0.133165}", "{'[6, 6, 6, 0, 6, 6, 2, 4, 0, 7, 0, 0, 2]' : 0.133167}", "{'[6, 6, 6, 0, 6, 6, 2, 4, 0, 7, 0, 0, 2]' : 0.133207}", "{'[6, 6, 6, 0, 6, 6, 2, 4, 0, 7, 0, 0, 2]' : 0.133118}", "{'[6, 6, 6, 0, 6, 6, 2, 4, 0, 7, 0, 0, 2]' : 0.133164}", "{'[6, 6, 6, 0, 6, 6, 2, 4, 0, 7, 0, 0, 2]' : 0.133225}", "{'[6, 6, 6, 0, 6, 6, 2, 4, 0, 7, 0, 0, 2]' : 0.133448}", "{'[6, 6, 6, 0, 6, 6, 2, 4, 0, 7, 0, 0, 2]' : 0.133359}", "{'[6, 6, 6, 0, 6, 6, 2, 4, 0, 7, 0, 0, 2]' : 0.133381}", "{'[6, 6, 6, 0, 6, 6, 2, 4, 0, 7, 0, 0, 2]' : 0.133134}", "{'[6, 6, 6, 0, 6, 6, 2, 4, 0, 7, 0, 0, 2]' : 0.13313}", "{'[6, 6, 6, 0, 6, 6, 2, 4, 0, 7, 0, 0, 2]' : 0.13313}", "{'[6, 6, 6, 0, 6, 6, 2, 4, 0, 7, 0, 0, 2]' : 0.13317}", "{'[6, 6, 6, 0, 6, 6, 2, 4, 0, 7, 0, 0, 2]' : 0.13321}", "{'[6, 6, 6, 0, 6, 6, 2, 4, 0, 7, 0, 0, 2]' : 0.133128}", "{'[6, 6, 6, 0, 6, 6, 2, 4, 0, 7, 0, 0, 2]' : 0.133112}", "{'[6, 6, 6, 0, 6, 6, 2, 4, 0, 7, 0, 0, 2]' : 0.133123}", "{'[6, 6, 6, 0, 6, 6, 2, 4, 0, 7, 0, 0, 2]' : 0.13314}", "{'[6, 6, 6, 0, 6, 6, 2, 4, 0, 7, 0, 0, 2]' : 0.133172}", "{'[6, 6, 6, 0, 6, 6, 2, 4, 0, 7, 0, 0, 2]' : 0.133104}", "{'[6, 6, 6, 0, 6, 6, 2, 4, 0, 7, 0, 0, 2]' : 0.133235}", "{'[6, 6, 6, 0, 6, 6, 2, 4, 0, 7, 0, 0, 2]' : 0.133246}", "{'[6, 6, 6, 0, 6, 6, 2, 4, 0, 7, 0, 0, 2]' : 0.133201}", "{'[6, 6, 6, 0, 6, 6, 2, 4, 0, 7, 0, 0, 2]' : 0.133451}", "{'[6, 6, 6, 0, 6, 6, 2, 4, 0, 7, 0, 0, 2]' : 0.133147}", "{'[6, 6, 6, 0, 6, 6, 2, 4, 0, 7, 0, 0, 2]' : 0.133433}", "{'[6, 6, 6, 0, 6, 6, 2, 4, 0, 7, 0, 0, 2]' : 0.133153}", "{'[6, 6, 6, 0, 6, 6, 2, 4, 0, 7, 0, 0, 2]' : 0.133498}", "{'[6, 6, 6, 0, 6, 6, 2, 4, 0, 7, 0, 0, 2]' : 0.133224}"]
returning from 'run': {'[6, 6, 6, 0, 6, 6, 2, 4, 0, 7, 0, 0, 2]': ([0.133216, 0.133165, 0.133167, 0.133207, 0.133118, 0.133164, 0.133225, 0.133448, 0.133359, 0.133381, 0.133134, 0.13313, 0.13313, 0.13317, 0.13321, 0.133128, 0.133112, 0.133123, 0.13314, 0.133172, 0.133104, 0.133235, 0.133246, 0.133201, 0.133451, 0.133147, 0.133433, 0.133153, 0.133498, 0.133224], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 6, 0, 6, 6, 2, 4, 0, 7, 0, 0, 2]': ([0.133216, 0.133165, 0.133167, 0.133207, 0.133118, 0.133164, 0.133225, 0.133448, 0.133359, 0.133381, 0.133134, 0.13313, 0.13313, 0.13317, 0.13321, 0.133128, 0.133112, 0.133123, 0.13314, 0.133172, 0.133104, 0.133235, 0.133246, 0.133201, 0.133451, 0.133147, 0.133433, 0.133153, 0.133498, 0.133224], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Design Best Point:
[6, 6, 6, 0, 6, 6, 1, 3, 21, 0, 0, 0, 2]
Length of requested configs: 1
Result was on Database, Returning Now
Fixed Factors: {'T2_K': 6, 'T2_J': 6, 'T1_I': 6, 'T1_J': 6}
Slowdown (Design Best): 0.7895060418966274
Slowdown (Predicted Best): 0.8295369020838725
Budget: 32/180
Current Best Point: 
[4, 4, 4, 4, 5, 6, 29, 0, 27, 29, 1, 1, 0]
Step 2
Full Model:  ~ T1_K + T2_I + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K
Generating valid search space of size 28000 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Tested coordinates: 110000
Tested coordinates: 120000
Tested coordinates: 130000
Tested coordinates: 140000
Tested coordinates: 150000
Tested coordinates: 160000
Tested coordinates: 170000
Tested coordinates: 180000
Tested coordinates: 190000
Tested coordinates: 200000
Tested coordinates: 210000
Tested coordinates: 220000
Tested coordinates: 230000
Tested coordinates: 240000
Tested coordinates: 250000
Tested coordinates: 260000
Valid coordinates: 5600
Tested coordinates: 270000
Tested coordinates: 280000
Tested coordinates: 290000
Tested coordinates: 300000
Tested coordinates: 310000
Tested coordinates: 320000
Tested coordinates: 330000
Tested coordinates: 340000
Tested coordinates: 350000
Tested coordinates: 360000
Tested coordinates: 370000
Tested coordinates: 380000
Tested coordinates: 390000
Tested coordinates: 400000
Tested coordinates: 410000
Tested coordinates: 420000
Tested coordinates: 430000
Tested coordinates: 440000
Tested coordinates: 450000
Tested coordinates: 460000
Tested coordinates: 470000
Tested coordinates: 480000
Tested coordinates: 490000
Tested coordinates: 500000
Tested coordinates: 510000
Tested coordinates: 520000
Tested coordinates: 530000
Tested coordinates: 540000
Valid coordinates: 11200
Tested coordinates: 550000
Tested coordinates: 560000
Tested coordinates: 570000
Tested coordinates: 580000
Tested coordinates: 590000
Tested coordinates: 600000
Tested coordinates: 610000
Tested coordinates: 620000
Tested coordinates: 630000
Tested coordinates: 640000
Tested coordinates: 650000
Tested coordinates: 660000
Tested coordinates: 670000
Tested coordinates: 680000
Tested coordinates: 690000
Tested coordinates: 700000
Tested coordinates: 710000
Tested coordinates: 720000
Tested coordinates: 730000
Tested coordinates: 740000
Tested coordinates: 750000
Tested coordinates: 760000
Tested coordinates: 770000
Tested coordinates: 780000
Tested coordinates: 790000
Tested coordinates: 800000
Tested coordinates: 810000
Valid coordinates: 16800
Tested coordinates: 820000
Tested coordinates: 830000
Tested coordinates: 840000
Tested coordinates: 850000
Tested coordinates: 860000
Tested coordinates: 870000
Tested coordinates: 880000
Tested coordinates: 890000
Tested coordinates: 900000
Tested coordinates: 910000
Tested coordinates: 920000
Tested coordinates: 930000
Tested coordinates: 940000
Tested coordinates: 950000
Tested coordinates: 960000
Tested coordinates: 970000
Tested coordinates: 980000
Tested coordinates: 990000
Tested coordinates: 1000000
Tested coordinates: 1010000
Tested coordinates: 1020000
Tested coordinates: 1030000
Tested coordinates: 1040000
Tested coordinates: 1050000
Tested coordinates: 1060000
Tested coordinates: 1070000
Tested coordinates: 1080000
Tested coordinates: 1090000
Valid coordinates: 22400
Tested coordinates: 1100000
Tested coordinates: 1110000
Tested coordinates: 1120000
Tested coordinates: 1130000
Tested coordinates: 1140000
Tested coordinates: 1150000
Tested coordinates: 1160000
Tested coordinates: 1170000
Tested coordinates: 1180000
Tested coordinates: 1190000
Tested coordinates: 1200000
Tested coordinates: 1210000
Tested coordinates: 1220000
Tested coordinates: 1230000
Tested coordinates: 1240000
Tested coordinates: 1250000
Tested coordinates: 1260000
Tested coordinates: 1270000
Tested coordinates: 1280000
Tested coordinates: 1290000
Tested coordinates: 1300000
Tested coordinates: 1310000
Tested coordinates: 1320000
Tested coordinates: 1330000
Tested coordinates: 1340000
Tested coordinates: 1350000
Tested coordinates: 1360000
Valid coordinates: 28000
Valid/Tested configurations: 28000/1364553
Generated Search Space:
NULL
Clean Info:
Removed Factors: character(0)

Removed Inverse Factors: character(0)

New Factors: ['T1_K', 'T2_I', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
New Inverse Factors: []
New Fixed Factors: {'T2_K': 6, 'T2_J': 6, 'T1_I': 6, 'T1_J': 6}
Fixed Factors: {'T2_K': 6, 'T2_J': 6, 'T1_I': 6, 'T1_J': 6}
Computing D-Optimal Design
Computing D-Optimal Design with 14 experiments
Design Formula:  ~ T1_K + T2_I + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K
Starting "optFederov" run
Using Search Space:
NULL
Data Dimensions: [1] 28000     9

      T1_K T2_I U1_I U_I U_J U_K RT_I RT_J RT_K
726      5    0   13   0  13  15    0    0    0
4452     0    6    0   0   9   5    0    0    2
8615     6    6    2   0   1  29    0    2    0
9852     1    0    0  29   0  29    0    1    1
10364    6    0   22   0  27   0    0    0    2
11997    6    6   27   1   0   2    0    0    0
13116    3    4   29  29   0   0    0    1    1
18243    0    6   29  29  22   0    2    0    0
18422    3    6    0  29  29   0    0    2    0
21266    6    6   29  26   0  10    0    0    2
22030    0    0   24   0   5   2    0    2    0
22560    0    0   11  29  28   0    0    0    0
23038    6    0    2  23   0   1    2    0    0
26722    3    5   28   0  29  29    2    0    0

D-Efficiency Approximation: [1] 0.544

Measuring design of size 14
Current Design Names: ['T1_K', 'T2_I', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		202
        Multiplications: 	64
        Divisions: 		0
        Logical: 		0
        Reads: 			436
        Writes: 		72
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest35.exe __orio_perftest35.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest35.exe  
Program Test Output: 
{'[6, 6, 5, 0, 6, 6, 13, 0, 13, 15, 0, 0, 0]' : 0.220658}
{'[6, 6, 5, 0, 6, 6, 13, 0, 13, 15, 0, 0, 0]' : 0.220868}
{'[6, 6, 5, 0, 6, 6, 13, 0, 13, 15, 0, 0, 0]' : 0.219056}
{'[6, 6, 5, 0, 6, 6, 13, 0, 13, 15, 0, 0, 0]' : 0.195903}
{'[6, 6, 5, 0, 6, 6, 13, 0, 13, 15, 0, 0, 0]' : 0.19691}
{'[6, 6, 5, 0, 6, 6, 13, 0, 13, 15, 0, 0, 0]' : 0.193447}
{'[6, 6, 5, 0, 6, 6, 13, 0, 13, 15, 0, 0, 0]' : 0.192076}
{'[6, 6, 5, 0, 6, 6, 13, 0, 13, 15, 0, 0, 0]' : 0.196965}
{'[6, 6, 5, 0, 6, 6, 13, 0, 13, 15, 0, 0, 0]' : 0.196919}
{'[6, 6, 5, 0, 6, 6, 13, 0, 13, 15, 0, 0, 0]' : 0.197012}
{'[6, 6, 5, 0, 6, 6, 13, 0, 13, 15, 0, 0, 0]' : 0.194322}
{'[6, 6, 5, 0, 6, 6, 13, 0, 13, 15, 0, 0, 0]' : 0.191817}
{'[6, 6, 5, 0, 6, 6, 13, 0, 13, 15, 0, 0, 0]' : 0.196848}
{'[6, 6, 5, 0, 6, 6, 13, 0, 13, 15, 0, 0, 0]' : 0.196967}
{'[6, 6, 5, 0, 6, 6, 13, 0, 13, 15, 0, 0, 0]' : 0.195314}
{'[6, 6, 5, 0, 6, 6, 13, 0, 13, 15, 0, 0, 0]' : 0.197102}
{'[6, 6, 5, 0, 6, 6, 13, 0, 13, 15, 0, 0, 0]' : 0.197058}
{'[6, 6, 5, 0, 6, 6, 13, 0, 13, 15, 0, 0, 0]' : 0.197118}
{'[6, 6, 5, 0, 6, 6, 13, 0, 13, 15, 0, 0, 0]' : 0.19699}
{'[6, 6, 5, 0, 6, 6, 13, 0, 13, 15, 0, 0, 0]' : 0.196987}
{'[6, 6, 5, 0, 6, 6, 13, 0, 13, 15, 0, 0, 0]' : 0.195221}
{'[6, 6, 5, 0, 6, 6, 13, 0, 13, 15, 0, 0, 0]' : 0.19196}
{'[6, 6, 5, 0, 6, 6, 13, 0, 13, 15, 0, 0, 0]' : 0.195742}
{'[6, 6, 5, 0, 6, 6, 13, 0, 13, 15, 0, 0, 0]' : 0.19697}
{'[6, 6, 5, 0, 6, 6, 13, 0, 13, 15, 0, 0, 0]' : 0.195891}
{'[6, 6, 5, 0, 6, 6, 13, 0, 13, 15, 0, 0, 0]' : 0.190928}
{'[6, 6, 5, 0, 6, 6, 13, 0, 13, 15, 0, 0, 0]' : 0.18542}
{'[6, 6, 5, 0, 6, 6, 13, 0, 13, 15, 0, 0, 0]' : 0.191877}
{'[6, 6, 5, 0, 6, 6, 13, 0, 13, 15, 0, 0, 0]' : 0.196943}
{'[6, 6, 5, 0, 6, 6, 13, 0, 13, 15, 0, 0, 0]' : 0.197026}

out:
 ["{'[6, 6, 5, 0, 6, 6, 13, 0, 13, 15, 0, 0, 0]' : 0.220658}", "{'[6, 6, 5, 0, 6, 6, 13, 0, 13, 15, 0, 0, 0]' : 0.220868}", "{'[6, 6, 5, 0, 6, 6, 13, 0, 13, 15, 0, 0, 0]' : 0.219056}", "{'[6, 6, 5, 0, 6, 6, 13, 0, 13, 15, 0, 0, 0]' : 0.195903}", "{'[6, 6, 5, 0, 6, 6, 13, 0, 13, 15, 0, 0, 0]' : 0.19691}", "{'[6, 6, 5, 0, 6, 6, 13, 0, 13, 15, 0, 0, 0]' : 0.193447}", "{'[6, 6, 5, 0, 6, 6, 13, 0, 13, 15, 0, 0, 0]' : 0.192076}", "{'[6, 6, 5, 0, 6, 6, 13, 0, 13, 15, 0, 0, 0]' : 0.196965}", "{'[6, 6, 5, 0, 6, 6, 13, 0, 13, 15, 0, 0, 0]' : 0.196919}", "{'[6, 6, 5, 0, 6, 6, 13, 0, 13, 15, 0, 0, 0]' : 0.197012}", "{'[6, 6, 5, 0, 6, 6, 13, 0, 13, 15, 0, 0, 0]' : 0.194322}", "{'[6, 6, 5, 0, 6, 6, 13, 0, 13, 15, 0, 0, 0]' : 0.191817}", "{'[6, 6, 5, 0, 6, 6, 13, 0, 13, 15, 0, 0, 0]' : 0.196848}", "{'[6, 6, 5, 0, 6, 6, 13, 0, 13, 15, 0, 0, 0]' : 0.196967}", "{'[6, 6, 5, 0, 6, 6, 13, 0, 13, 15, 0, 0, 0]' : 0.195314}", "{'[6, 6, 5, 0, 6, 6, 13, 0, 13, 15, 0, 0, 0]' : 0.197102}", "{'[6, 6, 5, 0, 6, 6, 13, 0, 13, 15, 0, 0, 0]' : 0.197058}", "{'[6, 6, 5, 0, 6, 6, 13, 0, 13, 15, 0, 0, 0]' : 0.197118}", "{'[6, 6, 5, 0, 6, 6, 13, 0, 13, 15, 0, 0, 0]' : 0.19699}", "{'[6, 6, 5, 0, 6, 6, 13, 0, 13, 15, 0, 0, 0]' : 0.196987}", "{'[6, 6, 5, 0, 6, 6, 13, 0, 13, 15, 0, 0, 0]' : 0.195221}", "{'[6, 6, 5, 0, 6, 6, 13, 0, 13, 15, 0, 0, 0]' : 0.19196}", "{'[6, 6, 5, 0, 6, 6, 13, 0, 13, 15, 0, 0, 0]' : 0.195742}", "{'[6, 6, 5, 0, 6, 6, 13, 0, 13, 15, 0, 0, 0]' : 0.19697}", "{'[6, 6, 5, 0, 6, 6, 13, 0, 13, 15, 0, 0, 0]' : 0.195891}", "{'[6, 6, 5, 0, 6, 6, 13, 0, 13, 15, 0, 0, 0]' : 0.190928}", "{'[6, 6, 5, 0, 6, 6, 13, 0, 13, 15, 0, 0, 0]' : 0.18542}", "{'[6, 6, 5, 0, 6, 6, 13, 0, 13, 15, 0, 0, 0]' : 0.191877}", "{'[6, 6, 5, 0, 6, 6, 13, 0, 13, 15, 0, 0, 0]' : 0.196943}", "{'[6, 6, 5, 0, 6, 6, 13, 0, 13, 15, 0, 0, 0]' : 0.197026}"]
returning from 'run': {'[6, 6, 5, 0, 6, 6, 13, 0, 13, 15, 0, 0, 0]': ([0.220658, 0.220868, 0.219056, 0.195903, 0.19691, 0.193447, 0.192076, 0.196965, 0.196919, 0.197012, 0.194322, 0.191817, 0.196848, 0.196967, 0.195314, 0.197102, 0.197058, 0.197118, 0.19699, 0.196987, 0.195221, 0.19196, 0.195742, 0.19697, 0.195891, 0.190928, 0.18542, 0.191877, 0.196943, 0.197026], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 5, 0, 6, 6, 13, 0, 13, 15, 0, 0, 0]': ([0.220658, 0.220868, 0.219056, 0.195903, 0.19691, 0.193447, 0.192076, 0.196965, 0.196919, 0.197012, 0.194322, 0.191817, 0.196848, 0.196967, 0.195314, 0.197102, 0.197058, 0.197118, 0.19699, 0.196987, 0.195221, 0.19196, 0.195742, 0.19697, 0.195891, 0.190928, 0.18542, 0.191877, 0.196943, 0.197026], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	6
        Additions: 		279
        Multiplications: 	100
        Divisions: 		0
        Logical: 		0
        Reads: 			588
        Writes: 		76
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest36.exe __orio_perftest36.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest36.exe  
Program Test Output: 
{'[6, 6, 0, 6, 6, 6, 0, 0, 9, 5, 0, 0, 2]' : 0.219926}
{'[6, 6, 0, 6, 6, 6, 0, 0, 9, 5, 0, 0, 2]' : 0.197699}
{'[6, 6, 0, 6, 6, 6, 0, 0, 9, 5, 0, 0, 2]' : 0.183939}
{'[6, 6, 0, 6, 6, 6, 0, 0, 9, 5, 0, 0, 2]' : 0.184326}
{'[6, 6, 0, 6, 6, 6, 0, 0, 9, 5, 0, 0, 2]' : 0.184348}
{'[6, 6, 0, 6, 6, 6, 0, 0, 9, 5, 0, 0, 2]' : 0.184232}
{'[6, 6, 0, 6, 6, 6, 0, 0, 9, 5, 0, 0, 2]' : 0.184192}
{'[6, 6, 0, 6, 6, 6, 0, 0, 9, 5, 0, 0, 2]' : 0.184253}
{'[6, 6, 0, 6, 6, 6, 0, 0, 9, 5, 0, 0, 2]' : 0.184217}
{'[6, 6, 0, 6, 6, 6, 0, 0, 9, 5, 0, 0, 2]' : 0.184614}
{'[6, 6, 0, 6, 6, 6, 0, 0, 9, 5, 0, 0, 2]' : 0.184425}
{'[6, 6, 0, 6, 6, 6, 0, 0, 9, 5, 0, 0, 2]' : 0.184208}
{'[6, 6, 0, 6, 6, 6, 0, 0, 9, 5, 0, 0, 2]' : 0.184216}
{'[6, 6, 0, 6, 6, 6, 0, 0, 9, 5, 0, 0, 2]' : 0.184272}
{'[6, 6, 0, 6, 6, 6, 0, 0, 9, 5, 0, 0, 2]' : 0.18422}
{'[6, 6, 0, 6, 6, 6, 0, 0, 9, 5, 0, 0, 2]' : 0.184314}
{'[6, 6, 0, 6, 6, 6, 0, 0, 9, 5, 0, 0, 2]' : 0.184232}
{'[6, 6, 0, 6, 6, 6, 0, 0, 9, 5, 0, 0, 2]' : 0.184226}
{'[6, 6, 0, 6, 6, 6, 0, 0, 9, 5, 0, 0, 2]' : 0.184488}
{'[6, 6, 0, 6, 6, 6, 0, 0, 9, 5, 0, 0, 2]' : 0.184193}
{'[6, 6, 0, 6, 6, 6, 0, 0, 9, 5, 0, 0, 2]' : 0.184661}
{'[6, 6, 0, 6, 6, 6, 0, 0, 9, 5, 0, 0, 2]' : 0.184216}
{'[6, 6, 0, 6, 6, 6, 0, 0, 9, 5, 0, 0, 2]' : 0.184229}
{'[6, 6, 0, 6, 6, 6, 0, 0, 9, 5, 0, 0, 2]' : 0.184178}
{'[6, 6, 0, 6, 6, 6, 0, 0, 9, 5, 0, 0, 2]' : 0.184196}
{'[6, 6, 0, 6, 6, 6, 0, 0, 9, 5, 0, 0, 2]' : 0.184569}
{'[6, 6, 0, 6, 6, 6, 0, 0, 9, 5, 0, 0, 2]' : 0.184434}
{'[6, 6, 0, 6, 6, 6, 0, 0, 9, 5, 0, 0, 2]' : 0.184343}
{'[6, 6, 0, 6, 6, 6, 0, 0, 9, 5, 0, 0, 2]' : 0.18434}
{'[6, 6, 0, 6, 6, 6, 0, 0, 9, 5, 0, 0, 2]' : 0.184332}

out:
 ["{'[6, 6, 0, 6, 6, 6, 0, 0, 9, 5, 0, 0, 2]' : 0.219926}", "{'[6, 6, 0, 6, 6, 6, 0, 0, 9, 5, 0, 0, 2]' : 0.197699}", "{'[6, 6, 0, 6, 6, 6, 0, 0, 9, 5, 0, 0, 2]' : 0.183939}", "{'[6, 6, 0, 6, 6, 6, 0, 0, 9, 5, 0, 0, 2]' : 0.184326}", "{'[6, 6, 0, 6, 6, 6, 0, 0, 9, 5, 0, 0, 2]' : 0.184348}", "{'[6, 6, 0, 6, 6, 6, 0, 0, 9, 5, 0, 0, 2]' : 0.184232}", "{'[6, 6, 0, 6, 6, 6, 0, 0, 9, 5, 0, 0, 2]' : 0.184192}", "{'[6, 6, 0, 6, 6, 6, 0, 0, 9, 5, 0, 0, 2]' : 0.184253}", "{'[6, 6, 0, 6, 6, 6, 0, 0, 9, 5, 0, 0, 2]' : 0.184217}", "{'[6, 6, 0, 6, 6, 6, 0, 0, 9, 5, 0, 0, 2]' : 0.184614}", "{'[6, 6, 0, 6, 6, 6, 0, 0, 9, 5, 0, 0, 2]' : 0.184425}", "{'[6, 6, 0, 6, 6, 6, 0, 0, 9, 5, 0, 0, 2]' : 0.184208}", "{'[6, 6, 0, 6, 6, 6, 0, 0, 9, 5, 0, 0, 2]' : 0.184216}", "{'[6, 6, 0, 6, 6, 6, 0, 0, 9, 5, 0, 0, 2]' : 0.184272}", "{'[6, 6, 0, 6, 6, 6, 0, 0, 9, 5, 0, 0, 2]' : 0.18422}", "{'[6, 6, 0, 6, 6, 6, 0, 0, 9, 5, 0, 0, 2]' : 0.184314}", "{'[6, 6, 0, 6, 6, 6, 0, 0, 9, 5, 0, 0, 2]' : 0.184232}", "{'[6, 6, 0, 6, 6, 6, 0, 0, 9, 5, 0, 0, 2]' : 0.184226}", "{'[6, 6, 0, 6, 6, 6, 0, 0, 9, 5, 0, 0, 2]' : 0.184488}", "{'[6, 6, 0, 6, 6, 6, 0, 0, 9, 5, 0, 0, 2]' : 0.184193}", "{'[6, 6, 0, 6, 6, 6, 0, 0, 9, 5, 0, 0, 2]' : 0.184661}", "{'[6, 6, 0, 6, 6, 6, 0, 0, 9, 5, 0, 0, 2]' : 0.184216}", "{'[6, 6, 0, 6, 6, 6, 0, 0, 9, 5, 0, 0, 2]' : 0.184229}", "{'[6, 6, 0, 6, 6, 6, 0, 0, 9, 5, 0, 0, 2]' : 0.184178}", "{'[6, 6, 0, 6, 6, 6, 0, 0, 9, 5, 0, 0, 2]' : 0.184196}", "{'[6, 6, 0, 6, 6, 6, 0, 0, 9, 5, 0, 0, 2]' : 0.184569}", "{'[6, 6, 0, 6, 6, 6, 0, 0, 9, 5, 0, 0, 2]' : 0.184434}", "{'[6, 6, 0, 6, 6, 6, 0, 0, 9, 5, 0, 0, 2]' : 0.184343}", "{'[6, 6, 0, 6, 6, 6, 0, 0, 9, 5, 0, 0, 2]' : 0.18434}", "{'[6, 6, 0, 6, 6, 6, 0, 0, 9, 5, 0, 0, 2]' : 0.184332}"]
returning from 'run': {'[6, 6, 0, 6, 6, 6, 0, 0, 9, 5, 0, 0, 2]': ([0.219926, 0.197699, 0.183939, 0.184326, 0.184348, 0.184232, 0.184192, 0.184253, 0.184217, 0.184614, 0.184425, 0.184208, 0.184216, 0.184272, 0.18422, 0.184314, 0.184232, 0.184226, 0.184488, 0.184193, 0.184661, 0.184216, 0.184229, 0.184178, 0.184196, 0.184569, 0.184434, 0.184343, 0.18434, 0.184332], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 0, 6, 6, 6, 0, 0, 9, 5, 0, 0, 2]': ([0.219926, 0.197699, 0.183939, 0.184326, 0.184348, 0.184232, 0.184192, 0.184253, 0.184217, 0.184614, 0.184425, 0.184208, 0.184216, 0.184272, 0.18422, 0.184314, 0.184232, 0.184226, 0.184488, 0.184193, 0.184661, 0.184216, 0.184229, 0.184178, 0.184196, 0.184569, 0.184434, 0.184343, 0.18434, 0.184332], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		346
        Multiplications: 	132
        Divisions: 		0
        Logical: 		0
        Reads: 			768
        Writes: 		99
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest37.exe __orio_perftest37.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest37.exe  
Program Test Output: 
{'[6, 6, 6, 6, 6, 6, 2, 0, 1, 29, 0, 2, 0]' : 0.208816}
{'[6, 6, 6, 6, 6, 6, 2, 0, 1, 29, 0, 2, 0]' : 0.208746}
{'[6, 6, 6, 6, 6, 6, 2, 0, 1, 29, 0, 2, 0]' : 0.209319}
{'[6, 6, 6, 6, 6, 6, 2, 0, 1, 29, 0, 2, 0]' : 0.196862}
{'[6, 6, 6, 6, 6, 6, 2, 0, 1, 29, 0, 2, 0]' : 0.181042}
{'[6, 6, 6, 6, 6, 6, 2, 0, 1, 29, 0, 2, 0]' : 0.180631}
{'[6, 6, 6, 6, 6, 6, 2, 0, 1, 29, 0, 2, 0]' : 0.180921}
{'[6, 6, 6, 6, 6, 6, 2, 0, 1, 29, 0, 2, 0]' : 0.180801}
{'[6, 6, 6, 6, 6, 6, 2, 0, 1, 29, 0, 2, 0]' : 0.18097}
{'[6, 6, 6, 6, 6, 6, 2, 0, 1, 29, 0, 2, 0]' : 0.180889}
{'[6, 6, 6, 6, 6, 6, 2, 0, 1, 29, 0, 2, 0]' : 0.180683}
{'[6, 6, 6, 6, 6, 6, 2, 0, 1, 29, 0, 2, 0]' : 0.180847}
{'[6, 6, 6, 6, 6, 6, 2, 0, 1, 29, 0, 2, 0]' : 0.180939}
{'[6, 6, 6, 6, 6, 6, 2, 0, 1, 29, 0, 2, 0]' : 0.181109}
{'[6, 6, 6, 6, 6, 6, 2, 0, 1, 29, 0, 2, 0]' : 0.18084}
{'[6, 6, 6, 6, 6, 6, 2, 0, 1, 29, 0, 2, 0]' : 0.18085}
{'[6, 6, 6, 6, 6, 6, 2, 0, 1, 29, 0, 2, 0]' : 0.180696}
{'[6, 6, 6, 6, 6, 6, 2, 0, 1, 29, 0, 2, 0]' : 0.18074}
{'[6, 6, 6, 6, 6, 6, 2, 0, 1, 29, 0, 2, 0]' : 0.181027}
{'[6, 6, 6, 6, 6, 6, 2, 0, 1, 29, 0, 2, 0]' : 0.181168}
{'[6, 6, 6, 6, 6, 6, 2, 0, 1, 29, 0, 2, 0]' : 0.180878}
{'[6, 6, 6, 6, 6, 6, 2, 0, 1, 29, 0, 2, 0]' : 0.180814}
{'[6, 6, 6, 6, 6, 6, 2, 0, 1, 29, 0, 2, 0]' : 0.180927}
{'[6, 6, 6, 6, 6, 6, 2, 0, 1, 29, 0, 2, 0]' : 0.180713}
{'[6, 6, 6, 6, 6, 6, 2, 0, 1, 29, 0, 2, 0]' : 0.180871}
{'[6, 6, 6, 6, 6, 6, 2, 0, 1, 29, 0, 2, 0]' : 0.181206}
{'[6, 6, 6, 6, 6, 6, 2, 0, 1, 29, 0, 2, 0]' : 0.18074}
{'[6, 6, 6, 6, 6, 6, 2, 0, 1, 29, 0, 2, 0]' : 0.180722}
{'[6, 6, 6, 6, 6, 6, 2, 0, 1, 29, 0, 2, 0]' : 0.18076}
{'[6, 6, 6, 6, 6, 6, 2, 0, 1, 29, 0, 2, 0]' : 0.180711}

out:
 ["{'[6, 6, 6, 6, 6, 6, 2, 0, 1, 29, 0, 2, 0]' : 0.208816}", "{'[6, 6, 6, 6, 6, 6, 2, 0, 1, 29, 0, 2, 0]' : 0.208746}", "{'[6, 6, 6, 6, 6, 6, 2, 0, 1, 29, 0, 2, 0]' : 0.209319}", "{'[6, 6, 6, 6, 6, 6, 2, 0, 1, 29, 0, 2, 0]' : 0.196862}", "{'[6, 6, 6, 6, 6, 6, 2, 0, 1, 29, 0, 2, 0]' : 0.181042}", "{'[6, 6, 6, 6, 6, 6, 2, 0, 1, 29, 0, 2, 0]' : 0.180631}", "{'[6, 6, 6, 6, 6, 6, 2, 0, 1, 29, 0, 2, 0]' : 0.180921}", "{'[6, 6, 6, 6, 6, 6, 2, 0, 1, 29, 0, 2, 0]' : 0.180801}", "{'[6, 6, 6, 6, 6, 6, 2, 0, 1, 29, 0, 2, 0]' : 0.18097}", "{'[6, 6, 6, 6, 6, 6, 2, 0, 1, 29, 0, 2, 0]' : 0.180889}", "{'[6, 6, 6, 6, 6, 6, 2, 0, 1, 29, 0, 2, 0]' : 0.180683}", "{'[6, 6, 6, 6, 6, 6, 2, 0, 1, 29, 0, 2, 0]' : 0.180847}", "{'[6, 6, 6, 6, 6, 6, 2, 0, 1, 29, 0, 2, 0]' : 0.180939}", "{'[6, 6, 6, 6, 6, 6, 2, 0, 1, 29, 0, 2, 0]' : 0.181109}", "{'[6, 6, 6, 6, 6, 6, 2, 0, 1, 29, 0, 2, 0]' : 0.18084}", "{'[6, 6, 6, 6, 6, 6, 2, 0, 1, 29, 0, 2, 0]' : 0.18085}", "{'[6, 6, 6, 6, 6, 6, 2, 0, 1, 29, 0, 2, 0]' : 0.180696}", "{'[6, 6, 6, 6, 6, 6, 2, 0, 1, 29, 0, 2, 0]' : 0.18074}", "{'[6, 6, 6, 6, 6, 6, 2, 0, 1, 29, 0, 2, 0]' : 0.181027}", "{'[6, 6, 6, 6, 6, 6, 2, 0, 1, 29, 0, 2, 0]' : 0.181168}", "{'[6, 6, 6, 6, 6, 6, 2, 0, 1, 29, 0, 2, 0]' : 0.180878}", "{'[6, 6, 6, 6, 6, 6, 2, 0, 1, 29, 0, 2, 0]' : 0.180814}", "{'[6, 6, 6, 6, 6, 6, 2, 0, 1, 29, 0, 2, 0]' : 0.180927}", "{'[6, 6, 6, 6, 6, 6, 2, 0, 1, 29, 0, 2, 0]' : 0.180713}", "{'[6, 6, 6, 6, 6, 6, 2, 0, 1, 29, 0, 2, 0]' : 0.180871}", "{'[6, 6, 6, 6, 6, 6, 2, 0, 1, 29, 0, 2, 0]' : 0.181206}", "{'[6, 6, 6, 6, 6, 6, 2, 0, 1, 29, 0, 2, 0]' : 0.18074}", "{'[6, 6, 6, 6, 6, 6, 2, 0, 1, 29, 0, 2, 0]' : 0.180722}", "{'[6, 6, 6, 6, 6, 6, 2, 0, 1, 29, 0, 2, 0]' : 0.18076}", "{'[6, 6, 6, 6, 6, 6, 2, 0, 1, 29, 0, 2, 0]' : 0.180711}"]
returning from 'run': {'[6, 6, 6, 6, 6, 6, 2, 0, 1, 29, 0, 2, 0]': ([0.208816, 0.208746, 0.209319, 0.196862, 0.181042, 0.180631, 0.180921, 0.180801, 0.18097, 0.180889, 0.180683, 0.180847, 0.180939, 0.181109, 0.18084, 0.18085, 0.180696, 0.18074, 0.181027, 0.181168, 0.180878, 0.180814, 0.180927, 0.180713, 0.180871, 0.181206, 0.18074, 0.180722, 0.18076, 0.180711], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 6, 6, 6, 6, 2, 0, 1, 29, 0, 2, 0]': ([0.208816, 0.208746, 0.209319, 0.196862, 0.181042, 0.180631, 0.180921, 0.180801, 0.18097, 0.180889, 0.180683, 0.180847, 0.180939, 0.181109, 0.18084, 0.18085, 0.180696, 0.18074, 0.181027, 0.181168, 0.180878, 0.180814, 0.180927, 0.180713, 0.180871, 0.181206, 0.18074, 0.180722, 0.18076, 0.180711], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	80
        Max loop nest depth: 	5
        Additions: 		10390
        Multiplications: 	2976
        Divisions: 		0
        Logical: 		0
        Reads: 			15620
        Writes: 		1680
        Comparisons:		80
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest38.exe __orio_perftest38.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest38.exe  
Program Test Output: 
{'[6, 6, 1, 0, 6, 6, 0, 29, 0, 29, 0, 1, 1]' : 0.217952}
{'[6, 6, 1, 0, 6, 6, 0, 29, 0, 29, 0, 1, 1]' : 0.217116}
{'[6, 6, 1, 0, 6, 6, 0, 29, 0, 29, 0, 1, 1]' : 0.216588}
{'[6, 6, 1, 0, 6, 6, 0, 29, 0, 29, 0, 1, 1]' : 0.216861}
{'[6, 6, 1, 0, 6, 6, 0, 29, 0, 29, 0, 1, 1]' : 0.21708}
{'[6, 6, 1, 0, 6, 6, 0, 29, 0, 29, 0, 1, 1]' : 0.217457}
{'[6, 6, 1, 0, 6, 6, 0, 29, 0, 29, 0, 1, 1]' : 0.21799}
{'[6, 6, 1, 0, 6, 6, 0, 29, 0, 29, 0, 1, 1]' : 0.219076}
{'[6, 6, 1, 0, 6, 6, 0, 29, 0, 29, 0, 1, 1]' : 0.219376}
{'[6, 6, 1, 0, 6, 6, 0, 29, 0, 29, 0, 1, 1]' : 0.218995}
{'[6, 6, 1, 0, 6, 6, 0, 29, 0, 29, 0, 1, 1]' : 0.218012}
{'[6, 6, 1, 0, 6, 6, 0, 29, 0, 29, 0, 1, 1]' : 0.218724}
{'[6, 6, 1, 0, 6, 6, 0, 29, 0, 29, 0, 1, 1]' : 0.216234}
{'[6, 6, 1, 0, 6, 6, 0, 29, 0, 29, 0, 1, 1]' : 0.216773}
{'[6, 6, 1, 0, 6, 6, 0, 29, 0, 29, 0, 1, 1]' : 0.219899}
{'[6, 6, 1, 0, 6, 6, 0, 29, 0, 29, 0, 1, 1]' : 0.218595}
{'[6, 6, 1, 0, 6, 6, 0, 29, 0, 29, 0, 1, 1]' : 0.217502}
{'[6, 6, 1, 0, 6, 6, 0, 29, 0, 29, 0, 1, 1]' : 0.214465}
{'[6, 6, 1, 0, 6, 6, 0, 29, 0, 29, 0, 1, 1]' : 0.217582}
{'[6, 6, 1, 0, 6, 6, 0, 29, 0, 29, 0, 1, 1]' : 0.217896}
{'[6, 6, 1, 0, 6, 6, 0, 29, 0, 29, 0, 1, 1]' : 0.219509}
{'[6, 6, 1, 0, 6, 6, 0, 29, 0, 29, 0, 1, 1]' : 0.221406}
{'[6, 6, 1, 0, 6, 6, 0, 29, 0, 29, 0, 1, 1]' : 0.221434}
{'[6, 6, 1, 0, 6, 6, 0, 29, 0, 29, 0, 1, 1]' : 0.218454}
{'[6, 6, 1, 0, 6, 6, 0, 29, 0, 29, 0, 1, 1]' : 0.220169}
{'[6, 6, 1, 0, 6, 6, 0, 29, 0, 29, 0, 1, 1]' : 0.219605}
{'[6, 6, 1, 0, 6, 6, 0, 29, 0, 29, 0, 1, 1]' : 0.223207}
{'[6, 6, 1, 0, 6, 6, 0, 29, 0, 29, 0, 1, 1]' : 0.219215}
{'[6, 6, 1, 0, 6, 6, 0, 29, 0, 29, 0, 1, 1]' : 0.216155}
{'[6, 6, 1, 0, 6, 6, 0, 29, 0, 29, 0, 1, 1]' : 0.220247}

out:
 ["{'[6, 6, 1, 0, 6, 6, 0, 29, 0, 29, 0, 1, 1]' : 0.217952}", "{'[6, 6, 1, 0, 6, 6, 0, 29, 0, 29, 0, 1, 1]' : 0.217116}", "{'[6, 6, 1, 0, 6, 6, 0, 29, 0, 29, 0, 1, 1]' : 0.216588}", "{'[6, 6, 1, 0, 6, 6, 0, 29, 0, 29, 0, 1, 1]' : 0.216861}", "{'[6, 6, 1, 0, 6, 6, 0, 29, 0, 29, 0, 1, 1]' : 0.21708}", "{'[6, 6, 1, 0, 6, 6, 0, 29, 0, 29, 0, 1, 1]' : 0.217457}", "{'[6, 6, 1, 0, 6, 6, 0, 29, 0, 29, 0, 1, 1]' : 0.21799}", "{'[6, 6, 1, 0, 6, 6, 0, 29, 0, 29, 0, 1, 1]' : 0.219076}", "{'[6, 6, 1, 0, 6, 6, 0, 29, 0, 29, 0, 1, 1]' : 0.219376}", "{'[6, 6, 1, 0, 6, 6, 0, 29, 0, 29, 0, 1, 1]' : 0.218995}", "{'[6, 6, 1, 0, 6, 6, 0, 29, 0, 29, 0, 1, 1]' : 0.218012}", "{'[6, 6, 1, 0, 6, 6, 0, 29, 0, 29, 0, 1, 1]' : 0.218724}", "{'[6, 6, 1, 0, 6, 6, 0, 29, 0, 29, 0, 1, 1]' : 0.216234}", "{'[6, 6, 1, 0, 6, 6, 0, 29, 0, 29, 0, 1, 1]' : 0.216773}", "{'[6, 6, 1, 0, 6, 6, 0, 29, 0, 29, 0, 1, 1]' : 0.219899}", "{'[6, 6, 1, 0, 6, 6, 0, 29, 0, 29, 0, 1, 1]' : 0.218595}", "{'[6, 6, 1, 0, 6, 6, 0, 29, 0, 29, 0, 1, 1]' : 0.217502}", "{'[6, 6, 1, 0, 6, 6, 0, 29, 0, 29, 0, 1, 1]' : 0.214465}", "{'[6, 6, 1, 0, 6, 6, 0, 29, 0, 29, 0, 1, 1]' : 0.217582}", "{'[6, 6, 1, 0, 6, 6, 0, 29, 0, 29, 0, 1, 1]' : 0.217896}", "{'[6, 6, 1, 0, 6, 6, 0, 29, 0, 29, 0, 1, 1]' : 0.219509}", "{'[6, 6, 1, 0, 6, 6, 0, 29, 0, 29, 0, 1, 1]' : 0.221406}", "{'[6, 6, 1, 0, 6, 6, 0, 29, 0, 29, 0, 1, 1]' : 0.221434}", "{'[6, 6, 1, 0, 6, 6, 0, 29, 0, 29, 0, 1, 1]' : 0.218454}", "{'[6, 6, 1, 0, 6, 6, 0, 29, 0, 29, 0, 1, 1]' : 0.220169}", "{'[6, 6, 1, 0, 6, 6, 0, 29, 0, 29, 0, 1, 1]' : 0.219605}", "{'[6, 6, 1, 0, 6, 6, 0, 29, 0, 29, 0, 1, 1]' : 0.223207}", "{'[6, 6, 1, 0, 6, 6, 0, 29, 0, 29, 0, 1, 1]' : 0.219215}", "{'[6, 6, 1, 0, 6, 6, 0, 29, 0, 29, 0, 1, 1]' : 0.216155}", "{'[6, 6, 1, 0, 6, 6, 0, 29, 0, 29, 0, 1, 1]' : 0.220247}"]
returning from 'run': {'[6, 6, 1, 0, 6, 6, 0, 29, 0, 29, 0, 1, 1]': ([0.217952, 0.217116, 0.216588, 0.216861, 0.21708, 0.217457, 0.21799, 0.219076, 0.219376, 0.218995, 0.218012, 0.218724, 0.216234, 0.216773, 0.219899, 0.218595, 0.217502, 0.214465, 0.217582, 0.217896, 0.219509, 0.221406, 0.221434, 0.218454, 0.220169, 0.219605, 0.223207, 0.219215, 0.216155, 0.220247], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 1, 0, 6, 6, 0, 29, 0, 29, 0, 1, 1]': ([0.217952, 0.217116, 0.216588, 0.216861, 0.21708, 0.217457, 0.21799, 0.219076, 0.219376, 0.218995, 0.218012, 0.218724, 0.216234, 0.216773, 0.219899, 0.218595, 0.217502, 0.214465, 0.217582, 0.217896, 0.219509, 0.221406, 0.221434, 0.218454, 0.220169, 0.219605, 0.223207, 0.219215, 0.216155, 0.220247], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		338
        Multiplications: 	124
        Divisions: 		0
        Logical: 		0
        Reads: 			750
        Writes: 		111
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest39.exe __orio_perftest39.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest39.exe  
Program Test Output: 
{'[6, 6, 6, 0, 6, 6, 22, 0, 27, 0, 0, 0, 2]' : 0.210605}
{'[6, 6, 6, 0, 6, 6, 22, 0, 27, 0, 0, 0, 2]' : 0.209251}
{'[6, 6, 6, 0, 6, 6, 22, 0, 27, 0, 0, 0, 2]' : 0.182343}
{'[6, 6, 6, 0, 6, 6, 22, 0, 27, 0, 0, 0, 2]' : 0.181966}
{'[6, 6, 6, 0, 6, 6, 22, 0, 27, 0, 0, 0, 2]' : 0.182069}
{'[6, 6, 6, 0, 6, 6, 22, 0, 27, 0, 0, 0, 2]' : 0.182}
{'[6, 6, 6, 0, 6, 6, 22, 0, 27, 0, 0, 0, 2]' : 0.181931}
{'[6, 6, 6, 0, 6, 6, 22, 0, 27, 0, 0, 0, 2]' : 0.182219}
{'[6, 6, 6, 0, 6, 6, 22, 0, 27, 0, 0, 0, 2]' : 0.182549}
{'[6, 6, 6, 0, 6, 6, 22, 0, 27, 0, 0, 0, 2]' : 0.182068}
{'[6, 6, 6, 0, 6, 6, 22, 0, 27, 0, 0, 0, 2]' : 0.182019}
{'[6, 6, 6, 0, 6, 6, 22, 0, 27, 0, 0, 0, 2]' : 0.182137}
{'[6, 6, 6, 0, 6, 6, 22, 0, 27, 0, 0, 0, 2]' : 0.182181}
{'[6, 6, 6, 0, 6, 6, 22, 0, 27, 0, 0, 0, 2]' : 0.182162}
{'[6, 6, 6, 0, 6, 6, 22, 0, 27, 0, 0, 0, 2]' : 0.18223}
{'[6, 6, 6, 0, 6, 6, 22, 0, 27, 0, 0, 0, 2]' : 0.182082}
{'[6, 6, 6, 0, 6, 6, 22, 0, 27, 0, 0, 0, 2]' : 0.182014}
{'[6, 6, 6, 0, 6, 6, 22, 0, 27, 0, 0, 0, 2]' : 0.181997}
{'[6, 6, 6, 0, 6, 6, 22, 0, 27, 0, 0, 0, 2]' : 0.182079}
{'[6, 6, 6, 0, 6, 6, 22, 0, 27, 0, 0, 0, 2]' : 0.18221}
{'[6, 6, 6, 0, 6, 6, 22, 0, 27, 0, 0, 0, 2]' : 0.182639}
{'[6, 6, 6, 0, 6, 6, 22, 0, 27, 0, 0, 0, 2]' : 0.181987}
{'[6, 6, 6, 0, 6, 6, 22, 0, 27, 0, 0, 0, 2]' : 0.182073}
{'[6, 6, 6, 0, 6, 6, 22, 0, 27, 0, 0, 0, 2]' : 0.182088}
{'[6, 6, 6, 0, 6, 6, 22, 0, 27, 0, 0, 0, 2]' : 0.182003}
{'[6, 6, 6, 0, 6, 6, 22, 0, 27, 0, 0, 0, 2]' : 0.182192}
{'[6, 6, 6, 0, 6, 6, 22, 0, 27, 0, 0, 0, 2]' : 0.182372}
{'[6, 6, 6, 0, 6, 6, 22, 0, 27, 0, 0, 0, 2]' : 0.182053}
{'[6, 6, 6, 0, 6, 6, 22, 0, 27, 0, 0, 0, 2]' : 0.181996}
{'[6, 6, 6, 0, 6, 6, 22, 0, 27, 0, 0, 0, 2]' : 0.182116}

out:
 ["{'[6, 6, 6, 0, 6, 6, 22, 0, 27, 0, 0, 0, 2]' : 0.210605}", "{'[6, 6, 6, 0, 6, 6, 22, 0, 27, 0, 0, 0, 2]' : 0.209251}", "{'[6, 6, 6, 0, 6, 6, 22, 0, 27, 0, 0, 0, 2]' : 0.182343}", "{'[6, 6, 6, 0, 6, 6, 22, 0, 27, 0, 0, 0, 2]' : 0.181966}", "{'[6, 6, 6, 0, 6, 6, 22, 0, 27, 0, 0, 0, 2]' : 0.182069}", "{'[6, 6, 6, 0, 6, 6, 22, 0, 27, 0, 0, 0, 2]' : 0.182}", "{'[6, 6, 6, 0, 6, 6, 22, 0, 27, 0, 0, 0, 2]' : 0.181931}", "{'[6, 6, 6, 0, 6, 6, 22, 0, 27, 0, 0, 0, 2]' : 0.182219}", "{'[6, 6, 6, 0, 6, 6, 22, 0, 27, 0, 0, 0, 2]' : 0.182549}", "{'[6, 6, 6, 0, 6, 6, 22, 0, 27, 0, 0, 0, 2]' : 0.182068}", "{'[6, 6, 6, 0, 6, 6, 22, 0, 27, 0, 0, 0, 2]' : 0.182019}", "{'[6, 6, 6, 0, 6, 6, 22, 0, 27, 0, 0, 0, 2]' : 0.182137}", "{'[6, 6, 6, 0, 6, 6, 22, 0, 27, 0, 0, 0, 2]' : 0.182181}", "{'[6, 6, 6, 0, 6, 6, 22, 0, 27, 0, 0, 0, 2]' : 0.182162}", "{'[6, 6, 6, 0, 6, 6, 22, 0, 27, 0, 0, 0, 2]' : 0.18223}", "{'[6, 6, 6, 0, 6, 6, 22, 0, 27, 0, 0, 0, 2]' : 0.182082}", "{'[6, 6, 6, 0, 6, 6, 22, 0, 27, 0, 0, 0, 2]' : 0.182014}", "{'[6, 6, 6, 0, 6, 6, 22, 0, 27, 0, 0, 0, 2]' : 0.181997}", "{'[6, 6, 6, 0, 6, 6, 22, 0, 27, 0, 0, 0, 2]' : 0.182079}", "{'[6, 6, 6, 0, 6, 6, 22, 0, 27, 0, 0, 0, 2]' : 0.18221}", "{'[6, 6, 6, 0, 6, 6, 22, 0, 27, 0, 0, 0, 2]' : 0.182639}", "{'[6, 6, 6, 0, 6, 6, 22, 0, 27, 0, 0, 0, 2]' : 0.181987}", "{'[6, 6, 6, 0, 6, 6, 22, 0, 27, 0, 0, 0, 2]' : 0.182073}", "{'[6, 6, 6, 0, 6, 6, 22, 0, 27, 0, 0, 0, 2]' : 0.182088}", "{'[6, 6, 6, 0, 6, 6, 22, 0, 27, 0, 0, 0, 2]' : 0.182003}", "{'[6, 6, 6, 0, 6, 6, 22, 0, 27, 0, 0, 0, 2]' : 0.182192}", "{'[6, 6, 6, 0, 6, 6, 22, 0, 27, 0, 0, 0, 2]' : 0.182372}", "{'[6, 6, 6, 0, 6, 6, 22, 0, 27, 0, 0, 0, 2]' : 0.182053}", "{'[6, 6, 6, 0, 6, 6, 22, 0, 27, 0, 0, 0, 2]' : 0.181996}", "{'[6, 6, 6, 0, 6, 6, 22, 0, 27, 0, 0, 0, 2]' : 0.182116}"]
returning from 'run': {'[6, 6, 6, 0, 6, 6, 22, 0, 27, 0, 0, 0, 2]': ([0.210605, 0.209251, 0.182343, 0.181966, 0.182069, 0.182, 0.181931, 0.182219, 0.182549, 0.182068, 0.182019, 0.182137, 0.182181, 0.182162, 0.18223, 0.182082, 0.182014, 0.181997, 0.182079, 0.18221, 0.182639, 0.181987, 0.182073, 0.182088, 0.182003, 0.182192, 0.182372, 0.182053, 0.181996, 0.182116], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 6, 0, 6, 6, 22, 0, 27, 0, 0, 0, 2]': ([0.210605, 0.209251, 0.182343, 0.181966, 0.182069, 0.182, 0.181931, 0.182219, 0.182549, 0.182068, 0.182019, 0.182137, 0.182181, 0.182162, 0.18223, 0.182082, 0.182014, 0.181997, 0.182079, 0.18221, 0.182639, 0.181987, 0.182073, 0.182088, 0.182003, 0.182192, 0.182372, 0.182053, 0.181996, 0.182116], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	6
        Additions: 		173
        Multiplications: 	30
        Divisions: 		0
        Logical: 		0
        Reads: 			354
        Writes: 		87
        Comparisons:		20
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest40.exe __orio_perftest40.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest40.exe  
Program Test Output: 
{'[6, 6, 6, 6, 6, 6, 27, 1, 0, 2, 0, 0, 0]' : 0.243312}
{'[6, 6, 6, 6, 6, 6, 27, 1, 0, 2, 0, 0, 0]' : 0.215502}
{'[6, 6, 6, 6, 6, 6, 27, 1, 0, 2, 0, 0, 0]' : 0.204145}
{'[6, 6, 6, 6, 6, 6, 27, 1, 0, 2, 0, 0, 0]' : 0.204193}
{'[6, 6, 6, 6, 6, 6, 27, 1, 0, 2, 0, 0, 0]' : 0.204247}
{'[6, 6, 6, 6, 6, 6, 27, 1, 0, 2, 0, 0, 0]' : 0.204144}
{'[6, 6, 6, 6, 6, 6, 27, 1, 0, 2, 0, 0, 0]' : 0.204158}
{'[6, 6, 6, 6, 6, 6, 27, 1, 0, 2, 0, 0, 0]' : 0.20422}
{'[6, 6, 6, 6, 6, 6, 27, 1, 0, 2, 0, 0, 0]' : 0.20418}
{'[6, 6, 6, 6, 6, 6, 27, 1, 0, 2, 0, 0, 0]' : 0.20451}
{'[6, 6, 6, 6, 6, 6, 27, 1, 0, 2, 0, 0, 0]' : 0.204316}
{'[6, 6, 6, 6, 6, 6, 27, 1, 0, 2, 0, 0, 0]' : 0.204155}
{'[6, 6, 6, 6, 6, 6, 27, 1, 0, 2, 0, 0, 0]' : 0.204517}
{'[6, 6, 6, 6, 6, 6, 27, 1, 0, 2, 0, 0, 0]' : 0.204155}
{'[6, 6, 6, 6, 6, 6, 27, 1, 0, 2, 0, 0, 0]' : 0.204245}
{'[6, 6, 6, 6, 6, 6, 27, 1, 0, 2, 0, 0, 0]' : 0.204152}
{'[6, 6, 6, 6, 6, 6, 27, 1, 0, 2, 0, 0, 0]' : 0.204391}
{'[6, 6, 6, 6, 6, 6, 27, 1, 0, 2, 0, 0, 0]' : 0.204238}
{'[6, 6, 6, 6, 6, 6, 27, 1, 0, 2, 0, 0, 0]' : 0.204161}
{'[6, 6, 6, 6, 6, 6, 27, 1, 0, 2, 0, 0, 0]' : 0.204581}
{'[6, 6, 6, 6, 6, 6, 27, 1, 0, 2, 0, 0, 0]' : 0.204162}
{'[6, 6, 6, 6, 6, 6, 27, 1, 0, 2, 0, 0, 0]' : 0.204169}
{'[6, 6, 6, 6, 6, 6, 27, 1, 0, 2, 0, 0, 0]' : 0.20446}
{'[6, 6, 6, 6, 6, 6, 27, 1, 0, 2, 0, 0, 0]' : 0.204421}
{'[6, 6, 6, 6, 6, 6, 27, 1, 0, 2, 0, 0, 0]' : 0.204246}
{'[6, 6, 6, 6, 6, 6, 27, 1, 0, 2, 0, 0, 0]' : 0.204124}
{'[6, 6, 6, 6, 6, 6, 27, 1, 0, 2, 0, 0, 0]' : 0.20417}
{'[6, 6, 6, 6, 6, 6, 27, 1, 0, 2, 0, 0, 0]' : 0.204181}
{'[6, 6, 6, 6, 6, 6, 27, 1, 0, 2, 0, 0, 0]' : 0.204232}
{'[6, 6, 6, 6, 6, 6, 27, 1, 0, 2, 0, 0, 0]' : 0.20436}

out:
 ["{'[6, 6, 6, 6, 6, 6, 27, 1, 0, 2, 0, 0, 0]' : 0.243312}", "{'[6, 6, 6, 6, 6, 6, 27, 1, 0, 2, 0, 0, 0]' : 0.215502}", "{'[6, 6, 6, 6, 6, 6, 27, 1, 0, 2, 0, 0, 0]' : 0.204145}", "{'[6, 6, 6, 6, 6, 6, 27, 1, 0, 2, 0, 0, 0]' : 0.204193}", "{'[6, 6, 6, 6, 6, 6, 27, 1, 0, 2, 0, 0, 0]' : 0.204247}", "{'[6, 6, 6, 6, 6, 6, 27, 1, 0, 2, 0, 0, 0]' : 0.204144}", "{'[6, 6, 6, 6, 6, 6, 27, 1, 0, 2, 0, 0, 0]' : 0.204158}", "{'[6, 6, 6, 6, 6, 6, 27, 1, 0, 2, 0, 0, 0]' : 0.20422}", "{'[6, 6, 6, 6, 6, 6, 27, 1, 0, 2, 0, 0, 0]' : 0.20418}", "{'[6, 6, 6, 6, 6, 6, 27, 1, 0, 2, 0, 0, 0]' : 0.20451}", "{'[6, 6, 6, 6, 6, 6, 27, 1, 0, 2, 0, 0, 0]' : 0.204316}", "{'[6, 6, 6, 6, 6, 6, 27, 1, 0, 2, 0, 0, 0]' : 0.204155}", "{'[6, 6, 6, 6, 6, 6, 27, 1, 0, 2, 0, 0, 0]' : 0.204517}", "{'[6, 6, 6, 6, 6, 6, 27, 1, 0, 2, 0, 0, 0]' : 0.204155}", "{'[6, 6, 6, 6, 6, 6, 27, 1, 0, 2, 0, 0, 0]' : 0.204245}", "{'[6, 6, 6, 6, 6, 6, 27, 1, 0, 2, 0, 0, 0]' : 0.204152}", "{'[6, 6, 6, 6, 6, 6, 27, 1, 0, 2, 0, 0, 0]' : 0.204391}", "{'[6, 6, 6, 6, 6, 6, 27, 1, 0, 2, 0, 0, 0]' : 0.204238}", "{'[6, 6, 6, 6, 6, 6, 27, 1, 0, 2, 0, 0, 0]' : 0.204161}", "{'[6, 6, 6, 6, 6, 6, 27, 1, 0, 2, 0, 0, 0]' : 0.204581}", "{'[6, 6, 6, 6, 6, 6, 27, 1, 0, 2, 0, 0, 0]' : 0.204162}", "{'[6, 6, 6, 6, 6, 6, 27, 1, 0, 2, 0, 0, 0]' : 0.204169}", "{'[6, 6, 6, 6, 6, 6, 27, 1, 0, 2, 0, 0, 0]' : 0.20446}", "{'[6, 6, 6, 6, 6, 6, 27, 1, 0, 2, 0, 0, 0]' : 0.204421}", "{'[6, 6, 6, 6, 6, 6, 27, 1, 0, 2, 0, 0, 0]' : 0.204246}", "{'[6, 6, 6, 6, 6, 6, 27, 1, 0, 2, 0, 0, 0]' : 0.204124}", "{'[6, 6, 6, 6, 6, 6, 27, 1, 0, 2, 0, 0, 0]' : 0.20417}", "{'[6, 6, 6, 6, 6, 6, 27, 1, 0, 2, 0, 0, 0]' : 0.204181}", "{'[6, 6, 6, 6, 6, 6, 27, 1, 0, 2, 0, 0, 0]' : 0.204232}", "{'[6, 6, 6, 6, 6, 6, 27, 1, 0, 2, 0, 0, 0]' : 0.20436}"]
returning from 'run': {'[6, 6, 6, 6, 6, 6, 27, 1, 0, 2, 0, 0, 0]': ([0.243312, 0.215502, 0.204145, 0.204193, 0.204247, 0.204144, 0.204158, 0.20422, 0.20418, 0.20451, 0.204316, 0.204155, 0.204517, 0.204155, 0.204245, 0.204152, 0.204391, 0.204238, 0.204161, 0.204581, 0.204162, 0.204169, 0.20446, 0.204421, 0.204246, 0.204124, 0.20417, 0.204181, 0.204232, 0.20436], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 6, 6, 6, 6, 27, 1, 0, 2, 0, 0, 0]': ([0.243312, 0.215502, 0.204145, 0.204193, 0.204247, 0.204144, 0.204158, 0.20422, 0.20418, 0.20451, 0.204316, 0.204155, 0.204517, 0.204155, 0.204245, 0.204152, 0.204391, 0.204238, 0.204161, 0.204581, 0.204162, 0.204169, 0.20446, 0.204421, 0.204246, 0.204124, 0.20417, 0.204181, 0.204232, 0.20436], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = iii
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	5
        Additions: 		3637
        Multiplications: 	1116
        Divisions: 		0
        Logical: 		0
        Reads: 			5843
        Writes: 		662
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest41.exe __orio_perftest41.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest41.exe  
Program Test Output: 
{'[6, 6, 3, 4, 6, 6, 29, 29, 0, 0, 0, 1, 1]' : 0.235697}
{'[6, 6, 3, 4, 6, 6, 29, 29, 0, 0, 0, 1, 1]' : 0.231133}
{'[6, 6, 3, 4, 6, 6, 29, 29, 0, 0, 0, 1, 1]' : 0.213823}
{'[6, 6, 3, 4, 6, 6, 29, 29, 0, 0, 0, 1, 1]' : 0.210221}
{'[6, 6, 3, 4, 6, 6, 29, 29, 0, 0, 0, 1, 1]' : 0.21932}
{'[6, 6, 3, 4, 6, 6, 29, 29, 0, 0, 0, 1, 1]' : 0.212789}
{'[6, 6, 3, 4, 6, 6, 29, 29, 0, 0, 0, 1, 1]' : 0.213619}
{'[6, 6, 3, 4, 6, 6, 29, 29, 0, 0, 0, 1, 1]' : 0.21594}
{'[6, 6, 3, 4, 6, 6, 29, 29, 0, 0, 0, 1, 1]' : 0.217893}
{'[6, 6, 3, 4, 6, 6, 29, 29, 0, 0, 0, 1, 1]' : 0.216345}
{'[6, 6, 3, 4, 6, 6, 29, 29, 0, 0, 0, 1, 1]' : 0.218859}
{'[6, 6, 3, 4, 6, 6, 29, 29, 0, 0, 0, 1, 1]' : 0.223375}
{'[6, 6, 3, 4, 6, 6, 29, 29, 0, 0, 0, 1, 1]' : 0.215826}
{'[6, 6, 3, 4, 6, 6, 29, 29, 0, 0, 0, 1, 1]' : 0.219529}
{'[6, 6, 3, 4, 6, 6, 29, 29, 0, 0, 0, 1, 1]' : 0.212406}
{'[6, 6, 3, 4, 6, 6, 29, 29, 0, 0, 0, 1, 1]' : 0.211706}
{'[6, 6, 3, 4, 6, 6, 29, 29, 0, 0, 0, 1, 1]' : 0.215199}
{'[6, 6, 3, 4, 6, 6, 29, 29, 0, 0, 0, 1, 1]' : 0.218095}
{'[6, 6, 3, 4, 6, 6, 29, 29, 0, 0, 0, 1, 1]' : 0.212223}
{'[6, 6, 3, 4, 6, 6, 29, 29, 0, 0, 0, 1, 1]' : 0.212498}
{'[6, 6, 3, 4, 6, 6, 29, 29, 0, 0, 0, 1, 1]' : 0.217745}
{'[6, 6, 3, 4, 6, 6, 29, 29, 0, 0, 0, 1, 1]' : 0.217}
{'[6, 6, 3, 4, 6, 6, 29, 29, 0, 0, 0, 1, 1]' : 0.210884}
{'[6, 6, 3, 4, 6, 6, 29, 29, 0, 0, 0, 1, 1]' : 0.21692}
{'[6, 6, 3, 4, 6, 6, 29, 29, 0, 0, 0, 1, 1]' : 0.219753}
{'[6, 6, 3, 4, 6, 6, 29, 29, 0, 0, 0, 1, 1]' : 0.217298}
{'[6, 6, 3, 4, 6, 6, 29, 29, 0, 0, 0, 1, 1]' : 0.217671}
{'[6, 6, 3, 4, 6, 6, 29, 29, 0, 0, 0, 1, 1]' : 0.217089}
{'[6, 6, 3, 4, 6, 6, 29, 29, 0, 0, 0, 1, 1]' : 0.21306}
{'[6, 6, 3, 4, 6, 6, 29, 29, 0, 0, 0, 1, 1]' : 0.220096}

out:
 ["{'[6, 6, 3, 4, 6, 6, 29, 29, 0, 0, 0, 1, 1]' : 0.235697}", "{'[6, 6, 3, 4, 6, 6, 29, 29, 0, 0, 0, 1, 1]' : 0.231133}", "{'[6, 6, 3, 4, 6, 6, 29, 29, 0, 0, 0, 1, 1]' : 0.213823}", "{'[6, 6, 3, 4, 6, 6, 29, 29, 0, 0, 0, 1, 1]' : 0.210221}", "{'[6, 6, 3, 4, 6, 6, 29, 29, 0, 0, 0, 1, 1]' : 0.21932}", "{'[6, 6, 3, 4, 6, 6, 29, 29, 0, 0, 0, 1, 1]' : 0.212789}", "{'[6, 6, 3, 4, 6, 6, 29, 29, 0, 0, 0, 1, 1]' : 0.213619}", "{'[6, 6, 3, 4, 6, 6, 29, 29, 0, 0, 0, 1, 1]' : 0.21594}", "{'[6, 6, 3, 4, 6, 6, 29, 29, 0, 0, 0, 1, 1]' : 0.217893}", "{'[6, 6, 3, 4, 6, 6, 29, 29, 0, 0, 0, 1, 1]' : 0.216345}", "{'[6, 6, 3, 4, 6, 6, 29, 29, 0, 0, 0, 1, 1]' : 0.218859}", "{'[6, 6, 3, 4, 6, 6, 29, 29, 0, 0, 0, 1, 1]' : 0.223375}", "{'[6, 6, 3, 4, 6, 6, 29, 29, 0, 0, 0, 1, 1]' : 0.215826}", "{'[6, 6, 3, 4, 6, 6, 29, 29, 0, 0, 0, 1, 1]' : 0.219529}", "{'[6, 6, 3, 4, 6, 6, 29, 29, 0, 0, 0, 1, 1]' : 0.212406}", "{'[6, 6, 3, 4, 6, 6, 29, 29, 0, 0, 0, 1, 1]' : 0.211706}", "{'[6, 6, 3, 4, 6, 6, 29, 29, 0, 0, 0, 1, 1]' : 0.215199}", "{'[6, 6, 3, 4, 6, 6, 29, 29, 0, 0, 0, 1, 1]' : 0.218095}", "{'[6, 6, 3, 4, 6, 6, 29, 29, 0, 0, 0, 1, 1]' : 0.212223}", "{'[6, 6, 3, 4, 6, 6, 29, 29, 0, 0, 0, 1, 1]' : 0.212498}", "{'[6, 6, 3, 4, 6, 6, 29, 29, 0, 0, 0, 1, 1]' : 0.217745}", "{'[6, 6, 3, 4, 6, 6, 29, 29, 0, 0, 0, 1, 1]' : 0.217}", "{'[6, 6, 3, 4, 6, 6, 29, 29, 0, 0, 0, 1, 1]' : 0.210884}", "{'[6, 6, 3, 4, 6, 6, 29, 29, 0, 0, 0, 1, 1]' : 0.21692}", "{'[6, 6, 3, 4, 6, 6, 29, 29, 0, 0, 0, 1, 1]' : 0.219753}", "{'[6, 6, 3, 4, 6, 6, 29, 29, 0, 0, 0, 1, 1]' : 0.217298}", "{'[6, 6, 3, 4, 6, 6, 29, 29, 0, 0, 0, 1, 1]' : 0.217671}", "{'[6, 6, 3, 4, 6, 6, 29, 29, 0, 0, 0, 1, 1]' : 0.217089}", "{'[6, 6, 3, 4, 6, 6, 29, 29, 0, 0, 0, 1, 1]' : 0.21306}", "{'[6, 6, 3, 4, 6, 6, 29, 29, 0, 0, 0, 1, 1]' : 0.220096}"]
returning from 'run': {'[6, 6, 3, 4, 6, 6, 29, 29, 0, 0, 0, 1, 1]': ([0.235697, 0.231133, 0.213823, 0.210221, 0.21932, 0.212789, 0.213619, 0.21594, 0.217893, 0.216345, 0.218859, 0.223375, 0.215826, 0.219529, 0.212406, 0.211706, 0.215199, 0.218095, 0.212223, 0.212498, 0.217745, 0.217, 0.210884, 0.21692, 0.219753, 0.217298, 0.217671, 0.217089, 0.21306, 0.220096], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 3, 4, 6, 6, 29, 29, 0, 0, 0, 1, 1]': ([0.235697, 0.231133, 0.213823, 0.210221, 0.21932, 0.212789, 0.213619, 0.21594, 0.217893, 0.216345, 0.218859, 0.223375, 0.215826, 0.219529, 0.212406, 0.211706, 0.215199, 0.218095, 0.212223, 0.212498, 0.217745, 0.217, 0.210884, 0.21692, 0.219753, 0.217298, 0.217671, 0.217089, 0.21306, 0.220096], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	25
        Max loop nest depth: 	6
        Additions: 		10530
        Multiplications: 	3150
        Divisions: 		0
        Logical: 		0
        Reads: 			16051
        Writes: 		1688
        Comparisons:		25
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest42.exe __orio_perftest42.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest42.exe  
Program Test Output: 
{'[6, 6, 0, 6, 6, 6, 29, 29, 22, 0, 2, 0, 0]' : 0.311435}
{'[6, 6, 0, 6, 6, 6, 29, 29, 22, 0, 2, 0, 0]' : 0.31336}
{'[6, 6, 0, 6, 6, 6, 29, 29, 22, 0, 2, 0, 0]' : 0.312156}
{'[6, 6, 0, 6, 6, 6, 29, 29, 22, 0, 2, 0, 0]' : 0.312583}
{'[6, 6, 0, 6, 6, 6, 29, 29, 22, 0, 2, 0, 0]' : 0.311124}
{'[6, 6, 0, 6, 6, 6, 29, 29, 22, 0, 2, 0, 0]' : 0.313822}
{'[6, 6, 0, 6, 6, 6, 29, 29, 22, 0, 2, 0, 0]' : 0.311221}
{'[6, 6, 0, 6, 6, 6, 29, 29, 22, 0, 2, 0, 0]' : 0.312213}
{'[6, 6, 0, 6, 6, 6, 29, 29, 22, 0, 2, 0, 0]' : 0.311577}
{'[6, 6, 0, 6, 6, 6, 29, 29, 22, 0, 2, 0, 0]' : 0.311437}
{'[6, 6, 0, 6, 6, 6, 29, 29, 22, 0, 2, 0, 0]' : 0.315168}
{'[6, 6, 0, 6, 6, 6, 29, 29, 22, 0, 2, 0, 0]' : 0.314484}
{'[6, 6, 0, 6, 6, 6, 29, 29, 22, 0, 2, 0, 0]' : 0.31312}
{'[6, 6, 0, 6, 6, 6, 29, 29, 22, 0, 2, 0, 0]' : 0.312654}
{'[6, 6, 0, 6, 6, 6, 29, 29, 22, 0, 2, 0, 0]' : 0.311249}
{'[6, 6, 0, 6, 6, 6, 29, 29, 22, 0, 2, 0, 0]' : 0.31258}
{'[6, 6, 0, 6, 6, 6, 29, 29, 22, 0, 2, 0, 0]' : 0.314185}
{'[6, 6, 0, 6, 6, 6, 29, 29, 22, 0, 2, 0, 0]' : 0.314145}
{'[6, 6, 0, 6, 6, 6, 29, 29, 22, 0, 2, 0, 0]' : 0.311161}
{'[6, 6, 0, 6, 6, 6, 29, 29, 22, 0, 2, 0, 0]' : 0.314575}
{'[6, 6, 0, 6, 6, 6, 29, 29, 22, 0, 2, 0, 0]' : 0.313117}
{'[6, 6, 0, 6, 6, 6, 29, 29, 22, 0, 2, 0, 0]' : 0.312882}
{'[6, 6, 0, 6, 6, 6, 29, 29, 22, 0, 2, 0, 0]' : 0.313261}
{'[6, 6, 0, 6, 6, 6, 29, 29, 22, 0, 2, 0, 0]' : 0.312496}
{'[6, 6, 0, 6, 6, 6, 29, 29, 22, 0, 2, 0, 0]' : 0.312341}
{'[6, 6, 0, 6, 6, 6, 29, 29, 22, 0, 2, 0, 0]' : 0.309915}
{'[6, 6, 0, 6, 6, 6, 29, 29, 22, 0, 2, 0, 0]' : 0.312013}
{'[6, 6, 0, 6, 6, 6, 29, 29, 22, 0, 2, 0, 0]' : 0.315461}
{'[6, 6, 0, 6, 6, 6, 29, 29, 22, 0, 2, 0, 0]' : 0.314846}
{'[6, 6, 0, 6, 6, 6, 29, 29, 22, 0, 2, 0, 0]' : 0.31178}

out:
 ["{'[6, 6, 0, 6, 6, 6, 29, 29, 22, 0, 2, 0, 0]' : 0.311435}", "{'[6, 6, 0, 6, 6, 6, 29, 29, 22, 0, 2, 0, 0]' : 0.31336}", "{'[6, 6, 0, 6, 6, 6, 29, 29, 22, 0, 2, 0, 0]' : 0.312156}", "{'[6, 6, 0, 6, 6, 6, 29, 29, 22, 0, 2, 0, 0]' : 0.312583}", "{'[6, 6, 0, 6, 6, 6, 29, 29, 22, 0, 2, 0, 0]' : 0.311124}", "{'[6, 6, 0, 6, 6, 6, 29, 29, 22, 0, 2, 0, 0]' : 0.313822}", "{'[6, 6, 0, 6, 6, 6, 29, 29, 22, 0, 2, 0, 0]' : 0.311221}", "{'[6, 6, 0, 6, 6, 6, 29, 29, 22, 0, 2, 0, 0]' : 0.312213}", "{'[6, 6, 0, 6, 6, 6, 29, 29, 22, 0, 2, 0, 0]' : 0.311577}", "{'[6, 6, 0, 6, 6, 6, 29, 29, 22, 0, 2, 0, 0]' : 0.311437}", "{'[6, 6, 0, 6, 6, 6, 29, 29, 22, 0, 2, 0, 0]' : 0.315168}", "{'[6, 6, 0, 6, 6, 6, 29, 29, 22, 0, 2, 0, 0]' : 0.314484}", "{'[6, 6, 0, 6, 6, 6, 29, 29, 22, 0, 2, 0, 0]' : 0.31312}", "{'[6, 6, 0, 6, 6, 6, 29, 29, 22, 0, 2, 0, 0]' : 0.312654}", "{'[6, 6, 0, 6, 6, 6, 29, 29, 22, 0, 2, 0, 0]' : 0.311249}", "{'[6, 6, 0, 6, 6, 6, 29, 29, 22, 0, 2, 0, 0]' : 0.31258}", "{'[6, 6, 0, 6, 6, 6, 29, 29, 22, 0, 2, 0, 0]' : 0.314185}", "{'[6, 6, 0, 6, 6, 6, 29, 29, 22, 0, 2, 0, 0]' : 0.314145}", "{'[6, 6, 0, 6, 6, 6, 29, 29, 22, 0, 2, 0, 0]' : 0.311161}", "{'[6, 6, 0, 6, 6, 6, 29, 29, 22, 0, 2, 0, 0]' : 0.314575}", "{'[6, 6, 0, 6, 6, 6, 29, 29, 22, 0, 2, 0, 0]' : 0.313117}", "{'[6, 6, 0, 6, 6, 6, 29, 29, 22, 0, 2, 0, 0]' : 0.312882}", "{'[6, 6, 0, 6, 6, 6, 29, 29, 22, 0, 2, 0, 0]' : 0.313261}", "{'[6, 6, 0, 6, 6, 6, 29, 29, 22, 0, 2, 0, 0]' : 0.312496}", "{'[6, 6, 0, 6, 6, 6, 29, 29, 22, 0, 2, 0, 0]' : 0.312341}", "{'[6, 6, 0, 6, 6, 6, 29, 29, 22, 0, 2, 0, 0]' : 0.309915}", "{'[6, 6, 0, 6, 6, 6, 29, 29, 22, 0, 2, 0, 0]' : 0.312013}", "{'[6, 6, 0, 6, 6, 6, 29, 29, 22, 0, 2, 0, 0]' : 0.315461}", "{'[6, 6, 0, 6, 6, 6, 29, 29, 22, 0, 2, 0, 0]' : 0.314846}", "{'[6, 6, 0, 6, 6, 6, 29, 29, 22, 0, 2, 0, 0]' : 0.31178}"]
returning from 'run': {'[6, 6, 0, 6, 6, 6, 29, 29, 22, 0, 2, 0, 0]': ([0.311435, 0.31336, 0.312156, 0.312583, 0.311124, 0.313822, 0.311221, 0.312213, 0.311577, 0.311437, 0.315168, 0.314484, 0.31312, 0.312654, 0.311249, 0.31258, 0.314185, 0.314145, 0.311161, 0.314575, 0.313117, 0.312882, 0.313261, 0.312496, 0.312341, 0.309915, 0.312013, 0.315461, 0.314846, 0.31178], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 0, 6, 6, 6, 29, 29, 22, 0, 2, 0, 0]': ([0.311435, 0.31336, 0.312156, 0.312583, 0.311124, 0.313822, 0.311221, 0.312213, 0.311577, 0.311437, 0.315168, 0.314484, 0.31312, 0.312654, 0.311249, 0.31258, 0.314185, 0.314145, 0.311161, 0.314575, 0.313117, 0.312882, 0.313261, 0.312496, 0.312341, 0.309915, 0.312013, 0.315461, 0.314846, 0.31178], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	79
        Max loop nest depth: 	6
        Additions: 		13809
        Multiplications: 	3968
        Divisions: 		0
        Logical: 		0
        Reads: 			20573
        Writes: 		2174
        Comparisons:		79
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest43.exe __orio_perftest43.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest43.exe  
Program Test Output: 
{'[6, 6, 3, 6, 6, 6, 0, 29, 29, 0, 0, 2, 0]' : 0.227844}
{'[6, 6, 3, 6, 6, 6, 0, 29, 29, 0, 0, 2, 0]' : 0.227562}
{'[6, 6, 3, 6, 6, 6, 0, 29, 29, 0, 0, 2, 0]' : 0.22916}
{'[6, 6, 3, 6, 6, 6, 0, 29, 29, 0, 0, 2, 0]' : 0.22922}
{'[6, 6, 3, 6, 6, 6, 0, 29, 29, 0, 0, 2, 0]' : 0.226561}
{'[6, 6, 3, 6, 6, 6, 0, 29, 29, 0, 0, 2, 0]' : 0.2291}
{'[6, 6, 3, 6, 6, 6, 0, 29, 29, 0, 0, 2, 0]' : 0.228925}
{'[6, 6, 3, 6, 6, 6, 0, 29, 29, 0, 0, 2, 0]' : 0.228306}
{'[6, 6, 3, 6, 6, 6, 0, 29, 29, 0, 0, 2, 0]' : 0.229747}
{'[6, 6, 3, 6, 6, 6, 0, 29, 29, 0, 0, 2, 0]' : 0.229667}
{'[6, 6, 3, 6, 6, 6, 0, 29, 29, 0, 0, 2, 0]' : 0.228332}
{'[6, 6, 3, 6, 6, 6, 0, 29, 29, 0, 0, 2, 0]' : 0.227747}
{'[6, 6, 3, 6, 6, 6, 0, 29, 29, 0, 0, 2, 0]' : 0.230391}
{'[6, 6, 3, 6, 6, 6, 0, 29, 29, 0, 0, 2, 0]' : 0.226828}
{'[6, 6, 3, 6, 6, 6, 0, 29, 29, 0, 0, 2, 0]' : 0.225215}
{'[6, 6, 3, 6, 6, 6, 0, 29, 29, 0, 0, 2, 0]' : 0.228273}
{'[6, 6, 3, 6, 6, 6, 0, 29, 29, 0, 0, 2, 0]' : 0.231038}
{'[6, 6, 3, 6, 6, 6, 0, 29, 29, 0, 0, 2, 0]' : 0.231293}
{'[6, 6, 3, 6, 6, 6, 0, 29, 29, 0, 0, 2, 0]' : 0.2304}
{'[6, 6, 3, 6, 6, 6, 0, 29, 29, 0, 0, 2, 0]' : 0.226852}
{'[6, 6, 3, 6, 6, 6, 0, 29, 29, 0, 0, 2, 0]' : 0.229867}
{'[6, 6, 3, 6, 6, 6, 0, 29, 29, 0, 0, 2, 0]' : 0.228523}
{'[6, 6, 3, 6, 6, 6, 0, 29, 29, 0, 0, 2, 0]' : 0.224558}
{'[6, 6, 3, 6, 6, 6, 0, 29, 29, 0, 0, 2, 0]' : 0.230617}
{'[6, 6, 3, 6, 6, 6, 0, 29, 29, 0, 0, 2, 0]' : 0.230452}
{'[6, 6, 3, 6, 6, 6, 0, 29, 29, 0, 0, 2, 0]' : 0.22865}
{'[6, 6, 3, 6, 6, 6, 0, 29, 29, 0, 0, 2, 0]' : 0.230071}
{'[6, 6, 3, 6, 6, 6, 0, 29, 29, 0, 0, 2, 0]' : 0.232028}
{'[6, 6, 3, 6, 6, 6, 0, 29, 29, 0, 0, 2, 0]' : 0.238508}
{'[6, 6, 3, 6, 6, 6, 0, 29, 29, 0, 0, 2, 0]' : 0.244134}

out:
 ["{'[6, 6, 3, 6, 6, 6, 0, 29, 29, 0, 0, 2, 0]' : 0.227844}", "{'[6, 6, 3, 6, 6, 6, 0, 29, 29, 0, 0, 2, 0]' : 0.227562}", "{'[6, 6, 3, 6, 6, 6, 0, 29, 29, 0, 0, 2, 0]' : 0.22916}", "{'[6, 6, 3, 6, 6, 6, 0, 29, 29, 0, 0, 2, 0]' : 0.22922}", "{'[6, 6, 3, 6, 6, 6, 0, 29, 29, 0, 0, 2, 0]' : 0.226561}", "{'[6, 6, 3, 6, 6, 6, 0, 29, 29, 0, 0, 2, 0]' : 0.2291}", "{'[6, 6, 3, 6, 6, 6, 0, 29, 29, 0, 0, 2, 0]' : 0.228925}", "{'[6, 6, 3, 6, 6, 6, 0, 29, 29, 0, 0, 2, 0]' : 0.228306}", "{'[6, 6, 3, 6, 6, 6, 0, 29, 29, 0, 0, 2, 0]' : 0.229747}", "{'[6, 6, 3, 6, 6, 6, 0, 29, 29, 0, 0, 2, 0]' : 0.229667}", "{'[6, 6, 3, 6, 6, 6, 0, 29, 29, 0, 0, 2, 0]' : 0.228332}", "{'[6, 6, 3, 6, 6, 6, 0, 29, 29, 0, 0, 2, 0]' : 0.227747}", "{'[6, 6, 3, 6, 6, 6, 0, 29, 29, 0, 0, 2, 0]' : 0.230391}", "{'[6, 6, 3, 6, 6, 6, 0, 29, 29, 0, 0, 2, 0]' : 0.226828}", "{'[6, 6, 3, 6, 6, 6, 0, 29, 29, 0, 0, 2, 0]' : 0.225215}", "{'[6, 6, 3, 6, 6, 6, 0, 29, 29, 0, 0, 2, 0]' : 0.228273}", "{'[6, 6, 3, 6, 6, 6, 0, 29, 29, 0, 0, 2, 0]' : 0.231038}", "{'[6, 6, 3, 6, 6, 6, 0, 29, 29, 0, 0, 2, 0]' : 0.231293}", "{'[6, 6, 3, 6, 6, 6, 0, 29, 29, 0, 0, 2, 0]' : 0.2304}", "{'[6, 6, 3, 6, 6, 6, 0, 29, 29, 0, 0, 2, 0]' : 0.226852}", "{'[6, 6, 3, 6, 6, 6, 0, 29, 29, 0, 0, 2, 0]' : 0.229867}", "{'[6, 6, 3, 6, 6, 6, 0, 29, 29, 0, 0, 2, 0]' : 0.228523}", "{'[6, 6, 3, 6, 6, 6, 0, 29, 29, 0, 0, 2, 0]' : 0.224558}", "{'[6, 6, 3, 6, 6, 6, 0, 29, 29, 0, 0, 2, 0]' : 0.230617}", "{'[6, 6, 3, 6, 6, 6, 0, 29, 29, 0, 0, 2, 0]' : 0.230452}", "{'[6, 6, 3, 6, 6, 6, 0, 29, 29, 0, 0, 2, 0]' : 0.22865}", "{'[6, 6, 3, 6, 6, 6, 0, 29, 29, 0, 0, 2, 0]' : 0.230071}", "{'[6, 6, 3, 6, 6, 6, 0, 29, 29, 0, 0, 2, 0]' : 0.232028}", "{'[6, 6, 3, 6, 6, 6, 0, 29, 29, 0, 0, 2, 0]' : 0.238508}", "{'[6, 6, 3, 6, 6, 6, 0, 29, 29, 0, 0, 2, 0]' : 0.244134}"]
returning from 'run': {'[6, 6, 3, 6, 6, 6, 0, 29, 29, 0, 0, 2, 0]': ([0.227844, 0.227562, 0.22916, 0.22922, 0.226561, 0.2291, 0.228925, 0.228306, 0.229747, 0.229667, 0.228332, 0.227747, 0.230391, 0.226828, 0.225215, 0.228273, 0.231038, 0.231293, 0.2304, 0.226852, 0.229867, 0.228523, 0.224558, 0.230617, 0.230452, 0.22865, 0.230071, 0.232028, 0.238508, 0.244134], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 3, 6, 6, 6, 0, 29, 29, 0, 0, 2, 0]': ([0.227844, 0.227562, 0.22916, 0.22922, 0.226561, 0.2291, 0.228925, 0.228306, 0.229747, 0.229667, 0.228332, 0.227747, 0.230391, 0.226828, 0.225215, 0.228273, 0.231038, 0.231293, 0.2304, 0.226852, 0.229867, 0.228523, 0.224558, 0.230617, 0.230452, 0.22865, 0.230071, 0.232028, 0.238508, 0.244134], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	74
        Max loop nest depth: 	6
        Additions: 		8895
        Multiplications: 	2520
        Divisions: 		0
        Logical: 		0
        Reads: 			13340
        Writes: 		1467
        Comparisons:		74
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest44.exe __orio_perftest44.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest44.exe  
Program Test Output: 
{'[6, 6, 6, 6, 6, 6, 29, 26, 0, 10, 0, 0, 2]' : 0.175747}
{'[6, 6, 6, 6, 6, 6, 29, 26, 0, 10, 0, 0, 2]' : 0.176405}
{'[6, 6, 6, 6, 6, 6, 29, 26, 0, 10, 0, 0, 2]' : 0.173113}
{'[6, 6, 6, 6, 6, 6, 29, 26, 0, 10, 0, 0, 2]' : 0.179449}
{'[6, 6, 6, 6, 6, 6, 29, 26, 0, 10, 0, 0, 2]' : 0.179759}
{'[6, 6, 6, 6, 6, 6, 29, 26, 0, 10, 0, 0, 2]' : 0.173976}
{'[6, 6, 6, 6, 6, 6, 29, 26, 0, 10, 0, 0, 2]' : 0.180748}
{'[6, 6, 6, 6, 6, 6, 29, 26, 0, 10, 0, 0, 2]' : 0.179533}
{'[6, 6, 6, 6, 6, 6, 29, 26, 0, 10, 0, 0, 2]' : 0.173671}
{'[6, 6, 6, 6, 6, 6, 29, 26, 0, 10, 0, 0, 2]' : 0.181507}
{'[6, 6, 6, 6, 6, 6, 29, 26, 0, 10, 0, 0, 2]' : 0.177709}
{'[6, 6, 6, 6, 6, 6, 29, 26, 0, 10, 0, 0, 2]' : 0.179571}
{'[6, 6, 6, 6, 6, 6, 29, 26, 0, 10, 0, 0, 2]' : 0.178576}
{'[6, 6, 6, 6, 6, 6, 29, 26, 0, 10, 0, 0, 2]' : 0.177395}
{'[6, 6, 6, 6, 6, 6, 29, 26, 0, 10, 0, 0, 2]' : 0.178161}
{'[6, 6, 6, 6, 6, 6, 29, 26, 0, 10, 0, 0, 2]' : 0.17726}
{'[6, 6, 6, 6, 6, 6, 29, 26, 0, 10, 0, 0, 2]' : 0.177417}
{'[6, 6, 6, 6, 6, 6, 29, 26, 0, 10, 0, 0, 2]' : 0.180202}
{'[6, 6, 6, 6, 6, 6, 29, 26, 0, 10, 0, 0, 2]' : 0.181284}
{'[6, 6, 6, 6, 6, 6, 29, 26, 0, 10, 0, 0, 2]' : 0.181397}
{'[6, 6, 6, 6, 6, 6, 29, 26, 0, 10, 0, 0, 2]' : 0.181198}
{'[6, 6, 6, 6, 6, 6, 29, 26, 0, 10, 0, 0, 2]' : 0.177668}
{'[6, 6, 6, 6, 6, 6, 29, 26, 0, 10, 0, 0, 2]' : 0.177742}
{'[6, 6, 6, 6, 6, 6, 29, 26, 0, 10, 0, 0, 2]' : 0.181334}
{'[6, 6, 6, 6, 6, 6, 29, 26, 0, 10, 0, 0, 2]' : 0.178104}
{'[6, 6, 6, 6, 6, 6, 29, 26, 0, 10, 0, 0, 2]' : 0.178503}
{'[6, 6, 6, 6, 6, 6, 29, 26, 0, 10, 0, 0, 2]' : 0.181231}
{'[6, 6, 6, 6, 6, 6, 29, 26, 0, 10, 0, 0, 2]' : 0.179099}
{'[6, 6, 6, 6, 6, 6, 29, 26, 0, 10, 0, 0, 2]' : 0.177643}
{'[6, 6, 6, 6, 6, 6, 29, 26, 0, 10, 0, 0, 2]' : 0.173635}

out:
 ["{'[6, 6, 6, 6, 6, 6, 29, 26, 0, 10, 0, 0, 2]' : 0.175747}", "{'[6, 6, 6, 6, 6, 6, 29, 26, 0, 10, 0, 0, 2]' : 0.176405}", "{'[6, 6, 6, 6, 6, 6, 29, 26, 0, 10, 0, 0, 2]' : 0.173113}", "{'[6, 6, 6, 6, 6, 6, 29, 26, 0, 10, 0, 0, 2]' : 0.179449}", "{'[6, 6, 6, 6, 6, 6, 29, 26, 0, 10, 0, 0, 2]' : 0.179759}", "{'[6, 6, 6, 6, 6, 6, 29, 26, 0, 10, 0, 0, 2]' : 0.173976}", "{'[6, 6, 6, 6, 6, 6, 29, 26, 0, 10, 0, 0, 2]' : 0.180748}", "{'[6, 6, 6, 6, 6, 6, 29, 26, 0, 10, 0, 0, 2]' : 0.179533}", "{'[6, 6, 6, 6, 6, 6, 29, 26, 0, 10, 0, 0, 2]' : 0.173671}", "{'[6, 6, 6, 6, 6, 6, 29, 26, 0, 10, 0, 0, 2]' : 0.181507}", "{'[6, 6, 6, 6, 6, 6, 29, 26, 0, 10, 0, 0, 2]' : 0.177709}", "{'[6, 6, 6, 6, 6, 6, 29, 26, 0, 10, 0, 0, 2]' : 0.179571}", "{'[6, 6, 6, 6, 6, 6, 29, 26, 0, 10, 0, 0, 2]' : 0.178576}", "{'[6, 6, 6, 6, 6, 6, 29, 26, 0, 10, 0, 0, 2]' : 0.177395}", "{'[6, 6, 6, 6, 6, 6, 29, 26, 0, 10, 0, 0, 2]' : 0.178161}", "{'[6, 6, 6, 6, 6, 6, 29, 26, 0, 10, 0, 0, 2]' : 0.17726}", "{'[6, 6, 6, 6, 6, 6, 29, 26, 0, 10, 0, 0, 2]' : 0.177417}", "{'[6, 6, 6, 6, 6, 6, 29, 26, 0, 10, 0, 0, 2]' : 0.180202}", "{'[6, 6, 6, 6, 6, 6, 29, 26, 0, 10, 0, 0, 2]' : 0.181284}", "{'[6, 6, 6, 6, 6, 6, 29, 26, 0, 10, 0, 0, 2]' : 0.181397}", "{'[6, 6, 6, 6, 6, 6, 29, 26, 0, 10, 0, 0, 2]' : 0.181198}", "{'[6, 6, 6, 6, 6, 6, 29, 26, 0, 10, 0, 0, 2]' : 0.177668}", "{'[6, 6, 6, 6, 6, 6, 29, 26, 0, 10, 0, 0, 2]' : 0.177742}", "{'[6, 6, 6, 6, 6, 6, 29, 26, 0, 10, 0, 0, 2]' : 0.181334}", "{'[6, 6, 6, 6, 6, 6, 29, 26, 0, 10, 0, 0, 2]' : 0.178104}", "{'[6, 6, 6, 6, 6, 6, 29, 26, 0, 10, 0, 0, 2]' : 0.178503}", "{'[6, 6, 6, 6, 6, 6, 29, 26, 0, 10, 0, 0, 2]' : 0.181231}", "{'[6, 6, 6, 6, 6, 6, 29, 26, 0, 10, 0, 0, 2]' : 0.179099}", "{'[6, 6, 6, 6, 6, 6, 29, 26, 0, 10, 0, 0, 2]' : 0.177643}", "{'[6, 6, 6, 6, 6, 6, 29, 26, 0, 10, 0, 0, 2]' : 0.173635}"]
returning from 'run': {'[6, 6, 6, 6, 6, 6, 29, 26, 0, 10, 0, 0, 2]': ([0.175747, 0.176405, 0.173113, 0.179449, 0.179759, 0.173976, 0.180748, 0.179533, 0.173671, 0.181507, 0.177709, 0.179571, 0.178576, 0.177395, 0.178161, 0.17726, 0.177417, 0.180202, 0.181284, 0.181397, 0.181198, 0.177668, 0.177742, 0.181334, 0.178104, 0.178503, 0.181231, 0.179099, 0.177643, 0.173635], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 6, 6, 6, 6, 29, 26, 0, 10, 0, 0, 2]': ([0.175747, 0.176405, 0.173113, 0.179449, 0.179759, 0.173976, 0.180748, 0.179533, 0.173671, 0.181507, 0.177709, 0.179571, 0.178576, 0.177395, 0.178161, 0.17726, 0.177417, 0.180202, 0.181284, 0.181397, 0.181198, 0.177668, 0.177742, 0.181334, 0.178104, 0.178503, 0.181231, 0.179099, 0.177643, 0.173635], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		243
        Multiplications: 	86
        Divisions: 		0
        Logical: 		0
        Reads: 			568
        Writes: 		94
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest45.exe __orio_perftest45.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest45.exe  
Program Test Output: 
{'[6, 6, 0, 0, 6, 6, 24, 0, 5, 2, 0, 2, 0]' : 0.204798}
{'[6, 6, 0, 0, 6, 6, 24, 0, 5, 2, 0, 2, 0]' : 0.183682}
{'[6, 6, 0, 0, 6, 6, 24, 0, 5, 2, 0, 2, 0]' : 0.17101}
{'[6, 6, 0, 0, 6, 6, 24, 0, 5, 2, 0, 2, 0]' : 0.171122}
{'[6, 6, 0, 0, 6, 6, 24, 0, 5, 2, 0, 2, 0]' : 0.171129}
{'[6, 6, 0, 0, 6, 6, 24, 0, 5, 2, 0, 2, 0]' : 0.171212}
{'[6, 6, 0, 0, 6, 6, 24, 0, 5, 2, 0, 2, 0]' : 0.171077}
{'[6, 6, 0, 0, 6, 6, 24, 0, 5, 2, 0, 2, 0]' : 0.171234}
{'[6, 6, 0, 0, 6, 6, 24, 0, 5, 2, 0, 2, 0]' : 0.171088}
{'[6, 6, 0, 0, 6, 6, 24, 0, 5, 2, 0, 2, 0]' : 0.171115}
{'[6, 6, 0, 0, 6, 6, 24, 0, 5, 2, 0, 2, 0]' : 0.171089}
{'[6, 6, 0, 0, 6, 6, 24, 0, 5, 2, 0, 2, 0]' : 0.171068}
{'[6, 6, 0, 0, 6, 6, 24, 0, 5, 2, 0, 2, 0]' : 0.171086}
{'[6, 6, 0, 0, 6, 6, 24, 0, 5, 2, 0, 2, 0]' : 0.171522}
{'[6, 6, 0, 0, 6, 6, 24, 0, 5, 2, 0, 2, 0]' : 0.171099}
{'[6, 6, 0, 0, 6, 6, 24, 0, 5, 2, 0, 2, 0]' : 0.171208}
{'[6, 6, 0, 0, 6, 6, 24, 0, 5, 2, 0, 2, 0]' : 0.171307}
{'[6, 6, 0, 0, 6, 6, 24, 0, 5, 2, 0, 2, 0]' : 0.171181}
{'[6, 6, 0, 0, 6, 6, 24, 0, 5, 2, 0, 2, 0]' : 0.171509}
{'[6, 6, 0, 0, 6, 6, 24, 0, 5, 2, 0, 2, 0]' : 0.171395}
{'[6, 6, 0, 0, 6, 6, 24, 0, 5, 2, 0, 2, 0]' : 0.171247}
{'[6, 6, 0, 0, 6, 6, 24, 0, 5, 2, 0, 2, 0]' : 0.171263}
{'[6, 6, 0, 0, 6, 6, 24, 0, 5, 2, 0, 2, 0]' : 0.171458}
{'[6, 6, 0, 0, 6, 6, 24, 0, 5, 2, 0, 2, 0]' : 0.171452}
{'[6, 6, 0, 0, 6, 6, 24, 0, 5, 2, 0, 2, 0]' : 0.171249}
{'[6, 6, 0, 0, 6, 6, 24, 0, 5, 2, 0, 2, 0]' : 0.171262}
{'[6, 6, 0, 0, 6, 6, 24, 0, 5, 2, 0, 2, 0]' : 0.171209}
{'[6, 6, 0, 0, 6, 6, 24, 0, 5, 2, 0, 2, 0]' : 0.171191}
{'[6, 6, 0, 0, 6, 6, 24, 0, 5, 2, 0, 2, 0]' : 0.171142}
{'[6, 6, 0, 0, 6, 6, 24, 0, 5, 2, 0, 2, 0]' : 0.171262}

out:
 ["{'[6, 6, 0, 0, 6, 6, 24, 0, 5, 2, 0, 2, 0]' : 0.204798}", "{'[6, 6, 0, 0, 6, 6, 24, 0, 5, 2, 0, 2, 0]' : 0.183682}", "{'[6, 6, 0, 0, 6, 6, 24, 0, 5, 2, 0, 2, 0]' : 0.17101}", "{'[6, 6, 0, 0, 6, 6, 24, 0, 5, 2, 0, 2, 0]' : 0.171122}", "{'[6, 6, 0, 0, 6, 6, 24, 0, 5, 2, 0, 2, 0]' : 0.171129}", "{'[6, 6, 0, 0, 6, 6, 24, 0, 5, 2, 0, 2, 0]' : 0.171212}", "{'[6, 6, 0, 0, 6, 6, 24, 0, 5, 2, 0, 2, 0]' : 0.171077}", "{'[6, 6, 0, 0, 6, 6, 24, 0, 5, 2, 0, 2, 0]' : 0.171234}", "{'[6, 6, 0, 0, 6, 6, 24, 0, 5, 2, 0, 2, 0]' : 0.171088}", "{'[6, 6, 0, 0, 6, 6, 24, 0, 5, 2, 0, 2, 0]' : 0.171115}", "{'[6, 6, 0, 0, 6, 6, 24, 0, 5, 2, 0, 2, 0]' : 0.171089}", "{'[6, 6, 0, 0, 6, 6, 24, 0, 5, 2, 0, 2, 0]' : 0.171068}", "{'[6, 6, 0, 0, 6, 6, 24, 0, 5, 2, 0, 2, 0]' : 0.171086}", "{'[6, 6, 0, 0, 6, 6, 24, 0, 5, 2, 0, 2, 0]' : 0.171522}", "{'[6, 6, 0, 0, 6, 6, 24, 0, 5, 2, 0, 2, 0]' : 0.171099}", "{'[6, 6, 0, 0, 6, 6, 24, 0, 5, 2, 0, 2, 0]' : 0.171208}", "{'[6, 6, 0, 0, 6, 6, 24, 0, 5, 2, 0, 2, 0]' : 0.171307}", "{'[6, 6, 0, 0, 6, 6, 24, 0, 5, 2, 0, 2, 0]' : 0.171181}", "{'[6, 6, 0, 0, 6, 6, 24, 0, 5, 2, 0, 2, 0]' : 0.171509}", "{'[6, 6, 0, 0, 6, 6, 24, 0, 5, 2, 0, 2, 0]' : 0.171395}", "{'[6, 6, 0, 0, 6, 6, 24, 0, 5, 2, 0, 2, 0]' : 0.171247}", "{'[6, 6, 0, 0, 6, 6, 24, 0, 5, 2, 0, 2, 0]' : 0.171263}", "{'[6, 6, 0, 0, 6, 6, 24, 0, 5, 2, 0, 2, 0]' : 0.171458}", "{'[6, 6, 0, 0, 6, 6, 24, 0, 5, 2, 0, 2, 0]' : 0.171452}", "{'[6, 6, 0, 0, 6, 6, 24, 0, 5, 2, 0, 2, 0]' : 0.171249}", "{'[6, 6, 0, 0, 6, 6, 24, 0, 5, 2, 0, 2, 0]' : 0.171262}", "{'[6, 6, 0, 0, 6, 6, 24, 0, 5, 2, 0, 2, 0]' : 0.171209}", "{'[6, 6, 0, 0, 6, 6, 24, 0, 5, 2, 0, 2, 0]' : 0.171191}", "{'[6, 6, 0, 0, 6, 6, 24, 0, 5, 2, 0, 2, 0]' : 0.171142}", "{'[6, 6, 0, 0, 6, 6, 24, 0, 5, 2, 0, 2, 0]' : 0.171262}"]
returning from 'run': {'[6, 6, 0, 0, 6, 6, 24, 0, 5, 2, 0, 2, 0]': ([0.204798, 0.183682, 0.17101, 0.171122, 0.171129, 0.171212, 0.171077, 0.171234, 0.171088, 0.171115, 0.171089, 0.171068, 0.171086, 0.171522, 0.171099, 0.171208, 0.171307, 0.171181, 0.171509, 0.171395, 0.171247, 0.171263, 0.171458, 0.171452, 0.171249, 0.171262, 0.171209, 0.171191, 0.171142, 0.171262], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 0, 0, 6, 6, 24, 0, 5, 2, 0, 2, 0]': ([0.204798, 0.183682, 0.17101, 0.171122, 0.171129, 0.171212, 0.171077, 0.171234, 0.171088, 0.171115, 0.171089, 0.171068, 0.171086, 0.171522, 0.171099, 0.171208, 0.171307, 0.171181, 0.171509, 0.171395, 0.171247, 0.171263, 0.171458, 0.171452, 0.171249, 0.171262, 0.171209, 0.171191, 0.171142, 0.171262], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	17
        Max loop nest depth: 	5
        Additions: 		6443
        Multiplications: 	1922
        Divisions: 		0
        Logical: 		0
        Reads: 			9817
        Writes: 		1039
        Comparisons:		17
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest46.exe __orio_perftest46.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest46.exe  
Program Test Output: 
{'[6, 6, 0, 0, 6, 6, 11, 29, 28, 0, 0, 0, 0]' : 0.21758}
{'[6, 6, 0, 0, 6, 6, 11, 29, 28, 0, 0, 0, 0]' : 0.214731}
{'[6, 6, 0, 0, 6, 6, 11, 29, 28, 0, 0, 0, 0]' : 0.19166}
{'[6, 6, 0, 0, 6, 6, 11, 29, 28, 0, 0, 0, 0]' : 0.191946}
{'[6, 6, 0, 0, 6, 6, 11, 29, 28, 0, 0, 0, 0]' : 0.192115}
{'[6, 6, 0, 0, 6, 6, 11, 29, 28, 0, 0, 0, 0]' : 0.192967}
{'[6, 6, 0, 0, 6, 6, 11, 29, 28, 0, 0, 0, 0]' : 0.190465}
{'[6, 6, 0, 0, 6, 6, 11, 29, 28, 0, 0, 0, 0]' : 0.192124}
{'[6, 6, 0, 0, 6, 6, 11, 29, 28, 0, 0, 0, 0]' : 0.191865}
{'[6, 6, 0, 0, 6, 6, 11, 29, 28, 0, 0, 0, 0]' : 0.1914}
{'[6, 6, 0, 0, 6, 6, 11, 29, 28, 0, 0, 0, 0]' : 0.192687}
{'[6, 6, 0, 0, 6, 6, 11, 29, 28, 0, 0, 0, 0]' : 0.192519}
{'[6, 6, 0, 0, 6, 6, 11, 29, 28, 0, 0, 0, 0]' : 0.191821}
{'[6, 6, 0, 0, 6, 6, 11, 29, 28, 0, 0, 0, 0]' : 0.192127}
{'[6, 6, 0, 0, 6, 6, 11, 29, 28, 0, 0, 0, 0]' : 0.192467}
{'[6, 6, 0, 0, 6, 6, 11, 29, 28, 0, 0, 0, 0]' : 0.194256}
{'[6, 6, 0, 0, 6, 6, 11, 29, 28, 0, 0, 0, 0]' : 0.191625}
{'[6, 6, 0, 0, 6, 6, 11, 29, 28, 0, 0, 0, 0]' : 0.191613}
{'[6, 6, 0, 0, 6, 6, 11, 29, 28, 0, 0, 0, 0]' : 0.191768}
{'[6, 6, 0, 0, 6, 6, 11, 29, 28, 0, 0, 0, 0]' : 0.194631}
{'[6, 6, 0, 0, 6, 6, 11, 29, 28, 0, 0, 0, 0]' : 0.191863}
{'[6, 6, 0, 0, 6, 6, 11, 29, 28, 0, 0, 0, 0]' : 0.191198}
{'[6, 6, 0, 0, 6, 6, 11, 29, 28, 0, 0, 0, 0]' : 0.191588}
{'[6, 6, 0, 0, 6, 6, 11, 29, 28, 0, 0, 0, 0]' : 0.191934}
{'[6, 6, 0, 0, 6, 6, 11, 29, 28, 0, 0, 0, 0]' : 0.191065}
{'[6, 6, 0, 0, 6, 6, 11, 29, 28, 0, 0, 0, 0]' : 0.192363}
{'[6, 6, 0, 0, 6, 6, 11, 29, 28, 0, 0, 0, 0]' : 0.191689}
{'[6, 6, 0, 0, 6, 6, 11, 29, 28, 0, 0, 0, 0]' : 0.192331}
{'[6, 6, 0, 0, 6, 6, 11, 29, 28, 0, 0, 0, 0]' : 0.192587}
{'[6, 6, 0, 0, 6, 6, 11, 29, 28, 0, 0, 0, 0]' : 0.190804}

out:
 ["{'[6, 6, 0, 0, 6, 6, 11, 29, 28, 0, 0, 0, 0]' : 0.21758}", "{'[6, 6, 0, 0, 6, 6, 11, 29, 28, 0, 0, 0, 0]' : 0.214731}", "{'[6, 6, 0, 0, 6, 6, 11, 29, 28, 0, 0, 0, 0]' : 0.19166}", "{'[6, 6, 0, 0, 6, 6, 11, 29, 28, 0, 0, 0, 0]' : 0.191946}", "{'[6, 6, 0, 0, 6, 6, 11, 29, 28, 0, 0, 0, 0]' : 0.192115}", "{'[6, 6, 0, 0, 6, 6, 11, 29, 28, 0, 0, 0, 0]' : 0.192967}", "{'[6, 6, 0, 0, 6, 6, 11, 29, 28, 0, 0, 0, 0]' : 0.190465}", "{'[6, 6, 0, 0, 6, 6, 11, 29, 28, 0, 0, 0, 0]' : 0.192124}", "{'[6, 6, 0, 0, 6, 6, 11, 29, 28, 0, 0, 0, 0]' : 0.191865}", "{'[6, 6, 0, 0, 6, 6, 11, 29, 28, 0, 0, 0, 0]' : 0.1914}", "{'[6, 6, 0, 0, 6, 6, 11, 29, 28, 0, 0, 0, 0]' : 0.192687}", "{'[6, 6, 0, 0, 6, 6, 11, 29, 28, 0, 0, 0, 0]' : 0.192519}", "{'[6, 6, 0, 0, 6, 6, 11, 29, 28, 0, 0, 0, 0]' : 0.191821}", "{'[6, 6, 0, 0, 6, 6, 11, 29, 28, 0, 0, 0, 0]' : 0.192127}", "{'[6, 6, 0, 0, 6, 6, 11, 29, 28, 0, 0, 0, 0]' : 0.192467}", "{'[6, 6, 0, 0, 6, 6, 11, 29, 28, 0, 0, 0, 0]' : 0.194256}", "{'[6, 6, 0, 0, 6, 6, 11, 29, 28, 0, 0, 0, 0]' : 0.191625}", "{'[6, 6, 0, 0, 6, 6, 11, 29, 28, 0, 0, 0, 0]' : 0.191613}", "{'[6, 6, 0, 0, 6, 6, 11, 29, 28, 0, 0, 0, 0]' : 0.191768}", "{'[6, 6, 0, 0, 6, 6, 11, 29, 28, 0, 0, 0, 0]' : 0.194631}", "{'[6, 6, 0, 0, 6, 6, 11, 29, 28, 0, 0, 0, 0]' : 0.191863}", "{'[6, 6, 0, 0, 6, 6, 11, 29, 28, 0, 0, 0, 0]' : 0.191198}", "{'[6, 6, 0, 0, 6, 6, 11, 29, 28, 0, 0, 0, 0]' : 0.191588}", "{'[6, 6, 0, 0, 6, 6, 11, 29, 28, 0, 0, 0, 0]' : 0.191934}", "{'[6, 6, 0, 0, 6, 6, 11, 29, 28, 0, 0, 0, 0]' : 0.191065}", "{'[6, 6, 0, 0, 6, 6, 11, 29, 28, 0, 0, 0, 0]' : 0.192363}", "{'[6, 6, 0, 0, 6, 6, 11, 29, 28, 0, 0, 0, 0]' : 0.191689}", "{'[6, 6, 0, 0, 6, 6, 11, 29, 28, 0, 0, 0, 0]' : 0.192331}", "{'[6, 6, 0, 0, 6, 6, 11, 29, 28, 0, 0, 0, 0]' : 0.192587}", "{'[6, 6, 0, 0, 6, 6, 11, 29, 28, 0, 0, 0, 0]' : 0.190804}"]
returning from 'run': {'[6, 6, 0, 0, 6, 6, 11, 29, 28, 0, 0, 0, 0]': ([0.21758, 0.214731, 0.19166, 0.191946, 0.192115, 0.192967, 0.190465, 0.192124, 0.191865, 0.1914, 0.192687, 0.192519, 0.191821, 0.192127, 0.192467, 0.194256, 0.191625, 0.191613, 0.191768, 0.194631, 0.191863, 0.191198, 0.191588, 0.191934, 0.191065, 0.192363, 0.191689, 0.192331, 0.192587, 0.190804], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 0, 0, 6, 6, 11, 29, 28, 0, 0, 0, 0]': ([0.21758, 0.214731, 0.19166, 0.191946, 0.192115, 0.192967, 0.190465, 0.192124, 0.191865, 0.1914, 0.192687, 0.192519, 0.191821, 0.192127, 0.192467, 0.194256, 0.191625, 0.191613, 0.191768, 0.194631, 0.191863, 0.191198, 0.191588, 0.191934, 0.191065, 0.192363, 0.191689, 0.192331, 0.192587, 0.190804], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	27
        Max loop nest depth: 	5
        Additions: 		1254
        Multiplications: 	456
        Divisions: 		0
        Logical: 		0
        Reads: 			2529
        Writes: 		312
        Comparisons:		27
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest47.exe __orio_perftest47.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest47.exe  
Program Test Output: 
{'[6, 6, 6, 0, 6, 6, 2, 23, 0, 1, 2, 0, 0]' : 0.232628}
{'[6, 6, 6, 0, 6, 6, 2, 23, 0, 1, 2, 0, 0]' : 0.217087}
{'[6, 6, 6, 0, 6, 6, 2, 23, 0, 1, 2, 0, 0]' : 0.213283}
{'[6, 6, 6, 0, 6, 6, 2, 23, 0, 1, 2, 0, 0]' : 0.216506}
{'[6, 6, 6, 0, 6, 6, 2, 23, 0, 1, 2, 0, 0]' : 0.223116}
{'[6, 6, 6, 0, 6, 6, 2, 23, 0, 1, 2, 0, 0]' : 0.221403}
{'[6, 6, 6, 0, 6, 6, 2, 23, 0, 1, 2, 0, 0]' : 0.222542}
{'[6, 6, 6, 0, 6, 6, 2, 23, 0, 1, 2, 0, 0]' : 0.223471}
{'[6, 6, 6, 0, 6, 6, 2, 23, 0, 1, 2, 0, 0]' : 0.224134}
{'[6, 6, 6, 0, 6, 6, 2, 23, 0, 1, 2, 0, 0]' : 0.222847}
{'[6, 6, 6, 0, 6, 6, 2, 23, 0, 1, 2, 0, 0]' : 0.223678}
{'[6, 6, 6, 0, 6, 6, 2, 23, 0, 1, 2, 0, 0]' : 0.222826}
{'[6, 6, 6, 0, 6, 6, 2, 23, 0, 1, 2, 0, 0]' : 0.223579}
{'[6, 6, 6, 0, 6, 6, 2, 23, 0, 1, 2, 0, 0]' : 0.222821}
{'[6, 6, 6, 0, 6, 6, 2, 23, 0, 1, 2, 0, 0]' : 0.22334}
{'[6, 6, 6, 0, 6, 6, 2, 23, 0, 1, 2, 0, 0]' : 0.223834}
{'[6, 6, 6, 0, 6, 6, 2, 23, 0, 1, 2, 0, 0]' : 0.223494}
{'[6, 6, 6, 0, 6, 6, 2, 23, 0, 1, 2, 0, 0]' : 0.223127}
{'[6, 6, 6, 0, 6, 6, 2, 23, 0, 1, 2, 0, 0]' : 0.223903}
{'[6, 6, 6, 0, 6, 6, 2, 23, 0, 1, 2, 0, 0]' : 0.224364}
{'[6, 6, 6, 0, 6, 6, 2, 23, 0, 1, 2, 0, 0]' : 0.223024}
{'[6, 6, 6, 0, 6, 6, 2, 23, 0, 1, 2, 0, 0]' : 0.223468}
{'[6, 6, 6, 0, 6, 6, 2, 23, 0, 1, 2, 0, 0]' : 0.219417}
{'[6, 6, 6, 0, 6, 6, 2, 23, 0, 1, 2, 0, 0]' : 0.218213}
{'[6, 6, 6, 0, 6, 6, 2, 23, 0, 1, 2, 0, 0]' : 0.217723}
{'[6, 6, 6, 0, 6, 6, 2, 23, 0, 1, 2, 0, 0]' : 0.213312}
{'[6, 6, 6, 0, 6, 6, 2, 23, 0, 1, 2, 0, 0]' : 0.220311}
{'[6, 6, 6, 0, 6, 6, 2, 23, 0, 1, 2, 0, 0]' : 0.222074}
{'[6, 6, 6, 0, 6, 6, 2, 23, 0, 1, 2, 0, 0]' : 0.221086}
{'[6, 6, 6, 0, 6, 6, 2, 23, 0, 1, 2, 0, 0]' : 0.223247}

out:
 ["{'[6, 6, 6, 0, 6, 6, 2, 23, 0, 1, 2, 0, 0]' : 0.232628}", "{'[6, 6, 6, 0, 6, 6, 2, 23, 0, 1, 2, 0, 0]' : 0.217087}", "{'[6, 6, 6, 0, 6, 6, 2, 23, 0, 1, 2, 0, 0]' : 0.213283}", "{'[6, 6, 6, 0, 6, 6, 2, 23, 0, 1, 2, 0, 0]' : 0.216506}", "{'[6, 6, 6, 0, 6, 6, 2, 23, 0, 1, 2, 0, 0]' : 0.223116}", "{'[6, 6, 6, 0, 6, 6, 2, 23, 0, 1, 2, 0, 0]' : 0.221403}", "{'[6, 6, 6, 0, 6, 6, 2, 23, 0, 1, 2, 0, 0]' : 0.222542}", "{'[6, 6, 6, 0, 6, 6, 2, 23, 0, 1, 2, 0, 0]' : 0.223471}", "{'[6, 6, 6, 0, 6, 6, 2, 23, 0, 1, 2, 0, 0]' : 0.224134}", "{'[6, 6, 6, 0, 6, 6, 2, 23, 0, 1, 2, 0, 0]' : 0.222847}", "{'[6, 6, 6, 0, 6, 6, 2, 23, 0, 1, 2, 0, 0]' : 0.223678}", "{'[6, 6, 6, 0, 6, 6, 2, 23, 0, 1, 2, 0, 0]' : 0.222826}", "{'[6, 6, 6, 0, 6, 6, 2, 23, 0, 1, 2, 0, 0]' : 0.223579}", "{'[6, 6, 6, 0, 6, 6, 2, 23, 0, 1, 2, 0, 0]' : 0.222821}", "{'[6, 6, 6, 0, 6, 6, 2, 23, 0, 1, 2, 0, 0]' : 0.22334}", "{'[6, 6, 6, 0, 6, 6, 2, 23, 0, 1, 2, 0, 0]' : 0.223834}", "{'[6, 6, 6, 0, 6, 6, 2, 23, 0, 1, 2, 0, 0]' : 0.223494}", "{'[6, 6, 6, 0, 6, 6, 2, 23, 0, 1, 2, 0, 0]' : 0.223127}", "{'[6, 6, 6, 0, 6, 6, 2, 23, 0, 1, 2, 0, 0]' : 0.223903}", "{'[6, 6, 6, 0, 6, 6, 2, 23, 0, 1, 2, 0, 0]' : 0.224364}", "{'[6, 6, 6, 0, 6, 6, 2, 23, 0, 1, 2, 0, 0]' : 0.223024}", "{'[6, 6, 6, 0, 6, 6, 2, 23, 0, 1, 2, 0, 0]' : 0.223468}", "{'[6, 6, 6, 0, 6, 6, 2, 23, 0, 1, 2, 0, 0]' : 0.219417}", "{'[6, 6, 6, 0, 6, 6, 2, 23, 0, 1, 2, 0, 0]' : 0.218213}", "{'[6, 6, 6, 0, 6, 6, 2, 23, 0, 1, 2, 0, 0]' : 0.217723}", "{'[6, 6, 6, 0, 6, 6, 2, 23, 0, 1, 2, 0, 0]' : 0.213312}", "{'[6, 6, 6, 0, 6, 6, 2, 23, 0, 1, 2, 0, 0]' : 0.220311}", "{'[6, 6, 6, 0, 6, 6, 2, 23, 0, 1, 2, 0, 0]' : 0.222074}", "{'[6, 6, 6, 0, 6, 6, 2, 23, 0, 1, 2, 0, 0]' : 0.221086}", "{'[6, 6, 6, 0, 6, 6, 2, 23, 0, 1, 2, 0, 0]' : 0.223247}"]
returning from 'run': {'[6, 6, 6, 0, 6, 6, 2, 23, 0, 1, 2, 0, 0]': ([0.232628, 0.217087, 0.213283, 0.216506, 0.223116, 0.221403, 0.222542, 0.223471, 0.224134, 0.222847, 0.223678, 0.222826, 0.223579, 0.222821, 0.22334, 0.223834, 0.223494, 0.223127, 0.223903, 0.224364, 0.223024, 0.223468, 0.219417, 0.218213, 0.217723, 0.213312, 0.220311, 0.222074, 0.221086, 0.223247], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 6, 0, 6, 6, 2, 23, 0, 1, 2, 0, 0]': ([0.232628, 0.217087, 0.213283, 0.216506, 0.223116, 0.221403, 0.222542, 0.223471, 0.224134, 0.222847, 0.223678, 0.222826, 0.223579, 0.222821, 0.22334, 0.223834, 0.223494, 0.223127, 0.223903, 0.224364, 0.223024, 0.223468, 0.219417, 0.218213, 0.217723, 0.213312, 0.220311, 0.222074, 0.221086, 0.223247], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	6
        Additions: 		13813
        Multiplications: 	4092
        Divisions: 		0
        Logical: 		0
        Reads: 			20682
        Writes: 		2122
        Comparisons:		22
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest48.exe __orio_perftest48.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest48.exe  
Program Test Output: 
{'[6, 6, 3, 5, 6, 6, 28, 0, 29, 29, 2, 0, 0]' : 0.336699}
{'[6, 6, 3, 5, 6, 6, 28, 0, 29, 29, 2, 0, 0]' : 0.323691}
{'[6, 6, 3, 5, 6, 6, 28, 0, 29, 29, 2, 0, 0]' : 0.306246}
{'[6, 6, 3, 5, 6, 6, 28, 0, 29, 29, 2, 0, 0]' : 0.30101}
{'[6, 6, 3, 5, 6, 6, 28, 0, 29, 29, 2, 0, 0]' : 0.297103}
{'[6, 6, 3, 5, 6, 6, 28, 0, 29, 29, 2, 0, 0]' : 0.303462}
{'[6, 6, 3, 5, 6, 6, 28, 0, 29, 29, 2, 0, 0]' : 0.303766}
{'[6, 6, 3, 5, 6, 6, 28, 0, 29, 29, 2, 0, 0]' : 0.306367}
{'[6, 6, 3, 5, 6, 6, 28, 0, 29, 29, 2, 0, 0]' : 0.300397}
{'[6, 6, 3, 5, 6, 6, 28, 0, 29, 29, 2, 0, 0]' : 0.298795}
{'[6, 6, 3, 5, 6, 6, 28, 0, 29, 29, 2, 0, 0]' : 0.307074}
{'[6, 6, 3, 5, 6, 6, 28, 0, 29, 29, 2, 0, 0]' : 0.305013}
{'[6, 6, 3, 5, 6, 6, 28, 0, 29, 29, 2, 0, 0]' : 0.307149}
{'[6, 6, 3, 5, 6, 6, 28, 0, 29, 29, 2, 0, 0]' : 0.307587}
{'[6, 6, 3, 5, 6, 6, 28, 0, 29, 29, 2, 0, 0]' : 0.310189}
{'[6, 6, 3, 5, 6, 6, 28, 0, 29, 29, 2, 0, 0]' : 0.30779}
{'[6, 6, 3, 5, 6, 6, 28, 0, 29, 29, 2, 0, 0]' : 0.307029}
{'[6, 6, 3, 5, 6, 6, 28, 0, 29, 29, 2, 0, 0]' : 0.304703}
{'[6, 6, 3, 5, 6, 6, 28, 0, 29, 29, 2, 0, 0]' : 0.309404}
{'[6, 6, 3, 5, 6, 6, 28, 0, 29, 29, 2, 0, 0]' : 0.30794}
{'[6, 6, 3, 5, 6, 6, 28, 0, 29, 29, 2, 0, 0]' : 0.306448}
{'[6, 6, 3, 5, 6, 6, 28, 0, 29, 29, 2, 0, 0]' : 0.310439}
{'[6, 6, 3, 5, 6, 6, 28, 0, 29, 29, 2, 0, 0]' : 0.305233}
{'[6, 6, 3, 5, 6, 6, 28, 0, 29, 29, 2, 0, 0]' : 0.308125}
{'[6, 6, 3, 5, 6, 6, 28, 0, 29, 29, 2, 0, 0]' : 0.306343}
{'[6, 6, 3, 5, 6, 6, 28, 0, 29, 29, 2, 0, 0]' : 0.307611}
{'[6, 6, 3, 5, 6, 6, 28, 0, 29, 29, 2, 0, 0]' : 0.310763}
{'[6, 6, 3, 5, 6, 6, 28, 0, 29, 29, 2, 0, 0]' : 0.307874}
{'[6, 6, 3, 5, 6, 6, 28, 0, 29, 29, 2, 0, 0]' : 0.304948}
{'[6, 6, 3, 5, 6, 6, 28, 0, 29, 29, 2, 0, 0]' : 0.307637}

out:
 ["{'[6, 6, 3, 5, 6, 6, 28, 0, 29, 29, 2, 0, 0]' : 0.336699}", "{'[6, 6, 3, 5, 6, 6, 28, 0, 29, 29, 2, 0, 0]' : 0.323691}", "{'[6, 6, 3, 5, 6, 6, 28, 0, 29, 29, 2, 0, 0]' : 0.306246}", "{'[6, 6, 3, 5, 6, 6, 28, 0, 29, 29, 2, 0, 0]' : 0.30101}", "{'[6, 6, 3, 5, 6, 6, 28, 0, 29, 29, 2, 0, 0]' : 0.297103}", "{'[6, 6, 3, 5, 6, 6, 28, 0, 29, 29, 2, 0, 0]' : 0.303462}", "{'[6, 6, 3, 5, 6, 6, 28, 0, 29, 29, 2, 0, 0]' : 0.303766}", "{'[6, 6, 3, 5, 6, 6, 28, 0, 29, 29, 2, 0, 0]' : 0.306367}", "{'[6, 6, 3, 5, 6, 6, 28, 0, 29, 29, 2, 0, 0]' : 0.300397}", "{'[6, 6, 3, 5, 6, 6, 28, 0, 29, 29, 2, 0, 0]' : 0.298795}", "{'[6, 6, 3, 5, 6, 6, 28, 0, 29, 29, 2, 0, 0]' : 0.307074}", "{'[6, 6, 3, 5, 6, 6, 28, 0, 29, 29, 2, 0, 0]' : 0.305013}", "{'[6, 6, 3, 5, 6, 6, 28, 0, 29, 29, 2, 0, 0]' : 0.307149}", "{'[6, 6, 3, 5, 6, 6, 28, 0, 29, 29, 2, 0, 0]' : 0.307587}", "{'[6, 6, 3, 5, 6, 6, 28, 0, 29, 29, 2, 0, 0]' : 0.310189}", "{'[6, 6, 3, 5, 6, 6, 28, 0, 29, 29, 2, 0, 0]' : 0.30779}", "{'[6, 6, 3, 5, 6, 6, 28, 0, 29, 29, 2, 0, 0]' : 0.307029}", "{'[6, 6, 3, 5, 6, 6, 28, 0, 29, 29, 2, 0, 0]' : 0.304703}", "{'[6, 6, 3, 5, 6, 6, 28, 0, 29, 29, 2, 0, 0]' : 0.309404}", "{'[6, 6, 3, 5, 6, 6, 28, 0, 29, 29, 2, 0, 0]' : 0.30794}", "{'[6, 6, 3, 5, 6, 6, 28, 0, 29, 29, 2, 0, 0]' : 0.306448}", "{'[6, 6, 3, 5, 6, 6, 28, 0, 29, 29, 2, 0, 0]' : 0.310439}", "{'[6, 6, 3, 5, 6, 6, 28, 0, 29, 29, 2, 0, 0]' : 0.305233}", "{'[6, 6, 3, 5, 6, 6, 28, 0, 29, 29, 2, 0, 0]' : 0.308125}", "{'[6, 6, 3, 5, 6, 6, 28, 0, 29, 29, 2, 0, 0]' : 0.306343}", "{'[6, 6, 3, 5, 6, 6, 28, 0, 29, 29, 2, 0, 0]' : 0.307611}", "{'[6, 6, 3, 5, 6, 6, 28, 0, 29, 29, 2, 0, 0]' : 0.310763}", "{'[6, 6, 3, 5, 6, 6, 28, 0, 29, 29, 2, 0, 0]' : 0.307874}", "{'[6, 6, 3, 5, 6, 6, 28, 0, 29, 29, 2, 0, 0]' : 0.304948}", "{'[6, 6, 3, 5, 6, 6, 28, 0, 29, 29, 2, 0, 0]' : 0.307637}"]
returning from 'run': {'[6, 6, 3, 5, 6, 6, 28, 0, 29, 29, 2, 0, 0]': ([0.336699, 0.323691, 0.306246, 0.30101, 0.297103, 0.303462, 0.303766, 0.306367, 0.300397, 0.298795, 0.307074, 0.305013, 0.307149, 0.307587, 0.310189, 0.30779, 0.307029, 0.304703, 0.309404, 0.30794, 0.306448, 0.310439, 0.305233, 0.308125, 0.306343, 0.307611, 0.310763, 0.307874, 0.304948, 0.307637], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 3, 5, 6, 6, 28, 0, 29, 29, 2, 0, 0]': ([0.336699, 0.323691, 0.306246, 0.30101, 0.297103, 0.303462, 0.303766, 0.306367, 0.300397, 0.298795, 0.307074, 0.305013, 0.307149, 0.307587, 0.310189, 0.30779, 0.307029, 0.304703, 0.309404, 0.30794, 0.306448, 0.310439, 0.305233, 0.308125, 0.306343, 0.307611, 0.310763, 0.307874, 0.304948, 0.307637], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Complete design, with measurements:
      T1_K T2_I U1_I U_I U_J U_K RT_I RT_J RT_K cost_mean
726      5    0   13   0  13  15    0    0    0 0.1976105
4452     0    6    0   0   9   5    0    0    2 0.1859346
8615     6    6    2   0   1  29    0    2    0 0.1842079
9852     1    0    0  29   0  29    0    1    1 0.2184525
10364    6    0   22   0  27   0    0    0    2 0.1839877
11997    6    6   27   1   0   2    0    0    0 0.2059349
13116    3    4   29  29   0   0    0    1    1 0.2171337
18243    0    6   29  29  22   0    2    0    0 0.3127454
18422    3    6    0  29  29   0    0    2    0 0.2296623
21266    6    6   29  26   0  10    0    0    2 0.1783012
22030    0    0   24   0   5   2    0    2    0 0.1727555
22560    0    0   11  29  28   0    0    0    0 0.1936596
23038    6    0    2  23   0   1    2    0    0 0.2217953
26722    3    5   28   0  29  29    2    0    0 0.3075612

Heteroscedasticity Test p-value: 0.512943354611
Regression Step:            Df   Sum Sq  Mean Sq F value Pr(>F)  
T1_K         1 0.001461 0.001461   2.252 0.2079  
T2_I         1 0.002681 0.002681   4.133 0.1118  
U1_I         1 0.001487 0.001487   2.293 0.2045  
U_I          1 0.000975 0.000975   1.504 0.2873  
U_J          1 0.003493 0.003493   5.386 0.0811 .
U_K          1 0.002997 0.002997   4.621 0.0980 .
RT_I         1 0.009119 0.009119  14.060 0.0200 *
RT_J         1 0.000024 0.000024   0.037 0.8571  
RT_K         1 0.000294 0.000294   0.453 0.5378  
Residuals    4 0.002594 0.000649                 
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Predicting Best
Generating valid search space of size 28000 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Tested coordinates: 110000
Tested coordinates: 120000
Tested coordinates: 130000
Tested coordinates: 140000
Tested coordinates: 150000
Tested coordinates: 160000
Tested coordinates: 170000
Tested coordinates: 180000
Tested coordinates: 190000
Tested coordinates: 200000
Tested coordinates: 210000
Tested coordinates: 220000
Tested coordinates: 230000
Tested coordinates: 240000
Tested coordinates: 250000
Tested coordinates: 260000
Tested coordinates: 270000
Valid coordinates: 5600
Tested coordinates: 280000
Tested coordinates: 290000
Tested coordinates: 300000
Tested coordinates: 310000
Tested coordinates: 320000
Tested coordinates: 330000
Tested coordinates: 340000
Tested coordinates: 350000
Tested coordinates: 360000
Tested coordinates: 370000
Tested coordinates: 380000
Tested coordinates: 390000
Tested coordinates: 400000
Tested coordinates: 410000
Tested coordinates: 420000
Tested coordinates: 430000
Tested coordinates: 440000
Tested coordinates: 450000
Tested coordinates: 460000
Tested coordinates: 470000
Tested coordinates: 480000
Tested coordinates: 490000
Tested coordinates: 500000
Tested coordinates: 510000
Tested coordinates: 520000
Tested coordinates: 530000
Tested coordinates: 540000
Valid coordinates: 11200
Tested coordinates: 550000
Tested coordinates: 560000
Tested coordinates: 570000
Tested coordinates: 580000
Tested coordinates: 590000
Tested coordinates: 600000
Tested coordinates: 610000
Tested coordinates: 620000
Tested coordinates: 630000
Tested coordinates: 640000
Tested coordinates: 650000
Tested coordinates: 660000
Tested coordinates: 670000
Tested coordinates: 680000
Tested coordinates: 690000
Tested coordinates: 700000
Tested coordinates: 710000
Tested coordinates: 720000
Tested coordinates: 730000
Tested coordinates: 740000
Tested coordinates: 750000
Tested coordinates: 760000
Tested coordinates: 770000
Tested coordinates: 780000
Tested coordinates: 790000
Tested coordinates: 800000
Tested coordinates: 810000
Tested coordinates: 820000
Valid coordinates: 16800
Tested coordinates: 830000
Tested coordinates: 840000
Tested coordinates: 850000
Tested coordinates: 860000
Tested coordinates: 870000
Tested coordinates: 880000
Tested coordinates: 890000
Tested coordinates: 900000
Tested coordinates: 910000
Tested coordinates: 920000
Tested coordinates: 930000
Tested coordinates: 940000
Tested coordinates: 950000
Tested coordinates: 960000
Tested coordinates: 970000
Tested coordinates: 980000
Tested coordinates: 990000
Tested coordinates: 1000000
Tested coordinates: 1010000
Tested coordinates: 1020000
Tested coordinates: 1030000
Tested coordinates: 1040000
Tested coordinates: 1050000
Tested coordinates: 1060000
Tested coordinates: 1070000
Tested coordinates: 1080000
Tested coordinates: 1090000
Valid coordinates: 22400
Tested coordinates: 1100000
Tested coordinates: 1110000
Tested coordinates: 1120000
Tested coordinates: 1130000
Tested coordinates: 1140000
Tested coordinates: 1150000
Tested coordinates: 1160000
Tested coordinates: 1170000
Tested coordinates: 1180000
Tested coordinates: 1190000
Tested coordinates: 1200000
Tested coordinates: 1210000
Tested coordinates: 1220000
Tested coordinates: 1230000
Tested coordinates: 1240000
Tested coordinates: 1250000
Tested coordinates: 1260000
Tested coordinates: 1270000
Tested coordinates: 1280000
Tested coordinates: 1290000
Tested coordinates: 1300000
Tested coordinates: 1310000
Tested coordinates: 1320000
Tested coordinates: 1330000
Tested coordinates: 1340000
Tested coordinates: 1350000
Tested coordinates: 1360000
Valid coordinates: 28000
Valid/Tested configurations: 28000/1367659
Generated Search Space:
NULL
Getting Best from Design
Response: ['cost_mean']
Design Names:  [1] "T1_K"      "T2_I"      "U1_I"      "U_I"       "U_J"       "U_K"      
 [7] "RT_I"      "RT_J"      "RT_K"      "cost_mean"

Design Response:       cost_mean
726   0.1976105
4452  0.1859346
8615  0.1842079
9852  0.2184525
10364 0.1839877
11997 0.2059349
13116 0.2171337
18243 0.3127454
18422 0.2296623
21266 0.1783012
22030 0.1727555
22560 0.1936596
23038 0.2217953
26722 0.3075612

Current Design Names: ['T1_K', 'T2_I', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Getting fixed variables
No variables within acceptable threshold
Fixed Variables: {'T2_K': 6, 'T2_J': 6, 'T1_I': 6, 'T1_J': 6}
Unique Variables: []
Pruning Model
No variables within acceptable threshold
Best Predicted:       T1_I T1_J T1_K T2_I T2_J T2_K U1_I U_I U_J U_K RT_I RT_J RT_K
17083    6    6    6    0    6    6    4   0   0   0    0    1    1

Best From Design: [6, 6, 0, 0, 6, 6, 24, 0, 5, 2, 0, 2, 0]
Pruned Factors: ['T1_K', 'T2_I', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Pruned Inverse Factors: []
Pruned Interactions: []
Fixed Factors: {'T2_K': 6, 'T2_J': 6, 'T1_I': 6, 'T1_J': 6}
Length of requested configs: 1
Result was on Database, Returning Now
Starting Point (-O3):
0.16059526666666663
Predicted Best Point:
[6, 6, 6, 0, 6, 6, 4, 0, 0, 0, 0, 1, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		111
        Multiplications: 	36
        Divisions: 		0
        Logical: 		0
        Reads: 			270
        Writes: 		49
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest49.exe __orio_perftest49.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest49.exe  
Program Test Output: 
{'[6, 6, 6, 0, 6, 6, 4, 0, 0, 0, 0, 1, 1]' : 0.237307}
{'[6, 6, 6, 0, 6, 6, 4, 0, 0, 0, 0, 1, 1]' : 0.217512}
{'[6, 6, 6, 0, 6, 6, 4, 0, 0, 0, 0, 1, 1]' : 0.198888}
{'[6, 6, 6, 0, 6, 6, 4, 0, 0, 0, 0, 1, 1]' : 0.198897}
{'[6, 6, 6, 0, 6, 6, 4, 0, 0, 0, 0, 1, 1]' : 0.198932}
{'[6, 6, 6, 0, 6, 6, 4, 0, 0, 0, 0, 1, 1]' : 0.198894}
{'[6, 6, 6, 0, 6, 6, 4, 0, 0, 0, 0, 1, 1]' : 0.198894}
{'[6, 6, 6, 0, 6, 6, 4, 0, 0, 0, 0, 1, 1]' : 0.19889}
{'[6, 6, 6, 0, 6, 6, 4, 0, 0, 0, 0, 1, 1]' : 0.199522}
{'[6, 6, 6, 0, 6, 6, 4, 0, 0, 0, 0, 1, 1]' : 0.19897}
{'[6, 6, 6, 0, 6, 6, 4, 0, 0, 0, 0, 1, 1]' : 0.198896}
{'[6, 6, 6, 0, 6, 6, 4, 0, 0, 0, 0, 1, 1]' : 0.199126}
{'[6, 6, 6, 0, 6, 6, 4, 0, 0, 0, 0, 1, 1]' : 0.198935}
{'[6, 6, 6, 0, 6, 6, 4, 0, 0, 0, 0, 1, 1]' : 0.198911}
{'[6, 6, 6, 0, 6, 6, 4, 0, 0, 0, 0, 1, 1]' : 0.198976}
{'[6, 6, 6, 0, 6, 6, 4, 0, 0, 0, 0, 1, 1]' : 0.199164}
{'[6, 6, 6, 0, 6, 6, 4, 0, 0, 0, 0, 1, 1]' : 0.198879}
{'[6, 6, 6, 0, 6, 6, 4, 0, 0, 0, 0, 1, 1]' : 0.199237}
{'[6, 6, 6, 0, 6, 6, 4, 0, 0, 0, 0, 1, 1]' : 0.1989}
{'[6, 6, 6, 0, 6, 6, 4, 0, 0, 0, 0, 1, 1]' : 0.19899}
{'[6, 6, 6, 0, 6, 6, 4, 0, 0, 0, 0, 1, 1]' : 0.198945}
{'[6, 6, 6, 0, 6, 6, 4, 0, 0, 0, 0, 1, 1]' : 0.198878}
{'[6, 6, 6, 0, 6, 6, 4, 0, 0, 0, 0, 1, 1]' : 0.198905}
{'[6, 6, 6, 0, 6, 6, 4, 0, 0, 0, 0, 1, 1]' : 0.199189}
{'[6, 6, 6, 0, 6, 6, 4, 0, 0, 0, 0, 1, 1]' : 0.199008}
{'[6, 6, 6, 0, 6, 6, 4, 0, 0, 0, 0, 1, 1]' : 0.198972}
{'[6, 6, 6, 0, 6, 6, 4, 0, 0, 0, 0, 1, 1]' : 0.198938}
{'[6, 6, 6, 0, 6, 6, 4, 0, 0, 0, 0, 1, 1]' : 0.19918}
{'[6, 6, 6, 0, 6, 6, 4, 0, 0, 0, 0, 1, 1]' : 0.198981}
{'[6, 6, 6, 0, 6, 6, 4, 0, 0, 0, 0, 1, 1]' : 0.199013}

out:
 ["{'[6, 6, 6, 0, 6, 6, 4, 0, 0, 0, 0, 1, 1]' : 0.237307}", "{'[6, 6, 6, 0, 6, 6, 4, 0, 0, 0, 0, 1, 1]' : 0.217512}", "{'[6, 6, 6, 0, 6, 6, 4, 0, 0, 0, 0, 1, 1]' : 0.198888}", "{'[6, 6, 6, 0, 6, 6, 4, 0, 0, 0, 0, 1, 1]' : 0.198897}", "{'[6, 6, 6, 0, 6, 6, 4, 0, 0, 0, 0, 1, 1]' : 0.198932}", "{'[6, 6, 6, 0, 6, 6, 4, 0, 0, 0, 0, 1, 1]' : 0.198894}", "{'[6, 6, 6, 0, 6, 6, 4, 0, 0, 0, 0, 1, 1]' : 0.198894}", "{'[6, 6, 6, 0, 6, 6, 4, 0, 0, 0, 0, 1, 1]' : 0.19889}", "{'[6, 6, 6, 0, 6, 6, 4, 0, 0, 0, 0, 1, 1]' : 0.199522}", "{'[6, 6, 6, 0, 6, 6, 4, 0, 0, 0, 0, 1, 1]' : 0.19897}", "{'[6, 6, 6, 0, 6, 6, 4, 0, 0, 0, 0, 1, 1]' : 0.198896}", "{'[6, 6, 6, 0, 6, 6, 4, 0, 0, 0, 0, 1, 1]' : 0.199126}", "{'[6, 6, 6, 0, 6, 6, 4, 0, 0, 0, 0, 1, 1]' : 0.198935}", "{'[6, 6, 6, 0, 6, 6, 4, 0, 0, 0, 0, 1, 1]' : 0.198911}", "{'[6, 6, 6, 0, 6, 6, 4, 0, 0, 0, 0, 1, 1]' : 0.198976}", "{'[6, 6, 6, 0, 6, 6, 4, 0, 0, 0, 0, 1, 1]' : 0.199164}", "{'[6, 6, 6, 0, 6, 6, 4, 0, 0, 0, 0, 1, 1]' : 0.198879}", "{'[6, 6, 6, 0, 6, 6, 4, 0, 0, 0, 0, 1, 1]' : 0.199237}", "{'[6, 6, 6, 0, 6, 6, 4, 0, 0, 0, 0, 1, 1]' : 0.1989}", "{'[6, 6, 6, 0, 6, 6, 4, 0, 0, 0, 0, 1, 1]' : 0.19899}", "{'[6, 6, 6, 0, 6, 6, 4, 0, 0, 0, 0, 1, 1]' : 0.198945}", "{'[6, 6, 6, 0, 6, 6, 4, 0, 0, 0, 0, 1, 1]' : 0.198878}", "{'[6, 6, 6, 0, 6, 6, 4, 0, 0, 0, 0, 1, 1]' : 0.198905}", "{'[6, 6, 6, 0, 6, 6, 4, 0, 0, 0, 0, 1, 1]' : 0.199189}", "{'[6, 6, 6, 0, 6, 6, 4, 0, 0, 0, 0, 1, 1]' : 0.199008}", "{'[6, 6, 6, 0, 6, 6, 4, 0, 0, 0, 0, 1, 1]' : 0.198972}", "{'[6, 6, 6, 0, 6, 6, 4, 0, 0, 0, 0, 1, 1]' : 0.198938}", "{'[6, 6, 6, 0, 6, 6, 4, 0, 0, 0, 0, 1, 1]' : 0.19918}", "{'[6, 6, 6, 0, 6, 6, 4, 0, 0, 0, 0, 1, 1]' : 0.198981}", "{'[6, 6, 6, 0, 6, 6, 4, 0, 0, 0, 0, 1, 1]' : 0.199013}"]
returning from 'run': {'[6, 6, 6, 0, 6, 6, 4, 0, 0, 0, 0, 1, 1]': ([0.237307, 0.217512, 0.198888, 0.198897, 0.198932, 0.198894, 0.198894, 0.19889, 0.199522, 0.19897, 0.198896, 0.199126, 0.198935, 0.198911, 0.198976, 0.199164, 0.198879, 0.199237, 0.1989, 0.19899, 0.198945, 0.198878, 0.198905, 0.199189, 0.199008, 0.198972, 0.198938, 0.19918, 0.198981, 0.199013], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 6, 0, 6, 6, 4, 0, 0, 0, 0, 1, 1]': ([0.237307, 0.217512, 0.198888, 0.198897, 0.198932, 0.198894, 0.198894, 0.19889, 0.199522, 0.19897, 0.198896, 0.199126, 0.198935, 0.198911, 0.198976, 0.199164, 0.198879, 0.199237, 0.1989, 0.19899, 0.198945, 0.198878, 0.198905, 0.199189, 0.199008, 0.198972, 0.198938, 0.19918, 0.198981, 0.199013], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Design Best Point:
[6, 6, 0, 0, 6, 6, 24, 0, 5, 2, 0, 2, 0]
Length of requested configs: 1
Result was on Database, Returning Now
Fixed Factors: {'T2_K': 6, 'T2_J': 6, 'T1_I': 6, 'T1_J': 6}
Slowdown (Design Best): 1.0757199568771023
Slowdown (Predicted Best): 1.2509146180730113
Budget: 46/180
Current Best Point: 
[4, 4, 4, 4, 5, 6, 29, 0, 27, 29, 1, 1, 0]
Step 3
Full Model:  ~ T1_K + T2_I + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K
Generating valid search space of size 28000 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Tested coordinates: 110000
Tested coordinates: 120000
Tested coordinates: 130000
Tested coordinates: 140000
Tested coordinates: 150000
Tested coordinates: 160000
Tested coordinates: 170000
Tested coordinates: 180000
Tested coordinates: 190000
Tested coordinates: 200000
Tested coordinates: 210000
Tested coordinates: 220000
Tested coordinates: 230000
Tested coordinates: 240000
Tested coordinates: 250000
Tested coordinates: 260000
Tested coordinates: 270000
Valid coordinates: 5600
Tested coordinates: 280000
Tested coordinates: 290000
Tested coordinates: 300000
Tested coordinates: 310000
Tested coordinates: 320000
Tested coordinates: 330000
Tested coordinates: 340000
Tested coordinates: 350000
Tested coordinates: 360000
Tested coordinates: 370000
Tested coordinates: 380000
Tested coordinates: 390000
Tested coordinates: 400000
Tested coordinates: 410000
Tested coordinates: 420000
Tested coordinates: 430000
Tested coordinates: 440000
Tested coordinates: 450000
Tested coordinates: 460000
Tested coordinates: 470000
Tested coordinates: 480000
Tested coordinates: 490000
Tested coordinates: 500000
Tested coordinates: 510000
Tested coordinates: 520000
Tested coordinates: 530000
Tested coordinates: 540000
Valid coordinates: 11200
Tested coordinates: 550000
Tested coordinates: 560000
Tested coordinates: 570000
Tested coordinates: 580000
Tested coordinates: 590000
Tested coordinates: 600000
Tested coordinates: 610000
Tested coordinates: 620000
Tested coordinates: 630000
Tested coordinates: 640000
Tested coordinates: 650000
Tested coordinates: 660000
Tested coordinates: 670000
Tested coordinates: 680000
Tested coordinates: 690000
Tested coordinates: 700000
Tested coordinates: 710000
Tested coordinates: 720000
Tested coordinates: 730000
Tested coordinates: 740000
Tested coordinates: 750000
Tested coordinates: 760000
Tested coordinates: 770000
Tested coordinates: 780000
Tested coordinates: 790000
Tested coordinates: 800000
Tested coordinates: 810000
Valid coordinates: 16800
Tested coordinates: 820000
Tested coordinates: 830000
Tested coordinates: 840000
Tested coordinates: 850000
Tested coordinates: 860000
Tested coordinates: 870000
Tested coordinates: 880000
Tested coordinates: 890000
Tested coordinates: 900000
Tested coordinates: 910000
Tested coordinates: 920000
Tested coordinates: 930000
Tested coordinates: 940000
Tested coordinates: 950000
Tested coordinates: 960000
Tested coordinates: 970000
Tested coordinates: 980000
Tested coordinates: 990000
Tested coordinates: 1000000
Tested coordinates: 1010000
Tested coordinates: 1020000
Tested coordinates: 1030000
Tested coordinates: 1040000
Tested coordinates: 1050000
Tested coordinates: 1060000
Tested coordinates: 1070000
Tested coordinates: 1080000
Valid coordinates: 22400
Tested coordinates: 1090000
Tested coordinates: 1100000
Tested coordinates: 1110000
Tested coordinates: 1120000
Tested coordinates: 1130000
Tested coordinates: 1140000
Tested coordinates: 1150000
Tested coordinates: 1160000
Tested coordinates: 1170000
Tested coordinates: 1180000
Tested coordinates: 1190000
Tested coordinates: 1200000
Tested coordinates: 1210000
Tested coordinates: 1220000
Tested coordinates: 1230000
Tested coordinates: 1240000
Tested coordinates: 1250000
Tested coordinates: 1260000
Tested coordinates: 1270000
Tested coordinates: 1280000
Tested coordinates: 1290000
Tested coordinates: 1300000
Tested coordinates: 1310000
Tested coordinates: 1320000
Tested coordinates: 1330000
Tested coordinates: 1340000
Tested coordinates: 1350000
Valid coordinates: 28000
Valid/Tested configurations: 28000/1351782
Generated Search Space:
NULL
Clean Info:
Removed Factors: character(0)

Removed Inverse Factors: character(0)

New Factors: ['T1_K', 'T2_I', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
New Inverse Factors: []
New Fixed Factors: {'T2_K': 6, 'T2_J': 6, 'T1_I': 6, 'T1_J': 6}
Fixed Factors: {'T2_K': 6, 'T2_J': 6, 'T1_I': 6, 'T1_J': 6}
Computing D-Optimal Design
Computing D-Optimal Design with 14 experiments
Design Formula:  ~ T1_K + T2_I + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K
Starting "optFederov" run
Using Search Space:
NULL
Data Dimensions: [1] 28000     9

      T1_K T2_I U1_I U_I U_J U_K RT_I RT_J RT_K
865      0    0    0  28   0   1    0    2    0
1055     6    6    0   0   2   4    0    0    0
3015     1    5   27  26   1   0    0    0    2
4068     0    0    5  27   0  25    2    0    0
4184     3    0    3   3   1   0    0    2    0
5674     0    6   27   0   3  29    1    1    0
11250    4    6   29  29  28   0    0    2    0
14115    0    6    0  29   0  18    0    1    0
18023    6    0   29  27   0  28    0    0    0
18766    6    0   29  29  28   0    2    0    0
20883    0    0   29  11  28   0    0    0    0
22949    6    4   29  29   0  28    0    2    0
25465    2    0    1   0  29  29    0    0    2
26128    5    6    0  29  29   0    0    0    2

D-Efficiency Approximation: [1] 0.554

Measuring design of size 14
Current Design Names: ['T1_K', 'T2_I', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Length of requested configs: 1
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	5
        Additions: 		7158
        Multiplications: 	2160
        Divisions: 		0
        Logical: 		0
        Reads: 			10988
        Writes: 		1147
        Comparisons:		18
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest50.exe __orio_perftest50.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest50.exe  
Program Test Output: 
{'[6, 6, 0, 0, 6, 6, 0, 28, 0, 1, 0, 2, 0]' : 0.171365}
{'[6, 6, 0, 0, 6, 6, 0, 28, 0, 1, 0, 2, 0]' : 0.170953}
{'[6, 6, 0, 0, 6, 6, 0, 28, 0, 1, 0, 2, 0]' : 0.170398}
{'[6, 6, 0, 0, 6, 6, 0, 28, 0, 1, 0, 2, 0]' : 0.171044}
{'[6, 6, 0, 0, 6, 6, 0, 28, 0, 1, 0, 2, 0]' : 0.173528}
{'[6, 6, 0, 0, 6, 6, 0, 28, 0, 1, 0, 2, 0]' : 0.173942}
{'[6, 6, 0, 0, 6, 6, 0, 28, 0, 1, 0, 2, 0]' : 0.17005}
{'[6, 6, 0, 0, 6, 6, 0, 28, 0, 1, 0, 2, 0]' : 0.17454}
{'[6, 6, 0, 0, 6, 6, 0, 28, 0, 1, 0, 2, 0]' : 0.170379}
{'[6, 6, 0, 0, 6, 6, 0, 28, 0, 1, 0, 2, 0]' : 0.170754}
{'[6, 6, 0, 0, 6, 6, 0, 28, 0, 1, 0, 2, 0]' : 0.167026}
{'[6, 6, 0, 0, 6, 6, 0, 28, 0, 1, 0, 2, 0]' : 0.166238}
{'[6, 6, 0, 0, 6, 6, 0, 28, 0, 1, 0, 2, 0]' : 0.166557}
{'[6, 6, 0, 0, 6, 6, 0, 28, 0, 1, 0, 2, 0]' : 0.174394}
{'[6, 6, 0, 0, 6, 6, 0, 28, 0, 1, 0, 2, 0]' : 0.17441}
{'[6, 6, 0, 0, 6, 6, 0, 28, 0, 1, 0, 2, 0]' : 0.169022}
{'[6, 6, 0, 0, 6, 6, 0, 28, 0, 1, 0, 2, 0]' : 0.174801}
{'[6, 6, 0, 0, 6, 6, 0, 28, 0, 1, 0, 2, 0]' : 0.175022}
{'[6, 6, 0, 0, 6, 6, 0, 28, 0, 1, 0, 2, 0]' : 0.175085}
{'[6, 6, 0, 0, 6, 6, 0, 28, 0, 1, 0, 2, 0]' : 0.17514}
{'[6, 6, 0, 0, 6, 6, 0, 28, 0, 1, 0, 2, 0]' : 0.175091}
{'[6, 6, 0, 0, 6, 6, 0, 28, 0, 1, 0, 2, 0]' : 0.173107}
{'[6, 6, 0, 0, 6, 6, 0, 28, 0, 1, 0, 2, 0]' : 0.170553}
{'[6, 6, 0, 0, 6, 6, 0, 28, 0, 1, 0, 2, 0]' : 0.171}
{'[6, 6, 0, 0, 6, 6, 0, 28, 0, 1, 0, 2, 0]' : 0.172581}
{'[6, 6, 0, 0, 6, 6, 0, 28, 0, 1, 0, 2, 0]' : 0.174603}
{'[6, 6, 0, 0, 6, 6, 0, 28, 0, 1, 0, 2, 0]' : 0.174057}
{'[6, 6, 0, 0, 6, 6, 0, 28, 0, 1, 0, 2, 0]' : 0.17081}
{'[6, 6, 0, 0, 6, 6, 0, 28, 0, 1, 0, 2, 0]' : 0.170846}
{'[6, 6, 0, 0, 6, 6, 0, 28, 0, 1, 0, 2, 0]' : 0.171278}

out:
 ["{'[6, 6, 0, 0, 6, 6, 0, 28, 0, 1, 0, 2, 0]' : 0.171365}", "{'[6, 6, 0, 0, 6, 6, 0, 28, 0, 1, 0, 2, 0]' : 0.170953}", "{'[6, 6, 0, 0, 6, 6, 0, 28, 0, 1, 0, 2, 0]' : 0.170398}", "{'[6, 6, 0, 0, 6, 6, 0, 28, 0, 1, 0, 2, 0]' : 0.171044}", "{'[6, 6, 0, 0, 6, 6, 0, 28, 0, 1, 0, 2, 0]' : 0.173528}", "{'[6, 6, 0, 0, 6, 6, 0, 28, 0, 1, 0, 2, 0]' : 0.173942}", "{'[6, 6, 0, 0, 6, 6, 0, 28, 0, 1, 0, 2, 0]' : 0.17005}", "{'[6, 6, 0, 0, 6, 6, 0, 28, 0, 1, 0, 2, 0]' : 0.17454}", "{'[6, 6, 0, 0, 6, 6, 0, 28, 0, 1, 0, 2, 0]' : 0.170379}", "{'[6, 6, 0, 0, 6, 6, 0, 28, 0, 1, 0, 2, 0]' : 0.170754}", "{'[6, 6, 0, 0, 6, 6, 0, 28, 0, 1, 0, 2, 0]' : 0.167026}", "{'[6, 6, 0, 0, 6, 6, 0, 28, 0, 1, 0, 2, 0]' : 0.166238}", "{'[6, 6, 0, 0, 6, 6, 0, 28, 0, 1, 0, 2, 0]' : 0.166557}", "{'[6, 6, 0, 0, 6, 6, 0, 28, 0, 1, 0, 2, 0]' : 0.174394}", "{'[6, 6, 0, 0, 6, 6, 0, 28, 0, 1, 0, 2, 0]' : 0.17441}", "{'[6, 6, 0, 0, 6, 6, 0, 28, 0, 1, 0, 2, 0]' : 0.169022}", "{'[6, 6, 0, 0, 6, 6, 0, 28, 0, 1, 0, 2, 0]' : 0.174801}", "{'[6, 6, 0, 0, 6, 6, 0, 28, 0, 1, 0, 2, 0]' : 0.175022}", "{'[6, 6, 0, 0, 6, 6, 0, 28, 0, 1, 0, 2, 0]' : 0.175085}", "{'[6, 6, 0, 0, 6, 6, 0, 28, 0, 1, 0, 2, 0]' : 0.17514}", "{'[6, 6, 0, 0, 6, 6, 0, 28, 0, 1, 0, 2, 0]' : 0.175091}", "{'[6, 6, 0, 0, 6, 6, 0, 28, 0, 1, 0, 2, 0]' : 0.173107}", "{'[6, 6, 0, 0, 6, 6, 0, 28, 0, 1, 0, 2, 0]' : 0.170553}", "{'[6, 6, 0, 0, 6, 6, 0, 28, 0, 1, 0, 2, 0]' : 0.171}", "{'[6, 6, 0, 0, 6, 6, 0, 28, 0, 1, 0, 2, 0]' : 0.172581}", "{'[6, 6, 0, 0, 6, 6, 0, 28, 0, 1, 0, 2, 0]' : 0.174603}", "{'[6, 6, 0, 0, 6, 6, 0, 28, 0, 1, 0, 2, 0]' : 0.174057}", "{'[6, 6, 0, 0, 6, 6, 0, 28, 0, 1, 0, 2, 0]' : 0.17081}", "{'[6, 6, 0, 0, 6, 6, 0, 28, 0, 1, 0, 2, 0]' : 0.170846}", "{'[6, 6, 0, 0, 6, 6, 0, 28, 0, 1, 0, 2, 0]' : 0.171278}"]
returning from 'run': {'[6, 6, 0, 0, 6, 6, 0, 28, 0, 1, 0, 2, 0]': ([0.171365, 0.170953, 0.170398, 0.171044, 0.173528, 0.173942, 0.17005, 0.17454, 0.170379, 0.170754, 0.167026, 0.166238, 0.166557, 0.174394, 0.17441, 0.169022, 0.174801, 0.175022, 0.175085, 0.17514, 0.175091, 0.173107, 0.170553, 0.171, 0.172581, 0.174603, 0.174057, 0.17081, 0.170846, 0.171278], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 0, 0, 6, 6, 0, 28, 0, 1, 0, 2, 0]': ([0.171365, 0.170953, 0.170398, 0.171044, 0.173528, 0.173942, 0.17005, 0.17454, 0.170379, 0.170754, 0.167026, 0.166238, 0.166557, 0.174394, 0.17441, 0.169022, 0.174801, 0.175022, 0.175085, 0.17514, 0.175091, 0.173107, 0.170553, 0.171, 0.172581, 0.174603, 0.174057, 0.17081, 0.170846, 0.171278], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	6
        Additions: 		88
        Multiplications: 	20
        Divisions: 		0
        Logical: 		0
        Reads: 			188
        Writes: 		36
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest51.exe __orio_perftest51.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest51.exe  
Program Test Output: 
{'[6, 6, 6, 6, 6, 6, 0, 0, 2, 4, 0, 0, 0]' : 0.274419}
{'[6, 6, 6, 6, 6, 6, 0, 0, 2, 4, 0, 0, 0]' : 0.26101}
{'[6, 6, 6, 6, 6, 6, 0, 0, 2, 4, 0, 0, 0]' : 0.239587}
{'[6, 6, 6, 6, 6, 6, 0, 0, 2, 4, 0, 0, 0]' : 0.24004}
{'[6, 6, 6, 6, 6, 6, 0, 0, 2, 4, 0, 0, 0]' : 0.239602}
{'[6, 6, 6, 6, 6, 6, 0, 0, 2, 4, 0, 0, 0]' : 0.239589}
{'[6, 6, 6, 6, 6, 6, 0, 0, 2, 4, 0, 0, 0]' : 0.239774}
{'[6, 6, 6, 6, 6, 6, 0, 0, 2, 4, 0, 0, 0]' : 0.23981}
{'[6, 6, 6, 6, 6, 6, 0, 0, 2, 4, 0, 0, 0]' : 0.239822}
{'[6, 6, 6, 6, 6, 6, 0, 0, 2, 4, 0, 0, 0]' : 0.239681}
{'[6, 6, 6, 6, 6, 6, 0, 0, 2, 4, 0, 0, 0]' : 0.239593}
{'[6, 6, 6, 6, 6, 6, 0, 0, 2, 4, 0, 0, 0]' : 0.239708}
{'[6, 6, 6, 6, 6, 6, 0, 0, 2, 4, 0, 0, 0]' : 0.239981}
{'[6, 6, 6, 6, 6, 6, 0, 0, 2, 4, 0, 0, 0]' : 0.239694}
{'[6, 6, 6, 6, 6, 6, 0, 0, 2, 4, 0, 0, 0]' : 0.239691}
{'[6, 6, 6, 6, 6, 6, 0, 0, 2, 4, 0, 0, 0]' : 0.239673}
{'[6, 6, 6, 6, 6, 6, 0, 0, 2, 4, 0, 0, 0]' : 0.239825}
{'[6, 6, 6, 6, 6, 6, 0, 0, 2, 4, 0, 0, 0]' : 0.239933}
{'[6, 6, 6, 6, 6, 6, 0, 0, 2, 4, 0, 0, 0]' : 0.239589}
{'[6, 6, 6, 6, 6, 6, 0, 0, 2, 4, 0, 0, 0]' : 0.239703}
{'[6, 6, 6, 6, 6, 6, 0, 0, 2, 4, 0, 0, 0]' : 0.239961}
{'[6, 6, 6, 6, 6, 6, 0, 0, 2, 4, 0, 0, 0]' : 0.239863}
{'[6, 6, 6, 6, 6, 6, 0, 0, 2, 4, 0, 0, 0]' : 0.239957}
{'[6, 6, 6, 6, 6, 6, 0, 0, 2, 4, 0, 0, 0]' : 0.240634}
{'[6, 6, 6, 6, 6, 6, 0, 0, 2, 4, 0, 0, 0]' : 0.240342}
{'[6, 6, 6, 6, 6, 6, 0, 0, 2, 4, 0, 0, 0]' : 0.240292}
{'[6, 6, 6, 6, 6, 6, 0, 0, 2, 4, 0, 0, 0]' : 0.240809}
{'[6, 6, 6, 6, 6, 6, 0, 0, 2, 4, 0, 0, 0]' : 0.240371}
{'[6, 6, 6, 6, 6, 6, 0, 0, 2, 4, 0, 0, 0]' : 0.240388}
{'[6, 6, 6, 6, 6, 6, 0, 0, 2, 4, 0, 0, 0]' : 0.240311}

out:
 ["{'[6, 6, 6, 6, 6, 6, 0, 0, 2, 4, 0, 0, 0]' : 0.274419}", "{'[6, 6, 6, 6, 6, 6, 0, 0, 2, 4, 0, 0, 0]' : 0.26101}", "{'[6, 6, 6, 6, 6, 6, 0, 0, 2, 4, 0, 0, 0]' : 0.239587}", "{'[6, 6, 6, 6, 6, 6, 0, 0, 2, 4, 0, 0, 0]' : 0.24004}", "{'[6, 6, 6, 6, 6, 6, 0, 0, 2, 4, 0, 0, 0]' : 0.239602}", "{'[6, 6, 6, 6, 6, 6, 0, 0, 2, 4, 0, 0, 0]' : 0.239589}", "{'[6, 6, 6, 6, 6, 6, 0, 0, 2, 4, 0, 0, 0]' : 0.239774}", "{'[6, 6, 6, 6, 6, 6, 0, 0, 2, 4, 0, 0, 0]' : 0.23981}", "{'[6, 6, 6, 6, 6, 6, 0, 0, 2, 4, 0, 0, 0]' : 0.239822}", "{'[6, 6, 6, 6, 6, 6, 0, 0, 2, 4, 0, 0, 0]' : 0.239681}", "{'[6, 6, 6, 6, 6, 6, 0, 0, 2, 4, 0, 0, 0]' : 0.239593}", "{'[6, 6, 6, 6, 6, 6, 0, 0, 2, 4, 0, 0, 0]' : 0.239708}", "{'[6, 6, 6, 6, 6, 6, 0, 0, 2, 4, 0, 0, 0]' : 0.239981}", "{'[6, 6, 6, 6, 6, 6, 0, 0, 2, 4, 0, 0, 0]' : 0.239694}", "{'[6, 6, 6, 6, 6, 6, 0, 0, 2, 4, 0, 0, 0]' : 0.239691}", "{'[6, 6, 6, 6, 6, 6, 0, 0, 2, 4, 0, 0, 0]' : 0.239673}", "{'[6, 6, 6, 6, 6, 6, 0, 0, 2, 4, 0, 0, 0]' : 0.239825}", "{'[6, 6, 6, 6, 6, 6, 0, 0, 2, 4, 0, 0, 0]' : 0.239933}", "{'[6, 6, 6, 6, 6, 6, 0, 0, 2, 4, 0, 0, 0]' : 0.239589}", "{'[6, 6, 6, 6, 6, 6, 0, 0, 2, 4, 0, 0, 0]' : 0.239703}", "{'[6, 6, 6, 6, 6, 6, 0, 0, 2, 4, 0, 0, 0]' : 0.239961}", "{'[6, 6, 6, 6, 6, 6, 0, 0, 2, 4, 0, 0, 0]' : 0.239863}", "{'[6, 6, 6, 6, 6, 6, 0, 0, 2, 4, 0, 0, 0]' : 0.239957}", "{'[6, 6, 6, 6, 6, 6, 0, 0, 2, 4, 0, 0, 0]' : 0.240634}", "{'[6, 6, 6, 6, 6, 6, 0, 0, 2, 4, 0, 0, 0]' : 0.240342}", "{'[6, 6, 6, 6, 6, 6, 0, 0, 2, 4, 0, 0, 0]' : 0.240292}", "{'[6, 6, 6, 6, 6, 6, 0, 0, 2, 4, 0, 0, 0]' : 0.240809}", "{'[6, 6, 6, 6, 6, 6, 0, 0, 2, 4, 0, 0, 0]' : 0.240371}", "{'[6, 6, 6, 6, 6, 6, 0, 0, 2, 4, 0, 0, 0]' : 0.240388}", "{'[6, 6, 6, 6, 6, 6, 0, 0, 2, 4, 0, 0, 0]' : 0.240311}"]
returning from 'run': {'[6, 6, 6, 6, 6, 6, 0, 0, 2, 4, 0, 0, 0]': ([0.274419, 0.26101, 0.239587, 0.24004, 0.239602, 0.239589, 0.239774, 0.23981, 0.239822, 0.239681, 0.239593, 0.239708, 0.239981, 0.239694, 0.239691, 0.239673, 0.239825, 0.239933, 0.239589, 0.239703, 0.239961, 0.239863, 0.239957, 0.240634, 0.240342, 0.240292, 0.240809, 0.240371, 0.240388, 0.240311], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 6, 6, 6, 6, 0, 0, 2, 4, 0, 0, 0]': ([0.274419, 0.26101, 0.239587, 0.24004, 0.239602, 0.239589, 0.239774, 0.23981, 0.239822, 0.239681, 0.239593, 0.239708, 0.239981, 0.239694, 0.239691, 0.239673, 0.239825, 0.239933, 0.239589, 0.239703, 0.239961, 0.239863, 0.239957, 0.240634, 0.240342, 0.240292, 0.240809, 0.240371, 0.240388, 0.240311], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	6
        Additions: 		6773
        Multiplications: 	2016
        Divisions: 		0
        Logical: 		0
        Reads: 			10348
        Writes: 		1109
        Comparisons:		22
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest52.exe __orio_perftest52.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest52.exe  
Program Test Output: 
{'[6, 6, 1, 5, 6, 6, 27, 26, 1, 0, 0, 0, 2]' : 0.205082}
{'[6, 6, 1, 5, 6, 6, 27, 26, 1, 0, 0, 0, 2]' : 0.204853}
{'[6, 6, 1, 5, 6, 6, 27, 26, 1, 0, 0, 0, 2]' : 0.192342}
{'[6, 6, 1, 5, 6, 6, 27, 26, 1, 0, 0, 0, 2]' : 0.184434}
{'[6, 6, 1, 5, 6, 6, 27, 26, 1, 0, 0, 0, 2]' : 0.185111}
{'[6, 6, 1, 5, 6, 6, 27, 26, 1, 0, 0, 0, 2]' : 0.184873}
{'[6, 6, 1, 5, 6, 6, 27, 26, 1, 0, 0, 0, 2]' : 0.184752}
{'[6, 6, 1, 5, 6, 6, 27, 26, 1, 0, 0, 0, 2]' : 0.184429}
{'[6, 6, 1, 5, 6, 6, 27, 26, 1, 0, 0, 0, 2]' : 0.184626}
{'[6, 6, 1, 5, 6, 6, 27, 26, 1, 0, 0, 0, 2]' : 0.184463}
{'[6, 6, 1, 5, 6, 6, 27, 26, 1, 0, 0, 0, 2]' : 0.184819}
{'[6, 6, 1, 5, 6, 6, 27, 26, 1, 0, 0, 0, 2]' : 0.18513}
{'[6, 6, 1, 5, 6, 6, 27, 26, 1, 0, 0, 0, 2]' : 0.184562}
{'[6, 6, 1, 5, 6, 6, 27, 26, 1, 0, 0, 0, 2]' : 0.184803}
{'[6, 6, 1, 5, 6, 6, 27, 26, 1, 0, 0, 0, 2]' : 0.184551}
{'[6, 6, 1, 5, 6, 6, 27, 26, 1, 0, 0, 0, 2]' : 0.182919}
{'[6, 6, 1, 5, 6, 6, 27, 26, 1, 0, 0, 0, 2]' : 0.182876}
{'[6, 6, 1, 5, 6, 6, 27, 26, 1, 0, 0, 0, 2]' : 0.184619}
{'[6, 6, 1, 5, 6, 6, 27, 26, 1, 0, 0, 0, 2]' : 0.184509}
{'[6, 6, 1, 5, 6, 6, 27, 26, 1, 0, 0, 0, 2]' : 0.184644}
{'[6, 6, 1, 5, 6, 6, 27, 26, 1, 0, 0, 0, 2]' : 0.18452}
{'[6, 6, 1, 5, 6, 6, 27, 26, 1, 0, 0, 0, 2]' : 0.184803}
{'[6, 6, 1, 5, 6, 6, 27, 26, 1, 0, 0, 0, 2]' : 0.18502}
{'[6, 6, 1, 5, 6, 6, 27, 26, 1, 0, 0, 0, 2]' : 0.184805}
{'[6, 6, 1, 5, 6, 6, 27, 26, 1, 0, 0, 0, 2]' : 0.184609}
{'[6, 6, 1, 5, 6, 6, 27, 26, 1, 0, 0, 0, 2]' : 0.184395}
{'[6, 6, 1, 5, 6, 6, 27, 26, 1, 0, 0, 0, 2]' : 0.18477}
{'[6, 6, 1, 5, 6, 6, 27, 26, 1, 0, 0, 0, 2]' : 0.184542}
{'[6, 6, 1, 5, 6, 6, 27, 26, 1, 0, 0, 0, 2]' : 0.180735}
{'[6, 6, 1, 5, 6, 6, 27, 26, 1, 0, 0, 0, 2]' : 0.180002}

out:
 ["{'[6, 6, 1, 5, 6, 6, 27, 26, 1, 0, 0, 0, 2]' : 0.205082}", "{'[6, 6, 1, 5, 6, 6, 27, 26, 1, 0, 0, 0, 2]' : 0.204853}", "{'[6, 6, 1, 5, 6, 6, 27, 26, 1, 0, 0, 0, 2]' : 0.192342}", "{'[6, 6, 1, 5, 6, 6, 27, 26, 1, 0, 0, 0, 2]' : 0.184434}", "{'[6, 6, 1, 5, 6, 6, 27, 26, 1, 0, 0, 0, 2]' : 0.185111}", "{'[6, 6, 1, 5, 6, 6, 27, 26, 1, 0, 0, 0, 2]' : 0.184873}", "{'[6, 6, 1, 5, 6, 6, 27, 26, 1, 0, 0, 0, 2]' : 0.184752}", "{'[6, 6, 1, 5, 6, 6, 27, 26, 1, 0, 0, 0, 2]' : 0.184429}", "{'[6, 6, 1, 5, 6, 6, 27, 26, 1, 0, 0, 0, 2]' : 0.184626}", "{'[6, 6, 1, 5, 6, 6, 27, 26, 1, 0, 0, 0, 2]' : 0.184463}", "{'[6, 6, 1, 5, 6, 6, 27, 26, 1, 0, 0, 0, 2]' : 0.184819}", "{'[6, 6, 1, 5, 6, 6, 27, 26, 1, 0, 0, 0, 2]' : 0.18513}", "{'[6, 6, 1, 5, 6, 6, 27, 26, 1, 0, 0, 0, 2]' : 0.184562}", "{'[6, 6, 1, 5, 6, 6, 27, 26, 1, 0, 0, 0, 2]' : 0.184803}", "{'[6, 6, 1, 5, 6, 6, 27, 26, 1, 0, 0, 0, 2]' : 0.184551}", "{'[6, 6, 1, 5, 6, 6, 27, 26, 1, 0, 0, 0, 2]' : 0.182919}", "{'[6, 6, 1, 5, 6, 6, 27, 26, 1, 0, 0, 0, 2]' : 0.182876}", "{'[6, 6, 1, 5, 6, 6, 27, 26, 1, 0, 0, 0, 2]' : 0.184619}", "{'[6, 6, 1, 5, 6, 6, 27, 26, 1, 0, 0, 0, 2]' : 0.184509}", "{'[6, 6, 1, 5, 6, 6, 27, 26, 1, 0, 0, 0, 2]' : 0.184644}", "{'[6, 6, 1, 5, 6, 6, 27, 26, 1, 0, 0, 0, 2]' : 0.18452}", "{'[6, 6, 1, 5, 6, 6, 27, 26, 1, 0, 0, 0, 2]' : 0.184803}", "{'[6, 6, 1, 5, 6, 6, 27, 26, 1, 0, 0, 0, 2]' : 0.18502}", "{'[6, 6, 1, 5, 6, 6, 27, 26, 1, 0, 0, 0, 2]' : 0.184805}", "{'[6, 6, 1, 5, 6, 6, 27, 26, 1, 0, 0, 0, 2]' : 0.184609}", "{'[6, 6, 1, 5, 6, 6, 27, 26, 1, 0, 0, 0, 2]' : 0.184395}", "{'[6, 6, 1, 5, 6, 6, 27, 26, 1, 0, 0, 0, 2]' : 0.18477}", "{'[6, 6, 1, 5, 6, 6, 27, 26, 1, 0, 0, 0, 2]' : 0.184542}", "{'[6, 6, 1, 5, 6, 6, 27, 26, 1, 0, 0, 0, 2]' : 0.180735}", "{'[6, 6, 1, 5, 6, 6, 27, 26, 1, 0, 0, 0, 2]' : 0.180002}"]
returning from 'run': {'[6, 6, 1, 5, 6, 6, 27, 26, 1, 0, 0, 0, 2]': ([0.205082, 0.204853, 0.192342, 0.184434, 0.185111, 0.184873, 0.184752, 0.184429, 0.184626, 0.184463, 0.184819, 0.18513, 0.184562, 0.184803, 0.184551, 0.182919, 0.182876, 0.184619, 0.184509, 0.184644, 0.18452, 0.184803, 0.18502, 0.184805, 0.184609, 0.184395, 0.18477, 0.184542, 0.180735, 0.180002], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 1, 5, 6, 6, 27, 26, 1, 0, 0, 0, 2]': ([0.205082, 0.204853, 0.192342, 0.184434, 0.185111, 0.184873, 0.184752, 0.184429, 0.184626, 0.184463, 0.184819, 0.18513, 0.184562, 0.184803, 0.184551, 0.182919, 0.182876, 0.184619, 0.184509, 0.184644, 0.18452, 0.184803, 0.18502, 0.184805, 0.184609, 0.184395, 0.18477, 0.184542, 0.180735, 0.180002], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	5
        Additions: 		11436
        Multiplications: 	3416
        Divisions: 		0
        Logical: 		0
        Reads: 			17322
        Writes: 		1793
        Comparisons:		24
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest53.exe __orio_perftest53.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest53.exe  
Program Test Output: 
{'[6, 6, 0, 0, 6, 6, 5, 27, 0, 25, 2, 0, 0]' : 0.253478}
{'[6, 6, 0, 0, 6, 6, 5, 27, 0, 25, 2, 0, 0]' : 0.253982}
{'[6, 6, 0, 0, 6, 6, 5, 27, 0, 25, 2, 0, 0]' : 0.226415}
{'[6, 6, 0, 0, 6, 6, 5, 27, 0, 25, 2, 0, 0]' : 0.223764}
{'[6, 6, 0, 0, 6, 6, 5, 27, 0, 25, 2, 0, 0]' : 0.229118}
{'[6, 6, 0, 0, 6, 6, 5, 27, 0, 25, 2, 0, 0]' : 0.223989}
{'[6, 6, 0, 0, 6, 6, 5, 27, 0, 25, 2, 0, 0]' : 0.223701}
{'[6, 6, 0, 0, 6, 6, 5, 27, 0, 25, 2, 0, 0]' : 0.224783}
{'[6, 6, 0, 0, 6, 6, 5, 27, 0, 25, 2, 0, 0]' : 0.226525}
{'[6, 6, 0, 0, 6, 6, 5, 27, 0, 25, 2, 0, 0]' : 0.225379}
{'[6, 6, 0, 0, 6, 6, 5, 27, 0, 25, 2, 0, 0]' : 0.222117}
{'[6, 6, 0, 0, 6, 6, 5, 27, 0, 25, 2, 0, 0]' : 0.224913}
{'[6, 6, 0, 0, 6, 6, 5, 27, 0, 25, 2, 0, 0]' : 0.226696}
{'[6, 6, 0, 0, 6, 6, 5, 27, 0, 25, 2, 0, 0]' : 0.224983}
{'[6, 6, 0, 0, 6, 6, 5, 27, 0, 25, 2, 0, 0]' : 0.222353}
{'[6, 6, 0, 0, 6, 6, 5, 27, 0, 25, 2, 0, 0]' : 0.224597}
{'[6, 6, 0, 0, 6, 6, 5, 27, 0, 25, 2, 0, 0]' : 0.222118}
{'[6, 6, 0, 0, 6, 6, 5, 27, 0, 25, 2, 0, 0]' : 0.223899}
{'[6, 6, 0, 0, 6, 6, 5, 27, 0, 25, 2, 0, 0]' : 0.224029}
{'[6, 6, 0, 0, 6, 6, 5, 27, 0, 25, 2, 0, 0]' : 0.225363}
{'[6, 6, 0, 0, 6, 6, 5, 27, 0, 25, 2, 0, 0]' : 0.234667}
{'[6, 6, 0, 0, 6, 6, 5, 27, 0, 25, 2, 0, 0]' : 0.228947}
{'[6, 6, 0, 0, 6, 6, 5, 27, 0, 25, 2, 0, 0]' : 0.223921}
{'[6, 6, 0, 0, 6, 6, 5, 27, 0, 25, 2, 0, 0]' : 0.22511}
{'[6, 6, 0, 0, 6, 6, 5, 27, 0, 25, 2, 0, 0]' : 0.227028}
{'[6, 6, 0, 0, 6, 6, 5, 27, 0, 25, 2, 0, 0]' : 0.223994}
{'[6, 6, 0, 0, 6, 6, 5, 27, 0, 25, 2, 0, 0]' : 0.222669}
{'[6, 6, 0, 0, 6, 6, 5, 27, 0, 25, 2, 0, 0]' : 0.225901}
{'[6, 6, 0, 0, 6, 6, 5, 27, 0, 25, 2, 0, 0]' : 0.226167}
{'[6, 6, 0, 0, 6, 6, 5, 27, 0, 25, 2, 0, 0]' : 0.225567}

out:
 ["{'[6, 6, 0, 0, 6, 6, 5, 27, 0, 25, 2, 0, 0]' : 0.253478}", "{'[6, 6, 0, 0, 6, 6, 5, 27, 0, 25, 2, 0, 0]' : 0.253982}", "{'[6, 6, 0, 0, 6, 6, 5, 27, 0, 25, 2, 0, 0]' : 0.226415}", "{'[6, 6, 0, 0, 6, 6, 5, 27, 0, 25, 2, 0, 0]' : 0.223764}", "{'[6, 6, 0, 0, 6, 6, 5, 27, 0, 25, 2, 0, 0]' : 0.229118}", "{'[6, 6, 0, 0, 6, 6, 5, 27, 0, 25, 2, 0, 0]' : 0.223989}", "{'[6, 6, 0, 0, 6, 6, 5, 27, 0, 25, 2, 0, 0]' : 0.223701}", "{'[6, 6, 0, 0, 6, 6, 5, 27, 0, 25, 2, 0, 0]' : 0.224783}", "{'[6, 6, 0, 0, 6, 6, 5, 27, 0, 25, 2, 0, 0]' : 0.226525}", "{'[6, 6, 0, 0, 6, 6, 5, 27, 0, 25, 2, 0, 0]' : 0.225379}", "{'[6, 6, 0, 0, 6, 6, 5, 27, 0, 25, 2, 0, 0]' : 0.222117}", "{'[6, 6, 0, 0, 6, 6, 5, 27, 0, 25, 2, 0, 0]' : 0.224913}", "{'[6, 6, 0, 0, 6, 6, 5, 27, 0, 25, 2, 0, 0]' : 0.226696}", "{'[6, 6, 0, 0, 6, 6, 5, 27, 0, 25, 2, 0, 0]' : 0.224983}", "{'[6, 6, 0, 0, 6, 6, 5, 27, 0, 25, 2, 0, 0]' : 0.222353}", "{'[6, 6, 0, 0, 6, 6, 5, 27, 0, 25, 2, 0, 0]' : 0.224597}", "{'[6, 6, 0, 0, 6, 6, 5, 27, 0, 25, 2, 0, 0]' : 0.222118}", "{'[6, 6, 0, 0, 6, 6, 5, 27, 0, 25, 2, 0, 0]' : 0.223899}", "{'[6, 6, 0, 0, 6, 6, 5, 27, 0, 25, 2, 0, 0]' : 0.224029}", "{'[6, 6, 0, 0, 6, 6, 5, 27, 0, 25, 2, 0, 0]' : 0.225363}", "{'[6, 6, 0, 0, 6, 6, 5, 27, 0, 25, 2, 0, 0]' : 0.234667}", "{'[6, 6, 0, 0, 6, 6, 5, 27, 0, 25, 2, 0, 0]' : 0.228947}", "{'[6, 6, 0, 0, 6, 6, 5, 27, 0, 25, 2, 0, 0]' : 0.223921}", "{'[6, 6, 0, 0, 6, 6, 5, 27, 0, 25, 2, 0, 0]' : 0.22511}", "{'[6, 6, 0, 0, 6, 6, 5, 27, 0, 25, 2, 0, 0]' : 0.227028}", "{'[6, 6, 0, 0, 6, 6, 5, 27, 0, 25, 2, 0, 0]' : 0.223994}", "{'[6, 6, 0, 0, 6, 6, 5, 27, 0, 25, 2, 0, 0]' : 0.222669}", "{'[6, 6, 0, 0, 6, 6, 5, 27, 0, 25, 2, 0, 0]' : 0.225901}", "{'[6, 6, 0, 0, 6, 6, 5, 27, 0, 25, 2, 0, 0]' : 0.226167}", "{'[6, 6, 0, 0, 6, 6, 5, 27, 0, 25, 2, 0, 0]' : 0.225567}"]
returning from 'run': {'[6, 6, 0, 0, 6, 6, 5, 27, 0, 25, 2, 0, 0]': ([0.253478, 0.253982, 0.226415, 0.223764, 0.229118, 0.223989, 0.223701, 0.224783, 0.226525, 0.225379, 0.222117, 0.224913, 0.226696, 0.224983, 0.222353, 0.224597, 0.222118, 0.223899, 0.224029, 0.225363, 0.234667, 0.228947, 0.223921, 0.22511, 0.227028, 0.223994, 0.222669, 0.225901, 0.226167, 0.225567], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 0, 0, 6, 6, 5, 27, 0, 25, 2, 0, 0]': ([0.253478, 0.253982, 0.226415, 0.223764, 0.229118, 0.223989, 0.223701, 0.224783, 0.226525, 0.225379, 0.222117, 0.224913, 0.226696, 0.224983, 0.222353, 0.224597, 0.222118, 0.223899, 0.224029, 0.225363, 0.234667, 0.228947, 0.223921, 0.22511, 0.227028, 0.223994, 0.222669, 0.225901, 0.226167, 0.225567], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	27
        Max loop nest depth: 	5
        Additions: 		1146
        Multiplications: 	360
        Divisions: 		0
        Logical: 		0
        Reads: 			2021
        Writes: 		244
        Comparisons:		27
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest54.exe __orio_perftest54.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest54.exe  
Program Test Output: 
{'[6, 6, 3, 0, 6, 6, 3, 3, 1, 0, 0, 2, 0]' : 0.132542}
{'[6, 6, 3, 0, 6, 6, 3, 3, 1, 0, 0, 2, 0]' : 0.13214}
{'[6, 6, 3, 0, 6, 6, 3, 3, 1, 0, 0, 2, 0]' : 0.132137}
{'[6, 6, 3, 0, 6, 6, 3, 3, 1, 0, 0, 2, 0]' : 0.132091}
{'[6, 6, 3, 0, 6, 6, 3, 3, 1, 0, 0, 2, 0]' : 0.13547}
{'[6, 6, 3, 0, 6, 6, 3, 3, 1, 0, 0, 2, 0]' : 0.135978}
{'[6, 6, 3, 0, 6, 6, 3, 3, 1, 0, 0, 2, 0]' : 0.134169}
{'[6, 6, 3, 0, 6, 6, 3, 3, 1, 0, 0, 2, 0]' : 0.132665}
{'[6, 6, 3, 0, 6, 6, 3, 3, 1, 0, 0, 2, 0]' : 0.1323}
{'[6, 6, 3, 0, 6, 6, 3, 3, 1, 0, 0, 2, 0]' : 0.132162}
{'[6, 6, 3, 0, 6, 6, 3, 3, 1, 0, 0, 2, 0]' : 0.132068}
{'[6, 6, 3, 0, 6, 6, 3, 3, 1, 0, 0, 2, 0]' : 0.133655}
{'[6, 6, 3, 0, 6, 6, 3, 3, 1, 0, 0, 2, 0]' : 0.135915}
{'[6, 6, 3, 0, 6, 6, 3, 3, 1, 0, 0, 2, 0]' : 0.136014}
{'[6, 6, 3, 0, 6, 6, 3, 3, 1, 0, 0, 2, 0]' : 0.134772}
{'[6, 6, 3, 0, 6, 6, 3, 3, 1, 0, 0, 2, 0]' : 0.132437}
{'[6, 6, 3, 0, 6, 6, 3, 3, 1, 0, 0, 2, 0]' : 0.132311}
{'[6, 6, 3, 0, 6, 6, 3, 3, 1, 0, 0, 2, 0]' : 0.132306}
{'[6, 6, 3, 0, 6, 6, 3, 3, 1, 0, 0, 2, 0]' : 0.132167}
{'[6, 6, 3, 0, 6, 6, 3, 3, 1, 0, 0, 2, 0]' : 0.135663}
{'[6, 6, 3, 0, 6, 6, 3, 3, 1, 0, 0, 2, 0]' : 0.135908}
{'[6, 6, 3, 0, 6, 6, 3, 3, 1, 0, 0, 2, 0]' : 0.134397}
{'[6, 6, 3, 0, 6, 6, 3, 3, 1, 0, 0, 2, 0]' : 0.13255}
{'[6, 6, 3, 0, 6, 6, 3, 3, 1, 0, 0, 2, 0]' : 0.132259}
{'[6, 6, 3, 0, 6, 6, 3, 3, 1, 0, 0, 2, 0]' : 0.132311}
{'[6, 6, 3, 0, 6, 6, 3, 3, 1, 0, 0, 2, 0]' : 0.132107}
{'[6, 6, 3, 0, 6, 6, 3, 3, 1, 0, 0, 2, 0]' : 0.13373}
{'[6, 6, 3, 0, 6, 6, 3, 3, 1, 0, 0, 2, 0]' : 0.135989}
{'[6, 6, 3, 0, 6, 6, 3, 3, 1, 0, 0, 2, 0]' : 0.135919}
{'[6, 6, 3, 0, 6, 6, 3, 3, 1, 0, 0, 2, 0]' : 0.135998}

out:
 ["{'[6, 6, 3, 0, 6, 6, 3, 3, 1, 0, 0, 2, 0]' : 0.132542}", "{'[6, 6, 3, 0, 6, 6, 3, 3, 1, 0, 0, 2, 0]' : 0.13214}", "{'[6, 6, 3, 0, 6, 6, 3, 3, 1, 0, 0, 2, 0]' : 0.132137}", "{'[6, 6, 3, 0, 6, 6, 3, 3, 1, 0, 0, 2, 0]' : 0.132091}", "{'[6, 6, 3, 0, 6, 6, 3, 3, 1, 0, 0, 2, 0]' : 0.13547}", "{'[6, 6, 3, 0, 6, 6, 3, 3, 1, 0, 0, 2, 0]' : 0.135978}", "{'[6, 6, 3, 0, 6, 6, 3, 3, 1, 0, 0, 2, 0]' : 0.134169}", "{'[6, 6, 3, 0, 6, 6, 3, 3, 1, 0, 0, 2, 0]' : 0.132665}", "{'[6, 6, 3, 0, 6, 6, 3, 3, 1, 0, 0, 2, 0]' : 0.1323}", "{'[6, 6, 3, 0, 6, 6, 3, 3, 1, 0, 0, 2, 0]' : 0.132162}", "{'[6, 6, 3, 0, 6, 6, 3, 3, 1, 0, 0, 2, 0]' : 0.132068}", "{'[6, 6, 3, 0, 6, 6, 3, 3, 1, 0, 0, 2, 0]' : 0.133655}", "{'[6, 6, 3, 0, 6, 6, 3, 3, 1, 0, 0, 2, 0]' : 0.135915}", "{'[6, 6, 3, 0, 6, 6, 3, 3, 1, 0, 0, 2, 0]' : 0.136014}", "{'[6, 6, 3, 0, 6, 6, 3, 3, 1, 0, 0, 2, 0]' : 0.134772}", "{'[6, 6, 3, 0, 6, 6, 3, 3, 1, 0, 0, 2, 0]' : 0.132437}", "{'[6, 6, 3, 0, 6, 6, 3, 3, 1, 0, 0, 2, 0]' : 0.132311}", "{'[6, 6, 3, 0, 6, 6, 3, 3, 1, 0, 0, 2, 0]' : 0.132306}", "{'[6, 6, 3, 0, 6, 6, 3, 3, 1, 0, 0, 2, 0]' : 0.132167}", "{'[6, 6, 3, 0, 6, 6, 3, 3, 1, 0, 0, 2, 0]' : 0.135663}", "{'[6, 6, 3, 0, 6, 6, 3, 3, 1, 0, 0, 2, 0]' : 0.135908}", "{'[6, 6, 3, 0, 6, 6, 3, 3, 1, 0, 0, 2, 0]' : 0.134397}", "{'[6, 6, 3, 0, 6, 6, 3, 3, 1, 0, 0, 2, 0]' : 0.13255}", "{'[6, 6, 3, 0, 6, 6, 3, 3, 1, 0, 0, 2, 0]' : 0.132259}", "{'[6, 6, 3, 0, 6, 6, 3, 3, 1, 0, 0, 2, 0]' : 0.132311}", "{'[6, 6, 3, 0, 6, 6, 3, 3, 1, 0, 0, 2, 0]' : 0.132107}", "{'[6, 6, 3, 0, 6, 6, 3, 3, 1, 0, 0, 2, 0]' : 0.13373}", "{'[6, 6, 3, 0, 6, 6, 3, 3, 1, 0, 0, 2, 0]' : 0.135989}", "{'[6, 6, 3, 0, 6, 6, 3, 3, 1, 0, 0, 2, 0]' : 0.135919}", "{'[6, 6, 3, 0, 6, 6, 3, 3, 1, 0, 0, 2, 0]' : 0.135998}"]
returning from 'run': {'[6, 6, 3, 0, 6, 6, 3, 3, 1, 0, 0, 2, 0]': ([0.132542, 0.13214, 0.132137, 0.132091, 0.13547, 0.135978, 0.134169, 0.132665, 0.1323, 0.132162, 0.132068, 0.133655, 0.135915, 0.136014, 0.134772, 0.132437, 0.132311, 0.132306, 0.132167, 0.135663, 0.135908, 0.134397, 0.13255, 0.132259, 0.132311, 0.132107, 0.13373, 0.135989, 0.135919, 0.135998], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 3, 0, 6, 6, 3, 3, 1, 0, 0, 2, 0]': ([0.132542, 0.13214, 0.132137, 0.132091, 0.13547, 0.135978, 0.134169, 0.132665, 0.1323, 0.132162, 0.132068, 0.133655, 0.135915, 0.136014, 0.134772, 0.132437, 0.132311, 0.132306, 0.132167, 0.135663, 0.135908, 0.134397, 0.13255, 0.132259, 0.132311, 0.132107, 0.13373, 0.135989, 0.135919, 0.135998], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	6
        Additions: 		2594
        Multiplications: 	792
        Divisions: 		0
        Logical: 		0
        Reads: 			4180
        Writes: 		471
        Comparisons:		22
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest55.exe __orio_perftest55.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest55.exe  
Program Test Output: 
{'[6, 6, 0, 6, 6, 6, 27, 0, 3, 29, 1, 1, 0]' : 0.12983}
{'[6, 6, 0, 6, 6, 6, 27, 0, 3, 29, 1, 1, 0]' : 0.129244}
{'[6, 6, 0, 6, 6, 6, 27, 0, 3, 29, 1, 1, 0]' : 0.11309}
{'[6, 6, 0, 6, 6, 6, 27, 0, 3, 29, 1, 1, 0]' : 0.110762}
{'[6, 6, 0, 6, 6, 6, 27, 0, 3, 29, 1, 1, 0]' : 0.110743}
{'[6, 6, 0, 6, 6, 6, 27, 0, 3, 29, 1, 1, 0]' : 0.110442}
{'[6, 6, 0, 6, 6, 6, 27, 0, 3, 29, 1, 1, 0]' : 0.110297}
{'[6, 6, 0, 6, 6, 6, 27, 0, 3, 29, 1, 1, 0]' : 0.110484}
{'[6, 6, 0, 6, 6, 6, 27, 0, 3, 29, 1, 1, 0]' : 0.110521}
{'[6, 6, 0, 6, 6, 6, 27, 0, 3, 29, 1, 1, 0]' : 0.110994}
{'[6, 6, 0, 6, 6, 6, 27, 0, 3, 29, 1, 1, 0]' : 0.110887}
{'[6, 6, 0, 6, 6, 6, 27, 0, 3, 29, 1, 1, 0]' : 0.110903}
{'[6, 6, 0, 6, 6, 6, 27, 0, 3, 29, 1, 1, 0]' : 0.110992}
{'[6, 6, 0, 6, 6, 6, 27, 0, 3, 29, 1, 1, 0]' : 0.111286}
{'[6, 6, 0, 6, 6, 6, 27, 0, 3, 29, 1, 1, 0]' : 0.110367}
{'[6, 6, 0, 6, 6, 6, 27, 0, 3, 29, 1, 1, 0]' : 0.110594}
{'[6, 6, 0, 6, 6, 6, 27, 0, 3, 29, 1, 1, 0]' : 0.110618}
{'[6, 6, 0, 6, 6, 6, 27, 0, 3, 29, 1, 1, 0]' : 0.11073}
{'[6, 6, 0, 6, 6, 6, 27, 0, 3, 29, 1, 1, 0]' : 0.110815}
{'[6, 6, 0, 6, 6, 6, 27, 0, 3, 29, 1, 1, 0]' : 0.110895}
{'[6, 6, 0, 6, 6, 6, 27, 0, 3, 29, 1, 1, 0]' : 0.110934}
{'[6, 6, 0, 6, 6, 6, 27, 0, 3, 29, 1, 1, 0]' : 0.111225}
{'[6, 6, 0, 6, 6, 6, 27, 0, 3, 29, 1, 1, 0]' : 0.110843}
{'[6, 6, 0, 6, 6, 6, 27, 0, 3, 29, 1, 1, 0]' : 0.110473}
{'[6, 6, 0, 6, 6, 6, 27, 0, 3, 29, 1, 1, 0]' : 0.110583}
{'[6, 6, 0, 6, 6, 6, 27, 0, 3, 29, 1, 1, 0]' : 0.110606}
{'[6, 6, 0, 6, 6, 6, 27, 0, 3, 29, 1, 1, 0]' : 0.110507}
{'[6, 6, 0, 6, 6, 6, 27, 0, 3, 29, 1, 1, 0]' : 0.110903}
{'[6, 6, 0, 6, 6, 6, 27, 0, 3, 29, 1, 1, 0]' : 0.110947}
{'[6, 6, 0, 6, 6, 6, 27, 0, 3, 29, 1, 1, 0]' : 0.111346}

out:
 ["{'[6, 6, 0, 6, 6, 6, 27, 0, 3, 29, 1, 1, 0]' : 0.12983}", "{'[6, 6, 0, 6, 6, 6, 27, 0, 3, 29, 1, 1, 0]' : 0.129244}", "{'[6, 6, 0, 6, 6, 6, 27, 0, 3, 29, 1, 1, 0]' : 0.11309}", "{'[6, 6, 0, 6, 6, 6, 27, 0, 3, 29, 1, 1, 0]' : 0.110762}", "{'[6, 6, 0, 6, 6, 6, 27, 0, 3, 29, 1, 1, 0]' : 0.110743}", "{'[6, 6, 0, 6, 6, 6, 27, 0, 3, 29, 1, 1, 0]' : 0.110442}", "{'[6, 6, 0, 6, 6, 6, 27, 0, 3, 29, 1, 1, 0]' : 0.110297}", "{'[6, 6, 0, 6, 6, 6, 27, 0, 3, 29, 1, 1, 0]' : 0.110484}", "{'[6, 6, 0, 6, 6, 6, 27, 0, 3, 29, 1, 1, 0]' : 0.110521}", "{'[6, 6, 0, 6, 6, 6, 27, 0, 3, 29, 1, 1, 0]' : 0.110994}", "{'[6, 6, 0, 6, 6, 6, 27, 0, 3, 29, 1, 1, 0]' : 0.110887}", "{'[6, 6, 0, 6, 6, 6, 27, 0, 3, 29, 1, 1, 0]' : 0.110903}", "{'[6, 6, 0, 6, 6, 6, 27, 0, 3, 29, 1, 1, 0]' : 0.110992}", "{'[6, 6, 0, 6, 6, 6, 27, 0, 3, 29, 1, 1, 0]' : 0.111286}", "{'[6, 6, 0, 6, 6, 6, 27, 0, 3, 29, 1, 1, 0]' : 0.110367}", "{'[6, 6, 0, 6, 6, 6, 27, 0, 3, 29, 1, 1, 0]' : 0.110594}", "{'[6, 6, 0, 6, 6, 6, 27, 0, 3, 29, 1, 1, 0]' : 0.110618}", "{'[6, 6, 0, 6, 6, 6, 27, 0, 3, 29, 1, 1, 0]' : 0.11073}", "{'[6, 6, 0, 6, 6, 6, 27, 0, 3, 29, 1, 1, 0]' : 0.110815}", "{'[6, 6, 0, 6, 6, 6, 27, 0, 3, 29, 1, 1, 0]' : 0.110895}", "{'[6, 6, 0, 6, 6, 6, 27, 0, 3, 29, 1, 1, 0]' : 0.110934}", "{'[6, 6, 0, 6, 6, 6, 27, 0, 3, 29, 1, 1, 0]' : 0.111225}", "{'[6, 6, 0, 6, 6, 6, 27, 0, 3, 29, 1, 1, 0]' : 0.110843}", "{'[6, 6, 0, 6, 6, 6, 27, 0, 3, 29, 1, 1, 0]' : 0.110473}", "{'[6, 6, 0, 6, 6, 6, 27, 0, 3, 29, 1, 1, 0]' : 0.110583}", "{'[6, 6, 0, 6, 6, 6, 27, 0, 3, 29, 1, 1, 0]' : 0.110606}", "{'[6, 6, 0, 6, 6, 6, 27, 0, 3, 29, 1, 1, 0]' : 0.110507}", "{'[6, 6, 0, 6, 6, 6, 27, 0, 3, 29, 1, 1, 0]' : 0.110903}", "{'[6, 6, 0, 6, 6, 6, 27, 0, 3, 29, 1, 1, 0]' : 0.110947}", "{'[6, 6, 0, 6, 6, 6, 27, 0, 3, 29, 1, 1, 0]' : 0.111346}"]
returning from 'run': {'[6, 6, 0, 6, 6, 6, 27, 0, 3, 29, 1, 1, 0]': ([0.12983, 0.129244, 0.11309, 0.110762, 0.110743, 0.110442, 0.110297, 0.110484, 0.110521, 0.110994, 0.110887, 0.110903, 0.110992, 0.111286, 0.110367, 0.110594, 0.110618, 0.11073, 0.110815, 0.110895, 0.110934, 0.111225, 0.110843, 0.110473, 0.110583, 0.110606, 0.110507, 0.110903, 0.110947, 0.111346], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 0, 6, 6, 6, 27, 0, 3, 29, 1, 1, 0]': ([0.12983, 0.129244, 0.11309, 0.110762, 0.110743, 0.110442, 0.110297, 0.110484, 0.110521, 0.110994, 0.110887, 0.110903, 0.110992, 0.111286, 0.110367, 0.110594, 0.110618, 0.11073, 0.110815, 0.110895, 0.110934, 0.111225, 0.110843, 0.110473, 0.110583, 0.110606, 0.110507, 0.110903, 0.110947, 0.111346], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	80
        Max loop nest depth: 	6
        Additions: 		13632
        Multiplications: 	3906
        Divisions: 		0
        Logical: 		0
        Reads: 			20330
        Writes: 		2175
        Comparisons:		80
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest56.exe __orio_perftest56.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest56.exe  
Program Test Output: 
{'[6, 6, 4, 6, 6, 6, 29, 29, 28, 0, 0, 2, 0]' : 0.249083}
{'[6, 6, 4, 6, 6, 6, 29, 29, 28, 0, 0, 2, 0]' : 0.249884}
{'[6, 6, 4, 6, 6, 6, 29, 29, 28, 0, 0, 2, 0]' : 0.250769}
{'[6, 6, 4, 6, 6, 6, 29, 29, 28, 0, 0, 2, 0]' : 0.250179}
{'[6, 6, 4, 6, 6, 6, 29, 29, 28, 0, 0, 2, 0]' : 0.250133}
{'[6, 6, 4, 6, 6, 6, 29, 29, 28, 0, 0, 2, 0]' : 0.250306}
{'[6, 6, 4, 6, 6, 6, 29, 29, 28, 0, 0, 2, 0]' : 0.256059}
{'[6, 6, 4, 6, 6, 6, 29, 29, 28, 0, 0, 2, 0]' : 0.253785}
{'[6, 6, 4, 6, 6, 6, 29, 29, 28, 0, 0, 2, 0]' : 0.246738}
{'[6, 6, 4, 6, 6, 6, 29, 29, 28, 0, 0, 2, 0]' : 0.249829}
{'[6, 6, 4, 6, 6, 6, 29, 29, 28, 0, 0, 2, 0]' : 0.249633}
{'[6, 6, 4, 6, 6, 6, 29, 29, 28, 0, 0, 2, 0]' : 0.251696}
{'[6, 6, 4, 6, 6, 6, 29, 29, 28, 0, 0, 2, 0]' : 0.254104}
{'[6, 6, 4, 6, 6, 6, 29, 29, 28, 0, 0, 2, 0]' : 0.251799}
{'[6, 6, 4, 6, 6, 6, 29, 29, 28, 0, 0, 2, 0]' : 0.255528}
{'[6, 6, 4, 6, 6, 6, 29, 29, 28, 0, 0, 2, 0]' : 0.246018}
{'[6, 6, 4, 6, 6, 6, 29, 29, 28, 0, 0, 2, 0]' : 0.249074}
{'[6, 6, 4, 6, 6, 6, 29, 29, 28, 0, 0, 2, 0]' : 0.253009}
{'[6, 6, 4, 6, 6, 6, 29, 29, 28, 0, 0, 2, 0]' : 0.252583}
{'[6, 6, 4, 6, 6, 6, 29, 29, 28, 0, 0, 2, 0]' : 0.251616}
{'[6, 6, 4, 6, 6, 6, 29, 29, 28, 0, 0, 2, 0]' : 0.252882}
{'[6, 6, 4, 6, 6, 6, 29, 29, 28, 0, 0, 2, 0]' : 0.249368}
{'[6, 6, 4, 6, 6, 6, 29, 29, 28, 0, 0, 2, 0]' : 0.25117}
{'[6, 6, 4, 6, 6, 6, 29, 29, 28, 0, 0, 2, 0]' : 0.24855}
{'[6, 6, 4, 6, 6, 6, 29, 29, 28, 0, 0, 2, 0]' : 0.253237}
{'[6, 6, 4, 6, 6, 6, 29, 29, 28, 0, 0, 2, 0]' : 0.249579}
{'[6, 6, 4, 6, 6, 6, 29, 29, 28, 0, 0, 2, 0]' : 0.257818}
{'[6, 6, 4, 6, 6, 6, 29, 29, 28, 0, 0, 2, 0]' : 0.249635}
{'[6, 6, 4, 6, 6, 6, 29, 29, 28, 0, 0, 2, 0]' : 0.24949}
{'[6, 6, 4, 6, 6, 6, 29, 29, 28, 0, 0, 2, 0]' : 0.247705}

out:
 ["{'[6, 6, 4, 6, 6, 6, 29, 29, 28, 0, 0, 2, 0]' : 0.249083}", "{'[6, 6, 4, 6, 6, 6, 29, 29, 28, 0, 0, 2, 0]' : 0.249884}", "{'[6, 6, 4, 6, 6, 6, 29, 29, 28, 0, 0, 2, 0]' : 0.250769}", "{'[6, 6, 4, 6, 6, 6, 29, 29, 28, 0, 0, 2, 0]' : 0.250179}", "{'[6, 6, 4, 6, 6, 6, 29, 29, 28, 0, 0, 2, 0]' : 0.250133}", "{'[6, 6, 4, 6, 6, 6, 29, 29, 28, 0, 0, 2, 0]' : 0.250306}", "{'[6, 6, 4, 6, 6, 6, 29, 29, 28, 0, 0, 2, 0]' : 0.256059}", "{'[6, 6, 4, 6, 6, 6, 29, 29, 28, 0, 0, 2, 0]' : 0.253785}", "{'[6, 6, 4, 6, 6, 6, 29, 29, 28, 0, 0, 2, 0]' : 0.246738}", "{'[6, 6, 4, 6, 6, 6, 29, 29, 28, 0, 0, 2, 0]' : 0.249829}", "{'[6, 6, 4, 6, 6, 6, 29, 29, 28, 0, 0, 2, 0]' : 0.249633}", "{'[6, 6, 4, 6, 6, 6, 29, 29, 28, 0, 0, 2, 0]' : 0.251696}", "{'[6, 6, 4, 6, 6, 6, 29, 29, 28, 0, 0, 2, 0]' : 0.254104}", "{'[6, 6, 4, 6, 6, 6, 29, 29, 28, 0, 0, 2, 0]' : 0.251799}", "{'[6, 6, 4, 6, 6, 6, 29, 29, 28, 0, 0, 2, 0]' : 0.255528}", "{'[6, 6, 4, 6, 6, 6, 29, 29, 28, 0, 0, 2, 0]' : 0.246018}", "{'[6, 6, 4, 6, 6, 6, 29, 29, 28, 0, 0, 2, 0]' : 0.249074}", "{'[6, 6, 4, 6, 6, 6, 29, 29, 28, 0, 0, 2, 0]' : 0.253009}", "{'[6, 6, 4, 6, 6, 6, 29, 29, 28, 0, 0, 2, 0]' : 0.252583}", "{'[6, 6, 4, 6, 6, 6, 29, 29, 28, 0, 0, 2, 0]' : 0.251616}", "{'[6, 6, 4, 6, 6, 6, 29, 29, 28, 0, 0, 2, 0]' : 0.252882}", "{'[6, 6, 4, 6, 6, 6, 29, 29, 28, 0, 0, 2, 0]' : 0.249368}", "{'[6, 6, 4, 6, 6, 6, 29, 29, 28, 0, 0, 2, 0]' : 0.25117}", "{'[6, 6, 4, 6, 6, 6, 29, 29, 28, 0, 0, 2, 0]' : 0.24855}", "{'[6, 6, 4, 6, 6, 6, 29, 29, 28, 0, 0, 2, 0]' : 0.253237}", "{'[6, 6, 4, 6, 6, 6, 29, 29, 28, 0, 0, 2, 0]' : 0.249579}", "{'[6, 6, 4, 6, 6, 6, 29, 29, 28, 0, 0, 2, 0]' : 0.257818}", "{'[6, 6, 4, 6, 6, 6, 29, 29, 28, 0, 0, 2, 0]' : 0.249635}", "{'[6, 6, 4, 6, 6, 6, 29, 29, 28, 0, 0, 2, 0]' : 0.24949}", "{'[6, 6, 4, 6, 6, 6, 29, 29, 28, 0, 0, 2, 0]' : 0.247705}"]
returning from 'run': {'[6, 6, 4, 6, 6, 6, 29, 29, 28, 0, 0, 2, 0]': ([0.249083, 0.249884, 0.250769, 0.250179, 0.250133, 0.250306, 0.256059, 0.253785, 0.246738, 0.249829, 0.249633, 0.251696, 0.254104, 0.251799, 0.255528, 0.246018, 0.249074, 0.253009, 0.252583, 0.251616, 0.252882, 0.249368, 0.25117, 0.24855, 0.253237, 0.249579, 0.257818, 0.249635, 0.24949, 0.247705], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 4, 6, 6, 6, 29, 29, 28, 0, 0, 2, 0]': ([0.249083, 0.249884, 0.250769, 0.250179, 0.250133, 0.250306, 0.256059, 0.253785, 0.246738, 0.249829, 0.249633, 0.251696, 0.254104, 0.251799, 0.255528, 0.246018, 0.249074, 0.253009, 0.252583, 0.251616, 0.252882, 0.249368, 0.25117, 0.24855, 0.253237, 0.249579, 0.257818, 0.249635, 0.24949, 0.247705], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	6
        Additions: 		5961
        Multiplications: 	1798
        Divisions: 		0
        Logical: 		0
        Reads: 			9187
        Writes: 		969
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest57.exe __orio_perftest57.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest57.exe  
Program Test Output: 
{'[6, 6, 0, 6, 6, 6, 0, 29, 0, 18, 0, 1, 0]' : 0.217351}
{'[6, 6, 0, 6, 6, 6, 0, 29, 0, 18, 0, 1, 0]' : 0.216649}
{'[6, 6, 0, 6, 6, 6, 0, 29, 0, 18, 0, 1, 0]' : 0.212344}
{'[6, 6, 0, 6, 6, 6, 0, 29, 0, 18, 0, 1, 0]' : 0.216681}
{'[6, 6, 0, 6, 6, 6, 0, 29, 0, 18, 0, 1, 0]' : 0.218064}
{'[6, 6, 0, 6, 6, 6, 0, 29, 0, 18, 0, 1, 0]' : 0.215101}
{'[6, 6, 0, 6, 6, 6, 0, 29, 0, 18, 0, 1, 0]' : 0.219976}
{'[6, 6, 0, 6, 6, 6, 0, 29, 0, 18, 0, 1, 0]' : 0.216562}
{'[6, 6, 0, 6, 6, 6, 0, 29, 0, 18, 0, 1, 0]' : 0.215305}
{'[6, 6, 0, 6, 6, 6, 0, 29, 0, 18, 0, 1, 0]' : 0.21679}
{'[6, 6, 0, 6, 6, 6, 0, 29, 0, 18, 0, 1, 0]' : 0.219625}
{'[6, 6, 0, 6, 6, 6, 0, 29, 0, 18, 0, 1, 0]' : 0.220047}
{'[6, 6, 0, 6, 6, 6, 0, 29, 0, 18, 0, 1, 0]' : 0.214566}
{'[6, 6, 0, 6, 6, 6, 0, 29, 0, 18, 0, 1, 0]' : 0.219752}
{'[6, 6, 0, 6, 6, 6, 0, 29, 0, 18, 0, 1, 0]' : 0.216074}
{'[6, 6, 0, 6, 6, 6, 0, 29, 0, 18, 0, 1, 0]' : 0.214934}
{'[6, 6, 0, 6, 6, 6, 0, 29, 0, 18, 0, 1, 0]' : 0.208924}
{'[6, 6, 0, 6, 6, 6, 0, 29, 0, 18, 0, 1, 0]' : 0.219042}
{'[6, 6, 0, 6, 6, 6, 0, 29, 0, 18, 0, 1, 0]' : 0.21527}
{'[6, 6, 0, 6, 6, 6, 0, 29, 0, 18, 0, 1, 0]' : 0.215183}
{'[6, 6, 0, 6, 6, 6, 0, 29, 0, 18, 0, 1, 0]' : 0.218219}
{'[6, 6, 0, 6, 6, 6, 0, 29, 0, 18, 0, 1, 0]' : 0.22051}
{'[6, 6, 0, 6, 6, 6, 0, 29, 0, 18, 0, 1, 0]' : 0.21452}
{'[6, 6, 0, 6, 6, 6, 0, 29, 0, 18, 0, 1, 0]' : 0.217403}
{'[6, 6, 0, 6, 6, 6, 0, 29, 0, 18, 0, 1, 0]' : 0.221708}
{'[6, 6, 0, 6, 6, 6, 0, 29, 0, 18, 0, 1, 0]' : 0.215232}
{'[6, 6, 0, 6, 6, 6, 0, 29, 0, 18, 0, 1, 0]' : 0.219428}
{'[6, 6, 0, 6, 6, 6, 0, 29, 0, 18, 0, 1, 0]' : 0.216085}
{'[6, 6, 0, 6, 6, 6, 0, 29, 0, 18, 0, 1, 0]' : 0.21586}
{'[6, 6, 0, 6, 6, 6, 0, 29, 0, 18, 0, 1, 0]' : 0.215594}

out:
 ["{'[6, 6, 0, 6, 6, 6, 0, 29, 0, 18, 0, 1, 0]' : 0.217351}", "{'[6, 6, 0, 6, 6, 6, 0, 29, 0, 18, 0, 1, 0]' : 0.216649}", "{'[6, 6, 0, 6, 6, 6, 0, 29, 0, 18, 0, 1, 0]' : 0.212344}", "{'[6, 6, 0, 6, 6, 6, 0, 29, 0, 18, 0, 1, 0]' : 0.216681}", "{'[6, 6, 0, 6, 6, 6, 0, 29, 0, 18, 0, 1, 0]' : 0.218064}", "{'[6, 6, 0, 6, 6, 6, 0, 29, 0, 18, 0, 1, 0]' : 0.215101}", "{'[6, 6, 0, 6, 6, 6, 0, 29, 0, 18, 0, 1, 0]' : 0.219976}", "{'[6, 6, 0, 6, 6, 6, 0, 29, 0, 18, 0, 1, 0]' : 0.216562}", "{'[6, 6, 0, 6, 6, 6, 0, 29, 0, 18, 0, 1, 0]' : 0.215305}", "{'[6, 6, 0, 6, 6, 6, 0, 29, 0, 18, 0, 1, 0]' : 0.21679}", "{'[6, 6, 0, 6, 6, 6, 0, 29, 0, 18, 0, 1, 0]' : 0.219625}", "{'[6, 6, 0, 6, 6, 6, 0, 29, 0, 18, 0, 1, 0]' : 0.220047}", "{'[6, 6, 0, 6, 6, 6, 0, 29, 0, 18, 0, 1, 0]' : 0.214566}", "{'[6, 6, 0, 6, 6, 6, 0, 29, 0, 18, 0, 1, 0]' : 0.219752}", "{'[6, 6, 0, 6, 6, 6, 0, 29, 0, 18, 0, 1, 0]' : 0.216074}", "{'[6, 6, 0, 6, 6, 6, 0, 29, 0, 18, 0, 1, 0]' : 0.214934}", "{'[6, 6, 0, 6, 6, 6, 0, 29, 0, 18, 0, 1, 0]' : 0.208924}", "{'[6, 6, 0, 6, 6, 6, 0, 29, 0, 18, 0, 1, 0]' : 0.219042}", "{'[6, 6, 0, 6, 6, 6, 0, 29, 0, 18, 0, 1, 0]' : 0.21527}", "{'[6, 6, 0, 6, 6, 6, 0, 29, 0, 18, 0, 1, 0]' : 0.215183}", "{'[6, 6, 0, 6, 6, 6, 0, 29, 0, 18, 0, 1, 0]' : 0.218219}", "{'[6, 6, 0, 6, 6, 6, 0, 29, 0, 18, 0, 1, 0]' : 0.22051}", "{'[6, 6, 0, 6, 6, 6, 0, 29, 0, 18, 0, 1, 0]' : 0.21452}", "{'[6, 6, 0, 6, 6, 6, 0, 29, 0, 18, 0, 1, 0]' : 0.217403}", "{'[6, 6, 0, 6, 6, 6, 0, 29, 0, 18, 0, 1, 0]' : 0.221708}", "{'[6, 6, 0, 6, 6, 6, 0, 29, 0, 18, 0, 1, 0]' : 0.215232}", "{'[6, 6, 0, 6, 6, 6, 0, 29, 0, 18, 0, 1, 0]' : 0.219428}", "{'[6, 6, 0, 6, 6, 6, 0, 29, 0, 18, 0, 1, 0]' : 0.216085}", "{'[6, 6, 0, 6, 6, 6, 0, 29, 0, 18, 0, 1, 0]' : 0.21586}", "{'[6, 6, 0, 6, 6, 6, 0, 29, 0, 18, 0, 1, 0]' : 0.215594}"]
returning from 'run': {'[6, 6, 0, 6, 6, 6, 0, 29, 0, 18, 0, 1, 0]': ([0.217351, 0.216649, 0.212344, 0.216681, 0.218064, 0.215101, 0.219976, 0.216562, 0.215305, 0.21679, 0.219625, 0.220047, 0.214566, 0.219752, 0.216074, 0.214934, 0.208924, 0.219042, 0.21527, 0.215183, 0.218219, 0.22051, 0.21452, 0.217403, 0.221708, 0.215232, 0.219428, 0.216085, 0.21586, 0.215594], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 0, 6, 6, 6, 0, 29, 0, 18, 0, 1, 0]': ([0.217351, 0.216649, 0.212344, 0.216681, 0.218064, 0.215101, 0.219976, 0.216562, 0.215305, 0.21679, 0.219625, 0.220047, 0.214566, 0.219752, 0.216074, 0.214934, 0.208924, 0.219042, 0.21527, 0.215183, 0.218219, 0.22051, 0.21452, 0.217403, 0.221708, 0.215232, 0.219428, 0.216085, 0.21586, 0.215594], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	5
        Additions: 		6074
        Multiplications: 	1798
        Divisions: 		0
        Logical: 		0
        Reads: 			9243
        Writes: 		997
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest58.exe __orio_perftest58.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest58.exe  
Program Test Output: 
{'[6, 6, 6, 0, 6, 6, 29, 27, 0, 28, 0, 0, 0]' : 0.191383}
{'[6, 6, 6, 0, 6, 6, 29, 27, 0, 28, 0, 0, 0]' : 0.191923}
{'[6, 6, 6, 0, 6, 6, 29, 27, 0, 28, 0, 0, 0]' : 0.175856}
{'[6, 6, 6, 0, 6, 6, 29, 27, 0, 28, 0, 0, 0]' : 0.171717}
{'[6, 6, 6, 0, 6, 6, 29, 27, 0, 28, 0, 0, 0]' : 0.171956}
{'[6, 6, 6, 0, 6, 6, 29, 27, 0, 28, 0, 0, 0]' : 0.171264}
{'[6, 6, 6, 0, 6, 6, 29, 27, 0, 28, 0, 0, 0]' : 0.1718}
{'[6, 6, 6, 0, 6, 6, 29, 27, 0, 28, 0, 0, 0]' : 0.171754}
{'[6, 6, 6, 0, 6, 6, 29, 27, 0, 28, 0, 0, 0]' : 0.171962}
{'[6, 6, 6, 0, 6, 6, 29, 27, 0, 28, 0, 0, 0]' : 0.172397}
{'[6, 6, 6, 0, 6, 6, 29, 27, 0, 28, 0, 0, 0]' : 0.172222}
{'[6, 6, 6, 0, 6, 6, 29, 27, 0, 28, 0, 0, 0]' : 0.172058}
{'[6, 6, 6, 0, 6, 6, 29, 27, 0, 28, 0, 0, 0]' : 0.172535}
{'[6, 6, 6, 0, 6, 6, 29, 27, 0, 28, 0, 0, 0]' : 0.172269}
{'[6, 6, 6, 0, 6, 6, 29, 27, 0, 28, 0, 0, 0]' : 0.172241}
{'[6, 6, 6, 0, 6, 6, 29, 27, 0, 28, 0, 0, 0]' : 0.172497}
{'[6, 6, 6, 0, 6, 6, 29, 27, 0, 28, 0, 0, 0]' : 0.171971}
{'[6, 6, 6, 0, 6, 6, 29, 27, 0, 28, 0, 0, 0]' : 0.17202}
{'[6, 6, 6, 0, 6, 6, 29, 27, 0, 28, 0, 0, 0]' : 0.172063}
{'[6, 6, 6, 0, 6, 6, 29, 27, 0, 28, 0, 0, 0]' : 0.171867}
{'[6, 6, 6, 0, 6, 6, 29, 27, 0, 28, 0, 0, 0]' : 0.172568}
{'[6, 6, 6, 0, 6, 6, 29, 27, 0, 28, 0, 0, 0]' : 0.172448}
{'[6, 6, 6, 0, 6, 6, 29, 27, 0, 28, 0, 0, 0]' : 0.172256}
{'[6, 6, 6, 0, 6, 6, 29, 27, 0, 28, 0, 0, 0]' : 0.172547}
{'[6, 6, 6, 0, 6, 6, 29, 27, 0, 28, 0, 0, 0]' : 0.172297}
{'[6, 6, 6, 0, 6, 6, 29, 27, 0, 28, 0, 0, 0]' : 0.17384}
{'[6, 6, 6, 0, 6, 6, 29, 27, 0, 28, 0, 0, 0]' : 0.17615}
{'[6, 6, 6, 0, 6, 6, 29, 27, 0, 28, 0, 0, 0]' : 0.175727}
{'[6, 6, 6, 0, 6, 6, 29, 27, 0, 28, 0, 0, 0]' : 0.175887}
{'[6, 6, 6, 0, 6, 6, 29, 27, 0, 28, 0, 0, 0]' : 0.175663}

out:
 ["{'[6, 6, 6, 0, 6, 6, 29, 27, 0, 28, 0, 0, 0]' : 0.191383}", "{'[6, 6, 6, 0, 6, 6, 29, 27, 0, 28, 0, 0, 0]' : 0.191923}", "{'[6, 6, 6, 0, 6, 6, 29, 27, 0, 28, 0, 0, 0]' : 0.175856}", "{'[6, 6, 6, 0, 6, 6, 29, 27, 0, 28, 0, 0, 0]' : 0.171717}", "{'[6, 6, 6, 0, 6, 6, 29, 27, 0, 28, 0, 0, 0]' : 0.171956}", "{'[6, 6, 6, 0, 6, 6, 29, 27, 0, 28, 0, 0, 0]' : 0.171264}", "{'[6, 6, 6, 0, 6, 6, 29, 27, 0, 28, 0, 0, 0]' : 0.1718}", "{'[6, 6, 6, 0, 6, 6, 29, 27, 0, 28, 0, 0, 0]' : 0.171754}", "{'[6, 6, 6, 0, 6, 6, 29, 27, 0, 28, 0, 0, 0]' : 0.171962}", "{'[6, 6, 6, 0, 6, 6, 29, 27, 0, 28, 0, 0, 0]' : 0.172397}", "{'[6, 6, 6, 0, 6, 6, 29, 27, 0, 28, 0, 0, 0]' : 0.172222}", "{'[6, 6, 6, 0, 6, 6, 29, 27, 0, 28, 0, 0, 0]' : 0.172058}", "{'[6, 6, 6, 0, 6, 6, 29, 27, 0, 28, 0, 0, 0]' : 0.172535}", "{'[6, 6, 6, 0, 6, 6, 29, 27, 0, 28, 0, 0, 0]' : 0.172269}", "{'[6, 6, 6, 0, 6, 6, 29, 27, 0, 28, 0, 0, 0]' : 0.172241}", "{'[6, 6, 6, 0, 6, 6, 29, 27, 0, 28, 0, 0, 0]' : 0.172497}", "{'[6, 6, 6, 0, 6, 6, 29, 27, 0, 28, 0, 0, 0]' : 0.171971}", "{'[6, 6, 6, 0, 6, 6, 29, 27, 0, 28, 0, 0, 0]' : 0.17202}", "{'[6, 6, 6, 0, 6, 6, 29, 27, 0, 28, 0, 0, 0]' : 0.172063}", "{'[6, 6, 6, 0, 6, 6, 29, 27, 0, 28, 0, 0, 0]' : 0.171867}", "{'[6, 6, 6, 0, 6, 6, 29, 27, 0, 28, 0, 0, 0]' : 0.172568}", "{'[6, 6, 6, 0, 6, 6, 29, 27, 0, 28, 0, 0, 0]' : 0.172448}", "{'[6, 6, 6, 0, 6, 6, 29, 27, 0, 28, 0, 0, 0]' : 0.172256}", "{'[6, 6, 6, 0, 6, 6, 29, 27, 0, 28, 0, 0, 0]' : 0.172547}", "{'[6, 6, 6, 0, 6, 6, 29, 27, 0, 28, 0, 0, 0]' : 0.172297}", "{'[6, 6, 6, 0, 6, 6, 29, 27, 0, 28, 0, 0, 0]' : 0.17384}", "{'[6, 6, 6, 0, 6, 6, 29, 27, 0, 28, 0, 0, 0]' : 0.17615}", "{'[6, 6, 6, 0, 6, 6, 29, 27, 0, 28, 0, 0, 0]' : 0.175727}", "{'[6, 6, 6, 0, 6, 6, 29, 27, 0, 28, 0, 0, 0]' : 0.175887}", "{'[6, 6, 6, 0, 6, 6, 29, 27, 0, 28, 0, 0, 0]' : 0.175663}"]
returning from 'run': {'[6, 6, 6, 0, 6, 6, 29, 27, 0, 28, 0, 0, 0]': ([0.191383, 0.191923, 0.175856, 0.171717, 0.171956, 0.171264, 0.1718, 0.171754, 0.171962, 0.172397, 0.172222, 0.172058, 0.172535, 0.172269, 0.172241, 0.172497, 0.171971, 0.17202, 0.172063, 0.171867, 0.172568, 0.172448, 0.172256, 0.172547, 0.172297, 0.17384, 0.17615, 0.175727, 0.175887, 0.175663], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 6, 0, 6, 6, 29, 27, 0, 28, 0, 0, 0]': ([0.191383, 0.191923, 0.175856, 0.171717, 0.171956, 0.171264, 0.1718, 0.171754, 0.171962, 0.172397, 0.172222, 0.172058, 0.172535, 0.172269, 0.172241, 0.172497, 0.171971, 0.17202, 0.172063, 0.171867, 0.172568, 0.172448, 0.172256, 0.172547, 0.172297, 0.17384, 0.17615, 0.175727, 0.175887, 0.175663], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	27
        Max loop nest depth: 	5
        Additions: 		13128
        Multiplications: 	3906
        Divisions: 		0
        Logical: 		0
        Reads: 			19845
        Writes: 		2070
        Comparisons:		27
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest59.exe __orio_perftest59.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest59.exe  
Program Test Output: 
{'[6, 6, 6, 0, 6, 6, 29, 29, 28, 0, 2, 0, 0]' : 0.307542}
{'[6, 6, 6, 0, 6, 6, 29, 29, 28, 0, 2, 0, 0]' : 0.279369}
{'[6, 6, 6, 0, 6, 6, 29, 29, 28, 0, 2, 0, 0]' : 0.271614}
{'[6, 6, 6, 0, 6, 6, 29, 29, 28, 0, 2, 0, 0]' : 0.2718}
{'[6, 6, 6, 0, 6, 6, 29, 29, 28, 0, 2, 0, 0]' : 0.271608}
{'[6, 6, 6, 0, 6, 6, 29, 29, 28, 0, 2, 0, 0]' : 0.271346}
{'[6, 6, 6, 0, 6, 6, 29, 29, 28, 0, 2, 0, 0]' : 0.271954}
{'[6, 6, 6, 0, 6, 6, 29, 29, 28, 0, 2, 0, 0]' : 0.271809}
{'[6, 6, 6, 0, 6, 6, 29, 29, 28, 0, 2, 0, 0]' : 0.271282}
{'[6, 6, 6, 0, 6, 6, 29, 29, 28, 0, 2, 0, 0]' : 0.271384}
{'[6, 6, 6, 0, 6, 6, 29, 29, 28, 0, 2, 0, 0]' : 0.270458}
{'[6, 6, 6, 0, 6, 6, 29, 29, 28, 0, 2, 0, 0]' : 0.27135}
{'[6, 6, 6, 0, 6, 6, 29, 29, 28, 0, 2, 0, 0]' : 0.271533}
{'[6, 6, 6, 0, 6, 6, 29, 29, 28, 0, 2, 0, 0]' : 0.271262}
{'[6, 6, 6, 0, 6, 6, 29, 29, 28, 0, 2, 0, 0]' : 0.27156}
{'[6, 6, 6, 0, 6, 6, 29, 29, 28, 0, 2, 0, 0]' : 0.270989}
{'[6, 6, 6, 0, 6, 6, 29, 29, 28, 0, 2, 0, 0]' : 0.270564}
{'[6, 6, 6, 0, 6, 6, 29, 29, 28, 0, 2, 0, 0]' : 0.271108}
{'[6, 6, 6, 0, 6, 6, 29, 29, 28, 0, 2, 0, 0]' : 0.271528}
{'[6, 6, 6, 0, 6, 6, 29, 29, 28, 0, 2, 0, 0]' : 0.270575}
{'[6, 6, 6, 0, 6, 6, 29, 29, 28, 0, 2, 0, 0]' : 0.271144}
{'[6, 6, 6, 0, 6, 6, 29, 29, 28, 0, 2, 0, 0]' : 0.271235}
{'[6, 6, 6, 0, 6, 6, 29, 29, 28, 0, 2, 0, 0]' : 0.271947}
{'[6, 6, 6, 0, 6, 6, 29, 29, 28, 0, 2, 0, 0]' : 0.271908}
{'[6, 6, 6, 0, 6, 6, 29, 29, 28, 0, 2, 0, 0]' : 0.271325}
{'[6, 6, 6, 0, 6, 6, 29, 29, 28, 0, 2, 0, 0]' : 0.271404}
{'[6, 6, 6, 0, 6, 6, 29, 29, 28, 0, 2, 0, 0]' : 0.271348}
{'[6, 6, 6, 0, 6, 6, 29, 29, 28, 0, 2, 0, 0]' : 0.271174}
{'[6, 6, 6, 0, 6, 6, 29, 29, 28, 0, 2, 0, 0]' : 0.27151}
{'[6, 6, 6, 0, 6, 6, 29, 29, 28, 0, 2, 0, 0]' : 0.271744}

out:
 ["{'[6, 6, 6, 0, 6, 6, 29, 29, 28, 0, 2, 0, 0]' : 0.307542}", "{'[6, 6, 6, 0, 6, 6, 29, 29, 28, 0, 2, 0, 0]' : 0.279369}", "{'[6, 6, 6, 0, 6, 6, 29, 29, 28, 0, 2, 0, 0]' : 0.271614}", "{'[6, 6, 6, 0, 6, 6, 29, 29, 28, 0, 2, 0, 0]' : 0.2718}", "{'[6, 6, 6, 0, 6, 6, 29, 29, 28, 0, 2, 0, 0]' : 0.271608}", "{'[6, 6, 6, 0, 6, 6, 29, 29, 28, 0, 2, 0, 0]' : 0.271346}", "{'[6, 6, 6, 0, 6, 6, 29, 29, 28, 0, 2, 0, 0]' : 0.271954}", "{'[6, 6, 6, 0, 6, 6, 29, 29, 28, 0, 2, 0, 0]' : 0.271809}", "{'[6, 6, 6, 0, 6, 6, 29, 29, 28, 0, 2, 0, 0]' : 0.271282}", "{'[6, 6, 6, 0, 6, 6, 29, 29, 28, 0, 2, 0, 0]' : 0.271384}", "{'[6, 6, 6, 0, 6, 6, 29, 29, 28, 0, 2, 0, 0]' : 0.270458}", "{'[6, 6, 6, 0, 6, 6, 29, 29, 28, 0, 2, 0, 0]' : 0.27135}", "{'[6, 6, 6, 0, 6, 6, 29, 29, 28, 0, 2, 0, 0]' : 0.271533}", "{'[6, 6, 6, 0, 6, 6, 29, 29, 28, 0, 2, 0, 0]' : 0.271262}", "{'[6, 6, 6, 0, 6, 6, 29, 29, 28, 0, 2, 0, 0]' : 0.27156}", "{'[6, 6, 6, 0, 6, 6, 29, 29, 28, 0, 2, 0, 0]' : 0.270989}", "{'[6, 6, 6, 0, 6, 6, 29, 29, 28, 0, 2, 0, 0]' : 0.270564}", "{'[6, 6, 6, 0, 6, 6, 29, 29, 28, 0, 2, 0, 0]' : 0.271108}", "{'[6, 6, 6, 0, 6, 6, 29, 29, 28, 0, 2, 0, 0]' : 0.271528}", "{'[6, 6, 6, 0, 6, 6, 29, 29, 28, 0, 2, 0, 0]' : 0.270575}", "{'[6, 6, 6, 0, 6, 6, 29, 29, 28, 0, 2, 0, 0]' : 0.271144}", "{'[6, 6, 6, 0, 6, 6, 29, 29, 28, 0, 2, 0, 0]' : 0.271235}", "{'[6, 6, 6, 0, 6, 6, 29, 29, 28, 0, 2, 0, 0]' : 0.271947}", "{'[6, 6, 6, 0, 6, 6, 29, 29, 28, 0, 2, 0, 0]' : 0.271908}", "{'[6, 6, 6, 0, 6, 6, 29, 29, 28, 0, 2, 0, 0]' : 0.271325}", "{'[6, 6, 6, 0, 6, 6, 29, 29, 28, 0, 2, 0, 0]' : 0.271404}", "{'[6, 6, 6, 0, 6, 6, 29, 29, 28, 0, 2, 0, 0]' : 0.271348}", "{'[6, 6, 6, 0, 6, 6, 29, 29, 28, 0, 2, 0, 0]' : 0.271174}", "{'[6, 6, 6, 0, 6, 6, 29, 29, 28, 0, 2, 0, 0]' : 0.27151}", "{'[6, 6, 6, 0, 6, 6, 29, 29, 28, 0, 2, 0, 0]' : 0.271744}"]
returning from 'run': {'[6, 6, 6, 0, 6, 6, 29, 29, 28, 0, 2, 0, 0]': ([0.307542, 0.279369, 0.271614, 0.2718, 0.271608, 0.271346, 0.271954, 0.271809, 0.271282, 0.271384, 0.270458, 0.27135, 0.271533, 0.271262, 0.27156, 0.270989, 0.270564, 0.271108, 0.271528, 0.270575, 0.271144, 0.271235, 0.271947, 0.271908, 0.271325, 0.271404, 0.271348, 0.271174, 0.27151, 0.271744], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 6, 0, 6, 6, 29, 29, 28, 0, 2, 0, 0]': ([0.307542, 0.279369, 0.271614, 0.2718, 0.271608, 0.271346, 0.271954, 0.271809, 0.271282, 0.271384, 0.270458, 0.27135, 0.271533, 0.271262, 0.27156, 0.270989, 0.270564, 0.271108, 0.271528, 0.270575, 0.271144, 0.271235, 0.271947, 0.271908, 0.271325, 0.271404, 0.271348, 0.271174, 0.27151, 0.271744], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	17
        Max loop nest depth: 	5
        Additions: 		2663
        Multiplications: 	806
        Divisions: 		0
        Logical: 		0
        Reads: 			4237
        Writes: 		481
        Comparisons:		17
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest60.exe __orio_perftest60.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest60.exe  
Program Test Output: 
{'[6, 6, 0, 0, 6, 6, 29, 11, 28, 0, 0, 0, 0]' : 0.135782}
{'[6, 6, 0, 0, 6, 6, 29, 11, 28, 0, 0, 0, 0]' : 0.139491}
{'[6, 6, 0, 0, 6, 6, 29, 11, 28, 0, 0, 0, 0]' : 0.136936}
{'[6, 6, 0, 0, 6, 6, 29, 11, 28, 0, 0, 0, 0]' : 0.13951}
{'[6, 6, 0, 0, 6, 6, 29, 11, 28, 0, 0, 0, 0]' : 0.138634}
{'[6, 6, 0, 0, 6, 6, 29, 11, 28, 0, 0, 0, 0]' : 0.137243}
{'[6, 6, 0, 0, 6, 6, 29, 11, 28, 0, 0, 0, 0]' : 0.137246}
{'[6, 6, 0, 0, 6, 6, 29, 11, 28, 0, 0, 0, 0]' : 0.140789}
{'[6, 6, 0, 0, 6, 6, 29, 11, 28, 0, 0, 0, 0]' : 0.14033}
{'[6, 6, 0, 0, 6, 6, 29, 11, 28, 0, 0, 0, 0]' : 0.137018}
{'[6, 6, 0, 0, 6, 6, 29, 11, 28, 0, 0, 0, 0]' : 0.138879}
{'[6, 6, 0, 0, 6, 6, 29, 11, 28, 0, 0, 0, 0]' : 0.13994}
{'[6, 6, 0, 0, 6, 6, 29, 11, 28, 0, 0, 0, 0]' : 0.137074}
{'[6, 6, 0, 0, 6, 6, 29, 11, 28, 0, 0, 0, 0]' : 0.137165}
{'[6, 6, 0, 0, 6, 6, 29, 11, 28, 0, 0, 0, 0]' : 0.138357}
{'[6, 6, 0, 0, 6, 6, 29, 11, 28, 0, 0, 0, 0]' : 0.136903}
{'[6, 6, 0, 0, 6, 6, 29, 11, 28, 0, 0, 0, 0]' : 0.136865}
{'[6, 6, 0, 0, 6, 6, 29, 11, 28, 0, 0, 0, 0]' : 0.137615}
{'[6, 6, 0, 0, 6, 6, 29, 11, 28, 0, 0, 0, 0]' : 0.139026}
{'[6, 6, 0, 0, 6, 6, 29, 11, 28, 0, 0, 0, 0]' : 0.137751}
{'[6, 6, 0, 0, 6, 6, 29, 11, 28, 0, 0, 0, 0]' : 0.137081}
{'[6, 6, 0, 0, 6, 6, 29, 11, 28, 0, 0, 0, 0]' : 0.138179}
{'[6, 6, 0, 0, 6, 6, 29, 11, 28, 0, 0, 0, 0]' : 0.137105}
{'[6, 6, 0, 0, 6, 6, 29, 11, 28, 0, 0, 0, 0]' : 0.136954}
{'[6, 6, 0, 0, 6, 6, 29, 11, 28, 0, 0, 0, 0]' : 0.13718}
{'[6, 6, 0, 0, 6, 6, 29, 11, 28, 0, 0, 0, 0]' : 0.140498}
{'[6, 6, 0, 0, 6, 6, 29, 11, 28, 0, 0, 0, 0]' : 0.138254}
{'[6, 6, 0, 0, 6, 6, 29, 11, 28, 0, 0, 0, 0]' : 0.136962}
{'[6, 6, 0, 0, 6, 6, 29, 11, 28, 0, 0, 0, 0]' : 0.138147}
{'[6, 6, 0, 0, 6, 6, 29, 11, 28, 0, 0, 0, 0]' : 0.139873}

out:
 ["{'[6, 6, 0, 0, 6, 6, 29, 11, 28, 0, 0, 0, 0]' : 0.135782}", "{'[6, 6, 0, 0, 6, 6, 29, 11, 28, 0, 0, 0, 0]' : 0.139491}", "{'[6, 6, 0, 0, 6, 6, 29, 11, 28, 0, 0, 0, 0]' : 0.136936}", "{'[6, 6, 0, 0, 6, 6, 29, 11, 28, 0, 0, 0, 0]' : 0.13951}", "{'[6, 6, 0, 0, 6, 6, 29, 11, 28, 0, 0, 0, 0]' : 0.138634}", "{'[6, 6, 0, 0, 6, 6, 29, 11, 28, 0, 0, 0, 0]' : 0.137243}", "{'[6, 6, 0, 0, 6, 6, 29, 11, 28, 0, 0, 0, 0]' : 0.137246}", "{'[6, 6, 0, 0, 6, 6, 29, 11, 28, 0, 0, 0, 0]' : 0.140789}", "{'[6, 6, 0, 0, 6, 6, 29, 11, 28, 0, 0, 0, 0]' : 0.14033}", "{'[6, 6, 0, 0, 6, 6, 29, 11, 28, 0, 0, 0, 0]' : 0.137018}", "{'[6, 6, 0, 0, 6, 6, 29, 11, 28, 0, 0, 0, 0]' : 0.138879}", "{'[6, 6, 0, 0, 6, 6, 29, 11, 28, 0, 0, 0, 0]' : 0.13994}", "{'[6, 6, 0, 0, 6, 6, 29, 11, 28, 0, 0, 0, 0]' : 0.137074}", "{'[6, 6, 0, 0, 6, 6, 29, 11, 28, 0, 0, 0, 0]' : 0.137165}", "{'[6, 6, 0, 0, 6, 6, 29, 11, 28, 0, 0, 0, 0]' : 0.138357}", "{'[6, 6, 0, 0, 6, 6, 29, 11, 28, 0, 0, 0, 0]' : 0.136903}", "{'[6, 6, 0, 0, 6, 6, 29, 11, 28, 0, 0, 0, 0]' : 0.136865}", "{'[6, 6, 0, 0, 6, 6, 29, 11, 28, 0, 0, 0, 0]' : 0.137615}", "{'[6, 6, 0, 0, 6, 6, 29, 11, 28, 0, 0, 0, 0]' : 0.139026}", "{'[6, 6, 0, 0, 6, 6, 29, 11, 28, 0, 0, 0, 0]' : 0.137751}", "{'[6, 6, 0, 0, 6, 6, 29, 11, 28, 0, 0, 0, 0]' : 0.137081}", "{'[6, 6, 0, 0, 6, 6, 29, 11, 28, 0, 0, 0, 0]' : 0.138179}", "{'[6, 6, 0, 0, 6, 6, 29, 11, 28, 0, 0, 0, 0]' : 0.137105}", "{'[6, 6, 0, 0, 6, 6, 29, 11, 28, 0, 0, 0, 0]' : 0.136954}", "{'[6, 6, 0, 0, 6, 6, 29, 11, 28, 0, 0, 0, 0]' : 0.13718}", "{'[6, 6, 0, 0, 6, 6, 29, 11, 28, 0, 0, 0, 0]' : 0.140498}", "{'[6, 6, 0, 0, 6, 6, 29, 11, 28, 0, 0, 0, 0]' : 0.138254}", "{'[6, 6, 0, 0, 6, 6, 29, 11, 28, 0, 0, 0, 0]' : 0.136962}", "{'[6, 6, 0, 0, 6, 6, 29, 11, 28, 0, 0, 0, 0]' : 0.138147}", "{'[6, 6, 0, 0, 6, 6, 29, 11, 28, 0, 0, 0, 0]' : 0.139873}"]
returning from 'run': {'[6, 6, 0, 0, 6, 6, 29, 11, 28, 0, 0, 0, 0]': ([0.135782, 0.139491, 0.136936, 0.13951, 0.138634, 0.137243, 0.137246, 0.140789, 0.14033, 0.137018, 0.138879, 0.13994, 0.137074, 0.137165, 0.138357, 0.136903, 0.136865, 0.137615, 0.139026, 0.137751, 0.137081, 0.138179, 0.137105, 0.136954, 0.13718, 0.140498, 0.138254, 0.136962, 0.138147, 0.139873], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 0, 0, 6, 6, 29, 11, 28, 0, 0, 0, 0]': ([0.135782, 0.139491, 0.136936, 0.13951, 0.138634, 0.137243, 0.137246, 0.140789, 0.14033, 0.137018, 0.138879, 0.13994, 0.137074, 0.137165, 0.138357, 0.136903, 0.136865, 0.137615, 0.139026, 0.137751, 0.137081, 0.138179, 0.137105, 0.136954, 0.13718, 0.140498, 0.138254, 0.136962, 0.138147, 0.139873], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = iii
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	5
        Additions: 		13192
        Multiplications: 	3906
        Divisions: 		0
        Logical: 		0
        Reads: 			19801
        Writes: 		2057
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest61.exe __orio_perftest61.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest61.exe  
Program Test Output: 
{'[6, 6, 6, 4, 6, 6, 29, 29, 0, 28, 0, 2, 0]' : 0.170444}
{'[6, 6, 6, 4, 6, 6, 29, 29, 0, 28, 0, 2, 0]' : 0.170484}
{'[6, 6, 6, 4, 6, 6, 29, 29, 0, 28, 0, 2, 0]' : 0.169794}
{'[6, 6, 6, 4, 6, 6, 29, 29, 0, 28, 0, 2, 0]' : 0.168599}
{'[6, 6, 6, 4, 6, 6, 29, 29, 0, 28, 0, 2, 0]' : 0.168866}
{'[6, 6, 6, 4, 6, 6, 29, 29, 0, 28, 0, 2, 0]' : 0.169858}
{'[6, 6, 6, 4, 6, 6, 29, 29, 0, 28, 0, 2, 0]' : 0.168239}
{'[6, 6, 6, 4, 6, 6, 29, 29, 0, 28, 0, 2, 0]' : 0.239704}
{'[6, 6, 6, 4, 6, 6, 29, 29, 0, 28, 0, 2, 0]' : 0.18283}
{'[6, 6, 6, 4, 6, 6, 29, 29, 0, 28, 0, 2, 0]' : 0.174865}
{'[6, 6, 6, 4, 6, 6, 29, 29, 0, 28, 0, 2, 0]' : 0.176131}
{'[6, 6, 6, 4, 6, 6, 29, 29, 0, 28, 0, 2, 0]' : 0.170562}
{'[6, 6, 6, 4, 6, 6, 29, 29, 0, 28, 0, 2, 0]' : 0.176624}
{'[6, 6, 6, 4, 6, 6, 29, 29, 0, 28, 0, 2, 0]' : 0.173029}
{'[6, 6, 6, 4, 6, 6, 29, 29, 0, 28, 0, 2, 0]' : 0.172304}
{'[6, 6, 6, 4, 6, 6, 29, 29, 0, 28, 0, 2, 0]' : 0.173962}
{'[6, 6, 6, 4, 6, 6, 29, 29, 0, 28, 0, 2, 0]' : 0.173143}
{'[6, 6, 6, 4, 6, 6, 29, 29, 0, 28, 0, 2, 0]' : 0.17569}
{'[6, 6, 6, 4, 6, 6, 29, 29, 0, 28, 0, 2, 0]' : 0.173147}
{'[6, 6, 6, 4, 6, 6, 29, 29, 0, 28, 0, 2, 0]' : 0.169846}
{'[6, 6, 6, 4, 6, 6, 29, 29, 0, 28, 0, 2, 0]' : 0.172354}
{'[6, 6, 6, 4, 6, 6, 29, 29, 0, 28, 0, 2, 0]' : 0.173455}
{'[6, 6, 6, 4, 6, 6, 29, 29, 0, 28, 0, 2, 0]' : 0.174208}
{'[6, 6, 6, 4, 6, 6, 29, 29, 0, 28, 0, 2, 0]' : 0.176024}
{'[6, 6, 6, 4, 6, 6, 29, 29, 0, 28, 0, 2, 0]' : 0.171745}
{'[6, 6, 6, 4, 6, 6, 29, 29, 0, 28, 0, 2, 0]' : 0.1734}
{'[6, 6, 6, 4, 6, 6, 29, 29, 0, 28, 0, 2, 0]' : 0.169618}
{'[6, 6, 6, 4, 6, 6, 29, 29, 0, 28, 0, 2, 0]' : 0.169798}
{'[6, 6, 6, 4, 6, 6, 29, 29, 0, 28, 0, 2, 0]' : 0.171403}
{'[6, 6, 6, 4, 6, 6, 29, 29, 0, 28, 0, 2, 0]' : 0.169238}

out:
 ["{'[6, 6, 6, 4, 6, 6, 29, 29, 0, 28, 0, 2, 0]' : 0.170444}", "{'[6, 6, 6, 4, 6, 6, 29, 29, 0, 28, 0, 2, 0]' : 0.170484}", "{'[6, 6, 6, 4, 6, 6, 29, 29, 0, 28, 0, 2, 0]' : 0.169794}", "{'[6, 6, 6, 4, 6, 6, 29, 29, 0, 28, 0, 2, 0]' : 0.168599}", "{'[6, 6, 6, 4, 6, 6, 29, 29, 0, 28, 0, 2, 0]' : 0.168866}", "{'[6, 6, 6, 4, 6, 6, 29, 29, 0, 28, 0, 2, 0]' : 0.169858}", "{'[6, 6, 6, 4, 6, 6, 29, 29, 0, 28, 0, 2, 0]' : 0.168239}", "{'[6, 6, 6, 4, 6, 6, 29, 29, 0, 28, 0, 2, 0]' : 0.239704}", "{'[6, 6, 6, 4, 6, 6, 29, 29, 0, 28, 0, 2, 0]' : 0.18283}", "{'[6, 6, 6, 4, 6, 6, 29, 29, 0, 28, 0, 2, 0]' : 0.174865}", "{'[6, 6, 6, 4, 6, 6, 29, 29, 0, 28, 0, 2, 0]' : 0.176131}", "{'[6, 6, 6, 4, 6, 6, 29, 29, 0, 28, 0, 2, 0]' : 0.170562}", "{'[6, 6, 6, 4, 6, 6, 29, 29, 0, 28, 0, 2, 0]' : 0.176624}", "{'[6, 6, 6, 4, 6, 6, 29, 29, 0, 28, 0, 2, 0]' : 0.173029}", "{'[6, 6, 6, 4, 6, 6, 29, 29, 0, 28, 0, 2, 0]' : 0.172304}", "{'[6, 6, 6, 4, 6, 6, 29, 29, 0, 28, 0, 2, 0]' : 0.173962}", "{'[6, 6, 6, 4, 6, 6, 29, 29, 0, 28, 0, 2, 0]' : 0.173143}", "{'[6, 6, 6, 4, 6, 6, 29, 29, 0, 28, 0, 2, 0]' : 0.17569}", "{'[6, 6, 6, 4, 6, 6, 29, 29, 0, 28, 0, 2, 0]' : 0.173147}", "{'[6, 6, 6, 4, 6, 6, 29, 29, 0, 28, 0, 2, 0]' : 0.169846}", "{'[6, 6, 6, 4, 6, 6, 29, 29, 0, 28, 0, 2, 0]' : 0.172354}", "{'[6, 6, 6, 4, 6, 6, 29, 29, 0, 28, 0, 2, 0]' : 0.173455}", "{'[6, 6, 6, 4, 6, 6, 29, 29, 0, 28, 0, 2, 0]' : 0.174208}", "{'[6, 6, 6, 4, 6, 6, 29, 29, 0, 28, 0, 2, 0]' : 0.176024}", "{'[6, 6, 6, 4, 6, 6, 29, 29, 0, 28, 0, 2, 0]' : 0.171745}", "{'[6, 6, 6, 4, 6, 6, 29, 29, 0, 28, 0, 2, 0]' : 0.1734}", "{'[6, 6, 6, 4, 6, 6, 29, 29, 0, 28, 0, 2, 0]' : 0.169618}", "{'[6, 6, 6, 4, 6, 6, 29, 29, 0, 28, 0, 2, 0]' : 0.169798}", "{'[6, 6, 6, 4, 6, 6, 29, 29, 0, 28, 0, 2, 0]' : 0.171403}", "{'[6, 6, 6, 4, 6, 6, 29, 29, 0, 28, 0, 2, 0]' : 0.169238}"]
returning from 'run': {'[6, 6, 6, 4, 6, 6, 29, 29, 0, 28, 0, 2, 0]': ([0.170444, 0.170484, 0.169794, 0.168599, 0.168866, 0.169858, 0.168239, 0.239704, 0.18283, 0.174865, 0.176131, 0.170562, 0.176624, 0.173029, 0.172304, 0.173962, 0.173143, 0.17569, 0.173147, 0.169846, 0.172354, 0.173455, 0.174208, 0.176024, 0.171745, 0.1734, 0.169618, 0.169798, 0.171403, 0.169238], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 6, 4, 6, 6, 29, 29, 0, 28, 0, 2, 0]': ([0.170444, 0.170484, 0.169794, 0.168599, 0.168866, 0.169858, 0.168239, 0.239704, 0.18283, 0.174865, 0.176131, 0.170562, 0.176624, 0.173029, 0.172304, 0.173962, 0.173143, 0.17569, 0.173147, 0.169846, 0.172354, 0.173455, 0.174208, 0.176024, 0.171745, 0.1734, 0.169618, 0.169798, 0.171403, 0.169238], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		485
        Multiplications: 	188
        Divisions: 		0
        Logical: 		0
        Reads: 			1039
        Writes: 		124
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest62.exe __orio_perftest62.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest62.exe  
Program Test Output: 
{'[6, 6, 2, 0, 6, 6, 1, 0, 29, 29, 0, 0, 2]' : 0.228122}
{'[6, 6, 2, 0, 6, 6, 1, 0, 29, 29, 0, 0, 2]' : 0.227329}
{'[6, 6, 2, 0, 6, 6, 1, 0, 29, 29, 0, 0, 2]' : 0.204076}
{'[6, 6, 2, 0, 6, 6, 1, 0, 29, 29, 0, 0, 2]' : 0.201018}
{'[6, 6, 2, 0, 6, 6, 1, 0, 29, 29, 0, 0, 2]' : 0.201634}
{'[6, 6, 2, 0, 6, 6, 1, 0, 29, 29, 0, 0, 2]' : 0.201267}
{'[6, 6, 2, 0, 6, 6, 1, 0, 29, 29, 0, 0, 2]' : 0.198793}
{'[6, 6, 2, 0, 6, 6, 1, 0, 29, 29, 0, 0, 2]' : 0.20418}
{'[6, 6, 2, 0, 6, 6, 1, 0, 29, 29, 0, 0, 2]' : 0.200474}
{'[6, 6, 2, 0, 6, 6, 1, 0, 29, 29, 0, 0, 2]' : 0.201769}
{'[6, 6, 2, 0, 6, 6, 1, 0, 29, 29, 0, 0, 2]' : 0.200778}
{'[6, 6, 2, 0, 6, 6, 1, 0, 29, 29, 0, 0, 2]' : 0.199007}
{'[6, 6, 2, 0, 6, 6, 1, 0, 29, 29, 0, 0, 2]' : 0.204277}
{'[6, 6, 2, 0, 6, 6, 1, 0, 29, 29, 0, 0, 2]' : 0.200698}
{'[6, 6, 2, 0, 6, 6, 1, 0, 29, 29, 0, 0, 2]' : 0.201847}
{'[6, 6, 2, 0, 6, 6, 1, 0, 29, 29, 0, 0, 2]' : 0.198716}
{'[6, 6, 2, 0, 6, 6, 1, 0, 29, 29, 0, 0, 2]' : 0.199287}
{'[6, 6, 2, 0, 6, 6, 1, 0, 29, 29, 0, 0, 2]' : 0.204096}
{'[6, 6, 2, 0, 6, 6, 1, 0, 29, 29, 0, 0, 2]' : 0.200295}
{'[6, 6, 2, 0, 6, 6, 1, 0, 29, 29, 0, 0, 2]' : 0.200078}
{'[6, 6, 2, 0, 6, 6, 1, 0, 29, 29, 0, 0, 2]' : 0.198521}
{'[6, 6, 2, 0, 6, 6, 1, 0, 29, 29, 0, 0, 2]' : 0.19953}
{'[6, 6, 2, 0, 6, 6, 1, 0, 29, 29, 0, 0, 2]' : 0.201424}
{'[6, 6, 2, 0, 6, 6, 1, 0, 29, 29, 0, 0, 2]' : 0.199523}
{'[6, 6, 2, 0, 6, 6, 1, 0, 29, 29, 0, 0, 2]' : 0.202918}
{'[6, 6, 2, 0, 6, 6, 1, 0, 29, 29, 0, 0, 2]' : 0.200412}
{'[6, 6, 2, 0, 6, 6, 1, 0, 29, 29, 0, 0, 2]' : 0.199166}
{'[6, 6, 2, 0, 6, 6, 1, 0, 29, 29, 0, 0, 2]' : 0.200232}
{'[6, 6, 2, 0, 6, 6, 1, 0, 29, 29, 0, 0, 2]' : 0.198308}
{'[6, 6, 2, 0, 6, 6, 1, 0, 29, 29, 0, 0, 2]' : 0.202004}

out:
 ["{'[6, 6, 2, 0, 6, 6, 1, 0, 29, 29, 0, 0, 2]' : 0.228122}", "{'[6, 6, 2, 0, 6, 6, 1, 0, 29, 29, 0, 0, 2]' : 0.227329}", "{'[6, 6, 2, 0, 6, 6, 1, 0, 29, 29, 0, 0, 2]' : 0.204076}", "{'[6, 6, 2, 0, 6, 6, 1, 0, 29, 29, 0, 0, 2]' : 0.201018}", "{'[6, 6, 2, 0, 6, 6, 1, 0, 29, 29, 0, 0, 2]' : 0.201634}", "{'[6, 6, 2, 0, 6, 6, 1, 0, 29, 29, 0, 0, 2]' : 0.201267}", "{'[6, 6, 2, 0, 6, 6, 1, 0, 29, 29, 0, 0, 2]' : 0.198793}", "{'[6, 6, 2, 0, 6, 6, 1, 0, 29, 29, 0, 0, 2]' : 0.20418}", "{'[6, 6, 2, 0, 6, 6, 1, 0, 29, 29, 0, 0, 2]' : 0.200474}", "{'[6, 6, 2, 0, 6, 6, 1, 0, 29, 29, 0, 0, 2]' : 0.201769}", "{'[6, 6, 2, 0, 6, 6, 1, 0, 29, 29, 0, 0, 2]' : 0.200778}", "{'[6, 6, 2, 0, 6, 6, 1, 0, 29, 29, 0, 0, 2]' : 0.199007}", "{'[6, 6, 2, 0, 6, 6, 1, 0, 29, 29, 0, 0, 2]' : 0.204277}", "{'[6, 6, 2, 0, 6, 6, 1, 0, 29, 29, 0, 0, 2]' : 0.200698}", "{'[6, 6, 2, 0, 6, 6, 1, 0, 29, 29, 0, 0, 2]' : 0.201847}", "{'[6, 6, 2, 0, 6, 6, 1, 0, 29, 29, 0, 0, 2]' : 0.198716}", "{'[6, 6, 2, 0, 6, 6, 1, 0, 29, 29, 0, 0, 2]' : 0.199287}", "{'[6, 6, 2, 0, 6, 6, 1, 0, 29, 29, 0, 0, 2]' : 0.204096}", "{'[6, 6, 2, 0, 6, 6, 1, 0, 29, 29, 0, 0, 2]' : 0.200295}", "{'[6, 6, 2, 0, 6, 6, 1, 0, 29, 29, 0, 0, 2]' : 0.200078}", "{'[6, 6, 2, 0, 6, 6, 1, 0, 29, 29, 0, 0, 2]' : 0.198521}", "{'[6, 6, 2, 0, 6, 6, 1, 0, 29, 29, 0, 0, 2]' : 0.19953}", "{'[6, 6, 2, 0, 6, 6, 1, 0, 29, 29, 0, 0, 2]' : 0.201424}", "{'[6, 6, 2, 0, 6, 6, 1, 0, 29, 29, 0, 0, 2]' : 0.199523}", "{'[6, 6, 2, 0, 6, 6, 1, 0, 29, 29, 0, 0, 2]' : 0.202918}", "{'[6, 6, 2, 0, 6, 6, 1, 0, 29, 29, 0, 0, 2]' : 0.200412}", "{'[6, 6, 2, 0, 6, 6, 1, 0, 29, 29, 0, 0, 2]' : 0.199166}", "{'[6, 6, 2, 0, 6, 6, 1, 0, 29, 29, 0, 0, 2]' : 0.200232}", "{'[6, 6, 2, 0, 6, 6, 1, 0, 29, 29, 0, 0, 2]' : 0.198308}", "{'[6, 6, 2, 0, 6, 6, 1, 0, 29, 29, 0, 0, 2]' : 0.202004}"]
returning from 'run': {'[6, 6, 2, 0, 6, 6, 1, 0, 29, 29, 0, 0, 2]': ([0.228122, 0.227329, 0.204076, 0.201018, 0.201634, 0.201267, 0.198793, 0.20418, 0.200474, 0.201769, 0.200778, 0.199007, 0.204277, 0.200698, 0.201847, 0.198716, 0.199287, 0.204096, 0.200295, 0.200078, 0.198521, 0.19953, 0.201424, 0.199523, 0.202918, 0.200412, 0.199166, 0.200232, 0.198308, 0.202004], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 2, 0, 6, 6, 1, 0, 29, 29, 0, 0, 2]': ([0.228122, 0.227329, 0.204076, 0.201018, 0.201634, 0.201267, 0.198793, 0.20418, 0.200474, 0.201769, 0.200778, 0.199007, 0.204277, 0.200698, 0.201847, 0.198716, 0.199287, 0.204096, 0.200295, 0.200078, 0.198521, 0.19953, 0.201424, 0.199523, 0.202918, 0.200412, 0.199166, 0.200232, 0.198308, 0.202004], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	6
        Additions: 		13378
        Multiplications: 	3968
        Divisions: 		0
        Logical: 		0
        Reads: 			20051
        Writes: 		2058
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest63.exe __orio_perftest63.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest63.exe  
Program Test Output: 
{'[6, 6, 5, 6, 6, 6, 0, 29, 29, 0, 0, 0, 2]' : 0.202826}
{'[6, 6, 5, 6, 6, 6, 0, 29, 29, 0, 0, 0, 2]' : 0.192569}
{'[6, 6, 5, 6, 6, 6, 0, 29, 29, 0, 0, 0, 2]' : 0.177483}
{'[6, 6, 5, 6, 6, 6, 0, 29, 29, 0, 0, 0, 2]' : 0.174958}
{'[6, 6, 5, 6, 6, 6, 0, 29, 29, 0, 0, 0, 2]' : 0.169182}
{'[6, 6, 5, 6, 6, 6, 0, 29, 29, 0, 0, 0, 2]' : 0.176545}
{'[6, 6, 5, 6, 6, 6, 0, 29, 29, 0, 0, 0, 2]' : 0.170276}
{'[6, 6, 5, 6, 6, 6, 0, 29, 29, 0, 0, 0, 2]' : 0.174958}
{'[6, 6, 5, 6, 6, 6, 0, 29, 29, 0, 0, 0, 2]' : 0.17706}
{'[6, 6, 5, 6, 6, 6, 0, 29, 29, 0, 0, 0, 2]' : 0.174973}
{'[6, 6, 5, 6, 6, 6, 0, 29, 29, 0, 0, 0, 2]' : 0.170563}
{'[6, 6, 5, 6, 6, 6, 0, 29, 29, 0, 0, 0, 2]' : 0.176391}
{'[6, 6, 5, 6, 6, 6, 0, 29, 29, 0, 0, 0, 2]' : 0.171997}
{'[6, 6, 5, 6, 6, 6, 0, 29, 29, 0, 0, 0, 2]' : 0.178236}
{'[6, 6, 5, 6, 6, 6, 0, 29, 29, 0, 0, 0, 2]' : 0.172873}
{'[6, 6, 5, 6, 6, 6, 0, 29, 29, 0, 0, 0, 2]' : 0.174728}
{'[6, 6, 5, 6, 6, 6, 0, 29, 29, 0, 0, 0, 2]' : 0.168254}
{'[6, 6, 5, 6, 6, 6, 0, 29, 29, 0, 0, 0, 2]' : 0.172096}
{'[6, 6, 5, 6, 6, 6, 0, 29, 29, 0, 0, 0, 2]' : 0.173061}
{'[6, 6, 5, 6, 6, 6, 0, 29, 29, 0, 0, 0, 2]' : 0.174816}
{'[6, 6, 5, 6, 6, 6, 0, 29, 29, 0, 0, 0, 2]' : 0.173545}
{'[6, 6, 5, 6, 6, 6, 0, 29, 29, 0, 0, 0, 2]' : 0.168714}
{'[6, 6, 5, 6, 6, 6, 0, 29, 29, 0, 0, 0, 2]' : 0.176491}
{'[6, 6, 5, 6, 6, 6, 0, 29, 29, 0, 0, 0, 2]' : 0.175783}
{'[6, 6, 5, 6, 6, 6, 0, 29, 29, 0, 0, 0, 2]' : 0.178063}
{'[6, 6, 5, 6, 6, 6, 0, 29, 29, 0, 0, 0, 2]' : 0.173327}
{'[6, 6, 5, 6, 6, 6, 0, 29, 29, 0, 0, 0, 2]' : 0.175552}
{'[6, 6, 5, 6, 6, 6, 0, 29, 29, 0, 0, 0, 2]' : 0.174752}
{'[6, 6, 5, 6, 6, 6, 0, 29, 29, 0, 0, 0, 2]' : 0.176164}
{'[6, 6, 5, 6, 6, 6, 0, 29, 29, 0, 0, 0, 2]' : 0.170131}

out:
 ["{'[6, 6, 5, 6, 6, 6, 0, 29, 29, 0, 0, 0, 2]' : 0.202826}", "{'[6, 6, 5, 6, 6, 6, 0, 29, 29, 0, 0, 0, 2]' : 0.192569}", "{'[6, 6, 5, 6, 6, 6, 0, 29, 29, 0, 0, 0, 2]' : 0.177483}", "{'[6, 6, 5, 6, 6, 6, 0, 29, 29, 0, 0, 0, 2]' : 0.174958}", "{'[6, 6, 5, 6, 6, 6, 0, 29, 29, 0, 0, 0, 2]' : 0.169182}", "{'[6, 6, 5, 6, 6, 6, 0, 29, 29, 0, 0, 0, 2]' : 0.176545}", "{'[6, 6, 5, 6, 6, 6, 0, 29, 29, 0, 0, 0, 2]' : 0.170276}", "{'[6, 6, 5, 6, 6, 6, 0, 29, 29, 0, 0, 0, 2]' : 0.174958}", "{'[6, 6, 5, 6, 6, 6, 0, 29, 29, 0, 0, 0, 2]' : 0.17706}", "{'[6, 6, 5, 6, 6, 6, 0, 29, 29, 0, 0, 0, 2]' : 0.174973}", "{'[6, 6, 5, 6, 6, 6, 0, 29, 29, 0, 0, 0, 2]' : 0.170563}", "{'[6, 6, 5, 6, 6, 6, 0, 29, 29, 0, 0, 0, 2]' : 0.176391}", "{'[6, 6, 5, 6, 6, 6, 0, 29, 29, 0, 0, 0, 2]' : 0.171997}", "{'[6, 6, 5, 6, 6, 6, 0, 29, 29, 0, 0, 0, 2]' : 0.178236}", "{'[6, 6, 5, 6, 6, 6, 0, 29, 29, 0, 0, 0, 2]' : 0.172873}", "{'[6, 6, 5, 6, 6, 6, 0, 29, 29, 0, 0, 0, 2]' : 0.174728}", "{'[6, 6, 5, 6, 6, 6, 0, 29, 29, 0, 0, 0, 2]' : 0.168254}", "{'[6, 6, 5, 6, 6, 6, 0, 29, 29, 0, 0, 0, 2]' : 0.172096}", "{'[6, 6, 5, 6, 6, 6, 0, 29, 29, 0, 0, 0, 2]' : 0.173061}", "{'[6, 6, 5, 6, 6, 6, 0, 29, 29, 0, 0, 0, 2]' : 0.174816}", "{'[6, 6, 5, 6, 6, 6, 0, 29, 29, 0, 0, 0, 2]' : 0.173545}", "{'[6, 6, 5, 6, 6, 6, 0, 29, 29, 0, 0, 0, 2]' : 0.168714}", "{'[6, 6, 5, 6, 6, 6, 0, 29, 29, 0, 0, 0, 2]' : 0.176491}", "{'[6, 6, 5, 6, 6, 6, 0, 29, 29, 0, 0, 0, 2]' : 0.175783}", "{'[6, 6, 5, 6, 6, 6, 0, 29, 29, 0, 0, 0, 2]' : 0.178063}", "{'[6, 6, 5, 6, 6, 6, 0, 29, 29, 0, 0, 0, 2]' : 0.173327}", "{'[6, 6, 5, 6, 6, 6, 0, 29, 29, 0, 0, 0, 2]' : 0.175552}", "{'[6, 6, 5, 6, 6, 6, 0, 29, 29, 0, 0, 0, 2]' : 0.174752}", "{'[6, 6, 5, 6, 6, 6, 0, 29, 29, 0, 0, 0, 2]' : 0.176164}", "{'[6, 6, 5, 6, 6, 6, 0, 29, 29, 0, 0, 0, 2]' : 0.170131}"]
returning from 'run': {'[6, 6, 5, 6, 6, 6, 0, 29, 29, 0, 0, 0, 2]': ([0.202826, 0.192569, 0.177483, 0.174958, 0.169182, 0.176545, 0.170276, 0.174958, 0.17706, 0.174973, 0.170563, 0.176391, 0.171997, 0.178236, 0.172873, 0.174728, 0.168254, 0.172096, 0.173061, 0.174816, 0.173545, 0.168714, 0.176491, 0.175783, 0.178063, 0.173327, 0.175552, 0.174752, 0.176164, 0.170131], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 5, 6, 6, 6, 0, 29, 29, 0, 0, 0, 2]': ([0.202826, 0.192569, 0.177483, 0.174958, 0.169182, 0.176545, 0.170276, 0.174958, 0.17706, 0.174973, 0.170563, 0.176391, 0.171997, 0.178236, 0.172873, 0.174728, 0.168254, 0.172096, 0.173061, 0.174816, 0.173545, 0.168714, 0.176491, 0.175783, 0.178063, 0.173327, 0.175552, 0.174752, 0.176164, 0.170131], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Complete design, with measurements:
      T1_K T2_I U1_I U_I U_J U_K RT_I RT_J RT_K cost_mean
865      0    0    0  28   0   1    0    2    0 0.1719525
1055     6    6    0   0   2   4    0    0    0 0.2417884
3015     1    5   27  26   1   0    0    0    2 0.1858866
4068     0    0    5  27   0  25    2    0    0 0.2272058
4184     3    0    3   3   1   0    0    2    0 0.1336710
5674     0    6   27   0   3  29    1    1    0 0.1120954
11250    4    6   29  29  28   0    0    2    0 0.2510420
14115    0    6    0  29   0  18    0    1    0 0.2167600
18023    6    0   29  27   0  28    0    0    0 0.1741046
18766    6    0   29  29  28   0    2    0    0 0.2728458
20883    0    0   29  11  28   0    0    0    0 0.1380929
22949    6    4   29  29   0  28    0    2    0 0.1746455
25465    2    0    1   0  29  29    0    0    2 0.2026593
26128    5    6    0  29  29   0    0    0    2 0.1755456

Heteroscedasticity Test p-value: 0.38009383932
Regression Step:            Df   Sum Sq  Mean Sq F value Pr(>F)
T1_K         1 0.003898 0.003898   1.185  0.338
T2_I         1 0.000061 0.000061   0.019  0.898
U1_I         1 0.000703 0.000703   0.214  0.668
U_I          1 0.003762 0.003762   1.144  0.345
U_J          1 0.001639 0.001639   0.498  0.519
U_K          1 0.000001 0.000001   0.000  0.984
RT_I         1 0.004310 0.004310   1.310  0.316
RT_J         1 0.000189 0.000189   0.058  0.822
RT_K         1 0.000763 0.000763   0.232  0.655
Residuals    4 0.013158 0.003289               

Predicting Best
Generating valid search space of size 28000 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Tested coordinates: 110000
Tested coordinates: 120000
Tested coordinates: 130000
Tested coordinates: 140000
Tested coordinates: 150000
Tested coordinates: 160000
Tested coordinates: 170000
Tested coordinates: 180000
Tested coordinates: 190000
Tested coordinates: 200000
Tested coordinates: 210000
Tested coordinates: 220000
Tested coordinates: 230000
Tested coordinates: 240000
Tested coordinates: 250000
Tested coordinates: 260000
Tested coordinates: 270000
Valid coordinates: 5600
Tested coordinates: 280000
Tested coordinates: 290000
Tested coordinates: 300000
Tested coordinates: 310000
Tested coordinates: 320000
Tested coordinates: 330000
Tested coordinates: 340000
Tested coordinates: 350000
Tested coordinates: 360000
Tested coordinates: 370000
Tested coordinates: 380000
Tested coordinates: 390000
Tested coordinates: 400000
Tested coordinates: 410000
Tested coordinates: 420000
Tested coordinates: 430000
Tested coordinates: 440000
Tested coordinates: 450000
Tested coordinates: 460000
Tested coordinates: 470000
Tested coordinates: 480000
Tested coordinates: 490000
Tested coordinates: 500000
Tested coordinates: 510000
Tested coordinates: 520000
Tested coordinates: 530000
Tested coordinates: 540000
Tested coordinates: 550000
Valid coordinates: 11200
Tested coordinates: 560000
Tested coordinates: 570000
Tested coordinates: 580000
Tested coordinates: 590000
Tested coordinates: 600000
Tested coordinates: 610000
Tested coordinates: 620000
Tested coordinates: 630000
Tested coordinates: 640000
Tested coordinates: 650000
Tested coordinates: 660000
Tested coordinates: 670000
Tested coordinates: 680000
Tested coordinates: 690000
Tested coordinates: 700000
Tested coordinates: 710000
Tested coordinates: 720000
Tested coordinates: 730000
Tested coordinates: 740000
Tested coordinates: 750000
Tested coordinates: 760000
Tested coordinates: 770000
Tested coordinates: 780000
Tested coordinates: 790000
Tested coordinates: 800000
Tested coordinates: 810000
Tested coordinates: 820000
Tested coordinates: 830000
Valid coordinates: 16800
Tested coordinates: 840000
Tested coordinates: 850000
Tested coordinates: 860000
Tested coordinates: 870000
Tested coordinates: 880000
Tested coordinates: 890000
Tested coordinates: 900000
Tested coordinates: 910000
Tested coordinates: 920000
Tested coordinates: 930000
Tested coordinates: 940000
Tested coordinates: 950000
Tested coordinates: 960000
Tested coordinates: 970000
Tested coordinates: 980000
Tested coordinates: 990000
Tested coordinates: 1000000
Tested coordinates: 1010000
Tested coordinates: 1020000
Tested coordinates: 1030000
Tested coordinates: 1040000
Tested coordinates: 1050000
Tested coordinates: 1060000
Tested coordinates: 1070000
Tested coordinates: 1080000
Tested coordinates: 1090000
Tested coordinates: 1100000
Valid coordinates: 22400
Tested coordinates: 1110000
Tested coordinates: 1120000
Tested coordinates: 1130000
Tested coordinates: 1140000
Tested coordinates: 1150000
Tested coordinates: 1160000
Tested coordinates: 1170000
Tested coordinates: 1180000
Tested coordinates: 1190000
Tested coordinates: 1200000
Tested coordinates: 1210000
Tested coordinates: 1220000
Tested coordinates: 1230000
Tested coordinates: 1240000
Tested coordinates: 1250000
Tested coordinates: 1260000
Tested coordinates: 1270000
Tested coordinates: 1280000
Tested coordinates: 1290000
Tested coordinates: 1300000
Tested coordinates: 1310000
Tested coordinates: 1320000
Tested coordinates: 1330000
Tested coordinates: 1340000
Tested coordinates: 1350000
Tested coordinates: 1360000
Tested coordinates: 1370000
Tested coordinates: 1380000
Valid coordinates: 28000
Valid/Tested configurations: 28000/1381910
Generated Search Space:
NULL
Getting Best from Design
Response: ['cost_mean']
Design Names:  [1] "T1_K"      "T2_I"      "U1_I"      "U_I"       "U_J"       "U_K"      
 [7] "RT_I"      "RT_J"      "RT_K"      "cost_mean"

Design Response:       cost_mean
865   0.1719525
1055  0.2417884
3015  0.1858866
4068  0.2272058
4184  0.1336710
5674  0.1120954
11250 0.2510420
14115 0.2167600
18023 0.1741046
18766 0.2728458
20883 0.1380929
22949 0.1746455
25465 0.2026593
26128 0.1755456

Current Design Names: ['T1_K', 'T2_I', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Getting fixed variables
No variables within acceptable threshold
Fixed Variables: {'T2_K': 6, 'T2_J': 6, 'T1_I': 6, 'T1_J': 6}
Unique Variables: []
Pruning Model
No variables within acceptable threshold
Best Predicted:      T1_I T1_J T1_K T2_I T2_J T2_K U1_I U_I U_J U_K RT_I RT_J RT_K
8301    6    6    0    0    6    6   29   1   0  18    0    2    0

Best From Design: [6, 6, 0, 6, 6, 6, 27, 0, 3, 29, 1, 1, 0]
Pruned Factors: ['T1_K', 'T2_I', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Pruned Inverse Factors: []
Pruned Interactions: []
Fixed Factors: {'T2_K': 6, 'T2_J': 6, 'T1_I': 6, 'T1_J': 6}
Length of requested configs: 1
Result was on Database, Returning Now
Starting Point (-O3):
0.16059526666666663
Predicted Best Point:
[6, 6, 0, 0, 6, 6, 29, 1, 0, 18, 0, 2, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	5
        Additions: 		920
        Multiplications: 	318
        Divisions: 		0
        Logical: 		0
        Reads: 			1791
        Writes: 		231
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest64.exe __orio_perftest64.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest64.exe  
Program Test Output: 
{'[6, 6, 0, 0, 6, 6, 29, 1, 0, 18, 0, 2, 0]' : 0.154587}
{'[6, 6, 0, 0, 6, 6, 29, 1, 0, 18, 0, 2, 0]' : 0.154557}
{'[6, 6, 0, 0, 6, 6, 29, 1, 0, 18, 0, 2, 0]' : 0.135419}
{'[6, 6, 0, 0, 6, 6, 29, 1, 0, 18, 0, 2, 0]' : 0.130457}
{'[6, 6, 0, 0, 6, 6, 29, 1, 0, 18, 0, 2, 0]' : 0.130206}
{'[6, 6, 0, 0, 6, 6, 29, 1, 0, 18, 0, 2, 0]' : 0.130178}
{'[6, 6, 0, 0, 6, 6, 29, 1, 0, 18, 0, 2, 0]' : 0.13026}
{'[6, 6, 0, 0, 6, 6, 29, 1, 0, 18, 0, 2, 0]' : 0.130538}
{'[6, 6, 0, 0, 6, 6, 29, 1, 0, 18, 0, 2, 0]' : 0.130225}
{'[6, 6, 0, 0, 6, 6, 29, 1, 0, 18, 0, 2, 0]' : 0.130321}
{'[6, 6, 0, 0, 6, 6, 29, 1, 0, 18, 0, 2, 0]' : 0.13018}
{'[6, 6, 0, 0, 6, 6, 29, 1, 0, 18, 0, 2, 0]' : 0.130213}
{'[6, 6, 0, 0, 6, 6, 29, 1, 0, 18, 0, 2, 0]' : 0.130175}
{'[6, 6, 0, 0, 6, 6, 29, 1, 0, 18, 0, 2, 0]' : 0.130187}
{'[6, 6, 0, 0, 6, 6, 29, 1, 0, 18, 0, 2, 0]' : 0.13017}
{'[6, 6, 0, 0, 6, 6, 29, 1, 0, 18, 0, 2, 0]' : 0.130263}
{'[6, 6, 0, 0, 6, 6, 29, 1, 0, 18, 0, 2, 0]' : 0.130191}
{'[6, 6, 0, 0, 6, 6, 29, 1, 0, 18, 0, 2, 0]' : 0.130156}
{'[6, 6, 0, 0, 6, 6, 29, 1, 0, 18, 0, 2, 0]' : 0.130682}
{'[6, 6, 0, 0, 6, 6, 29, 1, 0, 18, 0, 2, 0]' : 0.130189}
{'[6, 6, 0, 0, 6, 6, 29, 1, 0, 18, 0, 2, 0]' : 0.130187}
{'[6, 6, 0, 0, 6, 6, 29, 1, 0, 18, 0, 2, 0]' : 0.130161}
{'[6, 6, 0, 0, 6, 6, 29, 1, 0, 18, 0, 2, 0]' : 0.130513}
{'[6, 6, 0, 0, 6, 6, 29, 1, 0, 18, 0, 2, 0]' : 0.130193}
{'[6, 6, 0, 0, 6, 6, 29, 1, 0, 18, 0, 2, 0]' : 0.130232}
{'[6, 6, 0, 0, 6, 6, 29, 1, 0, 18, 0, 2, 0]' : 0.130349}
{'[6, 6, 0, 0, 6, 6, 29, 1, 0, 18, 0, 2, 0]' : 0.130147}
{'[6, 6, 0, 0, 6, 6, 29, 1, 0, 18, 0, 2, 0]' : 0.130263}
{'[6, 6, 0, 0, 6, 6, 29, 1, 0, 18, 0, 2, 0]' : 0.130129}
{'[6, 6, 0, 0, 6, 6, 29, 1, 0, 18, 0, 2, 0]' : 0.130203}

out:
 ["{'[6, 6, 0, 0, 6, 6, 29, 1, 0, 18, 0, 2, 0]' : 0.154587}", "{'[6, 6, 0, 0, 6, 6, 29, 1, 0, 18, 0, 2, 0]' : 0.154557}", "{'[6, 6, 0, 0, 6, 6, 29, 1, 0, 18, 0, 2, 0]' : 0.135419}", "{'[6, 6, 0, 0, 6, 6, 29, 1, 0, 18, 0, 2, 0]' : 0.130457}", "{'[6, 6, 0, 0, 6, 6, 29, 1, 0, 18, 0, 2, 0]' : 0.130206}", "{'[6, 6, 0, 0, 6, 6, 29, 1, 0, 18, 0, 2, 0]' : 0.130178}", "{'[6, 6, 0, 0, 6, 6, 29, 1, 0, 18, 0, 2, 0]' : 0.13026}", "{'[6, 6, 0, 0, 6, 6, 29, 1, 0, 18, 0, 2, 0]' : 0.130538}", "{'[6, 6, 0, 0, 6, 6, 29, 1, 0, 18, 0, 2, 0]' : 0.130225}", "{'[6, 6, 0, 0, 6, 6, 29, 1, 0, 18, 0, 2, 0]' : 0.130321}", "{'[6, 6, 0, 0, 6, 6, 29, 1, 0, 18, 0, 2, 0]' : 0.13018}", "{'[6, 6, 0, 0, 6, 6, 29, 1, 0, 18, 0, 2, 0]' : 0.130213}", "{'[6, 6, 0, 0, 6, 6, 29, 1, 0, 18, 0, 2, 0]' : 0.130175}", "{'[6, 6, 0, 0, 6, 6, 29, 1, 0, 18, 0, 2, 0]' : 0.130187}", "{'[6, 6, 0, 0, 6, 6, 29, 1, 0, 18, 0, 2, 0]' : 0.13017}", "{'[6, 6, 0, 0, 6, 6, 29, 1, 0, 18, 0, 2, 0]' : 0.130263}", "{'[6, 6, 0, 0, 6, 6, 29, 1, 0, 18, 0, 2, 0]' : 0.130191}", "{'[6, 6, 0, 0, 6, 6, 29, 1, 0, 18, 0, 2, 0]' : 0.130156}", "{'[6, 6, 0, 0, 6, 6, 29, 1, 0, 18, 0, 2, 0]' : 0.130682}", "{'[6, 6, 0, 0, 6, 6, 29, 1, 0, 18, 0, 2, 0]' : 0.130189}", "{'[6, 6, 0, 0, 6, 6, 29, 1, 0, 18, 0, 2, 0]' : 0.130187}", "{'[6, 6, 0, 0, 6, 6, 29, 1, 0, 18, 0, 2, 0]' : 0.130161}", "{'[6, 6, 0, 0, 6, 6, 29, 1, 0, 18, 0, 2, 0]' : 0.130513}", "{'[6, 6, 0, 0, 6, 6, 29, 1, 0, 18, 0, 2, 0]' : 0.130193}", "{'[6, 6, 0, 0, 6, 6, 29, 1, 0, 18, 0, 2, 0]' : 0.130232}", "{'[6, 6, 0, 0, 6, 6, 29, 1, 0, 18, 0, 2, 0]' : 0.130349}", "{'[6, 6, 0, 0, 6, 6, 29, 1, 0, 18, 0, 2, 0]' : 0.130147}", "{'[6, 6, 0, 0, 6, 6, 29, 1, 0, 18, 0, 2, 0]' : 0.130263}", "{'[6, 6, 0, 0, 6, 6, 29, 1, 0, 18, 0, 2, 0]' : 0.130129}", "{'[6, 6, 0, 0, 6, 6, 29, 1, 0, 18, 0, 2, 0]' : 0.130203}"]
returning from 'run': {'[6, 6, 0, 0, 6, 6, 29, 1, 0, 18, 0, 2, 0]': ([0.154587, 0.154557, 0.135419, 0.130457, 0.130206, 0.130178, 0.13026, 0.130538, 0.130225, 0.130321, 0.13018, 0.130213, 0.130175, 0.130187, 0.13017, 0.130263, 0.130191, 0.130156, 0.130682, 0.130189, 0.130187, 0.130161, 0.130513, 0.130193, 0.130232, 0.130349, 0.130147, 0.130263, 0.130129, 0.130203], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 0, 0, 6, 6, 29, 1, 0, 18, 0, 2, 0]': ([0.154587, 0.154557, 0.135419, 0.130457, 0.130206, 0.130178, 0.13026, 0.130538, 0.130225, 0.130321, 0.13018, 0.130213, 0.130175, 0.130187, 0.13017, 0.130263, 0.130191, 0.130156, 0.130682, 0.130189, 0.130187, 0.130161, 0.130513, 0.130193, 0.130232, 0.130349, 0.130147, 0.130263, 0.130129, 0.130203], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Design Best Point:
[6, 6, 0, 6, 6, 6, 27, 0, 3, 29, 1, 1, 0]
Length of requested configs: 1
Result was on Database, Returning Now
Fixed Factors: {'T2_K': 6, 'T2_J': 6, 'T1_I': 6, 'T1_J': 6}
Slowdown (Design Best): 0.6979991938326123
Slowdown (Predicted Best): 0.8222598092347262
Budget: 60/180
Updating Global Best: 0.11209536666666671
Current Best Point: 
[6, 6, 0, 6, 6, 6, 27, 0, 3, 29, 1, 1, 0]
Step 4
Full Model:  ~ T1_K + T2_I + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K
Generating valid search space of size 28000 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Tested coordinates: 110000
Tested coordinates: 120000
Tested coordinates: 130000
Tested coordinates: 140000
Tested coordinates: 150000
Tested coordinates: 160000
Tested coordinates: 170000
Tested coordinates: 180000
Tested coordinates: 190000
Tested coordinates: 200000
Tested coordinates: 210000
Tested coordinates: 220000
Tested coordinates: 230000
Tested coordinates: 240000
Tested coordinates: 250000
Tested coordinates: 260000
Tested coordinates: 270000
Valid coordinates: 5600
Tested coordinates: 280000
Tested coordinates: 290000
Tested coordinates: 300000
Tested coordinates: 310000
Tested coordinates: 320000
Tested coordinates: 330000
Tested coordinates: 340000
Tested coordinates: 350000
Tested coordinates: 360000
Tested coordinates: 370000
Tested coordinates: 380000
Tested coordinates: 390000
Tested coordinates: 400000
Tested coordinates: 410000
Tested coordinates: 420000
Tested coordinates: 430000
Tested coordinates: 440000
Tested coordinates: 450000
Tested coordinates: 460000
Tested coordinates: 470000
Tested coordinates: 480000
Tested coordinates: 490000
Tested coordinates: 500000
Tested coordinates: 510000
Tested coordinates: 520000
Tested coordinates: 530000
Tested coordinates: 540000
Valid coordinates: 11200
Tested coordinates: 550000
Tested coordinates: 560000
Tested coordinates: 570000
Tested coordinates: 580000
Tested coordinates: 590000
Tested coordinates: 600000
Tested coordinates: 610000
Tested coordinates: 620000
Tested coordinates: 630000
Tested coordinates: 640000
Tested coordinates: 650000
Tested coordinates: 660000
Tested coordinates: 670000
Tested coordinates: 680000
Tested coordinates: 690000
Tested coordinates: 700000
Tested coordinates: 710000
Tested coordinates: 720000
Tested coordinates: 730000
Tested coordinates: 740000
Tested coordinates: 750000
Tested coordinates: 760000
Tested coordinates: 770000
Tested coordinates: 780000
Tested coordinates: 790000
Tested coordinates: 800000
Tested coordinates: 810000
Valid coordinates: 16800
Tested coordinates: 820000
Tested coordinates: 830000
Tested coordinates: 840000
Tested coordinates: 850000
Tested coordinates: 860000
Tested coordinates: 870000
Tested coordinates: 880000
Tested coordinates: 890000
Tested coordinates: 900000
Tested coordinates: 910000
Tested coordinates: 920000
Tested coordinates: 930000
Tested coordinates: 940000
Tested coordinates: 950000
Tested coordinates: 960000
Tested coordinates: 970000
Tested coordinates: 980000
Tested coordinates: 990000
Tested coordinates: 1000000
Tested coordinates: 1010000
Tested coordinates: 1020000
Tested coordinates: 1030000
Tested coordinates: 1040000
Tested coordinates: 1050000
Tested coordinates: 1060000
Tested coordinates: 1070000
Tested coordinates: 1080000
Tested coordinates: 1090000
Valid coordinates: 22400
Tested coordinates: 1100000
Tested coordinates: 1110000
Tested coordinates: 1120000
Tested coordinates: 1130000
Tested coordinates: 1140000
Tested coordinates: 1150000
Tested coordinates: 1160000
Tested coordinates: 1170000
Tested coordinates: 1180000
Tested coordinates: 1190000
Tested coordinates: 1200000
Tested coordinates: 1210000
Tested coordinates: 1220000
Tested coordinates: 1230000
Tested coordinates: 1240000
Tested coordinates: 1250000
Tested coordinates: 1260000
Tested coordinates: 1270000
Tested coordinates: 1280000
Tested coordinates: 1290000
Tested coordinates: 1300000
Tested coordinates: 1310000
Tested coordinates: 1320000
Tested coordinates: 1330000
Tested coordinates: 1340000
Tested coordinates: 1350000
Tested coordinates: 1360000
Valid coordinates: 28000
Valid/Tested configurations: 28000/1364790
Generated Search Space:
NULL
Clean Info:
Removed Factors: character(0)

Removed Inverse Factors: character(0)

New Factors: ['T1_K', 'T2_I', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
New Inverse Factors: []
New Fixed Factors: {'T2_K': 6, 'T2_J': 6, 'T1_I': 6, 'T1_J': 6}
Fixed Factors: {'T2_K': 6, 'T2_J': 6, 'T1_I': 6, 'T1_J': 6}
Computing D-Optimal Design
Computing D-Optimal Design with 14 experiments
Design Formula:  ~ T1_K + T2_I + U1_I + U_I + U_J + U_K + RT_I + RT_J + RT_K
Starting "optFederov" run
Using Search Space:
NULL
Data Dimensions: [1] 28000     9

      T1_K T2_I U1_I U_I U_J U_K RT_I RT_J RT_K
1222     5    0   27   0  29  29    0    2    0
4560     6    6   26   0   2   4    0    0    2
10885    0    6    3  29  26   0    0    2    0
11499    4    0    1  28  29   0    0    0    0
16071    0    0   28  17   1   0    2    0    0
16437    2    0   28   0  29  26    0    0    0
19871    0    6    0   0   0   0    0    0    0
20703    6    6   28  22   0  27    0    0    0
22052    6    6    0   0  29  27    2    0    0
22108    6    0    0  29   0  29    1    0    1
23212    6    0    0   0   2   3    0    2    0
23517    0    0    1   0   3  27    0    0    2
23909    0    5   29  29  29   0    0    0    2
26053    0    6   21  27   0  28    0    2    0

D-Efficiency Approximation: [1] 0.628

Measuring design of size 14
Current Design Names: ['T1_K', 'T2_I', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		480
        Multiplications: 	188
        Divisions: 		0
        Logical: 		0
        Reads: 			1091
        Writes: 		150
        Comparisons:		13
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest65.exe __orio_perftest65.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest65.exe  
Program Test Output: 
{'[6, 6, 5, 0, 6, 6, 27, 0, 29, 29, 0, 2, 0]' : 0.208722}
{'[6, 6, 5, 0, 6, 6, 27, 0, 29, 29, 0, 2, 0]' : 0.201358}
{'[6, 6, 5, 0, 6, 6, 27, 0, 29, 29, 0, 2, 0]' : 0.174281}
{'[6, 6, 5, 0, 6, 6, 27, 0, 29, 29, 0, 2, 0]' : 0.174209}
{'[6, 6, 5, 0, 6, 6, 27, 0, 29, 29, 0, 2, 0]' : 0.174217}
{'[6, 6, 5, 0, 6, 6, 27, 0, 29, 29, 0, 2, 0]' : 0.174218}
{'[6, 6, 5, 0, 6, 6, 27, 0, 29, 29, 0, 2, 0]' : 0.174188}
{'[6, 6, 5, 0, 6, 6, 27, 0, 29, 29, 0, 2, 0]' : 0.174556}
{'[6, 6, 5, 0, 6, 6, 27, 0, 29, 29, 0, 2, 0]' : 0.174258}
{'[6, 6, 5, 0, 6, 6, 27, 0, 29, 29, 0, 2, 0]' : 0.174285}
{'[6, 6, 5, 0, 6, 6, 27, 0, 29, 29, 0, 2, 0]' : 0.174489}
{'[6, 6, 5, 0, 6, 6, 27, 0, 29, 29, 0, 2, 0]' : 0.174195}
{'[6, 6, 5, 0, 6, 6, 27, 0, 29, 29, 0, 2, 0]' : 0.174444}
{'[6, 6, 5, 0, 6, 6, 27, 0, 29, 29, 0, 2, 0]' : 0.174262}
{'[6, 6, 5, 0, 6, 6, 27, 0, 29, 29, 0, 2, 0]' : 0.174225}
{'[6, 6, 5, 0, 6, 6, 27, 0, 29, 29, 0, 2, 0]' : 0.174208}
{'[6, 6, 5, 0, 6, 6, 27, 0, 29, 29, 0, 2, 0]' : 0.174415}
{'[6, 6, 5, 0, 6, 6, 27, 0, 29, 29, 0, 2, 0]' : 0.174223}
{'[6, 6, 5, 0, 6, 6, 27, 0, 29, 29, 0, 2, 0]' : 0.174532}
{'[6, 6, 5, 0, 6, 6, 27, 0, 29, 29, 0, 2, 0]' : 0.174271}
{'[6, 6, 5, 0, 6, 6, 27, 0, 29, 29, 0, 2, 0]' : 0.174188}
{'[6, 6, 5, 0, 6, 6, 27, 0, 29, 29, 0, 2, 0]' : 0.1742}
{'[6, 6, 5, 0, 6, 6, 27, 0, 29, 29, 0, 2, 0]' : 0.174413}
{'[6, 6, 5, 0, 6, 6, 27, 0, 29, 29, 0, 2, 0]' : 0.174353}
{'[6, 6, 5, 0, 6, 6, 27, 0, 29, 29, 0, 2, 0]' : 0.174352}
{'[6, 6, 5, 0, 6, 6, 27, 0, 29, 29, 0, 2, 0]' : 0.174321}
{'[6, 6, 5, 0, 6, 6, 27, 0, 29, 29, 0, 2, 0]' : 0.174277}
{'[6, 6, 5, 0, 6, 6, 27, 0, 29, 29, 0, 2, 0]' : 0.174473}
{'[6, 6, 5, 0, 6, 6, 27, 0, 29, 29, 0, 2, 0]' : 0.174225}
{'[6, 6, 5, 0, 6, 6, 27, 0, 29, 29, 0, 2, 0]' : 0.174222}

out:
 ["{'[6, 6, 5, 0, 6, 6, 27, 0, 29, 29, 0, 2, 0]' : 0.208722}", "{'[6, 6, 5, 0, 6, 6, 27, 0, 29, 29, 0, 2, 0]' : 0.201358}", "{'[6, 6, 5, 0, 6, 6, 27, 0, 29, 29, 0, 2, 0]' : 0.174281}", "{'[6, 6, 5, 0, 6, 6, 27, 0, 29, 29, 0, 2, 0]' : 0.174209}", "{'[6, 6, 5, 0, 6, 6, 27, 0, 29, 29, 0, 2, 0]' : 0.174217}", "{'[6, 6, 5, 0, 6, 6, 27, 0, 29, 29, 0, 2, 0]' : 0.174218}", "{'[6, 6, 5, 0, 6, 6, 27, 0, 29, 29, 0, 2, 0]' : 0.174188}", "{'[6, 6, 5, 0, 6, 6, 27, 0, 29, 29, 0, 2, 0]' : 0.174556}", "{'[6, 6, 5, 0, 6, 6, 27, 0, 29, 29, 0, 2, 0]' : 0.174258}", "{'[6, 6, 5, 0, 6, 6, 27, 0, 29, 29, 0, 2, 0]' : 0.174285}", "{'[6, 6, 5, 0, 6, 6, 27, 0, 29, 29, 0, 2, 0]' : 0.174489}", "{'[6, 6, 5, 0, 6, 6, 27, 0, 29, 29, 0, 2, 0]' : 0.174195}", "{'[6, 6, 5, 0, 6, 6, 27, 0, 29, 29, 0, 2, 0]' : 0.174444}", "{'[6, 6, 5, 0, 6, 6, 27, 0, 29, 29, 0, 2, 0]' : 0.174262}", "{'[6, 6, 5, 0, 6, 6, 27, 0, 29, 29, 0, 2, 0]' : 0.174225}", "{'[6, 6, 5, 0, 6, 6, 27, 0, 29, 29, 0, 2, 0]' : 0.174208}", "{'[6, 6, 5, 0, 6, 6, 27, 0, 29, 29, 0, 2, 0]' : 0.174415}", "{'[6, 6, 5, 0, 6, 6, 27, 0, 29, 29, 0, 2, 0]' : 0.174223}", "{'[6, 6, 5, 0, 6, 6, 27, 0, 29, 29, 0, 2, 0]' : 0.174532}", "{'[6, 6, 5, 0, 6, 6, 27, 0, 29, 29, 0, 2, 0]' : 0.174271}", "{'[6, 6, 5, 0, 6, 6, 27, 0, 29, 29, 0, 2, 0]' : 0.174188}", "{'[6, 6, 5, 0, 6, 6, 27, 0, 29, 29, 0, 2, 0]' : 0.1742}", "{'[6, 6, 5, 0, 6, 6, 27, 0, 29, 29, 0, 2, 0]' : 0.174413}", "{'[6, 6, 5, 0, 6, 6, 27, 0, 29, 29, 0, 2, 0]' : 0.174353}", "{'[6, 6, 5, 0, 6, 6, 27, 0, 29, 29, 0, 2, 0]' : 0.174352}", "{'[6, 6, 5, 0, 6, 6, 27, 0, 29, 29, 0, 2, 0]' : 0.174321}", "{'[6, 6, 5, 0, 6, 6, 27, 0, 29, 29, 0, 2, 0]' : 0.174277}", "{'[6, 6, 5, 0, 6, 6, 27, 0, 29, 29, 0, 2, 0]' : 0.174473}", "{'[6, 6, 5, 0, 6, 6, 27, 0, 29, 29, 0, 2, 0]' : 0.174225}", "{'[6, 6, 5, 0, 6, 6, 27, 0, 29, 29, 0, 2, 0]' : 0.174222}"]
returning from 'run': {'[6, 6, 5, 0, 6, 6, 27, 0, 29, 29, 0, 2, 0]': ([0.208722, 0.201358, 0.174281, 0.174209, 0.174217, 0.174218, 0.174188, 0.174556, 0.174258, 0.174285, 0.174489, 0.174195, 0.174444, 0.174262, 0.174225, 0.174208, 0.174415, 0.174223, 0.174532, 0.174271, 0.174188, 0.1742, 0.174413, 0.174353, 0.174352, 0.174321, 0.174277, 0.174473, 0.174225, 0.174222], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 5, 0, 6, 6, 27, 0, 29, 29, 0, 2, 0]': ([0.208722, 0.201358, 0.174281, 0.174209, 0.174217, 0.174218, 0.174188, 0.174556, 0.174258, 0.174285, 0.174489, 0.174195, 0.174444, 0.174262, 0.174225, 0.174208, 0.174415, 0.174223, 0.174532, 0.174271, 0.174188, 0.1742, 0.174413, 0.174353, 0.174352, 0.174321, 0.174277, 0.174473, 0.174225, 0.174222], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		280
        Multiplications: 	84
        Divisions: 		0
        Logical: 		0
        Reads: 			576
        Writes: 		99
        Comparisons:		14
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest66.exe __orio_perftest66.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest66.exe  
Program Test Output: 
{'[6, 6, 6, 6, 6, 6, 26, 0, 2, 4, 0, 0, 2]' : 0.268422}
{'[6, 6, 6, 6, 6, 6, 26, 0, 2, 4, 0, 0, 2]' : 0.258369}
{'[6, 6, 6, 6, 6, 6, 26, 0, 2, 4, 0, 0, 2]' : 0.232992}
{'[6, 6, 6, 6, 6, 6, 26, 0, 2, 4, 0, 0, 2]' : 0.232966}
{'[6, 6, 6, 6, 6, 6, 26, 0, 2, 4, 0, 0, 2]' : 0.233005}
{'[6, 6, 6, 6, 6, 6, 26, 0, 2, 4, 0, 0, 2]' : 0.23154}
{'[6, 6, 6, 6, 6, 6, 26, 0, 2, 4, 0, 0, 2]' : 0.234702}
{'[6, 6, 6, 6, 6, 6, 26, 0, 2, 4, 0, 0, 2]' : 0.240382}
{'[6, 6, 6, 6, 6, 6, 26, 0, 2, 4, 0, 0, 2]' : 0.240387}
{'[6, 6, 6, 6, 6, 6, 26, 0, 2, 4, 0, 0, 2]' : 0.240377}
{'[6, 6, 6, 6, 6, 6, 26, 0, 2, 4, 0, 0, 2]' : 0.235275}
{'[6, 6, 6, 6, 6, 6, 26, 0, 2, 4, 0, 0, 2]' : 0.233067}
{'[6, 6, 6, 6, 6, 6, 26, 0, 2, 4, 0, 0, 2]' : 0.23488}
{'[6, 6, 6, 6, 6, 6, 26, 0, 2, 4, 0, 0, 2]' : 0.24037}
{'[6, 6, 6, 6, 6, 6, 26, 0, 2, 4, 0, 0, 2]' : 0.238368}
{'[6, 6, 6, 6, 6, 6, 26, 0, 2, 4, 0, 0, 2]' : 0.231044}
{'[6, 6, 6, 6, 6, 6, 26, 0, 2, 4, 0, 0, 2]' : 0.230326}
{'[6, 6, 6, 6, 6, 6, 26, 0, 2, 4, 0, 0, 2]' : 0.240359}
{'[6, 6, 6, 6, 6, 6, 26, 0, 2, 4, 0, 0, 2]' : 0.240402}
{'[6, 6, 6, 6, 6, 6, 26, 0, 2, 4, 0, 0, 2]' : 0.238014}
{'[6, 6, 6, 6, 6, 6, 26, 0, 2, 4, 0, 0, 2]' : 0.233216}
{'[6, 6, 6, 6, 6, 6, 26, 0, 2, 4, 0, 0, 2]' : 0.238939}
{'[6, 6, 6, 6, 6, 6, 26, 0, 2, 4, 0, 0, 2]' : 0.240549}
{'[6, 6, 6, 6, 6, 6, 26, 0, 2, 4, 0, 0, 2]' : 0.240371}
{'[6, 6, 6, 6, 6, 6, 26, 0, 2, 4, 0, 0, 2]' : 0.235448}
{'[6, 6, 6, 6, 6, 6, 26, 0, 2, 4, 0, 0, 2]' : 0.237504}
{'[6, 6, 6, 6, 6, 6, 26, 0, 2, 4, 0, 0, 2]' : 0.240356}
{'[6, 6, 6, 6, 6, 6, 26, 0, 2, 4, 0, 0, 2]' : 0.240387}
{'[6, 6, 6, 6, 6, 6, 26, 0, 2, 4, 0, 0, 2]' : 0.239866}
{'[6, 6, 6, 6, 6, 6, 26, 0, 2, 4, 0, 0, 2]' : 0.234166}

out:
 ["{'[6, 6, 6, 6, 6, 6, 26, 0, 2, 4, 0, 0, 2]' : 0.268422}", "{'[6, 6, 6, 6, 6, 6, 26, 0, 2, 4, 0, 0, 2]' : 0.258369}", "{'[6, 6, 6, 6, 6, 6, 26, 0, 2, 4, 0, 0, 2]' : 0.232992}", "{'[6, 6, 6, 6, 6, 6, 26, 0, 2, 4, 0, 0, 2]' : 0.232966}", "{'[6, 6, 6, 6, 6, 6, 26, 0, 2, 4, 0, 0, 2]' : 0.233005}", "{'[6, 6, 6, 6, 6, 6, 26, 0, 2, 4, 0, 0, 2]' : 0.23154}", "{'[6, 6, 6, 6, 6, 6, 26, 0, 2, 4, 0, 0, 2]' : 0.234702}", "{'[6, 6, 6, 6, 6, 6, 26, 0, 2, 4, 0, 0, 2]' : 0.240382}", "{'[6, 6, 6, 6, 6, 6, 26, 0, 2, 4, 0, 0, 2]' : 0.240387}", "{'[6, 6, 6, 6, 6, 6, 26, 0, 2, 4, 0, 0, 2]' : 0.240377}", "{'[6, 6, 6, 6, 6, 6, 26, 0, 2, 4, 0, 0, 2]' : 0.235275}", "{'[6, 6, 6, 6, 6, 6, 26, 0, 2, 4, 0, 0, 2]' : 0.233067}", "{'[6, 6, 6, 6, 6, 6, 26, 0, 2, 4, 0, 0, 2]' : 0.23488}", "{'[6, 6, 6, 6, 6, 6, 26, 0, 2, 4, 0, 0, 2]' : 0.24037}", "{'[6, 6, 6, 6, 6, 6, 26, 0, 2, 4, 0, 0, 2]' : 0.238368}", "{'[6, 6, 6, 6, 6, 6, 26, 0, 2, 4, 0, 0, 2]' : 0.231044}", "{'[6, 6, 6, 6, 6, 6, 26, 0, 2, 4, 0, 0, 2]' : 0.230326}", "{'[6, 6, 6, 6, 6, 6, 26, 0, 2, 4, 0, 0, 2]' : 0.240359}", "{'[6, 6, 6, 6, 6, 6, 26, 0, 2, 4, 0, 0, 2]' : 0.240402}", "{'[6, 6, 6, 6, 6, 6, 26, 0, 2, 4, 0, 0, 2]' : 0.238014}", "{'[6, 6, 6, 6, 6, 6, 26, 0, 2, 4, 0, 0, 2]' : 0.233216}", "{'[6, 6, 6, 6, 6, 6, 26, 0, 2, 4, 0, 0, 2]' : 0.238939}", "{'[6, 6, 6, 6, 6, 6, 26, 0, 2, 4, 0, 0, 2]' : 0.240549}", "{'[6, 6, 6, 6, 6, 6, 26, 0, 2, 4, 0, 0, 2]' : 0.240371}", "{'[6, 6, 6, 6, 6, 6, 26, 0, 2, 4, 0, 0, 2]' : 0.235448}", "{'[6, 6, 6, 6, 6, 6, 26, 0, 2, 4, 0, 0, 2]' : 0.237504}", "{'[6, 6, 6, 6, 6, 6, 26, 0, 2, 4, 0, 0, 2]' : 0.240356}", "{'[6, 6, 6, 6, 6, 6, 26, 0, 2, 4, 0, 0, 2]' : 0.240387}", "{'[6, 6, 6, 6, 6, 6, 26, 0, 2, 4, 0, 0, 2]' : 0.239866}", "{'[6, 6, 6, 6, 6, 6, 26, 0, 2, 4, 0, 0, 2]' : 0.234166}"]
returning from 'run': {'[6, 6, 6, 6, 6, 6, 26, 0, 2, 4, 0, 0, 2]': ([0.268422, 0.258369, 0.232992, 0.232966, 0.233005, 0.23154, 0.234702, 0.240382, 0.240387, 0.240377, 0.235275, 0.233067, 0.23488, 0.24037, 0.238368, 0.231044, 0.230326, 0.240359, 0.240402, 0.238014, 0.233216, 0.238939, 0.240549, 0.240371, 0.235448, 0.237504, 0.240356, 0.240387, 0.239866, 0.234166], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 6, 6, 6, 6, 26, 0, 2, 4, 0, 0, 2]': ([0.268422, 0.258369, 0.232992, 0.232966, 0.233005, 0.23154, 0.234702, 0.240382, 0.240387, 0.240377, 0.235275, 0.233067, 0.23488, 0.24037, 0.238368, 0.231044, 0.230326, 0.240359, 0.240402, 0.238014, 0.233216, 0.238939, 0.240549, 0.240371, 0.235448, 0.237504, 0.240356, 0.240387, 0.239866, 0.234166], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	78
        Max loop nest depth: 	6
        Additions: 		13178
        Multiplications: 	3782
        Divisions: 		0
        Logical: 		0
        Reads: 			19644
        Writes: 		2083
        Comparisons:		78
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest67.exe __orio_perftest67.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest67.exe  
Program Test Output: 
{'[6, 6, 0, 6, 6, 6, 3, 29, 26, 0, 0, 2, 0]' : 0.271878}
{'[6, 6, 0, 6, 6, 6, 3, 29, 26, 0, 0, 2, 0]' : 0.276224}
{'[6, 6, 0, 6, 6, 6, 3, 29, 26, 0, 0, 2, 0]' : 0.261612}
{'[6, 6, 0, 6, 6, 6, 3, 29, 26, 0, 0, 2, 0]' : 0.252266}
{'[6, 6, 0, 6, 6, 6, 3, 29, 26, 0, 0, 2, 0]' : 0.252528}
{'[6, 6, 0, 6, 6, 6, 3, 29, 26, 0, 0, 2, 0]' : 0.24961}
{'[6, 6, 0, 6, 6, 6, 3, 29, 26, 0, 0, 2, 0]' : 0.257262}
{'[6, 6, 0, 6, 6, 6, 3, 29, 26, 0, 0, 2, 0]' : 0.250751}
{'[6, 6, 0, 6, 6, 6, 3, 29, 26, 0, 0, 2, 0]' : 0.246297}
{'[6, 6, 0, 6, 6, 6, 3, 29, 26, 0, 0, 2, 0]' : 0.252375}
{'[6, 6, 0, 6, 6, 6, 3, 29, 26, 0, 0, 2, 0]' : 0.255849}
{'[6, 6, 0, 6, 6, 6, 3, 29, 26, 0, 0, 2, 0]' : 0.255712}
{'[6, 6, 0, 6, 6, 6, 3, 29, 26, 0, 0, 2, 0]' : 0.251055}
{'[6, 6, 0, 6, 6, 6, 3, 29, 26, 0, 0, 2, 0]' : 0.250691}
{'[6, 6, 0, 6, 6, 6, 3, 29, 26, 0, 0, 2, 0]' : 0.251114}
{'[6, 6, 0, 6, 6, 6, 3, 29, 26, 0, 0, 2, 0]' : 0.250078}
{'[6, 6, 0, 6, 6, 6, 3, 29, 26, 0, 0, 2, 0]' : 0.2526}
{'[6, 6, 0, 6, 6, 6, 3, 29, 26, 0, 0, 2, 0]' : 0.251699}
{'[6, 6, 0, 6, 6, 6, 3, 29, 26, 0, 0, 2, 0]' : 0.254941}
{'[6, 6, 0, 6, 6, 6, 3, 29, 26, 0, 0, 2, 0]' : 0.249706}
{'[6, 6, 0, 6, 6, 6, 3, 29, 26, 0, 0, 2, 0]' : 0.251847}
{'[6, 6, 0, 6, 6, 6, 3, 29, 26, 0, 0, 2, 0]' : 0.250601}
{'[6, 6, 0, 6, 6, 6, 3, 29, 26, 0, 0, 2, 0]' : 0.255423}
{'[6, 6, 0, 6, 6, 6, 3, 29, 26, 0, 0, 2, 0]' : 0.24914}
{'[6, 6, 0, 6, 6, 6, 3, 29, 26, 0, 0, 2, 0]' : 0.249918}
{'[6, 6, 0, 6, 6, 6, 3, 29, 26, 0, 0, 2, 0]' : 0.250135}
{'[6, 6, 0, 6, 6, 6, 3, 29, 26, 0, 0, 2, 0]' : 0.254266}
{'[6, 6, 0, 6, 6, 6, 3, 29, 26, 0, 0, 2, 0]' : 0.253395}
{'[6, 6, 0, 6, 6, 6, 3, 29, 26, 0, 0, 2, 0]' : 0.25703}
{'[6, 6, 0, 6, 6, 6, 3, 29, 26, 0, 0, 2, 0]' : 0.251327}

out:
 ["{'[6, 6, 0, 6, 6, 6, 3, 29, 26, 0, 0, 2, 0]' : 0.271878}", "{'[6, 6, 0, 6, 6, 6, 3, 29, 26, 0, 0, 2, 0]' : 0.276224}", "{'[6, 6, 0, 6, 6, 6, 3, 29, 26, 0, 0, 2, 0]' : 0.261612}", "{'[6, 6, 0, 6, 6, 6, 3, 29, 26, 0, 0, 2, 0]' : 0.252266}", "{'[6, 6, 0, 6, 6, 6, 3, 29, 26, 0, 0, 2, 0]' : 0.252528}", "{'[6, 6, 0, 6, 6, 6, 3, 29, 26, 0, 0, 2, 0]' : 0.24961}", "{'[6, 6, 0, 6, 6, 6, 3, 29, 26, 0, 0, 2, 0]' : 0.257262}", "{'[6, 6, 0, 6, 6, 6, 3, 29, 26, 0, 0, 2, 0]' : 0.250751}", "{'[6, 6, 0, 6, 6, 6, 3, 29, 26, 0, 0, 2, 0]' : 0.246297}", "{'[6, 6, 0, 6, 6, 6, 3, 29, 26, 0, 0, 2, 0]' : 0.252375}", "{'[6, 6, 0, 6, 6, 6, 3, 29, 26, 0, 0, 2, 0]' : 0.255849}", "{'[6, 6, 0, 6, 6, 6, 3, 29, 26, 0, 0, 2, 0]' : 0.255712}", "{'[6, 6, 0, 6, 6, 6, 3, 29, 26, 0, 0, 2, 0]' : 0.251055}", "{'[6, 6, 0, 6, 6, 6, 3, 29, 26, 0, 0, 2, 0]' : 0.250691}", "{'[6, 6, 0, 6, 6, 6, 3, 29, 26, 0, 0, 2, 0]' : 0.251114}", "{'[6, 6, 0, 6, 6, 6, 3, 29, 26, 0, 0, 2, 0]' : 0.250078}", "{'[6, 6, 0, 6, 6, 6, 3, 29, 26, 0, 0, 2, 0]' : 0.2526}", "{'[6, 6, 0, 6, 6, 6, 3, 29, 26, 0, 0, 2, 0]' : 0.251699}", "{'[6, 6, 0, 6, 6, 6, 3, 29, 26, 0, 0, 2, 0]' : 0.254941}", "{'[6, 6, 0, 6, 6, 6, 3, 29, 26, 0, 0, 2, 0]' : 0.249706}", "{'[6, 6, 0, 6, 6, 6, 3, 29, 26, 0, 0, 2, 0]' : 0.251847}", "{'[6, 6, 0, 6, 6, 6, 3, 29, 26, 0, 0, 2, 0]' : 0.250601}", "{'[6, 6, 0, 6, 6, 6, 3, 29, 26, 0, 0, 2, 0]' : 0.255423}", "{'[6, 6, 0, 6, 6, 6, 3, 29, 26, 0, 0, 2, 0]' : 0.24914}", "{'[6, 6, 0, 6, 6, 6, 3, 29, 26, 0, 0, 2, 0]' : 0.249918}", "{'[6, 6, 0, 6, 6, 6, 3, 29, 26, 0, 0, 2, 0]' : 0.250135}", "{'[6, 6, 0, 6, 6, 6, 3, 29, 26, 0, 0, 2, 0]' : 0.254266}", "{'[6, 6, 0, 6, 6, 6, 3, 29, 26, 0, 0, 2, 0]' : 0.253395}", "{'[6, 6, 0, 6, 6, 6, 3, 29, 26, 0, 0, 2, 0]' : 0.25703}", "{'[6, 6, 0, 6, 6, 6, 3, 29, 26, 0, 0, 2, 0]' : 0.251327}"]
returning from 'run': {'[6, 6, 0, 6, 6, 6, 3, 29, 26, 0, 0, 2, 0]': ([0.271878, 0.276224, 0.261612, 0.252266, 0.252528, 0.24961, 0.257262, 0.250751, 0.246297, 0.252375, 0.255849, 0.255712, 0.251055, 0.250691, 0.251114, 0.250078, 0.2526, 0.251699, 0.254941, 0.249706, 0.251847, 0.250601, 0.255423, 0.24914, 0.249918, 0.250135, 0.254266, 0.253395, 0.25703, 0.251327], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 0, 6, 6, 6, 3, 29, 26, 0, 0, 2, 0]': ([0.271878, 0.276224, 0.261612, 0.252266, 0.252528, 0.24961, 0.257262, 0.250751, 0.246297, 0.252375, 0.255849, 0.255712, 0.251055, 0.250691, 0.251114, 0.250078, 0.2526, 0.251699, 0.254941, 0.249706, 0.251847, 0.250601, 0.255423, 0.24914, 0.249918, 0.250135, 0.254266, 0.253395, 0.25703, 0.251327], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	5
        Additions: 		6432
        Multiplications: 	1920
        Divisions: 		0
        Logical: 		0
        Reads: 			9799
        Writes: 		1031
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest68.exe __orio_perftest68.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest68.exe  
Program Test Output: 
{'[6, 6, 4, 0, 6, 6, 1, 28, 29, 0, 0, 0, 0]' : 0.206653}
{'[6, 6, 4, 0, 6, 6, 1, 28, 29, 0, 0, 0, 0]' : 0.204696}
{'[6, 6, 4, 0, 6, 6, 1, 28, 29, 0, 0, 0, 0]' : 0.17739}
{'[6, 6, 4, 0, 6, 6, 1, 28, 29, 0, 0, 0, 0]' : 0.181908}
{'[6, 6, 4, 0, 6, 6, 1, 28, 29, 0, 0, 0, 0]' : 0.182742}
{'[6, 6, 4, 0, 6, 6, 1, 28, 29, 0, 0, 0, 0]' : 0.18076}
{'[6, 6, 4, 0, 6, 6, 1, 28, 29, 0, 0, 0, 0]' : 0.180012}
{'[6, 6, 4, 0, 6, 6, 1, 28, 29, 0, 0, 0, 0]' : 0.179629}
{'[6, 6, 4, 0, 6, 6, 1, 28, 29, 0, 0, 0, 0]' : 0.18092}
{'[6, 6, 4, 0, 6, 6, 1, 28, 29, 0, 0, 0, 0]' : 0.183722}
{'[6, 6, 4, 0, 6, 6, 1, 28, 29, 0, 0, 0, 0]' : 0.179438}
{'[6, 6, 4, 0, 6, 6, 1, 28, 29, 0, 0, 0, 0]' : 0.180711}
{'[6, 6, 4, 0, 6, 6, 1, 28, 29, 0, 0, 0, 0]' : 0.18292}
{'[6, 6, 4, 0, 6, 6, 1, 28, 29, 0, 0, 0, 0]' : 0.179137}
{'[6, 6, 4, 0, 6, 6, 1, 28, 29, 0, 0, 0, 0]' : 0.186988}
{'[6, 6, 4, 0, 6, 6, 1, 28, 29, 0, 0, 0, 0]' : 0.178519}
{'[6, 6, 4, 0, 6, 6, 1, 28, 29, 0, 0, 0, 0]' : 0.179561}
{'[6, 6, 4, 0, 6, 6, 1, 28, 29, 0, 0, 0, 0]' : 0.179519}
{'[6, 6, 4, 0, 6, 6, 1, 28, 29, 0, 0, 0, 0]' : 0.178206}
{'[6, 6, 4, 0, 6, 6, 1, 28, 29, 0, 0, 0, 0]' : 0.180168}
{'[6, 6, 4, 0, 6, 6, 1, 28, 29, 0, 0, 0, 0]' : 0.17637}
{'[6, 6, 4, 0, 6, 6, 1, 28, 29, 0, 0, 0, 0]' : 0.181133}
{'[6, 6, 4, 0, 6, 6, 1, 28, 29, 0, 0, 0, 0]' : 0.177863}
{'[6, 6, 4, 0, 6, 6, 1, 28, 29, 0, 0, 0, 0]' : 0.181569}
{'[6, 6, 4, 0, 6, 6, 1, 28, 29, 0, 0, 0, 0]' : 0.183194}
{'[6, 6, 4, 0, 6, 6, 1, 28, 29, 0, 0, 0, 0]' : 0.180593}
{'[6, 6, 4, 0, 6, 6, 1, 28, 29, 0, 0, 0, 0]' : 0.178443}
{'[6, 6, 4, 0, 6, 6, 1, 28, 29, 0, 0, 0, 0]' : 0.182406}
{'[6, 6, 4, 0, 6, 6, 1, 28, 29, 0, 0, 0, 0]' : 0.178696}
{'[6, 6, 4, 0, 6, 6, 1, 28, 29, 0, 0, 0, 0]' : 0.179901}

out:
 ["{'[6, 6, 4, 0, 6, 6, 1, 28, 29, 0, 0, 0, 0]' : 0.206653}", "{'[6, 6, 4, 0, 6, 6, 1, 28, 29, 0, 0, 0, 0]' : 0.204696}", "{'[6, 6, 4, 0, 6, 6, 1, 28, 29, 0, 0, 0, 0]' : 0.17739}", "{'[6, 6, 4, 0, 6, 6, 1, 28, 29, 0, 0, 0, 0]' : 0.181908}", "{'[6, 6, 4, 0, 6, 6, 1, 28, 29, 0, 0, 0, 0]' : 0.182742}", "{'[6, 6, 4, 0, 6, 6, 1, 28, 29, 0, 0, 0, 0]' : 0.18076}", "{'[6, 6, 4, 0, 6, 6, 1, 28, 29, 0, 0, 0, 0]' : 0.180012}", "{'[6, 6, 4, 0, 6, 6, 1, 28, 29, 0, 0, 0, 0]' : 0.179629}", "{'[6, 6, 4, 0, 6, 6, 1, 28, 29, 0, 0, 0, 0]' : 0.18092}", "{'[6, 6, 4, 0, 6, 6, 1, 28, 29, 0, 0, 0, 0]' : 0.183722}", "{'[6, 6, 4, 0, 6, 6, 1, 28, 29, 0, 0, 0, 0]' : 0.179438}", "{'[6, 6, 4, 0, 6, 6, 1, 28, 29, 0, 0, 0, 0]' : 0.180711}", "{'[6, 6, 4, 0, 6, 6, 1, 28, 29, 0, 0, 0, 0]' : 0.18292}", "{'[6, 6, 4, 0, 6, 6, 1, 28, 29, 0, 0, 0, 0]' : 0.179137}", "{'[6, 6, 4, 0, 6, 6, 1, 28, 29, 0, 0, 0, 0]' : 0.186988}", "{'[6, 6, 4, 0, 6, 6, 1, 28, 29, 0, 0, 0, 0]' : 0.178519}", "{'[6, 6, 4, 0, 6, 6, 1, 28, 29, 0, 0, 0, 0]' : 0.179561}", "{'[6, 6, 4, 0, 6, 6, 1, 28, 29, 0, 0, 0, 0]' : 0.179519}", "{'[6, 6, 4, 0, 6, 6, 1, 28, 29, 0, 0, 0, 0]' : 0.178206}", "{'[6, 6, 4, 0, 6, 6, 1, 28, 29, 0, 0, 0, 0]' : 0.180168}", "{'[6, 6, 4, 0, 6, 6, 1, 28, 29, 0, 0, 0, 0]' : 0.17637}", "{'[6, 6, 4, 0, 6, 6, 1, 28, 29, 0, 0, 0, 0]' : 0.181133}", "{'[6, 6, 4, 0, 6, 6, 1, 28, 29, 0, 0, 0, 0]' : 0.177863}", "{'[6, 6, 4, 0, 6, 6, 1, 28, 29, 0, 0, 0, 0]' : 0.181569}", "{'[6, 6, 4, 0, 6, 6, 1, 28, 29, 0, 0, 0, 0]' : 0.183194}", "{'[6, 6, 4, 0, 6, 6, 1, 28, 29, 0, 0, 0, 0]' : 0.180593}", "{'[6, 6, 4, 0, 6, 6, 1, 28, 29, 0, 0, 0, 0]' : 0.178443}", "{'[6, 6, 4, 0, 6, 6, 1, 28, 29, 0, 0, 0, 0]' : 0.182406}", "{'[6, 6, 4, 0, 6, 6, 1, 28, 29, 0, 0, 0, 0]' : 0.178696}", "{'[6, 6, 4, 0, 6, 6, 1, 28, 29, 0, 0, 0, 0]' : 0.179901}"]
returning from 'run': {'[6, 6, 4, 0, 6, 6, 1, 28, 29, 0, 0, 0, 0]': ([0.206653, 0.204696, 0.17739, 0.181908, 0.182742, 0.18076, 0.180012, 0.179629, 0.18092, 0.183722, 0.179438, 0.180711, 0.18292, 0.179137, 0.186988, 0.178519, 0.179561, 0.179519, 0.178206, 0.180168, 0.17637, 0.181133, 0.177863, 0.181569, 0.183194, 0.180593, 0.178443, 0.182406, 0.178696, 0.179901], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 4, 0, 6, 6, 1, 28, 29, 0, 0, 0, 0]': ([0.206653, 0.204696, 0.17739, 0.181908, 0.182742, 0.18076, 0.180012, 0.179629, 0.18092, 0.183722, 0.179438, 0.180711, 0.18292, 0.179137, 0.186988, 0.178519, 0.179561, 0.179519, 0.178206, 0.180168, 0.17637, 0.181133, 0.177863, 0.181569, 0.183194, 0.180593, 0.178443, 0.182406, 0.178696, 0.179901], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	5
        Additions: 		1190
        Multiplications: 	408
        Divisions: 		0
        Logical: 		0
        Reads: 			2308
        Writes: 		302
        Comparisons:		24
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest69.exe __orio_perftest69.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest69.exe  
Program Test Output: 
{'[6, 6, 0, 0, 6, 6, 28, 17, 1, 0, 2, 0, 0]' : 0.208082}
{'[6, 6, 0, 0, 6, 6, 28, 17, 1, 0, 2, 0, 0]' : 0.208071}
{'[6, 6, 0, 0, 6, 6, 28, 17, 1, 0, 2, 0, 0]' : 0.20911}
{'[6, 6, 0, 0, 6, 6, 28, 17, 1, 0, 2, 0, 0]' : 0.207518}
{'[6, 6, 0, 0, 6, 6, 28, 17, 1, 0, 2, 0, 0]' : 0.208688}
{'[6, 6, 0, 0, 6, 6, 28, 17, 1, 0, 2, 0, 0]' : 0.208149}
{'[6, 6, 0, 0, 6, 6, 28, 17, 1, 0, 2, 0, 0]' : 0.207765}
{'[6, 6, 0, 0, 6, 6, 28, 17, 1, 0, 2, 0, 0]' : 0.208551}
{'[6, 6, 0, 0, 6, 6, 28, 17, 1, 0, 2, 0, 0]' : 0.208764}
{'[6, 6, 0, 0, 6, 6, 28, 17, 1, 0, 2, 0, 0]' : 0.210481}
{'[6, 6, 0, 0, 6, 6, 28, 17, 1, 0, 2, 0, 0]' : 0.209243}
{'[6, 6, 0, 0, 6, 6, 28, 17, 1, 0, 2, 0, 0]' : 0.207983}
{'[6, 6, 0, 0, 6, 6, 28, 17, 1, 0, 2, 0, 0]' : 0.207675}
{'[6, 6, 0, 0, 6, 6, 28, 17, 1, 0, 2, 0, 0]' : 0.208477}
{'[6, 6, 0, 0, 6, 6, 28, 17, 1, 0, 2, 0, 0]' : 0.209093}
{'[6, 6, 0, 0, 6, 6, 28, 17, 1, 0, 2, 0, 0]' : 0.208159}
{'[6, 6, 0, 0, 6, 6, 28, 17, 1, 0, 2, 0, 0]' : 0.209455}
{'[6, 6, 0, 0, 6, 6, 28, 17, 1, 0, 2, 0, 0]' : 0.205833}
{'[6, 6, 0, 0, 6, 6, 28, 17, 1, 0, 2, 0, 0]' : 0.204928}
{'[6, 6, 0, 0, 6, 6, 28, 17, 1, 0, 2, 0, 0]' : 0.206339}
{'[6, 6, 0, 0, 6, 6, 28, 17, 1, 0, 2, 0, 0]' : 0.207898}
{'[6, 6, 0, 0, 6, 6, 28, 17, 1, 0, 2, 0, 0]' : 0.208447}
{'[6, 6, 0, 0, 6, 6, 28, 17, 1, 0, 2, 0, 0]' : 0.208202}
{'[6, 6, 0, 0, 6, 6, 28, 17, 1, 0, 2, 0, 0]' : 0.207795}
{'[6, 6, 0, 0, 6, 6, 28, 17, 1, 0, 2, 0, 0]' : 0.208776}
{'[6, 6, 0, 0, 6, 6, 28, 17, 1, 0, 2, 0, 0]' : 0.209987}
{'[6, 6, 0, 0, 6, 6, 28, 17, 1, 0, 2, 0, 0]' : 0.210699}
{'[6, 6, 0, 0, 6, 6, 28, 17, 1, 0, 2, 0, 0]' : 0.208744}
{'[6, 6, 0, 0, 6, 6, 28, 17, 1, 0, 2, 0, 0]' : 0.208729}
{'[6, 6, 0, 0, 6, 6, 28, 17, 1, 0, 2, 0, 0]' : 0.208091}

out:
 ["{'[6, 6, 0, 0, 6, 6, 28, 17, 1, 0, 2, 0, 0]' : 0.208082}", "{'[6, 6, 0, 0, 6, 6, 28, 17, 1, 0, 2, 0, 0]' : 0.208071}", "{'[6, 6, 0, 0, 6, 6, 28, 17, 1, 0, 2, 0, 0]' : 0.20911}", "{'[6, 6, 0, 0, 6, 6, 28, 17, 1, 0, 2, 0, 0]' : 0.207518}", "{'[6, 6, 0, 0, 6, 6, 28, 17, 1, 0, 2, 0, 0]' : 0.208688}", "{'[6, 6, 0, 0, 6, 6, 28, 17, 1, 0, 2, 0, 0]' : 0.208149}", "{'[6, 6, 0, 0, 6, 6, 28, 17, 1, 0, 2, 0, 0]' : 0.207765}", "{'[6, 6, 0, 0, 6, 6, 28, 17, 1, 0, 2, 0, 0]' : 0.208551}", "{'[6, 6, 0, 0, 6, 6, 28, 17, 1, 0, 2, 0, 0]' : 0.208764}", "{'[6, 6, 0, 0, 6, 6, 28, 17, 1, 0, 2, 0, 0]' : 0.210481}", "{'[6, 6, 0, 0, 6, 6, 28, 17, 1, 0, 2, 0, 0]' : 0.209243}", "{'[6, 6, 0, 0, 6, 6, 28, 17, 1, 0, 2, 0, 0]' : 0.207983}", "{'[6, 6, 0, 0, 6, 6, 28, 17, 1, 0, 2, 0, 0]' : 0.207675}", "{'[6, 6, 0, 0, 6, 6, 28, 17, 1, 0, 2, 0, 0]' : 0.208477}", "{'[6, 6, 0, 0, 6, 6, 28, 17, 1, 0, 2, 0, 0]' : 0.209093}", "{'[6, 6, 0, 0, 6, 6, 28, 17, 1, 0, 2, 0, 0]' : 0.208159}", "{'[6, 6, 0, 0, 6, 6, 28, 17, 1, 0, 2, 0, 0]' : 0.209455}", "{'[6, 6, 0, 0, 6, 6, 28, 17, 1, 0, 2, 0, 0]' : 0.205833}", "{'[6, 6, 0, 0, 6, 6, 28, 17, 1, 0, 2, 0, 0]' : 0.204928}", "{'[6, 6, 0, 0, 6, 6, 28, 17, 1, 0, 2, 0, 0]' : 0.206339}", "{'[6, 6, 0, 0, 6, 6, 28, 17, 1, 0, 2, 0, 0]' : 0.207898}", "{'[6, 6, 0, 0, 6, 6, 28, 17, 1, 0, 2, 0, 0]' : 0.208447}", "{'[6, 6, 0, 0, 6, 6, 28, 17, 1, 0, 2, 0, 0]' : 0.208202}", "{'[6, 6, 0, 0, 6, 6, 28, 17, 1, 0, 2, 0, 0]' : 0.207795}", "{'[6, 6, 0, 0, 6, 6, 28, 17, 1, 0, 2, 0, 0]' : 0.208776}", "{'[6, 6, 0, 0, 6, 6, 28, 17, 1, 0, 2, 0, 0]' : 0.209987}", "{'[6, 6, 0, 0, 6, 6, 28, 17, 1, 0, 2, 0, 0]' : 0.210699}", "{'[6, 6, 0, 0, 6, 6, 28, 17, 1, 0, 2, 0, 0]' : 0.208744}", "{'[6, 6, 0, 0, 6, 6, 28, 17, 1, 0, 2, 0, 0]' : 0.208729}", "{'[6, 6, 0, 0, 6, 6, 28, 17, 1, 0, 2, 0, 0]' : 0.208091}"]
returning from 'run': {'[6, 6, 0, 0, 6, 6, 28, 17, 1, 0, 2, 0, 0]': ([0.208082, 0.208071, 0.20911, 0.207518, 0.208688, 0.208149, 0.207765, 0.208551, 0.208764, 0.210481, 0.209243, 0.207983, 0.207675, 0.208477, 0.209093, 0.208159, 0.209455, 0.205833, 0.204928, 0.206339, 0.207898, 0.208447, 0.208202, 0.207795, 0.208776, 0.209987, 0.210699, 0.208744, 0.208729, 0.208091], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 0, 0, 6, 6, 28, 17, 1, 0, 2, 0, 0]': ([0.208082, 0.208071, 0.20911, 0.207518, 0.208688, 0.208149, 0.207765, 0.208551, 0.208764, 0.210481, 0.209243, 0.207983, 0.207675, 0.208477, 0.209093, 0.208159, 0.209455, 0.205833, 0.204928, 0.206339, 0.207898, 0.208447, 0.208202, 0.207795, 0.208776, 0.209987, 0.210699, 0.208744, 0.208729, 0.208091], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		336
        Multiplications: 	118
        Divisions: 		0
        Logical: 		0
        Reads: 			736
        Writes: 		114
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest70.exe __orio_perftest70.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest70.exe  
Program Test Output: 
{'[6, 6, 2, 0, 6, 6, 28, 0, 29, 26, 0, 0, 0]' : 0.230548}
{'[6, 6, 2, 0, 6, 6, 28, 0, 29, 26, 0, 0, 0]' : 0.230514}
{'[6, 6, 2, 0, 6, 6, 28, 0, 29, 26, 0, 0, 0]' : 0.216031}
{'[6, 6, 2, 0, 6, 6, 28, 0, 29, 26, 0, 0, 0]' : 0.204998}
{'[6, 6, 2, 0, 6, 6, 28, 0, 29, 26, 0, 0, 0]' : 0.203264}
{'[6, 6, 2, 0, 6, 6, 28, 0, 29, 26, 0, 0, 0]' : 0.199467}
{'[6, 6, 2, 0, 6, 6, 28, 0, 29, 26, 0, 0, 0]' : 0.203425}
{'[6, 6, 2, 0, 6, 6, 28, 0, 29, 26, 0, 0, 0]' : 0.204951}
{'[6, 6, 2, 0, 6, 6, 28, 0, 29, 26, 0, 0, 0]' : 0.205193}
{'[6, 6, 2, 0, 6, 6, 28, 0, 29, 26, 0, 0, 0]' : 0.204967}
{'[6, 6, 2, 0, 6, 6, 28, 0, 29, 26, 0, 0, 0]' : 0.201705}
{'[6, 6, 2, 0, 6, 6, 28, 0, 29, 26, 0, 0, 0]' : 0.204003}
{'[6, 6, 2, 0, 6, 6, 28, 0, 29, 26, 0, 0, 0]' : 0.204967}
{'[6, 6, 2, 0, 6, 6, 28, 0, 29, 26, 0, 0, 0]' : 0.205028}
{'[6, 6, 2, 0, 6, 6, 28, 0, 29, 26, 0, 0, 0]' : 0.204965}
{'[6, 6, 2, 0, 6, 6, 28, 0, 29, 26, 0, 0, 0]' : 0.205016}
{'[6, 6, 2, 0, 6, 6, 28, 0, 29, 26, 0, 0, 0]' : 0.205046}
{'[6, 6, 2, 0, 6, 6, 28, 0, 29, 26, 0, 0, 0]' : 0.204997}
{'[6, 6, 2, 0, 6, 6, 28, 0, 29, 26, 0, 0, 0]' : 0.205213}
{'[6, 6, 2, 0, 6, 6, 28, 0, 29, 26, 0, 0, 0]' : 0.205005}
{'[6, 6, 2, 0, 6, 6, 28, 0, 29, 26, 0, 0, 0]' : 0.205028}
{'[6, 6, 2, 0, 6, 6, 28, 0, 29, 26, 0, 0, 0]' : 0.204958}
{'[6, 6, 2, 0, 6, 6, 28, 0, 29, 26, 0, 0, 0]' : 0.204974}
{'[6, 6, 2, 0, 6, 6, 28, 0, 29, 26, 0, 0, 0]' : 0.202394}
{'[6, 6, 2, 0, 6, 6, 28, 0, 29, 26, 0, 0, 0]' : 0.199524}
{'[6, 6, 2, 0, 6, 6, 28, 0, 29, 26, 0, 0, 0]' : 0.200137}
{'[6, 6, 2, 0, 6, 6, 28, 0, 29, 26, 0, 0, 0]' : 0.204978}
{'[6, 6, 2, 0, 6, 6, 28, 0, 29, 26, 0, 0, 0]' : 0.201074}
{'[6, 6, 2, 0, 6, 6, 28, 0, 29, 26, 0, 0, 0]' : 0.203188}
{'[6, 6, 2, 0, 6, 6, 28, 0, 29, 26, 0, 0, 0]' : 0.204955}

out:
 ["{'[6, 6, 2, 0, 6, 6, 28, 0, 29, 26, 0, 0, 0]' : 0.230548}", "{'[6, 6, 2, 0, 6, 6, 28, 0, 29, 26, 0, 0, 0]' : 0.230514}", "{'[6, 6, 2, 0, 6, 6, 28, 0, 29, 26, 0, 0, 0]' : 0.216031}", "{'[6, 6, 2, 0, 6, 6, 28, 0, 29, 26, 0, 0, 0]' : 0.204998}", "{'[6, 6, 2, 0, 6, 6, 28, 0, 29, 26, 0, 0, 0]' : 0.203264}", "{'[6, 6, 2, 0, 6, 6, 28, 0, 29, 26, 0, 0, 0]' : 0.199467}", "{'[6, 6, 2, 0, 6, 6, 28, 0, 29, 26, 0, 0, 0]' : 0.203425}", "{'[6, 6, 2, 0, 6, 6, 28, 0, 29, 26, 0, 0, 0]' : 0.204951}", "{'[6, 6, 2, 0, 6, 6, 28, 0, 29, 26, 0, 0, 0]' : 0.205193}", "{'[6, 6, 2, 0, 6, 6, 28, 0, 29, 26, 0, 0, 0]' : 0.204967}", "{'[6, 6, 2, 0, 6, 6, 28, 0, 29, 26, 0, 0, 0]' : 0.201705}", "{'[6, 6, 2, 0, 6, 6, 28, 0, 29, 26, 0, 0, 0]' : 0.204003}", "{'[6, 6, 2, 0, 6, 6, 28, 0, 29, 26, 0, 0, 0]' : 0.204967}", "{'[6, 6, 2, 0, 6, 6, 28, 0, 29, 26, 0, 0, 0]' : 0.205028}", "{'[6, 6, 2, 0, 6, 6, 28, 0, 29, 26, 0, 0, 0]' : 0.204965}", "{'[6, 6, 2, 0, 6, 6, 28, 0, 29, 26, 0, 0, 0]' : 0.205016}", "{'[6, 6, 2, 0, 6, 6, 28, 0, 29, 26, 0, 0, 0]' : 0.205046}", "{'[6, 6, 2, 0, 6, 6, 28, 0, 29, 26, 0, 0, 0]' : 0.204997}", "{'[6, 6, 2, 0, 6, 6, 28, 0, 29, 26, 0, 0, 0]' : 0.205213}", "{'[6, 6, 2, 0, 6, 6, 28, 0, 29, 26, 0, 0, 0]' : 0.205005}", "{'[6, 6, 2, 0, 6, 6, 28, 0, 29, 26, 0, 0, 0]' : 0.205028}", "{'[6, 6, 2, 0, 6, 6, 28, 0, 29, 26, 0, 0, 0]' : 0.204958}", "{'[6, 6, 2, 0, 6, 6, 28, 0, 29, 26, 0, 0, 0]' : 0.204974}", "{'[6, 6, 2, 0, 6, 6, 28, 0, 29, 26, 0, 0, 0]' : 0.202394}", "{'[6, 6, 2, 0, 6, 6, 28, 0, 29, 26, 0, 0, 0]' : 0.199524}", "{'[6, 6, 2, 0, 6, 6, 28, 0, 29, 26, 0, 0, 0]' : 0.200137}", "{'[6, 6, 2, 0, 6, 6, 28, 0, 29, 26, 0, 0, 0]' : 0.204978}", "{'[6, 6, 2, 0, 6, 6, 28, 0, 29, 26, 0, 0, 0]' : 0.201074}", "{'[6, 6, 2, 0, 6, 6, 28, 0, 29, 26, 0, 0, 0]' : 0.203188}", "{'[6, 6, 2, 0, 6, 6, 28, 0, 29, 26, 0, 0, 0]' : 0.204955}"]
returning from 'run': {'[6, 6, 2, 0, 6, 6, 28, 0, 29, 26, 0, 0, 0]': ([0.230548, 0.230514, 0.216031, 0.204998, 0.203264, 0.199467, 0.203425, 0.204951, 0.205193, 0.204967, 0.201705, 0.204003, 0.204967, 0.205028, 0.204965, 0.205016, 0.205046, 0.204997, 0.205213, 0.205005, 0.205028, 0.204958, 0.204974, 0.202394, 0.199524, 0.200137, 0.204978, 0.201074, 0.203188, 0.204955], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 2, 0, 6, 6, 28, 0, 29, 26, 0, 0, 0]': ([0.230548, 0.230514, 0.216031, 0.204998, 0.203264, 0.199467, 0.203425, 0.204951, 0.205193, 0.204967, 0.201705, 0.204003, 0.204967, 0.205028, 0.204965, 0.205016, 0.205046, 0.204997, 0.205213, 0.205005, 0.205028, 0.204958, 0.204974, 0.202394, 0.199524, 0.200137, 0.204978, 0.201074, 0.203188, 0.204955], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	6
        Additions: 		27
        Multiplications: 	4
        Divisions: 		0
        Logical: 		0
        Reads: 			79
        Writes: 		22
        Comparisons:		9
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest71.exe __orio_perftest71.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest71.exe  
Program Test Output: 
{'[6, 6, 0, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0]' : 0.464737}
{'[6, 6, 0, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0]' : 0.416696}
{'[6, 6, 0, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0]' : 0.416388}
{'[6, 6, 0, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0]' : 0.407038}
{'[6, 6, 0, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0]' : 0.405887}
{'[6, 6, 0, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0]' : 0.412656}
{'[6, 6, 0, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0]' : 0.399054}
{'[6, 6, 0, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0]' : 0.40135}
{'[6, 6, 0, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0]' : 0.403608}
{'[6, 6, 0, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0]' : 0.406672}
{'[6, 6, 0, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0]' : 0.411974}
{'[6, 6, 0, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0]' : 0.39724}
{'[6, 6, 0, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0]' : 0.413654}
{'[6, 6, 0, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0]' : 0.403437}
{'[6, 6, 0, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0]' : 0.409308}
{'[6, 6, 0, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0]' : 0.411014}
{'[6, 6, 0, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0]' : 0.403539}
{'[6, 6, 0, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0]' : 0.414984}
{'[6, 6, 0, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0]' : 0.416749}
{'[6, 6, 0, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0]' : 0.416499}
{'[6, 6, 0, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0]' : 0.416378}
{'[6, 6, 0, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0]' : 0.41638}
{'[6, 6, 0, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0]' : 0.416577}
{'[6, 6, 0, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0]' : 0.416346}
{'[6, 6, 0, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0]' : 0.416374}
{'[6, 6, 0, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0]' : 0.416404}
{'[6, 6, 0, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0]' : 0.411607}
{'[6, 6, 0, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0]' : 0.416581}
{'[6, 6, 0, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0]' : 0.416342}
{'[6, 6, 0, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0]' : 0.416437}

out:
 ["{'[6, 6, 0, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0]' : 0.464737}", "{'[6, 6, 0, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0]' : 0.416696}", "{'[6, 6, 0, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0]' : 0.416388}", "{'[6, 6, 0, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0]' : 0.407038}", "{'[6, 6, 0, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0]' : 0.405887}", "{'[6, 6, 0, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0]' : 0.412656}", "{'[6, 6, 0, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0]' : 0.399054}", "{'[6, 6, 0, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0]' : 0.40135}", "{'[6, 6, 0, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0]' : 0.403608}", "{'[6, 6, 0, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0]' : 0.406672}", "{'[6, 6, 0, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0]' : 0.411974}", "{'[6, 6, 0, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0]' : 0.39724}", "{'[6, 6, 0, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0]' : 0.413654}", "{'[6, 6, 0, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0]' : 0.403437}", "{'[6, 6, 0, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0]' : 0.409308}", "{'[6, 6, 0, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0]' : 0.411014}", "{'[6, 6, 0, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0]' : 0.403539}", "{'[6, 6, 0, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0]' : 0.414984}", "{'[6, 6, 0, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0]' : 0.416749}", "{'[6, 6, 0, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0]' : 0.416499}", "{'[6, 6, 0, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0]' : 0.416378}", "{'[6, 6, 0, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0]' : 0.41638}", "{'[6, 6, 0, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0]' : 0.416577}", "{'[6, 6, 0, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0]' : 0.416346}", "{'[6, 6, 0, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0]' : 0.416374}", "{'[6, 6, 0, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0]' : 0.416404}", "{'[6, 6, 0, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0]' : 0.411607}", "{'[6, 6, 0, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0]' : 0.416581}", "{'[6, 6, 0, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0]' : 0.416342}", "{'[6, 6, 0, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0]' : 0.416437}"]
returning from 'run': {'[6, 6, 0, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0]': ([0.464737, 0.416696, 0.416388, 0.407038, 0.405887, 0.412656, 0.399054, 0.40135, 0.403608, 0.406672, 0.411974, 0.39724, 0.413654, 0.403437, 0.409308, 0.411014, 0.403539, 0.414984, 0.416749, 0.416499, 0.416378, 0.41638, 0.416577, 0.416346, 0.416374, 0.416404, 0.411607, 0.416581, 0.416342, 0.416437], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 0, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0]': ([0.464737, 0.416696, 0.416388, 0.407038, 0.405887, 0.412656, 0.399054, 0.40135, 0.403608, 0.406672, 0.411974, 0.39724, 0.413654, 0.403437, 0.409308, 0.411014, 0.403539, 0.414984, 0.416749, 0.416499, 0.416378, 0.41638, 0.416577, 0.416346, 0.416374, 0.416404, 0.411607, 0.416581, 0.416342, 0.416437], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	6
        Additions: 		4862
        Multiplications: 	1440
        Divisions: 		0
        Logical: 		0
        Reads: 			7448
        Writes: 		814
        Comparisons:		20
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest72.exe __orio_perftest72.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest72.exe  
Program Test Output: 
{'[6, 6, 6, 6, 6, 6, 28, 22, 0, 27, 0, 0, 0]' : 0.175974}
{'[6, 6, 6, 6, 6, 6, 28, 22, 0, 27, 0, 0, 0]' : 0.169681}
{'[6, 6, 6, 6, 6, 6, 28, 22, 0, 27, 0, 0, 0]' : 0.150982}
{'[6, 6, 6, 6, 6, 6, 28, 22, 0, 27, 0, 0, 0]' : 0.15113}
{'[6, 6, 6, 6, 6, 6, 28, 22, 0, 27, 0, 0, 0]' : 0.151267}
{'[6, 6, 6, 6, 6, 6, 28, 22, 0, 27, 0, 0, 0]' : 0.151668}
{'[6, 6, 6, 6, 6, 6, 28, 22, 0, 27, 0, 0, 0]' : 0.151429}
{'[6, 6, 6, 6, 6, 6, 28, 22, 0, 27, 0, 0, 0]' : 0.151503}
{'[6, 6, 6, 6, 6, 6, 28, 22, 0, 27, 0, 0, 0]' : 0.151562}
{'[6, 6, 6, 6, 6, 6, 28, 22, 0, 27, 0, 0, 0]' : 0.15163}
{'[6, 6, 6, 6, 6, 6, 28, 22, 0, 27, 0, 0, 0]' : 0.151765}
{'[6, 6, 6, 6, 6, 6, 28, 22, 0, 27, 0, 0, 0]' : 0.151594}
{'[6, 6, 6, 6, 6, 6, 28, 22, 0, 27, 0, 0, 0]' : 0.151468}
{'[6, 6, 6, 6, 6, 6, 28, 22, 0, 27, 0, 0, 0]' : 0.151712}
{'[6, 6, 6, 6, 6, 6, 28, 22, 0, 27, 0, 0, 0]' : 0.151819}
{'[6, 6, 6, 6, 6, 6, 28, 22, 0, 27, 0, 0, 0]' : 0.151805}
{'[6, 6, 6, 6, 6, 6, 28, 22, 0, 27, 0, 0, 0]' : 0.151464}
{'[6, 6, 6, 6, 6, 6, 28, 22, 0, 27, 0, 0, 0]' : 0.151688}
{'[6, 6, 6, 6, 6, 6, 28, 22, 0, 27, 0, 0, 0]' : 0.151927}
{'[6, 6, 6, 6, 6, 6, 28, 22, 0, 27, 0, 0, 0]' : 0.151475}
{'[6, 6, 6, 6, 6, 6, 28, 22, 0, 27, 0, 0, 0]' : 0.151428}
{'[6, 6, 6, 6, 6, 6, 28, 22, 0, 27, 0, 0, 0]' : 0.151812}
{'[6, 6, 6, 6, 6, 6, 28, 22, 0, 27, 0, 0, 0]' : 0.151874}
{'[6, 6, 6, 6, 6, 6, 28, 22, 0, 27, 0, 0, 0]' : 0.151455}
{'[6, 6, 6, 6, 6, 6, 28, 22, 0, 27, 0, 0, 0]' : 0.151543}
{'[6, 6, 6, 6, 6, 6, 28, 22, 0, 27, 0, 0, 0]' : 0.152196}
{'[6, 6, 6, 6, 6, 6, 28, 22, 0, 27, 0, 0, 0]' : 0.151642}
{'[6, 6, 6, 6, 6, 6, 28, 22, 0, 27, 0, 0, 0]' : 0.151801}
{'[6, 6, 6, 6, 6, 6, 28, 22, 0, 27, 0, 0, 0]' : 0.151446}
{'[6, 6, 6, 6, 6, 6, 28, 22, 0, 27, 0, 0, 0]' : 0.151379}

out:
 ["{'[6, 6, 6, 6, 6, 6, 28, 22, 0, 27, 0, 0, 0]' : 0.175974}", "{'[6, 6, 6, 6, 6, 6, 28, 22, 0, 27, 0, 0, 0]' : 0.169681}", "{'[6, 6, 6, 6, 6, 6, 28, 22, 0, 27, 0, 0, 0]' : 0.150982}", "{'[6, 6, 6, 6, 6, 6, 28, 22, 0, 27, 0, 0, 0]' : 0.15113}", "{'[6, 6, 6, 6, 6, 6, 28, 22, 0, 27, 0, 0, 0]' : 0.151267}", "{'[6, 6, 6, 6, 6, 6, 28, 22, 0, 27, 0, 0, 0]' : 0.151668}", "{'[6, 6, 6, 6, 6, 6, 28, 22, 0, 27, 0, 0, 0]' : 0.151429}", "{'[6, 6, 6, 6, 6, 6, 28, 22, 0, 27, 0, 0, 0]' : 0.151503}", "{'[6, 6, 6, 6, 6, 6, 28, 22, 0, 27, 0, 0, 0]' : 0.151562}", "{'[6, 6, 6, 6, 6, 6, 28, 22, 0, 27, 0, 0, 0]' : 0.15163}", "{'[6, 6, 6, 6, 6, 6, 28, 22, 0, 27, 0, 0, 0]' : 0.151765}", "{'[6, 6, 6, 6, 6, 6, 28, 22, 0, 27, 0, 0, 0]' : 0.151594}", "{'[6, 6, 6, 6, 6, 6, 28, 22, 0, 27, 0, 0, 0]' : 0.151468}", "{'[6, 6, 6, 6, 6, 6, 28, 22, 0, 27, 0, 0, 0]' : 0.151712}", "{'[6, 6, 6, 6, 6, 6, 28, 22, 0, 27, 0, 0, 0]' : 0.151819}", "{'[6, 6, 6, 6, 6, 6, 28, 22, 0, 27, 0, 0, 0]' : 0.151805}", "{'[6, 6, 6, 6, 6, 6, 28, 22, 0, 27, 0, 0, 0]' : 0.151464}", "{'[6, 6, 6, 6, 6, 6, 28, 22, 0, 27, 0, 0, 0]' : 0.151688}", "{'[6, 6, 6, 6, 6, 6, 28, 22, 0, 27, 0, 0, 0]' : 0.151927}", "{'[6, 6, 6, 6, 6, 6, 28, 22, 0, 27, 0, 0, 0]' : 0.151475}", "{'[6, 6, 6, 6, 6, 6, 28, 22, 0, 27, 0, 0, 0]' : 0.151428}", "{'[6, 6, 6, 6, 6, 6, 28, 22, 0, 27, 0, 0, 0]' : 0.151812}", "{'[6, 6, 6, 6, 6, 6, 28, 22, 0, 27, 0, 0, 0]' : 0.151874}", "{'[6, 6, 6, 6, 6, 6, 28, 22, 0, 27, 0, 0, 0]' : 0.151455}", "{'[6, 6, 6, 6, 6, 6, 28, 22, 0, 27, 0, 0, 0]' : 0.151543}", "{'[6, 6, 6, 6, 6, 6, 28, 22, 0, 27, 0, 0, 0]' : 0.152196}", "{'[6, 6, 6, 6, 6, 6, 28, 22, 0, 27, 0, 0, 0]' : 0.151642}", "{'[6, 6, 6, 6, 6, 6, 28, 22, 0, 27, 0, 0, 0]' : 0.151801}", "{'[6, 6, 6, 6, 6, 6, 28, 22, 0, 27, 0, 0, 0]' : 0.151446}", "{'[6, 6, 6, 6, 6, 6, 28, 22, 0, 27, 0, 0, 0]' : 0.151379}"]
returning from 'run': {'[6, 6, 6, 6, 6, 6, 28, 22, 0, 27, 0, 0, 0]': ([0.175974, 0.169681, 0.150982, 0.15113, 0.151267, 0.151668, 0.151429, 0.151503, 0.151562, 0.15163, 0.151765, 0.151594, 0.151468, 0.151712, 0.151819, 0.151805, 0.151464, 0.151688, 0.151927, 0.151475, 0.151428, 0.151812, 0.151874, 0.151455, 0.151543, 0.152196, 0.151642, 0.151801, 0.151446, 0.151379], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 6, 6, 6, 6, 28, 22, 0, 27, 0, 0, 0]': ([0.175974, 0.169681, 0.150982, 0.15113, 0.151267, 0.151668, 0.151429, 0.151503, 0.151562, 0.15163, 0.151765, 0.151594, 0.151468, 0.151712, 0.151819, 0.151805, 0.151464, 0.151688, 0.151927, 0.151475, 0.151428, 0.151812, 0.151874, 0.151455, 0.151543, 0.152196, 0.151642, 0.151801, 0.151446, 0.151379], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	6
        Additions: 		13326
        Multiplications: 	3960
        Divisions: 		0
        Logical: 		0
        Reads: 			19957
        Writes: 		2025
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest73.exe __orio_perftest73.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest73.exe  
Program Test Output: 
{'[6, 6, 6, 6, 6, 6, 0, 0, 29, 27, 2, 0, 0]' : 0.32631}
{'[6, 6, 6, 6, 6, 6, 0, 0, 29, 27, 2, 0, 0]' : 0.285325}
{'[6, 6, 6, 6, 6, 6, 0, 0, 29, 27, 2, 0, 0]' : 0.287025}
{'[6, 6, 6, 6, 6, 6, 0, 0, 29, 27, 2, 0, 0]' : 0.2864}
{'[6, 6, 6, 6, 6, 6, 0, 0, 29, 27, 2, 0, 0]' : 0.283514}
{'[6, 6, 6, 6, 6, 6, 0, 0, 29, 27, 2, 0, 0]' : 0.286689}
{'[6, 6, 6, 6, 6, 6, 0, 0, 29, 27, 2, 0, 0]' : 0.28677}
{'[6, 6, 6, 6, 6, 6, 0, 0, 29, 27, 2, 0, 0]' : 0.285394}
{'[6, 6, 6, 6, 6, 6, 0, 0, 29, 27, 2, 0, 0]' : 0.282078}
{'[6, 6, 6, 6, 6, 6, 0, 0, 29, 27, 2, 0, 0]' : 0.286008}
{'[6, 6, 6, 6, 6, 6, 0, 0, 29, 27, 2, 0, 0]' : 0.289172}
{'[6, 6, 6, 6, 6, 6, 0, 0, 29, 27, 2, 0, 0]' : 0.283258}
{'[6, 6, 6, 6, 6, 6, 0, 0, 29, 27, 2, 0, 0]' : 0.28702}
{'[6, 6, 6, 6, 6, 6, 0, 0, 29, 27, 2, 0, 0]' : 0.285296}
{'[6, 6, 6, 6, 6, 6, 0, 0, 29, 27, 2, 0, 0]' : 0.288938}
{'[6, 6, 6, 6, 6, 6, 0, 0, 29, 27, 2, 0, 0]' : 0.284554}
{'[6, 6, 6, 6, 6, 6, 0, 0, 29, 27, 2, 0, 0]' : 0.285318}
{'[6, 6, 6, 6, 6, 6, 0, 0, 29, 27, 2, 0, 0]' : 0.283719}
{'[6, 6, 6, 6, 6, 6, 0, 0, 29, 27, 2, 0, 0]' : 0.288567}
{'[6, 6, 6, 6, 6, 6, 0, 0, 29, 27, 2, 0, 0]' : 0.286464}
{'[6, 6, 6, 6, 6, 6, 0, 0, 29, 27, 2, 0, 0]' : 0.285242}
{'[6, 6, 6, 6, 6, 6, 0, 0, 29, 27, 2, 0, 0]' : 0.284683}
{'[6, 6, 6, 6, 6, 6, 0, 0, 29, 27, 2, 0, 0]' : 0.286943}
{'[6, 6, 6, 6, 6, 6, 0, 0, 29, 27, 2, 0, 0]' : 0.288017}
{'[6, 6, 6, 6, 6, 6, 0, 0, 29, 27, 2, 0, 0]' : 0.284038}
{'[6, 6, 6, 6, 6, 6, 0, 0, 29, 27, 2, 0, 0]' : 0.285499}
{'[6, 6, 6, 6, 6, 6, 0, 0, 29, 27, 2, 0, 0]' : 0.286181}
{'[6, 6, 6, 6, 6, 6, 0, 0, 29, 27, 2, 0, 0]' : 0.283667}
{'[6, 6, 6, 6, 6, 6, 0, 0, 29, 27, 2, 0, 0]' : 0.28559}
{'[6, 6, 6, 6, 6, 6, 0, 0, 29, 27, 2, 0, 0]' : 0.282805}

out:
 ["{'[6, 6, 6, 6, 6, 6, 0, 0, 29, 27, 2, 0, 0]' : 0.32631}", "{'[6, 6, 6, 6, 6, 6, 0, 0, 29, 27, 2, 0, 0]' : 0.285325}", "{'[6, 6, 6, 6, 6, 6, 0, 0, 29, 27, 2, 0, 0]' : 0.287025}", "{'[6, 6, 6, 6, 6, 6, 0, 0, 29, 27, 2, 0, 0]' : 0.2864}", "{'[6, 6, 6, 6, 6, 6, 0, 0, 29, 27, 2, 0, 0]' : 0.283514}", "{'[6, 6, 6, 6, 6, 6, 0, 0, 29, 27, 2, 0, 0]' : 0.286689}", "{'[6, 6, 6, 6, 6, 6, 0, 0, 29, 27, 2, 0, 0]' : 0.28677}", "{'[6, 6, 6, 6, 6, 6, 0, 0, 29, 27, 2, 0, 0]' : 0.285394}", "{'[6, 6, 6, 6, 6, 6, 0, 0, 29, 27, 2, 0, 0]' : 0.282078}", "{'[6, 6, 6, 6, 6, 6, 0, 0, 29, 27, 2, 0, 0]' : 0.286008}", "{'[6, 6, 6, 6, 6, 6, 0, 0, 29, 27, 2, 0, 0]' : 0.289172}", "{'[6, 6, 6, 6, 6, 6, 0, 0, 29, 27, 2, 0, 0]' : 0.283258}", "{'[6, 6, 6, 6, 6, 6, 0, 0, 29, 27, 2, 0, 0]' : 0.28702}", "{'[6, 6, 6, 6, 6, 6, 0, 0, 29, 27, 2, 0, 0]' : 0.285296}", "{'[6, 6, 6, 6, 6, 6, 0, 0, 29, 27, 2, 0, 0]' : 0.288938}", "{'[6, 6, 6, 6, 6, 6, 0, 0, 29, 27, 2, 0, 0]' : 0.284554}", "{'[6, 6, 6, 6, 6, 6, 0, 0, 29, 27, 2, 0, 0]' : 0.285318}", "{'[6, 6, 6, 6, 6, 6, 0, 0, 29, 27, 2, 0, 0]' : 0.283719}", "{'[6, 6, 6, 6, 6, 6, 0, 0, 29, 27, 2, 0, 0]' : 0.288567}", "{'[6, 6, 6, 6, 6, 6, 0, 0, 29, 27, 2, 0, 0]' : 0.286464}", "{'[6, 6, 6, 6, 6, 6, 0, 0, 29, 27, 2, 0, 0]' : 0.285242}", "{'[6, 6, 6, 6, 6, 6, 0, 0, 29, 27, 2, 0, 0]' : 0.284683}", "{'[6, 6, 6, 6, 6, 6, 0, 0, 29, 27, 2, 0, 0]' : 0.286943}", "{'[6, 6, 6, 6, 6, 6, 0, 0, 29, 27, 2, 0, 0]' : 0.288017}", "{'[6, 6, 6, 6, 6, 6, 0, 0, 29, 27, 2, 0, 0]' : 0.284038}", "{'[6, 6, 6, 6, 6, 6, 0, 0, 29, 27, 2, 0, 0]' : 0.285499}", "{'[6, 6, 6, 6, 6, 6, 0, 0, 29, 27, 2, 0, 0]' : 0.286181}", "{'[6, 6, 6, 6, 6, 6, 0, 0, 29, 27, 2, 0, 0]' : 0.283667}", "{'[6, 6, 6, 6, 6, 6, 0, 0, 29, 27, 2, 0, 0]' : 0.28559}", "{'[6, 6, 6, 6, 6, 6, 0, 0, 29, 27, 2, 0, 0]' : 0.282805}"]
returning from 'run': {'[6, 6, 6, 6, 6, 6, 0, 0, 29, 27, 2, 0, 0]': ([0.32631, 0.285325, 0.287025, 0.2864, 0.283514, 0.286689, 0.28677, 0.285394, 0.282078, 0.286008, 0.289172, 0.283258, 0.28702, 0.285296, 0.288938, 0.284554, 0.285318, 0.283719, 0.288567, 0.286464, 0.285242, 0.284683, 0.286943, 0.288017, 0.284038, 0.285499, 0.286181, 0.283667, 0.28559, 0.282805], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 6, 6, 6, 6, 0, 0, 29, 27, 2, 0, 0]': ([0.32631, 0.285325, 0.287025, 0.2864, 0.283514, 0.286689, 0.28677, 0.285394, 0.282078, 0.286008, 0.289172, 0.283258, 0.28702, 0.285296, 0.288938, 0.284554, 0.285318, 0.283719, 0.288567, 0.286464, 0.285242, 0.284683, 0.286943, 0.288017, 0.284038, 0.285499, 0.286181, 0.283667, 0.28559, 0.282805], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	87
        Max loop nest depth: 	5
        Additions: 		10864
        Multiplications: 	3120
        Divisions: 		0
        Logical: 		0
        Reads: 			16391
        Writes: 		1767
        Comparisons:		87
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest74.exe __orio_perftest74.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest74.exe  
Program Test Output: 
{'[6, 6, 6, 0, 6, 6, 0, 29, 0, 29, 1, 0, 1]' : 0.131622}
{'[6, 6, 6, 0, 6, 6, 0, 29, 0, 29, 1, 0, 1]' : 0.1322}
{'[6, 6, 6, 0, 6, 6, 0, 29, 0, 29, 1, 0, 1]' : 0.128047}
{'[6, 6, 6, 0, 6, 6, 0, 29, 0, 29, 1, 0, 1]' : 0.114422}
{'[6, 6, 6, 0, 6, 6, 0, 29, 0, 29, 1, 0, 1]' : 0.114507}
{'[6, 6, 6, 0, 6, 6, 0, 29, 0, 29, 1, 0, 1]' : 0.114958}
{'[6, 6, 6, 0, 6, 6, 0, 29, 0, 29, 1, 0, 1]' : 0.114371}
{'[6, 6, 6, 0, 6, 6, 0, 29, 0, 29, 1, 0, 1]' : 0.114586}
{'[6, 6, 6, 0, 6, 6, 0, 29, 0, 29, 1, 0, 1]' : 0.114822}
{'[6, 6, 6, 0, 6, 6, 0, 29, 0, 29, 1, 0, 1]' : 0.115134}
{'[6, 6, 6, 0, 6, 6, 0, 29, 0, 29, 1, 0, 1]' : 0.114435}
{'[6, 6, 6, 0, 6, 6, 0, 29, 0, 29, 1, 0, 1]' : 0.115583}
{'[6, 6, 6, 0, 6, 6, 0, 29, 0, 29, 1, 0, 1]' : 0.114453}
{'[6, 6, 6, 0, 6, 6, 0, 29, 0, 29, 1, 0, 1]' : 0.114975}
{'[6, 6, 6, 0, 6, 6, 0, 29, 0, 29, 1, 0, 1]' : 0.114372}
{'[6, 6, 6, 0, 6, 6, 0, 29, 0, 29, 1, 0, 1]' : 0.114633}
{'[6, 6, 6, 0, 6, 6, 0, 29, 0, 29, 1, 0, 1]' : 0.114758}
{'[6, 6, 6, 0, 6, 6, 0, 29, 0, 29, 1, 0, 1]' : 0.114923}
{'[6, 6, 6, 0, 6, 6, 0, 29, 0, 29, 1, 0, 1]' : 0.114465}
{'[6, 6, 6, 0, 6, 6, 0, 29, 0, 29, 1, 0, 1]' : 0.114794}
{'[6, 6, 6, 0, 6, 6, 0, 29, 0, 29, 1, 0, 1]' : 0.115614}
{'[6, 6, 6, 0, 6, 6, 0, 29, 0, 29, 1, 0, 1]' : 0.114849}
{'[6, 6, 6, 0, 6, 6, 0, 29, 0, 29, 1, 0, 1]' : 0.114414}
{'[6, 6, 6, 0, 6, 6, 0, 29, 0, 29, 1, 0, 1]' : 0.114578}
{'[6, 6, 6, 0, 6, 6, 0, 29, 0, 29, 1, 0, 1]' : 0.114568}
{'[6, 6, 6, 0, 6, 6, 0, 29, 0, 29, 1, 0, 1]' : 0.114909}
{'[6, 6, 6, 0, 6, 6, 0, 29, 0, 29, 1, 0, 1]' : 0.114361}
{'[6, 6, 6, 0, 6, 6, 0, 29, 0, 29, 1, 0, 1]' : 0.114674}
{'[6, 6, 6, 0, 6, 6, 0, 29, 0, 29, 1, 0, 1]' : 0.11526}
{'[6, 6, 6, 0, 6, 6, 0, 29, 0, 29, 1, 0, 1]' : 0.118175}

out:
 ["{'[6, 6, 6, 0, 6, 6, 0, 29, 0, 29, 1, 0, 1]' : 0.131622}", "{'[6, 6, 6, 0, 6, 6, 0, 29, 0, 29, 1, 0, 1]' : 0.1322}", "{'[6, 6, 6, 0, 6, 6, 0, 29, 0, 29, 1, 0, 1]' : 0.128047}", "{'[6, 6, 6, 0, 6, 6, 0, 29, 0, 29, 1, 0, 1]' : 0.114422}", "{'[6, 6, 6, 0, 6, 6, 0, 29, 0, 29, 1, 0, 1]' : 0.114507}", "{'[6, 6, 6, 0, 6, 6, 0, 29, 0, 29, 1, 0, 1]' : 0.114958}", "{'[6, 6, 6, 0, 6, 6, 0, 29, 0, 29, 1, 0, 1]' : 0.114371}", "{'[6, 6, 6, 0, 6, 6, 0, 29, 0, 29, 1, 0, 1]' : 0.114586}", "{'[6, 6, 6, 0, 6, 6, 0, 29, 0, 29, 1, 0, 1]' : 0.114822}", "{'[6, 6, 6, 0, 6, 6, 0, 29, 0, 29, 1, 0, 1]' : 0.115134}", "{'[6, 6, 6, 0, 6, 6, 0, 29, 0, 29, 1, 0, 1]' : 0.114435}", "{'[6, 6, 6, 0, 6, 6, 0, 29, 0, 29, 1, 0, 1]' : 0.115583}", "{'[6, 6, 6, 0, 6, 6, 0, 29, 0, 29, 1, 0, 1]' : 0.114453}", "{'[6, 6, 6, 0, 6, 6, 0, 29, 0, 29, 1, 0, 1]' : 0.114975}", "{'[6, 6, 6, 0, 6, 6, 0, 29, 0, 29, 1, 0, 1]' : 0.114372}", "{'[6, 6, 6, 0, 6, 6, 0, 29, 0, 29, 1, 0, 1]' : 0.114633}", "{'[6, 6, 6, 0, 6, 6, 0, 29, 0, 29, 1, 0, 1]' : 0.114758}", "{'[6, 6, 6, 0, 6, 6, 0, 29, 0, 29, 1, 0, 1]' : 0.114923}", "{'[6, 6, 6, 0, 6, 6, 0, 29, 0, 29, 1, 0, 1]' : 0.114465}", "{'[6, 6, 6, 0, 6, 6, 0, 29, 0, 29, 1, 0, 1]' : 0.114794}", "{'[6, 6, 6, 0, 6, 6, 0, 29, 0, 29, 1, 0, 1]' : 0.115614}", "{'[6, 6, 6, 0, 6, 6, 0, 29, 0, 29, 1, 0, 1]' : 0.114849}", "{'[6, 6, 6, 0, 6, 6, 0, 29, 0, 29, 1, 0, 1]' : 0.114414}", "{'[6, 6, 6, 0, 6, 6, 0, 29, 0, 29, 1, 0, 1]' : 0.114578}", "{'[6, 6, 6, 0, 6, 6, 0, 29, 0, 29, 1, 0, 1]' : 0.114568}", "{'[6, 6, 6, 0, 6, 6, 0, 29, 0, 29, 1, 0, 1]' : 0.114909}", "{'[6, 6, 6, 0, 6, 6, 0, 29, 0, 29, 1, 0, 1]' : 0.114361}", "{'[6, 6, 6, 0, 6, 6, 0, 29, 0, 29, 1, 0, 1]' : 0.114674}", "{'[6, 6, 6, 0, 6, 6, 0, 29, 0, 29, 1, 0, 1]' : 0.11526}", "{'[6, 6, 6, 0, 6, 6, 0, 29, 0, 29, 1, 0, 1]' : 0.118175}"]
returning from 'run': {'[6, 6, 6, 0, 6, 6, 0, 29, 0, 29, 1, 0, 1]': ([0.131622, 0.1322, 0.128047, 0.114422, 0.114507, 0.114958, 0.114371, 0.114586, 0.114822, 0.115134, 0.114435, 0.115583, 0.114453, 0.114975, 0.114372, 0.114633, 0.114758, 0.114923, 0.114465, 0.114794, 0.115614, 0.114849, 0.114414, 0.114578, 0.114568, 0.114909, 0.114361, 0.114674, 0.11526, 0.118175], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 6, 0, 6, 6, 0, 29, 0, 29, 1, 0, 1]': ([0.131622, 0.1322, 0.128047, 0.114422, 0.114507, 0.114958, 0.114371, 0.114586, 0.114822, 0.115134, 0.114435, 0.115583, 0.114453, 0.114975, 0.114372, 0.114633, 0.114758, 0.114923, 0.114465, 0.114794, 0.115614, 0.114849, 0.114414, 0.114578, 0.114568, 0.114909, 0.114361, 0.114674, 0.11526, 0.118175], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		210
        Multiplications: 	82
        Divisions: 		0
        Logical: 		0
        Reads: 			498
        Writes: 		67
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest75.exe __orio_perftest75.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest75.exe  
Program Test Output: 
{'[6, 6, 6, 0, 6, 6, 0, 0, 2, 3, 0, 2, 0]' : 0.209422}
{'[6, 6, 6, 0, 6, 6, 0, 0, 2, 3, 0, 2, 0]' : 0.209265}
{'[6, 6, 6, 0, 6, 6, 0, 0, 2, 3, 0, 2, 0]' : 0.193706}
{'[6, 6, 6, 0, 6, 6, 0, 0, 2, 3, 0, 2, 0]' : 0.175455}
{'[6, 6, 6, 0, 6, 6, 0, 0, 2, 3, 0, 2, 0]' : 0.180975}
{'[6, 6, 6, 0, 6, 6, 0, 0, 2, 3, 0, 2, 0]' : 0.176771}
{'[6, 6, 6, 0, 6, 6, 0, 0, 2, 3, 0, 2, 0]' : 0.176113}
{'[6, 6, 6, 0, 6, 6, 0, 0, 2, 3, 0, 2, 0]' : 0.175962}
{'[6, 6, 6, 0, 6, 6, 0, 0, 2, 3, 0, 2, 0]' : 0.175798}
{'[6, 6, 6, 0, 6, 6, 0, 0, 2, 3, 0, 2, 0]' : 0.176355}
{'[6, 6, 6, 0, 6, 6, 0, 0, 2, 3, 0, 2, 0]' : 0.17536}
{'[6, 6, 6, 0, 6, 6, 0, 0, 2, 3, 0, 2, 0]' : 0.175546}
{'[6, 6, 6, 0, 6, 6, 0, 0, 2, 3, 0, 2, 0]' : 0.176235}
{'[6, 6, 6, 0, 6, 6, 0, 0, 2, 3, 0, 2, 0]' : 0.175514}
{'[6, 6, 6, 0, 6, 6, 0, 0, 2, 3, 0, 2, 0]' : 0.175771}
{'[6, 6, 6, 0, 6, 6, 0, 0, 2, 3, 0, 2, 0]' : 0.176494}
{'[6, 6, 6, 0, 6, 6, 0, 0, 2, 3, 0, 2, 0]' : 0.175477}
{'[6, 6, 6, 0, 6, 6, 0, 0, 2, 3, 0, 2, 0]' : 0.175352}
{'[6, 6, 6, 0, 6, 6, 0, 0, 2, 3, 0, 2, 0]' : 0.17611}
{'[6, 6, 6, 0, 6, 6, 0, 0, 2, 3, 0, 2, 0]' : 0.175649}
{'[6, 6, 6, 0, 6, 6, 0, 0, 2, 3, 0, 2, 0]' : 0.175855}
{'[6, 6, 6, 0, 6, 6, 0, 0, 2, 3, 0, 2, 0]' : 0.176253}
{'[6, 6, 6, 0, 6, 6, 0, 0, 2, 3, 0, 2, 0]' : 0.175404}
{'[6, 6, 6, 0, 6, 6, 0, 0, 2, 3, 0, 2, 0]' : 0.175812}
{'[6, 6, 6, 0, 6, 6, 0, 0, 2, 3, 0, 2, 0]' : 0.175726}
{'[6, 6, 6, 0, 6, 6, 0, 0, 2, 3, 0, 2, 0]' : 0.176799}
{'[6, 6, 6, 0, 6, 6, 0, 0, 2, 3, 0, 2, 0]' : 0.176074}
{'[6, 6, 6, 0, 6, 6, 0, 0, 2, 3, 0, 2, 0]' : 0.175734}
{'[6, 6, 6, 0, 6, 6, 0, 0, 2, 3, 0, 2, 0]' : 0.175495}
{'[6, 6, 6, 0, 6, 6, 0, 0, 2, 3, 0, 2, 0]' : 0.175963}

out:
 ["{'[6, 6, 6, 0, 6, 6, 0, 0, 2, 3, 0, 2, 0]' : 0.209422}", "{'[6, 6, 6, 0, 6, 6, 0, 0, 2, 3, 0, 2, 0]' : 0.209265}", "{'[6, 6, 6, 0, 6, 6, 0, 0, 2, 3, 0, 2, 0]' : 0.193706}", "{'[6, 6, 6, 0, 6, 6, 0, 0, 2, 3, 0, 2, 0]' : 0.175455}", "{'[6, 6, 6, 0, 6, 6, 0, 0, 2, 3, 0, 2, 0]' : 0.180975}", "{'[6, 6, 6, 0, 6, 6, 0, 0, 2, 3, 0, 2, 0]' : 0.176771}", "{'[6, 6, 6, 0, 6, 6, 0, 0, 2, 3, 0, 2, 0]' : 0.176113}", "{'[6, 6, 6, 0, 6, 6, 0, 0, 2, 3, 0, 2, 0]' : 0.175962}", "{'[6, 6, 6, 0, 6, 6, 0, 0, 2, 3, 0, 2, 0]' : 0.175798}", "{'[6, 6, 6, 0, 6, 6, 0, 0, 2, 3, 0, 2, 0]' : 0.176355}", "{'[6, 6, 6, 0, 6, 6, 0, 0, 2, 3, 0, 2, 0]' : 0.17536}", "{'[6, 6, 6, 0, 6, 6, 0, 0, 2, 3, 0, 2, 0]' : 0.175546}", "{'[6, 6, 6, 0, 6, 6, 0, 0, 2, 3, 0, 2, 0]' : 0.176235}", "{'[6, 6, 6, 0, 6, 6, 0, 0, 2, 3, 0, 2, 0]' : 0.175514}", "{'[6, 6, 6, 0, 6, 6, 0, 0, 2, 3, 0, 2, 0]' : 0.175771}", "{'[6, 6, 6, 0, 6, 6, 0, 0, 2, 3, 0, 2, 0]' : 0.176494}", "{'[6, 6, 6, 0, 6, 6, 0, 0, 2, 3, 0, 2, 0]' : 0.175477}", "{'[6, 6, 6, 0, 6, 6, 0, 0, 2, 3, 0, 2, 0]' : 0.175352}", "{'[6, 6, 6, 0, 6, 6, 0, 0, 2, 3, 0, 2, 0]' : 0.17611}", "{'[6, 6, 6, 0, 6, 6, 0, 0, 2, 3, 0, 2, 0]' : 0.175649}", "{'[6, 6, 6, 0, 6, 6, 0, 0, 2, 3, 0, 2, 0]' : 0.175855}", "{'[6, 6, 6, 0, 6, 6, 0, 0, 2, 3, 0, 2, 0]' : 0.176253}", "{'[6, 6, 6, 0, 6, 6, 0, 0, 2, 3, 0, 2, 0]' : 0.175404}", "{'[6, 6, 6, 0, 6, 6, 0, 0, 2, 3, 0, 2, 0]' : 0.175812}", "{'[6, 6, 6, 0, 6, 6, 0, 0, 2, 3, 0, 2, 0]' : 0.175726}", "{'[6, 6, 6, 0, 6, 6, 0, 0, 2, 3, 0, 2, 0]' : 0.176799}", "{'[6, 6, 6, 0, 6, 6, 0, 0, 2, 3, 0, 2, 0]' : 0.176074}", "{'[6, 6, 6, 0, 6, 6, 0, 0, 2, 3, 0, 2, 0]' : 0.175734}", "{'[6, 6, 6, 0, 6, 6, 0, 0, 2, 3, 0, 2, 0]' : 0.175495}", "{'[6, 6, 6, 0, 6, 6, 0, 0, 2, 3, 0, 2, 0]' : 0.175963}"]
returning from 'run': {'[6, 6, 6, 0, 6, 6, 0, 0, 2, 3, 0, 2, 0]': ([0.209422, 0.209265, 0.193706, 0.175455, 0.180975, 0.176771, 0.176113, 0.175962, 0.175798, 0.176355, 0.17536, 0.175546, 0.176235, 0.175514, 0.175771, 0.176494, 0.175477, 0.175352, 0.17611, 0.175649, 0.175855, 0.176253, 0.175404, 0.175812, 0.175726, 0.176799, 0.176074, 0.175734, 0.175495, 0.175963], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 6, 0, 6, 6, 0, 0, 2, 3, 0, 2, 0]': ([0.209422, 0.209265, 0.193706, 0.175455, 0.180975, 0.176771, 0.176113, 0.175962, 0.175798, 0.176355, 0.17536, 0.175546, 0.176235, 0.175514, 0.175771, 0.176494, 0.175477, 0.175352, 0.17611, 0.175649, 0.175855, 0.176253, 0.175404, 0.175812, 0.175726, 0.176799, 0.176074, 0.175734, 0.175495, 0.175963], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		368
        Multiplications: 	132
        Divisions: 		0
        Logical: 		0
        Reads: 			752
        Writes: 		94
        Comparisons:		12
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest76.exe __orio_perftest76.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest76.exe  
Program Test Output: 
{'[6, 6, 0, 0, 6, 6, 1, 0, 3, 27, 0, 0, 2]' : 0.208953}
{'[6, 6, 0, 0, 6, 6, 1, 0, 3, 27, 0, 0, 2]' : 0.209096}
{'[6, 6, 0, 0, 6, 6, 1, 0, 3, 27, 0, 0, 2]' : 0.208669}
{'[6, 6, 0, 0, 6, 6, 1, 0, 3, 27, 0, 0, 2]' : 0.208554}
{'[6, 6, 0, 0, 6, 6, 1, 0, 3, 27, 0, 0, 2]' : 0.208726}
{'[6, 6, 0, 0, 6, 6, 1, 0, 3, 27, 0, 0, 2]' : 0.2086}
{'[6, 6, 0, 0, 6, 6, 1, 0, 3, 27, 0, 0, 2]' : 0.208714}
{'[6, 6, 0, 0, 6, 6, 1, 0, 3, 27, 0, 0, 2]' : 0.212242}
{'[6, 6, 0, 0, 6, 6, 1, 0, 3, 27, 0, 0, 2]' : 0.215327}
{'[6, 6, 0, 0, 6, 6, 1, 0, 3, 27, 0, 0, 2]' : 0.21599}
{'[6, 6, 0, 0, 6, 6, 1, 0, 3, 27, 0, 0, 2]' : 0.215341}
{'[6, 6, 0, 0, 6, 6, 1, 0, 3, 27, 0, 0, 2]' : 0.215624}
{'[6, 6, 0, 0, 6, 6, 1, 0, 3, 27, 0, 0, 2]' : 0.209665}
{'[6, 6, 0, 0, 6, 6, 1, 0, 3, 27, 0, 0, 2]' : 0.208611}
{'[6, 6, 0, 0, 6, 6, 1, 0, 3, 27, 0, 0, 2]' : 0.210288}
{'[6, 6, 0, 0, 6, 6, 1, 0, 3, 27, 0, 0, 2]' : 0.213288}
{'[6, 6, 0, 0, 6, 6, 1, 0, 3, 27, 0, 0, 2]' : 0.208992}
{'[6, 6, 0, 0, 6, 6, 1, 0, 3, 27, 0, 0, 2]' : 0.208785}
{'[6, 6, 0, 0, 6, 6, 1, 0, 3, 27, 0, 0, 2]' : 0.208854}
{'[6, 6, 0, 0, 6, 6, 1, 0, 3, 27, 0, 0, 2]' : 0.20877}
{'[6, 6, 0, 0, 6, 6, 1, 0, 3, 27, 0, 0, 2]' : 0.208641}
{'[6, 6, 0, 0, 6, 6, 1, 0, 3, 27, 0, 0, 2]' : 0.20878}
{'[6, 6, 0, 0, 6, 6, 1, 0, 3, 27, 0, 0, 2]' : 0.209476}
{'[6, 6, 0, 0, 6, 6, 1, 0, 3, 27, 0, 0, 2]' : 0.209429}
{'[6, 6, 0, 0, 6, 6, 1, 0, 3, 27, 0, 0, 2]' : 0.209222}
{'[6, 6, 0, 0, 6, 6, 1, 0, 3, 27, 0, 0, 2]' : 0.209162}
{'[6, 6, 0, 0, 6, 6, 1, 0, 3, 27, 0, 0, 2]' : 0.20929}
{'[6, 6, 0, 0, 6, 6, 1, 0, 3, 27, 0, 0, 2]' : 0.209452}
{'[6, 6, 0, 0, 6, 6, 1, 0, 3, 27, 0, 0, 2]' : 0.209615}
{'[6, 6, 0, 0, 6, 6, 1, 0, 3, 27, 0, 0, 2]' : 0.20918}

out:
 ["{'[6, 6, 0, 0, 6, 6, 1, 0, 3, 27, 0, 0, 2]' : 0.208953}", "{'[6, 6, 0, 0, 6, 6, 1, 0, 3, 27, 0, 0, 2]' : 0.209096}", "{'[6, 6, 0, 0, 6, 6, 1, 0, 3, 27, 0, 0, 2]' : 0.208669}", "{'[6, 6, 0, 0, 6, 6, 1, 0, 3, 27, 0, 0, 2]' : 0.208554}", "{'[6, 6, 0, 0, 6, 6, 1, 0, 3, 27, 0, 0, 2]' : 0.208726}", "{'[6, 6, 0, 0, 6, 6, 1, 0, 3, 27, 0, 0, 2]' : 0.2086}", "{'[6, 6, 0, 0, 6, 6, 1, 0, 3, 27, 0, 0, 2]' : 0.208714}", "{'[6, 6, 0, 0, 6, 6, 1, 0, 3, 27, 0, 0, 2]' : 0.212242}", "{'[6, 6, 0, 0, 6, 6, 1, 0, 3, 27, 0, 0, 2]' : 0.215327}", "{'[6, 6, 0, 0, 6, 6, 1, 0, 3, 27, 0, 0, 2]' : 0.21599}", "{'[6, 6, 0, 0, 6, 6, 1, 0, 3, 27, 0, 0, 2]' : 0.215341}", "{'[6, 6, 0, 0, 6, 6, 1, 0, 3, 27, 0, 0, 2]' : 0.215624}", "{'[6, 6, 0, 0, 6, 6, 1, 0, 3, 27, 0, 0, 2]' : 0.209665}", "{'[6, 6, 0, 0, 6, 6, 1, 0, 3, 27, 0, 0, 2]' : 0.208611}", "{'[6, 6, 0, 0, 6, 6, 1, 0, 3, 27, 0, 0, 2]' : 0.210288}", "{'[6, 6, 0, 0, 6, 6, 1, 0, 3, 27, 0, 0, 2]' : 0.213288}", "{'[6, 6, 0, 0, 6, 6, 1, 0, 3, 27, 0, 0, 2]' : 0.208992}", "{'[6, 6, 0, 0, 6, 6, 1, 0, 3, 27, 0, 0, 2]' : 0.208785}", "{'[6, 6, 0, 0, 6, 6, 1, 0, 3, 27, 0, 0, 2]' : 0.208854}", "{'[6, 6, 0, 0, 6, 6, 1, 0, 3, 27, 0, 0, 2]' : 0.20877}", "{'[6, 6, 0, 0, 6, 6, 1, 0, 3, 27, 0, 0, 2]' : 0.208641}", "{'[6, 6, 0, 0, 6, 6, 1, 0, 3, 27, 0, 0, 2]' : 0.20878}", "{'[6, 6, 0, 0, 6, 6, 1, 0, 3, 27, 0, 0, 2]' : 0.209476}", "{'[6, 6, 0, 0, 6, 6, 1, 0, 3, 27, 0, 0, 2]' : 0.209429}", "{'[6, 6, 0, 0, 6, 6, 1, 0, 3, 27, 0, 0, 2]' : 0.209222}", "{'[6, 6, 0, 0, 6, 6, 1, 0, 3, 27, 0, 0, 2]' : 0.209162}", "{'[6, 6, 0, 0, 6, 6, 1, 0, 3, 27, 0, 0, 2]' : 0.20929}", "{'[6, 6, 0, 0, 6, 6, 1, 0, 3, 27, 0, 0, 2]' : 0.209452}", "{'[6, 6, 0, 0, 6, 6, 1, 0, 3, 27, 0, 0, 2]' : 0.209615}", "{'[6, 6, 0, 0, 6, 6, 1, 0, 3, 27, 0, 0, 2]' : 0.20918}"]
returning from 'run': {'[6, 6, 0, 0, 6, 6, 1, 0, 3, 27, 0, 0, 2]': ([0.208953, 0.209096, 0.208669, 0.208554, 0.208726, 0.2086, 0.208714, 0.212242, 0.215327, 0.21599, 0.215341, 0.215624, 0.209665, 0.208611, 0.210288, 0.213288, 0.208992, 0.208785, 0.208854, 0.20877, 0.208641, 0.20878, 0.209476, 0.209429, 0.209222, 0.209162, 0.20929, 0.209452, 0.209615, 0.20918], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 0, 0, 6, 6, 1, 0, 3, 27, 0, 0, 2]': ([0.208953, 0.209096, 0.208669, 0.208554, 0.208726, 0.2086, 0.208714, 0.212242, 0.215327, 0.21599, 0.215341, 0.215624, 0.209665, 0.208611, 0.210288, 0.213288, 0.208992, 0.208785, 0.208854, 0.20877, 0.208641, 0.20878, 0.209476, 0.209429, 0.209222, 0.209162, 0.20929, 0.209452, 0.209615, 0.20918], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	6
        Additions: 		13406
        Multiplications: 	3968
        Divisions: 		0
        Logical: 		0
        Reads: 			20104
        Writes: 		2086
        Comparisons:		20
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest77.exe __orio_perftest77.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest77.exe  
Program Test Output: 
{'[6, 6, 0, 5, 6, 6, 29, 29, 29, 0, 0, 0, 2]' : 0.198782}
{'[6, 6, 0, 5, 6, 6, 29, 29, 29, 0, 0, 0, 2]' : 0.19863}
{'[6, 6, 0, 5, 6, 6, 29, 29, 29, 0, 0, 0, 2]' : 0.197043}
{'[6, 6, 0, 5, 6, 6, 29, 29, 29, 0, 0, 0, 2]' : 0.182995}
{'[6, 6, 0, 5, 6, 6, 29, 29, 29, 0, 0, 0, 2]' : 0.177732}
{'[6, 6, 0, 5, 6, 6, 29, 29, 29, 0, 0, 0, 2]' : 0.17609}
{'[6, 6, 0, 5, 6, 6, 29, 29, 29, 0, 0, 0, 2]' : 0.178575}
{'[6, 6, 0, 5, 6, 6, 29, 29, 29, 0, 0, 0, 2]' : 0.181216}
{'[6, 6, 0, 5, 6, 6, 29, 29, 29, 0, 0, 0, 2]' : 0.174935}
{'[6, 6, 0, 5, 6, 6, 29, 29, 29, 0, 0, 0, 2]' : 0.185069}
{'[6, 6, 0, 5, 6, 6, 29, 29, 29, 0, 0, 0, 2]' : 0.185949}
{'[6, 6, 0, 5, 6, 6, 29, 29, 29, 0, 0, 0, 2]' : 0.188839}
{'[6, 6, 0, 5, 6, 6, 29, 29, 29, 0, 0, 0, 2]' : 0.18305}
{'[6, 6, 0, 5, 6, 6, 29, 29, 29, 0, 0, 0, 2]' : 0.181274}
{'[6, 6, 0, 5, 6, 6, 29, 29, 29, 0, 0, 0, 2]' : 0.177699}
{'[6, 6, 0, 5, 6, 6, 29, 29, 29, 0, 0, 0, 2]' : 0.178325}
{'[6, 6, 0, 5, 6, 6, 29, 29, 29, 0, 0, 0, 2]' : 0.178911}
{'[6, 6, 0, 5, 6, 6, 29, 29, 29, 0, 0, 0, 2]' : 0.178637}
{'[6, 6, 0, 5, 6, 6, 29, 29, 29, 0, 0, 0, 2]' : 0.186477}
{'[6, 6, 0, 5, 6, 6, 29, 29, 29, 0, 0, 0, 2]' : 0.188786}
{'[6, 6, 0, 5, 6, 6, 29, 29, 29, 0, 0, 0, 2]' : 0.182532}
{'[6, 6, 0, 5, 6, 6, 29, 29, 29, 0, 0, 0, 2]' : 0.183882}
{'[6, 6, 0, 5, 6, 6, 29, 29, 29, 0, 0, 0, 2]' : 0.183041}
{'[6, 6, 0, 5, 6, 6, 29, 29, 29, 0, 0, 0, 2]' : 0.179308}
{'[6, 6, 0, 5, 6, 6, 29, 29, 29, 0, 0, 0, 2]' : 0.189166}
{'[6, 6, 0, 5, 6, 6, 29, 29, 29, 0, 0, 0, 2]' : 0.185599}
{'[6, 6, 0, 5, 6, 6, 29, 29, 29, 0, 0, 0, 2]' : 0.190398}
{'[6, 6, 0, 5, 6, 6, 29, 29, 29, 0, 0, 0, 2]' : 0.178371}
{'[6, 6, 0, 5, 6, 6, 29, 29, 29, 0, 0, 0, 2]' : 0.185038}
{'[6, 6, 0, 5, 6, 6, 29, 29, 29, 0, 0, 0, 2]' : 0.183081}

out:
 ["{'[6, 6, 0, 5, 6, 6, 29, 29, 29, 0, 0, 0, 2]' : 0.198782}", "{'[6, 6, 0, 5, 6, 6, 29, 29, 29, 0, 0, 0, 2]' : 0.19863}", "{'[6, 6, 0, 5, 6, 6, 29, 29, 29, 0, 0, 0, 2]' : 0.197043}", "{'[6, 6, 0, 5, 6, 6, 29, 29, 29, 0, 0, 0, 2]' : 0.182995}", "{'[6, 6, 0, 5, 6, 6, 29, 29, 29, 0, 0, 0, 2]' : 0.177732}", "{'[6, 6, 0, 5, 6, 6, 29, 29, 29, 0, 0, 0, 2]' : 0.17609}", "{'[6, 6, 0, 5, 6, 6, 29, 29, 29, 0, 0, 0, 2]' : 0.178575}", "{'[6, 6, 0, 5, 6, 6, 29, 29, 29, 0, 0, 0, 2]' : 0.181216}", "{'[6, 6, 0, 5, 6, 6, 29, 29, 29, 0, 0, 0, 2]' : 0.174935}", "{'[6, 6, 0, 5, 6, 6, 29, 29, 29, 0, 0, 0, 2]' : 0.185069}", "{'[6, 6, 0, 5, 6, 6, 29, 29, 29, 0, 0, 0, 2]' : 0.185949}", "{'[6, 6, 0, 5, 6, 6, 29, 29, 29, 0, 0, 0, 2]' : 0.188839}", "{'[6, 6, 0, 5, 6, 6, 29, 29, 29, 0, 0, 0, 2]' : 0.18305}", "{'[6, 6, 0, 5, 6, 6, 29, 29, 29, 0, 0, 0, 2]' : 0.181274}", "{'[6, 6, 0, 5, 6, 6, 29, 29, 29, 0, 0, 0, 2]' : 0.177699}", "{'[6, 6, 0, 5, 6, 6, 29, 29, 29, 0, 0, 0, 2]' : 0.178325}", "{'[6, 6, 0, 5, 6, 6, 29, 29, 29, 0, 0, 0, 2]' : 0.178911}", "{'[6, 6, 0, 5, 6, 6, 29, 29, 29, 0, 0, 0, 2]' : 0.178637}", "{'[6, 6, 0, 5, 6, 6, 29, 29, 29, 0, 0, 0, 2]' : 0.186477}", "{'[6, 6, 0, 5, 6, 6, 29, 29, 29, 0, 0, 0, 2]' : 0.188786}", "{'[6, 6, 0, 5, 6, 6, 29, 29, 29, 0, 0, 0, 2]' : 0.182532}", "{'[6, 6, 0, 5, 6, 6, 29, 29, 29, 0, 0, 0, 2]' : 0.183882}", "{'[6, 6, 0, 5, 6, 6, 29, 29, 29, 0, 0, 0, 2]' : 0.183041}", "{'[6, 6, 0, 5, 6, 6, 29, 29, 29, 0, 0, 0, 2]' : 0.179308}", "{'[6, 6, 0, 5, 6, 6, 29, 29, 29, 0, 0, 0, 2]' : 0.189166}", "{'[6, 6, 0, 5, 6, 6, 29, 29, 29, 0, 0, 0, 2]' : 0.185599}", "{'[6, 6, 0, 5, 6, 6, 29, 29, 29, 0, 0, 0, 2]' : 0.190398}", "{'[6, 6, 0, 5, 6, 6, 29, 29, 29, 0, 0, 0, 2]' : 0.178371}", "{'[6, 6, 0, 5, 6, 6, 29, 29, 29, 0, 0, 0, 2]' : 0.185038}", "{'[6, 6, 0, 5, 6, 6, 29, 29, 29, 0, 0, 0, 2]' : 0.183081}"]
returning from 'run': {'[6, 6, 0, 5, 6, 6, 29, 29, 29, 0, 0, 0, 2]': ([0.198782, 0.19863, 0.197043, 0.182995, 0.177732, 0.17609, 0.178575, 0.181216, 0.174935, 0.185069, 0.185949, 0.188839, 0.18305, 0.181274, 0.177699, 0.178325, 0.178911, 0.178637, 0.186477, 0.188786, 0.182532, 0.183882, 0.183041, 0.179308, 0.189166, 0.185599, 0.190398, 0.178371, 0.185038, 0.183081], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 0, 5, 6, 6, 29, 29, 29, 0, 0, 0, 2]': ([0.198782, 0.19863, 0.197043, 0.182995, 0.177732, 0.17609, 0.178575, 0.181216, 0.174935, 0.185069, 0.185949, 0.188839, 0.18305, 0.181274, 0.177699, 0.178325, 0.178911, 0.178637, 0.186477, 0.188786, 0.182532, 0.183882, 0.183041, 0.179308, 0.189166, 0.185599, 0.190398, 0.178371, 0.185038, 0.183081], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	6
        Additions: 		12317
        Multiplications: 	3654
        Divisions: 		0
        Logical: 		0
        Reads: 			18514
        Writes: 		1919
        Comparisons:		20
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest78.exe __orio_perftest78.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest78.exe  
Program Test Output: 
{'[6, 6, 0, 6, 6, 6, 21, 27, 0, 28, 0, 2, 0]' : 0.172339}
{'[6, 6, 0, 6, 6, 6, 21, 27, 0, 28, 0, 2, 0]' : 0.17208}
{'[6, 6, 0, 6, 6, 6, 21, 27, 0, 28, 0, 2, 0]' : 0.172301}
{'[6, 6, 0, 6, 6, 6, 21, 27, 0, 28, 0, 2, 0]' : 0.158498}
{'[6, 6, 0, 6, 6, 6, 21, 27, 0, 28, 0, 2, 0]' : 0.147768}
{'[6, 6, 0, 6, 6, 6, 21, 27, 0, 28, 0, 2, 0]' : 0.146679}
{'[6, 6, 0, 6, 6, 6, 21, 27, 0, 28, 0, 2, 0]' : 0.152744}
{'[6, 6, 0, 6, 6, 6, 21, 27, 0, 28, 0, 2, 0]' : 0.15357}
{'[6, 6, 0, 6, 6, 6, 21, 27, 0, 28, 0, 2, 0]' : 0.151318}
{'[6, 6, 0, 6, 6, 6, 21, 27, 0, 28, 0, 2, 0]' : 0.150963}
{'[6, 6, 0, 6, 6, 6, 21, 27, 0, 28, 0, 2, 0]' : 0.1508}
{'[6, 6, 0, 6, 6, 6, 21, 27, 0, 28, 0, 2, 0]' : 0.146665}
{'[6, 6, 0, 6, 6, 6, 21, 27, 0, 28, 0, 2, 0]' : 0.147217}
{'[6, 6, 0, 6, 6, 6, 21, 27, 0, 28, 0, 2, 0]' : 0.150969}
{'[6, 6, 0, 6, 6, 6, 21, 27, 0, 28, 0, 2, 0]' : 0.147767}
{'[6, 6, 0, 6, 6, 6, 21, 27, 0, 28, 0, 2, 0]' : 0.146265}
{'[6, 6, 0, 6, 6, 6, 21, 27, 0, 28, 0, 2, 0]' : 0.152291}
{'[6, 6, 0, 6, 6, 6, 21, 27, 0, 28, 0, 2, 0]' : 0.149397}
{'[6, 6, 0, 6, 6, 6, 21, 27, 0, 28, 0, 2, 0]' : 0.146655}
{'[6, 6, 0, 6, 6, 6, 21, 27, 0, 28, 0, 2, 0]' : 0.148243}
{'[6, 6, 0, 6, 6, 6, 21, 27, 0, 28, 0, 2, 0]' : 0.150721}
{'[6, 6, 0, 6, 6, 6, 21, 27, 0, 28, 0, 2, 0]' : 0.146572}
{'[6, 6, 0, 6, 6, 6, 21, 27, 0, 28, 0, 2, 0]' : 0.146597}
{'[6, 6, 0, 6, 6, 6, 21, 27, 0, 28, 0, 2, 0]' : 0.15474}
{'[6, 6, 0, 6, 6, 6, 21, 27, 0, 28, 0, 2, 0]' : 0.149417}
{'[6, 6, 0, 6, 6, 6, 21, 27, 0, 28, 0, 2, 0]' : 0.14662}
{'[6, 6, 0, 6, 6, 6, 21, 27, 0, 28, 0, 2, 0]' : 0.152881}
{'[6, 6, 0, 6, 6, 6, 21, 27, 0, 28, 0, 2, 0]' : 0.153567}
{'[6, 6, 0, 6, 6, 6, 21, 27, 0, 28, 0, 2, 0]' : 0.150852}
{'[6, 6, 0, 6, 6, 6, 21, 27, 0, 28, 0, 2, 0]' : 0.152301}

out:
 ["{'[6, 6, 0, 6, 6, 6, 21, 27, 0, 28, 0, 2, 0]' : 0.172339}", "{'[6, 6, 0, 6, 6, 6, 21, 27, 0, 28, 0, 2, 0]' : 0.17208}", "{'[6, 6, 0, 6, 6, 6, 21, 27, 0, 28, 0, 2, 0]' : 0.172301}", "{'[6, 6, 0, 6, 6, 6, 21, 27, 0, 28, 0, 2, 0]' : 0.158498}", "{'[6, 6, 0, 6, 6, 6, 21, 27, 0, 28, 0, 2, 0]' : 0.147768}", "{'[6, 6, 0, 6, 6, 6, 21, 27, 0, 28, 0, 2, 0]' : 0.146679}", "{'[6, 6, 0, 6, 6, 6, 21, 27, 0, 28, 0, 2, 0]' : 0.152744}", "{'[6, 6, 0, 6, 6, 6, 21, 27, 0, 28, 0, 2, 0]' : 0.15357}", "{'[6, 6, 0, 6, 6, 6, 21, 27, 0, 28, 0, 2, 0]' : 0.151318}", "{'[6, 6, 0, 6, 6, 6, 21, 27, 0, 28, 0, 2, 0]' : 0.150963}", "{'[6, 6, 0, 6, 6, 6, 21, 27, 0, 28, 0, 2, 0]' : 0.1508}", "{'[6, 6, 0, 6, 6, 6, 21, 27, 0, 28, 0, 2, 0]' : 0.146665}", "{'[6, 6, 0, 6, 6, 6, 21, 27, 0, 28, 0, 2, 0]' : 0.147217}", "{'[6, 6, 0, 6, 6, 6, 21, 27, 0, 28, 0, 2, 0]' : 0.150969}", "{'[6, 6, 0, 6, 6, 6, 21, 27, 0, 28, 0, 2, 0]' : 0.147767}", "{'[6, 6, 0, 6, 6, 6, 21, 27, 0, 28, 0, 2, 0]' : 0.146265}", "{'[6, 6, 0, 6, 6, 6, 21, 27, 0, 28, 0, 2, 0]' : 0.152291}", "{'[6, 6, 0, 6, 6, 6, 21, 27, 0, 28, 0, 2, 0]' : 0.149397}", "{'[6, 6, 0, 6, 6, 6, 21, 27, 0, 28, 0, 2, 0]' : 0.146655}", "{'[6, 6, 0, 6, 6, 6, 21, 27, 0, 28, 0, 2, 0]' : 0.148243}", "{'[6, 6, 0, 6, 6, 6, 21, 27, 0, 28, 0, 2, 0]' : 0.150721}", "{'[6, 6, 0, 6, 6, 6, 21, 27, 0, 28, 0, 2, 0]' : 0.146572}", "{'[6, 6, 0, 6, 6, 6, 21, 27, 0, 28, 0, 2, 0]' : 0.146597}", "{'[6, 6, 0, 6, 6, 6, 21, 27, 0, 28, 0, 2, 0]' : 0.15474}", "{'[6, 6, 0, 6, 6, 6, 21, 27, 0, 28, 0, 2, 0]' : 0.149417}", "{'[6, 6, 0, 6, 6, 6, 21, 27, 0, 28, 0, 2, 0]' : 0.14662}", "{'[6, 6, 0, 6, 6, 6, 21, 27, 0, 28, 0, 2, 0]' : 0.152881}", "{'[6, 6, 0, 6, 6, 6, 21, 27, 0, 28, 0, 2, 0]' : 0.153567}", "{'[6, 6, 0, 6, 6, 6, 21, 27, 0, 28, 0, 2, 0]' : 0.150852}", "{'[6, 6, 0, 6, 6, 6, 21, 27, 0, 28, 0, 2, 0]' : 0.152301}"]
returning from 'run': {'[6, 6, 0, 6, 6, 6, 21, 27, 0, 28, 0, 2, 0]': ([0.172339, 0.17208, 0.172301, 0.158498, 0.147768, 0.146679, 0.152744, 0.15357, 0.151318, 0.150963, 0.1508, 0.146665, 0.147217, 0.150969, 0.147767, 0.146265, 0.152291, 0.149397, 0.146655, 0.148243, 0.150721, 0.146572, 0.146597, 0.15474, 0.149417, 0.14662, 0.152881, 0.153567, 0.150852, 0.152301], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 0, 6, 6, 6, 21, 27, 0, 28, 0, 2, 0]': ([0.172339, 0.17208, 0.172301, 0.158498, 0.147768, 0.146679, 0.152744, 0.15357, 0.151318, 0.150963, 0.1508, 0.146665, 0.147217, 0.150969, 0.147767, 0.146265, 0.152291, 0.149397, 0.146655, 0.148243, 0.150721, 0.146572, 0.146597, 0.15474, 0.149417, 0.14662, 0.152881, 0.153567, 0.150852, 0.152301], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Complete design, with measurements:
      T1_K T2_I U1_I U_I U_J U_K RT_I RT_J RT_K cost_mean
1222     5    0   27   0  29  29    0    2    0 0.1763527
4560     6    6   26   0   2   4    0    0    2 0.2385350
10885    0    6    3  29  26   0    0    2    0 0.2539110
11499    4    0    1  28  29   0    0    0    0 0.1821256
16071    0    0   28  17   1   0    2    0    0 0.2083244
16437    2    0   28   0  29  26    0    0    0 0.2060171
19871    0    6    0   0   0   0    0    0    0 0.4130637
20703    6    6   28  22   0  27    0    0    0 0.1530040
22052    6    6    0   0  29  27    2    0    0 0.2870161
22108    6    0    0  29   0  29    1    0    1 0.1164487
23212    6    0    0   0   2   3    0    2    0 0.1788815
23517    0    0    1   0   3  27    0    0    2 0.2101779
23909    0    5   29  29  29   0    0    0    2 0.1839810
26053    0    6   21  27   0  28    0    2    0 0.1522932

Heteroscedasticity Test p-value: 0.896168739949
Regression Step:            Df   Sum Sq  Mean Sq F value  Pr(>F)   
T1_K         1 0.006151 0.006151   5.373 0.08132 . 
T2_I         1 0.010976 0.010976   9.588 0.03634 * 
U1_I         1 0.009792 0.009792   8.554 0.04304 * 
U_I          1 0.024278 0.024278  21.208 0.00999 **
U_J          1 0.000903 0.000903   0.789 0.42461   
U_K          1 0.005382 0.005382   4.701 0.09599 . 
RT_I         1 0.001475 0.001475   1.289 0.31970   
RT_J         1 0.001607 0.001607   1.404 0.30169   
RT_K         1 0.003641 0.003641   3.181 0.14909   
Residuals    4 0.004579 0.001145                   
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Predicting Best
Generating valid search space of size 28000 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Tested coordinates: 110000
Tested coordinates: 120000
Tested coordinates: 130000
Tested coordinates: 140000
Tested coordinates: 150000
Tested coordinates: 160000
Tested coordinates: 170000
Tested coordinates: 180000
Tested coordinates: 190000
Tested coordinates: 200000
Tested coordinates: 210000
Tested coordinates: 220000
Tested coordinates: 230000
Tested coordinates: 240000
Tested coordinates: 250000
Tested coordinates: 260000
Tested coordinates: 270000
Valid coordinates: 5600
Tested coordinates: 280000
Tested coordinates: 290000
Tested coordinates: 300000
Tested coordinates: 310000
Tested coordinates: 320000
Tested coordinates: 330000
Tested coordinates: 340000
Tested coordinates: 350000
Tested coordinates: 360000
Tested coordinates: 370000
Tested coordinates: 380000
Tested coordinates: 390000
Tested coordinates: 400000
Tested coordinates: 410000
Tested coordinates: 420000
Tested coordinates: 430000
Tested coordinates: 440000
Tested coordinates: 450000
Tested coordinates: 460000
Tested coordinates: 470000
Tested coordinates: 480000
Tested coordinates: 490000
Tested coordinates: 500000
Tested coordinates: 510000
Tested coordinates: 520000
Tested coordinates: 530000
Tested coordinates: 540000
Valid coordinates: 11200
Tested coordinates: 550000
Tested coordinates: 560000
Tested coordinates: 570000
Tested coordinates: 580000
Tested coordinates: 590000
Tested coordinates: 600000
Tested coordinates: 610000
Tested coordinates: 620000
Tested coordinates: 630000
Tested coordinates: 640000
Tested coordinates: 650000
Tested coordinates: 660000
Tested coordinates: 670000
Tested coordinates: 680000
Tested coordinates: 690000
Tested coordinates: 700000
Tested coordinates: 710000
Tested coordinates: 720000
Tested coordinates: 730000
Tested coordinates: 740000
Tested coordinates: 750000
Tested coordinates: 760000
Tested coordinates: 770000
Tested coordinates: 780000
Tested coordinates: 790000
Tested coordinates: 800000
Tested coordinates: 810000
Tested coordinates: 820000
Valid coordinates: 16800
Tested coordinates: 830000
Tested coordinates: 840000
Tested coordinates: 850000
Tested coordinates: 860000
Tested coordinates: 870000
Tested coordinates: 880000
Tested coordinates: 890000
Tested coordinates: 900000
Tested coordinates: 910000
Tested coordinates: 920000
Tested coordinates: 930000
Tested coordinates: 940000
Tested coordinates: 950000
Tested coordinates: 960000
Tested coordinates: 970000
Tested coordinates: 980000
Tested coordinates: 990000
Tested coordinates: 1000000
Tested coordinates: 1010000
Tested coordinates: 1020000
Tested coordinates: 1030000
Tested coordinates: 1040000
Tested coordinates: 1050000
Tested coordinates: 1060000
Tested coordinates: 1070000
Tested coordinates: 1080000
Tested coordinates: 1090000
Valid coordinates: 22400
Tested coordinates: 1100000
Tested coordinates: 1110000
Tested coordinates: 1120000
Tested coordinates: 1130000
Tested coordinates: 1140000
Tested coordinates: 1150000
Tested coordinates: 1160000
Tested coordinates: 1170000
Tested coordinates: 1180000
Tested coordinates: 1190000
Tested coordinates: 1200000
Tested coordinates: 1210000
Tested coordinates: 1220000
Tested coordinates: 1230000
Tested coordinates: 1240000
Tested coordinates: 1250000
Tested coordinates: 1260000
Tested coordinates: 1270000
Tested coordinates: 1280000
Tested coordinates: 1290000
Tested coordinates: 1300000
Tested coordinates: 1310000
Tested coordinates: 1320000
Tested coordinates: 1330000
Tested coordinates: 1340000
Tested coordinates: 1350000
Tested coordinates: 1360000
Tested coordinates: 1370000
Valid coordinates: 28000
Valid/Tested configurations: 28000/1374841
Generated Search Space:
NULL
Getting Best from Design
Response: ['cost_mean']
Design Names:  [1] "T1_K"      "T2_I"      "U1_I"      "U_I"       "U_J"       "U_K"      
 [7] "RT_I"      "RT_J"      "RT_K"      "cost_mean"

Design Response:       cost_mean
1222  0.1763527
4560  0.2385350
10885 0.2539110
11499 0.1821256
16071 0.2083244
16437 0.2060171
19871 0.4130637
20703 0.1530040
22052 0.2870161
22108 0.1164487
23212 0.1788815
23517 0.2101779
23909 0.1839810
26053 0.1522932

Current Design Names: ['T1_K', 'T2_I', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Getting fixed variables
Variables within threshold: ['U_I']
Fixed Variables: {'T2_K': 6, 'T2_J': 6, 'T1_I': 6, 'T1_J': 6}
Unique Variables: ['U_I']
Pruning Model
Variables within threshold: ['U_I']
Best Predicted:       T1_I T1_J T1_K T2_I T2_J T2_K U1_I U_I U_J U_K RT_I RT_J RT_K
20806    6    6    6    0    6    6   25  25   0  25    0    0    2

Best From Design: [6, 6, 6, 0, 6, 6, 0, 29, 0, 29, 1, 0, 1]
Pruned Factors: ['T1_K', 'T2_I', 'U1_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Pruned Inverse Factors: []
Pruned Interactions: []
Fixed Factors: {'T2_K': 6, 'T2_J': 6, 'U_I': 25, 'T1_I': 6, 'T1_J': 6}
Length of requested configs: 1
Result was on Database, Returning Now
Starting Point (-O3):
0.16059526666666663
Predicted Best Point:
[6, 6, 6, 0, 6, 6, 25, 25, 0, 25, 0, 0, 2]
Length of requested configs: 1
Code stats:
        Number of loops: 	71
        Max loop nest depth: 	5
        Additions: 		11342
        Multiplications: 	3240
        Divisions: 		0
        Logical: 		0
        Reads: 			16905
        Writes: 		1816
        Comparisons:		71
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest79.exe __orio_perftest79.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest79.exe  
Program Test Output: 
{'[6, 6, 6, 0, 6, 6, 25, 25, 0, 25, 0, 0, 2]' : 0.192427}
{'[6, 6, 6, 0, 6, 6, 25, 25, 0, 25, 0, 0, 2]' : 0.189706}
{'[6, 6, 6, 0, 6, 6, 25, 25, 0, 25, 0, 0, 2]' : 0.175321}
{'[6, 6, 6, 0, 6, 6, 25, 25, 0, 25, 0, 0, 2]' : 0.175408}
{'[6, 6, 6, 0, 6, 6, 25, 25, 0, 25, 0, 0, 2]' : 0.175237}
{'[6, 6, 6, 0, 6, 6, 25, 25, 0, 25, 0, 0, 2]' : 0.175233}
{'[6, 6, 6, 0, 6, 6, 25, 25, 0, 25, 0, 0, 2]' : 0.175322}
{'[6, 6, 6, 0, 6, 6, 25, 25, 0, 25, 0, 0, 2]' : 0.175335}
{'[6, 6, 6, 0, 6, 6, 25, 25, 0, 25, 0, 0, 2]' : 0.175426}
{'[6, 6, 6, 0, 6, 6, 25, 25, 0, 25, 0, 0, 2]' : 0.175498}
{'[6, 6, 6, 0, 6, 6, 25, 25, 0, 25, 0, 0, 2]' : 0.174814}
{'[6, 6, 6, 0, 6, 6, 25, 25, 0, 25, 0, 0, 2]' : 0.167322}
{'[6, 6, 6, 0, 6, 6, 25, 25, 0, 25, 0, 0, 2]' : 0.170418}
{'[6, 6, 6, 0, 6, 6, 25, 25, 0, 25, 0, 0, 2]' : 0.175258}
{'[6, 6, 6, 0, 6, 6, 25, 25, 0, 25, 0, 0, 2]' : 0.175337}
{'[6, 6, 6, 0, 6, 6, 25, 25, 0, 25, 0, 0, 2]' : 0.175464}
{'[6, 6, 6, 0, 6, 6, 25, 25, 0, 25, 0, 0, 2]' : 0.174079}
{'[6, 6, 6, 0, 6, 6, 25, 25, 0, 25, 0, 0, 2]' : 0.17123}
{'[6, 6, 6, 0, 6, 6, 25, 25, 0, 25, 0, 0, 2]' : 0.171046}
{'[6, 6, 6, 0, 6, 6, 25, 25, 0, 25, 0, 0, 2]' : 0.171036}
{'[6, 6, 6, 0, 6, 6, 25, 25, 0, 25, 0, 0, 2]' : 0.171688}
{'[6, 6, 6, 0, 6, 6, 25, 25, 0, 25, 0, 0, 2]' : 0.175369}
{'[6, 6, 6, 0, 6, 6, 25, 25, 0, 25, 0, 0, 2]' : 0.175789}
{'[6, 6, 6, 0, 6, 6, 25, 25, 0, 25, 0, 0, 2]' : 0.175797}
{'[6, 6, 6, 0, 6, 6, 25, 25, 0, 25, 0, 0, 2]' : 0.17537}
{'[6, 6, 6, 0, 6, 6, 25, 25, 0, 25, 0, 0, 2]' : 0.17524}
{'[6, 6, 6, 0, 6, 6, 25, 25, 0, 25, 0, 0, 2]' : 0.175501}
{'[6, 6, 6, 0, 6, 6, 25, 25, 0, 25, 0, 0, 2]' : 0.175572}
{'[6, 6, 6, 0, 6, 6, 25, 25, 0, 25, 0, 0, 2]' : 0.175458}
{'[6, 6, 6, 0, 6, 6, 25, 25, 0, 25, 0, 0, 2]' : 0.175529}

out:
 ["{'[6, 6, 6, 0, 6, 6, 25, 25, 0, 25, 0, 0, 2]' : 0.192427}", "{'[6, 6, 6, 0, 6, 6, 25, 25, 0, 25, 0, 0, 2]' : 0.189706}", "{'[6, 6, 6, 0, 6, 6, 25, 25, 0, 25, 0, 0, 2]' : 0.175321}", "{'[6, 6, 6, 0, 6, 6, 25, 25, 0, 25, 0, 0, 2]' : 0.175408}", "{'[6, 6, 6, 0, 6, 6, 25, 25, 0, 25, 0, 0, 2]' : 0.175237}", "{'[6, 6, 6, 0, 6, 6, 25, 25, 0, 25, 0, 0, 2]' : 0.175233}", "{'[6, 6, 6, 0, 6, 6, 25, 25, 0, 25, 0, 0, 2]' : 0.175322}", "{'[6, 6, 6, 0, 6, 6, 25, 25, 0, 25, 0, 0, 2]' : 0.175335}", "{'[6, 6, 6, 0, 6, 6, 25, 25, 0, 25, 0, 0, 2]' : 0.175426}", "{'[6, 6, 6, 0, 6, 6, 25, 25, 0, 25, 0, 0, 2]' : 0.175498}", "{'[6, 6, 6, 0, 6, 6, 25, 25, 0, 25, 0, 0, 2]' : 0.174814}", "{'[6, 6, 6, 0, 6, 6, 25, 25, 0, 25, 0, 0, 2]' : 0.167322}", "{'[6, 6, 6, 0, 6, 6, 25, 25, 0, 25, 0, 0, 2]' : 0.170418}", "{'[6, 6, 6, 0, 6, 6, 25, 25, 0, 25, 0, 0, 2]' : 0.175258}", "{'[6, 6, 6, 0, 6, 6, 25, 25, 0, 25, 0, 0, 2]' : 0.175337}", "{'[6, 6, 6, 0, 6, 6, 25, 25, 0, 25, 0, 0, 2]' : 0.175464}", "{'[6, 6, 6, 0, 6, 6, 25, 25, 0, 25, 0, 0, 2]' : 0.174079}", "{'[6, 6, 6, 0, 6, 6, 25, 25, 0, 25, 0, 0, 2]' : 0.17123}", "{'[6, 6, 6, 0, 6, 6, 25, 25, 0, 25, 0, 0, 2]' : 0.171046}", "{'[6, 6, 6, 0, 6, 6, 25, 25, 0, 25, 0, 0, 2]' : 0.171036}", "{'[6, 6, 6, 0, 6, 6, 25, 25, 0, 25, 0, 0, 2]' : 0.171688}", "{'[6, 6, 6, 0, 6, 6, 25, 25, 0, 25, 0, 0, 2]' : 0.175369}", "{'[6, 6, 6, 0, 6, 6, 25, 25, 0, 25, 0, 0, 2]' : 0.175789}", "{'[6, 6, 6, 0, 6, 6, 25, 25, 0, 25, 0, 0, 2]' : 0.175797}", "{'[6, 6, 6, 0, 6, 6, 25, 25, 0, 25, 0, 0, 2]' : 0.17537}", "{'[6, 6, 6, 0, 6, 6, 25, 25, 0, 25, 0, 0, 2]' : 0.17524}", "{'[6, 6, 6, 0, 6, 6, 25, 25, 0, 25, 0, 0, 2]' : 0.175501}", "{'[6, 6, 6, 0, 6, 6, 25, 25, 0, 25, 0, 0, 2]' : 0.175572}", "{'[6, 6, 6, 0, 6, 6, 25, 25, 0, 25, 0, 0, 2]' : 0.175458}", "{'[6, 6, 6, 0, 6, 6, 25, 25, 0, 25, 0, 0, 2]' : 0.175529}"]
returning from 'run': {'[6, 6, 6, 0, 6, 6, 25, 25, 0, 25, 0, 0, 2]': ([0.192427, 0.189706, 0.175321, 0.175408, 0.175237, 0.175233, 0.175322, 0.175335, 0.175426, 0.175498, 0.174814, 0.167322, 0.170418, 0.175258, 0.175337, 0.175464, 0.174079, 0.17123, 0.171046, 0.171036, 0.171688, 0.175369, 0.175789, 0.175797, 0.17537, 0.17524, 0.175501, 0.175572, 0.175458, 0.175529], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 6, 0, 6, 6, 25, 25, 0, 25, 0, 0, 2]': ([0.192427, 0.189706, 0.175321, 0.175408, 0.175237, 0.175233, 0.175322, 0.175335, 0.175426, 0.175498, 0.174814, 0.167322, 0.170418, 0.175258, 0.175337, 0.175464, 0.174079, 0.17123, 0.171046, 0.171036, 0.171688, 0.175369, 0.175789, 0.175797, 0.17537, 0.17524, 0.175501, 0.175572, 0.175458, 0.175529], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Design Best Point:
[6, 6, 6, 0, 6, 6, 0, 29, 0, 29, 1, 0, 1]
Length of requested configs: 1
Result was on Database, Returning Now
Fixed Factors: {'T2_K': 6, 'T2_J': 6, 'U_I': 25, 'T1_I': 6, 'T1_J': 6}
Slowdown (Design Best): 0.725106883598479
Slowdown (Predicted Best): 1.0922343497878104
Budget: 74/180
Current Best Point: 
[6, 6, 0, 6, 6, 6, 27, 0, 3, 29, 1, 1, 0]
Step 5
Full Model:  ~ T1_K + T2_I + U1_I + U_J + U_K + RT_I + RT_J + RT_K
Generating valid search space of size 26000 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Tested coordinates: 110000
Tested coordinates: 120000
Tested coordinates: 130000
Tested coordinates: 140000
Tested coordinates: 150000
Tested coordinates: 160000
Tested coordinates: 170000
Tested coordinates: 180000
Tested coordinates: 190000
Tested coordinates: 200000
Tested coordinates: 210000
Tested coordinates: 220000
Tested coordinates: 230000
Tested coordinates: 240000
Tested coordinates: 250000
Tested coordinates: 260000
Tested coordinates: 270000
Tested coordinates: 280000
Tested coordinates: 290000
Tested coordinates: 300000
Tested coordinates: 310000
Tested coordinates: 320000
Tested coordinates: 330000
Tested coordinates: 340000
Tested coordinates: 350000
Tested coordinates: 360000
Tested coordinates: 370000
Tested coordinates: 380000
Valid coordinates: 5200
Tested coordinates: 390000
Tested coordinates: 400000
Tested coordinates: 410000
Tested coordinates: 420000
Tested coordinates: 430000
Tested coordinates: 440000
Tested coordinates: 450000
Tested coordinates: 460000
Tested coordinates: 470000
Tested coordinates: 480000
Tested coordinates: 490000
Tested coordinates: 500000
Tested coordinates: 510000
Tested coordinates: 520000
Tested coordinates: 530000
Tested coordinates: 540000
Tested coordinates: 550000
Tested coordinates: 560000
Tested coordinates: 570000
Tested coordinates: 580000
Tested coordinates: 590000
Tested coordinates: 600000
Tested coordinates: 610000
Tested coordinates: 620000
Tested coordinates: 630000
Tested coordinates: 640000
Tested coordinates: 650000
Tested coordinates: 660000
Tested coordinates: 670000
Tested coordinates: 680000
Tested coordinates: 690000
Tested coordinates: 700000
Tested coordinates: 710000
Tested coordinates: 720000
Tested coordinates: 730000
Tested coordinates: 740000
Valid coordinates: 10400
Tested coordinates: 750000
Tested coordinates: 760000
Tested coordinates: 770000
Tested coordinates: 780000
Tested coordinates: 790000
Tested coordinates: 800000
Tested coordinates: 810000
Tested coordinates: 820000
Tested coordinates: 830000
Tested coordinates: 840000
Tested coordinates: 850000
Tested coordinates: 860000
Tested coordinates: 870000
Tested coordinates: 880000
Tested coordinates: 890000
Tested coordinates: 900000
Tested coordinates: 910000
Tested coordinates: 920000
Tested coordinates: 930000
Tested coordinates: 940000
Tested coordinates: 950000
Tested coordinates: 960000
Tested coordinates: 970000
Tested coordinates: 980000
Tested coordinates: 990000
Tested coordinates: 1000000
Tested coordinates: 1010000
Tested coordinates: 1020000
Tested coordinates: 1030000
Tested coordinates: 1040000
Tested coordinates: 1050000
Tested coordinates: 1060000
Tested coordinates: 1070000
Tested coordinates: 1080000
Tested coordinates: 1090000
Tested coordinates: 1100000
Tested coordinates: 1110000
Tested coordinates: 1120000
Tested coordinates: 1130000
Valid coordinates: 15600
Tested coordinates: 1140000
Tested coordinates: 1150000
Tested coordinates: 1160000
Tested coordinates: 1170000
Tested coordinates: 1180000
Tested coordinates: 1190000
Tested coordinates: 1200000
Tested coordinates: 1210000
Tested coordinates: 1220000
Tested coordinates: 1230000
Tested coordinates: 1240000
Tested coordinates: 1250000
Tested coordinates: 1260000
Tested coordinates: 1270000
Tested coordinates: 1280000
Tested coordinates: 1290000
Tested coordinates: 1300000
Tested coordinates: 1310000
Tested coordinates: 1320000
Tested coordinates: 1330000
Tested coordinates: 1340000
Tested coordinates: 1350000
Tested coordinates: 1360000
Tested coordinates: 1370000
Tested coordinates: 1380000
Tested coordinates: 1390000
Tested coordinates: 1400000
Tested coordinates: 1410000
Tested coordinates: 1420000
Tested coordinates: 1430000
Tested coordinates: 1440000
Tested coordinates: 1450000
Tested coordinates: 1460000
Tested coordinates: 1470000
Tested coordinates: 1480000
Tested coordinates: 1490000
Tested coordinates: 1500000
Valid coordinates: 20800
Tested coordinates: 1510000
Tested coordinates: 1520000
Tested coordinates: 1530000
Tested coordinates: 1540000
Tested coordinates: 1550000
Tested coordinates: 1560000
Tested coordinates: 1570000
Tested coordinates: 1580000
Tested coordinates: 1590000
Tested coordinates: 1600000
Tested coordinates: 1610000
Tested coordinates: 1620000
Tested coordinates: 1630000
Tested coordinates: 1640000
Tested coordinates: 1650000
Tested coordinates: 1660000
Tested coordinates: 1670000
Tested coordinates: 1680000
Tested coordinates: 1690000
Tested coordinates: 1700000
Tested coordinates: 1710000
Tested coordinates: 1720000
Tested coordinates: 1730000
Tested coordinates: 1740000
Tested coordinates: 1750000
Tested coordinates: 1760000
Tested coordinates: 1770000
Tested coordinates: 1780000
Tested coordinates: 1790000
Tested coordinates: 1800000
Tested coordinates: 1810000
Tested coordinates: 1820000
Tested coordinates: 1830000
Tested coordinates: 1840000
Tested coordinates: 1850000
Tested coordinates: 1860000
Tested coordinates: 1870000
Tested coordinates: 1880000
Valid coordinates: 26000
Valid/Tested configurations: 26000/1881643
Generated Search Space:
NULL
Clean Info:
Removed Factors: character(0)

Removed Inverse Factors: character(0)

New Factors: ['T1_K', 'T2_I', 'U1_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
New Inverse Factors: []
New Fixed Factors: {'T2_K': 6, 'T2_J': 6, 'U_I': 25, 'T1_I': 6, 'T1_J': 6}
Fixed Factors: {'T2_K': 6, 'T2_J': 6, 'U_I': 25, 'T1_I': 6, 'T1_J': 6}
Computing D-Optimal Design
Computing D-Optimal Design with 13 experiments
Design Formula:  ~ T1_K + T2_I + U1_I + U_J + U_K + RT_I + RT_J + RT_K
Starting "optFederov" run
Using Search Space:
NULL
Data Dimensions: [1] 26000     8

      T1_K T2_I U1_I U_J U_K RT_I RT_J RT_K
448      0    0   29   5   0    0    2    0
1108     0    0    4   0  29    0    0    2
1169     6    0   29  29   0    2    0    0
2139     1    6    0  28   0    0    0    2
2366     0    6   25  29   0    0    0    0
4068     6    6    0   0   0    0    2    0
4367     0    6   25   0  28    0    2    0
9433     6    5   29   0  29    0    0    0
13212    0    6    0   0   4    2    0    0
15795    6    0    0   0  27    2    0    0
20861    6    5   28   0   1    0    0    2
22879    6    0    0  28   0    0    2    0
25515    0    0    0   3   0    0    0    0

D-Efficiency Approximation: [1] 0.645

Measuring design of size 13
Current Design Names: ['T1_K', 'T2_I', 'U1_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Length of requested configs: 1
Code stats:
        Number of loops: 	69
        Max loop nest depth: 	5
        Additions: 		7618
        Multiplications: 	2160
        Divisions: 		0
        Logical: 		0
        Reads: 			11499
        Writes: 		1276
        Comparisons:		69
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest80.exe __orio_perftest80.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest80.exe  
Program Test Output: 
{'[6, 6, 0, 0, 6, 6, 29, 25, 5, 0, 0, 2, 0]' : 0.163419}
{'[6, 6, 0, 0, 6, 6, 29, 25, 5, 0, 0, 2, 0]' : 0.163287}
{'[6, 6, 0, 0, 6, 6, 29, 25, 5, 0, 0, 2, 0]' : 0.160781}
{'[6, 6, 0, 0, 6, 6, 29, 25, 5, 0, 0, 2, 0]' : 0.16396}
{'[6, 6, 0, 0, 6, 6, 29, 25, 5, 0, 0, 2, 0]' : 0.163243}
{'[6, 6, 0, 0, 6, 6, 29, 25, 5, 0, 0, 2, 0]' : 0.160085}
{'[6, 6, 0, 0, 6, 6, 29, 25, 5, 0, 0, 2, 0]' : 0.164155}
{'[6, 6, 0, 0, 6, 6, 29, 25, 5, 0, 0, 2, 0]' : 0.164017}
{'[6, 6, 0, 0, 6, 6, 29, 25, 5, 0, 0, 2, 0]' : 0.161672}
{'[6, 6, 0, 0, 6, 6, 29, 25, 5, 0, 0, 2, 0]' : 0.158311}
{'[6, 6, 0, 0, 6, 6, 29, 25, 5, 0, 0, 2, 0]' : 0.159567}
{'[6, 6, 0, 0, 6, 6, 29, 25, 5, 0, 0, 2, 0]' : 0.1598}
{'[6, 6, 0, 0, 6, 6, 29, 25, 5, 0, 0, 2, 0]' : 0.163754}
{'[6, 6, 0, 0, 6, 6, 29, 25, 5, 0, 0, 2, 0]' : 0.164056}
{'[6, 6, 0, 0, 6, 6, 29, 25, 5, 0, 0, 2, 0]' : 0.16395}
{'[6, 6, 0, 0, 6, 6, 29, 25, 5, 0, 0, 2, 0]' : 0.160985}
{'[6, 6, 0, 0, 6, 6, 29, 25, 5, 0, 0, 2, 0]' : 0.160009}
{'[6, 6, 0, 0, 6, 6, 29, 25, 5, 0, 0, 2, 0]' : 0.159682}
{'[6, 6, 0, 0, 6, 6, 29, 25, 5, 0, 0, 2, 0]' : 0.162966}
{'[6, 6, 0, 0, 6, 6, 29, 25, 5, 0, 0, 2, 0]' : 0.163952}
{'[6, 6, 0, 0, 6, 6, 29, 25, 5, 0, 0, 2, 0]' : 0.163784}
{'[6, 6, 0, 0, 6, 6, 29, 25, 5, 0, 0, 2, 0]' : 0.159793}
{'[6, 6, 0, 0, 6, 6, 29, 25, 5, 0, 0, 2, 0]' : 0.158385}
{'[6, 6, 0, 0, 6, 6, 29, 25, 5, 0, 0, 2, 0]' : 0.160005}
{'[6, 6, 0, 0, 6, 6, 29, 25, 5, 0, 0, 2, 0]' : 0.16207}
{'[6, 6, 0, 0, 6, 6, 29, 25, 5, 0, 0, 2, 0]' : 0.164088}
{'[6, 6, 0, 0, 6, 6, 29, 25, 5, 0, 0, 2, 0]' : 0.164251}
{'[6, 6, 0, 0, 6, 6, 29, 25, 5, 0, 0, 2, 0]' : 0.16397}
{'[6, 6, 0, 0, 6, 6, 29, 25, 5, 0, 0, 2, 0]' : 0.164012}
{'[6, 6, 0, 0, 6, 6, 29, 25, 5, 0, 0, 2, 0]' : 0.161024}

out:
 ["{'[6, 6, 0, 0, 6, 6, 29, 25, 5, 0, 0, 2, 0]' : 0.163419}", "{'[6, 6, 0, 0, 6, 6, 29, 25, 5, 0, 0, 2, 0]' : 0.163287}", "{'[6, 6, 0, 0, 6, 6, 29, 25, 5, 0, 0, 2, 0]' : 0.160781}", "{'[6, 6, 0, 0, 6, 6, 29, 25, 5, 0, 0, 2, 0]' : 0.16396}", "{'[6, 6, 0, 0, 6, 6, 29, 25, 5, 0, 0, 2, 0]' : 0.163243}", "{'[6, 6, 0, 0, 6, 6, 29, 25, 5, 0, 0, 2, 0]' : 0.160085}", "{'[6, 6, 0, 0, 6, 6, 29, 25, 5, 0, 0, 2, 0]' : 0.164155}", "{'[6, 6, 0, 0, 6, 6, 29, 25, 5, 0, 0, 2, 0]' : 0.164017}", "{'[6, 6, 0, 0, 6, 6, 29, 25, 5, 0, 0, 2, 0]' : 0.161672}", "{'[6, 6, 0, 0, 6, 6, 29, 25, 5, 0, 0, 2, 0]' : 0.158311}", "{'[6, 6, 0, 0, 6, 6, 29, 25, 5, 0, 0, 2, 0]' : 0.159567}", "{'[6, 6, 0, 0, 6, 6, 29, 25, 5, 0, 0, 2, 0]' : 0.1598}", "{'[6, 6, 0, 0, 6, 6, 29, 25, 5, 0, 0, 2, 0]' : 0.163754}", "{'[6, 6, 0, 0, 6, 6, 29, 25, 5, 0, 0, 2, 0]' : 0.164056}", "{'[6, 6, 0, 0, 6, 6, 29, 25, 5, 0, 0, 2, 0]' : 0.16395}", "{'[6, 6, 0, 0, 6, 6, 29, 25, 5, 0, 0, 2, 0]' : 0.160985}", "{'[6, 6, 0, 0, 6, 6, 29, 25, 5, 0, 0, 2, 0]' : 0.160009}", "{'[6, 6, 0, 0, 6, 6, 29, 25, 5, 0, 0, 2, 0]' : 0.159682}", "{'[6, 6, 0, 0, 6, 6, 29, 25, 5, 0, 0, 2, 0]' : 0.162966}", "{'[6, 6, 0, 0, 6, 6, 29, 25, 5, 0, 0, 2, 0]' : 0.163952}", "{'[6, 6, 0, 0, 6, 6, 29, 25, 5, 0, 0, 2, 0]' : 0.163784}", "{'[6, 6, 0, 0, 6, 6, 29, 25, 5, 0, 0, 2, 0]' : 0.159793}", "{'[6, 6, 0, 0, 6, 6, 29, 25, 5, 0, 0, 2, 0]' : 0.158385}", "{'[6, 6, 0, 0, 6, 6, 29, 25, 5, 0, 0, 2, 0]' : 0.160005}", "{'[6, 6, 0, 0, 6, 6, 29, 25, 5, 0, 0, 2, 0]' : 0.16207}", "{'[6, 6, 0, 0, 6, 6, 29, 25, 5, 0, 0, 2, 0]' : 0.164088}", "{'[6, 6, 0, 0, 6, 6, 29, 25, 5, 0, 0, 2, 0]' : 0.164251}", "{'[6, 6, 0, 0, 6, 6, 29, 25, 5, 0, 0, 2, 0]' : 0.16397}", "{'[6, 6, 0, 0, 6, 6, 29, 25, 5, 0, 0, 2, 0]' : 0.164012}", "{'[6, 6, 0, 0, 6, 6, 29, 25, 5, 0, 0, 2, 0]' : 0.161024}"]
returning from 'run': {'[6, 6, 0, 0, 6, 6, 29, 25, 5, 0, 0, 2, 0]': ([0.163419, 0.163287, 0.160781, 0.16396, 0.163243, 0.160085, 0.164155, 0.164017, 0.161672, 0.158311, 0.159567, 0.1598, 0.163754, 0.164056, 0.16395, 0.160985, 0.160009, 0.159682, 0.162966, 0.163952, 0.163784, 0.159793, 0.158385, 0.160005, 0.16207, 0.164088, 0.164251, 0.16397, 0.164012, 0.161024], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 0, 0, 6, 6, 29, 25, 5, 0, 0, 2, 0]': ([0.163419, 0.163287, 0.160781, 0.16396, 0.163243, 0.160085, 0.164155, 0.164017, 0.161672, 0.158311, 0.159567, 0.1598, 0.163754, 0.164056, 0.16395, 0.160985, 0.160009, 0.159682, 0.162966, 0.163952, 0.163784, 0.159793, 0.158385, 0.160005, 0.16207, 0.164088, 0.164251, 0.16397, 0.164012, 0.161024], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	69
        Max loop nest depth: 	5
        Additions: 		12055
        Multiplications: 	3456
        Divisions: 		0
        Logical: 		0
        Reads: 			17929
        Writes: 		1899
        Comparisons:		69
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest81.exe __orio_perftest81.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest81.exe  
Program Test Output: 
{'[6, 6, 0, 0, 6, 6, 4, 25, 0, 29, 0, 0, 2]' : 0.190958}
{'[6, 6, 0, 0, 6, 6, 4, 25, 0, 29, 0, 0, 2]' : 0.1907}
{'[6, 6, 0, 0, 6, 6, 4, 25, 0, 29, 0, 0, 2]' : 0.176293}
{'[6, 6, 0, 0, 6, 6, 4, 25, 0, 29, 0, 0, 2]' : 0.173886}
{'[6, 6, 0, 0, 6, 6, 4, 25, 0, 29, 0, 0, 2]' : 0.173795}
{'[6, 6, 0, 0, 6, 6, 4, 25, 0, 29, 0, 0, 2]' : 0.173575}
{'[6, 6, 0, 0, 6, 6, 4, 25, 0, 29, 0, 0, 2]' : 0.174173}
{'[6, 6, 0, 0, 6, 6, 4, 25, 0, 29, 0, 0, 2]' : 0.169402}
{'[6, 6, 0, 0, 6, 6, 4, 25, 0, 29, 0, 0, 2]' : 0.169619}
{'[6, 6, 0, 0, 6, 6, 4, 25, 0, 29, 0, 0, 2]' : 0.169631}
{'[6, 6, 0, 0, 6, 6, 4, 25, 0, 29, 0, 0, 2]' : 0.169383}
{'[6, 6, 0, 0, 6, 6, 4, 25, 0, 29, 0, 0, 2]' : 0.169804}
{'[6, 6, 0, 0, 6, 6, 4, 25, 0, 29, 0, 0, 2]' : 0.172148}
{'[6, 6, 0, 0, 6, 6, 4, 25, 0, 29, 0, 0, 2]' : 0.172755}
{'[6, 6, 0, 0, 6, 6, 4, 25, 0, 29, 0, 0, 2]' : 0.169476}
{'[6, 6, 0, 0, 6, 6, 4, 25, 0, 29, 0, 0, 2]' : 0.172575}
{'[6, 6, 0, 0, 6, 6, 4, 25, 0, 29, 0, 0, 2]' : 0.173668}
{'[6, 6, 0, 0, 6, 6, 4, 25, 0, 29, 0, 0, 2]' : 0.174434}
{'[6, 6, 0, 0, 6, 6, 4, 25, 0, 29, 0, 0, 2]' : 0.172078}
{'[6, 6, 0, 0, 6, 6, 4, 25, 0, 29, 0, 0, 2]' : 0.169365}
{'[6, 6, 0, 0, 6, 6, 4, 25, 0, 29, 0, 0, 2]' : 0.165916}
{'[6, 6, 0, 0, 6, 6, 4, 25, 0, 29, 0, 0, 2]' : 0.171874}
{'[6, 6, 0, 0, 6, 6, 4, 25, 0, 29, 0, 0, 2]' : 0.173289}
{'[6, 6, 0, 0, 6, 6, 4, 25, 0, 29, 0, 0, 2]' : 0.173431}
{'[6, 6, 0, 0, 6, 6, 4, 25, 0, 29, 0, 0, 2]' : 0.170401}
{'[6, 6, 0, 0, 6, 6, 4, 25, 0, 29, 0, 0, 2]' : 0.169513}
{'[6, 6, 0, 0, 6, 6, 4, 25, 0, 29, 0, 0, 2]' : 0.16946}
{'[6, 6, 0, 0, 6, 6, 4, 25, 0, 29, 0, 0, 2]' : 0.173314}
{'[6, 6, 0, 0, 6, 6, 4, 25, 0, 29, 0, 0, 2]' : 0.173384}
{'[6, 6, 0, 0, 6, 6, 4, 25, 0, 29, 0, 0, 2]' : 0.173184}

out:
 ["{'[6, 6, 0, 0, 6, 6, 4, 25, 0, 29, 0, 0, 2]' : 0.190958}", "{'[6, 6, 0, 0, 6, 6, 4, 25, 0, 29, 0, 0, 2]' : 0.1907}", "{'[6, 6, 0, 0, 6, 6, 4, 25, 0, 29, 0, 0, 2]' : 0.176293}", "{'[6, 6, 0, 0, 6, 6, 4, 25, 0, 29, 0, 0, 2]' : 0.173886}", "{'[6, 6, 0, 0, 6, 6, 4, 25, 0, 29, 0, 0, 2]' : 0.173795}", "{'[6, 6, 0, 0, 6, 6, 4, 25, 0, 29, 0, 0, 2]' : 0.173575}", "{'[6, 6, 0, 0, 6, 6, 4, 25, 0, 29, 0, 0, 2]' : 0.174173}", "{'[6, 6, 0, 0, 6, 6, 4, 25, 0, 29, 0, 0, 2]' : 0.169402}", "{'[6, 6, 0, 0, 6, 6, 4, 25, 0, 29, 0, 0, 2]' : 0.169619}", "{'[6, 6, 0, 0, 6, 6, 4, 25, 0, 29, 0, 0, 2]' : 0.169631}", "{'[6, 6, 0, 0, 6, 6, 4, 25, 0, 29, 0, 0, 2]' : 0.169383}", "{'[6, 6, 0, 0, 6, 6, 4, 25, 0, 29, 0, 0, 2]' : 0.169804}", "{'[6, 6, 0, 0, 6, 6, 4, 25, 0, 29, 0, 0, 2]' : 0.172148}", "{'[6, 6, 0, 0, 6, 6, 4, 25, 0, 29, 0, 0, 2]' : 0.172755}", "{'[6, 6, 0, 0, 6, 6, 4, 25, 0, 29, 0, 0, 2]' : 0.169476}", "{'[6, 6, 0, 0, 6, 6, 4, 25, 0, 29, 0, 0, 2]' : 0.172575}", "{'[6, 6, 0, 0, 6, 6, 4, 25, 0, 29, 0, 0, 2]' : 0.173668}", "{'[6, 6, 0, 0, 6, 6, 4, 25, 0, 29, 0, 0, 2]' : 0.174434}", "{'[6, 6, 0, 0, 6, 6, 4, 25, 0, 29, 0, 0, 2]' : 0.172078}", "{'[6, 6, 0, 0, 6, 6, 4, 25, 0, 29, 0, 0, 2]' : 0.169365}", "{'[6, 6, 0, 0, 6, 6, 4, 25, 0, 29, 0, 0, 2]' : 0.165916}", "{'[6, 6, 0, 0, 6, 6, 4, 25, 0, 29, 0, 0, 2]' : 0.171874}", "{'[6, 6, 0, 0, 6, 6, 4, 25, 0, 29, 0, 0, 2]' : 0.173289}", "{'[6, 6, 0, 0, 6, 6, 4, 25, 0, 29, 0, 0, 2]' : 0.173431}", "{'[6, 6, 0, 0, 6, 6, 4, 25, 0, 29, 0, 0, 2]' : 0.170401}", "{'[6, 6, 0, 0, 6, 6, 4, 25, 0, 29, 0, 0, 2]' : 0.169513}", "{'[6, 6, 0, 0, 6, 6, 4, 25, 0, 29, 0, 0, 2]' : 0.16946}", "{'[6, 6, 0, 0, 6, 6, 4, 25, 0, 29, 0, 0, 2]' : 0.173314}", "{'[6, 6, 0, 0, 6, 6, 4, 25, 0, 29, 0, 0, 2]' : 0.173384}", "{'[6, 6, 0, 0, 6, 6, 4, 25, 0, 29, 0, 0, 2]' : 0.173184}"]
returning from 'run': {'[6, 6, 0, 0, 6, 6, 4, 25, 0, 29, 0, 0, 2]': ([0.190958, 0.1907, 0.176293, 0.173886, 0.173795, 0.173575, 0.174173, 0.169402, 0.169619, 0.169631, 0.169383, 0.169804, 0.172148, 0.172755, 0.169476, 0.172575, 0.173668, 0.174434, 0.172078, 0.169365, 0.165916, 0.171874, 0.173289, 0.173431, 0.170401, 0.169513, 0.16946, 0.173314, 0.173384, 0.173184], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 0, 0, 6, 6, 4, 25, 0, 29, 0, 0, 2]': ([0.190958, 0.1907, 0.176293, 0.173886, 0.173795, 0.173575, 0.174173, 0.169402, 0.169619, 0.169631, 0.169383, 0.169804, 0.172148, 0.172755, 0.169476, 0.172575, 0.173668, 0.174434, 0.172078, 0.169365, 0.165916, 0.171874, 0.173289, 0.173431, 0.170401, 0.169513, 0.16946, 0.173314, 0.173384, 0.173184], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	27
        Max loop nest depth: 	5
        Additions: 		12688
        Multiplications: 	3776
        Divisions: 		0
        Logical: 		0
        Reads: 			19187
        Writes: 		2001
        Comparisons:		27
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest82.exe __orio_perftest82.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest82.exe  
Program Test Output: 
{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 2, 0, 0]' : 0.312539}
{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 2, 0, 0]' : 0.299907}
{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 2, 0, 0]' : 0.281975}
{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 2, 0, 0]' : 0.284789}
{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 2, 0, 0]' : 0.287163}
{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 2, 0, 0]' : 0.283015}
{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 2, 0, 0]' : 0.285504}
{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 2, 0, 0]' : 0.286763}
{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 2, 0, 0]' : 0.289214}
{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 2, 0, 0]' : 0.284269}
{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 2, 0, 0]' : 0.291419}
{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 2, 0, 0]' : 0.290982}
{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 2, 0, 0]' : 0.28795}
{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 2, 0, 0]' : 0.290827}
{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 2, 0, 0]' : 0.289632}
{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 2, 0, 0]' : 0.288412}
{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 2, 0, 0]' : 0.283464}
{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 2, 0, 0]' : 0.286663}
{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 2, 0, 0]' : 0.287701}
{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 2, 0, 0]' : 0.282857}
{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 2, 0, 0]' : 0.285692}
{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 2, 0, 0]' : 0.287164}
{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 2, 0, 0]' : 0.289132}
{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 2, 0, 0]' : 0.288439}
{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 2, 0, 0]' : 0.291336}
{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 2, 0, 0]' : 0.291796}
{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 2, 0, 0]' : 0.285997}
{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 2, 0, 0]' : 0.286406}
{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 2, 0, 0]' : 0.287575}
{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 2, 0, 0]' : 0.286458}

out:
 ["{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 2, 0, 0]' : 0.312539}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 2, 0, 0]' : 0.299907}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 2, 0, 0]' : 0.281975}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 2, 0, 0]' : 0.284789}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 2, 0, 0]' : 0.287163}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 2, 0, 0]' : 0.283015}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 2, 0, 0]' : 0.285504}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 2, 0, 0]' : 0.286763}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 2, 0, 0]' : 0.289214}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 2, 0, 0]' : 0.284269}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 2, 0, 0]' : 0.291419}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 2, 0, 0]' : 0.290982}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 2, 0, 0]' : 0.28795}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 2, 0, 0]' : 0.290827}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 2, 0, 0]' : 0.289632}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 2, 0, 0]' : 0.288412}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 2, 0, 0]' : 0.283464}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 2, 0, 0]' : 0.286663}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 2, 0, 0]' : 0.287701}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 2, 0, 0]' : 0.282857}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 2, 0, 0]' : 0.285692}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 2, 0, 0]' : 0.287164}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 2, 0, 0]' : 0.289132}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 2, 0, 0]' : 0.288439}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 2, 0, 0]' : 0.291336}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 2, 0, 0]' : 0.291796}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 2, 0, 0]' : 0.285997}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 2, 0, 0]' : 0.286406}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 2, 0, 0]' : 0.287575}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 2, 0, 0]' : 0.286458}"]
returning from 'run': {'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 2, 0, 0]': ([0.312539, 0.299907, 0.281975, 0.284789, 0.287163, 0.283015, 0.285504, 0.286763, 0.289214, 0.284269, 0.291419, 0.290982, 0.28795, 0.290827, 0.289632, 0.288412, 0.283464, 0.286663, 0.287701, 0.282857, 0.285692, 0.287164, 0.289132, 0.288439, 0.291336, 0.291796, 0.285997, 0.286406, 0.287575, 0.286458], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 2, 0, 0]': ([0.312539, 0.299907, 0.281975, 0.284789, 0.287163, 0.283015, 0.285504, 0.286763, 0.289214, 0.284269, 0.291419, 0.290982, 0.28795, 0.290827, 0.289632, 0.288412, 0.283464, 0.286663, 0.287701, 0.282857, 0.285692, 0.287164, 0.289132, 0.288439, 0.291336, 0.291796, 0.285997, 0.286406, 0.287575, 0.286458], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	6
        Additions: 		11439
        Multiplications: 	3402
        Divisions: 		0
        Logical: 		0
        Reads: 			17213
        Writes: 		1771
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest83.exe __orio_perftest83.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest83.exe  
Program Test Output: 
{'[6, 6, 1, 6, 6, 6, 0, 25, 28, 0, 0, 0, 2]' : 0.192643}
{'[6, 6, 1, 6, 6, 6, 0, 25, 28, 0, 0, 0, 2]' : 0.19201}
{'[6, 6, 1, 6, 6, 6, 0, 25, 28, 0, 0, 0, 2]' : 0.182148}
{'[6, 6, 1, 6, 6, 6, 0, 25, 28, 0, 0, 0, 2]' : 0.1684}
{'[6, 6, 1, 6, 6, 6, 0, 25, 28, 0, 0, 0, 2]' : 0.168353}
{'[6, 6, 1, 6, 6, 6, 0, 25, 28, 0, 0, 0, 2]' : 0.168348}
{'[6, 6, 1, 6, 6, 6, 0, 25, 28, 0, 0, 0, 2]' : 0.168586}
{'[6, 6, 1, 6, 6, 6, 0, 25, 28, 0, 0, 0, 2]' : 0.16851}
{'[6, 6, 1, 6, 6, 6, 0, 25, 28, 0, 0, 0, 2]' : 0.168591}
{'[6, 6, 1, 6, 6, 6, 0, 25, 28, 0, 0, 0, 2]' : 0.168675}
{'[6, 6, 1, 6, 6, 6, 0, 25, 28, 0, 0, 0, 2]' : 0.168331}
{'[6, 6, 1, 6, 6, 6, 0, 25, 28, 0, 0, 0, 2]' : 0.168485}
{'[6, 6, 1, 6, 6, 6, 0, 25, 28, 0, 0, 0, 2]' : 0.168751}
{'[6, 6, 1, 6, 6, 6, 0, 25, 28, 0, 0, 0, 2]' : 0.168631}
{'[6, 6, 1, 6, 6, 6, 0, 25, 28, 0, 0, 0, 2]' : 0.16851}
{'[6, 6, 1, 6, 6, 6, 0, 25, 28, 0, 0, 0, 2]' : 0.16887}
{'[6, 6, 1, 6, 6, 6, 0, 25, 28, 0, 0, 0, 2]' : 0.168429}
{'[6, 6, 1, 6, 6, 6, 0, 25, 28, 0, 0, 0, 2]' : 0.168272}
{'[6, 6, 1, 6, 6, 6, 0, 25, 28, 0, 0, 0, 2]' : 0.168371}
{'[6, 6, 1, 6, 6, 6, 0, 25, 28, 0, 0, 0, 2]' : 0.168421}
{'[6, 6, 1, 6, 6, 6, 0, 25, 28, 0, 0, 0, 2]' : 0.168354}
{'[6, 6, 1, 6, 6, 6, 0, 25, 28, 0, 0, 0, 2]' : 0.168703}
{'[6, 6, 1, 6, 6, 6, 0, 25, 28, 0, 0, 0, 2]' : 0.168237}
{'[6, 6, 1, 6, 6, 6, 0, 25, 28, 0, 0, 0, 2]' : 0.168094}
{'[6, 6, 1, 6, 6, 6, 0, 25, 28, 0, 0, 0, 2]' : 0.171126}
{'[6, 6, 1, 6, 6, 6, 0, 25, 28, 0, 0, 0, 2]' : 0.17325}
{'[6, 6, 1, 6, 6, 6, 0, 25, 28, 0, 0, 0, 2]' : 0.173175}
{'[6, 6, 1, 6, 6, 6, 0, 25, 28, 0, 0, 0, 2]' : 0.173178}
{'[6, 6, 1, 6, 6, 6, 0, 25, 28, 0, 0, 0, 2]' : 0.173305}
{'[6, 6, 1, 6, 6, 6, 0, 25, 28, 0, 0, 0, 2]' : 0.173046}

out:
 ["{'[6, 6, 1, 6, 6, 6, 0, 25, 28, 0, 0, 0, 2]' : 0.192643}", "{'[6, 6, 1, 6, 6, 6, 0, 25, 28, 0, 0, 0, 2]' : 0.19201}", "{'[6, 6, 1, 6, 6, 6, 0, 25, 28, 0, 0, 0, 2]' : 0.182148}", "{'[6, 6, 1, 6, 6, 6, 0, 25, 28, 0, 0, 0, 2]' : 0.1684}", "{'[6, 6, 1, 6, 6, 6, 0, 25, 28, 0, 0, 0, 2]' : 0.168353}", "{'[6, 6, 1, 6, 6, 6, 0, 25, 28, 0, 0, 0, 2]' : 0.168348}", "{'[6, 6, 1, 6, 6, 6, 0, 25, 28, 0, 0, 0, 2]' : 0.168586}", "{'[6, 6, 1, 6, 6, 6, 0, 25, 28, 0, 0, 0, 2]' : 0.16851}", "{'[6, 6, 1, 6, 6, 6, 0, 25, 28, 0, 0, 0, 2]' : 0.168591}", "{'[6, 6, 1, 6, 6, 6, 0, 25, 28, 0, 0, 0, 2]' : 0.168675}", "{'[6, 6, 1, 6, 6, 6, 0, 25, 28, 0, 0, 0, 2]' : 0.168331}", "{'[6, 6, 1, 6, 6, 6, 0, 25, 28, 0, 0, 0, 2]' : 0.168485}", "{'[6, 6, 1, 6, 6, 6, 0, 25, 28, 0, 0, 0, 2]' : 0.168751}", "{'[6, 6, 1, 6, 6, 6, 0, 25, 28, 0, 0, 0, 2]' : 0.168631}", "{'[6, 6, 1, 6, 6, 6, 0, 25, 28, 0, 0, 0, 2]' : 0.16851}", "{'[6, 6, 1, 6, 6, 6, 0, 25, 28, 0, 0, 0, 2]' : 0.16887}", "{'[6, 6, 1, 6, 6, 6, 0, 25, 28, 0, 0, 0, 2]' : 0.168429}", "{'[6, 6, 1, 6, 6, 6, 0, 25, 28, 0, 0, 0, 2]' : 0.168272}", "{'[6, 6, 1, 6, 6, 6, 0, 25, 28, 0, 0, 0, 2]' : 0.168371}", "{'[6, 6, 1, 6, 6, 6, 0, 25, 28, 0, 0, 0, 2]' : 0.168421}", "{'[6, 6, 1, 6, 6, 6, 0, 25, 28, 0, 0, 0, 2]' : 0.168354}", "{'[6, 6, 1, 6, 6, 6, 0, 25, 28, 0, 0, 0, 2]' : 0.168703}", "{'[6, 6, 1, 6, 6, 6, 0, 25, 28, 0, 0, 0, 2]' : 0.168237}", "{'[6, 6, 1, 6, 6, 6, 0, 25, 28, 0, 0, 0, 2]' : 0.168094}", "{'[6, 6, 1, 6, 6, 6, 0, 25, 28, 0, 0, 0, 2]' : 0.171126}", "{'[6, 6, 1, 6, 6, 6, 0, 25, 28, 0, 0, 0, 2]' : 0.17325}", "{'[6, 6, 1, 6, 6, 6, 0, 25, 28, 0, 0, 0, 2]' : 0.173175}", "{'[6, 6, 1, 6, 6, 6, 0, 25, 28, 0, 0, 0, 2]' : 0.173178}", "{'[6, 6, 1, 6, 6, 6, 0, 25, 28, 0, 0, 0, 2]' : 0.173305}", "{'[6, 6, 1, 6, 6, 6, 0, 25, 28, 0, 0, 0, 2]' : 0.173046}"]
returning from 'run': {'[6, 6, 1, 6, 6, 6, 0, 25, 28, 0, 0, 0, 2]': ([0.192643, 0.19201, 0.182148, 0.1684, 0.168353, 0.168348, 0.168586, 0.16851, 0.168591, 0.168675, 0.168331, 0.168485, 0.168751, 0.168631, 0.16851, 0.16887, 0.168429, 0.168272, 0.168371, 0.168421, 0.168354, 0.168703, 0.168237, 0.168094, 0.171126, 0.17325, 0.173175, 0.173178, 0.173305, 0.173046], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 1, 6, 6, 6, 0, 25, 28, 0, 0, 0, 2]': ([0.192643, 0.19201, 0.182148, 0.1684, 0.168353, 0.168348, 0.168586, 0.16851, 0.168591, 0.168675, 0.168331, 0.168485, 0.168751, 0.168631, 0.16851, 0.16887, 0.168429, 0.168272, 0.168371, 0.168421, 0.168354, 0.168703, 0.168237, 0.168094, 0.171126, 0.17325, 0.173175, 0.173178, 0.173305, 0.173046], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	6
        Additions: 		5799
        Multiplications: 	1728
        Divisions: 		0
        Logical: 		0
        Reads: 			8874
        Writes: 		954
        Comparisons:		18
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest84.exe __orio_perftest84.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest84.exe  
Program Test Output: 
{'[6, 6, 0, 6, 6, 6, 25, 25, 29, 0, 0, 0, 0]' : 0.161127}
{'[6, 6, 0, 6, 6, 6, 25, 25, 29, 0, 0, 0, 0]' : 0.163552}
{'[6, 6, 0, 6, 6, 6, 25, 25, 29, 0, 0, 0, 0]' : 0.163681}
{'[6, 6, 0, 6, 6, 6, 25, 25, 29, 0, 0, 0, 0]' : 0.160903}
{'[6, 6, 0, 6, 6, 6, 25, 25, 29, 0, 0, 0, 0]' : 0.161455}
{'[6, 6, 0, 6, 6, 6, 25, 25, 29, 0, 0, 0, 0]' : 0.158873}
{'[6, 6, 0, 6, 6, 6, 25, 25, 29, 0, 0, 0, 0]' : 0.159986}
{'[6, 6, 0, 6, 6, 6, 25, 25, 29, 0, 0, 0, 0]' : 0.163091}
{'[6, 6, 0, 6, 6, 6, 25, 25, 29, 0, 0, 0, 0]' : 0.161426}
{'[6, 6, 0, 6, 6, 6, 25, 25, 29, 0, 0, 0, 0]' : 0.15965}
{'[6, 6, 0, 6, 6, 6, 25, 25, 29, 0, 0, 0, 0]' : 0.163306}
{'[6, 6, 0, 6, 6, 6, 25, 25, 29, 0, 0, 0, 0]' : 0.162239}
{'[6, 6, 0, 6, 6, 6, 25, 25, 29, 0, 0, 0, 0]' : 0.159081}
{'[6, 6, 0, 6, 6, 6, 25, 25, 29, 0, 0, 0, 0]' : 0.163182}
{'[6, 6, 0, 6, 6, 6, 25, 25, 29, 0, 0, 0, 0]' : 0.163045}
{'[6, 6, 0, 6, 6, 6, 25, 25, 29, 0, 0, 0, 0]' : 0.154658}
{'[6, 6, 0, 6, 6, 6, 25, 25, 29, 0, 0, 0, 0]' : 0.158626}
{'[6, 6, 0, 6, 6, 6, 25, 25, 29, 0, 0, 0, 0]' : 0.158998}
{'[6, 6, 0, 6, 6, 6, 25, 25, 29, 0, 0, 0, 0]' : 0.155026}
{'[6, 6, 0, 6, 6, 6, 25, 25, 29, 0, 0, 0, 0]' : 0.16065}
{'[6, 6, 0, 6, 6, 6, 25, 25, 29, 0, 0, 0, 0]' : 0.163272}
{'[6, 6, 0, 6, 6, 6, 25, 25, 29, 0, 0, 0, 0]' : 0.160402}
{'[6, 6, 0, 6, 6, 6, 25, 25, 29, 0, 0, 0, 0]' : 0.16153}
{'[6, 6, 0, 6, 6, 6, 25, 25, 29, 0, 0, 0, 0]' : 0.162009}
{'[6, 6, 0, 6, 6, 6, 25, 25, 29, 0, 0, 0, 0]' : 0.15694}
{'[6, 6, 0, 6, 6, 6, 25, 25, 29, 0, 0, 0, 0]' : 0.156677}
{'[6, 6, 0, 6, 6, 6, 25, 25, 29, 0, 0, 0, 0]' : 0.158697}
{'[6, 6, 0, 6, 6, 6, 25, 25, 29, 0, 0, 0, 0]' : 0.158382}
{'[6, 6, 0, 6, 6, 6, 25, 25, 29, 0, 0, 0, 0]' : 0.155542}
{'[6, 6, 0, 6, 6, 6, 25, 25, 29, 0, 0, 0, 0]' : 0.158855}

out:
 ["{'[6, 6, 0, 6, 6, 6, 25, 25, 29, 0, 0, 0, 0]' : 0.161127}", "{'[6, 6, 0, 6, 6, 6, 25, 25, 29, 0, 0, 0, 0]' : 0.163552}", "{'[6, 6, 0, 6, 6, 6, 25, 25, 29, 0, 0, 0, 0]' : 0.163681}", "{'[6, 6, 0, 6, 6, 6, 25, 25, 29, 0, 0, 0, 0]' : 0.160903}", "{'[6, 6, 0, 6, 6, 6, 25, 25, 29, 0, 0, 0, 0]' : 0.161455}", "{'[6, 6, 0, 6, 6, 6, 25, 25, 29, 0, 0, 0, 0]' : 0.158873}", "{'[6, 6, 0, 6, 6, 6, 25, 25, 29, 0, 0, 0, 0]' : 0.159986}", "{'[6, 6, 0, 6, 6, 6, 25, 25, 29, 0, 0, 0, 0]' : 0.163091}", "{'[6, 6, 0, 6, 6, 6, 25, 25, 29, 0, 0, 0, 0]' : 0.161426}", "{'[6, 6, 0, 6, 6, 6, 25, 25, 29, 0, 0, 0, 0]' : 0.15965}", "{'[6, 6, 0, 6, 6, 6, 25, 25, 29, 0, 0, 0, 0]' : 0.163306}", "{'[6, 6, 0, 6, 6, 6, 25, 25, 29, 0, 0, 0, 0]' : 0.162239}", "{'[6, 6, 0, 6, 6, 6, 25, 25, 29, 0, 0, 0, 0]' : 0.159081}", "{'[6, 6, 0, 6, 6, 6, 25, 25, 29, 0, 0, 0, 0]' : 0.163182}", "{'[6, 6, 0, 6, 6, 6, 25, 25, 29, 0, 0, 0, 0]' : 0.163045}", "{'[6, 6, 0, 6, 6, 6, 25, 25, 29, 0, 0, 0, 0]' : 0.154658}", "{'[6, 6, 0, 6, 6, 6, 25, 25, 29, 0, 0, 0, 0]' : 0.158626}", "{'[6, 6, 0, 6, 6, 6, 25, 25, 29, 0, 0, 0, 0]' : 0.158998}", "{'[6, 6, 0, 6, 6, 6, 25, 25, 29, 0, 0, 0, 0]' : 0.155026}", "{'[6, 6, 0, 6, 6, 6, 25, 25, 29, 0, 0, 0, 0]' : 0.16065}", "{'[6, 6, 0, 6, 6, 6, 25, 25, 29, 0, 0, 0, 0]' : 0.163272}", "{'[6, 6, 0, 6, 6, 6, 25, 25, 29, 0, 0, 0, 0]' : 0.160402}", "{'[6, 6, 0, 6, 6, 6, 25, 25, 29, 0, 0, 0, 0]' : 0.16153}", "{'[6, 6, 0, 6, 6, 6, 25, 25, 29, 0, 0, 0, 0]' : 0.162009}", "{'[6, 6, 0, 6, 6, 6, 25, 25, 29, 0, 0, 0, 0]' : 0.15694}", "{'[6, 6, 0, 6, 6, 6, 25, 25, 29, 0, 0, 0, 0]' : 0.156677}", "{'[6, 6, 0, 6, 6, 6, 25, 25, 29, 0, 0, 0, 0]' : 0.158697}", "{'[6, 6, 0, 6, 6, 6, 25, 25, 29, 0, 0, 0, 0]' : 0.158382}", "{'[6, 6, 0, 6, 6, 6, 25, 25, 29, 0, 0, 0, 0]' : 0.155542}", "{'[6, 6, 0, 6, 6, 6, 25, 25, 29, 0, 0, 0, 0]' : 0.158855}"]
returning from 'run': {'[6, 6, 0, 6, 6, 6, 25, 25, 29, 0, 0, 0, 0]': ([0.161127, 0.163552, 0.163681, 0.160903, 0.161455, 0.158873, 0.159986, 0.163091, 0.161426, 0.15965, 0.163306, 0.162239, 0.159081, 0.163182, 0.163045, 0.154658, 0.158626, 0.158998, 0.155026, 0.16065, 0.163272, 0.160402, 0.16153, 0.162009, 0.15694, 0.156677, 0.158697, 0.158382, 0.155542, 0.158855], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 0, 6, 6, 6, 25, 25, 29, 0, 0, 0, 0]': ([0.161127, 0.163552, 0.163681, 0.160903, 0.161455, 0.158873, 0.159986, 0.163091, 0.161426, 0.15965, 0.163306, 0.162239, 0.159081, 0.163182, 0.163045, 0.154658, 0.158626, 0.158998, 0.155026, 0.16065, 0.163272, 0.160402, 0.16153, 0.162009, 0.15694, 0.156677, 0.158697, 0.158382, 0.155542, 0.158855], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	6
        Additions: 		6123
        Multiplications: 	1836
        Divisions: 		0
        Logical: 		0
        Reads: 			9361
        Writes: 		984
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest85.exe __orio_perftest85.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest85.exe  
Program Test Output: 
{'[6, 6, 6, 6, 6, 6, 0, 25, 0, 0, 0, 2, 0]' : 0.186478}
{'[6, 6, 6, 6, 6, 6, 0, 25, 0, 0, 0, 2, 0]' : 0.186409}
{'[6, 6, 6, 6, 6, 6, 0, 25, 0, 0, 0, 2, 0]' : 0.180885}
{'[6, 6, 6, 6, 6, 6, 0, 25, 0, 0, 0, 2, 0]' : 0.163243}
{'[6, 6, 6, 6, 6, 6, 0, 25, 0, 0, 0, 2, 0]' : 0.163146}
{'[6, 6, 6, 6, 6, 6, 0, 25, 0, 0, 0, 2, 0]' : 0.160761}
{'[6, 6, 6, 6, 6, 6, 0, 25, 0, 0, 0, 2, 0]' : 0.161103}
{'[6, 6, 6, 6, 6, 6, 0, 25, 0, 0, 0, 2, 0]' : 0.163414}
{'[6, 6, 6, 6, 6, 6, 0, 25, 0, 0, 0, 2, 0]' : 0.161803}
{'[6, 6, 6, 6, 6, 6, 0, 25, 0, 0, 0, 2, 0]' : 0.161188}
{'[6, 6, 6, 6, 6, 6, 0, 25, 0, 0, 0, 2, 0]' : 0.163087}
{'[6, 6, 6, 6, 6, 6, 0, 25, 0, 0, 0, 2, 0]' : 0.163376}
{'[6, 6, 6, 6, 6, 6, 0, 25, 0, 0, 0, 2, 0]' : 0.16318}
{'[6, 6, 6, 6, 6, 6, 0, 25, 0, 0, 0, 2, 0]' : 0.163141}
{'[6, 6, 6, 6, 6, 6, 0, 25, 0, 0, 0, 2, 0]' : 0.163509}
{'[6, 6, 6, 6, 6, 6, 0, 25, 0, 0, 0, 2, 0]' : 0.165}
{'[6, 6, 6, 6, 6, 6, 0, 25, 0, 0, 0, 2, 0]' : 0.167641}
{'[6, 6, 6, 6, 6, 6, 0, 25, 0, 0, 0, 2, 0]' : 0.167647}
{'[6, 6, 6, 6, 6, 6, 0, 25, 0, 0, 0, 2, 0]' : 0.166125}
{'[6, 6, 6, 6, 6, 6, 0, 25, 0, 0, 0, 2, 0]' : 0.163067}
{'[6, 6, 6, 6, 6, 6, 0, 25, 0, 0, 0, 2, 0]' : 0.15988}
{'[6, 6, 6, 6, 6, 6, 0, 25, 0, 0, 0, 2, 0]' : 0.160458}
{'[6, 6, 6, 6, 6, 6, 0, 25, 0, 0, 0, 2, 0]' : 0.163271}
{'[6, 6, 6, 6, 6, 6, 0, 25, 0, 0, 0, 2, 0]' : 0.163283}
{'[6, 6, 6, 6, 6, 6, 0, 25, 0, 0, 0, 2, 0]' : 0.163237}
{'[6, 6, 6, 6, 6, 6, 0, 25, 0, 0, 0, 2, 0]' : 0.163143}
{'[6, 6, 6, 6, 6, 6, 0, 25, 0, 0, 0, 2, 0]' : 0.163691}
{'[6, 6, 6, 6, 6, 6, 0, 25, 0, 0, 0, 2, 0]' : 0.160044}
{'[6, 6, 6, 6, 6, 6, 0, 25, 0, 0, 0, 2, 0]' : 0.160156}
{'[6, 6, 6, 6, 6, 6, 0, 25, 0, 0, 0, 2, 0]' : 0.159895}

out:
 ["{'[6, 6, 6, 6, 6, 6, 0, 25, 0, 0, 0, 2, 0]' : 0.186478}", "{'[6, 6, 6, 6, 6, 6, 0, 25, 0, 0, 0, 2, 0]' : 0.186409}", "{'[6, 6, 6, 6, 6, 6, 0, 25, 0, 0, 0, 2, 0]' : 0.180885}", "{'[6, 6, 6, 6, 6, 6, 0, 25, 0, 0, 0, 2, 0]' : 0.163243}", "{'[6, 6, 6, 6, 6, 6, 0, 25, 0, 0, 0, 2, 0]' : 0.163146}", "{'[6, 6, 6, 6, 6, 6, 0, 25, 0, 0, 0, 2, 0]' : 0.160761}", "{'[6, 6, 6, 6, 6, 6, 0, 25, 0, 0, 0, 2, 0]' : 0.161103}", "{'[6, 6, 6, 6, 6, 6, 0, 25, 0, 0, 0, 2, 0]' : 0.163414}", "{'[6, 6, 6, 6, 6, 6, 0, 25, 0, 0, 0, 2, 0]' : 0.161803}", "{'[6, 6, 6, 6, 6, 6, 0, 25, 0, 0, 0, 2, 0]' : 0.161188}", "{'[6, 6, 6, 6, 6, 6, 0, 25, 0, 0, 0, 2, 0]' : 0.163087}", "{'[6, 6, 6, 6, 6, 6, 0, 25, 0, 0, 0, 2, 0]' : 0.163376}", "{'[6, 6, 6, 6, 6, 6, 0, 25, 0, 0, 0, 2, 0]' : 0.16318}", "{'[6, 6, 6, 6, 6, 6, 0, 25, 0, 0, 0, 2, 0]' : 0.163141}", "{'[6, 6, 6, 6, 6, 6, 0, 25, 0, 0, 0, 2, 0]' : 0.163509}", "{'[6, 6, 6, 6, 6, 6, 0, 25, 0, 0, 0, 2, 0]' : 0.165}", "{'[6, 6, 6, 6, 6, 6, 0, 25, 0, 0, 0, 2, 0]' : 0.167641}", "{'[6, 6, 6, 6, 6, 6, 0, 25, 0, 0, 0, 2, 0]' : 0.167647}", "{'[6, 6, 6, 6, 6, 6, 0, 25, 0, 0, 0, 2, 0]' : 0.166125}", "{'[6, 6, 6, 6, 6, 6, 0, 25, 0, 0, 0, 2, 0]' : 0.163067}", "{'[6, 6, 6, 6, 6, 6, 0, 25, 0, 0, 0, 2, 0]' : 0.15988}", "{'[6, 6, 6, 6, 6, 6, 0, 25, 0, 0, 0, 2, 0]' : 0.160458}", "{'[6, 6, 6, 6, 6, 6, 0, 25, 0, 0, 0, 2, 0]' : 0.163271}", "{'[6, 6, 6, 6, 6, 6, 0, 25, 0, 0, 0, 2, 0]' : 0.163283}", "{'[6, 6, 6, 6, 6, 6, 0, 25, 0, 0, 0, 2, 0]' : 0.163237}", "{'[6, 6, 6, 6, 6, 6, 0, 25, 0, 0, 0, 2, 0]' : 0.163143}", "{'[6, 6, 6, 6, 6, 6, 0, 25, 0, 0, 0, 2, 0]' : 0.163691}", "{'[6, 6, 6, 6, 6, 6, 0, 25, 0, 0, 0, 2, 0]' : 0.160044}", "{'[6, 6, 6, 6, 6, 6, 0, 25, 0, 0, 0, 2, 0]' : 0.160156}", "{'[6, 6, 6, 6, 6, 6, 0, 25, 0, 0, 0, 2, 0]' : 0.159895}"]
returning from 'run': {'[6, 6, 6, 6, 6, 6, 0, 25, 0, 0, 0, 2, 0]': ([0.186478, 0.186409, 0.180885, 0.163243, 0.163146, 0.160761, 0.161103, 0.163414, 0.161803, 0.161188, 0.163087, 0.163376, 0.16318, 0.163141, 0.163509, 0.165, 0.167641, 0.167647, 0.166125, 0.163067, 0.15988, 0.160458, 0.163271, 0.163283, 0.163237, 0.163143, 0.163691, 0.160044, 0.160156, 0.159895], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 6, 6, 6, 6, 0, 25, 0, 0, 0, 2, 0]': ([0.186478, 0.186409, 0.180885, 0.163243, 0.163146, 0.160761, 0.161103, 0.163414, 0.161803, 0.161188, 0.163087, 0.163376, 0.16318, 0.163141, 0.163509, 0.165, 0.167641, 0.167647, 0.166125, 0.163067, 0.15988, 0.160458, 0.163271, 0.163283, 0.163237, 0.163143, 0.163691, 0.160044, 0.160156, 0.159895], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	6
        Additions: 		11457
        Multiplications: 	3402
        Divisions: 		0
        Logical: 		0
        Reads: 			17258
        Writes: 		1795
        Comparisons:		20
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest86.exe __orio_perftest86.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest86.exe  
Program Test Output: 
{'[6, 6, 0, 6, 6, 6, 25, 25, 0, 28, 0, 2, 0]' : 0.15024}
{'[6, 6, 0, 6, 6, 6, 25, 25, 0, 28, 0, 2, 0]' : 0.145992}
{'[6, 6, 0, 6, 6, 6, 25, 25, 0, 28, 0, 2, 0]' : 0.144846}
{'[6, 6, 0, 6, 6, 6, 25, 25, 0, 28, 0, 2, 0]' : 0.145525}
{'[6, 6, 0, 6, 6, 6, 25, 25, 0, 28, 0, 2, 0]' : 0.148887}
{'[6, 6, 0, 6, 6, 6, 25, 25, 0, 28, 0, 2, 0]' : 0.150429}
{'[6, 6, 0, 6, 6, 6, 25, 25, 0, 28, 0, 2, 0]' : 0.151545}
{'[6, 6, 0, 6, 6, 6, 25, 25, 0, 28, 0, 2, 0]' : 0.149753}
{'[6, 6, 0, 6, 6, 6, 25, 25, 0, 28, 0, 2, 0]' : 0.148191}
{'[6, 6, 0, 6, 6, 6, 25, 25, 0, 28, 0, 2, 0]' : 0.145131}
{'[6, 6, 0, 6, 6, 6, 25, 25, 0, 28, 0, 2, 0]' : 0.148555}
{'[6, 6, 0, 6, 6, 6, 25, 25, 0, 28, 0, 2, 0]' : 0.14901}
{'[6, 6, 0, 6, 6, 6, 25, 25, 0, 28, 0, 2, 0]' : 0.151168}
{'[6, 6, 0, 6, 6, 6, 25, 25, 0, 28, 0, 2, 0]' : 0.151608}
{'[6, 6, 0, 6, 6, 6, 25, 25, 0, 28, 0, 2, 0]' : 0.148902}
{'[6, 6, 0, 6, 6, 6, 25, 25, 0, 28, 0, 2, 0]' : 0.149176}
{'[6, 6, 0, 6, 6, 6, 25, 25, 0, 28, 0, 2, 0]' : 0.145679}
{'[6, 6, 0, 6, 6, 6, 25, 25, 0, 28, 0, 2, 0]' : 0.148262}
{'[6, 6, 0, 6, 6, 6, 25, 25, 0, 28, 0, 2, 0]' : 0.149201}
{'[6, 6, 0, 6, 6, 6, 25, 25, 0, 28, 0, 2, 0]' : 0.149486}
{'[6, 6, 0, 6, 6, 6, 25, 25, 0, 28, 0, 2, 0]' : 0.147957}
{'[6, 6, 0, 6, 6, 6, 25, 25, 0, 28, 0, 2, 0]' : 0.149006}
{'[6, 6, 0, 6, 6, 6, 25, 25, 0, 28, 0, 2, 0]' : 0.149308}
{'[6, 6, 0, 6, 6, 6, 25, 25, 0, 28, 0, 2, 0]' : 0.147504}
{'[6, 6, 0, 6, 6, 6, 25, 25, 0, 28, 0, 2, 0]' : 0.149441}
{'[6, 6, 0, 6, 6, 6, 25, 25, 0, 28, 0, 2, 0]' : 0.150155}
{'[6, 6, 0, 6, 6, 6, 25, 25, 0, 28, 0, 2, 0]' : 0.148609}
{'[6, 6, 0, 6, 6, 6, 25, 25, 0, 28, 0, 2, 0]' : 0.148487}
{'[6, 6, 0, 6, 6, 6, 25, 25, 0, 28, 0, 2, 0]' : 0.148679}
{'[6, 6, 0, 6, 6, 6, 25, 25, 0, 28, 0, 2, 0]' : 0.148856}

out:
 ["{'[6, 6, 0, 6, 6, 6, 25, 25, 0, 28, 0, 2, 0]' : 0.15024}", "{'[6, 6, 0, 6, 6, 6, 25, 25, 0, 28, 0, 2, 0]' : 0.145992}", "{'[6, 6, 0, 6, 6, 6, 25, 25, 0, 28, 0, 2, 0]' : 0.144846}", "{'[6, 6, 0, 6, 6, 6, 25, 25, 0, 28, 0, 2, 0]' : 0.145525}", "{'[6, 6, 0, 6, 6, 6, 25, 25, 0, 28, 0, 2, 0]' : 0.148887}", "{'[6, 6, 0, 6, 6, 6, 25, 25, 0, 28, 0, 2, 0]' : 0.150429}", "{'[6, 6, 0, 6, 6, 6, 25, 25, 0, 28, 0, 2, 0]' : 0.151545}", "{'[6, 6, 0, 6, 6, 6, 25, 25, 0, 28, 0, 2, 0]' : 0.149753}", "{'[6, 6, 0, 6, 6, 6, 25, 25, 0, 28, 0, 2, 0]' : 0.148191}", "{'[6, 6, 0, 6, 6, 6, 25, 25, 0, 28, 0, 2, 0]' : 0.145131}", "{'[6, 6, 0, 6, 6, 6, 25, 25, 0, 28, 0, 2, 0]' : 0.148555}", "{'[6, 6, 0, 6, 6, 6, 25, 25, 0, 28, 0, 2, 0]' : 0.14901}", "{'[6, 6, 0, 6, 6, 6, 25, 25, 0, 28, 0, 2, 0]' : 0.151168}", "{'[6, 6, 0, 6, 6, 6, 25, 25, 0, 28, 0, 2, 0]' : 0.151608}", "{'[6, 6, 0, 6, 6, 6, 25, 25, 0, 28, 0, 2, 0]' : 0.148902}", "{'[6, 6, 0, 6, 6, 6, 25, 25, 0, 28, 0, 2, 0]' : 0.149176}", "{'[6, 6, 0, 6, 6, 6, 25, 25, 0, 28, 0, 2, 0]' : 0.145679}", "{'[6, 6, 0, 6, 6, 6, 25, 25, 0, 28, 0, 2, 0]' : 0.148262}", "{'[6, 6, 0, 6, 6, 6, 25, 25, 0, 28, 0, 2, 0]' : 0.149201}", "{'[6, 6, 0, 6, 6, 6, 25, 25, 0, 28, 0, 2, 0]' : 0.149486}", "{'[6, 6, 0, 6, 6, 6, 25, 25, 0, 28, 0, 2, 0]' : 0.147957}", "{'[6, 6, 0, 6, 6, 6, 25, 25, 0, 28, 0, 2, 0]' : 0.149006}", "{'[6, 6, 0, 6, 6, 6, 25, 25, 0, 28, 0, 2, 0]' : 0.149308}", "{'[6, 6, 0, 6, 6, 6, 25, 25, 0, 28, 0, 2, 0]' : 0.147504}", "{'[6, 6, 0, 6, 6, 6, 25, 25, 0, 28, 0, 2, 0]' : 0.149441}", "{'[6, 6, 0, 6, 6, 6, 25, 25, 0, 28, 0, 2, 0]' : 0.150155}", "{'[6, 6, 0, 6, 6, 6, 25, 25, 0, 28, 0, 2, 0]' : 0.148609}", "{'[6, 6, 0, 6, 6, 6, 25, 25, 0, 28, 0, 2, 0]' : 0.148487}", "{'[6, 6, 0, 6, 6, 6, 25, 25, 0, 28, 0, 2, 0]' : 0.148679}", "{'[6, 6, 0, 6, 6, 6, 25, 25, 0, 28, 0, 2, 0]' : 0.148856}"]
returning from 'run': {'[6, 6, 0, 6, 6, 6, 25, 25, 0, 28, 0, 2, 0]': ([0.15024, 0.145992, 0.144846, 0.145525, 0.148887, 0.150429, 0.151545, 0.149753, 0.148191, 0.145131, 0.148555, 0.14901, 0.151168, 0.151608, 0.148902, 0.149176, 0.145679, 0.148262, 0.149201, 0.149486, 0.147957, 0.149006, 0.149308, 0.147504, 0.149441, 0.150155, 0.148609, 0.148487, 0.148679, 0.148856], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 0, 6, 6, 6, 25, 25, 0, 28, 0, 2, 0]': ([0.15024, 0.145992, 0.144846, 0.145525, 0.148887, 0.150429, 0.151545, 0.149753, 0.148191, 0.145131, 0.148555, 0.14901, 0.151168, 0.151608, 0.148902, 0.149176, 0.145679, 0.148262, 0.149201, 0.149486, 0.147957, 0.149006, 0.149308, 0.147504, 0.149441, 0.150155, 0.148609, 0.148487, 0.148679, 0.148856], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	6
        Additions: 		5842
        Multiplications: 	1728
        Divisions: 		0
        Logical: 		0
        Reads: 			8896
        Writes: 		962
        Comparisons:		20
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest87.exe __orio_perftest87.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest87.exe  
Program Test Output: 
{'[6, 6, 6, 5, 6, 6, 29, 25, 0, 29, 0, 0, 0]' : 0.192352}
{'[6, 6, 6, 5, 6, 6, 29, 25, 0, 29, 0, 0, 0]' : 0.19251}
{'[6, 6, 6, 5, 6, 6, 29, 25, 0, 29, 0, 0, 0]' : 0.182905}
{'[6, 6, 6, 5, 6, 6, 29, 25, 0, 29, 0, 0, 0]' : 0.171517}
{'[6, 6, 6, 5, 6, 6, 29, 25, 0, 29, 0, 0, 0]' : 0.172909}
{'[6, 6, 6, 5, 6, 6, 29, 25, 0, 29, 0, 0, 0]' : 0.175366}
{'[6, 6, 6, 5, 6, 6, 29, 25, 0, 29, 0, 0, 0]' : 0.175232}
{'[6, 6, 6, 5, 6, 6, 29, 25, 0, 29, 0, 0, 0]' : 0.176082}
{'[6, 6, 6, 5, 6, 6, 29, 25, 0, 29, 0, 0, 0]' : 0.175794}
{'[6, 6, 6, 5, 6, 6, 29, 25, 0, 29, 0, 0, 0]' : 0.172777}
{'[6, 6, 6, 5, 6, 6, 29, 25, 0, 29, 0, 0, 0]' : 0.174054}
{'[6, 6, 6, 5, 6, 6, 29, 25, 0, 29, 0, 0, 0]' : 0.175931}
{'[6, 6, 6, 5, 6, 6, 29, 25, 0, 29, 0, 0, 0]' : 0.175921}
{'[6, 6, 6, 5, 6, 6, 29, 25, 0, 29, 0, 0, 0]' : 0.176194}
{'[6, 6, 6, 5, 6, 6, 29, 25, 0, 29, 0, 0, 0]' : 0.1759}
{'[6, 6, 6, 5, 6, 6, 29, 25, 0, 29, 0, 0, 0]' : 0.170896}
{'[6, 6, 6, 5, 6, 6, 29, 25, 0, 29, 0, 0, 0]' : 0.171207}
{'[6, 6, 6, 5, 6, 6, 29, 25, 0, 29, 0, 0, 0]' : 0.172009}
{'[6, 6, 6, 5, 6, 6, 29, 25, 0, 29, 0, 0, 0]' : 0.172406}
{'[6, 6, 6, 5, 6, 6, 29, 25, 0, 29, 0, 0, 0]' : 0.172663}
{'[6, 6, 6, 5, 6, 6, 29, 25, 0, 29, 0, 0, 0]' : 0.17198}
{'[6, 6, 6, 5, 6, 6, 29, 25, 0, 29, 0, 0, 0]' : 0.171189}
{'[6, 6, 6, 5, 6, 6, 29, 25, 0, 29, 0, 0, 0]' : 0.169898}
{'[6, 6, 6, 5, 6, 6, 29, 25, 0, 29, 0, 0, 0]' : 0.167803}
{'[6, 6, 6, 5, 6, 6, 29, 25, 0, 29, 0, 0, 0]' : 0.171583}
{'[6, 6, 6, 5, 6, 6, 29, 25, 0, 29, 0, 0, 0]' : 0.175947}
{'[6, 6, 6, 5, 6, 6, 29, 25, 0, 29, 0, 0, 0]' : 0.175861}
{'[6, 6, 6, 5, 6, 6, 29, 25, 0, 29, 0, 0, 0]' : 0.175792}
{'[6, 6, 6, 5, 6, 6, 29, 25, 0, 29, 0, 0, 0]' : 0.169817}
{'[6, 6, 6, 5, 6, 6, 29, 25, 0, 29, 0, 0, 0]' : 0.167977}

out:
 ["{'[6, 6, 6, 5, 6, 6, 29, 25, 0, 29, 0, 0, 0]' : 0.192352}", "{'[6, 6, 6, 5, 6, 6, 29, 25, 0, 29, 0, 0, 0]' : 0.19251}", "{'[6, 6, 6, 5, 6, 6, 29, 25, 0, 29, 0, 0, 0]' : 0.182905}", "{'[6, 6, 6, 5, 6, 6, 29, 25, 0, 29, 0, 0, 0]' : 0.171517}", "{'[6, 6, 6, 5, 6, 6, 29, 25, 0, 29, 0, 0, 0]' : 0.172909}", "{'[6, 6, 6, 5, 6, 6, 29, 25, 0, 29, 0, 0, 0]' : 0.175366}", "{'[6, 6, 6, 5, 6, 6, 29, 25, 0, 29, 0, 0, 0]' : 0.175232}", "{'[6, 6, 6, 5, 6, 6, 29, 25, 0, 29, 0, 0, 0]' : 0.176082}", "{'[6, 6, 6, 5, 6, 6, 29, 25, 0, 29, 0, 0, 0]' : 0.175794}", "{'[6, 6, 6, 5, 6, 6, 29, 25, 0, 29, 0, 0, 0]' : 0.172777}", "{'[6, 6, 6, 5, 6, 6, 29, 25, 0, 29, 0, 0, 0]' : 0.174054}", "{'[6, 6, 6, 5, 6, 6, 29, 25, 0, 29, 0, 0, 0]' : 0.175931}", "{'[6, 6, 6, 5, 6, 6, 29, 25, 0, 29, 0, 0, 0]' : 0.175921}", "{'[6, 6, 6, 5, 6, 6, 29, 25, 0, 29, 0, 0, 0]' : 0.176194}", "{'[6, 6, 6, 5, 6, 6, 29, 25, 0, 29, 0, 0, 0]' : 0.1759}", "{'[6, 6, 6, 5, 6, 6, 29, 25, 0, 29, 0, 0, 0]' : 0.170896}", "{'[6, 6, 6, 5, 6, 6, 29, 25, 0, 29, 0, 0, 0]' : 0.171207}", "{'[6, 6, 6, 5, 6, 6, 29, 25, 0, 29, 0, 0, 0]' : 0.172009}", "{'[6, 6, 6, 5, 6, 6, 29, 25, 0, 29, 0, 0, 0]' : 0.172406}", "{'[6, 6, 6, 5, 6, 6, 29, 25, 0, 29, 0, 0, 0]' : 0.172663}", "{'[6, 6, 6, 5, 6, 6, 29, 25, 0, 29, 0, 0, 0]' : 0.17198}", "{'[6, 6, 6, 5, 6, 6, 29, 25, 0, 29, 0, 0, 0]' : 0.171189}", "{'[6, 6, 6, 5, 6, 6, 29, 25, 0, 29, 0, 0, 0]' : 0.169898}", "{'[6, 6, 6, 5, 6, 6, 29, 25, 0, 29, 0, 0, 0]' : 0.167803}", "{'[6, 6, 6, 5, 6, 6, 29, 25, 0, 29, 0, 0, 0]' : 0.171583}", "{'[6, 6, 6, 5, 6, 6, 29, 25, 0, 29, 0, 0, 0]' : 0.175947}", "{'[6, 6, 6, 5, 6, 6, 29, 25, 0, 29, 0, 0, 0]' : 0.175861}", "{'[6, 6, 6, 5, 6, 6, 29, 25, 0, 29, 0, 0, 0]' : 0.175792}", "{'[6, 6, 6, 5, 6, 6, 29, 25, 0, 29, 0, 0, 0]' : 0.169817}", "{'[6, 6, 6, 5, 6, 6, 29, 25, 0, 29, 0, 0, 0]' : 0.167977}"]
returning from 'run': {'[6, 6, 6, 5, 6, 6, 29, 25, 0, 29, 0, 0, 0]': ([0.192352, 0.19251, 0.182905, 0.171517, 0.172909, 0.175366, 0.175232, 0.176082, 0.175794, 0.172777, 0.174054, 0.175931, 0.175921, 0.176194, 0.1759, 0.170896, 0.171207, 0.172009, 0.172406, 0.172663, 0.17198, 0.171189, 0.169898, 0.167803, 0.171583, 0.175947, 0.175861, 0.175792, 0.169817, 0.167977], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 6, 5, 6, 6, 29, 25, 0, 29, 0, 0, 0]': ([0.192352, 0.19251, 0.182905, 0.171517, 0.172909, 0.175366, 0.175232, 0.176082, 0.175794, 0.172777, 0.174054, 0.175931, 0.175921, 0.176194, 0.1759, 0.170896, 0.171207, 0.172009, 0.172406, 0.172663, 0.17198, 0.171189, 0.169898, 0.167803, 0.171583, 0.175947, 0.175861, 0.175792, 0.169817, 0.167977], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	6
        Additions: 		2504
        Multiplications: 	826
        Divisions: 		0
        Logical: 		0
        Reads: 			4356
        Writes: 		490
        Comparisons:		24
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest88.exe __orio_perftest88.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest88.exe  
Program Test Output: 
{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 4, 2, 0, 0]' : 0.206612}
{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 4, 2, 0, 0]' : 0.190216}
{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 4, 2, 0, 0]' : 0.18008}
{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 4, 2, 0, 0]' : 0.180129}
{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 4, 2, 0, 0]' : 0.179256}
{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 4, 2, 0, 0]' : 0.180243}
{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 4, 2, 0, 0]' : 0.179923}
{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 4, 2, 0, 0]' : 0.180843}
{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 4, 2, 0, 0]' : 0.179965}
{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 4, 2, 0, 0]' : 0.18081}
{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 4, 2, 0, 0]' : 0.18006}
{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 4, 2, 0, 0]' : 0.181264}
{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 4, 2, 0, 0]' : 0.180894}
{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 4, 2, 0, 0]' : 0.180395}
{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 4, 2, 0, 0]' : 0.180398}
{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 4, 2, 0, 0]' : 0.180516}
{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 4, 2, 0, 0]' : 0.179406}
{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 4, 2, 0, 0]' : 0.18087}
{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 4, 2, 0, 0]' : 0.180598}
{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 4, 2, 0, 0]' : 0.180557}
{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 4, 2, 0, 0]' : 0.179738}
{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 4, 2, 0, 0]' : 0.180436}
{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 4, 2, 0, 0]' : 0.180478}
{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 4, 2, 0, 0]' : 0.180356}
{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 4, 2, 0, 0]' : 0.179641}
{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 4, 2, 0, 0]' : 0.180699}
{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 4, 2, 0, 0]' : 0.179792}
{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 4, 2, 0, 0]' : 0.180425}
{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 4, 2, 0, 0]' : 0.179744}
{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 4, 2, 0, 0]' : 0.180766}

out:
 ["{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 4, 2, 0, 0]' : 0.206612}", "{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 4, 2, 0, 0]' : 0.190216}", "{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 4, 2, 0, 0]' : 0.18008}", "{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 4, 2, 0, 0]' : 0.180129}", "{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 4, 2, 0, 0]' : 0.179256}", "{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 4, 2, 0, 0]' : 0.180243}", "{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 4, 2, 0, 0]' : 0.179923}", "{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 4, 2, 0, 0]' : 0.180843}", "{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 4, 2, 0, 0]' : 0.179965}", "{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 4, 2, 0, 0]' : 0.18081}", "{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 4, 2, 0, 0]' : 0.18006}", "{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 4, 2, 0, 0]' : 0.181264}", "{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 4, 2, 0, 0]' : 0.180894}", "{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 4, 2, 0, 0]' : 0.180395}", "{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 4, 2, 0, 0]' : 0.180398}", "{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 4, 2, 0, 0]' : 0.180516}", "{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 4, 2, 0, 0]' : 0.179406}", "{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 4, 2, 0, 0]' : 0.18087}", "{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 4, 2, 0, 0]' : 0.180598}", "{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 4, 2, 0, 0]' : 0.180557}", "{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 4, 2, 0, 0]' : 0.179738}", "{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 4, 2, 0, 0]' : 0.180436}", "{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 4, 2, 0, 0]' : 0.180478}", "{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 4, 2, 0, 0]' : 0.180356}", "{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 4, 2, 0, 0]' : 0.179641}", "{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 4, 2, 0, 0]' : 0.180699}", "{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 4, 2, 0, 0]' : 0.179792}", "{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 4, 2, 0, 0]' : 0.180425}", "{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 4, 2, 0, 0]' : 0.179744}", "{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 4, 2, 0, 0]' : 0.180766}"]
returning from 'run': {'[6, 6, 0, 6, 6, 6, 0, 25, 0, 4, 2, 0, 0]': ([0.206612, 0.190216, 0.18008, 0.180129, 0.179256, 0.180243, 0.179923, 0.180843, 0.179965, 0.18081, 0.18006, 0.181264, 0.180894, 0.180395, 0.180398, 0.180516, 0.179406, 0.18087, 0.180598, 0.180557, 0.179738, 0.180436, 0.180478, 0.180356, 0.179641, 0.180699, 0.179792, 0.180425, 0.179744, 0.180766], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 0, 6, 6, 6, 0, 25, 0, 4, 2, 0, 0]': ([0.206612, 0.190216, 0.18008, 0.180129, 0.179256, 0.180243, 0.179923, 0.180843, 0.179965, 0.18081, 0.18006, 0.181264, 0.180894, 0.180395, 0.180398, 0.180516, 0.179406, 0.18087, 0.180598, 0.180557, 0.179738, 0.180436, 0.180478, 0.180356, 0.179641, 0.180699, 0.179792, 0.180425, 0.179744, 0.180766], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	26
        Max loop nest depth: 	5
        Additions: 		11871
        Multiplications: 	3540
        Divisions: 		0
        Logical: 		0
        Reads: 			17940
        Writes: 		1851
        Comparisons:		26
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest89.exe __orio_perftest89.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest89.exe  
Program Test Output: 
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 27, 2, 0, 0]' : 0.226402}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 27, 2, 0, 0]' : 0.210494}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 27, 2, 0, 0]' : 0.196764}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 27, 2, 0, 0]' : 0.196122}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 27, 2, 0, 0]' : 0.19603}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 27, 2, 0, 0]' : 0.195521}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 27, 2, 0, 0]' : 0.197065}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 27, 2, 0, 0]' : 0.195579}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 27, 2, 0, 0]' : 0.194869}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 27, 2, 0, 0]' : 0.195479}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 27, 2, 0, 0]' : 0.197131}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 27, 2, 0, 0]' : 0.196927}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 27, 2, 0, 0]' : 0.197052}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 27, 2, 0, 0]' : 0.195497}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 27, 2, 0, 0]' : 0.196131}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 27, 2, 0, 0]' : 0.195302}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 27, 2, 0, 0]' : 0.195689}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 27, 2, 0, 0]' : 0.194829}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 27, 2, 0, 0]' : 0.196116}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 27, 2, 0, 0]' : 0.196433}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 27, 2, 0, 0]' : 0.196217}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 27, 2, 0, 0]' : 0.195621}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 27, 2, 0, 0]' : 0.196038}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 27, 2, 0, 0]' : 0.19627}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 27, 2, 0, 0]' : 0.195387}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 27, 2, 0, 0]' : 0.195503}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 27, 2, 0, 0]' : 0.196085}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 27, 2, 0, 0]' : 0.196082}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 27, 2, 0, 0]' : 0.19543}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 27, 2, 0, 0]' : 0.195925}

out:
 ["{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 27, 2, 0, 0]' : 0.226402}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 27, 2, 0, 0]' : 0.210494}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 27, 2, 0, 0]' : 0.196764}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 27, 2, 0, 0]' : 0.196122}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 27, 2, 0, 0]' : 0.19603}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 27, 2, 0, 0]' : 0.195521}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 27, 2, 0, 0]' : 0.197065}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 27, 2, 0, 0]' : 0.195579}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 27, 2, 0, 0]' : 0.194869}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 27, 2, 0, 0]' : 0.195479}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 27, 2, 0, 0]' : 0.197131}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 27, 2, 0, 0]' : 0.196927}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 27, 2, 0, 0]' : 0.197052}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 27, 2, 0, 0]' : 0.195497}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 27, 2, 0, 0]' : 0.196131}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 27, 2, 0, 0]' : 0.195302}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 27, 2, 0, 0]' : 0.195689}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 27, 2, 0, 0]' : 0.194829}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 27, 2, 0, 0]' : 0.196116}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 27, 2, 0, 0]' : 0.196433}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 27, 2, 0, 0]' : 0.196217}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 27, 2, 0, 0]' : 0.195621}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 27, 2, 0, 0]' : 0.196038}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 27, 2, 0, 0]' : 0.19627}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 27, 2, 0, 0]' : 0.195387}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 27, 2, 0, 0]' : 0.195503}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 27, 2, 0, 0]' : 0.196085}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 27, 2, 0, 0]' : 0.196082}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 27, 2, 0, 0]' : 0.19543}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 27, 2, 0, 0]' : 0.195925}"]
returning from 'run': {'[6, 6, 6, 0, 6, 6, 0, 25, 0, 27, 2, 0, 0]': ([0.226402, 0.210494, 0.196764, 0.196122, 0.19603, 0.195521, 0.197065, 0.195579, 0.194869, 0.195479, 0.197131, 0.196927, 0.197052, 0.195497, 0.196131, 0.195302, 0.195689, 0.194829, 0.196116, 0.196433, 0.196217, 0.195621, 0.196038, 0.19627, 0.195387, 0.195503, 0.196085, 0.196082, 0.19543, 0.195925], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 6, 0, 6, 6, 0, 25, 0, 27, 2, 0, 0]': ([0.226402, 0.210494, 0.196764, 0.196122, 0.19603, 0.195521, 0.197065, 0.195579, 0.194869, 0.195479, 0.197131, 0.196927, 0.197052, 0.195497, 0.196131, 0.195302, 0.195689, 0.194829, 0.196116, 0.196433, 0.196217, 0.195621, 0.196038, 0.19627, 0.195387, 0.195503, 0.196085, 0.196082, 0.19543, 0.195925], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	72
        Max loop nest depth: 	6
        Additions: 		6908
        Multiplications: 	1944
        Divisions: 		0
        Logical: 		0
        Reads: 			10438
        Writes: 		1173
        Comparisons:		72
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest90.exe __orio_perftest90.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest90.exe  
Program Test Output: 
{'[6, 6, 6, 5, 6, 6, 28, 25, 0, 1, 0, 0, 2]' : 0.193121}
{'[6, 6, 6, 5, 6, 6, 28, 25, 0, 1, 0, 0, 2]' : 0.193365}
{'[6, 6, 6, 5, 6, 6, 28, 25, 0, 1, 0, 0, 2]' : 0.184644}
{'[6, 6, 6, 5, 6, 6, 28, 25, 0, 1, 0, 0, 2]' : 0.172506}
{'[6, 6, 6, 5, 6, 6, 28, 25, 0, 1, 0, 0, 2]' : 0.174918}
{'[6, 6, 6, 5, 6, 6, 28, 25, 0, 1, 0, 0, 2]' : 0.176331}
{'[6, 6, 6, 5, 6, 6, 28, 25, 0, 1, 0, 0, 2]' : 0.176143}
{'[6, 6, 6, 5, 6, 6, 28, 25, 0, 1, 0, 0, 2]' : 0.176261}
{'[6, 6, 6, 5, 6, 6, 28, 25, 0, 1, 0, 0, 2]' : 0.176199}
{'[6, 6, 6, 5, 6, 6, 28, 25, 0, 1, 0, 0, 2]' : 0.176056}
{'[6, 6, 6, 5, 6, 6, 28, 25, 0, 1, 0, 0, 2]' : 0.176122}
{'[6, 6, 6, 5, 6, 6, 28, 25, 0, 1, 0, 0, 2]' : 0.176291}
{'[6, 6, 6, 5, 6, 6, 28, 25, 0, 1, 0, 0, 2]' : 0.176496}
{'[6, 6, 6, 5, 6, 6, 28, 25, 0, 1, 0, 0, 2]' : 0.176064}
{'[6, 6, 6, 5, 6, 6, 28, 25, 0, 1, 0, 0, 2]' : 0.176171}
{'[6, 6, 6, 5, 6, 6, 28, 25, 0, 1, 0, 0, 2]' : 0.175535}
{'[6, 6, 6, 5, 6, 6, 28, 25, 0, 1, 0, 0, 2]' : 0.17601}
{'[6, 6, 6, 5, 6, 6, 28, 25, 0, 1, 0, 0, 2]' : 0.176191}
{'[6, 6, 6, 5, 6, 6, 28, 25, 0, 1, 0, 0, 2]' : 0.176358}
{'[6, 6, 6, 5, 6, 6, 28, 25, 0, 1, 0, 0, 2]' : 0.176028}
{'[6, 6, 6, 5, 6, 6, 28, 25, 0, 1, 0, 0, 2]' : 0.175926}
{'[6, 6, 6, 5, 6, 6, 28, 25, 0, 1, 0, 0, 2]' : 0.172555}
{'[6, 6, 6, 5, 6, 6, 28, 25, 0, 1, 0, 0, 2]' : 0.172322}
{'[6, 6, 6, 5, 6, 6, 28, 25, 0, 1, 0, 0, 2]' : 0.171762}
{'[6, 6, 6, 5, 6, 6, 28, 25, 0, 1, 0, 0, 2]' : 0.172975}
{'[6, 6, 6, 5, 6, 6, 28, 25, 0, 1, 0, 0, 2]' : 0.171884}
{'[6, 6, 6, 5, 6, 6, 28, 25, 0, 1, 0, 0, 2]' : 0.17157}
{'[6, 6, 6, 5, 6, 6, 28, 25, 0, 1, 0, 0, 2]' : 0.174564}
{'[6, 6, 6, 5, 6, 6, 28, 25, 0, 1, 0, 0, 2]' : 0.172304}
{'[6, 6, 6, 5, 6, 6, 28, 25, 0, 1, 0, 0, 2]' : 0.171962}

out:
 ["{'[6, 6, 6, 5, 6, 6, 28, 25, 0, 1, 0, 0, 2]' : 0.193121}", "{'[6, 6, 6, 5, 6, 6, 28, 25, 0, 1, 0, 0, 2]' : 0.193365}", "{'[6, 6, 6, 5, 6, 6, 28, 25, 0, 1, 0, 0, 2]' : 0.184644}", "{'[6, 6, 6, 5, 6, 6, 28, 25, 0, 1, 0, 0, 2]' : 0.172506}", "{'[6, 6, 6, 5, 6, 6, 28, 25, 0, 1, 0, 0, 2]' : 0.174918}", "{'[6, 6, 6, 5, 6, 6, 28, 25, 0, 1, 0, 0, 2]' : 0.176331}", "{'[6, 6, 6, 5, 6, 6, 28, 25, 0, 1, 0, 0, 2]' : 0.176143}", "{'[6, 6, 6, 5, 6, 6, 28, 25, 0, 1, 0, 0, 2]' : 0.176261}", "{'[6, 6, 6, 5, 6, 6, 28, 25, 0, 1, 0, 0, 2]' : 0.176199}", "{'[6, 6, 6, 5, 6, 6, 28, 25, 0, 1, 0, 0, 2]' : 0.176056}", "{'[6, 6, 6, 5, 6, 6, 28, 25, 0, 1, 0, 0, 2]' : 0.176122}", "{'[6, 6, 6, 5, 6, 6, 28, 25, 0, 1, 0, 0, 2]' : 0.176291}", "{'[6, 6, 6, 5, 6, 6, 28, 25, 0, 1, 0, 0, 2]' : 0.176496}", "{'[6, 6, 6, 5, 6, 6, 28, 25, 0, 1, 0, 0, 2]' : 0.176064}", "{'[6, 6, 6, 5, 6, 6, 28, 25, 0, 1, 0, 0, 2]' : 0.176171}", "{'[6, 6, 6, 5, 6, 6, 28, 25, 0, 1, 0, 0, 2]' : 0.175535}", "{'[6, 6, 6, 5, 6, 6, 28, 25, 0, 1, 0, 0, 2]' : 0.17601}", "{'[6, 6, 6, 5, 6, 6, 28, 25, 0, 1, 0, 0, 2]' : 0.176191}", "{'[6, 6, 6, 5, 6, 6, 28, 25, 0, 1, 0, 0, 2]' : 0.176358}", "{'[6, 6, 6, 5, 6, 6, 28, 25, 0, 1, 0, 0, 2]' : 0.176028}", "{'[6, 6, 6, 5, 6, 6, 28, 25, 0, 1, 0, 0, 2]' : 0.175926}", "{'[6, 6, 6, 5, 6, 6, 28, 25, 0, 1, 0, 0, 2]' : 0.172555}", "{'[6, 6, 6, 5, 6, 6, 28, 25, 0, 1, 0, 0, 2]' : 0.172322}", "{'[6, 6, 6, 5, 6, 6, 28, 25, 0, 1, 0, 0, 2]' : 0.171762}", "{'[6, 6, 6, 5, 6, 6, 28, 25, 0, 1, 0, 0, 2]' : 0.172975}", "{'[6, 6, 6, 5, 6, 6, 28, 25, 0, 1, 0, 0, 2]' : 0.171884}", "{'[6, 6, 6, 5, 6, 6, 28, 25, 0, 1, 0, 0, 2]' : 0.17157}", "{'[6, 6, 6, 5, 6, 6, 28, 25, 0, 1, 0, 0, 2]' : 0.174564}", "{'[6, 6, 6, 5, 6, 6, 28, 25, 0, 1, 0, 0, 2]' : 0.172304}", "{'[6, 6, 6, 5, 6, 6, 28, 25, 0, 1, 0, 0, 2]' : 0.171962}"]
returning from 'run': {'[6, 6, 6, 5, 6, 6, 28, 25, 0, 1, 0, 0, 2]': ([0.193121, 0.193365, 0.184644, 0.172506, 0.174918, 0.176331, 0.176143, 0.176261, 0.176199, 0.176056, 0.176122, 0.176291, 0.176496, 0.176064, 0.176171, 0.175535, 0.17601, 0.176191, 0.176358, 0.176028, 0.175926, 0.172555, 0.172322, 0.171762, 0.172975, 0.171884, 0.17157, 0.174564, 0.172304, 0.171962], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 6, 5, 6, 6, 28, 25, 0, 1, 0, 0, 2]': ([0.193121, 0.193365, 0.184644, 0.172506, 0.174918, 0.176331, 0.176143, 0.176261, 0.176199, 0.176056, 0.176122, 0.176291, 0.176496, 0.176064, 0.176171, 0.175535, 0.17601, 0.176191, 0.176358, 0.176028, 0.175926, 0.172555, 0.172322, 0.171762, 0.172975, 0.171884, 0.17157, 0.174564, 0.172304, 0.171962], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	70
        Max loop nest depth: 	5
        Additions: 		11799
        Multiplications: 	3402
        Divisions: 		0
        Logical: 		0
        Reads: 			17656
        Writes: 		1869
        Comparisons:		70
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest91.exe __orio_perftest91.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest91.exe  
Program Test Output: 
{'[6, 6, 6, 0, 6, 6, 0, 25, 28, 0, 0, 2, 0]' : 0.180625}
{'[6, 6, 6, 0, 6, 6, 0, 25, 28, 0, 0, 2, 0]' : 0.175826}
{'[6, 6, 6, 0, 6, 6, 0, 25, 28, 0, 0, 2, 0]' : 0.153065}
{'[6, 6, 6, 0, 6, 6, 0, 25, 28, 0, 0, 2, 0]' : 0.153349}
{'[6, 6, 6, 0, 6, 6, 0, 25, 28, 0, 0, 2, 0]' : 0.153409}
{'[6, 6, 6, 0, 6, 6, 0, 25, 28, 0, 0, 2, 0]' : 0.153902}
{'[6, 6, 6, 0, 6, 6, 0, 25, 28, 0, 0, 2, 0]' : 0.153468}
{'[6, 6, 6, 0, 6, 6, 0, 25, 28, 0, 0, 2, 0]' : 0.153475}
{'[6, 6, 6, 0, 6, 6, 0, 25, 28, 0, 0, 2, 0]' : 0.153524}
{'[6, 6, 6, 0, 6, 6, 0, 25, 28, 0, 0, 2, 0]' : 0.153614}
{'[6, 6, 6, 0, 6, 6, 0, 25, 28, 0, 0, 2, 0]' : 0.15363}
{'[6, 6, 6, 0, 6, 6, 0, 25, 28, 0, 0, 2, 0]' : 0.153808}
{'[6, 6, 6, 0, 6, 6, 0, 25, 28, 0, 0, 2, 0]' : 0.153702}
{'[6, 6, 6, 0, 6, 6, 0, 25, 28, 0, 0, 2, 0]' : 0.15374}
{'[6, 6, 6, 0, 6, 6, 0, 25, 28, 0, 0, 2, 0]' : 0.153552}
{'[6, 6, 6, 0, 6, 6, 0, 25, 28, 0, 0, 2, 0]' : 0.154231}
{'[6, 6, 6, 0, 6, 6, 0, 25, 28, 0, 0, 2, 0]' : 0.154188}
{'[6, 6, 6, 0, 6, 6, 0, 25, 28, 0, 0, 2, 0]' : 0.154245}
{'[6, 6, 6, 0, 6, 6, 0, 25, 28, 0, 0, 2, 0]' : 0.153551}
{'[6, 6, 6, 0, 6, 6, 0, 25, 28, 0, 0, 2, 0]' : 0.153495}
{'[6, 6, 6, 0, 6, 6, 0, 25, 28, 0, 0, 2, 0]' : 0.155933}
{'[6, 6, 6, 0, 6, 6, 0, 25, 28, 0, 0, 2, 0]' : 0.158994}
{'[6, 6, 6, 0, 6, 6, 0, 25, 28, 0, 0, 2, 0]' : 0.159349}
{'[6, 6, 6, 0, 6, 6, 0, 25, 28, 0, 0, 2, 0]' : 0.159693}
{'[6, 6, 6, 0, 6, 6, 0, 25, 28, 0, 0, 2, 0]' : 0.159755}
{'[6, 6, 6, 0, 6, 6, 0, 25, 28, 0, 0, 2, 0]' : 0.159994}
{'[6, 6, 6, 0, 6, 6, 0, 25, 28, 0, 0, 2, 0]' : 0.159319}
{'[6, 6, 6, 0, 6, 6, 0, 25, 28, 0, 0, 2, 0]' : 0.159015}
{'[6, 6, 6, 0, 6, 6, 0, 25, 28, 0, 0, 2, 0]' : 0.159246}
{'[6, 6, 6, 0, 6, 6, 0, 25, 28, 0, 0, 2, 0]' : 0.159125}

out:
 ["{'[6, 6, 6, 0, 6, 6, 0, 25, 28, 0, 0, 2, 0]' : 0.180625}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 28, 0, 0, 2, 0]' : 0.175826}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 28, 0, 0, 2, 0]' : 0.153065}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 28, 0, 0, 2, 0]' : 0.153349}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 28, 0, 0, 2, 0]' : 0.153409}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 28, 0, 0, 2, 0]' : 0.153902}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 28, 0, 0, 2, 0]' : 0.153468}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 28, 0, 0, 2, 0]' : 0.153475}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 28, 0, 0, 2, 0]' : 0.153524}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 28, 0, 0, 2, 0]' : 0.153614}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 28, 0, 0, 2, 0]' : 0.15363}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 28, 0, 0, 2, 0]' : 0.153808}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 28, 0, 0, 2, 0]' : 0.153702}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 28, 0, 0, 2, 0]' : 0.15374}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 28, 0, 0, 2, 0]' : 0.153552}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 28, 0, 0, 2, 0]' : 0.154231}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 28, 0, 0, 2, 0]' : 0.154188}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 28, 0, 0, 2, 0]' : 0.154245}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 28, 0, 0, 2, 0]' : 0.153551}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 28, 0, 0, 2, 0]' : 0.153495}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 28, 0, 0, 2, 0]' : 0.155933}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 28, 0, 0, 2, 0]' : 0.158994}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 28, 0, 0, 2, 0]' : 0.159349}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 28, 0, 0, 2, 0]' : 0.159693}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 28, 0, 0, 2, 0]' : 0.159755}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 28, 0, 0, 2, 0]' : 0.159994}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 28, 0, 0, 2, 0]' : 0.159319}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 28, 0, 0, 2, 0]' : 0.159015}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 28, 0, 0, 2, 0]' : 0.159246}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 28, 0, 0, 2, 0]' : 0.159125}"]
returning from 'run': {'[6, 6, 6, 0, 6, 6, 0, 25, 28, 0, 0, 2, 0]': ([0.180625, 0.175826, 0.153065, 0.153349, 0.153409, 0.153902, 0.153468, 0.153475, 0.153524, 0.153614, 0.15363, 0.153808, 0.153702, 0.15374, 0.153552, 0.154231, 0.154188, 0.154245, 0.153551, 0.153495, 0.155933, 0.158994, 0.159349, 0.159693, 0.159755, 0.159994, 0.159319, 0.159015, 0.159246, 0.159125], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 6, 0, 6, 6, 0, 25, 28, 0, 0, 2, 0]': ([0.180625, 0.175826, 0.153065, 0.153349, 0.153409, 0.153902, 0.153468, 0.153475, 0.153524, 0.153614, 0.15363, 0.153808, 0.153702, 0.15374, 0.153552, 0.154231, 0.154188, 0.154245, 0.153551, 0.153495, 0.155933, 0.158994, 0.159349, 0.159693, 0.159755, 0.159994, 0.159319, 0.159015, 0.159246, 0.159125], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	5
        Additions: 		1008
        Multiplications: 	324
        Divisions: 		0
        Logical: 		0
        Reads: 			1788
        Writes: 		222
        Comparisons:		16
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest92.exe __orio_perftest92.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest92.exe  
Program Test Output: 
{'[6, 6, 0, 0, 6, 6, 0, 25, 3, 0, 0, 0, 0]' : 0.169436}
{'[6, 6, 0, 0, 6, 6, 0, 25, 3, 0, 0, 0, 0]' : 0.169308}
{'[6, 6, 0, 0, 6, 6, 0, 25, 3, 0, 0, 0, 0]' : 0.169106}
{'[6, 6, 0, 0, 6, 6, 0, 25, 3, 0, 0, 0, 0]' : 0.15307}
{'[6, 6, 0, 0, 6, 6, 0, 25, 3, 0, 0, 0, 0]' : 0.151826}
{'[6, 6, 0, 0, 6, 6, 0, 25, 3, 0, 0, 0, 0]' : 0.15179}
{'[6, 6, 0, 0, 6, 6, 0, 25, 3, 0, 0, 0, 0]' : 0.152527}
{'[6, 6, 0, 0, 6, 6, 0, 25, 3, 0, 0, 0, 0]' : 0.151806}
{'[6, 6, 0, 0, 6, 6, 0, 25, 3, 0, 0, 0, 0]' : 0.151883}
{'[6, 6, 0, 0, 6, 6, 0, 25, 3, 0, 0, 0, 0]' : 0.151959}
{'[6, 6, 0, 0, 6, 6, 0, 25, 3, 0, 0, 0, 0]' : 0.152224}
{'[6, 6, 0, 0, 6, 6, 0, 25, 3, 0, 0, 0, 0]' : 0.151871}
{'[6, 6, 0, 0, 6, 6, 0, 25, 3, 0, 0, 0, 0]' : 0.15178}
{'[6, 6, 0, 0, 6, 6, 0, 25, 3, 0, 0, 0, 0]' : 0.152191}
{'[6, 6, 0, 0, 6, 6, 0, 25, 3, 0, 0, 0, 0]' : 0.151241}
{'[6, 6, 0, 0, 6, 6, 0, 25, 3, 0, 0, 0, 0]' : 0.148201}
{'[6, 6, 0, 0, 6, 6, 0, 25, 3, 0, 0, 0, 0]' : 0.149543}
{'[6, 6, 0, 0, 6, 6, 0, 25, 3, 0, 0, 0, 0]' : 0.155742}
{'[6, 6, 0, 0, 6, 6, 0, 25, 3, 0, 0, 0, 0]' : 0.155172}
{'[6, 6, 0, 0, 6, 6, 0, 25, 3, 0, 0, 0, 0]' : 0.15502}
{'[6, 6, 0, 0, 6, 6, 0, 25, 3, 0, 0, 0, 0]' : 0.152545}
{'[6, 6, 0, 0, 6, 6, 0, 25, 3, 0, 0, 0, 0]' : 0.155129}
{'[6, 6, 0, 0, 6, 6, 0, 25, 3, 0, 0, 0, 0]' : 0.155019}
{'[6, 6, 0, 0, 6, 6, 0, 25, 3, 0, 0, 0, 0]' : 0.155125}
{'[6, 6, 0, 0, 6, 6, 0, 25, 3, 0, 0, 0, 0]' : 0.155429}
{'[6, 6, 0, 0, 6, 6, 0, 25, 3, 0, 0, 0, 0]' : 0.152201}
{'[6, 6, 0, 0, 6, 6, 0, 25, 3, 0, 0, 0, 0]' : 0.151929}
{'[6, 6, 0, 0, 6, 6, 0, 25, 3, 0, 0, 0, 0]' : 0.151782}
{'[6, 6, 0, 0, 6, 6, 0, 25, 3, 0, 0, 0, 0]' : 0.150832}
{'[6, 6, 0, 0, 6, 6, 0, 25, 3, 0, 0, 0, 0]' : 0.148973}

out:
 ["{'[6, 6, 0, 0, 6, 6, 0, 25, 3, 0, 0, 0, 0]' : 0.169436}", "{'[6, 6, 0, 0, 6, 6, 0, 25, 3, 0, 0, 0, 0]' : 0.169308}", "{'[6, 6, 0, 0, 6, 6, 0, 25, 3, 0, 0, 0, 0]' : 0.169106}", "{'[6, 6, 0, 0, 6, 6, 0, 25, 3, 0, 0, 0, 0]' : 0.15307}", "{'[6, 6, 0, 0, 6, 6, 0, 25, 3, 0, 0, 0, 0]' : 0.151826}", "{'[6, 6, 0, 0, 6, 6, 0, 25, 3, 0, 0, 0, 0]' : 0.15179}", "{'[6, 6, 0, 0, 6, 6, 0, 25, 3, 0, 0, 0, 0]' : 0.152527}", "{'[6, 6, 0, 0, 6, 6, 0, 25, 3, 0, 0, 0, 0]' : 0.151806}", "{'[6, 6, 0, 0, 6, 6, 0, 25, 3, 0, 0, 0, 0]' : 0.151883}", "{'[6, 6, 0, 0, 6, 6, 0, 25, 3, 0, 0, 0, 0]' : 0.151959}", "{'[6, 6, 0, 0, 6, 6, 0, 25, 3, 0, 0, 0, 0]' : 0.152224}", "{'[6, 6, 0, 0, 6, 6, 0, 25, 3, 0, 0, 0, 0]' : 0.151871}", "{'[6, 6, 0, 0, 6, 6, 0, 25, 3, 0, 0, 0, 0]' : 0.15178}", "{'[6, 6, 0, 0, 6, 6, 0, 25, 3, 0, 0, 0, 0]' : 0.152191}", "{'[6, 6, 0, 0, 6, 6, 0, 25, 3, 0, 0, 0, 0]' : 0.151241}", "{'[6, 6, 0, 0, 6, 6, 0, 25, 3, 0, 0, 0, 0]' : 0.148201}", "{'[6, 6, 0, 0, 6, 6, 0, 25, 3, 0, 0, 0, 0]' : 0.149543}", "{'[6, 6, 0, 0, 6, 6, 0, 25, 3, 0, 0, 0, 0]' : 0.155742}", "{'[6, 6, 0, 0, 6, 6, 0, 25, 3, 0, 0, 0, 0]' : 0.155172}", "{'[6, 6, 0, 0, 6, 6, 0, 25, 3, 0, 0, 0, 0]' : 0.15502}", "{'[6, 6, 0, 0, 6, 6, 0, 25, 3, 0, 0, 0, 0]' : 0.152545}", "{'[6, 6, 0, 0, 6, 6, 0, 25, 3, 0, 0, 0, 0]' : 0.155129}", "{'[6, 6, 0, 0, 6, 6, 0, 25, 3, 0, 0, 0, 0]' : 0.155019}", "{'[6, 6, 0, 0, 6, 6, 0, 25, 3, 0, 0, 0, 0]' : 0.155125}", "{'[6, 6, 0, 0, 6, 6, 0, 25, 3, 0, 0, 0, 0]' : 0.155429}", "{'[6, 6, 0, 0, 6, 6, 0, 25, 3, 0, 0, 0, 0]' : 0.152201}", "{'[6, 6, 0, 0, 6, 6, 0, 25, 3, 0, 0, 0, 0]' : 0.151929}", "{'[6, 6, 0, 0, 6, 6, 0, 25, 3, 0, 0, 0, 0]' : 0.151782}", "{'[6, 6, 0, 0, 6, 6, 0, 25, 3, 0, 0, 0, 0]' : 0.150832}", "{'[6, 6, 0, 0, 6, 6, 0, 25, 3, 0, 0, 0, 0]' : 0.148973}"]
returning from 'run': {'[6, 6, 0, 0, 6, 6, 0, 25, 3, 0, 0, 0, 0]': ([0.169436, 0.169308, 0.169106, 0.15307, 0.151826, 0.15179, 0.152527, 0.151806, 0.151883, 0.151959, 0.152224, 0.151871, 0.15178, 0.152191, 0.151241, 0.148201, 0.149543, 0.155742, 0.155172, 0.15502, 0.152545, 0.155129, 0.155019, 0.155125, 0.155429, 0.152201, 0.151929, 0.151782, 0.150832, 0.148973], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 0, 0, 6, 6, 0, 25, 3, 0, 0, 0, 0]': ([0.169436, 0.169308, 0.169106, 0.15307, 0.151826, 0.15179, 0.152527, 0.151806, 0.151883, 0.151959, 0.152224, 0.151871, 0.15178, 0.152191, 0.151241, 0.148201, 0.149543, 0.155742, 0.155172, 0.15502, 0.152545, 0.155129, 0.155019, 0.155125, 0.155429, 0.152201, 0.151929, 0.151782, 0.150832, 0.148973], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Complete design, with measurements:
      T1_K T2_I U1_I U_J U_K RT_I RT_J RT_K cost_mean
448      0    0   29   5   0    0    2    0 0.1621011
1108     0    0    4   0  29    0    0    2 0.1730495
1169     6    0   29  29   0    2    0    0 0.2885013
2139     1    6    0  28   0    0    0    2 0.1713934
2366     0    6   25  29   0    0    0    0 0.1601620
4068     6    6    0   0   0    0    2    0 0.1650420
4367     0    6   25   0  28    0    2    0 0.1486529
9433     6    5   29   0  29    0    0    0 0.1747491
13212    0    6    0   0   4    2    0    0 0.1815037
15795    6    0    0   0  27    2    0    0 0.1974663
20861    6    5   28   0   1    0    0    2 0.1762878
22879    6    0    0  28   0    0    2    0 0.1570941
25515    0    0    0   3   0    0    0    0 0.1541553

Heteroscedasticity Test p-value: 0.128594267804
Regression Step:            Df   Sum Sq  Mean Sq F value Pr(>F)  
T1_K         1 0.002720 0.002720   4.474 0.1019  
T2_I         1 0.001056 0.001056   1.737 0.2580  
U1_I         1 0.000965 0.000965   1.587 0.2762  
U_J          1 0.001067 0.001067   1.754 0.2559  
U_K          1 0.000008 0.000008   0.013 0.9134  
RT_I         1 0.006257 0.006257  10.291 0.0327 *
RT_J         1 0.000359 0.000359   0.590 0.4853  
RT_K         1 0.000426 0.000426   0.700 0.4498  
Residuals    4 0.002432 0.000608                 
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Predicting Best
Generating valid search space of size 26000 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Tested coordinates: 110000
Tested coordinates: 120000
Tested coordinates: 130000
Tested coordinates: 140000
Tested coordinates: 150000
Tested coordinates: 160000
Tested coordinates: 170000
Tested coordinates: 180000
Tested coordinates: 190000
Tested coordinates: 200000
Tested coordinates: 210000
Tested coordinates: 220000
Tested coordinates: 230000
Tested coordinates: 240000
Tested coordinates: 250000
Tested coordinates: 260000
Tested coordinates: 270000
Tested coordinates: 280000
Tested coordinates: 290000
Tested coordinates: 300000
Tested coordinates: 310000
Tested coordinates: 320000
Tested coordinates: 330000
Tested coordinates: 340000
Tested coordinates: 350000
Tested coordinates: 360000
Valid coordinates: 5200
Tested coordinates: 370000
Tested coordinates: 380000
Tested coordinates: 390000
Tested coordinates: 400000
Tested coordinates: 410000
Tested coordinates: 420000
Tested coordinates: 430000
Tested coordinates: 440000
Tested coordinates: 450000
Tested coordinates: 460000
Tested coordinates: 470000
Tested coordinates: 480000
Tested coordinates: 490000
Tested coordinates: 500000
Tested coordinates: 510000
Tested coordinates: 520000
Tested coordinates: 530000
Tested coordinates: 540000
Tested coordinates: 550000
Tested coordinates: 560000
Tested coordinates: 570000
Tested coordinates: 580000
Tested coordinates: 590000
Tested coordinates: 600000
Tested coordinates: 610000
Tested coordinates: 620000
Tested coordinates: 630000
Tested coordinates: 640000
Tested coordinates: 650000
Tested coordinates: 660000
Tested coordinates: 670000
Tested coordinates: 680000
Tested coordinates: 690000
Tested coordinates: 700000
Tested coordinates: 710000
Tested coordinates: 720000
Tested coordinates: 730000
Tested coordinates: 740000
Valid coordinates: 10400
Tested coordinates: 750000
Tested coordinates: 760000
Tested coordinates: 770000
Tested coordinates: 780000
Tested coordinates: 790000
Tested coordinates: 800000
Tested coordinates: 810000
Tested coordinates: 820000
Tested coordinates: 830000
Tested coordinates: 840000
Tested coordinates: 850000
Tested coordinates: 860000
Tested coordinates: 870000
Tested coordinates: 880000
Tested coordinates: 890000
Tested coordinates: 900000
Tested coordinates: 910000
Tested coordinates: 920000
Tested coordinates: 930000
Tested coordinates: 940000
Tested coordinates: 950000
Tested coordinates: 960000
Tested coordinates: 970000
Tested coordinates: 980000
Tested coordinates: 990000
Tested coordinates: 1000000
Tested coordinates: 1010000
Tested coordinates: 1020000
Tested coordinates: 1030000
Tested coordinates: 1040000
Tested coordinates: 1050000
Tested coordinates: 1060000
Tested coordinates: 1070000
Tested coordinates: 1080000
Tested coordinates: 1090000
Tested coordinates: 1100000
Tested coordinates: 1110000
Valid coordinates: 15600
Tested coordinates: 1120000
Tested coordinates: 1130000
Tested coordinates: 1140000
Tested coordinates: 1150000
Tested coordinates: 1160000
Tested coordinates: 1170000
Tested coordinates: 1180000
Tested coordinates: 1190000
Tested coordinates: 1200000
Tested coordinates: 1210000
Tested coordinates: 1220000
Tested coordinates: 1230000
Tested coordinates: 1240000
Tested coordinates: 1250000
Tested coordinates: 1260000
Tested coordinates: 1270000
Tested coordinates: 1280000
Tested coordinates: 1290000
Tested coordinates: 1300000
Tested coordinates: 1310000
Tested coordinates: 1320000
Tested coordinates: 1330000
Tested coordinates: 1340000
Tested coordinates: 1350000
Tested coordinates: 1360000
Tested coordinates: 1370000
Tested coordinates: 1380000
Tested coordinates: 1390000
Tested coordinates: 1400000
Tested coordinates: 1410000
Tested coordinates: 1420000
Tested coordinates: 1430000
Tested coordinates: 1440000
Tested coordinates: 1450000
Tested coordinates: 1460000
Tested coordinates: 1470000
Tested coordinates: 1480000
Tested coordinates: 1490000
Valid coordinates: 20800
Tested coordinates: 1500000
Tested coordinates: 1510000
Tested coordinates: 1520000
Tested coordinates: 1530000
Tested coordinates: 1540000
Tested coordinates: 1550000
Tested coordinates: 1560000
Tested coordinates: 1570000
Tested coordinates: 1580000
Tested coordinates: 1590000
Tested coordinates: 1600000
Tested coordinates: 1610000
Tested coordinates: 1620000
Tested coordinates: 1630000
Tested coordinates: 1640000
Tested coordinates: 1650000
Tested coordinates: 1660000
Tested coordinates: 1670000
Tested coordinates: 1680000
Tested coordinates: 1690000
Tested coordinates: 1700000
Tested coordinates: 1710000
Tested coordinates: 1720000
Tested coordinates: 1730000
Tested coordinates: 1740000
Tested coordinates: 1750000
Tested coordinates: 1760000
Tested coordinates: 1770000
Tested coordinates: 1780000
Tested coordinates: 1790000
Tested coordinates: 1800000
Tested coordinates: 1810000
Tested coordinates: 1820000
Tested coordinates: 1830000
Tested coordinates: 1840000
Tested coordinates: 1850000
Tested coordinates: 1860000
Tested coordinates: 1870000
Valid coordinates: 26000
Valid/Tested configurations: 26000/1873631
Generated Search Space:
NULL
Getting Best from Design
Response: ['cost_mean']
Design Names: [1] "T1_K"      "T2_I"      "U1_I"      "U_J"       "U_K"       "RT_I"     
[7] "RT_J"      "RT_K"      "cost_mean"

Design Response:       cost_mean
448   0.1621011
1108  0.1730495
1169  0.2885013
2139  0.1713934
2366  0.1601620
4068  0.1650420
4367  0.1486529
9433  0.1747491
13212 0.1815037
15795 0.1974663
20861 0.1762878
22879 0.1570941
25515 0.1541553

Current Design Names: ['T1_K', 'T2_I', 'U1_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Getting fixed variables
No variables within acceptable threshold
Fixed Variables: {'T2_K': 6, 'T2_J': 6, 'U_I': 25, 'T1_I': 6, 'T1_J': 6}
Unique Variables: []
Pruning Model
No variables within acceptable threshold
Best Predicted:       T1_I T1_J T1_K T2_I T2_J T2_K U1_I U_I U_J U_K RT_I RT_J RT_K
15221    6    6    0    6    6    6    3  25   0  28    0    2    0

Best From Design: [6, 6, 0, 6, 6, 6, 25, 25, 0, 28, 0, 2, 0]
Pruned Factors: ['T1_K', 'T2_I', 'U1_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Pruned Inverse Factors: []
Pruned Interactions: []
Fixed Factors: {'T2_K': 6, 'T2_J': 6, 'U_I': 25, 'T1_I': 6, 'T1_J': 6}
Length of requested configs: 1
Result was on Database, Returning Now
Starting Point (-O3):
0.16059526666666663
Predicted Best Point:
[6, 6, 0, 6, 6, 6, 3, 25, 0, 28, 0, 2, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	6
        Additions: 		11435
        Multiplications: 	3402
        Divisions: 		0
        Logical: 		0
        Reads: 			17214
        Writes: 		1773
        Comparisons:		20
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest93.exe __orio_perftest93.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest93.exe  
Program Test Output: 
{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 28, 0, 2, 0]' : 0.17396}
{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 28, 0, 2, 0]' : 0.171404}
{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 28, 0, 2, 0]' : 0.147929}
{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 28, 0, 2, 0]' : 0.147543}
{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 28, 0, 2, 0]' : 0.147675}
{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 28, 0, 2, 0]' : 0.147571}
{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 28, 0, 2, 0]' : 0.147613}
{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 28, 0, 2, 0]' : 0.147677}
{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 28, 0, 2, 0]' : 0.147886}
{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 28, 0, 2, 0]' : 0.147771}
{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 28, 0, 2, 0]' : 0.147888}
{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 28, 0, 2, 0]' : 0.147896}
{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 28, 0, 2, 0]' : 0.147712}
{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 28, 0, 2, 0]' : 0.147854}
{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 28, 0, 2, 0]' : 0.147667}
{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 28, 0, 2, 0]' : 0.147694}
{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 28, 0, 2, 0]' : 0.147749}
{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 28, 0, 2, 0]' : 0.147578}
{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 28, 0, 2, 0]' : 0.147611}
{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 28, 0, 2, 0]' : 0.147891}
{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 28, 0, 2, 0]' : 0.147995}
{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 28, 0, 2, 0]' : 0.147653}
{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 28, 0, 2, 0]' : 0.148053}
{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 28, 0, 2, 0]' : 0.147638}
{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 28, 0, 2, 0]' : 0.147579}
{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 28, 0, 2, 0]' : 0.147552}
{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 28, 0, 2, 0]' : 0.147845}
{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 28, 0, 2, 0]' : 0.147701}
{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 28, 0, 2, 0]' : 0.147553}
{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 28, 0, 2, 0]' : 0.147423}

out:
 ["{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 28, 0, 2, 0]' : 0.17396}", "{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 28, 0, 2, 0]' : 0.171404}", "{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 28, 0, 2, 0]' : 0.147929}", "{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 28, 0, 2, 0]' : 0.147543}", "{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 28, 0, 2, 0]' : 0.147675}", "{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 28, 0, 2, 0]' : 0.147571}", "{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 28, 0, 2, 0]' : 0.147613}", "{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 28, 0, 2, 0]' : 0.147677}", "{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 28, 0, 2, 0]' : 0.147886}", "{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 28, 0, 2, 0]' : 0.147771}", "{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 28, 0, 2, 0]' : 0.147888}", "{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 28, 0, 2, 0]' : 0.147896}", "{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 28, 0, 2, 0]' : 0.147712}", "{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 28, 0, 2, 0]' : 0.147854}", "{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 28, 0, 2, 0]' : 0.147667}", "{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 28, 0, 2, 0]' : 0.147694}", "{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 28, 0, 2, 0]' : 0.147749}", "{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 28, 0, 2, 0]' : 0.147578}", "{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 28, 0, 2, 0]' : 0.147611}", "{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 28, 0, 2, 0]' : 0.147891}", "{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 28, 0, 2, 0]' : 0.147995}", "{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 28, 0, 2, 0]' : 0.147653}", "{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 28, 0, 2, 0]' : 0.148053}", "{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 28, 0, 2, 0]' : 0.147638}", "{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 28, 0, 2, 0]' : 0.147579}", "{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 28, 0, 2, 0]' : 0.147552}", "{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 28, 0, 2, 0]' : 0.147845}", "{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 28, 0, 2, 0]' : 0.147701}", "{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 28, 0, 2, 0]' : 0.147553}", "{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 28, 0, 2, 0]' : 0.147423}"]
returning from 'run': {'[6, 6, 0, 6, 6, 6, 3, 25, 0, 28, 0, 2, 0]': ([0.17396, 0.171404, 0.147929, 0.147543, 0.147675, 0.147571, 0.147613, 0.147677, 0.147886, 0.147771, 0.147888, 0.147896, 0.147712, 0.147854, 0.147667, 0.147694, 0.147749, 0.147578, 0.147611, 0.147891, 0.147995, 0.147653, 0.148053, 0.147638, 0.147579, 0.147552, 0.147845, 0.147701, 0.147553, 0.147423], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 0, 6, 6, 6, 3, 25, 0, 28, 0, 2, 0]': ([0.17396, 0.171404, 0.147929, 0.147543, 0.147675, 0.147571, 0.147613, 0.147677, 0.147886, 0.147771, 0.147888, 0.147896, 0.147712, 0.147854, 0.147667, 0.147694, 0.147749, 0.147578, 0.147611, 0.147891, 0.147995, 0.147653, 0.148053, 0.147638, 0.147579, 0.147552, 0.147845, 0.147701, 0.147553, 0.147423], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Design Best Point:
[6, 6, 0, 6, 6, 6, 25, 25, 0, 28, 0, 2, 0]
Length of requested configs: 1
Result was on Database, Returning Now
Fixed Factors: {'T2_K': 6, 'T2_J': 6, 'U_I': 25, 'T1_I': 6, 'T1_J': 6}
Slowdown (Design Best): 0.9256370777220919
Slowdown (Predicted Best): 0.9301978182005365
Budget: 87/180
Current Best Point: 
[6, 6, 0, 6, 6, 6, 27, 0, 3, 29, 1, 1, 0]
Step 6
Full Model:  ~ T1_K + T2_I + U1_I + U_J + U_K + RT_I + RT_J + RT_K
Generating valid search space of size 26000 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Tested coordinates: 110000
Tested coordinates: 120000
Tested coordinates: 130000
Tested coordinates: 140000
Tested coordinates: 150000
Tested coordinates: 160000
Tested coordinates: 170000
Tested coordinates: 180000
Tested coordinates: 190000
Tested coordinates: 200000
Tested coordinates: 210000
Tested coordinates: 220000
Tested coordinates: 230000
Tested coordinates: 240000
Tested coordinates: 250000
Tested coordinates: 260000
Tested coordinates: 270000
Tested coordinates: 280000
Tested coordinates: 290000
Tested coordinates: 300000
Tested coordinates: 310000
Tested coordinates: 320000
Tested coordinates: 330000
Tested coordinates: 340000
Tested coordinates: 350000
Tested coordinates: 360000
Tested coordinates: 370000
Valid coordinates: 5200
Tested coordinates: 380000
Tested coordinates: 390000
Tested coordinates: 400000
Tested coordinates: 410000
Tested coordinates: 420000
Tested coordinates: 430000
Tested coordinates: 440000
Tested coordinates: 450000
Tested coordinates: 460000
Tested coordinates: 470000
Tested coordinates: 480000
Tested coordinates: 490000
Tested coordinates: 500000
Tested coordinates: 510000
Tested coordinates: 520000
Tested coordinates: 530000
Tested coordinates: 540000
Tested coordinates: 550000
Tested coordinates: 560000
Tested coordinates: 570000
Tested coordinates: 580000
Tested coordinates: 590000
Tested coordinates: 600000
Tested coordinates: 610000
Tested coordinates: 620000
Tested coordinates: 630000
Tested coordinates: 640000
Tested coordinates: 650000
Tested coordinates: 660000
Tested coordinates: 670000
Tested coordinates: 680000
Tested coordinates: 690000
Tested coordinates: 700000
Tested coordinates: 710000
Tested coordinates: 720000
Tested coordinates: 730000
Tested coordinates: 740000
Valid coordinates: 10400
Tested coordinates: 750000
Tested coordinates: 760000
Tested coordinates: 770000
Tested coordinates: 780000
Tested coordinates: 790000
Tested coordinates: 800000
Tested coordinates: 810000
Tested coordinates: 820000
Tested coordinates: 830000
Tested coordinates: 840000
Tested coordinates: 850000
Tested coordinates: 860000
Tested coordinates: 870000
Tested coordinates: 880000
Tested coordinates: 890000
Tested coordinates: 900000
Tested coordinates: 910000
Tested coordinates: 920000
Tested coordinates: 930000
Tested coordinates: 940000
Tested coordinates: 950000
Tested coordinates: 960000
Tested coordinates: 970000
Tested coordinates: 980000
Tested coordinates: 990000
Tested coordinates: 1000000
Tested coordinates: 1010000
Tested coordinates: 1020000
Tested coordinates: 1030000
Tested coordinates: 1040000
Tested coordinates: 1050000
Tested coordinates: 1060000
Tested coordinates: 1070000
Tested coordinates: 1080000
Tested coordinates: 1090000
Tested coordinates: 1100000
Tested coordinates: 1110000
Tested coordinates: 1120000
Valid coordinates: 15600
Tested coordinates: 1130000
Tested coordinates: 1140000
Tested coordinates: 1150000
Tested coordinates: 1160000
Tested coordinates: 1170000
Tested coordinates: 1180000
Tested coordinates: 1190000
Tested coordinates: 1200000
Tested coordinates: 1210000
Tested coordinates: 1220000
Tested coordinates: 1230000
Tested coordinates: 1240000
Tested coordinates: 1250000
Tested coordinates: 1260000
Tested coordinates: 1270000
Tested coordinates: 1280000
Tested coordinates: 1290000
Tested coordinates: 1300000
Tested coordinates: 1310000
Tested coordinates: 1320000
Tested coordinates: 1330000
Tested coordinates: 1340000
Tested coordinates: 1350000
Tested coordinates: 1360000
Tested coordinates: 1370000
Tested coordinates: 1380000
Tested coordinates: 1390000
Tested coordinates: 1400000
Tested coordinates: 1410000
Tested coordinates: 1420000
Tested coordinates: 1430000
Tested coordinates: 1440000
Tested coordinates: 1450000
Tested coordinates: 1460000
Tested coordinates: 1470000
Tested coordinates: 1480000
Tested coordinates: 1490000
Tested coordinates: 1500000
Valid coordinates: 20800
Tested coordinates: 1510000
Tested coordinates: 1520000
Tested coordinates: 1530000
Tested coordinates: 1540000
Tested coordinates: 1550000
Tested coordinates: 1560000
Tested coordinates: 1570000
Tested coordinates: 1580000
Tested coordinates: 1590000
Tested coordinates: 1600000
Tested coordinates: 1610000
Tested coordinates: 1620000
Tested coordinates: 1630000
Tested coordinates: 1640000
Tested coordinates: 1650000
Tested coordinates: 1660000
Tested coordinates: 1670000
Tested coordinates: 1680000
Tested coordinates: 1690000
Tested coordinates: 1700000
Tested coordinates: 1710000
Tested coordinates: 1720000
Tested coordinates: 1730000
Tested coordinates: 1740000
Tested coordinates: 1750000
Tested coordinates: 1760000
Tested coordinates: 1770000
Tested coordinates: 1780000
Tested coordinates: 1790000
Tested coordinates: 1800000
Tested coordinates: 1810000
Tested coordinates: 1820000
Tested coordinates: 1830000
Tested coordinates: 1840000
Tested coordinates: 1850000
Tested coordinates: 1860000
Tested coordinates: 1870000
Valid coordinates: 26000
Valid/Tested configurations: 26000/1877953
Generated Search Space:
NULL
Clean Info:
Removed Factors: character(0)

Removed Inverse Factors: character(0)

New Factors: ['T1_K', 'T2_I', 'U1_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
New Inverse Factors: []
New Fixed Factors: {'T2_K': 6, 'T2_J': 6, 'U_I': 25, 'T1_I': 6, 'T1_J': 6}
Fixed Factors: {'T2_K': 6, 'T2_J': 6, 'U_I': 25, 'T1_I': 6, 'T1_J': 6}
Computing D-Optimal Design
Computing D-Optimal Design with 13 experiments
Design Formula:  ~ T1_K + T2_I + U1_I + U_J + U_K + RT_I + RT_J + RT_K
Starting "optFederov" run
Using Search Space:
NULL
Data Dimensions: [1] 26000     8

      T1_K T2_I U1_I U_J U_K RT_I RT_J RT_K
4954     0    0    0   0  29    1    0    1
5512     5    5    0  29   0    1    1    0
6958     0    6   29   6   0    2    0    0
7496     6    0   19  13   0    0    0    0
7631     6    0   28   0   1    2    0    0
13754    0    6    2   0  29    0    0    0
16749    5    6    1   0   0    0    0    2
17245    0    0   29  29   0    0    0    2
19556    6    6   29   0  29    0    1    1
20380    0    6   29   0   1    0    0    0
20424    1    0   29   0  29    0    2    0
21729    6    0    0   0  25    2    0    0
25837    0    0    1   0   0    0    2    0

D-Efficiency Approximation: [1] 0.681

Measuring design of size 13
Current Design Names: ['T1_K', 'T2_I', 'U1_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Length of requested configs: 1
Code stats:
        Number of loops: 	76
        Max loop nest depth: 	5
        Additions: 		9711
        Multiplications: 	2800
        Divisions: 		0
        Logical: 		0
        Reads: 			14690
        Writes: 		1581
        Comparisons:		76
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest94.exe __orio_perftest94.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest94.exe  
Program Test Output: 
{'[6, 6, 0, 0, 6, 6, 0, 25, 0, 29, 1, 0, 1]' : 0.13259}
{'[6, 6, 0, 0, 6, 6, 0, 25, 0, 29, 1, 0, 1]' : 0.132633}
{'[6, 6, 0, 0, 6, 6, 0, 25, 0, 29, 1, 0, 1]' : 0.132428}
{'[6, 6, 0, 0, 6, 6, 0, 25, 0, 29, 1, 0, 1]' : 0.129159}
{'[6, 6, 0, 0, 6, 6, 0, 25, 0, 29, 1, 0, 1]' : 0.115336}
{'[6, 6, 0, 0, 6, 6, 0, 25, 0, 29, 1, 0, 1]' : 0.115455}
{'[6, 6, 0, 0, 6, 6, 0, 25, 0, 29, 1, 0, 1]' : 0.115406}
{'[6, 6, 0, 0, 6, 6, 0, 25, 0, 29, 1, 0, 1]' : 0.116173}
{'[6, 6, 0, 0, 6, 6, 0, 25, 0, 29, 1, 0, 1]' : 0.115318}
{'[6, 6, 0, 0, 6, 6, 0, 25, 0, 29, 1, 0, 1]' : 0.115385}
{'[6, 6, 0, 0, 6, 6, 0, 25, 0, 29, 1, 0, 1]' : 0.11183}
{'[6, 6, 0, 0, 6, 6, 0, 25, 0, 29, 1, 0, 1]' : 0.117314}
{'[6, 6, 0, 0, 6, 6, 0, 25, 0, 29, 1, 0, 1]' : 0.11883}
{'[6, 6, 0, 0, 6, 6, 0, 25, 0, 29, 1, 0, 1]' : 0.11888}
{'[6, 6, 0, 0, 6, 6, 0, 25, 0, 29, 1, 0, 1]' : 0.118818}
{'[6, 6, 0, 0, 6, 6, 0, 25, 0, 29, 1, 0, 1]' : 0.117775}
{'[6, 6, 0, 0, 6, 6, 0, 25, 0, 29, 1, 0, 1]' : 0.115788}
{'[6, 6, 0, 0, 6, 6, 0, 25, 0, 29, 1, 0, 1]' : 0.113843}
{'[6, 6, 0, 0, 6, 6, 0, 25, 0, 29, 1, 0, 1]' : 0.112263}
{'[6, 6, 0, 0, 6, 6, 0, 25, 0, 29, 1, 0, 1]' : 0.113044}
{'[6, 6, 0, 0, 6, 6, 0, 25, 0, 29, 1, 0, 1]' : 0.115586}
{'[6, 6, 0, 0, 6, 6, 0, 25, 0, 29, 1, 0, 1]' : 0.11575}
{'[6, 6, 0, 0, 6, 6, 0, 25, 0, 29, 1, 0, 1]' : 0.115533}
{'[6, 6, 0, 0, 6, 6, 0, 25, 0, 29, 1, 0, 1]' : 0.115628}
{'[6, 6, 0, 0, 6, 6, 0, 25, 0, 29, 1, 0, 1]' : 0.118452}
{'[6, 6, 0, 0, 6, 6, 0, 25, 0, 29, 1, 0, 1]' : 0.115263}
{'[6, 6, 0, 0, 6, 6, 0, 25, 0, 29, 1, 0, 1]' : 0.112276}
{'[6, 6, 0, 0, 6, 6, 0, 25, 0, 29, 1, 0, 1]' : 0.112231}
{'[6, 6, 0, 0, 6, 6, 0, 25, 0, 29, 1, 0, 1]' : 0.113923}
{'[6, 6, 0, 0, 6, 6, 0, 25, 0, 29, 1, 0, 1]' : 0.116612}

out:
 ["{'[6, 6, 0, 0, 6, 6, 0, 25, 0, 29, 1, 0, 1]' : 0.13259}", "{'[6, 6, 0, 0, 6, 6, 0, 25, 0, 29, 1, 0, 1]' : 0.132633}", "{'[6, 6, 0, 0, 6, 6, 0, 25, 0, 29, 1, 0, 1]' : 0.132428}", "{'[6, 6, 0, 0, 6, 6, 0, 25, 0, 29, 1, 0, 1]' : 0.129159}", "{'[6, 6, 0, 0, 6, 6, 0, 25, 0, 29, 1, 0, 1]' : 0.115336}", "{'[6, 6, 0, 0, 6, 6, 0, 25, 0, 29, 1, 0, 1]' : 0.115455}", "{'[6, 6, 0, 0, 6, 6, 0, 25, 0, 29, 1, 0, 1]' : 0.115406}", "{'[6, 6, 0, 0, 6, 6, 0, 25, 0, 29, 1, 0, 1]' : 0.116173}", "{'[6, 6, 0, 0, 6, 6, 0, 25, 0, 29, 1, 0, 1]' : 0.115318}", "{'[6, 6, 0, 0, 6, 6, 0, 25, 0, 29, 1, 0, 1]' : 0.115385}", "{'[6, 6, 0, 0, 6, 6, 0, 25, 0, 29, 1, 0, 1]' : 0.11183}", "{'[6, 6, 0, 0, 6, 6, 0, 25, 0, 29, 1, 0, 1]' : 0.117314}", "{'[6, 6, 0, 0, 6, 6, 0, 25, 0, 29, 1, 0, 1]' : 0.11883}", "{'[6, 6, 0, 0, 6, 6, 0, 25, 0, 29, 1, 0, 1]' : 0.11888}", "{'[6, 6, 0, 0, 6, 6, 0, 25, 0, 29, 1, 0, 1]' : 0.118818}", "{'[6, 6, 0, 0, 6, 6, 0, 25, 0, 29, 1, 0, 1]' : 0.117775}", "{'[6, 6, 0, 0, 6, 6, 0, 25, 0, 29, 1, 0, 1]' : 0.115788}", "{'[6, 6, 0, 0, 6, 6, 0, 25, 0, 29, 1, 0, 1]' : 0.113843}", "{'[6, 6, 0, 0, 6, 6, 0, 25, 0, 29, 1, 0, 1]' : 0.112263}", "{'[6, 6, 0, 0, 6, 6, 0, 25, 0, 29, 1, 0, 1]' : 0.113044}", "{'[6, 6, 0, 0, 6, 6, 0, 25, 0, 29, 1, 0, 1]' : 0.115586}", "{'[6, 6, 0, 0, 6, 6, 0, 25, 0, 29, 1, 0, 1]' : 0.11575}", "{'[6, 6, 0, 0, 6, 6, 0, 25, 0, 29, 1, 0, 1]' : 0.115533}", "{'[6, 6, 0, 0, 6, 6, 0, 25, 0, 29, 1, 0, 1]' : 0.115628}", "{'[6, 6, 0, 0, 6, 6, 0, 25, 0, 29, 1, 0, 1]' : 0.118452}", "{'[6, 6, 0, 0, 6, 6, 0, 25, 0, 29, 1, 0, 1]' : 0.115263}", "{'[6, 6, 0, 0, 6, 6, 0, 25, 0, 29, 1, 0, 1]' : 0.112276}", "{'[6, 6, 0, 0, 6, 6, 0, 25, 0, 29, 1, 0, 1]' : 0.112231}", "{'[6, 6, 0, 0, 6, 6, 0, 25, 0, 29, 1, 0, 1]' : 0.113923}", "{'[6, 6, 0, 0, 6, 6, 0, 25, 0, 29, 1, 0, 1]' : 0.116612}"]
returning from 'run': {'[6, 6, 0, 0, 6, 6, 0, 25, 0, 29, 1, 0, 1]': ([0.13259, 0.132633, 0.132428, 0.129159, 0.115336, 0.115455, 0.115406, 0.116173, 0.115318, 0.115385, 0.11183, 0.117314, 0.11883, 0.11888, 0.118818, 0.117775, 0.115788, 0.113843, 0.112263, 0.113044, 0.115586, 0.11575, 0.115533, 0.115628, 0.118452, 0.115263, 0.112276, 0.112231, 0.113923, 0.116612], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 0, 0, 6, 6, 0, 25, 0, 29, 1, 0, 1]': ([0.13259, 0.132633, 0.132428, 0.129159, 0.115336, 0.115455, 0.115406, 0.116173, 0.115318, 0.115385, 0.11183, 0.117314, 0.11883, 0.11888, 0.118818, 0.117775, 0.115788, 0.113843, 0.112263, 0.113044, 0.115586, 0.11575, 0.115533, 0.115628, 0.118452, 0.115263, 0.112276, 0.112231, 0.113923, 0.116612], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	80
        Max loop nest depth: 	6
        Additions: 		9679
        Multiplications: 	2800
        Divisions: 		0
        Logical: 		0
        Reads: 			14718
        Writes: 		1589
        Comparisons:		80
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest95.exe __orio_perftest95.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest95.exe  
Program Test Output: 
{'[6, 6, 5, 5, 6, 6, 0, 25, 29, 0, 1, 1, 0]' : 0.135282}
{'[6, 6, 5, 5, 6, 6, 0, 25, 29, 0, 1, 1, 0]' : 0.133738}
{'[6, 6, 5, 5, 6, 6, 0, 25, 29, 0, 1, 1, 0]' : 0.116158}
{'[6, 6, 5, 5, 6, 6, 0, 25, 29, 0, 1, 1, 0]' : 0.115543}
{'[6, 6, 5, 5, 6, 6, 0, 25, 29, 0, 1, 1, 0]' : 0.115658}
{'[6, 6, 5, 5, 6, 6, 0, 25, 29, 0, 1, 1, 0]' : 0.115695}
{'[6, 6, 5, 5, 6, 6, 0, 25, 29, 0, 1, 1, 0]' : 0.115388}
{'[6, 6, 5, 5, 6, 6, 0, 25, 29, 0, 1, 1, 0]' : 0.116009}
{'[6, 6, 5, 5, 6, 6, 0, 25, 29, 0, 1, 1, 0]' : 0.115632}
{'[6, 6, 5, 5, 6, 6, 0, 25, 29, 0, 1, 1, 0]' : 0.115506}
{'[6, 6, 5, 5, 6, 6, 0, 25, 29, 0, 1, 1, 0]' : 0.115233}
{'[6, 6, 5, 5, 6, 6, 0, 25, 29, 0, 1, 1, 0]' : 0.115557}
{'[6, 6, 5, 5, 6, 6, 0, 25, 29, 0, 1, 1, 0]' : 0.115622}
{'[6, 6, 5, 5, 6, 6, 0, 25, 29, 0, 1, 1, 0]' : 0.115527}
{'[6, 6, 5, 5, 6, 6, 0, 25, 29, 0, 1, 1, 0]' : 0.115187}
{'[6, 6, 5, 5, 6, 6, 0, 25, 29, 0, 1, 1, 0]' : 0.115978}
{'[6, 6, 5, 5, 6, 6, 0, 25, 29, 0, 1, 1, 0]' : 0.115658}
{'[6, 6, 5, 5, 6, 6, 0, 25, 29, 0, 1, 1, 0]' : 0.11549}
{'[6, 6, 5, 5, 6, 6, 0, 25, 29, 0, 1, 1, 0]' : 0.115237}
{'[6, 6, 5, 5, 6, 6, 0, 25, 29, 0, 1, 1, 0]' : 0.115908}
{'[6, 6, 5, 5, 6, 6, 0, 25, 29, 0, 1, 1, 0]' : 0.115695}
{'[6, 6, 5, 5, 6, 6, 0, 25, 29, 0, 1, 1, 0]' : 0.115653}
{'[6, 6, 5, 5, 6, 6, 0, 25, 29, 0, 1, 1, 0]' : 0.115148}
{'[6, 6, 5, 5, 6, 6, 0, 25, 29, 0, 1, 1, 0]' : 0.115599}
{'[6, 6, 5, 5, 6, 6, 0, 25, 29, 0, 1, 1, 0]' : 0.115659}
{'[6, 6, 5, 5, 6, 6, 0, 25, 29, 0, 1, 1, 0]' : 0.115519}
{'[6, 6, 5, 5, 6, 6, 0, 25, 29, 0, 1, 1, 0]' : 0.115192}
{'[6, 6, 5, 5, 6, 6, 0, 25, 29, 0, 1, 1, 0]' : 0.11559}
{'[6, 6, 5, 5, 6, 6, 0, 25, 29, 0, 1, 1, 0]' : 0.115658}
{'[6, 6, 5, 5, 6, 6, 0, 25, 29, 0, 1, 1, 0]' : 0.115496}

out:
 ["{'[6, 6, 5, 5, 6, 6, 0, 25, 29, 0, 1, 1, 0]' : 0.135282}", "{'[6, 6, 5, 5, 6, 6, 0, 25, 29, 0, 1, 1, 0]' : 0.133738}", "{'[6, 6, 5, 5, 6, 6, 0, 25, 29, 0, 1, 1, 0]' : 0.116158}", "{'[6, 6, 5, 5, 6, 6, 0, 25, 29, 0, 1, 1, 0]' : 0.115543}", "{'[6, 6, 5, 5, 6, 6, 0, 25, 29, 0, 1, 1, 0]' : 0.115658}", "{'[6, 6, 5, 5, 6, 6, 0, 25, 29, 0, 1, 1, 0]' : 0.115695}", "{'[6, 6, 5, 5, 6, 6, 0, 25, 29, 0, 1, 1, 0]' : 0.115388}", "{'[6, 6, 5, 5, 6, 6, 0, 25, 29, 0, 1, 1, 0]' : 0.116009}", "{'[6, 6, 5, 5, 6, 6, 0, 25, 29, 0, 1, 1, 0]' : 0.115632}", "{'[6, 6, 5, 5, 6, 6, 0, 25, 29, 0, 1, 1, 0]' : 0.115506}", "{'[6, 6, 5, 5, 6, 6, 0, 25, 29, 0, 1, 1, 0]' : 0.115233}", "{'[6, 6, 5, 5, 6, 6, 0, 25, 29, 0, 1, 1, 0]' : 0.115557}", "{'[6, 6, 5, 5, 6, 6, 0, 25, 29, 0, 1, 1, 0]' : 0.115622}", "{'[6, 6, 5, 5, 6, 6, 0, 25, 29, 0, 1, 1, 0]' : 0.115527}", "{'[6, 6, 5, 5, 6, 6, 0, 25, 29, 0, 1, 1, 0]' : 0.115187}", "{'[6, 6, 5, 5, 6, 6, 0, 25, 29, 0, 1, 1, 0]' : 0.115978}", "{'[6, 6, 5, 5, 6, 6, 0, 25, 29, 0, 1, 1, 0]' : 0.115658}", "{'[6, 6, 5, 5, 6, 6, 0, 25, 29, 0, 1, 1, 0]' : 0.11549}", "{'[6, 6, 5, 5, 6, 6, 0, 25, 29, 0, 1, 1, 0]' : 0.115237}", "{'[6, 6, 5, 5, 6, 6, 0, 25, 29, 0, 1, 1, 0]' : 0.115908}", "{'[6, 6, 5, 5, 6, 6, 0, 25, 29, 0, 1, 1, 0]' : 0.115695}", "{'[6, 6, 5, 5, 6, 6, 0, 25, 29, 0, 1, 1, 0]' : 0.115653}", "{'[6, 6, 5, 5, 6, 6, 0, 25, 29, 0, 1, 1, 0]' : 0.115148}", "{'[6, 6, 5, 5, 6, 6, 0, 25, 29, 0, 1, 1, 0]' : 0.115599}", "{'[6, 6, 5, 5, 6, 6, 0, 25, 29, 0, 1, 1, 0]' : 0.115659}", "{'[6, 6, 5, 5, 6, 6, 0, 25, 29, 0, 1, 1, 0]' : 0.115519}", "{'[6, 6, 5, 5, 6, 6, 0, 25, 29, 0, 1, 1, 0]' : 0.115192}", "{'[6, 6, 5, 5, 6, 6, 0, 25, 29, 0, 1, 1, 0]' : 0.11559}", "{'[6, 6, 5, 5, 6, 6, 0, 25, 29, 0, 1, 1, 0]' : 0.115658}", "{'[6, 6, 5, 5, 6, 6, 0, 25, 29, 0, 1, 1, 0]' : 0.115496}"]
returning from 'run': {'[6, 6, 5, 5, 6, 6, 0, 25, 29, 0, 1, 1, 0]': ([0.135282, 0.133738, 0.116158, 0.115543, 0.115658, 0.115695, 0.115388, 0.116009, 0.115632, 0.115506, 0.115233, 0.115557, 0.115622, 0.115527, 0.115187, 0.115978, 0.115658, 0.11549, 0.115237, 0.115908, 0.115695, 0.115653, 0.115148, 0.115599, 0.115659, 0.115519, 0.115192, 0.11559, 0.115658, 0.115496], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 5, 5, 6, 6, 0, 25, 29, 0, 1, 1, 0]': ([0.135282, 0.133738, 0.116158, 0.115543, 0.115658, 0.115695, 0.115388, 0.116009, 0.115632, 0.115506, 0.115233, 0.115557, 0.115622, 0.115527, 0.115187, 0.115978, 0.115658, 0.11549, 0.115237, 0.115908, 0.115695, 0.115653, 0.115148, 0.115599, 0.115659, 0.115519, 0.115192, 0.11559, 0.115658, 0.115496], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	25
        Max loop nest depth: 	6
        Additions: 		3390
        Multiplications: 	1062
        Divisions: 		0
        Logical: 		0
        Reads: 			5603
        Writes: 		640
        Comparisons:		25
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest96.exe __orio_perftest96.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest96.exe  
Program Test Output: 
{'[6, 6, 0, 6, 6, 6, 29, 25, 6, 0, 2, 0, 0]' : 0.235365}
{'[6, 6, 0, 6, 6, 6, 29, 25, 6, 0, 2, 0, 0]' : 0.24268}
{'[6, 6, 0, 6, 6, 6, 29, 25, 6, 0, 2, 0, 0]' : 0.23963}
{'[6, 6, 0, 6, 6, 6, 29, 25, 6, 0, 2, 0, 0]' : 0.239804}
{'[6, 6, 0, 6, 6, 6, 29, 25, 6, 0, 2, 0, 0]' : 0.235321}
{'[6, 6, 0, 6, 6, 6, 29, 25, 6, 0, 2, 0, 0]' : 0.243197}
{'[6, 6, 0, 6, 6, 6, 29, 25, 6, 0, 2, 0, 0]' : 0.242153}
{'[6, 6, 0, 6, 6, 6, 29, 25, 6, 0, 2, 0, 0]' : 0.242734}
{'[6, 6, 0, 6, 6, 6, 29, 25, 6, 0, 2, 0, 0]' : 0.240676}
{'[6, 6, 0, 6, 6, 6, 29, 25, 6, 0, 2, 0, 0]' : 0.242721}
{'[6, 6, 0, 6, 6, 6, 29, 25, 6, 0, 2, 0, 0]' : 0.240485}
{'[6, 6, 0, 6, 6, 6, 29, 25, 6, 0, 2, 0, 0]' : 0.241335}
{'[6, 6, 0, 6, 6, 6, 29, 25, 6, 0, 2, 0, 0]' : 0.241057}
{'[6, 6, 0, 6, 6, 6, 29, 25, 6, 0, 2, 0, 0]' : 0.242285}
{'[6, 6, 0, 6, 6, 6, 29, 25, 6, 0, 2, 0, 0]' : 0.243146}
{'[6, 6, 0, 6, 6, 6, 29, 25, 6, 0, 2, 0, 0]' : 0.24117}
{'[6, 6, 0, 6, 6, 6, 29, 25, 6, 0, 2, 0, 0]' : 0.238515}
{'[6, 6, 0, 6, 6, 6, 29, 25, 6, 0, 2, 0, 0]' : 0.241544}
{'[6, 6, 0, 6, 6, 6, 29, 25, 6, 0, 2, 0, 0]' : 0.238625}
{'[6, 6, 0, 6, 6, 6, 29, 25, 6, 0, 2, 0, 0]' : 0.239614}
{'[6, 6, 0, 6, 6, 6, 29, 25, 6, 0, 2, 0, 0]' : 0.239929}
{'[6, 6, 0, 6, 6, 6, 29, 25, 6, 0, 2, 0, 0]' : 0.240413}
{'[6, 6, 0, 6, 6, 6, 29, 25, 6, 0, 2, 0, 0]' : 0.243636}
{'[6, 6, 0, 6, 6, 6, 29, 25, 6, 0, 2, 0, 0]' : 0.244024}
{'[6, 6, 0, 6, 6, 6, 29, 25, 6, 0, 2, 0, 0]' : 0.239737}
{'[6, 6, 0, 6, 6, 6, 29, 25, 6, 0, 2, 0, 0]' : 0.240852}
{'[6, 6, 0, 6, 6, 6, 29, 25, 6, 0, 2, 0, 0]' : 0.239735}
{'[6, 6, 0, 6, 6, 6, 29, 25, 6, 0, 2, 0, 0]' : 0.240423}
{'[6, 6, 0, 6, 6, 6, 29, 25, 6, 0, 2, 0, 0]' : 0.235823}
{'[6, 6, 0, 6, 6, 6, 29, 25, 6, 0, 2, 0, 0]' : 0.23586}

out:
 ["{'[6, 6, 0, 6, 6, 6, 29, 25, 6, 0, 2, 0, 0]' : 0.235365}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 6, 0, 2, 0, 0]' : 0.24268}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 6, 0, 2, 0, 0]' : 0.23963}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 6, 0, 2, 0, 0]' : 0.239804}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 6, 0, 2, 0, 0]' : 0.235321}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 6, 0, 2, 0, 0]' : 0.243197}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 6, 0, 2, 0, 0]' : 0.242153}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 6, 0, 2, 0, 0]' : 0.242734}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 6, 0, 2, 0, 0]' : 0.240676}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 6, 0, 2, 0, 0]' : 0.242721}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 6, 0, 2, 0, 0]' : 0.240485}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 6, 0, 2, 0, 0]' : 0.241335}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 6, 0, 2, 0, 0]' : 0.241057}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 6, 0, 2, 0, 0]' : 0.242285}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 6, 0, 2, 0, 0]' : 0.243146}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 6, 0, 2, 0, 0]' : 0.24117}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 6, 0, 2, 0, 0]' : 0.238515}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 6, 0, 2, 0, 0]' : 0.241544}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 6, 0, 2, 0, 0]' : 0.238625}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 6, 0, 2, 0, 0]' : 0.239614}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 6, 0, 2, 0, 0]' : 0.239929}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 6, 0, 2, 0, 0]' : 0.240413}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 6, 0, 2, 0, 0]' : 0.243636}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 6, 0, 2, 0, 0]' : 0.244024}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 6, 0, 2, 0, 0]' : 0.239737}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 6, 0, 2, 0, 0]' : 0.240852}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 6, 0, 2, 0, 0]' : 0.239735}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 6, 0, 2, 0, 0]' : 0.240423}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 6, 0, 2, 0, 0]' : 0.235823}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 6, 0, 2, 0, 0]' : 0.23586}"]
returning from 'run': {'[6, 6, 0, 6, 6, 6, 29, 25, 6, 0, 2, 0, 0]': ([0.235365, 0.24268, 0.23963, 0.239804, 0.235321, 0.243197, 0.242153, 0.242734, 0.240676, 0.242721, 0.240485, 0.241335, 0.241057, 0.242285, 0.243146, 0.24117, 0.238515, 0.241544, 0.238625, 0.239614, 0.239929, 0.240413, 0.243636, 0.244024, 0.239737, 0.240852, 0.239735, 0.240423, 0.235823, 0.23586], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 0, 6, 6, 6, 29, 25, 6, 0, 2, 0, 0]': ([0.235365, 0.24268, 0.23963, 0.239804, 0.235321, 0.243197, 0.242153, 0.242734, 0.240676, 0.242721, 0.240485, 0.241335, 0.241057, 0.242285, 0.243146, 0.24117, 0.238515, 0.241544, 0.238625, 0.239614, 0.239929, 0.240413, 0.243636, 0.244024, 0.239737, 0.240852, 0.239735, 0.240423, 0.235823, 0.23586], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	5
        Additions: 		2868
        Multiplications: 	864
        Divisions: 		0
        Logical: 		0
        Reads: 			4549
        Writes: 		518
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest97.exe __orio_perftest97.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest97.exe  
Program Test Output: 
{'[6, 6, 6, 0, 6, 6, 19, 25, 13, 0, 0, 0, 0]' : 0.145758}
{'[6, 6, 6, 0, 6, 6, 19, 25, 13, 0, 0, 0, 0]' : 0.145988}
{'[6, 6, 6, 0, 6, 6, 19, 25, 13, 0, 0, 0, 0]' : 0.149823}
{'[6, 6, 6, 0, 6, 6, 19, 25, 13, 0, 0, 0, 0]' : 0.150105}
{'[6, 6, 6, 0, 6, 6, 19, 25, 13, 0, 0, 0, 0]' : 0.14743}
{'[6, 6, 6, 0, 6, 6, 19, 25, 13, 0, 0, 0, 0]' : 0.14613}
{'[6, 6, 6, 0, 6, 6, 19, 25, 13, 0, 0, 0, 0]' : 0.145906}
{'[6, 6, 6, 0, 6, 6, 19, 25, 13, 0, 0, 0, 0]' : 0.145853}
{'[6, 6, 6, 0, 6, 6, 19, 25, 13, 0, 0, 0, 0]' : 0.146888}
{'[6, 6, 6, 0, 6, 6, 19, 25, 13, 0, 0, 0, 0]' : 0.150315}
{'[6, 6, 6, 0, 6, 6, 19, 25, 13, 0, 0, 0, 0]' : 0.146475}
{'[6, 6, 6, 0, 6, 6, 19, 25, 13, 0, 0, 0, 0]' : 0.145932}
{'[6, 6, 6, 0, 6, 6, 19, 25, 13, 0, 0, 0, 0]' : 0.148593}
{'[6, 6, 6, 0, 6, 6, 19, 25, 13, 0, 0, 0, 0]' : 0.14902}
{'[6, 6, 6, 0, 6, 6, 19, 25, 13, 0, 0, 0, 0]' : 0.146647}
{'[6, 6, 6, 0, 6, 6, 19, 25, 13, 0, 0, 0, 0]' : 0.149427}
{'[6, 6, 6, 0, 6, 6, 19, 25, 13, 0, 0, 0, 0]' : 0.151294}
{'[6, 6, 6, 0, 6, 6, 19, 25, 13, 0, 0, 0, 0]' : 0.150307}
{'[6, 6, 6, 0, 6, 6, 19, 25, 13, 0, 0, 0, 0]' : 0.150065}
{'[6, 6, 6, 0, 6, 6, 19, 25, 13, 0, 0, 0, 0]' : 0.147204}
{'[6, 6, 6, 0, 6, 6, 19, 25, 13, 0, 0, 0, 0]' : 0.145653}
{'[6, 6, 6, 0, 6, 6, 19, 25, 13, 0, 0, 0, 0]' : 0.145683}
{'[6, 6, 6, 0, 6, 6, 19, 25, 13, 0, 0, 0, 0]' : 0.14901}
{'[6, 6, 6, 0, 6, 6, 19, 25, 13, 0, 0, 0, 0]' : 0.149827}
{'[6, 6, 6, 0, 6, 6, 19, 25, 13, 0, 0, 0, 0]' : 0.149899}
{'[6, 6, 6, 0, 6, 6, 19, 25, 13, 0, 0, 0, 0]' : 0.148759}
{'[6, 6, 6, 0, 6, 6, 19, 25, 13, 0, 0, 0, 0]' : 0.146088}
{'[6, 6, 6, 0, 6, 6, 19, 25, 13, 0, 0, 0, 0]' : 0.14588}
{'[6, 6, 6, 0, 6, 6, 19, 25, 13, 0, 0, 0, 0]' : 0.14559}
{'[6, 6, 6, 0, 6, 6, 19, 25, 13, 0, 0, 0, 0]' : 0.145746}

out:
 ["{'[6, 6, 6, 0, 6, 6, 19, 25, 13, 0, 0, 0, 0]' : 0.145758}", "{'[6, 6, 6, 0, 6, 6, 19, 25, 13, 0, 0, 0, 0]' : 0.145988}", "{'[6, 6, 6, 0, 6, 6, 19, 25, 13, 0, 0, 0, 0]' : 0.149823}", "{'[6, 6, 6, 0, 6, 6, 19, 25, 13, 0, 0, 0, 0]' : 0.150105}", "{'[6, 6, 6, 0, 6, 6, 19, 25, 13, 0, 0, 0, 0]' : 0.14743}", "{'[6, 6, 6, 0, 6, 6, 19, 25, 13, 0, 0, 0, 0]' : 0.14613}", "{'[6, 6, 6, 0, 6, 6, 19, 25, 13, 0, 0, 0, 0]' : 0.145906}", "{'[6, 6, 6, 0, 6, 6, 19, 25, 13, 0, 0, 0, 0]' : 0.145853}", "{'[6, 6, 6, 0, 6, 6, 19, 25, 13, 0, 0, 0, 0]' : 0.146888}", "{'[6, 6, 6, 0, 6, 6, 19, 25, 13, 0, 0, 0, 0]' : 0.150315}", "{'[6, 6, 6, 0, 6, 6, 19, 25, 13, 0, 0, 0, 0]' : 0.146475}", "{'[6, 6, 6, 0, 6, 6, 19, 25, 13, 0, 0, 0, 0]' : 0.145932}", "{'[6, 6, 6, 0, 6, 6, 19, 25, 13, 0, 0, 0, 0]' : 0.148593}", "{'[6, 6, 6, 0, 6, 6, 19, 25, 13, 0, 0, 0, 0]' : 0.14902}", "{'[6, 6, 6, 0, 6, 6, 19, 25, 13, 0, 0, 0, 0]' : 0.146647}", "{'[6, 6, 6, 0, 6, 6, 19, 25, 13, 0, 0, 0, 0]' : 0.149427}", "{'[6, 6, 6, 0, 6, 6, 19, 25, 13, 0, 0, 0, 0]' : 0.151294}", "{'[6, 6, 6, 0, 6, 6, 19, 25, 13, 0, 0, 0, 0]' : 0.150307}", "{'[6, 6, 6, 0, 6, 6, 19, 25, 13, 0, 0, 0, 0]' : 0.150065}", "{'[6, 6, 6, 0, 6, 6, 19, 25, 13, 0, 0, 0, 0]' : 0.147204}", "{'[6, 6, 6, 0, 6, 6, 19, 25, 13, 0, 0, 0, 0]' : 0.145653}", "{'[6, 6, 6, 0, 6, 6, 19, 25, 13, 0, 0, 0, 0]' : 0.145683}", "{'[6, 6, 6, 0, 6, 6, 19, 25, 13, 0, 0, 0, 0]' : 0.14901}", "{'[6, 6, 6, 0, 6, 6, 19, 25, 13, 0, 0, 0, 0]' : 0.149827}", "{'[6, 6, 6, 0, 6, 6, 19, 25, 13, 0, 0, 0, 0]' : 0.149899}", "{'[6, 6, 6, 0, 6, 6, 19, 25, 13, 0, 0, 0, 0]' : 0.148759}", "{'[6, 6, 6, 0, 6, 6, 19, 25, 13, 0, 0, 0, 0]' : 0.146088}", "{'[6, 6, 6, 0, 6, 6, 19, 25, 13, 0, 0, 0, 0]' : 0.14588}", "{'[6, 6, 6, 0, 6, 6, 19, 25, 13, 0, 0, 0, 0]' : 0.14559}", "{'[6, 6, 6, 0, 6, 6, 19, 25, 13, 0, 0, 0, 0]' : 0.145746}"]
returning from 'run': {'[6, 6, 6, 0, 6, 6, 19, 25, 13, 0, 0, 0, 0]': ([0.145758, 0.145988, 0.149823, 0.150105, 0.14743, 0.14613, 0.145906, 0.145853, 0.146888, 0.150315, 0.146475, 0.145932, 0.148593, 0.14902, 0.146647, 0.149427, 0.151294, 0.150307, 0.150065, 0.147204, 0.145653, 0.145683, 0.14901, 0.149827, 0.149899, 0.148759, 0.146088, 0.14588, 0.14559, 0.145746], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 6, 0, 6, 6, 19, 25, 13, 0, 0, 0, 0]': ([0.145758, 0.145988, 0.149823, 0.150105, 0.14743, 0.14613, 0.145906, 0.145853, 0.146888, 0.150315, 0.146475, 0.145932, 0.148593, 0.14902, 0.146647, 0.149427, 0.151294, 0.150307, 0.150065, 0.147204, 0.145653, 0.145683, 0.14901, 0.149827, 0.149899, 0.148759, 0.146088, 0.14588, 0.14559, 0.145746], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	27
        Max loop nest depth: 	5
        Additions: 		1322
        Multiplications: 	472
        Divisions: 		0
        Logical: 		0
        Reads: 			2665
        Writes: 		348
        Comparisons:		27
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest98.exe __orio_perftest98.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest98.exe  
Program Test Output: 
{'[6, 6, 6, 0, 6, 6, 28, 25, 0, 1, 2, 0, 0]' : 0.241841}
{'[6, 6, 6, 0, 6, 6, 28, 25, 0, 1, 2, 0, 0]' : 0.219374}
{'[6, 6, 6, 0, 6, 6, 28, 25, 0, 1, 2, 0, 0]' : 0.211184}
{'[6, 6, 6, 0, 6, 6, 28, 25, 0, 1, 2, 0, 0]' : 0.210605}
{'[6, 6, 6, 0, 6, 6, 28, 25, 0, 1, 2, 0, 0]' : 0.209767}
{'[6, 6, 6, 0, 6, 6, 28, 25, 0, 1, 2, 0, 0]' : 0.211156}
{'[6, 6, 6, 0, 6, 6, 28, 25, 0, 1, 2, 0, 0]' : 0.209883}
{'[6, 6, 6, 0, 6, 6, 28, 25, 0, 1, 2, 0, 0]' : 0.209459}
{'[6, 6, 6, 0, 6, 6, 28, 25, 0, 1, 2, 0, 0]' : 0.208949}
{'[6, 6, 6, 0, 6, 6, 28, 25, 0, 1, 2, 0, 0]' : 0.20978}
{'[6, 6, 6, 0, 6, 6, 28, 25, 0, 1, 2, 0, 0]' : 0.2091}
{'[6, 6, 6, 0, 6, 6, 28, 25, 0, 1, 2, 0, 0]' : 0.209417}
{'[6, 6, 6, 0, 6, 6, 28, 25, 0, 1, 2, 0, 0]' : 0.209571}
{'[6, 6, 6, 0, 6, 6, 28, 25, 0, 1, 2, 0, 0]' : 0.210206}
{'[6, 6, 6, 0, 6, 6, 28, 25, 0, 1, 2, 0, 0]' : 0.209852}
{'[6, 6, 6, 0, 6, 6, 28, 25, 0, 1, 2, 0, 0]' : 0.209621}
{'[6, 6, 6, 0, 6, 6, 28, 25, 0, 1, 2, 0, 0]' : 0.209933}
{'[6, 6, 6, 0, 6, 6, 28, 25, 0, 1, 2, 0, 0]' : 0.209671}
{'[6, 6, 6, 0, 6, 6, 28, 25, 0, 1, 2, 0, 0]' : 0.211262}
{'[6, 6, 6, 0, 6, 6, 28, 25, 0, 1, 2, 0, 0]' : 0.209377}
{'[6, 6, 6, 0, 6, 6, 28, 25, 0, 1, 2, 0, 0]' : 0.20972}
{'[6, 6, 6, 0, 6, 6, 28, 25, 0, 1, 2, 0, 0]' : 0.209301}
{'[6, 6, 6, 0, 6, 6, 28, 25, 0, 1, 2, 0, 0]' : 0.209513}
{'[6, 6, 6, 0, 6, 6, 28, 25, 0, 1, 2, 0, 0]' : 0.216853}
{'[6, 6, 6, 0, 6, 6, 28, 25, 0, 1, 2, 0, 0]' : 0.212105}
{'[6, 6, 6, 0, 6, 6, 28, 25, 0, 1, 2, 0, 0]' : 0.209289}
{'[6, 6, 6, 0, 6, 6, 28, 25, 0, 1, 2, 0, 0]' : 0.210546}
{'[6, 6, 6, 0, 6, 6, 28, 25, 0, 1, 2, 0, 0]' : 0.209119}
{'[6, 6, 6, 0, 6, 6, 28, 25, 0, 1, 2, 0, 0]' : 0.209851}
{'[6, 6, 6, 0, 6, 6, 28, 25, 0, 1, 2, 0, 0]' : 0.210317}

out:
 ["{'[6, 6, 6, 0, 6, 6, 28, 25, 0, 1, 2, 0, 0]' : 0.241841}", "{'[6, 6, 6, 0, 6, 6, 28, 25, 0, 1, 2, 0, 0]' : 0.219374}", "{'[6, 6, 6, 0, 6, 6, 28, 25, 0, 1, 2, 0, 0]' : 0.211184}", "{'[6, 6, 6, 0, 6, 6, 28, 25, 0, 1, 2, 0, 0]' : 0.210605}", "{'[6, 6, 6, 0, 6, 6, 28, 25, 0, 1, 2, 0, 0]' : 0.209767}", "{'[6, 6, 6, 0, 6, 6, 28, 25, 0, 1, 2, 0, 0]' : 0.211156}", "{'[6, 6, 6, 0, 6, 6, 28, 25, 0, 1, 2, 0, 0]' : 0.209883}", "{'[6, 6, 6, 0, 6, 6, 28, 25, 0, 1, 2, 0, 0]' : 0.209459}", "{'[6, 6, 6, 0, 6, 6, 28, 25, 0, 1, 2, 0, 0]' : 0.208949}", "{'[6, 6, 6, 0, 6, 6, 28, 25, 0, 1, 2, 0, 0]' : 0.20978}", "{'[6, 6, 6, 0, 6, 6, 28, 25, 0, 1, 2, 0, 0]' : 0.2091}", "{'[6, 6, 6, 0, 6, 6, 28, 25, 0, 1, 2, 0, 0]' : 0.209417}", "{'[6, 6, 6, 0, 6, 6, 28, 25, 0, 1, 2, 0, 0]' : 0.209571}", "{'[6, 6, 6, 0, 6, 6, 28, 25, 0, 1, 2, 0, 0]' : 0.210206}", "{'[6, 6, 6, 0, 6, 6, 28, 25, 0, 1, 2, 0, 0]' : 0.209852}", "{'[6, 6, 6, 0, 6, 6, 28, 25, 0, 1, 2, 0, 0]' : 0.209621}", "{'[6, 6, 6, 0, 6, 6, 28, 25, 0, 1, 2, 0, 0]' : 0.209933}", "{'[6, 6, 6, 0, 6, 6, 28, 25, 0, 1, 2, 0, 0]' : 0.209671}", "{'[6, 6, 6, 0, 6, 6, 28, 25, 0, 1, 2, 0, 0]' : 0.211262}", "{'[6, 6, 6, 0, 6, 6, 28, 25, 0, 1, 2, 0, 0]' : 0.209377}", "{'[6, 6, 6, 0, 6, 6, 28, 25, 0, 1, 2, 0, 0]' : 0.20972}", "{'[6, 6, 6, 0, 6, 6, 28, 25, 0, 1, 2, 0, 0]' : 0.209301}", "{'[6, 6, 6, 0, 6, 6, 28, 25, 0, 1, 2, 0, 0]' : 0.209513}", "{'[6, 6, 6, 0, 6, 6, 28, 25, 0, 1, 2, 0, 0]' : 0.216853}", "{'[6, 6, 6, 0, 6, 6, 28, 25, 0, 1, 2, 0, 0]' : 0.212105}", "{'[6, 6, 6, 0, 6, 6, 28, 25, 0, 1, 2, 0, 0]' : 0.209289}", "{'[6, 6, 6, 0, 6, 6, 28, 25, 0, 1, 2, 0, 0]' : 0.210546}", "{'[6, 6, 6, 0, 6, 6, 28, 25, 0, 1, 2, 0, 0]' : 0.209119}", "{'[6, 6, 6, 0, 6, 6, 28, 25, 0, 1, 2, 0, 0]' : 0.209851}", "{'[6, 6, 6, 0, 6, 6, 28, 25, 0, 1, 2, 0, 0]' : 0.210317}"]
returning from 'run': {'[6, 6, 6, 0, 6, 6, 28, 25, 0, 1, 2, 0, 0]': ([0.241841, 0.219374, 0.211184, 0.210605, 0.209767, 0.211156, 0.209883, 0.209459, 0.208949, 0.20978, 0.2091, 0.209417, 0.209571, 0.210206, 0.209852, 0.209621, 0.209933, 0.209671, 0.211262, 0.209377, 0.20972, 0.209301, 0.209513, 0.216853, 0.212105, 0.209289, 0.210546, 0.209119, 0.209851, 0.210317], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 6, 0, 6, 6, 28, 25, 0, 1, 2, 0, 0]': ([0.241841, 0.219374, 0.211184, 0.210605, 0.209767, 0.211156, 0.209883, 0.209459, 0.208949, 0.20978, 0.2091, 0.209417, 0.209571, 0.210206, 0.209852, 0.209621, 0.209933, 0.209671, 0.211262, 0.209377, 0.20972, 0.209301, 0.209513, 0.216853, 0.212105, 0.209289, 0.210546, 0.209119, 0.209851, 0.210317], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	6
        Additions: 		5809
        Multiplications: 	1728
        Divisions: 		0
        Logical: 		0
        Reads: 			8828
        Writes: 		931
        Comparisons:		18
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest99.exe __orio_perftest99.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest99.exe  
Program Test Output: 
{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 29, 0, 0, 0]' : 0.170522}
{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 29, 0, 0, 0]' : 0.171632}
{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 29, 0, 0, 0]' : 0.171919}
{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 29, 0, 0, 0]' : 0.171239}
{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 29, 0, 0, 0]' : 0.168039}
{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 29, 0, 0, 0]' : 0.164359}
{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 29, 0, 0, 0]' : 0.17068}
{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 29, 0, 0, 0]' : 0.171535}
{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 29, 0, 0, 0]' : 0.171722}
{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 29, 0, 0, 0]' : 0.171707}
{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 29, 0, 0, 0]' : 0.170263}
{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 29, 0, 0, 0]' : 0.16791}
{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 29, 0, 0, 0]' : 0.172073}
{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 29, 0, 0, 0]' : 0.172025}
{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 29, 0, 0, 0]' : 0.171819}
{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 29, 0, 0, 0]' : 0.171891}
{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 29, 0, 0, 0]' : 0.17164}
{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 29, 0, 0, 0]' : 0.171585}
{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 29, 0, 0, 0]' : 0.171462}
{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 29, 0, 0, 0]' : 0.168734}
{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 29, 0, 0, 0]' : 0.16882}
{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 29, 0, 0, 0]' : 0.171685}
{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 29, 0, 0, 0]' : 0.170166}
{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 29, 0, 0, 0]' : 0.166246}
{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 29, 0, 0, 0]' : 0.171457}
{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 29, 0, 0, 0]' : 0.169001}
{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 29, 0, 0, 0]' : 0.169807}
{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 29, 0, 0, 0]' : 0.1717}
{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 29, 0, 0, 0]' : 0.171755}
{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 29, 0, 0, 0]' : 0.172005}

out:
 ["{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 29, 0, 0, 0]' : 0.170522}", "{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 29, 0, 0, 0]' : 0.171632}", "{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 29, 0, 0, 0]' : 0.171919}", "{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 29, 0, 0, 0]' : 0.171239}", "{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 29, 0, 0, 0]' : 0.168039}", "{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 29, 0, 0, 0]' : 0.164359}", "{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 29, 0, 0, 0]' : 0.17068}", "{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 29, 0, 0, 0]' : 0.171535}", "{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 29, 0, 0, 0]' : 0.171722}", "{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 29, 0, 0, 0]' : 0.171707}", "{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 29, 0, 0, 0]' : 0.170263}", "{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 29, 0, 0, 0]' : 0.16791}", "{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 29, 0, 0, 0]' : 0.172073}", "{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 29, 0, 0, 0]' : 0.172025}", "{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 29, 0, 0, 0]' : 0.171819}", "{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 29, 0, 0, 0]' : 0.171891}", "{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 29, 0, 0, 0]' : 0.17164}", "{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 29, 0, 0, 0]' : 0.171585}", "{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 29, 0, 0, 0]' : 0.171462}", "{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 29, 0, 0, 0]' : 0.168734}", "{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 29, 0, 0, 0]' : 0.16882}", "{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 29, 0, 0, 0]' : 0.171685}", "{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 29, 0, 0, 0]' : 0.170166}", "{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 29, 0, 0, 0]' : 0.166246}", "{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 29, 0, 0, 0]' : 0.171457}", "{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 29, 0, 0, 0]' : 0.169001}", "{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 29, 0, 0, 0]' : 0.169807}", "{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 29, 0, 0, 0]' : 0.1717}", "{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 29, 0, 0, 0]' : 0.171755}", "{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 29, 0, 0, 0]' : 0.172005}"]
returning from 'run': {'[6, 6, 0, 6, 6, 6, 2, 25, 0, 29, 0, 0, 0]': ([0.170522, 0.171632, 0.171919, 0.171239, 0.168039, 0.164359, 0.17068, 0.171535, 0.171722, 0.171707, 0.170263, 0.16791, 0.172073, 0.172025, 0.171819, 0.171891, 0.17164, 0.171585, 0.171462, 0.168734, 0.16882, 0.171685, 0.170166, 0.166246, 0.171457, 0.169001, 0.169807, 0.1717, 0.171755, 0.172005], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 0, 6, 6, 6, 2, 25, 0, 29, 0, 0, 0]': ([0.170522, 0.171632, 0.171919, 0.171239, 0.168039, 0.164359, 0.17068, 0.171535, 0.171722, 0.171707, 0.170263, 0.16791, 0.172073, 0.172025, 0.171819, 0.171891, 0.17164, 0.171585, 0.171462, 0.168734, 0.16882, 0.171685, 0.170166, 0.166246, 0.171457, 0.169001, 0.169807, 0.1717, 0.171755, 0.172005], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	6
        Additions: 		6166
        Multiplications: 	1836
        Divisions: 		0
        Logical: 		0
        Reads: 			9372
        Writes: 		988
        Comparisons:		20
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest100.exe __orio_perftest100.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest100.exe  
Program Test Output: 
{'[6, 6, 5, 6, 6, 6, 1, 25, 0, 0, 0, 0, 2]' : 0.192776}
{'[6, 6, 5, 6, 6, 6, 1, 25, 0, 0, 0, 0, 2]' : 0.188404}
{'[6, 6, 5, 6, 6, 6, 1, 25, 0, 0, 0, 0, 2]' : 0.17636}
{'[6, 6, 5, 6, 6, 6, 1, 25, 0, 0, 0, 0, 2]' : 0.176051}
{'[6, 6, 5, 6, 6, 6, 1, 25, 0, 0, 0, 0, 2]' : 0.172836}
{'[6, 6, 5, 6, 6, 6, 1, 25, 0, 0, 0, 0, 2]' : 0.171365}
{'[6, 6, 5, 6, 6, 6, 1, 25, 0, 0, 0, 0, 2]' : 0.175984}
{'[6, 6, 5, 6, 6, 6, 1, 25, 0, 0, 0, 0, 2]' : 0.176742}
{'[6, 6, 5, 6, 6, 6, 1, 25, 0, 0, 0, 0, 2]' : 0.177387}
{'[6, 6, 5, 6, 6, 6, 1, 25, 0, 0, 0, 0, 2]' : 0.177006}
{'[6, 6, 5, 6, 6, 6, 1, 25, 0, 0, 0, 0, 2]' : 0.176493}
{'[6, 6, 5, 6, 6, 6, 1, 25, 0, 0, 0, 0, 2]' : 0.176792}
{'[6, 6, 5, 6, 6, 6, 1, 25, 0, 0, 0, 0, 2]' : 0.177074}
{'[6, 6, 5, 6, 6, 6, 1, 25, 0, 0, 0, 0, 2]' : 0.176469}
{'[6, 6, 5, 6, 6, 6, 1, 25, 0, 0, 0, 0, 2]' : 0.176927}
{'[6, 6, 5, 6, 6, 6, 1, 25, 0, 0, 0, 0, 2]' : 0.176999}
{'[6, 6, 5, 6, 6, 6, 1, 25, 0, 0, 0, 0, 2]' : 0.176511}
{'[6, 6, 5, 6, 6, 6, 1, 25, 0, 0, 0, 0, 2]' : 0.176672}
{'[6, 6, 5, 6, 6, 6, 1, 25, 0, 0, 0, 0, 2]' : 0.17675}
{'[6, 6, 5, 6, 6, 6, 1, 25, 0, 0, 0, 0, 2]' : 0.177415}
{'[6, 6, 5, 6, 6, 6, 1, 25, 0, 0, 0, 0, 2]' : 0.176464}
{'[6, 6, 5, 6, 6, 6, 1, 25, 0, 0, 0, 0, 2]' : 0.176681}
{'[6, 6, 5, 6, 6, 6, 1, 25, 0, 0, 0, 0, 2]' : 0.177057}
{'[6, 6, 5, 6, 6, 6, 1, 25, 0, 0, 0, 0, 2]' : 0.176517}
{'[6, 6, 5, 6, 6, 6, 1, 25, 0, 0, 0, 0, 2]' : 0.176668}
{'[6, 6, 5, 6, 6, 6, 1, 25, 0, 0, 0, 0, 2]' : 0.176851}
{'[6, 6, 5, 6, 6, 6, 1, 25, 0, 0, 0, 0, 2]' : 0.176829}
{'[6, 6, 5, 6, 6, 6, 1, 25, 0, 0, 0, 0, 2]' : 0.173826}
{'[6, 6, 5, 6, 6, 6, 1, 25, 0, 0, 0, 0, 2]' : 0.176085}
{'[6, 6, 5, 6, 6, 6, 1, 25, 0, 0, 0, 0, 2]' : 0.17658}

out:
 ["{'[6, 6, 5, 6, 6, 6, 1, 25, 0, 0, 0, 0, 2]' : 0.192776}", "{'[6, 6, 5, 6, 6, 6, 1, 25, 0, 0, 0, 0, 2]' : 0.188404}", "{'[6, 6, 5, 6, 6, 6, 1, 25, 0, 0, 0, 0, 2]' : 0.17636}", "{'[6, 6, 5, 6, 6, 6, 1, 25, 0, 0, 0, 0, 2]' : 0.176051}", "{'[6, 6, 5, 6, 6, 6, 1, 25, 0, 0, 0, 0, 2]' : 0.172836}", "{'[6, 6, 5, 6, 6, 6, 1, 25, 0, 0, 0, 0, 2]' : 0.171365}", "{'[6, 6, 5, 6, 6, 6, 1, 25, 0, 0, 0, 0, 2]' : 0.175984}", "{'[6, 6, 5, 6, 6, 6, 1, 25, 0, 0, 0, 0, 2]' : 0.176742}", "{'[6, 6, 5, 6, 6, 6, 1, 25, 0, 0, 0, 0, 2]' : 0.177387}", "{'[6, 6, 5, 6, 6, 6, 1, 25, 0, 0, 0, 0, 2]' : 0.177006}", "{'[6, 6, 5, 6, 6, 6, 1, 25, 0, 0, 0, 0, 2]' : 0.176493}", "{'[6, 6, 5, 6, 6, 6, 1, 25, 0, 0, 0, 0, 2]' : 0.176792}", "{'[6, 6, 5, 6, 6, 6, 1, 25, 0, 0, 0, 0, 2]' : 0.177074}", "{'[6, 6, 5, 6, 6, 6, 1, 25, 0, 0, 0, 0, 2]' : 0.176469}", "{'[6, 6, 5, 6, 6, 6, 1, 25, 0, 0, 0, 0, 2]' : 0.176927}", "{'[6, 6, 5, 6, 6, 6, 1, 25, 0, 0, 0, 0, 2]' : 0.176999}", "{'[6, 6, 5, 6, 6, 6, 1, 25, 0, 0, 0, 0, 2]' : 0.176511}", "{'[6, 6, 5, 6, 6, 6, 1, 25, 0, 0, 0, 0, 2]' : 0.176672}", "{'[6, 6, 5, 6, 6, 6, 1, 25, 0, 0, 0, 0, 2]' : 0.17675}", "{'[6, 6, 5, 6, 6, 6, 1, 25, 0, 0, 0, 0, 2]' : 0.177415}", "{'[6, 6, 5, 6, 6, 6, 1, 25, 0, 0, 0, 0, 2]' : 0.176464}", "{'[6, 6, 5, 6, 6, 6, 1, 25, 0, 0, 0, 0, 2]' : 0.176681}", "{'[6, 6, 5, 6, 6, 6, 1, 25, 0, 0, 0, 0, 2]' : 0.177057}", "{'[6, 6, 5, 6, 6, 6, 1, 25, 0, 0, 0, 0, 2]' : 0.176517}", "{'[6, 6, 5, 6, 6, 6, 1, 25, 0, 0, 0, 0, 2]' : 0.176668}", "{'[6, 6, 5, 6, 6, 6, 1, 25, 0, 0, 0, 0, 2]' : 0.176851}", "{'[6, 6, 5, 6, 6, 6, 1, 25, 0, 0, 0, 0, 2]' : 0.176829}", "{'[6, 6, 5, 6, 6, 6, 1, 25, 0, 0, 0, 0, 2]' : 0.173826}", "{'[6, 6, 5, 6, 6, 6, 1, 25, 0, 0, 0, 0, 2]' : 0.176085}", "{'[6, 6, 5, 6, 6, 6, 1, 25, 0, 0, 0, 0, 2]' : 0.17658}"]
returning from 'run': {'[6, 6, 5, 6, 6, 6, 1, 25, 0, 0, 0, 0, 2]': ([0.192776, 0.188404, 0.17636, 0.176051, 0.172836, 0.171365, 0.175984, 0.176742, 0.177387, 0.177006, 0.176493, 0.176792, 0.177074, 0.176469, 0.176927, 0.176999, 0.176511, 0.176672, 0.17675, 0.177415, 0.176464, 0.176681, 0.177057, 0.176517, 0.176668, 0.176851, 0.176829, 0.173826, 0.176085, 0.17658], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 5, 6, 6, 6, 1, 25, 0, 0, 0, 0, 2]': ([0.192776, 0.188404, 0.17636, 0.176051, 0.172836, 0.171365, 0.175984, 0.176742, 0.177387, 0.177006, 0.176493, 0.176792, 0.177074, 0.176469, 0.176927, 0.176999, 0.176511, 0.176672, 0.17675, 0.177415, 0.176464, 0.176681, 0.177057, 0.176517, 0.176668, 0.176851, 0.176829, 0.173826, 0.176085, 0.17658], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	5
        Additions: 		11647
        Multiplications: 	3456
        Divisions: 		0
        Logical: 		0
        Reads: 			17529
        Writes: 		1824
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest101.exe __orio_perftest101.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest101.exe  
Program Test Output: 
{'[6, 6, 0, 0, 6, 6, 29, 25, 29, 0, 0, 0, 2]' : 0.16778}
{'[6, 6, 0, 0, 6, 6, 29, 25, 29, 0, 0, 0, 2]' : 0.167521}
{'[6, 6, 0, 0, 6, 6, 29, 25, 29, 0, 0, 0, 2]' : 0.161932}
{'[6, 6, 0, 0, 6, 6, 29, 25, 29, 0, 0, 0, 2]' : 0.153441}
{'[6, 6, 0, 0, 6, 6, 29, 25, 29, 0, 0, 0, 2]' : 0.153463}
{'[6, 6, 0, 0, 6, 6, 29, 25, 29, 0, 0, 0, 2]' : 0.152047}
{'[6, 6, 0, 0, 6, 6, 29, 25, 29, 0, 0, 0, 2]' : 0.151031}
{'[6, 6, 0, 0, 6, 6, 29, 25, 29, 0, 0, 0, 2]' : 0.14752}
{'[6, 6, 0, 0, 6, 6, 29, 25, 29, 0, 0, 0, 2]' : 0.147638}
{'[6, 6, 0, 0, 6, 6, 29, 25, 29, 0, 0, 0, 2]' : 0.148154}
{'[6, 6, 0, 0, 6, 6, 29, 25, 29, 0, 0, 0, 2]' : 0.148113}
{'[6, 6, 0, 0, 6, 6, 29, 25, 29, 0, 0, 0, 2]' : 0.148119}
{'[6, 6, 0, 0, 6, 6, 29, 25, 29, 0, 0, 0, 2]' : 0.14758}
{'[6, 6, 0, 0, 6, 6, 29, 25, 29, 0, 0, 0, 2]' : 0.15093}
{'[6, 6, 0, 0, 6, 6, 29, 25, 29, 0, 0, 0, 2]' : 0.1541}
{'[6, 6, 0, 0, 6, 6, 29, 25, 29, 0, 0, 0, 2]' : 0.156149}
{'[6, 6, 0, 0, 6, 6, 29, 25, 29, 0, 0, 0, 2]' : 0.152723}
{'[6, 6, 0, 0, 6, 6, 29, 25, 29, 0, 0, 0, 2]' : 0.152142}
{'[6, 6, 0, 0, 6, 6, 29, 25, 29, 0, 0, 0, 2]' : 0.148534}
{'[6, 6, 0, 0, 6, 6, 29, 25, 29, 0, 0, 0, 2]' : 0.148689}
{'[6, 6, 0, 0, 6, 6, 29, 25, 29, 0, 0, 0, 2]' : 0.152238}
{'[6, 6, 0, 0, 6, 6, 29, 25, 29, 0, 0, 0, 2]' : 0.154795}
{'[6, 6, 0, 0, 6, 6, 29, 25, 29, 0, 0, 0, 2]' : 0.156374}
{'[6, 6, 0, 0, 6, 6, 29, 25, 29, 0, 0, 0, 2]' : 0.150311}
{'[6, 6, 0, 0, 6, 6, 29, 25, 29, 0, 0, 0, 2]' : 0.147917}
{'[6, 6, 0, 0, 6, 6, 29, 25, 29, 0, 0, 0, 2]' : 0.147751}
{'[6, 6, 0, 0, 6, 6, 29, 25, 29, 0, 0, 0, 2]' : 0.148616}
{'[6, 6, 0, 0, 6, 6, 29, 25, 29, 0, 0, 0, 2]' : 0.147682}
{'[6, 6, 0, 0, 6, 6, 29, 25, 29, 0, 0, 0, 2]' : 0.150704}
{'[6, 6, 0, 0, 6, 6, 29, 25, 29, 0, 0, 0, 2]' : 0.153142}

out:
 ["{'[6, 6, 0, 0, 6, 6, 29, 25, 29, 0, 0, 0, 2]' : 0.16778}", "{'[6, 6, 0, 0, 6, 6, 29, 25, 29, 0, 0, 0, 2]' : 0.167521}", "{'[6, 6, 0, 0, 6, 6, 29, 25, 29, 0, 0, 0, 2]' : 0.161932}", "{'[6, 6, 0, 0, 6, 6, 29, 25, 29, 0, 0, 0, 2]' : 0.153441}", "{'[6, 6, 0, 0, 6, 6, 29, 25, 29, 0, 0, 0, 2]' : 0.153463}", "{'[6, 6, 0, 0, 6, 6, 29, 25, 29, 0, 0, 0, 2]' : 0.152047}", "{'[6, 6, 0, 0, 6, 6, 29, 25, 29, 0, 0, 0, 2]' : 0.151031}", "{'[6, 6, 0, 0, 6, 6, 29, 25, 29, 0, 0, 0, 2]' : 0.14752}", "{'[6, 6, 0, 0, 6, 6, 29, 25, 29, 0, 0, 0, 2]' : 0.147638}", "{'[6, 6, 0, 0, 6, 6, 29, 25, 29, 0, 0, 0, 2]' : 0.148154}", "{'[6, 6, 0, 0, 6, 6, 29, 25, 29, 0, 0, 0, 2]' : 0.148113}", "{'[6, 6, 0, 0, 6, 6, 29, 25, 29, 0, 0, 0, 2]' : 0.148119}", "{'[6, 6, 0, 0, 6, 6, 29, 25, 29, 0, 0, 0, 2]' : 0.14758}", "{'[6, 6, 0, 0, 6, 6, 29, 25, 29, 0, 0, 0, 2]' : 0.15093}", "{'[6, 6, 0, 0, 6, 6, 29, 25, 29, 0, 0, 0, 2]' : 0.1541}", "{'[6, 6, 0, 0, 6, 6, 29, 25, 29, 0, 0, 0, 2]' : 0.156149}", "{'[6, 6, 0, 0, 6, 6, 29, 25, 29, 0, 0, 0, 2]' : 0.152723}", "{'[6, 6, 0, 0, 6, 6, 29, 25, 29, 0, 0, 0, 2]' : 0.152142}", "{'[6, 6, 0, 0, 6, 6, 29, 25, 29, 0, 0, 0, 2]' : 0.148534}", "{'[6, 6, 0, 0, 6, 6, 29, 25, 29, 0, 0, 0, 2]' : 0.148689}", "{'[6, 6, 0, 0, 6, 6, 29, 25, 29, 0, 0, 0, 2]' : 0.152238}", "{'[6, 6, 0, 0, 6, 6, 29, 25, 29, 0, 0, 0, 2]' : 0.154795}", "{'[6, 6, 0, 0, 6, 6, 29, 25, 29, 0, 0, 0, 2]' : 0.156374}", "{'[6, 6, 0, 0, 6, 6, 29, 25, 29, 0, 0, 0, 2]' : 0.150311}", "{'[6, 6, 0, 0, 6, 6, 29, 25, 29, 0, 0, 0, 2]' : 0.147917}", "{'[6, 6, 0, 0, 6, 6, 29, 25, 29, 0, 0, 0, 2]' : 0.147751}", "{'[6, 6, 0, 0, 6, 6, 29, 25, 29, 0, 0, 0, 2]' : 0.148616}", "{'[6, 6, 0, 0, 6, 6, 29, 25, 29, 0, 0, 0, 2]' : 0.147682}", "{'[6, 6, 0, 0, 6, 6, 29, 25, 29, 0, 0, 0, 2]' : 0.150704}", "{'[6, 6, 0, 0, 6, 6, 29, 25, 29, 0, 0, 0, 2]' : 0.153142}"]
returning from 'run': {'[6, 6, 0, 0, 6, 6, 29, 25, 29, 0, 0, 0, 2]': ([0.16778, 0.167521, 0.161932, 0.153441, 0.153463, 0.152047, 0.151031, 0.14752, 0.147638, 0.148154, 0.148113, 0.148119, 0.14758, 0.15093, 0.1541, 0.156149, 0.152723, 0.152142, 0.148534, 0.148689, 0.152238, 0.154795, 0.156374, 0.150311, 0.147917, 0.147751, 0.148616, 0.147682, 0.150704, 0.153142], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 0, 0, 6, 6, 29, 25, 29, 0, 0, 0, 2]': ([0.16778, 0.167521, 0.161932, 0.153441, 0.153463, 0.152047, 0.151031, 0.14752, 0.147638, 0.148154, 0.148113, 0.148119, 0.14758, 0.15093, 0.1541, 0.156149, 0.152723, 0.152142, 0.148534, 0.148689, 0.152238, 0.154795, 0.156374, 0.150311, 0.147917, 0.147751, 0.148616, 0.147682, 0.150704, 0.153142], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	74
        Max loop nest depth: 	6
        Additions: 		9067
        Multiplications: 	2592
        Divisions: 		0
        Logical: 		0
        Reads: 			13694
        Writes: 		1502
        Comparisons:		74
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest102.exe __orio_perftest102.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest102.exe  
Program Test Output: 
{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 29, 0, 1, 1]' : 0.142419}
{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 29, 0, 1, 1]' : 0.127725}
{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 29, 0, 1, 1]' : 0.126438}
{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 29, 0, 1, 1]' : 0.126427}
{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 29, 0, 1, 1]' : 0.126168}
{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 29, 0, 1, 1]' : 0.126211}
{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 29, 0, 1, 1]' : 0.123109}
{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 29, 0, 1, 1]' : 0.122992}
{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 29, 0, 1, 1]' : 0.123216}
{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 29, 0, 1, 1]' : 0.124026}
{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 29, 0, 1, 1]' : 0.126461}
{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 29, 0, 1, 1]' : 0.123999}
{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 29, 0, 1, 1]' : 0.12381}
{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 29, 0, 1, 1]' : 0.124062}
{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 29, 0, 1, 1]' : 0.123169}
{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 29, 0, 1, 1]' : 0.123014}
{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 29, 0, 1, 1]' : 0.123245}
{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 29, 0, 1, 1]' : 0.123844}
{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 29, 0, 1, 1]' : 0.125547}
{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 29, 0, 1, 1]' : 0.123052}
{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 29, 0, 1, 1]' : 0.123092}
{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 29, 0, 1, 1]' : 0.123587}
{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 29, 0, 1, 1]' : 0.127134}
{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 29, 0, 1, 1]' : 0.126276}
{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 29, 0, 1, 1]' : 0.126319}
{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 29, 0, 1, 1]' : 0.12684}
{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 29, 0, 1, 1]' : 0.12947}
{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 29, 0, 1, 1]' : 0.127134}
{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 29, 0, 1, 1]' : 0.126243}
{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 29, 0, 1, 1]' : 0.127006}

out:
 ["{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 29, 0, 1, 1]' : 0.142419}", "{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 29, 0, 1, 1]' : 0.127725}", "{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 29, 0, 1, 1]' : 0.126438}", "{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 29, 0, 1, 1]' : 0.126427}", "{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 29, 0, 1, 1]' : 0.126168}", "{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 29, 0, 1, 1]' : 0.126211}", "{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 29, 0, 1, 1]' : 0.123109}", "{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 29, 0, 1, 1]' : 0.122992}", "{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 29, 0, 1, 1]' : 0.123216}", "{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 29, 0, 1, 1]' : 0.124026}", "{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 29, 0, 1, 1]' : 0.126461}", "{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 29, 0, 1, 1]' : 0.123999}", "{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 29, 0, 1, 1]' : 0.12381}", "{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 29, 0, 1, 1]' : 0.124062}", "{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 29, 0, 1, 1]' : 0.123169}", "{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 29, 0, 1, 1]' : 0.123014}", "{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 29, 0, 1, 1]' : 0.123245}", "{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 29, 0, 1, 1]' : 0.123844}", "{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 29, 0, 1, 1]' : 0.125547}", "{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 29, 0, 1, 1]' : 0.123052}", "{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 29, 0, 1, 1]' : 0.123092}", "{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 29, 0, 1, 1]' : 0.123587}", "{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 29, 0, 1, 1]' : 0.127134}", "{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 29, 0, 1, 1]' : 0.126276}", "{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 29, 0, 1, 1]' : 0.126319}", "{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 29, 0, 1, 1]' : 0.12684}", "{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 29, 0, 1, 1]' : 0.12947}", "{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 29, 0, 1, 1]' : 0.127134}", "{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 29, 0, 1, 1]' : 0.126243}", "{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 29, 0, 1, 1]' : 0.127006}"]
returning from 'run': {'[6, 6, 6, 6, 6, 6, 29, 25, 0, 29, 0, 1, 1]': ([0.142419, 0.127725, 0.126438, 0.126427, 0.126168, 0.126211, 0.123109, 0.122992, 0.123216, 0.124026, 0.126461, 0.123999, 0.12381, 0.124062, 0.123169, 0.123014, 0.123245, 0.123844, 0.125547, 0.123052, 0.123092, 0.123587, 0.127134, 0.126276, 0.126319, 0.12684, 0.12947, 0.127134, 0.126243, 0.127006], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 6, 6, 6, 6, 29, 25, 0, 29, 0, 1, 1]': ([0.142419, 0.127725, 0.126438, 0.126427, 0.126168, 0.126211, 0.123109, 0.122992, 0.123216, 0.124026, 0.126461, 0.123999, 0.12381, 0.124062, 0.123169, 0.123014, 0.123245, 0.123844, 0.125547, 0.123052, 0.123092, 0.123587, 0.127134, 0.126276, 0.126319, 0.12684, 0.12947, 0.127134, 0.126243, 0.127006], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	6
        Additions: 		656
        Multiplications: 	216
        Divisions: 		0
        Logical: 		0
        Reads: 			1322
        Writes: 		202
        Comparisons:		18
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest103.exe __orio_perftest103.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest103.exe  
Program Test Output: 
{'[6, 6, 0, 6, 6, 6, 29, 25, 0, 1, 0, 0, 0]' : 0.200526}
{'[6, 6, 0, 6, 6, 6, 29, 25, 0, 1, 0, 0, 0]' : 0.199625}
{'[6, 6, 0, 6, 6, 6, 29, 25, 0, 1, 0, 0, 0]' : 0.1795}
{'[6, 6, 0, 6, 6, 6, 29, 25, 0, 1, 0, 0, 0]' : 0.174292}
{'[6, 6, 0, 6, 6, 6, 29, 25, 0, 1, 0, 0, 0]' : 0.174165}
{'[6, 6, 0, 6, 6, 6, 29, 25, 0, 1, 0, 0, 0]' : 0.174792}
{'[6, 6, 0, 6, 6, 6, 29, 25, 0, 1, 0, 0, 0]' : 0.173959}
{'[6, 6, 0, 6, 6, 6, 29, 25, 0, 1, 0, 0, 0]' : 0.17439}
{'[6, 6, 0, 6, 6, 6, 29, 25, 0, 1, 0, 0, 0]' : 0.174255}
{'[6, 6, 0, 6, 6, 6, 29, 25, 0, 1, 0, 0, 0]' : 0.174312}
{'[6, 6, 0, 6, 6, 6, 29, 25, 0, 1, 0, 0, 0]' : 0.174321}
{'[6, 6, 0, 6, 6, 6, 29, 25, 0, 1, 0, 0, 0]' : 0.174366}
{'[6, 6, 0, 6, 6, 6, 29, 25, 0, 1, 0, 0, 0]' : 0.174045}
{'[6, 6, 0, 6, 6, 6, 29, 25, 0, 1, 0, 0, 0]' : 0.174057}
{'[6, 6, 0, 6, 6, 6, 29, 25, 0, 1, 0, 0, 0]' : 0.175184}
{'[6, 6, 0, 6, 6, 6, 29, 25, 0, 1, 0, 0, 0]' : 0.174036}
{'[6, 6, 0, 6, 6, 6, 29, 25, 0, 1, 0, 0, 0]' : 0.173845}
{'[6, 6, 0, 6, 6, 6, 29, 25, 0, 1, 0, 0, 0]' : 0.174314}
{'[6, 6, 0, 6, 6, 6, 29, 25, 0, 1, 0, 0, 0]' : 0.180624}
{'[6, 6, 0, 6, 6, 6, 29, 25, 0, 1, 0, 0, 0]' : 0.182384}
{'[6, 6, 0, 6, 6, 6, 29, 25, 0, 1, 0, 0, 0]' : 0.179223}
{'[6, 6, 0, 6, 6, 6, 29, 25, 0, 1, 0, 0, 0]' : 0.178097}
{'[6, 6, 0, 6, 6, 6, 29, 25, 0, 1, 0, 0, 0]' : 0.175106}
{'[6, 6, 0, 6, 6, 6, 29, 25, 0, 1, 0, 0, 0]' : 0.178316}
{'[6, 6, 0, 6, 6, 6, 29, 25, 0, 1, 0, 0, 0]' : 0.178814}
{'[6, 6, 0, 6, 6, 6, 29, 25, 0, 1, 0, 0, 0]' : 0.178653}
{'[6, 6, 0, 6, 6, 6, 29, 25, 0, 1, 0, 0, 0]' : 0.178736}
{'[6, 6, 0, 6, 6, 6, 29, 25, 0, 1, 0, 0, 0]' : 0.178643}
{'[6, 6, 0, 6, 6, 6, 29, 25, 0, 1, 0, 0, 0]' : 0.180876}
{'[6, 6, 0, 6, 6, 6, 29, 25, 0, 1, 0, 0, 0]' : 0.182219}

out:
 ["{'[6, 6, 0, 6, 6, 6, 29, 25, 0, 1, 0, 0, 0]' : 0.200526}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 0, 1, 0, 0, 0]' : 0.199625}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 0, 1, 0, 0, 0]' : 0.1795}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 0, 1, 0, 0, 0]' : 0.174292}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 0, 1, 0, 0, 0]' : 0.174165}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 0, 1, 0, 0, 0]' : 0.174792}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 0, 1, 0, 0, 0]' : 0.173959}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 0, 1, 0, 0, 0]' : 0.17439}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 0, 1, 0, 0, 0]' : 0.174255}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 0, 1, 0, 0, 0]' : 0.174312}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 0, 1, 0, 0, 0]' : 0.174321}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 0, 1, 0, 0, 0]' : 0.174366}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 0, 1, 0, 0, 0]' : 0.174045}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 0, 1, 0, 0, 0]' : 0.174057}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 0, 1, 0, 0, 0]' : 0.175184}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 0, 1, 0, 0, 0]' : 0.174036}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 0, 1, 0, 0, 0]' : 0.173845}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 0, 1, 0, 0, 0]' : 0.174314}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 0, 1, 0, 0, 0]' : 0.180624}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 0, 1, 0, 0, 0]' : 0.182384}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 0, 1, 0, 0, 0]' : 0.179223}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 0, 1, 0, 0, 0]' : 0.178097}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 0, 1, 0, 0, 0]' : 0.175106}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 0, 1, 0, 0, 0]' : 0.178316}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 0, 1, 0, 0, 0]' : 0.178814}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 0, 1, 0, 0, 0]' : 0.178653}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 0, 1, 0, 0, 0]' : 0.178736}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 0, 1, 0, 0, 0]' : 0.178643}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 0, 1, 0, 0, 0]' : 0.180876}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 0, 1, 0, 0, 0]' : 0.182219}"]
returning from 'run': {'[6, 6, 0, 6, 6, 6, 29, 25, 0, 1, 0, 0, 0]': ([0.200526, 0.199625, 0.1795, 0.174292, 0.174165, 0.174792, 0.173959, 0.17439, 0.174255, 0.174312, 0.174321, 0.174366, 0.174045, 0.174057, 0.175184, 0.174036, 0.173845, 0.174314, 0.180624, 0.182384, 0.179223, 0.178097, 0.175106, 0.178316, 0.178814, 0.178653, 0.178736, 0.178643, 0.180876, 0.182219], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 0, 6, 6, 6, 29, 25, 0, 1, 0, 0, 0]': ([0.200526, 0.199625, 0.1795, 0.174292, 0.174165, 0.174792, 0.173959, 0.17439, 0.174255, 0.174312, 0.174321, 0.174366, 0.174045, 0.174057, 0.175184, 0.174036, 0.173845, 0.174314, 0.180624, 0.182384, 0.179223, 0.178097, 0.175106, 0.178316, 0.178814, 0.178653, 0.178736, 0.178643, 0.180876, 0.182219], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	21
        Max loop nest depth: 	5
        Additions: 		11649
        Multiplications: 	3456
        Divisions: 		0
        Logical: 		0
        Reads: 			17543
        Writes: 		1828
        Comparisons:		21
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest104.exe __orio_perftest104.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest104.exe  
Program Test Output: 
{'[6, 6, 1, 0, 6, 6, 29, 25, 0, 29, 0, 2, 0]' : 0.174191}
{'[6, 6, 1, 0, 6, 6, 29, 25, 0, 29, 0, 2, 0]' : 0.174093}
{'[6, 6, 1, 0, 6, 6, 29, 25, 0, 29, 0, 2, 0]' : 0.173898}
{'[6, 6, 1, 0, 6, 6, 29, 25, 0, 29, 0, 2, 0]' : 0.174014}
{'[6, 6, 1, 0, 6, 6, 29, 25, 0, 29, 0, 2, 0]' : 0.174059}
{'[6, 6, 1, 0, 6, 6, 29, 25, 0, 29, 0, 2, 0]' : 0.168283}
{'[6, 6, 1, 0, 6, 6, 29, 25, 0, 29, 0, 2, 0]' : 0.164226}
{'[6, 6, 1, 0, 6, 6, 29, 25, 0, 29, 0, 2, 0]' : 0.167341}
{'[6, 6, 1, 0, 6, 6, 29, 25, 0, 29, 0, 2, 0]' : 0.172277}
{'[6, 6, 1, 0, 6, 6, 29, 25, 0, 29, 0, 2, 0]' : 0.174021}
{'[6, 6, 1, 0, 6, 6, 29, 25, 0, 29, 0, 2, 0]' : 0.174452}
{'[6, 6, 1, 0, 6, 6, 29, 25, 0, 29, 0, 2, 0]' : 0.169462}
{'[6, 6, 1, 0, 6, 6, 29, 25, 0, 29, 0, 2, 0]' : 0.164806}
{'[6, 6, 1, 0, 6, 6, 29, 25, 0, 29, 0, 2, 0]' : 0.168371}
{'[6, 6, 1, 0, 6, 6, 29, 25, 0, 29, 0, 2, 0]' : 0.171672}
{'[6, 6, 1, 0, 6, 6, 29, 25, 0, 29, 0, 2, 0]' : 0.174002}
{'[6, 6, 1, 0, 6, 6, 29, 25, 0, 29, 0, 2, 0]' : 0.173993}
{'[6, 6, 1, 0, 6, 6, 29, 25, 0, 29, 0, 2, 0]' : 0.171643}
{'[6, 6, 1, 0, 6, 6, 29, 25, 0, 29, 0, 2, 0]' : 0.163285}
{'[6, 6, 1, 0, 6, 6, 29, 25, 0, 29, 0, 2, 0]' : 0.171622}
{'[6, 6, 1, 0, 6, 6, 29, 25, 0, 29, 0, 2, 0]' : 0.172903}
{'[6, 6, 1, 0, 6, 6, 29, 25, 0, 29, 0, 2, 0]' : 0.173103}
{'[6, 6, 1, 0, 6, 6, 29, 25, 0, 29, 0, 2, 0]' : 0.172757}
{'[6, 6, 1, 0, 6, 6, 29, 25, 0, 29, 0, 2, 0]' : 0.16979}
{'[6, 6, 1, 0, 6, 6, 29, 25, 0, 29, 0, 2, 0]' : 0.168107}
{'[6, 6, 1, 0, 6, 6, 29, 25, 0, 29, 0, 2, 0]' : 0.17268}
{'[6, 6, 1, 0, 6, 6, 29, 25, 0, 29, 0, 2, 0]' : 0.16889}
{'[6, 6, 1, 0, 6, 6, 29, 25, 0, 29, 0, 2, 0]' : 0.172929}
{'[6, 6, 1, 0, 6, 6, 29, 25, 0, 29, 0, 2, 0]' : 0.170654}
{'[6, 6, 1, 0, 6, 6, 29, 25, 0, 29, 0, 2, 0]' : 0.164845}

out:
 ["{'[6, 6, 1, 0, 6, 6, 29, 25, 0, 29, 0, 2, 0]' : 0.174191}", "{'[6, 6, 1, 0, 6, 6, 29, 25, 0, 29, 0, 2, 0]' : 0.174093}", "{'[6, 6, 1, 0, 6, 6, 29, 25, 0, 29, 0, 2, 0]' : 0.173898}", "{'[6, 6, 1, 0, 6, 6, 29, 25, 0, 29, 0, 2, 0]' : 0.174014}", "{'[6, 6, 1, 0, 6, 6, 29, 25, 0, 29, 0, 2, 0]' : 0.174059}", "{'[6, 6, 1, 0, 6, 6, 29, 25, 0, 29, 0, 2, 0]' : 0.168283}", "{'[6, 6, 1, 0, 6, 6, 29, 25, 0, 29, 0, 2, 0]' : 0.164226}", "{'[6, 6, 1, 0, 6, 6, 29, 25, 0, 29, 0, 2, 0]' : 0.167341}", "{'[6, 6, 1, 0, 6, 6, 29, 25, 0, 29, 0, 2, 0]' : 0.172277}", "{'[6, 6, 1, 0, 6, 6, 29, 25, 0, 29, 0, 2, 0]' : 0.174021}", "{'[6, 6, 1, 0, 6, 6, 29, 25, 0, 29, 0, 2, 0]' : 0.174452}", "{'[6, 6, 1, 0, 6, 6, 29, 25, 0, 29, 0, 2, 0]' : 0.169462}", "{'[6, 6, 1, 0, 6, 6, 29, 25, 0, 29, 0, 2, 0]' : 0.164806}", "{'[6, 6, 1, 0, 6, 6, 29, 25, 0, 29, 0, 2, 0]' : 0.168371}", "{'[6, 6, 1, 0, 6, 6, 29, 25, 0, 29, 0, 2, 0]' : 0.171672}", "{'[6, 6, 1, 0, 6, 6, 29, 25, 0, 29, 0, 2, 0]' : 0.174002}", "{'[6, 6, 1, 0, 6, 6, 29, 25, 0, 29, 0, 2, 0]' : 0.173993}", "{'[6, 6, 1, 0, 6, 6, 29, 25, 0, 29, 0, 2, 0]' : 0.171643}", "{'[6, 6, 1, 0, 6, 6, 29, 25, 0, 29, 0, 2, 0]' : 0.163285}", "{'[6, 6, 1, 0, 6, 6, 29, 25, 0, 29, 0, 2, 0]' : 0.171622}", "{'[6, 6, 1, 0, 6, 6, 29, 25, 0, 29, 0, 2, 0]' : 0.172903}", "{'[6, 6, 1, 0, 6, 6, 29, 25, 0, 29, 0, 2, 0]' : 0.173103}", "{'[6, 6, 1, 0, 6, 6, 29, 25, 0, 29, 0, 2, 0]' : 0.172757}", "{'[6, 6, 1, 0, 6, 6, 29, 25, 0, 29, 0, 2, 0]' : 0.16979}", "{'[6, 6, 1, 0, 6, 6, 29, 25, 0, 29, 0, 2, 0]' : 0.168107}", "{'[6, 6, 1, 0, 6, 6, 29, 25, 0, 29, 0, 2, 0]' : 0.17268}", "{'[6, 6, 1, 0, 6, 6, 29, 25, 0, 29, 0, 2, 0]' : 0.16889}", "{'[6, 6, 1, 0, 6, 6, 29, 25, 0, 29, 0, 2, 0]' : 0.172929}", "{'[6, 6, 1, 0, 6, 6, 29, 25, 0, 29, 0, 2, 0]' : 0.170654}", "{'[6, 6, 1, 0, 6, 6, 29, 25, 0, 29, 0, 2, 0]' : 0.164845}"]
returning from 'run': {'[6, 6, 1, 0, 6, 6, 29, 25, 0, 29, 0, 2, 0]': ([0.174191, 0.174093, 0.173898, 0.174014, 0.174059, 0.168283, 0.164226, 0.167341, 0.172277, 0.174021, 0.174452, 0.169462, 0.164806, 0.168371, 0.171672, 0.174002, 0.173993, 0.171643, 0.163285, 0.171622, 0.172903, 0.173103, 0.172757, 0.16979, 0.168107, 0.17268, 0.16889, 0.172929, 0.170654, 0.164845], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 1, 0, 6, 6, 29, 25, 0, 29, 0, 2, 0]': ([0.174191, 0.174093, 0.173898, 0.174014, 0.174059, 0.168283, 0.164226, 0.167341, 0.172277, 0.174021, 0.174452, 0.169462, 0.164806, 0.168371, 0.171672, 0.174002, 0.173993, 0.171643, 0.163285, 0.171622, 0.172903, 0.173103, 0.172757, 0.16979, 0.168107, 0.17268, 0.16889, 0.172929, 0.170654, 0.164845], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	26
        Max loop nest depth: 	5
        Additions: 		11057
        Multiplications: 	3304
        Divisions: 		0
        Logical: 		0
        Reads: 			16760
        Writes: 		1733
        Comparisons:		26
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest105.exe __orio_perftest105.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest105.exe  
Program Test Output: 
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 25, 2, 0, 0]' : 0.254559}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 25, 2, 0, 0]' : 0.2546}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 25, 2, 0, 0]' : 0.238749}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 25, 2, 0, 0]' : 0.222345}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 25, 2, 0, 0]' : 0.222843}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 25, 2, 0, 0]' : 0.229453}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 25, 2, 0, 0]' : 0.226771}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 25, 2, 0, 0]' : 0.222651}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 25, 2, 0, 0]' : 0.222875}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 25, 2, 0, 0]' : 0.223898}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 25, 2, 0, 0]' : 0.230228}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 25, 2, 0, 0]' : 0.229357}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 25, 2, 0, 0]' : 0.225207}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 25, 2, 0, 0]' : 0.223869}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 25, 2, 0, 0]' : 0.226262}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 25, 2, 0, 0]' : 0.226437}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 25, 2, 0, 0]' : 0.224475}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 25, 2, 0, 0]' : 0.223417}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 25, 2, 0, 0]' : 0.225548}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 25, 2, 0, 0]' : 0.227118}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 25, 2, 0, 0]' : 0.224623}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 25, 2, 0, 0]' : 0.224333}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 25, 2, 0, 0]' : 0.226117}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 25, 2, 0, 0]' : 0.224224}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 25, 2, 0, 0]' : 0.224504}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 25, 2, 0, 0]' : 0.222763}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 25, 2, 0, 0]' : 0.226333}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 25, 2, 0, 0]' : 0.223212}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 25, 2, 0, 0]' : 0.225117}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 25, 2, 0, 0]' : 0.22289}

out:
 ["{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 25, 2, 0, 0]' : 0.254559}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 25, 2, 0, 0]' : 0.2546}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 25, 2, 0, 0]' : 0.238749}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 25, 2, 0, 0]' : 0.222345}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 25, 2, 0, 0]' : 0.222843}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 25, 2, 0, 0]' : 0.229453}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 25, 2, 0, 0]' : 0.226771}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 25, 2, 0, 0]' : 0.222651}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 25, 2, 0, 0]' : 0.222875}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 25, 2, 0, 0]' : 0.223898}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 25, 2, 0, 0]' : 0.230228}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 25, 2, 0, 0]' : 0.229357}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 25, 2, 0, 0]' : 0.225207}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 25, 2, 0, 0]' : 0.223869}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 25, 2, 0, 0]' : 0.226262}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 25, 2, 0, 0]' : 0.226437}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 25, 2, 0, 0]' : 0.224475}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 25, 2, 0, 0]' : 0.223417}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 25, 2, 0, 0]' : 0.225548}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 25, 2, 0, 0]' : 0.227118}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 25, 2, 0, 0]' : 0.224623}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 25, 2, 0, 0]' : 0.224333}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 25, 2, 0, 0]' : 0.226117}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 25, 2, 0, 0]' : 0.224224}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 25, 2, 0, 0]' : 0.224504}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 25, 2, 0, 0]' : 0.222763}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 25, 2, 0, 0]' : 0.226333}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 25, 2, 0, 0]' : 0.223212}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 25, 2, 0, 0]' : 0.225117}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 25, 2, 0, 0]' : 0.22289}"]
returning from 'run': {'[6, 6, 6, 0, 6, 6, 0, 25, 0, 25, 2, 0, 0]': ([0.254559, 0.2546, 0.238749, 0.222345, 0.222843, 0.229453, 0.226771, 0.222651, 0.222875, 0.223898, 0.230228, 0.229357, 0.225207, 0.223869, 0.226262, 0.226437, 0.224475, 0.223417, 0.225548, 0.227118, 0.224623, 0.224333, 0.226117, 0.224224, 0.224504, 0.222763, 0.226333, 0.223212, 0.225117, 0.22289], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 6, 0, 6, 6, 0, 25, 0, 25, 2, 0, 0]': ([0.254559, 0.2546, 0.238749, 0.222345, 0.222843, 0.229453, 0.226771, 0.222651, 0.222875, 0.223898, 0.230228, 0.229357, 0.225207, 0.223869, 0.226262, 0.226437, 0.224475, 0.223417, 0.225548, 0.227118, 0.224623, 0.224333, 0.226117, 0.224224, 0.224504, 0.222763, 0.226333, 0.223212, 0.225117, 0.22289], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	17
        Max loop nest depth: 	5
        Additions: 		6120
        Multiplications: 	1836
        Divisions: 		0
        Logical: 		0
        Reads: 			9351
        Writes: 		982
        Comparisons:		17
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest106.exe __orio_perftest106.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest106.exe  
Program Test Output: 
{'[6, 6, 0, 0, 6, 6, 1, 25, 0, 0, 0, 2, 0]' : 0.178971}
{'[6, 6, 0, 0, 6, 6, 1, 25, 0, 0, 0, 2, 0]' : 0.178819}
{'[6, 6, 0, 0, 6, 6, 1, 25, 0, 0, 0, 2, 0]' : 0.16499}
{'[6, 6, 0, 0, 6, 6, 1, 25, 0, 0, 0, 2, 0]' : 0.154852}
{'[6, 6, 0, 0, 6, 6, 1, 25, 0, 0, 0, 2, 0]' : 0.156865}
{'[6, 6, 0, 0, 6, 6, 1, 25, 0, 0, 0, 2, 0]' : 0.156221}
{'[6, 6, 0, 0, 6, 6, 1, 25, 0, 0, 0, 2, 0]' : 0.153901}
{'[6, 6, 0, 0, 6, 6, 1, 25, 0, 0, 0, 2, 0]' : 0.154745}
{'[6, 6, 0, 0, 6, 6, 1, 25, 0, 0, 0, 2, 0]' : 0.152217}
{'[6, 6, 0, 0, 6, 6, 1, 25, 0, 0, 0, 2, 0]' : 0.15366}
{'[6, 6, 0, 0, 6, 6, 1, 25, 0, 0, 0, 2, 0]' : 0.15761}
{'[6, 6, 0, 0, 6, 6, 1, 25, 0, 0, 0, 2, 0]' : 0.155943}
{'[6, 6, 0, 0, 6, 6, 1, 25, 0, 0, 0, 2, 0]' : 0.153141}
{'[6, 6, 0, 0, 6, 6, 1, 25, 0, 0, 0, 2, 0]' : 0.157324}
{'[6, 6, 0, 0, 6, 6, 1, 25, 0, 0, 0, 2, 0]' : 0.154213}
{'[6, 6, 0, 0, 6, 6, 1, 25, 0, 0, 0, 2, 0]' : 0.153863}
{'[6, 6, 0, 0, 6, 6, 1, 25, 0, 0, 0, 2, 0]' : 0.15598}
{'[6, 6, 0, 0, 6, 6, 1, 25, 0, 0, 0, 2, 0]' : 0.154985}
{'[6, 6, 0, 0, 6, 6, 1, 25, 0, 0, 0, 2, 0]' : 0.15283}
{'[6, 6, 0, 0, 6, 6, 1, 25, 0, 0, 0, 2, 0]' : 0.15524}
{'[6, 6, 0, 0, 6, 6, 1, 25, 0, 0, 0, 2, 0]' : 0.156417}
{'[6, 6, 0, 0, 6, 6, 1, 25, 0, 0, 0, 2, 0]' : 0.153811}
{'[6, 6, 0, 0, 6, 6, 1, 25, 0, 0, 0, 2, 0]' : 0.154854}
{'[6, 6, 0, 0, 6, 6, 1, 25, 0, 0, 0, 2, 0]' : 0.158067}
{'[6, 6, 0, 0, 6, 6, 1, 25, 0, 0, 0, 2, 0]' : 0.157354}
{'[6, 6, 0, 0, 6, 6, 1, 25, 0, 0, 0, 2, 0]' : 0.153255}
{'[6, 6, 0, 0, 6, 6, 1, 25, 0, 0, 0, 2, 0]' : 0.157703}
{'[6, 6, 0, 0, 6, 6, 1, 25, 0, 0, 0, 2, 0]' : 0.154331}
{'[6, 6, 0, 0, 6, 6, 1, 25, 0, 0, 0, 2, 0]' : 0.153198}
{'[6, 6, 0, 0, 6, 6, 1, 25, 0, 0, 0, 2, 0]' : 0.156985}

out:
 ["{'[6, 6, 0, 0, 6, 6, 1, 25, 0, 0, 0, 2, 0]' : 0.178971}", "{'[6, 6, 0, 0, 6, 6, 1, 25, 0, 0, 0, 2, 0]' : 0.178819}", "{'[6, 6, 0, 0, 6, 6, 1, 25, 0, 0, 0, 2, 0]' : 0.16499}", "{'[6, 6, 0, 0, 6, 6, 1, 25, 0, 0, 0, 2, 0]' : 0.154852}", "{'[6, 6, 0, 0, 6, 6, 1, 25, 0, 0, 0, 2, 0]' : 0.156865}", "{'[6, 6, 0, 0, 6, 6, 1, 25, 0, 0, 0, 2, 0]' : 0.156221}", "{'[6, 6, 0, 0, 6, 6, 1, 25, 0, 0, 0, 2, 0]' : 0.153901}", "{'[6, 6, 0, 0, 6, 6, 1, 25, 0, 0, 0, 2, 0]' : 0.154745}", "{'[6, 6, 0, 0, 6, 6, 1, 25, 0, 0, 0, 2, 0]' : 0.152217}", "{'[6, 6, 0, 0, 6, 6, 1, 25, 0, 0, 0, 2, 0]' : 0.15366}", "{'[6, 6, 0, 0, 6, 6, 1, 25, 0, 0, 0, 2, 0]' : 0.15761}", "{'[6, 6, 0, 0, 6, 6, 1, 25, 0, 0, 0, 2, 0]' : 0.155943}", "{'[6, 6, 0, 0, 6, 6, 1, 25, 0, 0, 0, 2, 0]' : 0.153141}", "{'[6, 6, 0, 0, 6, 6, 1, 25, 0, 0, 0, 2, 0]' : 0.157324}", "{'[6, 6, 0, 0, 6, 6, 1, 25, 0, 0, 0, 2, 0]' : 0.154213}", "{'[6, 6, 0, 0, 6, 6, 1, 25, 0, 0, 0, 2, 0]' : 0.153863}", "{'[6, 6, 0, 0, 6, 6, 1, 25, 0, 0, 0, 2, 0]' : 0.15598}", "{'[6, 6, 0, 0, 6, 6, 1, 25, 0, 0, 0, 2, 0]' : 0.154985}", "{'[6, 6, 0, 0, 6, 6, 1, 25, 0, 0, 0, 2, 0]' : 0.15283}", "{'[6, 6, 0, 0, 6, 6, 1, 25, 0, 0, 0, 2, 0]' : 0.15524}", "{'[6, 6, 0, 0, 6, 6, 1, 25, 0, 0, 0, 2, 0]' : 0.156417}", "{'[6, 6, 0, 0, 6, 6, 1, 25, 0, 0, 0, 2, 0]' : 0.153811}", "{'[6, 6, 0, 0, 6, 6, 1, 25, 0, 0, 0, 2, 0]' : 0.154854}", "{'[6, 6, 0, 0, 6, 6, 1, 25, 0, 0, 0, 2, 0]' : 0.158067}", "{'[6, 6, 0, 0, 6, 6, 1, 25, 0, 0, 0, 2, 0]' : 0.157354}", "{'[6, 6, 0, 0, 6, 6, 1, 25, 0, 0, 0, 2, 0]' : 0.153255}", "{'[6, 6, 0, 0, 6, 6, 1, 25, 0, 0, 0, 2, 0]' : 0.157703}", "{'[6, 6, 0, 0, 6, 6, 1, 25, 0, 0, 0, 2, 0]' : 0.154331}", "{'[6, 6, 0, 0, 6, 6, 1, 25, 0, 0, 0, 2, 0]' : 0.153198}", "{'[6, 6, 0, 0, 6, 6, 1, 25, 0, 0, 0, 2, 0]' : 0.156985}"]
returning from 'run': {'[6, 6, 0, 0, 6, 6, 1, 25, 0, 0, 0, 2, 0]': ([0.178971, 0.178819, 0.16499, 0.154852, 0.156865, 0.156221, 0.153901, 0.154745, 0.152217, 0.15366, 0.15761, 0.155943, 0.153141, 0.157324, 0.154213, 0.153863, 0.15598, 0.154985, 0.15283, 0.15524, 0.156417, 0.153811, 0.154854, 0.158067, 0.157354, 0.153255, 0.157703, 0.154331, 0.153198, 0.156985], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 0, 0, 6, 6, 1, 25, 0, 0, 0, 2, 0]': ([0.178971, 0.178819, 0.16499, 0.154852, 0.156865, 0.156221, 0.153901, 0.154745, 0.152217, 0.15366, 0.15761, 0.155943, 0.153141, 0.157324, 0.154213, 0.153863, 0.15598, 0.154985, 0.15283, 0.15524, 0.156417, 0.153811, 0.154854, 0.158067, 0.157354, 0.153255, 0.157703, 0.154331, 0.153198, 0.156985], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Complete design, with measurements:
      T1_K T2_I U1_I U_J U_K RT_I RT_J RT_K cost_mean
4954     0    0    0   0  29    1    0    1 0.1176507
5512     5    5    0  29   0    1    1    0 0.1168405
6958     0    6   29   6   0    2    0    0 0.2404163
7496     6    0   19  13   0    0    0    0 0.1477098
7631     6    0   28   0   1    2    0    0 0.2115541
13754    0    6    2   0  29    0    0    0 0.1705133
16749    5    6    1   0   0    0    0    2 0.1772190
17245    0    0   29  29   0    0    0    2 0.1522379
19556    6    6   29   0  29    0    1    1 0.1257345
20380    0    6   29   0   1    0    0    0 0.1781892
20424    1    0   29   0  29    0    2    0 0.1708790
21729    6    0    0   0  25    2    0    0 0.2274926
25837    0    0    1   0   0    0    2    0 0.1570782

Heteroscedasticity Test p-value: 0.951491748722
Regression Step:            Df   Sum Sq  Mean Sq F value Pr(>F)
T1_K         1 0.000001 0.000001   0.001  0.981
T2_I         1 0.000009 0.000009   0.005  0.946
U1_I         1 0.000932 0.000932   0.552  0.499
U_J          1 0.002518 0.002518   1.491  0.289
U_K          1 0.002078 0.002078   1.231  0.329
RT_I         1 0.006016 0.006016   3.563  0.132
RT_J         1 0.000202 0.000202   0.120  0.747
RT_K         1 0.000085 0.000085   0.050  0.833
Residuals    4 0.006754 0.001689               

Predicting Best
Generating valid search space of size 26000 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Tested coordinates: 110000
Tested coordinates: 120000
Tested coordinates: 130000
Tested coordinates: 140000
Tested coordinates: 150000
Tested coordinates: 160000
Tested coordinates: 170000
Tested coordinates: 180000
Tested coordinates: 190000
Tested coordinates: 200000
Tested coordinates: 210000
Tested coordinates: 220000
Tested coordinates: 230000
Tested coordinates: 240000
Tested coordinates: 250000
Tested coordinates: 260000
Tested coordinates: 270000
Tested coordinates: 280000
Tested coordinates: 290000
Tested coordinates: 300000
Tested coordinates: 310000
Tested coordinates: 320000
Tested coordinates: 330000
Tested coordinates: 340000
Tested coordinates: 350000
Tested coordinates: 360000
Tested coordinates: 370000
Valid coordinates: 5200
Tested coordinates: 380000
Tested coordinates: 390000
Tested coordinates: 400000
Tested coordinates: 410000
Tested coordinates: 420000
Tested coordinates: 430000
Tested coordinates: 440000
Tested coordinates: 450000
Tested coordinates: 460000
Tested coordinates: 470000
Tested coordinates: 480000
Tested coordinates: 490000
Tested coordinates: 500000
Tested coordinates: 510000
Tested coordinates: 520000
Tested coordinates: 530000
Tested coordinates: 540000
Tested coordinates: 550000
Tested coordinates: 560000
Tested coordinates: 570000
Tested coordinates: 580000
Tested coordinates: 590000
Tested coordinates: 600000
Tested coordinates: 610000
Tested coordinates: 620000
Tested coordinates: 630000
Tested coordinates: 640000
Tested coordinates: 650000
Tested coordinates: 660000
Tested coordinates: 670000
Tested coordinates: 680000
Tested coordinates: 690000
Tested coordinates: 700000
Tested coordinates: 710000
Tested coordinates: 720000
Tested coordinates: 730000
Tested coordinates: 740000
Tested coordinates: 750000
Valid coordinates: 10400
Tested coordinates: 760000
Tested coordinates: 770000
Tested coordinates: 780000
Tested coordinates: 790000
Tested coordinates: 800000
Tested coordinates: 810000
Tested coordinates: 820000
Tested coordinates: 830000
Tested coordinates: 840000
Tested coordinates: 850000
Tested coordinates: 860000
Tested coordinates: 870000
Tested coordinates: 880000
Tested coordinates: 890000
Tested coordinates: 900000
Tested coordinates: 910000
Tested coordinates: 920000
Tested coordinates: 930000
Tested coordinates: 940000
Tested coordinates: 950000
Tested coordinates: 960000
Tested coordinates: 970000
Tested coordinates: 980000
Tested coordinates: 990000
Tested coordinates: 1000000
Tested coordinates: 1010000
Tested coordinates: 1020000
Tested coordinates: 1030000
Tested coordinates: 1040000
Tested coordinates: 1050000
Tested coordinates: 1060000
Tested coordinates: 1070000
Tested coordinates: 1080000
Tested coordinates: 1090000
Tested coordinates: 1100000
Tested coordinates: 1110000
Tested coordinates: 1120000
Tested coordinates: 1130000
Valid coordinates: 15600
Tested coordinates: 1140000
Tested coordinates: 1150000
Tested coordinates: 1160000
Tested coordinates: 1170000
Tested coordinates: 1180000
Tested coordinates: 1190000
Tested coordinates: 1200000
Tested coordinates: 1210000
Tested coordinates: 1220000
Tested coordinates: 1230000
Tested coordinates: 1240000
Tested coordinates: 1250000
Tested coordinates: 1260000
Tested coordinates: 1270000
Tested coordinates: 1280000
Tested coordinates: 1290000
Tested coordinates: 1300000
Tested coordinates: 1310000
Tested coordinates: 1320000
Tested coordinates: 1330000
Tested coordinates: 1340000
Tested coordinates: 1350000
Tested coordinates: 1360000
Tested coordinates: 1370000
Tested coordinates: 1380000
Tested coordinates: 1390000
Tested coordinates: 1400000
Tested coordinates: 1410000
Tested coordinates: 1420000
Tested coordinates: 1430000
Tested coordinates: 1440000
Tested coordinates: 1450000
Tested coordinates: 1460000
Tested coordinates: 1470000
Tested coordinates: 1480000
Tested coordinates: 1490000
Valid coordinates: 20800
Tested coordinates: 1500000
Tested coordinates: 1510000
Tested coordinates: 1520000
Tested coordinates: 1530000
Tested coordinates: 1540000
Tested coordinates: 1550000
Tested coordinates: 1560000
Tested coordinates: 1570000
Tested coordinates: 1580000
Tested coordinates: 1590000
Tested coordinates: 1600000
Tested coordinates: 1610000
Tested coordinates: 1620000
Tested coordinates: 1630000
Tested coordinates: 1640000
Tested coordinates: 1650000
Tested coordinates: 1660000
Tested coordinates: 1670000
Tested coordinates: 1680000
Tested coordinates: 1690000
Tested coordinates: 1700000
Tested coordinates: 1710000
Tested coordinates: 1720000
Tested coordinates: 1730000
Tested coordinates: 1740000
Tested coordinates: 1750000
Tested coordinates: 1760000
Tested coordinates: 1770000
Tested coordinates: 1780000
Tested coordinates: 1790000
Tested coordinates: 1800000
Tested coordinates: 1810000
Tested coordinates: 1820000
Tested coordinates: 1830000
Tested coordinates: 1840000
Tested coordinates: 1850000
Tested coordinates: 1860000
Tested coordinates: 1870000
Valid coordinates: 26000
Valid/Tested configurations: 26000/1870643
Generated Search Space:
NULL
Getting Best from Design
Response: ['cost_mean']
Design Names: [1] "T1_K"      "T2_I"      "U1_I"      "U_J"       "U_K"       "RT_I"     
[7] "RT_J"      "RT_K"      "cost_mean"

Design Response:       cost_mean
4954  0.1176507
5512  0.1168405
6958  0.2404163
7496  0.1477098
7631  0.2115541
13754 0.1705133
16749 0.1772190
17245 0.1522379
19556 0.1257345
20380 0.1781892
20424 0.1708790
21729 0.2274926
25837 0.1570782

Current Design Names: ['T1_K', 'T2_I', 'U1_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Getting fixed variables
No variables within acceptable threshold
Fixed Variables: {'T2_K': 6, 'T2_J': 6, 'U_I': 25, 'T1_I': 6, 'T1_J': 6}
Unique Variables: []
Pruning Model
No variables within acceptable threshold
Best Predicted:      T1_I T1_J T1_K T2_I T2_J T2_K U1_I U_I U_J U_K RT_I RT_J RT_K
8870    6    6    6    5    6    6    3  25  29   0    0    2    0

Best From Design: [6, 6, 5, 5, 6, 6, 0, 25, 29, 0, 1, 1, 0]
Pruned Factors: ['T1_K', 'T2_I', 'U1_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Pruned Inverse Factors: []
Pruned Interactions: []
Fixed Factors: {'T2_K': 6, 'T2_J': 6, 'U_I': 25, 'T1_I': 6, 'T1_J': 6}
Length of requested configs: 1
Result was on Database, Returning Now
Starting Point (-O3):
0.16059526666666663
Predicted Best Point:
[6, 6, 6, 5, 6, 6, 3, 25, 29, 0, 0, 2, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	72
        Max loop nest depth: 	6
        Additions: 		11993
        Multiplications: 	3456
        Divisions: 		0
        Logical: 		0
        Reads: 			17948
        Writes: 		1904
        Comparisons:		72
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest107.exe __orio_perftest107.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest107.exe  
Program Test Output: 
{'[6, 6, 6, 5, 6, 6, 3, 25, 29, 0, 0, 2, 0]' : 0.19062}
{'[6, 6, 6, 5, 6, 6, 3, 25, 29, 0, 0, 2, 0]' : 0.1831}
{'[6, 6, 6, 5, 6, 6, 3, 25, 29, 0, 0, 2, 0]' : 0.161365}
{'[6, 6, 6, 5, 6, 6, 3, 25, 29, 0, 0, 2, 0]' : 0.161308}
{'[6, 6, 6, 5, 6, 6, 3, 25, 29, 0, 0, 2, 0]' : 0.16149}
{'[6, 6, 6, 5, 6, 6, 3, 25, 29, 0, 0, 2, 0]' : 0.161503}
{'[6, 6, 6, 5, 6, 6, 3, 25, 29, 0, 0, 2, 0]' : 0.16152}
{'[6, 6, 6, 5, 6, 6, 3, 25, 29, 0, 0, 2, 0]' : 0.161498}
{'[6, 6, 6, 5, 6, 6, 3, 25, 29, 0, 0, 2, 0]' : 0.161479}
{'[6, 6, 6, 5, 6, 6, 3, 25, 29, 0, 0, 2, 0]' : 0.16148}
{'[6, 6, 6, 5, 6, 6, 3, 25, 29, 0, 0, 2, 0]' : 0.161458}
{'[6, 6, 6, 5, 6, 6, 3, 25, 29, 0, 0, 2, 0]' : 0.16188}
{'[6, 6, 6, 5, 6, 6, 3, 25, 29, 0, 0, 2, 0]' : 0.16162}
{'[6, 6, 6, 5, 6, 6, 3, 25, 29, 0, 0, 2, 0]' : 0.161579}
{'[6, 6, 6, 5, 6, 6, 3, 25, 29, 0, 0, 2, 0]' : 0.161336}
{'[6, 6, 6, 5, 6, 6, 3, 25, 29, 0, 0, 2, 0]' : 0.161657}
{'[6, 6, 6, 5, 6, 6, 3, 25, 29, 0, 0, 2, 0]' : 0.161755}
{'[6, 6, 6, 5, 6, 6, 3, 25, 29, 0, 0, 2, 0]' : 0.161401}
{'[6, 6, 6, 5, 6, 6, 3, 25, 29, 0, 0, 2, 0]' : 0.161718}
{'[6, 6, 6, 5, 6, 6, 3, 25, 29, 0, 0, 2, 0]' : 0.161599}
{'[6, 6, 6, 5, 6, 6, 3, 25, 29, 0, 0, 2, 0]' : 0.161458}
{'[6, 6, 6, 5, 6, 6, 3, 25, 29, 0, 0, 2, 0]' : 0.161371}
{'[6, 6, 6, 5, 6, 6, 3, 25, 29, 0, 0, 2, 0]' : 0.161604}
{'[6, 6, 6, 5, 6, 6, 3, 25, 29, 0, 0, 2, 0]' : 0.161747}
{'[6, 6, 6, 5, 6, 6, 3, 25, 29, 0, 0, 2, 0]' : 0.161522}
{'[6, 6, 6, 5, 6, 6, 3, 25, 29, 0, 0, 2, 0]' : 0.161507}
{'[6, 6, 6, 5, 6, 6, 3, 25, 29, 0, 0, 2, 0]' : 0.161987}
{'[6, 6, 6, 5, 6, 6, 3, 25, 29, 0, 0, 2, 0]' : 0.161409}
{'[6, 6, 6, 5, 6, 6, 3, 25, 29, 0, 0, 2, 0]' : 0.161562}
{'[6, 6, 6, 5, 6, 6, 3, 25, 29, 0, 0, 2, 0]' : 0.161527}

out:
 ["{'[6, 6, 6, 5, 6, 6, 3, 25, 29, 0, 0, 2, 0]' : 0.19062}", "{'[6, 6, 6, 5, 6, 6, 3, 25, 29, 0, 0, 2, 0]' : 0.1831}", "{'[6, 6, 6, 5, 6, 6, 3, 25, 29, 0, 0, 2, 0]' : 0.161365}", "{'[6, 6, 6, 5, 6, 6, 3, 25, 29, 0, 0, 2, 0]' : 0.161308}", "{'[6, 6, 6, 5, 6, 6, 3, 25, 29, 0, 0, 2, 0]' : 0.16149}", "{'[6, 6, 6, 5, 6, 6, 3, 25, 29, 0, 0, 2, 0]' : 0.161503}", "{'[6, 6, 6, 5, 6, 6, 3, 25, 29, 0, 0, 2, 0]' : 0.16152}", "{'[6, 6, 6, 5, 6, 6, 3, 25, 29, 0, 0, 2, 0]' : 0.161498}", "{'[6, 6, 6, 5, 6, 6, 3, 25, 29, 0, 0, 2, 0]' : 0.161479}", "{'[6, 6, 6, 5, 6, 6, 3, 25, 29, 0, 0, 2, 0]' : 0.16148}", "{'[6, 6, 6, 5, 6, 6, 3, 25, 29, 0, 0, 2, 0]' : 0.161458}", "{'[6, 6, 6, 5, 6, 6, 3, 25, 29, 0, 0, 2, 0]' : 0.16188}", "{'[6, 6, 6, 5, 6, 6, 3, 25, 29, 0, 0, 2, 0]' : 0.16162}", "{'[6, 6, 6, 5, 6, 6, 3, 25, 29, 0, 0, 2, 0]' : 0.161579}", "{'[6, 6, 6, 5, 6, 6, 3, 25, 29, 0, 0, 2, 0]' : 0.161336}", "{'[6, 6, 6, 5, 6, 6, 3, 25, 29, 0, 0, 2, 0]' : 0.161657}", "{'[6, 6, 6, 5, 6, 6, 3, 25, 29, 0, 0, 2, 0]' : 0.161755}", "{'[6, 6, 6, 5, 6, 6, 3, 25, 29, 0, 0, 2, 0]' : 0.161401}", "{'[6, 6, 6, 5, 6, 6, 3, 25, 29, 0, 0, 2, 0]' : 0.161718}", "{'[6, 6, 6, 5, 6, 6, 3, 25, 29, 0, 0, 2, 0]' : 0.161599}", "{'[6, 6, 6, 5, 6, 6, 3, 25, 29, 0, 0, 2, 0]' : 0.161458}", "{'[6, 6, 6, 5, 6, 6, 3, 25, 29, 0, 0, 2, 0]' : 0.161371}", "{'[6, 6, 6, 5, 6, 6, 3, 25, 29, 0, 0, 2, 0]' : 0.161604}", "{'[6, 6, 6, 5, 6, 6, 3, 25, 29, 0, 0, 2, 0]' : 0.161747}", "{'[6, 6, 6, 5, 6, 6, 3, 25, 29, 0, 0, 2, 0]' : 0.161522}", "{'[6, 6, 6, 5, 6, 6, 3, 25, 29, 0, 0, 2, 0]' : 0.161507}", "{'[6, 6, 6, 5, 6, 6, 3, 25, 29, 0, 0, 2, 0]' : 0.161987}", "{'[6, 6, 6, 5, 6, 6, 3, 25, 29, 0, 0, 2, 0]' : 0.161409}", "{'[6, 6, 6, 5, 6, 6, 3, 25, 29, 0, 0, 2, 0]' : 0.161562}", "{'[6, 6, 6, 5, 6, 6, 3, 25, 29, 0, 0, 2, 0]' : 0.161527}"]
returning from 'run': {'[6, 6, 6, 5, 6, 6, 3, 25, 29, 0, 0, 2, 0]': ([0.19062, 0.1831, 0.161365, 0.161308, 0.16149, 0.161503, 0.16152, 0.161498, 0.161479, 0.16148, 0.161458, 0.16188, 0.16162, 0.161579, 0.161336, 0.161657, 0.161755, 0.161401, 0.161718, 0.161599, 0.161458, 0.161371, 0.161604, 0.161747, 0.161522, 0.161507, 0.161987, 0.161409, 0.161562, 0.161527], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 6, 5, 6, 6, 3, 25, 29, 0, 0, 2, 0]': ([0.19062, 0.1831, 0.161365, 0.161308, 0.16149, 0.161503, 0.16152, 0.161498, 0.161479, 0.16148, 0.161458, 0.16188, 0.16162, 0.161579, 0.161336, 0.161657, 0.161755, 0.161401, 0.161718, 0.161599, 0.161458, 0.161371, 0.161604, 0.161747, 0.161522, 0.161507, 0.161987, 0.161409, 0.161562, 0.161527], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Design Best Point:
[6, 6, 5, 5, 6, 6, 0, 25, 29, 0, 1, 1, 0]
Length of requested configs: 1
Result was on Database, Returning Now
Fixed Factors: {'T2_K': 6, 'T2_J': 6, 'U_I': 25, 'T1_I': 6, 'T1_J': 6}
Slowdown (Design Best): 0.7275463494357866
Slowdown (Predicted Best): 1.0164392557854551
Budget: 100/180
Current Best Point: 
[6, 6, 0, 6, 6, 6, 27, 0, 3, 29, 1, 1, 0]
Step 7
Full Model:  ~ T1_K + T2_I + U1_I + U_J + U_K + RT_I + RT_J + RT_K
Generating valid search space of size 26000 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Tested coordinates: 110000
Tested coordinates: 120000
Tested coordinates: 130000
Tested coordinates: 140000
Tested coordinates: 150000
Tested coordinates: 160000
Tested coordinates: 170000
Tested coordinates: 180000
Tested coordinates: 190000
Tested coordinates: 200000
Tested coordinates: 210000
Tested coordinates: 220000
Tested coordinates: 230000
Tested coordinates: 240000
Tested coordinates: 250000
Tested coordinates: 260000
Tested coordinates: 270000
Tested coordinates: 280000
Tested coordinates: 290000
Tested coordinates: 300000
Tested coordinates: 310000
Tested coordinates: 320000
Tested coordinates: 330000
Tested coordinates: 340000
Tested coordinates: 350000
Tested coordinates: 360000
Valid coordinates: 5200
Tested coordinates: 370000
Tested coordinates: 380000
Tested coordinates: 390000
Tested coordinates: 400000
Tested coordinates: 410000
Tested coordinates: 420000
Tested coordinates: 430000
Tested coordinates: 440000
Tested coordinates: 450000
Tested coordinates: 460000
Tested coordinates: 470000
Tested coordinates: 480000
Tested coordinates: 490000
Tested coordinates: 500000
Tested coordinates: 510000
Tested coordinates: 520000
Tested coordinates: 530000
Tested coordinates: 540000
Tested coordinates: 550000
Tested coordinates: 560000
Tested coordinates: 570000
Tested coordinates: 580000
Tested coordinates: 590000
Tested coordinates: 600000
Tested coordinates: 610000
Tested coordinates: 620000
Tested coordinates: 630000
Tested coordinates: 640000
Tested coordinates: 650000
Tested coordinates: 660000
Tested coordinates: 670000
Tested coordinates: 680000
Tested coordinates: 690000
Tested coordinates: 700000
Tested coordinates: 710000
Tested coordinates: 720000
Tested coordinates: 730000
Valid coordinates: 10400
Tested coordinates: 740000
Tested coordinates: 750000
Tested coordinates: 760000
Tested coordinates: 770000
Tested coordinates: 780000
Tested coordinates: 790000
Tested coordinates: 800000
Tested coordinates: 810000
Tested coordinates: 820000
Tested coordinates: 830000
Tested coordinates: 840000
Tested coordinates: 850000
Tested coordinates: 860000
Tested coordinates: 870000
Tested coordinates: 880000
Tested coordinates: 890000
Tested coordinates: 900000
Tested coordinates: 910000
Tested coordinates: 920000
Tested coordinates: 930000
Tested coordinates: 940000
Tested coordinates: 950000
Tested coordinates: 960000
Tested coordinates: 970000
Tested coordinates: 980000
Tested coordinates: 990000
Tested coordinates: 1000000
Tested coordinates: 1010000
Tested coordinates: 1020000
Tested coordinates: 1030000
Tested coordinates: 1040000
Tested coordinates: 1050000
Tested coordinates: 1060000
Tested coordinates: 1070000
Tested coordinates: 1080000
Tested coordinates: 1090000
Tested coordinates: 1100000
Tested coordinates: 1110000
Valid coordinates: 15600
Tested coordinates: 1120000
Tested coordinates: 1130000
Tested coordinates: 1140000
Tested coordinates: 1150000
Tested coordinates: 1160000
Tested coordinates: 1170000
Tested coordinates: 1180000
Tested coordinates: 1190000
Tested coordinates: 1200000
Tested coordinates: 1210000
Tested coordinates: 1220000
Tested coordinates: 1230000
Tested coordinates: 1240000
Tested coordinates: 1250000
Tested coordinates: 1260000
Tested coordinates: 1270000
Tested coordinates: 1280000
Tested coordinates: 1290000
Tested coordinates: 1300000
Tested coordinates: 1310000
Tested coordinates: 1320000
Tested coordinates: 1330000
Tested coordinates: 1340000
Tested coordinates: 1350000
Tested coordinates: 1360000
Tested coordinates: 1370000
Tested coordinates: 1380000
Tested coordinates: 1390000
Tested coordinates: 1400000
Tested coordinates: 1410000
Tested coordinates: 1420000
Tested coordinates: 1430000
Tested coordinates: 1440000
Tested coordinates: 1450000
Tested coordinates: 1460000
Tested coordinates: 1470000
Tested coordinates: 1480000
Valid coordinates: 20800
Tested coordinates: 1490000
Tested coordinates: 1500000
Tested coordinates: 1510000
Tested coordinates: 1520000
Tested coordinates: 1530000
Tested coordinates: 1540000
Tested coordinates: 1550000
Tested coordinates: 1560000
Tested coordinates: 1570000
Tested coordinates: 1580000
Tested coordinates: 1590000
Tested coordinates: 1600000
Tested coordinates: 1610000
Tested coordinates: 1620000
Tested coordinates: 1630000
Tested coordinates: 1640000
Tested coordinates: 1650000
Tested coordinates: 1660000
Tested coordinates: 1670000
Tested coordinates: 1680000
Tested coordinates: 1690000
Tested coordinates: 1700000
Tested coordinates: 1710000
Tested coordinates: 1720000
Tested coordinates: 1730000
Tested coordinates: 1740000
Tested coordinates: 1750000
Tested coordinates: 1760000
Tested coordinates: 1770000
Tested coordinates: 1780000
Tested coordinates: 1790000
Tested coordinates: 1800000
Tested coordinates: 1810000
Tested coordinates: 1820000
Tested coordinates: 1830000
Tested coordinates: 1840000
Tested coordinates: 1850000
Tested coordinates: 1860000
Valid coordinates: 26000
Valid/Tested configurations: 26000/1863232
Generated Search Space:
NULL
Clean Info:
Removed Factors: character(0)

Removed Inverse Factors: character(0)

New Factors: ['T1_K', 'T2_I', 'U1_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
New Inverse Factors: []
New Fixed Factors: {'T2_K': 6, 'T2_J': 6, 'U_I': 25, 'T1_I': 6, 'T1_J': 6}
Fixed Factors: {'T2_K': 6, 'T2_J': 6, 'U_I': 25, 'T1_I': 6, 'T1_J': 6}
Computing D-Optimal Design
Computing D-Optimal Design with 13 experiments
Design Formula:  ~ T1_K + T2_I + U1_I + U_J + U_K + RT_I + RT_J + RT_K
Starting "optFederov" run
Using Search Space:
NULL
Data Dimensions: [1] 26000     8

      T1_K T2_I U1_I U_J U_K RT_I RT_J RT_K
3340     6    0    0   0   4    0    0    0
5058     0    6    3   0  26    0    0    2
5354     0    6    2   0  28    0    2    0
5420     6    6    0  29   0    2    0    0
7846     5    0    2   0  28    0    0    0
8800     0    0    7   3   0    0    2    0
14959    0    6    0   0   0    0    0    2
15369    0    6   29  29   0    0    0    0
15477    6    6    3  28   0    0    2    0
15681    6    6   29   0   1    2    0    0
19021    0    0   21   0  29    2    0    0
24101    5    6   29   0  29    0    1    0
24271    6    0   29  29   0    1    0    1

D-Efficiency Approximation: [1] 0.645

Measuring design of size 13
Current Design Names: ['T1_K', 'T2_I', 'U1_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Length of requested configs: 1
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	5
        Additions: 		1180
        Multiplications: 	378
        Divisions: 		0
        Logical: 		0
        Reads: 			2072
        Writes: 		253
        Comparisons:		18
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest108.exe __orio_perftest108.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest108.exe  
Program Test Output: 
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 4, 0, 0, 0]' : 0.163364}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 4, 0, 0, 0]' : 0.164123}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 4, 0, 0, 0]' : 0.163412}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 4, 0, 0, 0]' : 0.149435}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 4, 0, 0, 0]' : 0.142789}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 4, 0, 0, 0]' : 0.145365}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 4, 0, 0, 0]' : 0.143261}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 4, 0, 0, 0]' : 0.141779}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 4, 0, 0, 0]' : 0.143835}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 4, 0, 0, 0]' : 0.14297}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 4, 0, 0, 0]' : 0.142337}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 4, 0, 0, 0]' : 0.142897}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 4, 0, 0, 0]' : 0.14233}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 4, 0, 0, 0]' : 0.142286}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 4, 0, 0, 0]' : 0.142235}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 4, 0, 0, 0]' : 0.14413}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 4, 0, 0, 0]' : 0.14297}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 4, 0, 0, 0]' : 0.142293}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 4, 0, 0, 0]' : 0.143453}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 4, 0, 0, 0]' : 0.142298}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 4, 0, 0, 0]' : 0.142067}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 4, 0, 0, 0]' : 0.142156}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 4, 0, 0, 0]' : 0.145354}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 4, 0, 0, 0]' : 0.146048}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 4, 0, 0, 0]' : 0.146177}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 4, 0, 0, 0]' : 0.146892}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 4, 0, 0, 0]' : 0.142449}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 4, 0, 0, 0]' : 0.14212}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 4, 0, 0, 0]' : 0.14295}
{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 4, 0, 0, 0]' : 0.142891}

out:
 ["{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 4, 0, 0, 0]' : 0.163364}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 4, 0, 0, 0]' : 0.164123}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 4, 0, 0, 0]' : 0.163412}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 4, 0, 0, 0]' : 0.149435}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 4, 0, 0, 0]' : 0.142789}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 4, 0, 0, 0]' : 0.145365}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 4, 0, 0, 0]' : 0.143261}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 4, 0, 0, 0]' : 0.141779}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 4, 0, 0, 0]' : 0.143835}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 4, 0, 0, 0]' : 0.14297}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 4, 0, 0, 0]' : 0.142337}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 4, 0, 0, 0]' : 0.142897}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 4, 0, 0, 0]' : 0.14233}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 4, 0, 0, 0]' : 0.142286}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 4, 0, 0, 0]' : 0.142235}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 4, 0, 0, 0]' : 0.14413}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 4, 0, 0, 0]' : 0.14297}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 4, 0, 0, 0]' : 0.142293}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 4, 0, 0, 0]' : 0.143453}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 4, 0, 0, 0]' : 0.142298}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 4, 0, 0, 0]' : 0.142067}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 4, 0, 0, 0]' : 0.142156}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 4, 0, 0, 0]' : 0.145354}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 4, 0, 0, 0]' : 0.146048}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 4, 0, 0, 0]' : 0.146177}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 4, 0, 0, 0]' : 0.146892}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 4, 0, 0, 0]' : 0.142449}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 4, 0, 0, 0]' : 0.14212}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 4, 0, 0, 0]' : 0.14295}", "{'[6, 6, 6, 0, 6, 6, 0, 25, 0, 4, 0, 0, 0]' : 0.142891}"]
returning from 'run': {'[6, 6, 6, 0, 6, 6, 0, 25, 0, 4, 0, 0, 0]': ([0.163364, 0.164123, 0.163412, 0.149435, 0.142789, 0.145365, 0.143261, 0.141779, 0.143835, 0.14297, 0.142337, 0.142897, 0.14233, 0.142286, 0.142235, 0.14413, 0.14297, 0.142293, 0.143453, 0.142298, 0.142067, 0.142156, 0.145354, 0.146048, 0.146177, 0.146892, 0.142449, 0.14212, 0.14295, 0.142891], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 6, 0, 6, 6, 0, 25, 0, 4, 0, 0, 0]': ([0.163364, 0.164123, 0.163412, 0.149435, 0.142789, 0.145365, 0.143261, 0.141779, 0.143835, 0.14297, 0.142337, 0.142897, 0.14233, 0.142286, 0.142235, 0.14413, 0.14297, 0.142293, 0.143453, 0.142298, 0.142067, 0.142156, 0.145354, 0.146048, 0.146177, 0.146892, 0.142449, 0.14212, 0.14295, 0.142891], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	70
        Max loop nest depth: 	6
        Additions: 		11502
        Multiplications: 	3294
        Divisions: 		0
        Logical: 		0
        Reads: 			17124
        Writes: 		1819
        Comparisons:		70
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest109.exe __orio_perftest109.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest109.exe  
Program Test Output: 
{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 26, 0, 0, 2]' : 0.193095}
{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 26, 0, 0, 2]' : 0.192934}
{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 26, 0, 0, 2]' : 0.174242}
{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 26, 0, 0, 2]' : 0.169013}
{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 26, 0, 0, 2]' : 0.168541}
{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 26, 0, 0, 2]' : 0.168256}
{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 26, 0, 0, 2]' : 0.167866}
{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 26, 0, 0, 2]' : 0.168475}
{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 26, 0, 0, 2]' : 0.171702}
{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 26, 0, 0, 2]' : 0.169127}
{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 26, 0, 0, 2]' : 0.167998}
{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 26, 0, 0, 2]' : 0.168313}
{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 26, 0, 0, 2]' : 0.167753}
{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 26, 0, 0, 2]' : 0.167804}
{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 26, 0, 0, 2]' : 0.171633}
{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 26, 0, 0, 2]' : 0.171884}
{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 26, 0, 0, 2]' : 0.171153}
{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 26, 0, 0, 2]' : 0.167832}
{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 26, 0, 0, 2]' : 0.168294}
{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 26, 0, 0, 2]' : 0.168441}
{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 26, 0, 0, 2]' : 0.167932}
{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 26, 0, 0, 2]' : 0.168377}
{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 26, 0, 0, 2]' : 0.168875}
{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 26, 0, 0, 2]' : 0.171462}
{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 26, 0, 0, 2]' : 0.171543}
{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 26, 0, 0, 2]' : 0.172537}
{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 26, 0, 0, 2]' : 0.171427}
{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 26, 0, 0, 2]' : 0.168754}
{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 26, 0, 0, 2]' : 0.169031}
{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 26, 0, 0, 2]' : 0.167975}

out:
 ["{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 26, 0, 0, 2]' : 0.193095}", "{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 26, 0, 0, 2]' : 0.192934}", "{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 26, 0, 0, 2]' : 0.174242}", "{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 26, 0, 0, 2]' : 0.169013}", "{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 26, 0, 0, 2]' : 0.168541}", "{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 26, 0, 0, 2]' : 0.168256}", "{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 26, 0, 0, 2]' : 0.167866}", "{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 26, 0, 0, 2]' : 0.168475}", "{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 26, 0, 0, 2]' : 0.171702}", "{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 26, 0, 0, 2]' : 0.169127}", "{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 26, 0, 0, 2]' : 0.167998}", "{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 26, 0, 0, 2]' : 0.168313}", "{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 26, 0, 0, 2]' : 0.167753}", "{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 26, 0, 0, 2]' : 0.167804}", "{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 26, 0, 0, 2]' : 0.171633}", "{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 26, 0, 0, 2]' : 0.171884}", "{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 26, 0, 0, 2]' : 0.171153}", "{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 26, 0, 0, 2]' : 0.167832}", "{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 26, 0, 0, 2]' : 0.168294}", "{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 26, 0, 0, 2]' : 0.168441}", "{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 26, 0, 0, 2]' : 0.167932}", "{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 26, 0, 0, 2]' : 0.168377}", "{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 26, 0, 0, 2]' : 0.168875}", "{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 26, 0, 0, 2]' : 0.171462}", "{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 26, 0, 0, 2]' : 0.171543}", "{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 26, 0, 0, 2]' : 0.172537}", "{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 26, 0, 0, 2]' : 0.171427}", "{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 26, 0, 0, 2]' : 0.168754}", "{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 26, 0, 0, 2]' : 0.169031}", "{'[6, 6, 0, 6, 6, 6, 3, 25, 0, 26, 0, 0, 2]' : 0.167975}"]
returning from 'run': {'[6, 6, 0, 6, 6, 6, 3, 25, 0, 26, 0, 0, 2]': ([0.193095, 0.192934, 0.174242, 0.169013, 0.168541, 0.168256, 0.167866, 0.168475, 0.171702, 0.169127, 0.167998, 0.168313, 0.167753, 0.167804, 0.171633, 0.171884, 0.171153, 0.167832, 0.168294, 0.168441, 0.167932, 0.168377, 0.168875, 0.171462, 0.171543, 0.172537, 0.171427, 0.168754, 0.169031, 0.167975], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 0, 6, 6, 6, 3, 25, 0, 26, 0, 0, 2]': ([0.193095, 0.192934, 0.174242, 0.169013, 0.168541, 0.168256, 0.167866, 0.168475, 0.171702, 0.169127, 0.167998, 0.168313, 0.167753, 0.167804, 0.171633, 0.171884, 0.171153, 0.167832, 0.168294, 0.168441, 0.167932, 0.168377, 0.168875, 0.171462, 0.171543, 0.172537, 0.171427, 0.168754, 0.169031, 0.167975], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	20
        Max loop nest depth: 	6
        Additions: 		11434
        Multiplications: 	3402
        Divisions: 		0
        Logical: 		0
        Reads: 			17212
        Writes: 		1772
        Comparisons:		20
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest110.exe __orio_perftest110.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest110.exe  
Program Test Output: 
{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 28, 0, 2, 0]' : 0.16759}
{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 28, 0, 2, 0]' : 0.167309}
{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 28, 0, 2, 0]' : 0.156693}
{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 28, 0, 2, 0]' : 0.151367}
{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 28, 0, 2, 0]' : 0.151769}
{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 28, 0, 2, 0]' : 0.152001}
{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 28, 0, 2, 0]' : 0.151813}
{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 28, 0, 2, 0]' : 0.153246}
{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 28, 0, 2, 0]' : 0.155691}
{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 28, 0, 2, 0]' : 0.155953}
{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 28, 0, 2, 0]' : 0.1557}
{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 28, 0, 2, 0]' : 0.155857}
{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 28, 0, 2, 0]' : 0.155873}
{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 28, 0, 2, 0]' : 0.147813}
{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 28, 0, 2, 0]' : 0.15466}
{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 28, 0, 2, 0]' : 0.155831}
{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 28, 0, 2, 0]' : 0.155652}
{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 28, 0, 2, 0]' : 0.155721}
{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 28, 0, 2, 0]' : 0.155833}
{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 28, 0, 2, 0]' : 0.1558}
{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 28, 0, 2, 0]' : 0.155678}
{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 28, 0, 2, 0]' : 0.155588}
{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 28, 0, 2, 0]' : 0.156087}
{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 28, 0, 2, 0]' : 0.155677}
{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 28, 0, 2, 0]' : 0.155882}
{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 28, 0, 2, 0]' : 0.155748}
{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 28, 0, 2, 0]' : 0.156034}
{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 28, 0, 2, 0]' : 0.15583}
{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 28, 0, 2, 0]' : 0.155824}
{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 28, 0, 2, 0]' : 0.155907}

out:
 ["{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 28, 0, 2, 0]' : 0.16759}", "{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 28, 0, 2, 0]' : 0.167309}", "{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 28, 0, 2, 0]' : 0.156693}", "{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 28, 0, 2, 0]' : 0.151367}", "{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 28, 0, 2, 0]' : 0.151769}", "{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 28, 0, 2, 0]' : 0.152001}", "{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 28, 0, 2, 0]' : 0.151813}", "{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 28, 0, 2, 0]' : 0.153246}", "{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 28, 0, 2, 0]' : 0.155691}", "{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 28, 0, 2, 0]' : 0.155953}", "{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 28, 0, 2, 0]' : 0.1557}", "{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 28, 0, 2, 0]' : 0.155857}", "{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 28, 0, 2, 0]' : 0.155873}", "{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 28, 0, 2, 0]' : 0.147813}", "{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 28, 0, 2, 0]' : 0.15466}", "{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 28, 0, 2, 0]' : 0.155831}", "{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 28, 0, 2, 0]' : 0.155652}", "{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 28, 0, 2, 0]' : 0.155721}", "{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 28, 0, 2, 0]' : 0.155833}", "{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 28, 0, 2, 0]' : 0.1558}", "{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 28, 0, 2, 0]' : 0.155678}", "{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 28, 0, 2, 0]' : 0.155588}", "{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 28, 0, 2, 0]' : 0.156087}", "{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 28, 0, 2, 0]' : 0.155677}", "{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 28, 0, 2, 0]' : 0.155882}", "{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 28, 0, 2, 0]' : 0.155748}", "{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 28, 0, 2, 0]' : 0.156034}", "{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 28, 0, 2, 0]' : 0.15583}", "{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 28, 0, 2, 0]' : 0.155824}", "{'[6, 6, 0, 6, 6, 6, 2, 25, 0, 28, 0, 2, 0]' : 0.155907}"]
returning from 'run': {'[6, 6, 0, 6, 6, 6, 2, 25, 0, 28, 0, 2, 0]': ([0.16759, 0.167309, 0.156693, 0.151367, 0.151769, 0.152001, 0.151813, 0.153246, 0.155691, 0.155953, 0.1557, 0.155857, 0.155873, 0.147813, 0.15466, 0.155831, 0.155652, 0.155721, 0.155833, 0.1558, 0.155678, 0.155588, 0.156087, 0.155677, 0.155882, 0.155748, 0.156034, 0.15583, 0.155824, 0.155907], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 0, 6, 6, 6, 2, 25, 0, 28, 0, 2, 0]': ([0.16759, 0.167309, 0.156693, 0.151367, 0.151769, 0.152001, 0.151813, 0.153246, 0.155691, 0.155953, 0.1557, 0.155857, 0.155873, 0.147813, 0.15466, 0.155831, 0.155652, 0.155721, 0.155833, 0.1558, 0.155678, 0.155588, 0.156087, 0.155677, 0.155882, 0.155748, 0.156034, 0.15583, 0.155824, 0.155907], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	27
        Max loop nest depth: 	6
        Additions: 		12657
        Multiplications: 	3776
        Divisions: 		0
        Logical: 		0
        Reads: 			19127
        Writes: 		1971
        Comparisons:		27
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest111.exe __orio_perftest111.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest111.exe  
Program Test Output: 
{'[6, 6, 6, 6, 6, 6, 0, 25, 29, 0, 2, 0, 0]' : 0.28252}
{'[6, 6, 6, 6, 6, 6, 0, 25, 29, 0, 2, 0, 0]' : 0.282318}
{'[6, 6, 6, 6, 6, 6, 0, 25, 29, 0, 2, 0, 0]' : 0.278904}
{'[6, 6, 6, 6, 6, 6, 0, 25, 29, 0, 2, 0, 0]' : 0.280914}
{'[6, 6, 6, 6, 6, 6, 0, 25, 29, 0, 2, 0, 0]' : 0.278513}
{'[6, 6, 6, 6, 6, 6, 0, 25, 29, 0, 2, 0, 0]' : 0.28057}
{'[6, 6, 6, 6, 6, 6, 0, 25, 29, 0, 2, 0, 0]' : 0.282584}
{'[6, 6, 6, 6, 6, 6, 0, 25, 29, 0, 2, 0, 0]' : 0.279135}
{'[6, 6, 6, 6, 6, 6, 0, 25, 29, 0, 2, 0, 0]' : 0.278966}
{'[6, 6, 6, 6, 6, 6, 0, 25, 29, 0, 2, 0, 0]' : 0.282648}
{'[6, 6, 6, 6, 6, 6, 0, 25, 29, 0, 2, 0, 0]' : 0.282019}
{'[6, 6, 6, 6, 6, 6, 0, 25, 29, 0, 2, 0, 0]' : 0.282239}
{'[6, 6, 6, 6, 6, 6, 0, 25, 29, 0, 2, 0, 0]' : 0.282287}
{'[6, 6, 6, 6, 6, 6, 0, 25, 29, 0, 2, 0, 0]' : 0.282426}
{'[6, 6, 6, 6, 6, 6, 0, 25, 29, 0, 2, 0, 0]' : 0.282519}
{'[6, 6, 6, 6, 6, 6, 0, 25, 29, 0, 2, 0, 0]' : 0.282194}
{'[6, 6, 6, 6, 6, 6, 0, 25, 29, 0, 2, 0, 0]' : 0.282023}
{'[6, 6, 6, 6, 6, 6, 0, 25, 29, 0, 2, 0, 0]' : 0.281392}
{'[6, 6, 6, 6, 6, 6, 0, 25, 29, 0, 2, 0, 0]' : 0.276778}
{'[6, 6, 6, 6, 6, 6, 0, 25, 29, 0, 2, 0, 0]' : 0.275814}
{'[6, 6, 6, 6, 6, 6, 0, 25, 29, 0, 2, 0, 0]' : 0.282005}
{'[6, 6, 6, 6, 6, 6, 0, 25, 29, 0, 2, 0, 0]' : 0.283558}
{'[6, 6, 6, 6, 6, 6, 0, 25, 29, 0, 2, 0, 0]' : 0.283724}
{'[6, 6, 6, 6, 6, 6, 0, 25, 29, 0, 2, 0, 0]' : 0.283417}
{'[6, 6, 6, 6, 6, 6, 0, 25, 29, 0, 2, 0, 0]' : 0.284126}
{'[6, 6, 6, 6, 6, 6, 0, 25, 29, 0, 2, 0, 0]' : 0.280826}
{'[6, 6, 6, 6, 6, 6, 0, 25, 29, 0, 2, 0, 0]' : 0.281911}
{'[6, 6, 6, 6, 6, 6, 0, 25, 29, 0, 2, 0, 0]' : 0.283847}
{'[6, 6, 6, 6, 6, 6, 0, 25, 29, 0, 2, 0, 0]' : 0.282969}
{'[6, 6, 6, 6, 6, 6, 0, 25, 29, 0, 2, 0, 0]' : 0.278335}

out:
 ["{'[6, 6, 6, 6, 6, 6, 0, 25, 29, 0, 2, 0, 0]' : 0.28252}", "{'[6, 6, 6, 6, 6, 6, 0, 25, 29, 0, 2, 0, 0]' : 0.282318}", "{'[6, 6, 6, 6, 6, 6, 0, 25, 29, 0, 2, 0, 0]' : 0.278904}", "{'[6, 6, 6, 6, 6, 6, 0, 25, 29, 0, 2, 0, 0]' : 0.280914}", "{'[6, 6, 6, 6, 6, 6, 0, 25, 29, 0, 2, 0, 0]' : 0.278513}", "{'[6, 6, 6, 6, 6, 6, 0, 25, 29, 0, 2, 0, 0]' : 0.28057}", "{'[6, 6, 6, 6, 6, 6, 0, 25, 29, 0, 2, 0, 0]' : 0.282584}", "{'[6, 6, 6, 6, 6, 6, 0, 25, 29, 0, 2, 0, 0]' : 0.279135}", "{'[6, 6, 6, 6, 6, 6, 0, 25, 29, 0, 2, 0, 0]' : 0.278966}", "{'[6, 6, 6, 6, 6, 6, 0, 25, 29, 0, 2, 0, 0]' : 0.282648}", "{'[6, 6, 6, 6, 6, 6, 0, 25, 29, 0, 2, 0, 0]' : 0.282019}", "{'[6, 6, 6, 6, 6, 6, 0, 25, 29, 0, 2, 0, 0]' : 0.282239}", "{'[6, 6, 6, 6, 6, 6, 0, 25, 29, 0, 2, 0, 0]' : 0.282287}", "{'[6, 6, 6, 6, 6, 6, 0, 25, 29, 0, 2, 0, 0]' : 0.282426}", "{'[6, 6, 6, 6, 6, 6, 0, 25, 29, 0, 2, 0, 0]' : 0.282519}", "{'[6, 6, 6, 6, 6, 6, 0, 25, 29, 0, 2, 0, 0]' : 0.282194}", "{'[6, 6, 6, 6, 6, 6, 0, 25, 29, 0, 2, 0, 0]' : 0.282023}", "{'[6, 6, 6, 6, 6, 6, 0, 25, 29, 0, 2, 0, 0]' : 0.281392}", "{'[6, 6, 6, 6, 6, 6, 0, 25, 29, 0, 2, 0, 0]' : 0.276778}", "{'[6, 6, 6, 6, 6, 6, 0, 25, 29, 0, 2, 0, 0]' : 0.275814}", "{'[6, 6, 6, 6, 6, 6, 0, 25, 29, 0, 2, 0, 0]' : 0.282005}", "{'[6, 6, 6, 6, 6, 6, 0, 25, 29, 0, 2, 0, 0]' : 0.283558}", "{'[6, 6, 6, 6, 6, 6, 0, 25, 29, 0, 2, 0, 0]' : 0.283724}", "{'[6, 6, 6, 6, 6, 6, 0, 25, 29, 0, 2, 0, 0]' : 0.283417}", "{'[6, 6, 6, 6, 6, 6, 0, 25, 29, 0, 2, 0, 0]' : 0.284126}", "{'[6, 6, 6, 6, 6, 6, 0, 25, 29, 0, 2, 0, 0]' : 0.280826}", "{'[6, 6, 6, 6, 6, 6, 0, 25, 29, 0, 2, 0, 0]' : 0.281911}", "{'[6, 6, 6, 6, 6, 6, 0, 25, 29, 0, 2, 0, 0]' : 0.283847}", "{'[6, 6, 6, 6, 6, 6, 0, 25, 29, 0, 2, 0, 0]' : 0.282969}", "{'[6, 6, 6, 6, 6, 6, 0, 25, 29, 0, 2, 0, 0]' : 0.278335}"]
returning from 'run': {'[6, 6, 6, 6, 6, 6, 0, 25, 29, 0, 2, 0, 0]': ([0.28252, 0.282318, 0.278904, 0.280914, 0.278513, 0.28057, 0.282584, 0.279135, 0.278966, 0.282648, 0.282019, 0.282239, 0.282287, 0.282426, 0.282519, 0.282194, 0.282023, 0.281392, 0.276778, 0.275814, 0.282005, 0.283558, 0.283724, 0.283417, 0.284126, 0.280826, 0.281911, 0.283847, 0.282969, 0.278335], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 6, 6, 6, 6, 0, 25, 29, 0, 2, 0, 0]': ([0.28252, 0.282318, 0.278904, 0.280914, 0.278513, 0.28057, 0.282584, 0.279135, 0.278966, 0.282648, 0.282019, 0.282239, 0.282287, 0.282426, 0.282519, 0.282194, 0.282023, 0.281392, 0.276778, 0.275814, 0.282005, 0.283558, 0.283724, 0.283417, 0.284126, 0.280826, 0.281911, 0.283847, 0.282969, 0.278335], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	5
        Additions: 		5627
        Multiplications: 	1674
        Divisions: 		0
        Logical: 		0
        Reads: 			8565
        Writes: 		906
        Comparisons:		19
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest112.exe __orio_perftest112.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest112.exe  
Program Test Output: 
{'[6, 6, 5, 0, 6, 6, 2, 25, 0, 28, 0, 0, 0]' : 0.171603}
{'[6, 6, 5, 0, 6, 6, 2, 25, 0, 28, 0, 0, 0]' : 0.171608}
{'[6, 6, 5, 0, 6, 6, 2, 25, 0, 28, 0, 0, 0]' : 0.171498}
{'[6, 6, 5, 0, 6, 6, 2, 25, 0, 28, 0, 0, 0]' : 0.167829}
{'[6, 6, 5, 0, 6, 6, 2, 25, 0, 28, 0, 0, 0]' : 0.172411}
{'[6, 6, 5, 0, 6, 6, 2, 25, 0, 28, 0, 0, 0]' : 0.174819}
{'[6, 6, 5, 0, 6, 6, 2, 25, 0, 28, 0, 0, 0]' : 0.171851}
{'[6, 6, 5, 0, 6, 6, 2, 25, 0, 28, 0, 0, 0]' : 0.174013}
{'[6, 6, 5, 0, 6, 6, 2, 25, 0, 28, 0, 0, 0]' : 0.175336}
{'[6, 6, 5, 0, 6, 6, 2, 25, 0, 28, 0, 0, 0]' : 0.176004}
{'[6, 6, 5, 0, 6, 6, 2, 25, 0, 28, 0, 0, 0]' : 0.175963}
{'[6, 6, 5, 0, 6, 6, 2, 25, 0, 28, 0, 0, 0]' : 0.175905}
{'[6, 6, 5, 0, 6, 6, 2, 25, 0, 28, 0, 0, 0]' : 0.175561}
{'[6, 6, 5, 0, 6, 6, 2, 25, 0, 28, 0, 0, 0]' : 0.175583}
{'[6, 6, 5, 0, 6, 6, 2, 25, 0, 28, 0, 0, 0]' : 0.173311}
{'[6, 6, 5, 0, 6, 6, 2, 25, 0, 28, 0, 0, 0]' : 0.172551}
{'[6, 6, 5, 0, 6, 6, 2, 25, 0, 28, 0, 0, 0]' : 0.175238}
{'[6, 6, 5, 0, 6, 6, 2, 25, 0, 28, 0, 0, 0]' : 0.172378}
{'[6, 6, 5, 0, 6, 6, 2, 25, 0, 28, 0, 0, 0]' : 0.172693}
{'[6, 6, 5, 0, 6, 6, 2, 25, 0, 28, 0, 0, 0]' : 0.172806}
{'[6, 6, 5, 0, 6, 6, 2, 25, 0, 28, 0, 0, 0]' : 0.172631}
{'[6, 6, 5, 0, 6, 6, 2, 25, 0, 28, 0, 0, 0]' : 0.172791}
{'[6, 6, 5, 0, 6, 6, 2, 25, 0, 28, 0, 0, 0]' : 0.173772}
{'[6, 6, 5, 0, 6, 6, 2, 25, 0, 28, 0, 0, 0]' : 0.172157}
{'[6, 6, 5, 0, 6, 6, 2, 25, 0, 28, 0, 0, 0]' : 0.173028}
{'[6, 6, 5, 0, 6, 6, 2, 25, 0, 28, 0, 0, 0]' : 0.174479}
{'[6, 6, 5, 0, 6, 6, 2, 25, 0, 28, 0, 0, 0]' : 0.175818}
{'[6, 6, 5, 0, 6, 6, 2, 25, 0, 28, 0, 0, 0]' : 0.174802}
{'[6, 6, 5, 0, 6, 6, 2, 25, 0, 28, 0, 0, 0]' : 0.175391}
{'[6, 6, 5, 0, 6, 6, 2, 25, 0, 28, 0, 0, 0]' : 0.175469}

out:
 ["{'[6, 6, 5, 0, 6, 6, 2, 25, 0, 28, 0, 0, 0]' : 0.171603}", "{'[6, 6, 5, 0, 6, 6, 2, 25, 0, 28, 0, 0, 0]' : 0.171608}", "{'[6, 6, 5, 0, 6, 6, 2, 25, 0, 28, 0, 0, 0]' : 0.171498}", "{'[6, 6, 5, 0, 6, 6, 2, 25, 0, 28, 0, 0, 0]' : 0.167829}", "{'[6, 6, 5, 0, 6, 6, 2, 25, 0, 28, 0, 0, 0]' : 0.172411}", "{'[6, 6, 5, 0, 6, 6, 2, 25, 0, 28, 0, 0, 0]' : 0.174819}", "{'[6, 6, 5, 0, 6, 6, 2, 25, 0, 28, 0, 0, 0]' : 0.171851}", "{'[6, 6, 5, 0, 6, 6, 2, 25, 0, 28, 0, 0, 0]' : 0.174013}", "{'[6, 6, 5, 0, 6, 6, 2, 25, 0, 28, 0, 0, 0]' : 0.175336}", "{'[6, 6, 5, 0, 6, 6, 2, 25, 0, 28, 0, 0, 0]' : 0.176004}", "{'[6, 6, 5, 0, 6, 6, 2, 25, 0, 28, 0, 0, 0]' : 0.175963}", "{'[6, 6, 5, 0, 6, 6, 2, 25, 0, 28, 0, 0, 0]' : 0.175905}", "{'[6, 6, 5, 0, 6, 6, 2, 25, 0, 28, 0, 0, 0]' : 0.175561}", "{'[6, 6, 5, 0, 6, 6, 2, 25, 0, 28, 0, 0, 0]' : 0.175583}", "{'[6, 6, 5, 0, 6, 6, 2, 25, 0, 28, 0, 0, 0]' : 0.173311}", "{'[6, 6, 5, 0, 6, 6, 2, 25, 0, 28, 0, 0, 0]' : 0.172551}", "{'[6, 6, 5, 0, 6, 6, 2, 25, 0, 28, 0, 0, 0]' : 0.175238}", "{'[6, 6, 5, 0, 6, 6, 2, 25, 0, 28, 0, 0, 0]' : 0.172378}", "{'[6, 6, 5, 0, 6, 6, 2, 25, 0, 28, 0, 0, 0]' : 0.172693}", "{'[6, 6, 5, 0, 6, 6, 2, 25, 0, 28, 0, 0, 0]' : 0.172806}", "{'[6, 6, 5, 0, 6, 6, 2, 25, 0, 28, 0, 0, 0]' : 0.172631}", "{'[6, 6, 5, 0, 6, 6, 2, 25, 0, 28, 0, 0, 0]' : 0.172791}", "{'[6, 6, 5, 0, 6, 6, 2, 25, 0, 28, 0, 0, 0]' : 0.173772}", "{'[6, 6, 5, 0, 6, 6, 2, 25, 0, 28, 0, 0, 0]' : 0.172157}", "{'[6, 6, 5, 0, 6, 6, 2, 25, 0, 28, 0, 0, 0]' : 0.173028}", "{'[6, 6, 5, 0, 6, 6, 2, 25, 0, 28, 0, 0, 0]' : 0.174479}", "{'[6, 6, 5, 0, 6, 6, 2, 25, 0, 28, 0, 0, 0]' : 0.175818}", "{'[6, 6, 5, 0, 6, 6, 2, 25, 0, 28, 0, 0, 0]' : 0.174802}", "{'[6, 6, 5, 0, 6, 6, 2, 25, 0, 28, 0, 0, 0]' : 0.175391}", "{'[6, 6, 5, 0, 6, 6, 2, 25, 0, 28, 0, 0, 0]' : 0.175469}"]
returning from 'run': {'[6, 6, 5, 0, 6, 6, 2, 25, 0, 28, 0, 0, 0]': ([0.171603, 0.171608, 0.171498, 0.167829, 0.172411, 0.174819, 0.171851, 0.174013, 0.175336, 0.176004, 0.175963, 0.175905, 0.175561, 0.175583, 0.173311, 0.172551, 0.175238, 0.172378, 0.172693, 0.172806, 0.172631, 0.172791, 0.173772, 0.172157, 0.173028, 0.174479, 0.175818, 0.174802, 0.175391, 0.175469], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 5, 0, 6, 6, 2, 25, 0, 28, 0, 0, 0]': ([0.171603, 0.171608, 0.171498, 0.167829, 0.172411, 0.174819, 0.171851, 0.174013, 0.175336, 0.176004, 0.175963, 0.175905, 0.175561, 0.175583, 0.173311, 0.172551, 0.175238, 0.172378, 0.172693, 0.172806, 0.172631, 0.172791, 0.173772, 0.172157, 0.173028, 0.174479, 0.175818, 0.174802, 0.175391, 0.175469], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	69
        Max loop nest depth: 	5
        Additions: 		7230
        Multiplications: 	2052
        Divisions: 		0
        Logical: 		0
        Reads: 			10915
        Writes: 		1200
        Comparisons:		69
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest113.exe __orio_perftest113.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest113.exe  
Program Test Output: 
{'[6, 6, 0, 0, 6, 6, 7, 25, 3, 0, 0, 2, 0]' : 0.181871}
{'[6, 6, 0, 0, 6, 6, 7, 25, 3, 0, 0, 2, 0]' : 0.177898}
{'[6, 6, 0, 0, 6, 6, 7, 25, 3, 0, 0, 2, 0]' : 0.154847}
{'[6, 6, 0, 0, 6, 6, 7, 25, 3, 0, 0, 2, 0]' : 0.15484}
{'[6, 6, 0, 0, 6, 6, 7, 25, 3, 0, 0, 2, 0]' : 0.155134}
{'[6, 6, 0, 0, 6, 6, 7, 25, 3, 0, 0, 2, 0]' : 0.154782}
{'[6, 6, 0, 0, 6, 6, 7, 25, 3, 0, 0, 2, 0]' : 0.154966}
{'[6, 6, 0, 0, 6, 6, 7, 25, 3, 0, 0, 2, 0]' : 0.155086}
{'[6, 6, 0, 0, 6, 6, 7, 25, 3, 0, 0, 2, 0]' : 0.157174}
{'[6, 6, 0, 0, 6, 6, 7, 25, 3, 0, 0, 2, 0]' : 0.161715}
{'[6, 6, 0, 0, 6, 6, 7, 25, 3, 0, 0, 2, 0]' : 0.161356}
{'[6, 6, 0, 0, 6, 6, 7, 25, 3, 0, 0, 2, 0]' : 0.161605}
{'[6, 6, 0, 0, 6, 6, 7, 25, 3, 0, 0, 2, 0]' : 0.161801}
{'[6, 6, 0, 0, 6, 6, 7, 25, 3, 0, 0, 2, 0]' : 0.161909}
{'[6, 6, 0, 0, 6, 6, 7, 25, 3, 0, 0, 2, 0]' : 0.161537}
{'[6, 6, 0, 0, 6, 6, 7, 25, 3, 0, 0, 2, 0]' : 0.161553}
{'[6, 6, 0, 0, 6, 6, 7, 25, 3, 0, 0, 2, 0]' : 0.161408}
{'[6, 6, 0, 0, 6, 6, 7, 25, 3, 0, 0, 2, 0]' : 0.161482}
{'[6, 6, 0, 0, 6, 6, 7, 25, 3, 0, 0, 2, 0]' : 0.161346}
{'[6, 6, 0, 0, 6, 6, 7, 25, 3, 0, 0, 2, 0]' : 0.161635}
{'[6, 6, 0, 0, 6, 6, 7, 25, 3, 0, 0, 2, 0]' : 0.161476}
{'[6, 6, 0, 0, 6, 6, 7, 25, 3, 0, 0, 2, 0]' : 0.161431}
{'[6, 6, 0, 0, 6, 6, 7, 25, 3, 0, 0, 2, 0]' : 0.161458}
{'[6, 6, 0, 0, 6, 6, 7, 25, 3, 0, 0, 2, 0]' : 0.161758}
{'[6, 6, 0, 0, 6, 6, 7, 25, 3, 0, 0, 2, 0]' : 0.161471}
{'[6, 6, 0, 0, 6, 6, 7, 25, 3, 0, 0, 2, 0]' : 0.161474}
{'[6, 6, 0, 0, 6, 6, 7, 25, 3, 0, 0, 2, 0]' : 0.161675}
{'[6, 6, 0, 0, 6, 6, 7, 25, 3, 0, 0, 2, 0]' : 0.161744}
{'[6, 6, 0, 0, 6, 6, 7, 25, 3, 0, 0, 2, 0]' : 0.1615}
{'[6, 6, 0, 0, 6, 6, 7, 25, 3, 0, 0, 2, 0]' : 0.16141}

out:
 ["{'[6, 6, 0, 0, 6, 6, 7, 25, 3, 0, 0, 2, 0]' : 0.181871}", "{'[6, 6, 0, 0, 6, 6, 7, 25, 3, 0, 0, 2, 0]' : 0.177898}", "{'[6, 6, 0, 0, 6, 6, 7, 25, 3, 0, 0, 2, 0]' : 0.154847}", "{'[6, 6, 0, 0, 6, 6, 7, 25, 3, 0, 0, 2, 0]' : 0.15484}", "{'[6, 6, 0, 0, 6, 6, 7, 25, 3, 0, 0, 2, 0]' : 0.155134}", "{'[6, 6, 0, 0, 6, 6, 7, 25, 3, 0, 0, 2, 0]' : 0.154782}", "{'[6, 6, 0, 0, 6, 6, 7, 25, 3, 0, 0, 2, 0]' : 0.154966}", "{'[6, 6, 0, 0, 6, 6, 7, 25, 3, 0, 0, 2, 0]' : 0.155086}", "{'[6, 6, 0, 0, 6, 6, 7, 25, 3, 0, 0, 2, 0]' : 0.157174}", "{'[6, 6, 0, 0, 6, 6, 7, 25, 3, 0, 0, 2, 0]' : 0.161715}", "{'[6, 6, 0, 0, 6, 6, 7, 25, 3, 0, 0, 2, 0]' : 0.161356}", "{'[6, 6, 0, 0, 6, 6, 7, 25, 3, 0, 0, 2, 0]' : 0.161605}", "{'[6, 6, 0, 0, 6, 6, 7, 25, 3, 0, 0, 2, 0]' : 0.161801}", "{'[6, 6, 0, 0, 6, 6, 7, 25, 3, 0, 0, 2, 0]' : 0.161909}", "{'[6, 6, 0, 0, 6, 6, 7, 25, 3, 0, 0, 2, 0]' : 0.161537}", "{'[6, 6, 0, 0, 6, 6, 7, 25, 3, 0, 0, 2, 0]' : 0.161553}", "{'[6, 6, 0, 0, 6, 6, 7, 25, 3, 0, 0, 2, 0]' : 0.161408}", "{'[6, 6, 0, 0, 6, 6, 7, 25, 3, 0, 0, 2, 0]' : 0.161482}", "{'[6, 6, 0, 0, 6, 6, 7, 25, 3, 0, 0, 2, 0]' : 0.161346}", "{'[6, 6, 0, 0, 6, 6, 7, 25, 3, 0, 0, 2, 0]' : 0.161635}", "{'[6, 6, 0, 0, 6, 6, 7, 25, 3, 0, 0, 2, 0]' : 0.161476}", "{'[6, 6, 0, 0, 6, 6, 7, 25, 3, 0, 0, 2, 0]' : 0.161431}", "{'[6, 6, 0, 0, 6, 6, 7, 25, 3, 0, 0, 2, 0]' : 0.161458}", "{'[6, 6, 0, 0, 6, 6, 7, 25, 3, 0, 0, 2, 0]' : 0.161758}", "{'[6, 6, 0, 0, 6, 6, 7, 25, 3, 0, 0, 2, 0]' : 0.161471}", "{'[6, 6, 0, 0, 6, 6, 7, 25, 3, 0, 0, 2, 0]' : 0.161474}", "{'[6, 6, 0, 0, 6, 6, 7, 25, 3, 0, 0, 2, 0]' : 0.161675}", "{'[6, 6, 0, 0, 6, 6, 7, 25, 3, 0, 0, 2, 0]' : 0.161744}", "{'[6, 6, 0, 0, 6, 6, 7, 25, 3, 0, 0, 2, 0]' : 0.1615}", "{'[6, 6, 0, 0, 6, 6, 7, 25, 3, 0, 0, 2, 0]' : 0.16141}"]
returning from 'run': {'[6, 6, 0, 0, 6, 6, 7, 25, 3, 0, 0, 2, 0]': ([0.181871, 0.177898, 0.154847, 0.15484, 0.155134, 0.154782, 0.154966, 0.155086, 0.157174, 0.161715, 0.161356, 0.161605, 0.161801, 0.161909, 0.161537, 0.161553, 0.161408, 0.161482, 0.161346, 0.161635, 0.161476, 0.161431, 0.161458, 0.161758, 0.161471, 0.161474, 0.161675, 0.161744, 0.1615, 0.16141], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 0, 0, 6, 6, 7, 25, 3, 0, 0, 2, 0]': ([0.181871, 0.177898, 0.154847, 0.15484, 0.155134, 0.154782, 0.154966, 0.155086, 0.157174, 0.161715, 0.161356, 0.161605, 0.161801, 0.161909, 0.161537, 0.161553, 0.161408, 0.161482, 0.161346, 0.161635, 0.161476, 0.161431, 0.161458, 0.161758, 0.161471, 0.161474, 0.161675, 0.161744, 0.1615, 0.16141], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	17
        Max loop nest depth: 	6
        Additions: 		6154
        Multiplications: 	1836
        Divisions: 		0
        Logical: 		0
        Reads: 			9347
        Writes: 		980
        Comparisons:		17
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest114.exe __orio_perftest114.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest114.exe  
Program Test Output: 
{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 0, 0, 0, 2]' : 0.168445}
{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 0, 0, 0, 2]' : 0.170126}
{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 0, 0, 0, 2]' : 0.171994}
{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 0, 0, 0, 2]' : 0.168763}
{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 0, 0, 0, 2]' : 0.170421}
{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 0, 0, 0, 2]' : 0.170214}
{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 0, 0, 0, 2]' : 0.168496}
{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 0, 0, 0, 2]' : 0.170912}
{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 0, 0, 0, 2]' : 0.171977}
{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 0, 0, 0, 2]' : 0.170342}
{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 0, 0, 0, 2]' : 0.171717}
{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 0, 0, 0, 2]' : 0.172097}
{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 0, 0, 0, 2]' : 0.170451}
{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 0, 0, 0, 2]' : 0.170104}
{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 0, 0, 0, 2]' : 0.168376}
{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 0, 0, 0, 2]' : 0.168549}
{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 0, 0, 0, 2]' : 0.166259}
{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 0, 0, 0, 2]' : 0.164573}
{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 0, 0, 0, 2]' : 0.16431}
{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 0, 0, 0, 2]' : 0.168284}
{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 0, 0, 0, 2]' : 0.168924}
{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 0, 0, 0, 2]' : 0.168563}
{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 0, 0, 0, 2]' : 0.169581}
{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 0, 0, 0, 2]' : 0.16698}
{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 0, 0, 0, 2]' : 0.164532}
{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 0, 0, 0, 2]' : 0.164948}
{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 0, 0, 0, 2]' : 0.164914}
{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 0, 0, 0, 2]' : 0.164506}
{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 0, 0, 0, 2]' : 0.16823}
{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 0, 0, 0, 2]' : 0.169053}

out:
 ["{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 0, 0, 0, 2]' : 0.168445}", "{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 0, 0, 0, 2]' : 0.170126}", "{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 0, 0, 0, 2]' : 0.171994}", "{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 0, 0, 0, 2]' : 0.168763}", "{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 0, 0, 0, 2]' : 0.170421}", "{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 0, 0, 0, 2]' : 0.170214}", "{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 0, 0, 0, 2]' : 0.168496}", "{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 0, 0, 0, 2]' : 0.170912}", "{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 0, 0, 0, 2]' : 0.171977}", "{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 0, 0, 0, 2]' : 0.170342}", "{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 0, 0, 0, 2]' : 0.171717}", "{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 0, 0, 0, 2]' : 0.172097}", "{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 0, 0, 0, 2]' : 0.170451}", "{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 0, 0, 0, 2]' : 0.170104}", "{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 0, 0, 0, 2]' : 0.168376}", "{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 0, 0, 0, 2]' : 0.168549}", "{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 0, 0, 0, 2]' : 0.166259}", "{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 0, 0, 0, 2]' : 0.164573}", "{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 0, 0, 0, 2]' : 0.16431}", "{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 0, 0, 0, 2]' : 0.168284}", "{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 0, 0, 0, 2]' : 0.168924}", "{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 0, 0, 0, 2]' : 0.168563}", "{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 0, 0, 0, 2]' : 0.169581}", "{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 0, 0, 0, 2]' : 0.16698}", "{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 0, 0, 0, 2]' : 0.164532}", "{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 0, 0, 0, 2]' : 0.164948}", "{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 0, 0, 0, 2]' : 0.164914}", "{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 0, 0, 0, 2]' : 0.164506}", "{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 0, 0, 0, 2]' : 0.16823}", "{'[6, 6, 0, 6, 6, 6, 0, 25, 0, 0, 0, 0, 2]' : 0.169053}"]
returning from 'run': {'[6, 6, 0, 6, 6, 6, 0, 25, 0, 0, 0, 0, 2]': ([0.168445, 0.170126, 0.171994, 0.168763, 0.170421, 0.170214, 0.168496, 0.170912, 0.171977, 0.170342, 0.171717, 0.172097, 0.170451, 0.170104, 0.168376, 0.168549, 0.166259, 0.164573, 0.16431, 0.168284, 0.168924, 0.168563, 0.169581, 0.16698, 0.164532, 0.164948, 0.164914, 0.164506, 0.16823, 0.169053], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 0, 6, 6, 6, 0, 25, 0, 0, 0, 0, 2]': ([0.168445, 0.170126, 0.171994, 0.168763, 0.170421, 0.170214, 0.168496, 0.170912, 0.171977, 0.170342, 0.171717, 0.172097, 0.170451, 0.170104, 0.168376, 0.168549, 0.166259, 0.164573, 0.16431, 0.168284, 0.168924, 0.168563, 0.169581, 0.16698, 0.164532, 0.164948, 0.164914, 0.164506, 0.16823, 0.169053], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	6
        Additions: 		5803
        Multiplications: 	1728
        Divisions: 		0
        Logical: 		0
        Reads: 			8882
        Writes: 		958
        Comparisons:		18
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest115.exe __orio_perftest115.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest115.exe  
Program Test Output: 
{'[6, 6, 0, 6, 6, 6, 29, 25, 29, 0, 0, 0, 0]' : 0.186133}
{'[6, 6, 0, 6, 6, 6, 29, 25, 29, 0, 0, 0, 0]' : 0.185836}
{'[6, 6, 0, 6, 6, 6, 29, 25, 29, 0, 0, 0, 0]' : 0.17897}
{'[6, 6, 0, 6, 6, 6, 29, 25, 29, 0, 0, 0, 0]' : 0.165277}
{'[6, 6, 0, 6, 6, 6, 29, 25, 29, 0, 0, 0, 0]' : 0.165956}
{'[6, 6, 0, 6, 6, 6, 29, 25, 29, 0, 0, 0, 0]' : 0.166905}
{'[6, 6, 0, 6, 6, 6, 29, 25, 29, 0, 0, 0, 0]' : 0.162849}
{'[6, 6, 0, 6, 6, 6, 29, 25, 29, 0, 0, 0, 0]' : 0.163977}
{'[6, 6, 0, 6, 6, 6, 29, 25, 29, 0, 0, 0, 0]' : 0.163837}
{'[6, 6, 0, 6, 6, 6, 29, 25, 29, 0, 0, 0, 0]' : 0.162583}
{'[6, 6, 0, 6, 6, 6, 29, 25, 29, 0, 0, 0, 0]' : 0.162302}
{'[6, 6, 0, 6, 6, 6, 29, 25, 29, 0, 0, 0, 0]' : 0.16051}
{'[6, 6, 0, 6, 6, 6, 29, 25, 29, 0, 0, 0, 0]' : 0.159343}
{'[6, 6, 0, 6, 6, 6, 29, 25, 29, 0, 0, 0, 0]' : 0.159274}
{'[6, 6, 0, 6, 6, 6, 29, 25, 29, 0, 0, 0, 0]' : 0.16154}
{'[6, 6, 0, 6, 6, 6, 29, 25, 29, 0, 0, 0, 0]' : 0.164049}
{'[6, 6, 0, 6, 6, 6, 29, 25, 29, 0, 0, 0, 0]' : 0.163931}
{'[6, 6, 0, 6, 6, 6, 29, 25, 29, 0, 0, 0, 0]' : 0.162907}
{'[6, 6, 0, 6, 6, 6, 29, 25, 29, 0, 0, 0, 0]' : 0.159309}
{'[6, 6, 0, 6, 6, 6, 29, 25, 29, 0, 0, 0, 0]' : 0.160354}
{'[6, 6, 0, 6, 6, 6, 29, 25, 29, 0, 0, 0, 0]' : 0.164201}
{'[6, 6, 0, 6, 6, 6, 29, 25, 29, 0, 0, 0, 0]' : 0.166547}
{'[6, 6, 0, 6, 6, 6, 29, 25, 29, 0, 0, 0, 0]' : 0.163726}
{'[6, 6, 0, 6, 6, 6, 29, 25, 29, 0, 0, 0, 0]' : 0.163671}
{'[6, 6, 0, 6, 6, 6, 29, 25, 29, 0, 0, 0, 0]' : 0.15942}
{'[6, 6, 0, 6, 6, 6, 29, 25, 29, 0, 0, 0, 0]' : 0.159615}
{'[6, 6, 0, 6, 6, 6, 29, 25, 29, 0, 0, 0, 0]' : 0.164026}
{'[6, 6, 0, 6, 6, 6, 29, 25, 29, 0, 0, 0, 0]' : 0.163275}
{'[6, 6, 0, 6, 6, 6, 29, 25, 29, 0, 0, 0, 0]' : 0.159515}
{'[6, 6, 0, 6, 6, 6, 29, 25, 29, 0, 0, 0, 0]' : 0.164096}

out:
 ["{'[6, 6, 0, 6, 6, 6, 29, 25, 29, 0, 0, 0, 0]' : 0.186133}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 29, 0, 0, 0, 0]' : 0.185836}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 29, 0, 0, 0, 0]' : 0.17897}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 29, 0, 0, 0, 0]' : 0.165277}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 29, 0, 0, 0, 0]' : 0.165956}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 29, 0, 0, 0, 0]' : 0.166905}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 29, 0, 0, 0, 0]' : 0.162849}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 29, 0, 0, 0, 0]' : 0.163977}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 29, 0, 0, 0, 0]' : 0.163837}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 29, 0, 0, 0, 0]' : 0.162583}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 29, 0, 0, 0, 0]' : 0.162302}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 29, 0, 0, 0, 0]' : 0.16051}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 29, 0, 0, 0, 0]' : 0.159343}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 29, 0, 0, 0, 0]' : 0.159274}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 29, 0, 0, 0, 0]' : 0.16154}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 29, 0, 0, 0, 0]' : 0.164049}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 29, 0, 0, 0, 0]' : 0.163931}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 29, 0, 0, 0, 0]' : 0.162907}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 29, 0, 0, 0, 0]' : 0.159309}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 29, 0, 0, 0, 0]' : 0.160354}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 29, 0, 0, 0, 0]' : 0.164201}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 29, 0, 0, 0, 0]' : 0.166547}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 29, 0, 0, 0, 0]' : 0.163726}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 29, 0, 0, 0, 0]' : 0.163671}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 29, 0, 0, 0, 0]' : 0.15942}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 29, 0, 0, 0, 0]' : 0.159615}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 29, 0, 0, 0, 0]' : 0.164026}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 29, 0, 0, 0, 0]' : 0.163275}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 29, 0, 0, 0, 0]' : 0.159515}", "{'[6, 6, 0, 6, 6, 6, 29, 25, 29, 0, 0, 0, 0]' : 0.164096}"]
returning from 'run': {'[6, 6, 0, 6, 6, 6, 29, 25, 29, 0, 0, 0, 0]': ([0.186133, 0.185836, 0.17897, 0.165277, 0.165956, 0.166905, 0.162849, 0.163977, 0.163837, 0.162583, 0.162302, 0.16051, 0.159343, 0.159274, 0.16154, 0.164049, 0.163931, 0.162907, 0.159309, 0.160354, 0.164201, 0.166547, 0.163726, 0.163671, 0.15942, 0.159615, 0.164026, 0.163275, 0.159515, 0.164096], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 0, 6, 6, 6, 29, 25, 29, 0, 0, 0, 0]': ([0.186133, 0.185836, 0.17897, 0.165277, 0.165956, 0.166905, 0.162849, 0.163977, 0.163837, 0.162583, 0.162302, 0.16051, 0.159343, 0.159274, 0.16154, 0.164049, 0.163931, 0.162907, 0.159309, 0.160354, 0.164201, 0.166547, 0.163726, 0.163671, 0.15942, 0.159615, 0.164026, 0.163275, 0.159515, 0.164096], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	72
        Max loop nest depth: 	6
        Additions: 		11810
        Multiplications: 	3402
        Divisions: 		0
        Logical: 		0
        Reads: 			17678
        Writes: 		1877
        Comparisons:		72
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest116.exe __orio_perftest116.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest116.exe  
Program Test Output: 
{'[6, 6, 6, 6, 6, 6, 3, 25, 28, 0, 0, 2, 0]' : 0.174118}
{'[6, 6, 6, 6, 6, 6, 3, 25, 28, 0, 0, 2, 0]' : 0.174664}
{'[6, 6, 6, 6, 6, 6, 3, 25, 28, 0, 0, 2, 0]' : 0.17469}
{'[6, 6, 6, 6, 6, 6, 3, 25, 28, 0, 0, 2, 0]' : 0.174197}
{'[6, 6, 6, 6, 6, 6, 3, 25, 28, 0, 0, 2, 0]' : 0.174075}
{'[6, 6, 6, 6, 6, 6, 3, 25, 28, 0, 0, 2, 0]' : 0.174205}
{'[6, 6, 6, 6, 6, 6, 3, 25, 28, 0, 0, 2, 0]' : 0.173789}
{'[6, 6, 6, 6, 6, 6, 3, 25, 28, 0, 0, 2, 0]' : 0.173814}
{'[6, 6, 6, 6, 6, 6, 3, 25, 28, 0, 0, 2, 0]' : 0.17435}
{'[6, 6, 6, 6, 6, 6, 3, 25, 28, 0, 0, 2, 0]' : 0.171004}
{'[6, 6, 6, 6, 6, 6, 3, 25, 28, 0, 0, 2, 0]' : 0.169122}
{'[6, 6, 6, 6, 6, 6, 3, 25, 28, 0, 0, 2, 0]' : 0.176324}
{'[6, 6, 6, 6, 6, 6, 3, 25, 28, 0, 0, 2, 0]' : 0.174885}
{'[6, 6, 6, 6, 6, 6, 3, 25, 28, 0, 0, 2, 0]' : 0.173821}
{'[6, 6, 6, 6, 6, 6, 3, 25, 28, 0, 0, 2, 0]' : 0.16992}
{'[6, 6, 6, 6, 6, 6, 3, 25, 28, 0, 0, 2, 0]' : 0.169622}
{'[6, 6, 6, 6, 6, 6, 3, 25, 28, 0, 0, 2, 0]' : 0.169354}
{'[6, 6, 6, 6, 6, 6, 3, 25, 28, 0, 0, 2, 0]' : 0.178295}
{'[6, 6, 6, 6, 6, 6, 3, 25, 28, 0, 0, 2, 0]' : 0.178884}
{'[6, 6, 6, 6, 6, 6, 3, 25, 28, 0, 0, 2, 0]' : 0.178573}
{'[6, 6, 6, 6, 6, 6, 3, 25, 28, 0, 0, 2, 0]' : 0.178436}
{'[6, 6, 6, 6, 6, 6, 3, 25, 28, 0, 0, 2, 0]' : 0.178706}
{'[6, 6, 6, 6, 6, 6, 3, 25, 28, 0, 0, 2, 0]' : 0.178542}
{'[6, 6, 6, 6, 6, 6, 3, 25, 28, 0, 0, 2, 0]' : 0.178515}
{'[6, 6, 6, 6, 6, 6, 3, 25, 28, 0, 0, 2, 0]' : 0.17464}
{'[6, 6, 6, 6, 6, 6, 3, 25, 28, 0, 0, 2, 0]' : 0.174394}
{'[6, 6, 6, 6, 6, 6, 3, 25, 28, 0, 0, 2, 0]' : 0.175159}
{'[6, 6, 6, 6, 6, 6, 3, 25, 28, 0, 0, 2, 0]' : 0.169562}
{'[6, 6, 6, 6, 6, 6, 3, 25, 28, 0, 0, 2, 0]' : 0.172761}
{'[6, 6, 6, 6, 6, 6, 3, 25, 28, 0, 0, 2, 0]' : 0.174244}

out:
 ["{'[6, 6, 6, 6, 6, 6, 3, 25, 28, 0, 0, 2, 0]' : 0.174118}", "{'[6, 6, 6, 6, 6, 6, 3, 25, 28, 0, 0, 2, 0]' : 0.174664}", "{'[6, 6, 6, 6, 6, 6, 3, 25, 28, 0, 0, 2, 0]' : 0.17469}", "{'[6, 6, 6, 6, 6, 6, 3, 25, 28, 0, 0, 2, 0]' : 0.174197}", "{'[6, 6, 6, 6, 6, 6, 3, 25, 28, 0, 0, 2, 0]' : 0.174075}", "{'[6, 6, 6, 6, 6, 6, 3, 25, 28, 0, 0, 2, 0]' : 0.174205}", "{'[6, 6, 6, 6, 6, 6, 3, 25, 28, 0, 0, 2, 0]' : 0.173789}", "{'[6, 6, 6, 6, 6, 6, 3, 25, 28, 0, 0, 2, 0]' : 0.173814}", "{'[6, 6, 6, 6, 6, 6, 3, 25, 28, 0, 0, 2, 0]' : 0.17435}", "{'[6, 6, 6, 6, 6, 6, 3, 25, 28, 0, 0, 2, 0]' : 0.171004}", "{'[6, 6, 6, 6, 6, 6, 3, 25, 28, 0, 0, 2, 0]' : 0.169122}", "{'[6, 6, 6, 6, 6, 6, 3, 25, 28, 0, 0, 2, 0]' : 0.176324}", "{'[6, 6, 6, 6, 6, 6, 3, 25, 28, 0, 0, 2, 0]' : 0.174885}", "{'[6, 6, 6, 6, 6, 6, 3, 25, 28, 0, 0, 2, 0]' : 0.173821}", "{'[6, 6, 6, 6, 6, 6, 3, 25, 28, 0, 0, 2, 0]' : 0.16992}", "{'[6, 6, 6, 6, 6, 6, 3, 25, 28, 0, 0, 2, 0]' : 0.169622}", "{'[6, 6, 6, 6, 6, 6, 3, 25, 28, 0, 0, 2, 0]' : 0.169354}", "{'[6, 6, 6, 6, 6, 6, 3, 25, 28, 0, 0, 2, 0]' : 0.178295}", "{'[6, 6, 6, 6, 6, 6, 3, 25, 28, 0, 0, 2, 0]' : 0.178884}", "{'[6, 6, 6, 6, 6, 6, 3, 25, 28, 0, 0, 2, 0]' : 0.178573}", "{'[6, 6, 6, 6, 6, 6, 3, 25, 28, 0, 0, 2, 0]' : 0.178436}", "{'[6, 6, 6, 6, 6, 6, 3, 25, 28, 0, 0, 2, 0]' : 0.178706}", "{'[6, 6, 6, 6, 6, 6, 3, 25, 28, 0, 0, 2, 0]' : 0.178542}", "{'[6, 6, 6, 6, 6, 6, 3, 25, 28, 0, 0, 2, 0]' : 0.178515}", "{'[6, 6, 6, 6, 6, 6, 3, 25, 28, 0, 0, 2, 0]' : 0.17464}", "{'[6, 6, 6, 6, 6, 6, 3, 25, 28, 0, 0, 2, 0]' : 0.174394}", "{'[6, 6, 6, 6, 6, 6, 3, 25, 28, 0, 0, 2, 0]' : 0.175159}", "{'[6, 6, 6, 6, 6, 6, 3, 25, 28, 0, 0, 2, 0]' : 0.169562}", "{'[6, 6, 6, 6, 6, 6, 3, 25, 28, 0, 0, 2, 0]' : 0.172761}", "{'[6, 6, 6, 6, 6, 6, 3, 25, 28, 0, 0, 2, 0]' : 0.174244}"]
returning from 'run': {'[6, 6, 6, 6, 6, 6, 3, 25, 28, 0, 0, 2, 0]': ([0.174118, 0.174664, 0.17469, 0.174197, 0.174075, 0.174205, 0.173789, 0.173814, 0.17435, 0.171004, 0.169122, 0.176324, 0.174885, 0.173821, 0.16992, 0.169622, 0.169354, 0.178295, 0.178884, 0.178573, 0.178436, 0.178706, 0.178542, 0.178515, 0.17464, 0.174394, 0.175159, 0.169562, 0.172761, 0.174244], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 6, 6, 6, 6, 3, 25, 28, 0, 0, 2, 0]': ([0.174118, 0.174664, 0.17469, 0.174197, 0.174075, 0.174205, 0.173789, 0.173814, 0.17435, 0.171004, 0.169122, 0.176324, 0.174885, 0.173821, 0.16992, 0.169622, 0.169354, 0.178295, 0.178884, 0.178573, 0.178436, 0.178706, 0.178542, 0.178515, 0.17464, 0.174394, 0.175159, 0.169562, 0.172761, 0.174244], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	28
        Max loop nest depth: 	6
        Additions: 		1326
        Multiplications: 	472
        Divisions: 		0
        Logical: 		0
        Reads: 			2674
        Writes: 		351
        Comparisons:		28
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest117.exe __orio_perftest117.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest117.exe  
Program Test Output: 
{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 1, 2, 0, 0]' : 0.245542}
{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 1, 2, 0, 0]' : 0.236411}
{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 1, 2, 0, 0]' : 0.223196}
{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 1, 2, 0, 0]' : 0.21937}
{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 1, 2, 0, 0]' : 0.223558}
{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 1, 2, 0, 0]' : 0.223307}
{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 1, 2, 0, 0]' : 0.224652}
{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 1, 2, 0, 0]' : 0.221166}
{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 1, 2, 0, 0]' : 0.215085}
{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 1, 2, 0, 0]' : 0.212861}
{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 1, 2, 0, 0]' : 0.215709}
{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 1, 2, 0, 0]' : 0.214654}
{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 1, 2, 0, 0]' : 0.214224}
{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 1, 2, 0, 0]' : 0.214309}
{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 1, 2, 0, 0]' : 0.214495}
{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 1, 2, 0, 0]' : 0.21878}
{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 1, 2, 0, 0]' : 0.222762}
{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 1, 2, 0, 0]' : 0.215803}
{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 1, 2, 0, 0]' : 0.215318}
{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 1, 2, 0, 0]' : 0.214151}
{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 1, 2, 0, 0]' : 0.221912}
{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 1, 2, 0, 0]' : 0.218788}
{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 1, 2, 0, 0]' : 0.221828}
{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 1, 2, 0, 0]' : 0.221669}
{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 1, 2, 0, 0]' : 0.218951}
{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 1, 2, 0, 0]' : 0.221856}
{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 1, 2, 0, 0]' : 0.219469}
{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 1, 2, 0, 0]' : 0.224757}
{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 1, 2, 0, 0]' : 0.220648}
{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 1, 2, 0, 0]' : 0.222515}

out:
 ["{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 1, 2, 0, 0]' : 0.245542}", "{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 1, 2, 0, 0]' : 0.236411}", "{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 1, 2, 0, 0]' : 0.223196}", "{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 1, 2, 0, 0]' : 0.21937}", "{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 1, 2, 0, 0]' : 0.223558}", "{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 1, 2, 0, 0]' : 0.223307}", "{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 1, 2, 0, 0]' : 0.224652}", "{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 1, 2, 0, 0]' : 0.221166}", "{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 1, 2, 0, 0]' : 0.215085}", "{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 1, 2, 0, 0]' : 0.212861}", "{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 1, 2, 0, 0]' : 0.215709}", "{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 1, 2, 0, 0]' : 0.214654}", "{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 1, 2, 0, 0]' : 0.214224}", "{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 1, 2, 0, 0]' : 0.214309}", "{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 1, 2, 0, 0]' : 0.214495}", "{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 1, 2, 0, 0]' : 0.21878}", "{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 1, 2, 0, 0]' : 0.222762}", "{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 1, 2, 0, 0]' : 0.215803}", "{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 1, 2, 0, 0]' : 0.215318}", "{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 1, 2, 0, 0]' : 0.214151}", "{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 1, 2, 0, 0]' : 0.221912}", "{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 1, 2, 0, 0]' : 0.218788}", "{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 1, 2, 0, 0]' : 0.221828}", "{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 1, 2, 0, 0]' : 0.221669}", "{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 1, 2, 0, 0]' : 0.218951}", "{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 1, 2, 0, 0]' : 0.221856}", "{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 1, 2, 0, 0]' : 0.219469}", "{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 1, 2, 0, 0]' : 0.224757}", "{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 1, 2, 0, 0]' : 0.220648}", "{'[6, 6, 6, 6, 6, 6, 29, 25, 0, 1, 2, 0, 0]' : 0.222515}"]
returning from 'run': {'[6, 6, 6, 6, 6, 6, 29, 25, 0, 1, 2, 0, 0]': ([0.245542, 0.236411, 0.223196, 0.21937, 0.223558, 0.223307, 0.224652, 0.221166, 0.215085, 0.212861, 0.215709, 0.214654, 0.214224, 0.214309, 0.214495, 0.21878, 0.222762, 0.215803, 0.215318, 0.214151, 0.221912, 0.218788, 0.221828, 0.221669, 0.218951, 0.221856, 0.219469, 0.224757, 0.220648, 0.222515], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 6, 6, 6, 6, 29, 25, 0, 1, 2, 0, 0]': ([0.245542, 0.236411, 0.223196, 0.21937, 0.223558, 0.223307, 0.224652, 0.221166, 0.215085, 0.212861, 0.215709, 0.214654, 0.214224, 0.214309, 0.214495, 0.21878, 0.222762, 0.215803, 0.215318, 0.214151, 0.221912, 0.218788, 0.221828, 0.221669, 0.218951, 0.221856, 0.219469, 0.224757, 0.220648, 0.222515], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	24
        Max loop nest depth: 	5
        Additions: 		12702
        Multiplications: 	3776
        Divisions: 		0
        Logical: 		0
        Reads: 			19150
        Writes: 		1987
        Comparisons:		24
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest118.exe __orio_perftest118.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest118.exe  
Program Test Output: 
{'[6, 6, 0, 0, 6, 6, 21, 25, 0, 29, 2, 0, 0]' : 0.225675}
{'[6, 6, 0, 0, 6, 6, 21, 25, 0, 29, 2, 0, 0]' : 0.225269}
{'[6, 6, 0, 0, 6, 6, 21, 25, 0, 29, 2, 0, 0]' : 0.205009}
{'[6, 6, 0, 0, 6, 6, 21, 25, 0, 29, 2, 0, 0]' : 0.199605}
{'[6, 6, 0, 0, 6, 6, 21, 25, 0, 29, 2, 0, 0]' : 0.199499}
{'[6, 6, 0, 0, 6, 6, 21, 25, 0, 29, 2, 0, 0]' : 0.197022}
{'[6, 6, 0, 0, 6, 6, 21, 25, 0, 29, 2, 0, 0]' : 0.204145}
{'[6, 6, 0, 0, 6, 6, 21, 25, 0, 29, 2, 0, 0]' : 0.203192}
{'[6, 6, 0, 0, 6, 6, 21, 25, 0, 29, 2, 0, 0]' : 0.20472}
{'[6, 6, 0, 0, 6, 6, 21, 25, 0, 29, 2, 0, 0]' : 0.204791}
{'[6, 6, 0, 0, 6, 6, 21, 25, 0, 29, 2, 0, 0]' : 0.202615}
{'[6, 6, 0, 0, 6, 6, 21, 25, 0, 29, 2, 0, 0]' : 0.206174}
{'[6, 6, 0, 0, 6, 6, 21, 25, 0, 29, 2, 0, 0]' : 0.207001}
{'[6, 6, 0, 0, 6, 6, 21, 25, 0, 29, 2, 0, 0]' : 0.205207}
{'[6, 6, 0, 0, 6, 6, 21, 25, 0, 29, 2, 0, 0]' : 0.199841}
{'[6, 6, 0, 0, 6, 6, 21, 25, 0, 29, 2, 0, 0]' : 0.199077}
{'[6, 6, 0, 0, 6, 6, 21, 25, 0, 29, 2, 0, 0]' : 0.202691}
{'[6, 6, 0, 0, 6, 6, 21, 25, 0, 29, 2, 0, 0]' : 0.203708}
{'[6, 6, 0, 0, 6, 6, 21, 25, 0, 29, 2, 0, 0]' : 0.199478}
{'[6, 6, 0, 0, 6, 6, 21, 25, 0, 29, 2, 0, 0]' : 0.19743}
{'[6, 6, 0, 0, 6, 6, 21, 25, 0, 29, 2, 0, 0]' : 0.198773}
{'[6, 6, 0, 0, 6, 6, 21, 25, 0, 29, 2, 0, 0]' : 0.197543}
{'[6, 6, 0, 0, 6, 6, 21, 25, 0, 29, 2, 0, 0]' : 0.199344}
{'[6, 6, 0, 0, 6, 6, 21, 25, 0, 29, 2, 0, 0]' : 0.200988}
{'[6, 6, 0, 0, 6, 6, 21, 25, 0, 29, 2, 0, 0]' : 0.198579}
{'[6, 6, 0, 0, 6, 6, 21, 25, 0, 29, 2, 0, 0]' : 0.199297}
{'[6, 6, 0, 0, 6, 6, 21, 25, 0, 29, 2, 0, 0]' : 0.205149}
{'[6, 6, 0, 0, 6, 6, 21, 25, 0, 29, 2, 0, 0]' : 0.205868}
{'[6, 6, 0, 0, 6, 6, 21, 25, 0, 29, 2, 0, 0]' : 0.203436}
{'[6, 6, 0, 0, 6, 6, 21, 25, 0, 29, 2, 0, 0]' : 0.203178}

out:
 ["{'[6, 6, 0, 0, 6, 6, 21, 25, 0, 29, 2, 0, 0]' : 0.225675}", "{'[6, 6, 0, 0, 6, 6, 21, 25, 0, 29, 2, 0, 0]' : 0.225269}", "{'[6, 6, 0, 0, 6, 6, 21, 25, 0, 29, 2, 0, 0]' : 0.205009}", "{'[6, 6, 0, 0, 6, 6, 21, 25, 0, 29, 2, 0, 0]' : 0.199605}", "{'[6, 6, 0, 0, 6, 6, 21, 25, 0, 29, 2, 0, 0]' : 0.199499}", "{'[6, 6, 0, 0, 6, 6, 21, 25, 0, 29, 2, 0, 0]' : 0.197022}", "{'[6, 6, 0, 0, 6, 6, 21, 25, 0, 29, 2, 0, 0]' : 0.204145}", "{'[6, 6, 0, 0, 6, 6, 21, 25, 0, 29, 2, 0, 0]' : 0.203192}", "{'[6, 6, 0, 0, 6, 6, 21, 25, 0, 29, 2, 0, 0]' : 0.20472}", "{'[6, 6, 0, 0, 6, 6, 21, 25, 0, 29, 2, 0, 0]' : 0.204791}", "{'[6, 6, 0, 0, 6, 6, 21, 25, 0, 29, 2, 0, 0]' : 0.202615}", "{'[6, 6, 0, 0, 6, 6, 21, 25, 0, 29, 2, 0, 0]' : 0.206174}", "{'[6, 6, 0, 0, 6, 6, 21, 25, 0, 29, 2, 0, 0]' : 0.207001}", "{'[6, 6, 0, 0, 6, 6, 21, 25, 0, 29, 2, 0, 0]' : 0.205207}", "{'[6, 6, 0, 0, 6, 6, 21, 25, 0, 29, 2, 0, 0]' : 0.199841}", "{'[6, 6, 0, 0, 6, 6, 21, 25, 0, 29, 2, 0, 0]' : 0.199077}", "{'[6, 6, 0, 0, 6, 6, 21, 25, 0, 29, 2, 0, 0]' : 0.202691}", "{'[6, 6, 0, 0, 6, 6, 21, 25, 0, 29, 2, 0, 0]' : 0.203708}", "{'[6, 6, 0, 0, 6, 6, 21, 25, 0, 29, 2, 0, 0]' : 0.199478}", "{'[6, 6, 0, 0, 6, 6, 21, 25, 0, 29, 2, 0, 0]' : 0.19743}", "{'[6, 6, 0, 0, 6, 6, 21, 25, 0, 29, 2, 0, 0]' : 0.198773}", "{'[6, 6, 0, 0, 6, 6, 21, 25, 0, 29, 2, 0, 0]' : 0.197543}", "{'[6, 6, 0, 0, 6, 6, 21, 25, 0, 29, 2, 0, 0]' : 0.199344}", "{'[6, 6, 0, 0, 6, 6, 21, 25, 0, 29, 2, 0, 0]' : 0.200988}", "{'[6, 6, 0, 0, 6, 6, 21, 25, 0, 29, 2, 0, 0]' : 0.198579}", "{'[6, 6, 0, 0, 6, 6, 21, 25, 0, 29, 2, 0, 0]' : 0.199297}", "{'[6, 6, 0, 0, 6, 6, 21, 25, 0, 29, 2, 0, 0]' : 0.205149}", "{'[6, 6, 0, 0, 6, 6, 21, 25, 0, 29, 2, 0, 0]' : 0.205868}", "{'[6, 6, 0, 0, 6, 6, 21, 25, 0, 29, 2, 0, 0]' : 0.203436}", "{'[6, 6, 0, 0, 6, 6, 21, 25, 0, 29, 2, 0, 0]' : 0.203178}"]
returning from 'run': {'[6, 6, 0, 0, 6, 6, 21, 25, 0, 29, 2, 0, 0]': ([0.225675, 0.225269, 0.205009, 0.199605, 0.199499, 0.197022, 0.204145, 0.203192, 0.20472, 0.204791, 0.202615, 0.206174, 0.207001, 0.205207, 0.199841, 0.199077, 0.202691, 0.203708, 0.199478, 0.19743, 0.198773, 0.197543, 0.199344, 0.200988, 0.198579, 0.199297, 0.205149, 0.205868, 0.203436, 0.203178], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 0, 0, 6, 6, 21, 25, 0, 29, 2, 0, 0]': ([0.225675, 0.225269, 0.205009, 0.199605, 0.199499, 0.197022, 0.204145, 0.203192, 0.20472, 0.204791, 0.202615, 0.206174, 0.207001, 0.205207, 0.199841, 0.199077, 0.202691, 0.203708, 0.199478, 0.19743, 0.198773, 0.197543, 0.199344, 0.200988, 0.198579, 0.199297, 0.205149, 0.205868, 0.203436, 0.203178], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	6
        Additions: 		7260
        Multiplications: 	2160
        Divisions: 		0
        Logical: 		0
        Reads: 			11070
        Writes: 		1182
        Comparisons:		22
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest119.exe __orio_perftest119.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest119.exe  
Program Test Output: 
{'[6, 6, 5, 6, 6, 6, 29, 25, 0, 29, 0, 1, 0]' : 0.142948}
{'[6, 6, 5, 6, 6, 6, 29, 25, 0, 29, 0, 1, 0]' : 0.142802}
{'[6, 6, 5, 6, 6, 6, 29, 25, 0, 29, 0, 1, 0]' : 0.14274}
{'[6, 6, 5, 6, 6, 6, 29, 25, 0, 29, 0, 1, 0]' : 0.142154}
{'[6, 6, 5, 6, 6, 6, 29, 25, 0, 29, 0, 1, 0]' : 0.142729}
{'[6, 6, 5, 6, 6, 6, 29, 25, 0, 29, 0, 1, 0]' : 0.142657}
{'[6, 6, 5, 6, 6, 6, 29, 25, 0, 29, 0, 1, 0]' : 0.142941}
{'[6, 6, 5, 6, 6, 6, 29, 25, 0, 29, 0, 1, 0]' : 0.142798}
{'[6, 6, 5, 6, 6, 6, 29, 25, 0, 29, 0, 1, 0]' : 0.142735}
{'[6, 6, 5, 6, 6, 6, 29, 25, 0, 29, 0, 1, 0]' : 0.143006}
{'[6, 6, 5, 6, 6, 6, 29, 25, 0, 29, 0, 1, 0]' : 0.142997}
{'[6, 6, 5, 6, 6, 6, 29, 25, 0, 29, 0, 1, 0]' : 0.142811}
{'[6, 6, 5, 6, 6, 6, 29, 25, 0, 29, 0, 1, 0]' : 0.142638}
{'[6, 6, 5, 6, 6, 6, 29, 25, 0, 29, 0, 1, 0]' : 0.142904}
{'[6, 6, 5, 6, 6, 6, 29, 25, 0, 29, 0, 1, 0]' : 0.142586}
{'[6, 6, 5, 6, 6, 6, 29, 25, 0, 29, 0, 1, 0]' : 0.142774}
{'[6, 6, 5, 6, 6, 6, 29, 25, 0, 29, 0, 1, 0]' : 0.142592}
{'[6, 6, 5, 6, 6, 6, 29, 25, 0, 29, 0, 1, 0]' : 0.14284}
{'[6, 6, 5, 6, 6, 6, 29, 25, 0, 29, 0, 1, 0]' : 0.142653}
{'[6, 6, 5, 6, 6, 6, 29, 25, 0, 29, 0, 1, 0]' : 0.142507}
{'[6, 6, 5, 6, 6, 6, 29, 25, 0, 29, 0, 1, 0]' : 0.142969}
{'[6, 6, 5, 6, 6, 6, 29, 25, 0, 29, 0, 1, 0]' : 0.142811}
{'[6, 6, 5, 6, 6, 6, 29, 25, 0, 29, 0, 1, 0]' : 0.142837}
{'[6, 6, 5, 6, 6, 6, 29, 25, 0, 29, 0, 1, 0]' : 0.142744}
{'[6, 6, 5, 6, 6, 6, 29, 25, 0, 29, 0, 1, 0]' : 0.14322}
{'[6, 6, 5, 6, 6, 6, 29, 25, 0, 29, 0, 1, 0]' : 0.141196}
{'[6, 6, 5, 6, 6, 6, 29, 25, 0, 29, 0, 1, 0]' : 0.13947}
{'[6, 6, 5, 6, 6, 6, 29, 25, 0, 29, 0, 1, 0]' : 0.139973}
{'[6, 6, 5, 6, 6, 6, 29, 25, 0, 29, 0, 1, 0]' : 0.139287}
{'[6, 6, 5, 6, 6, 6, 29, 25, 0, 29, 0, 1, 0]' : 0.139302}

out:
 ["{'[6, 6, 5, 6, 6, 6, 29, 25, 0, 29, 0, 1, 0]' : 0.142948}", "{'[6, 6, 5, 6, 6, 6, 29, 25, 0, 29, 0, 1, 0]' : 0.142802}", "{'[6, 6, 5, 6, 6, 6, 29, 25, 0, 29, 0, 1, 0]' : 0.14274}", "{'[6, 6, 5, 6, 6, 6, 29, 25, 0, 29, 0, 1, 0]' : 0.142154}", "{'[6, 6, 5, 6, 6, 6, 29, 25, 0, 29, 0, 1, 0]' : 0.142729}", "{'[6, 6, 5, 6, 6, 6, 29, 25, 0, 29, 0, 1, 0]' : 0.142657}", "{'[6, 6, 5, 6, 6, 6, 29, 25, 0, 29, 0, 1, 0]' : 0.142941}", "{'[6, 6, 5, 6, 6, 6, 29, 25, 0, 29, 0, 1, 0]' : 0.142798}", "{'[6, 6, 5, 6, 6, 6, 29, 25, 0, 29, 0, 1, 0]' : 0.142735}", "{'[6, 6, 5, 6, 6, 6, 29, 25, 0, 29, 0, 1, 0]' : 0.143006}", "{'[6, 6, 5, 6, 6, 6, 29, 25, 0, 29, 0, 1, 0]' : 0.142997}", "{'[6, 6, 5, 6, 6, 6, 29, 25, 0, 29, 0, 1, 0]' : 0.142811}", "{'[6, 6, 5, 6, 6, 6, 29, 25, 0, 29, 0, 1, 0]' : 0.142638}", "{'[6, 6, 5, 6, 6, 6, 29, 25, 0, 29, 0, 1, 0]' : 0.142904}", "{'[6, 6, 5, 6, 6, 6, 29, 25, 0, 29, 0, 1, 0]' : 0.142586}", "{'[6, 6, 5, 6, 6, 6, 29, 25, 0, 29, 0, 1, 0]' : 0.142774}", "{'[6, 6, 5, 6, 6, 6, 29, 25, 0, 29, 0, 1, 0]' : 0.142592}", "{'[6, 6, 5, 6, 6, 6, 29, 25, 0, 29, 0, 1, 0]' : 0.14284}", "{'[6, 6, 5, 6, 6, 6, 29, 25, 0, 29, 0, 1, 0]' : 0.142653}", "{'[6, 6, 5, 6, 6, 6, 29, 25, 0, 29, 0, 1, 0]' : 0.142507}", "{'[6, 6, 5, 6, 6, 6, 29, 25, 0, 29, 0, 1, 0]' : 0.142969}", "{'[6, 6, 5, 6, 6, 6, 29, 25, 0, 29, 0, 1, 0]' : 0.142811}", "{'[6, 6, 5, 6, 6, 6, 29, 25, 0, 29, 0, 1, 0]' : 0.142837}", "{'[6, 6, 5, 6, 6, 6, 29, 25, 0, 29, 0, 1, 0]' : 0.142744}", "{'[6, 6, 5, 6, 6, 6, 29, 25, 0, 29, 0, 1, 0]' : 0.14322}", "{'[6, 6, 5, 6, 6, 6, 29, 25, 0, 29, 0, 1, 0]' : 0.141196}", "{'[6, 6, 5, 6, 6, 6, 29, 25, 0, 29, 0, 1, 0]' : 0.13947}", "{'[6, 6, 5, 6, 6, 6, 29, 25, 0, 29, 0, 1, 0]' : 0.139973}", "{'[6, 6, 5, 6, 6, 6, 29, 25, 0, 29, 0, 1, 0]' : 0.139287}", "{'[6, 6, 5, 6, 6, 6, 29, 25, 0, 29, 0, 1, 0]' : 0.139302}"]
returning from 'run': {'[6, 6, 5, 6, 6, 6, 29, 25, 0, 29, 0, 1, 0]': ([0.142948, 0.142802, 0.14274, 0.142154, 0.142729, 0.142657, 0.142941, 0.142798, 0.142735, 0.143006, 0.142997, 0.142811, 0.142638, 0.142904, 0.142586, 0.142774, 0.142592, 0.14284, 0.142653, 0.142507, 0.142969, 0.142811, 0.142837, 0.142744, 0.14322, 0.141196, 0.13947, 0.139973, 0.139287, 0.139302], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 5, 6, 6, 6, 29, 25, 0, 29, 0, 1, 0]': ([0.142948, 0.142802, 0.14274, 0.142154, 0.142729, 0.142657, 0.142941, 0.142798, 0.142735, 0.143006, 0.142997, 0.142811, 0.142638, 0.142904, 0.142586, 0.142774, 0.142592, 0.14284, 0.142653, 0.142507, 0.142969, 0.142811, 0.142837, 0.142744, 0.14322, 0.141196, 0.13947, 0.139973, 0.139287, 0.139302], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Length of requested configs: 1
Code stats:
        Number of loops: 	30
        Max loop nest depth: 	5
        Additions: 		9299
        Multiplications: 	2800
        Divisions: 		0
        Logical: 		0
        Reads: 			14328
        Writes: 		1519
        Comparisons:		30
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest120.exe __orio_perftest120.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest120.exe  
Program Test Output: 
{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 1, 0, 1]' : 0.117093}
{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 1, 0, 1]' : 0.11847}
{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 1, 0, 1]' : 0.115952}
{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 1, 0, 1]' : 0.116194}
{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 1, 0, 1]' : 0.116133}
{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 1, 0, 1]' : 0.119176}
{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 1, 0, 1]' : 0.116117}
{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 1, 0, 1]' : 0.116176}
{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 1, 0, 1]' : 0.115972}
{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 1, 0, 1]' : 0.118248}
{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 1, 0, 1]' : 0.119082}
{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 1, 0, 1]' : 0.116742}
{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 1, 0, 1]' : 0.115993}
{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 1, 0, 1]' : 0.117433}
{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 1, 0, 1]' : 0.119327}
{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 1, 0, 1]' : 0.116711}
{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 1, 0, 1]' : 0.116079}
{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 1, 0, 1]' : 0.116583}
{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 1, 0, 1]' : 0.119062}
{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 1, 0, 1]' : 0.118383}
{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 1, 0, 1]' : 0.11596}
{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 1, 0, 1]' : 0.116078}
{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 1, 0, 1]' : 0.118867}
{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 1, 0, 1]' : 0.118246}
{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 1, 0, 1]' : 0.11602}
{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 1, 0, 1]' : 0.115978}
{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 1, 0, 1]' : 0.117964}
{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 1, 0, 1]' : 0.11941}
{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 1, 0, 1]' : 0.119159}
{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 1, 0, 1]' : 0.11925}

out:
 ["{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 1, 0, 1]' : 0.117093}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 1, 0, 1]' : 0.11847}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 1, 0, 1]' : 0.115952}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 1, 0, 1]' : 0.116194}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 1, 0, 1]' : 0.116133}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 1, 0, 1]' : 0.119176}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 1, 0, 1]' : 0.116117}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 1, 0, 1]' : 0.116176}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 1, 0, 1]' : 0.115972}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 1, 0, 1]' : 0.118248}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 1, 0, 1]' : 0.119082}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 1, 0, 1]' : 0.116742}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 1, 0, 1]' : 0.115993}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 1, 0, 1]' : 0.117433}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 1, 0, 1]' : 0.119327}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 1, 0, 1]' : 0.116711}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 1, 0, 1]' : 0.116079}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 1, 0, 1]' : 0.116583}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 1, 0, 1]' : 0.119062}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 1, 0, 1]' : 0.118383}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 1, 0, 1]' : 0.11596}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 1, 0, 1]' : 0.116078}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 1, 0, 1]' : 0.118867}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 1, 0, 1]' : 0.118246}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 1, 0, 1]' : 0.11602}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 1, 0, 1]' : 0.115978}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 1, 0, 1]' : 0.117964}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 1, 0, 1]' : 0.11941}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 1, 0, 1]' : 0.119159}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 1, 0, 1]' : 0.11925}"]
returning from 'run': {'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 1, 0, 1]': ([0.117093, 0.11847, 0.115952, 0.116194, 0.116133, 0.119176, 0.116117, 0.116176, 0.115972, 0.118248, 0.119082, 0.116742, 0.115993, 0.117433, 0.119327, 0.116711, 0.116079, 0.116583, 0.119062, 0.118383, 0.11596, 0.116078, 0.118867, 0.118246, 0.11602, 0.115978, 0.117964, 0.11941, 0.119159, 0.11925], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 1, 0, 1]': ([0.117093, 0.11847, 0.115952, 0.116194, 0.116133, 0.119176, 0.116117, 0.116176, 0.115972, 0.118248, 0.119082, 0.116742, 0.115993, 0.117433, 0.119327, 0.116711, 0.116079, 0.116583, 0.119062, 0.118383, 0.11596, 0.116078, 0.118867, 0.118246, 0.11602, 0.115978, 0.117964, 0.11941, 0.119159, 0.11925], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Complete design, with measurements:
      T1_K T2_I U1_I U_J U_K RT_I RT_J RT_K cost_mean
3340     6    0    0   0   4    0    0    0 0.1455555
5058     0    6    3   0  26    0    0    2 0.1710756
5354     0    6    2   0  28    0    2    0 0.1556809
5420     6    6    0  29   0    2    0    0 0.2813827
7846     5    0    2   0  28    0    0    0 0.1736433
8800     0    0    7   3   0    0    2    0 0.1613114
14959    0    6    0   0   0    0    0    2 0.1685547
15369    0    6   29  29   0    0    0    0 0.1647978
15477    6    6    3  28   0    0    2    0 0.1744222
15681    6    6   29   0   1    2    0    0 0.2205915
19021    0    0   21   0  29    2    0    0 0.2034768
24101    5    6   29   0  29    0    1    0 0.1422874
24271    6    0   29  29   0    1    0    1 0.1173953

Heteroscedasticity Test p-value: 0.49663514988
Regression Step:            Df   Sum Sq  Mean Sq F value  Pr(>F)   
T1_K         1 0.000373 0.000373   0.748 0.43581   
T2_I         1 0.002025 0.002025   4.059 0.11419   
U1_I         1 0.000855 0.000855   1.714 0.26056   
U_J          1 0.000148 0.000148   0.297 0.61487   
U_K          1 0.000024 0.000024   0.048 0.83789   
RT_I         1 0.012967 0.012967  25.986 0.00699 **
RT_J         1 0.000029 0.000029   0.058 0.82219   
RT_K         1 0.001766 0.001766   3.540 0.13305   
Residuals    4 0.001996 0.000499                   
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Predicting Best
Generating valid search space of size 26000 (does not spend evaluations)
Tested coordinates: 10000
Tested coordinates: 20000
Tested coordinates: 30000
Tested coordinates: 40000
Tested coordinates: 50000
Tested coordinates: 60000
Tested coordinates: 70000
Tested coordinates: 80000
Tested coordinates: 90000
Tested coordinates: 100000
Tested coordinates: 110000
Tested coordinates: 120000
Tested coordinates: 130000
Tested coordinates: 140000
Tested coordinates: 150000
Tested coordinates: 160000
Tested coordinates: 170000
Tested coordinates: 180000
Tested coordinates: 190000
Tested coordinates: 200000
Tested coordinates: 210000
Tested coordinates: 220000
Tested coordinates: 230000
Tested coordinates: 240000
Tested coordinates: 250000
Tested coordinates: 260000
Tested coordinates: 270000
Tested coordinates: 280000
Tested coordinates: 290000
Tested coordinates: 300000
Tested coordinates: 310000
Tested coordinates: 320000
Tested coordinates: 330000
Tested coordinates: 340000
Tested coordinates: 350000
Tested coordinates: 360000
Tested coordinates: 370000
Tested coordinates: 380000
Valid coordinates: 5200
Tested coordinates: 390000
Tested coordinates: 400000
Tested coordinates: 410000
Tested coordinates: 420000
Tested coordinates: 430000
Tested coordinates: 440000
Tested coordinates: 450000
Tested coordinates: 460000
Tested coordinates: 470000
Tested coordinates: 480000
Tested coordinates: 490000
Tested coordinates: 500000
Tested coordinates: 510000
Tested coordinates: 520000
Tested coordinates: 530000
Tested coordinates: 540000
Tested coordinates: 550000
Tested coordinates: 560000
Tested coordinates: 570000
Tested coordinates: 580000
Tested coordinates: 590000
Tested coordinates: 600000
Tested coordinates: 610000
Tested coordinates: 620000
Tested coordinates: 630000
Tested coordinates: 640000
Tested coordinates: 650000
Tested coordinates: 660000
Tested coordinates: 670000
Tested coordinates: 680000
Tested coordinates: 690000
Tested coordinates: 700000
Tested coordinates: 710000
Tested coordinates: 720000
Tested coordinates: 730000
Tested coordinates: 740000
Tested coordinates: 750000
Valid coordinates: 10400
Tested coordinates: 760000
Tested coordinates: 770000
Tested coordinates: 780000
Tested coordinates: 790000
Tested coordinates: 800000
Tested coordinates: 810000
Tested coordinates: 820000
Tested coordinates: 830000
Tested coordinates: 840000
Tested coordinates: 850000
Tested coordinates: 860000
Tested coordinates: 870000
Tested coordinates: 880000
Tested coordinates: 890000
Tested coordinates: 900000
Tested coordinates: 910000
Tested coordinates: 920000
Tested coordinates: 930000
Tested coordinates: 940000
Tested coordinates: 950000
Tested coordinates: 960000
Tested coordinates: 970000
Tested coordinates: 980000
Tested coordinates: 990000
Tested coordinates: 1000000
Tested coordinates: 1010000
Tested coordinates: 1020000
Tested coordinates: 1030000
Tested coordinates: 1040000
Tested coordinates: 1050000
Tested coordinates: 1060000
Tested coordinates: 1070000
Tested coordinates: 1080000
Tested coordinates: 1090000
Tested coordinates: 1100000
Tested coordinates: 1110000
Tested coordinates: 1120000
Valid coordinates: 15600
Tested coordinates: 1130000
Tested coordinates: 1140000
Tested coordinates: 1150000
Tested coordinates: 1160000
Tested coordinates: 1170000
Tested coordinates: 1180000
Tested coordinates: 1190000
Tested coordinates: 1200000
Tested coordinates: 1210000
Tested coordinates: 1220000
Tested coordinates: 1230000
Tested coordinates: 1240000
Tested coordinates: 1250000
Tested coordinates: 1260000
Tested coordinates: 1270000
Tested coordinates: 1280000
Tested coordinates: 1290000
Tested coordinates: 1300000
Tested coordinates: 1310000
Tested coordinates: 1320000
Tested coordinates: 1330000
Tested coordinates: 1340000
Tested coordinates: 1350000
Tested coordinates: 1360000
Tested coordinates: 1370000
Tested coordinates: 1380000
Tested coordinates: 1390000
Tested coordinates: 1400000
Tested coordinates: 1410000
Tested coordinates: 1420000
Tested coordinates: 1430000
Tested coordinates: 1440000
Tested coordinates: 1450000
Tested coordinates: 1460000
Tested coordinates: 1470000
Tested coordinates: 1480000
Tested coordinates: 1490000
Tested coordinates: 1500000
Valid coordinates: 20800
Tested coordinates: 1510000
Tested coordinates: 1520000
Tested coordinates: 1530000
Tested coordinates: 1540000
Tested coordinates: 1550000
Tested coordinates: 1560000
Tested coordinates: 1570000
Tested coordinates: 1580000
Tested coordinates: 1590000
Tested coordinates: 1600000
Tested coordinates: 1610000
Tested coordinates: 1620000
Tested coordinates: 1630000
Tested coordinates: 1640000
Tested coordinates: 1650000
Tested coordinates: 1660000
Tested coordinates: 1670000
Tested coordinates: 1680000
Tested coordinates: 1690000
Tested coordinates: 1700000
Tested coordinates: 1710000
Tested coordinates: 1720000
Tested coordinates: 1730000
Tested coordinates: 1740000
Tested coordinates: 1750000
Tested coordinates: 1760000
Tested coordinates: 1770000
Tested coordinates: 1780000
Tested coordinates: 1790000
Tested coordinates: 1800000
Tested coordinates: 1810000
Tested coordinates: 1820000
Tested coordinates: 1830000
Tested coordinates: 1840000
Tested coordinates: 1850000
Tested coordinates: 1860000
Tested coordinates: 1870000
Valid coordinates: 26000
Valid/Tested configurations: 26000/1872649
Generated Search Space:
NULL
Getting Best from Design
Response: ['cost_mean']
Design Names: [1] "T1_K"      "T2_I"      "U1_I"      "U_J"       "U_K"       "RT_I"     
[7] "RT_J"      "RT_K"      "cost_mean"

Design Response:       cost_mean
3340  0.1455555
5058  0.1710756
5354  0.1556809
5420  0.2813827
7846  0.1736433
8800  0.1613114
14959 0.1685547
15369 0.1647978
15477 0.1744222
15681 0.2205915
19021 0.2034768
24101 0.1422874
24271 0.1173953

Current Design Names: ['T1_K', 'T2_I', 'U1_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Initial Factors: ['T1_I', 'T1_J', 'T1_K', 'T2_I', 'T2_J', 'T2_K', 'U1_I', 'U_I', 'U_J', 'U_K', 'RT_I', 'RT_J', 'RT_K']
Getting fixed variables
Variables within threshold: ['RT_I']
Fixed Variables: {'T2_K': 6, 'T2_J': 6, 'U_I': 25, 'T1_I': 6, 'T1_J': 6}
Unique Variables: ['RT_I']
Pruning Model
Variables within threshold: ['RT_I']
Best Predicted:       T1_I T1_J T1_K T2_I T2_J T2_K U1_I U_I U_J U_K RT_I RT_J RT_K
17428    6    6    6    0    6    6   29  25   0  20    0    0    2

Best From Design: [6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 1, 0, 1]
Pruned Factors: ['T1_K', 'T2_I', 'U1_I', 'U_J', 'U_K', 'RT_J', 'RT_K']
Pruned Inverse Factors: []
Pruned Interactions: []
Fixed Factors: {'T1_I': 6, 'RT_I': 0, 'U_I': 25, 'T2_K': 6, 'T2_J': 6, 'T1_J': 6}
Length of requested configs: 1
Result was on Database, Returning Now
Starting Point (-O3):
0.16059526666666663
Predicted Best Point:
[6, 6, 6, 0, 6, 6, 29, 25, 0, 20, 0, 0, 2]
Length of requested configs: 1
Code stats:
        Number of loops: 	71
        Max loop nest depth: 	5
        Additions: 		10421
        Multiplications: 	2970
        Divisions: 		0
        Logical: 		0
        Reads: 			15563
        Writes: 		1685
        Comparisons:		71
        Gotos: 			0
        
 building test:
	gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=30 -o __orio_perftest121.exe __orio_perftest121.c timer_cpu.o -lm
 running test:
	 ./__orio_perftest121.exe  
Program Test Output: 
{'[6, 6, 6, 0, 6, 6, 29, 25, 0, 20, 0, 0, 2]' : 0.193029}
{'[6, 6, 6, 0, 6, 6, 29, 25, 0, 20, 0, 0, 2]' : 0.180606}
{'[6, 6, 6, 0, 6, 6, 29, 25, 0, 20, 0, 0, 2]' : 0.166674}
{'[6, 6, 6, 0, 6, 6, 29, 25, 0, 20, 0, 0, 2]' : 0.166698}
{'[6, 6, 6, 0, 6, 6, 29, 25, 0, 20, 0, 0, 2]' : 0.16731}
{'[6, 6, 6, 0, 6, 6, 29, 25, 0, 20, 0, 0, 2]' : 0.166716}
{'[6, 6, 6, 0, 6, 6, 29, 25, 0, 20, 0, 0, 2]' : 0.166745}
{'[6, 6, 6, 0, 6, 6, 29, 25, 0, 20, 0, 0, 2]' : 0.167189}
{'[6, 6, 6, 0, 6, 6, 29, 25, 0, 20, 0, 0, 2]' : 0.166726}
{'[6, 6, 6, 0, 6, 6, 29, 25, 0, 20, 0, 0, 2]' : 0.166693}
{'[6, 6, 6, 0, 6, 6, 29, 25, 0, 20, 0, 0, 2]' : 0.167336}
{'[6, 6, 6, 0, 6, 6, 29, 25, 0, 20, 0, 0, 2]' : 0.166871}
{'[6, 6, 6, 0, 6, 6, 29, 25, 0, 20, 0, 0, 2]' : 0.166736}
{'[6, 6, 6, 0, 6, 6, 29, 25, 0, 20, 0, 0, 2]' : 0.16666}
{'[6, 6, 6, 0, 6, 6, 29, 25, 0, 20, 0, 0, 2]' : 0.166682}
{'[6, 6, 6, 0, 6, 6, 29, 25, 0, 20, 0, 0, 2]' : 0.166563}
{'[6, 6, 6, 0, 6, 6, 29, 25, 0, 20, 0, 0, 2]' : 0.166761}
{'[6, 6, 6, 0, 6, 6, 29, 25, 0, 20, 0, 0, 2]' : 0.166671}
{'[6, 6, 6, 0, 6, 6, 29, 25, 0, 20, 0, 0, 2]' : 0.16687}
{'[6, 6, 6, 0, 6, 6, 29, 25, 0, 20, 0, 0, 2]' : 0.166672}
{'[6, 6, 6, 0, 6, 6, 29, 25, 0, 20, 0, 0, 2]' : 0.166997}
{'[6, 6, 6, 0, 6, 6, 29, 25, 0, 20, 0, 0, 2]' : 0.166624}
{'[6, 6, 6, 0, 6, 6, 29, 25, 0, 20, 0, 0, 2]' : 0.166634}
{'[6, 6, 6, 0, 6, 6, 29, 25, 0, 20, 0, 0, 2]' : 0.166694}
{'[6, 6, 6, 0, 6, 6, 29, 25, 0, 20, 0, 0, 2]' : 0.166688}
{'[6, 6, 6, 0, 6, 6, 29, 25, 0, 20, 0, 0, 2]' : 0.166563}
{'[6, 6, 6, 0, 6, 6, 29, 25, 0, 20, 0, 0, 2]' : 0.166751}
{'[6, 6, 6, 0, 6, 6, 29, 25, 0, 20, 0, 0, 2]' : 0.16736}
{'[6, 6, 6, 0, 6, 6, 29, 25, 0, 20, 0, 0, 2]' : 0.166936}
{'[6, 6, 6, 0, 6, 6, 29, 25, 0, 20, 0, 0, 2]' : 0.166688}

out:
 ["{'[6, 6, 6, 0, 6, 6, 29, 25, 0, 20, 0, 0, 2]' : 0.193029}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 0, 20, 0, 0, 2]' : 0.180606}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 0, 20, 0, 0, 2]' : 0.166674}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 0, 20, 0, 0, 2]' : 0.166698}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 0, 20, 0, 0, 2]' : 0.16731}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 0, 20, 0, 0, 2]' : 0.166716}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 0, 20, 0, 0, 2]' : 0.166745}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 0, 20, 0, 0, 2]' : 0.167189}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 0, 20, 0, 0, 2]' : 0.166726}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 0, 20, 0, 0, 2]' : 0.166693}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 0, 20, 0, 0, 2]' : 0.167336}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 0, 20, 0, 0, 2]' : 0.166871}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 0, 20, 0, 0, 2]' : 0.166736}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 0, 20, 0, 0, 2]' : 0.16666}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 0, 20, 0, 0, 2]' : 0.166682}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 0, 20, 0, 0, 2]' : 0.166563}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 0, 20, 0, 0, 2]' : 0.166761}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 0, 20, 0, 0, 2]' : 0.166671}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 0, 20, 0, 0, 2]' : 0.16687}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 0, 20, 0, 0, 2]' : 0.166672}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 0, 20, 0, 0, 2]' : 0.166997}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 0, 20, 0, 0, 2]' : 0.166624}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 0, 20, 0, 0, 2]' : 0.166634}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 0, 20, 0, 0, 2]' : 0.166694}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 0, 20, 0, 0, 2]' : 0.166688}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 0, 20, 0, 0, 2]' : 0.166563}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 0, 20, 0, 0, 2]' : 0.166751}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 0, 20, 0, 0, 2]' : 0.16736}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 0, 20, 0, 0, 2]' : 0.166936}", "{'[6, 6, 6, 0, 6, 6, 29, 25, 0, 20, 0, 0, 2]' : 0.166688}"]
returning from 'run': {'[6, 6, 6, 0, 6, 6, 29, 25, 0, 20, 0, 0, 2]': ([0.193029, 0.180606, 0.166674, 0.166698, 0.16731, 0.166716, 0.166745, 0.167189, 0.166726, 0.166693, 0.167336, 0.166871, 0.166736, 0.16666, 0.166682, 0.166563, 0.166761, 0.166671, 0.16687, 0.166672, 0.166997, 0.166624, 0.166634, 0.166694, 0.166688, 0.166563, 0.166751, 0.16736, 0.166936, 0.166688], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Stored as a sucessful configuration
Final perf_costs: {'[6, 6, 6, 0, 6, 6, 29, 25, 0, 20, 0, 0, 2]': ([0.193029, 0.180606, 0.166674, 0.166698, 0.16731, 0.166716, 0.166745, 0.167189, 0.166726, 0.166693, 0.167336, 0.166871, 0.166736, 0.16666, 0.166682, 0.166563, 0.166761, 0.166671, 0.16687, 0.166672, 0.166997, 0.166624, 0.166634, 0.166694, 0.166688, 0.166563, 0.166751, 0.16736, 0.166936, 0.166688], [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf])}
Design Best Point:
[6, 6, 6, 0, 6, 6, 29, 25, 29, 0, 1, 0, 1]
Length of requested configs: 1
Result was on Database, Returning Now
Fixed Factors: {'T1_I': 6, 'RT_I': 0, 'U_I': 25, 'T2_K': 6, 'T2_J': 6, 'T1_J': 6}
Slowdown (Design Best): 0.7310007891473764
Slowdown (Predicted Best): 1.0469679679226744
Budget: 113/180
Current Best Point: 
[6, 6, 0, 6, 6, 6, 27, 0, 3, 29, 1, 1, 0]
Final Best Point: 
[6, 6, 0, 6, 6, 6, 27, 0, 3, 29, 1, 1, 0]
Ending DLMT
Best Point: [6, 6, 0, 6, 6, 6, 27, 0, 3, 29, 1, 1, 0]
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Speedup: 1.4326664111302836
----- end DLMT -----
----- begin DLMT summary -----
 total completed runs: 0
 total successful runs: 0
 total failed runs: 0
 speedup: 1.4326664111302836
----- end DLMT summary -----
----- begin summary -----
 best coordinate: [6, 6, 0, 6, 6, 6, 27, 0, 3, 29, 1, 1, 0]={'RT_K': 1, 'T1_I': 512, 'T1_J': 512, 'T1_K': 1, 'U_K': 30, 'U_J': 4, 'U_I': 1, 'U1_I': 28, 'T2_K': 2048, 'T2_J': 2048, 'T2_I': 2048, 'RT_I': 8, 'RT_J': 8}, cost=1.120954e-01, transfer_time=inf, inputs=[('N', 10000)], search_time=-5051.57, runs=113
----- end summary -----
Length of requested configs: 1
Result was on Database, Returning Now
----- the obtained best performance parameters -----
 RT_I = 8
 RT_J = 8
 RT_K = 1
 T1_I = 512
 T1_J = 512
 T1_K = 1
 T2_I = 2048
 T2_J = 2048
 T2_K = 2048
 U1_I = 28
 U_I = 1
 U_J = 4
 U_K = 30
 cost_mean = 0.11209536666666671
 points = 113
 speedup_O3 = 1.4326664111302836
 technique = DLMT
Code stats:
        Number of loops: 	22
        Max loop nest depth: 	6
        Additions: 		2594
        Multiplications: 	792
        Divisions: 		0
        Logical: 		0
        Reads: 			4180
        Writes: 		471
        Comparisons:		22
        Gotos: 			0
        
----- finish optimizations -----

----- begin removing annotations from output-----
----- finished removing annotations from output-----

----- begin writing the output file(s) -----
--> writing output to: _atax2.src0.c
----- finished writing the output file(s) -----

====== END ORIO ======
